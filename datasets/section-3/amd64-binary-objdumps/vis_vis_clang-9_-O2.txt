
../repos/vis/vis:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0x3efc1]        # 441fd0 <isspace@plt+0x3e6c0>
  40300f:	test   rax,rax
  403012:	je     403016 <start_color@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <start_color@plt-0x10>:
  403020:	push   QWORD PTR [rip+0x3eae2]        # 441b08 <isspace@plt+0x3e1f8>
  403026:	jmp    QWORD PTR [rip+0x3eae4]        # 441b10 <isspace@plt+0x3e200>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <start_color@plt>:
  403030:	jmp    QWORD PTR [rip+0x3eae2]        # 441b18 <isspace@plt+0x3e208>
  403036:	push   0x0
  40303b:	jmp    403020 <start_color@plt-0x10>

0000000000403040 <use_default_colors@plt>:
  403040:	jmp    QWORD PTR [rip+0x3eada]        # 441b20 <isspace@plt+0x3e210>
  403046:	push   0x1
  40304b:	jmp    403020 <start_color@plt-0x10>

0000000000403050 <termkey_set_waittime@plt>:
  403050:	jmp    QWORD PTR [rip+0x3ead2]        # 441b28 <isspace@plt+0x3e218>
  403056:	push   0x2
  40305b:	jmp    403020 <start_color@plt-0x10>

0000000000403060 <getenv@plt>:
  403060:	jmp    QWORD PTR [rip+0x3eaca]        # 441b30 <isspace@plt+0x3e220>
  403066:	push   0x3
  40306b:	jmp    403020 <start_color@plt-0x10>

0000000000403070 <noecho@plt>:
  403070:	jmp    QWORD PTR [rip+0x3eac2]        # 441b38 <isspace@plt+0x3e228>
  403076:	push   0x4
  40307b:	jmp    403020 <start_color@plt-0x10>

0000000000403080 <fgetfilecon@plt>:
  403080:	jmp    QWORD PTR [rip+0x3eaba]        # 441b40 <isspace@plt+0x3e230>
  403086:	push   0x5
  40308b:	jmp    403020 <start_color@plt-0x10>

0000000000403090 <wmove@plt>:
  403090:	jmp    QWORD PTR [rip+0x3eab2]        # 441b48 <isspace@plt+0x3e238>
  403096:	push   0x6
  40309b:	jmp    403020 <start_color@plt-0x10>

00000000004030a0 <termkey_stop@plt>:
  4030a0:	jmp    QWORD PTR [rip+0x3eaaa]        # 441b50 <isspace@plt+0x3e240>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <start_color@plt-0x10>

00000000004030b0 <sigprocmask@plt>:
  4030b0:	jmp    QWORD PTR [rip+0x3eaa2]        # 441b58 <isspace@plt+0x3e248>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <start_color@plt-0x10>

00000000004030c0 <__snprintf_chk@plt>:
  4030c0:	jmp    QWORD PTR [rip+0x3ea9a]        # 441b60 <isspace@plt+0x3e250>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <start_color@plt-0x10>

00000000004030d0 <free@plt>:
  4030d0:	jmp    QWORD PTR [rip+0x3ea92]        # 441b68 <isspace@plt+0x3e258>
  4030d6:	push   0xa
  4030db:	jmp    403020 <start_color@plt-0x10>

00000000004030e0 <pair_content@plt>:
  4030e0:	jmp    QWORD PTR [rip+0x3ea8a]        # 441b70 <isspace@plt+0x3e260>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <start_color@plt-0x10>

00000000004030f0 <strcasecmp@plt>:
  4030f0:	jmp    QWORD PTR [rip+0x3ea82]        # 441b78 <isspace@plt+0x3e268>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <start_color@plt-0x10>

0000000000403100 <localtime@plt>:
  403100:	jmp    QWORD PTR [rip+0x3ea7a]        # 441b80 <isspace@plt+0x3e270>
  403106:	push   0xd
  40310b:	jmp    403020 <start_color@plt-0x10>

0000000000403110 <termkey_getkey_force@plt>:
  403110:	jmp    QWORD PTR [rip+0x3ea72]        # 441b88 <isspace@plt+0x3e278>
  403116:	push   0xe
  40311b:	jmp    403020 <start_color@plt-0x10>

0000000000403120 <__vfprintf_chk@plt>:
  403120:	jmp    QWORD PTR [rip+0x3ea6a]        # 441b90 <isspace@plt+0x3e280>
  403126:	push   0xf
  40312b:	jmp    403020 <start_color@plt-0x10>

0000000000403130 <__errno_location@plt>:
  403130:	jmp    QWORD PTR [rip+0x3ea62]        # 441b98 <isspace@plt+0x3e288>
  403136:	push   0x10
  40313b:	jmp    403020 <start_color@plt-0x10>

0000000000403140 <unlink@plt>:
  403140:	jmp    QWORD PTR [rip+0x3ea5a]        # 441ba0 <isspace@plt+0x3e290>
  403146:	push   0x11
  40314b:	jmp    403020 <start_color@plt-0x10>

0000000000403150 <strncpy@plt>:
  403150:	jmp    QWORD PTR [rip+0x3ea52]        # 441ba8 <isspace@plt+0x3e298>
  403156:	push   0x12
  40315b:	jmp    403020 <start_color@plt-0x10>

0000000000403160 <strncmp@plt>:
  403160:	jmp    QWORD PTR [rip+0x3ea4a]        # 441bb0 <isspace@plt+0x3e2a0>
  403166:	push   0x13
  40316b:	jmp    403020 <start_color@plt-0x10>

0000000000403170 <strcpy@plt>:
  403170:	jmp    QWORD PTR [rip+0x3ea42]        # 441bb8 <isspace@plt+0x3e2a8>
  403176:	push   0x14
  40317b:	jmp    403020 <start_color@plt-0x10>

0000000000403180 <curs_set@plt>:
  403180:	jmp    QWORD PTR [rip+0x3ea3a]        # 441bc0 <isspace@plt+0x3e2b0>
  403186:	push   0x15
  40318b:	jmp    403020 <start_color@plt-0x10>

0000000000403190 <unlinkat@plt>:
  403190:	jmp    QWORD PTR [rip+0x3ea32]        # 441bc8 <isspace@plt+0x3e2b8>
  403196:	push   0x16
  40319b:	jmp    403020 <start_color@plt-0x10>

00000000004031a0 <qsort@plt>:
  4031a0:	jmp    QWORD PTR [rip+0x3ea2a]        # 441bd0 <isspace@plt+0x3e2c0>
  4031a6:	push   0x17
  4031ab:	jmp    403020 <start_color@plt-0x10>

00000000004031b0 <sigaction@plt>:
  4031b0:	jmp    QWORD PTR [rip+0x3ea22]        # 441bd8 <isspace@plt+0x3e2c8>
  4031b6:	push   0x18
  4031bb:	jmp    403020 <start_color@plt-0x10>

00000000004031c0 <waddnstr@plt>:
  4031c0:	jmp    QWORD PTR [rip+0x3ea1a]        # 441be0 <isspace@plt+0x3e2d0>
  4031c6:	push   0x19
  4031cb:	jmp    403020 <start_color@plt-0x10>

00000000004031d0 <fcntl@plt>:
  4031d0:	jmp    QWORD PTR [rip+0x3ea12]        # 441be8 <isspace@plt+0x3e2d8>
  4031d6:	push   0x1a
  4031db:	jmp    403020 <start_color@plt-0x10>

00000000004031e0 <setenv@plt>:
  4031e0:	jmp    QWORD PTR [rip+0x3ea0a]        # 441bf0 <isspace@plt+0x3e2e0>
  4031e6:	push   0x1b
  4031eb:	jmp    403020 <start_color@plt-0x10>

00000000004031f0 <write@plt>:
  4031f0:	jmp    QWORD PTR [rip+0x3ea02]        # 441bf8 <isspace@plt+0x3e2e8>
  4031f6:	push   0x1c
  4031fb:	jmp    403020 <start_color@plt-0x10>

0000000000403200 <getpid@plt>:
  403200:	jmp    QWORD PTR [rip+0x3e9fa]        # 441c00 <isspace@plt+0x3e2f0>
  403206:	push   0x1d
  40320b:	jmp    403020 <start_color@plt-0x10>

0000000000403210 <newterm@plt>:
  403210:	jmp    QWORD PTR [rip+0x3e9f2]        # 441c08 <isspace@plt+0x3e2f8>
  403216:	push   0x1e
  40321b:	jmp    403020 <start_color@plt-0x10>

0000000000403220 <termkey_new_abstract@plt>:
  403220:	jmp    QWORD PTR [rip+0x3e9ea]        # 441c10 <isspace@plt+0x3e300>
  403226:	push   0x1f
  40322b:	jmp    403020 <start_color@plt-0x10>

0000000000403230 <getpwuid@plt>:
  403230:	jmp    QWORD PTR [rip+0x3e9e2]        # 441c18 <isspace@plt+0x3e308>
  403236:	push   0x20
  40323b:	jmp    403020 <start_color@plt-0x10>

0000000000403240 <regfree@plt>:
  403240:	jmp    QWORD PTR [rip+0x3e9da]        # 441c20 <isspace@plt+0x3e310>
  403246:	push   0x21
  40324b:	jmp    403020 <start_color@plt-0x10>

0000000000403250 <strlen@plt>:
  403250:	jmp    QWORD PTR [rip+0x3e9d2]        # 441c28 <isspace@plt+0x3e318>
  403256:	push   0x22
  40325b:	jmp    403020 <start_color@plt-0x10>

0000000000403260 <openat@plt>:
  403260:	jmp    QWORD PTR [rip+0x3e9ca]        # 441c30 <isspace@plt+0x3e320>
  403266:	push   0x23
  40326b:	jmp    403020 <start_color@plt-0x10>

0000000000403270 <chdir@plt>:
  403270:	jmp    QWORD PTR [rip+0x3e9c2]        # 441c38 <isspace@plt+0x3e328>
  403276:	push   0x24
  40327b:	jmp    403020 <start_color@plt-0x10>

0000000000403280 <__stack_chk_fail@plt>:
  403280:	jmp    QWORD PTR [rip+0x3e9ba]        # 441c40 <isspace@plt+0x3e330>
  403286:	push   0x25
  40328b:	jmp    403020 <start_color@plt-0x10>

0000000000403290 <getuid@plt>:
  403290:	jmp    QWORD PTR [rip+0x3e9b2]        # 441c48 <isspace@plt+0x3e338>
  403296:	push   0x26
  40329b:	jmp    403020 <start_color@plt-0x10>

00000000004032a0 <mmap@plt>:
  4032a0:	jmp    QWORD PTR [rip+0x3e9aa]        # 441c50 <isspace@plt+0x3e340>
  4032a6:	push   0x27
  4032ab:	jmp    403020 <start_color@plt-0x10>

00000000004032b0 <mbrtowc@plt>:
  4032b0:	jmp    QWORD PTR [rip+0x3e9a2]        # 441c58 <isspace@plt+0x3e348>
  4032b6:	push   0x28
  4032bb:	jmp    403020 <start_color@plt-0x10>

00000000004032c0 <dup2@plt>:
  4032c0:	jmp    QWORD PTR [rip+0x3e99a]        # 441c60 <isspace@plt+0x3e350>
  4032c6:	push   0x29
  4032cb:	jmp    403020 <start_color@plt-0x10>

00000000004032d0 <pselect@plt>:
  4032d0:	jmp    QWORD PTR [rip+0x3e992]        # 441c68 <isspace@plt+0x3e358>
  4032d6:	push   0x2a
  4032db:	jmp    403020 <start_color@plt-0x10>

00000000004032e0 <freecon@plt>:
  4032e0:	jmp    QWORD PTR [rip+0x3e98a]        # 441c70 <isspace@plt+0x3e360>
  4032e6:	push   0x2b
  4032eb:	jmp    403020 <start_color@plt-0x10>

00000000004032f0 <strchr@plt>:
  4032f0:	jmp    QWORD PTR [rip+0x3e982]        # 441c78 <isspace@plt+0x3e368>
  4032f6:	push   0x2c
  4032fb:	jmp    403020 <start_color@plt-0x10>

0000000000403300 <__fdelt_chk@plt>:
  403300:	jmp    QWORD PTR [rip+0x3e97a]        # 441c80 <isspace@plt+0x3e370>
  403306:	push   0x2d
  40330b:	jmp    403020 <start_color@plt-0x10>

0000000000403310 <__fxstatat@plt>:
  403310:	jmp    QWORD PTR [rip+0x3e972]        # 441c88 <isspace@plt+0x3e378>
  403316:	push   0x2e
  40331b:	jmp    403020 <start_color@plt-0x10>

0000000000403320 <strrchr@plt>:
  403320:	jmp    QWORD PTR [rip+0x3e96a]        # 441c90 <isspace@plt+0x3e380>
  403326:	push   0x2f
  40332b:	jmp    403020 <start_color@plt-0x10>

0000000000403330 <init_color@plt>:
  403330:	jmp    QWORD PTR [rip+0x3e962]        # 441c98 <isspace@plt+0x3e388>
  403336:	push   0x30
  40333b:	jmp    403020 <start_color@plt-0x10>

0000000000403340 <ftruncate@plt>:
  403340:	jmp    QWORD PTR [rip+0x3e95a]        # 441ca0 <isspace@plt+0x3e390>
  403346:	push   0x31
  40334b:	jmp    403020 <start_color@plt-0x10>

0000000000403350 <dirname@plt>:
  403350:	jmp    QWORD PTR [rip+0x3e952]        # 441ca8 <isspace@plt+0x3e398>
  403356:	push   0x32
  40335b:	jmp    403020 <start_color@plt-0x10>

0000000000403360 <memset@plt>:
  403360:	jmp    QWORD PTR [rip+0x3e94a]        # 441cb0 <isspace@plt+0x3e3a0>
  403366:	push   0x33
  40336b:	jmp    403020 <start_color@plt-0x10>

0000000000403370 <termkey_get_waittime@plt>:
  403370:	jmp    QWORD PTR [rip+0x3e942]        # 441cb8 <isspace@plt+0x3e3a8>
  403376:	push   0x34
  40337b:	jmp    403020 <start_color@plt-0x10>

0000000000403380 <termkey_getkey@plt>:
  403380:	jmp    QWORD PTR [rip+0x3e93a]        # 441cc0 <isspace@plt+0x3e3b0>
  403386:	push   0x35
  40338b:	jmp    403020 <start_color@plt-0x10>

0000000000403390 <termkey_set_canonflags@plt>:
  403390:	jmp    QWORD PTR [rip+0x3e932]        # 441cc8 <isspace@plt+0x3e3b8>
  403396:	push   0x36
  40339b:	jmp    403020 <start_color@plt-0x10>

00000000004033a0 <ioctl@plt>:
  4033a0:	jmp    QWORD PTR [rip+0x3e92a]        # 441cd0 <isspace@plt+0x3e3c0>
  4033a6:	push   0x37
  4033ab:	jmp    403020 <start_color@plt-0x10>

00000000004033b0 <getcwd@plt>:
  4033b0:	jmp    QWORD PTR [rip+0x3e922]        # 441cd8 <isspace@plt+0x3e3c8>
  4033b6:	push   0x38
  4033bb:	jmp    403020 <start_color@plt-0x10>

00000000004033c0 <close@plt>:
  4033c0:	jmp    QWORD PTR [rip+0x3e91a]        # 441ce0 <isspace@plt+0x3e3d0>
  4033c6:	push   0x39
  4033cb:	jmp    403020 <start_color@plt-0x10>

00000000004033d0 <pipe@plt>:
  4033d0:	jmp    QWORD PTR [rip+0x3e912]        # 441ce8 <isspace@plt+0x3e3d8>
  4033d6:	push   0x3a
  4033db:	jmp    403020 <start_color@plt-0x10>

00000000004033e0 <keypad@plt>:
  4033e0:	jmp    QWORD PTR [rip+0x3e90a]        # 441cf0 <isspace@plt+0x3e3e0>
  4033e6:	push   0x3b
  4033eb:	jmp    403020 <start_color@plt-0x10>

00000000004033f0 <regcomp@plt>:
  4033f0:	jmp    QWORD PTR [rip+0x3e902]        # 441cf8 <isspace@plt+0x3e3e8>
  4033f6:	push   0x3c
  4033fb:	jmp    403020 <start_color@plt-0x10>

0000000000403400 <strcspn@plt>:
  403400:	jmp    QWORD PTR [rip+0x3e8fa]        # 441d00 <isspace@plt+0x3e3f0>
  403406:	push   0x3d
  40340b:	jmp    403020 <start_color@plt-0x10>

0000000000403410 <memchr@plt>:
  403410:	jmp    QWORD PTR [rip+0x3e8f2]        # 441d08 <isspace@plt+0x3e3f8>
  403416:	push   0x3e
  40341b:	jmp    403020 <start_color@plt-0x10>

0000000000403420 <read@plt>:
  403420:	jmp    QWORD PTR [rip+0x3e8ea]        # 441d10 <isspace@plt+0x3e400>
  403426:	push   0x3f
  40342b:	jmp    403020 <start_color@plt-0x10>

0000000000403430 <resizeterm@plt>:
  403430:	jmp    QWORD PTR [rip+0x3e8e2]        # 441d18 <isspace@plt+0x3e408>
  403436:	push   0x40
  40343b:	jmp    403020 <start_color@plt-0x10>

0000000000403440 <termkey_strpkey@plt>:
  403440:	jmp    QWORD PTR [rip+0x3e8da]        # 441d20 <isspace@plt+0x3e410>
  403446:	push   0x41
  40344b:	jmp    403020 <start_color@plt-0x10>

0000000000403450 <strtoull@plt>:
  403450:	jmp    QWORD PTR [rip+0x3e8d2]        # 441d28 <isspace@plt+0x3e418>
  403456:	push   0x42
  40345b:	jmp    403020 <start_color@plt-0x10>

0000000000403460 <calloc@plt>:
  403460:	jmp    QWORD PTR [rip+0x3e8ca]        # 441d30 <isspace@plt+0x3e420>
  403466:	push   0x43
  40346b:	jmp    403020 <start_color@plt-0x10>

0000000000403470 <strcmp@plt>:
  403470:	jmp    QWORD PTR [rip+0x3e8c2]        # 441d38 <isspace@plt+0x3e428>
  403476:	push   0x44
  40347b:	jmp    403020 <start_color@plt-0x10>

0000000000403480 <termkey_start@plt>:
  403480:	jmp    QWORD PTR [rip+0x3e8ba]        # 441d40 <isspace@plt+0x3e430>
  403486:	push   0x45
  40348b:	jmp    403020 <start_color@plt-0x10>

0000000000403490 <sigemptyset@plt>:
  403490:	jmp    QWORD PTR [rip+0x3e8b2]        # 441d48 <isspace@plt+0x3e438>
  403496:	push   0x46
  40349b:	jmp    403020 <start_color@plt-0x10>

00000000004034a0 <umask@plt>:
  4034a0:	jmp    QWORD PTR [rip+0x3e8aa]        # 441d50 <isspace@plt+0x3e440>
  4034a6:	push   0x47
  4034ab:	jmp    403020 <start_color@plt-0x10>

00000000004034b0 <strtol@plt>:
  4034b0:	jmp    QWORD PTR [rip+0x3e8a2]        # 441d58 <isspace@plt+0x3e448>
  4034b6:	push   0x48
  4034bb:	jmp    403020 <start_color@plt-0x10>

00000000004034c0 <realpath@plt>:
  4034c0:	jmp    QWORD PTR [rip+0x3e89a]        # 441d60 <isspace@plt+0x3e450>
  4034c6:	push   0x49
  4034cb:	jmp    403020 <start_color@plt-0x10>

00000000004034d0 <memcpy@plt>:
  4034d0:	jmp    QWORD PTR [rip+0x3e892]        # 441d68 <isspace@plt+0x3e458>
  4034d6:	push   0x4a
  4034db:	jmp    403020 <start_color@plt-0x10>

00000000004034e0 <sigfillset@plt>:
  4034e0:	jmp    QWORD PTR [rip+0x3e88a]        # 441d70 <isspace@plt+0x3e460>
  4034e6:	push   0x4b
  4034eb:	jmp    403020 <start_color@plt-0x10>

00000000004034f0 <kill@plt>:
  4034f0:	jmp    QWORD PTR [rip+0x3e882]        # 441d78 <isspace@plt+0x3e468>
  4034f6:	push   0x4c
  4034fb:	jmp    403020 <start_color@plt-0x10>

0000000000403500 <__xpg_basename@plt>:
  403500:	jmp    QWORD PTR [rip+0x3e87a]        # 441d80 <isspace@plt+0x3e470>
  403506:	push   0x4d
  40350b:	jmp    403020 <start_color@plt-0x10>

0000000000403510 <time@plt>:
  403510:	jmp    QWORD PTR [rip+0x3e872]        # 441d88 <isspace@plt+0x3e478>
  403516:	push   0x4e
  40351b:	jmp    403020 <start_color@plt-0x10>

0000000000403520 <termkey_interpret_csi@plt>:
  403520:	jmp    QWORD PTR [rip+0x3e86a]        # 441d90 <isspace@plt+0x3e480>
  403526:	push   0x4f
  40352b:	jmp    403020 <start_color@plt-0x10>

0000000000403530 <can_change_color@plt>:
  403530:	jmp    QWORD PTR [rip+0x3e862]        # 441d98 <isspace@plt+0x3e488>
  403536:	push   0x50
  40353b:	jmp    403020 <start_color@plt-0x10>

0000000000403540 <getgid@plt>:
  403540:	jmp    QWORD PTR [rip+0x3e85a]        # 441da0 <isspace@plt+0x3e490>
  403546:	push   0x51
  40354b:	jmp    403020 <start_color@plt-0x10>

0000000000403550 <select@plt>:
  403550:	jmp    QWORD PTR [rip+0x3e852]        # 441da8 <isspace@plt+0x3e498>
  403556:	push   0x52
  40355b:	jmp    403020 <start_color@plt-0x10>

0000000000403560 <__xstat@plt>:
  403560:	jmp    QWORD PTR [rip+0x3e84a]        # 441db0 <isspace@plt+0x3e4a0>
  403566:	push   0x53
  40356b:	jmp    403020 <start_color@plt-0x10>

0000000000403570 <meta@plt>:
  403570:	jmp    QWORD PTR [rip+0x3e842]        # 441db8 <isspace@plt+0x3e4a8>
  403576:	push   0x54
  40357b:	jmp    403020 <start_color@plt-0x10>

0000000000403580 <wnoutrefresh@plt>:
  403580:	jmp    QWORD PTR [rip+0x3e83a]        # 441dc0 <isspace@plt+0x3e4b0>
  403586:	push   0x55
  40358b:	jmp    403020 <start_color@plt-0x10>

0000000000403590 <wcwidth@plt>:
  403590:	jmp    QWORD PTR [rip+0x3e832]        # 441dc8 <isspace@plt+0x3e4b8>
  403596:	push   0x56
  40359b:	jmp    403020 <start_color@plt-0x10>

00000000004035a0 <reset_shell_mode@plt>:
  4035a0:	jmp    QWORD PTR [rip+0x3e82a]        # 441dd0 <isspace@plt+0x3e4c0>
  4035a6:	push   0x57
  4035ab:	jmp    403020 <start_color@plt-0x10>

00000000004035b0 <cbreak@plt>:
  4035b0:	jmp    QWORD PTR [rip+0x3e822]        # 441dd8 <isspace@plt+0x3e4c8>
  4035b6:	push   0x58
  4035bb:	jmp    403020 <start_color@plt-0x10>

00000000004035c0 <termkey_get_keyname@plt>:
  4035c0:	jmp    QWORD PTR [rip+0x3e81a]        # 441de0 <isspace@plt+0x3e4d0>
  4035c6:	push   0x59
  4035cb:	jmp    403020 <start_color@plt-0x10>

00000000004035d0 <malloc@plt>:
  4035d0:	jmp    QWORD PTR [rip+0x3e812]        # 441de8 <isspace@plt+0x3e4d8>
  4035d6:	push   0x5a
  4035db:	jmp    403020 <start_color@plt-0x10>

00000000004035e0 <fflush@plt>:
  4035e0:	jmp    QWORD PTR [rip+0x3e80a]        # 441df0 <isspace@plt+0x3e4e0>
  4035e6:	push   0x5b
  4035eb:	jmp    403020 <start_color@plt-0x10>

00000000004035f0 <__isoc99_sscanf@plt>:
  4035f0:	jmp    QWORD PTR [rip+0x3e802]        # 441df8 <isspace@plt+0x3e4e8>
  4035f6:	push   0x5c
  4035fb:	jmp    403020 <start_color@plt-0x10>

0000000000403600 <__fxstat@plt>:
  403600:	jmp    QWORD PTR [rip+0x3e7fa]        # 441e00 <isspace@plt+0x3e4f0>
  403606:	push   0x5d
  40360b:	jmp    403020 <start_color@plt-0x10>

0000000000403610 <is_selinux_enabled@plt>:
  403610:	jmp    QWORD PTR [rip+0x3e7f2]        # 441e08 <isspace@plt+0x3e4f8>
  403616:	push   0x5e
  40361b:	jmp    403020 <start_color@plt-0x10>

0000000000403620 <init_pair@plt>:
  403620:	jmp    QWORD PTR [rip+0x3e7ea]        # 441e10 <isspace@plt+0x3e500>
  403626:	push   0x5f
  40362b:	jmp    403020 <start_color@plt-0x10>

0000000000403630 <regexec@plt>:
  403630:	jmp    QWORD PTR [rip+0x3e7e2]        # 441e18 <isspace@plt+0x3e508>
  403636:	push   0x60
  40363b:	jmp    403020 <start_color@plt-0x10>

0000000000403640 <bcmp@plt>:
  403640:	jmp    QWORD PTR [rip+0x3e7da]        # 441e20 <isspace@plt+0x3e510>
  403646:	push   0x61
  40364b:	jmp    403020 <start_color@plt-0x10>

0000000000403650 <mkstemp@plt>:
  403650:	jmp    QWORD PTR [rip+0x3e7d2]        # 441e28 <isspace@plt+0x3e518>
  403656:	push   0x62
  40365b:	jmp    403020 <start_color@plt-0x10>

0000000000403660 <reset_prog_mode@plt>:
  403660:	jmp    QWORD PTR [rip+0x3e7ca]        # 441e30 <isspace@plt+0x3e520>
  403666:	push   0x63
  40366b:	jmp    403020 <start_color@plt-0x10>

0000000000403670 <fchdir@plt>:
  403670:	jmp    QWORD PTR [rip+0x3e7c2]        # 441e38 <isspace@plt+0x3e528>
  403676:	push   0x64
  40367b:	jmp    403020 <start_color@plt-0x10>

0000000000403680 <doupdate@plt>:
  403680:	jmp    QWORD PTR [rip+0x3e7ba]        # 441e40 <isspace@plt+0x3e530>
  403686:	push   0x65
  40368b:	jmp    403020 <start_color@plt-0x10>

0000000000403690 <termkey_strfkey@plt>:
  403690:	jmp    QWORD PTR [rip+0x3e7b2]        # 441e48 <isspace@plt+0x3e538>
  403696:	push   0x66
  40369b:	jmp    403020 <start_color@plt-0x10>

00000000004036a0 <__vsnprintf_chk@plt>:
  4036a0:	jmp    QWORD PTR [rip+0x3e7aa]        # 441e50 <isspace@plt+0x3e540>
  4036a6:	push   0x67
  4036ab:	jmp    403020 <start_color@plt-0x10>

00000000004036b0 <realloc@plt>:
  4036b0:	jmp    QWORD PTR [rip+0x3e7a2]        # 441e58 <isspace@plt+0x3e548>
  4036b6:	push   0x68
  4036bb:	jmp    403020 <start_color@plt-0x10>

00000000004036c0 <__strcpy_chk@plt>:
  4036c0:	jmp    QWORD PTR [rip+0x3e79a]        # 441e60 <isspace@plt+0x3e550>
  4036c6:	push   0x69
  4036cb:	jmp    403020 <start_color@plt-0x10>

00000000004036d0 <munmap@plt>:
  4036d0:	jmp    QWORD PTR [rip+0x3e792]        # 441e68 <isspace@plt+0x3e558>
  4036d6:	push   0x6a
  4036db:	jmp    403020 <start_color@plt-0x10>

00000000004036e0 <setlocale@plt>:
  4036e0:	jmp    QWORD PTR [rip+0x3e78a]        # 441e70 <isspace@plt+0x3e560>
  4036e6:	push   0x6b
  4036eb:	jmp    403020 <start_color@plt-0x10>

00000000004036f0 <termkey_destroy@plt>:
  4036f0:	jmp    QWORD PTR [rip+0x3e782]        # 441e78 <isspace@plt+0x3e568>
  4036f6:	push   0x6c
  4036fb:	jmp    403020 <start_color@plt-0x10>

0000000000403700 <__printf_chk@plt>:
  403700:	jmp    QWORD PTR [rip+0x3e77a]        # 441e80 <isspace@plt+0x3e570>
  403706:	push   0x6d
  40370b:	jmp    403020 <start_color@plt-0x10>

0000000000403710 <fchmod@plt>:
  403710:	jmp    QWORD PTR [rip+0x3e772]        # 441e88 <isspace@plt+0x3e578>
  403716:	push   0x6e
  40371b:	jmp    403020 <start_color@plt-0x10>

0000000000403720 <poll@plt>:
  403720:	jmp    QWORD PTR [rip+0x3e76a]        # 441e90 <isspace@plt+0x3e580>
  403726:	push   0x6f
  40372b:	jmp    403020 <start_color@plt-0x10>

0000000000403730 <__longjmp_chk@plt>:
  403730:	jmp    QWORD PTR [rip+0x3e762]        # 441e98 <isspace@plt+0x3e588>
  403736:	push   0x70
  40373b:	jmp    403020 <start_color@plt-0x10>

0000000000403740 <strftime@plt>:
  403740:	jmp    QWORD PTR [rip+0x3e75a]        # 441ea0 <isspace@plt+0x3e590>
  403746:	push   0x71
  40374b:	jmp    403020 <start_color@plt-0x10>

0000000000403750 <memmove@plt>:
  403750:	jmp    QWORD PTR [rip+0x3e752]        # 441ea8 <isspace@plt+0x3e598>
  403756:	push   0x72
  40375b:	jmp    403020 <start_color@plt-0x10>

0000000000403760 <termkey_new@plt>:
  403760:	jmp    QWORD PTR [rip+0x3e74a]        # 441eb0 <isspace@plt+0x3e5a0>
  403766:	push   0x73
  40376b:	jmp    403020 <start_color@plt-0x10>

0000000000403770 <fsync@plt>:
  403770:	jmp    QWORD PTR [rip+0x3e742]        # 441eb8 <isspace@plt+0x3e5a8>
  403776:	push   0x74
  40377b:	jmp    403020 <start_color@plt-0x10>

0000000000403780 <memrchr@plt>:
  403780:	jmp    QWORD PTR [rip+0x3e73a]        # 441ec0 <isspace@plt+0x3e5b0>
  403786:	push   0x75
  40378b:	jmp    403020 <start_color@plt-0x10>

0000000000403790 <waitpid@plt>:
  403790:	jmp    QWORD PTR [rip+0x3e732]        # 441ec8 <isspace@plt+0x3e5b8>
  403796:	push   0x76
  40379b:	jmp    403020 <start_color@plt-0x10>

00000000004037a0 <open@plt>:
  4037a0:	jmp    QWORD PTR [rip+0x3e72a]        # 441ed0 <isspace@plt+0x3e5c0>
  4037a6:	push   0x77
  4037ab:	jmp    403020 <start_color@plt-0x10>

00000000004037b0 <fchown@plt>:
  4037b0:	jmp    QWORD PTR [rip+0x3e722]        # 441ed8 <isspace@plt+0x3e5c8>
  4037b6:	push   0x78
  4037bb:	jmp    403020 <start_color@plt-0x10>

00000000004037c0 <execvp@plt>:
  4037c0:	jmp    QWORD PTR [rip+0x3e71a]        # 441ee0 <isspace@plt+0x3e5d0>
  4037c6:	push   0x79
  4037cb:	jmp    403020 <start_color@plt-0x10>

00000000004037d0 <wresize@plt>:
  4037d0:	jmp    QWORD PTR [rip+0x3e712]        # 441ee8 <isspace@plt+0x3e5d8>
  4037d6:	push   0x7a
  4037db:	jmp    403020 <start_color@plt-0x10>

00000000004037e0 <renameat@plt>:
  4037e0:	jmp    QWORD PTR [rip+0x3e70a]        # 441ef0 <isspace@plt+0x3e5e0>
  4037e6:	push   0x7b
  4037eb:	jmp    403020 <start_color@plt-0x10>

00000000004037f0 <nonl@plt>:
  4037f0:	jmp    QWORD PTR [rip+0x3e702]        # 441ef8 <isspace@plt+0x3e5e8>
  4037f6:	push   0x7c
  4037fb:	jmp    403020 <start_color@plt-0x10>

0000000000403800 <exit@plt>:
  403800:	jmp    QWORD PTR [rip+0x3e6fa]        # 441f00 <isspace@plt+0x3e5f0>
  403806:	push   0x7d
  40380b:	jmp    403020 <start_color@plt-0x10>

0000000000403810 <fwrite@plt>:
  403810:	jmp    QWORD PTR [rip+0x3e6f2]        # 441f08 <isspace@plt+0x3e5f8>
  403816:	push   0x7e
  40381b:	jmp    403020 <start_color@plt-0x10>

0000000000403820 <__fprintf_chk@plt>:
  403820:	jmp    QWORD PTR [rip+0x3e6ea]        # 441f10 <isspace@plt+0x3e600>
  403826:	push   0x7f
  40382b:	jmp    403020 <start_color@plt-0x10>

0000000000403830 <fsetfilecon@plt>:
  403830:	jmp    QWORD PTR [rip+0x3e6e2]        # 441f18 <isspace@plt+0x3e608>
  403836:	push   0x80
  40383b:	jmp    403020 <start_color@plt-0x10>

0000000000403840 <__strncat_chk@plt>:
  403840:	jmp    QWORD PTR [rip+0x3e6da]        # 441f20 <isspace@plt+0x3e610>
  403846:	push   0x81
  40384b:	jmp    403020 <start_color@plt-0x10>

0000000000403850 <strdup@plt>:
  403850:	jmp    QWORD PTR [rip+0x3e6d2]        # 441f28 <isspace@plt+0x3e618>
  403856:	push   0x82
  40385b:	jmp    403020 <start_color@plt-0x10>

0000000000403860 <execlp@plt>:
  403860:	jmp    QWORD PTR [rip+0x3e6ca]        # 441f30 <isspace@plt+0x3e620>
  403866:	push   0x83
  40386b:	jmp    403020 <start_color@plt-0x10>

0000000000403870 <termkey_advisereadable@plt>:
  403870:	jmp    QWORD PTR [rip+0x3e6c2]        # 441f38 <isspace@plt+0x3e628>
  403876:	push   0x84
  40387b:	jmp    403020 <start_color@plt-0x10>

0000000000403880 <strerror@plt>:
  403880:	jmp    QWORD PTR [rip+0x3e6ba]        # 441f40 <isspace@plt+0x3e630>
  403886:	push   0x85
  40388b:	jmp    403020 <start_color@plt-0x10>

0000000000403890 <wclear@plt>:
  403890:	jmp    QWORD PTR [rip+0x3e6b2]        # 441f48 <isspace@plt+0x3e638>
  403896:	push   0x86
  40389b:	jmp    403020 <start_color@plt-0x10>

00000000004038a0 <__sigsetjmp@plt>:
  4038a0:	jmp    QWORD PTR [rip+0x3e6aa]        # 441f50 <isspace@plt+0x3e640>
  4038a6:	push   0x87
  4038ab:	jmp    403020 <start_color@plt-0x10>

00000000004038b0 <endwin@plt>:
  4038b0:	jmp    QWORD PTR [rip+0x3e6a2]        # 441f58 <isspace@plt+0x3e648>
  4038b6:	push   0x88
  4038bb:	jmp    403020 <start_color@plt-0x10>

00000000004038c0 <sigaddset@plt>:
  4038c0:	jmp    QWORD PTR [rip+0x3e69a]        # 441f60 <isspace@plt+0x3e650>
  4038c6:	push   0x89
  4038cb:	jmp    403020 <start_color@plt-0x10>

00000000004038d0 <fork@plt>:
  4038d0:	jmp    QWORD PTR [rip+0x3e692]        # 441f68 <isspace@plt+0x3e658>
  4038d6:	push   0x8a
  4038db:	jmp    403020 <start_color@plt-0x10>

00000000004038e0 <strstr@plt>:
  4038e0:	jmp    QWORD PTR [rip+0x3e68a]        # 441f70 <isspace@plt+0x3e660>
  4038e6:	push   0x8b
  4038eb:	jmp    403020 <start_color@plt-0x10>

00000000004038f0 <__ctype_b_loc@plt>:
  4038f0:	jmp    QWORD PTR [rip+0x3e682]        # 441f78 <isspace@plt+0x3e668>
  4038f6:	push   0x8c
  4038fb:	jmp    403020 <start_color@plt-0x10>

0000000000403900 <wattrset@plt>:
  403900:	jmp    QWORD PTR [rip+0x3e67a]        # 441f80 <isspace@plt+0x3e670>
  403906:	push   0x8d
  40390b:	jmp    403020 <start_color@plt-0x10>

Disassembly of section .plt.got:

0000000000403910 <isspace@plt>:
  403910:	jmp    QWORD PTR [rip+0x3e6a2]        # 441fb8 <isspace@plt+0x3e6a8>
  403916:	xchg   ax,ax

Disassembly of section .text:

0000000000403920 <.text>:
  403920:	endbr64 
  403924:	xor    ebp,ebp
  403926:	mov    r9,rdx
  403929:	pop    rsi
  40392a:	mov    rdx,rsp
  40392d:	and    rsp,0xfffffffffffffff0
  403931:	push   rax
  403932:	push   rsp
  403933:	mov    r8,0x42b850
  40393a:	mov    rcx,0x42b7e0
  403941:	mov    rdi,0x404fb0
  403948:	call   QWORD PTR [rip+0x3e67a]        # 441fc8 <isspace@plt+0x3e6b8>
  40394e:	hlt    
  40394f:	nop
  403950:	endbr64 
  403954:	ret    
  403955:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40395f:	nop
  403960:	mov    eax,0x442380
  403965:	cmp    rax,0x442380
  40396b:	je     403980 <isspace@plt+0x70>
  40396d:	mov    eax,0x0
  403972:	test   rax,rax
  403975:	je     403980 <isspace@plt+0x70>
  403977:	mov    edi,0x442380
  40397c:	jmp    rax
  40397e:	xchg   ax,ax
  403980:	ret    
  403981:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40398c:	nop    DWORD PTR [rax+0x0]
  403990:	mov    esi,0x442380
  403995:	sub    rsi,0x442380
  40399c:	mov    rax,rsi
  40399f:	shr    rsi,0x3f
  4039a3:	sar    rax,0x3
  4039a7:	add    rsi,rax
  4039aa:	sar    rsi,1
  4039ad:	je     4039c0 <isspace@plt+0xb0>
  4039af:	mov    eax,0x0
  4039b4:	test   rax,rax
  4039b7:	je     4039c0 <isspace@plt+0xb0>
  4039b9:	mov    edi,0x442380
  4039be:	jmp    rax
  4039c0:	ret    
  4039c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4039cc:	nop    DWORD PTR [rax+0x0]
  4039d0:	endbr64 
  4039d4:	cmp    BYTE PTR [rip+0x3e9a5],0x0        # 442380 <isspace@plt+0x3ea70>
  4039db:	jne    4039f0 <isspace@plt+0xe0>
  4039dd:	push   rbp
  4039de:	mov    rbp,rsp
  4039e1:	call   403960 <isspace@plt+0x50>
  4039e6:	mov    BYTE PTR [rip+0x3e993],0x1        # 442380 <isspace@plt+0x3ea70>
  4039ed:	pop    rbp
  4039ee:	ret    
  4039ef:	nop
  4039f0:	ret    
  4039f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4039fc:	nop    DWORD PTR [rax+0x0]
  403a00:	endbr64 
  403a04:	jmp    403990 <isspace@plt+0x80>
  403a06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a10:	push   rax
  403a11:	mov    rax,QWORD PTR fs:0x28
  403a1a:	mov    QWORD PTR [rsp],rax
  403a1e:	vxorps xmm0,xmm0,xmm0
  403a22:	vmovups YMMWORD PTR [rdi],ymm0
  403a26:	mov    QWORD PTR [rdi+0x8],0x8
  403a2e:	mov    rax,QWORD PTR fs:0x28
  403a37:	cmp    rax,QWORD PTR [rsp]
  403a3b:	jne    403a42 <isspace@plt+0x132>
  403a3d:	pop    rax
  403a3e:	vzeroupper 
  403a41:	ret    
  403a42:	vzeroupper 
  403a45:	call   403280 <__stack_chk_fail@plt>
  403a4a:	nop    WORD PTR [rax+rax*1+0x0]
  403a50:	push   rax
  403a51:	mov    rax,QWORD PTR fs:0x28
  403a5a:	mov    QWORD PTR [rsp],rax
  403a5e:	vxorps xmm0,xmm0,xmm0
  403a62:	vmovups YMMWORD PTR [rdi],ymm0
  403a66:	mov    QWORD PTR [rdi+0x8],rsi
  403a6a:	mov    rax,QWORD PTR fs:0x28
  403a73:	cmp    rax,QWORD PTR [rsp]
  403a77:	jne    403a7e <isspace@plt+0x16e>
  403a79:	pop    rax
  403a7a:	vzeroupper 
  403a7d:	ret    
  403a7e:	vzeroupper 
  403a81:	call   403280 <__stack_chk_fail@plt>
  403a86:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a90:	push   rax
  403a91:	mov    rax,QWORD PTR fs:0x28
  403a9a:	mov    QWORD PTR [rsp],rax
  403a9e:	mov    rax,QWORD PTR [rsi+0x8]
  403aa2:	vxorps xmm0,xmm0,xmm0
  403aa6:	vmovups YMMWORD PTR [rdi],ymm0
  403aaa:	mov    QWORD PTR [rdi+0x8],rax
  403aae:	mov    rax,QWORD PTR fs:0x28
  403ab7:	cmp    rax,QWORD PTR [rsp]
  403abb:	jne    403ac2 <isspace@plt+0x1b2>
  403abd:	pop    rax
  403abe:	vzeroupper 
  403ac1:	ret    
  403ac2:	vzeroupper 
  403ac5:	call   403280 <__stack_chk_fail@plt>
  403aca:	nop    WORD PTR [rax+rax*1+0x0]
  403ad0:	push   rbp
  403ad1:	push   r14
  403ad3:	push   rbx
  403ad4:	sub    rsp,0x10
  403ad8:	mov    rax,QWORD PTR fs:0x28
  403ae1:	mov    QWORD PTR [rsp+0x8],rax
  403ae6:	cmp    rsi,0x10
  403aea:	mov    eax,0x10
  403aef:	cmova  rax,rsi
  403af3:	mov    rbp,QWORD PTR [rdi+0x18]
  403af7:	mov    r14b,0x1
  403afa:	cmp    rbp,rax
  403afd:	jae    403b2d <isspace@plt+0x21d>
  403aff:	mov    rbx,rdi
  403b02:	add    rbp,rbp
  403b05:	cmp    rax,rbp
  403b08:	cmovae rbp,rax
  403b0c:	mov    rdi,QWORD PTR [rdi]
  403b0f:	mov    rsi,QWORD PTR [rbx+0x8]
  403b13:	imul   rsi,rbp
  403b17:	call   4036b0 <realloc@plt>
  403b1c:	test   rax,rax
  403b1f:	je     403b2a <isspace@plt+0x21a>
  403b21:	mov    QWORD PTR [rbx+0x18],rbp
  403b25:	mov    QWORD PTR [rbx],rax
  403b28:	jmp    403b2d <isspace@plt+0x21d>
  403b2a:	xor    r14d,r14d
  403b2d:	mov    rax,QWORD PTR fs:0x28
  403b36:	cmp    rax,QWORD PTR [rsp+0x8]
  403b3b:	jne    403b49 <isspace@plt+0x239>
  403b3d:	mov    eax,r14d
  403b40:	add    rsp,0x10
  403b44:	pop    rbx
  403b45:	pop    r14
  403b47:	pop    rbp
  403b48:	ret    
  403b49:	call   403280 <__stack_chk_fail@plt>
  403b4e:	xchg   ax,ax
  403b50:	push   rbx
  403b51:	sub    rsp,0x10
  403b55:	mov    rax,QWORD PTR fs:0x28
  403b5e:	mov    QWORD PTR [rsp+0x8],rax
  403b63:	test   rdi,rdi
  403b66:	je     403b83 <isspace@plt+0x273>
  403b68:	mov    rbx,rdi
  403b6b:	mov    rdi,QWORD PTR [rdi]
  403b6e:	call   4030d0 <free@plt>
  403b73:	mov    rax,QWORD PTR [rbx+0x8]
  403b77:	vxorps xmm0,xmm0,xmm0
  403b7b:	vmovups YMMWORD PTR [rbx],ymm0
  403b7f:	mov    QWORD PTR [rbx+0x8],rax
  403b83:	mov    rax,QWORD PTR fs:0x28
  403b8c:	cmp    rax,QWORD PTR [rsp+0x8]
  403b91:	jne    403b9c <isspace@plt+0x28c>
  403b93:	add    rsp,0x10
  403b97:	pop    rbx
  403b98:	vzeroupper 
  403b9b:	ret    
  403b9c:	vzeroupper 
  403b9f:	call   403280 <__stack_chk_fail@plt>
  403ba4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403bae:	xchg   ax,ax
  403bb0:	push   r15
  403bb2:	push   r14
  403bb4:	push   rbx
  403bb5:	sub    rsp,0x10
  403bb9:	mov    rax,QWORD PTR fs:0x28
  403bc2:	mov    QWORD PTR [rsp+0x8],rax
  403bc7:	test   rdi,rdi
  403bca:	je     403c3d <isspace@plt+0x32d>
  403bcc:	mov    r14,rdi
  403bcf:	cmp    QWORD PTR [rdi+0x10],0x0
  403bd4:	je     403c24 <isspace@plt+0x314>
  403bd6:	xor    r15d,r15d
  403bd9:	xor    ebx,ebx
  403bdb:	cmp    QWORD PTR [r14+0x8],0x8
  403be0:	je     403c16 <isspace@plt+0x306>
  403be2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403bec:	nop    DWORD PTR [rax+0x0]
  403bf0:	call   403130 <__errno_location@plt>
  403bf5:	mov    DWORD PTR [rax],0x5f
  403bfb:	xor    edi,edi
  403bfd:	call   4030d0 <free@plt>
  403c02:	inc    rbx
  403c05:	add    r15,0xfffffffffffffff8
  403c09:	cmp    rbx,QWORD PTR [r14+0x10]
  403c0d:	jae    403c24 <isspace@plt+0x314>
  403c0f:	cmp    QWORD PTR [r14+0x8],0x8
  403c14:	jne    403bf0 <isspace@plt+0x2e0>
  403c16:	mov    rax,QWORD PTR [r14]
  403c19:	cmp    rax,r15
  403c1c:	je     403bfb <isspace@plt+0x2eb>
  403c1e:	mov    rdi,QWORD PTR [rax+rbx*8]
  403c22:	jmp    403bfd <isspace@plt+0x2ed>
  403c24:	mov    rdi,QWORD PTR [r14]
  403c27:	call   4030d0 <free@plt>
  403c2c:	mov    rax,QWORD PTR [r14+0x8]
  403c30:	vxorps xmm0,xmm0,xmm0
  403c34:	vmovups YMMWORD PTR [r14],ymm0
  403c39:	mov    QWORD PTR [r14+0x8],rax
  403c3d:	mov    rax,QWORD PTR fs:0x28
  403c46:	cmp    rax,QWORD PTR [rsp+0x8]
  403c4b:	jne    403c5a <isspace@plt+0x34a>
  403c4d:	add    rsp,0x10
  403c51:	pop    rbx
  403c52:	pop    r14
  403c54:	pop    r15
  403c56:	vzeroupper 
  403c59:	ret    
  403c5a:	vzeroupper 
  403c5d:	call   403280 <__stack_chk_fail@plt>
  403c62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c6c:	nop    DWORD PTR [rax+0x0]
  403c70:	push   rax
  403c71:	mov    rax,QWORD PTR fs:0x28
  403c7a:	mov    QWORD PTR [rsp],rax
  403c7e:	cmp    QWORD PTR [rdi+0x8],0x8
  403c83:	jne    403c99 <isspace@plt+0x389>
  403c85:	cmp    QWORD PTR [rdi+0x10],rsi
  403c89:	jbe    403ca6 <isspace@plt+0x396>
  403c8b:	shl    rsi,0x3
  403c8f:	add    rsi,QWORD PTR [rdi]
  403c92:	je     403cb1 <isspace@plt+0x3a1>
  403c94:	mov    rax,QWORD PTR [rsi]
  403c97:	jmp    403cb3 <isspace@plt+0x3a3>
  403c99:	call   403130 <__errno_location@plt>
  403c9e:	mov    DWORD PTR [rax],0x5f
  403ca4:	jmp    403cb1 <isspace@plt+0x3a1>
  403ca6:	call   403130 <__errno_location@plt>
  403cab:	mov    DWORD PTR [rax],0x16
  403cb1:	xor    eax,eax
  403cb3:	mov    rcx,QWORD PTR fs:0x28
  403cbc:	cmp    rcx,QWORD PTR [rsp]
  403cc0:	jne    403cc4 <isspace@plt+0x3b4>
  403cc2:	pop    rcx
  403cc3:	ret    
  403cc4:	call   403280 <__stack_chk_fail@plt>
  403cc9:	nop    DWORD PTR [rax+0x0]
  403cd0:	push   rax
  403cd1:	mov    rax,QWORD PTR fs:0x28
  403cda:	mov    QWORD PTR [rsp],rax
  403cde:	mov    QWORD PTR [rdi+0x10],0x0
  403ce6:	mov    rax,QWORD PTR [rdi]
  403ce9:	test   rax,rax
  403cec:	je     403d12 <isspace@plt+0x402>
  403cee:	mov    rdx,QWORD PTR [rdi+0x8]
  403cf2:	imul   rdx,QWORD PTR [rdi+0x18]
  403cf7:	mov    rdi,rax
  403cfa:	xor    esi,esi
  403cfc:	call   403360 <memset@plt>
  403d01:	mov    rax,QWORD PTR fs:0x28
  403d0a:	cmp    rax,QWORD PTR [rsp]
  403d0e:	jne    403d23 <isspace@plt+0x413>
  403d10:	pop    rax
  403d11:	ret    
  403d12:	mov    rax,QWORD PTR fs:0x28
  403d1b:	cmp    rax,QWORD PTR [rsp]
  403d1f:	jne    403d23 <isspace@plt+0x413>
  403d21:	pop    rax
  403d22:	ret    
  403d23:	call   403280 <__stack_chk_fail@plt>
  403d28:	nop    DWORD PTR [rax+rax*1+0x0]
  403d30:	push   rax
  403d31:	mov    rcx,QWORD PTR fs:0x28
  403d3a:	mov    QWORD PTR [rsp],rcx
  403d3e:	cmp    QWORD PTR [rdi+0x10],rsi
  403d42:	jbe    403d51 <isspace@plt+0x441>
  403d44:	mov    rax,rsi
  403d47:	imul   rax,QWORD PTR [rdi+0x8]
  403d4c:	add    rax,QWORD PTR [rdi]
  403d4f:	jmp    403d5e <isspace@plt+0x44e>
  403d51:	call   403130 <__errno_location@plt>
  403d56:	mov    DWORD PTR [rax],0x16
  403d5c:	xor    eax,eax
  403d5e:	mov    rcx,QWORD PTR fs:0x28
  403d67:	cmp    rcx,QWORD PTR [rsp]
  403d6b:	jne    403d6f <isspace@plt+0x45f>
  403d6d:	pop    rcx
  403d6e:	ret    
  403d6f:	call   403280 <__stack_chk_fail@plt>
  403d74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403d7e:	xchg   ax,ax
  403d80:	push   r15
  403d82:	push   r14
  403d84:	push   rbx
  403d85:	sub    rsp,0x10
  403d89:	mov    r14,rsi
  403d8c:	mov    r15,rdi
  403d8f:	mov    rax,QWORD PTR fs:0x28
  403d98:	mov    QWORD PTR [rsp+0x8],rax
  403d9d:	mov    rdi,QWORD PTR [rdi+0x10]
  403da1:	mov    rbx,QWORD PTR [r15+0x18]
  403da5:	lea    rax,[rdi+0x1]
  403da9:	cmp    rax,0x10
  403dad:	mov    ecx,0x10
  403db2:	cmova  rcx,rax
  403db6:	cmp    rbx,rcx
  403db9:	jae    403de9 <isspace@plt+0x4d9>
  403dbb:	add    rbx,rbx
  403dbe:	cmp    rcx,rbx
  403dc1:	cmovae rbx,rcx
  403dc5:	mov    rdi,QWORD PTR [r15]
  403dc8:	mov    rsi,QWORD PTR [r15+0x8]
  403dcc:	imul   rsi,rbx
  403dd0:	call   4036b0 <realloc@plt>
  403dd5:	test   rax,rax
  403dd8:	je     403e20 <isspace@plt+0x510>
  403dda:	mov    QWORD PTR [r15+0x18],rbx
  403dde:	mov    QWORD PTR [r15],rax
  403de1:	mov    rdi,QWORD PTR [r15+0x10]
  403de5:	lea    rax,[rdi+0x1]
  403de9:	mov    QWORD PTR [r15+0x10],rax
  403ded:	cmp    rdi,0xffffffffffffffff
  403df1:	je     403e0d <isspace@plt+0x4fd>
  403df3:	mov    rdx,QWORD PTR [r15+0x8]
  403df7:	imul   rdi,rdx
  403dfb:	add    rdi,QWORD PTR [r15]
  403dfe:	test   r14,r14
  403e01:	je     403e24 <isspace@plt+0x514>
  403e03:	mov    rsi,r14
  403e06:	call   4034d0 <memcpy@plt>
  403e0b:	jmp    403e2b <isspace@plt+0x51b>
  403e0d:	call   403130 <__errno_location@plt>
  403e12:	mov    DWORD PTR [rax],0x16
  403e18:	mov    QWORD PTR [r15+0x10],0xffffffffffffffff
  403e20:	xor    eax,eax
  403e22:	jmp    403e2d <isspace@plt+0x51d>
  403e24:	xor    esi,esi
  403e26:	call   403360 <memset@plt>
  403e2b:	mov    al,0x1
  403e2d:	mov    rcx,QWORD PTR fs:0x28
  403e36:	cmp    rcx,QWORD PTR [rsp+0x8]
  403e3b:	jne    403e47 <isspace@plt+0x537>
  403e3d:	add    rsp,0x10
  403e41:	pop    rbx
  403e42:	pop    r14
  403e44:	pop    r15
  403e46:	ret    
  403e47:	call   403280 <__stack_chk_fail@plt>
  403e4c:	nop    DWORD PTR [rax+0x0]
  403e50:	push   r15
  403e52:	push   r14
  403e54:	push   r12
  403e56:	push   rbx
  403e57:	push   rax
  403e58:	mov    r14,rsi
  403e5b:	mov    r12,rdi
  403e5e:	mov    rax,QWORD PTR fs:0x28
  403e67:	mov    QWORD PTR [rsp],rax
  403e6b:	mov    r15,QWORD PTR [rdi+0x10]
  403e6f:	mov    rbx,QWORD PTR [rdi+0x18]
  403e73:	lea    rax,[r15+0x1]
  403e77:	cmp    rax,0x10
  403e7b:	mov    ecx,0x10
  403e80:	cmova  rcx,rax
  403e84:	cmp    rbx,rcx
  403e87:	jae    403ebc <isspace@plt+0x5ac>
  403e89:	add    rbx,rbx
  403e8c:	cmp    rcx,rbx
  403e8f:	cmovae rbx,rcx
  403e93:	mov    rdi,QWORD PTR [r12]
  403e97:	mov    rsi,QWORD PTR [r12+0x8]
  403e9c:	imul   rsi,rbx
  403ea0:	call   4036b0 <realloc@plt>
  403ea5:	test   rax,rax
  403ea8:	je     403ef1 <isspace@plt+0x5e1>
  403eaa:	mov    QWORD PTR [r12+0x18],rbx
  403eaf:	mov    QWORD PTR [r12],rax
  403eb3:	mov    r15,QWORD PTR [r12+0x10]
  403eb8:	lea    rax,[r15+0x1]
  403ebc:	mov    QWORD PTR [r12+0x10],rax
  403ec1:	mov    ebx,0x5f
  403ec6:	cmp    QWORD PTR [r12+0x8],0x8
  403ecc:	jne    403ee5 <isspace@plt+0x5d5>
  403ece:	cmp    r15,0xffffffffffffffff
  403ed2:	je     403ee0 <isspace@plt+0x5d0>
  403ed4:	mov    rax,QWORD PTR [r12]
  403ed8:	mov    QWORD PTR [rax+r15*8],r14
  403edc:	mov    al,0x1
  403ede:	jmp    403ef3 <isspace@plt+0x5e3>
  403ee0:	mov    ebx,0x16
  403ee5:	call   403130 <__errno_location@plt>
  403eea:	mov    DWORD PTR [rax],ebx
  403eec:	mov    QWORD PTR [r12+0x10],r15
  403ef1:	xor    eax,eax
  403ef3:	mov    rcx,QWORD PTR fs:0x28
  403efc:	cmp    rcx,QWORD PTR [rsp]
  403f00:	jne    403f0e <isspace@plt+0x5fe>
  403f02:	add    rsp,0x8
  403f06:	pop    rbx
  403f07:	pop    r12
  403f09:	pop    r14
  403f0b:	pop    r15
  403f0d:	ret    
  403f0e:	call   403280 <__stack_chk_fail@plt>
  403f13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403f1d:	nop    DWORD PTR [rax]
  403f20:	push   rbx
  403f21:	sub    rsp,0x10
  403f25:	mov    rax,QWORD PTR fs:0x28
  403f2e:	mov    QWORD PTR [rsp+0x8],rax
  403f33:	mov    rdx,QWORD PTR [rdi+0x10]
  403f37:	cmp    rdx,rsi
  403f3a:	jbe    403f75 <isspace@plt+0x665>
  403f3c:	mov    rbx,rdi
  403f3f:	mov    r8,QWORD PTR [rdi]
  403f42:	mov    rcx,QWORD PTR [rdi+0x8]
  403f46:	mov    rdi,rcx
  403f49:	imul   rdi,rsi
  403f4d:	add    rdi,r8
  403f50:	lea    rax,[rsi+0x1]
  403f54:	imul   rax,rcx
  403f58:	add    rax,r8
  403f5b:	not    rsi
  403f5e:	add    rdx,rsi
  403f61:	imul   rdx,rcx
  403f65:	mov    rsi,rax
  403f68:	call   403750 <memmove@plt>
  403f6d:	dec    QWORD PTR [rbx+0x10]
  403f71:	mov    al,0x1
  403f73:	jmp    403f82 <isspace@plt+0x672>
  403f75:	call   403130 <__errno_location@plt>
  403f7a:	mov    DWORD PTR [rax],0x16
  403f80:	xor    eax,eax
  403f82:	mov    rcx,QWORD PTR fs:0x28
  403f8b:	cmp    rcx,QWORD PTR [rsp+0x8]
  403f90:	jne    403f98 <isspace@plt+0x688>
  403f92:	add    rsp,0x10
  403f96:	pop    rbx
  403f97:	ret    
  403f98:	call   403280 <__stack_chk_fail@plt>
  403f9d:	nop    DWORD PTR [rax]
  403fa0:	push   rax
  403fa1:	mov    rax,QWORD PTR fs:0x28
  403faa:	mov    QWORD PTR [rsp],rax
  403fae:	mov    rax,QWORD PTR [rdi+0x10]
  403fb2:	mov    rcx,QWORD PTR fs:0x28
  403fbb:	cmp    rcx,QWORD PTR [rsp]
  403fbf:	jne    403fc3 <isspace@plt+0x6b3>
  403fc1:	pop    rcx
  403fc2:	ret    
  403fc3:	call   403280 <__stack_chk_fail@plt>
  403fc8:	nop    DWORD PTR [rax+rax*1+0x0]
  403fd0:	push   rax
  403fd1:	mov    rax,QWORD PTR fs:0x28
  403fda:	mov    QWORD PTR [rsp],rax
  403fde:	mov    rax,QWORD PTR [rdi+0x18]
  403fe2:	mov    rcx,QWORD PTR fs:0x28
  403feb:	cmp    rcx,QWORD PTR [rsp]
  403fef:	jne    403ff3 <isspace@plt+0x6e3>
  403ff1:	pop    rcx
  403ff2:	ret    
  403ff3:	call   403280 <__stack_chk_fail@plt>
  403ff8:	nop    DWORD PTR [rax+rax*1+0x0]
  404000:	push   rax
  404001:	mov    rax,QWORD PTR fs:0x28
  40400a:	mov    QWORD PTR [rsp],rax
  40400e:	cmp    QWORD PTR [rdi+0x10],rsi
  404012:	jae    404018 <isspace@plt+0x708>
  404014:	xor    eax,eax
  404016:	jmp    40401e <isspace@plt+0x70e>
  404018:	mov    QWORD PTR [rdi+0x10],rsi
  40401c:	mov    al,0x1
  40401e:	mov    rcx,QWORD PTR fs:0x28
  404027:	cmp    rcx,QWORD PTR [rsp]
  40402b:	jne    40402f <isspace@plt+0x71f>
  40402d:	pop    rcx
  40402e:	ret    
  40402f:	call   403280 <__stack_chk_fail@plt>
  404034:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40403e:	xchg   ax,ax
  404040:	push   rax
  404041:	mov    rax,QWORD PTR fs:0x28
  40404a:	mov    QWORD PTR [rsp],rax
  40404e:	cmp    QWORD PTR [rdi+0x18],rsi
  404052:	jae    404058 <isspace@plt+0x748>
  404054:	xor    eax,eax
  404056:	jmp    40405e <isspace@plt+0x74e>
  404058:	mov    QWORD PTR [rdi+0x10],rsi
  40405c:	mov    al,0x1
  40405e:	mov    rcx,QWORD PTR fs:0x28
  404067:	cmp    rcx,QWORD PTR [rsp]
  40406b:	jne    40406f <isspace@plt+0x75f>
  40406d:	pop    rcx
  40406e:	ret    
  40406f:	call   403280 <__stack_chk_fail@plt>
  404074:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40407e:	xchg   ax,ax
  404080:	push   rax
  404081:	mov    rax,QWORD PTR fs:0x28
  40408a:	mov    QWORD PTR [rsp],rax
  40408e:	mov    rax,QWORD PTR [rdi]
  404091:	test   rax,rax
  404094:	je     4040ba <isspace@plt+0x7aa>
  404096:	mov    rcx,rsi
  404099:	mov    rdx,QWORD PTR [rdi+0x8]
  40409d:	mov    rsi,QWORD PTR [rdi+0x10]
  4040a1:	mov    rdi,rax
  4040a4:	call   4031a0 <qsort@plt>
  4040a9:	mov    rax,QWORD PTR fs:0x28
  4040b2:	cmp    rax,QWORD PTR [rsp]
  4040b6:	jne    4040cb <isspace@plt+0x7bb>
  4040b8:	pop    rax
  4040b9:	ret    
  4040ba:	mov    rax,QWORD PTR fs:0x28
  4040c3:	cmp    rax,QWORD PTR [rsp]
  4040c7:	jne    4040cb <isspace@plt+0x7bb>
  4040c9:	pop    rax
  4040ca:	ret    
  4040cb:	call   403280 <__stack_chk_fail@plt>
  4040d0:	push   r15
  4040d2:	push   r14
  4040d4:	push   rbx
  4040d5:	sub    rsp,0x10
  4040d9:	mov    r14,rsi
  4040dc:	mov    r15,rdi
  4040df:	mov    rax,QWORD PTR fs:0x28
  4040e8:	mov    QWORD PTR [rsp+0x8],rax
  4040ed:	mov    rdi,QWORD PTR [rdi+0x10]
  4040f1:	mov    rbx,QWORD PTR [r15+0x18]
  4040f5:	lea    rax,[rdi+0x1]
  4040f9:	cmp    rax,0x10
  4040fd:	mov    ecx,0x10
  404102:	cmova  rcx,rax
  404106:	cmp    rbx,rcx
  404109:	jae    404139 <isspace@plt+0x829>
  40410b:	add    rbx,rbx
  40410e:	cmp    rcx,rbx
  404111:	cmovae rbx,rcx
  404115:	mov    rdi,QWORD PTR [r15]
  404118:	mov    rsi,QWORD PTR [r15+0x8]
  40411c:	imul   rsi,rbx
  404120:	call   4036b0 <realloc@plt>
  404125:	test   rax,rax
  404128:	je     404170 <isspace@plt+0x860>
  40412a:	mov    QWORD PTR [r15+0x18],rbx
  40412e:	mov    QWORD PTR [r15],rax
  404131:	mov    rdi,QWORD PTR [r15+0x10]
  404135:	lea    rax,[rdi+0x1]
  404139:	mov    QWORD PTR [r15+0x10],rax
  40413d:	cmp    rdi,0xffffffffffffffff
  404141:	je     40415d <isspace@plt+0x84d>
  404143:	mov    rdx,QWORD PTR [r15+0x8]
  404147:	imul   rdi,rdx
  40414b:	add    rdi,QWORD PTR [r15]
  40414e:	test   r14,r14
  404151:	je     404174 <isspace@plt+0x864>
  404153:	mov    rsi,r14
  404156:	call   4034d0 <memcpy@plt>
  40415b:	jmp    40417b <isspace@plt+0x86b>
  40415d:	call   403130 <__errno_location@plt>
  404162:	mov    DWORD PTR [rax],0x16
  404168:	mov    QWORD PTR [r15+0x10],0xffffffffffffffff
  404170:	xor    eax,eax
  404172:	jmp    40417d <isspace@plt+0x86d>
  404174:	xor    esi,esi
  404176:	call   403360 <memset@plt>
  40417b:	mov    al,0x1
  40417d:	mov    rcx,QWORD PTR fs:0x28
  404186:	cmp    rcx,QWORD PTR [rsp+0x8]
  40418b:	jne    404197 <isspace@plt+0x887>
  40418d:	add    rsp,0x10
  404191:	pop    rbx
  404192:	pop    r14
  404194:	pop    r15
  404196:	ret    
  404197:	call   403280 <__stack_chk_fail@plt>
  40419c:	nop    DWORD PTR [rax+0x0]
  4041a0:	push   rax
  4041a1:	mov    rax,QWORD PTR fs:0x28
  4041aa:	mov    QWORD PTR [rsp],rax
  4041ae:	mov    rcx,QWORD PTR [rdi+0x10]
  4041b2:	test   rcx,rcx
  4041b5:	je     4041cd <isspace@plt+0x8bd>
  4041b7:	dec    rcx
  4041ba:	mov    rax,QWORD PTR [rdi+0x8]
  4041be:	imul   rax,rcx
  4041c2:	add    rax,QWORD PTR [rdi]
  4041c5:	je     4041cd <isspace@plt+0x8bd>
  4041c7:	mov    QWORD PTR [rdi+0x10],rcx
  4041cb:	jmp    4041cf <isspace@plt+0x8bf>
  4041cd:	xor    eax,eax
  4041cf:	mov    rcx,QWORD PTR fs:0x28
  4041d8:	cmp    rcx,QWORD PTR [rsp]
  4041dc:	jne    4041e0 <isspace@plt+0x8d0>
  4041de:	pop    rcx
  4041df:	ret    
  4041e0:	call   403280 <__stack_chk_fail@plt>
  4041e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4041ef:	nop
  4041f0:	push   rax
  4041f1:	mov    rax,QWORD PTR fs:0x28
  4041fa:	mov    QWORD PTR [rsp],rax
  4041fe:	mov    rax,QWORD PTR [rdi+0x10]
  404202:	test   rax,rax
  404205:	je     404214 <isspace@plt+0x904>
  404207:	dec    rax
  40420a:	imul   rax,QWORD PTR [rdi+0x8]
  40420f:	add    rax,QWORD PTR [rdi]
  404212:	jmp    404216 <isspace@plt+0x906>
  404214:	xor    eax,eax
  404216:	mov    rcx,QWORD PTR fs:0x28
  40421f:	cmp    rcx,QWORD PTR [rsp]
  404223:	jne    404227 <isspace@plt+0x917>
  404225:	pop    rcx
  404226:	ret    
  404227:	call   403280 <__stack_chk_fail@plt>
  40422c:	nop    DWORD PTR [rax+0x0]
  404230:	push   rax
  404231:	mov    rax,QWORD PTR fs:0x28
  40423a:	mov    QWORD PTR [rsp],rax
  40423e:	vxorps xmm0,xmm0,xmm0
  404242:	vmovups XMMWORD PTR [rdi],xmm0
  404246:	mov    QWORD PTR [rdi+0x10],0x0
  40424e:	mov    rax,QWORD PTR fs:0x28
  404257:	cmp    rax,QWORD PTR [rsp]
  40425b:	jne    40425f <isspace@plt+0x94f>
  40425d:	pop    rax
  40425e:	ret    
  40425f:	call   403280 <__stack_chk_fail@plt>
  404264:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40426e:	xchg   ax,ax
  404270:	push   rbp
  404271:	push   r14
  404273:	push   rbx
  404274:	sub    rsp,0x10
  404278:	mov    rax,QWORD PTR fs:0x28
  404281:	mov    QWORD PTR [rsp+0x8],rax
  404286:	cmp    rsi,0x400
  40428d:	mov    eax,0x400
  404292:	cmova  rax,rsi
  404296:	mov    rbp,QWORD PTR [rdi+0x10]
  40429a:	mov    r14b,0x1
  40429d:	cmp    rbp,rax
  4042a0:	jae    4042cb <isspace@plt+0x9bb>
  4042a2:	mov    rbx,rdi
  4042a5:	add    rbp,rbp
  4042a8:	cmp    rax,rbp
  4042ab:	cmovae rbp,rax
  4042af:	mov    rdi,QWORD PTR [rdi]
  4042b2:	mov    rsi,rbp
  4042b5:	call   4036b0 <realloc@plt>
  4042ba:	test   rax,rax
  4042bd:	je     4042c8 <isspace@plt+0x9b8>
  4042bf:	mov    QWORD PTR [rbx+0x10],rbp
  4042c3:	mov    QWORD PTR [rbx],rax
  4042c6:	jmp    4042cb <isspace@plt+0x9bb>
  4042c8:	xor    r14d,r14d
  4042cb:	mov    rax,QWORD PTR fs:0x28
  4042d4:	cmp    rax,QWORD PTR [rsp+0x8]
  4042d9:	jne    4042e7 <isspace@plt+0x9d7>
  4042db:	mov    eax,r14d
  4042de:	add    rsp,0x10
  4042e2:	pop    rbx
  4042e3:	pop    r14
  4042e5:	pop    rbp
  4042e6:	ret    
  4042e7:	call   403280 <__stack_chk_fail@plt>
  4042ec:	nop    DWORD PTR [rax+0x0]
  4042f0:	push   rbp
  4042f1:	push   r14
  4042f3:	push   rbx
  4042f4:	sub    rsp,0x10
  4042f8:	mov    rax,QWORD PTR fs:0x28
  404301:	mov    QWORD PTR [rsp+0x8],rax
  404306:	mov    rcx,QWORD PTR [rdi+0x8]
  40430a:	mov    rax,rcx
  40430d:	not    rax
  404310:	cmp    rax,rsi
  404313:	jae    40431a <isspace@plt+0xa0a>
  404315:	xor    r14d,r14d
  404318:	jmp    40435d <isspace@plt+0xa4d>
  40431a:	mov    rbx,rdi
  40431d:	add    rcx,rsi
  404320:	cmp    rcx,0x400
  404327:	mov    eax,0x400
  40432c:	cmova  rax,rcx
  404330:	mov    rbp,QWORD PTR [rdi+0x10]
  404334:	mov    r14b,0x1
  404337:	cmp    rbp,rax
  40433a:	jae    40435d <isspace@plt+0xa4d>
  40433c:	add    rbp,rbp
  40433f:	cmp    rax,rbp
  404342:	cmovae rbp,rax
  404346:	mov    rdi,QWORD PTR [rbx]
  404349:	mov    rsi,rbp
  40434c:	call   4036b0 <realloc@plt>
  404351:	test   rax,rax
  404354:	je     404315 <isspace@plt+0xa05>
  404356:	mov    QWORD PTR [rbx+0x10],rbp
  40435a:	mov    QWORD PTR [rbx],rax
  40435d:	mov    rax,QWORD PTR fs:0x28
  404366:	cmp    rax,QWORD PTR [rsp+0x8]
  40436b:	jne    404379 <isspace@plt+0xa69>
  40436d:	mov    eax,r14d
  404370:	add    rsp,0x10
  404374:	pop    rbx
  404375:	pop    r14
  404377:	pop    rbp
  404378:	ret    
  404379:	call   403280 <__stack_chk_fail@plt>
  40437e:	xchg   ax,ax
  404380:	push   rbp
  404381:	push   r15
  404383:	push   r14
  404385:	push   rbx
  404386:	push   rax
  404387:	mov    rax,QWORD PTR fs:0x28
  404390:	mov    QWORD PTR [rsp],rax
  404394:	mov    rsi,QWORD PTR [rdi]
  404397:	mov    r14b,0x1
  40439a:	test   rsi,rsi
  40439d:	je     404433 <isspace@plt+0xb23>
  4043a3:	mov    rbx,rdi
  4043a6:	mov    rbp,QWORD PTR [rdi+0x8]
  4043aa:	test   rbp,rbp
  4043ad:	je     404433 <isspace@plt+0xb23>
  4043b3:	cmp    BYTE PTR [rbp+rsi*1-0x1],0x0
  4043b8:	je     404433 <isspace@plt+0xb23>
  4043ba:	cmp    rbp,0xffffffffffffffff
  4043be:	je     404430 <isspace@plt+0xb20>
  4043c0:	cmp    rbp,0x3ff
  4043c7:	mov    eax,0x3ff
  4043cc:	cmova  rax,rbp
  4043d0:	mov    r15,QWORD PTR [rbx+0x10]
  4043d4:	cmp    r15,rax
  4043d7:	jbe    4043fe <isspace@plt+0xaee>
  4043d9:	mov    rdx,rbp
  4043dc:	sub    rdx,rbp
  4043df:	je     4043f4 <isspace@plt+0xae4>
  4043e1:	lea    rdi,[rsi+rbp*1]
  4043e5:	add    rdi,0x1
  4043e9:	add    rsi,rbp
  4043ec:	call   403750 <memmove@plt>
  4043f1:	mov    rsi,QWORD PTR [rbx]
  4043f4:	mov    BYTE PTR [rsi+rbp*1],0x0
  4043f8:	inc    QWORD PTR [rbx+0x8]
  4043fc:	jmp    404433 <isspace@plt+0xb23>
  4043fe:	inc    rax
  404401:	add    r15,r15
  404404:	cmp    rax,r15
  404407:	cmovae r15,rax
  40440b:	mov    rdi,rsi
  40440e:	mov    rsi,r15
  404411:	call   4036b0 <realloc@plt>
  404416:	test   rax,rax
  404419:	je     404430 <isspace@plt+0xb20>
  40441b:	mov    rsi,rax
  40441e:	mov    QWORD PTR [rbx+0x10],r15
  404422:	mov    QWORD PTR [rbx],rax
  404425:	mov    rdx,QWORD PTR [rbx+0x8]
  404429:	sub    rdx,rbp
  40442c:	jne    4043e1 <isspace@plt+0xad1>
  40442e:	jmp    4043f4 <isspace@plt+0xae4>
  404430:	xor    r14d,r14d
  404433:	mov    rax,QWORD PTR fs:0x28
  40443c:	cmp    rax,QWORD PTR [rsp]
  404440:	jne    404450 <isspace@plt+0xb40>
  404442:	mov    eax,r14d
  404445:	add    rsp,0x8
  404449:	pop    rbx
  40444a:	pop    r14
  40444c:	pop    r15
  40444e:	pop    rbp
  40444f:	ret    
  404450:	call   403280 <__stack_chk_fail@plt>
  404455:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40445f:	nop
  404460:	push   rbp
  404461:	push   r15
  404463:	push   r14
  404465:	push   r13
  404467:	push   r12
  404469:	push   rbx
  40446a:	push   rax
  40446b:	mov    rax,QWORD PTR fs:0x28
  404474:	mov    QWORD PTR [rsp],rax
  404478:	mov    r14b,0x1
  40447b:	test   rdx,rdx
  40447e:	je     404517 <isspace@plt+0xc07>
  404484:	mov    rbx,rdx
  404487:	mov    r12,rdi
  40448a:	mov    rbp,QWORD PTR [rdi+0x8]
  40448e:	mov    rax,rbp
  404491:	not    rax
  404494:	cmp    rax,rdx
  404497:	jae    40449e <isspace@plt+0xb8e>
  404499:	xor    r14d,r14d
  40449c:	jmp    404517 <isspace@plt+0xc07>
  40449e:	mov    r15,rsi
  4044a1:	lea    rcx,[rbx+rbp*1]
  4044a5:	cmp    rcx,0x400
  4044ac:	mov    eax,0x400
  4044b1:	cmova  rax,rcx
  4044b5:	mov    r13,QWORD PTR [r12+0x10]
  4044ba:	mov    rdx,rbp
  4044bd:	cmp    r13,rax
  4044c0:	jae    4044eb <isspace@plt+0xbdb>
  4044c2:	add    r13,r13
  4044c5:	cmp    rax,r13
  4044c8:	cmovae r13,rax
  4044cc:	mov    rdi,QWORD PTR [r12]
  4044d0:	mov    rsi,r13
  4044d3:	call   4036b0 <realloc@plt>
  4044d8:	test   rax,rax
  4044db:	je     404499 <isspace@plt+0xb89>
  4044dd:	mov    QWORD PTR [r12+0x10],r13
  4044e2:	mov    QWORD PTR [r12],rax
  4044e6:	mov    rdx,QWORD PTR [r12+0x8]
  4044eb:	sub    rdx,rbp
  4044ee:	je     404500 <isspace@plt+0xbf0>
  4044f0:	mov    rsi,QWORD PTR [r12]
  4044f4:	add    rsi,rbp
  4044f7:	lea    rdi,[rsi+rbx*1]
  4044fb:	call   403750 <memmove@plt>
  404500:	add    rbp,QWORD PTR [r12]
  404504:	mov    rdi,rbp
  404507:	mov    rsi,r15
  40450a:	mov    rdx,rbx
  40450d:	call   4034d0 <memcpy@plt>
  404512:	add    QWORD PTR [r12+0x8],rbx
  404517:	mov    rax,QWORD PTR fs:0x28
  404520:	cmp    rax,QWORD PTR [rsp]
  404524:	jne    404538 <isspace@plt+0xc28>
  404526:	mov    eax,r14d
  404529:	add    rsp,0x8
  40452d:	pop    rbx
  40452e:	pop    r12
  404530:	pop    r13
  404532:	pop    r14
  404534:	pop    r15
  404536:	pop    rbp
  404537:	ret    
  404538:	call   403280 <__stack_chk_fail@plt>
  40453d:	nop    DWORD PTR [rax]
  404540:	push   rbx
  404541:	sub    rsp,0x10
  404545:	mov    rax,QWORD PTR fs:0x28
  40454e:	mov    QWORD PTR [rsp+0x8],rax
  404553:	test   rdi,rdi
  404556:	je     404573 <isspace@plt+0xc63>
  404558:	mov    rbx,rdi
  40455b:	mov    rdi,QWORD PTR [rdi]
  40455e:	call   4030d0 <free@plt>
  404563:	vxorps xmm0,xmm0,xmm0
  404567:	vmovups XMMWORD PTR [rbx],xmm0
  40456b:	mov    QWORD PTR [rbx+0x10],0x0
  404573:	mov    rax,QWORD PTR fs:0x28
  40457c:	cmp    rax,QWORD PTR [rsp+0x8]
  404581:	jne    404589 <isspace@plt+0xc79>
  404583:	add    rsp,0x10
  404587:	pop    rbx
  404588:	ret    
  404589:	call   403280 <__stack_chk_fail@plt>
  40458e:	xchg   ax,ax
  404590:	push   rax
  404591:	mov    rax,QWORD PTR fs:0x28
  40459a:	mov    QWORD PTR [rsp],rax
  40459e:	mov    QWORD PTR [rdi+0x8],0x0
  4045a6:	mov    rax,QWORD PTR fs:0x28
  4045af:	cmp    rax,QWORD PTR [rsp]
  4045b3:	jne    4045b7 <isspace@plt+0xca7>
  4045b5:	pop    rax
  4045b6:	ret    
  4045b7:	call   403280 <__stack_chk_fail@plt>
  4045bc:	nop    DWORD PTR [rax+0x0]
  4045c0:	push   r15
  4045c2:	push   r14
  4045c4:	push   r12
  4045c6:	push   rbx
  4045c7:	push   rax
  4045c8:	mov    r12,rdx
  4045cb:	mov    r15,rsi
  4045ce:	mov    r14,rdi
  4045d1:	mov    rax,QWORD PTR fs:0x28
  4045da:	mov    QWORD PTR [rsp],rax
  4045de:	cmp    rdx,0x400
  4045e5:	mov    eax,0x400
  4045ea:	cmova  rax,rdx
  4045ee:	mov    rbx,QWORD PTR [rdi+0x10]
  4045f2:	cmp    rbx,rax
  4045f5:	jae    40461d <isspace@plt+0xd0d>
  4045f7:	add    rbx,rbx
  4045fa:	cmp    rax,rbx
  4045fd:	cmovae rbx,rax
  404601:	mov    rdi,QWORD PTR [r14]
  404604:	mov    rsi,rbx
  404607:	call   4036b0 <realloc@plt>
  40460c:	test   rax,rax
  40460f:	je     40464c <isspace@plt+0xd3c>
  404611:	mov    rdi,rax
  404614:	mov    QWORD PTR [r14+0x10],rbx
  404618:	mov    QWORD PTR [r14],rax
  40461b:	jmp    404620 <isspace@plt+0xd10>
  40461d:	mov    rdi,QWORD PTR [r14]
  404620:	mov    rsi,r15
  404623:	mov    rdx,r12
  404626:	call   403750 <memmove@plt>
  40462b:	mov    QWORD PTR [r14+0x8],r12
  40462f:	mov    al,0x1
  404631:	mov    rcx,QWORD PTR fs:0x28
  40463a:	cmp    rcx,QWORD PTR [rsp]
  40463e:	jne    404650 <isspace@plt+0xd40>
  404640:	add    rsp,0x8
  404644:	pop    rbx
  404645:	pop    r12
  404647:	pop    r14
  404649:	pop    r15
  40464b:	ret    
  40464c:	xor    eax,eax
  40464e:	jmp    404631 <isspace@plt+0xd21>
  404650:	call   403280 <__stack_chk_fail@plt>
  404655:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40465f:	nop
  404660:	push   r15
  404662:	push   r14
  404664:	push   r12
  404666:	push   rbx
  404667:	push   rax
  404668:	mov    r14,rsi
  40466b:	mov    r15,rdi
  40466e:	mov    rax,QWORD PTR fs:0x28
  404677:	mov    QWORD PTR [rsp],rax
  40467b:	mov    rdi,rsi
  40467e:	call   403250 <strlen@plt>
  404683:	mov    r12,rax
  404686:	inc    r12
  404689:	cmp    r12,0x400
  404690:	mov    eax,0x400
  404695:	cmova  rax,r12
  404699:	mov    rbx,QWORD PTR [r15+0x10]
  40469d:	cmp    rbx,rax
  4046a0:	jae    4046c8 <isspace@plt+0xdb8>
  4046a2:	add    rbx,rbx
  4046a5:	cmp    rax,rbx
  4046a8:	cmovae rbx,rax
  4046ac:	mov    rdi,QWORD PTR [r15]
  4046af:	mov    rsi,rbx
  4046b2:	call   4036b0 <realloc@plt>
  4046b7:	test   rax,rax
  4046ba:	je     4046f7 <isspace@plt+0xde7>
  4046bc:	mov    rdi,rax
  4046bf:	mov    QWORD PTR [r15+0x10],rbx
  4046c3:	mov    QWORD PTR [r15],rax
  4046c6:	jmp    4046cb <isspace@plt+0xdbb>
  4046c8:	mov    rdi,QWORD PTR [r15]
  4046cb:	mov    rsi,r14
  4046ce:	mov    rdx,r12
  4046d1:	call   403750 <memmove@plt>
  4046d6:	mov    QWORD PTR [r15+0x8],r12
  4046da:	mov    al,0x1
  4046dc:	mov    rcx,QWORD PTR fs:0x28
  4046e5:	cmp    rcx,QWORD PTR [rsp]
  4046e9:	jne    4046fb <isspace@plt+0xdeb>
  4046eb:	add    rsp,0x8
  4046ef:	pop    rbx
  4046f0:	pop    r12
  4046f2:	pop    r14
  4046f4:	pop    r15
  4046f6:	ret    
  4046f7:	xor    eax,eax
  4046f9:	jmp    4046dc <isspace@plt+0xdcc>
  4046fb:	call   403280 <__stack_chk_fail@plt>
  404700:	push   rbp
  404701:	push   r14
  404703:	push   rbx
  404704:	sub    rsp,0x10
  404708:	mov    rax,QWORD PTR fs:0x28
  404711:	mov    QWORD PTR [rsp+0x8],rax
  404716:	mov    bpl,0x1
  404719:	test   rdx,rdx
  40471c:	je     404756 <isspace@plt+0xe46>
  40471e:	mov    rbx,rdx
  404721:	mov    rax,rsi
  404724:	not    rax
  404727:	cmp    rax,rdx
  40472a:	jb     40473c <isspace@plt+0xe2c>
  40472c:	mov    r14,rdi
  40472f:	lea    rax,[rbx+rsi*1]
  404733:	mov    rdx,QWORD PTR [rdi+0x8]
  404737:	sub    rdx,rax
  40473a:	jae    404740 <isspace@plt+0xe30>
  40473c:	xor    ebp,ebp
  40473e:	jmp    404756 <isspace@plt+0xe46>
  404740:	add    rsi,QWORD PTR [r14]
  404743:	lea    rax,[rsi+rbx*1]
  404747:	mov    rdi,rsi
  40474a:	mov    rsi,rax
  40474d:	call   403750 <memmove@plt>
  404752:	sub    QWORD PTR [r14+0x8],rbx
  404756:	mov    rax,QWORD PTR fs:0x28
  40475f:	cmp    rax,QWORD PTR [rsp+0x8]
  404764:	jne    404771 <isspace@plt+0xe61>
  404766:	mov    eax,ebp
  404768:	add    rsp,0x10
  40476c:	pop    rbx
  40476d:	pop    r14
  40476f:	pop    rbp
  404770:	ret    
  404771:	call   403280 <__stack_chk_fail@plt>
  404776:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404780:	push   rbp
  404781:	push   r15
  404783:	push   r14
  404785:	push   r13
  404787:	push   r12
  404789:	push   rbx
  40478a:	push   rax
  40478b:	mov    r15,rdx
  40478e:	mov    r13,rdi
  404791:	mov    rax,QWORD PTR fs:0x28
  40479a:	mov    QWORD PTR [rsp],rax
  40479e:	test   rsi,rsi
  4047a1:	je     4047d6 <isspace@plt+0xec6>
  4047a3:	mov    rbp,rsi
  4047a6:	mov    rbx,QWORD PTR [r13+0x8]
  4047aa:	cmp    rbx,rsi
  4047ad:	jne    404871 <isspace@plt+0xf61>
  4047b3:	mov    rdi,r13
  4047b6:	mov    rsi,r15
  4047b9:	call   404940 <isspace@plt+0x1030>
  4047be:	mov    rcx,QWORD PTR fs:0x28
  4047c7:	cmp    rcx,QWORD PTR [rsp]
  4047cb:	je     4048ad <isspace@plt+0xf9d>
  4047d1:	jmp    404935 <isspace@plt+0x1025>
  4047d6:	mov    rdi,r15
  4047d9:	call   403250 <strlen@plt>
  4047de:	mov    rdx,QWORD PTR [r13+0x8]
  4047e2:	xor    ebp,ebp
  4047e4:	test   rdx,rdx
  4047e7:	sete   bpl
  4047eb:	mov    r14b,0x1
  4047ee:	add    rbp,rax
  4047f1:	je     404897 <isspace@plt+0xf87>
  4047f7:	mov    rax,rdx
  4047fa:	not    rax
  4047fd:	cmp    rbp,rax
  404800:	ja     404894 <isspace@plt+0xf84>
  404806:	lea    rcx,[rdx+rbp*1]
  40480a:	cmp    rcx,0x400
  404811:	mov    eax,0x400
  404816:	cmova  rax,rcx
  40481a:	mov    rbx,QWORD PTR [r13+0x10]
  40481e:	cmp    rbx,rax
  404821:	jae    40484a <isspace@plt+0xf3a>
  404823:	add    rbx,rbx
  404826:	cmp    rax,rbx
  404829:	cmovae rbx,rax
  40482d:	mov    rdi,QWORD PTR [r13+0x0]
  404831:	mov    rsi,rbx
  404834:	call   4036b0 <realloc@plt>
  404839:	test   rax,rax
  40483c:	je     404894 <isspace@plt+0xf84>
  40483e:	mov    QWORD PTR [r13+0x10],rbx
  404842:	mov    QWORD PTR [r13+0x0],rax
  404846:	mov    rdx,QWORD PTR [r13+0x8]
  40484a:	test   rdx,rdx
  40484d:	je     40485c <isspace@plt+0xf4c>
  40484f:	mov    rsi,QWORD PTR [r13+0x0]
  404853:	lea    rdi,[rsi+rbp*1]
  404857:	call   403750 <memmove@plt>
  40485c:	mov    rdi,QWORD PTR [r13+0x0]
  404860:	mov    rsi,r15
  404863:	mov    rdx,rbp
  404866:	call   4034d0 <memcpy@plt>
  40486b:	add    QWORD PTR [r13+0x8],rbp
  40486f:	jmp    404897 <isspace@plt+0xf87>
  404871:	mov    rdi,r15
  404874:	call   403250 <strlen@plt>
  404879:	cmp    rbx,rbp
  40487c:	jb     404894 <isspace@plt+0xf84>
  40487e:	mov    r12,rax
  404881:	mov    r14b,0x1
  404884:	test   rax,rax
  404887:	je     404897 <isspace@plt+0xf87>
  404889:	mov    rax,rbx
  40488c:	not    rax
  40488f:	cmp    r12,rax
  404892:	jbe    4048bc <isspace@plt+0xfac>
  404894:	xor    r14d,r14d
  404897:	mov    rax,QWORD PTR fs:0x28
  4048a0:	cmp    rax,QWORD PTR [rsp]
  4048a4:	jne    404935 <isspace@plt+0x1025>
  4048aa:	mov    eax,r14d
  4048ad:	add    rsp,0x8
  4048b1:	pop    rbx
  4048b2:	pop    r12
  4048b4:	pop    r13
  4048b6:	pop    r14
  4048b8:	pop    r15
  4048ba:	pop    rbp
  4048bb:	ret    
  4048bc:	lea    rcx,[r12+rbx*1]
  4048c0:	cmp    rcx,0x400
  4048c7:	mov    eax,0x400
  4048cc:	cmova  rax,rcx
  4048d0:	mov    rsi,QWORD PTR [r13+0x10]
  4048d4:	cmp    rsi,rax
  4048d7:	jae    404900 <isspace@plt+0xff0>
  4048d9:	add    rsi,rsi
  4048dc:	cmp    rax,rsi
  4048df:	cmovae rsi,rax
  4048e3:	mov    rdi,QWORD PTR [r13+0x0]
  4048e7:	mov    rbx,rsi
  4048ea:	call   4036b0 <realloc@plt>
  4048ef:	test   rax,rax
  4048f2:	je     404894 <isspace@plt+0xf84>
  4048f4:	mov    QWORD PTR [r13+0x10],rbx
  4048f8:	mov    QWORD PTR [r13+0x0],rax
  4048fc:	mov    rbx,QWORD PTR [r13+0x8]
  404900:	sub    rbx,rbp
  404903:	je     40491a <isspace@plt+0x100a>
  404905:	mov    rsi,QWORD PTR [r13+0x0]
  404909:	add    rsi,rbp
  40490c:	mov    rdi,r12
  40490f:	add    rdi,rsi
  404912:	mov    rdx,rbx
  404915:	call   403750 <memmove@plt>
  40491a:	add    rbp,QWORD PTR [r13+0x0]
  40491e:	mov    rdi,rbp
  404921:	mov    rsi,r15
  404924:	mov    rdx,r12
  404927:	call   4034d0 <memcpy@plt>
  40492c:	add    QWORD PTR [r13+0x8],r12
  404930:	jmp    404897 <isspace@plt+0xf87>
  404935:	call   403280 <__stack_chk_fail@plt>
  40493a:	nop    WORD PTR [rax+rax*1+0x0]
  404940:	push   rbp
  404941:	push   r15
  404943:	push   r14
  404945:	push   r13
  404947:	push   r12
  404949:	push   rbx
  40494a:	push   rax
  40494b:	mov    r15,rsi
  40494e:	mov    r14,rdi
  404951:	mov    rax,QWORD PTR fs:0x28
  40495a:	mov    QWORD PTR [rsp],rax
  40495e:	mov    rbx,QWORD PTR [rdi+0x8]
  404962:	test   rbx,rbx
  404965:	je     404977 <isspace@plt+0x1067>
  404967:	mov    rax,QWORD PTR [r14]
  40496a:	xor    ebp,ebp
  40496c:	cmp    BYTE PTR [rbx+rax*1-0x1],0x0
  404971:	sete   bpl
  404975:	jmp    404979 <isspace@plt+0x1069>
  404977:	xor    ebp,ebp
  404979:	sub    rbx,rbp
  40497c:	mov    QWORD PTR [r14+0x8],rbx
  404980:	mov    rdi,r15
  404983:	call   403250 <strlen@plt>
  404988:	mov    r12,rax
  40498b:	mov    al,0x1
  40498d:	inc    r12
  404990:	je     404a1f <isspace@plt+0x110f>
  404996:	mov    rax,rbx
  404999:	not    rax
  40499c:	cmp    r12,rax
  40499f:	jbe    4049ab <isspace@plt+0x109b>
  4049a1:	add    rbx,rbp
  4049a4:	xor    eax,eax
  4049a6:	mov    r12,rbx
  4049a9:	jmp    404a1b <isspace@plt+0x110b>
  4049ab:	lea    rcx,[r12+rbx*1]
  4049af:	cmp    rcx,0x400
  4049b6:	mov    eax,0x400
  4049bb:	cmova  rax,rcx
  4049bf:	mov    r13,QWORD PTR [r14+0x10]
  4049c3:	mov    rdx,rbx
  4049c6:	cmp    r13,rax
  4049c9:	jae    4049f0 <isspace@plt+0x10e0>
  4049cb:	add    r13,r13
  4049ce:	cmp    rax,r13
  4049d1:	cmovae r13,rax
  4049d5:	mov    rdi,QWORD PTR [r14]
  4049d8:	mov    rsi,r13
  4049db:	call   4036b0 <realloc@plt>
  4049e0:	test   rax,rax
  4049e3:	je     404a3d <isspace@plt+0x112d>
  4049e5:	mov    QWORD PTR [r14+0x10],r13
  4049e9:	mov    QWORD PTR [r14],rax
  4049ec:	mov    rdx,QWORD PTR [r14+0x8]
  4049f0:	sub    rdx,rbx
  4049f3:	je     404a04 <isspace@plt+0x10f4>
  4049f5:	mov    rsi,QWORD PTR [r14]
  4049f8:	add    rsi,rbx
  4049fb:	lea    rdi,[rsi+r12*1]
  4049ff:	call   403750 <memmove@plt>
  404a04:	add    rbx,QWORD PTR [r14]
  404a07:	mov    rdi,rbx
  404a0a:	mov    rsi,r15
  404a0d:	mov    rdx,r12
  404a10:	call   4034d0 <memcpy@plt>
  404a15:	add    r12,QWORD PTR [r14+0x8]
  404a19:	mov    al,0x1
  404a1b:	mov    QWORD PTR [r14+0x8],r12
  404a1f:	mov    rcx,QWORD PTR fs:0x28
  404a28:	cmp    rcx,QWORD PTR [rsp]
  404a2c:	jne    404a46 <isspace@plt+0x1136>
  404a2e:	add    rsp,0x8
  404a32:	pop    rbx
  404a33:	pop    r12
  404a35:	pop    r13
  404a37:	pop    r14
  404a39:	pop    r15
  404a3b:	pop    rbp
  404a3c:	ret    
  404a3d:	mov    rbx,QWORD PTR [r14+0x8]
  404a41:	jmp    4049a1 <isspace@plt+0x1091>
  404a46:	call   403280 <__stack_chk_fail@plt>
  404a4b:	nop    DWORD PTR [rax+rax*1+0x0]
  404a50:	sub    rsp,0xd8
  404a57:	test   al,al
  404a59:	je     404a94 <isspace@plt+0x1184>
  404a5b:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  404a61:	vmovaps XMMWORD PTR [rsp+0x40],xmm1
  404a67:	vmovaps XMMWORD PTR [rsp+0x50],xmm2
  404a6d:	vmovaps XMMWORD PTR [rsp+0x60],xmm3
  404a73:	vmovaps XMMWORD PTR [rsp+0x70],xmm4
  404a79:	vmovaps XMMWORD PTR [rsp+0x80],xmm5
  404a82:	vmovaps XMMWORD PTR [rsp+0x90],xmm6
  404a8b:	vmovaps XMMWORD PTR [rsp+0xa0],xmm7
  404a94:	mov    QWORD PTR [rsp+0x10],rdx
  404a99:	mov    QWORD PTR [rsp+0x18],rcx
  404a9e:	mov    QWORD PTR [rsp+0x20],r8
  404aa3:	mov    QWORD PTR [rsp+0x28],r9
  404aa8:	mov    rax,QWORD PTR fs:0x28
  404ab1:	mov    QWORD PTR [rsp+0xd0],rax
  404ab9:	mov    rax,rsp
  404abc:	mov    QWORD PTR [rsp+0xc0],rax
  404ac4:	lea    rax,[rsp+0xe0]
  404acc:	mov    QWORD PTR [rsp+0xb8],rax
  404ad4:	movabs rax,0x3000000010
  404ade:	mov    QWORD PTR [rsp+0xb0],rax
  404ae6:	lea    rdx,[rsp+0xb0]
  404aee:	call   404b20 <isspace@plt+0x1210>
  404af3:	mov    rcx,QWORD PTR fs:0x28
  404afc:	cmp    rcx,QWORD PTR [rsp+0xd0]
  404b04:	jne    404b0e <isspace@plt+0x11fe>
  404b06:	add    rsp,0xd8
  404b0d:	ret    
  404b0e:	call   403280 <__stack_chk_fail@plt>
  404b13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b1d:	nop    DWORD PTR [rax]
  404b20:	push   rbp
  404b21:	push   r15
  404b23:	push   r14
  404b25:	push   r13
  404b27:	push   r12
  404b29:	push   rbx
  404b2a:	sub    rsp,0x28
  404b2e:	mov    r9,rdx
  404b31:	mov    r14,rsi
  404b34:	mov    r15,rdi
  404b37:	mov    rax,QWORD PTR fs:0x28
  404b40:	mov    QWORD PTR [rsp+0x20],rax
  404b45:	mov    rax,QWORD PTR [rdx+0x10]
  404b49:	mov    QWORD PTR [rsp+0x10],rax
  404b4e:	vmovups xmm0,XMMWORD PTR [rdx]
  404b52:	vmovaps XMMWORD PTR [rsp],xmm0
  404b57:	xor    ebx,ebx
  404b59:	xor    edi,edi
  404b5b:	xor    esi,esi
  404b5d:	mov    edx,0x1
  404b62:	mov    rcx,0xffffffffffffffff
  404b69:	mov    r8,r14
  404b6c:	call   4036a0 <__vsnprintf_chk@plt>
  404b71:	cmp    eax,0xffffffff
  404b74:	je     404c27 <isspace@plt+0x1317>
  404b7a:	mov    r13d,eax
  404b7d:	lea    eax,[r13+0x1]
  404b81:	movsxd r12,eax
  404b84:	mov    rax,QWORD PTR [r15+0x8]
  404b88:	mov    rcx,rax
  404b8b:	not    rcx
  404b8e:	cmp    rcx,r12
  404b91:	jae    404b9a <isspace@plt+0x128a>
  404b93:	xor    ebx,ebx
  404b95:	jmp    404c27 <isspace@plt+0x1317>
  404b9a:	lea    rdx,[rax+r12*1]
  404b9e:	cmp    rdx,0x400
  404ba5:	mov    ecx,0x400
  404baa:	cmova  rcx,rdx
  404bae:	mov    rbx,QWORD PTR [r15+0x10]
  404bb2:	cmp    rbx,rcx
  404bb5:	jae    404bdc <isspace@plt+0x12cc>
  404bb7:	add    rbx,rbx
  404bba:	cmp    rcx,rbx
  404bbd:	cmovae rbx,rcx
  404bc1:	mov    rdi,QWORD PTR [r15]
  404bc4:	mov    rsi,rbx
  404bc7:	call   4036b0 <realloc@plt>
  404bcc:	test   rax,rax
  404bcf:	je     404b93 <isspace@plt+0x1283>
  404bd1:	mov    QWORD PTR [r15+0x10],rbx
  404bd5:	mov    QWORD PTR [r15],rax
  404bd8:	mov    rax,QWORD PTR [r15+0x8]
  404bdc:	mov    rdi,QWORD PTR [r15]
  404bdf:	xor    ebp,ebp
  404be1:	test   rax,rax
  404be4:	je     404bef <isspace@plt+0x12df>
  404be6:	cmp    BYTE PTR [rax+rdi*1-0x1],0x0
  404beb:	sete   bpl
  404bef:	sub    rax,rbp
  404bf2:	mov    QWORD PTR [r15+0x8],rax
  404bf6:	add    rdi,rax
  404bf9:	mov    r9,rsp
  404bfc:	mov    rsi,r12
  404bff:	mov    edx,0x1
  404c04:	mov    rcx,0xffffffffffffffff
  404c0b:	mov    r8,r14
  404c0e:	call   4036a0 <__vsnprintf_chk@plt>
  404c13:	movsxd rcx,r13d
  404c16:	inc    rcx
  404c19:	cmp    eax,r13d
  404c1c:	sete   bl
  404c1f:	cmovne rcx,rbp
  404c23:	add    QWORD PTR [r15+0x8],rcx
  404c27:	mov    rax,QWORD PTR fs:0x28
  404c30:	cmp    rax,QWORD PTR [rsp+0x20]
  404c35:	jne    404c48 <isspace@plt+0x1338>
  404c37:	mov    eax,ebx
  404c39:	add    rsp,0x28
  404c3d:	pop    rbx
  404c3e:	pop    r12
  404c40:	pop    r13
  404c42:	pop    r14
  404c44:	pop    r15
  404c46:	pop    rbp
  404c47:	ret    
  404c48:	call   403280 <__stack_chk_fail@plt>
  404c4d:	nop    DWORD PTR [rax]
  404c50:	sub    rsp,0xd8
  404c57:	test   al,al
  404c59:	je     404c94 <isspace@plt+0x1384>
  404c5b:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  404c61:	vmovaps XMMWORD PTR [rsp+0x40],xmm1
  404c67:	vmovaps XMMWORD PTR [rsp+0x50],xmm2
  404c6d:	vmovaps XMMWORD PTR [rsp+0x60],xmm3
  404c73:	vmovaps XMMWORD PTR [rsp+0x70],xmm4
  404c79:	vmovaps XMMWORD PTR [rsp+0x80],xmm5
  404c82:	vmovaps XMMWORD PTR [rsp+0x90],xmm6
  404c8b:	vmovaps XMMWORD PTR [rsp+0xa0],xmm7
  404c94:	mov    QWORD PTR [rsp+0x10],rdx
  404c99:	mov    QWORD PTR [rsp+0x18],rcx
  404c9e:	mov    QWORD PTR [rsp+0x20],r8
  404ca3:	mov    QWORD PTR [rsp+0x28],r9
  404ca8:	mov    rax,QWORD PTR fs:0x28
  404cb1:	mov    QWORD PTR [rsp+0xd0],rax
  404cb9:	mov    QWORD PTR [rdi+0x8],0x0
  404cc1:	mov    rax,rsp
  404cc4:	mov    QWORD PTR [rsp+0xc0],rax
  404ccc:	lea    rax,[rsp+0xe0]
  404cd4:	mov    QWORD PTR [rsp+0xb8],rax
  404cdc:	movabs rax,0x3000000010
  404ce6:	mov    QWORD PTR [rsp+0xb0],rax
  404cee:	lea    rdx,[rsp+0xb0]
  404cf6:	call   404b20 <isspace@plt+0x1210>
  404cfb:	mov    rcx,QWORD PTR fs:0x28
  404d04:	cmp    rcx,QWORD PTR [rsp+0xd0]
  404d0c:	jne    404d16 <isspace@plt+0x1406>
  404d0e:	add    rsp,0xd8
  404d15:	ret    
  404d16:	call   403280 <__stack_chk_fail@plt>
  404d1b:	nop    DWORD PTR [rax+rax*1+0x0]
  404d20:	push   rax
  404d21:	mov    rax,QWORD PTR fs:0x28
  404d2a:	mov    QWORD PTR [rsp],rax
  404d2e:	mov    rcx,QWORD PTR [rdi+0x8]
  404d32:	test   rcx,rcx
  404d35:	je     404d58 <isspace@plt+0x1448>
  404d37:	mov    rdx,QWORD PTR [rdi]
  404d3a:	lea    rax,[rcx-0x1]
  404d3e:	cmp    BYTE PTR [rdx+rcx*1-0x1],0x0
  404d43:	cmovne rax,rcx
  404d47:	mov    rcx,QWORD PTR fs:0x28
  404d50:	cmp    rcx,QWORD PTR [rsp]
  404d54:	jne    404d6b <isspace@plt+0x145b>
  404d56:	pop    rcx
  404d57:	ret    
  404d58:	mov    rax,QWORD PTR fs:0x28
  404d61:	cmp    rax,QWORD PTR [rsp]
  404d65:	jne    404d6b <isspace@plt+0x145b>
  404d67:	xor    eax,eax
  404d69:	pop    rcx
  404d6a:	ret    
  404d6b:	call   403280 <__stack_chk_fail@plt>
  404d70:	push   rax
  404d71:	mov    rax,QWORD PTR fs:0x28
  404d7a:	mov    QWORD PTR [rsp],rax
  404d7e:	mov    rax,QWORD PTR [rdi+0x8]
  404d82:	mov    rcx,QWORD PTR fs:0x28
  404d8b:	cmp    rcx,QWORD PTR [rsp]
  404d8f:	jne    404d93 <isspace@plt+0x1483>
  404d91:	pop    rcx
  404d92:	ret    
  404d93:	call   403280 <__stack_chk_fail@plt>
  404d98:	nop    DWORD PTR [rax+rax*1+0x0]
  404da0:	push   r15
  404da2:	push   r14
  404da4:	push   r12
  404da6:	push   rbx
  404da7:	push   rax
  404da8:	mov    rax,QWORD PTR fs:0x28
  404db1:	mov    QWORD PTR [rsp],rax
  404db5:	mov    rbx,QWORD PTR [rdi+0x8]
  404db9:	lea    r14,[rip+0x2bcd3]        # 430a93 <isspace@plt+0x2d183>
  404dc0:	test   rbx,rbx
  404dc3:	je     404e2a <isspace@plt+0x151a>
  404dc5:	mov    r12,rdi
  404dc8:	mov    rsi,QWORD PTR [rdi]
  404dcb:	test   rsi,rsi
  404dce:	je     404e22 <isspace@plt+0x1512>
  404dd0:	cmp    BYTE PTR [rbx+rsi*1-0x1],0x0
  404dd5:	je     404e27 <isspace@plt+0x1517>
  404dd7:	cmp    rbx,0xffffffffffffffff
  404ddb:	je     404e2a <isspace@plt+0x151a>
  404ddd:	cmp    rbx,0x3ff
  404de4:	mov    eax,0x3ff
  404de9:	cmova  rax,rbx
  404ded:	mov    r15,QWORD PTR [r12+0x10]
  404df2:	cmp    r15,rax
  404df5:	jbe    404e48 <isspace@plt+0x1538>
  404df7:	mov    rdx,rbx
  404dfa:	sub    rdx,rbx
  404dfd:	je     404e13 <isspace@plt+0x1503>
  404dff:	lea    rdi,[rsi+rbx*1]
  404e03:	add    rdi,0x1
  404e07:	add    rsi,rbx
  404e0a:	call   403750 <memmove@plt>
  404e0f:	mov    rsi,QWORD PTR [r12]
  404e13:	mov    BYTE PTR [rsi+rbx*1],0x0
  404e17:	inc    QWORD PTR [r12+0x8]
  404e1c:	mov    r14,QWORD PTR [r12]
  404e20:	jmp    404e2a <isspace@plt+0x151a>
  404e22:	xor    r14d,r14d
  404e25:	jmp    404e2a <isspace@plt+0x151a>
  404e27:	mov    r14,rsi
  404e2a:	mov    rax,QWORD PTR fs:0x28
  404e33:	cmp    rax,QWORD PTR [rsp]
  404e37:	jne    404e7d <isspace@plt+0x156d>
  404e39:	mov    rax,r14
  404e3c:	add    rsp,0x8
  404e40:	pop    rbx
  404e41:	pop    r12
  404e43:	pop    r14
  404e45:	pop    r15
  404e47:	ret    
  404e48:	inc    rax
  404e4b:	add    r15,r15
  404e4e:	cmp    rax,r15
  404e51:	cmovae r15,rax
  404e55:	mov    rdi,rsi
  404e58:	mov    rsi,r15
  404e5b:	call   4036b0 <realloc@plt>
  404e60:	test   rax,rax
  404e63:	je     404e2a <isspace@plt+0x151a>
  404e65:	mov    rsi,rax
  404e68:	mov    QWORD PTR [r12+0x10],r15
  404e6d:	mov    QWORD PTR [r12],rax
  404e71:	mov    rdx,QWORD PTR [r12+0x8]
  404e76:	sub    rdx,rbx
  404e79:	jne    404dff <isspace@plt+0x14ef>
  404e7b:	jmp    404e13 <isspace@plt+0x1503>
  404e7d:	call   403280 <__stack_chk_fail@plt>
  404e82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404e8c:	nop    DWORD PTR [rax+0x0]
  404e90:	push   rax
  404e91:	mov    rax,QWORD PTR fs:0x28
  404e9a:	mov    QWORD PTR [rsp],rax
  404e9e:	mov    rax,QWORD PTR [rdi]
  404ea1:	vxorps xmm0,xmm0,xmm0
  404ea5:	vmovups XMMWORD PTR [rdi],xmm0
  404ea9:	mov    QWORD PTR [rdi+0x10],0x0
  404eb1:	mov    rcx,QWORD PTR fs:0x28
  404eba:	cmp    rcx,QWORD PTR [rsp]
  404ebe:	jne    404ec2 <isspace@plt+0x15b2>
  404ec0:	pop    rcx
  404ec1:	ret    
  404ec2:	call   403280 <__stack_chk_fail@plt>
  404ec7:	nop    WORD PTR [rax+rax*1+0x0]
  404ed0:	push   rax
  404ed1:	mov    rax,QWORD PTR fs:0x28
  404eda:	mov    QWORD PTR [rsp],rax
  404ede:	mov    ecx,DWORD PTR [rsi]
  404ee0:	cmp    ecx,0x80
  404ee6:	jae    404ef1 <isspace@plt+0x15e1>
  404ee8:	mov    BYTE PTR [rdi],cl
  404eea:	mov    eax,0x1
  404eef:	jmp    404f4d <isspace@plt+0x163d>
  404ef1:	cmp    ecx,0x800
  404ef7:	jae    404f14 <isspace@plt+0x1604>
  404ef9:	mov    eax,ecx
  404efb:	shr    eax,0x6
  404efe:	and    al,0x1f
  404f00:	or     al,0xc0
  404f02:	mov    BYTE PTR [rdi],al
  404f04:	and    cl,0x3f
  404f07:	or     cl,0x80
  404f0a:	mov    BYTE PTR [rdi+0x1],cl
  404f0d:	mov    eax,0x2
  404f12:	jmp    404f4d <isspace@plt+0x163d>
  404f14:	cmp    ecx,0xd800
  404f1a:	jae    404f43 <isspace@plt+0x1633>
  404f1c:	mov    eax,ecx
  404f1e:	shr    eax,0xc
  404f21:	and    al,0xf
  404f23:	or     al,0xe0
  404f25:	mov    BYTE PTR [rdi],al
  404f27:	mov    eax,ecx
  404f29:	shr    eax,0x6
  404f2c:	and    al,0x3f
  404f2e:	or     al,0x80
  404f30:	mov    BYTE PTR [rdi+0x1],al
  404f33:	and    cl,0x3f
  404f36:	or     cl,0x80
  404f39:	mov    BYTE PTR [rdi+0x2],cl
  404f3c:	mov    eax,0x3
  404f41:	jmp    404f4d <isspace@plt+0x163d>
  404f43:	xor    eax,eax
  404f45:	cmp    ecx,0xe000
  404f4b:	jae    404f5e <isspace@plt+0x164e>
  404f4d:	mov    rcx,QWORD PTR fs:0x28
  404f56:	cmp    rcx,QWORD PTR [rsp]
  404f5a:	jne    404fa7 <isspace@plt+0x1697>
  404f5c:	pop    rcx
  404f5d:	ret    
  404f5e:	cmp    ecx,0xfffe
  404f64:	jb     404f1c <isspace@plt+0x160c>
  404f66:	lea    edx,[rcx-0x10000]
  404f6c:	cmp    edx,0x100000
  404f72:	jae    404f4d <isspace@plt+0x163d>
  404f74:	mov    eax,ecx
  404f76:	shr    eax,0x12
  404f79:	and    al,0x7
  404f7b:	or     al,0xf0
  404f7d:	mov    BYTE PTR [rdi],al
  404f7f:	mov    eax,ecx
  404f81:	shr    eax,0xc
  404f84:	and    al,0x3f
  404f86:	or     al,0x80
  404f88:	mov    BYTE PTR [rdi+0x1],al
  404f8b:	mov    eax,ecx
  404f8d:	shr    eax,0x6
  404f90:	and    al,0x3f
  404f92:	or     al,0x80
  404f94:	mov    BYTE PTR [rdi+0x2],al
  404f97:	and    cl,0x3f
  404f9a:	or     cl,0x80
  404f9d:	mov    BYTE PTR [rdi+0x3],cl
  404fa0:	mov    eax,0x4
  404fa5:	jmp    404f4d <isspace@plt+0x163d>
  404fa7:	call   403280 <__stack_chk_fail@plt>
  404fac:	nop    DWORD PTR [rax+0x0]
  404fb0:	push   rbp
  404fb1:	mov    rbp,rsp
  404fb4:	push   r15
  404fb6:	push   r14
  404fb8:	push   r13
  404fba:	push   r12
  404fbc:	push   rbx
  404fbd:	and    rsp,0xffffffffffffffe0
  404fc1:	sub    rsp,0x11e0
  404fc8:	mov    r12,rsi
  404fcb:	mov    r14d,edi
  404fce:	mov    rax,QWORD PTR fs:0x28
  404fd7:	mov    QWORD PTR [rsp+0x11c0],rax
  404fdf:	vmovups ymm0,YMMWORD PTR [rip+0x374e9]        # 43c4d0 <isspace@plt+0x38bc0>
  404fe7:	vmovups YMMWORD PTR [rsp+0x80],ymm0
  404ff0:	vmovups ymm0,YMMWORD PTR [rip+0x374c8]        # 43c4c0 <isspace@plt+0x38bb0>
  404ff8:	vmovups YMMWORD PTR [rsp+0x70],ymm0
  404ffe:	vmovups ymm0,YMMWORD PTR [rip+0x3749a]        # 43c4a0 <isspace@plt+0x38b90>
  405006:	vmovups YMMWORD PTR [rsp+0x50],ymm0
  40500c:	vmovups ymm0,YMMWORD PTR [rip+0x3746c]        # 43c480 <isspace@plt+0x38b70>
  405014:	vmovups YMMWORD PTR [rsp+0x30],ymm0
  40501a:	vzeroupper 
  40501d:	call   4175d0 <isspace@plt+0x13cc0>
  405022:	lea    rsi,[rsp+0x30]
  405027:	mov    rdi,rax
  40502a:	call   421990 <isspace@plt+0x1e080>
  40502f:	mov    QWORD PTR [rip+0x3d352],rax        # 442388 <isspace@plt+0x3ea78>
  405036:	test   rax,rax
  405039:	je     405379 <isspace@plt+0x1a69>
  40503f:	lea    r15,[rip+0x374da]        # 43c520 <isspace@plt+0x38c10>
  405046:	mov    rdi,rax
  405049:	mov    rsi,r15
  40504c:	call   422240 <isspace@plt+0x1e930>
  405051:	test   al,al
  405053:	je     40508c <isspace@plt+0x177c>
  405055:	lea    r15,[rip+0x374c4]        # 43c520 <isspace@plt+0x38c10>
  40505c:	mov    ebx,0xab
  405061:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40506b:	nop    DWORD PTR [rax+rax*1+0x0]
  405070:	dec    rbx
  405073:	je     4050a4 <isspace@plt+0x1794>
  405075:	add    r15,0x20
  405079:	mov    rdi,QWORD PTR [rip+0x3d308]        # 442388 <isspace@plt+0x3ea78>
  405080:	mov    rsi,r15
  405083:	call   422240 <isspace@plt+0x1e930>
  405088:	test   al,al
  40508a:	jne    405070 <isspace@plt+0x1760>
  40508c:	mov    rdi,QWORD PTR [rip+0x3d2f5]        # 442388 <isspace@plt+0x3ea78>
  405093:	mov    rdx,QWORD PTR [r15]
  405096:	lea    rsi,[rip+0x2700b]        # 42c0a8 <isspace@plt+0x28798>
  40509d:	xor    eax,eax
  40509f:	call   422e30 <isspace@plt+0x1f520>
  4050a4:	mov    QWORD PTR [rsp+0x18],r12
  4050a9:	xor    r12d,r12d
  4050ac:	lea    r15,[rip+0x3743d]        # 43c4f0 <isspace@plt+0x38be0>
  4050b3:	jmp    4050c9 <isspace@plt+0x17b9>
  4050b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4050bf:	nop
  4050c0:	inc    r12
  4050c3:	cmp    r12,0x6
  4050c7:	je     405123 <isspace@plt+0x1813>
  4050c9:	mov    r13,QWORD PTR [r15+r12*8]
  4050cd:	mov    rbx,QWORD PTR [r13+0x0]
  4050d1:	test   rbx,rbx
  4050d4:	jne    4050ed <isspace@plt+0x17dd>
  4050d6:	jmp    4050c0 <isspace@plt+0x17b0>
  4050d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4050e0:	mov    rbx,QWORD PTR [r13+0x8]
  4050e4:	add    r13,0x8
  4050e8:	test   rbx,rbx
  4050eb:	je     4050c0 <isspace@plt+0x17b0>
  4050ed:	mov    rcx,QWORD PTR [rbx]
  4050f0:	test   rcx,rcx
  4050f3:	je     4050e0 <isspace@plt+0x17d0>
  4050f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4050ff:	nop
  405100:	mov    rdi,QWORD PTR [rip+0x3d281]        # 442388 <isspace@plt+0x3ea78>
  405107:	mov    esi,r12d
  40510a:	xor    edx,edx
  40510c:	mov    r8,rbx
  40510f:	call   427270 <isspace@plt+0x23960>
  405114:	mov    rcx,QWORD PTR [rbx+0x18]
  405118:	add    rbx,0x18
  40511c:	test   rcx,rcx
  40511f:	jne    405100 <isspace@plt+0x17f0>
  405121:	jmp    4050e0 <isspace@plt+0x17d0>
  405123:	vxorps xmm0,xmm0,xmm0
  405127:	vmovups YMMWORD PTR [rsp+0x1198],ymm0
  405130:	vmovaps YMMWORD PTR [rsp+0x1180],ymm0
  405139:	vmovaps YMMWORD PTR [rsp+0x1160],ymm0
  405142:	vmovaps YMMWORD PTR [rsp+0x1140],ymm0
  40514b:	vmovaps YMMWORD PTR [rsp+0x1120],ymm0
  405154:	lea    rdi,[rsp+0x1128]
  40515c:	vzeroupper 
  40515f:	call   4034e0 <sigfillset@plt>
  405164:	mov    DWORD PTR [rsp+0x11a8],0x4
  40516f:	lea    rax,[rip+0x53a]        # 4056b0 <isspace@plt+0x1da0>
  405176:	mov    QWORD PTR [rsp+0x1120],rax
  40517e:	lea    rsi,[rsp+0x1120]
  405186:	mov    edi,0x7
  40518b:	xor    edx,edx
  40518d:	call   4031b0 <sigaction@plt>
  405192:	cmp    eax,0xffffffff
  405195:	je     4055e5 <isspace@plt+0x1cd5>
  40519b:	lea    rsi,[rsp+0x1120]
  4051a3:	mov    edi,0x2
  4051a8:	xor    edx,edx
  4051aa:	call   4031b0 <sigaction@plt>
  4051af:	cmp    eax,0xffffffff
  4051b2:	je     4055e5 <isspace@plt+0x1cd5>
  4051b8:	lea    rsi,[rsp+0x1120]
  4051c0:	mov    edi,0x12
  4051c5:	xor    edx,edx
  4051c7:	call   4031b0 <sigaction@plt>
  4051cc:	cmp    eax,0xffffffff
  4051cf:	je     4055e5 <isspace@plt+0x1cd5>
  4051d5:	lea    rsi,[rsp+0x1120]
  4051dd:	mov    edi,0x1c
  4051e2:	xor    edx,edx
  4051e4:	call   4031b0 <sigaction@plt>
  4051e9:	cmp    eax,0xffffffff
  4051ec:	je     4055e5 <isspace@plt+0x1cd5>
  4051f2:	lea    rsi,[rsp+0x1120]
  4051fa:	mov    edi,0xf
  4051ff:	xor    edx,edx
  405201:	call   4031b0 <sigaction@plt>
  405206:	cmp    eax,0xffffffff
  405209:	je     4055e5 <isspace@plt+0x1cd5>
  40520f:	lea    rsi,[rsp+0x1120]
  405217:	mov    edi,0x1
  40521c:	xor    edx,edx
  40521e:	call   4031b0 <sigaction@plt>
  405223:	cmp    eax,0xffffffff
  405226:	je     4055e5 <isspace@plt+0x1cd5>
  40522c:	mov    QWORD PTR [rsp+0x1120],0x1
  405238:	lea    rsi,[rsp+0x1120]
  405240:	mov    edi,0xd
  405245:	xor    edx,edx
  405247:	call   4031b0 <sigaction@plt>
  40524c:	cmp    eax,0xffffffff
  40524f:	mov    r13,QWORD PTR [rsp+0x18]
  405254:	je     40560c <isspace@plt+0x1cfc>
  40525a:	lea    rsi,[rsp+0x1120]
  405262:	mov    edi,0x3
  405267:	xor    edx,edx
  405269:	call   4031b0 <sigaction@plt>
  40526e:	cmp    eax,0xffffffff
  405271:	je     40560c <isspace@plt+0x1cfc>
  405277:	lea    rbx,[rsp+0x10a0]
  40527f:	mov    rdi,rbx
  405282:	call   403490 <sigemptyset@plt>
  405287:	mov    rdi,rbx
  40528a:	mov    esi,0x7
  40528f:	call   4038c0 <sigaddset@plt>
  405294:	mov    rdi,rbx
  405297:	mov    esi,0x12
  40529c:	call   4038c0 <sigaddset@plt>
  4052a1:	mov    rdi,rbx
  4052a4:	mov    esi,0x1c
  4052a9:	call   4038c0 <sigaddset@plt>
  4052ae:	mov    rdi,rbx
  4052b1:	mov    esi,0xf
  4052b6:	call   4038c0 <sigaddset@plt>
  4052bb:	mov    rdi,rbx
  4052be:	mov    esi,0x1
  4052c3:	call   4038c0 <sigaddset@plt>
  4052c8:	xor    edi,edi
  4052ca:	mov    rsi,rbx
  4052cd:	xor    edx,edx
  4052cf:	call   4030b0 <sigprocmask@plt>
  4052d4:	cmp    eax,0xffffffff
  4052d7:	je     40569b <isspace@plt+0x1d8b>
  4052dd:	cmp    r14d,0x2
  4052e1:	jl     405514 <isspace@plt+0x1c04>
  4052e7:	mov    eax,r14d
  4052ea:	mov    QWORD PTR [rsp+0x28],rax
  4052ef:	mov    ebx,0x1
  4052f4:	lea    r12,[rip+0x26e22]        # 42c11d <isspace@plt+0x2880d>
  4052fb:	jmp    40530a <isspace@plt+0x19fa>
  4052fd:	nop    DWORD PTR [rax]
  405300:	inc    rbx
  405303:	cmp    QWORD PTR [rsp+0x28],rbx
  405308:	je     405384 <isspace@plt+0x1a74>
  40530a:	mov    r15,QWORD PTR [r13+rbx*8+0x0]
  40530f:	cmp    BYTE PTR [r15],0x2d
  405313:	jne    405300 <isspace@plt+0x19f0>
  405315:	mov    rdi,r15
  405318:	mov    rsi,r12
  40531b:	call   403470 <strcmp@plt>
  405320:	test   eax,eax
  405322:	je     405300 <isspace@plt+0x19f0>
  405324:	lea    rsi,[rip+0x26df1]        # 42c11c <isspace@plt+0x2880c>
  40532b:	mov    rdi,r15
  40532e:	call   403470 <strcmp@plt>
  405333:	test   eax,eax
  405335:	je     405384 <isspace@plt+0x1a74>
  405337:	lea    rsi,[rip+0x26de1]        # 42c11f <isspace@plt+0x2880f>
  40533e:	mov    rdi,r15
  405341:	call   403470 <strcmp@plt>
  405346:	test   eax,eax
  405348:	je     4055a1 <isspace@plt+0x1c91>
  40534e:	mov    rax,QWORD PTR [rip+0x3cca3]        # 441ff8 <isspace@plt+0x3e6e8>
  405355:	mov    rdi,QWORD PTR [rax]
  405358:	lea    rdx,[rip+0x26e02]        # 42c161 <isspace@plt+0x28851>
  40535f:	mov    r14d,0x1
  405365:	mov    esi,0x1
  40536a:	mov    rcx,r15
  40536d:	xor    eax,eax
  40536f:	call   403820 <__fprintf_chk@plt>
  405374:	jmp    405578 <isspace@plt+0x1c68>
  405379:	mov    r14d,0x1
  40537f:	jmp    405578 <isspace@plt+0x1c68>
  405384:	cmp    r14d,0x2
  405388:	jl     405514 <isspace@plt+0x1c04>
  40538e:	mov    r15d,0x1
  405394:	lea    r14,[rsp+0xa0]
  40539c:	xor    r13d,r13d
  40539f:	xor    r12d,r12d
  4053a2:	xor    ecx,ecx
  4053a4:	jmp    4053c0 <isspace@plt+0x1ab0>
  4053a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4053b0:	xor    ecx,ecx
  4053b2:	inc    r15
  4053b5:	cmp    r15,QWORD PTR [rsp+0x28]
  4053ba:	je     405519 <isspace@plt+0x1c09>
  4053c0:	mov    rax,QWORD PTR [rsp+0x18]
  4053c5:	mov    rbx,QWORD PTR [rax+r15*8]
  4053c9:	mov    al,BYTE PTR [rbx]
  4053cb:	test   r12b,0x1
  4053cf:	jne    405410 <isspace@plt+0x1b00>
  4053d1:	cmp    al,0x2d
  4053d3:	jne    405410 <isspace@plt+0x1b00>
  4053d5:	mov    QWORD PTR [rsp+0x20],rcx
  4053da:	mov    rdi,rbx
  4053dd:	lea    rsi,[rip+0x26d39]        # 42c11d <isspace@plt+0x2880d>
  4053e4:	call   403470 <strcmp@plt>
  4053e9:	test   eax,eax
  4053eb:	je     405451 <isspace@plt+0x1b41>
  4053ed:	mov    rdi,rbx
  4053f0:	lea    rsi,[rip+0x26d25]        # 42c11c <isspace@plt+0x2880c>
  4053f7:	call   403470 <strcmp@plt>
  4053fc:	test   eax,eax
  4053fe:	jne    4054f2 <isspace@plt+0x1be2>
  405404:	mov    r12b,0x1
  405407:	mov    rcx,QWORD PTR [rsp+0x20]
  40540c:	jmp    4053b2 <isspace@plt+0x1aa2>
  40540e:	xchg   ax,ax
  405410:	test   r12b,0x1
  405414:	jne    405430 <isspace@plt+0x1b20>
  405416:	cmp    al,0x2b
  405418:	jne    405430 <isspace@plt+0x1b20>
  40541a:	mov    al,BYTE PTR [rbx+0x1]
  40541d:	or     al,0x10
  40541f:	xor    ecx,ecx
  405421:	cmp    al,0x3f
  405423:	sete   cl
  405426:	add    rcx,rbx
  405429:	jmp    4053b2 <isspace@plt+0x1aa2>
  40542b:	nop    DWORD PTR [rax+rax*1+0x0]
  405430:	mov    QWORD PTR [rsp+0x20],rcx
  405435:	mov    rdi,QWORD PTR [rip+0x3cf4c]        # 442388 <isspace@plt+0x3ea78>
  40543c:	mov    rsi,rbx
  40543f:	call   4215f0 <isspace@plt+0x1dce0>
  405444:	test   al,al
  405446:	jne    4054f2 <isspace@plt+0x1be2>
  40544c:	jmp    405636 <isspace@plt+0x1d26>
  405451:	mov    rdi,QWORD PTR [rip+0x3cf30]        # 442388 <isspace@plt+0x3ea78>
  405458:	mov    esi,0x1
  40545d:	call   421660 <isspace@plt+0x1dd50>
  405462:	test   al,al
  405464:	je     405621 <isspace@plt+0x1d11>
  40546a:	mov    rdi,QWORD PTR [rip+0x3cf17]        # 442388 <isspace@plt+0x3ea78>
  405471:	call   425600 <isspace@plt+0x21cf0>
  405476:	mov    r13,rax
  405479:	nop    DWORD PTR [rax+0x0]
  405480:	mov    edx,0x1000
  405485:	xor    edi,edi
  405487:	mov    rsi,r14
  40548a:	call   403420 <read@plt>
  40548f:	mov    rbx,rax
  405492:	test   rax,rax
  405495:	jle    4054b2 <isspace@plt+0x1ba2>
  405497:	mov    rdi,r13
  40549a:	call   410890 <isspace@plt+0xcf80>
  40549f:	mov    rdi,r13
  4054a2:	mov    rsi,rax
  4054a5:	mov    rdx,r14
  4054a8:	mov    rcx,rbx
  4054ab:	call   40efe0 <isspace@plt+0xb6d0>
  4054b0:	jmp    405480 <isspace@plt+0x1b70>
  4054b2:	cmp    rbx,0xffffffffffffffff
  4054b6:	je     405671 <isspace@plt+0x1d61>
  4054bc:	mov    rdi,r13
  4054bf:	call   40f6a0 <isspace@plt+0xbd90>
  4054c4:	lea    rdi,[rip+0x26ce8]        # 42c1b3 <isspace@plt+0x288a3>
  4054cb:	mov    esi,0x2
  4054d0:	xor    eax,eax
  4054d2:	call   4037a0 <open@plt>
  4054d7:	cmp    eax,0xffffffff
  4054da:	je     405686 <isspace@plt+0x1d76>
  4054e0:	mov    ebx,eax
  4054e2:	mov    edi,eax
  4054e4:	xor    esi,esi
  4054e6:	call   4032c0 <dup2@plt>
  4054eb:	mov    edi,ebx
  4054ed:	call   4033c0 <close@plt>
  4054f2:	mov    r13b,0x1
  4054f5:	mov    rsi,QWORD PTR [rsp+0x20]
  4054fa:	test   rsi,rsi
  4054fd:	je     4053b0 <isspace@plt+0x1aa0>
  405503:	mov    rdi,QWORD PTR [rip+0x3ce7e]        # 442388 <isspace@plt+0x3ea78>
  40550a:	call   4297c0 <isspace@plt+0x25eb0>
  40550f:	jmp    4053b0 <isspace@plt+0x1aa0>
  405514:	xor    ecx,ecx
  405516:	xor    r13d,r13d
  405519:	mov    rbx,rcx
  40551c:	mov    rdi,QWORD PTR [rip+0x3ce65]        # 442388 <isspace@plt+0x3ea78>
  405523:	call   425680 <isspace@plt+0x21d70>
  405528:	test   r13b,0x1
  40552c:	jne    40555d <isspace@plt+0x1c4d>
  40552e:	test   rax,rax
  405531:	jne    40555d <isspace@plt+0x1c4d>
  405533:	mov    rdi,QWORD PTR [rip+0x3ce4e]        # 442388 <isspace@plt+0x3ea78>
  40553a:	xor    esi,esi
  40553c:	call   4215f0 <isspace@plt+0x1dce0>
  405541:	test   al,al
  405543:	je     405621 <isspace@plt+0x1d11>
  405549:	test   rbx,rbx
  40554c:	je     40555d <isspace@plt+0x1c4d>
  40554e:	mov    rdi,QWORD PTR [rip+0x3ce33]        # 442388 <isspace@plt+0x3ea78>
  405555:	mov    rsi,rbx
  405558:	call   4297c0 <isspace@plt+0x25eb0>
  40555d:	mov    rdi,QWORD PTR [rip+0x3ce24]        # 442388 <isspace@plt+0x3ea78>
  405564:	call   423370 <isspace@plt+0x1fa60>
  405569:	mov    r14d,eax
  40556c:	mov    rdi,QWORD PTR [rip+0x3ce15]        # 442388 <isspace@plt+0x3ea78>
  405573:	call   421cc0 <isspace@plt+0x1e3b0>
  405578:	mov    rax,QWORD PTR fs:0x28
  405581:	cmp    rax,QWORD PTR [rsp+0x11c0]
  405589:	jne    40566c <isspace@plt+0x1d5c>
  40558f:	mov    eax,r14d
  405592:	lea    rsp,[rbp-0x28]
  405596:	pop    rbx
  405597:	pop    r12
  405599:	pop    r13
  40559b:	pop    r14
  40559d:	pop    r15
  40559f:	pop    rbp
  4055a0:	ret    
  4055a1:	sub    rsp,0x8
  4055a5:	lea    rbx,[rip+0x26bab]        # 42c157 <isspace@plt+0x28847>
  4055ac:	lea    r8,[rip+0x2b4e0]        # 430a93 <isspace@plt+0x2d183>
  4055b3:	lea    rsi,[rip+0x26b68]        # 42c122 <isspace@plt+0x28812>
  4055ba:	lea    rdx,[rip+0x26b75]        # 42c136 <isspace@plt+0x28826>
  4055c1:	lea    rcx,[rip+0x26b86]        # 42c14e <isspace@plt+0x2883e>
  4055c8:	xor    r14d,r14d
  4055cb:	mov    edi,0x1
  4055d0:	mov    r9,r8
  4055d3:	xor    eax,eax
  4055d5:	push   rbx
  4055d6:	push   r8
  4055d8:	push   r8
  4055da:	call   403700 <__printf_chk@plt>
  4055df:	add    rsp,0x20
  4055e3:	jmp    405578 <isspace@plt+0x1c68>
  4055e5:	mov    rbx,QWORD PTR [rip+0x3cd9c]        # 442388 <isspace@plt+0x3ea78>
  4055ec:	call   403130 <__errno_location@plt>
  4055f1:	mov    edi,DWORD PTR [rax]
  4055f3:	call   403880 <strerror@plt>
  4055f8:	lea    rsi,[rip+0x26ac8]        # 42c0c7 <isspace@plt+0x287b7>
  4055ff:	mov    rdi,rbx
  405602:	mov    rdx,rax
  405605:	xor    eax,eax
  405607:	call   422e30 <isspace@plt+0x1f520>
  40560c:	mov    rdi,QWORD PTR [rip+0x3cd75]        # 442388 <isspace@plt+0x3ea78>
  405613:	lea    rsi,[rip+0x26acf]        # 42c0e9 <isspace@plt+0x287d9>
  40561a:	xor    eax,eax
  40561c:	call   422e30 <isspace@plt+0x1f520>
  405621:	mov    rdi,QWORD PTR [rip+0x3cd60]        # 442388 <isspace@plt+0x3ea78>
  405628:	lea    rsi,[rip+0x26b4e]        # 42c17d <isspace@plt+0x2886d>
  40562f:	xor    eax,eax
  405631:	call   422e30 <isspace@plt+0x1f520>
  405636:	mov    eax,r15d
  405639:	mov    rbx,QWORD PTR [rip+0x3cd48]        # 442388 <isspace@plt+0x3ea78>
  405640:	mov    rcx,QWORD PTR [rsp+0x18]
  405645:	mov    r14,QWORD PTR [rcx+rax*8]
  405649:	call   403130 <__errno_location@plt>
  40564e:	mov    edi,DWORD PTR [rax]
  405650:	call   403880 <strerror@plt>
  405655:	lea    rsi,[rip+0x26b76]        # 42c1d2 <isspace@plt+0x288c2>
  40565c:	mov    rdi,rbx
  40565f:	mov    rdx,r14
  405662:	mov    rcx,rax
  405665:	xor    eax,eax
  405667:	call   422e30 <isspace@plt+0x1f520>
  40566c:	call   403280 <__stack_chk_fail@plt>
  405671:	mov    rdi,QWORD PTR [rip+0x3cd10]        # 442388 <isspace@plt+0x3ea78>
  405678:	lea    rsi,[rip+0x26b1b]        # 42c19a <isspace@plt+0x2888a>
  40567f:	xor    eax,eax
  405681:	call   422e30 <isspace@plt+0x1f520>
  405686:	mov    rdi,QWORD PTR [rip+0x3ccfb]        # 442388 <isspace@plt+0x3ea78>
  40568d:	lea    rsi,[rip+0x26b28]        # 42c1bc <isspace@plt+0x288ac>
  405694:	xor    eax,eax
  405696:	call   422e30 <isspace@plt+0x1f520>
  40569b:	mov    rdi,QWORD PTR [rip+0x3cce6]        # 442388 <isspace@plt+0x3ea78>
  4056a2:	lea    rsi,[rip+0x26a5a]        # 42c103 <isspace@plt+0x287f3>
  4056a9:	xor    eax,eax
  4056ab:	call   422e30 <isspace@plt+0x1f520>
  4056b0:	push   rax
  4056b1:	mov    rcx,rdx
  4056b4:	mov    rdx,rsi
  4056b7:	mov    esi,edi
  4056b9:	mov    rax,QWORD PTR fs:0x28
  4056c2:	mov    QWORD PTR [rsp],rax
  4056c6:	mov    rdi,QWORD PTR [rip+0x3ccbb]        # 442388 <isspace@plt+0x3ea78>
  4056cd:	call   423280 <isspace@plt+0x1f970>
  4056d2:	mov    rax,QWORD PTR fs:0x28
  4056db:	cmp    rax,QWORD PTR [rsp]
  4056df:	jne    4056e3 <isspace@plt+0x1dd3>
  4056e1:	pop    rax
  4056e2:	ret    
  4056e3:	call   403280 <__stack_chk_fail@plt>
  4056e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4056f0:	push   rbx
  4056f1:	sub    rsp,0x10
  4056f5:	mov    rbx,rsi
  4056f8:	mov    rax,QWORD PTR fs:0x28
  405701:	mov    QWORD PTR [rsp+0x8],rax
  405706:	call   4215c0 <isspace@plt+0x1dcb0>
  40570b:	mov    rax,QWORD PTR fs:0x28
  405714:	cmp    rax,QWORD PTR [rsp+0x8]
  405719:	jne    405724 <isspace@plt+0x1e14>
  40571b:	mov    rax,rbx
  40571e:	add    rsp,0x10
  405722:	pop    rbx
  405723:	ret    
  405724:	call   403280 <__stack_chk_fail@plt>
  405729:	nop    DWORD PTR [rax+0x0]
  405730:	push   rbx
  405731:	sub    rsp,0x10
  405735:	mov    rbx,rsi
  405738:	mov    rax,QWORD PTR fs:0x28
  405741:	mov    QWORD PTR [rsp+0x8],rax
  405746:	mov    esi,DWORD PTR [rdx]
  405748:	xor    eax,eax
  40574a:	call   4279b0 <isspace@plt+0x240a0>
  40574f:	mov    rax,QWORD PTR fs:0x28
  405758:	cmp    rax,QWORD PTR [rsp+0x8]
  40575d:	jne    405768 <isspace@plt+0x1e58>
  40575f:	mov    rax,rbx
  405762:	add    rsp,0x10
  405766:	pop    rbx
  405767:	ret    
  405768:	call   403280 <__stack_chk_fail@plt>
  40576d:	nop    DWORD PTR [rax]
  405770:	push   r14
  405772:	push   rbx
  405773:	push   rax
  405774:	mov    r14,rsi
  405777:	mov    rbx,rdi
  40577a:	mov    rax,QWORD PTR fs:0x28
  405783:	mov    QWORD PTR [rsp],rax
  405787:	call   424630 <isspace@plt+0x20d20>
  40578c:	cmp    eax,0xffffffff
  40578f:	mov    eax,0x2c
  405794:	mov    esi,0x3d
  405799:	cmove  esi,eax
  40579c:	mov    rdi,rbx
  40579f:	xor    eax,eax
  4057a1:	call   4279b0 <isspace@plt+0x240a0>
  4057a6:	mov    rax,QWORD PTR fs:0x28
  4057af:	cmp    rax,QWORD PTR [rsp]
  4057b3:	jne    4057c0 <isspace@plt+0x1eb0>
  4057b5:	mov    rax,r14
  4057b8:	add    rsp,0x8
  4057bc:	pop    rbx
  4057bd:	pop    r14
  4057bf:	ret    
  4057c0:	call   403280 <__stack_chk_fail@plt>
  4057c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4057cf:	nop
  4057d0:	push   r15
  4057d2:	push   r14
  4057d4:	push   rbx
  4057d5:	sub    rsp,0x10
  4057d9:	mov    r15,rdx
  4057dc:	mov    r14,rsi
  4057df:	mov    rbx,rdi
  4057e2:	mov    rax,QWORD PTR fs:0x28
  4057eb:	mov    QWORD PTR [rsp+0x8],rax
  4057f0:	call   424630 <isspace@plt+0x20d20>
  4057f5:	mov    esi,0xe
  4057fa:	cmp    eax,0xffffffff
  4057fd:	jne    405808 <isspace@plt+0x1ef8>
  4057ff:	mov    esi,DWORD PTR [r15]
  405802:	sar    esi,0x1f
  405805:	add    esi,0x32
  405808:	mov    rdi,rbx
  40580b:	xor    eax,eax
  40580d:	call   4279b0 <isspace@plt+0x240a0>
  405812:	mov    rax,QWORD PTR fs:0x28
  40581b:	cmp    rax,QWORD PTR [rsp+0x8]
  405820:	jne    40582f <isspace@plt+0x1f1f>
  405822:	mov    rax,r14
  405825:	add    rsp,0x10
  405829:	pop    rbx
  40582a:	pop    r14
  40582c:	pop    r15
  40582e:	ret    
  40582f:	call   403280 <__stack_chk_fail@plt>
  405834:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40583e:	xchg   ax,ax
  405840:	push   r15
  405842:	push   r14
  405844:	push   r12
  405846:	push   rbx
  405847:	push   rax
  405848:	mov    rbx,rdx
  40584b:	mov    r14,rsi
  40584e:	mov    r12,rdi
  405851:	mov    rax,QWORD PTR fs:0x28
  40585a:	mov    QWORD PTR [rsp],rax
  40585e:	call   425640 <isspace@plt+0x21d30>
  405863:	mov    r15,rax
  405866:	mov    rdi,r12
  405869:	call   424630 <isspace@plt+0x20d20>
  40586e:	mov    ecx,DWORD PTR [rbx]
  405870:	cmp    ecx,0x7ffffffd
  405876:	jg     405892 <isspace@plt+0x1f82>
  405878:	cmp    ecx,0x80000001
  40587e:	je     4058c8 <isspace@plt+0x1fb8>
  405880:	cmp    ecx,0x80000002
  405886:	jne    4058ac <isspace@plt+0x1f9c>
  405888:	mov    rdi,r15
  40588b:	call   41d500 <isspace@plt+0x19bf0>
  405890:	jmp    4058e1 <isspace@plt+0x1fd1>
  405892:	cmp    ecx,0x7ffffffe
  405898:	je     4058d2 <isspace@plt+0x1fc2>
  40589a:	cmp    ecx,0x7fffffff
  4058a0:	jne    4058ac <isspace@plt+0x1f9c>
  4058a2:	mov    rdi,r15
  4058a5:	call   41d0b0 <isspace@plt+0x197a0>
  4058aa:	jmp    4058e1 <isspace@plt+0x1fd1>
  4058ac:	cmp    eax,0xffffffff
  4058af:	jne    4058b8 <isspace@plt+0x1fa8>
  4058b1:	mov    eax,ecx
  4058b3:	neg    eax
  4058b5:	cmovl  eax,ecx
  4058b8:	mov    rdi,r15
  4058bb:	mov    esi,eax
  4058bd:	test   ecx,ecx
  4058bf:	js     4058dc <isspace@plt+0x1fcc>
  4058c1:	call   41d100 <isspace@plt+0x197f0>
  4058c6:	jmp    4058e1 <isspace@plt+0x1fd1>
  4058c8:	mov    rdi,r15
  4058cb:	call   41ce50 <isspace@plt+0x19540>
  4058d0:	jmp    4058e1 <isspace@plt+0x1fd1>
  4058d2:	mov    rdi,r15
  4058d5:	call   41d570 <isspace@plt+0x19c60>
  4058da:	jmp    4058e1 <isspace@plt+0x1fd1>
  4058dc:	call   41caa0 <isspace@plt+0x19190>
  4058e1:	mov    rdi,r12
  4058e4:	mov    esi,0xffffffff
  4058e9:	call   424660 <isspace@plt+0x20d50>
  4058ee:	mov    rax,QWORD PTR fs:0x28
  4058f7:	cmp    rax,QWORD PTR [rsp]
  4058fb:	jne    40590c <isspace@plt+0x1ffc>
  4058fd:	mov    rax,r14
  405900:	add    rsp,0x8
  405904:	pop    rbx
  405905:	pop    r12
  405907:	pop    r14
  405909:	pop    r15
  40590b:	ret    
  40590c:	call   403280 <__stack_chk_fail@plt>
  405911:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40591b:	nop    DWORD PTR [rax+rax*1+0x0]
  405920:	push   rbx
  405921:	sub    rsp,0x10
  405925:	mov    rbx,rsi
  405928:	mov    rax,QWORD PTR fs:0x28
  405931:	mov    QWORD PTR [rsp+0x8],rax
  405936:	mov    esi,DWORD PTR [rdx]
  405938:	call   426fe0 <isspace@plt+0x236d0>
  40593d:	mov    rax,QWORD PTR fs:0x28
  405946:	cmp    rax,QWORD PTR [rsp+0x8]
  40594b:	jne    405956 <isspace@plt+0x2046>
  40594d:	mov    rax,rbx
  405950:	add    rsp,0x10
  405954:	pop    rbx
  405955:	ret    
  405956:	call   403280 <__stack_chk_fail@plt>
  40595b:	nop    DWORD PTR [rax+rax*1+0x0]
  405960:	push   r14
  405962:	push   rbx
  405963:	push   rax
  405964:	mov    r14,rsi
  405967:	mov    rbx,rdi
  40596a:	mov    rax,QWORD PTR fs:0x28
  405973:	mov    QWORD PTR [rsp],rax
  405977:	call   424630 <isspace@plt+0x20d20>
  40597c:	mov    rdi,rbx
  40597f:	cmp    eax,0xffffffff
  405982:	je     405990 <isspace@plt+0x2080>
  405984:	mov    esi,0xffffffff
  405989:	call   424660 <isspace@plt+0x20d50>
  40598e:	jmp    4059bc <isspace@plt+0x20ac>
  405990:	call   425640 <isspace@plt+0x21d30>
  405995:	mov    rbx,rax
  405998:	mov    rdi,rax
  40599b:	call   41ea70 <isspace@plt+0x1b160>
  4059a0:	mov    rdi,rbx
  4059a3:	cmp    eax,0x2
  4059a6:	jl     4059af <isspace@plt+0x209f>
  4059a8:	call   41f630 <isspace@plt+0x1bd20>
  4059ad:	jmp    4059bc <isspace@plt+0x20ac>
  4059af:	call   41efe0 <isspace@plt+0x1b6d0>
  4059b4:	mov    rdi,rax
  4059b7:	call   41ef20 <isspace@plt+0x1b610>
  4059bc:	mov    rax,QWORD PTR fs:0x28
  4059c5:	cmp    rax,QWORD PTR [rsp]
  4059c9:	jne    4059d6 <isspace@plt+0x20c6>
  4059cb:	mov    rax,r14
  4059ce:	add    rsp,0x8
  4059d2:	pop    rbx
  4059d3:	pop    r14
  4059d5:	ret    
  4059d6:	call   403280 <__stack_chk_fail@plt>
  4059db:	nop    DWORD PTR [rax+rax*1+0x0]
  4059e0:	push   r14
  4059e2:	push   rbx
  4059e3:	push   rax
  4059e4:	mov    r14,rsi
  4059e7:	mov    rbx,rdi
  4059ea:	mov    rax,QWORD PTR fs:0x28
  4059f3:	mov    QWORD PTR [rsp],rax
  4059f7:	call   424630 <isspace@plt+0x20d20>
  4059fc:	mov    rdi,rbx
  4059ff:	cmp    eax,0xffffffff
  405a02:	je     405a10 <isspace@plt+0x2100>
  405a04:	mov    esi,0xffffffff
  405a09:	call   424660 <isspace@plt+0x20d50>
  405a0e:	jmp    405a17 <isspace@plt+0x2107>
  405a10:	xor    esi,esi
  405a12:	call   426fe0 <isspace@plt+0x236d0>
  405a17:	mov    rax,QWORD PTR fs:0x28
  405a20:	cmp    rax,QWORD PTR [rsp]
  405a24:	jne    405a31 <isspace@plt+0x2121>
  405a26:	mov    rax,r14
  405a29:	add    rsp,0x8
  405a2d:	pop    rbx
  405a2e:	pop    r14
  405a30:	ret    
  405a31:	call   403280 <__stack_chk_fail@plt>
  405a36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405a40:	push   r15
  405a42:	push   r14
  405a44:	push   rbx
  405a45:	sub    rsp,0x10
  405a49:	mov    r15,rdx
  405a4c:	mov    r14,rsi
  405a4f:	mov    rbx,rdi
  405a52:	mov    rax,QWORD PTR fs:0x28
  405a5b:	mov    QWORD PTR [rsp+0x8],rax
  405a60:	mov    esi,0x7
  405a65:	mov    edx,0x4
  405a6a:	xor    eax,eax
  405a6c:	call   4288f0 <isspace@plt+0x24fe0>
  405a71:	mov    esi,DWORD PTR [r15]
  405a74:	mov    rdi,rbx
  405a77:	xor    eax,eax
  405a79:	call   4279b0 <isspace@plt+0x240a0>
  405a7e:	mov    rax,QWORD PTR fs:0x28
  405a87:	cmp    rax,QWORD PTR [rsp+0x8]
  405a8c:	jne    405a9b <isspace@plt+0x218b>
  405a8e:	mov    rax,r14
  405a91:	add    rsp,0x10
  405a95:	pop    rbx
  405a96:	pop    r14
  405a98:	pop    r15
  405a9a:	ret    
  405a9b:	call   403280 <__stack_chk_fail@plt>
  405aa0:	push   r15
  405aa2:	push   r14
  405aa4:	push   rbx
  405aa5:	sub    rsp,0x10
  405aa9:	mov    r15,rdx
  405aac:	mov    r14,rsi
  405aaf:	mov    rbx,rdi
  405ab2:	mov    rax,QWORD PTR fs:0x28
  405abb:	mov    QWORD PTR [rsp+0x8],rax
  405ac0:	mov    esi,0x7
  405ac5:	mov    edx,0x5
  405aca:	xor    eax,eax
  405acc:	call   4288f0 <isspace@plt+0x24fe0>
  405ad1:	mov    esi,DWORD PTR [r15]
  405ad4:	mov    rdi,rbx
  405ad7:	xor    eax,eax
  405ad9:	call   4279b0 <isspace@plt+0x240a0>
  405ade:	mov    rax,QWORD PTR fs:0x28
  405ae7:	cmp    rax,QWORD PTR [rsp+0x8]
  405aec:	jne    405afb <isspace@plt+0x21eb>
  405aee:	mov    rax,r14
  405af1:	add    rsp,0x10
  405af5:	pop    rbx
  405af6:	pop    r14
  405af8:	pop    r15
  405afa:	ret    
  405afb:	call   403280 <__stack_chk_fail@plt>
  405b00:	push   r15
  405b02:	push   r14
  405b04:	push   rbx
  405b05:	sub    rsp,0x10
  405b09:	mov    r15,rdx
  405b0c:	mov    r14,rsi
  405b0f:	mov    rbx,rdi
  405b12:	mov    rax,QWORD PTR fs:0x28
  405b1b:	mov    QWORD PTR [rsp+0x8],rax
  405b20:	xor    esi,esi
  405b22:	xor    eax,eax
  405b24:	call   4288f0 <isspace@plt+0x24fe0>
  405b29:	mov    esi,DWORD PTR [r15]
  405b2c:	mov    rdi,rbx
  405b2f:	xor    eax,eax
  405b31:	call   4279b0 <isspace@plt+0x240a0>
  405b36:	mov    rax,QWORD PTR fs:0x28
  405b3f:	cmp    rax,QWORD PTR [rsp+0x8]
  405b44:	jne    405b53 <isspace@plt+0x2243>
  405b46:	mov    rax,r14
  405b49:	add    rsp,0x10
  405b4d:	pop    rbx
  405b4e:	pop    r14
  405b50:	pop    r15
  405b52:	ret    
  405b53:	call   403280 <__stack_chk_fail@plt>
  405b58:	nop    DWORD PTR [rax+rax*1+0x0]
  405b60:	push   rbx
  405b61:	sub    rsp,0x10
  405b65:	mov    rbx,rsi
  405b68:	mov    rax,QWORD PTR fs:0x28
  405b71:	mov    QWORD PTR [rsp+0x8],rax
  405b76:	cmp    DWORD PTR [rdx],0x0
  405b79:	js     405b84 <isspace@plt+0x2274>
  405b7b:	je     405b8b <isspace@plt+0x227b>
  405b7d:	call   426c40 <isspace@plt+0x23330>
  405b82:	jmp    405b90 <isspace@plt+0x2280>
  405b84:	call   426a80 <isspace@plt+0x23170>
  405b89:	jmp    405b90 <isspace@plt+0x2280>
  405b8b:	call   426860 <isspace@plt+0x22f50>
  405b90:	mov    rax,QWORD PTR fs:0x28
  405b99:	cmp    rax,QWORD PTR [rsp+0x8]
  405b9e:	jne    405ba9 <isspace@plt+0x2299>
  405ba0:	mov    rax,rbx
  405ba3:	add    rsp,0x10
  405ba7:	pop    rbx
  405ba8:	ret    
  405ba9:	call   403280 <__stack_chk_fail@plt>
  405bae:	xchg   ax,ax
  405bb0:	push   r15
  405bb2:	push   r14
  405bb4:	push   r12
  405bb6:	push   rbx
  405bb7:	push   rax
  405bb8:	mov    r14,rsi
  405bbb:	mov    rbx,rdi
  405bbe:	mov    rax,QWORD PTR fs:0x28
  405bc7:	mov    QWORD PTR [rsp],rax
  405bcb:	call   425600 <isspace@plt+0x21cf0>
  405bd0:	mov    rdi,rax
  405bd3:	call   40f570 <isspace@plt+0xbc60>
  405bd8:	cmp    rax,0xffffffffffffffff
  405bdc:	je     405c0c <isspace@plt+0x22fc>
  405bde:	mov    r15,rax
  405be1:	mov    rdi,rbx
  405be4:	call   425640 <isspace@plt+0x21d30>
  405be9:	mov    r12,rax
  405bec:	mov    rdi,rax
  405bef:	call   41ea70 <isspace@plt+0x1b160>
  405bf4:	cmp    eax,0x1
  405bf7:	jne    405c04 <isspace@plt+0x22f4>
  405bf9:	mov    rdi,r12
  405bfc:	mov    rsi,r15
  405bff:	call   41a790 <isspace@plt+0x16e80>
  405c04:	mov    rdi,rbx
  405c07:	call   421530 <isspace@plt+0x1dc20>
  405c0c:	mov    rax,QWORD PTR fs:0x28
  405c15:	cmp    rax,QWORD PTR [rsp]
  405c19:	jne    405c2a <isspace@plt+0x231a>
  405c1b:	mov    rax,r14
  405c1e:	add    rsp,0x8
  405c22:	pop    rbx
  405c23:	pop    r12
  405c25:	pop    r14
  405c27:	pop    r15
  405c29:	ret    
  405c2a:	call   403280 <__stack_chk_fail@plt>
  405c2f:	nop
  405c30:	push   r15
  405c32:	push   r14
  405c34:	push   r12
  405c36:	push   rbx
  405c37:	push   rax
  405c38:	mov    r14,rsi
  405c3b:	mov    rbx,rdi
  405c3e:	mov    rax,QWORD PTR fs:0x28
  405c47:	mov    QWORD PTR [rsp],rax
  405c4b:	call   425600 <isspace@plt+0x21cf0>
  405c50:	mov    rdi,rax
  405c53:	call   40f6f0 <isspace@plt+0xbde0>
  405c58:	cmp    rax,0xffffffffffffffff
  405c5c:	je     405c8c <isspace@plt+0x237c>
  405c5e:	mov    r15,rax
  405c61:	mov    rdi,rbx
  405c64:	call   425640 <isspace@plt+0x21d30>
  405c69:	mov    r12,rax
  405c6c:	mov    rdi,rax
  405c6f:	call   41ea70 <isspace@plt+0x1b160>
  405c74:	cmp    eax,0x1
  405c77:	jne    405c84 <isspace@plt+0x2374>
  405c79:	mov    rdi,r12
  405c7c:	mov    rsi,r15
  405c7f:	call   41a790 <isspace@plt+0x16e80>
  405c84:	mov    rdi,rbx
  405c87:	call   421530 <isspace@plt+0x1dc20>
  405c8c:	mov    rax,QWORD PTR fs:0x28
  405c95:	cmp    rax,QWORD PTR [rsp]
  405c99:	jne    405caa <isspace@plt+0x239a>
  405c9b:	mov    rax,r14
  405c9e:	add    rsp,0x8
  405ca2:	pop    rbx
  405ca3:	pop    r12
  405ca5:	pop    r14
  405ca7:	pop    r15
  405ca9:	ret    
  405caa:	call   403280 <__stack_chk_fail@plt>
  405caf:	nop
  405cb0:	push   r15
  405cb2:	push   r14
  405cb4:	push   r12
  405cb6:	push   rbx
  405cb7:	sub    rsp,0x18
  405cbb:	mov    r14,rsi
  405cbe:	mov    r15,rdi
  405cc1:	mov    rax,QWORD PTR fs:0x28
  405cca:	mov    QWORD PTR [rsp+0x10],rax
  405ccf:	mov    esi,0x1
  405cd4:	call   4246a0 <isspace@plt+0x20d90>
  405cd9:	mov    QWORD PTR [rsp],rax
  405cdd:	mov    QWORD PTR [rsp+0x8],rdx
  405ce2:	mov    rdi,rsp
  405ce5:	call   424710 <isspace@plt+0x20e00>
  405cea:	test   al,al
  405cec:	je     405d40 <isspace@plt+0x2430>
  405cee:	mov    r12,rsp
  405cf1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405cfb:	nop    DWORD PTR [rax+rax*1+0x0]
  405d00:	mov    rdi,r15
  405d03:	call   425600 <isspace@plt+0x21cf0>
  405d08:	mov    rdi,rax
  405d0b:	call   40f830 <isspace@plt+0xbf20>
  405d10:	mov    rbx,rax
  405d13:	mov    rdi,r12
  405d16:	call   424710 <isspace@plt+0x20e00>
  405d1b:	test   al,al
  405d1d:	jne    405d00 <isspace@plt+0x23f0>
  405d1f:	cmp    rbx,0xffffffffffffffff
  405d23:	je     405d40 <isspace@plt+0x2430>
  405d25:	mov    rdi,r15
  405d28:	call   425640 <isspace@plt+0x21d30>
  405d2d:	mov    rdi,rax
  405d30:	mov    rsi,rbx
  405d33:	call   41a790 <isspace@plt+0x16e80>
  405d38:	mov    rdi,r15
  405d3b:	call   421530 <isspace@plt+0x1dc20>
  405d40:	mov    rax,QWORD PTR fs:0x28
  405d49:	cmp    rax,QWORD PTR [rsp+0x10]
  405d4e:	jne    405d5f <isspace@plt+0x244f>
  405d50:	mov    rax,r14
  405d53:	add    rsp,0x18
  405d57:	pop    rbx
  405d58:	pop    r12
  405d5a:	pop    r14
  405d5c:	pop    r15
  405d5e:	ret    
  405d5f:	call   403280 <__stack_chk_fail@plt>
  405d64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d6e:	xchg   ax,ax
  405d70:	push   r15
  405d72:	push   r14
  405d74:	push   r12
  405d76:	push   rbx
  405d77:	sub    rsp,0x18
  405d7b:	mov    r14,rsi
  405d7e:	mov    r15,rdi
  405d81:	mov    rax,QWORD PTR fs:0x28
  405d8a:	mov    QWORD PTR [rsp+0x10],rax
  405d8f:	mov    esi,0x1
  405d94:	call   4246a0 <isspace@plt+0x20d90>
  405d99:	mov    QWORD PTR [rsp],rax
  405d9d:	mov    QWORD PTR [rsp+0x8],rdx
  405da2:	mov    rdi,rsp
  405da5:	call   424710 <isspace@plt+0x20e00>
  405daa:	test   al,al
  405dac:	je     405e00 <isspace@plt+0x24f0>
  405dae:	mov    r12,rsp
  405db1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405dbb:	nop    DWORD PTR [rax+rax*1+0x0]
  405dc0:	mov    rdi,r15
  405dc3:	call   425600 <isspace@plt+0x21cf0>
  405dc8:	mov    rdi,rax
  405dcb:	call   40f9b0 <isspace@plt+0xc0a0>
  405dd0:	mov    rbx,rax
  405dd3:	mov    rdi,r12
  405dd6:	call   424710 <isspace@plt+0x20e00>
  405ddb:	test   al,al
  405ddd:	jne    405dc0 <isspace@plt+0x24b0>
  405ddf:	cmp    rbx,0xffffffffffffffff
  405de3:	je     405e00 <isspace@plt+0x24f0>
  405de5:	mov    rdi,r15
  405de8:	call   425640 <isspace@plt+0x21d30>
  405ded:	mov    rdi,rax
  405df0:	mov    rsi,rbx
  405df3:	call   41a790 <isspace@plt+0x16e80>
  405df8:	mov    rdi,r15
  405dfb:	call   421530 <isspace@plt+0x1dc20>
  405e00:	mov    rax,QWORD PTR fs:0x28
  405e09:	cmp    rax,QWORD PTR [rsp+0x10]
  405e0e:	jne    405e1f <isspace@plt+0x250f>
  405e10:	mov    rax,r14
  405e13:	add    rsp,0x18
  405e17:	pop    rbx
  405e18:	pop    r12
  405e1a:	pop    r14
  405e1c:	pop    r15
  405e1e:	ret    
  405e1f:	call   403280 <__stack_chk_fail@plt>
  405e24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e2e:	xchg   ax,ax
  405e30:	push   r14
  405e32:	push   rbx
  405e33:	push   rax
  405e34:	mov    r14,rsi
  405e37:	mov    rbx,rdi
  405e3a:	mov    rax,QWORD PTR fs:0x28
  405e43:	mov    QWORD PTR [rsp],rax
  405e47:	call   424020 <isspace@plt+0x20710>
  405e4c:	test   al,al
  405e4e:	jne    405e86 <isspace@plt+0x2576>
  405e50:	cmp    BYTE PTR [r14],0x0
  405e54:	je     405e93 <isspace@plt+0x2583>
  405e56:	mov    rdi,rbx
  405e59:	mov    rsi,r14
  405e5c:	call   422ec0 <isspace@plt+0x1f5b0>
  405e61:	mov    rcx,rax
  405e64:	sub    rcx,r14
  405e67:	cmp    rcx,0x1
  405e6b:	jg     405e95 <isspace@plt+0x2585>
  405e6d:	movsx  esi,BYTE PTR [r14]
  405e71:	mov    rdi,rbx
  405e74:	call   42a840 <isspace@plt+0x26f30>
  405e79:	mov    rdi,rbx
  405e7c:	mov    esi,eax
  405e7e:	call   423f70 <isspace@plt+0x20660>
  405e83:	inc    r14
  405e86:	mov    rdi,rbx
  405e89:	call   421530 <isspace@plt+0x1dc20>
  405e8e:	mov    rax,r14
  405e91:	jmp    405e95 <isspace@plt+0x2585>
  405e93:	xor    eax,eax
  405e95:	mov    rcx,QWORD PTR fs:0x28
  405e9e:	cmp    rcx,QWORD PTR [rsp]
  405ea2:	jne    405eac <isspace@plt+0x259c>
  405ea4:	add    rsp,0x8
  405ea8:	pop    rbx
  405ea9:	pop    r14
  405eab:	ret    
  405eac:	call   403280 <__stack_chk_fail@plt>
  405eb1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405ebb:	nop    DWORD PTR [rax+rax*1+0x0]
  405ec0:	push   r14
  405ec2:	push   rbx
  405ec3:	push   rax
  405ec4:	mov    rax,QWORD PTR fs:0x28
  405ecd:	mov    QWORD PTR [rsp],rax
  405ed1:	cmp    BYTE PTR [rsi],0x0
  405ed4:	je     405f0a <isspace@plt+0x25fa>
  405ed6:	mov    rbx,rsi
  405ed9:	mov    r14,rdi
  405edc:	call   422ec0 <isspace@plt+0x1f5b0>
  405ee1:	mov    rcx,rax
  405ee4:	sub    rcx,rbx
  405ee7:	cmp    rcx,0x1
  405eeb:	jg     405f0c <isspace@plt+0x25fc>
  405eed:	movsx  esi,BYTE PTR [rbx]
  405ef0:	mov    rdi,r14
  405ef3:	call   42a840 <isspace@plt+0x26f30>
  405ef8:	mov    rdi,r14
  405efb:	mov    esi,eax
  405efd:	call   4240d0 <isspace@plt+0x207c0>
  405f02:	inc    rbx
  405f05:	mov    rax,rbx
  405f08:	jmp    405f0c <isspace@plt+0x25fc>
  405f0a:	xor    eax,eax
  405f0c:	mov    rcx,QWORD PTR fs:0x28
  405f15:	cmp    rcx,QWORD PTR [rsp]
  405f19:	jne    405f23 <isspace@plt+0x2613>
  405f1b:	add    rsp,0x8
  405f1f:	pop    rbx
  405f20:	pop    r14
  405f22:	ret    
  405f23:	call   403280 <__stack_chk_fail@plt>
  405f28:	nop    DWORD PTR [rax+rax*1+0x0]
  405f30:	push   r14
  405f32:	push   rbx
  405f33:	push   rax
  405f34:	mov    rax,QWORD PTR fs:0x28
  405f3d:	mov    QWORD PTR [rsp],rax
  405f41:	cmp    BYTE PTR [rsi],0x0
  405f44:	je     405f7a <isspace@plt+0x266a>
  405f46:	mov    rbx,rsi
  405f49:	mov    r14,rdi
  405f4c:	call   422ec0 <isspace@plt+0x1f5b0>
  405f51:	mov    rcx,rax
  405f54:	sub    rcx,rbx
  405f57:	cmp    rcx,0x1
  405f5b:	jg     405f7c <isspace@plt+0x266c>
  405f5d:	movsx  esi,BYTE PTR [rbx]
  405f60:	mov    rdi,r14
  405f63:	call   426d20 <isspace@plt+0x23410>
  405f68:	mov    rdi,r14
  405f6b:	mov    esi,eax
  405f6d:	call   4264b0 <isspace@plt+0x22ba0>
  405f72:	inc    rbx
  405f75:	mov    rax,rbx
  405f78:	jmp    405f7c <isspace@plt+0x266c>
  405f7a:	xor    eax,eax
  405f7c:	mov    rcx,QWORD PTR fs:0x28
  405f85:	cmp    rcx,QWORD PTR [rsp]
  405f89:	jne    405f93 <isspace@plt+0x2683>
  405f8b:	add    rsp,0x8
  405f8f:	pop    rbx
  405f90:	pop    r14
  405f92:	ret    
  405f93:	call   403280 <__stack_chk_fail@plt>
  405f98:	nop    DWORD PTR [rax+rax*1+0x0]
  405fa0:	push   rbx
  405fa1:	sub    rsp,0x10
  405fa5:	mov    rbx,rsi
  405fa8:	mov    rax,QWORD PTR fs:0x28
  405fb1:	mov    QWORD PTR [rsp+0x8],rax
  405fb6:	call   QWORD PTR [rdx]
  405fb8:	mov    rax,QWORD PTR fs:0x28
  405fc1:	cmp    rax,QWORD PTR [rsp+0x8]
  405fc6:	jne    405fd1 <isspace@plt+0x26c1>
  405fc8:	mov    rax,rbx
  405fcb:	add    rsp,0x10
  405fcf:	pop    rbx
  405fd0:	ret    
  405fd1:	call   403280 <__stack_chk_fail@plt>
  405fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405fe0:	push   r15
  405fe2:	push   r14
  405fe4:	push   rbx
  405fe5:	sub    rsp,0x10
  405fe9:	mov    r15,rdi
  405fec:	mov    rax,QWORD PTR fs:0x28
  405ff5:	mov    QWORD PTR [rsp+0x8],rax
  405ffa:	cmp    BYTE PTR [rsi],0x0
  405ffd:	je     40605f <isspace@plt+0x274f>
  405fff:	mov    rbx,rsi
  406002:	mov    rdi,r15
  406005:	call   422ec0 <isspace@plt+0x1f5b0>
  40600a:	test   rax,rax
  40600d:	je     406067 <isspace@plt+0x2757>
  40600f:	mov    r14,rax
  406012:	lea    rdx,[rsp+0x3]
  406017:	mov    rdi,r15
  40601a:	mov    rsi,rbx
  40601d:	call   423140 <isspace@plt+0x1f830>
  406022:	cmp    BYTE PTR [rsp+0x3],0x1b
  406027:	je     40606a <isspace@plt+0x275a>
  406029:	test   al,al
  40602b:	je     40606a <isspace@plt+0x275a>
  40602d:	lea    rdx,[rsp+0x3]
  406032:	mov    rdi,r15
  406035:	mov    esi,0x8
  40603a:	xor    eax,eax
  40603c:	call   4288f0 <isspace@plt+0x24fe0>
  406041:	mov    rdi,r15
  406044:	call   427180 <isspace@plt+0x23870>
  406049:	cmp    eax,0x1
  40604c:	jne    40606a <isspace@plt+0x275a>
  40604e:	mov    rdi,r15
  406051:	mov    esi,0x11
  406056:	xor    eax,eax
  406058:	call   4279b0 <isspace@plt+0x240a0>
  40605d:	jmp    40606a <isspace@plt+0x275a>
  40605f:	mov    rdi,r15
  406062:	call   4222b0 <isspace@plt+0x1e9a0>
  406067:	xor    r14d,r14d
  40606a:	mov    rax,QWORD PTR fs:0x28
  406073:	cmp    rax,QWORD PTR [rsp+0x8]
  406078:	jne    406087 <isspace@plt+0x2777>
  40607a:	mov    rax,r14
  40607d:	add    rsp,0x10
  406081:	pop    rbx
  406082:	pop    r14
  406084:	pop    r15
  406086:	ret    
  406087:	call   403280 <__stack_chk_fail@plt>
  40608c:	nop    DWORD PTR [rax+0x0]
  406090:	push   rbx
  406091:	sub    rsp,0x10
  406095:	mov    rbx,rsi
  406098:	mov    rax,QWORD PTR fs:0x28
  4060a1:	mov    QWORD PTR [rsp+0x8],rax
  4060a6:	mov    rsi,QWORD PTR [rdx]
  4060a9:	call   429870 <isspace@plt+0x25f60>
  4060ae:	mov    rax,QWORD PTR fs:0x28
  4060b7:	cmp    rax,QWORD PTR [rsp+0x8]
  4060bc:	jne    4060c7 <isspace@plt+0x27b7>
  4060be:	mov    rax,rbx
  4060c1:	add    rsp,0x10
  4060c5:	pop    rbx
  4060c6:	ret    
  4060c7:	call   403280 <__stack_chk_fail@plt>
  4060cc:	nop    DWORD PTR [rax+0x0]
  4060d0:	push   r15
  4060d2:	push   r14
  4060d4:	push   r12
  4060d6:	push   rbx
  4060d7:	sub    rsp,0x18
  4060db:	mov    r12,rdi
  4060de:	mov    rax,QWORD PTR fs:0x28
  4060e7:	mov    QWORD PTR [rsp+0x10],rax
  4060ec:	cmp    BYTE PTR [rsi],0x0
  4060ef:	je     40612f <isspace@plt+0x281f>
  4060f1:	mov    r15,rdx
  4060f4:	mov    rbx,rsi
  4060f7:	mov    rdi,r12
  4060fa:	call   422ec0 <isspace@plt+0x1f5b0>
  4060ff:	test   rax,rax
  406102:	je     406137 <isspace@plt+0x2827>
  406104:	mov    r14,rax
  406107:	lea    rdx,[rsp+0xb]
  40610c:	mov    rdi,r12
  40610f:	mov    rsi,rbx
  406112:	call   423140 <isspace@plt+0x1f830>
  406117:	test   al,al
  406119:	je     40613a <isspace@plt+0x282a>
  40611b:	mov    esi,DWORD PTR [r15]
  40611e:	lea    rdx,[rsp+0xb]
  406123:	mov    rdi,r12
  406126:	xor    eax,eax
  406128:	call   4279b0 <isspace@plt+0x240a0>
  40612d:	jmp    40613a <isspace@plt+0x282a>
  40612f:	mov    rdi,r12
  406132:	call   4222b0 <isspace@plt+0x1e9a0>
  406137:	xor    r14d,r14d
  40613a:	mov    rax,QWORD PTR fs:0x28
  406143:	cmp    rax,QWORD PTR [rsp+0x10]
  406148:	jne    406159 <isspace@plt+0x2849>
  40614a:	mov    rax,r14
  40614d:	add    rsp,0x18
  406151:	pop    rbx
  406152:	pop    r12
  406154:	pop    r14
  406156:	pop    r15
  406158:	ret    
  406159:	call   403280 <__stack_chk_fail@plt>
  40615e:	xchg   ax,ax
  406160:	push   r14
  406162:	push   rbx
  406163:	push   rax
  406164:	mov    rax,QWORD PTR fs:0x28
  40616d:	mov    QWORD PTR [rsp],rax
  406171:	cmp    BYTE PTR [rsi],0x0
  406174:	je     4061aa <isspace@plt+0x289a>
  406176:	mov    rbx,rsi
  406179:	mov    r14,rdi
  40617c:	call   422ec0 <isspace@plt+0x1f5b0>
  406181:	mov    rcx,rax
  406184:	sub    rcx,rbx
  406187:	cmp    rcx,0x1
  40618b:	jg     4061ac <isspace@plt+0x289c>
  40618d:	movsx  esi,BYTE PTR [rbx]
  406190:	mov    rdi,r14
  406193:	call   42a840 <isspace@plt+0x26f30>
  406198:	mov    rdi,r14
  40619b:	mov    esi,eax
  40619d:	call   42a950 <isspace@plt+0x27040>
  4061a2:	inc    rbx
  4061a5:	mov    rax,rbx
  4061a8:	jmp    4061ac <isspace@plt+0x289c>
  4061aa:	xor    eax,eax
  4061ac:	mov    rcx,QWORD PTR fs:0x28
  4061b5:	cmp    rcx,QWORD PTR [rsp]
  4061b9:	jne    4061c3 <isspace@plt+0x28b3>
  4061bb:	add    rsp,0x8
  4061bf:	pop    rbx
  4061c0:	pop    r14
  4061c2:	ret    
  4061c3:	call   403280 <__stack_chk_fail@plt>
  4061c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4061d0:	push   rbx
  4061d1:	sub    rsp,0x10
  4061d5:	mov    rbx,rsi
  4061d8:	mov    rax,QWORD PTR fs:0x28
  4061e1:	mov    QWORD PTR [rsp+0x8],rax
  4061e6:	mov    esi,DWORD PTR [rdx]
  4061e8:	xor    eax,eax
  4061ea:	call   4288f0 <isspace@plt+0x24fe0>
  4061ef:	mov    rax,QWORD PTR fs:0x28
  4061f8:	cmp    rax,QWORD PTR [rsp+0x8]
  4061fd:	jne    406208 <isspace@plt+0x28f8>
  4061ff:	mov    rax,rbx
  406202:	add    rsp,0x10
  406206:	pop    rbx
  406207:	ret    
  406208:	call   403280 <__stack_chk_fail@plt>
  40620d:	nop    DWORD PTR [rax]
  406210:	push   r15
  406212:	push   r14
  406214:	push   rbx
  406215:	sub    rsp,0x10
  406219:	mov    r14,rsi
  40621c:	mov    r15,rdi
  40621f:	mov    rax,QWORD PTR fs:0x28
  406228:	mov    QWORD PTR [rsp+0x8],rax
  40622d:	movsx  ebx,BYTE PTR [rsi-0x1]
  406231:	add    ebx,0xffffffd0
  406234:	xor    esi,esi
  406236:	call   424330 <isspace@plt+0x20a20>
  40623b:	cmp    ebx,0x9
  40623e:	ja     406265 <isspace@plt+0x2955>
  406240:	mov    ecx,ebx
  406242:	or     ecx,eax
  406244:	je     406256 <isspace@plt+0x2946>
  406246:	lea    eax,[rax+rax*4]
  406249:	lea    esi,[rbx+rax*2]
  40624c:	mov    rdi,r15
  40624f:	call   424660 <isspace@plt+0x20d50>
  406254:	jmp    406265 <isspace@plt+0x2955>
  406256:	mov    rdi,r15
  406259:	mov    esi,0x8
  40625e:	xor    eax,eax
  406260:	call   4279b0 <isspace@plt+0x240a0>
  406265:	mov    rax,QWORD PTR fs:0x28
  40626e:	cmp    rax,QWORD PTR [rsp+0x8]
  406273:	jne    406282 <isspace@plt+0x2972>
  406275:	mov    rax,r14
  406278:	add    rsp,0x10
  40627c:	pop    rbx
  40627d:	pop    r14
  40627f:	pop    r15
  406281:	ret    
  406282:	call   403280 <__stack_chk_fail@plt>
  406287:	nop    WORD PTR [rax+rax*1+0x0]
  406290:	push   r15
  406292:	push   r14
  406294:	push   rbx
  406295:	sub    rsp,0x10
  406299:	mov    rbx,rsi
  40629c:	mov    r14,rdi
  40629f:	mov    rax,QWORD PTR fs:0x28
  4062a8:	mov    QWORD PTR [rsp+0x8],rax
  4062ad:	mov    DWORD PTR [rsp],0x0
  4062b4:	movsx  r8d,BYTE PTR [rsi]
  4062b8:	xor    ecx,ecx
  4062ba:	lea    edi,[r8-0x4f]
  4062be:	cmp    edi,0x29
  4062c1:	ja     4062ec <isspace@plt+0x29dc>
  4062c3:	mov    r9d,0x4
  4062c9:	mov    r10d,0x8
  4062cf:	mov    esi,0x3
  4062d4:	lea    rax,[rip+0x25d25]        # 42c000 <isspace@plt+0x286f0>
  4062db:	movsxd rdi,DWORD PTR [rax+rdi*4]
  4062df:	add    rdi,rax
  4062e2:	jmp    rdi
  4062e4:	mov    r10d,0x10
  4062ea:	jmp    40630e <isspace@plt+0x29fe>
  4062ec:	test   r8d,r8d
  4062ef:	je     4063b9 <isspace@plt+0x2aa9>
  4062f5:	lea    eax,[r8-0x30]
  4062f9:	cmp    al,0x9
  4062fb:	ja     406414 <isspace@plt+0x2b04>
  406301:	lea    ecx,[r8-0x30]
  406305:	mov    DWORD PTR [rsp],ecx
  406308:	mov    r10d,0xa
  40630e:	mov    esi,0x2
  406313:	jmp    406324 <isspace@plt+0x2a14>
  406315:	mov    r9d,0x8
  40631b:	mov    r10d,0x10
  406321:	mov    esi,r9d
  406324:	mov    dil,BYTE PTR [rbx+0x1]
  406328:	test   dil,dil
  40632b:	je     4063b9 <isspace@plt+0x2aa9>
  406331:	inc    rbx
  406334:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40633e:	xchg   ax,ax
  406340:	mov    eax,0xffffffd0
  406345:	cmp    r10d,0x8
  406349:	jne    406355 <isspace@plt+0x2a45>
  40634b:	mov    edx,edi
  40634d:	and    dl,0xf8
  406350:	cmp    dl,0x30
  406353:	je     406390 <isspace@plt+0x2a80>
  406355:	cmp    r10d,0x10
  406359:	je     406361 <isspace@plt+0x2a51>
  40635b:	cmp    r10d,0xa
  40635f:	jne    4063be <isspace@plt+0x2aae>
  406361:	lea    edx,[rdi-0x30]
  406364:	cmp    dl,0xa
  406367:	jb     406390 <isspace@plt+0x2a80>
  406369:	cmp    r10d,0x10
  40636d:	jne    4063be <isspace@plt+0x2aae>
  40636f:	lea    edx,[rdi-0x61]
  406372:	mov    eax,0xffffffa9
  406377:	cmp    dl,0x6
  40637a:	jb     406390 <isspace@plt+0x2a80>
  40637c:	lea    edx,[rdi-0x41]
  40637f:	mov    eax,0xffffffc9
  406384:	cmp    dl,0x5
  406387:	ja     4063be <isspace@plt+0x2aae>
  406389:	nop    DWORD PTR [rax+0x0]
  406390:	movsx  edx,dil
  406394:	add    edx,eax
  406396:	imul   ecx,r10d
  40639a:	add    ecx,edx
  40639c:	mov    DWORD PTR [rsp],ecx
  40639f:	dec    esi
  4063a1:	lea    r15,[rbx+0x1]
  4063a5:	test   esi,esi
  4063a7:	jle    4063b5 <isspace@plt+0x2aa5>
  4063a9:	movzx  edi,BYTE PTR [rbx+0x1]
  4063ad:	mov    rbx,r15
  4063b0:	test   dil,dil
  4063b3:	jne    406340 <isspace@plt+0x2a30>
  4063b5:	test   esi,esi
  4063b7:	jle    4063c1 <isspace@plt+0x2ab1>
  4063b9:	xor    r15d,r15d
  4063bc:	jmp    4063f7 <isspace@plt+0x2ae7>
  4063be:	mov    r15,rbx
  4063c1:	or     r8b,0x20
  4063c5:	cmp    r8b,0x75
  4063c9:	jne    4063de <isspace@plt+0x2ace>
  4063cb:	lea    rdi,[rsp+0x4]
  4063d0:	mov    rsi,rsp
  4063d3:	call   404ed0 <isspace@plt+0x15c0>
  4063d8:	test   eax,eax
  4063da:	jg     4063e7 <isspace@plt+0x2ad7>
  4063dc:	jmp    4063f7 <isspace@plt+0x2ae7>
  4063de:	mov    BYTE PTR [rsp+0x4],cl
  4063e2:	mov    eax,0x1
  4063e7:	movsxd rdx,eax
  4063ea:	lea    rsi,[rsp+0x4]
  4063ef:	mov    rdi,r14
  4063f2:	call   421f60 <isspace@plt+0x1e650>
  4063f7:	mov    rax,QWORD PTR fs:0x28
  406400:	cmp    rax,QWORD PTR [rsp+0x8]
  406405:	jne    40646c <isspace@plt+0x2b5c>
  406407:	mov    rax,r15
  40640a:	add    rsp,0x10
  40640e:	pop    rbx
  40640f:	pop    r14
  406411:	pop    r15
  406413:	ret    
  406414:	mov    rdi,r14
  406417:	mov    rsi,rbx
  40641a:	call   422ec0 <isspace@plt+0x1f5b0>
  40641f:	test   rax,rax
  406422:	je     4063b9 <isspace@plt+0x2aa9>
  406424:	mov    r15,rax
  406427:	mov    rdi,r14
  40642a:	mov    rsi,rbx
  40642d:	call   423010 <isspace@plt+0x1f700>
  406432:	mov    DWORD PTR [rsp],eax
  406435:	cmp    eax,0xffffffff
  406438:	je     406459 <isspace@plt+0x2b49>
  40643a:	lea    rdi,[rsp+0x4]
  40643f:	mov    rsi,rsp
  406442:	call   404ed0 <isspace@plt+0x15c0>
  406447:	cmp    BYTE PTR [rsp+0x4],0xa
  40644c:	jne    4063d8 <isspace@plt+0x2ac8>
  40644e:	mov    BYTE PTR [rsp+0x4],0xd
  406453:	test   eax,eax
  406455:	jg     4063e7 <isspace@plt+0x2ad7>
  406457:	jmp    4063f7 <isspace@plt+0x2ae7>
  406459:	lea    rsi,[rip+0x2864d]        # 42eaad <isspace@plt+0x2b19d>
  406460:	mov    rdi,r14
  406463:	xor    eax,eax
  406465:	call   4299f0 <isspace@plt+0x260e0>
  40646a:	jmp    4063f7 <isspace@plt+0x2ae7>
  40646c:	call   403280 <__stack_chk_fail@plt>
  406471:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40647b:	nop    DWORD PTR [rax+rax*1+0x0]
  406480:	push   r14
  406482:	push   rbx
  406483:	push   rax
  406484:	mov    rax,QWORD PTR fs:0x28
  40648d:	mov    QWORD PTR [rsp],rax
  406491:	cmp    BYTE PTR [rsi],0x0
  406494:	je     4064de <isspace@plt+0x2bce>
  406496:	mov    rbx,rsi
  406499:	mov    r14,rdi
  40649c:	call   422ec0 <isspace@plt+0x1f5b0>
  4064a1:	mov    rcx,rax
  4064a4:	sub    rcx,rbx
  4064a7:	cmp    rcx,0x1
  4064ab:	jg     4064e0 <isspace@plt+0x2bd0>
  4064ad:	movsx  esi,BYTE PTR [rbx]
  4064b0:	mov    rdi,r14
  4064b3:	call   42a840 <isspace@plt+0x26f30>
  4064b8:	cmp    eax,0x30
  4064bb:	je     4064d6 <isspace@plt+0x2bc6>
  4064bd:	mov    rdi,r14
  4064c0:	mov    esi,eax
  4064c2:	call   42a950 <isspace@plt+0x27040>
  4064c7:	mov    rdi,r14
  4064ca:	mov    esi,0xe
  4064cf:	xor    eax,eax
  4064d1:	call   4288f0 <isspace@plt+0x24fe0>
  4064d6:	inc    rbx
  4064d9:	mov    rax,rbx
  4064dc:	jmp    4064e0 <isspace@plt+0x2bd0>
  4064de:	xor    eax,eax
  4064e0:	mov    rcx,QWORD PTR fs:0x28
  4064e9:	cmp    rcx,QWORD PTR [rsp]
  4064ed:	jne    4064f7 <isspace@plt+0x2be7>
  4064ef:	add    rsp,0x8
  4064f3:	pop    rbx
  4064f4:	pop    r14
  4064f6:	ret    
  4064f7:	call   403280 <__stack_chk_fail@plt>
  4064fc:	nop    DWORD PTR [rax+0x0]
  406500:	push   r15
  406502:	push   r14
  406504:	push   rbx
  406505:	sub    rsp,0x10
  406509:	mov    r15,rdx
  40650c:	mov    r14,rsi
  40650f:	mov    rbx,rdi
  406512:	mov    rax,QWORD PTR fs:0x28
  40651b:	mov    QWORD PTR [rsp+0x8],rax
  406520:	mov    esi,0x7
  406525:	mov    edx,0x4
  40652a:	xor    eax,eax
  40652c:	call   4288f0 <isspace@plt+0x24fe0>
  406531:	cmp    DWORD PTR [r15],0x0
  406535:	jle    40654f <isspace@plt+0x2c3f>
  406537:	mov    rdi,rbx
  40653a:	mov    esi,0xc
  40653f:	xor    eax,eax
  406541:	call   4279b0 <isspace@plt+0x240a0>
  406546:	lea    rsi,[rip+0x28711]        # 42ec5e <isspace@plt+0x2b34e>
  40654d:	jmp    40658d <isspace@plt+0x2c7d>
  40654f:	mov    rdi,rbx
  406552:	call   4256b0 <isspace@plt+0x21da0>
  406557:	movzx  eax,al
  40655a:	lea    esi,[rax+0x8]
  40655d:	lea    rcx,[rip+0x28555]        # 42eab9 <isspace@plt+0x2b1a9>
  406564:	lea    r15,[rip+0x28566]        # 42ead1 <isspace@plt+0x2b1c1>
  40656b:	test   al,al
  40656d:	cmovne r15,rcx
  406571:	mov    rdi,rbx
  406574:	xor    eax,eax
  406576:	call   4279b0 <isspace@plt+0x240a0>
  40657b:	mov    rdi,rbx
  40657e:	mov    rsi,r15
  406581:	call   4231a0 <isspace@plt+0x1f890>
  406586:	lea    rsi,[rip+0x2855c]        # 42eae9 <isspace@plt+0x2b1d9>
  40658d:	mov    rdi,rbx
  406590:	call   4231a0 <isspace@plt+0x1f890>
  406595:	mov    rax,QWORD PTR fs:0x28
  40659e:	cmp    rax,QWORD PTR [rsp+0x8]
  4065a3:	jne    4065b2 <isspace@plt+0x2ca2>
  4065a5:	mov    rax,r14
  4065a8:	add    rsp,0x10
  4065ac:	pop    rbx
  4065ad:	pop    r14
  4065af:	pop    r15
  4065b1:	ret    
  4065b2:	call   403280 <__stack_chk_fail@plt>
  4065b7:	nop    WORD PTR [rax+rax*1+0x0]
  4065c0:	push   rbp
  4065c1:	push   r15
  4065c3:	push   r14
  4065c5:	push   rbx
  4065c6:	push   rax
  4065c7:	mov    rbx,rdx
  4065ca:	mov    r14,rsi
  4065cd:	mov    r15,rdi
  4065d0:	mov    rax,QWORD PTR fs:0x28
  4065d9:	mov    QWORD PTR [rsp],rax
  4065dd:	call   427180 <isspace@plt+0x23870>
  4065e2:	mov    ebp,eax
  4065e4:	mov    rdx,QWORD PTR [rbx]
  4065e7:	mov    rdi,r15
  4065ea:	mov    esi,0x6
  4065ef:	xor    eax,eax
  4065f1:	call   4288f0 <isspace@plt+0x24fe0>
  4065f6:	test   ebp,ebp
  4065f8:	jne    406623 <isspace@plt+0x2d13>
  4065fa:	mov    rdi,r15
  4065fd:	xor    esi,esi
  4065ff:	call   424330 <isspace@plt+0x20a20>
  406604:	test   eax,eax
  406606:	je     406614 <isspace@plt+0x2d04>
  406608:	dec    eax
  40660a:	mov    rdi,r15
  40660d:	mov    esi,eax
  40660f:	call   424660 <isspace@plt+0x20d50>
  406614:	mov    rdi,r15
  406617:	mov    esi,0xd
  40661c:	xor    eax,eax
  40661e:	call   4279b0 <isspace@plt+0x240a0>
  406623:	mov    rax,QWORD PTR fs:0x28
  40662c:	cmp    rax,QWORD PTR [rsp]
  406630:	jne    406640 <isspace@plt+0x2d30>
  406632:	mov    rax,r14
  406635:	add    rsp,0x8
  406639:	pop    rbx
  40663a:	pop    r14
  40663c:	pop    r15
  40663e:	pop    rbp
  40663f:	ret    
  406640:	call   403280 <__stack_chk_fail@plt>
  406645:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40664f:	nop
  406650:	push   rbx
  406651:	sub    rsp,0x10
  406655:	mov    rbx,rsi
  406658:	mov    rax,QWORD PTR fs:0x28
  406661:	mov    QWORD PTR [rsp+0x8],rax
  406666:	call   424440 <isspace@plt+0x20b30>
  40666b:	mov    rax,QWORD PTR fs:0x28
  406674:	cmp    rax,QWORD PTR [rsp+0x8]
  406679:	jne    406684 <isspace@plt+0x2d74>
  40667b:	mov    rax,rbx
  40667e:	add    rsp,0x10
  406682:	pop    rbx
  406683:	ret    
  406684:	call   403280 <__stack_chk_fail@plt>
  406689:	nop    DWORD PTR [rax+0x0]
  406690:	push   r14
  406692:	push   rbx
  406693:	push   rax
  406694:	mov    r14,rsi
  406697:	mov    rax,QWORD PTR fs:0x28
  4066a0:	mov    QWORD PTR [rsp],rax
  4066a4:	call   425640 <isspace@plt+0x21d30>
  4066a9:	mov    rdi,rax
  4066ac:	call   41efa0 <isspace@plt+0x1b690>
  4066b1:	test   rax,rax
  4066b4:	je     4066d8 <isspace@plt+0x2dc8>
  4066b6:	mov    rbx,rax
  4066b9:	nop    DWORD PTR [rax+0x0]
  4066c0:	mov    rdi,rbx
  4066c3:	call   41f5a0 <isspace@plt+0x1bc90>
  4066c8:	mov    rdi,rbx
  4066cb:	call   41f080 <isspace@plt+0x1b770>
  4066d0:	mov    rbx,rax
  4066d3:	test   rax,rax
  4066d6:	jne    4066c0 <isspace@plt+0x2db0>
  4066d8:	mov    rax,QWORD PTR fs:0x28
  4066e1:	cmp    rax,QWORD PTR [rsp]
  4066e5:	jne    4066f2 <isspace@plt+0x2de2>
  4066e7:	mov    rax,r14
  4066ea:	add    rsp,0x8
  4066ee:	pop    rbx
  4066ef:	pop    r14
  4066f1:	ret    
  4066f2:	call   403280 <__stack_chk_fail@plt>
  4066f7:	nop    WORD PTR [rax+rax*1+0x0]
  406700:	push   r14
  406702:	push   rbx
  406703:	push   rax
  406704:	mov    r14,rsi
  406707:	mov    rax,QWORD PTR fs:0x28
  406710:	mov    QWORD PTR [rsp],rax
  406714:	mov    rbx,QWORD PTR [rdx]
  406717:	call   425640 <isspace@plt+0x21d30>
  40671c:	mov    rdi,rax
  40671f:	call   rbx
  406721:	mov    rax,QWORD PTR fs:0x28
  40672a:	cmp    rax,QWORD PTR [rsp]
  40672e:	jne    40673b <isspace@plt+0x2e2b>
  406730:	mov    rax,r14
  406733:	add    rsp,0x8
  406737:	pop    rbx
  406738:	pop    r14
  40673a:	ret    
  40673b:	call   403280 <__stack_chk_fail@plt>
  406740:	push   r15
  406742:	push   r14
  406744:	push   r12
  406746:	push   rbx
  406747:	push   rax
  406748:	mov    r12,rdx
  40674b:	mov    r14,rsi
  40674e:	mov    rbx,rdi
  406751:	mov    rax,QWORD PTR fs:0x28
  40675a:	mov    QWORD PTR [rsp],rax
  40675e:	call   425640 <isspace@plt+0x21d30>
  406763:	mov    r15,rax
  406766:	mov    rdi,rbx
  406769:	call   424630 <isspace@plt+0x20d20>
  40676e:	mov    ecx,DWORD PTR [r12]
  406772:	cmp    eax,0xffffffff
  406775:	jne    40677e <isspace@plt+0x2e6e>
  406777:	mov    eax,ecx
  406779:	neg    eax
  40677b:	cmovl  eax,ecx
  40677e:	mov    rdi,r15
  406781:	mov    esi,eax
  406783:	test   ecx,ecx
  406785:	js     40678e <isspace@plt+0x2e7e>
  406787:	call   41b850 <isspace@plt+0x17f40>
  40678c:	jmp    406793 <isspace@plt+0x2e83>
  40678e:	call   41bf00 <isspace@plt+0x185f0>
  406793:	mov    rdi,rbx
  406796:	mov    esi,0xffffffff
  40679b:	call   424660 <isspace@plt+0x20d50>
  4067a0:	mov    rax,QWORD PTR fs:0x28
  4067a9:	cmp    rax,QWORD PTR [rsp]
  4067ad:	jne    4067be <isspace@plt+0x2eae>
  4067af:	mov    rax,r14
  4067b2:	add    rsp,0x8
  4067b6:	pop    rbx
  4067b7:	pop    r12
  4067b9:	pop    r14
  4067bb:	pop    r15
  4067bd:	ret    
  4067be:	call   403280 <__stack_chk_fail@plt>
  4067c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4067cd:	nop    DWORD PTR [rax]
  4067d0:	push   rbp
  4067d1:	push   r15
  4067d3:	push   r14
  4067d5:	push   r13
  4067d7:	push   r12
  4067d9:	push   rbx
  4067da:	sub    rsp,0x28
  4067de:	mov    rbx,rdx
  4067e1:	mov    QWORD PTR [rsp+0x8],rsi
  4067e6:	mov    rbp,rdi
  4067e9:	mov    rax,QWORD PTR fs:0x28
  4067f2:	mov    QWORD PTR [rsp+0x20],rax
  4067f7:	call   425640 <isspace@plt+0x21d30>
  4067fc:	mov    r12,rax
  4067ff:	mov    rdi,rax
  406802:	call   41efe0 <isspace@plt+0x1b6d0>
  406807:	mov    rdi,rax
  40680a:	call   41f600 <isspace@plt+0x1bcf0>
  40680f:	mov    r15d,eax
  406812:	mov    QWORD PTR [rsp],rbp
  406816:	mov    rdi,rbp
  406819:	mov    esi,0x1
  40681e:	call   4246a0 <isspace@plt+0x20d90>
  406823:	mov    QWORD PTR [rsp+0x10],rax
  406828:	mov    QWORD PTR [rsp+0x18],rdx
  40682d:	jmp    406844 <isspace@plt+0x2f34>
  40682f:	nop
  406830:	mov    rdi,rbp
  406833:	call   41ee50 <isspace@plt+0x1b540>
  406838:	movzx  esi,r15b
  40683c:	mov    rdi,rbp
  40683f:	call   41f570 <isspace@plt+0x1bc60>
  406844:	lea    rdi,[rsp+0x10]
  406849:	call   424710 <isspace@plt+0x20e00>
  40684e:	test   al,al
  406850:	je     406970 <isspace@plt+0x3060>
  406856:	mov    eax,DWORD PTR [rbx]
  406858:	test   eax,eax
  40685a:	jg     406870 <isspace@plt+0x2f60>
  40685c:	cmp    eax,0x80000000
  406861:	je     406890 <isspace@plt+0x2f80>
  406863:	cmp    eax,0xffffffff
  406866:	je     406880 <isspace@plt+0x2f70>
  406868:	jmp    40697e <isspace@plt+0x306e>
  40686d:	nop    DWORD PTR [rax]
  406870:	cmp    eax,0x7fffffff
  406875:	je     4068b0 <isspace@plt+0x2fa0>
  406877:	cmp    eax,0x1
  40687a:	jne    40697e <isspace@plt+0x306e>
  406880:	mov    rdi,r12
  406883:	call   41efe0 <isspace@plt+0x1b6d0>
  406888:	jmp    406898 <isspace@plt+0x2f88>
  40688a:	nop    WORD PTR [rax+rax*1+0x0]
  406890:	mov    rdi,r12
  406893:	call   41efa0 <isspace@plt+0x1b690>
  406898:	mov    r14,rax
  40689b:	test   rax,rax
  40689e:	jne    4068e0 <isspace@plt+0x2fd0>
  4068a0:	jmp    40697e <isspace@plt+0x306e>
  4068a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4068af:	nop
  4068b0:	mov    rdi,r12
  4068b3:	call   41efa0 <isspace@plt+0x1b690>
  4068b8:	test   rax,rax
  4068bb:	je     40697e <isspace@plt+0x306e>
  4068c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4068cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4068d0:	mov    r14,rax
  4068d3:	mov    rdi,rax
  4068d6:	call   41f080 <isspace@plt+0x1b770>
  4068db:	test   rax,rax
  4068de:	jne    4068d0 <isspace@plt+0x2fc0>
  4068e0:	mov    rdi,r14
  4068e3:	call   41af10 <isspace@plt+0x17600>
  4068e8:	mov    r13,rax
  4068eb:	cmp    DWORD PTR [rbx],0x0
  4068ee:	jle    406900 <isspace@plt+0x2ff0>
  4068f0:	mov    rdi,r14
  4068f3:	call   41da20 <isspace@plt+0x1a110>
  4068f8:	jmp    406910 <isspace@plt+0x3000>
  4068fa:	nop    WORD PTR [rax+rax*1+0x0]
  406900:	jns    406910 <isspace@plt+0x3000>
  406902:	mov    rdi,r14
  406905:	call   41d5f0 <isspace@plt+0x19ce0>
  40690a:	nop    WORD PTR [rax+rax*1+0x0]
  406910:	mov    rdi,r14
  406913:	call   41af10 <isspace@plt+0x17600>
  406918:	mov    rbp,rax
  40691b:	mov    rdi,r14
  40691e:	mov    rsi,r13
  406921:	call   41a7c0 <isspace@plt+0x16eb0>
  406926:	mov    rdi,r12
  406929:	mov    rsi,rbp
  40692c:	call   41b500 <isspace@plt+0x17bf0>
  406931:	mov    rbp,rax
  406934:	test   rax,rax
  406937:	jne    406830 <isspace@plt+0x2f20>
  40693d:	mov    eax,DWORD PTR [rbx]
  40693f:	cmp    eax,0x1
  406942:	je     406957 <isspace@plt+0x3047>
  406944:	cmp    eax,0xffffffff
  406947:	jne    406844 <isspace@plt+0x2f34>
  40694d:	mov    rdi,r14
  406950:	call   41f020 <isspace@plt+0x1b710>
  406955:	jmp    40695f <isspace@plt+0x304f>
  406957:	mov    rdi,r14
  40695a:	call   41f080 <isspace@plt+0x1b770>
  40695f:	mov    rbp,rax
  406962:	test   rax,rax
  406965:	jne    406830 <isspace@plt+0x2f20>
  40696b:	jmp    406844 <isspace@plt+0x2f34>
  406970:	mov    rdi,QWORD PTR [rsp]
  406974:	mov    esi,0xffffffff
  406979:	call   424660 <isspace@plt+0x20d50>
  40697e:	mov    rax,QWORD PTR fs:0x28
  406987:	cmp    rax,QWORD PTR [rsp+0x20]
  40698c:	jne    4069a2 <isspace@plt+0x3092>
  40698e:	mov    rax,QWORD PTR [rsp+0x8]
  406993:	add    rsp,0x28
  406997:	pop    rbx
  406998:	pop    r12
  40699a:	pop    r13
  40699c:	pop    r14
  40699e:	pop    r15
  4069a0:	pop    rbp
  4069a1:	ret    
  4069a2:	call   403280 <__stack_chk_fail@plt>
  4069a7:	nop    WORD PTR [rax+rax*1+0x0]
  4069b0:	push   rbp
  4069b1:	push   r15
  4069b3:	push   r14
  4069b5:	push   r13
  4069b7:	push   r12
  4069b9:	push   rbx
  4069ba:	sub    rsp,0x48
  4069be:	mov    r13,rdx
  4069c1:	mov    r14,rsi
  4069c4:	mov    rbx,rdi
  4069c7:	mov    rax,QWORD PTR fs:0x28
  4069d0:	mov    QWORD PTR [rsp+0x40],rax
  4069d5:	call   425600 <isspace@plt+0x21cf0>
  4069da:	mov    QWORD PTR [rsp+0x8],rax
  4069df:	mov    rdi,rbx
  4069e2:	call   425640 <isspace@plt+0x21d30>
  4069e7:	mov    rbx,rax
  4069ea:	mov    rdi,rax
  4069ed:	call   41efe0 <isspace@plt+0x1b6d0>
  4069f2:	mov    r12,rax
  4069f5:	mov    rdi,rax
  4069f8:	call   41f7a0 <isspace@plt+0x1be90>
  4069fd:	mov    QWORD PTR [rsp+0x30],rax
  406a02:	mov    QWORD PTR [rsp+0x38],rdx
  406a07:	lea    rdi,[rsp+0x30]
  406a0c:	call   416fc0 <isspace@plt+0x136b0>
  406a11:	test   al,al
  406a13:	je     406c2f <isspace@plt+0x331f>
  406a19:	mov    rdi,rbx
  406a1c:	call   41ea70 <isspace@plt+0x1b160>
  406a21:	cmp    eax,0x1
  406a24:	jne    406a5f <isspace@plt+0x314f>
  406a26:	mov    rdi,r12
  406a29:	call   41af10 <isspace@plt+0x17600>
  406a2e:	mov    r12,QWORD PTR [rsp+0x8]
  406a33:	mov    rdi,r12
  406a36:	mov    rsi,rax
  406a39:	call   415890 <isspace@plt+0x11f80>
  406a3e:	mov    QWORD PTR [rsp+0x20],rax
  406a43:	mov    QWORD PTR [rsp+0x28],rdx
  406a48:	lea    rdi,[rsp+0x30]
  406a4d:	lea    rsi,[rsp+0x20]
  406a52:	call   417290 <isspace@plt+0x13980>
  406a57:	mov    BYTE PTR [rip+0x3b933],al        # 442390 <isspace@plt+0x3ea80>
  406a5d:	jmp    406a6a <isspace@plt+0x315a>
  406a5f:	mov    al,BYTE PTR [rip+0x3b92b]        # 442390 <isspace@plt+0x3ea80>
  406a65:	mov    r12,QWORD PTR [rsp+0x8]
  406a6a:	test   al,al
  406a6c:	lea    rax,[rip+0xf6bd]        # 416130 <isspace@plt+0x12820>
  406a73:	cmove  rax,QWORD PTR [rip+0x3b56d]        # 441fe8 <isspace@plt+0x3e6d8>
  406a7b:	mov    QWORD PTR [rsp+0x18],rax
  406a80:	lea    r15,[rip+0xf5d9]        # 416060 <isspace@plt+0x12750>
  406a87:	cmove  r15,QWORD PTR [rip+0x3b509]        # 441f98 <isspace@plt+0x3e688>
  406a8f:	mov    rbp,QWORD PTR [rsp+0x30]
  406a94:	lea    rdi,[rsp+0x30]
  406a99:	call   417020 <isspace@plt+0x13710>
  406a9e:	mov    rdi,r12
  406aa1:	mov    rsi,rbp
  406aa4:	mov    rdx,rax
  406aa7:	call   411210 <isspace@plt+0xd900>
  406aac:	test   rax,rax
  406aaf:	je     406c2f <isspace@plt+0x331f>
  406ab5:	mov    r12,rax
  406ab8:	mov    QWORD PTR [rsp+0x10],r14
  406abd:	mov    r14b,BYTE PTR [r13+0x0]
  406ac1:	vmovups xmm0,XMMWORD PTR [rsp+0x30]
  406ac7:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  406acd:	lea    r13,[rsp+0x30]
  406ad2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406adc:	nop    DWORD PTR [rax+0x0]
  406ae0:	mov    rsi,QWORD PTR [rsp+0x38]
  406ae5:	mov    rdi,QWORD PTR [rsp+0x8]
  406aea:	mov    rdx,r12
  406aed:	call   r15
  406af0:	mov    QWORD PTR [rsp+0x30],rax
  406af5:	mov    QWORD PTR [rsp+0x38],rdx
  406afa:	mov    rdi,r13
  406afd:	call   416fc0 <isspace@plt+0x136b0>
  406b02:	test   al,al
  406b04:	je     406b72 <isspace@plt+0x3262>
  406b06:	mov    rdi,rbx
  406b09:	call   41fe00 <isspace@plt+0x1c4f0>
  406b0e:	mov    rsi,QWORD PTR [rsp+0x38]
  406b13:	mov    rdi,rax
  406b16:	call   412d60 <isspace@plt+0xf450>
  406b1b:	mov    rdi,rbx
  406b1e:	mov    rsi,rax
  406b21:	call   41b500 <isspace@plt+0x17bf0>
  406b26:	mov    rbp,rax
  406b29:	test   rax,rax
  406b2c:	je     406b4b <isspace@plt+0x323b>
  406b2e:	mov    rdi,rbp
  406b31:	mov    rsi,r13
  406b34:	call   41f850 <isspace@plt+0x1bf40>
  406b39:	mov    rdi,rbp
  406b3c:	mov    esi,0x1
  406b41:	call   41f570 <isspace@plt+0x1bc60>
  406b46:	test   r14b,r14b
  406b49:	je     406b60 <isspace@plt+0x3250>
  406b4b:	test   r14b,r14b
  406b4e:	jne    406ae0 <isspace@plt+0x31d0>
  406b50:	test   rbp,rbp
  406b53:	je     406ae0 <isspace@plt+0x31d0>
  406b55:	jmp    406c22 <isspace@plt+0x3312>
  406b5a:	nop    WORD PTR [rax+rax*1+0x0]
  406b60:	mov    rdi,rbp
  406b63:	call   41ee50 <isspace@plt+0x1b540>
  406b68:	test   r14b,r14b
  406b6b:	je     406b50 <isspace@plt+0x3240>
  406b6d:	jmp    406ae0 <isspace@plt+0x31d0>
  406b72:	vmovaps xmm0,XMMWORD PTR [rsp+0x20]
  406b78:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  406b7e:	lea    r13,[rsp+0x30]
  406b83:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406b8d:	nop    DWORD PTR [rax]
  406b90:	mov    rsi,QWORD PTR [rsp+0x30]
  406b95:	mov    rdi,QWORD PTR [rsp+0x8]
  406b9a:	mov    rdx,r12
  406b9d:	call   QWORD PTR [rsp+0x18]
  406ba1:	mov    QWORD PTR [rsp+0x30],rax
  406ba6:	mov    QWORD PTR [rsp+0x38],rdx
  406bab:	mov    rdi,r13
  406bae:	call   416fc0 <isspace@plt+0x136b0>
  406bb3:	test   al,al
  406bb5:	je     406c22 <isspace@plt+0x3312>
  406bb7:	mov    rdi,rbx
  406bba:	call   41fe00 <isspace@plt+0x1c4f0>
  406bbf:	mov    rsi,QWORD PTR [rsp+0x38]
  406bc4:	mov    rdi,rax
  406bc7:	call   412d60 <isspace@plt+0xf450>
  406bcc:	mov    rdi,rbx
  406bcf:	mov    rsi,rax
  406bd2:	call   41b500 <isspace@plt+0x17bf0>
  406bd7:	mov    rbp,rax
  406bda:	test   rax,rax
  406bdd:	je     406bfc <isspace@plt+0x32ec>
  406bdf:	mov    rdi,rbp
  406be2:	mov    rsi,r13
  406be5:	call   41f850 <isspace@plt+0x1bf40>
  406bea:	mov    rdi,rbp
  406bed:	mov    esi,0x1
  406bf2:	call   41f570 <isspace@plt+0x1bc60>
  406bf7:	test   r14b,r14b
  406bfa:	je     406c10 <isspace@plt+0x3300>
  406bfc:	test   r14b,r14b
  406bff:	jne    406b90 <isspace@plt+0x3280>
  406c01:	test   rbp,rbp
  406c04:	je     406b90 <isspace@plt+0x3280>
  406c06:	jmp    406c22 <isspace@plt+0x3312>
  406c08:	nop    DWORD PTR [rax+rax*1+0x0]
  406c10:	mov    rdi,rbp
  406c13:	call   41ee50 <isspace@plt+0x1b540>
  406c18:	test   r14b,r14b
  406c1b:	je     406c01 <isspace@plt+0x32f1>
  406c1d:	jmp    406b90 <isspace@plt+0x3280>
  406c22:	mov    rdi,r12
  406c25:	call   4030d0 <free@plt>
  406c2a:	mov    r14,QWORD PTR [rsp+0x10]
  406c2f:	mov    rax,QWORD PTR fs:0x28
  406c38:	cmp    rax,QWORD PTR [rsp+0x40]
  406c3d:	jne    406c51 <isspace@plt+0x3341>
  406c3f:	mov    rax,r14
  406c42:	add    rsp,0x48
  406c46:	pop    rbx
  406c47:	pop    r12
  406c49:	pop    r13
  406c4b:	pop    r14
  406c4d:	pop    r15
  406c4f:	pop    rbp
  406c50:	ret    
  406c51:	call   403280 <__stack_chk_fail@plt>
  406c56:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406c60:	push   r15
  406c62:	push   r14
  406c64:	push   r13
  406c66:	push   r12
  406c68:	push   rbx
  406c69:	sub    rsp,0x10
  406c6d:	mov    r14,rdx
  406c70:	mov    r15,rsi
  406c73:	mov    rbx,rdi
  406c76:	mov    rax,QWORD PTR fs:0x28
  406c7f:	mov    QWORD PTR [rsp+0x8],rax
  406c84:	call   425640 <isspace@plt+0x21d30>
  406c89:	mov    r13,rax
  406c8c:	mov    rdi,rax
  406c8f:	call   41efe0 <isspace@plt+0x1b6d0>
  406c94:	mov    r12,rax
  406c97:	mov    rdi,rbx
  406c9a:	mov    rsi,r15
  406c9d:	mov    rdx,r14
  406ca0:	call   4069b0 <isspace@plt+0x30a0>
  406ca5:	mov    r14,rax
  406ca8:	mov    rdi,r13
  406cab:	call   41efe0 <isspace@plt+0x1b6d0>
  406cb0:	cmp    r12,rax
  406cb3:	je     406cbd <isspace@plt+0x33ad>
  406cb5:	mov    rdi,r12
  406cb8:	call   41ece0 <isspace@plt+0x1b3d0>
  406cbd:	mov    rax,QWORD PTR fs:0x28
  406cc6:	cmp    rax,QWORD PTR [rsp+0x8]
  406ccb:	jne    406cde <isspace@plt+0x33ce>
  406ccd:	mov    rax,r14
  406cd0:	add    rsp,0x10
  406cd4:	pop    rbx
  406cd5:	pop    r12
  406cd7:	pop    r13
  406cd9:	pop    r14
  406cdb:	pop    r15
  406cdd:	ret    
  406cde:	call   403280 <__stack_chk_fail@plt>
  406ce3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406ced:	nop    DWORD PTR [rax]
  406cf0:	push   rbp
  406cf1:	push   r15
  406cf3:	push   r14
  406cf5:	push   r13
  406cf7:	push   r12
  406cf9:	push   rbx
  406cfa:	push   rax
  406cfb:	mov    r14,rsi
  406cfe:	mov    rbx,rdi
  406d01:	mov    rax,QWORD PTR fs:0x28
  406d0a:	mov    QWORD PTR [rsp],rax
  406d0e:	call   425640 <isspace@plt+0x21d30>
  406d13:	mov    r15,rax
  406d16:	mov    rdi,rbx
  406d19:	call   425600 <isspace@plt+0x21cf0>
  406d1e:	mov    r12,rax
  406d21:	mov    rdi,r15
  406d24:	call   41efa0 <isspace@plt+0x1b690>
  406d29:	test   rax,rax
  406d2c:	je     406d66 <isspace@plt+0x3456>
  406d2e:	mov    r13,rax
  406d31:	mov    ebx,0x7fffffff
  406d36:	mov    ebp,ebx
  406d38:	nop    DWORD PTR [rax+rax*1+0x0]
  406d40:	mov    rdi,r13
  406d43:	call   41f190 <isspace@plt+0x1b880>
  406d48:	cmp    eax,ebx
  406d4a:	cmovle ebp,eax
  406d4d:	test   eax,eax
  406d4f:	cmovs  ebp,ebx
  406d52:	mov    rdi,r13
  406d55:	call   41f080 <isspace@plt+0x1b770>
  406d5a:	mov    r13,rax
  406d5d:	mov    ebx,ebp
  406d5f:	test   rax,rax
  406d62:	jne    406d40 <isspace@plt+0x3430>
  406d64:	jmp    406d6b <isspace@plt+0x345b>
  406d66:	mov    ebp,0x7fffffff
  406d6b:	mov    rdi,r15
  406d6e:	call   41efa0 <isspace@plt+0x1b690>
  406d73:	test   rax,rax
  406d76:	je     406dc1 <isspace@plt+0x34b1>
  406d78:	mov    rbx,rax
  406d7b:	jmp    406d90 <isspace@plt+0x3480>
  406d7d:	nop    DWORD PTR [rax]
  406d80:	mov    rdi,rbx
  406d83:	call   41f080 <isspace@plt+0x1b770>
  406d88:	mov    rbx,rax
  406d8b:	test   rax,rax
  406d8e:	je     406dc1 <isspace@plt+0x34b1>
  406d90:	mov    rdi,rbx
  406d93:	mov    esi,ebp
  406d95:	call   41f1d0 <isspace@plt+0x1b8c0>
  406d9a:	cmp    eax,0xffffffff
  406d9d:	jne    406d80 <isspace@plt+0x3470>
  406d9f:	mov    rdi,rbx
  406da2:	call   41af10 <isspace@plt+0x17600>
  406da7:	mov    rdi,r12
  406daa:	mov    rsi,rax
  406dad:	mov    edx,ebp
  406daf:	call   413840 <isspace@plt+0xff30>
  406db4:	mov    rdi,rbx
  406db7:	mov    rsi,rax
  406dba:	call   41a7c0 <isspace@plt+0x16eb0>
  406dbf:	jmp    406d80 <isspace@plt+0x3470>
  406dc1:	mov    rax,QWORD PTR fs:0x28
  406dca:	cmp    rax,QWORD PTR [rsp]
  406dce:	jne    406de2 <isspace@plt+0x34d2>
  406dd0:	mov    rax,r14
  406dd3:	add    rsp,0x8
  406dd7:	pop    rbx
  406dd8:	pop    r12
  406dda:	pop    r13
  406ddc:	pop    r14
  406dde:	pop    r15
  406de0:	pop    rbp
  406de1:	ret    
  406de2:	call   403280 <__stack_chk_fail@plt>
  406de7:	nop    WORD PTR [rax+rax*1+0x0]
  406df0:	push   rbp
  406df1:	push   r15
  406df3:	push   r14
  406df5:	push   r13
  406df7:	push   r12
  406df9:	push   rbx
  406dfa:	sub    rsp,0x28
  406dfe:	mov    r14,rdx
  406e01:	mov    QWORD PTR [rsp+0x18],rsi
  406e06:	mov    rbx,rdi
  406e09:	mov    rax,QWORD PTR fs:0x28
  406e12:	mov    QWORD PTR [rsp+0x20],rax
  406e17:	call   425640 <isspace@plt+0x21d30>
  406e1c:	mov    rbp,rax
  406e1f:	mov    rdi,rbx
  406e22:	call   425600 <isspace@plt+0x21cf0>
  406e27:	mov    r12,rax
  406e2a:	mov    eax,DWORD PTR [r14]
  406e2d:	mov    DWORD PTR [rsp],eax
  406e30:	mov    rdi,rbp
  406e33:	call   41ead0 <isspace@plt+0x1b1c0>
  406e38:	mov    DWORD PTR [rsp+0x4],eax
  406e3c:	test   eax,eax
  406e3e:	jle    406f85 <isspace@plt+0x3675>
  406e44:	xor    r15d,r15d
  406e47:	mov    QWORD PTR [rsp+0x8],rbp
  406e4c:	jmp    406e6d <isspace@plt+0x355d>
  406e4e:	xchg   ax,ax
  406e50:	mov    rdi,QWORD PTR [rsp+0x10]
  406e55:	call   4030d0 <free@plt>
  406e5a:	inc    r15d
  406e5d:	cmp    r15d,DWORD PTR [rsp+0x4]
  406e62:	mov    rbp,QWORD PTR [rsp+0x8]
  406e67:	je     406f85 <isspace@plt+0x3675>
  406e6d:	mov    rdi,rbp
  406e70:	mov    esi,r15d
  406e73:	call   41eb80 <isspace@plt+0x1b270>
  406e78:	test   rax,rax
  406e7b:	je     406ed0 <isspace@plt+0x35c0>
  406e7d:	mov    rbx,rax
  406e80:	xor    r13d,r13d
  406e83:	mov    ebp,0x7fffffff
  406e88:	mov    r14d,DWORD PTR [rsp]
  406e8c:	nop    DWORD PTR [rax+0x0]
  406e90:	mov    rdi,rbx
  406e93:	call   41f7a0 <isspace@plt+0x1be90>
  406e98:	test   r14d,r14d
  406e9b:	cmovs  rdx,rax
  406e9f:	mov    rdi,r12
  406ea2:	mov    rsi,rdx
  406ea5:	call   4136d0 <isspace@plt+0xfdc0>
  406eaa:	cmp    eax,ebp
  406eac:	cmovle ebp,eax
  406eaf:	cmp    eax,r13d
  406eb2:	cmovge r13d,eax
  406eb6:	mov    rdi,rbx
  406eb9:	mov    esi,r15d
  406ebc:	call   41ec20 <isspace@plt+0x1b310>
  406ec1:	mov    rbx,rax
  406ec4:	test   rax,rax
  406ec7:	jne    406e90 <isspace@plt+0x3580>
  406ec9:	jmp    406ed8 <isspace@plt+0x35c8>
  406ecb:	nop    DWORD PTR [rax+rax*1+0x0]
  406ed0:	mov    ebp,0x7fffffff
  406ed5:	xor    r13d,r13d
  406ed8:	mov    eax,r13d
  406edb:	sub    eax,ebp
  406edd:	mov    ebp,eax
  406edf:	movsxd rbx,eax
  406ee2:	lea    rdi,[rbx+0x1]
  406ee6:	call   4035d0 <malloc@plt>
  406eeb:	test   rax,rax
  406eee:	je     406f8d <isspace@plt+0x367d>
  406ef4:	mov    QWORD PTR [rsp+0x10],rax
  406ef9:	mov    rdi,rax
  406efc:	mov    esi,0x20
  406f01:	mov    rdx,rbx
  406f04:	call   403360 <memset@plt>
  406f09:	mov    rdi,QWORD PTR [rsp+0x8]
  406f0e:	mov    esi,r15d
  406f11:	call   41eb80 <isspace@plt+0x1b270>
  406f16:	test   rax,rax
  406f19:	je     406e50 <isspace@plt+0x3540>
  406f1f:	mov    r14,rax
  406f22:	jmp    406f47 <isspace@plt+0x3637>
  406f24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406f2e:	xchg   ax,ax
  406f30:	mov    rdi,r14
  406f33:	mov    esi,r15d
  406f36:	call   41ec20 <isspace@plt+0x1b310>
  406f3b:	mov    r14,rax
  406f3e:	test   rax,rax
  406f41:	je     406e50 <isspace@plt+0x3540>
  406f47:	mov    rdi,r14
  406f4a:	call   41f7a0 <isspace@plt+0x1be90>
  406f4f:	mov    rbx,rax
  406f52:	cmp    DWORD PTR [rsp],0x0
  406f56:	cmovs  rdx,rax
  406f5a:	mov    rdi,r12
  406f5d:	mov    rsi,rdx
  406f60:	call   4136d0 <isspace@plt+0xfdc0>
  406f65:	mov    ecx,r13d
  406f68:	sub    ecx,eax
  406f6a:	jle    406f30 <isspace@plt+0x3620>
  406f6c:	cmp    ecx,ebp
  406f6e:	ja     406f30 <isspace@plt+0x3620>
  406f70:	movsxd rcx,ecx
  406f73:	mov    rdi,r12
  406f76:	mov    rsi,rbx
  406f79:	mov    rdx,QWORD PTR [rsp+0x10]
  406f7e:	call   40efe0 <isspace@plt+0xb6d0>
  406f83:	jmp    406f30 <isspace@plt+0x3620>
  406f85:	mov    rdi,rbp
  406f88:	call   419f00 <isspace@plt+0x165f0>
  406f8d:	mov    rax,QWORD PTR fs:0x28
  406f96:	cmp    rax,QWORD PTR [rsp+0x20]
  406f9b:	jne    406fb1 <isspace@plt+0x36a1>
  406f9d:	mov    rax,QWORD PTR [rsp+0x18]
  406fa2:	add    rsp,0x28
  406fa6:	pop    rbx
  406fa7:	pop    r12
  406fa9:	pop    r13
  406fab:	pop    r14
  406fad:	pop    r15
  406faf:	pop    rbp
  406fb0:	ret    
  406fb1:	call   403280 <__stack_chk_fail@plt>
  406fb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406fc0:	push   r14
  406fc2:	push   rbx
  406fc3:	push   rax
  406fc4:	mov    r14,rsi
  406fc7:	mov    rax,QWORD PTR fs:0x28
  406fd0:	mov    QWORD PTR [rsp],rax
  406fd4:	call   425640 <isspace@plt+0x21d30>
  406fd9:	mov    rbx,rax
  406fdc:	mov    rdi,rax
  406fdf:	call   41ea70 <isspace@plt+0x1b160>
  406fe4:	mov    rdi,rbx
  406fe7:	cmp    eax,0x2
  406fea:	jl     406ff3 <isspace@plt+0x36e3>
  406fec:	call   41f630 <isspace@plt+0x1bd20>
  406ff1:	jmp    407000 <isspace@plt+0x36f0>
  406ff3:	call   41efe0 <isspace@plt+0x1b6d0>
  406ff8:	mov    rdi,rax
  406ffb:	call   41ef20 <isspace@plt+0x1b610>
  407000:	mov    rax,QWORD PTR fs:0x28
  407009:	cmp    rax,QWORD PTR [rsp]
  40700d:	jne    40701a <isspace@plt+0x370a>
  40700f:	mov    rax,r14
  407012:	add    rsp,0x8
  407016:	pop    rbx
  407017:	pop    r14
  407019:	ret    
  40701a:	call   403280 <__stack_chk_fail@plt>
  40701f:	nop
  407020:	push   r14
  407022:	push   rbx
  407023:	push   rax
  407024:	mov    r14,rsi
  407027:	mov    rax,QWORD PTR fs:0x28
  407030:	mov    QWORD PTR [rsp],rax
  407034:	call   425640 <isspace@plt+0x21d30>
  407039:	mov    rbx,rax
  40703c:	mov    rdi,rax
  40703f:	call   41efe0 <isspace@plt+0x1b6d0>
  407044:	mov    rdi,rax
  407047:	call   41ece0 <isspace@plt+0x1b3d0>
  40704c:	mov    rdi,rbx
  40704f:	call   41e510 <isspace@plt+0x1ac00>
  407054:	mov    rdi,rbx
  407057:	mov    rsi,rax
  40705a:	call   41a790 <isspace@plt+0x16e80>
  40705f:	mov    rax,QWORD PTR fs:0x28
  407068:	cmp    rax,QWORD PTR [rsp]
  40706c:	jne    407079 <isspace@plt+0x3769>
  40706e:	mov    rax,r14
  407071:	add    rsp,0x8
  407075:	pop    rbx
  407076:	pop    r14
  407078:	ret    
  407079:	call   403280 <__stack_chk_fail@plt>
  40707e:	xchg   ax,ax
  407080:	push   rbp
  407081:	push   r15
  407083:	push   r14
  407085:	push   r13
  407087:	push   r12
  407089:	push   rbx
  40708a:	push   rax
  40708b:	mov    rbp,rdx
  40708e:	mov    r14,rsi
  407091:	mov    r15,rdi
  407094:	mov    rax,QWORD PTR fs:0x28
  40709d:	mov    QWORD PTR [rsp],rax
  4070a1:	call   425640 <isspace@plt+0x21d30>
  4070a6:	mov    r12,rax
  4070a9:	mov    rdi,rax
  4070ac:	call   41ead0 <isspace@plt+0x1b1c0>
  4070b1:	mov    ebx,eax
  4070b3:	mov    esi,DWORD PTR [rbp+0x0]
  4070b6:	mov    rdi,r15
  4070b9:	call   424330 <isspace@plt+0x20a20>
  4070be:	mov    r13d,eax
  4070c1:	cmp    eax,ebx
  4070c3:	cmovg  r13d,ebx
  4070c7:	mov    rdi,r12
  4070ca:	call   41ea70 <isspace@plt+0x1b160>
  4070cf:	cmp    eax,0x1
  4070d2:	jne    4070e5 <isspace@plt+0x37d5>
  4070d4:	lea    rsi,[rip+0x27da5]        # 42ee80 <isspace@plt+0x2b570>
  4070db:	mov    rdi,r15
  4070de:	call   4231a0 <isspace@plt+0x1f890>
  4070e3:	jmp    40712b <isspace@plt+0x381b>
  4070e5:	dec    r13d
  4070e8:	mov    rdi,r12
  4070eb:	mov    esi,r13d
  4070ee:	call   41eb80 <isspace@plt+0x1b270>
  4070f3:	test   rax,rax
  4070f6:	je     40711e <isspace@plt+0x380e>
  4070f8:	mov    rbx,rax
  4070fb:	nop    DWORD PTR [rax+rax*1+0x0]
  407100:	mov    rdi,rbx
  407103:	mov    esi,r13d
  407106:	call   41ec20 <isspace@plt+0x1b310>
  40710b:	mov    rbp,rax
  40710e:	mov    rdi,rbx
  407111:	call   41ece0 <isspace@plt+0x1b3d0>
  407116:	mov    rbx,rbp
  407119:	test   rbp,rbp
  40711c:	jne    407100 <isspace@plt+0x37f0>
  40711e:	mov    rdi,r15
  407121:	mov    esi,0xffffffff
  407126:	call   424660 <isspace@plt+0x20d50>
  40712b:	mov    rax,QWORD PTR fs:0x28
  407134:	cmp    rax,QWORD PTR [rsp]
  407138:	jne    40714c <isspace@plt+0x383c>
  40713a:	mov    rax,r14
  40713d:	add    rsp,0x8
  407141:	pop    rbx
  407142:	pop    r12
  407144:	pop    r13
  407146:	pop    r14
  407148:	pop    r15
  40714a:	pop    rbp
  40714b:	ret    
  40714c:	call   403280 <__stack_chk_fail@plt>
  407151:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40715b:	nop    DWORD PTR [rax+rax*1+0x0]
  407160:	push   rbp
  407161:	push   r15
  407163:	push   r14
  407165:	push   r13
  407167:	push   r12
  407169:	push   rbx
  40716a:	push   rax
  40716b:	mov    r12,rdx
  40716e:	mov    r14,rsi
  407171:	mov    r15,rdi
  407174:	mov    rax,QWORD PTR fs:0x28
  40717d:	mov    QWORD PTR [rsp],rax
  407181:	call   425640 <isspace@plt+0x21d30>
  407186:	mov    rbx,rax
  407189:	mov    rdi,rax
  40718c:	call   41ead0 <isspace@plt+0x1b1c0>
  407191:	mov    ebp,eax
  407193:	mov    esi,DWORD PTR [r12]
  407197:	mov    rdi,r15
  40719a:	call   424330 <isspace@plt+0x20a20>
  40719f:	mov    r12d,eax
  4071a2:	cmp    eax,ebp
  4071a4:	cmovg  r12d,ebp
  4071a8:	mov    rdi,rbx
  4071ab:	call   41ea70 <isspace@plt+0x1b160>
  4071b0:	cmp    eax,0x1
  4071b3:	jne    4071bf <isspace@plt+0x38af>
  4071b5:	mov    rdi,r15
  4071b8:	call   421580 <isspace@plt+0x1dc70>
  4071bd:	jmp    40722d <isspace@plt+0x391d>
  4071bf:	dec    r12d
  4071c2:	mov    rdi,rbx
  4071c5:	call   41efa0 <isspace@plt+0x1b690>
  4071ca:	mov    rbp,rax
  4071cd:	mov    rdi,rbx
  4071d0:	mov    esi,r12d
  4071d3:	call   41eb80 <isspace@plt+0x1b270>
  4071d8:	test   rbp,rbp
  4071db:	je     407220 <isspace@plt+0x3910>
  4071dd:	mov    r13,rax
  4071e0:	jmp    407200 <isspace@plt+0x38f0>
  4071e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4071ec:	nop    DWORD PTR [rax+0x0]
  4071f0:	mov    rdi,rbp
  4071f3:	call   41ece0 <isspace@plt+0x1b3d0>
  4071f8:	mov    rbp,rbx
  4071fb:	test   rbx,rbx
  4071fe:	je     407220 <isspace@plt+0x3910>
  407200:	mov    rdi,rbp
  407203:	call   41f080 <isspace@plt+0x1b770>
  407208:	mov    rbx,rax
  40720b:	cmp    rbp,r13
  40720e:	jne    4071f0 <isspace@plt+0x38e0>
  407210:	mov    rdi,r13
  407213:	mov    esi,r12d
  407216:	call   41ec20 <isspace@plt+0x1b310>
  40721b:	mov    r13,rax
  40721e:	jmp    4071f8 <isspace@plt+0x38e8>
  407220:	mov    rdi,r15
  407223:	mov    esi,0xffffffff
  407228:	call   424660 <isspace@plt+0x20d50>
  40722d:	mov    rax,QWORD PTR fs:0x28
  407236:	cmp    rax,QWORD PTR [rsp]
  40723a:	jne    40724e <isspace@plt+0x393e>
  40723c:	mov    rax,r14
  40723f:	add    rsp,0x8
  407243:	pop    rbx
  407244:	pop    r12
  407246:	pop    r13
  407248:	pop    r14
  40724a:	pop    r15
  40724c:	pop    rbp
  40724d:	ret    
  40724e:	call   403280 <__stack_chk_fail@plt>
  407253:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40725d:	nop    DWORD PTR [rax]
  407260:	push   rbp
  407261:	push   r15
  407263:	push   r14
  407265:	push   r13
  407267:	push   r12
  407269:	push   rbx
  40726a:	sub    rsp,0x18
  40726e:	mov    r13,rdx
  407271:	mov    r14,rsi
  407274:	mov    r15,rdi
  407277:	mov    rax,QWORD PTR fs:0x28
  407280:	mov    QWORD PTR [rsp+0x10],rax
  407285:	call   425640 <isspace@plt+0x21d30>
  40728a:	mov    r12,rax
  40728d:	mov    rdi,rax
  407290:	call   41ea70 <isspace@plt+0x1b160>
  407295:	cmp    eax,0x1
  407298:	jne    4072b0 <isspace@plt+0x39a0>
  40729a:	mov    rdi,r15
  40729d:	mov    rsi,r14
  4072a0:	mov    rdx,r13
  4072a3:	call   405840 <isspace@plt+0x1f30>
  4072a8:	mov    r14,rax
  4072ab:	jmp    40736b <isspace@plt+0x3a5b>
  4072b0:	mov    rdi,r12
  4072b3:	call   41efe0 <isspace@plt+0x1b6d0>
  4072b8:	mov    rbx,rax
  4072bb:	mov    rdi,r15
  4072be:	mov    esi,0x1
  4072c3:	call   4246a0 <isspace@plt+0x20d90>
  4072c8:	mov    QWORD PTR [rsp],rax
  4072cc:	mov    QWORD PTR [rsp+0x8],rdx
  4072d1:	mov    rdi,rsp
  4072d4:	call   424710 <isspace@plt+0x20e00>
  4072d9:	test   al,al
  4072db:	je     407356 <isspace@plt+0x3a46>
  4072dd:	mov    rbp,rsp
  4072e0:	cmp    DWORD PTR [r13+0x0],0x0
  4072e5:	jg     407313 <isspace@plt+0x3a03>
  4072e7:	nop    WORD PTR [rax+rax*1+0x0]
  4072f0:	mov    rdi,rbx
  4072f3:	call   41f020 <isspace@plt+0x1b710>
  4072f8:	mov    rbx,rax
  4072fb:	test   rax,rax
  4072fe:	je     407330 <isspace@plt+0x3a20>
  407300:	mov    rdi,rbp
  407303:	call   424710 <isspace@plt+0x20e00>
  407308:	test   al,al
  40730a:	je     407356 <isspace@plt+0x3a46>
  40730c:	cmp    DWORD PTR [r13+0x0],0x0
  407311:	jle    4072f0 <isspace@plt+0x39e0>
  407313:	mov    rdi,rbx
  407316:	call   41f080 <isspace@plt+0x1b770>
  40731b:	mov    rbx,rax
  40731e:	test   rax,rax
  407321:	jne    407300 <isspace@plt+0x39f0>
  407323:	mov    rdi,r12
  407326:	call   41efa0 <isspace@plt+0x1b690>
  40732b:	mov    rbx,rax
  40732e:	jmp    407300 <isspace@plt+0x39f0>
  407330:	mov    rdi,r12
  407333:	call   41efa0 <isspace@plt+0x1b690>
  407338:	test   rax,rax
  40733b:	je     407352 <isspace@plt+0x3a42>
  40733d:	nop    DWORD PTR [rax]
  407340:	mov    rbx,rax
  407343:	mov    rdi,rax
  407346:	call   41f080 <isspace@plt+0x1b770>
  40734b:	test   rax,rax
  40734e:	jne    407340 <isspace@plt+0x3a30>
  407350:	jmp    407300 <isspace@plt+0x39f0>
  407352:	xor    ebx,ebx
  407354:	jmp    407300 <isspace@plt+0x39f0>
  407356:	mov    rdi,rbx
  407359:	call   41ee50 <isspace@plt+0x1b540>
  40735e:	mov    rdi,r15
  407361:	mov    esi,0xffffffff
  407366:	call   424660 <isspace@plt+0x20d50>
  40736b:	mov    rax,QWORD PTR fs:0x28
  407374:	cmp    rax,QWORD PTR [rsp+0x10]
  407379:	jne    40738d <isspace@plt+0x3a7d>
  40737b:	mov    rax,r14
  40737e:	add    rsp,0x18
  407382:	pop    rbx
  407383:	pop    r12
  407385:	pop    r13
  407387:	pop    r14
  407389:	pop    r15
  40738b:	pop    rbp
  40738c:	ret    
  40738d:	call   403280 <__stack_chk_fail@plt>
  407392:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40739c:	nop    DWORD PTR [rax+0x0]
  4073a0:	push   rbp
  4073a1:	push   r15
  4073a3:	push   r14
  4073a5:	push   r13
  4073a7:	push   r12
  4073a9:	push   rbx
  4073aa:	sub    rsp,0xa8
  4073b1:	mov    QWORD PTR [rsp+0x28],rdx
  4073b6:	mov    QWORD PTR [rsp+0x18],rsi
  4073bb:	mov    rbx,rdi
  4073be:	mov    rax,QWORD PTR fs:0x28
  4073c7:	mov    QWORD PTR [rsp+0xa0],rax
  4073cf:	call   425600 <isspace@plt+0x21cf0>
  4073d4:	mov    QWORD PTR [rsp],rax
  4073d8:	mov    rdi,rbx
  4073db:	call   425640 <isspace@plt+0x21d30>
  4073e0:	mov    r14,rax
  4073e3:	mov    rdi,rax
  4073e6:	call   41ead0 <isspace@plt+0x1b1c0>
  4073eb:	mov    ebp,eax
  4073ed:	mov    DWORD PTR [rsp+0xc],eax
  4073f1:	cmp    eax,0x1
  4073f4:	jne    407400 <isspace@plt+0x3af0>
  4073f6:	mov    rdi,r14
  4073f9:	call   41ea70 <isspace@plt+0x1b160>
  4073fe:	mov    ebp,eax
  407400:	mov    QWORD PTR [rsp+0x10],rbx
  407405:	mov    rdi,rbx
  407408:	mov    esi,0x1
  40740d:	call   424330 <isspace@plt+0x20a20>
  407412:	mov    DWORD PTR [rsp+0x8],eax
  407416:	lea    rbx,[rsp+0x80]
  40741e:	mov    esi,0x18
  407423:	mov    rdi,rbx
  407426:	call   403a50 <isspace@plt+0x140>
  40742b:	movsxd rsi,ebp
  40742e:	mov    rdi,rbx
  407431:	call   403ad0 <isspace@plt+0x1c0>
  407436:	test   al,al
  407438:	je     4076ee <isspace@plt+0x3dde>
  40743e:	mov    rdi,r14
  407441:	call   41efa0 <isspace@plt+0x1b690>
  407446:	test   rax,rax
  407449:	je     4076d2 <isspace@plt+0x3dc2>
  40744f:	mov    rbp,rax
  407452:	movsxd r15,DWORD PTR [rsp+0x8]
  407457:	xor    r14d,r14d
  40745a:	mov    QWORD PTR [rsp+0x20],r15
  40745f:	jmp    40749d <isspace@plt+0x3b8d>
  407461:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40746b:	nop    DWORD PTR [rax+rax*1+0x0]
  407470:	lea    rdi,[rsp+0x80]
  407478:	call   403cd0 <isspace@plt+0x3c0>
  40747d:	mov    r15,QWORD PTR [rsp+0x20]
  407482:	mov    rbp,QWORD PTR [rsp+0x40]
  407487:	mov    r12,QWORD PTR [rsp+0x38]
  40748c:	mov    rax,QWORD PTR [rsp+0x30]
  407491:	mov    r14,rax
  407494:	test   r12,r12
  407497:	je     4076d2 <isspace@plt+0x3dc2>
  40749d:	mov    rdi,rbp
  4074a0:	call   41f080 <isspace@plt+0x1b770>
  4074a5:	mov    r12,rax
  4074a8:	mov    rdi,rbp
  4074ab:	call   41f7a0 <isspace@plt+0x1be90>
  4074b0:	mov    QWORD PTR [rsp+0x70],rax
  4074b5:	mov    QWORD PTR [rsp+0x78],rdx
  4074ba:	mov    QWORD PTR [rsp+0x58],rbp
  4074bf:	lea    rdi,[rsp+0x70]
  4074c4:	call   417020 <isspace@plt+0x13710>
  4074c9:	mov    rbx,rax
  4074cc:	mov    QWORD PTR [rsp+0x68],rax
  4074d1:	mov    rdi,rax
  4074d4:	call   4035d0 <malloc@plt>
  4074d9:	mov    QWORD PTR [rsp+0x60],rax
  4074de:	test   rax,rax
  4074e1:	je     407500 <isspace@plt+0x3bf0>
  4074e3:	mov    rsi,QWORD PTR [rsp+0x70]
  4074e8:	mov    rdi,QWORD PTR [rsp]
  4074ec:	mov    rdx,rbx
  4074ef:	mov    rcx,rax
  4074f2:	call   411130 <isspace@plt+0xd820>
  4074f7:	jmp    407502 <isspace@plt+0x3bf2>
  4074f9:	nop    DWORD PTR [rax+0x0]
  407500:	xor    eax,eax
  407502:	mov    QWORD PTR [rsp+0x68],rax
  407507:	lea    rdi,[rsp+0x80]
  40750f:	lea    rsi,[rsp+0x58]
  407514:	call   403d80 <isspace@plt+0x470>
  407519:	test   r14,r14
  40751c:	jne    407535 <isspace@plt+0x3c25>
  40751e:	mov    rdi,rbp
  407521:	call   41af10 <isspace@plt+0x17600>
  407526:	mov    rdi,QWORD PTR [rsp]
  40752a:	mov    rsi,rax
  40752d:	call   410bc0 <isspace@plt+0xd2b0>
  407532:	mov    r14,rax
  407535:	mov    rbp,r12
  407538:	test   r12,r12
  40753b:	je     407570 <isspace@plt+0x3c60>
  40753d:	mov    rdi,rbp
  407540:	call   41af10 <isspace@plt+0x17600>
  407545:	mov    rdi,QWORD PTR [rsp]
  407549:	mov    rsi,rax
  40754c:	call   410bc0 <isspace@plt+0xd2b0>
  407551:	cmp    DWORD PTR [rsp+0xc],0x2
  407556:	jl     407491 <isspace@plt+0x3b81>
  40755c:	cmp    r14,rax
  40755f:	jne    407572 <isspace@plt+0x3c62>
  407561:	jmp    407491 <isspace@plt+0x3b81>
  407566:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407570:	xor    eax,eax
  407572:	mov    QWORD PTR [rsp+0x30],rax
  407577:	mov    QWORD PTR [rsp+0x40],rbp
  40757c:	lea    rdi,[rsp+0x80]
  407584:	call   403fa0 <isspace@plt+0x690>
  407589:	mov    r14,rax
  40758c:	mov    rax,QWORD PTR [rsp+0x28]
  407591:	mov    ecx,DWORD PTR [rax]
  407593:	mov    rax,r15
  407596:	or     rax,r14
  407599:	shr    rax,0x20
  40759d:	mov    QWORD PTR [rsp+0x38],r12
  4075a2:	je     4075b0 <isspace@plt+0x3ca0>
  4075a4:	mov    rax,r15
  4075a7:	xor    edx,edx
  4075a9:	div    r14
  4075ac:	jmp    4075b9 <isspace@plt+0x3ca9>
  4075ae:	xchg   ax,ax
  4075b0:	mov    eax,DWORD PTR [rsp+0x8]
  4075b4:	xor    edx,edx
  4075b6:	div    r14d
  4075b9:	mov    r15,r14
  4075bc:	sub    r15,rdx
  4075bf:	test   ecx,ecx
  4075c1:	cmovg  r15,rdx
  4075c5:	test   r14,r14
  4075c8:	je     407470 <isspace@plt+0x3b60>
  4075ce:	xor    ebp,ebp
  4075d0:	jmp    4075ec <isspace@plt+0x3cdc>
  4075d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4075dc:	nop    DWORD PTR [rax+0x0]
  4075e0:	inc    rbp
  4075e3:	cmp    r14,rbp
  4075e6:	je     407470 <isspace@plt+0x3b60>
  4075ec:	lea    rax,[r15+rbp*1]
  4075f0:	mov    rcx,rax
  4075f3:	or     rcx,r14
  4075f6:	shr    rcx,0x20
  4075fa:	je     407610 <isspace@plt+0x3d00>
  4075fc:	xor    edx,edx
  4075fe:	div    r14
  407601:	mov    r13,rdx
  407604:	jmp    407618 <isspace@plt+0x3d08>
  407606:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407610:	xor    edx,edx
  407612:	div    r14d
  407615:	mov    r13d,edx
  407618:	lea    rbx,[rsp+0x80]
  407620:	mov    rdi,rbx
  407623:	mov    rsi,rbp
  407626:	call   403d30 <isspace@plt+0x420>
  40762b:	mov    r12,rax
  40762e:	mov    rdi,rbx
  407631:	mov    rsi,r13
  407634:	call   403d30 <isspace@plt+0x420>
  407639:	cmp    r12,rax
  40763c:	je     4075e0 <isspace@plt+0x3cd0>
  40763e:	test   r12,r12
  407641:	je     4075e0 <isspace@plt+0x3cd0>
  407643:	mov    r13,rax
  407646:	test   rax,rax
  407649:	je     4075e0 <isspace@plt+0x3cd0>
  40764b:	mov    rdi,QWORD PTR [r13+0x0]
  40764f:	call   41f7a0 <isspace@plt+0x1be90>
  407654:	mov    QWORD PTR [rsp+0x48],rax
  407659:	mov    QWORD PTR [rsp+0x50],rdx
  40765e:	lea    rdi,[rsp+0x48]
  407663:	call   416fc0 <isspace@plt+0x136b0>
  407668:	test   al,al
  40766a:	je     4075e0 <isspace@plt+0x3cd0>
  407670:	mov    rdi,QWORD PTR [rsp]
  407674:	lea    rsi,[rsp+0x48]
  407679:	call   410430 <isspace@plt+0xcb20>
  40767e:	test   al,al
  407680:	je     4075e0 <isspace@plt+0x3cd0>
  407686:	mov    rsi,QWORD PTR [rsp+0x48]
  40768b:	mov    rdx,QWORD PTR [r12+0x8]
  407690:	mov    rcx,QWORD PTR [r12+0x10]
  407695:	mov    rdi,QWORD PTR [rsp]
  407699:	call   40efe0 <isspace@plt+0xb6d0>
  40769e:	test   al,al
  4076a0:	je     4075e0 <isspace@plt+0x3cd0>
  4076a6:	mov    rax,QWORD PTR [r12+0x10]
  4076ab:	add    rax,QWORD PTR [rsp+0x48]
  4076b0:	mov    QWORD PTR [rsp+0x50],rax
  4076b5:	mov    rdi,QWORD PTR [r13+0x0]
  4076b9:	lea    rsi,[rsp+0x48]
  4076be:	call   41f850 <isspace@plt+0x1bf40>
  4076c3:	mov    rdi,QWORD PTR [r12+0x8]
  4076c8:	call   4030d0 <free@plt>
  4076cd:	jmp    4075e0 <isspace@plt+0x3cd0>
  4076d2:	lea    rdi,[rsp+0x80]
  4076da:	call   403b50 <isspace@plt+0x240>
  4076df:	mov    rdi,QWORD PTR [rsp+0x10]
  4076e4:	mov    esi,0xffffffff
  4076e9:	call   424660 <isspace@plt+0x20d50>
  4076ee:	mov    rax,QWORD PTR fs:0x28
  4076f7:	cmp    rax,QWORD PTR [rsp+0xa0]
  4076ff:	jne    407718 <isspace@plt+0x3e08>
  407701:	mov    rax,QWORD PTR [rsp+0x18]
  407706:	add    rsp,0xa8
  40770d:	pop    rbx
  40770e:	pop    r12
  407710:	pop    r13
  407712:	pop    r14
  407714:	pop    r15
  407716:	pop    rbp
  407717:	ret    
  407718:	call   403280 <__stack_chk_fail@plt>
  40771d:	nop    DWORD PTR [rax]
  407720:	push   rbp
  407721:	push   r15
  407723:	push   r14
  407725:	push   r13
  407727:	push   r12
  407729:	push   rbx
  40772a:	sub    rsp,0x28
  40772e:	mov    QWORD PTR [rsp],rsi
  407732:	mov    r15,rdi
  407735:	mov    rax,QWORD PTR fs:0x28
  40773e:	mov    QWORD PTR [rsp+0x20],rax
  407743:	call   425600 <isspace@plt+0x21cf0>
  407748:	mov    rbx,rax
  40774b:	mov    rdi,r15
  40774e:	call   425640 <isspace@plt+0x21d30>
  407753:	mov    rdi,rax
  407756:	call   41efa0 <isspace@plt+0x1b690>
  40775b:	test   rax,rax
  40775e:	je     40788c <isspace@plt+0x3f7c>
  407764:	mov    rbp,rax
  407767:	lea    r12,[rsp+0x10]
  40776c:	lea    r13,[rsp+0xf]
  407771:	jmp    407794 <isspace@plt+0x3e84>
  407773:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40777d:	nop    DWORD PTR [rax]
  407780:	mov    rsi,r12
  407783:	call   41f850 <isspace@plt+0x1bf40>
  407788:	mov    rbp,r14
  40778b:	test   r14,r14
  40778e:	je     40788c <isspace@plt+0x3f7c>
  407794:	mov    rdi,rbp
  407797:	call   41f080 <isspace@plt+0x1b770>
  40779c:	mov    r14,rax
  40779f:	mov    rdi,rbp
  4077a2:	call   41f7a0 <isspace@plt+0x1be90>
  4077a7:	mov    QWORD PTR [rsp+0x10],rax
  4077ac:	mov    QWORD PTR [rsp+0x18],rdx
  4077b1:	mov    rdi,r12
  4077b4:	call   416fc0 <isspace@plt+0x136b0>
  4077b9:	test   al,al
  4077bb:	je     407788 <isspace@plt+0x3e78>
  4077bd:	mov    rax,QWORD PTR [rsp+0x10]
  4077c2:	mov    rsi,QWORD PTR [rsp+0x18]
  4077c7:	cmp    rax,rsi
  4077ca:	jae    407817 <isspace@plt+0x3f07>
  4077cc:	nop    DWORD PTR [rax+0x0]
  4077d0:	dec    rsi
  4077d3:	mov    rdi,rbx
  4077d6:	mov    rdx,r13
  4077d9:	call   411060 <isspace@plt+0xd750>
  4077de:	test   al,al
  4077e0:	je     40780d <isspace@plt+0x3efd>
  4077e2:	call   4038f0 <__ctype_b_loc@plt>
  4077e7:	mov    rax,QWORD PTR [rax]
  4077ea:	movzx  ecx,BYTE PTR [rsp+0xf]
  4077ef:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  4077f4:	je     40780d <isspace@plt+0x3efd>
  4077f6:	mov    rax,QWORD PTR [rsp+0x10]
  4077fb:	mov    rsi,QWORD PTR [rsp+0x18]
  407800:	dec    rsi
  407803:	mov    QWORD PTR [rsp+0x18],rsi
  407808:	cmp    rax,rsi
  40780b:	jb     4077d0 <isspace@plt+0x3ec0>
  40780d:	mov    rax,QWORD PTR [rsp+0x10]
  407812:	mov    rsi,QWORD PTR [rsp+0x18]
  407817:	cmp    rax,rsi
  40781a:	ja     407864 <isspace@plt+0x3f54>
  40781c:	nop    DWORD PTR [rax+0x0]
  407820:	mov    rdi,rbx
  407823:	mov    rsi,rax
  407826:	mov    rdx,r13
  407829:	call   411060 <isspace@plt+0xd750>
  40782e:	test   al,al
  407830:	je     40785a <isspace@plt+0x3f4a>
  407832:	call   4038f0 <__ctype_b_loc@plt>
  407837:	mov    rax,QWORD PTR [rax]
  40783a:	movzx  ecx,BYTE PTR [rsp+0xf]
  40783f:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  407844:	je     40785a <isspace@plt+0x3f4a>
  407846:	mov    rax,QWORD PTR [rsp+0x10]
  40784b:	inc    rax
  40784e:	mov    QWORD PTR [rsp+0x10],rax
  407853:	cmp    rax,QWORD PTR [rsp+0x18]
  407858:	jbe    407820 <isspace@plt+0x3f10>
  40785a:	mov    rax,QWORD PTR [rsp+0x10]
  40785f:	mov    rsi,QWORD PTR [rsp+0x18]
  407864:	mov    rdi,rbp
  407867:	cmp    rax,rsi
  40786a:	jb     407780 <isspace@plt+0x3e70>
  407870:	call   41ece0 <isspace@plt+0x1b3d0>
  407875:	test   al,al
  407877:	jne    407788 <isspace@plt+0x3e78>
  40787d:	mov    rdi,r15
  407880:	xor    esi,esi
  407882:	call   426fe0 <isspace@plt+0x236d0>
  407887:	jmp    407788 <isspace@plt+0x3e78>
  40788c:	mov    rax,QWORD PTR fs:0x28
  407895:	cmp    rax,QWORD PTR [rsp+0x20]
  40789a:	jne    4078af <isspace@plt+0x3f9f>
  40789c:	mov    rax,QWORD PTR [rsp]
  4078a0:	add    rsp,0x28
  4078a4:	pop    rbx
  4078a5:	pop    r12
  4078a7:	pop    r13
  4078a9:	pop    r14
  4078ab:	pop    r15
  4078ad:	pop    rbp
  4078ae:	ret    
  4078af:	call   403280 <__stack_chk_fail@plt>
  4078b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4078be:	xchg   ax,ax
  4078c0:	push   rbp
  4078c1:	push   r15
  4078c3:	push   r14
  4078c5:	push   r13
  4078c7:	push   r12
  4078c9:	push   rbx
  4078ca:	sub    rsp,0x28
  4078ce:	mov    r14,rsi
  4078d1:	mov    rbx,rdi
  4078d4:	mov    rax,QWORD PTR fs:0x28
  4078dd:	mov    QWORD PTR [rsp+0x20],rax
  4078e2:	call   425680 <isspace@plt+0x21d70>
  4078e7:	mov    r15,rax
  4078ea:	mov    rdi,rbx
  4078ed:	call   425640 <isspace@plt+0x21d30>
  4078f2:	mov    r12,rax
  4078f5:	mov    rdi,rbx
  4078f8:	call   426480 <isspace@plt+0x22b70>
  4078fd:	mov    ebp,eax
  4078ff:	mov    r13,rsp
  407902:	mov    rdi,r13
  407905:	mov    rsi,r12
  407908:	call   41fc50 <isspace@plt+0x1c340>
  40790d:	mov    rdi,r15
  407910:	mov    esi,ebp
  407912:	mov    rdx,r13
  407915:	call   426630 <isspace@plt+0x22d20>
  40791a:	mov    rdi,r13
  40791d:	call   403b50 <isspace@plt+0x240>
  407922:	mov    rdi,rbx
  407925:	call   422dd0 <isspace@plt+0x1f4c0>
  40792a:	mov    rax,QWORD PTR fs:0x28
  407933:	cmp    rax,QWORD PTR [rsp+0x20]
  407938:	jne    40794c <isspace@plt+0x403c>
  40793a:	mov    rax,r14
  40793d:	add    rsp,0x28
  407941:	pop    rbx
  407942:	pop    r12
  407944:	pop    r13
  407946:	pop    r14
  407948:	pop    r15
  40794a:	pop    rbp
  40794b:	ret    
  40794c:	call   403280 <__stack_chk_fail@plt>
  407951:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40795b:	nop    DWORD PTR [rax+rax*1+0x0]
  407960:	push   rbp
  407961:	push   r15
  407963:	push   r14
  407965:	push   r13
  407967:	push   r12
  407969:	push   rbx
  40796a:	sub    rsp,0x28
  40796e:	mov    r14,rsi
  407971:	mov    rbx,rdi
  407974:	mov    rax,QWORD PTR fs:0x28
  40797d:	mov    QWORD PTR [rsp+0x20],rax
  407982:	call   425680 <isspace@plt+0x21d70>
  407987:	mov    r12,rax
  40798a:	mov    rdi,rbx
  40798d:	call   425640 <isspace@plt+0x21d30>
  407992:	mov    r15,rax
  407995:	mov    rdi,rbx
  407998:	call   426480 <isspace@plt+0x22b70>
  40799d:	mov    r13,rsp
  4079a0:	mov    rdi,r13
  4079a3:	mov    rsi,r12
  4079a6:	mov    edx,eax
  4079a8:	call   4264e0 <isspace@plt+0x22bd0>
  4079ad:	mov    rdi,rbx
  4079b0:	call   427180 <isspace@plt+0x23870>
  4079b5:	mov    ebp,eax
  4079b7:	or     ebp,0x1
  4079ba:	xor    edx,edx
  4079bc:	cmp    ebp,0x3
  4079bf:	sete   dl
  4079c2:	mov    rdi,r15
  4079c5:	mov    rsi,r13
  4079c8:	call   41fa90 <isspace@plt+0x1c180>
  4079cd:	cmp    ebp,0x3
  4079d0:	je     4079da <isspace@plt+0x40ca>
  4079d2:	mov    rdi,r15
  4079d5:	call   41b340 <isspace@plt+0x17a30>
  4079da:	mov    rdi,rsp
  4079dd:	call   403b50 <isspace@plt+0x240>
  4079e2:	mov    rdi,rbx
  4079e5:	call   422dd0 <isspace@plt+0x1f4c0>
  4079ea:	mov    rax,QWORD PTR fs:0x28
  4079f3:	cmp    rax,QWORD PTR [rsp+0x20]
  4079f8:	jne    407a0c <isspace@plt+0x40fc>
  4079fa:	mov    rax,r14
  4079fd:	add    rsp,0x28
  407a01:	pop    rbx
  407a02:	pop    r12
  407a04:	pop    r13
  407a06:	pop    r14
  407a08:	pop    r15
  407a0a:	pop    rbp
  407a0b:	ret    
  407a0c:	call   403280 <__stack_chk_fail@plt>
  407a11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407a1b:	nop    DWORD PTR [rax+rax*1+0x0]
  407a20:	push   rbp
  407a21:	push   r15
  407a23:	push   r14
  407a25:	push   r13
  407a27:	push   r12
  407a29:	push   rbx
  407a2a:	sub    rsp,0x98
  407a31:	mov    QWORD PTR [rsp+0x18],rsi
  407a36:	mov    rbp,rdi
  407a39:	mov    rax,QWORD PTR fs:0x28
  407a42:	mov    QWORD PTR [rsp+0x90],rax
  407a4a:	call   425680 <isspace@plt+0x21d70>
  407a4f:	mov    r14,rax
  407a52:	mov    rdi,rbp
  407a55:	call   425640 <isspace@plt+0x21d30>
  407a5a:	mov    rbx,rax
  407a5d:	mov    QWORD PTR [rsp+0x10],rbp
  407a62:	mov    rdi,rbp
  407a65:	call   426480 <isspace@plt+0x22b70>
  407a6a:	lea    rbp,[rsp+0x70]
  407a6f:	mov    rdi,rbp
  407a72:	mov    rsi,r14
  407a75:	mov    edx,eax
  407a77:	call   4264e0 <isspace@plt+0x22bd0>
  407a7c:	lea    r14,[rsp+0x50]
  407a81:	mov    rdi,r14
  407a84:	mov    QWORD PTR [rsp+0x8],rbx
  407a89:	mov    rsi,rbx
  407a8c:	call   41fc50 <isspace@plt+0x1c340>
  407a91:	lea    rdi,[rsp+0x30]
  407a96:	mov    rsi,rbp
  407a99:	call   403a90 <isspace@plt+0x180>
  407a9e:	mov    rdi,rbp
  407aa1:	xor    esi,esi
  407aa3:	call   403d30 <isspace@plt+0x420>
  407aa8:	mov    rbp,rax
  407aab:	mov    rdi,r14
  407aae:	xor    esi,esi
  407ab0:	call   403d30 <isspace@plt+0x420>
  407ab5:	mov    r12,rax
  407ab8:	call   417080 <isspace@plt+0x13770>
  407abd:	mov    QWORD PTR [rsp+0x20],rax
  407ac2:	mov    QWORD PTR [rsp+0x28],rdx
  407ac7:	test   rbp,rbp
  407aca:	setne  r13b
  407ace:	test   r12,r12
  407ad1:	setne  r14b
  407ad5:	mov    rax,r12
  407ad8:	or     rax,rbp
  407adb:	je     407c44 <isspace@plt+0x4334>
  407ae1:	xor    ebx,ebx
  407ae3:	xor    r15d,r15d
  407ae6:	test   r13b,0x1
  407aea:	je     407b60 <isspace@plt+0x4250>
  407aec:	jmp    407b31 <isspace@plt+0x4221>
  407aee:	xchg   ax,ax
  407af0:	vmovups xmm0,XMMWORD PTR [r12]
  407af6:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  407afc:	inc    r15
  407aff:	lea    rdi,[rsp+0x50]
  407b04:	mov    rsi,r15
  407b07:	call   403d30 <isspace@plt+0x420>
  407b0c:	mov    r12,rax
  407b0f:	xor    ebp,ebp
  407b11:	test   rbp,rbp
  407b14:	setne  r13b
  407b18:	test   r12,r12
  407b1b:	setne  r14b
  407b1f:	mov    rax,r12
  407b22:	or     rax,rbp
  407b25:	je     407c44 <isspace@plt+0x4334>
  407b2b:	test   r13b,0x1
  407b2f:	je     407b60 <isspace@plt+0x4250>
  407b31:	mov    rdi,rbp
  407b34:	lea    rsi,[rsp+0x20]
  407b39:	call   4171d0 <isspace@plt+0x138c0>
  407b3e:	test   al,al
  407b40:	je     407b60 <isspace@plt+0x4250>
  407b42:	mov    rdi,rbp
  407b45:	lea    rsi,[rsp+0x20]
  407b4a:	call   4170c0 <isspace@plt+0x137b0>
  407b4f:	mov    QWORD PTR [rsp+0x20],rax
  407b54:	mov    QWORD PTR [rsp+0x28],rdx
  407b59:	jmp    407be2 <isspace@plt+0x42d2>
  407b5e:	xchg   ax,ax
  407b60:	test   r14b,0x1
  407b64:	je     407ba0 <isspace@plt+0x4290>
  407b66:	mov    rdi,r12
  407b69:	lea    rsi,[rsp+0x20]
  407b6e:	call   4171d0 <isspace@plt+0x138c0>
  407b73:	test   al,al
  407b75:	je     407ba0 <isspace@plt+0x4290>
  407b77:	mov    rdi,r12
  407b7a:	lea    rsi,[rsp+0x20]
  407b7f:	call   4170c0 <isspace@plt+0x137b0>
  407b84:	mov    QWORD PTR [rsp+0x20],rax
  407b89:	mov    QWORD PTR [rsp+0x28],rdx
  407b8e:	jmp    407c2c <isspace@plt+0x431c>
  407b93:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407b9d:	nop    DWORD PTR [rax]
  407ba0:	lea    rdi,[rsp+0x20]
  407ba5:	call   416fc0 <isspace@plt+0x136b0>
  407baa:	test   al,al
  407bac:	je     407bbd <isspace@plt+0x42ad>
  407bae:	lea    rdi,[rsp+0x30]
  407bb3:	lea    rsi,[rsp+0x20]
  407bb8:	call   403d80 <isspace@plt+0x470>
  407bbd:	test   r13b,0x1
  407bc1:	je     407af0 <isspace@plt+0x41e0>
  407bc7:	test   r14b,0x1
  407bcb:	je     407bfa <isspace@plt+0x42ea>
  407bcd:	mov    rax,QWORD PTR [rbp+0x0]
  407bd1:	cmp    rax,QWORD PTR [r12]
  407bd5:	jae    407c20 <isspace@plt+0x4310>
  407bd7:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  407bdc:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  407be2:	inc    rbx
  407be5:	lea    rdi,[rsp+0x70]
  407bea:	mov    rsi,rbx
  407bed:	call   403d30 <isspace@plt+0x420>
  407bf2:	mov    rbp,rax
  407bf5:	jmp    407b11 <isspace@plt+0x4201>
  407bfa:	vmovups xmm0,XMMWORD PTR [rbp+0x0]
  407bff:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  407c05:	inc    rbx
  407c08:	lea    rdi,[rsp+0x70]
  407c0d:	mov    rsi,rbx
  407c10:	call   403d30 <isspace@plt+0x420>
  407c15:	mov    rbp,rax
  407c18:	xor    r12d,r12d
  407c1b:	jmp    407b11 <isspace@plt+0x4201>
  407c20:	vmovups xmm0,XMMWORD PTR [r12]
  407c26:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  407c2c:	inc    r15
  407c2f:	lea    rdi,[rsp+0x50]
  407c34:	mov    rsi,r15
  407c37:	call   403d30 <isspace@plt+0x420>
  407c3c:	mov    r12,rax
  407c3f:	jmp    407b11 <isspace@plt+0x4201>
  407c44:	lea    rdi,[rsp+0x20]
  407c49:	call   416fc0 <isspace@plt+0x136b0>
  407c4e:	test   al,al
  407c50:	je     407c61 <isspace@plt+0x4351>
  407c52:	lea    rdi,[rsp+0x30]
  407c57:	lea    rsi,[rsp+0x20]
  407c5c:	call   403d80 <isspace@plt+0x470>
  407c61:	mov    r14,QWORD PTR [rsp+0x10]
  407c66:	mov    rdi,r14
  407c69:	call   427180 <isspace@plt+0x23870>
  407c6e:	mov    ebx,eax
  407c70:	or     ebx,0x1
  407c73:	xor    edx,edx
  407c75:	cmp    ebx,0x3
  407c78:	sete   dl
  407c7b:	lea    rsi,[rsp+0x30]
  407c80:	mov    rbp,QWORD PTR [rsp+0x8]
  407c85:	mov    rdi,rbp
  407c88:	call   41fa90 <isspace@plt+0x1c180>
  407c8d:	cmp    ebx,0x3
  407c90:	je     407c9a <isspace@plt+0x438a>
  407c92:	mov    rdi,rbp
  407c95:	call   41b340 <isspace@plt+0x17a30>
  407c9a:	mov    rdi,r14
  407c9d:	call   422dd0 <isspace@plt+0x1f4c0>
  407ca2:	lea    rdi,[rsp+0x70]
  407ca7:	call   403b50 <isspace@plt+0x240>
  407cac:	lea    rdi,[rsp+0x50]
  407cb1:	call   403b50 <isspace@plt+0x240>
  407cb6:	lea    rdi,[rsp+0x30]
  407cbb:	call   403b50 <isspace@plt+0x240>
  407cc0:	mov    rax,QWORD PTR fs:0x28
  407cc9:	cmp    rax,QWORD PTR [rsp+0x90]
  407cd1:	jne    407cea <isspace@plt+0x43da>
  407cd3:	mov    rax,QWORD PTR [rsp+0x18]
  407cd8:	add    rsp,0x98
  407cdf:	pop    rbx
  407ce0:	pop    r12
  407ce2:	pop    r13
  407ce4:	pop    r14
  407ce6:	pop    r15
  407ce8:	pop    rbp
  407ce9:	ret    
  407cea:	call   403280 <__stack_chk_fail@plt>
  407cef:	nop
  407cf0:	push   rbp
  407cf1:	push   r15
  407cf3:	push   r14
  407cf5:	push   r13
  407cf7:	push   r12
  407cf9:	push   rbx
  407cfa:	sub    rsp,0x78
  407cfe:	mov    QWORD PTR [rsp+0x8],rsi
  407d03:	mov    rbx,rdi
  407d06:	mov    rax,QWORD PTR fs:0x28
  407d0f:	mov    QWORD PTR [rsp+0x70],rax
  407d14:	call   425680 <isspace@plt+0x21d70>
  407d19:	mov    r12,rax
  407d1c:	mov    rdi,rbx
  407d1f:	call   425640 <isspace@plt+0x21d30>
  407d24:	mov    r15,rax
  407d27:	mov    rdi,rbx
  407d2a:	call   426480 <isspace@plt+0x22b70>
  407d2f:	lea    r13,[rsp+0x50]
  407d34:	mov    rdi,r13
  407d37:	mov    rsi,r12
  407d3a:	mov    edx,eax
  407d3c:	call   4264e0 <isspace@plt+0x22bd0>
  407d41:	lea    r12,[rsp+0x30]
  407d46:	mov    rdi,r12
  407d49:	mov    rsi,r15
  407d4c:	call   41fc50 <isspace@plt+0x1c340>
  407d51:	lea    r14,[rsp+0x10]
  407d56:	mov    rdi,r14
  407d59:	mov    rsi,r13
  407d5c:	call   403a90 <isspace@plt+0x180>
  407d61:	mov    rdi,r14
  407d64:	mov    rsi,r13
  407d67:	mov    rdx,r12
  407d6a:	call   408320 <isspace@plt+0x4a10>
  407d6f:	mov    rdi,rbx
  407d72:	call   427180 <isspace@plt+0x23870>
  407d77:	mov    ebp,eax
  407d79:	or     ebp,0x1
  407d7c:	xor    edx,edx
  407d7e:	cmp    ebp,0x3
  407d81:	sete   dl
  407d84:	mov    rdi,r15
  407d87:	mov    rsi,r14
  407d8a:	call   41fa90 <isspace@plt+0x1c180>
  407d8f:	cmp    ebp,0x3
  407d92:	je     407d9c <isspace@plt+0x448c>
  407d94:	mov    rdi,r15
  407d97:	call   41b340 <isspace@plt+0x17a30>
  407d9c:	mov    rdi,rbx
  407d9f:	call   422dd0 <isspace@plt+0x1f4c0>
  407da4:	lea    rdi,[rsp+0x50]
  407da9:	call   403b50 <isspace@plt+0x240>
  407dae:	lea    rdi,[rsp+0x30]
  407db3:	call   403b50 <isspace@plt+0x240>
  407db8:	lea    rdi,[rsp+0x10]
  407dbd:	call   403b50 <isspace@plt+0x240>
  407dc2:	mov    rax,QWORD PTR fs:0x28
  407dcb:	cmp    rax,QWORD PTR [rsp+0x70]
  407dd0:	jne    407de6 <isspace@plt+0x44d6>
  407dd2:	mov    rax,QWORD PTR [rsp+0x8]
  407dd7:	add    rsp,0x78
  407ddb:	pop    rbx
  407ddc:	pop    r12
  407dde:	pop    r13
  407de0:	pop    r14
  407de2:	pop    r15
  407de4:	pop    rbp
  407de5:	ret    
  407de6:	call   403280 <__stack_chk_fail@plt>
  407deb:	nop    DWORD PTR [rax+rax*1+0x0]
  407df0:	push   r15
  407df2:	push   r14
  407df4:	push   r13
  407df6:	push   r12
  407df8:	push   rbx
  407df9:	sub    rsp,0x60
  407dfd:	mov    r14,rsi
  407e00:	mov    r12,rdi
  407e03:	mov    rax,QWORD PTR fs:0x28
  407e0c:	mov    QWORD PTR [rsp+0x58],rax
  407e11:	call   425600 <isspace@plt+0x21cf0>
  407e16:	mov    rbx,rax
  407e19:	mov    rdi,r12
  407e1c:	call   425640 <isspace@plt+0x21d30>
  407e21:	mov    r15,rax
  407e24:	mov    rdi,rbx
  407e27:	xor    esi,esi
  407e29:	call   415850 <isspace@plt+0x11f40>
  407e2e:	mov    QWORD PTR [rsp+0x48],rax
  407e33:	mov    QWORD PTR [rsp+0x50],rdx
  407e38:	lea    rbx,[rsp+0x28]
  407e3d:	mov    rdi,rbx
  407e40:	mov    rsi,r15
  407e43:	call   41fc50 <isspace@plt+0x1c340>
  407e48:	lea    r13,[rsp+0x8]
  407e4d:	mov    rdi,r13
  407e50:	mov    rsi,rbx
  407e53:	call   403a90 <isspace@plt+0x180>
  407e58:	lea    rdx,[rsp+0x48]
  407e5d:	mov    rdi,r13
  407e60:	mov    rsi,rbx
  407e63:	call   408420 <isspace@plt+0x4b10>
  407e68:	mov    rdi,r12
  407e6b:	call   427180 <isspace@plt+0x23870>
  407e70:	mov    ebx,eax
  407e72:	or     ebx,0x1
  407e75:	xor    edx,edx
  407e77:	cmp    ebx,0x3
  407e7a:	sete   dl
  407e7d:	mov    rdi,r15
  407e80:	mov    rsi,r13
  407e83:	call   41fa90 <isspace@plt+0x1c180>
  407e88:	cmp    ebx,0x3
  407e8b:	je     407e95 <isspace@plt+0x4585>
  407e8d:	mov    rdi,r15
  407e90:	call   41b340 <isspace@plt+0x17a30>
  407e95:	lea    rdi,[rsp+0x28]
  407e9a:	call   403b50 <isspace@plt+0x240>
  407e9f:	lea    rdi,[rsp+0x8]
  407ea4:	call   403b50 <isspace@plt+0x240>
  407ea9:	mov    rax,QWORD PTR fs:0x28
  407eb2:	cmp    rax,QWORD PTR [rsp+0x58]
  407eb7:	jne    407eca <isspace@plt+0x45ba>
  407eb9:	mov    rax,r14
  407ebc:	add    rsp,0x60
  407ec0:	pop    rbx
  407ec1:	pop    r12
  407ec3:	pop    r13
  407ec5:	pop    r14
  407ec7:	pop    r15
  407ec9:	ret    
  407eca:	call   403280 <__stack_chk_fail@plt>
  407ecf:	nop
  407ed0:	push   rbp
  407ed1:	push   r15
  407ed3:	push   r14
  407ed5:	push   r13
  407ed7:	push   r12
  407ed9:	push   rbx
  407eda:	sub    rsp,0xa8
  407ee1:	mov    QWORD PTR [rsp+0x8],rsi
  407ee6:	mov    rbx,rdi
  407ee9:	mov    rax,QWORD PTR fs:0x28
  407ef2:	mov    QWORD PTR [rsp+0xa0],rax
  407efa:	call   425600 <isspace@plt+0x21cf0>
  407eff:	mov    QWORD PTR [rsp],rax
  407f03:	mov    rdi,rbx
  407f06:	call   425680 <isspace@plt+0x21d70>
  407f0b:	mov    r12,rax
  407f0e:	mov    rdi,rbx
  407f11:	call   425640 <isspace@plt+0x21d30>
  407f16:	mov    r15,rax
  407f19:	mov    rdi,rbx
  407f1c:	call   426480 <isspace@plt+0x22b70>
  407f21:	mov    ebp,eax
  407f23:	lea    r13,[rsp+0x80]
  407f2b:	mov    rdi,r13
  407f2e:	mov    rsi,r15
  407f31:	call   41fc50 <isspace@plt+0x1c340>
  407f36:	lea    r14,[rsp+0x60]
  407f3b:	mov    rdi,r14
  407f3e:	mov    rsi,r12
  407f41:	mov    edx,ebp
  407f43:	call   4264e0 <isspace@plt+0x22bd0>
  407f48:	lea    r12,[rsp+0x40]
  407f4d:	mov    rdi,r12
  407f50:	mov    rsi,r13
  407f53:	call   403a90 <isspace@plt+0x180>
  407f58:	lea    rbp,[rsp+0x20]
  407f5d:	mov    rdi,rbp
  407f60:	mov    rsi,r14
  407f63:	call   403a90 <isspace@plt+0x180>
  407f68:	mov    rdi,QWORD PTR [rsp]
  407f6c:	xor    esi,esi
  407f6e:	call   415850 <isspace@plt+0x11f40>
  407f73:	mov    QWORD PTR [rsp+0x10],rax
  407f78:	mov    QWORD PTR [rsp+0x18],rdx
  407f7d:	lea    rdx,[rsp+0x10]
  407f82:	mov    rdi,rbp
  407f85:	mov    rsi,r14
  407f88:	call   408420 <isspace@plt+0x4b10>
  407f8d:	mov    rdi,r12
  407f90:	mov    rsi,r13
  407f93:	mov    rdx,rbp
  407f96:	call   408320 <isspace@plt+0x4a10>
  407f9b:	mov    rdi,rbx
  407f9e:	call   427180 <isspace@plt+0x23870>
  407fa3:	mov    ebp,eax
  407fa5:	or     ebp,0x1
  407fa8:	xor    edx,edx
  407faa:	cmp    ebp,0x3
  407fad:	sete   dl
  407fb0:	mov    rdi,r15
  407fb3:	mov    rsi,r12
  407fb6:	call   41fa90 <isspace@plt+0x1c180>
  407fbb:	cmp    ebp,0x3
  407fbe:	je     407fc8 <isspace@plt+0x46b8>
  407fc0:	mov    rdi,r15
  407fc3:	call   41b340 <isspace@plt+0x17a30>
  407fc8:	mov    rdi,rbx
  407fcb:	call   422dd0 <isspace@plt+0x1f4c0>
  407fd0:	lea    rdi,[rsp+0x80]
  407fd8:	call   403b50 <isspace@plt+0x240>
  407fdd:	lea    rdi,[rsp+0x60]
  407fe2:	call   403b50 <isspace@plt+0x240>
  407fe7:	lea    rdi,[rsp+0x20]
  407fec:	call   403b50 <isspace@plt+0x240>
  407ff1:	lea    rdi,[rsp+0x40]
  407ff6:	call   403b50 <isspace@plt+0x240>
  407ffb:	mov    rax,QWORD PTR fs:0x28
  408004:	cmp    rax,QWORD PTR [rsp+0xa0]
  40800c:	jne    408025 <isspace@plt+0x4715>
  40800e:	mov    rax,QWORD PTR [rsp+0x8]
  408013:	add    rsp,0xa8
  40801a:	pop    rbx
  40801b:	pop    r12
  40801d:	pop    r13
  40801f:	pop    r14
  408021:	pop    r15
  408023:	pop    rbp
  408024:	ret    
  408025:	call   403280 <__stack_chk_fail@plt>
  40802a:	nop    WORD PTR [rax+rax*1+0x0]
  408030:	push   rbx
  408031:	sub    rsp,0x10
  408035:	mov    rbx,rsi
  408038:	mov    rax,QWORD PTR fs:0x28
  408041:	mov    QWORD PTR [rsp+0x8],rax
  408046:	mov    esi,DWORD PTR [rdx]
  408048:	call   42aa00 <isspace@plt+0x270f0>
  40804d:	mov    rax,QWORD PTR fs:0x28
  408056:	cmp    rax,QWORD PTR [rsp+0x8]
  40805b:	jne    408066 <isspace@plt+0x4756>
  40805d:	mov    rax,rbx
  408060:	add    rsp,0x10
  408064:	pop    rbx
  408065:	ret    
  408066:	call   403280 <__stack_chk_fail@plt>
  40806b:	nop    DWORD PTR [rax+rax*1+0x0]
  408070:	push   rbp
  408071:	push   r15
  408073:	push   r14
  408075:	push   r13
  408077:	push   r12
  408079:	push   rbx
  40807a:	sub    rsp,0x88
  408081:	mov    QWORD PTR [rsp+0x28],rdx
  408086:	mov    r14,rsi
  408089:	mov    rbp,rdi
  40808c:	mov    rax,QWORD PTR fs:0x28
  408095:	mov    QWORD PTR [rsp+0x80],rax
  40809d:	call   425640 <isspace@plt+0x21d30>
  4080a2:	mov    rbx,rax
  4080a5:	mov    rdi,rbp
  4080a8:	call   425600 <isspace@plt+0x21cf0>
  4080ad:	mov    r15,rax
  4080b0:	mov    rdi,rbx
  4080b3:	call   41e510 <isspace@plt+0x1ac00>
  4080b8:	mov    r13,rax
  4080bb:	mov    rdi,r15
  4080be:	mov    rsi,rax
  4080c1:	call   412d10 <isspace@plt+0xf400>
  4080c6:	mov    rbx,rax
  4080c9:	mov    rdx,rax
  4080cc:	sub    rdx,r13
  4080cf:	mov    rdi,r15
  4080d2:	mov    rsi,r13
  4080d5:	call   411210 <isspace@plt+0xd900>
  4080da:	test   rax,rax
  4080dd:	je     4082bd <isspace@plt+0x49ad>
  4080e3:	mov    QWORD PTR [rsp+0x10],rax
  4080e8:	mov    QWORD PTR [rsp+0x8],rbp
  4080ed:	mov    QWORD PTR [rsp+0x18],r14
  4080f2:	lea    rdi,[rsp+0x68]
  4080f7:	call   404230 <isspace@plt+0x920>
  4080fc:	mov    QWORD PTR [rsp+0x60],0x0
  408105:	lea    rdi,[rsp+0x38]
  40810a:	mov    rsi,r15
  40810d:	mov    rdx,r13
  408110:	call   410570 <isspace@plt+0xcc60>
  408115:	cmp    QWORD PTR [rsp+0x58],rbx
  40811a:	jae    40826f <isspace@plt+0x495f>
  408120:	lea    r15,[rsp+0x68]
  408125:	lea    r14,[rip+0x269fd]        # 42eb29 <isspace@plt+0x2b219>
  40812c:	mov    r12,QWORD PTR [rsp+0x10]
  408131:	mov    QWORD PTR [rsp+0x20],rbx
  408136:	jmp    408168 <isspace@plt+0x4858>
  408138:	nop    DWORD PTR [rax+rax*1+0x0]
  408140:	mov    edx,DWORD PTR [rsp+0x34]
  408144:	mov    rdi,r15
  408147:	lea    rsi,[rip+0x269d3]        # 42eb21 <isspace@plt+0x2b211>
  40814e:	xor    eax,eax
  408150:	call   404a50 <isspace@plt+0x1140>
  408155:	add    r12,rbp
  408158:	mov    r13,QWORD PTR [rsp+0x58]
  40815d:	cmp    r13,QWORD PTR [rsp+0x20]
  408162:	jae    40826f <isspace@plt+0x495f>
  408168:	lea    rdi,[rsp+0x38]
  40816d:	xor    esi,esi
  40816f:	call   412730 <isspace@plt+0xee20>
  408174:	test   al,al
  408176:	je     408291 <isspace@plt+0x4981>
  40817c:	mov    rbp,QWORD PTR [rsp+0x58]
  408181:	sub    rbp,r13
  408184:	mov    DWORD PTR [rsp+0x34],0xfffd
  40818c:	lea    rdi,[rsp+0x34]
  408191:	mov    rsi,r12
  408194:	mov    rdx,rbp
  408197:	lea    rcx,[rsp+0x60]
  40819c:	call   4032b0 <mbrtowc@plt>
  4081a1:	cmp    rax,0xfffffffffffffffd
  4081a5:	ja     4081c0 <isspace@plt+0x48b0>
  4081a7:	mov    edi,DWORD PTR [rsp+0x34]
  4081ab:	test   edi,edi
  4081ad:	je     4081c0 <isspace@plt+0x48b0>
  4081af:	call   403590 <wcwidth@plt>
  4081b4:	test   eax,eax
  4081b6:	sete   r13b
  4081ba:	jmp    4081c3 <isspace@plt+0x48b3>
  4081bc:	nop    DWORD PTR [rax+0x0]
  4081c0:	xor    r13d,r13d
  4081c3:	movzx  ebx,BYTE PTR [r12]
  4081c8:	test   bl,bl
  4081ca:	js     408200 <isspace@plt+0x48f0>
  4081cc:	call   4038f0 <__ctype_b_loc@plt>
  4081d1:	mov    rax,QWORD PTR [rax]
  4081d4:	test   BYTE PTR [rax+rbx*2+0x1],0x40
  4081d9:	jne    408200 <isspace@plt+0x48f0>
  4081db:	mov    edx,ebx
  4081dd:	add    edx,0x40
  4081e0:	cmp    bl,0x7f
  4081e3:	mov    eax,0x3f
  4081e8:	cmove  edx,eax
  4081eb:	mov    rdi,r15
  4081ee:	lea    rsi,[rip+0x2691b]        # 42eb10 <isspace@plt+0x2b200>
  4081f5:	xor    eax,eax
  4081f7:	call   404a50 <isspace@plt+0x1140>
  4081fc:	jmp    40822b <isspace@plt+0x491b>
  4081fe:	xchg   ax,ax
  408200:	test   r13b,r13b
  408203:	lea    rdx,[rip+0x28889]        # 430a93 <isspace@plt+0x2d183>
  40820a:	lea    rax,[rip+0x27b04]        # 42fd15 <isspace@plt+0x2c405>
  408211:	cmovne rdx,rax
  408215:	mov    rdi,r15
  408218:	lea    rsi,[rip+0x268f8]        # 42eb17 <isspace@plt+0x2b207>
  40821f:	mov    ecx,ebp
  408221:	mov    r8,r12
  408224:	xor    eax,eax
  408226:	call   404a50 <isspace@plt+0x1140>
  40822b:	mov    rax,QWORD PTR [rsp+0x28]
  408230:	cmp    DWORD PTR [rax],0xa8
  408236:	je     408140 <isspace@plt+0x4830>
  40823c:	test   rbp,rbp
  40823f:	je     408155 <isspace@plt+0x4845>
  408245:	xor    ebx,ebx
  408247:	nop    WORD PTR [rax+rax*1+0x0]
  408250:	movzx  edx,BYTE PTR [r12+rbx*1]
  408255:	mov    rdi,r15
  408258:	mov    rsi,r14
  40825b:	xor    eax,eax
  40825d:	call   404a50 <isspace@plt+0x1140>
  408262:	inc    rbx
  408265:	cmp    rbp,rbx
  408268:	jne    408250 <isspace@plt+0x4940>
  40826a:	jmp    408155 <isspace@plt+0x4845>
  40826f:	lea    rdi,[rsp+0x68]
  408274:	call   404da0 <isspace@plt+0x1490>
  408279:	lea    rsi,[rip+0x277ea]        # 42fa6a <isspace@plt+0x2c15a>
  408280:	mov    rdi,QWORD PTR [rsp+0x8]
  408285:	mov    rdx,rax
  408288:	xor    eax,eax
  40828a:	call   4299f0 <isspace@plt+0x260e0>
  40828f:	jmp    4082a4 <isspace@plt+0x4994>
  408291:	lea    rsi,[rip+0x2685d]        # 42eaf5 <isspace@plt+0x2b1e5>
  408298:	mov    rdi,QWORD PTR [rsp+0x8]
  40829d:	xor    eax,eax
  40829f:	call   4299f0 <isspace@plt+0x260e0>
  4082a4:	mov    rdi,QWORD PTR [rsp+0x10]
  4082a9:	call   4030d0 <free@plt>
  4082ae:	lea    rdi,[rsp+0x68]
  4082b3:	call   404540 <isspace@plt+0xc30>
  4082b8:	mov    r14,QWORD PTR [rsp+0x18]
  4082bd:	mov    rax,QWORD PTR fs:0x28
  4082c6:	cmp    rax,QWORD PTR [rsp+0x80]
  4082ce:	jne    4082e5 <isspace@plt+0x49d5>
  4082d0:	mov    rax,r14
  4082d3:	add    rsp,0x88
  4082da:	pop    rbx
  4082db:	pop    r12
  4082dd:	pop    r13
  4082df:	pop    r14
  4082e1:	pop    r15
  4082e3:	pop    rbp
  4082e4:	ret    
  4082e5:	call   403280 <__stack_chk_fail@plt>
  4082ea:	nop    WORD PTR [rax+rax*1+0x0]
  4082f0:	push   rax
  4082f1:	mov    rcx,QWORD PTR fs:0x28
  4082fa:	mov    QWORD PTR [rsp],rcx
  4082fe:	mov    rcx,QWORD PTR fs:0x28
  408307:	cmp    rcx,QWORD PTR [rsp]
  40830b:	jne    408312 <isspace@plt+0x4a02>
  40830d:	mov    rax,rsi
  408310:	pop    rcx
  408311:	ret    
  408312:	call   403280 <__stack_chk_fail@plt>
  408317:	nop    WORD PTR [rax+rax*1+0x0]
  408320:	push   rbp
  408321:	push   r15
  408323:	push   r14
  408325:	push   r13
  408327:	push   r12
  408329:	push   rbx
  40832a:	sub    rsp,0x28
  40832e:	mov    r14,rdx
  408331:	mov    r12,rsi
  408334:	mov    QWORD PTR [rsp+0x8],rdi
  408339:	mov    rax,QWORD PTR fs:0x28
  408342:	mov    QWORD PTR [rsp+0x20],rax
  408347:	mov    rdi,rsi
  40834a:	xor    esi,esi
  40834c:	call   403d30 <isspace@plt+0x420>
  408351:	mov    r13,rax
  408354:	mov    rdi,r14
  408357:	xor    esi,esi
  408359:	call   403d30 <isspace@plt+0x420>
  40835e:	test   r13,r13
  408361:	je     4083f6 <isspace@plt+0x4ae6>
  408367:	mov    rbx,rax
  40836a:	test   rax,rax
  40836d:	je     4083f6 <isspace@plt+0x4ae6>
  408373:	xor    ebp,ebp
  408375:	xor    r15d,r15d
  408378:	nop    DWORD PTR [rax+rax*1+0x0]
  408380:	mov    rdi,r13
  408383:	mov    rsi,rbx
  408386:	call   4171d0 <isspace@plt+0x138c0>
  40838b:	test   al,al
  40838d:	je     4083b3 <isspace@plt+0x4aa3>
  40838f:	mov    rdi,r13
  408392:	mov    rsi,rbx
  408395:	call   417130 <isspace@plt+0x13820>
  40839a:	mov    QWORD PTR [rsp+0x10],rax
  40839f:	mov    QWORD PTR [rsp+0x18],rdx
  4083a4:	mov    rdi,QWORD PTR [rsp+0x8]
  4083a9:	lea    rsi,[rsp+0x10]
  4083ae:	call   403d80 <isspace@plt+0x470>
  4083b3:	mov    rax,QWORD PTR [r13+0x8]
  4083b7:	cmp    rax,QWORD PTR [rbx+0x8]
  4083bb:	jae    4083e0 <isspace@plt+0x4ad0>
  4083bd:	inc    r15
  4083c0:	mov    rdi,r12
  4083c3:	mov    rsi,r15
  4083c6:	call   403d30 <isspace@plt+0x420>
  4083cb:	mov    r13,rax
  4083ce:	test   r13,r13
  4083d1:	je     4083f6 <isspace@plt+0x4ae6>
  4083d3:	test   rbx,rbx
  4083d6:	jne    408380 <isspace@plt+0x4a70>
  4083d8:	jmp    4083f6 <isspace@plt+0x4ae6>
  4083da:	nop    WORD PTR [rax+rax*1+0x0]
  4083e0:	inc    rbp
  4083e3:	mov    rdi,r14
  4083e6:	mov    rsi,rbp
  4083e9:	call   403d30 <isspace@plt+0x420>
  4083ee:	mov    rbx,rax
  4083f1:	test   r13,r13
  4083f4:	jne    4083d3 <isspace@plt+0x4ac3>
  4083f6:	mov    rax,QWORD PTR fs:0x28
  4083ff:	cmp    rax,QWORD PTR [rsp+0x20]
  408404:	jne    408415 <isspace@plt+0x4b05>
  408406:	add    rsp,0x28
  40840a:	pop    rbx
  40840b:	pop    r12
  40840d:	pop    r13
  40840f:	pop    r14
  408411:	pop    r15
  408413:	pop    rbp
  408414:	ret    
  408415:	call   403280 <__stack_chk_fail@plt>
  40841a:	nop    WORD PTR [rax+rax*1+0x0]
  408420:	push   rbp
  408421:	push   r15
  408423:	push   r14
  408425:	push   r13
  408427:	push   r12
  408429:	push   rbx
  40842a:	sub    rsp,0x28
  40842e:	mov    r12,rsi
  408431:	mov    r15,rdi
  408434:	mov    rax,QWORD PTR fs:0x28
  40843d:	mov    QWORD PTR [rsp+0x20],rax
  408442:	mov    QWORD PTR [rsp+0x8],rdx
  408447:	mov    rbx,QWORD PTR [rdx]
  40844a:	mov    rdi,rsi
  40844d:	call   403fa0 <isspace@plt+0x690>
  408452:	test   rax,rax
  408455:	je     4084a3 <isspace@plt+0x4b93>
  408457:	mov    r13,rax
  40845a:	xor    ebp,ebp
  40845c:	jmp    40846c <isspace@plt+0x4b5c>
  40845e:	xchg   ax,ax
  408460:	mov    rbx,QWORD PTR [r14+0x8]
  408464:	inc    rbp
  408467:	cmp    r13,rbp
  40846a:	je     4084a3 <isspace@plt+0x4b93>
  40846c:	mov    rdi,r12
  40846f:	mov    rsi,rbp
  408472:	call   403d30 <isspace@plt+0x420>
  408477:	mov    r14,rax
  40847a:	mov    rsi,QWORD PTR [rax]
  40847d:	cmp    rbx,rsi
  408480:	jae    408460 <isspace@plt+0x4b50>
  408482:	mov    rdi,rbx
  408485:	call   417250 <isspace@plt+0x13940>
  40848a:	mov    QWORD PTR [rsp+0x10],rax
  40848f:	mov    QWORD PTR [rsp+0x18],rdx
  408494:	mov    rdi,r15
  408497:	lea    rsi,[rsp+0x10]
  40849c:	call   403d80 <isspace@plt+0x470>
  4084a1:	jmp    408460 <isspace@plt+0x4b50>
  4084a3:	mov    rax,QWORD PTR [rsp+0x8]
  4084a8:	mov    rsi,QWORD PTR [rax+0x8]
  4084ac:	cmp    rbx,rsi
  4084af:	jae    4084d0 <isspace@plt+0x4bc0>
  4084b1:	mov    rdi,rbx
  4084b4:	call   417250 <isspace@plt+0x13940>
  4084b9:	mov    QWORD PTR [rsp+0x10],rax
  4084be:	mov    QWORD PTR [rsp+0x18],rdx
  4084c3:	lea    rsi,[rsp+0x10]
  4084c8:	mov    rdi,r15
  4084cb:	call   403d80 <isspace@plt+0x470>
  4084d0:	mov    rax,QWORD PTR fs:0x28
  4084d9:	cmp    rax,QWORD PTR [rsp+0x20]
  4084de:	jne    4084ef <isspace@plt+0x4bdf>
  4084e0:	add    rsp,0x28
  4084e4:	pop    rbx
  4084e5:	pop    r12
  4084e7:	pop    r13
  4084e9:	pop    r14
  4084eb:	pop    r15
  4084ed:	pop    rbp
  4084ee:	ret    
  4084ef:	call   403280 <__stack_chk_fail@plt>
  4084f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4084fe:	xchg   ax,ax
  408500:	push   r15
  408502:	push   r14
  408504:	push   rbx
  408505:	sub    rsp,0x10
  408509:	mov    rax,QWORD PTR fs:0x28
  408512:	mov    QWORD PTR [rsp+0x8],rax
  408517:	mov    r15,QWORD PTR [rdi]
  40851a:	test   r15,r15
  40851d:	je     408581 <isspace@plt+0x4c71>
  40851f:	mov    r14,rsi
  408522:	mov    rbx,rdi
  408525:	mov    rdi,rsi
  408528:	call   403250 <strlen@plt>
  40852d:	cmp    QWORD PTR [rbx+0x8],0x0
  408532:	jne    408572 <isspace@plt+0x4c62>
  408534:	jmp    408543 <isspace@plt+0x4c33>
  408536:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408540:	mov    r15,QWORD PTR [rbx]
  408543:	mov    rcx,QWORD PTR [r15+0x20]
  408547:	cmp    rcx,rax
  40854a:	jae    408560 <isspace@plt+0x4c50>
  40854c:	movzx  ecx,BYTE PTR [r14+rcx*1]
  408551:	movzx  edx,BYTE PTR [r15+0x28]
  408556:	shrx   rcx,rcx,rdx
  40855b:	and    ecx,0x1
  40855e:	jmp    408562 <isspace@plt+0x4c52>
  408560:	xor    ecx,ecx
  408562:	shl    rcx,0x4
  408566:	lea    rbx,[r15+rcx*1]
  40856a:	cmp    QWORD PTR [r15+rcx*1+0x8],0x0
  408570:	je     408540 <isspace@plt+0x4c30>
  408572:	mov    rsi,QWORD PTR [rbx]
  408575:	mov    rdi,r14
  408578:	call   403470 <strcmp@plt>
  40857d:	test   eax,eax
  40857f:	je     408585 <isspace@plt+0x4c75>
  408581:	xor    eax,eax
  408583:	jmp    408589 <isspace@plt+0x4c79>
  408585:	mov    rax,QWORD PTR [rbx+0x8]
  408589:	mov    rcx,QWORD PTR fs:0x28
  408592:	cmp    rcx,QWORD PTR [rsp+0x8]
  408597:	jne    4085a3 <isspace@plt+0x4c93>
  408599:	add    rsp,0x10
  40859d:	pop    rbx
  40859e:	pop    r14
  4085a0:	pop    r15
  4085a2:	ret    
  4085a3:	call   403280 <__stack_chk_fail@plt>
  4085a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4085b0:	push   rbp
  4085b1:	push   r15
  4085b3:	push   r14
  4085b5:	push   r13
  4085b7:	push   r12
  4085b9:	push   rbx
  4085ba:	push   rax
  4085bb:	mov    r15,rsi
  4085be:	mov    r12,rdi
  4085c1:	mov    rax,QWORD PTR fs:0x28
  4085ca:	mov    QWORD PTR [rsp],rax
  4085ce:	call   403130 <__errno_location@plt>
  4085d3:	mov    r14,rax
  4085d6:	mov    DWORD PTR [rax],0x0
  4085dc:	mov    rbx,QWORD PTR [r12]
  4085e0:	test   rbx,rbx
  4085e3:	je     4086d3 <isspace@plt+0x4dc3>
  4085e9:	mov    rdi,r15
  4085ec:	call   403250 <strlen@plt>
  4085f1:	mov    r13,QWORD PTR [r12+0x8]
  4085f6:	mov    rbp,r12
  4085f9:	test   r13,r13
  4085fc:	jne    408648 <isspace@plt+0x4d38>
  4085fe:	mov    rcx,rbx
  408601:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40860b:	nop    DWORD PTR [rax+rax*1+0x0]
  408610:	mov    rdx,QWORD PTR [rcx+0x20]
  408614:	cmp    rdx,rax
  408617:	jae    408630 <isspace@plt+0x4d20>
  408619:	movzx  edx,BYTE PTR [r15+rdx*1]
  40861e:	movzx  esi,BYTE PTR [rcx+0x28]
  408622:	shrx   rdx,rdx,rsi
  408627:	and    edx,0x1
  40862a:	jmp    408632 <isspace@plt+0x4d22>
  40862c:	nop    DWORD PTR [rax+0x0]
  408630:	xor    edx,edx
  408632:	shl    rdx,0x4
  408636:	lea    rbp,[rcx+rdx*1]
  40863a:	cmp    QWORD PTR [rcx+rdx*1+0x8],0x0
  408640:	jne    408648 <isspace@plt+0x4d38>
  408642:	mov    rcx,QWORD PTR [rbp+0x0]
  408646:	jmp    408610 <isspace@plt+0x4d00>
  408648:	mov    rsi,QWORD PTR [rbp+0x0]
  40864c:	mov    rdi,r15
  40864f:	call   403470 <strcmp@plt>
  408654:	test   eax,eax
  408656:	je     408704 <isspace@plt+0x4df4>
  40865c:	mov    rdi,r15
  40865f:	call   403250 <strlen@plt>
  408664:	test   r13,r13
  408667:	je     408673 <isspace@plt+0x4d63>
  408669:	mov    rcx,r12
  40866c:	jmp    4086b8 <isspace@plt+0x4da8>
  40866e:	xchg   ax,ax
  408670:	mov    rbx,QWORD PTR [rcx]
  408673:	mov    rcx,QWORD PTR [rbx+0x20]
  408677:	cmp    rcx,rax
  40867a:	jae    408690 <isspace@plt+0x4d80>
  40867c:	movzx  ecx,BYTE PTR [r15+rcx*1]
  408681:	jmp    408692 <isspace@plt+0x4d82>
  408683:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40868d:	nop    DWORD PTR [rax]
  408690:	xor    ecx,ecx
  408692:	movzx  edx,BYTE PTR [rbx+0x28]
  408696:	movzx  esi,cl
  408699:	shrx   rdx,rsi,rdx
  40869e:	and    edx,0x1
  4086a1:	shl    rdx,0x4
  4086a5:	lea    rcx,[rbx+rdx*1]
  4086a9:	test   sil,sil
  4086ac:	cmovne r12,rcx
  4086b0:	cmp    QWORD PTR [rbx+rdx*1+0x8],0x0
  4086b6:	je     408670 <isspace@plt+0x4d60>
  4086b8:	mov    rdi,QWORD PTR [rcx]
  4086bb:	mov    rsi,r15
  4086be:	mov    rdx,rax
  4086c1:	call   403160 <strncmp@plt>
  4086c6:	test   eax,eax
  4086c8:	lea    rax,[rip+0x268a9]        # 42ef78 <isspace@plt+0x2b668>
  4086cf:	cmovne r12,rax
  4086d3:	cmp    QWORD PTR [r12],0x0
  4086d8:	jne    4086e1 <isspace@plt+0x4dd1>
  4086da:	mov    DWORD PTR [r14],0x2
  4086e1:	mov    rax,QWORD PTR [r12+0x8]
  4086e6:	mov    rcx,QWORD PTR fs:0x28
  4086ef:	cmp    rcx,QWORD PTR [rsp]
  4086f3:	jne    408712 <isspace@plt+0x4e02>
  4086f5:	add    rsp,0x8
  4086f9:	pop    rbx
  4086fa:	pop    r12
  4086fc:	pop    r13
  4086fe:	pop    r14
  408700:	pop    r15
  408702:	pop    rbp
  408703:	ret    
  408704:	mov    rax,QWORD PTR [rbp+0x8]
  408708:	test   rax,rax
  40870b:	jne    4086e6 <isspace@plt+0x4dd6>
  40870d:	jmp    40865c <isspace@plt+0x4d4c>
  408712:	call   403280 <__stack_chk_fail@plt>
  408717:	nop    WORD PTR [rax+rax*1+0x0]
  408720:	push   r14
  408722:	push   rbx
  408723:	push   rax
  408724:	mov    r14,rsi
  408727:	mov    rbx,rdi
  40872a:	mov    rax,QWORD PTR fs:0x28
  408733:	mov    QWORD PTR [rsp],rax
  408737:	mov    rdi,rsi
  40873a:	call   403250 <strlen@plt>
  40873f:	mov    rcx,QWORD PTR [rbx]
  408742:	test   rcx,rcx
  408745:	je     4087c3 <isspace@plt+0x4eb3>
  408747:	cmp    QWORD PTR [rbx+0x8],0x0
  40874c:	je     408763 <isspace@plt+0x4e53>
  40874e:	mov    rdx,rbx
  408751:	jmp    4087a8 <isspace@plt+0x4e98>
  408753:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40875d:	nop    DWORD PTR [rax]
  408760:	mov    rcx,QWORD PTR [rdx]
  408763:	mov    rdx,QWORD PTR [rcx+0x20]
  408767:	cmp    rdx,rax
  40876a:	jae    408780 <isspace@plt+0x4e70>
  40876c:	movzx  edx,BYTE PTR [r14+rdx*1]
  408771:	jmp    408782 <isspace@plt+0x4e72>
  408773:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40877d:	nop    DWORD PTR [rax]
  408780:	xor    edx,edx
  408782:	movzx  esi,BYTE PTR [rcx+0x28]
  408786:	movzx  edi,dl
  408789:	shrx   rsi,rdi,rsi
  40878e:	and    esi,0x1
  408791:	shl    rsi,0x4
  408795:	lea    rdx,[rcx+rsi*1]
  408799:	test   dil,dil
  40879c:	cmovne rbx,rdx
  4087a0:	cmp    QWORD PTR [rcx+rsi*1+0x8],0x0
  4087a6:	je     408760 <isspace@plt+0x4e50>
  4087a8:	mov    rdi,QWORD PTR [rdx]
  4087ab:	mov    rsi,r14
  4087ae:	mov    rdx,rax
  4087b1:	call   403160 <strncmp@plt>
  4087b6:	test   eax,eax
  4087b8:	lea    rax,[rip+0x267b9]        # 42ef78 <isspace@plt+0x2b668>
  4087bf:	cmovne rbx,rax
  4087c3:	mov    rax,QWORD PTR fs:0x28
  4087cc:	cmp    rax,QWORD PTR [rsp]
  4087d0:	jne    4087dd <isspace@plt+0x4ecd>
  4087d2:	mov    rax,rbx
  4087d5:	add    rsp,0x8
  4087d9:	pop    rbx
  4087da:	pop    r14
  4087dc:	ret    
  4087dd:	call   403280 <__stack_chk_fail@plt>
  4087e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4087ec:	nop    DWORD PTR [rax+0x0]
  4087f0:	push   rax
  4087f1:	mov    rax,QWORD PTR fs:0x28
  4087fa:	mov    QWORD PTR [rsp],rax
  4087fe:	cmp    QWORD PTR [rdi],0x0
  408802:	sete   al
  408805:	mov    rcx,QWORD PTR fs:0x28
  40880e:	cmp    rcx,QWORD PTR [rsp]
  408812:	jne    408816 <isspace@plt+0x4f06>
  408814:	pop    rcx
  408815:	ret    
  408816:	call   403280 <__stack_chk_fail@plt>
  40881b:	nop    DWORD PTR [rax+rax*1+0x0]
  408820:	push   rax
  408821:	mov    rax,QWORD PTR fs:0x28
  40882a:	mov    QWORD PTR [rsp],rax
  40882e:	mov    rax,QWORD PTR [rdi]
  408831:	test   rax,rax
  408834:	je     408859 <isspace@plt+0x4f49>
  408836:	mov    rcx,rdx
  408839:	mov    rdx,rsi
  40883c:	mov    rsi,QWORD PTR [rdi+0x8]
  408840:	mov    rdi,rax
  408843:	call   408bd0 <isspace@plt+0x52c0>
  408848:	mov    rax,QWORD PTR fs:0x28
  408851:	cmp    rax,QWORD PTR [rsp]
  408855:	jne    40886a <isspace@plt+0x4f5a>
  408857:	pop    rax
  408858:	ret    
  408859:	mov    rax,QWORD PTR fs:0x28
  408862:	cmp    rax,QWORD PTR [rsp]
  408866:	jne    40886a <isspace@plt+0x4f5a>
  408868:	pop    rax
  408869:	ret    
  40886a:	call   403280 <__stack_chk_fail@plt>
  40886f:	nop
  408870:	push   rbp
  408871:	push   r15
  408873:	push   r14
  408875:	push   r13
  408877:	push   r12
  408879:	push   rbx
  40887a:	sub    rsp,0x28
  40887e:	mov    r15,rdx
  408881:	mov    rbp,rsi
  408884:	mov    r13,rdi
  408887:	mov    rax,QWORD PTR fs:0x28
  408890:	mov    QWORD PTR [rsp+0x20],rax
  408895:	mov    rdi,rsi
  408898:	call   403250 <strlen@plt>
  40889d:	test   r15,r15
  4088a0:	je     408917 <isspace@plt+0x5007>
  4088a2:	mov    r14,rax
  4088a5:	mov    rdi,rbp
  4088a8:	call   403850 <strdup@plt>
  4088ad:	test   rax,rax
  4088b0:	je     408a63 <isspace@plt+0x5153>
  4088b6:	mov    rbx,rax
  4088b9:	mov    r12,QWORD PTR [r13+0x0]
  4088bd:	test   r12,r12
  4088c0:	je     408927 <isspace@plt+0x5017>
  4088c2:	mov    rdi,rbx
  4088c5:	call   403250 <strlen@plt>
  4088ca:	mov    rdi,QWORD PTR [r13+0x8]
  4088ce:	mov    rcx,r12
  4088d1:	test   rdi,rdi
  4088d4:	jne    408937 <isspace@plt+0x5027>
  4088d6:	mov    rcx,r12
  4088d9:	nop    DWORD PTR [rax+0x0]
  4088e0:	mov    rdx,QWORD PTR [rcx+0x20]
  4088e4:	cmp    rdx,rax
  4088e7:	jae    408900 <isspace@plt+0x4ff0>
  4088e9:	movzx  edx,BYTE PTR [rbx+rdx*1]
  4088ed:	movzx  esi,BYTE PTR [rcx+0x28]
  4088f1:	shrx   rdx,rdx,rsi
  4088f6:	and    edx,0x1
  4088f9:	jmp    408902 <isspace@plt+0x4ff2>
  4088fb:	nop    DWORD PTR [rax+rax*1+0x0]
  408900:	xor    edx,edx
  408902:	shl    rdx,0x4
  408906:	lea    rsi,[rcx+rdx*1]
  40890a:	cmp    QWORD PTR [rcx+rdx*1+0x8],0x0
  408910:	jne    408934 <isspace@plt+0x5024>
  408912:	mov    rcx,QWORD PTR [rsi]
  408915:	jmp    4088e0 <isspace@plt+0x4fd0>
  408917:	call   403130 <__errno_location@plt>
  40891c:	mov    DWORD PTR [rax],0x16
  408922:	jmp    408a6e <isspace@plt+0x515e>
  408927:	mov    QWORD PTR [r13+0x0],rbx
  40892b:	mov    QWORD PTR [r13+0x8],r15
  40892f:	jmp    408a57 <isspace@plt+0x5147>
  408934:	mov    rcx,QWORD PTR [rsi]
  408937:	mov    QWORD PTR [rsp+0x18],r15
  40893c:	mov    QWORD PTR [rsp+0x8],r14
  408941:	mov    QWORD PTR [rsp],rbp
  408945:	mov    r14b,BYTE PTR [rcx]
  408948:	cmp    r14b,BYTE PTR [rbx]
  40894b:	jne    40896c <isspace@plt+0x505c>
  40894d:	xor    r15d,r15d
  408950:	test   r14b,r14b
  408953:	je     408a8f <isspace@plt+0x517f>
  408959:	movzx  r14d,BYTE PTR [rcx+r15*1+0x1]
  40895f:	cmp    r14b,BYTE PTR [rbx+r15*1+0x1]
  408964:	lea    r15,[r15+0x1]
  408968:	je     408950 <isspace@plt+0x5040>
  40896a:	jmp    40896f <isspace@plt+0x505f>
  40896c:	xor    r15d,r15d
  40896f:	mov    QWORD PTR [rsp+0x10],rdi
  408974:	mov    rax,QWORD PTR [rsp]
  408978:	movzx  ebp,BYTE PTR [rax+r15*1]
  40897d:	mov    edi,0x30
  408982:	call   4035d0 <malloc@plt>
  408987:	test   rax,rax
  40898a:	je     408a5b <isspace@plt+0x514b>
  408990:	xor    r14b,bpl
  408993:	shr    r14b,1
  408996:	movzx  ecx,r14b
  40899a:	lzcnt  ecx,ecx
  40899e:	add    ecx,0xffffffe8
  4089a1:	mov    dl,0x8
  4089a3:	sub    dl,cl
  4089a5:	shrx   ecx,ebp,edx
  4089aa:	and    cl,0x1
  4089ad:	movzx  esi,cl
  4089b0:	shl    rsi,0x4
  4089b4:	mov    QWORD PTR [rax+0x20],r15
  4089b8:	mov    BYTE PTR [rax+0x28],dl
  4089bb:	mov    rdi,QWORD PTR [rsp+0x18]
  4089c0:	mov    QWORD PTR [rax+rsi*1+0x8],rdi
  4089c5:	mov    QWORD PTR [rax+rsi*1],rbx
  4089c9:	cmp    QWORD PTR [rsp+0x10],0x0
  4089cf:	jne    408a36 <isspace@plt+0x5126>
  4089d1:	mov    rsi,QWORD PTR [r12+0x20]
  4089d6:	cmp    rsi,r15
  4089d9:	ja     408a36 <isspace@plt+0x5126>
  4089db:	mov    rbp,QWORD PTR [rsp]
  4089df:	mov    rbx,QWORD PTR [rsp+0x8]
  4089e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4089ee:	xchg   ax,ax
  4089f0:	cmp    rsi,r15
  4089f3:	jne    4089fc <isspace@plt+0x50ec>
  4089f5:	cmp    BYTE PTR [r12+0x28],dl
  4089fa:	jb     408a36 <isspace@plt+0x5126>
  4089fc:	cmp    rsi,rbx
  4089ff:	jae    408a16 <isspace@plt+0x5106>
  408a01:	movzx  esi,BYTE PTR [rbp+rsi*1+0x0]
  408a06:	movzx  edi,BYTE PTR [r12+0x28]
  408a0c:	shrx   rsi,rsi,rdi
  408a11:	and    esi,0x1
  408a14:	jmp    408a18 <isspace@plt+0x5108>
  408a16:	xor    esi,esi
  408a18:	shl    rsi,0x4
  408a1c:	lea    r13,[r12+rsi*1]
  408a20:	cmp    QWORD PTR [r12+rsi*1+0x8],0x0
  408a26:	jne    408a36 <isspace@plt+0x5126>
  408a28:	mov    r12,QWORD PTR [r13+0x0]
  408a2c:	mov    rsi,QWORD PTR [r12+0x20]
  408a31:	cmp    rsi,r15
  408a34:	jbe    4089f0 <isspace@plt+0x50e0>
  408a36:	xor    cl,0x1
  408a39:	movzx  ecx,cl
  408a3c:	shl    rcx,0x4
  408a40:	vmovups xmm0,XMMWORD PTR [r13+0x0]
  408a46:	vmovups XMMWORD PTR [rax+rcx*1],xmm0
  408a4b:	mov    QWORD PTR [r13+0x0],rax
  408a4f:	mov    QWORD PTR [r13+0x8],0x0
  408a57:	mov    al,0x1
  408a59:	jmp    408a70 <isspace@plt+0x5160>
  408a5b:	mov    rdi,rbx
  408a5e:	call   4030d0 <free@plt>
  408a63:	call   403130 <__errno_location@plt>
  408a68:	mov    DWORD PTR [rax],0xc
  408a6e:	xor    eax,eax
  408a70:	mov    rcx,QWORD PTR fs:0x28
  408a79:	cmp    rcx,QWORD PTR [rsp+0x20]
  408a7e:	jne    408aa4 <isspace@plt+0x5194>
  408a80:	add    rsp,0x28
  408a84:	pop    rbx
  408a85:	pop    r12
  408a87:	pop    r13
  408a89:	pop    r14
  408a8b:	pop    r15
  408a8d:	pop    rbp
  408a8e:	ret    
  408a8f:	mov    rdi,rbx
  408a92:	call   4030d0 <free@plt>
  408a97:	call   403130 <__errno_location@plt>
  408a9c:	mov    DWORD PTR [rax],0x11
  408aa2:	jmp    408a6e <isspace@plt+0x515e>
  408aa4:	call   403280 <__stack_chk_fail@plt>
  408aa9:	nop    DWORD PTR [rax+0x0]
  408ab0:	push   rbp
  408ab1:	push   r15
  408ab3:	push   r14
  408ab5:	push   r13
  408ab7:	push   r12
  408ab9:	push   rbx
  408aba:	push   rax
  408abb:	mov    r12,rsi
  408abe:	mov    r14,rdi
  408ac1:	mov    rax,QWORD PTR fs:0x28
  408aca:	mov    QWORD PTR [rsp],rax
  408ace:	mov    rdi,rsi
  408ad1:	call   403250 <strlen@plt>
  408ad6:	mov    rcx,QWORD PTR [r14]
  408ad9:	test   rcx,rcx
  408adc:	je     408b58 <isspace@plt+0x5248>
  408ade:	cmp    QWORD PTR [r14+0x8],0x0
  408ae3:	je     408af0 <isspace@plt+0x51e0>
  408ae5:	lea    r13,[r14+0x8]
  408ae9:	xor    ebx,ebx
  408aeb:	mov    rdx,r14
  408aee:	jmp    408b46 <isspace@plt+0x5236>
  408af0:	mov    rbx,r14
  408af3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408afd:	nop    DWORD PTR [rax]
  408b00:	mov    rdx,QWORD PTR [rcx+0x20]
  408b04:	cmp    rdx,rax
  408b07:	jae    408b20 <isspace@plt+0x5210>
  408b09:	movzx  edx,BYTE PTR [r12+rdx*1]
  408b0e:	movzx  esi,BYTE PTR [rcx+0x28]
  408b12:	shrx   ebp,edx,esi
  408b17:	and    bpl,0x1
  408b1b:	jmp    408b22 <isspace@plt+0x5212>
  408b1d:	nop    DWORD PTR [rax]
  408b20:	xor    ebp,ebp
  408b22:	movzx  esi,bpl
  408b26:	shl    rsi,0x4
  408b2a:	lea    rdx,[rcx+rsi*1]
  408b2e:	cmp    QWORD PTR [rcx+rsi*1+0x8],0x0
  408b34:	jne    408b3e <isspace@plt+0x522e>
  408b36:	mov    rcx,QWORD PTR [rdx]
  408b39:	mov    rbx,rdx
  408b3c:	jmp    408b00 <isspace@plt+0x51f0>
  408b3e:	lea    r13,[rcx+rsi*1]
  408b42:	add    r13,0x8
  408b46:	mov    r15,QWORD PTR [rdx]
  408b49:	mov    rdi,r12
  408b4c:	mov    rsi,r15
  408b4f:	call   403470 <strcmp@plt>
  408b54:	test   eax,eax
  408b56:	je     408b87 <isspace@plt+0x5277>
  408b58:	call   403130 <__errno_location@plt>
  408b5d:	mov    DWORD PTR [rax],0x2
  408b63:	xor    r15d,r15d
  408b66:	mov    rax,QWORD PTR fs:0x28
  408b6f:	cmp    rax,QWORD PTR [rsp]
  408b73:	jne    408bc0 <isspace@plt+0x52b0>
  408b75:	mov    rax,r15
  408b78:	add    rsp,0x8
  408b7c:	pop    rbx
  408b7d:	pop    r12
  408b7f:	pop    r13
  408b81:	pop    r14
  408b83:	pop    r15
  408b85:	pop    rbp
  408b86:	ret    
  408b87:	mov    rdi,r15
  408b8a:	call   4030d0 <free@plt>
  408b8f:	mov    r15,QWORD PTR [r13+0x0]
  408b93:	test   rbx,rbx
  408b96:	je     408bb7 <isspace@plt+0x52a7>
  408b98:	mov    rdi,QWORD PTR [rbx]
  408b9b:	xor    eax,eax
  408b9d:	test   bpl,bpl
  408ba0:	sete   al
  408ba3:	shl    rax,0x4
  408ba7:	vmovups xmm0,XMMWORD PTR [rdi+rax*1]
  408bac:	vmovups XMMWORD PTR [rbx],xmm0
  408bb0:	call   4030d0 <free@plt>
  408bb5:	jmp    408b66 <isspace@plt+0x5256>
  408bb7:	mov    QWORD PTR [r14],0x0
  408bbe:	jmp    408b66 <isspace@plt+0x5256>
  408bc0:	call   403280 <__stack_chk_fail@plt>
  408bc5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408bcf:	nop
  408bd0:	push   r15
  408bd2:	push   r14
  408bd4:	push   rbx
  408bd5:	sub    rsp,0x10
  408bd9:	mov    r14,rcx
  408bdc:	mov    r15,rdx
  408bdf:	mov    rbx,rdi
  408be2:	mov    rax,QWORD PTR fs:0x28
  408beb:	mov    QWORD PTR [rsp+0x8],rax
  408bf0:	test   rsi,rsi
  408bf3:	je     408c10 <isspace@plt+0x5300>
  408bf5:	mov    rdi,rbx
  408bf8:	jmp    408c3a <isspace@plt+0x532a>
  408bfa:	nop    WORD PTR [rax+rax*1+0x0]
  408c00:	mov    rdi,QWORD PTR [rbx+0x10]
  408c04:	mov    rsi,QWORD PTR [rbx+0x18]
  408c08:	mov    rbx,rdi
  408c0b:	test   rsi,rsi
  408c0e:	jne    408c3a <isspace@plt+0x532a>
  408c10:	mov    rdi,QWORD PTR [rbx]
  408c13:	mov    rsi,QWORD PTR [rbx+0x8]
  408c17:	mov    rdx,r15
  408c1a:	mov    rcx,r14
  408c1d:	call   408bd0 <isspace@plt+0x52c0>
  408c22:	test   al,al
  408c24:	jne    408c00 <isspace@plt+0x52f0>
  408c26:	mov    rax,QWORD PTR fs:0x28
  408c2f:	cmp    rax,QWORD PTR [rsp+0x8]
  408c34:	jne    408c5a <isspace@plt+0x534a>
  408c36:	xor    eax,eax
  408c38:	jmp    408c50 <isspace@plt+0x5340>
  408c3a:	mov    rdx,r14
  408c3d:	call   r15
  408c40:	mov    rcx,QWORD PTR fs:0x28
  408c49:	cmp    rcx,QWORD PTR [rsp+0x8]
  408c4e:	jne    408c5a <isspace@plt+0x534a>
  408c50:	add    rsp,0x10
  408c54:	pop    rbx
  408c55:	pop    r14
  408c57:	pop    r15
  408c59:	ret    
  408c5a:	call   403280 <__stack_chk_fail@plt>
  408c5f:	nop
  408c60:	push   rbx
  408c61:	sub    rsp,0x20
  408c65:	mov    rbx,rsi
  408c68:	mov    rax,QWORD PTR fs:0x28
  408c71:	mov    QWORD PTR [rsp+0x18],rax
  408c76:	vxorps xmm0,xmm0,xmm0
  408c7a:	vmovaps XMMWORD PTR [rsp],xmm0
  408c7f:	mov    rax,QWORD PTR [rdi]
  408c82:	test   rax,rax
  408c85:	je     408c9d <isspace@plt+0x538d>
  408c87:	mov    rsi,QWORD PTR [rdi+0x8]
  408c8b:	lea    rdx,[rip+0x3e]        # 408cd0 <isspace@plt+0x53c0>
  408c92:	mov    rcx,rsp
  408c95:	mov    rdi,rax
  408c98:	call   408bd0 <isspace@plt+0x52c0>
  408c9d:	test   rbx,rbx
  408ca0:	je     408cae <isspace@plt+0x539e>
  408ca2:	mov    rax,QWORD PTR [rsp]
  408ca6:	test   rax,rax
  408ca9:	je     408cae <isspace@plt+0x539e>
  408cab:	mov    QWORD PTR [rbx],rax
  408cae:	mov    rax,QWORD PTR [rsp+0x8]
  408cb3:	mov    rcx,QWORD PTR fs:0x28
  408cbc:	cmp    rcx,QWORD PTR [rsp+0x18]
  408cc1:	jne    408cc9 <isspace@plt+0x53b9>
  408cc3:	add    rsp,0x20
  408cc7:	pop    rbx
  408cc8:	ret    
  408cc9:	call   403280 <__stack_chk_fail@plt>
  408cce:	xchg   ax,ax
  408cd0:	push   rax
  408cd1:	mov    rax,QWORD PTR fs:0x28
  408cda:	mov    QWORD PTR [rsp],rax
  408cde:	mov    QWORD PTR [rdx],rdi
  408ce1:	mov    QWORD PTR [rdx+0x8],rsi
  408ce5:	mov    rax,QWORD PTR fs:0x28
  408cee:	cmp    rax,QWORD PTR [rsp]
  408cf2:	jne    408cf8 <isspace@plt+0x53e8>
  408cf4:	xor    eax,eax
  408cf6:	pop    rcx
  408cf7:	ret    
  408cf8:	call   403280 <__stack_chk_fail@plt>
  408cfd:	nop    DWORD PTR [rax]
  408d00:	push   rbx
  408d01:	sub    rsp,0x10
  408d05:	mov    rbx,rdi
  408d08:	mov    rax,QWORD PTR fs:0x28
  408d11:	mov    QWORD PTR [rsp+0x8],rax
  408d16:	test   rsi,rsi
  408d19:	jne    408d34 <isspace@plt+0x5424>
  408d1b:	mov    rdi,QWORD PTR [rbx]
  408d1e:	mov    rsi,QWORD PTR [rbx+0x8]
  408d22:	call   408d00 <isspace@plt+0x53f0>
  408d27:	mov    rdi,QWORD PTR [rbx+0x10]
  408d2b:	mov    rsi,QWORD PTR [rbx+0x18]
  408d2f:	call   408d00 <isspace@plt+0x53f0>
  408d34:	mov    rdi,rbx
  408d37:	call   4030d0 <free@plt>
  408d3c:	mov    rax,QWORD PTR fs:0x28
  408d45:	cmp    rax,QWORD PTR [rsp+0x8]
  408d4a:	jne    408d52 <isspace@plt+0x5442>
  408d4c:	add    rsp,0x10
  408d50:	pop    rbx
  408d51:	ret    
  408d52:	call   403280 <__stack_chk_fail@plt>
  408d57:	nop    WORD PTR [rax+rax*1+0x0]
  408d60:	push   rax
  408d61:	mov    rax,QWORD PTR fs:0x28
  408d6a:	mov    QWORD PTR [rsp],rax
  408d6e:	test   rsi,rsi
  408d71:	je     408d98 <isspace@plt+0x5488>
  408d73:	mov    rax,QWORD PTR [rsi]
  408d76:	test   rax,rax
  408d79:	je     408d98 <isspace@plt+0x5488>
  408d7b:	mov    rdx,QWORD PTR [rsi+0x8]
  408d7f:	mov    rsi,rax
  408d82:	call   408db0 <isspace@plt+0x54a0>
  408d87:	mov    rcx,QWORD PTR fs:0x28
  408d90:	cmp    rcx,QWORD PTR [rsp]
  408d94:	jne    408dab <isspace@plt+0x549b>
  408d96:	pop    rcx
  408d97:	ret    
  408d98:	mov    rax,QWORD PTR fs:0x28
  408da1:	cmp    rax,QWORD PTR [rsp]
  408da5:	jne    408dab <isspace@plt+0x549b>
  408da7:	mov    al,0x1
  408da9:	pop    rcx
  408daa:	ret    
  408dab:	call   403280 <__stack_chk_fail@plt>
  408db0:	push   rbp
  408db1:	push   r15
  408db3:	push   r14
  408db5:	push   r13
  408db7:	push   r12
  408db9:	push   rbx
  408dba:	push   rax
  408dbb:	mov    rbx,rsi
  408dbe:	mov    r14,rdi
  408dc1:	mov    rax,QWORD PTR fs:0x28
  408dca:	mov    QWORD PTR [rsp],rax
  408dce:	test   rdx,rdx
  408dd1:	je     408df0 <isspace@plt+0x54e0>
  408dd3:	mov    r15,rdx
  408dd6:	mov    r13,rbx
  408dd9:	jmp    408e0b <isspace@plt+0x54fb>
  408ddb:	nop    DWORD PTR [rax+rax*1+0x0]
  408de0:	mov    r13,QWORD PTR [rbx+0x10]
  408de4:	mov    r15,QWORD PTR [rbx+0x18]
  408de8:	mov    rbx,r13
  408deb:	test   r15,r15
  408dee:	jne    408e0b <isspace@plt+0x54fb>
  408df0:	mov    rsi,QWORD PTR [rbx]
  408df3:	mov    rdx,QWORD PTR [rbx+0x8]
  408df7:	mov    rdi,r14
  408dfa:	call   408db0 <isspace@plt+0x54a0>
  408dff:	test   al,al
  408e01:	jne    408de0 <isspace@plt+0x54d0>
  408e03:	xor    r12d,r12d
  408e06:	jmp    408ebd <isspace@plt+0x55ad>
  408e0b:	mov    rdi,r14
  408e0e:	mov    rsi,r13
  408e11:	mov    rdx,r15
  408e14:	call   408870 <isspace@plt+0x4f60>
  408e19:	mov    r12b,0x1
  408e1c:	test   al,al
  408e1e:	jne    408ebd <isspace@plt+0x55ad>
  408e24:	mov    rbx,QWORD PTR [r14]
  408e27:	test   rbx,rbx
  408e2a:	je     408e83 <isspace@plt+0x5573>
  408e2c:	mov    rdi,r13
  408e2f:	call   403250 <strlen@plt>
  408e34:	cmp    QWORD PTR [r14+0x8],0x0
  408e39:	mov    rbp,r14
  408e3c:	jne    408e73 <isspace@plt+0x5563>
  408e3e:	jmp    408e66 <isspace@plt+0x5556>
  408e40:	movzx  ecx,BYTE PTR [r13+rcx*1+0x0]
  408e46:	movzx  edx,BYTE PTR [rbx+0x28]
  408e4a:	shrx   rcx,rcx,rdx
  408e4f:	and    ecx,0x1
  408e52:	shl    rcx,0x4
  408e56:	lea    rbp,[rbx+rcx*1]
  408e5a:	cmp    QWORD PTR [rbx+rcx*1+0x8],0x0
  408e60:	jne    408e73 <isspace@plt+0x5563>
  408e62:	mov    rbx,QWORD PTR [rbp+0x0]
  408e66:	mov    rcx,QWORD PTR [rbx+0x20]
  408e6a:	cmp    rcx,rax
  408e6d:	jb     408e40 <isspace@plt+0x5530>
  408e6f:	xor    ecx,ecx
  408e71:	jmp    408e52 <isspace@plt+0x5542>
  408e73:	mov    rsi,QWORD PTR [rbp+0x0]
  408e77:	mov    rdi,r13
  408e7a:	call   403470 <strcmp@plt>
  408e7f:	test   eax,eax
  408e81:	je     408eb4 <isspace@plt+0x55a4>
  408e83:	xor    eax,eax
  408e85:	cmp    rax,r15
  408e88:	je     408ebd <isspace@plt+0x55ad>
  408e8a:	mov    rdi,r14
  408e8d:	mov    rsi,r13
  408e90:	call   408ab0 <isspace@plt+0x51a0>
  408e95:	mov    rdi,r14
  408e98:	mov    rsi,r13
  408e9b:	mov    rdx,r15
  408e9e:	call   408870 <isspace@plt+0x4f60>
  408ea3:	mov    rcx,QWORD PTR fs:0x28
  408eac:	cmp    rcx,QWORD PTR [rsp]
  408eb0:	je     408ecf <isspace@plt+0x55bf>
  408eb2:	jmp    408ede <isspace@plt+0x55ce>
  408eb4:	mov    rax,QWORD PTR [rbp+0x8]
  408eb8:	cmp    rax,r15
  408ebb:	jne    408e8a <isspace@plt+0x557a>
  408ebd:	mov    rax,QWORD PTR fs:0x28
  408ec6:	cmp    rax,QWORD PTR [rsp]
  408eca:	jne    408ede <isspace@plt+0x55ce>
  408ecc:	mov    eax,r12d
  408ecf:	add    rsp,0x8
  408ed3:	pop    rbx
  408ed4:	pop    r12
  408ed6:	pop    r13
  408ed8:	pop    r14
  408eda:	pop    r15
  408edc:	pop    rbp
  408edd:	ret    
  408ede:	call   403280 <__stack_chk_fail@plt>
  408ee3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408eed:	nop    DWORD PTR [rax]
  408ef0:	push   rax
  408ef1:	mov    rax,QWORD PTR fs:0x28
  408efa:	mov    QWORD PTR [rsp],rax
  408efe:	mov    edi,0x1
  408f03:	mov    esi,0x10
  408f08:	call   403460 <calloc@plt>
  408f0d:	mov    rcx,QWORD PTR fs:0x28
  408f16:	cmp    rcx,QWORD PTR [rsp]
  408f1a:	jne    408f1e <isspace@plt+0x560e>
  408f1c:	pop    rcx
  408f1d:	ret    
  408f1e:	call   403280 <__stack_chk_fail@plt>
  408f23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408f2d:	nop    DWORD PTR [rax]
  408f30:	push   rbx
  408f31:	sub    rsp,0x10
  408f35:	mov    rax,QWORD PTR fs:0x28
  408f3e:	mov    QWORD PTR [rsp+0x8],rax
  408f43:	test   rdi,rdi
  408f46:	je     408f64 <isspace@plt+0x5654>
  408f48:	mov    rbx,rdi
  408f4b:	mov    rdi,QWORD PTR [rdi]
  408f4e:	test   rdi,rdi
  408f51:	je     408f5c <isspace@plt+0x564c>
  408f53:	mov    rsi,QWORD PTR [rbx+0x8]
  408f57:	call   408d00 <isspace@plt+0x53f0>
  408f5c:	mov    rdi,rbx
  408f5f:	call   4030d0 <free@plt>
  408f64:	mov    rax,QWORD PTR fs:0x28
  408f6d:	cmp    rax,QWORD PTR [rsp+0x8]
  408f72:	jne    408f7a <isspace@plt+0x566a>
  408f74:	add    rsp,0x10
  408f78:	pop    rbx
  408f79:	ret    
  408f7a:	call   403280 <__stack_chk_fail@plt>
  408f7f:	nop
  408f80:	push   rbp
  408f81:	push   r15
  408f83:	push   r14
  408f85:	push   r13
  408f87:	push   r12
  408f89:	push   rbx
  408f8a:	push   rax
  408f8b:	mov    r14,rdi
  408f8e:	mov    rax,QWORD PTR fs:0x28
  408f97:	mov    QWORD PTR [rsp],rax
  408f9b:	call   408ef0 <isspace@plt+0x55e0>
  408fa0:	mov    QWORD PTR [r14+0x808],rax
  408fa7:	test   rax,rax
  408faa:	je     409080 <isspace@plt+0x5770>
  408fb0:	lea    rsi,[rip+0x25f24]        # 42eedb <isspace@plt+0x2b5cb>
  408fb7:	lea    rdx,[rip+0x36432]        # 43f3f0 <isspace@plt+0x3bae0>
  408fbe:	mov    rdi,rax
  408fc1:	call   408870 <isspace@plt+0x4f60>
  408fc6:	mov    ebp,eax
  408fc8:	lea    rbx,[rip+0x36449]        # 43f418 <isspace@plt+0x3bb08>
  408fcf:	lea    rsi,[rip+0x27e10]        # 430de6 <isspace@plt+0x2d4d6>
  408fd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408fe0:	mov    rdi,QWORD PTR [r14+0x808]
  408fe7:	mov    rdx,rbx
  408fea:	call   408870 <isspace@plt+0x4f60>
  408fef:	and    bpl,al
  408ff2:	mov    rsi,QWORD PTR [rbx+0x28]
  408ff6:	add    rbx,0x28
  408ffa:	test   rsi,rsi
  408ffd:	jne    408fe0 <isspace@plt+0x56d0>
  408fff:	call   408ef0 <isspace@plt+0x55e0>
  409004:	mov    QWORD PTR [r14+0x818],rax
  40900b:	test   rax,rax
  40900e:	je     409080 <isspace@plt+0x5770>
  409010:	lea    r13,[rip+0x36a21]        # 43fa38 <isspace@plt+0x3c128>
  409017:	xor    r12d,r12d
  40901a:	lea    rax,[rip+0x36a0f]        # 43fa30 <isspace@plt+0x3c120>
  409021:	jmp    409044 <isspace@plt+0x5734>
  409023:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40902d:	nop    DWORD PTR [rax]
  409030:	inc    r12
  409033:	add    r13,0x38
  409037:	cmp    r12,0x12
  40903b:	lea    rax,[rip+0x369ee]        # 43fa30 <isspace@plt+0x3c120>
  409042:	je     409084 <isspace@plt+0x5774>
  409044:	imul   rbx,r12,0x38
  409048:	mov    rsi,QWORD PTR [rbx+rax*1]
  40904c:	test   rsi,rsi
  40904f:	je     409030 <isspace@plt+0x5720>
  409051:	add    rbx,rax
  409054:	mov    r15,r13
  409057:	nop    WORD PTR [rax+rax*1+0x0]
  409060:	mov    rdi,QWORD PTR [r14+0x818]
  409067:	mov    rdx,rbx
  40906a:	call   408870 <isspace@plt+0x4f60>
  40906f:	and    bpl,al
  409072:	mov    rsi,QWORD PTR [r15]
  409075:	add    r15,0x8
  409079:	test   rsi,rsi
  40907c:	jne    409060 <isspace@plt+0x5750>
  40907e:	jmp    409030 <isspace@plt+0x5720>
  409080:	xor    ebp,ebp
  409082:	jmp    409088 <isspace@plt+0x5778>
  409084:	and    bpl,0x1
  409088:	mov    rax,QWORD PTR fs:0x28
  409091:	cmp    rax,QWORD PTR [rsp]
  409095:	jne    4090a8 <isspace@plt+0x5798>
  409097:	mov    eax,ebp
  409099:	add    rsp,0x8
  40909d:	pop    rbx
  40909e:	pop    r12
  4090a0:	pop    r13
  4090a2:	pop    r14
  4090a4:	pop    r15
  4090a6:	pop    rbp
  4090a7:	ret    
  4090a8:	call   403280 <__stack_chk_fail@plt>
  4090ad:	nop    DWORD PTR [rax]
  4090b0:	push   rax
  4090b1:	mov    rax,QWORD PTR fs:0x28
  4090ba:	mov    QWORD PTR [rsp],rax
  4090be:	cmp    edi,0x10
  4090c1:	ja     4090d2 <isspace@plt+0x57c2>
  4090c3:	mov    eax,edi
  4090c5:	lea    rcx,[rip+0x36d54]        # 43fe20 <isspace@plt+0x3c510>
  4090cc:	mov    rax,QWORD PTR [rcx+rax*8]
  4090d0:	jmp    4090d4 <isspace@plt+0x57c4>
  4090d2:	xor    eax,eax
  4090d4:	mov    rcx,QWORD PTR fs:0x28
  4090dd:	cmp    rcx,QWORD PTR [rsp]
  4090e1:	jne    4090e5 <isspace@plt+0x57d5>
  4090e3:	pop    rcx
  4090e4:	ret    
  4090e5:	call   403280 <__stack_chk_fail@plt>
  4090ea:	nop    WORD PTR [rax+rax*1+0x0]
  4090f0:	push   rbp
  4090f1:	push   r15
  4090f3:	push   r14
  4090f5:	push   r13
  4090f7:	push   r12
  4090f9:	push   rbx
  4090fa:	sub    rsp,0x58
  4090fe:	mov    rax,QWORD PTR fs:0x28
  409107:	mov    QWORD PTR [rsp+0x50],rax
  40910c:	mov    DWORD PTR [rsp+0x4c],0x0
  409114:	test   rsi,rsi
  409117:	je     4091d4 <isspace@plt+0x58c4>
  40911d:	mov    r12,rdi
  409120:	mov    QWORD PTR [rsp+0x38],rsi
  409125:	mov    DWORD PTR [rdi+0x9b4],0x0
  40912f:	lea    rsi,[rsp+0x38]
  409134:	lea    rdx,[rsp+0x4c]
  409139:	call   40db50 <isspace@plt+0xa240>
  40913e:	test   rax,rax
  409141:	je     4091eb <isspace@plt+0x58db>
  409147:	mov    rbx,rax
  40914a:	mov    rax,QWORD PTR [rsp+0x38]
  40914f:	jmp    409165 <isspace@plt+0x5855>
  409151:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40915b:	nop    DWORD PTR [rax+rax*1+0x0]
  409160:	mov    QWORD PTR [rsp+0x38],rax
  409165:	inc    rax
  409168:	movzx  ecx,BYTE PTR [rax-0x1]
  40916c:	lea    edx,[rcx-0x9]
  40916f:	cmp    dl,0x2
  409172:	jb     409160 <isspace@plt+0x5850>
  409174:	cmp    cl,0x20
  409177:	je     409160 <isspace@plt+0x5850>
  409179:	test   cl,cl
  40917b:	jne    4091db <isspace@plt+0x58cb>
  40917d:	mov    edi,0x1
  409182:	mov    esi,0x80
  409187:	call   403460 <calloc@plt>
  40918c:	test   rax,rax
  40918f:	je     4091e3 <isspace@plt+0x58d3>
  409191:	mov    rbp,rax
  409194:	lea    rdi,[rip+0x273b5]        # 430550 <isspace@plt+0x2cc40>
  40919b:	call   403850 <strdup@plt>
  4091a0:	mov    QWORD PTR [rbp+0x0],rax
  4091a4:	test   rax,rax
  4091a7:	je     409209 <isspace@plt+0x58f9>
  4091a9:	mov    QWORD PTR [rbp+0x70],rbx
  4091ad:	lea    rax,[rip+0x36d44]        # 43fef8 <isspace@plt+0x3c5e8>
  4091b4:	mov    QWORD PTR [rbp+0x50],rax
  4091b8:	mov    rdi,rbp
  4091bb:	xor    esi,esi
  4091bd:	xor    edx,edx
  4091bf:	call   40eba0 <isspace@plt+0xb290>
  4091c4:	mov    DWORD PTR [rsp+0x4c],eax
  4091c8:	test   eax,eax
  4091ca:	je     409213 <isspace@plt+0x5903>
  4091cc:	mov    rdi,rbp
  4091cf:	jmp    4095e8 <isspace@plt+0x5cd8>
  4091d4:	xor    eax,eax
  4091d6:	jmp    4095f1 <isspace@plt+0x5ce1>
  4091db:	mov    DWORD PTR [rsp+0x4c],0xa
  4091e3:	mov    rdi,rbx
  4091e6:	call   409620 <isspace@plt+0x5d10>
  4091eb:	mov    eax,DWORD PTR [rsp+0x4c]
  4091ef:	test   eax,eax
  4091f1:	jne    4095f1 <isspace@plt+0x5ce1>
  4091f7:	mov    DWORD PTR [rsp+0x4c],0x1
  4091ff:	mov    eax,0x1
  409204:	jmp    4095f1 <isspace@plt+0x5ce1>
  409209:	mov    rdi,rbp
  40920c:	call   4030d0 <free@plt>
  409211:	jmp    4091e3 <isspace@plt+0x58d3>
  409213:	mov    rax,QWORD PTR [r12+0x8]
  409218:	test   rax,rax
  40921b:	je     409257 <isspace@plt+0x5947>
  40921d:	vpxor  xmm0,xmm0,xmm0
  409221:	cmp    BYTE PTR [rax+0x18],0x0
  409225:	je     409242 <isspace@plt+0x5932>
  409227:	nop    WORD PTR [rax+rax*1+0x0]
  409230:	mov    rax,QWORD PTR [rax+0x458]
  409237:	test   rax,rax
  40923a:	je     409257 <isspace@plt+0x5947>
  40923c:	cmp    BYTE PTR [rax+0x18],0x0
  409240:	jne    409230 <isspace@plt+0x5920>
  409242:	vmovdqu XMMWORD PTR [rax+0x440],xmm0
  40924a:	mov    QWORD PTR [rax+0x450],0x0
  409255:	jmp    409230 <isspace@plt+0x5920>
  409257:	mov    rax,QWORD PTR [r12+0x9a0]
  40925f:	mov    al,BYTE PTR [rax+0x58]
  409262:	mov    BYTE PTR [rsp+0xf],al
  409266:	mov    rax,QWORD PTR [r12+0x30]
  40926b:	test   rax,rax
  40926e:	je     409280 <isspace@plt+0x5970>
  409270:	mov    rdi,QWORD PTR [rax+0x18]
  409274:	call   41e510 <isspace@plt+0x1ac00>
  409279:	mov    QWORD PTR [rsp+0x10],rax
  40927e:	jmp    409289 <isspace@plt+0x5979>
  409280:	mov    QWORD PTR [rsp+0x10],0xffffffffffffffff
  409289:	call   417080 <isspace@plt+0x13770>
  40928e:	mov    QWORD PTR [rsp+0x38],rax
  409293:	mov    QWORD PTR [rsp+0x40],rdx
  409298:	mov    rsi,QWORD PTR [r12+0x30]
  40929d:	lea    r8,[rsp+0x38]
  4092a2:	mov    rdi,r12
  4092a5:	mov    QWORD PTR [rsp+0x18],rbp
  4092aa:	mov    rdx,rbp
  4092ad:	xor    ecx,ecx
  4092af:	call   4096c0 <isspace@plt+0x5db0>
  4092b4:	mov    r15,QWORD PTR [r12+0x8]
  4092b9:	test   r15,r15
  4092bc:	je     409522 <isspace@plt+0x5c12>
  4092c2:	mov    QWORD PTR [rsp+0x20],r12
  4092c7:	cmp    BYTE PTR [r15+0x18],0x0
  4092cc:	jne    4092e0 <isspace@plt+0x59d0>
  4092ce:	jmp    4092f7 <isspace@plt+0x59e7>
  4092d0:	mov    rdi,r12
  4092d3:	mov    rsi,r15
  4092d6:	call   422d80 <isspace@plt+0x1f470>
  4092db:	nop    DWORD PTR [rax+rax*1+0x0]
  4092e0:	mov    r15,QWORD PTR [r15+0x458]
  4092e7:	test   r15,r15
  4092ea:	je     409522 <isspace@plt+0x5c12>
  4092f0:	cmp    BYTE PTR [r15+0x18],0x0
  4092f5:	jne    4092e0 <isspace@plt+0x59d0>
  4092f7:	mov    eax,DWORD PTR [r15+0x450]
  4092fe:	test   eax,eax
  409300:	je     40933f <isspace@plt+0x5a2f>
  409302:	mov    DWORD PTR [rsp+0x4c],eax
  409306:	mov    rbp,QWORD PTR [r15+0x440]
  40930d:	test   rbp,rbp
  409310:	je     4092e0 <isspace@plt+0x59d0>
  409312:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40931c:	nop    DWORD PTR [rax+0x0]
  409320:	mov    rdi,QWORD PTR [rbp+0x28]
  409324:	mov    rbx,QWORD PTR [rbp+0x38]
  409328:	call   4030d0 <free@plt>
  40932d:	mov    rdi,rbp
  409330:	call   4030d0 <free@plt>
  409335:	mov    rbp,rbx
  409338:	test   rbx,rbx
  40933b:	jne    409320 <isspace@plt+0x5a10>
  40933d:	jmp    4092e0 <isspace@plt+0x59d0>
  40933f:	mov    rdi,r12
  409342:	mov    rsi,r15
  409345:	call   422d80 <isspace@plt+0x1f470>
  40934a:	mov    r14,QWORD PTR [r15+0x440]
  409351:	test   r14,r14
  409354:	je     4092d0 <isspace@plt+0x59c0>
  40935a:	xor    r12d,r12d
  40935d:	jmp    409387 <isspace@plt+0x5a77>
  40935f:	mov    rdi,r13
  409362:	lea    rsi,[rsp+0x28]
  409367:	call   41f850 <isspace@plt+0x1bf40>
  40936c:	mov    rdi,QWORD PTR [r14+0x10]
  409370:	mov    esi,0x1
  409375:	call   41f570 <isspace@plt+0x1bc60>
  40937a:	mov    r14,QWORD PTR [r14+0x38]
  40937e:	test   r14,r14
  409381:	je     4094e6 <isspace@plt+0x5bd6>
  409387:	vmovq  xmm0,r12
  40938c:	vpbroadcastq xmm0,xmm0
  409391:	vpaddq xmm0,xmm0,XMMWORD PTR [r14+0x18]
  409397:	vmovdqu XMMWORD PTR [r14+0x18],xmm0
  40939d:	test   BYTE PTR [r14],0x2
  4093a1:	je     4093e0 <isspace@plt+0x5ad0>
  4093a3:	lea    rbp,[r14+0x18]
  4093a7:	mov    rdi,QWORD PTR [r15]
  4093aa:	mov    rsi,rbp
  4093ad:	call   410430 <isspace@plt+0xcb20>
  4093b2:	mov    rdi,rbp
  4093b5:	call   417020 <isspace@plt+0x13710>
  4093ba:	sub    r12,rax
  4093bd:	mov    rdi,QWORD PTR [r14+0x10]
  4093c1:	test   rdi,rdi
  4093c4:	je     4093e0 <isspace@plt+0x5ad0>
  4093c6:	cmp    DWORD PTR [r14],0x2
  4093ca:	jne    4093e0 <isspace@plt+0x5ad0>
  4093cc:	cmp    BYTE PTR [rsp+0xf],0x0
  4093d1:	je     4094c1 <isspace@plt+0x5bb1>
  4093d7:	call   41eeb0 <isspace@plt+0x1b5a0>
  4093dc:	nop    DWORD PTR [rax+0x0]
  4093e0:	test   BYTE PTR [r14],0x1
  4093e4:	je     40937a <isspace@plt+0x5a6a>
  4093e6:	mov    eax,DWORD PTR [r14+0x40]
  4093ea:	test   eax,eax
  4093ec:	jle    409423 <isspace@plt+0x5b13>
  4093ee:	mov    rcx,QWORD PTR [r14+0x30]
  4093f2:	xor    ebp,ebp
  4093f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4093fe:	xchg   ax,ax
  409400:	mov    rdi,QWORD PTR [r15]
  409403:	mov    rsi,QWORD PTR [r14+0x18]
  409407:	mov    rdx,QWORD PTR [r14+0x28]
  40940b:	call   40efe0 <isspace@plt+0xb6d0>
  409410:	mov    rcx,QWORD PTR [r14+0x30]
  409414:	add    r12,rcx
  409417:	inc    ebp
  409419:	mov    eax,DWORD PTR [r14+0x40]
  40941d:	cmp    ebp,eax
  40941f:	jl     409400 <isspace@plt+0x5af0>
  409421:	jmp    409427 <isspace@plt+0x5b17>
  409423:	mov    rcx,QWORD PTR [r14+0x30]
  409427:	mov    rdi,QWORD PTR [r14+0x18]
  40942b:	movsxd rsi,eax
  40942e:	imul   rsi,rcx
  409432:	add    rsi,rdi
  409435:	call   417250 <isspace@plt+0x13940>
  40943a:	mov    rbp,rax
  40943d:	mov    QWORD PTR [rsp+0x28],rax
  409442:	mov    QWORD PTR [rsp+0x30],rdx
  409447:	mov    r13,QWORD PTR [r14+0x10]
  40944b:	test   r13,r13
  40944e:	je     409485 <isspace@plt+0x5b75>
  409450:	cmp    BYTE PTR [rsp+0xf],0x0
  409455:	jne    40935f <isspace@plt+0x5a4f>
  40945b:	mov    rbx,rdx
  40945e:	mov    rdi,QWORD PTR [r14+0x28]
  409462:	mov    rdx,QWORD PTR [r14+0x30]
  409466:	mov    esi,0xa
  40946b:	call   403410 <memchr@plt>
  409470:	mov    rdi,r13
  409473:	test   rax,rax
  409476:	je     4094d9 <isspace@plt+0x5bc9>
  409478:	mov    rsi,rbp
  40947b:	call   41a7c0 <isspace@plt+0x16eb0>
  409480:	jmp    40937a <isspace@plt+0x5a6a>
  409485:	cmp    BYTE PTR [rsp+0xf],0x0
  40948a:	je     40937a <isspace@plt+0x5a6a>
  409490:	mov    rax,QWORD PTR [r14+0x8]
  409494:	mov    rdi,QWORD PTR [rax+0x18]
  409498:	mov    rsi,rbp
  40949b:	call   41b500 <isspace@plt+0x17bf0>
  4094a0:	test   rax,rax
  4094a3:	je     40937a <isspace@plt+0x5a6a>
  4094a9:	mov    rbp,rax
  4094ac:	mov    rdi,rax
  4094af:	lea    rsi,[rsp+0x28]
  4094b4:	call   41f850 <isspace@plt+0x1bf40>
  4094b9:	mov    rdi,rbp
  4094bc:	jmp    409370 <isspace@plt+0x5a60>
  4094c1:	mov    rsi,QWORD PTR [rbp+0x0]
  4094c5:	call   41a7c0 <isspace@plt+0x16eb0>
  4094ca:	test   BYTE PTR [r14],0x1
  4094ce:	je     40937a <isspace@plt+0x5a6a>
  4094d4:	jmp    4093e6 <isspace@plt+0x5ad6>
  4094d9:	mov    rsi,rbx
  4094dc:	call   41a7c0 <isspace@plt+0x16eb0>
  4094e1:	jmp    40937a <isspace@plt+0x5a6a>
  4094e6:	mov    rbp,QWORD PTR [r15+0x440]
  4094ed:	test   rbp,rbp
  4094f0:	mov    r12,QWORD PTR [rsp+0x20]
  4094f5:	je     4092d0 <isspace@plt+0x59c0>
  4094fb:	nop    DWORD PTR [rax+rax*1+0x0]
  409500:	mov    rdi,QWORD PTR [rbp+0x28]
  409504:	mov    rbx,QWORD PTR [rbp+0x38]
  409508:	call   4030d0 <free@plt>
  40950d:	mov    rdi,rbp
  409510:	call   4030d0 <free@plt>
  409515:	mov    rbp,rbx
  409518:	test   rbx,rbx
  40951b:	jne    409500 <isspace@plt+0x5bf0>
  40951d:	jmp    4092d0 <isspace@plt+0x59c0>
  409522:	mov    rbx,QWORD PTR [r12+0x28]
  409527:	test   rbx,rbx
  40952a:	je     409545 <isspace@plt+0x5c35>
  40952c:	nop    DWORD PTR [rax+0x0]
  409530:	mov    rdi,QWORD PTR [rbx+0x18]
  409534:	call   41fd00 <isspace@plt+0x1c3f0>
  409539:	mov    rbx,QWORD PTR [rbx+0x2e0]
  409540:	test   rbx,rbx
  409543:	jne    409530 <isspace@plt+0x5c20>
  409545:	mov    rax,QWORD PTR [r12+0x30]
  40954a:	test   rax,rax
  40954d:	mov    r14,QWORD PTR [rsp+0x18]
  409552:	je     4095e5 <isspace@plt+0x5cd5>
  409558:	mov    rbx,QWORD PTR [rsp+0x10]
  40955d:	cmp    rbx,0xffffffffffffffff
  409561:	je     409582 <isspace@plt+0x5c72>
  409563:	mov    rdi,QWORD PTR [rax+0x18]
  409567:	call   41ef60 <isspace@plt+0x1b650>
  40956c:	test   rax,rax
  40956f:	je     409582 <isspace@plt+0x5c72>
  409571:	mov    rax,QWORD PTR [r12+0x30]
  409576:	mov    rdi,QWORD PTR [rax+0x18]
  40957a:	mov    rsi,rbx
  40957d:	call   41a790 <isspace@plt+0x16e80>
  409582:	mov    rax,QWORD PTR [r12+0x30]
  409587:	mov    rdi,QWORD PTR [rax+0x18]
  40958b:	call   41efa0 <isspace@plt+0x1b690>
  409590:	mov    rdi,rax
  409593:	call   41ee50 <isspace@plt+0x1b540>
  409598:	mov    rdi,r12
  40959b:	call   426860 <isspace@plt+0x22f50>
  4095a0:	mov    rax,QWORD PTR [r12+0x30]
  4095a5:	mov    rdi,QWORD PTR [rax+0x18]
  4095a9:	call   41efa0 <isspace@plt+0x1b690>
  4095ae:	xor    ebx,ebx
  4095b0:	test   rax,rax
  4095b3:	je     4095db <isspace@plt+0x5ccb>
  4095b5:	mov    rbp,rax
  4095b8:	mov    rdi,rbp
  4095bb:	call   41f600 <isspace@plt+0x1bcf0>
  4095c0:	test   al,al
  4095c2:	jne    4095d6 <isspace@plt+0x5cc6>
  4095c4:	mov    rdi,rbp
  4095c7:	call   41f080 <isspace@plt+0x1b770>
  4095cc:	mov    rbp,rax
  4095cf:	test   rax,rax
  4095d2:	jne    4095b8 <isspace@plt+0x5ca8>
  4095d4:	jmp    4095db <isspace@plt+0x5ccb>
  4095d6:	mov    ebx,0x2
  4095db:	mov    rdi,r12
  4095de:	mov    esi,ebx
  4095e0:	call   426fe0 <isspace@plt+0x236d0>
  4095e5:	mov    rdi,r14
  4095e8:	call   409620 <isspace@plt+0x5d10>
  4095ed:	mov    eax,DWORD PTR [rsp+0x4c]
  4095f1:	mov    rcx,QWORD PTR fs:0x28
  4095fa:	cmp    rcx,QWORD PTR [rsp+0x50]
  4095ff:	jne    409610 <isspace@plt+0x5d00>
  409601:	add    rsp,0x58
  409605:	pop    rbx
  409606:	pop    r12
  409608:	pop    r13
  40960a:	pop    r14
  40960c:	pop    r15
  40960e:	pop    rbp
  40960f:	ret    
  409610:	call   403280 <__stack_chk_fail@plt>
  409615:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40961f:	nop
  409620:	push   r14
  409622:	push   rbx
  409623:	push   rax
  409624:	mov    rax,QWORD PTR fs:0x28
  40962d:	mov    QWORD PTR [rsp],rax
  409631:	test   rdi,rdi
  409634:	je     40969b <isspace@plt+0x5d8b>
  409636:	mov    r14,rdi
  409639:	mov    rdi,QWORD PTR [rdi+0x70]
  40963d:	test   rdi,rdi
  409640:	je     409661 <isspace@plt+0x5d51>
  409642:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40964c:	nop    DWORD PTR [rax+0x0]
  409650:	mov    rbx,QWORD PTR [rdi+0x78]
  409654:	call   409620 <isspace@plt+0x5d10>
  409659:	mov    rdi,rbx
  40965c:	test   rbx,rbx
  40965f:	jne    409650 <isspace@plt+0x5d40>
  409661:	mov    rdi,QWORD PTR [r14]
  409664:	test   rdi,rdi
  409667:	je     409681 <isspace@plt+0x5d71>
  409669:	lea    rbx,[r14+0x8]
  40966d:	nop    DWORD PTR [rax]
  409670:	call   4030d0 <free@plt>
  409675:	mov    rdi,QWORD PTR [rbx]
  409678:	add    rbx,0x8
  40967c:	test   rdi,rdi
  40967f:	jne    409670 <isspace@plt+0x5d60>
  409681:	mov    rdi,QWORD PTR [r14+0x40]
  409685:	call   40e970 <isspace@plt+0xb060>
  40968a:	mov    rdi,QWORD PTR [r14+0x48]
  40968e:	call   42ae70 <isspace@plt+0x27560>
  409693:	mov    rdi,r14
  409696:	call   4030d0 <free@plt>
  40969b:	mov    rax,QWORD PTR fs:0x28
  4096a4:	cmp    rax,QWORD PTR [rsp]
  4096a8:	jne    4096b2 <isspace@plt+0x5da2>
  4096aa:	add    rsp,0x8
  4096ae:	pop    rbx
  4096af:	pop    r14
  4096b1:	ret    
  4096b2:	call   403280 <__stack_chk_fail@plt>
  4096b7:	nop    WORD PTR [rax+rax*1+0x0]
  4096c0:	push   rbp
  4096c1:	push   r15
  4096c3:	push   r14
  4096c5:	push   r13
  4096c7:	push   r12
  4096c9:	push   rbx
  4096ca:	sub    rsp,0x18
  4096ce:	mov    r15,r8
  4096d1:	mov    rbx,rcx
  4096d4:	mov    r13,rdx
  4096d7:	mov    r14,rsi
  4096da:	mov    r12,rdi
  4096dd:	mov    rax,QWORD PTR fs:0x28
  4096e6:	mov    QWORD PTR [rsp+0x10],rax
  4096eb:	test   rsi,rsi
  4096ee:	je     40970f <isspace@plt+0x5dff>
  4096f0:	mov    rdi,QWORD PTR [r13+0x40]
  4096f4:	test   rdi,rdi
  4096f7:	je     40970f <isspace@plt+0x5dff>
  4096f9:	mov    rsi,QWORD PTR [r14+0x10]
  4096fd:	mov    rdx,rbx
  409700:	mov    rcx,r15
  409703:	call   40ec50 <isspace@plt+0xb340>
  409708:	mov    QWORD PTR [r15],rax
  40970b:	mov    QWORD PTR [r15+0x8],rdx
  40970f:	inc    DWORD PTR [r13+0x64]
  409713:	mov    rax,QWORD PTR [r13+0x0]
  409717:	cmp    BYTE PTR [rax],0x7b
  40971a:	jne    409754 <isspace@plt+0x5e44>
  40971c:	mov    QWORD PTR [rsp+0x8],rbx
  409721:	mov    rbp,QWORD PTR [r13+0x70]
  409725:	test   rbp,rbp
  409728:	je     409771 <isspace@plt+0x5e61>
  40972a:	nop    WORD PTR [rax+rax*1+0x0]
  409730:	mov    rdi,r12
  409733:	mov    rsi,r14
  409736:	mov    rdx,rbp
  409739:	xor    ecx,ecx
  40973b:	mov    r8,r15
  40973e:	call   4096c0 <isspace@plt+0x5db0>
  409743:	mov    ebx,eax
  409745:	test   al,al
  409747:	je     409773 <isspace@plt+0x5e63>
  409749:	mov    rbp,QWORD PTR [rbp+0x78]
  40974d:	test   rbp,rbp
  409750:	jne    409730 <isspace@plt+0x5e20>
  409752:	jmp    409773 <isspace@plt+0x5e63>
  409754:	mov    rax,QWORD PTR [r13+0x50]
  409758:	mov    rdi,r12
  40975b:	mov    rsi,r14
  40975e:	mov    rdx,r13
  409761:	mov    rcx,r13
  409764:	mov    r8,rbx
  409767:	mov    r9,r15
  40976a:	call   QWORD PTR [rax+0x20]
  40976d:	mov    ebx,eax
  40976f:	jmp    40977d <isspace@plt+0x5e6d>
  409771:	mov    bl,0x1
  409773:	mov    rdi,QWORD PTR [rsp+0x8]
  409778:	call   41eeb0 <isspace@plt+0x1b5a0>
  40977d:	test   bl,bl
  40977f:	setne  al
  409782:	mov    rcx,QWORD PTR fs:0x28
  40978b:	cmp    rcx,QWORD PTR [rsp+0x10]
  409790:	jne    4097a1 <isspace@plt+0x5e91>
  409792:	add    rsp,0x18
  409796:	pop    rbx
  409797:	pop    r12
  409799:	pop    r13
  40979b:	pop    r14
  40979d:	pop    r15
  40979f:	pop    rbp
  4097a0:	ret    
  4097a1:	call   403280 <__stack_chk_fail@plt>
  4097a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4097b0:	push   rbp
  4097b1:	push   r15
  4097b3:	push   r14
  4097b5:	push   r13
  4097b7:	push   r12
  4097b9:	push   rbx
  4097ba:	sub    rsp,0x18
  4097be:	mov    rbx,rdx
  4097c1:	mov    r14,rsi
  4097c4:	mov    r13,rdi
  4097c7:	mov    rax,QWORD PTR fs:0x28
  4097d0:	mov    QWORD PTR [rsp+0x10],rax
  4097d5:	call   404230 <isspace@plt+0x920>
  4097da:	cmp    BYTE PTR [rbx],0x0
  4097dd:	je     4098d6 <isspace@plt+0x5fc6>
  4097e3:	lea    r15,[rip+0x25ba1]        # 42f38b <isspace@plt+0x2ba7b>
  4097ea:	mov    rdi,rbx
  4097ed:	mov    rsi,r15
  4097f0:	call   403400 <strcspn@plt>
  4097f5:	mov    rbp,rax
  4097f8:	jmp    409857 <isspace@plt+0x5f47>
  4097fa:	nop    WORD PTR [rax+rax*1+0x0]
  409800:	mov    QWORD PTR [rsp+0x8],0x0
  409809:	mov    ecx,0x2
  40980e:	mov    r12,rax
  409811:	mov    eax,ecx
  409813:	lea    rax,[rax+rax*4]
  409817:	lea    rsi,[r14+rax*8]
  40981b:	add    rsi,0x40
  40981f:	mov    rdi,r14
  409822:	lea    rdx,[rsp+0x8]
  409827:	call   42a330 <isspace@plt+0x26a20>
  40982c:	mov    rsi,rax
  40982f:	mov    rdx,QWORD PTR [rsp+0x8]
  409834:	mov    rdi,r13
  409837:	call   404460 <isspace@plt+0xb50>
  40983c:	lea    rbx,[r12+0x1]
  409841:	mov    rdi,rbx
  409844:	mov    rsi,r15
  409847:	call   403400 <strcspn@plt>
  40984c:	mov    rbp,rax
  40984f:	cmp    BYTE PTR [r12+0x1],0x0
  409855:	je     4098d6 <isspace@plt+0x5fc6>
  409857:	mov    rdi,r13
  40985a:	mov    rsi,rbx
  40985d:	mov    rdx,rbp
  409860:	call   404460 <isspace@plt+0xb50>
  409865:	lea    rax,[rbx+rbp*1]
  409869:	movsx  ecx,BYTE PTR [rbx+rbp*1]
  40986d:	cmp    ecx,0x26
  409870:	je     409800 <isspace@plt+0x5ef0>
  409872:	cmp    ecx,0x5c
  409875:	je     409880 <isspace@plt+0x5f70>
  409877:	test   ecx,ecx
  409879:	jne    4098b4 <isspace@plt+0x5fa4>
  40987b:	jmp    4098d6 <isspace@plt+0x5fc6>
  40987d:	nop    DWORD PTR [rax]
  409880:	lea    r12,[rax+0x1]
  409884:	movsx  ecx,BYTE PTR [rax+0x1]
  409888:	lea    edx,[rcx-0x31]
  40988b:	cmp    dl,0x9
  40988e:	jae    4098a7 <isspace@plt+0x5f97>
  409890:	add    ecx,0xffffffd2
  409893:	mov    QWORD PTR [rsp+0x8],0x0
  40989c:	cmp    ecx,0x30
  40989f:	jne    409811 <isspace@plt+0x5f01>
  4098a5:	jmp    4098c0 <isspace@plt+0x5fb0>
  4098a7:	cmp    cl,0x5c
  4098aa:	je     4098b1 <isspace@plt+0x5fa1>
  4098ac:	cmp    cl,0x26
  4098af:	jne    4098b4 <isspace@plt+0x5fa4>
  4098b1:	mov    rax,r12
  4098b4:	mov    QWORD PTR [rsp+0x8],0x0
  4098bd:	mov    r12,rax
  4098c0:	mov    QWORD PTR [rsp+0x8],0x1
  4098c9:	mov    edx,0x1
  4098ce:	mov    rsi,r12
  4098d1:	jmp    409834 <isspace@plt+0x5f24>
  4098d6:	mov    rax,QWORD PTR fs:0x28
  4098df:	cmp    rax,QWORD PTR [rsp+0x10]
  4098e4:	jne    4098f8 <isspace@plt+0x5fe8>
  4098e6:	mov    rax,r13
  4098e9:	add    rsp,0x18
  4098ed:	pop    rbx
  4098ee:	pop    r12
  4098f0:	pop    r13
  4098f2:	pop    r14
  4098f4:	pop    r15
  4098f6:	pop    rbp
  4098f7:	ret    
  4098f8:	call   403280 <__stack_chk_fail@plt>
  4098fd:	nop    DWORD PTR [rax]
  409900:	push   rbp
  409901:	push   r15
  409903:	push   r14
  409905:	push   rbx
  409906:	push   rax
  409907:	mov    rax,QWORD PTR fs:0x28
  409910:	mov    QWORD PTR [rsp],rax
  409914:	mov    r14b,0x1
  409917:	test   rsi,rsi
  40991a:	je     40997c <isspace@plt+0x606c>
  40991c:	mov    rbp,rsi
  40991f:	mov    rbx,rdi
  409922:	mov    rdi,QWORD PTR [rdi+0x810]
  409929:	call   408500 <isspace@plt+0x4bf0>
  40992e:	test   rax,rax
  409931:	je     409979 <isspace@plt+0x6069>
  409933:	mov    r15,rax
  409936:	mov    rdi,QWORD PTR [rbx+0x808]
  40993d:	mov    rsi,rbp
  409940:	call   408ab0 <isspace@plt+0x51a0>
  409945:	test   rax,rax
  409948:	je     409979 <isspace@plt+0x6069>
  40994a:	mov    rdi,QWORD PTR [rbx+0x810]
  409951:	mov    rsi,rbp
  409954:	call   408ab0 <isspace@plt+0x51a0>
  409959:	test   rax,rax
  40995c:	je     409979 <isspace@plt+0x6069>
  40995e:	mov    rdi,QWORD PTR [r15]
  409961:	call   4030d0 <free@plt>
  409966:	mov    rdi,QWORD PTR [r15+0x8]
  40996a:	call   4030d0 <free@plt>
  40996f:	mov    rdi,r15
  409972:	call   4030d0 <free@plt>
  409977:	jmp    40997c <isspace@plt+0x606c>
  409979:	xor    r14d,r14d
  40997c:	mov    rax,QWORD PTR fs:0x28
  409985:	cmp    rax,QWORD PTR [rsp]
  409989:	jne    409999 <isspace@plt+0x6089>
  40998b:	mov    eax,r14d
  40998e:	add    rsp,0x8
  409992:	pop    rbx
  409993:	pop    r14
  409995:	pop    r15
  409997:	pop    rbp
  409998:	ret    
  409999:	call   403280 <__stack_chk_fail@plt>
  40999e:	xchg   ax,ax
  4099a0:	push   r14
  4099a2:	push   rbx
  4099a3:	push   rax
  4099a4:	mov    r14,rdi
  4099a7:	mov    rax,QWORD PTR fs:0x28
  4099b0:	mov    QWORD PTR [rsp],rax
  4099b4:	vmovq  xmm0,r14
  4099b9:	vpbroadcastq ymm0,xmm0
  4099be:	lea    rax,[rip+0x360db]        # 43faa0 <isspace@plt+0x3c190>
  4099c5:	vmovq  xmm1,rax
  4099ca:	lea    rax,[rip+0x36097]        # 43fa68 <isspace@plt+0x3c158>
  4099d1:	vmovq  xmm2,rax
  4099d6:	vpunpcklqdq xmm1,xmm2,xmm1
  4099da:	lea    rax,[rip+0x3604f]        # 43fa30 <isspace@plt+0x3c120>
  4099e1:	vmovq  xmm2,rax
  4099e6:	vpslldq xmm2,xmm2,0x8
  4099eb:	vinserti128 ymm1,ymm2,xmm1,0x1
  4099f1:	lea    rax,[rip+0x36188]        # 43fb80 <isspace@plt+0x3c270>
  4099f8:	vmovq  xmm2,rax
  4099fd:	lea    rax,[rip+0x36144]        # 43fb48 <isspace@plt+0x3c238>
  409a04:	vmovq  xmm3,rax
  409a09:	vpunpcklqdq xmm2,xmm3,xmm2
  409a0d:	lea    rax,[rip+0x360fc]        # 43fb10 <isspace@plt+0x3c200>
  409a14:	vmovq  xmm3,rax
  409a19:	lea    rax,[rip+0x360b8]        # 43fad8 <isspace@plt+0x3c1c8>
  409a20:	vmovq  xmm4,rax
  409a25:	vpunpcklqdq xmm3,xmm4,xmm3
  409a29:	vinserti128 ymm2,ymm3,xmm2,0x1
  409a2f:	lea    rax,[rip+0x3622a]        # 43fc60 <isspace@plt+0x3c350>
  409a36:	vmovq  xmm3,rax
  409a3b:	lea    rax,[rip+0x361e6]        # 43fc28 <isspace@plt+0x3c318>
  409a42:	vmovq  xmm4,rax
  409a47:	vpunpcklqdq xmm3,xmm4,xmm3
  409a4b:	lea    rax,[rip+0x3619e]        # 43fbf0 <isspace@plt+0x3c2e0>
  409a52:	vmovq  xmm4,rax
  409a57:	lea    rax,[rip+0x3615a]        # 43fbb8 <isspace@plt+0x3c2a8>
  409a5e:	vmovq  xmm5,rax
  409a63:	vpunpcklqdq xmm4,xmm5,xmm4
  409a67:	vinserti128 ymm3,ymm4,xmm3,0x1
  409a6d:	lea    rax,[rip+0x362cc]        # 43fd40 <isspace@plt+0x3c430>
  409a74:	vmovq  xmm4,rax
  409a79:	lea    rax,[rip+0x36288]        # 43fd08 <isspace@plt+0x3c3f8>
  409a80:	vmovq  xmm5,rax
  409a85:	vpunpcklqdq xmm4,xmm5,xmm4
  409a89:	lea    rax,[rip+0x36240]        # 43fcd0 <isspace@plt+0x3c3c0>
  409a90:	vmovq  xmm5,rax
  409a95:	lea    rax,[rip+0x361fc]        # 43fc98 <isspace@plt+0x3c388>
  409a9c:	vmovq  xmm6,rax
  409aa1:	vpunpcklqdq xmm5,xmm6,xmm5
  409aa5:	vinserti128 ymm4,ymm5,xmm4,0x1
  409aab:	vpcmpeqq ymm4,ymm0,ymm4
  409ab0:	vpcmpeqq ymm3,ymm0,ymm3
  409ab5:	vpackssdw ymm3,ymm3,ymm4
  409ab9:	vpermq ymm3,ymm3,0xd8
  409abf:	vpcmpeqq ymm2,ymm0,ymm2
  409ac4:	vpcmpeqq ymm0,ymm0,ymm1
  409ac9:	vpackssdw ymm0,ymm0,ymm2
  409acd:	vpermq ymm0,ymm0,0xd8
  409ad3:	vpackssdw ymm0,ymm0,ymm3
  409ad7:	vpermq ymm0,ymm0,0xd8
  409add:	vextracti128 xmm1,ymm0,0x1
  409ae3:	vpacksswb xmm0,xmm0,xmm1
  409ae7:	vpmovmskb eax,xmm0
  409aeb:	test   ax,ax
  409aee:	jne    409b48 <isspace@plt+0x6238>
  409af0:	lea    rax,[rip+0x36281]        # 43fd78 <isspace@plt+0x3c468>
  409af7:	cmp    r14,rax
  409afa:	je     409b48 <isspace@plt+0x6238>
  409afc:	lea    rax,[rip+0x362ad]        # 43fdb0 <isspace@plt+0x3c4a0>
  409b03:	cmp    r14,rax
  409b06:	je     409b48 <isspace@plt+0x6238>
  409b08:	lea    rax,[rip+0x362d9]        # 43fde8 <isspace@plt+0x3c4d8>
  409b0f:	cmp    r14,rax
  409b12:	je     409b48 <isspace@plt+0x6238>
  409b14:	mov    rdi,QWORD PTR [r14]
  409b17:	test   rdi,rdi
  409b1a:	je     409b34 <isspace@plt+0x6224>
  409b1c:	lea    rbx,[r14+0x8]
  409b20:	vzeroupper 
  409b23:	call   4030d0 <free@plt>
  409b28:	mov    rdi,QWORD PTR [rbx]
  409b2b:	add    rbx,0x8
  409b2f:	test   rdi,rdi
  409b32:	jne    409b20 <isspace@plt+0x6210>
  409b34:	mov    rdi,QWORD PTR [r14+0x20]
  409b38:	vzeroupper 
  409b3b:	call   4030d0 <free@plt>
  409b40:	mov    rdi,r14
  409b43:	call   4030d0 <free@plt>
  409b48:	mov    rax,QWORD PTR fs:0x28
  409b51:	cmp    rax,QWORD PTR [rsp]
  409b55:	jne    409b62 <isspace@plt+0x6252>
  409b57:	add    rsp,0x8
  409b5b:	pop    rbx
  409b5c:	pop    r14
  409b5e:	vzeroupper 
  409b61:	ret    
  409b62:	vzeroupper 
  409b65:	call   403280 <__stack_chk_fail@plt>
  409b6a:	nop    WORD PTR [rax+rax*1+0x0]
  409b70:	push   r15
  409b72:	push   r14
  409b74:	push   rbx
  409b75:	sub    rsp,0x10
  409b79:	mov    r15,rdi
  409b7c:	mov    rax,QWORD PTR fs:0x28
  409b85:	mov    QWORD PTR [rsp+0x8],rax
  409b8a:	mov    rdi,QWORD PTR [rdi+0x818]
  409b91:	call   408500 <isspace@plt+0x4bf0>
  409b96:	test   rax,rax
  409b99:	je     409bd9 <isspace@plt+0x62c9>
  409b9b:	mov    r14,rax
  409b9e:	mov    rsi,QWORD PTR [rax]
  409ba1:	test   rsi,rsi
  409ba4:	je     409bcd <isspace@plt+0x62bd>
  409ba6:	mov    rbx,r14
  409ba9:	add    rbx,0x8
  409bad:	nop    DWORD PTR [rax]
  409bb0:	mov    rdi,QWORD PTR [r15+0x818]
  409bb7:	call   408ab0 <isspace@plt+0x51a0>
  409bbc:	test   rax,rax
  409bbf:	je     409bd9 <isspace@plt+0x62c9>
  409bc1:	mov    rsi,QWORD PTR [rbx]
  409bc4:	add    rbx,0x8
  409bc8:	test   rsi,rsi
  409bcb:	jne    409bb0 <isspace@plt+0x62a0>
  409bcd:	mov    rdi,r14
  409bd0:	call   4099a0 <isspace@plt+0x6090>
  409bd5:	mov    al,0x1
  409bd7:	jmp    409bdb <isspace@plt+0x62cb>
  409bd9:	xor    eax,eax
  409bdb:	mov    rcx,QWORD PTR fs:0x28
  409be4:	cmp    rcx,QWORD PTR [rsp+0x8]
  409be9:	jne    409bf5 <isspace@plt+0x62e5>
  409beb:	add    rsp,0x10
  409bef:	pop    rbx
  409bf0:	pop    r14
  409bf2:	pop    r15
  409bf4:	ret    
  409bf5:	call   403280 <__stack_chk_fail@plt>
  409bfa:	nop    WORD PTR [rax+rax*1+0x0]
  409c00:	push   rbp
  409c01:	push   r15
  409c03:	push   r14
  409c05:	push   r13
  409c07:	push   r12
  409c09:	push   rbx
  409c0a:	sub    rsp,0x48
  409c0e:	mov    r13,rsi
  409c11:	mov    rax,QWORD PTR fs:0x28
  409c1a:	mov    QWORD PTR [rsp+0x40],rax
  409c1f:	test   rsi,rsi
  409c22:	je     409d5e <isspace@plt+0x644e>
  409c28:	mov    r15,r9
  409c2b:	mov    r14,r8
  409c2e:	mov    rbp,rdx
  409c31:	mov    rsi,rdi
  409c34:	mov    rdx,QWORD PTR [rcx+0x8]
  409c38:	lea    rbx,[rsp+0x18]
  409c3d:	mov    rdi,rbx
  409c40:	call   4097b0 <isspace@plt+0x5ea0>
  409c45:	mov    rdi,rbx
  409c48:	call   404d70 <isspace@plt+0x1460>
  409c4d:	mov    QWORD PTR [rsp+0x10],rax
  409c52:	mov    rdi,rbx
  409c55:	call   404e90 <isspace@plt+0x1580>
  409c5a:	mov    r12,rax
  409c5d:	mov    rdi,QWORD PTR [r15+0x8]
  409c61:	mov    eax,DWORD PTR [rbp+0x58]
  409c64:	mov    DWORD PTR [rsp+0xc],eax
  409c68:	mov    rsi,rdi
  409c6b:	call   417250 <isspace@plt+0x13940>
  409c70:	mov    QWORD PTR [rsp+0x30],rax
  409c75:	mov    QWORD PTR [rsp+0x38],rdx
  409c7a:	mov    rbp,QWORD PTR [r13+0x10]
  409c7e:	lea    rdi,[rsp+0x30]
  409c83:	call   416fc0 <isspace@plt+0x136b0>
  409c88:	test   al,al
  409c8a:	je     409d56 <isspace@plt+0x6446>
  409c90:	mov    r15,QWORD PTR [rbp+0x448]
  409c97:	test   r15,r15
  409c9a:	je     409ca7 <isspace@plt+0x6397>
  409c9c:	mov    rax,QWORD PTR [r15+0x20]
  409ca0:	cmp    rax,QWORD PTR [rsp+0x30]
  409ca5:	jbe    409cb0 <isspace@plt+0x63a0>
  409ca7:	lea    r15,[rbp+0x440]
  409cae:	jmp    409cb4 <isspace@plt+0x63a4>
  409cb0:	add    r15,0x38
  409cb4:	mov    rbx,QWORD PTR [r15]
  409cb7:	test   rbx,rbx
  409cba:	je     409d01 <isspace@plt+0x63f1>
  409cbc:	mov    rax,QWORD PTR [rsp+0x30]
  409cc1:	cmp    QWORD PTR [rbx+0x20],rax
  409cc5:	ja     409ce6 <isspace@plt+0x63d6>
  409cc7:	nop    WORD PTR [rax+rax*1+0x0]
  409cd0:	mov    r15,rbx
  409cd3:	mov    rbx,QWORD PTR [rbx+0x38]
  409cd7:	test   rbx,rbx
  409cda:	je     409cfd <isspace@plt+0x63ed>
  409cdc:	cmp    QWORD PTR [rbx+0x20],rax
  409ce0:	jbe    409cd0 <isspace@plt+0x63c0>
  409ce2:	add    r15,0x38
  409ce6:	mov    rax,QWORD PTR [rbx+0x18]
  409cea:	cmp    rax,QWORD PTR [rsp+0x38]
  409cef:	jae    409d03 <isspace@plt+0x63f3>
  409cf1:	mov    DWORD PTR [rbp+0x450],0xc
  409cfb:	jmp    409d56 <isspace@plt+0x6446>
  409cfd:	add    r15,0x38
  409d01:	xor    ebx,ebx
  409d03:	mov    edi,0x1
  409d08:	mov    esi,0x48
  409d0d:	call   403460 <calloc@plt>
  409d12:	test   rax,rax
  409d15:	je     409d56 <isspace@plt+0x6446>
  409d17:	mov    DWORD PTR [rax],0x1
  409d1d:	vmovups xmm0,XMMWORD PTR [rsp+0x30]
  409d23:	vmovups XMMWORD PTR [rax+0x18],xmm0
  409d28:	mov    QWORD PTR [rax+0x10],r14
  409d2c:	mov    QWORD PTR [rax+0x8],r13
  409d30:	mov    QWORD PTR [rax+0x38],rbx
  409d34:	mov    QWORD PTR [r15],rax
  409d37:	mov    QWORD PTR [rbp+0x448],rax
  409d3e:	mov    QWORD PTR [rax+0x28],r12
  409d42:	mov    rcx,QWORD PTR [rsp+0x10]
  409d47:	mov    QWORD PTR [rax+0x30],rcx
  409d4b:	mov    ecx,DWORD PTR [rsp+0xc]
  409d4f:	mov    DWORD PTR [rax+0x40],ecx
  409d52:	mov    al,0x1
  409d54:	jmp    409d60 <isspace@plt+0x6450>
  409d56:	mov    rdi,r12
  409d59:	call   4030d0 <free@plt>
  409d5e:	xor    eax,eax
  409d60:	mov    rcx,QWORD PTR fs:0x28
  409d69:	cmp    rcx,QWORD PTR [rsp+0x40]
  409d6e:	jne    409d7f <isspace@plt+0x646f>
  409d70:	add    rsp,0x48
  409d74:	pop    rbx
  409d75:	pop    r12
  409d77:	pop    r13
  409d79:	pop    r14
  409d7b:	pop    r15
  409d7d:	pop    rbp
  409d7e:	ret    
  409d7f:	call   403280 <__stack_chk_fail@plt>
  409d84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409d8e:	xchg   ax,ax
  409d90:	push   rbp
  409d91:	push   r15
  409d93:	push   r14
  409d95:	push   r13
  409d97:	push   r12
  409d99:	push   rbx
  409d9a:	sub    rsp,0x38
  409d9e:	mov    r12,rsi
  409da1:	mov    rax,QWORD PTR fs:0x28
  409daa:	mov    QWORD PTR [rsp+0x30],rax
  409daf:	test   rsi,rsi
  409db2:	je     409ed1 <isspace@plt+0x65c1>
  409db8:	mov    r15,r9
  409dbb:	mov    rbp,rdx
  409dbe:	mov    rsi,rdi
  409dc1:	mov    QWORD PTR [rsp+0x10],r8
  409dc6:	mov    rdx,QWORD PTR [rcx+0x8]
  409dca:	lea    rbx,[rsp+0x18]
  409dcf:	mov    rdi,rbx
  409dd2:	call   4097b0 <isspace@plt+0x5ea0>
  409dd7:	mov    rdi,rbx
  409dda:	call   404d70 <isspace@plt+0x1460>
  409ddf:	mov    QWORD PTR [rsp+0x8],rax
  409de4:	mov    rdi,rbx
  409de7:	call   404e90 <isspace@plt+0x1580>
  409dec:	mov    r13,rax
  409def:	mov    eax,DWORD PTR [rbp+0x58]
  409df2:	mov    DWORD PTR [rsp+0x4],eax
  409df6:	mov    rbp,QWORD PTR [r12+0x10]
  409dfb:	mov    rdi,r15
  409dfe:	call   416fc0 <isspace@plt+0x136b0>
  409e03:	test   al,al
  409e05:	je     409ec9 <isspace@plt+0x65b9>
  409e0b:	mov    r14,QWORD PTR [rbp+0x448]
  409e12:	test   r14,r14
  409e15:	je     409e20 <isspace@plt+0x6510>
  409e17:	mov    rax,QWORD PTR [r14+0x20]
  409e1b:	cmp    rax,QWORD PTR [r15]
  409e1e:	jbe    409e29 <isspace@plt+0x6519>
  409e20:	lea    r14,[rbp+0x440]
  409e27:	jmp    409e2d <isspace@plt+0x651d>
  409e29:	add    r14,0x38
  409e2d:	mov    rbx,QWORD PTR [r14]
  409e30:	test   rbx,rbx
  409e33:	je     409e70 <isspace@plt+0x6560>
  409e35:	mov    rax,QWORD PTR [r15]
  409e38:	cmp    QWORD PTR [rbx+0x20],rax
  409e3c:	ja     409e56 <isspace@plt+0x6546>
  409e3e:	xchg   ax,ax
  409e40:	mov    r14,rbx
  409e43:	mov    rbx,QWORD PTR [rbx+0x38]
  409e47:	test   rbx,rbx
  409e4a:	je     409e6c <isspace@plt+0x655c>
  409e4c:	cmp    QWORD PTR [rbx+0x20],rax
  409e50:	jbe    409e40 <isspace@plt+0x6530>
  409e52:	add    r14,0x38
  409e56:	mov    rax,QWORD PTR [rbx+0x18]
  409e5a:	cmp    rax,QWORD PTR [r15+0x8]
  409e5e:	jae    409e72 <isspace@plt+0x6562>
  409e60:	mov    DWORD PTR [rbp+0x450],0xc
  409e6a:	jmp    409ec9 <isspace@plt+0x65b9>
  409e6c:	add    r14,0x38
  409e70:	xor    ebx,ebx
  409e72:	mov    edi,0x1
  409e77:	mov    esi,0x48
  409e7c:	call   403460 <calloc@plt>
  409e81:	test   rax,rax
  409e84:	je     409ec9 <isspace@plt+0x65b9>
  409e86:	mov    DWORD PTR [rax],0x3
  409e8c:	vmovups xmm0,XMMWORD PTR [r15]
  409e91:	vmovups XMMWORD PTR [rax+0x18],xmm0
  409e96:	mov    rcx,QWORD PTR [rsp+0x10]
  409e9b:	mov    QWORD PTR [rax+0x10],rcx
  409e9f:	mov    QWORD PTR [rax+0x8],r12
  409ea3:	mov    QWORD PTR [rax+0x38],rbx
  409ea7:	mov    QWORD PTR [r14],rax
  409eaa:	mov    QWORD PTR [rbp+0x448],rax
  409eb1:	mov    QWORD PTR [rax+0x28],r13
  409eb5:	mov    rcx,QWORD PTR [rsp+0x8]
  409eba:	mov    QWORD PTR [rax+0x30],rcx
  409ebe:	mov    ecx,DWORD PTR [rsp+0x4]
  409ec2:	mov    DWORD PTR [rax+0x40],ecx
  409ec5:	mov    al,0x1
  409ec7:	jmp    409ed3 <isspace@plt+0x65c3>
  409ec9:	mov    rdi,r13
  409ecc:	call   4030d0 <free@plt>
  409ed1:	xor    eax,eax
  409ed3:	mov    rcx,QWORD PTR fs:0x28
  409edc:	cmp    rcx,QWORD PTR [rsp+0x30]
  409ee1:	jne    409ef2 <isspace@plt+0x65e2>
  409ee3:	add    rsp,0x38
  409ee7:	pop    rbx
  409ee8:	pop    r12
  409eea:	pop    r13
  409eec:	pop    r14
  409eee:	pop    r15
  409ef0:	pop    rbp
  409ef1:	ret    
  409ef2:	call   403280 <__stack_chk_fail@plt>
  409ef7:	nop    WORD PTR [rax+rax*1+0x0]
  409f00:	push   rbp
  409f01:	push   r15
  409f03:	push   r14
  409f05:	push   r13
  409f07:	push   r12
  409f09:	push   rbx
  409f0a:	push   rax
  409f0b:	mov    rax,QWORD PTR fs:0x28
  409f14:	mov    QWORD PTR [rsp],rax
  409f18:	test   rsi,rsi
  409f1b:	je     409f56 <isspace@plt+0x6646>
  409f1d:	mov    r15,r9
  409f20:	mov    r14,r8
  409f23:	mov    r13,rsi
  409f26:	mov    r12,QWORD PTR [rsi+0x10]
  409f2a:	mov    rdi,r9
  409f2d:	call   416fc0 <isspace@plt+0x136b0>
  409f32:	test   al,al
  409f34:	je     409fac <isspace@plt+0x669c>
  409f36:	mov    rbx,QWORD PTR [r12+0x448]
  409f3e:	test   rbx,rbx
  409f41:	je     409f4c <isspace@plt+0x663c>
  409f43:	mov    rax,QWORD PTR [rbx+0x20]
  409f47:	cmp    rax,QWORD PTR [r15]
  409f4a:	jbe    409f5d <isspace@plt+0x664d>
  409f4c:	lea    rbx,[r12+0x440]
  409f54:	jmp    409f61 <isspace@plt+0x6651>
  409f56:	xor    eax,eax
  409f58:	jmp    409ff7 <isspace@plt+0x66e7>
  409f5d:	add    rbx,0x38
  409f61:	mov    rbp,QWORD PTR [rbx]
  409f64:	test   rbp,rbp
  409f67:	je     409fb4 <isspace@plt+0x66a4>
  409f69:	mov    rax,QWORD PTR [r15]
  409f6c:	cmp    QWORD PTR [rbp+0x20],rax
  409f70:	ja     409f96 <isspace@plt+0x6686>
  409f72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  409f7c:	nop    DWORD PTR [rax+0x0]
  409f80:	mov    rbx,rbp
  409f83:	mov    rbp,QWORD PTR [rbp+0x38]
  409f87:	test   rbp,rbp
  409f8a:	je     409fb0 <isspace@plt+0x66a0>
  409f8c:	cmp    QWORD PTR [rbp+0x20],rax
  409f90:	jbe    409f80 <isspace@plt+0x6670>
  409f92:	add    rbx,0x38
  409f96:	mov    rax,QWORD PTR [rbp+0x18]
  409f9a:	cmp    rax,QWORD PTR [r15+0x8]
  409f9e:	jae    409fb6 <isspace@plt+0x66a6>
  409fa0:	mov    DWORD PTR [r12+0x450],0xc
  409fac:	xor    eax,eax
  409fae:	jmp    409ff1 <isspace@plt+0x66e1>
  409fb0:	add    rbx,0x38
  409fb4:	xor    ebp,ebp
  409fb6:	mov    edi,0x1
  409fbb:	mov    esi,0x48
  409fc0:	call   403460 <calloc@plt>
  409fc5:	test   rax,rax
  409fc8:	je     409ff1 <isspace@plt+0x66e1>
  409fca:	mov    DWORD PTR [rax],0x2
  409fd0:	vmovups xmm0,XMMWORD PTR [r15]
  409fd5:	vmovups XMMWORD PTR [rax+0x18],xmm0
  409fda:	mov    QWORD PTR [rax+0x10],r14
  409fde:	mov    QWORD PTR [rax+0x8],r13
  409fe2:	mov    QWORD PTR [rax+0x38],rbp
  409fe6:	mov    QWORD PTR [rbx],rax
  409fe9:	mov    QWORD PTR [r12+0x448],rax
  409ff1:	test   rax,rax
  409ff4:	setne  al
  409ff7:	mov    rcx,QWORD PTR fs:0x28
  40a000:	cmp    rcx,QWORD PTR [rsp]
  40a004:	jne    40a015 <isspace@plt+0x6705>
  40a006:	add    rsp,0x8
  40a00a:	pop    rbx
  40a00b:	pop    r12
  40a00d:	pop    r13
  40a00f:	pop    r14
  40a011:	pop    r15
  40a013:	pop    rbp
  40a014:	ret    
  40a015:	call   403280 <__stack_chk_fail@plt>
  40a01a:	nop    WORD PTR [rax+rax*1+0x0]
  40a020:	push   rbp
  40a021:	push   r15
  40a023:	push   r14
  40a025:	push   r13
  40a027:	push   r12
  40a029:	push   rbx
  40a02a:	sub    rsp,0x28
  40a02e:	mov    rax,QWORD PTR fs:0x28
  40a037:	mov    QWORD PTR [rsp+0x20],rax
  40a03c:	test   rsi,rsi
  40a03f:	je     40a090 <isspace@plt+0x6780>
  40a041:	mov    r15,r9
  40a044:	mov    r14,r8
  40a047:	mov    rbp,rcx
  40a04a:	mov    rbx,rdx
  40a04d:	mov    r13,rsi
  40a050:	mov    r12,rdi
  40a053:	mov    rdi,r9
  40a056:	call   417020 <isspace@plt+0x13710>
  40a05b:	mov    rcx,QWORD PTR [rbx+0x48]
  40a05f:	test   rcx,rcx
  40a062:	je     40a094 <isspace@plt+0x6784>
  40a064:	mov    rdx,QWORD PTR [r13+0x10]
  40a068:	mov    rdi,QWORD PTR [rdx]
  40a06b:	mov    rsi,QWORD PTR [r15]
  40a06e:	mov    DWORD PTR [rsp],0x0
  40a075:	lea    r9,[rsp+0x10]
  40a07a:	mov    r8d,0x1
  40a080:	mov    rdx,rax
  40a083:	call   42aef0 <isspace@plt+0x275e0>
  40a088:	test   eax,eax
  40a08a:	je     40a098 <isspace@plt+0x6788>
  40a08c:	xor    ecx,ecx
  40a08e:	jmp    40a0a4 <isspace@plt+0x6794>
  40a090:	xor    eax,eax
  40a092:	jmp    40a10b <isspace@plt+0x67fb>
  40a094:	mov    cl,0x1
  40a096:	jmp    40a0a4 <isspace@plt+0x6794>
  40a098:	mov    rax,QWORD PTR [rsp+0x10]
  40a09d:	cmp    rax,QWORD PTR [r15+0x8]
  40a0a1:	setb   cl
  40a0a4:	cmp    BYTE PTR [rbx+0x60],0x0
  40a0a8:	mov    esi,DWORD PTR [rbx+0x58]
  40a0ab:	je     40a0be <isspace@plt+0x67ae>
  40a0ad:	test   esi,esi
  40a0af:	je     40a0da <isspace@plt+0x67ca>
  40a0b1:	mov    eax,DWORD PTR [rbx+0x64]
  40a0b4:	cdq    
  40a0b5:	idiv   esi
  40a0b7:	test   edx,edx
  40a0b9:	sete   al
  40a0bc:	jmp    40a0e4 <isspace@plt+0x67d4>
  40a0be:	mov    eax,DWORD PTR [rbx+0x64]
  40a0c1:	cmp    esi,eax
  40a0c3:	jle    40a0de <isspace@plt+0x67ce>
  40a0c5:	mov    rax,QWORD PTR [rbp+0x0]
  40a0c9:	cmp    BYTE PTR [rax],0x76
  40a0cc:	je     40a0f6 <isspace@plt+0x67e6>
  40a0ce:	mov    rdi,r14
  40a0d1:	call   41eeb0 <isspace@plt+0x1b5a0>
  40a0d6:	mov    al,0x1
  40a0d8:	jmp    40a10b <isspace@plt+0x67fb>
  40a0da:	mov    al,0x1
  40a0dc:	jmp    40a0e4 <isspace@plt+0x67d4>
  40a0de:	cmp    eax,DWORD PTR [rbx+0x5c]
  40a0e1:	setle  al
  40a0e4:	and    cl,al
  40a0e6:	mov    rax,QWORD PTR [rbp+0x0]
  40a0ea:	cmp    BYTE PTR [rax],0x76
  40a0ed:	sete   al
  40a0f0:	xor    al,cl
  40a0f2:	cmp    al,0x1
  40a0f4:	jne    40a0ce <isspace@plt+0x67be>
  40a0f6:	mov    rdx,QWORD PTR [rbx+0x70]
  40a0fa:	mov    rdi,r12
  40a0fd:	mov    rsi,r13
  40a100:	mov    rcx,r14
  40a103:	mov    r8,r15
  40a106:	call   4096c0 <isspace@plt+0x5db0>
  40a10b:	mov    rcx,QWORD PTR fs:0x28
  40a114:	cmp    rcx,QWORD PTR [rsp+0x20]
  40a119:	jne    40a12a <isspace@plt+0x681a>
  40a11b:	add    rsp,0x28
  40a11f:	pop    rbx
  40a120:	pop    r12
  40a122:	pop    r13
  40a124:	pop    r14
  40a126:	pop    r15
  40a128:	pop    rbp
  40a129:	ret    
  40a12a:	call   403280 <__stack_chk_fail@plt>
  40a12f:	nop
  40a130:	push   rbp
  40a131:	push   r15
  40a133:	push   r14
  40a135:	push   r13
  40a137:	push   r12
  40a139:	push   rbx
  40a13a:	sub    rsp,0x48
  40a13e:	mov    r13,rsi
  40a141:	mov    rax,QWORD PTR fs:0x28
  40a14a:	mov    QWORD PTR [rsp+0x40],rax
  40a14f:	test   rsi,rsi
  40a152:	je     40a28e <isspace@plt+0x697e>
  40a158:	mov    r15,r9
  40a15b:	mov    r14,r8
  40a15e:	mov    rbp,rdx
  40a161:	mov    rsi,rdi
  40a164:	mov    rdx,QWORD PTR [rcx+0x8]
  40a168:	lea    rbx,[rsp+0x18]
  40a16d:	mov    rdi,rbx
  40a170:	call   4097b0 <isspace@plt+0x5ea0>
  40a175:	mov    rdi,rbx
  40a178:	call   404d70 <isspace@plt+0x1460>
  40a17d:	mov    QWORD PTR [rsp+0x10],rax
  40a182:	mov    rdi,rbx
  40a185:	call   404e90 <isspace@plt+0x1580>
  40a18a:	mov    r12,rax
  40a18d:	mov    rdi,QWORD PTR [r15]
  40a190:	mov    eax,DWORD PTR [rbp+0x58]
  40a193:	mov    DWORD PTR [rsp+0xc],eax
  40a197:	mov    rsi,rdi
  40a19a:	call   417250 <isspace@plt+0x13940>
  40a19f:	mov    QWORD PTR [rsp+0x30],rax
  40a1a4:	mov    QWORD PTR [rsp+0x38],rdx
  40a1a9:	mov    rbp,QWORD PTR [r13+0x10]
  40a1ad:	lea    rdi,[rsp+0x30]
  40a1b2:	call   416fc0 <isspace@plt+0x136b0>
  40a1b7:	test   al,al
  40a1b9:	je     40a286 <isspace@plt+0x6976>
  40a1bf:	mov    r15,QWORD PTR [rbp+0x448]
  40a1c6:	test   r15,r15
  40a1c9:	je     40a1d6 <isspace@plt+0x68c6>
  40a1cb:	mov    rax,QWORD PTR [r15+0x20]
  40a1cf:	cmp    rax,QWORD PTR [rsp+0x30]
  40a1d4:	jbe    40a1df <isspace@plt+0x68cf>
  40a1d6:	lea    r15,[rbp+0x440]
  40a1dd:	jmp    40a1e3 <isspace@plt+0x68d3>
  40a1df:	add    r15,0x38
  40a1e3:	mov    rbx,QWORD PTR [r15]
  40a1e6:	test   rbx,rbx
  40a1e9:	je     40a231 <isspace@plt+0x6921>
  40a1eb:	mov    rax,QWORD PTR [rsp+0x30]
  40a1f0:	cmp    QWORD PTR [rbx+0x20],rax
  40a1f4:	ja     40a216 <isspace@plt+0x6906>
  40a1f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a200:	mov    r15,rbx
  40a203:	mov    rbx,QWORD PTR [rbx+0x38]
  40a207:	test   rbx,rbx
  40a20a:	je     40a22d <isspace@plt+0x691d>
  40a20c:	cmp    QWORD PTR [rbx+0x20],rax
  40a210:	jbe    40a200 <isspace@plt+0x68f0>
  40a212:	add    r15,0x38
  40a216:	mov    rax,QWORD PTR [rbx+0x18]
  40a21a:	cmp    rax,QWORD PTR [rsp+0x38]
  40a21f:	jae    40a233 <isspace@plt+0x6923>
  40a221:	mov    DWORD PTR [rbp+0x450],0xc
  40a22b:	jmp    40a286 <isspace@plt+0x6976>
  40a22d:	add    r15,0x38
  40a231:	xor    ebx,ebx
  40a233:	mov    edi,0x1
  40a238:	mov    esi,0x48
  40a23d:	call   403460 <calloc@plt>
  40a242:	test   rax,rax
  40a245:	je     40a286 <isspace@plt+0x6976>
  40a247:	mov    DWORD PTR [rax],0x1
  40a24d:	vmovups xmm0,XMMWORD PTR [rsp+0x30]
  40a253:	vmovups XMMWORD PTR [rax+0x18],xmm0
  40a258:	mov    QWORD PTR [rax+0x10],r14
  40a25c:	mov    QWORD PTR [rax+0x8],r13
  40a260:	mov    QWORD PTR [rax+0x38],rbx
  40a264:	mov    QWORD PTR [r15],rax
  40a267:	mov    QWORD PTR [rbp+0x448],rax
  40a26e:	mov    QWORD PTR [rax+0x28],r12
  40a272:	mov    rcx,QWORD PTR [rsp+0x10]
  40a277:	mov    QWORD PTR [rax+0x30],rcx
  40a27b:	mov    ecx,DWORD PTR [rsp+0xc]
  40a27f:	mov    DWORD PTR [rax+0x40],ecx
  40a282:	mov    al,0x1
  40a284:	jmp    40a290 <isspace@plt+0x6980>
  40a286:	mov    rdi,r12
  40a289:	call   4030d0 <free@plt>
  40a28e:	xor    eax,eax
  40a290:	mov    rcx,QWORD PTR fs:0x28
  40a299:	cmp    rcx,QWORD PTR [rsp+0x40]
  40a29e:	jne    40a2af <isspace@plt+0x699f>
  40a2a0:	add    rsp,0x48
  40a2a4:	pop    rbx
  40a2a5:	pop    r12
  40a2a7:	pop    r13
  40a2a9:	pop    r14
  40a2ab:	pop    r15
  40a2ad:	pop    rbp
  40a2ae:	ret    
  40a2af:	call   403280 <__stack_chk_fail@plt>
  40a2b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a2be:	xchg   ax,ax
  40a2c0:	push   r15
  40a2c2:	push   r14
  40a2c4:	push   rbx
  40a2c5:	sub    rsp,0x10
  40a2c9:	mov    rax,QWORD PTR fs:0x28
  40a2d2:	mov    QWORD PTR [rsp+0x8],rax
  40a2d7:	test   rsi,rsi
  40a2da:	je     40a325 <isspace@plt+0x6a15>
  40a2dc:	mov    r15,r9
  40a2df:	mov    r14,r8
  40a2e2:	mov    rbx,rsi
  40a2e5:	mov    rdi,r9
  40a2e8:	call   416fc0 <isspace@plt+0x136b0>
  40a2ed:	test   al,al
  40a2ef:	je     40a325 <isspace@plt+0x6a15>
  40a2f1:	test   r14,r14
  40a2f4:	jne    40a30a <isspace@plt+0x69fa>
  40a2f6:	mov    rdi,QWORD PTR [rbx+0x18]
  40a2fa:	mov    rsi,QWORD PTR [r15]
  40a2fd:	call   41ea40 <isspace@plt+0x1b130>
  40a302:	mov    r14,rax
  40a305:	test   rax,rax
  40a308:	je     40a325 <isspace@plt+0x6a15>
  40a30a:	mov    rsi,QWORD PTR [r15]
  40a30d:	cmp    rsi,QWORD PTR [r15+0x8]
  40a311:	jne    40a329 <isspace@plt+0x6a19>
  40a313:	mov    rdi,r14
  40a316:	call   41a7c0 <isspace@plt+0x16eb0>
  40a31b:	mov    rdi,r14
  40a31e:	call   41ef20 <isspace@plt+0x1b610>
  40a323:	jmp    40a341 <isspace@plt+0x6a31>
  40a325:	xor    eax,eax
  40a327:	jmp    40a343 <isspace@plt+0x6a33>
  40a329:	mov    rdi,r14
  40a32c:	mov    rsi,r15
  40a32f:	call   41f850 <isspace@plt+0x1bf40>
  40a334:	mov    rdi,r14
  40a337:	mov    esi,0x1
  40a33c:	call   41f570 <isspace@plt+0x1bc60>
  40a341:	mov    al,0x1
  40a343:	mov    rcx,QWORD PTR fs:0x28
  40a34c:	cmp    rcx,QWORD PTR [rsp+0x8]
  40a351:	jne    40a35d <isspace@plt+0x6a4d>
  40a353:	add    rsp,0x10
  40a357:	pop    rbx
  40a358:	pop    r14
  40a35a:	pop    r15
  40a35c:	ret    
  40a35d:	call   403280 <__stack_chk_fail@plt>
  40a362:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a36c:	nop    DWORD PTR [rax+0x0]
  40a370:	push   rax
  40a371:	mov    rax,QWORD PTR fs:0x28
  40a37a:	mov    QWORD PTR [rsp],rax
  40a37e:	lea    rsi,[rip+0x25474]        # 42f7f9 <isspace@plt+0x2bee9>
  40a385:	xor    eax,eax
  40a387:	call   4299f0 <isspace@plt+0x260e0>
  40a38c:	mov    rax,QWORD PTR fs:0x28
  40a395:	cmp    rax,QWORD PTR [rsp]
  40a399:	jne    40a39f <isspace@plt+0x6a8f>
  40a39b:	xor    eax,eax
  40a39d:	pop    rcx
  40a39e:	ret    
  40a39f:	call   403280 <__stack_chk_fail@plt>
  40a3a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a3ae:	xchg   ax,ax
  40a3b0:	push   rbp
  40a3b1:	push   r15
  40a3b3:	push   r14
  40a3b5:	push   r13
  40a3b7:	push   r12
  40a3b9:	push   rbx
  40a3ba:	sub    rsp,0x18
  40a3be:	mov    rax,QWORD PTR fs:0x28
  40a3c7:	mov    QWORD PTR [rsp+0x10],rax
  40a3cc:	test   rsi,rsi
  40a3cf:	je     40a455 <isspace@plt+0x6b45>
  40a3d5:	mov    r15,r8
  40a3d8:	mov    r12,rcx
  40a3db:	mov    r13,rdx
  40a3de:	mov    rbx,rsi
  40a3e1:	mov    rbp,rdi
  40a3e4:	mov    QWORD PTR [rsp+0x8],r9
  40a3e9:	mov    r14,QWORD PTR [rdx+0x70]
  40a3ed:	mov    rdi,r14
  40a3f0:	call   40cdb0 <isspace@plt+0x94a0>
  40a3f5:	mov    esi,0x1
  40a3fa:	test   al,al
  40a3fc:	je     40a426 <isspace@plt+0x6b16>
  40a3fe:	mov    DWORD PTR [rsp],0x1
  40a405:	mov    rdi,rbp
  40a408:	mov    rsi,rbx
  40a40b:	mov    rdx,r13
  40a40e:	mov    rcx,r12
  40a411:	mov    r8,r15
  40a414:	mov    r9,QWORD PTR [rsp+0x8]
  40a419:	call   40ce40 <isspace@plt+0x9530>
  40a41e:	mov    esi,eax
  40a420:	inc    esi
  40a422:	mov    r14,QWORD PTR [r13+0x70]
  40a426:	mov    rdi,r14
  40a429:	call   40d210 <isspace@plt+0x9900>
  40a42e:	mov    DWORD PTR [rsp],0x0
  40a435:	mov    rdi,rbp
  40a438:	mov    rsi,rbx
  40a43b:	mov    rdx,r13
  40a43e:	mov    rcx,r12
  40a441:	mov    r8,r15
  40a444:	mov    r9,QWORD PTR [rsp+0x8]
  40a449:	call   40ce40 <isspace@plt+0x9530>
  40a44e:	test   eax,eax
  40a450:	setne  al
  40a453:	jmp    40a457 <isspace@plt+0x6b47>
  40a455:	xor    eax,eax
  40a457:	mov    rcx,QWORD PTR fs:0x28
  40a460:	cmp    rcx,QWORD PTR [rsp+0x10]
  40a465:	jne    40a476 <isspace@plt+0x6b66>
  40a467:	add    rsp,0x18
  40a46b:	pop    rbx
  40a46c:	pop    r12
  40a46e:	pop    r13
  40a470:	pop    r14
  40a472:	pop    r15
  40a474:	pop    rbp
  40a475:	ret    
  40a476:	call   403280 <__stack_chk_fail@plt>
  40a47b:	nop    DWORD PTR [rax+rax*1+0x0]
  40a480:	push   rbp
  40a481:	push   r15
  40a483:	push   r14
  40a485:	push   r13
  40a487:	push   r12
  40a489:	push   rbx
  40a48a:	sub    rsp,0x18
  40a48e:	mov    rax,QWORD PTR fs:0x28
  40a497:	mov    QWORD PTR [rsp+0x10],rax
  40a49c:	mov    rbp,QWORD PTR [rdi+0x28]
  40a4a0:	test   rbp,rbp
  40a4a3:	je     40a54f <isspace@plt+0x6c3f>
  40a4a9:	mov    r14,rcx
  40a4ac:	mov    rbx,rdx
  40a4af:	mov    r15,rdi
  40a4b2:	mov    r12b,0x1
  40a4b5:	mov    r13,rsp
  40a4b8:	jmp    40a4fc <isspace@plt+0x6bec>
  40a4ba:	xor    edi,edi
  40a4bc:	xor    esi,esi
  40a4be:	call   417250 <isspace@plt+0x13940>
  40a4c3:	mov    QWORD PTR [rsp],rax
  40a4c7:	mov    QWORD PTR [rsp+0x8],rdx
  40a4cc:	mov    rdx,QWORD PTR [rbx+0x70]
  40a4d0:	mov    rdi,r15
  40a4d3:	mov    rsi,rbp
  40a4d6:	xor    ecx,ecx
  40a4d8:	mov    r8,r13
  40a4db:	call   4096c0 <isspace@plt+0x5db0>
  40a4e0:	and    r12b,al
  40a4e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a4ed:	nop    DWORD PTR [rax]
  40a4f0:	mov    rbp,QWORD PTR [rbp+0x2e0]
  40a4f7:	test   rbp,rbp
  40a4fa:	je     40a552 <isspace@plt+0x6c42>
  40a4fc:	mov    rax,QWORD PTR [rbp+0x10]
  40a500:	cmp    BYTE PTR [rax+0x18],0x0
  40a504:	jne    40a4f0 <isspace@plt+0x6be0>
  40a506:	mov    rdi,QWORD PTR [rbx+0x48]
  40a50a:	test   rdi,rdi
  40a50d:	je     40a533 <isspace@plt+0x6c23>
  40a50f:	mov    rsi,QWORD PTR [rax+0x8]
  40a513:	test   rsi,rsi
  40a516:	je     40a541 <isspace@plt+0x6c31>
  40a518:	xor    edx,edx
  40a51a:	call   42aec0 <isspace@plt+0x275b0>
  40a51f:	test   eax,eax
  40a521:	sete   al
  40a524:	mov    rcx,QWORD PTR [r14]
  40a527:	cmp    BYTE PTR [rcx],0x59
  40a52a:	sete   cl
  40a52d:	cmp    al,cl
  40a52f:	jne    40a4ba <isspace@plt+0x6baa>
  40a531:	jmp    40a4f0 <isspace@plt+0x6be0>
  40a533:	mov    rax,QWORD PTR [r14]
  40a536:	cmp    BYTE PTR [rax],0x59
  40a539:	jne    40a4ba <isspace@plt+0x6baa>
  40a53f:	jmp    40a4f0 <isspace@plt+0x6be0>
  40a541:	mov    rax,QWORD PTR [r14]
  40a544:	cmp    BYTE PTR [rax],0x59
  40a547:	je     40a4ba <isspace@plt+0x6baa>
  40a54d:	jmp    40a4f0 <isspace@plt+0x6be0>
  40a54f:	mov    r12b,0x1
  40a552:	mov    rax,QWORD PTR fs:0x28
  40a55b:	cmp    rax,QWORD PTR [rsp+0x10]
  40a560:	jne    40a578 <isspace@plt+0x6c68>
  40a562:	and    r12b,0x1
  40a566:	mov    eax,r12d
  40a569:	add    rsp,0x18
  40a56d:	pop    rbx
  40a56e:	pop    r12
  40a570:	pop    r13
  40a572:	pop    r14
  40a574:	pop    r15
  40a576:	pop    rbp
  40a577:	ret    
  40a578:	call   403280 <__stack_chk_fail@plt>
  40a57d:	nop    DWORD PTR [rax]
  40a580:	push   rbp
  40a581:	push   r15
  40a583:	push   r14
  40a585:	push   r12
  40a587:	push   rbx
  40a588:	sub    rsp,0x30
  40a58c:	mov    rax,QWORD PTR fs:0x28
  40a595:	mov    QWORD PTR [rsp+0x28],rax
  40a59a:	test   rsi,rsi
  40a59d:	je     40a615 <isspace@plt+0x6d05>
  40a59f:	mov    r14,r9
  40a5a2:	mov    rbp,rcx
  40a5a5:	mov    rbx,rsi
  40a5a8:	mov    r15,rdi
  40a5ab:	mov    r12,rsp
  40a5ae:	mov    rdi,r12
  40a5b1:	call   404230 <isspace@plt+0x920>
  40a5b6:	mov    rsi,QWORD PTR [rbx+0x10]
  40a5ba:	mov    rax,QWORD PTR [rbp+0x8]
  40a5be:	mov    QWORD PTR [rsp+0x18],rax
  40a5c3:	mov    QWORD PTR [rsp+0x20],0x0
  40a5cc:	lea    rax,[rip+0x2fad]        # 40d580 <isspace@plt+0x9c70>
  40a5d3:	lea    rcx,[rsp+0x18]
  40a5d8:	mov    rdi,r15
  40a5db:	mov    rdx,r14
  40a5de:	mov    r8d,0x0
  40a5e4:	mov    r9d,0x0
  40a5ea:	push   rax
  40a5eb:	push   r12
  40a5ed:	call   424c50 <isspace@plt+0x21340>
  40a5f2:	add    rsp,0x10
  40a5f6:	mov    ebp,eax
  40a5f8:	cmp    DWORD PTR [r15+0x9c0],0x0
  40a600:	je     40a619 <isspace@plt+0x6d09>
  40a602:	lea    rsi,[rip+0x25217]        # 42f820 <isspace@plt+0x2bf10>
  40a609:	mov    rdi,r15
  40a60c:	xor    eax,eax
  40a60e:	call   4299f0 <isspace@plt+0x260e0>
  40a613:	jmp    40a639 <isspace@plt+0x6d29>
  40a615:	xor    eax,eax
  40a617:	jmp    40a64d <isspace@plt+0x6d3d>
  40a619:	test   ebp,ebp
  40a61b:	je     40a639 <isspace@plt+0x6d29>
  40a61d:	mov    rdi,rsp
  40a620:	call   404da0 <isspace@plt+0x1490>
  40a625:	lea    rsi,[rip+0x25206]        # 42f832 <isspace@plt+0x2bf22>
  40a62c:	mov    rdi,r15
  40a62f:	mov    rdx,rax
  40a632:	xor    eax,eax
  40a634:	call   4299f0 <isspace@plt+0x260e0>
  40a639:	mov    rdi,rsp
  40a63c:	call   404540 <isspace@plt+0xc30>
  40a641:	mov    eax,DWORD PTR [r15+0x9c0]
  40a648:	or     eax,ebp
  40a64a:	sete   al
  40a64d:	mov    rcx,QWORD PTR fs:0x28
  40a656:	cmp    rcx,QWORD PTR [rsp+0x28]
  40a65b:	jne    40a66a <isspace@plt+0x6d5a>
  40a65d:	add    rsp,0x30
  40a661:	pop    rbx
  40a662:	pop    r12
  40a664:	pop    r14
  40a666:	pop    r15
  40a668:	pop    rbp
  40a669:	ret    
  40a66a:	call   403280 <__stack_chk_fail@plt>
  40a66f:	nop
  40a670:	push   rbp
  40a671:	push   r15
  40a673:	push   r14
  40a675:	push   r13
  40a677:	push   r12
  40a679:	push   rbx
  40a67a:	sub    rsp,0x18
  40a67e:	mov    rax,QWORD PTR fs:0x28
  40a687:	mov    QWORD PTR [rsp+0x10],rax
  40a68c:	test   rsi,rsi
  40a68f:	je     40a703 <isspace@plt+0x6df3>
  40a691:	mov    r14,r9
  40a694:	mov    r12,r8
  40a697:	mov    r13,rcx
  40a69a:	mov    rbx,rdx
  40a69d:	mov    r15,rsi
  40a6a0:	mov    rbp,rdi
  40a6a3:	mov    rdi,QWORD PTR [r9+0x8]
  40a6a7:	mov    rsi,rdi
  40a6aa:	call   417250 <isspace@plt+0x13940>
  40a6af:	mov    QWORD PTR [rsp],rax
  40a6b3:	mov    QWORD PTR [rsp+0x8],rdx
  40a6b8:	mov    r9,rsp
  40a6bb:	mov    rdi,rbp
  40a6be:	mov    rsi,r15
  40a6c1:	mov    rdx,rbx
  40a6c4:	mov    rcx,r13
  40a6c7:	mov    r8,r12
  40a6ca:	call   40a7c0 <isspace@plt+0x6eb0>
  40a6cf:	test   al,al
  40a6d1:	je     40a703 <isspace@plt+0x6df3>
  40a6d3:	mov    r12,QWORD PTR [r15+0x10]
  40a6d7:	mov    rdi,r14
  40a6da:	call   416fc0 <isspace@plt+0x136b0>
  40a6df:	test   al,al
  40a6e1:	je     40a74c <isspace@plt+0x6e3c>
  40a6e3:	mov    rbx,QWORD PTR [r12+0x448]
  40a6eb:	test   rbx,rbx
  40a6ee:	je     40a6f9 <isspace@plt+0x6de9>
  40a6f0:	mov    rax,QWORD PTR [rbx+0x20]
  40a6f4:	cmp    rax,QWORD PTR [r14]
  40a6f7:	jbe    40a70a <isspace@plt+0x6dfa>
  40a6f9:	lea    rbx,[r12+0x440]
  40a701:	jmp    40a70e <isspace@plt+0x6dfe>
  40a703:	xor    eax,eax
  40a705:	jmp    40a793 <isspace@plt+0x6e83>
  40a70a:	add    rbx,0x38
  40a70e:	mov    rbp,QWORD PTR [rbx]
  40a711:	test   rbp,rbp
  40a714:	je     40a754 <isspace@plt+0x6e44>
  40a716:	mov    rax,QWORD PTR [r14]
  40a719:	cmp    QWORD PTR [rbp+0x20],rax
  40a71d:	ja     40a736 <isspace@plt+0x6e26>
  40a71f:	nop
  40a720:	mov    rbx,rbp
  40a723:	mov    rbp,QWORD PTR [rbp+0x38]
  40a727:	test   rbp,rbp
  40a72a:	je     40a750 <isspace@plt+0x6e40>
  40a72c:	cmp    QWORD PTR [rbp+0x20],rax
  40a730:	jbe    40a720 <isspace@plt+0x6e10>
  40a732:	add    rbx,0x38
  40a736:	mov    rax,QWORD PTR [rbp+0x18]
  40a73a:	cmp    rax,QWORD PTR [r14+0x8]
  40a73e:	jae    40a756 <isspace@plt+0x6e46>
  40a740:	mov    DWORD PTR [r12+0x450],0xc
  40a74c:	xor    eax,eax
  40a74e:	jmp    40a78d <isspace@plt+0x6e7d>
  40a750:	add    rbx,0x38
  40a754:	xor    ebp,ebp
  40a756:	mov    edi,0x1
  40a75b:	mov    esi,0x48
  40a760:	call   403460 <calloc@plt>
  40a765:	test   rax,rax
  40a768:	je     40a78d <isspace@plt+0x6e7d>
  40a76a:	mov    DWORD PTR [rax],0x2
  40a770:	vmovups xmm0,XMMWORD PTR [r14]
  40a775:	vmovups XMMWORD PTR [rax+0x18],xmm0
  40a77a:	mov    QWORD PTR [rax+0x8],r15
  40a77e:	mov    QWORD PTR [rax+0x38],rbp
  40a782:	mov    QWORD PTR [rbx],rax
  40a785:	mov    QWORD PTR [r12+0x448],rax
  40a78d:	test   rax,rax
  40a790:	setne  al
  40a793:	mov    rcx,QWORD PTR fs:0x28
  40a79c:	cmp    rcx,QWORD PTR [rsp+0x10]
  40a7a1:	jne    40a7b2 <isspace@plt+0x6ea2>
  40a7a3:	add    rsp,0x18
  40a7a7:	pop    rbx
  40a7a8:	pop    r12
  40a7aa:	pop    r13
  40a7ac:	pop    r14
  40a7ae:	pop    r15
  40a7b0:	pop    rbp
  40a7b1:	ret    
  40a7b2:	call   403280 <__stack_chk_fail@plt>
  40a7b7:	nop    WORD PTR [rax+rax*1+0x0]
  40a7c0:	push   rbp
  40a7c1:	push   r15
  40a7c3:	push   r14
  40a7c5:	push   r13
  40a7c7:	push   r12
  40a7c9:	push   rbx
  40a7ca:	sub    rsp,0x58
  40a7ce:	mov    rax,QWORD PTR fs:0x28
  40a7d7:	mov    QWORD PTR [rsp+0x50],rax
  40a7dc:	test   rsi,rsi
  40a7df:	je     40a856 <isspace@plt+0x6f46>
  40a7e1:	mov    r12,r9
  40a7e4:	mov    rbx,rcx
  40a7e7:	mov    r14,rsi
  40a7ea:	mov    r13,rdi
  40a7ed:	mov    QWORD PTR [rsp+0x18],r8
  40a7f2:	lea    r15,[rsp+0x38]
  40a7f7:	mov    rdi,r15
  40a7fa:	call   404230 <isspace@plt+0x920>
  40a7ff:	lea    rbp,[rsp+0x20]
  40a804:	mov    rdi,rbp
  40a807:	call   404230 <isspace@plt+0x920>
  40a80c:	mov    rsi,QWORD PTR [r14+0x10]
  40a810:	add    rbx,0x8
  40a814:	lea    r9,[rip+0x2d65]        # 40d580 <isspace@plt+0x9c70>
  40a81b:	mov    rdi,r13
  40a81e:	mov    rdx,r12
  40a821:	mov    rcx,rbx
  40a824:	mov    r8,r15
  40a827:	push   r9
  40a829:	push   rbp
  40a82a:	call   424c50 <isspace@plt+0x21340>
  40a82f:	add    rsp,0x10
  40a833:	mov    r15d,eax
  40a836:	cmp    DWORD PTR [r13+0x9c0],0x0
  40a83e:	je     40a85d <isspace@plt+0x6f4d>
  40a840:	lea    rsi,[rip+0x24fd9]        # 42f820 <isspace@plt+0x2bf10>
  40a847:	mov    rdi,r13
  40a84a:	xor    eax,eax
  40a84c:	call   4299f0 <isspace@plt+0x260e0>
  40a851:	jmp    40a991 <isspace@plt+0x7081>
  40a856:	xor    eax,eax
  40a858:	jmp    40a9b2 <isspace@plt+0x70a2>
  40a85d:	test   r15d,r15d
  40a860:	je     40a885 <isspace@plt+0x6f75>
  40a862:	lea    rdi,[rsp+0x20]
  40a867:	call   404da0 <isspace@plt+0x1490>
  40a86c:	lea    rsi,[rip+0x24fbf]        # 42f832 <isspace@plt+0x2bf22>
  40a873:	mov    rdi,r13
  40a876:	mov    rdx,rax
  40a879:	xor    eax,eax
  40a87b:	call   4299f0 <isspace@plt+0x260e0>
  40a880:	jmp    40a991 <isspace@plt+0x7081>
  40a885:	lea    rbx,[rsp+0x38]
  40a88a:	mov    rdi,rbx
  40a88d:	call   404d70 <isspace@plt+0x1460>
  40a892:	mov    QWORD PTR [rsp+0x10],rax
  40a897:	mov    rdi,rbx
  40a89a:	call   404e90 <isspace@plt+0x1580>
  40a89f:	mov    QWORD PTR [rsp],rax
  40a8a3:	mov    rbx,QWORD PTR [r14+0x10]
  40a8a7:	mov    rdi,r12
  40a8aa:	call   416fc0 <isspace@plt+0x136b0>
  40a8af:	test   al,al
  40a8b1:	je     40a988 <isspace@plt+0x7078>
  40a8b7:	mov    rbp,QWORD PTR [rbx+0x448]
  40a8be:	test   rbp,rbp
  40a8c1:	mov    rcx,rbx
  40a8c4:	je     40a8d0 <isspace@plt+0x6fc0>
  40a8c6:	mov    rax,QWORD PTR [rbp+0x20]
  40a8ca:	cmp    rax,QWORD PTR [r12]
  40a8ce:	jbe    40a8d9 <isspace@plt+0x6fc9>
  40a8d0:	lea    rbp,[rcx+0x440]
  40a8d7:	jmp    40a8dd <isspace@plt+0x6fcd>
  40a8d9:	add    rbp,0x38
  40a8dd:	mov    rbx,QWORD PTR [rbp+0x0]
  40a8e1:	test   rbx,rbx
  40a8e4:	je     40a921 <isspace@plt+0x7011>
  40a8e6:	mov    rax,QWORD PTR [r12]
  40a8ea:	cmp    QWORD PTR [rbx+0x20],rax
  40a8ee:	ja     40a906 <isspace@plt+0x6ff6>
  40a8f0:	mov    rbp,rbx
  40a8f3:	mov    rbx,QWORD PTR [rbx+0x38]
  40a8f7:	test   rbx,rbx
  40a8fa:	je     40a91d <isspace@plt+0x700d>
  40a8fc:	cmp    QWORD PTR [rbx+0x20],rax
  40a900:	jbe    40a8f0 <isspace@plt+0x6fe0>
  40a902:	add    rbp,0x38
  40a906:	mov    rax,QWORD PTR [rbx+0x18]
  40a90a:	cmp    rax,QWORD PTR [r12+0x8]
  40a90f:	jae    40a923 <isspace@plt+0x7013>
  40a911:	mov    DWORD PTR [rcx+0x450],0xc
  40a91b:	jmp    40a988 <isspace@plt+0x7078>
  40a91d:	add    rbp,0x38
  40a921:	xor    ebx,ebx
  40a923:	mov    edi,0x1
  40a928:	mov    esi,0x48
  40a92d:	mov    QWORD PTR [rsp+0x8],rcx
  40a932:	call   403460 <calloc@plt>
  40a937:	test   rax,rax
  40a93a:	je     40a988 <isspace@plt+0x7078>
  40a93c:	mov    DWORD PTR [rax],0x3
  40a942:	vmovups xmm0,XMMWORD PTR [r12]
  40a948:	vmovups XMMWORD PTR [rax+0x18],xmm0
  40a94d:	mov    rcx,QWORD PTR [rsp+0x18]
  40a952:	mov    QWORD PTR [rax+0x10],rcx
  40a956:	mov    QWORD PTR [rax+0x8],r14
  40a95a:	mov    QWORD PTR [rax+0x38],rbx
  40a95e:	mov    QWORD PTR [rbp+0x0],rax
  40a962:	mov    rcx,QWORD PTR [rsp+0x8]
  40a967:	mov    QWORD PTR [rcx+0x448],rax
  40a96e:	mov    rcx,QWORD PTR [rsp]
  40a972:	mov    QWORD PTR [rax+0x28],rcx
  40a976:	mov    rcx,QWORD PTR [rsp+0x10]
  40a97b:	mov    QWORD PTR [rax+0x30],rcx
  40a97f:	mov    DWORD PTR [rax+0x40],0x1
  40a986:	jmp    40a991 <isspace@plt+0x7081>
  40a988:	mov    rdi,QWORD PTR [rsp]
  40a98c:	call   4030d0 <free@plt>
  40a991:	lea    rdi,[rsp+0x38]
  40a996:	call   404540 <isspace@plt+0xc30>
  40a99b:	lea    rdi,[rsp+0x20]
  40a9a0:	call   404540 <isspace@plt+0xc30>
  40a9a5:	mov    eax,DWORD PTR [r13+0x9c0]
  40a9ac:	or     eax,r15d
  40a9af:	sete   al
  40a9b2:	mov    rcx,QWORD PTR fs:0x28
  40a9bb:	cmp    rcx,QWORD PTR [rsp+0x50]
  40a9c0:	jne    40a9d1 <isspace@plt+0x70c1>
  40a9c2:	add    rsp,0x58
  40a9c6:	pop    rbx
  40a9c7:	pop    r12
  40a9c9:	pop    r13
  40a9cb:	pop    r14
  40a9cd:	pop    r15
  40a9cf:	pop    rbp
  40a9d0:	ret    
  40a9d1:	call   403280 <__stack_chk_fail@plt>
  40a9d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a9e0:	push   r15
  40a9e2:	push   r14
  40a9e4:	push   r13
  40a9e6:	push   r12
  40a9e8:	push   rbx
  40a9e9:	sub    rsp,0x20
  40a9ed:	mov    rbx,r8
  40a9f0:	mov    r14,rcx
  40a9f3:	mov    r15,rdx
  40a9f6:	mov    r12,rsi
  40a9f9:	mov    r13,rdi
  40a9fc:	mov    rax,QWORD PTR fs:0x28
  40aa05:	mov    QWORD PTR [rsp+0x18],rax
  40aa0a:	test   r8,r8
  40aa0d:	je     40aa1c <isspace@plt+0x710c>
  40aa0f:	mov    rdi,rbx
  40aa12:	call   41af10 <isspace@plt+0x17600>
  40aa17:	mov    rdi,rax
  40aa1a:	jmp    40aa1f <isspace@plt+0x710f>
  40aa1c:	mov    rdi,QWORD PTR [r9]
  40aa1f:	mov    rsi,0xffffffffffffffff
  40aa26:	call   417250 <isspace@plt+0x13940>
  40aa2b:	mov    QWORD PTR [rsp+0x8],rax
  40aa30:	mov    QWORD PTR [rsp+0x10],rdx
  40aa35:	lea    r9,[rsp+0x8]
  40aa3a:	mov    rdi,r13
  40aa3d:	mov    rsi,r12
  40aa40:	mov    rdx,r15
  40aa43:	mov    rcx,r14
  40aa46:	mov    r8,rbx
  40aa49:	call   40a7c0 <isspace@plt+0x6eb0>
  40aa4e:	mov    rcx,QWORD PTR fs:0x28
  40aa57:	cmp    rcx,QWORD PTR [rsp+0x18]
  40aa5c:	jne    40aa6c <isspace@plt+0x715c>
  40aa5e:	add    rsp,0x20
  40aa62:	pop    rbx
  40aa63:	pop    r12
  40aa65:	pop    r13
  40aa67:	pop    r14
  40aa69:	pop    r15
  40aa6b:	ret    
  40aa6c:	call   403280 <__stack_chk_fail@plt>
  40aa71:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40aa7b:	nop    DWORD PTR [rax+rax*1+0x0]
  40aa80:	push   rbp
  40aa81:	push   r15
  40aa83:	push   r14
  40aa85:	push   r13
  40aa87:	push   r12
  40aa89:	push   rbx
  40aa8a:	sub    rsp,0x198
  40aa91:	mov    rax,QWORD PTR fs:0x28
  40aa9a:	mov    QWORD PTR [rsp+0x190],rax
  40aaa2:	test   rsi,rsi
  40aaa5:	je     40aacd <isspace@plt+0x71bd>
  40aaa7:	mov    r13,rsi
  40aaaa:	mov    rbx,QWORD PTR [rsi+0x10]
  40aaae:	cmp    QWORD PTR [rbx+0x440],0x0
  40aab6:	je     40aac4 <isspace@plt+0x71b4>
  40aab8:	mov    DWORD PTR [rbx+0x450],0xd
  40aac2:	jmp    40aacd <isspace@plt+0x71bd>
  40aac4:	cmp    DWORD PTR [rbx+0x450],0x0
  40aacb:	je     40aafa <isspace@plt+0x71ea>
  40aacd:	xor    ebx,ebx
  40aacf:	mov    rax,QWORD PTR fs:0x28
  40aad8:	cmp    rax,QWORD PTR [rsp+0x190]
  40aae0:	jne    40b07b <isspace@plt+0x776b>
  40aae6:	mov    eax,ebx
  40aae8:	add    rsp,0x198
  40aaef:	pop    rbx
  40aaf0:	pop    r12
  40aaf2:	pop    r13
  40aaf4:	pop    r14
  40aaf6:	pop    r15
  40aaf8:	pop    rbp
  40aaf9:	ret    
  40aafa:	mov    r12,r9
  40aafd:	mov    rbp,rcx
  40ab00:	mov    r14,rdi
  40ab03:	mov    QWORD PTR [rsp+0x18],rdx
  40ab08:	mov    r15,QWORD PTR [rbx]
  40ab0b:	mov    rdi,r15
  40ab0e:	call   410890 <isspace@plt+0xcf80>
  40ab13:	xor    edi,edi
  40ab15:	mov    rsi,rax
  40ab18:	call   417250 <isspace@plt+0x13940>
  40ab1d:	mov    QWORD PTR [rsp+0x50],rax
  40ab22:	mov    QWORD PTR [rsp+0x58],rdx
  40ab27:	lea    rsi,[rsp+0x50]
  40ab2c:	mov    rdi,r12
  40ab2f:	call   417290 <isspace@plt+0x13980>
  40ab34:	mov    BYTE PTR [rsp+0x7],al
  40ab38:	mov    rdi,QWORD PTR [rbp+0x8]
  40ab3c:	test   rdi,rdi
  40ab3f:	mov    QWORD PTR [rsp+0x10],r14
  40ab44:	mov    QWORD PTR [rsp+0x20],r12
  40ab49:	mov    QWORD PTR [rsp+0x28],rbx
  40ab4e:	je     40ae34 <isspace@plt+0x7524>
  40ab54:	add    rbp,0x8
  40ab58:	lea    rax,[rbx+0x20]
  40ab5c:	mov    QWORD PTR [rsp+0x40],rax
  40ab61:	mov    QWORD PTR [rsp+0x38],r15
  40ab66:	call   4201d0 <isspace@plt+0x1c8c0>
  40ab6b:	test   rax,rax
  40ab6e:	je     40aacd <isspace@plt+0x71bd>
  40ab74:	mov    edi,0x1
  40ab79:	mov    QWORD PTR [rsp+0x8],rax
  40ab7e:	mov    rsi,rax
  40ab81:	lea    rdx,[rsp+0xf0]
  40ab89:	call   403560 <__xstat@plt>
  40ab8e:	mov    ecx,eax
  40ab90:	test   eax,eax
  40ab92:	je     40abbd <isspace@plt+0x72ad>
  40ab94:	xor    edx,edx
  40ab96:	mov    rax,QWORD PTR [rsp+0x18]
  40ab9b:	cmp    BYTE PTR [rax+0x68],0x21
  40ab9f:	je     40abeb <isspace@plt+0x72db>
  40aba1:	test   dl,dl
  40aba3:	je     40abe3 <isspace@plt+0x72d3>
  40aba5:	mov    rax,QWORD PTR [rbx+0x78]
  40aba9:	test   rax,rax
  40abac:	je     40abeb <isspace@plt+0x72db>
  40abae:	cmp    rax,QWORD PTR [rsp+0x148]
  40abb6:	jge    40abeb <isspace@plt+0x72db>
  40abb8:	jmp    40b047 <isspace@plt+0x7737>
  40abbd:	cmp    QWORD PTR [rbx+0x8],0x0
  40abc2:	je     40ab94 <isspace@plt+0x7284>
  40abc4:	mov    rax,QWORD PTR [rbx+0x20]
  40abc8:	cmp    rax,QWORD PTR [rsp+0xf0]
  40abd0:	jne    40ab94 <isspace@plt+0x7284>
  40abd2:	mov    rax,QWORD PTR [rbx+0x28]
  40abd6:	cmp    rax,QWORD PTR [rsp+0xf8]
  40abde:	sete   dl
  40abe1:	jmp    40ab96 <isspace@plt+0x7286>
  40abe3:	test   ecx,ecx
  40abe5:	je     40b050 <isspace@plt+0x7740>
  40abeb:	mov    DWORD PTR [rsp+0x34],edx
  40abef:	mov    DWORD PTR [rsp+0x30],ecx
  40abf3:	mov    rdi,r14
  40abf6:	mov    esi,0x4
  40abfb:	mov    rdx,rbx
  40abfe:	mov    rcx,QWORD PTR [rsp+0x8]
  40ac03:	xor    eax,eax
  40ac05:	call   41fe60 <isspace@plt+0x1c550>
  40ac0a:	test   al,al
  40ac0c:	jne    40ac1d <isspace@plt+0x730d>
  40ac0e:	mov    rax,QWORD PTR [rsp+0x18]
  40ac13:	cmp    BYTE PTR [rax+0x68],0x21
  40ac17:	jne    40aff3 <isspace@plt+0x76e3>
  40ac1d:	cmp    BYTE PTR [rsp+0x7],0x0
  40ac22:	je     40ac3f <isspace@plt+0x732f>
  40ac24:	mov    rdi,r15
  40ac27:	call   410890 <isspace@plt+0xcf80>
  40ac2c:	xor    edi,edi
  40ac2e:	mov    rsi,rax
  40ac31:	call   417250 <isspace@plt+0x13940>
  40ac36:	mov    QWORD PTR [r12],rax
  40ac3a:	mov    QWORD PTR [r12+0x8],rdx
  40ac3f:	mov    ecx,DWORD PTR [rbx+0x438]
  40ac45:	mov    rdi,r15
  40ac48:	mov    esi,0xffffff9c
  40ac4d:	mov    rdx,QWORD PTR [rsp+0x8]
  40ac52:	call   411880 <isspace@plt+0xdf70>
  40ac57:	test   rax,rax
  40ac5a:	je     40afb8 <isspace@plt+0x76a8>
  40ac60:	mov    r15,rax
  40ac63:	mov    QWORD PTR [rsp+0x48],rbp
  40ac68:	mov    rax,QWORD PTR [r14+0x9a0]
  40ac6f:	mov    r14b,BYTE PTR [rax+0x58]
  40ac73:	mov    rdi,QWORD PTR [r13+0x18]
  40ac77:	call   41efa0 <isspace@plt+0x1b690>
  40ac7c:	test   rax,rax
  40ac7f:	je     40acfd <isspace@plt+0x73ed>
  40ac81:	mov    rbp,rax
  40ac84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ac8e:	xchg   ax,ax
  40ac90:	test   r14b,r14b
  40ac93:	lea    rbx,[rsp+0x60]
  40ac98:	je     40acb0 <isspace@plt+0x73a0>
  40ac9a:	mov    rdi,rbp
  40ac9d:	call   41f7a0 <isspace@plt+0x1be90>
  40aca2:	mov    QWORD PTR [rsp+0x60],rax
  40aca7:	mov    QWORD PTR [rsp+0x68],rdx
  40acac:	jmp    40acbf <isspace@plt+0x73af>
  40acae:	xchg   ax,ax
  40acb0:	mov    rax,QWORD PTR [rsp+0x20]
  40acb5:	vmovups xmm0,XMMWORD PTR [rax]
  40acb9:	vmovaps XMMWORD PTR [rsp+0x60],xmm0
  40acbf:	mov    rdi,r15
  40acc2:	mov    rsi,rbx
  40acc5:	call   412280 <isspace@plt+0xe970>
  40acca:	cmp    rax,0xffffffffffffffff
  40acce:	je     40adf3 <isspace@plt+0x74e3>
  40acd4:	mov    r12,rax
  40acd7:	mov    rdi,rbx
  40acda:	call   417020 <isspace@plt+0x13710>
  40acdf:	cmp    r12,rax
  40ace2:	jne    40adf3 <isspace@plt+0x74e3>
  40ace8:	test   r14b,r14b
  40aceb:	je     40acfd <isspace@plt+0x73ed>
  40aced:	mov    rdi,rbp
  40acf0:	call   41f080 <isspace@plt+0x1b770>
  40acf5:	mov    rbp,rax
  40acf8:	test   rax,rax
  40acfb:	jne    40ac90 <isspace@plt+0x7380>
  40acfd:	mov    rdi,r15
  40ad00:	call   411fc0 <isspace@plt+0xe6b0>
  40ad05:	test   al,al
  40ad07:	je     40adfb <isspace@plt+0x74eb>
  40ad0d:	mov    rbx,QWORD PTR [rsp+0x28]
  40ad12:	mov    rdi,QWORD PTR [rbx+0x8]
  40ad16:	test   rdi,rdi
  40ad19:	mov    r14,QWORD PTR [rsp+0x10]
  40ad1e:	je     40ad48 <isspace@plt+0x7438>
  40ad20:	cmp    BYTE PTR [rsp+0x34],0x0
  40ad25:	mov    r12,QWORD PTR [rsp+0x20]
  40ad2a:	mov    r15,QWORD PTR [rsp+0x38]
  40ad2f:	jne    40ad5f <isspace@plt+0x744f>
  40ad31:	cmp    DWORD PTR [rsp+0x30],0x0
  40ad36:	je     40adb3 <isspace@plt+0x74a3>
  40ad38:	mov    rsi,QWORD PTR [rsp+0x8]
  40ad3d:	call   403470 <strcmp@plt>
  40ad42:	test   eax,eax
  40ad44:	jne    40adb3 <isspace@plt+0x74a3>
  40ad46:	jmp    40ad5f <isspace@plt+0x744f>
  40ad48:	mov    rdi,rbx
  40ad4b:	mov    rsi,QWORD PTR [rsp+0x8]
  40ad50:	call   420300 <isspace@plt+0x1c9f0>
  40ad55:	mov    r12,QWORD PTR [rsp+0x20]
  40ad5a:	mov    r15,QWORD PTR [rsp+0x38]
  40ad5f:	lea    rdi,[rsp+0x60]
  40ad64:	mov    rsi,r15
  40ad67:	call   40fef0 <isspace@plt+0xc5e0>
  40ad6c:	vmovups ymm0,YMMWORD PTR [rsp+0xd0]
  40ad75:	mov    rax,QWORD PTR [rsp+0x40]
  40ad7a:	vmovups YMMWORD PTR [rax+0x70],ymm0
  40ad7f:	vmovups ymm0,YMMWORD PTR [rsp+0x60]
  40ad85:	vmovups ymm1,YMMWORD PTR [rsp+0x80]
  40ad8e:	vmovups ymm2,YMMWORD PTR [rsp+0xa0]
  40ad97:	vmovups ymm3,YMMWORD PTR [rsp+0xc0]
  40ada0:	vmovups YMMWORD PTR [rax+0x60],ymm3
  40ada5:	vmovups YMMWORD PTR [rax+0x40],ymm2
  40adaa:	vmovups YMMWORD PTR [rax+0x20],ymm1
  40adaf:	vmovups YMMWORD PTR [rax],ymm0
  40adb3:	mov    rdi,r14
  40adb6:	mov    esi,0x5
  40adbb:	mov    rdx,rbx
  40adbe:	mov    rbp,QWORD PTR [rsp+0x8]
  40adc3:	mov    rcx,rbp
  40adc6:	xor    eax,eax
  40adc8:	vzeroupper 
  40adcb:	call   41fe60 <isspace@plt+0x1c550>
  40add0:	mov    rdi,rbp
  40add3:	call   4030d0 <free@plt>
  40add8:	mov    rbp,QWORD PTR [rsp+0x48]
  40addd:	mov    rdi,QWORD PTR [rbp+0x8]
  40ade1:	add    rbp,0x8
  40ade5:	test   rdi,rdi
  40ade8:	jne    40ab66 <isspace@plt+0x7256>
  40adee:	jmp    40af9b <isspace@plt+0x768b>
  40adf3:	mov    rdi,r15
  40adf6:	call   411f30 <isspace@plt+0xe620>
  40adfb:	call   403130 <__errno_location@plt>
  40ae00:	mov    edi,DWORD PTR [rax]
  40ae02:	call   403880 <strerror@plt>
  40ae07:	lea    rsi,[rip+0x24ba7]        # 42f9b5 <isspace@plt+0x2c0a5>
  40ae0e:	mov    rdi,QWORD PTR [rsp+0x10]
  40ae13:	mov    rbx,QWORD PTR [rsp+0x8]
  40ae18:	mov    rdx,rbx
  40ae1b:	mov    rcx,rax
  40ae1e:	xor    eax,eax
  40ae20:	call   4299f0 <isspace@plt+0x260e0>
  40ae25:	mov    rdi,rbx
  40ae28:	call   4030d0 <free@plt>
  40ae2d:	xor    ebx,ebx
  40ae2f:	jmp    40aacf <isspace@plt+0x71bf>
  40ae34:	mov    rdi,QWORD PTR [rbx+0x8]
  40ae38:	test   rdi,rdi
  40ae3b:	je     40ae6d <isspace@plt+0x755d>
  40ae3d:	mov    rax,QWORD PTR [rsp+0x18]
  40ae42:	cmp    BYTE PTR [rax+0x68],0x21
  40ae46:	jne    40afa2 <isspace@plt+0x7692>
  40ae4c:	lea    rbp,[rsp+0x180]
  40ae54:	mov    QWORD PTR [rsp+0x180],rdi
  40ae5c:	mov    QWORD PTR [rsp+0x188],0x0
  40ae68:	jmp    40ab58 <isspace@plt+0x7248>
  40ae6d:	cmp    DWORD PTR [rbx+0x14],0xffffffff
  40ae71:	je     40afcd <isspace@plt+0x76bd>
  40ae77:	mov    rdi,QWORD PTR [rbp+0x0]
  40ae7b:	mov    esi,0x71
  40ae80:	call   4032f0 <strchr@plt>
  40ae85:	test   rax,rax
  40ae88:	je     40afea <isspace@plt+0x76da>
  40ae8e:	mov    rdi,r14
  40ae91:	mov    esi,0x4
  40ae96:	mov    rdx,rbx
  40ae99:	xor    ecx,ecx
  40ae9b:	xor    eax,eax
  40ae9d:	call   41fe60 <isspace@plt+0x1c550>
  40aea2:	test   al,al
  40aea4:	jne    40aeb5 <isspace@plt+0x75a5>
  40aea6:	mov    rax,QWORD PTR [rsp+0x18]
  40aeab:	cmp    BYTE PTR [rax+0x68],0x21
  40aeaf:	jne    40b02f <isspace@plt+0x771f>
  40aeb5:	cmp    BYTE PTR [rsp+0x7],0x0
  40aeba:	je     40aed7 <isspace@plt+0x75c7>
  40aebc:	mov    rdi,r15
  40aebf:	call   410890 <isspace@plt+0xcf80>
  40aec4:	xor    edi,edi
  40aec6:	mov    rsi,rax
  40aec9:	call   417250 <isspace@plt+0x13940>
  40aece:	mov    QWORD PTR [r12],rax
  40aed2:	mov    QWORD PTR [r12+0x8],rdx
  40aed7:	mov    r12,r15
  40aeda:	mov    rax,QWORD PTR [r14+0x9a0]
  40aee1:	mov    r15b,BYTE PTR [rax+0x58]
  40aee5:	mov    rdi,QWORD PTR [r13+0x18]
  40aee9:	call   41efa0 <isspace@plt+0x1b690>
  40aeee:	test   rax,rax
  40aef1:	je     40af79 <isspace@plt+0x7669>
  40aef7:	mov    rbx,rax
  40aefa:	lea    r14,[rsp+0xf0]
  40af02:	test   r15b,r15b
  40af05:	je     40af21 <isspace@plt+0x7611>
  40af07:	mov    rdi,rbx
  40af0a:	call   41f7a0 <isspace@plt+0x1be90>
  40af0f:	mov    QWORD PTR [rsp+0xf0],rax
  40af17:	mov    QWORD PTR [rsp+0xf8],rdx
  40af1f:	jmp    40af33 <isspace@plt+0x7623>
  40af21:	mov    rax,QWORD PTR [rsp+0x20]
  40af26:	vmovups xmm0,XMMWORD PTR [rax]
  40af2a:	vmovaps XMMWORD PTR [rsp+0xf0],xmm0
  40af33:	mov    rax,QWORD PTR [rsp+0x28]
  40af38:	mov    edx,DWORD PTR [rax+0x14]
  40af3b:	mov    rdi,r12
  40af3e:	mov    rsi,r14
  40af41:	call   4122c0 <isspace@plt+0xe9b0>
  40af46:	cmp    rax,0xffffffffffffffff
  40af4a:	je     40b06b <isspace@plt+0x775b>
  40af50:	mov    rbp,rax
  40af53:	mov    rdi,r14
  40af56:	call   417020 <isspace@plt+0x13710>
  40af5b:	cmp    rbp,rax
  40af5e:	jne    40b06b <isspace@plt+0x775b>
  40af64:	test   r15b,r15b
  40af67:	je     40af79 <isspace@plt+0x7669>
  40af69:	mov    rdi,rbx
  40af6c:	call   41f080 <isspace@plt+0x1b770>
  40af71:	mov    rbx,rax
  40af74:	test   rax,rax
  40af77:	jne    40af02 <isspace@plt+0x75f2>
  40af79:	mov    rdi,r12
  40af7c:	xor    esi,esi
  40af7e:	call   412190 <isspace@plt+0xe880>
  40af83:	mov    rdi,QWORD PTR [rsp+0x10]
  40af88:	mov    esi,0x5
  40af8d:	mov    rdx,QWORD PTR [rsp+0x28]
  40af92:	xor    ecx,ecx
  40af94:	xor    eax,eax
  40af96:	call   41fe60 <isspace@plt+0x1c550>
  40af9b:	mov    bl,0x1
  40af9d:	jmp    40aacf <isspace@plt+0x71bf>
  40afa2:	mov    rax,QWORD PTR [r14+0x9a0]
  40afa9:	cmp    BYTE PTR [rax+0x58],0x0
  40afad:	je     40afd6 <isspace@plt+0x76c6>
  40afaf:	lea    rsi,[rip+0x24911]        # 42f8c7 <isspace@plt+0x2bfb7>
  40afb6:	jmp    40b036 <isspace@plt+0x7726>
  40afb8:	call   403130 <__errno_location@plt>
  40afbd:	mov    edi,DWORD PTR [rax]
  40afbf:	test   edi,edi
  40afc1:	je     40b011 <isspace@plt+0x7701>
  40afc3:	call   403880 <strerror@plt>
  40afc8:	mov    rcx,rax
  40afcb:	jmp    40b018 <isspace@plt+0x7708>
  40afcd:	lea    rsi,[rip+0x24870]        # 42f844 <isspace@plt+0x2bf34>
  40afd4:	jmp    40b036 <isspace@plt+0x7726>
  40afd6:	cmp    BYTE PTR [rsp+0x7],0x0
  40afdb:	jne    40ae4c <isspace@plt+0x753c>
  40afe1:	lea    rsi,[rip+0x24911]        # 42f8f9 <isspace@plt+0x2bfe9>
  40afe8:	jmp    40b036 <isspace@plt+0x7726>
  40afea:	lea    rsi,[rip+0x24865]        # 42f856 <isspace@plt+0x2bf46>
  40aff1:	jmp    40b036 <isspace@plt+0x7726>
  40aff3:	lea    rsi,[rip+0x24974]        # 42f96e <isspace@plt+0x2c05e>
  40affa:	mov    rdi,r14
  40affd:	mov    rbx,QWORD PTR [rsp+0x8]
  40b002:	mov    rdx,rbx
  40b005:	xor    eax,eax
  40b007:	call   4299f0 <isspace@plt+0x260e0>
  40b00c:	jmp    40ae25 <isspace@plt+0x7515>
  40b011:	lea    rcx,[rip+0x2497e]        # 42f996 <isspace@plt+0x2c086>
  40b018:	lea    rsi,[rip+0x24996]        # 42f9b5 <isspace@plt+0x2c0a5>
  40b01f:	mov    rdi,r14
  40b022:	mov    rbx,QWORD PTR [rsp+0x8]
  40b027:	mov    rdx,rbx
  40b02a:	jmp    40ae1e <isspace@plt+0x750e>
  40b02f:	lea    rsi,[rip+0x2484f]        # 42f885 <isspace@plt+0x2bf75>
  40b036:	xor    ebx,ebx
  40b038:	mov    rdi,r14
  40b03b:	xor    eax,eax
  40b03d:	call   4299f0 <isspace@plt+0x260e0>
  40b042:	jmp    40aacf <isspace@plt+0x71bf>
  40b047:	lea    rsi,[rip+0x248db]        # 42f929 <isspace@plt+0x2c019>
  40b04e:	jmp    40b057 <isspace@plt+0x7747>
  40b050:	lea    rsi,[rip+0x24902]        # 42f959 <isspace@plt+0x2c049>
  40b057:	mov    rdi,r14
  40b05a:	xor    eax,eax
  40b05c:	call   4299f0 <isspace@plt+0x260e0>
  40b061:	mov    rbx,QWORD PTR [rsp+0x8]
  40b066:	jmp    40ae25 <isspace@plt+0x7515>
  40b06b:	lea    rsi,[rip+0x2483d]        # 42f8af <isspace@plt+0x2bf9f>
  40b072:	xor    ebx,ebx
  40b074:	mov    rdi,QWORD PTR [rsp+0x10]
  40b079:	jmp    40b03b <isspace@plt+0x772b>
  40b07b:	call   403280 <__stack_chk_fail@plt>
  40b080:	push   rbp
  40b081:	push   r15
  40b083:	push   r14
  40b085:	push   r13
  40b087:	push   r12
  40b089:	push   rbx
  40b08a:	sub    rsp,0x68
  40b08e:	mov    QWORD PTR [rsp+0x8],r9
  40b093:	mov    r15,r8
  40b096:	mov    r12,rdx
  40b099:	mov    r13,rsi
  40b09c:	mov    rbx,rdi
  40b09f:	mov    rax,QWORD PTR fs:0x28
  40b0a8:	mov    QWORD PTR [rsp+0x60],rax
  40b0ad:	mov    rax,QWORD PTR [rcx]
  40b0b0:	mov    QWORD PTR [rsp+0x20],rax
  40b0b5:	lea    rax,[rip+0x21060]        # 42c11c <isspace@plt+0x2880c>
  40b0bc:	vmovq  xmm0,rax
  40b0c1:	lea    rax,[rip+0x24902]        # 42f9ca <isspace@plt+0x2c0ba>
  40b0c8:	vmovq  xmm1,rax
  40b0cd:	vpunpcklqdq xmm0,xmm1,xmm0
  40b0d1:	vmovdqu XMMWORD PTR [rsp+0x28],xmm0
  40b0d7:	vpxor  xmm0,xmm0,xmm0
  40b0db:	vmovdqu YMMWORD PTR [rsp+0x38],ymm0
  40b0e1:	mov    QWORD PTR [rsp+0x58],0x0
  40b0ea:	mov    rsi,QWORD PTR [rcx+0x8]
  40b0ee:	test   rsi,rsi
  40b0f1:	je     40b0fc <isspace@plt+0x77ec>
  40b0f3:	mov    rbp,rcx
  40b0f6:	add    rbp,0x8
  40b0fa:	jmp    40b113 <isspace@plt+0x7803>
  40b0fc:	lea    rbp,[rsp+0x10]
  40b101:	lea    rsi,[rip+0x23a29]        # 42eb31 <isspace@plt+0x2b221>
  40b108:	vmovq  xmm0,rsi
  40b10d:	vmovdqa XMMWORD PTR [rsp+0x10],xmm0
  40b113:	mov    r14d,0x4
  40b119:	nop    DWORD PTR [rax+0x0]
  40b120:	mov    rdi,rbx
  40b123:	vzeroupper 
  40b126:	call   40d5c0 <isspace@plt+0x9cb0>
  40b12b:	test   rax,rax
  40b12e:	je     40b17d <isspace@plt+0x786d>
  40b130:	mov    rdi,rax
  40b133:	call   403850 <strdup@plt>
  40b138:	mov    QWORD PTR [rsp+r14*8+0x18],rax
  40b13d:	test   rax,rax
  40b140:	je     40b17d <isspace@plt+0x786d>
  40b142:	cmp    r14,0x6
  40b146:	ja     40b155 <isspace@plt+0x7845>
  40b148:	mov    rsi,QWORD PTR [rbp+r14*8-0x18]
  40b14d:	inc    r14
  40b150:	test   rsi,rsi
  40b153:	jne    40b120 <isspace@plt+0x7810>
  40b155:	mov    QWORD PTR [rsp+0x58],0x0
  40b15e:	lea    rcx,[rsp+0x20]
  40b163:	mov    rdi,rbx
  40b166:	mov    rsi,r13
  40b169:	mov    rdx,r12
  40b16c:	mov    r8,r15
  40b16f:	mov    r9,QWORD PTR [rsp+0x8]
  40b174:	call   40a670 <isspace@plt+0x6d60>
  40b179:	mov    ebx,eax
  40b17b:	jmp    40b17f <isspace@plt+0x786f>
  40b17d:	xor    ebx,ebx
  40b17f:	mov    rdi,QWORD PTR [rsp+0x38]
  40b184:	call   4030d0 <free@plt>
  40b189:	mov    rdi,QWORD PTR [rsp+0x40]
  40b18e:	call   4030d0 <free@plt>
  40b193:	mov    rdi,QWORD PTR [rsp+0x48]
  40b198:	call   4030d0 <free@plt>
  40b19d:	mov    rdi,QWORD PTR [rsp+0x50]
  40b1a2:	call   4030d0 <free@plt>
  40b1a7:	mov    rdi,QWORD PTR [rsp+0x58]
  40b1ac:	call   4030d0 <free@plt>
  40b1b1:	mov    rax,QWORD PTR fs:0x28
  40b1ba:	cmp    rax,QWORD PTR [rsp+0x60]
  40b1bf:	jne    40b1d2 <isspace@plt+0x78c2>
  40b1c1:	mov    eax,ebx
  40b1c3:	add    rsp,0x68
  40b1c7:	pop    rbx
  40b1c8:	pop    r12
  40b1ca:	pop    r13
  40b1cc:	pop    r14
  40b1ce:	pop    r15
  40b1d0:	pop    rbp
  40b1d1:	ret    
  40b1d2:	call   403280 <__stack_chk_fail@plt>
  40b1d7:	nop    WORD PTR [rax+rax*1+0x0]
  40b1e0:	push   r15
  40b1e2:	push   r14
  40b1e4:	push   r13
  40b1e6:	push   r12
  40b1e8:	push   rbx
  40b1e9:	sub    rsp,0x10
  40b1ed:	mov    r15,rdi
  40b1f0:	mov    rax,QWORD PTR fs:0x28
  40b1f9:	mov    QWORD PTR [rsp+0x8],rax
  40b1fe:	cmp    QWORD PTR [rcx+0x10],0x0
  40b203:	je     40b23c <isspace@plt+0x792c>
  40b205:	lea    rsi,[rip+0x247d3]        # 42f9df <isspace@plt+0x2c0cf>
  40b20c:	xor    ebx,ebx
  40b20e:	mov    rdi,r15
  40b211:	xor    eax,eax
  40b213:	call   4299f0 <isspace@plt+0x260e0>
  40b218:	mov    rax,QWORD PTR fs:0x28
  40b221:	cmp    rax,QWORD PTR [rsp+0x8]
  40b226:	jne    40b348 <isspace@plt+0x7a38>
  40b22c:	mov    eax,ebx
  40b22e:	add    rsp,0x10
  40b232:	pop    rbx
  40b233:	pop    r12
  40b235:	pop    r13
  40b237:	pop    r14
  40b239:	pop    r15
  40b23b:	ret    
  40b23c:	mov    r14,rsi
  40b23f:	test   rsi,rsi
  40b242:	je     40b2f0 <isspace@plt+0x79e0>
  40b248:	mov    r13,rcx
  40b24b:	cmp    BYTE PTR [rdx+0x68],0x21
  40b24f:	je     40b261 <isspace@plt+0x7951>
  40b251:	mov    rdi,r14
  40b254:	call   4216f0 <isspace@plt+0x1dde0>
  40b259:	test   al,al
  40b25b:	je     40b310 <isspace@plt+0x7a00>
  40b261:	mov    rsi,QWORD PTR [r13+0x8]
  40b265:	test   rsi,rsi
  40b268:	je     40b2f7 <isspace@plt+0x79e7>
  40b26e:	add    r13,0x10
  40b272:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b27c:	nop    DWORD PTR [rax+0x0]
  40b280:	mov    rdi,r15
  40b283:	call   40d5c0 <isspace@plt+0x9cb0>
  40b288:	test   rax,rax
  40b28b:	je     40b2f0 <isspace@plt+0x79e0>
  40b28d:	mov    r12,rax
  40b290:	call   403130 <__errno_location@plt>
  40b295:	mov    rbx,rax
  40b298:	mov    DWORD PTR [rax],0x0
  40b29e:	mov    rdi,r15
  40b2a1:	mov    rsi,r12
  40b2a4:	call   4215f0 <isspace@plt+0x1dce0>
  40b2a9:	test   al,al
  40b2ab:	je     40b31c <isspace@plt+0x7a0c>
  40b2ad:	mov    rsi,QWORD PTR [r13+0x0]
  40b2b1:	add    r13,0x8
  40b2b5:	test   rsi,rsi
  40b2b8:	jne    40b280 <isspace@plt+0x7970>
  40b2ba:	mov    rbx,QWORD PTR [r15+0x30]
  40b2be:	mov    rax,r14
  40b2c1:	cmp    rbx,r14
  40b2c4:	je     40b2e5 <isspace@plt+0x79d5>
  40b2c6:	mov    rdi,r14
  40b2c9:	mov    rsi,rbx
  40b2cc:	call   421750 <isspace@plt+0x1de40>
  40b2d1:	mov    rdi,r14
  40b2d4:	call   421880 <isspace@plt+0x1df70>
  40b2d9:	mov    rdi,rbx
  40b2dc:	call   4213c0 <isspace@plt+0x1dab0>
  40b2e1:	mov    rax,QWORD PTR [r15+0x30]
  40b2e5:	cmp    rax,r14
  40b2e8:	setne  bl
  40b2eb:	jmp    40b218 <isspace@plt+0x7908>
  40b2f0:	xor    ebx,ebx
  40b2f2:	jmp    40b218 <isspace@plt+0x7908>
  40b2f7:	mov    rax,QWORD PTR [r14+0x10]
  40b2fb:	cmp    DWORD PTR [rax+0xb0],0x2
  40b302:	jl     40b32c <isspace@plt+0x7a1c>
  40b304:	lea    rsi,[rip+0x246ec]        # 42f9f7 <isspace@plt+0x2c0e7>
  40b30b:	jmp    40b20c <isspace@plt+0x78fc>
  40b310:	lea    rsi,[rip+0x24710]        # 42fa27 <isspace@plt+0x2c117>
  40b317:	jmp    40b20c <isspace@plt+0x78fc>
  40b31c:	mov    edi,DWORD PTR [rbx]
  40b31e:	test   edi,edi
  40b320:	je     40b34d <isspace@plt+0x7a3d>
  40b322:	call   403880 <strerror@plt>
  40b327:	mov    rcx,rax
  40b32a:	jmp    40b354 <isspace@plt+0x7a44>
  40b32c:	mov    rdi,r14
  40b32f:	call   420be0 <isspace@plt+0x1d2d0>
  40b334:	mov    rcx,QWORD PTR fs:0x28
  40b33d:	cmp    rcx,QWORD PTR [rsp+0x8]
  40b342:	je     40b22e <isspace@plt+0x791e>
  40b348:	call   403280 <__stack_chk_fail@plt>
  40b34d:	lea    rcx,[rip+0x2573f]        # 430a93 <isspace@plt+0x2d183>
  40b354:	lea    rsi,[rip+0x246fb]        # 42fa56 <isspace@plt+0x2c146>
  40b35b:	xor    ebx,ebx
  40b35d:	mov    rdi,r15
  40b360:	mov    rdx,r12
  40b363:	xor    eax,eax
  40b365:	call   4299f0 <isspace@plt+0x260e0>
  40b36a:	jmp    40b218 <isspace@plt+0x7908>
  40b36f:	nop
  40b370:	push   rbp
  40b371:	push   r14
  40b373:	push   rbx
  40b374:	sub    rsp,0x10
  40b378:	mov    r14,rcx
  40b37b:	mov    rbp,rsi
  40b37e:	mov    rbx,rdi
  40b381:	mov    rax,QWORD PTR fs:0x28
  40b38a:	mov    QWORD PTR [rsp+0x8],rax
  40b38f:	cmp    BYTE PTR [rdx+0x68],0x21
  40b393:	je     40b3a1 <isspace@plt+0x7a91>
  40b395:	mov    rdi,rbp
  40b398:	call   4216f0 <isspace@plt+0x1dde0>
  40b39d:	test   al,al
  40b39f:	je     40b3f0 <isspace@plt+0x7ae0>
  40b3a1:	mov    rdi,rbp
  40b3a4:	call   421880 <isspace@plt+0x1df70>
  40b3a9:	mov    rax,QWORD PTR [rbx+0x28]
  40b3ad:	test   rax,rax
  40b3b0:	je     40b3d6 <isspace@plt+0x7ac6>
  40b3b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b3bc:	nop    DWORD PTR [rax+0x0]
  40b3c0:	mov    rcx,QWORD PTR [rax+0x10]
  40b3c4:	cmp    BYTE PTR [rcx+0x18],0x0
  40b3c8:	je     40b40f <isspace@plt+0x7aff>
  40b3ca:	mov    rax,QWORD PTR [rax+0x2e0]
  40b3d1:	test   rax,rax
  40b3d4:	jne    40b3c0 <isspace@plt+0x7ab0>
  40b3d6:	mov    rdi,QWORD PTR [r14+0x8]
  40b3da:	test   rdi,rdi
  40b3dd:	je     40b405 <isspace@plt+0x7af5>
  40b3df:	xor    esi,esi
  40b3e1:	mov    edx,0xa
  40b3e6:	call   4034b0 <strtol@plt>
  40b3eb:	mov    rsi,rax
  40b3ee:	jmp    40b407 <isspace@plt+0x7af7>
  40b3f0:	lea    rsi,[rip+0x24630]        # 42fa27 <isspace@plt+0x2c117>
  40b3f7:	xor    ebp,ebp
  40b3f9:	mov    rdi,rbx
  40b3fc:	xor    eax,eax
  40b3fe:	call   4299f0 <isspace@plt+0x260e0>
  40b403:	jmp    40b412 <isspace@plt+0x7b02>
  40b405:	xor    esi,esi
  40b407:	mov    rdi,rbx
  40b40a:	call   424760 <isspace@plt+0x20e50>
  40b40f:	mov    bpl,0x1
  40b412:	mov    rax,QWORD PTR fs:0x28
  40b41b:	cmp    rax,QWORD PTR [rsp+0x8]
  40b420:	jne    40b42d <isspace@plt+0x7b1d>
  40b422:	mov    eax,ebp
  40b424:	add    rsp,0x10
  40b428:	pop    rbx
  40b429:	pop    r14
  40b42b:	pop    rbp
  40b42c:	ret    
  40b42d:	call   403280 <__stack_chk_fail@plt>
  40b432:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b43c:	nop    DWORD PTR [rax+0x0]
  40b440:	push   rax
  40b441:	mov    rax,QWORD PTR fs:0x28
  40b44a:	mov    QWORD PTR [rsp],rax
  40b44e:	mov    rdi,QWORD PTR [rcx+0x8]
  40b452:	test   rdi,rdi
  40b455:	jne    40b46b <isspace@plt+0x7b5b>
  40b457:	lea    rdi,[rip+0x2460f]        # 42fa6d <isspace@plt+0x2c15d>
  40b45e:	call   403060 <getenv@plt>
  40b463:	mov    rdi,rax
  40b466:	test   rax,rax
  40b469:	je     40b486 <isspace@plt+0x7b76>
  40b46b:	call   403270 <chdir@plt>
  40b470:	test   eax,eax
  40b472:	sete   al
  40b475:	mov    rcx,QWORD PTR fs:0x28
  40b47e:	cmp    rcx,QWORD PTR [rsp]
  40b482:	jne    40b48a <isspace@plt+0x7b7a>
  40b484:	pop    rcx
  40b485:	ret    
  40b486:	xor    eax,eax
  40b488:	jmp    40b475 <isspace@plt+0x7b65>
  40b48a:	call   403280 <__stack_chk_fail@plt>
  40b48f:	nop
  40b490:	push   rbp
  40b491:	push   r15
  40b493:	push   r14
  40b495:	push   r13
  40b497:	push   r12
  40b499:	push   rbx
  40b49a:	sub    rsp,0x28
  40b49e:	mov    r14,rcx
  40b4a1:	mov    rbp,rdi
  40b4a4:	mov    rax,QWORD PTR fs:0x28
  40b4ad:	mov    QWORD PTR [rsp+0x20],rax
  40b4b2:	xor    ebx,ebx
  40b4b4:	xor    esi,esi
  40b4b6:	call   4215f0 <isspace@plt+0x1dce0>
  40b4bb:	test   al,al
  40b4bd:	je     40baea <isspace@plt+0x81da>
  40b4c3:	mov    rax,QWORD PTR [rbp+0x30]
  40b4c7:	mov    rax,QWORD PTR [rax+0x10]
  40b4cb:	mov    r12,QWORD PTR [rax]
  40b4ce:	call   403200 <getpid@plt>
  40b4d3:	movsxd rcx,eax
  40b4d6:	lea    rsi,[rip+0x24595]        # 42fa72 <isspace@plt+0x2c162>
  40b4dd:	lea    rdx,[rip+0x20c52]        # 42c136 <isspace@plt+0x28826>
  40b4e4:	mov    rdi,r12
  40b4e7:	xor    eax,eax
  40b4e9:	call   410ea0 <isspace@plt+0xd590>
  40b4ee:	lea    rsi,[rip+0x24591]        # 42fa86 <isspace@plt+0x2c176>
  40b4f5:	mov    rdi,r12
  40b4f8:	xor    eax,eax
  40b4fa:	call   410ea0 <isspace@plt+0xd590>
  40b4ff:	lea    rbx,[rip+0x36bda]        # 4420e0 <isspace@plt+0x3e7d0>
  40b506:	mov    rcx,QWORD PTR [rbx+0x28]
  40b50a:	test   rcx,rcx
  40b50d:	je     40b524 <isspace@plt+0x7c14>
  40b50f:	mov    rdx,QWORD PTR [rbx+0x18]
  40b513:	lea    rsi,[rip+0x24575]        # 42fa8f <isspace@plt+0x2c17f>
  40b51a:	mov    rdi,r12
  40b51d:	xor    eax,eax
  40b51f:	call   410ea0 <isspace@plt+0xd590>
  40b524:	mov    rcx,QWORD PTR [rbx+0x88]
  40b52b:	test   rcx,rcx
  40b52e:	je     40b545 <isspace@plt+0x7c35>
  40b530:	mov    rdx,QWORD PTR [rbx+0x78]
  40b534:	lea    rsi,[rip+0x24554]        # 42fa8f <isspace@plt+0x2c17f>
  40b53b:	mov    rdi,r12
  40b53e:	xor    eax,eax
  40b540:	call   410ea0 <isspace@plt+0xd590>
  40b545:	mov    rcx,QWORD PTR [rbx+0xe8]
  40b54c:	test   rcx,rcx
  40b54f:	je     40b569 <isspace@plt+0x7c59>
  40b551:	mov    rdx,QWORD PTR [rbx+0xd8]
  40b558:	lea    rsi,[rip+0x24530]        # 42fa8f <isspace@plt+0x2c17f>
  40b55f:	mov    rdi,r12
  40b562:	xor    eax,eax
  40b564:	call   410ea0 <isspace@plt+0xd590>
  40b569:	mov    rcx,QWORD PTR [rbx+0x148]
  40b570:	test   rcx,rcx
  40b573:	je     40b58d <isspace@plt+0x7c7d>
  40b575:	mov    rdx,QWORD PTR [rbx+0x138]
  40b57c:	lea    rsi,[rip+0x2450c]        # 42fa8f <isspace@plt+0x2c17f>
  40b583:	mov    rdi,r12
  40b586:	xor    eax,eax
  40b588:	call   410ea0 <isspace@plt+0xd590>
  40b58d:	mov    rcx,QWORD PTR [rbx+0x1a8]
  40b594:	test   rcx,rcx
  40b597:	je     40b5b1 <isspace@plt+0x7ca1>
  40b599:	mov    rdx,QWORD PTR [rbx+0x198]
  40b5a0:	lea    rsi,[rip+0x244e8]        # 42fa8f <isspace@plt+0x2c17f>
  40b5a7:	mov    rdi,r12
  40b5aa:	xor    eax,eax
  40b5ac:	call   410ea0 <isspace@plt+0xd590>
  40b5b1:	mov    rcx,QWORD PTR [rbx+0x208]
  40b5b8:	test   rcx,rcx
  40b5bb:	je     40b5d5 <isspace@plt+0x7cc5>
  40b5bd:	mov    rdx,QWORD PTR [rbx+0x1f8]
  40b5c4:	lea    rsi,[rip+0x244c4]        # 42fa8f <isspace@plt+0x2c17f>
  40b5cb:	mov    rdi,r12
  40b5ce:	xor    eax,eax
  40b5d0:	call   410ea0 <isspace@plt+0xd590>
  40b5d5:	mov    rdi,QWORD PTR [rbp+0x820]
  40b5dc:	call   4087f0 <isspace@plt+0x4ee0>
  40b5e1:	test   al,al
  40b5e3:	jne    40b60c <isspace@plt+0x7cfc>
  40b5e5:	lea    rsi,[rip+0x244af]        # 42fa9b <isspace@plt+0x2c18b>
  40b5ec:	mov    rdi,r12
  40b5ef:	xor    eax,eax
  40b5f1:	call   410ea0 <isspace@plt+0xd590>
  40b5f6:	mov    rdi,QWORD PTR [rbp+0x820]
  40b5fd:	lea    rsi,[rip+0x21ec]        # 40d7f0 <isspace@plt+0x9ee0>
  40b604:	mov    rdx,r12
  40b607:	call   408820 <isspace@plt+0x4f10>
  40b60c:	mov    rdi,QWORD PTR [rbx+0x10]
  40b610:	call   4087f0 <isspace@plt+0x4ee0>
  40b615:	test   al,al
  40b617:	jne    40b62e <isspace@plt+0x7d1e>
  40b619:	mov    rdx,QWORD PTR [rbx+0x18]
  40b61d:	lea    rsi,[rip+0x2468f]        # 42fcb3 <isspace@plt+0x2c3a3>
  40b624:	mov    rdi,r12
  40b627:	xor    eax,eax
  40b629:	call   410ea0 <isspace@plt+0xd590>
  40b62e:	mov    rdi,QWORD PTR [rbx+0x10]
  40b632:	lea    rsi,[rip+0x24a7]        # 40dae0 <isspace@plt+0xa1d0>
  40b639:	mov    rdx,r12
  40b63c:	call   408820 <isspace@plt+0x4f10>
  40b641:	mov    rdi,QWORD PTR [rbx+0x70]
  40b645:	call   4087f0 <isspace@plt+0x4ee0>
  40b64a:	test   al,al
  40b64c:	jne    40b663 <isspace@plt+0x7d53>
  40b64e:	mov    rdx,QWORD PTR [rbx+0x78]
  40b652:	lea    rsi,[rip+0x2465a]        # 42fcb3 <isspace@plt+0x2c3a3>
  40b659:	mov    rdi,r12
  40b65c:	xor    eax,eax
  40b65e:	call   410ea0 <isspace@plt+0xd590>
  40b663:	mov    rdi,QWORD PTR [rbx+0x70]
  40b667:	lea    rsi,[rip+0x2472]        # 40dae0 <isspace@plt+0xa1d0>
  40b66e:	mov    rdx,r12
  40b671:	call   408820 <isspace@plt+0x4f10>
  40b676:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b67d:	call   4087f0 <isspace@plt+0x4ee0>
  40b682:	test   al,al
  40b684:	jne    40b69e <isspace@plt+0x7d8e>
  40b686:	mov    rdx,QWORD PTR [rbx+0xd8]
  40b68d:	lea    rsi,[rip+0x2461f]        # 42fcb3 <isspace@plt+0x2c3a3>
  40b694:	mov    rdi,r12
  40b697:	xor    eax,eax
  40b699:	call   410ea0 <isspace@plt+0xd590>
  40b69e:	mov    QWORD PTR [rsp],r14
  40b6a2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b6a9:	lea    rsi,[rip+0x2430]        # 40dae0 <isspace@plt+0xa1d0>
  40b6b0:	mov    rdx,r12
  40b6b3:	call   408820 <isspace@plt+0x4f10>
  40b6b8:	mov    rdi,QWORD PTR [rbx+0x190]
  40b6bf:	call   4087f0 <isspace@plt+0x4ee0>
  40b6c4:	test   al,al
  40b6c6:	jne    40b6e0 <isspace@plt+0x7dd0>
  40b6c8:	mov    rdx,QWORD PTR [rbx+0x198]
  40b6cf:	lea    rsi,[rip+0x245dd]        # 42fcb3 <isspace@plt+0x2c3a3>
  40b6d6:	mov    rdi,r12
  40b6d9:	xor    eax,eax
  40b6db:	call   410ea0 <isspace@plt+0xd590>
  40b6e0:	mov    rdi,QWORD PTR [rbx+0x190]
  40b6e7:	lea    rsi,[rip+0x23f2]        # 40dae0 <isspace@plt+0xa1d0>
  40b6ee:	mov    rdx,r12
  40b6f1:	call   408820 <isspace@plt+0x4f10>
  40b6f6:	lea    rsi,[rip+0x243e5]        # 42fae2 <isspace@plt+0x2c1d2>
  40b6fd:	mov    rdi,r12
  40b700:	xor    eax,eax
  40b702:	call   410ea0 <isspace@plt+0xd590>
  40b707:	mov    QWORD PTR [rsp+0x8],rbp
  40b70c:	mov    rdi,QWORD PTR [rbp+0x808]
  40b713:	lea    rsi,[rip+0x2126]        # 40d840 <isspace@plt+0x9f30>
  40b71a:	mov    rdx,r12
  40b71d:	call   408820 <isspace@plt+0x4f10>
  40b722:	lea    rsi,[rip+0x243c8]        # 42faf1 <isspace@plt+0x2c1e1>
  40b729:	mov    rdi,r12
  40b72c:	xor    eax,eax
  40b72e:	call   410ea0 <isspace@plt+0xd590>
  40b733:	lea    rsi,[rip+0x243c1]        # 42fafb <isspace@plt+0x2c1eb>
  40b73a:	mov    rdi,r12
  40b73d:	xor    eax,eax
  40b73f:	call   410ea0 <isspace@plt+0xd590>
  40b744:	lea    rbx,[rip+0x348c5]        # 440010 <isspace@plt+0x3c700>
  40b74b:	movsx  edx,BYTE PTR [rbx]
  40b74e:	mov    rcx,QWORD PTR [rbx+0x8]
  40b752:	mov    r13,QWORD PTR [rbx+0x18]
  40b756:	test   rcx,rcx
  40b759:	lea    r14,[rip+0x25333]        # 430a93 <isspace@plt+0x2d183>
  40b760:	cmove  rcx,r14
  40b764:	lea    r15,[rip+0x243ad]        # 42fb18 <isspace@plt+0x2c208>
  40b76b:	mov    rdi,r12
  40b76e:	mov    rsi,r15
  40b771:	xor    eax,eax
  40b773:	call   410ea0 <isspace@plt+0xd590>
  40b778:	movsx  edx,BYTE PTR [rbx+0x10]
  40b77c:	test   r13,r13
  40b77f:	cmove  r13,r14
  40b783:	mov    rdi,r12
  40b786:	mov    rsi,r15
  40b789:	mov    rcx,r13
  40b78c:	xor    eax,eax
  40b78e:	call   410ea0 <isspace@plt+0xd590>
  40b793:	lea    rsi,[rip+0x24389]        # 42fb23 <isspace@plt+0x2c213>
  40b79a:	mov    rdi,r12
  40b79d:	xor    eax,eax
  40b79f:	call   410ea0 <isspace@plt+0xd590>
  40b7a4:	lea    rsi,[rip+0x24386]        # 42fb31 <isspace@plt+0x2c221>
  40b7ab:	mov    rdi,r12
  40b7ae:	xor    eax,eax
  40b7b0:	call   410ea0 <isspace@plt+0xd590>
  40b7b5:	lea    rsi,[rip+0x24396]        # 42fb52 <isspace@plt+0x2c242>
  40b7bc:	mov    rdi,r12
  40b7bf:	xor    eax,eax
  40b7c1:	call   410ea0 <isspace@plt+0xd590>
  40b7c6:	mov    ebp,0x8
  40b7cb:	lea    rbx,[rip+0x35b9e]        # 441370 <isspace@plt+0x3da60>
  40b7d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b7dc:	nop    DWORD PTR [rax+0x0]
  40b7e0:	mov    rcx,QWORD PTR [rbx+rbp*1]
  40b7e4:	movsx  edx,BYTE PTR [rbx+rbp*1-0x8]
  40b7e9:	test   rcx,rcx
  40b7ec:	cmove  rcx,r14
  40b7f0:	mov    rdi,r12
  40b7f3:	mov    rsi,r15
  40b7f6:	xor    eax,eax
  40b7f8:	call   410ea0 <isspace@plt+0xd590>
  40b7fd:	add    rbp,0x10
  40b801:	cmp    rbp,0x148
  40b808:	jne    40b7e0 <isspace@plt+0x7ed0>
  40b80a:	lea    rsi,[rip+0x24379]        # 42fb8a <isspace@plt+0x2c27a>
  40b811:	mov    rdi,r12
  40b814:	xor    eax,eax
  40b816:	call   410ea0 <isspace@plt+0xd590>
  40b81b:	mov    r15,QWORD PTR [rsp+0x8]
  40b820:	mov    rdi,QWORD PTR [r15+0x818]
  40b827:	lea    rsi,[rip+0x2162]        # 40d990 <isspace@plt+0xa080>
  40b82e:	mov    rdx,r12
  40b831:	call   408820 <isspace@plt+0x4f10>
  40b836:	lea    rsi,[rip+0x24366]        # 42fba3 <isspace@plt+0x2c293>
  40b83d:	mov    rdi,r12
  40b840:	xor    eax,eax
  40b842:	call   410ea0 <isspace@plt+0xd590>
  40b847:	mov    rdi,QWORD PTR [r15+0xaa0]
  40b84e:	lea    rsi,[rip+0x223b]        # 40da90 <isspace@plt+0xa180>
  40b855:	mov    rdx,r12
  40b858:	call   408820 <isspace@plt+0x4f10>
  40b85d:	lea    rsi,[rip+0x24357]        # 42fbbb <isspace@plt+0x2c2ab>
  40b864:	mov    rdi,r12
  40b867:	xor    eax,eax
  40b869:	call   410ea0 <isspace@plt+0xd590>
  40b86e:	mov    rdi,QWORD PTR [r15]
  40b871:	call   QWORD PTR [rdi+0x90]
  40b877:	mov    rbx,rax
  40b87a:	lea    rsi,[rip+0x24546]        # 42fdc7 <isspace@plt+0x2c4b7>
  40b881:	mov    rdi,r12
  40b884:	xor    eax,eax
  40b886:	call   410ea0 <isspace@plt+0xd590>
  40b88b:	lea    r14,[rip+0x24cce]        # 430560 <isspace@plt+0x2cc50>
  40b892:	lea    r13,[rip+0x24573]        # 42fe0c <isspace@plt+0x2c4fc>
  40b899:	xor    ebp,ebp
  40b89b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b8a0:	mov    esi,DWORD PTR [rbp+r14*1+0x0]
  40b8a5:	mov    rdi,rbx
  40b8a8:	call   4035c0 <termkey_get_keyname@plt>
  40b8ad:	mov    rdi,r12
  40b8b0:	mov    rsi,r13
  40b8b3:	mov    rdx,rax
  40b8b6:	xor    eax,eax
  40b8b8:	call   410ea0 <isspace@plt+0xd590>
  40b8bd:	add    rbp,0x4
  40b8c1:	cmp    rbp,0xe8
  40b8c8:	jne    40b8a0 <isspace@plt+0x7f90>
  40b8ca:	vxorps xmm0,xmm0,xmm0
  40b8ce:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  40b8d4:	lea    rdx,[rsp+0x18]
  40b8d9:	lea    rsi,[rsp+0x10]
  40b8de:	mov    rdi,r15
  40b8e1:	call   425af0 <isspace@plt+0x221e0>
  40b8e6:	test   al,al
  40b8e8:	mov    r14,QWORD PTR [rsp]
  40b8ec:	je     40ba07 <isspace@plt+0x80f7>
  40b8f2:	lea    rsi,[rip+0x243ba]        # 42fcb3 <isspace@plt+0x2c3a3>
  40b8f9:	lea    rdx,[rip+0x24327]        # 42fc27 <isspace@plt+0x2c317>
  40b900:	xor    r13d,r13d
  40b903:	mov    rdi,r12
  40b906:	xor    eax,eax
  40b908:	call   410ea0 <isspace@plt+0xd590>
  40b90d:	mov    rbp,QWORD PTR [rsp+0x10]
  40b912:	test   rbp,rbp
  40b915:	je     40b96f <isspace@plt+0x805f>
  40b917:	lea    r13,[rip+0x241ff]        # 42fb1d <isspace@plt+0x2c20d>
  40b91e:	jmp    40b928 <isspace@plt+0x8018>
  40b920:	mov    rbp,rbx
  40b923:	test   rbx,rbx
  40b926:	je     40b96a <isspace@plt+0x805a>
  40b928:	mov    rdi,rbp
  40b92b:	mov    esi,0x3b
  40b930:	call   4032f0 <strchr@plt>
  40b935:	test   rax,rax
  40b938:	je     40b950 <isspace@plt+0x8040>
  40b93a:	mov    rbx,rax
  40b93d:	inc    rbx
  40b940:	mov    BYTE PTR [rax],0x0
  40b943:	cmp    BYTE PTR [rbp+0x0],0x0
  40b947:	jne    40b958 <isspace@plt+0x8048>
  40b949:	jmp    40b920 <isspace@plt+0x8010>
  40b94b:	nop    DWORD PTR [rax+rax*1+0x0]
  40b950:	xor    ebx,ebx
  40b952:	cmp    BYTE PTR [rbp+0x0],0x0
  40b956:	je     40b920 <isspace@plt+0x8010>
  40b958:	mov    rdi,r12
  40b95b:	mov    rsi,r13
  40b95e:	mov    rdx,rbp
  40b961:	xor    eax,eax
  40b963:	call   410ea0 <isspace@plt+0xd590>
  40b968:	jmp    40b920 <isspace@plt+0x8010>
  40b96a:	mov    r13,QWORD PTR [rsp+0x10]
  40b96f:	mov    rdi,r13
  40b972:	call   4030d0 <free@plt>
  40b977:	lea    rsi,[rip+0x24335]        # 42fcb3 <isspace@plt+0x2c3a3>
  40b97e:	lea    rdx,[rip+0x242e9]        # 42fc6e <isspace@plt+0x2c35e>
  40b985:	xor    r13d,r13d
  40b988:	mov    rdi,r12
  40b98b:	xor    eax,eax
  40b98d:	call   410ea0 <isspace@plt+0xd590>
  40b992:	mov    rbp,QWORD PTR [rsp+0x18]
  40b997:	test   rbp,rbp
  40b99a:	je     40b9ff <isspace@plt+0x80ef>
  40b99c:	lea    r13,[rip+0x2417a]        # 42fb1d <isspace@plt+0x2c20d>
  40b9a3:	jmp    40b9b8 <isspace@plt+0x80a8>
  40b9a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b9af:	nop
  40b9b0:	mov    rbp,rbx
  40b9b3:	test   rbx,rbx
  40b9b6:	je     40b9fa <isspace@plt+0x80ea>
  40b9b8:	mov    rdi,rbp
  40b9bb:	mov    esi,0x3b
  40b9c0:	call   4032f0 <strchr@plt>
  40b9c5:	test   rax,rax
  40b9c8:	je     40b9e0 <isspace@plt+0x80d0>
  40b9ca:	mov    rbx,rax
  40b9cd:	inc    rbx
  40b9d0:	mov    BYTE PTR [rax],0x0
  40b9d3:	cmp    BYTE PTR [rbp+0x0],0x0
  40b9d7:	jne    40b9e8 <isspace@plt+0x80d8>
  40b9d9:	jmp    40b9b0 <isspace@plt+0x80a0>
  40b9db:	nop    DWORD PTR [rax+rax*1+0x0]
  40b9e0:	xor    ebx,ebx
  40b9e2:	cmp    BYTE PTR [rbp+0x0],0x0
  40b9e6:	je     40b9b0 <isspace@plt+0x80a0>
  40b9e8:	mov    rdi,r12
  40b9eb:	mov    rsi,r13
  40b9ee:	mov    rdx,rbp
  40b9f1:	xor    eax,eax
  40b9f3:	call   410ea0 <isspace@plt+0xd590>
  40b9f8:	jmp    40b9b0 <isspace@plt+0x80a0>
  40b9fa:	mov    r13,QWORD PTR [rsp+0x18]
  40b9ff:	mov    rdi,r13
  40ba02:	call   4030d0 <free@plt>
  40ba07:	lea    rsi,[rip+0x242ac]        # 42fcba <isspace@plt+0x2c3aa>
  40ba0e:	mov    rdi,r12
  40ba11:	xor    eax,eax
  40ba13:	call   410ea0 <isspace@plt+0xd590>
  40ba18:	lea    rbx,[rip+0x24338]        # 42fd57 <isspace@plt+0x2c447>
  40ba1f:	lea    rdx,[rip+0x242b3]        # 42fcd9 <isspace@plt+0x2c3c9>
  40ba26:	lea    r13,[rip+0x24336]        # 42fd63 <isspace@plt+0x2c453>
  40ba2d:	mov    rdi,r12
  40ba30:	mov    rsi,rbx
  40ba33:	mov    rcx,r13
  40ba36:	xor    eax,eax
  40ba38:	call   410ea0 <isspace@plt+0xd590>
  40ba3d:	lea    rdx,[rip+0x242a6]        # 42fcea <isspace@plt+0x2c3da>
  40ba44:	lea    rbp,[rip+0x2431c]        # 42fd67 <isspace@plt+0x2c457>
  40ba4b:	mov    rdi,r12
  40ba4e:	mov    rsi,rbx
  40ba51:	mov    rcx,rbp
  40ba54:	xor    eax,eax
  40ba56:	call   410ea0 <isspace@plt+0xd590>
  40ba5b:	lea    rdx,[rip+0x24296]        # 42fcf8 <isspace@plt+0x2c3e8>
  40ba62:	mov    rdi,r12
  40ba65:	mov    rsi,rbx
  40ba68:	mov    rcx,rbp
  40ba6b:	xor    eax,eax
  40ba6d:	call   410ea0 <isspace@plt+0xd590>
  40ba72:	lea    rdx,[rip+0x2429e]        # 42fd17 <isspace@plt+0x2c407>
  40ba79:	mov    rdi,r12
  40ba7c:	mov    rsi,rbx
  40ba7f:	mov    rcx,rbp
  40ba82:	xor    eax,eax
  40ba84:	call   410ea0 <isspace@plt+0xd590>
  40ba89:	lea    rdx,[rip+0x242a1]        # 42fd31 <isspace@plt+0x2c421>
  40ba90:	mov    rdi,r12
  40ba93:	mov    rsi,rbx
  40ba96:	mov    rcx,rbp
  40ba99:	xor    eax,eax
  40ba9b:	call   410ea0 <isspace@plt+0xd590>
  40baa0:	lea    rdx,[rip+0x2429e]        # 42fd45 <isspace@plt+0x2c435>
  40baa7:	mov    rdi,r12
  40baaa:	mov    rsi,rbx
  40baad:	mov    rcx,r13
  40bab0:	xor    eax,eax
  40bab2:	call   410ea0 <isspace@plt+0xd590>
  40bab7:	mov    rdi,r12
  40baba:	xor    esi,esi
  40babc:	call   412190 <isspace@plt+0xe880>
  40bac1:	mov    rax,QWORD PTR [r15+0x30]
  40bac5:	mov    rdi,QWORD PTR [rax+0x18]
  40bac9:	xor    esi,esi
  40bacb:	call   41a790 <isspace@plt+0x16e80>
  40bad0:	mov    rdx,QWORD PTR [r14+0x8]
  40bad4:	test   rdx,rdx
  40bad7:	je     40bae8 <isspace@plt+0x81d8>
  40bad9:	mov    rdi,r15
  40badc:	mov    esi,0x44
  40bae1:	xor    eax,eax
  40bae3:	call   4279b0 <isspace@plt+0x240a0>
  40bae8:	mov    bl,0x1
  40baea:	mov    rax,QWORD PTR fs:0x28
  40baf3:	cmp    rax,QWORD PTR [rsp+0x20]
  40baf8:	jne    40bb0b <isspace@plt+0x81fb>
  40bafa:	mov    eax,ebx
  40bafc:	add    rsp,0x28
  40bb00:	pop    rbx
  40bb01:	pop    r12
  40bb03:	pop    r13
  40bb05:	pop    r14
  40bb07:	pop    r15
  40bb09:	pop    rbp
  40bb0a:	ret    
  40bb0b:	call   403280 <__stack_chk_fail@plt>
  40bb10:	push   rbp
  40bb11:	push   r15
  40bb13:	push   r14
  40bb15:	push   r13
  40bb17:	push   r12
  40bb19:	push   rbx
  40bb1a:	sub    rsp,0x18
  40bb1e:	mov    rbx,rcx
  40bb21:	mov    r15,rdx
  40bb24:	mov    rbp,rsi
  40bb27:	mov    r14,rdi
  40bb2a:	mov    rax,QWORD PTR fs:0x28
  40bb33:	mov    QWORD PTR [rsp+0x10],rax
  40bb38:	mov    rdi,QWORD PTR [rcx]
  40bb3b:	mov    esi,0x2d
  40bb40:	call   4032f0 <strchr@plt>
  40bb45:	mov    r12,rax
  40bb48:	mov    rsi,QWORD PTR [rbx+0x8]
  40bb4c:	mov    rdi,r14
  40bb4f:	call   427090 <isspace@plt+0x23780>
  40bb54:	mov    r13d,eax
  40bb57:	test   rbp,rbp
  40bb5a:	jne    40bb6d <isspace@plt+0x825d>
  40bb5c:	test   r12,r12
  40bb5f:	je     40bb6d <isspace@plt+0x825d>
  40bb61:	mov    rdx,QWORD PTR [rbx]
  40bb64:	lea    rsi,[rip+0x242a9]        # 42fe14 <isspace@plt+0x2c504>
  40bb6b:	jmp    40bbe4 <isspace@plt+0x82d4>
  40bb6d:	cmp    r13d,0x6
  40bb71:	je     40bbda <isspace@plt+0x82ca>
  40bb73:	mov    rax,QWORD PTR [rbx+0x10]
  40bb77:	test   rax,rax
  40bb7a:	je     40bbda <isspace@plt+0x82ca>
  40bb7c:	cmp    QWORD PTR [rbx+0x18],0x0
  40bb81:	je     40bbda <isspace@plt+0x82ca>
  40bb83:	mov    QWORD PTR [rsp],rax
  40bb87:	mov    rdi,r14
  40bb8a:	call   426e20 <isspace@plt+0x23510>
  40bb8f:	mov    QWORD PTR [rsp+0x8],rax
  40bb94:	test   rax,rax
  40bb97:	je     40bc2c <isspace@plt+0x831c>
  40bb9d:	mov    rdi,QWORD PTR [rbx+0x18]
  40bba1:	call   403850 <strdup@plt>
  40bba6:	mov    rcx,QWORD PTR [rsp+0x8]
  40bbab:	mov    QWORD PTR [rcx+0x10],rax
  40bbaf:	test   rax,rax
  40bbb2:	je     40bc2c <isspace@plt+0x831c>
  40bbb4:	mov    r8,QWORD PTR [rsp+0x8]
  40bbb9:	mov    al,BYTE PTR [r15+0x68]
  40bbbd:	xor    edx,edx
  40bbbf:	test   r12,r12
  40bbc2:	je     40bc11 <isspace@plt+0x8301>
  40bbc4:	cmp    al,0x21
  40bbc6:	sete   dl
  40bbc9:	mov    rdi,rbp
  40bbcc:	mov    esi,r13d
  40bbcf:	mov    rcx,QWORD PTR [rsp]
  40bbd3:	call   427390 <isspace@plt+0x23a80>
  40bbd8:	jmp    40bc25 <isspace@plt+0x8315>
  40bbda:	mov    rdx,QWORD PTR [rbx]
  40bbdd:	lea    rsi,[rip+0x24247]        # 42fe2b <isspace@plt+0x2c51b>
  40bbe4:	xor    ebp,ebp
  40bbe6:	mov    rdi,r14
  40bbe9:	xor    eax,eax
  40bbeb:	call   4299f0 <isspace@plt+0x260e0>
  40bbf0:	mov    rax,QWORD PTR fs:0x28
  40bbf9:	cmp    rax,QWORD PTR [rsp+0x10]
  40bbfe:	jne    40bc6d <isspace@plt+0x835d>
  40bc00:	mov    eax,ebp
  40bc02:	add    rsp,0x18
  40bc06:	pop    rbx
  40bc07:	pop    r12
  40bc09:	pop    r13
  40bc0b:	pop    r14
  40bc0d:	pop    r15
  40bc0f:	pop    rbp
  40bc10:	ret    
  40bc11:	cmp    al,0x21
  40bc13:	sete   dl
  40bc16:	mov    rdi,r14
  40bc19:	mov    esi,r13d
  40bc1c:	mov    rcx,QWORD PTR [rsp]
  40bc20:	call   427270 <isspace@plt+0x23960>
  40bc25:	mov    bpl,0x1
  40bc28:	test   al,al
  40bc2a:	jne    40bbf0 <isspace@plt+0x82e0>
  40bc2c:	mov    rcx,QWORD PTR [rbx+0x8]
  40bc30:	cmp    BYTE PTR [r15+0x68],0x21
  40bc35:	lea    rax,[rip+0x24e57]        # 430a93 <isspace@plt+0x2d183>
  40bc3c:	lea    r8,[rip+0x2421f]        # 42fe62 <isspace@plt+0x2c552>
  40bc43:	cmove  r8,rax
  40bc47:	lea    rsi,[rip+0x241f4]        # 42fe42 <isspace@plt+0x2c532>
  40bc4e:	xor    ebp,ebp
  40bc50:	mov    rdi,r14
  40bc53:	mov    rdx,QWORD PTR [rsp]
  40bc57:	xor    eax,eax
  40bc59:	call   4299f0 <isspace@plt+0x260e0>
  40bc5e:	mov    rdi,r14
  40bc61:	mov    rsi,QWORD PTR [rsp+0x8]
  40bc66:	call   426e90 <isspace@plt+0x23580>
  40bc6b:	jmp    40bbf0 <isspace@plt+0x82e0>
  40bc6d:	call   403280 <__stack_chk_fail@plt>
  40bc72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bc7c:	nop    DWORD PTR [rax+0x0]
  40bc80:	push   rbp
  40bc81:	push   r15
  40bc83:	push   r14
  40bc85:	push   r12
  40bc87:	push   rbx
  40bc88:	sub    rsp,0x10
  40bc8c:	mov    rbx,rcx
  40bc8f:	mov    r12,rsi
  40bc92:	mov    r14,rdi
  40bc95:	mov    rax,QWORD PTR fs:0x28
  40bc9e:	mov    QWORD PTR [rsp+0x8],rax
  40bca3:	mov    rdi,QWORD PTR [rcx]
  40bca6:	mov    esi,0x2d
  40bcab:	call   4032f0 <strchr@plt>
  40bcb0:	mov    rbp,rax
  40bcb3:	mov    rsi,QWORD PTR [rbx+0x8]
  40bcb7:	mov    rdi,r14
  40bcba:	call   427090 <isspace@plt+0x23780>
  40bcbf:	mov    r15,QWORD PTR [rbx+0x10]
  40bcc3:	test   r12,r12
  40bcc6:	jne    40bcd9 <isspace@plt+0x83c9>
  40bcc8:	test   rbp,rbp
  40bccb:	je     40bcd9 <isspace@plt+0x83c9>
  40bccd:	mov    rdx,QWORD PTR [rbx]
  40bcd0:	lea    rsi,[rip+0x2413d]        # 42fe14 <isspace@plt+0x2c504>
  40bcd7:	jmp    40bd01 <isspace@plt+0x83f1>
  40bcd9:	cmp    eax,0x6
  40bcdc:	je     40bcf7 <isspace@plt+0x83e7>
  40bcde:	test   r15,r15
  40bce1:	je     40bcf7 <isspace@plt+0x83e7>
  40bce3:	test   rbp,rbp
  40bce6:	je     40bd2c <isspace@plt+0x841c>
  40bce8:	mov    rdi,r12
  40bceb:	mov    esi,eax
  40bced:	mov    rdx,r15
  40bcf0:	call   427210 <isspace@plt+0x23900>
  40bcf5:	jmp    40bd39 <isspace@plt+0x8429>
  40bcf7:	mov    rdx,QWORD PTR [rbx]
  40bcfa:	lea    rsi,[rip+0x2418d]        # 42fe8e <isspace@plt+0x2c57e>
  40bd01:	xor    ebp,ebp
  40bd03:	mov    rdi,r14
  40bd06:	xor    eax,eax
  40bd08:	call   4299f0 <isspace@plt+0x260e0>
  40bd0d:	mov    rax,QWORD PTR fs:0x28
  40bd16:	cmp    rax,QWORD PTR [rsp+0x8]
  40bd1b:	jne    40bd5c <isspace@plt+0x844c>
  40bd1d:	mov    eax,ebp
  40bd1f:	add    rsp,0x10
  40bd23:	pop    rbx
  40bd24:	pop    r12
  40bd26:	pop    r14
  40bd28:	pop    r15
  40bd2a:	pop    rbp
  40bd2b:	ret    
  40bd2c:	mov    rdi,r14
  40bd2f:	mov    esi,eax
  40bd31:	mov    rdx,r15
  40bd34:	call   4271b0 <isspace@plt+0x238a0>
  40bd39:	mov    bpl,0x1
  40bd3c:	test   al,al
  40bd3e:	jne    40bd0d <isspace@plt+0x83fd>
  40bd40:	mov    rcx,QWORD PTR [rbx+0x8]
  40bd44:	lea    rsi,[rip+0x24156]        # 42fea1 <isspace@plt+0x2c591>
  40bd4b:	xor    ebp,ebp
  40bd4d:	mov    rdi,r14
  40bd50:	mov    rdx,r15
  40bd53:	xor    eax,eax
  40bd55:	call   4299f0 <isspace@plt+0x260e0>
  40bd5a:	jmp    40bd0d <isspace@plt+0x83fd>
  40bd5c:	call   403280 <__stack_chk_fail@plt>
  40bd61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bd6b:	nop    DWORD PTR [rax+rax*1+0x0]
  40bd70:	push   rbp
  40bd71:	push   r15
  40bd73:	push   r14
  40bd75:	push   r13
  40bd77:	push   r12
  40bd79:	push   rbx
  40bd7a:	sub    rsp,0x18
  40bd7e:	mov    r14,rdi
  40bd81:	mov    rax,QWORD PTR fs:0x28
  40bd8a:	mov    QWORD PTR [rsp+0x10],rax
  40bd8f:	mov    rbx,QWORD PTR [rcx+0x8]
  40bd93:	test   rbx,rbx
  40bd96:	je     40be5f <isspace@plt+0x854f>
  40bd9c:	mov    rbp,QWORD PTR [rcx+0x10]
  40bda0:	test   rbp,rbp
  40bda3:	je     40be5f <isspace@plt+0x854f>
  40bda9:	mov    cl,BYTE PTR [rbp+0x0]
  40bdac:	mov    r13b,0x1
  40bdaf:	test   cl,cl
  40bdb1:	je     40be73 <isspace@plt+0x8563>
  40bdb7:	lea    r15,[rsp+0x8]
  40bdbc:	mov    r12,rsp
  40bdbf:	cmp    BYTE PTR [rbx],0x0
  40bdc2:	jne    40bdfe <isspace@plt+0x84ee>
  40bdc4:	jmp    40be73 <isspace@plt+0x8563>
  40bdc9:	nop    DWORD PTR [rax+0x0]
  40bdd0:	mov    BYTE PTR [rsp+rax*1+0x8],0x0
  40bdd5:	mov    BYTE PTR [rsp+rcx*1],0x0
  40bdd9:	mov    rdi,r15
  40bddc:	call   403850 <strdup@plt>
  40bde1:	mov    rdi,r14
  40bde4:	mov    rsi,r12
  40bde7:	mov    rdx,rax
  40bdea:	call   422280 <isspace@plt+0x1e970>
  40bdef:	and    r13b,al
  40bdf2:	mov    cl,BYTE PTR [rbp+0x0]
  40bdf5:	test   cl,cl
  40bdf7:	je     40be73 <isspace@plt+0x8563>
  40bdf9:	cmp    BYTE PTR [rbx],0x0
  40bdfc:	je     40be73 <isspace@plt+0x8563>
  40bdfe:	xor    eax,eax
  40be00:	cmp    rax,0x6
  40be04:	jbe    40be27 <isspace@plt+0x8517>
  40be06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40be10:	movzx  ecx,BYTE PTR [rbp+0x1]
  40be14:	inc    rbp
  40be17:	mov    edx,ecx
  40be19:	and    dl,0xc0
  40be1c:	cmp    dl,0x80
  40be1f:	jne    40be30 <isspace@plt+0x8520>
  40be21:	cmp    rax,0x6
  40be25:	ja     40be10 <isspace@plt+0x8500>
  40be27:	mov    BYTE PTR [rsp+rax*1+0x8],cl
  40be2b:	inc    rax
  40be2e:	jmp    40be10 <isspace@plt+0x8500>
  40be30:	xor    ecx,ecx
  40be32:	cmp    rcx,0x6
  40be36:	jbe    40be55 <isspace@plt+0x8545>
  40be38:	nop    DWORD PTR [rax+rax*1+0x0]
  40be40:	movzx  edx,BYTE PTR [rbx+0x1]
  40be44:	inc    rbx
  40be47:	and    dl,0xc0
  40be4a:	cmp    dl,0x80
  40be4d:	jne    40bdd0 <isspace@plt+0x84c0>
  40be4f:	cmp    rcx,0x6
  40be53:	ja     40be40 <isspace@plt+0x8530>
  40be55:	mov    dl,BYTE PTR [rbx]
  40be57:	mov    BYTE PTR [rsp+rcx*1],dl
  40be5a:	inc    rcx
  40be5d:	jmp    40be40 <isspace@plt+0x8530>
  40be5f:	lea    rsi,[rip+0x2405b]        # 42fec1 <isspace@plt+0x2c5b1>
  40be66:	xor    r13d,r13d
  40be69:	mov    rdi,r14
  40be6c:	xor    eax,eax
  40be6e:	call   4299f0 <isspace@plt+0x260e0>
  40be73:	mov    rax,QWORD PTR fs:0x28
  40be7c:	cmp    rax,QWORD PTR [rsp+0x10]
  40be81:	jne    40be99 <isspace@plt+0x8589>
  40be83:	and    r13b,0x1
  40be87:	mov    eax,r13d
  40be8a:	add    rsp,0x18
  40be8e:	pop    rbx
  40be8f:	pop    r12
  40be91:	pop    r13
  40be93:	pop    r14
  40be95:	pop    r15
  40be97:	pop    rbp
  40be98:	ret    
  40be99:	call   403280 <__stack_chk_fail@plt>
  40be9e:	xchg   ax,ax
  40bea0:	push   rbx
  40bea1:	sub    rsp,0x10
  40bea5:	mov    rbx,rdi
  40bea8:	mov    rax,QWORD PTR fs:0x28
  40beb1:	mov    QWORD PTR [rsp+0x8],rax
  40beb6:	mov    rdi,QWORD PTR [rdi]
  40beb9:	xor    esi,esi
  40bebb:	call   QWORD PTR [rdi+0x50]
  40bebe:	mov    rdi,rbx
  40bec1:	xor    esi,esi
  40bec3:	call   4215f0 <isspace@plt+0x1dce0>
  40bec8:	mov    rcx,QWORD PTR fs:0x28
  40bed1:	cmp    rcx,QWORD PTR [rsp+0x8]
  40bed6:	jne    40bede <isspace@plt+0x85ce>
  40bed8:	add    rsp,0x10
  40bedc:	pop    rbx
  40bedd:	ret    
  40bede:	call   403280 <__stack_chk_fail@plt>
  40bee3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40beed:	nop    DWORD PTR [rax]
  40bef0:	push   r15
  40bef2:	push   r14
  40bef4:	push   r12
  40bef6:	push   rbx
  40bef7:	push   rax
  40bef8:	mov    r14,rdi
  40befb:	mov    rax,QWORD PTR fs:0x28
  40bf04:	mov    QWORD PTR [rsp],rax
  40bf08:	mov    rsi,QWORD PTR [rcx+0x8]
  40bf0c:	test   rsi,rsi
  40bf0f:	je     40bf5e <isspace@plt+0x864e>
  40bf11:	mov    r12,rcx
  40bf14:	add    r12,0x10
  40bf18:	nop    DWORD PTR [rax+rax*1+0x0]
  40bf20:	mov    rdi,r14
  40bf23:	call   40d5c0 <isspace@plt+0x9cb0>
  40bf28:	test   rax,rax
  40bf2b:	je     40bf79 <isspace@plt+0x8669>
  40bf2d:	mov    r15,rax
  40bf30:	call   403130 <__errno_location@plt>
  40bf35:	mov    rbx,rax
  40bf38:	mov    DWORD PTR [rax],0x0
  40bf3e:	mov    rdi,r14
  40bf41:	mov    rsi,r15
  40bf44:	call   4215f0 <isspace@plt+0x1dce0>
  40bf49:	test   al,al
  40bf4b:	je     40bf7d <isspace@plt+0x866d>
  40bf4d:	mov    rsi,QWORD PTR [r12]
  40bf51:	add    r12,0x8
  40bf55:	test   rsi,rsi
  40bf58:	jne    40bf20 <isspace@plt+0x8610>
  40bf5a:	mov    bl,0x1
  40bf5c:	jmp    40bfaa <isspace@plt+0x869a>
  40bf5e:	mov    rdi,r14
  40bf61:	xor    esi,esi
  40bf63:	call   4215f0 <isspace@plt+0x1dce0>
  40bf68:	mov    rcx,QWORD PTR fs:0x28
  40bf71:	cmp    rcx,QWORD PTR [rsp]
  40bf75:	je     40bfbb <isspace@plt+0x86ab>
  40bf77:	jmp    40bfc7 <isspace@plt+0x86b7>
  40bf79:	xor    ebx,ebx
  40bf7b:	jmp    40bfaa <isspace@plt+0x869a>
  40bf7d:	mov    edi,DWORD PTR [rbx]
  40bf7f:	test   edi,edi
  40bf81:	je     40bf8d <isspace@plt+0x867d>
  40bf83:	call   403880 <strerror@plt>
  40bf88:	mov    rcx,rax
  40bf8b:	jmp    40bf94 <isspace@plt+0x8684>
  40bf8d:	lea    rcx,[rip+0x24aff]        # 430a93 <isspace@plt+0x2d183>
  40bf94:	lea    rsi,[rip+0x23abb]        # 42fa56 <isspace@plt+0x2c146>
  40bf9b:	xor    ebx,ebx
  40bf9d:	mov    rdi,r14
  40bfa0:	mov    rdx,r15
  40bfa3:	xor    eax,eax
  40bfa5:	call   4299f0 <isspace@plt+0x260e0>
  40bfaa:	mov    rax,QWORD PTR fs:0x28
  40bfb3:	cmp    rax,QWORD PTR [rsp]
  40bfb7:	jne    40bfc7 <isspace@plt+0x86b7>
  40bfb9:	mov    eax,ebx
  40bfbb:	add    rsp,0x8
  40bfbf:	pop    rbx
  40bfc0:	pop    r12
  40bfc2:	pop    r14
  40bfc4:	pop    r15
  40bfc6:	ret    
  40bfc7:	call   403280 <__stack_chk_fail@plt>
  40bfcc:	nop    DWORD PTR [rax+0x0]
  40bfd0:	push   r15
  40bfd2:	push   r14
  40bfd4:	push   r13
  40bfd6:	push   r12
  40bfd8:	push   rbx
  40bfd9:	sub    rsp,0x10
  40bfdd:	mov    r14,rcx
  40bfe0:	mov    r15,rdi
  40bfe3:	mov    rax,QWORD PTR fs:0x28
  40bfec:	mov    QWORD PTR [rsp+0x8],rax
  40bff1:	mov    r13,QWORD PTR [rdi+0x28]
  40bff5:	test   r13,r13
  40bff8:	je     40c056 <isspace@plt+0x8746>
  40bffa:	mov    r12,rdx
  40bffd:	jmp    40c00d <isspace@plt+0x86fd>
  40bfff:	nop
  40c000:	mov    rdi,rbx
  40c003:	call   421880 <isspace@plt+0x1df70>
  40c008:	test   r13,r13
  40c00b:	je     40c037 <isspace@plt+0x8727>
  40c00d:	mov    rbx,r13
  40c010:	mov    r13,QWORD PTR [r13+0x2e0]
  40c017:	mov    rax,QWORD PTR [rbx+0x10]
  40c01b:	cmp    BYTE PTR [rax+0x18],0x0
  40c01f:	jne    40c008 <isspace@plt+0x86f8>
  40c021:	mov    rdi,QWORD PTR [rax]
  40c024:	call   4104b0 <isspace@plt+0xcba0>
  40c029:	test   al,al
  40c02b:	je     40c000 <isspace@plt+0x86f0>
  40c02d:	cmp    BYTE PTR [r12+0x68],0x21
  40c033:	je     40c000 <isspace@plt+0x86f0>
  40c035:	jmp    40c008 <isspace@plt+0x86f8>
  40c037:	mov    rax,QWORD PTR [r15+0x28]
  40c03b:	test   rax,rax
  40c03e:	je     40c056 <isspace@plt+0x8746>
  40c040:	mov    rcx,QWORD PTR [rax+0x10]
  40c044:	cmp    BYTE PTR [rcx+0x18],0x0
  40c048:	je     40c09c <isspace@plt+0x878c>
  40c04a:	mov    rax,QWORD PTR [rax+0x2e0]
  40c051:	test   rax,rax
  40c054:	jne    40c040 <isspace@plt+0x8730>
  40c056:	mov    rdi,QWORD PTR [r14+0x8]
  40c05a:	test   rdi,rdi
  40c05d:	je     40c070 <isspace@plt+0x8760>
  40c05f:	xor    esi,esi
  40c061:	mov    edx,0xa
  40c066:	call   4034b0 <strtol@plt>
  40c06b:	mov    rsi,rax
  40c06e:	jmp    40c072 <isspace@plt+0x8762>
  40c070:	xor    esi,esi
  40c072:	mov    rdi,r15
  40c075:	call   424760 <isspace@plt+0x20e50>
  40c07a:	mov    bl,0x1
  40c07c:	mov    rax,QWORD PTR fs:0x28
  40c085:	cmp    rax,QWORD PTR [rsp+0x8]
  40c08a:	jne    40c0b1 <isspace@plt+0x87a1>
  40c08c:	mov    eax,ebx
  40c08e:	add    rsp,0x10
  40c092:	pop    rbx
  40c093:	pop    r12
  40c095:	pop    r13
  40c097:	pop    r14
  40c099:	pop    r15
  40c09b:	ret    
  40c09c:	lea    rsi,[rip+0x23984]        # 42fa27 <isspace@plt+0x2c117>
  40c0a3:	xor    ebx,ebx
  40c0a5:	mov    rdi,r15
  40c0a8:	xor    eax,eax
  40c0aa:	call   4299f0 <isspace@plt+0x260e0>
  40c0af:	jmp    40c07c <isspace@plt+0x876c>
  40c0b1:	call   403280 <__stack_chk_fail@plt>
  40c0b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c0c0:	push   rbp
  40c0c1:	mov    rbp,rsp
  40c0c4:	push   r15
  40c0c6:	push   r14
  40c0c8:	push   r13
  40c0ca:	push   r12
  40c0cc:	push   rbx
  40c0cd:	and    rsp,0xffffffffffffffe0
  40c0d1:	sub    rsp,0x1c0
  40c0d8:	mov    r14,rsi
  40c0db:	mov    r15,rdi
  40c0de:	mov    rax,QWORD PTR fs:0x28
  40c0e7:	mov    QWORD PTR [rsp+0x1a0],rax
  40c0ef:	mov    rsi,QWORD PTR [rcx+0x8]
  40c0f3:	test   rsi,rsi
  40c0f6:	je     40c107 <isspace@plt+0x87f7>
  40c0f8:	cmp    BYTE PTR [rsi],0x0
  40c0fb:	je     40c107 <isspace@plt+0x87f7>
  40c0fd:	mov    rbx,rcx
  40c100:	cmp    QWORD PTR [rcx+0x18],0x0
  40c105:	je     40c142 <isspace@plt+0x8832>
  40c107:	lea    rsi,[rip+0x23de0]        # 42feee <isspace@plt+0x2c5de>
  40c10e:	xor    ebx,ebx
  40c110:	mov    rdi,r15
  40c113:	xor    eax,eax
  40c115:	call   4299f0 <isspace@plt+0x260e0>
  40c11a:	mov    rax,QWORD PTR fs:0x28
  40c123:	cmp    rax,QWORD PTR [rsp+0x1a0]
  40c12b:	jne    40c819 <isspace@plt+0x8f09>
  40c131:	mov    eax,ebx
  40c133:	lea    rsp,[rbp-0x28]
  40c137:	pop    rbx
  40c138:	pop    r12
  40c13a:	pop    r13
  40c13c:	pop    r14
  40c13e:	pop    r15
  40c140:	pop    rbp
  40c141:	ret    
  40c142:	lea    r12,[rsp+0x30]
  40c147:	mov    edx,0xff
  40c14c:	mov    rdi,r12
  40c14f:	call   403150 <strncpy@plt>
  40c154:	mov    rdi,r12
  40c157:	call   403250 <strlen@plt>
  40c15c:	mov    r13b,BYTE PTR [rax+r12*1-0x1]
  40c161:	cmp    r13b,0x21
  40c165:	jne    40c16c <isspace@plt+0x885c>
  40c167:	mov    BYTE PTR [rsp+rax*1+0x2f],0x0
  40c16c:	mov    rdi,QWORD PTR [r15+0x818]
  40c173:	lea    rsi,[rsp+0x30]
  40c178:	call   4085b0 <isspace@plt+0x4ca0>
  40c17d:	test   rax,rax
  40c180:	je     40c1ad <isspace@plt+0x889d>
  40c182:	mov    r12,rax
  40c185:	test   r14,r14
  40c188:	jne    40c192 <isspace@plt+0x8882>
  40c18a:	test   BYTE PTR [r12+0x18],0x10
  40c190:	jne    40c201 <isspace@plt+0x88f1>
  40c192:	mov    eax,DWORD PTR [r12+0x18]
  40c197:	cmp    r13b,0x21
  40c19b:	jne    40c1c9 <isspace@plt+0x88b9>
  40c19d:	test   al,0x1
  40c19f:	jne    40c1b6 <isspace@plt+0x88a6>
  40c1a1:	lea    rsi,[rip+0x23d9a]        # 42ff42 <isspace@plt+0x2c632>
  40c1a8:	jmp    40c10e <isspace@plt+0x87fe>
  40c1ad:	lea    rsi,[rip+0x23d58]        # 42ff0c <isspace@plt+0x2c5fc>
  40c1b4:	jmp    40c208 <isspace@plt+0x88f8>
  40c1b6:	cmp    QWORD PTR [rbx+0x10],0x0
  40c1bb:	je     40c1c9 <isspace@plt+0x88b9>
  40c1bd:	lea    rsi,[rip+0x23da2]        # 42ff66 <isspace@plt+0x2c656>
  40c1c4:	jmp    40c10e <isspace@plt+0x87fe>
  40c1c9:	test   al,0x2
  40c1cb:	jne    40c1e0 <isspace@plt+0x88d0>
  40c1cd:	test   al,0x1
  40c1cf:	jne    40c21e <isspace@plt+0x890e>
  40c1d1:	test   al,0x4
  40c1d3:	jne    40c2ee <isspace@plt+0x89de>
  40c1d9:	xor    ebx,ebx
  40c1db:	jmp    40c11a <isspace@plt+0x880a>
  40c1e0:	test   al,0x8
  40c1e2:	jne    40c2e0 <isspace@plt+0x89d0>
  40c1e8:	mov    rax,QWORD PTR [rbx+0x10]
  40c1ec:	test   rax,rax
  40c1ef:	jne    40c2e4 <isspace@plt+0x89d4>
  40c1f5:	lea    rsi,[rip+0x23d95]        # 42ff91 <isspace@plt+0x2c681>
  40c1fc:	jmp    40c10e <isspace@plt+0x87fe>
  40c201:	lea    rsi,[rip+0x23d19]        # 42ff21 <isspace@plt+0x2c611>
  40c208:	xor    ebx,ebx
  40c20a:	lea    rdx,[rsp+0x30]
  40c20f:	mov    rdi,r15
  40c212:	xor    eax,eax
  40c214:	call   4299f0 <isspace@plt+0x260e0>
  40c219:	jmp    40c11a <isspace@plt+0x880a>
  40c21e:	mov    BYTE PTR [rsp+0x1f],r13b
  40c223:	mov    r13,QWORD PTR [rbx+0x10]
  40c227:	test   r13,r13
  40c22a:	je     40c347 <isspace@plt+0x8a37>
  40c230:	vmovups ymm0,YMMWORD PTR [rip+0x33c70]        # 43fea8 <isspace@plt+0x3c598>
  40c238:	vmovups YMMWORD PTR [rsp+0x160],ymm0
  40c241:	mov    rax,QWORD PTR [rip+0x33c80]        # 43fec8 <isspace@plt+0x3c5b8>
  40c248:	mov    QWORD PTR [rsp+0x180],rax
  40c250:	lea    rbx,[rsp+0x168]
  40c258:	lea    rsi,[rip+0x22a2e]        # 42ec8d <isspace@plt+0x2b37d>
  40c25f:	mov    rdi,r13
  40c262:	vzeroupper 
  40c265:	call   4030f0 <strcasecmp@plt>
  40c26a:	test   eax,eax
  40c26c:	je     40c35a <isspace@plt+0x8a4a>
  40c272:	mov    rsi,QWORD PTR [rbx]
  40c275:	add    rbx,0x8
  40c279:	test   rsi,rsi
  40c27c:	jne    40c25f <isspace@plt+0x894f>
  40c27e:	mov    rax,QWORD PTR [rip+0x33c6b]        # 43fef0 <isspace@plt+0x3c5e0>
  40c285:	mov    QWORD PTR [rsp+0x150],rax
  40c28d:	vmovups ymm0,YMMWORD PTR [rip+0x33c3b]        # 43fed0 <isspace@plt+0x3c5c0>
  40c295:	vmovups YMMWORD PTR [rsp+0x130],ymm0
  40c29e:	lea    rbx,[rsp+0x138]
  40c2a6:	lea    rsi,[rip+0x22ab7]        # 42ed64 <isspace@plt+0x2b454>
  40c2ad:	mov    rdi,r13
  40c2b0:	vzeroupper 
  40c2b3:	call   4030f0 <strcasecmp@plt>
  40c2b8:	test   eax,eax
  40c2ba:	je     40c36f <isspace@plt+0x8a5f>
  40c2c0:	mov    rsi,QWORD PTR [rbx]
  40c2c3:	add    rbx,0x8
  40c2c7:	test   rsi,rsi
  40c2ca:	jne    40c2ad <isspace@plt+0x899d>
  40c2cc:	lea    rsi,[rip+0x23cdc]        # 42ffaf <isspace@plt+0x2c69f>
  40c2d3:	xor    ebx,ebx
  40c2d5:	mov    rdi,r15
  40c2d8:	mov    rdx,r13
  40c2db:	jmp    40c212 <isspace@plt+0x8902>
  40c2e0:	mov    rax,QWORD PTR [rbx+0x10]
  40c2e4:	mov    QWORD PTR [rsp+0x28],rax
  40c2e9:	jmp    40c37b <isspace@plt+0x8a6b>
  40c2ee:	mov    BYTE PTR [rsp+0x1f],r13b
  40c2f3:	mov    r13,QWORD PTR [rbx+0x10]
  40c2f7:	test   r13,r13
  40c2fa:	je     40c363 <isspace@plt+0x8a53>
  40c2fc:	call   403130 <__errno_location@plt>
  40c301:	mov    QWORD PTR [rsp+0x20],rax
  40c306:	mov    DWORD PTR [rax],0x0
  40c30c:	lea    rsi,[rsp+0x160]
  40c314:	mov    rdi,r13
  40c317:	mov    edx,0xa
  40c31c:	call   4034b0 <strtol@plt>
  40c321:	mov    rcx,QWORD PTR [rbx+0x10]
  40c325:	cmp    BYTE PTR [rcx],0x0
  40c328:	je     40c33b <isspace@plt+0x8a2b>
  40c32a:	mov    rcx,QWORD PTR [rsp+0x160]
  40c332:	cmp    BYTE PTR [rcx],0x0
  40c335:	je     40c713 <isspace@plt+0x8e03>
  40c33b:	lea    rsi,[rip+0x23ca7]        # 42ffe9 <isspace@plt+0x2c6d9>
  40c342:	jmp    40c10e <isspace@plt+0x87fe>
  40c347:	mov    r13b,BYTE PTR [rsp+0x1f]
  40c34c:	cmp    r13b,0x21
  40c350:	setne  al
  40c353:	setne  BYTE PTR [rsp+0x28]
  40c358:	jmp    40c37b <isspace@plt+0x8a6b>
  40c35a:	mov    BYTE PTR [rsp+0x28],0x1
  40c35f:	mov    al,0x1
  40c361:	jmp    40c376 <isspace@plt+0x8a66>
  40c363:	lea    rsi,[rip+0x23c6e]        # 42ffd8 <isspace@plt+0x2c6c8>
  40c36a:	jmp    40c10e <isspace@plt+0x87fe>
  40c36f:	mov    BYTE PTR [rsp+0x28],0x0
  40c374:	xor    eax,eax
  40c376:	mov    r13b,BYTE PTR [rsp+0x1f]
  40c37b:	lea    rcx,[rip+0x336ae]        # 43fa30 <isspace@plt+0x3c120>
  40c382:	mov    rdx,r12
  40c385:	sub    rdx,rcx
  40c388:	mov    rcx,0xffffffffffffffff
  40c38f:	nop
  40c390:	mov    rbx,rcx
  40c393:	inc    rcx
  40c396:	cmp    rcx,0x11
  40c39a:	ja     40c3a5 <isspace@plt+0x8a95>
  40c39c:	test   rdx,rdx
  40c39f:	lea    rdx,[rdx-0x38]
  40c3a3:	jne    40c390 <isspace@plt+0x8a80>
  40c3a5:	cmp    rcx,0x11
  40c3a9:	ja     40c41d <isspace@plt+0x8b0d>
  40c3ab:	lea    rdx,[rip+0x22bee]        # 42efa0 <isspace@plt+0x2b690>
  40c3b2:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40c3b6:	add    rcx,rdx
  40c3b9:	jmp    rcx
  40c3bb:	vxorps xmm0,xmm0,xmm0
  40c3bf:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40c3c8:	mov    DWORD PTR [rsp+0x180],0x0
  40c3d3:	vmovaps xmm0,XMMWORD PTR [rip+0x22bb5]        # 42ef90 <isspace@plt+0x2b680>
  40c3db:	vmovups XMMWORD PTR [rsp+0x174],xmm0
  40c3e4:	mov    rdi,QWORD PTR [r14+0x18]
  40c3e8:	vzeroupper 
  40c3eb:	call   41e6c0 <isspace@plt+0x1adb0>
  40c3f0:	cmp    BYTE PTR [rsp+0x28],0x0
  40c3f5:	mov    esi,DWORD PTR [rsp+rbx*4+0x164]
  40c3fc:	jne    40c412 <isspace@plt+0x8b02>
  40c3fe:	cmp    r13b,0x21
  40c402:	jne    40c709 <isspace@plt+0x8df9>
  40c408:	mov    ecx,esi
  40c40a:	and    ecx,eax
  40c40c:	jne    40c709 <isspace@plt+0x8df9>
  40c412:	or     esi,eax
  40c414:	mov    rdi,QWORD PTR [r14+0x18]
  40c418:	jmp    40c5b1 <isspace@plt+0x8ca1>
  40c41d:	mov    rbx,QWORD PTR [r12+0x28]
  40c422:	test   rbx,rbx
  40c425:	je     40c1d9 <isspace@plt+0x88c9>
  40c42b:	xor    ecx,ecx
  40c42d:	cmp    r13b,0x21
  40c431:	sete   cl
  40c434:	mov    rdx,QWORD PTR [r12+0x30]
  40c439:	mov    r8d,DWORD PTR [r12+0x18]
  40c43e:	lea    rax,[rsp+0x28]
  40c443:	mov    QWORD PTR [rsp],rax
  40c447:	lea    r9,[rsp+0x30]
  40c44c:	mov    rdi,r15
  40c44f:	mov    rsi,r14
  40c452:	call   rbx
  40c454:	mov    ebx,eax
  40c456:	jmp    40c11a <isspace@plt+0x880a>
  40c45b:	mov    rdi,QWORD PTR [rsp+0x28]
  40c460:	call   403850 <strdup@plt>
  40c465:	test   rax,rax
  40c468:	je     40c750 <isspace@plt+0x8e40>
  40c46e:	mov    rbx,rax
  40c471:	mov    rdi,QWORD PTR [r15+0x800]
  40c478:	call   4030d0 <free@plt>
  40c47d:	mov    QWORD PTR [r15+0x800],rbx
  40c484:	mov    bl,0x1
  40c486:	jmp    40c11a <isspace@plt+0x880a>
  40c48b:	mov    rdi,QWORD PTR [r15]
  40c48e:	call   QWORD PTR [rdi+0x90]
  40c494:	mov    esi,DWORD PTR [rsp+0x28]
  40c498:	mov    rdi,rax
  40c49b:	call   403050 <termkey_set_waittime@plt>
  40c4a0:	mov    bl,0x1
  40c4a2:	jmp    40c11a <isspace@plt+0x880a>
  40c4a7:	cmp    r13b,0x21
  40c4ab:	jne    40c4b6 <isspace@plt+0x8ba6>
  40c4ad:	mov    al,BYTE PTR [r15+0x7fd]
  40c4b4:	xor    al,0x1
  40c4b6:	test   al,al
  40c4b8:	setne  BYTE PTR [r15+0x7fd]
  40c4c0:	mov    bl,0x1
  40c4c2:	jmp    40c11a <isspace@plt+0x880a>
  40c4c7:	cmp    r13b,0x21
  40c4cb:	jne    40c4d6 <isspace@plt+0x8bc6>
  40c4cd:	mov    al,BYTE PTR [r15+0x7fc]
  40c4d4:	xor    al,0x1
  40c4d6:	test   al,al
  40c4d8:	setne  BYTE PTR [r15+0x7fc]
  40c4e0:	mov    bl,0x1
  40c4e2:	jmp    40c11a <isspace@plt+0x880a>
  40c4e7:	mov    r14d,DWORD PTR [rsp+0x28]
  40c4ec:	lea    eax,[r14-0x1]
  40c4f0:	mov    bl,0x1
  40c4f2:	cmp    eax,0x7
  40c4f5:	ja     40c11a <isspace@plt+0x880a>
  40c4fb:	mov    r12,QWORD PTR [r15+0x28]
  40c4ff:	test   r12,r12
  40c502:	je     40c51e <isspace@plt+0x8c0e>
  40c504:	mov    rdi,QWORD PTR [r12+0x18]
  40c509:	mov    esi,r14d
  40c50c:	call   419ed0 <isspace@plt+0x165c0>
  40c511:	mov    r12,QWORD PTR [r12+0x2e0]
  40c519:	test   r12,r12
  40c51c:	jne    40c504 <isspace@plt+0x8bf4>
  40c51e:	mov    DWORD PTR [r15+0x7f8],r14d
  40c525:	jmp    40c11a <isspace@plt+0x880a>
  40c52a:	mov    rdi,QWORD PTR [r14+0x18]
  40c52e:	call   41e6c0 <isspace@plt+0x1adb0>
  40c533:	cmp    BYTE PTR [rsp+0x28],0x0
  40c538:	jne    40c54f <isspace@plt+0x8c3f>
  40c53a:	cmp    r13b,0x21
  40c53e:	jne    40c7cc <isspace@plt+0x8ebc>
  40c544:	mov    ecx,eax
  40c546:	and    ecx,0x1
  40c549:	jne    40c7cc <isspace@plt+0x8ebc>
  40c54f:	and    eax,0xfffffffc
  40c552:	or     eax,0x1
  40c555:	jmp    40c5ab <isspace@plt+0x8c9b>
  40c557:	mov    rdi,QWORD PTR [r14+0x18]
  40c55b:	call   41e6c0 <isspace@plt+0x1adb0>
  40c560:	cmp    BYTE PTR [rsp+0x28],0x0
  40c565:	jne    40c57c <isspace@plt+0x8c6c>
  40c567:	cmp    r13b,0x21
  40c56b:	jne    40c7d4 <isspace@plt+0x8ec4>
  40c571:	mov    ecx,eax
  40c573:	and    ecx,0x2
  40c576:	jne    40c7d4 <isspace@plt+0x8ec4>
  40c57c:	and    eax,0xfffffffc
  40c57f:	or     eax,0x2
  40c582:	jmp    40c5ab <isspace@plt+0x8c9b>
  40c584:	mov    rdi,QWORD PTR [r14+0x18]
  40c588:	call   41e6c0 <isspace@plt+0x1adb0>
  40c58d:	cmp    BYTE PTR [rsp+0x28],0x0
  40c592:	jne    40c5a6 <isspace@plt+0x8c96>
  40c594:	test   al,al
  40c596:	js     40c7dc <isspace@plt+0x8ecc>
  40c59c:	cmp    r13b,0x21
  40c5a0:	jne    40c7dc <isspace@plt+0x8ecc>
  40c5a6:	or     eax,0x80
  40c5ab:	mov    rdi,QWORD PTR [r14+0x18]
  40c5af:	mov    esi,eax
  40c5b1:	call   41b530 <isspace@plt+0x17c20>
  40c5b6:	mov    bl,0x1
  40c5b8:	jmp    40c11a <isspace@plt+0x880a>
  40c5bd:	mov    rdi,QWORD PTR [r14+0x18]
  40c5c1:	mov    esi,DWORD PTR [rsp+0x28]
  40c5c5:	call   41e710 <isspace@plt+0x1ae00>
  40c5ca:	mov    bl,0x1
  40c5cc:	jmp    40c11a <isspace@plt+0x880a>
  40c5d1:	mov    r12,QWORD PTR [rsp+0x28]
  40c5d6:	lea    rdi,[rip+0x23a5c]        # 430039 <isspace@plt+0x2c729>
  40c5dd:	mov    rsi,r12
  40c5e0:	call   403470 <strcmp@plt>
  40c5e5:	test   eax,eax
  40c5e7:	je     40c75c <isspace@plt+0x8e4c>
  40c5ed:	lea    rdi,[rip+0x23a4a]        # 43003e <isspace@plt+0x2c72e>
  40c5f4:	mov    rsi,r12
  40c5f7:	call   403470 <strcmp@plt>
  40c5fc:	test   eax,eax
  40c5fe:	je     40c793 <isspace@plt+0x8e83>
  40c604:	lea    rdi,[rip+0x23a3a]        # 430045 <isspace@plt+0x2c735>
  40c60b:	mov    rsi,r12
  40c60e:	call   403470 <strcmp@plt>
  40c613:	test   eax,eax
  40c615:	je     40c7e6 <isspace@plt+0x8ed6>
  40c61b:	lea    rsi,[rip+0x23a2b]        # 43004d <isspace@plt+0x2c73d>
  40c622:	xor    ebx,ebx
  40c624:	mov    rdi,r15
  40c627:	mov    rdx,r12
  40c62a:	jmp    40c212 <isspace@plt+0x8902>
  40c62f:	mov    r14,QWORD PTR [rsp+0x28]
  40c634:	lea    rdi,[rip+0x239fe]        # 430039 <isspace@plt+0x2c729>
  40c63b:	mov    rsi,r14
  40c63e:	call   403470 <strcmp@plt>
  40c643:	test   eax,eax
  40c645:	je     40c771 <isspace@plt+0x8e61>
  40c64b:	lea    rdi,[rip+0x23a3c]        # 43008e <isspace@plt+0x2c77e>
  40c652:	mov    rsi,r14
  40c655:	call   403470 <strcmp@plt>
  40c65a:	test   eax,eax
  40c65c:	je     40c7a8 <isspace@plt+0x8e98>
  40c662:	lea    rdi,[rip+0x23a2a]        # 430093 <isspace@plt+0x2c783>
  40c669:	mov    rsi,r14
  40c66c:	call   403470 <strcmp@plt>
  40c671:	test   eax,eax
  40c673:	je     40c7fb <isspace@plt+0x8eeb>
  40c679:	lea    rsi,[rip+0x23a18]        # 430098 <isspace@plt+0x2c788>
  40c680:	jmp    40c6dc <isspace@plt+0x8dcc>
  40c682:	cmp    r13b,0x21
  40c686:	jne    40c691 <isspace@plt+0x8d81>
  40c688:	mov    al,BYTE PTR [r15+0x7fe]
  40c68f:	xor    al,0x1
  40c691:	test   al,al
  40c693:	setne  BYTE PTR [r15+0x7fe]
  40c69b:	mov    bl,0x1
  40c69d:	jmp    40c11a <isspace@plt+0x880a>
  40c6a2:	mov    r14,QWORD PTR [rsp+0x28]
  40c6a7:	lea    rdi,[rip+0x224f7]        # 42eba5 <isspace@plt+0x2b295>
  40c6ae:	mov    rsi,r14
  40c6b1:	call   403470 <strcmp@plt>
  40c6b6:	test   eax,eax
  40c6b8:	je     40c783 <isspace@plt+0x8e73>
  40c6be:	lea    rdi,[rip+0x1fa5b]        # 42c120 <isspace@plt+0x28810>
  40c6c5:	mov    rsi,r14
  40c6c8:	call   403470 <strcmp@plt>
  40c6cd:	test   eax,eax
  40c6cf:	je     40c7ba <isspace@plt+0x8eaa>
  40c6d5:	lea    rsi,[rip+0x239f8]        # 4300d4 <isspace@plt+0x2c7c4>
  40c6dc:	xor    ebx,ebx
  40c6de:	mov    rdi,r15
  40c6e1:	mov    rdx,r14
  40c6e4:	jmp    40c212 <isspace@plt+0x8902>
  40c6e9:	cmp    r13b,0x21
  40c6ed:	jne    40c6f8 <isspace@plt+0x8de8>
  40c6ef:	mov    al,BYTE PTR [r15+0xb60]
  40c6f6:	xor    al,0x1
  40c6f8:	test   al,al
  40c6fa:	setne  BYTE PTR [r15+0xb60]
  40c702:	mov    bl,0x1
  40c704:	jmp    40c11a <isspace@plt+0x880a>
  40c709:	andn   esi,esi,eax
  40c70e:	jmp    40c414 <isspace@plt+0x8b04>
  40c713:	mov    rcx,QWORD PTR [rsp+0x20]
  40c718:	cmp    DWORD PTR [rcx],0x22
  40c71b:	sete   cl
  40c71e:	movabs rdx,0x8000000000000001
  40c728:	add    rdx,rax
  40c72b:	cmp    rdx,0x2
  40c72f:	setb   dl
  40c732:	movsxd rsi,eax
  40c735:	cmp    rsi,rax
  40c738:	jne    40c787 <isspace@plt+0x8e77>
  40c73a:	and    dl,cl
  40c73c:	jne    40c787 <isspace@plt+0x8e77>
  40c73e:	test   rax,rax
  40c741:	js     40c80d <isspace@plt+0x8efd>
  40c747:	mov    DWORD PTR [rsp+0x28],eax
  40c74b:	jmp    40c376 <isspace@plt+0x8a66>
  40c750:	lea    rsi,[rip+0x238cb]        # 430022 <isspace@plt+0x2c712>
  40c757:	jmp    40c10e <isspace@plt+0x87fe>
  40c75c:	mov    rax,QWORD PTR [r14+0x10]
  40c760:	mov    DWORD PTR [rax+0x438],0x0
  40c76a:	mov    bl,0x1
  40c76c:	jmp    40c11a <isspace@plt+0x880a>
  40c771:	mov    DWORD PTR [r15+0xad0],0x0
  40c77c:	mov    bl,0x1
  40c77e:	jmp    40c11a <isspace@plt+0x880a>
  40c783:	xor    esi,esi
  40c785:	jmp    40c7bf <isspace@plt+0x8eaf>
  40c787:	lea    rsi,[rip+0x2386a]        # 42fff8 <isspace@plt+0x2c6e8>
  40c78e:	jmp    40c10e <isspace@plt+0x87fe>
  40c793:	mov    rax,QWORD PTR [r14+0x10]
  40c797:	mov    DWORD PTR [rax+0x438],0x1
  40c7a1:	mov    bl,0x1
  40c7a3:	jmp    40c11a <isspace@plt+0x880a>
  40c7a8:	mov    DWORD PTR [r15+0xad0],0x1
  40c7b3:	mov    bl,0x1
  40c7b5:	jmp    40c11a <isspace@plt+0x880a>
  40c7ba:	mov    esi,0x1
  40c7bf:	mov    rdi,QWORD PTR [r15]
  40c7c2:	call   QWORD PTR [rdi+0x50]
  40c7c5:	mov    bl,0x1
  40c7c7:	jmp    40c11a <isspace@plt+0x880a>
  40c7cc:	and    eax,0xfffffffe
  40c7cf:	jmp    40c5ab <isspace@plt+0x8c9b>
  40c7d4:	and    eax,0xfffffffd
  40c7d7:	jmp    40c5ab <isspace@plt+0x8c9b>
  40c7dc:	and    eax,0xffffff7f
  40c7e1:	jmp    40c5ab <isspace@plt+0x8c9b>
  40c7e6:	mov    rax,QWORD PTR [r14+0x10]
  40c7ea:	mov    DWORD PTR [rax+0x438],0x2
  40c7f4:	mov    bl,0x1
  40c7f6:	jmp    40c11a <isspace@plt+0x880a>
  40c7fb:	mov    DWORD PTR [r15+0xad0],0x2
  40c806:	mov    bl,0x1
  40c808:	jmp    40c11a <isspace@plt+0x880a>
  40c80d:	lea    rsi,[rip+0x237f4]        # 430008 <isspace@plt+0x2c6f8>
  40c814:	jmp    40c10e <isspace@plt+0x87fe>
  40c819:	call   403280 <__stack_chk_fail@plt>
  40c81e:	xchg   ax,ax
  40c820:	push   rbp
  40c821:	push   r15
  40c823:	push   r14
  40c825:	push   r12
  40c827:	push   rbx
  40c828:	sub    rsp,0x10
  40c82c:	mov    rax,QWORD PTR fs:0x28
  40c835:	mov    QWORD PTR [rsp+0x8],rax
  40c83a:	test   rsi,rsi
  40c83d:	je     40c8bd <isspace@plt+0x8fad>
  40c83f:	mov    rbx,rcx
  40c842:	mov    rbp,rsi
  40c845:	mov    r14,rdi
  40c848:	mov    rdi,QWORD PTR [rsi+0x18]
  40c84c:	call   41e6c0 <isspace@plt+0x1adb0>
  40c851:	mov    r15d,eax
  40c854:	mov    rdi,QWORD PTR [r14]
  40c857:	xor    esi,esi
  40c859:	call   QWORD PTR [rdi+0x50]
  40c85c:	mov    rsi,QWORD PTR [rbx+0x8]
  40c860:	test   rsi,rsi
  40c863:	je     40c8c1 <isspace@plt+0x8fb1>
  40c865:	add    rbx,0x10
  40c869:	nop    DWORD PTR [rax+0x0]
  40c870:	mov    rdi,r14
  40c873:	call   40d5c0 <isspace@plt+0x9cb0>
  40c878:	test   rax,rax
  40c87b:	je     40c8bd <isspace@plt+0x8fad>
  40c87d:	mov    r12,rax
  40c880:	call   403130 <__errno_location@plt>
  40c885:	mov    rbp,rax
  40c888:	mov    DWORD PTR [rax],0x0
  40c88e:	mov    rdi,r14
  40c891:	mov    rsi,r12
  40c894:	call   4215f0 <isspace@plt+0x1dce0>
  40c899:	test   al,al
  40c89b:	je     40c8db <isspace@plt+0x8fcb>
  40c89d:	mov    rsi,QWORD PTR [rbx]
  40c8a0:	add    rbx,0x8
  40c8a4:	test   rsi,rsi
  40c8a7:	jne    40c870 <isspace@plt+0x8f60>
  40c8a9:	mov    rax,QWORD PTR [r14+0x30]
  40c8ad:	mov    rdi,QWORD PTR [rax+0x18]
  40c8b1:	mov    esi,r15d
  40c8b4:	call   41b530 <isspace@plt+0x17c20>
  40c8b9:	mov    bl,0x1
  40c8bb:	jmp    40c909 <isspace@plt+0x8ff9>
  40c8bd:	xor    ebx,ebx
  40c8bf:	jmp    40c909 <isspace@plt+0x8ff9>
  40c8c1:	mov    rdi,rbp
  40c8c4:	call   421190 <isspace@plt+0x1d880>
  40c8c9:	mov    rcx,QWORD PTR fs:0x28
  40c8d2:	cmp    rcx,QWORD PTR [rsp+0x8]
  40c8d7:	je     40c91b <isspace@plt+0x900b>
  40c8d9:	jmp    40c928 <isspace@plt+0x9018>
  40c8db:	mov    edi,DWORD PTR [rbp+0x0]
  40c8de:	test   edi,edi
  40c8e0:	je     40c8ec <isspace@plt+0x8fdc>
  40c8e2:	call   403880 <strerror@plt>
  40c8e7:	mov    rcx,rax
  40c8ea:	jmp    40c8f3 <isspace@plt+0x8fe3>
  40c8ec:	lea    rcx,[rip+0x241a0]        # 430a93 <isspace@plt+0x2d183>
  40c8f3:	lea    rsi,[rip+0x2315c]        # 42fa56 <isspace@plt+0x2c146>
  40c8fa:	xor    ebx,ebx
  40c8fc:	mov    rdi,r14
  40c8ff:	mov    rdx,r12
  40c902:	xor    eax,eax
  40c904:	call   4299f0 <isspace@plt+0x260e0>
  40c909:	mov    rax,QWORD PTR fs:0x28
  40c912:	cmp    rax,QWORD PTR [rsp+0x8]
  40c917:	jne    40c928 <isspace@plt+0x9018>
  40c919:	mov    eax,ebx
  40c91b:	add    rsp,0x10
  40c91f:	pop    rbx
  40c920:	pop    r12
  40c922:	pop    r14
  40c924:	pop    r15
  40c926:	pop    rbp
  40c927:	ret    
  40c928:	call   403280 <__stack_chk_fail@plt>
  40c92d:	nop    DWORD PTR [rax]
  40c930:	push   rbx
  40c931:	sub    rsp,0x10
  40c935:	mov    rbx,rdi
  40c938:	mov    rax,QWORD PTR fs:0x28
  40c941:	mov    QWORD PTR [rsp+0x8],rax
  40c946:	mov    rdi,QWORD PTR [rdi]
  40c949:	mov    esi,0x1
  40c94e:	call   QWORD PTR [rdi+0x50]
  40c951:	mov    rdi,rbx
  40c954:	xor    esi,esi
  40c956:	call   4215f0 <isspace@plt+0x1dce0>
  40c95b:	mov    rcx,QWORD PTR fs:0x28
  40c964:	cmp    rcx,QWORD PTR [rsp+0x8]
  40c969:	jne    40c971 <isspace@plt+0x9061>
  40c96b:	add    rsp,0x10
  40c96f:	pop    rbx
  40c970:	ret    
  40c971:	call   403280 <__stack_chk_fail@plt>
  40c976:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c980:	push   rbp
  40c981:	push   r15
  40c983:	push   r14
  40c985:	push   r12
  40c987:	push   rbx
  40c988:	sub    rsp,0x10
  40c98c:	mov    rax,QWORD PTR fs:0x28
  40c995:	mov    QWORD PTR [rsp+0x8],rax
  40c99a:	test   rsi,rsi
  40c99d:	je     40ca1d <isspace@plt+0x910d>
  40c99f:	mov    rbx,rcx
  40c9a2:	mov    rbp,rsi
  40c9a5:	mov    r14,rdi
  40c9a8:	mov    rdi,QWORD PTR [rsi+0x18]
  40c9ac:	call   41e6c0 <isspace@plt+0x1adb0>
  40c9b1:	mov    r15d,eax
  40c9b4:	mov    rdi,QWORD PTR [r14]
  40c9b7:	mov    esi,0x1
  40c9bc:	call   QWORD PTR [rdi+0x50]
  40c9bf:	mov    rsi,QWORD PTR [rbx+0x8]
  40c9c3:	test   rsi,rsi
  40c9c6:	je     40ca21 <isspace@plt+0x9111>
  40c9c8:	add    rbx,0x10
  40c9cc:	nop    DWORD PTR [rax+0x0]
  40c9d0:	mov    rdi,r14
  40c9d3:	call   40d5c0 <isspace@plt+0x9cb0>
  40c9d8:	test   rax,rax
  40c9db:	je     40ca1d <isspace@plt+0x910d>
  40c9dd:	mov    r12,rax
  40c9e0:	call   403130 <__errno_location@plt>
  40c9e5:	mov    rbp,rax
  40c9e8:	mov    DWORD PTR [rax],0x0
  40c9ee:	mov    rdi,r14
  40c9f1:	mov    rsi,r12
  40c9f4:	call   4215f0 <isspace@plt+0x1dce0>
  40c9f9:	test   al,al
  40c9fb:	je     40ca3b <isspace@plt+0x912b>
  40c9fd:	mov    rsi,QWORD PTR [rbx]
  40ca00:	add    rbx,0x8
  40ca04:	test   rsi,rsi
  40ca07:	jne    40c9d0 <isspace@plt+0x90c0>
  40ca09:	mov    rax,QWORD PTR [r14+0x30]
  40ca0d:	mov    rdi,QWORD PTR [rax+0x18]
  40ca11:	mov    esi,r15d
  40ca14:	call   41b530 <isspace@plt+0x17c20>
  40ca19:	mov    bl,0x1
  40ca1b:	jmp    40ca69 <isspace@plt+0x9159>
  40ca1d:	xor    ebx,ebx
  40ca1f:	jmp    40ca69 <isspace@plt+0x9159>
  40ca21:	mov    rdi,rbp
  40ca24:	call   421190 <isspace@plt+0x1d880>
  40ca29:	mov    rcx,QWORD PTR fs:0x28
  40ca32:	cmp    rcx,QWORD PTR [rsp+0x8]
  40ca37:	je     40ca7b <isspace@plt+0x916b>
  40ca39:	jmp    40ca88 <isspace@plt+0x9178>
  40ca3b:	mov    edi,DWORD PTR [rbp+0x0]
  40ca3e:	test   edi,edi
  40ca40:	je     40ca4c <isspace@plt+0x913c>
  40ca42:	call   403880 <strerror@plt>
  40ca47:	mov    rcx,rax
  40ca4a:	jmp    40ca53 <isspace@plt+0x9143>
  40ca4c:	lea    rcx,[rip+0x24040]        # 430a93 <isspace@plt+0x2d183>
  40ca53:	lea    rsi,[rip+0x22ffc]        # 42fa56 <isspace@plt+0x2c146>
  40ca5a:	xor    ebx,ebx
  40ca5c:	mov    rdi,r14
  40ca5f:	mov    rdx,r12
  40ca62:	xor    eax,eax
  40ca64:	call   4299f0 <isspace@plt+0x260e0>
  40ca69:	mov    rax,QWORD PTR fs:0x28
  40ca72:	cmp    rax,QWORD PTR [rsp+0x8]
  40ca77:	jne    40ca88 <isspace@plt+0x9178>
  40ca79:	mov    eax,ebx
  40ca7b:	add    rsp,0x10
  40ca7f:	pop    rbx
  40ca80:	pop    r12
  40ca82:	pop    r14
  40ca84:	pop    r15
  40ca86:	pop    rbp
  40ca87:	ret    
  40ca88:	call   403280 <__stack_chk_fail@plt>
  40ca8d:	nop    DWORD PTR [rax]
  40ca90:	push   rbp
  40ca91:	push   r15
  40ca93:	push   r14
  40ca95:	push   r13
  40ca97:	push   r12
  40ca99:	push   rbx
  40ca9a:	push   rax
  40ca9b:	mov    rax,QWORD PTR fs:0x28
  40caa4:	mov    QWORD PTR [rsp],rax
  40caa8:	test   rsi,rsi
  40caab:	je     40cb44 <isspace@plt+0x9234>
  40cab1:	mov    r12,r9
  40cab4:	mov    r13,r8
  40cab7:	mov    rbp,rcx
  40caba:	mov    r15,rdx
  40cabd:	mov    rbx,rsi
  40cac0:	mov    r14,rdi
  40cac3:	mov    rax,QWORD PTR [rsi+0x10]
  40cac7:	cmp    DWORD PTR [rax+0x14],0xffffffff
  40cacb:	jne    40cae0 <isspace@plt+0x91d0>
  40cacd:	cmp    QWORD PTR [rax+0x8],0x0
  40cad2:	jne    40cae0 <isspace@plt+0x91d0>
  40cad4:	mov    rdi,QWORD PTR [rax]
  40cad7:	call   4104b0 <isspace@plt+0xcba0>
  40cadc:	test   al,al
  40cade:	je     40cafb <isspace@plt+0x91eb>
  40cae0:	mov    rdi,r14
  40cae3:	mov    rsi,rbx
  40cae6:	mov    rdx,r15
  40cae9:	mov    rcx,rbp
  40caec:	mov    r8,r13
  40caef:	mov    r9,r12
  40caf2:	call   40aa80 <isspace@plt+0x7170>
  40caf7:	test   al,al
  40caf9:	je     40cb44 <isspace@plt+0x9234>
  40cafb:	cmp    BYTE PTR [r15+0x68],0x21
  40cb00:	je     40cb0e <isspace@plt+0x91fe>
  40cb02:	mov    rdi,rbx
  40cb05:	call   4216f0 <isspace@plt+0x1dde0>
  40cb0a:	test   al,al
  40cb0c:	je     40cb66 <isspace@plt+0x9256>
  40cb0e:	mov    rdi,rbx
  40cb11:	call   421880 <isspace@plt+0x1df70>
  40cb16:	mov    rax,QWORD PTR [r14+0x28]
  40cb1a:	test   rax,rax
  40cb1d:	je     40cb36 <isspace@plt+0x9226>
  40cb1f:	nop
  40cb20:	mov    rcx,QWORD PTR [rax+0x10]
  40cb24:	cmp    BYTE PTR [rcx+0x18],0x0
  40cb28:	je     40cb40 <isspace@plt+0x9230>
  40cb2a:	mov    rax,QWORD PTR [rax+0x2e0]
  40cb31:	test   rax,rax
  40cb34:	jne    40cb20 <isspace@plt+0x9210>
  40cb36:	mov    rdi,r14
  40cb39:	xor    esi,esi
  40cb3b:	call   424760 <isspace@plt+0x20e50>
  40cb40:	mov    bl,0x1
  40cb42:	jmp    40cb46 <isspace@plt+0x9236>
  40cb44:	xor    ebx,ebx
  40cb46:	mov    rax,QWORD PTR fs:0x28
  40cb4f:	cmp    rax,QWORD PTR [rsp]
  40cb53:	jne    40cb7b <isspace@plt+0x926b>
  40cb55:	mov    eax,ebx
  40cb57:	add    rsp,0x8
  40cb5b:	pop    rbx
  40cb5c:	pop    r12
  40cb5e:	pop    r13
  40cb60:	pop    r14
  40cb62:	pop    r15
  40cb64:	pop    rbp
  40cb65:	ret    
  40cb66:	lea    rsi,[rip+0x22eba]        # 42fa27 <isspace@plt+0x2c117>
  40cb6d:	xor    ebx,ebx
  40cb6f:	mov    rdi,r14
  40cb72:	xor    eax,eax
  40cb74:	call   4299f0 <isspace@plt+0x260e0>
  40cb79:	jmp    40cb46 <isspace@plt+0x9236>
  40cb7b:	call   403280 <__stack_chk_fail@plt>
  40cb80:	push   rbp
  40cb81:	push   r15
  40cb83:	push   r14
  40cb85:	push   r13
  40cb87:	push   r12
  40cb89:	push   rbx
  40cb8a:	sub    rsp,0x38
  40cb8e:	mov    rax,QWORD PTR fs:0x28
  40cb97:	mov    QWORD PTR [rsp+0x30],rax
  40cb9c:	test   rsi,rsi
  40cb9f:	je     40cc01 <isspace@plt+0x92f1>
  40cba1:	mov    r13,rcx
  40cba4:	mov    r14,rdi
  40cba7:	mov    rax,QWORD PTR [rsi+0x10]
  40cbab:	mov    r15,QWORD PTR [rax]
  40cbae:	lea    rbp,[rip+0x23ede]        # 430a93 <isspace@plt+0x2d183>
  40cbb5:	mov    QWORD PTR [rsp+0x8],rbp
  40cbba:	mov    rbx,QWORD PTR [rcx+0x8]
  40cbbe:	test   rbx,rbx
  40cbc1:	je     40cc08 <isspace@plt+0x92f8>
  40cbc3:	call   403130 <__errno_location@plt>
  40cbc8:	mov    rbp,rax
  40cbcb:	mov    DWORD PTR [rax],0x0
  40cbd1:	lea    rsi,[rsp+0x8]
  40cbd6:	mov    rdi,rbx
  40cbd9:	mov    edx,0xa
  40cbde:	call   4034b0 <strtol@plt>
  40cbe3:	cmp    DWORD PTR [rbp+0x0],0x0
  40cbe7:	je     40cc24 <isspace@plt+0x9314>
  40cbe9:	lea    rsi,[rip+0x233f9]        # 42ffe9 <isspace@plt+0x2c6d9>
  40cbf0:	xor    ebx,ebx
  40cbf2:	mov    rdi,r14
  40cbf5:	xor    eax,eax
  40cbf7:	call   4299f0 <isspace@plt+0x260e0>
  40cbfc:	jmp    40cd85 <isspace@plt+0x9475>
  40cc01:	xor    ebx,ebx
  40cc03:	jmp    40cd85 <isspace@plt+0x9475>
  40cc08:	mov    rbx,0xffffffffffffffff
  40cc0f:	mov    r12d,0x1
  40cc15:	cmp    BYTE PTR [rbp+0x0],0x0
  40cc19:	jne    40cd3a <isspace@plt+0x942a>
  40cc1f:	jmp    40ccdd <isspace@plt+0x93cd>
  40cc24:	mov    r12,rax
  40cc27:	test   rax,rax
  40cc2a:	js     40cbe9 <isspace@plt+0x92d9>
  40cc2c:	mov    rbp,QWORD PTR [rsp+0x8]
  40cc31:	cmp    rbp,QWORD PTR [r13+0x8]
  40cc35:	je     40cbe9 <isspace@plt+0x92d9>
  40cc37:	mov    bl,BYTE PTR [rbp+0x0]
  40cc3a:	test   bl,bl
  40cc3c:	je     40cc76 <isspace@plt+0x9366>
  40cc3e:	call   4038f0 <__ctype_b_loc@plt>
  40cc43:	mov    rax,QWORD PTR [rax]
  40cc46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cc50:	movzx  ecx,bl
  40cc53:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40cc58:	je     40cc7f <isspace@plt+0x936f>
  40cc5a:	movzx  ebx,BYTE PTR [rbp+0x1]
  40cc5e:	inc    rbp
  40cc61:	test   bl,bl
  40cc63:	jne    40cc50 <isspace@plt+0x9340>
  40cc65:	mov    QWORD PTR [rsp+0x8],rbp
  40cc6a:	lea    rsi,[rip+0x23497]        # 430108 <isspace@plt+0x2c7f8>
  40cc71:	jmp    40cbf0 <isspace@plt+0x92e0>
  40cc76:	mov    rbx,0xffffffffffffffff
  40cc7d:	jmp    40ccdd <isspace@plt+0x93cd>
  40cc7f:	mov    QWORD PTR [rsp+0x8],rbp
  40cc84:	movsx  eax,bl
  40cc87:	add    eax,0xffffff9c
  40cc8a:	cmp    eax,0xf
  40cc8d:	ja     40cc6a <isspace@plt+0x935a>
  40cc8f:	lea    rcx,[rip+0x22352]        # 42efe8 <isspace@plt+0x2b6d8>
  40cc96:	movsxd rax,DWORD PTR [rcx+rax*4]
  40cc9a:	add    rax,rcx
  40cc9d:	jmp    rax
  40cc9f:	shl    r12,0x3
  40cca3:	lea    r12,[r12+r12*2]
  40cca7:	imul   r12,r12,0x3c
  40ccab:	imul   r12,r12,0x3c
  40ccaf:	mov    rax,QWORD PTR [r13+0x0]
  40ccb3:	mov    rcx,r12
  40ccb6:	neg    rcx
  40ccb9:	cmp    BYTE PTR [rax],0x65
  40ccbc:	cmove  r12,rcx
  40ccc0:	mov    rdi,r15
  40ccc3:	call   40fad0 <isspace@plt+0xc1c0>
  40ccc8:	lea    rsi,[rax+r12*1]
  40cccc:	mov    rdi,r15
  40cccf:	call   40f9f0 <isspace@plt+0xc0e0>
  40ccd4:	mov    rbx,rax
  40ccd7:	cmp    BYTE PTR [rbp+0x0],0x0
  40ccdb:	jne    40cd3a <isspace@plt+0x942a>
  40ccdd:	mov    rdi,r14
  40cce0:	mov    esi,r12d
  40cce3:	call   4246e0 <isspace@plt+0x20dd0>
  40cce8:	mov    QWORD PTR [rsp+0x10],rax
  40cced:	mov    QWORD PTR [rsp+0x18],rdx
  40ccf2:	lea    rdi,[rsp+0x10]
  40ccf7:	call   424710 <isspace@plt+0x20e00>
  40ccfc:	test   al,al
  40ccfe:	je     40cd3a <isspace@plt+0x942a>
  40cd00:	lea    r12,[rsp+0x10]
  40cd05:	jmp    40cd27 <isspace@plt+0x9417>
  40cd07:	nop    WORD PTR [rax+rax*1+0x0]
  40cd10:	mov    rdi,r15
  40cd13:	call   40f9b0 <isspace@plt+0xc0a0>
  40cd18:	mov    rbx,rax
  40cd1b:	mov    rdi,r12
  40cd1e:	call   424710 <isspace@plt+0x20e00>
  40cd23:	test   al,al
  40cd25:	je     40cd3a <isspace@plt+0x942a>
  40cd27:	mov    rax,QWORD PTR [r13+0x0]
  40cd2b:	cmp    BYTE PTR [rax],0x65
  40cd2e:	jne    40cd10 <isspace@plt+0x9400>
  40cd30:	mov    rdi,r15
  40cd33:	call   40f830 <isspace@plt+0xbf20>
  40cd38:	jmp    40cd18 <isspace@plt+0x9408>
  40cd3a:	mov    rdi,r15
  40cd3d:	call   40fad0 <isspace@plt+0xc1c0>
  40cd42:	mov    QWORD PTR [rsp],rax
  40cd46:	mov    rdi,rsp
  40cd49:	call   403100 <localtime@plt>
  40cd4e:	lea    rdx,[rip+0x233dc]        # 430131 <isspace@plt+0x2c821>
  40cd55:	lea    rbp,[rsp+0x10]
  40cd5a:	mov    esi,0x20
  40cd5f:	mov    rdi,rbp
  40cd62:	mov    rcx,rax
  40cd65:	call   403740 <strftime@plt>
  40cd6a:	lea    rsi,[rip+0x22cf9]        # 42fa6a <isspace@plt+0x2c15a>
  40cd71:	mov    rdi,r14
  40cd74:	mov    rdx,rbp
  40cd77:	xor    eax,eax
  40cd79:	call   4299f0 <isspace@plt+0x260e0>
  40cd7e:	cmp    rbx,0xffffffffffffffff
  40cd82:	setne  bl
  40cd85:	mov    rax,QWORD PTR fs:0x28
  40cd8e:	cmp    rax,QWORD PTR [rsp+0x30]
  40cd93:	jne    40cda6 <isspace@plt+0x9496>
  40cd95:	mov    eax,ebx
  40cd97:	add    rsp,0x38
  40cd9b:	pop    rbx
  40cd9c:	pop    r12
  40cd9e:	pop    r13
  40cda0:	pop    r14
  40cda2:	pop    r15
  40cda4:	pop    rbp
  40cda5:	ret    
  40cda6:	call   403280 <__stack_chk_fail@plt>
  40cdab:	nop    DWORD PTR [rax+rax*1+0x0]
  40cdb0:	push   rbp
  40cdb1:	push   r15
  40cdb3:	push   r14
  40cdb5:	push   rbx
  40cdb6:	push   rax
  40cdb7:	mov    rax,QWORD PTR fs:0x28
  40cdc0:	mov    QWORD PTR [rsp],rax
  40cdc4:	mov    r14b,0x1
  40cdc7:	cmp    DWORD PTR [rdi+0x58],0x0
  40cdcb:	js     40ce1c <isspace@plt+0x950c>
  40cdcd:	cmp    DWORD PTR [rdi+0x5c],0x0
  40cdd1:	js     40ce1c <isspace@plt+0x950c>
  40cdd3:	mov    rbx,QWORD PTR [rdi+0x70]
  40cdd7:	test   rbx,rbx
  40cdda:	je     40ce19 <isspace@plt+0x9509>
  40cddc:	lea    rbp,[rip+0xffffffffffffd5cd]        # 40a3b0 <isspace@plt+0x6aa0>
  40cde3:	lea    r15,[rip+0x4d6]        # 40d2c0 <isspace@plt+0x99b0>
  40cdea:	jmp    40cdf9 <isspace@plt+0x94e9>
  40cdec:	nop    DWORD PTR [rax+0x0]
  40cdf0:	mov    rbx,QWORD PTR [rbx+0x78]
  40cdf4:	test   rbx,rbx
  40cdf7:	je     40ce19 <isspace@plt+0x9509>
  40cdf9:	mov    rax,QWORD PTR [rbx+0x50]
  40cdfd:	mov    rax,QWORD PTR [rax+0x20]
  40ce01:	cmp    rax,rbp
  40ce04:	je     40cdf0 <isspace@plt+0x94e0>
  40ce06:	cmp    rax,r15
  40ce09:	je     40cdf0 <isspace@plt+0x94e0>
  40ce0b:	mov    rdi,rbx
  40ce0e:	call   40cdb0 <isspace@plt+0x94a0>
  40ce13:	test   al,al
  40ce15:	je     40cdf0 <isspace@plt+0x94e0>
  40ce17:	jmp    40ce1c <isspace@plt+0x950c>
  40ce19:	xor    r14d,r14d
  40ce1c:	mov    rax,QWORD PTR fs:0x28
  40ce25:	cmp    rax,QWORD PTR [rsp]
  40ce29:	jne    40ce39 <isspace@plt+0x9529>
  40ce2b:	mov    eax,r14d
  40ce2e:	add    rsp,0x8
  40ce32:	pop    rbx
  40ce33:	pop    r14
  40ce35:	pop    r15
  40ce37:	pop    rbp
  40ce38:	ret    
  40ce39:	call   403280 <__stack_chk_fail@plt>
  40ce3e:	xchg   ax,ax
  40ce40:	push   rbp
  40ce41:	push   r15
  40ce43:	push   r14
  40ce45:	push   r13
  40ce47:	push   r12
  40ce49:	push   rbx
  40ce4a:	sub    rsp,0x128
  40ce51:	mov    QWORD PTR [rsp+0x48],r8
  40ce56:	mov    QWORD PTR [rsp+0x60],rcx
  40ce5b:	mov    rbx,rdi
  40ce5e:	mov    rax,QWORD PTR fs:0x28
  40ce67:	mov    QWORD PTR [rsp+0x120],rax
  40ce6f:	mov    QWORD PTR [rsp+0x30],rsi
  40ce74:	mov    rax,QWORD PTR [rsi+0x10]
  40ce78:	mov    r14,QWORD PTR [rax]
  40ce7b:	mov    QWORD PTR [rsp+0x28],rdx
  40ce80:	mov    rdi,QWORD PTR [rdx+0x48]
  40ce84:	mov    r12,QWORD PTR [r9]
  40ce87:	mov    QWORD PTR [rsp+0x40],r9
  40ce8c:	mov    rbp,QWORD PTR [r9+0x8]
  40ce90:	test   rdi,rdi
  40ce93:	mov    QWORD PTR [rsp+0x20],rbx
  40ce98:	je     40d0f9 <isspace@plt+0x97e9>
  40ce9e:	call   42ae30 <isspace@plt+0x27520>
  40cea3:	inc    rax
  40cea6:	cmp    rax,0xa
  40ceaa:	mov    r15d,0xa
  40ceb0:	cmovb  r15,rax
  40ceb4:	cmp    rbp,r12
  40ceb7:	jbe    40d1a6 <isspace@plt+0x9896>
  40cebd:	lea    rax,[rbx+0x90]
  40cec4:	mov    QWORD PTR [rsp+0x50],rax
  40cec9:	mov    r13,0xffffffffffffffff
  40ced0:	xor    eax,eax
  40ced2:	mov    QWORD PTR [rsp+0x18],rax
  40ced7:	mov    BYTE PTR [rsp+0x13],0x1
  40cedc:	mov    QWORD PTR [rsp+0x58],rbp
  40cee1:	jmp    40cf0b <isspace@plt+0x95fb>
  40cee3:	inc    r12
  40cee6:	mov    DWORD PTR [rsp+0x14],0x0
  40ceee:	cmp    rbp,r12
  40cef1:	ja     40cf0b <isspace@plt+0x95fb>
  40cef3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cefd:	nop    DWORD PTR [rax]
  40cf00:	cmp    BYTE PTR [rsp+0x14],0x0
  40cf05:	je     40d1b2 <isspace@plt+0x98a2>
  40cf0b:	mov    rax,QWORD PTR [rsp+0x40]
  40cf10:	cmp    r12,QWORD PTR [rax]
  40cf13:	jbe    40cf40 <isspace@plt+0x9630>
  40cf15:	lea    rsi,[r12-0x1]
  40cf1a:	mov    rdi,r14
  40cf1d:	lea    rdx,[rsp+0x7f]
  40cf22:	call   411060 <isspace@plt+0xd750>
  40cf27:	test   al,al
  40cf29:	je     40cf40 <isspace@plt+0x9630>
  40cf2b:	cmp    BYTE PTR [rsp+0x7f],0xa
  40cf30:	setne  al
  40cf33:	jmp    40cf42 <isspace@plt+0x9632>
  40cf35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cf3f:	nop
  40cf40:	xor    eax,eax
  40cf42:	movzx  eax,al
  40cf45:	mov    rdx,rbp
  40cf48:	sub    rdx,r12
  40cf4b:	mov    rcx,QWORD PTR [rsp+0x28]
  40cf50:	mov    rcx,QWORD PTR [rcx+0x48]
  40cf54:	mov    DWORD PTR [rsp],eax
  40cf57:	mov    rdi,r14
  40cf5a:	mov    rsi,r12
  40cf5d:	mov    r8,r15
  40cf60:	lea    r9,[rsp+0x80]
  40cf68:	call   42aef0 <isspace@plt+0x275e0>
  40cf6d:	mov    ebx,eax
  40cf6f:	call   417080 <isspace@plt+0x13770>
  40cf74:	mov    QWORD PTR [rsp+0x68],rax
  40cf79:	mov    QWORD PTR [rsp+0x70],rdx
  40cf7e:	mov    rax,QWORD PTR [rsp+0x60]
  40cf83:	mov    rax,QWORD PTR [rax]
  40cf86:	mov    cl,BYTE PTR [rax]
  40cf88:	test   ebx,ebx
  40cf8a:	je     40cfc0 <isspace@plt+0x96b0>
  40cf8c:	cmp    cl,0x79
  40cf8f:	jne    40cfa6 <isspace@plt+0x9696>
  40cf91:	mov    rdi,r12
  40cf94:	mov    rsi,rbp
  40cf97:	call   417250 <isspace@plt+0x13940>
  40cf9c:	mov    QWORD PTR [rsp+0x68],rax
  40cfa1:	mov    QWORD PTR [rsp+0x70],rdx
  40cfa6:	mov    DWORD PTR [rsp+0x14],0x0
  40cfae:	mov    r12,rbp
  40cfb1:	jmp    40d03d <isspace@plt+0x972d>
  40cfb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cfc0:	mov    rax,QWORD PTR [rsp+0x80]
  40cfc8:	cmp    cl,0x78
  40cfcb:	jne    40cfda <isspace@plt+0x96ca>
  40cfcd:	mov    rsi,QWORD PTR [rsp+0x88]
  40cfd5:	mov    rdi,rax
  40cfd8:	jmp    40cfe0 <isspace@plt+0x96d0>
  40cfda:	mov    rdi,r12
  40cfdd:	mov    rsi,rax
  40cfe0:	call   417250 <isspace@plt+0x13940>
  40cfe5:	mov    QWORD PTR [rsp+0x68],rax
  40cfea:	mov    QWORD PTR [rsp+0x70],rdx
  40cfef:	mov    rax,QWORD PTR [rsp+0x80]
  40cff7:	mov    rdx,QWORD PTR [rsp+0x88]
  40cfff:	mov    rcx,rdx
  40d002:	cmp    rax,rdx
  40d005:	jne    40d030 <isspace@plt+0x9720>
  40d007:	cmp    r13,rax
  40d00a:	je     40cee3 <isspace@plt+0x95d3>
  40d010:	cmp    rbp,rax
  40d013:	jne    40d030 <isspace@plt+0x9720>
  40d015:	mov    rax,QWORD PTR [rsp+0x40]
  40d01a:	cmp    r12,QWORD PTR [rax]
  40d01d:	ja     40d1b2 <isspace@plt+0x98a2>
  40d023:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d02d:	nop    DWORD PTR [rax]
  40d030:	mov    r12,rcx
  40d033:	cmp    rcx,rbp
  40d036:	sete   al
  40d039:	mov    DWORD PTR [rsp+0x14],eax
  40d03d:	lea    rdi,[rsp+0x68]
  40d042:	call   416fc0 <isspace@plt+0x136b0>
  40d047:	test   al,al
  40d049:	je     40d0eb <isspace@plt+0x97db>
  40d04f:	mov    QWORD PTR [rsp+0x38],r12
  40d054:	test   r15,r15
  40d057:	mov    r13,QWORD PTR [rsp+0x20]
  40d05c:	je     40d0a1 <isspace@plt+0x9791>
  40d05e:	test   ebx,ebx
  40d060:	jne    40d0a1 <isspace@plt+0x9791>
  40d062:	mov    r12,QWORD PTR [rsp+0x50]
  40d067:	lea    rbx,[rsp+0x80]
  40d06f:	xor    ebp,ebp
  40d071:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d07b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d080:	mov    rdi,r13
  40d083:	mov    rsi,r12
  40d086:	mov    rdx,r14
  40d089:	mov    rcx,rbx
  40d08c:	call   42a770 <isspace@plt+0x26e60>
  40d091:	inc    rbp
  40d094:	add    rbx,0x10
  40d098:	add    r12,0x28
  40d09c:	cmp    rbp,r15
  40d09f:	jb     40d080 <isspace@plt+0x9770>
  40d0a1:	cmp    BYTE PTR [rsp+0x160],0x0
  40d0a9:	mov    rbp,QWORD PTR [rsp+0x58]
  40d0ae:	je     40d0c0 <isspace@plt+0x97b0>
  40d0b0:	mov    rax,QWORD PTR [rsp+0x18]
  40d0b5:	inc    eax
  40d0b7:	mov    QWORD PTR [rsp+0x18],rax
  40d0bc:	jmp    40d0e3 <isspace@plt+0x97d3>
  40d0be:	xchg   ax,ax
  40d0c0:	mov    rax,QWORD PTR [rsp+0x28]
  40d0c5:	mov    rdx,QWORD PTR [rax+0x70]
  40d0c9:	mov    rdi,QWORD PTR [rsp+0x20]
  40d0ce:	mov    rsi,QWORD PTR [rsp+0x30]
  40d0d3:	xor    ecx,ecx
  40d0d5:	lea    r8,[rsp+0x68]
  40d0da:	call   4096c0 <isspace@plt+0x5db0>
  40d0df:	and    BYTE PTR [rsp+0x13],al
  40d0e3:	mov    r12,QWORD PTR [rsp+0x38]
  40d0e8:	mov    r13,r12
  40d0eb:	cmp    rbp,r12
  40d0ee:	jbe    40cf00 <isspace@plt+0x95f0>
  40d0f4:	jmp    40cf0b <isspace@plt+0x95fb>
  40d0f9:	cmp    r12,rbp
  40d0fc:	jae    40d1a6 <isspace@plt+0x9896>
  40d102:	xor    eax,eax
  40d104:	mov    QWORD PTR [rsp+0x18],rax
  40d109:	mov    BYTE PTR [rsp+0x13],0x1
  40d10e:	lea    r13,[rsp+0x80]
  40d116:	jmp    40d149 <isspace@plt+0x9839>
  40d118:	nop    DWORD PTR [rax+rax*1+0x0]
  40d120:	mov    rax,QWORD PTR [rsp+0x28]
  40d125:	mov    rdx,QWORD PTR [rax+0x70]
  40d129:	mov    rdi,QWORD PTR [rsp+0x20]
  40d12e:	mov    rsi,QWORD PTR [rsp+0x30]
  40d133:	xor    ecx,ecx
  40d135:	mov    r8,r13
  40d138:	call   4096c0 <isspace@plt+0x5db0>
  40d13d:	and    BYTE PTR [rsp+0x13],al
  40d141:	mov    r12,rbx
  40d144:	cmp    rbp,r15
  40d147:	jbe    40d1b2 <isspace@plt+0x98a2>
  40d149:	mov    rdi,r14
  40d14c:	mov    rsi,r12
  40d14f:	call   4134d0 <isspace@plt+0xfbc0>
  40d154:	mov    r15,rax
  40d157:	mov    rbx,rbp
  40d15a:	cmp    rax,rbp
  40d15d:	ja     40d162 <isspace@plt+0x9852>
  40d15f:	mov    rbx,r15
  40d162:	mov    rdi,r12
  40d165:	mov    rsi,rbx
  40d168:	call   417250 <isspace@plt+0x13940>
  40d16d:	mov    QWORD PTR [rsp+0x80],rax
  40d175:	mov    QWORD PTR [rsp+0x88],rdx
  40d17d:	cmp    r12,rbx
  40d180:	je     40d1b2 <isspace@plt+0x98a2>
  40d182:	mov    rdi,r13
  40d185:	call   416fc0 <isspace@plt+0x136b0>
  40d18a:	test   al,al
  40d18c:	je     40d1b2 <isspace@plt+0x98a2>
  40d18e:	cmp    BYTE PTR [rsp+0x160],0x0
  40d196:	je     40d120 <isspace@plt+0x9810>
  40d198:	mov    rax,QWORD PTR [rsp+0x18]
  40d19d:	inc    eax
  40d19f:	mov    QWORD PTR [rsp+0x18],rax
  40d1a4:	jmp    40d141 <isspace@plt+0x9831>
  40d1a6:	mov    BYTE PTR [rsp+0x13],0x1
  40d1ab:	xor    eax,eax
  40d1ad:	mov    QWORD PTR [rsp+0x18],rax
  40d1b2:	cmp    BYTE PTR [rsp+0x160],0x0
  40d1ba:	jne    40d1c6 <isspace@plt+0x98b6>
  40d1bc:	mov    rdi,QWORD PTR [rsp+0x48]
  40d1c1:	call   41eeb0 <isspace@plt+0x1b5a0>
  40d1c6:	mov    al,BYTE PTR [rsp+0x13]
  40d1ca:	and    al,0x1
  40d1cc:	movzx  eax,al
  40d1cf:	cmp    BYTE PTR [rsp+0x160],0x0
  40d1d7:	cmovne eax,DWORD PTR [rsp+0x18]
  40d1dc:	mov    rcx,QWORD PTR fs:0x28
  40d1e5:	cmp    rcx,QWORD PTR [rsp+0x120]
  40d1ed:	jne    40d201 <isspace@plt+0x98f1>
  40d1ef:	add    rsp,0x128
  40d1f6:	pop    rbx
  40d1f7:	pop    r12
  40d1f9:	pop    r13
  40d1fb:	pop    r14
  40d1fd:	pop    r15
  40d1ff:	pop    rbp
  40d200:	ret    
  40d201:	call   403280 <__stack_chk_fail@plt>
  40d206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d210:	push   rbp
  40d211:	push   r15
  40d213:	push   r14
  40d215:	push   rbx
  40d216:	push   rax
  40d217:	mov    r14d,esi
  40d21a:	mov    rax,QWORD PTR fs:0x28
  40d223:	mov    QWORD PTR [rsp],rax
  40d227:	mov    DWORD PTR [rdi+0x64],0x0
  40d22e:	mov    eax,DWORD PTR [rdi+0x58]
  40d231:	test   eax,eax
  40d233:	jns    40d23b <isspace@plt+0x992b>
  40d235:	add    eax,r14d
  40d238:	mov    DWORD PTR [rdi+0x58],eax
  40d23b:	mov    eax,DWORD PTR [rdi+0x5c]
  40d23e:	test   eax,eax
  40d240:	jns    40d248 <isspace@plt+0x9938>
  40d242:	add    eax,r14d
  40d245:	mov    DWORD PTR [rdi+0x5c],eax
  40d248:	mov    rbx,QWORD PTR [rdi+0x70]
  40d24c:	test   rbx,rbx
  40d24f:	je     40d298 <isspace@plt+0x9988>
  40d251:	lea    rbp,[rip+0xffffffffffffd158]        # 40a3b0 <isspace@plt+0x6aa0>
  40d258:	lea    r15,[rip+0x61]        # 40d2c0 <isspace@plt+0x99b0>
  40d25f:	jmp    40d279 <isspace@plt+0x9969>
  40d261:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d26b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d270:	mov    rbx,QWORD PTR [rbx+0x78]
  40d274:	test   rbx,rbx
  40d277:	je     40d298 <isspace@plt+0x9988>
  40d279:	mov    rax,QWORD PTR [rbx+0x50]
  40d27d:	mov    rax,QWORD PTR [rax+0x20]
  40d281:	cmp    rax,rbp
  40d284:	je     40d270 <isspace@plt+0x9960>
  40d286:	cmp    rax,r15
  40d289:	je     40d270 <isspace@plt+0x9960>
  40d28b:	mov    rdi,rbx
  40d28e:	mov    esi,r14d
  40d291:	call   40d210 <isspace@plt+0x9900>
  40d296:	jmp    40d270 <isspace@plt+0x9960>
  40d298:	mov    rax,QWORD PTR fs:0x28
  40d2a1:	cmp    rax,QWORD PTR [rsp]
  40d2a5:	jne    40d2b2 <isspace@plt+0x99a2>
  40d2a7:	add    rsp,0x8
  40d2ab:	pop    rbx
  40d2ac:	pop    r14
  40d2ae:	pop    r15
  40d2b0:	pop    rbp
  40d2b1:	ret    
  40d2b2:	call   403280 <__stack_chk_fail@plt>
  40d2b7:	nop    WORD PTR [rax+rax*1+0x0]
  40d2c0:	push   rbp
  40d2c1:	push   r15
  40d2c3:	push   r14
  40d2c5:	push   r13
  40d2c7:	push   r12
  40d2c9:	push   rbx
  40d2ca:	sub    rsp,0x48
  40d2ce:	mov    rbx,rdx
  40d2d1:	mov    rbp,rsi
  40d2d4:	mov    r12,rdi
  40d2d7:	mov    rax,QWORD PTR fs:0x28
  40d2e0:	mov    QWORD PTR [rsp+0x40],rax
  40d2e5:	call   417080 <isspace@plt+0x13770>
  40d2ea:	mov    QWORD PTR [rsp+0x30],rax
  40d2ef:	mov    QWORD PTR [rsp+0x38],rdx
  40d2f4:	test   rbp,rbp
  40d2f7:	je     40d532 <isspace@plt+0x9c22>
  40d2fd:	mov    rax,QWORD PTR [rbp+0x10]
  40d301:	mov    r15,QWORD PTR [rbp+0x18]
  40d305:	mov    rax,QWORD PTR [rax]
  40d308:	mov    QWORD PTR [rsp+0x8],rax
  40d30d:	mov    rdi,r15
  40d310:	call   41ea70 <isspace@plt+0x1b160>
  40d315:	mov    DWORD PTR [rsp+0x14],eax
  40d319:	mov    rdi,r15
  40d31c:	call   41efe0 <isspace@plt+0x1b6d0>
  40d321:	mov    QWORD PTR [rsp+0x18],rax
  40d326:	mov    rax,QWORD PTR [r12+0x9a0]
  40d32e:	cmp    BYTE PTR [rax+0x58],0x0
  40d332:	je     40d34b <isspace@plt+0x9a3b>
  40d334:	mov    r14,QWORD PTR [rbx+0x70]
  40d338:	mov    rdi,r15
  40d33b:	call   41ea70 <isspace@plt+0x1b160>
  40d340:	lea    esi,[rax+0x1]
  40d343:	mov    rdi,r14
  40d346:	call   40d210 <isspace@plt+0x9900>
  40d34b:	mov    QWORD PTR [rsp+0x20],r15
  40d350:	mov    rdi,r15
  40d353:	call   41efa0 <isspace@plt+0x1b690>
  40d358:	mov    r14,rax
  40d35b:	mov    r13b,0x1
  40d35e:	test   r14,r14
  40d361:	jne    40d3aa <isspace@plt+0x9a9a>
  40d363:	jmp    40d4f8 <isspace@plt+0x9be8>
  40d368:	nop    DWORD PTR [rax+rax*1+0x0]
  40d370:	mov    rdx,QWORD PTR [rbx+0x70]
  40d374:	mov    rdi,r12
  40d377:	mov    rsi,rbp
  40d37a:	mov    rcx,r14
  40d37d:	lea    r8,[rsp+0x30]
  40d382:	call   4096c0 <isspace@plt+0x5db0>
  40d387:	and    r13b,al
  40d38a:	mov    rax,QWORD PTR [rbx+0x70]
  40d38e:	mov    rax,QWORD PTR [rax+0x50]
  40d392:	test   BYTE PTR [rax+0x11],0x40
  40d396:	mov    r14,QWORD PTR [rsp+0x28]
  40d39b:	jne    40d4f8 <isspace@plt+0x9be8>
  40d3a1:	test   r14,r14
  40d3a4:	je     40d4f8 <isspace@plt+0x9be8>
  40d3aa:	test   r13b,r13b
  40d3ad:	je     40d4f8 <isspace@plt+0x9be8>
  40d3b3:	mov    rdi,r14
  40d3b6:	call   41f080 <isspace@plt+0x1b770>
  40d3bb:	mov    QWORD PTR [rsp+0x28],rax
  40d3c0:	mov    rdi,r14
  40d3c3:	call   41af10 <isspace@plt+0x17600>
  40d3c8:	mov    rcx,r12
  40d3cb:	mov    r12,rax
  40d3ce:	mov    r15,rcx
  40d3d1:	mov    rax,QWORD PTR [rcx+0x9a0]
  40d3d8:	cmp    BYTE PTR [rax+0x58],0x0
  40d3dc:	je     40d3f0 <isspace@plt+0x9ae0>
  40d3de:	mov    rdi,r14
  40d3e1:	call   41f7a0 <isspace@plt+0x1be90>
  40d3e6:	jmp    40d48b <isspace@plt+0x9b7b>
  40d3eb:	nop    DWORD PTR [rax+rax*1+0x0]
  40d3f0:	mov    rcx,QWORD PTR [rbx+0x70]
  40d3f4:	mov    rax,QWORD PTR [rcx+0x40]
  40d3f8:	test   rax,rax
  40d3fb:	je     40d447 <isspace@plt+0x9b37>
  40d3fd:	cmp    DWORD PTR [rsp+0x14],0x1
  40d402:	jg     40d480 <isspace@plt+0x9b70>
  40d404:	mov    rcx,QWORD PTR [rcx+0x50]
  40d408:	lea    rdx,[rip+0xffffffffffffceb1]        # 40a2c0 <isspace@plt+0x69b0>
  40d40f:	cmp    QWORD PTR [rcx+0x20],rdx
  40d413:	jne    40d480 <isspace@plt+0x9b70>
  40d415:	movzx  ecx,BYTE PTR [rax]
  40d418:	movsx  edx,cl
  40d41b:	cmp    edx,0x2b
  40d41e:	je     40d42a <isspace@plt+0x9b1a>
  40d420:	cmp    edx,0x6c
  40d423:	je     40d436 <isspace@plt+0x9b26>
  40d425:	cmp    edx,0x2d
  40d428:	jne    40d480 <isspace@plt+0x9b70>
  40d42a:	mov    rax,QWORD PTR [rax+0x20]
  40d42e:	test   rax,rax
  40d431:	je     40d480 <isspace@plt+0x9b70>
  40d433:	movzx  ecx,BYTE PTR [rax]
  40d436:	cmp    cl,0x6c
  40d439:	jne    40d480 <isspace@plt+0x9b70>
  40d43b:	cmp    QWORD PTR [rax+0x20],0x0
  40d440:	jne    40d480 <isspace@plt+0x9b70>
  40d442:	mov    BYTE PTR [rax],0x67
  40d445:	jmp    40d480 <isspace@plt+0x9b70>
  40d447:	mov    rax,QWORD PTR [rcx+0x50]
  40d44b:	mov    eax,DWORD PTR [rax+0x10]
  40d44e:	test   al,0x40
  40d450:	jne    40d480 <isspace@plt+0x9b70>
  40d452:	test   al,al
  40d454:	js     40d4c2 <isspace@plt+0x9bb2>
  40d456:	test   eax,0x100
  40d45b:	jne    40d4d1 <isspace@plt+0x9bc1>
  40d45d:	test   eax,0x200
  40d462:	jne    40d472 <isspace@plt+0x9b62>
  40d464:	cmp    DWORD PTR [rsp+0x14],0x1
  40d469:	jg     40d4e6 <isspace@plt+0x9bd6>
  40d46b:	and    eax,0x400
  40d470:	je     40d4e6 <isspace@plt+0x9bd6>
  40d472:	mov    rdi,QWORD PTR [rsp+0x8]
  40d477:	call   410890 <isspace@plt+0xcf80>
  40d47c:	xor    edi,edi
  40d47e:	jmp    40d4e1 <isspace@plt+0x9bd1>
  40d480:	mov    rdi,r12
  40d483:	mov    rsi,r12
  40d486:	call   417250 <isspace@plt+0x13940>
  40d48b:	mov    QWORD PTR [rsp+0x30],rax
  40d490:	mov    QWORD PTR [rsp+0x38],rdx
  40d495:	lea    rdi,[rsp+0x30]
  40d49a:	call   416fc0 <isspace@plt+0x136b0>
  40d49f:	test   al,al
  40d4a1:	mov    r12,r15
  40d4a4:	jne    40d370 <isspace@plt+0x9a60>
  40d4aa:	xor    edi,edi
  40d4ac:	xor    esi,esi
  40d4ae:	call   417250 <isspace@plt+0x13940>
  40d4b3:	mov    QWORD PTR [rsp+0x30],rax
  40d4b8:	mov    QWORD PTR [rsp+0x38],rdx
  40d4bd:	jmp    40d370 <isspace@plt+0x9a60>
  40d4c2:	mov    rdi,QWORD PTR [rsp+0x8]
  40d4c7:	mov    rsi,r12
  40d4ca:	call   4162d0 <isspace@plt+0x129c0>
  40d4cf:	jmp    40d48b <isspace@plt+0x9b7b>
  40d4d1:	mov    rdi,QWORD PTR [rsp+0x8]
  40d4d6:	mov    rsi,r12
  40d4d9:	call   4134d0 <isspace@plt+0xfbc0>
  40d4de:	mov    rdi,rax
  40d4e1:	mov    rsi,rax
  40d4e4:	jmp    40d486 <isspace@plt+0x9b76>
  40d4e6:	mov    rdi,QWORD PTR [rsp+0x8]
  40d4eb:	mov    rsi,r12
  40d4ee:	call   412d10 <isspace@plt+0xf400>
  40d4f3:	mov    rdi,r12
  40d4f6:	jmp    40d4e1 <isspace@plt+0x9bd1>
  40d4f8:	mov    rax,QWORD PTR [r12+0x30]
  40d4fd:	test   rax,rax
  40d500:	mov    rbp,QWORD PTR [rsp+0x20]
  40d505:	je     40d52c <isspace@plt+0x9c1c>
  40d507:	cmp    QWORD PTR [rax+0x18],rbp
  40d50b:	jne    40d52c <isspace@plt+0x9c1c>
  40d50d:	mov    rdi,rbp
  40d510:	call   41efe0 <isspace@plt+0x1b6d0>
  40d515:	cmp    QWORD PTR [rsp+0x18],rax
  40d51a:	je     40d52c <isspace@plt+0x9c1c>
  40d51c:	mov    rdi,rbp
  40d51f:	call   41efa0 <isspace@plt+0x1b690>
  40d524:	mov    rdi,rax
  40d527:	call   41ee50 <isspace@plt+0x1b540>
  40d52c:	and    r13b,0x1
  40d530:	jmp    40d54a <isspace@plt+0x9c3a>
  40d532:	mov    rdx,QWORD PTR [rbx+0x70]
  40d536:	lea    r8,[rsp+0x30]
  40d53b:	mov    rdi,r12
  40d53e:	xor    esi,esi
  40d540:	xor    ecx,ecx
  40d542:	call   4096c0 <isspace@plt+0x5db0>
  40d547:	mov    r13d,eax
  40d54a:	mov    rax,QWORD PTR fs:0x28
  40d553:	cmp    rax,QWORD PTR [rsp+0x40]
  40d558:	jne    40d56c <isspace@plt+0x9c5c>
  40d55a:	mov    eax,r13d
  40d55d:	add    rsp,0x48
  40d561:	pop    rbx
  40d562:	pop    r12
  40d564:	pop    r13
  40d566:	pop    r14
  40d568:	pop    r15
  40d56a:	pop    rbp
  40d56b:	ret    
  40d56c:	call   403280 <__stack_chk_fail@plt>
  40d571:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d57b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d580:	push   rbx
  40d581:	sub    rsp,0x10
  40d585:	mov    rbx,rdx
  40d588:	mov    rax,QWORD PTR fs:0x28
  40d591:	mov    QWORD PTR [rsp+0x8],rax
  40d596:	call   404460 <isspace@plt+0xb50>
  40d59b:	mov    rax,QWORD PTR fs:0x28
  40d5a4:	cmp    rax,QWORD PTR [rsp+0x8]
  40d5a9:	jne    40d5b4 <isspace@plt+0x9ca4>
  40d5ab:	mov    rax,rbx
  40d5ae:	add    rsp,0x10
  40d5b2:	pop    rbx
  40d5b3:	ret    
  40d5b4:	call   403280 <__stack_chk_fail@plt>
  40d5b9:	nop    DWORD PTR [rax+0x0]
  40d5c0:	push   r15
  40d5c2:	push   r14
  40d5c4:	push   r13
  40d5c6:	push   r12
  40d5c8:	push   rbx
  40d5c9:	sub    rsp,0xf0
  40d5d0:	mov    rax,QWORD PTR fs:0x28
  40d5d9:	mov    QWORD PTR [rsp+0xe8],rax
  40d5e1:	mov    BYTE PTR [rip+0x34db8],0x0        # 4423a0 <isspace@plt+0x3ea90>
  40d5e8:	test   rsi,rsi
  40d5eb:	je     40d734 <isspace@plt+0x9e24>
  40d5f1:	mov    r13,rsi
  40d5f4:	mov    r14,rdi
  40d5f7:	lea    rdx,[rsp+0x58]
  40d5fc:	mov    edi,0x1
  40d601:	call   403560 <__xstat@plt>
  40d606:	test   eax,eax
  40d608:	jne    40d61a <isspace@plt+0x9d0a>
  40d60a:	mov    eax,0xf000
  40d60f:	and    eax,DWORD PTR [rsp+0x70]
  40d613:	cmp    eax,0x4000
  40d618:	je     40d65f <isspace@plt+0x9d4f>
  40d61a:	mov    DWORD PTR [rsp+0x33],0x7e247b
  40d622:	mov    DWORD PTR [rsp+0x30],0x7b5b3f2a
  40d62a:	lea    rbx,[rsp+0x31]
  40d62f:	mov    al,0x2a
  40d631:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d63b:	nop    DWORD PTR [rax+rax*1+0x0]
  40d640:	movsx  esi,al
  40d643:	mov    rdi,r13
  40d646:	call   4032f0 <strchr@plt>
  40d64b:	test   rax,rax
  40d64e:	jne    40d65f <isspace@plt+0x9d4f>
  40d650:	movzx  eax,BYTE PTR [rbx]
  40d653:	inc    rbx
  40d656:	test   al,al
  40d658:	jne    40d640 <isspace@plt+0x9d30>
  40d65a:	jmp    40d737 <isspace@plt+0x9e27>
  40d65f:	lea    r12,[rsp+0x58]
  40d664:	mov    rdi,r12
  40d667:	call   404230 <isspace@plt+0x920>
  40d66c:	lea    rdi,[rsp+0x30]
  40d671:	call   404230 <isspace@plt+0x920>
  40d676:	lea    r15,[rsp+0x18]
  40d67b:	mov    rdi,r15
  40d67e:	call   404230 <isspace@plt+0x920>
  40d683:	lea    rsi,[rip+0x22344]        # 42f9ce <isspace@plt+0x2c0be>
  40d68a:	mov    rdi,r12
  40d68d:	call   404660 <isspace@plt+0xd50>
  40d692:	test   al,al
  40d694:	je     40d734 <isspace@plt+0x9e24>
  40d69a:	lea    rdi,[rsp+0x58]
  40d69f:	mov    rsi,r13
  40d6a2:	call   404940 <isspace@plt+0x1030>
  40d6a7:	test   al,al
  40d6a9:	je     40d734 <isspace@plt+0x9e24>
  40d6af:	xor    edi,edi
  40d6b1:	xor    esi,esi
  40d6b3:	call   417250 <isspace@plt+0x13940>
  40d6b8:	mov    QWORD PTR [rsp+0x8],rax
  40d6bd:	mov    QWORD PTR [rsp+0x10],rdx
  40d6c2:	mov    rax,QWORD PTR [r14+0x30]
  40d6c6:	mov    rbx,QWORD PTR [rax+0x10]
  40d6ca:	lea    rdi,[rsp+0x58]
  40d6cf:	call   404da0 <isspace@plt+0x1490>
  40d6d4:	mov    QWORD PTR [rsp+0x48],rax
  40d6d9:	mov    QWORD PTR [rsp+0x50],0x0
  40d6e2:	lea    r9,[rip+0xfffffffffffffe97]        # 40d580 <isspace@plt+0x9c70>
  40d6e9:	lea    rdx,[rsp+0x8]
  40d6ee:	lea    rcx,[rsp+0x48]
  40d6f3:	lea    r8,[rsp+0x30]
  40d6f8:	mov    rdi,r14
  40d6fb:	mov    rsi,rbx
  40d6fe:	push   r9
  40d700:	push   r15
  40d702:	call   424c50 <isspace@plt+0x21340>
  40d707:	add    rsp,0x10
  40d70b:	cmp    eax,0x1
  40d70e:	je     40d780 <isspace@plt+0x9e70>
  40d710:	test   eax,eax
  40d712:	jne    40d762 <isspace@plt+0x9e52>
  40d714:	lea    rdi,[rsp+0x30]
  40d719:	call   404da0 <isspace@plt+0x1490>
  40d71e:	lea    rdi,[rip+0x34c7b]        # 4423a0 <isspace@plt+0x3ea90>
  40d725:	mov    edx,0xfff
  40d72a:	mov    rsi,rax
  40d72d:	call   403150 <strncpy@plt>
  40d732:	jmp    40d780 <isspace@plt+0x9e70>
  40d734:	xor    r13d,r13d
  40d737:	mov    rax,QWORD PTR fs:0x28
  40d740:	cmp    rax,QWORD PTR [rsp+0xe8]
  40d748:	jne    40d7ea <isspace@plt+0x9eda>
  40d74e:	mov    rax,r13
  40d751:	add    rsp,0xf0
  40d758:	pop    rbx
  40d759:	pop    r12
  40d75b:	pop    r13
  40d75d:	pop    r14
  40d75f:	pop    r15
  40d761:	ret    
  40d762:	lea    rdi,[rsp+0x18]
  40d767:	call   404da0 <isspace@plt+0x1490>
  40d76c:	lea    rsi,[rip+0x220bf]        # 42f832 <isspace@plt+0x2bf22>
  40d773:	mov    rdi,r14
  40d776:	mov    rdx,rax
  40d779:	xor    eax,eax
  40d77b:	call   4299f0 <isspace@plt+0x260e0>
  40d780:	lea    rdi,[rsp+0x58]
  40d785:	call   404540 <isspace@plt+0xc30>
  40d78a:	lea    rdi,[rsp+0x30]
  40d78f:	call   404540 <isspace@plt+0xc30>
  40d794:	lea    rdi,[rsp+0x18]
  40d799:	call   404540 <isspace@plt+0xc30>
  40d79e:	lea    r13,[rip+0x34bfb]        # 4423a0 <isspace@plt+0x3ea90>
  40d7a5:	mov    rdi,r13
  40d7a8:	call   403250 <strlen@plt>
  40d7ad:	lea    rbx,[rax+r13*1]
  40d7b1:	add    rbx,0xffffffffffffffff
  40d7b5:	cmp    rbx,r13
  40d7b8:	jb     40d7d8 <isspace@plt+0x9ec8>
  40d7ba:	call   4038f0 <__ctype_b_loc@plt>
  40d7bf:	nop
  40d7c0:	mov    rcx,QWORD PTR [rax]
  40d7c3:	movzx  edx,BYTE PTR [rbx]
  40d7c6:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
  40d7cb:	je     40d7d8 <isspace@plt+0x9ec8>
  40d7cd:	mov    BYTE PTR [rbx],0x0
  40d7d0:	dec    rbx
  40d7d3:	cmp    rbx,r13
  40d7d6:	jae    40d7c0 <isspace@plt+0x9eb0>
  40d7d8:	xor    eax,eax
  40d7da:	cmp    BYTE PTR [rip+0x34bbf],0x0        # 4423a0 <isspace@plt+0x3ea90>
  40d7e1:	cmove  r13,rax
  40d7e5:	jmp    40d737 <isspace@plt+0x9e27>
  40d7ea:	call   403280 <__stack_chk_fail@plt>
  40d7ef:	nop
  40d7f0:	push   rax
  40d7f1:	mov    rax,rdx
  40d7f4:	mov    rcx,rsi
  40d7f7:	mov    rdx,QWORD PTR fs:0x28
  40d800:	mov    QWORD PTR [rsp],rdx
  40d804:	cmp    BYTE PTR [rdi],0x20
  40d807:	lea    rdx,[rip+0x2255c]        # 42fd6a <isspace@plt+0x2c45a>
  40d80e:	cmovne rdx,rdi
  40d812:	lea    rsi,[rip+0x22276]        # 42fa8f <isspace@plt+0x2c17f>
  40d819:	mov    rdi,rax
  40d81c:	xor    eax,eax
  40d81e:	call   410ea0 <isspace@plt+0xd590>
  40d823:	mov    rcx,QWORD PTR fs:0x28
  40d82c:	cmp    rcx,QWORD PTR [rsp]
  40d830:	jne    40d834 <isspace@plt+0x9f24>
  40d832:	pop    rcx
  40d833:	ret    
  40d834:	call   403280 <__stack_chk_fail@plt>
  40d839:	nop    DWORD PTR [rax+0x0]
  40d840:	push   rbp
  40d841:	push   r15
  40d843:	push   r14
  40d845:	push   r13
  40d847:	push   r12
  40d849:	push   rbx
  40d84a:	sub    rsp,0x118
  40d851:	mov    QWORD PTR [rsp+0x8],rdx
  40d856:	mov    rax,QWORD PTR fs:0x28
  40d85f:	mov    QWORD PTR [rsp+0x110],rax
  40d867:	mov    rax,QWORD PTR [rsi+0x8]
  40d86b:	mov    QWORD PTR [rsp],rax
  40d86f:	mov    r9,QWORD PTR [rsi]
  40d872:	mov    r13d,DWORD PTR [rsi+0x10]
  40d876:	test   r13d,0x1000
  40d87d:	lea    rbp,[rip+0x2320f]        # 430a93 <isspace@plt+0x2d183>
  40d884:	lea    r10,[rip+0x224e3]        # 42fd6e <isspace@plt+0x2c45e>
  40d88b:	cmove  r10,rbp
  40d88f:	test   r13b,0x10
  40d893:	lea    r14,[rip+0x224e8]        # 42fd82 <isspace@plt+0x2c472>
  40d89a:	cmove  r14,rbp
  40d89e:	test   r13b,0x2
  40d8a2:	lea    r12,[rip+0x224c9]        # 42fd72 <isspace@plt+0x2c462>
  40d8a9:	cmove  r12,rbp
  40d8ad:	test   r13b,0x1
  40d8b1:	lea    r15,[rip+0x21cce]        # 42f586 <isspace@plt+0x2bc76>
  40d8b8:	cmove  r15,rbp
  40d8bc:	test   r13d,0x800
  40d8c3:	je     40d8f4 <isspace@plt+0x9fe4>
  40d8c5:	lea    rsi,[rip+0x2219f]        # 42fa6b <isspace@plt+0x2c15b>
  40d8cc:	mov    rdi,r9
  40d8cf:	mov    rbx,r10
  40d8d2:	mov    rbp,r9
  40d8d5:	call   403470 <strcmp@plt>
  40d8da:	mov    r9,rbp
  40d8dd:	mov    r10,rbx
  40d8e0:	test   eax,eax
  40d8e2:	lea    rax,[rip+0x22492]        # 42fd7b <isspace@plt+0x2c46b>
  40d8e9:	lea    rbp,[rip+0x22499]        # 42fd89 <isspace@plt+0x2c479>
  40d8f0:	cmove  rbp,rax
  40d8f4:	test   r13d,0x2000
  40d8fb:	lea    rbx,[rip+0x22496]        # 42fd98 <isspace@plt+0x2c488>
  40d902:	lea    rax,[rip+0x2318a]        # 430a93 <isspace@plt+0x2d183>
  40d909:	mov    r13,rax
  40d90c:	cmove  rbx,rax
  40d910:	lea    r8,[rip+0x235f9]        # 430f10 <isspace@plt+0x2d600>
  40d917:	lea    rdi,[rsp+0x10]
  40d91c:	mov    esi,0x100
  40d921:	mov    ecx,0x100
  40d926:	mov    edx,0x1
  40d92b:	mov    eax,0x0
  40d930:	push   rbx
  40d931:	push   rbp
  40d932:	push   r15
  40d934:	push   r12
  40d936:	push   r14
  40d938:	push   r10
  40d93a:	call   4030c0 <__snprintf_chk@plt>
  40d93f:	add    rsp,0x30
  40d943:	mov    rcx,QWORD PTR [rsp]
  40d947:	test   rcx,rcx
  40d94a:	cmove  rcx,r13
  40d94e:	lea    rsi,[rip+0x2244e]        # 42fda3 <isspace@plt+0x2c493>
  40d955:	mov    rdi,QWORD PTR [rsp+0x8]
  40d95a:	lea    rdx,[rsp+0x10]
  40d95f:	xor    eax,eax
  40d961:	call   410ea0 <isspace@plt+0xd590>
  40d966:	mov    rcx,QWORD PTR fs:0x28
  40d96f:	cmp    rcx,QWORD PTR [rsp+0x110]
  40d977:	jne    40d98b <isspace@plt+0xa07b>
  40d979:	add    rsp,0x118
  40d980:	pop    rbx
  40d981:	pop    r12
  40d983:	pop    r13
  40d985:	pop    r14
  40d987:	pop    r15
  40d989:	pop    rbp
  40d98a:	ret    
  40d98b:	call   403280 <__stack_chk_fail@plt>
  40d990:	push   rbp
  40d991:	push   r15
  40d993:	push   r14
  40d995:	push   r13
  40d997:	push   r12
  40d999:	push   rbx
  40d99a:	sub    rsp,0x108
  40d9a1:	mov    r14,rdx
  40d9a4:	mov    rbx,rsi
  40d9a7:	mov    rax,QWORD PTR fs:0x28
  40d9b0:	mov    QWORD PTR [rsp+0x100],rax
  40d9b8:	mov    r12,QWORD PTR [rsi]
  40d9bb:	mov    r15,QWORD PTR [rsi+0x20]
  40d9bf:	mov    rsi,r12
  40d9c2:	call   403470 <strcmp@plt>
  40d9c7:	mov    ecx,eax
  40d9c9:	mov    al,0x1
  40d9cb:	test   ecx,ecx
  40d9cd:	jne    40da5b <isspace@plt+0xa14b>
  40d9d3:	mov    r11,QWORD PTR [rbx+0x8]
  40d9d7:	test   r11,r11
  40d9da:	lea    r10,[rip+0x21355]        # 42ed36 <isspace@plt+0x2b426>
  40d9e1:	lea    r13,[rip+0x230ab]        # 430a93 <isspace@plt+0x2d183>
  40d9e8:	cmove  r10,r13
  40d9ec:	cmove  r11,r13
  40d9f0:	mov    eax,DWORD PTR [rbx+0x18]
  40d9f3:	test   al,0x1
  40d9f5:	lea    rbp,[rip+0x223b3]        # 42fdaf <isspace@plt+0x2c49f>
  40d9fc:	cmove  rbp,r13
  40da00:	test   al,0x4
  40da02:	lea    rbx,[rip+0x223ae]        # 42fdb7 <isspace@plt+0x2c4a7>
  40da09:	cmove  rbx,r13
  40da0d:	lea    r8,[rip+0x23500]        # 430f14 <isspace@plt+0x2d604>
  40da14:	mov    rdi,rsp
  40da17:	mov    esi,0x100
  40da1c:	mov    ecx,0x100
  40da21:	mov    edx,0x1
  40da26:	mov    r9,r12
  40da29:	mov    eax,0x0
  40da2e:	push   rbx
  40da2f:	push   rbp
  40da30:	push   r11
  40da32:	push   r10
  40da34:	call   4030c0 <__snprintf_chk@plt>
  40da39:	add    rsp,0x20
  40da3d:	test   r15,r15
  40da40:	cmove  r15,r13
  40da44:	lea    rsi,[rip+0x22358]        # 42fda3 <isspace@plt+0x2c493>
  40da4b:	mov    rdi,r14
  40da4e:	mov    rdx,rsp
  40da51:	mov    rcx,r15
  40da54:	xor    eax,eax
  40da56:	call   410ea0 <isspace@plt+0xd590>
  40da5b:	mov    rcx,QWORD PTR fs:0x28
  40da64:	cmp    rcx,QWORD PTR [rsp+0x100]
  40da6c:	jne    40da80 <isspace@plt+0xa170>
  40da6e:	add    rsp,0x108
  40da75:	pop    rbx
  40da76:	pop    r12
  40da78:	pop    r13
  40da7a:	pop    r14
  40da7c:	pop    r15
  40da7e:	pop    rbp
  40da7f:	ret    
  40da80:	call   403280 <__stack_chk_fail@plt>
  40da85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40da8f:	nop
  40da90:	push   rax
  40da91:	mov    rax,rdi
  40da94:	mov    rcx,QWORD PTR fs:0x28
  40da9d:	mov    QWORD PTR [rsp],rcx
  40daa1:	mov    rsi,QWORD PTR [rsi+0x8]
  40daa5:	test   rsi,rsi
  40daa8:	lea    rcx,[rip+0x22fe4]        # 430a93 <isspace@plt+0x2d183>
  40daaf:	cmovne rcx,rsi
  40dab3:	lea    rsi,[rip+0x22301]        # 42fdbb <isspace@plt+0x2c4ab>
  40daba:	mov    rdi,rdx
  40dabd:	mov    rdx,rax
  40dac0:	xor    eax,eax
  40dac2:	call   410ea0 <isspace@plt+0xd590>
  40dac7:	mov    rcx,QWORD PTR fs:0x28
  40dad0:	cmp    rcx,QWORD PTR [rsp]
  40dad4:	jne    40dad8 <isspace@plt+0xa1c8>
  40dad6:	pop    rcx
  40dad7:	ret    
  40dad8:	call   403280 <__stack_chk_fail@plt>
  40dadd:	nop    DWORD PTR [rax]
  40dae0:	push   rax
  40dae1:	mov    r8,rdx
  40dae4:	mov    rax,QWORD PTR fs:0x28
  40daed:	mov    QWORD PTR [rsp],rax
  40daf1:	mov    rax,QWORD PTR [rsi+0x10]
  40daf5:	test   rax,rax
  40daf8:	jne    40db0b <isspace@plt+0xa1fb>
  40dafa:	mov    rax,QWORD PTR [rsi+0x8]
  40dafe:	test   rax,rax
  40db01:	je     40db09 <isspace@plt+0xa1f9>
  40db03:	mov    rax,QWORD PTR [rax+0x8]
  40db07:	jmp    40db0b <isspace@plt+0xa1fb>
  40db09:	xor    eax,eax
  40db0b:	cmp    BYTE PTR [rdi],0x20
  40db0e:	lea    rdx,[rip+0x22255]        # 42fd6a <isspace@plt+0x2c45a>
  40db15:	cmovne rdx,rdi
  40db19:	test   rax,rax
  40db1c:	lea    rcx,[rip+0x22f70]        # 430a93 <isspace@plt+0x2d183>
  40db23:	cmovne rcx,rax
  40db27:	lea    rsi,[rip+0x21f61]        # 42fa8f <isspace@plt+0x2c17f>
  40db2e:	mov    rdi,r8
  40db31:	xor    eax,eax
  40db33:	call   410ea0 <isspace@plt+0xd590>
  40db38:	mov    rcx,QWORD PTR fs:0x28
  40db41:	cmp    rcx,QWORD PTR [rsp]
  40db45:	jne    40db49 <isspace@plt+0xa239>
  40db47:	pop    rcx
  40db48:	ret    
  40db49:	call   403280 <__stack_chk_fail@plt>
  40db4e:	xchg   ax,ax
  40db50:	push   rbp
  40db51:	push   r15
  40db53:	push   r14
  40db55:	push   r13
  40db57:	push   r12
  40db59:	push   rbx
  40db5a:	sub    rsp,0x48
  40db5e:	mov    rbp,rdx
  40db61:	mov    rax,QWORD PTR fs:0x28
  40db6a:	mov    QWORD PTR [rsp+0x40],rax
  40db6f:	mov    rax,QWORD PTR [rsi]
  40db72:	cmp    BYTE PTR [rax],0x0
  40db75:	je     40dd4a <isspace@plt+0xa43a>
  40db7b:	mov    rbx,rsi
  40db7e:	mov    r15,rdi
  40db81:	mov    edi,0x1
  40db86:	mov    esi,0x80
  40db8b:	call   403460 <calloc@plt>
  40db90:	test   rax,rax
  40db93:	je     40e564 <isspace@plt+0xac54>
  40db99:	mov    r12,rax
  40db9c:	mov    rdi,r15
  40db9f:	mov    rsi,rbx
  40dba2:	mov    rdx,rbp
  40dba5:	call   40e5a0 <isspace@plt+0xac90>
  40dbaa:	mov    QWORD PTR [r12+0x40],rax
  40dbaf:	mov    rax,QWORD PTR [rbx]
  40dbb2:	jmp    40dbc3 <isspace@plt+0xa2b3>
  40dbb4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dbbe:	xchg   ax,ax
  40dbc0:	mov    QWORD PTR [rbx],rax
  40dbc3:	inc    rax
  40dbc6:	movzx  ecx,BYTE PTR [rax-0x1]
  40dbca:	cmp    cl,0x20
  40dbcd:	je     40dbc0 <isspace@plt+0xa2b0>
  40dbcf:	cmp    cl,0x9
  40dbd2:	je     40dbc0 <isspace@plt+0xa2b0>
  40dbd4:	mov    QWORD PTR [rsp+0x10],rbp
  40dbd9:	lea    rdi,[rsp+0x28]
  40dbde:	call   404230 <isspace@plt+0x920>
  40dbe3:	mov    rbp,QWORD PTR [rbx]
  40dbe6:	jmp    40dbf6 <isspace@plt+0xa2e6>
  40dbe8:	nop    DWORD PTR [rax+rax*1+0x0]
  40dbf0:	inc    rbp
  40dbf3:	mov    QWORD PTR [rbx],rbp
  40dbf6:	movzx  r14d,BYTE PTR [rbp+0x0]
  40dbfb:	cmp    r14b,0x9
  40dbff:	je     40dbf0 <isspace@plt+0xa2e0>
  40dc01:	cmp    r14b,0x20
  40dc05:	je     40dbf0 <isspace@plt+0xa2e0>
  40dc07:	mov    QWORD PTR [rsp+0x8],r15
  40dc0c:	test   r14b,r14b
  40dc0f:	je     40dc7c <isspace@plt+0xa36c>
  40dc11:	call   4038f0 <__ctype_b_loc@plt>
  40dc16:	mov    r13,rax
  40dc19:	lea    r15,[rsp+0x28]
  40dc1e:	mov    rax,QWORD PTR [r13+0x0]
  40dc22:	lea    rcx,[rbp+0x1]
  40dc26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dc30:	movzx  edx,r14b
  40dc34:	movzx  edx,WORD PTR [rax+rdx*2]
  40dc38:	test   edx,0x2800
  40dc3e:	jne    40dc7c <isspace@plt+0xa36c>
  40dc40:	test   dl,0x4
  40dc43:	je     40dc59 <isspace@plt+0xa349>
  40dc45:	cmp    r14b,0x2d
  40dc49:	jne    40dc7c <isspace@plt+0xa36c>
  40dc4b:	movzx  r14d,BYTE PTR [rcx]
  40dc4f:	inc    rcx
  40dc52:	test   r14b,r14b
  40dc55:	jne    40dc30 <isspace@plt+0xa320>
  40dc57:	jmp    40dc7c <isspace@plt+0xa36c>
  40dc59:	lea    rax,[rbp+0x1]
  40dc5d:	mov    QWORD PTR [rbx],rax
  40dc60:	mov    edx,0x1
  40dc65:	mov    rdi,r15
  40dc68:	mov    rsi,rbp
  40dc6b:	call   404460 <isspace@plt+0xb50>
  40dc70:	mov    rbp,QWORD PTR [rbx]
  40dc73:	mov    r14b,BYTE PTR [rbp+0x0]
  40dc77:	test   r14b,r14b
  40dc7a:	jne    40dc1e <isspace@plt+0xa30e>
  40dc7c:	lea    rbp,[rsp+0x28]
  40dc81:	mov    rdi,rbp
  40dc84:	call   404380 <isspace@plt+0xa70>
  40dc89:	mov    rdi,rbp
  40dc8c:	call   404e90 <isspace@plt+0x1580>
  40dc91:	mov    QWORD PTR [r12],rax
  40dc95:	test   rax,rax
  40dc98:	jne    40dcd2 <isspace@plt+0xa3c2>
  40dc9a:	mov    rax,QWORD PTR [rbx]
  40dc9d:	movzx  ecx,BYTE PTR [rax]
  40dca0:	mov    edx,0x70
  40dca5:	test   cl,cl
  40dca7:	cmovne edx,ecx
  40dcaa:	mov    BYTE PTR [rsp+0x28],dl
  40dcae:	mov    BYTE PTR [rsp+0x29],0x0
  40dcb3:	je     40dcbb <isspace@plt+0xa3ab>
  40dcb5:	inc    rax
  40dcb8:	mov    QWORD PTR [rbx],rax
  40dcbb:	lea    rdi,[rsp+0x28]
  40dcc0:	call   403850 <strdup@plt>
  40dcc5:	mov    QWORD PTR [r12],rax
  40dcc9:	test   rax,rax
  40dccc:	je     40e55c <isspace@plt+0xac4c>
  40dcd2:	mov    r15,QWORD PTR [rsp+0x8]
  40dcd7:	mov    rdi,QWORD PTR [r15+0x808]
  40dcde:	mov    rsi,rax
  40dce1:	call   4085b0 <isspace@plt+0x4ca0>
  40dce6:	test   rax,rax
  40dce9:	je     40dd56 <isspace@plt+0xa446>
  40dceb:	mov    r13,rax
  40dcee:	mov    QWORD PTR [r12+0x50],rax
  40dcf3:	mov    rbp,QWORD PTR [r12]
  40dcf7:	lea    rsi,[rip+0x2103b]        # 42ed39 <isspace@plt+0x2b429>
  40dcfe:	mov    rdi,rbp
  40dd01:	call   403470 <strcmp@plt>
  40dd06:	test   eax,eax
  40dd08:	mov    r14,QWORD PTR [rsp+0x10]
  40dd0d:	je     40dd66 <isspace@plt+0xa456>
  40dd0f:	lea    rsi,[rip+0x21026]        # 42ed3c <isspace@plt+0x2b42c>
  40dd16:	mov    rdi,rbp
  40dd19:	call   403470 <strcmp@plt>
  40dd1e:	test   eax,eax
  40dd20:	je     40de9b <isspace@plt+0xa58b>
  40dd26:	mov    eax,DWORD PTR [r13+0x10]
  40dd2a:	test   al,0x20
  40dd2c:	je     40de25 <isspace@plt+0xa515>
  40dd32:	cmp    QWORD PTR [r12+0x40],0x0
  40dd38:	je     40de25 <isspace@plt+0xa515>
  40dd3e:	mov    DWORD PTR [r14],0x3
  40dd45:	jmp    40e55c <isspace@plt+0xac4c>
  40dd4a:	mov    DWORD PTR [rbp+0x0],0x8
  40dd51:	jmp    40e564 <isspace@plt+0xac54>
  40dd56:	mov    rax,QWORD PTR [rsp+0x10]
  40dd5b:	mov    DWORD PTR [rax],0x8
  40dd61:	jmp    40e55c <isspace@plt+0xac4c>
  40dd66:	mov    QWORD PTR [rsp],r13
  40dd6a:	mov    eax,DWORD PTR [r15+0x9b4]
  40dd71:	mov    QWORD PTR [rsp+0x18],rax
  40dd76:	inc    eax
  40dd78:	mov    DWORD PTR [r15+0x9b4],eax
  40dd7f:	lea    r13,[r12+0x70]
  40dd84:	xor    r14d,r14d
  40dd87:	movabs rbp,0x100000600
  40dd91:	mov    r15,QWORD PTR [rsp+0x10]
  40dd96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40dda0:	mov    rax,QWORD PTR [rbx]
  40dda3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ddad:	nop    DWORD PTR [rax]
  40ddb0:	inc    rax
  40ddb3:	movzx  ecx,BYTE PTR [rax-0x1]
  40ddb7:	cmp    rcx,0x20
  40ddbb:	ja     40ddd0 <isspace@plt+0xa4c0>
  40ddbd:	bt     rbp,rcx
  40ddc1:	jae    40ddd0 <isspace@plt+0xa4c0>
  40ddc3:	mov    QWORD PTR [rbx],rax
  40ddc6:	jmp    40ddb0 <isspace@plt+0xa4a0>
  40ddc8:	nop    DWORD PTR [rax+rax*1+0x0]
  40ddd0:	mov    rdi,QWORD PTR [rsp+0x8]
  40ddd5:	mov    rsi,rbx
  40ddd8:	mov    rdx,r15
  40dddb:	call   40db50 <isspace@plt+0xa240>
  40dde0:	cmp    DWORD PTR [r15],0x0
  40dde4:	jne    40e55c <isspace@plt+0xac4c>
  40ddea:	test   r14,r14
  40dded:	lea    rcx,[r14+0x78]
  40ddf1:	cmove  rcx,r13
  40ddf5:	mov    QWORD PTR [rcx],rax
  40ddf8:	mov    r14,rax
  40ddfb:	test   rax,rax
  40ddfe:	jne    40dda0 <isspace@plt+0xa490>
  40de00:	mov    r15,QWORD PTR [rsp+0x8]
  40de05:	mov    rax,QWORD PTR [rsp+0x18]
  40de0a:	cmp    eax,DWORD PTR [r15+0x9b4]
  40de11:	mov    r14,QWORD PTR [rsp+0x10]
  40de16:	mov    r13,QWORD PTR [rsp]
  40de1a:	je     40dd26 <isspace@plt+0xa416>
  40de20:	jmp    40dea9 <isspace@plt+0xa599>
  40de25:	test   eax,0x1000
  40de2a:	je     40de40 <isspace@plt+0xa530>
  40de2c:	mov    rcx,QWORD PTR [rbx]
  40de2f:	cmp    BYTE PTR [rcx],0x21
  40de32:	jne    40de40 <isspace@plt+0xa530>
  40de34:	mov    BYTE PTR [r12+0x68],0x21
  40de3a:	inc    rcx
  40de3d:	mov    QWORD PTR [rbx],rcx
  40de40:	test   al,0x8
  40de42:	je     40df6e <isspace@plt+0xa65e>
  40de48:	mov    rbp,QWORD PTR [rbx]
  40de4b:	cmp    BYTE PTR [rbp+0x0],0x25
  40de4f:	sete   BYTE PTR [r12+0x60]
  40de55:	jne    40deb5 <isspace@plt+0xa5a5>
  40de57:	inc    rbp
  40de5a:	mov    QWORD PTR [rbx],rbp
  40de5d:	mov    QWORD PTR [rsp+0x28],0x0
  40de66:	lea    rsi,[rsp+0x28]
  40de6b:	mov    rdi,rbp
  40de6e:	mov    edx,0xa
  40de73:	call   403450 <strtoull@plt>
  40de78:	mov    rcx,QWORD PTR [rsp+0x28]
  40de7d:	cmp    rcx,QWORD PTR [rbx]
  40de80:	je     40df47 <isspace@plt+0xa637>
  40de86:	mov    QWORD PTR [rbx],rcx
  40de89:	test   eax,eax
  40de8b:	je     40df47 <isspace@plt+0xa637>
  40de91:	mov    DWORD PTR [r12+0x58],eax
  40de96:	jmp    40df5e <isspace@plt+0xa64e>
  40de9b:	sub    DWORD PTR [r15+0x9b4],0x1
  40dea3:	jae    40e55c <isspace@plt+0xac4c>
  40dea9:	mov    DWORD PTR [r14],0x4
  40deb0:	jmp    40e55c <isspace@plt+0xac4c>
  40deb5:	mov    QWORD PTR [rsp+0x28],0x0
  40debe:	lea    rsi,[rsp+0x28]
  40dec3:	mov    rdi,rbp
  40dec6:	mov    edx,0xa
  40decb:	call   403450 <strtoull@plt>
  40ded0:	mov    rcx,QWORD PTR [rsp+0x28]
  40ded5:	cmp    rcx,QWORD PTR [rbx]
  40ded8:	je     40df39 <isspace@plt+0xa629>
  40deda:	mov    QWORD PTR [rbx],rcx
  40dedd:	mov    DWORD PTR [r12+0x58],eax
  40dee2:	test   eax,eax
  40dee4:	je     40df42 <isspace@plt+0xa632>
  40dee6:	mov    rbp,rcx
  40dee9:	cmp    BYTE PTR [rbp+0x0],0x2c
  40deed:	jne    40df5e <isspace@plt+0xa64e>
  40deef:	inc    rbp
  40def2:	mov    QWORD PTR [rbx],rbp
  40def5:	mov    QWORD PTR [rsp+0x28],0x0
  40defe:	lea    rsi,[rsp+0x28]
  40df03:	mov    rdi,rbp
  40df06:	mov    edx,0xa
  40df0b:	call   403450 <strtoull@plt>
  40df10:	mov    rcx,QWORD PTR [rsp+0x28]
  40df15:	cmp    rcx,QWORD PTR [rbx]
  40df18:	je     40e4ea <isspace@plt+0xabda>
  40df1e:	mov    QWORD PTR [rbx],rcx
  40df21:	mov    DWORD PTR [r12+0x5c],eax
  40df26:	test   eax,eax
  40df28:	jne    40df63 <isspace@plt+0xa653>
  40df2a:	lea    rax,[r12+0x5c]
  40df2f:	cmp    rcx,rbp
  40df32:	jne    40df47 <isspace@plt+0xa637>
  40df34:	jmp    40e501 <isspace@plt+0xabf1>
  40df39:	mov    DWORD PTR [r12+0x58],0x0
  40df42:	cmp    rcx,rbp
  40df45:	je     40df53 <isspace@plt+0xa643>
  40df47:	mov    DWORD PTR [r14],0x10
  40df4e:	jmp    40e55c <isspace@plt+0xac4c>
  40df53:	mov    eax,0x7fffffff
  40df58:	cmp    BYTE PTR [rbp+0x0],0x2c
  40df5c:	je     40deef <isspace@plt+0xa5df>
  40df5e:	mov    DWORD PTR [r12+0x5c],eax
  40df63:	mov    DWORD PTR [r14],0x0
  40df6a:	mov    eax,DWORD PTR [r13+0x10]
  40df6e:	test   al,0x2
  40df70:	je     40e024 <isspace@plt+0xa714>
  40df76:	mov    rbp,QWORD PTR [rbx]
  40df79:	mov    cl,BYTE PTR [rbp+0x0]
  40df7c:	test   al,0x4
  40df7e:	je     40df8e <isspace@plt+0xa67e>
  40df80:	mov    edx,ecx
  40df82:	or     dl,0x20
  40df85:	cmp    dl,0x20
  40df88:	je     40e017 <isspace@plt+0xa707>
  40df8e:	mov    BYTE PTR [rsp+0x28],cl
  40df92:	mov    BYTE PTR [rsp+0x29],0x0
  40df97:	test   cl,cl
  40df99:	je     40dff2 <isspace@plt+0xa6e2>
  40df9b:	movzx  r14d,cl
  40df9f:	call   4038f0 <__ctype_b_loc@plt>
  40dfa4:	mov    rax,QWORD PTR [rax]
  40dfa7:	test   BYTE PTR [rax+r14*2+0x1],0x20
  40dfad:	mov    r14,QWORD PTR [rsp+0x10]
  40dfb2:	jne    40dff2 <isspace@plt+0xa6e2>
  40dfb4:	lea    rax,[rbp+0x1]
  40dfb8:	mov    QWORD PTR [rbx],rax
  40dfbb:	lea    rsi,[rsp+0x28]
  40dfc0:	mov    rdi,rbx
  40dfc3:	xor    edx,edx
  40dfc5:	mov    ecx,0x2
  40dfca:	call   40e9d0 <isspace@plt+0xb0c0>
  40dfcf:	mov    rdx,QWORD PTR [rbx]
  40dfd2:	mov    cl,BYTE PTR [rdx]
  40dfd4:	cmp    cl,BYTE PTR [rsp+0x28]
  40dfd8:	jne    40dfe0 <isspace@plt+0xa6d0>
  40dfda:	inc    rdx
  40dfdd:	mov    QWORD PTR [rbx],rdx
  40dfe0:	test   rax,rax
  40dfe3:	jne    40e4aa <isspace@plt+0xab9a>
  40dfe9:	cmp    rdx,rbp
  40dfec:	jne    40e4aa <isspace@plt+0xab9a>
  40dff2:	mov    QWORD PTR [r12+0x48],0x0
  40dffb:	mov    eax,DWORD PTR [r13+0x10]
  40dfff:	test   al,0x8
  40e001:	jne    40e024 <isspace@plt+0xa714>
  40e003:	mov    DWORD PTR [r14],0x5
  40e00a:	jmp    40e55c <isspace@plt+0xac4c>
  40e00f:	nop
  40e010:	mov    QWORD PTR [rbx],rbp
  40e013:	movzx  ecx,BYTE PTR [rbp+0x0]
  40e017:	inc    rbp
  40e01a:	cmp    cl,0x20
  40e01d:	je     40e010 <isspace@plt+0xa700>
  40e01f:	cmp    cl,0x9
  40e022:	je     40e010 <isspace@plt+0xa700>
  40e024:	test   eax,0x800
  40e029:	je     40e076 <isspace@plt+0xa766>
  40e02b:	mov    rax,QWORD PTR [rbx]
  40e02e:	jmp    40e033 <isspace@plt+0xa723>
  40e030:	mov    QWORD PTR [rbx],rax
  40e033:	inc    rax
  40e036:	movzx  ecx,BYTE PTR [rax-0x1]
  40e03a:	cmp    cl,0x20
  40e03d:	je     40e030 <isspace@plt+0xa720>
  40e03f:	cmp    cl,0x9
  40e042:	je     40e030 <isspace@plt+0xa720>
  40e044:	lea    rsi,[rip+0x2250e]        # 430559 <isspace@plt+0x2cc49>
  40e04b:	mov    rdi,rbx
  40e04e:	xor    edx,edx
  40e050:	xor    ecx,ecx
  40e052:	call   40e9d0 <isspace@plt+0xb0c0>
  40e057:	lea    rsi,[r15+0x310]
  40e05e:	test   rax,rax
  40e061:	je     40e0d0 <isspace@plt+0xa7c0>
  40e063:	mov    rbp,rax
  40e066:	mov    rdi,r15
  40e069:	mov    rdx,rax
  40e06c:	call   42a480 <isspace@plt+0x26b70>
  40e071:	mov    QWORD PTR [r12+0x8],rbp
  40e076:	test   BYTE PTR [r13+0x10],0x10
  40e07b:	je     40e244 <isspace@plt+0xa934>
  40e081:	mov    rbp,QWORD PTR [rbx]
  40e084:	jmp    40e096 <isspace@plt+0xa786>
  40e086:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e090:	inc    rbp
  40e093:	mov    QWORD PTR [rbx],rbp
  40e096:	movzx  eax,BYTE PTR [rbp+0x0]
  40e09a:	cmp    al,0x20
  40e09c:	je     40e090 <isspace@plt+0xa780>
  40e09e:	cmp    al,0x9
  40e0a0:	je     40e090 <isspace@plt+0xa780>
  40e0a2:	mov    QWORD PTR [rsp],r13
  40e0a6:	mov    QWORD PTR [rsp+0x28],0x0
  40e0af:	lea    rsi,[rsp+0x28]
  40e0b4:	mov    rdi,rbp
  40e0b7:	mov    edx,0xa
  40e0bc:	call   403450 <strtoull@plt>
  40e0c1:	mov    r13,QWORD PTR [rsp+0x28]
  40e0c6:	cmp    r13,QWORD PTR [rbx]
  40e0c9:	je     40e101 <isspace@plt+0xa7f1>
  40e0cb:	mov    QWORD PTR [rbx],r13
  40e0ce:	jmp    40e103 <isspace@plt+0xa7f3>
  40e0d0:	mov    rdi,r15
  40e0d3:	xor    edx,edx
  40e0d5:	call   42a330 <isspace@plt+0x26a20>
  40e0da:	test   rax,rax
  40e0dd:	je     40e495 <isspace@plt+0xab85>
  40e0e3:	mov    rdi,rax
  40e0e6:	call   403850 <strdup@plt>
  40e0eb:	mov    QWORD PTR [r12+0x8],rax
  40e0f0:	test   rax,rax
  40e0f3:	jne    40e076 <isspace@plt+0xa766>
  40e0f5:	mov    DWORD PTR [r14],0x7
  40e0fc:	jmp    40e55c <isspace@plt+0xac4c>
  40e101:	xor    eax,eax
  40e103:	cmp    r13,rbp
  40e106:	mov    ecx,0x1
  40e10b:	cmovne ecx,eax
  40e10e:	mov    DWORD PTR [r12+0x58],ecx
  40e113:	movzx  ebp,BYTE PTR [r13+0x0]
  40e118:	cmp    rbp,0xa
  40e11c:	jne    40e1bf <isspace@plt+0xa8af>
  40e122:	lea    rdi,[rsp+0x28]
  40e127:	call   404230 <isspace@plt+0x920>
  40e12c:	mov    rbp,QWORD PTR [rbx]
  40e12f:	lea    rsi,[rbp+0x1]
  40e133:	mov    QWORD PTR [rbx],rsi
  40e136:	mov    al,BYTE PTR [rbp+0x1]
  40e139:	test   al,al
  40e13b:	mov    r15,QWORD PTR [rsp+0x8]
  40e140:	mov    r13,QWORD PTR [rsp]
  40e144:	je     40e22a <isspace@plt+0xa91a>
  40e14a:	add    rbp,0x2
  40e14e:	mov    edi,eax
  40e150:	mov    edx,eax
  40e152:	xor    dl,0x2e
  40e155:	mov    QWORD PTR [rbx],rbp
  40e158:	movzx  eax,BYTE PTR [rbp+0x0]
  40e15c:	mov    ecx,eax
  40e15e:	xor    cl,0xa
  40e161:	or     cl,dl
  40e163:	sete   dl
  40e166:	inc    rbp
  40e169:	test   al,al
  40e16b:	je     40e171 <isspace@plt+0xa861>
  40e16d:	test   dl,dl
  40e16f:	je     40e14e <isspace@plt+0xa83e>
  40e171:	cmp    dil,0x2e
  40e175:	jne    40e22a <isspace@plt+0xa91a>
  40e17b:	dec    rbp
  40e17e:	mov    rdx,rsi
  40e181:	not    rdx
  40e184:	add    rdx,rbp
  40e187:	lea    rdi,[rsp+0x28]
  40e18c:	call   4045c0 <isspace@plt+0xcb0>
  40e191:	test   al,al
  40e193:	je     40e22a <isspace@plt+0xa91a>
  40e199:	lea    rsi,[rip+0x224a8]        # 430648 <isspace@plt+0x2cd38>
  40e1a0:	lea    rdi,[rsp+0x28]
  40e1a5:	mov    edx,0x1
  40e1aa:	call   404460 <isspace@plt+0xb50>
  40e1af:	test   al,al
  40e1b1:	je     40e22a <isspace@plt+0xa91a>
  40e1b3:	lea    rdi,[rsp+0x28]
  40e1b8:	call   404e90 <isspace@plt+0x1580>
  40e1bd:	jmp    40e236 <isspace@plt+0xa926>
  40e1bf:	mov    BYTE PTR [rsp+0x28],bpl
  40e1c4:	mov    BYTE PTR [rsp+0x29],0x0
  40e1c9:	test   bpl,bpl
  40e1cc:	je     40e52b <isspace@plt+0xac1b>
  40e1d2:	call   4038f0 <__ctype_b_loc@plt>
  40e1d7:	mov    rax,QWORD PTR [rax]
  40e1da:	test   BYTE PTR [rax+rbp*2+0x1],0x20
  40e1df:	jne    40e52b <isspace@plt+0xac1b>
  40e1e5:	lea    rax,[r13+0x1]
  40e1e9:	mov    QWORD PTR [rbx],rax
  40e1ec:	lea    rsi,[rsp+0x28]
  40e1f1:	mov    rdi,rbx
  40e1f4:	xor    edx,edx
  40e1f6:	mov    ecx,0x10
  40e1fb:	call   40e9d0 <isspace@plt+0xb0c0>
  40e200:	mov    rcx,QWORD PTR [rbx]
  40e203:	mov    dl,BYTE PTR [rcx]
  40e205:	cmp    dl,BYTE PTR [rsp+0x28]
  40e209:	jne    40e211 <isspace@plt+0xa901>
  40e20b:	inc    rcx
  40e20e:	mov    QWORD PTR [rbx],rcx
  40e211:	test   rax,rax
  40e214:	je     40e50c <isspace@plt+0xabfc>
  40e21a:	mov    QWORD PTR [r12+0x8],rax
  40e21f:	mov    r15,QWORD PTR [rsp+0x8]
  40e224:	mov    r13,QWORD PTR [rsp]
  40e228:	jmp    40e244 <isspace@plt+0xa934>
  40e22a:	lea    rdi,[rsp+0x28]
  40e22f:	call   404540 <isspace@plt+0xc30>
  40e234:	xor    eax,eax
  40e236:	mov    QWORD PTR [r12+0x8],rax
  40e23b:	test   rax,rax
  40e23e:	je     40e489 <isspace@plt+0xab79>
  40e244:	mov    eax,DWORD PTR [r13+0x10]
  40e248:	test   eax,0x2000
  40e24d:	je     40e349 <isspace@plt+0xaa39>
  40e253:	mov    QWORD PTR [rsp],r13
  40e257:	xor    r14d,r14d
  40e25a:	lea    r13,[rip+0x20dc7]        # 42f028 <isspace@plt+0x2b718>
  40e261:	mov    QWORD PTR [rsp+0x20],r12
  40e266:	jmp    40e281 <isspace@plt+0xa971>
  40e268:	xor    eax,eax
  40e26a:	mov    r12,QWORD PTR [rsp+0x20]
  40e26f:	mov    QWORD PTR [r12+r14*8+0x8],rax
  40e274:	inc    r14
  40e277:	cmp    r14,0x6
  40e27b:	je     40e32e <isspace@plt+0xaa1e>
  40e281:	mov    rbp,QWORD PTR [rbx]
  40e284:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e28e:	xchg   ax,ax
  40e290:	inc    rbp
  40e293:	movzx  eax,BYTE PTR [rbp-0x1]
  40e297:	lea    ecx,[rax-0x9]
  40e29a:	cmp    cl,0x1e
  40e29d:	ja     40e30e <isspace@plt+0xa9fe>
  40e29f:	movzx  ecx,cl
  40e2a2:	movsxd rcx,DWORD PTR [r13+rcx*4+0x0]
  40e2a7:	add    rcx,r13
  40e2aa:	jmp    rcx
  40e2ac:	mov    QWORD PTR [rbx],rbp
  40e2af:	jmp    40e290 <isspace@plt+0xa980>
  40e2b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e2bb:	nop    DWORD PTR [rax+rax*1+0x0]
  40e2c0:	movzx  r15d,al
  40e2c4:	mov    BYTE PTR [rsp+0x28],al
  40e2c8:	mov    BYTE PTR [rsp+0x29],0x0
  40e2cd:	call   4038f0 <__ctype_b_loc@plt>
  40e2d2:	mov    rax,QWORD PTR [rax]
  40e2d5:	test   BYTE PTR [rax+r15*2+0x1],0x20
  40e2db:	jne    40e268 <isspace@plt+0xa958>
  40e2dd:	mov    QWORD PTR [rbx],rbp
  40e2e0:	mov    rdi,rbx
  40e2e3:	lea    rsi,[rsp+0x28]
  40e2e8:	xor    edx,edx
  40e2ea:	mov    ecx,0x2000
  40e2ef:	call   40e9d0 <isspace@plt+0xb0c0>
  40e2f4:	mov    rcx,QWORD PTR [rbx]
  40e2f7:	mov    dl,BYTE PTR [rcx]
  40e2f9:	cmp    dl,BYTE PTR [rsp+0x28]
  40e2fd:	jne    40e26a <isspace@plt+0xa95a>
  40e303:	inc    rcx
  40e306:	mov    QWORD PTR [rbx],rcx
  40e309:	jmp    40e26a <isspace@plt+0xa95a>
  40e30e:	mov    rdi,rbx
  40e311:	lea    rsi,[rip+0x2223f]        # 430557 <isspace@plt+0x2cc47>
  40e318:	lea    rdx,[rip+0x2223c]        # 43055b <isspace@plt+0x2cc4b>
  40e31f:	mov    ecx,0x2000
  40e324:	call   40e9d0 <isspace@plt+0xb0c0>
  40e329:	jmp    40e26f <isspace@plt+0xa95f>
  40e32e:	mov    QWORD PTR [r12+0x38],0x0
  40e337:	mov    r13,QWORD PTR [rsp]
  40e33b:	mov    eax,DWORD PTR [r13+0x10]
  40e33f:	mov    r14,QWORD PTR [rsp+0x10]
  40e344:	mov    r15,QWORD PTR [rsp+0x8]
  40e349:	test   al,0x1
  40e34b:	je     40e567 <isspace@plt+0xac57>
  40e351:	mov    rax,QWORD PTR [rbx]
  40e354:	jmp    40e363 <isspace@plt+0xaa53>
  40e356:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e360:	mov    QWORD PTR [rbx],rax
  40e363:	inc    rax
  40e366:	movzx  ecx,BYTE PTR [rax-0x1]
  40e36a:	cmp    cl,0x20
  40e36d:	je     40e360 <isspace@plt+0xaa50>
  40e36f:	cmp    cl,0x9
  40e372:	je     40e360 <isspace@plt+0xaa50>
  40e374:	mov    rbp,QWORD PTR [r13+0x18]
  40e378:	test   rbp,rbp
  40e37b:	je     40e3ee <isspace@plt+0xaade>
  40e37d:	test   cl,cl
  40e37f:	je     40e392 <isspace@plt+0xaa82>
  40e381:	cmp    cl,0x7d
  40e384:	je     40e392 <isspace@plt+0xaa82>
  40e386:	cmp    cl,0xa
  40e389:	jne    40e3ee <isspace@plt+0xaade>
  40e38b:	mov    QWORD PTR [rbx],rax
  40e38e:	mov    rbp,QWORD PTR [r13+0x18]
  40e392:	mov    edi,0x1
  40e397:	mov    esi,0x80
  40e39c:	call   403460 <calloc@plt>
  40e3a1:	test   rax,rax
  40e3a4:	je     40e553 <isspace@plt+0xac43>
  40e3aa:	mov    rbx,rax
  40e3ad:	test   rbp,rbp
  40e3b0:	je     40e3c6 <isspace@plt+0xaab6>
  40e3b2:	mov    rdi,rbp
  40e3b5:	call   403850 <strdup@plt>
  40e3ba:	mov    QWORD PTR [rbx],rax
  40e3bd:	test   rax,rax
  40e3c0:	je     40e54b <isspace@plt+0xac3b>
  40e3c6:	mov    rbp,r12
  40e3c9:	add    rbp,0x70
  40e3cd:	mov    QWORD PTR [rbp+0x0],rbx
  40e3d1:	mov    rsi,QWORD PTR [r13+0x18]
  40e3d5:	mov    rdi,QWORD PTR [r15+0x808]
  40e3dc:	call   4085b0 <isspace@plt+0x4ca0>
  40e3e1:	mov    rcx,QWORD PTR [rbp+0x0]
  40e3e5:	mov    QWORD PTR [rcx+0x50],rax
  40e3e9:	jmp    40e567 <isspace@plt+0xac57>
  40e3ee:	mov    rdi,r15
  40e3f1:	mov    rsi,rbx
  40e3f4:	mov    rdx,r14
  40e3f7:	call   40db50 <isspace@plt+0xa240>
  40e3fc:	mov    QWORD PTR [r12+0x70],rax
  40e401:	test   rax,rax
  40e404:	je     40e55c <isspace@plt+0xac4c>
  40e40a:	mov    rbx,QWORD PTR [r12]
  40e40e:	lea    rsi,[rip+0x22267]        # 43067c <isspace@plt+0x2cd6c>
  40e415:	mov    rdi,rbx
  40e418:	call   403470 <strcmp@plt>
  40e41d:	test   eax,eax
  40e41f:	je     40e438 <isspace@plt+0xab28>
  40e421:	lea    rsi,[rip+0x20828]        # 42ec50 <isspace@plt+0x2b340>
  40e428:	mov    rdi,rbx
  40e42b:	call   403470 <strcmp@plt>
  40e430:	test   eax,eax
  40e432:	jne    40e567 <isspace@plt+0xac57>
  40e438:	mov    edi,0x1
  40e43d:	mov    esi,0x80
  40e442:	call   403460 <calloc@plt>
  40e447:	test   rax,rax
  40e44a:	je     40e55c <isspace@plt+0xac4c>
  40e450:	mov    rbx,rax
  40e453:	lea    rdi,[rip+0x220f6]        # 430550 <isspace@plt+0x2cc40>
  40e45a:	call   403850 <strdup@plt>
  40e45f:	mov    QWORD PTR [rbx],rax
  40e462:	test   rax,rax
  40e465:	je     40e589 <isspace@plt+0xac79>
  40e46b:	mov    rax,QWORD PTR [r12+0x70]
  40e470:	mov    QWORD PTR [rbx+0x70],rax
  40e474:	lea    rax,[rip+0x31a7d]        # 43fef8 <isspace@plt+0x3c5e8>
  40e47b:	mov    QWORD PTR [rbx+0x50],rax
  40e47f:	mov    QWORD PTR [r12+0x70],rbx
  40e484:	jmp    40e567 <isspace@plt+0xac57>
  40e489:	mov    DWORD PTR [r14],0x6
  40e490:	jmp    40e55c <isspace@plt+0xac4c>
  40e495:	mov    QWORD PTR [r12+0x8],0x0
  40e49e:	mov    DWORD PTR [r14],0x7
  40e4a5:	jmp    40e55c <isspace@plt+0xac4c>
  40e4aa:	mov    rdi,r15
  40e4ad:	mov    rsi,rax
  40e4b0:	mov    QWORD PTR [rsp+0x18],rax
  40e4b5:	call   424ba0 <isspace@plt+0x21290>
  40e4ba:	mov    QWORD PTR [rsp],rax
  40e4be:	mov    rdi,QWORD PTR [rsp+0x18]
  40e4c3:	call   4030d0 <free@plt>
  40e4c8:	mov    rax,QWORD PTR [rsp]
  40e4cc:	mov    QWORD PTR [r12+0x48],rax
  40e4d1:	test   rax,rax
  40e4d4:	je     40e53d <isspace@plt+0xac2d>
  40e4d6:	mov    eax,DWORD PTR [r13+0x10]
  40e4da:	test   eax,0x800
  40e4df:	jne    40e02b <isspace@plt+0xa71b>
  40e4e5:	jmp    40e076 <isspace@plt+0xa766>
  40e4ea:	lea    rax,[r12+0x5c]
  40e4ef:	mov    DWORD PTR [r12+0x5c],0x0
  40e4f8:	cmp    rcx,rbp
  40e4fb:	jne    40df47 <isspace@plt+0xa637>
  40e501:	mov    DWORD PTR [rax],0x7fffffff
  40e507:	jmp    40df63 <isspace@plt+0xa653>
  40e50c:	cmp    rcx,r13
  40e50f:	je     40e52b <isspace@plt+0xac1b>
  40e511:	lea    rdi,[rip+0x2257b]        # 430a93 <isspace@plt+0x2d183>
  40e518:	call   403850 <strdup@plt>
  40e51d:	mov    r15,QWORD PTR [rsp+0x8]
  40e522:	mov    r13,QWORD PTR [rsp]
  40e526:	jmp    40e236 <isspace@plt+0xa926>
  40e52b:	mov    QWORD PTR [r12+0x8],0x0
  40e534:	mov    DWORD PTR [r14],0x6
  40e53b:	jmp    40e55c <isspace@plt+0xac4c>
  40e53d:	cmp    QWORD PTR [rbx],rbp
  40e540:	jne    40e003 <isspace@plt+0xa6f3>
  40e546:	jmp    40dffb <isspace@plt+0xa6eb>
  40e54b:	mov    rdi,rbx
  40e54e:	call   4030d0 <free@plt>
  40e553:	mov    QWORD PTR [r12+0x70],0x0
  40e55c:	mov    rdi,r12
  40e55f:	call   409620 <isspace@plt+0x5d10>
  40e564:	xor    r12d,r12d
  40e567:	mov    rax,QWORD PTR fs:0x28
  40e570:	cmp    rax,QWORD PTR [rsp+0x40]
  40e575:	jne    40e593 <isspace@plt+0xac83>
  40e577:	mov    rax,r12
  40e57a:	add    rsp,0x48
  40e57e:	pop    rbx
  40e57f:	pop    r12
  40e581:	pop    r13
  40e583:	pop    r14
  40e585:	pop    r15
  40e587:	pop    rbp
  40e588:	ret    
  40e589:	mov    rdi,rbx
  40e58c:	call   4030d0 <free@plt>
  40e591:	jmp    40e55c <isspace@plt+0xac4c>
  40e593:	call   403280 <__stack_chk_fail@plt>
  40e598:	nop    DWORD PTR [rax+rax*1+0x0]
  40e5a0:	push   rbp
  40e5a1:	push   r15
  40e5a3:	push   r14
  40e5a5:	push   r12
  40e5a7:	push   rbx
  40e5a8:	sub    rsp,0x20
  40e5ac:	mov    r15,rdx
  40e5af:	mov    rbx,rsi
  40e5b2:	mov    r12,rdi
  40e5b5:	mov    rax,QWORD PTR fs:0x28
  40e5be:	mov    QWORD PTR [rsp+0x18],rax
  40e5c3:	vxorps xmm0,xmm0,xmm0
  40e5c7:	vmovaps XMMWORD PTR [rsp],xmm0
  40e5cc:	mov    QWORD PTR [rsp+0xf],0x0
  40e5d5:	call   40e6b0 <isspace@plt+0xada0>
  40e5da:	mov    r14,rax
  40e5dd:	mov    rax,QWORD PTR [rbx]
  40e5e0:	jmp    40e5f3 <isspace@plt+0xace3>
  40e5e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e5ec:	nop    DWORD PTR [rax+0x0]
  40e5f0:	mov    QWORD PTR [rbx],rax
  40e5f3:	inc    rax
  40e5f6:	movsx  ebp,BYTE PTR [rax-0x1]
  40e5fa:	cmp    ebp,0x20
  40e5fd:	je     40e5f0 <isspace@plt+0xace0>
  40e5ff:	cmp    bpl,0x9
  40e603:	je     40e5f0 <isspace@plt+0xace0>
  40e605:	cmp    ebp,0x3b
  40e608:	je     40e60f <isspace@plt+0xacff>
  40e60a:	cmp    ebp,0x2c
  40e60d:	jne    40e68a <isspace@plt+0xad7a>
  40e60f:	mov    QWORD PTR [rbx],rax
  40e612:	mov    rdi,r12
  40e615:	mov    rsi,rbx
  40e618:	mov    rdx,r15
  40e61b:	call   40e5a0 <isspace@plt+0xac90>
  40e620:	mov    rbx,rax
  40e623:	test   rax,rax
  40e626:	je     40e639 <isspace@plt+0xad29>
  40e628:	mov    al,BYTE PTR [rbx]
  40e62a:	cmp    al,0x3b
  40e62c:	je     40e632 <isspace@plt+0xad22>
  40e62e:	cmp    al,0x2c
  40e630:	jne    40e639 <isspace@plt+0xad29>
  40e632:	cmp    QWORD PTR [rbx+0x18],0x0
  40e637:	je     40e670 <isspace@plt+0xad60>
  40e639:	mov    edi,0x1
  40e63e:	mov    esi,0x28
  40e643:	call   403460 <calloc@plt>
  40e648:	test   rax,rax
  40e64b:	je     40e677 <isspace@plt+0xad67>
  40e64d:	mov    BYTE PTR [rax],bpl
  40e650:	vmovaps xmm0,XMMWORD PTR [rsp]
  40e655:	vmovups XMMWORD PTR [rax+0x1],xmm0
  40e65a:	mov    rcx,QWORD PTR [rsp+0xf]
  40e65f:	mov    QWORD PTR [rax+0x10],rcx
  40e663:	mov    QWORD PTR [rax+0x18],r14
  40e667:	mov    QWORD PTR [rax+0x20],rbx
  40e66b:	mov    r14,rax
  40e66e:	jmp    40e68a <isspace@plt+0xad7a>
  40e670:	mov    DWORD PTR [r15],0x2
  40e677:	mov    rdi,r14
  40e67a:	call   40e970 <isspace@plt+0xb060>
  40e67f:	mov    rdi,rbx
  40e682:	call   40e970 <isspace@plt+0xb060>
  40e687:	xor    r14d,r14d
  40e68a:	mov    rax,QWORD PTR fs:0x28
  40e693:	cmp    rax,QWORD PTR [rsp+0x18]
  40e698:	jne    40e6aa <isspace@plt+0xad9a>
  40e69a:	mov    rax,r14
  40e69d:	add    rsp,0x20
  40e6a1:	pop    rbx
  40e6a2:	pop    r12
  40e6a4:	pop    r14
  40e6a6:	pop    r15
  40e6a8:	pop    rbp
  40e6a9:	ret    
  40e6aa:	call   403280 <__stack_chk_fail@plt>
  40e6af:	nop
  40e6b0:	push   rbp
  40e6b1:	push   r15
  40e6b3:	push   r14
  40e6b5:	push   r13
  40e6b7:	push   r12
  40e6b9:	push   rbx
  40e6ba:	sub    rsp,0x28
  40e6be:	mov    r14,rdx
  40e6c1:	mov    r13,rsi
  40e6c4:	mov    r15,rdi
  40e6c7:	mov    rax,QWORD PTR fs:0x28
  40e6d0:	mov    QWORD PTR [rsp+0x20],rax
  40e6d5:	mov    rbx,QWORD PTR [rsi]
  40e6d8:	jmp    40e6e7 <isspace@plt+0xadd7>
  40e6da:	nop    WORD PTR [rax+rax*1+0x0]
  40e6e0:	inc    rbx
  40e6e3:	mov    QWORD PTR [r13+0x0],rbx
  40e6e7:	movzx  eax,BYTE PTR [rbx]
  40e6ea:	cmp    al,0x20
  40e6ec:	je     40e6e0 <isspace@plt+0xadd0>
  40e6ee:	cmp    al,0x9
  40e6f0:	je     40e6e0 <isspace@plt+0xadd0>
  40e6f2:	mov    DWORD PTR [rsp+0x13],0x0
  40e6fa:	mov    DWORD PTR [rsp+0x10],0x0
  40e702:	movsx  ebp,BYTE PTR [rbx]
  40e705:	xor    eax,eax
  40e707:	lea    ecx,[rbp-0x23]
  40e70a:	cmp    ecx,0x1c
  40e70d:	ja     40e8e8 <isspace@plt+0xafd8>
  40e713:	lea    rdx,[rip+0x2098a]        # 42f0a4 <isspace@plt+0x2b794>
  40e71a:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40e71e:	add    rcx,rdx
  40e721:	jmp    rcx
  40e723:	mov    QWORD PTR [rsp+0x18],0x0
  40e72c:	lea    rsi,[rsp+0x18]
  40e731:	mov    rdi,rbx
  40e734:	mov    edx,0xa
  40e739:	call   403450 <strtoull@plt>
  40e73e:	mov    rcx,QWORD PTR [rsp+0x18]
  40e743:	cmp    rcx,QWORD PTR [r13+0x0]
  40e747:	je     40e763 <isspace@plt+0xae53>
  40e749:	mov    QWORD PTR [r13+0x0],rcx
  40e74d:	cdqe   
  40e74f:	jmp    40e765 <isspace@plt+0xae55>
  40e751:	inc    rbx
  40e754:	mov    QWORD PTR [r13+0x0],rbx
  40e758:	mov    QWORD PTR [rsp+0x8],0xffffffffffffffff
  40e761:	jmp    40e76d <isspace@plt+0xae5d>
  40e763:	xor    eax,eax
  40e765:	mov    QWORD PTR [rsp+0x8],rax
  40e76a:	mov    bpl,0x6c
  40e76d:	xor    r12d,r12d
  40e770:	mov    rdi,r15
  40e773:	mov    rsi,r13
  40e776:	mov    rdx,r14
  40e779:	call   40e6b0 <isspace@plt+0xada0>
  40e77e:	test   rax,rax
  40e781:	je     40e7eb <isspace@plt+0xaedb>
  40e783:	mov    rbx,rax
  40e786:	movsx  eax,BYTE PTR [rax]
  40e789:	cmp    eax,0x3f
  40e78c:	ja     40e7b2 <isspace@plt+0xaea2>
  40e78e:	movabs rcx,0x8000800800000000
  40e798:	bt     rcx,rax
  40e79c:	jb     40e7b7 <isspace@plt+0xaea7>
  40e79e:	movabs rcx,0x401000000000
  40e7a8:	bt     rcx,rax
  40e7ac:	jb     40e8e6 <isspace@plt+0xafd6>
  40e7b2:	cmp    eax,0x6c
  40e7b5:	jne    40e7ed <isspace@plt+0xaedd>
  40e7b7:	cmp    bpl,0x2b
  40e7bb:	je     40e7ed <isspace@plt+0xaedd>
  40e7bd:	cmp    bpl,0x2d
  40e7c1:	je     40e7ed <isspace@plt+0xaedd>
  40e7c3:	mov    edi,0x1
  40e7c8:	mov    esi,0x28
  40e7cd:	call   403460 <calloc@plt>
  40e7d2:	test   rax,rax
  40e7d5:	je     40e828 <isspace@plt+0xaf18>
  40e7d7:	mov    QWORD PTR [rax+0x10],0xffffffffffffffff
  40e7df:	mov    BYTE PTR [rax],0x2b
  40e7e2:	mov    QWORD PTR [rax+0x20],rbx
  40e7e6:	mov    rbx,rax
  40e7e9:	jmp    40e7ed <isspace@plt+0xaedd>
  40e7eb:	xor    ebx,ebx
  40e7ed:	mov    edi,0x1
  40e7f2:	mov    esi,0x28
  40e7f7:	call   403460 <calloc@plt>
  40e7fc:	test   rax,rax
  40e7ff:	je     40e828 <isspace@plt+0xaf18>
  40e801:	mov    BYTE PTR [rax],bpl
  40e804:	mov    ecx,DWORD PTR [rsp+0x10]
  40e808:	mov    edx,DWORD PTR [rsp+0x13]
  40e80c:	mov    DWORD PTR [rax+0x1],ecx
  40e80f:	mov    DWORD PTR [rax+0x4],edx
  40e812:	mov    QWORD PTR [rax+0x8],r12
  40e816:	mov    rcx,QWORD PTR [rsp+0x8]
  40e81b:	mov    QWORD PTR [rax+0x10],rcx
  40e81f:	mov    QWORD PTR [rax+0x20],rbx
  40e823:	jmp    40e8e8 <isspace@plt+0xafd8>
  40e828:	mov    rdi,rbx
  40e82b:	call   40e970 <isspace@plt+0xb060>
  40e830:	jmp    40e8e6 <isspace@plt+0xafd6>
  40e835:	mov    BYTE PTR [rsp+0x18],bpl
  40e83a:	mov    BYTE PTR [rsp+0x19],0x0
  40e83f:	test   bpl,bpl
  40e842:	je     40e8bd <isspace@plt+0xafad>
  40e844:	movzx  r12d,bpl
  40e848:	call   4038f0 <__ctype_b_loc@plt>
  40e84d:	mov    rax,QWORD PTR [rax]
  40e850:	test   BYTE PTR [rax+r12*2+0x1],0x20
  40e856:	jne    40e8bd <isspace@plt+0xafad>
  40e858:	lea    rax,[rbx+0x1]
  40e85c:	mov    QWORD PTR [r13+0x0],rax
  40e860:	lea    rsi,[rsp+0x18]
  40e865:	mov    rdi,r13
  40e868:	xor    edx,edx
  40e86a:	mov    ecx,0x2
  40e86f:	call   40e9d0 <isspace@plt+0xb0c0>
  40e874:	mov    rdx,QWORD PTR [r13+0x0]
  40e878:	mov    cl,BYTE PTR [rdx]
  40e87a:	cmp    cl,BYTE PTR [rsp+0x18]
  40e87e:	jne    40e887 <isspace@plt+0xaf77>
  40e880:	inc    rdx
  40e883:	mov    QWORD PTR [r13+0x0],rdx
  40e887:	test   rax,rax
  40e88a:	jne    40e891 <isspace@plt+0xaf81>
  40e88c:	cmp    rdx,rbx
  40e88f:	je     40e8bd <isspace@plt+0xafad>
  40e891:	mov    rdi,r15
  40e894:	mov    rbx,rax
  40e897:	mov    rsi,rax
  40e89a:	call   424ba0 <isspace@plt+0x21290>
  40e89f:	mov    r12,rax
  40e8a2:	mov    rdi,rbx
  40e8a5:	call   4030d0 <free@plt>
  40e8aa:	test   r12,r12
  40e8ad:	je     40e8bd <isspace@plt+0xafad>
  40e8af:	mov    QWORD PTR [rsp+0x8],0xffffffffffffffff
  40e8b8:	jmp    40e770 <isspace@plt+0xae60>
  40e8bd:	mov    DWORD PTR [r14],0x5
  40e8c4:	jmp    40e8e6 <isspace@plt+0xafd6>
  40e8c6:	lea    rax,[rbx+0x1]
  40e8ca:	mov    QWORD PTR [r13+0x0],rax
  40e8ce:	movsx  esi,BYTE PTR [rbx+0x1]
  40e8d2:	mov    rdi,r15
  40e8d5:	call   426d20 <isspace@plt+0x23410>
  40e8da:	cmp    eax,0x1c
  40e8dd:	jne    40e944 <isspace@plt+0xb034>
  40e8df:	mov    DWORD PTR [r14],0xb
  40e8e6:	xor    eax,eax
  40e8e8:	mov    rcx,QWORD PTR fs:0x28
  40e8f1:	cmp    rcx,QWORD PTR [rsp+0x20]
  40e8f6:	jne    40e960 <isspace@plt+0xb050>
  40e8f8:	add    rsp,0x28
  40e8fc:	pop    rbx
  40e8fd:	pop    r12
  40e8ff:	pop    r13
  40e901:	pop    r14
  40e903:	pop    r15
  40e905:	pop    rbp
  40e906:	ret    
  40e907:	inc    rbx
  40e90a:	mov    QWORD PTR [r13+0x0],rbx
  40e90e:	mov    QWORD PTR [rsp+0x18],0x0
  40e917:	lea    rsi,[rsp+0x18]
  40e91c:	mov    rdi,rbx
  40e91f:	mov    edx,0xa
  40e924:	call   403450 <strtoull@plt>
  40e929:	mov    rcx,QWORD PTR [rsp+0x18]
  40e92e:	cmp    rcx,QWORD PTR [r13+0x0]
  40e932:	je     40e954 <isspace@plt+0xb044>
  40e934:	mov    QWORD PTR [r13+0x0],rcx
  40e938:	cdqe   
  40e93a:	mov    QWORD PTR [rsp+0x8],rax
  40e93f:	jmp    40e76d <isspace@plt+0xae5d>
  40e944:	mov    eax,eax
  40e946:	mov    QWORD PTR [rsp+0x8],rax
  40e94b:	inc    QWORD PTR [r13+0x0]
  40e94f:	jmp    40e76d <isspace@plt+0xae5d>
  40e954:	xor    eax,eax
  40e956:	mov    QWORD PTR [rsp+0x8],rax
  40e95b:	jmp    40e76d <isspace@plt+0xae5d>
  40e960:	call   403280 <__stack_chk_fail@plt>
  40e965:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e96f:	nop
  40e970:	push   rbx
  40e971:	sub    rsp,0x10
  40e975:	mov    rax,QWORD PTR fs:0x28
  40e97e:	mov    QWORD PTR [rsp+0x8],rax
  40e983:	test   rdi,rdi
  40e986:	je     40e9ae <isspace@plt+0xb09e>
  40e988:	mov    rbx,rdi
  40e98b:	mov    rdi,QWORD PTR [rdi+0x8]
  40e98f:	call   42ae70 <isspace@plt+0x27560>
  40e994:	mov    rdi,QWORD PTR [rbx+0x18]
  40e998:	call   40e970 <isspace@plt+0xb060>
  40e99d:	mov    rdi,QWORD PTR [rbx+0x20]
  40e9a1:	call   40e970 <isspace@plt+0xb060>
  40e9a6:	mov    rdi,rbx
  40e9a9:	call   4030d0 <free@plt>
  40e9ae:	mov    rax,QWORD PTR fs:0x28
  40e9b7:	cmp    rax,QWORD PTR [rsp+0x8]
  40e9bc:	jne    40e9c4 <isspace@plt+0xb0b4>
  40e9be:	add    rsp,0x10
  40e9c2:	pop    rbx
  40e9c3:	ret    
  40e9c4:	call   403280 <__stack_chk_fail@plt>
  40e9c9:	nop    DWORD PTR [rax+0x0]
  40e9d0:	push   rbp
  40e9d1:	push   r15
  40e9d3:	push   r14
  40e9d5:	push   r13
  40e9d7:	push   r12
  40e9d9:	push   rbx
  40e9da:	sub    rsp,0x48
  40e9de:	mov    DWORD PTR [rsp+0xc],ecx
  40e9e2:	mov    QWORD PTR [rsp+0x18],rdx
  40e9e7:	mov    rbx,rsi
  40e9ea:	mov    rbp,rdi
  40e9ed:	mov    rax,QWORD PTR fs:0x28
  40e9f6:	mov    QWORD PTR [rsp+0x40],rax
  40e9fb:	lea    rdi,[rsp+0x28]
  40ea00:	call   404230 <isspace@plt+0x920>
  40ea05:	mov    rdi,rbx
  40ea08:	call   403250 <strlen@plt>
  40ea0d:	mov    QWORD PTR [rsp+0x10],rax
  40ea12:	mov    r15,QWORD PTR [rbp+0x0]
  40ea16:	mov    r12b,BYTE PTR [r15]
  40ea19:	test   r12b,r12b
  40ea1c:	je     40eb52 <isspace@plt+0xb242>
  40ea22:	xor    r13d,r13d
  40ea25:	jmp    40ea4f <isspace@plt+0xb13f>
  40ea27:	xor    r13d,r13d
  40ea2a:	nop    WORD PTR [rax+rax*1+0x0]
  40ea30:	mov    eax,r13d
  40ea33:	lea    rcx,[r15+0x1]
  40ea37:	mov    QWORD PTR [rbp+0x0],rcx
  40ea3b:	movzx  r12d,BYTE PTR [r15+0x1]
  40ea40:	mov    r15,rcx
  40ea43:	mov    r13d,eax
  40ea46:	test   r12b,r12b
  40ea49:	je     40eb52 <isspace@plt+0xb242>
  40ea4f:	movsx  r14d,r12b
  40ea53:	mov    rdi,rbx
  40ea56:	mov    esi,r14d
  40ea59:	mov    rdx,QWORD PTR [rsp+0x10]
  40ea5e:	call   403410 <memchr@plt>
  40ea63:	test   r13b,0x1
  40ea67:	jne    40ea72 <isspace@plt+0xb162>
  40ea69:	test   rax,rax
  40ea6c:	jne    40eb52 <isspace@plt+0xb242>
  40ea72:	cmp    r12b,0x5c
  40ea76:	jne    40ea8c <isspace@plt+0xb17c>
  40ea78:	cmp    DWORD PTR [rsp+0xc],0x800
  40ea80:	je     40ea8c <isspace@plt+0xb17c>
  40ea82:	mov    ecx,r13d
  40ea85:	mov    al,0x1
  40ea87:	and    cl,0x1
  40ea8a:	je     40ea33 <isspace@plt+0xb123>
  40ea8c:	mov    BYTE PTR [rsp+0x27],r12b
  40ea91:	test   r13b,0x1
  40ea95:	je     40eb31 <isspace@plt+0xb221>
  40ea9b:	cmp    r12b,0xa
  40ea9f:	je     40ea27 <isspace@plt+0xb117>
  40eaa1:	cmp    r12b,0x74
  40eaa5:	je     40eab4 <isspace@plt+0xb1a4>
  40eaa7:	cmp    r12b,0x6e
  40eaab:	jne    40eabb <isspace@plt+0xb1ab>
  40eaad:	mov    BYTE PTR [rsp+0x27],0xa
  40eab2:	jmp    40eb2e <isspace@plt+0xb21e>
  40eab4:	mov    BYTE PTR [rsp+0x27],0x9
  40eab9:	jmp    40eb2e <isspace@plt+0xb21e>
  40eabb:	cmp    DWORD PTR [rsp+0xc],0x2
  40eac0:	je     40eacf <isspace@plt+0xb1bf>
  40eac2:	cmp    DWORD PTR [rsp+0xc],0x10
  40eac7:	je     40eacf <isspace@plt+0xb1bf>
  40eac9:	cmp    r12b,0x5c
  40eacd:	je     40eb2e <isspace@plt+0xb21e>
  40eacf:	mov    rdi,rbx
  40ead2:	mov    esi,r14d
  40ead5:	mov    rdx,QWORD PTR [rsp+0x10]
  40eada:	call   403410 <memchr@plt>
  40eadf:	mov    r12,rax
  40eae2:	mov    r15,QWORD PTR [rsp+0x18]
  40eae7:	test   r15,r15
  40eaea:	je     40eb0a <isspace@plt+0xb1fa>
  40eaec:	mov    rdi,r15
  40eaef:	call   403250 <strlen@plt>
  40eaf4:	mov    rdi,r15
  40eaf7:	mov    esi,r14d
  40eafa:	mov    rdx,rax
  40eafd:	call   403410 <memchr@plt>
  40eb02:	test   rax,rax
  40eb05:	setne  al
  40eb08:	jmp    40eb0c <isspace@plt+0xb1fc>
  40eb0a:	xor    eax,eax
  40eb0c:	xor    r13d,r13d
  40eb0f:	test   r12,r12
  40eb12:	jne    40eb31 <isspace@plt+0xb221>
  40eb14:	test   al,al
  40eb16:	jne    40eb31 <isspace@plt+0xb221>
  40eb18:	mov    edx,0x1
  40eb1d:	lea    rdi,[rsp+0x28]
  40eb22:	lea    rsi,[rip+0x20151]        # 42ec7a <isspace@plt+0x2b36a>
  40eb29:	call   404460 <isspace@plt+0xb50>
  40eb2e:	xor    r13d,r13d
  40eb31:	mov    edx,0x1
  40eb36:	lea    rdi,[rsp+0x28]
  40eb3b:	lea    rsi,[rsp+0x27]
  40eb40:	call   404460 <isspace@plt+0xb50>
  40eb45:	test   al,al
  40eb47:	je     40eb86 <isspace@plt+0xb276>
  40eb49:	mov    r15,QWORD PTR [rbp+0x0]
  40eb4d:	jmp    40ea30 <isspace@plt+0xb120>
  40eb52:	lea    rbx,[rsp+0x28]
  40eb57:	mov    rdi,rbx
  40eb5a:	call   404380 <isspace@plt+0xa70>
  40eb5f:	mov    rdi,rbx
  40eb62:	call   404e90 <isspace@plt+0x1580>
  40eb67:	mov    rcx,QWORD PTR fs:0x28
  40eb70:	cmp    rcx,QWORD PTR [rsp+0x40]
  40eb75:	jne    40eb94 <isspace@plt+0xb284>
  40eb77:	add    rsp,0x48
  40eb7b:	pop    rbx
  40eb7c:	pop    r12
  40eb7e:	pop    r13
  40eb80:	pop    r14
  40eb82:	pop    r15
  40eb84:	pop    rbp
  40eb85:	ret    
  40eb86:	lea    rdi,[rsp+0x28]
  40eb8b:	call   404540 <isspace@plt+0xc30>
  40eb90:	xor    eax,eax
  40eb92:	jmp    40eb67 <isspace@plt+0xb257>
  40eb94:	call   403280 <__stack_chk_fail@plt>
  40eb99:	nop    DWORD PTR [rax+0x0]
  40eba0:	push   rbp
  40eba1:	push   r15
  40eba3:	push   r14
  40eba5:	push   rbx
  40eba6:	push   rax
  40eba7:	mov    rax,QWORD PTR fs:0x28
  40ebb0:	mov    QWORD PTR [rsp],rax
  40ebb4:	mov    rax,QWORD PTR [rdi+0x50]
  40ebb8:	mov    r15d,DWORD PTR [rax+0x10]
  40ebbc:	movzx  eax,sil
  40ebc0:	test   r15d,0x20000
  40ebc7:	je     40ebd8 <isspace@plt+0xb2c8>
  40ebc9:	mov    r14d,eax
  40ebcc:	xor    r14d,0xf
  40ebd0:	test   al,al
  40ebd2:	jne    40ec2a <isspace@plt+0xb31a>
  40ebd4:	test   dl,dl
  40ebd6:	jne    40ec2a <isspace@plt+0xb31a>
  40ebd8:	mov    rbx,QWORD PTR [rdi+0x70]
  40ebdc:	xor    r14d,r14d
  40ebdf:	test   rbx,rbx
  40ebe2:	je     40ec2a <isspace@plt+0xb31a>
  40ebe4:	mov    ecx,r15d
  40ebe7:	and    ecx,0x10000
  40ebed:	movzx  ebp,dl
  40ebf0:	or     ebp,ecx
  40ebf2:	and    r15d,0x8000
  40ebf9:	or     r15d,eax
  40ebfc:	nop    DWORD PTR [rax+0x0]
  40ec00:	xor    esi,esi
  40ec02:	test   r15d,r15d
  40ec05:	setne  sil
  40ec09:	xor    edx,edx
  40ec0b:	test   ebp,ebp
  40ec0d:	setne  dl
  40ec10:	mov    rdi,rbx
  40ec13:	call   40eba0 <isspace@plt+0xb290>
  40ec18:	test   eax,eax
  40ec1a:	jne    40ec27 <isspace@plt+0xb317>
  40ec1c:	mov    rbx,QWORD PTR [rbx+0x78]
  40ec20:	test   rbx,rbx
  40ec23:	jne    40ec00 <isspace@plt+0xb2f0>
  40ec25:	jmp    40ec2a <isspace@plt+0xb31a>
  40ec27:	mov    r14d,eax
  40ec2a:	mov    rax,QWORD PTR fs:0x28
  40ec33:	cmp    rax,QWORD PTR [rsp]
  40ec37:	jne    40ec47 <isspace@plt+0xb337>
  40ec39:	mov    eax,r14d
  40ec3c:	add    rsp,0x8
  40ec40:	pop    rbx
  40ec41:	pop    r14
  40ec43:	pop    r15
  40ec45:	pop    rbp
  40ec46:	ret    
  40ec47:	call   403280 <__stack_chk_fail@plt>
  40ec4c:	nop    DWORD PTR [rax+0x0]
  40ec50:	push   rbp
  40ec51:	push   r15
  40ec53:	push   r14
  40ec55:	push   r13
  40ec57:	push   r12
  40ec59:	push   rbx
  40ec5a:	sub    rsp,0x48
  40ec5e:	mov    r12,rcx
  40ec61:	mov    QWORD PTR [rsp],rdx
  40ec65:	mov    r15,rsi
  40ec68:	mov    rbx,rdi
  40ec6b:	mov    rax,QWORD PTR fs:0x28
  40ec74:	mov    QWORD PTR [rsp+0x40],rax
  40ec79:	call   417080 <isspace@plt+0x13770>
  40ec7e:	mov    QWORD PTR [rsp+0x30],rax
  40ec83:	mov    QWORD PTR [rsp+0x38],rdx
  40ec88:	xor    ebp,ebp
  40ec8a:	lea    r13,[rsp+0x30]
  40ec8f:	lea    r14,[rip+0x20482]        # 42f118 <isspace@plt+0x2b808>
  40ec96:	mov    QWORD PTR [rsp+0x8],r15
  40ec9b:	jmp    40ecd5 <isspace@plt+0xb3c5>
  40ec9d:	nop    DWORD PTR [rax]
  40eca0:	mov    rdi,rbx
  40eca3:	mov    rsi,r15
  40eca6:	mov    rdx,r12
  40eca9:	mov    ecx,ebp
  40ecab:	call   40eee0 <isspace@plt+0xb5d0>
  40ecb0:	mov    QWORD PTR [rsp+0x30],rax
  40ecb5:	mov    QWORD PTR [rsp+0x38],rdx
  40ecba:	mov    rdi,r13
  40ecbd:	call   416fc0 <isspace@plt+0x136b0>
  40ecc2:	test   al,al
  40ecc4:	cmovne r12,r13
  40ecc8:	mov    rbx,QWORD PTR [rbx+0x20]
  40eccc:	test   rbx,rbx
  40eccf:	je     40ee17 <isspace@plt+0xb507>
  40ecd5:	movsx  eax,BYTE PTR [rbx]
  40ecd8:	lea    ecx,[rax-0x23]
  40ecdb:	cmp    ecx,0x49
  40ecde:	ja     40ecba <isspace@plt+0xb3aa>
  40ece0:	movsxd rcx,DWORD PTR [r14+rcx*4]
  40ece4:	add    rcx,r14
  40ece7:	jmp    rcx
  40ece9:	xor    ecx,ecx
  40eceb:	cmp    al,0x2b
  40eced:	sete   cl
  40ecf0:	lea    ebp,[rcx+rcx*1]
  40ecf3:	add    ebp,0xffffffff
  40ecf6:	mov    rax,QWORD PTR [rbx+0x20]
  40ecfa:	test   rax,rax
  40ecfd:	je     40eca0 <isspace@plt+0xb390>
  40ecff:	movzx  eax,BYTE PTR [rax]
  40ed02:	cmp    al,0x2d
  40ed04:	je     40eca0 <isspace@plt+0xb390>
  40ed06:	cmp    al,0x2b
  40ed08:	je     40eca0 <isspace@plt+0xb390>
  40ed0a:	jmp    40ecba <isspace@plt+0xb3aa>
  40ed0c:	vmovups xmm0,XMMWORD PTR [r12]
  40ed12:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  40ed18:	jmp    40ecba <isspace@plt+0xb3aa>
  40ed1a:	mov    rax,QWORD PTR [rbx+0x10]
  40ed1e:	shl    rax,0x5
  40ed22:	add    r15,rax
  40ed25:	add    r15,0xb8
  40ed2c:	mov    rdi,QWORD PTR [rsp]
  40ed30:	test   rdi,rdi
  40ed33:	je     40ed90 <isspace@plt+0xb480>
  40ed35:	call   41eaa0 <isspace@plt+0x1b190>
  40ed3a:	jmp    40ed92 <isspace@plt+0xb482>
  40ed3c:	test   ebp,ebp
  40ed3e:	je     40edf0 <isspace@plt+0xb4e0>
  40ed44:	neg    ebp
  40ed46:	mov    rdi,QWORD PTR [r15]
  40ed49:	test   ebp,ebp
  40ed4b:	js     40edf8 <isspace@plt+0xb4e8>
  40ed51:	mov    rsi,QWORD PTR [r12+0x8]
  40ed56:	mov    rdx,QWORD PTR [rbx+0x8]
  40ed5a:	call   416b70 <isspace@plt+0x13260>
  40ed5f:	jmp    40ecb0 <isspace@plt+0xb3a0>
  40ed64:	test   ebp,ebp
  40ed66:	jle    40edd1 <isspace@plt+0xb4c1>
  40ed68:	mov    rax,QWORD PTR [rbx+0x10]
  40ed6c:	add    rax,QWORD PTR [r12+0x8]
  40ed71:	mov    QWORD PTR [rsp+0x38],rax
  40ed76:	mov    QWORD PTR [rsp+0x30],rax
  40ed7b:	jmp    40ecba <isspace@plt+0xb3aa>
  40ed80:	mov    rdi,QWORD PTR [r15]
  40ed83:	call   410890 <isspace@plt+0xcf80>
  40ed88:	mov    rdi,rax
  40ed8b:	mov    rsi,rax
  40ed8e:	jmp    40edc7 <isspace@plt+0xb4b7>
  40ed90:	xor    eax,eax
  40ed92:	movsxd rsi,eax
  40ed95:	mov    rdi,r15
  40ed98:	call   403d30 <isspace@plt+0x420>
  40ed9d:	test   rax,rax
  40eda0:	je     40edb8 <isspace@plt+0xb4a8>
  40eda2:	mov    r15,QWORD PTR [rsp+0x8]
  40eda7:	mov    rdi,QWORD PTR [r15]
  40edaa:	mov    rsi,QWORD PTR [rax+0x8]
  40edae:	call   410e10 <isspace@plt+0xd500>
  40edb3:	mov    rdi,rax
  40edb6:	jmp    40edc4 <isspace@plt+0xb4b4>
  40edb8:	mov    rdi,0xffffffffffffffff
  40edbf:	mov    r15,QWORD PTR [rsp+0x8]
  40edc4:	mov    rsi,rdi
  40edc7:	call   417250 <isspace@plt+0x13940>
  40edcc:	jmp    40ecb0 <isspace@plt+0xb3a0>
  40edd1:	js     40ee0a <isspace@plt+0xb4fa>
  40edd3:	mov    rdi,QWORD PTR [rbx+0x10]
  40edd7:	mov    rsi,rdi
  40edda:	call   417250 <isspace@plt+0x13940>
  40eddf:	mov    QWORD PTR [rsp+0x30],rax
  40ede4:	mov    QWORD PTR [rsp+0x38],rdx
  40ede9:	xor    ebp,ebp
  40edeb:	jmp    40ecba <isspace@plt+0xb3aa>
  40edf0:	mov    rdi,QWORD PTR [r15]
  40edf3:	mov    ebp,0xffffffff
  40edf8:	mov    rsi,QWORD PTR [r12]
  40edfc:	mov    rdx,QWORD PTR [rbx+0x8]
  40ee00:	call   416c00 <isspace@plt+0x132f0>
  40ee05:	jmp    40ecb0 <isspace@plt+0xb3a0>
  40ee0a:	mov    rax,QWORD PTR [r12]
  40ee0e:	sub    rax,QWORD PTR [rbx+0x10]
  40ee12:	jmp    40ed71 <isspace@plt+0xb461>
  40ee17:	mov    rax,QWORD PTR [rsp+0x30]
  40ee1c:	mov    rdx,QWORD PTR [rsp+0x38]
  40ee21:	jmp    40eeb9 <isspace@plt+0xb5a9>
  40ee26:	mov    rdi,QWORD PTR [rbx+0x18]
  40ee2a:	test   rdi,rdi
  40ee2d:	je     40ee54 <isspace@plt+0xb544>
  40ee2f:	mov    rsi,r15
  40ee32:	mov    rdx,QWORD PTR [rsp]
  40ee36:	mov    rcx,r12
  40ee39:	call   40ec50 <isspace@plt+0xb340>
  40ee3e:	jmp    40ee5d <isspace@plt+0xb54d>
  40ee40:	mov    rdi,QWORD PTR [r15]
  40ee43:	call   410890 <isspace@plt+0xcf80>
  40ee48:	xor    edi,edi
  40ee4a:	mov    rsi,rax
  40ee4d:	call   417250 <isspace@plt+0x13940>
  40ee52:	jmp    40eeb9 <isspace@plt+0xb5a9>
  40ee54:	xor    edi,edi
  40ee56:	xor    esi,esi
  40ee58:	call   417250 <isspace@plt+0x13940>
  40ee5d:	mov    QWORD PTR [rsp+0x20],rax
  40ee62:	mov    QWORD PTR [rsp+0x28],rdx
  40ee67:	mov    rdi,QWORD PTR [rbx+0x20]
  40ee6b:	test   rdi,rdi
  40ee6e:	je     40ee8d <isspace@plt+0xb57d>
  40ee70:	cmp    BYTE PTR [rbx],0x3b
  40ee73:	lea    rax,[rsp+0x20]
  40ee78:	cmove  r12,rax
  40ee7c:	mov    rsi,r15
  40ee7f:	mov    rdx,QWORD PTR [rsp]
  40ee83:	mov    rcx,r12
  40ee86:	call   40ec50 <isspace@plt+0xb340>
  40ee8b:	jmp    40eea0 <isspace@plt+0xb590>
  40ee8d:	mov    rdi,QWORD PTR [r15]
  40ee90:	call   410890 <isspace@plt+0xcf80>
  40ee95:	mov    rdi,rax
  40ee98:	mov    rsi,rax
  40ee9b:	call   417250 <isspace@plt+0x13940>
  40eea0:	mov    QWORD PTR [rsp+0x10],rax
  40eea5:	mov    QWORD PTR [rsp+0x18],rdx
  40eeaa:	lea    rdi,[rsp+0x20]
  40eeaf:	lea    rsi,[rsp+0x10]
  40eeb4:	call   4170c0 <isspace@plt+0x137b0>
  40eeb9:	mov    rcx,QWORD PTR fs:0x28
  40eec2:	cmp    rcx,QWORD PTR [rsp+0x40]
  40eec7:	jne    40eed8 <isspace@plt+0xb5c8>
  40eec9:	add    rsp,0x48
  40eecd:	pop    rbx
  40eece:	pop    r12
  40eed0:	pop    r13
  40eed2:	pop    r14
  40eed4:	pop    r15
  40eed6:	pop    rbp
  40eed7:	ret    
  40eed8:	call   403280 <__stack_chk_fail@plt>
  40eedd:	nop    DWORD PTR [rax]
  40eee0:	push   r15
  40eee2:	push   r14
  40eee4:	push   r13
  40eee6:	push   r12
  40eee8:	push   rbx
  40eee9:	sub    rsp,0x10
  40eeed:	mov    r14,rdi
  40eef0:	mov    rax,QWORD PTR fs:0x28
  40eef9:	mov    QWORD PTR [rsp+0x8],rax
  40eefe:	mov    r15,QWORD PTR [rsi]
  40ef01:	mov    rsi,QWORD PTR [rdi+0x10]
  40ef05:	cmp    rsi,0xffffffffffffffff
  40ef09:	mov    ebx,0x1
  40ef0e:	cmovne rbx,rsi
  40ef12:	mov    rax,QWORD PTR [rdx]
  40ef15:	test   ecx,ecx
  40ef17:	jle    40ef70 <isspace@plt+0xb660>
  40ef19:	mov    r12,QWORD PTR [rdx+0x8]
  40ef1d:	cmp    rax,r12
  40ef20:	jae    40ef46 <isspace@plt+0xb636>
  40ef22:	lea    r13,[r12-0x1]
  40ef27:	lea    rdx,[rsp+0x7]
  40ef2c:	mov    rdi,r15
  40ef2f:	mov    rsi,r13
  40ef32:	call   411060 <isspace@plt+0xd750>
  40ef37:	cmp    BYTE PTR [rsp+0x7],0xa
  40ef3c:	cmovne r13,r12
  40ef40:	test   al,al
  40ef42:	cmovne r12,r13
  40ef46:	mov    rdi,r15
  40ef49:	mov    rsi,r12
  40ef4c:	call   410bc0 <isspace@plt+0xd2b0>
  40ef51:	add    rbx,rax
  40ef54:	mov    rdi,r15
  40ef57:	mov    rsi,rbx
  40ef5a:	call   4108c0 <isspace@plt+0xcfb0>
  40ef5f:	mov    rbx,rax
  40ef62:	cmp    BYTE PTR [r14],0x67
  40ef66:	jne    40efa2 <isspace@plt+0xb692>
  40ef68:	mov    rdi,rbx
  40ef6b:	mov    rsi,rbx
  40ef6e:	jmp    40efb3 <isspace@plt+0xb6a3>
  40ef70:	js     40ef7c <isspace@plt+0xb66c>
  40ef72:	test   rsi,rsi
  40ef75:	je     40ef94 <isspace@plt+0xb684>
  40ef77:	mov    rdi,r15
  40ef7a:	jmp    40ef5a <isspace@plt+0xb64a>
  40ef7c:	mov    rdi,r15
  40ef7f:	mov    rsi,rax
  40ef82:	call   410bc0 <isspace@plt+0xd2b0>
  40ef87:	sub    rax,rbx
  40ef8a:	jbe    40ef9a <isspace@plt+0xb68a>
  40ef8c:	mov    rdi,r15
  40ef8f:	mov    rsi,rax
  40ef92:	jmp    40ef5a <isspace@plt+0xb64a>
  40ef94:	xor    edi,edi
  40ef96:	xor    esi,esi
  40ef98:	jmp    40efb3 <isspace@plt+0xb6a3>
  40ef9a:	xor    ebx,ebx
  40ef9c:	cmp    BYTE PTR [r14],0x67
  40efa0:	je     40ef68 <isspace@plt+0xb658>
  40efa2:	mov    rdi,r15
  40efa5:	mov    rsi,rbx
  40efa8:	call   4134d0 <isspace@plt+0xfbc0>
  40efad:	mov    rdi,rbx
  40efb0:	mov    rsi,rax
  40efb3:	call   417250 <isspace@plt+0x13940>
  40efb8:	mov    rcx,QWORD PTR fs:0x28
  40efc1:	cmp    rcx,QWORD PTR [rsp+0x8]
  40efc6:	jne    40efd6 <isspace@plt+0xb6c6>
  40efc8:	add    rsp,0x10
  40efcc:	pop    rbx
  40efcd:	pop    r12
  40efcf:	pop    r13
  40efd1:	pop    r14
  40efd3:	pop    r15
  40efd5:	ret    
  40efd6:	call   403280 <__stack_chk_fail@plt>
  40efdb:	nop    DWORD PTR [rax+rax*1+0x0]
  40efe0:	push   rbp
  40efe1:	push   r15
  40efe3:	push   r14
  40efe5:	push   r13
  40efe7:	push   r12
  40efe9:	push   rbx
  40efea:	sub    rsp,0x18
  40efee:	mov    rax,QWORD PTR fs:0x28
  40eff7:	mov    QWORD PTR [rsp+0x10],rax
  40effc:	test   rcx,rcx
  40efff:	je     40f44e <isspace@plt+0xbb3e>
  40f005:	mov    rbx,rsi
  40f008:	mov    r13,rdi
  40f00b:	cmp    QWORD PTR [rdi+0xc0],rsi
  40f012:	jb     40f40a <isspace@plt+0xbafa>
  40f018:	mov    r14,rcx
  40f01b:	mov    r12,rdx
  40f01e:	cmp    QWORD PTR [r13+0x158],rbx
  40f025:	jbe    40f038 <isspace@plt+0xb728>
  40f027:	vmovaps xmm0,XMMWORD PTR [rip+0x21621]        # 430650 <isspace@plt+0x2cd40>
  40f02f:	vmovups XMMWORD PTR [r13+0x158],xmm0
  40f038:	mov    rcx,QWORD PTR [r13+0x40]
  40f03c:	test   rcx,rcx
  40f03f:	je     40f40a <isspace@plt+0xbafa>
  40f045:	lea    rbp,[r13+0x30]
  40f049:	xor    eax,eax
  40f04b:	jmp    40f063 <isspace@plt+0xb753>
  40f04d:	nop    DWORD PTR [rax]
  40f050:	mov    rcx,QWORD PTR [rdx+0x10]
  40f054:	mov    rbp,rdx
  40f057:	mov    rax,rsi
  40f05a:	test   rcx,rcx
  40f05d:	je     40f40a <isspace@plt+0xbafa>
  40f063:	mov    rdx,rcx
  40f066:	mov    rsi,QWORD PTR [rbp+0x30]
  40f06a:	add    rsi,rax
  40f06d:	cmp    rax,rbx
  40f070:	ja     40f050 <isspace@plt+0xb740>
  40f072:	cmp    rsi,rbx
  40f075:	jb     40f050 <isspace@plt+0xb740>
  40f077:	mov    r15,rbx
  40f07a:	sub    r15,rax
  40f07d:	mov    rdi,r13
  40f080:	call   403fa0 <isspace@plt+0x690>
  40f085:	lea    rsi,[rax-0x1]
  40f089:	mov    rdi,r13
  40f08c:	call   403c70 <isspace@plt+0x360>
  40f091:	test   rax,rax
  40f094:	je     40f163 <isspace@plt+0xb853>
  40f09a:	mov    rcx,QWORD PTR [r13+0x28]
  40f09e:	test   rcx,rcx
  40f0a1:	je     40f163 <isspace@plt+0xb853>
  40f0a7:	mov    rdx,QWORD PTR [r13+0xa8]
  40f0ae:	test   rdx,rdx
  40f0b1:	je     40f163 <isspace@plt+0xb853>
  40f0b7:	cmp    rcx,rbp
  40f0ba:	jne    40f163 <isspace@plt+0xb853>
  40f0c0:	mov    rcx,QWORD PTR [rdx]
  40f0c3:	test   rcx,rcx
  40f0c6:	je     40f163 <isspace@plt+0xb853>
  40f0cc:	mov    rdx,QWORD PTR [rcx+0x20]
  40f0d0:	add    rcx,0x18
  40f0d4:	xor    esi,esi
  40f0d6:	mov    edi,0x1
  40f0db:	mov    rcx,QWORD PTR [rcx]
  40f0de:	cmp    rcx,rbp
  40f0e1:	movzx  esi,sil
  40f0e5:	cmove  esi,edi
  40f0e8:	cmp    rcx,rdx
  40f0eb:	je     40f0f9 <isspace@plt+0xb7e9>
  40f0ed:	add    rcx,0x10
  40f0f1:	test   sil,0x1
  40f0f5:	je     40f0db <isspace@plt+0xb7cb>
  40f0f7:	jmp    40f0ff <isspace@plt+0xb7ef>
  40f0f9:	test   sil,0x1
  40f0fd:	je     40f163 <isspace@plt+0xb853>
  40f0ff:	mov    rcx,QWORD PTR [rbp+0x28]
  40f103:	add    rcx,QWORD PTR [rbp+0x30]
  40f107:	mov    rdx,QWORD PTR [rax+0x10]
  40f10b:	add    rdx,QWORD PTR [rax+0x8]
  40f10f:	cmp    rcx,rdx
  40f112:	jne    40f163 <isspace@plt+0xb853>
  40f114:	mov    rdi,r13
  40f117:	call   403fa0 <isspace@plt+0x690>
  40f11c:	lea    rsi,[rax-0x1]
  40f120:	mov    rdi,r13
  40f123:	call   403c70 <isspace@plt+0x360>
  40f128:	mov    rsi,QWORD PTR [rbp+0x28]
  40f12c:	add    rsi,r15
  40f12f:	sub    rsi,QWORD PTR [rax+0x10]
  40f133:	mov    rdi,rax
  40f136:	mov    rdx,r12
  40f139:	mov    rcx,r14
  40f13c:	call   4116e0 <isspace@plt+0xddd0>
  40f141:	test   al,al
  40f143:	je     40f163 <isspace@plt+0xb853>
  40f145:	add    QWORD PTR [rbp+0x30],r14
  40f149:	mov    rax,QWORD PTR [r13+0xa8]
  40f150:	mov    rax,QWORD PTR [rax]
  40f153:	add    QWORD PTR [rax+0x28],r14
  40f157:	add    QWORD PTR [r13+0xc0],r14
  40f15e:	jmp    40f44e <isspace@plt+0xbb3e>
  40f163:	mov    rdi,r13
  40f166:	mov    rsi,rbx
  40f169:	call   40f480 <isspace@plt+0xbb70>
  40f16e:	test   rax,rax
  40f171:	je     40f40a <isspace@plt+0xbafa>
  40f177:	mov    QWORD PTR [rsp],rax
  40f17b:	mov    rdi,r13
  40f17e:	call   403fa0 <isspace@plt+0x690>
  40f183:	lea    rsi,[rax-0x1]
  40f187:	mov    rdi,r13
  40f18a:	call   403c70 <isspace@plt+0x360>
  40f18f:	test   rax,rax
  40f192:	je     40f1a6 <isspace@plt+0xb896>
  40f194:	mov    rbx,rax
  40f197:	mov    rdi,rax
  40f19a:	mov    rsi,r14
  40f19d:	call   411640 <isspace@plt+0xdd30>
  40f1a2:	test   al,al
  40f1a4:	jne    40f1cd <isspace@plt+0xb8bd>
  40f1a6:	mov    rdi,r14
  40f1a9:	call   411310 <isspace@plt+0xda00>
  40f1ae:	test   rax,rax
  40f1b1:	je     40f40a <isspace@plt+0xbafa>
  40f1b7:	mov    rbx,rax
  40f1ba:	mov    rdi,r13
  40f1bd:	mov    rsi,rax
  40f1c0:	call   403e50 <isspace@plt+0x540>
  40f1c5:	test   al,al
  40f1c7:	je     40f26b <isspace@plt+0xb95b>
  40f1cd:	mov    rdi,rbx
  40f1d0:	mov    rsi,r12
  40f1d3:	mov    rdx,r14
  40f1d6:	call   411680 <isspace@plt+0xdd70>
  40f1db:	test   rax,rax
  40f1de:	je     40f40a <isspace@plt+0xbafa>
  40f1e4:	mov    QWORD PTR [rsp+0x8],rax
  40f1e9:	mov    r12,QWORD PTR [rbp+0x30]
  40f1ed:	mov    edi,0x1
  40f1f2:	mov    esi,0x38
  40f1f7:	call   403460 <calloc@plt>
  40f1fc:	test   rax,rax
  40f1ff:	je     40f27a <isspace@plt+0xb96a>
  40f201:	mov    rbx,rax
  40f204:	mov    QWORD PTR [rax],r13
  40f207:	mov    rax,QWORD PTR [r13+0x20]
  40f20b:	mov    QWORD PTR [rbx+0x20],rax
  40f20f:	test   rax,rax
  40f212:	je     40f218 <isspace@plt+0xb908>
  40f214:	mov    QWORD PTR [rax+0x18],rbx
  40f218:	mov    QWORD PTR [r13+0x20],rbx
  40f21c:	cmp    r15,r12
  40f21f:	jne    40f281 <isspace@plt+0xb971>
  40f221:	test   rbx,rbx
  40f224:	je     40f40a <isspace@plt+0xbafa>
  40f22a:	mov    rax,QWORD PTR [rbp+0x10]
  40f22e:	mov    QWORD PTR [rbx+0x8],rbp
  40f232:	mov    QWORD PTR [rbx+0x10],rax
  40f236:	mov    rax,QWORD PTR [rsp+0x8]
  40f23b:	mov    QWORD PTR [rbx+0x28],rax
  40f23f:	mov    QWORD PTR [rbx+0x30],r14
  40f243:	mov    rax,QWORD PTR [rsp]
  40f247:	mov    QWORD PTR [rax+0x18],rbx
  40f24b:	mov    QWORD PTR [rax+0x20],rbx
  40f24f:	mov    QWORD PTR [rax+0x28],r14
  40f253:	vxorps xmm0,xmm0,xmm0
  40f257:	vmovups XMMWORD PTR [rax],xmm0
  40f25b:	mov    QWORD PTR [rax+0x10],0x0
  40f263:	mov    r12,rbx
  40f266:	jmp    40f39a <isspace@plt+0xba8a>
  40f26b:	mov    rdi,rbx
  40f26e:	call   4114b0 <isspace@plt+0xdba0>
  40f273:	xor    ecx,ecx
  40f275:	jmp    40f450 <isspace@plt+0xbb40>
  40f27a:	xor    ebx,ebx
  40f27c:	cmp    r15,r12
  40f27f:	je     40f221 <isspace@plt+0xb911>
  40f281:	mov    edi,0x1
  40f286:	mov    esi,0x38
  40f28b:	call   403460 <calloc@plt>
  40f290:	test   rax,rax
  40f293:	je     40f2b3 <isspace@plt+0xb9a3>
  40f295:	mov    r12,rax
  40f298:	mov    QWORD PTR [rax],r13
  40f29b:	mov    rax,QWORD PTR [r13+0x20]
  40f29f:	mov    QWORD PTR [r12+0x20],rax
  40f2a4:	test   rax,rax
  40f2a7:	je     40f2ad <isspace@plt+0xb99d>
  40f2a9:	mov    QWORD PTR [rax+0x18],r12
  40f2ad:	mov    QWORD PTR [r13+0x20],r12
  40f2b1:	jmp    40f2b6 <isspace@plt+0xb9a6>
  40f2b3:	xor    r12d,r12d
  40f2b6:	mov    edi,0x1
  40f2bb:	mov    esi,0x38
  40f2c0:	call   403460 <calloc@plt>
  40f2c5:	test   rax,rax
  40f2c8:	je     40f40a <isspace@plt+0xbafa>
  40f2ce:	mov    QWORD PTR [rax],r13
  40f2d1:	mov    rcx,QWORD PTR [r13+0x20]
  40f2d5:	mov    QWORD PTR [rax+0x20],rcx
  40f2d9:	test   rcx,rcx
  40f2dc:	je     40f2e2 <isspace@plt+0xb9d2>
  40f2de:	mov    QWORD PTR [rcx+0x18],rax
  40f2e2:	mov    QWORD PTR [r13+0x20],rax
  40f2e6:	xor    ecx,ecx
  40f2e8:	test   rbx,rbx
  40f2eb:	je     40f450 <isspace@plt+0xbb40>
  40f2f1:	test   r12,r12
  40f2f4:	je     40f450 <isspace@plt+0xbb40>
  40f2fa:	mov    rcx,QWORD PTR [rbp+0x8]
  40f2fe:	mov    rdx,QWORD PTR [rbp+0x28]
  40f302:	mov    QWORD PTR [rbx+0x8],rcx
  40f306:	mov    QWORD PTR [rbx+0x10],r12
  40f30a:	mov    QWORD PTR [rbx+0x28],rdx
  40f30e:	mov    QWORD PTR [rbx+0x30],r15
  40f312:	mov    QWORD PTR [r12+0x8],rbx
  40f317:	mov    QWORD PTR [r12+0x10],rax
  40f31c:	mov    rcx,QWORD PTR [rsp+0x8]
  40f321:	mov    QWORD PTR [r12+0x28],rcx
  40f326:	mov    QWORD PTR [r12+0x30],r14
  40f32b:	mov    rcx,QWORD PTR [rbp+0x28]
  40f32f:	add    rcx,r15
  40f332:	mov    rdx,QWORD PTR [rbp+0x10]
  40f336:	mov    rsi,QWORD PTR [rbp+0x30]
  40f33a:	sub    rsi,r15
  40f33d:	mov    QWORD PTR [rax+0x8],r12
  40f341:	mov    QWORD PTR [rax+0x10],rdx
  40f345:	mov    QWORD PTR [rax+0x28],rcx
  40f349:	mov    QWORD PTR [rax+0x30],rsi
  40f34d:	mov    rcx,QWORD PTR [rsp]
  40f351:	mov    QWORD PTR [rcx+0x18],rbx
  40f355:	mov    QWORD PTR [rcx+0x20],rax
  40f359:	cmp    rbx,rax
  40f35c:	je     40f370 <isspace@plt+0xba60>
  40f35e:	mov    rbx,QWORD PTR [rbx+0x10]
  40f362:	test   rbx,rbx
  40f365:	je     40f370 <isspace@plt+0xba60>
  40f367:	add    r15,QWORD PTR [rbx+0x30]
  40f36b:	cmp    rbx,rax
  40f36e:	jne    40f35e <isspace@plt+0xba4e>
  40f370:	mov    rdx,QWORD PTR [rsp]
  40f374:	mov    QWORD PTR [rdx+0x28],r15
  40f378:	mov    QWORD PTR [rdx],rbp
  40f37b:	mov    QWORD PTR [rdx+0x8],rbp
  40f37f:	xor    eax,eax
  40f381:	mov    rcx,rbp
  40f384:	add    rax,QWORD PTR [rcx+0x30]
  40f388:	cmp    rcx,rbp
  40f38b:	je     40f396 <isspace@plt+0xba86>
  40f38d:	mov    rcx,QWORD PTR [rcx+0x10]
  40f391:	test   rcx,rcx
  40f394:	jne    40f384 <isspace@plt+0xba74>
  40f396:	mov    QWORD PTR [rdx+0x10],rax
  40f39a:	mov    rdi,r13
  40f39d:	call   403fa0 <isspace@plt+0x690>
  40f3a2:	lea    rsi,[rax-0x1]
  40f3a6:	mov    rdi,r13
  40f3a9:	call   403c70 <isspace@plt+0x360>
  40f3ae:	test   rax,rax
  40f3b1:	je     40f3d3 <isspace@plt+0xbac3>
  40f3b3:	mov    rcx,QWORD PTR [r12+0x28]
  40f3b8:	mov    rdx,QWORD PTR [rax+0x10]
  40f3bc:	cmp    rcx,rdx
  40f3bf:	jb     40f3d3 <isspace@plt+0xbac3>
  40f3c1:	add    rcx,QWORD PTR [r12+0x30]
  40f3c6:	add    rdx,QWORD PTR [rax+0x8]
  40f3ca:	cmp    rcx,rdx
  40f3cd:	jne    40f3d3 <isspace@plt+0xbac3>
  40f3cf:	mov    QWORD PTR [r13+0x28],r12
  40f3d3:	mov    rdi,QWORD PTR [rsp]
  40f3d7:	mov    rax,QWORD PTR [rdi+0x10]
  40f3db:	mov    rcx,QWORD PTR [rdi+0x28]
  40f3df:	test   rax,rax
  40f3e2:	je     40f40e <isspace@plt+0xbafe>
  40f3e4:	test   rcx,rcx
  40f3e7:	je     40f429 <isspace@plt+0xbb19>
  40f3e9:	mov    rdx,QWORD PTR [rdi]
  40f3ec:	mov    rsi,QWORD PTR [rdi+0x18]
  40f3f0:	mov    rdx,QWORD PTR [rdx+0x8]
  40f3f4:	mov    QWORD PTR [rdx+0x10],rsi
  40f3f8:	mov    rdx,QWORD PTR [rdi+0x8]
  40f3fc:	mov    rsi,QWORD PTR [rdi+0x20]
  40f400:	mov    rdx,QWORD PTR [rdx+0x10]
  40f404:	mov    QWORD PTR [rdx+0x8],rsi
  40f408:	jmp    40f444 <isspace@plt+0xbb34>
  40f40a:	xor    ecx,ecx
  40f40c:	jmp    40f450 <isspace@plt+0xbb40>
  40f40e:	test   rcx,rcx
  40f411:	je     40f44e <isspace@plt+0xbb3e>
  40f413:	mov    rdx,QWORD PTR [rdi+0x18]
  40f417:	mov    rsi,QWORD PTR [rdx+0x8]
  40f41b:	mov    QWORD PTR [rsi+0x10],rdx
  40f41f:	mov    rdx,QWORD PTR [rdi+0x20]
  40f423:	mov    rsi,QWORD PTR [rdx+0x10]
  40f427:	jmp    40f440 <isspace@plt+0xbb30>
  40f429:	mov    rdx,QWORD PTR [rdi]
  40f42c:	mov    rsi,QWORD PTR [rdi+0x8]
  40f430:	mov    rdi,QWORD PTR [rsi+0x10]
  40f434:	mov    rdx,QWORD PTR [rdx+0x8]
  40f438:	mov    QWORD PTR [rdx+0x10],rdi
  40f43c:	mov    rsi,QWORD PTR [rsi+0x10]
  40f440:	mov    QWORD PTR [rsi+0x8],rdx
  40f444:	sub    rcx,rax
  40f447:	add    QWORD PTR [r13+0xc0],rcx
  40f44e:	mov    cl,0x1
  40f450:	mov    rax,QWORD PTR fs:0x28
  40f459:	cmp    rax,QWORD PTR [rsp+0x10]
  40f45e:	jne    40f471 <isspace@plt+0xbb61>
  40f460:	mov    eax,ecx
  40f462:	add    rsp,0x18
  40f466:	pop    rbx
  40f467:	pop    r12
  40f469:	pop    r13
  40f46b:	pop    r14
  40f46d:	pop    r15
  40f46f:	pop    rbp
  40f470:	ret    
  40f471:	call   403280 <__stack_chk_fail@plt>
  40f476:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f480:	push   r15
  40f482:	push   r14
  40f484:	push   rbx
  40f485:	sub    rsp,0x10
  40f489:	mov    r14,rsi
  40f48c:	mov    rax,QWORD PTR fs:0x28
  40f495:	mov    QWORD PTR [rsp+0x8],rax
  40f49a:	mov    rbx,QWORD PTR [rdi+0xa8]
  40f4a1:	test   rbx,rbx
  40f4a4:	jne    40f51a <isspace@plt+0xbc0a>
  40f4a6:	mov    r15,rdi
  40f4a9:	mov    edi,0x1
  40f4ae:	mov    esi,0x38
  40f4b3:	call   403460 <calloc@plt>
  40f4b8:	test   rax,rax
  40f4bb:	je     40f547 <isspace@plt+0xbc37>
  40f4c1:	mov    rbx,rax
  40f4c4:	xor    edi,edi
  40f4c6:	call   403510 <time@plt>
  40f4cb:	mov    QWORD PTR [rbx+0x28],rax
  40f4cf:	mov    QWORD PTR [r15+0xa8],rbx
  40f4d6:	mov    rax,QWORD PTR [r15+0xb0]
  40f4dd:	test   rax,rax
  40f4e0:	je     40f4f3 <isspace@plt+0xbbe3>
  40f4e2:	mov    rcx,QWORD PTR [rax+0x30]
  40f4e6:	inc    rcx
  40f4e9:	mov    QWORD PTR [rbx+0x30],rcx
  40f4ed:	mov    QWORD PTR [rax+0x20],rbx
  40f4f1:	jmp    40f4fb <isspace@plt+0xbbeb>
  40f4f3:	mov    QWORD PTR [rbx+0x30],0x0
  40f4fb:	mov    QWORD PTR [rbx+0x18],rax
  40f4ff:	mov    rax,QWORD PTR [r15+0xa0]
  40f506:	test   rax,rax
  40f509:	je     40f513 <isspace@plt+0xbc03>
  40f50b:	mov    QWORD PTR [rbx+0x10],rax
  40f50f:	mov    QWORD PTR [rax+0x8],rbx
  40f513:	mov    QWORD PTR [r15+0xa0],rbx
  40f51a:	mov    edi,0x1
  40f51f:	mov    esi,0x48
  40f524:	call   403460 <calloc@plt>
  40f529:	test   rax,rax
  40f52c:	je     40f547 <isspace@plt+0xbc37>
  40f52e:	mov    QWORD PTR [rax+0x30],r14
  40f532:	mov    rcx,QWORD PTR [rbx]
  40f535:	mov    QWORD PTR [rax+0x38],rcx
  40f539:	test   rcx,rcx
  40f53c:	je     40f542 <isspace@plt+0xbc32>
  40f53e:	mov    QWORD PTR [rcx+0x40],rax
  40f542:	mov    QWORD PTR [rbx],rax
  40f545:	jmp    40f549 <isspace@plt+0xbc39>
  40f547:	xor    eax,eax
  40f549:	mov    rcx,QWORD PTR fs:0x28
  40f552:	cmp    rcx,QWORD PTR [rsp+0x8]
  40f557:	jne    40f563 <isspace@plt+0xbc53>
  40f559:	add    rsp,0x10
  40f55d:	pop    rbx
  40f55e:	pop    r14
  40f560:	pop    r15
  40f562:	ret    
  40f563:	call   403280 <__stack_chk_fail@plt>
  40f568:	nop    DWORD PTR [rax+rax*1+0x0]
  40f570:	push   rax
  40f571:	mov    rax,QWORD PTR fs:0x28
  40f57a:	mov    QWORD PTR [rsp],rax
  40f57e:	mov    rax,QWORD PTR [rdi+0xa8]
  40f585:	test   rax,rax
  40f588:	je     40f591 <isspace@plt+0xbc81>
  40f58a:	mov    QWORD PTR [rdi+0xb0],rax
  40f591:	mov    QWORD PTR [rdi+0xa8],0x0
  40f59c:	mov    QWORD PTR [rdi+0x28],0x0
  40f5a4:	mov    rax,QWORD PTR [rdi+0xa0]
  40f5ab:	mov    r8,QWORD PTR [rax+0x10]
  40f5af:	test   r8,r8
  40f5b2:	je     40f677 <isspace@plt+0xbd67>
  40f5b8:	mov    rdx,QWORD PTR [rax]
  40f5bb:	test   rdx,rdx
  40f5be:	jne    40f602 <isspace@plt+0xbcf2>
  40f5c0:	mov    rax,0xffffffffffffffff
  40f5c7:	jmp    40f65e <isspace@plt+0xbd4e>
  40f5cc:	nop    DWORD PTR [rax+0x0]
  40f5d0:	mov    r9,QWORD PTR [rax]
  40f5d3:	mov    rcx,QWORD PTR [rax+0x18]
  40f5d7:	mov    rcx,QWORD PTR [rcx+0x8]
  40f5db:	mov    QWORD PTR [rcx+0x10],r9
  40f5df:	mov    r9,QWORD PTR [rax+0x8]
  40f5e3:	mov    rcx,QWORD PTR [rax+0x20]
  40f5e7:	mov    rcx,QWORD PTR [rcx+0x10]
  40f5eb:	mov    QWORD PTR [rcx+0x8],r9
  40f5ef:	sub    rdx,rsi
  40f5f2:	add    QWORD PTR [rdi+0xc0],rdx
  40f5f9:	mov    rdx,QWORD PTR [rax+0x38]
  40f5fd:	test   rdx,rdx
  40f600:	je     40f65a <isspace@plt+0xbd4a>
  40f602:	mov    rax,rdx
  40f605:	mov    rdx,QWORD PTR [rdx+0x10]
  40f609:	mov    rsi,QWORD PTR [rax+0x28]
  40f60d:	test   rsi,rsi
  40f610:	je     40f640 <isspace@plt+0xbd30>
  40f612:	test   rdx,rdx
  40f615:	jne    40f5d0 <isspace@plt+0xbcc0>
  40f617:	mov    r9,QWORD PTR [rax+0x18]
  40f61b:	mov    r11,QWORD PTR [rax+0x20]
  40f61f:	mov    r10,QWORD PTR [r11+0x10]
  40f623:	mov    r9,QWORD PTR [r9+0x8]
  40f627:	mov    QWORD PTR [r9+0x10],r10
  40f62b:	mov    rcx,QWORD PTR [r11+0x10]
  40f62f:	jmp    40f5eb <isspace@plt+0xbcdb>
  40f631:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f63b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f640:	test   rdx,rdx
  40f643:	je     40f5f9 <isspace@plt+0xbce9>
  40f645:	mov    r9,QWORD PTR [rax]
  40f648:	mov    rcx,QWORD PTR [r9+0x8]
  40f64c:	mov    QWORD PTR [rcx+0x10],r9
  40f650:	mov    r9,QWORD PTR [rax+0x8]
  40f654:	mov    rcx,QWORD PTR [r9+0x10]
  40f658:	jmp    40f5eb <isspace@plt+0xbcdb>
  40f65a:	mov    rax,QWORD PTR [rax+0x30]
  40f65e:	mov    QWORD PTR [rdi+0xa0],r8
  40f665:	vmovaps xmm0,XMMWORD PTR [rip+0x20fe3]        # 430650 <isspace@plt+0x2cd40>
  40f66d:	vmovups XMMWORD PTR [rdi+0x158],xmm0
  40f675:	jmp    40f67e <isspace@plt+0xbd6e>
  40f677:	mov    rax,0xffffffffffffffff
  40f67e:	mov    rcx,QWORD PTR fs:0x28
  40f687:	cmp    rcx,QWORD PTR [rsp]
  40f68b:	jne    40f68f <isspace@plt+0xbd7f>
  40f68d:	pop    rcx
  40f68e:	ret    
  40f68f:	call   403280 <__stack_chk_fail@plt>
  40f694:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f69e:	xchg   ax,ax
  40f6a0:	push   rax
  40f6a1:	mov    rax,QWORD PTR fs:0x28
  40f6aa:	mov    QWORD PTR [rsp],rax
  40f6ae:	mov    rax,QWORD PTR [rdi+0xa8]
  40f6b5:	test   rax,rax
  40f6b8:	je     40f6c1 <isspace@plt+0xbdb1>
  40f6ba:	mov    QWORD PTR [rdi+0xb0],rax
  40f6c1:	mov    QWORD PTR [rdi+0xa8],0x0
  40f6cc:	mov    QWORD PTR [rdi+0x28],0x0
  40f6d4:	mov    rax,QWORD PTR fs:0x28
  40f6dd:	cmp    rax,QWORD PTR [rsp]
  40f6e1:	jne    40f6e7 <isspace@plt+0xbdd7>
  40f6e3:	mov    al,0x1
  40f6e5:	pop    rcx
  40f6e6:	ret    
  40f6e7:	call   403280 <__stack_chk_fail@plt>
  40f6ec:	nop    DWORD PTR [rax+0x0]
  40f6f0:	push   rax
  40f6f1:	mov    rax,QWORD PTR fs:0x28
  40f6fa:	mov    QWORD PTR [rsp],rax
  40f6fe:	mov    rax,QWORD PTR [rdi+0xa8]
  40f705:	test   rax,rax
  40f708:	je     40f711 <isspace@plt+0xbe01>
  40f70a:	mov    QWORD PTR [rdi+0xb0],rax
  40f711:	mov    QWORD PTR [rdi+0xa8],0x0
  40f71c:	mov    QWORD PTR [rdi+0x28],0x0
  40f724:	mov    rax,QWORD PTR [rdi+0xa0]
  40f72b:	mov    r8,QWORD PTR [rax+0x8]
  40f72f:	test   r8,r8
  40f732:	je     40f811 <isspace@plt+0xbf01>
  40f738:	mov    rcx,QWORD PTR [r8]
  40f73b:	nop    DWORD PTR [rax+rax*1+0x0]
  40f740:	mov    rax,rcx
  40f743:	mov    rcx,QWORD PTR [rcx+0x38]
  40f747:	test   rcx,rcx
  40f74a:	jne    40f740 <isspace@plt+0xbe30>
  40f74c:	test   rax,rax
  40f74f:	jne    40f795 <isspace@plt+0xbe85>
  40f751:	mov    rax,0xffffffffffffffff
  40f758:	jmp    40f7f8 <isspace@plt+0xbee8>
  40f75d:	nop    DWORD PTR [rax]
  40f760:	mov    rax,QWORD PTR [rdx]
  40f763:	mov    r9,QWORD PTR [rdx+0x18]
  40f767:	mov    rax,QWORD PTR [rax+0x8]
  40f76b:	mov    QWORD PTR [rax+0x10],r9
  40f76f:	mov    rax,QWORD PTR [rdx+0x8]
  40f773:	mov    r9,QWORD PTR [rdx+0x20]
  40f777:	mov    rax,QWORD PTR [rax+0x10]
  40f77b:	mov    QWORD PTR [rax+0x8],r9
  40f77f:	mov    rax,rsi
  40f782:	sub    rax,rcx
  40f785:	add    QWORD PTR [rdi+0xc0],rax
  40f78c:	mov    rax,QWORD PTR [rdx+0x40]
  40f790:	test   rax,rax
  40f793:	je     40f7eb <isspace@plt+0xbedb>
  40f795:	mov    rdx,rax
  40f798:	mov    rcx,QWORD PTR [rax+0x10]
  40f79c:	mov    rsi,QWORD PTR [rax+0x28]
  40f7a0:	test   rcx,rcx
  40f7a3:	je     40f7d0 <isspace@plt+0xbec0>
  40f7a5:	test   rsi,rsi
  40f7a8:	jne    40f760 <isspace@plt+0xbe50>
  40f7aa:	mov    r9,QWORD PTR [rdx]
  40f7ad:	mov    r11,QWORD PTR [rdx+0x8]
  40f7b1:	mov    r10,QWORD PTR [r11+0x10]
  40f7b5:	mov    r9,QWORD PTR [r9+0x8]
  40f7b9:	mov    QWORD PTR [r9+0x10],r10
  40f7bd:	mov    rax,QWORD PTR [r11+0x10]
  40f7c1:	jmp    40f77b <isspace@plt+0xbe6b>
  40f7c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f7cd:	nop    DWORD PTR [rax]
  40f7d0:	test   rsi,rsi
  40f7d3:	je     40f78c <isspace@plt+0xbe7c>
  40f7d5:	mov    r9,QWORD PTR [rdx+0x18]
  40f7d9:	mov    rax,QWORD PTR [r9+0x8]
  40f7dd:	mov    QWORD PTR [rax+0x10],r9
  40f7e1:	mov    r9,QWORD PTR [rdx+0x20]
  40f7e5:	mov    rax,QWORD PTR [r9+0x10]
  40f7e9:	jmp    40f77b <isspace@plt+0xbe6b>
  40f7eb:	xor    eax,eax
  40f7ed:	sub    rsi,rcx
  40f7f0:	cmovae rax,rsi
  40f7f4:	add    rax,QWORD PTR [rdx+0x30]
  40f7f8:	mov    QWORD PTR [rdi+0xa0],r8
  40f7ff:	vmovaps xmm0,XMMWORD PTR [rip+0x20e49]        # 430650 <isspace@plt+0x2cd40>
  40f807:	vmovups XMMWORD PTR [rdi+0x158],xmm0
  40f80f:	jmp    40f818 <isspace@plt+0xbf08>
  40f811:	mov    rax,0xffffffffffffffff
  40f818:	mov    rcx,QWORD PTR fs:0x28
  40f821:	cmp    rcx,QWORD PTR [rsp]
  40f825:	jne    40f829 <isspace@plt+0xbf19>
  40f827:	pop    rcx
  40f828:	ret    
  40f829:	call   403280 <__stack_chk_fail@plt>
  40f82e:	xchg   ax,ax
  40f830:	push   rax
  40f831:	mov    rax,QWORD PTR fs:0x28
  40f83a:	mov    QWORD PTR [rsp],rax
  40f83e:	mov    rax,QWORD PTR [rdi+0xa0]
  40f845:	mov    rsi,QWORD PTR [rax+0x18]
  40f849:	call   40f870 <isspace@plt+0xbf60>
  40f84e:	mov    rcx,QWORD PTR fs:0x28
  40f857:	cmp    rcx,QWORD PTR [rsp]
  40f85b:	jne    40f85f <isspace@plt+0xbf4f>
  40f85d:	pop    rcx
  40f85e:	ret    
  40f85f:	call   403280 <__stack_chk_fail@plt>
  40f864:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f86e:	xchg   ax,ax
  40f870:	push   r15
  40f872:	push   r14
  40f874:	push   r12
  40f876:	push   rbx
  40f877:	push   rax
  40f878:	mov    rax,QWORD PTR fs:0x28
  40f881:	mov    QWORD PTR [rsp],rax
  40f885:	mov    rax,0xffffffffffffffff
  40f88c:	test   rsi,rsi
  40f88f:	je     40f981 <isspace@plt+0xc071>
  40f895:	mov    r14,rsi
  40f898:	mov    r15,rdi
  40f89b:	mov    rdx,QWORD PTR [rsi+0x10]
  40f89f:	test   rdx,rdx
  40f8a2:	je     40f8d2 <isspace@plt+0xbfc2>
  40f8a4:	xor    ecx,ecx
  40f8a6:	mov    rdi,r14
  40f8a9:	jmp    40f8bc <isspace@plt+0xbfac>
  40f8ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40f8b0:	mov    rdx,QWORD PTR [rsi+0x10]
  40f8b4:	mov    rdi,rsi
  40f8b7:	test   rdx,rdx
  40f8ba:	je     40f8cd <isspace@plt+0xbfbd>
  40f8bc:	mov    rsi,rdx
  40f8bf:	cmp    QWORD PTR [rdx+0x8],rdi
  40f8c3:	je     40f8b0 <isspace@plt+0xbfa0>
  40f8c5:	mov    QWORD PTR [rsi+0x8],rdi
  40f8c9:	mov    cl,0x1
  40f8cb:	jmp    40f8b0 <isspace@plt+0xbfa0>
  40f8cd:	test   cl,0x1
  40f8d0:	jne    40f900 <isspace@plt+0xbff0>
  40f8d2:	mov    rdx,QWORD PTR [r14+0x30]
  40f8d6:	mov    rcx,QWORD PTR [r15+0xa0]
  40f8dd:	mov    rsi,QWORD PTR [rcx+0x30]
  40f8e1:	cmp    rdx,rsi
  40f8e4:	jne    40f923 <isspace@plt+0xc013>
  40f8e6:	mov    rax,QWORD PTR [r15+0x158]
  40f8ed:	jmp    40f981 <isspace@plt+0xc071>
  40f8f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f8fc:	nop    DWORD PTR [rax+0x0]
  40f900:	mov    rbx,QWORD PTR [r15+0xa0]
  40f907:	mov    rax,QWORD PTR [rbx+0x10]
  40f90b:	test   rax,rax
  40f90e:	je     40f963 <isspace@plt+0xc053>
  40f910:	mov    r12,QWORD PTR [rax+0x8]
  40f914:	mov    rdi,r15
  40f917:	call   40f570 <isspace@plt+0xbc60>
  40f91c:	cmp    r12,rbx
  40f91f:	je     40f900 <isspace@plt+0xbff0>
  40f921:	jmp    40f978 <isspace@plt+0xc068>
  40f923:	jbe    40f943 <isspace@plt+0xc033>
  40f925:	cmp    rcx,r14
  40f928:	je     40f981 <isspace@plt+0xc071>
  40f92a:	nop    WORD PTR [rax+rax*1+0x0]
  40f930:	mov    rdi,r15
  40f933:	call   40f6f0 <isspace@plt+0xbde0>
  40f938:	cmp    QWORD PTR [r15+0xa0],r14
  40f93f:	jne    40f930 <isspace@plt+0xc020>
  40f941:	jmp    40f981 <isspace@plt+0xc071>
  40f943:	cmp    rdx,rsi
  40f946:	jae    40f981 <isspace@plt+0xc071>
  40f948:	cmp    rcx,r14
  40f94b:	je     40f981 <isspace@plt+0xc071>
  40f94d:	nop    DWORD PTR [rax]
  40f950:	mov    rdi,r15
  40f953:	call   40f570 <isspace@plt+0xbc60>
  40f958:	cmp    QWORD PTR [r15+0xa0],r14
  40f95f:	jne    40f950 <isspace@plt+0xc040>
  40f961:	jmp    40f981 <isspace@plt+0xc071>
  40f963:	mov    rdi,r15
  40f966:	call   40f570 <isspace@plt+0xbc60>
  40f96b:	jmp    40f978 <isspace@plt+0xc068>
  40f96d:	nop    DWORD PTR [rax]
  40f970:	mov    rdi,r15
  40f973:	call   40f6f0 <isspace@plt+0xbde0>
  40f978:	cmp    QWORD PTR [r15+0xa0],r14
  40f97f:	jne    40f970 <isspace@plt+0xc060>
  40f981:	mov    rcx,QWORD PTR fs:0x28
  40f98a:	cmp    rcx,QWORD PTR [rsp]
  40f98e:	jne    40f99c <isspace@plt+0xc08c>
  40f990:	add    rsp,0x8
  40f994:	pop    rbx
  40f995:	pop    r12
  40f997:	pop    r14
  40f999:	pop    r15
  40f99b:	ret    
  40f99c:	call   403280 <__stack_chk_fail@plt>
  40f9a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f9ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40f9b0:	push   rax
  40f9b1:	mov    rax,QWORD PTR fs:0x28
  40f9ba:	mov    QWORD PTR [rsp],rax
  40f9be:	mov    rax,QWORD PTR [rdi+0xa0]
  40f9c5:	mov    rsi,QWORD PTR [rax+0x20]
  40f9c9:	call   40f870 <isspace@plt+0xbf60>
  40f9ce:	mov    rcx,QWORD PTR fs:0x28
  40f9d7:	cmp    rcx,QWORD PTR [rsp]
  40f9db:	jne    40f9df <isspace@plt+0xc0cf>
  40f9dd:	pop    rcx
  40f9de:	ret    
  40f9df:	call   403280 <__stack_chk_fail@plt>
  40f9e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f9ee:	xchg   ax,ax
  40f9f0:	push   rax
  40f9f1:	mov    rax,QWORD PTR fs:0x28
  40f9fa:	mov    QWORD PTR [rsp],rax
  40f9fe:	mov    r8,QWORD PTR [rdi+0xa0]
  40fa05:	mov    rax,r8
  40fa08:	nop    DWORD PTR [rax+rax*1+0x0]
  40fa10:	mov    rcx,rax
  40fa13:	mov    rdx,QWORD PTR [rax+0x28]
  40fa17:	cmp    rdx,rsi
  40fa1a:	jle    40fa25 <isspace@plt+0xc115>
  40fa1c:	mov    rax,QWORD PTR [rcx+0x18]
  40fa20:	test   rax,rax
  40fa23:	jne    40fa10 <isspace@plt+0xc100>
  40fa25:	cmp    rdx,rsi
  40fa28:	jge    40fa4a <isspace@plt+0xc13a>
  40fa2a:	nop    WORD PTR [rax+rax*1+0x0]
  40fa30:	mov    rax,rcx
  40fa33:	mov    rcx,QWORD PTR [rcx+0x20]
  40fa37:	test   rcx,rcx
  40fa3a:	je     40fa4d <isspace@plt+0xc13d>
  40fa3c:	mov    rdx,QWORD PTR [rcx+0x28]
  40fa40:	mov    rax,rcx
  40fa43:	cmp    rdx,rsi
  40fa46:	jl     40fa30 <isspace@plt+0xc120>
  40fa48:	jmp    40fa4d <isspace@plt+0xc13d>
  40fa4a:	mov    rax,rcx
  40fa4d:	sub    rdx,rsi
  40fa50:	mov    r10,rdx
  40fa53:	neg    r10
  40fa56:	cmovl  r10,rdx
  40fa5a:	mov    rdx,QWORD PTR [rax+0x18]
  40fa5e:	test   rdx,rdx
  40fa61:	je     40fa80 <isspace@plt+0xc170>
  40fa63:	cmp    rdx,r8
  40fa66:	je     40fa80 <isspace@plt+0xc170>
  40fa68:	mov    r9,QWORD PTR [rdx+0x28]
  40fa6c:	sub    r9,rsi
  40fa6f:	mov    rcx,r9
  40fa72:	neg    rcx
  40fa75:	cmovl  rcx,r9
  40fa79:	cmp    rcx,r10
  40fa7c:	cmovl  rax,rdx
  40fa80:	mov    rdx,QWORD PTR [rax+0x20]
  40fa84:	test   rdx,rdx
  40fa87:	je     40faa6 <isspace@plt+0xc196>
  40fa89:	cmp    rdx,r8
  40fa8c:	je     40faa6 <isspace@plt+0xc196>
  40fa8e:	mov    rcx,QWORD PTR [rdx+0x28]
  40fa92:	sub    rcx,rsi
  40fa95:	mov    rsi,rcx
  40fa98:	neg    rsi
  40fa9b:	cmovl  rsi,rcx
  40fa9f:	cmp    rsi,r10
  40faa2:	cmovl  rax,rdx
  40faa6:	mov    rsi,rax
  40faa9:	call   40f870 <isspace@plt+0xbf60>
  40faae:	mov    rcx,QWORD PTR fs:0x28
  40fab7:	cmp    rcx,QWORD PTR [rsp]
  40fabb:	jne    40fabf <isspace@plt+0xc1af>
  40fabd:	pop    rcx
  40fabe:	ret    
  40fabf:	call   403280 <__stack_chk_fail@plt>
  40fac4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40face:	xchg   ax,ax
  40fad0:	push   rax
  40fad1:	mov    rax,QWORD PTR fs:0x28
  40fada:	mov    QWORD PTR [rsp],rax
  40fade:	mov    rax,QWORD PTR [rdi+0xa0]
  40fae5:	mov    rax,QWORD PTR [rax+0x28]
  40fae9:	mov    rcx,QWORD PTR fs:0x28
  40faf2:	cmp    rcx,QWORD PTR [rsp]
  40faf6:	jne    40fafa <isspace@plt+0xc1ea>
  40faf8:	pop    rcx
  40faf9:	ret    
  40fafa:	call   403280 <__stack_chk_fail@plt>
  40faff:	nop
  40fb00:	push   rbp
  40fb01:	push   r15
  40fb03:	push   r14
  40fb05:	push   r13
  40fb07:	push   r12
  40fb09:	push   rbx
  40fb0a:	push   rax
  40fb0b:	mov    r15d,edx
  40fb0e:	mov    rbp,rsi
  40fb11:	mov    r12d,edi
  40fb14:	mov    rax,QWORD PTR fs:0x28
  40fb1d:	mov    QWORD PTR [rsp],rax
  40fb21:	mov    edi,0x1
  40fb26:	mov    esi,0x168
  40fb2b:	call   403460 <calloc@plt>
  40fb30:	test   rax,rax
  40fb33:	je     40fc9b <isspace@plt+0xc38b>
  40fb39:	mov    rbx,rax
  40fb3c:	mov    edi,0x1
  40fb41:	mov    esi,0x38
  40fb46:	call   403460 <calloc@plt>
  40fb4b:	test   rax,rax
  40fb4e:	je     40fc93 <isspace@plt+0xc383>
  40fb54:	mov    r14,rax
  40fb57:	mov    QWORD PTR [rax],rbx
  40fb5a:	mov    QWORD PTR [rbx+0x20],rax
  40fb5e:	mov    rdi,rbx
  40fb61:	call   403a10 <isspace@plt+0x100>
  40fb66:	vmovdqa xmm0,XMMWORD PTR [rip+0x20ae2]        # 430650 <isspace@plt+0x2cd40>
  40fb6e:	vmovdqu XMMWORD PTR [rbx+0x158],xmm0
  40fb76:	test   rbp,rbp
  40fb79:	je     40fbed <isspace@plt+0xc2dd>
  40fb7b:	call   403130 <__errno_location@plt>
  40fb80:	mov    r13,rax
  40fb83:	mov    DWORD PTR [rax],0x0
  40fb89:	mov    rcx,rbx
  40fb8c:	add    rcx,0xc8
  40fb93:	mov    edi,r12d
  40fb96:	mov    rsi,rbp
  40fb99:	mov    edx,r15d
  40fb9c:	call   411520 <isspace@plt+0xdc10>
  40fba1:	test   rax,rax
  40fba4:	je     40fbe2 <isspace@plt+0xc2d2>
  40fba6:	mov    rbp,rax
  40fba9:	mov    rdi,rbx
  40fbac:	mov    rsi,rax
  40fbaf:	call   403e50 <isspace@plt+0x540>
  40fbb4:	test   al,al
  40fbb6:	je     40fc8b <isspace@plt+0xc37b>
  40fbbc:	vmovq  xmm0,rbx
  40fbc1:	vpbroadcastq xmm0,xmm0
  40fbc6:	vpaddq xmm0,xmm0,XMMWORD PTR [rip+0x20a92]        # 430660 <isspace@plt+0x2cd50>
  40fbce:	mov    rax,QWORD PTR [rbp+0x8]
  40fbd2:	mov    rcx,QWORD PTR [rbp+0x10]
  40fbd6:	vmovdqu XMMWORD PTR [r14+0x8],xmm0
  40fbdc:	mov    QWORD PTR [r14+0x28],rcx
  40fbe0:	jmp    40fc12 <isspace@plt+0xc302>
  40fbe2:	cmp    DWORD PTR [r13+0x0],0x0
  40fbe7:	jne    40fc93 <isspace@plt+0xc383>
  40fbed:	vmovq  xmm0,rbx
  40fbf2:	vpbroadcastq xmm0,xmm0
  40fbf7:	vpaddq xmm0,xmm0,XMMWORD PTR [rip+0x20a61]        # 430660 <isspace@plt+0x2cd50>
  40fbff:	vmovdqu XMMWORD PTR [r14+0x8],xmm0
  40fc05:	lea    rax,[rip+0x20a64]        # 430670 <isspace@plt+0x2cd60>
  40fc0c:	mov    QWORD PTR [r14+0x28],rax
  40fc10:	xor    eax,eax
  40fc12:	mov    QWORD PTR [rbx+0x38],0x0
  40fc1a:	mov    QWORD PTR [rbx+0x40],r14
  40fc1e:	vpxor  xmm0,xmm0,xmm0
  40fc22:	vmovdqu XMMWORD PTR [rbx+0x58],xmm0
  40fc27:	mov    QWORD PTR [r14+0x30],rax
  40fc2b:	mov    QWORD PTR [rbx+0x70],r14
  40fc2f:	mov    QWORD PTR [rbx+0x78],0x0
  40fc37:	vmovdqu XMMWORD PTR [rbx+0x90],xmm0
  40fc3f:	mov    QWORD PTR [rbx+0xc0],rax
  40fc46:	mov    rdi,rbx
  40fc49:	mov    rsi,0xffffffffffffffff
  40fc50:	call   40f480 <isspace@plt+0xbb70>
  40fc55:	mov    rax,QWORD PTR [rbx+0xa8]
  40fc5c:	test   rax,rax
  40fc5f:	je     40fc68 <isspace@plt+0xc358>
  40fc61:	mov    QWORD PTR [rbx+0xb0],rax
  40fc68:	mov    QWORD PTR [rbx+0xa8],0x0
  40fc73:	mov    QWORD PTR [rbx+0x28],0x0
  40fc7b:	mov    rax,QWORD PTR [rbx+0xa0]
  40fc82:	mov    QWORD PTR [rbx+0xb8],rax
  40fc89:	jmp    40fc9d <isspace@plt+0xc38d>
  40fc8b:	mov    rdi,rbp
  40fc8e:	call   4114b0 <isspace@plt+0xdba0>
  40fc93:	mov    rdi,rbx
  40fc96:	call   40fcd0 <isspace@plt+0xc3c0>
  40fc9b:	xor    ebx,ebx
  40fc9d:	mov    rax,QWORD PTR fs:0x28
  40fca6:	cmp    rax,QWORD PTR [rsp]
  40fcaa:	jne    40fcbe <isspace@plt+0xc3ae>
  40fcac:	mov    rax,rbx
  40fcaf:	add    rsp,0x8
  40fcb3:	pop    rbx
  40fcb4:	pop    r12
  40fcb6:	pop    r13
  40fcb8:	pop    r14
  40fcba:	pop    r15
  40fcbc:	pop    rbp
  40fcbd:	ret    
  40fcbe:	call   403280 <__stack_chk_fail@plt>
  40fcc3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fccd:	nop    DWORD PTR [rax]
  40fcd0:	push   r15
  40fcd2:	push   r14
  40fcd4:	push   r13
  40fcd6:	push   r12
  40fcd8:	push   rbx
  40fcd9:	sub    rsp,0x10
  40fcdd:	mov    rax,QWORD PTR fs:0x28
  40fce6:	mov    QWORD PTR [rsp+0x8],rax
  40fceb:	test   rdi,rdi
  40fcee:	je     40fecb <isspace@plt+0xc5bb>
  40fcf4:	mov    r14,rdi
  40fcf7:	mov    rax,QWORD PTR [rdi+0xa0]
  40fcfe:	xchg   ax,ax
  40fd00:	test   rax,rax
  40fd03:	je     40fe1f <isspace@plt+0xc50f>
  40fd09:	mov    r15,rax
  40fd0c:	mov    rax,QWORD PTR [rax+0x10]
  40fd10:	test   rax,rax
  40fd13:	jne    40fd00 <isspace@plt+0xc3f0>
  40fd15:	jmp    40fd34 <isspace@plt+0xc424>
  40fd17:	nop    WORD PTR [rax+rax*1+0x0]
  40fd20:	mov    rdi,r15
  40fd23:	call   4030d0 <free@plt>
  40fd28:	mov    r15,r12
  40fd2b:	test   r12,r12
  40fd2e:	je     40fe1f <isspace@plt+0xc50f>
  40fd34:	mov    rbx,QWORD PTR [r15]
  40fd37:	mov    r12,QWORD PTR [r15+0x20]
  40fd3b:	test   rbx,rbx
  40fd3e:	jne    40fd65 <isspace@plt+0xc455>
  40fd40:	jmp    40fd20 <isspace@plt+0xc410>
  40fd42:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fd4c:	nop    DWORD PTR [rax+0x0]
  40fd50:	call   4030d0 <free@plt>
  40fd55:	mov    rdi,rbx
  40fd58:	call   4030d0 <free@plt>
  40fd5d:	mov    rbx,r13
  40fd60:	test   r13,r13
  40fd63:	je     40fd20 <isspace@plt+0xc410>
  40fd65:	mov    r13,QWORD PTR [rbx+0x38]
  40fd69:	mov    rdi,QWORD PTR [rbx+0x18]
  40fd6d:	mov    rax,QWORD PTR [rbx+0x20]
  40fd71:	cmp    rdi,rax
  40fd74:	je     40fdb4 <isspace@plt+0xc4a4>
  40fd76:	test   rax,rax
  40fd79:	je     40fdb4 <isspace@plt+0xc4a4>
  40fd7b:	mov    rcx,QWORD PTR [rax+0x18]
  40fd7f:	test   rcx,rcx
  40fd82:	je     40fd8c <isspace@plt+0xc47c>
  40fd84:	mov    rdx,QWORD PTR [rax+0x20]
  40fd88:	mov    QWORD PTR [rcx+0x20],rdx
  40fd8c:	mov    rdx,QWORD PTR [rax+0x20]
  40fd90:	test   rdx,rdx
  40fd93:	je     40fd99 <isspace@plt+0xc489>
  40fd95:	mov    QWORD PTR [rdx+0x18],rcx
  40fd99:	mov    rcx,QWORD PTR [rax]
  40fd9c:	cmp    QWORD PTR [rcx+0x20],rax
  40fda0:	je     40fe0b <isspace@plt+0xc4fb>
  40fda2:	cmp    QWORD PTR [rcx+0x28],rax
  40fda6:	je     40fe15 <isspace@plt+0xc505>
  40fda8:	mov    rdi,rax
  40fdab:	call   4030d0 <free@plt>
  40fdb0:	mov    rdi,QWORD PTR [rbx+0x18]
  40fdb4:	test   rdi,rdi
  40fdb7:	je     40fd55 <isspace@plt+0xc445>
  40fdb9:	mov    rax,QWORD PTR [rdi+0x18]
  40fdbd:	test   rax,rax
  40fdc0:	je     40fdca <isspace@plt+0xc4ba>
  40fdc2:	mov    rcx,QWORD PTR [rdi+0x20]
  40fdc6:	mov    QWORD PTR [rax+0x20],rcx
  40fdca:	mov    rcx,QWORD PTR [rdi+0x20]
  40fdce:	test   rcx,rcx
  40fdd1:	je     40fdd7 <isspace@plt+0xc4c7>
  40fdd3:	mov    QWORD PTR [rcx+0x18],rax
  40fdd7:	mov    rax,QWORD PTR [rdi]
  40fdda:	cmp    QWORD PTR [rax+0x20],rdi
  40fdde:	je     40fdf0 <isspace@plt+0xc4e0>
  40fde0:	cmp    QWORD PTR [rax+0x28],rdi
  40fde4:	jne    40fd50 <isspace@plt+0xc440>
  40fdea:	jmp    40fdfe <isspace@plt+0xc4ee>
  40fdec:	nop    DWORD PTR [rax+0x0]
  40fdf0:	mov    QWORD PTR [rax+0x20],rcx
  40fdf4:	cmp    QWORD PTR [rax+0x28],rdi
  40fdf8:	jne    40fd50 <isspace@plt+0xc440>
  40fdfe:	mov    QWORD PTR [rax+0x28],0x0
  40fe06:	jmp    40fd50 <isspace@plt+0xc440>
  40fe0b:	mov    QWORD PTR [rcx+0x20],rdx
  40fe0f:	cmp    QWORD PTR [rcx+0x28],rax
  40fe13:	jne    40fda8 <isspace@plt+0xc498>
  40fe15:	mov    QWORD PTR [rcx+0x28],0x0
  40fe1d:	jmp    40fda8 <isspace@plt+0xc498>
  40fe1f:	mov    rdi,QWORD PTR [r14+0x20]
  40fe23:	test   rdi,rdi
  40fe26:	jne    40fe3d <isspace@plt+0xc52d>
  40fe28:	jmp    40fe84 <isspace@plt+0xc574>
  40fe2a:	nop    WORD PTR [rax+rax*1+0x0]
  40fe30:	call   4030d0 <free@plt>
  40fe35:	mov    rdi,rbx
  40fe38:	test   rbx,rbx
  40fe3b:	je     40fe84 <isspace@plt+0xc574>
  40fe3d:	mov    rcx,QWORD PTR [rdi+0x18]
  40fe41:	mov    rbx,QWORD PTR [rdi+0x20]
  40fe45:	mov    rax,rbx
  40fe48:	test   rcx,rcx
  40fe4b:	je     40fe55 <isspace@plt+0xc545>
  40fe4d:	mov    QWORD PTR [rcx+0x20],rbx
  40fe51:	mov    rax,QWORD PTR [rdi+0x20]
  40fe55:	test   rax,rax
  40fe58:	je     40fe5e <isspace@plt+0xc54e>
  40fe5a:	mov    QWORD PTR [rax+0x18],rcx
  40fe5e:	mov    rcx,QWORD PTR [rdi]
  40fe61:	cmp    QWORD PTR [rcx+0x20],rdi
  40fe65:	je     40fe70 <isspace@plt+0xc560>
  40fe67:	cmp    QWORD PTR [rcx+0x28],rdi
  40fe6b:	jne    40fe30 <isspace@plt+0xc520>
  40fe6d:	jmp    40fe7a <isspace@plt+0xc56a>
  40fe6f:	nop
  40fe70:	mov    QWORD PTR [rcx+0x20],rax
  40fe74:	cmp    QWORD PTR [rcx+0x28],rdi
  40fe78:	jne    40fe30 <isspace@plt+0xc520>
  40fe7a:	mov    QWORD PTR [rcx+0x28],0x0
  40fe82:	jmp    40fe30 <isspace@plt+0xc520>
  40fe84:	mov    rdi,r14
  40fe87:	call   403fa0 <isspace@plt+0x690>
  40fe8c:	test   rax,rax
  40fe8f:	je     40febb <isspace@plt+0xc5ab>
  40fe91:	mov    r15,rax
  40fe94:	xor    ebx,ebx
  40fe96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40fea0:	mov    rdi,r14
  40fea3:	mov    rsi,rbx
  40fea6:	call   403c70 <isspace@plt+0x360>
  40feab:	mov    rdi,rax
  40feae:	call   4114b0 <isspace@plt+0xdba0>
  40feb3:	inc    rbx
  40feb6:	cmp    r15,rbx
  40feb9:	jne    40fea0 <isspace@plt+0xc590>
  40febb:	mov    rdi,r14
  40febe:	call   403b50 <isspace@plt+0x240>
  40fec3:	mov    rdi,r14
  40fec6:	call   4030d0 <free@plt>
  40fecb:	mov    rax,QWORD PTR fs:0x28
  40fed4:	cmp    rax,QWORD PTR [rsp+0x8]
  40fed9:	jne    40fee9 <isspace@plt+0xc5d9>
  40fedb:	add    rsp,0x10
  40fedf:	pop    rbx
  40fee0:	pop    r12
  40fee2:	pop    r13
  40fee4:	pop    r14
  40fee6:	pop    r15
  40fee8:	ret    
  40fee9:	call   403280 <__stack_chk_fail@plt>
  40feee:	xchg   ax,ax
  40fef0:	push   rax
  40fef1:	mov    rcx,QWORD PTR fs:0x28
  40fefa:	mov    QWORD PTR [rsp],rcx
  40fefe:	vmovups ymm0,YMMWORD PTR [rsi+0x138]
  40ff06:	vmovups YMMWORD PTR [rdi+0x70],ymm0
  40ff0b:	vmovups ymm0,YMMWORD PTR [rsi+0xc8]
  40ff13:	vmovups ymm1,YMMWORD PTR [rsi+0xe8]
  40ff1b:	vmovups ymm2,YMMWORD PTR [rsi+0x108]
  40ff23:	vmovups ymm3,YMMWORD PTR [rsi+0x128]
  40ff2b:	vmovups YMMWORD PTR [rdi+0x60],ymm3
  40ff30:	vmovups YMMWORD PTR [rdi+0x40],ymm2
  40ff35:	vmovups YMMWORD PTR [rdi+0x20],ymm1
  40ff3a:	vmovups YMMWORD PTR [rdi],ymm0
  40ff3e:	mov    rcx,QWORD PTR fs:0x28
  40ff47:	cmp    rcx,QWORD PTR [rsp]
  40ff4b:	jne    40ff55 <isspace@plt+0xc645>
  40ff4d:	mov    rax,rdi
  40ff50:	pop    rcx
  40ff51:	vzeroupper 
  40ff54:	ret    
  40ff55:	vzeroupper 
  40ff58:	call   403280 <__stack_chk_fail@plt>
  40ff5d:	nop    DWORD PTR [rax]
  40ff60:	push   rax
  40ff61:	mov    rax,QWORD PTR fs:0x28
  40ff6a:	mov    QWORD PTR [rsp],rax
  40ff6e:	test   rsi,rsi
  40ff71:	je     40ffb3 <isspace@plt+0xc6a3>
  40ff73:	vmovups ymm0,YMMWORD PTR [rsi+0x70]
  40ff78:	vmovups YMMWORD PTR [rdi+0x138],ymm0
  40ff80:	vmovups ymm0,YMMWORD PTR [rsi]
  40ff84:	vmovups ymm1,YMMWORD PTR [rsi+0x20]
  40ff89:	vmovups ymm2,YMMWORD PTR [rsi+0x40]
  40ff8e:	vmovups ymm3,YMMWORD PTR [rsi+0x60]
  40ff93:	vmovups YMMWORD PTR [rdi+0x128],ymm3
  40ff9b:	vmovups YMMWORD PTR [rdi+0x108],ymm2
  40ffa3:	vmovups YMMWORD PTR [rdi+0xe8],ymm1
  40ffab:	vmovups YMMWORD PTR [rdi+0xc8],ymm0
  40ffb3:	mov    rcx,QWORD PTR [rdi+0xa0]
  40ffba:	mov    rax,QWORD PTR [rdi+0xa8]
  40ffc1:	mov    QWORD PTR [rdi+0xb8],rcx
  40ffc8:	test   rax,rax
  40ffcb:	je     40ffd4 <isspace@plt+0xc6c4>
  40ffcd:	mov    QWORD PTR [rdi+0xb0],rax
  40ffd4:	mov    QWORD PTR [rdi+0xa8],0x0
  40ffdf:	mov    QWORD PTR [rdi+0x28],0x0
  40ffe7:	mov    rax,QWORD PTR fs:0x28
  40fff0:	cmp    rax,QWORD PTR [rsp]
  40fff4:	jne    40fffb <isspace@plt+0xc6eb>
  40fff6:	pop    rax
  40fff7:	vzeroupper 
  40fffa:	ret    
  40fffb:	vzeroupper 
  40fffe:	call   403280 <__stack_chk_fail@plt>
  410003:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41000d:	nop    DWORD PTR [rax]
  410010:	push   rax
  410011:	mov    rax,QWORD PTR fs:0x28
  41001a:	mov    QWORD PTR [rsp],rax
  41001e:	xor    esi,esi
  410020:	call   403c70 <isspace@plt+0x360>
  410025:	test   rax,rax
  410028:	je     410030 <isspace@plt+0xc720>
  41002a:	cmp    DWORD PTR [rax+0x18],0x0
  41002e:	je     410043 <isspace@plt+0xc733>
  410030:	xor    eax,eax
  410032:	mov    rcx,QWORD PTR fs:0x28
  41003b:	cmp    rcx,QWORD PTR [rsp]
  41003f:	jne    41004b <isspace@plt+0xc73b>
  410041:	pop    rcx
  410042:	ret    
  410043:	cmp    QWORD PTR [rax],0x0
  410047:	jne    410032 <isspace@plt+0xc722>
  410049:	jmp    410030 <isspace@plt+0xc720>
  41004b:	call   403280 <__stack_chk_fail@plt>
  410050:	push   rbp
  410051:	push   r15
  410053:	push   r14
  410055:	push   r13
  410057:	push   r12
  410059:	push   rbx
  41005a:	sub    rsp,0x28
  41005e:	mov    rax,QWORD PTR fs:0x28
  410067:	mov    QWORD PTR [rsp+0x20],rax
  41006c:	mov    r12b,0x1
  41006f:	test   rdx,rdx
  410072:	je     4103c5 <isspace@plt+0xcab5>
  410078:	mov    r13,rdx
  41007b:	mov    rbx,rsi
  41007e:	mov    rax,rsi
  410081:	not    rax
  410084:	cmp    rax,rdx
  410087:	jb     4103c2 <isspace@plt+0xcab2>
  41008d:	mov    r14,rdi
  410090:	lea    rax,[rbx+r13*1]
  410094:	cmp    rax,QWORD PTR [rdi+0xc0]
  41009b:	ja     4103c2 <isspace@plt+0xcab2>
  4100a1:	cmp    QWORD PTR [r14+0x158],rbx
  4100a8:	jbe    4100bb <isspace@plt+0xc7ab>
  4100aa:	vmovaps xmm0,XMMWORD PTR [rip+0x2059e]        # 430650 <isspace@plt+0x2cd40>
  4100b2:	vmovups XMMWORD PTR [r14+0x158],xmm0
  4100bb:	mov    rcx,QWORD PTR [r14+0x40]
  4100bf:	test   rcx,rcx
  4100c2:	je     4103c2 <isspace@plt+0xcab2>
  4100c8:	lea    rbp,[r14+0x30]
  4100cc:	xor    eax,eax
  4100ce:	jmp    4100e3 <isspace@plt+0xc7d3>
  4100d0:	mov    rcx,QWORD PTR [rdx+0x10]
  4100d4:	mov    rbp,rdx
  4100d7:	mov    rax,rsi
  4100da:	test   rcx,rcx
  4100dd:	je     4103c2 <isspace@plt+0xcab2>
  4100e3:	mov    rdx,rcx
  4100e6:	mov    rsi,QWORD PTR [rbp+0x30]
  4100ea:	add    rsi,rax
  4100ed:	cmp    rax,rbx
  4100f0:	ja     4100d0 <isspace@plt+0xc7c0>
  4100f2:	cmp    rsi,rbx
  4100f5:	jb     4100d0 <isspace@plt+0xc7c0>
  4100f7:	mov    rcx,rbx
  4100fa:	sub    rcx,rax
  4100fd:	mov    QWORD PTR [rsp+0x8],rcx
  410102:	mov    rdi,r14
  410105:	call   403fa0 <isspace@plt+0x690>
  41010a:	lea    rsi,[rax-0x1]
  41010e:	mov    rdi,r14
  410111:	call   403c70 <isspace@plt+0x360>
  410116:	test   rax,rax
  410119:	je     410202 <isspace@plt+0xc8f2>
  41011f:	mov    rcx,QWORD PTR [r14+0x28]
  410123:	test   rcx,rcx
  410126:	je     410202 <isspace@plt+0xc8f2>
  41012c:	mov    rdx,QWORD PTR [r14+0xa8]
  410133:	test   rdx,rdx
  410136:	je     410202 <isspace@plt+0xc8f2>
  41013c:	cmp    rcx,rbp
  41013f:	jne    410202 <isspace@plt+0xc8f2>
  410145:	mov    rcx,QWORD PTR [rdx]
  410148:	test   rcx,rcx
  41014b:	je     410202 <isspace@plt+0xc8f2>
  410151:	mov    rdx,QWORD PTR [rcx+0x20]
  410155:	add    rcx,0x18
  410159:	xor    esi,esi
  41015b:	mov    edi,0x1
  410160:	mov    rcx,QWORD PTR [rcx]
  410163:	cmp    rcx,rbp
  410166:	movzx  esi,sil
  41016a:	cmove  esi,edi
  41016d:	cmp    rcx,rdx
  410170:	je     41017e <isspace@plt+0xc86e>
  410172:	add    rcx,0x10
  410176:	test   sil,0x1
  41017a:	je     410160 <isspace@plt+0xc850>
  41017c:	jmp    410184 <isspace@plt+0xc874>
  41017e:	test   sil,0x1
  410182:	je     410202 <isspace@plt+0xc8f2>
  410184:	mov    rcx,QWORD PTR [rbp+0x28]
  410188:	add    rcx,QWORD PTR [rbp+0x30]
  41018c:	mov    rdx,QWORD PTR [rax+0x10]
  410190:	add    rdx,QWORD PTR [rax+0x8]
  410194:	cmp    rcx,rdx
  410197:	jne    410202 <isspace@plt+0xc8f2>
  410199:	mov    rdi,r14
  41019c:	call   403fa0 <isspace@plt+0x690>
  4101a1:	lea    rsi,[rax-0x1]
  4101a5:	mov    rdi,r14
  4101a8:	call   403c70 <isspace@plt+0x360>
  4101ad:	mov    rcx,QWORD PTR [rsp+0x8]
  4101b2:	not    rcx
  4101b5:	cmp    rcx,r13
  4101b8:	jb     410202 <isspace@plt+0xc8f2>
  4101ba:	mov    rcx,QWORD PTR [rsp+0x8]
  4101bf:	add    rcx,r13
  4101c2:	cmp    rcx,QWORD PTR [rbp+0x30]
  4101c6:	ja     410202 <isspace@plt+0xc8f2>
  4101c8:	mov    rsi,QWORD PTR [rbp+0x28]
  4101cc:	add    rsi,QWORD PTR [rsp+0x8]
  4101d1:	sub    rsi,QWORD PTR [rax+0x10]
  4101d5:	mov    rdi,rax
  4101d8:	mov    rdx,r13
  4101db:	call   411780 <isspace@plt+0xde70>
  4101e0:	test   al,al
  4101e2:	je     410202 <isspace@plt+0xc8f2>
  4101e4:	sub    QWORD PTR [rbp+0x30],r13
  4101e8:	mov    rax,QWORD PTR [r14+0xa8]
  4101ef:	mov    rax,QWORD PTR [rax]
  4101f2:	sub    QWORD PTR [rax+0x28],r13
  4101f6:	sub    QWORD PTR [r14+0xc0],r13
  4101fd:	jmp    4103c5 <isspace@plt+0xcab5>
  410202:	mov    rdi,r14
  410205:	mov    rsi,rbx
  410208:	call   40f480 <isspace@plt+0xbb70>
  41020d:	test   rax,rax
  410210:	je     4103c2 <isspace@plt+0xcab2>
  410216:	mov    rbx,rax
  410219:	mov    r15,QWORD PTR [rbp+0x30]
  41021d:	sub    r15,QWORD PTR [rsp+0x8]
  410222:	jne    410233 <isspace@plt+0xc923>
  410224:	mov    r8,QWORD PTR [rbp+0x10]
  410228:	xor    r9d,r9d
  41022b:	mov    rdi,rbp
  41022e:	xor    r15d,r15d
  410231:	jmp    410278 <isspace@plt+0xc968>
  410233:	mov    edi,0x1
  410238:	mov    esi,0x38
  41023d:	call   403460 <calloc@plt>
  410242:	test   rax,rax
  410245:	je     4103c2 <isspace@plt+0xcab2>
  41024b:	mov    rdi,rax
  41024e:	mov    QWORD PTR [rax],r14
  410251:	mov    rax,QWORD PTR [r14+0x20]
  410255:	mov    QWORD PTR [rdi+0x20],rax
  410259:	test   rax,rax
  41025c:	je     410262 <isspace@plt+0xc952>
  41025e:	mov    QWORD PTR [rax+0x18],rdi
  410262:	mov    QWORD PTR [r14+0x20],rdi
  410266:	mov    r9b,0x1
  410269:	mov    r8,rbp
  41026c:	jmp    410278 <isspace@plt+0xc968>
  41026e:	xchg   ax,ax
  410270:	mov    rbp,QWORD PTR [rbp+0x10]
  410274:	add    r15,QWORD PTR [rbp+0x30]
  410278:	cmp    r15,r13
  41027b:	jb     410270 <isspace@plt+0xc960>
  41027d:	sub    r15,r13
  410280:	jne    4102b9 <isspace@plt+0xc9a9>
  410282:	mov    rax,QWORD PTR [rbp+0x10]
  410286:	xor    esi,esi
  410288:	test   r9b,r9b
  41028b:	je     41032e <isspace@plt+0xca1e>
  410291:	mov    rcx,QWORD PTR [r8+0x8]
  410295:	mov    rdx,QWORD PTR [r8+0x28]
  410299:	mov    QWORD PTR [rdi+0x8],rcx
  41029d:	mov    QWORD PTR [rdi+0x10],rax
  4102a1:	mov    QWORD PTR [rdi+0x28],rdx
  4102a5:	mov    rcx,QWORD PTR [rsp+0x8]
  4102aa:	mov    QWORD PTR [rdi+0x30],rcx
  4102ae:	xor    ecx,ecx
  4102b0:	test   sil,sil
  4102b3:	cmove  rcx,rdi
  4102b7:	jmp    410332 <isspace@plt+0xca22>
  4102b9:	mov    QWORD PTR [rsp+0x10],r9
  4102be:	mov    QWORD PTR [rsp+0x18],rdi
  4102c3:	mov    r13,r8
  4102c6:	mov    edi,0x1
  4102cb:	mov    esi,0x38
  4102d0:	call   403460 <calloc@plt>
  4102d5:	test   rax,rax
  4102d8:	je     4103c2 <isspace@plt+0xcab2>
  4102de:	mov    QWORD PTR [rax],r14
  4102e1:	mov    rcx,QWORD PTR [r14+0x20]
  4102e5:	mov    QWORD PTR [rax+0x20],rcx
  4102e9:	test   rcx,rcx
  4102ec:	mov    r8,r13
  4102ef:	mov    r9,QWORD PTR [rsp+0x10]
  4102f4:	je     4102fa <isspace@plt+0xc9ea>
  4102f6:	mov    QWORD PTR [rcx+0x18],rax
  4102fa:	mov    QWORD PTR [r14+0x20],rax
  4102fe:	mov    rcx,QWORD PTR [rbp+0x10]
  410302:	mov    rdx,QWORD PTR [rbp+0x28]
  410306:	add    rdx,QWORD PTR [rbp+0x30]
  41030a:	sub    rdx,r15
  41030d:	mov    rdi,QWORD PTR [rsp+0x18]
  410312:	mov    QWORD PTR [rax+0x8],rdi
  410316:	mov    QWORD PTR [rax+0x10],rcx
  41031a:	mov    QWORD PTR [rax+0x28],rdx
  41031e:	mov    QWORD PTR [rax+0x30],r15
  410322:	mov    sil,0x1
  410325:	test   r9b,r9b
  410328:	jne    410291 <isspace@plt+0xc981>
  41032e:	xor    edi,edi
  410330:	xor    ecx,ecx
  410332:	test   r9b,r9b
  410335:	mov    rdx,rax
  410338:	cmovne rdx,rdi
  41033c:	test   sil,sil
  41033f:	cmove  rdx,rdi
  410343:	cmovne rcx,rax
  410347:	mov    QWORD PTR [rbx+0x18],rdx
  41034b:	mov    QWORD PTR [rbx+0x20],rcx
  41034f:	xor    eax,eax
  410351:	test   rdx,rdx
  410354:	je     410372 <isspace@plt+0xca62>
  410356:	mov    rsi,rdx
  410359:	nop    DWORD PTR [rax+0x0]
  410360:	add    rax,QWORD PTR [rsi+0x30]
  410364:	cmp    rsi,rcx
  410367:	je     410372 <isspace@plt+0xca62>
  410369:	mov    rsi,QWORD PTR [rsi+0x10]
  41036d:	test   rsi,rsi
  410370:	jne    410360 <isspace@plt+0xca50>
  410372:	mov    QWORD PTR [rbx+0x28],rax
  410376:	mov    QWORD PTR [rbx],r8
  410379:	mov    QWORD PTR [rbx+0x8],rbp
  41037d:	test   r8,r8
  410380:	je     4103e7 <isspace@plt+0xcad7>
  410382:	xor    esi,esi
  410384:	mov    rdi,r8
  410387:	nop    WORD PTR [rax+rax*1+0x0]
  410390:	add    rsi,QWORD PTR [rdi+0x30]
  410394:	cmp    rdi,rbp
  410397:	je     4103a2 <isspace@plt+0xca92>
  410399:	mov    rdi,QWORD PTR [rdi+0x10]
  41039d:	test   rdi,rdi
  4103a0:	jne    410390 <isspace@plt+0xca80>
  4103a2:	mov    QWORD PTR [rbx+0x10],rsi
  4103a6:	test   rsi,rsi
  4103a9:	je     4103ef <isspace@plt+0xcadf>
  4103ab:	test   rax,rax
  4103ae:	je     410408 <isspace@plt+0xcaf8>
  4103b0:	mov    rdi,QWORD PTR [r8+0x8]
  4103b4:	mov    QWORD PTR [rdi+0x10],rdx
  4103b8:	mov    rdx,QWORD PTR [rbp+0x10]
  4103bc:	mov    QWORD PTR [rdx+0x8],rcx
  4103c0:	jmp    41041c <isspace@plt+0xcb0c>
  4103c2:	xor    r12d,r12d
  4103c5:	mov    rax,QWORD PTR fs:0x28
  4103ce:	cmp    rax,QWORD PTR [rsp+0x20]
  4103d3:	jne    410428 <isspace@plt+0xcb18>
  4103d5:	mov    eax,r12d
  4103d8:	add    rsp,0x28
  4103dc:	pop    rbx
  4103dd:	pop    r12
  4103df:	pop    r13
  4103e1:	pop    r14
  4103e3:	pop    r15
  4103e5:	pop    rbp
  4103e6:	ret    
  4103e7:	mov    QWORD PTR [rbx+0x10],0x0
  4103ef:	test   rax,rax
  4103f2:	je     4103c5 <isspace@plt+0xcab5>
  4103f4:	mov    rsi,QWORD PTR [rdx+0x8]
  4103f8:	mov    QWORD PTR [rsi+0x10],rdx
  4103fc:	mov    rdx,QWORD PTR [rcx+0x10]
  410400:	mov    QWORD PTR [rdx+0x8],rcx
  410404:	xor    esi,esi
  410406:	jmp    41041c <isspace@plt+0xcb0c>
  410408:	mov    rcx,QWORD PTR [rbp+0x10]
  41040c:	mov    rdx,QWORD PTR [r8+0x8]
  410410:	mov    QWORD PTR [rdx+0x10],rcx
  410414:	mov    rcx,QWORD PTR [rbp+0x10]
  410418:	mov    QWORD PTR [rcx+0x8],rdx
  41041c:	sub    rax,rsi
  41041f:	add    QWORD PTR [r14+0xc0],rax
  410426:	jmp    4103c5 <isspace@plt+0xcab5>
  410428:	call   403280 <__stack_chk_fail@plt>
  41042d:	nop    DWORD PTR [rax]
  410430:	push   r15
  410432:	push   r14
  410434:	push   rbx
  410435:	sub    rsp,0x10
  410439:	mov    rbx,rsi
  41043c:	mov    r14,rdi
  41043f:	mov    rax,QWORD PTR fs:0x28
  410448:	mov    QWORD PTR [rsp+0x8],rax
  41044d:	mov    rdi,rsi
  410450:	call   416fc0 <isspace@plt+0x136b0>
  410455:	test   al,al
  410457:	je     410484 <isspace@plt+0xcb74>
  410459:	mov    r15,QWORD PTR [rbx]
  41045c:	mov    rdi,rbx
  41045f:	call   417020 <isspace@plt+0x13710>
  410464:	mov    rdi,r14
  410467:	mov    rsi,r15
  41046a:	mov    rdx,rax
  41046d:	call   410050 <isspace@plt+0xc740>
  410472:	mov    rcx,QWORD PTR fs:0x28
  41047b:	cmp    rcx,QWORD PTR [rsp+0x8]
  410480:	je     410496 <isspace@plt+0xcb86>
  410482:	jmp    4104a0 <isspace@plt+0xcb90>
  410484:	mov    rax,QWORD PTR fs:0x28
  41048d:	cmp    rax,QWORD PTR [rsp+0x8]
  410492:	jne    4104a0 <isspace@plt+0xcb90>
  410494:	xor    eax,eax
  410496:	add    rsp,0x10
  41049a:	pop    rbx
  41049b:	pop    r14
  41049d:	pop    r15
  41049f:	ret    
  4104a0:	call   403280 <__stack_chk_fail@plt>
  4104a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4104af:	nop
  4104b0:	push   rax
  4104b1:	mov    rax,QWORD PTR fs:0x28
  4104ba:	mov    QWORD PTR [rsp],rax
  4104be:	mov    rax,QWORD PTR [rdi+0xb8]
  4104c5:	cmp    rax,QWORD PTR [rdi+0xa0]
  4104cc:	setne  al
  4104cf:	mov    rcx,QWORD PTR fs:0x28
  4104d8:	cmp    rcx,QWORD PTR [rsp]
  4104dc:	jne    4104e0 <isspace@plt+0xcbd0>
  4104de:	pop    rcx
  4104df:	ret    
  4104e0:	call   403280 <__stack_chk_fail@plt>
  4104e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4104ef:	nop
  4104f0:	push   r15
  4104f2:	push   r14
  4104f4:	push   r12
  4104f6:	push   rbx
  4104f7:	push   rax
  4104f8:	mov    r14,rsi
  4104fb:	mov    r15,rdi
  4104fe:	mov    rax,QWORD PTR fs:0x28
  410507:	mov    QWORD PTR [rsp],rax
  41050b:	call   403fa0 <isspace@plt+0x690>
  410510:	test   rax,rax
  410513:	je     41054e <isspace@plt+0xcc3e>
  410515:	mov    r12,rax
  410518:	xor    ebx,ebx
  41051a:	jmp    410528 <isspace@plt+0xcc18>
  41051c:	nop    DWORD PTR [rax+0x0]
  410520:	inc    rbx
  410523:	cmp    r12,rbx
  410526:	je     41054e <isspace@plt+0xcc3e>
  410528:	mov    rdi,r15
  41052b:	mov    rsi,rbx
  41052e:	call   403c70 <isspace@plt+0x360>
  410533:	cmp    DWORD PTR [rax+0x18],0x1
  410537:	ja     410520 <isspace@plt+0xcc10>
  410539:	mov    rcx,QWORD PTR [rax+0x10]
  41053d:	cmp    rcx,r14
  410540:	ja     410520 <isspace@plt+0xcc10>
  410542:	add    rcx,QWORD PTR [rax]
  410545:	cmp    rcx,r14
  410548:	jbe    410520 <isspace@plt+0xcc10>
  41054a:	mov    al,0x1
  41054c:	jmp    410550 <isspace@plt+0xcc40>
  41054e:	xor    eax,eax
  410550:	mov    rcx,QWORD PTR fs:0x28
  410559:	cmp    rcx,QWORD PTR [rsp]
  41055d:	jne    41056b <isspace@plt+0xcc5b>
  41055f:	add    rsp,0x8
  410563:	pop    rbx
  410564:	pop    r12
  410566:	pop    r14
  410568:	pop    r15
  41056a:	ret    
  41056b:	call   403280 <__stack_chk_fail@plt>
  410570:	push   rbx
  410571:	sub    rsp,0x10
  410575:	mov    rax,rdi
  410578:	mov    rcx,QWORD PTR fs:0x28
  410581:	mov    QWORD PTR [rsp+0x8],rcx
  410586:	mov    rbx,QWORD PTR [rsi+0x40]
  41058a:	mov    rdi,QWORD PTR [rbx+0x10]
  41058e:	test   rdi,rdi
  410591:	je     4105dd <isspace@plt+0xcccd>
  410593:	xor    esi,esi
  410595:	mov    r11,rbx
  410598:	jmp    4105af <isspace@plt+0xcc9f>
  41059a:	nop    WORD PTR [rax+rax*1+0x0]
  4105a0:	mov    rdi,QWORD PTR [rbx+0x10]
  4105a4:	mov    r11,rbx
  4105a7:	mov    rsi,rcx
  4105aa:	test   rdi,rdi
  4105ad:	je     4105df <isspace@plt+0xcccf>
  4105af:	mov    rbx,rdi
  4105b2:	mov    r9,QWORD PTR [r11+0x30]
  4105b6:	lea    rcx,[r9+rsi*1]
  4105ba:	cmp    rsi,rdx
  4105bd:	ja     4105a0 <isspace@plt+0xcc90>
  4105bf:	cmp    rcx,rdx
  4105c2:	jbe    4105a0 <isspace@plt+0xcc90>
  4105c4:	mov    r8,rdx
  4105c7:	sub    r8,rsi
  4105ca:	test   r11,r11
  4105cd:	jne    410609 <isspace@plt+0xccf9>
  4105cf:	xor    r11d,r11d
  4105d2:	xor    r9d,r9d
  4105d5:	xor    r10d,r10d
  4105d8:	xor    r8d,r8d
  4105db:	jmp    41061e <isspace@plt+0xcd0e>
  4105dd:	xor    ecx,ecx
  4105df:	xor    r11d,r11d
  4105e2:	mov    r9d,0x0
  4105e8:	mov    r10d,0x0
  4105ee:	mov    r8d,0x0
  4105f4:	cmp    rcx,rdx
  4105f7:	jne    41061e <isspace@plt+0xcd0e>
  4105f9:	mov    r11,QWORD PTR [rbx+0x8]
  4105fd:	mov    r9,QWORD PTR [r11+0x30]
  410601:	mov    r8,r9
  410604:	test   r11,r11
  410607:	je     4105cf <isspace@plt+0xccbf>
  410609:	mov    r10,QWORD PTR [r11+0x28]
  41060d:	add    r9,r10
  410610:	add    r8,r10
  410613:	test   r10,r10
  410616:	cmove  r9,r10
  41061a:	cmove  r8,r10
  41061e:	mov    QWORD PTR [rax],r10
  410621:	mov    QWORD PTR [rax+0x8],r9
  410625:	mov    QWORD PTR [rax+0x10],r8
  410629:	mov    QWORD PTR [rax+0x18],r11
  41062d:	mov    QWORD PTR [rax+0x20],rdx
  410631:	mov    rcx,QWORD PTR fs:0x28
  41063a:	cmp    rcx,QWORD PTR [rsp+0x8]
  41063f:	jne    410647 <isspace@plt+0xcd37>
  410641:	add    rsp,0x10
  410645:	pop    rbx
  410646:	ret    
  410647:	call   403280 <__stack_chk_fail@plt>
  41064c:	nop    DWORD PTR [rax+0x0]
  410650:	push   rax
  410651:	mov    rax,QWORD PTR fs:0x28
  41065a:	mov    QWORD PTR [rsp],rax
  41065e:	mov    rax,QWORD PTR [rdi+0x8]
  410662:	mov    rcx,QWORD PTR [rdi+0x18]
  410666:	sub    rax,QWORD PTR [rdi+0x10]
  41066a:	add    rax,QWORD PTR [rdi+0x20]
  41066e:	test   rcx,rcx
  410671:	je     41068e <isspace@plt+0xcd7e>
  410673:	mov    rcx,QWORD PTR [rcx+0x10]
  410677:	test   rcx,rcx
  41067a:	je     41068e <isspace@plt+0xcd7e>
  41067c:	mov    rdx,QWORD PTR [rcx+0x28]
  410680:	test   rdx,rdx
  410683:	je     41069e <isspace@plt+0xcd8e>
  410685:	mov    rsi,QWORD PTR [rcx+0x30]
  410689:	add    rsi,rdx
  41068c:	jmp    4106a0 <isspace@plt+0xcd90>
  41068e:	vxorps xmm0,xmm0,xmm0
  410692:	vmovups YMMWORD PTR [rdi],ymm0
  410696:	mov    QWORD PTR [rdi+0x20],rax
  41069a:	xor    eax,eax
  41069c:	jmp    4106ba <isspace@plt+0xcdaa>
  41069e:	xor    esi,esi
  4106a0:	mov    QWORD PTR [rdi],rdx
  4106a3:	mov    QWORD PTR [rdi+0x8],rsi
  4106a7:	mov    QWORD PTR [rdi+0x10],rdx
  4106ab:	mov    QWORD PTR [rdi+0x18],rcx
  4106af:	mov    QWORD PTR [rdi+0x20],rax
  4106b3:	cmp    QWORD PTR [rcx],0x0
  4106b7:	setne  al
  4106ba:	mov    rcx,QWORD PTR fs:0x28
  4106c3:	cmp    rcx,QWORD PTR [rsp]
  4106c7:	jne    4106ce <isspace@plt+0xcdbe>
  4106c9:	pop    rcx
  4106ca:	vzeroupper 
  4106cd:	ret    
  4106ce:	vzeroupper 
  4106d1:	call   403280 <__stack_chk_fail@plt>
  4106d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4106e0:	push   rax
  4106e1:	mov    rax,QWORD PTR fs:0x28
  4106ea:	mov    QWORD PTR [rsp],rax
  4106ee:	mov    rax,QWORD PTR [rdi]
  4106f1:	mov    rcx,QWORD PTR [rdi+0x10]
  4106f5:	mov    rdx,QWORD PTR [rdi+0x18]
  4106f9:	test   rdx,rdx
  4106fc:	je     410724 <isspace@plt+0xce14>
  4106fe:	mov    r10,QWORD PTR [rdx+0x8]
  410702:	test   r10,r10
  410705:	je     410724 <isspace@plt+0xce14>
  410707:	mov    rdx,QWORD PTR [r10+0x28]
  41070b:	mov    rsi,QWORD PTR [r10+0x30]
  41070f:	sub    rax,rcx
  410712:	add    rax,QWORD PTR [rdi+0x20]
  410716:	test   rdx,rdx
  410719:	je     41073a <isspace@plt+0xce2a>
  41071b:	mov    r9,QWORD PTR [r10+0x30]
  41071f:	add    r9,rdx
  410722:	jmp    41073d <isspace@plt+0xce2d>
  410724:	sub    rax,rcx
  410727:	add    rax,QWORD PTR [rdi+0x20]
  41072b:	mov    r8b,0x1
  41072e:	xor    r10d,r10d
  410731:	xor    r9d,r9d
  410734:	xor    edx,edx
  410736:	xor    esi,esi
  410738:	jmp    41074a <isspace@plt+0xce3a>
  41073a:	xor    r9d,r9d
  41073d:	add    rsi,rdx
  410740:	test   rdx,rdx
  410743:	cmove  rsi,rdx
  410747:	xor    r8d,r8d
  41074a:	mov    QWORD PTR [rdi],rdx
  41074d:	mov    QWORD PTR [rdi+0x8],r9
  410751:	mov    QWORD PTR [rdi+0x10],rsi
  410755:	mov    QWORD PTR [rdi+0x18],r10
  410759:	mov    QWORD PTR [rdi+0x20],rax
  41075d:	test   r8b,r8b
  410760:	je     410766 <isspace@plt+0xce56>
  410762:	xor    eax,eax
  410764:	jmp    41076d <isspace@plt+0xce5d>
  410766:	cmp    QWORD PTR [r10],0x0
  41076a:	setne  al
  41076d:	mov    rcx,QWORD PTR fs:0x28
  410776:	cmp    rcx,QWORD PTR [rsp]
  41077a:	jne    41077e <isspace@plt+0xce6e>
  41077c:	pop    rcx
  41077d:	ret    
  41077e:	call   403280 <__stack_chk_fail@plt>
  410783:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41078d:	nop    DWORD PTR [rax]
  410790:	push   rax
  410791:	mov    rax,QWORD PTR fs:0x28
  41079a:	mov    QWORD PTR [rsp],rax
  41079e:	mov    rax,QWORD PTR [rdi+0x18]
  4107a2:	test   rax,rax
  4107a5:	je     4107ac <isspace@plt+0xce9c>
  4107a7:	mov    rax,QWORD PTR [rax]
  4107aa:	jmp    4107ae <isspace@plt+0xce9e>
  4107ac:	xor    eax,eax
  4107ae:	mov    rcx,QWORD PTR fs:0x28
  4107b7:	cmp    rcx,QWORD PTR [rsp]
  4107bb:	jne    4107bf <isspace@plt+0xceaf>
  4107bd:	pop    rcx
  4107be:	ret    
  4107bf:	call   403280 <__stack_chk_fail@plt>
  4107c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4107ce:	xchg   ax,ax
  4107d0:	push   rax
  4107d1:	mov    rax,QWORD PTR fs:0x28
  4107da:	mov    QWORD PTR [rsp],rax
  4107de:	mov    rax,QWORD PTR [rdi+0x18]
  4107e2:	test   rax,rax
  4107e5:	je     4107f0 <isspace@plt+0xcee0>
  4107e7:	cmp    QWORD PTR [rax],0x0
  4107eb:	setne  al
  4107ee:	jmp    4107f2 <isspace@plt+0xcee2>
  4107f0:	xor    eax,eax
  4107f2:	mov    rcx,QWORD PTR fs:0x28
  4107fb:	cmp    rcx,QWORD PTR [rsp]
  4107ff:	jne    410803 <isspace@plt+0xcef3>
  410801:	pop    rcx
  410802:	ret    
  410803:	call   403280 <__stack_chk_fail@plt>
  410808:	nop    DWORD PTR [rax+rax*1+0x0]
  410810:	push   rax
  410811:	mov    rax,QWORD PTR fs:0x28
  41081a:	mov    QWORD PTR [rsp],rax
  41081e:	mov    rax,QWORD PTR [rdi+0x18]
  410822:	test   rax,rax
  410825:	je     410831 <isspace@plt+0xcf21>
  410827:	cmp    QWORD PTR [rax+0x10],0x0
  41082c:	setne  al
  41082f:	jmp    410833 <isspace@plt+0xcf23>
  410831:	xor    eax,eax
  410833:	mov    rcx,QWORD PTR fs:0x28
  41083c:	cmp    rcx,QWORD PTR [rsp]
  410840:	jne    410844 <isspace@plt+0xcf34>
  410842:	pop    rcx
  410843:	ret    
  410844:	call   403280 <__stack_chk_fail@plt>
  410849:	nop    DWORD PTR [rax+0x0]
  410850:	push   rax
  410851:	mov    rax,QWORD PTR fs:0x28
  41085a:	mov    QWORD PTR [rsp],rax
  41085e:	mov    rax,QWORD PTR [rdi+0x18]
  410862:	test   rax,rax
  410865:	je     410871 <isspace@plt+0xcf61>
  410867:	cmp    QWORD PTR [rax+0x8],0x0
  41086c:	setne  al
  41086f:	jmp    410873 <isspace@plt+0xcf63>
  410871:	xor    eax,eax
  410873:	mov    rcx,QWORD PTR fs:0x28
  41087c:	cmp    rcx,QWORD PTR [rsp]
  410880:	jne    410884 <isspace@plt+0xcf74>
  410882:	pop    rcx
  410883:	ret    
  410884:	call   403280 <__stack_chk_fail@plt>
  410889:	nop    DWORD PTR [rax+0x0]
  410890:	push   rax
  410891:	mov    rax,QWORD PTR fs:0x28
  41089a:	mov    QWORD PTR [rsp],rax
  41089e:	mov    rax,QWORD PTR [rdi+0xc0]
  4108a5:	mov    rcx,QWORD PTR fs:0x28
  4108ae:	cmp    rcx,QWORD PTR [rsp]
  4108b2:	jne    4108b6 <isspace@plt+0xcfa6>
  4108b4:	pop    rcx
  4108b5:	ret    
  4108b6:	call   403280 <__stack_chk_fail@plt>
  4108bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4108c0:	push   rbp
  4108c1:	push   r15
  4108c3:	push   r14
  4108c5:	push   r13
  4108c7:	push   r12
  4108c9:	push   rbx
  4108ca:	sub    rsp,0x18
  4108ce:	mov    rax,QWORD PTR fs:0x28
  4108d7:	mov    QWORD PTR [rsp+0x10],rax
  4108dc:	cmp    rsi,0x2
  4108e0:	jae    4108e9 <isspace@plt+0xcfd9>
  4108e2:	xor    eax,eax
  4108e4:	jmp    410b9a <isspace@plt+0xd28a>
  4108e9:	mov    rcx,QWORD PTR [rdi+0x160]
  4108f0:	cmp    rcx,rsi
  4108f3:	jae    410a0e <isspace@plt+0xd0fe>
  4108f9:	mov    rax,QWORD PTR [rdi+0x40]
  4108fd:	mov    QWORD PTR [rsp+0x8],rdi
  410902:	mov    r13,QWORD PTR [rdi+0x158]
  410909:	mov    QWORD PTR [rsp],rsi
  41090d:	mov    rbp,rsi
  410910:	sub    rbp,rcx
  410913:	mov    rdx,QWORD PTR [rax+0x10]
  410917:	xor    ecx,ecx
  410919:	test   rdx,rdx
  41091c:	je     410b10 <isspace@plt+0xd200>
  410922:	mov    r14,rax
  410925:	jmp    410940 <isspace@plt+0xd030>
  410927:	nop    WORD PTR [rax+rax*1+0x0]
  410930:	mov    rdx,QWORD PTR [rax+0x10]
  410934:	mov    r14,rax
  410937:	test   rdx,rdx
  41093a:	je     410b10 <isspace@plt+0xd200>
  410940:	mov    rsi,rcx
  410943:	mov    rax,rdx
  410946:	mov    r15,QWORD PTR [r14+0x30]
  41094a:	add    rcx,r15
  41094d:	mov    r12,r13
  410950:	sub    r12,rsi
  410953:	jb     410930 <isspace@plt+0xd020>
  410955:	cmp    rcx,r13
  410958:	jbe    410930 <isspace@plt+0xd020>
  41095a:	test   r14,r14
  41095d:	je     410b2d <isspace@plt+0xd21d>
  410963:	cmp    QWORD PTR [r14],0x0
  410967:	je     410b2d <isspace@plt+0xd21d>
  41096d:	mov    rax,QWORD PTR [r14+0x28]
  410971:	add    r15,rax
  410974:	add    r12,rax
  410977:	test   rax,rax
  41097a:	cmove  r15,rax
  41097e:	cmove  r12,rax
  410982:	test   rbp,rbp
  410985:	je     410b2b <isspace@plt+0xd21b>
  41098b:	nop    DWORD PTR [rax+rax*1+0x0]
  410990:	cmp    r12,r15
  410993:	jae    4109cb <isspace@plt+0xd0bb>
  410995:	mov    rbx,r15
  410998:	sub    rbx,r12
  41099b:	mov    rdi,r12
  41099e:	mov    esi,0xa
  4109a3:	mov    rdx,rbx
  4109a6:	call   403410 <memchr@plt>
  4109ab:	test   rax,rax
  4109ae:	je     4109c8 <isspace@plt+0xd0b8>
  4109b0:	sub    r13,r12
  4109b3:	add    r13,rax
  4109b6:	add    r13,0x1
  4109ba:	lea    r12,[rax+0x1]
  4109be:	dec    rbp
  4109c1:	jne    410990 <isspace@plt+0xd080>
  4109c3:	jmp    410b2b <isspace@plt+0xd21b>
  4109c8:	add    r13,rbx
  4109cb:	test   r14,r14
  4109ce:	je     410b2d <isspace@plt+0xd21d>
  4109d4:	mov    r14,QWORD PTR [r14+0x10]
  4109d8:	test   r14,r14
  4109db:	je     410b2d <isspace@plt+0xd21d>
  4109e1:	mov    r12,QWORD PTR [r14+0x28]
  4109e5:	test   r12,r12
  4109e8:	je     4109fc <isspace@plt+0xd0ec>
  4109ea:	mov    r15,QWORD PTR [r14+0x30]
  4109ee:	add    r15,r12
  4109f1:	cmp    QWORD PTR [r14],0x0
  4109f5:	jne    410982 <isspace@plt+0xd072>
  4109f7:	jmp    410b2d <isspace@plt+0xd21d>
  4109fc:	xor    r15d,r15d
  4109ff:	cmp    QWORD PTR [r14],0x0
  410a03:	jne    410982 <isspace@plt+0xd072>
  410a09:	jmp    410b2d <isspace@plt+0xd21d>
  410a0e:	jbe    410b87 <isspace@plt+0xd277>
  410a14:	mov    QWORD PTR [rsp],rsi
  410a18:	lea    r13,[rsi-0x1]
  410a1c:	mov    QWORD PTR [rsp+0x8],rdi
  410a21:	mov    r14,QWORD PTR [rdi+0x40]
  410a25:	mov    rcx,QWORD PTR [r14+0x10]
  410a29:	test   rcx,rcx
  410a2c:	je     410b45 <isspace@plt+0xd235>
  410a32:	xor    r12d,r12d
  410a35:	xor    edx,edx
  410a37:	jmp    410a50 <isspace@plt+0xd140>
  410a39:	nop    DWORD PTR [rax+0x0]
  410a40:	mov    rcx,QWORD PTR [rax+0x10]
  410a44:	mov    r14,rax
  410a47:	test   rcx,rcx
  410a4a:	je     410b4a <isspace@plt+0xd23a>
  410a50:	mov    rsi,rdx
  410a53:	mov    rax,rcx
  410a56:	mov    r15,QWORD PTR [r14+0x30]
  410a5a:	add    rdx,r15
  410a5d:	test   rsi,rsi
  410a60:	jne    410a40 <isspace@plt+0xd130>
  410a62:	test   rdx,rdx
  410a65:	je     410a40 <isspace@plt+0xd130>
  410a67:	test   r14,r14
  410a6a:	je     410b63 <isspace@plt+0xd253>
  410a70:	cmp    QWORD PTR [r14],0x0
  410a74:	je     410b63 <isspace@plt+0xd253>
  410a7a:	mov    rax,QWORD PTR [r14+0x28]
  410a7e:	add    r15,rax
  410a81:	add    r12,rax
  410a84:	test   rax,rax
  410a87:	cmove  r15,rax
  410a8b:	cmove  r12,rax
  410a8f:	xor    ebp,ebp
  410a91:	test   r13,r13
  410a94:	je     410b67 <isspace@plt+0xd257>
  410a9a:	nop    WORD PTR [rax+rax*1+0x0]
  410aa0:	cmp    r12,r15
  410aa3:	jae    410adb <isspace@plt+0xd1cb>
  410aa5:	mov    rbx,r15
  410aa8:	sub    rbx,r12
  410aab:	mov    rdi,r12
  410aae:	mov    esi,0xa
  410ab3:	mov    rdx,rbx
  410ab6:	call   403410 <memchr@plt>
  410abb:	test   rax,rax
  410abe:	je     410ad8 <isspace@plt+0xd1c8>
  410ac0:	sub    rbp,r12
  410ac3:	add    rbp,rax
  410ac6:	add    rbp,0x1
  410aca:	lea    r12,[rax+0x1]
  410ace:	dec    r13
  410ad1:	jne    410aa0 <isspace@plt+0xd190>
  410ad3:	jmp    410b67 <isspace@plt+0xd257>
  410ad8:	add    rbp,rbx
  410adb:	test   r14,r14
  410ade:	je     410b6a <isspace@plt+0xd25a>
  410ae4:	mov    r14,QWORD PTR [r14+0x10]
  410ae8:	test   r14,r14
  410aeb:	je     410b6a <isspace@plt+0xd25a>
  410aed:	mov    r12,QWORD PTR [r14+0x28]
  410af1:	test   r12,r12
  410af4:	je     410b05 <isspace@plt+0xd1f5>
  410af6:	mov    r15,QWORD PTR [r14+0x30]
  410afa:	add    r15,r12
  410afd:	cmp    QWORD PTR [r14],0x0
  410b01:	jne    410a91 <isspace@plt+0xd181>
  410b03:	jmp    410b6a <isspace@plt+0xd25a>
  410b05:	xor    r15d,r15d
  410b08:	cmp    QWORD PTR [r14],0x0
  410b0c:	jne    410a91 <isspace@plt+0xd181>
  410b0e:	jmp    410b6a <isspace@plt+0xd25a>
  410b10:	cmp    rcx,r13
  410b13:	jne    410b2d <isspace@plt+0xd21d>
  410b15:	mov    r14,QWORD PTR [rax+0x8]
  410b19:	mov    r15,QWORD PTR [r14+0x30]
  410b1d:	mov    r12,r15
  410b20:	test   r14,r14
  410b23:	jne    410963 <isspace@plt+0xd053>
  410b29:	jmp    410b2d <isspace@plt+0xd21d>
  410b2b:	xor    ebp,ebp
  410b2d:	mov    rdi,QWORD PTR [rsp+0x8]
  410b32:	mov    QWORD PTR [rdi+0x158],r13
  410b39:	mov    rsi,QWORD PTR [rsp]
  410b3d:	mov    rcx,rsi
  410b40:	sub    rcx,rbp
  410b43:	jmp    410b80 <isspace@plt+0xd270>
  410b45:	mov    rax,r14
  410b48:	jmp    410b4f <isspace@plt+0xd23f>
  410b4a:	test   rdx,rdx
  410b4d:	jne    410b63 <isspace@plt+0xd253>
  410b4f:	mov    r14,QWORD PTR [rax+0x8]
  410b53:	mov    r15,QWORD PTR [r14+0x30]
  410b57:	mov    r12,r15
  410b5a:	test   r14,r14
  410b5d:	jne    410a70 <isspace@plt+0xd160>
  410b63:	xor    ebp,ebp
  410b65:	jmp    410b6a <isspace@plt+0xd25a>
  410b67:	xor    r13d,r13d
  410b6a:	mov    rdi,QWORD PTR [rsp+0x8]
  410b6f:	mov    QWORD PTR [rdi+0x158],rbp
  410b76:	mov    rsi,QWORD PTR [rsp]
  410b7a:	mov    rcx,rsi
  410b7d:	sub    rcx,r13
  410b80:	mov    QWORD PTR [rdi+0x160],rcx
  410b87:	mov    rax,0xffffffffffffffff
  410b8e:	cmp    rcx,rsi
  410b91:	jne    410b9a <isspace@plt+0xd28a>
  410b93:	mov    rax,QWORD PTR [rdi+0x158]
  410b9a:	mov    rcx,QWORD PTR fs:0x28
  410ba3:	cmp    rcx,QWORD PTR [rsp+0x10]
  410ba8:	jne    410bb9 <isspace@plt+0xd2a9>
  410baa:	add    rsp,0x18
  410bae:	pop    rbx
  410baf:	pop    r12
  410bb1:	pop    r13
  410bb3:	pop    r14
  410bb5:	pop    r15
  410bb7:	pop    rbp
  410bb8:	ret    
  410bb9:	call   403280 <__stack_chk_fail@plt>
  410bbe:	xchg   ax,ax
  410bc0:	push   r14
  410bc2:	push   rbx
  410bc3:	push   rax
  410bc4:	mov    rbx,rsi
  410bc7:	mov    r14,rdi
  410bca:	mov    rax,QWORD PTR fs:0x28
  410bd3:	mov    QWORD PTR [rsp],rax
  410bd7:	mov    rax,QWORD PTR [rdi+0xc0]
  410bde:	mov    rdx,QWORD PTR [rdi+0x158]
  410be5:	cmp    rax,rsi
  410be8:	cmovb  rbx,rax
  410bec:	mov    rax,rbx
  410bef:	sub    rax,rdx
  410bf2:	jae    410c10 <isspace@plt+0xd300>
  410bf4:	sub    rdx,rbx
  410bf7:	mov    rdi,r14
  410bfa:	cmp    rdx,rbx
  410bfd:	jae    410c29 <isspace@plt+0xd319>
  410bff:	mov    rsi,rbx
  410c02:	call   410c80 <isspace@plt+0xd370>
  410c07:	sub    QWORD PTR [r14+0x160],rax
  410c0e:	jmp    410c3d <isspace@plt+0xd32d>
  410c10:	jbe    410c3d <isspace@plt+0xd32d>
  410c12:	mov    rdi,r14
  410c15:	mov    rsi,rdx
  410c18:	mov    rdx,rax
  410c1b:	call   410c80 <isspace@plt+0xd370>
  410c20:	add    QWORD PTR [r14+0x160],rax
  410c27:	jmp    410c3d <isspace@plt+0xd32d>
  410c29:	xor    esi,esi
  410c2b:	mov    rdx,rbx
  410c2e:	call   410c80 <isspace@plt+0xd370>
  410c33:	inc    rax
  410c36:	mov    QWORD PTR [r14+0x160],rax
  410c3d:	mov    rdi,r14
  410c40:	mov    rsi,rbx
  410c43:	call   413280 <isspace@plt+0xf970>
  410c48:	mov    QWORD PTR [r14+0x158],rax
  410c4f:	mov    rax,QWORD PTR [r14+0x160]
  410c56:	mov    rcx,QWORD PTR fs:0x28
  410c5f:	cmp    rcx,QWORD PTR [rsp]
  410c63:	jne    410c6d <isspace@plt+0xd35d>
  410c65:	add    rsp,0x8
  410c69:	pop    rbx
  410c6a:	pop    r14
  410c6c:	ret    
  410c6d:	call   403280 <__stack_chk_fail@plt>
  410c72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410c7c:	nop    DWORD PTR [rax+0x0]
  410c80:	push   rbp
  410c81:	push   r15
  410c83:	push   r14
  410c85:	push   r13
  410c87:	push   r12
  410c89:	push   rbx
  410c8a:	sub    rsp,0x38
  410c8e:	mov    r13,rdx
  410c91:	mov    rdx,rsi
  410c94:	mov    rsi,rdi
  410c97:	mov    rax,QWORD PTR fs:0x28
  410ca0:	mov    QWORD PTR [rsp+0x30],rax
  410ca5:	lea    rdi,[rsp+0x8]
  410caa:	call   410570 <isspace@plt+0xcc60>
  410caf:	mov    rax,QWORD PTR [rsp+0x20]
  410cb4:	xor    r14d,r14d
  410cb7:	test   rax,rax
  410cba:	je     410d37 <isspace@plt+0xd427>
  410cbc:	lea    r15,[rsp+0x8]
  410cc1:	cmp    QWORD PTR [rax],0x0
  410cc5:	je     410d37 <isspace@plt+0xd427>
  410cc7:	test   r13,r13
  410cca:	je     410d37 <isspace@plt+0xd427>
  410ccc:	mov    rbp,QWORD PTR [rsp+0x10]
  410cd1:	mov    r12,QWORD PTR [rsp+0x18]
  410cd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410ce0:	cmp    r12,rbp
  410ce3:	jae    410d25 <isspace@plt+0xd415>
  410ce5:	mov    rbx,rbp
  410ce8:	sub    rbx,r12
  410ceb:	cmp    r13,rbx
  410cee:	cmovbe rbx,r13
  410cf2:	mov    rdi,r12
  410cf5:	mov    esi,0xa
  410cfa:	mov    rdx,rbx
  410cfd:	call   403410 <memchr@plt>
  410d02:	test   rax,rax
  410d05:	je     410d20 <isspace@plt+0xd410>
  410d07:	inc    r14
  410d0a:	add    r13,r12
  410d0d:	lea    r12,[rax+0x1]
  410d11:	not    rax
  410d14:	add    r13,rax
  410d17:	jne    410ce0 <isspace@plt+0xd3d0>
  410d19:	jmp    410d37 <isspace@plt+0xd427>
  410d1b:	nop    DWORD PTR [rax+rax*1+0x0]
  410d20:	sub    r13,rbx
  410d23:	je     410d37 <isspace@plt+0xd427>
  410d25:	mov    rdi,r15
  410d28:	call   410650 <isspace@plt+0xcd40>
  410d2d:	mov    rax,QWORD PTR [rsp+0x20]
  410d32:	test   rax,rax
  410d35:	jne    410cc1 <isspace@plt+0xd3b1>
  410d37:	mov    rax,QWORD PTR fs:0x28
  410d40:	cmp    rax,QWORD PTR [rsp+0x30]
  410d45:	jne    410d59 <isspace@plt+0xd449>
  410d47:	mov    rax,r14
  410d4a:	add    rsp,0x38
  410d4e:	pop    rbx
  410d4f:	pop    r12
  410d51:	pop    r13
  410d53:	pop    r14
  410d55:	pop    r15
  410d57:	pop    rbp
  410d58:	ret    
  410d59:	call   403280 <__stack_chk_fail@plt>
  410d5e:	xchg   ax,ax
  410d60:	push   rax
  410d61:	mov    rax,rdi
  410d64:	mov    rcx,QWORD PTR fs:0x28
  410d6d:	mov    QWORD PTR [rsp],rcx
  410d71:	cmp    QWORD PTR [rdi+0xc0],rsi
  410d78:	jne    410d80 <isspace@plt+0xd470>
  410d7a:	add    rax,0x68
  410d7e:	jmp    410dec <isspace@plt+0xd4dc>
  410d80:	mov    r8,QWORD PTR [rax+0x40]
  410d84:	mov    rax,QWORD PTR [r8+0x10]
  410d88:	test   rax,rax
  410d8b:	je     410dcd <isspace@plt+0xd4bd>
  410d8d:	xor    edi,edi
  410d8f:	mov    rcx,r8
  410d92:	jmp    410daf <isspace@plt+0xd49f>
  410d94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410d9e:	xchg   ax,ax
  410da0:	mov    rax,QWORD PTR [r8+0x10]
  410da4:	mov    rcx,r8
  410da7:	mov    rdi,rdx
  410daa:	test   rax,rax
  410dad:	je     410dcf <isspace@plt+0xd4bf>
  410daf:	mov    r8,rax
  410db2:	mov    rdx,QWORD PTR [rcx+0x30]
  410db6:	add    rdx,rdi
  410db9:	cmp    rdi,rsi
  410dbc:	ja     410da0 <isspace@plt+0xd490>
  410dbe:	cmp    rdx,rsi
  410dc1:	jbe    410da0 <isspace@plt+0xd490>
  410dc3:	sub    rsi,rdi
  410dc6:	test   rcx,rcx
  410dc9:	jne    410de1 <isspace@plt+0xd4d1>
  410dcb:	jmp    410dea <isspace@plt+0xd4da>
  410dcd:	xor    edx,edx
  410dcf:	cmp    rdx,rsi
  410dd2:	jne    410dea <isspace@plt+0xd4da>
  410dd4:	mov    rcx,QWORD PTR [r8+0x8]
  410dd8:	mov    rsi,QWORD PTR [rcx+0x30]
  410ddc:	test   rcx,rcx
  410ddf:	je     410dea <isspace@plt+0xd4da>
  410de1:	add    rsi,QWORD PTR [rcx+0x28]
  410de5:	mov    rax,rsi
  410de8:	jmp    410dec <isspace@plt+0xd4dc>
  410dea:	xor    eax,eax
  410dec:	mov    rcx,QWORD PTR fs:0x28
  410df5:	cmp    rcx,QWORD PTR [rsp]
  410df9:	jne    410dfd <isspace@plt+0xd4ed>
  410dfb:	pop    rcx
  410dfc:	ret    
  410dfd:	call   403280 <__stack_chk_fail@plt>
  410e02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410e0c:	nop    DWORD PTR [rax+0x0]
  410e10:	push   rax
  410e11:	mov    rax,QWORD PTR fs:0x28
  410e1a:	mov    QWORD PTR [rsp],rax
  410e1e:	mov    rax,0xffffffffffffffff
  410e25:	test   rsi,rsi
  410e28:	je     410e7e <isspace@plt+0xd56e>
  410e2a:	lea    rcx,[rdi+0x68]
  410e2e:	cmp    rcx,rsi
  410e31:	jne    410e3c <isspace@plt+0xd52c>
  410e33:	mov    rax,QWORD PTR [rdi+0xc0]
  410e3a:	jmp    410e7e <isspace@plt+0xd56e>
  410e3c:	mov    r8,QWORD PTR [rdi+0x40]
  410e40:	mov    rdi,QWORD PTR [r8+0x10]
  410e44:	test   rdi,rdi
  410e47:	je     410e7e <isspace@plt+0xd56e>
  410e49:	xor    ecx,ecx
  410e4b:	jmp    410e5c <isspace@plt+0xd54c>
  410e4d:	nop    DWORD PTR [rax]
  410e50:	add    rcx,rdx
  410e53:	mov    rdi,QWORD PTR [r8+0x10]
  410e57:	test   rdi,rdi
  410e5a:	je     410e7e <isspace@plt+0xd56e>
  410e5c:	mov    r9,QWORD PTR [r8+0x28]
  410e60:	mov    rdx,QWORD PTR [r8+0x30]
  410e64:	mov    r8,rdi
  410e67:	cmp    r9,rsi
  410e6a:	ja     410e50 <isspace@plt+0xd540>
  410e6c:	lea    rdi,[rdx+r9*1]
  410e70:	cmp    rdi,rsi
  410e73:	jbe    410e50 <isspace@plt+0xd540>
  410e75:	add    rcx,rsi
  410e78:	sub    rcx,r9
  410e7b:	mov    rax,rcx
  410e7e:	mov    rcx,QWORD PTR fs:0x28
  410e87:	cmp    rcx,QWORD PTR [rsp]
  410e8b:	jne    410e8f <isspace@plt+0xd57f>
  410e8d:	pop    rcx
  410e8e:	ret    
  410e8f:	call   403280 <__stack_chk_fail@plt>
  410e94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  410e9e:	xchg   ax,ax
  410ea0:	push   r14
  410ea2:	push   rbx
  410ea3:	sub    rsp,0xd8
  410eaa:	mov    r14,rsi
  410ead:	mov    rbx,rdi
  410eb0:	test   al,al
  410eb2:	je     410eed <isspace@plt+0xd5dd>
  410eb4:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  410eba:	vmovaps XMMWORD PTR [rsp+0x40],xmm1
  410ec0:	vmovaps XMMWORD PTR [rsp+0x50],xmm2
  410ec6:	vmovaps XMMWORD PTR [rsp+0x60],xmm3
  410ecc:	vmovaps XMMWORD PTR [rsp+0x70],xmm4
  410ed2:	vmovaps XMMWORD PTR [rsp+0x80],xmm5
  410edb:	vmovaps XMMWORD PTR [rsp+0x90],xmm6
  410ee4:	vmovaps XMMWORD PTR [rsp+0xa0],xmm7
  410eed:	mov    QWORD PTR [rsp+0x10],rdx
  410ef2:	mov    QWORD PTR [rsp+0x18],rcx
  410ef7:	mov    QWORD PTR [rsp+0x20],r8
  410efc:	mov    QWORD PTR [rsp+0x28],r9
  410f01:	mov    rax,QWORD PTR fs:0x28
  410f0a:	mov    QWORD PTR [rsp+0xd0],rax
  410f12:	mov    rax,rsp
  410f15:	mov    QWORD PTR [rsp+0xc0],rax
  410f1d:	lea    rax,[rsp+0xf0]
  410f25:	mov    QWORD PTR [rsp+0xb8],rax
  410f2d:	movabs rax,0x3000000010
  410f37:	mov    QWORD PTR [rsp+0xb0],rax
  410f3f:	mov    rdi,rbx
  410f42:	call   410890 <isspace@plt+0xcf80>
  410f47:	lea    rcx,[rsp+0xb0]
  410f4f:	mov    rdi,rbx
  410f52:	mov    rsi,rax
  410f55:	mov    rdx,r14
  410f58:	call   410f80 <isspace@plt+0xd670>
  410f5d:	mov    rcx,QWORD PTR fs:0x28
  410f66:	cmp    rcx,QWORD PTR [rsp+0xd0]
  410f6e:	jne    410f7b <isspace@plt+0xd66b>
  410f70:	add    rsp,0xd8
  410f77:	pop    rbx
  410f78:	pop    r14
  410f7a:	ret    
  410f7b:	call   403280 <__stack_chk_fail@plt>
  410f80:	push   rbp
  410f81:	push   r15
  410f83:	push   r14
  410f85:	push   r13
  410f87:	push   r12
  410f89:	push   rbx
  410f8a:	sub    rsp,0x28
  410f8e:	mov    r9,rcx
  410f91:	mov    r12,rdx
  410f94:	mov    r14,rsi
  410f97:	mov    r15,rdi
  410f9a:	mov    rax,QWORD PTR fs:0x28
  410fa3:	mov    QWORD PTR [rsp+0x20],rax
  410fa8:	mov    rax,QWORD PTR [rcx+0x10]
  410fac:	mov    QWORD PTR [rsp+0x10],rax
  410fb1:	vmovups xmm0,XMMWORD PTR [rcx]
  410fb5:	vmovaps XMMWORD PTR [rsp],xmm0
  410fba:	xor    ebx,ebx
  410fbc:	xor    edi,edi
  410fbe:	xor    esi,esi
  410fc0:	mov    edx,0x1
  410fc5:	mov    rcx,0xffffffffffffffff
  410fcc:	mov    r8,r12
  410fcf:	call   4036a0 <__vsnprintf_chk@plt>
  410fd4:	cmp    eax,0xffffffff
  410fd7:	je     411031 <isspace@plt+0xd721>
  410fd9:	mov    ebp,eax
  410fdb:	lea    eax,[rbp+0x1]
  410fde:	movsxd rbx,eax
  410fe1:	mov    rdi,rbx
  410fe4:	call   4035d0 <malloc@plt>
  410fe9:	mov    r13,rax
  410fec:	test   rax,rax
  410fef:	je     411027 <isspace@plt+0xd717>
  410ff1:	mov    r9,rsp
  410ff4:	mov    rdi,r13
  410ff7:	mov    rsi,rbx
  410ffa:	mov    edx,0x1
  410fff:	mov    rcx,0xffffffffffffffff
  411006:	mov    r8,r12
  411009:	call   4036a0 <__vsnprintf_chk@plt>
  41100e:	cmp    eax,ebp
  411010:	jne    411027 <isspace@plt+0xd717>
  411012:	movsxd rcx,ebp
  411015:	mov    rdi,r15
  411018:	mov    rsi,r14
  41101b:	mov    rdx,r13
  41101e:	call   40efe0 <isspace@plt+0xb6d0>
  411023:	mov    ebx,eax
  411025:	jmp    411029 <isspace@plt+0xd719>
  411027:	xor    ebx,ebx
  411029:	mov    rdi,r13
  41102c:	call   4030d0 <free@plt>
  411031:	mov    rax,QWORD PTR fs:0x28
  41103a:	cmp    rax,QWORD PTR [rsp+0x20]
  41103f:	jne    411052 <isspace@plt+0xd742>
  411041:	mov    eax,ebx
  411043:	add    rsp,0x28
  411047:	pop    rbx
  411048:	pop    r12
  41104a:	pop    r13
  41104c:	pop    r14
  41104e:	pop    r15
  411050:	pop    rbp
  411051:	ret    
  411052:	call   403280 <__stack_chk_fail@plt>
  411057:	nop    WORD PTR [rax+rax*1+0x0]
  411060:	push   r15
  411062:	push   r14
  411064:	push   r12
  411066:	push   rbx
  411067:	sub    rsp,0x38
  41106b:	mov    r15,rdx
  41106e:	mov    rax,QWORD PTR fs:0x28
  411077:	mov    QWORD PTR [rsp+0x30],rax
  41107c:	test   rdx,rdx
  41107f:	je     41110c <isspace@plt+0xd7fc>
  411085:	mov    rdx,rsi
  411088:	mov    rsi,rdi
  41108b:	lea    rbx,[rsp+0x8]
  411090:	mov    rdi,rbx
  411093:	call   410570 <isspace@plt+0xcc60>
  411098:	mov    rdi,rbx
  41109b:	call   4107d0 <isspace@plt+0xcec0>
  4110a0:	mov    r12d,0x1
  4110a6:	test   al,al
  4110a8:	je     411103 <isspace@plt+0xd7f3>
  4110aa:	mov    r12d,0x1
  4110b0:	lea    r14,[rsp+0x8]
  4110b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4110bf:	nop
  4110c0:	mov    rbx,QWORD PTR [rsp+0x10]
  4110c5:	mov    rsi,QWORD PTR [rsp+0x18]
  4110ca:	sub    rbx,rsi
  4110cd:	cmp    rbx,r12
  4110d0:	cmova  rbx,r12
  4110d4:	test   rbx,rbx
  4110d7:	je     4110ea <isspace@plt+0xd7da>
  4110d9:	mov    rdi,r15
  4110dc:	mov    rdx,rbx
  4110df:	call   4034d0 <memcpy@plt>
  4110e4:	add    r15,rbx
  4110e7:	sub    r12,rbx
  4110ea:	mov    rdi,r14
  4110ed:	call   410650 <isspace@plt+0xcd40>
  4110f2:	mov    rdi,r14
  4110f5:	call   4107d0 <isspace@plt+0xcec0>
  4110fa:	test   r12,r12
  4110fd:	je     411103 <isspace@plt+0xd7f3>
  4110ff:	test   al,al
  411101:	jne    4110c0 <isspace@plt+0xd7b0>
  411103:	cmp    r12,0x1
  411107:	setne  al
  41110a:	jmp    41110e <isspace@plt+0xd7fe>
  41110c:	xor    eax,eax
  41110e:	mov    rcx,QWORD PTR fs:0x28
  411117:	cmp    rcx,QWORD PTR [rsp+0x30]
  41111c:	jne    41112a <isspace@plt+0xd81a>
  41111e:	add    rsp,0x38
  411122:	pop    rbx
  411123:	pop    r12
  411125:	pop    r14
  411127:	pop    r15
  411129:	ret    
  41112a:	call   403280 <__stack_chk_fail@plt>
  41112f:	nop
  411130:	push   r15
  411132:	push   r14
  411134:	push   r13
  411136:	push   r12
  411138:	push   rbx
  411139:	sub    rsp,0x30
  41113d:	mov    rax,QWORD PTR fs:0x28
  411146:	mov    QWORD PTR [rsp+0x28],rax
  41114b:	test   rcx,rcx
  41114e:	je     4111d8 <isspace@plt+0xd8c8>
  411154:	mov    r12,rcx
  411157:	mov    r14,rdx
  41115a:	mov    rdx,rsi
  41115d:	mov    rsi,rdi
  411160:	mov    rbx,rsp
  411163:	mov    rdi,rbx
  411166:	call   410570 <isspace@plt+0xcc60>
  41116b:	mov    rdi,rbx
  41116e:	call   4107d0 <isspace@plt+0xcec0>
  411173:	mov    r13,r14
  411176:	test   r14,r14
  411179:	je     4111d3 <isspace@plt+0xd8c3>
  41117b:	mov    r13,r14
  41117e:	test   al,al
  411180:	je     4111d3 <isspace@plt+0xd8c3>
  411182:	mov    r15,rsp
  411185:	mov    r13,r14
  411188:	nop    DWORD PTR [rax+rax*1+0x0]
  411190:	mov    rbx,QWORD PTR [rsp+0x8]
  411195:	mov    rsi,QWORD PTR [rsp+0x10]
  41119a:	sub    rbx,rsi
  41119d:	cmp    rbx,r13
  4111a0:	cmova  rbx,r13
  4111a4:	test   rbx,rbx
  4111a7:	je     4111ba <isspace@plt+0xd8aa>
  4111a9:	mov    rdi,r12
  4111ac:	mov    rdx,rbx
  4111af:	call   4034d0 <memcpy@plt>
  4111b4:	add    r12,rbx
  4111b7:	sub    r13,rbx
  4111ba:	mov    rdi,r15
  4111bd:	call   410650 <isspace@plt+0xcd40>
  4111c2:	mov    rdi,r15
  4111c5:	call   4107d0 <isspace@plt+0xcec0>
  4111ca:	test   r13,r13
  4111cd:	je     4111d3 <isspace@plt+0xd8c3>
  4111cf:	test   al,al
  4111d1:	jne    411190 <isspace@plt+0xd880>
  4111d3:	sub    r14,r13
  4111d6:	jmp    4111db <isspace@plt+0xd8cb>
  4111d8:	xor    r14d,r14d
  4111db:	mov    rax,QWORD PTR fs:0x28
  4111e4:	cmp    rax,QWORD PTR [rsp+0x28]
  4111e9:	jne    4111fc <isspace@plt+0xd8ec>
  4111eb:	mov    rax,r14
  4111ee:	add    rsp,0x30
  4111f2:	pop    rbx
  4111f3:	pop    r12
  4111f5:	pop    r13
  4111f7:	pop    r14
  4111f9:	pop    r15
  4111fb:	ret    
  4111fc:	call   403280 <__stack_chk_fail@plt>
  411201:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41120b:	nop    DWORD PTR [rax+rax*1+0x0]
  411210:	push   rbp
  411211:	push   r15
  411213:	push   r14
  411215:	push   r13
  411217:	push   r12
  411219:	push   rbx
  41121a:	sub    rsp,0x38
  41121e:	mov    rax,QWORD PTR fs:0x28
  411227:	mov    QWORD PTR [rsp+0x30],rax
  41122c:	cmp    rdx,0xffffffffffffffff
  411230:	je     4112dd <isspace@plt+0xd9cd>
  411236:	mov    r15,rdx
  411239:	mov    r12,rsi
  41123c:	mov    rbx,rdi
  41123f:	lea    rdi,[rdx+0x1]
  411243:	call   4035d0 <malloc@plt>
  411248:	test   rax,rax
  41124b:	je     4112dd <isspace@plt+0xd9cd>
  411251:	mov    r14,rax
  411254:	lea    r13,[rsp+0x8]
  411259:	mov    rdi,r13
  41125c:	mov    rsi,rbx
  41125f:	mov    rdx,r12
  411262:	call   410570 <isspace@plt+0xcc60>
  411267:	mov    rdi,r13
  41126a:	call   4107d0 <isspace@plt+0xcec0>
  41126f:	mov    rbp,r15
  411272:	test   r15,r15
  411275:	je     4112d3 <isspace@plt+0xd9c3>
  411277:	mov    rbp,r15
  41127a:	test   al,al
  41127c:	je     4112d3 <isspace@plt+0xd9c3>
  41127e:	lea    r12,[rsp+0x8]
  411283:	mov    rbp,r15
  411286:	mov    r13,r14
  411289:	nop    DWORD PTR [rax+0x0]
  411290:	mov    rbx,QWORD PTR [rsp+0x10]
  411295:	mov    rsi,QWORD PTR [rsp+0x18]
  41129a:	sub    rbx,rsi
  41129d:	cmp    rbx,rbp
  4112a0:	cmova  rbx,rbp
  4112a4:	test   rbx,rbx
  4112a7:	je     4112ba <isspace@plt+0xd9aa>
  4112a9:	mov    rdi,r13
  4112ac:	mov    rdx,rbx
  4112af:	call   4034d0 <memcpy@plt>
  4112b4:	add    r13,rbx
  4112b7:	sub    rbp,rbx
  4112ba:	mov    rdi,r12
  4112bd:	call   410650 <isspace@plt+0xcd40>
  4112c2:	mov    rdi,r12
  4112c5:	call   4107d0 <isspace@plt+0xcec0>
  4112ca:	test   rbp,rbp
  4112cd:	je     4112d3 <isspace@plt+0xd9c3>
  4112cf:	test   al,al
  4112d1:	jne    411290 <isspace@plt+0xd980>
  4112d3:	sub    r15,rbp
  4112d6:	mov    BYTE PTR [r14+r15*1],0x0
  4112db:	jmp    4112e0 <isspace@plt+0xd9d0>
  4112dd:	xor    r14d,r14d
  4112e0:	mov    rax,QWORD PTR fs:0x28
  4112e9:	cmp    rax,QWORD PTR [rsp+0x30]
  4112ee:	jne    411302 <isspace@plt+0xd9f2>
  4112f0:	mov    rax,r14
  4112f3:	add    rsp,0x38
  4112f7:	pop    rbx
  4112f8:	pop    r12
  4112fa:	pop    r13
  4112fc:	pop    r14
  4112fe:	pop    r15
  411300:	pop    rbp
  411301:	ret    
  411302:	call   403280 <__stack_chk_fail@plt>
  411307:	nop    WORD PTR [rax+rax*1+0x0]
  411310:	push   r15
  411312:	push   r14
  411314:	push   rbx
  411315:	sub    rsp,0x10
  411319:	mov    r14,rdi
  41131c:	mov    rax,QWORD PTR fs:0x28
  411325:	mov    QWORD PTR [rsp+0x8],rax
  41132a:	mov    edi,0x1
  41132f:	mov    esi,0x20
  411334:	call   403460 <calloc@plt>
  411339:	test   rax,rax
  41133c:	je     411377 <isspace@plt+0xda67>
  41133e:	mov    rbx,rax
  411341:	cmp    r14,0x100000
  411348:	mov    r15d,0x100000
  41134e:	cmova  r15,r14
  411352:	mov    rdi,r15
  411355:	call   4035d0 <malloc@plt>
  41135a:	mov    QWORD PTR [rbx+0x10],rax
  41135e:	test   rax,rax
  411361:	je     41136f <isspace@plt+0xda5f>
  411363:	mov    DWORD PTR [rbx+0x18],0x2
  41136a:	mov    QWORD PTR [rbx],r15
  41136d:	jmp    411379 <isspace@plt+0xda69>
  41136f:	mov    rdi,rbx
  411372:	call   4030d0 <free@plt>
  411377:	xor    ebx,ebx
  411379:	mov    rax,QWORD PTR fs:0x28
  411382:	cmp    rax,QWORD PTR [rsp+0x8]
  411387:	jne    411396 <isspace@plt+0xda86>
  411389:	mov    rax,rbx
  41138c:	add    rsp,0x10
  411390:	pop    rbx
  411391:	pop    r14
  411393:	pop    r15
  411395:	ret    
  411396:	call   403280 <__stack_chk_fail@plt>
  41139b:	nop    DWORD PTR [rax+rax*1+0x0]
  4113a0:	push   rbp
  4113a1:	push   r15
  4113a3:	push   r14
  4113a5:	push   r12
  4113a7:	push   rbx
  4113a8:	sub    rsp,0x10
  4113ac:	mov    r12d,esi
  4113af:	mov    r14,rdi
  4113b2:	mov    rax,QWORD PTR fs:0x28
  4113bb:	mov    QWORD PTR [rsp+0x8],rax
  4113c0:	mov    edi,0x1
  4113c5:	mov    esi,0x20
  4113ca:	call   403460 <calloc@plt>
  4113cf:	test   rax,rax
  4113d2:	je     411479 <isspace@plt+0xdb69>
  4113d8:	mov    r15,rax
  4113db:	cmp    r14,0x100000
  4113e2:	mov    ebp,0x100000
  4113e7:	cmova  rbp,r14
  4113eb:	mov    rdi,rbp
  4113ee:	call   4035d0 <malloc@plt>
  4113f3:	mov    QWORD PTR [r15+0x10],rax
  4113f7:	test   rax,rax
  4113fa:	je     411471 <isspace@plt+0xdb61>
  4113fc:	mov    DWORD PTR [r15+0x18],0x2
  411404:	mov    QWORD PTR [r15],rbp
  411407:	test   r14,r14
  41140a:	je     411441 <isspace@plt+0xdb31>
  41140c:	mov    rbx,rax
  41140f:	mov    rbp,r14
  411412:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41141c:	nop    DWORD PTR [rax+0x0]
  411420:	mov    edi,r12d
  411423:	mov    rsi,rbx
  411426:	mov    rdx,rbp
  411429:	call   403420 <read@plt>
  41142e:	test   rax,rax
  411431:	je     411443 <isspace@plt+0xdb33>
  411433:	cmp    rax,0xffffffffffffffff
  411437:	je     41144c <isspace@plt+0xdb3c>
  411439:	add    rbx,rax
  41143c:	sub    rbp,rax
  41143f:	jne    411420 <isspace@plt+0xdb10>
  411441:	xor    ebp,ebp
  411443:	sub    r14,rbp
  411446:	mov    QWORD PTR [r15+0x8],r14
  41144a:	jmp    41147c <isspace@plt+0xdb6c>
  41144c:	cmp    DWORD PTR [r15+0x18],0x2
  411451:	jae    411466 <isspace@plt+0xdb56>
  411453:	mov    rdi,QWORD PTR [r15+0x10]
  411457:	test   rdi,rdi
  41145a:	je     411471 <isspace@plt+0xdb61>
  41145c:	mov    rsi,QWORD PTR [r15]
  41145f:	call   4036d0 <munmap@plt>
  411464:	jmp    411471 <isspace@plt+0xdb61>
  411466:	jne    411471 <isspace@plt+0xdb61>
  411468:	mov    rdi,QWORD PTR [r15+0x10]
  41146c:	call   4030d0 <free@plt>
  411471:	mov    rdi,r15
  411474:	call   4030d0 <free@plt>
  411479:	xor    r15d,r15d
  41147c:	mov    rax,QWORD PTR fs:0x28
  411485:	cmp    rax,QWORD PTR [rsp+0x8]
  41148a:	jne    41149c <isspace@plt+0xdb8c>
  41148c:	mov    rax,r15
  41148f:	add    rsp,0x10
  411493:	pop    rbx
  411494:	pop    r12
  411496:	pop    r14
  411498:	pop    r15
  41149a:	pop    rbp
  41149b:	ret    
  41149c:	call   403280 <__stack_chk_fail@plt>
  4114a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4114ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4114b0:	push   rbx
  4114b1:	sub    rsp,0x10
  4114b5:	mov    rax,QWORD PTR fs:0x28
  4114be:	mov    QWORD PTR [rsp+0x8],rax
  4114c3:	test   rdi,rdi
  4114c6:	je     4114f7 <isspace@plt+0xdbe7>
  4114c8:	mov    rbx,rdi
  4114cb:	cmp    DWORD PTR [rdi+0x18],0x2
  4114cf:	jae    4114e4 <isspace@plt+0xdbd4>
  4114d1:	mov    rdi,QWORD PTR [rbx+0x10]
  4114d5:	test   rdi,rdi
  4114d8:	je     4114ef <isspace@plt+0xdbdf>
  4114da:	mov    rsi,QWORD PTR [rbx]
  4114dd:	call   4036d0 <munmap@plt>
  4114e2:	jmp    4114ef <isspace@plt+0xdbdf>
  4114e4:	jne    4114ef <isspace@plt+0xdbdf>
  4114e6:	mov    rdi,QWORD PTR [rbx+0x10]
  4114ea:	call   4030d0 <free@plt>
  4114ef:	mov    rdi,rbx
  4114f2:	call   4030d0 <free@plt>
  4114f7:	mov    rax,QWORD PTR fs:0x28
  411500:	cmp    rax,QWORD PTR [rsp+0x8]
  411505:	jne    41150d <isspace@plt+0xdbfd>
  411507:	add    rsp,0x10
  41150b:	pop    rbx
  41150c:	ret    
  41150d:	call   403280 <__stack_chk_fail@plt>
  411512:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41151c:	nop    DWORD PTR [rax+0x0]
  411520:	push   rbp
  411521:	push   r15
  411523:	push   r14
  411525:	push   r12
  411527:	push   rbx
  411528:	sub    rsp,0x10
  41152c:	mov    rbp,rcx
  41152f:	mov    r15d,edx
  411532:	mov    rax,QWORD PTR fs:0x28
  41153b:	mov    QWORD PTR [rsp+0x8],rax
  411540:	xor    ebx,ebx
  411542:	xor    edx,edx
  411544:	xor    eax,eax
  411546:	call   403260 <openat@plt>
  41154b:	cmp    eax,0xffffffff
  41154e:	je     4115c6 <isspace@plt+0xdcb6>
  411550:	mov    r12d,eax
  411553:	mov    edi,0x1
  411558:	mov    esi,eax
  41155a:	mov    rdx,rbp
  41155d:	call   403600 <__fxstat@plt>
  411562:	cmp    eax,0xffffffff
  411565:	je     4115bc <isspace@plt+0xdcac>
  411567:	mov    eax,0xf000
  41156c:	and    eax,DWORD PTR [rbp+0x18]
  41156f:	cmp    eax,0x8000
  411574:	jne    4115a3 <isspace@plt+0xdc93>
  411576:	mov    r14,QWORD PTR [rbp+0x30]
  41157a:	test   r14,r14
  41157d:	je     4115bc <isspace@plt+0xdcac>
  41157f:	cmp    r15d,0x1
  411583:	je     411593 <isspace@plt+0xdc83>
  411585:	test   r15d,r15d
  411588:	jne    4115e6 <isspace@plt+0xdcd6>
  41158a:	cmp    r14,0x3ffffff
  411591:	ja     4115e6 <isspace@plt+0xdcd6>
  411593:	mov    rdi,r14
  411596:	mov    esi,r12d
  411599:	call   4113a0 <isspace@plt+0xda90>
  41159e:	mov    rbx,rax
  4115a1:	jmp    4115be <isspace@plt+0xdcae>
  4115a3:	cmp    eax,0x4000
  4115a8:	mov    eax,0x15
  4115ad:	mov    ebx,0x5f
  4115b2:	cmove  ebx,eax
  4115b5:	call   403130 <__errno_location@plt>
  4115ba:	mov    DWORD PTR [rax],ebx
  4115bc:	xor    ebx,ebx
  4115be:	mov    edi,r12d
  4115c1:	call   4033c0 <close@plt>
  4115c6:	mov    rax,QWORD PTR fs:0x28
  4115cf:	cmp    rax,QWORD PTR [rsp+0x8]
  4115d4:	jne    411634 <isspace@plt+0xdd24>
  4115d6:	mov    rax,rbx
  4115d9:	add    rsp,0x10
  4115dd:	pop    rbx
  4115de:	pop    r12
  4115e0:	pop    r14
  4115e2:	pop    r15
  4115e4:	pop    rbp
  4115e5:	ret    
  4115e6:	mov    edi,0x1
  4115eb:	mov    esi,0x20
  4115f0:	call   403460 <calloc@plt>
  4115f5:	test   rax,rax
  4115f8:	je     4115bc <isspace@plt+0xdcac>
  4115fa:	mov    rbx,rax
  4115fd:	xor    edi,edi
  4115ff:	mov    rsi,r14
  411602:	mov    edx,0x1
  411607:	mov    ecx,0x1
  41160c:	mov    r8d,r12d
  41160f:	xor    r9d,r9d
  411612:	call   4032a0 <mmap@plt>
  411617:	mov    QWORD PTR [rbx+0x10],rax
  41161b:	cmp    rax,0xffffffffffffffff
  41161f:	je     41162a <isspace@plt+0xdd1a>
  411621:	mov    QWORD PTR [rbx],r14
  411624:	mov    QWORD PTR [rbx+0x8],r14
  411628:	jmp    4115be <isspace@plt+0xdcae>
  41162a:	mov    rdi,rbx
  41162d:	call   4030d0 <free@plt>
  411632:	jmp    4115bc <isspace@plt+0xdcac>
  411634:	call   403280 <__stack_chk_fail@plt>
  411639:	nop    DWORD PTR [rax+0x0]
  411640:	push   rax
  411641:	mov    rax,QWORD PTR fs:0x28
  41164a:	mov    QWORD PTR [rsp],rax
  41164e:	mov    rax,QWORD PTR [rdi]
  411651:	sub    rax,QWORD PTR [rdi+0x8]
  411655:	cmp    rax,rsi
  411658:	setae  al
  41165b:	mov    rcx,QWORD PTR fs:0x28
  411664:	cmp    rcx,QWORD PTR [rsp]
  411668:	jne    41166c <isspace@plt+0xdd5c>
  41166a:	pop    rcx
  41166b:	ret    
  41166c:	call   403280 <__stack_chk_fail@plt>
  411671:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41167b:	nop    DWORD PTR [rax+rax*1+0x0]
  411680:	push   r15
  411682:	push   r14
  411684:	push   rbx
  411685:	sub    rsp,0x10
  411689:	mov    r14,rdx
  41168c:	mov    r15,rdi
  41168f:	mov    rax,QWORD PTR fs:0x28
  411698:	mov    QWORD PTR [rsp+0x8],rax
  41169d:	mov    rbx,QWORD PTR [rdi+0x10]
  4116a1:	add    rbx,QWORD PTR [rdi+0x8]
  4116a5:	mov    rdi,rbx
  4116a8:	call   4034d0 <memcpy@plt>
  4116ad:	add    QWORD PTR [r15+0x8],r14
  4116b1:	mov    rax,QWORD PTR fs:0x28
  4116ba:	cmp    rax,QWORD PTR [rsp+0x8]
  4116bf:	jne    4116ce <isspace@plt+0xddbe>
  4116c1:	mov    rax,rbx
  4116c4:	add    rsp,0x10
  4116c8:	pop    rbx
  4116c9:	pop    r14
  4116cb:	pop    r15
  4116cd:	ret    
  4116ce:	call   403280 <__stack_chk_fail@plt>
  4116d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4116dd:	nop    DWORD PTR [rax]
  4116e0:	push   r15
  4116e2:	push   r14
  4116e4:	push   r12
  4116e6:	push   rbx
  4116e7:	push   rax
  4116e8:	mov    r15,rdx
  4116eb:	mov    rax,QWORD PTR fs:0x28
  4116f4:	mov    QWORD PTR [rsp],rax
  4116f8:	mov    rdx,QWORD PTR [rdi+0x8]
  4116fc:	cmp    rdx,rsi
  4116ff:	jb     411712 <isspace@plt+0xde02>
  411701:	mov    r14,rcx
  411704:	mov    rbx,rdi
  411707:	mov    rax,QWORD PTR [rdi]
  41170a:	sub    rax,rdx
  41170d:	cmp    rax,rcx
  411710:	jae    41172f <isspace@plt+0xde1f>
  411712:	xor    eax,eax
  411714:	mov    rcx,QWORD PTR fs:0x28
  41171d:	cmp    rcx,QWORD PTR [rsp]
  411721:	jne    411777 <isspace@plt+0xde67>
  411723:	add    rsp,0x8
  411727:	pop    rbx
  411728:	pop    r12
  41172a:	pop    r14
  41172c:	pop    r15
  41172e:	ret    
  41172f:	mov    r12,QWORD PTR [rbx+0x10]
  411733:	add    r12,rsi
  411736:	sub    rdx,rsi
  411739:	jne    411755 <isspace@plt+0xde45>
  41173b:	mov    rdi,r12
  41173e:	mov    rsi,r15
  411741:	mov    rdx,r14
  411744:	call   4034d0 <memcpy@plt>
  411749:	add    QWORD PTR [rbx+0x8],r14
  41174d:	test   r12,r12
  411750:	setne  al
  411753:	jmp    411714 <isspace@plt+0xde04>
  411755:	lea    rdi,[r12+r14*1]
  411759:	mov    rsi,r12
  41175c:	call   403750 <memmove@plt>
  411761:	mov    rdi,r12
  411764:	mov    rsi,r15
  411767:	mov    rdx,r14
  41176a:	call   4034d0 <memcpy@plt>
  41176f:	add    QWORD PTR [rbx+0x8],r14
  411773:	mov    al,0x1
  411775:	jmp    411714 <isspace@plt+0xde04>
  411777:	call   403280 <__stack_chk_fail@plt>
  41177c:	nop    DWORD PTR [rax+0x0]
  411780:	push   r14
  411782:	push   rbx
  411783:	push   rax
  411784:	mov    rax,QWORD PTR fs:0x28
  41178d:	mov    QWORD PTR [rsp],rax
  411791:	mov    rax,rsi
  411794:	not    rax
  411797:	cmp    rax,rdx
  41179a:	jb     4117b2 <isspace@plt+0xdea2>
  41179c:	mov    rbx,rdx
  41179f:	mov    r14,rdi
  4117a2:	lea    rcx,[rdx+rsi*1]
  4117a6:	mov    rax,QWORD PTR [rdi+0x8]
  4117aa:	mov    rdx,rax
  4117ad:	sub    rdx,rcx
  4117b0:	jae    4117b6 <isspace@plt+0xdea6>
  4117b2:	xor    eax,eax
  4117b4:	jmp    4117dd <isspace@plt+0xdecd>
  4117b6:	cmp    rax,rsi
  4117b9:	jne    4117c4 <isspace@plt+0xdeb4>
  4117bb:	sub    rsi,rbx
  4117be:	mov    QWORD PTR [r14+0x8],rsi
  4117c2:	jmp    4117db <isspace@plt+0xdecb>
  4117c4:	add    rsi,QWORD PTR [r14+0x10]
  4117c8:	lea    rax,[rsi+rbx*1]
  4117cc:	mov    rdi,rsi
  4117cf:	mov    rsi,rax
  4117d2:	call   403750 <memmove@plt>
  4117d7:	sub    QWORD PTR [r14+0x8],rbx
  4117db:	mov    al,0x1
  4117dd:	mov    rcx,QWORD PTR fs:0x28
  4117e6:	cmp    rcx,QWORD PTR [rsp]
  4117ea:	jne    4117f4 <isspace@plt+0xdee4>
  4117ec:	add    rsp,0x8
  4117f0:	pop    rbx
  4117f1:	pop    r14
  4117f3:	ret    
  4117f4:	call   403280 <__stack_chk_fail@plt>
  4117f9:	nop    DWORD PTR [rax+0x0]
  411800:	push   rax
  411801:	mov    rsi,rdi
  411804:	mov    rax,QWORD PTR fs:0x28
  41180d:	mov    QWORD PTR [rsp],rax
  411811:	mov    edi,0xffffff9c
  411816:	xor    edx,edx
  411818:	call   40fb00 <isspace@plt+0xc1f0>
  41181d:	mov    rcx,QWORD PTR fs:0x28
  411826:	cmp    rcx,QWORD PTR [rsp]
  41182a:	jne    41182e <isspace@plt+0xdf1e>
  41182c:	pop    rcx
  41182d:	ret    
  41182e:	call   403280 <__stack_chk_fail@plt>
  411833:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41183d:	nop    DWORD PTR [rax]
  411840:	push   rax
  411841:	mov    edx,esi
  411843:	mov    rsi,rdi
  411846:	mov    rax,QWORD PTR fs:0x28
  41184f:	mov    QWORD PTR [rsp],rax
  411853:	mov    edi,0xffffff9c
  411858:	call   40fb00 <isspace@plt+0xc1f0>
  41185d:	mov    rcx,QWORD PTR fs:0x28
  411866:	cmp    rcx,QWORD PTR [rsp]
  41186a:	jne    41186e <isspace@plt+0xdf5e>
  41186c:	pop    rcx
  41186d:	ret    
  41186e:	call   403280 <__stack_chk_fail@plt>
  411873:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41187d:	nop    DWORD PTR [rax]
  411880:	push   rbp
  411881:	mov    rbp,rsp
  411884:	push   r15
  411886:	push   r14
  411888:	push   r13
  41188a:	push   r12
  41188c:	push   rbx
  41188d:	and    rsp,0xffffffffffffffe0
  411891:	sub    rsp,0x1c0
  411898:	mov    rax,QWORD PTR fs:0x28
  4118a1:	mov    QWORD PTR [rsp+0x1a0],rax
  4118a9:	test   rdx,rdx
  4118ac:	je     411e6e <isspace@plt+0xe55e>
  4118b2:	mov    r15d,ecx
  4118b5:	mov    rbx,rdx
  4118b8:	mov    r12d,esi
  4118bb:	mov    r13,rdi
  4118be:	mov    edi,0x1
  4118c3:	mov    esi,0x28
  4118c8:	call   403460 <calloc@plt>
  4118cd:	test   rax,rax
  4118d0:	je     411e6e <isspace@plt+0xe55e>
  4118d6:	mov    r14,rax
  4118d9:	mov    QWORD PTR [rax],r13
  4118dc:	mov    DWORD PTR [rax+0x18],0xffffffff
  4118e3:	mov    DWORD PTR [rax+0x1c],r12d
  4118e7:	mov    rdi,rbx
  4118ea:	call   403850 <strdup@plt>
  4118ef:	mov    QWORD PTR [r14+0x8],rax
  4118f3:	test   rax,rax
  4118f6:	je     411e66 <isspace@plt+0xe556>
  4118fc:	mov    rbx,rax
  4118ff:	call   403130 <__errno_location@plt>
  411904:	mov    r13,rax
  411907:	mov    DWORD PTR [rax],0x0
  41190d:	mov    al,0x1
  41190f:	cmp    r15d,0x1
  411913:	ja     411c2e <isspace@plt+0xe31e>
  411919:	mov    edi,DWORD PTR [r14+0x1c]
  41191d:	mov    rsi,rbx
  411920:	xor    edx,edx
  411922:	xor    eax,eax
  411924:	call   403260 <openat@plt>
  411929:	mov    r12d,eax
  41192c:	cmp    eax,0xffffffff
  41192f:	je     4119bd <isspace@plt+0xe0ad>
  411935:	vxorps xmm0,xmm0,xmm0
  411939:	vmovups YMMWORD PTR [rsp+0x170],ymm0
  411942:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  41194b:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  411954:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  41195d:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  411966:	mov    esi,DWORD PTR [r14+0x1c]
  41196a:	mov    rdx,QWORD PTR [r14+0x8]
  41196e:	lea    rcx,[rsp+0x100]
  411976:	mov    edi,0x1
  41197b:	mov    r8d,0x100
  411981:	vzeroupper 
  411984:	call   403310 <__fxstatat@plt>
  411989:	cmp    eax,0xffffffff
  41198c:	je     4119ac <isspace@plt+0xe09c>
  41198e:	mov    eax,0xf000
  411993:	and    eax,DWORD PTR [rsp+0x118]
  41199a:	cmp    eax,0xa000
  41199f:	je     4119ac <isspace@plt+0xe09c>
  4119a1:	cmp    QWORD PTR [rsp+0x110],0x1
  4119aa:	jbe    4119fb <isspace@plt+0xe0eb>
  4119ac:	mov    ebx,DWORD PTR [r13+0x0]
  4119b0:	mov    edi,r12d
  4119b3:	call   4033c0 <close@plt>
  4119b8:	jmp    411bfb <isspace@plt+0xe2eb>
  4119bd:	mov    ebx,DWORD PTR [r13+0x0]
  4119c1:	cmp    ebx,0x2
  4119c4:	jne    411bfb <isspace@plt+0xe2eb>
  4119ca:	vxorps xmm0,xmm0,xmm0
  4119ce:	vmovups YMMWORD PTR [rsp+0x170],ymm0
  4119d7:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  4119e0:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  4119e9:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  4119f2:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  4119fb:	mov    DWORD PTR [rsp+0x18],r12d
  411a00:	mov    QWORD PTR [rsp+0x20],r13
  411a05:	movabs rax,0x5858582e7369762e
  411a0f:	mov    QWORD PTR [rsp+0x70],rax
  411a14:	mov    DWORD PTR [rsp+0x78],0x585858
  411a1c:	mov    rbx,QWORD PTR [r14+0x8]
  411a20:	mov    rdi,rbx
  411a23:	vzeroupper 
  411a26:	call   403250 <strlen@plt>
  411a2b:	mov    r12,rax
  411a2e:	add    r12,0x10
  411a32:	mov    rdi,rbx
  411a35:	call   403850 <strdup@plt>
  411a3a:	mov    r13,rax
  411a3d:	mov    rdi,QWORD PTR [r14+0x8]
  411a41:	call   403850 <strdup@plt>
  411a46:	mov    rbx,rax
  411a49:	mov    rdi,r12
  411a4c:	call   4035d0 <malloc@plt>
  411a51:	mov    rdi,r13
  411a54:	mov    QWORD PTR [r14+0x10],rax
  411a58:	test   rbx,rbx
  411a5b:	je     411af0 <isspace@plt+0xe1e0>
  411a61:	test   rdi,rdi
  411a64:	je     411af0 <isspace@plt+0xe1e0>
  411a6a:	mov    r13,rax
  411a6d:	test   rax,rax
  411a70:	je     411af0 <isspace@plt+0xe1e0>
  411a72:	mov    QWORD PTR [rsp+0x38],rdi
  411a77:	call   403350 <dirname@plt>
  411a7c:	mov    QWORD PTR [rsp+0x28],rax
  411a81:	mov    rdi,rbx
  411a84:	call   403500 <__xpg_basename@plt>
  411a89:	mov    QWORD PTR [rsp+0x30],rbx
  411a8e:	mov    rbx,rax
  411a91:	lea    r10,[rsp+0x70]
  411a96:	lea    r8,[rip+0x1ebe1]        # 43067e <isspace@plt+0x2cd6e>
  411a9d:	mov    rdi,r13
  411aa0:	mov    rsi,r12
  411aa3:	mov    edx,0x1
  411aa8:	mov    rcx,0xffffffffffffffff
  411aaf:	mov    r9,QWORD PTR [rsp+0x28]
  411ab4:	xor    eax,eax
  411ab6:	push   r10
  411ab8:	push   rbx
  411ab9:	call   4030c0 <__snprintf_chk@plt>
  411abe:	add    rsp,0x10
  411ac2:	mov    rdi,QWORD PTR [rsp+0x38]
  411ac7:	call   4030d0 <free@plt>
  411acc:	mov    rdi,QWORD PTR [rsp+0x30]
  411ad1:	call   4030d0 <free@plt>
  411ad6:	mov    ebx,DWORD PTR [r14+0x1c]
  411ada:	mov    r12,QWORD PTR [r14+0x10]
  411ade:	cmp    ebx,0xffffff9c
  411ae1:	jne    411b07 <isspace@plt+0xe1f7>
  411ae3:	mov    rdi,r12
  411ae6:	call   403650 <mkstemp@plt>
  411aeb:	mov    r12d,eax
  411aee:	jmp    411b5b <isspace@plt+0xe24b>
  411af0:	call   4030d0 <free@plt>
  411af5:	mov    rdi,rbx
  411af8:	call   4030d0 <free@plt>
  411afd:	mov    r13,QWORD PTR [rsp+0x20]
  411b02:	jmp    411be8 <isspace@plt+0xe2d8>
  411b07:	lea    rdi,[rip+0x1d023]        # 42eb31 <isspace@plt+0x2b221>
  411b0e:	mov    esi,0x10000
  411b13:	xor    eax,eax
  411b15:	call   4037a0 <open@plt>
  411b1a:	cmp    eax,0xffffffff
  411b1d:	je     411b3b <isspace@plt+0xe22b>
  411b1f:	mov    r13d,eax
  411b22:	mov    edi,ebx
  411b24:	call   403670 <fchdir@plt>
  411b29:	cmp    eax,0xffffffff
  411b2c:	je     411b45 <isspace@plt+0xe235>
  411b2e:	mov    rdi,r12
  411b31:	call   403650 <mkstemp@plt>
  411b36:	mov    r12d,eax
  411b39:	jmp    411b4b <isspace@plt+0xe23b>
  411b3b:	mov    DWORD PTR [r14+0x18],0xffffffff
  411b43:	jmp    411afd <isspace@plt+0xe1ed>
  411b45:	mov    r12d,0xffffffff
  411b4b:	mov    edi,r13d
  411b4e:	call   403670 <fchdir@plt>
  411b53:	mov    edi,r13d
  411b56:	call   4033c0 <close@plt>
  411b5b:	mov    r13,QWORD PTR [rsp+0x20]
  411b60:	mov    DWORD PTR [r14+0x18],r12d
  411b64:	cmp    r12d,0xffffffff
  411b68:	je     411be8 <isspace@plt+0xe2d8>
  411b6a:	cmp    DWORD PTR [rsp+0x18],0xffffffff
  411b6f:	je     411dab <isspace@plt+0xe49b>
  411b75:	mov    esi,DWORD PTR [rsp+0x118]
  411b7c:	mov    edi,r12d
  411b7f:	call   403710 <fchmod@plt>
  411b84:	cmp    eax,0xffffffff
  411b87:	mov    r12d,DWORD PTR [rsp+0x18]
  411b8c:	je     4119ac <isspace@plt+0xe09c>
  411b92:	mov    ebx,DWORD PTR [r14+0x18]
  411b96:	mov    QWORD PTR [rsp+0x40],0x0
  411b9f:	call   403610 <is_selinux_enabled@plt>
  411ba4:	test   eax,eax
  411ba6:	je     411eb8 <isspace@plt+0xe5a8>
  411bac:	lea    rsi,[rsp+0x40]
  411bb1:	mov    edi,r12d
  411bb4:	call   403080 <fgetfilecon@plt>
  411bb9:	cmp    eax,0xffffffff
  411bbc:	je     411ead <isspace@plt+0xe59d>
  411bc2:	mov    rsi,QWORD PTR [rsp+0x40]
  411bc7:	mov    edi,ebx
  411bc9:	call   403830 <fsetfilecon@plt>
  411bce:	mov    ebx,eax
  411bd0:	mov    rdi,QWORD PTR [rsp+0x40]
  411bd5:	call   4032e0 <freecon@plt>
  411bda:	cmp    ebx,0xffffffff
  411bdd:	jne    411eb8 <isspace@plt+0xe5a8>
  411be3:	jmp    4119ac <isspace@plt+0xe09c>
  411be8:	mov    ebx,DWORD PTR [r13+0x0]
  411bec:	mov    r12d,DWORD PTR [rsp+0x18]
  411bf1:	cmp    r12d,0xffffffff
  411bf5:	jne    4119b0 <isspace@plt+0xe0a0>
  411bfb:	mov    edi,DWORD PTR [r14+0x18]
  411bff:	cmp    edi,0xffffffff
  411c02:	je     411c09 <isspace@plt+0xe2f9>
  411c04:	call   4033c0 <close@plt>
  411c09:	mov    DWORD PTR [r14+0x18],0xffffffff
  411c11:	mov    rdi,QWORD PTR [r14+0x10]
  411c15:	call   4030d0 <free@plt>
  411c1a:	mov    QWORD PTR [r14+0x10],0x0
  411c22:	mov    DWORD PTR [r13+0x0],ebx
  411c26:	cmp    DWORD PTR [r13+0x0],0x1c
  411c2b:	setne  al
  411c2e:	test   r15d,0xfffffffd
  411c35:	jne    411e66 <isspace@plt+0xe556>
  411c3b:	test   al,al
  411c3d:	je     411e66 <isspace@plt+0xe556>
  411c43:	mov    r15,QWORD PTR [r14]
  411c46:	vxorps xmm0,xmm0,xmm0
  411c4a:	vmovups YMMWORD PTR [rsp+0x170],ymm0
  411c53:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  411c5c:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  411c65:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  411c6e:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  411c77:	mov    edi,DWORD PTR [r14+0x1c]
  411c7b:	mov    rsi,QWORD PTR [r14+0x8]
  411c7f:	mov    edx,0x41
  411c84:	mov    ecx,0x1b6
  411c89:	xor    eax,eax
  411c8b:	vzeroupper 
  411c8e:	call   403260 <openat@plt>
  411c93:	mov    DWORD PTR [r14+0x18],eax
  411c97:	cmp    eax,0xffffffff
  411c9a:	je     411e48 <isspace@plt+0xe538>
  411ca0:	lea    rdx,[rsp+0x100]
  411ca8:	mov    edi,0x1
  411cad:	mov    esi,eax
  411caf:	call   403600 <__fxstat@plt>
  411cb4:	cmp    eax,0xffffffff
  411cb7:	je     411e48 <isspace@plt+0xe538>
  411cbd:	lea    rdi,[rsp+0x70]
  411cc2:	mov    rsi,r15
  411cc5:	call   40fef0 <isspace@plt+0xc5e0>
  411cca:	mov    rdi,r15
  411ccd:	call   410010 <isspace@plt+0xc700>
  411cd2:	test   rax,rax
  411cd5:	je     411e2e <isspace@plt+0xe51e>
  411cdb:	mov    r15,rax
  411cde:	mov    rax,QWORD PTR [rsp+0x100]
  411ce6:	cmp    rax,QWORD PTR [rsp+0x70]
  411ceb:	jne    411e2e <isspace@plt+0xe51e>
  411cf1:	mov    rax,QWORD PTR [rsp+0x108]
  411cf9:	cmp    rax,QWORD PTR [rsp+0x78]
  411cfe:	jne    411e2e <isspace@plt+0xe51e>
  411d04:	mov    rax,QWORD PTR [r15]
  411d07:	mov    QWORD PTR [rsp+0x18],rax
  411d0c:	vmovups ymm0,YMMWORD PTR [rip+0x1e97c]        # 430690 <isspace@plt+0x2cd80>
  411d14:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  411d1a:	lea    rdi,[rsp+0x40]
  411d1f:	vzeroupper 
  411d22:	call   403650 <mkstemp@plt>
  411d27:	cmp    eax,0xffffffff
  411d2a:	je     411e48 <isspace@plt+0xe538>
  411d30:	mov    r12d,eax
  411d33:	mov    QWORD PTR [rsp+0x20],r13
  411d38:	lea    rdi,[rsp+0x40]
  411d3d:	call   403140 <unlink@plt>
  411d42:	cmp    eax,0xffffffff
  411d45:	je     411e9a <isspace@plt+0xe58a>
  411d4b:	cmp    QWORD PTR [rsp+0x18],0x0
  411d51:	je     411dec <isspace@plt+0xe4dc>
  411d57:	mov    r13,QWORD PTR [r15+0x10]
  411d5b:	mov    rbx,QWORD PTR [rsp+0x18]
  411d60:	jmp    411d67 <isspace@plt+0xe457>
  411d62:	test   rbx,rbx
  411d65:	je     411de0 <isspace@plt+0xe4d0>
  411d67:	cmp    rbx,0x7fffffff
  411d6e:	mov    edx,0x7fffffff
  411d73:	cmovb  rdx,rbx
  411d77:	mov    edi,r12d
  411d7a:	mov    rsi,r13
  411d7d:	call   4031f0 <write@plt>
  411d82:	test   rax,rax
  411d85:	js     411d95 <isspace@plt+0xe485>
  411d87:	je     411e9a <isspace@plt+0xe58a>
  411d8d:	sub    rbx,rax
  411d90:	add    r13,rax
  411d93:	jmp    411d62 <isspace@plt+0xe452>
  411d95:	mov    rax,QWORD PTR [rsp+0x20]
  411d9a:	mov    eax,DWORD PTR [rax]
  411d9c:	cmp    eax,0x4
  411d9f:	je     411d62 <isspace@plt+0xe452>
  411da1:	cmp    eax,0xb
  411da4:	je     411d62 <isspace@plt+0xe452>
  411da6:	jmp    411e9a <isspace@plt+0xe58a>
  411dab:	xor    edi,edi
  411dad:	call   4034a0 <umask@plt>
  411db2:	mov    ebx,eax
  411db4:	not    ebx
  411db6:	mov    edi,eax
  411db8:	call   4034a0 <umask@plt>
  411dbd:	mov    edi,DWORD PTR [r14+0x18]
  411dc1:	and    ebx,0x1b6
  411dc7:	mov    esi,ebx
  411dc9:	call   403710 <fchmod@plt>
  411dce:	cmp    eax,0xffffffff
  411dd1:	jne    411f1c <isspace@plt+0xe60c>
  411dd7:	mov    ebx,DWORD PTR [r13+0x0]
  411ddb:	jmp    411bfb <isspace@plt+0xe2eb>
  411de0:	cmp    QWORD PTR [rsp+0x18],0xffffffffffffffff
  411de6:	je     411e9a <isspace@plt+0xe58a>
  411dec:	mov    rdi,QWORD PTR [r15+0x10]
  411df0:	mov    rsi,QWORD PTR [rsp+0x18]
  411df5:	mov    edx,0x1
  411dfa:	mov    ecx,0x11
  411dff:	mov    r8d,r12d
  411e02:	xor    r9d,r9d
  411e05:	call   4032a0 <mmap@plt>
  411e0a:	cmp    rax,0xffffffffffffffff
  411e0e:	je     411e9a <isspace@plt+0xe58a>
  411e14:	mov    edi,r12d
  411e17:	call   4033c0 <close@plt>
  411e1c:	cmp    eax,0xffffffff
  411e1f:	mov    r13,QWORD PTR [rsp+0x20]
  411e24:	je     411e48 <isspace@plt+0xe538>
  411e26:	mov    DWORD PTR [r15+0x18],0x1
  411e2e:	mov    edi,DWORD PTR [r14+0x18]
  411e32:	xor    esi,esi
  411e34:	call   403340 <ftruncate@plt>
  411e39:	cmp    eax,0xffffffff
  411e3c:	je     411e48 <isspace@plt+0xe538>
  411e3e:	mov    DWORD PTR [r14+0x20],0x2
  411e46:	jmp    411e71 <isspace@plt+0xe561>
  411e48:	mov    ebx,DWORD PTR [r13+0x0]
  411e4c:	mov    edi,DWORD PTR [r14+0x18]
  411e50:	cmp    edi,0xffffffff
  411e53:	je     411e5a <isspace@plt+0xe54a>
  411e55:	call   4033c0 <close@plt>
  411e5a:	mov    DWORD PTR [r14+0x18],0xffffffff
  411e62:	mov    DWORD PTR [r13+0x0],ebx
  411e66:	mov    rdi,r14
  411e69:	call   411f30 <isspace@plt+0xe620>
  411e6e:	xor    r14d,r14d
  411e71:	mov    rax,QWORD PTR fs:0x28
  411e7a:	cmp    rax,QWORD PTR [rsp+0x1a0]
  411e82:	jne    411f29 <isspace@plt+0xe619>
  411e88:	mov    rax,r14
  411e8b:	lea    rsp,[rbp-0x28]
  411e8f:	pop    rbx
  411e90:	pop    r12
  411e92:	pop    r13
  411e94:	pop    r14
  411e96:	pop    r15
  411e98:	pop    rbp
  411e99:	ret    
  411e9a:	mov    r13,QWORD PTR [rsp+0x20]
  411e9f:	mov    ebx,DWORD PTR [r13+0x0]
  411ea3:	mov    edi,r12d
  411ea6:	call   4033c0 <close@plt>
  411eab:	jmp    411e4c <isspace@plt+0xe53c>
  411ead:	cmp    DWORD PTR [r13+0x0],0x5f
  411eb2:	jne    4119ac <isspace@plt+0xe09c>
  411eb8:	mov    ebx,DWORD PTR [rsp+0x11c]
  411ebf:	call   403290 <getuid@plt>
  411ec4:	cmp    ebx,eax
  411ec6:	je     411ee6 <isspace@plt+0xe5d6>
  411ec8:	mov    edi,DWORD PTR [r14+0x18]
  411ecc:	mov    esi,DWORD PTR [rsp+0x11c]
  411ed3:	mov    edx,0xffffffff
  411ed8:	call   4037b0 <fchown@plt>
  411edd:	cmp    eax,0xffffffff
  411ee0:	je     4119ac <isspace@plt+0xe09c>
  411ee6:	mov    ebx,DWORD PTR [rsp+0x120]
  411eed:	call   403540 <getgid@plt>
  411ef2:	cmp    ebx,eax
  411ef4:	je     411f14 <isspace@plt+0xe604>
  411ef6:	mov    edi,DWORD PTR [r14+0x18]
  411efa:	mov    edx,DWORD PTR [rsp+0x120]
  411f01:	mov    esi,0xffffffff
  411f06:	call   4037b0 <fchown@plt>
  411f0b:	cmp    eax,0xffffffff
  411f0e:	je     4119ac <isspace@plt+0xe09c>
  411f14:	mov    edi,r12d
  411f17:	call   4033c0 <close@plt>
  411f1c:	mov    DWORD PTR [r14+0x20],0x1
  411f24:	jmp    411e71 <isspace@plt+0xe561>
  411f29:	call   403280 <__stack_chk_fail@plt>
  411f2e:	xchg   ax,ax
  411f30:	push   rbp
  411f31:	push   r14
  411f33:	push   rbx
  411f34:	sub    rsp,0x10
  411f38:	mov    rax,QWORD PTR fs:0x28
  411f41:	mov    QWORD PTR [rsp+0x8],rax
  411f46:	test   rdi,rdi
  411f49:	je     411fa1 <isspace@plt+0xe691>
  411f4b:	mov    rbx,rdi
  411f4e:	call   403130 <__errno_location@plt>
  411f53:	mov    r14,rax
  411f56:	mov    ebp,DWORD PTR [rax]
  411f58:	mov    edi,DWORD PTR [rbx+0x18]
  411f5b:	cmp    edi,0xffffffff
  411f5e:	je     411f65 <isspace@plt+0xe655>
  411f60:	call   4033c0 <close@plt>
  411f65:	mov    rsi,QWORD PTR [rbx+0x10]
  411f69:	test   rsi,rsi
  411f6c:	je     411f83 <isspace@plt+0xe673>
  411f6e:	cmp    BYTE PTR [rsi],0x0
  411f71:	je     411f85 <isspace@plt+0xe675>
  411f73:	mov    edi,DWORD PTR [rbx+0x1c]
  411f76:	xor    edx,edx
  411f78:	call   403190 <unlinkat@plt>
  411f7d:	mov    rsi,QWORD PTR [rbx+0x10]
  411f81:	jmp    411f85 <isspace@plt+0xe675>
  411f83:	xor    esi,esi
  411f85:	mov    rdi,rsi
  411f88:	call   4030d0 <free@plt>
  411f8d:	mov    rdi,QWORD PTR [rbx+0x8]
  411f91:	call   4030d0 <free@plt>
  411f96:	mov    rdi,rbx
  411f99:	call   4030d0 <free@plt>
  411f9e:	mov    DWORD PTR [r14],ebp
  411fa1:	mov    rax,QWORD PTR fs:0x28
  411faa:	cmp    rax,QWORD PTR [rsp+0x8]
  411faf:	jne    411fba <isspace@plt+0xe6aa>
  411fb1:	add    rsp,0x10
  411fb5:	pop    rbx
  411fb6:	pop    r14
  411fb8:	pop    rbp
  411fb9:	ret    
  411fba:	call   403280 <__stack_chk_fail@plt>
  411fbf:	nop
  411fc0:	push   rbp
  411fc1:	mov    rbp,rsp
  411fc4:	push   r15
  411fc6:	push   r14
  411fc8:	push   rbx
  411fc9:	and    rsp,0xffffffffffffffe0
  411fcd:	sub    rsp,0xa0
  411fd4:	mov    rax,QWORD PTR fs:0x28
  411fdd:	mov    QWORD PTR [rsp+0x90],rax
  411fe5:	test   rdi,rdi
  411fe8:	je     4120e5 <isspace@plt+0xe7d5>
  411fee:	mov    r14,rdi
  411ff1:	mov    eax,DWORD PTR [rdi+0x20]
  411ff4:	cmp    eax,0x2
  411ff7:	je     4120e9 <isspace@plt+0xe7d9>
  411ffd:	cmp    eax,0x1
  412000:	jne    412156 <isspace@plt+0xe846>
  412006:	mov    edi,DWORD PTR [r14+0x18]
  41200a:	call   403770 <fsync@plt>
  41200f:	cmp    eax,0xffffffff
  412012:	je     412156 <isspace@plt+0xe846>
  412018:	vxorps xmm0,xmm0,xmm0
  41201c:	vmovups YMMWORD PTR [rsp+0x70],ymm0
  412022:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  412028:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  41202e:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  412034:	vmovaps YMMWORD PTR [rsp],ymm0
  412039:	mov    esi,DWORD PTR [r14+0x18]
  41203d:	mov    rdx,rsp
  412040:	mov    edi,0x1
  412045:	vzeroupper 
  412048:	call   403600 <__fxstat@plt>
  41204d:	cmp    eax,0xffffffff
  412050:	je     412156 <isspace@plt+0xe846>
  412056:	mov    edi,DWORD PTR [r14+0x18]
  41205a:	call   4033c0 <close@plt>
  41205f:	mov    DWORD PTR [r14+0x18],0xffffffff
  412067:	cmp    eax,0xffffffff
  41206a:	je     412156 <isspace@plt+0xe846>
  412070:	mov    edi,DWORD PTR [r14+0x1c]
  412074:	mov    rcx,QWORD PTR [r14+0x8]
  412078:	mov    rsi,QWORD PTR [r14+0x10]
  41207c:	mov    edx,edi
  41207e:	call   4037e0 <renameat@plt>
  412083:	cmp    eax,0xffffffff
  412086:	je     412156 <isspace@plt+0xe846>
  41208c:	mov    rdi,QWORD PTR [r14+0x10]
  412090:	call   4030d0 <free@plt>
  412095:	mov    QWORD PTR [r14+0x10],0x0
  41209d:	mov    r15d,DWORD PTR [r14+0x1c]
  4120a1:	mov    rdi,QWORD PTR [r14+0x8]
  4120a5:	call   403350 <dirname@plt>
  4120aa:	xor    ebx,ebx
  4120ac:	mov    edi,r15d
  4120af:	mov    rsi,rax
  4120b2:	mov    edx,0x10000
  4120b7:	xor    eax,eax
  4120b9:	call   403260 <openat@plt>
  4120be:	cmp    eax,0xffffffff
  4120c1:	je     412158 <isspace@plt+0xe848>
  4120c7:	mov    r15d,eax
  4120ca:	mov    edi,eax
  4120cc:	call   403770 <fsync@plt>
  4120d1:	cmp    eax,0xffffffff
  4120d4:	jne    4120e0 <isspace@plt+0xe7d0>
  4120d6:	call   403130 <__errno_location@plt>
  4120db:	cmp    DWORD PTR [rax],0x16
  4120de:	jne    41214e <isspace@plt+0xe83e>
  4120e0:	mov    edi,r15d
  4120e3:	jmp    412135 <isspace@plt+0xe825>
  4120e5:	mov    bl,0x1
  4120e7:	jmp    412160 <isspace@plt+0xe850>
  4120e9:	mov    edi,DWORD PTR [r14+0x18]
  4120ed:	call   403770 <fsync@plt>
  4120f2:	cmp    eax,0xffffffff
  4120f5:	je     412156 <isspace@plt+0xe846>
  4120f7:	vxorps xmm0,xmm0,xmm0
  4120fb:	vmovups YMMWORD PTR [rsp+0x70],ymm0
  412101:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  412107:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  41210d:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  412113:	vmovaps YMMWORD PTR [rsp],ymm0
  412118:	mov    esi,DWORD PTR [r14+0x18]
  41211c:	mov    rdx,rsp
  41211f:	mov    edi,0x1
  412124:	vzeroupper 
  412127:	call   403600 <__fxstat@plt>
  41212c:	cmp    eax,0xffffffff
  41212f:	je     412156 <isspace@plt+0xe846>
  412131:	mov    edi,DWORD PTR [r14+0x18]
  412135:	call   4033c0 <close@plt>
  41213a:	cmp    eax,0xffffffff
  41213d:	je     412156 <isspace@plt+0xe846>
  41213f:	mov    rdi,QWORD PTR [r14]
  412142:	mov    rsi,rsp
  412145:	call   40ff60 <isspace@plt+0xc650>
  41214a:	mov    bl,0x1
  41214c:	jmp    412158 <isspace@plt+0xe848>
  41214e:	mov    edi,r15d
  412151:	call   4033c0 <close@plt>
  412156:	xor    ebx,ebx
  412158:	mov    rdi,r14
  41215b:	call   411f30 <isspace@plt+0xe620>
  412160:	mov    rax,QWORD PTR fs:0x28
  412169:	cmp    rax,QWORD PTR [rsp+0x90]
  412171:	jne    412180 <isspace@plt+0xe870>
  412173:	mov    eax,ebx
  412175:	lea    rsp,[rbp-0x18]
  412179:	pop    rbx
  41217a:	pop    r14
  41217c:	pop    r15
  41217e:	pop    rbp
  41217f:	ret    
  412180:	call   403280 <__stack_chk_fail@plt>
  412185:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41218f:	nop
  412190:	push   rax
  412191:	mov    rdx,rsi
  412194:	mov    rax,QWORD PTR fs:0x28
  41219d:	mov    QWORD PTR [rsp],rax
  4121a1:	mov    esi,0xffffff9c
  4121a6:	xor    ecx,ecx
  4121a8:	call   4121d0 <isspace@plt+0xe8c0>
  4121ad:	mov    rcx,QWORD PTR fs:0x28
  4121b6:	cmp    rcx,QWORD PTR [rsp]
  4121ba:	jne    4121be <isspace@plt+0xe8ae>
  4121bc:	pop    rcx
  4121bd:	ret    
  4121be:	call   403280 <__stack_chk_fail@plt>
  4121c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4121cd:	nop    DWORD PTR [rax]
  4121d0:	push   r14
  4121d2:	push   rbx
  4121d3:	sub    rsp,0x18
  4121d7:	mov    rbx,rdi
  4121da:	mov    rax,QWORD PTR fs:0x28
  4121e3:	mov    QWORD PTR [rsp+0x10],rax
  4121e8:	test   rdx,rdx
  4121eb:	je     412241 <isspace@plt+0xe931>
  4121ed:	mov    rdi,rbx
  4121f0:	call   411880 <isspace@plt+0xdf70>
  4121f5:	test   rax,rax
  4121f8:	je     412257 <isspace@plt+0xe947>
  4121fa:	mov    r14,rax
  4121fd:	mov    QWORD PTR [rsp],0x0
  412205:	mov    rdi,rbx
  412208:	call   410890 <isspace@plt+0xcf80>
  41220d:	mov    QWORD PTR [rsp+0x8],rax
  412212:	mov    rdi,QWORD PTR [r14]
  412215:	mov    edx,DWORD PTR [r14+0x18]
  412219:	mov    rsi,rsp
  41221c:	call   4122c0 <isspace@plt+0xe9b0>
  412221:	cmp    rax,0xffffffffffffffff
  412225:	je     41224f <isspace@plt+0xe93f>
  412227:	mov    rbx,rax
  41222a:	mov    rdi,rsp
  41222d:	call   417020 <isspace@plt+0x13710>
  412232:	cmp    rbx,rax
  412235:	jne    41224f <isspace@plt+0xe93f>
  412237:	mov    rdi,r14
  41223a:	call   411fc0 <isspace@plt+0xe6b0>
  41223f:	jmp    412259 <isspace@plt+0xe949>
  412241:	mov    rdi,rbx
  412244:	xor    esi,esi
  412246:	call   40ff60 <isspace@plt+0xc650>
  41224b:	mov    al,0x1
  41224d:	jmp    412259 <isspace@plt+0xe949>
  41224f:	mov    rdi,r14
  412252:	call   411f30 <isspace@plt+0xe620>
  412257:	xor    eax,eax
  412259:	mov    rcx,QWORD PTR fs:0x28
  412262:	cmp    rcx,QWORD PTR [rsp+0x10]
  412267:	jne    412271 <isspace@plt+0xe961>
  412269:	add    rsp,0x18
  41226d:	pop    rbx
  41226e:	pop    r14
  412270:	ret    
  412271:	call   403280 <__stack_chk_fail@plt>
  412276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412280:	push   rax
  412281:	mov    rax,QWORD PTR fs:0x28
  41228a:	mov    QWORD PTR [rsp],rax
  41228e:	mov    rax,QWORD PTR [rdi]
  412291:	mov    edx,DWORD PTR [rdi+0x18]
  412294:	mov    rdi,rax
  412297:	call   4122c0 <isspace@plt+0xe9b0>
  41229c:	mov    rcx,QWORD PTR fs:0x28
  4122a5:	cmp    rcx,QWORD PTR [rsp]
  4122a9:	jne    4122ad <isspace@plt+0xe99d>
  4122ab:	pop    rcx
  4122ac:	ret    
  4122ad:	call   403280 <__stack_chk_fail@plt>
  4122b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4122bc:	nop    DWORD PTR [rax+0x0]
  4122c0:	push   rbp
  4122c1:	push   r15
  4122c3:	push   r14
  4122c5:	push   r13
  4122c7:	push   r12
  4122c9:	push   rbx
  4122ca:	sub    rsp,0x38
  4122ce:	mov    r13d,edx
  4122d1:	mov    rbx,rsi
  4122d4:	mov    r14,rdi
  4122d7:	mov    rax,QWORD PTR fs:0x28
  4122e0:	mov    QWORD PTR [rsp+0x30],rax
  4122e5:	mov    rdi,rsi
  4122e8:	call   417020 <isspace@plt+0x13710>
  4122ed:	mov    rbp,rax
  4122f0:	mov    rdx,QWORD PTR [rbx]
  4122f3:	lea    rdi,[rsp+0x8]
  4122f8:	mov    rsi,r14
  4122fb:	call   410570 <isspace@plt+0xcc60>
  412300:	test   rbp,rbp
  412303:	mov    QWORD PTR [rsp],rbp
  412307:	je     4123c4 <isspace@plt+0xeab4>
  41230d:	lea    r15,[rsp+0x8]
  412312:	mov    r12,rbp
  412315:	mov    rdi,r15
  412318:	call   4107d0 <isspace@plt+0xcec0>
  41231d:	test   al,al
  41231f:	je     4123c7 <isspace@plt+0xeab7>
  412325:	mov    r14,QWORD PTR [rsp+0x10]
  41232a:	mov    rbx,QWORD PTR [rsp+0x18]
  41232f:	sub    r14,rbx
  412332:	cmp    r14,r12
  412335:	cmova  r14,r12
  412339:	test   r14,r14
  41233c:	je     4123a0 <isspace@plt+0xea90>
  41233e:	mov    rbp,r14
  412341:	jmp    412355 <isspace@plt+0xea45>
  412343:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41234d:	nop    DWORD PTR [rax]
  412350:	test   rbp,rbp
  412353:	je     4123a0 <isspace@plt+0xea90>
  412355:	cmp    rbp,0x7fffffff
  41235c:	mov    edx,0x7fffffff
  412361:	cmovb  rdx,rbp
  412365:	mov    edi,r13d
  412368:	mov    rsi,rbx
  41236b:	call   4031f0 <write@plt>
  412370:	test   rax,rax
  412373:	js     412380 <isspace@plt+0xea70>
  412375:	je     4123a2 <isspace@plt+0xea92>
  412377:	sub    rbp,rax
  41237a:	add    rbx,rax
  41237d:	jmp    412350 <isspace@plt+0xea40>
  41237f:	nop
  412380:	call   403130 <__errno_location@plt>
  412385:	mov    eax,DWORD PTR [rax]
  412387:	cmp    eax,0x4
  41238a:	je     412350 <isspace@plt+0xea40>
  41238c:	cmp    eax,0xb
  41238f:	je     412350 <isspace@plt+0xea40>
  412391:	jmp    4123d0 <isspace@plt+0xeac0>
  412393:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41239d:	nop    DWORD PTR [rax]
  4123a0:	xor    ebp,ebp
  4123a2:	sub    r14,rbp
  4123a5:	cmp    r14,0xffffffffffffffff
  4123a9:	je     4123d0 <isspace@plt+0xeac0>
  4123ab:	sub    r12,r14
  4123ae:	test   rbp,rbp
  4123b1:	jne    4123c7 <isspace@plt+0xeab7>
  4123b3:	mov    rdi,r15
  4123b6:	call   410650 <isspace@plt+0xcd40>
  4123bb:	test   r12,r12
  4123be:	jne    412315 <isspace@plt+0xea05>
  4123c4:	xor    r12d,r12d
  4123c7:	mov    rax,QWORD PTR [rsp]
  4123cb:	sub    rax,r12
  4123ce:	jmp    4123d7 <isspace@plt+0xeac7>
  4123d0:	mov    rax,0xffffffffffffffff
  4123d7:	mov    rcx,QWORD PTR fs:0x28
  4123e0:	cmp    rcx,QWORD PTR [rsp+0x30]
  4123e5:	jne    4123f6 <isspace@plt+0xeae6>
  4123e7:	add    rsp,0x38
  4123eb:	pop    rbx
  4123ec:	pop    r12
  4123ee:	pop    r13
  4123f0:	pop    r14
  4123f2:	pop    r15
  4123f4:	pop    rbp
  4123f5:	ret    
  4123f6:	call   403280 <__stack_chk_fail@plt>
  4123fb:	nop    DWORD PTR [rax+rax*1+0x0]
  412400:	push   r14
  412402:	push   rbx
  412403:	push   rax
  412404:	mov    r14,rsi
  412407:	mov    rbx,rdi
  41240a:	mov    rax,QWORD PTR fs:0x28
  412413:	mov    QWORD PTR [rsp],rax
  412417:	call   4107d0 <isspace@plt+0xcec0>
  41241c:	test   al,al
  41241e:	je     412457 <isspace@plt+0xeb47>
  412420:	mov    rdi,rbx
  412423:	call   410790 <isspace@plt+0xce80>
  412428:	mov    rcx,QWORD PTR [rbx+0x10]
  41242c:	cmp    QWORD PTR [rbx],rcx
  41242f:	ja     41243e <isspace@plt+0xeb2e>
  412431:	cmp    rcx,QWORD PTR [rbx+0x8]
  412435:	jae    41243e <isspace@plt+0xeb2e>
  412437:	mov    al,BYTE PTR [rcx]
  412439:	mov    BYTE PTR [r14],al
  41243c:	jmp    412453 <isspace@plt+0xeb43>
  41243e:	mov    rbx,QWORD PTR [rbx+0x20]
  412442:	mov    rdi,rax
  412445:	call   410890 <isspace@plt+0xcf80>
  41244a:	cmp    rbx,rax
  41244d:	jne    412457 <isspace@plt+0xeb47>
  41244f:	mov    BYTE PTR [r14],0x0
  412453:	mov    al,0x1
  412455:	jmp    412459 <isspace@plt+0xeb49>
  412457:	xor    eax,eax
  412459:	mov    rcx,QWORD PTR fs:0x28
  412462:	cmp    rcx,QWORD PTR [rsp]
  412466:	jne    412470 <isspace@plt+0xeb60>
  412468:	add    rsp,0x8
  41246c:	pop    rbx
  41246d:	pop    r14
  41246f:	ret    
  412470:	call   403280 <__stack_chk_fail@plt>
  412475:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41247f:	nop
  412480:	push   rbp
  412481:	push   r14
  412483:	push   rbx
  412484:	sub    rsp,0x10
  412488:	mov    r14,rsi
  41248b:	mov    rbx,rdi
  41248e:	mov    rax,QWORD PTR fs:0x28
  412497:	mov    QWORD PTR [rsp+0x8],rax
  41249c:	call   410810 <isspace@plt+0xcf00>
  4124a1:	test   al,al
  4124a3:	je     4124eb <isspace@plt+0xebdb>
  4124a5:	mov    rax,QWORD PTR [rbx+0x10]
  4124a9:	cmp    rax,QWORD PTR [rbx+0x8]
  4124ad:	je     4124be <isspace@plt+0xebae>
  4124af:	inc    rax
  4124b2:	mov    QWORD PTR [rbx+0x10],rax
  4124b6:	inc    QWORD PTR [rbx+0x20]
  4124ba:	xor    ebp,ebp
  4124bc:	jmp    4124d0 <isspace@plt+0xebc0>
  4124be:	mov    rdi,rbx
  4124c1:	call   410850 <isspace@plt+0xcf40>
  4124c6:	mov    ebp,eax
  4124c8:	nop    DWORD PTR [rax+rax*1+0x0]
  4124d0:	mov    rcx,QWORD PTR [rbx+0x10]
  4124d4:	cmp    rcx,QWORD PTR [rbx+0x8]
  4124d8:	jne    4124ef <isspace@plt+0xebdf>
  4124da:	mov    rdi,rbx
  4124dd:	call   410650 <isspace@plt+0xcd40>
  4124e2:	test   al,al
  4124e4:	jne    4124d0 <isspace@plt+0xebc0>
  4124e6:	test   bpl,bpl
  4124e9:	je     412514 <isspace@plt+0xec04>
  4124eb:	xor    eax,eax
  4124ed:	jmp    4124fb <isspace@plt+0xebeb>
  4124ef:	mov    al,0x1
  4124f1:	test   r14,r14
  4124f4:	je     4124fb <isspace@plt+0xebeb>
  4124f6:	mov    cl,BYTE PTR [rcx]
  4124f8:	mov    BYTE PTR [r14],cl
  4124fb:	mov    rcx,QWORD PTR fs:0x28
  412504:	cmp    rcx,QWORD PTR [rsp+0x8]
  412509:	jne    412535 <isspace@plt+0xec25>
  41250b:	add    rsp,0x10
  41250f:	pop    rbx
  412510:	pop    r14
  412512:	pop    rbp
  412513:	ret    
  412514:	test   r14,r14
  412517:	je     41251d <isspace@plt+0xec0d>
  412519:	mov    BYTE PTR [r14],0x0
  41251d:	mov    rdi,rbx
  412520:	call   4106e0 <isspace@plt+0xcdd0>
  412525:	mov    rcx,QWORD PTR fs:0x28
  41252e:	cmp    rcx,QWORD PTR [rsp+0x8]
  412533:	je     41250b <isspace@plt+0xebfb>
  412535:	call   403280 <__stack_chk_fail@plt>
  41253a:	nop    WORD PTR [rax+rax*1+0x0]
  412540:	push   rbp
  412541:	push   r14
  412543:	push   rbx
  412544:	sub    rsp,0x10
  412548:	mov    r14,rsi
  41254b:	mov    rbx,rdi
  41254e:	mov    rax,QWORD PTR fs:0x28
  412557:	mov    QWORD PTR [rsp+0x8],rax
  41255c:	call   410850 <isspace@plt+0xcf40>
  412561:	test   al,al
  412563:	je     41258a <isspace@plt+0xec7a>
  412565:	mov    rdi,rbx
  412568:	call   410810 <isspace@plt+0xcf00>
  41256d:	mov    ebp,eax
  41256f:	nop
  412570:	mov    rcx,QWORD PTR [rbx+0x10]
  412574:	cmp    rcx,QWORD PTR [rbx]
  412577:	jne    41258e <isspace@plt+0xec7e>
  412579:	mov    rdi,rbx
  41257c:	call   4106e0 <isspace@plt+0xcdd0>
  412581:	test   al,al
  412583:	jne    412570 <isspace@plt+0xec60>
  412585:	test   bpl,bpl
  412588:	je     4125be <isspace@plt+0xecae>
  41258a:	xor    eax,eax
  41258c:	jmp    4125a5 <isspace@plt+0xec95>
  41258e:	dec    rcx
  412591:	mov    QWORD PTR [rbx+0x10],rcx
  412595:	dec    QWORD PTR [rbx+0x20]
  412599:	mov    al,0x1
  41259b:	test   r14,r14
  41259e:	je     4125a5 <isspace@plt+0xec95>
  4125a0:	mov    cl,BYTE PTR [rcx]
  4125a2:	mov    BYTE PTR [r14],cl
  4125a5:	mov    rcx,QWORD PTR fs:0x28
  4125ae:	cmp    rcx,QWORD PTR [rsp+0x8]
  4125b3:	jne    4125df <isspace@plt+0xeccf>
  4125b5:	add    rsp,0x10
  4125b9:	pop    rbx
  4125ba:	pop    r14
  4125bc:	pop    rbp
  4125bd:	ret    
  4125be:	test   r14,r14
  4125c1:	je     4125c7 <isspace@plt+0xecb7>
  4125c3:	mov    BYTE PTR [r14],0x0
  4125c7:	mov    rdi,rbx
  4125ca:	call   410650 <isspace@plt+0xcd40>
  4125cf:	mov    rcx,QWORD PTR fs:0x28
  4125d8:	cmp    rcx,QWORD PTR [rsp+0x8]
  4125dd:	je     4125b5 <isspace@plt+0xeca5>
  4125df:	call   403280 <__stack_chk_fail@plt>
  4125e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4125ee:	xchg   ax,ax
  4125f0:	push   rbp
  4125f1:	push   r14
  4125f3:	push   rbx
  4125f4:	sub    rsp,0x10
  4125f8:	mov    rbx,rdi
  4125fb:	mov    rax,QWORD PTR fs:0x28
  412604:	mov    QWORD PTR [rsp+0x8],rax
  412609:	mov    rbp,QWORD PTR [rdi+0x10]
  41260d:	test   rbp,rbp
  412610:	je     412647 <isspace@plt+0xed37>
  412612:	movsx  r14d,sil
  412616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412620:	mov    rdi,QWORD PTR [rbx]
  412623:	mov    rdx,rbp
  412626:	sub    rdx,rdi
  412629:	mov    esi,r14d
  41262c:	call   403780 <memrchr@plt>
  412631:	test   rax,rax
  412634:	jne    412653 <isspace@plt+0xed43>
  412636:	mov    rdi,rbx
  412639:	call   4106e0 <isspace@plt+0xcdd0>
  41263e:	mov    rbp,QWORD PTR [rbx+0x10]
  412642:	test   rbp,rbp
  412645:	jne    412620 <isspace@plt+0xed10>
  412647:	mov    rdi,rbx
  41264a:	call   410650 <isspace@plt+0xcd40>
  41264f:	xor    eax,eax
  412651:	jmp    412663 <isspace@plt+0xed53>
  412653:	mov    rcx,rax
  412656:	sub    rcx,rbp
  412659:	add    QWORD PTR [rbx+0x20],rcx
  41265d:	mov    QWORD PTR [rbx+0x10],rax
  412661:	mov    al,0x1
  412663:	mov    rcx,QWORD PTR fs:0x28
  41266c:	cmp    rcx,QWORD PTR [rsp+0x8]
  412671:	jne    41267c <isspace@plt+0xed6c>
  412673:	add    rsp,0x10
  412677:	pop    rbx
  412678:	pop    r14
  41267a:	pop    rbp
  41267b:	ret    
  41267c:	call   403280 <__stack_chk_fail@plt>
  412681:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41268b:	nop    DWORD PTR [rax+rax*1+0x0]
  412690:	push   rbp
  412691:	push   r14
  412693:	push   rbx
  412694:	sub    rsp,0x10
  412698:	mov    r14,rdi
  41269b:	mov    rax,QWORD PTR fs:0x28
  4126a4:	mov    QWORD PTR [rsp+0x8],rax
  4126a9:	mov    rbx,QWORD PTR [rdi+0x10]
  4126ad:	test   rbx,rbx
  4126b0:	je     4126e7 <isspace@plt+0xedd7>
  4126b2:	movsx  ebp,sil
  4126b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4126c0:	mov    rdx,QWORD PTR [r14+0x8]
  4126c4:	sub    rdx,rbx
  4126c7:	mov    rdi,rbx
  4126ca:	mov    esi,ebp
  4126cc:	call   403410 <memchr@plt>
  4126d1:	test   rax,rax
  4126d4:	jne    4126f3 <isspace@plt+0xede3>
  4126d6:	mov    rdi,r14
  4126d9:	call   410650 <isspace@plt+0xcd40>
  4126de:	mov    rbx,QWORD PTR [r14+0x10]
  4126e2:	test   rbx,rbx
  4126e5:	jne    4126c0 <isspace@plt+0xedb0>
  4126e7:	mov    rdi,r14
  4126ea:	call   4106e0 <isspace@plt+0xcdd0>
  4126ef:	xor    eax,eax
  4126f1:	jmp    412703 <isspace@plt+0xedf3>
  4126f3:	mov    rcx,rax
  4126f6:	sub    rcx,rbx
  4126f9:	add    QWORD PTR [r14+0x20],rcx
  4126fd:	mov    QWORD PTR [r14+0x10],rax
  412701:	mov    al,0x1
  412703:	mov    rcx,QWORD PTR fs:0x28
  41270c:	cmp    rcx,QWORD PTR [rsp+0x8]
  412711:	jne    41271c <isspace@plt+0xee0c>
  412713:	add    rsp,0x10
  412717:	pop    rbx
  412718:	pop    r14
  41271a:	pop    rbp
  41271b:	ret    
  41271c:	call   403280 <__stack_chk_fail@plt>
  412721:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41272b:	nop    DWORD PTR [rax+rax*1+0x0]
  412730:	push   rbp
  412731:	push   r14
  412733:	push   rbx
  412734:	sub    rsp,0x10
  412738:	mov    r14,rsi
  41273b:	mov    rbx,rdi
  41273e:	mov    rax,QWORD PTR fs:0x28
  412747:	mov    QWORD PTR [rsp+0x8],rax
  41274c:	jmp    41275a <isspace@plt+0xee4a>
  41274e:	xchg   ax,ax
  412750:	mov    cl,BYTE PTR [rax]
  412752:	mov    eax,ecx
  412754:	and    al,0xc0
  412756:	cmp    al,0x80
  412758:	jne    4127c1 <isspace@plt+0xeeb1>
  41275a:	mov    rdi,rbx
  41275d:	call   410810 <isspace@plt+0xcf00>
  412762:	test   al,al
  412764:	je     4127bd <isspace@plt+0xeead>
  412766:	mov    rax,QWORD PTR [rbx+0x10]
  41276a:	cmp    rax,QWORD PTR [rbx+0x8]
  41276e:	je     412780 <isspace@plt+0xee70>
  412770:	inc    rax
  412773:	mov    QWORD PTR [rbx+0x10],rax
  412777:	inc    QWORD PTR [rbx+0x20]
  41277b:	xor    ebp,ebp
  41277d:	jmp    412790 <isspace@plt+0xee80>
  41277f:	nop
  412780:	mov    rdi,rbx
  412783:	call   410850 <isspace@plt+0xcf40>
  412788:	mov    ebp,eax
  41278a:	nop    WORD PTR [rax+rax*1+0x0]
  412790:	mov    rax,QWORD PTR [rbx+0x10]
  412794:	cmp    rax,QWORD PTR [rbx+0x8]
  412798:	jne    412750 <isspace@plt+0xee40>
  41279a:	mov    rdi,rbx
  41279d:	call   410650 <isspace@plt+0xcd40>
  4127a2:	test   al,al
  4127a4:	jne    412790 <isspace@plt+0xee80>
  4127a6:	test   bpl,bpl
  4127a9:	jne    4127bd <isspace@plt+0xeead>
  4127ab:	mov    rdi,rbx
  4127ae:	call   4106e0 <isspace@plt+0xcdd0>
  4127b3:	test   al,al
  4127b5:	je     4127bd <isspace@plt+0xeead>
  4127b7:	mov    rax,QWORD PTR [rbx+0x10]
  4127bb:	jmp    412750 <isspace@plt+0xee40>
  4127bd:	xor    eax,eax
  4127bf:	jmp    4127cb <isspace@plt+0xeebb>
  4127c1:	mov    al,0x1
  4127c3:	test   r14,r14
  4127c6:	je     4127cb <isspace@plt+0xeebb>
  4127c8:	mov    BYTE PTR [r14],cl
  4127cb:	mov    rcx,QWORD PTR fs:0x28
  4127d4:	cmp    rcx,QWORD PTR [rsp+0x8]
  4127d9:	jne    4127e4 <isspace@plt+0xeed4>
  4127db:	add    rsp,0x10
  4127df:	pop    rbx
  4127e0:	pop    r14
  4127e2:	pop    rbp
  4127e3:	ret    
  4127e4:	call   403280 <__stack_chk_fail@plt>
  4127e9:	nop    DWORD PTR [rax+0x0]
  4127f0:	push   rbp
  4127f1:	push   r14
  4127f3:	push   rbx
  4127f4:	sub    rsp,0x10
  4127f8:	mov    r14,rsi
  4127fb:	mov    rbx,rdi
  4127fe:	mov    rax,QWORD PTR fs:0x28
  412807:	mov    QWORD PTR [rsp+0x8],rax
  41280c:	jmp    412825 <isspace@plt+0xef15>
  41280e:	xchg   ax,ax
  412810:	dec    rax
  412813:	mov    QWORD PTR [rbx+0x10],rax
  412817:	dec    QWORD PTR [rbx+0x20]
  41281b:	mov    cl,BYTE PTR [rax]
  41281d:	mov    eax,ecx
  41281f:	and    al,0xc0
  412821:	cmp    al,0x80
  412823:	jne    412870 <isspace@plt+0xef60>
  412825:	mov    rdi,rbx
  412828:	call   410850 <isspace@plt+0xcf40>
  41282d:	test   al,al
  41282f:	je     41286c <isspace@plt+0xef5c>
  412831:	mov    rdi,rbx
  412834:	call   410810 <isspace@plt+0xcf00>
  412839:	mov    ebp,eax
  41283b:	nop    DWORD PTR [rax+rax*1+0x0]
  412840:	mov    rax,QWORD PTR [rbx+0x10]
  412844:	cmp    rax,QWORD PTR [rbx]
  412847:	jne    412810 <isspace@plt+0xef00>
  412849:	mov    rdi,rbx
  41284c:	call   4106e0 <isspace@plt+0xcdd0>
  412851:	test   al,al
  412853:	jne    412840 <isspace@plt+0xef30>
  412855:	test   bpl,bpl
  412858:	jne    41286c <isspace@plt+0xef5c>
  41285a:	mov    rdi,rbx
  41285d:	call   410650 <isspace@plt+0xcd40>
  412862:	test   al,al
  412864:	je     41286c <isspace@plt+0xef5c>
  412866:	mov    rax,QWORD PTR [rbx+0x10]
  41286a:	jmp    41281b <isspace@plt+0xef0b>
  41286c:	xor    eax,eax
  41286e:	jmp    41287a <isspace@plt+0xef6a>
  412870:	mov    al,0x1
  412872:	test   r14,r14
  412875:	je     41287a <isspace@plt+0xef6a>
  412877:	mov    BYTE PTR [r14],cl
  41287a:	mov    rcx,QWORD PTR fs:0x28
  412883:	cmp    rcx,QWORD PTR [rsp+0x8]
  412888:	jne    412893 <isspace@plt+0xef83>
  41288a:	add    rsp,0x10
  41288e:	pop    rbx
  41288f:	pop    r14
  412891:	pop    rbp
  412892:	ret    
  412893:	call   403280 <__stack_chk_fail@plt>
  412898:	nop    DWORD PTR [rax+rax*1+0x0]
  4128a0:	push   rbp
  4128a1:	push   r15
  4128a3:	push   r14
  4128a5:	push   r13
  4128a7:	push   r12
  4128a9:	push   rbx
  4128aa:	sub    rsp,0x38
  4128ae:	mov    r14,rsi
  4128b1:	mov    rbx,rdi
  4128b4:	mov    rax,QWORD PTR fs:0x28
  4128bd:	mov    QWORD PTR [rsp+0x30],rax
  4128c2:	jmp    4128dc <isspace@plt+0xefcc>
  4128c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4128ce:	xchg   ax,ax
  4128d0:	mov    al,BYTE PTR [rax]
  4128d2:	mov    ecx,eax
  4128d4:	and    cl,0xc0
  4128d7:	cmp    cl,0x80
  4128da:	jne    412958 <isspace@plt+0xf048>
  4128dc:	mov    rdi,rbx
  4128df:	call   410810 <isspace@plt+0xcf00>
  4128e4:	test   al,al
  4128e6:	je     412a95 <isspace@plt+0xf185>
  4128ec:	mov    rax,QWORD PTR [rbx+0x10]
  4128f0:	cmp    rax,QWORD PTR [rbx+0x8]
  4128f4:	je     412910 <isspace@plt+0xf000>
  4128f6:	inc    rax
  4128f9:	mov    QWORD PTR [rbx+0x10],rax
  4128fd:	inc    QWORD PTR [rbx+0x20]
  412901:	xor    ebp,ebp
  412903:	jmp    412920 <isspace@plt+0xf010>
  412905:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41290f:	nop
  412910:	mov    rdi,rbx
  412913:	call   410850 <isspace@plt+0xcf40>
  412918:	mov    ebp,eax
  41291a:	nop    WORD PTR [rax+rax*1+0x0]
  412920:	mov    rax,QWORD PTR [rbx+0x10]
  412924:	cmp    rax,QWORD PTR [rbx+0x8]
  412928:	jne    4128d0 <isspace@plt+0xefc0>
  41292a:	mov    rdi,rbx
  41292d:	call   410650 <isspace@plt+0xcd40>
  412932:	test   al,al
  412934:	jne    412920 <isspace@plt+0xf010>
  412936:	test   bpl,bpl
  412939:	jne    412a95 <isspace@plt+0xf185>
  41293f:	mov    rdi,rbx
  412942:	call   4106e0 <isspace@plt+0xcdd0>
  412947:	test   al,al
  412949:	je     412a95 <isspace@plt+0xf185>
  41294f:	mov    rax,QWORD PTR [rbx+0x10]
  412953:	jmp    4128d0 <isspace@plt+0xefc0>
  412958:	test   r14,r14
  41295b:	je     412960 <isspace@plt+0xf050>
  41295d:	mov    BYTE PTR [r14],al
  412960:	mov    QWORD PTR [rsp+0x18],0x0
  412969:	mov    rdi,rbx
  41296c:	call   410790 <isspace@plt+0xce80>
  412971:	lea    rbp,[rsp+0x20]
  412976:	lea    r13,[rsp+0x14]
  41297b:	lea    r15,[rsp+0x18]
  412980:	mov    QWORD PTR [rsp+0x8],rax
  412985:	mov    rsi,QWORD PTR [rbx+0x20]
  412989:	mov    edx,0x10
  41298e:	mov    rdi,rax
  412991:	mov    rcx,rbp
  412994:	call   411130 <isspace@plt+0xd820>
  412999:	mov    r12,r13
  41299c:	mov    rdi,r13
  41299f:	mov    rsi,rbp
  4129a2:	mov    rdx,rax
  4129a5:	mov    rcx,r15
  4129a8:	call   4032b0 <mbrtowc@plt>
  4129ad:	mov    r13b,0x1
  4129b0:	cmp    rax,0xffffffffffffffff
  4129b4:	je     4129d0 <isspace@plt+0xf0c0>
  4129b6:	cmp    rax,0xfffffffffffffffe
  4129ba:	je     412a95 <isspace@plt+0xf185>
  4129c0:	test   rax,rax
  4129c3:	jne    4129de <isspace@plt+0xf0ce>
  4129c5:	jmp    412a98 <isspace@plt+0xf188>
  4129ca:	nop    WORD PTR [rax+rax*1+0x0]
  4129d0:	call   403130 <__errno_location@plt>
  4129d5:	cmp    DWORD PTR [rax],0x54
  4129d8:	je     412aba <isspace@plt+0xf1aa>
  4129de:	mov    edi,DWORD PTR [rsp+0x14]
  4129e2:	call   403590 <wcwidth@plt>
  4129e7:	test   eax,eax
  4129e9:	jne    412a98 <isspace@plt+0xf188>
  4129ef:	mov    r13,r12
  4129f2:	jmp    412a10 <isspace@plt+0xf100>
  4129f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4129fe:	xchg   ax,ax
  412a00:	mov    rax,QWORD PTR [rbx+0x10]
  412a04:	mov    al,BYTE PTR [rax]
  412a06:	mov    ecx,eax
  412a08:	and    cl,0xc0
  412a0b:	cmp    cl,0x80
  412a0e:	jne    412a79 <isspace@plt+0xf169>
  412a10:	mov    rdi,rbx
  412a13:	call   410810 <isspace@plt+0xcf00>
  412a18:	test   al,al
  412a1a:	je     412a95 <isspace@plt+0xf185>
  412a1c:	mov    rax,QWORD PTR [rbx+0x10]
  412a20:	cmp    rax,QWORD PTR [rbx+0x8]
  412a24:	je     412a40 <isspace@plt+0xf130>
  412a26:	inc    rax
  412a29:	mov    QWORD PTR [rbx+0x10],rax
  412a2d:	inc    QWORD PTR [rbx+0x20]
  412a31:	xor    ebp,ebp
  412a33:	jmp    412a50 <isspace@plt+0xf140>
  412a35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412a3f:	nop
  412a40:	mov    rdi,rbx
  412a43:	call   410850 <isspace@plt+0xcf40>
  412a48:	mov    ebp,eax
  412a4a:	nop    WORD PTR [rax+rax*1+0x0]
  412a50:	mov    rax,QWORD PTR [rbx+0x10]
  412a54:	cmp    rax,QWORD PTR [rbx+0x8]
  412a58:	jne    412a04 <isspace@plt+0xf0f4>
  412a5a:	mov    rdi,rbx
  412a5d:	call   410650 <isspace@plt+0xcd40>
  412a62:	test   al,al
  412a64:	jne    412a50 <isspace@plt+0xf140>
  412a66:	test   bpl,bpl
  412a69:	jne    412a95 <isspace@plt+0xf185>
  412a6b:	mov    rdi,rbx
  412a6e:	call   4106e0 <isspace@plt+0xcdd0>
  412a73:	test   al,al
  412a75:	jne    412a00 <isspace@plt+0xf0f0>
  412a77:	jmp    412a95 <isspace@plt+0xf185>
  412a79:	test   r14,r14
  412a7c:	je     412a81 <isspace@plt+0xf171>
  412a7e:	mov    BYTE PTR [r14],al
  412a81:	lea    r15,[rsp+0x18]
  412a86:	lea    rbp,[rsp+0x20]
  412a8b:	mov    rax,QWORD PTR [rsp+0x8]
  412a90:	jmp    412985 <isspace@plt+0xf075>
  412a95:	xor    r13d,r13d
  412a98:	mov    rax,QWORD PTR fs:0x28
  412aa1:	cmp    rax,QWORD PTR [rsp+0x30]
  412aa6:	jne    412abf <isspace@plt+0xf1af>
  412aa8:	mov    eax,r13d
  412aab:	add    rsp,0x38
  412aaf:	pop    rbx
  412ab0:	pop    r12
  412ab2:	pop    r13
  412ab4:	pop    r14
  412ab6:	pop    r15
  412ab8:	pop    rbp
  412ab9:	ret    
  412aba:	mov    r13b,0x1
  412abd:	jmp    412a98 <isspace@plt+0xf188>
  412abf:	call   403280 <__stack_chk_fail@plt>
  412ac4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412ace:	xchg   ax,ax
  412ad0:	push   rbp
  412ad1:	push   r15
  412ad3:	push   r14
  412ad5:	push   r13
  412ad7:	push   r12
  412ad9:	push   rbx
  412ada:	sub    rsp,0x28
  412ade:	mov    r14,rsi
  412ae1:	mov    rbx,rdi
  412ae4:	mov    rax,QWORD PTR fs:0x28
  412aed:	mov    QWORD PTR [rsp+0x20],rax
  412af2:	jmp    412b17 <isspace@plt+0xf207>
  412af4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412afe:	xchg   ax,ax
  412b00:	dec    rax
  412b03:	mov    QWORD PTR [rbx+0x10],rax
  412b07:	dec    QWORD PTR [rbx+0x20]
  412b0b:	mov    al,BYTE PTR [rax]
  412b0d:	mov    ecx,eax
  412b0f:	and    cl,0xc0
  412b12:	cmp    cl,0x80
  412b15:	jne    412b74 <isspace@plt+0xf264>
  412b17:	mov    rdi,rbx
  412b1a:	call   410850 <isspace@plt+0xcf40>
  412b1f:	test   al,al
  412b21:	je     412c7e <isspace@plt+0xf36e>
  412b27:	mov    rdi,rbx
  412b2a:	call   410810 <isspace@plt+0xcf00>
  412b2f:	mov    ebp,eax
  412b31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412b3b:	nop    DWORD PTR [rax+rax*1+0x0]
  412b40:	mov    rax,QWORD PTR [rbx+0x10]
  412b44:	cmp    rax,QWORD PTR [rbx]
  412b47:	jne    412b00 <isspace@plt+0xf1f0>
  412b49:	mov    rdi,rbx
  412b4c:	call   4106e0 <isspace@plt+0xcdd0>
  412b51:	test   al,al
  412b53:	jne    412b40 <isspace@plt+0xf230>
  412b55:	test   bpl,bpl
  412b58:	jne    412c7e <isspace@plt+0xf36e>
  412b5e:	mov    rdi,rbx
  412b61:	call   410650 <isspace@plt+0xcd40>
  412b66:	test   al,al
  412b68:	je     412c7e <isspace@plt+0xf36e>
  412b6e:	mov    rax,QWORD PTR [rbx+0x10]
  412b72:	jmp    412b0b <isspace@plt+0xf1fb>
  412b74:	test   r14,r14
  412b77:	je     412b7c <isspace@plt+0xf26c>
  412b79:	mov    BYTE PTR [r14],al
  412b7c:	mov    rdi,rbx
  412b7f:	call   410790 <isspace@plt+0xce80>
  412b84:	mov    r15,rax
  412b87:	lea    r12,[rsp+0x10]
  412b8c:	lea    r13,[rsp+0xc]
  412b91:	mov    rbp,rsp
  412b94:	mov    rsi,QWORD PTR [rbx+0x20]
  412b98:	mov    edx,0x10
  412b9d:	mov    rdi,r15
  412ba0:	mov    rcx,r12
  412ba3:	call   411130 <isspace@plt+0xd820>
  412ba8:	mov    QWORD PTR [rsp],0x0
  412bb0:	mov    rdi,r13
  412bb3:	mov    rsi,r12
  412bb6:	mov    rdx,rax
  412bb9:	mov    rcx,rbp
  412bbc:	call   4032b0 <mbrtowc@plt>
  412bc1:	cmp    rax,0xffffffffffffffff
  412bc5:	je     412be0 <isspace@plt+0xf2d0>
  412bc7:	cmp    rax,0xfffffffffffffffe
  412bcb:	je     412c7e <isspace@plt+0xf36e>
  412bd1:	test   rax,rax
  412bd4:	jne    412bee <isspace@plt+0xf2de>
  412bd6:	jmp    412c9f <isspace@plt+0xf38f>
  412bdb:	nop    DWORD PTR [rax+rax*1+0x0]
  412be0:	call   403130 <__errno_location@plt>
  412be5:	cmp    DWORD PTR [rax],0x54
  412be8:	je     412c9f <isspace@plt+0xf38f>
  412bee:	mov    edi,DWORD PTR [rsp+0xc]
  412bf2:	call   403590 <wcwidth@plt>
  412bf7:	test   eax,eax
  412bf9:	je     412c1d <isspace@plt+0xf30d>
  412bfb:	jmp    412c9f <isspace@plt+0xf38f>
  412c00:	dec    rax
  412c03:	mov    QWORD PTR [rbx+0x10],rax
  412c07:	dec    QWORD PTR [rbx+0x20]
  412c0b:	mov    al,BYTE PTR [rax]
  412c0d:	mov    ecx,eax
  412c0f:	and    cl,0xc0
  412c12:	cmp    cl,0x80
  412c15:	mov    r13,rbp
  412c18:	mov    rbp,r12
  412c1b:	jne    412c6c <isspace@plt+0xf35c>
  412c1d:	mov    rdi,rbx
  412c20:	call   410850 <isspace@plt+0xcf40>
  412c25:	test   al,al
  412c27:	je     412c7e <isspace@plt+0xf36e>
  412c29:	mov    r12,rbp
  412c2c:	mov    rbp,r13
  412c2f:	mov    rdi,rbx
  412c32:	call   410810 <isspace@plt+0xcf00>
  412c37:	mov    r13d,eax
  412c3a:	nop    WORD PTR [rax+rax*1+0x0]
  412c40:	mov    rax,QWORD PTR [rbx+0x10]
  412c44:	cmp    rax,QWORD PTR [rbx]
  412c47:	jne    412c00 <isspace@plt+0xf2f0>
  412c49:	mov    rdi,rbx
  412c4c:	call   4106e0 <isspace@plt+0xcdd0>
  412c51:	test   al,al
  412c53:	jne    412c40 <isspace@plt+0xf330>
  412c55:	test   r13b,r13b
  412c58:	jne    412c7e <isspace@plt+0xf36e>
  412c5a:	mov    rdi,rbx
  412c5d:	call   410650 <isspace@plt+0xcd40>
  412c62:	test   al,al
  412c64:	je     412c7e <isspace@plt+0xf36e>
  412c66:	mov    rax,QWORD PTR [rbx+0x10]
  412c6a:	jmp    412c0b <isspace@plt+0xf2fb>
  412c6c:	test   r14,r14
  412c6f:	je     412c74 <isspace@plt+0xf364>
  412c71:	mov    BYTE PTR [r14],al
  412c74:	lea    r12,[rsp+0x10]
  412c79:	jmp    412b94 <isspace@plt+0xf284>
  412c7e:	xor    eax,eax
  412c80:	mov    rcx,QWORD PTR fs:0x28
  412c89:	cmp    rcx,QWORD PTR [rsp+0x20]
  412c8e:	jne    412ca3 <isspace@plt+0xf393>
  412c90:	add    rsp,0x28
  412c94:	pop    rbx
  412c95:	pop    r12
  412c97:	pop    r13
  412c99:	pop    r14
  412c9b:	pop    r15
  412c9d:	pop    rbp
  412c9e:	ret    
  412c9f:	mov    al,0x1
  412ca1:	jmp    412c80 <isspace@plt+0xf370>
  412ca3:	call   403280 <__stack_chk_fail@plt>
  412ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  412cb0:	push   rax
  412cb1:	mov    rax,QWORD PTR fs:0x28
  412cba:	mov    QWORD PTR [rsp],rax
  412cbe:	test   dil,dil
  412cc1:	js     412ce9 <isspace@plt+0xf3d9>
  412cc3:	lea    eax,[rdi-0x30]
  412cc6:	cmp    eax,0x9
  412cc9:	seta   al
  412ccc:	mov    ecx,edi
  412cce:	and    ecx,0xffffffdf
  412cd1:	add    ecx,0xffffffbf
  412cd4:	cmp    ecx,0x19
  412cd7:	seta   cl
  412cda:	cmp    edi,0x5f
  412cdd:	setne  dl
  412ce0:	and    dl,al
  412ce2:	and    dl,cl
  412ce4:	movzx  eax,dl
  412ce7:	jmp    412ceb <isspace@plt+0xf3db>
  412ce9:	xor    eax,eax
  412ceb:	mov    rcx,QWORD PTR fs:0x28
  412cf4:	cmp    rcx,QWORD PTR [rsp]
  412cf8:	jne    412cfc <isspace@plt+0xf3ec>
  412cfa:	pop    rcx
  412cfb:	ret    
  412cfc:	call   403280 <__stack_chk_fail@plt>
  412d01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412d0b:	nop    DWORD PTR [rax+rax*1+0x0]
  412d10:	push   rbx
  412d11:	sub    rsp,0x30
  412d15:	mov    rdx,rsi
  412d18:	mov    rsi,rdi
  412d1b:	mov    rax,QWORD PTR fs:0x28
  412d24:	mov    QWORD PTR [rsp+0x28],rax
  412d29:	mov    rbx,rsp
  412d2c:	mov    rdi,rbx
  412d2f:	call   410570 <isspace@plt+0xcc60>
  412d34:	mov    rdi,rbx
  412d37:	xor    esi,esi
  412d39:	call   4128a0 <isspace@plt+0xef90>
  412d3e:	mov    rax,QWORD PTR [rsp+0x20]
  412d43:	mov    rcx,QWORD PTR fs:0x28
  412d4c:	cmp    rcx,QWORD PTR [rsp+0x28]
  412d51:	jne    412d59 <isspace@plt+0xf449>
  412d53:	add    rsp,0x30
  412d57:	pop    rbx
  412d58:	ret    
  412d59:	call   403280 <__stack_chk_fail@plt>
  412d5e:	xchg   ax,ax
  412d60:	push   rbx
  412d61:	sub    rsp,0x30
  412d65:	mov    rdx,rsi
  412d68:	mov    rsi,rdi
  412d6b:	mov    rax,QWORD PTR fs:0x28
  412d74:	mov    QWORD PTR [rsp+0x28],rax
  412d79:	mov    rbx,rsp
  412d7c:	mov    rdi,rbx
  412d7f:	call   410570 <isspace@plt+0xcc60>
  412d84:	mov    rdi,rbx
  412d87:	xor    esi,esi
  412d89:	call   412ad0 <isspace@plt+0xf1c0>
  412d8e:	mov    rax,QWORD PTR [rsp+0x20]
  412d93:	mov    rcx,QWORD PTR fs:0x28
  412d9c:	cmp    rcx,QWORD PTR [rsp+0x28]
  412da1:	jne    412da9 <isspace@plt+0xf499>
  412da3:	add    rsp,0x30
  412da7:	pop    rbx
  412da8:	ret    
  412da9:	call   403280 <__stack_chk_fail@plt>
  412dae:	xchg   ax,ax
  412db0:	push   rbx
  412db1:	sub    rsp,0x30
  412db5:	mov    rdx,rsi
  412db8:	mov    rsi,rdi
  412dbb:	mov    rax,QWORD PTR fs:0x28
  412dc4:	mov    QWORD PTR [rsp+0x28],rax
  412dc9:	mov    rbx,rsp
  412dcc:	mov    rdi,rbx
  412dcf:	call   410570 <isspace@plt+0xcc60>
  412dd4:	mov    rdi,rbx
  412dd7:	xor    esi,esi
  412dd9:	call   412730 <isspace@plt+0xee20>
  412dde:	mov    rax,QWORD PTR [rsp+0x20]
  412de3:	mov    rcx,QWORD PTR fs:0x28
  412dec:	cmp    rcx,QWORD PTR [rsp+0x28]
  412df1:	jne    412df9 <isspace@plt+0xf4e9>
  412df3:	add    rsp,0x30
  412df7:	pop    rbx
  412df8:	ret    
  412df9:	call   403280 <__stack_chk_fail@plt>
  412dfe:	xchg   ax,ax
  412e00:	push   rbx
  412e01:	sub    rsp,0x30
  412e05:	mov    rdx,rsi
  412e08:	mov    rsi,rdi
  412e0b:	mov    rax,QWORD PTR fs:0x28
  412e14:	mov    QWORD PTR [rsp+0x28],rax
  412e19:	mov    rbx,rsp
  412e1c:	mov    rdi,rbx
  412e1f:	call   410570 <isspace@plt+0xcc60>
  412e24:	mov    rdi,rbx
  412e27:	xor    esi,esi
  412e29:	call   4127f0 <isspace@plt+0xeee0>
  412e2e:	mov    rax,QWORD PTR [rsp+0x20]
  412e33:	mov    rcx,QWORD PTR fs:0x28
  412e3c:	cmp    rcx,QWORD PTR [rsp+0x28]
  412e41:	jne    412e49 <isspace@plt+0xf539>
  412e43:	add    rsp,0x30
  412e47:	pop    rbx
  412e48:	ret    
  412e49:	call   403280 <__stack_chk_fail@plt>
  412e4e:	xchg   ax,ax
  412e50:	push   rax
  412e51:	mov    rax,QWORD PTR fs:0x28
  412e5a:	mov    QWORD PTR [rsp],rax
  412e5e:	xor    ecx,ecx
  412e60:	call   412e80 <isspace@plt+0xf570>
  412e65:	mov    rcx,QWORD PTR fs:0x28
  412e6e:	cmp    rcx,QWORD PTR [rsp]
  412e72:	jne    412e76 <isspace@plt+0xf566>
  412e74:	pop    rcx
  412e75:	ret    
  412e76:	call   403280 <__stack_chk_fail@plt>
  412e7b:	nop    DWORD PTR [rax+rax*1+0x0]
  412e80:	push   rbp
  412e81:	push   r15
  412e83:	push   r14
  412e85:	push   r13
  412e87:	push   r12
  412e89:	push   rbx
  412e8a:	sub    rsp,0x88
  412e91:	mov    DWORD PTR [rsp+0xc],ecx
  412e95:	mov    rbp,rsi
  412e98:	mov    rax,QWORD PTR fs:0x28
  412ea1:	mov    QWORD PTR [rsp+0x80],rax
  412ea9:	test   rdx,rdx
  412eac:	je     412f7b <isspace@plt+0xf66b>
  412eb2:	mov    rbx,rdx
  412eb5:	mov    r13,rdi
  412eb8:	mov    rdi,rdx
  412ebb:	call   403250 <strlen@plt>
  412ec0:	mov    r15,rax
  412ec3:	lea    r12,[rsp+0x50]
  412ec8:	mov    rdi,r12
  412ecb:	mov    rsi,r13
  412ece:	mov    QWORD PTR [rsp+0x10],rbp
  412ed3:	mov    rdx,rbp
  412ed6:	call   410570 <isspace@plt+0xcc60>
  412edb:	xor    r14d,r14d
  412ede:	lea    r13,[rsp+0x1f]
  412ee3:	mov    ebp,DWORD PTR [rsp+0xc]
  412ee7:	nop    WORD PTR [rax+rax*1+0x0]
  412ef0:	cmp    r14,r15
  412ef3:	jae    412f67 <isspace@plt+0xf657>
  412ef5:	mov    rdi,r12
  412ef8:	mov    rsi,r13
  412efb:	call   412400 <isspace@plt+0xeaf0>
  412f00:	test   al,al
  412f02:	je     412f67 <isspace@plt+0xf657>
  412f04:	movzx  eax,BYTE PTR [rsp+0x1f]
  412f09:	cmp    al,BYTE PTR [rbx+r14*1]
  412f0d:	jne    412f30 <isspace@plt+0xf620>
  412f0f:	test   r14,r14
  412f12:	jne    412f2a <isspace@plt+0xf61a>
  412f14:	mov    rax,QWORD PTR [rsp+0x70]
  412f19:	mov    QWORD PTR [rsp+0x40],rax
  412f1e:	vmovups ymm0,YMMWORD PTR [rsp+0x50]
  412f24:	vmovups YMMWORD PTR [rsp+0x20],ymm0
  412f2a:	inc    r14
  412f2d:	jmp    412f4e <isspace@plt+0xf63e>
  412f2f:	nop
  412f30:	test   r14,r14
  412f33:	je     412f4b <isspace@plt+0xf63b>
  412f35:	mov    rax,QWORD PTR [rsp+0x40]
  412f3a:	mov    QWORD PTR [rsp+0x70],rax
  412f3f:	vmovups ymm0,YMMWORD PTR [rsp+0x20]
  412f45:	vmovups YMMWORD PTR [rsp+0x50],ymm0
  412f4b:	xor    r14d,r14d
  412f4e:	mov    rdi,r12
  412f51:	xor    esi,esi
  412f53:	vzeroupper 
  412f56:	call   412480 <isspace@plt+0xeb70>
  412f5b:	cmp    BYTE PTR [rsp+0x1f],0xa
  412f60:	jne    412ef0 <isspace@plt+0xf5e0>
  412f62:	test   bpl,bpl
  412f65:	je     412ef0 <isspace@plt+0xf5e0>
  412f67:	mov    rax,QWORD PTR [rsp+0x70]
  412f6c:	sub    rax,r15
  412f6f:	cmp    r14,r15
  412f72:	mov    rbp,QWORD PTR [rsp+0x10]
  412f77:	cmove  rbp,rax
  412f7b:	mov    rax,QWORD PTR fs:0x28
  412f84:	cmp    rax,QWORD PTR [rsp+0x80]
  412f8c:	jne    412fa3 <isspace@plt+0xf693>
  412f8e:	mov    rax,rbp
  412f91:	add    rsp,0x88
  412f98:	pop    rbx
  412f99:	pop    r12
  412f9b:	pop    r13
  412f9d:	pop    r14
  412f9f:	pop    r15
  412fa1:	pop    rbp
  412fa2:	ret    
  412fa3:	call   403280 <__stack_chk_fail@plt>
  412fa8:	nop    DWORD PTR [rax+rax*1+0x0]
  412fb0:	push   rax
  412fb1:	mov    rax,QWORD PTR fs:0x28
  412fba:	mov    QWORD PTR [rsp],rax
  412fbe:	mov    ecx,0x1
  412fc3:	call   412e80 <isspace@plt+0xf570>
  412fc8:	mov    rcx,QWORD PTR fs:0x28
  412fd1:	cmp    rcx,QWORD PTR [rsp]
  412fd5:	jne    412fd9 <isspace@plt+0xf6c9>
  412fd7:	pop    rcx
  412fd8:	ret    
  412fd9:	call   403280 <__stack_chk_fail@plt>
  412fde:	xchg   ax,ax
  412fe0:	push   rbp
  412fe1:	push   r15
  412fe3:	push   r14
  412fe5:	push   r13
  412fe7:	push   r12
  412fe9:	push   rbx
  412fea:	sub    rsp,0x78
  412fee:	mov    r14,rsi
  412ff1:	mov    rax,QWORD PTR fs:0x28
  412ffa:	mov    QWORD PTR [rsp+0x70],rax
  412fff:	test   rdx,rdx
  413002:	je     4130d5 <isspace@plt+0xf7c5>
  413008:	mov    r15,rdx
  41300b:	mov    r12,rdi
  41300e:	mov    rdi,rdx
  413011:	call   403250 <strlen@plt>
  413016:	mov    rbx,rax
  413019:	lea    rdi,[rsp+0x40]
  41301e:	mov    rsi,r12
  413021:	mov    rdx,r14
  413024:	call   410570 <isspace@plt+0xcc60>
  413029:	sub    rbx,0x1
  41302d:	jb     4130d5 <isspace@plt+0xf7c5>
  413033:	lea    rdi,[rsp+0x40]
  413038:	lea    rsi,[rsp+0xf]
  41303d:	call   412540 <isspace@plt+0xec30>
  413042:	test   al,al
  413044:	je     4130d5 <isspace@plt+0xf7c5>
  41304a:	lea    r12,[rsp+0x40]
  41304f:	lea    r13,[rsp+0xf]
  413054:	mov    rbp,rbx
  413057:	jmp    413075 <isspace@plt+0xf765>
  413059:	nop    DWORD PTR [rax+0x0]
  413060:	dec    rbp
  413063:	mov    rdi,r12
  413066:	mov    rsi,r13
  413069:	vzeroupper 
  41306c:	call   412540 <isspace@plt+0xec30>
  413071:	test   al,al
  413073:	je     4130d5 <isspace@plt+0xf7c5>
  413075:	movzx  eax,BYTE PTR [rsp+0xf]
  41307a:	cmp    al,BYTE PTR [r15+rbp*1]
  41307e:	jne    4130b0 <isspace@plt+0xf7a0>
  413080:	test   rbp,rbp
  413083:	je     4130d0 <isspace@plt+0xf7c0>
  413085:	cmp    rbp,rbx
  413088:	jne    413060 <isspace@plt+0xf750>
  41308a:	mov    rax,QWORD PTR [rsp+0x60]
  41308f:	mov    QWORD PTR [rsp+0x30],rax
  413094:	vmovups ymm0,YMMWORD PTR [rsp+0x40]
  41309a:	vmovups YMMWORD PTR [rsp+0x10],ymm0
  4130a0:	jmp    413060 <isspace@plt+0xf750>
  4130a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4130ac:	nop    DWORD PTR [rax+0x0]
  4130b0:	cmp    rbp,rbx
  4130b3:	jae    413063 <isspace@plt+0xf753>
  4130b5:	mov    rax,QWORD PTR [rsp+0x30]
  4130ba:	mov    QWORD PTR [rsp+0x60],rax
  4130bf:	vmovups ymm0,YMMWORD PTR [rsp+0x10]
  4130c5:	vmovups YMMWORD PTR [rsp+0x40],ymm0
  4130cb:	mov    rbp,rbx
  4130ce:	jmp    413063 <isspace@plt+0xf753>
  4130d0:	mov    r14,QWORD PTR [rsp+0x60]
  4130d5:	mov    rax,QWORD PTR fs:0x28
  4130de:	cmp    rax,QWORD PTR [rsp+0x70]
  4130e3:	jne    4130f7 <isspace@plt+0xf7e7>
  4130e5:	mov    rax,r14
  4130e8:	add    rsp,0x78
  4130ec:	pop    rbx
  4130ed:	pop    r12
  4130ef:	pop    r13
  4130f1:	pop    r14
  4130f3:	pop    r15
  4130f5:	pop    rbp
  4130f6:	ret    
  4130f7:	call   403280 <__stack_chk_fail@plt>
  4130fc:	nop    DWORD PTR [rax+0x0]
  413100:	push   rbp
  413101:	push   r15
  413103:	push   r14
  413105:	push   r13
  413107:	push   r12
  413109:	push   rbx
  41310a:	sub    rsp,0x78
  41310e:	mov    r14,rsi
  413111:	mov    rax,QWORD PTR fs:0x28
  41311a:	mov    QWORD PTR [rsp+0x70],rax
  41311f:	test   rdx,rdx
  413122:	je     4131e5 <isspace@plt+0xf8d5>
  413128:	mov    r15,rdx
  41312b:	mov    r12,rdi
  41312e:	mov    rdi,rdx
  413131:	call   403250 <strlen@plt>
  413136:	mov    rbx,rax
  413139:	lea    rdi,[rsp+0x40]
  41313e:	mov    rsi,r12
  413141:	mov    rdx,r14
  413144:	call   410570 <isspace@plt+0xcc60>
  413149:	sub    rbx,0x1
  41314d:	jb     4131e5 <isspace@plt+0xf8d5>
  413153:	lea    r12,[rsp+0x40]
  413158:	lea    r13,[rsp+0xf]
  41315d:	mov    rbp,rbx
  413160:	jmp    413177 <isspace@plt+0xf867>
  413162:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41316c:	nop    DWORD PTR [rax+0x0]
  413170:	dec    rbp
  413173:	cmp    al,0xa
  413175:	je     4131e5 <isspace@plt+0xf8d5>
  413177:	mov    rdi,r12
  41317a:	mov    rsi,r13
  41317d:	vzeroupper 
  413180:	call   412540 <isspace@plt+0xec30>
  413185:	test   al,al
  413187:	je     4131e5 <isspace@plt+0xf8d5>
  413189:	movzx  eax,BYTE PTR [rsp+0xf]
  41318e:	cmp    al,BYTE PTR [r15+rbp*1]
  413192:	jne    4131c0 <isspace@plt+0xf8b0>
  413194:	test   rbp,rbp
  413197:	je     4131e0 <isspace@plt+0xf8d0>
  413199:	cmp    rbp,rbx
  41319c:	jne    413170 <isspace@plt+0xf860>
  41319e:	mov    rcx,QWORD PTR [rsp+0x60]
  4131a3:	mov    QWORD PTR [rsp+0x30],rcx
  4131a8:	vmovups ymm0,YMMWORD PTR [rsp+0x40]
  4131ae:	vmovups YMMWORD PTR [rsp+0x10],ymm0
  4131b4:	jmp    413170 <isspace@plt+0xf860>
  4131b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4131c0:	cmp    rbp,rbx
  4131c3:	jae    413173 <isspace@plt+0xf863>
  4131c5:	mov    rcx,QWORD PTR [rsp+0x30]
  4131ca:	mov    QWORD PTR [rsp+0x60],rcx
  4131cf:	vmovups ymm0,YMMWORD PTR [rsp+0x10]
  4131d5:	vmovups YMMWORD PTR [rsp+0x40],ymm0
  4131db:	mov    rbp,rbx
  4131de:	jmp    413173 <isspace@plt+0xf863>
  4131e0:	mov    r14,QWORD PTR [rsp+0x60]
  4131e5:	mov    rax,QWORD PTR fs:0x28
  4131ee:	cmp    rax,QWORD PTR [rsp+0x70]
  4131f3:	jne    41320a <isspace@plt+0xf8fa>
  4131f5:	mov    rax,r14
  4131f8:	add    rsp,0x78
  4131fc:	pop    rbx
  4131fd:	pop    r12
  4131ff:	pop    r13
  413201:	pop    r14
  413203:	pop    r15
  413205:	pop    rbp
  413206:	vzeroupper 
  413209:	ret    
  41320a:	vzeroupper 
  41320d:	call   403280 <__stack_chk_fail@plt>
  413212:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41321c:	nop    DWORD PTR [rax+0x0]
  413220:	push   rbx
  413221:	sub    rsp,0x30
  413225:	mov    rdx,rsi
  413228:	mov    rsi,rdi
  41322b:	mov    rax,QWORD PTR fs:0x28
  413234:	mov    QWORD PTR [rsp+0x28],rax
  413239:	mov    rbx,rsp
  41323c:	mov    rdi,rbx
  41323f:	call   410570 <isspace@plt+0xcc60>
  413244:	mov    rdi,rbx
  413247:	mov    esi,0xa
  41324c:	call   4125f0 <isspace@plt+0xece0>
  413251:	mov    rax,QWORD PTR [rsp+0x20]
  413256:	mov    rcx,QWORD PTR fs:0x28
  41325f:	cmp    rcx,QWORD PTR [rsp+0x28]
  413264:	jne    41326c <isspace@plt+0xf95c>
  413266:	add    rsp,0x30
  41326a:	pop    rbx
  41326b:	ret    
  41326c:	call   403280 <__stack_chk_fail@plt>
  413271:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41327b:	nop    DWORD PTR [rax+rax*1+0x0]
  413280:	push   rbx
  413281:	sub    rsp,0x30
  413285:	mov    rdx,rsi
  413288:	mov    rsi,rdi
  41328b:	mov    rax,QWORD PTR fs:0x28
  413294:	mov    QWORD PTR [rsp+0x28],rax
  413299:	mov    rbx,rsp
  41329c:	mov    rdi,rbx
  41329f:	call   410570 <isspace@plt+0xcc60>
  4132a4:	mov    rdi,rbx
  4132a7:	mov    esi,0xa
  4132ac:	call   4125f0 <isspace@plt+0xece0>
  4132b1:	movzx  eax,al
  4132b4:	add    rax,QWORD PTR [rsp+0x20]
  4132b9:	mov    rcx,QWORD PTR fs:0x28
  4132c2:	cmp    rcx,QWORD PTR [rsp+0x28]
  4132c7:	jne    4132cf <isspace@plt+0xf9bf>
  4132c9:	add    rsp,0x30
  4132cd:	pop    rbx
  4132ce:	ret    
  4132cf:	call   403280 <__stack_chk_fail@plt>
  4132d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4132de:	xchg   ax,ax
  4132e0:	push   r14
  4132e2:	push   rbx
  4132e3:	sub    rsp,0x38
  4132e7:	mov    rdx,rsi
  4132ea:	mov    rbx,rdi
  4132ed:	mov    rax,QWORD PTR fs:0x28
  4132f6:	mov    QWORD PTR [rsp+0x30],rax
  4132fb:	lea    r14,[rsp+0x8]
  413300:	mov    rdi,r14
  413303:	mov    rsi,rbx
  413306:	call   410570 <isspace@plt+0xcc60>
  41330b:	mov    rdi,r14
  41330e:	mov    esi,0xa
  413313:	call   4125f0 <isspace@plt+0xece0>
  413318:	movzx  edx,al
  41331b:	add    rdx,QWORD PTR [rsp+0x28]
  413320:	lea    r14,[rsp+0x8]
  413325:	mov    rdi,r14
  413328:	mov    rsi,rbx
  41332b:	call   410570 <isspace@plt+0xcc60>
  413330:	lea    rsi,[rsp+0x7]
  413335:	mov    rdi,r14
  413338:	call   412400 <isspace@plt+0xeaf0>
  41333d:	test   al,al
  41333f:	je     413376 <isspace@plt+0xfa66>
  413341:	lea    rbx,[rsp+0x8]
  413346:	lea    r14,[rsp+0x7]
  41334b:	jmp    413369 <isspace@plt+0xfa59>
  41334d:	nop    DWORD PTR [rax]
  413350:	mov    rdi,rbx
  413353:	xor    esi,esi
  413355:	call   412480 <isspace@plt+0xeb70>
  41335a:	mov    rdi,rbx
  41335d:	mov    rsi,r14
  413360:	call   412400 <isspace@plt+0xeaf0>
  413365:	test   al,al
  413367:	je     413376 <isspace@plt+0xfa66>
  413369:	movzx  eax,BYTE PTR [rsp+0x7]
  41336e:	cmp    al,0x20
  413370:	je     413350 <isspace@plt+0xfa40>
  413372:	cmp    al,0x9
  413374:	je     413350 <isspace@plt+0xfa40>
  413376:	mov    rax,QWORD PTR [rsp+0x28]
  41337b:	mov    rcx,QWORD PTR fs:0x28
  413384:	cmp    rcx,QWORD PTR [rsp+0x30]
  413389:	jne    413393 <isspace@plt+0xfa83>
  41338b:	add    rsp,0x38
  41338f:	pop    rbx
  413390:	pop    r14
  413392:	ret    
  413393:	call   403280 <__stack_chk_fail@plt>
  413398:	nop    DWORD PTR [rax+rax*1+0x0]
  4133a0:	push   r15
  4133a2:	push   r14
  4133a4:	push   rbx
  4133a5:	sub    rsp,0x40
  4133a9:	mov    rdx,rsi
  4133ac:	mov    r14,rdi
  4133af:	mov    rax,QWORD PTR fs:0x28
  4133b8:	mov    QWORD PTR [rsp+0x38],rax
  4133bd:	lea    rbx,[rsp+0x10]
  4133c2:	mov    rdi,rbx
  4133c5:	mov    rsi,r14
  4133c8:	call   410570 <isspace@plt+0xcc60>
  4133cd:	mov    rdi,rbx
  4133d0:	mov    esi,0xa
  4133d5:	call   412690 <isspace@plt+0xed80>
  4133da:	mov    rbx,QWORD PTR [rsp+0x30]
  4133df:	lea    r15,[rsp+0x10]
  4133e4:	mov    rdi,r15
  4133e7:	mov    rsi,r14
  4133ea:	mov    rdx,rbx
  4133ed:	call   410570 <isspace@plt+0xcc60>
  4133f2:	lea    rsi,[rsp+0xf]
  4133f7:	mov    rdi,r15
  4133fa:	call   412540 <isspace@plt+0xec30>
  4133ff:	mov    cl,BYTE PTR [rsp+0xf]
  413403:	cmp    cl,0xa
  413406:	je     41344b <isspace@plt+0xfb3b>
  413408:	test   al,al
  41340a:	je     41344b <isspace@plt+0xfb3b>
  41340c:	lea    r14,[rsp+0x10]
  413411:	lea    rbx,[rsp+0xf]
  413416:	cmp    cl,0x20
  413419:	jne    413439 <isspace@plt+0xfb29>
  41341b:	nop    DWORD PTR [rax+rax*1+0x0]
  413420:	mov    rdi,r14
  413423:	mov    rsi,rbx
  413426:	call   412540 <isspace@plt+0xec30>
  41342b:	movzx  ecx,BYTE PTR [rsp+0xf]
  413430:	test   al,al
  413432:	je     41343e <isspace@plt+0xfb2e>
  413434:	cmp    cl,0x20
  413437:	je     413420 <isspace@plt+0xfb10>
  413439:	cmp    cl,0x9
  41343c:	je     413420 <isspace@plt+0xfb10>
  41343e:	xor    ebx,ebx
  413440:	cmp    cl,0xa
  413443:	sete   bl
  413446:	add    rbx,QWORD PTR [rsp+0x30]
  41344b:	mov    rax,QWORD PTR fs:0x28
  413454:	cmp    rax,QWORD PTR [rsp+0x38]
  413459:	jne    413468 <isspace@plt+0xfb58>
  41345b:	mov    rax,rbx
  41345e:	add    rsp,0x40
  413462:	pop    rbx
  413463:	pop    r14
  413465:	pop    r15
  413467:	ret    
  413468:	call   403280 <__stack_chk_fail@plt>
  41346d:	nop    DWORD PTR [rax]
  413470:	push   rbx
  413471:	sub    rsp,0x30
  413475:	mov    rdx,rsi
  413478:	mov    rsi,rdi
  41347b:	mov    rax,QWORD PTR fs:0x28
  413484:	mov    QWORD PTR [rsp+0x28],rax
  413489:	mov    rbx,rsp
  41348c:	mov    rdi,rbx
  41348f:	call   410570 <isspace@plt+0xcc60>
  413494:	mov    rdi,rbx
  413497:	mov    esi,0xa
  41349c:	call   412690 <isspace@plt+0xed80>
  4134a1:	mov    rax,QWORD PTR [rsp+0x20]
  4134a6:	mov    rcx,QWORD PTR fs:0x28
  4134af:	cmp    rcx,QWORD PTR [rsp+0x28]
  4134b4:	jne    4134bc <isspace@plt+0xfbac>
  4134b6:	add    rsp,0x30
  4134ba:	pop    rbx
  4134bb:	ret    
  4134bc:	call   403280 <__stack_chk_fail@plt>
  4134c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4134cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4134d0:	push   rbx
  4134d1:	sub    rsp,0x30
  4134d5:	mov    rdx,rsi
  4134d8:	mov    rsi,rdi
  4134db:	mov    rax,QWORD PTR fs:0x28
  4134e4:	mov    QWORD PTR [rsp+0x28],rax
  4134e9:	mov    rbx,rsp
  4134ec:	mov    rdi,rbx
  4134ef:	call   410570 <isspace@plt+0xcc60>
  4134f4:	mov    rdi,rbx
  4134f7:	mov    esi,0xa
  4134fc:	call   412690 <isspace@plt+0xed80>
  413501:	test   al,al
  413503:	je     41350f <isspace@plt+0xfbff>
  413505:	mov    rdi,rsp
  413508:	xor    esi,esi
  41350a:	call   412480 <isspace@plt+0xeb70>
  41350f:	mov    rax,QWORD PTR [rsp+0x20]
  413514:	mov    rcx,QWORD PTR fs:0x28
  41351d:	cmp    rcx,QWORD PTR [rsp+0x28]
  413522:	jne    41352a <isspace@plt+0xfc1a>
  413524:	add    rsp,0x30
  413528:	pop    rbx
  413529:	ret    
  41352a:	call   403280 <__stack_chk_fail@plt>
  41352f:	nop
  413530:	push   r15
  413532:	push   r14
  413534:	push   rbx
  413535:	sub    rsp,0x40
  413539:	mov    rbx,rdx
  41353c:	mov    rdx,rsi
  41353f:	mov    r14,rdi
  413542:	mov    rax,QWORD PTR fs:0x28
  41354b:	mov    QWORD PTR [rsp+0x38],rax
  413550:	lea    r15,[rsp+0x10]
  413555:	mov    rdi,r15
  413558:	mov    rsi,r14
  41355b:	call   410570 <isspace@plt+0xcc60>
  413560:	mov    rdi,r15
  413563:	mov    esi,0xa
  413568:	call   4125f0 <isspace@plt+0xece0>
  41356d:	movzx  edx,al
  413570:	add    rdx,QWORD PTR [rsp+0x30]
  413575:	lea    rdi,[rsp+0x10]
  41357a:	mov    rsi,r14
  41357d:	call   410570 <isspace@plt+0xcc60>
  413582:	test   rbx,rbx
  413585:	je     4135c8 <isspace@plt+0xfcb8>
  413587:	lea    r14,[rsp+0x10]
  41358c:	lea    r15,[rsp+0xf]
  413591:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41359b:	nop    DWORD PTR [rax+rax*1+0x0]
  4135a0:	mov    rdi,r14
  4135a3:	mov    rsi,r15
  4135a6:	call   412400 <isspace@plt+0xeaf0>
  4135ab:	cmp    BYTE PTR [rsp+0xf],0xa
  4135b0:	je     4135c8 <isspace@plt+0xfcb8>
  4135b2:	test   al,al
  4135b4:	je     4135c8 <isspace@plt+0xfcb8>
  4135b6:	dec    rbx
  4135b9:	mov    rdi,r14
  4135bc:	xor    esi,esi
  4135be:	call   412480 <isspace@plt+0xeb70>
  4135c3:	test   rbx,rbx
  4135c6:	jne    4135a0 <isspace@plt+0xfc90>
  4135c8:	mov    rax,QWORD PTR [rsp+0x30]
  4135cd:	mov    rcx,QWORD PTR fs:0x28
  4135d6:	cmp    rcx,QWORD PTR [rsp+0x38]
  4135db:	jne    4135e7 <isspace@plt+0xfcd7>
  4135dd:	add    rsp,0x40
  4135e1:	pop    rbx
  4135e2:	pop    r14
  4135e4:	pop    r15
  4135e6:	ret    
  4135e7:	call   403280 <__stack_chk_fail@plt>
  4135ec:	nop    DWORD PTR [rax+0x0]
  4135f0:	push   rbp
  4135f1:	push   r15
  4135f3:	push   r14
  4135f5:	push   rbx
  4135f6:	sub    rsp,0x38
  4135fa:	mov    rbx,rsi
  4135fd:	mov    rbp,rdi
  413600:	mov    rax,QWORD PTR fs:0x28
  413609:	mov    QWORD PTR [rsp+0x30],rax
  41360e:	lea    r14,[rsp+0x8]
  413613:	mov    rdi,r14
  413616:	mov    rsi,rbp
  413619:	mov    rdx,rbx
  41361c:	call   410570 <isspace@plt+0xcc60>
  413621:	mov    rdi,r14
  413624:	mov    esi,0xa
  413629:	call   4125f0 <isspace@plt+0xece0>
  41362e:	movzx  edx,al
  413631:	add    rdx,QWORD PTR [rsp+0x28]
  413636:	lea    r14,[rsp+0x8]
  41363b:	mov    rdi,r14
  41363e:	mov    rsi,rbp
  413641:	call   410570 <isspace@plt+0xcc60>
  413646:	lea    rsi,[rsp+0x7]
  41364b:	mov    rdi,r14
  41364e:	call   412400 <isspace@plt+0xeaf0>
  413653:	xor    ebp,ebp
  413655:	cmp    BYTE PTR [rsp+0x7],0xa
  41365a:	je     41369f <isspace@plt+0xfd8f>
  41365c:	test   al,al
  41365e:	je     41369f <isspace@plt+0xfd8f>
  413660:	cmp    QWORD PTR [rsp+0x28],rbx
  413665:	jae    41369f <isspace@plt+0xfd8f>
  413667:	xor    ebp,ebp
  413669:	lea    r14,[rsp+0x8]
  41366e:	lea    r15,[rsp+0x7]
  413673:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41367d:	nop    DWORD PTR [rax]
  413680:	mov    rdi,r14
  413683:	mov    rsi,r15
  413686:	call   4128a0 <isspace@plt+0xef90>
  41368b:	test   al,al
  41368d:	je     41369f <isspace@plt+0xfd8f>
  41368f:	inc    ebp
  413691:	cmp    QWORD PTR [rsp+0x28],rbx
  413696:	jae    41369f <isspace@plt+0xfd8f>
  413698:	cmp    BYTE PTR [rsp+0x7],0xa
  41369d:	jne    413680 <isspace@plt+0xfd70>
  41369f:	mov    rax,QWORD PTR fs:0x28
  4136a8:	cmp    rax,QWORD PTR [rsp+0x30]
  4136ad:	jne    4136bc <isspace@plt+0xfdac>
  4136af:	mov    eax,ebp
  4136b1:	add    rsp,0x38
  4136b5:	pop    rbx
  4136b6:	pop    r14
  4136b8:	pop    r15
  4136ba:	pop    rbp
  4136bb:	ret    
  4136bc:	call   403280 <__stack_chk_fail@plt>
  4136c1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4136cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4136d0:	push   rbp
  4136d1:	push   r15
  4136d3:	push   r14
  4136d5:	push   r13
  4136d7:	push   r12
  4136d9:	push   rbx
  4136da:	sub    rsp,0x58
  4136de:	mov    r14,rsi
  4136e1:	mov    r15,rdi
  4136e4:	mov    rax,QWORD PTR fs:0x28
  4136ed:	mov    QWORD PTR [rsp+0x50],rax
  4136f2:	mov    QWORD PTR [rsp+0x10],0x0
  4136fb:	lea    rbx,[rsp+0x18]
  413700:	mov    rdi,rbx
  413703:	mov    rsi,r15
  413706:	mov    rdx,r14
  413709:	call   410570 <isspace@plt+0xcc60>
  41370e:	mov    rdi,rbx
  413711:	mov    esi,0xa
  413716:	call   4125f0 <isspace@plt+0xece0>
  41371b:	movzx  edx,al
  41371e:	add    rdx,QWORD PTR [rsp+0x38]
  413723:	lea    rdi,[rsp+0x18]
  413728:	mov    rsi,r15
  41372b:	call   410570 <isspace@plt+0xcc60>
  413730:	mov    rsi,QWORD PTR [rsp+0x38]
  413735:	xor    ebx,ebx
  413737:	cmp    rsi,r14
  41373a:	jae    41380c <isspace@plt+0xfefc>
  413740:	xor    ebx,ebx
  413742:	lea    r12,[rsp+0x40]
  413747:	lea    rbp,[rsp+0x10]
  41374c:	lea    r13,[rsp+0x18]
  413751:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41375b:	nop    DWORD PTR [rax+rax*1+0x0]
  413760:	mov    edx,0x10
  413765:	mov    rdi,r15
  413768:	mov    rcx,r12
  41376b:	call   411130 <isspace@plt+0xd820>
  413770:	test   rax,rax
  413773:	je     41380c <isspace@plt+0xfefc>
  413779:	cmp    BYTE PTR [rsp+0x40],0xa
  41377e:	je     41380c <isspace@plt+0xfefc>
  413784:	lea    rdi,[rsp+0xc]
  413789:	mov    rsi,r12
  41378c:	mov    rdx,rax
  41378f:	mov    rcx,rbp
  413792:	call   4032b0 <mbrtowc@plt>
  413797:	cmp    rax,0xfffffffffffffffe
  41379b:	je     4137f0 <isspace@plt+0xfee0>
  41379d:	test   rax,rax
  4137a0:	je     4137d0 <isspace@plt+0xfec0>
  4137a2:	cmp    rax,0xffffffffffffffff
  4137a6:	jne    4137c0 <isspace@plt+0xfeb0>
  4137a8:	call   403130 <__errno_location@plt>
  4137ad:	cmp    DWORD PTR [rax],0x54
  4137b0:	jne    4137c0 <isspace@plt+0xfeb0>
  4137b2:	mov    QWORD PTR [rsp+0x10],0x0
  4137bb:	inc    ebx
  4137bd:	jmp    4137f0 <isspace@plt+0xfee0>
  4137bf:	nop
  4137c0:	cmp    BYTE PTR [rsp+0x40],0x9
  4137c5:	jne    4137d5 <isspace@plt+0xfec5>
  4137c7:	inc    ebx
  4137c9:	jmp    4137f0 <isspace@plt+0xfee0>
  4137cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4137d0:	add    ebx,0x2
  4137d3:	jmp    4137f0 <isspace@plt+0xfee0>
  4137d5:	mov    edi,DWORD PTR [rsp+0xc]
  4137d9:	call   403590 <wcwidth@plt>
  4137de:	cmp    eax,0xffffffff
  4137e1:	mov    ecx,0x2
  4137e6:	cmove  eax,ecx
  4137e9:	add    ebx,eax
  4137eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4137f0:	mov    rdi,r13
  4137f3:	xor    esi,esi
  4137f5:	call   412730 <isspace@plt+0xee20>
  4137fa:	test   al,al
  4137fc:	je     41380c <isspace@plt+0xfefc>
  4137fe:	mov    rsi,QWORD PTR [rsp+0x38]
  413803:	cmp    rsi,r14
  413806:	jb     413760 <isspace@plt+0xfe50>
  41380c:	mov    rax,QWORD PTR fs:0x28
  413815:	cmp    rax,QWORD PTR [rsp+0x50]
  41381a:	jne    41382d <isspace@plt+0xff1d>
  41381c:	mov    eax,ebx
  41381e:	add    rsp,0x58
  413822:	pop    rbx
  413823:	pop    r12
  413825:	pop    r13
  413827:	pop    r14
  413829:	pop    r15
  41382b:	pop    rbp
  41382c:	ret    
  41382d:	call   403280 <__stack_chk_fail@plt>
  413832:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41383c:	nop    DWORD PTR [rax+0x0]
  413840:	push   rbp
  413841:	push   r15
  413843:	push   r14
  413845:	push   r13
  413847:	push   r12
  413849:	push   rbx
  41384a:	sub    rsp,0x58
  41384e:	mov    r15d,edx
  413851:	mov    rdx,rsi
  413854:	mov    rbx,rdi
  413857:	mov    rax,QWORD PTR fs:0x28
  413860:	mov    QWORD PTR [rsp+0x50],rax
  413865:	mov    QWORD PTR [rsp+0x10],0x0
  41386e:	lea    rbp,[rsp+0x18]
  413873:	mov    rdi,rbp
  413876:	mov    rsi,rbx
  413879:	call   410570 <isspace@plt+0xcc60>
  41387e:	mov    rdi,rbp
  413881:	mov    esi,0xa
  413886:	call   4125f0 <isspace@plt+0xece0>
  41388b:	movzx  edx,al
  41388e:	add    rdx,QWORD PTR [rsp+0x38]
  413893:	lea    rdi,[rsp+0x18]
  413898:	mov    rsi,rbx
  41389b:	call   410570 <isspace@plt+0xcc60>
  4138a0:	mov    rsi,QWORD PTR [rsp+0x38]
  4138a5:	lea    rcx,[rsp+0x40]
  4138aa:	mov    edx,0x10
  4138af:	mov    rdi,rbx
  4138b2:	call   411130 <isspace@plt+0xd820>
  4138b7:	test   rax,rax
  4138ba:	je     41399c <isspace@plt+0x1008c>
  4138c0:	cmp    BYTE PTR [rsp+0x40],0xa
  4138c5:	je     41399c <isspace@plt+0x1008c>
  4138cb:	xor    r13d,r13d
  4138ce:	lea    r14,[rsp+0xc]
  4138d3:	lea    rbp,[rsp+0x40]
  4138d8:	lea    r12,[rsp+0x10]
  4138dd:	nop    DWORD PTR [rax]
  4138e0:	mov    rdi,r14
  4138e3:	mov    rsi,rbp
  4138e6:	mov    rdx,rax
  4138e9:	mov    rcx,r12
  4138ec:	call   4032b0 <mbrtowc@plt>
  4138f1:	cmp    rax,0xfffffffffffffffe
  4138f5:	je     413944 <isspace@plt+0x10034>
  4138f7:	test   rax,rax
  4138fa:	je     413940 <isspace@plt+0x10030>
  4138fc:	cmp    rax,0xffffffffffffffff
  413900:	jne    413920 <isspace@plt+0x10010>
  413902:	call   403130 <__errno_location@plt>
  413907:	cmp    DWORD PTR [rax],0x54
  41390a:	jne    413920 <isspace@plt+0x10010>
  41390c:	mov    QWORD PTR [rsp+0x10],0x0
  413915:	jmp    413927 <isspace@plt+0x10017>
  413917:	nop    WORD PTR [rax+rax*1+0x0]
  413920:	cmp    BYTE PTR [rsp+0x40],0x9
  413925:	jne    413980 <isspace@plt+0x10070>
  413927:	inc    r13d
  41392a:	cmp    r13d,r15d
  41392d:	jl     413949 <isspace@plt+0x10039>
  41392f:	jmp    41399c <isspace@plt+0x1008c>
  413931:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41393b:	nop    DWORD PTR [rax+rax*1+0x0]
  413940:	add    r13d,0x2
  413944:	cmp    r13d,r15d
  413947:	jge    41399c <isspace@plt+0x1008c>
  413949:	lea    rdi,[rsp+0x18]
  41394e:	xor    esi,esi
  413950:	call   412730 <isspace@plt+0xee20>
  413955:	test   al,al
  413957:	je     41399c <isspace@plt+0x1008c>
  413959:	mov    rsi,QWORD PTR [rsp+0x38]
  41395e:	mov    edx,0x10
  413963:	mov    rdi,rbx
  413966:	mov    rcx,rbp
  413969:	call   411130 <isspace@plt+0xd820>
  41396e:	test   rax,rax
  413971:	je     41399c <isspace@plt+0x1008c>
  413973:	cmp    BYTE PTR [rsp+0x40],0xa
  413978:	jne    4138e0 <isspace@plt+0xffd0>
  41397e:	jmp    41399c <isspace@plt+0x1008c>
  413980:	mov    edi,DWORD PTR [rsp+0xc]
  413984:	call   403590 <wcwidth@plt>
  413989:	cmp    eax,0xffffffff
  41398c:	mov    ecx,0x2
  413991:	cmove  eax,ecx
  413994:	add    r13d,eax
  413997:	cmp    r13d,r15d
  41399a:	jl     413949 <isspace@plt+0x10039>
  41399c:	mov    rax,QWORD PTR [rsp+0x38]
  4139a1:	mov    rcx,QWORD PTR fs:0x28
  4139aa:	cmp    rcx,QWORD PTR [rsp+0x50]
  4139af:	jne    4139c0 <isspace@plt+0x100b0>
  4139b1:	add    rsp,0x58
  4139b5:	pop    rbx
  4139b6:	pop    r12
  4139b8:	pop    r13
  4139ba:	pop    r14
  4139bc:	pop    r15
  4139be:	pop    rbp
  4139bf:	ret    
  4139c0:	call   403280 <__stack_chk_fail@plt>
  4139c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4139cf:	nop
  4139d0:	push   r14
  4139d2:	push   rbx
  4139d3:	sub    rsp,0x38
  4139d7:	mov    rbx,rsi
  4139da:	mov    rsi,rdi
  4139dd:	mov    rax,QWORD PTR fs:0x28
  4139e6:	mov    QWORD PTR [rsp+0x30],rax
  4139eb:	mov    r14,rsp
  4139ee:	mov    rdi,r14
  4139f1:	mov    rdx,rbx
  4139f4:	call   410570 <isspace@plt+0xcc60>
  4139f9:	lea    rsi,[rsp+0x2f]
  4139fe:	mov    rdi,r14
  413a01:	call   412400 <isspace@plt+0xeaf0>
  413a06:	cmp    BYTE PTR [rsp+0x2f],0xa
  413a0b:	je     413a20 <isspace@plt+0x10110>
  413a0d:	test   al,al
  413a0f:	je     413a20 <isspace@plt+0x10110>
  413a11:	mov    rdi,rsp
  413a14:	xor    esi,esi
  413a16:	call   4128a0 <isspace@plt+0xef90>
  413a1b:	mov    rbx,QWORD PTR [rsp+0x20]
  413a20:	mov    rax,QWORD PTR fs:0x28
  413a29:	cmp    rax,QWORD PTR [rsp+0x30]
  413a2e:	jne    413a3b <isspace@plt+0x1012b>
  413a30:	mov    rax,rbx
  413a33:	add    rsp,0x38
  413a37:	pop    rbx
  413a38:	pop    r14
  413a3a:	ret    
  413a3b:	call   403280 <__stack_chk_fail@plt>
  413a40:	push   r14
  413a42:	push   rbx
  413a43:	sub    rsp,0x38
  413a47:	mov    rbx,rsi
  413a4a:	mov    rsi,rdi
  413a4d:	mov    rax,QWORD PTR fs:0x28
  413a56:	mov    QWORD PTR [rsp+0x30],rax
  413a5b:	mov    r14,rsp
  413a5e:	mov    rdi,r14
  413a61:	mov    rdx,rbx
  413a64:	call   410570 <isspace@plt+0xcc60>
  413a69:	lea    rsi,[rsp+0x2f]
  413a6e:	mov    rdi,r14
  413a71:	call   412ad0 <isspace@plt+0xf1c0>
  413a76:	mov    ecx,eax
  413a78:	mov    dl,BYTE PTR [rsp+0x2f]
  413a7c:	mov    rax,rbx
  413a7f:	test   cl,cl
  413a81:	je     413a88 <isspace@plt+0x10178>
  413a83:	mov    rax,QWORD PTR [rsp+0x20]
  413a88:	cmp    dl,0xa
  413a8b:	cmove  rax,rbx
  413a8f:	mov    rcx,QWORD PTR fs:0x28
  413a98:	cmp    rcx,QWORD PTR [rsp+0x30]
  413a9d:	jne    413aa7 <isspace@plt+0x10197>
  413a9f:	add    rsp,0x38
  413aa3:	pop    rbx
  413aa4:	pop    r14
  413aa6:	ret    
  413aa7:	call   403280 <__stack_chk_fail@plt>
  413aac:	nop    DWORD PTR [rax+0x0]
  413ab0:	push   rbp
  413ab1:	push   r15
  413ab3:	push   r14
  413ab5:	push   rbx
  413ab6:	sub    rsp,0x38
  413aba:	mov    r14,rsi
  413abd:	mov    rbx,rdi
  413ac0:	mov    rax,QWORD PTR fs:0x28
  413ac9:	mov    QWORD PTR [rsp+0x30],rax
  413ace:	call   4136d0 <isspace@plt+0xfdc0>
  413ad3:	mov    ebp,eax
  413ad5:	lea    r15,[rsp+0x8]
  413ada:	mov    rdi,r15
  413add:	mov    rsi,rbx
  413ae0:	mov    rdx,r14
  413ae3:	call   410570 <isspace@plt+0xcc60>
  413ae8:	mov    rdi,r15
  413aeb:	mov    esi,0xa
  413af0:	call   4125f0 <isspace@plt+0xece0>
  413af5:	mov    rsi,QWORD PTR [rsp+0x28]
  413afa:	mov    rdi,rbx
  413afd:	mov    edx,ebp
  413aff:	call   413840 <isspace@plt+0xff30>
  413b04:	mov    rcx,QWORD PTR fs:0x28
  413b0d:	cmp    rcx,QWORD PTR [rsp+0x30]
  413b12:	jne    413b1f <isspace@plt+0x1020f>
  413b14:	add    rsp,0x38
  413b18:	pop    rbx
  413b19:	pop    r14
  413b1b:	pop    r15
  413b1d:	pop    rbp
  413b1e:	ret    
  413b1f:	call   403280 <__stack_chk_fail@plt>
  413b24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413b2e:	xchg   ax,ax
  413b30:	push   rbp
  413b31:	push   r15
  413b33:	push   r14
  413b35:	push   rbx
  413b36:	sub    rsp,0x38
  413b3a:	mov    r14,rsi
  413b3d:	mov    rbx,rdi
  413b40:	mov    rax,QWORD PTR fs:0x28
  413b49:	mov    QWORD PTR [rsp+0x30],rax
  413b4e:	call   4136d0 <isspace@plt+0xfdc0>
  413b53:	mov    r15d,eax
  413b56:	lea    rbp,[rsp+0x8]
  413b5b:	mov    rdi,rbp
  413b5e:	mov    rsi,rbx
  413b61:	mov    rdx,r14
  413b64:	call   410570 <isspace@plt+0xcc60>
  413b69:	mov    rdi,rbp
  413b6c:	mov    esi,0xa
  413b71:	call   412690 <isspace@plt+0xed80>
  413b76:	test   al,al
  413b78:	je     413b86 <isspace@plt+0x10276>
  413b7a:	lea    rdi,[rsp+0x8]
  413b7f:	xor    esi,esi
  413b81:	call   412480 <isspace@plt+0xeb70>
  413b86:	mov    rbp,QWORD PTR [rsp+0x28]
  413b8b:	mov    rdi,rbx
  413b8e:	call   410890 <isspace@plt+0xcf80>
  413b93:	cmp    rbp,rax
  413b96:	je     413ba9 <isspace@plt+0x10299>
  413b98:	mov    rdi,rbx
  413b9b:	mov    rsi,rbp
  413b9e:	mov    edx,r15d
  413ba1:	call   413840 <isspace@plt+0xff30>
  413ba6:	mov    r14,rax
  413ba9:	mov    rax,QWORD PTR fs:0x28
  413bb2:	cmp    rax,QWORD PTR [rsp+0x30]
  413bb7:	jne    413bc7 <isspace@plt+0x102b7>
  413bb9:	mov    rax,r14
  413bbc:	add    rsp,0x38
  413bc0:	pop    rbx
  413bc1:	pop    r14
  413bc3:	pop    r15
  413bc5:	pop    rbp
  413bc6:	ret    
  413bc7:	call   403280 <__stack_chk_fail@plt>
  413bcc:	nop    DWORD PTR [rax+0x0]
  413bd0:	push   rbx
  413bd1:	sub    rsp,0x10
  413bd5:	mov    rbx,rsi
  413bd8:	mov    rax,QWORD PTR fs:0x28
  413be1:	mov    QWORD PTR [rsp+0x8],rax
  413be6:	mov    rdi,rsi
  413be9:	call   416fc0 <isspace@plt+0x136b0>
  413bee:	mov    ecx,eax
  413bf0:	mov    rax,0xffffffffffffffff
  413bf7:	test   cl,cl
  413bf9:	je     413bfe <isspace@plt+0x102ee>
  413bfb:	mov    rax,QWORD PTR [rbx]
  413bfe:	mov    rcx,QWORD PTR fs:0x28
  413c07:	cmp    rcx,QWORD PTR [rsp+0x8]
  413c0c:	jne    413c14 <isspace@plt+0x10304>
  413c0e:	add    rsp,0x10
  413c12:	pop    rbx
  413c13:	ret    
  413c14:	call   403280 <__stack_chk_fail@plt>
  413c19:	nop    DWORD PTR [rax+0x0]
  413c20:	push   r15
  413c22:	push   r14
  413c24:	push   r13
  413c26:	push   r12
  413c28:	push   rbx
  413c29:	sub    rsp,0x30
  413c2d:	mov    rbx,rdx
  413c30:	mov    r14,rsi
  413c33:	mov    r12,rdi
  413c36:	mov    rax,QWORD PTR fs:0x28
  413c3f:	mov    QWORD PTR [rsp+0x28],rax
  413c44:	mov    rdi,rsi
  413c47:	mov    rsi,rdx
  413c4a:	call   417310 <isspace@plt+0x13a00>
  413c4f:	mov    r15,0xffffffffffffffff
  413c56:	test   al,al
  413c58:	je     413c9f <isspace@plt+0x1038f>
  413c5a:	mov    r13,rsp
  413c5d:	mov    rdi,r13
  413c60:	mov    rsi,r12
  413c63:	mov    rdx,rbx
  413c66:	call   410570 <isspace@plt+0xcc60>
  413c6b:	mov    rdi,r13
  413c6e:	mov    esi,0xa
  413c73:	call   412690 <isspace@plt+0xed80>
  413c78:	test   al,al
  413c7a:	je     413c86 <isspace@plt+0x10376>
  413c7c:	mov    rdi,rsp
  413c7f:	xor    esi,esi
  413c81:	call   412480 <isspace@plt+0xeb70>
  413c86:	mov    rax,QWORD PTR [rsp+0x20]
  413c8b:	cmp    rax,rbx
  413c8e:	je     413c9f <isspace@plt+0x1038f>
  413c90:	cmp    rax,QWORD PTR [r14+0x8]
  413c94:	mov    r15,0xffffffffffffffff
  413c9b:	cmovb  r15,rax
  413c9f:	mov    rax,QWORD PTR fs:0x28
  413ca8:	cmp    rax,QWORD PTR [rsp+0x28]
  413cad:	jne    413cc0 <isspace@plt+0x103b0>
  413caf:	mov    rax,r15
  413cb2:	add    rsp,0x30
  413cb6:	pop    rbx
  413cb7:	pop    r12
  413cb9:	pop    r13
  413cbb:	pop    r14
  413cbd:	pop    r15
  413cbf:	ret    
  413cc0:	call   403280 <__stack_chk_fail@plt>
  413cc5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413ccf:	nop
  413cd0:	push   r15
  413cd2:	push   r14
  413cd4:	push   rbx
  413cd5:	sub    rsp,0x40
  413cd9:	mov    rbx,rdx
  413cdc:	mov    r14,rsi
  413cdf:	mov    rsi,rdi
  413ce2:	mov    rax,QWORD PTR fs:0x28
  413ceb:	mov    QWORD PTR [rsp+0x38],rax
  413cf0:	lea    r15,[rsp+0x8]
  413cf5:	mov    rdi,r15
  413cf8:	mov    rdx,r14
  413cfb:	call   410570 <isspace@plt+0xcc60>
  413d00:	lea    rsi,[rsp+0x37]
  413d05:	mov    rdi,r15
  413d08:	call   412400 <isspace@plt+0xeaf0>
  413d0d:	test   al,al
  413d0f:	je     413db3 <isspace@plt+0x104a3>
  413d15:	movzx  edi,BYTE PTR [rsp+0x37]
  413d1a:	call   rbx
  413d1c:	lea    r14,[rsp+0x8]
  413d21:	lea    r15,[rsp+0x37]
  413d26:	test   eax,eax
  413d28:	je     413d6f <isspace@plt+0x1045f>
  413d2a:	nop    WORD PTR [rax+rax*1+0x0]
  413d30:	movzx  edi,BYTE PTR [rsp+0x37]
  413d35:	call   rbx
  413d37:	test   eax,eax
  413d39:	je     413d7a <isspace@plt+0x1046a>
  413d3b:	call   4038f0 <__ctype_b_loc@plt>
  413d40:	mov    rax,QWORD PTR [rax]
  413d43:	movzx  ecx,BYTE PTR [rsp+0x37]
  413d48:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  413d4d:	jne    413d7a <isspace@plt+0x1046a>
  413d4f:	mov    rdi,r14
  413d52:	mov    rsi,r15
  413d55:	call   4128a0 <isspace@plt+0xef90>
  413d5a:	test   al,al
  413d5c:	jne    413d30 <isspace@plt+0x10420>
  413d5e:	jmp    413d7a <isspace@plt+0x1046a>
  413d60:	mov    rdi,r14
  413d63:	mov    rsi,r15
  413d66:	call   4128a0 <isspace@plt+0xef90>
  413d6b:	test   al,al
  413d6d:	je     413d7a <isspace@plt+0x1046a>
  413d6f:	movzx  edi,BYTE PTR [rsp+0x37]
  413d74:	call   rbx
  413d76:	test   eax,eax
  413d78:	je     413d60 <isspace@plt+0x10450>
  413d7a:	call   4038f0 <__ctype_b_loc@plt>
  413d7f:	mov    rbx,rax
  413d82:	lea    r14,[rsp+0x8]
  413d87:	lea    r15,[rsp+0x37]
  413d8c:	nop    DWORD PTR [rax+0x0]
  413d90:	mov    rax,QWORD PTR [rbx]
  413d93:	movzx  ecx,BYTE PTR [rsp+0x37]
  413d98:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  413d9d:	je     413dae <isspace@plt+0x1049e>
  413d9f:	mov    rdi,r14
  413da2:	mov    rsi,r15
  413da5:	call   4128a0 <isspace@plt+0xef90>
  413daa:	test   al,al
  413dac:	jne    413d90 <isspace@plt+0x10480>
  413dae:	mov    r14,QWORD PTR [rsp+0x28]
  413db3:	mov    rax,QWORD PTR fs:0x28
  413dbc:	cmp    rax,QWORD PTR [rsp+0x38]
  413dc1:	jne    413dd0 <isspace@plt+0x104c0>
  413dc3:	mov    rax,r14
  413dc6:	add    rsp,0x40
  413dca:	pop    rbx
  413dcb:	pop    r14
  413dcd:	pop    r15
  413dcf:	ret    
  413dd0:	call   403280 <__stack_chk_fail@plt>
  413dd5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413ddf:	nop
  413de0:	push   r15
  413de2:	push   r14
  413de4:	push   r12
  413de6:	push   rbx
  413de7:	sub    rsp,0x38
  413deb:	mov    r14,rdx
  413dee:	mov    rdx,rsi
  413df1:	mov    rsi,rdi
  413df4:	mov    rax,QWORD PTR fs:0x28
  413dfd:	mov    QWORD PTR [rsp+0x30],rax
  413e02:	mov    r15,rsp
  413e05:	mov    rdi,r15
  413e08:	call   410570 <isspace@plt+0xcc60>
  413e0d:	lea    rbx,[rsp+0x2f]
  413e12:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413e1c:	nop    DWORD PTR [rax+0x0]
  413e20:	mov    rdi,r15
  413e23:	mov    rsi,rbx
  413e26:	call   412ad0 <isspace@plt+0xf1c0>
  413e2b:	test   al,al
  413e2d:	je     413e45 <isspace@plt+0x10535>
  413e2f:	call   4038f0 <__ctype_b_loc@plt>
  413e34:	mov    rcx,QWORD PTR [rax]
  413e37:	movzx  eax,BYTE PTR [rsp+0x2f]
  413e3c:	test   BYTE PTR [rcx+rax*2+0x1],0x20
  413e41:	jne    413e20 <isspace@plt+0x10510>
  413e43:	jmp    413e49 <isspace@plt+0x10539>
  413e45:	mov    al,BYTE PTR [rsp+0x2f]
  413e49:	movzx  edi,al
  413e4c:	call   r14
  413e4f:	mov    r15,rsp
  413e52:	lea    r12,[rsp+0x2f]
  413e57:	test   eax,eax
  413e59:	je     413eac <isspace@plt+0x1059c>
  413e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  413e60:	mov    rbx,QWORD PTR [rsp+0x20]
  413e65:	mov    rdi,r15
  413e68:	mov    rsi,r12
  413e6b:	call   412ad0 <isspace@plt+0xf1c0>
  413e70:	test   al,al
  413e72:	je     413ec0 <isspace@plt+0x105b0>
  413e74:	movzx  edi,BYTE PTR [rsp+0x2f]
  413e79:	call   r14
  413e7c:	test   eax,eax
  413e7e:	je     413ec0 <isspace@plt+0x105b0>
  413e80:	call   4038f0 <__ctype_b_loc@plt>
  413e85:	mov    rax,QWORD PTR [rax]
  413e88:	movzx  ecx,BYTE PTR [rsp+0x2f]
  413e8d:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  413e92:	je     413e60 <isspace@plt+0x10550>
  413e94:	jmp    413ec0 <isspace@plt+0x105b0>
  413e96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413ea0:	movzx  edi,BYTE PTR [rsp+0x2f]
  413ea5:	call   r14
  413ea8:	test   eax,eax
  413eaa:	jne    413ec0 <isspace@plt+0x105b0>
  413eac:	mov    rbx,QWORD PTR [rsp+0x20]
  413eb1:	mov    rdi,r15
  413eb4:	mov    rsi,r12
  413eb7:	call   412ad0 <isspace@plt+0xf1c0>
  413ebc:	test   al,al
  413ebe:	jne    413ea0 <isspace@plt+0x10590>
  413ec0:	mov    rax,QWORD PTR fs:0x28
  413ec9:	cmp    rax,QWORD PTR [rsp+0x30]
  413ece:	jne    413edf <isspace@plt+0x105cf>
  413ed0:	mov    rax,rbx
  413ed3:	add    rsp,0x38
  413ed7:	pop    rbx
  413ed8:	pop    r12
  413eda:	pop    r14
  413edc:	pop    r15
  413ede:	ret    
  413edf:	call   403280 <__stack_chk_fail@plt>
  413ee4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413eee:	xchg   ax,ax
  413ef0:	push   r15
  413ef2:	push   r14
  413ef4:	push   r12
  413ef6:	push   rbx
  413ef7:	sub    rsp,0x38
  413efb:	mov    r14,rdx
  413efe:	mov    rdx,rsi
  413f01:	mov    rsi,rdi
  413f04:	mov    rax,QWORD PTR fs:0x28
  413f0d:	mov    QWORD PTR [rsp+0x30],rax
  413f12:	mov    r15,rsp
  413f15:	mov    rdi,r15
  413f18:	call   410570 <isspace@plt+0xcc60>
  413f1d:	lea    rbx,[rsp+0x2f]
  413f22:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413f2c:	nop    DWORD PTR [rax+0x0]
  413f30:	mov    rdi,r15
  413f33:	mov    rsi,rbx
  413f36:	call   4128a0 <isspace@plt+0xef90>
  413f3b:	test   al,al
  413f3d:	je     413f55 <isspace@plt+0x10645>
  413f3f:	call   4038f0 <__ctype_b_loc@plt>
  413f44:	mov    rcx,QWORD PTR [rax]
  413f47:	movzx  eax,BYTE PTR [rsp+0x2f]
  413f4c:	test   BYTE PTR [rcx+rax*2+0x1],0x20
  413f51:	jne    413f30 <isspace@plt+0x10620>
  413f53:	jmp    413f59 <isspace@plt+0x10649>
  413f55:	mov    al,BYTE PTR [rsp+0x2f]
  413f59:	movzx  edi,al
  413f5c:	call   r14
  413f5f:	mov    r15,rsp
  413f62:	lea    r12,[rsp+0x2f]
  413f67:	test   eax,eax
  413f69:	je     413fbc <isspace@plt+0x106ac>
  413f6b:	nop    DWORD PTR [rax+rax*1+0x0]
  413f70:	mov    rbx,QWORD PTR [rsp+0x20]
  413f75:	mov    rdi,r15
  413f78:	mov    rsi,r12
  413f7b:	call   4128a0 <isspace@plt+0xef90>
  413f80:	test   al,al
  413f82:	je     413fd0 <isspace@plt+0x106c0>
  413f84:	movzx  edi,BYTE PTR [rsp+0x2f]
  413f89:	call   r14
  413f8c:	test   eax,eax
  413f8e:	je     413fd0 <isspace@plt+0x106c0>
  413f90:	call   4038f0 <__ctype_b_loc@plt>
  413f95:	mov    rax,QWORD PTR [rax]
  413f98:	movzx  ecx,BYTE PTR [rsp+0x2f]
  413f9d:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  413fa2:	je     413f70 <isspace@plt+0x10660>
  413fa4:	jmp    413fd0 <isspace@plt+0x106c0>
  413fa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413fb0:	movsx  edi,BYTE PTR [rsp+0x2f]
  413fb5:	call   r14
  413fb8:	test   eax,eax
  413fba:	jne    413fd0 <isspace@plt+0x106c0>
  413fbc:	mov    rbx,QWORD PTR [rsp+0x20]
  413fc1:	mov    rdi,r15
  413fc4:	mov    rsi,r12
  413fc7:	call   4128a0 <isspace@plt+0xef90>
  413fcc:	test   al,al
  413fce:	jne    413fb0 <isspace@plt+0x106a0>
  413fd0:	mov    rax,QWORD PTR fs:0x28
  413fd9:	cmp    rax,QWORD PTR [rsp+0x30]
  413fde:	jne    413fef <isspace@plt+0x106df>
  413fe0:	mov    rax,rbx
  413fe3:	add    rsp,0x38
  413fe7:	pop    rbx
  413fe8:	pop    r12
  413fea:	pop    r14
  413fec:	pop    r15
  413fee:	ret    
  413fef:	call   403280 <__stack_chk_fail@plt>
  413ff4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413ffe:	xchg   ax,ax
  414000:	push   r15
  414002:	push   r14
  414004:	push   rbx
  414005:	sub    rsp,0x40
  414009:	mov    rbx,rdx
  41400c:	mov    r14,rsi
  41400f:	mov    rsi,rdi
  414012:	mov    rax,QWORD PTR fs:0x28
  41401b:	mov    QWORD PTR [rsp+0x38],rax
  414020:	lea    r15,[rsp+0x8]
  414025:	mov    rdi,r15
  414028:	mov    rdx,r14
  41402b:	call   410570 <isspace@plt+0xcc60>
  414030:	lea    rsi,[rsp+0x37]
  414035:	mov    rdi,r15
  414038:	call   412400 <isspace@plt+0xeaf0>
  41403d:	test   al,al
  41403f:	je     4140e3 <isspace@plt+0x107d3>
  414045:	movzx  edi,BYTE PTR [rsp+0x37]
  41404a:	call   rbx
  41404c:	lea    r14,[rsp+0x8]
  414051:	lea    r15,[rsp+0x37]
  414056:	test   eax,eax
  414058:	je     41409f <isspace@plt+0x1078f>
  41405a:	nop    WORD PTR [rax+rax*1+0x0]
  414060:	movzx  edi,BYTE PTR [rsp+0x37]
  414065:	call   rbx
  414067:	test   eax,eax
  414069:	je     4140aa <isspace@plt+0x1079a>
  41406b:	call   4038f0 <__ctype_b_loc@plt>
  414070:	mov    rax,QWORD PTR [rax]
  414073:	movzx  ecx,BYTE PTR [rsp+0x37]
  414078:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41407d:	jne    4140aa <isspace@plt+0x1079a>
  41407f:	mov    rdi,r14
  414082:	mov    rsi,r15
  414085:	call   412ad0 <isspace@plt+0xf1c0>
  41408a:	test   al,al
  41408c:	jne    414060 <isspace@plt+0x10750>
  41408e:	jmp    4140aa <isspace@plt+0x1079a>
  414090:	mov    rdi,r14
  414093:	mov    rsi,r15
  414096:	call   412ad0 <isspace@plt+0xf1c0>
  41409b:	test   al,al
  41409d:	je     4140aa <isspace@plt+0x1079a>
  41409f:	movzx  edi,BYTE PTR [rsp+0x37]
  4140a4:	call   rbx
  4140a6:	test   eax,eax
  4140a8:	je     414090 <isspace@plt+0x10780>
  4140aa:	call   4038f0 <__ctype_b_loc@plt>
  4140af:	mov    rbx,rax
  4140b2:	lea    r14,[rsp+0x8]
  4140b7:	lea    r15,[rsp+0x37]
  4140bc:	nop    DWORD PTR [rax+0x0]
  4140c0:	mov    rax,QWORD PTR [rbx]
  4140c3:	movzx  ecx,BYTE PTR [rsp+0x37]
  4140c8:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  4140cd:	je     4140de <isspace@plt+0x107ce>
  4140cf:	mov    rdi,r14
  4140d2:	mov    rsi,r15
  4140d5:	call   412ad0 <isspace@plt+0xf1c0>
  4140da:	test   al,al
  4140dc:	jne    4140c0 <isspace@plt+0x107b0>
  4140de:	mov    r14,QWORD PTR [rsp+0x28]
  4140e3:	mov    rax,QWORD PTR fs:0x28
  4140ec:	cmp    rax,QWORD PTR [rsp+0x38]
  4140f1:	jne    414100 <isspace@plt+0x107f0>
  4140f3:	mov    rax,r14
  4140f6:	add    rsp,0x40
  4140fa:	pop    rbx
  4140fb:	pop    r14
  4140fd:	pop    r15
  4140ff:	ret    
  414100:	call   403280 <__stack_chk_fail@plt>
  414105:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41410f:	nop
  414110:	push   r15
  414112:	push   r14
  414114:	push   r12
  414116:	push   rbx
  414117:	sub    rsp,0x38
  41411b:	mov    rdx,rsi
  41411e:	mov    rsi,rdi
  414121:	mov    rax,QWORD PTR fs:0x28
  41412a:	mov    QWORD PTR [rsp+0x30],rax
  41412f:	mov    r14,rsp
  414132:	mov    rdi,r14
  414135:	call   410570 <isspace@plt+0xcc60>
  41413a:	lea    rbx,[rsp+0x2f]
  41413f:	nop
  414140:	mov    rdi,r14
  414143:	mov    rsi,rbx
  414146:	call   4128a0 <isspace@plt+0xef90>
  41414b:	test   al,al
  41414d:	je     414165 <isspace@plt+0x10855>
  41414f:	call   4038f0 <__ctype_b_loc@plt>
  414154:	mov    rcx,QWORD PTR [rax]
  414157:	movzx  eax,BYTE PTR [rsp+0x2f]
  41415c:	test   BYTE PTR [rcx+rax*2+0x1],0x20
  414161:	jne    414140 <isspace@plt+0x10830>
  414163:	jmp    414169 <isspace@plt+0x10859>
  414165:	mov    al,BYTE PTR [rsp+0x2f]
  414169:	movzx  edi,al
  41416c:	call   403910 <isspace@plt>
  414171:	mov    r14,rsp
  414174:	lea    r15,[rsp+0x2f]
  414179:	test   eax,eax
  41417b:	je     4141ce <isspace@plt+0x108be>
  41417d:	nop    DWORD PTR [rax]
  414180:	mov    r12,QWORD PTR [rsp+0x20]
  414185:	mov    rdi,r14
  414188:	mov    rsi,r15
  41418b:	call   4128a0 <isspace@plt+0xef90>
  414190:	test   al,al
  414192:	je     4141e2 <isspace@plt+0x108d2>
  414194:	movzx  ebx,BYTE PTR [rsp+0x2f]
  414199:	mov    edi,ebx
  41419b:	call   403910 <isspace@plt>
  4141a0:	test   eax,eax
  4141a2:	je     4141e2 <isspace@plt+0x108d2>
  4141a4:	call   4038f0 <__ctype_b_loc@plt>
  4141a9:	mov    rax,QWORD PTR [rax]
  4141ac:	test   BYTE PTR [rax+rbx*2+0x1],0x20
  4141b1:	je     414180 <isspace@plt+0x10870>
  4141b3:	jmp    4141e2 <isspace@plt+0x108d2>
  4141b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4141bf:	nop
  4141c0:	movsx  edi,BYTE PTR [rsp+0x2f]
  4141c5:	call   403910 <isspace@plt>
  4141ca:	test   eax,eax
  4141cc:	jne    4141e2 <isspace@plt+0x108d2>
  4141ce:	mov    r12,QWORD PTR [rsp+0x20]
  4141d3:	mov    rdi,r14
  4141d6:	mov    rsi,r15
  4141d9:	call   4128a0 <isspace@plt+0xef90>
  4141de:	test   al,al
  4141e0:	jne    4141c0 <isspace@plt+0x108b0>
  4141e2:	mov    rax,QWORD PTR fs:0x28
  4141eb:	cmp    rax,QWORD PTR [rsp+0x30]
  4141f0:	jne    414201 <isspace@plt+0x108f1>
  4141f2:	mov    rax,r12
  4141f5:	add    rsp,0x38
  4141f9:	pop    rbx
  4141fa:	pop    r12
  4141fc:	pop    r14
  4141fe:	pop    r15
  414200:	ret    
  414201:	call   403280 <__stack_chk_fail@plt>
  414206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414210:	push   rbp
  414211:	push   r15
  414213:	push   r14
  414215:	push   rbx
  414216:	sub    rsp,0x38
  41421a:	mov    rbx,rsi
  41421d:	mov    rsi,rdi
  414220:	mov    rax,QWORD PTR fs:0x28
  414229:	mov    QWORD PTR [rsp+0x30],rax
  41422e:	mov    r14,rsp
  414231:	mov    rdi,r14
  414234:	mov    rdx,rbx
  414237:	call   410570 <isspace@plt+0xcc60>
  41423c:	lea    rsi,[rsp+0x2f]
  414241:	mov    rdi,r14
  414244:	call   412400 <isspace@plt+0xeaf0>
  414249:	test   al,al
  41424b:	je     414323 <isspace@plt+0x10a13>
  414251:	mov    bl,BYTE PTR [rsp+0x2f]
  414255:	movzx  ebp,bl
  414258:	mov    edi,ebp
  41425a:	call   403910 <isspace@plt>
  41425f:	mov    r14d,eax
  414262:	mov    edi,ebp
  414264:	call   403910 <isspace@plt>
  414269:	test   r14d,r14d
  41426c:	je     4142c0 <isspace@plt+0x109b0>
  41426e:	test   eax,eax
  414270:	je     4142ed <isspace@plt+0x109dd>
  414272:	call   4038f0 <__ctype_b_loc@plt>
  414277:	mov    rbp,rax
  41427a:	mov    r14,rsp
  41427d:	lea    r15,[rsp+0x2f]
  414282:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41428c:	nop    DWORD PTR [rax+0x0]
  414290:	mov    rax,QWORD PTR [rbp+0x0]
  414294:	movzx  ecx,bl
  414297:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41429c:	jne    4142ed <isspace@plt+0x109dd>
  41429e:	mov    rdi,r14
  4142a1:	mov    rsi,r15
  4142a4:	call   412ad0 <isspace@plt+0xf1c0>
  4142a9:	test   al,al
  4142ab:	je     4142ed <isspace@plt+0x109dd>
  4142ad:	movzx  ebx,BYTE PTR [rsp+0x2f]
  4142b2:	movzx  edi,bl
  4142b5:	call   403910 <isspace@plt>
  4142ba:	test   eax,eax
  4142bc:	jne    414290 <isspace@plt+0x10980>
  4142be:	jmp    4142ed <isspace@plt+0x109dd>
  4142c0:	test   eax,eax
  4142c2:	jne    4142ed <isspace@plt+0x109dd>
  4142c4:	mov    r14,rsp
  4142c7:	lea    rbx,[rsp+0x2f]
  4142cc:	nop    DWORD PTR [rax+0x0]
  4142d0:	mov    rdi,r14
  4142d3:	mov    rsi,rbx
  4142d6:	call   412ad0 <isspace@plt+0xf1c0>
  4142db:	test   al,al
  4142dd:	je     4142ed <isspace@plt+0x109dd>
  4142df:	movzx  edi,BYTE PTR [rsp+0x2f]
  4142e4:	call   403910 <isspace@plt>
  4142e9:	test   eax,eax
  4142eb:	je     4142d0 <isspace@plt+0x109c0>
  4142ed:	call   4038f0 <__ctype_b_loc@plt>
  4142f2:	mov    rbx,rax
  4142f5:	mov    r14,rsp
  4142f8:	lea    r15,[rsp+0x2f]
  4142fd:	nop    DWORD PTR [rax]
  414300:	mov    rax,QWORD PTR [rbx]
  414303:	movzx  ecx,BYTE PTR [rsp+0x2f]
  414308:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41430d:	je     41431e <isspace@plt+0x10a0e>
  41430f:	mov    rdi,r14
  414312:	mov    rsi,r15
  414315:	call   412ad0 <isspace@plt+0xf1c0>
  41431a:	test   al,al
  41431c:	jne    414300 <isspace@plt+0x109f0>
  41431e:	mov    rbx,QWORD PTR [rsp+0x20]
  414323:	mov    rax,QWORD PTR fs:0x28
  41432c:	cmp    rax,QWORD PTR [rsp+0x30]
  414331:	jne    414341 <isspace@plt+0x10a31>
  414333:	mov    rax,rbx
  414336:	add    rsp,0x38
  41433a:	pop    rbx
  41433b:	pop    r14
  41433d:	pop    r15
  41433f:	pop    rbp
  414340:	ret    
  414341:	call   403280 <__stack_chk_fail@plt>
  414346:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414350:	push   rbp
  414351:	push   r15
  414353:	push   r14
  414355:	push   rbx
  414356:	sub    rsp,0x38
  41435a:	mov    rbx,rsi
  41435d:	mov    rsi,rdi
  414360:	mov    rax,QWORD PTR fs:0x28
  414369:	mov    QWORD PTR [rsp+0x30],rax
  41436e:	mov    r14,rsp
  414371:	mov    rdi,r14
  414374:	mov    rdx,rbx
  414377:	call   410570 <isspace@plt+0xcc60>
  41437c:	lea    rsi,[rsp+0x2f]
  414381:	mov    rdi,r14
  414384:	call   412400 <isspace@plt+0xeaf0>
  414389:	test   al,al
  41438b:	je     414463 <isspace@plt+0x10b53>
  414391:	mov    bl,BYTE PTR [rsp+0x2f]
  414395:	movzx  ebp,bl
  414398:	mov    edi,ebp
  41439a:	call   403910 <isspace@plt>
  41439f:	mov    r14d,eax
  4143a2:	mov    edi,ebp
  4143a4:	call   403910 <isspace@plt>
  4143a9:	test   r14d,r14d
  4143ac:	je     414400 <isspace@plt+0x10af0>
  4143ae:	test   eax,eax
  4143b0:	je     41442d <isspace@plt+0x10b1d>
  4143b2:	call   4038f0 <__ctype_b_loc@plt>
  4143b7:	mov    rbp,rax
  4143ba:	mov    r14,rsp
  4143bd:	lea    r15,[rsp+0x2f]
  4143c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4143cc:	nop    DWORD PTR [rax+0x0]
  4143d0:	mov    rax,QWORD PTR [rbp+0x0]
  4143d4:	movzx  ecx,bl
  4143d7:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  4143dc:	jne    41442d <isspace@plt+0x10b1d>
  4143de:	mov    rdi,r14
  4143e1:	mov    rsi,r15
  4143e4:	call   4128a0 <isspace@plt+0xef90>
  4143e9:	test   al,al
  4143eb:	je     41442d <isspace@plt+0x10b1d>
  4143ed:	movzx  ebx,BYTE PTR [rsp+0x2f]
  4143f2:	movzx  edi,bl
  4143f5:	call   403910 <isspace@plt>
  4143fa:	test   eax,eax
  4143fc:	jne    4143d0 <isspace@plt+0x10ac0>
  4143fe:	jmp    41442d <isspace@plt+0x10b1d>
  414400:	test   eax,eax
  414402:	jne    41442d <isspace@plt+0x10b1d>
  414404:	mov    r14,rsp
  414407:	lea    rbx,[rsp+0x2f]
  41440c:	nop    DWORD PTR [rax+0x0]
  414410:	mov    rdi,r14
  414413:	mov    rsi,rbx
  414416:	call   4128a0 <isspace@plt+0xef90>
  41441b:	test   al,al
  41441d:	je     41442d <isspace@plt+0x10b1d>
  41441f:	movzx  edi,BYTE PTR [rsp+0x2f]
  414424:	call   403910 <isspace@plt>
  414429:	test   eax,eax
  41442b:	je     414410 <isspace@plt+0x10b00>
  41442d:	call   4038f0 <__ctype_b_loc@plt>
  414432:	mov    rbx,rax
  414435:	mov    r14,rsp
  414438:	lea    r15,[rsp+0x2f]
  41443d:	nop    DWORD PTR [rax]
  414440:	mov    rax,QWORD PTR [rbx]
  414443:	movzx  ecx,BYTE PTR [rsp+0x2f]
  414448:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41444d:	je     41445e <isspace@plt+0x10b4e>
  41444f:	mov    rdi,r14
  414452:	mov    rsi,r15
  414455:	call   4128a0 <isspace@plt+0xef90>
  41445a:	test   al,al
  41445c:	jne    414440 <isspace@plt+0x10b30>
  41445e:	mov    rbx,QWORD PTR [rsp+0x20]
  414463:	mov    rax,QWORD PTR fs:0x28
  41446c:	cmp    rax,QWORD PTR [rsp+0x30]
  414471:	jne    414481 <isspace@plt+0x10b71>
  414473:	mov    rax,rbx
  414476:	add    rsp,0x38
  41447a:	pop    rbx
  41447b:	pop    r14
  41447d:	pop    r15
  41447f:	pop    rbp
  414480:	ret    
  414481:	call   403280 <__stack_chk_fail@plt>
  414486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414490:	push   r15
  414492:	push   r14
  414494:	push   r12
  414496:	push   rbx
  414497:	sub    rsp,0x38
  41449b:	mov    rdx,rsi
  41449e:	mov    rsi,rdi
  4144a1:	mov    rax,QWORD PTR fs:0x28
  4144aa:	mov    QWORD PTR [rsp+0x30],rax
  4144af:	mov    r14,rsp
  4144b2:	mov    rdi,r14
  4144b5:	call   410570 <isspace@plt+0xcc60>
  4144ba:	lea    rbx,[rsp+0x2f]
  4144bf:	nop
  4144c0:	mov    rdi,r14
  4144c3:	mov    rsi,rbx
  4144c6:	call   412ad0 <isspace@plt+0xf1c0>
  4144cb:	test   al,al
  4144cd:	je     4144e5 <isspace@plt+0x10bd5>
  4144cf:	call   4038f0 <__ctype_b_loc@plt>
  4144d4:	mov    rcx,QWORD PTR [rax]
  4144d7:	movzx  eax,BYTE PTR [rsp+0x2f]
  4144dc:	test   BYTE PTR [rcx+rax*2+0x1],0x20
  4144e1:	jne    4144c0 <isspace@plt+0x10bb0>
  4144e3:	jmp    4144e9 <isspace@plt+0x10bd9>
  4144e5:	mov    al,BYTE PTR [rsp+0x2f]
  4144e9:	movzx  edi,al
  4144ec:	call   403910 <isspace@plt>
  4144f1:	mov    r14,rsp
  4144f4:	lea    r15,[rsp+0x2f]
  4144f9:	test   eax,eax
  4144fb:	je     41454e <isspace@plt+0x10c3e>
  4144fd:	nop    DWORD PTR [rax]
  414500:	mov    r12,QWORD PTR [rsp+0x20]
  414505:	mov    rdi,r14
  414508:	mov    rsi,r15
  41450b:	call   412ad0 <isspace@plt+0xf1c0>
  414510:	test   al,al
  414512:	je     414562 <isspace@plt+0x10c52>
  414514:	movzx  ebx,BYTE PTR [rsp+0x2f]
  414519:	mov    edi,ebx
  41451b:	call   403910 <isspace@plt>
  414520:	test   eax,eax
  414522:	je     414562 <isspace@plt+0x10c52>
  414524:	call   4038f0 <__ctype_b_loc@plt>
  414529:	mov    rax,QWORD PTR [rax]
  41452c:	test   BYTE PTR [rax+rbx*2+0x1],0x20
  414531:	je     414500 <isspace@plt+0x10bf0>
  414533:	jmp    414562 <isspace@plt+0x10c52>
  414535:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41453f:	nop
  414540:	movzx  edi,BYTE PTR [rsp+0x2f]
  414545:	call   403910 <isspace@plt>
  41454a:	test   eax,eax
  41454c:	jne    414562 <isspace@plt+0x10c52>
  41454e:	mov    r12,QWORD PTR [rsp+0x20]
  414553:	mov    rdi,r14
  414556:	mov    rsi,r15
  414559:	call   412ad0 <isspace@plt+0xf1c0>
  41455e:	test   al,al
  414560:	jne    414540 <isspace@plt+0x10c30>
  414562:	mov    rax,QWORD PTR fs:0x28
  41456b:	cmp    rax,QWORD PTR [rsp+0x30]
  414570:	jne    414581 <isspace@plt+0x10c71>
  414572:	mov    rax,r12
  414575:	add    rsp,0x38
  414579:	pop    rbx
  41457a:	pop    r12
  41457c:	pop    r14
  41457e:	pop    r15
  414580:	ret    
  414581:	call   403280 <__stack_chk_fail@plt>
  414586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414590:	push   r15
  414592:	push   r14
  414594:	push   r12
  414596:	push   rbx
  414597:	sub    rsp,0x38
  41459b:	mov    rdx,rsi
  41459e:	mov    rsi,rdi
  4145a1:	mov    rax,QWORD PTR fs:0x28
  4145aa:	mov    QWORD PTR [rsp+0x30],rax
  4145af:	mov    r14,rsp
  4145b2:	mov    rdi,r14
  4145b5:	call   410570 <isspace@plt+0xcc60>
  4145ba:	lea    rbx,[rsp+0x2f]
  4145bf:	nop
  4145c0:	mov    rdi,r14
  4145c3:	mov    rsi,rbx
  4145c6:	call   4128a0 <isspace@plt+0xef90>
  4145cb:	test   al,al
  4145cd:	je     414678 <isspace@plt+0x10d68>
  4145d3:	call   4038f0 <__ctype_b_loc@plt>
  4145d8:	mov    rcx,QWORD PTR [rax]
  4145db:	movzx  eax,BYTE PTR [rsp+0x2f]
  4145e0:	test   BYTE PTR [rcx+rax*2+0x1],0x20
  4145e5:	jne    4145c0 <isspace@plt+0x10cb0>
  4145e7:	test   al,al
  4145e9:	js     4146b7 <isspace@plt+0x10da7>
  4145ef:	cmp    al,0x5f
  4145f1:	je     4146b7 <isspace@plt+0x10da7>
  4145f7:	movzx  eax,al
  4145fa:	lea    ecx,[rax-0x30]
  4145fd:	cmp    ecx,0xa
  414600:	jb     4146b7 <isspace@plt+0x10da7>
  414606:	and    eax,0xffffffdf
  414609:	add    eax,0xffffffbf
  41460c:	cmp    eax,0x1a
  41460f:	jb     4146b7 <isspace@plt+0x10da7>
  414615:	mov    r14,rsp
  414618:	lea    r15,[rsp+0x2f]
  41461d:	nop    DWORD PTR [rax]
  414620:	mov    r12,QWORD PTR [rsp+0x20]
  414625:	mov    rdi,r14
  414628:	mov    rsi,r15
  41462b:	call   4128a0 <isspace@plt+0xef90>
  414630:	test   al,al
  414632:	je     4146dc <isspace@plt+0x10dcc>
  414638:	movzx  ebx,BYTE PTR [rsp+0x2f]
  41463d:	test   bl,bl
  41463f:	js     4146dc <isspace@plt+0x10dcc>
  414645:	cmp    bl,0x5f
  414648:	je     4146dc <isspace@plt+0x10dcc>
  41464e:	lea    eax,[rbx-0x30]
  414651:	cmp    eax,0xa
  414654:	jb     4146dc <isspace@plt+0x10dcc>
  41465a:	mov    eax,ebx
  41465c:	and    eax,0xffffffdf
  41465f:	add    eax,0xffffffbf
  414662:	cmp    eax,0x1a
  414665:	jb     4146dc <isspace@plt+0x10dcc>
  414667:	call   4038f0 <__ctype_b_loc@plt>
  41466c:	mov    rax,QWORD PTR [rax]
  41466f:	test   BYTE PTR [rax+rbx*2+0x1],0x20
  414674:	je     414620 <isspace@plt+0x10d10>
  414676:	jmp    4146dc <isspace@plt+0x10dcc>
  414678:	mov    al,BYTE PTR [rsp+0x2f]
  41467c:	test   al,al
  41467e:	jns    4145ef <isspace@plt+0x10cdf>
  414684:	jmp    4146b7 <isspace@plt+0x10da7>
  414686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414690:	lea    ecx,[rax-0x30]
  414693:	cmp    ecx,0x9
  414696:	seta   cl
  414699:	mov    edx,eax
  41469b:	and    edx,0xffffffdf
  41469e:	add    edx,0xffffffbf
  4146a1:	cmp    edx,0x19
  4146a4:	seta   dl
  4146a7:	cmp    al,0x5f
  4146a9:	setne  al
  4146ac:	and    al,cl
  4146ae:	and    al,dl
  4146b0:	movzx  eax,al
  4146b3:	test   eax,eax
  4146b5:	jne    4146dc <isspace@plt+0x10dcc>
  4146b7:	mov    r12,QWORD PTR [rsp+0x20]
  4146bc:	mov    rdi,rsp
  4146bf:	lea    rsi,[rsp+0x2f]
  4146c4:	call   4128a0 <isspace@plt+0xef90>
  4146c9:	test   al,al
  4146cb:	je     4146dc <isspace@plt+0x10dcc>
  4146cd:	movsx  eax,BYTE PTR [rsp+0x2f]
  4146d2:	test   eax,eax
  4146d4:	jns    414690 <isspace@plt+0x10d80>
  4146d6:	xor    eax,eax
  4146d8:	test   eax,eax
  4146da:	je     4146b7 <isspace@plt+0x10da7>
  4146dc:	mov    rax,QWORD PTR fs:0x28
  4146e5:	cmp    rax,QWORD PTR [rsp+0x30]
  4146ea:	jne    4146fb <isspace@plt+0x10deb>
  4146ec:	mov    rax,r12
  4146ef:	add    rsp,0x38
  4146f3:	pop    rbx
  4146f4:	pop    r12
  4146f6:	pop    r14
  4146f8:	pop    r15
  4146fa:	ret    
  4146fb:	call   403280 <__stack_chk_fail@plt>
  414700:	push   r15
  414702:	push   r14
  414704:	push   rbx
  414705:	sub    rsp,0x40
  414709:	mov    rbx,rsi
  41470c:	mov    rsi,rdi
  41470f:	mov    rax,QWORD PTR fs:0x28
  414718:	mov    QWORD PTR [rsp+0x38],rax
  41471d:	lea    r14,[rsp+0x8]
  414722:	mov    rdi,r14
  414725:	mov    rdx,rbx
  414728:	call   410570 <isspace@plt+0xcc60>
  41472d:	lea    rsi,[rsp+0x37]
  414732:	mov    rdi,r14
  414735:	call   412400 <isspace@plt+0xeaf0>
  41473a:	test   al,al
  41473c:	je     414853 <isspace@plt+0x10f43>
  414742:	mov    al,BYTE PTR [rsp+0x37]
  414746:	test   al,al
  414748:	js     4147d5 <isspace@plt+0x10ec5>
  41474e:	cmp    al,0x5f
  414750:	je     4147d5 <isspace@plt+0x10ec5>
  414756:	movzx  ecx,al
  414759:	lea    edx,[rcx-0x30]
  41475c:	cmp    edx,0xa
  41475f:	jb     4147d5 <isspace@plt+0x10ec5>
  414761:	and    ecx,0xffffffdf
  414764:	add    ecx,0xffffffbf
  414767:	cmp    ecx,0x1a
  41476a:	jb     4147d5 <isspace@plt+0x10ec5>
  41476c:	test   al,al
  41476e:	js     414813 <isspace@plt+0x10f03>
  414774:	lea    r14,[rsp+0x8]
  414779:	lea    r15,[rsp+0x37]
  41477e:	xchg   ax,ax
  414780:	cmp    al,0x5f
  414782:	je     414813 <isspace@plt+0x10f03>
  414788:	movzx  ebx,al
  41478b:	lea    eax,[rbx-0x30]
  41478e:	cmp    eax,0xa
  414791:	jb     414813 <isspace@plt+0x10f03>
  414797:	mov    eax,ebx
  414799:	and    eax,0xffffffdf
  41479c:	add    eax,0xffffffbf
  41479f:	cmp    eax,0x1a
  4147a2:	jb     414813 <isspace@plt+0x10f03>
  4147a4:	call   4038f0 <__ctype_b_loc@plt>
  4147a9:	mov    rax,QWORD PTR [rax]
  4147ac:	test   BYTE PTR [rax+rbx*2+0x1],0x20
  4147b1:	jne    414813 <isspace@plt+0x10f03>
  4147b3:	mov    rdi,r14
  4147b6:	mov    rsi,r15
  4147b9:	call   412ad0 <isspace@plt+0xf1c0>
  4147be:	test   al,al
  4147c0:	je     414813 <isspace@plt+0x10f03>
  4147c2:	movzx  eax,BYTE PTR [rsp+0x37]
  4147c7:	test   al,al
  4147c9:	jns    414780 <isspace@plt+0x10e70>
  4147cb:	jmp    414813 <isspace@plt+0x10f03>
  4147cd:	nop    DWORD PTR [rax]
  4147d0:	movzx  eax,BYTE PTR [rsp+0x37]
  4147d5:	test   al,al
  4147d7:	js     414800 <isspace@plt+0x10ef0>
  4147d9:	cmp    al,0x5f
  4147db:	je     414800 <isspace@plt+0x10ef0>
  4147dd:	movzx  eax,al
  4147e0:	lea    ecx,[rax-0x30]
  4147e3:	cmp    ecx,0xa
  4147e6:	jb     414800 <isspace@plt+0x10ef0>
  4147e8:	and    eax,0xffffffdf
  4147eb:	add    eax,0xffffffbf
  4147ee:	cmp    eax,0x19
  4147f1:	ja     414813 <isspace@plt+0x10f03>
  4147f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4147fd:	nop    DWORD PTR [rax]
  414800:	lea    rdi,[rsp+0x8]
  414805:	lea    rsi,[rsp+0x37]
  41480a:	call   412ad0 <isspace@plt+0xf1c0>
  41480f:	test   al,al
  414811:	jne    4147d0 <isspace@plt+0x10ec0>
  414813:	call   4038f0 <__ctype_b_loc@plt>
  414818:	mov    rbx,rax
  41481b:	lea    r14,[rsp+0x8]
  414820:	lea    r15,[rsp+0x37]
  414825:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41482f:	nop
  414830:	mov    rax,QWORD PTR [rbx]
  414833:	movzx  ecx,BYTE PTR [rsp+0x37]
  414838:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41483d:	je     41484e <isspace@plt+0x10f3e>
  41483f:	mov    rdi,r14
  414842:	mov    rsi,r15
  414845:	call   412ad0 <isspace@plt+0xf1c0>
  41484a:	test   al,al
  41484c:	jne    414830 <isspace@plt+0x10f20>
  41484e:	mov    rbx,QWORD PTR [rsp+0x28]
  414853:	mov    rax,QWORD PTR fs:0x28
  41485c:	cmp    rax,QWORD PTR [rsp+0x38]
  414861:	jne    414870 <isspace@plt+0x10f60>
  414863:	mov    rax,rbx
  414866:	add    rsp,0x40
  41486a:	pop    rbx
  41486b:	pop    r14
  41486d:	pop    r15
  41486f:	ret    
  414870:	call   403280 <__stack_chk_fail@plt>
  414875:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41487f:	nop
  414880:	push   r15
  414882:	push   r14
  414884:	push   rbx
  414885:	sub    rsp,0x40
  414889:	mov    rbx,rsi
  41488c:	mov    rsi,rdi
  41488f:	mov    rax,QWORD PTR fs:0x28
  414898:	mov    QWORD PTR [rsp+0x38],rax
  41489d:	lea    r14,[rsp+0x8]
  4148a2:	mov    rdi,r14
  4148a5:	mov    rdx,rbx
  4148a8:	call   410570 <isspace@plt+0xcc60>
  4148ad:	lea    rsi,[rsp+0x37]
  4148b2:	mov    rdi,r14
  4148b5:	call   412400 <isspace@plt+0xeaf0>
  4148ba:	test   al,al
  4148bc:	je     4149d3 <isspace@plt+0x110c3>
  4148c2:	mov    al,BYTE PTR [rsp+0x37]
  4148c6:	test   al,al
  4148c8:	js     414955 <isspace@plt+0x11045>
  4148ce:	cmp    al,0x5f
  4148d0:	je     414955 <isspace@plt+0x11045>
  4148d6:	movzx  ecx,al
  4148d9:	lea    edx,[rcx-0x30]
  4148dc:	cmp    edx,0xa
  4148df:	jb     414955 <isspace@plt+0x11045>
  4148e1:	and    ecx,0xffffffdf
  4148e4:	add    ecx,0xffffffbf
  4148e7:	cmp    ecx,0x1a
  4148ea:	jb     414955 <isspace@plt+0x11045>
  4148ec:	test   al,al
  4148ee:	js     414993 <isspace@plt+0x11083>
  4148f4:	lea    r14,[rsp+0x8]
  4148f9:	lea    r15,[rsp+0x37]
  4148fe:	xchg   ax,ax
  414900:	cmp    al,0x5f
  414902:	je     414993 <isspace@plt+0x11083>
  414908:	movzx  ebx,al
  41490b:	lea    eax,[rbx-0x30]
  41490e:	cmp    eax,0xa
  414911:	jb     414993 <isspace@plt+0x11083>
  414917:	mov    eax,ebx
  414919:	and    eax,0xffffffdf
  41491c:	add    eax,0xffffffbf
  41491f:	cmp    eax,0x1a
  414922:	jb     414993 <isspace@plt+0x11083>
  414924:	call   4038f0 <__ctype_b_loc@plt>
  414929:	mov    rax,QWORD PTR [rax]
  41492c:	test   BYTE PTR [rax+rbx*2+0x1],0x20
  414931:	jne    414993 <isspace@plt+0x11083>
  414933:	mov    rdi,r14
  414936:	mov    rsi,r15
  414939:	call   4128a0 <isspace@plt+0xef90>
  41493e:	test   al,al
  414940:	je     414993 <isspace@plt+0x11083>
  414942:	movzx  eax,BYTE PTR [rsp+0x37]
  414947:	test   al,al
  414949:	jns    414900 <isspace@plt+0x10ff0>
  41494b:	jmp    414993 <isspace@plt+0x11083>
  41494d:	nop    DWORD PTR [rax]
  414950:	movzx  eax,BYTE PTR [rsp+0x37]
  414955:	test   al,al
  414957:	js     414980 <isspace@plt+0x11070>
  414959:	cmp    al,0x5f
  41495b:	je     414980 <isspace@plt+0x11070>
  41495d:	movzx  eax,al
  414960:	lea    ecx,[rax-0x30]
  414963:	cmp    ecx,0xa
  414966:	jb     414980 <isspace@plt+0x11070>
  414968:	and    eax,0xffffffdf
  41496b:	add    eax,0xffffffbf
  41496e:	cmp    eax,0x19
  414971:	ja     414993 <isspace@plt+0x11083>
  414973:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41497d:	nop    DWORD PTR [rax]
  414980:	lea    rdi,[rsp+0x8]
  414985:	lea    rsi,[rsp+0x37]
  41498a:	call   4128a0 <isspace@plt+0xef90>
  41498f:	test   al,al
  414991:	jne    414950 <isspace@plt+0x11040>
  414993:	call   4038f0 <__ctype_b_loc@plt>
  414998:	mov    rbx,rax
  41499b:	lea    r14,[rsp+0x8]
  4149a0:	lea    r15,[rsp+0x37]
  4149a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4149af:	nop
  4149b0:	mov    rax,QWORD PTR [rbx]
  4149b3:	movzx  ecx,BYTE PTR [rsp+0x37]
  4149b8:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  4149bd:	je     4149ce <isspace@plt+0x110be>
  4149bf:	mov    rdi,r14
  4149c2:	mov    rsi,r15
  4149c5:	call   4128a0 <isspace@plt+0xef90>
  4149ca:	test   al,al
  4149cc:	jne    4149b0 <isspace@plt+0x110a0>
  4149ce:	mov    rbx,QWORD PTR [rsp+0x28]
  4149d3:	mov    rax,QWORD PTR fs:0x28
  4149dc:	cmp    rax,QWORD PTR [rsp+0x38]
  4149e1:	jne    4149f0 <isspace@plt+0x110e0>
  4149e3:	mov    rax,rbx
  4149e6:	add    rsp,0x40
  4149ea:	pop    rbx
  4149eb:	pop    r14
  4149ed:	pop    r15
  4149ef:	ret    
  4149f0:	call   403280 <__stack_chk_fail@plt>
  4149f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4149ff:	nop
  414a00:	push   r15
  414a02:	push   r14
  414a04:	push   r12
  414a06:	push   rbx
  414a07:	sub    rsp,0x38
  414a0b:	mov    rdx,rsi
  414a0e:	mov    rsi,rdi
  414a11:	mov    rax,QWORD PTR fs:0x28
  414a1a:	mov    QWORD PTR [rsp+0x30],rax
  414a1f:	mov    r14,rsp
  414a22:	mov    rdi,r14
  414a25:	call   410570 <isspace@plt+0xcc60>
  414a2a:	lea    rbx,[rsp+0x2f]
  414a2f:	nop
  414a30:	mov    rdi,r14
  414a33:	mov    rsi,rbx
  414a36:	call   412ad0 <isspace@plt+0xf1c0>
  414a3b:	test   al,al
  414a3d:	je     414ae8 <isspace@plt+0x111d8>
  414a43:	call   4038f0 <__ctype_b_loc@plt>
  414a48:	mov    rcx,QWORD PTR [rax]
  414a4b:	movzx  eax,BYTE PTR [rsp+0x2f]
  414a50:	test   BYTE PTR [rcx+rax*2+0x1],0x20
  414a55:	jne    414a30 <isspace@plt+0x11120>
  414a57:	test   al,al
  414a59:	js     414b27 <isspace@plt+0x11217>
  414a5f:	cmp    al,0x5f
  414a61:	je     414b27 <isspace@plt+0x11217>
  414a67:	movzx  eax,al
  414a6a:	lea    ecx,[rax-0x30]
  414a6d:	cmp    ecx,0xa
  414a70:	jb     414b27 <isspace@plt+0x11217>
  414a76:	and    eax,0xffffffdf
  414a79:	add    eax,0xffffffbf
  414a7c:	cmp    eax,0x1a
  414a7f:	jb     414b27 <isspace@plt+0x11217>
  414a85:	mov    r14,rsp
  414a88:	lea    r15,[rsp+0x2f]
  414a8d:	nop    DWORD PTR [rax]
  414a90:	mov    r12,QWORD PTR [rsp+0x20]
  414a95:	mov    rdi,r14
  414a98:	mov    rsi,r15
  414a9b:	call   412ad0 <isspace@plt+0xf1c0>
  414aa0:	test   al,al
  414aa2:	je     414b4c <isspace@plt+0x1123c>
  414aa8:	movzx  ebx,BYTE PTR [rsp+0x2f]
  414aad:	test   bl,bl
  414aaf:	js     414b4c <isspace@plt+0x1123c>
  414ab5:	cmp    bl,0x5f
  414ab8:	je     414b4c <isspace@plt+0x1123c>
  414abe:	lea    eax,[rbx-0x30]
  414ac1:	cmp    eax,0xa
  414ac4:	jb     414b4c <isspace@plt+0x1123c>
  414aca:	mov    eax,ebx
  414acc:	and    eax,0xffffffdf
  414acf:	add    eax,0xffffffbf
  414ad2:	cmp    eax,0x1a
  414ad5:	jb     414b4c <isspace@plt+0x1123c>
  414ad7:	call   4038f0 <__ctype_b_loc@plt>
  414adc:	mov    rax,QWORD PTR [rax]
  414adf:	test   BYTE PTR [rax+rbx*2+0x1],0x20
  414ae4:	je     414a90 <isspace@plt+0x11180>
  414ae6:	jmp    414b4c <isspace@plt+0x1123c>
  414ae8:	mov    al,BYTE PTR [rsp+0x2f]
  414aec:	test   al,al
  414aee:	jns    414a5f <isspace@plt+0x1114f>
  414af4:	jmp    414b27 <isspace@plt+0x11217>
  414af6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414b00:	lea    ecx,[rax-0x30]
  414b03:	cmp    ecx,0x9
  414b06:	seta   cl
  414b09:	mov    edx,eax
  414b0b:	and    edx,0xffffffdf
  414b0e:	add    edx,0xffffffbf
  414b11:	cmp    edx,0x19
  414b14:	seta   dl
  414b17:	cmp    al,0x5f
  414b19:	setne  al
  414b1c:	and    al,cl
  414b1e:	and    al,dl
  414b20:	movzx  eax,al
  414b23:	test   eax,eax
  414b25:	jne    414b4c <isspace@plt+0x1123c>
  414b27:	mov    r12,QWORD PTR [rsp+0x20]
  414b2c:	mov    rdi,rsp
  414b2f:	lea    rsi,[rsp+0x2f]
  414b34:	call   412ad0 <isspace@plt+0xf1c0>
  414b39:	test   al,al
  414b3b:	je     414b4c <isspace@plt+0x1123c>
  414b3d:	movzx  eax,BYTE PTR [rsp+0x2f]
  414b42:	test   al,al
  414b44:	jns    414b00 <isspace@plt+0x111f0>
  414b46:	xor    eax,eax
  414b48:	test   eax,eax
  414b4a:	je     414b27 <isspace@plt+0x11217>
  414b4c:	mov    rax,QWORD PTR fs:0x28
  414b55:	cmp    rax,QWORD PTR [rsp+0x30]
  414b5a:	jne    414b6b <isspace@plt+0x1125b>
  414b5c:	mov    rax,r12
  414b5f:	add    rsp,0x38
  414b63:	pop    rbx
  414b64:	pop    r12
  414b66:	pop    r14
  414b68:	pop    r15
  414b6a:	ret    
  414b6b:	call   403280 <__stack_chk_fail@plt>
  414b70:	push   r15
  414b72:	push   r14
  414b74:	push   r12
  414b76:	push   rbx
  414b77:	sub    rsp,0x68
  414b7b:	mov    rbx,rsi
  414b7e:	mov    rsi,rdi
  414b81:	mov    rax,QWORD PTR fs:0x28
  414b8a:	mov    QWORD PTR [rsp+0x60],rax
  414b8f:	mov    BYTE PTR [rsp+0x5e],0x58
  414b94:	lea    r14,[rsp+0x30]
  414b99:	mov    rdi,r14
  414b9c:	mov    rdx,rbx
  414b9f:	call   410570 <isspace@plt+0xcc60>
  414ba4:	mov    rax,QWORD PTR [rsp+0x50]
  414ba9:	mov    QWORD PTR [rsp+0x20],rax
  414bae:	vmovups ymm0,YMMWORD PTR [rsp+0x30]
  414bb4:	vmovups YMMWORD PTR [rsp],ymm0
  414bb9:	lea    rsi,[rsp+0x5f]
  414bbe:	mov    rdi,r14
  414bc1:	vzeroupper 
  414bc4:	call   412400 <isspace@plt+0xeaf0>
  414bc9:	test   al,al
  414bcb:	je     414ced <isspace@plt+0x113dd>
  414bd1:	mov    rdi,rsp
  414bd4:	lea    rsi,[rsp+0x5e]
  414bd9:	call   412400 <isspace@plt+0xeaf0>
  414bde:	test   al,al
  414be0:	je     414c28 <isspace@plt+0x11318>
  414be2:	call   4038f0 <__ctype_b_loc@plt>
  414be7:	mov    r14,rax
  414bea:	mov    rbx,rsp
  414bed:	lea    r15,[rsp+0x5e]
  414bf2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414bfc:	nop    DWORD PTR [rax+0x0]
  414c00:	mov    rax,QWORD PTR [r14]
  414c03:	movzx  ecx,BYTE PTR [rsp+0x5e]
  414c08:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  414c0d:	je     414c28 <isspace@plt+0x11318>
  414c0f:	mov    rdi,rbx
  414c12:	xor    esi,esi
  414c14:	call   412540 <isspace@plt+0xec30>
  414c19:	mov    rdi,rbx
  414c1c:	mov    rsi,r15
  414c1f:	call   412400 <isspace@plt+0xeaf0>
  414c24:	test   al,al
  414c26:	jne    414c00 <isspace@plt+0x112f0>
  414c28:	cmp    QWORD PTR [rsp+0x20],0x0
  414c2e:	movzx  ecx,BYTE PTR [rsp+0x5e]
  414c33:	mov    eax,0x2e
  414c38:	cmovne eax,ecx
  414c3b:	mov    BYTE PTR [rsp+0x5e],al
  414c3f:	lea    r14,[rsp+0x30]
  414c44:	lea    r15,[rsp+0x5f]
  414c49:	movabs r12,0x8000400200000000
  414c53:	cmp    al,0x3f
  414c55:	ja     414c90 <isspace@plt+0x11380>
  414c57:	nop    WORD PTR [rax+rax*1+0x0]
  414c60:	movzx  eax,al
  414c63:	bt     r12,rax
  414c67:	jae    414c90 <isspace@plt+0x11380>
  414c69:	call   4038f0 <__ctype_b_loc@plt>
  414c6e:	mov    rbx,rax
  414c71:	mov    rcx,QWORD PTR [rax]
  414c74:	movzx  eax,BYTE PTR [rsp+0x5f]
  414c79:	test   BYTE PTR [rcx+rax*2+0x1],0x20
  414c7e:	je     414c94 <isspace@plt+0x11384>
  414c80:	jmp    414cb1 <isspace@plt+0x113a1>
  414c82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414c8c:	nop    DWORD PTR [rax+0x0]
  414c90:	mov    al,BYTE PTR [rsp+0x5f]
  414c94:	mov    BYTE PTR [rsp+0x5e],al
  414c98:	mov    rdi,r14
  414c9b:	mov    rsi,r15
  414c9e:	call   412480 <isspace@plt+0xeb70>
  414ca3:	test   al,al
  414ca5:	je     414ce8 <isspace@plt+0x113d8>
  414ca7:	mov    al,BYTE PTR [rsp+0x5e]
  414cab:	cmp    al,0x3f
  414cad:	jbe    414c60 <isspace@plt+0x11350>
  414caf:	jmp    414c90 <isspace@plt+0x11380>
  414cb1:	lea    r14,[rsp+0x30]
  414cb6:	lea    r15,[rsp+0x5f]
  414cbb:	nop    DWORD PTR [rax+rax*1+0x0]
  414cc0:	mov    rdi,r14
  414cc3:	xor    esi,esi
  414cc5:	call   412480 <isspace@plt+0xeb70>
  414cca:	mov    rdi,r14
  414ccd:	mov    rsi,r15
  414cd0:	call   412400 <isspace@plt+0xeaf0>
  414cd5:	test   al,al
  414cd7:	je     414ce8 <isspace@plt+0x113d8>
  414cd9:	mov    rax,QWORD PTR [rbx]
  414cdc:	movzx  ecx,BYTE PTR [rsp+0x5f]
  414ce1:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  414ce6:	jne    414cc0 <isspace@plt+0x113b0>
  414ce8:	mov    rbx,QWORD PTR [rsp+0x50]
  414ced:	mov    rax,QWORD PTR fs:0x28
  414cf6:	cmp    rax,QWORD PTR [rsp+0x60]
  414cfb:	jne    414d0c <isspace@plt+0x113fc>
  414cfd:	mov    rax,rbx
  414d00:	add    rsp,0x68
  414d04:	pop    rbx
  414d05:	pop    r12
  414d07:	pop    r14
  414d09:	pop    r15
  414d0b:	ret    
  414d0c:	call   403280 <__stack_chk_fail@plt>
  414d11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414d1b:	nop    DWORD PTR [rax+rax*1+0x0]
  414d20:	push   rbp
  414d21:	push   r15
  414d23:	push   r14
  414d25:	push   r13
  414d27:	push   r12
  414d29:	push   rbx
  414d2a:	sub    rsp,0x38
  414d2e:	mov    rdx,rsi
  414d31:	mov    rsi,rdi
  414d34:	mov    rax,QWORD PTR fs:0x28
  414d3d:	mov    QWORD PTR [rsp+0x30],rax
  414d42:	mov    rdi,rsp
  414d45:	call   410570 <isspace@plt+0xcc60>
  414d4a:	cmp    QWORD PTR [rsp+0x20],0x0
  414d50:	je     414e68 <isspace@plt+0x11558>
  414d56:	mov    bl,0x58
  414d58:	xor    ebp,ebp
  414d5a:	mov    r14,rsp
  414d5d:	lea    r15,[rsp+0x2f]
  414d62:	movabs r12,0x8000400200000000
  414d6c:	jmp    414d94 <isspace@plt+0x11484>
  414d6e:	xchg   ax,ax
  414d70:	mov    rax,QWORD PTR [r13+0x0]
  414d74:	movzx  ebx,BYTE PTR [rsp+0x2f]
  414d79:	movzx  eax,WORD PTR [rax+rbx*2]
  414d7d:	shr    eax,0xd
  414d80:	not    eax
  414d82:	movzx  ebp,bpl
  414d86:	or     ebp,eax
  414d88:	and    bpl,0x1
  414d8c:	cmp    QWORD PTR [rsp+0x20],0x0
  414d92:	je     414e0b <isspace@plt+0x114fb>
  414d94:	mov    rdi,r14
  414d97:	mov    rsi,r15
  414d9a:	call   412540 <isspace@plt+0xec30>
  414d9f:	test   al,al
  414da1:	je     414e0b <isspace@plt+0x114fb>
  414da3:	call   4038f0 <__ctype_b_loc@plt>
  414da8:	mov    r13,rax
  414dab:	test   bpl,0x1
  414daf:	je     414d70 <isspace@plt+0x11460>
  414db1:	mov    rax,QWORD PTR [r13+0x0]
  414db5:	movzx  ecx,bl
  414db8:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  414dbd:	je     414d70 <isspace@plt+0x11460>
  414dbf:	movzx  eax,BYTE PTR [rsp+0x2f]
  414dc4:	cmp    rax,0x3f
  414dc8:	ja     414d70 <isspace@plt+0x11460>
  414dca:	bt     r12,rax
  414dce:	jae    414d70 <isspace@plt+0x11460>
  414dd0:	mov    r14,rsp
  414dd3:	lea    r15,[rsp+0x2f]
  414dd8:	nop    DWORD PTR [rax+rax*1+0x0]
  414de0:	mov    rdi,r14
  414de3:	xor    esi,esi
  414de5:	call   412480 <isspace@plt+0xeb70>
  414dea:	mov    rdi,r14
  414ded:	mov    rsi,r15
  414df0:	call   412400 <isspace@plt+0xeaf0>
  414df5:	test   al,al
  414df7:	je     414e68 <isspace@plt+0x11558>
  414df9:	mov    rax,QWORD PTR [r13+0x0]
  414dfd:	movzx  ecx,BYTE PTR [rsp+0x2f]
  414e02:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  414e07:	jne    414de0 <isspace@plt+0x114d0>
  414e09:	jmp    414e68 <isspace@plt+0x11558>
  414e0b:	test   bpl,0x1
  414e0f:	je     414e68 <isspace@plt+0x11558>
  414e11:	mov    rdi,rsp
  414e14:	lea    rsi,[rsp+0x2f]
  414e19:	call   412400 <isspace@plt+0xeaf0>
  414e1e:	test   al,al
  414e20:	je     414e68 <isspace@plt+0x11558>
  414e22:	call   4038f0 <__ctype_b_loc@plt>
  414e27:	mov    r14,rax
  414e2a:	mov    rbx,rsp
  414e2d:	lea    r15,[rsp+0x2f]
  414e32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414e3c:	nop    DWORD PTR [rax+0x0]
  414e40:	mov    rax,QWORD PTR [r14]
  414e43:	movzx  ecx,BYTE PTR [rsp+0x2f]
  414e48:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  414e4d:	je     414e68 <isspace@plt+0x11558>
  414e4f:	mov    rdi,rbx
  414e52:	xor    esi,esi
  414e54:	call   412480 <isspace@plt+0xeb70>
  414e59:	mov    rdi,rbx
  414e5c:	mov    rsi,r15
  414e5f:	call   412400 <isspace@plt+0xeaf0>
  414e64:	test   al,al
  414e66:	jne    414e40 <isspace@plt+0x11530>
  414e68:	mov    rax,QWORD PTR [rsp+0x20]
  414e6d:	mov    rcx,QWORD PTR fs:0x28
  414e76:	cmp    rcx,QWORD PTR [rsp+0x30]
  414e7b:	jne    414e8c <isspace@plt+0x1157c>
  414e7d:	add    rsp,0x38
  414e81:	pop    rbx
  414e82:	pop    r12
  414e84:	pop    r13
  414e86:	pop    r14
  414e88:	pop    r15
  414e8a:	pop    rbp
  414e8b:	ret    
  414e8c:	call   403280 <__stack_chk_fail@plt>
  414e91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414e9b:	nop    DWORD PTR [rax+rax*1+0x0]
  414ea0:	push   r15
  414ea2:	push   r14
  414ea4:	push   r12
  414ea6:	push   rbx
  414ea7:	sub    rsp,0x68
  414eab:	mov    rdx,rsi
  414eae:	mov    r14,rdi
  414eb1:	mov    rax,QWORD PTR fs:0x28
  414eba:	mov    QWORD PTR [rsp+0x60],rax
  414ebf:	mov    rbx,rsp
  414ec2:	mov    rdi,rbx
  414ec5:	mov    rsi,r14
  414ec8:	call   410570 <isspace@plt+0xcc60>
  414ecd:	lea    rsi,[rsp+0x2f]
  414ed2:	mov    rdi,rbx
  414ed5:	call   412400 <isspace@plt+0xeaf0>
  414eda:	test   al,al
  414edc:	je     414f1a <isspace@plt+0x1160a>
  414ede:	movabs r12,0x100000600
  414ee8:	mov    rbx,rsp
  414eeb:	lea    r15,[rsp+0x2f]
  414ef0:	movzx  eax,BYTE PTR [rsp+0x2f]
  414ef5:	cmp    rax,0x20
  414ef9:	ja     414f1a <isspace@plt+0x1160a>
  414efb:	bt     r12,rax
  414eff:	jae    414f1a <isspace@plt+0x1160a>
  414f01:	mov    rdi,rbx
  414f04:	xor    esi,esi
  414f06:	call   4128a0 <isspace@plt+0xef90>
  414f0b:	mov    rdi,rbx
  414f0e:	mov    rsi,r15
  414f11:	call   412400 <isspace@plt+0xeaf0>
  414f16:	test   al,al
  414f18:	jne    414ef0 <isspace@plt+0x115e0>
  414f1a:	mov    rdx,QWORD PTR [rsp+0x20]
  414f1f:	lea    rbx,[rsp+0x30]
  414f24:	mov    rdi,rbx
  414f27:	mov    rsi,r14
  414f2a:	call   410570 <isspace@plt+0xcc60>
  414f2f:	lea    r15,[rsp+0x5f]
  414f34:	jmp    414f48 <isspace@plt+0x11638>
  414f36:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414f40:	mov    al,BYTE PTR [rsp+0x5f]
  414f44:	cmp    al,0xa
  414f46:	je     414f7e <isspace@plt+0x1166e>
  414f48:	mov    rdi,rbx
  414f4b:	mov    esi,0xa
  414f50:	call   412690 <isspace@plt+0xed80>
  414f55:	mov    r14,QWORD PTR [rsp+0x50]
  414f5a:	test   al,al
  414f5c:	je     414f81 <isspace@plt+0x11671>
  414f5e:	xchg   ax,ax
  414f60:	mov    rdi,rbx
  414f63:	mov    rsi,r15
  414f66:	call   412480 <isspace@plt+0xeb70>
  414f6b:	test   al,al
  414f6d:	je     414f40 <isspace@plt+0x11630>
  414f6f:	movzx  eax,BYTE PTR [rsp+0x5f]
  414f74:	cmp    al,0x20
  414f76:	je     414f60 <isspace@plt+0x11650>
  414f78:	cmp    al,0x9
  414f7a:	je     414f60 <isspace@plt+0x11650>
  414f7c:	jmp    414f44 <isspace@plt+0x11634>
  414f7e:	inc    r14
  414f81:	mov    rax,QWORD PTR fs:0x28
  414f8a:	cmp    rax,QWORD PTR [rsp+0x60]
  414f8f:	jne    414fa0 <isspace@plt+0x11690>
  414f91:	mov    rax,r14
  414f94:	add    rsp,0x68
  414f98:	pop    rbx
  414f99:	pop    r12
  414f9b:	pop    r14
  414f9d:	pop    r15
  414f9f:	ret    
  414fa0:	call   403280 <__stack_chk_fail@plt>
  414fa5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414faf:	nop
  414fb0:	push   r15
  414fb2:	push   r14
  414fb4:	push   rbx
  414fb5:	sub    rsp,0x40
  414fb9:	mov    rdx,rsi
  414fbc:	mov    rsi,rdi
  414fbf:	mov    rax,QWORD PTR fs:0x28
  414fc8:	mov    QWORD PTR [rsp+0x38],rax
  414fcd:	lea    rbx,[rsp+0x8]
  414fd2:	mov    rdi,rbx
  414fd5:	call   410570 <isspace@plt+0xcc60>
  414fda:	lea    r15,[rsp+0x37]
  414fdf:	jmp    414ff8 <isspace@plt+0x116e8>
  414fe1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414feb:	nop    DWORD PTR [rax+rax*1+0x0]
  414ff0:	mov    al,BYTE PTR [rsp+0x37]
  414ff4:	cmp    al,0xa
  414ff6:	je     41502e <isspace@plt+0x1171e>
  414ff8:	mov    rdi,rbx
  414ffb:	mov    esi,0xa
  415000:	call   412690 <isspace@plt+0xed80>
  415005:	mov    r14,QWORD PTR [rsp+0x28]
  41500a:	test   al,al
  41500c:	je     415031 <isspace@plt+0x11721>
  41500e:	xchg   ax,ax
  415010:	mov    rdi,rbx
  415013:	mov    rsi,r15
  415016:	call   412480 <isspace@plt+0xeb70>
  41501b:	test   al,al
  41501d:	je     414ff0 <isspace@plt+0x116e0>
  41501f:	movzx  eax,BYTE PTR [rsp+0x37]
  415024:	cmp    al,0x20
  415026:	je     415010 <isspace@plt+0x11700>
  415028:	cmp    al,0x9
  41502a:	je     415010 <isspace@plt+0x11700>
  41502c:	jmp    414ff4 <isspace@plt+0x116e4>
  41502e:	inc    r14
  415031:	mov    rax,QWORD PTR fs:0x28
  41503a:	cmp    rax,QWORD PTR [rsp+0x38]
  41503f:	jne    41504e <isspace@plt+0x1173e>
  415041:	mov    rax,r14
  415044:	add    rsp,0x40
  415048:	pop    rbx
  415049:	pop    r14
  41504b:	pop    r15
  41504d:	ret    
  41504e:	call   403280 <__stack_chk_fail@plt>
  415053:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41505d:	nop    DWORD PTR [rax]
  415060:	push   r15
  415062:	push   r14
  415064:	push   r12
  415066:	push   rbx
  415067:	sub    rsp,0x38
  41506b:	mov    rdx,rsi
  41506e:	mov    r14,rdi
  415071:	mov    rax,QWORD PTR fs:0x28
  41507a:	mov    QWORD PTR [rsp+0x30],rax
  41507f:	mov    rbx,rsp
  415082:	mov    rdi,rbx
  415085:	mov    rsi,r14
  415088:	call   410570 <isspace@plt+0xcc60>
  41508d:	lea    rsi,[rsp+0x2f]
  415092:	mov    rdi,rbx
  415095:	call   412540 <isspace@plt+0xec30>
  41509a:	test   al,al
  41509c:	je     4150d0 <isspace@plt+0x117c0>
  41509e:	movabs r12,0x100000600
  4150a8:	mov    r15,rsp
  4150ab:	lea    rbx,[rsp+0x2f]
  4150b0:	movzx  eax,BYTE PTR [rsp+0x2f]
  4150b5:	cmp    rax,0x20
  4150b9:	ja     4150d0 <isspace@plt+0x117c0>
  4150bb:	bt     r12,rax
  4150bf:	jae    4150d0 <isspace@plt+0x117c0>
  4150c1:	mov    rdi,r15
  4150c4:	mov    rsi,rbx
  4150c7:	call   412540 <isspace@plt+0xec30>
  4150cc:	test   al,al
  4150ce:	jne    4150b0 <isspace@plt+0x117a0>
  4150d0:	mov    rsi,QWORD PTR [rsp+0x20]
  4150d5:	mov    rdi,r14
  4150d8:	call   415100 <isspace@plt+0x117f0>
  4150dd:	mov    rcx,QWORD PTR fs:0x28
  4150e6:	cmp    rcx,QWORD PTR [rsp+0x30]
  4150eb:	jne    4150f9 <isspace@plt+0x117e9>
  4150ed:	add    rsp,0x38
  4150f1:	pop    rbx
  4150f2:	pop    r12
  4150f4:	pop    r14
  4150f6:	pop    r15
  4150f8:	ret    
  4150f9:	call   403280 <__stack_chk_fail@plt>
  4150fe:	xchg   ax,ax
  415100:	push   r14
  415102:	push   rbx
  415103:	sub    rsp,0x38
  415107:	mov    rdx,rsi
  41510a:	mov    rsi,rdi
  41510d:	mov    rax,QWORD PTR fs:0x28
  415116:	mov    QWORD PTR [rsp+0x30],rax
  41511b:	mov    rbx,rsp
  41511e:	mov    rdi,rbx
  415121:	call   410570 <isspace@plt+0xcc60>
  415126:	mov    rdi,rbx
  415129:	mov    esi,0xa
  41512e:	call   4125f0 <isspace@plt+0xece0>
  415133:	test   al,al
  415135:	je     415174 <isspace@plt+0x11864>
  415137:	mov    rbx,rsp
  41513a:	lea    r14,[rsp+0x2f]
  41513f:	nop
  415140:	mov    rdi,rbx
  415143:	mov    rsi,r14
  415146:	call   412540 <isspace@plt+0xec30>
  41514b:	movzx  ecx,BYTE PTR [rsp+0x2f]
  415150:	test   al,al
  415152:	je     41515e <isspace@plt+0x1184e>
  415154:	cmp    cl,0x9
  415157:	je     415140 <isspace@plt+0x11830>
  415159:	cmp    cl,0x20
  41515c:	je     415140 <isspace@plt+0x11830>
  41515e:	cmp    cl,0xa
  415161:	je     41517b <isspace@plt+0x1186b>
  415163:	mov    rdi,rbx
  415166:	mov    esi,0xa
  41516b:	call   4125f0 <isspace@plt+0xece0>
  415170:	test   al,al
  415172:	jne    415140 <isspace@plt+0x11830>
  415174:	mov    rax,QWORD PTR [rsp+0x20]
  415179:	jmp    415183 <isspace@plt+0x11873>
  41517b:	mov    rax,QWORD PTR [rsp+0x20]
  415180:	inc    rax
  415183:	mov    rcx,QWORD PTR fs:0x28
  41518c:	cmp    rcx,QWORD PTR [rsp+0x30]
  415191:	jne    41519b <isspace@plt+0x1188b>
  415193:	add    rsp,0x38
  415197:	pop    rbx
  415198:	pop    r14
  41519a:	ret    
  41519b:	call   403280 <__stack_chk_fail@plt>
  4151a0:	push   rbx
  4151a1:	sub    rsp,0x20
  4151a5:	mov    rbx,rsi
  4151a8:	mov    rax,QWORD PTR fs:0x28
  4151b1:	mov    QWORD PTR [rsp+0x18],rax
  4151b6:	dec    rsi
  4151b9:	call   416a50 <isspace@plt+0x13140>
  4151be:	mov    QWORD PTR [rsp+0x8],rax
  4151c3:	mov    QWORD PTR [rsp+0x10],rdx
  4151c8:	lea    rdi,[rsp+0x8]
  4151cd:	call   416fc0 <isspace@plt+0x136b0>
  4151d2:	mov    ecx,eax
  4151d4:	mov    rax,QWORD PTR [rsp+0x8]
  4151d9:	dec    rax
  4151dc:	test   cl,cl
  4151de:	cmove  rax,rbx
  4151e2:	mov    rcx,QWORD PTR fs:0x28
  4151eb:	cmp    rcx,QWORD PTR [rsp+0x18]
  4151f0:	jne    4151f8 <isspace@plt+0x118e8>
  4151f2:	add    rsp,0x20
  4151f6:	pop    rbx
  4151f7:	ret    
  4151f8:	call   403280 <__stack_chk_fail@plt>
  4151fd:	nop    DWORD PTR [rax]
  415200:	push   rbx
  415201:	sub    rsp,0x20
  415205:	mov    rbx,rsi
  415208:	mov    rax,QWORD PTR fs:0x28
  415211:	mov    QWORD PTR [rsp+0x18],rax
  415216:	inc    rsi
  415219:	call   416a50 <isspace@plt+0x13140>
  41521e:	mov    QWORD PTR [rsp+0x8],rax
  415223:	mov    QWORD PTR [rsp+0x10],rdx
  415228:	lea    rdi,[rsp+0x8]
  41522d:	call   416fc0 <isspace@plt+0x136b0>
  415232:	test   al,al
  415234:	je     41523b <isspace@plt+0x1192b>
  415236:	mov    rbx,QWORD PTR [rsp+0x10]
  41523b:	mov    rax,QWORD PTR fs:0x28
  415244:	cmp    rax,QWORD PTR [rsp+0x18]
  415249:	jne    415254 <isspace@plt+0x11944>
  41524b:	mov    rax,rbx
  41524e:	add    rsp,0x20
  415252:	pop    rbx
  415253:	ret    
  415254:	call   403280 <__stack_chk_fail@plt>
  415259:	nop    DWORD PTR [rax+0x0]
  415260:	push   rbx
  415261:	sub    rsp,0x20
  415265:	mov    rbx,rsi
  415268:	mov    rax,QWORD PTR fs:0x28
  415271:	mov    QWORD PTR [rsp+0x18],rax
  415276:	dec    rsi
  415279:	call   416ab0 <isspace@plt+0x131a0>
  41527e:	mov    QWORD PTR [rsp+0x8],rax
  415283:	mov    QWORD PTR [rsp+0x10],rdx
  415288:	lea    rdi,[rsp+0x8]
  41528d:	call   416fc0 <isspace@plt+0x136b0>
  415292:	mov    ecx,eax
  415294:	mov    rax,QWORD PTR [rsp+0x8]
  415299:	dec    rax
  41529c:	test   cl,cl
  41529e:	cmove  rax,rbx
  4152a2:	mov    rcx,QWORD PTR fs:0x28
  4152ab:	cmp    rcx,QWORD PTR [rsp+0x18]
  4152b0:	jne    4152b8 <isspace@plt+0x119a8>
  4152b2:	add    rsp,0x20
  4152b6:	pop    rbx
  4152b7:	ret    
  4152b8:	call   403280 <__stack_chk_fail@plt>
  4152bd:	nop    DWORD PTR [rax]
  4152c0:	push   rbx
  4152c1:	sub    rsp,0x20
  4152c5:	mov    rbx,rsi
  4152c8:	mov    rax,QWORD PTR fs:0x28
  4152d1:	mov    QWORD PTR [rsp+0x18],rax
  4152d6:	inc    rsi
  4152d9:	call   416ab0 <isspace@plt+0x131a0>
  4152de:	mov    QWORD PTR [rsp+0x8],rax
  4152e3:	mov    QWORD PTR [rsp+0x10],rdx
  4152e8:	lea    rdi,[rsp+0x8]
  4152ed:	call   416fc0 <isspace@plt+0x136b0>
  4152f2:	test   al,al
  4152f4:	je     4152fb <isspace@plt+0x119eb>
  4152f6:	mov    rbx,QWORD PTR [rsp+0x10]
  4152fb:	mov    rax,QWORD PTR fs:0x28
  415304:	cmp    rax,QWORD PTR [rsp+0x18]
  415309:	jne    415314 <isspace@plt+0x11a04>
  41530b:	mov    rax,rbx
  41530e:	add    rsp,0x20
  415312:	pop    rbx
  415313:	ret    
  415314:	call   403280 <__stack_chk_fail@plt>
  415319:	nop    DWORD PTR [rax+0x0]
  415320:	push   rax
  415321:	mov    rcx,rdx
  415324:	mov    rax,QWORD PTR fs:0x28
  41532d:	mov    QWORD PTR [rsp],rax
  415331:	xor    edx,edx
  415333:	call   415350 <isspace@plt+0x11a40>
  415338:	mov    rcx,QWORD PTR fs:0x28
  415341:	cmp    rcx,QWORD PTR [rsp]
  415345:	jne    415349 <isspace@plt+0x11a39>
  415347:	pop    rcx
  415348:	ret    
  415349:	call   403280 <__stack_chk_fail@plt>
  41534e:	xchg   ax,ax
  415350:	push   rbp
  415351:	push   r15
  415353:	push   r14
  415355:	push   r13
  415357:	push   r12
  415359:	push   rbx
  41535a:	sub    rsp,0x48
  41535e:	mov    r15,rcx
  415361:	mov    rbp,rdx
  415364:	mov    r13,rsi
  415367:	mov    r14,rdi
  41536a:	mov    rax,QWORD PTR fs:0x28
  415373:	mov    QWORD PTR [rsp+0x40],rax
  415378:	mov    rbx,rsp
  41537b:	mov    rdi,rbx
  41537e:	mov    rsi,r14
  415381:	mov    rdx,r13
  415384:	call   410570 <isspace@plt+0xcc60>
  415389:	lea    rsi,[rsp+0x2f]
  41538e:	mov    rdi,rbx
  415391:	call   412400 <isspace@plt+0xeaf0>
  415396:	test   al,al
  415398:	je     415477 <isspace@plt+0x11b67>
  41539e:	movsx  ebx,BYTE PTR [rsp+0x2f]
  4153a3:	mov    r12d,ebx
  4153a6:	test   rbp,rbp
  4153a9:	je     4153ca <isspace@plt+0x11aba>
  4153ab:	mov    rdi,rbp
  4153ae:	call   403250 <strlen@plt>
  4153b3:	mov    rdi,rbp
  4153b6:	mov    esi,r12d
  4153b9:	mov    rdx,rax
  4153bc:	call   403410 <memchr@plt>
  4153c1:	test   rax,rax
  4153c4:	je     415477 <isspace@plt+0x11b67>
  4153ca:	add    ebx,0xffffffde
  4153cd:	cmp    ebx,0x5b
  4153d0:	ja     415477 <isspace@plt+0x11b67>
  4153d6:	mov    ecx,0x1
  4153db:	mov    al,0x29
  4153dd:	lea    rdx,[rip+0x1b2cc]        # 4306b0 <isspace@plt+0x2cda0>
  4153e4:	movsxd rsi,DWORD PTR [rdx+rbx*4]
  4153e8:	add    rsi,rdx
  4153eb:	jmp    rsi
  4153ed:	mov    rdi,r14
  4153f0:	mov    rsi,r13
  4153f3:	mov    edx,r12d
  4153f6:	mov    ecx,0x1
  4153fb:	mov    r8,r15
  4153fe:	call   415530 <isspace@plt+0x11c20>
  415403:	mov    r12,rax
  415406:	movsx  edx,BYTE PTR [rsp+0x2f]
  41540b:	mov    rdi,r14
  41540e:	mov    rsi,r13
  415411:	mov    ecx,0xffffffff
  415416:	mov    r8,r15
  415419:	call   415530 <isspace@plt+0x11c20>
  41541e:	mov    r15,rax
  415421:	cmp    r12,r13
  415424:	jne    41542b <isspace@plt+0x11b1b>
  415426:	mov    r13,r15
  415429:	jmp    415477 <isspace@plt+0x11b67>
  41542b:	cmp    r15,r13
  41542e:	jne    41549d <isspace@plt+0x11b8d>
  415430:	mov    r13,r12
  415433:	jmp    415477 <isspace@plt+0x11b67>
  415435:	mov    ecx,0xffffffff
  41543a:	mov    al,0x3c
  41543c:	jmp    415463 <isspace@plt+0x11b53>
  41543e:	mov    ecx,0xffffffff
  415443:	mov    al,0x5b
  415445:	jmp    415463 <isspace@plt+0x11b53>
  415447:	mov    ecx,0xffffffff
  41544c:	mov    al,0x7b
  41544e:	jmp    415463 <isspace@plt+0x11b53>
  415450:	mov    ecx,0xffffffff
  415455:	mov    al,0x28
  415457:	jmp    415463 <isspace@plt+0x11b53>
  415459:	mov    al,0x3e
  41545b:	jmp    415463 <isspace@plt+0x11b53>
  41545d:	mov    al,0x5d
  41545f:	jmp    415463 <isspace@plt+0x11b53>
  415461:	mov    al,0x7d
  415463:	movzx  edx,al
  415466:	mov    rdi,r14
  415469:	mov    rsi,r13
  41546c:	mov    r8,r15
  41546f:	call   415530 <isspace@plt+0x11c20>
  415474:	mov    r13,rax
  415477:	mov    rax,QWORD PTR fs:0x28
  415480:	cmp    rax,QWORD PTR [rsp+0x40]
  415485:	jne    415523 <isspace@plt+0x11c13>
  41548b:	mov    rax,r13
  41548e:	add    rsp,0x48
  415492:	pop    rbx
  415493:	pop    r12
  415495:	pop    r13
  415497:	pop    r14
  415499:	pop    r15
  41549b:	pop    rbp
  41549c:	ret    
  41549d:	mov    rdi,r14
  4154a0:	mov    rsi,r13
  4154a3:	call   410bc0 <isspace@plt+0xd2b0>
  4154a8:	mov    rbp,rax
  4154ab:	mov    rdi,r14
  4154ae:	mov    rsi,r12
  4154b1:	call   410bc0 <isspace@plt+0xd2b0>
  4154b6:	mov    rbx,rax
  4154b9:	mov    rdi,r14
  4154bc:	mov    rsi,r15
  4154bf:	call   410bc0 <isspace@plt+0xd2b0>
  4154c4:	mov    r13,r15
  4154c7:	cmp    rbp,rbx
  4154ca:	jne    415477 <isspace@plt+0x11b67>
  4154cc:	cmp    rbp,rax
  4154cf:	jne    415430 <isspace@plt+0x11b20>
  4154d5:	mov    rdi,rsp
  4154d8:	lea    rsi,[rsp+0x2e]
  4154dd:	call   412480 <isspace@plt+0xeb70>
  4154e2:	mov    r13,r12
  4154e5:	test   al,al
  4154e7:	je     415477 <isspace@plt+0x11b67>
  4154e9:	movabs rax,0x2e3e5d7d290a0920
  4154f3:	mov    QWORD PTR [rsp+0x30],rax
  4154f8:	mov    DWORD PTR [rsp+0x38],0x3b3a2c
  415500:	movsx  esi,BYTE PTR [rsp+0x2e]
  415505:	lea    rdi,[rsp+0x30]
  41550a:	mov    edx,0xc
  41550f:	call   403410 <memchr@plt>
  415514:	test   rax,rax
  415517:	cmove  r15,r12
  41551b:	mov    r13,r15
  41551e:	jmp    415477 <isspace@plt+0x11b67>
  415523:	call   403280 <__stack_chk_fail@plt>
  415528:	nop    DWORD PTR [rax+rax*1+0x0]
  415530:	push   rbp
  415531:	push   r15
  415533:	push   r14
  415535:	push   r13
  415537:	push   r12
  415539:	push   rbx
  41553a:	sub    rsp,0x48
  41553e:	mov    rbx,r8
  415541:	mov    r15d,ecx
  415544:	mov    r13d,edx
  415547:	mov    r14,rsi
  41554a:	mov    rsi,rdi
  41554d:	mov    rax,QWORD PTR fs:0x28
  415556:	mov    QWORD PTR [rsp+0x40],rax
  41555b:	lea    rbp,[rsp+0x10]
  415560:	mov    rdi,rbp
  415563:	mov    rdx,r14
  415566:	call   410570 <isspace@plt+0xcc60>
  41556b:	lea    rsi,[rsp+0x3e]
  415570:	mov    rdi,rbp
  415573:	call   412400 <isspace@plt+0xeaf0>
  415578:	test   al,al
  41557a:	je     4156b9 <isspace@plt+0x11da9>
  415580:	lea    rdi,[rsp+0x10]
  415585:	lea    rsi,[rsp+0x3f]
  41558a:	test   r15d,r15d
  41558d:	js     415629 <isspace@plt+0x11d19>
  415593:	call   412480 <isspace@plt+0xeb70>
  415598:	test   al,al
  41559a:	je     4156b9 <isspace@plt+0x11da9>
  4155a0:	mov    QWORD PTR [rsp+0x8],r14
  4155a5:	mov    ebp,0x1
  4155aa:	xor    r14d,r14d
  4155ad:	lea    r15,[rsp+0x10]
  4155b2:	lea    r12,[rsp+0x3f]
  4155b7:	test   rbx,rbx
  4155ba:	jne    4155e1 <isspace@plt+0x11cd1>
  4155bc:	jmp    4155f0 <isspace@plt+0x11ce0>
  4155be:	xchg   ax,ax
  4155c0:	xor    edx,edx
  4155c2:	cmp    al,cl
  4155c4:	sete   dl
  4155c7:	add    ebp,edx
  4155c9:	mov    rdi,r15
  4155cc:	mov    rsi,r12
  4155cf:	call   412480 <isspace@plt+0xeb70>
  4155d4:	test   al,al
  4155d6:	je     4156b4 <isspace@plt+0x11da4>
  4155dc:	test   rbx,rbx
  4155df:	je     4155f0 <isspace@plt+0x11ce0>
  4155e1:	mov    rax,QWORD PTR [rsp+0x30]
  4155e6:	cmp    rax,QWORD PTR [rbx+0x8]
  4155ea:	jae    4156b4 <isspace@plt+0x11da4>
  4155f0:	movzx  eax,BYTE PTR [rsp+0x3f]
  4155f5:	movzx  ecx,BYTE PTR [rsp+0x3e]
  4155fa:	movzx  edx,r14b
  4155fe:	not    r14b
  415601:	and    r14b,0x1
  415605:	cmp    al,cl
  415607:	movzx  r14d,r14b
  41560b:	cmove  r14d,edx
  41560f:	cmp    al,0x22
  415611:	cmovne r14d,edx
  415615:	test   r14b,0x1
  415619:	jne    4155c9 <isspace@plt+0x11cb9>
  41561b:	cmp    al,r13b
  41561e:	jne    4155c0 <isspace@plt+0x11cb0>
  415620:	dec    ebp
  415622:	jne    4155c0 <isspace@plt+0x11cb0>
  415624:	jmp    4156ad <isspace@plt+0x11d9d>
  415629:	call   412540 <isspace@plt+0xec30>
  41562e:	test   al,al
  415630:	je     4156b9 <isspace@plt+0x11da9>
  415636:	mov    ebp,0x1
  41563b:	xor    r15d,r15d
  41563e:	lea    r12,[rsp+0x3f]
  415643:	test   rbx,rbx
  415646:	jne    41566f <isspace@plt+0x11d5f>
  415648:	jmp    415679 <isspace@plt+0x11d69>
  41564a:	nop    WORD PTR [rax+rax*1+0x0]
  415650:	xor    edx,edx
  415652:	cmp    al,cl
  415654:	sete   dl
  415657:	add    ebp,edx
  415659:	lea    rdi,[rsp+0x10]
  41565e:	mov    rsi,r12
  415661:	call   412540 <isspace@plt+0xec30>
  415666:	test   al,al
  415668:	je     4156b9 <isspace@plt+0x11da9>
  41566a:	test   rbx,rbx
  41566d:	je     415679 <isspace@plt+0x11d69>
  41566f:	mov    rax,QWORD PTR [rsp+0x30]
  415674:	cmp    rax,QWORD PTR [rbx]
  415677:	jb     4156b9 <isspace@plt+0x11da9>
  415679:	movzx  eax,BYTE PTR [rsp+0x3f]
  41567e:	movzx  ecx,BYTE PTR [rsp+0x3e]
  415683:	movzx  edx,r15b
  415687:	not    r15b
  41568a:	and    r15b,0x1
  41568e:	cmp    al,cl
  415690:	movzx  r15d,r15b
  415694:	cmove  r15d,edx
  415698:	cmp    al,0x22
  41569a:	cmovne r15d,edx
  41569e:	test   r15b,0x1
  4156a2:	jne    415659 <isspace@plt+0x11d49>
  4156a4:	cmp    al,r13b
  4156a7:	jne    415650 <isspace@plt+0x11d40>
  4156a9:	dec    ebp
  4156ab:	jne    415650 <isspace@plt+0x11d40>
  4156ad:	mov    r14,QWORD PTR [rsp+0x30]
  4156b2:	jmp    4156b9 <isspace@plt+0x11da9>
  4156b4:	mov    r14,QWORD PTR [rsp+0x8]
  4156b9:	mov    rax,QWORD PTR fs:0x28
  4156c2:	cmp    rax,QWORD PTR [rsp+0x40]
  4156c7:	jne    4156db <isspace@plt+0x11dcb>
  4156c9:	mov    rax,r14
  4156cc:	add    rsp,0x48
  4156d0:	pop    rbx
  4156d1:	pop    r12
  4156d3:	pop    r13
  4156d5:	pop    r14
  4156d7:	pop    r15
  4156d9:	pop    rbp
  4156da:	ret    
  4156db:	call   403280 <__stack_chk_fail@plt>
  4156e0:	push   r15
  4156e2:	push   r14
  4156e4:	push   r13
  4156e6:	push   r12
  4156e8:	push   rbx
  4156e9:	sub    rsp,0x30
  4156ed:	mov    r14,rdx
  4156f0:	mov    r15,rsi
  4156f3:	mov    rbx,rdi
  4156f6:	mov    rax,QWORD PTR fs:0x28
  4156ff:	mov    QWORD PTR [rsp+0x28],rax
  415704:	lea    r13,[rsi+0x1]
  415708:	call   410890 <isspace@plt+0xcf80>
  41570d:	mov    r12,rax
  415710:	lea    rdx,[rsp+0xf]
  415715:	mov    rdi,rbx
  415718:	mov    rsi,r15
  41571b:	call   411060 <isspace@plt+0xd750>
  415720:	mov    rdx,r12
  415723:	sub    rdx,r13
  415726:	jbe    415757 <isspace@plt+0x11e47>
  415728:	cmp    BYTE PTR [rsp+0xf],0xa
  41572d:	setne  cl
  415730:	xor    al,0x1
  415732:	or     al,cl
  415734:	movzx  eax,al
  415737:	mov    DWORD PTR [rsp],eax
  41573a:	lea    r9,[rsp+0x10]
  41573f:	mov    r8d,0x1
  415745:	mov    rdi,rbx
  415748:	mov    rsi,r13
  41574b:	mov    rcx,r14
  41574e:	call   42aef0 <isspace@plt+0x275e0>
  415753:	test   eax,eax
  415755:	je     415780 <isspace@plt+0x11e70>
  415757:	mov    DWORD PTR [rsp],0x0
  41575e:	lea    r9,[rsp+0x10]
  415763:	mov    r8d,0x1
  415769:	mov    rdi,rbx
  41576c:	mov    esi,0x0
  415771:	mov    rdx,r12
  415774:	mov    rcx,r14
  415777:	call   42aef0 <isspace@plt+0x275e0>
  41577c:	test   eax,eax
  41577e:	jne    415785 <isspace@plt+0x11e75>
  415780:	mov    r15,QWORD PTR [rsp+0x10]
  415785:	mov    rax,QWORD PTR fs:0x28
  41578e:	cmp    rax,QWORD PTR [rsp+0x28]
  415793:	jne    4157a6 <isspace@plt+0x11e96>
  415795:	mov    rax,r15
  415798:	add    rsp,0x30
  41579c:	pop    rbx
  41579d:	pop    r12
  41579f:	pop    r13
  4157a1:	pop    r14
  4157a3:	pop    r15
  4157a5:	ret    
  4157a6:	call   403280 <__stack_chk_fail@plt>
  4157ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4157b0:	push   r15
  4157b2:	push   r14
  4157b4:	push   rbx
  4157b5:	sub    rsp,0x30
  4157b9:	mov    r14,rdx
  4157bc:	mov    r15,rsi
  4157bf:	mov    rbx,rdi
  4157c2:	mov    rax,QWORD PTR fs:0x28
  4157cb:	mov    QWORD PTR [rsp+0x28],rax
  4157d0:	mov    DWORD PTR [rsp],0x2
  4157d7:	lea    r9,[rsp+0x10]
  4157dc:	mov    r8d,0x1
  4157e2:	mov    esi,0x0
  4157e7:	mov    rdx,r15
  4157ea:	mov    rcx,r14
  4157ed:	call   42b2e0 <isspace@plt+0x279d0>
  4157f2:	test   eax,eax
  4157f4:	je     415827 <isspace@plt+0x11f17>
  4157f6:	mov    rdi,rbx
  4157f9:	call   410890 <isspace@plt+0xcf80>
  4157fe:	mov    DWORD PTR [rsp],0x0
  415805:	lea    r9,[rsp+0x10]
  41580a:	mov    r8d,0x1
  415810:	mov    rdi,rbx
  415813:	mov    esi,0x0
  415818:	mov    rdx,rax
  41581b:	mov    rcx,r14
  41581e:	call   42b2e0 <isspace@plt+0x279d0>
  415823:	test   eax,eax
  415825:	jne    41582c <isspace@plt+0x11f1c>
  415827:	mov    r15,QWORD PTR [rsp+0x10]
  41582c:	mov    rax,QWORD PTR fs:0x28
  415835:	cmp    rax,QWORD PTR [rsp+0x28]
  41583a:	jne    415849 <isspace@plt+0x11f39>
  41583c:	mov    rax,r15
  41583f:	add    rsp,0x30
  415843:	pop    rbx
  415844:	pop    r14
  415846:	pop    r15
  415848:	ret    
  415849:	call   403280 <__stack_chk_fail@plt>
  41584e:	xchg   ax,ax
  415850:	push   rax
  415851:	mov    rax,QWORD PTR fs:0x28
  41585a:	mov    QWORD PTR [rsp],rax
  41585e:	call   410890 <isspace@plt+0xcf80>
  415863:	xor    edi,edi
  415865:	mov    rsi,rax
  415868:	call   417250 <isspace@plt+0x13940>
  41586d:	mov    rcx,QWORD PTR fs:0x28
  415876:	cmp    rcx,QWORD PTR [rsp]
  41587a:	jne    41587e <isspace@plt+0x11f6e>
  41587c:	pop    rcx
  41587d:	ret    
  41587e:	call   403280 <__stack_chk_fail@plt>
  415883:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41588d:	nop    DWORD PTR [rax]
  415890:	push   r15
  415892:	push   r14
  415894:	push   r13
  415896:	push   r12
  415898:	push   rbx
  415899:	sub    rsp,0x40
  41589d:	mov    r13,rsi
  4158a0:	mov    r14,rdi
  4158a3:	mov    rax,QWORD PTR fs:0x28
  4158ac:	mov    QWORD PTR [rsp+0x38],rax
  4158b1:	mov    BYTE PTR [rsp+0x36],0x30
  4158b6:	mov    BYTE PTR [rsp+0x35],0x30
  4158bb:	lea    rbx,[rsp+0x8]
  4158c0:	mov    rdi,rbx
  4158c3:	mov    rsi,r14
  4158c6:	mov    rdx,r13
  4158c9:	call   410570 <isspace@plt+0xcc60>
  4158ce:	lea    rsi,[rsp+0x37]
  4158d3:	mov    rdi,rbx
  4158d6:	call   412400 <isspace@plt+0xeaf0>
  4158db:	test   al,al
  4158dd:	je     4159b5 <isspace@plt+0x120a5>
  4158e3:	test   r13,r13
  4158e6:	je     415907 <isspace@plt+0x11ff7>
  4158e8:	lea    rdi,[rsp+0x8]
  4158ed:	lea    rsi,[rsp+0x36]
  4158f2:	call   412540 <isspace@plt+0xec30>
  4158f7:	test   al,al
  4158f9:	je     415907 <isspace@plt+0x11ff7>
  4158fb:	lea    rdi,[rsp+0x8]
  415900:	xor    esi,esi
  415902:	call   412480 <isspace@plt+0xeb70>
  415907:	lea    rdi,[rsp+0x8]
  41590c:	lea    rsi,[rsp+0x35]
  415911:	call   412480 <isspace@plt+0xeb70>
  415916:	call   4038f0 <__ctype_b_loc@plt>
  41591b:	mov    r12,rax
  41591e:	mov    rax,QWORD PTR [rax]
  415921:	movzx  edi,BYTE PTR [rsp+0x37]
  415926:	test   BYTE PTR [rax+rdi*2+0x1],0x20
  41592b:	jne    4159bf <isspace@plt+0x120af>
  415931:	call   412cb0 <isspace@plt+0xf3a0>
  415936:	mov    ebx,eax
  415938:	movzx  edi,BYTE PTR [rsp+0x36]
  41593d:	call   412cb0 <isspace@plt+0xf3a0>
  415942:	mov    r15,r13
  415945:	test   ebx,ebx
  415947:	je     4159f2 <isspace@plt+0x120e2>
  41594d:	test   eax,eax
  41594f:	je     415979 <isspace@plt+0x12069>
  415951:	mov    rax,QWORD PTR [r12]
  415955:	movzx  ecx,BYTE PTR [rsp+0x36]
  41595a:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41595f:	mov    r15,r13
  415962:	jne    415979 <isspace@plt+0x12069>
  415964:	lea    rdx,[rip+0xffffffffffffd345]        # 412cb0 <isspace@plt+0xf3a0>
  41596b:	mov    rdi,r14
  41596e:	mov    rsi,r13
  415971:	call   413de0 <isspace@plt+0x104d0>
  415976:	mov    r15,rax
  415979:	movzx  edi,BYTE PTR [rsp+0x35]
  41597e:	call   412cb0 <isspace@plt+0xf3a0>
  415983:	test   eax,eax
  415985:	je     415a19 <isspace@plt+0x12109>
  41598b:	mov    rax,QWORD PTR [r12]
  41598f:	movzx  ecx,BYTE PTR [rsp+0x35]
  415994:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  415999:	jne    415a19 <isspace@plt+0x12109>
  41599b:	lea    rdx,[rip+0xffffffffffffd30e]        # 412cb0 <isspace@plt+0xf3a0>
  4159a2:	mov    rdi,r14
  4159a5:	mov    rsi,r13
  4159a8:	call   413ef0 <isspace@plt+0x105e0>
  4159ad:	mov    rdi,r14
  4159b0:	mov    rsi,rax
  4159b3:	jmp    415a1f <isspace@plt+0x1210f>
  4159b5:	call   417080 <isspace@plt+0x13770>
  4159ba:	mov    r15,rax
  4159bd:	jmp    415a27 <isspace@plt+0x12117>
  4159bf:	lea    rbx,[rip+0xffffffffffffd2ea]        # 412cb0 <isspace@plt+0xf3a0>
  4159c6:	mov    rdi,r14
  4159c9:	mov    rsi,r13
  4159cc:	mov    rdx,rbx
  4159cf:	call   414000 <isspace@plt+0x106f0>
  4159d4:	mov    rdi,r14
  4159d7:	mov    rsi,rax
  4159da:	call   412d10 <isspace@plt+0xf400>
  4159df:	mov    r15,rax
  4159e2:	mov    rdi,r14
  4159e5:	mov    rsi,r13
  4159e8:	mov    rdx,rbx
  4159eb:	call   413cd0 <isspace@plt+0x103c0>
  4159f0:	jmp    415a24 <isspace@plt+0x12114>
  4159f2:	test   eax,eax
  4159f4:	jne    415a0b <isspace@plt+0x120fb>
  4159f6:	lea    rdx,[rip+0xffffffffffffd2b3]        # 412cb0 <isspace@plt+0xf3a0>
  4159fd:	mov    rdi,r14
  415a00:	mov    rsi,r13
  415a03:	call   413de0 <isspace@plt+0x104d0>
  415a08:	mov    r15,rax
  415a0b:	movzx  edi,BYTE PTR [rsp+0x35]
  415a10:	call   412cb0 <isspace@plt+0xf3a0>
  415a15:	test   eax,eax
  415a17:	je     41599b <isspace@plt+0x1208b>
  415a19:	mov    rdi,r14
  415a1c:	mov    rsi,r13
  415a1f:	call   412d10 <isspace@plt+0xf400>
  415a24:	mov    rdx,rax
  415a27:	mov    rax,QWORD PTR fs:0x28
  415a30:	cmp    rax,QWORD PTR [rsp+0x38]
  415a35:	jne    415a48 <isspace@plt+0x12138>
  415a37:	mov    rax,r15
  415a3a:	add    rsp,0x40
  415a3e:	pop    rbx
  415a3f:	pop    r12
  415a41:	pop    r13
  415a43:	pop    r14
  415a45:	pop    r15
  415a47:	ret    
  415a48:	call   403280 <__stack_chk_fail@plt>
  415a4d:	nop    DWORD PTR [rax]
  415a50:	push   rbp
  415a51:	push   r15
  415a53:	push   r14
  415a55:	push   r13
  415a57:	push   r12
  415a59:	push   rbx
  415a5a:	sub    rsp,0x38
  415a5e:	mov    rbp,rsi
  415a61:	mov    r14,rdi
  415a64:	mov    rax,QWORD PTR fs:0x28
  415a6d:	mov    QWORD PTR [rsp+0x30],rax
  415a72:	mov    BYTE PTR [rsp+0x2e],0x30
  415a77:	mov    BYTE PTR [rsp+0x2d],0x30
  415a7c:	mov    rbx,rsp
  415a7f:	mov    rdi,rbx
  415a82:	mov    rsi,r14
  415a85:	mov    rdx,rbp
  415a88:	call   410570 <isspace@plt+0xcc60>
  415a8d:	lea    rsi,[rsp+0x2f]
  415a92:	mov    rdi,rbx
  415a95:	call   412400 <isspace@plt+0xeaf0>
  415a9a:	test   al,al
  415a9c:	je     415b70 <isspace@plt+0x12260>
  415aa2:	test   rbp,rbp
  415aa5:	je     415ac2 <isspace@plt+0x121b2>
  415aa7:	mov    rdi,rsp
  415aaa:	lea    rsi,[rsp+0x2e]
  415aaf:	call   412540 <isspace@plt+0xec30>
  415ab4:	test   al,al
  415ab6:	je     415ac2 <isspace@plt+0x121b2>
  415ab8:	mov    rdi,rsp
  415abb:	xor    esi,esi
  415abd:	call   412480 <isspace@plt+0xeb70>
  415ac2:	mov    rdi,rsp
  415ac5:	lea    rsi,[rsp+0x2d]
  415aca:	call   412480 <isspace@plt+0xeb70>
  415acf:	call   4038f0 <__ctype_b_loc@plt>
  415ad4:	mov    r12,QWORD PTR [rax]
  415ad7:	movzx  edi,BYTE PTR [rsp+0x2f]
  415adc:	test   BYTE PTR [r12+rdi*2+0x1],0x20
  415ae2:	jne    415b7a <isspace@plt+0x1226a>
  415ae8:	mov    rbx,rax
  415aeb:	call   403910 <isspace@plt>
  415af0:	mov    r15d,eax
  415af3:	movzx  r13d,BYTE PTR [rsp+0x2e]
  415af9:	mov    edi,r13d
  415afc:	call   403910 <isspace@plt>
  415b01:	test   r15d,r15d
  415b04:	je     415bad <isspace@plt+0x1229d>
  415b0a:	mov    r15,rbp
  415b0d:	test   eax,eax
  415b0f:	je     415b31 <isspace@plt+0x12221>
  415b11:	test   BYTE PTR [r12+r13*2+0x1],0x20
  415b17:	mov    r15,rbp
  415b1a:	jne    415b31 <isspace@plt+0x12221>
  415b1c:	mov    rdx,QWORD PTR [rip+0x2c495]        # 441fb8 <isspace@plt+0x3e6a8>
  415b23:	mov    rdi,r14
  415b26:	mov    rsi,rbp
  415b29:	call   413de0 <isspace@plt+0x104d0>
  415b2e:	mov    r15,rax
  415b31:	movzx  r13d,BYTE PTR [rsp+0x2d]
  415b37:	mov    edi,r13d
  415b3a:	call   403910 <isspace@plt>
  415b3f:	test   eax,eax
  415b41:	je     415bdb <isspace@plt+0x122cb>
  415b47:	mov    rax,QWORD PTR [rbx]
  415b4a:	test   BYTE PTR [rax+r13*2+0x1],0x20
  415b50:	jne    415bdb <isspace@plt+0x122cb>
  415b56:	mov    rdx,QWORD PTR [rip+0x2c45b]        # 441fb8 <isspace@plt+0x3e6a8>
  415b5d:	mov    rdi,r14
  415b60:	mov    rsi,rbp
  415b63:	call   413ef0 <isspace@plt+0x105e0>
  415b68:	mov    rdi,r14
  415b6b:	mov    rsi,rax
  415b6e:	jmp    415be1 <isspace@plt+0x122d1>
  415b70:	call   417080 <isspace@plt+0x13770>
  415b75:	mov    r15,rax
  415b78:	jmp    415be9 <isspace@plt+0x122d9>
  415b7a:	mov    rbx,QWORD PTR [rip+0x2c437]        # 441fb8 <isspace@plt+0x3e6a8>
  415b81:	mov    rdi,r14
  415b84:	mov    rsi,rbp
  415b87:	mov    rdx,rbx
  415b8a:	call   414000 <isspace@plt+0x106f0>
  415b8f:	mov    rdi,r14
  415b92:	mov    rsi,rax
  415b95:	call   412d10 <isspace@plt+0xf400>
  415b9a:	mov    r15,rax
  415b9d:	mov    rdi,r14
  415ba0:	mov    rsi,rbp
  415ba3:	mov    rdx,rbx
  415ba6:	call   413cd0 <isspace@plt+0x103c0>
  415bab:	jmp    415be6 <isspace@plt+0x122d6>
  415bad:	mov    r15,rbp
  415bb0:	test   eax,eax
  415bb2:	jne    415bc9 <isspace@plt+0x122b9>
  415bb4:	mov    rdx,QWORD PTR [rip+0x2c3fd]        # 441fb8 <isspace@plt+0x3e6a8>
  415bbb:	mov    rdi,r14
  415bbe:	mov    rsi,rbp
  415bc1:	call   413de0 <isspace@plt+0x104d0>
  415bc6:	mov    r15,rax
  415bc9:	movzx  edi,BYTE PTR [rsp+0x2d]
  415bce:	call   403910 <isspace@plt>
  415bd3:	test   eax,eax
  415bd5:	je     415b56 <isspace@plt+0x12246>
  415bdb:	mov    rdi,r14
  415bde:	mov    rsi,rbp
  415be1:	call   412d10 <isspace@plt+0xf400>
  415be6:	mov    rdx,rax
  415be9:	mov    rax,QWORD PTR fs:0x28
  415bf2:	cmp    rax,QWORD PTR [rsp+0x30]
  415bf7:	jne    415c0b <isspace@plt+0x122fb>
  415bf9:	mov    rax,r15
  415bfc:	add    rsp,0x38
  415c00:	pop    rbx
  415c01:	pop    r12
  415c03:	pop    r13
  415c05:	pop    r14
  415c07:	pop    r15
  415c09:	pop    rbp
  415c0a:	ret    
  415c0b:	call   403280 <__stack_chk_fail@plt>
  415c10:	push   rbp
  415c11:	push   r15
  415c13:	push   r14
  415c15:	push   r12
  415c17:	push   rbx
  415c18:	sub    rsp,0x40
  415c1c:	mov    rbx,rsi
  415c1f:	mov    r14,rdi
  415c22:	mov    rax,QWORD PTR fs:0x28
  415c2b:	mov    QWORD PTR [rsp+0x38],rax
  415c30:	mov    BYTE PTR [rsp+0x36],0x30
  415c35:	mov    BYTE PTR [rsp+0x35],0x30
  415c3a:	lea    rbp,[rsp+0x8]
  415c3f:	mov    rdi,rbp
  415c42:	mov    rsi,r14
  415c45:	mov    rdx,rbx
  415c48:	call   410570 <isspace@plt+0xcc60>
  415c4d:	lea    rsi,[rsp+0x37]
  415c52:	mov    rdi,rbp
  415c55:	call   412400 <isspace@plt+0xeaf0>
  415c5a:	test   al,al
  415c5c:	je     415d27 <isspace@plt+0x12417>
  415c62:	test   rbx,rbx
  415c65:	je     415c86 <isspace@plt+0x12376>
  415c67:	lea    rdi,[rsp+0x8]
  415c6c:	lea    rsi,[rsp+0x36]
  415c71:	call   412540 <isspace@plt+0xec30>
  415c76:	test   al,al
  415c78:	je     415c86 <isspace@plt+0x12376>
  415c7a:	lea    rdi,[rsp+0x8]
  415c7f:	xor    esi,esi
  415c81:	call   412480 <isspace@plt+0xeb70>
  415c86:	lea    rdi,[rsp+0x8]
  415c8b:	lea    rsi,[rsp+0x35]
  415c90:	call   412480 <isspace@plt+0xeb70>
  415c95:	call   4038f0 <__ctype_b_loc@plt>
  415c9a:	mov    rax,QWORD PTR [rax]
  415c9d:	movzx  r15d,BYTE PTR [rsp+0x37]
  415ca3:	test   BYTE PTR [rax+r15*2+0x1],0x20
  415ca9:	jne    415d34 <isspace@plt+0x12424>
  415caf:	movzx  edi,BYTE PTR [rsp+0x36]
  415cb4:	call   403910 <isspace@plt>
  415cb9:	mov    ebp,eax
  415cbb:	movzx  edi,BYTE PTR [rsp+0x35]
  415cc0:	call   403910 <isspace@plt>
  415cc5:	mov    r12d,eax
  415cc8:	test   ebp,ebp
  415cca:	je     415d7b <isspace@plt+0x1246b>
  415cd0:	test   r12d,r12d
  415cd3:	je     415da4 <isspace@plt+0x12494>
  415cd9:	mov    edi,r15d
  415cdc:	call   403910 <isspace@plt>
  415ce1:	test   eax,eax
  415ce3:	je     415dc4 <isspace@plt+0x124b4>
  415ce9:	mov    r15,QWORD PTR [rip+0x2c2c8]        # 441fb8 <isspace@plt+0x3e6a8>
  415cf0:	mov    rdi,r14
  415cf3:	mov    rsi,rbx
  415cf6:	mov    rdx,r15
  415cf9:	call   414000 <isspace@plt+0x106f0>
  415cfe:	mov    rdi,r14
  415d01:	mov    rsi,rax
  415d04:	call   412d10 <isspace@plt+0xf400>
  415d09:	mov    rbp,rax
  415d0c:	mov    rdi,r14
  415d0f:	mov    rsi,rbx
  415d12:	mov    rdx,r15
  415d15:	call   413ef0 <isspace@plt+0x105e0>
  415d1a:	mov    rdi,r14
  415d1d:	mov    rsi,rax
  415d20:	call   414880 <isspace@plt+0x10f70>
  415d25:	jmp    415d70 <isspace@plt+0x12460>
  415d27:	call   417080 <isspace@plt+0x13770>
  415d2c:	mov    rbx,rax
  415d2f:	jmp    415e04 <isspace@plt+0x124f4>
  415d34:	mov    r15,QWORD PTR [rip+0x2c27d]        # 441fb8 <isspace@plt+0x3e6a8>
  415d3b:	mov    rdi,r14
  415d3e:	mov    rsi,rbx
  415d41:	mov    rdx,r15
  415d44:	call   414000 <isspace@plt+0x106f0>
  415d49:	mov    rdi,r14
  415d4c:	mov    rsi,rax
  415d4f:	call   412d10 <isspace@plt+0xf400>
  415d54:	mov    rbp,rax
  415d57:	mov    rdi,r14
  415d5a:	mov    rsi,rbx
  415d5d:	mov    rdx,r15
  415d60:	call   413ef0 <isspace@plt+0x105e0>
  415d65:	mov    rdi,r14
  415d68:	mov    rsi,rax
  415d6b:	call   412d10 <isspace@plt+0xf400>
  415d70:	mov    rdx,rax
  415d73:	mov    rbx,rbp
  415d76:	jmp    415e04 <isspace@plt+0x124f4>
  415d7b:	mov    rdx,QWORD PTR [rip+0x2c236]        # 441fb8 <isspace@plt+0x3e6a8>
  415d82:	mov    rdi,r14
  415d85:	mov    rsi,rbx
  415d88:	call   413de0 <isspace@plt+0x104d0>
  415d8d:	mov    r15,rax
  415d90:	test   r12d,r12d
  415d93:	je     415ddb <isspace@plt+0x124cb>
  415d95:	mov    rdx,QWORD PTR [rip+0x2c21c]        # 441fb8 <isspace@plt+0x3e6a8>
  415d9c:	mov    rdi,r14
  415d9f:	mov    rsi,rbx
  415da2:	jmp    415df9 <isspace@plt+0x124e9>
  415da4:	mov    rbp,QWORD PTR [rip+0x2c20d]        # 441fb8 <isspace@plt+0x3e6a8>
  415dab:	mov    rdi,r14
  415dae:	mov    rsi,rbx
  415db1:	mov    rdx,rbp
  415db4:	call   413ef0 <isspace@plt+0x105e0>
  415db9:	mov    rdi,r14
  415dbc:	mov    rsi,rax
  415dbf:	mov    rdx,rbp
  415dc2:	jmp    415dd1 <isspace@plt+0x124c1>
  415dc4:	mov    rdx,QWORD PTR [rip+0x2c1ed]        # 441fb8 <isspace@plt+0x3e6a8>
  415dcb:	mov    rdi,r14
  415dce:	mov    rsi,rbx
  415dd1:	call   413cd0 <isspace@plt+0x103c0>
  415dd6:	mov    rdx,rax
  415dd9:	jmp    415e04 <isspace@plt+0x124f4>
  415ddb:	mov    rbp,QWORD PTR [rip+0x2c1d6]        # 441fb8 <isspace@plt+0x3e6a8>
  415de2:	mov    rdi,r14
  415de5:	mov    rsi,rbx
  415de8:	mov    rdx,rbp
  415deb:	call   413ef0 <isspace@plt+0x105e0>
  415df0:	mov    rdi,r14
  415df3:	mov    rsi,rax
  415df6:	mov    rdx,rbp
  415df9:	call   413cd0 <isspace@plt+0x103c0>
  415dfe:	mov    rdx,rax
  415e01:	mov    rbx,r15
  415e04:	mov    rax,QWORD PTR fs:0x28
  415e0d:	cmp    rax,QWORD PTR [rsp+0x38]
  415e12:	jne    415e24 <isspace@plt+0x12514>
  415e14:	mov    rax,rbx
  415e17:	add    rsp,0x40
  415e1b:	pop    rbx
  415e1c:	pop    r12
  415e1e:	pop    r14
  415e20:	pop    r15
  415e22:	pop    rbp
  415e23:	ret    
  415e24:	call   403280 <__stack_chk_fail@plt>
  415e29:	nop    DWORD PTR [rax+0x0]
  415e30:	push   r15
  415e32:	push   r14
  415e34:	push   r12
  415e36:	push   rbx
  415e37:	sub    rsp,0x38
  415e3b:	mov    r12,rsi
  415e3e:	mov    r14,rdi
  415e41:	mov    rax,QWORD PTR fs:0x28
  415e4a:	mov    QWORD PTR [rsp+0x30],rax
  415e4f:	mov    BYTE PTR [rsp+0x2e],0x30
  415e54:	mov    BYTE PTR [rsp+0x2d],0x30
  415e59:	mov    rbx,rsp
  415e5c:	mov    rdi,rbx
  415e5f:	mov    rsi,r14
  415e62:	mov    rdx,r12
  415e65:	call   410570 <isspace@plt+0xcc60>
  415e6a:	lea    rsi,[rsp+0x2f]
  415e6f:	mov    rdi,rbx
  415e72:	call   412400 <isspace@plt+0xeaf0>
  415e77:	test   al,al
  415e79:	je     415f38 <isspace@plt+0x12628>
  415e7f:	test   r12,r12
  415e82:	je     415e9f <isspace@plt+0x1258f>
  415e84:	mov    rdi,rsp
  415e87:	lea    rsi,[rsp+0x2e]
  415e8c:	call   412540 <isspace@plt+0xec30>
  415e91:	test   al,al
  415e93:	je     415e9f <isspace@plt+0x1258f>
  415e95:	mov    rdi,rsp
  415e98:	xor    esi,esi
  415e9a:	call   412480 <isspace@plt+0xeb70>
  415e9f:	mov    rdi,rsp
  415ea2:	lea    rsi,[rsp+0x2d]
  415ea7:	call   412480 <isspace@plt+0xeb70>
  415eac:	call   4038f0 <__ctype_b_loc@plt>
  415eb1:	mov    rax,QWORD PTR [rax]
  415eb4:	movzx  ecx,BYTE PTR [rsp+0x2f]
  415eb9:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  415ebe:	jne    415f45 <isspace@plt+0x12635>
  415ec4:	movzx  edi,BYTE PTR [rsp+0x2e]
  415ec9:	call   412cb0 <isspace@plt+0xf3a0>
  415ece:	test   eax,eax
  415ed0:	je     415f8c <isspace@plt+0x1267c>
  415ed6:	movzx  edi,BYTE PTR [rsp+0x2d]
  415edb:	call   412cb0 <isspace@plt+0xf3a0>
  415ee0:	test   eax,eax
  415ee2:	je     415f8c <isspace@plt+0x1267c>
  415ee8:	movzx  edi,BYTE PTR [rsp+0x2f]
  415eed:	call   412cb0 <isspace@plt+0xf3a0>
  415ef2:	test   eax,eax
  415ef4:	je     415fee <isspace@plt+0x126de>
  415efa:	lea    r15,[rip+0xffffffffffffcdaf]        # 412cb0 <isspace@plt+0xf3a0>
  415f01:	mov    rdi,r14
  415f04:	mov    rsi,r12
  415f07:	mov    rdx,r15
  415f0a:	call   414000 <isspace@plt+0x106f0>
  415f0f:	mov    rdi,r14
  415f12:	mov    rsi,rax
  415f15:	call   412d10 <isspace@plt+0xf400>
  415f1a:	mov    rbx,rax
  415f1d:	mov    rdi,r14
  415f20:	mov    rsi,r12
  415f23:	mov    rdx,r15
  415f26:	call   413ef0 <isspace@plt+0x105e0>
  415f2b:	mov    rdi,r14
  415f2e:	mov    rsi,rax
  415f31:	call   414880 <isspace@plt+0x10f70>
  415f36:	jmp    415f81 <isspace@plt+0x12671>
  415f38:	call   417080 <isspace@plt+0x13770>
  415f3d:	mov    r12,rax
  415f40:	jmp    41602e <isspace@plt+0x1271e>
  415f45:	lea    r15,[rip+0xffffffffffffcd64]        # 412cb0 <isspace@plt+0xf3a0>
  415f4c:	mov    rdi,r14
  415f4f:	mov    rsi,r12
  415f52:	mov    rdx,r15
  415f55:	call   414000 <isspace@plt+0x106f0>
  415f5a:	mov    rdi,r14
  415f5d:	mov    rsi,rax
  415f60:	call   412d10 <isspace@plt+0xf400>
  415f65:	mov    rbx,rax
  415f68:	mov    rdi,r14
  415f6b:	mov    rsi,r12
  415f6e:	mov    rdx,r15
  415f71:	call   413ef0 <isspace@plt+0x105e0>
  415f76:	mov    rdi,r14
  415f79:	mov    rsi,rax
  415f7c:	call   412d10 <isspace@plt+0xf400>
  415f81:	mov    rdx,rax
  415f84:	mov    r12,rbx
  415f87:	jmp    41602e <isspace@plt+0x1271e>
  415f8c:	movzx  edi,BYTE PTR [rsp+0x2e]
  415f91:	call   412cb0 <isspace@plt+0xf3a0>
  415f96:	test   eax,eax
  415f98:	je     415fba <isspace@plt+0x126aa>
  415f9a:	lea    rbx,[rip+0xffffffffffffcd0f]        # 412cb0 <isspace@plt+0xf3a0>
  415fa1:	mov    rdi,r14
  415fa4:	mov    rsi,r12
  415fa7:	mov    rdx,rbx
  415faa:	call   413ef0 <isspace@plt+0x105e0>
  415faf:	mov    rdi,r14
  415fb2:	mov    rsi,rax
  415fb5:	mov    rdx,rbx
  415fb8:	jmp    415ffb <isspace@plt+0x126eb>
  415fba:	movzx  edi,BYTE PTR [rsp+0x2d]
  415fbf:	call   412cb0 <isspace@plt+0xf3a0>
  415fc4:	mov    ebx,eax
  415fc6:	lea    rdx,[rip+0xffffffffffffcce3]        # 412cb0 <isspace@plt+0xf3a0>
  415fcd:	mov    rdi,r14
  415fd0:	mov    rsi,r12
  415fd3:	call   413de0 <isspace@plt+0x104d0>
  415fd8:	mov    r15,rax
  415fdb:	test   ebx,ebx
  415fdd:	je     416005 <isspace@plt+0x126f5>
  415fdf:	lea    rdx,[rip+0xffffffffffffccca]        # 412cb0 <isspace@plt+0xf3a0>
  415fe6:	mov    rdi,r14
  415fe9:	mov    rsi,r12
  415fec:	jmp    416023 <isspace@plt+0x12713>
  415fee:	lea    rdx,[rip+0xffffffffffffccbb]        # 412cb0 <isspace@plt+0xf3a0>
  415ff5:	mov    rdi,r14
  415ff8:	mov    rsi,r12
  415ffb:	call   413cd0 <isspace@plt+0x103c0>
  416000:	mov    rdx,rax
  416003:	jmp    41602e <isspace@plt+0x1271e>
  416005:	lea    rbx,[rip+0xffffffffffffcca4]        # 412cb0 <isspace@plt+0xf3a0>
  41600c:	mov    rdi,r14
  41600f:	mov    rsi,r12
  416012:	mov    rdx,rbx
  416015:	call   413ef0 <isspace@plt+0x105e0>
  41601a:	mov    rdi,r14
  41601d:	mov    rsi,rax
  416020:	mov    rdx,rbx
  416023:	call   413cd0 <isspace@plt+0x103c0>
  416028:	mov    rdx,rax
  41602b:	mov    r12,r15
  41602e:	mov    rax,QWORD PTR fs:0x28
  416037:	cmp    rax,QWORD PTR [rsp+0x30]
  41603c:	jne    41604d <isspace@plt+0x1273d>
  41603e:	mov    rax,r12
  416041:	add    rsp,0x38
  416045:	pop    rbx
  416046:	pop    r12
  416048:	pop    r14
  41604a:	pop    r15
  41604c:	ret    
  41604d:	call   403280 <__stack_chk_fail@plt>
  416052:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41605c:	nop    DWORD PTR [rax+0x0]
  416060:	push   r15
  416062:	push   r14
  416064:	push   r13
  416066:	push   r12
  416068:	push   rbx
  416069:	sub    rsp,0x20
  41606d:	mov    r14,rdx
  416070:	mov    r12,rsi
  416073:	mov    r13,rdi
  416076:	mov    rax,QWORD PTR fs:0x28
  41607f:	mov    QWORD PTR [rsp+0x18],rax
  416084:	mov    rdi,rdx
  416087:	call   403250 <strlen@plt>
  41608c:	mov    r15,rax
  41608f:	mov    rdi,r13
  416092:	mov    rsi,r12
  416095:	mov    rdx,r14
  416098:	call   412e50 <isspace@plt+0xf540>
  41609d:	cmp    rax,r12
  4160a0:	je     4160ea <isspace@plt+0x127da>
  4160a2:	lea    r12,[rsp+0x8]
  4160a7:	nop    WORD PTR [rax+rax*1+0x0]
  4160b0:	mov    rdi,r13
  4160b3:	mov    rsi,rax
  4160b6:	call   415890 <isspace@plt+0x11f80>
  4160bb:	mov    QWORD PTR [rsp+0x8],rax
  4160c0:	mov    QWORD PTR [rsp+0x10],rdx
  4160c5:	mov    rdi,r12
  4160c8:	call   417020 <isspace@plt+0x13710>
  4160cd:	cmp    rax,r15
  4160d0:	je     4160fb <isspace@plt+0x127eb>
  4160d2:	mov    rbx,QWORD PTR [rsp+0x10]
  4160d7:	mov    rdi,r13
  4160da:	mov    rsi,rbx
  4160dd:	mov    rdx,r14
  4160e0:	call   412e50 <isspace@plt+0xf540>
  4160e5:	cmp    rax,rbx
  4160e8:	jne    4160b0 <isspace@plt+0x127a0>
  4160ea:	call   417080 <isspace@plt+0x13770>
  4160ef:	mov    QWORD PTR [rsp+0x8],rax
  4160f4:	mov    QWORD PTR [rsp+0x10],rdx
  4160f9:	jmp    416105 <isspace@plt+0x127f5>
  4160fb:	mov    rax,QWORD PTR [rsp+0x8]
  416100:	mov    rdx,QWORD PTR [rsp+0x10]
  416105:	mov    rcx,QWORD PTR fs:0x28
  41610e:	cmp    rcx,QWORD PTR [rsp+0x18]
  416113:	jne    416123 <isspace@plt+0x12813>
  416115:	add    rsp,0x20
  416119:	pop    rbx
  41611a:	pop    r12
  41611c:	pop    r13
  41611e:	pop    r14
  416120:	pop    r15
  416122:	ret    
  416123:	call   403280 <__stack_chk_fail@plt>
  416128:	nop    DWORD PTR [rax+rax*1+0x0]
  416130:	push   rbp
  416131:	push   r15
  416133:	push   r14
  416135:	push   r13
  416137:	push   r12
  416139:	push   rbx
  41613a:	sub    rsp,0x18
  41613e:	mov    r14,rdx
  416141:	mov    rbx,rsi
  416144:	mov    r13,rdi
  416147:	mov    rax,QWORD PTR fs:0x28
  416150:	mov    QWORD PTR [rsp+0x10],rax
  416155:	mov    rdi,rdx
  416158:	call   403250 <strlen@plt>
  41615d:	mov    r15,rax
  416160:	mov    r12,rsp
  416163:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41616d:	nop    DWORD PTR [rax]
  416170:	mov    rdi,r13
  416173:	mov    rsi,rbx
  416176:	mov    rdx,r14
  416179:	call   412fe0 <isspace@plt+0xf6d0>
  41617e:	cmp    rax,rbx
  416181:	je     4161b5 <isspace@plt+0x128a5>
  416183:	mov    rbp,rax
  416186:	mov    rdi,r13
  416189:	mov    rsi,rax
  41618c:	call   415890 <isspace@plt+0x11f80>
  416191:	mov    QWORD PTR [rsp],rax
  416195:	mov    QWORD PTR [rsp+0x8],rdx
  41619a:	mov    rdi,r12
  41619d:	call   417020 <isspace@plt+0x13710>
  4161a2:	mov    rbx,rbp
  4161a5:	cmp    rax,r15
  4161a8:	jne    416170 <isspace@plt+0x12860>
  4161aa:	mov    rax,QWORD PTR [rsp]
  4161ae:	mov    rdx,QWORD PTR [rsp+0x8]
  4161b3:	jmp    4161c3 <isspace@plt+0x128b3>
  4161b5:	call   417080 <isspace@plt+0x13770>
  4161ba:	mov    QWORD PTR [rsp],rax
  4161be:	mov    QWORD PTR [rsp+0x8],rdx
  4161c3:	mov    rcx,QWORD PTR fs:0x28
  4161cc:	cmp    rcx,QWORD PTR [rsp+0x10]
  4161d1:	jne    4161e2 <isspace@plt+0x128d2>
  4161d3:	add    rsp,0x18
  4161d7:	pop    rbx
  4161d8:	pop    r12
  4161da:	pop    r13
  4161dc:	pop    r14
  4161de:	pop    r15
  4161e0:	pop    rbp
  4161e1:	ret    
  4161e2:	call   403280 <__stack_chk_fail@plt>
  4161e7:	nop    WORD PTR [rax+rax*1+0x0]
  4161f0:	push   r15
  4161f2:	push   r14
  4161f4:	push   rbx
  4161f5:	sub    rsp,0x10
  4161f9:	mov    r14,rdx
  4161fc:	mov    rbx,rsi
  4161ff:	mov    rax,QWORD PTR fs:0x28
  416208:	mov    QWORD PTR [rsp+0x8],rax
  41620d:	call   412e50 <isspace@plt+0xf540>
  416212:	cmp    rax,rbx
  416215:	jne    41621e <isspace@plt+0x1290e>
  416217:	call   417080 <isspace@plt+0x13770>
  41621c:	jmp    416237 <isspace@plt+0x12927>
  41621e:	mov    r15,rax
  416221:	mov    rdi,r14
  416224:	call   403250 <strlen@plt>
  416229:	mov    rsi,r15
  41622c:	add    rsi,rax
  41622f:	mov    rdi,r15
  416232:	call   417250 <isspace@plt+0x13940>
  416237:	mov    rcx,QWORD PTR fs:0x28
  416240:	cmp    rcx,QWORD PTR [rsp+0x8]
  416245:	jne    416251 <isspace@plt+0x12941>
  416247:	add    rsp,0x10
  41624b:	pop    rbx
  41624c:	pop    r14
  41624e:	pop    r15
  416250:	ret    
  416251:	call   403280 <__stack_chk_fail@plt>
  416256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416260:	push   r15
  416262:	push   r14
  416264:	push   rbx
  416265:	sub    rsp,0x10
  416269:	mov    r14,rdx
  41626c:	mov    rbx,rsi
  41626f:	mov    rax,QWORD PTR fs:0x28
  416278:	mov    QWORD PTR [rsp+0x8],rax
  41627d:	call   412fe0 <isspace@plt+0xf6d0>
  416282:	cmp    rax,rbx
  416285:	jne    41628e <isspace@plt+0x1297e>
  416287:	call   417080 <isspace@plt+0x13770>
  41628c:	jmp    4162a7 <isspace@plt+0x12997>
  41628e:	mov    r15,rax
  416291:	mov    rdi,r14
  416294:	call   403250 <strlen@plt>
  416299:	mov    rsi,r15
  41629c:	add    rsi,rax
  41629f:	mov    rdi,r15
  4162a2:	call   417250 <isspace@plt+0x13940>
  4162a7:	mov    rcx,QWORD PTR fs:0x28
  4162b0:	cmp    rcx,QWORD PTR [rsp+0x8]
  4162b5:	jne    4162c1 <isspace@plt+0x129b1>
  4162b7:	add    rsp,0x10
  4162bb:	pop    rbx
  4162bc:	pop    r14
  4162be:	pop    r15
  4162c0:	ret    
  4162c1:	call   403280 <__stack_chk_fail@plt>
  4162c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4162d0:	push   r15
  4162d2:	push   r14
  4162d4:	push   rbx
  4162d5:	sub    rsp,0x10
  4162d9:	mov    r15,rsi
  4162dc:	mov    rbx,rdi
  4162df:	mov    rax,QWORD PTR fs:0x28
  4162e8:	mov    QWORD PTR [rsp+0x8],rax
  4162ed:	call   413280 <isspace@plt+0xf970>
  4162f2:	mov    r14,rax
  4162f5:	mov    rdi,rbx
  4162f8:	mov    rsi,r15
  4162fb:	call   4134d0 <isspace@plt+0xfbc0>
  416300:	mov    rdx,rax
  416303:	mov    rax,QWORD PTR fs:0x28
  41630c:	cmp    rax,QWORD PTR [rsp+0x8]
  416311:	jne    416320 <isspace@plt+0x12a10>
  416313:	mov    rax,r14
  416316:	add    rsp,0x10
  41631a:	pop    rbx
  41631b:	pop    r14
  41631d:	pop    r15
  41631f:	ret    
  416320:	call   403280 <__stack_chk_fail@plt>
  416325:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41632f:	nop
  416330:	push   r15
  416332:	push   r14
  416334:	push   rbx
  416335:	sub    rsp,0x20
  416339:	mov    r14,rsi
  41633c:	mov    rbx,rdi
  41633f:	mov    rax,QWORD PTR fs:0x28
  416348:	mov    QWORD PTR [rsp+0x18],rax
  41634d:	call   413280 <isspace@plt+0xf970>
  416352:	mov    r15,rax
  416355:	mov    rdi,rbx
  416358:	mov    rsi,r14
  41635b:	call   4134d0 <isspace@plt+0xfbc0>
  416360:	mov    QWORD PTR [rsp+0x8],r15
  416365:	mov    QWORD PTR [rsp+0x10],rax
  41636a:	lea    rsi,[rsp+0x8]
  41636f:	mov    rdi,rbx
  416372:	call   4163a0 <isspace@plt+0x12a90>
  416377:	mov    rcx,QWORD PTR fs:0x28
  416380:	cmp    rcx,QWORD PTR [rsp+0x18]
  416385:	jne    416391 <isspace@plt+0x12a81>
  416387:	add    rsp,0x20
  41638b:	pop    rbx
  41638c:	pop    r14
  41638e:	pop    r15
  416390:	ret    
  416391:	call   403280 <__stack_chk_fail@plt>
  416396:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4163a0:	push   r15
  4163a2:	push   r14
  4163a4:	push   r13
  4163a6:	push   r12
  4163a8:	push   rbx
  4163a9:	sub    rsp,0x70
  4163ad:	mov    r12,rsi
  4163b0:	mov    r14,rdi
  4163b3:	mov    rax,QWORD PTR fs:0x28
  4163bc:	mov    QWORD PTR [rsp+0x68],rax
  4163c1:	mov    rdx,QWORD PTR [rsi]
  4163c4:	lea    rbx,[rsp+0x30]
  4163c9:	mov    rdi,rbx
  4163cc:	mov    rsi,r14
  4163cf:	call   410570 <isspace@plt+0xcc60>
  4163d4:	lea    rsi,[rsp+0x67]
  4163d9:	mov    rdi,rbx
  4163dc:	call   412400 <isspace@plt+0xeaf0>
  4163e1:	test   al,al
  4163e3:	je     416428 <isspace@plt+0x12b18>
  4163e5:	call   4038f0 <__ctype_b_loc@plt>
  4163ea:	mov    r15,rax
  4163ed:	lea    rbx,[rsp+0x30]
  4163f2:	lea    r13,[rsp+0x67]
  4163f7:	nop    WORD PTR [rax+rax*1+0x0]
  416400:	mov    rax,QWORD PTR [r15]
  416403:	movzx  ecx,BYTE PTR [rsp+0x67]
  416408:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  41640d:	je     416428 <isspace@plt+0x12b18>
  41640f:	mov    rdi,rbx
  416412:	xor    esi,esi
  416414:	call   412480 <isspace@plt+0xeb70>
  416419:	mov    rdi,rbx
  41641c:	mov    rsi,r13
  41641f:	call   412400 <isspace@plt+0xeaf0>
  416424:	test   al,al
  416426:	jne    416400 <isspace@plt+0x12af0>
  416428:	mov    r15,QWORD PTR [rsp+0x50]
  41642d:	mov    rdx,QWORD PTR [r12+0x8]
  416432:	lea    rdi,[rsp+0x8]
  416437:	mov    rsi,r14
  41643a:	call   410570 <isspace@plt+0xcc60>
  41643f:	mov    rax,QWORD PTR [rsp+0x28]
  416444:	mov    QWORD PTR [rsp+0x50],rax
  416449:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  41644f:	vmovups YMMWORD PTR [rsp+0x30],ymm0
  416455:	lea    r14,[rsp+0x30]
  41645a:	lea    r12,[rsp+0x67]
  41645f:	nop
  416460:	mov    rbx,QWORD PTR [rsp+0x50]
  416465:	mov    rdi,r14
  416468:	mov    rsi,r12
  41646b:	vzeroupper 
  41646e:	call   412540 <isspace@plt+0xec30>
  416473:	test   al,al
  416475:	je     41648b <isspace@plt+0x12b7b>
  416477:	call   4038f0 <__ctype_b_loc@plt>
  41647c:	mov    rax,QWORD PTR [rax]
  41647f:	movzx  ecx,BYTE PTR [rsp+0x67]
  416484:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  416489:	jne    416460 <isspace@plt+0x12b50>
  41648b:	mov    rax,QWORD PTR fs:0x28
  416494:	cmp    rax,QWORD PTR [rsp+0x68]
  416499:	jne    4164af <isspace@plt+0x12b9f>
  41649b:	mov    rax,r15
  41649e:	mov    rdx,rbx
  4164a1:	add    rsp,0x70
  4164a5:	pop    rbx
  4164a6:	pop    r12
  4164a8:	pop    r13
  4164aa:	pop    r14
  4164ac:	pop    r15
  4164ae:	ret    
  4164af:	call   403280 <__stack_chk_fail@plt>
  4164b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4164be:	xchg   ax,ax
  4164c0:	push   r15
  4164c2:	push   r14
  4164c4:	push   rbx
  4164c5:	sub    rsp,0x10
  4164c9:	mov    r15,rsi
  4164cc:	mov    rbx,rdi
  4164cf:	mov    rax,QWORD PTR fs:0x28
  4164d8:	mov    QWORD PTR [rsp+0x8],rax
  4164dd:	call   414d20 <isspace@plt+0x11410>
  4164e2:	mov    r14,rax
  4164e5:	mov    rdi,rbx
  4164e8:	mov    rsi,r15
  4164eb:	call   414b70 <isspace@plt+0x11260>
  4164f0:	mov    rdx,rax
  4164f3:	mov    rax,QWORD PTR fs:0x28
  4164fc:	cmp    rax,QWORD PTR [rsp+0x8]
  416501:	jne    416510 <isspace@plt+0x12c00>
  416503:	mov    rax,r14
  416506:	add    rsp,0x10
  41650a:	pop    rbx
  41650b:	pop    r14
  41650d:	pop    r15
  41650f:	ret    
  416510:	call   403280 <__stack_chk_fail@plt>
  416515:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41651f:	nop
  416520:	push   r15
  416522:	push   r14
  416524:	push   r13
  416526:	push   r12
  416528:	push   rbx
  416529:	sub    rsp,0x60
  41652d:	mov    r14,rsi
  416530:	mov    r12,rdi
  416533:	mov    rax,QWORD PTR fs:0x28
  41653c:	mov    QWORD PTR [rsp+0x58],rax
  416541:	call   413280 <isspace@plt+0xf970>
  416546:	lea    rbx,[rsp+0x30]
  41654b:	mov    rdi,rbx
  41654e:	mov    rsi,r12
  416551:	mov    rdx,rax
  416554:	call   410570 <isspace@plt+0xcc60>
  416559:	mov    rsi,rsp
  41655c:	mov    rdi,rbx
  41655f:	call   412400 <isspace@plt+0xeaf0>
  416564:	test   al,al
  416566:	je     4165ba <isspace@plt+0x12caa>
  416568:	mov    al,BYTE PTR [rsp]
  41656b:	cmp    al,0xa
  41656d:	je     4165ba <isspace@plt+0x12caa>
  41656f:	lea    r13,[rsp+0x30]
  416574:	mov    r15,rsp
  416577:	nop    WORD PTR [rax+rax*1+0x0]
  416580:	mov    ebx,eax
  416582:	cmp    al,0x20
  416584:	je     41658b <isspace@plt+0x12c7b>
  416586:	cmp    bl,0x9
  416589:	jne    4165ac <isspace@plt+0x12c9c>
  41658b:	mov    rdi,r13
  41658e:	xor    esi,esi
  416590:	call   4128a0 <isspace@plt+0xef90>
  416595:	mov    rdi,r13
  416598:	mov    rsi,r15
  41659b:	call   412400 <isspace@plt+0xeaf0>
  4165a0:	test   al,al
  4165a2:	je     4165ac <isspace@plt+0x12c9c>
  4165a4:	movzx  eax,BYTE PTR [rsp]
  4165a8:	cmp    al,0xa
  4165aa:	jne    416580 <isspace@plt+0x12c70>
  4165ac:	cmp    bl,0x20
  4165af:	je     4165ba <isspace@plt+0x12caa>
  4165b1:	cmp    bl,0x9
  4165b4:	jne    4166f4 <isspace@plt+0x12de4>
  4165ba:	lea    rdi,[rsp+0x30]
  4165bf:	mov    rsi,r12
  4165c2:	mov    rdx,r14
  4165c5:	call   410570 <isspace@plt+0xcc60>
  4165ca:	mov    rax,QWORD PTR [rsp+0x50]
  4165cf:	mov    QWORD PTR [rsp+0x20],rax
  4165d4:	vmovups ymm0,YMMWORD PTR [rsp+0x30]
  4165da:	vmovups YMMWORD PTR [rsp],ymm0
  4165df:	mov    rdi,rsp
  4165e2:	lea    rsi,[rsp+0x2f]
  4165e7:	vzeroupper 
  4165ea:	call   412400 <isspace@plt+0xeaf0>
  4165ef:	mov    cl,BYTE PTR [rsp+0x2f]
  4165f3:	movabs r13,0x100000600
  4165fd:	test   al,al
  4165ff:	je     41663c <isspace@plt+0x12d2c>
  416601:	mov    rbx,rsp
  416604:	lea    r14,[rsp+0x2f]
  416609:	nop    DWORD PTR [rax+0x0]
  416610:	cmp    cl,0x20
  416613:	ja     416651 <isspace@plt+0x12d41>
  416615:	movzx  eax,cl
  416618:	bt     r13,rax
  41661c:	jae    416651 <isspace@plt+0x12d41>
  41661e:	mov    rdi,rbx
  416621:	xor    esi,esi
  416623:	call   412540 <isspace@plt+0xec30>
  416628:	mov    rdi,rbx
  41662b:	mov    rsi,r14
  41662e:	call   412400 <isspace@plt+0xeaf0>
  416633:	movzx  ecx,BYTE PTR [rsp+0x2f]
  416638:	test   al,al
  41663a:	jne    416610 <isspace@plt+0x12d00>
  41663c:	cmp    cl,0x20
  41663f:	ja     416651 <isspace@plt+0x12d41>
  416641:	movzx  eax,cl
  416644:	bt     r13,rax
  416648:	jae    416651 <isspace@plt+0x12d41>
  41664a:	mov    r15,QWORD PTR [rsp+0x20]
  41664f:	jmp    416661 <isspace@plt+0x12d51>
  416651:	mov    rsi,QWORD PTR [rsp+0x20]
  416656:	mov    rdi,r12
  416659:	call   4134d0 <isspace@plt+0xfbc0>
  41665e:	mov    r15,rax
  416661:	lea    rdi,[rsp+0x30]
  416666:	lea    rsi,[rsp+0x2f]
  41666b:	call   412400 <isspace@plt+0xeaf0>
  416670:	test   al,al
  416672:	je     4166aa <isspace@plt+0x12d9a>
  416674:	lea    rbx,[rsp+0x30]
  416679:	lea    r14,[rsp+0x2f]
  41667e:	xchg   ax,ax
  416680:	movzx  eax,BYTE PTR [rsp+0x2f]
  416685:	cmp    rax,0x20
  416689:	ja     4166aa <isspace@plt+0x12d9a>
  41668b:	bt     r13,rax
  41668f:	jae    4166aa <isspace@plt+0x12d9a>
  416691:	mov    rdi,rbx
  416694:	xor    esi,esi
  416696:	call   412480 <isspace@plt+0xeb70>
  41669b:	mov    rdi,rbx
  41669e:	mov    rsi,r14
  4166a1:	call   412400 <isspace@plt+0xeaf0>
  4166a6:	test   al,al
  4166a8:	jne    416680 <isspace@plt+0x12d70>
  4166aa:	mov    rbx,QWORD PTR [rsp+0x50]
  4166af:	mov    rdi,r12
  4166b2:	call   410890 <isspace@plt+0xcf80>
  4166b7:	cmp    rbx,rax
  4166ba:	jne    4166c3 <isspace@plt+0x12db3>
  4166bc:	mov    rdx,QWORD PTR [rsp+0x20]
  4166c1:	jmp    4166d3 <isspace@plt+0x12dc3>
  4166c3:	mov    rsi,QWORD PTR [rsp+0x50]
  4166c8:	mov    rdi,r12
  4166cb:	call   413280 <isspace@plt+0xf970>
  4166d0:	mov    rdx,rax
  4166d3:	mov    rax,QWORD PTR fs:0x28
  4166dc:	cmp    rax,QWORD PTR [rsp+0x58]
  4166e1:	jne    41673f <isspace@plt+0x12e2f>
  4166e3:	mov    rax,r15
  4166e6:	add    rsp,0x60
  4166ea:	pop    rbx
  4166eb:	pop    r12
  4166ed:	pop    r13
  4166ef:	pop    r14
  4166f1:	pop    r15
  4166f3:	ret    
  4166f4:	mov    rdi,r12
  4166f7:	mov    rsi,r14
  4166fa:	call   415100 <isspace@plt+0x117f0>
  4166ff:	mov    rbx,rax
  416702:	test   rax,rax
  416705:	jne    416724 <isspace@plt+0x12e14>
  416707:	xor    r15d,r15d
  41670a:	lea    rdx,[rsp+0x2f]
  41670f:	mov    rdi,r12
  416712:	xor    esi,esi
  416714:	call   411060 <isspace@plt+0xd750>
  416719:	test   al,al
  41671b:	je     416732 <isspace@plt+0x12e22>
  41671d:	cmp    BYTE PTR [rsp+0x2f],0xa
  416722:	jne    416732 <isspace@plt+0x12e22>
  416724:	mov    rdi,r12
  416727:	mov    rsi,rbx
  41672a:	call   4134d0 <isspace@plt+0xfbc0>
  41672f:	mov    r15,rax
  416732:	mov    rdi,r12
  416735:	mov    rsi,r14
  416738:	call   414fb0 <isspace@plt+0x116a0>
  41673d:	jmp    4166d0 <isspace@plt+0x12dc0>
  41673f:	call   403280 <__stack_chk_fail@plt>
  416744:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41674e:	xchg   ax,ax
  416750:	push   rbx
  416751:	sub    rsp,0x30
  416755:	mov    rbx,rdi
  416758:	mov    rax,QWORD PTR fs:0x28
  416761:	mov    QWORD PTR [rsp+0x28],rax
  416766:	call   416520 <isspace@plt+0x12c10>
  41676b:	mov    QWORD PTR [rsp+0x18],rax
  416770:	mov    QWORD PTR [rsp+0x20],rdx
  416775:	mov    rdi,rbx
  416778:	mov    rsi,rdx
  41677b:	call   416520 <isspace@plt+0x12c10>
  416780:	mov    QWORD PTR [rsp+0x8],rax
  416785:	mov    QWORD PTR [rsp+0x10],rdx
  41678a:	lea    rdi,[rsp+0x18]
  41678f:	lea    rsi,[rsp+0x8]
  416794:	call   4170c0 <isspace@plt+0x137b0>
  416799:	mov    rcx,QWORD PTR fs:0x28
  4167a2:	cmp    rcx,QWORD PTR [rsp+0x28]
  4167a7:	jne    4167af <isspace@plt+0x12e9f>
  4167a9:	add    rsp,0x30
  4167ad:	pop    rbx
  4167ae:	ret    
  4167af:	call   403280 <__stack_chk_fail@plt>
  4167b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4167be:	xchg   ax,ax
  4167c0:	push   rax
  4167c1:	mov    rax,QWORD PTR fs:0x28
  4167ca:	mov    QWORD PTR [rsp],rax
  4167ce:	mov    edx,0x5d
  4167d3:	call   4167f0 <isspace@plt+0x12ee0>
  4167d8:	mov    rcx,QWORD PTR fs:0x28
  4167e1:	cmp    rcx,QWORD PTR [rsp]
  4167e5:	jne    4167e9 <isspace@plt+0x12ed9>
  4167e7:	pop    rcx
  4167e8:	ret    
  4167e9:	call   403280 <__stack_chk_fail@plt>
  4167ee:	xchg   ax,ax
  4167f0:	push   rbp
  4167f1:	push   r15
  4167f3:	push   r14
  4167f5:	push   r13
  4167f7:	push   r12
  4167f9:	push   rbx
  4167fa:	sub    rsp,0x78
  4167fe:	mov    ebx,edx
  416800:	mov    rbp,rsi
  416803:	mov    r14,rdi
  416806:	mov    rax,QWORD PTR fs:0x28
  41680f:	mov    QWORD PTR [rsp+0x70],rax
  416814:	call   417080 <isspace@plt+0x13770>
  416819:	mov    QWORD PTR [rsp+0x58],rax
  41681e:	mov    QWORD PTR [rsp+0x60],rdx
  416823:	lea    ecx,[rbx-0x22]
  416826:	cmp    ecx,0x5b
  416829:	ja     416a23 <isspace@plt+0x13113>
  41682f:	mov    r13d,0x29
  416835:	mov    r15d,0x28
  41683b:	lea    rsi,[rip+0x19fde]        # 430820 <isspace@plt+0x2cf10>
  416842:	movsxd rcx,DWORD PTR [rsi+rcx*4]
  416846:	add    rcx,rsi
  416849:	jmp    rcx
  41684b:	mov    r15d,ebx
  41684e:	mov    r13d,ebx
  416851:	jmp    41687b <isspace@plt+0x12f6b>
  416853:	mov    r13d,0x3e
  416859:	mov    r15d,0x3c
  41685f:	jmp    41687b <isspace@plt+0x12f6b>
  416861:	mov    r13d,0x7d
  416867:	mov    r15d,0x7b
  41686d:	jmp    41687b <isspace@plt+0x12f6b>
  41686f:	mov    r13d,0x5d
  416875:	mov    r15d,0x5b
  41687b:	lea    rdi,[rsp+0x30]
  416880:	mov    rsi,r14
  416883:	mov    rdx,rbp
  416886:	call   410570 <isspace@plt+0xcc60>
  41688b:	cmp    r15d,r13d
  41688e:	jne    4168f3 <isspace@plt+0x12fe3>
  416890:	lea    rdi,[rsp+0x30]
  416895:	lea    rsi,[rsp+0x6f]
  41689a:	call   412400 <isspace@plt+0xeaf0>
  41689f:	test   al,al
  4168a1:	je     4168f3 <isspace@plt+0x12fe3>
  4168a3:	mov    al,BYTE PTR [rsp+0x6f]
  4168a7:	add    al,0xde
  4168a9:	cmp    al,0x3e
  4168ab:	ja     4168f3 <isspace@plt+0x12fe3>
  4168ad:	movzx  eax,al
  4168b0:	movabs rcx,0x4000000000000021
  4168ba:	bt     rcx,rax
  4168be:	jae    4168f3 <isspace@plt+0x12fe3>
  4168c0:	mov    rdi,r14
  4168c3:	mov    rsi,rbp
  4168c6:	xor    edx,edx
  4168c8:	call   415320 <isspace@plt+0x11a10>
  4168cd:	mov    rcx,rax
  4168d0:	cmp    rax,rbp
  4168d3:	mov    rax,rbp
  4168d6:	cmovb  rax,rcx
  4168da:	cmova  rbp,rcx
  4168de:	inc    rax
  4168e1:	mov    QWORD PTR [rsp+0x58],rax
  4168e6:	mov    QWORD PTR [rsp+0x60],rbp
  4168eb:	mov    rdx,rbp
  4168ee:	jmp    416a23 <isspace@plt+0x13113>
  4168f3:	mov    QWORD PTR [rsp],r14
  4168f7:	lea    rdi,[rsp+0x30]
  4168fc:	lea    rsi,[rsp+0x6f]
  416901:	call   412400 <isspace@plt+0xeaf0>
  416906:	test   al,al
  416908:	je     416969 <isspace@plt+0x13059>
  41690a:	mov    r14d,0x1
  416910:	lea    rbx,[rsp+0x30]
  416915:	lea    r12,[rsp+0x6f]
  41691a:	jmp    416939 <isspace@plt+0x13029>
  41691c:	nop    DWORD PTR [rax+0x0]
  416920:	mov    rdi,rbx
  416923:	xor    esi,esi
  416925:	call   412540 <isspace@plt+0xec30>
  41692a:	mov    rdi,rbx
  41692d:	mov    rsi,r12
  416930:	call   412400 <isspace@plt+0xeaf0>
  416935:	test   al,al
  416937:	je     416969 <isspace@plt+0x13059>
  416939:	movsx  eax,BYTE PTR [rsp+0x6f]
  41693e:	cmp    r15d,eax
  416941:	jne    416948 <isspace@plt+0x13038>
  416943:	dec    r14d
  416946:	je     41695c <isspace@plt+0x1304c>
  416948:	cmp    r13d,eax
  41694b:	jne    416920 <isspace@plt+0x13010>
  41694d:	xor    eax,eax
  41694f:	cmp    QWORD PTR [rsp+0x50],rbp
  416954:	setne  al
  416957:	add    r14d,eax
  41695a:	jmp    416920 <isspace@plt+0x13010>
  41695c:	mov    rax,QWORD PTR [rsp+0x50]
  416961:	inc    rax
  416964:	mov    QWORD PTR [rsp+0x58],rax
  416969:	lea    rdi,[rsp+0x8]
  41696e:	mov    rsi,QWORD PTR [rsp]
  416972:	mov    r12,rbp
  416975:	mov    rdx,rbp
  416978:	call   410570 <isspace@plt+0xcc60>
  41697d:	mov    rax,QWORD PTR [rsp+0x28]
  416982:	mov    QWORD PTR [rsp+0x50],rax
  416987:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  41698d:	vmovups YMMWORD PTR [rsp+0x30],ymm0
  416993:	lea    rdi,[rsp+0x30]
  416998:	lea    rsi,[rsp+0x6f]
  41699d:	vzeroupper 
  4169a0:	call   412400 <isspace@plt+0xeaf0>
  4169a5:	test   al,al
  4169a7:	je     416a04 <isspace@plt+0x130f4>
  4169a9:	mov    ebp,0x1
  4169ae:	lea    rbx,[rsp+0x30]
  4169b3:	lea    r14,[rsp+0x6f]
  4169b8:	jmp    4169d9 <isspace@plt+0x130c9>
  4169ba:	nop    WORD PTR [rax+rax*1+0x0]
  4169c0:	mov    rdi,rbx
  4169c3:	xor    esi,esi
  4169c5:	call   412480 <isspace@plt+0xeb70>
  4169ca:	mov    rdi,rbx
  4169cd:	mov    rsi,r14
  4169d0:	call   412400 <isspace@plt+0xeaf0>
  4169d5:	test   al,al
  4169d7:	je     416a04 <isspace@plt+0x130f4>
  4169d9:	movsx  eax,BYTE PTR [rsp+0x6f]
  4169de:	cmp    r13d,eax
  4169e1:	jne    4169e7 <isspace@plt+0x130d7>
  4169e3:	dec    ebp
  4169e5:	je     4169fa <isspace@plt+0x130ea>
  4169e7:	cmp    r15d,eax
  4169ea:	jne    4169c0 <isspace@plt+0x130b0>
  4169ec:	xor    eax,eax
  4169ee:	cmp    QWORD PTR [rsp+0x50],r12
  4169f3:	setne  al
  4169f6:	add    ebp,eax
  4169f8:	jmp    4169c0 <isspace@plt+0x130b0>
  4169fa:	mov    rax,QWORD PTR [rsp+0x50]
  4169ff:	mov    QWORD PTR [rsp+0x60],rax
  416a04:	lea    rdi,[rsp+0x58]
  416a09:	call   416fc0 <isspace@plt+0x136b0>
  416a0e:	test   al,al
  416a10:	je     416a1e <isspace@plt+0x1310e>
  416a12:	mov    rax,QWORD PTR [rsp+0x58]
  416a17:	mov    rdx,QWORD PTR [rsp+0x60]
  416a1c:	jmp    416a23 <isspace@plt+0x13113>
  416a1e:	call   417080 <isspace@plt+0x13770>
  416a23:	mov    rcx,QWORD PTR fs:0x28
  416a2c:	cmp    rcx,QWORD PTR [rsp+0x70]
  416a31:	jne    416a42 <isspace@plt+0x13132>
  416a33:	add    rsp,0x78
  416a37:	pop    rbx
  416a38:	pop    r12
  416a3a:	pop    r13
  416a3c:	pop    r14
  416a3e:	pop    r15
  416a40:	pop    rbp
  416a41:	ret    
  416a42:	call   403280 <__stack_chk_fail@plt>
  416a47:	nop    WORD PTR [rax+rax*1+0x0]
  416a50:	push   rax
  416a51:	mov    rax,QWORD PTR fs:0x28
  416a5a:	mov    QWORD PTR [rsp],rax
  416a5e:	mov    edx,0x7d
  416a63:	call   4167f0 <isspace@plt+0x12ee0>
  416a68:	mov    rcx,QWORD PTR fs:0x28
  416a71:	cmp    rcx,QWORD PTR [rsp]
  416a75:	jne    416a79 <isspace@plt+0x13169>
  416a77:	pop    rcx
  416a78:	ret    
  416a79:	call   403280 <__stack_chk_fail@plt>
  416a7e:	xchg   ax,ax
  416a80:	push   rax
  416a81:	mov    rax,QWORD PTR fs:0x28
  416a8a:	mov    QWORD PTR [rsp],rax
  416a8e:	mov    edx,0x3e
  416a93:	call   4167f0 <isspace@plt+0x12ee0>
  416a98:	mov    rcx,QWORD PTR fs:0x28
  416aa1:	cmp    rcx,QWORD PTR [rsp]
  416aa5:	jne    416aa9 <isspace@plt+0x13199>
  416aa7:	pop    rcx
  416aa8:	ret    
  416aa9:	call   403280 <__stack_chk_fail@plt>
  416aae:	xchg   ax,ax
  416ab0:	push   rax
  416ab1:	mov    rax,QWORD PTR fs:0x28
  416aba:	mov    QWORD PTR [rsp],rax
  416abe:	mov    edx,0x29
  416ac3:	call   4167f0 <isspace@plt+0x12ee0>
  416ac8:	mov    rcx,QWORD PTR fs:0x28
  416ad1:	cmp    rcx,QWORD PTR [rsp]
  416ad5:	jne    416ad9 <isspace@plt+0x131c9>
  416ad7:	pop    rcx
  416ad8:	ret    
  416ad9:	call   403280 <__stack_chk_fail@plt>
  416ade:	xchg   ax,ax
  416ae0:	push   rax
  416ae1:	mov    rax,QWORD PTR fs:0x28
  416aea:	mov    QWORD PTR [rsp],rax
  416aee:	mov    edx,0x22
  416af3:	call   4167f0 <isspace@plt+0x12ee0>
  416af8:	mov    rcx,QWORD PTR fs:0x28
  416b01:	cmp    rcx,QWORD PTR [rsp]
  416b05:	jne    416b09 <isspace@plt+0x131f9>
  416b07:	pop    rcx
  416b08:	ret    
  416b09:	call   403280 <__stack_chk_fail@plt>
  416b0e:	xchg   ax,ax
  416b10:	push   rax
  416b11:	mov    rax,QWORD PTR fs:0x28
  416b1a:	mov    QWORD PTR [rsp],rax
  416b1e:	mov    edx,0x27
  416b23:	call   4167f0 <isspace@plt+0x12ee0>
  416b28:	mov    rcx,QWORD PTR fs:0x28
  416b31:	cmp    rcx,QWORD PTR [rsp]
  416b35:	jne    416b39 <isspace@plt+0x13229>
  416b37:	pop    rcx
  416b38:	ret    
  416b39:	call   403280 <__stack_chk_fail@plt>
  416b3e:	xchg   ax,ax
  416b40:	push   rax
  416b41:	mov    rax,QWORD PTR fs:0x28
  416b4a:	mov    QWORD PTR [rsp],rax
  416b4e:	mov    edx,0x60
  416b53:	call   4167f0 <isspace@plt+0x12ee0>
  416b58:	mov    rcx,QWORD PTR fs:0x28
  416b61:	cmp    rcx,QWORD PTR [rsp]
  416b65:	jne    416b69 <isspace@plt+0x13259>
  416b67:	pop    rcx
  416b68:	ret    
  416b69:	call   403280 <__stack_chk_fail@plt>
  416b6e:	xchg   ax,ax
  416b70:	push   r15
  416b72:	push   r14
  416b74:	push   rbx
  416b75:	sub    rsp,0x30
  416b79:	mov    r14,rdx
  416b7c:	mov    r15,rsi
  416b7f:	mov    rbx,rdi
  416b82:	mov    rax,QWORD PTR fs:0x28
  416b8b:	mov    QWORD PTR [rsp+0x28],rax
  416b90:	call   410890 <isspace@plt+0xcf80>
  416b95:	sub    rax,r15
  416b98:	jbe    416bc1 <isspace@plt+0x132b1>
  416b9a:	mov    DWORD PTR [rsp],0x0
  416ba1:	lea    r9,[rsp+0x10]
  416ba6:	mov    r8d,0x1
  416bac:	mov    rdi,rbx
  416baf:	mov    rsi,r15
  416bb2:	mov    rdx,rax
  416bb5:	mov    rcx,r14
  416bb8:	call   42aef0 <isspace@plt+0x275e0>
  416bbd:	test   eax,eax
  416bbf:	je     416be0 <isspace@plt+0x132d0>
  416bc1:	call   417080 <isspace@plt+0x13770>
  416bc6:	mov    rcx,QWORD PTR fs:0x28
  416bcf:	cmp    rcx,QWORD PTR [rsp+0x28]
  416bd4:	jne    416bf1 <isspace@plt+0x132e1>
  416bd6:	add    rsp,0x30
  416bda:	pop    rbx
  416bdb:	pop    r14
  416bdd:	pop    r15
  416bdf:	ret    
  416be0:	mov    rdi,QWORD PTR [rsp+0x10]
  416be5:	mov    rsi,QWORD PTR [rsp+0x18]
  416bea:	call   417250 <isspace@plt+0x13940>
  416bef:	jmp    416bc6 <isspace@plt+0x132b6>
  416bf1:	call   403280 <__stack_chk_fail@plt>
  416bf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416c00:	sub    rsp,0x28
  416c04:	mov    rcx,rdx
  416c07:	mov    rdx,rsi
  416c0a:	mov    rax,QWORD PTR fs:0x28
  416c13:	mov    QWORD PTR [rsp+0x20],rax
  416c18:	mov    DWORD PTR [rsp],0x0
  416c1f:	lea    r9,[rsp+0x10]
  416c24:	mov    r8d,0x1
  416c2a:	mov    esi,0x0
  416c2f:	call   42b2e0 <isspace@plt+0x279d0>
  416c34:	test   eax,eax
  416c36:	je     416c3f <isspace@plt+0x1332f>
  416c38:	call   417080 <isspace@plt+0x13770>
  416c3d:	jmp    416c4e <isspace@plt+0x1333e>
  416c3f:	mov    rdi,QWORD PTR [rsp+0x10]
  416c44:	mov    rsi,QWORD PTR [rsp+0x18]
  416c49:	call   417250 <isspace@plt+0x13940>
  416c4e:	mov    rcx,QWORD PTR fs:0x28
  416c57:	cmp    rcx,QWORD PTR [rsp+0x20]
  416c5c:	jne    416c63 <isspace@plt+0x13353>
  416c5e:	add    rsp,0x28
  416c62:	ret    
  416c63:	call   403280 <__stack_chk_fail@plt>
  416c68:	nop    DWORD PTR [rax+rax*1+0x0]
  416c70:	push   rbp
  416c71:	push   r15
  416c73:	push   r14
  416c75:	push   r13
  416c77:	push   r12
  416c79:	push   rbx
  416c7a:	sub    rsp,0x38
  416c7e:	mov    r15,rdi
  416c81:	mov    rax,QWORD PTR fs:0x28
  416c8a:	mov    QWORD PTR [rsp+0x30],rax
  416c8f:	call   413280 <isspace@plt+0xf970>
  416c94:	mov    r12,rax
  416c97:	mov    rdi,r15
  416c9a:	mov    rsi,rax
  416c9d:	call   4132e0 <isspace@plt+0xf9d0>
  416ca2:	mov    r14,rax
  416ca5:	mov    rdi,r15
  416ca8:	mov    rsi,r12
  416cab:	call   4134d0 <isspace@plt+0xfbc0>
  416cb0:	mov    rbx,rax
  416cb3:	sub    r14,r12
  416cb6:	lea    rdx,[rsp+0x2f]
  416cbb:	mov    rdi,r15
  416cbe:	mov    rsi,r12
  416cc1:	call   411060 <isspace@plt+0xd750>
  416cc6:	mov    ebp,eax
  416cc8:	mov    al,BYTE PTR [rsp+0x2f]
  416ccc:	mov    BYTE PTR [rsp+0xf],al
  416cd0:	mov    rdi,r15
  416cd3:	mov    rsi,r12
  416cd6:	mov    rdx,r14
  416cd9:	call   411210 <isspace@plt+0xd900>
  416cde:	mov    r13,rax
  416ce1:	mov    rdi,r14
  416ce4:	call   4035d0 <malloc@plt>
  416ce9:	mov    QWORD PTR [rsp+0x10],r13
  416cee:	test   r13,r13
  416cf1:	je     416e76 <isspace@plt+0x13566>
  416cf7:	test   rax,rax
  416cfa:	je     416e76 <isspace@plt+0x13566>
  416d00:	mov    QWORD PTR [rsp+0x18],rax
  416d05:	cmp    BYTE PTR [rsp+0xf],0xa
  416d0a:	setne  al
  416d0d:	xor    bpl,0x1
  416d11:	or     bpl,al
  416d14:	mov    BYTE PTR [rsp+0xf],bpl
  416d19:	nop    DWORD PTR [rax+0x0]
  416d20:	mov    rbp,r12
  416d23:	mov    rdi,r15
  416d26:	mov    rsi,r12
  416d29:	call   413220 <isspace@plt+0xf910>
  416d2e:	mov    rdi,r15
  416d31:	mov    rsi,rax
  416d34:	call   413280 <isspace@plt+0xf970>
  416d39:	mov    QWORD PTR [rsp+0x20],r12
  416d3e:	cmp    rax,r12
  416d41:	je     416dba <isspace@plt+0x134aa>
  416d43:	mov    r12,rax
  416d46:	mov    rdi,r15
  416d49:	mov    rsi,rax
  416d4c:	call   4132e0 <isspace@plt+0xf9d0>
  416d51:	sub    rax,r12
  416d54:	cmp    rax,r14
  416d57:	jb     416dba <isspace@plt+0x134aa>
  416d59:	test   r14,r14
  416d5c:	setne  r13b
  416d60:	mov    rdi,r15
  416d63:	mov    rsi,r12
  416d66:	lea    rdx,[rsp+0x2f]
  416d6b:	call   411060 <isspace@plt+0xd750>
  416d70:	cmp    BYTE PTR [rsp+0x2f],0xa
  416d75:	sete   cl
  416d78:	and    cl,al
  416d7a:	mov    eax,ecx
  416d7c:	or     al,BYTE PTR [rsp+0xf]
  416d80:	cmp    al,0x1
  416d82:	jne    416dba <isspace@plt+0x134aa>
  416d84:	xor    cl,0x1
  416d87:	or     r13b,cl
  416d8a:	je     416dba <isspace@plt+0x134aa>
  416d8c:	mov    rdi,r15
  416d8f:	mov    rsi,r12
  416d92:	mov    rdx,r14
  416d95:	mov    rbp,QWORD PTR [rsp+0x18]
  416d9a:	mov    rcx,rbp
  416d9d:	call   411130 <isspace@plt+0xd820>
  416da2:	mov    rdi,QWORD PTR [rsp+0x10]
  416da7:	mov    rsi,rbp
  416daa:	mov    rdx,r14
  416dad:	call   403640 <bcmp@plt>
  416db2:	test   eax,eax
  416db4:	je     416d20 <isspace@plt+0x13410>
  416dba:	mov    r13b,BYTE PTR [rsp+0xf]
  416dbf:	mov    r12,QWORD PTR [rsp+0x10]
  416dc4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416dce:	xchg   ax,ax
  416dd0:	mov    rbp,rbx
  416dd3:	mov    rdi,r15
  416dd6:	mov    rsi,rbx
  416dd9:	call   4132e0 <isspace@plt+0xf9d0>
  416dde:	sub    rax,rbx
  416de1:	cmp    rax,r14
  416de4:	jb     416e55 <isspace@plt+0x13545>
  416de6:	test   r14,r14
  416de9:	setne  bl
  416dec:	mov    rdi,r15
  416def:	mov    rsi,rbp
  416df2:	lea    rdx,[rsp+0x2f]
  416df7:	call   411060 <isspace@plt+0xd750>
  416dfc:	cmp    BYTE PTR [rsp+0x2f],0xa
  416e01:	sete   cl
  416e04:	and    cl,al
  416e06:	mov    eax,ecx
  416e08:	or     al,r13b
  416e0b:	cmp    al,0x1
  416e0d:	jne    416e55 <isspace@plt+0x13545>
  416e0f:	xor    cl,0x1
  416e12:	or     bl,cl
  416e14:	je     416e55 <isspace@plt+0x13545>
  416e16:	mov    rdi,r15
  416e19:	mov    rsi,rbp
  416e1c:	mov    rdx,r14
  416e1f:	mov    rbx,QWORD PTR [rsp+0x18]
  416e24:	mov    rcx,rbx
  416e27:	call   411130 <isspace@plt+0xd820>
  416e2c:	mov    rdi,r12
  416e2f:	mov    rsi,rbx
  416e32:	mov    rdx,r14
  416e35:	call   403640 <bcmp@plt>
  416e3a:	test   eax,eax
  416e3c:	jne    416e55 <isspace@plt+0x13545>
  416e3e:	mov    rdi,r15
  416e41:	mov    rsi,rbp
  416e44:	call   4134d0 <isspace@plt+0xfbc0>
  416e49:	mov    rbx,rax
  416e4c:	cmp    rbp,rax
  416e4f:	jne    416dd0 <isspace@plt+0x134c0>
  416e55:	mov    rdi,r12
  416e58:	call   4030d0 <free@plt>
  416e5d:	mov    rdi,QWORD PTR [rsp+0x18]
  416e62:	call   4030d0 <free@plt>
  416e67:	mov    rdi,QWORD PTR [rsp+0x20]
  416e6c:	mov    rsi,rbp
  416e6f:	call   417250 <isspace@plt+0x13940>
  416e74:	jmp    416e90 <isspace@plt+0x13580>
  416e76:	mov    rdi,QWORD PTR [rsp+0x10]
  416e7b:	mov    rbx,rax
  416e7e:	call   4030d0 <free@plt>
  416e83:	mov    rdi,rbx
  416e86:	call   4030d0 <free@plt>
  416e8b:	call   417080 <isspace@plt+0x13770>
  416e90:	mov    rcx,QWORD PTR fs:0x28
  416e99:	cmp    rcx,QWORD PTR [rsp+0x30]
  416e9e:	jne    416eaf <isspace@plt+0x1359f>
  416ea0:	add    rsp,0x38
  416ea4:	pop    rbx
  416ea5:	pop    r12
  416ea7:	pop    r13
  416ea9:	pop    r14
  416eab:	pop    r15
  416ead:	pop    rbp
  416eae:	ret    
  416eaf:	call   403280 <__stack_chk_fail@plt>
  416eb4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416ebe:	xchg   ax,ax
  416ec0:	push   r15
  416ec2:	push   r14
  416ec4:	push   r13
  416ec6:	push   r12
  416ec8:	push   rbx
  416ec9:	sub    rsp,0x10
  416ecd:	mov    r13,rsi
  416ed0:	mov    r12,rdi
  416ed3:	mov    rax,QWORD PTR fs:0x28
  416edc:	mov    QWORD PTR [rsp+0x8],rax
  416ee1:	mov    rsi,QWORD PTR [rsi]
  416ee4:	mov    r15,QWORD PTR [r13+0x8]
  416ee8:	call   413280 <isspace@plt+0xf970>
  416eed:	mov    r14,rax
  416ef0:	mov    rbx,QWORD PTR [r13+0x8]
  416ef4:	mov    rdi,r12
  416ef7:	mov    rsi,rbx
  416efa:	call   413280 <isspace@plt+0xf970>
  416eff:	cmp    rbx,rax
  416f02:	je     416f13 <isspace@plt+0x13603>
  416f04:	mov    rsi,QWORD PTR [r13+0x8]
  416f08:	mov    rdi,r12
  416f0b:	call   4134d0 <isspace@plt+0xfbc0>
  416f10:	mov    r15,rax
  416f13:	mov    rax,QWORD PTR fs:0x28
  416f1c:	cmp    rax,QWORD PTR [rsp+0x8]
  416f21:	jne    416f37 <isspace@plt+0x13627>
  416f23:	mov    rax,r14
  416f26:	mov    rdx,r15
  416f29:	add    rsp,0x10
  416f2d:	pop    rbx
  416f2e:	pop    r12
  416f30:	pop    r13
  416f32:	pop    r14
  416f34:	pop    r15
  416f36:	ret    
  416f37:	call   403280 <__stack_chk_fail@plt>
  416f3c:	nop    DWORD PTR [rax+0x0]
  416f40:	push   r15
  416f42:	push   r14
  416f44:	push   rbx
  416f45:	sub    rsp,0x10
  416f49:	mov    rbx,rsi
  416f4c:	mov    r14,rdi
  416f4f:	mov    rax,QWORD PTR fs:0x28
  416f58:	mov    QWORD PTR [rsp+0x8],rax
  416f5d:	mov    rdi,rsi
  416f60:	call   417020 <isspace@plt+0x13710>
  416f65:	test   rax,rax
  416f68:	je     416f94 <isspace@plt+0x13684>
  416f6a:	mov    r15,QWORD PTR [rbx]
  416f6d:	mov    rdi,r14
  416f70:	mov    rsi,r15
  416f73:	call   413280 <isspace@plt+0xf970>
  416f78:	cmp    r15,rax
  416f7b:	jne    416f94 <isspace@plt+0x13684>
  416f7d:	mov    rbx,QWORD PTR [rbx+0x8]
  416f81:	mov    rdi,r14
  416f84:	mov    rsi,rbx
  416f87:	call   413280 <isspace@plt+0xf970>
  416f8c:	cmp    rbx,rax
  416f8f:	sete   al
  416f92:	jmp    416f96 <isspace@plt+0x13686>
  416f94:	xor    eax,eax
  416f96:	mov    rcx,QWORD PTR fs:0x28
  416f9f:	cmp    rcx,QWORD PTR [rsp+0x8]
  416fa4:	jne    416fb0 <isspace@plt+0x136a0>
  416fa6:	add    rsp,0x10
  416faa:	pop    rbx
  416fab:	pop    r14
  416fad:	pop    r15
  416faf:	ret    
  416fb0:	call   403280 <__stack_chk_fail@plt>
  416fb5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416fbf:	nop
  416fc0:	push   rax
  416fc1:	mov    rax,QWORD PTR fs:0x28
  416fca:	mov    QWORD PTR [rsp],rax
  416fce:	mov    rax,QWORD PTR [rdi]
  416fd1:	cmp    rax,0xffffffffffffffff
  416fd5:	je     416ffb <isspace@plt+0x136eb>
  416fd7:	mov    rdx,QWORD PTR [rdi+0x8]
  416fdb:	cmp    rdx,0xffffffffffffffff
  416fdf:	setne  cl
  416fe2:	cmp    rax,rdx
  416fe5:	setbe  al
  416fe8:	mov    rdx,QWORD PTR fs:0x28
  416ff1:	cmp    rdx,QWORD PTR [rsp]
  416ff5:	jne    41700e <isspace@plt+0x136fe>
  416ff7:	and    al,cl
  416ff9:	pop    rcx
  416ffa:	ret    
  416ffb:	mov    rax,QWORD PTR fs:0x28
  417004:	cmp    rax,QWORD PTR [rsp]
  417008:	jne    41700e <isspace@plt+0x136fe>
  41700a:	xor    eax,eax
  41700c:	pop    rcx
  41700d:	ret    
  41700e:	call   403280 <__stack_chk_fail@plt>
  417013:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41701d:	nop    DWORD PTR [rax]
  417020:	push   rax
  417021:	mov    rax,QWORD PTR fs:0x28
  41702a:	mov    QWORD PTR [rsp],rax
  41702e:	mov    rcx,QWORD PTR [rdi]
  417031:	cmp    rcx,0xffffffffffffffff
  417035:	je     417063 <isspace@plt+0x13753>
  417037:	mov    rdx,QWORD PTR [rdi+0x8]
  41703b:	mov    rax,rdx
  41703e:	sub    rax,rcx
  417041:	xor    esi,esi
  417043:	cmp    rdx,0xffffffffffffffff
  417047:	cmove  rax,rsi
  41704b:	cmp    rdx,rcx
  41704e:	cmovb  rax,rsi
  417052:	mov    rcx,QWORD PTR fs:0x28
  41705b:	cmp    rcx,QWORD PTR [rsp]
  41705f:	jne    417076 <isspace@plt+0x13766>
  417061:	pop    rcx
  417062:	ret    
  417063:	mov    rax,QWORD PTR fs:0x28
  41706c:	cmp    rax,QWORD PTR [rsp]
  417070:	jne    417076 <isspace@plt+0x13766>
  417072:	xor    eax,eax
  417074:	pop    rcx
  417075:	ret    
  417076:	call   403280 <__stack_chk_fail@plt>
  41707b:	nop    DWORD PTR [rax+rax*1+0x0]
  417080:	push   rax
  417081:	mov    rax,QWORD PTR fs:0x28
  41708a:	mov    QWORD PTR [rsp],rax
  41708e:	mov    rax,QWORD PTR fs:0x28
  417097:	cmp    rax,QWORD PTR [rsp]
  41709b:	jne    4170ad <isspace@plt+0x1379d>
  41709d:	mov    rax,0xffffffffffffffff
  4170a4:	mov    rdx,0xffffffffffffffff
  4170ab:	pop    rcx
  4170ac:	ret    
  4170ad:	call   403280 <__stack_chk_fail@plt>
  4170b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4170bc:	nop    DWORD PTR [rax+0x0]
  4170c0:	push   rax
  4170c1:	mov    rax,QWORD PTR fs:0x28
  4170ca:	mov    QWORD PTR [rsp],rax
  4170ce:	mov    rax,QWORD PTR [rdi]
  4170d1:	cmp    rax,0xffffffffffffffff
  4170d5:	je     41710e <isspace@plt+0x137fe>
  4170d7:	mov    rdx,QWORD PTR [rdi+0x8]
  4170db:	cmp    rax,rdx
  4170de:	ja     41710e <isspace@plt+0x137fe>
  4170e0:	cmp    rdx,0xffffffffffffffff
  4170e4:	je     41710e <isspace@plt+0x137fe>
  4170e6:	mov    rcx,QWORD PTR [rsi]
  4170e9:	cmp    rcx,0xffffffffffffffff
  4170ed:	je     417115 <isspace@plt+0x13805>
  4170ef:	mov    rsi,QWORD PTR [rsi+0x8]
  4170f3:	cmp    rcx,rsi
  4170f6:	ja     417115 <isspace@plt+0x13805>
  4170f8:	cmp    rsi,0xffffffffffffffff
  4170fc:	je     417115 <isspace@plt+0x13805>
  4170fe:	cmp    rax,rcx
  417101:	cmova  rax,rcx
  417105:	cmp    rdx,rsi
  417108:	cmovb  rdx,rsi
  41710c:	jmp    417115 <isspace@plt+0x13805>
  41710e:	mov    rax,QWORD PTR [rsi]
  417111:	mov    rdx,QWORD PTR [rsi+0x8]
  417115:	mov    rcx,QWORD PTR fs:0x28
  41711e:	cmp    rcx,QWORD PTR [rsp]
  417122:	jne    417126 <isspace@plt+0x13816>
  417124:	pop    rcx
  417125:	ret    
  417126:	call   403280 <__stack_chk_fail@plt>
  41712b:	nop    DWORD PTR [rax+rax*1+0x0]
  417130:	push   rax
  417131:	mov    rax,QWORD PTR fs:0x28
  41713a:	mov    QWORD PTR [rsp],rax
  41713e:	mov    rcx,QWORD PTR [rdi]
  417141:	mov    rax,0xffffffffffffffff
  417148:	cmp    rcx,0xffffffffffffffff
  41714c:	je     4171a7 <isspace@plt+0x13897>
  41714e:	mov    rdi,QWORD PTR [rdi+0x8]
  417152:	cmp    rcx,rdi
  417155:	ja     4171a7 <isspace@plt+0x13897>
  417157:	cmp    rdi,0xffffffffffffffff
  41715b:	je     4171a7 <isspace@plt+0x13897>
  41715d:	mov    r8,QWORD PTR [rsi]
  417160:	cmp    r8,0xffffffffffffffff
  417164:	je     4171a7 <isspace@plt+0x13897>
  417166:	cmp    r8,rdi
  417169:	jae    4171a7 <isspace@plt+0x13897>
  41716b:	mov    rsi,QWORD PTR [rsi+0x8]
  41716f:	mov    rdx,0xffffffffffffffff
  417176:	cmp    rcx,rsi
  417179:	jae    4171ae <isspace@plt+0x1389e>
  41717b:	cmp    r8,rsi
  41717e:	ja     4171ae <isspace@plt+0x1389e>
  417180:	cmp    rsi,0xffffffffffffffff
  417184:	je     4171ae <isspace@plt+0x1389e>
  417186:	cmp    rcx,r8
  417189:	cmovb  rcx,r8
  41718d:	cmp    rdi,rsi
  417190:	cmova  rdi,rsi
  417194:	cmp    rcx,rdi
  417197:	mov    rax,rcx
  41719a:	cmova  rax,rdi
  41719e:	cmovae rdi,rcx
  4171a2:	mov    rdx,rdi
  4171a5:	jmp    4171ae <isspace@plt+0x1389e>
  4171a7:	mov    rdx,0xffffffffffffffff
  4171ae:	mov    rcx,QWORD PTR fs:0x28
  4171b7:	cmp    rcx,QWORD PTR [rsp]
  4171bb:	jne    4171bf <isspace@plt+0x138af>
  4171bd:	pop    rcx
  4171be:	ret    
  4171bf:	call   403280 <__stack_chk_fail@plt>
  4171c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4171ce:	xchg   ax,ax
  4171d0:	push   rax
  4171d1:	mov    rax,QWORD PTR fs:0x28
  4171da:	mov    QWORD PTR [rsp],rax
  4171de:	mov    rcx,QWORD PTR [rdi]
  4171e1:	cmp    rcx,0xffffffffffffffff
  4171e5:	je     417236 <isspace@plt+0x13926>
  4171e7:	mov    rdx,QWORD PTR [rdi+0x8]
  4171eb:	cmp    rcx,rdx
  4171ee:	ja     417236 <isspace@plt+0x13926>
  4171f0:	cmp    rdx,0xffffffffffffffff
  4171f4:	je     417236 <isspace@plt+0x13926>
  4171f6:	mov    rdi,QWORD PTR [rsi]
  4171f9:	cmp    rdi,0xffffffffffffffff
  4171fd:	je     417236 <isspace@plt+0x13926>
  4171ff:	mov    rsi,QWORD PTR [rsi+0x8]
  417203:	cmp    rsi,0xffffffffffffffff
  417207:	setne  r8b
  41720b:	cmp    rdi,rsi
  41720e:	setbe  al
  417211:	cmp    rcx,rsi
  417214:	setb   cl
  417217:	cmp    rdi,rdx
  41721a:	setb   dl
  41721d:	mov    rsi,QWORD PTR fs:0x28
  417226:	cmp    rsi,QWORD PTR [rsp]
  41722a:	jne    417249 <isspace@plt+0x13939>
  41722c:	and    r8b,cl
  41722f:	and    al,r8b
  417232:	and    al,dl
  417234:	pop    rcx
  417235:	ret    
  417236:	mov    rax,QWORD PTR fs:0x28
  41723f:	cmp    rax,QWORD PTR [rsp]
  417243:	jne    417249 <isspace@plt+0x13939>
  417245:	xor    eax,eax
  417247:	pop    rcx
  417248:	ret    
  417249:	call   403280 <__stack_chk_fail@plt>
  41724e:	xchg   ax,ax
  417250:	push   rax
  417251:	mov    rax,QWORD PTR fs:0x28
  41725a:	mov    QWORD PTR [rsp],rax
  41725e:	cmp    rdi,rsi
  417261:	mov    rax,rdi
  417264:	cmova  rax,rsi
  417268:	cmovb  rdi,rsi
  41726c:	mov    rcx,QWORD PTR fs:0x28
  417275:	cmp    rcx,QWORD PTR [rsp]
  417279:	jne    417280 <isspace@plt+0x13970>
  41727b:	mov    rdx,rdi
  41727e:	pop    rcx
  41727f:	ret    
  417280:	call   403280 <__stack_chk_fail@plt>
  417285:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41728f:	nop
  417290:	push   rax
  417291:	mov    rax,QWORD PTR fs:0x28
  41729a:	mov    QWORD PTR [rsp],rax
  41729e:	mov    rcx,QWORD PTR [rdi]
  4172a1:	cmp    rcx,0xffffffffffffffff
  4172a5:	je     4172c0 <isspace@plt+0x139b0>
  4172a7:	mov    rax,QWORD PTR [rdi+0x8]
  4172ab:	cmp    rcx,rax
  4172ae:	ja     4172c0 <isspace@plt+0x139b0>
  4172b0:	cmp    rax,0xffffffffffffffff
  4172b4:	je     4172c0 <isspace@plt+0x139b0>
  4172b6:	mov    rdx,QWORD PTR [rsi]
  4172b9:	cmp    rcx,rdx
  4172bc:	je     4172df <isspace@plt+0x139cf>
  4172be:	jmp    4172ec <isspace@plt+0x139dc>
  4172c0:	mov    rdx,QWORD PTR [rsi]
  4172c3:	mov    al,0x1
  4172c5:	cmp    rdx,0xffffffffffffffff
  4172c9:	je     4172ee <isspace@plt+0x139de>
  4172cb:	mov    r8,QWORD PTR [rsi+0x8]
  4172cf:	cmp    rdx,r8
  4172d2:	ja     4172ee <isspace@plt+0x139de>
  4172d4:	cmp    r8,0xffffffffffffffff
  4172d8:	je     4172ee <isspace@plt+0x139de>
  4172da:	cmp    rcx,rdx
  4172dd:	jne    4172ec <isspace@plt+0x139dc>
  4172df:	mov    rax,QWORD PTR [rdi+0x8]
  4172e3:	cmp    rax,QWORD PTR [rsi+0x8]
  4172e7:	sete   al
  4172ea:	jmp    4172ee <isspace@plt+0x139de>
  4172ec:	xor    eax,eax
  4172ee:	mov    rcx,QWORD PTR fs:0x28
  4172f7:	cmp    rcx,QWORD PTR [rsp]
  4172fb:	jne    4172ff <isspace@plt+0x139ef>
  4172fd:	pop    rcx
  4172fe:	ret    
  4172ff:	call   403280 <__stack_chk_fail@plt>
  417304:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41730e:	xchg   ax,ax
  417310:	push   rax
  417311:	mov    rax,QWORD PTR fs:0x28
  41731a:	mov    QWORD PTR [rsp],rax
  41731e:	mov    rax,QWORD PTR [rdi]
  417321:	cmp    rax,0xffffffffffffffff
  417325:	je     41735d <isspace@plt+0x13a4d>
  417327:	mov    rdx,QWORD PTR [rdi+0x8]
  41732b:	cmp    rdx,0xffffffffffffffff
  41732f:	setne  cl
  417332:	cmp    rax,rdx
  417335:	setbe  dil
  417339:	cmp    rax,rsi
  41733c:	setbe  al
  41733f:	cmp    rdx,rsi
  417342:	setae  dl
  417345:	mov    rsi,QWORD PTR fs:0x28
  41734e:	cmp    rsi,QWORD PTR [rsp]
  417352:	jne    417370 <isspace@plt+0x13a60>
  417354:	and    cl,dil
  417357:	and    al,dl
  417359:	and    al,cl
  41735b:	pop    rcx
  41735c:	ret    
  41735d:	mov    rax,QWORD PTR fs:0x28
  417366:	cmp    rax,QWORD PTR [rsp]
  41736a:	jne    417370 <isspace@plt+0x13a60>
  41736c:	xor    eax,eax
  41736e:	pop    rcx
  41736f:	ret    
  417370:	call   403280 <__stack_chk_fail@plt>
  417375:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41737f:	nop
  417380:	push   rbp
  417381:	push   r15
  417383:	push   r14
  417385:	push   r13
  417387:	push   r12
  417389:	push   rbx
  41738a:	sub    rsp,0x18
  41738e:	mov    rax,QWORD PTR fs:0x28
  417397:	mov    QWORD PTR [rsp+0x10],rax
  41739c:	mov    QWORD PTR [rsp+0x8],0x0
  4173a5:	test   rsi,rsi
  4173a8:	je     417471 <isspace@plt+0x13b61>
  4173ae:	mov    rbx,rsi
  4173b1:	mov    rbp,rdi
  4173b4:	xor    r14d,r14d
  4173b7:	lea    r15,[rsp+0x4]
  4173bc:	lea    r12,[rsp+0x8]
  4173c1:	jmp    4173e2 <isspace@plt+0x13ad2>
  4173c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4173cd:	nop    DWORD PTR [rax]
  4173d0:	inc    r14d
  4173d3:	inc    rbp
  4173d6:	dec    rbx
  4173d9:	test   rbx,rbx
  4173dc:	je     417474 <isspace@plt+0x13b64>
  4173e2:	mov    rdi,r15
  4173e5:	mov    rsi,rbp
  4173e8:	mov    rdx,rbx
  4173eb:	mov    rcx,r12
  4173ee:	call   4032b0 <mbrtowc@plt>
  4173f3:	mov    r13,rax
  4173f6:	cmp    rax,0xffffffffffffffff
  4173fa:	je     417410 <isspace@plt+0x13b00>
  4173fc:	test   r13,r13
  4173ff:	je     4173d0 <isspace@plt+0x13ac0>
  417401:	cmp    r13,0xfffffffffffffffe
  417405:	jne    417450 <isspace@plt+0x13b40>
  417407:	jmp    417474 <isspace@plt+0x13b64>
  417409:	nop    DWORD PTR [rax+0x0]
  417410:	call   403130 <__errno_location@plt>
  417415:	cmp    DWORD PTR [rax],0x54
  417418:	jne    417450 <isspace@plt+0x13b40>
  41741a:	mov    QWORD PTR [rsp+0x8],0x0
  417423:	inc    r14d
  417426:	mov    al,BYTE PTR [rbp+0x0]
  417429:	nop    DWORD PTR [rax+0x0]
  417430:	and    al,0xc0
  417432:	cmp    al,0x80
  417434:	jne    4173d9 <isspace@plt+0x13ac9>
  417436:	dec    rbx
  417439:	movzx  eax,BYTE PTR [rbp+0x1]
  41743d:	inc    rbp
  417440:	jmp    417430 <isspace@plt+0x13b20>
  417442:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41744c:	nop    DWORD PTR [rax+0x0]
  417450:	mov    edi,DWORD PTR [rsp+0x4]
  417454:	call   403590 <wcwidth@plt>
  417459:	cmp    eax,0x1
  41745c:	sbb    r14d,0xffffffff
  417460:	add    rbp,r13
  417463:	sub    rbx,r13
  417466:	test   rbx,rbx
  417469:	jne    4173e2 <isspace@plt+0x13ad2>
  41746f:	jmp    417474 <isspace@plt+0x13b64>
  417471:	xor    r14d,r14d
  417474:	mov    rax,QWORD PTR fs:0x28
  41747d:	cmp    rax,QWORD PTR [rsp+0x10]
  417482:	jne    417496 <isspace@plt+0x13b86>
  417484:	mov    eax,r14d
  417487:	add    rsp,0x18
  41748b:	pop    rbx
  41748c:	pop    r12
  41748e:	pop    r13
  417490:	pop    r14
  417492:	pop    r15
  417494:	pop    rbp
  417495:	ret    
  417496:	call   403280 <__stack_chk_fail@plt>
  41749b:	nop    DWORD PTR [rax+rax*1+0x0]
  4174a0:	push   rbp
  4174a1:	push   r15
  4174a3:	push   r14
  4174a5:	push   r13
  4174a7:	push   r12
  4174a9:	push   rbx
  4174aa:	sub    rsp,0x18
  4174ae:	mov    rax,QWORD PTR fs:0x28
  4174b7:	mov    QWORD PTR [rsp+0x10],rax
  4174bc:	mov    QWORD PTR [rsp+0x8],0x0
  4174c5:	test   rsi,rsi
  4174c8:	je     417569 <isspace@plt+0x13c59>
  4174ce:	mov    rbx,rsi
  4174d1:	mov    rbp,rdi
  4174d4:	xor    r14d,r14d
  4174d7:	lea    r12,[rsp+0x8]
  4174dc:	jmp    4174f0 <isspace@plt+0x13be0>
  4174de:	xchg   ax,ax
  4174e0:	add    r14d,0x2
  4174e4:	add    rbp,r15
  4174e7:	sub    rbx,r15
  4174ea:	je     41756c <isspace@plt+0x13c5c>
  4174f0:	lea    rdi,[rsp+0x4]
  4174f5:	mov    rsi,rbp
  4174f8:	mov    rdx,rbx
  4174fb:	mov    rcx,r12
  4174fe:	call   4032b0 <mbrtowc@plt>
  417503:	mov    r15d,0x1
  417509:	cmp    rax,0xfffffffffffffffe
  41750d:	je     4174e4 <isspace@plt+0x13bd4>
  41750f:	mov    r13,rax
  417512:	test   rax,rax
  417515:	je     4174e0 <isspace@plt+0x13bd0>
  417517:	cmp    r13,0xffffffffffffffff
  41751b:	jne    417540 <isspace@plt+0x13c30>
  41751d:	call   403130 <__errno_location@plt>
  417522:	cmp    DWORD PTR [rax],0x54
  417525:	jne    417540 <isspace@plt+0x13c30>
  417527:	mov    QWORD PTR [rsp+0x8],0x0
  417530:	inc    r14d
  417533:	jmp    4174e4 <isspace@plt+0x13bd4>
  417535:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41753f:	nop
  417540:	mov    edi,DWORD PTR [rsp+0x4]
  417544:	cmp    edi,0x9
  417547:	jne    41754e <isspace@plt+0x13c3e>
  417549:	inc    r14d
  41754c:	jmp    4174e4 <isspace@plt+0x13bd4>
  41754e:	call   403590 <wcwidth@plt>
  417553:	cmp    eax,0xffffffff
  417556:	mov    ecx,0x2
  41755b:	cmove  eax,ecx
  41755e:	add    r14d,eax
  417561:	mov    r15,r13
  417564:	jmp    4174e4 <isspace@plt+0x13bd4>
  417569:	xor    r14d,r14d
  41756c:	mov    rax,QWORD PTR fs:0x28
  417575:	cmp    rax,QWORD PTR [rsp+0x10]
  41757a:	jne    41758e <isspace@plt+0x13c7e>
  41757c:	mov    eax,r14d
  41757f:	add    rsp,0x18
  417583:	pop    rbx
  417584:	pop    r12
  417586:	pop    r13
  417588:	pop    r14
  41758a:	pop    r15
  41758c:	pop    rbp
  41758d:	ret    
  41758e:	call   403280 <__stack_chk_fail@plt>
  417593:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41759d:	nop    DWORD PTR [rax]
  4175a0:	push   rax
  4175a1:	mov    rax,QWORD PTR fs:0x28
  4175aa:	mov    QWORD PTR [rsp],rax
  4175ae:	cmp    di,0xffff
  4175b2:	sete   al
  4175b5:	mov    rcx,QWORD PTR fs:0x28
  4175be:	cmp    rcx,QWORD PTR [rsp]
  4175c2:	jne    4175c6 <isspace@plt+0x13cb6>
  4175c4:	pop    rcx
  4175c5:	ret    
  4175c6:	call   403280 <__stack_chk_fail@plt>
  4175cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4175d0:	push   rbx
  4175d1:	sub    rsp,0x10
  4175d5:	mov    rax,QWORD PTR fs:0x28
  4175de:	mov    QWORD PTR [rsp+0x8],rax
  4175e3:	mov    edi,0x1
  4175e8:	mov    esi,0x4e0
  4175ed:	call   403460 <calloc@plt>
  4175f2:	test   rax,rax
  4175f5:	je     417749 <isspace@plt+0x13e39>
  4175fb:	mov    rbx,rax
  4175fe:	mov    edi,0x1
  417603:	mov    esi,0x4f8
  417608:	call   403460 <calloc@plt>
  41760d:	test   rax,rax
  417610:	je     417741 <isspace@plt+0x13e31>
  417616:	mov    QWORD PTR [rax+0x4d8],0x4e0
  417621:	mov    QWORD PTR [rax+0x4e0],rbx
  417628:	lea    rcx,[rip+0x141]        # 417770 <isspace@plt+0x13e60>
  41762f:	mov    QWORD PTR [rax],rcx
  417632:	lea    rcx,[rip+0x4b7]        # 417af0 <isspace@plt+0x141e0>
  417639:	vmovq  xmm0,rcx
  41763e:	vmovq  xmm1,QWORD PTR [rip+0x2a99a]        # 441fe0 <isspace@plt+0x3e6d0>
  417646:	vpunpcklqdq xmm0,xmm1,xmm0
  41764a:	vmovdqu XMMWORD PTR [rax+0x8],xmm0
  41764f:	lea    rcx,[rip+0x5ca]        # 417c20 <isspace@plt+0x14310>
  417656:	mov    QWORD PTR [rax+0x18],rcx
  41765a:	lea    rcx,[rip+0x93f]        # 417fa0 <isspace@plt+0x14690>
  417661:	vmovq  xmm0,rcx
  417666:	lea    rcx,[rip+0x883]        # 417ef0 <isspace@plt+0x145e0>
  41766d:	vmovq  xmm1,rcx
  417672:	vpunpcklqdq xmm0,xmm1,xmm0
  417676:	vmovdqu XMMWORD PTR [rax+0x20],xmm0
  41767b:	lea    rcx,[rip+0x98e]        # 418010 <isspace@plt+0x14700>
  417682:	mov    QWORD PTR [rax+0x30],rcx
  417686:	lea    rcx,[rip+0xb33]        # 4181c0 <isspace@plt+0x148b0>
  41768d:	vmovq  xmm0,rcx
  417692:	lea    rcx,[rip+0xaa7]        # 418140 <isspace@plt+0x14830>
  417699:	vmovq  xmm1,rcx
  41769e:	vpunpcklqdq xmm0,xmm1,xmm0
  4176a2:	vmovdqu XMMWORD PTR [rax+0x38],xmm0
  4176a7:	lea    rcx,[rip+0xbd2]        # 418280 <isspace@plt+0x14970>
  4176ae:	mov    QWORD PTR [rax+0x48],rcx
  4176b2:	lea    rcx,[rip+0xc07]        # 4182c0 <isspace@plt+0x149b0>
  4176b9:	mov    QWORD PTR [rax+0x50],rcx
  4176bd:	lea    rcx,[rip+0x17bc]        # 418e80 <isspace@plt+0x15570>
  4176c4:	vmovq  xmm0,rcx
  4176c9:	lea    rcx,[rip+0xfa0]        # 418670 <isspace@plt+0x14d60>
  4176d0:	vmovq  xmm1,rcx
  4176d5:	vpunpcklqdq xmm0,xmm1,xmm0
  4176d9:	vmovdqu XMMWORD PTR [rax+0x58],xmm0
  4176de:	lea    rcx,[rip+0x181b]        # 418f00 <isspace@plt+0x155f0>
  4176e5:	mov    QWORD PTR [rax+0x68],rcx
  4176e9:	lea    rcx,[rip+0x1880]        # 418f70 <isspace@plt+0x15660>
  4176f0:	mov    QWORD PTR [rax+0x70],rcx
  4176f4:	lea    rcx,[rip+0x18a5]        # 418fa0 <isspace@plt+0x15690>
  4176fb:	mov    QWORD PTR [rax+0x78],rcx
  4176ff:	lea    rcx,[rip+0x1a5a]        # 419160 <isspace@plt+0x15850>
  417706:	vmovq  xmm0,rcx
  41770b:	lea    rcx,[rip+0x19fe]        # 419110 <isspace@plt+0x15800>
  417712:	vmovq  xmm1,rcx
  417717:	vpunpcklqdq xmm0,xmm1,xmm0
  41771b:	vmovdqu XMMWORD PTR [rax+0x80],xmm0
  417723:	lea    rcx,[rip+0x1a86]        # 4191b0 <isspace@plt+0x158a0>
  41772a:	mov    QWORD PTR [rax+0x90],rcx
  417731:	lea    rcx,[rip+0x1aa8]        # 4191e0 <isspace@plt+0x158d0>
  417738:	mov    QWORD PTR [rax+0x98],rcx
  41773f:	jmp    41774b <isspace@plt+0x13e3b>
  417741:	mov    rdi,rbx
  417744:	call   4030d0 <free@plt>
  417749:	xor    eax,eax
  41774b:	mov    rcx,QWORD PTR fs:0x28
  417754:	cmp    rcx,QWORD PTR [rsp+0x8]
  417759:	jne    417761 <isspace@plt+0x13e51>
  41775b:	add    rsp,0x10
  41775f:	pop    rbx
  417760:	ret    
  417761:	call   403280 <__stack_chk_fail@plt>
  417766:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417770:	push   rbp
  417771:	push   r15
  417773:	push   r14
  417775:	push   r13
  417777:	push   r12
  417779:	push   rbx
  41777a:	push   rax
  41777b:	mov    r12,rdi
  41777e:	mov    rax,QWORD PTR fs:0x28
  417787:	mov    QWORD PTR [rsp],rax
  41778b:	mov    QWORD PTR [rdi+0xa0],rsi
  417792:	lea    r14,[rip+0x192fa]        # 430a93 <isspace@plt+0x2d183>
  417799:	xor    edi,edi
  41779b:	mov    rsi,r14
  41779e:	call   4036e0 <setlocale@plt>
  4177a3:	lea    rdi,[rip+0x19206]        # 4309b0 <isspace@plt+0x2d0a0>
  4177aa:	call   403060 <getenv@plt>
  4177af:	mov    rbx,rax
  4177b2:	test   rax,rax
  4177b5:	jne    4177d2 <isspace@plt+0x13ec2>
  4177b7:	lea    rdi,[rip+0x191f2]        # 4309b0 <isspace@plt+0x2d0a0>
  4177be:	lea    rbx,[rip+0x191f0]        # 4309b5 <isspace@plt+0x2d0a5>
  4177c5:	mov    rsi,rbx
  4177c8:	mov    edx,0x1
  4177cd:	call   4031e0 <setenv@plt>
  4177d2:	call   403130 <__errno_location@plt>
  4177d7:	mov    r15,rax
  4177da:	mov    DWORD PTR [rax],0x0
  4177e0:	xor    edi,edi
  4177e2:	mov    esi,0x18
  4177e7:	call   403760 <termkey_new@plt>
  4177ec:	test   rax,rax
  4177ef:	je     41780e <isspace@plt+0x13efe>
  4177f1:	mov    rbp,rax
  4177f4:	mov    rdi,rax
  4177f7:	mov    esi,0x2
  4177fc:	call   403390 <termkey_set_canonflags@plt>
  417801:	mov    QWORD PTR [r12+0x4c8],rbp
  417809:	jmp    4178b0 <isspace@plt+0x13fa0>
  41780e:	mov    QWORD PTR [r12+0x4c8],0x0
  41781a:	mov    edi,DWORD PTR [r15]
  41781d:	cmp    edi,0x9
  417820:	jne    4179a2 <isspace@plt+0x14092>
  417826:	mov    DWORD PTR [r15],0x0
  41782d:	lea    rdi,[rip+0x1497f]        # 42c1b3 <isspace@plt+0x288a3>
  417834:	mov    esi,0x2
  417839:	xor    eax,eax
  41783b:	call   4037a0 <open@plt>
  417840:	cmp    eax,0xffffffff
  417843:	je     41787a <isspace@plt+0x13f6a>
  417845:	mov    ebp,eax
  417847:	test   eax,eax
  417849:	je     417859 <isspace@plt+0x13f49>
  41784b:	mov    edi,ebp
  41784d:	xor    esi,esi
  41784f:	call   4032c0 <dup2@plt>
  417854:	cmp    eax,0xffffffff
  417857:	je     417873 <isspace@plt+0x13f63>
  417859:	mov    edi,ebp
  41785b:	call   4033c0 <close@plt>
  417860:	xor    edi,edi
  417862:	mov    esi,0x18
  417867:	call   403760 <termkey_new@plt>
  41786c:	test   rax,rax
  41786f:	jne    4177f1 <isspace@plt+0x13ee1>
  417871:	jmp    41787a <isspace@plt+0x13f6a>
  417873:	mov    edi,ebp
  417875:	call   4033c0 <close@plt>
  41787a:	mov    QWORD PTR [r12+0x4c8],0x0
  417886:	mov    edi,DWORD PTR [r15]
  417889:	cmp    edi,0x6
  41788c:	jne    4179a2 <isspace@plt+0x14092>
  417892:	mov    rdi,rbx
  417895:	mov    esi,0x18
  41789a:	call   403220 <termkey_new_abstract@plt>
  41789f:	mov    QWORD PTR [r12+0x4c8],rax
  4178a7:	test   rax,rax
  4178aa:	je     41799f <isspace@plt+0x1408f>
  4178b0:	mov    r13,QWORD PTR [rip+0x2a741]        # 441ff8 <isspace@plt+0x3e6e8>
  4178b7:	mov    rsi,QWORD PTR [r13+0x0]
  4178bb:	mov    rbp,QWORD PTR [rip+0x2a6ce]        # 441f90 <isspace@plt+0x3e680>
  4178c2:	mov    rdx,QWORD PTR [rbp+0x0]
  4178c6:	mov    rdi,rbx
  4178c9:	call   403210 <newterm@plt>
  4178ce:	test   rax,rax
  4178d1:	jne    417931 <isspace@plt+0x14021>
  4178d3:	lea    rdi,[r12+0xb8]
  4178db:	lea    r8,[rip+0x190ff]        # 4309e1 <isspace@plt+0x2d0d1>
  4178e2:	mov    esi,0x400
  4178e7:	mov    ecx,0x400
  4178ec:	mov    edx,0x1
  4178f1:	mov    r9,rbx
  4178f4:	xor    eax,eax
  4178f6:	call   4030c0 <__snprintf_chk@plt>
  4178fb:	lea    rsi,[rip+0x190ff]        # 430a01 <isspace@plt+0x2d0f1>
  417902:	mov    rdi,rbx
  417905:	call   4038e0 <strstr@plt>
  41790a:	test   rax,rax
  41790d:	lea    rax,[rip+0x190a1]        # 4309b5 <isspace@plt+0x2d0a5>
  417914:	lea    rdi,[rip+0x190e1]        # 4309fc <isspace@plt+0x2d0ec>
  41791b:	cmove  rdi,rax
  41791f:	mov    rsi,QWORD PTR [r13+0x0]
  417923:	mov    rdx,QWORD PTR [rbp+0x0]
  417927:	call   403210 <newterm@plt>
  41792c:	test   rax,rax
  41792f:	je     41799f <isspace@plt+0x1408f>
  417931:	call   403030 <start_color@plt>
  417936:	call   403040 <use_default_colors@plt>
  41793b:	call   4035b0 <cbreak@plt>
  417940:	call   403070 <noecho@plt>
  417945:	call   4037f0 <nonl@plt>
  41794a:	mov    rbx,QWORD PTR [rip+0x2a65f]        # 441fb0 <isspace@plt+0x3e6a0>
  417951:	mov    rdi,QWORD PTR [rbx]
  417954:	mov    esi,0x1
  417959:	call   4033e0 <keypad@plt>
  41795e:	mov    rdi,QWORD PTR [rbx]
  417961:	mov    esi,0x1
  417966:	call   403570 <meta@plt>
  41796b:	xor    edi,edi
  41796d:	call   403180 <curs_set@plt>
  417972:	mov    rdi,r12
  417975:	call   417af0 <isspace@plt+0x141e0>
  41797a:	mov    rax,QWORD PTR fs:0x28
  417983:	cmp    rax,QWORD PTR [rsp]
  417987:	jne    41799a <isspace@plt+0x1408a>
  417989:	mov    al,0x1
  41798b:	add    rsp,0x8
  41798f:	pop    rbx
  417990:	pop    r12
  417992:	pop    r13
  417994:	pop    r14
  417996:	pop    r15
  417998:	pop    rbp
  417999:	ret    
  41799a:	call   403280 <__stack_chk_fail@plt>
  41799f:	mov    edi,DWORD PTR [r15]
  4179a2:	test   edi,edi
  4179a4:	je     4179ae <isspace@plt+0x1409e>
  4179a6:	call   403880 <strerror@plt>
  4179ab:	mov    r14,rax
  4179ae:	lea    rsi,[rip+0x19006]        # 4309bb <isspace@plt+0x2d0ab>
  4179b5:	mov    rdi,r12
  4179b8:	mov    rdx,r14
  4179bb:	xor    eax,eax
  4179bd:	call   419210 <isspace@plt+0x15900>
  4179c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4179cc:	nop    DWORD PTR [rax+0x0]
  4179d0:	push   r14
  4179d2:	push   rbx
  4179d3:	push   rax
  4179d4:	mov    rax,QWORD PTR fs:0x28
  4179dd:	mov    QWORD PTR [rsp],rax
  4179e1:	test   rdi,rdi
  4179e4:	je     417aa9 <isspace@plt+0x14199>
  4179ea:	mov    rbx,rdi
  4179ed:	jmp    417a12 <isspace@plt+0x14102>
  4179ef:	nop
  4179f0:	vxorps xmm0,xmm0,xmm0
  4179f4:	vmovups XMMWORD PTR [rcx],xmm0
  4179f8:	movzx  ecx,BYTE PTR [rdi+0x48]
  4179fc:	mov    rdx,0xfffffffffffffffe
  417a03:	rol    rdx,cl
  417a06:	and    QWORD PTR [rax+0x4d0],rdx
  417a0d:	call   4030d0 <free@plt>
  417a12:	mov    rdi,QWORD PTR [rbx+0xa8]
  417a19:	test   rdi,rdi
  417a1c:	je     417a6a <isspace@plt+0x1415a>
  417a1e:	mov    rax,QWORD PTR [rdi+0x38]
  417a22:	mov    rcx,QWORD PTR [rdi+0x68]
  417a26:	test   rcx,rcx
  417a29:	je     417a33 <isspace@plt+0x14123>
  417a2b:	mov    rdx,QWORD PTR [rdi+0x60]
  417a2f:	mov    QWORD PTR [rcx+0x60],rdx
  417a33:	mov    rdx,QWORD PTR [rdi+0x60]
  417a37:	test   rdx,rdx
  417a3a:	je     417a40 <isspace@plt+0x14130>
  417a3c:	mov    QWORD PTR [rdx+0x68],rcx
  417a40:	cmp    QWORD PTR [rax+0xa8],rdi
  417a47:	jne    417a50 <isspace@plt+0x14140>
  417a49:	mov    QWORD PTR [rax+0xa8],rdx
  417a50:	lea    rcx,[rdi+0x60]
  417a54:	cmp    QWORD PTR [rax+0xb0],rdi
  417a5b:	jne    4179f0 <isspace@plt+0x140e0>
  417a5d:	mov    QWORD PTR [rax+0xb0],0x0
  417a68:	jmp    4179f0 <isspace@plt+0x140e0>
  417a6a:	cmp    DWORD PTR [rip+0x2a65f],0x1        # 4420d0 <isspace@plt+0x3e7c0>
  417a71:	je     417ac0 <isspace@plt+0x141b0>
  417a73:	call   4038b0 <endwin@plt>
  417a78:	mov    rdi,QWORD PTR [rbx+0x4c8]
  417a7f:	test   rdi,rdi
  417a82:	je     417a89 <isspace@plt+0x14179>
  417a84:	call   4036f0 <termkey_destroy@plt>
  417a89:	mov    rdi,QWORD PTR [rbx+0x4f0]
  417a90:	call   4030d0 <free@plt>
  417a95:	mov    rdi,QWORD PTR [rbx+0x4e0]
  417a9c:	call   4030d0 <free@plt>
  417aa1:	mov    rdi,rbx
  417aa4:	call   4030d0 <free@plt>
  417aa9:	mov    rax,QWORD PTR fs:0x28
  417ab2:	cmp    rax,QWORD PTR [rsp]
  417ab6:	jne    417aea <isspace@plt+0x141da>
  417ab8:	add    rsp,0x8
  417abc:	pop    rbx
  417abd:	pop    r14
  417abf:	ret    
  417ac0:	mov    r14,QWORD PTR [rip+0x2a531]        # 441ff8 <isspace@plt+0x3e6e8>
  417ac7:	mov    rcx,QWORD PTR [r14]
  417aca:	lea    rdi,[rip+0x18fbb]        # 430a8c <isspace@plt+0x2d17c>
  417ad1:	mov    esi,0x7
  417ad6:	mov    edx,0x1
  417adb:	call   403810 <fwrite@plt>
  417ae0:	mov    rdi,QWORD PTR [r14]
  417ae3:	call   4035e0 <fflush@plt>
  417ae8:	jmp    417a73 <isspace@plt+0x14163>
  417aea:	call   403280 <__stack_chk_fail@plt>
  417aef:	nop
  417af0:	push   rbp
  417af1:	push   r15
  417af3:	push   r14
  417af5:	push   r12
  417af7:	push   rbx
  417af8:	sub    rsp,0x10
  417afc:	mov    r14,rdi
  417aff:	mov    rax,QWORD PTR fs:0x28
  417b08:	mov    QWORD PTR [rsp+0x8],rax
  417b0d:	mov    rdx,rsp
  417b10:	mov    esi,0x5413
  417b15:	mov    edi,0x2
  417b1a:	xor    eax,eax
  417b1c:	call   4033a0 <ioctl@plt>
  417b21:	cmp    eax,0xffffffff
  417b24:	je     417b4f <isspace@plt+0x1423f>
  417b26:	movzx  ecx,WORD PTR [rsp+0x2]
  417b2b:	mov    eax,DWORD PTR [rsp]
  417b2e:	test   ax,ax
  417b31:	mov    edx,0x18
  417b36:	cmovne edx,eax
  417b39:	movzx  eax,dx
  417b3c:	test   ecx,ecx
  417b3e:	je     417b54 <isspace@plt+0x14244>
  417b40:	mov    ebp,0x400
  417b45:	cmp    ecx,0x3ff
  417b4b:	jbe    417b59 <isspace@plt+0x14249>
  417b4d:	jmp    417b5b <isspace@plt+0x1424b>
  417b4f:	mov    eax,0x18
  417b54:	mov    ecx,0x50
  417b59:	mov    ebp,ecx
  417b5b:	cmp    eax,0x400
  417b60:	mov    ebx,0x400
  417b65:	cmovb  ebx,eax
  417b68:	mov    edi,ebx
  417b6a:	mov    esi,ebp
  417b6c:	call   403430 <resizeterm@plt>
  417b71:	test   eax,eax
  417b73:	jne    417bf1 <isspace@plt+0x142e1>
  417b75:	mov    rax,QWORD PTR [rip+0x2a434]        # 441fb0 <isspace@plt+0x3e6a0>
  417b7c:	mov    rdi,QWORD PTR [rax]
  417b7f:	mov    esi,ebx
  417b81:	mov    edx,ebp
  417b83:	call   4037d0 <wresize@plt>
  417b88:	test   eax,eax
  417b8a:	jne    417bf1 <isspace@plt+0x142e1>
  417b8c:	mov    eax,ebx
  417b8e:	imul   eax,ebp
  417b91:	cdqe   
  417b93:	shl    rax,0x4
  417b97:	lea    r15,[rax+rax*2]
  417b9b:	cmp    r15,QWORD PTR [r14+0x4e8]
  417ba2:	jbe    417be3 <isspace@plt+0x142d3>
  417ba4:	mov    rdi,QWORD PTR [r14+0x4f0]
  417bab:	mov    rsi,r15
  417bae:	call   4036b0 <realloc@plt>
  417bb3:	test   rax,rax
  417bb6:	je     417bf1 <isspace@plt+0x142e1>
  417bb8:	mov    r12,rax
  417bbb:	mov    rax,QWORD PTR [r14+0x4e8]
  417bc2:	mov    rdi,r12
  417bc5:	add    rdi,rax
  417bc8:	mov    rdx,r15
  417bcb:	sub    rdx,rax
  417bce:	xor    esi,esi
  417bd0:	call   403360 <memset@plt>
  417bd5:	mov    QWORD PTR [r14+0x4e8],r15
  417bdc:	mov    QWORD PTR [r14+0x4f0],r12
  417be3:	mov    DWORD PTR [r14+0x4b8],ebp
  417bea:	mov    DWORD PTR [r14+0x4bc],ebx
  417bf1:	mov    rax,QWORD PTR fs:0x28
  417bfa:	cmp    rax,QWORD PTR [rsp+0x8]
  417bff:	jne    417c0e <isspace@plt+0x142fe>
  417c01:	add    rsp,0x10
  417c05:	pop    rbx
  417c06:	pop    r12
  417c08:	pop    r14
  417c0a:	pop    r15
  417c0c:	pop    rbp
  417c0d:	ret    
  417c0e:	call   403280 <__stack_chk_fail@plt>
  417c13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417c1d:	nop    DWORD PTR [rax]
  417c20:	push   rbp
  417c21:	push   r15
  417c23:	push   r14
  417c25:	push   r13
  417c27:	push   r12
  417c29:	push   rbx
  417c2a:	push   rax
  417c2b:	mov    r14d,edx
  417c2e:	mov    r15,rsi
  417c31:	mov    r12,rdi
  417c34:	mov    rax,QWORD PTR fs:0x28
  417c3d:	mov    QWORD PTR [rsp],rax
  417c41:	mov    rax,QWORD PTR [rdi+0x4d0]
  417c48:	lea    rcx,[rax+0x1]
  417c4c:	andn   r13,rax,rcx
  417c51:	mov    rax,r13
  417c54:	shr    rax,1
  417c57:	lzcnt  rax,rax
  417c5c:	mov    ebp,0x40
  417c61:	sub    rbp,rax
  417c64:	imul   rbx,rbp,0x4e0
  417c6b:	add    rbx,0x4e0
  417c72:	cmp    rbx,QWORD PTR [rdi+0x4d8]
  417c79:	jbe    417ca4 <isspace@plt+0x14394>
  417c7b:	mov    rdi,QWORD PTR [r12+0x4e0]
  417c83:	mov    rsi,rbx
  417c86:	call   4036b0 <realloc@plt>
  417c8b:	test   rax,rax
  417c8e:	je     417e53 <isspace@plt+0x14543>
  417c94:	mov    QWORD PTR [r12+0x4e0],rax
  417c9c:	mov    QWORD PTR [r12+0x4d8],rbx
  417ca4:	mov    edi,0x1
  417ca9:	mov    esi,0x78
  417cae:	call   403460 <calloc@plt>
  417cb3:	test   rax,rax
  417cb6:	je     417e53 <isspace@plt+0x14543>
  417cbc:	mov    rbx,rax
  417cbf:	lea    rax,[rip+0x15da]        # 4192a0 <isspace@plt+0x15990>
  417cc6:	mov    QWORD PTR [rbx],rax
  417cc9:	lea    rax,[rip+0x1620]        # 4192f0 <isspace@plt+0x159e0>
  417cd0:	mov    QWORD PTR [rbx+0x8],rax
  417cd4:	lea    rax,[rip+0x1775]        # 419450 <isspace@plt+0x15b40>
  417cdb:	mov    QWORD PTR [rbx+0x10],rax
  417cdf:	lea    rax,[rip+0x180a]        # 4194f0 <isspace@plt+0x15be0>
  417ce6:	mov    QWORD PTR [rbx+0x18],rax
  417cea:	lea    rax,[rip+0x182f]        # 419520 <isspace@plt+0x15c10>
  417cf1:	mov    QWORD PTR [rbx+0x20],rax
  417cf5:	lea    rax,[rip+0x1b64]        # 419860 <isspace@plt+0x15f50>
  417cfc:	vmovq  xmm0,rax
  417d01:	lea    rax,[rip+0x1b28]        # 419830 <isspace@plt+0x15f20>
  417d08:	vmovq  xmm1,rax
  417d0d:	vpunpcklqdq xmm0,xmm1,xmm0
  417d11:	vmovdqu XMMWORD PTR [rbx+0x28],xmm0
  417d16:	or     QWORD PTR [r12+0x4d0],r13
  417d1e:	mov    DWORD PTR [rbx+0x48],ebp
  417d21:	mov    QWORD PTR [rbx+0x38],r12
  417d25:	mov    QWORD PTR [rbx+0x40],r15
  417d29:	movabs rax,0x4e00000000
  417d33:	imul   rax,rbp
  417d37:	sar    rax,0x1c
  417d3b:	add    rax,QWORD PTR [r12+0x4e0]
  417d43:	mov    ecx,0x5a
  417d48:	nop    DWORD PTR [rax+rax*1+0x0]
  417d50:	mov    QWORD PTR [rax+rcx*1-0x5a],0x0
  417d59:	mov    DWORD PTR [rax+rcx*1-0x52],0xffffffff
  417d61:	mov    QWORD PTR [rax+rcx*1-0x4a],0x0
  417d6a:	mov    DWORD PTR [rax+rcx*1-0x42],0xffffffff
  417d72:	mov    QWORD PTR [rax+rcx*1-0x3a],0x0
  417d7b:	mov    DWORD PTR [rax+rcx*1-0x32],0xffffffff
  417d83:	mov    QWORD PTR [rax+rcx*1-0x2a],0x0
  417d8c:	mov    DWORD PTR [rax+rcx*1-0x22],0xffffffff
  417d94:	mov    QWORD PTR [rax+rcx*1-0x1a],0x0
  417d9d:	mov    DWORD PTR [rax+rcx*1-0x12],0xffffffff
  417da5:	mov    QWORD PTR [rax+rcx*1-0xa],0x0
  417dae:	mov    DWORD PTR [rax+rcx*1-0x2],0xffffffff
  417db6:	add    rcx,0x60
  417dba:	cmp    rcx,0x53a
  417dc1:	jne    417d50 <isspace@plt+0x14440>
  417dc3:	or     BYTE PTR [rax+0x422],0x4
  417dca:	or     BYTE PTR [rax+0x432],0xc
  417dd1:	or     BYTE PTR [rax+0x452],0x4
  417dd8:	or     BYTE PTR [rax+0x482],0x4
  417ddf:	or     BYTE PTR [rax+0x492],0x4
  417de6:	or     BYTE PTR [rax+0x4a2],0x24
  417ded:	or     BYTE PTR [rax+0x4c2],0x20
  417df4:	mov    rdi,QWORD PTR [r15+0x18]
  417df8:	mov    rsi,rbx
  417dfb:	call   41b660 <isspace@plt+0x17d50>
  417e00:	mov    rax,QWORD PTR [r12+0xa8]
  417e08:	test   rax,rax
  417e0b:	je     417e11 <isspace@plt+0x14501>
  417e0d:	mov    QWORD PTR [rax+0x68],rbx
  417e11:	mov    QWORD PTR [rbx+0x60],rax
  417e15:	mov    QWORD PTR [r12+0xa8],rbx
  417e1d:	mov    rax,QWORD PTR [r15+0x10]
  417e21:	mov    rdi,QWORD PTR [rax]
  417e24:	call   410890 <isspace@plt+0xcf80>
  417e29:	mov    ecx,r14d
  417e2c:	and    ecx,0xfffffbfe
  417e32:	or     ecx,0x400
  417e38:	cmp    rax,0x2000000
  417e3e:	cmovbe ecx,r14d
  417e42:	mov    DWORD PTR [rbx+0x70],ecx
  417e45:	test   ecx,0x200
  417e4b:	jne    417e57 <isspace@plt+0x14547>
  417e4d:	mov    rdi,QWORD PTR [rbx+0x38]
  417e51:	jmp    417ebb <isspace@plt+0x145ab>
  417e53:	xor    ebx,ebx
  417e55:	jmp    417ec0 <isspace@plt+0x145b0>
  417e57:	mov    rdi,QWORD PTR [rbx+0x38]
  417e5b:	mov    rcx,QWORD PTR [rdi+0xa8]
  417e62:	mov    rdx,rcx
  417e65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417e6f:	nop
  417e70:	mov    rax,rdx
  417e73:	mov    rdx,QWORD PTR [rdx+0x60]
  417e77:	test   rdx,rdx
  417e7a:	jne    417e70 <isspace@plt+0x14560>
  417e7c:	cmp    rax,rbx
  417e7f:	je     417ebb <isspace@plt+0x145ab>
  417e81:	mov    rdx,QWORD PTR [rbx+0x68]
  417e85:	test   rdx,rdx
  417e88:	je     417e92 <isspace@plt+0x14582>
  417e8a:	mov    rsi,QWORD PTR [rbx+0x60]
  417e8e:	mov    QWORD PTR [rdx+0x60],rsi
  417e92:	mov    rsi,QWORD PTR [rbx+0x60]
  417e96:	test   rsi,rsi
  417e99:	je     417e9f <isspace@plt+0x1458f>
  417e9b:	mov    QWORD PTR [rsi+0x68],rdx
  417e9f:	cmp    rcx,rbx
  417ea2:	jne    417eab <isspace@plt+0x1459b>
  417ea4:	mov    QWORD PTR [rdi+0xa8],rsi
  417eab:	mov    QWORD PTR [rax+0x60],rbx
  417eaf:	mov    QWORD PTR [rbx+0x68],rax
  417eb3:	mov    QWORD PTR [rbx+0x60],0x0
  417ebb:	call   418670 <isspace@plt+0x14d60>
  417ec0:	mov    rax,QWORD PTR fs:0x28
  417ec9:	cmp    rax,QWORD PTR [rsp]
  417ecd:	jne    417ee1 <isspace@plt+0x145d1>
  417ecf:	mov    rax,rbx
  417ed2:	add    rsp,0x8
  417ed6:	pop    rbx
  417ed7:	pop    r12
  417ed9:	pop    r13
  417edb:	pop    r14
  417edd:	pop    r15
  417edf:	pop    rbp
  417ee0:	ret    
  417ee1:	call   403280 <__stack_chk_fail@plt>
  417ee6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417ef0:	push   rax
  417ef1:	mov    rax,QWORD PTR fs:0x28
  417efa:	mov    QWORD PTR [rsp],rax
  417efe:	test   rdi,rdi
  417f01:	je     417f7f <isspace@plt+0x1466f>
  417f03:	mov    rax,QWORD PTR [rdi+0x38]
  417f07:	mov    rcx,QWORD PTR [rdi+0x68]
  417f0b:	test   rcx,rcx
  417f0e:	je     417f18 <isspace@plt+0x14608>
  417f10:	mov    rdx,QWORD PTR [rdi+0x60]
  417f14:	mov    QWORD PTR [rcx+0x60],rdx
  417f18:	mov    rdx,QWORD PTR [rdi+0x60]
  417f1c:	test   rdx,rdx
  417f1f:	je     417f25 <isspace@plt+0x14615>
  417f21:	mov    QWORD PTR [rdx+0x68],rcx
  417f25:	cmp    QWORD PTR [rax+0xa8],rdi
  417f2c:	jne    417f35 <isspace@plt+0x14625>
  417f2e:	mov    QWORD PTR [rax+0xa8],rdx
  417f35:	lea    rcx,[rdi+0x60]
  417f39:	cmp    QWORD PTR [rax+0xb0],rdi
  417f40:	jne    417f4d <isspace@plt+0x1463d>
  417f42:	mov    QWORD PTR [rax+0xb0],0x0
  417f4d:	vxorps xmm0,xmm0,xmm0
  417f51:	vmovups XMMWORD PTR [rcx],xmm0
  417f55:	mov    cl,BYTE PTR [rdi+0x48]
  417f58:	mov    rdx,0xfffffffffffffffe
  417f5f:	rol    rdx,cl
  417f62:	and    QWORD PTR [rax+0x4d0],rdx
  417f69:	call   4030d0 <free@plt>
  417f6e:	mov    rax,QWORD PTR fs:0x28
  417f77:	cmp    rax,QWORD PTR [rsp]
  417f7b:	jne    417f90 <isspace@plt+0x14680>
  417f7d:	pop    rax
  417f7e:	ret    
  417f7f:	mov    rax,QWORD PTR fs:0x28
  417f88:	cmp    rax,QWORD PTR [rsp]
  417f8c:	jne    417f90 <isspace@plt+0x14680>
  417f8e:	pop    rax
  417f8f:	ret    
  417f90:	call   403280 <__stack_chk_fail@plt>
  417f95:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417f9f:	nop
  417fa0:	push   rbx
  417fa1:	sub    rsp,0x10
  417fa5:	mov    rbx,rdi
  417fa8:	mov    rax,QWORD PTR fs:0x28
  417fb1:	mov    QWORD PTR [rsp+0x8],rax
  417fb6:	mov    rcx,QWORD PTR [rdi+0x38]
  417fba:	mov    rax,QWORD PTR [rcx+0xb0]
  417fc1:	test   BYTE PTR [rdi+0x71],0x1
  417fc5:	je     417fce <isspace@plt+0x146be>
  417fc7:	mov    QWORD PTR [rcx+0xb0],rbx
  417fce:	test   rax,rax
  417fd1:	je     417fe0 <isspace@plt+0x146d0>
  417fd3:	mov    rax,QWORD PTR [rax+0x40]
  417fd7:	mov    rdi,QWORD PTR [rax+0x18]
  417fdb:	call   41af50 <isspace@plt+0x17640>
  417fe0:	mov    rax,QWORD PTR [rbx+0x40]
  417fe4:	mov    rdi,QWORD PTR [rax+0x18]
  417fe8:	call   41af50 <isspace@plt+0x17640>
  417fed:	mov    rax,QWORD PTR fs:0x28
  417ff6:	cmp    rax,QWORD PTR [rsp+0x8]
  417ffb:	jne    418003 <isspace@plt+0x146f3>
  417ffd:	add    rsp,0x10
  418001:	pop    rbx
  418002:	ret    
  418003:	call   403280 <__stack_chk_fail@plt>
  418008:	nop    DWORD PTR [rax+rax*1+0x0]
  418010:	push   r14
  418012:	push   rbx
  418013:	push   rax
  418014:	mov    rax,QWORD PTR fs:0x28
  41801d:	mov    QWORD PTR [rsp],rax
  418021:	test   rsi,rsi
  418024:	je     418119 <isspace@plt+0x14809>
  41802a:	mov    rbx,rdi
  41802d:	test   rdi,rdi
  418030:	je     418119 <isspace@plt+0x14809>
  418036:	mov    r14,rsi
  418039:	cmp    rbx,rsi
  41803c:	je     418119 <isspace@plt+0x14809>
  418042:	mov    rax,QWORD PTR [rbx+0x38]
  418046:	mov    rcx,QWORD PTR [rbx+0x60]
  41804a:	mov    rdx,QWORD PTR [r14+0x60]
  41804e:	mov    QWORD PTR [rbx+0x60],rdx
  418052:	mov    QWORD PTR [r14+0x60],rcx
  418056:	mov    rdx,QWORD PTR [rbx+0x60]
  41805a:	test   rdx,rdx
  41805d:	je     418063 <isspace@plt+0x14753>
  41805f:	mov    QWORD PTR [rdx+0x68],rbx
  418063:	test   rcx,rcx
  418066:	je     41806c <isspace@plt+0x1475c>
  418068:	mov    QWORD PTR [rcx+0x68],r14
  41806c:	mov    rcx,QWORD PTR [rbx+0x68]
  418070:	mov    rdx,QWORD PTR [r14+0x68]
  418074:	mov    QWORD PTR [rbx+0x68],rdx
  418078:	mov    QWORD PTR [r14+0x68],rcx
  41807c:	mov    rdx,QWORD PTR [rbx+0x68]
  418080:	test   rdx,rdx
  418083:	je     418089 <isspace@plt+0x14779>
  418085:	mov    QWORD PTR [rdx+0x60],rbx
  418089:	test   rcx,rcx
  41808c:	je     418092 <isspace@plt+0x14782>
  41808e:	mov    QWORD PTR [rcx+0x60],r14
  418092:	mov    rdx,QWORD PTR [rax+0xa8]
  418099:	mov    rcx,r14
  41809c:	cmp    rdx,rbx
  41809f:	je     4180a9 <isspace@plt+0x14799>
  4180a1:	mov    rcx,rbx
  4180a4:	cmp    rdx,r14
  4180a7:	jne    4180b0 <isspace@plt+0x147a0>
  4180a9:	mov    QWORD PTR [rax+0xa8],rcx
  4180b0:	mov    rcx,QWORD PTR [rax+0xb0]
  4180b7:	cmp    rcx,rbx
  4180ba:	je     4180e1 <isspace@plt+0x147d1>
  4180bc:	cmp    rcx,r14
  4180bf:	jne    418119 <isspace@plt+0x14809>
  4180c1:	test   BYTE PTR [rbx+0x71],0x1
  4180c5:	je     4180ce <isspace@plt+0x147be>
  4180c7:	mov    QWORD PTR [rax+0xb0],rbx
  4180ce:	mov    rax,QWORD PTR [r14+0x40]
  4180d2:	mov    rdi,QWORD PTR [rax+0x18]
  4180d6:	call   41af50 <isspace@plt+0x17640>
  4180db:	mov    rax,QWORD PTR [rbx+0x40]
  4180df:	jmp    418110 <isspace@plt+0x14800>
  4180e1:	mov    rcx,QWORD PTR [r14+0x38]
  4180e5:	mov    rax,QWORD PTR [rcx+0xb0]
  4180ec:	test   BYTE PTR [r14+0x71],0x1
  4180f1:	je     4180fa <isspace@plt+0x147ea>
  4180f3:	mov    QWORD PTR [rcx+0xb0],r14
  4180fa:	test   rax,rax
  4180fd:	je     41810c <isspace@plt+0x147fc>
  4180ff:	mov    rax,QWORD PTR [rax+0x40]
  418103:	mov    rdi,QWORD PTR [rax+0x18]
  418107:	call   41af50 <isspace@plt+0x17640>
  41810c:	mov    rax,QWORD PTR [r14+0x40]
  418110:	mov    rdi,QWORD PTR [rax+0x18]
  418114:	call   41af50 <isspace@plt+0x17640>
  418119:	mov    rax,QWORD PTR fs:0x28
  418122:	cmp    rax,QWORD PTR [rsp]
  418126:	jne    418130 <isspace@plt+0x14820>
  418128:	add    rsp,0x8
  41812c:	pop    rbx
  41812d:	pop    r14
  41812f:	ret    
  418130:	call   403280 <__stack_chk_fail@plt>
  418135:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41813f:	nop
  418140:	push   r15
  418142:	push   r14
  418144:	push   r12
  418146:	push   rbx
  418147:	push   rax
  418148:	mov    r14,rdx
  41814b:	mov    r15,rsi
  41814e:	mov    rbx,rdi
  418151:	cmp    DWORD PTR [rip+0x29f78],0x1        # 4420d0 <isspace@plt+0x3e7c0>
  418158:	jne    418184 <isspace@plt+0x14874>
  41815a:	mov    r12,QWORD PTR [rip+0x29e97]        # 441ff8 <isspace@plt+0x3e6e8>
  418161:	mov    rcx,QWORD PTR [r12]
  418165:	lea    rdi,[rip+0x18920]        # 430a8c <isspace@plt+0x2d17c>
  41816c:	mov    esi,0x7
  418171:	mov    edx,0x1
  418176:	call   403810 <fwrite@plt>
  41817b:	mov    rdi,QWORD PTR [r12]
  41817f:	call   4035e0 <fflush@plt>
  418184:	call   4038b0 <endwin@plt>
  418189:	mov    rdi,QWORD PTR [rbx+0x4c8]
  418190:	test   rdi,rdi
  418193:	je     41819a <isspace@plt+0x1488a>
  418195:	call   4030a0 <termkey_stop@plt>
  41819a:	mov    rax,QWORD PTR [rip+0x29e57]        # 441ff8 <isspace@plt+0x3e6e8>
  4181a1:	mov    rdi,QWORD PTR [rax]
  4181a4:	mov    esi,0x1
  4181a9:	mov    rdx,r15
  4181ac:	mov    rcx,r14
  4181af:	call   403120 <__vfprintf_chk@plt>
  4181b4:	mov    edi,0x1
  4181b9:	call   403800 <exit@plt>
  4181be:	xchg   ax,ax
  4181c0:	sub    rsp,0x18
  4181c4:	mov    r9,rdx
  4181c7:	mov    r8,rsi
  4181ca:	mov    rax,QWORD PTR fs:0x28
  4181d3:	mov    QWORD PTR [rsp+0x10],rax
  4181d8:	mov    eax,DWORD PTR [rdi+0x4bc]
  4181de:	test   eax,eax
  4181e0:	jle    418242 <isspace@plt+0x14932>
  4181e2:	mov    ecx,DWORD PTR [rdi+0x4b8]
  4181e8:	test   ecx,ecx
  4181ea:	jle    418242 <isspace@plt+0x14932>
  4181ec:	dec    eax
  4181ee:	mov    rdx,QWORD PTR [rdi+0x4e0]
  4181f5:	vmovups xmm0,XMMWORD PTR [rdx+0x4c0]
  4181fd:	vmovaps XMMWORD PTR [rsp],xmm0
  418202:	imul   ecx,eax
  418205:	movsxd rax,ecx
  418208:	lea    rax,[rax+rax*2]
  41820c:	shl    rax,0x4
  418210:	add    rax,QWORD PTR [rdi+0x4f0]
  418217:	xor    ecx,ecx
  418219:	nop    DWORD PTR [rax+0x0]
  418220:	mov    WORD PTR [rax],0x20
  418225:	vmovaps xmm0,XMMWORD PTR [rsp]
  41822a:	vmovups XMMWORD PTR [rax+0x20],xmm0
  41822f:	inc    rcx
  418232:	movsxd rdx,DWORD PTR [rdi+0x4b8]
  418239:	add    rax,0x30
  41823d:	cmp    rcx,rdx
  418240:	jl     418220 <isspace@plt+0x14910>
  418242:	add    rdi,0xb8
  418249:	mov    esi,0x400
  41824e:	mov    edx,0x1
  418253:	mov    rcx,0xffffffffffffffff
  41825a:	call   4036a0 <__vsnprintf_chk@plt>
  41825f:	mov    rax,QWORD PTR fs:0x28
  418268:	cmp    rax,QWORD PTR [rsp+0x10]
  41826d:	jne    418274 <isspace@plt+0x14964>
  41826f:	add    rsp,0x18
  418273:	ret    
  418274:	call   403280 <__stack_chk_fail@plt>
  418279:	nop    DWORD PTR [rax+0x0]
  418280:	push   rax
  418281:	mov    rax,QWORD PTR fs:0x28
  41828a:	mov    QWORD PTR [rsp],rax
  41828e:	cmp    BYTE PTR [rdi+0xb8],0x0
  418295:	je     41829e <isspace@plt+0x1498e>
  418297:	mov    BYTE PTR [rdi+0xb8],0x0
  41829e:	mov    rax,QWORD PTR fs:0x28
  4182a7:	cmp    rax,QWORD PTR [rsp]
  4182ab:	jne    4182af <isspace@plt+0x1499f>
  4182ad:	pop    rax
  4182ae:	ret    
  4182af:	call   403280 <__stack_chk_fail@plt>
  4182b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4182be:	xchg   ax,ax
  4182c0:	push   rbp
  4182c1:	push   r15
  4182c3:	push   r14
  4182c5:	push   r13
  4182c7:	push   r12
  4182c9:	push   rbx
  4182ca:	sub    rsp,0x28
  4182ce:	mov    rax,QWORD PTR fs:0x28
  4182d7:	mov    QWORD PTR [rsp+0x20],rax
  4182dc:	mov    DWORD PTR [rsp+0x18],esi
  4182e0:	mov    DWORD PTR [rdi+0x4c0],esi
  4182e6:	mov    rbp,QWORD PTR [rdi+0xa8]
  4182ed:	test   rbp,rbp
  4182f0:	je     41864c <isspace@plt+0x14d3c>
  4182f6:	mov    rbx,rdi
  4182f9:	xor    r15d,r15d
  4182fc:	cmp    BYTE PTR [rdi+0xb8],0x0
  418303:	setne  r15b
  418307:	xor    r12d,r12d
  41830a:	mov    rax,rbp
  41830d:	nop    DWORD PTR [rax]
  418310:	mov    r14d,r15d
  418313:	mov    ecx,DWORD PTR [rax+0x70]
  418316:	shr    ecx,0x9
  418319:	and    ecx,0x1
  41831c:	lea    r15d,[rcx+r14*1]
  418320:	mov    edx,ecx
  418322:	xor    edx,0x1
  418325:	add    r12d,edx
  418328:	mov    rax,QWORD PTR [rax+0x60]
  41832c:	test   rax,rax
  41832f:	jne    418310 <isspace@plt+0x14a00>
  418331:	mov    eax,DWORD PTR [rbx+0x4b8]
  418337:	mov    esi,DWORD PTR [rbx+0x4bc]
  41833d:	mov    r8d,esi
  418340:	sub    r8d,r15d
  418343:	cmp    r12d,0x1
  418347:	mov    edi,0x1
  41834c:	cmova  edi,r12d
  418350:	cdq    
  418351:	idiv   edi
  418353:	mov    r9d,eax
  418356:	mov    eax,r8d
  418359:	cdq    
  41835a:	idiv   edi
  41835c:	mov    DWORD PTR [rsp+0x1c],eax
  418360:	test   rbp,rbp
  418363:	je     41864c <isspace@plt+0x14d3c>
  418369:	dec    r9d
  41836c:	not    r15d
  41836f:	add    r15d,esi
  418372:	mov    eax,r8d
  418375:	and    eax,0x3
  418378:	sub    r14d,esi
  41837b:	mov    DWORD PTR [rsp+0x14],eax
  41837f:	add    r14d,eax
  418382:	add    r14d,ecx
  418385:	mov    DWORD PTR [rsp+0x8],0x0
  41838d:	mov    DWORD PTR [rsp+0x4],0x0
  418395:	mov    DWORD PTR [rsp+0xc],r9d
  41839a:	mov    DWORD PTR [rsp+0x10],r8d
  41839f:	jmp    41840d <isspace@plt+0x14afd>
  4183a1:	mov    r13d,r8d
  4183a4:	sub    r13d,DWORD PTR [rsp+0x4]
  4183a9:	test   r12d,r12d
  4183ac:	cmovne r13d,DWORD PTR [rsp+0x1c]
  4183b2:	mov    esi,DWORD PTR [rbx+0x4b8]
  4183b8:	mov    DWORD PTR [rbp+0x4c],esi
  4183bb:	mov    DWORD PTR [rbp+0x50],r13d
  4183bf:	mov    rcx,QWORD PTR [rbp+0x40]
  4183c3:	mov    rdi,QWORD PTR [rcx+0x18]
  4183c7:	sub    esi,DWORD PTR [rbp+0x5c]
  4183ca:	shr    eax,0x8
  4183cd:	and    eax,0x1
  4183d0:	mov    edx,r13d
  4183d3:	sub    edx,eax
  4183d5:	call   41b030 <isspace@plt+0x17720>
  4183da:	mov    r9d,DWORD PTR [rsp+0xc]
  4183df:	mov    r8d,DWORD PTR [rsp+0x10]
  4183e4:	mov    eax,DWORD PTR [rsp+0x8]
  4183e8:	mov    DWORD PTR [rbp+0x54],eax
  4183eb:	mov    eax,DWORD PTR [rsp+0x4]
  4183ef:	mov    DWORD PTR [rbp+0x58],eax
  4183f2:	add    eax,r13d
  4183f5:	mov    DWORD PTR [rsp+0x4],eax
  4183f9:	nop    DWORD PTR [rax+0x0]
  418400:	mov    rbp,QWORD PTR [rbp+0x60]
  418404:	test   rbp,rbp
  418407:	je     4185de <isspace@plt+0x14cce>
  41840d:	mov    eax,DWORD PTR [rbp+0x70]
  418410:	test   eax,0x200
  418415:	jne    418400 <isspace@plt+0x14af0>
  418417:	dec    r12d
  41841a:	cmp    DWORD PTR [rsp+0x18],0x0
  41841f:	je     4183a1 <isspace@plt+0x14a91>
  418421:	mov    r13d,r9d
  418424:	test   r12d,r12d
  418427:	jne    418435 <isspace@plt+0x14b25>
  418429:	mov    r13d,DWORD PTR [rbx+0x4b8]
  418430:	sub    r13d,DWORD PTR [rsp+0x8]
  418435:	mov    DWORD PTR [rbp+0x4c],r13d
  418439:	mov    DWORD PTR [rbp+0x50],r8d
  41843d:	mov    rcx,QWORD PTR [rbp+0x40]
  418441:	mov    rdi,QWORD PTR [rcx+0x18]
  418445:	mov    esi,r13d
  418448:	sub    esi,DWORD PTR [rbp+0x5c]
  41844b:	shr    eax,0x8
  41844e:	and    eax,0x1
  418451:	mov    edx,r8d
  418454:	sub    edx,eax
  418456:	call   41b030 <isspace@plt+0x17720>
  41845b:	mov    eax,DWORD PTR [rsp+0x8]
  41845f:	add    r13d,eax
  418462:	mov    DWORD PTR [rbp+0x54],eax
  418465:	mov    eax,DWORD PTR [rsp+0x4]
  418469:	mov    DWORD PTR [rbp+0x58],eax
  41846c:	test   r12d,r12d
  41846f:	je     4185c7 <isspace@plt+0x14cb7>
  418475:	mov    r8d,DWORD PTR [rsp+0x10]
  41847a:	test   r8d,r8d
  41847d:	mov    r9d,DWORD PTR [rsp+0xc]
  418482:	jle    4185ba <isspace@plt+0x14caa>
  418488:	mov    rcx,QWORD PTR [rbx+0x4f0]
  41848f:	movsxd rax,r13d
  418492:	mov    edx,r14d
  418495:	cmp    r15d,0x3
  418499:	jb     41856c <isspace@plt+0x14c5c>
  41849f:	nop
  4184a0:	mov    rsi,rax
  4184a3:	shl    rsi,0x4
  4184a7:	lea    rsi,[rsi+rsi*2]
  4184ab:	mov    DWORD PTR [rcx+rsi*1],0x8294e2
  4184b2:	mov    rdi,QWORD PTR [rbx+0x4e0]
  4184b9:	vmovups xmm0,XMMWORD PTR [rdi+0x4b0]
  4184c1:	vmovups XMMWORD PTR [rcx+rsi*1+0x20],xmm0
  4184c7:	movsxd rdi,DWORD PTR [rbx+0x4b8]
  4184ce:	lea    rdi,[rdi+rdi*2]
  4184d2:	shl    rdi,0x4
  4184d6:	add    rdi,rcx
  4184d9:	mov    DWORD PTR [rdi+rsi*1],0x8294e2
  4184e0:	mov    rcx,QWORD PTR [rbx+0x4e0]
  4184e7:	vmovups xmm0,XMMWORD PTR [rcx+0x4b0]
  4184ef:	vmovups XMMWORD PTR [rdi+rsi*1+0x20],xmm0
  4184f5:	movsxd rcx,DWORD PTR [rbx+0x4b8]
  4184fc:	lea    rcx,[rcx+rcx*2]
  418500:	shl    rcx,0x4
  418504:	add    rcx,rdi
  418507:	mov    DWORD PTR [rcx+rsi*1],0x8294e2
  41850e:	mov    rdi,QWORD PTR [rbx+0x4e0]
  418515:	vmovups xmm0,XMMWORD PTR [rdi+0x4b0]
  41851d:	vmovups XMMWORD PTR [rcx+rsi*1+0x20],xmm0
  418523:	movsxd rdi,DWORD PTR [rbx+0x4b8]
  41852a:	lea    rdi,[rdi+rdi*2]
  41852e:	shl    rdi,0x4
  418532:	add    rdi,rcx
  418535:	mov    DWORD PTR [rdi+rsi*1],0x8294e2
  41853c:	mov    rcx,QWORD PTR [rbx+0x4e0]
  418543:	vmovups xmm0,XMMWORD PTR [rcx+0x4b0]
  41854b:	vmovups XMMWORD PTR [rdi+rsi*1+0x20],xmm0
  418551:	movsxd rcx,DWORD PTR [rbx+0x4b8]
  418558:	lea    rcx,[rcx+rcx*2]
  41855c:	shl    rcx,0x4
  418560:	add    rcx,rdi
  418563:	add    edx,0x4
  418566:	jne    4184a0 <isspace@plt+0x14b90>
  41856c:	cmp    DWORD PTR [rsp+0x14],0x0
  418571:	je     4185ba <isspace@plt+0x14caa>
  418573:	mov    edx,DWORD PTR [rsp+0x14]
  418577:	nop    WORD PTR [rax+rax*1+0x0]
  418580:	lea    rsi,[rax+rax*2]
  418584:	shl    rsi,0x4
  418588:	mov    DWORD PTR [rcx+rsi*1],0x8294e2
  41858f:	mov    rdi,QWORD PTR [rbx+0x4e0]
  418596:	vmovups xmm0,XMMWORD PTR [rdi+0x4b0]
  41859e:	vmovups XMMWORD PTR [rcx+rsi*1+0x20],xmm0
  4185a4:	movsxd rsi,DWORD PTR [rbx+0x4b8]
  4185ab:	lea    rsi,[rsi+rsi*2]
  4185af:	shl    rsi,0x4
  4185b3:	add    rcx,rsi
  4185b6:	dec    edx
  4185b8:	jne    418580 <isspace@plt+0x14c70>
  4185ba:	inc    r13d
  4185bd:	mov    DWORD PTR [rsp+0x8],r13d
  4185c2:	jmp    418400 <isspace@plt+0x14af0>
  4185c7:	xor    r12d,r12d
  4185ca:	mov    DWORD PTR [rsp+0x8],r13d
  4185cf:	mov    r8d,DWORD PTR [rsp+0x10]
  4185d4:	mov    r9d,DWORD PTR [rsp+0xc]
  4185d9:	jmp    418400 <isspace@plt+0x14af0>
  4185de:	mov    rbp,QWORD PTR [rbx+0xa8]
  4185e5:	test   rbp,rbp
  4185e8:	mov    r14d,DWORD PTR [rsp+0x4]
  4185ed:	je     41864c <isspace@plt+0x14d3c>
  4185ef:	cmp    DWORD PTR [rsp+0x18],0x1
  4185f4:	cmove  r14d,r8d
  4185f8:	jmp    418609 <isspace@plt+0x14cf9>
  4185fa:	nop    WORD PTR [rax+rax*1+0x0]
  418600:	mov    rbp,QWORD PTR [rbp+0x60]
  418604:	test   rbp,rbp
  418607:	je     41864c <isspace@plt+0x14d3c>
  418609:	mov    edx,DWORD PTR [rbp+0x70]
  41860c:	test   edx,0x200
  418612:	je     418600 <isspace@plt+0x14cf0>
  418614:	mov    esi,DWORD PTR [rbx+0x4b8]
  41861a:	mov    DWORD PTR [rbp+0x4c],esi
  41861d:	mov    DWORD PTR [rbp+0x50],0x1
  418624:	mov    rax,QWORD PTR [rbp+0x40]
  418628:	mov    rdi,QWORD PTR [rax+0x18]
  41862c:	sub    esi,DWORD PTR [rbp+0x5c]
  41862f:	shr    edx,0x8
  418632:	not    edx
  418634:	and    edx,0x1
  418637:	call   41b030 <isspace@plt+0x17720>
  41863c:	mov    DWORD PTR [rbp+0x54],0x0
  418643:	mov    DWORD PTR [rbp+0x58],r14d
  418647:	inc    r14d
  41864a:	jmp    418600 <isspace@plt+0x14cf0>
  41864c:	mov    rax,QWORD PTR fs:0x28
  418655:	cmp    rax,QWORD PTR [rsp+0x20]
  41865a:	jne    41866b <isspace@plt+0x14d5b>
  41865c:	add    rsp,0x28
  418660:	pop    rbx
  418661:	pop    r12
  418663:	pop    r13
  418665:	pop    r14
  418667:	pop    r15
  418669:	pop    rbp
  41866a:	ret    
  41866b:	call   403280 <__stack_chk_fail@plt>
  418670:	push   rbp
  418671:	push   r15
  418673:	push   r14
  418675:	push   r13
  418677:	push   r12
  418679:	push   rbx
  41867a:	sub    rsp,0xb8
  418681:	mov    rbx,rdi
  418684:	mov    rax,QWORD PTR fs:0x28
  41868d:	mov    QWORD PTR [rsp+0xb0],rax
  418695:	mov    esi,DWORD PTR [rdi+0x4c0]
  41869b:	call   4182c0 <isspace@plt+0x149b0>
  4186a0:	mov    QWORD PTR [rsp+0x38],rbx
  4186a5:	mov    r15,QWORD PTR [rbx+0xa8]
  4186ac:	test   r15,r15
  4186af:	jne    4186cd <isspace@plt+0x14dbd>
  4186b1:	jmp    418a53 <isspace@plt+0x15143>
  4186b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4186c0:	mov    r15,QWORD PTR [r15+0x60]
  4186c4:	test   r15,r15
  4186c7:	je     418a53 <isspace@plt+0x15143>
  4186cd:	mov    rax,QWORD PTR [r15+0x38]
  4186d1:	mov    QWORD PTR [rsp+0x30],rax
  4186d6:	mov    rax,QWORD PTR [r15+0x40]
  4186da:	mov    rbp,QWORD PTR [rax+0x18]
  4186de:	mov    r14d,DWORD PTR [r15+0x4c]
  4186e2:	movsxd rbx,DWORD PTR [r15+0x50]
  4186e6:	mov    rdi,rbp
  4186e9:	call   41e550 <isspace@plt+0x1ac40>
  4186ee:	mov    ecx,DWORD PTR [r15+0x70]
  4186f2:	mov    edx,0x0
  4186f7:	mov    DWORD PTR [rsp+0x14],ecx
  4186fb:	test   cl,0x3
  4186fe:	je     41872c <isspace@plt+0x14e1c>
  418700:	mov    rax,QWORD PTR [rax+0x18]
  418704:	lea    r9,[rbx+rax*1]
  418708:	add    r9,0xfffffffffffffffe
  41870c:	xor    edi,edi
  41870e:	xor    esi,esi
  418710:	mov    edx,0x1
  418715:	mov    rcx,0xffffffffffffffff
  41871c:	lea    r8,[rip+0x1835e]        # 430a81 <isspace@plt+0x2d171>
  418723:	xor    eax,eax
  418725:	call   4030c0 <__snprintf_chk@plt>
  41872a:	mov    edx,eax
  41872c:	cmp    edx,DWORD PTR [r15+0x5c]
  418730:	mov    r13,rdx
  418733:	je     418758 <isspace@plt+0x14e48>
  418735:	sub    r14d,edx
  418738:	mov    eax,DWORD PTR [rsp+0x14]
  41873c:	shr    eax,0x8
  41873f:	and    eax,0x1
  418742:	sub    ebx,eax
  418744:	mov    rdi,rbp
  418747:	mov    esi,r14d
  41874a:	mov    edx,ebx
  41874c:	call   41b030 <isspace@plt+0x17720>
  418751:	mov    rax,r13
  418754:	mov    DWORD PTR [r15+0x5c],eax
  418758:	mov    rdi,QWORD PTR [r15+0x40]
  41875c:	call   420490 <isspace@plt+0x1cb80>
  418761:	mov    rdi,rbp
  418764:	call   41e550 <isspace@plt+0x1ac40>
  418769:	mov    rbx,rax
  41876c:	mov    rdi,rbp
  41876f:	call   41efe0 <isspace@plt+0x1b6d0>
  418774:	mov    rdi,rax
  418777:	call   41e5b0 <isspace@plt+0x1aca0>
  41877c:	mov    rax,QWORD PTR [rax+0x18]
  418780:	mov    QWORD PTR [rsp+0x50],rax
  418785:	movsxd rax,DWORD PTR [r15+0x54]
  418789:	mov    QWORD PTR [rsp+0x28],rax
  41878e:	mov    eax,DWORD PTR [r15+0x58]
  418792:	mov    rdi,rbp
  418795:	mov    ebp,eax
  418797:	call   41b150 <isspace@plt+0x17840>
  41879c:	test   rbx,rbx
  41879f:	mov    r14,QWORD PTR [rsp+0x30]
  4187a4:	je     4186c0 <isspace@plt+0x14db0>
  4187aa:	mov    ecx,DWORD PTR [r14+0x4b8]
  4187b1:	mov    rdx,QWORD PTR [rsp+0x28]
  4187b6:	add    edx,r13d
  4187b9:	lea    esi,[rax+rdx*1]
  4187bc:	mov    edi,ecx
  4187be:	sub    edi,edx
  4187c0:	cmp    esi,ecx
  4187c2:	cmovle edi,eax
  4187c5:	imul   ecx,ebp
  4187c8:	movsxd rax,ecx
  4187cb:	lea    rax,[rax+rax*2]
  4187cf:	shl    rax,0x4
  4187d3:	add    rax,QWORD PTR [r14+0x4f0]
  4187da:	mov    QWORD PTR [rsp+0x20],rax
  4187df:	movsxd rax,r13d
  4187e2:	mov    QWORD PTR [rsp+0x68],rax
  4187e7:	dec    r13d
  4187ea:	mov    QWORD PTR [rsp+0x60],r13
  4187ef:	movsxd rax,edx
  4187f2:	mov    QWORD PTR [rsp+0x48],rax
  4187f7:	movsxd rax,edi
  4187fa:	shl    rax,0x4
  4187fe:	lea    rax,[rax+rax*2]
  418802:	mov    QWORD PTR [rsp+0x40],rax
  418807:	xor    r13d,r13d
  41880a:	mov    QWORD PTR [rsp+0x58],r15
  41880f:	test   BYTE PTR [rsp+0x14],0x3
  418814:	jne    418875 <isspace@plt+0x14f65>
  418816:	jmp    418825 <isspace@plt+0x14f15>
  418818:	mov    r13,QWORD PTR [rbx+0x18]
  41881c:	mov    r15,QWORD PTR [rsp+0x58]
  418821:	mov    ebp,DWORD PTR [rsp+0x18]
  418825:	mov    rax,QWORD PTR [rsp+0x48]
  41882a:	lea    rdi,[rax+rax*2]
  41882e:	shl    rdi,0x4
  418832:	mov    r12,QWORD PTR [rsp+0x20]
  418837:	add    rdi,r12
  41883a:	lea    rsi,[rbx+0x28]
  41883e:	mov    rdx,QWORD PTR [rsp+0x40]
  418843:	call   4034d0 <memcpy@plt>
  418848:	movsxd rax,DWORD PTR [r14+0x4b8]
  41884f:	lea    rax,[rax+rax*2]
  418853:	shl    rax,0x4
  418857:	add    r12,rax
  41885a:	mov    QWORD PTR [rsp+0x20],r12
  41885f:	mov    rbx,QWORD PTR [rbx+0x8]
  418863:	inc    ebp
  418865:	test   rbx,rbx
  418868:	je     4186c0 <isspace@plt+0x14db0>
  41886e:	test   BYTE PTR [rsp+0x14],0x3
  418873:	je     418825 <isspace@plt+0x14f15>
  418875:	mov    DWORD PTR [rsp+0x18],ebp
  418879:	mov    rax,QWORD PTR [rbx+0x18]
  41887d:	test   rax,rax
  418880:	je     4188a0 <isspace@plt+0x14f90>
  418882:	cmp    rax,r13
  418885:	je     4188a0 <isspace@plt+0x14f90>
  418887:	cmp    QWORD PTR [rbx+0x10],0x0
  41888c:	je     4188a0 <isspace@plt+0x14f90>
  41888e:	test   BYTE PTR [rsp+0x14],0x2
  418893:	mov    rbp,QWORD PTR [rsp+0x50]
  418898:	jne    4188d7 <isspace@plt+0x14fc7>
  41889a:	mov    rcx,rax
  41889d:	jmp    4188f7 <isspace@plt+0x14fe7>
  41889f:	nop
  4188a0:	movabs rax,0x2020202020202020
  4188aa:	mov    QWORD PTR [rsp+0xa0],rax
  4188b2:	vmovaps xmm0,XMMWORD PTR [rip+0x180e6]        # 4309a0 <isspace@plt+0x2d090>
  4188ba:	vmovaps XMMWORD PTR [rsp+0x90],xmm0
  4188c3:	mov    rax,QWORD PTR [rsp+0x68]
  4188c8:	mov    BYTE PTR [rsp+rax*1+0x90],0x0
  4188d0:	mov    rbp,QWORD PTR [rsp+0x50]
  4188d5:	jmp    418925 <isspace@plt+0x15015>
  4188d7:	mov    rcx,rax
  4188da:	sub    rcx,rbp
  4188dd:	ja     4188f7 <isspace@plt+0x14fe7>
  4188df:	test   BYTE PTR [r15+0x71],0x4
  4188e4:	mov    edx,0x0
  4188e9:	cmove  rdx,rax
  4188ed:	mov    rcx,rbp
  4188f0:	sub    rcx,rax
  4188f3:	cmovbe rcx,rdx
  4188f7:	mov    QWORD PTR [rsp],rcx
  4188fb:	mov    esi,0x18
  418900:	mov    ecx,0x18
  418905:	lea    rdi,[rsp+0x90]
  41890d:	mov    edx,0x1
  418912:	lea    r8,[rip+0x1816d]        # 430a86 <isspace@plt+0x2d176>
  418919:	mov    r9,QWORD PTR [rsp+0x60]
  41891e:	xor    eax,eax
  418920:	call   4030c0 <__snprintf_chk@plt>
  418925:	mov    r13,QWORD PTR [rbx+0x18]
  418929:	xor    ecx,ecx
  41892b:	cmp    r13,rbp
  41892e:	sete   dl
  418931:	cmp    DWORD PTR [rsp+0x28],0x0
  418936:	js     418821 <isspace@plt+0x14f11>
  41893c:	mov    ebp,DWORD PTR [rsp+0x18]
  418940:	test   ebp,ebp
  418942:	js     418825 <isspace@plt+0x14f15>
  418948:	mov    eax,DWORD PTR [r14+0x4b8]
  41894f:	cmp    eax,DWORD PTR [rsp+0x28]
  418953:	jle    418825 <isspace@plt+0x14f15>
  418959:	cmp    DWORD PTR [r14+0x4bc],ebp
  418960:	jle    418825 <isspace@plt+0x14f15>
  418966:	mov    cl,dl
  418968:	or     ecx,0x46
  41896b:	mov    rdx,QWORD PTR [r14+0x4e0]
  418972:	imul   esi,DWORD PTR [r15+0x48],0x4e
  418977:	add    esi,ecx
  418979:	shl    rsi,0x4
  41897d:	vmovups xmm0,XMMWORD PTR [rdx+rsi*1]
  418982:	vmovaps XMMWORD PTR [rsp+0x80],xmm0
  41898b:	cmp    BYTE PTR [rsp+0x90],0x0
  418993:	je     418825 <isspace@plt+0x14f15>
  418999:	imul   eax,ebp
  41899c:	cdqe   
  41899e:	lea    rax,[rax+rax*2]
  4189a2:	shl    rax,0x4
  4189a6:	add    rax,QWORD PTR [r14+0x4f0]
  4189ad:	mov    QWORD PTR [rsp+0x78],rax
  4189b2:	lea    rsi,[rsp+0x90]
  4189ba:	mov    r15,QWORD PTR [rsp+0x28]
  4189bf:	mov    rbp,rsi
  4189c2:	mov    QWORD PTR [rsp+0x70],rbx
  4189c7:	nop    WORD PTR [rax+rax*1+0x0]
  4189d0:	movzx  eax,BYTE PTR [rbp+0x1]
  4189d4:	inc    rbp
  4189d7:	and    al,0xc0
  4189d9:	cmp    al,0x80
  4189db:	je     4189d0 <isspace@plt+0x150c0>
  4189dd:	mov    r13,rbp
  4189e0:	sub    r13,rsi
  4189e3:	je     418818 <isspace@plt+0x14f08>
  4189e9:	cmp    r13,0xf
  4189ed:	mov    eax,0xf
  4189f2:	cmovae r13,rax
  4189f6:	lea    r14,[r15+r15*2]
  4189fa:	shl    r14,0x4
  4189fe:	mov    rbx,QWORD PTR [rsp+0x78]
  418a03:	lea    r12,[rbx+r14*1]
  418a07:	mov    rdi,r12
  418a0a:	mov    rdx,r13
  418a0d:	call   403150 <strncpy@plt>
  418a12:	mov    BYTE PTR [r13+r12*1+0x0],0x0
  418a18:	vmovaps xmm0,XMMWORD PTR [rsp+0x80]
  418a21:	vmovups XMMWORD PTR [rbx+r14*1+0x20],xmm0
  418a28:	mov    rbx,QWORD PTR [rsp+0x70]
  418a2d:	mov    r14,QWORD PTR [rsp+0x30]
  418a32:	cmp    BYTE PTR [rbp+0x0],0x0
  418a36:	je     418818 <isspace@plt+0x14f08>
  418a3c:	inc    r15
  418a3f:	movsxd rax,DWORD PTR [r14+0x4b8]
  418a46:	mov    rsi,rbp
  418a49:	cmp    r15,rax
  418a4c:	jl     4189d0 <isspace@plt+0x150c0>
  418a4e:	jmp    418818 <isspace@plt+0x14f08>
  418a53:	mov    rdi,QWORD PTR [rsp+0x38]
  418a58:	cmp    BYTE PTR [rdi+0xb8],0x0
  418a5f:	je     418b37 <isspace@plt+0x15227>
  418a65:	mov    eax,DWORD PTR [rdi+0x4bc]
  418a6b:	test   eax,eax
  418a6d:	jle    418b37 <isspace@plt+0x15227>
  418a73:	mov    ecx,DWORD PTR [rdi+0x4b8]
  418a79:	test   ecx,ecx
  418a7b:	jle    418b37 <isspace@plt+0x15227>
  418a81:	lea    rsi,[rdi+0xb8]
  418a88:	dec    eax
  418a8a:	mov    rdx,QWORD PTR [rdi+0x4e0]
  418a91:	vmovups xmm0,XMMWORD PTR [rdx+0x4c0]
  418a99:	vmovaps XMMWORD PTR [rsp+0x90],xmm0
  418aa2:	imul   ecx,eax
  418aa5:	movsxd rax,ecx
  418aa8:	lea    r14,[rax+rax*2]
  418aac:	shl    r14,0x4
  418ab0:	add    r14,QWORD PTR [rdi+0x4f0]
  418ab7:	xor    r13d,r13d
  418aba:	mov    rbx,rsi
  418abd:	nop    DWORD PTR [rax]
  418ac0:	movzx  eax,BYTE PTR [rbx+0x1]
  418ac4:	inc    rbx
  418ac7:	and    al,0xc0
  418ac9:	cmp    al,0x80
  418acb:	je     418ac0 <isspace@plt+0x151b0>
  418acd:	mov    rbp,rbx
  418ad0:	sub    rbp,rsi
  418ad3:	je     418b32 <isspace@plt+0x15222>
  418ad5:	cmp    rbp,0xf
  418ad9:	mov    eax,0xf
  418ade:	cmovae rbp,rax
  418ae2:	lea    r12,[r13*2+0x0]
  418aea:	add    r12,r13
  418aed:	shl    r12,0x4
  418af1:	lea    r15,[r14+r12*1]
  418af5:	mov    rdi,r15
  418af8:	mov    rdx,rbp
  418afb:	call   403150 <strncpy@plt>
  418b00:	mov    BYTE PTR [rbp+r15*1+0x0],0x0
  418b06:	vmovaps xmm0,XMMWORD PTR [rsp+0x90]
  418b0f:	vmovups XMMWORD PTR [r14+r12*1+0x20],xmm0
  418b16:	cmp    BYTE PTR [rbx],0x0
  418b19:	je     418b32 <isspace@plt+0x15222>
  418b1b:	inc    r13
  418b1e:	mov    rax,QWORD PTR [rsp+0x38]
  418b23:	movsxd rax,DWORD PTR [rax+0x4b8]
  418b2a:	mov    rsi,rbx
  418b2d:	cmp    r13,rax
  418b30:	jl     418ac0 <isspace@plt+0x151b0>
  418b32:	mov    rdi,QWORD PTR [rsp+0x38]
  418b37:	mov    eax,DWORD PTR [rdi+0x4bc]
  418b3d:	mov    DWORD PTR [rsp+0x30],eax
  418b41:	test   eax,eax
  418b43:	jle    418e33 <isspace@plt+0x15523>
  418b49:	mov    eax,DWORD PTR [rdi+0x4b8]
  418b4f:	mov    DWORD PTR [rsp+0x28],eax
  418b53:	mov    rbx,QWORD PTR [rdi+0x4f0]
  418b5a:	mov    DWORD PTR [rsp+0x14],0x0
  418b62:	mov    rbp,QWORD PTR [rip+0x29447]        # 441fb0 <isspace@plt+0x3e6a0>
  418b69:	cmp    DWORD PTR [rsp+0x28],0x0
  418b6e:	jg     418b8b <isspace@plt+0x1527b>
  418b70:	mov    eax,DWORD PTR [rsp+0x14]
  418b74:	inc    eax
  418b76:	mov    DWORD PTR [rsp+0x14],eax
  418b7a:	cmp    eax,DWORD PTR [rsp+0x30]
  418b7e:	je     418e33 <isspace@plt+0x15523>
  418b84:	cmp    DWORD PTR [rsp+0x28],0x0
  418b89:	jle    418b70 <isspace@plt+0x15260>
  418b8b:	xor    r12d,r12d
  418b8e:	jmp    418b9e <isspace@plt+0x1528e>
  418b90:	add    rbx,0x30
  418b94:	inc    r12d
  418b97:	cmp    DWORD PTR [rsp+0x28],r12d
  418b9c:	je     418b70 <isspace@plt+0x15260>
  418b9e:	mov    rdi,QWORD PTR [rbp+0x0]
  418ba2:	mov    rsi,QWORD PTR [rbx+0x20]
  418ba6:	movsx  r15d,WORD PTR [rbx+0x28]
  418bab:	movsx  ebp,WORD PTR [rbx+0x2a]
  418baf:	cmp    QWORD PTR [rip+0x2abb1],0x0        # 443768 <isspace@plt+0x3fe58>
  418bb7:	je     418bd0 <isspace@plt+0x152c0>
  418bb9:	mov    rax,QWORD PTR [rip+0x29418]        # 441fd8 <isspace@plt+0x3e6c8>
  418bc0:	mov    r13d,DWORD PTR [rax]
  418bc3:	movzx  r14d,BYTE PTR [rip+0x2ab97]        # 443762 <isspace@plt+0x3fe52>
  418bcb:	jmp    418c85 <isspace@plt+0x15375>
  418bd0:	mov    QWORD PTR [rsp+0x18],rsi
  418bd5:	mov    QWORD PTR [rsp+0x20],rdi
  418bda:	xor    edi,edi
  418bdc:	lea    rsi,[rip+0x2ab8d]        # 443770 <isspace@plt+0x3fe60>
  418be3:	lea    rdx,[rip+0x2ab88]        # 443772 <isspace@plt+0x3fe62>
  418bea:	call   4030e0 <pair_content@plt>
  418bef:	cmp    WORD PTR [rip+0x2ab79],0xffff        # 443770 <isspace@plt+0x3fe60>
  418bf7:	je     418c5a <isspace@plt+0x1534a>
  418bf9:	cmp    WORD PTR [rip+0x2ab71],0xffff        # 443772 <isspace@plt+0x3fe62>
  418c01:	je     418c6d <isspace@plt+0x1535d>
  418c03:	call   403040 <use_default_colors@plt>
  418c08:	test   eax,eax
  418c0a:	sete   r14b
  418c0e:	sete   BYTE PTR [rip+0x2ab4d]        # 443762 <isspace@plt+0x3fe52>
  418c15:	mov    rax,QWORD PTR [rip+0x2938c]        # 441fa8 <isspace@plt+0x3e698>
  418c1c:	mov    eax,DWORD PTR [rax]
  418c1e:	cmp    eax,0x7fff
  418c23:	jl     418c2a <isspace@plt+0x1531a>
  418c25:	mov    eax,0x7fff
  418c2a:	mov    WORD PTR [rip+0x2ab43],ax        # 443774 <isspace@plt+0x3fe64>
  418c31:	mov    rax,QWORD PTR [rip+0x293a0]        # 441fd8 <isspace@plt+0x3e6c8>
  418c38:	mov    r13d,DWORD PTR [rax]
  418c3b:	test   r13d,r13d
  418c3e:	je     418c78 <isspace@plt+0x15368>
  418c40:	lea    edi,[r13+0x2]
  418c44:	imul   edi,edi
  418c47:	mov    esi,0x2
  418c4c:	call   403460 <calloc@plt>
  418c51:	mov    QWORD PTR [rip+0x2ab10],rax        # 443768 <isspace@plt+0x3fe58>
  418c58:	jmp    418c7b <isspace@plt+0x1536b>
  418c5a:	mov    WORD PTR [rip+0x2ab0d],0x7        # 443770 <isspace@plt+0x3fe60>
  418c63:	cmp    WORD PTR [rip+0x2ab07],0xffff        # 443772 <isspace@plt+0x3fe62>
  418c6b:	jne    418c03 <isspace@plt+0x152f3>
  418c6d:	mov    WORD PTR [rip+0x2aafc],0x0        # 443772 <isspace@plt+0x3fe62>
  418c76:	jmp    418c03 <isspace@plt+0x152f3>
  418c78:	xor    r13d,r13d
  418c7b:	mov    rdi,QWORD PTR [rsp+0x20]
  418c80:	mov    rsi,QWORD PTR [rsp+0x18]
  418c85:	movzx  ecx,WORD PTR [rip+0x2aae4]        # 443770 <isspace@plt+0x3fe60>
  418c8c:	cmp    r13d,r15d
  418c8f:	jg     418c94 <isspace@plt+0x15384>
  418c91:	mov    r15d,ecx
  418c94:	movzx  eax,WORD PTR [rip+0x2aad7]        # 443772 <isspace@plt+0x3fe62>
  418c9b:	cmp    r13d,ebp
  418c9e:	jg     418ca2 <isspace@plt+0x15392>
  418ca0:	mov    ebp,eax
  418ca2:	test   r14b,r14b
  418ca5:	jne    418cc0 <isspace@plt+0x153b0>
  418ca7:	cmp    r15w,0xffff
  418cac:	jne    418cb1 <isspace@plt+0x153a1>
  418cae:	mov    r15d,ecx
  418cb1:	cmp    bp,0xffff
  418cb5:	jne    418cc0 <isspace@plt+0x153b0>
  418cb7:	mov    ebp,eax
  418cb9:	nop    DWORD PTR [rax+0x0]
  418cc0:	mov    rax,QWORD PTR [rip+0x2aaa1]        # 443768 <isspace@plt+0x3fe58>
  418cc7:	xor    ecx,ecx
  418cc9:	test   rax,rax
  418ccc:	je     418df0 <isspace@plt+0x154e0>
  418cd2:	mov    edx,r15d
  418cd5:	and    edx,ebp
  418cd7:	cmp    dx,0xffff
  418cdb:	je     418df0 <isspace@plt+0x154e0>
  418ce1:	cmp    r15w,0xffff
  418ce6:	mov    ecx,r15d
  418ce9:	cmove  ecx,r13d
  418ced:	lea    edx,[r13+0x1]
  418cf1:	cmp    bp,0xffff
  418cf5:	cmovne edx,ebp
  418cf8:	movsx  ecx,cx
  418cfb:	add    r13d,0x2
  418cff:	imul   r13d,ecx
  418d03:	movsx  r14d,dx
  418d07:	add    r14d,r13d
  418d0a:	movzx  ecx,WORD PTR [rax+r14*2]
  418d0f:	test   cx,cx
  418d12:	jne    418df0 <isspace@plt+0x154e0>
  418d18:	mov    QWORD PTR [rsp+0x18],rsi
  418d1d:	mov    QWORD PTR [rsp+0x20],rdi
  418d22:	movzx  eax,WORD PTR [rip+0x2aa4d]        # 443776 <isspace@plt+0x3fe66>
  418d29:	inc    eax
  418d2b:	cmp    ax,WORD PTR [rip+0x2aa42]        # 443774 <isspace@plt+0x3fe64>
  418d32:	jl     418d39 <isspace@plt+0x15429>
  418d34:	mov    eax,0x1
  418d39:	mov    WORD PTR [rip+0x2aa36],ax        # 443776 <isspace@plt+0x3fe66>
  418d40:	movsx  edi,ax
  418d43:	lea    rsi,[rsp+0x90]
  418d4b:	lea    rdx,[rsp+0x80]
  418d53:	call   4030e0 <pair_content@plt>
  418d58:	movzx  r13d,WORD PTR [rsp+0x90]
  418d61:	movzx  eax,WORD PTR [rsp+0x80]
  418d69:	mov    DWORD PTR [rsp+0x48],eax
  418d6d:	mov    rax,QWORD PTR [rip+0x29264]        # 441fd8 <isspace@plt+0x3e6c8>
  418d74:	mov    eax,DWORD PTR [rax]
  418d76:	mov    QWORD PTR [rsp+0x40],rax
  418d7b:	movsx  edi,WORD PTR [rip+0x2a9f4]        # 443776 <isspace@plt+0x3fe66>
  418d82:	movsx  esi,r15w
  418d86:	movsx  edx,bp
  418d89:	call   403620 <init_pair@plt>
  418d8e:	test   eax,eax
  418d90:	je     418d9b <isspace@plt+0x1548b>
  418d92:	mov    rax,QWORD PTR [rip+0x2a9cf]        # 443768 <isspace@plt+0x3fe58>
  418d99:	jmp    418de1 <isspace@plt+0x154d1>
  418d9b:	mov    rdx,QWORD PTR [rsp+0x40]
  418da0:	mov    eax,edx
  418da2:	add    eax,0x2
  418da5:	cmp    r13w,0xffff
  418daa:	cmove  r13d,edx
  418dae:	movsx  ecx,r13w
  418db2:	imul   ecx,eax
  418db5:	lea    eax,[rdx+0x1]
  418db8:	mov    edx,DWORD PTR [rsp+0x48]
  418dbc:	cmp    dx,0xffff
  418dc0:	cmove  edx,eax
  418dc3:	movsx  edx,dx
  418dc6:	add    edx,ecx
  418dc8:	mov    rax,QWORD PTR [rip+0x2a999]        # 443768 <isspace@plt+0x3fe58>
  418dcf:	mov    WORD PTR [rax+rdx*2],0x0
  418dd5:	movzx  ecx,WORD PTR [rip+0x2a99a]        # 443776 <isspace@plt+0x3fe66>
  418ddc:	mov    WORD PTR [rax+r14*2],cx
  418de1:	mov    rdi,QWORD PTR [rsp+0x20]
  418de6:	mov    rsi,QWORD PTR [rsp+0x18]
  418deb:	movzx  ecx,WORD PTR [rax+r14*2]
  418df0:	shl    ecx,0x8
  418df3:	movzx  eax,cx
  418df6:	or     esi,eax
  418df8:	call   403900 <wattrset@plt>
  418dfd:	mov    rbp,QWORD PTR [rip+0x291ac]        # 441fb0 <isspace@plt+0x3e6a0>
  418e04:	mov    rdi,QWORD PTR [rbp+0x0]
  418e08:	mov    esi,DWORD PTR [rsp+0x14]
  418e0c:	mov    edx,r12d
  418e0f:	call   403090 <wmove@plt>
  418e14:	cmp    eax,0xffffffff
  418e17:	je     418b90 <isspace@plt+0x15280>
  418e1d:	mov    rdi,QWORD PTR [rbp+0x0]
  418e21:	mov    rsi,rbx
  418e24:	mov    edx,0xffffffff
  418e29:	call   4031c0 <waddnstr@plt>
  418e2e:	jmp    418b90 <isspace@plt+0x15280>
  418e33:	mov    rax,QWORD PTR [rip+0x29176]        # 441fb0 <isspace@plt+0x3e6a0>
  418e3a:	mov    rdi,QWORD PTR [rax]
  418e3d:	call   403580 <wnoutrefresh@plt>
  418e42:	call   403680 <doupdate@plt>
  418e47:	mov    rax,QWORD PTR fs:0x28
  418e50:	cmp    rax,QWORD PTR [rsp+0xb0]
  418e58:	jne    418e6c <isspace@plt+0x1555c>
  418e5a:	add    rsp,0xb8
  418e61:	pop    rbx
  418e62:	pop    r12
  418e64:	pop    r13
  418e66:	pop    r14
  418e68:	pop    r15
  418e6a:	pop    rbp
  418e6b:	ret    
  418e6c:	call   403280 <__stack_chk_fail@plt>
  418e71:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418e7b:	nop    DWORD PTR [rax+rax*1+0x0]
  418e80:	push   rbx
  418e81:	sub    rsp,0x10
  418e85:	mov    rbx,rdi
  418e88:	mov    rax,QWORD PTR fs:0x28
  418e91:	mov    QWORD PTR [rsp+0x8],rax
  418e96:	mov    rax,QWORD PTR [rip+0x29113]        # 441fb0 <isspace@plt+0x3e6a0>
  418e9d:	mov    rdi,QWORD PTR [rax]
  418ea0:	call   403890 <wclear@plt>
  418ea5:	mov    rbx,QWORD PTR [rbx+0xa8]
  418eac:	test   rbx,rbx
  418eaf:	je     418ed6 <isspace@plt+0x155c6>
  418eb1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418ebb:	nop    DWORD PTR [rax+rax*1+0x0]
  418ec0:	mov    rax,QWORD PTR [rbx+0x40]
  418ec4:	mov    rdi,QWORD PTR [rax+0x18]
  418ec8:	call   41af50 <isspace@plt+0x17640>
  418ecd:	mov    rbx,QWORD PTR [rbx+0x60]
  418ed1:	test   rbx,rbx
  418ed4:	jne    418ec0 <isspace@plt+0x155b0>
  418ed6:	mov    rax,QWORD PTR fs:0x28
  418edf:	cmp    rax,QWORD PTR [rsp+0x8]
  418ee4:	jne    418eec <isspace@plt+0x155dc>
  418ee6:	add    rsp,0x10
  418eea:	pop    rbx
  418eeb:	ret    
  418eec:	call   403280 <__stack_chk_fail@plt>
  418ef1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418efb:	nop    DWORD PTR [rax+rax*1+0x0]
  418f00:	push   rbx
  418f01:	sub    rsp,0x10
  418f05:	mov    rax,QWORD PTR fs:0x28
  418f0e:	mov    QWORD PTR [rsp+0x8],rax
  418f13:	cmp    DWORD PTR [rip+0x291b6],0x1        # 4420d0 <isspace@plt+0x3e7c0>
  418f1a:	je     418f3e <isspace@plt+0x1562e>
  418f1c:	xor    edi,edi
  418f1e:	mov    esi,0x14
  418f23:	call   4034f0 <kill@plt>
  418f28:	mov    rax,QWORD PTR fs:0x28
  418f31:	cmp    rax,QWORD PTR [rsp+0x8]
  418f36:	jne    418f68 <isspace@plt+0x15658>
  418f38:	add    rsp,0x10
  418f3c:	pop    rbx
  418f3d:	ret    
  418f3e:	mov    rbx,QWORD PTR [rip+0x290b3]        # 441ff8 <isspace@plt+0x3e6e8>
  418f45:	mov    rcx,QWORD PTR [rbx]
  418f48:	lea    rdi,[rip+0x17b3d]        # 430a8c <isspace@plt+0x2d17c>
  418f4f:	mov    esi,0x7
  418f54:	mov    edx,0x1
  418f59:	call   403810 <fwrite@plt>
  418f5e:	mov    rdi,QWORD PTR [rbx]
  418f61:	call   4035e0 <fflush@plt>
  418f66:	jmp    418f1c <isspace@plt+0x1560c>
  418f68:	call   403280 <__stack_chk_fail@plt>
  418f6d:	nop    DWORD PTR [rax]
  418f70:	push   rax
  418f71:	mov    rax,QWORD PTR fs:0x28
  418f7a:	mov    QWORD PTR [rsp],rax
  418f7e:	mov    rax,QWORD PTR fs:0x28
  418f87:	cmp    rax,QWORD PTR [rsp]
  418f8b:	jne    418f8f <isspace@plt+0x1567f>
  418f8d:	pop    rax
  418f8e:	ret    
  418f8f:	call   403280 <__stack_chk_fail@plt>
  418f94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418f9e:	xchg   ax,ax
  418fa0:	push   r15
  418fa2:	push   r14
  418fa4:	push   rbx
  418fa5:	sub    rsp,0x10
  418fa9:	mov    rbx,rsi
  418fac:	mov    r15,rdi
  418faf:	mov    rax,QWORD PTR fs:0x28
  418fb8:	mov    QWORD PTR [rsp+0x8],rax
  418fbd:	mov    rdi,QWORD PTR [rdi+0x4c8]
  418fc4:	call   403380 <termkey_getkey@plt>
  418fc9:	cmp    eax,0x3
  418fcc:	je     419060 <isspace@plt+0x15750>
  418fd2:	cmp    eax,0x2
  418fd5:	jne    4190a3 <isspace@plt+0x15793>
  418fdb:	mov    rdi,QWORD PTR [r15+0x4c8]
  418fe2:	call   4036f0 <termkey_destroy@plt>
  418fe7:	call   403130 <__errno_location@plt>
  418fec:	mov    r14,rax
  418fef:	mov    DWORD PTR [rax],0x0
  418ff5:	lea    rdi,[rip+0x131b7]        # 42c1b3 <isspace@plt+0x288a3>
  418ffc:	mov    esi,0x2
  419001:	xor    eax,eax
  419003:	call   4037a0 <open@plt>
  419008:	mov    ebx,eax
  41900a:	test   eax,eax
  41900c:	je     419029 <isspace@plt+0x15719>
  41900e:	cmp    ebx,0xffffffff
  419011:	je     4190cf <isspace@plt+0x157bf>
  419017:	mov    edi,ebx
  419019:	xor    esi,esi
  41901b:	call   4032c0 <dup2@plt>
  419020:	cmp    eax,0xffffffff
  419023:	je     4190c8 <isspace@plt+0x157b8>
  419029:	mov    edi,ebx
  41902b:	call   4033c0 <close@plt>
  419030:	xor    edi,edi
  419032:	mov    esi,0x18
  419037:	call   403760 <termkey_new@plt>
  41903c:	test   rax,rax
  41903f:	je     4190cf <isspace@plt+0x157bf>
  419045:	mov    rbx,rax
  419048:	mov    rdi,rax
  41904b:	mov    esi,0x2
  419050:	call   403390 <termkey_set_canonflags@plt>
  419055:	mov    QWORD PTR [r15+0x4c8],rbx
  41905c:	xor    eax,eax
  41905e:	jmp    4190a9 <isspace@plt+0x15799>
  419060:	mov    DWORD PTR [rsp],0x0
  419067:	mov    WORD PTR [rsp+0x4],0x1
  41906e:	mov    rdi,QWORD PTR [r15+0x4c8]
  419075:	call   403370 <termkey_get_waittime@plt>
  41907a:	mov    rdi,rsp
  41907d:	mov    esi,0x1
  419082:	mov    edx,eax
  419084:	call   403720 <poll@plt>
  419089:	mov    ecx,eax
  41908b:	mov    eax,0x3
  419090:	test   ecx,ecx
  419092:	jne    4190a3 <isspace@plt+0x15793>
  419094:	mov    rdi,QWORD PTR [r15+0x4c8]
  41909b:	mov    rsi,rbx
  41909e:	call   403110 <termkey_getkey_force@plt>
  4190a3:	cmp    eax,0x1
  4190a6:	sete   al
  4190a9:	mov    rcx,QWORD PTR fs:0x28
  4190b2:	cmp    rcx,QWORD PTR [rsp+0x8]
  4190b7:	jne    4190c3 <isspace@plt+0x157b3>
  4190b9:	add    rsp,0x10
  4190bd:	pop    rbx
  4190be:	pop    r14
  4190c0:	pop    r15
  4190c2:	ret    
  4190c3:	call   403280 <__stack_chk_fail@plt>
  4190c8:	mov    edi,ebx
  4190ca:	call   4033c0 <close@plt>
  4190cf:	mov    QWORD PTR [r15+0x4c8],0x0
  4190da:	mov    edi,DWORD PTR [r14]
  4190dd:	test   edi,edi
  4190df:	jne    4190ea <isspace@plt+0x157da>
  4190e1:	lea    rdx,[rip+0x179ab]        # 430a93 <isspace@plt+0x2d183>
  4190e8:	jmp    4190f2 <isspace@plt+0x157e2>
  4190ea:	call   403880 <strerror@plt>
  4190ef:	mov    rdx,rax
  4190f2:	lea    rsi,[rip+0x1799b]        # 430a94 <isspace@plt+0x2d184>
  4190f9:	mov    rdi,r15
  4190fc:	xor    eax,eax
  4190fe:	call   419210 <isspace@plt+0x15900>
  419103:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41910d:	nop    DWORD PTR [rax]
  419110:	push   rbx
  419111:	sub    rsp,0x10
  419115:	mov    rbx,rdi
  419118:	mov    rax,QWORD PTR fs:0x28
  419121:	mov    QWORD PTR [rsp+0x8],rax
  419126:	mov    edi,0x1
  41912b:	call   403180 <curs_set@plt>
  419130:	call   4035a0 <reset_shell_mode@plt>
  419135:	mov    rdi,QWORD PTR [rbx+0x4c8]
  41913c:	call   4030a0 <termkey_stop@plt>
  419141:	mov    rax,QWORD PTR fs:0x28
  41914a:	cmp    rax,QWORD PTR [rsp+0x8]
  41914f:	jne    419157 <isspace@plt+0x15847>
  419151:	add    rsp,0x10
  419155:	pop    rbx
  419156:	ret    
  419157:	call   403280 <__stack_chk_fail@plt>
  41915c:	nop    DWORD PTR [rax+0x0]
  419160:	push   rax
  419161:	mov    rax,QWORD PTR fs:0x28
  41916a:	mov    QWORD PTR [rsp],rax
  41916e:	mov    rdi,QWORD PTR [rdi+0x4c8]
  419175:	call   403480 <termkey_start@plt>
  41917a:	call   403660 <reset_prog_mode@plt>
  41917f:	mov    rax,QWORD PTR [rip+0x28e2a]        # 441fb0 <isspace@plt+0x3e6a0>
  419186:	mov    rdi,QWORD PTR [rax]
  419189:	call   403890 <wclear@plt>
  41918e:	xor    edi,edi
  419190:	call   403180 <curs_set@plt>
  419195:	mov    rax,QWORD PTR fs:0x28
  41919e:	cmp    rax,QWORD PTR [rsp]
  4191a2:	jne    4191a6 <isspace@plt+0x15896>
  4191a4:	pop    rax
  4191a5:	ret    
  4191a6:	call   403280 <__stack_chk_fail@plt>
  4191ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4191b0:	push   rax
  4191b1:	mov    rax,QWORD PTR fs:0x28
  4191ba:	mov    QWORD PTR [rsp],rax
  4191be:	mov    rax,QWORD PTR [rdi+0x4c8]
  4191c5:	mov    rcx,QWORD PTR fs:0x28
  4191ce:	cmp    rcx,QWORD PTR [rsp]
  4191d2:	jne    4191d6 <isspace@plt+0x158c6>
  4191d4:	pop    rcx
  4191d5:	ret    
  4191d6:	call   403280 <__stack_chk_fail@plt>
  4191db:	nop    DWORD PTR [rax+rax*1+0x0]
  4191e0:	push   rax
  4191e1:	mov    rax,QWORD PTR fs:0x28
  4191ea:	mov    QWORD PTR [rsp],rax
  4191ee:	mov    rax,QWORD PTR [rip+0x28de3]        # 441fd8 <isspace@plt+0x3e6c8>
  4191f5:	mov    eax,DWORD PTR [rax]
  4191f7:	mov    rcx,QWORD PTR fs:0x28
  419200:	cmp    rcx,QWORD PTR [rsp]
  419204:	jne    419208 <isspace@plt+0x158f8>
  419206:	pop    rcx
  419207:	ret    
  419208:	call   403280 <__stack_chk_fail@plt>
  41920d:	nop    DWORD PTR [rax]
  419210:	sub    rsp,0xd8
  419217:	test   al,al
  419219:	je     41925a <isspace@plt+0x1594a>
  41921b:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  419221:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  419227:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  41922d:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  419236:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  41923f:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  419248:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  419251:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  41925a:	mov    QWORD PTR [rsp+0x30],rdx
  41925f:	mov    QWORD PTR [rsp+0x38],rcx
  419264:	mov    QWORD PTR [rsp+0x40],r8
  419269:	mov    QWORD PTR [rsp+0x48],r9
  41926e:	lea    rax,[rsp+0x20]
  419273:	mov    QWORD PTR [rsp+0x10],rax
  419278:	lea    rax,[rsp+0xe0]
  419280:	mov    QWORD PTR [rsp+0x8],rax
  419285:	movabs rax,0x3000000010
  41928f:	mov    QWORD PTR [rsp],rax
  419293:	mov    rdx,rsp
  419296:	call   418140 <isspace@plt+0x14830>
  41929b:	nop    DWORD PTR [rax+rax*1+0x0]
  4192a0:	push   rax
  4192a1:	mov    rax,QWORD PTR fs:0x28
  4192aa:	mov    QWORD PTR [rsp],rax
  4192ae:	mov    rax,QWORD PTR [rdi+0x38]
  4192b2:	mov    rcx,QWORD PTR [rax+0x4e0]
  4192b9:	imul   edx,DWORD PTR [rdi+0x48],0x4e
  4192bd:	add    edx,esi
  4192bf:	shl    rdx,0x4
  4192c3:	mov    rax,QWORD PTR [rcx+rdx*1]
  4192c7:	mov    rdx,QWORD PTR [rcx+rdx*1+0x8]
  4192cc:	mov    rcx,QWORD PTR fs:0x28
  4192d5:	cmp    rcx,QWORD PTR [rsp]
  4192d9:	jne    4192dd <isspace@plt+0x159cd>
  4192db:	pop    rcx
  4192dc:	ret    
  4192dd:	call   403280 <__stack_chk_fail@plt>
  4192e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4192ec:	nop    DWORD PTR [rax+0x0]
  4192f0:	push   rbp
  4192f1:	push   r15
  4192f3:	push   r14
  4192f5:	push   r13
  4192f7:	push   r12
  4192f9:	push   rbx
  4192fa:	sub    rsp,0x28
  4192fe:	mov    rax,QWORD PTR fs:0x28
  419307:	mov    QWORD PTR [rsp+0x20],rax
  41930c:	test   BYTE PTR [rdi+0x71],0x1
  419310:	je     419427 <isspace@plt+0x15b17>
  419316:	mov    rcx,QWORD PTR [rdi+0x38]
  41931a:	xor    edx,edx
  41931c:	cmp    QWORD PTR [rcx+0xb0],rdi
  419323:	sete   bl
  419326:	movsxd r12,DWORD PTR [rdi+0x54]
  41932a:	test   r12,r12
  41932d:	js     419427 <isspace@plt+0x15b17>
  419333:	mov    r8d,DWORD PTR [rdi+0x58]
  419337:	mov    r9d,DWORD PTR [rdi+0x50]
  41933b:	lea    eax,[r9+r8*1]
  41933f:	test   eax,eax
  419341:	jle    419427 <isspace@plt+0x15b17>
  419347:	mov    ebp,DWORD PTR [rcx+0x4b8]
  41934d:	cmp    ebp,r12d
  419350:	jle    419427 <isspace@plt+0x15b17>
  419356:	cmp    DWORD PTR [rcx+0x4bc],eax
  41935c:	jl     419427 <isspace@plt+0x15b17>
  419362:	mov    dl,bl
  419364:	add    edx,0x49
  419367:	mov    rax,QWORD PTR [rcx+0x4e0]
  41936e:	imul   edi,DWORD PTR [rdi+0x48],0x4e
  419372:	add    edi,edx
  419374:	shl    rdi,0x4
  419378:	vmovups xmm0,XMMWORD PTR [rax+rdi*1]
  41937d:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  419383:	cmp    BYTE PTR [rsi],0x0
  419386:	je     419427 <isspace@plt+0x15b17>
  41938c:	lea    eax,[r9+r8*1]
  419390:	add    eax,0xffffffff
  419393:	imul   ebp,eax
  419396:	movsxd rax,ebp
  419399:	lea    rax,[rax+rax*2]
  41939d:	shl    rax,0x4
  4193a1:	add    rax,QWORD PTR [rcx+0x4f0]
  4193a8:	mov    QWORD PTR [rsp+0x8],rax
  4193ad:	mov    rbx,rsi
  4193b0:	mov    QWORD PTR [rsp],rcx
  4193b4:	mov    r13,QWORD PTR [rsp+0x8]
  4193b9:	nop    DWORD PTR [rax+0x0]
  4193c0:	movzx  eax,BYTE PTR [rbx+0x1]
  4193c4:	inc    rbx
  4193c7:	and    al,0xc0
  4193c9:	cmp    al,0x80
  4193cb:	je     4193c0 <isspace@plt+0x15ab0>
  4193cd:	mov    rbp,rbx
  4193d0:	sub    rbp,rsi
  4193d3:	je     419427 <isspace@plt+0x15b17>
  4193d5:	cmp    rbp,0xf
  4193d9:	mov    eax,0xf
  4193de:	cmovae rbp,rax
  4193e2:	lea    r15,[r12+r12*2]
  4193e6:	shl    r15,0x4
  4193ea:	lea    r14,[r15+r13*1]
  4193ee:	mov    rdi,r14
  4193f1:	mov    rdx,rbp
  4193f4:	call   403150 <strncpy@plt>
  4193f9:	mov    rcx,QWORD PTR [rsp]
  4193fd:	mov    BYTE PTR [rbp+r14*1+0x0],0x0
  419403:	vmovaps xmm0,XMMWORD PTR [rsp+0x10]
  419409:	vmovups XMMWORD PTR [r13+r15*1+0x20],xmm0
  419410:	cmp    BYTE PTR [rbx],0x0
  419413:	je     419427 <isspace@plt+0x15b17>
  419415:	inc    r12
  419418:	movsxd rax,DWORD PTR [rcx+0x4b8]
  41941f:	mov    rsi,rbx
  419422:	cmp    r12,rax
  419425:	jl     4193c0 <isspace@plt+0x15ab0>
  419427:	mov    rax,QWORD PTR fs:0x28
  419430:	cmp    rax,QWORD PTR [rsp+0x20]
  419435:	jne    419446 <isspace@plt+0x15b36>
  419437:	add    rsp,0x28
  41943b:	pop    rbx
  41943c:	pop    r12
  41943e:	pop    r13
  419440:	pop    r14
  419442:	pop    r15
  419444:	pop    rbp
  419445:	ret    
  419446:	call   403280 <__stack_chk_fail@plt>
  41944b:	nop    DWORD PTR [rax+rax*1+0x0]
  419450:	push   rax
  419451:	mov    rax,rdi
  419454:	mov    rcx,QWORD PTR fs:0x28
  41945d:	mov    QWORD PTR [rsp],rcx
  419461:	mov    DWORD PTR [rdi+0x70],esi
  419464:	test   esi,0x200
  41946a:	jne    419472 <isspace@plt+0x15b62>
  41946c:	mov    rdi,QWORD PTR [rax+0x38]
  419470:	jmp    4194cb <isspace@plt+0x15bbb>
  419472:	mov    rdi,QWORD PTR [rax+0x38]
  419476:	mov    r8,QWORD PTR [rdi+0xa8]
  41947d:	mov    rdx,r8
  419480:	mov    rcx,rdx
  419483:	mov    rdx,QWORD PTR [rdx+0x60]
  419487:	test   rdx,rdx
  41948a:	jne    419480 <isspace@plt+0x15b70>
  41948c:	cmp    rcx,rax
  41948f:	je     4194cb <isspace@plt+0x15bbb>
  419491:	mov    rsi,QWORD PTR [rax+0x68]
  419495:	test   rsi,rsi
  419498:	je     4194a2 <isspace@plt+0x15b92>
  41949a:	mov    rdx,QWORD PTR [rax+0x60]
  41949e:	mov    QWORD PTR [rsi+0x60],rdx
  4194a2:	mov    rdx,QWORD PTR [rax+0x60]
  4194a6:	test   rdx,rdx
  4194a9:	je     4194af <isspace@plt+0x15b9f>
  4194ab:	mov    QWORD PTR [rdx+0x68],rsi
  4194af:	cmp    r8,rax
  4194b2:	jne    4194bb <isspace@plt+0x15bab>
  4194b4:	mov    QWORD PTR [rdi+0xa8],rdx
  4194bb:	mov    QWORD PTR [rcx+0x60],rax
  4194bf:	mov    QWORD PTR [rax+0x68],rcx
  4194c3:	mov    QWORD PTR [rax+0x60],0x0
  4194cb:	call   418670 <isspace@plt+0x14d60>
  4194d0:	mov    rax,QWORD PTR fs:0x28
  4194d9:	cmp    rax,QWORD PTR [rsp]
  4194dd:	jne    4194e1 <isspace@plt+0x15bd1>
  4194df:	pop    rax
  4194e0:	ret    
  4194e1:	call   403280 <__stack_chk_fail@plt>
  4194e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4194f0:	push   rax
  4194f1:	mov    rax,QWORD PTR fs:0x28
  4194fa:	mov    QWORD PTR [rsp],rax
  4194fe:	mov    eax,DWORD PTR [rdi+0x70]
  419501:	mov    rcx,QWORD PTR fs:0x28
  41950a:	cmp    rcx,QWORD PTR [rsp]
  41950e:	jne    419512 <isspace@plt+0x15c02>
  419510:	pop    rcx
  419511:	ret    
  419512:	call   403280 <__stack_chk_fail@plt>
  419517:	nop    WORD PTR [rax+rax*1+0x0]
  419520:	push   rbp
  419521:	push   r15
  419523:	push   r14
  419525:	push   r13
  419527:	push   r12
  419529:	push   rbx
  41952a:	sub    rsp,0x38
  41952e:	mov    rax,QWORD PTR fs:0x28
  419537:	mov    QWORD PTR [rsp+0x30],rax
  41953c:	cmp    esi,0x4d
  41953f:	jle    419548 <isspace@plt+0x15c38>
  419541:	xor    eax,eax
  419543:	jmp    419806 <isspace@plt+0x15ef6>
  419548:	mov    al,0x1
  41954a:	test   rdx,rdx
  41954d:	je     419806 <isspace@plt+0x15ef6>
  419553:	mov    ebp,esi
  419555:	mov    rax,QWORD PTR [rdi+0x38]
  419559:	mov    QWORD PTR [rsp+0x18],rax
  41955e:	mov    rax,QWORD PTR [rax+0x4e0]
  419565:	mov    QWORD PTR [rsp+0x8],rdi
  41956a:	movsxd rcx,DWORD PTR [rdi+0x48]
  41956e:	imul   rcx,rcx,0x4e0
  419575:	vmovups xmm0,XMMWORD PTR [rcx+rax*1+0x410]
  41957e:	vmovaps XMMWORD PTR [rsp+0x20],xmm0
  419584:	mov    rdi,rdx
  419587:	call   403850 <strdup@plt>
  41958c:	mov    QWORD PTR [rsp+0x10],rax
  419591:	test   rax,rax
  419594:	je     4197cc <isspace@plt+0x15ebc>
  41959a:	lea    r12,[rip+0x13ecb]        # 42d46c <isspace@plt+0x29b5c>
  4195a1:	lea    r13,[rip+0x17466]        # 430a0e <isspace@plt+0x2d0fe>
  4195a8:	mov    rbx,QWORD PTR [rsp+0x10]
  4195ad:	jmp    4195bd <isspace@plt+0x15cad>
  4195af:	or     BYTE PTR [rsp+0x22],0x4
  4195b4:	test   rbx,rbx
  4195b7:	je     4197cc <isspace@plt+0x15ebc>
  4195bd:	mov    r15,rbx
  4195c0:	inc    rbx
  4195c3:	cmp    BYTE PTR [r15],0x20
  4195c7:	je     4195bd <isspace@plt+0x15cad>
  4195c9:	mov    rdi,r15
  4195cc:	mov    esi,0x2c
  4195d1:	call   4032f0 <strchr@plt>
  4195d6:	test   rax,rax
  4195d9:	je     4195e6 <isspace@plt+0x15cd6>
  4195db:	mov    rbx,rax
  4195de:	inc    rbx
  4195e1:	mov    BYTE PTR [rax],0x0
  4195e4:	jmp    4195e8 <isspace@plt+0x15cd8>
  4195e6:	xor    ebx,ebx
  4195e8:	mov    rdi,r15
  4195eb:	mov    esi,0x3a
  4195f0:	call   4032f0 <strchr@plt>
  4195f5:	test   rax,rax
  4195f8:	je     41960d <isspace@plt+0x15cfd>
  4195fa:	mov    r14,rax
  4195fd:	mov    BYTE PTR [rax],0x0
  419600:	cmp    BYTE PTR [r14+0x1],0x20
  419605:	lea    r14,[r14+0x1]
  419609:	je     419600 <isspace@plt+0x15cf0>
  41960b:	jmp    419610 <isspace@plt+0x15d00>
  41960d:	xor    r14d,r14d
  419610:	mov    rdi,r15
  419613:	mov    rsi,r12
  419616:	call   4030f0 <strcasecmp@plt>
  41961b:	test   eax,eax
  41961d:	je     4195af <isspace@plt+0x15c9f>
  41961f:	mov    rdi,r15
  419622:	mov    rsi,r13
  419625:	call   4030f0 <strcasecmp@plt>
  41962a:	test   eax,eax
  41962c:	je     419714 <isspace@plt+0x15e04>
  419632:	mov    rdi,r15
  419635:	lea    rsi,[rip+0x173cf]        # 430a0b <isspace@plt+0x2d0fb>
  41963c:	call   4030f0 <strcasecmp@plt>
  419641:	test   eax,eax
  419643:	je     419727 <isspace@plt+0x15e17>
  419649:	mov    rdi,r15
  41964c:	lea    rsi,[rip+0x173c3]        # 430a16 <isspace@plt+0x2d106>
  419653:	call   4030f0 <strcasecmp@plt>
  419658:	test   eax,eax
  41965a:	je     41973f <isspace@plt+0x15e2f>
  419660:	mov    rdi,r15
  419663:	lea    rsi,[rip+0x173a9]        # 430a13 <isspace@plt+0x2d103>
  41966a:	call   4030f0 <strcasecmp@plt>
  41966f:	test   eax,eax
  419671:	je     41974f <isspace@plt+0x15e3f>
  419677:	mov    rdi,r15
  41967a:	lea    rsi,[rip+0x173a0]        # 430a21 <isspace@plt+0x2d111>
  419681:	call   4030f0 <strcasecmp@plt>
  419686:	test   eax,eax
  419688:	je     419763 <isspace@plt+0x15e53>
  41968e:	mov    rdi,r15
  419691:	lea    rsi,[rip+0x17386]        # 430a1e <isspace@plt+0x2d10e>
  419698:	call   4030f0 <strcasecmp@plt>
  41969d:	test   eax,eax
  41969f:	je     419773 <isspace@plt+0x15e63>
  4196a5:	mov    rdi,r15
  4196a8:	lea    rsi,[rip+0x17380]        # 430a2f <isspace@plt+0x2d11f>
  4196af:	call   4030f0 <strcasecmp@plt>
  4196b4:	test   eax,eax
  4196b6:	je     419788 <isspace@plt+0x15e78>
  4196bc:	mov    rdi,r15
  4196bf:	lea    rsi,[rip+0x17366]        # 430a2c <isspace@plt+0x2d11c>
  4196c6:	call   4030f0 <strcasecmp@plt>
  4196cb:	test   eax,eax
  4196cd:	je     419798 <isspace@plt+0x15e88>
  4196d3:	mov    rdi,r15
  4196d6:	lea    rsi,[rip+0x144f9]        # 42dbd6 <isspace@plt+0x2a2c6>
  4196dd:	call   4030f0 <strcasecmp@plt>
  4196e2:	test   eax,eax
  4196e4:	je     4197ad <isspace@plt+0x15e9d>
  4196ea:	mov    rdi,r15
  4196ed:	lea    rsi,[rip+0x17341]        # 430a35 <isspace@plt+0x2d125>
  4196f4:	call   4030f0 <strcasecmp@plt>
  4196f9:	test   eax,eax
  4196fb:	jne    4195b4 <isspace@plt+0x15ca4>
  419701:	mov    rax,QWORD PTR [rsp+0x8]
  419706:	mov    rdi,QWORD PTR [rax+0x38]
  41970a:	lea    rsi,[rsp+0x2a]
  41970f:	jmp    4197bb <isspace@plt+0x15eab>
  419714:	or     BYTE PTR [rsp+0x22],0x20
  419719:	test   rbx,rbx
  41971c:	jne    4195bd <isspace@plt+0x15cad>
  419722:	jmp    4197cc <isspace@plt+0x15ebc>
  419727:	mov    eax,0xffdfffff
  41972c:	and    QWORD PTR [rsp+0x20],rax
  419731:	test   rbx,rbx
  419734:	jne    4195bd <isspace@plt+0x15cad>
  41973a:	jmp    4197cc <isspace@plt+0x15ebc>
  41973f:	or     BYTE PTR [rsp+0x23],0x80
  419744:	test   rbx,rbx
  419747:	jne    4195bd <isspace@plt+0x15cad>
  41974d:	jmp    4197cc <isspace@plt+0x15ebc>
  41974f:	and    QWORD PTR [rsp+0x20],0x7fffffff
  419758:	test   rbx,rbx
  41975b:	jne    4195bd <isspace@plt+0x15cad>
  419761:	jmp    4197cc <isspace@plt+0x15ebc>
  419763:	or     BYTE PTR [rsp+0x22],0x2
  419768:	test   rbx,rbx
  41976b:	jne    4195bd <isspace@plt+0x15cad>
  419771:	jmp    4197cc <isspace@plt+0x15ebc>
  419773:	mov    eax,0xfffdffff
  419778:	and    QWORD PTR [rsp+0x20],rax
  41977d:	test   rbx,rbx
  419780:	jne    4195bd <isspace@plt+0x15cad>
  419786:	jmp    4197cc <isspace@plt+0x15ebc>
  419788:	or     BYTE PTR [rsp+0x22],0x8
  41978d:	test   rbx,rbx
  419790:	jne    4195bd <isspace@plt+0x15cad>
  419796:	jmp    4197cc <isspace@plt+0x15ebc>
  419798:	mov    eax,0xfff7ffff
  41979d:	and    QWORD PTR [rsp+0x20],rax
  4197a2:	test   rbx,rbx
  4197a5:	jne    4195bd <isspace@plt+0x15cad>
  4197ab:	jmp    4197cc <isspace@plt+0x15ebc>
  4197ad:	mov    rax,QWORD PTR [rsp+0x8]
  4197b2:	mov    rdi,QWORD PTR [rax+0x38]
  4197b6:	lea    rsi,[rsp+0x28]
  4197bb:	mov    rdx,r14
  4197be:	call   419890 <isspace@plt+0x15f80>
  4197c3:	test   rbx,rbx
  4197c6:	jne    4195bd <isspace@plt+0x15cad>
  4197cc:	mov    rax,QWORD PTR [rsp+0x18]
  4197d1:	mov    rax,QWORD PTR [rax+0x4e0]
  4197d8:	mov    rcx,QWORD PTR [rsp+0x8]
  4197dd:	movsxd rcx,DWORD PTR [rcx+0x48]
  4197e1:	imul   rcx,rcx,0x4e
  4197e5:	movsxd rdx,ebp
  4197e8:	add    rdx,rcx
  4197eb:	shl    rdx,0x4
  4197ef:	vmovaps xmm0,XMMWORD PTR [rsp+0x20]
  4197f5:	vmovups XMMWORD PTR [rax+rdx*1],xmm0
  4197fa:	mov    rdi,QWORD PTR [rsp+0x10]
  4197ff:	call   4030d0 <free@plt>
  419804:	mov    al,0x1
  419806:	mov    rcx,QWORD PTR fs:0x28
  41980f:	cmp    rcx,QWORD PTR [rsp+0x30]
  419814:	jne    419825 <isspace@plt+0x15f15>
  419816:	add    rsp,0x38
  41981a:	pop    rbx
  41981b:	pop    r12
  41981d:	pop    r13
  41981f:	pop    r14
  419821:	pop    r15
  419823:	pop    rbp
  419824:	ret    
  419825:	call   403280 <__stack_chk_fail@plt>
  41982a:	nop    WORD PTR [rax+rax*1+0x0]
  419830:	push   rax
  419831:	mov    rax,QWORD PTR fs:0x28
  41983a:	mov    QWORD PTR [rsp],rax
  41983e:	mov    eax,DWORD PTR [rdi+0x4c]
  419841:	mov    rcx,QWORD PTR fs:0x28
  41984a:	cmp    rcx,QWORD PTR [rsp]
  41984e:	jne    419852 <isspace@plt+0x15f42>
  419850:	pop    rcx
  419851:	ret    
  419852:	call   403280 <__stack_chk_fail@plt>
  419857:	nop    WORD PTR [rax+rax*1+0x0]
  419860:	push   rax
  419861:	mov    rax,QWORD PTR fs:0x28
  41986a:	mov    QWORD PTR [rsp],rax
  41986e:	mov    eax,DWORD PTR [rdi+0x50]
  419871:	mov    rcx,QWORD PTR fs:0x28
  41987a:	cmp    rcx,QWORD PTR [rsp]
  41987e:	jne    419882 <isspace@plt+0x15f72>
  419880:	pop    rcx
  419881:	ret    
  419882:	call   403280 <__stack_chk_fail@plt>
  419887:	nop    WORD PTR [rax+rax*1+0x0]
  419890:	push   rbp
  419891:	push   r15
  419893:	push   r14
  419895:	push   r13
  419897:	push   r12
  419899:	push   rbx
  41989a:	sub    rsp,0x18
  41989e:	mov    rax,QWORD PTR fs:0x28
  4198a7:	mov    QWORD PTR [rsp+0x10],rax
  4198ac:	test   rdx,rdx
  4198af:	je     419dcd <isspace@plt+0x164bd>
  4198b5:	mov    rbx,rdx
  4198b8:	mov    rbp,rsi
  4198bb:	mov    al,BYTE PTR [rdx]
  4198bd:	cmp    al,0x23
  4198bf:	jne    419a98 <isspace@plt+0x16188>
  4198c5:	mov    r15,rdi
  4198c8:	mov    rdi,rbx
  4198cb:	call   403250 <strlen@plt>
  4198d0:	cmp    rax,0x7
  4198d4:	jne    419ac8 <isspace@plt+0x161b8>
  4198da:	inc    rbx
  4198dd:	call   4038f0 <__ctype_b_loc@plt>
  4198e2:	mov    rax,QWORD PTR [rax]
  4198e5:	mov    rcx,rbx
  4198e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4198f0:	movzx  edx,BYTE PTR [rcx]
  4198f3:	inc    rcx
  4198f6:	test   BYTE PTR [rax+rdx*2+0x1],0x10
  4198fb:	jne    4198f0 <isspace@plt+0x15fe0>
  4198fd:	test   dl,dl
  4198ff:	jne    419dcd <isspace@plt+0x164bd>
  419905:	lea    rsi,[rip+0x1712e]        # 430a3a <isspace@plt+0x2d12a>
  41990c:	lea    rdx,[rsp+0xf]
  419911:	lea    rcx,[rsp+0xe]
  419916:	lea    r8,[rsp+0xd]
  41991b:	mov    rdi,rbx
  41991e:	xor    eax,eax
  419920:	call   4035f0 <__isoc99_sscanf@plt>
  419925:	cmp    eax,0x3
  419928:	jne    419dcd <isspace@plt+0x164bd>
  41992e:	movzx  r12d,BYTE PTR [rsp+0xf]
  419934:	movzx  r13d,BYTE PTR [rsp+0xe]
  41993a:	movzx  r8d,BYTE PTR [rsp+0xd]
  419940:	mov    ebx,DWORD PTR [rip+0x2878a]        # 4420d0 <isspace@plt+0x3e7c0>
  419946:	cmp    ebx,0xffffffff
  419949:	jne    41998a <isspace@plt+0x1607a>
  41994b:	mov    rax,QWORD PTR [r15+0xa0]
  419952:	xor    ebx,ebx
  419954:	cmp    BYTE PTR [rax+0x7fe],0x0
  41995b:	je     419984 <isspace@plt+0x16074>
  41995d:	mov    r14,rbp
  419960:	mov    rbp,r8
  419963:	call   403530 <can_change_color@plt>
  419968:	mov    r8,rbp
  41996b:	mov    rbp,r14
  41996e:	test   al,al
  419970:	je     419984 <isspace@plt+0x16074>
  419972:	mov    rax,QWORD PTR [rip+0x2865f]        # 441fd8 <isspace@plt+0x3e6c8>
  419979:	xor    ebx,ebx
  41997b:	cmp    DWORD PTR [rax],0xff
  419981:	setg   bl
  419984:	mov    DWORD PTR [rip+0x28746],ebx        # 4420d0 <isspace@plt+0x3e7c0>
  41998a:	test   ebx,ebx
  41998c:	je     419bd6 <isspace@plt+0x162c6>
  419992:	mov    eax,r12d
  419995:	shl    eax,0x10
  419998:	mov    ecx,r13d
  41999b:	shl    ecx,0x8
  41999e:	or     ecx,eax
  4199a0:	lea    eax,[r8+rcx*1]
  4199a4:	add    eax,0x1
  4199a7:	mov    r15d,0x5
  4199ad:	lea    rcx,[rip+0x299ec]        # 4433a0 <isspace@plt+0x3fa90>
  4199b4:	mov    edx,DWORD PTR [rcx+r15*4-0x14]
  4199b9:	cmp    edx,eax
  4199bb:	je     419e63 <isspace@plt+0x16553>
  4199c1:	test   edx,edx
  4199c3:	je     419a26 <isspace@plt+0x16116>
  4199c5:	mov    edx,DWORD PTR [rcx+r15*4-0x10]
  4199ca:	cmp    edx,eax
  4199cc:	je     419e69 <isspace@plt+0x16559>
  4199d2:	test   edx,edx
  4199d4:	je     419a26 <isspace@plt+0x16116>
  4199d6:	mov    edx,DWORD PTR [rcx+r15*4-0xc]
  4199db:	cmp    edx,eax
  4199dd:	je     419e6f <isspace@plt+0x1655f>
  4199e3:	test   edx,edx
  4199e5:	je     419a26 <isspace@plt+0x16116>
  4199e7:	mov    edx,DWORD PTR [rcx+r15*4-0x8]
  4199ec:	cmp    edx,eax
  4199ee:	je     419e75 <isspace@plt+0x16565>
  4199f4:	test   edx,edx
  4199f6:	je     419a26 <isspace@plt+0x16116>
  4199f8:	mov    edx,DWORD PTR [rcx+r15*4-0x4]
  4199fd:	cmp    edx,eax
  4199ff:	je     419e7b <isspace@plt+0x1656b>
  419a05:	test   edx,edx
  419a07:	je     419a26 <isspace@plt+0x16116>
  419a09:	mov    edx,DWORD PTR [rcx+r15*4]
  419a0d:	cmp    edx,eax
  419a0f:	je     419e7e <isspace@plt+0x1656e>
  419a15:	test   edx,edx
  419a17:	je     419a26 <isspace@plt+0x16116>
  419a19:	add    r15,0x6
  419a1d:	cmp    r15,0xf5
  419a24:	jne    4199b4 <isspace@plt+0x160a4>
  419a26:	movsx  rdx,WORD PTR [rip+0x29d32]        # 443760 <isspace@plt+0x3fe50>
  419a2e:	mov    DWORD PTR [rcx+rdx*4],eax
  419a31:	lea    r15d,[rdx+0x10]
  419a35:	imul   esi,r12d,0x3e8
  419a3c:	mov    eax,0x80808081
  419a41:	imul   rsi,rax
  419a45:	shr    rsi,0x27
  419a49:	imul   edx,r13d,0x3e8
  419a50:	imul   rdx,rax
  419a54:	shr    rdx,0x27
  419a58:	imul   ecx,r8d,0x3e8
  419a5f:	imul   rcx,rax
  419a63:	shr    rcx,0x27
  419a67:	movsx  edi,r15w
  419a6b:	call   403330 <init_color@plt>
  419a70:	movzx  eax,WORD PTR [rip+0x29ce9]        # 443760 <isspace@plt+0x3fe50>
  419a77:	inc    eax
  419a79:	movsx  ecx,ax
  419a7c:	xor    edx,edx
  419a7e:	cmp    ecx,0xef
  419a84:	cmovle edx,eax
  419a87:	mov    WORD PTR [rip+0x29cd2],dx        # 443760 <isspace@plt+0x3fe50>
  419a8e:	mov    WORD PTR [rbp+0x0],r15w
  419a93:	jmp    419dcd <isspace@plt+0x164bd>
  419a98:	add    al,0xd0
  419a9a:	cmp    al,0xa
  419a9c:	jae    419ac8 <isspace@plt+0x161b8>
  419a9e:	mov    rdi,rbx
  419aa1:	xor    esi,esi
  419aa3:	mov    edx,0xa
  419aa8:	call   4034b0 <strtol@plt>
  419aad:	lea    ecx,[rax-0x1]
  419ab0:	cmp    ecx,0xfe
  419ab6:	ja     419dcd <isspace@plt+0x164bd>
  419abc:	movzx  eax,al
  419abf:	mov    WORD PTR [rbp+0x0],ax
  419ac3:	jmp    419dcd <isspace@plt+0x164bd>
  419ac8:	lea    rdi,[rip+0x16f7b]        # 430a4a <isspace@plt+0x2d13a>
  419acf:	mov    rsi,rbx
  419ad2:	call   4030f0 <strcasecmp@plt>
  419ad7:	test   eax,eax
  419ad9:	je     419b9d <isspace@plt+0x1628d>
  419adf:	lea    rdi,[rip+0x16f6a]        # 430a50 <isspace@plt+0x2d140>
  419ae6:	mov    rsi,rbx
  419ae9:	call   4030f0 <strcasecmp@plt>
  419aee:	test   eax,eax
  419af0:	je     419ba4 <isspace@plt+0x16294>
  419af6:	lea    rdi,[rip+0x16f57]        # 430a54 <isspace@plt+0x2d144>
  419afd:	mov    rsi,rbx
  419b00:	call   4030f0 <strcasecmp@plt>
  419b05:	test   eax,eax
  419b07:	je     419bae <isspace@plt+0x1629e>
  419b0d:	lea    rdi,[rip+0x16f46]        # 430a5a <isspace@plt+0x2d14a>
  419b14:	mov    rsi,rbx
  419b17:	call   4030f0 <strcasecmp@plt>
  419b1c:	test   eax,eax
  419b1e:	je     419bb8 <isspace@plt+0x162a8>
  419b24:	lea    rdi,[rip+0x16f36]        # 430a61 <isspace@plt+0x2d151>
  419b2b:	mov    rsi,rbx
  419b2e:	call   4030f0 <strcasecmp@plt>
  419b33:	test   eax,eax
  419b35:	je     419bc2 <isspace@plt+0x162b2>
  419b3b:	lea    rdi,[rip+0x16f24]        # 430a66 <isspace@plt+0x2d156>
  419b42:	mov    rsi,rbx
  419b45:	call   4030f0 <strcasecmp@plt>
  419b4a:	test   eax,eax
  419b4c:	je     419bcc <isspace@plt+0x162bc>
  419b4e:	lea    rdi,[rip+0x16f19]        # 430a6e <isspace@plt+0x2d15e>
  419b55:	mov    rsi,rbx
  419b58:	call   4030f0 <strcasecmp@plt>
  419b5d:	test   eax,eax
  419b5f:	je     419caa <isspace@plt+0x1639a>
  419b65:	lea    rdi,[rip+0x16f07]        # 430a73 <isspace@plt+0x2d163>
  419b6c:	mov    rsi,rbx
  419b6f:	call   4030f0 <strcasecmp@plt>
  419b74:	test   eax,eax
  419b76:	je     419db4 <isspace@plt+0x164a4>
  419b7c:	lea    rdi,[rip+0x16ef6]        # 430a79 <isspace@plt+0x2d169>
  419b83:	mov    rsi,rbx
  419b86:	call   4030f0 <strcasecmp@plt>
  419b8b:	test   eax,eax
  419b8d:	jne    419dcd <isspace@plt+0x164bd>
  419b93:	mov    eax,0x8
  419b98:	jmp    419db9 <isspace@plt+0x164a9>
  419b9d:	xor    eax,eax
  419b9f:	jmp    419db9 <isspace@plt+0x164a9>
  419ba4:	mov    eax,0x1
  419ba9:	jmp    419db9 <isspace@plt+0x164a9>
  419bae:	mov    eax,0x2
  419bb3:	jmp    419db9 <isspace@plt+0x164a9>
  419bb8:	mov    eax,0x3
  419bbd:	jmp    419db9 <isspace@plt+0x164a9>
  419bc2:	mov    eax,0x4
  419bc7:	jmp    419db9 <isspace@plt+0x164a9>
  419bcc:	mov    eax,0x5
  419bd1:	jmp    419db9 <isspace@plt+0x164a9>
  419bd6:	test   r12b,r12b
  419bd9:	mov    QWORD PTR [rsp],rbp
  419bdd:	je     419c04 <isspace@plt+0x162f4>
  419bdf:	lea    eax,[r12-0x37]
  419be4:	cdqe   
  419be6:	imul   rcx,rax,0x66666667
  419bed:	mov    rdx,rcx
  419bf0:	shr    rdx,0x3f
  419bf4:	sar    rcx,0x24
  419bf8:	add    ecx,edx
  419bfa:	shl    ecx,0x3
  419bfd:	lea    ecx,[rcx+rcx*4]
  419c00:	cmp    eax,ecx
  419c02:	jne    419c5e <isspace@plt+0x1634e>
  419c04:	test   r13b,r13b
  419c07:	je     419c2d <isspace@plt+0x1631d>
  419c09:	lea    eax,[r13-0x37]
  419c0d:	cdqe   
  419c0f:	imul   rcx,rax,0x66666667
  419c16:	mov    rdx,rcx
  419c19:	shr    rdx,0x3f
  419c1d:	sar    rcx,0x24
  419c21:	add    ecx,edx
  419c23:	shl    ecx,0x3
  419c26:	lea    ecx,[rcx+rcx*4]
  419c29:	cmp    eax,ecx
  419c2b:	jne    419c5e <isspace@plt+0x1634e>
  419c2d:	test   r8b,r8b
  419c30:	je     419df0 <isspace@plt+0x164e0>
  419c36:	lea    eax,[r8-0x37]
  419c3a:	cdqe   
  419c3c:	imul   rcx,rax,0x66666667
  419c43:	mov    rdx,rcx
  419c46:	shr    rdx,0x3f
  419c4a:	sar    rcx,0x24
  419c4e:	add    ecx,edx
  419c50:	shl    ecx,0x3
  419c53:	lea    ecx,[rcx+rcx*4]
  419c56:	cmp    eax,ecx
  419c58:	je     419df0 <isspace@plt+0x164e0>
  419c5e:	cmp    r12b,r13b
  419c61:	jne    419cb4 <isspace@plt+0x163a4>
  419c63:	cmp    r13b,r8b
  419c66:	jne    419cb4 <isspace@plt+0x163a4>
  419c68:	cmp    r12b,0xee
  419c6c:	ja     419cb4 <isspace@plt+0x163a4>
  419c6e:	lea    eax,[r12-0x8]
  419c73:	cdqe   
  419c75:	imul   r15,rax,0x66666667
  419c7c:	mov    rax,r15
  419c7f:	shr    rax,0x3f
  419c83:	sar    r15,0x22
  419c87:	add    r15d,eax
  419c8a:	lea    eax,[r15+r15*1]
  419c8e:	lea    eax,[rax+rax*4]
  419c91:	neg    eax
  419c93:	lea    eax,[r12+rax*1]
  419c97:	add    eax,0xfffffff8
  419c9a:	test   eax,eax
  419c9c:	jne    419cb4 <isspace@plt+0x163a4>
  419c9e:	add    r15d,0xe8
  419ca5:	jmp    419e9c <isspace@plt+0x1658c>
  419caa:	mov    eax,0x6
  419caf:	jmp    419db9 <isspace@plt+0x164a9>
  419cb4:	mov    eax,0xffffffff
  419cb9:	xor    ecx,ecx
  419cbb:	mov    r11d,0x37
  419cc1:	mov    ebx,0xfffff798
  419cc6:	xor    r15d,r15d
  419cc9:	jmp    419d05 <isspace@plt+0x163f5>
  419ccb:	mov    r13,r12
  419cce:	mov    r12,r14
  419cd1:	sub    ebp,r12d
  419cd4:	sub    edi,r13d
  419cd7:	sub    esi,r8d
  419cda:	imul   ebp,ebp
  419cdd:	imul   edi,edi
  419ce0:	add    edi,ebp
  419ce2:	imul   esi,esi
  419ce5:	add    esi,edi
  419ce7:	cmp    esi,eax
  419ce9:	cmovb  eax,esi
  419cec:	cmovb  r15d,r9d
  419cf0:	inc    ecx
  419cf2:	add    r11d,0x28
  419cf6:	add    ebx,0xa
  419cf9:	cmp    ecx,0xf0
  419cff:	je     419e9c <isspace@plt+0x1658c>
  419d05:	lea    r9d,[rcx+0x10]
  419d09:	mov    ebp,ebx
  419d0b:	mov    edi,ebx
  419d0d:	mov    esi,ebx
  419d0f:	cmp    r9d,0xe7
  419d16:	ja     419cd1 <isspace@plt+0x163c1>
  419d18:	mov    r14,r12
  419d1b:	mov    r12,r13
  419d1e:	mov    r13,r8
  419d21:	movzx  edx,cl
  419d24:	imul   edx,edx,0xab
  419d2a:	shr    edx,0x9
  419d2d:	and    edx,0xfffffffe
  419d30:	lea    r10d,[rdx+rdx*2]
  419d34:	neg    r10d
  419d37:	xor    esi,esi
  419d39:	mov    ebp,0x0
  419d3e:	cmp    ecx,0x24
  419d41:	jb     419d56 <isspace@plt+0x16446>
  419d43:	movzx  edx,cl
  419d46:	imul   edx,edx,0x39
  419d49:	shr    edx,0xb
  419d4c:	lea    edx,[rdx+rdx*4]
  419d4f:	lea    ebp,[rdx*8+0x37]
  419d56:	movzx  edx,cl
  419d59:	imul   edx,edx,0xab
  419d5f:	shr    edx,0xa
  419d62:	imul   edi,edx,0xab
  419d68:	shr    edi,0x9
  419d6b:	and    edi,0xfffffffe
  419d6e:	lea    r8d,[rdi+rdi*2]
  419d72:	mov    edi,0x0
  419d77:	sub    dl,r8b
  419d7a:	je     419d89 <isspace@plt+0x16479>
  419d7c:	movzx  edx,dl
  419d7f:	lea    edx,[rdx+rdx*4]
  419d82:	lea    edi,[rdx*8+0x37]
  419d89:	add    r10b,cl
  419d8c:	mov    r8,r13
  419d8f:	je     419ccb <isspace@plt+0x163bb>
  419d95:	mov    edx,ecx
  419d97:	mov    esi,0xaaaaaaab
  419d9c:	imul   rdx,rsi
  419da0:	shr    rdx,0x22
  419da4:	imul   edx,edx,0xf0
  419daa:	mov    esi,r11d
  419dad:	sub    esi,edx
  419daf:	jmp    419ccb <isspace@plt+0x163bb>
  419db4:	mov    eax,0x7
  419db9:	shl    rax,0x4
  419dbd:	lea    rcx,[rip+0x2615c]        # 43ff20 <isspace@plt+0x3c610>
  419dc4:	movzx  eax,WORD PTR [rax+rcx*1+0x8]
  419dc9:	mov    WORD PTR [rbp+0x0],ax
  419dcd:	mov    rax,QWORD PTR fs:0x28
  419dd6:	cmp    rax,QWORD PTR [rsp+0x10]
  419ddb:	jne    419ec5 <isspace@plt+0x165b5>
  419de1:	add    rsp,0x18
  419de5:	pop    rbx
  419de6:	pop    r12
  419de8:	pop    r13
  419dea:	pop    r14
  419dec:	pop    r15
  419dee:	pop    rbp
  419def:	ret    
  419df0:	test   r12b,r12b
  419df3:	je     419e8c <isspace@plt+0x1657c>
  419df9:	add    r12d,0xffffffc9
  419dfd:	movsxd rax,r12d
  419e00:	imul   rax,rax,0x66666667
  419e07:	mov    rcx,rax
  419e0a:	shr    rcx,0x3f
  419e0e:	sar    rax,0x24
  419e12:	add    eax,ecx
  419e14:	lea    eax,[rax+rax*8]
  419e17:	lea    r15d,[rax*4+0x10]
  419e1f:	test   r13b,r13b
  419e22:	je     419e97 <isspace@plt+0x16587>
  419e24:	add    r13d,0xffffffc9
  419e28:	movsxd rax,r13d
  419e2b:	imul   rax,rax,0x66666667
  419e32:	mov    rcx,rax
  419e35:	shr    rcx,0x3f
  419e39:	sar    rax,0x24
  419e3d:	add    eax,ecx
  419e3f:	lea    eax,[rax+rax*2]
  419e42:	lea    r15d,[r15+rax*2]
  419e46:	add    r8d,0xffffffc9
  419e4a:	movsxd rax,r8d
  419e4d:	imul   rax,rax,0x66666667
  419e54:	mov    rcx,rax
  419e57:	shr    rcx,0x3f
  419e5b:	sar    rax,0x24
  419e5f:	add    eax,ecx
  419e61:	jmp    419e99 <isspace@plt+0x16589>
  419e63:	add    r15,0xfffffffffffffffb
  419e67:	jmp    419e7e <isspace@plt+0x1656e>
  419e69:	add    r15,0xfffffffffffffffc
  419e6d:	jmp    419e7e <isspace@plt+0x1656e>
  419e6f:	add    r15,0xfffffffffffffffd
  419e73:	jmp    419e7e <isspace@plt+0x1656e>
  419e75:	add    r15,0xfffffffffffffffe
  419e79:	jmp    419e7e <isspace@plt+0x1656e>
  419e7b:	dec    r15
  419e7e:	add    r15d,0x10
  419e82:	mov    WORD PTR [rbp+0x0],r15w
  419e87:	jmp    419dcd <isspace@plt+0x164bd>
  419e8c:	mov    r15d,0x10
  419e92:	test   r13b,r13b
  419e95:	jne    419e24 <isspace@plt+0x16514>
  419e97:	xor    eax,eax
  419e99:	add    r15d,eax
  419e9c:	mov    rax,QWORD PTR [rip+0x28135]        # 441fd8 <isspace@plt+0x3e6c8>
  419ea3:	cmp    DWORD PTR [rax],0x10
  419ea6:	jg     419eb7 <isspace@plt+0x165a7>
  419ea8:	movsxd rax,r15d
  419eab:	lea    rcx,[rip+0x16c0e]        # 430ac0 <isspace@plt+0x2d1b0>
  419eb2:	movzx  r15d,BYTE PTR [rax+rcx*1]
  419eb7:	mov    rbp,QWORD PTR [rsp]
  419ebb:	mov    WORD PTR [rbp+0x0],r15w
  419ec0:	jmp    419dcd <isspace@plt+0x164bd>
  419ec5:	call   403280 <__stack_chk_fail@plt>
  419eca:	nop    WORD PTR [rax+rax*1+0x0]
  419ed0:	push   rax
  419ed1:	mov    rax,QWORD PTR fs:0x28
  419eda:	mov    QWORD PTR [rsp],rax
  419ede:	mov    DWORD PTR [rdi+0xf0],esi
  419ee4:	call   419f00 <isspace@plt+0x165f0>
  419ee9:	mov    rax,QWORD PTR fs:0x28
  419ef2:	cmp    rax,QWORD PTR [rsp]
  419ef6:	jne    419efa <isspace@plt+0x165ea>
  419ef8:	pop    rax
  419ef9:	ret    
  419efa:	call   403280 <__stack_chk_fail@plt>
  419eff:	nop
  419f00:	push   rbp
  419f01:	mov    rbp,rsp
  419f04:	push   r15
  419f06:	push   r14
  419f08:	push   r13
  419f0a:	push   r12
  419f0c:	push   rbx
  419f0d:	and    rsp,0xffffffffffffffe0
  419f11:	sub    rsp,0x100
  419f18:	mov    r12,rdi
  419f1b:	mov    rax,QWORD PTR fs:0x28
  419f24:	mov    QWORD PTR [rsp+0xe0],rax
  419f2c:	mov    rdx,QWORD PTR [rdi+0x70]
  419f30:	mov    rdi,QWORD PTR [rdi+0x78]
  419f34:	xor    esi,esi
  419f36:	call   403360 <memset@plt>
  419f3b:	mov    rsi,QWORD PTR [r12+0x50]
  419f40:	cmp    rsi,QWORD PTR [r12+0x60]
  419f45:	jne    419f62 <isspace@plt+0x16652>
  419f47:	mov    rsi,QWORD PTR [r12+0x68]
  419f4c:	test   rsi,rsi
  419f4f:	je     419f77 <isspace@plt+0x16667>
  419f51:	mov    rdi,QWORD PTR [r12]
  419f55:	call   410e10 <isspace@plt+0xd500>
  419f5a:	cmp    rax,0xffffffffffffffff
  419f5e:	jne    419f79 <isspace@plt+0x16669>
  419f60:	jmp    419f89 <isspace@plt+0x16679>
  419f62:	test   rsi,rsi
  419f65:	je     419f80 <isspace@plt+0x16670>
  419f67:	mov    rdi,QWORD PTR [r12]
  419f6b:	call   410d60 <isspace@plt+0xd450>
  419f70:	mov    QWORD PTR [r12+0x68],rax
  419f75:	jmp    419f89 <isspace@plt+0x16679>
  419f77:	xor    eax,eax
  419f79:	mov    QWORD PTR [r12+0x50],rax
  419f7e:	jmp    419f89 <isspace@plt+0x16679>
  419f80:	mov    QWORD PTR [r12+0x68],0x0
  419f89:	mov    rsi,QWORD PTR [r12+0x50]
  419f8e:	mov    rdx,QWORD PTR [r12+0x78]
  419f93:	mov    QWORD PTR [r12+0x60],rsi
  419f98:	mov    QWORD PTR [r12+0x80],rdx
  419fa0:	cmp    BYTE PTR [r12+0x105],0x0
  419fa9:	je     419fb2 <isspace@plt+0x166a2>
  419fab:	mov    eax,0x1
  419fb0:	jmp    419fc3 <isspace@plt+0x166b3>
  419fb2:	mov    rdi,QWORD PTR [r12]
  419fb6:	call   410bc0 <isspace@plt+0xd2b0>
  419fbb:	mov    rdx,QWORD PTR [r12+0x80]
  419fc3:	mov    QWORD PTR [rdx+0x18],rax
  419fc7:	mov    QWORD PTR [r12+0x88],rdx
  419fcf:	movsxd r9,DWORD PTR [r12+0x48]
  419fd4:	mov    rax,r9
  419fd7:	shl    rax,0x4
  419fdb:	lea    rsi,[rax+rax*2]
  419fdf:	add    rsi,0x28
  419fe3:	movsxd r10,DWORD PTR [r12+0x4c]
  419fe8:	mov    rdi,rsi
  419feb:	imul   rdi,r10
  419fef:	test   rdi,rdi
  419ff2:	je     41a037 <isspace@plt+0x16727>
  419ff4:	lea    r8,[rax+rax*2]
  419ff8:	xor    eax,eax
  419ffa:	xor    ebx,ebx
  419ffc:	jmp    41a00b <isspace@plt+0x166fb>
  419ffe:	xchg   ax,ax
  41a000:	add    rbx,rsi
  41a003:	mov    rax,rcx
  41a006:	cmp    rbx,rdi
  41a009:	jae    41a023 <isspace@plt+0x16713>
  41a00b:	mov    rdx,QWORD PTR [r12+0x78]
  41a010:	lea    rcx,[rdx+rbx*1]
  41a014:	mov    QWORD PTR [rdx+rbx*1],rax
  41a018:	test   rax,rax
  41a01b:	je     41a000 <isspace@plt+0x166f0>
  41a01d:	mov    QWORD PTR [rax+0x8],rcx
  41a021:	jmp    41a000 <isspace@plt+0x166f0>
  41a023:	sub    rdx,r8
  41a026:	add    rdx,rbx
  41a029:	add    rdx,0xffffffffffffffd8
  41a02d:	jne    41a037 <isspace@plt+0x16727>
  41a02f:	mov    rdx,QWORD PTR [r12+0x80]
  41a037:	mov    QWORD PTR [r12+0x90],rdx
  41a03f:	mov    QWORD PTR [rdx+0x8],0x0
  41a047:	mov    rdi,QWORD PTR [r12+0x10]
  41a04c:	mov    rax,QWORD PTR [r12+0x80]
  41a054:	mov    QWORD PTR [r12+0xb8],rax
  41a05c:	mov    DWORD PTR [r12+0xc0],0x0
  41a068:	test   rdi,rdi
  41a06b:	je     41a088 <isspace@plt+0x16778>
  41a06d:	mov    esi,0x41
  41a072:	call   QWORD PTR [rdi]
  41a074:	mov    QWORD PTR [r12+0x38],rax
  41a079:	mov    QWORD PTR [r12+0x40],rdx
  41a07e:	mov    r9d,DWORD PTR [r12+0x48]
  41a083:	mov    r10d,DWORD PTR [r12+0x4c]
  41a088:	imul   r10d,r9d
  41a08c:	shl    r10d,0x2
  41a090:	movsxd rdx,r10d
  41a093:	mov    rdi,QWORD PTR [r12]
  41a097:	mov    r13,QWORD PTR [r12+0x8]
  41a09c:	mov    rsi,QWORD PTR [r12+0x50]
  41a0a1:	mov    QWORD PTR [rsp+0x20],rdx
  41a0a6:	mov    rcx,r13
  41a0a9:	call   411130 <isspace@plt+0xd820>
  41a0ae:	mov    BYTE PTR [r13+rax*1+0x0],0x0
  41a0b4:	mov    r14,QWORD PTR [r12+0x50]
  41a0b9:	vxorps xmm0,xmm0,xmm0
  41a0bd:	vmovups YMMWORD PTR [rsp+0xb0],ymm0
  41a0c6:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  41a0cf:	mov    QWORD PTR [rsp+0x30],0x0
  41a0d8:	vmovups YMMWORD PTR [rsp+0x70],ymm0
  41a0de:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  41a0e4:	test   rax,rax
  41a0e7:	je     41a36b <isspace@plt+0x16a5b>
  41a0ed:	mov    rbx,rax
  41a0f0:	mov    r15,r13
  41a0f3:	jmp    41a12e <isspace@plt+0x1681e>
  41a0f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a0ff:	nop
  41a100:	mov    rdi,QWORD PTR [r12]
  41a104:	mov    rsi,QWORD PTR [rsp+0x70]
  41a109:	add    rsi,r14
  41a10c:	mov    rdx,QWORD PTR [rsp+0x20]
  41a111:	mov    rcx,r13
  41a114:	call   411130 <isspace@plt+0xd820>
  41a119:	mov    rbx,rax
  41a11c:	mov    BYTE PTR [r13+rax*1+0x0],0x0
  41a122:	mov    r15,r13
  41a125:	test   rbx,rbx
  41a128:	je     41a36b <isspace@plt+0x16a5b>
  41a12e:	lea    rdi,[rsp+0x2c]
  41a133:	mov    rsi,r15
  41a136:	mov    rdx,rbx
  41a139:	lea    rcx,[rsp+0x30]
  41a13e:	vzeroupper 
  41a141:	call   4032b0 <mbrtowc@plt>
  41a146:	cmp    rax,0xfffffffffffffffe
  41a14a:	je     41a100 <isspace@plt+0x167f0>
  41a14c:	test   rax,rax
  41a14f:	je     41a1e0 <isspace@plt+0x168d0>
  41a155:	cmp    rax,0xffffffffffffffff
  41a159:	jne    41a240 <isspace@plt+0x16930>
  41a15f:	call   403130 <__errno_location@plt>
  41a164:	mov    rcx,rax
  41a167:	mov    eax,0xf
  41a16c:	cmp    DWORD PTR [rcx],0x54
  41a16f:	jne    41a252 <isspace@plt+0x16942>
  41a175:	mov    QWORD PTR [rsp+0x30],0x0
  41a17e:	mov    eax,0x1
  41a183:	cmp    rbx,0x2
  41a187:	jb     41a1a8 <isspace@plt+0x16898>
  41a189:	mov    eax,0x1
  41a18e:	xchg   ax,ax
  41a190:	movzx  ecx,BYTE PTR [r15+rax*1]
  41a195:	and    cl,0xc0
  41a198:	cmp    cl,0x80
  41a19b:	jne    41a1a8 <isspace@plt+0x16898>
  41a19d:	inc    rax
  41a1a0:	cmp    rbx,rax
  41a1a3:	jne    41a190 <isspace@plt+0x16880>
  41a1a5:	mov    rax,rbx
  41a1a8:	lea    rcx,[rsp+0x50]
  41a1ad:	vxorps xmm0,xmm0,xmm0
  41a1b1:	vmovups XMMWORD PTR [rcx],xmm0
  41a1b5:	vmovups xmm0,XMMWORD PTR [rip+0x16a13]        # 430bd0 <isspace@plt+0x2d2c0>
  41a1bd:	vmovaps XMMWORD PTR [rsp+0xa0],xmm0
  41a1c6:	mov    ecx,0x1
  41a1cb:	lea    rdx,[rsp+0x4c]
  41a1d0:	jmp    41a205 <isspace@plt+0x168f5>
  41a1d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a1dc:	nop    DWORD PTR [rax+0x0]
  41a1e0:	lea    rax,[rsp+0x3c]
  41a1e5:	vxorps xmm0,xmm0,xmm0
  41a1e9:	vmovups XMMWORD PTR [rax],xmm0
  41a1ed:	vmovaps XMMWORD PTR [rsp+0xa0],xmm0
  41a1f6:	mov    ecx,0x2
  41a1fb:	mov    eax,0x1
  41a200:	lea    rdx,[rsp+0x38]
  41a205:	mov    QWORD PTR [rsp+0xb0],rax
  41a20d:	mov    DWORD PTR [rsp+0xb8],ecx
  41a214:	mov    eax,DWORD PTR [rdx+0x10]
  41a217:	lea    rcx,[rsp+0xbc]
  41a21f:	mov    DWORD PTR [rcx+0x10],eax
  41a222:	vmovups xmm0,XMMWORD PTR [rdx]
  41a226:	vmovups XMMWORD PTR [rcx],xmm0
  41a22a:	cmp    QWORD PTR [rsp+0x70],0x0
  41a230:	jne    41a2af <isspace@plt+0x1699f>
  41a232:	jmp    41a2d0 <isspace@plt+0x169c0>
  41a237:	nop    WORD PTR [rax+rax*1+0x0]
  41a240:	cmp    rax,0xf
  41a244:	mov    ecx,0xf
  41a249:	cmovae rax,rcx
  41a24d:	test   rax,rax
  41a250:	je     41a276 <isspace@plt+0x16966>
  41a252:	xor    ecx,ecx
  41a254:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a25e:	xchg   ax,ax
  41a260:	movzx  edx,BYTE PTR [r15+rcx*1]
  41a265:	mov    BYTE PTR [rsp+rcx*1+0xa0],dl
  41a26c:	inc    rcx
  41a26f:	cmp    rcx,rax
  41a272:	jb     41a260 <isspace@plt+0x16950>
  41a274:	jmp    41a278 <isspace@plt+0x16968>
  41a276:	xor    eax,eax
  41a278:	mov    BYTE PTR [rsp+rax*1+0xa0],0x0
  41a280:	mov    QWORD PTR [rsp+0xb0],rax
  41a288:	mov    edi,DWORD PTR [rsp+0x2c]
  41a28c:	call   403590 <wcwidth@plt>
  41a291:	cmp    eax,0xffffffff
  41a294:	mov    ecx,0x1
  41a299:	cmove  eax,ecx
  41a29c:	mov    DWORD PTR [rsp+0xb8],eax
  41a2a3:	test   eax,eax
  41a2a5:	je     41a322 <isspace@plt+0x16a12>
  41a2a7:	cmp    QWORD PTR [rsp+0x70],0x0
  41a2ad:	je     41a2d0 <isspace@plt+0x169c0>
  41a2af:	mov    rdi,r12
  41a2b2:	lea    rsi,[rsp+0x60]
  41a2b7:	call   41aa40 <isspace@plt+0x17130>
  41a2bc:	test   al,al
  41a2be:	je     41a36b <isspace@plt+0x16a5b>
  41a2c4:	mov    rax,QWORD PTR [rsp+0x70]
  41a2c9:	jmp    41a2d2 <isspace@plt+0x169c2>
  41a2cb:	nop    DWORD PTR [rax+rax*1+0x0]
  41a2d0:	xor    eax,eax
  41a2d2:	add    r14,rax
  41a2d5:	vmovups ymm0,YMMWORD PTR [rsp+0xb0]
  41a2de:	vmovups YMMWORD PTR [rsp+0x70],ymm0
  41a2e4:	vmovaps ymm0,YMMWORD PTR [rsp+0xa0]
  41a2ed:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  41a2f3:	mov    rax,QWORD PTR [rsp+0xb0]
  41a2fb:	sub    rbx,rax
  41a2fe:	add    r15,rax
  41a301:	vxorps xmm0,xmm0,xmm0
  41a305:	vmovups YMMWORD PTR [rsp+0xb0],ymm0
  41a30e:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  41a317:	test   rbx,rbx
  41a31a:	jne    41a12e <isspace@plt+0x1681e>
  41a320:	jmp    41a36b <isspace@plt+0x16a5b>
  41a322:	mov    QWORD PTR [rsp+0x18],r14
  41a327:	mov    r14,r13
  41a32a:	lea    r13,[rsp+0x60]
  41a32f:	mov    rdi,r13
  41a332:	call   403250 <strlen@plt>
  41a337:	mov    edx,0xf
  41a33c:	sub    rdx,rax
  41a33f:	mov    ecx,0x30
  41a344:	mov    rdi,r13
  41a347:	mov    r13,r14
  41a34a:	mov    r14,QWORD PTR [rsp+0x18]
  41a34f:	lea    rsi,[rsp+0xa0]
  41a357:	call   403840 <__strncat_chk@plt>
  41a35c:	mov    rax,QWORD PTR [rsp+0xb0]
  41a364:	add    QWORD PTR [rsp+0x70],rax
  41a369:	jmp    41a2fb <isspace@plt+0x169eb>
  41a36b:	cmp    QWORD PTR [rsp+0x70],0x0
  41a371:	je     41a38c <isspace@plt+0x16a7c>
  41a373:	lea    rsi,[rsp+0x60]
  41a378:	mov    rdi,r12
  41a37b:	vzeroupper 
  41a37e:	call   41aa40 <isspace@plt+0x17130>
  41a383:	test   al,al
  41a385:	je     41a38c <isspace@plt+0x16a7c>
  41a387:	add    r14,QWORD PTR [rsp+0x70]
  41a38c:	mov    QWORD PTR [r12+0x58],r14
  41a391:	cmp    QWORD PTR [r12+0xb8],0x0
  41a39a:	je     41a3ce <isspace@plt+0x16abe>
  41a39c:	mov    rdi,QWORD PTR [r12]
  41a3a0:	vzeroupper 
  41a3a3:	call   410890 <isspace@plt+0xcf80>
  41a3a8:	mov    rcx,QWORD PTR [r12+0xb8]
  41a3b0:	cmp    r14,rax
  41a3b3:	jne    41a3e3 <isspace@plt+0x16ad3>
  41a3b5:	cmp    QWORD PTR [rcx+0x10],0x0
  41a3ba:	jne    41a3e3 <isspace@plt+0x16ad3>
  41a3bc:	mov    rax,QWORD PTR [rcx]
  41a3bf:	test   rax,rax
  41a3c2:	je     41a3f5 <isspace@plt+0x16ae5>
  41a3c4:	mov    QWORD PTR [r12+0x88],rax
  41a3cc:	jmp    41a3fd <isspace@plt+0x16aed>
  41a3ce:	mov    rax,QWORD PTR [r12+0x90]
  41a3d6:	mov    QWORD PTR [r12+0x88],rax
  41a3de:	jmp    41a47d <isspace@plt+0x16b6d>
  41a3e3:	mov    QWORD PTR [r12+0x88],rcx
  41a3eb:	test   rcx,rcx
  41a3ee:	jne    41a3fd <isspace@plt+0x16aed>
  41a3f0:	jmp    41a47d <isspace@plt+0x16b6d>
  41a3f5:	mov    QWORD PTR [r12+0x88],rcx
  41a3fd:	movsxd rax,DWORD PTR [r12+0xc0]
  41a405:	cmp    eax,DWORD PTR [r12+0x48]
  41a40a:	jge    41a47d <isspace@plt+0x16b6d>
  41a40c:	lea    rdx,[rax+rax*2]
  41a410:	shl    rdx,0x4
  41a414:	vmovups ymm0,YMMWORD PTR [r12+0x18]
  41a41b:	vmovups ymm1,YMMWORD PTR [r12+0x28]
  41a422:	vmovups YMMWORD PTR [rcx+rdx*1+0x38],ymm1
  41a428:	vmovups YMMWORD PTR [rcx+rdx*1+0x28],ymm0
  41a42e:	inc    rax
  41a431:	movsxd rcx,DWORD PTR [r12+0x48]
  41a436:	cmp    rax,rcx
  41a439:	jge    41a47d <isspace@plt+0x16b6d>
  41a43b:	lea    rcx,[r12+0x18]
  41a440:	add    rdx,0x58
  41a444:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a44e:	xchg   ax,ax
  41a450:	mov    rsi,QWORD PTR [r12+0xb8]
  41a458:	vmovups ymm0,YMMWORD PTR [rcx]
  41a45c:	vmovups ymm1,YMMWORD PTR [rcx+0x10]
  41a461:	vmovups YMMWORD PTR [rsi+rdx*1+0x10],ymm1
  41a467:	vmovups YMMWORD PTR [rsi+rdx*1],ymm0
  41a46c:	inc    rax
  41a46f:	movsxd rsi,DWORD PTR [r12+0x48]
  41a474:	add    rdx,0x30
  41a478:	cmp    rax,rsi
  41a47b:	jl     41a450 <isspace@plt+0x16b40>
  41a47d:	mov    r14,QWORD PTR [r12+0xf8]
  41a485:	test   r14,r14
  41a488:	jne    41a4ba <isspace@plt+0x16baa>
  41a48a:	jmp    41a5d9 <isspace@plt+0x16cc9>
  41a48f:	mov    r11,QWORD PTR [r12+0x90]
  41a497:	mov    r10d,DWORD PTR [r12+0x4c]
  41a49c:	dec    r10d
  41a49f:	xor    ecx,ecx
  41a4a1:	mov    QWORD PTR [r14+0x30],r11
  41a4a5:	mov    DWORD PTR [r14+0x20],r10d
  41a4a9:	mov    DWORD PTR [r14+0x24],ecx
  41a4ad:	mov    r14,QWORD PTR [r14+0x50]
  41a4b1:	test   r14,r14
  41a4b4:	je     41a5d9 <isspace@plt+0x16cc9>
  41a4ba:	mov    rsi,QWORD PTR [r14]
  41a4bd:	mov    rax,QWORD PTR [r14+0x40]
  41a4c1:	mov    rdi,QWORD PTR [rax]
  41a4c4:	vzeroupper 
  41a4c7:	call   410e10 <isspace@plt+0xd500>
  41a4cc:	mov    rsi,QWORD PTR [r12+0x50]
  41a4d1:	cmp    rsi,rax
  41a4d4:	ja     41a4dd <isspace@plt+0x16bcd>
  41a4d6:	cmp    QWORD PTR [r12+0x58],rax
  41a4db:	jae    41a510 <isspace@plt+0x16c00>
  41a4dd:	mov    QWORD PTR [r14+0x30],0x0
  41a4e5:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
  41a4ed:	cmp    r14,QWORD PTR [r12+0x98]
  41a4f5:	jne    41a4ad <isspace@plt+0x16b9d>
  41a4f7:	mov    rax,QWORD PTR [r12+0x80]
  41a4ff:	mov    QWORD PTR [r14+0x30],rax
  41a503:	mov    DWORD PTR [r14+0x20],0x0
  41a50b:	xor    ecx,ecx
  41a50d:	jmp    41a4a9 <isspace@plt+0x16b99>
  41a50f:	nop
  41a510:	mov    r11,QWORD PTR [r12+0x80]
  41a518:	test   r11,r11
  41a51b:	je     41a48f <isspace@plt+0x16b7f>
  41a521:	mov    rdi,QWORD PTR [r12+0x88]
  41a529:	xor    r10d,r10d
  41a52c:	nop    DWORD PTR [rax+0x0]
  41a530:	cmp    rsi,rax
  41a533:	setb   dl
  41a536:	cmp    r11,rdi
  41a539:	je     41a562 <isspace@plt+0x16c52>
  41a53b:	cmp    rsi,rax
  41a53e:	jae    41a562 <isspace@plt+0x16c52>
  41a540:	mov    rcx,QWORD PTR [r11+0x10]
  41a544:	add    rcx,rsi
  41a547:	cmp    rcx,rax
  41a54a:	ja     41a560 <isspace@plt+0x16c50>
  41a54c:	inc    r10d
  41a54f:	mov    r11,QWORD PTR [r11+0x8]
  41a553:	mov    rsi,rcx
  41a556:	test   r11,r11
  41a559:	jne    41a530 <isspace@plt+0x16c20>
  41a55b:	jmp    41a48f <isspace@plt+0x16b7f>
  41a560:	mov    dl,0x1
  41a562:	mov    r8d,DWORD PTR [r12+0x48]
  41a567:	mov    ecx,DWORD PTR [r11+0x20]
  41a56b:	cmp    r8d,ecx
  41a56e:	cmovg  r8d,ecx
  41a572:	xor    ecx,ecx
  41a574:	test   dl,dl
  41a576:	je     41a4a1 <isspace@plt+0x16b91>
  41a57c:	test   r8d,r8d
  41a57f:	jle    41a4a1 <isspace@plt+0x16b91>
  41a585:	movsxd rbx,r8d
  41a588:	lea    r9,[r11+0x68]
  41a58c:	xor    ecx,ecx
  41a58e:	xchg   ax,ax
  41a590:	movsxd rdi,ecx
  41a593:	mov    rcx,rdi
  41a596:	shl    rcx,0x4
  41a59a:	lea    rdx,[rcx+rcx*2]
  41a59e:	add    rsi,QWORD PTR [r11+rdx*1+0x38]
  41a5a3:	inc    rdi
  41a5a6:	add    rdx,r9
  41a5a9:	nop    DWORD PTR [rax+0x0]
  41a5b0:	mov    rcx,rdi
  41a5b3:	cmp    rdi,rbx
  41a5b6:	jge    41a5c6 <isspace@plt+0x16cb6>
  41a5b8:	lea    rdi,[rcx+0x1]
  41a5bc:	cmp    QWORD PTR [rdx],0x0
  41a5c0:	lea    rdx,[rdx+0x30]
  41a5c4:	je     41a5b0 <isspace@plt+0x16ca0>
  41a5c6:	cmp    rsi,rax
  41a5c9:	jae    41a4a1 <isspace@plt+0x16b91>
  41a5cf:	cmp    r8d,ecx
  41a5d2:	jg     41a590 <isspace@plt+0x16c80>
  41a5d4:	jmp    41a4a1 <isspace@plt+0x16b91>
  41a5d9:	mov    BYTE PTR [r12+0x104],0x1
  41a5e2:	mov    rax,QWORD PTR fs:0x28
  41a5eb:	cmp    rax,QWORD PTR [rsp+0xe0]
  41a5f3:	jne    41a607 <isspace@plt+0x16cf7>
  41a5f5:	lea    rsp,[rbp-0x28]
  41a5f9:	pop    rbx
  41a5fa:	pop    r12
  41a5fc:	pop    r13
  41a5fe:	pop    r14
  41a600:	pop    r15
  41a602:	pop    rbp
  41a603:	vzeroupper 
  41a606:	ret    
  41a607:	vzeroupper 
  41a60a:	call   403280 <__stack_chk_fail@plt>
  41a60f:	nop
  41a610:	push   rax
  41a611:	mov    rax,QWORD PTR fs:0x28
  41a61a:	mov    QWORD PTR [rsp],rax
  41a61e:	mov    rax,QWORD PTR [rdi+0x50]
  41a622:	mov    rdx,QWORD PTR [rdi+0x58]
  41a626:	mov    rcx,QWORD PTR fs:0x28
  41a62f:	cmp    rcx,QWORD PTR [rsp]
  41a633:	jne    41a637 <isspace@plt+0x16d27>
  41a635:	pop    rcx
  41a636:	ret    
  41a637:	call   403280 <__stack_chk_fail@plt>
  41a63c:	nop    DWORD PTR [rax+0x0]
  41a640:	push   r15
  41a642:	push   r14
  41a644:	push   r12
  41a646:	push   rbx
  41a647:	push   rax
  41a648:	mov    rax,QWORD PTR fs:0x28
  41a651:	mov    QWORD PTR [rsp],rax
  41a655:	mov    r15,QWORD PTR [rdi+0x50]
  41a659:	cmp    r15,rsi
  41a65c:	ja     41a664 <isspace@plt+0x16d54>
  41a65e:	cmp    QWORD PTR [rdi+0x58],rsi
  41a662:	jae    41a6a8 <isspace@plt+0x16d98>
  41a664:	test   rdx,rdx
  41a667:	je     41a670 <isspace@plt+0x16d60>
  41a669:	mov    QWORD PTR [rdx],0x0
  41a670:	test   rcx,rcx
  41a673:	je     41a67b <isspace@plt+0x16d6b>
  41a675:	mov    DWORD PTR [rcx],0xffffffff
  41a67b:	test   r8,r8
  41a67e:	je     41a687 <isspace@plt+0x16d77>
  41a680:	mov    DWORD PTR [r8],0xffffffff
  41a687:	xor    eax,eax
  41a689:	mov    rcx,QWORD PTR fs:0x28
  41a692:	cmp    rcx,QWORD PTR [rsp]
  41a696:	jne    41a789 <isspace@plt+0x16e79>
  41a69c:	add    rsp,0x8
  41a6a0:	pop    rbx
  41a6a1:	pop    r12
  41a6a3:	pop    r14
  41a6a5:	pop    r15
  41a6a7:	ret    
  41a6a8:	mov    r10,QWORD PTR [rdi+0x80]
  41a6af:	test   r10,r10
  41a6b2:	je     41a6e5 <isspace@plt+0x16dd5>
  41a6b4:	mov    rbx,QWORD PTR [rdi+0x88]
  41a6bb:	xor    r9d,r9d
  41a6be:	xchg   ax,ax
  41a6c0:	cmp    r15,rsi
  41a6c3:	jae    41a718 <isspace@plt+0x16e08>
  41a6c5:	cmp    r10,rbx
  41a6c8:	je     41a718 <isspace@plt+0x16e08>
  41a6ca:	mov    rax,QWORD PTR [r10+0x10]
  41a6ce:	add    rax,r15
  41a6d1:	cmp    rax,rsi
  41a6d4:	ja     41a718 <isspace@plt+0x16e08>
  41a6d6:	inc    r9d
  41a6d9:	mov    r10,QWORD PTR [r10+0x8]
  41a6dd:	mov    r15,rax
  41a6e0:	test   r10,r10
  41a6e3:	jne    41a6c0 <isspace@plt+0x16db0>
  41a6e5:	mov    r10,QWORD PTR [rdi+0x90]
  41a6ec:	mov    r9d,DWORD PTR [rdi+0x4c]
  41a6f0:	dec    r9d
  41a6f3:	xor    ebx,ebx
  41a6f5:	test   rdx,rdx
  41a6f8:	je     41a6fd <isspace@plt+0x16ded>
  41a6fa:	mov    QWORD PTR [rdx],r10
  41a6fd:	test   rcx,rcx
  41a700:	je     41a705 <isspace@plt+0x16df5>
  41a702:	mov    DWORD PTR [rcx],r9d
  41a705:	mov    al,0x1
  41a707:	test   r8,r8
  41a70a:	je     41a689 <isspace@plt+0x16d79>
  41a710:	mov    DWORD PTR [r8],ebx
  41a713:	jmp    41a689 <isspace@plt+0x16d79>
  41a718:	mov    r11d,DWORD PTR [rdi+0x48]
  41a71c:	mov    eax,DWORD PTR [r10+0x20]
  41a720:	cmp    r11d,eax
  41a723:	cmovg  r11d,eax
  41a727:	xor    ebx,ebx
  41a729:	test   r11d,r11d
  41a72c:	jle    41a6f5 <isspace@plt+0x16de5>
  41a72e:	cmp    r15,rsi
  41a731:	jae    41a6f5 <isspace@plt+0x16de5>
  41a733:	movsxd r12,r11d
  41a736:	lea    r14,[r10+0x68]
  41a73a:	xor    ebx,ebx
  41a73c:	nop    DWORD PTR [rax+0x0]
  41a740:	movsxd rdi,ebx
  41a743:	mov    rax,rdi
  41a746:	shl    rax,0x4
  41a74a:	lea    rax,[rax+rax*2]
  41a74e:	add    r15,QWORD PTR [r10+rax*1+0x38]
  41a753:	inc    rdi
  41a756:	add    rax,r14
  41a759:	nop    DWORD PTR [rax+0x0]
  41a760:	mov    rbx,rdi
  41a763:	cmp    rdi,r12
  41a766:	jge    41a776 <isspace@plt+0x16e66>
  41a768:	lea    rdi,[rbx+0x1]
  41a76c:	cmp    QWORD PTR [rax],0x0
  41a770:	lea    rax,[rax+0x30]
  41a774:	je     41a760 <isspace@plt+0x16e50>
  41a776:	cmp    r11d,ebx
  41a779:	jle    41a6f5 <isspace@plt+0x16de5>
  41a77f:	cmp    r15,rsi
  41a782:	jb     41a740 <isspace@plt+0x16e30>
  41a784:	jmp    41a6f5 <isspace@plt+0x16de5>
  41a789:	call   403280 <__stack_chk_fail@plt>
  41a78e:	xchg   ax,ax
  41a790:	push   rax
  41a791:	mov    rax,QWORD PTR fs:0x28
  41a79a:	mov    QWORD PTR [rsp],rax
  41a79e:	mov    rdi,QWORD PTR [rdi+0x98]
  41a7a5:	call   41a7c0 <isspace@plt+0x16eb0>
  41a7aa:	mov    rax,QWORD PTR fs:0x28
  41a7b3:	cmp    rax,QWORD PTR [rsp]
  41a7b7:	jne    41a7bb <isspace@plt+0x16eab>
  41a7b9:	pop    rax
  41a7ba:	ret    
  41a7bb:	call   403280 <__stack_chk_fail@plt>
  41a7c0:	push   r15
  41a7c2:	push   r14
  41a7c4:	push   r12
  41a7c6:	push   rbx
  41a7c7:	push   rax
  41a7c8:	mov    rax,QWORD PTR fs:0x28
  41a7d1:	mov    QWORD PTR [rsp],rax
  41a7d5:	cmp    rsi,0xffffffffffffffff
  41a7d9:	je     41a9ac <isspace@plt+0x1709c>
  41a7df:	mov    r12,rsi
  41a7e2:	mov    r14,rdi
  41a7e5:	mov    r15,QWORD PTR [rdi+0x40]
  41a7e9:	mov    rdi,QWORD PTR [r15]
  41a7ec:	call   410890 <isspace@plt+0xcf80>
  41a7f1:	cmp    rax,r12
  41a7f4:	cmovb  r12,rax
  41a7f8:	mov    rax,QWORD PTR [r14+0x40]
  41a7fc:	cmp    QWORD PTR [rax+0x98],r14
  41a803:	jne    41a8c1 <isspace@plt+0x16fb1>
  41a809:	mov    rax,QWORD PTR [r15+0x50]
  41a80d:	cmp    rax,r12
  41a810:	jne    41a81a <isspace@plt+0x16f0a>
  41a812:	mov    QWORD PTR [r15+0x60],0x0
  41a81a:	cmp    QWORD PTR [r15+0x58],r12
  41a81e:	jne    41a830 <isspace@plt+0x16f20>
  41a820:	mov    rcx,QWORD PTR [r15+0x88]
  41a827:	cmp    rcx,QWORD PTR [r15+0x90]
  41a82e:	je     41a853 <isspace@plt+0x16f43>
  41a830:	cmp    r12,rax
  41a833:	jb     41a873 <isspace@plt+0x16f63>
  41a835:	cmp    r12,QWORD PTR [r15+0x58]
  41a839:	ja     41a873 <isspace@plt+0x16f63>
  41a83b:	cmp    r12,rax
  41a83e:	jbe    41a895 <isspace@plt+0x16f85>
  41a840:	cmp    r12,QWORD PTR [r15+0x58]
  41a844:	ja     41a895 <isspace@plt+0x16f85>
  41a846:	cmp    r12,rax
  41a849:	jbe    41a8b5 <isspace@plt+0x16fa5>
  41a84b:	cmp    r12,QWORD PTR [r15+0x58]
  41a84f:	ja     41a8b5 <isspace@plt+0x16fa5>
  41a851:	jmp    41a8c1 <isspace@plt+0x16fb1>
  41a853:	mov    rcx,QWORD PTR [r15+0x80]
  41a85a:	add    rax,QWORD PTR [rcx+0x10]
  41a85e:	mov    QWORD PTR [r15+0x50],rax
  41a862:	mov    rdi,r15
  41a865:	call   419f00 <isspace@plt+0x165f0>
  41a86a:	mov    rax,QWORD PTR [r15+0x50]
  41a86e:	cmp    r12,rax
  41a871:	jae    41a835 <isspace@plt+0x16f25>
  41a873:	mov    QWORD PTR [r15+0x50],r12
  41a877:	mov    eax,DWORD PTR [r15+0x4c]
  41a87b:	mov    esi,eax
  41a87d:	shr    esi,0x1f
  41a880:	add    esi,eax
  41a882:	sar    esi,1
  41a884:	mov    rdi,r15
  41a887:	call   41be10 <isspace@plt+0x18500>
  41a88c:	mov    rax,QWORD PTR [r15+0x50]
  41a890:	cmp    r12,rax
  41a893:	ja     41a840 <isspace@plt+0x16f30>
  41a895:	mov    rdi,QWORD PTR [r15]
  41a898:	mov    rsi,r12
  41a89b:	call   413280 <isspace@plt+0xf970>
  41a8a0:	mov    QWORD PTR [r15+0x50],rax
  41a8a4:	mov    rdi,r15
  41a8a7:	call   419f00 <isspace@plt+0x165f0>
  41a8ac:	mov    rax,QWORD PTR [r15+0x50]
  41a8b0:	cmp    r12,rax
  41a8b3:	ja     41a84b <isspace@plt+0x16f3b>
  41a8b5:	mov    QWORD PTR [r15+0x50],r12
  41a8b9:	mov    rdi,r15
  41a8bc:	call   419f00 <isspace@plt+0x165f0>
  41a8c1:	mov    rax,QWORD PTR [r14+0x40]
  41a8c5:	mov    rdi,QWORD PTR [rax]
  41a8c8:	mov    rsi,r12
  41a8cb:	call   410d60 <isspace@plt+0xd450>
  41a8d0:	mov    QWORD PTR [r14],rax
  41a8d3:	cmp    BYTE PTR [r14+0x10],0x0
  41a8d8:	je     41a931 <isspace@plt+0x17021>
  41a8da:	cmp    QWORD PTR [r14+0x18],r12
  41a8de:	je     41a8e8 <isspace@plt+0x16fd8>
  41a8e0:	mov    DWORD PTR [r14+0x28],0x0
  41a8e8:	mov    QWORD PTR [r14+0x18],r12
  41a8ec:	mov    rdi,QWORD PTR [r14+0x40]
  41a8f0:	mov    rdx,QWORD PTR [rdi+0x50]
  41a8f4:	cmp    rdx,r12
  41a8f7:	ja     41a8ff <isspace@plt+0x16fef>
  41a8f9:	cmp    QWORD PTR [rdi+0x58],r12
  41a8fd:	jae    41a93d <isspace@plt+0x1702d>
  41a8ff:	mov    QWORD PTR [r14+0x30],0x0
  41a907:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
  41a90f:	cmp    QWORD PTR [rdi+0x98],r14
  41a916:	jne    41a9ac <isspace@plt+0x1709c>
  41a91c:	mov    rax,QWORD PTR [rdi+0x80]
  41a923:	mov    QWORD PTR [r14+0x30],rax
  41a927:	mov    QWORD PTR [r14+0x20],0x0
  41a92f:	jmp    41a9ac <isspace@plt+0x1709c>
  41a931:	mov    QWORD PTR [r14+0x8],rax
  41a935:	cmp    QWORD PTR [r14+0x18],r12
  41a939:	jne    41a8e0 <isspace@plt+0x16fd0>
  41a93b:	jmp    41a8e8 <isspace@plt+0x16fd8>
  41a93d:	mov    r11,QWORD PTR [rdi+0x80]
  41a944:	test   r11,r11
  41a947:	je     41a98b <isspace@plt+0x1707b>
  41a949:	mov    rcx,QWORD PTR [rdi+0x88]
  41a950:	xor    r9d,r9d
  41a953:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a95d:	nop    DWORD PTR [rax]
  41a960:	cmp    rdx,r12
  41a963:	setb   bl
  41a966:	cmp    r11,rcx
  41a969:	je     41a9c9 <isspace@plt+0x170b9>
  41a96b:	cmp    rdx,r12
  41a96e:	jae    41a9c9 <isspace@plt+0x170b9>
  41a970:	mov    rax,QWORD PTR [r11+0x10]
  41a974:	add    rax,rdx
  41a977:	cmp    rax,r12
  41a97a:	ja     41a9c7 <isspace@plt+0x170b7>
  41a97c:	inc    r9d
  41a97f:	mov    r11,QWORD PTR [r11+0x8]
  41a983:	mov    rdx,rax
  41a986:	test   r11,r11
  41a989:	jne    41a960 <isspace@plt+0x17050>
  41a98b:	mov    r11,QWORD PTR [rdi+0x90]
  41a992:	mov    r9d,DWORD PTR [rdi+0x4c]
  41a996:	dec    r9d
  41a999:	xor    eax,eax
  41a99b:	mov    QWORD PTR [r14+0x30],r11
  41a99f:	mov    DWORD PTR [r14+0x20],r9d
  41a9a3:	mov    DWORD PTR [r14+0x24],eax
  41a9a7:	call   419f00 <isspace@plt+0x165f0>
  41a9ac:	mov    rax,QWORD PTR fs:0x28
  41a9b5:	cmp    rax,QWORD PTR [rsp]
  41a9b9:	jne    41aa39 <isspace@plt+0x17129>
  41a9bb:	add    rsp,0x8
  41a9bf:	pop    rbx
  41a9c0:	pop    r12
  41a9c2:	pop    r14
  41a9c4:	pop    r15
  41a9c6:	ret    
  41a9c7:	mov    bl,0x1
  41a9c9:	mov    r8d,DWORD PTR [rdi+0x48]
  41a9cd:	mov    eax,DWORD PTR [r11+0x20]
  41a9d1:	cmp    r8d,eax
  41a9d4:	cmovg  r8d,eax
  41a9d8:	xor    eax,eax
  41a9da:	test   bl,bl
  41a9dc:	je     41a99b <isspace@plt+0x1708b>
  41a9de:	test   r8d,r8d
  41a9e1:	jle    41a99b <isspace@plt+0x1708b>
  41a9e3:	movsxd rcx,r8d
  41a9e6:	lea    r10,[r11+0x68]
  41a9ea:	xor    eax,eax
  41a9ec:	nop    DWORD PTR [rax+0x0]
  41a9f0:	movsxd rsi,eax
  41a9f3:	mov    rax,rsi
  41a9f6:	shl    rax,0x4
  41a9fa:	lea    rbx,[rax+rax*2]
  41a9fe:	add    rdx,QWORD PTR [r11+rbx*1+0x38]
  41aa03:	inc    rsi
  41aa06:	add    rbx,r10
  41aa09:	nop    DWORD PTR [rax+0x0]
  41aa10:	mov    rax,rsi
  41aa13:	cmp    rsi,rcx
  41aa16:	jge    41aa26 <isspace@plt+0x17116>
  41aa18:	lea    rsi,[rax+0x1]
  41aa1c:	cmp    QWORD PTR [rbx],0x0
  41aa20:	lea    rbx,[rbx+0x30]
  41aa24:	je     41aa10 <isspace@plt+0x17100>
  41aa26:	cmp    rdx,r12
  41aa29:	jae    41a99b <isspace@plt+0x1708b>
  41aa2f:	cmp    r8d,eax
  41aa32:	jg     41a9f0 <isspace@plt+0x170e0>
  41aa34:	jmp    41a99b <isspace@plt+0x1708b>
  41aa39:	call   403280 <__stack_chk_fail@plt>
  41aa3e:	xchg   ax,ax
  41aa40:	push   rbp
  41aa41:	push   r15
  41aa43:	push   r14
  41aa45:	push   r12
  41aa47:	push   rbx
  41aa48:	sub    rsp,0x40
  41aa4c:	mov    rax,QWORD PTR fs:0x28
  41aa55:	mov    QWORD PTR [rsp+0x38],rax
  41aa5a:	mov    rax,QWORD PTR [rdi+0xb8]
  41aa61:	test   rax,rax
  41aa64:	je     41aee1 <isspace@plt+0x175d1>
  41aa6a:	mov    r14,rsi
  41aa6d:	mov    rbx,rdi
  41aa70:	mov    r15,QWORD PTR [rax+0x18]
  41aa74:	movzx  r12d,BYTE PTR [rsi]
  41aa78:	lea    rbp,[rdi+0x18]
  41aa7c:	vmovups xmm0,XMMWORD PTR [rdi+0x38]
  41aa81:	vmovups XMMWORD PTR [rsi+0x20],xmm0
  41aa86:	cmp    r12,0xa
  41aa8a:	je     41ab8d <isspace@plt+0x1727d>
  41aa90:	cmp    r12b,0x9
  41aa94:	jne    41ac94 <isspace@plt+0x17384>
  41aa9a:	mov    DWORD PTR [r14+0x18],0x1
  41aaa2:	mov    ecx,DWORD PTR [rbx+0xc0]
  41aaa8:	mov    esi,DWORD PTR [rbx+0xf0]
  41aaae:	mov    eax,ecx
  41aab0:	cdq    
  41aab1:	idiv   esi
  41aab3:	mov    eax,esi
  41aab5:	sub    eax,edx
  41aab7:	test   eax,eax
  41aab9:	jle    41aec5 <isspace@plt+0x175b5>
  41aabf:	mov    r12d,edx
  41aac2:	sub    r12d,esi
  41aac5:	xor    ebp,ebp
  41aac7:	cmp    ecx,DWORD PTR [rbx+0x48]
  41aaca:	jge    41ab5f <isspace@plt+0x1724f>
  41aad0:	xor    eax,eax
  41aad2:	xor    ecx,ecx
  41aad4:	sub    ebp,0x1
  41aad7:	setb   al
  41aada:	mov    QWORD PTR [r14+0x10],rax
  41aade:	setae  cl
  41aae1:	mov    rax,QWORD PTR [rbx+rcx*8+0xd0]
  41aae9:	mov    rsi,QWORD PTR [rax]
  41aaec:	mov    edx,0xf
  41aaf1:	mov    rdi,r14
  41aaf4:	vzeroupper 
  41aaf7:	call   403150 <strncpy@plt>
  41aafc:	mov    rax,QWORD PTR [rbx+0xb8]
  41ab03:	movsxd rcx,DWORD PTR [rbx+0xc0]
  41ab0a:	lea    rcx,[rcx+rcx*2]
  41ab0e:	shl    rcx,0x4
  41ab12:	vmovups ymm0,YMMWORD PTR [r14]
  41ab17:	vmovups ymm1,YMMWORD PTR [r14+0x10]
  41ab1d:	vmovups YMMWORD PTR [rax+rcx*1+0x38],ymm1
  41ab23:	vmovups YMMWORD PTR [rax+rcx*1+0x28],ymm0
  41ab29:	mov    rax,QWORD PTR [r14+0x10]
  41ab2d:	mov    rcx,QWORD PTR [rbx+0xb8]
  41ab34:	add    QWORD PTR [rcx+0x10],rax
  41ab38:	mov    eax,DWORD PTR [r14+0x18]
  41ab3c:	add    DWORD PTR [rcx+0x20],eax
  41ab3f:	mov    ecx,DWORD PTR [rbx+0xc0]
  41ab45:	inc    ecx
  41ab47:	mov    DWORD PTR [rbx+0xc0],ecx
  41ab4d:	cmp    r12d,ebp
  41ab50:	je     41aec5 <isspace@plt+0x175b5>
  41ab56:	cmp    ecx,DWORD PTR [rbx+0x48]
  41ab59:	jl     41aad0 <isspace@plt+0x171c0>
  41ab5f:	mov    rax,QWORD PTR [rbx+0xb8]
  41ab66:	mov    rax,QWORD PTR [rax+0x8]
  41ab6a:	mov    QWORD PTR [rbx+0xb8],rax
  41ab71:	mov    DWORD PTR [rbx+0xc0],0x0
  41ab7b:	test   rax,rax
  41ab7e:	je     41aee1 <isspace@plt+0x175d1>
  41ab84:	mov    QWORD PTR [rax+0x18],r15
  41ab88:	jmp    41aad0 <isspace@plt+0x171c0>
  41ab8d:	mov    DWORD PTR [r14+0x18],0x1
  41ab95:	mov    eax,DWORD PTR [rbx+0xc0]
  41ab9b:	cmp    eax,DWORD PTR [rbx+0x48]
  41ab9e:	jl     41abc9 <isspace@plt+0x172b9>
  41aba0:	mov    rax,QWORD PTR [rbx+0xb8]
  41aba7:	mov    rax,QWORD PTR [rax+0x8]
  41abab:	mov    QWORD PTR [rbx+0xb8],rax
  41abb2:	mov    DWORD PTR [rbx+0xc0],0x0
  41abbc:	test   rax,rax
  41abbf:	je     41aee1 <isspace@plt+0x175d1>
  41abc5:	mov    QWORD PTR [rax+0x18],r15
  41abc9:	mov    rax,QWORD PTR [rbx+0xe0]
  41abd0:	mov    rsi,QWORD PTR [rax]
  41abd3:	mov    edx,0xf
  41abd8:	mov    rdi,r14
  41abdb:	call   403150 <strncpy@plt>
  41abe0:	mov    rax,QWORD PTR [rbx+0xb8]
  41abe7:	movsxd rcx,DWORD PTR [rbx+0xc0]
  41abee:	lea    rcx,[rcx+rcx*2]
  41abf2:	shl    rcx,0x4
  41abf6:	vmovups ymm0,YMMWORD PTR [r14]
  41abfb:	vmovups ymm1,YMMWORD PTR [r14+0x10]
  41ac01:	vmovups YMMWORD PTR [rax+rcx*1+0x38],ymm1
  41ac07:	vmovups YMMWORD PTR [rax+rcx*1+0x28],ymm0
  41ac0d:	mov    rcx,QWORD PTR [r14+0x10]
  41ac11:	mov    rax,QWORD PTR [rbx+0xb8]
  41ac18:	add    QWORD PTR [rax+0x10],rcx
  41ac1c:	mov    ecx,DWORD PTR [r14+0x18]
  41ac20:	add    DWORD PTR [rax+0x20],ecx
  41ac23:	mov    ecx,DWORD PTR [rbx+0xc0]
  41ac29:	inc    ecx
  41ac2b:	cmp    ecx,DWORD PTR [rbx+0x48]
  41ac2e:	jge    41ac6c <isspace@plt+0x1735c>
  41ac30:	movsxd rcx,ecx
  41ac33:	lea    rdx,[rcx+rcx*2]
  41ac37:	shl    rdx,0x4
  41ac3b:	add    rdx,0x28
  41ac3f:	nop
  41ac40:	vmovups ymm0,YMMWORD PTR [rbp+0x0]
  41ac45:	vmovups ymm1,YMMWORD PTR [rbp+0x10]
  41ac4a:	vmovups YMMWORD PTR [rax+rdx*1+0x10],ymm1
  41ac50:	vmovups YMMWORD PTR [rax+rdx*1],ymm0
  41ac55:	inc    rcx
  41ac58:	movsxd rsi,DWORD PTR [rbx+0x48]
  41ac5c:	mov    rax,QWORD PTR [rbx+0xb8]
  41ac63:	add    rdx,0x30
  41ac67:	cmp    rcx,rsi
  41ac6a:	jl     41ac40 <isspace@plt+0x17330>
  41ac6c:	mov    rax,QWORD PTR [rax+0x8]
  41ac70:	mov    QWORD PTR [rbx+0xb8],rax
  41ac77:	test   rax,rax
  41ac7a:	je     41ac83 <isspace@plt+0x17373>
  41ac7c:	inc    r15
  41ac7f:	mov    QWORD PTR [rax+0x18],r15
  41ac83:	mov    DWORD PTR [rbx+0xc0],0x0
  41ac8d:	mov    al,0x1
  41ac8f:	jmp    41aee3 <isspace@plt+0x175d3>
  41ac94:	test   r12b,r12b
  41ac97:	js     41ad77 <isspace@plt+0x17467>
  41ac9d:	call   4038f0 <__ctype_b_loc@plt>
  41aca2:	mov    rax,QWORD PTR [rax]
  41aca5:	test   BYTE PTR [rax+r12*2+0x1],0x40
  41acab:	jne    41ad5a <isspace@plt+0x1744a>
  41acb1:	lea    rax,[r14+0x20]
  41acb5:	mov    BYTE PTR [rsp+0x8],0x5e
  41acba:	lea    ecx,[r12+0x40]
  41acbf:	cmp    r12b,0x7f
  41acc3:	movzx  ecx,cl
  41acc6:	mov    edx,0x3f
  41accb:	cmovne edx,ecx
  41acce:	mov    BYTE PTR [rsp+0x9],dl
  41acd2:	mov    QWORD PTR [rsp+0xa],0x0
  41acdb:	mov    QWORD PTR [rsp+0x10],0x0
  41ace4:	mov    QWORD PTR [rsp+0x18],0x1
  41aced:	mov    DWORD PTR [rsp+0x20],0x2
  41acf5:	vmovups xmm0,XMMWORD PTR [rax]
  41acf9:	vmovups XMMWORD PTR [rsp+0x28],xmm0
  41acff:	mov    al,BYTE PTR [rsp+0x8]
  41ad03:	mov    BYTE PTR [r14],al
  41ad06:	mov    al,BYTE PTR [rsp+0x9]
  41ad0a:	mov    BYTE PTR [r14+0x1],al
  41ad0e:	mov    rax,QWORD PTR [rsp+0xa]
  41ad13:	mov    QWORD PTR [r14+0x2],rax
  41ad17:	mov    eax,DWORD PTR [rsp+0x12]
  41ad1b:	mov    DWORD PTR [r14+0xa],eax
  41ad1f:	movzx  eax,WORD PTR [rsp+0x16]
  41ad24:	mov    WORD PTR [r14+0xe],ax
  41ad29:	mov    rax,QWORD PTR [rsp+0x18]
  41ad2e:	mov    QWORD PTR [r14+0x10],rax
  41ad32:	mov    eax,DWORD PTR [rsp+0x20]
  41ad36:	mov    DWORD PTR [r14+0x18],eax
  41ad3a:	mov    eax,DWORD PTR [rsp+0x24]
  41ad3e:	mov    DWORD PTR [r14+0x1c],eax
  41ad42:	vmovups xmm0,XMMWORD PTR [rsp+0x18]
  41ad48:	vmovups XMMWORD PTR [r14+0x10],xmm0
  41ad4e:	vmovups xmm0,XMMWORD PTR [rsp+0x28]
  41ad54:	vmovups XMMWORD PTR [r14+0x20],xmm0
  41ad5a:	cmp    r12b,0x20
  41ad5e:	jne    41ad77 <isspace@plt+0x17467>
  41ad60:	mov    rax,QWORD PTR [rbx+0xc8]
  41ad67:	mov    rsi,QWORD PTR [rax]
  41ad6a:	mov    edx,0xf
  41ad6f:	mov    rdi,r14
  41ad72:	call   403150 <strncpy@plt>
  41ad77:	movsxd rax,DWORD PTR [rbx+0xc0]
  41ad7e:	mov    ecx,DWORD PTR [r14+0x18]
  41ad82:	add    ecx,eax
  41ad84:	mov    edx,DWORD PTR [rbx+0x48]
  41ad87:	cmp    ecx,edx
  41ad89:	jle    41aed1 <isspace@plt+0x175c1>
  41ad8f:	mov    rcx,QWORD PTR [rbx+0xb8]
  41ad96:	cmp    eax,edx
  41ad98:	jge    41addc <isspace@plt+0x174cc>
  41ad9a:	lea    rdx,[rax+rax*2]
  41ad9e:	shl    rdx,0x4
  41ada2:	add    rdx,0x28
  41ada6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41adb0:	vmovups ymm0,YMMWORD PTR [rbp+0x0]
  41adb5:	vmovups ymm1,YMMWORD PTR [rbp+0x10]
  41adba:	vmovups YMMWORD PTR [rcx+rdx*1+0x10],ymm1
  41adc0:	vmovups YMMWORD PTR [rcx+rdx*1],ymm0
  41adc5:	inc    rax
  41adc8:	movsxd rsi,DWORD PTR [rbx+0x48]
  41adcc:	mov    rcx,QWORD PTR [rbx+0xb8]
  41add3:	add    rdx,0x30
  41add7:	cmp    rax,rsi
  41adda:	jl     41adb0 <isspace@plt+0x174a0>
  41addc:	mov    rax,QWORD PTR [rcx+0x8]
  41ade0:	mov    QWORD PTR [rbx+0xb8],rax
  41ade7:	mov    DWORD PTR [rbx+0xc0],0x0
  41adf1:	test   rax,rax
  41adf4:	je     41aee1 <isspace@plt+0x175d1>
  41adfa:	mov    ecx,DWORD PTR [r14+0x18]
  41adfe:	add    DWORD PTR [rax+0x20],ecx
  41ae01:	mov    rcx,QWORD PTR [r14+0x10]
  41ae05:	add    QWORD PTR [rax+0x10],rcx
  41ae09:	mov    QWORD PTR [rax+0x18],r15
  41ae0d:	movsxd rcx,DWORD PTR [rbx+0xc0]
  41ae14:	lea    rcx,[rcx+rcx*2]
  41ae18:	shl    rcx,0x4
  41ae1c:	vmovups ymm0,YMMWORD PTR [r14]
  41ae21:	vmovups ymm1,YMMWORD PTR [r14+0x10]
  41ae27:	vmovups YMMWORD PTR [rax+rcx*1+0x38],ymm1
  41ae2d:	vmovups YMMWORD PTR [rax+rcx*1+0x28],ymm0
  41ae33:	movsxd rdx,DWORD PTR [rbx+0xc0]
  41ae3a:	lea    rcx,[rdx+0x1]
  41ae3e:	mov    DWORD PTR [rbx+0xc0],ecx
  41ae44:	mov    al,0x1
  41ae46:	cmp    DWORD PTR [r14+0x18],0x2
  41ae4b:	jl     41aee3 <isspace@plt+0x175d3>
  41ae51:	mov    rsi,QWORD PTR [rbx+0xb8]
  41ae58:	add    edx,0x2
  41ae5b:	mov    DWORD PTR [rbx+0xc0],edx
  41ae61:	lea    rcx,[rcx+rcx*2]
  41ae65:	shl    rcx,0x4
  41ae69:	vxorps xmm0,xmm0,xmm0
  41ae6d:	vmovups YMMWORD PTR [rsi+rcx*1+0x38],ymm0
  41ae73:	vmovups YMMWORD PTR [rsi+rcx*1+0x28],ymm0
  41ae79:	cmp    DWORD PTR [r14+0x18],0x3
  41ae7e:	jl     41aee3 <isspace@plt+0x175d3>
  41ae80:	mov    ecx,0x2
  41ae85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ae8f:	nop
  41ae90:	movsxd rdx,DWORD PTR [rbx+0xc0]
  41ae97:	mov    rsi,QWORD PTR [rbx+0xb8]
  41ae9e:	lea    edi,[rdx+0x1]
  41aea1:	mov    DWORD PTR [rbx+0xc0],edi
  41aea7:	lea    rdx,[rdx+rdx*2]
  41aeab:	shl    rdx,0x4
  41aeaf:	vmovups YMMWORD PTR [rsi+rdx*1+0x38],ymm0
  41aeb5:	vmovups YMMWORD PTR [rsi+rdx*1+0x28],ymm0
  41aebb:	inc    ecx
  41aebd:	cmp    ecx,DWORD PTR [r14+0x18]
  41aec1:	jl     41ae90 <isspace@plt+0x17580>
  41aec3:	jmp    41aee3 <isspace@plt+0x175d3>
  41aec5:	mov    QWORD PTR [r14+0x10],0x1
  41aecd:	mov    al,0x1
  41aecf:	jmp    41aee3 <isspace@plt+0x175d3>
  41aed1:	mov    rax,QWORD PTR [rbx+0xb8]
  41aed8:	test   rax,rax
  41aedb:	jne    41adfa <isspace@plt+0x174ea>
  41aee1:	xor    eax,eax
  41aee3:	mov    rcx,QWORD PTR fs:0x28
  41aeec:	cmp    rcx,QWORD PTR [rsp+0x38]
  41aef1:	jne    41af03 <isspace@plt+0x175f3>
  41aef3:	add    rsp,0x40
  41aef7:	pop    rbx
  41aef8:	pop    r12
  41aefa:	pop    r14
  41aefc:	pop    r15
  41aefe:	pop    rbp
  41aeff:	vzeroupper 
  41af02:	ret    
  41af03:	vzeroupper 
  41af06:	call   403280 <__stack_chk_fail@plt>
  41af0b:	nop    DWORD PTR [rax+rax*1+0x0]
  41af10:	push   rax
  41af11:	mov    rax,QWORD PTR fs:0x28
  41af1a:	mov    QWORD PTR [rsp],rax
  41af1e:	mov    rsi,QWORD PTR [rdi]
  41af21:	mov    rax,QWORD PTR [rdi+0x40]
  41af25:	mov    rdi,QWORD PTR [rax]
  41af28:	call   410e10 <isspace@plt+0xd500>
  41af2d:	mov    rcx,QWORD PTR fs:0x28
  41af36:	cmp    rcx,QWORD PTR [rsp]
  41af3a:	jne    41af3e <isspace@plt+0x1762e>
  41af3c:	pop    rcx
  41af3d:	ret    
  41af3e:	call   403280 <__stack_chk_fail@plt>
  41af43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41af4d:	nop    DWORD PTR [rax]
  41af50:	push   rax
  41af51:	mov    rax,QWORD PTR fs:0x28
  41af5a:	mov    QWORD PTR [rsp],rax
  41af5e:	mov    BYTE PTR [rdi+0x104],0x1
  41af65:	mov    rax,QWORD PTR fs:0x28
  41af6e:	cmp    rax,QWORD PTR [rsp]
  41af72:	jne    41af76 <isspace@plt+0x17666>
  41af74:	pop    rax
  41af75:	ret    
  41af76:	call   403280 <__stack_chk_fail@plt>
  41af7b:	nop    DWORD PTR [rax+rax*1+0x0]
  41af80:	push   rax
  41af81:	mov    rax,QWORD PTR fs:0x28
  41af8a:	mov    QWORD PTR [rsp],rax
  41af8e:	cmp    BYTE PTR [rdi+0x104],0x0
  41af95:	je     41b00f <isspace@plt+0x176ff>
  41af97:	mov    rax,QWORD PTR [rdi+0x88]
  41af9e:	mov    r8,QWORD PTR [rax+0x8]
  41afa2:	test   r8,r8
  41afa5:	je     41b004 <isspace@plt+0x176f4>
  41afa7:	lea    rcx,[rdi+0x18]
  41afab:	mov    edx,DWORD PTR [rdi+0x48]
  41afae:	test   edx,edx
  41afb0:	jg     41afcd <isspace@plt+0x176bd>
  41afb2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41afbc:	nop    DWORD PTR [rax+0x0]
  41afc0:	mov    r8,QWORD PTR [r8+0x8]
  41afc4:	test   r8,r8
  41afc7:	je     41b004 <isspace@plt+0x176f4>
  41afc9:	test   edx,edx
  41afcb:	jle    41afc0 <isspace@plt+0x176b0>
  41afcd:	lea    rsi,[r8+0x28]
  41afd1:	xor    eax,eax
  41afd3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41afdd:	nop    DWORD PTR [rax]
  41afe0:	vmovups ymm0,YMMWORD PTR [rcx]
  41afe4:	vmovups ymm1,YMMWORD PTR [rcx+0x10]
  41afe9:	vmovups YMMWORD PTR [rsi+0x10],ymm1
  41afee:	vmovups YMMWORD PTR [rsi],ymm0
  41aff2:	inc    rax
  41aff5:	movsxd rdx,DWORD PTR [rdi+0x48]
  41aff9:	add    rsi,0x30
  41affd:	cmp    rax,rdx
  41b000:	jl     41afe0 <isspace@plt+0x176d0>
  41b002:	jmp    41afc0 <isspace@plt+0x176b0>
  41b004:	mov    BYTE PTR [rdi+0x104],0x0
  41b00b:	mov    al,0x1
  41b00d:	jmp    41b011 <isspace@plt+0x17701>
  41b00f:	xor    eax,eax
  41b011:	mov    rcx,QWORD PTR fs:0x28
  41b01a:	cmp    rcx,QWORD PTR [rsp]
  41b01e:	jne    41b025 <isspace@plt+0x17715>
  41b020:	pop    rcx
  41b021:	vzeroupper 
  41b024:	ret    
  41b025:	vzeroupper 
  41b028:	call   403280 <__stack_chk_fail@plt>
  41b02d:	nop    DWORD PTR [rax]
  41b030:	push   rbp
  41b031:	push   r15
  41b033:	push   r14
  41b035:	push   r12
  41b037:	push   rbx
  41b038:	sub    rsp,0x10
  41b03c:	mov    ebp,esi
  41b03e:	mov    r15,rdi
  41b041:	mov    rax,QWORD PTR fs:0x28
  41b04a:	mov    QWORD PTR [rsp+0x8],rax
  41b04f:	test   esi,esi
  41b051:	mov    r12d,0x1
  41b057:	cmovle ebp,r12d
  41b05b:	test   edx,edx
  41b05d:	cmovg  r12d,edx
  41b061:	cmp    DWORD PTR [rdi+0x48],ebp
  41b064:	jne    41b076 <isspace@plt+0x17766>
  41b066:	cmp    DWORD PTR [r15+0x4c],r12d
  41b06a:	jne    41b076 <isspace@plt+0x17766>
  41b06c:	mov    BYTE PTR [r15+0x104],0x1
  41b074:	jmp    41b0f0 <isspace@plt+0x177e0>
  41b076:	mov    eax,ebp
  41b078:	imul   eax,r12d
  41b07c:	lea    edi,[rax*4+0x1]
  41b083:	call   4035d0 <malloc@plt>
  41b088:	test   rax,rax
  41b08b:	je     41b0fc <isspace@plt+0x177ec>
  41b08d:	mov    r14,rax
  41b090:	mov    eax,r12d
  41b093:	mov    ecx,ebp
  41b095:	lea    rbx,[rcx+rcx*2]
  41b099:	shl    rbx,0x4
  41b09d:	add    rbx,0x28
  41b0a1:	imul   rbx,rax
  41b0a5:	cmp    rbx,QWORD PTR [r15+0x70]
  41b0a9:	jbe    41b0c4 <isspace@plt+0x177b4>
  41b0ab:	mov    rdi,QWORD PTR [r15+0x78]
  41b0af:	mov    rsi,rbx
  41b0b2:	call   4036b0 <realloc@plt>
  41b0b7:	test   rax,rax
  41b0ba:	je     41b0f4 <isspace@plt+0x177e4>
  41b0bc:	mov    QWORD PTR [r15+0x78],rax
  41b0c0:	mov    QWORD PTR [r15+0x70],rbx
  41b0c4:	mov    rdi,QWORD PTR [r15+0x8]
  41b0c8:	call   4030d0 <free@plt>
  41b0cd:	mov    QWORD PTR [r15+0x8],r14
  41b0d1:	mov    DWORD PTR [r15+0x48],ebp
  41b0d5:	mov    DWORD PTR [r15+0x4c],r12d
  41b0d9:	mov    rdx,QWORD PTR [r15+0x70]
  41b0dd:	mov    rdi,QWORD PTR [r15+0x78]
  41b0e1:	xor    esi,esi
  41b0e3:	call   403360 <memset@plt>
  41b0e8:	mov    rdi,r15
  41b0eb:	call   419f00 <isspace@plt+0x165f0>
  41b0f0:	mov    al,0x1
  41b0f2:	jmp    41b0fe <isspace@plt+0x177ee>
  41b0f4:	mov    rdi,r14
  41b0f7:	call   4030d0 <free@plt>
  41b0fc:	xor    eax,eax
  41b0fe:	mov    rcx,QWORD PTR fs:0x28
  41b107:	cmp    rcx,QWORD PTR [rsp+0x8]
  41b10c:	jne    41b11b <isspace@plt+0x1780b>
  41b10e:	add    rsp,0x10
  41b112:	pop    rbx
  41b113:	pop    r12
  41b115:	pop    r14
  41b117:	pop    r15
  41b119:	pop    rbp
  41b11a:	ret    
  41b11b:	call   403280 <__stack_chk_fail@plt>
  41b120:	push   rax
  41b121:	mov    rax,QWORD PTR fs:0x28
  41b12a:	mov    QWORD PTR [rsp],rax
  41b12e:	mov    eax,DWORD PTR [rdi+0x4c]
  41b131:	mov    rcx,QWORD PTR fs:0x28
  41b13a:	cmp    rcx,QWORD PTR [rsp]
  41b13e:	jne    41b142 <isspace@plt+0x17832>
  41b140:	pop    rcx
  41b141:	ret    
  41b142:	call   403280 <__stack_chk_fail@plt>
  41b147:	nop    WORD PTR [rax+rax*1+0x0]
  41b150:	push   rax
  41b151:	mov    rax,QWORD PTR fs:0x28
  41b15a:	mov    QWORD PTR [rsp],rax
  41b15e:	mov    eax,DWORD PTR [rdi+0x48]
  41b161:	mov    rcx,QWORD PTR fs:0x28
  41b16a:	cmp    rcx,QWORD PTR [rsp]
  41b16e:	jne    41b172 <isspace@plt+0x17862>
  41b170:	pop    rcx
  41b171:	ret    
  41b172:	call   403280 <__stack_chk_fail@plt>
  41b177:	nop    WORD PTR [rax+rax*1+0x0]
  41b180:	push   rbx
  41b181:	sub    rsp,0x10
  41b185:	mov    rax,QWORD PTR fs:0x28
  41b18e:	mov    QWORD PTR [rsp+0x8],rax
  41b193:	test   rdi,rdi
  41b196:	je     41b2a5 <isspace@plt+0x17995>
  41b19c:	mov    rbx,rdi
  41b19f:	jmp    41b1bb <isspace@plt+0x178ab>
  41b1a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b1ab:	nop    DWORD PTR [rax+rax*1+0x0]
  41b1b0:	dec    DWORD PTR [rcx+0xb0]
  41b1b6:	call   4030d0 <free@plt>
  41b1bb:	mov    rdi,QWORD PTR [rbx+0xf8]
  41b1c2:	test   rdi,rdi
  41b1c5:	je     41b28b <isspace@plt+0x1797b>
  41b1cb:	mov    rax,QWORD PTR [rdi+0x50]
  41b1cf:	mov    rcx,rax
  41b1d2:	test   rax,rax
  41b1d5:	je     41b1ec <isspace@plt+0x178dc>
  41b1d7:	nop    WORD PTR [rax+rax*1+0x0]
  41b1e0:	dec    DWORD PTR [rcx+0x3c]
  41b1e3:	mov    rcx,QWORD PTR [rcx+0x50]
  41b1e7:	test   rcx,rcx
  41b1ea:	jne    41b1e0 <isspace@plt+0x178d0>
  41b1ec:	mov    rcx,QWORD PTR [rdi+0x48]
  41b1f0:	test   rcx,rcx
  41b1f3:	je     41b1fd <isspace@plt+0x178ed>
  41b1f5:	mov    QWORD PTR [rcx+0x50],rax
  41b1f9:	mov    rax,QWORD PTR [rdi+0x50]
  41b1fd:	test   rax,rax
  41b200:	je     41b206 <isspace@plt+0x178f6>
  41b202:	mov    QWORD PTR [rax+0x48],rcx
  41b206:	mov    rcx,QWORD PTR [rdi+0x40]
  41b20a:	cmp    QWORD PTR [rcx+0xf8],rdi
  41b211:	je     41b230 <isspace@plt+0x17920>
  41b213:	cmp    QWORD PTR [rcx+0x98],rdi
  41b21a:	je     41b240 <isspace@plt+0x17930>
  41b21c:	cmp    QWORD PTR [rcx+0xa8],rdi
  41b223:	je     41b25c <isspace@plt+0x1794c>
  41b225:	cmp    QWORD PTR [rcx+0xa0],rdi
  41b22c:	jne    41b1b0 <isspace@plt+0x178a0>
  41b22e:	jmp    41b274 <isspace@plt+0x17964>
  41b230:	mov    QWORD PTR [rcx+0xf8],rax
  41b237:	cmp    QWORD PTR [rcx+0x98],rdi
  41b23e:	jne    41b21c <isspace@plt+0x1790c>
  41b240:	mov    rdx,rax
  41b243:	test   rax,rax
  41b246:	jne    41b24c <isspace@plt+0x1793c>
  41b248:	mov    rdx,QWORD PTR [rdi+0x48]
  41b24c:	mov    QWORD PTR [rcx+0x98],rdx
  41b253:	cmp    QWORD PTR [rcx+0xa8],rdi
  41b25a:	jne    41b225 <isspace@plt+0x17915>
  41b25c:	mov    QWORD PTR [rcx+0xa8],0x0
  41b267:	cmp    QWORD PTR [rcx+0xa0],rdi
  41b26e:	jne    41b1b0 <isspace@plt+0x178a0>
  41b274:	mov    rdx,QWORD PTR [rdi+0x48]
  41b278:	test   rdx,rdx
  41b27b:	cmovne rax,rdx
  41b27f:	mov    QWORD PTR [rcx+0xa0],rax
  41b286:	jmp    41b1b0 <isspace@plt+0x178a0>
  41b28b:	mov    rdi,QWORD PTR [rbx+0x8]
  41b28f:	call   4030d0 <free@plt>
  41b294:	mov    rdi,QWORD PTR [rbx+0x78]
  41b298:	call   4030d0 <free@plt>
  41b29d:	mov    rdi,rbx
  41b2a0:	call   4030d0 <free@plt>
  41b2a5:	mov    rax,QWORD PTR fs:0x28
  41b2ae:	cmp    rax,QWORD PTR [rsp+0x8]
  41b2b3:	jne    41b2bb <isspace@plt+0x179ab>
  41b2b5:	add    rsp,0x10
  41b2b9:	pop    rbx
  41b2ba:	ret    
  41b2bb:	call   403280 <__stack_chk_fail@plt>
  41b2c0:	push   rbx
  41b2c1:	sub    rsp,0x10
  41b2c5:	mov    rbx,rdi
  41b2c8:	mov    rax,QWORD PTR fs:0x28
  41b2d1:	mov    QWORD PTR [rsp+0x8],rax
  41b2d6:	mov    QWORD PTR [rdi],rsi
  41b2d9:	mov    rax,QWORD PTR [rdi+0xf8]
  41b2e0:	test   rax,rax
  41b2e3:	je     41b30f <isspace@plt+0x179ff>
  41b2e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b2ef:	nop
  41b2f0:	mov    BYTE PTR [rax+0x10],0x0
  41b2f4:	mov    rcx,QWORD PTR [rax]
  41b2f7:	mov    rdx,QWORD PTR [rax+0x40]
  41b2fb:	mov    QWORD PTR [rax+0x8],rcx
  41b2ff:	mov    BYTE PTR [rdx+0x104],0x1
  41b306:	mov    rax,QWORD PTR [rax+0x50]
  41b30a:	test   rax,rax
  41b30d:	jne    41b2f0 <isspace@plt+0x179e0>
  41b30f:	mov    rdi,rbx
  41b312:	call   419f00 <isspace@plt+0x165f0>
  41b317:	mov    rdi,QWORD PTR [rbx+0x98]
  41b31e:	xor    esi,esi
  41b320:	call   41a7c0 <isspace@plt+0x16eb0>
  41b325:	mov    rax,QWORD PTR fs:0x28
  41b32e:	cmp    rax,QWORD PTR [rsp+0x8]
  41b333:	jne    41b33b <isspace@plt+0x17a2b>
  41b335:	add    rsp,0x10
  41b339:	pop    rbx
  41b33a:	ret    
  41b33b:	call   403280 <__stack_chk_fail@plt>
  41b340:	push   rax
  41b341:	mov    rax,QWORD PTR fs:0x28
  41b34a:	mov    QWORD PTR [rsp],rax
  41b34e:	mov    rax,QWORD PTR [rdi+0xf8]
  41b355:	test   rax,rax
  41b358:	je     41b37f <isspace@plt+0x17a6f>
  41b35a:	nop    WORD PTR [rax+rax*1+0x0]
  41b360:	mov    BYTE PTR [rax+0x10],0x0
  41b364:	mov    rcx,QWORD PTR [rax]
  41b367:	mov    rdx,QWORD PTR [rax+0x40]
  41b36b:	mov    QWORD PTR [rax+0x8],rcx
  41b36f:	mov    BYTE PTR [rdx+0x104],0x1
  41b376:	mov    rax,QWORD PTR [rax+0x50]
  41b37a:	test   rax,rax
  41b37d:	jne    41b360 <isspace@plt+0x17a50>
  41b37f:	call   419f00 <isspace@plt+0x165f0>
  41b384:	mov    rax,QWORD PTR fs:0x28
  41b38d:	cmp    rax,QWORD PTR [rsp]
  41b391:	jne    41b395 <isspace@plt+0x17a85>
  41b393:	pop    rax
  41b394:	ret    
  41b395:	call   403280 <__stack_chk_fail@plt>
  41b39a:	nop    WORD PTR [rax+rax*1+0x0]
  41b3a0:	push   r14
  41b3a2:	push   rbx
  41b3a3:	sub    rsp,0x28
  41b3a7:	mov    rax,QWORD PTR fs:0x28
  41b3b0:	mov    QWORD PTR [rsp+0x20],rax
  41b3b5:	test   rdi,rdi
  41b3b8:	je     41b4d7 <isspace@plt+0x17bc7>
  41b3be:	mov    rbx,rdi
  41b3c1:	mov    edi,0x1
  41b3c6:	mov    esi,0x110
  41b3cb:	call   403460 <calloc@plt>
  41b3d0:	test   rax,rax
  41b3d3:	je     41b4d7 <isspace@plt+0x17bc7>
  41b3d9:	mov    r14,rax
  41b3dc:	mov    QWORD PTR [rax],rbx
  41b3df:	mov    rdi,rax
  41b3e2:	xor    esi,esi
  41b3e4:	xor    edx,edx
  41b3e6:	call   41e7d0 <isspace@plt+0x1aec0>
  41b3eb:	test   rax,rax
  41b3ee:	je     41b4cf <isspace@plt+0x17bbf>
  41b3f4:	vxorps xmm0,xmm0,xmm0
  41b3f8:	vmovups XMMWORD PTR [rsp+0x10],xmm0
  41b3fe:	vmovups xmm0,XMMWORD PTR [rip+0x157da]        # 430be0 <isspace@plt+0x2d2d0>
  41b406:	vmovups XMMWORD PTR [r14+0x18],xmm0
  41b40c:	mov    QWORD PTR [r14+0x28],0x0
  41b414:	mov    DWORD PTR [r14+0x30],0x0
  41b41c:	vmovups xmm0,XMMWORD PTR [rsp+0xc]
  41b422:	vmovups XMMWORD PTR [r14+0x34],xmm0
  41b428:	mov    eax,DWORD PTR [rsp+0x1c]
  41b42c:	mov    DWORD PTR [r14+0x44],eax
  41b430:	mov    DWORD PTR [r14+0xf0],0x8
  41b43b:	lea    rax,[rip+0x24bb6]        # 43fff8 <isspace@plt+0x3c6e8>
  41b442:	vmovq  xmm0,rax
  41b447:	lea    rax,[rip+0x24ba2]        # 43fff0 <isspace@plt+0x3c6e0>
  41b44e:	vmovq  xmm1,rax
  41b453:	vpunpcklqdq xmm0,xmm1,xmm0
  41b457:	vmovdqu XMMWORD PTR [r14+0xd8],xmm0
  41b460:	lea    rax,[rip+0x24b81]        # 43ffe8 <isspace@plt+0x3c6d8>
  41b467:	vmovq  xmm0,rax
  41b46c:	lea    rax,[rip+0x24b6d]        # 43ffe0 <isspace@plt+0x3c6d0>
  41b473:	vmovq  xmm1,rax
  41b478:	vpunpcklqdq xmm0,xmm1,xmm0
  41b47c:	vmovdqu XMMWORD PTR [r14+0xc8],xmm0
  41b485:	lea    rax,[rip+0x24b74]        # 440000 <isspace@plt+0x3c6f0>
  41b48c:	mov    QWORD PTR [r14+0xe8],rax
  41b493:	mov    BYTE PTR [r14+0x105],0x0
  41b49b:	mov    rdi,QWORD PTR [r14+0x10]
  41b49f:	test   rdi,rdi
  41b4a2:	je     41b4a9 <isspace@plt+0x17b99>
  41b4a4:	xor    esi,esi
  41b4a6:	call   QWORD PTR [rdi+0x10]
  41b4a9:	mov    rdi,r14
  41b4ac:	mov    esi,0x1
  41b4b1:	mov    edx,0x1
  41b4b6:	call   41b030 <isspace@plt+0x17720>
  41b4bb:	test   al,al
  41b4bd:	je     41b4cf <isspace@plt+0x17bbf>
  41b4bf:	mov    rdi,QWORD PTR [r14+0x98]
  41b4c6:	xor    esi,esi
  41b4c8:	call   41a7c0 <isspace@plt+0x16eb0>
  41b4cd:	jmp    41b4da <isspace@plt+0x17bca>
  41b4cf:	mov    rdi,r14
  41b4d2:	call   41b180 <isspace@plt+0x17870>
  41b4d7:	xor    r14d,r14d
  41b4da:	mov    rax,QWORD PTR fs:0x28
  41b4e3:	cmp    rax,QWORD PTR [rsp+0x20]
  41b4e8:	jne    41b4f5 <isspace@plt+0x17be5>
  41b4ea:	mov    rax,r14
  41b4ed:	add    rsp,0x28
  41b4f1:	pop    rbx
  41b4f2:	pop    r14
  41b4f4:	ret    
  41b4f5:	call   403280 <__stack_chk_fail@plt>
  41b4fa:	nop    WORD PTR [rax+rax*1+0x0]
  41b500:	push   rax
  41b501:	mov    rax,QWORD PTR fs:0x28
  41b50a:	mov    QWORD PTR [rsp],rax
  41b50e:	xor    edx,edx
  41b510:	call   41e7d0 <isspace@plt+0x1aec0>
  41b515:	mov    rcx,QWORD PTR fs:0x28
  41b51e:	cmp    rcx,QWORD PTR [rsp]
  41b522:	jne    41b526 <isspace@plt+0x17c16>
  41b524:	pop    rcx
  41b525:	ret    
  41b526:	call   403280 <__stack_chk_fail@plt>
  41b52b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b530:	push   rax
  41b531:	test   sil,0x40
  41b535:	lea    rax,[rip+0x24ac4]        # 440000 <isspace@plt+0x3c6f0>
  41b53c:	lea    rcx,[rip+0x24a8d]        # 43ffd0 <isspace@plt+0x3c6c0>
  41b543:	cmove  rcx,rax
  41b547:	mov    eax,esi
  41b549:	and    eax,0xfffffbff
  41b54e:	test   sil,0x1
  41b552:	cmove  eax,esi
  41b555:	vmovd  xmm0,esi
  41b559:	mov    rdx,QWORD PTR fs:0x28
  41b562:	vpbroadcastd xmm0,xmm0
  41b567:	vpand  xmm0,xmm0,XMMWORD PTR [rip+0x15651]        # 430bc0 <isspace@plt+0x2d2b0>
  41b56f:	mov    QWORD PTR [rsp],rdx
  41b573:	vpxor  xmm1,xmm1,xmm1
  41b577:	vpcmpeqd xmm0,xmm0,xmm1
  41b57b:	vpmovsxdq ymm0,xmm0
  41b580:	lea    rdx,[rip+0x24a71]        # 43fff8 <isspace@plt+0x3c6e8>
  41b587:	vmovq  xmm1,rdx
  41b58c:	lea    rdx,[rip+0x24a5d]        # 43fff0 <isspace@plt+0x3c6e0>
  41b593:	vmovq  xmm2,rdx
  41b598:	vpunpcklqdq xmm1,xmm2,xmm1
  41b59c:	lea    rdx,[rip+0x24a45]        # 43ffe8 <isspace@plt+0x3c6d8>
  41b5a3:	vmovq  xmm2,rdx
  41b5a8:	lea    rdx,[rip+0x24a31]        # 43ffe0 <isspace@plt+0x3c6d0>
  41b5af:	vmovq  xmm3,rdx
  41b5b4:	vpunpcklqdq xmm2,xmm3,xmm2
  41b5b8:	vinserti128 ymm1,ymm2,xmm1,0x1
  41b5be:	lea    rdx,[rip+0x24a03]        # 43ffc8 <isspace@plt+0x3c6b8>
  41b5c5:	vmovq  xmm2,rdx
  41b5ca:	lea    rdx,[rip+0x249ef]        # 43ffc0 <isspace@plt+0x3c6b0>
  41b5d1:	vmovq  xmm3,rdx
  41b5d6:	vpunpcklqdq xmm2,xmm3,xmm2
  41b5da:	lea    rdx,[rip+0x249d7]        # 43ffb8 <isspace@plt+0x3c6a8>
  41b5e1:	vmovq  xmm3,rdx
  41b5e6:	lea    rdx,[rip+0x249c3]        # 43ffb0 <isspace@plt+0x3c6a0>
  41b5ed:	vmovq  xmm4,rdx
  41b5f2:	vpunpcklqdq xmm3,xmm4,xmm3
  41b5f6:	vinserti128 ymm2,ymm3,xmm2,0x1
  41b5fc:	vblendvpd ymm0,ymm2,ymm1,ymm0
  41b602:	vmovupd YMMWORD PTR [rdi+0xc8],ymm0
  41b60a:	mov    QWORD PTR [rdi+0xe8],rcx
  41b611:	mov    ecx,eax
  41b613:	shr    ecx,0xa
  41b616:	and    cl,0x1
  41b619:	mov    BYTE PTR [rdi+0x105],cl
  41b61f:	mov    rdi,QWORD PTR [rdi+0x10]
  41b623:	test   rdi,rdi
  41b626:	je     41b641 <isspace@plt+0x17d31>
  41b628:	mov    esi,eax
  41b62a:	vzeroupper 
  41b62d:	call   QWORD PTR [rdi+0x10]
  41b630:	mov    rax,QWORD PTR fs:0x28
  41b639:	cmp    rax,QWORD PTR [rsp]
  41b63d:	jne    41b655 <isspace@plt+0x17d45>
  41b63f:	pop    rax
  41b640:	ret    
  41b641:	mov    rax,QWORD PTR fs:0x28
  41b64a:	cmp    rax,QWORD PTR [rsp]
  41b64e:	jne    41b655 <isspace@plt+0x17d45>
  41b650:	pop    rax
  41b651:	vzeroupper 
  41b654:	ret    
  41b655:	vzeroupper 
  41b658:	call   403280 <__stack_chk_fail@plt>
  41b65d:	nop    DWORD PTR [rax]
  41b660:	push   rax
  41b661:	mov    rax,QWORD PTR fs:0x28
  41b66a:	mov    QWORD PTR [rsp],rax
  41b66e:	mov    QWORD PTR [rdi+0x10],rsi
  41b672:	mov    rax,QWORD PTR fs:0x28
  41b67b:	cmp    rax,QWORD PTR [rsp]
  41b67f:	jne    41b683 <isspace@plt+0x17d73>
  41b681:	pop    rax
  41b682:	ret    
  41b683:	call   403280 <__stack_chk_fail@plt>
  41b688:	nop    DWORD PTR [rax+rax*1+0x0]
  41b690:	push   rbx
  41b691:	sub    rsp,0x10
  41b695:	mov    rbx,rdi
  41b698:	mov    rax,QWORD PTR fs:0x28
  41b6a1:	mov    QWORD PTR [rsp+0x8],rax
  41b6a6:	mov    rax,QWORD PTR [rdi+0x80]
  41b6ad:	test   rax,rax
  41b6b0:	je     41b6e6 <isspace@plt+0x17dd6>
  41b6b2:	mov    rcx,QWORD PTR [rbx+0x98]
  41b6b9:	mov    rcx,QWORD PTR [rcx+0x30]
  41b6bd:	cmp    rax,rcx
  41b6c0:	je     41b6e6 <isspace@plt+0x17dd6>
  41b6c2:	mov    rdx,QWORD PTR [rbx+0x50]
  41b6c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b6d0:	add    rdx,QWORD PTR [rax+0x10]
  41b6d4:	mov    QWORD PTR [rbx+0x50],rdx
  41b6d8:	mov    rax,QWORD PTR [rax+0x8]
  41b6dc:	test   rax,rax
  41b6df:	je     41b6e6 <isspace@plt+0x17dd6>
  41b6e1:	cmp    rax,rcx
  41b6e4:	jne    41b6d0 <isspace@plt+0x17dc0>
  41b6e6:	mov    rdi,rbx
  41b6e9:	call   419f00 <isspace@plt+0x165f0>
  41b6ee:	mov    rdi,QWORD PTR [rbx+0x98]
  41b6f5:	mov    rsi,QWORD PTR [rdi+0x18]
  41b6f9:	call   41a7c0 <isspace@plt+0x16eb0>
  41b6fe:	mov    rax,QWORD PTR fs:0x28
  41b707:	cmp    rax,QWORD PTR [rsp+0x8]
  41b70c:	jne    41b714 <isspace@plt+0x17e04>
  41b70e:	add    rsp,0x10
  41b712:	pop    rbx
  41b713:	ret    
  41b714:	call   403280 <__stack_chk_fail@plt>
  41b719:	nop    DWORD PTR [rax+0x0]
  41b720:	push   rbp
  41b721:	push   r14
  41b723:	push   rbx
  41b724:	sub    rsp,0x10
  41b728:	mov    rbx,rdi
  41b72b:	mov    rax,QWORD PTR fs:0x28
  41b734:	mov    QWORD PTR [rsp+0x8],rax
  41b739:	mov    eax,DWORD PTR [rdi+0x4c]
  41b73c:	mov    ebp,eax
  41b73e:	shr    ebp,0x1f
  41b741:	add    ebp,eax
  41b743:	sar    ebp,1
  41b745:	mov    rax,QWORD PTR [rdi+0x98]
  41b74c:	mov    r14,QWORD PTR [rax+0x18]
  41b750:	mov    rcx,QWORD PTR [rax+0x30]
  41b754:	mov    rax,QWORD PTR [rdi+0x80]
  41b75b:	xor    edx,edx
  41b75d:	test   rax,rax
  41b760:	je     41b780 <isspace@plt+0x17e70>
  41b762:	cmp    rax,rcx
  41b765:	je     41b780 <isspace@plt+0x17e70>
  41b767:	xor    edx,edx
  41b769:	mov    rsi,rax
  41b76c:	nop    DWORD PTR [rax+0x0]
  41b770:	inc    edx
  41b772:	mov    rsi,QWORD PTR [rsi+0x8]
  41b776:	test   rsi,rsi
  41b779:	je     41b780 <isspace@plt+0x17e70>
  41b77b:	cmp    rsi,rcx
  41b77e:	jne    41b770 <isspace@plt+0x17e60>
  41b780:	mov    esi,ebp
  41b782:	sub    esi,edx
  41b784:	jle    41b7e0 <isspace@plt+0x17ed0>
  41b786:	mov    rdi,rbx
  41b789:	call   41b850 <isspace@plt+0x17f40>
  41b78e:	mov    rax,QWORD PTR [rbx+0x80]
  41b795:	mov    rcx,QWORD PTR [rbx+0x98]
  41b79c:	mov    rcx,QWORD PTR [rcx+0x30]
  41b7a0:	xor    edx,edx
  41b7a2:	test   rax,rax
  41b7a5:	je     41b7d0 <isspace@plt+0x17ec0>
  41b7a7:	cmp    rax,rcx
  41b7aa:	je     41b7d0 <isspace@plt+0x17ec0>
  41b7ac:	xor    edx,edx
  41b7ae:	mov    rsi,rax
  41b7b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b7bb:	nop    DWORD PTR [rax+rax*1+0x0]
  41b7c0:	inc    edx
  41b7c2:	mov    rsi,QWORD PTR [rsi+0x8]
  41b7c6:	test   rsi,rsi
  41b7c9:	je     41b7d0 <isspace@plt+0x17ec0>
  41b7cb:	cmp    rsi,rcx
  41b7ce:	jne    41b7c0 <isspace@plt+0x17eb0>
  41b7d0:	mov    esi,ebp
  41b7d2:	sub    esi,edx
  41b7d4:	jle    41b7e0 <isspace@plt+0x17ed0>
  41b7d6:	mov    rdi,rbx
  41b7d9:	call   41b850 <isspace@plt+0x17f40>
  41b7de:	jmp    41b80c <isspace@plt+0x17efc>
  41b7e0:	cmp    ebp,edx
  41b7e2:	jge    41b80c <isspace@plt+0x17efc>
  41b7e4:	cmp    rax,rcx
  41b7e7:	je     41b80c <isspace@plt+0x17efc>
  41b7e9:	test   rax,rax
  41b7ec:	je     41b80c <isspace@plt+0x17efc>
  41b7ee:	dec    edx
  41b7f0:	mov    rsi,QWORD PTR [rax+0x10]
  41b7f4:	add    QWORD PTR [rbx+0x50],rsi
  41b7f8:	cmp    edx,ebp
  41b7fa:	jle    41b80c <isspace@plt+0x17efc>
  41b7fc:	mov    rax,QWORD PTR [rax+0x8]
  41b800:	cmp    rax,rcx
  41b803:	je     41b80c <isspace@plt+0x17efc>
  41b805:	dec    edx
  41b807:	test   rax,rax
  41b80a:	jne    41b7f0 <isspace@plt+0x17ee0>
  41b80c:	mov    rdi,rbx
  41b80f:	call   419f00 <isspace@plt+0x165f0>
  41b814:	mov    rdi,QWORD PTR [rbx+0x98]
  41b81b:	mov    rsi,r14
  41b81e:	call   41a7c0 <isspace@plt+0x16eb0>
  41b823:	mov    rax,QWORD PTR fs:0x28
  41b82c:	cmp    rax,QWORD PTR [rsp+0x8]
  41b831:	jne    41b83c <isspace@plt+0x17f2c>
  41b833:	add    rsp,0x10
  41b837:	pop    rbx
  41b838:	pop    r14
  41b83a:	pop    rbp
  41b83b:	ret    
  41b83c:	call   403280 <__stack_chk_fail@plt>
  41b841:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b84b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b850:	push   r15
  41b852:	push   r14
  41b854:	push   r13
  41b856:	push   r12
  41b858:	push   rbx
  41b859:	sub    rsp,0x30
  41b85d:	mov    rbx,rdi
  41b860:	mov    rax,QWORD PTR fs:0x28
  41b869:	mov    QWORD PTR [rsp+0x28],rax
  41b86e:	mov    r12,QWORD PTR [rdi+0x88]
  41b875:	mov    r14,QWORD PTR [rdi+0x98]
  41b87c:	mov    r13,QWORD PTR [r14+0x30]
  41b880:	mov    r15d,DWORD PTR [r14+0x24]
  41b884:	call   41be10 <isspace@plt+0x18500>
  41b889:	test   al,al
  41b88b:	je     41b8a4 <isspace@plt+0x17f94>
  41b88d:	cmp    r13,r12
  41b890:	je     41b8d2 <isspace@plt+0x17fc2>
  41b892:	mov    rsi,QWORD PTR [r14+0x18]
  41b896:	mov    rdi,QWORD PTR [rbx+0x98]
  41b89d:	call   41a7c0 <isspace@plt+0x16eb0>
  41b8a2:	jmp    41b8ac <isspace@plt+0x17f9c>
  41b8a4:	mov    rdi,r14
  41b8a7:	call   41c6d0 <isspace@plt+0x18dc0>
  41b8ac:	mov    rax,QWORD PTR [r14+0x18]
  41b8b0:	mov    rcx,QWORD PTR fs:0x28
  41b8b9:	cmp    rcx,QWORD PTR [rsp+0x28]
  41b8be:	jne    41bc15 <isspace@plt+0x18305>
  41b8c4:	add    rsp,0x30
  41b8c8:	pop    rbx
  41b8c9:	pop    r12
  41b8cb:	pop    r13
  41b8cd:	pop    r14
  41b8cf:	pop    r15
  41b8d1:	ret    
  41b8d2:	mov    rax,QWORD PTR [rbx+0x88]
  41b8d9:	mov    r8,QWORD PTR [r14+0x40]
  41b8dd:	mov    rbx,QWORD PTR [r8+0x50]
  41b8e1:	mov    rcx,QWORD PTR [r8+0x80]
  41b8e8:	xor    edx,edx
  41b8ea:	test   rcx,rcx
  41b8ed:	je     41b914 <isspace@plt+0x18004>
  41b8ef:	cmp    rcx,rax
  41b8f2:	je     41b914 <isspace@plt+0x18004>
  41b8f4:	xor    edx,edx
  41b8f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b900:	add    rbx,QWORD PTR [rcx+0x10]
  41b904:	inc    edx
  41b906:	mov    rcx,QWORD PTR [rcx+0x8]
  41b90a:	test   rcx,rcx
  41b90d:	je     41b914 <isspace@plt+0x18004>
  41b90f:	cmp    rcx,rax
  41b912:	jne    41b900 <isspace@plt+0x17ff0>
  41b914:	test   r15d,r15d
  41b917:	jle    41baac <isspace@plt+0x1819c>
  41b91d:	movsxd r15,r15d
  41b920:	lea    rcx,[r15+r15*2]
  41b924:	shl    rcx,0x4
  41b928:	add    rcx,rax
  41b92b:	add    rcx,0x38
  41b92f:	nop
  41b930:	cmp    QWORD PTR [rcx],0x0
  41b934:	jne    41b93f <isspace@plt+0x1802f>
  41b936:	add    rcx,0xffffffffffffffd0
  41b93a:	dec    r15
  41b93d:	jg     41b930 <isspace@plt+0x18020>
  41b93f:	test   r15d,r15d
  41b942:	jle    41baac <isspace@plt+0x1819c>
  41b948:	mov    esi,r15d
  41b94b:	cmp    r15d,0x11
  41b94f:	jae    41b958 <isspace@plt+0x18048>
  41b951:	xor    ecx,ecx
  41b953:	jmp    41ba87 <isspace@plt+0x18177>
  41b958:	mov    ecx,esi
  41b95a:	and    ecx,0xf
  41b95d:	test   rcx,rcx
  41b960:	mov    edi,0x10
  41b965:	cmovne rdi,rcx
  41b969:	mov    rcx,rsi
  41b96c:	sub    rcx,rdi
  41b96f:	vmovq  xmm0,rbx
  41b974:	vpxor  xmm1,xmm1,xmm1
  41b978:	vmovdqa ymm2,YMMWORD PTR [rip+0x15280]        # 430c00 <isspace@plt+0x2d2f0>
  41b980:	vpbroadcastq ymm3,QWORD PTR [rip+0x15297]        # 430c20 <isspace@plt+0x2d310>
  41b989:	vpbroadcastq ymm4,QWORD PTR [rip+0x15296]        # 430c28 <isspace@plt+0x2d318>
  41b992:	vmovdqu YMMWORD PTR [rsp],ymm4
  41b997:	vpbroadcastq ymm5,QWORD PTR [rip+0x15290]        # 430c30 <isspace@plt+0x2d320>
  41b9a0:	vpbroadcastq ymm6,QWORD PTR [rip+0x1528f]        # 430c38 <isspace@plt+0x2d328>
  41b9a9:	vpbroadcastq ymm7,QWORD PTR [rip+0x1528e]        # 430c40 <isspace@plt+0x2d330>
  41b9b2:	vpbroadcastq ymm8,QWORD PTR [rip+0x1528d]        # 430c48 <isspace@plt+0x2d338>
  41b9bb:	mov    rdi,rcx
  41b9be:	vpxor  xmm9,xmm9,xmm9
  41b9c3:	vpxor  xmm10,xmm10,xmm10
  41b9c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b9d0:	vpmuludq ymm11,ymm2,ymm3
  41b9d4:	vpsrlq ymm12,ymm2,0x20
  41b9d9:	vpmuludq ymm12,ymm12,ymm3
  41b9dd:	vpsllq ymm12,ymm12,0x20
  41b9e3:	vmovq  xmm4,rax
  41b9e8:	vpbroadcastq ymm4,xmm4
  41b9ed:	vpaddq ymm4,ymm11,ymm4
  41b9f1:	vpaddq ymm4,ymm12,ymm4
  41b9f5:	vpaddq ymm11,ymm4,YMMWORD PTR [rsp]
  41b9fa:	vpaddq ymm12,ymm4,ymm6
  41b9fe:	vpaddq ymm14,ymm4,ymm7
  41ba02:	vpaddq ymm4,ymm4,ymm8
  41ba07:	vpcmpeqd ymm15,ymm15,ymm15
  41ba0c:	vpgatherqq ymm13,QWORD PTR [ymm11*1+0x0],ymm15
  41ba16:	vpcmpeqd ymm11,ymm11,ymm11
  41ba1b:	vpgatherqq ymm15,QWORD PTR [ymm12*1+0x0],ymm11
  41ba25:	vpcmpeqd ymm11,ymm11,ymm11
  41ba2a:	vpgatherqq ymm12,QWORD PTR [ymm14*1+0x0],ymm11
  41ba34:	vpcmpeqd ymm11,ymm11,ymm11
  41ba39:	vpgatherqq ymm14,QWORD PTR [ymm4*1+0x0],ymm11
  41ba43:	vpaddq ymm0,ymm13,ymm0
  41ba47:	vpaddq ymm1,ymm15,ymm1
  41ba4b:	vpaddq ymm9,ymm12,ymm9
  41ba50:	vpaddq ymm10,ymm14,ymm10
  41ba55:	vpaddq ymm2,ymm2,ymm5
  41ba59:	add    rdi,0xfffffffffffffff0
  41ba5d:	jne    41b9d0 <isspace@plt+0x180c0>
  41ba63:	vpaddq ymm0,ymm1,ymm0
  41ba67:	vpaddq ymm0,ymm9,ymm0
  41ba6b:	vpaddq ymm0,ymm10,ymm0
  41ba6f:	vextracti128 xmm1,ymm0,0x1
  41ba75:	vpaddq xmm0,xmm0,xmm1
  41ba79:	vpshufd xmm1,xmm0,0x4e
  41ba7e:	vpaddq xmm0,xmm0,xmm1
  41ba82:	vmovq  rbx,xmm0
  41ba87:	sub    rsi,rcx
  41ba8a:	lea    rcx,[rcx+rcx*2]
  41ba8e:	shl    rcx,0x4
  41ba92:	add    rcx,rax
  41ba95:	add    rcx,0x38
  41ba99:	nop    DWORD PTR [rax+0x0]
  41baa0:	add    rbx,QWORD PTR [rcx]
  41baa3:	add    rcx,0x30
  41baa7:	dec    rsi
  41baaa:	jne    41baa0 <isspace@plt+0x18190>
  41baac:	mov    DWORD PTR [r14+0x24],r15d
  41bab0:	mov    DWORD PTR [r14+0x20],edx
  41bab4:	mov    QWORD PTR [r14+0x30],rax
  41bab8:	mov    rdi,QWORD PTR [r8]
  41babb:	mov    rsi,rbx
  41babe:	vzeroupper 
  41bac1:	call   410d60 <isspace@plt+0xd450>
  41bac6:	mov    QWORD PTR [r14],rax
  41bac9:	cmp    BYTE PTR [r14+0x10],0x0
  41bace:	jne    41bad4 <isspace@plt+0x181c4>
  41bad0:	mov    QWORD PTR [r14+0x8],rax
  41bad4:	cmp    QWORD PTR [r14+0x18],rbx
  41bad8:	je     41bae2 <isspace@plt+0x181d2>
  41bada:	mov    DWORD PTR [r14+0x28],0x0
  41bae2:	mov    QWORD PTR [r14+0x18],rbx
  41bae6:	mov    rdi,QWORD PTR [r14+0x40]
  41baea:	mov    r15,QWORD PTR [rdi+0x50]
  41baee:	cmp    r15,rbx
  41baf1:	ja     41baf9 <isspace@plt+0x181e9>
  41baf3:	cmp    QWORD PTR [rdi+0x58],rbx
  41baf7:	jae    41bb2e <isspace@plt+0x1821e>
  41baf9:	mov    QWORD PTR [r14+0x30],0x0
  41bb01:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
  41bb09:	cmp    QWORD PTR [rdi+0x98],r14
  41bb10:	jne    41b8ac <isspace@plt+0x17f9c>
  41bb16:	mov    rax,QWORD PTR [rdi+0x80]
  41bb1d:	mov    QWORD PTR [r14+0x30],rax
  41bb21:	mov    QWORD PTR [r14+0x20],0x0
  41bb29:	jmp    41b8ac <isspace@plt+0x17f9c>
  41bb2e:	mov    r11,QWORD PTR [rdi+0x80]
  41bb35:	test   r11,r11
  41bb38:	je     41bb7b <isspace@plt+0x1826b>
  41bb3a:	mov    rcx,QWORD PTR [rdi+0x88]
  41bb41:	xor    r9d,r9d
  41bb44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bb4e:	xchg   ax,ax
  41bb50:	cmp    r15,rbx
  41bb53:	setb   al
  41bb56:	cmp    r11,rcx
  41bb59:	je     41bba3 <isspace@plt+0x18293>
  41bb5b:	cmp    r15,rbx
  41bb5e:	jae    41bba3 <isspace@plt+0x18293>
  41bb60:	mov    rax,QWORD PTR [r11+0x10]
  41bb64:	add    rax,r15
  41bb67:	cmp    rax,rbx
  41bb6a:	ja     41bba1 <isspace@plt+0x18291>
  41bb6c:	inc    r9d
  41bb6f:	mov    r11,QWORD PTR [r11+0x8]
  41bb73:	mov    r15,rax
  41bb76:	test   r11,r11
  41bb79:	jne    41bb50 <isspace@plt+0x18240>
  41bb7b:	mov    r11,QWORD PTR [rdi+0x90]
  41bb82:	mov    r9d,DWORD PTR [rdi+0x4c]
  41bb86:	dec    r9d
  41bb89:	xor    edx,edx
  41bb8b:	mov    QWORD PTR [r14+0x30],r11
  41bb8f:	mov    DWORD PTR [r14+0x20],r9d
  41bb93:	mov    DWORD PTR [r14+0x24],edx
  41bb97:	call   419f00 <isspace@plt+0x165f0>
  41bb9c:	jmp    41b8ac <isspace@plt+0x17f9c>
  41bba1:	mov    al,0x1
  41bba3:	mov    r8d,DWORD PTR [rdi+0x48]
  41bba7:	mov    ecx,DWORD PTR [r11+0x20]
  41bbab:	cmp    r8d,ecx
  41bbae:	cmovg  r8d,ecx
  41bbb2:	xor    edx,edx
  41bbb4:	test   al,al
  41bbb6:	je     41bb8b <isspace@plt+0x1827b>
  41bbb8:	test   r8d,r8d
  41bbbb:	jle    41bb8b <isspace@plt+0x1827b>
  41bbbd:	movsxd rcx,r8d
  41bbc0:	lea    r10,[r11+0x68]
  41bbc4:	xor    edx,edx
  41bbc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bbd0:	movsxd rsi,edx
  41bbd3:	mov    rax,rsi
  41bbd6:	shl    rax,0x4
  41bbda:	lea    rax,[rax+rax*2]
  41bbde:	add    r15,QWORD PTR [r11+rax*1+0x38]
  41bbe3:	inc    rsi
  41bbe6:	add    rax,r10
  41bbe9:	nop    DWORD PTR [rax+0x0]
  41bbf0:	mov    rdx,rsi
  41bbf3:	cmp    rsi,rcx
  41bbf6:	jge    41bc06 <isspace@plt+0x182f6>
  41bbf8:	lea    rsi,[rdx+0x1]
  41bbfc:	cmp    QWORD PTR [rax],0x0
  41bc00:	lea    rax,[rax+0x30]
  41bc04:	je     41bbf0 <isspace@plt+0x182e0>
  41bc06:	cmp    r15,rbx
  41bc09:	jae    41bb8b <isspace@plt+0x1827b>
  41bc0b:	cmp    r8d,edx
  41bc0e:	jg     41bbd0 <isspace@plt+0x182c0>
  41bc10:	jmp    41bb8b <isspace@plt+0x1827b>
  41bc15:	call   403280 <__stack_chk_fail@plt>
  41bc1a:	nop    WORD PTR [rax+rax*1+0x0]
  41bc20:	push   r15
  41bc22:	push   r14
  41bc24:	push   rbx
  41bc25:	sub    rsp,0x10
  41bc29:	mov    r15,rdi
  41bc2c:	mov    rax,QWORD PTR fs:0x28
  41bc35:	mov    QWORD PTR [rsp+0x8],rax
  41bc3a:	mov    rax,QWORD PTR [rdi+0x98]
  41bc41:	mov    r14,QWORD PTR [rax+0x18]
  41bc45:	mov    esi,DWORD PTR [rdi+0x4c]
  41bc48:	call   41be10 <isspace@plt+0x18500>
  41bc4d:	jmp    41bc60 <isspace@plt+0x18350>
  41bc4f:	nop
  41bc50:	mov    rax,QWORD PTR [r15+0x58]
  41bc54:	mov    QWORD PTR [r15+0x50],rax
  41bc58:	mov    rdi,r15
  41bc5b:	call   419f00 <isspace@plt+0x165f0>
  41bc60:	mov    rbx,QWORD PTR [r15+0x58]
  41bc64:	cmp    r14,rbx
  41bc67:	jb     41bc93 <isspace@plt+0x18383>
  41bc69:	mov    rdi,QWORD PTR [r15]
  41bc6c:	call   410890 <isspace@plt+0xcf80>
  41bc71:	cmp    rbx,rax
  41bc74:	jae    41bc93 <isspace@plt+0x18383>
  41bc76:	cmp    DWORD PTR [r15+0x4c],0x1
  41bc7b:	jle    41bc50 <isspace@plt+0x18340>
  41bc7d:	mov    rax,QWORD PTR [r15+0x80]
  41bc84:	test   rax,rax
  41bc87:	je     41bc58 <isspace@plt+0x18348>
  41bc89:	mov    rax,QWORD PTR [rax+0x10]
  41bc8d:	add    rax,QWORD PTR [r15+0x50]
  41bc91:	jmp    41bc54 <isspace@plt+0x18344>
  41bc93:	mov    r15,QWORD PTR [r15+0x98]
  41bc9a:	mov    rax,QWORD PTR [r15+0x40]
  41bc9e:	mov    rdi,QWORD PTR [rax]
  41bca1:	mov    rsi,r14
  41bca4:	call   410d60 <isspace@plt+0xd450>
  41bca9:	mov    QWORD PTR [r15],rax
  41bcac:	cmp    BYTE PTR [r15+0x10],0x0
  41bcb1:	je     41bd0a <isspace@plt+0x183fa>
  41bcb3:	cmp    QWORD PTR [r15+0x18],r14
  41bcb7:	je     41bcc1 <isspace@plt+0x183b1>
  41bcb9:	mov    DWORD PTR [r15+0x28],0x0
  41bcc1:	mov    QWORD PTR [r15+0x18],r14
  41bcc5:	mov    rdi,QWORD PTR [r15+0x40]
  41bcc9:	mov    rdx,QWORD PTR [rdi+0x50]
  41bccd:	cmp    rdx,r14
  41bcd0:	ja     41bcd8 <isspace@plt+0x183c8>
  41bcd2:	cmp    QWORD PTR [rdi+0x58],r14
  41bcd6:	jae    41bd16 <isspace@plt+0x18406>
  41bcd8:	mov    QWORD PTR [r15+0x30],0x0
  41bce0:	mov    QWORD PTR [r15+0x20],0xffffffffffffffff
  41bce8:	cmp    QWORD PTR [rdi+0x98],r15
  41bcef:	jne    41bd7c <isspace@plt+0x1846c>
  41bcf5:	mov    rax,QWORD PTR [rdi+0x80]
  41bcfc:	mov    QWORD PTR [r15+0x30],rax
  41bd00:	mov    QWORD PTR [r15+0x20],0x0
  41bd08:	jmp    41bd7c <isspace@plt+0x1846c>
  41bd0a:	mov    QWORD PTR [r15+0x8],rax
  41bd0e:	cmp    QWORD PTR [r15+0x18],r14
  41bd12:	jne    41bcb9 <isspace@plt+0x183a9>
  41bd14:	jmp    41bcc1 <isspace@plt+0x183b1>
  41bd16:	mov    r11,QWORD PTR [rdi+0x80]
  41bd1d:	test   r11,r11
  41bd20:	je     41bd5b <isspace@plt+0x1844b>
  41bd22:	mov    rsi,QWORD PTR [rdi+0x88]
  41bd29:	xor    r10d,r10d
  41bd2c:	nop    DWORD PTR [rax+0x0]
  41bd30:	cmp    rdx,r14
  41bd33:	setb   cl
  41bd36:	cmp    r11,rsi
  41bd39:	je     41bd98 <isspace@plt+0x18488>
  41bd3b:	cmp    rdx,r14
  41bd3e:	jae    41bd98 <isspace@plt+0x18488>
  41bd40:	mov    rax,QWORD PTR [r11+0x10]
  41bd44:	add    rax,rdx
  41bd47:	cmp    rax,r14
  41bd4a:	ja     41bd96 <isspace@plt+0x18486>
  41bd4c:	inc    r10d
  41bd4f:	mov    r11,QWORD PTR [r11+0x8]
  41bd53:	mov    rdx,rax
  41bd56:	test   r11,r11
  41bd59:	jne    41bd30 <isspace@plt+0x18420>
  41bd5b:	mov    r11,QWORD PTR [rdi+0x90]
  41bd62:	mov    r10d,DWORD PTR [rdi+0x4c]
  41bd66:	dec    r10d
  41bd69:	xor    eax,eax
  41bd6b:	mov    QWORD PTR [r15+0x30],r11
  41bd6f:	mov    DWORD PTR [r15+0x20],r10d
  41bd73:	mov    DWORD PTR [r15+0x24],eax
  41bd77:	call   419f00 <isspace@plt+0x165f0>
  41bd7c:	mov    rax,QWORD PTR fs:0x28
  41bd85:	cmp    rax,QWORD PTR [rsp+0x8]
  41bd8a:	jne    41be09 <isspace@plt+0x184f9>
  41bd8c:	add    rsp,0x10
  41bd90:	pop    rbx
  41bd91:	pop    r14
  41bd93:	pop    r15
  41bd95:	ret    
  41bd96:	mov    cl,0x1
  41bd98:	mov    r8d,DWORD PTR [rdi+0x48]
  41bd9c:	mov    eax,DWORD PTR [r11+0x20]
  41bda0:	cmp    r8d,eax
  41bda3:	cmovg  r8d,eax
  41bda7:	xor    eax,eax
  41bda9:	test   cl,cl
  41bdab:	je     41bd6b <isspace@plt+0x1845b>
  41bdad:	test   r8d,r8d
  41bdb0:	jle    41bd6b <isspace@plt+0x1845b>
  41bdb2:	movsxd rbx,r8d
  41bdb5:	lea    r9,[r11+0x68]
  41bdb9:	xor    eax,eax
  41bdbb:	nop    DWORD PTR [rax+rax*1+0x0]
  41bdc0:	movsxd rsi,eax
  41bdc3:	mov    rax,rsi
  41bdc6:	shl    rax,0x4
  41bdca:	lea    rcx,[rax+rax*2]
  41bdce:	add    rdx,QWORD PTR [r11+rcx*1+0x38]
  41bdd3:	inc    rsi
  41bdd6:	add    rcx,r9
  41bdd9:	nop    DWORD PTR [rax+0x0]
  41bde0:	mov    rax,rsi
  41bde3:	cmp    rsi,rbx
  41bde6:	jge    41bdf6 <isspace@plt+0x184e6>
  41bde8:	lea    rsi,[rax+0x1]
  41bdec:	cmp    QWORD PTR [rcx],0x0
  41bdf0:	lea    rcx,[rcx+0x30]
  41bdf4:	je     41bde0 <isspace@plt+0x184d0>
  41bdf6:	cmp    rdx,r14
  41bdf9:	jae    41bd6b <isspace@plt+0x1845b>
  41bdff:	cmp    r8d,eax
  41be02:	jg     41bdc0 <isspace@plt+0x184b0>
  41be04:	jmp    41bd6b <isspace@plt+0x1845b>
  41be09:	call   403280 <__stack_chk_fail@plt>
  41be0e:	xchg   ax,ax
  41be10:	push   rbp
  41be11:	push   r15
  41be13:	push   r14
  41be15:	push   r13
  41be17:	push   r12
  41be19:	push   rbx
  41be1a:	sub    rsp,0x38
  41be1e:	mov    rax,QWORD PTR fs:0x28
  41be27:	mov    QWORD PTR [rsp+0x30],rax
  41be2c:	mov    rdx,QWORD PTR [rdi+0x50]
  41be30:	test   rdx,rdx
  41be33:	je     41be7d <isspace@plt+0x1856d>
  41be35:	mov    ebp,esi
  41be37:	mov    r12,rdi
  41be3a:	movsxd r15,DWORD PTR [rdi+0x48]
  41be3e:	movsxd r13,DWORD PTR [rdi+0x4c]
  41be42:	mov    rsi,QWORD PTR [rdi]
  41be45:	dec    rdx
  41be48:	mov    r14,rsp
  41be4b:	mov    rdi,r14
  41be4e:	call   410570 <isspace@plt+0xcc60>
  41be53:	lea    rsi,[rsp+0x2f]
  41be58:	mov    rdi,r14
  41be5b:	call   412400 <isspace@plt+0xeaf0>
  41be60:	test   al,al
  41be62:	je     41be7d <isspace@plt+0x1856d>
  41be64:	cmp    BYTE PTR [rsp+0x2f],0xa
  41be69:	jne    41be81 <isspace@plt+0x18571>
  41be6b:	mov    rdi,rsp
  41be6e:	lea    rsi,[rsp+0x2f]
  41be73:	call   412540 <isspace@plt+0xec30>
  41be78:	movzx  ebx,al
  41be7b:	jmp    41be83 <isspace@plt+0x18573>
  41be7d:	xor    eax,eax
  41be7f:	jmp    41bed0 <isspace@plt+0x185c0>
  41be81:	xor    ebx,ebx
  41be83:	imul   r13,r15
  41be87:	mov    r14,rsp
  41be8a:	lea    r15,[rsp+0x2f]
  41be8f:	nop
  41be90:	cmp    BYTE PTR [rsp+0x2f],0xa
  41be95:	jne    41be9b <isspace@plt+0x1858b>
  41be97:	dec    ebp
  41be99:	je     41beb2 <isspace@plt+0x185a2>
  41be9b:	inc    rbx
  41be9e:	cmp    rbx,r13
  41bea1:	ja     41beb2 <isspace@plt+0x185a2>
  41bea3:	mov    rdi,r14
  41bea6:	mov    rsi,r15
  41bea9:	call   412540 <isspace@plt+0xec30>
  41beae:	test   al,al
  41beb0:	jne    41be90 <isspace@plt+0x18580>
  41beb2:	mov    rax,QWORD PTR [r12+0x50]
  41beb7:	cmp    rax,rbx
  41beba:	cmovbe rbx,rax
  41bebe:	sub    rax,rbx
  41bec1:	mov    QWORD PTR [r12+0x50],rax
  41bec6:	mov    rdi,r12
  41bec9:	call   419f00 <isspace@plt+0x165f0>
  41bece:	mov    al,0x1
  41bed0:	mov    rcx,QWORD PTR fs:0x28
  41bed9:	cmp    rcx,QWORD PTR [rsp+0x30]
  41bede:	jne    41beef <isspace@plt+0x185df>
  41bee0:	add    rsp,0x38
  41bee4:	pop    rbx
  41bee5:	pop    r12
  41bee7:	pop    r13
  41bee9:	pop    r14
  41beeb:	pop    r15
  41beed:	pop    rbp
  41beee:	ret    
  41beef:	call   403280 <__stack_chk_fail@plt>
  41bef4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41befe:	xchg   ax,ax
  41bf00:	push   rbp
  41bf01:	push   r15
  41bf03:	push   r14
  41bf05:	push   rbx
  41bf06:	sub    rsp,0x38
  41bf0a:	mov    ebp,esi
  41bf0c:	mov    rbx,rdi
  41bf0f:	mov    rax,QWORD PTR fs:0x28
  41bf18:	mov    QWORD PTR [rsp+0x30],rax
  41bf1d:	mov    r14,QWORD PTR [rdi+0x98]
  41bf24:	mov    rdi,QWORD PTR [rdi]
  41bf27:	mov    r15,QWORD PTR [rbx+0x58]
  41bf2b:	call   410890 <isspace@plt+0xcf80>
  41bf30:	cmp    r15,rax
  41bf33:	jae    41bf69 <isspace@plt+0x18659>
  41bf35:	cmp    DWORD PTR [rbx+0x4c],ebp
  41bf38:	jle    41bf76 <isspace@plt+0x18666>
  41bf3a:	test   ebp,ebp
  41bf3c:	jle    41bf7e <isspace@plt+0x1866e>
  41bf3e:	mov    rax,QWORD PTR [rbx+0x80]
  41bf45:	test   rax,rax
  41bf48:	je     41bf7e <isspace@plt+0x1866e>
  41bf4a:	mov    rcx,QWORD PTR [rbx+0x50]
  41bf4e:	dec    ebp
  41bf50:	add    rcx,QWORD PTR [rax+0x10]
  41bf54:	mov    QWORD PTR [rbx+0x50],rcx
  41bf58:	test   ebp,ebp
  41bf5a:	jle    41bf7e <isspace@plt+0x1866e>
  41bf5c:	mov    rax,QWORD PTR [rax+0x8]
  41bf60:	dec    ebp
  41bf62:	test   rax,rax
  41bf65:	jne    41bf50 <isspace@plt+0x18640>
  41bf67:	jmp    41bf7e <isspace@plt+0x1866e>
  41bf69:	mov    rdi,r14
  41bf6c:	call   41c2f0 <isspace@plt+0x189e0>
  41bf71:	jmp    41c25c <isspace@plt+0x1894c>
  41bf76:	mov    rax,QWORD PTR [rbx+0x58]
  41bf7a:	mov    QWORD PTR [rbx+0x50],rax
  41bf7e:	mov    rdi,rbx
  41bf81:	call   419f00 <isspace@plt+0x165f0>
  41bf86:	mov    rsi,QWORD PTR [r14+0x30]
  41bf8a:	cmp    rsi,QWORD PTR [rbx+0x80]
  41bf91:	je     41bfa8 <isspace@plt+0x18698>
  41bf93:	mov    rsi,QWORD PTR [r14+0x18]
  41bf97:	mov    rdi,QWORD PTR [rbx+0x98]
  41bf9e:	call   41a7c0 <isspace@plt+0x16eb0>
  41bfa3:	jmp    41c25c <isspace@plt+0x1894c>
  41bfa8:	mov    ecx,DWORD PTR [r14+0x24]
  41bfac:	mov    r8,QWORD PTR [r14+0x40]
  41bfb0:	mov    rbx,QWORD PTR [r8+0x50]
  41bfb4:	mov    rax,QWORD PTR [r8+0x80]
  41bfbb:	xor    edx,edx
  41bfbd:	test   rax,rax
  41bfc0:	je     41bfe4 <isspace@plt+0x186d4>
  41bfc2:	cmp    rax,rsi
  41bfc5:	je     41bfe4 <isspace@plt+0x186d4>
  41bfc7:	xor    edx,edx
  41bfc9:	nop    DWORD PTR [rax+0x0]
  41bfd0:	add    rbx,QWORD PTR [rax+0x10]
  41bfd4:	inc    edx
  41bfd6:	mov    rax,QWORD PTR [rax+0x8]
  41bfda:	test   rax,rax
  41bfdd:	je     41bfe4 <isspace@plt+0x186d4>
  41bfdf:	cmp    rax,rsi
  41bfe2:	jne    41bfd0 <isspace@plt+0x186c0>
  41bfe4:	test   ecx,ecx
  41bfe6:	jle    41c17c <isspace@plt+0x1886c>
  41bfec:	movsxd rcx,ecx
  41bfef:	lea    rax,[rcx+rcx*2]
  41bff3:	shl    rax,0x4
  41bff7:	add    rax,rsi
  41bffa:	add    rax,0x38
  41bffe:	xchg   ax,ax
  41c000:	cmp    QWORD PTR [rax],0x0
  41c004:	jne    41c00f <isspace@plt+0x186ff>
  41c006:	add    rax,0xffffffffffffffd0
  41c00a:	dec    rcx
  41c00d:	jg     41c000 <isspace@plt+0x186f0>
  41c00f:	test   ecx,ecx
  41c011:	jle    41c17c <isspace@plt+0x1886c>
  41c017:	mov    edi,ecx
  41c019:	cmp    ecx,0x11
  41c01c:	jae    41c025 <isspace@plt+0x18715>
  41c01e:	xor    eax,eax
  41c020:	jmp    41c157 <isspace@plt+0x18847>
  41c025:	mov    eax,edi
  41c027:	and    eax,0xf
  41c02a:	test   rax,rax
  41c02d:	mov    ebp,0x10
  41c032:	cmovne rbp,rax
  41c036:	mov    rax,rdi
  41c039:	sub    rax,rbp
  41c03c:	vmovq  xmm0,rbx
  41c041:	vpxor  xmm1,xmm1,xmm1
  41c045:	vmovdqa ymm2,YMMWORD PTR [rip+0x14bb3]        # 430c00 <isspace@plt+0x2d2f0>
  41c04d:	vpbroadcastq ymm3,QWORD PTR [rip+0x14bca]        # 430c20 <isspace@plt+0x2d310>
  41c056:	vpbroadcastq ymm4,QWORD PTR [rip+0x14bc9]        # 430c28 <isspace@plt+0x2d318>
  41c05f:	vmovdqu YMMWORD PTR [rsp],ymm4
  41c064:	vpbroadcastq ymm5,QWORD PTR [rip+0x14bc3]        # 430c30 <isspace@plt+0x2d320>
  41c06d:	vpbroadcastq ymm6,QWORD PTR [rip+0x14bc2]        # 430c38 <isspace@plt+0x2d328>
  41c076:	vpbroadcastq ymm7,QWORD PTR [rip+0x14bc1]        # 430c40 <isspace@plt+0x2d330>
  41c07f:	vpbroadcastq ymm8,QWORD PTR [rip+0x14bc0]        # 430c48 <isspace@plt+0x2d338>
  41c088:	mov    rbp,rax
  41c08b:	vpxor  xmm9,xmm9,xmm9
  41c090:	vpxor  xmm10,xmm10,xmm10
  41c095:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c09f:	nop
  41c0a0:	vpmuludq ymm11,ymm2,ymm3
  41c0a4:	vpsrlq ymm12,ymm2,0x20
  41c0a9:	vpmuludq ymm12,ymm12,ymm3
  41c0ad:	vpsllq ymm12,ymm12,0x20
  41c0b3:	vmovq  xmm4,rsi
  41c0b8:	vpbroadcastq ymm4,xmm4
  41c0bd:	vpaddq ymm4,ymm11,ymm4
  41c0c1:	vpaddq ymm4,ymm12,ymm4
  41c0c5:	vpaddq ymm11,ymm4,YMMWORD PTR [rsp]
  41c0ca:	vpaddq ymm12,ymm4,ymm6
  41c0ce:	vpaddq ymm14,ymm4,ymm7
  41c0d2:	vpaddq ymm4,ymm4,ymm8
  41c0d7:	vpcmpeqd ymm15,ymm15,ymm15
  41c0dc:	vpgatherqq ymm13,QWORD PTR [ymm11*1+0x0],ymm15
  41c0e6:	vpcmpeqd ymm11,ymm11,ymm11
  41c0eb:	vpgatherqq ymm15,QWORD PTR [ymm12*1+0x0],ymm11
  41c0f5:	vpcmpeqd ymm11,ymm11,ymm11
  41c0fa:	vpgatherqq ymm12,QWORD PTR [ymm14*1+0x0],ymm11
  41c104:	vpcmpeqd ymm11,ymm11,ymm11
  41c109:	vpgatherqq ymm14,QWORD PTR [ymm4*1+0x0],ymm11
  41c113:	vpaddq ymm0,ymm13,ymm0
  41c117:	vpaddq ymm1,ymm15,ymm1
  41c11b:	vpaddq ymm9,ymm12,ymm9
  41c120:	vpaddq ymm10,ymm14,ymm10
  41c125:	vpaddq ymm2,ymm2,ymm5
  41c129:	add    rbp,0xfffffffffffffff0
  41c12d:	jne    41c0a0 <isspace@plt+0x18790>
  41c133:	vpaddq ymm0,ymm1,ymm0
  41c137:	vpaddq ymm0,ymm9,ymm0
  41c13b:	vpaddq ymm0,ymm10,ymm0
  41c13f:	vextracti128 xmm1,ymm0,0x1
  41c145:	vpaddq xmm0,xmm0,xmm1
  41c149:	vpshufd xmm1,xmm0,0x4e
  41c14e:	vpaddq xmm0,xmm0,xmm1
  41c152:	vmovq  rbx,xmm0
  41c157:	sub    rdi,rax
  41c15a:	lea    rax,[rax+rax*2]
  41c15e:	shl    rax,0x4
  41c162:	add    rax,rsi
  41c165:	add    rax,0x38
  41c169:	nop    DWORD PTR [rax+0x0]
  41c170:	add    rbx,QWORD PTR [rax]
  41c173:	add    rax,0x30
  41c177:	dec    rdi
  41c17a:	jne    41c170 <isspace@plt+0x18860>
  41c17c:	mov    DWORD PTR [r14+0x24],ecx
  41c180:	mov    DWORD PTR [r14+0x20],edx
  41c184:	mov    rdi,QWORD PTR [r8]
  41c187:	mov    rsi,rbx
  41c18a:	vzeroupper 
  41c18d:	call   410d60 <isspace@plt+0xd450>
  41c192:	mov    QWORD PTR [r14],rax
  41c195:	cmp    BYTE PTR [r14+0x10],0x0
  41c19a:	jne    41c1a0 <isspace@plt+0x18890>
  41c19c:	mov    QWORD PTR [r14+0x8],rax
  41c1a0:	cmp    QWORD PTR [r14+0x18],rbx
  41c1a4:	je     41c1ae <isspace@plt+0x1889e>
  41c1a6:	mov    DWORD PTR [r14+0x28],0x0
  41c1ae:	mov    QWORD PTR [r14+0x18],rbx
  41c1b2:	mov    rdi,QWORD PTR [r14+0x40]
  41c1b6:	mov    rdx,QWORD PTR [rdi+0x50]
  41c1ba:	cmp    rdx,rbx
  41c1bd:	ja     41c1c5 <isspace@plt+0x188b5>
  41c1bf:	cmp    QWORD PTR [rdi+0x58],rbx
  41c1c3:	jae    41c1f3 <isspace@plt+0x188e3>
  41c1c5:	mov    QWORD PTR [r14+0x30],0x0
  41c1cd:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
  41c1d5:	cmp    QWORD PTR [rdi+0x98],r14
  41c1dc:	jne    41c25c <isspace@plt+0x1894c>
  41c1de:	mov    rax,QWORD PTR [rdi+0x80]
  41c1e5:	mov    QWORD PTR [r14+0x30],rax
  41c1e9:	mov    QWORD PTR [r14+0x20],0x0
  41c1f1:	jmp    41c25c <isspace@plt+0x1894c>
  41c1f3:	mov    r11,QWORD PTR [rdi+0x80]
  41c1fa:	test   r11,r11
  41c1fd:	je     41c23b <isspace@plt+0x1892b>
  41c1ff:	mov    rsi,QWORD PTR [rdi+0x88]
  41c206:	xor    r10d,r10d
  41c209:	nop    DWORD PTR [rax+0x0]
  41c210:	cmp    rdx,rbx
  41c213:	setb   cl
  41c216:	cmp    r11,rsi
  41c219:	je     41c27d <isspace@plt+0x1896d>
  41c21b:	cmp    rdx,rbx
  41c21e:	jae    41c27d <isspace@plt+0x1896d>
  41c220:	mov    rax,QWORD PTR [r11+0x10]
  41c224:	add    rax,rdx
  41c227:	cmp    rax,rbx
  41c22a:	ja     41c27b <isspace@plt+0x1896b>
  41c22c:	inc    r10d
  41c22f:	mov    r11,QWORD PTR [r11+0x8]
  41c233:	mov    rdx,rax
  41c236:	test   r11,r11
  41c239:	jne    41c210 <isspace@plt+0x18900>
  41c23b:	mov    r11,QWORD PTR [rdi+0x90]
  41c242:	mov    r10d,DWORD PTR [rdi+0x4c]
  41c246:	dec    r10d
  41c249:	xor    eax,eax
  41c24b:	mov    QWORD PTR [r14+0x30],r11
  41c24f:	mov    DWORD PTR [r14+0x20],r10d
  41c253:	mov    DWORD PTR [r14+0x24],eax
  41c257:	call   419f00 <isspace@plt+0x165f0>
  41c25c:	mov    rax,QWORD PTR [r14+0x18]
  41c260:	mov    rcx,QWORD PTR fs:0x28
  41c269:	cmp    rcx,QWORD PTR [rsp+0x30]
  41c26e:	jne    41c2e9 <isspace@plt+0x189d9>
  41c270:	add    rsp,0x38
  41c274:	pop    rbx
  41c275:	pop    r14
  41c277:	pop    r15
  41c279:	pop    rbp
  41c27a:	ret    
  41c27b:	mov    cl,0x1
  41c27d:	mov    r8d,DWORD PTR [rdi+0x48]
  41c281:	mov    eax,DWORD PTR [r11+0x20]
  41c285:	cmp    r8d,eax
  41c288:	cmovg  r8d,eax
  41c28c:	xor    eax,eax
  41c28e:	test   cl,cl
  41c290:	je     41c24b <isspace@plt+0x1893b>
  41c292:	test   r8d,r8d
  41c295:	jle    41c24b <isspace@plt+0x1893b>
  41c297:	movsxd rbp,r8d
  41c29a:	lea    r9,[r11+0x68]
  41c29e:	xor    eax,eax
  41c2a0:	movsxd rsi,eax
  41c2a3:	mov    rax,rsi
  41c2a6:	shl    rax,0x4
  41c2aa:	lea    rcx,[rax+rax*2]
  41c2ae:	add    rdx,QWORD PTR [r11+rcx*1+0x38]
  41c2b3:	inc    rsi
  41c2b6:	add    rcx,r9
  41c2b9:	nop    DWORD PTR [rax+0x0]
  41c2c0:	mov    rax,rsi
  41c2c3:	cmp    rsi,rbp
  41c2c6:	jge    41c2d6 <isspace@plt+0x189c6>
  41c2c8:	lea    rsi,[rax+0x1]
  41c2cc:	cmp    QWORD PTR [rcx],0x0
  41c2d0:	lea    rcx,[rcx+0x30]
  41c2d4:	je     41c2c0 <isspace@plt+0x189b0>
  41c2d6:	cmp    rdx,rbx
  41c2d9:	jae    41c24b <isspace@plt+0x1893b>
  41c2df:	cmp    r8d,eax
  41c2e2:	jg     41c2a0 <isspace@plt+0x18990>
  41c2e4:	jmp    41c24b <isspace@plt+0x1893b>
  41c2e9:	call   403280 <__stack_chk_fail@plt>
  41c2ee:	xchg   ax,ax
  41c2f0:	push   rbp
  41c2f1:	push   r15
  41c2f3:	push   r14
  41c2f5:	push   rbx
  41c2f6:	sub    rsp,0x38
  41c2fa:	mov    r14,rdi
  41c2fd:	mov    rax,QWORD PTR fs:0x28
  41c306:	mov    QWORD PTR [rsp+0x30],rax
  41c30b:	mov    rcx,QWORD PTR [rdi+0x30]
  41c30f:	test   rcx,rcx
  41c312:	je     41c3a5 <isspace@plt+0x18a95>
  41c318:	mov    r15d,DWORD PTR [r14+0x28]
  41c31c:	test   r15d,r15d
  41c31f:	jne    41c325 <isspace@plt+0x18a15>
  41c321:	mov    r15d,DWORD PTR [r14+0x24]
  41c325:	mov    rax,QWORD PTR [rcx+0x8]
  41c329:	test   rax,rax
  41c32c:	je     41c3b2 <isspace@plt+0x18aa2>
  41c332:	mov    r8,QWORD PTR [r14+0x40]
  41c336:	mov    rbx,QWORD PTR [r8+0x50]
  41c33a:	mov    rcx,QWORD PTR [r8+0x80]
  41c341:	xor    edx,edx
  41c343:	test   rcx,rcx
  41c346:	je     41c364 <isspace@plt+0x18a54>
  41c348:	cmp    rcx,rax
  41c34b:	je     41c364 <isspace@plt+0x18a54>
  41c34d:	xor    edx,edx
  41c34f:	nop
  41c350:	add    rbx,QWORD PTR [rcx+0x10]
  41c354:	inc    edx
  41c356:	mov    rcx,QWORD PTR [rcx+0x8]
  41c35a:	test   rcx,rcx
  41c35d:	je     41c364 <isspace@plt+0x18a54>
  41c35f:	cmp    rcx,rax
  41c362:	jne    41c350 <isspace@plt+0x18a40>
  41c364:	test   r15d,r15d
  41c367:	jle    41c3e3 <isspace@plt+0x18ad3>
  41c369:	movsxd rsi,r15d
  41c36c:	lea    rcx,[rsi+rsi*2]
  41c370:	shl    rcx,0x4
  41c374:	add    rcx,rax
  41c377:	add    rcx,0x38
  41c37b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c380:	cmp    QWORD PTR [rcx],0x0
  41c384:	jne    41c38f <isspace@plt+0x18a7f>
  41c386:	add    rcx,0xffffffffffffffd0
  41c38a:	dec    rsi
  41c38d:	jg     41c380 <isspace@plt+0x18a70>
  41c38f:	test   esi,esi
  41c391:	jle    41c53c <isspace@plt+0x18c2c>
  41c397:	mov    edi,esi
  41c399:	cmp    esi,0x11
  41c39c:	jae    41c3eb <isspace@plt+0x18adb>
  41c39e:	xor    ecx,ecx
  41c3a0:	jmp    41c517 <isspace@plt+0x18c07>
  41c3a5:	mov    rdi,r14
  41c3a8:	call   41da20 <isspace@plt+0x1a110>
  41c3ad:	jmp    41c634 <isspace@plt+0x18d24>
  41c3b2:	mov    rdi,QWORD PTR [r14+0x40]
  41c3b6:	cmp    rcx,QWORD PTR [rdi+0x90]
  41c3bd:	jne    41c62c <isspace@plt+0x18d1c>
  41c3c3:	mov    esi,0x1
  41c3c8:	call   41d100 <isspace@plt+0x197f0>
  41c3cd:	mov    rax,QWORD PTR [r14+0x30]
  41c3d1:	mov    rax,QWORD PTR [rax+0x8]
  41c3d5:	test   rax,rax
  41c3d8:	jne    41c332 <isspace@plt+0x18a22>
  41c3de:	jmp    41c62c <isspace@plt+0x18d1c>
  41c3e3:	mov    esi,r15d
  41c3e6:	jmp    41c53c <isspace@plt+0x18c2c>
  41c3eb:	mov    ecx,edi
  41c3ed:	and    ecx,0xf
  41c3f0:	test   rcx,rcx
  41c3f3:	mov    ebp,0x10
  41c3f8:	cmovne rbp,rcx
  41c3fc:	mov    rcx,rdi
  41c3ff:	sub    rcx,rbp
  41c402:	vmovq  xmm0,rbx
  41c407:	vpxor  xmm1,xmm1,xmm1
  41c40b:	vmovdqa ymm2,YMMWORD PTR [rip+0x147ed]        # 430c00 <isspace@plt+0x2d2f0>
  41c413:	vpbroadcastq ymm3,QWORD PTR [rip+0x14804]        # 430c20 <isspace@plt+0x2d310>
  41c41c:	vpbroadcastq ymm4,QWORD PTR [rip+0x14803]        # 430c28 <isspace@plt+0x2d318>
  41c425:	vmovdqu YMMWORD PTR [rsp],ymm4
  41c42a:	vpbroadcastq ymm5,QWORD PTR [rip+0x147fd]        # 430c30 <isspace@plt+0x2d320>
  41c433:	vpbroadcastq ymm6,QWORD PTR [rip+0x147fc]        # 430c38 <isspace@plt+0x2d328>
  41c43c:	vpbroadcastq ymm7,QWORD PTR [rip+0x147fb]        # 430c40 <isspace@plt+0x2d330>
  41c445:	vpbroadcastq ymm8,QWORD PTR [rip+0x147fa]        # 430c48 <isspace@plt+0x2d338>
  41c44e:	mov    rbp,rcx
  41c451:	vpxor  xmm9,xmm9,xmm9
  41c456:	vpxor  xmm10,xmm10,xmm10
  41c45b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c460:	vpmuludq ymm11,ymm2,ymm3
  41c464:	vpsrlq ymm12,ymm2,0x20
  41c469:	vpmuludq ymm12,ymm12,ymm3
  41c46d:	vpsllq ymm12,ymm12,0x20
  41c473:	vmovq  xmm4,rax
  41c478:	vpbroadcastq ymm4,xmm4
  41c47d:	vpaddq ymm4,ymm11,ymm4
  41c481:	vpaddq ymm4,ymm12,ymm4
  41c485:	vpaddq ymm11,ymm4,YMMWORD PTR [rsp]
  41c48a:	vpaddq ymm12,ymm4,ymm6
  41c48e:	vpaddq ymm14,ymm4,ymm7
  41c492:	vpaddq ymm4,ymm4,ymm8
  41c497:	vpcmpeqd ymm15,ymm15,ymm15
  41c49c:	vpgatherqq ymm13,QWORD PTR [ymm11*1+0x0],ymm15
  41c4a6:	vpcmpeqd ymm11,ymm11,ymm11
  41c4ab:	vpgatherqq ymm15,QWORD PTR [ymm12*1+0x0],ymm11
  41c4b5:	vpcmpeqd ymm11,ymm11,ymm11
  41c4ba:	vpgatherqq ymm12,QWORD PTR [ymm14*1+0x0],ymm11
  41c4c4:	vpcmpeqd ymm11,ymm11,ymm11
  41c4c9:	vpgatherqq ymm14,QWORD PTR [ymm4*1+0x0],ymm11
  41c4d3:	vpaddq ymm0,ymm13,ymm0
  41c4d7:	vpaddq ymm1,ymm15,ymm1
  41c4db:	vpaddq ymm9,ymm12,ymm9
  41c4e0:	vpaddq ymm10,ymm14,ymm10
  41c4e5:	vpaddq ymm2,ymm2,ymm5
  41c4e9:	add    rbp,0xfffffffffffffff0
  41c4ed:	jne    41c460 <isspace@plt+0x18b50>
  41c4f3:	vpaddq ymm0,ymm1,ymm0
  41c4f7:	vpaddq ymm0,ymm9,ymm0
  41c4fb:	vpaddq ymm0,ymm10,ymm0
  41c4ff:	vextracti128 xmm1,ymm0,0x1
  41c505:	vpaddq xmm0,xmm0,xmm1
  41c509:	vpshufd xmm1,xmm0,0x4e
  41c50e:	vpaddq xmm0,xmm0,xmm1
  41c512:	vmovq  rbx,xmm0
  41c517:	sub    rdi,rcx
  41c51a:	lea    rcx,[rcx+rcx*2]
  41c51e:	shl    rcx,0x4
  41c522:	add    rcx,rax
  41c525:	add    rcx,0x38
  41c529:	nop    DWORD PTR [rax+0x0]
  41c530:	add    rbx,QWORD PTR [rcx]
  41c533:	add    rcx,0x30
  41c537:	dec    rdi
  41c53a:	jne    41c530 <isspace@plt+0x18c20>
  41c53c:	mov    DWORD PTR [r14+0x24],esi
  41c540:	mov    DWORD PTR [r14+0x20],edx
  41c544:	mov    QWORD PTR [r14+0x30],rax
  41c548:	mov    rdi,QWORD PTR [r8]
  41c54b:	mov    rsi,rbx
  41c54e:	vzeroupper 
  41c551:	call   410d60 <isspace@plt+0xd450>
  41c556:	mov    QWORD PTR [r14],rax
  41c559:	cmp    BYTE PTR [r14+0x10],0x0
  41c55e:	je     41c5b7 <isspace@plt+0x18ca7>
  41c560:	cmp    QWORD PTR [r14+0x18],rbx
  41c564:	je     41c56e <isspace@plt+0x18c5e>
  41c566:	mov    DWORD PTR [r14+0x28],0x0
  41c56e:	mov    QWORD PTR [r14+0x18],rbx
  41c572:	mov    rdi,QWORD PTR [r14+0x40]
  41c576:	mov    rdx,QWORD PTR [rdi+0x50]
  41c57a:	cmp    rdx,rbx
  41c57d:	ja     41c585 <isspace@plt+0x18c75>
  41c57f:	cmp    QWORD PTR [rdi+0x58],rbx
  41c583:	jae    41c5c3 <isspace@plt+0x18cb3>
  41c585:	mov    QWORD PTR [r14+0x30],0x0
  41c58d:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
  41c595:	cmp    QWORD PTR [rdi+0x98],r14
  41c59c:	jne    41c62c <isspace@plt+0x18d1c>
  41c5a2:	mov    rax,QWORD PTR [rdi+0x80]
  41c5a9:	mov    QWORD PTR [r14+0x30],rax
  41c5ad:	mov    QWORD PTR [r14+0x20],0x0
  41c5b5:	jmp    41c62c <isspace@plt+0x18d1c>
  41c5b7:	mov    QWORD PTR [r14+0x8],rax
  41c5bb:	cmp    QWORD PTR [r14+0x18],rbx
  41c5bf:	jne    41c566 <isspace@plt+0x18c56>
  41c5c1:	jmp    41c56e <isspace@plt+0x18c5e>
  41c5c3:	mov    r11,QWORD PTR [rdi+0x80]
  41c5ca:	test   r11,r11
  41c5cd:	je     41c60b <isspace@plt+0x18cfb>
  41c5cf:	mov    rsi,QWORD PTR [rdi+0x88]
  41c5d6:	xor    r10d,r10d
  41c5d9:	nop    DWORD PTR [rax+0x0]
  41c5e0:	cmp    rdx,rbx
  41c5e3:	setb   cl
  41c5e6:	cmp    r11,rsi
  41c5e9:	je     41c655 <isspace@plt+0x18d45>
  41c5eb:	cmp    rdx,rbx
  41c5ee:	jae    41c655 <isspace@plt+0x18d45>
  41c5f0:	mov    rax,QWORD PTR [r11+0x10]
  41c5f4:	add    rax,rdx
  41c5f7:	cmp    rax,rbx
  41c5fa:	ja     41c653 <isspace@plt+0x18d43>
  41c5fc:	inc    r10d
  41c5ff:	mov    r11,QWORD PTR [r11+0x8]
  41c603:	mov    rdx,rax
  41c606:	test   r11,r11
  41c609:	jne    41c5e0 <isspace@plt+0x18cd0>
  41c60b:	mov    r11,QWORD PTR [rdi+0x90]
  41c612:	mov    r10d,DWORD PTR [rdi+0x4c]
  41c616:	dec    r10d
  41c619:	xor    eax,eax
  41c61b:	mov    QWORD PTR [r14+0x30],r11
  41c61f:	mov    DWORD PTR [r14+0x20],r10d
  41c623:	mov    DWORD PTR [r14+0x24],eax
  41c627:	call   419f00 <isspace@plt+0x165f0>
  41c62c:	mov    DWORD PTR [r14+0x28],r15d
  41c630:	mov    rax,QWORD PTR [r14+0x18]
  41c634:	mov    rcx,QWORD PTR fs:0x28
  41c63d:	cmp    rcx,QWORD PTR [rsp+0x30]
  41c642:	jne    41c6c9 <isspace@plt+0x18db9>
  41c648:	add    rsp,0x38
  41c64c:	pop    rbx
  41c64d:	pop    r14
  41c64f:	pop    r15
  41c651:	pop    rbp
  41c652:	ret    
  41c653:	mov    cl,0x1
  41c655:	mov    r8d,DWORD PTR [rdi+0x48]
  41c659:	mov    eax,DWORD PTR [r11+0x20]
  41c65d:	cmp    r8d,eax
  41c660:	cmovg  r8d,eax
  41c664:	xor    eax,eax
  41c666:	test   cl,cl
  41c668:	je     41c61b <isspace@plt+0x18d0b>
  41c66a:	test   r8d,r8d
  41c66d:	jle    41c61b <isspace@plt+0x18d0b>
  41c66f:	movsxd rbp,r8d
  41c672:	lea    r9,[r11+0x68]
  41c676:	xor    eax,eax
  41c678:	nop    DWORD PTR [rax+rax*1+0x0]
  41c680:	movsxd rsi,eax
  41c683:	mov    rax,rsi
  41c686:	shl    rax,0x4
  41c68a:	lea    rcx,[rax+rax*2]
  41c68e:	add    rdx,QWORD PTR [r11+rcx*1+0x38]
  41c693:	inc    rsi
  41c696:	add    rcx,r9
  41c699:	nop    DWORD PTR [rax+0x0]
  41c6a0:	mov    rax,rsi
  41c6a3:	cmp    rsi,rbp
  41c6a6:	jge    41c6b6 <isspace@plt+0x18da6>
  41c6a8:	lea    rsi,[rax+0x1]
  41c6ac:	cmp    QWORD PTR [rcx],0x0
  41c6b0:	lea    rcx,[rcx+0x30]
  41c6b4:	je     41c6a0 <isspace@plt+0x18d90>
  41c6b6:	cmp    rdx,rbx
  41c6b9:	jae    41c61b <isspace@plt+0x18d0b>
  41c6bf:	cmp    r8d,eax
  41c6c2:	jg     41c680 <isspace@plt+0x18d70>
  41c6c4:	jmp    41c61b <isspace@plt+0x18d0b>
  41c6c9:	call   403280 <__stack_chk_fail@plt>
  41c6ce:	xchg   ax,ax
  41c6d0:	push   rbp
  41c6d1:	push   r15
  41c6d3:	push   r14
  41c6d5:	push   rbx
  41c6d6:	sub    rsp,0x38
  41c6da:	mov    r14,rdi
  41c6dd:	mov    rax,QWORD PTR fs:0x28
  41c6e6:	mov    QWORD PTR [rsp+0x30],rax
  41c6eb:	mov    rax,QWORD PTR [rdi+0x30]
  41c6ef:	test   rax,rax
  41c6f2:	je     41c7a5 <isspace@plt+0x18e95>
  41c6f8:	mov    r15d,DWORD PTR [r14+0x28]
  41c6fc:	test   r15d,r15d
  41c6ff:	jne    41c705 <isspace@plt+0x18df5>
  41c701:	mov    r15d,DWORD PTR [r14+0x24]
  41c705:	mov    rax,QWORD PTR [rax]
  41c708:	test   rax,rax
  41c70b:	jne    41c72b <isspace@plt+0x18e1b>
  41c70d:	mov    rdi,QWORD PTR [r14+0x40]
  41c711:	mov    esi,0x1
  41c716:	call   41caa0 <isspace@plt+0x19190>
  41c71b:	mov    rax,QWORD PTR [r14+0x30]
  41c71f:	mov    rax,QWORD PTR [rax]
  41c722:	test   rax,rax
  41c725:	je     41c9fc <isspace@plt+0x190ec>
  41c72b:	mov    r8,QWORD PTR [r14+0x40]
  41c72f:	mov    rbx,QWORD PTR [r8+0x50]
  41c733:	mov    rcx,QWORD PTR [r8+0x80]
  41c73a:	xor    edx,edx
  41c73c:	test   rcx,rcx
  41c73f:	je     41c764 <isspace@plt+0x18e54>
  41c741:	cmp    rcx,rax
  41c744:	je     41c764 <isspace@plt+0x18e54>
  41c746:	xor    edx,edx
  41c748:	nop    DWORD PTR [rax+rax*1+0x0]
  41c750:	add    rbx,QWORD PTR [rcx+0x10]
  41c754:	inc    edx
  41c756:	mov    rcx,QWORD PTR [rcx+0x8]
  41c75a:	test   rcx,rcx
  41c75d:	je     41c764 <isspace@plt+0x18e54>
  41c75f:	cmp    rcx,rax
  41c762:	jne    41c750 <isspace@plt+0x18e40>
  41c764:	test   r15d,r15d
  41c767:	jle    41c7b2 <isspace@plt+0x18ea2>
  41c769:	movsxd rsi,r15d
  41c76c:	lea    rcx,[rsi+rsi*2]
  41c770:	shl    rcx,0x4
  41c774:	add    rcx,rax
  41c777:	add    rcx,0x38
  41c77b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c780:	cmp    QWORD PTR [rcx],0x0
  41c784:	jne    41c78f <isspace@plt+0x18e7f>
  41c786:	add    rcx,0xffffffffffffffd0
  41c78a:	dec    rsi
  41c78d:	jg     41c780 <isspace@plt+0x18e70>
  41c78f:	test   esi,esi
  41c791:	jle    41c90c <isspace@plt+0x18ffc>
  41c797:	mov    edi,esi
  41c799:	cmp    esi,0x11
  41c79c:	jae    41c7ba <isspace@plt+0x18eaa>
  41c79e:	xor    ecx,ecx
  41c7a0:	jmp    41c8e7 <isspace@plt+0x18fd7>
  41c7a5:	mov    rdi,r14
  41c7a8:	call   41d5f0 <isspace@plt+0x19ce0>
  41c7ad:	jmp    41ca04 <isspace@plt+0x190f4>
  41c7b2:	mov    esi,r15d
  41c7b5:	jmp    41c90c <isspace@plt+0x18ffc>
  41c7ba:	mov    ecx,edi
  41c7bc:	and    ecx,0xf
  41c7bf:	test   rcx,rcx
  41c7c2:	mov    ebp,0x10
  41c7c7:	cmovne rbp,rcx
  41c7cb:	mov    rcx,rdi
  41c7ce:	sub    rcx,rbp
  41c7d1:	vmovq  xmm0,rbx
  41c7d6:	vpxor  xmm1,xmm1,xmm1
  41c7da:	vmovdqa ymm2,YMMWORD PTR [rip+0x1441e]        # 430c00 <isspace@plt+0x2d2f0>
  41c7e2:	vpbroadcastq ymm3,QWORD PTR [rip+0x14435]        # 430c20 <isspace@plt+0x2d310>
  41c7eb:	vpbroadcastq ymm4,QWORD PTR [rip+0x14434]        # 430c28 <isspace@plt+0x2d318>
  41c7f4:	vmovdqu YMMWORD PTR [rsp],ymm4
  41c7f9:	vpbroadcastq ymm5,QWORD PTR [rip+0x1442e]        # 430c30 <isspace@plt+0x2d320>
  41c802:	vpbroadcastq ymm6,QWORD PTR [rip+0x1442d]        # 430c38 <isspace@plt+0x2d328>
  41c80b:	vpbroadcastq ymm7,QWORD PTR [rip+0x1442c]        # 430c40 <isspace@plt+0x2d330>
  41c814:	vpbroadcastq ymm8,QWORD PTR [rip+0x1442b]        # 430c48 <isspace@plt+0x2d338>
  41c81d:	mov    rbp,rcx
  41c820:	vpxor  xmm9,xmm9,xmm9
  41c825:	vpxor  xmm10,xmm10,xmm10
  41c82a:	nop    WORD PTR [rax+rax*1+0x0]
  41c830:	vpmuludq ymm11,ymm2,ymm3
  41c834:	vpsrlq ymm12,ymm2,0x20
  41c839:	vpmuludq ymm12,ymm12,ymm3
  41c83d:	vpsllq ymm12,ymm12,0x20
  41c843:	vmovq  xmm4,rax
  41c848:	vpbroadcastq ymm4,xmm4
  41c84d:	vpaddq ymm4,ymm11,ymm4
  41c851:	vpaddq ymm4,ymm12,ymm4
  41c855:	vpaddq ymm11,ymm4,YMMWORD PTR [rsp]
  41c85a:	vpaddq ymm12,ymm4,ymm6
  41c85e:	vpaddq ymm14,ymm4,ymm7
  41c862:	vpaddq ymm4,ymm4,ymm8
  41c867:	vpcmpeqd ymm15,ymm15,ymm15
  41c86c:	vpgatherqq ymm13,QWORD PTR [ymm11*1+0x0],ymm15
  41c876:	vpcmpeqd ymm11,ymm11,ymm11
  41c87b:	vpgatherqq ymm15,QWORD PTR [ymm12*1+0x0],ymm11
  41c885:	vpcmpeqd ymm11,ymm11,ymm11
  41c88a:	vpgatherqq ymm12,QWORD PTR [ymm14*1+0x0],ymm11
  41c894:	vpcmpeqd ymm11,ymm11,ymm11
  41c899:	vpgatherqq ymm14,QWORD PTR [ymm4*1+0x0],ymm11
  41c8a3:	vpaddq ymm0,ymm13,ymm0
  41c8a7:	vpaddq ymm1,ymm15,ymm1
  41c8ab:	vpaddq ymm9,ymm12,ymm9
  41c8b0:	vpaddq ymm10,ymm14,ymm10
  41c8b5:	vpaddq ymm2,ymm2,ymm5
  41c8b9:	add    rbp,0xfffffffffffffff0
  41c8bd:	jne    41c830 <isspace@plt+0x18f20>
  41c8c3:	vpaddq ymm0,ymm1,ymm0
  41c8c7:	vpaddq ymm0,ymm9,ymm0
  41c8cb:	vpaddq ymm0,ymm10,ymm0
  41c8cf:	vextracti128 xmm1,ymm0,0x1
  41c8d5:	vpaddq xmm0,xmm0,xmm1
  41c8d9:	vpshufd xmm1,xmm0,0x4e
  41c8de:	vpaddq xmm0,xmm0,xmm1
  41c8e2:	vmovq  rbx,xmm0
  41c8e7:	sub    rdi,rcx
  41c8ea:	lea    rcx,[rcx+rcx*2]
  41c8ee:	shl    rcx,0x4
  41c8f2:	add    rcx,rax
  41c8f5:	add    rcx,0x38
  41c8f9:	nop    DWORD PTR [rax+0x0]
  41c900:	add    rbx,QWORD PTR [rcx]
  41c903:	add    rcx,0x30
  41c907:	dec    rdi
  41c90a:	jne    41c900 <isspace@plt+0x18ff0>
  41c90c:	mov    DWORD PTR [r14+0x24],esi
  41c910:	mov    DWORD PTR [r14+0x20],edx
  41c914:	mov    QWORD PTR [r14+0x30],rax
  41c918:	mov    rdi,QWORD PTR [r8]
  41c91b:	mov    rsi,rbx
  41c91e:	vzeroupper 
  41c921:	call   410d60 <isspace@plt+0xd450>
  41c926:	mov    QWORD PTR [r14],rax
  41c929:	cmp    BYTE PTR [r14+0x10],0x0
  41c92e:	je     41c987 <isspace@plt+0x19077>
  41c930:	cmp    QWORD PTR [r14+0x18],rbx
  41c934:	je     41c93e <isspace@plt+0x1902e>
  41c936:	mov    DWORD PTR [r14+0x28],0x0
  41c93e:	mov    QWORD PTR [r14+0x18],rbx
  41c942:	mov    rdi,QWORD PTR [r14+0x40]
  41c946:	mov    rdx,QWORD PTR [rdi+0x50]
  41c94a:	cmp    rdx,rbx
  41c94d:	ja     41c955 <isspace@plt+0x19045>
  41c94f:	cmp    QWORD PTR [rdi+0x58],rbx
  41c953:	jae    41c993 <isspace@plt+0x19083>
  41c955:	mov    QWORD PTR [r14+0x30],0x0
  41c95d:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
  41c965:	cmp    QWORD PTR [rdi+0x98],r14
  41c96c:	jne    41c9fc <isspace@plt+0x190ec>
  41c972:	mov    rax,QWORD PTR [rdi+0x80]
  41c979:	mov    QWORD PTR [r14+0x30],rax
  41c97d:	mov    QWORD PTR [r14+0x20],0x0
  41c985:	jmp    41c9fc <isspace@plt+0x190ec>
  41c987:	mov    QWORD PTR [r14+0x8],rax
  41c98b:	cmp    QWORD PTR [r14+0x18],rbx
  41c98f:	jne    41c936 <isspace@plt+0x19026>
  41c991:	jmp    41c93e <isspace@plt+0x1902e>
  41c993:	mov    r11,QWORD PTR [rdi+0x80]
  41c99a:	test   r11,r11
  41c99d:	je     41c9db <isspace@plt+0x190cb>
  41c99f:	mov    rsi,QWORD PTR [rdi+0x88]
  41c9a6:	xor    r10d,r10d
  41c9a9:	nop    DWORD PTR [rax+0x0]
  41c9b0:	cmp    rdx,rbx
  41c9b3:	setb   cl
  41c9b6:	cmp    r11,rsi
  41c9b9:	je     41ca25 <isspace@plt+0x19115>
  41c9bb:	cmp    rdx,rbx
  41c9be:	jae    41ca25 <isspace@plt+0x19115>
  41c9c0:	mov    rax,QWORD PTR [r11+0x10]
  41c9c4:	add    rax,rdx
  41c9c7:	cmp    rax,rbx
  41c9ca:	ja     41ca23 <isspace@plt+0x19113>
  41c9cc:	inc    r10d
  41c9cf:	mov    r11,QWORD PTR [r11+0x8]
  41c9d3:	mov    rdx,rax
  41c9d6:	test   r11,r11
  41c9d9:	jne    41c9b0 <isspace@plt+0x190a0>
  41c9db:	mov    r11,QWORD PTR [rdi+0x90]
  41c9e2:	mov    r10d,DWORD PTR [rdi+0x4c]
  41c9e6:	dec    r10d
  41c9e9:	xor    eax,eax
  41c9eb:	mov    QWORD PTR [r14+0x30],r11
  41c9ef:	mov    DWORD PTR [r14+0x20],r10d
  41c9f3:	mov    DWORD PTR [r14+0x24],eax
  41c9f7:	call   419f00 <isspace@plt+0x165f0>
  41c9fc:	mov    DWORD PTR [r14+0x28],r15d
  41ca00:	mov    rax,QWORD PTR [r14+0x18]
  41ca04:	mov    rcx,QWORD PTR fs:0x28
  41ca0d:	cmp    rcx,QWORD PTR [rsp+0x30]
  41ca12:	jne    41ca99 <isspace@plt+0x19189>
  41ca18:	add    rsp,0x38
  41ca1c:	pop    rbx
  41ca1d:	pop    r14
  41ca1f:	pop    r15
  41ca21:	pop    rbp
  41ca22:	ret    
  41ca23:	mov    cl,0x1
  41ca25:	mov    r8d,DWORD PTR [rdi+0x48]
  41ca29:	mov    eax,DWORD PTR [r11+0x20]
  41ca2d:	cmp    r8d,eax
  41ca30:	cmovg  r8d,eax
  41ca34:	xor    eax,eax
  41ca36:	test   cl,cl
  41ca38:	je     41c9eb <isspace@plt+0x190db>
  41ca3a:	test   r8d,r8d
  41ca3d:	jle    41c9eb <isspace@plt+0x190db>
  41ca3f:	movsxd rbp,r8d
  41ca42:	lea    r9,[r11+0x68]
  41ca46:	xor    eax,eax
  41ca48:	nop    DWORD PTR [rax+rax*1+0x0]
  41ca50:	movsxd rsi,eax
  41ca53:	mov    rax,rsi
  41ca56:	shl    rax,0x4
  41ca5a:	lea    rcx,[rax+rax*2]
  41ca5e:	add    rdx,QWORD PTR [r11+rcx*1+0x38]
  41ca63:	inc    rsi
  41ca66:	add    rcx,r9
  41ca69:	nop    DWORD PTR [rax+0x0]
  41ca70:	mov    rax,rsi
  41ca73:	cmp    rsi,rbp
  41ca76:	jge    41ca86 <isspace@plt+0x19176>
  41ca78:	lea    rsi,[rax+0x1]
  41ca7c:	cmp    QWORD PTR [rcx],0x0
  41ca80:	lea    rcx,[rcx+0x30]
  41ca84:	je     41ca70 <isspace@plt+0x19160>
  41ca86:	cmp    rdx,rbx
  41ca89:	jae    41c9eb <isspace@plt+0x190db>
  41ca8f:	cmp    r8d,eax
  41ca92:	jg     41ca50 <isspace@plt+0x19140>
  41ca94:	jmp    41c9eb <isspace@plt+0x190db>
  41ca99:	call   403280 <__stack_chk_fail@plt>
  41ca9e:	xchg   ax,ax
  41caa0:	push   r15
  41caa2:	push   r14
  41caa4:	push   rbx
  41caa5:	sub    rsp,0x40
  41caa9:	mov    rbx,rdi
  41caac:	mov    rax,QWORD PTR fs:0x28
  41cab5:	mov    QWORD PTR [rsp+0x38],rax
  41caba:	mov    r14,QWORD PTR [rdi+0x98]
  41cac1:	call   41be10 <isspace@plt+0x18500>
  41cac6:	test   al,al
  41cac8:	je     41cb66 <isspace@plt+0x19256>
  41cace:	mov    rax,QWORD PTR [rbx+0x88]
  41cad5:	mov    rcx,QWORD PTR [rbx+0x98]
  41cadc:	mov    rdx,QWORD PTR [r14+0x30]
  41cae0:	mov    r8,QWORD PTR [r14+0x40]
  41cae4:	cmp    rdx,rax
  41cae7:	cmovb  rax,rdx
  41caeb:	mov    edx,DWORD PTR [rcx+0x24]
  41caee:	mov    rbx,QWORD PTR [r8+0x50]
  41caf2:	mov    rcx,QWORD PTR [r8+0x80]
  41caf9:	xor    esi,esi
  41cafb:	test   rcx,rcx
  41cafe:	je     41cb24 <isspace@plt+0x19214>
  41cb00:	cmp    rcx,rax
  41cb03:	je     41cb24 <isspace@plt+0x19214>
  41cb05:	xor    esi,esi
  41cb07:	nop    WORD PTR [rax+rax*1+0x0]
  41cb10:	add    rbx,QWORD PTR [rcx+0x10]
  41cb14:	inc    esi
  41cb16:	mov    rcx,QWORD PTR [rcx+0x8]
  41cb1a:	test   rcx,rcx
  41cb1d:	je     41cb24 <isspace@plt+0x19214>
  41cb1f:	cmp    rcx,rax
  41cb22:	jne    41cb10 <isspace@plt+0x19200>
  41cb24:	test   edx,edx
  41cb26:	jle    41cccc <isspace@plt+0x193bc>
  41cb2c:	movsxd rdx,edx
  41cb2f:	lea    rcx,[rdx+rdx*2]
  41cb33:	shl    rcx,0x4
  41cb37:	add    rcx,rax
  41cb3a:	add    rcx,0x38
  41cb3e:	xchg   ax,ax
  41cb40:	cmp    QWORD PTR [rcx],0x0
  41cb44:	jne    41cb4f <isspace@plt+0x1923f>
  41cb46:	add    rcx,0xffffffffffffffd0
  41cb4a:	dec    rdx
  41cb4d:	jg     41cb40 <isspace@plt+0x19230>
  41cb4f:	test   edx,edx
  41cb51:	jle    41cccc <isspace@plt+0x193bc>
  41cb57:	mov    edi,edx
  41cb59:	cmp    edx,0x11
  41cb5c:	jae    41cb79 <isspace@plt+0x19269>
  41cb5e:	xor    r9d,r9d
  41cb61:	jmp    41cca7 <isspace@plt+0x19397>
  41cb66:	mov    rdi,QWORD PTR [rbx+0x98]
  41cb6d:	xor    esi,esi
  41cb6f:	call   41a7c0 <isspace@plt+0x16eb0>
  41cb74:	jmp    41cdbc <isspace@plt+0x194ac>
  41cb79:	mov    ecx,edi
  41cb7b:	and    ecx,0xf
  41cb7e:	test   rcx,rcx
  41cb81:	mov    r10d,0x10
  41cb87:	cmovne r10,rcx
  41cb8b:	mov    r9,rdi
  41cb8e:	sub    r9,r10
  41cb91:	vmovq  xmm0,rbx
  41cb96:	vpxor  xmm1,xmm1,xmm1
  41cb9a:	vmovdqa ymm2,YMMWORD PTR [rip+0x1405e]        # 430c00 <isspace@plt+0x2d2f0>
  41cba2:	vpbroadcastq ymm3,QWORD PTR [rip+0x14075]        # 430c20 <isspace@plt+0x2d310>
  41cbab:	vpbroadcastq ymm4,QWORD PTR [rip+0x14074]        # 430c28 <isspace@plt+0x2d318>
  41cbb4:	vmovdqu YMMWORD PTR [rsp],ymm4
  41cbb9:	vpbroadcastq ymm5,QWORD PTR [rip+0x1406e]        # 430c30 <isspace@plt+0x2d320>
  41cbc2:	vpbroadcastq ymm6,QWORD PTR [rip+0x1406d]        # 430c38 <isspace@plt+0x2d328>
  41cbcb:	vpbroadcastq ymm7,QWORD PTR [rip+0x1406c]        # 430c40 <isspace@plt+0x2d330>
  41cbd4:	vpbroadcastq ymm8,QWORD PTR [rip+0x1406b]        # 430c48 <isspace@plt+0x2d338>
  41cbdd:	mov    rcx,r9
  41cbe0:	vpxor  xmm9,xmm9,xmm9
  41cbe5:	vpxor  xmm10,xmm10,xmm10
  41cbea:	nop    WORD PTR [rax+rax*1+0x0]
  41cbf0:	vpmuludq ymm11,ymm2,ymm3
  41cbf4:	vpsrlq ymm12,ymm2,0x20
  41cbf9:	vpmuludq ymm12,ymm12,ymm3
  41cbfd:	vpsllq ymm12,ymm12,0x20
  41cc03:	vmovq  xmm4,rax
  41cc08:	vpbroadcastq ymm4,xmm4
  41cc0d:	vpaddq ymm4,ymm11,ymm4
  41cc11:	vpaddq ymm4,ymm12,ymm4
  41cc15:	vpaddq ymm11,ymm4,YMMWORD PTR [rsp]
  41cc1a:	vpaddq ymm12,ymm4,ymm6
  41cc1e:	vpaddq ymm14,ymm4,ymm7
  41cc22:	vpaddq ymm4,ymm4,ymm8
  41cc27:	vpcmpeqd ymm15,ymm15,ymm15
  41cc2c:	vpgatherqq ymm13,QWORD PTR [ymm11*1+0x0],ymm15
  41cc36:	vpcmpeqd ymm11,ymm11,ymm11
  41cc3b:	vpgatherqq ymm15,QWORD PTR [ymm12*1+0x0],ymm11
  41cc45:	vpcmpeqd ymm11,ymm11,ymm11
  41cc4a:	vpgatherqq ymm12,QWORD PTR [ymm14*1+0x0],ymm11
  41cc54:	vpcmpeqd ymm11,ymm11,ymm11
  41cc59:	vpgatherqq ymm14,QWORD PTR [ymm4*1+0x0],ymm11
  41cc63:	vpaddq ymm0,ymm13,ymm0
  41cc67:	vpaddq ymm1,ymm15,ymm1
  41cc6b:	vpaddq ymm9,ymm12,ymm9
  41cc70:	vpaddq ymm10,ymm14,ymm10
  41cc75:	vpaddq ymm2,ymm2,ymm5
  41cc79:	add    rcx,0xfffffffffffffff0
  41cc7d:	jne    41cbf0 <isspace@plt+0x192e0>
  41cc83:	vpaddq ymm0,ymm1,ymm0
  41cc87:	vpaddq ymm0,ymm9,ymm0
  41cc8b:	vpaddq ymm0,ymm10,ymm0
  41cc8f:	vextracti128 xmm1,ymm0,0x1
  41cc95:	vpaddq xmm0,xmm0,xmm1
  41cc99:	vpshufd xmm1,xmm0,0x4e
  41cc9e:	vpaddq xmm0,xmm0,xmm1
  41cca2:	vmovq  rbx,xmm0
  41cca7:	sub    rdi,r9
  41ccaa:	lea    rcx,[r9+r9*2]
  41ccae:	shl    rcx,0x4
  41ccb2:	add    rcx,rax
  41ccb5:	add    rcx,0x38
  41ccb9:	nop    DWORD PTR [rax+0x0]
  41ccc0:	add    rbx,QWORD PTR [rcx]
  41ccc3:	add    rcx,0x30
  41ccc7:	dec    rdi
  41ccca:	jne    41ccc0 <isspace@plt+0x193b0>
  41cccc:	mov    DWORD PTR [r14+0x24],edx
  41ccd0:	mov    DWORD PTR [r14+0x20],esi
  41ccd4:	mov    QWORD PTR [r14+0x30],rax
  41ccd8:	mov    rdi,QWORD PTR [r8]
  41ccdb:	mov    rsi,rbx
  41ccde:	vzeroupper 
  41cce1:	call   410d60 <isspace@plt+0xd450>
  41cce6:	mov    QWORD PTR [r14],rax
  41cce9:	cmp    BYTE PTR [r14+0x10],0x0
  41ccee:	je     41cd47 <isspace@plt+0x19437>
  41ccf0:	cmp    QWORD PTR [r14+0x18],rbx
  41ccf4:	je     41ccfe <isspace@plt+0x193ee>
  41ccf6:	mov    DWORD PTR [r14+0x28],0x0
  41ccfe:	mov    QWORD PTR [r14+0x18],rbx
  41cd02:	mov    rdi,QWORD PTR [r14+0x40]
  41cd06:	mov    r15,QWORD PTR [rdi+0x50]
  41cd0a:	cmp    r15,rbx
  41cd0d:	ja     41cd15 <isspace@plt+0x19405>
  41cd0f:	cmp    QWORD PTR [rdi+0x58],rbx
  41cd13:	jae    41cd53 <isspace@plt+0x19443>
  41cd15:	mov    QWORD PTR [r14+0x30],0x0
  41cd1d:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
  41cd25:	cmp    QWORD PTR [rdi+0x98],r14
  41cd2c:	jne    41cdbc <isspace@plt+0x194ac>
  41cd32:	mov    rax,QWORD PTR [rdi+0x80]
  41cd39:	mov    QWORD PTR [r14+0x30],rax
  41cd3d:	mov    QWORD PTR [r14+0x20],0x0
  41cd45:	jmp    41cdbc <isspace@plt+0x194ac>
  41cd47:	mov    QWORD PTR [r14+0x8],rax
  41cd4b:	cmp    QWORD PTR [r14+0x18],rbx
  41cd4f:	jne    41ccf6 <isspace@plt+0x193e6>
  41cd51:	jmp    41ccfe <isspace@plt+0x193ee>
  41cd53:	mov    r11,QWORD PTR [rdi+0x80]
  41cd5a:	test   r11,r11
  41cd5d:	je     41cd9b <isspace@plt+0x1948b>
  41cd5f:	mov    rcx,QWORD PTR [rdi+0x88]
  41cd66:	xor    r9d,r9d
  41cd69:	nop    DWORD PTR [rax+0x0]
  41cd70:	cmp    r15,rbx
  41cd73:	setb   al
  41cd76:	cmp    r11,rcx
  41cd79:	je     41cddc <isspace@plt+0x194cc>
  41cd7b:	cmp    r15,rbx
  41cd7e:	jae    41cddc <isspace@plt+0x194cc>
  41cd80:	mov    rax,QWORD PTR [r11+0x10]
  41cd84:	add    rax,r15
  41cd87:	cmp    rax,rbx
  41cd8a:	ja     41cdda <isspace@plt+0x194ca>
  41cd8c:	inc    r9d
  41cd8f:	mov    r11,QWORD PTR [r11+0x8]
  41cd93:	mov    r15,rax
  41cd96:	test   r11,r11
  41cd99:	jne    41cd70 <isspace@plt+0x19460>
  41cd9b:	mov    r11,QWORD PTR [rdi+0x90]
  41cda2:	mov    r9d,DWORD PTR [rdi+0x4c]
  41cda6:	dec    r9d
  41cda9:	xor    edx,edx
  41cdab:	mov    QWORD PTR [r14+0x30],r11
  41cdaf:	mov    DWORD PTR [r14+0x20],r9d
  41cdb3:	mov    DWORD PTR [r14+0x24],edx
  41cdb7:	call   419f00 <isspace@plt+0x165f0>
  41cdbc:	mov    rax,QWORD PTR [r14+0x18]
  41cdc0:	mov    rcx,QWORD PTR fs:0x28
  41cdc9:	cmp    rcx,QWORD PTR [rsp+0x38]
  41cdce:	jne    41ce49 <isspace@plt+0x19539>
  41cdd0:	add    rsp,0x40
  41cdd4:	pop    rbx
  41cdd5:	pop    r14
  41cdd7:	pop    r15
  41cdd9:	ret    
  41cdda:	mov    al,0x1
  41cddc:	mov    r8d,DWORD PTR [rdi+0x48]
  41cde0:	mov    ecx,DWORD PTR [r11+0x20]
  41cde4:	cmp    r8d,ecx
  41cde7:	cmovg  r8d,ecx
  41cdeb:	xor    edx,edx
  41cded:	test   al,al
  41cdef:	je     41cdab <isspace@plt+0x1949b>
  41cdf1:	test   r8d,r8d
  41cdf4:	jle    41cdab <isspace@plt+0x1949b>
  41cdf6:	movsxd rcx,r8d
  41cdf9:	lea    r10,[r11+0x68]
  41cdfd:	xor    edx,edx
  41cdff:	nop
  41ce00:	movsxd rsi,edx
  41ce03:	mov    rax,rsi
  41ce06:	shl    rax,0x4
  41ce0a:	lea    rax,[rax+rax*2]
  41ce0e:	add    r15,QWORD PTR [r11+rax*1+0x38]
  41ce13:	inc    rsi
  41ce16:	add    rax,r10
  41ce19:	nop    DWORD PTR [rax+0x0]
  41ce20:	mov    rdx,rsi
  41ce23:	cmp    rsi,rcx
  41ce26:	jge    41ce36 <isspace@plt+0x19526>
  41ce28:	lea    rsi,[rdx+0x1]
  41ce2c:	cmp    QWORD PTR [rax],0x0
  41ce30:	lea    rax,[rax+0x30]
  41ce34:	je     41ce20 <isspace@plt+0x19510>
  41ce36:	cmp    r15,rbx
  41ce39:	jae    41cdab <isspace@plt+0x1949b>
  41ce3f:	cmp    r8d,edx
  41ce42:	jg     41ce00 <isspace@plt+0x194f0>
  41ce44:	jmp    41cdab <isspace@plt+0x1949b>
  41ce49:	call   403280 <__stack_chk_fail@plt>
  41ce4e:	xchg   ax,ax
  41ce50:	push   r14
  41ce52:	push   rbx
  41ce53:	push   rax
  41ce54:	mov    rax,QWORD PTR fs:0x28
  41ce5d:	mov    QWORD PTR [rsp],rax
  41ce61:	mov    rsi,QWORD PTR [rdi+0x50]
  41ce65:	mov    r14,QWORD PTR [rdi+0x98]
  41ce6c:	test   rsi,rsi
  41ce6f:	je     41ce91 <isspace@plt+0x19581>
  41ce71:	mov    rbx,rdi
  41ce74:	dec    rsi
  41ce77:	mov    rdi,r14
  41ce7a:	call   41a7c0 <isspace@plt+0x16eb0>
  41ce7f:	mov    rdi,rbx
  41ce82:	call   41bc20 <isspace@plt+0x18310>
  41ce87:	mov    rdi,r14
  41ce8a:	call   41cec0 <isspace@plt+0x195b0>
  41ce8f:	jmp    41ce9b <isspace@plt+0x1958b>
  41ce91:	mov    rdi,r14
  41ce94:	xor    esi,esi
  41ce96:	call   41a7c0 <isspace@plt+0x16eb0>
  41ce9b:	mov    rax,QWORD PTR [r14+0x18]
  41ce9f:	mov    rcx,QWORD PTR fs:0x28
  41cea8:	cmp    rcx,QWORD PTR [rsp]
  41ceac:	jne    41ceb6 <isspace@plt+0x195a6>
  41ceae:	add    rsp,0x8
  41ceb2:	pop    rbx
  41ceb3:	pop    r14
  41ceb5:	ret    
  41ceb6:	call   403280 <__stack_chk_fail@plt>
  41cebb:	nop    DWORD PTR [rax+rax*1+0x0]
  41cec0:	push   r15
  41cec2:	push   r14
  41cec4:	push   rbx
  41cec5:	sub    rsp,0x10
  41cec9:	mov    r14,rdi
  41cecc:	mov    rax,QWORD PTR fs:0x28
  41ced5:	mov    QWORD PTR [rsp+0x8],rax
  41ceda:	mov    rdx,QWORD PTR [rdi+0x30]
  41cede:	test   rdx,rdx
  41cee1:	je     41cf9f <isspace@plt+0x1968f>
  41cee7:	mov    rax,QWORD PTR [r14+0x40]
  41ceeb:	mov    rbx,QWORD PTR [rax+0x50]
  41ceef:	mov    rsi,QWORD PTR [rax+0x80]
  41cef6:	xor    ecx,ecx
  41cef8:	test   rsi,rsi
  41cefb:	je     41cf24 <isspace@plt+0x19614>
  41cefd:	cmp    rsi,rdx
  41cf00:	je     41cf24 <isspace@plt+0x19614>
  41cf02:	xor    ecx,ecx
  41cf04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cf0e:	xchg   ax,ax
  41cf10:	add    rbx,QWORD PTR [rsi+0x10]
  41cf14:	inc    ecx
  41cf16:	mov    rsi,QWORD PTR [rsi+0x8]
  41cf1a:	test   rsi,rsi
  41cf1d:	je     41cf24 <isspace@plt+0x19614>
  41cf1f:	cmp    rsi,rdx
  41cf22:	jne    41cf10 <isspace@plt+0x19600>
  41cf24:	mov    DWORD PTR [r14+0x24],0x0
  41cf2c:	mov    DWORD PTR [r14+0x20],ecx
  41cf30:	mov    rdi,QWORD PTR [rax]
  41cf33:	mov    rsi,rbx
  41cf36:	call   410d60 <isspace@plt+0xd450>
  41cf3b:	mov    QWORD PTR [r14],rax
  41cf3e:	cmp    BYTE PTR [r14+0x10],0x0
  41cf43:	je     41cfa5 <isspace@plt+0x19695>
  41cf45:	cmp    QWORD PTR [r14+0x18],rbx
  41cf49:	je     41cf53 <isspace@plt+0x19643>
  41cf4b:	mov    DWORD PTR [r14+0x28],0x0
  41cf53:	mov    QWORD PTR [r14+0x18],rbx
  41cf57:	mov    rdi,QWORD PTR [r14+0x40]
  41cf5b:	mov    r15,QWORD PTR [rdi+0x50]
  41cf5f:	cmp    r15,rbx
  41cf62:	ja     41cf6a <isspace@plt+0x1965a>
  41cf64:	cmp    QWORD PTR [rdi+0x58],rbx
  41cf68:	jae    41cfb1 <isspace@plt+0x196a1>
  41cf6a:	mov    QWORD PTR [r14+0x30],0x0
  41cf72:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
  41cf7a:	cmp    QWORD PTR [rdi+0x98],r14
  41cf81:	jne    41d01c <isspace@plt+0x1970c>
  41cf87:	mov    rax,QWORD PTR [rdi+0x80]
  41cf8e:	mov    QWORD PTR [r14+0x30],rax
  41cf92:	mov    QWORD PTR [r14+0x20],0x0
  41cf9a:	jmp    41d01c <isspace@plt+0x1970c>
  41cf9f:	mov    rbx,QWORD PTR [r14+0x18]
  41cfa3:	jmp    41d01c <isspace@plt+0x1970c>
  41cfa5:	mov    QWORD PTR [r14+0x8],rax
  41cfa9:	cmp    QWORD PTR [r14+0x18],rbx
  41cfad:	jne    41cf4b <isspace@plt+0x1963b>
  41cfaf:	jmp    41cf53 <isspace@plt+0x19643>
  41cfb1:	mov    r11,QWORD PTR [rdi+0x80]
  41cfb8:	test   r11,r11
  41cfbb:	je     41cffb <isspace@plt+0x196eb>
  41cfbd:	mov    rcx,QWORD PTR [rdi+0x88]
  41cfc4:	xor    r9d,r9d
  41cfc7:	nop    WORD PTR [rax+rax*1+0x0]
  41cfd0:	cmp    r15,rbx
  41cfd3:	setb   al
  41cfd6:	cmp    r11,rcx
  41cfd9:	je     41d03b <isspace@plt+0x1972b>
  41cfdb:	cmp    r15,rbx
  41cfde:	jae    41d03b <isspace@plt+0x1972b>
  41cfe0:	mov    rax,QWORD PTR [r11+0x10]
  41cfe4:	add    rax,r15
  41cfe7:	cmp    rax,rbx
  41cfea:	ja     41d039 <isspace@plt+0x19729>
  41cfec:	inc    r9d
  41cfef:	mov    r11,QWORD PTR [r11+0x8]
  41cff3:	mov    r15,rax
  41cff6:	test   r11,r11
  41cff9:	jne    41cfd0 <isspace@plt+0x196c0>
  41cffb:	mov    r11,QWORD PTR [rdi+0x90]
  41d002:	mov    r9d,DWORD PTR [rdi+0x4c]
  41d006:	dec    r9d
  41d009:	xor    edx,edx
  41d00b:	mov    QWORD PTR [r14+0x30],r11
  41d00f:	mov    DWORD PTR [r14+0x20],r9d
  41d013:	mov    DWORD PTR [r14+0x24],edx
  41d017:	call   419f00 <isspace@plt+0x165f0>
  41d01c:	mov    rax,QWORD PTR fs:0x28
  41d025:	cmp    rax,QWORD PTR [rsp+0x8]
  41d02a:	jne    41d0a9 <isspace@plt+0x19799>
  41d02c:	mov    rax,rbx
  41d02f:	add    rsp,0x10
  41d033:	pop    rbx
  41d034:	pop    r14
  41d036:	pop    r15
  41d038:	ret    
  41d039:	mov    al,0x1
  41d03b:	mov    r8d,DWORD PTR [rdi+0x48]
  41d03f:	mov    ecx,DWORD PTR [r11+0x20]
  41d043:	cmp    r8d,ecx
  41d046:	cmovg  r8d,ecx
  41d04a:	xor    edx,edx
  41d04c:	test   al,al
  41d04e:	je     41d00b <isspace@plt+0x196fb>
  41d050:	test   r8d,r8d
  41d053:	jle    41d00b <isspace@plt+0x196fb>
  41d055:	movsxd rcx,r8d
  41d058:	lea    r10,[r11+0x68]
  41d05c:	xor    edx,edx
  41d05e:	xchg   ax,ax
  41d060:	movsxd rsi,edx
  41d063:	mov    rax,rsi
  41d066:	shl    rax,0x4
  41d06a:	lea    rax,[rax+rax*2]
  41d06e:	add    r15,QWORD PTR [r11+rax*1+0x38]
  41d073:	inc    rsi
  41d076:	add    rax,r10
  41d079:	nop    DWORD PTR [rax+0x0]
  41d080:	mov    rdx,rsi
  41d083:	cmp    rsi,rcx
  41d086:	jge    41d096 <isspace@plt+0x19786>
  41d088:	lea    rsi,[rdx+0x1]
  41d08c:	cmp    QWORD PTR [rax],0x0
  41d090:	lea    rax,[rax+0x30]
  41d094:	je     41d080 <isspace@plt+0x19770>
  41d096:	cmp    r15,rbx
  41d099:	jae    41d00b <isspace@plt+0x196fb>
  41d09f:	cmp    r8d,edx
  41d0a2:	jg     41d060 <isspace@plt+0x19750>
  41d0a4:	jmp    41d00b <isspace@plt+0x196fb>
  41d0a9:	call   403280 <__stack_chk_fail@plt>
  41d0ae:	xchg   ax,ax
  41d0b0:	push   rbx
  41d0b1:	sub    rsp,0x10
  41d0b5:	mov    rbx,rdi
  41d0b8:	mov    rax,QWORD PTR fs:0x28
  41d0c1:	mov    QWORD PTR [rsp+0x8],rax
  41d0c6:	mov    esi,DWORD PTR [rdi+0x4c]
  41d0c9:	call   41d100 <isspace@plt+0x197f0>
  41d0ce:	mov    rdi,QWORD PTR [rbx+0x98]
  41d0d5:	call   41cec0 <isspace@plt+0x195b0>
  41d0da:	mov    rcx,QWORD PTR fs:0x28
  41d0e3:	cmp    rcx,QWORD PTR [rsp+0x8]
  41d0e8:	jne    41d0f0 <isspace@plt+0x197e0>
  41d0ea:	add    rsp,0x10
  41d0ee:	pop    rbx
  41d0ef:	ret    
  41d0f0:	call   403280 <__stack_chk_fail@plt>
  41d0f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d0ff:	nop
  41d100:	push   rbp
  41d101:	push   r15
  41d103:	push   r14
  41d105:	push   rbx
  41d106:	sub    rsp,0x38
  41d10a:	mov    ebp,esi
  41d10c:	mov    rbx,rdi
  41d10f:	mov    rax,QWORD PTR fs:0x28
  41d118:	mov    QWORD PTR [rsp+0x30],rax
  41d11d:	mov    r14,QWORD PTR [rdi+0x98]
  41d124:	mov    rdi,QWORD PTR [rdi]
  41d127:	mov    r15,QWORD PTR [rbx+0x58]
  41d12b:	call   410890 <isspace@plt+0xcf80>
  41d130:	cmp    r15,rax
  41d133:	jae    41d169 <isspace@plt+0x19859>
  41d135:	cmp    DWORD PTR [rbx+0x4c],ebp
  41d138:	jle    41d185 <isspace@plt+0x19875>
  41d13a:	test   ebp,ebp
  41d13c:	jle    41d18d <isspace@plt+0x1987d>
  41d13e:	mov    rax,QWORD PTR [rbx+0x80]
  41d145:	test   rax,rax
  41d148:	je     41d18d <isspace@plt+0x1987d>
  41d14a:	mov    rcx,QWORD PTR [rbx+0x50]
  41d14e:	dec    ebp
  41d150:	add    rcx,QWORD PTR [rax+0x10]
  41d154:	mov    QWORD PTR [rbx+0x50],rcx
  41d158:	test   ebp,ebp
  41d15a:	jle    41d18d <isspace@plt+0x1987d>
  41d15c:	mov    rax,QWORD PTR [rax+0x8]
  41d160:	dec    ebp
  41d162:	test   rax,rax
  41d165:	jne    41d150 <isspace@plt+0x19840>
  41d167:	jmp    41d18d <isspace@plt+0x1987d>
  41d169:	mov    rdi,QWORD PTR [rbx]
  41d16c:	call   410890 <isspace@plt+0xcf80>
  41d171:	mov    rdi,QWORD PTR [rbx+0x98]
  41d178:	mov    rsi,rax
  41d17b:	call   41a7c0 <isspace@plt+0x16eb0>
  41d180:	jmp    41d46c <isspace@plt+0x19b5c>
  41d185:	mov    rax,QWORD PTR [rbx+0x58]
  41d189:	mov    QWORD PTR [rbx+0x50],rax
  41d18d:	mov    rdi,rbx
  41d190:	call   419f00 <isspace@plt+0x165f0>
  41d195:	mov    rcx,QWORD PTR [r14+0x30]
  41d199:	mov    rax,QWORD PTR [rbx+0x80]
  41d1a0:	cmp    rcx,rax
  41d1a3:	cmova  rax,rcx
  41d1a7:	mov    edx,DWORD PTR [r14+0x24]
  41d1ab:	mov    r8,QWORD PTR [r14+0x40]
  41d1af:	mov    rbx,QWORD PTR [r8+0x50]
  41d1b3:	mov    rcx,QWORD PTR [r8+0x80]
  41d1ba:	xor    esi,esi
  41d1bc:	test   rcx,rcx
  41d1bf:	je     41d1e4 <isspace@plt+0x198d4>
  41d1c1:	cmp    rcx,rax
  41d1c4:	je     41d1e4 <isspace@plt+0x198d4>
  41d1c6:	xor    esi,esi
  41d1c8:	nop    DWORD PTR [rax+rax*1+0x0]
  41d1d0:	add    rbx,QWORD PTR [rcx+0x10]
  41d1d4:	inc    esi
  41d1d6:	mov    rcx,QWORD PTR [rcx+0x8]
  41d1da:	test   rcx,rcx
  41d1dd:	je     41d1e4 <isspace@plt+0x198d4>
  41d1df:	cmp    rcx,rax
  41d1e2:	jne    41d1d0 <isspace@plt+0x198c0>
  41d1e4:	test   edx,edx
  41d1e6:	jle    41d37c <isspace@plt+0x19a6c>
  41d1ec:	movsxd rdx,edx
  41d1ef:	lea    rcx,[rdx+rdx*2]
  41d1f3:	shl    rcx,0x4
  41d1f7:	add    rcx,rax
  41d1fa:	add    rcx,0x38
  41d1fe:	xchg   ax,ax
  41d200:	cmp    QWORD PTR [rcx],0x0
  41d204:	jne    41d20f <isspace@plt+0x198ff>
  41d206:	add    rcx,0xffffffffffffffd0
  41d20a:	dec    rdx
  41d20d:	jg     41d200 <isspace@plt+0x198f0>
  41d20f:	test   edx,edx
  41d211:	jle    41d37c <isspace@plt+0x19a6c>
  41d217:	mov    edi,edx
  41d219:	cmp    edx,0x11
  41d21c:	jae    41d225 <isspace@plt+0x19915>
  41d21e:	xor    ecx,ecx
  41d220:	jmp    41d357 <isspace@plt+0x19a47>
  41d225:	mov    ecx,edi
  41d227:	and    ecx,0xf
  41d22a:	test   rcx,rcx
  41d22d:	mov    ebp,0x10
  41d232:	cmovne rbp,rcx
  41d236:	mov    rcx,rdi
  41d239:	sub    rcx,rbp
  41d23c:	vmovq  xmm0,rbx
  41d241:	vpxor  xmm1,xmm1,xmm1
  41d245:	vmovdqa ymm2,YMMWORD PTR [rip+0x139b3]        # 430c00 <isspace@plt+0x2d2f0>
  41d24d:	vpbroadcastq ymm3,QWORD PTR [rip+0x139ca]        # 430c20 <isspace@plt+0x2d310>
  41d256:	vpbroadcastq ymm4,QWORD PTR [rip+0x139c9]        # 430c28 <isspace@plt+0x2d318>
  41d25f:	vmovdqu YMMWORD PTR [rsp],ymm4
  41d264:	vpbroadcastq ymm5,QWORD PTR [rip+0x139c3]        # 430c30 <isspace@plt+0x2d320>
  41d26d:	vpbroadcastq ymm6,QWORD PTR [rip+0x139c2]        # 430c38 <isspace@plt+0x2d328>
  41d276:	vpbroadcastq ymm7,QWORD PTR [rip+0x139c1]        # 430c40 <isspace@plt+0x2d330>
  41d27f:	vpbroadcastq ymm8,QWORD PTR [rip+0x139c0]        # 430c48 <isspace@plt+0x2d338>
  41d288:	mov    rbp,rcx
  41d28b:	vpxor  xmm9,xmm9,xmm9
  41d290:	vpxor  xmm10,xmm10,xmm10
  41d295:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d29f:	nop
  41d2a0:	vpmuludq ymm11,ymm2,ymm3
  41d2a4:	vpsrlq ymm12,ymm2,0x20
  41d2a9:	vpmuludq ymm12,ymm12,ymm3
  41d2ad:	vpsllq ymm12,ymm12,0x20
  41d2b3:	vmovq  xmm4,rax
  41d2b8:	vpbroadcastq ymm4,xmm4
  41d2bd:	vpaddq ymm4,ymm11,ymm4
  41d2c1:	vpaddq ymm4,ymm12,ymm4
  41d2c5:	vpaddq ymm11,ymm4,YMMWORD PTR [rsp]
  41d2ca:	vpaddq ymm12,ymm4,ymm6
  41d2ce:	vpaddq ymm14,ymm4,ymm7
  41d2d2:	vpaddq ymm4,ymm4,ymm8
  41d2d7:	vpcmpeqd ymm15,ymm15,ymm15
  41d2dc:	vpgatherqq ymm13,QWORD PTR [ymm11*1+0x0],ymm15
  41d2e6:	vpcmpeqd ymm11,ymm11,ymm11
  41d2eb:	vpgatherqq ymm15,QWORD PTR [ymm12*1+0x0],ymm11
  41d2f5:	vpcmpeqd ymm11,ymm11,ymm11
  41d2fa:	vpgatherqq ymm12,QWORD PTR [ymm14*1+0x0],ymm11
  41d304:	vpcmpeqd ymm11,ymm11,ymm11
  41d309:	vpgatherqq ymm14,QWORD PTR [ymm4*1+0x0],ymm11
  41d313:	vpaddq ymm0,ymm13,ymm0
  41d317:	vpaddq ymm1,ymm15,ymm1
  41d31b:	vpaddq ymm9,ymm12,ymm9
  41d320:	vpaddq ymm10,ymm14,ymm10
  41d325:	vpaddq ymm2,ymm2,ymm5
  41d329:	add    rbp,0xfffffffffffffff0
  41d32d:	jne    41d2a0 <isspace@plt+0x19990>
  41d333:	vpaddq ymm0,ymm1,ymm0
  41d337:	vpaddq ymm0,ymm9,ymm0
  41d33b:	vpaddq ymm0,ymm10,ymm0
  41d33f:	vextracti128 xmm1,ymm0,0x1
  41d345:	vpaddq xmm0,xmm0,xmm1
  41d349:	vpshufd xmm1,xmm0,0x4e
  41d34e:	vpaddq xmm0,xmm0,xmm1
  41d352:	vmovq  rbx,xmm0
  41d357:	sub    rdi,rcx
  41d35a:	lea    rcx,[rcx+rcx*2]
  41d35e:	shl    rcx,0x4
  41d362:	add    rcx,rax
  41d365:	add    rcx,0x38
  41d369:	nop    DWORD PTR [rax+0x0]
  41d370:	add    rbx,QWORD PTR [rcx]
  41d373:	add    rcx,0x30
  41d377:	dec    rdi
  41d37a:	jne    41d370 <isspace@plt+0x19a60>
  41d37c:	mov    DWORD PTR [r14+0x24],edx
  41d380:	mov    DWORD PTR [r14+0x20],esi
  41d384:	mov    QWORD PTR [r14+0x30],rax
  41d388:	mov    rdi,QWORD PTR [r8]
  41d38b:	mov    rsi,rbx
  41d38e:	vzeroupper 
  41d391:	call   410d60 <isspace@plt+0xd450>
  41d396:	mov    QWORD PTR [r14],rax
  41d399:	cmp    BYTE PTR [r14+0x10],0x0
  41d39e:	je     41d3f7 <isspace@plt+0x19ae7>
  41d3a0:	cmp    QWORD PTR [r14+0x18],rbx
  41d3a4:	je     41d3ae <isspace@plt+0x19a9e>
  41d3a6:	mov    DWORD PTR [r14+0x28],0x0
  41d3ae:	mov    QWORD PTR [r14+0x18],rbx
  41d3b2:	mov    rdi,QWORD PTR [r14+0x40]
  41d3b6:	mov    rdx,QWORD PTR [rdi+0x50]
  41d3ba:	cmp    rdx,rbx
  41d3bd:	ja     41d3c5 <isspace@plt+0x19ab5>
  41d3bf:	cmp    QWORD PTR [rdi+0x58],rbx
  41d3c3:	jae    41d403 <isspace@plt+0x19af3>
  41d3c5:	mov    QWORD PTR [r14+0x30],0x0
  41d3cd:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
  41d3d5:	cmp    QWORD PTR [rdi+0x98],r14
  41d3dc:	jne    41d46c <isspace@plt+0x19b5c>
  41d3e2:	mov    rax,QWORD PTR [rdi+0x80]
  41d3e9:	mov    QWORD PTR [r14+0x30],rax
  41d3ed:	mov    QWORD PTR [r14+0x20],0x0
  41d3f5:	jmp    41d46c <isspace@plt+0x19b5c>
  41d3f7:	mov    QWORD PTR [r14+0x8],rax
  41d3fb:	cmp    QWORD PTR [r14+0x18],rbx
  41d3ff:	jne    41d3a6 <isspace@plt+0x19a96>
  41d401:	jmp    41d3ae <isspace@plt+0x19a9e>
  41d403:	mov    r11,QWORD PTR [rdi+0x80]
  41d40a:	test   r11,r11
  41d40d:	je     41d44b <isspace@plt+0x19b3b>
  41d40f:	mov    rsi,QWORD PTR [rdi+0x88]
  41d416:	xor    r10d,r10d
  41d419:	nop    DWORD PTR [rax+0x0]
  41d420:	cmp    rdx,rbx
  41d423:	setb   cl
  41d426:	cmp    r11,rsi
  41d429:	je     41d48d <isspace@plt+0x19b7d>
  41d42b:	cmp    rdx,rbx
  41d42e:	jae    41d48d <isspace@plt+0x19b7d>
  41d430:	mov    rax,QWORD PTR [r11+0x10]
  41d434:	add    rax,rdx
  41d437:	cmp    rax,rbx
  41d43a:	ja     41d48b <isspace@plt+0x19b7b>
  41d43c:	inc    r10d
  41d43f:	mov    r11,QWORD PTR [r11+0x8]
  41d443:	mov    rdx,rax
  41d446:	test   r11,r11
  41d449:	jne    41d420 <isspace@plt+0x19b10>
  41d44b:	mov    r11,QWORD PTR [rdi+0x90]
  41d452:	mov    r10d,DWORD PTR [rdi+0x4c]
  41d456:	dec    r10d
  41d459:	xor    eax,eax
  41d45b:	mov    QWORD PTR [r14+0x30],r11
  41d45f:	mov    DWORD PTR [r14+0x20],r10d
  41d463:	mov    DWORD PTR [r14+0x24],eax
  41d467:	call   419f00 <isspace@plt+0x165f0>
  41d46c:	mov    rax,QWORD PTR [r14+0x18]
  41d470:	mov    rcx,QWORD PTR fs:0x28
  41d479:	cmp    rcx,QWORD PTR [rsp+0x30]
  41d47e:	jne    41d4f9 <isspace@plt+0x19be9>
  41d480:	add    rsp,0x38
  41d484:	pop    rbx
  41d485:	pop    r14
  41d487:	pop    r15
  41d489:	pop    rbp
  41d48a:	ret    
  41d48b:	mov    cl,0x1
  41d48d:	mov    r8d,DWORD PTR [rdi+0x48]
  41d491:	mov    eax,DWORD PTR [r11+0x20]
  41d495:	cmp    r8d,eax
  41d498:	cmovg  r8d,eax
  41d49c:	xor    eax,eax
  41d49e:	test   cl,cl
  41d4a0:	je     41d45b <isspace@plt+0x19b4b>
  41d4a2:	test   r8d,r8d
  41d4a5:	jle    41d45b <isspace@plt+0x19b4b>
  41d4a7:	movsxd rbp,r8d
  41d4aa:	lea    r9,[r11+0x68]
  41d4ae:	xor    eax,eax
  41d4b0:	movsxd rsi,eax
  41d4b3:	mov    rax,rsi
  41d4b6:	shl    rax,0x4
  41d4ba:	lea    rcx,[rax+rax*2]
  41d4be:	add    rdx,QWORD PTR [r11+rcx*1+0x38]
  41d4c3:	inc    rsi
  41d4c6:	add    rcx,r9
  41d4c9:	nop    DWORD PTR [rax+0x0]
  41d4d0:	mov    rax,rsi
  41d4d3:	cmp    rsi,rbp
  41d4d6:	jge    41d4e6 <isspace@plt+0x19bd6>
  41d4d8:	lea    rsi,[rax+0x1]
  41d4dc:	cmp    QWORD PTR [rcx],0x0
  41d4e0:	lea    rcx,[rcx+0x30]
  41d4e4:	je     41d4d0 <isspace@plt+0x19bc0>
  41d4e6:	cmp    rdx,rbx
  41d4e9:	jae    41d45b <isspace@plt+0x19b4b>
  41d4ef:	cmp    r8d,eax
  41d4f2:	jg     41d4b0 <isspace@plt+0x19ba0>
  41d4f4:	jmp    41d45b <isspace@plt+0x19b4b>
  41d4f9:	call   403280 <__stack_chk_fail@plt>
  41d4fe:	xchg   ax,ax
  41d500:	push   r14
  41d502:	push   rbx
  41d503:	push   rax
  41d504:	mov    rax,QWORD PTR fs:0x28
  41d50d:	mov    QWORD PTR [rsp],rax
  41d511:	mov    rsi,QWORD PTR [rdi+0x50]
  41d515:	mov    r14,QWORD PTR [rdi+0x98]
  41d51c:	test   rsi,rsi
  41d51f:	je     41d541 <isspace@plt+0x19c31>
  41d521:	mov    rbx,rdi
  41d524:	dec    rsi
  41d527:	mov    rdi,r14
  41d52a:	call   41a7c0 <isspace@plt+0x16eb0>
  41d52f:	mov    rdi,rbx
  41d532:	call   41b720 <isspace@plt+0x17e10>
  41d537:	mov    rdi,r14
  41d53a:	call   41cec0 <isspace@plt+0x195b0>
  41d53f:	jmp    41d54b <isspace@plt+0x19c3b>
  41d541:	mov    rdi,r14
  41d544:	xor    esi,esi
  41d546:	call   41a7c0 <isspace@plt+0x16eb0>
  41d54b:	mov    rax,QWORD PTR [r14+0x18]
  41d54f:	mov    rcx,QWORD PTR fs:0x28
  41d558:	cmp    rcx,QWORD PTR [rsp]
  41d55c:	jne    41d566 <isspace@plt+0x19c56>
  41d55e:	add    rsp,0x8
  41d562:	pop    rbx
  41d563:	pop    r14
  41d565:	ret    
  41d566:	call   403280 <__stack_chk_fail@plt>
  41d56b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d570:	push   r15
  41d572:	push   r14
  41d574:	push   rbx
  41d575:	sub    rsp,0x10
  41d579:	mov    rbx,rdi
  41d57c:	mov    rax,QWORD PTR fs:0x28
  41d585:	mov    QWORD PTR [rsp+0x8],rax
  41d58a:	mov    r14,QWORD PTR [rdi+0x58]
  41d58e:	mov    eax,DWORD PTR [rdi+0x4c]
  41d591:	mov    esi,eax
  41d593:	shr    esi,0x1f
  41d596:	add    esi,eax
  41d598:	sar    esi,1
  41d59a:	call   41d100 <isspace@plt+0x197f0>
  41d59f:	mov    r15,rax
  41d5a2:	mov    rdi,QWORD PTR [rbx]
  41d5a5:	call   410890 <isspace@plt+0xcf80>
  41d5aa:	cmp    r15,rax
  41d5ad:	jae    41d5be <isspace@plt+0x19cae>
  41d5af:	mov    rdi,QWORD PTR [rbx+0x98]
  41d5b6:	mov    rsi,r14
  41d5b9:	call   41a7c0 <isspace@plt+0x16eb0>
  41d5be:	mov    rax,QWORD PTR [rbx+0x98]
  41d5c5:	mov    rax,QWORD PTR [rax+0x18]
  41d5c9:	mov    rcx,QWORD PTR fs:0x28
  41d5d2:	cmp    rcx,QWORD PTR [rsp+0x8]
  41d5d7:	jne    41d5e3 <isspace@plt+0x19cd3>
  41d5d9:	add    rsp,0x10
  41d5dd:	pop    rbx
  41d5de:	pop    r14
  41d5e0:	pop    r15
  41d5e2:	ret    
  41d5e3:	call   403280 <__stack_chk_fail@plt>
  41d5e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41d5f0:	push   rbp
  41d5f1:	push   r15
  41d5f3:	push   r14
  41d5f5:	push   r12
  41d5f7:	push   rbx
  41d5f8:	sub    rsp,0x30
  41d5fc:	mov    r14,rdi
  41d5ff:	mov    rax,QWORD PTR fs:0x28
  41d608:	mov    QWORD PTR [rsp+0x28],rax
  41d60d:	mov    rbx,QWORD PTR [rdi+0x40]
  41d611:	mov    r12d,DWORD PTR [rdi+0x28]
  41d615:	test   r12d,r12d
  41d618:	jne    41d61e <isspace@plt+0x19d0e>
  41d61a:	mov    r12d,DWORD PTR [r14+0x24]
  41d61e:	mov    rdi,QWORD PTR [rbx]
  41d621:	mov    rsi,QWORD PTR [r14+0x18]
  41d625:	call   413ab0 <isspace@plt+0x101a0>
  41d62a:	mov    r15,rax
  41d62d:	cmp    QWORD PTR [rbx+0x98],r14
  41d634:	je     41d63e <isspace@plt+0x19d2e>
  41d636:	mov    rdi,r14
  41d639:	mov    rsi,r15
  41d63c:	jmp    41d6a9 <isspace@plt+0x19d99>
  41d63e:	mov    rbp,QWORD PTR [rbx+0x50]
  41d642:	mov    rdi,r14
  41d645:	mov    rsi,r15
  41d648:	call   41a7c0 <isspace@plt+0x16eb0>
  41d64d:	cmp    r15,rbp
  41d650:	jae    41d6ae <isspace@plt+0x19d9e>
  41d652:	mov    rax,QWORD PTR [rbx+0x80]
  41d659:	test   rax,rax
  41d65c:	je     41d696 <isspace@plt+0x19d86>
  41d65e:	mov    rcx,QWORD PTR [rbx+0x98]
  41d665:	mov    rcx,QWORD PTR [rcx+0x30]
  41d669:	cmp    rax,rcx
  41d66c:	je     41d696 <isspace@plt+0x19d86>
  41d66e:	mov    rdx,QWORD PTR [rbx+0x50]
  41d672:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d67c:	nop    DWORD PTR [rax+0x0]
  41d680:	add    rdx,QWORD PTR [rax+0x10]
  41d684:	mov    QWORD PTR [rbx+0x50],rdx
  41d688:	mov    rax,QWORD PTR [rax+0x8]
  41d68c:	test   rax,rax
  41d68f:	je     41d696 <isspace@plt+0x19d86>
  41d691:	cmp    rax,rcx
  41d694:	jne    41d680 <isspace@plt+0x19d70>
  41d696:	mov    rdi,rbx
  41d699:	call   419f00 <isspace@plt+0x165f0>
  41d69e:	mov    rdi,QWORD PTR [rbx+0x98]
  41d6a5:	mov    rsi,QWORD PTR [rdi+0x18]
  41d6a9:	call   41a7c0 <isspace@plt+0x16eb0>
  41d6ae:	mov    rdx,QWORD PTR [r14+0x30]
  41d6b2:	test   rdx,rdx
  41d6b5:	je     41d97c <isspace@plt+0x1a06c>
  41d6bb:	mov    r8,QWORD PTR [r14+0x40]
  41d6bf:	mov    rbx,QWORD PTR [r8+0x50]
  41d6c3:	mov    rax,QWORD PTR [r8+0x80]
  41d6ca:	xor    ecx,ecx
  41d6cc:	test   rax,rax
  41d6cf:	je     41d6f4 <isspace@plt+0x19de4>
  41d6d1:	cmp    rax,rdx
  41d6d4:	je     41d6f4 <isspace@plt+0x19de4>
  41d6d6:	xor    ecx,ecx
  41d6d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41d6e0:	add    rbx,QWORD PTR [rax+0x10]
  41d6e4:	inc    ecx
  41d6e6:	mov    rax,QWORD PTR [rax+0x8]
  41d6ea:	test   rax,rax
  41d6ed:	je     41d6f4 <isspace@plt+0x19de4>
  41d6ef:	cmp    rax,rdx
  41d6f2:	jne    41d6e0 <isspace@plt+0x19dd0>
  41d6f4:	test   r12d,r12d
  41d6f7:	jle    41d735 <isspace@plt+0x19e25>
  41d6f9:	movsxd rsi,r12d
  41d6fc:	lea    rax,[rsi+rsi*2]
  41d700:	shl    rax,0x4
  41d704:	add    rax,rdx
  41d707:	add    rax,0x38
  41d70b:	nop    DWORD PTR [rax+rax*1+0x0]
  41d710:	cmp    QWORD PTR [rax],0x0
  41d714:	jne    41d71f <isspace@plt+0x19e0f>
  41d716:	add    rax,0xffffffffffffffd0
  41d71a:	dec    rsi
  41d71d:	jg     41d710 <isspace@plt+0x19e00>
  41d71f:	test   esi,esi
  41d721:	jle    41d88c <isspace@plt+0x19f7c>
  41d727:	mov    edi,esi
  41d729:	cmp    esi,0x11
  41d72c:	jae    41d73d <isspace@plt+0x19e2d>
  41d72e:	xor    eax,eax
  41d730:	jmp    41d867 <isspace@plt+0x19f57>
  41d735:	mov    esi,r12d
  41d738:	jmp    41d88c <isspace@plt+0x19f7c>
  41d73d:	mov    eax,edi
  41d73f:	and    eax,0xf
  41d742:	test   rax,rax
  41d745:	mov    ebp,0x10
  41d74a:	cmovne rbp,rax
  41d74e:	mov    rax,rdi
  41d751:	sub    rax,rbp
  41d754:	vmovq  xmm0,rbx
  41d759:	vpxor  xmm1,xmm1,xmm1
  41d75d:	vmovdqa ymm2,YMMWORD PTR [rip+0x1349b]        # 430c00 <isspace@plt+0x2d2f0>
  41d765:	vpbroadcastq ymm3,QWORD PTR [rip+0x134b2]        # 430c20 <isspace@plt+0x2d310>
  41d76e:	vpbroadcastq ymm4,QWORD PTR [rip+0x134b1]        # 430c28 <isspace@plt+0x2d318>
  41d777:	vmovdqu YMMWORD PTR [rsp],ymm4
  41d77c:	vpbroadcastq ymm5,QWORD PTR [rip+0x134ab]        # 430c30 <isspace@plt+0x2d320>
  41d785:	vpbroadcastq ymm6,QWORD PTR [rip+0x134aa]        # 430c38 <isspace@plt+0x2d328>
  41d78e:	vpbroadcastq ymm7,QWORD PTR [rip+0x134a9]        # 430c40 <isspace@plt+0x2d330>
  41d797:	vpbroadcastq ymm8,QWORD PTR [rip+0x134a8]        # 430c48 <isspace@plt+0x2d338>
  41d7a0:	mov    rbp,rax
  41d7a3:	vpxor  xmm9,xmm9,xmm9
  41d7a8:	vpxor  xmm10,xmm10,xmm10
  41d7ad:	nop    DWORD PTR [rax]
  41d7b0:	vpmuludq ymm11,ymm2,ymm3
  41d7b4:	vpsrlq ymm12,ymm2,0x20
  41d7b9:	vpmuludq ymm12,ymm12,ymm3
  41d7bd:	vpsllq ymm12,ymm12,0x20
  41d7c3:	vmovq  xmm4,rdx
  41d7c8:	vpbroadcastq ymm4,xmm4
  41d7cd:	vpaddq ymm4,ymm11,ymm4
  41d7d1:	vpaddq ymm4,ymm12,ymm4
  41d7d5:	vpaddq ymm11,ymm4,YMMWORD PTR [rsp]
  41d7da:	vpaddq ymm12,ymm4,ymm6
  41d7de:	vpaddq ymm14,ymm4,ymm7
  41d7e2:	vpaddq ymm4,ymm4,ymm8
  41d7e7:	vpcmpeqd ymm15,ymm15,ymm15
  41d7ec:	vpgatherqq ymm13,QWORD PTR [ymm11*1+0x0],ymm15
  41d7f6:	vpcmpeqd ymm11,ymm11,ymm11
  41d7fb:	vpgatherqq ymm15,QWORD PTR [ymm12*1+0x0],ymm11
  41d805:	vpcmpeqd ymm11,ymm11,ymm11
  41d80a:	vpgatherqq ymm12,QWORD PTR [ymm14*1+0x0],ymm11
  41d814:	vpcmpeqd ymm11,ymm11,ymm11
  41d819:	vpgatherqq ymm14,QWORD PTR [ymm4*1+0x0],ymm11
  41d823:	vpaddq ymm0,ymm13,ymm0
  41d827:	vpaddq ymm1,ymm15,ymm1
  41d82b:	vpaddq ymm9,ymm12,ymm9
  41d830:	vpaddq ymm10,ymm14,ymm10
  41d835:	vpaddq ymm2,ymm2,ymm5
  41d839:	add    rbp,0xfffffffffffffff0
  41d83d:	jne    41d7b0 <isspace@plt+0x19ea0>
  41d843:	vpaddq ymm0,ymm1,ymm0
  41d847:	vpaddq ymm0,ymm9,ymm0
  41d84b:	vpaddq ymm0,ymm10,ymm0
  41d84f:	vextracti128 xmm1,ymm0,0x1
  41d855:	vpaddq xmm0,xmm0,xmm1
  41d859:	vpshufd xmm1,xmm0,0x4e
  41d85e:	vpaddq xmm0,xmm0,xmm1
  41d862:	vmovq  rbx,xmm0
  41d867:	sub    rdi,rax
  41d86a:	lea    rax,[rax+rax*2]
  41d86e:	shl    rax,0x4
  41d872:	add    rax,rdx
  41d875:	add    rax,0x38
  41d879:	nop    DWORD PTR [rax+0x0]
  41d880:	add    rbx,QWORD PTR [rax]
  41d883:	add    rax,0x30
  41d887:	dec    rdi
  41d88a:	jne    41d880 <isspace@plt+0x19f70>
  41d88c:	mov    DWORD PTR [r14+0x24],esi
  41d890:	mov    DWORD PTR [r14+0x20],ecx
  41d894:	mov    rdi,QWORD PTR [r8]
  41d897:	mov    rsi,rbx
  41d89a:	vzeroupper 
  41d89d:	call   410d60 <isspace@plt+0xd450>
  41d8a2:	mov    QWORD PTR [r14],rax
  41d8a5:	cmp    BYTE PTR [r14+0x10],0x0
  41d8aa:	je     41d903 <isspace@plt+0x19ff3>
  41d8ac:	cmp    QWORD PTR [r14+0x18],rbx
  41d8b0:	je     41d8ba <isspace@plt+0x19faa>
  41d8b2:	mov    DWORD PTR [r14+0x28],0x0
  41d8ba:	mov    QWORD PTR [r14+0x18],rbx
  41d8be:	mov    rdi,QWORD PTR [r14+0x40]
  41d8c2:	mov    rdx,QWORD PTR [rdi+0x50]
  41d8c6:	cmp    rdx,rbx
  41d8c9:	ja     41d8d1 <isspace@plt+0x19fc1>
  41d8cb:	cmp    QWORD PTR [rdi+0x58],rbx
  41d8cf:	jae    41d90f <isspace@plt+0x19fff>
  41d8d1:	mov    QWORD PTR [r14+0x30],0x0
  41d8d9:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
  41d8e1:	cmp    QWORD PTR [rdi+0x98],r14
  41d8e8:	jne    41d97c <isspace@plt+0x1a06c>
  41d8ee:	mov    rax,QWORD PTR [rdi+0x80]
  41d8f5:	mov    QWORD PTR [r14+0x30],rax
  41d8f9:	mov    QWORD PTR [r14+0x20],0x0
  41d901:	jmp    41d97c <isspace@plt+0x1a06c>
  41d903:	mov    QWORD PTR [r14+0x8],rax
  41d907:	cmp    QWORD PTR [r14+0x18],rbx
  41d90b:	jne    41d8b2 <isspace@plt+0x19fa2>
  41d90d:	jmp    41d8ba <isspace@plt+0x19faa>
  41d90f:	mov    r11,QWORD PTR [rdi+0x80]
  41d916:	test   r11,r11
  41d919:	je     41d95b <isspace@plt+0x1a04b>
  41d91b:	mov    rsi,QWORD PTR [rdi+0x88]
  41d922:	xor    r10d,r10d
  41d925:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d92f:	nop
  41d930:	cmp    rdx,rbx
  41d933:	setb   cl
  41d936:	cmp    r11,rsi
  41d939:	je     41d9a7 <isspace@plt+0x1a097>
  41d93b:	cmp    rdx,rbx
  41d93e:	jae    41d9a7 <isspace@plt+0x1a097>
  41d940:	mov    rax,QWORD PTR [r11+0x10]
  41d944:	add    rax,rdx
  41d947:	cmp    rax,rbx
  41d94a:	ja     41d9a5 <isspace@plt+0x1a095>
  41d94c:	inc    r10d
  41d94f:	mov    r11,QWORD PTR [r11+0x8]
  41d953:	mov    rdx,rax
  41d956:	test   r11,r11
  41d959:	jne    41d930 <isspace@plt+0x1a020>
  41d95b:	mov    r11,QWORD PTR [rdi+0x90]
  41d962:	mov    r10d,DWORD PTR [rdi+0x4c]
  41d966:	dec    r10d
  41d969:	xor    eax,eax
  41d96b:	mov    QWORD PTR [r14+0x30],r11
  41d96f:	mov    DWORD PTR [r14+0x20],r10d
  41d973:	mov    DWORD PTR [r14+0x24],eax
  41d977:	call   419f00 <isspace@plt+0x165f0>
  41d97c:	mov    DWORD PTR [r14+0x28],r12d
  41d980:	mov    rax,QWORD PTR [r14+0x18]
  41d984:	mov    rcx,QWORD PTR fs:0x28
  41d98d:	cmp    rcx,QWORD PTR [rsp+0x28]
  41d992:	jne    41da19 <isspace@plt+0x1a109>
  41d998:	add    rsp,0x30
  41d99c:	pop    rbx
  41d99d:	pop    r12
  41d99f:	pop    r14
  41d9a1:	pop    r15
  41d9a3:	pop    rbp
  41d9a4:	ret    
  41d9a5:	mov    cl,0x1
  41d9a7:	mov    r8d,DWORD PTR [rdi+0x48]
  41d9ab:	mov    eax,DWORD PTR [r11+0x20]
  41d9af:	cmp    r8d,eax
  41d9b2:	cmovg  r8d,eax
  41d9b6:	xor    eax,eax
  41d9b8:	test   cl,cl
  41d9ba:	je     41d96b <isspace@plt+0x1a05b>
  41d9bc:	test   r8d,r8d
  41d9bf:	jle    41d96b <isspace@plt+0x1a05b>
  41d9c1:	movsxd rbp,r8d
  41d9c4:	lea    r9,[r11+0x68]
  41d9c8:	xor    eax,eax
  41d9ca:	nop    WORD PTR [rax+rax*1+0x0]
  41d9d0:	movsxd rsi,eax
  41d9d3:	mov    rax,rsi
  41d9d6:	shl    rax,0x4
  41d9da:	lea    rcx,[rax+rax*2]
  41d9de:	add    rdx,QWORD PTR [r11+rcx*1+0x38]
  41d9e3:	inc    rsi
  41d9e6:	add    rcx,r9
  41d9e9:	nop    DWORD PTR [rax+0x0]
  41d9f0:	mov    rax,rsi
  41d9f3:	cmp    rsi,rbp
  41d9f6:	jge    41da06 <isspace@plt+0x1a0f6>
  41d9f8:	lea    rsi,[rax+0x1]
  41d9fc:	cmp    QWORD PTR [rcx],0x0
  41da00:	lea    rcx,[rcx+0x30]
  41da04:	je     41d9f0 <isspace@plt+0x1a0e0>
  41da06:	cmp    rdx,rbx
  41da09:	jae    41d96b <isspace@plt+0x1a05b>
  41da0f:	cmp    r8d,eax
  41da12:	jg     41d9d0 <isspace@plt+0x1a0c0>
  41da14:	jmp    41d96b <isspace@plt+0x1a05b>
  41da19:	call   403280 <__stack_chk_fail@plt>
  41da1e:	xchg   ax,ax
  41da20:	push   rbp
  41da21:	push   r15
  41da23:	push   r14
  41da25:	push   r12
  41da27:	push   rbx
  41da28:	sub    rsp,0x30
  41da2c:	mov    r14,rdi
  41da2f:	mov    rax,QWORD PTR fs:0x28
  41da38:	mov    QWORD PTR [rsp+0x28],rax
  41da3d:	mov    rbx,QWORD PTR [rdi+0x40]
  41da41:	mov    r12d,DWORD PTR [rdi+0x28]
  41da45:	test   r12d,r12d
  41da48:	jne    41da4e <isspace@plt+0x1a13e>
  41da4a:	mov    r12d,DWORD PTR [r14+0x24]
  41da4e:	mov    rdi,QWORD PTR [rbx]
  41da51:	mov    rsi,QWORD PTR [r14+0x18]
  41da55:	call   413b30 <isspace@plt+0x10220>
  41da5a:	mov    r15,rax
  41da5d:	cmp    QWORD PTR [rbx+0x98],r14
  41da64:	je     41da73 <isspace@plt+0x1a163>
  41da66:	mov    rdi,r14
  41da69:	mov    rsi,r15
  41da6c:	call   41a7c0 <isspace@plt+0x16eb0>
  41da71:	jmp    41da8f <isspace@plt+0x1a17f>
  41da73:	mov    rbp,QWORD PTR [rbx+0x58]
  41da77:	mov    rdi,r14
  41da7a:	mov    rsi,r15
  41da7d:	call   41a7c0 <isspace@plt+0x16eb0>
  41da82:	cmp    r15,rbp
  41da85:	jbe    41da8f <isspace@plt+0x1a17f>
  41da87:	mov    rdi,rbx
  41da8a:	call   41bc20 <isspace@plt+0x18310>
  41da8f:	mov    rdx,QWORD PTR [r14+0x30]
  41da93:	test   rdx,rdx
  41da96:	je     41dd5c <isspace@plt+0x1a44c>
  41da9c:	mov    r8,QWORD PTR [r14+0x40]
  41daa0:	mov    rbx,QWORD PTR [r8+0x50]
  41daa4:	mov    rax,QWORD PTR [r8+0x80]
  41daab:	xor    ecx,ecx
  41daad:	test   rax,rax
  41dab0:	je     41dad4 <isspace@plt+0x1a1c4>
  41dab2:	cmp    rax,rdx
  41dab5:	je     41dad4 <isspace@plt+0x1a1c4>
  41dab7:	xor    ecx,ecx
  41dab9:	nop    DWORD PTR [rax+0x0]
  41dac0:	add    rbx,QWORD PTR [rax+0x10]
  41dac4:	inc    ecx
  41dac6:	mov    rax,QWORD PTR [rax+0x8]
  41daca:	test   rax,rax
  41dacd:	je     41dad4 <isspace@plt+0x1a1c4>
  41dacf:	cmp    rax,rdx
  41dad2:	jne    41dac0 <isspace@plt+0x1a1b0>
  41dad4:	test   r12d,r12d
  41dad7:	jle    41db15 <isspace@plt+0x1a205>
  41dad9:	movsxd rsi,r12d
  41dadc:	lea    rax,[rsi+rsi*2]
  41dae0:	shl    rax,0x4
  41dae4:	add    rax,rdx
  41dae7:	add    rax,0x38
  41daeb:	nop    DWORD PTR [rax+rax*1+0x0]
  41daf0:	cmp    QWORD PTR [rax],0x0
  41daf4:	jne    41daff <isspace@plt+0x1a1ef>
  41daf6:	add    rax,0xffffffffffffffd0
  41dafa:	dec    rsi
  41dafd:	jg     41daf0 <isspace@plt+0x1a1e0>
  41daff:	test   esi,esi
  41db01:	jle    41dc6c <isspace@plt+0x1a35c>
  41db07:	mov    edi,esi
  41db09:	cmp    esi,0x11
  41db0c:	jae    41db1d <isspace@plt+0x1a20d>
  41db0e:	xor    eax,eax
  41db10:	jmp    41dc47 <isspace@plt+0x1a337>
  41db15:	mov    esi,r12d
  41db18:	jmp    41dc6c <isspace@plt+0x1a35c>
  41db1d:	mov    eax,edi
  41db1f:	and    eax,0xf
  41db22:	test   rax,rax
  41db25:	mov    ebp,0x10
  41db2a:	cmovne rbp,rax
  41db2e:	mov    rax,rdi
  41db31:	sub    rax,rbp
  41db34:	vmovq  xmm0,rbx
  41db39:	vpxor  xmm1,xmm1,xmm1
  41db3d:	vmovdqa ymm2,YMMWORD PTR [rip+0x130bb]        # 430c00 <isspace@plt+0x2d2f0>
  41db45:	vpbroadcastq ymm3,QWORD PTR [rip+0x130d2]        # 430c20 <isspace@plt+0x2d310>
  41db4e:	vpbroadcastq ymm4,QWORD PTR [rip+0x130d1]        # 430c28 <isspace@plt+0x2d318>
  41db57:	vmovdqu YMMWORD PTR [rsp],ymm4
  41db5c:	vpbroadcastq ymm5,QWORD PTR [rip+0x130cb]        # 430c30 <isspace@plt+0x2d320>
  41db65:	vpbroadcastq ymm6,QWORD PTR [rip+0x130ca]        # 430c38 <isspace@plt+0x2d328>
  41db6e:	vpbroadcastq ymm7,QWORD PTR [rip+0x130c9]        # 430c40 <isspace@plt+0x2d330>
  41db77:	vpbroadcastq ymm8,QWORD PTR [rip+0x130c8]        # 430c48 <isspace@plt+0x2d338>
  41db80:	mov    rbp,rax
  41db83:	vpxor  xmm9,xmm9,xmm9
  41db88:	vpxor  xmm10,xmm10,xmm10
  41db8d:	nop    DWORD PTR [rax]
  41db90:	vpmuludq ymm11,ymm2,ymm3
  41db94:	vpsrlq ymm12,ymm2,0x20
  41db99:	vpmuludq ymm12,ymm12,ymm3
  41db9d:	vpsllq ymm12,ymm12,0x20
  41dba3:	vmovq  xmm4,rdx
  41dba8:	vpbroadcastq ymm4,xmm4
  41dbad:	vpaddq ymm4,ymm11,ymm4
  41dbb1:	vpaddq ymm4,ymm12,ymm4
  41dbb5:	vpaddq ymm11,ymm4,YMMWORD PTR [rsp]
  41dbba:	vpaddq ymm12,ymm4,ymm6
  41dbbe:	vpaddq ymm14,ymm4,ymm7
  41dbc2:	vpaddq ymm4,ymm4,ymm8
  41dbc7:	vpcmpeqd ymm15,ymm15,ymm15
  41dbcc:	vpgatherqq ymm13,QWORD PTR [ymm11*1+0x0],ymm15
  41dbd6:	vpcmpeqd ymm11,ymm11,ymm11
  41dbdb:	vpgatherqq ymm15,QWORD PTR [ymm12*1+0x0],ymm11
  41dbe5:	vpcmpeqd ymm11,ymm11,ymm11
  41dbea:	vpgatherqq ymm12,QWORD PTR [ymm14*1+0x0],ymm11
  41dbf4:	vpcmpeqd ymm11,ymm11,ymm11
  41dbf9:	vpgatherqq ymm14,QWORD PTR [ymm4*1+0x0],ymm11
  41dc03:	vpaddq ymm0,ymm13,ymm0
  41dc07:	vpaddq ymm1,ymm15,ymm1
  41dc0b:	vpaddq ymm9,ymm12,ymm9
  41dc10:	vpaddq ymm10,ymm14,ymm10
  41dc15:	vpaddq ymm2,ymm2,ymm5
  41dc19:	add    rbp,0xfffffffffffffff0
  41dc1d:	jne    41db90 <isspace@plt+0x1a280>
  41dc23:	vpaddq ymm0,ymm1,ymm0
  41dc27:	vpaddq ymm0,ymm9,ymm0
  41dc2b:	vpaddq ymm0,ymm10,ymm0
  41dc2f:	vextracti128 xmm1,ymm0,0x1
  41dc35:	vpaddq xmm0,xmm0,xmm1
  41dc39:	vpshufd xmm1,xmm0,0x4e
  41dc3e:	vpaddq xmm0,xmm0,xmm1
  41dc42:	vmovq  rbx,xmm0
  41dc47:	sub    rdi,rax
  41dc4a:	lea    rax,[rax+rax*2]
  41dc4e:	shl    rax,0x4
  41dc52:	add    rax,rdx
  41dc55:	add    rax,0x38
  41dc59:	nop    DWORD PTR [rax+0x0]
  41dc60:	add    rbx,QWORD PTR [rax]
  41dc63:	add    rax,0x30
  41dc67:	dec    rdi
  41dc6a:	jne    41dc60 <isspace@plt+0x1a350>
  41dc6c:	mov    DWORD PTR [r14+0x24],esi
  41dc70:	mov    DWORD PTR [r14+0x20],ecx
  41dc74:	mov    rdi,QWORD PTR [r8]
  41dc77:	mov    rsi,rbx
  41dc7a:	vzeroupper 
  41dc7d:	call   410d60 <isspace@plt+0xd450>
  41dc82:	mov    QWORD PTR [r14],rax
  41dc85:	cmp    BYTE PTR [r14+0x10],0x0
  41dc8a:	je     41dce3 <isspace@plt+0x1a3d3>
  41dc8c:	cmp    QWORD PTR [r14+0x18],rbx
  41dc90:	je     41dc9a <isspace@plt+0x1a38a>
  41dc92:	mov    DWORD PTR [r14+0x28],0x0
  41dc9a:	mov    QWORD PTR [r14+0x18],rbx
  41dc9e:	mov    rdi,QWORD PTR [r14+0x40]
  41dca2:	mov    rdx,QWORD PTR [rdi+0x50]
  41dca6:	cmp    rdx,rbx
  41dca9:	ja     41dcb1 <isspace@plt+0x1a3a1>
  41dcab:	cmp    QWORD PTR [rdi+0x58],rbx
  41dcaf:	jae    41dcef <isspace@plt+0x1a3df>
  41dcb1:	mov    QWORD PTR [r14+0x30],0x0
  41dcb9:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
  41dcc1:	cmp    QWORD PTR [rdi+0x98],r14
  41dcc8:	jne    41dd5c <isspace@plt+0x1a44c>
  41dcce:	mov    rax,QWORD PTR [rdi+0x80]
  41dcd5:	mov    QWORD PTR [r14+0x30],rax
  41dcd9:	mov    QWORD PTR [r14+0x20],0x0
  41dce1:	jmp    41dd5c <isspace@plt+0x1a44c>
  41dce3:	mov    QWORD PTR [r14+0x8],rax
  41dce7:	cmp    QWORD PTR [r14+0x18],rbx
  41dceb:	jne    41dc92 <isspace@plt+0x1a382>
  41dced:	jmp    41dc9a <isspace@plt+0x1a38a>
  41dcef:	mov    r11,QWORD PTR [rdi+0x80]
  41dcf6:	test   r11,r11
  41dcf9:	je     41dd3b <isspace@plt+0x1a42b>
  41dcfb:	mov    rsi,QWORD PTR [rdi+0x88]
  41dd02:	xor    r10d,r10d
  41dd05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dd0f:	nop
  41dd10:	cmp    rdx,rbx
  41dd13:	setb   cl
  41dd16:	cmp    r11,rsi
  41dd19:	je     41dd87 <isspace@plt+0x1a477>
  41dd1b:	cmp    rdx,rbx
  41dd1e:	jae    41dd87 <isspace@plt+0x1a477>
  41dd20:	mov    rax,QWORD PTR [r11+0x10]
  41dd24:	add    rax,rdx
  41dd27:	cmp    rax,rbx
  41dd2a:	ja     41dd85 <isspace@plt+0x1a475>
  41dd2c:	inc    r10d
  41dd2f:	mov    r11,QWORD PTR [r11+0x8]
  41dd33:	mov    rdx,rax
  41dd36:	test   r11,r11
  41dd39:	jne    41dd10 <isspace@plt+0x1a400>
  41dd3b:	mov    r11,QWORD PTR [rdi+0x90]
  41dd42:	mov    r10d,DWORD PTR [rdi+0x4c]
  41dd46:	dec    r10d
  41dd49:	xor    eax,eax
  41dd4b:	mov    QWORD PTR [r14+0x30],r11
  41dd4f:	mov    DWORD PTR [r14+0x20],r10d
  41dd53:	mov    DWORD PTR [r14+0x24],eax
  41dd57:	call   419f00 <isspace@plt+0x165f0>
  41dd5c:	mov    DWORD PTR [r14+0x28],r12d
  41dd60:	mov    rax,QWORD PTR [r14+0x18]
  41dd64:	mov    rcx,QWORD PTR fs:0x28
  41dd6d:	cmp    rcx,QWORD PTR [rsp+0x28]
  41dd72:	jne    41ddf9 <isspace@plt+0x1a4e9>
  41dd78:	add    rsp,0x30
  41dd7c:	pop    rbx
  41dd7d:	pop    r12
  41dd7f:	pop    r14
  41dd81:	pop    r15
  41dd83:	pop    rbp
  41dd84:	ret    
  41dd85:	mov    cl,0x1
  41dd87:	mov    r8d,DWORD PTR [rdi+0x48]
  41dd8b:	mov    eax,DWORD PTR [r11+0x20]
  41dd8f:	cmp    r8d,eax
  41dd92:	cmovg  r8d,eax
  41dd96:	xor    eax,eax
  41dd98:	test   cl,cl
  41dd9a:	je     41dd4b <isspace@plt+0x1a43b>
  41dd9c:	test   r8d,r8d
  41dd9f:	jle    41dd4b <isspace@plt+0x1a43b>
  41dda1:	movsxd rbp,r8d
  41dda4:	lea    r9,[r11+0x68]
  41dda8:	xor    eax,eax
  41ddaa:	nop    WORD PTR [rax+rax*1+0x0]
  41ddb0:	movsxd rsi,eax
  41ddb3:	mov    rax,rsi
  41ddb6:	shl    rax,0x4
  41ddba:	lea    rcx,[rax+rax*2]
  41ddbe:	add    rdx,QWORD PTR [r11+rcx*1+0x38]
  41ddc3:	inc    rsi
  41ddc6:	add    rcx,r9
  41ddc9:	nop    DWORD PTR [rax+0x0]
  41ddd0:	mov    rax,rsi
  41ddd3:	cmp    rsi,rbp
  41ddd6:	jge    41dde6 <isspace@plt+0x1a4d6>
  41ddd8:	lea    rsi,[rax+0x1]
  41dddc:	cmp    QWORD PTR [rcx],0x0
  41dde0:	lea    rcx,[rcx+0x30]
  41dde4:	je     41ddd0 <isspace@plt+0x1a4c0>
  41dde6:	cmp    rdx,rbx
  41dde9:	jae    41dd4b <isspace@plt+0x1a43b>
  41ddef:	cmp    r8d,eax
  41ddf2:	jg     41ddb0 <isspace@plt+0x1a4a0>
  41ddf4:	jmp    41dd4b <isspace@plt+0x1a43b>
  41ddf9:	call   403280 <__stack_chk_fail@plt>
  41ddfe:	xchg   ax,ax
  41de00:	push   r15
  41de02:	push   r14
  41de04:	push   rbx
  41de05:	sub    rsp,0x40
  41de09:	mov    r14,rdi
  41de0c:	mov    rax,QWORD PTR fs:0x28
  41de15:	mov    QWORD PTR [rsp+0x38],rax
  41de1a:	mov    rsi,QWORD PTR [rdi+0x30]
  41de1e:	test   rsi,rsi
  41de21:	je     41dea6 <isspace@plt+0x1a596>
  41de27:	mov    edi,DWORD PTR [rsi+0x20]
  41de2a:	mov    eax,edi
  41de2c:	shr    eax,0x1f
  41de2f:	add    eax,edi
  41de31:	mov    r9,QWORD PTR [r14+0x40]
  41de35:	mov    rbx,QWORD PTR [r9+0x50]
  41de39:	mov    rcx,QWORD PTR [r9+0x80]
  41de40:	xor    edx,edx
  41de42:	test   rcx,rcx
  41de45:	je     41de64 <isspace@plt+0x1a554>
  41de47:	cmp    rcx,rsi
  41de4a:	je     41de64 <isspace@plt+0x1a554>
  41de4c:	xor    edx,edx
  41de4e:	xchg   ax,ax
  41de50:	add    rbx,QWORD PTR [rcx+0x10]
  41de54:	inc    edx
  41de56:	mov    rcx,QWORD PTR [rcx+0x8]
  41de5a:	test   rcx,rcx
  41de5d:	je     41de64 <isspace@plt+0x1a554>
  41de5f:	cmp    rcx,rsi
  41de62:	jne    41de50 <isspace@plt+0x1a540>
  41de64:	sar    eax,1
  41de66:	cmp    edi,0x2
  41de69:	jl     41dffc <isspace@plt+0x1a6ec>
  41de6f:	cdqe   
  41de71:	lea    rcx,[rax+rax*2]
  41de75:	shl    rcx,0x4
  41de79:	add    rcx,rsi
  41de7c:	add    rcx,0x38
  41de80:	cmp    QWORD PTR [rcx],0x0
  41de84:	jne    41de8f <isspace@plt+0x1a57f>
  41de86:	add    rcx,0xffffffffffffffd0
  41de8a:	dec    rax
  41de8d:	jg     41de80 <isspace@plt+0x1a570>
  41de8f:	test   eax,eax
  41de91:	jle    41dffc <isspace@plt+0x1a6ec>
  41de97:	mov    edi,eax
  41de99:	cmp    eax,0x11
  41de9c:	jae    41deaf <isspace@plt+0x1a59f>
  41de9e:	xor    r8d,r8d
  41dea1:	jmp    41dfd7 <isspace@plt+0x1a6c7>
  41dea6:	mov    rbx,QWORD PTR [r14+0x18]
  41deaa:	jmp    41e0ec <isspace@plt+0x1a7dc>
  41deaf:	mov    ecx,edi
  41deb1:	and    ecx,0xf
  41deb4:	test   rcx,rcx
  41deb7:	mov    r10d,0x10
  41debd:	cmovne r10,rcx
  41dec1:	mov    r8,rdi
  41dec4:	sub    r8,r10
  41dec7:	vmovq  xmm0,rbx
  41decc:	vpxor  xmm1,xmm1,xmm1
  41ded0:	vmovdqa ymm2,YMMWORD PTR [rip+0x12d28]        # 430c00 <isspace@plt+0x2d2f0>
  41ded8:	vpbroadcastq ymm3,QWORD PTR [rip+0x12d3f]        # 430c20 <isspace@plt+0x2d310>
  41dee1:	vpbroadcastq ymm4,QWORD PTR [rip+0x12d3e]        # 430c28 <isspace@plt+0x2d318>
  41deea:	vmovdqu YMMWORD PTR [rsp],ymm4
  41deef:	vpbroadcastq ymm5,QWORD PTR [rip+0x12d38]        # 430c30 <isspace@plt+0x2d320>
  41def8:	vpbroadcastq ymm6,QWORD PTR [rip+0x12d37]        # 430c38 <isspace@plt+0x2d328>
  41df01:	vpbroadcastq ymm7,QWORD PTR [rip+0x12d36]        # 430c40 <isspace@plt+0x2d330>
  41df0a:	vpbroadcastq ymm8,QWORD PTR [rip+0x12d35]        # 430c48 <isspace@plt+0x2d338>
  41df13:	mov    rbx,r8
  41df16:	vpxor  xmm9,xmm9,xmm9
  41df1b:	vpxor  xmm10,xmm10,xmm10
  41df20:	vpmuludq ymm11,ymm2,ymm3
  41df24:	vpsrlq ymm12,ymm2,0x20
  41df29:	vpmuludq ymm12,ymm12,ymm3
  41df2d:	vpsllq ymm12,ymm12,0x20
  41df33:	vmovq  xmm4,rsi
  41df38:	vpbroadcastq ymm4,xmm4
  41df3d:	vpaddq ymm4,ymm11,ymm4
  41df41:	vpaddq ymm4,ymm12,ymm4
  41df45:	vpaddq ymm11,ymm4,YMMWORD PTR [rsp]
  41df4a:	vpaddq ymm12,ymm4,ymm6
  41df4e:	vpaddq ymm14,ymm4,ymm7
  41df52:	vpaddq ymm4,ymm4,ymm8
  41df57:	vpcmpeqd ymm15,ymm15,ymm15
  41df5c:	vpgatherqq ymm13,QWORD PTR [ymm11*1+0x0],ymm15
  41df66:	vpcmpeqd ymm11,ymm11,ymm11
  41df6b:	vpgatherqq ymm15,QWORD PTR [ymm12*1+0x0],ymm11
  41df75:	vpcmpeqd ymm11,ymm11,ymm11
  41df7a:	vpgatherqq ymm12,QWORD PTR [ymm14*1+0x0],ymm11
  41df84:	vpcmpeqd ymm11,ymm11,ymm11
  41df89:	vpgatherqq ymm14,QWORD PTR [ymm4*1+0x0],ymm11
  41df93:	vpaddq ymm0,ymm13,ymm0
  41df97:	vpaddq ymm1,ymm15,ymm1
  41df9b:	vpaddq ymm9,ymm12,ymm9
  41dfa0:	vpaddq ymm10,ymm14,ymm10
  41dfa5:	vpaddq ymm2,ymm2,ymm5
  41dfa9:	add    rbx,0xfffffffffffffff0
  41dfad:	jne    41df20 <isspace@plt+0x1a610>
  41dfb3:	vpaddq ymm0,ymm1,ymm0
  41dfb7:	vpaddq ymm0,ymm9,ymm0
  41dfbb:	vpaddq ymm0,ymm10,ymm0
  41dfbf:	vextracti128 xmm1,ymm0,0x1
  41dfc5:	vpaddq xmm0,xmm0,xmm1
  41dfc9:	vpshufd xmm1,xmm0,0x4e
  41dfce:	vpaddq xmm0,xmm0,xmm1
  41dfd2:	vmovq  rbx,xmm0
  41dfd7:	sub    rdi,r8
  41dfda:	lea    rcx,[r8+r8*2]
  41dfde:	shl    rcx,0x4
  41dfe2:	add    rcx,rsi
  41dfe5:	add    rcx,0x38
  41dfe9:	nop    DWORD PTR [rax+0x0]
  41dff0:	add    rbx,QWORD PTR [rcx]
  41dff3:	add    rcx,0x30
  41dff7:	dec    rdi
  41dffa:	jne    41dff0 <isspace@plt+0x1a6e0>
  41dffc:	mov    DWORD PTR [r14+0x24],eax
  41e000:	mov    DWORD PTR [r14+0x20],edx
  41e004:	mov    rdi,QWORD PTR [r9]
  41e007:	mov    rsi,rbx
  41e00a:	vzeroupper 
  41e00d:	call   410d60 <isspace@plt+0xd450>
  41e012:	mov    QWORD PTR [r14],rax
  41e015:	cmp    BYTE PTR [r14+0x10],0x0
  41e01a:	je     41e073 <isspace@plt+0x1a763>
  41e01c:	cmp    QWORD PTR [r14+0x18],rbx
  41e020:	je     41e02a <isspace@plt+0x1a71a>
  41e022:	mov    DWORD PTR [r14+0x28],0x0
  41e02a:	mov    QWORD PTR [r14+0x18],rbx
  41e02e:	mov    rdi,QWORD PTR [r14+0x40]
  41e032:	mov    r15,QWORD PTR [rdi+0x50]
  41e036:	cmp    r15,rbx
  41e039:	ja     41e041 <isspace@plt+0x1a731>
  41e03b:	cmp    QWORD PTR [rdi+0x58],rbx
  41e03f:	jae    41e07f <isspace@plt+0x1a76f>
  41e041:	mov    QWORD PTR [r14+0x30],0x0
  41e049:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
  41e051:	cmp    QWORD PTR [rdi+0x98],r14
  41e058:	jne    41e0ec <isspace@plt+0x1a7dc>
  41e05e:	mov    rax,QWORD PTR [rdi+0x80]
  41e065:	mov    QWORD PTR [r14+0x30],rax
  41e069:	mov    QWORD PTR [r14+0x20],0x0
  41e071:	jmp    41e0ec <isspace@plt+0x1a7dc>
  41e073:	mov    QWORD PTR [r14+0x8],rax
  41e077:	cmp    QWORD PTR [r14+0x18],rbx
  41e07b:	jne    41e022 <isspace@plt+0x1a712>
  41e07d:	jmp    41e02a <isspace@plt+0x1a71a>
  41e07f:	mov    r11,QWORD PTR [rdi+0x80]
  41e086:	test   r11,r11
  41e089:	je     41e0cb <isspace@plt+0x1a7bb>
  41e08b:	mov    rcx,QWORD PTR [rdi+0x88]
  41e092:	xor    r9d,r9d
  41e095:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e09f:	nop
  41e0a0:	cmp    r15,rbx
  41e0a3:	setb   al
  41e0a6:	cmp    r11,rcx
  41e0a9:	je     41e10b <isspace@plt+0x1a7fb>
  41e0ab:	cmp    r15,rbx
  41e0ae:	jae    41e10b <isspace@plt+0x1a7fb>
  41e0b0:	mov    rax,QWORD PTR [r11+0x10]
  41e0b4:	add    rax,r15
  41e0b7:	cmp    rax,rbx
  41e0ba:	ja     41e109 <isspace@plt+0x1a7f9>
  41e0bc:	inc    r9d
  41e0bf:	mov    r11,QWORD PTR [r11+0x8]
  41e0c3:	mov    r15,rax
  41e0c6:	test   r11,r11
  41e0c9:	jne    41e0a0 <isspace@plt+0x1a790>
  41e0cb:	mov    r11,QWORD PTR [rdi+0x90]
  41e0d2:	mov    r9d,DWORD PTR [rdi+0x4c]
  41e0d6:	dec    r9d
  41e0d9:	xor    edx,edx
  41e0db:	mov    QWORD PTR [r14+0x30],r11
  41e0df:	mov    DWORD PTR [r14+0x20],r9d
  41e0e3:	mov    DWORD PTR [r14+0x24],edx
  41e0e7:	call   419f00 <isspace@plt+0x165f0>
  41e0ec:	mov    rax,QWORD PTR fs:0x28
  41e0f5:	cmp    rax,QWORD PTR [rsp+0x38]
  41e0fa:	jne    41e179 <isspace@plt+0x1a869>
  41e0fc:	mov    rax,rbx
  41e0ff:	add    rsp,0x40
  41e103:	pop    rbx
  41e104:	pop    r14
  41e106:	pop    r15
  41e108:	ret    
  41e109:	mov    al,0x1
  41e10b:	mov    r8d,DWORD PTR [rdi+0x48]
  41e10f:	mov    ecx,DWORD PTR [r11+0x20]
  41e113:	cmp    r8d,ecx
  41e116:	cmovg  r8d,ecx
  41e11a:	xor    edx,edx
  41e11c:	test   al,al
  41e11e:	je     41e0db <isspace@plt+0x1a7cb>
  41e120:	test   r8d,r8d
  41e123:	jle    41e0db <isspace@plt+0x1a7cb>
  41e125:	movsxd rcx,r8d
  41e128:	lea    r10,[r11+0x68]
  41e12c:	xor    edx,edx
  41e12e:	xchg   ax,ax
  41e130:	movsxd rsi,edx
  41e133:	mov    rax,rsi
  41e136:	shl    rax,0x4
  41e13a:	lea    rax,[rax+rax*2]
  41e13e:	add    r15,QWORD PTR [r11+rax*1+0x38]
  41e143:	inc    rsi
  41e146:	add    rax,r10
  41e149:	nop    DWORD PTR [rax+0x0]
  41e150:	mov    rdx,rsi
  41e153:	cmp    rsi,rcx
  41e156:	jge    41e166 <isspace@plt+0x1a856>
  41e158:	lea    rsi,[rdx+0x1]
  41e15c:	cmp    QWORD PTR [rax],0x0
  41e160:	lea    rax,[rax+0x30]
  41e164:	je     41e150 <isspace@plt+0x1a840>
  41e166:	cmp    r15,rbx
  41e169:	jae    41e0db <isspace@plt+0x1a7cb>
  41e16f:	cmp    r8d,edx
  41e172:	jg     41e130 <isspace@plt+0x1a820>
  41e174:	jmp    41e0db <isspace@plt+0x1a7cb>
  41e179:	call   403280 <__stack_chk_fail@plt>
  41e17e:	xchg   ax,ax
  41e180:	push   r15
  41e182:	push   r14
  41e184:	push   rbx
  41e185:	sub    rsp,0x40
  41e189:	mov    r14,rdi
  41e18c:	mov    rax,QWORD PTR fs:0x28
  41e195:	mov    QWORD PTR [rsp+0x38],rax
  41e19a:	mov    rsi,QWORD PTR [rdi+0x30]
  41e19e:	test   rsi,rsi
  41e1a1:	je     41e21a <isspace@plt+0x1a90a>
  41e1a3:	mov    ecx,DWORD PTR [rsi+0x20]
  41e1a6:	lea    edx,[rcx-0x1]
  41e1a9:	xor    eax,eax
  41e1ab:	test   ecx,ecx
  41e1ad:	mov    ecx,0x0
  41e1b2:	cmovg  ecx,edx
  41e1b5:	mov    r8,QWORD PTR [r14+0x40]
  41e1b9:	mov    rbx,QWORD PTR [r8+0x50]
  41e1bd:	mov    rdi,QWORD PTR [r8+0x80]
  41e1c4:	test   rdi,rdi
  41e1c7:	je     41e1e4 <isspace@plt+0x1a8d4>
  41e1c9:	cmp    rdi,rsi
  41e1cc:	je     41e1e4 <isspace@plt+0x1a8d4>
  41e1ce:	xor    eax,eax
  41e1d0:	add    rbx,QWORD PTR [rdi+0x10]
  41e1d4:	inc    eax
  41e1d6:	mov    rdi,QWORD PTR [rdi+0x8]
  41e1da:	test   rdi,rdi
  41e1dd:	je     41e1e4 <isspace@plt+0x1a8d4>
  41e1df:	cmp    rdi,rsi
  41e1e2:	jne    41e1d0 <isspace@plt+0x1a8c0>
  41e1e4:	test   ecx,ecx
  41e1e6:	jle    41e38e <isspace@plt+0x1aa7e>
  41e1ec:	movsxd rcx,ecx
  41e1ef:	lea    rdi,[rcx+rcx*2]
  41e1f3:	shl    rdi,0x4
  41e1f7:	add    rdi,rsi
  41e1fa:	add    rdi,0x38
  41e1fe:	xchg   ax,ax
  41e200:	cmp    QWORD PTR [rdi],0x0
  41e204:	jne    41e223 <isspace@plt+0x1a913>
  41e206:	dec    edx
  41e208:	add    rdi,0xffffffffffffffd0
  41e20c:	dec    rcx
  41e20f:	jg     41e200 <isspace@plt+0x1a8f0>
  41e211:	test   edx,edx
  41e213:	jg     41e22d <isspace@plt+0x1a91d>
  41e215:	jmp    41e38c <isspace@plt+0x1aa7c>
  41e21a:	mov    rbx,QWORD PTR [r14+0x18]
  41e21e:	jmp    41e47c <isspace@plt+0x1ab6c>
  41e223:	mov    edx,ecx
  41e225:	test   edx,edx
  41e227:	jle    41e38c <isspace@plt+0x1aa7c>
  41e22d:	mov    edi,edx
  41e22f:	cmp    edx,0x11
  41e232:	jae    41e23c <isspace@plt+0x1a92c>
  41e234:	xor    r9d,r9d
  41e237:	jmp    41e367 <isspace@plt+0x1aa57>
  41e23c:	mov    ecx,edi
  41e23e:	and    ecx,0xf
  41e241:	test   rcx,rcx
  41e244:	mov    r10d,0x10
  41e24a:	cmovne r10,rcx
  41e24e:	mov    r9,rdi
  41e251:	sub    r9,r10
  41e254:	vmovq  xmm0,rbx
  41e259:	vpxor  xmm1,xmm1,xmm1
  41e25d:	vmovdqa ymm2,YMMWORD PTR [rip+0x1299b]        # 430c00 <isspace@plt+0x2d2f0>
  41e265:	vpbroadcastq ymm3,QWORD PTR [rip+0x129b2]        # 430c20 <isspace@plt+0x2d310>
  41e26e:	vpbroadcastq ymm4,QWORD PTR [rip+0x129b1]        # 430c28 <isspace@plt+0x2d318>
  41e277:	vmovdqu YMMWORD PTR [rsp],ymm4
  41e27c:	vpbroadcastq ymm5,QWORD PTR [rip+0x129ab]        # 430c30 <isspace@plt+0x2d320>
  41e285:	vpbroadcastq ymm6,QWORD PTR [rip+0x129aa]        # 430c38 <isspace@plt+0x2d328>
  41e28e:	vpbroadcastq ymm7,QWORD PTR [rip+0x129a9]        # 430c40 <isspace@plt+0x2d330>
  41e297:	vpbroadcastq ymm8,QWORD PTR [rip+0x129a8]        # 430c48 <isspace@plt+0x2d338>
  41e2a0:	mov    rcx,r9
  41e2a3:	vpxor  xmm9,xmm9,xmm9
  41e2a8:	vpxor  xmm10,xmm10,xmm10
  41e2ad:	nop    DWORD PTR [rax]
  41e2b0:	vpmuludq ymm11,ymm2,ymm3
  41e2b4:	vpsrlq ymm12,ymm2,0x20
  41e2b9:	vpmuludq ymm12,ymm12,ymm3
  41e2bd:	vpsllq ymm12,ymm12,0x20
  41e2c3:	vmovq  xmm4,rsi
  41e2c8:	vpbroadcastq ymm4,xmm4
  41e2cd:	vpaddq ymm4,ymm11,ymm4
  41e2d1:	vpaddq ymm4,ymm12,ymm4
  41e2d5:	vpaddq ymm11,ymm4,YMMWORD PTR [rsp]
  41e2da:	vpaddq ymm12,ymm4,ymm6
  41e2de:	vpaddq ymm14,ymm4,ymm7
  41e2e2:	vpaddq ymm4,ymm4,ymm8
  41e2e7:	vpcmpeqd ymm15,ymm15,ymm15
  41e2ec:	vpgatherqq ymm13,QWORD PTR [ymm11*1+0x0],ymm15
  41e2f6:	vpcmpeqd ymm11,ymm11,ymm11
  41e2fb:	vpgatherqq ymm15,QWORD PTR [ymm12*1+0x0],ymm11
  41e305:	vpcmpeqd ymm11,ymm11,ymm11
  41e30a:	vpgatherqq ymm12,QWORD PTR [ymm14*1+0x0],ymm11
  41e314:	vpcmpeqd ymm11,ymm11,ymm11
  41e319:	vpgatherqq ymm14,QWORD PTR [ymm4*1+0x0],ymm11
  41e323:	vpaddq ymm0,ymm13,ymm0
  41e327:	vpaddq ymm1,ymm15,ymm1
  41e32b:	vpaddq ymm9,ymm12,ymm9
  41e330:	vpaddq ymm10,ymm14,ymm10
  41e335:	vpaddq ymm2,ymm2,ymm5
  41e339:	add    rcx,0xfffffffffffffff0
  41e33d:	jne    41e2b0 <isspace@plt+0x1a9a0>
  41e343:	vpaddq ymm0,ymm1,ymm0
  41e347:	vpaddq ymm0,ymm9,ymm0
  41e34b:	vpaddq ymm0,ymm10,ymm0
  41e34f:	vextracti128 xmm1,ymm0,0x1
  41e355:	vpaddq xmm0,xmm0,xmm1
  41e359:	vpshufd xmm1,xmm0,0x4e
  41e35e:	vpaddq xmm0,xmm0,xmm1
  41e362:	vmovq  rbx,xmm0
  41e367:	sub    rdi,r9
  41e36a:	lea    rcx,[r9+r9*2]
  41e36e:	shl    rcx,0x4
  41e372:	add    rcx,rsi
  41e375:	add    rcx,0x38
  41e379:	nop    DWORD PTR [rax+0x0]
  41e380:	add    rbx,QWORD PTR [rcx]
  41e383:	add    rcx,0x30
  41e387:	dec    rdi
  41e38a:	jne    41e380 <isspace@plt+0x1aa70>
  41e38c:	mov    ecx,edx
  41e38e:	mov    DWORD PTR [r14+0x24],ecx
  41e392:	mov    DWORD PTR [r14+0x20],eax
  41e396:	mov    rdi,QWORD PTR [r8]
  41e399:	mov    rsi,rbx
  41e39c:	vzeroupper 
  41e39f:	call   410d60 <isspace@plt+0xd450>
  41e3a4:	mov    QWORD PTR [r14],rax
  41e3a7:	cmp    BYTE PTR [r14+0x10],0x0
  41e3ac:	je     41e405 <isspace@plt+0x1aaf5>
  41e3ae:	cmp    QWORD PTR [r14+0x18],rbx
  41e3b2:	je     41e3bc <isspace@plt+0x1aaac>
  41e3b4:	mov    DWORD PTR [r14+0x28],0x0
  41e3bc:	mov    QWORD PTR [r14+0x18],rbx
  41e3c0:	mov    rdi,QWORD PTR [r14+0x40]
  41e3c4:	mov    r15,QWORD PTR [rdi+0x50]
  41e3c8:	cmp    r15,rbx
  41e3cb:	ja     41e3d3 <isspace@plt+0x1aac3>
  41e3cd:	cmp    QWORD PTR [rdi+0x58],rbx
  41e3d1:	jae    41e411 <isspace@plt+0x1ab01>
  41e3d3:	mov    QWORD PTR [r14+0x30],0x0
  41e3db:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
  41e3e3:	cmp    QWORD PTR [rdi+0x98],r14
  41e3ea:	jne    41e47c <isspace@plt+0x1ab6c>
  41e3f0:	mov    rax,QWORD PTR [rdi+0x80]
  41e3f7:	mov    QWORD PTR [r14+0x30],rax
  41e3fb:	mov    QWORD PTR [r14+0x20],0x0
  41e403:	jmp    41e47c <isspace@plt+0x1ab6c>
  41e405:	mov    QWORD PTR [r14+0x8],rax
  41e409:	cmp    QWORD PTR [r14+0x18],rbx
  41e40d:	jne    41e3b4 <isspace@plt+0x1aaa4>
  41e40f:	jmp    41e3bc <isspace@plt+0x1aaac>
  41e411:	mov    r11,QWORD PTR [rdi+0x80]
  41e418:	test   r11,r11
  41e41b:	je     41e45b <isspace@plt+0x1ab4b>
  41e41d:	mov    rcx,QWORD PTR [rdi+0x88]
  41e424:	xor    r9d,r9d
  41e427:	nop    WORD PTR [rax+rax*1+0x0]
  41e430:	cmp    r15,rbx
  41e433:	setb   al
  41e436:	cmp    r11,rcx
  41e439:	je     41e49b <isspace@plt+0x1ab8b>
  41e43b:	cmp    r15,rbx
  41e43e:	jae    41e49b <isspace@plt+0x1ab8b>
  41e440:	mov    rax,QWORD PTR [r11+0x10]
  41e444:	add    rax,r15
  41e447:	cmp    rax,rbx
  41e44a:	ja     41e499 <isspace@plt+0x1ab89>
  41e44c:	inc    r9d
  41e44f:	mov    r11,QWORD PTR [r11+0x8]
  41e453:	mov    r15,rax
  41e456:	test   r11,r11
  41e459:	jne    41e430 <isspace@plt+0x1ab20>
  41e45b:	mov    r11,QWORD PTR [rdi+0x90]
  41e462:	mov    r9d,DWORD PTR [rdi+0x4c]
  41e466:	dec    r9d
  41e469:	xor    edx,edx
  41e46b:	mov    QWORD PTR [r14+0x30],r11
  41e46f:	mov    DWORD PTR [r14+0x20],r9d
  41e473:	mov    DWORD PTR [r14+0x24],edx
  41e477:	call   419f00 <isspace@plt+0x165f0>
  41e47c:	mov    rax,QWORD PTR fs:0x28
  41e485:	cmp    rax,QWORD PTR [rsp+0x38]
  41e48a:	jne    41e509 <isspace@plt+0x1abf9>
  41e48c:	mov    rax,rbx
  41e48f:	add    rsp,0x40
  41e493:	pop    rbx
  41e494:	pop    r14
  41e496:	pop    r15
  41e498:	ret    
  41e499:	mov    al,0x1
  41e49b:	mov    r8d,DWORD PTR [rdi+0x48]
  41e49f:	mov    ecx,DWORD PTR [r11+0x20]
  41e4a3:	cmp    r8d,ecx
  41e4a6:	cmovg  r8d,ecx
  41e4aa:	xor    edx,edx
  41e4ac:	test   al,al
  41e4ae:	je     41e46b <isspace@plt+0x1ab5b>
  41e4b0:	test   r8d,r8d
  41e4b3:	jle    41e46b <isspace@plt+0x1ab5b>
  41e4b5:	movsxd rcx,r8d
  41e4b8:	lea    r10,[r11+0x68]
  41e4bc:	xor    edx,edx
  41e4be:	xchg   ax,ax
  41e4c0:	movsxd rsi,edx
  41e4c3:	mov    rax,rsi
  41e4c6:	shl    rax,0x4
  41e4ca:	lea    rax,[rax+rax*2]
  41e4ce:	add    r15,QWORD PTR [r11+rax*1+0x38]
  41e4d3:	inc    rsi
  41e4d6:	add    rax,r10
  41e4d9:	nop    DWORD PTR [rax+0x0]
  41e4e0:	mov    rdx,rsi
  41e4e3:	cmp    rsi,rcx
  41e4e6:	jge    41e4f6 <isspace@plt+0x1abe6>
  41e4e8:	lea    rsi,[rdx+0x1]
  41e4ec:	cmp    QWORD PTR [rax],0x0
  41e4f0:	lea    rax,[rax+0x30]
  41e4f4:	je     41e4e0 <isspace@plt+0x1abd0>
  41e4f6:	cmp    r15,rbx
  41e4f9:	jae    41e46b <isspace@plt+0x1ab5b>
  41e4ff:	cmp    r8d,edx
  41e502:	jg     41e4c0 <isspace@plt+0x1abb0>
  41e504:	jmp    41e46b <isspace@plt+0x1ab5b>
  41e509:	call   403280 <__stack_chk_fail@plt>
  41e50e:	xchg   ax,ax
  41e510:	push   rax
  41e511:	mov    rax,QWORD PTR fs:0x28
  41e51a:	mov    QWORD PTR [rsp],rax
  41e51e:	mov    rax,QWORD PTR [rdi+0x98]
  41e525:	mov    rsi,QWORD PTR [rax]
  41e528:	mov    rax,QWORD PTR [rax+0x40]
  41e52c:	mov    rdi,QWORD PTR [rax]
  41e52f:	call   410e10 <isspace@plt+0xd500>
  41e534:	mov    rcx,QWORD PTR fs:0x28
  41e53d:	cmp    rcx,QWORD PTR [rsp]
  41e541:	jne    41e545 <isspace@plt+0x1ac35>
  41e543:	pop    rcx
  41e544:	ret    
  41e545:	call   403280 <__stack_chk_fail@plt>
  41e54a:	nop    WORD PTR [rax+rax*1+0x0]
  41e550:	push   rax
  41e551:	mov    rax,QWORD PTR fs:0x28
  41e55a:	mov    QWORD PTR [rsp],rax
  41e55e:	mov    rax,QWORD PTR [rdi+0x80]
  41e565:	mov    rcx,QWORD PTR fs:0x28
  41e56e:	cmp    rcx,QWORD PTR [rsp]
  41e572:	jne    41e576 <isspace@plt+0x1ac66>
  41e574:	pop    rcx
  41e575:	ret    
  41e576:	call   403280 <__stack_chk_fail@plt>
  41e57b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e580:	push   rax
  41e581:	mov    rax,QWORD PTR fs:0x28
  41e58a:	mov    QWORD PTR [rsp],rax
  41e58e:	mov    rax,QWORD PTR [rdi+0x88]
  41e595:	mov    rcx,QWORD PTR fs:0x28
  41e59e:	cmp    rcx,QWORD PTR [rsp]
  41e5a2:	jne    41e5a6 <isspace@plt+0x1ac96>
  41e5a4:	pop    rcx
  41e5a5:	ret    
  41e5a6:	call   403280 <__stack_chk_fail@plt>
  41e5ab:	nop    DWORD PTR [rax+rax*1+0x0]
  41e5b0:	push   rax
  41e5b1:	mov    rax,QWORD PTR fs:0x28
  41e5ba:	mov    QWORD PTR [rsp],rax
  41e5be:	mov    rax,QWORD PTR [rdi+0x30]
  41e5c2:	mov    rcx,QWORD PTR fs:0x28
  41e5cb:	cmp    rcx,QWORD PTR [rsp]
  41e5cf:	jne    41e5d3 <isspace@plt+0x1acc3>
  41e5d1:	pop    rcx
  41e5d2:	ret    
  41e5d3:	call   403280 <__stack_chk_fail@plt>
  41e5d8:	nop    DWORD PTR [rax+rax*1+0x0]
  41e5e0:	push   r15
  41e5e2:	push   r14
  41e5e4:	push   r12
  41e5e6:	push   rbx
  41e5e7:	push   rax
  41e5e8:	mov    r15,rsi
  41e5eb:	mov    r14,rdi
  41e5ee:	mov    rax,QWORD PTR fs:0x28
  41e5f7:	mov    QWORD PTR [rsp],rax
  41e5fb:	mov    r12,QWORD PTR [rdi+0x40]
  41e5ff:	cmp    QWORD PTR [r12+0x98],rdi
  41e607:	jne    41e68a <isspace@plt+0x1ad7a>
  41e60d:	mov    rdi,r12
  41e610:	call   419f00 <isspace@plt+0x165f0>
  41e615:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e61f:	nop
  41e620:	cmp    QWORD PTR [r12+0x50],r15
  41e625:	jbe    41e652 <isspace@plt+0x1ad42>
  41e627:	mov    rdi,r12
  41e62a:	mov    esi,0x1
  41e62f:	call   41be10 <isspace@plt+0x18500>
  41e634:	test   al,al
  41e636:	jne    41e620 <isspace@plt+0x1ad10>
  41e638:	jmp    41e652 <isspace@plt+0x1ad42>
  41e63a:	nop    WORD PTR [rax+rax*1+0x0]
  41e640:	mov    rax,QWORD PTR [r12+0x58]
  41e645:	mov    QWORD PTR [r12+0x50],rax
  41e64a:	mov    rdi,r12
  41e64d:	call   419f00 <isspace@plt+0x165f0>
  41e652:	mov    rbx,QWORD PTR [r12+0x58]
  41e657:	cmp    rbx,r15
  41e65a:	jae    41e68a <isspace@plt+0x1ad7a>
  41e65c:	mov    rdi,QWORD PTR [r12]
  41e660:	call   410890 <isspace@plt+0xcf80>
  41e665:	cmp    rbx,rax
  41e668:	jae    41e68a <isspace@plt+0x1ad7a>
  41e66a:	cmp    DWORD PTR [r12+0x4c],0x1
  41e670:	jle    41e640 <isspace@plt+0x1ad30>
  41e672:	mov    rax,QWORD PTR [r12+0x80]
  41e67a:	test   rax,rax
  41e67d:	je     41e64a <isspace@plt+0x1ad3a>
  41e67f:	mov    rax,QWORD PTR [rax+0x10]
  41e683:	add    rax,QWORD PTR [r12+0x50]
  41e688:	jmp    41e645 <isspace@plt+0x1ad35>
  41e68a:	mov    rdi,r14
  41e68d:	mov    rsi,r15
  41e690:	call   41a7c0 <isspace@plt+0x16eb0>
  41e695:	mov    rax,QWORD PTR fs:0x28
  41e69e:	cmp    rax,QWORD PTR [rsp]
  41e6a2:	jne    41e6b0 <isspace@plt+0x1ada0>
  41e6a4:	add    rsp,0x8
  41e6a8:	pop    rbx
  41e6a9:	pop    r12
  41e6ab:	pop    r14
  41e6ad:	pop    r15
  41e6af:	ret    
  41e6b0:	call   403280 <__stack_chk_fail@plt>
  41e6b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e6bf:	nop
  41e6c0:	push   rax
  41e6c1:	mov    rax,QWORD PTR fs:0x28
  41e6ca:	mov    QWORD PTR [rsp],rax
  41e6ce:	mov    rdi,QWORD PTR [rdi+0x10]
  41e6d2:	test   rdi,rdi
  41e6d5:	je     41e6eb <isspace@plt+0x1addb>
  41e6d7:	call   QWORD PTR [rdi+0x18]
  41e6da:	mov    rcx,QWORD PTR fs:0x28
  41e6e3:	cmp    rcx,QWORD PTR [rsp]
  41e6e7:	jne    41e6fe <isspace@plt+0x1adee>
  41e6e9:	pop    rcx
  41e6ea:	ret    
  41e6eb:	mov    rax,QWORD PTR fs:0x28
  41e6f4:	cmp    rax,QWORD PTR [rsp]
  41e6f8:	jne    41e6fe <isspace@plt+0x1adee>
  41e6fa:	xor    eax,eax
  41e6fc:	pop    rcx
  41e6fd:	ret    
  41e6fe:	call   403280 <__stack_chk_fail@plt>
  41e703:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e70d:	nop    DWORD PTR [rax]
  41e710:	push   rax
  41e711:	mov    rax,QWORD PTR fs:0x28
  41e71a:	mov    QWORD PTR [rsp],rax
  41e71e:	test   esi,esi
  41e720:	js     41e728 <isspace@plt+0x1ae18>
  41e722:	mov    DWORD PTR [rdi+0x108],esi
  41e728:	mov    rax,QWORD PTR fs:0x28
  41e731:	cmp    rax,QWORD PTR [rsp]
  41e735:	jne    41e739 <isspace@plt+0x1ae29>
  41e737:	pop    rax
  41e738:	ret    
  41e739:	call   403280 <__stack_chk_fail@plt>
  41e73e:	xchg   ax,ax
  41e740:	push   rax
  41e741:	mov    rax,QWORD PTR fs:0x28
  41e74a:	mov    QWORD PTR [rsp],rax
  41e74e:	mov    eax,DWORD PTR [rdi+0x108]
  41e754:	mov    rcx,QWORD PTR fs:0x28
  41e75d:	cmp    rcx,QWORD PTR [rsp]
  41e761:	jne    41e765 <isspace@plt+0x1ae55>
  41e763:	pop    rcx
  41e764:	ret    
  41e765:	call   403280 <__stack_chk_fail@plt>
  41e76a:	nop    WORD PTR [rax+rax*1+0x0]
  41e770:	push   rax
  41e771:	mov    rax,QWORD PTR fs:0x28
  41e77a:	mov    QWORD PTR [rsp],rax
  41e77e:	mov    rax,QWORD PTR [rdi+0x50]
  41e782:	dec    esi
  41e784:	jle    41e7b4 <isspace@plt+0x1aea4>
  41e786:	mov    rcx,QWORD PTR [rdi+0x88]
  41e78d:	sub    rdi,0xffffffffffffff80
  41e791:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e79b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e7a0:	mov    rdi,QWORD PTR [rdi]
  41e7a3:	cmp    rdi,rcx
  41e7a6:	je     41e7b4 <isspace@plt+0x1aea4>
  41e7a8:	add    rax,QWORD PTR [rdi+0x10]
  41e7ac:	add    rdi,0x8
  41e7b0:	dec    esi
  41e7b2:	jg     41e7a0 <isspace@plt+0x1ae90>
  41e7b4:	mov    rcx,QWORD PTR fs:0x28
  41e7bd:	cmp    rcx,QWORD PTR [rsp]
  41e7c1:	jne    41e7c5 <isspace@plt+0x1aeb5>
  41e7c3:	pop    rcx
  41e7c4:	ret    
  41e7c5:	call   403280 <__stack_chk_fail@plt>
  41e7ca:	nop    WORD PTR [rax+rax*1+0x0]
  41e7d0:	push   rbp
  41e7d1:	push   r15
  41e7d3:	push   r14
  41e7d5:	push   r13
  41e7d7:	push   r12
  41e7d9:	push   rbx
  41e7da:	sub    rsp,0x18
  41e7de:	mov    ebp,edx
  41e7e0:	mov    r14,rsi
  41e7e3:	mov    r15,rdi
  41e7e6:	mov    rax,QWORD PTR fs:0x28
  41e7ef:	mov    QWORD PTR [rsp+0x10],rax
  41e7f4:	mov    rdi,QWORD PTR [rdi]
  41e7f7:	call   410890 <isspace@plt+0xcf80>
  41e7fc:	cmp    rax,r14
  41e7ff:	jb     41e888 <isspace@plt+0x1af78>
  41e805:	mov    edi,0x1
  41e80a:	mov    esi,0x58
  41e80f:	call   403460 <calloc@plt>
  41e814:	test   rax,rax
  41e817:	je     41e888 <isspace@plt+0x1af78>
  41e819:	mov    rbx,rax
  41e81c:	mov    QWORD PTR [rax+0x40],r15
  41e820:	mov    eax,DWORD PTR [r15+0x100]
  41e827:	mov    DWORD PTR [rbx+0x38],eax
  41e82a:	cmp    QWORD PTR [r15+0xf8],0x0
  41e832:	je     41e8b0 <isspace@plt+0x1afa0>
  41e834:	mov    r12,QWORD PTR [r15+0xa0]
  41e83b:	test   r12,r12
  41e83e:	jne    41e847 <isspace@plt+0x1af37>
  41e840:	mov    r12,QWORD PTR [r15+0x98]
  41e847:	mov    rsi,QWORD PTR [r12]
  41e84b:	mov    rax,QWORD PTR [r12+0x40]
  41e850:	mov    rdi,QWORD PTR [rax]
  41e853:	call   410e10 <isspace@plt+0xd500>
  41e858:	cmp    rax,r14
  41e85b:	mov    DWORD PTR [rsp+0xc],ebp
  41e85f:	jne    41e8d2 <isspace@plt+0x1afc2>
  41e861:	mov    rbp,QWORD PTR [r12+0x50]
  41e866:	mov    r13,r12
  41e869:	mov    rax,r14
  41e86c:	cmp    rax,r14
  41e86f:	jne    41e9a3 <isspace@plt+0x1b093>
  41e875:	cmp    BYTE PTR [rsp+0xc],0x0
  41e87a:	jne    41e9a3 <isspace@plt+0x1b093>
  41e880:	mov    rdi,rbx
  41e883:	call   4030d0 <free@plt>
  41e888:	xor    ebx,ebx
  41e88a:	mov    rax,QWORD PTR fs:0x28
  41e893:	cmp    rax,QWORD PTR [rsp+0x10]
  41e898:	jne    41ea30 <isspace@plt+0x1b120>
  41e89e:	mov    rax,rbx
  41e8a1:	add    rsp,0x18
  41e8a5:	pop    rbx
  41e8a6:	pop    r12
  41e8a8:	pop    r13
  41e8aa:	pop    r14
  41e8ac:	pop    r15
  41e8ae:	pop    rbp
  41e8af:	ret    
  41e8b0:	mov    QWORD PTR [r15+0x98],rbx
  41e8b7:	mov    QWORD PTR [r15+0xa0],rbx
  41e8be:	mov    QWORD PTR [r15+0xf8],rbx
  41e8c5:	mov    DWORD PTR [r15+0xb0],0x1
  41e8d0:	jmp    41e88a <isspace@plt+0x1af7a>
  41e8d2:	jae    41e926 <isspace@plt+0x1b016>
  41e8d4:	mov    rbp,QWORD PTR [r12+0x50]
  41e8d9:	test   rbp,rbp
  41e8dc:	je     41e984 <isspace@plt+0x1b074>
  41e8e2:	mov    rsi,QWORD PTR [rbp+0x0]
  41e8e6:	mov    rax,QWORD PTR [rbp+0x40]
  41e8ea:	mov    rdi,QWORD PTR [rax]
  41e8ed:	call   410e10 <isspace@plt+0xd500>
  41e8f2:	cmp    rax,r14
  41e8f5:	jae    41e986 <isspace@plt+0x1b076>
  41e8fb:	nop    DWORD PTR [rax+rax*1+0x0]
  41e900:	mov    r13,rbp
  41e903:	mov    rbp,QWORD PTR [rbp+0x50]
  41e907:	test   rbp,rbp
  41e90a:	je     41e977 <isspace@plt+0x1b067>
  41e90c:	mov    rsi,QWORD PTR [rbp+0x0]
  41e910:	mov    rax,QWORD PTR [rbp+0x40]
  41e914:	mov    rdi,QWORD PTR [rax]
  41e917:	call   410e10 <isspace@plt+0xd500>
  41e91c:	cmp    rax,r14
  41e91f:	jb     41e900 <isspace@plt+0x1aff0>
  41e921:	jmp    41e86c <isspace@plt+0x1af5c>
  41e926:	cmp    rax,r14
  41e929:	jbe    41e974 <isspace@plt+0x1b064>
  41e92b:	mov    r13,QWORD PTR [r12+0x48]
  41e930:	test   r13,r13
  41e933:	je     41e994 <isspace@plt+0x1b084>
  41e935:	mov    rsi,QWORD PTR [r13+0x0]
  41e939:	mov    rax,QWORD PTR [r13+0x40]
  41e93d:	mov    rdi,QWORD PTR [rax]
  41e940:	call   410e10 <isspace@plt+0xd500>
  41e945:	cmp    rax,r14
  41e948:	jbe    41e997 <isspace@plt+0x1b087>
  41e94a:	mov    rbp,r13
  41e94d:	mov    r13,QWORD PTR [r13+0x48]
  41e951:	test   r13,r13
  41e954:	je     41ea1f <isspace@plt+0x1b10f>
  41e95a:	mov    rsi,QWORD PTR [r13+0x0]
  41e95e:	mov    rax,QWORD PTR [r13+0x40]
  41e962:	mov    rdi,QWORD PTR [rax]
  41e965:	call   410e10 <isspace@plt+0xd500>
  41e96a:	cmp    rax,r14
  41e96d:	ja     41e94a <isspace@plt+0x1b03a>
  41e96f:	jmp    41e86c <isspace@plt+0x1af5c>
  41e974:	xor    r13d,r13d
  41e977:	xor    ebp,ebp
  41e979:	cmp    rax,r14
  41e97c:	je     41e875 <isspace@plt+0x1af65>
  41e982:	jmp    41e9a3 <isspace@plt+0x1b093>
  41e984:	xor    ebp,ebp
  41e986:	mov    r13,r12
  41e989:	cmp    rax,r14
  41e98c:	je     41e875 <isspace@plt+0x1af65>
  41e992:	jmp    41e9a3 <isspace@plt+0x1b093>
  41e994:	xor    r13d,r13d
  41e997:	mov    rbp,r12
  41e99a:	cmp    rax,r14
  41e99d:	je     41e875 <isspace@plt+0x1af65>
  41e9a3:	test   rbp,rbp
  41e9a6:	je     41e9e1 <isspace@plt+0x1b0d1>
  41e9a8:	mov    rax,rbp
  41e9ab:	nop    DWORD PTR [rax+rax*1+0x0]
  41e9b0:	inc    DWORD PTR [rax+0x3c]
  41e9b3:	mov    rax,QWORD PTR [rax+0x50]
  41e9b7:	test   rax,rax
  41e9ba:	jne    41e9b0 <isspace@plt+0x1b0a0>
  41e9bc:	mov    QWORD PTR [rbx+0x48],r13
  41e9c0:	mov    QWORD PTR [rbx+0x50],rbp
  41e9c4:	test   rbp,rbp
  41e9c7:	je     41e9cd <isspace@plt+0x1b0bd>
  41e9c9:	mov    QWORD PTR [rbp+0x48],rbx
  41e9cd:	test   r13,r13
  41e9d0:	je     41e9ee <isspace@plt+0x1b0de>
  41e9d2:	mov    QWORD PTR [r13+0x50],rbx
  41e9d6:	mov    eax,DWORD PTR [r13+0x3c]
  41e9da:	inc    eax
  41e9dc:	mov    DWORD PTR [rbx+0x3c],eax
  41e9df:	jmp    41e9f5 <isspace@plt+0x1b0e5>
  41e9e1:	mov    QWORD PTR [rbx+0x48],r13
  41e9e5:	mov    QWORD PTR [rbx+0x50],rbp
  41e9e9:	test   r13,r13
  41e9ec:	jne    41e9d2 <isspace@plt+0x1b0c2>
  41e9ee:	mov    QWORD PTR [r15+0xf8],rbx
  41e9f5:	mov    QWORD PTR [r15+0xa0],rbx
  41e9fc:	inc    DWORD PTR [r15+0xb0]
  41ea03:	mov    rdi,QWORD PTR [r15+0xa8]
  41ea0a:	call   41ece0 <isspace@plt+0x1b3d0>
  41ea0f:	mov    rdi,rbx
  41ea12:	mov    rsi,r14
  41ea15:	call   41a7c0 <isspace@plt+0x16eb0>
  41ea1a:	jmp    41e88a <isspace@plt+0x1af7a>
  41ea1f:	xor    r13d,r13d
  41ea22:	cmp    rax,r14
  41ea25:	je     41e875 <isspace@plt+0x1af65>
  41ea2b:	jmp    41e9a3 <isspace@plt+0x1b093>
  41ea30:	call   403280 <__stack_chk_fail@plt>
  41ea35:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ea3f:	nop
  41ea40:	push   rax
  41ea41:	mov    rax,QWORD PTR fs:0x28
  41ea4a:	mov    QWORD PTR [rsp],rax
  41ea4e:	mov    edx,0x1
  41ea53:	call   41e7d0 <isspace@plt+0x1aec0>
  41ea58:	mov    rcx,QWORD PTR fs:0x28
  41ea61:	cmp    rcx,QWORD PTR [rsp]
  41ea65:	jne    41ea69 <isspace@plt+0x1b159>
  41ea67:	pop    rcx
  41ea68:	ret    
  41ea69:	call   403280 <__stack_chk_fail@plt>
  41ea6e:	xchg   ax,ax
  41ea70:	push   rax
  41ea71:	mov    rax,QWORD PTR fs:0x28
  41ea7a:	mov    QWORD PTR [rsp],rax
  41ea7e:	mov    eax,DWORD PTR [rdi+0xb0]
  41ea84:	mov    rcx,QWORD PTR fs:0x28
  41ea8d:	cmp    rcx,QWORD PTR [rsp]
  41ea91:	jne    41ea95 <isspace@plt+0x1b185>
  41ea93:	pop    rcx
  41ea94:	ret    
  41ea95:	call   403280 <__stack_chk_fail@plt>
  41ea9a:	nop    WORD PTR [rax+rax*1+0x0]
  41eaa0:	push   rax
  41eaa1:	mov    rax,QWORD PTR fs:0x28
  41eaaa:	mov    QWORD PTR [rsp],rax
  41eaae:	mov    eax,DWORD PTR [rdi+0x3c]
  41eab1:	mov    rcx,QWORD PTR fs:0x28
  41eaba:	cmp    rcx,QWORD PTR [rsp]
  41eabe:	jne    41eac2 <isspace@plt+0x1b1b2>
  41eac0:	pop    rcx
  41eac1:	ret    
  41eac2:	call   403280 <__stack_chk_fail@plt>
  41eac7:	nop    WORD PTR [rax+rax*1+0x0]
  41ead0:	push   rbp
  41ead1:	push   r15
  41ead3:	push   r14
  41ead5:	push   r13
  41ead7:	push   r12
  41ead9:	push   rbx
  41eada:	push   rax
  41eadb:	mov    rax,QWORD PTR fs:0x28
  41eae4:	mov    QWORD PTR [rsp],rax
  41eae8:	mov    rbx,QWORD PTR [rdi+0xf8]
  41eaef:	test   rbx,rbx
  41eaf2:	je     41eb48 <isspace@plt+0x1b238>
  41eaf4:	mov    r14,QWORD PTR [rdi]
  41eaf7:	xor    r15d,r15d
  41eafa:	mov    r12d,0x1
  41eb00:	xor    ebp,ebp
  41eb02:	xor    r13d,r13d
  41eb05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eb0f:	nop
  41eb10:	mov    rsi,QWORD PTR [rbx]
  41eb13:	mov    rax,QWORD PTR [rbx+0x40]
  41eb17:	mov    rdi,QWORD PTR [rax]
  41eb1a:	call   410e10 <isspace@plt+0xd500>
  41eb1f:	mov    rdi,r14
  41eb22:	mov    rsi,rax
  41eb25:	call   410bc0 <isspace@plt+0xd2b0>
  41eb2a:	inc    ebp
  41eb2c:	cmp    rax,r13
  41eb2f:	cmovne ebp,r12d
  41eb33:	cmp    ebp,r15d
  41eb36:	cmovge r15d,ebp
  41eb3a:	mov    rbx,QWORD PTR [rbx+0x50]
  41eb3e:	mov    r13,rax
  41eb41:	test   rbx,rbx
  41eb44:	jne    41eb10 <isspace@plt+0x1b200>
  41eb46:	jmp    41eb4b <isspace@plt+0x1b23b>
  41eb48:	xor    r15d,r15d
  41eb4b:	mov    rax,QWORD PTR fs:0x28
  41eb54:	cmp    rax,QWORD PTR [rsp]
  41eb58:	jne    41eb6c <isspace@plt+0x1b25c>
  41eb5a:	mov    eax,r15d
  41eb5d:	add    rsp,0x8
  41eb61:	pop    rbx
  41eb62:	pop    r12
  41eb64:	pop    r13
  41eb66:	pop    r14
  41eb68:	pop    r15
  41eb6a:	pop    rbp
  41eb6b:	ret    
  41eb6c:	call   403280 <__stack_chk_fail@plt>
  41eb71:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41eb7b:	nop    DWORD PTR [rax+rax*1+0x0]
  41eb80:	push   rbp
  41eb81:	push   r15
  41eb83:	push   r14
  41eb85:	push   r13
  41eb87:	push   r12
  41eb89:	push   rbx
  41eb8a:	push   rax
  41eb8b:	mov    rax,QWORD PTR fs:0x28
  41eb94:	mov    QWORD PTR [rsp],rax
  41eb98:	mov    rbx,QWORD PTR [rdi+0xf8]
  41eb9f:	xor    r15d,r15d
  41eba2:	test   rbx,rbx
  41eba5:	je     41ebf4 <isspace@plt+0x1b2e4>
  41eba7:	mov    r14d,esi
  41ebaa:	mov    r12,QWORD PTR [rdi]
  41ebad:	xor    r13d,r13d
  41ebb0:	xor    ebp,ebp
  41ebb2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ebbc:	nop    DWORD PTR [rax+0x0]
  41ebc0:	mov    rsi,QWORD PTR [rbx]
  41ebc3:	mov    rax,QWORD PTR [rbx+0x40]
  41ebc7:	mov    rdi,QWORD PTR [rax]
  41ebca:	call   410e10 <isspace@plt+0xd500>
  41ebcf:	mov    rdi,r12
  41ebd2:	mov    rsi,rax
  41ebd5:	call   410bc0 <isspace@plt+0xd2b0>
  41ebda:	inc    ebp
  41ebdc:	cmp    rax,r13
  41ebdf:	cmovne ebp,r15d
  41ebe3:	cmp    ebp,r14d
  41ebe6:	je     41ebf6 <isspace@plt+0x1b2e6>
  41ebe8:	mov    rbx,QWORD PTR [rbx+0x50]
  41ebec:	mov    r13,rax
  41ebef:	test   rbx,rbx
  41ebf2:	jne    41ebc0 <isspace@plt+0x1b2b0>
  41ebf4:	xor    ebx,ebx
  41ebf6:	mov    rax,QWORD PTR fs:0x28
  41ebff:	cmp    rax,QWORD PTR [rsp]
  41ec03:	jne    41ec17 <isspace@plt+0x1b307>
  41ec05:	mov    rax,rbx
  41ec08:	add    rsp,0x8
  41ec0c:	pop    rbx
  41ec0d:	pop    r12
  41ec0f:	pop    r13
  41ec11:	pop    r14
  41ec13:	pop    r15
  41ec15:	pop    rbp
  41ec16:	ret    
  41ec17:	call   403280 <__stack_chk_fail@plt>
  41ec1c:	nop    DWORD PTR [rax+0x0]
  41ec20:	push   rbp
  41ec21:	push   r15
  41ec23:	push   r14
  41ec25:	push   r13
  41ec27:	push   r12
  41ec29:	push   rbx
  41ec2a:	push   rax
  41ec2b:	mov    r14d,esi
  41ec2e:	mov    rax,QWORD PTR fs:0x28
  41ec37:	mov    QWORD PTR [rsp],rax
  41ec3b:	mov    rax,QWORD PTR [rdi+0x40]
  41ec3f:	mov    r15,QWORD PTR [rax]
  41ec42:	test   rdi,rdi
  41ec45:	je     41ec6a <isspace@plt+0x1b35a>
  41ec47:	mov    rbx,rdi
  41ec4a:	mov    rsi,QWORD PTR [rdi]
  41ec4d:	mov    rdi,r15
  41ec50:	call   410e10 <isspace@plt+0xd500>
  41ec55:	mov    rdi,r15
  41ec58:	mov    rsi,rax
  41ec5b:	call   410bc0 <isspace@plt+0xd2b0>
  41ec60:	mov    r12,rax
  41ec63:	mov    ebp,0x80000000
  41ec68:	jmp    41ec7b <isspace@plt+0x1b36b>
  41ec6a:	mov    rbx,QWORD PTR [rax+0xf8]
  41ec71:	xor    r12d,r12d
  41ec74:	test   rbx,rbx
  41ec77:	je     41ecb4 <isspace@plt+0x1b3a4>
  41ec79:	xor    ebp,ebp
  41ec7b:	xor    r13d,r13d
  41ec7e:	xchg   ax,ax
  41ec80:	mov    rsi,QWORD PTR [rbx]
  41ec83:	mov    rax,QWORD PTR [rbx+0x40]
  41ec87:	mov    rdi,QWORD PTR [rax]
  41ec8a:	call   410e10 <isspace@plt+0xd500>
  41ec8f:	mov    rdi,r15
  41ec92:	mov    rsi,rax
  41ec95:	call   410bc0 <isspace@plt+0xd2b0>
  41ec9a:	inc    ebp
  41ec9c:	cmp    rax,r12
  41ec9f:	cmovne ebp,r13d
  41eca3:	cmp    ebp,r14d
  41eca6:	je     41ecb6 <isspace@plt+0x1b3a6>
  41eca8:	mov    rbx,QWORD PTR [rbx+0x50]
  41ecac:	mov    r12,rax
  41ecaf:	test   rbx,rbx
  41ecb2:	jne    41ec80 <isspace@plt+0x1b370>
  41ecb4:	xor    ebx,ebx
  41ecb6:	mov    rax,QWORD PTR fs:0x28
  41ecbf:	cmp    rax,QWORD PTR [rsp]
  41ecc3:	jne    41ecd7 <isspace@plt+0x1b3c7>
  41ecc5:	mov    rax,rbx
  41ecc8:	add    rsp,0x8
  41eccc:	pop    rbx
  41eccd:	pop    r12
  41eccf:	pop    r13
  41ecd1:	pop    r14
  41ecd3:	pop    r15
  41ecd5:	pop    rbp
  41ecd6:	ret    
  41ecd7:	call   403280 <__stack_chk_fail@plt>
  41ecdc:	nop    DWORD PTR [rax+0x0]
  41ece0:	push   rbp
  41ece1:	push   r14
  41ece3:	push   rbx
  41ece4:	sub    rsp,0x10
  41ece8:	mov    rax,QWORD PTR fs:0x28
  41ecf1:	mov    QWORD PTR [rsp+0x8],rax
  41ecf6:	mov    bpl,0x1
  41ecf9:	test   rdi,rdi
  41ecfc:	je     41edca <isspace@plt+0x1b4ba>
  41ed02:	mov    rbx,QWORD PTR [rdi+0x40]
  41ed06:	mov    rcx,QWORD PTR [rbx+0xf8]
  41ed0d:	test   rcx,rcx
  41ed10:	je     41edc8 <isspace@plt+0x1b4b8>
  41ed16:	cmp    QWORD PTR [rcx+0x50],0x0
  41ed1b:	je     41edc8 <isspace@plt+0x1b4b8>
  41ed21:	mov    rax,QWORD PTR [rdi+0x50]
  41ed25:	test   rax,rax
  41ed28:	je     41ed3c <isspace@plt+0x1b42c>
  41ed2a:	mov    rdx,rax
  41ed2d:	nop    DWORD PTR [rax]
  41ed30:	dec    DWORD PTR [rdx+0x3c]
  41ed33:	mov    rdx,QWORD PTR [rdx+0x50]
  41ed37:	test   rdx,rdx
  41ed3a:	jne    41ed30 <isspace@plt+0x1b420>
  41ed3c:	mov    rdx,QWORD PTR [rdi+0x48]
  41ed40:	test   rdx,rdx
  41ed43:	je     41ed4d <isspace@plt+0x1b43d>
  41ed45:	mov    QWORD PTR [rdx+0x50],rax
  41ed49:	mov    rax,QWORD PTR [rdi+0x50]
  41ed4d:	test   rax,rax
  41ed50:	je     41ed56 <isspace@plt+0x1b446>
  41ed52:	mov    QWORD PTR [rax+0x48],rdx
  41ed56:	cmp    rcx,rdi
  41ed59:	je     41ede5 <isspace@plt+0x1b4d5>
  41ed5f:	cmp    QWORD PTR [rbx+0x98],rdi
  41ed66:	je     41edf9 <isspace@plt+0x1b4e9>
  41ed6c:	cmp    QWORD PTR [rbx+0xa8],rdi
  41ed73:	je     41ee19 <isspace@plt+0x1b509>
  41ed79:	cmp    QWORD PTR [rbx+0xa0],rdi
  41ed80:	je     41ee31 <isspace@plt+0x1b521>
  41ed86:	dec    DWORD PTR [rbx+0xb0]
  41ed8c:	call   4030d0 <free@plt>
  41ed91:	mov    rbx,QWORD PTR [rbx+0x98]
  41ed98:	test   rbx,rbx
  41ed9b:	je     41edca <isspace@plt+0x1b4ba>
  41ed9d:	mov    rax,QWORD PTR [rbx+0x40]
  41eda1:	mov    QWORD PTR [rax+0x98],rbx
  41eda8:	mov    rsi,QWORD PTR [rbx]
  41edab:	mov    r14,QWORD PTR [rbx+0x8]
  41edaf:	mov    rdi,QWORD PTR [rax]
  41edb2:	call   410e10 <isspace@plt+0xd500>
  41edb7:	mov    rdi,rbx
  41edba:	mov    rsi,rax
  41edbd:	call   41a7c0 <isspace@plt+0x16eb0>
  41edc2:	mov    QWORD PTR [rbx+0x8],r14
  41edc6:	jmp    41edca <isspace@plt+0x1b4ba>
  41edc8:	xor    ebp,ebp
  41edca:	mov    rax,QWORD PTR fs:0x28
  41edd3:	cmp    rax,QWORD PTR [rsp+0x8]
  41edd8:	jne    41ee48 <isspace@plt+0x1b538>
  41edda:	mov    eax,ebp
  41eddc:	add    rsp,0x10
  41ede0:	pop    rbx
  41ede1:	pop    r14
  41ede3:	pop    rbp
  41ede4:	ret    
  41ede5:	mov    QWORD PTR [rbx+0xf8],rax
  41edec:	cmp    QWORD PTR [rbx+0x98],rdi
  41edf3:	jne    41ed6c <isspace@plt+0x1b45c>
  41edf9:	mov    rcx,rax
  41edfc:	test   rax,rax
  41edff:	jne    41ee05 <isspace@plt+0x1b4f5>
  41ee01:	mov    rcx,QWORD PTR [rdi+0x48]
  41ee05:	mov    QWORD PTR [rbx+0x98],rcx
  41ee0c:	cmp    QWORD PTR [rbx+0xa8],rdi
  41ee13:	jne    41ed79 <isspace@plt+0x1b469>
  41ee19:	mov    QWORD PTR [rbx+0xa8],0x0
  41ee24:	cmp    QWORD PTR [rbx+0xa0],rdi
  41ee2b:	jne    41ed86 <isspace@plt+0x1b476>
  41ee31:	mov    rcx,QWORD PTR [rdi+0x48]
  41ee35:	test   rcx,rcx
  41ee38:	cmovne rax,rcx
  41ee3c:	mov    QWORD PTR [rbx+0xa0],rax
  41ee43:	jmp    41ed86 <isspace@plt+0x1b476>
  41ee48:	call   403280 <__stack_chk_fail@plt>
  41ee4d:	nop    DWORD PTR [rax]
  41ee50:	push   r14
  41ee52:	push   rbx
  41ee53:	push   rax
  41ee54:	mov    rax,QWORD PTR fs:0x28
  41ee5d:	mov    QWORD PTR [rsp],rax
  41ee61:	test   rdi,rdi
  41ee64:	je     41ee92 <isspace@plt+0x1b582>
  41ee66:	mov    rbx,rdi
  41ee69:	mov    rax,QWORD PTR [rdi+0x40]
  41ee6d:	mov    QWORD PTR [rax+0x98],rdi
  41ee74:	mov    rsi,QWORD PTR [rdi]
  41ee77:	mov    r14,QWORD PTR [rdi+0x8]
  41ee7b:	mov    rdi,QWORD PTR [rax]
  41ee7e:	call   410e10 <isspace@plt+0xd500>
  41ee83:	mov    rdi,rbx
  41ee86:	mov    rsi,rax
  41ee89:	call   41a7c0 <isspace@plt+0x16eb0>
  41ee8e:	mov    QWORD PTR [rbx+0x8],r14
  41ee92:	mov    rax,QWORD PTR fs:0x28
  41ee9b:	cmp    rax,QWORD PTR [rsp]
  41ee9f:	jne    41eea9 <isspace@plt+0x1b599>
  41eea1:	add    rsp,0x8
  41eea5:	pop    rbx
  41eea6:	pop    r14
  41eea8:	ret    
  41eea9:	call   403280 <__stack_chk_fail@plt>
  41eeae:	xchg   ax,ax
  41eeb0:	push   rbx
  41eeb1:	sub    rsp,0x10
  41eeb5:	mov    rbx,rdi
  41eeb8:	mov    rax,QWORD PTR fs:0x28
  41eec1:	mov    QWORD PTR [rsp+0x8],rax
  41eec6:	call   41ece0 <isspace@plt+0x1b3d0>
  41eecb:	mov    ecx,eax
  41eecd:	mov    al,0x1
  41eecf:	test   cl,cl
  41eed1:	jne    41eefe <isspace@plt+0x1b5ee>
  41eed3:	mov    rcx,QWORD PTR [rbx+0x40]
  41eed7:	cmp    QWORD PTR [rcx+0xa8],0x0
  41eedf:	je     41eee5 <isspace@plt+0x1b5d5>
  41eee1:	xor    eax,eax
  41eee3:	jmp    41eefe <isspace@plt+0x1b5ee>
  41eee5:	mov    BYTE PTR [rbx+0x10],0x0
  41eee9:	mov    rdx,QWORD PTR [rbx]
  41eeec:	mov    QWORD PTR [rbx+0x8],rdx
  41eef0:	mov    BYTE PTR [rcx+0x104],0x1
  41eef7:	mov    QWORD PTR [rcx+0xa8],rbx
  41eefe:	mov    rcx,QWORD PTR fs:0x28
  41ef07:	cmp    rcx,QWORD PTR [rsp+0x8]
  41ef0c:	jne    41ef14 <isspace@plt+0x1b604>
  41ef0e:	add    rsp,0x10
  41ef12:	pop    rbx
  41ef13:	ret    
  41ef14:	call   403280 <__stack_chk_fail@plt>
  41ef19:	nop    DWORD PTR [rax+0x0]
  41ef20:	push   rax
  41ef21:	mov    rax,QWORD PTR fs:0x28
  41ef2a:	mov    QWORD PTR [rsp],rax
  41ef2e:	mov    BYTE PTR [rdi+0x10],0x0
  41ef32:	mov    rax,QWORD PTR [rdi]
  41ef35:	mov    rcx,QWORD PTR [rdi+0x40]
  41ef39:	mov    QWORD PTR [rdi+0x8],rax
  41ef3d:	mov    BYTE PTR [rcx+0x104],0x1
  41ef44:	mov    rax,QWORD PTR fs:0x28
  41ef4d:	cmp    rax,QWORD PTR [rsp]
  41ef51:	jne    41ef55 <isspace@plt+0x1b645>
  41ef53:	pop    rax
  41ef54:	ret    
  41ef55:	call   403280 <__stack_chk_fail@plt>
  41ef5a:	nop    WORD PTR [rax+rax*1+0x0]
  41ef60:	push   rax
  41ef61:	mov    rax,QWORD PTR fs:0x28
  41ef6a:	mov    QWORD PTR [rsp],rax
  41ef6e:	mov    rax,QWORD PTR [rdi+0xa8]
  41ef75:	mov    QWORD PTR [rdi+0xa8],0x0
  41ef80:	mov    rcx,QWORD PTR fs:0x28
  41ef89:	cmp    rcx,QWORD PTR [rsp]
  41ef8d:	jne    41ef91 <isspace@plt+0x1b681>
  41ef8f:	pop    rcx
  41ef90:	ret    
  41ef91:	call   403280 <__stack_chk_fail@plt>
  41ef96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41efa0:	push   rax
  41efa1:	mov    rax,QWORD PTR fs:0x28
  41efaa:	mov    QWORD PTR [rsp],rax
  41efae:	inc    DWORD PTR [rdi+0x100]
  41efb4:	mov    rax,QWORD PTR [rdi+0xf8]
  41efbb:	mov    rcx,QWORD PTR fs:0x28
  41efc4:	cmp    rcx,QWORD PTR [rsp]
  41efc8:	jne    41efcc <isspace@plt+0x1b6bc>
  41efca:	pop    rcx
  41efcb:	ret    
  41efcc:	call   403280 <__stack_chk_fail@plt>
  41efd1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41efdb:	nop    DWORD PTR [rax+rax*1+0x0]
  41efe0:	push   rax
  41efe1:	mov    rax,QWORD PTR fs:0x28
  41efea:	mov    QWORD PTR [rsp],rax
  41efee:	inc    DWORD PTR [rdi+0x100]
  41eff4:	mov    rax,QWORD PTR [rdi+0x98]
  41effb:	mov    rcx,QWORD PTR fs:0x28
  41f004:	cmp    rcx,QWORD PTR [rsp]
  41f008:	jne    41f00c <isspace@plt+0x1b6fc>
  41f00a:	pop    rcx
  41f00b:	ret    
  41f00c:	call   403280 <__stack_chk_fail@plt>
  41f011:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f01b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f020:	push   rax
  41f021:	mov    rax,rdi
  41f024:	mov    rcx,QWORD PTR fs:0x28
  41f02d:	mov    QWORD PTR [rsp],rcx
  41f031:	mov    rcx,QWORD PTR [rdi+0x40]
  41f035:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f03f:	nop
  41f040:	mov    rax,QWORD PTR [rax+0x48]
  41f044:	test   rax,rax
  41f047:	je     41f056 <isspace@plt+0x1b746>
  41f049:	mov    edx,DWORD PTR [rax+0x38]
  41f04c:	cmp    edx,DWORD PTR [rcx+0x100]
  41f052:	je     41f040 <isspace@plt+0x1b730>
  41f054:	jmp    41f05c <isspace@plt+0x1b74c>
  41f056:	inc    DWORD PTR [rcx+0x100]
  41f05c:	mov    rcx,QWORD PTR fs:0x28
  41f065:	cmp    rcx,QWORD PTR [rsp]
  41f069:	jne    41f06d <isspace@plt+0x1b75d>
  41f06b:	pop    rcx
  41f06c:	ret    
  41f06d:	call   403280 <__stack_chk_fail@plt>
  41f072:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f07c:	nop    DWORD PTR [rax+0x0]
  41f080:	push   rax
  41f081:	mov    rax,rdi
  41f084:	mov    rcx,QWORD PTR fs:0x28
  41f08d:	mov    QWORD PTR [rsp],rcx
  41f091:	mov    rcx,QWORD PTR [rdi+0x40]
  41f095:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f09f:	nop
  41f0a0:	mov    rax,QWORD PTR [rax+0x50]
  41f0a4:	test   rax,rax
  41f0a7:	je     41f0b6 <isspace@plt+0x1b7a6>
  41f0a9:	mov    edx,DWORD PTR [rax+0x38]
  41f0ac:	cmp    edx,DWORD PTR [rcx+0x100]
  41f0b2:	je     41f0a0 <isspace@plt+0x1b790>
  41f0b4:	jmp    41f0bc <isspace@plt+0x1b7ac>
  41f0b6:	inc    DWORD PTR [rcx+0x100]
  41f0bc:	mov    rcx,QWORD PTR fs:0x28
  41f0c5:	cmp    rcx,QWORD PTR [rsp]
  41f0c9:	jne    41f0cd <isspace@plt+0x1b7bd>
  41f0cb:	pop    rcx
  41f0cc:	ret    
  41f0cd:	call   403280 <__stack_chk_fail@plt>
  41f0d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f0dc:	nop    DWORD PTR [rax+0x0]
  41f0e0:	push   rbx
  41f0e1:	sub    rsp,0x10
  41f0e5:	mov    rbx,rdi
  41f0e8:	mov    rax,QWORD PTR fs:0x28
  41f0f1:	mov    QWORD PTR [rsp+0x8],rax
  41f0f6:	mov    rsi,QWORD PTR [rdi]
  41f0f9:	mov    rax,QWORD PTR [rdi+0x40]
  41f0fd:	mov    rdi,QWORD PTR [rax]
  41f100:	call   410e10 <isspace@plt+0xd500>
  41f105:	mov    rcx,QWORD PTR [rbx+0x40]
  41f109:	mov    rdi,QWORD PTR [rcx]
  41f10c:	mov    rsi,rax
  41f10f:	call   410bc0 <isspace@plt+0xd2b0>
  41f114:	mov    rcx,QWORD PTR fs:0x28
  41f11d:	cmp    rcx,QWORD PTR [rsp+0x8]
  41f122:	jne    41f12a <isspace@plt+0x1b81a>
  41f124:	add    rsp,0x10
  41f128:	pop    rbx
  41f129:	ret    
  41f12a:	call   403280 <__stack_chk_fail@plt>
  41f12f:	nop
  41f130:	push   rbx
  41f131:	sub    rsp,0x10
  41f135:	mov    rbx,rdi
  41f138:	mov    rax,QWORD PTR fs:0x28
  41f141:	mov    QWORD PTR [rsp+0x8],rax
  41f146:	mov    rsi,QWORD PTR [rdi]
  41f149:	mov    rax,QWORD PTR [rdi+0x40]
  41f14d:	mov    rdi,QWORD PTR [rax]
  41f150:	call   410e10 <isspace@plt+0xd500>
  41f155:	mov    rcx,QWORD PTR [rbx+0x40]
  41f159:	mov    rdi,QWORD PTR [rcx]
  41f15c:	mov    rsi,rax
  41f15f:	call   4135f0 <isspace@plt+0xfce0>
  41f164:	mov    rcx,QWORD PTR fs:0x28
  41f16d:	cmp    rcx,QWORD PTR [rsp+0x8]
  41f172:	jne    41f17e <isspace@plt+0x1b86e>
  41f174:	inc    eax
  41f176:	cdqe   
  41f178:	add    rsp,0x10
  41f17c:	pop    rbx
  41f17d:	ret    
  41f17e:	call   403280 <__stack_chk_fail@plt>
  41f183:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f18d:	nop    DWORD PTR [rax]
  41f190:	push   rax
  41f191:	mov    rax,QWORD PTR fs:0x28
  41f19a:	mov    QWORD PTR [rsp],rax
  41f19e:	cmp    QWORD PTR [rdi+0x30],0x0
  41f1a3:	je     41f1aa <isspace@plt+0x1b89a>
  41f1a5:	mov    eax,DWORD PTR [rdi+0x24]
  41f1a8:	jmp    41f1af <isspace@plt+0x1b89f>
  41f1aa:	mov    eax,0xffffffff
  41f1af:	mov    rcx,QWORD PTR fs:0x28
  41f1b8:	cmp    rcx,QWORD PTR [rsp]
  41f1bc:	jne    41f1c0 <isspace@plt+0x1b8b0>
  41f1be:	pop    rcx
  41f1bf:	ret    
  41f1c0:	call   403280 <__stack_chk_fail@plt>
  41f1c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f1cf:	nop
  41f1d0:	push   rbp
  41f1d1:	push   r15
  41f1d3:	push   r14
  41f1d5:	push   rbx
  41f1d6:	sub    rsp,0x38
  41f1da:	mov    rax,QWORD PTR fs:0x28
  41f1e3:	mov    QWORD PTR [rsp+0x30],rax
  41f1e8:	mov    r15d,0xffffffff
  41f1ee:	test   esi,esi
  41f1f0:	js     41f4d0 <isspace@plt+0x1bbc0>
  41f1f6:	mov    r14,rdi
  41f1f9:	mov    rdx,QWORD PTR [rdi+0x30]
  41f1fd:	test   rdx,rdx
  41f200:	je     41f4d0 <isspace@plt+0x1bbc0>
  41f206:	mov    r8,QWORD PTR [r14+0x40]
  41f20a:	mov    rbx,QWORD PTR [r8+0x50]
  41f20e:	mov    rax,QWORD PTR [r8+0x80]
  41f215:	xor    ecx,ecx
  41f217:	test   rax,rax
  41f21a:	je     41f244 <isspace@plt+0x1b934>
  41f21c:	cmp    rax,rdx
  41f21f:	je     41f244 <isspace@plt+0x1b934>
  41f221:	xor    ecx,ecx
  41f223:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f22d:	nop    DWORD PTR [rax]
  41f230:	add    rbx,QWORD PTR [rax+0x10]
  41f234:	inc    ecx
  41f236:	mov    rax,QWORD PTR [rax+0x8]
  41f23a:	test   rax,rax
  41f23d:	je     41f244 <isspace@plt+0x1b934>
  41f23f:	cmp    rax,rdx
  41f242:	jne    41f230 <isspace@plt+0x1b920>
  41f244:	test   esi,esi
  41f246:	jle    41f3dc <isspace@plt+0x1bacc>
  41f24c:	movsxd rsi,esi
  41f24f:	lea    rax,[rsi+rsi*2]
  41f253:	shl    rax,0x4
  41f257:	add    rax,rdx
  41f25a:	add    rax,0x38
  41f25e:	xchg   ax,ax
  41f260:	cmp    QWORD PTR [rax],0x0
  41f264:	jne    41f26f <isspace@plt+0x1b95f>
  41f266:	add    rax,0xffffffffffffffd0
  41f26a:	dec    rsi
  41f26d:	jg     41f260 <isspace@plt+0x1b950>
  41f26f:	test   esi,esi
  41f271:	jle    41f3dc <isspace@plt+0x1bacc>
  41f277:	mov    edi,esi
  41f279:	cmp    esi,0x11
  41f27c:	jae    41f285 <isspace@plt+0x1b975>
  41f27e:	xor    eax,eax
  41f280:	jmp    41f3b7 <isspace@plt+0x1baa7>
  41f285:	mov    eax,edi
  41f287:	and    eax,0xf
  41f28a:	test   rax,rax
  41f28d:	mov    ebp,0x10
  41f292:	cmovne rbp,rax
  41f296:	mov    rax,rdi
  41f299:	sub    rax,rbp
  41f29c:	vmovq  xmm0,rbx
  41f2a1:	vpxor  xmm1,xmm1,xmm1
  41f2a5:	vmovdqa ymm2,YMMWORD PTR [rip+0x11953]        # 430c00 <isspace@plt+0x2d2f0>
  41f2ad:	vpbroadcastq ymm3,QWORD PTR [rip+0x1196a]        # 430c20 <isspace@plt+0x2d310>
  41f2b6:	vpbroadcastq ymm4,QWORD PTR [rip+0x11969]        # 430c28 <isspace@plt+0x2d318>
  41f2bf:	vmovdqu YMMWORD PTR [rsp],ymm4
  41f2c4:	vpbroadcastq ymm5,QWORD PTR [rip+0x11963]        # 430c30 <isspace@plt+0x2d320>
  41f2cd:	vpbroadcastq ymm6,QWORD PTR [rip+0x11962]        # 430c38 <isspace@plt+0x2d328>
  41f2d6:	vpbroadcastq ymm7,QWORD PTR [rip+0x11961]        # 430c40 <isspace@plt+0x2d330>
  41f2df:	vpbroadcastq ymm8,QWORD PTR [rip+0x11960]        # 430c48 <isspace@plt+0x2d338>
  41f2e8:	mov    rbp,rax
  41f2eb:	vpxor  xmm9,xmm9,xmm9
  41f2f0:	vpxor  xmm10,xmm10,xmm10
  41f2f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f2ff:	nop
  41f300:	vpmuludq ymm11,ymm2,ymm3
  41f304:	vpsrlq ymm12,ymm2,0x20
  41f309:	vpmuludq ymm12,ymm12,ymm3
  41f30d:	vpsllq ymm12,ymm12,0x20
  41f313:	vmovq  xmm4,rdx
  41f318:	vpbroadcastq ymm4,xmm4
  41f31d:	vpaddq ymm4,ymm11,ymm4
  41f321:	vpaddq ymm4,ymm12,ymm4
  41f325:	vpaddq ymm11,ymm4,YMMWORD PTR [rsp]
  41f32a:	vpaddq ymm12,ymm4,ymm6
  41f32e:	vpaddq ymm14,ymm4,ymm7
  41f332:	vpaddq ymm4,ymm4,ymm8
  41f337:	vpcmpeqd ymm15,ymm15,ymm15
  41f33c:	vpgatherqq ymm13,QWORD PTR [ymm11*1+0x0],ymm15
  41f346:	vpcmpeqd ymm11,ymm11,ymm11
  41f34b:	vpgatherqq ymm15,QWORD PTR [ymm12*1+0x0],ymm11
  41f355:	vpcmpeqd ymm11,ymm11,ymm11
  41f35a:	vpgatherqq ymm12,QWORD PTR [ymm14*1+0x0],ymm11
  41f364:	vpcmpeqd ymm11,ymm11,ymm11
  41f369:	vpgatherqq ymm14,QWORD PTR [ymm4*1+0x0],ymm11
  41f373:	vpaddq ymm0,ymm13,ymm0
  41f377:	vpaddq ymm1,ymm15,ymm1
  41f37b:	vpaddq ymm9,ymm12,ymm9
  41f380:	vpaddq ymm10,ymm14,ymm10
  41f385:	vpaddq ymm2,ymm2,ymm5
  41f389:	add    rbp,0xfffffffffffffff0
  41f38d:	jne    41f300 <isspace@plt+0x1b9f0>
  41f393:	vpaddq ymm0,ymm1,ymm0
  41f397:	vpaddq ymm0,ymm9,ymm0
  41f39b:	vpaddq ymm0,ymm10,ymm0
  41f39f:	vextracti128 xmm1,ymm0,0x1
  41f3a5:	vpaddq xmm0,xmm0,xmm1
  41f3a9:	vpshufd xmm1,xmm0,0x4e
  41f3ae:	vpaddq xmm0,xmm0,xmm1
  41f3b2:	vmovq  rbx,xmm0
  41f3b7:	sub    rdi,rax
  41f3ba:	lea    rax,[rax+rax*2]
  41f3be:	shl    rax,0x4
  41f3c2:	add    rax,rdx
  41f3c5:	add    rax,0x38
  41f3c9:	nop    DWORD PTR [rax+0x0]
  41f3d0:	add    rbx,QWORD PTR [rax]
  41f3d3:	add    rax,0x30
  41f3d7:	dec    rdi
  41f3da:	jne    41f3d0 <isspace@plt+0x1bac0>
  41f3dc:	mov    DWORD PTR [r14+0x24],esi
  41f3e0:	mov    DWORD PTR [r14+0x20],ecx
  41f3e4:	mov    rdi,QWORD PTR [r8]
  41f3e7:	mov    rsi,rbx
  41f3ea:	vzeroupper 
  41f3ed:	call   410d60 <isspace@plt+0xd450>
  41f3f2:	mov    QWORD PTR [r14],rax
  41f3f5:	cmp    BYTE PTR [r14+0x10],0x0
  41f3fa:	je     41f456 <isspace@plt+0x1bb46>
  41f3fc:	cmp    QWORD PTR [r14+0x18],rbx
  41f400:	je     41f40a <isspace@plt+0x1bafa>
  41f402:	mov    DWORD PTR [r14+0x28],0x0
  41f40a:	mov    QWORD PTR [r14+0x18],rbx
  41f40e:	mov    rdi,QWORD PTR [r14+0x40]
  41f412:	mov    rdx,QWORD PTR [rdi+0x50]
  41f416:	cmp    rdx,rbx
  41f419:	ja     41f421 <isspace@plt+0x1bb11>
  41f41b:	cmp    QWORD PTR [rdi+0x58],rbx
  41f41f:	jae    41f462 <isspace@plt+0x1bb52>
  41f421:	mov    QWORD PTR [r14+0x30],0x0
  41f429:	mov    QWORD PTR [r14+0x20],0xffffffffffffffff
  41f431:	cmp    QWORD PTR [rdi+0x98],r14
  41f438:	jne    41f4d0 <isspace@plt+0x1bbc0>
  41f43e:	mov    rax,QWORD PTR [rdi+0x80]
  41f445:	mov    QWORD PTR [r14+0x30],rax
  41f449:	mov    QWORD PTR [r14+0x20],0x0
  41f451:	xor    r15d,r15d
  41f454:	jmp    41f4d0 <isspace@plt+0x1bbc0>
  41f456:	mov    QWORD PTR [r14+0x8],rax
  41f45a:	cmp    QWORD PTR [r14+0x18],rbx
  41f45e:	jne    41f402 <isspace@plt+0x1baf2>
  41f460:	jmp    41f40a <isspace@plt+0x1bafa>
  41f462:	mov    r11,QWORD PTR [rdi+0x80]
  41f469:	test   r11,r11
  41f46c:	je     41f4ab <isspace@plt+0x1bb9b>
  41f46e:	mov    rsi,QWORD PTR [rdi+0x88]
  41f475:	xor    r10d,r10d
  41f478:	nop    DWORD PTR [rax+rax*1+0x0]
  41f480:	cmp    rdx,rbx
  41f483:	setb   cl
  41f486:	cmp    r11,rsi
  41f489:	je     41f4f4 <isspace@plt+0x1bbe4>
  41f48b:	cmp    rdx,rbx
  41f48e:	jae    41f4f4 <isspace@plt+0x1bbe4>
  41f490:	mov    rax,QWORD PTR [r11+0x10]
  41f494:	add    rax,rdx
  41f497:	cmp    rax,rbx
  41f49a:	ja     41f4f2 <isspace@plt+0x1bbe2>
  41f49c:	inc    r10d
  41f49f:	mov    r11,QWORD PTR [r11+0x8]
  41f4a3:	mov    rdx,rax
  41f4a6:	test   r11,r11
  41f4a9:	jne    41f480 <isspace@plt+0x1bb70>
  41f4ab:	mov    r11,QWORD PTR [rdi+0x90]
  41f4b2:	mov    r10d,DWORD PTR [rdi+0x4c]
  41f4b6:	dec    r10d
  41f4b9:	xor    eax,eax
  41f4bb:	mov    QWORD PTR [r14+0x30],r11
  41f4bf:	mov    DWORD PTR [r14+0x20],r10d
  41f4c3:	mov    DWORD PTR [r14+0x24],eax
  41f4c7:	call   419f00 <isspace@plt+0x165f0>
  41f4cc:	mov    r15d,DWORD PTR [r14+0x24]
  41f4d0:	mov    rax,QWORD PTR fs:0x28
  41f4d9:	cmp    rax,QWORD PTR [rsp+0x30]
  41f4de:	jne    41f569 <isspace@plt+0x1bc59>
  41f4e4:	mov    eax,r15d
  41f4e7:	add    rsp,0x38
  41f4eb:	pop    rbx
  41f4ec:	pop    r14
  41f4ee:	pop    r15
  41f4f0:	pop    rbp
  41f4f1:	ret    
  41f4f2:	mov    cl,0x1
  41f4f4:	mov    r8d,DWORD PTR [rdi+0x48]
  41f4f8:	mov    eax,DWORD PTR [r11+0x20]
  41f4fc:	cmp    r8d,eax
  41f4ff:	cmovg  r8d,eax
  41f503:	xor    eax,eax
  41f505:	test   cl,cl
  41f507:	je     41f4bb <isspace@plt+0x1bbab>
  41f509:	test   r8d,r8d
  41f50c:	jle    41f4bb <isspace@plt+0x1bbab>
  41f50e:	movsxd rbp,r8d
  41f511:	lea    r9,[r11+0x68]
  41f515:	xor    eax,eax
  41f517:	nop    WORD PTR [rax+rax*1+0x0]
  41f520:	movsxd rsi,eax
  41f523:	mov    rax,rsi
  41f526:	shl    rax,0x4
  41f52a:	lea    rcx,[rax+rax*2]
  41f52e:	add    rdx,QWORD PTR [r11+rcx*1+0x38]
  41f533:	inc    rsi
  41f536:	add    rcx,r9
  41f539:	nop    DWORD PTR [rax+0x0]
  41f540:	mov    rax,rsi
  41f543:	cmp    rsi,rbp
  41f546:	jge    41f556 <isspace@plt+0x1bc46>
  41f548:	lea    rsi,[rax+0x1]
  41f54c:	cmp    QWORD PTR [rcx],0x0
  41f550:	lea    rcx,[rcx+0x30]
  41f554:	je     41f540 <isspace@plt+0x1bc30>
  41f556:	cmp    rdx,rbx
  41f559:	jae    41f4bb <isspace@plt+0x1bbab>
  41f55f:	cmp    r8d,eax
  41f562:	jg     41f520 <isspace@plt+0x1bc10>
  41f564:	jmp    41f4bb <isspace@plt+0x1bbab>
  41f569:	call   403280 <__stack_chk_fail@plt>
  41f56e:	xchg   ax,ax
  41f570:	push   rax
  41f571:	mov    rax,QWORD PTR fs:0x28
  41f57a:	mov    QWORD PTR [rsp],rax
  41f57e:	mov    BYTE PTR [rdi+0x10],sil
  41f582:	mov    rax,QWORD PTR fs:0x28
  41f58b:	cmp    rax,QWORD PTR [rsp]
  41f58f:	jne    41f593 <isspace@plt+0x1bc83>
  41f591:	pop    rax
  41f592:	ret    
  41f593:	call   403280 <__stack_chk_fail@plt>
  41f598:	nop    DWORD PTR [rax+rax*1+0x0]
  41f5a0:	push   rbx
  41f5a1:	sub    rsp,0x10
  41f5a5:	mov    rbx,rdi
  41f5a8:	mov    rax,QWORD PTR fs:0x28
  41f5b1:	mov    QWORD PTR [rsp+0x8],rax
  41f5b6:	mov    rax,QWORD PTR [rdi]
  41f5b9:	mov    rsi,QWORD PTR [rdi+0x8]
  41f5bd:	mov    QWORD PTR [rdi+0x8],rax
  41f5c1:	mov    QWORD PTR [rdi],rsi
  41f5c4:	mov    rax,QWORD PTR [rdi+0x40]
  41f5c8:	mov    rdi,QWORD PTR [rax]
  41f5cb:	call   410e10 <isspace@plt+0xd500>
  41f5d0:	mov    rdi,rbx
  41f5d3:	mov    rsi,rax
  41f5d6:	call   41a7c0 <isspace@plt+0x16eb0>
  41f5db:	mov    rax,QWORD PTR fs:0x28
  41f5e4:	cmp    rax,QWORD PTR [rsp+0x8]
  41f5e9:	jne    41f5f1 <isspace@plt+0x1bce1>
  41f5eb:	add    rsp,0x10
  41f5ef:	pop    rbx
  41f5f0:	ret    
  41f5f1:	call   403280 <__stack_chk_fail@plt>
  41f5f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f600:	push   rax
  41f601:	mov    rax,QWORD PTR fs:0x28
  41f60a:	mov    QWORD PTR [rsp],rax
  41f60e:	cmp    BYTE PTR [rdi+0x10],0x0
  41f612:	setne  al
  41f615:	mov    rcx,QWORD PTR fs:0x28
  41f61e:	cmp    rcx,QWORD PTR [rsp]
  41f622:	jne    41f626 <isspace@plt+0x1bd16>
  41f624:	pop    rcx
  41f625:	ret    
  41f626:	call   403280 <__stack_chk_fail@plt>
  41f62b:	nop    DWORD PTR [rax+rax*1+0x0]
  41f630:	push   r14
  41f632:	push   rbx
  41f633:	push   rax
  41f634:	mov    r14,rdi
  41f637:	mov    rax,QWORD PTR fs:0x28
  41f640:	mov    QWORD PTR [rsp],rax
  41f644:	mov    rdi,QWORD PTR [rdi+0xf8]
  41f64b:	test   rdi,rdi
  41f64e:	jne    41f677 <isspace@plt+0x1bd67>
  41f650:	jmp    41f74b <isspace@plt+0x1be3b>
  41f655:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f65f:	nop
  41f660:	dec    DWORD PTR [rcx+0xb0]
  41f666:	call   4030d0 <free@plt>
  41f66b:	mov    rdi,rbx
  41f66e:	test   rbx,rbx
  41f671:	je     41f74b <isspace@plt+0x1be3b>
  41f677:	mov    rbx,QWORD PTR [rdi+0x50]
  41f67b:	cmp    rdi,QWORD PTR [r14+0x98]
  41f682:	je     41f66b <isspace@plt+0x1bd5b>
  41f684:	mov    rax,rbx
  41f687:	test   rbx,rbx
  41f68a:	je     41f69c <isspace@plt+0x1bd8c>
  41f68c:	nop    DWORD PTR [rax+0x0]
  41f690:	dec    DWORD PTR [rax+0x3c]
  41f693:	mov    rax,QWORD PTR [rax+0x50]
  41f697:	test   rax,rax
  41f69a:	jne    41f690 <isspace@plt+0x1bd80>
  41f69c:	mov    rcx,QWORD PTR [rdi+0x48]
  41f6a0:	test   rcx,rcx
  41f6a3:	je     41f6e0 <isspace@plt+0x1bdd0>
  41f6a5:	mov    QWORD PTR [rcx+0x50],rbx
  41f6a9:	mov    rax,QWORD PTR [rdi+0x50]
  41f6ad:	test   rax,rax
  41f6b0:	je     41f6b6 <isspace@plt+0x1bda6>
  41f6b2:	mov    QWORD PTR [rax+0x48],rcx
  41f6b6:	mov    rcx,QWORD PTR [rdi+0x40]
  41f6ba:	cmp    QWORD PTR [rcx+0xf8],rdi
  41f6c1:	je     41f6f0 <isspace@plt+0x1bde0>
  41f6c3:	cmp    QWORD PTR [rcx+0x98],rdi
  41f6ca:	je     41f700 <isspace@plt+0x1bdf0>
  41f6cc:	cmp    QWORD PTR [rcx+0xa8],rdi
  41f6d3:	je     41f71c <isspace@plt+0x1be0c>
  41f6d5:	cmp    QWORD PTR [rcx+0xa0],rdi
  41f6dc:	jne    41f660 <isspace@plt+0x1bd50>
  41f6de:	jmp    41f734 <isspace@plt+0x1be24>
  41f6e0:	mov    rax,rbx
  41f6e3:	test   rax,rax
  41f6e6:	jne    41f6b2 <isspace@plt+0x1bda2>
  41f6e8:	jmp    41f6b6 <isspace@plt+0x1bda6>
  41f6ea:	nop    WORD PTR [rax+rax*1+0x0]
  41f6f0:	mov    QWORD PTR [rcx+0xf8],rax
  41f6f7:	cmp    QWORD PTR [rcx+0x98],rdi
  41f6fe:	jne    41f6cc <isspace@plt+0x1bdbc>
  41f700:	mov    rdx,rax
  41f703:	test   rax,rax
  41f706:	jne    41f70c <isspace@plt+0x1bdfc>
  41f708:	mov    rdx,QWORD PTR [rdi+0x48]
  41f70c:	mov    QWORD PTR [rcx+0x98],rdx
  41f713:	cmp    QWORD PTR [rcx+0xa8],rdi
  41f71a:	jne    41f6d5 <isspace@plt+0x1bdc5>
  41f71c:	mov    QWORD PTR [rcx+0xa8],0x0
  41f727:	cmp    QWORD PTR [rcx+0xa0],rdi
  41f72e:	jne    41f660 <isspace@plt+0x1bd50>
  41f734:	mov    rdx,QWORD PTR [rdi+0x48]
  41f738:	test   rdx,rdx
  41f73b:	cmovne rax,rdx
  41f73f:	mov    QWORD PTR [rcx+0xa0],rax
  41f746:	jmp    41f660 <isspace@plt+0x1bd50>
  41f74b:	mov    rdi,r14
  41f74e:	call   419f00 <isspace@plt+0x165f0>
  41f753:	mov    rax,QWORD PTR fs:0x28
  41f75c:	cmp    rax,QWORD PTR [rsp]
  41f760:	jne    41f76a <isspace@plt+0x1be5a>
  41f762:	add    rsp,0x8
  41f766:	pop    rbx
  41f767:	pop    r14
  41f769:	ret    
  41f76a:	call   403280 <__stack_chk_fail@plt>
  41f76f:	nop
  41f770:	push   rax
  41f771:	mov    rax,QWORD PTR fs:0x28
  41f77a:	mov    QWORD PTR [rsp],rax
  41f77e:	mov    rdi,QWORD PTR [rdi+0x98]
  41f785:	call   41f7a0 <isspace@plt+0x1be90>
  41f78a:	mov    rcx,QWORD PTR fs:0x28
  41f793:	cmp    rcx,QWORD PTR [rsp]
  41f797:	jne    41f79b <isspace@plt+0x1be8b>
  41f799:	pop    rcx
  41f79a:	ret    
  41f79b:	call   403280 <__stack_chk_fail@plt>
  41f7a0:	push   r15
  41f7a2:	push   r14
  41f7a4:	push   rbx
  41f7a5:	sub    rsp,0x20
  41f7a9:	mov    rax,QWORD PTR fs:0x28
  41f7b2:	mov    QWORD PTR [rsp+0x18],rax
  41f7b7:	test   rdi,rdi
  41f7ba:	je     41f822 <isspace@plt+0x1bf12>
  41f7bc:	mov    rbx,rdi
  41f7bf:	mov    rsi,QWORD PTR [rdi+0x8]
  41f7c3:	mov    rax,QWORD PTR [rdi+0x40]
  41f7c7:	mov    r14,QWORD PTR [rax]
  41f7ca:	mov    rdi,r14
  41f7cd:	call   410e10 <isspace@plt+0xd500>
  41f7d2:	mov    r15,rax
  41f7d5:	mov    rsi,QWORD PTR [rbx]
  41f7d8:	mov    rdi,r14
  41f7db:	call   410e10 <isspace@plt+0xd500>
  41f7e0:	mov    rdi,r15
  41f7e3:	mov    rsi,rax
  41f7e6:	call   417250 <isspace@plt+0x13940>
  41f7eb:	mov    QWORD PTR [rsp+0x8],rax
  41f7f0:	mov    QWORD PTR [rsp+0x10],rdx
  41f7f5:	lea    rdi,[rsp+0x8]
  41f7fa:	call   416fc0 <isspace@plt+0x136b0>
  41f7ff:	mov    rdx,QWORD PTR [rsp+0x10]
  41f804:	test   al,al
  41f806:	je     41f81b <isspace@plt+0x1bf0b>
  41f808:	mov    rdi,r14
  41f80b:	mov    rsi,rdx
  41f80e:	call   412d10 <isspace@plt+0xf400>
  41f813:	mov    rdx,rax
  41f816:	mov    QWORD PTR [rsp+0x10],rax
  41f81b:	mov    rax,QWORD PTR [rsp+0x8]
  41f820:	jmp    41f827 <isspace@plt+0x1bf17>
  41f822:	call   417080 <isspace@plt+0x13770>
  41f827:	mov    rcx,QWORD PTR fs:0x28
  41f830:	cmp    rcx,QWORD PTR [rsp+0x18]
  41f835:	jne    41f841 <isspace@plt+0x1bf31>
  41f837:	add    rsp,0x20
  41f83b:	pop    rbx
  41f83c:	pop    r14
  41f83e:	pop    r15
  41f840:	ret    
  41f841:	call   403280 <__stack_chk_fail@plt>
  41f846:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f850:	push   rbp
  41f851:	push   r15
  41f853:	push   r14
  41f855:	push   r13
  41f857:	push   r12
  41f859:	push   rbx
  41f85a:	push   rax
  41f85b:	mov    rbx,rsi
  41f85e:	mov    r14,rdi
  41f861:	mov    rax,QWORD PTR fs:0x28
  41f86a:	mov    QWORD PTR [rsp],rax
  41f86e:	mov    rax,QWORD PTR [rdi+0x40]
  41f872:	mov    r15,QWORD PTR [rax]
  41f875:	mov    rdi,r15
  41f878:	call   410890 <isspace@plt+0xcf80>
  41f87d:	mov    r13,rax
  41f880:	mov    rdi,rbx
  41f883:	call   416fc0 <isspace@plt+0x136b0>
  41f888:	test   al,al
  41f88a:	je     41f8ec <isspace@plt+0x1bfdc>
  41f88c:	cmp    QWORD PTR [rbx],r13
  41f88f:	jae    41f8ec <isspace@plt+0x1bfdc>
  41f891:	mov    rsi,QWORD PTR [r14+0x8]
  41f895:	mov    rdi,r15
  41f898:	call   410e10 <isspace@plt+0xd500>
  41f89d:	mov    r12,rax
  41f8a0:	mov    rsi,QWORD PTR [r14]
  41f8a3:	mov    rdi,r15
  41f8a6:	call   410e10 <isspace@plt+0xd500>
  41f8ab:	cmp    r12,0xffffffffffffffff
  41f8af:	setne  cl
  41f8b2:	cmp    r12,rax
  41f8b5:	seta   bpl
  41f8b9:	and    bpl,cl
  41f8bc:	mov    r12,QWORD PTR [rbx+0x8]
  41f8c0:	cmp    r12,r13
  41f8c3:	cmova  r12,r13
  41f8c7:	cmp    QWORD PTR [rbx],r12
  41f8ca:	je     41f8da <isspace@plt+0x1bfca>
  41f8cc:	mov    rdi,r15
  41f8cf:	mov    rsi,r12
  41f8d2:	call   412d60 <isspace@plt+0xf450>
  41f8d7:	mov    r12,rax
  41f8da:	test   bpl,bpl
  41f8dd:	je     41f8f0 <isspace@plt+0x1bfe0>
  41f8df:	mov    rsi,QWORD PTR [rbx]
  41f8e2:	mov    rdi,r14
  41f8e5:	call   41a7c0 <isspace@plt+0x16eb0>
  41f8ea:	jmp    41f8fe <isspace@plt+0x1bfee>
  41f8ec:	xor    eax,eax
  41f8ee:	jmp    41f90f <isspace@plt+0x1bfff>
  41f8f0:	mov    rdi,r14
  41f8f3:	mov    rsi,r12
  41f8f6:	call   41a7c0 <isspace@plt+0x16eb0>
  41f8fb:	mov    r12,QWORD PTR [rbx]
  41f8fe:	mov    rdi,r15
  41f901:	mov    rsi,r12
  41f904:	call   410d60 <isspace@plt+0xd450>
  41f909:	mov    QWORD PTR [r14+0x8],rax
  41f90d:	mov    al,0x1
  41f90f:	mov    rcx,QWORD PTR fs:0x28
  41f918:	cmp    rcx,QWORD PTR [rsp]
  41f91c:	jne    41f92d <isspace@plt+0x1c01d>
  41f91e:	add    rsp,0x8
  41f922:	pop    rbx
  41f923:	pop    r12
  41f925:	pop    r13
  41f927:	pop    r14
  41f929:	pop    r15
  41f92b:	pop    rbp
  41f92c:	ret    
  41f92d:	call   403280 <__stack_chk_fail@plt>
  41f932:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f93c:	nop    DWORD PTR [rax+0x0]
  41f940:	push   r15
  41f942:	push   r14
  41f944:	push   rbx
  41f945:	sub    rsp,0x20
  41f949:	mov    rbx,rsi
  41f94c:	mov    rax,QWORD PTR fs:0x28
  41f955:	mov    QWORD PTR [rsp+0x18],rax
  41f95a:	mov    r14,QWORD PTR [rdi]
  41f95d:	mov    rsi,QWORD PTR [rsi]
  41f960:	mov    rdi,r14
  41f963:	call   410e10 <isspace@plt+0xd500>
  41f968:	mov    r15,rax
  41f96b:	mov    rsi,QWORD PTR [rbx+0x8]
  41f96f:	mov    rdi,r14
  41f972:	call   410e10 <isspace@plt+0xd500>
  41f977:	mov    rdi,r15
  41f97a:	mov    rsi,rax
  41f97d:	call   417250 <isspace@plt+0x13940>
  41f982:	mov    QWORD PTR [rsp+0x8],rax
  41f987:	mov    QWORD PTR [rsp+0x10],rdx
  41f98c:	lea    rdi,[rsp+0x8]
  41f991:	call   416fc0 <isspace@plt+0x136b0>
  41f996:	mov    rdx,QWORD PTR [rsp+0x10]
  41f99b:	test   al,al
  41f99d:	je     41f9b2 <isspace@plt+0x1c0a2>
  41f99f:	mov    rdi,r14
  41f9a2:	mov    rsi,rdx
  41f9a5:	call   412d10 <isspace@plt+0xf400>
  41f9aa:	mov    rdx,rax
  41f9ad:	mov    QWORD PTR [rsp+0x10],rax
  41f9b2:	mov    rax,QWORD PTR [rsp+0x8]
  41f9b7:	mov    rcx,QWORD PTR fs:0x28
  41f9c0:	cmp    rcx,QWORD PTR [rsp+0x18]
  41f9c5:	jne    41f9d1 <isspace@plt+0x1c0c1>
  41f9c7:	add    rsp,0x20
  41f9cb:	pop    rbx
  41f9cc:	pop    r14
  41f9ce:	pop    r15
  41f9d0:	ret    
  41f9d1:	call   403280 <__stack_chk_fail@plt>
  41f9d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f9e0:	push   r15
  41f9e2:	push   r14
  41f9e4:	push   r13
  41f9e6:	push   r12
  41f9e8:	push   rbx
  41f9e9:	sub    rsp,0x10
  41f9ed:	mov    r14,rdx
  41f9f0:	mov    r13,rsi
  41f9f3:	mov    rax,QWORD PTR fs:0x28
  41f9fc:	mov    QWORD PTR [rsp+0x8],rax
  41fa01:	mov    r15,QWORD PTR [rdi]
  41fa04:	mov    rdi,r15
  41fa07:	call   410890 <isspace@plt+0xcf80>
  41fa0c:	mov    rbx,rax
  41fa0f:	mov    rdi,r13
  41fa12:	call   416fc0 <isspace@plt+0x136b0>
  41fa17:	test   al,al
  41fa19:	je     41fa67 <isspace@plt+0x1c157>
  41fa1b:	mov    rsi,QWORD PTR [r13+0x0]
  41fa1f:	cmp    rsi,rbx
  41fa22:	jae    41fa67 <isspace@plt+0x1c157>
  41fa24:	mov    rax,QWORD PTR [r13+0x8]
  41fa28:	cmp    rax,rbx
  41fa2b:	cmova  rax,rbx
  41fa2f:	mov    r12,rsi
  41fa32:	cmp    rsi,rax
  41fa35:	je     41fa49 <isspace@plt+0x1c139>
  41fa37:	mov    rdi,r15
  41fa3a:	mov    rsi,rax
  41fa3d:	call   412d60 <isspace@plt+0xf450>
  41fa42:	mov    r12,rax
  41fa45:	mov    rsi,QWORD PTR [r13+0x0]
  41fa49:	mov    rdi,r15
  41fa4c:	call   410d60 <isspace@plt+0xd450>
  41fa51:	mov    QWORD PTR [r14],rax
  41fa54:	mov    rdi,r15
  41fa57:	mov    rsi,r12
  41fa5a:	call   410d60 <isspace@plt+0xd450>
  41fa5f:	mov    QWORD PTR [r14+0x8],rax
  41fa63:	mov    al,0x1
  41fa65:	jmp    41fa69 <isspace@plt+0x1c159>
  41fa67:	xor    eax,eax
  41fa69:	mov    rcx,QWORD PTR fs:0x28
  41fa72:	cmp    rcx,QWORD PTR [rsp+0x8]
  41fa77:	jne    41fa87 <isspace@plt+0x1c177>
  41fa79:	add    rsp,0x10
  41fa7d:	pop    rbx
  41fa7e:	pop    r12
  41fa80:	pop    r13
  41fa82:	pop    r14
  41fa84:	pop    r15
  41fa86:	ret    
  41fa87:	call   403280 <__stack_chk_fail@plt>
  41fa8c:	nop    DWORD PTR [rax+0x0]
  41fa90:	push   rbp
  41fa91:	push   r15
  41fa93:	push   r14
  41fa95:	push   r13
  41fa97:	push   r12
  41fa99:	push   rbx
  41fa9a:	push   rax
  41fa9b:	mov    r14d,edx
  41fa9e:	mov    r12,rsi
  41faa1:	mov    r15,rdi
  41faa4:	mov    rax,QWORD PTR fs:0x28
  41faad:	mov    QWORD PTR [rsp],rax
  41fab1:	mov    rbp,QWORD PTR [rdi+0xf8]
  41fab8:	test   rbp,rbp
  41fabb:	je     41fb8d <isspace@plt+0x1c27d>
  41fac1:	xor    eax,eax
  41fac3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41facd:	nop    DWORD PTR [rax]
  41fad0:	mov    rbx,rax
  41fad3:	mov    rdi,r12
  41fad6:	mov    rsi,rax
  41fad9:	call   403d30 <isspace@plt+0x420>
  41fade:	test   rax,rax
  41fae1:	je     41fb0e <isspace@plt+0x1c1fe>
  41fae3:	mov    rdi,rbp
  41fae6:	mov    rsi,rax
  41fae9:	call   41f850 <isspace@plt+0x1bf40>
  41faee:	test   al,al
  41faf0:	je     41fb0e <isspace@plt+0x1c1fe>
  41faf2:	lea    rax,[rbx+0x1]
  41faf6:	mov    BYTE PTR [rbp+0x10],r14b
  41fafa:	mov    rbp,QWORD PTR [rbp+0x50]
  41fafe:	test   rbp,rbp
  41fb01:	jne    41fad0 <isspace@plt+0x1c1c0>
  41fb03:	inc    rbx
  41fb06:	mov    r13,rbx
  41fb09:	jmp    41fb90 <isspace@plt+0x1c280>
  41fb0e:	lea    r13,[rbx+0x1]
  41fb12:	jmp    41fb2a <isspace@plt+0x1c21a>
  41fb14:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fb1e:	xchg   ax,ax
  41fb20:	call   41ece0 <isspace@plt+0x1b3d0>
  41fb25:	test   rbp,rbp
  41fb28:	je     41fb90 <isspace@plt+0x1c280>
  41fb2a:	mov    rdi,rbp
  41fb2d:	mov    rax,QWORD PTR [rbp+0x40]
  41fb31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fb3b:	nop    DWORD PTR [rax+rax*1+0x0]
  41fb40:	mov    rbp,QWORD PTR [rbp+0x50]
  41fb44:	test   rbp,rbp
  41fb47:	je     41fb80 <isspace@plt+0x1c270>
  41fb49:	mov    ecx,DWORD PTR [rbp+0x38]
  41fb4c:	cmp    ecx,DWORD PTR [rax+0x100]
  41fb52:	je     41fb40 <isspace@plt+0x1c230>
  41fb54:	test   rbx,rbx
  41fb57:	jne    41fb20 <isspace@plt+0x1c210>
  41fb59:	cmp    rdi,QWORD PTR [r15+0x98]
  41fb60:	jne    41fb20 <isspace@plt+0x1c210>
  41fb62:	mov    BYTE PTR [rdi+0x10],0x0
  41fb66:	mov    rcx,QWORD PTR [rdi]
  41fb69:	mov    QWORD PTR [rdi+0x8],rcx
  41fb6d:	mov    BYTE PTR [rax+0x104],0x1
  41fb74:	jmp    41fb25 <isspace@plt+0x1c215>
  41fb76:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fb80:	inc    DWORD PTR [rax+0x100]
  41fb86:	test   rbx,rbx
  41fb89:	jne    41fb20 <isspace@plt+0x1c210>
  41fb8b:	jmp    41fb59 <isspace@plt+0x1c249>
  41fb8d:	xor    r13d,r13d
  41fb90:	mov    rdi,r12
  41fb93:	mov    rsi,r13
  41fb96:	call   403d30 <isspace@plt+0x420>
  41fb9b:	test   rax,rax
  41fb9e:	je     41fbf1 <isspace@plt+0x1c2e1>
  41fba0:	mov    rbx,rax
  41fba3:	inc    r13
  41fba6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fbb0:	mov    rsi,QWORD PTR [rbx]
  41fbb3:	mov    rdi,r15
  41fbb6:	mov    edx,0x1
  41fbbb:	call   41e7d0 <isspace@plt+0x1aec0>
  41fbc0:	test   rax,rax
  41fbc3:	je     41fbf1 <isspace@plt+0x1c2e1>
  41fbc5:	mov    rbp,rax
  41fbc8:	mov    rdi,rax
  41fbcb:	mov    rsi,rbx
  41fbce:	call   41f850 <isspace@plt+0x1bf40>
  41fbd3:	test   al,al
  41fbd5:	je     41fbf1 <isspace@plt+0x1c2e1>
  41fbd7:	mov    BYTE PTR [rbp+0x10],r14b
  41fbdb:	mov    rdi,r12
  41fbde:	mov    rsi,r13
  41fbe1:	call   403d30 <isspace@plt+0x420>
  41fbe6:	mov    rbx,rax
  41fbe9:	inc    r13
  41fbec:	test   rax,rax
  41fbef:	jne    41fbb0 <isspace@plt+0x1c2a0>
  41fbf1:	mov    rbx,QWORD PTR [r15+0xf8]
  41fbf8:	test   rbx,rbx
  41fbfb:	je     41fc26 <isspace@plt+0x1c316>
  41fbfd:	mov    rax,QWORD PTR [rbx+0x40]
  41fc01:	mov    QWORD PTR [rax+0x98],rbx
  41fc08:	mov    rsi,QWORD PTR [rbx]
  41fc0b:	mov    rbp,QWORD PTR [rbx+0x8]
  41fc0f:	mov    rdi,QWORD PTR [rax]
  41fc12:	call   410e10 <isspace@plt+0xd500>
  41fc17:	mov    rdi,rbx
  41fc1a:	mov    rsi,rax
  41fc1d:	call   41a7c0 <isspace@plt+0x16eb0>
  41fc22:	mov    QWORD PTR [rbx+0x8],rbp
  41fc26:	mov    rax,QWORD PTR fs:0x28
  41fc2f:	cmp    rax,QWORD PTR [rsp]
  41fc33:	jne    41fc44 <isspace@plt+0x1c334>
  41fc35:	add    rsp,0x8
  41fc39:	pop    rbx
  41fc3a:	pop    r12
  41fc3c:	pop    r13
  41fc3e:	pop    r14
  41fc40:	pop    r15
  41fc42:	pop    rbp
  41fc43:	ret    
  41fc44:	call   403280 <__stack_chk_fail@plt>
  41fc49:	nop    DWORD PTR [rax+0x0]
  41fc50:	push   r15
  41fc52:	push   r14
  41fc54:	push   rbx
  41fc55:	sub    rsp,0x20
  41fc59:	mov    rbx,rsi
  41fc5c:	mov    r14,rdi
  41fc5f:	mov    rax,QWORD PTR fs:0x28
  41fc68:	mov    QWORD PTR [rsp+0x18],rax
  41fc6d:	mov    esi,0x10
  41fc72:	call   403a50 <isspace@plt+0x140>
  41fc77:	movsxd rsi,DWORD PTR [rbx+0xb0]
  41fc7e:	mov    rdi,r14
  41fc81:	call   403ad0 <isspace@plt+0x1c0>
  41fc86:	test   al,al
  41fc88:	je     41fcd4 <isspace@plt+0x1c3c4>
  41fc8a:	mov    rbx,QWORD PTR [rbx+0xf8]
  41fc91:	test   rbx,rbx
  41fc94:	je     41fcd4 <isspace@plt+0x1c3c4>
  41fc96:	lea    r15,[rsp+0x8]
  41fc9b:	jmp    41fca9 <isspace@plt+0x1c399>
  41fc9d:	nop    DWORD PTR [rax]
  41fca0:	mov    rbx,QWORD PTR [rbx+0x50]
  41fca4:	test   rbx,rbx
  41fca7:	je     41fcd4 <isspace@plt+0x1c3c4>
  41fca9:	mov    rdi,rbx
  41fcac:	call   41f7a0 <isspace@plt+0x1be90>
  41fcb1:	mov    QWORD PTR [rsp+0x8],rax
  41fcb6:	mov    QWORD PTR [rsp+0x10],rdx
  41fcbb:	mov    rdi,r15
  41fcbe:	call   416fc0 <isspace@plt+0x136b0>
  41fcc3:	test   al,al
  41fcc5:	je     41fca0 <isspace@plt+0x1c390>
  41fcc7:	mov    rdi,r14
  41fcca:	mov    rsi,r15
  41fccd:	call   403d80 <isspace@plt+0x470>
  41fcd2:	jmp    41fca0 <isspace@plt+0x1c390>
  41fcd4:	mov    rax,QWORD PTR fs:0x28
  41fcdd:	cmp    rax,QWORD PTR [rsp+0x18]
  41fce2:	jne    41fcf1 <isspace@plt+0x1c3e1>
  41fce4:	mov    rax,r14
  41fce7:	add    rsp,0x20
  41fceb:	pop    rbx
  41fcec:	pop    r14
  41fcee:	pop    r15
  41fcf0:	ret    
  41fcf1:	call   403280 <__stack_chk_fail@plt>
  41fcf6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41fd00:	push   r15
  41fd02:	push   r14
  41fd04:	push   r13
  41fd06:	push   r12
  41fd08:	push   rbx
  41fd09:	sub    rsp,0x30
  41fd0d:	mov    rbx,rdi
  41fd10:	mov    rax,QWORD PTR fs:0x28
  41fd19:	mov    QWORD PTR [rsp+0x28],rax
  41fd1e:	call   417080 <isspace@plt+0x13770>
  41fd23:	mov    QWORD PTR [rsp+0x10],rax
  41fd28:	mov    QWORD PTR [rsp+0x18],rdx
  41fd2d:	mov    r13,QWORD PTR [rbx+0xf8]
  41fd34:	test   r13,r13
  41fd37:	je     41fdd4 <isspace@plt+0x1c4c4>
  41fd3d:	xor    r12d,r12d
  41fd40:	mov    r14,rsp
  41fd43:	lea    r15,[rsp+0x10]
  41fd48:	jmp    41fd6c <isspace@plt+0x1c45c>
  41fd4a:	mov    rdi,r15
  41fd4d:	mov    rsi,r14
  41fd50:	call   4170c0 <isspace@plt+0x137b0>
  41fd55:	mov    QWORD PTR [rsp+0x10],rax
  41fd5a:	mov    QWORD PTR [rsp+0x18],rdx
  41fd5f:	mov    rdi,rbx
  41fd62:	call   41ece0 <isspace@plt+0x1b3d0>
  41fd67:	test   r13,r13
  41fd6a:	je     41fdc2 <isspace@plt+0x1c4b2>
  41fd6c:	mov    rbx,r13
  41fd6f:	mov    r13,QWORD PTR [r13+0x50]
  41fd73:	mov    rdi,rbx
  41fd76:	call   41f7a0 <isspace@plt+0x1be90>
  41fd7b:	mov    QWORD PTR [rsp],rax
  41fd7f:	mov    QWORD PTR [rsp+0x8],rdx
  41fd84:	mov    rdi,r14
  41fd87:	call   416fc0 <isspace@plt+0x136b0>
  41fd8c:	test   al,al
  41fd8e:	je     41fd5f <isspace@plt+0x1c44f>
  41fd90:	test   r12,r12
  41fd93:	je     41fdaf <isspace@plt+0x1c49f>
  41fd95:	mov    rdi,r15
  41fd98:	mov    rsi,r14
  41fd9b:	call   4171d0 <isspace@plt+0x138c0>
  41fda0:	test   al,al
  41fda2:	jne    41fd4a <isspace@plt+0x1c43a>
  41fda4:	mov    rdi,r12
  41fda7:	mov    rsi,r15
  41fdaa:	call   41f850 <isspace@plt+0x1bf40>
  41fdaf:	vmovups xmm0,XMMWORD PTR [rsp]
  41fdb4:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  41fdba:	mov    r12,rbx
  41fdbd:	test   r13,r13
  41fdc0:	jne    41fd6c <isspace@plt+0x1c45c>
  41fdc2:	test   r12,r12
  41fdc5:	je     41fdd4 <isspace@plt+0x1c4c4>
  41fdc7:	lea    rsi,[rsp+0x10]
  41fdcc:	mov    rdi,r12
  41fdcf:	call   41f850 <isspace@plt+0x1bf40>
  41fdd4:	mov    rax,QWORD PTR fs:0x28
  41fddd:	cmp    rax,QWORD PTR [rsp+0x28]
  41fde2:	jne    41fdf2 <isspace@plt+0x1c4e2>
  41fde4:	add    rsp,0x30
  41fde8:	pop    rbx
  41fde9:	pop    r12
  41fdeb:	pop    r13
  41fded:	pop    r14
  41fdef:	pop    r15
  41fdf1:	ret    
  41fdf2:	call   403280 <__stack_chk_fail@plt>
  41fdf7:	nop    WORD PTR [rax+rax*1+0x0]
  41fe00:	push   rax
  41fe01:	mov    rax,QWORD PTR fs:0x28
  41fe0a:	mov    QWORD PTR [rsp],rax
  41fe0e:	mov    rax,QWORD PTR [rdi]
  41fe11:	mov    rcx,QWORD PTR fs:0x28
  41fe1a:	cmp    rcx,QWORD PTR [rsp]
  41fe1e:	jne    41fe22 <isspace@plt+0x1c512>
  41fe20:	pop    rcx
  41fe21:	ret    
  41fe22:	call   403280 <__stack_chk_fail@plt>
  41fe27:	nop    WORD PTR [rax+rax*1+0x0]
  41fe30:	push   rax
  41fe31:	mov    rax,QWORD PTR fs:0x28
  41fe3a:	mov    QWORD PTR [rsp],rax
  41fe3e:	mov    rax,QWORD PTR [rdi+0xe8]
  41fe45:	mov    rax,QWORD PTR [rax]
  41fe48:	mov    rcx,QWORD PTR fs:0x28
  41fe51:	cmp    rcx,QWORD PTR [rsp]
  41fe55:	jne    41fe59 <isspace@plt+0x1c549>
  41fe57:	pop    rcx
  41fe58:	ret    
  41fe59:	call   403280 <__stack_chk_fail@plt>
  41fe5e:	xchg   ax,ax
  41fe60:	push   rbp
  41fe61:	push   r14
  41fe63:	push   rbx
  41fe64:	sub    rsp,0xd0
  41fe6b:	mov    ebp,esi
  41fe6d:	mov    rbx,rdi
  41fe70:	test   al,al
  41fe72:	je     41fead <isspace@plt+0x1c59d>
  41fe74:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  41fe7a:	vmovaps XMMWORD PTR [rsp+0x40],xmm1
  41fe80:	vmovaps XMMWORD PTR [rsp+0x50],xmm2
  41fe86:	vmovaps XMMWORD PTR [rsp+0x60],xmm3
  41fe8c:	vmovaps XMMWORD PTR [rsp+0x70],xmm4
  41fe92:	vmovaps XMMWORD PTR [rsp+0x80],xmm5
  41fe9b:	vmovaps XMMWORD PTR [rsp+0x90],xmm6
  41fea4:	vmovaps XMMWORD PTR [rsp+0xa0],xmm7
  41fead:	mov    QWORD PTR [rsp+0x10],rdx
  41feb2:	mov    QWORD PTR [rsp+0x18],rcx
  41feb7:	mov    QWORD PTR [rsp+0x20],r8
  41febc:	mov    QWORD PTR [rsp+0x28],r9
  41fec1:	mov    rax,QWORD PTR fs:0x28
  41feca:	mov    QWORD PTR [rsp+0xc8],rax
  41fed2:	cmp    QWORD PTR [rbx+0xad8],0x0
  41feda:	je     41ff7d <isspace@plt+0x1c66d>
  41fee0:	cmp    BYTE PTR [rbx+0x9b0],0x0
  41fee7:	jne    41ff0c <isspace@plt+0x1c5fc>
  41fee9:	mov    BYTE PTR [rbx+0x9b0],0x1
  41fef0:	mov    rdi,QWORD PTR [rbx]
  41fef3:	mov    rsi,rbx
  41fef6:	call   QWORD PTR [rdi]
  41fef8:	mov    rax,QWORD PTR [rbx+0xad8]
  41feff:	mov    rax,QWORD PTR [rax]
  41ff02:	test   rax,rax
  41ff05:	je     41ff0c <isspace@plt+0x1c5fc>
  41ff07:	mov    rdi,rbx
  41ff0a:	call   rax
  41ff0c:	mov    rax,rsp
  41ff0f:	mov    QWORD PTR [rsp+0xc0],rax
  41ff17:	lea    rax,[rsp+0xf0]
  41ff1f:	mov    QWORD PTR [rsp+0xb8],rax
  41ff27:	movabs rax,0x3000000010
  41ff31:	mov    QWORD PTR [rsp+0xb0],rax
  41ff39:	mov    r14b,0x1
  41ff3c:	lea    eax,[rbp-0x1]
  41ff3f:	cmp    eax,0xa
  41ff42:	ja     420168 <isspace@plt+0x1c858>
  41ff48:	lea    rcx,[rip+0x10d0d]        # 430c5c <isspace@plt+0x2d34c>
  41ff4f:	movsxd rax,DWORD PTR [rcx+rax*4]
  41ff53:	add    rax,rcx
  41ff56:	jmp    rax
  41ff58:	movsxd rax,DWORD PTR [rsp+0xb0]
  41ff60:	cmp    rax,0x28
  41ff64:	ja     41ffaa <isspace@plt+0x1c69a>
  41ff66:	mov    rcx,rax
  41ff69:	add    rcx,QWORD PTR [rsp+0xc0]
  41ff71:	add    eax,0x8
  41ff74:	mov    DWORD PTR [rsp+0xb0],eax
  41ff7b:	jmp    41ffbe <isspace@plt+0x1c6ae>
  41ff7d:	mov    r14b,0x1
  41ff80:	jmp    420168 <isspace@plt+0x1c858>
  41ff85:	movsxd rcx,DWORD PTR [rsp+0xb0]
  41ff8d:	cmp    rcx,0x28
  41ff91:	ja     41fff7 <isspace@plt+0x1c6e7>
  41ff93:	mov    rax,rcx
  41ff96:	add    rax,QWORD PTR [rsp+0xc0]
  41ff9e:	add    ecx,0x8
  41ffa1:	mov    DWORD PTR [rsp+0xb0],ecx
  41ffa8:	jmp    42000b <isspace@plt+0x1c6fb>
  41ffaa:	mov    rcx,QWORD PTR [rsp+0xb8]
  41ffb2:	lea    rdx,[rcx+0x8]
  41ffb6:	mov    QWORD PTR [rsp+0xb8],rdx
  41ffbe:	mov    rsi,QWORD PTR [rcx]
  41ffc1:	cmp    BYTE PTR [rsi+0x18],0x0
  41ffc5:	jne    420168 <isspace@plt+0x1c858>
  41ffcb:	add    ebp,0xfffffffd
  41ffce:	cmp    ebp,0x3
  41ffd1:	ja     420168 <isspace@plt+0x1c858>
  41ffd7:	lea    rcx,[rip+0x10caa]        # 430c88 <isspace@plt+0x2d378>
  41ffde:	movsxd rdx,DWORD PTR [rcx+rbp*4]
  41ffe2:	add    rdx,rcx
  41ffe5:	jmp    rdx
  41ffe7:	mov    rax,QWORD PTR [rbx+0xad8]
  41ffee:	mov    rax,QWORD PTR [rax+0x28]
  41fff2:	jmp    42015e <isspace@plt+0x1c84e>
  41fff7:	mov    rax,QWORD PTR [rsp+0xb8]
  41ffff:	lea    rcx,[rax+0x8]
  420003:	mov    QWORD PTR [rsp+0xb8],rcx
  42000b:	mov    rsi,QWORD PTR [rax]
  42000e:	cmp    ebp,0xa
  420011:	je     420021 <isspace@plt+0x1c711>
  420013:	mov    rax,QWORD PTR [rsi+0x10]
  420017:	cmp    BYTE PTR [rax+0x18],0x0
  42001b:	jne    420168 <isspace@plt+0x1c858>
  420021:	mov    rax,QWORD PTR [rbx+0xad8]
  420028:	cmp    ebp,0x7
  42002b:	jne    420036 <isspace@plt+0x1c726>
  42002d:	mov    rcx,QWORD PTR [rax+0x48]
  420031:	test   rcx,rcx
  420034:	jne    42005a <isspace@plt+0x1c74a>
  420036:	cmp    ebp,0x8
  420039:	jne    420044 <isspace@plt+0x1c734>
  42003b:	mov    rcx,QWORD PTR [rax+0x50]
  42003f:	test   rcx,rcx
  420042:	jne    42005a <isspace@plt+0x1c74a>
  420044:	cmp    ebp,0x9
  420047:	jne    420155 <isspace@plt+0x1c845>
  42004d:	mov    rcx,QWORD PTR [rax+0x58]
  420051:	test   rcx,rcx
  420054:	je     420155 <isspace@plt+0x1c845>
  42005a:	mov    rdi,rbx
  42005d:	call   rcx
  42005f:	jmp    420168 <isspace@plt+0x1c858>
  420064:	mov    rax,QWORD PTR [rbx+0xad8]
  42006b:	mov    rax,QWORD PTR [rax+0x8]
  42006f:	test   rax,rax
  420072:	jne    42008d <isspace@plt+0x1c77d>
  420074:	jmp    420168 <isspace@plt+0x1c858>
  420079:	mov    rax,QWORD PTR [rbx+0xad8]
  420080:	mov    rax,QWORD PTR [rax+0x10]
  420084:	test   rax,rax
  420087:	je     420168 <isspace@plt+0x1c858>
  42008d:	mov    rdi,rbx
  420090:	call   rax
  420092:	jmp    420168 <isspace@plt+0x1c858>
  420097:	mov    rax,QWORD PTR [rbx+0xad8]
  42009e:	mov    rax,QWORD PTR [rax+0x68]
  4200a2:	test   rax,rax
  4200a5:	je     420168 <isspace@plt+0x1c858>
  4200ab:	movsxd rdx,DWORD PTR [rsp+0xb0]
  4200b3:	cmp    rdx,0x28
  4200b7:	ja     4200d0 <isspace@plt+0x1c7c0>
  4200b9:	mov    rcx,rdx
  4200bc:	add    rcx,QWORD PTR [rsp+0xc0]
  4200c4:	add    edx,0x8
  4200c7:	mov    DWORD PTR [rsp+0xb0],edx
  4200ce:	jmp    4200e4 <isspace@plt+0x1c7d4>
  4200d0:	mov    rcx,QWORD PTR [rsp+0xb8]
  4200d8:	lea    rdx,[rcx+0x8]
  4200dc:	mov    QWORD PTR [rsp+0xb8],rdx
  4200e4:	mov    rsi,QWORD PTR [rcx]
  4200e7:	jmp    420163 <isspace@plt+0x1c853>
  4200e9:	mov    rcx,QWORD PTR [rbx+0xad8]
  4200f0:	mov    rcx,QWORD PTR [rcx+0x38]
  4200f4:	test   rcx,rcx
  4200f7:	je     420168 <isspace@plt+0x1c858>
  4200f9:	cmp    eax,0x28
  4200fc:	ja     42018a <isspace@plt+0x1c87a>
  420102:	movsxd rdx,eax
  420105:	add    rdx,QWORD PTR [rsp+0xc0]
  42010d:	add    eax,0x8
  420110:	mov    DWORD PTR [rsp+0xb0],eax
  420117:	jmp    42019e <isspace@plt+0x1c88e>
  42011c:	mov    rcx,QWORD PTR [rbx+0xad8]
  420123:	mov    rcx,QWORD PTR [rcx+0x30]
  420127:	test   rcx,rcx
  42012a:	je     420168 <isspace@plt+0x1c858>
  42012c:	cmp    eax,0x28
  42012f:	ja     4201a8 <isspace@plt+0x1c898>
  420131:	movsxd rdx,eax
  420134:	add    rdx,QWORD PTR [rsp+0xc0]
  42013c:	add    eax,0x8
  42013f:	mov    DWORD PTR [rsp+0xb0],eax
  420146:	jmp    4201bc <isspace@plt+0x1c8ac>
  420148:	mov    rax,QWORD PTR [rbx+0xad8]
  42014f:	mov    rax,QWORD PTR [rax+0x40]
  420153:	jmp    42015e <isspace@plt+0x1c84e>
  420155:	cmp    ebp,0xa
  420158:	jne    420168 <isspace@plt+0x1c858>
  42015a:	mov    rax,QWORD PTR [rax+0x60]
  42015e:	test   rax,rax
  420161:	je     420168 <isspace@plt+0x1c858>
  420163:	mov    rdi,rbx
  420166:	call   rax
  420168:	mov    rax,QWORD PTR fs:0x28
  420171:	cmp    rax,QWORD PTR [rsp+0xc8]
  420179:	jne    4201c9 <isspace@plt+0x1c8b9>
  42017b:	mov    eax,r14d
  42017e:	add    rsp,0xd0
  420185:	pop    rbx
  420186:	pop    r14
  420188:	pop    rbp
  420189:	ret    
  42018a:	mov    rdx,QWORD PTR [rsp+0xb8]
  420192:	lea    rax,[rdx+0x8]
  420196:	mov    QWORD PTR [rsp+0xb8],rax
  42019e:	mov    rdx,QWORD PTR [rdx]
  4201a1:	mov    rdi,rbx
  4201a4:	call   rcx
  4201a6:	jmp    420168 <isspace@plt+0x1c858>
  4201a8:	mov    rdx,QWORD PTR [rsp+0xb8]
  4201b0:	lea    rax,[rdx+0x8]
  4201b4:	mov    QWORD PTR [rsp+0xb8],rax
  4201bc:	mov    rdx,QWORD PTR [rdx]
  4201bf:	mov    rdi,rbx
  4201c2:	call   rcx
  4201c4:	mov    r14d,eax
  4201c7:	jmp    420168 <isspace@plt+0x1c858>
  4201c9:	call   403280 <__stack_chk_fail@plt>
  4201ce:	xchg   ax,ax
  4201d0:	push   r15
  4201d2:	push   r14
  4201d4:	push   r13
  4201d6:	push   r12
  4201d8:	push   rbx
  4201d9:	sub    rsp,0x1020
  4201e0:	mov    rax,QWORD PTR fs:0x28
  4201e9:	mov    QWORD PTR [rsp+0x1018],rax
  4201f1:	test   rdi,rdi
  4201f4:	je     4202c6 <isspace@plt+0x1c9b6>
  4201fa:	mov    rbx,rdi
  4201fd:	call   403850 <strdup@plt>
  420202:	mov    r15,rax
  420205:	mov    rdi,rbx
  420208:	call   403850 <strdup@plt>
  42020d:	mov    r14,rax
  420210:	lea    rdi,[rsp+0x10]
  420215:	xor    ebx,ebx
  420217:	mov    edx,0x1000
  42021c:	xor    esi,esi
  42021e:	call   403360 <memset@plt>
  420223:	test   r15,r15
  420226:	je     42029b <isspace@plt+0x1c98b>
  420228:	test   r14,r14
  42022b:	je     42029b <isspace@plt+0x1c98b>
  42022d:	mov    rdi,r15
  420230:	call   403350 <dirname@plt>
  420235:	mov    r12,rax
  420238:	mov    rdi,r14
  42023b:	call   403500 <__xpg_basename@plt>
  420240:	mov    r13,rax
  420243:	xor    ebx,ebx
  420245:	mov    rdi,r12
  420248:	xor    esi,esi
  42024a:	call   4034c0 <realpath@plt>
  42024f:	test   rax,rax
  420252:	je     42029b <isspace@plt+0x1c98b>
  420254:	mov    r12,rax
  420257:	lea    rsi,[rip+0xfb1b]        # 42fd79 <isspace@plt+0x2c469>
  42025e:	mov    rdi,rax
  420261:	call   403470 <strcmp@plt>
  420266:	test   eax,eax
  420268:	jne    42026f <isspace@plt+0x1c95f>
  42026a:	mov    BYTE PTR [r12],0x0
  42026f:	mov    QWORD PTR [rsp],r13
  420273:	lea    r8,[rip+0x10aa6]        # 430d20 <isspace@plt+0x2d410>
  42027a:	lea    rdi,[rsp+0x10]
  42027f:	mov    esi,0x1000
  420284:	mov    ecx,0x1000
  420289:	mov    edx,0x1
  42028e:	mov    r9,r12
  420291:	xor    eax,eax
  420293:	call   4030c0 <__snprintf_chk@plt>
  420298:	mov    rbx,r12
  42029b:	mov    rdi,r15
  42029e:	call   4030d0 <free@plt>
  4202a3:	mov    rdi,r14
  4202a6:	call   4030d0 <free@plt>
  4202ab:	mov    rdi,rbx
  4202ae:	call   4030d0 <free@plt>
  4202b3:	cmp    BYTE PTR [rsp+0x10],0x0
  4202b8:	je     4202c6 <isspace@plt+0x1c9b6>
  4202ba:	lea    rdi,[rsp+0x10]
  4202bf:	call   403850 <strdup@plt>
  4202c4:	jmp    4202c8 <isspace@plt+0x1c9b8>
  4202c6:	xor    eax,eax
  4202c8:	mov    rcx,QWORD PTR fs:0x28
  4202d1:	cmp    rcx,QWORD PTR [rsp+0x1018]
  4202d9:	jne    4202ec <isspace@plt+0x1c9dc>
  4202db:	add    rsp,0x1020
  4202e2:	pop    rbx
  4202e3:	pop    r12
  4202e5:	pop    r13
  4202e7:	pop    r14
  4202e9:	pop    r15
  4202eb:	ret    
  4202ec:	call   403280 <__stack_chk_fail@plt>
  4202f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4202fb:	nop    DWORD PTR [rax+rax*1+0x0]
  420300:	push   r14
  420302:	push   rbx
  420303:	push   rax
  420304:	mov    r14,rdi
  420307:	mov    rax,QWORD PTR fs:0x28
  420310:	mov    QWORD PTR [rsp],rax
  420314:	mov    rdi,QWORD PTR [rdi+0x8]
  420318:	cmp    rdi,rsi
  42031b:	je     420331 <isspace@plt+0x1ca21>
  42031d:	mov    rbx,rsi
  420320:	call   4030d0 <free@plt>
  420325:	mov    rdi,rbx
  420328:	call   4201d0 <isspace@plt+0x1c8c0>
  42032d:	mov    QWORD PTR [r14+0x8],rax
  420331:	mov    rax,QWORD PTR fs:0x28
  42033a:	cmp    rax,QWORD PTR [rsp]
  42033e:	jne    420348 <isspace@plt+0x1ca38>
  420340:	add    rsp,0x8
  420344:	pop    rbx
  420345:	pop    r14
  420347:	ret    
  420348:	call   403280 <__stack_chk_fail@plt>
  42034d:	nop    DWORD PTR [rax]
  420350:	push   r14
  420352:	push   rbx
  420353:	sub    rsp,0x1008
  42035a:	mov    rax,QWORD PTR fs:0x28
  420363:	mov    QWORD PTR [rsp+0x1000],rax
  42036b:	cmp    QWORD PTR [rdi+0x8],0x0
  420370:	je     4203bf <isspace@plt+0x1caaf>
  420372:	mov    rbx,rdi
  420375:	mov    rdi,rsp
  420378:	mov    esi,0x1000
  42037d:	call   4033b0 <getcwd@plt>
  420382:	mov    rbx,QWORD PTR [rbx+0x8]
  420386:	test   rax,rax
  420389:	je     4203c1 <isspace@plt+0x1cab1>
  42038b:	mov    r14,rsp
  42038e:	mov    rdi,r14
  420391:	call   403250 <strlen@plt>
  420396:	mov    rdi,rbx
  420399:	mov    rsi,r14
  42039c:	mov    rdx,rax
  42039f:	call   403160 <strncmp@plt>
  4203a4:	test   eax,eax
  4203a6:	jne    4203c1 <isspace@plt+0x1cab1>
  4203a8:	mov    rdi,rsp
  4203ab:	call   403250 <strlen@plt>
  4203b0:	cmp    BYTE PTR [rbx+rax*1],0x2f
  4203b4:	lea    rax,[rbx+rax*1+0x1]
  4203b9:	cmove  rbx,rax
  4203bd:	jmp    4203c1 <isspace@plt+0x1cab1>
  4203bf:	xor    ebx,ebx
  4203c1:	mov    rax,QWORD PTR fs:0x28
  4203ca:	cmp    rax,QWORD PTR [rsp+0x1000]
  4203d2:	jne    4203e2 <isspace@plt+0x1cad2>
  4203d4:	mov    rax,rbx
  4203d7:	add    rsp,0x1008
  4203de:	pop    rbx
  4203df:	pop    r14
  4203e1:	ret    
  4203e2:	call   403280 <__stack_chk_fail@plt>
  4203e7:	nop    WORD PTR [rax+rax*1+0x0]
  4203f0:	push   rax
  4203f1:	mov    rax,QWORD PTR fs:0x28
  4203fa:	mov    QWORD PTR [rsp],rax
  4203fe:	mov    rdi,QWORD PTR [rdi+0x8]
  420402:	call   QWORD PTR [rdi+0x8]
  420405:	mov    rax,QWORD PTR fs:0x28
  42040e:	cmp    rax,QWORD PTR [rsp]
  420412:	jne    420416 <isspace@plt+0x1cb06>
  420414:	pop    rax
  420415:	ret    
  420416:	call   403280 <__stack_chk_fail@plt>
  42041b:	nop    DWORD PTR [rax+rax*1+0x0]
  420420:	push   r15
  420422:	push   r14
  420424:	push   rbx
  420425:	sub    rsp,0x30
  420429:	mov    rbx,rdi
  42042c:	mov    rax,QWORD PTR fs:0x28
  420435:	mov    QWORD PTR [rsp+0x28],rax
  42043a:	mov    r14,QWORD PTR [rdi]
  42043d:	mov    rsi,QWORD PTR [rdi+0x18]
  420441:	lea    r15,[rsp+0x8]
  420446:	mov    rdi,r15
  420449:	call   41fc50 <isspace@plt+0x1c340>
  42044e:	mov    rdi,rbx
  420451:	mov    esi,0x1
  420456:	mov    rdx,r15
  420459:	call   426630 <isspace@plt+0x22d20>
  42045e:	mov    rdi,r15
  420461:	call   403b50 <isspace@plt+0x240>
  420466:	mov    rdi,r14
  420469:	call   426860 <isspace@plt+0x22f50>
  42046e:	mov    rax,QWORD PTR fs:0x28
  420477:	cmp    rax,QWORD PTR [rsp+0x28]
  42047c:	jne    420488 <isspace@plt+0x1cb78>
  42047e:	add    rsp,0x30
  420482:	pop    rbx
  420483:	pop    r14
  420485:	pop    r15
  420487:	ret    
  420488:	call   403280 <__stack_chk_fail@plt>
  42048d:	nop    DWORD PTR [rax]
  420490:	push   rbp
  420491:	push   r15
  420493:	push   r14
  420495:	push   r13
  420497:	push   r12
  420499:	push   rbx
  42049a:	sub    rsp,0x68
  42049e:	mov    rax,QWORD PTR fs:0x28
  4204a7:	mov    QWORD PTR [rsp+0x60],rax
  4204ac:	cmp    QWORD PTR [rdi+0x8],0x0
  4204b1:	je     420951 <isspace@plt+0x1d041>
  4204b7:	mov    r13,rdi
  4204ba:	mov    rdi,QWORD PTR [rdi+0x18]
  4204be:	call   41af80 <isspace@plt+0x17670>
  4204c3:	test   al,al
  4204c5:	je     420951 <isspace@plt+0x1d041>
  4204cb:	mov    rdi,QWORD PTR [r13+0x0]
  4204cf:	mov    QWORD PTR [rsp+0x8],rdi
  4204d4:	mov    esi,0x9
  4204d9:	mov    rdx,r13
  4204dc:	xor    eax,eax
  4204de:	call   41fe60 <isspace@plt+0x1c550>
  4204e3:	mov    rbx,QWORD PTR [r13+0x18]
  4204e7:	mov    rdi,rbx
  4204ea:	call   41e740 <isspace@plt+0x1ae30>
  4204ef:	test   eax,eax
  4204f1:	jle    42061f <isspace@plt+0x1cd0f>
  4204f7:	mov    ebp,eax
  4204f9:	mov    rdi,QWORD PTR [r13+0x8]
  4204fd:	mov    esi,0x48
  420502:	call   QWORD PTR [rdi]
  420504:	mov    QWORD PTR [rsp+0x28],rax
  420509:	mov    QWORD PTR [rsp+0x10],rdx
  42050e:	mov    rdi,rbx
  420511:	call   41b150 <isspace@plt+0x17840>
  420516:	mov    QWORD PTR [rsp],rax
  42051a:	mov    rdi,rbx
  42051d:	call   41e550 <isspace@plt+0x1ac40>
  420522:	test   rax,rax
  420525:	je     42061f <isspace@plt+0x1cd0f>
  42052b:	mov    r14,rax
  42052e:	mov    rax,QWORD PTR [rsp+0x10]
  420533:	shr    rax,0x10
  420537:	mov    QWORD PTR [rsp+0x18],rax
  42053c:	xor    ecx,ecx
  42053e:	xor    eax,eax
  420540:	xor    r15d,r15d
  420543:	mov    QWORD PTR [rsp+0x20],r13
  420548:	jmp    420570 <isspace@plt+0x1cc60>
  42054a:	nop    WORD PTR [rax+rax*1+0x0]
  420550:	mov    WORD PTR [r14+rbx*1+0x52],cx
  420556:	mov    al,0x1
  420558:	mov    rcx,r12
  42055b:	mov    ebp,r13d
  42055e:	mov    r13,QWORD PTR [rsp+0x20]
  420563:	mov    r14,QWORD PTR [r14+0x8]
  420567:	test   r14,r14
  42056a:	je     42061f <isspace@plt+0x1cd0f>
  420570:	mov    r12,QWORD PTR [r14+0x18]
  420574:	cmp    r12,rcx
  420577:	jne    420590 <isspace@plt+0x1cc80>
  420579:	mov    r12,rcx
  42057c:	test   al,0x1
  42057e:	jne    420563 <isspace@plt+0x1cc53>
  420580:	jmp    4205a1 <isspace@plt+0x1cc91>
  420582:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42058c:	nop    DWORD PTR [rax+0x0]
  420590:	xor    eax,eax
  420592:	mov    r15d,0x0
  420598:	test   r12,r12
  42059b:	je     42061f <isspace@plt+0x1cd0f>
  4205a1:	mov    rcx,QWORD PTR [rsp]
  4205a5:	lea    edx,[r15+rcx*1]
  4205a9:	cmp    ebp,edx
  4205ab:	jle    4205c0 <isspace@plt+0x1ccb0>
  4205ad:	mov    rcx,r12
  4205b0:	mov    r15d,edx
  4205b3:	jmp    420563 <isspace@plt+0x1cc53>
  4205b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4205bf:	nop
  4205c0:	mov    eax,r15d
  4205c3:	not    eax
  4205c5:	mov    r13d,ebp
  4205c8:	add    eax,ebp
  4205ca:	cdqe   
  4205cc:	lea    rbx,[rax+rax*2]
  4205d0:	shl    rbx,0x4
  4205d4:	mov    rax,QWORD PTR [rsp+0x28]
  4205d9:	mov    QWORD PTR [r14+rbx*1+0x48],rax
  4205de:	mov    rbp,QWORD PTR [rsp+0x10]
  4205e3:	movsx  edi,bp
  4205e6:	call   4175a0 <isspace@plt+0x13c90>
  4205eb:	mov    ecx,ebp
  4205ed:	test   al,al
  4205ef:	je     4205f7 <isspace@plt+0x1cce7>
  4205f1:	movzx  ecx,WORD PTR [r14+rbx*1+0x50]
  4205f7:	mov    WORD PTR [r14+rbx*1+0x50],cx
  4205fd:	mov    rbp,QWORD PTR [rsp+0x18]
  420602:	movsx  edi,bp
  420605:	call   4175a0 <isspace@plt+0x13c90>
  42060a:	mov    ecx,ebp
  42060c:	test   al,al
  42060e:	je     420550 <isspace@plt+0x1cc40>
  420614:	movzx  ecx,WORD PTR [r14+rbx*1+0x52]
  42061a:	jmp    420550 <isspace@plt+0x1cc40>
  42061f:	mov    rbx,QWORD PTR [r13+0x0]
  420623:	mov    r12,QWORD PTR [r13+0x18]
  420627:	mov    rdi,r12
  42062a:	call   41e6c0 <isspace@plt+0x1adb0>
  42062f:	test   al,al
  420631:	jns    420767 <isspace@plt+0x1ce57>
  420637:	mov    rax,QWORD PTR [rbx+0x9a0]
  42063e:	cmp    BYTE PTR [rax+0x58],0x0
  420642:	jne    420767 <isspace@plt+0x1ce57>
  420648:	cmp    QWORD PTR [rbx+0x30],r13
  42064c:	jne    420767 <isspace@plt+0x1ce57>
  420652:	mov    rdi,r12
  420655:	call   41ea70 <isspace@plt+0x1b160>
  42065a:	cmp    eax,0x1
  42065d:	jg     420767 <isspace@plt+0x1ce57>
  420663:	mov    rdi,r12
  420666:	call   41b150 <isspace@plt+0x17840>
  42066b:	mov    r14d,eax
  42066e:	mov    rdi,QWORD PTR [r13+0x8]
  420672:	mov    esi,0x44
  420677:	call   QWORD PTR [rdi]
  420679:	mov    r15,rax
  42067c:	mov    rbp,rdx
  42067f:	mov    rdi,r12
  420682:	call   41efe0 <isspace@plt+0x1b6d0>
  420687:	mov    rdi,rax
  42068a:	call   41e5b0 <isspace@plt+0x1aca0>
  42068f:	mov    rbx,QWORD PTR [rax+0x18]
  420693:	mov    rdi,r12
  420696:	call   41e550 <isspace@plt+0x1ac40>
  42069b:	test   rax,rax
  42069e:	je     420767 <isspace@plt+0x1ce57>
  4206a4:	shr    rbp,0x10
  4206a8:	mov    ecx,r14d
  4206ab:	mov    r9d,ecx
  4206ae:	and    r9d,0x3
  4206b2:	lea    r8,[rcx-0x1]
  4206b6:	sub    rcx,r9
  4206b9:	mov    rdx,r9
  4206bc:	shl    rdx,0x4
  4206c0:	lea    rdi,[rdx+rdx*2]
  4206c4:	cmp    QWORD PTR [rax+0x18],rbx
  4206c8:	je     4206e3 <isspace@plt+0x1cdd3>
  4206ca:	ja     420767 <isspace@plt+0x1ce57>
  4206d0:	mov    rax,QWORD PTR [rax+0x8]
  4206d4:	test   rax,rax
  4206d7:	je     420767 <isspace@plt+0x1ce57>
  4206dd:	cmp    QWORD PTR [rax+0x18],rbx
  4206e1:	jne    4206ca <isspace@plt+0x1cdba>
  4206e3:	test   r14d,r14d
  4206e6:	jle    4206d0 <isspace@plt+0x1cdc0>
  4206e8:	cmp    r8,0x3
  4206ec:	jae    4206f7 <isspace@plt+0x1cde7>
  4206ee:	xor    esi,esi
  4206f0:	test   r9,r9
  4206f3:	jne    42073a <isspace@plt+0x1ce2a>
  4206f5:	jmp    4206d0 <isspace@plt+0x1cdc0>
  4206f7:	lea    rdx,[rax+0x48]
  4206fb:	xor    esi,esi
  4206fd:	nop    DWORD PTR [rax]
  420700:	or     QWORD PTR [rdx],r15
  420703:	mov    WORD PTR [rdx+0xa],bp
  420707:	or     QWORD PTR [rdx+0x30],r15
  42070b:	mov    WORD PTR [rdx+0x3a],bp
  42070f:	or     QWORD PTR [rdx+0x60],r15
  420713:	mov    WORD PTR [rdx+0x6a],bp
  420717:	or     QWORD PTR [rdx+0x90],r15
  42071e:	mov    WORD PTR [rdx+0x9a],bp
  420725:	add    rsi,0x4
  420729:	add    rdx,0xc0
  420730:	cmp    rcx,rsi
  420733:	jne    420700 <isspace@plt+0x1cdf0>
  420735:	test   r9,r9
  420738:	je     4206d0 <isspace@plt+0x1cdc0>
  42073a:	lea    rdx,[rsi+rsi*2]
  42073e:	shl    rdx,0x4
  420742:	add    rdx,rax
  420745:	add    rdx,0x48
  420749:	xor    esi,esi
  42074b:	nop    DWORD PTR [rax+rax*1+0x0]
  420750:	or     QWORD PTR [rdx+rsi*1],r15
  420754:	mov    WORD PTR [rdx+rsi*1+0xa],bp
  420759:	add    rsi,0x30
  42075d:	cmp    rdi,rsi
  420760:	jne    420750 <isspace@plt+0x1ce40>
  420762:	jmp    4206d0 <isspace@plt+0x1cdc0>
  420767:	mov    rax,QWORD PTR [rsp+0x8]
  42076c:	mov    rax,QWORD PTR [rax+0x30]
  420770:	test   rax,rax
  420773:	je     420787 <isspace@plt+0x1ce77>
  420775:	cmp    rax,r13
  420778:	je     420787 <isspace@plt+0x1ce77>
  42077a:	cmp    QWORD PTR [rax+0x2c8],r13
  420781:	jne    4208dd <isspace@plt+0x1cfcd>
  420787:	mov    rbx,QWORD PTR [r13+0x18]
  42078b:	mov    rdi,rbx
  42078e:	call   41a610 <isspace@plt+0x16d00>
  420793:	mov    r12,rax
  420796:	mov    r15,rdx
  420799:	mov    rdi,rbx
  42079c:	call   41efe0 <isspace@plt+0x1b6d0>
  4207a1:	mov    rbx,rax
  4207a4:	mov    rdi,QWORD PTR [r13+0x8]
  4207a8:	mov    esi,0x42
  4207ad:	call   QWORD PTR [rdi]
  4207af:	mov    QWORD PTR [rsp+0x50],rax
  4207b4:	mov    QWORD PTR [rsp+0x58],rdx
  4207b9:	mov    rdi,QWORD PTR [r13+0x8]
  4207bd:	mov    esi,0x43
  4207c2:	call   QWORD PTR [rdi]
  4207c4:	mov    QWORD PTR [rsp+0x40],rax
  4207c9:	mov    QWORD PTR [rsp+0x48],rdx
  4207ce:	mov    rdi,QWORD PTR [r13+0x8]
  4207d2:	mov    esi,0x45
  4207d7:	call   QWORD PTR [rdi]
  4207d9:	mov    QWORD PTR [rsp+0x30],rax
  4207de:	mov    QWORD PTR [rsp+0x38],rdx
  4207e3:	mov    QWORD PTR [rsp],rbx
  4207e7:	mov    rdi,rbx
  4207ea:	call   41f020 <isspace@plt+0x1b710>
  4207ef:	test   rax,rax
  4207f2:	je     42084d <isspace@plt+0x1cf3d>
  4207f4:	mov    rbp,rax
  4207f7:	lea    rbx,[rsp+0x30]
  4207fc:	lea    r14,[rsp+0x50]
  420801:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42080b:	nop    DWORD PTR [rax+rax*1+0x0]
  420810:	mov    rdi,QWORD PTR [r13+0x18]
  420814:	mov    rsi,rbp
  420817:	mov    rdx,rbx
  42081a:	call   4256e0 <isspace@plt+0x21dd0>
  42081f:	mov    rdi,rbp
  420822:	call   41af10 <isspace@plt+0x17600>
  420827:	cmp    rax,r12
  42082a:	jb     42084d <isspace@plt+0x1cf3d>
  42082c:	mov    rdi,r13
  42082f:	mov    rsi,rbp
  420832:	mov    rdx,r14
  420835:	mov    rcx,rbx
  420838:	call   425930 <isspace@plt+0x22020>
  42083d:	mov    rdi,rbp
  420840:	call   41f020 <isspace@plt+0x1b710>
  420845:	mov    rbp,rax
  420848:	test   rax,rax
  42084b:	jne    420810 <isspace@plt+0x1cf00>
  42084d:	mov    rdi,QWORD PTR [r13+0x18]
  420851:	lea    rbx,[rsp+0x30]
  420856:	mov    rbp,QWORD PTR [rsp]
  42085a:	mov    rsi,rbp
  42085d:	mov    rdx,rbx
  420860:	call   4256e0 <isspace@plt+0x21dd0>
  420865:	lea    rdx,[rsp+0x40]
  42086a:	mov    rdi,r13
  42086d:	mov    rsi,rbp
  420870:	mov    rcx,rbx
  420873:	call   425930 <isspace@plt+0x22020>
  420878:	mov    rdi,rbp
  42087b:	call   41f080 <isspace@plt+0x1b770>
  420880:	test   rax,rax
  420883:	je     4208dd <isspace@plt+0x1cfcd>
  420885:	mov    rbp,rax
  420888:	lea    rbx,[rsp+0x30]
  42088d:	lea    r14,[rsp+0x50]
  420892:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42089c:	nop    DWORD PTR [rax+0x0]
  4208a0:	mov    rdi,QWORD PTR [r13+0x18]
  4208a4:	mov    rsi,rbp
  4208a7:	mov    rdx,rbx
  4208aa:	call   4256e0 <isspace@plt+0x21dd0>
  4208af:	mov    rdi,rbp
  4208b2:	call   41af10 <isspace@plt+0x17600>
  4208b7:	cmp    rax,r15
  4208ba:	ja     4208dd <isspace@plt+0x1cfcd>
  4208bc:	mov    rdi,r13
  4208bf:	mov    rsi,rbp
  4208c2:	mov    rdx,r14
  4208c5:	mov    rcx,rbx
  4208c8:	call   425930 <isspace@plt+0x22020>
  4208cd:	mov    rdi,rbp
  4208d0:	call   41f080 <isspace@plt+0x1b770>
  4208d5:	mov    rbp,rax
  4208d8:	test   rax,rax
  4208db:	jne    4208a0 <isspace@plt+0x1cf90>
  4208dd:	mov    r14,QWORD PTR [r13+0x18]
  4208e1:	mov    rdi,r14
  4208e4:	call   41b150 <isspace@plt+0x17840>
  4208e9:	test   eax,eax
  4208eb:	je     42093d <isspace@plt+0x1d02d>
  4208ed:	mov    rdi,QWORD PTR [r13+0x8]
  4208f1:	mov    esi,0x4d
  4208f6:	call   QWORD PTR [rdi]
  4208f8:	mov    r15,rax
  4208fb:	mov    r12,rdx
  4208fe:	mov    rdi,r14
  420901:	call   41e580 <isspace@plt+0x1ac70>
  420906:	mov    rbp,QWORD PTR [rax+0x8]
  42090a:	test   rbp,rbp
  42090d:	je     42093d <isspace@plt+0x1d02d>
  42090f:	nop
  420910:	lea    rbx,[rbp+0x28]
  420914:	mov    rdi,r14
  420917:	call   41fe30 <isspace@plt+0x1c520>
  42091c:	mov    edx,0xf
  420921:	mov    rdi,rbx
  420924:	mov    rsi,rax
  420927:	call   403150 <strncpy@plt>
  42092c:	mov    QWORD PTR [rbp+0x48],r15
  420930:	mov    QWORD PTR [rbp+0x50],r12
  420934:	mov    rbp,QWORD PTR [rbp+0x8]
  420938:	test   rbp,rbp
  42093b:	jne    420910 <isspace@plt+0x1d000>
  42093d:	mov    rdi,QWORD PTR [rsp+0x8]
  420942:	mov    esi,0xa
  420947:	mov    rdx,r13
  42094a:	xor    eax,eax
  42094c:	call   41fe60 <isspace@plt+0x1c550>
  420951:	mov    rax,QWORD PTR fs:0x28
  42095a:	cmp    rax,QWORD PTR [rsp+0x60]
  42095f:	jne    420970 <isspace@plt+0x1d060>
  420961:	add    rsp,0x68
  420965:	pop    rbx
  420966:	pop    r12
  420968:	pop    r13
  42096a:	pop    r14
  42096c:	pop    r15
  42096e:	pop    rbp
  42096f:	ret    
  420970:	call   403280 <__stack_chk_fail@plt>
  420975:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42097f:	nop
  420980:	push   rbp
  420981:	push   r15
  420983:	push   r14
  420985:	push   rbx
  420986:	push   rax
  420987:	mov    ebp,edx
  420989:	mov    r15,rsi
  42098c:	mov    r14,rdi
  42098f:	mov    rax,QWORD PTR fs:0x28
  420998:	mov    QWORD PTR [rsp],rax
  42099c:	mov    edi,0x1
  4209a1:	mov    esi,0x2e8
  4209a6:	call   403460 <calloc@plt>
  4209ab:	test   rax,rax
  4209ae:	je     420ac9 <isspace@plt+0x1d1b9>
  4209b4:	mov    rbx,rax
  4209b7:	mov    QWORD PTR [rax],r14
  4209ba:	mov    QWORD PTR [rax+0x10],r15
  4209be:	mov    rdi,QWORD PTR [r15]
  4209c1:	call   41b3a0 <isspace@plt+0x17a90>
  4209c6:	mov    QWORD PTR [rbx+0x18],rax
  4209ca:	mov    rdi,QWORD PTR [r14]
  4209cd:	mov    rsi,rbx
  4209d0:	mov    edx,ebp
  4209d2:	call   QWORD PTR [rdi+0x18]
  4209d5:	mov    QWORD PTR [rbx+0x8],rax
  4209d9:	test   rax,rax
  4209dc:	je     420ac1 <isspace@plt+0x1d1b1>
  4209e2:	cmp    QWORD PTR [rbx+0x18],0x0
  4209e7:	je     420ac1 <isspace@plt+0x1d1b1>
  4209ed:	lea    rdi,[rbx+0x20]
  4209f1:	mov    esi,0x20
  4209f6:	call   426710 <isspace@plt+0x22e00>
  4209fb:	mov    rdi,rbx
  4209fe:	add    rdi,0x68
  420a02:	call   426410 <isspace@plt+0x22b00>
  420a07:	inc    DWORD PTR [r15+0xb0]
  420a0e:	mov    rbp,QWORD PTR [rbx+0x18]
  420a12:	mov    rdi,rbp
  420a15:	call   41e6c0 <isspace@plt+0x1adb0>
  420a1a:	mov    rdi,rbp
  420a1d:	mov    esi,eax
  420a1f:	call   41b530 <isspace@plt+0x17c20>
  420a24:	mov    rdi,QWORD PTR [rbx+0x18]
  420a28:	mov    esi,DWORD PTR [r14+0x7f8]
  420a2f:	call   419ed0 <isspace@plt+0x165c0>
  420a34:	mov    rax,QWORD PTR [r14+0x28]
  420a38:	test   rax,rax
  420a3b:	je     420a44 <isspace@plt+0x1d134>
  420a3d:	mov    QWORD PTR [rax+0x2d8],rbx
  420a44:	mov    QWORD PTR [rbx+0x2e0],rax
  420a4b:	mov    QWORD PTR [r14+0x28],rbx
  420a4f:	mov    QWORD PTR [r14+0x30],rbx
  420a53:	mov    rax,QWORD PTR [r14]
  420a56:	mov    rdi,QWORD PTR [rbx+0x8]
  420a5a:	call   QWORD PTR [rax+0x28]
  420a5d:	lea    rax,[rip+0x2167c]        # 4420e0 <isspace@plt+0x3e7d0>
  420a64:	mov    QWORD PTR [rbx+0x90],rax
  420a6b:	lea    rcx,[rax+0x60]
  420a6f:	mov    QWORD PTR [rbx+0xf0],rcx
  420a76:	lea    rcx,[rax+0xc0]
  420a7d:	mov    QWORD PTR [rbx+0x150],rcx
  420a84:	lea    rcx,[rax+0x120]
  420a8b:	mov    QWORD PTR [rbx+0x1b0],rcx
  420a92:	lea    rcx,[rax+0x180]
  420a99:	mov    QWORD PTR [rbx+0x210],rcx
  420aa0:	add    rax,0x1e0
  420aa6:	mov    QWORD PTR [rbx+0x270],rax
  420aad:	mov    rdi,r14
  420ab0:	mov    esi,0x7
  420ab5:	mov    rdx,rbx
  420ab8:	xor    eax,eax
  420aba:	call   41fe60 <isspace@plt+0x1c550>
  420abf:	jmp    420acb <isspace@plt+0x1d1bb>
  420ac1:	mov    rdi,rbx
  420ac4:	call   420af0 <isspace@plt+0x1d1e0>
  420ac9:	xor    ebx,ebx
  420acb:	mov    rax,QWORD PTR fs:0x28
  420ad4:	cmp    rax,QWORD PTR [rsp]
  420ad8:	jne    420ae8 <isspace@plt+0x1d1d8>
  420ada:	mov    rax,rbx
  420add:	add    rsp,0x8
  420ae1:	pop    rbx
  420ae2:	pop    r14
  420ae4:	pop    r15
  420ae6:	pop    rbp
  420ae7:	ret    
  420ae8:	call   403280 <__stack_chk_fail@plt>
  420aed:	nop    DWORD PTR [rax]
  420af0:	push   rbx
  420af1:	sub    rsp,0x10
  420af5:	mov    rax,QWORD PTR fs:0x28
  420afe:	mov    QWORD PTR [rsp+0x8],rax
  420b03:	test   rdi,rdi
  420b06:	je     420bbc <isspace@plt+0x1d2ac>
  420b0c:	mov    rbx,rdi
  420b0f:	mov    rax,QWORD PTR [rdi]
  420b12:	mov    rcx,QWORD PTR [rax+0x28]
  420b16:	test   rcx,rcx
  420b19:	jne    420b2c <isspace@plt+0x1d21c>
  420b1b:	jmp    420b42 <isspace@plt+0x1d232>
  420b1d:	nop    DWORD PTR [rax]
  420b20:	mov    rcx,QWORD PTR [rcx+0x2e0]
  420b27:	test   rcx,rcx
  420b2a:	je     420b42 <isspace@plt+0x1d232>
  420b2c:	cmp    QWORD PTR [rcx+0x2c8],rbx
  420b33:	jne    420b20 <isspace@plt+0x1d210>
  420b35:	mov    QWORD PTR [rcx+0x2c8],0x0
  420b40:	jmp    420b20 <isspace@plt+0x1d210>
  420b42:	mov    rax,QWORD PTR [rax]
  420b45:	test   rax,rax
  420b48:	je     420b51 <isspace@plt+0x1d241>
  420b4a:	mov    rdi,QWORD PTR [rbx+0x8]
  420b4e:	call   QWORD PTR [rax+0x20]
  420b51:	mov    rdi,QWORD PTR [rbx+0x18]
  420b55:	call   41b180 <isspace@plt+0x17870>
  420b5a:	mov    rdi,QWORD PTR [rbx+0x98]
  420b61:	call   408f30 <isspace@plt+0x5620>
  420b66:	mov    rdi,QWORD PTR [rbx+0xf8]
  420b6d:	call   408f30 <isspace@plt+0x5620>
  420b72:	mov    rdi,QWORD PTR [rbx+0x158]
  420b79:	call   408f30 <isspace@plt+0x5620>
  420b7e:	mov    rdi,QWORD PTR [rbx+0x1b8]
  420b85:	call   408f30 <isspace@plt+0x5620>
  420b8a:	mov    rdi,QWORD PTR [rbx+0x218]
  420b91:	call   408f30 <isspace@plt+0x5620>
  420b96:	mov    rdi,QWORD PTR [rbx+0x278]
  420b9d:	call   408f30 <isspace@plt+0x5620>
  420ba2:	lea    rdi,[rbx+0x20]
  420ba6:	call   4267a0 <isspace@plt+0x22e90>
  420bab:	lea    rdi,[rbx+0x68]
  420baf:	call   426440 <isspace@plt+0x22b30>
  420bb4:	mov    rdi,rbx
  420bb7:	call   4030d0 <free@plt>
  420bbc:	mov    rax,QWORD PTR fs:0x28
  420bc5:	cmp    rax,QWORD PTR [rsp+0x8]
  420bca:	jne    420bd2 <isspace@plt+0x1d2c2>
  420bcc:	add    rsp,0x10
  420bd0:	pop    rbx
  420bd1:	ret    
  420bd2:	call   403280 <__stack_chk_fail@plt>
  420bd7:	nop    WORD PTR [rax+rax*1+0x0]
  420be0:	push   r15
  420be2:	push   r14
  420be4:	push   rbx
  420be5:	sub    rsp,0x10
  420be9:	mov    rax,QWORD PTR fs:0x28
  420bf2:	mov    QWORD PTR [rsp+0x8],rax
  420bf7:	mov    rax,QWORD PTR [rdi+0x10]
  420bfb:	mov    rbx,QWORD PTR [rax+0x8]
  420bff:	test   rbx,rbx
  420c02:	je     420c51 <isspace@plt+0x1d341>
  420c04:	mov    r15,rdi
  420c07:	mov    QWORD PTR [rax+0x8],0x0
  420c0f:	mov    rdi,QWORD PTR [rdi]
  420c12:	mov    rsi,rbx
  420c15:	call   420c80 <isspace@plt+0x1d370>
  420c1a:	mov    rsi,QWORD PTR [r15+0x10]
  420c1e:	mov    QWORD PTR [rsi+0x8],rbx
  420c22:	test   rax,rax
  420c25:	je     420c51 <isspace@plt+0x1d341>
  420c27:	mov    r14,rax
  420c2a:	mov    rdi,QWORD PTR [r15]
  420c2d:	call   420f80 <isspace@plt+0x1d670>
  420c32:	mov    DWORD PTR [r14+0xb0],0x1
  420c3d:	mov    QWORD PTR [r15+0x10],r14
  420c41:	mov    rdi,QWORD PTR [r15+0x18]
  420c45:	mov    rsi,QWORD PTR [r14]
  420c48:	call   41b2c0 <isspace@plt+0x179b0>
  420c4d:	mov    al,0x1
  420c4f:	jmp    420c53 <isspace@plt+0x1d343>
  420c51:	xor    eax,eax
  420c53:	mov    rcx,QWORD PTR fs:0x28
  420c5c:	cmp    rcx,QWORD PTR [rsp+0x8]
  420c61:	jne    420c6d <isspace@plt+0x1d35d>
  420c63:	add    rsp,0x10
  420c67:	pop    rbx
  420c68:	pop    r14
  420c6a:	pop    r15
  420c6c:	ret    
  420c6d:	call   403280 <__stack_chk_fail@plt>
  420c72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  420c7c:	nop    DWORD PTR [rax+0x0]
  420c80:	push   r15
  420c82:	push   r14
  420c84:	push   r13
  420c86:	push   r12
  420c88:	push   rbx
  420c89:	sub    rsp,0xa0
  420c90:	mov    r12,rsi
  420c93:	mov    r14,rdi
  420c96:	mov    rax,QWORD PTR fs:0x28
  420c9f:	mov    QWORD PTR [rsp+0x98],rax
  420ca7:	test   rsi,rsi
  420caa:	je     420cfe <isspace@plt+0x1d3ee>
  420cac:	mov    rdi,r12
  420caf:	call   4201d0 <isspace@plt+0x1c8c0>
  420cb4:	test   rax,rax
  420cb7:	je     420f49 <isspace@plt+0x1d639>
  420cbd:	mov    r15,rax
  420cc0:	mov    rbx,QWORD PTR [r14+0x8]
  420cc4:	test   rbx,rbx
  420cc7:	jne    420cdc <isspace@plt+0x1d3cc>
  420cc9:	jmp    420d01 <isspace@plt+0x1d3f1>
  420ccb:	nop    DWORD PTR [rax+rax*1+0x0]
  420cd0:	mov    rbx,QWORD PTR [rbx+0x458]
  420cd7:	test   rbx,rbx
  420cda:	je     420d01 <isspace@plt+0x1d3f1>
  420cdc:	mov    rdi,QWORD PTR [rbx+0x8]
  420ce0:	test   rdi,rdi
  420ce3:	je     420cd0 <isspace@plt+0x1d3c0>
  420ce5:	mov    rsi,r15
  420ce8:	call   403470 <strcmp@plt>
  420ced:	test   eax,eax
  420cef:	jne    420cd0 <isspace@plt+0x1d3c0>
  420cf1:	mov    rdi,r15
  420cf4:	call   4030d0 <free@plt>
  420cf9:	jmp    420f4b <isspace@plt+0x1d63b>
  420cfe:	xor    r15d,r15d
  420d01:	mov    esi,DWORD PTR [r14+0xad0]
  420d08:	mov    rdi,r12
  420d0b:	call   411840 <isspace@plt+0xdf30>
  420d10:	mov    r13,rax
  420d13:	test   r12,r12
  420d16:	je     420d35 <isspace@plt+0x1d425>
  420d18:	test   r13,r13
  420d1b:	jne    420d35 <isspace@plt+0x1d425>
  420d1d:	call   403130 <__errno_location@plt>
  420d22:	cmp    DWORD PTR [rax],0x2
  420d25:	jne    420f36 <isspace@plt+0x1d626>
  420d2b:	xor    edi,edi
  420d2d:	call   411800 <isspace@plt+0xdef0>
  420d32:	mov    r13,rax
  420d35:	test   r13,r13
  420d38:	je     420f36 <isspace@plt+0x1d626>
  420d3e:	mov    edi,0x1
  420d43:	mov    esi,0x468
  420d48:	call   403460 <calloc@plt>
  420d4d:	test   rax,rax
  420d50:	je     420f39 <isspace@plt+0x1d629>
  420d56:	mov    rbx,rax
  420d59:	mov    DWORD PTR [rax+0x14],0xffffffff
  420d60:	mov    QWORD PTR [rax],r13
  420d63:	lea    rdi,[rsp+0x8]
  420d68:	mov    rsi,r13
  420d6b:	call   40fef0 <isspace@plt+0xc5e0>
  420d70:	vmovups ymm0,YMMWORD PTR [rsp+0x78]
  420d76:	vmovups YMMWORD PTR [rbx+0x90],ymm0
  420d7e:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  420d84:	vmovups ymm1,YMMWORD PTR [rsp+0x48]
  420d8a:	vmovups ymm2,YMMWORD PTR [rsp+0x68]
  420d90:	vmovups YMMWORD PTR [rbx+0x80],ymm2
  420d98:	vmovups YMMWORD PTR [rbx+0x60],ymm1
  420d9d:	vmovups ymm1,YMMWORD PTR [rsp+0x28]
  420da3:	vmovups YMMWORD PTR [rbx+0x40],ymm1
  420da8:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  420dad:	lea    rdi,[rbx+0xb8]
  420db4:	vzeroupper 
  420db7:	call   426410 <isspace@plt+0x22b00>
  420dbc:	lea    rdi,[rbx+0xd8]
  420dc3:	call   426410 <isspace@plt+0x22b00>
  420dc8:	lea    rdi,[rbx+0xf8]
  420dcf:	call   426410 <isspace@plt+0x22b00>
  420dd4:	lea    rdi,[rbx+0x118]
  420ddb:	call   426410 <isspace@plt+0x22b00>
  420de0:	lea    rdi,[rbx+0x138]
  420de7:	call   426410 <isspace@plt+0x22b00>
  420dec:	lea    rdi,[rbx+0x158]
  420df3:	call   426410 <isspace@plt+0x22b00>
  420df8:	lea    rdi,[rbx+0x178]
  420dff:	call   426410 <isspace@plt+0x22b00>
  420e04:	lea    rdi,[rbx+0x198]
  420e0b:	call   426410 <isspace@plt+0x22b00>
  420e10:	lea    rdi,[rbx+0x1b8]
  420e17:	call   426410 <isspace@plt+0x22b00>
  420e1c:	lea    rdi,[rbx+0x1d8]
  420e23:	call   426410 <isspace@plt+0x22b00>
  420e28:	lea    rdi,[rbx+0x1f8]
  420e2f:	call   426410 <isspace@plt+0x22b00>
  420e34:	lea    rdi,[rbx+0x218]
  420e3b:	call   426410 <isspace@plt+0x22b00>
  420e40:	lea    rdi,[rbx+0x238]
  420e47:	call   426410 <isspace@plt+0x22b00>
  420e4c:	lea    rdi,[rbx+0x258]
  420e53:	call   426410 <isspace@plt+0x22b00>
  420e58:	lea    rdi,[rbx+0x278]
  420e5f:	call   426410 <isspace@plt+0x22b00>
  420e64:	lea    rdi,[rbx+0x298]
  420e6b:	call   426410 <isspace@plt+0x22b00>
  420e70:	lea    rdi,[rbx+0x2b8]
  420e77:	call   426410 <isspace@plt+0x22b00>
  420e7c:	lea    rdi,[rbx+0x2d8]
  420e83:	call   426410 <isspace@plt+0x22b00>
  420e88:	lea    rdi,[rbx+0x2f8]
  420e8f:	call   426410 <isspace@plt+0x22b00>
  420e94:	lea    rdi,[rbx+0x318]
  420e9b:	call   426410 <isspace@plt+0x22b00>
  420ea0:	lea    rdi,[rbx+0x338]
  420ea7:	call   426410 <isspace@plt+0x22b00>
  420eac:	lea    rdi,[rbx+0x358]
  420eb3:	call   426410 <isspace@plt+0x22b00>
  420eb8:	lea    rdi,[rbx+0x378]
  420ebf:	call   426410 <isspace@plt+0x22b00>
  420ec4:	lea    rdi,[rbx+0x398]
  420ecb:	call   426410 <isspace@plt+0x22b00>
  420ed0:	lea    rdi,[rbx+0x3b8]
  420ed7:	call   426410 <isspace@plt+0x22b00>
  420edc:	lea    rdi,[rbx+0x3d8]
  420ee3:	call   426410 <isspace@plt+0x22b00>
  420ee8:	lea    rdi,[rbx+0x3f8]
  420eef:	call   426410 <isspace@plt+0x22b00>
  420ef4:	mov    rdi,rbx
  420ef7:	add    rdi,0x418
  420efe:	call   426410 <isspace@plt+0x22b00>
  420f03:	mov    rax,QWORD PTR [r14+0x8]
  420f07:	test   rax,rax
  420f0a:	je     420f13 <isspace@plt+0x1d603>
  420f0c:	mov    QWORD PTR [rax+0x460],rbx
  420f13:	mov    QWORD PTR [rbx+0x458],rax
  420f1a:	mov    QWORD PTR [r14+0x8],rbx
  420f1e:	mov    QWORD PTR [rbx+0x8],r15
  420f22:	mov    rdi,r14
  420f25:	mov    esi,0x3
  420f2a:	mov    rdx,rbx
  420f2d:	xor    eax,eax
  420f2f:	call   41fe60 <isspace@plt+0x1c550>
  420f34:	jmp    420f4b <isspace@plt+0x1d63b>
  420f36:	xor    r13d,r13d
  420f39:	mov    rdi,r15
  420f3c:	call   4030d0 <free@plt>
  420f41:	mov    rdi,r13
  420f44:	call   40fcd0 <isspace@plt+0xc3c0>
  420f49:	xor    ebx,ebx
  420f4b:	mov    rax,QWORD PTR fs:0x28
  420f54:	cmp    rax,QWORD PTR [rsp+0x98]
  420f5c:	jne    420f72 <isspace@plt+0x1d662>
  420f5e:	mov    rax,rbx
  420f61:	add    rsp,0xa0
  420f68:	pop    rbx
  420f69:	pop    r12
  420f6b:	pop    r13
  420f6d:	pop    r14
  420f6f:	pop    r15
  420f71:	ret    
  420f72:	call   403280 <__stack_chk_fail@plt>
  420f77:	nop    WORD PTR [rax+rax*1+0x0]
  420f80:	push   r14
  420f82:	push   rbx
  420f83:	push   rax
  420f84:	mov    rax,QWORD PTR fs:0x28
  420f8d:	mov    QWORD PTR [rsp],rax
  420f91:	test   rsi,rsi
  420f94:	je     421167 <isspace@plt+0x1d857>
  420f9a:	mov    rbx,rsi
  420f9d:	mov    eax,DWORD PTR [rsi+0xb0]
  420fa3:	cmp    eax,0x2
  420fa6:	jl     420fb5 <isspace@plt+0x1d6a5>
  420fa8:	dec    eax
  420faa:	mov    DWORD PTR [rbx+0xb0],eax
  420fb0:	jmp    421167 <isspace@plt+0x1d857>
  420fb5:	mov    r14,rdi
  420fb8:	mov    esi,0x6
  420fbd:	mov    rdx,rbx
  420fc0:	xor    eax,eax
  420fc2:	call   41fe60 <isspace@plt+0x1c550>
  420fc7:	lea    rdi,[rbx+0xb8]
  420fce:	call   426440 <isspace@plt+0x22b30>
  420fd3:	lea    rdi,[rbx+0xd8]
  420fda:	call   426440 <isspace@plt+0x22b30>
  420fdf:	lea    rdi,[rbx+0xf8]
  420fe6:	call   426440 <isspace@plt+0x22b30>
  420feb:	lea    rdi,[rbx+0x118]
  420ff2:	call   426440 <isspace@plt+0x22b30>
  420ff7:	lea    rdi,[rbx+0x138]
  420ffe:	call   426440 <isspace@plt+0x22b30>
  421003:	lea    rdi,[rbx+0x158]
  42100a:	call   426440 <isspace@plt+0x22b30>
  42100f:	lea    rdi,[rbx+0x178]
  421016:	call   426440 <isspace@plt+0x22b30>
  42101b:	lea    rdi,[rbx+0x198]
  421022:	call   426440 <isspace@plt+0x22b30>
  421027:	lea    rdi,[rbx+0x1b8]
  42102e:	call   426440 <isspace@plt+0x22b30>
  421033:	lea    rdi,[rbx+0x1d8]
  42103a:	call   426440 <isspace@plt+0x22b30>
  42103f:	lea    rdi,[rbx+0x1f8]
  421046:	call   426440 <isspace@plt+0x22b30>
  42104b:	lea    rdi,[rbx+0x218]
  421052:	call   426440 <isspace@plt+0x22b30>
  421057:	lea    rdi,[rbx+0x238]
  42105e:	call   426440 <isspace@plt+0x22b30>
  421063:	lea    rdi,[rbx+0x258]
  42106a:	call   426440 <isspace@plt+0x22b30>
  42106f:	lea    rdi,[rbx+0x278]
  421076:	call   426440 <isspace@plt+0x22b30>
  42107b:	lea    rdi,[rbx+0x298]
  421082:	call   426440 <isspace@plt+0x22b30>
  421087:	lea    rdi,[rbx+0x2b8]
  42108e:	call   426440 <isspace@plt+0x22b30>
  421093:	lea    rdi,[rbx+0x2d8]
  42109a:	call   426440 <isspace@plt+0x22b30>
  42109f:	lea    rdi,[rbx+0x2f8]
  4210a6:	call   426440 <isspace@plt+0x22b30>
  4210ab:	lea    rdi,[rbx+0x318]
  4210b2:	call   426440 <isspace@plt+0x22b30>
  4210b7:	lea    rdi,[rbx+0x338]
  4210be:	call   426440 <isspace@plt+0x22b30>
  4210c3:	lea    rdi,[rbx+0x358]
  4210ca:	call   426440 <isspace@plt+0x22b30>
  4210cf:	lea    rdi,[rbx+0x378]
  4210d6:	call   426440 <isspace@plt+0x22b30>
  4210db:	lea    rdi,[rbx+0x398]
  4210e2:	call   426440 <isspace@plt+0x22b30>
  4210e7:	lea    rdi,[rbx+0x3b8]
  4210ee:	call   426440 <isspace@plt+0x22b30>
  4210f3:	lea    rdi,[rbx+0x3d8]
  4210fa:	call   426440 <isspace@plt+0x22b30>
  4210ff:	lea    rdi,[rbx+0x3f8]
  421106:	call   426440 <isspace@plt+0x22b30>
  42110b:	lea    rdi,[rbx+0x418]
  421112:	call   426440 <isspace@plt+0x22b30>
  421117:	mov    rdi,QWORD PTR [rbx]
  42111a:	call   40fcd0 <isspace@plt+0xc3c0>
  42111f:	mov    rdi,QWORD PTR [rbx+0x8]
  421123:	call   4030d0 <free@plt>
  421128:	mov    rax,QWORD PTR [rbx+0x460]
  42112f:	test   rax,rax
  421132:	je     421142 <isspace@plt+0x1d832>
  421134:	mov    rcx,QWORD PTR [rbx+0x458]
  42113b:	mov    QWORD PTR [rax+0x458],rcx
  421142:	mov    rcx,QWORD PTR [rbx+0x458]
  421149:	test   rcx,rcx
  42114c:	je     421155 <isspace@plt+0x1d845>
  42114e:	mov    QWORD PTR [rcx+0x460],rax
  421155:	cmp    QWORD PTR [r14+0x8],rbx
  421159:	jne    42115f <isspace@plt+0x1d84f>
  42115b:	mov    QWORD PTR [r14+0x8],rcx
  42115f:	mov    rdi,rbx
  421162:	call   4030d0 <free@plt>
  421167:	mov    rax,QWORD PTR fs:0x28
  421170:	cmp    rax,QWORD PTR [rsp]
  421174:	jne    42117e <isspace@plt+0x1d86e>
  421176:	add    rsp,0x8
  42117a:	pop    rbx
  42117b:	pop    r14
  42117d:	ret    
  42117e:	call   403280 <__stack_chk_fail@plt>
  421183:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42118d:	nop    DWORD PTR [rax]
  421190:	push   r15
  421192:	push   r14
  421194:	push   rbx
  421195:	sub    rsp,0x10
  421199:	mov    rbx,rdi
  42119c:	mov    rax,QWORD PTR fs:0x28
  4211a5:	mov    QWORD PTR [rsp+0x8],rax
  4211aa:	mov    rdi,QWORD PTR [rdi]
  4211ad:	mov    rsi,QWORD PTR [rbx+0x10]
  4211b1:	mov    edx,0x100
  4211b6:	call   420980 <isspace@plt+0x1d070>
  4211bb:	test   rax,rax
  4211be:	je     421316 <isspace@plt+0x1da06>
  4211c4:	mov    r14,rax
  4211c7:	cmp    QWORD PTR [rbx+0x98],0x0
  4211cf:	je     421336 <isspace@plt+0x1da26>
  4211d5:	call   408ef0 <isspace@plt+0x55e0>
  4211da:	mov    QWORD PTR [r14+0x98],rax
  4211e1:	test   rax,rax
  4211e4:	je     4211f5 <isspace@plt+0x1d8e5>
  4211e6:	mov    rsi,QWORD PTR [rbx+0x98]
  4211ed:	mov    rdi,rax
  4211f0:	call   408d60 <isspace@plt+0x5450>
  4211f5:	cmp    QWORD PTR [rbx+0xf8],0x0
  4211fd:	je     42134b <isspace@plt+0x1da3b>
  421203:	call   408ef0 <isspace@plt+0x55e0>
  421208:	mov    QWORD PTR [r14+0xf8],rax
  42120f:	test   rax,rax
  421212:	je     421223 <isspace@plt+0x1d913>
  421214:	mov    rsi,QWORD PTR [rbx+0xf8]
  42121b:	mov    rdi,rax
  42121e:	call   408d60 <isspace@plt+0x5450>
  421223:	cmp    QWORD PTR [rbx+0x158],0x0
  42122b:	je     421360 <isspace@plt+0x1da50>
  421231:	call   408ef0 <isspace@plt+0x55e0>
  421236:	mov    QWORD PTR [r14+0x158],rax
  42123d:	test   rax,rax
  421240:	je     421251 <isspace@plt+0x1d941>
  421242:	mov    rsi,QWORD PTR [rbx+0x158]
  421249:	mov    rdi,rax
  42124c:	call   408d60 <isspace@plt+0x5450>
  421251:	cmp    QWORD PTR [rbx+0x1b8],0x0
  421259:	je     421375 <isspace@plt+0x1da65>
  42125f:	call   408ef0 <isspace@plt+0x55e0>
  421264:	mov    QWORD PTR [r14+0x1b8],rax
  42126b:	test   rax,rax
  42126e:	je     42127f <isspace@plt+0x1d96f>
  421270:	mov    rsi,QWORD PTR [rbx+0x1b8]
  421277:	mov    rdi,rax
  42127a:	call   408d60 <isspace@plt+0x5450>
  42127f:	cmp    QWORD PTR [rbx+0x218],0x0
  421287:	je     42138a <isspace@plt+0x1da7a>
  42128d:	call   408ef0 <isspace@plt+0x55e0>
  421292:	mov    QWORD PTR [r14+0x218],rax
  421299:	test   rax,rax
  42129c:	je     4212ad <isspace@plt+0x1d99d>
  42129e:	mov    rsi,QWORD PTR [rbx+0x218]
  4212a5:	mov    rdi,rax
  4212a8:	call   408d60 <isspace@plt+0x5450>
  4212ad:	cmp    QWORD PTR [rbx+0x278],0x0
  4212b5:	je     42139f <isspace@plt+0x1da8f>
  4212bb:	call   408ef0 <isspace@plt+0x55e0>
  4212c0:	mov    QWORD PTR [r14+0x278],rax
  4212c7:	test   rax,rax
  4212ca:	je     4212db <isspace@plt+0x1d9cb>
  4212cc:	mov    rsi,QWORD PTR [rbx+0x278]
  4212d3:	mov    rdi,rax
  4212d6:	call   408d60 <isspace@plt+0x5450>
  4212db:	mov    rax,QWORD PTR [rbx+0x10]
  4212df:	mov    QWORD PTR [r14+0x10],rax
  4212e3:	mov    r15,QWORD PTR [r14+0x18]
  4212e7:	mov    rdi,QWORD PTR [rbx+0x18]
  4212eb:	call   41e6c0 <isspace@plt+0x1adb0>
  4212f0:	mov    rdi,r15
  4212f3:	mov    esi,eax
  4212f5:	call   41b530 <isspace@plt+0x17c20>
  4212fa:	mov    r14,QWORD PTR [r14+0x18]
  4212fe:	mov    rdi,QWORD PTR [rbx+0x18]
  421302:	call   41e510 <isspace@plt+0x1ac00>
  421307:	mov    rdi,r14
  42130a:	mov    rsi,rax
  42130d:	call   41a790 <isspace@plt+0x16e80>
  421312:	mov    al,0x1
  421314:	jmp    421318 <isspace@plt+0x1da08>
  421316:	xor    eax,eax
  421318:	mov    rcx,QWORD PTR fs:0x28
  421321:	cmp    rcx,QWORD PTR [rsp+0x8]
  421326:	jne    4213b4 <isspace@plt+0x1daa4>
  42132c:	add    rsp,0x10
  421330:	pop    rbx
  421331:	pop    r14
  421333:	pop    r15
  421335:	ret    
  421336:	mov    rax,QWORD PTR [r14+0x98]
  42133d:	test   rax,rax
  421340:	jne    4211e6 <isspace@plt+0x1d8d6>
  421346:	jmp    4211f5 <isspace@plt+0x1d8e5>
  42134b:	mov    rax,QWORD PTR [r14+0xf8]
  421352:	test   rax,rax
  421355:	jne    421214 <isspace@plt+0x1d904>
  42135b:	jmp    421223 <isspace@plt+0x1d913>
  421360:	mov    rax,QWORD PTR [r14+0x158]
  421367:	test   rax,rax
  42136a:	jne    421242 <isspace@plt+0x1d932>
  421370:	jmp    421251 <isspace@plt+0x1d941>
  421375:	mov    rax,QWORD PTR [r14+0x1b8]
  42137c:	test   rax,rax
  42137f:	jne    421270 <isspace@plt+0x1d960>
  421385:	jmp    42127f <isspace@plt+0x1d96f>
  42138a:	mov    rax,QWORD PTR [r14+0x218]
  421391:	test   rax,rax
  421394:	jne    42129e <isspace@plt+0x1d98e>
  42139a:	jmp    4212ad <isspace@plt+0x1d99d>
  42139f:	mov    rax,QWORD PTR [r14+0x278]
  4213a6:	test   rax,rax
  4213a9:	jne    4212cc <isspace@plt+0x1d9bc>
  4213af:	jmp    4212db <isspace@plt+0x1d9cb>
  4213b4:	call   403280 <__stack_chk_fail@plt>
  4213b9:	nop    DWORD PTR [rax+0x0]
  4213c0:	push   rax
  4213c1:	mov    rax,QWORD PTR fs:0x28
  4213ca:	mov    QWORD PTR [rsp],rax
  4213ce:	test   rdi,rdi
  4213d1:	je     4213f5 <isspace@plt+0x1dae5>
  4213d3:	mov    rax,QWORD PTR [rdi]
  4213d6:	mov    QWORD PTR [rax+0x30],rdi
  4213da:	mov    rax,QWORD PTR [rax]
  4213dd:	mov    rdi,QWORD PTR [rdi+0x8]
  4213e1:	call   QWORD PTR [rax+0x28]
  4213e4:	mov    rax,QWORD PTR fs:0x28
  4213ed:	cmp    rax,QWORD PTR [rsp]
  4213f1:	jne    421406 <isspace@plt+0x1daf6>
  4213f3:	pop    rax
  4213f4:	ret    
  4213f5:	mov    rax,QWORD PTR fs:0x28
  4213fe:	cmp    rax,QWORD PTR [rsp]
  421402:	jne    421406 <isspace@plt+0x1daf6>
  421404:	pop    rax
  421405:	ret    
  421406:	call   403280 <__stack_chk_fail@plt>
  42140b:	nop    DWORD PTR [rax+rax*1+0x0]
  421410:	push   rax
  421411:	mov    rax,QWORD PTR fs:0x28
  42141a:	mov    QWORD PTR [rsp],rax
  42141e:	mov    rax,QWORD PTR [rdi+0x30]
  421422:	test   rax,rax
  421425:	je     42145e <isspace@plt+0x1db4e>
  421427:	mov    rax,QWORD PTR [rax+0x2e0]
  42142e:	test   rax,rax
  421431:	jne    42143c <isspace@plt+0x1db2c>
  421433:	mov    rax,QWORD PTR [rdi+0x28]
  421437:	test   rax,rax
  42143a:	je     42145e <isspace@plt+0x1db4e>
  42143c:	mov    rcx,QWORD PTR [rax]
  42143f:	mov    QWORD PTR [rcx+0x30],rax
  421443:	mov    rcx,QWORD PTR [rcx]
  421446:	mov    rdi,QWORD PTR [rax+0x8]
  42144a:	call   QWORD PTR [rcx+0x28]
  42144d:	mov    rax,QWORD PTR fs:0x28
  421456:	cmp    rax,QWORD PTR [rsp]
  42145a:	jne    42146f <isspace@plt+0x1db5f>
  42145c:	pop    rax
  42145d:	ret    
  42145e:	mov    rax,QWORD PTR fs:0x28
  421467:	cmp    rax,QWORD PTR [rsp]
  42146b:	jne    42146f <isspace@plt+0x1db5f>
  42146d:	pop    rax
  42146e:	ret    
  42146f:	call   403280 <__stack_chk_fail@plt>
  421474:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42147e:	xchg   ax,ax
  421480:	push   rax
  421481:	mov    rax,QWORD PTR fs:0x28
  42148a:	mov    QWORD PTR [rsp],rax
  42148e:	mov    rax,QWORD PTR [rdi+0x30]
  421492:	test   rax,rax
  421495:	je     4214e6 <isspace@plt+0x1dbd6>
  421497:	mov    rax,QWORD PTR [rax+0x2d8]
  42149e:	test   rax,rax
  4214a1:	jne    4214c4 <isspace@plt+0x1dbb4>
  4214a3:	mov    rcx,QWORD PTR [rdi+0x28]
  4214a7:	nop    WORD PTR [rax+rax*1+0x0]
  4214b0:	mov    rax,rcx
  4214b3:	mov    rcx,QWORD PTR [rcx+0x2e0]
  4214ba:	test   rcx,rcx
  4214bd:	jne    4214b0 <isspace@plt+0x1dba0>
  4214bf:	test   rax,rax
  4214c2:	je     4214e6 <isspace@plt+0x1dbd6>
  4214c4:	mov    rcx,QWORD PTR [rax]
  4214c7:	mov    QWORD PTR [rcx+0x30],rax
  4214cb:	mov    rcx,QWORD PTR [rcx]
  4214ce:	mov    rdi,QWORD PTR [rax+0x8]
  4214d2:	call   QWORD PTR [rcx+0x28]
  4214d5:	mov    rax,QWORD PTR fs:0x28
  4214de:	cmp    rax,QWORD PTR [rsp]
  4214e2:	jne    4214f7 <isspace@plt+0x1dbe7>
  4214e4:	pop    rax
  4214e5:	ret    
  4214e6:	mov    rax,QWORD PTR fs:0x28
  4214ef:	cmp    rax,QWORD PTR [rsp]
  4214f3:	jne    4214f7 <isspace@plt+0x1dbe7>
  4214f5:	pop    rax
  4214f6:	ret    
  4214f7:	call   403280 <__stack_chk_fail@plt>
  4214fc:	nop    DWORD PTR [rax+0x0]
  421500:	push   rax
  421501:	mov    rax,QWORD PTR fs:0x28
  42150a:	mov    QWORD PTR [rsp],rax
  42150e:	mov    rdi,QWORD PTR [rdi+0x8]
  421512:	call   QWORD PTR [rdi+0x28]
  421515:	mov    rcx,QWORD PTR fs:0x28
  42151e:	cmp    rcx,QWORD PTR [rsp]
  421522:	jne    421526 <isspace@plt+0x1dc16>
  421524:	pop    rcx
  421525:	ret    
  421526:	call   403280 <__stack_chk_fail@plt>
  42152b:	nop    DWORD PTR [rax+rax*1+0x0]
  421530:	push   rbx
  421531:	sub    rsp,0x10
  421535:	mov    rax,QWORD PTR fs:0x28
  42153e:	mov    QWORD PTR [rsp+0x8],rax
  421543:	mov    rbx,QWORD PTR [rdi+0x28]
  421547:	test   rbx,rbx
  42154a:	je     421565 <isspace@plt+0x1dc55>
  42154c:	nop    DWORD PTR [rax+0x0]
  421550:	mov    rdi,QWORD PTR [rbx+0x18]
  421554:	call   419f00 <isspace@plt+0x165f0>
  421559:	mov    rbx,QWORD PTR [rbx+0x2e0]
  421560:	test   rbx,rbx
  421563:	jne    421550 <isspace@plt+0x1dc40>
  421565:	mov    rax,QWORD PTR fs:0x28
  42156e:	cmp    rax,QWORD PTR [rsp+0x8]
  421573:	jne    42157b <isspace@plt+0x1dc6b>
  421575:	add    rsp,0x10
  421579:	pop    rbx
  42157a:	ret    
  42157b:	call   403280 <__stack_chk_fail@plt>
  421580:	push   rbx
  421581:	sub    rsp,0x10
  421585:	mov    rbx,rdi
  421588:	mov    rax,QWORD PTR fs:0x28
  421591:	mov    QWORD PTR [rsp+0x8],rax
  421596:	mov    rdi,QWORD PTR [rdi]
  421599:	call   QWORD PTR [rdi+0x60]
  42159c:	mov    rdi,QWORD PTR [rbx]
  42159f:	call   QWORD PTR [rdi+0x58]
  4215a2:	mov    rax,QWORD PTR fs:0x28
  4215ab:	cmp    rax,QWORD PTR [rsp+0x8]
  4215b0:	jne    4215b8 <isspace@plt+0x1dca8>
  4215b2:	add    rsp,0x10
  4215b6:	pop    rbx
  4215b7:	ret    
  4215b8:	call   403280 <__stack_chk_fail@plt>
  4215bd:	nop    DWORD PTR [rax]
  4215c0:	push   rax
  4215c1:	mov    rax,QWORD PTR fs:0x28
  4215ca:	mov    QWORD PTR [rsp],rax
  4215ce:	mov    rdi,QWORD PTR [rdi]
  4215d1:	call   QWORD PTR [rdi+0x68]
  4215d4:	mov    rax,QWORD PTR fs:0x28
  4215dd:	cmp    rax,QWORD PTR [rsp]
  4215e1:	jne    4215e5 <isspace@plt+0x1dcd5>
  4215e3:	pop    rax
  4215e4:	ret    
  4215e5:	call   403280 <__stack_chk_fail@plt>
  4215ea:	nop    WORD PTR [rax+rax*1+0x0]
  4215f0:	push   r14
  4215f2:	push   rbx
  4215f3:	push   rax
  4215f4:	mov    r14,rdi
  4215f7:	mov    rax,QWORD PTR fs:0x28
  421600:	mov    QWORD PTR [rsp],rax
  421604:	call   420c80 <isspace@plt+0x1d370>
  421609:	test   rax,rax
  42160c:	je     421636 <isspace@plt+0x1dd26>
  42160e:	mov    rbx,rax
  421611:	mov    rdi,r14
  421614:	mov    rsi,rax
  421617:	mov    edx,0x140
  42161c:	call   420980 <isspace@plt+0x1d070>
  421621:	mov    rcx,rax
  421624:	mov    al,0x1
  421626:	test   rcx,rcx
  421629:	jne    421638 <isspace@plt+0x1dd28>
  42162b:	mov    rdi,r14
  42162e:	mov    rsi,rbx
  421631:	call   420f80 <isspace@plt+0x1d670>
  421636:	xor    eax,eax
  421638:	mov    rcx,QWORD PTR fs:0x28
  421641:	cmp    rcx,QWORD PTR [rsp]
  421645:	jne    42164f <isspace@plt+0x1dd3f>
  421647:	add    rsp,0x8
  42164b:	pop    rbx
  42164c:	pop    r14
  42164e:	ret    
  42164f:	call   403280 <__stack_chk_fail@plt>
  421654:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42165e:	xchg   ax,ax
  421660:	push   rbp
  421661:	push   r15
  421663:	push   r14
  421665:	push   rbx
  421666:	push   rax
  421667:	mov    rax,QWORD PTR fs:0x28
  421670:	mov    QWORD PTR [rsp],rax
  421674:	cmp    esi,0xffffffff
  421677:	je     4216c1 <isspace@plt+0x1ddb1>
  421679:	mov    r14d,esi
  42167c:	mov    rbx,rdi
  42167f:	xor    ebp,ebp
  421681:	xor    esi,esi
  421683:	call   420c80 <isspace@plt+0x1d370>
  421688:	test   rax,rax
  42168b:	je     4216c3 <isspace@plt+0x1ddb3>
  42168d:	mov    r15,rax
  421690:	mov    rdi,rbx
  421693:	mov    rsi,rax
  421696:	mov    edx,0x140
  42169b:	call   420980 <isspace@plt+0x1d070>
  4216a0:	test   rax,rax
  4216a3:	je     4216b6 <isspace@plt+0x1dda6>
  4216a5:	mov    rax,QWORD PTR [rbx+0x30]
  4216a9:	mov    rax,QWORD PTR [rax+0x10]
  4216ad:	mov    DWORD PTR [rax+0x14],r14d
  4216b1:	mov    bpl,0x1
  4216b4:	jmp    4216c3 <isspace@plt+0x1ddb3>
  4216b6:	mov    rdi,rbx
  4216b9:	mov    rsi,r15
  4216bc:	call   420f80 <isspace@plt+0x1d670>
  4216c1:	xor    ebp,ebp
  4216c3:	mov    rax,QWORD PTR fs:0x28
  4216cc:	cmp    rax,QWORD PTR [rsp]
  4216d0:	jne    4216df <isspace@plt+0x1ddcf>
  4216d2:	mov    eax,ebp
  4216d4:	add    rsp,0x8
  4216d8:	pop    rbx
  4216d9:	pop    r14
  4216db:	pop    r15
  4216dd:	pop    rbp
  4216de:	ret    
  4216df:	call   403280 <__stack_chk_fail@plt>
  4216e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4216ee:	xchg   ax,ax
  4216f0:	push   rbp
  4216f1:	push   rbx
  4216f2:	push   rax
  4216f3:	mov    rax,QWORD PTR fs:0x28
  4216fc:	mov    QWORD PTR [rsp],rax
  421700:	mov    bpl,0x1
  421703:	test   rdi,rdi
  421706:	je     42172a <isspace@plt+0x1de1a>
  421708:	mov    rbx,rdi
  42170b:	mov    rax,QWORD PTR [rdi+0x10]
  42170f:	mov    rdi,QWORD PTR [rax]
  421712:	call   4104b0 <isspace@plt+0xcba0>
  421717:	test   al,al
  421719:	je     42172a <isspace@plt+0x1de1a>
  42171b:	mov    rax,QWORD PTR [rbx+0x10]
  42171f:	cmp    DWORD PTR [rax+0xb0],0x1
  421726:	setg   bpl
  42172a:	mov    rax,QWORD PTR fs:0x28
  421733:	cmp    rax,QWORD PTR [rsp]
  421737:	jne    421742 <isspace@plt+0x1de32>
  421739:	mov    eax,ebp
  42173b:	add    rsp,0x8
  42173f:	pop    rbx
  421740:	pop    rbp
  421741:	ret    
  421742:	call   403280 <__stack_chk_fail@plt>
  421747:	nop    WORD PTR [rax+rax*1+0x0]
  421750:	push   r15
  421752:	push   r14
  421754:	push   rbx
  421755:	sub    rsp,0x10
  421759:	mov    rax,QWORD PTR fs:0x28
  421762:	mov    QWORD PTR [rsp+0x8],rax
  421767:	test   rsi,rsi
  42176a:	je     421856 <isspace@plt+0x1df46>
  421770:	mov    rbx,rdi
  421773:	test   rdi,rdi
  421776:	je     421856 <isspace@plt+0x1df46>
  42177c:	mov    r14,rsi
  42177f:	cmp    rbx,rsi
  421782:	je     421856 <isspace@plt+0x1df46>
  421788:	mov    r15,QWORD PTR [rbx]
  42178b:	mov    rax,QWORD PTR [rbx+0x2e0]
  421792:	mov    rcx,QWORD PTR [r14+0x2e0]
  421799:	mov    QWORD PTR [rbx+0x2e0],rcx
  4217a0:	mov    QWORD PTR [r14+0x2e0],rax
  4217a7:	mov    rcx,QWORD PTR [rbx+0x2e0]
  4217ae:	test   rcx,rcx
  4217b1:	je     4217ba <isspace@plt+0x1deaa>
  4217b3:	mov    QWORD PTR [rcx+0x2d8],rbx
  4217ba:	test   rax,rax
  4217bd:	je     4217c6 <isspace@plt+0x1deb6>
  4217bf:	mov    QWORD PTR [rax+0x2d8],r14
  4217c6:	mov    rax,QWORD PTR [rbx+0x2d8]
  4217cd:	mov    rcx,QWORD PTR [r14+0x2d8]
  4217d4:	mov    QWORD PTR [rbx+0x2d8],rcx
  4217db:	mov    QWORD PTR [r14+0x2d8],rax
  4217e2:	mov    rcx,QWORD PTR [rbx+0x2d8]
  4217e9:	test   rcx,rcx
  4217ec:	je     4217f5 <isspace@plt+0x1dee5>
  4217ee:	mov    QWORD PTR [rcx+0x2e0],rbx
  4217f5:	test   rax,rax
  4217f8:	je     421801 <isspace@plt+0x1def1>
  4217fa:	mov    QWORD PTR [rax+0x2e0],r14
  421801:	mov    rcx,QWORD PTR [r15+0x28]
  421805:	mov    rax,r14
  421808:	cmp    rcx,rbx
  42180b:	je     421815 <isspace@plt+0x1df05>
  42180d:	mov    rax,rbx
  421810:	cmp    rcx,r14
  421813:	jne    421819 <isspace@plt+0x1df09>
  421815:	mov    QWORD PTR [r15+0x28],rax
  421819:	mov    rax,QWORD PTR [r15]
  42181c:	mov    rdi,QWORD PTR [rbx+0x8]
  421820:	mov    rsi,QWORD PTR [r14+0x8]
  421824:	call   QWORD PTR [rax+0x30]
  421827:	mov    rax,QWORD PTR [r15+0x30]
  42182b:	cmp    rax,rbx
  42182e:	je     421845 <isspace@plt+0x1df35>
  421830:	cmp    rax,r14
  421833:	jne    421856 <isspace@plt+0x1df46>
  421835:	mov    rax,QWORD PTR [rbx]
  421838:	mov    QWORD PTR [rax+0x30],rbx
  42183c:	mov    rax,QWORD PTR [rax]
  42183f:	mov    rdi,QWORD PTR [rbx+0x8]
  421843:	jmp    421853 <isspace@plt+0x1df43>
  421845:	mov    rax,QWORD PTR [r14]
  421848:	mov    QWORD PTR [rax+0x30],r14
  42184c:	mov    rax,QWORD PTR [rax]
  42184f:	mov    rdi,QWORD PTR [r14+0x8]
  421853:	call   QWORD PTR [rax+0x28]
  421856:	mov    rax,QWORD PTR fs:0x28
  42185f:	cmp    rax,QWORD PTR [rsp+0x8]
  421864:	jne    421870 <isspace@plt+0x1df60>
  421866:	add    rsp,0x10
  42186a:	pop    rbx
  42186b:	pop    r14
  42186d:	pop    r15
  42186f:	ret    
  421870:	call   403280 <__stack_chk_fail@plt>
  421875:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42187f:	nop
  421880:	push   r14
  421882:	push   rbx
  421883:	push   rax
  421884:	mov    rax,QWORD PTR fs:0x28
  42188d:	mov    QWORD PTR [rsp],rax
  421891:	test   rdi,rdi
  421894:	je     421945 <isspace@plt+0x1e035>
  42189a:	mov    rbx,rdi
  42189d:	mov    r14,QWORD PTR [rdi]
  4218a0:	mov    rdi,r14
  4218a3:	mov    esi,0x8
  4218a8:	mov    rdx,rbx
  4218ab:	xor    eax,eax
  4218ad:	call   41fe60 <isspace@plt+0x1c550>
  4218b2:	mov    rsi,QWORD PTR [rbx+0x10]
  4218b6:	mov    rdi,r14
  4218b9:	call   420f80 <isspace@plt+0x1d670>
  4218be:	mov    rcx,QWORD PTR [rbx+0x2d8]
  4218c5:	test   rcx,rcx
  4218c8:	je     4218d8 <isspace@plt+0x1dfc8>
  4218ca:	mov    rax,QWORD PTR [rbx+0x2e0]
  4218d1:	mov    QWORD PTR [rcx+0x2e0],rax
  4218d8:	mov    rax,QWORD PTR [rbx+0x2e0]
  4218df:	test   rax,rax
  4218e2:	je     4218eb <isspace@plt+0x1dfdb>
  4218e4:	mov    QWORD PTR [rax+0x2d8],rcx
  4218eb:	cmp    QWORD PTR [r14+0x28],rbx
  4218ef:	je     42195c <isspace@plt+0x1e04c>
  4218f1:	cmp    QWORD PTR [r14+0x30],rbx
  4218f5:	je     421966 <isspace@plt+0x1e056>
  4218f7:	cmp    QWORD PTR [r14+0x38],rbx
  4218fb:	je     42197c <isspace@plt+0x1e06c>
  4218fd:	mov    rdi,rbx
  421900:	call   420af0 <isspace@plt+0x1d1e0>
  421905:	mov    rax,QWORD PTR [r14+0x30]
  421909:	test   rax,rax
  42190c:	je     421918 <isspace@plt+0x1e008>
  42190e:	mov    rcx,QWORD PTR [r14]
  421911:	mov    rdi,QWORD PTR [rax+0x8]
  421915:	call   QWORD PTR [rcx+0x28]
  421918:	mov    rbx,QWORD PTR [r14+0x28]
  42191c:	test   rbx,rbx
  42191f:	je     421945 <isspace@plt+0x1e035>
  421921:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42192b:	nop    DWORD PTR [rax+rax*1+0x0]
  421930:	mov    rdi,QWORD PTR [rbx+0x18]
  421934:	call   419f00 <isspace@plt+0x165f0>
  421939:	mov    rbx,QWORD PTR [rbx+0x2e0]
  421940:	test   rbx,rbx
  421943:	jne    421930 <isspace@plt+0x1e020>
  421945:	mov    rax,QWORD PTR fs:0x28
  42194e:	cmp    rax,QWORD PTR [rsp]
  421952:	jne    421989 <isspace@plt+0x1e079>
  421954:	add    rsp,0x8
  421958:	pop    rbx
  421959:	pop    r14
  42195b:	ret    
  42195c:	mov    QWORD PTR [r14+0x28],rax
  421960:	cmp    QWORD PTR [r14+0x30],rbx
  421964:	jne    4218f7 <isspace@plt+0x1dfe7>
  421966:	test   rax,rax
  421969:	jne    421972 <isspace@plt+0x1e062>
  42196b:	mov    rax,QWORD PTR [rbx+0x2d8]
  421972:	mov    QWORD PTR [r14+0x30],rax
  421976:	cmp    QWORD PTR [r14+0x38],rbx
  42197a:	jne    4218fd <isspace@plt+0x1dfed>
  42197c:	mov    QWORD PTR [r14+0x38],0x0
  421984:	jmp    4218fd <isspace@plt+0x1dfed>
  421989:	call   403280 <__stack_chk_fail@plt>
  42198e:	xchg   ax,ax
  421990:	push   r15
  421992:	push   r14
  421994:	push   r12
  421996:	push   rbx
  421997:	push   rax
  421998:	mov    rax,QWORD PTR fs:0x28
  4219a1:	mov    QWORD PTR [rsp],rax
  4219a5:	test   rdi,rdi
  4219a8:	je     421c43 <isspace@plt+0x1e333>
  4219ae:	mov    r14,rsi
  4219b1:	mov    r15,rdi
  4219b4:	mov    edi,0x1
  4219b9:	mov    esi,0xb68
  4219be:	call   403460 <calloc@plt>
  4219c3:	test   rax,rax
  4219c6:	je     421c43 <isspace@plt+0x1e333>
  4219cc:	mov    r12,rax
  4219cf:	mov    DWORD PTR [rax+0x9bc],0xffffffff
  4219d9:	mov    QWORD PTR [rax],r15
  4219dc:	mov    DWORD PTR [rax+0x7f8],0x8
  4219e6:	mov    BYTE PTR [rax+0x7fe],0x1
  4219ed:	mov    ebx,0x40
  4219f2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4219fc:	nop    DWORD PTR [rax+0x0]
  421a00:	lea    rdi,[r12+rbx*1]
  421a04:	call   429fe0 <isspace@plt+0x266d0>
  421a09:	add    rbx,0x28
  421a0d:	cmp    rbx,0x7c0
  421a14:	jne    421a00 <isspace@plt+0x1e0f0>
  421a16:	mov    DWORD PTR [r12+0x244],0x2
  421a22:	mov    DWORD PTR [r12+0x26c],0x3
  421a2e:	mov    DWORD PTR [r12+0x294],0x3
  421a3a:	mov    DWORD PTR [r12+0x35c],0x1
  421a46:	lea    rdi,[r12+0xae0]
  421a4e:	call   403a10 <isspace@plt+0x100>
  421a53:	lea    rdi,[r12+0xb00]
  421a5b:	call   403a10 <isspace@plt+0x100>
  421a60:	lea    rdi,[r12+0xb20]
  421a68:	call   403a10 <isspace@plt+0x100>
  421a6d:	lea    rdi,[r12+0xb40]
  421a75:	call   403a10 <isspace@plt+0x100>
  421a7a:	lea    rdi,[r12+0xaa8]
  421a82:	call   403a10 <isspace@plt+0x100>
  421a87:	vxorps xmm0,xmm0,xmm0
  421a8b:	vmovups YMMWORD PTR [r12+0x910],ymm0
  421a95:	vmovups YMMWORD PTR [r12+0x930],ymm0
  421a9f:	mov    QWORD PTR [r12+0x950],0x0
  421aab:	mov    DWORD PTR [r12+0x910],0xffffffff
  421ab7:	mov    rdi,r12
  421aba:	add    rdi,0x8f0
  421ac1:	vzeroupper 
  421ac4:	call   404230 <isspace@plt+0x920>
  421ac9:	mov    rdi,r12
  421acc:	xor    esi,esi
  421ace:	call   420c80 <isspace@plt+0x1d370>
  421ad3:	test   rax,rax
  421ad6:	je     421c1c <isspace@plt+0x1e30c>
  421adc:	mov    DWORD PTR [rax+0xb0],0x1
  421ae6:	mov    BYTE PTR [rax+0x18],0x1
  421aea:	mov    QWORD PTR [r12+0x10],rax
  421aef:	mov    rdi,r12
  421af2:	xor    esi,esi
  421af4:	call   420c80 <isspace@plt+0x1d370>
  421af9:	test   rax,rax
  421afc:	je     421c27 <isspace@plt+0x1e317>
  421b02:	mov    DWORD PTR [rax+0xb0],0x1
  421b0c:	mov    BYTE PTR [rax+0x18],0x1
  421b10:	mov    QWORD PTR [r12+0x18],rax
  421b15:	mov    rdi,r12
  421b18:	xor    esi,esi
  421b1a:	call   420c80 <isspace@plt+0x1d370>
  421b1f:	test   rax,rax
  421b22:	je     421c32 <isspace@plt+0x1e322>
  421b28:	mov    DWORD PTR [rax+0xb0],0x1
  421b32:	mov    BYTE PTR [rax+0x18],0x1
  421b36:	mov    QWORD PTR [r12+0x20],rax
  421b3b:	call   408ef0 <isspace@plt+0x55e0>
  421b40:	mov    QWORD PTR [r12+0xaa0],rax
  421b48:	test   rax,rax
  421b4b:	je     421c3b <isspace@plt+0x1e32b>
  421b51:	call   408ef0 <isspace@plt+0x55e0>
  421b56:	mov    QWORD PTR [r12+0x820],rax
  421b5e:	test   rax,rax
  421b61:	je     421c3b <isspace@plt+0x1e32b>
  421b67:	mov    rdi,r12
  421b6a:	call   408f80 <isspace@plt+0x5670>
  421b6f:	test   al,al
  421b71:	je     421c3b <isspace@plt+0x1e32b>
  421b77:	lea    rdi,[rip+0xf1a8]        # 430d26 <isspace@plt+0x2d416>
  421b7e:	call   403060 <getenv@plt>
  421b83:	mov    r15,rax
  421b86:	test   rax,rax
  421b89:	je     421b91 <isspace@plt+0x1e281>
  421b8b:	cmp    BYTE PTR [r15],0x0
  421b8f:	jne    421bb8 <isspace@plt+0x1e2a8>
  421b91:	call   403290 <getuid@plt>
  421b96:	mov    edi,eax
  421b98:	call   403230 <getpwuid@plt>
  421b9d:	test   rax,rax
  421ba0:	je     421ba6 <isspace@plt+0x1e296>
  421ba2:	mov    r15,QWORD PTR [rax+0x28]
  421ba6:	test   r15,r15
  421ba9:	je     421bb1 <isspace@plt+0x1e2a1>
  421bab:	cmp    BYTE PTR [r15],0x0
  421baf:	jne    421bb8 <isspace@plt+0x1e2a8>
  421bb1:	lea    r15,[rip+0xf174]        # 430d2c <isspace@plt+0x2d41c>
  421bb8:	mov    rdi,r15
  421bbb:	call   403850 <strdup@plt>
  421bc0:	mov    QWORD PTR [r12+0x800],rax
  421bc8:	test   rax,rax
  421bcb:	je     421c3b <isspace@plt+0x1e32b>
  421bcd:	vmovddup xmm0,QWORD PTR [rip+0x203eb]        # 441fc0 <isspace@plt+0x3e6b0>
  421bd5:	vmovups XMMWORD PTR [r12+0x9a0],xmm0
  421bdf:	mov    QWORD PTR [r12+0xad8],r14
  421be7:	test   r14,r14
  421bea:	je     421c46 <isspace@plt+0x1e336>
  421bec:	mov    rax,QWORD PTR [r14+0x18]
  421bf0:	test   rax,rax
  421bf3:	je     421c03 <isspace@plt+0x1e2f3>
  421bf5:	lea    rcx,[rip+0x204e4]        # 4420e0 <isspace@plt+0x3e7d0>
  421bfc:	mov    QWORD PTR [rcx+0x1c0],rax
  421c03:	mov    rax,QWORD PTR [r14+0x20]
  421c07:	test   rax,rax
  421c0a:	je     421c46 <isspace@plt+0x1e336>
  421c0c:	lea    rcx,[rip+0x204cd]        # 4420e0 <isspace@plt+0x3e7d0>
  421c13:	mov    QWORD PTR [rcx+0x220],rax
  421c1a:	jmp    421c46 <isspace@plt+0x1e336>
  421c1c:	mov    QWORD PTR [r12+0x10],0x0
  421c25:	jmp    421c3b <isspace@plt+0x1e32b>
  421c27:	mov    QWORD PTR [r12+0x18],0x0
  421c30:	jmp    421c3b <isspace@plt+0x1e32b>
  421c32:	mov    QWORD PTR [r12+0x20],0x0
  421c3b:	mov    rdi,r12
  421c3e:	call   421cc0 <isspace@plt+0x1e3b0>
  421c43:	xor    r12d,r12d
  421c46:	mov    rax,QWORD PTR fs:0x28
  421c4f:	cmp    rax,QWORD PTR [rsp]
  421c53:	jne    421c64 <isspace@plt+0x1e354>
  421c55:	mov    rax,r12
  421c58:	add    rsp,0x8
  421c5c:	pop    rbx
  421c5d:	pop    r12
  421c5f:	pop    r14
  421c61:	pop    r15
  421c63:	ret    
  421c64:	call   403280 <__stack_chk_fail@plt>
  421c69:	nop    DWORD PTR [rax+0x0]
  421c70:	push   rax
  421c71:	mov    rax,QWORD PTR fs:0x28
  421c7a:	mov    QWORD PTR [rsp],rax
  421c7e:	vxorps xmm0,xmm0,xmm0
  421c82:	vmovups YMMWORD PTR [rdi],ymm0
  421c86:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  421c8b:	mov    QWORD PTR [rdi+0x40],0x0
  421c93:	mov    DWORD PTR [rdi],0xffffffff
  421c99:	mov    rax,QWORD PTR fs:0x28
  421ca2:	cmp    rax,QWORD PTR [rsp]
  421ca6:	jne    421cad <isspace@plt+0x1e39d>
  421ca8:	pop    rax
  421ca9:	vzeroupper 
  421cac:	ret    
  421cad:	vzeroupper 
  421cb0:	call   403280 <__stack_chk_fail@plt>
  421cb5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421cbf:	nop
  421cc0:	push   r14
  421cc2:	push   rbx
  421cc3:	sub    rsp,0x18
  421cc7:	mov    rax,QWORD PTR fs:0x28
  421cd0:	mov    QWORD PTR [rsp+0x10],rax
  421cd5:	test   rdi,rdi
  421cd8:	je     421f40 <isspace@plt+0x1e630>
  421cde:	mov    r14,rdi
  421ce1:	mov    esi,0x2
  421ce6:	xor    eax,eax
  421ce8:	call   41fe60 <isspace@plt+0x1c550>
  421ced:	mov    QWORD PTR [r14+0xad8],0x0
  421cf8:	nop    DWORD PTR [rax+rax*1+0x0]
  421d00:	mov    rdi,QWORD PTR [r14+0x28]
  421d04:	test   rdi,rdi
  421d07:	je     421d10 <isspace@plt+0x1e400>
  421d09:	call   421880 <isspace@plt+0x1df70>
  421d0e:	jmp    421d00 <isspace@plt+0x1e3f0>
  421d10:	mov    rsi,QWORD PTR [r14+0x10]
  421d14:	mov    rdi,r14
  421d17:	call   420f80 <isspace@plt+0x1d670>
  421d1c:	mov    rsi,QWORD PTR [r14+0x18]
  421d20:	mov    rdi,r14
  421d23:	call   420f80 <isspace@plt+0x1d670>
  421d28:	mov    rsi,QWORD PTR [r14+0x20]
  421d2c:	mov    rdi,r14
  421d2f:	call   420f80 <isspace@plt+0x1d670>
  421d34:	mov    ebx,0x40
  421d39:	nop    DWORD PTR [rax+0x0]
  421d40:	lea    rdi,[r14+rbx*1]
  421d44:	call   42a040 <isspace@plt+0x26730>
  421d49:	add    rbx,0x28
  421d4d:	cmp    rbx,0x7c0
  421d54:	jne    421d40 <isspace@plt+0x1e430>
  421d56:	mov    rdi,QWORD PTR [r14]
  421d59:	call   QWORD PTR [rdi+0x8]
  421d5c:	mov    rdi,QWORD PTR [r14+0x810]
  421d63:	test   rdi,rdi
  421d66:	je     421dae <isspace@plt+0x1e49e>
  421d68:	lea    rsi,[rsp+0x8]
  421d6d:	call   408c60 <isspace@plt+0x5350>
  421d72:	test   rax,rax
  421d75:	je     421da5 <isspace@plt+0x1e495>
  421d77:	lea    rbx,[rsp+0x8]
  421d7c:	nop    DWORD PTR [rax+0x0]
  421d80:	mov    rsi,QWORD PTR [rsp+0x8]
  421d85:	mov    rdi,r14
  421d88:	call   409900 <isspace@plt+0x5ff0>
  421d8d:	test   al,al
  421d8f:	je     421da5 <isspace@plt+0x1e495>
  421d91:	mov    rdi,QWORD PTR [r14+0x810]
  421d98:	mov    rsi,rbx
  421d9b:	call   408c60 <isspace@plt+0x5350>
  421da0:	test   rax,rax
  421da3:	jne    421d80 <isspace@plt+0x1e470>
  421da5:	mov    rdi,QWORD PTR [r14+0x810]
  421dac:	jmp    421db0 <isspace@plt+0x1e4a0>
  421dae:	xor    edi,edi
  421db0:	call   408f30 <isspace@plt+0x5620>
  421db5:	mov    rdi,QWORD PTR [r14+0x808]
  421dbc:	call   408f30 <isspace@plt+0x5620>
  421dc1:	mov    rdi,QWORD PTR [r14+0x818]
  421dc8:	test   rdi,rdi
  421dcb:	je     421e1e <isspace@plt+0x1e50e>
  421dcd:	lea    rsi,[rsp+0x8]
  421dd2:	call   408c60 <isspace@plt+0x5350>
  421dd7:	test   rax,rax
  421dda:	je     421e15 <isspace@plt+0x1e505>
  421ddc:	lea    rbx,[rsp+0x8]
  421de1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421deb:	nop    DWORD PTR [rax+rax*1+0x0]
  421df0:	mov    rsi,QWORD PTR [rsp+0x8]
  421df5:	mov    rdi,r14
  421df8:	call   409b70 <isspace@plt+0x6260>
  421dfd:	test   al,al
  421dff:	je     421e15 <isspace@plt+0x1e505>
  421e01:	mov    rdi,QWORD PTR [r14+0x818]
  421e08:	mov    rsi,rbx
  421e0b:	call   408c60 <isspace@plt+0x5350>
  421e10:	test   rax,rax
  421e13:	jne    421df0 <isspace@plt+0x1e4e0>
  421e15:	mov    rdi,QWORD PTR [r14+0x818]
  421e1c:	jmp    421e20 <isspace@plt+0x1e510>
  421e1e:	xor    edi,edi
  421e20:	call   408f30 <isspace@plt+0x5620>
  421e25:	mov    rdi,QWORD PTR [r14+0xaa0]
  421e2c:	call   408f30 <isspace@plt+0x5620>
  421e31:	mov    rdi,QWORD PTR [r14+0x820]
  421e38:	call   408f30 <isspace@plt+0x5620>
  421e3d:	lea    rdi,[r14+0x8f0]
  421e44:	call   404540 <isspace@plt+0xc30>
  421e49:	lea    rbx,[rip+0x20290]        # 4420e0 <isspace@plt+0x3e7d0>
  421e50:	mov    rdi,QWORD PTR [rbx+0x10]
  421e54:	call   408f30 <isspace@plt+0x5620>
  421e59:	mov    rdi,QWORD PTR [rbx+0x70]
  421e5d:	call   408f30 <isspace@plt+0x5620>
  421e62:	mov    rdi,QWORD PTR [rbx+0xd0]
  421e69:	call   408f30 <isspace@plt+0x5620>
  421e6e:	mov    rdi,QWORD PTR [rbx+0x130]
  421e75:	call   408f30 <isspace@plt+0x5620>
  421e7a:	mov    rdi,QWORD PTR [rbx+0x190]
  421e81:	call   408f30 <isspace@plt+0x5620>
  421e86:	mov    rdi,QWORD PTR [rbx+0x1f0]
  421e8d:	call   408f30 <isspace@plt+0x5620>
  421e92:	lea    rdi,[r14+0xae0]
  421e99:	call   403bb0 <isspace@plt+0x2a0>
  421e9e:	lea    rdi,[r14+0xb00]
  421ea5:	call   403bb0 <isspace@plt+0x2a0>
  421eaa:	lea    rdi,[r14+0xb20]
  421eb1:	call   403bb0 <isspace@plt+0x2a0>
  421eb6:	lea    rbx,[r14+0xb40]
  421ebd:	nop    DWORD PTR [rax]
  421ec0:	mov    rdi,rbx
  421ec3:	call   403fa0 <isspace@plt+0x690>
  421ec8:	test   rax,rax
  421ecb:	je     421ee4 <isspace@plt+0x1e5d4>
  421ecd:	mov    rdi,rbx
  421ed0:	xor    esi,esi
  421ed2:	call   403c70 <isspace@plt+0x360>
  421ed7:	mov    rdi,r14
  421eda:	mov    rsi,rax
  421edd:	call   426e90 <isspace@plt+0x23580>
  421ee2:	jmp    421ec0 <isspace@plt+0x1e5b0>
  421ee4:	mov    rdi,rbx
  421ee7:	call   403b50 <isspace@plt+0x240>
  421eec:	lea    rbx,[r14+0xaa8]
  421ef3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421efd:	nop    DWORD PTR [rax]
  421f00:	mov    rdi,rbx
  421f03:	call   403fa0 <isspace@plt+0x690>
  421f08:	test   rax,rax
  421f0b:	je     421f24 <isspace@plt+0x1e614>
  421f0d:	mov    rdi,rbx
  421f10:	xor    esi,esi
  421f12:	call   403c70 <isspace@plt+0x360>
  421f17:	mov    rdi,r14
  421f1a:	mov    rsi,rax
  421f1d:	call   426d80 <isspace@plt+0x23470>
  421f22:	jmp    421f00 <isspace@plt+0x1e5f0>
  421f24:	mov    rdi,rbx
  421f27:	call   403b50 <isspace@plt+0x240>
  421f2c:	mov    rdi,QWORD PTR [r14+0x800]
  421f33:	call   4030d0 <free@plt>
  421f38:	mov    rdi,r14
  421f3b:	call   4030d0 <free@plt>
  421f40:	mov    rax,QWORD PTR fs:0x28
  421f49:	cmp    rax,QWORD PTR [rsp+0x10]
  421f4e:	jne    421f58 <isspace@plt+0x1e648>
  421f50:	add    rsp,0x18
  421f54:	pop    rbx
  421f55:	pop    r14
  421f57:	ret    
  421f58:	call   403280 <__stack_chk_fail@plt>
  421f5d:	nop    DWORD PTR [rax]
  421f60:	push   rbp
  421f61:	push   r15
  421f63:	push   r14
  421f65:	push   r13
  421f67:	push   r12
  421f69:	push   rbx
  421f6a:	sub    rsp,0x18
  421f6e:	mov    QWORD PTR [rsp+0x8],rsi
  421f73:	mov    rax,QWORD PTR fs:0x28
  421f7c:	mov    QWORD PTR [rsp+0x10],rax
  421f81:	mov    rax,QWORD PTR [rdi+0x30]
  421f85:	test   rax,rax
  421f88:	je     422031 <isspace@plt+0x1e721>
  421f8e:	mov    r12,rdx
  421f91:	mov    r15,rdi
  421f94:	mov    rdi,QWORD PTR [rax+0x18]
  421f98:	call   41efa0 <isspace@plt+0x1b690>
  421f9d:	test   rax,rax
  421fa0:	je     422031 <isspace@plt+0x1e721>
  421fa6:	mov    rbx,rax
  421fa9:	jmp    421fce <isspace@plt+0x1e6be>
  421fab:	nop    DWORD PTR [rax+rax*1+0x0]
  421fb0:	add    r13,r12
  421fb3:	mov    rdi,rbx
  421fb6:	mov    rsi,r13
  421fb9:	call   41e5e0 <isspace@plt+0x1acd0>
  421fbe:	mov    rdi,rbx
  421fc1:	call   41f080 <isspace@plt+0x1b770>
  421fc6:	mov    rbx,rax
  421fc9:	test   rax,rax
  421fcc:	je     422031 <isspace@plt+0x1e721>
  421fce:	mov    rdi,rbx
  421fd1:	call   41af10 <isspace@plt+0x17600>
  421fd6:	mov    r13,rax
  421fd9:	mov    rbp,QWORD PTR [r15+0x30]
  421fdd:	test   rbp,rbp
  421fe0:	je     421fb0 <isspace@plt+0x1e6a0>
  421fe2:	mov    rax,QWORD PTR [rbp+0x10]
  421fe6:	mov    rdi,QWORD PTR [rax]
  421fe9:	mov    rsi,r13
  421fec:	mov    rdx,QWORD PTR [rsp+0x8]
  421ff1:	mov    rcx,r12
  421ff4:	call   40efe0 <isspace@plt+0xb6d0>
  421ff9:	mov    rax,QWORD PTR [rbp+0x0]
  421ffd:	mov    r14,QWORD PTR [rax+0x28]
  422001:	test   r14,r14
  422004:	jne    42201c <isspace@plt+0x1e70c>
  422006:	jmp    421fb0 <isspace@plt+0x1e6a0>
  422008:	nop    DWORD PTR [rax+rax*1+0x0]
  422010:	mov    r14,QWORD PTR [r14+0x2e0]
  422017:	test   r14,r14
  42201a:	je     421fb0 <isspace@plt+0x1e6a0>
  42201c:	mov    rax,QWORD PTR [r14+0x10]
  422020:	cmp    rax,QWORD PTR [rbp+0x10]
  422024:	jne    422010 <isspace@plt+0x1e700>
  422026:	mov    rdi,QWORD PTR [r14+0x18]
  42202a:	call   419f00 <isspace@plt+0x165f0>
  42202f:	jmp    422010 <isspace@plt+0x1e700>
  422031:	mov    rax,QWORD PTR fs:0x28
  42203a:	cmp    rax,QWORD PTR [rsp+0x10]
  42203f:	jne    422050 <isspace@plt+0x1e740>
  422041:	add    rsp,0x18
  422045:	pop    rbx
  422046:	pop    r12
  422048:	pop    r13
  42204a:	pop    r14
  42204c:	pop    r15
  42204e:	pop    rbp
  42204f:	ret    
  422050:	call   403280 <__stack_chk_fail@plt>
  422055:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42205f:	nop
  422060:	push   rbp
  422061:	push   r15
  422063:	push   r14
  422065:	push   r13
  422067:	push   r12
  422069:	push   rbx
  42206a:	sub    rsp,0x58
  42206e:	mov    rax,QWORD PTR fs:0x28
  422077:	mov    QWORD PTR [rsp+0x50],rax
  42207c:	mov    rax,QWORD PTR [rdi+0x30]
  422080:	test   rax,rax
  422083:	je     422171 <isspace@plt+0x1e861>
  422089:	mov    rbp,rcx
  42208c:	mov    rbx,rdx
  42208f:	mov    r13,rsi
  422092:	mov    r12,rdi
  422095:	mov    rax,QWORD PTR [rax+0x10]
  422099:	mov    rsi,QWORD PTR [rax]
  42209c:	lea    rdi,[rsp+0x28]
  4220a1:	mov    QWORD PTR [rsp+0x18],rsi
  4220a6:	mov    rdx,r13
  4220a9:	call   410570 <isspace@plt+0xcc60>
  4220ae:	mov    QWORD PTR [rsp+0x8],rbx
  4220b3:	mov    rdi,rbx
  4220b6:	mov    QWORD PTR [rsp+0x10],rbp
  4220bb:	mov    rsi,rbp
  4220be:	call   417380 <isspace@plt+0x13a70>
  4220c3:	test   eax,eax
  4220c5:	jle    422106 <isspace@plt+0x1e7f6>
  4220c7:	mov    ebp,eax
  4220c9:	lea    r14,[rsp+0x28]
  4220ce:	lea    r15,[rsp+0x27]
  4220d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4220dd:	nop    DWORD PTR [rax]
  4220e0:	mov    rdi,r14
  4220e3:	mov    rsi,r15
  4220e6:	call   412400 <isspace@plt+0xeaf0>
  4220eb:	cmp    BYTE PTR [rsp+0x27],0xa
  4220f0:	je     422106 <isspace@plt+0x1e7f6>
  4220f2:	test   al,al
  4220f4:	je     422106 <isspace@plt+0x1e7f6>
  4220f6:	dec    ebp
  4220f8:	mov    rdi,r14
  4220fb:	xor    esi,esi
  4220fd:	call   4128a0 <isspace@plt+0xef90>
  422102:	test   ebp,ebp
  422104:	jg     4220e0 <isspace@plt+0x1e7d0>
  422106:	mov    rdx,QWORD PTR [rsp+0x48]
  42210b:	sub    rdx,r13
  42210e:	mov    rdi,QWORD PTR [rsp+0x18]
  422113:	mov    rsi,r13
  422116:	call   410050 <isspace@plt+0xc740>
  42211b:	mov    rbp,QWORD PTR [r12+0x30]
  422120:	test   rbp,rbp
  422123:	je     422171 <isspace@plt+0x1e861>
  422125:	mov    rax,QWORD PTR [rbp+0x10]
  422129:	mov    rdi,QWORD PTR [rax]
  42212c:	mov    rsi,r13
  42212f:	mov    rdx,QWORD PTR [rsp+0x8]
  422134:	mov    rcx,QWORD PTR [rsp+0x10]
  422139:	call   40efe0 <isspace@plt+0xb6d0>
  42213e:	mov    rax,QWORD PTR [rbp+0x0]
  422142:	mov    rbx,QWORD PTR [rax+0x28]
  422146:	test   rbx,rbx
  422149:	jne    42215c <isspace@plt+0x1e84c>
  42214b:	jmp    422171 <isspace@plt+0x1e861>
  42214d:	nop    DWORD PTR [rax]
  422150:	mov    rbx,QWORD PTR [rbx+0x2e0]
  422157:	test   rbx,rbx
  42215a:	je     422171 <isspace@plt+0x1e861>
  42215c:	mov    rax,QWORD PTR [rbx+0x10]
  422160:	cmp    rax,QWORD PTR [rbp+0x10]
  422164:	jne    422150 <isspace@plt+0x1e840>
  422166:	mov    rdi,QWORD PTR [rbx+0x18]
  42216a:	call   419f00 <isspace@plt+0x165f0>
  42216f:	jmp    422150 <isspace@plt+0x1e840>
  422171:	mov    rax,QWORD PTR fs:0x28
  42217a:	cmp    rax,QWORD PTR [rsp+0x50]
  42217f:	jne    422190 <isspace@plt+0x1e880>
  422181:	add    rsp,0x58
  422185:	pop    rbx
  422186:	pop    r12
  422188:	pop    r13
  42218a:	pop    r14
  42218c:	pop    r15
  42218e:	pop    rbp
  42218f:	ret    
  422190:	call   403280 <__stack_chk_fail@plt>
  422195:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42219f:	nop
  4221a0:	push   r15
  4221a2:	push   r14
  4221a4:	push   r13
  4221a6:	push   r12
  4221a8:	push   rbx
  4221a9:	sub    rsp,0x10
  4221ad:	mov    rax,QWORD PTR fs:0x28
  4221b6:	mov    QWORD PTR [rsp+0x8],rax
  4221bb:	mov    rax,QWORD PTR [rdi+0x30]
  4221bf:	test   rax,rax
  4221c2:	je     422218 <isspace@plt+0x1e908>
  4221c4:	mov    r12,rdx
  4221c7:	mov    r14,rsi
  4221ca:	mov    r15,rdi
  4221cd:	mov    rdi,QWORD PTR [rax+0x18]
  4221d1:	call   41efa0 <isspace@plt+0x1b690>
  4221d6:	test   rax,rax
  4221d9:	je     422218 <isspace@plt+0x1e908>
  4221db:	mov    rbx,rax
  4221de:	xchg   ax,ax
  4221e0:	mov    rdi,rbx
  4221e3:	call   41af10 <isspace@plt+0x17600>
  4221e8:	mov    r13,rax
  4221eb:	mov    rdi,r15
  4221ee:	mov    rsi,rax
  4221f1:	mov    rdx,r14
  4221f4:	mov    rcx,r12
  4221f7:	call   422060 <isspace@plt+0x1e750>
  4221fc:	lea    rsi,[r12+r13*1]
  422200:	mov    rdi,rbx
  422203:	call   41e5e0 <isspace@plt+0x1acd0>
  422208:	mov    rdi,rbx
  42220b:	call   41f080 <isspace@plt+0x1b770>
  422210:	mov    rbx,rax
  422213:	test   rax,rax
  422216:	jne    4221e0 <isspace@plt+0x1e8d0>
  422218:	mov    rax,QWORD PTR fs:0x28
  422221:	cmp    rax,QWORD PTR [rsp+0x8]
  422226:	jne    422236 <isspace@plt+0x1e926>
  422228:	add    rsp,0x10
  42222c:	pop    rbx
  42222d:	pop    r12
  42222f:	pop    r13
  422231:	pop    r14
  422233:	pop    r15
  422235:	ret    
  422236:	call   403280 <__stack_chk_fail@plt>
  42223b:	nop    DWORD PTR [rax+rax*1+0x0]
  422240:	push   rax
  422241:	mov    rdx,rsi
  422244:	mov    rax,QWORD PTR fs:0x28
  42224d:	mov    QWORD PTR [rsp],rax
  422251:	mov    rdi,QWORD PTR [rdi+0xaa0]
  422258:	mov    rsi,QWORD PTR [rsi]
  42225b:	call   408870 <isspace@plt+0x4f60>
  422260:	mov    rcx,QWORD PTR fs:0x28
  422269:	cmp    rcx,QWORD PTR [rsp]
  42226d:	jne    422271 <isspace@plt+0x1e961>
  42226f:	pop    rcx
  422270:	ret    
  422271:	call   403280 <__stack_chk_fail@plt>
  422276:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422280:	push   rax
  422281:	mov    rax,QWORD PTR fs:0x28
  42228a:	mov    QWORD PTR [rsp],rax
  42228e:	mov    rdi,QWORD PTR [rdi+0x820]
  422295:	call   408870 <isspace@plt+0x4f60>
  42229a:	mov    rcx,QWORD PTR fs:0x28
  4222a3:	cmp    rcx,QWORD PTR [rsp]
  4222a7:	jne    4222ab <isspace@plt+0x1e99b>
  4222a9:	pop    rcx
  4222aa:	ret    
  4222ab:	call   403280 <__stack_chk_fail@plt>
  4222b0:	push   rax
  4222b1:	mov    rax,QWORD PTR fs:0x28
  4222ba:	mov    QWORD PTR [rsp],rax
  4222be:	mov    BYTE PTR [rdi+0x828],0x1
  4222c5:	mov    rax,QWORD PTR fs:0x28
  4222ce:	cmp    rax,QWORD PTR [rsp]
  4222d2:	jne    4222d6 <isspace@plt+0x1e9c6>
  4222d4:	pop    rax
  4222d5:	ret    
  4222d6:	call   403280 <__stack_chk_fail@plt>
  4222db:	nop    DWORD PTR [rax+rax*1+0x0]
  4222e0:	push   rbp
  4222e1:	push   r15
  4222e3:	push   r14
  4222e5:	push   r13
  4222e7:	push   r12
  4222e9:	push   rbx
  4222ea:	sub    rsp,0xe8
  4222f1:	mov    rax,QWORD PTR fs:0x28
  4222fa:	mov    QWORD PTR [rsp+0xe0],rax
  422302:	mov    rsi,QWORD PTR [rdi+0x30]
  422306:	test   rsi,rsi
  422309:	je     422d2a <isspace@plt+0x1f41a>
  42230f:	mov    r13,rdi
  422312:	mov    rax,QWORD PTR [rsi+0x10]
  422316:	mov    rcx,QWORD PTR [rsi+0x18]
  42231a:	mov    QWORD PTR [rsp+0x30],rcx
  42231f:	mov    QWORD PTR [rsp+0x40],rax
  422324:	mov    rbx,QWORD PTR [rax]
  422327:	mov    edi,DWORD PTR [rdi+0x910]
  42232d:	test   edi,edi
  42232f:	mov    eax,0x1
  422334:	cmovle edi,eax
  422337:	mov    rcx,QWORD PTR [r13+0x920]
  42233e:	lea    rdx,[rip+0x1ef3b]        # 441280 <isspace@plt+0x3d970>
  422345:	add    rdx,0x70
  422349:	mov    QWORD PTR [rsp+0x60],rdx
  42234e:	cmp    rcx,rdx
  422351:	cmove  edi,eax
  422354:	mov    QWORD PTR [rsp+0x38],rdi
  422359:	test   rcx,rcx
  42235c:	mov    QWORD PTR [rsp+0x20],rsi
  422361:	je     42236d <isspace@plt+0x1ea5d>
  422363:	cmp    QWORD PTR [r13+0x7d8],0x0
  42236b:	je     422377 <isspace@plt+0x1ea67>
  42236d:	mov    DWORD PTR [rsp+0x10],0x0
  422375:	jmp    422386 <isspace@plt+0x1ea76>
  422377:	cmp    QWORD PTR [rsi+0x2c8],0x0
  42237f:	sete   al
  422382:	mov    DWORD PTR [rsp+0x10],eax
  422386:	mov    rdi,QWORD PTR [rsp+0x30]
  42238b:	call   41ea70 <isspace@plt+0x1b160>
  422390:	mov    ecx,DWORD PTR [r13+0x918]
  422397:	test   cl,0x2
  42239a:	jne    4223cf <isspace@plt+0x1eabf>
  42239c:	mov    r14b,0x1
  42239f:	test   cl,0x1
  4223a2:	jne    4223d2 <isspace@plt+0x1eac2>
  4223a4:	mov    rcx,QWORD PTR [r13+0x928]
  4223ab:	test   rcx,rcx
  4223ae:	je     4223b6 <isspace@plt+0x1eaa6>
  4223b0:	test   BYTE PTR [rcx+0x38],0x1
  4223b4:	jne    4223d2 <isspace@plt+0x1eac2>
  4223b6:	mov    ecx,0x120
  4223bb:	add    rcx,QWORD PTR [rip+0x1fbfe]        # 441fc0 <isspace@plt+0x3e6b0>
  4223c2:	cmp    QWORD PTR [r13+0x9a0],rcx
  4223c9:	sete   r14b
  4223cd:	jmp    4223d2 <isspace@plt+0x1eac2>
  4223cf:	xor    r14d,r14d
  4223d2:	xor    esi,esi
  4223d4:	cmp    eax,0x1
  4223d7:	setg   sil
  4223db:	mov    r12,QWORD PTR [r13+0x940]
  4223e2:	test   r12,r12
  4223e5:	jne    422403 <isspace@plt+0x1eaf3>
  4223e7:	xor    ecx,ecx
  4223e9:	mov    rdx,QWORD PTR [rsp+0x40]
  4223ee:	cmp    BYTE PTR [rdx+0x18],0x0
  4223f2:	mov    edx,0x758
  4223f7:	cmove  rdx,rcx
  4223fb:	lea    r12,[rdx+r13*1]
  4223ff:	add    r12,0x40
  422403:	neg    rsi
  422406:	lea    rcx,[rip+0x1ee73]        # 441280 <isspace@plt+0x3d970>
  42240d:	add    rcx,0x30
  422411:	mov    QWORD PTR [rsp+0x48],rsi
  422416:	cmp    QWORD PTR [r13+0x920],rcx
  42241d:	mov    QWORD PTR [rsp+0x18],rbx
  422422:	jne    42244e <isspace@plt+0x1eb3e>
  422424:	mov    rsi,QWORD PTR [rsp+0x48]
  422429:	cmp    eax,0x2
  42242c:	jl     42244e <isspace@plt+0x1eb3e>
  42242e:	cmp    eax,0x1
  422431:	setg   bl
  422434:	mov    rdi,r13
  422437:	mov    rsi,r12
  42243a:	call   42a7e0 <isspace@plt+0x26ed0>
  42243f:	cmp    rax,0x1
  422443:	setne  al
  422446:	and    al,bl
  422448:	movzx  esi,al
  42244b:	neg    rsi
  42244e:	mov    QWORD PTR [rsp+0x78],rsi
  422453:	mov    rax,QWORD PTR [r13+0x9a0]
  42245a:	cmp    BYTE PTR [rax+0x58],0x0
  42245e:	je     4224ac <isspace@plt+0x1eb9c>
  422460:	cmp    QWORD PTR [r13+0x920],0x0
  422468:	je     4224ac <isspace@plt+0x1eb9c>
  42246a:	mov    rbx,QWORD PTR [rsp+0x20]
  42246f:	mov    r15d,r14d
  422472:	mov    r14,QWORD PTR [rbx]
  422475:	mov    rsi,QWORD PTR [rbx+0x18]
  422479:	lea    rbp,[rsp+0x90]
  422481:	mov    rdi,rbp
  422484:	call   41fc50 <isspace@plt+0x1c340>
  422489:	mov    rdi,rbx
  42248c:	mov    esi,0x1
  422491:	mov    rdx,rbp
  422494:	call   426630 <isspace@plt+0x22d20>
  422499:	mov    rdi,rbp
  42249c:	call   403b50 <isspace@plt+0x240>
  4224a1:	mov    rdi,r14
  4224a4:	mov    r14d,r15d
  4224a7:	call   426860 <isspace@plt+0x22f50>
  4224ac:	mov    rdi,QWORD PTR [rsp+0x30]
  4224b1:	call   41efa0 <isspace@plt+0x1b690>
  4224b6:	test   rax,rax
  4224b9:	je     422b5c <isspace@plt+0x1f24c>
  4224bf:	mov    rbx,rax
  4224c2:	lea    rax,[r13+0x950]
  4224c9:	mov    QWORD PTR [rsp+0x70],rax
  4224ce:	mov    rax,QWORD PTR [rsp+0x38]
  4224d3:	dec    eax
  4224d5:	mov    DWORD PTR [rsp+0x54],eax
  4224d9:	mov    eax,0xc0
  4224de:	add    rax,QWORD PTR [rip+0x1fadb]        # 441fc0 <isspace@plt+0x3e6b0>
  4224e5:	mov    QWORD PTR [rsp+0x68],rax
  4224ea:	mov    QWORD PTR [rsp+0x28],r12
  4224ef:	mov    DWORD PTR [rsp+0x14],r14d
  4224f4:	cmp    DWORD PTR [r13+0x9c0],0x0
  4224fc:	je     42252a <isspace@plt+0x1ec1a>
  4224fe:	jmp    422b5c <isspace@plt+0x1f24c>
  422503:	mov    rdi,QWORD PTR [rsp+0x8]
  422508:	call   41ece0 <isspace@plt+0x1b3d0>
  42250d:	mov    rbp,r15
  422510:	mov    rbx,rbp
  422513:	test   rbp,rbp
  422516:	je     422b5c <isspace@plt+0x1f24c>
  42251c:	cmp    DWORD PTR [r13+0x9c0],0x0
  422524:	jne    422b5c <isspace@plt+0x1f24c>
  42252a:	mov    rdi,rbx
  42252d:	call   41f080 <isspace@plt+0x1b770>
  422532:	mov    rbp,rax
  422535:	mov    rdi,rbx
  422538:	call   41af10 <isspace@plt+0x17600>
  42253d:	cmp    rax,0xffffffffffffffff
  422541:	je     4225e0 <isspace@plt+0x1ecd0>
  422547:	mov    r15,rax
  42254a:	mov    QWORD PTR [rsp+0x8],rbx
  42254f:	mov    rax,QWORD PTR [rsp+0x38]
  422554:	mov    DWORD PTR [rsp+0x90],eax
  42255b:	mov    QWORD PTR [rsp+0x98],r12
  422563:	mov    rcx,QWORD PTR [rsp+0x78]
  422568:	mov    rax,rcx
  42256b:	cmp    rcx,0xffffffffffffffff
  42256f:	jne    42257d <isspace@plt+0x1ec6d>
  422571:	mov    rdi,QWORD PTR [rsp+0x8]
  422576:	call   41eaa0 <isspace@plt+0x1b190>
  42257b:	cdqe   
  42257d:	mov    QWORD PTR [rsp+0xa0],rax
  422585:	call   417080 <isspace@plt+0x13770>
  42258a:	mov    QWORD PTR [rsp+0xa8],rax
  422592:	mov    QWORD PTR [rsp+0xb0],rdx
  42259a:	mov    QWORD PTR [rsp+0xb8],r15
  4225a2:	mov    QWORD PTR [rsp+0xc0],0xffffffffffffffff
  4225ae:	mov    BYTE PTR [rsp+0xc8],r14b
  4225b6:	mov    rax,QWORD PTR [rsp+0x70]
  4225bb:	mov    QWORD PTR [rsp+0xd0],rax
  4225c3:	mov    rax,QWORD PTR [r13+0x920]
  4225ca:	test   rax,rax
  4225cd:	mov    rbx,QWORD PTR [rsp+0x18]
  4225d2:	je     422600 <isspace@plt+0x1ecf0>
  4225d4:	mov    rax,QWORD PTR [rax+0x8]
  4225d8:	jmp    422602 <isspace@plt+0x1ecf2>
  4225da:	nop    WORD PTR [rax+rax*1+0x0]
  4225e0:	mov    rdi,rbx
  4225e3:	call   41ece0 <isspace@plt+0x1b3d0>
  4225e8:	test   al,al
  4225ea:	jne    422510 <isspace@plt+0x1ec00>
  4225f0:	mov    rdi,rbx
  4225f3:	xor    esi,esi
  4225f5:	call   41a7c0 <isspace@plt+0x16eb0>
  4225fa:	jmp    422510 <isspace@plt+0x1ec00>
  4225ff:	nop
  422600:	xor    eax,eax
  422602:	mov    QWORD PTR [rsp+0xd8],rax
  42260a:	mov    rax,QWORD PTR [rsp+0xa0]
  422612:	mov    QWORD PTR [rsp+0x48],rax
  422617:	mov    rax,QWORD PTR [r13+0x928]
  42261e:	test   rax,rax
  422621:	mov    QWORD PTR [rsp+0x58],rbp
  422626:	je     422730 <isspace@plt+0x1ee20>
  42262c:	xor    ebp,ebp
  42262e:	mov    r14,r15
  422631:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42263b:	nop    DWORD PTR [rax+rax*1+0x0]
  422640:	mov    rcx,QWORD PTR [rax+0x8]
  422644:	test   rcx,rcx
  422647:	je     422660 <isspace@plt+0x1ed50>
  422649:	mov    rdi,rbx
  42264c:	mov    rsi,r14
  42264f:	call   rcx
  422651:	jmp    4226a0 <isspace@plt+0x1ed90>
  422653:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42265d:	nop    DWORD PTR [rax]
  422660:	mov    rcx,QWORD PTR [rax]
  422663:	test   rcx,rcx
  422666:	je     422671 <isspace@plt+0x1ed61>
  422668:	mov    rdi,QWORD PTR [rsp+0x8]
  42266d:	call   rcx
  42266f:	jmp    4226a0 <isspace@plt+0x1ed90>
  422671:	mov    rcx,QWORD PTR [rax+0x10]
  422675:	test   rcx,rcx
  422678:	je     42268b <isspace@plt+0x1ed7b>
  42267a:	mov    rdi,r13
  42267d:	mov    rsi,QWORD PTR [rsp+0x40]
  422682:	mov    rdx,QWORD PTR [rsp+0x8]
  422687:	call   rcx
  422689:	jmp    4226a0 <isspace@plt+0x1ed90>
  42268b:	mov    rcx,QWORD PTR [rax+0x18]
  42268f:	test   rcx,rcx
  422692:	je     4226df <isspace@plt+0x1edcf>
  422694:	mov    rdi,r13
  422697:	mov    rsi,rbx
  42269a:	mov    rdx,r14
  42269d:	call   rcx
  42269f:	nop
  4226a0:	mov    r12,rax
  4226a3:	cmp    rax,0xffffffffffffffff
  4226a7:	je     42276f <isspace@plt+0x1ee5f>
  4226ad:	mov    rax,QWORD PTR [r13+0x928]
  4226b4:	mov    ecx,DWORD PTR [rax+0x38]
  4226b7:	cmp    r12,r14
  4226ba:	je     422780 <isspace@plt+0x1ee70>
  4226c0:	mov    edx,ecx
  4226c2:	and    edx,0x10
  4226c5:	jne    422780 <isspace@plt+0x1ee70>
  4226cb:	inc    ebp
  4226cd:	mov    r14,r12
  4226d0:	cmp    ebp,DWORD PTR [rsp+0x38]
  4226d4:	jl     422640 <isspace@plt+0x1ed30>
  4226da:	jmp    42278f <isspace@plt+0x1ee7f>
  4226df:	mov    rcx,QWORD PTR [rax+0x20]
  4226e3:	test   rcx,rcx
  4226e6:	je     4226f5 <isspace@plt+0x1ede5>
  4226e8:	mov    rdi,r13
  4226eb:	mov    rsi,QWORD PTR [rsp+0x30]
  4226f0:	jmp    42264f <isspace@plt+0x1ed3f>
  4226f5:	mov    rcx,QWORD PTR [rax+0x28]
  4226f9:	test   rcx,rcx
  4226fc:	je     422708 <isspace@plt+0x1edf8>
  4226fe:	mov    rdi,r13
  422701:	mov    rsi,QWORD PTR [rsp+0x20]
  422706:	jmp    42269a <isspace@plt+0x1ed8a>
  422708:	mov    r8,QWORD PTR [rax+0x30]
  42270c:	mov    r12,r14
  42270f:	test   r8,r8
  422712:	je     4226ad <isspace@plt+0x1ed9d>
  422714:	mov    rdx,QWORD PTR [rax+0x40]
  422718:	mov    rdi,r13
  42271b:	mov    rsi,QWORD PTR [rsp+0x20]
  422720:	mov    rcx,r14
  422723:	call   r8
  422726:	jmp    4226a0 <isspace@plt+0x1ed90>
  42272b:	nop    DWORD PTR [rax+rax*1+0x0]
  422730:	cmp    QWORD PTR [r13+0x930],0x0
  422738:	mov    rax,QWORD PTR [r13+0x9a0]
  42273f:	mov    al,BYTE PTR [rax+0x58]
  422742:	je     42282f <isspace@plt+0x1ef1f>
  422748:	test   al,al
  42274a:	je     4228b0 <isspace@plt+0x1efa0>
  422750:	mov    rdi,QWORD PTR [rsp+0x8]
  422755:	call   41f7a0 <isspace@plt+0x1be90>
  42275a:	mov    QWORD PTR [rsp+0xa8],rax
  422762:	mov    QWORD PTR [rsp+0xb0],rdx
  42276a:	jmp    4228c0 <isspace@plt+0x1efb0>
  42276f:	mov    rax,QWORD PTR [r13+0x928]
  422776:	mov    ecx,DWORD PTR [rax+0x38]
  422779:	mov    r12,0xffffffffffffffff
  422780:	test   cl,0x40
  422783:	jne    4227f9 <isspace@plt+0x1eee9>
  422785:	cmp    r12,0xffffffffffffffff
  422789:	je     422a35 <isspace@plt+0x1f125>
  42278f:	mov    rdi,r15
  422792:	mov    rsi,r12
  422795:	call   417250 <isspace@plt+0x13940>
  42279a:	mov    QWORD PTR [rsp+0xa8],rax
  4227a2:	mov    QWORD PTR [rsp+0xb0],rdx
  4227aa:	mov    QWORD PTR [rsp+0xc0],r12
  4227b2:	mov    rax,QWORD PTR [r13+0x928]
  4227b9:	mov    r14d,DWORD PTR [rsp+0x14]
  4227be:	cmp    QWORD PTR [r13+0x920],0x0
  4227c6:	mov    eax,DWORD PTR [rax+0x38]
  4227c9:	je     422815 <isspace@plt+0x1ef05>
  4227cb:	test   al,0x4
  4227cd:	je     42287b <isspace@plt+0x1ef6b>
  4227d3:	cmp    rdx,r15
  4227d6:	jbe    42287b <isspace@plt+0x1ef6b>
  4227dc:	mov    rdi,rbx
  4227df:	mov    rsi,rdx
  4227e2:	call   412d10 <isspace@plt+0xf400>
  4227e7:	mov    QWORD PTR [rsp+0xb0],rax
  4227ef:	mov    r12,QWORD PTR [rsp+0x28]
  4227f4:	jmp    422a90 <isspace@plt+0x1f180>
  4227f9:	mov    DWORD PTR [rsp+0x10],0x0
  422801:	mov    r12,QWORD PTR [rsp+0x28]
  422806:	mov    r14d,DWORD PTR [rsp+0x14]
  42280b:	mov    rbp,QWORD PTR [rsp+0x58]
  422810:	jmp    422510 <isspace@plt+0x1ec00>
  422815:	test   al,0x2
  422817:	jne    422a50 <isspace@plt+0x1f140>
  42281d:	mov    rdi,QWORD PTR [rsp+0x8]
  422822:	mov    rsi,r12
  422825:	call   41a7c0 <isspace@plt+0x16eb0>
  42282a:	jmp    422a5d <isspace@plt+0x1f14d>
  42282f:	test   al,al
  422831:	je     422a90 <isspace@plt+0x1f180>
  422837:	mov    rdi,QWORD PTR [rsp+0x8]
  42283c:	call   41f7a0 <isspace@plt+0x1be90>
  422841:	mov    QWORD PTR [rsp+0xa8],rax
  422849:	mov    QWORD PTR [rsp+0xb0],rdx
  422851:	lea    rdi,[rsp+0xa8]
  422859:	call   416fc0 <isspace@plt+0x136b0>
  42285e:	test   al,al
  422860:	jne    422a90 <isspace@plt+0x1f180>
  422866:	mov    QWORD PTR [rsp+0xb0],r15
  42286e:	mov    QWORD PTR [rsp+0xa8],r15
  422876:	jmp    422a90 <isspace@plt+0x1f180>
  42287b:	test   r14b,r14b
  42287e:	mov    r12,QWORD PTR [rsp+0x28]
  422883:	mov    rbx,QWORD PTR [rsp+0x8]
  422888:	je     422aca <isspace@plt+0x1f1ba>
  42288e:	test   al,0x8
  422890:	je     422a9a <isspace@plt+0x1f18a>
  422896:	mov    rdi,QWORD PTR [rsp+0x18]
  42289b:	mov    rsi,rdx
  42289e:	call   412d10 <isspace@plt+0xf400>
  4228a3:	mov    QWORD PTR [rsp+0xb0],rax
  4228ab:	jmp    422a9a <isspace@plt+0x1f18a>
  4228b0:	mov    QWORD PTR [rsp+0xb0],r15
  4228b8:	mov    QWORD PTR [rsp+0xa8],r15
  4228c0:	xor    ebp,ebp
  4228c2:	jmp    4228ea <isspace@plt+0x1efda>
  4228c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4228ce:	xchg   ax,ax
  4228d0:	and    eax,0x1
  4228d3:	add    rax,QWORD PTR [rsp+0xb0]
  4228db:	mov    r15,rax
  4228de:	inc    ebp
  4228e0:	cmp    ebp,DWORD PTR [rsp+0x38]
  4228e4:	jge    422a90 <isspace@plt+0x1f180>
  4228ea:	call   417080 <isspace@plt+0x13770>
  4228ef:	mov    QWORD PTR [rsp+0x80],rax
  4228f7:	mov    QWORD PTR [rsp+0x88],rdx
  4228ff:	mov    rax,QWORD PTR [r13+0x930]
  422906:	mov    rcx,QWORD PTR [rax]
  422909:	test   rcx,rcx
  42290c:	je     422920 <isspace@plt+0x1f010>
  42290e:	mov    rdi,rbx
  422911:	mov    rsi,r15
  422914:	call   rcx
  422916:	jmp    422950 <isspace@plt+0x1f040>
  422918:	nop    DWORD PTR [rax+rax*1+0x0]
  422920:	mov    rcx,QWORD PTR [rax+0x8]
  422924:	test   rcx,rcx
  422927:	je     422936 <isspace@plt+0x1f026>
  422929:	mov    rdi,r13
  42292c:	mov    rsi,rbx
  42292f:	mov    rdx,r15
  422932:	call   rcx
  422934:	jmp    422950 <isspace@plt+0x1f040>
  422936:	mov    rbx,QWORD PTR [rax+0x10]
  42293a:	test   rbx,rbx
  42293d:	je     422960 <isspace@plt+0x1f050>
  42293f:	mov    rdx,QWORD PTR [rax+0x20]
  422943:	mov    rdi,r13
  422946:	mov    rsi,QWORD PTR [rsp+0x20]
  42294b:	mov    rcx,r15
  42294e:	call   rbx
  422950:	mov    QWORD PTR [rsp+0x80],rax
  422958:	mov    QWORD PTR [rsp+0x88],rdx
  422960:	lea    rdi,[rsp+0x80]
  422968:	call   416fc0 <isspace@plt+0x136b0>
  42296d:	test   al,al
  42296f:	je     422a90 <isspace@plt+0x1f180>
  422975:	mov    rax,QWORD PTR [r13+0x930]
  42297c:	mov    eax,DWORD PTR [rax+0x18]
  42297f:	test   al,0x2
  422981:	mov    rbx,QWORD PTR [rsp+0x18]
  422986:	je     4229a2 <isspace@plt+0x1f092>
  422988:	vmovdqa xmm0,XMMWORD PTR [rip+0xe310]        # 430ca0 <isspace@plt+0x2d390>
  422990:	vpaddq xmm0,xmm0,XMMWORD PTR [rsp+0x80]
  422999:	vmovdqa XMMWORD PTR [rsp+0x80],xmm0
  4229a2:	mov    rcx,QWORD PTR [r13+0x9a0]
  4229a9:	cmp    BYTE PTR [rcx+0x58],0x0
  4229ad:	jne    4229b8 <isspace@plt+0x1f0a8>
  4229af:	test   ebp,ebp
  4229b1:	je     422a14 <isspace@plt+0x1f104>
  4229b3:	and    eax,0x4
  4229b6:	jne    422a14 <isspace@plt+0x1f104>
  4229b8:	lea    rdi,[rsp+0xa8]
  4229c0:	lea    rsi,[rsp+0x80]
  4229c8:	call   4170c0 <isspace@plt+0x137b0>
  4229cd:	mov    QWORD PTR [rsp+0xa8],rax
  4229d5:	mov    QWORD PTR [rsp+0xb0],rdx
  4229dd:	cmp    ebp,DWORD PTR [rsp+0x54]
  4229e1:	jge    4228de <isspace@plt+0x1efce>
  4229e7:	mov    rax,QWORD PTR [r13+0x930]
  4229ee:	mov    eax,DWORD PTR [rax+0x18]
  4229f1:	test   al,0x10
  4229f3:	je     4228d0 <isspace@plt+0x1efc0>
  4229f9:	mov    r15,QWORD PTR [rsp+0xa8]
  422a01:	test   r15,r15
  422a04:	setne  cl
  422a07:	and    cl,al
  422a09:	movzx  eax,cl
  422a0c:	sub    r15,rax
  422a0f:	jmp    4228de <isspace@plt+0x1efce>
  422a14:	vmovdqa xmm0,XMMWORD PTR [rsp+0x80]
  422a1d:	lea    rax,[rsp+0xa8]
  422a25:	vmovdqu XMMWORD PTR [rax],xmm0
  422a29:	cmp    ebp,DWORD PTR [rsp+0x54]
  422a2d:	jge    4228de <isspace@plt+0x1efce>
  422a33:	jmp    4229e7 <isspace@plt+0x1f0d7>
  422a35:	mov    QWORD PTR [rsp+0xa8],r15
  422a3d:	mov    QWORD PTR [rsp+0xb0],r15
  422a45:	mov    rdx,r15
  422a48:	mov    r12,r15
  422a4b:	jmp    4227b9 <isspace@plt+0x1eea9>
  422a50:	mov    rdi,QWORD PTR [rsp+0x8]
  422a55:	mov    rsi,r12
  422a58:	call   41e5e0 <isspace@plt+0x1acd0>
  422a5d:	mov    rax,QWORD PTR [r13+0x9a0]
  422a64:	cmp    BYTE PTR [rax+0x58],0x0
  422a68:	mov    r12,QWORD PTR [rsp+0x28]
  422a6d:	je     422a90 <isspace@plt+0x1f180>
  422a6f:	mov    rdi,QWORD PTR [rsp+0x8]
  422a74:	call   41f7a0 <isspace@plt+0x1be90>
  422a79:	mov    QWORD PTR [rsp+0xa8],rax
  422a81:	mov    QWORD PTR [rsp+0xb0],rdx
  422a89:	nop    DWORD PTR [rax+0x0]
  422a90:	test   r14b,r14b
  422a93:	mov    rbx,QWORD PTR [rsp+0x8]
  422a98:	je     422aca <isspace@plt+0x1f1ba>
  422a9a:	mov    rax,QWORD PTR [rsp+0x68]
  422a9f:	cmp    QWORD PTR [r13+0x9a0],rax
  422aa6:	je     422aca <isspace@plt+0x1f1ba>
  422aa8:	mov    rdi,QWORD PTR [rsp+0x18]
  422aad:	lea    rsi,[rsp+0xa8]
  422ab5:	call   416ec0 <isspace@plt+0x135b0>
  422aba:	mov    QWORD PTR [rsp+0xa8],rax
  422ac2:	mov    QWORD PTR [rsp+0xb0],rdx
  422aca:	mov    rax,QWORD PTR [r13+0x9a0]
  422ad1:	cmp    BYTE PTR [rax+0x58],0x0
  422ad5:	mov    rbp,QWORD PTR [rsp+0x58]
  422ada:	je     422af9 <isspace@plt+0x1f1e9>
  422adc:	mov    rdi,rbx
  422adf:	lea    rsi,[rsp+0xa8]
  422ae7:	call   41f850 <isspace@plt+0x1bf40>
  422aec:	mov    rdi,rbx
  422aef:	mov    esi,0x1
  422af4:	call   41f570 <isspace@plt+0x1bc60>
  422af9:	mov    rcx,QWORD PTR [r13+0x920]
  422b00:	test   rcx,rcx
  422b03:	je     422510 <isspace@plt+0x1ec00>
  422b09:	mov    r15,rbp
  422b0c:	mov    rdi,r13
  422b0f:	mov    rbx,QWORD PTR [rsp+0x18]
  422b14:	mov    rsi,rbx
  422b17:	lea    rdx,[rsp+0x90]
  422b1f:	call   QWORD PTR [rcx]
  422b21:	cmp    rax,0xffffffffffffffff
  422b25:	je     422503 <isspace@plt+0x1ebf3>
  422b2b:	mov    rbp,rax
  422b2e:	mov    rdi,rbx
  422b31:	call   410890 <isspace@plt+0xcf80>
  422b36:	cmp    rbp,rax
  422b39:	ja     42250d <isspace@plt+0x1ebfd>
  422b3f:	mov    rbx,QWORD PTR [rsp+0x8]
  422b44:	mov    rdi,rbx
  422b47:	call   41ef20 <isspace@plt+0x1b610>
  422b4c:	mov    rdi,rbx
  422b4f:	mov    rsi,rbp
  422b52:	call   41a7c0 <isspace@plt+0x16eb0>
  422b57:	jmp    42250d <isspace@plt+0x1ebfd>
  422b5c:	mov    rdi,QWORD PTR [rsp+0x30]
  422b61:	call   41fd00 <isspace@plt+0x1c3f0>
  422b66:	mov    rax,QWORD PTR [r13+0x928]
  422b6d:	test   rax,rax
  422b70:	je     422b80 <isspace@plt+0x1f270>
  422b72:	test   BYTE PTR [rax+0x38],0x20
  422b76:	je     422b80 <isspace@plt+0x1f270>
  422b78:	mov    rdi,r13
  422b7b:	call   426860 <isspace@plt+0x22f50>
  422b80:	mov    rax,QWORD PTR [r13+0x920]
  422b87:	test   rax,rax
  422b8a:	mov    rsi,QWORD PTR [rsp+0x48]
  422b8f:	je     422cc8 <isspace@plt+0x1f3b8>
  422b95:	vmovq  xmm0,rax
  422b9a:	vpbroadcastq ymm0,xmm0
  422b9f:	lea    rax,[rip+0x1e6da]        # 441280 <isspace@plt+0x3d970>
  422ba6:	mov    rcx,rax
  422ba9:	vmovq  xmm1,rax
  422bae:	lea    rax,[rax+0x20]
  422bb2:	vmovq  xmm2,rax
  422bb7:	vpunpcklqdq xmm1,xmm2,xmm1
  422bbb:	lea    rbp,[rcx+0x10]
  422bbf:	vmovq  xmm2,rbp
  422bc4:	sub    rcx,0xffffffffffffff80
  422bc8:	vmovq  xmm3,rcx
  422bcd:	vpunpcklqdq xmm2,xmm3,xmm2
  422bd1:	vinserti128 ymm1,ymm2,xmm1,0x1
  422bd7:	vpcmpeqq ymm0,ymm0,ymm1
  422bdc:	vmovmskpd eax,ymm0
  422be0:	test   al,al
  422be2:	je     422bf2 <isspace@plt+0x1f2e2>
  422be4:	inc    rsi
  422be7:	mov    rdi,r12
  422bea:	vzeroupper 
  422bed:	call   42a450 <isspace@plt+0x26b40>
  422bf2:	mov    rcx,QWORD PTR [r13+0x9a0]
  422bf9:	mov    al,BYTE PTR [rcx+0x58]
  422bfc:	test   al,al
  422bfe:	je     422c27 <isspace@plt+0x1f317>
  422c00:	cmp    QWORD PTR [r13+0x928],0x0
  422c08:	jne    422c27 <isspace@plt+0x1f317>
  422c0a:	cmp    QWORD PTR [r13+0x930],0x0
  422c12:	jne    422c27 <isspace@plt+0x1f317>
  422c14:	mov    edx,0x10e0
  422c19:	add    rdx,QWORD PTR [rip+0x1f3d0]        # 441ff0 <isspace@plt+0x3e6e0>
  422c20:	mov    QWORD PTR [r13+0x928],rdx
  422c27:	mov    rdx,QWORD PTR [r13+0x920]
  422c2e:	cmp    rdx,rbp
  422c31:	je     422c59 <isspace@plt+0x1f349>
  422c33:	cmp    rdx,QWORD PTR [rsp+0x60]
  422c38:	je     422c63 <isspace@plt+0x1f353>
  422c3a:	lea    rdx,[rip+0x1f49f]        # 4420e0 <isspace@plt+0x3e7d0>
  422c41:	add    rdx,0x60
  422c45:	cmp    rcx,rdx
  422c48:	je     422d52 <isspace@plt+0x1f442>
  422c4e:	test   al,al
  422c50:	je     422c75 <isspace@plt+0x1f365>
  422c52:	mov    rdi,r13
  422c55:	xor    esi,esi
  422c57:	jmp    422c6d <isspace@plt+0x1f35d>
  422c59:	mov    rdi,r13
  422c5c:	mov    esi,0x4
  422c61:	jmp    422c6d <isspace@plt+0x1f35d>
  422c63:	mov    esi,DWORD PTR [r13+0x914]
  422c6a:	mov    rdi,r13
  422c6d:	vzeroupper 
  422c70:	call   426fe0 <isspace@plt+0x236d0>
  422c75:	mov    rax,QWORD PTR [r13+0x9a0]
  422c7c:	cmp    rax,QWORD PTR [rip+0x1f33d]        # 441fc0 <isspace@plt+0x3e6b0>
  422c83:	jne    422c9f <isspace@plt+0x1f38f>
  422c85:	cmp    QWORD PTR [r13+0x7d0],0x0
  422c8d:	jne    422c9f <isspace@plt+0x1f38f>
  422c8f:	mov    rax,QWORD PTR [rsp+0x40]
  422c94:	mov    rdi,QWORD PTR [rax]
  422c97:	vzeroupper 
  422c9a:	call   40f6a0 <isspace@plt+0xbd90>
  422c9f:	mov    rbp,QWORD PTR [r13+0x28]
  422ca3:	test   rbp,rbp
  422ca6:	je     422cc8 <isspace@plt+0x1f3b8>
  422ca8:	nop    DWORD PTR [rax+rax*1+0x0]
  422cb0:	mov    rdi,QWORD PTR [rbp+0x18]
  422cb4:	vzeroupper 
  422cb7:	call   419f00 <isspace@plt+0x165f0>
  422cbc:	mov    rbp,QWORD PTR [rbp+0x2e0]
  422cc3:	test   rbp,rbp
  422cc6:	jne    422cb0 <isspace@plt+0x1f3a0>
  422cc8:	lea    rax,[r13+0x910]
  422ccf:	test   BYTE PTR [rsp+0x10],0x1
  422cd4:	je     422d0f <isspace@plt+0x1f3ff>
  422cd6:	lea    rcx,[r13+0x958]
  422cdd:	cmp    QWORD PTR [r13+0x938],0x0
  422ce5:	jne    422cf5 <isspace@plt+0x1f3e5>
  422ce7:	mov    rdx,QWORD PTR [r13+0x7d8]
  422cee:	mov    QWORD PTR [r13+0x938],rdx
  422cf5:	mov    rdx,QWORD PTR [rax+0x40]
  422cf9:	mov    QWORD PTR [rcx+0x40],rdx
  422cfd:	vmovdqu ymm0,YMMWORD PTR [rax]
  422d01:	vmovdqu ymm1,YMMWORD PTR [rax+0x20]
  422d06:	vmovdqu YMMWORD PTR [rcx+0x20],ymm1
  422d0b:	vmovdqu YMMWORD PTR [rcx],ymm0
  422d0f:	vpxor  xmm0,xmm0,xmm0
  422d13:	vmovdqu YMMWORD PTR [rax+0x20],ymm0
  422d18:	vmovdqu YMMWORD PTR [rax],ymm0
  422d1c:	mov    QWORD PTR [rax+0x40],0x0
  422d24:	mov    DWORD PTR [rax],0xffffffff
  422d2a:	mov    rax,QWORD PTR fs:0x28
  422d33:	cmp    rax,QWORD PTR [rsp+0xe0]
  422d3b:	jne    422d69 <isspace@plt+0x1f459>
  422d3d:	add    rsp,0xe8
  422d44:	pop    rbx
  422d45:	pop    r12
  422d47:	pop    r13
  422d49:	pop    r14
  422d4b:	pop    r15
  422d4d:	pop    rbp
  422d4e:	vzeroupper 
  422d51:	ret    
  422d52:	mov    rsi,QWORD PTR [r13+0x9a8]
  422d59:	mov    rdi,r13
  422d5c:	vzeroupper 
  422d5f:	call   426f50 <isspace@plt+0x23640>
  422d64:	jmp    422c75 <isspace@plt+0x1f365>
  422d69:	vzeroupper 
  422d6c:	call   403280 <__stack_chk_fail@plt>
  422d71:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422d7b:	nop    DWORD PTR [rax+rax*1+0x0]
  422d80:	push   rax
  422d81:	mov    rax,QWORD PTR fs:0x28
  422d8a:	mov    QWORD PTR [rsp],rax
  422d8e:	cmp    QWORD PTR [rdi+0x7d0],0x0
  422d96:	je     422da9 <isspace@plt+0x1f499>
  422d98:	mov    rax,QWORD PTR fs:0x28
  422da1:	cmp    rax,QWORD PTR [rsp]
  422da5:	jne    422dc2 <isspace@plt+0x1f4b2>
  422da7:	pop    rax
  422da8:	ret    
  422da9:	mov    rdi,QWORD PTR [rsi]
  422dac:	call   40f6a0 <isspace@plt+0xbd90>
  422db1:	mov    rax,QWORD PTR fs:0x28
  422dba:	cmp    rax,QWORD PTR [rsp]
  422dbe:	jne    422dc2 <isspace@plt+0x1f4b2>
  422dc0:	pop    rax
  422dc1:	ret    
  422dc2:	call   403280 <__stack_chk_fail@plt>
  422dc7:	nop    WORD PTR [rax+rax*1+0x0]
  422dd0:	push   rax
  422dd1:	mov    rax,QWORD PTR fs:0x28
  422dda:	mov    QWORD PTR [rsp],rax
  422dde:	vxorps xmm0,xmm0,xmm0
  422de2:	vmovups YMMWORD PTR [rdi+0x910],ymm0
  422dea:	vmovups YMMWORD PTR [rdi+0x930],ymm0
  422df2:	mov    QWORD PTR [rdi+0x950],0x0
  422dfd:	mov    DWORD PTR [rdi+0x910],0xffffffff
  422e07:	mov    rax,QWORD PTR fs:0x28
  422e10:	cmp    rax,QWORD PTR [rsp]
  422e14:	jne    422e1b <isspace@plt+0x1f50b>
  422e16:	pop    rax
  422e17:	vzeroupper 
  422e1a:	ret    
  422e1b:	vzeroupper 
  422e1e:	call   403280 <__stack_chk_fail@plt>
  422e23:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422e2d:	nop    DWORD PTR [rax]
  422e30:	sub    rsp,0xd8
  422e37:	test   al,al
  422e39:	je     422e7a <isspace@plt+0x1f56a>
  422e3b:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  422e41:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  422e47:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  422e4d:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  422e56:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  422e5f:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  422e68:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  422e71:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  422e7a:	mov    QWORD PTR [rsp+0x30],rdx
  422e7f:	mov    QWORD PTR [rsp+0x38],rcx
  422e84:	mov    QWORD PTR [rsp+0x40],r8
  422e89:	mov    QWORD PTR [rsp+0x48],r9
  422e8e:	lea    rax,[rsp+0x20]
  422e93:	mov    QWORD PTR [rsp+0x10],rax
  422e98:	lea    rax,[rsp+0xe0]
  422ea0:	mov    QWORD PTR [rsp+0x8],rax
  422ea5:	movabs rax,0x3000000010
  422eaf:	mov    QWORD PTR [rsp],rax
  422eb3:	mov    rdi,QWORD PTR [rdi]
  422eb6:	mov    rdx,rsp
  422eb9:	call   QWORD PTR [rdi+0x38]
  422ebc:	nop    DWORD PTR [rax+0x0]
  422ec0:	push   r15
  422ec2:	push   r14
  422ec4:	push   r13
  422ec6:	push   r12
  422ec8:	push   rbx
  422ec9:	sub    rsp,0x70
  422ecd:	mov    rax,QWORD PTR fs:0x28
  422ed6:	mov    QWORD PTR [rsp+0x68],rax
  422edb:	test   rsi,rsi
  422ede:	je     422f2a <isspace@plt+0x1f61a>
  422ee0:	mov    r14,rsi
  422ee3:	cmp    BYTE PTR [rsi],0x0
  422ee6:	je     422f2a <isspace@plt+0x1f61a>
  422ee8:	mov    r15,rdi
  422eeb:	mov    rdi,QWORD PTR [rdi]
  422eee:	call   QWORD PTR [rdi+0x90]
  422ef4:	cmp    BYTE PTR [r14],0x3c
  422ef8:	jne    422f31 <isspace@plt+0x1f621>
  422efa:	cmp    BYTE PTR [r14+0x1],0x0
  422eff:	je     422f31 <isspace@plt+0x1f621>
  422f01:	lea    rsi,[r14+0x1]
  422f05:	mov    rdx,rsp
  422f08:	mov    rdi,rax
  422f0b:	mov    ecx,0xc
  422f10:	call   403440 <termkey_strpkey@plt>
  422f15:	test   rax,rax
  422f18:	je     422f31 <isspace@plt+0x1f621>
  422f1a:	mov    rbx,rax
  422f1d:	cmp    BYTE PTR [rax],0x3e
  422f20:	jne    422f31 <isspace@plt+0x1f621>
  422f22:	inc    rbx
  422f25:	jmp    422fdd <isspace@plt+0x1f6cd>
  422f2a:	xor    ebx,ebx
  422f2c:	jmp    422fdd <isspace@plt+0x1f6cd>
  422f31:	lea    rsi,[rip+0xddfc]        # 430d34 <isspace@plt+0x2d424>
  422f38:	mov    edx,0x5
  422f3d:	mov    rdi,r14
  422f40:	call   403160 <strncmp@plt>
  422f45:	test   eax,eax
  422f47:	jne    422fb3 <isspace@plt+0x1f6a3>
  422f49:	lea    rsi,[r14+0x1]
  422f4d:	lea    rbx,[r14+0x2]
  422f51:	xor    r12d,r12d
  422f54:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422f5e:	xchg   ax,ax
  422f60:	movzx  eax,BYTE PTR [rbx-0x1]
  422f64:	test   al,al
  422f66:	je     422f74 <isspace@plt+0x1f664>
  422f68:	cmp    al,0x3e
  422f6a:	je     422f74 <isspace@plt+0x1f664>
  422f6c:	inc    rbx
  422f6f:	inc    r12
  422f72:	jmp    422f60 <isspace@plt+0x1f650>
  422f74:	lea    rcx,[r12+0x1]
  422f79:	cmp    rcx,0x2
  422f7d:	jb     422fb3 <isspace@plt+0x1f6a3>
  422f7f:	cmp    rcx,0x41
  422f83:	ja     422fb3 <isspace@plt+0x1f6a3>
  422f85:	cmp    al,0x3e
  422f87:	jne    422fb3 <isspace@plt+0x1f6a3>
  422f89:	lea    r13,[rsp+0x20]
  422f8e:	mov    rdi,r13
  422f91:	mov    rdx,r12
  422f94:	call   4034d0 <memcpy@plt>
  422f99:	mov    BYTE PTR [rsp+r12*1+0x20],0x0
  422f9f:	mov    rdi,QWORD PTR [r15+0xaa0]
  422fa6:	mov    rsi,r13
  422fa9:	call   408500 <isspace@plt+0x4bf0>
  422fae:	test   rax,rax
  422fb1:	jne    422fdd <isspace@plt+0x1f6cd>
  422fb3:	mov    al,BYTE PTR [r14]
  422fb6:	and    al,0xc0
  422fb8:	lea    rbx,[r14+0x1]
  422fbc:	cmp    al,0x80
  422fbe:	cmove  rbx,r14
  422fc2:	dec    rbx
  422fc5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422fcf:	nop
  422fd0:	movzx  eax,BYTE PTR [rbx+0x1]
  422fd4:	inc    rbx
  422fd7:	and    al,0xc0
  422fd9:	cmp    al,0x80
  422fdb:	je     422fd0 <isspace@plt+0x1f6c0>
  422fdd:	mov    rax,QWORD PTR fs:0x28
  422fe6:	cmp    rax,QWORD PTR [rsp+0x68]
  422feb:	jne    422ffe <isspace@plt+0x1f6ee>
  422fed:	mov    rax,rbx
  422ff0:	add    rsp,0x70
  422ff4:	pop    rbx
  422ff5:	pop    r12
  422ff7:	pop    r13
  422ff9:	pop    r14
  422ffb:	pop    r15
  422ffd:	ret    
  422ffe:	call   403280 <__stack_chk_fail@plt>
  423003:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42300d:	nop    DWORD PTR [rax]
  423010:	push   r15
  423012:	push   r14
  423014:	push   rbx
  423015:	sub    rsp,0x60
  423019:	mov    rbx,rsi
  42301c:	mov    rax,QWORD PTR fs:0x28
  423025:	mov    QWORD PTR [rsp+0x58],rax
  42302a:	mov    rdi,QWORD PTR [rdi]
  42302d:	call   QWORD PTR [rdi+0x90]
  423033:	mov    r15,rax
  423036:	mov    al,BYTE PTR [rbx]
  423038:	mov    r14,0xffffffffffffffff
  42303f:	test   al,al
  423041:	je     42310b <isspace@plt+0x1f7fb>
  423047:	cmp    al,0x3c
  423049:	jne    423073 <isspace@plt+0x1f763>
  42304b:	cmp    BYTE PTR [rbx+0x1],0x0
  42304f:	je     4230ff <isspace@plt+0x1f7ef>
  423055:	lea    rsi,[rbx+0x1]
  423059:	mov    rdx,rsp
  42305c:	mov    rdi,r15
  42305f:	mov    ecx,0xc
  423064:	call   403440 <termkey_strpkey@plt>
  423069:	test   rax,rax
  42306c:	je     423073 <isspace@plt+0x1f763>
  42306e:	cmp    BYTE PTR [rax],0x3e
  423071:	je     42308f <isspace@plt+0x1f77f>
  423073:	mov    rdx,rsp
  423076:	mov    rdi,r15
  423079:	mov    rsi,rbx
  42307c:	mov    ecx,0xc
  423081:	call   403440 <termkey_strpkey@plt>
  423086:	test   rax,rax
  423089:	je     42310b <isspace@plt+0x1f7fb>
  42308f:	mov    ecx,DWORD PTR [rsp]
  423092:	mov    rax,QWORD PTR [rsp+0x8]
  423097:	test   ecx,ecx
  423099:	je     4230e7 <isspace@plt+0x1f7d7>
  42309b:	cmp    ecx,0x2
  42309e:	jne    42310b <isspace@plt+0x1f7fb>
  4230a0:	vmovups ymm0,YMMWORD PTR [rip+0xdde4]        # 430e8c <isspace@plt+0x2d57c>
  4230a8:	vmovups YMMWORD PTR [rsp+0x2c],ymm0
  4230ae:	vmovups ymm0,YMMWORD PTR [rip+0xddca]        # 430e80 <isspace@plt+0x2d570>
  4230b6:	vmovups YMMWORD PTR [rsp+0x20],ymm0
  4230bc:	lea    rcx,[rsp+0x28]
  4230c1:	mov    edx,0x3
  4230c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4230d0:	cmp    edx,eax
  4230d2:	je     423107 <isspace@plt+0x1f7f7>
  4230d4:	mov    edx,DWORD PTR [rcx]
  4230d6:	add    rcx,0x8
  4230da:	test   edx,edx
  4230dc:	jne    4230d0 <isspace@plt+0x1f7c0>
  4230de:	mov    r14,0xffffffffffffffff
  4230e5:	jmp    42310b <isspace@plt+0x1f7fb>
  4230e7:	cmp    rax,0xffffffffffffffff
  4230eb:	je     42310b <isspace@plt+0x1f7fb>
  4230ed:	mov    r14d,eax
  4230f0:	and    r14d,0x1f
  4230f4:	cmp    DWORD PTR [rsp+0x10],0x4
  4230f9:	cmovne r14,rax
  4230fd:	jmp    42310b <isspace@plt+0x1f7fb>
  4230ff:	mov    r14d,0x3c
  423105:	jmp    42310b <isspace@plt+0x1f7fb>
  423107:	movsxd r14,DWORD PTR [rcx-0x4]
  42310b:	mov    rax,QWORD PTR fs:0x28
  423114:	cmp    rax,QWORD PTR [rsp+0x58]
  423119:	jne    42312b <isspace@plt+0x1f81b>
  42311b:	mov    rax,r14
  42311e:	add    rsp,0x60
  423122:	pop    rbx
  423123:	pop    r14
  423125:	pop    r15
  423127:	vzeroupper 
  42312a:	ret    
  42312b:	vzeroupper 
  42312e:	call   403280 <__stack_chk_fail@plt>
  423133:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42313d:	nop    DWORD PTR [rax]
  423140:	push   rbx
  423141:	sub    rsp,0x10
  423145:	mov    rbx,rdx
  423148:	mov    rax,QWORD PTR fs:0x28
  423151:	mov    QWORD PTR [rsp+0x8],rax
  423156:	call   423010 <isspace@plt+0x1f700>
  42315b:	mov    DWORD PTR [rsp+0x4],eax
  42315f:	cmp    eax,0xffffffff
  423162:	je     42317b <isspace@plt+0x1f86b>
  423164:	lea    rsi,[rsp+0x4]
  423169:	mov    rdi,rbx
  42316c:	call   404ed0 <isspace@plt+0x15c0>
  423171:	cdqe   
  423173:	mov    BYTE PTR [rbx+rax*1],0x0
  423177:	mov    al,0x1
  423179:	jmp    42317d <isspace@plt+0x1f86d>
  42317b:	xor    eax,eax
  42317d:	mov    rcx,QWORD PTR fs:0x28
  423186:	cmp    rcx,QWORD PTR [rsp+0x8]
  42318b:	jne    423193 <isspace@plt+0x1f883>
  42318d:	add    rsp,0x10
  423191:	pop    rbx
  423192:	ret    
  423193:	call   403280 <__stack_chk_fail@plt>
  423198:	nop    DWORD PTR [rax+rax*1+0x0]
  4231a0:	push   rbp
  4231a1:	push   r15
  4231a3:	push   r14
  4231a5:	push   r12
  4231a7:	push   rbx
  4231a8:	sub    rsp,0x20
  4231ac:	mov    rax,QWORD PTR fs:0x28
  4231b5:	mov    QWORD PTR [rsp+0x18],rax
  4231ba:	test   rsi,rsi
  4231bd:	je     42325c <isspace@plt+0x1f94c>
  4231c3:	mov    rbx,rsi
  4231c6:	mov    r15,rdi
  4231c9:	mov    r14,rsp
  4231cc:	mov    rdi,r14
  4231cf:	call   404230 <isspace@plt+0x920>
  4231d4:	mov    rdi,r14
  4231d7:	mov    rsi,rbx
  4231da:	call   404940 <isspace@plt+0x1030>
  4231df:	test   al,al
  4231e1:	je     42325c <isspace@plt+0x1f94c>
  4231e3:	lea    rdi,[r15+0x8f0]
  4231ea:	call   404d20 <isspace@plt+0x1410>
  4231ef:	mov    r12,QWORD PTR [rsp]
  4231f3:	test   r12,r12
  4231f6:	je     423254 <isspace@plt+0x1f944>
  4231f8:	mov    r14,rax
  4231fb:	mov    rdi,r15
  4231fe:	mov    rsi,r12
  423201:	call   422ec0 <isspace@plt+0x1f5b0>
  423206:	test   rax,rax
  423209:	je     423241 <isspace@plt+0x1f931>
  42320b:	nop    DWORD PTR [rax+rax*1+0x0]
  423210:	mov    rbx,rax
  423213:	movzx  ebp,BYTE PTR [rax]
  423216:	mov    BYTE PTR [rax],0x0
  423219:	mov    rdi,r15
  42321c:	mov    rsi,r12
  42321f:	mov    rdx,r14
  423222:	xor    ecx,ecx
  423224:	call   4238c0 <isspace@plt+0x1ffb0>
  423229:	mov    BYTE PTR [rbx],bpl
  42322c:	mov    rdi,r15
  42322f:	mov    rsi,rbx
  423232:	call   422ec0 <isspace@plt+0x1f5b0>
  423237:	mov    r12,rbx
  42323a:	test   rax,rax
  42323d:	jne    423210 <isspace@plt+0x1f900>
  42323f:	jmp    423244 <isspace@plt+0x1f934>
  423241:	mov    rbx,r12
  423244:	mov    rdi,r15
  423247:	mov    rsi,rbx
  42324a:	mov    rdx,r14
  42324d:	xor    ecx,ecx
  42324f:	call   4238c0 <isspace@plt+0x1ffb0>
  423254:	mov    rdi,rsp
  423257:	call   404540 <isspace@plt+0xc30>
  42325c:	mov    rax,QWORD PTR fs:0x28
  423265:	cmp    rax,QWORD PTR [rsp+0x18]
  42326a:	jne    423279 <isspace@plt+0x1f969>
  42326c:	add    rsp,0x20
  423270:	pop    rbx
  423271:	pop    r12
  423273:	pop    r14
  423275:	pop    r15
  423277:	pop    rbp
  423278:	ret    
  423279:	call   403280 <__stack_chk_fail@plt>
  42327e:	xchg   ax,ax
  423280:	push   r15
  423282:	push   r14
  423284:	push   rbx
  423285:	sub    rsp,0x10
  423289:	mov    rax,QWORD PTR fs:0x28
  423292:	mov    QWORD PTR [rsp+0x8],rax
  423297:	xor    eax,eax
  423299:	dec    esi
  42329b:	cmp    esi,0x1b
  42329e:	ja     4232e8 <isspace@plt+0x1f9d8>
  4232a0:	mov    r15,rdx
  4232a3:	mov    r14,rdi
  4232a6:	lea    rcx,[rip+0xda03]        # 430cb0 <isspace@plt+0x2d3a0>
  4232ad:	movsxd rdx,DWORD PTR [rcx+rsi*4]
  4232b1:	add    rdx,rcx
  4232b4:	jmp    rdx
  4232b6:	mov    DWORD PTR [r14+0x9d0],0x1
  4232c1:	jmp    4232e6 <isspace@plt+0x1f9d6>
  4232c3:	mov    DWORD PTR [r14+0x9c0],0x1
  4232ce:	jmp    4232e6 <isspace@plt+0x1f9d6>
  4232d0:	mov    DWORD PTR [r14+0x9cc],0x1
  4232db:	mov    DWORD PTR [r14+0x9c8],0x1
  4232e6:	mov    al,0x1
  4232e8:	mov    rcx,QWORD PTR fs:0x28
  4232f1:	cmp    rcx,QWORD PTR [rsp+0x8]
  4232f6:	jne    423360 <isspace@plt+0x1fa50>
  4232f8:	add    rsp,0x10
  4232fc:	pop    rbx
  4232fd:	pop    r14
  4232ff:	pop    r15
  423301:	ret    
  423302:	mov    rbx,QWORD PTR [r14+0x8]
  423306:	test   rbx,rbx
  423309:	jne    42331c <isspace@plt+0x1fa0c>
  42330b:	jmp    423335 <isspace@plt+0x1fa25>
  42330d:	nop    DWORD PTR [rax]
  423310:	mov    rbx,QWORD PTR [rbx+0x458]
  423317:	test   rbx,rbx
  42331a:	je     423335 <isspace@plt+0x1fa25>
  42331c:	mov    rdi,QWORD PTR [rbx]
  42331f:	mov    rsi,QWORD PTR [r15+0x10]
  423323:	call   4104f0 <isspace@plt+0xcbe0>
  423328:	test   al,al
  42332a:	je     423310 <isspace@plt+0x1fa00>
  42332c:	mov    DWORD PTR [rbx+0x10],0x1
  423333:	jmp    423310 <isspace@plt+0x1fa00>
  423335:	mov    DWORD PTR [r14+0x9c4],0x1
  423340:	mov    al,0x1
  423342:	cmp    BYTE PTR [r14+0x9b8],0x0
  42334a:	je     4232e8 <isspace@plt+0x1f9d8>
  42334c:	add    r14,0x9d8
  423353:	mov    rdi,r14
  423356:	mov    esi,0x1
  42335b:	call   403730 <__longjmp_chk@plt>
  423360:	call   403280 <__stack_chk_fail@plt>
  423365:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42336f:	nop
  423370:	push   rbp
  423371:	push   r15
  423373:	push   r14
  423375:	push   r13
  423377:	push   r12
  423379:	push   rbx
  42337a:	sub    rsp,0x128
  423381:	mov    rax,QWORD PTR fs:0x28
  42338a:	mov    QWORD PTR [rsp+0x120],rax
  423392:	cmp    QWORD PTR [rdi+0x28],0x0
  423397:	je     4236bc <isspace@plt+0x1fdac>
  42339d:	mov    rbx,rdi
  4233a0:	mov    eax,DWORD PTR [rdi+0x9bc]
  4233a6:	cmp    eax,0xffffffff
  4233a9:	jne    4236be <isspace@plt+0x1fdae>
  4233af:	mov    BYTE PTR [rbx+0x9b8],0x1
  4233b6:	mov    rdi,rbx
  4233b9:	mov    esi,0x1
  4233be:	xor    eax,eax
  4233c0:	call   41fe60 <isspace@plt+0x1c550>
  4233c5:	vxorps xmm0,xmm0,xmm0
  4233c9:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  4233cf:	lea    rdi,[rsp+0xa0]
  4233d7:	call   403490 <sigemptyset@plt>
  4233dc:	mov    rbp,QWORD PTR [rbx+0x28]
  4233e0:	test   rbp,rbp
  4233e3:	je     423405 <isspace@plt+0x1faf5>
  4233e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4233ef:	nop
  4233f0:	mov    rdi,QWORD PTR [rbp+0x18]
  4233f4:	call   419f00 <isspace@plt+0x165f0>
  4233f9:	mov    rbp,QWORD PTR [rbp+0x2e0]
  423400:	test   rbp,rbp
  423403:	jne    4233f0 <isspace@plt+0x1fae0>
  423405:	mov    DWORD PTR [rbx+0x9bc],0x0
  42340f:	lea    rdi,[rbx+0x9d8]
  423416:	mov    esi,0x1
  42341b:	call   4038a0 <__sigsetjmp@plt>
  423420:	cmp    BYTE PTR [rbx+0x9b8],0x0
  423427:	je     4236b4 <isspace@plt+0x1fda4>
  42342d:	lea    r12,[rsp+0x28]
  423432:	lea    rax,[rip+0x8ce4]        # 42c11d <isspace@plt+0x2880d>
  423439:	mov    QWORD PTR [rsp+0x8],rax
  42343e:	xor    r13d,r13d
  423441:	jmp    42346b <isspace@plt+0x1fb5b>
  423443:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42344d:	nop    DWORD PTR [rax]
  423450:	call   403130 <__errno_location@plt>
  423455:	cmp    DWORD PTR [rax],0x4
  423458:	jne    42371a <isspace@plt+0x1fe0a>
  42345e:	cmp    BYTE PTR [rbx+0x9b8],0x0
  423465:	je     4236b4 <isspace@plt+0x1fda4>
  42346b:	vxorps xmm0,xmm0,xmm0
  42346f:	vmovups YMMWORD PTR [r12+0x58],ymm0
  423476:	vmovups YMMWORD PTR [r12+0x40],ymm0
  42347d:	vmovups YMMWORD PTR [r12+0x20],ymm0
  423484:	vmovups YMMWORD PTR [r12],ymm0
  42348a:	mov    QWORD PTR [rsp+0x20],0x1
  423493:	cmp    DWORD PTR [rbx+0x9c4],0x0
  42349a:	je     423542 <isspace@plt+0x1fc32>
  4234a0:	mov    r15,QWORD PTR [rbx+0x28]
  4234a4:	test   r15,r15
  4234a7:	je     4236fc <isspace@plt+0x1fdec>
  4234ad:	xor    ebp,ebp
  4234af:	jmp    4234c8 <isspace@plt+0x1fbb8>
  4234b1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4234bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4234c0:	mov    r15,r14
  4234c3:	test   r14,r14
  4234c6:	je     423500 <isspace@plt+0x1fbf0>
  4234c8:	mov    r14,QWORD PTR [r15+0x2e0]
  4234cf:	mov    rax,QWORD PTR [r15+0x10]
  4234d3:	cmp    DWORD PTR [rax+0x10],0x0
  4234d7:	je     4234c0 <isspace@plt+0x1fbb0>
  4234d9:	mov    rdi,rbp
  4234dc:	vzeroupper 
  4234df:	call   4030d0 <free@plt>
  4234e4:	mov    rax,QWORD PTR [r15+0x10]
  4234e8:	mov    rdi,QWORD PTR [rax+0x8]
  4234ec:	call   403850 <strdup@plt>
  4234f1:	mov    rbp,rax
  4234f4:	mov    rdi,r15
  4234f7:	call   421880 <isspace@plt+0x1df70>
  4234fc:	jmp    4234c0 <isspace@plt+0x1fbb0>
  4234fe:	xchg   ax,ax
  423500:	test   rbp,rbp
  423503:	mov    rdx,rbp
  423506:	lea    rax,[rip+0x8c10]        # 42c11d <isspace@plt+0x2880d>
  42350d:	cmove  rdx,rax
  423511:	cmp    QWORD PTR [rbx+0x28],0x0
  423516:	je     4236f7 <isspace@plt+0x1fde7>
  42351c:	mov    rdi,rbx
  42351f:	lea    rsi,[rip+0xd814]        # 430d3a <isspace@plt+0x2d42a>
  423526:	xor    eax,eax
  423528:	vzeroupper 
  42352b:	call   4299f0 <isspace@plt+0x260e0>
  423530:	mov    DWORD PTR [rbx+0x9c4],0x0
  42353a:	mov    rdi,rbp
  42353d:	call   4030d0 <free@plt>
  423542:	cmp    DWORD PTR [rbx+0x9d0],0x0
  423549:	jne    4236e3 <isspace@plt+0x1fdd3>
  42354f:	cmp    DWORD PTR [rbx+0x9c0],0x0
  423556:	je     423574 <isspace@plt+0x1fc64>
  423558:	mov    DWORD PTR [rbx+0x9c0],0x0
  423562:	mov    rdi,rbx
  423565:	lea    rsi,[rip+0xb5d8]        # 42eb44 <isspace@plt+0x2b234>
  42356c:	vzeroupper 
  42356f:	call   4231a0 <isspace@plt+0x1f890>
  423574:	cmp    DWORD PTR [rbx+0x9cc],0x0
  42357b:	je     423590 <isspace@plt+0x1fc80>
  42357d:	mov    rdi,QWORD PTR [rbx]
  423580:	vzeroupper 
  423583:	call   QWORD PTR [rdi+0x70]
  423586:	mov    DWORD PTR [rbx+0x9cc],0x0
  423590:	cmp    DWORD PTR [rbx+0x9c8],0x0
  423597:	je     4235ac <isspace@plt+0x1fc9c>
  423599:	mov    rdi,QWORD PTR [rbx]
  42359c:	vzeroupper 
  42359f:	call   QWORD PTR [rdi+0x10]
  4235a2:	mov    DWORD PTR [rbx+0x9c8],0x0
  4235ac:	mov    rdi,QWORD PTR [rbx]
  4235af:	vzeroupper 
  4235b2:	call   QWORD PTR [rdi+0x58]
  4235b5:	mov    rax,QWORD PTR [rbx+0x9a0]
  4235bc:	mov    rax,QWORD PTR [rax+0x50]
  4235c0:	mov    QWORD PTR [rsp+0x10],rax
  4235c5:	mov    edi,0x1
  4235ca:	lea    rsi,[rsp+0x20]
  4235cf:	xor    edx,edx
  4235d1:	xor    ecx,ecx
  4235d3:	mov    r8,r13
  4235d6:	lea    r9,[rsp+0xa0]
  4235de:	call   4032d0 <pselect@plt>
  4235e3:	cmp    eax,0xffffffff
  4235e6:	je     423450 <isspace@plt+0x1fb40>
  4235ec:	test   eax,eax
  4235ee:	js     423715 <isspace@plt+0x1fe05>
  4235f4:	test   BYTE PTR [rsp+0x20],0x1
  4235f9:	jne    423630 <isspace@plt+0x1fd20>
  4235fb:	mov    rax,QWORD PTR [rbx+0x9a0]
  423602:	mov    rax,QWORD PTR [rax+0x48]
  423606:	test   rax,rax
  423609:	je     4236a4 <isspace@plt+0x1fd94>
  42360f:	mov    rdi,rbx
  423612:	call   rax
  423614:	xor    r13d,r13d
  423617:	cmp    BYTE PTR [rbx+0x9b8],0x0
  42361e:	jne    42346b <isspace@plt+0x1fb5b>
  423624:	jmp    4236b4 <isspace@plt+0x1fda4>
  423629:	nop    DWORD PTR [rax+0x0]
  423630:	mov    rdi,QWORD PTR [rbx]
  423633:	call   QWORD PTR [rdi+0x90]
  423639:	mov    rdi,rax
  42363c:	call   403870 <termkey_advisereadable@plt>
  423641:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42364b:	nop    DWORD PTR [rax+rax*1+0x0]
  423650:	mov    rdi,rbx
  423653:	call   423740 <isspace@plt+0x1fe30>
  423658:	test   rax,rax
  42365b:	je     423680 <isspace@plt+0x1fd70>
  42365d:	mov    rdi,rbx
  423660:	mov    rsi,rax
  423663:	xor    edx,edx
  423665:	mov    ecx,0x1
  42366a:	call   4238c0 <isspace@plt+0x1ffb0>
  42366f:	jmp    423650 <isspace@plt+0x1fd40>
  423671:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42367b:	nop    DWORD PTR [rax+rax*1+0x0]
  423680:	mov    rax,QWORD PTR [rbx+0x9a0]
  423687:	cmp    QWORD PTR [rax+0x48],0x0
  42368c:	lea    rax,[rsp+0x10]
  423691:	cmovne r13,rax
  423695:	cmp    BYTE PTR [rbx+0x9b8],0x0
  42369c:	jne    42346b <isspace@plt+0x1fb5b>
  4236a2:	jmp    4236b4 <isspace@plt+0x1fda4>
  4236a4:	xor    r13d,r13d
  4236a7:	cmp    BYTE PTR [rbx+0x9b8],0x0
  4236ae:	jne    42346b <isspace@plt+0x1fb5b>
  4236b4:	mov    eax,DWORD PTR [rbx+0x9bc]
  4236ba:	jmp    4236be <isspace@plt+0x1fdae>
  4236bc:	xor    eax,eax
  4236be:	mov    rcx,QWORD PTR fs:0x28
  4236c7:	cmp    rcx,QWORD PTR [rsp+0x120]
  4236cf:	jne    423735 <isspace@plt+0x1fe25>
  4236d1:	add    rsp,0x128
  4236d8:	pop    rbx
  4236d9:	pop    r12
  4236db:	pop    r13
  4236dd:	pop    r14
  4236df:	pop    r15
  4236e1:	pop    rbp
  4236e2:	ret    
  4236e3:	lea    rsi,[rip+0xd66f]        # 430d59 <isspace@plt+0x2d449>
  4236ea:	mov    rdi,rbx
  4236ed:	xor    eax,eax
  4236ef:	vzeroupper 
  4236f2:	call   422e30 <isspace@plt+0x1f520>
  4236f7:	mov    QWORD PTR [rsp+0x8],rdx
  4236fc:	lea    rsi,[rip+0xd637]        # 430d3a <isspace@plt+0x2d42a>
  423703:	mov    rdi,rbx
  423706:	mov    rdx,QWORD PTR [rsp+0x8]
  42370b:	xor    eax,eax
  42370d:	vzeroupper 
  423710:	call   422e30 <isspace@plt+0x1f520>
  423715:	call   403130 <__errno_location@plt>
  42371a:	mov    edi,DWORD PTR [rax]
  42371c:	call   403880 <strerror@plt>
  423721:	lea    rsi,[rip+0xd644]        # 430d6c <isspace@plt+0x2d45c>
  423728:	mov    rdi,rbx
  42372b:	mov    rdx,rax
  42372e:	xor    eax,eax
  423730:	call   422e30 <isspace@plt+0x1f520>
  423735:	call   403280 <__stack_chk_fail@plt>
  42373a:	nop    WORD PTR [rax+rax*1+0x0]
  423740:	push   rbp
  423741:	mov    rbp,rsp
  423744:	push   r15
  423746:	push   r14
  423748:	push   rbx
  423749:	and    rsp,0xffffffffffffffe0
  42374d:	sub    rsp,0xe0
  423754:	mov    rbx,rdi
  423757:	mov    rax,QWORD PTR fs:0x28
  423760:	mov    QWORD PTR [rsp+0xd0],rax
  423768:	vxorps xmm0,xmm0,xmm0
  42376c:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  423772:	mov    rdi,QWORD PTR [rdi]
  423775:	lea    rsi,[rsp+0x20]
  42377a:	vzeroupper 
  42377d:	call   QWORD PTR [rdi+0x78]
  423780:	test   al,al
  423782:	je     4237df <isspace@plt+0x1fecf>
  423784:	mov    rdi,rbx
  423787:	call   429ac0 <isspace@plt+0x261b0>
  42378c:	mov    rax,QWORD PTR [rbx+0x9a0]
  423793:	mov    eax,DWORD PTR [rax]
  423795:	and    eax,0xfffffffe
  423798:	cmp    eax,0x4
  42379b:	jne    4237e6 <isspace@plt+0x1fed6>
  42379d:	mov    BYTE PTR [rbx+0x828],0x0
  4237a4:	mov    rdi,QWORD PTR [rbx]
  4237a7:	call   QWORD PTR [rdi+0x90]
  4237ad:	cmp    DWORD PTR [rsp+0x20],0xffffffff
  4237b2:	je     423841 <isspace@plt+0x1ff31>
  4237b8:	add    rbx,0x829
  4237bf:	lea    rcx,[rsp+0x20]
  4237c4:	mov    edx,0x40
  4237c9:	mov    rdi,rax
  4237cc:	mov    rsi,rbx
  4237cf:	mov    r8d,0xc
  4237d5:	call   403690 <termkey_strfkey@plt>
  4237da:	jmp    423895 <isspace@plt+0x1ff85>
  4237df:	xor    ebx,ebx
  4237e1:	jmp    423895 <isspace@plt+0x1ff85>
  4237e6:	cmp    BYTE PTR [rbx+0x828],0x0
  4237ed:	mov    BYTE PTR [rbx+0x828],0x0
  4237f4:	jne    4237a4 <isspace@plt+0x1fe94>
  4237f6:	cmp    DWORD PTR [rsp+0x20],0x0
  4237fb:	jne    4237a4 <isspace@plt+0x1fe94>
  4237fd:	mov    rdi,QWORD PTR [rbx+0x820]
  423804:	lea    r14,[rsp+0x34]
  423809:	mov    rsi,r14
  42380c:	call   408500 <isspace@plt+0x4bf0>
  423811:	test   rax,rax
  423814:	je     4237a4 <isspace@plt+0x1fe94>
  423816:	mov    r15,rax
  423819:	mov    rdi,rax
  42381c:	call   403250 <strlen@plt>
  423821:	inc    rax
  423824:	cmp    rax,0x7
  423828:	ja     4237a4 <isspace@plt+0x1fe94>
  42382e:	mov    rdi,r14
  423831:	mov    rsi,r15
  423834:	mov    rdx,rax
  423837:	call   4034d0 <memcpy@plt>
  42383c:	jmp    4237a4 <isspace@plt+0x1fe94>
  423841:	lea    rdx,[rsp+0x50]
  423846:	lea    rsi,[rsp+0x20]
  42384b:	lea    rcx,[rsp+0x18]
  423850:	lea    r8,[rsp+0x10]
  423855:	mov    rdi,rax
  423858:	call   403520 <termkey_interpret_csi@plt>
  42385d:	cmp    eax,0x1
  423860:	jne    42388a <isspace@plt+0x1ff7a>
  423862:	mov    rax,QWORD PTR [rsp+0x10]
  423867:	mov    QWORD PTR [rsp+0x40],rax
  42386c:	mov    rax,QWORD PTR [rsp+0x18]
  423871:	mov    QWORD PTR [rsp+0x48],rax
  423876:	lea    rdx,[rsp+0x40]
  42387b:	mov    rdi,rbx
  42387e:	mov    esi,0xb
  423883:	xor    eax,eax
  423885:	call   41fe60 <isspace@plt+0x1c550>
  42388a:	mov    rdi,rbx
  42388d:	call   423740 <isspace@plt+0x1fe30>
  423892:	mov    rbx,rax
  423895:	mov    rax,QWORD PTR fs:0x28
  42389e:	cmp    rax,QWORD PTR [rsp+0xd0]
  4238a6:	jne    4238b6 <isspace@plt+0x1ffa6>
  4238a8:	mov    rax,rbx
  4238ab:	lea    rsp,[rbp-0x18]
  4238af:	pop    rbx
  4238b0:	pop    r14
  4238b2:	pop    r15
  4238b4:	pop    rbp
  4238b5:	ret    
  4238b6:	call   403280 <__stack_chk_fail@plt>
  4238bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4238c0:	push   rbp
  4238c1:	push   r15
  4238c3:	push   r14
  4238c5:	push   r13
  4238c7:	push   r12
  4238c9:	push   rbx
  4238ca:	sub    rsp,0x78
  4238ce:	mov    QWORD PTR [rsp+0x8],rdi
  4238d3:	mov    rax,QWORD PTR fs:0x28
  4238dc:	mov    QWORD PTR [rsp+0x70],rax
  4238e1:	test   rsi,rsi
  4238e4:	je     423dd2 <isspace@plt+0x204c2>
  4238ea:	mov    r13,rdx
  4238ed:	mov    rbx,rsi
  4238f0:	test   cl,cl
  4238f2:	je     42390d <isspace@plt+0x1fffd>
  4238f4:	mov    rax,QWORD PTR [rsp+0x8]
  4238f9:	mov    rdi,QWORD PTR [rax+0x7c0]
  423900:	test   rdi,rdi
  423903:	je     42390d <isspace@plt+0x1fffd>
  423905:	mov    rsi,rbx
  423908:	call   404940 <isspace@plt+0x1030>
  42390d:	mov    rax,QWORD PTR [rsp+0x8]
  423912:	mov    rdi,QWORD PTR [rax+0x7d8]
  423919:	test   rdi,rdi
  42391c:	je     423926 <isspace@plt+0x20016>
  42391e:	mov    rsi,rbx
  423921:	call   404940 <isspace@plt+0x1030>
  423926:	mov    rax,QWORD PTR [rsp+0x8]
  42392b:	lea    r14,[rax+0x8f0]
  423932:	mov    rdi,r14
  423935:	mov    rsi,rbx
  423938:	call   404940 <isspace@plt+0x1030>
  42393d:	test   al,al
  42393f:	je     423dd2 <isspace@plt+0x204c2>
  423945:	mov    rax,QWORD PTR [r14]
  423948:	add    r13,rax
  42394b:	je     423dab <isspace@plt+0x2049b>
  423951:	cmp    BYTE PTR [r13+0x0],0x0
  423956:	je     423daf <isspace@plt+0x2049f>
  42395c:	mov    QWORD PTR [rsp+0x20],r14
  423961:	mov    rbp,QWORD PTR [rsp+0x8]
  423966:	lea    rcx,[rbp+0x8a9]
  42396d:	mov    QWORD PTR [rsp+0x38],rcx
  423972:	lea    rcx,[rbp+0x869]
  423979:	mov    QWORD PTR [rsp+0x30],rcx
  42397e:	xor    ecx,ecx
  423980:	mov    QWORD PTR [rsp+0x10],rcx
  423985:	mov    r15,r13
  423988:	mov    rsi,r13
  42398b:	mov    QWORD PTR [rsp+0x28],r13
  423990:	jmp    423a06 <isspace@plt+0x200f6>
  423992:	mov    rax,QWORD PTR [rbp+0x9a0]
  423999:	cmp    QWORD PTR [rax+0x40],0x0
  42399e:	je     423d93 <isspace@plt+0x20483>
  4239a4:	mov    rdi,rbp
  4239a7:	mov    rsi,r13
  4239aa:	call   422ec0 <isspace@plt+0x1f5b0>
  4239af:	mov    r14,rax
  4239b2:	mov    rax,QWORD PTR [rbp+0x9a0]
  4239b9:	mov    rdx,r14
  4239bc:	sub    rdx,r13
  4239bf:	mov    rdi,rbp
  4239c2:	mov    rsi,r13
  4239c5:	call   QWORD PTR [rax+0x40]
  4239c8:	mov    r13,r15
  4239cb:	mov    rsi,r14
  4239ce:	mov    rcx,r14
  4239d1:	mov    rax,r14
  4239d4:	mov    r14,rcx
  4239d7:	mov    r15,r13
  4239da:	mov    rdx,rax
  4239dd:	test   rsi,rsi
  4239e0:	mov    rcx,rsi
  4239e3:	je     423db4 <isspace@plt+0x204a4>
  4239e9:	mov    bl,BYTE PTR [rcx]
  4239eb:	mov    r13,r14
  4239ee:	mov    r14,rcx
  4239f1:	xor    ecx,ecx
  4239f3:	mov    QWORD PTR [rsp+0x10],rcx
  4239f8:	mov    rsi,r14
  4239fb:	mov    rdx,rax
  4239fe:	test   bl,bl
  423a00:	je     423db4 <isspace@plt+0x204a4>
  423a06:	mov    rdi,rbp
  423a09:	mov    QWORD PTR [rsp+0x18],rsi
  423a0e:	call   422ec0 <isspace@plt+0x1f5b0>
  423a13:	test   rax,rax
  423a16:	je     423df1 <isspace@plt+0x204e1>
  423a1c:	mov    r14,rax
  423a1f:	mov    al,BYTE PTR [rax]
  423a21:	mov    BYTE PTR [r14],0x0
  423a25:	mov    r12,QWORD PTR [rbp+0x9a0]
  423a2c:	test   r12,r12
  423a2f:	je     423c30 <isspace@plt+0x20320>
  423a35:	mov    BYTE PTR [rsp+0x7],al
  423a39:	mov    rax,QWORD PTR [rsp+0x18]
  423a3e:	sub    rax,r13
  423a41:	mov    QWORD PTR [rsp+0x40],rax
  423a46:	xor    eax,eax
  423a48:	mov    QWORD PTR [rsp+0x48],r14
  423a4d:	nop    DWORD PTR [rax]
  423a50:	test   al,0x1
  423a52:	jne    423cb0 <isspace@plt+0x203a0>
  423a58:	mov    rcx,QWORD PTR [rbp+0x30]
  423a5c:	mov    rbx,r12
  423a5f:	test   rcx,rcx
  423a62:	je     423a7b <isspace@plt+0x2016b>
  423a64:	mov    edx,DWORD PTR [r12]
  423a68:	lea    rdx,[rdx+rdx*2]
  423a6c:	shl    rdx,0x5
  423a70:	lea    rbx,[rcx+rdx*1]
  423a74:	add    rbx,0x88
  423a7b:	mov    rdi,QWORD PTR [rbx+0x10]
  423a7f:	test   rdi,rdi
  423a82:	je     423b3d <isspace@plt+0x2022d>
  423a88:	mov    rsi,r13
  423a8b:	call   408500 <isspace@plt+0x4bf0>
  423a90:	mov    rsi,r13
  423a93:	mov    r13,rax
  423a96:	test   rax,rax
  423a99:	setne  al
  423a9c:	cmp    r14,r15
  423a9f:	seta   cl
  423aa2:	test   cl,al
  423aa4:	mov    rax,QWORD PTR [rsp+0x10]
  423aa9:	cmovne rax,r13
  423aad:	mov    QWORD PTR [rsp+0x10],rax
  423ab2:	cmovne r15,r14
  423ab6:	mov    QWORD PTR [rsp+0x50],r15
  423abb:	mov    rdi,QWORD PTR [rbx+0x10]
  423abf:	mov    r15,rsi
  423ac2:	call   408720 <isspace@plt+0x4e10>
  423ac7:	mov    rbx,rax
  423aca:	mov    r14,rbp
  423acd:	mov    QWORD PTR [rsp+0x58],rbp
  423ad2:	mov    rax,QWORD PTR [rsp+0x40]
  423ad7:	mov    QWORD PTR [rsp+0x60],rax
  423adc:	mov    DWORD PTR [rsp+0x68],0x0
  423ae4:	mov    rdi,QWORD PTR [rsp+0x18]
  423ae9:	lea    rsi,[rip+0xb2e0]        # 42edd0 <isspace@plt+0x2b4c0>
  423af0:	call   403470 <strcmp@plt>
  423af5:	test   eax,eax
  423af7:	sete   BYTE PTR [rsp+0x6c]
  423afc:	mov    rdi,rbx
  423aff:	lea    rsi,[rip+0x1f6a]        # 425a70 <isspace@plt+0x22160>
  423b06:	lea    rdx,[rsp+0x58]
  423b0b:	call   408820 <isspace@plt+0x4f10>
  423b10:	mov    ecx,DWORD PTR [rsp+0x68]
  423b14:	test   ecx,ecx
  423b16:	jle    423b1f <isspace@plt+0x2020f>
  423b18:	mov    al,0x1
  423b1a:	test   r13,r13
  423b1d:	je     423b2d <isspace@plt+0x2021d>
  423b1f:	test   r13,r13
  423b22:	setne  dl
  423b25:	cmp    ecx,0x1
  423b28:	setg   al
  423b2b:	and    al,dl
  423b2d:	mov    r13,r15
  423b30:	mov    rbp,r14
  423b33:	mov    r15,QWORD PTR [rsp+0x50]
  423b38:	mov    r14,QWORD PTR [rsp+0x48]
  423b3d:	test   al,0x1
  423b3f:	sete   cl
  423b42:	jne    423bfe <isspace@plt+0x202ee>
  423b48:	mov    rdi,QWORD PTR [r12+0x10]
  423b4d:	test   rdi,rdi
  423b50:	je     423bf9 <isspace@plt+0x202e9>
  423b56:	mov    rsi,r13
  423b59:	call   408500 <isspace@plt+0x4bf0>
  423b5e:	mov    rbx,rax
  423b61:	test   rax,rax
  423b64:	setne  al
  423b67:	cmp    r14,r15
  423b6a:	seta   cl
  423b6d:	test   cl,al
  423b6f:	mov    rax,QWORD PTR [rsp+0x10]
  423b74:	cmovne rax,rbx
  423b78:	mov    QWORD PTR [rsp+0x10],rax
  423b7d:	cmovne r15,r14
  423b81:	mov    rdi,QWORD PTR [r12+0x10]
  423b86:	mov    rsi,r13
  423b89:	call   408720 <isspace@plt+0x4e10>
  423b8e:	mov    rcx,rbp
  423b91:	mov    rbp,rax
  423b94:	mov    QWORD PTR [rsp+0x58],rcx
  423b99:	mov    rax,QWORD PTR [rsp+0x40]
  423b9e:	mov    QWORD PTR [rsp+0x60],rax
  423ba3:	mov    DWORD PTR [rsp+0x68],0x0
  423bab:	mov    rdi,QWORD PTR [rsp+0x18]
  423bb0:	lea    rsi,[rip+0xb219]        # 42edd0 <isspace@plt+0x2b4c0>
  423bb7:	call   403470 <strcmp@plt>
  423bbc:	test   eax,eax
  423bbe:	sete   BYTE PTR [rsp+0x6c]
  423bc3:	mov    rdi,rbp
  423bc6:	lea    rsi,[rip+0x1ea3]        # 425a70 <isspace@plt+0x22160>
  423bcd:	lea    rdx,[rsp+0x58]
  423bd2:	call   408820 <isspace@plt+0x4f10>
  423bd7:	mov    ecx,DWORD PTR [rsp+0x68]
  423bdb:	test   ecx,ecx
  423bdd:	jle    423be6 <isspace@plt+0x202d6>
  423bdf:	mov    al,0x1
  423be1:	test   rbx,rbx
  423be4:	je     423bf4 <isspace@plt+0x202e4>
  423be6:	test   rbx,rbx
  423be9:	setne  dl
  423bec:	cmp    ecx,0x1
  423bef:	setg   al
  423bf2:	and    al,dl
  423bf4:	mov    rbp,QWORD PTR [rsp+0x8]
  423bf9:	test   al,0x1
  423bfb:	sete   cl
  423bfe:	test   cl,cl
  423c00:	je     423c10 <isspace@plt+0x20300>
  423c02:	mov    r12,QWORD PTR [r12+0x8]
  423c07:	test   r12,r12
  423c0a:	jne    423a50 <isspace@plt+0x20140>
  423c10:	mov    bl,BYTE PTR [rsp+0x7]
  423c14:	mov    BYTE PTR [r14],bl
  423c17:	test   cl,cl
  423c19:	je     423cb7 <isspace@plt+0x203a7>
  423c1f:	jmp    423c33 <isspace@plt+0x20323>
  423c21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423c2b:	nop    DWORD PTR [rax+rax*1+0x0]
  423c30:	mov    BYTE PTR [r14],al
  423c33:	mov    rax,QWORD PTR [rsp+0x10]
  423c38:	test   rax,rax
  423c3b:	je     423cbf <isspace@plt+0x203af>
  423c41:	cmp    QWORD PTR [rax+0x8],0x0
  423c46:	je     423d50 <isspace@plt+0x20440>
  423c4c:	mov    rbx,r15
  423c4f:	sub    rbx,r13
  423c52:	mov    rdi,QWORD PTR [rsp+0x38]
  423c57:	mov    r14,QWORD PTR [rsp+0x30]
  423c5c:	mov    rsi,r14
  423c5f:	mov    r12,rax
  423c62:	call   403170 <strcpy@plt>
  423c67:	mov    rdi,r14
  423c6a:	mov    rsi,r13
  423c6d:	mov    rdx,rbx
  423c70:	call   403150 <strncpy@plt>
  423c75:	mov    BYTE PTR [rbp+rbx*1+0x869],0x0
  423c7d:	mov    rax,QWORD PTR [r12+0x8]
  423c82:	lea    rdx,[rax+0x18]
  423c86:	mov    rdi,rbp
  423c89:	mov    rsi,r15
  423c8c:	call   QWORD PTR [rax+0x10]
  423c8f:	mov    r14,rax
  423c92:	mov    rcx,rax
  423c95:	mov    r15,rax
  423c98:	mov    rdx,r13
  423c9b:	test   rax,rax
  423c9e:	jne    4239e9 <isspace@plt+0x200d9>
  423ca4:	jmp    423db4 <isspace@plt+0x204a4>
  423ca9:	nop    DWORD PTR [rax+0x0]
  423cb0:	mov    bl,BYTE PTR [rsp+0x7]
  423cb4:	mov    BYTE PTR [r14],bl
  423cb7:	mov    rax,r13
  423cba:	jmp    4239f8 <isspace@plt+0x200e8>
  423cbf:	cmp    BYTE PTR [r13+0x0],0x3c
  423cc4:	jne    423992 <isspace@plt+0x20082>
  423cca:	cmp    BYTE PTR [r14-0x1],0x3e
  423ccf:	jne    423992 <isspace@plt+0x20082>
  423cd5:	mov    BYTE PTR [r14-0x1],0x0
  423cda:	mov    rdi,QWORD PTR [rbp+0xaa0]
  423ce1:	lea    rsi,[r13+0x1]
  423ce5:	call   408500 <isspace@plt+0x4bf0>
  423cea:	mov    BYTE PTR [r14-0x1],0x3e
  423cef:	test   rax,rax
  423cf2:	je     423992 <isspace@plt+0x20082>
  423cf8:	mov    r12,rax
  423cfb:	mov    rbp,r14
  423cfe:	sub    rbp,r13
  423d01:	mov    rdi,QWORD PTR [rsp+0x38]
  423d06:	mov    rbx,QWORD PTR [rsp+0x30]
  423d0b:	mov    rsi,rbx
  423d0e:	call   403170 <strcpy@plt>
  423d13:	mov    rdi,rbx
  423d16:	mov    rsi,r13
  423d19:	mov    rdx,rbp
  423d1c:	call   403150 <strncpy@plt>
  423d21:	mov    rax,QWORD PTR [rsp+0x8]
  423d26:	mov    BYTE PTR [rax+rbp*1+0x869],0x0
  423d2e:	mov    rbp,QWORD PTR [rsp+0x8]
  423d33:	mov    rdx,r12
  423d36:	add    rdx,0x18
  423d3a:	mov    rdi,rbp
  423d3d:	mov    rsi,r14
  423d40:	call   QWORD PTR [r12+0x10]
  423d45:	mov    r14,rax
  423d48:	mov    rcx,rax
  423d4b:	jmp    423c98 <isspace@plt+0x20388>
  423d50:	cmp    QWORD PTR [rax+0x10],0x0
  423d55:	je     423d9e <isspace@plt+0x2048e>
  423d57:	mov    rsi,r13
  423d5a:	mov    rbx,QWORD PTR [rsp+0x20]
  423d5f:	sub    rsi,QWORD PTR [rbx]
  423d62:	sub    r15,r13
  423d65:	mov    rdi,rbx
  423d68:	mov    rdx,r15
  423d6b:	mov    r14,rax
  423d6e:	call   404700 <isspace@plt+0xdf0>
  423d73:	mov    rsi,r13
  423d76:	sub    rsi,QWORD PTR [rbx]
  423d79:	mov    rdx,QWORD PTR [r14+0x10]
  423d7d:	mov    rdi,rbx
  423d80:	call   404780 <isspace@plt+0xe70>
  423d85:	mov    r14,r13
  423d88:	mov    rsi,r13
  423d8b:	mov    rcx,r13
  423d8e:	jmp    4239d1 <isspace@plt+0x200c1>
  423d93:	mov    rcx,r14
  423d96:	mov    rax,r14
  423d99:	jmp    4239e9 <isspace@plt+0x200d9>
  423d9e:	mov    rcx,r13
  423da1:	mov    rsi,QWORD PTR [rsp+0x18]
  423da6:	jmp    4239d1 <isspace@plt+0x200c1>
  423dab:	xor    edx,edx
  423dad:	jmp    423dc1 <isspace@plt+0x204b1>
  423daf:	mov    rdx,r13
  423db2:	jmp    423dc1 <isspace@plt+0x204b1>
  423db4:	mov    r14,QWORD PTR [rsp+0x20]
  423db9:	mov    rax,QWORD PTR [r14]
  423dbc:	mov    r13,QWORD PTR [rsp+0x28]
  423dc1:	sub    rdx,r13
  423dc4:	sub    r13,rax
  423dc7:	mov    rdi,r14
  423dca:	mov    rsi,r13
  423dcd:	call   404700 <isspace@plt+0xdf0>
  423dd2:	mov    rax,QWORD PTR fs:0x28
  423ddb:	cmp    rax,QWORD PTR [rsp+0x70]
  423de0:	jne    423e12 <isspace@plt+0x20502>
  423de2:	add    rsp,0x78
  423de6:	pop    rbx
  423de7:	pop    r12
  423de9:	pop    r13
  423deb:	pop    r14
  423ded:	pop    r15
  423def:	pop    rbp
  423df0:	ret    
  423df1:	mov    rdi,QWORD PTR [rsp+0x28]
  423df6:	mov    rbx,rdi
  423df9:	mov    rbp,QWORD PTR [rsp+0x20]
  423dfe:	sub    rbx,QWORD PTR [rbp+0x0]
  423e02:	call   403250 <strlen@plt>
  423e07:	mov    rdi,rbp
  423e0a:	mov    rsi,rbx
  423e0d:	mov    rdx,rax
  423e10:	jmp    423dcd <isspace@plt+0x204bd>
  423e12:	call   403280 <__stack_chk_fail@plt>
  423e17:	nop    WORD PTR [rax+rax*1+0x0]
  423e20:	push   rax
  423e21:	mov    rax,QWORD PTR fs:0x28
  423e2a:	mov    QWORD PTR [rsp],rax
  423e2e:	cmp    esi,0x4b
  423e31:	jne    423e3c <isspace@plt+0x2052c>
  423e33:	mov    rax,QWORD PTR [rdi+0x7c8]
  423e3a:	jmp    423e72 <isspace@plt+0x20562>
  423e3c:	lea    eax,[rsi-0x31]
  423e3f:	cmp    eax,0x1a
  423e42:	cmovb  esi,eax
  423e45:	cmp    esi,0x2f
  423e48:	ja     423e70 <isspace@plt+0x20560>
  423e4a:	mov    eax,esi
  423e4c:	lea    rax,[rax+rax*4]
  423e50:	lea    rdi,[rdi+rax*8]
  423e54:	add    rdi,0x40
  423e58:	xor    esi,esi
  423e5a:	call   403d30 <isspace@plt+0x420>
  423e5f:	mov    rcx,QWORD PTR fs:0x28
  423e68:	cmp    rcx,QWORD PTR [rsp]
  423e6c:	jne    423e83 <isspace@plt+0x20573>
  423e6e:	pop    rcx
  423e6f:	ret    
  423e70:	xor    eax,eax
  423e72:	mov    rcx,QWORD PTR fs:0x28
  423e7b:	cmp    rcx,QWORD PTR [rsp]
  423e7f:	jne    423e83 <isspace@plt+0x20573>
  423e81:	pop    rcx
  423e82:	ret    
  423e83:	call   403280 <__stack_chk_fail@plt>
  423e88:	nop    DWORD PTR [rax+rax*1+0x0]
  423e90:	push   rbx
  423e91:	sub    rsp,0x10
  423e95:	mov    rax,QWORD PTR fs:0x28
  423e9e:	mov    QWORD PTR [rsp+0x8],rax
  423ea3:	cmp    QWORD PTR [rdi+0x7d8],0x0
  423eab:	jne    423ecd <isspace@plt+0x205bd>
  423ead:	mov    rbx,rdi
  423eb0:	add    rdi,0x770
  423eb7:	xor    esi,esi
  423eb9:	call   403d30 <isspace@plt+0x420>
  423ebe:	mov    QWORD PTR [rbx+0x7d8],rax
  423ec5:	mov    rdi,rax
  423ec8:	call   404590 <isspace@plt+0xc80>
  423ecd:	mov    rax,QWORD PTR fs:0x28
  423ed6:	cmp    rax,QWORD PTR [rsp+0x8]
  423edb:	jne    423ee3 <isspace@plt+0x205d3>
  423edd:	add    rsp,0x10
  423ee1:	pop    rbx
  423ee2:	ret    
  423ee3:	call   403280 <__stack_chk_fail@plt>
  423ee8:	nop    DWORD PTR [rax+rax*1+0x0]
  423ef0:	push   r14
  423ef2:	push   rbx
  423ef3:	push   rax
  423ef4:	mov    rax,QWORD PTR fs:0x28
  423efd:	mov    QWORD PTR [rsp],rax
  423f01:	cmp    QWORD PTR [rdi+0x7d8],0x0
  423f09:	je     423f47 <isspace@plt+0x20637>
  423f0b:	mov    rbx,rdi
  423f0e:	add    rdi,0x298
  423f15:	xor    esi,esi
  423f17:	call   403d30 <isspace@plt+0x420>
  423f1c:	mov    r14,rax
  423f1f:	mov    rax,QWORD PTR [rbx+0x7d8]
  423f26:	mov    rsi,QWORD PTR [rax]
  423f29:	mov    rdx,QWORD PTR [rax+0x8]
  423f2d:	mov    rdi,r14
  423f30:	call   4045c0 <isspace@plt+0xcb0>
  423f35:	mov    QWORD PTR [rbx+0x980],r14
  423f3c:	mov    QWORD PTR [rbx+0x7d8],0x0
  423f47:	mov    rax,QWORD PTR fs:0x28
  423f50:	cmp    rax,QWORD PTR [rsp]
  423f54:	jne    423f5e <isspace@plt+0x2064e>
  423f56:	add    rsp,0x8
  423f5a:	pop    rbx
  423f5b:	pop    r14
  423f5d:	ret    
  423f5e:	call   403280 <__stack_chk_fail@plt>
  423f63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423f6d:	nop    DWORD PTR [rax]
  423f70:	push   r15
  423f72:	push   r14
  423f74:	push   rbx
  423f75:	sub    rsp,0x10
  423f79:	mov    ebx,esi
  423f7b:	mov    r14,rdi
  423f7e:	mov    rax,QWORD PTR fs:0x28
  423f87:	mov    QWORD PTR [rsp+0x8],rax
  423f8c:	cmp    esi,0x4b
  423f8f:	jne    423f9a <isspace@plt+0x2068a>
  423f91:	mov    r15,QWORD PTR [r14+0x7c8]
  423f98:	jmp    423fc0 <isspace@plt+0x206b0>
  423f9a:	lea    eax,[rbx-0x31]
  423f9d:	cmp    eax,0x1a
  423fa0:	cmovae eax,ebx
  423fa3:	cmp    eax,0x2f
  423fa6:	ja     423fff <isspace@plt+0x206ef>
  423fa8:	mov    eax,eax
  423faa:	lea    rax,[rax+rax*4]
  423fae:	lea    rdi,[r14+rax*8]
  423fb2:	add    rdi,0x40
  423fb6:	xor    esi,esi
  423fb8:	call   403d30 <isspace@plt+0x420>
  423fbd:	mov    r15,rax
  423fc0:	xor    eax,eax
  423fc2:	test   r15,r15
  423fc5:	je     424001 <isspace@plt+0x206f1>
  423fc7:	cmp    QWORD PTR [r14+0x7c0],0x0
  423fcf:	jne    424001 <isspace@plt+0x206f1>
  423fd1:	add    ebx,0xffffffcf
  423fd4:	cmp    ebx,0x1a
  423fd7:	jb     423fe1 <isspace@plt+0x206d1>
  423fd9:	mov    rdi,r15
  423fdc:	call   404590 <isspace@plt+0xc80>
  423fe1:	mov    QWORD PTR [r14+0x7c0],r15
  423fe8:	mov    rdx,QWORD PTR [r14+0x30]
  423fec:	mov    rdi,r14
  423fef:	mov    esi,0xa
  423ff4:	xor    eax,eax
  423ff6:	call   41fe60 <isspace@plt+0x1c550>
  423ffb:	mov    al,0x1
  423ffd:	jmp    424001 <isspace@plt+0x206f1>
  423fff:	xor    eax,eax
  424001:	mov    rcx,QWORD PTR fs:0x28
  42400a:	cmp    rcx,QWORD PTR [rsp+0x8]
  42400f:	jne    42401b <isspace@plt+0x2070b>
  424011:	add    rsp,0x10
  424015:	pop    rbx
  424016:	pop    r14
  424018:	pop    r15
  42401a:	ret    
  42401b:	call   403280 <__stack_chk_fail@plt>
  424020:	push   rax
  424021:	mov    rax,QWORD PTR fs:0x28
  42402a:	mov    QWORD PTR [rsp],rax
  42402e:	mov    rax,QWORD PTR [rdi+0x7c0]
  424035:	test   rax,rax
  424038:	je     424081 <isspace@plt+0x20771>
  42403a:	mov    rcx,QWORD PTR [rax+0x8]
  42403e:	cmp    rcx,0x2
  424042:	jb     42405b <isspace@plt+0x2074b>
  424044:	lea    rdx,[rcx-0x1]
  424048:	mov    QWORD PTR [rax+0x8],rdx
  42404c:	mov    rax,QWORD PTR [rax]
  42404f:	mov    BYTE PTR [rcx+rax*1-0x2],0x0
  424054:	mov    rax,QWORD PTR [rdi+0x7c0]
  42405b:	mov    QWORD PTR [rdi+0x7c8],rax
  424062:	mov    QWORD PTR [rdi+0x7c0],0x0
  42406d:	mov    rdx,QWORD PTR [rdi+0x30]
  424071:	mov    esi,0xa
  424076:	xor    eax,eax
  424078:	call   41fe60 <isspace@plt+0x1c550>
  42407d:	mov    al,0x1
  42407f:	jmp    424083 <isspace@plt+0x20773>
  424081:	xor    eax,eax
  424083:	mov    rcx,QWORD PTR fs:0x28
  42408c:	cmp    rcx,QWORD PTR [rsp]
  424090:	jne    424094 <isspace@plt+0x20784>
  424092:	pop    rcx
  424093:	ret    
  424094:	call   403280 <__stack_chk_fail@plt>
  424099:	nop    DWORD PTR [rax+0x0]
  4240a0:	push   rax
  4240a1:	mov    rax,QWORD PTR fs:0x28
  4240aa:	mov    QWORD PTR [rsp],rax
  4240ae:	cmp    QWORD PTR [rdi+0x7c0],0x0
  4240b6:	setne  al
  4240b9:	mov    rcx,QWORD PTR fs:0x28
  4240c2:	cmp    rcx,QWORD PTR [rsp]
  4240c6:	jne    4240ca <isspace@plt+0x207ba>
  4240c8:	pop    rcx
  4240c9:	ret    
  4240ca:	call   403280 <__stack_chk_fail@plt>
  4240cf:	nop
  4240d0:	push   rbp
  4240d1:	push   r14
  4240d3:	push   rbx
  4240d4:	sub    rsp,0x10
  4240d8:	mov    r14,rdi
  4240db:	mov    rax,QWORD PTR fs:0x28
  4240e4:	mov    QWORD PTR [rsp+0x8],rax
  4240e9:	cmp    esi,0x4b
  4240ec:	je     424142 <isspace@plt+0x20832>
  4240ee:	cmp    esi,0x11
  4240f1:	je     42410d <isspace@plt+0x207fd>
  4240f3:	cmp    esi,0x10
  4240f6:	jne    4241e8 <isspace@plt+0x208d8>
  4240fc:	mov    rdi,r14
  4240ff:	mov    esi,0x35
  424104:	xor    eax,eax
  424106:	call   4279b0 <isspace@plt+0x240a0>
  42410b:	jmp    424129 <isspace@plt+0x20819>
  42410d:	lea    rsi,[r14+0x2e8]
  424114:	mov    rdi,r14
  424117:	xor    edx,edx
  424119:	call   42a330 <isspace@plt+0x26a20>
  42411e:	mov    rdi,r14
  424121:	mov    rsi,rax
  424124:	call   424240 <isspace@plt+0x20930>
  424129:	mov    rcx,QWORD PTR fs:0x28
  424132:	cmp    rcx,QWORD PTR [rsp+0x8]
  424137:	je     42422b <isspace@plt+0x2091b>
  42413d:	jmp    424237 <isspace@plt+0x20927>
  424142:	mov    rbx,QWORD PTR [r14+0x7c8]
  424149:	test   rbx,rbx
  42414c:	je     424217 <isspace@plt+0x20907>
  424152:	cmp    rbx,QWORD PTR [r14+0x7c0]
  424159:	je     424217 <isspace@plt+0x20907>
  42415f:	mov    eax,DWORD PTR [r14+0x910]
  424166:	cmp    eax,0xffffffff
  424169:	mov    ebp,0x1
  42416e:	vxorps xmm0,xmm0,xmm0
  424172:	vmovups YMMWORD PTR [r14+0x910],ymm0
  42417b:	cmovne ebp,eax
  42417e:	vmovups YMMWORD PTR [r14+0x930],ymm0
  424187:	mov    QWORD PTR [r14+0x950],0x0
  424192:	mov    DWORD PTR [r14+0x910],0xffffffff
  42419d:	test   ebp,ebp
  42419f:	jle    4241c2 <isspace@plt+0x208b2>
  4241a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4241ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4241b0:	mov    rdi,r14
  4241b3:	mov    rsi,rbx
  4241b6:	vzeroupper 
  4241b9:	call   424370 <isspace@plt+0x20a60>
  4241be:	dec    ebp
  4241c0:	jne    4241b0 <isspace@plt+0x208a0>
  4241c2:	mov    rax,QWORD PTR [r14+0x30]
  4241c6:	mov    bl,0x1
  4241c8:	test   rax,rax
  4241cb:	je     424219 <isspace@plt+0x20909>
  4241cd:	cmp    QWORD PTR [r14+0x7d0],0x0
  4241d5:	jne    424219 <isspace@plt+0x20909>
  4241d7:	mov    rax,QWORD PTR [rax+0x10]
  4241db:	mov    rdi,QWORD PTR [rax]
  4241de:	vzeroupper 
  4241e1:	call   40f6a0 <isspace@plt+0xbd90>
  4241e6:	jmp    424219 <isspace@plt+0x20909>
  4241e8:	lea    eax,[rsi-0x31]
  4241eb:	cmp    eax,0x1a
  4241ee:	cmovb  esi,eax
  4241f1:	cmp    esi,0x2f
  4241f4:	ja     424217 <isspace@plt+0x20907>
  4241f6:	mov    eax,esi
  4241f8:	lea    rax,[rax+rax*4]
  4241fc:	lea    rdi,[r14+rax*8]
  424200:	add    rdi,0x40
  424204:	xor    esi,esi
  424206:	call   403d30 <isspace@plt+0x420>
  42420b:	mov    rbx,rax
  42420e:	test   rbx,rbx
  424211:	jne    424152 <isspace@plt+0x20842>
  424217:	xor    ebx,ebx
  424219:	mov    rax,QWORD PTR fs:0x28
  424222:	cmp    rax,QWORD PTR [rsp+0x8]
  424227:	jne    424237 <isspace@plt+0x20927>
  424229:	mov    eax,ebx
  42422b:	add    rsp,0x10
  42422f:	pop    rbx
  424230:	pop    r14
  424232:	pop    rbp
  424233:	vzeroupper 
  424236:	ret    
  424237:	vzeroupper 
  42423a:	call   403280 <__stack_chk_fail@plt>
  42423f:	nop
  424240:	push   rbp
  424241:	push   r14
  424243:	push   rbx
  424244:	sub    rsp,0x10
  424248:	mov    rax,QWORD PTR fs:0x28
  424251:	mov    QWORD PTR [rsp+0x8],rax
  424256:	test   rsi,rsi
  424259:	je     4242fc <isspace@plt+0x209ec>
  42425f:	mov    r14,rdi
  424262:	dec    rsi
  424265:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42426f:	nop
  424270:	cmp    BYTE PTR [rsi+0x1],0x3a
  424274:	lea    rsi,[rsi+0x1]
  424278:	je     424270 <isspace@plt+0x20960>
  42427a:	mov    rdi,rsi
  42427d:	call   403850 <strdup@plt>
  424282:	test   rax,rax
  424285:	je     424301 <isspace@plt+0x209f1>
  424287:	mov    rbx,rax
  42428a:	mov    rdi,rax
  42428d:	call   403250 <strlen@plt>
  424292:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42429c:	nop    DWORD PTR [rax+0x0]
  4242a0:	mov    rbp,rax
  4242a3:	test   rax,rax
  4242a6:	je     4242c0 <isspace@plt+0x209b0>
  4242a8:	call   4038f0 <__ctype_b_loc@plt>
  4242ad:	mov    rcx,QWORD PTR [rax]
  4242b0:	lea    rax,[rbp-0x1]
  4242b4:	movzx  edx,BYTE PTR [rbx+rbp*1-0x1]
  4242b9:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
  4242be:	jne    4242a0 <isspace@plt+0x20990>
  4242c0:	mov    BYTE PTR [rbx+rbp*1],0x0
  4242c4:	mov    rdi,r14
  4242c7:	mov    rsi,rbx
  4242ca:	call   4090f0 <isspace@plt+0x57e0>
  4242cf:	test   eax,eax
  4242d1:	sete   bpl
  4242d5:	je     4242f2 <isspace@plt+0x209e2>
  4242d7:	mov    edi,eax
  4242d9:	call   4090b0 <isspace@plt+0x57a0>
  4242de:	lea    rsi,[rip+0xb785]        # 42fa6a <isspace@plt+0x2c15a>
  4242e5:	mov    rdi,r14
  4242e8:	mov    rdx,rax
  4242eb:	xor    eax,eax
  4242ed:	call   4299f0 <isspace@plt+0x260e0>
  4242f2:	mov    rdi,rbx
  4242f5:	call   4030d0 <free@plt>
  4242fa:	jmp    424303 <isspace@plt+0x209f3>
  4242fc:	mov    bpl,0x1
  4242ff:	jmp    424303 <isspace@plt+0x209f3>
  424301:	xor    ebp,ebp
  424303:	mov    rax,QWORD PTR fs:0x28
  42430c:	cmp    rax,QWORD PTR [rsp+0x8]
  424311:	jne    42431e <isspace@plt+0x20a0e>
  424313:	mov    eax,ebp
  424315:	add    rsp,0x10
  424319:	pop    rbx
  42431a:	pop    r14
  42431c:	pop    rbp
  42431d:	ret    
  42431e:	call   403280 <__stack_chk_fail@plt>
  424323:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42432d:	nop    DWORD PTR [rax]
  424330:	push   rax
  424331:	mov    eax,esi
  424333:	mov    rcx,QWORD PTR fs:0x28
  42433c:	mov    QWORD PTR [rsp],rcx
  424340:	mov    ecx,DWORD PTR [rdi+0x910]
  424346:	cmp    ecx,0xffffffff
  424349:	cmovne eax,ecx
  42434c:	mov    rcx,QWORD PTR fs:0x28
  424355:	cmp    rcx,QWORD PTR [rsp]
  424359:	jne    42435d <isspace@plt+0x20a4d>
  42435b:	pop    rcx
  42435c:	ret    
  42435d:	call   403280 <__stack_chk_fail@plt>
  424362:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42436c:	nop    DWORD PTR [rax+0x0]
  424370:	push   rbp
  424371:	push   r15
  424373:	push   r14
  424375:	push   r13
  424377:	push   r12
  424379:	push   rbx
  42437a:	push   rax
  42437b:	mov    rbx,rsi
  42437e:	mov    r15,rdi
  424381:	mov    rax,QWORD PTR fs:0x28
  42438a:	mov    QWORD PTR [rsp],rax
  42438e:	mov    r13,QWORD PTR [rdi+0x7d0]
  424395:	mov    QWORD PTR [rdi+0x7d0],rsi
  42439c:	add    rdi,0x8f0
  4243a3:	call   404d20 <isspace@plt+0x1410>
  4243a8:	mov    r12,QWORD PTR [rbx]
  4243ab:	test   r12,r12
  4243ae:	je     424414 <isspace@plt+0x20b04>
  4243b0:	mov    r14,rax
  4243b3:	mov    rdi,r15
  4243b6:	mov    rsi,r12
  4243b9:	call   422ec0 <isspace@plt+0x1f5b0>
  4243be:	test   rax,rax
  4243c1:	je     424401 <isspace@plt+0x20af1>
  4243c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4243cd:	nop    DWORD PTR [rax]
  4243d0:	mov    rbx,rax
  4243d3:	movzx  ebp,BYTE PTR [rax]
  4243d6:	mov    BYTE PTR [rax],0x0
  4243d9:	mov    rdi,r15
  4243dc:	mov    rsi,r12
  4243df:	mov    rdx,r14
  4243e2:	xor    ecx,ecx
  4243e4:	call   4238c0 <isspace@plt+0x1ffb0>
  4243e9:	mov    BYTE PTR [rbx],bpl
  4243ec:	mov    rdi,r15
  4243ef:	mov    rsi,rbx
  4243f2:	call   422ec0 <isspace@plt+0x1f5b0>
  4243f7:	mov    r12,rbx
  4243fa:	test   rax,rax
  4243fd:	jne    4243d0 <isspace@plt+0x20ac0>
  4243ff:	jmp    424404 <isspace@plt+0x20af4>
  424401:	mov    rbx,r12
  424404:	mov    rdi,r15
  424407:	mov    rsi,rbx
  42440a:	mov    rdx,r14
  42440d:	xor    ecx,ecx
  42440f:	call   4238c0 <isspace@plt+0x1ffb0>
  424414:	mov    QWORD PTR [r15+0x7d0],r13
  42441b:	mov    rax,QWORD PTR fs:0x28
  424424:	cmp    rax,QWORD PTR [rsp]
  424428:	jne    424439 <isspace@plt+0x20b29>
  42442a:	add    rsp,0x8
  42442e:	pop    rbx
  42442f:	pop    r12
  424431:	pop    r13
  424433:	pop    r14
  424435:	pop    r15
  424437:	pop    rbp
  424438:	ret    
  424439:	call   403280 <__stack_chk_fail@plt>
  42443e:	xchg   ax,ax
  424440:	push   rbp
  424441:	push   r15
  424443:	push   r14
  424445:	push   r13
  424447:	push   r12
  424449:	push   rbx
  42444a:	sub    rsp,0x58
  42444e:	mov    rbx,rdi
  424451:	mov    rax,QWORD PTR fs:0x28
  42445a:	mov    QWORD PTR [rsp+0x50],rax
  42445f:	lea    r13,[rdi+0x958]
  424466:	mov    r14,QWORD PTR [rdi+0x980]
  42446d:	lea    r12,[rdi+0x910]
  424474:	mov    ebp,DWORD PTR [rdi+0x910]
  42447a:	cmp    ebp,0xffffffff
  42447d:	je     424485 <isspace@plt+0x20b75>
  42447f:	mov    DWORD PTR [r13+0x0],ebp
  424483:	jmp    424489 <isspace@plt+0x20b79>
  424485:	mov    ebp,DWORD PTR [r13+0x0]
  424489:	mov    rax,QWORD PTR [r13+0x40]
  42448d:	mov    QWORD PTR [r12+0x40],rax
  424492:	mov    eax,DWORD PTR [r13+0x0]
  424496:	vmovups xmm0,XMMWORD PTR [r13+0x4]
  42449c:	mov    rcx,QWORD PTR [r13+0x14]
  4244a0:	mov    edx,DWORD PTR [r13+0x1c]
  4244a4:	vmovups ymm1,YMMWORD PTR [r13+0x20]
  4244aa:	vmovups YMMWORD PTR [r12+0x20],ymm1
  4244b1:	mov    DWORD PTR [r12],eax
  4244b5:	vmovups XMMWORD PTR [r12+0x4],xmm0
  4244bc:	mov    QWORD PTR [r12+0x14],rcx
  4244c1:	mov    DWORD PTR [r12+0x1c],edx
  4244c6:	mov    rdi,rbx
  4244c9:	mov    esi,0x1
  4244ce:	vzeroupper 
  4244d1:	call   426fe0 <isspace@plt+0x236d0>
  4244d6:	mov    rdi,rbx
  4244d9:	call   4222e0 <isspace@plt+0x1e9d0>
  4244de:	test   r14,r14
  4244e1:	je     4245b7 <isspace@plt+0x20ca7>
  4244e7:	mov    esi,0x1
  4244ec:	mov    r15,QWORD PTR [rbx+0x9a0]
  4244f3:	vmovups xmm0,XMMWORD PTR [r13+0x0]
  4244f9:	vmovaps XMMWORD PTR [rsp+0x40],xmm0
  4244ff:	mov    rdx,QWORD PTR [rbx+0x968]
  424506:	vmovups ymm0,YMMWORD PTR [rbx+0x980]
  42450e:	vmovups YMMWORD PTR [rsp+0x20],ymm0
  424514:	vmovups ymm0,YMMWORD PTR [rbx+0x970]
  42451c:	vmovups YMMWORD PTR [rsp+0x10],ymm0
  424522:	lea    rax,[rip+0x1cd57]        # 441280 <isspace@plt+0x3d970>
  424529:	lea    rcx,[rax+0x10]
  42452d:	cmp    rdx,rcx
  424530:	mov    ecx,ebp
  424532:	cmove  ebp,esi
  424535:	test   ecx,ecx
  424537:	cmovle ebp,esi
  42453a:	add    rax,0x70
  42453e:	mov    QWORD PTR [rsp+0x8],rdx
  424543:	cmp    rdx,rax
  424546:	jne    424550 <isspace@plt+0x20c40>
  424548:	mov    DWORD PTR [r13+0x0],0x1
  424550:	lea    rax,[rbx+0x970]
  424557:	mov    QWORD PTR [rsp],rax
  42455b:	test   ebp,ebp
  42455d:	jle    424586 <isspace@plt+0x20c76>
  42455f:	nop
  424560:	cmp    DWORD PTR [rbx+0x9c0],0x0
  424567:	jne    424586 <isspace@plt+0x20c76>
  424569:	mov    rdi,rbx
  42456c:	mov    rsi,r15
  42456f:	vzeroupper 
  424572:	call   426f50 <isspace@plt+0x23640>
  424577:	mov    rdi,rbx
  42457a:	mov    rsi,r14
  42457d:	call   424370 <isspace@plt+0x20a60>
  424582:	dec    ebp
  424584:	jne    424560 <isspace@plt+0x20c50>
  424586:	vmovaps xmm0,XMMWORD PTR [rsp+0x40]
  42458c:	vmovups XMMWORD PTR [r13+0x0],xmm0
  424592:	mov    rax,QWORD PTR [rsp+0x8]
  424597:	mov    QWORD PTR [rbx+0x968],rax
  42459e:	vmovups ymm0,YMMWORD PTR [rsp+0x10]
  4245a4:	vmovups ymm1,YMMWORD PTR [rsp+0x20]
  4245aa:	mov    rax,QWORD PTR [rsp]
  4245ae:	vmovups YMMWORD PTR [rax+0x10],ymm1
  4245b3:	vmovups YMMWORD PTR [rax],ymm0
  4245b7:	vxorps xmm0,xmm0,xmm0
  4245bb:	vmovups YMMWORD PTR [r12+0x20],ymm0
  4245c2:	vmovups YMMWORD PTR [r12],ymm0
  4245c8:	mov    QWORD PTR [r12+0x40],0x0
  4245d1:	mov    DWORD PTR [rbx+0x910],0xffffffff
  4245db:	mov    rax,QWORD PTR [rbx+0x30]
  4245df:	test   rax,rax
  4245e2:	je     4245fd <isspace@plt+0x20ced>
  4245e4:	cmp    QWORD PTR [rbx+0x7d0],0x0
  4245ec:	jne    4245fd <isspace@plt+0x20ced>
  4245ee:	mov    rax,QWORD PTR [rax+0x10]
  4245f2:	mov    rdi,QWORD PTR [rax]
  4245f5:	vzeroupper 
  4245f8:	call   40f6a0 <isspace@plt+0xbd90>
  4245fd:	mov    rax,QWORD PTR fs:0x28
  424606:	cmp    rax,QWORD PTR [rsp+0x50]
  42460b:	jne    42461f <isspace@plt+0x20d0f>
  42460d:	add    rsp,0x58
  424611:	pop    rbx
  424612:	pop    r12
  424614:	pop    r13
  424616:	pop    r14
  424618:	pop    r15
  42461a:	pop    rbp
  42461b:	vzeroupper 
  42461e:	ret    
  42461f:	vzeroupper 
  424622:	call   403280 <__stack_chk_fail@plt>
  424627:	nop    WORD PTR [rax+rax*1+0x0]
  424630:	push   rax
  424631:	mov    rax,QWORD PTR fs:0x28
  42463a:	mov    QWORD PTR [rsp],rax
  42463e:	mov    eax,DWORD PTR [rdi+0x910]
  424644:	mov    rcx,QWORD PTR fs:0x28
  42464d:	cmp    rcx,QWORD PTR [rsp]
  424651:	jne    424655 <isspace@plt+0x20d45>
  424653:	pop    rcx
  424654:	ret    
  424655:	call   403280 <__stack_chk_fail@plt>
  42465a:	nop    WORD PTR [rax+rax*1+0x0]
  424660:	push   rax
  424661:	mov    rax,QWORD PTR fs:0x28
  42466a:	mov    QWORD PTR [rsp],rax
  42466e:	cmp    esi,0xfffffffe
  424671:	mov    eax,0xffffffff
  424676:	cmovg  eax,esi
  424679:	mov    DWORD PTR [rdi+0x910],eax
  42467f:	mov    rax,QWORD PTR fs:0x28
  424688:	cmp    rax,QWORD PTR [rsp]
  42468c:	jne    424690 <isspace@plt+0x20d80>
  42468e:	pop    rax
  42468f:	ret    
  424690:	call   403280 <__stack_chk_fail@plt>
  424695:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42469f:	nop
  4246a0:	push   rax
  4246a1:	mov    edx,esi
  4246a3:	mov    rcx,QWORD PTR fs:0x28
  4246ac:	mov    QWORD PTR [rsp],rcx
  4246b0:	mov    ecx,DWORD PTR [rdi+0x910]
  4246b6:	cmp    ecx,0xffffffff
  4246b9:	cmovne edx,ecx
  4246bc:	mov    rcx,QWORD PTR fs:0x28
  4246c5:	cmp    rcx,QWORD PTR [rsp]
  4246c9:	jne    4246d4 <isspace@plt+0x20dc4>
  4246cb:	mov    rax,rdi
  4246ce:	shl    rdx,0x20
  4246d2:	pop    rcx
  4246d3:	ret    
  4246d4:	call   403280 <__stack_chk_fail@plt>
  4246d9:	nop    DWORD PTR [rax+0x0]
  4246e0:	push   rax
  4246e1:	mov    rcx,QWORD PTR fs:0x28
  4246ea:	mov    QWORD PTR [rsp],rcx
  4246ee:	mov    rcx,QWORD PTR fs:0x28
  4246f7:	cmp    rcx,QWORD PTR [rsp]
  4246fb:	jne    424708 <isspace@plt+0x20df8>
  4246fd:	mov    edx,esi
  4246ff:	mov    rax,rdi
  424702:	shl    rdx,0x20
  424706:	pop    rcx
  424707:	ret    
  424708:	call   403280 <__stack_chk_fail@plt>
  42470d:	nop    DWORD PTR [rax]
  424710:	push   rax
  424711:	mov    rax,QWORD PTR fs:0x28
  42471a:	mov    QWORD PTR [rsp],rax
  42471e:	mov    rax,QWORD PTR [rdi]
  424721:	cmp    DWORD PTR [rax+0x9c0],0x0
  424728:	je     42472e <isspace@plt+0x20e1e>
  42472a:	xor    eax,eax
  42472c:	jmp    42473d <isspace@plt+0x20e2d>
  42472e:	mov    eax,DWORD PTR [rdi+0x8]
  424731:	lea    ecx,[rax+0x1]
  424734:	mov    DWORD PTR [rdi+0x8],ecx
  424737:	cmp    eax,DWORD PTR [rdi+0xc]
  42473a:	setl   al
  42473d:	mov    rcx,QWORD PTR fs:0x28
  424746:	cmp    rcx,QWORD PTR [rsp]
  42474a:	jne    42474e <isspace@plt+0x20e3e>
  42474c:	pop    rcx
  42474d:	ret    
  42474e:	call   403280 <__stack_chk_fail@plt>
  424753:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42475d:	nop    DWORD PTR [rax]
  424760:	push   rax
  424761:	mov    rax,QWORD PTR fs:0x28
  42476a:	mov    QWORD PTR [rsp],rax
  42476e:	mov    BYTE PTR [rdi+0x9b8],0x0
  424775:	mov    DWORD PTR [rdi+0x9bc],esi
  42477b:	mov    rax,QWORD PTR fs:0x28
  424784:	cmp    rax,QWORD PTR [rsp]
  424788:	jne    42478c <isspace@plt+0x20e7c>
  42478a:	pop    rax
  42478b:	ret    
  42478c:	call   403280 <__stack_chk_fail@plt>
  424791:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42479b:	nop    DWORD PTR [rax+rax*1+0x0]
  4247a0:	push   rbp
  4247a1:	push   r15
  4247a3:	push   r14
  4247a5:	push   r13
  4247a7:	push   r12
  4247a9:	push   rbx
  4247aa:	sub    rsp,0x28
  4247ae:	mov    rax,QWORD PTR fs:0x28
  4247b7:	mov    QWORD PTR [rsp+0x20],rax
  4247bc:	mov    rax,QWORD PTR [rdi+0x30]
  4247c0:	mov    QWORD PTR [rsp+0x8],rax
  4247c5:	test   rax,rax
  4247c8:	je     4248f9 <isspace@plt+0x20fe9>
  4247ce:	mov    r14,rdi
  4247d1:	cmp    BYTE PTR [rdi+0x7fc],0x0
  4247d8:	je     4248e5 <isspace@plt+0x20fd5>
  4247de:	mov    eax,DWORD PTR [r14+0x7f8]
  4247e5:	cmp    eax,0x9
  4247e8:	mov    ebx,0x8
  4247ed:	cmovl  ebx,eax
  4247f0:	mov    rax,QWORD PTR [rsp+0x8]
  4247f5:	mov    rdi,QWORD PTR [rax+0x18]
  4247f9:	call   41efa0 <isspace@plt+0x1b690>
  4247fe:	test   rax,rax
  424801:	je     4248f9 <isspace@plt+0x20fe9>
  424807:	mov    r15,rax
  42480a:	mov    DWORD PTR [rsp+0x4],ebx
  42480e:	jmp    424839 <isspace@plt+0x20f29>
  424810:	add    r12,r13
  424813:	mov    rdi,r15
  424816:	mov    rsi,r12
  424819:	call   41e5e0 <isspace@plt+0x1acd0>
  42481e:	mov    rdi,r15
  424821:	call   41f080 <isspace@plt+0x1b770>
  424826:	mov    r15,rax
  424829:	test   rax,rax
  42482c:	mov    r14,rbx
  42482f:	mov    ebx,DWORD PTR [rsp+0x4]
  424833:	je     4248f9 <isspace@plt+0x20fe9>
  424839:	mov    rdi,r15
  42483c:	call   41af10 <isspace@plt+0x17600>
  424841:	mov    r12,rax
  424844:	mov    rax,QWORD PTR [rsp+0x8]
  424849:	mov    rax,QWORD PTR [rax+0x10]
  42484d:	mov    rdi,QWORD PTR [rax]
  424850:	mov    rsi,r12
  424853:	call   4136d0 <isspace@plt+0xfdc0>
  424858:	cdq    
  424859:	idiv   ebx
  42485b:	mov    ebp,ebx
  42485d:	sub    ebp,edx
  42485f:	jle    424877 <isspace@plt+0x20f67>
  424861:	not    edx
  424863:	add    edx,ebx
  424865:	inc    rdx
  424868:	lea    rdi,[rsp+0x17]
  42486d:	mov    esi,0x20
  424872:	call   403360 <memset@plt>
  424877:	movsxd r13,ebp
  42487a:	mov    BYTE PTR [rsp+r13*1+0x17],0x0
  424880:	mov    rbx,r14
  424883:	mov    rbp,QWORD PTR [r14+0x30]
  424887:	test   rbp,rbp
  42488a:	je     424810 <isspace@plt+0x20f00>
  42488c:	mov    rax,QWORD PTR [rbp+0x10]
  424890:	mov    rdi,QWORD PTR [rax]
  424893:	mov    rsi,r12
  424896:	lea    rdx,[rsp+0x17]
  42489b:	mov    rcx,r13
  42489e:	call   40efe0 <isspace@plt+0xb6d0>
  4248a3:	mov    rax,QWORD PTR [rbp+0x0]
  4248a7:	mov    r14,QWORD PTR [rax+0x28]
  4248ab:	test   r14,r14
  4248ae:	jne    4248d0 <isspace@plt+0x20fc0>
  4248b0:	jmp    424810 <isspace@plt+0x20f00>
  4248b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4248bf:	nop
  4248c0:	mov    r14,QWORD PTR [r14+0x2e0]
  4248c7:	test   r14,r14
  4248ca:	je     424810 <isspace@plt+0x20f00>
  4248d0:	mov    rax,QWORD PTR [r14+0x10]
  4248d4:	cmp    rax,QWORD PTR [rbp+0x10]
  4248d8:	jne    4248c0 <isspace@plt+0x20fb0>
  4248da:	mov    rdi,QWORD PTR [r14+0x18]
  4248de:	call   419f00 <isspace@plt+0x165f0>
  4248e3:	jmp    4248c0 <isspace@plt+0x20fb0>
  4248e5:	lea    rsi,[rip+0xc497]        # 430d83 <isspace@plt+0x2d473>
  4248ec:	mov    edx,0x1
  4248f1:	mov    rdi,r14
  4248f4:	call   421f60 <isspace@plt+0x1e650>
  4248f9:	mov    rax,QWORD PTR fs:0x28
  424902:	cmp    rax,QWORD PTR [rsp+0x20]
  424907:	jne    424918 <isspace@plt+0x21008>
  424909:	add    rsp,0x28
  42490d:	pop    rbx
  42490e:	pop    r12
  424910:	pop    r13
  424912:	pop    r14
  424914:	pop    r15
  424916:	pop    rbp
  424917:	ret    
  424918:	call   403280 <__stack_chk_fail@plt>
  42491d:	nop    DWORD PTR [rax]
  424920:	push   rbp
  424921:	push   r15
  424923:	push   r14
  424925:	push   r13
  424927:	push   r12
  424929:	push   rbx
  42492a:	sub    rsp,0x28
  42492e:	mov    r12,rdx
  424931:	mov    r14,rsi
  424934:	mov    rbx,rdi
  424937:	mov    rax,QWORD PTR fs:0x28
  424940:	mov    QWORD PTR [rsp+0x20],rax
  424945:	mov    rdi,rsi
  424948:	call   410890 <isspace@plt+0xcf80>
  42494d:	mov    r13,rax
  424950:	cmp    rax,r12
  424953:	jne    42497e <isspace@plt+0x2106e>
  424955:	mov    bpl,0x1
  424958:	test   r12,r12
  42495b:	je     424980 <isspace@plt+0x21070>
  42495d:	lea    rsi,[r12-0x1]
  424962:	lea    rdx,[rsp+0x1f]
  424967:	mov    rdi,r14
  42496a:	call   411060 <isspace@plt+0xd750>
  42496f:	test   al,al
  424971:	je     424980 <isspace@plt+0x21070>
  424973:	cmp    BYTE PTR [rsp+0x1f],0xa
  424978:	setne  bpl
  42497c:	jmp    424980 <isspace@plt+0x21070>
  42497e:	xor    ebp,ebp
  424980:	mov    DWORD PTR [rsp+0xc],ebp
  424984:	cmp    BYTE PTR [rbx+0x7fd],0x0
  42498b:	je     4249d8 <isspace@plt+0x210c8>
  42498d:	mov    QWORD PTR [rsp+0x10],r13
  424992:	mov    rdi,r14
  424995:	mov    rsi,r12
  424998:	call   413280 <isspace@plt+0xf970>
  42499d:	mov    rbx,rax
  4249a0:	mov    rdi,r14
  4249a3:	mov    rsi,rax
  4249a6:	call   4132e0 <isspace@plt+0xf9d0>
  4249ab:	mov    r13,rax
  4249ae:	mov    rdi,r14
  4249b1:	mov    rsi,rax
  4249b4:	call   413470 <isspace@plt+0xfb60>
  4249b9:	cmp    r13,r12
  4249bc:	cmova  r13,r12
  4249c0:	xor    ebp,ebp
  4249c2:	mov    r15,r13
  4249c5:	sub    r15,rbx
  4249c8:	cmovb  r15,rbp
  4249cc:	cmp    r13,rax
  4249cf:	jne    4249df <isspace@plt+0x210cf>
  4249d1:	mov    r13,QWORD PTR [rsp+0x10]
  4249d6:	jmp    424a10 <isspace@plt+0x21100>
  4249d8:	xor    ebp,ebp
  4249da:	xor    r15d,r15d
  4249dd:	jmp    424a0d <isspace@plt+0x210fd>
  4249df:	lea    rdi,[r15+0x1]
  4249e3:	call   4035d0 <malloc@plt>
  4249e8:	test   rax,rax
  4249eb:	mov    r13,QWORD PTR [rsp+0x10]
  4249f0:	je     424a0b <isspace@plt+0x210fb>
  4249f2:	mov    rbp,rax
  4249f5:	mov    rdi,r14
  4249f8:	mov    rsi,rbx
  4249fb:	mov    rdx,r15
  4249fe:	mov    rcx,rax
  424a01:	call   411130 <isspace@plt+0xd820>
  424a06:	mov    r15,rax
  424a09:	jmp    424a0d <isspace@plt+0x210fd>
  424a0b:	xor    ebp,ebp
  424a0d:	mov    rbx,r12
  424a10:	lea    rdx,[rip+0xbb42]        # 430559 <isspace@plt+0x2cc49>
  424a17:	mov    ecx,0x1
  424a1c:	mov    rdi,r14
  424a1f:	mov    rsi,rbx
  424a22:	call   40efe0 <isspace@plt+0xb6d0>
  424a27:	cmp    r13,r12
  424a2a:	jne    424a57 <isspace@plt+0x21147>
  424a2c:	cmp    BYTE PTR [rsp+0xc],0x0
  424a31:	je     424a54 <isspace@plt+0x21144>
  424a33:	mov    rdi,r14
  424a36:	call   410890 <isspace@plt+0xcf80>
  424a3b:	lea    rdx,[rip+0xbb17]        # 430559 <isspace@plt+0x2cc49>
  424a42:	mov    ecx,0x1
  424a47:	mov    rdi,r14
  424a4a:	mov    rsi,rax
  424a4d:	call   40efe0 <isspace@plt+0xb6d0>
  424a52:	jmp    424a57 <isspace@plt+0x21147>
  424a54:	dec    rbx
  424a57:	inc    rbx
  424a5a:	test   rbp,rbp
  424a5d:	je     424a70 <isspace@plt+0x21160>
  424a5f:	mov    rdi,r14
  424a62:	mov    rsi,rbx
  424a65:	mov    rdx,rbp
  424a68:	mov    rcx,r15
  424a6b:	call   40efe0 <isspace@plt+0xb6d0>
  424a70:	mov    rdi,rbp
  424a73:	call   4030d0 <free@plt>
  424a78:	mov    rax,QWORD PTR fs:0x28
  424a81:	cmp    rax,QWORD PTR [rsp+0x20]
  424a86:	jne    424a9d <isspace@plt+0x2118d>
  424a88:	add    rbx,r15
  424a8b:	mov    rax,rbx
  424a8e:	add    rsp,0x28
  424a92:	pop    rbx
  424a93:	pop    r12
  424a95:	pop    r13
  424a97:	pop    r14
  424a99:	pop    r15
  424a9b:	pop    rbp
  424a9c:	ret    
  424a9d:	call   403280 <__stack_chk_fail@plt>
  424aa2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424aac:	nop    DWORD PTR [rax+0x0]
  424ab0:	push   rbp
  424ab1:	push   r15
  424ab3:	push   r14
  424ab5:	push   r13
  424ab7:	push   r12
  424ab9:	push   rbx
  424aba:	push   rax
  424abb:	mov    rax,QWORD PTR fs:0x28
  424ac4:	mov    QWORD PTR [rsp],rax
  424ac8:	mov    rbp,QWORD PTR [rdi+0x30]
  424acc:	test   rbp,rbp
  424acf:	je     424b71 <isspace@plt+0x21261>
  424ad5:	mov    r14,rdi
  424ad8:	mov    rax,QWORD PTR [rbp+0x10]
  424adc:	mov    rdi,QWORD PTR [rbp+0x18]
  424ae0:	mov    r15,QWORD PTR [rax]
  424ae3:	call   41efa0 <isspace@plt+0x1b690>
  424ae8:	test   rax,rax
  424aeb:	je     424b32 <isspace@plt+0x21222>
  424aed:	mov    rbx,rax
  424af0:	mov    rdi,rbx
  424af3:	call   41af10 <isspace@plt+0x17600>
  424af8:	mov    r12,rax
  424afb:	mov    rdi,r14
  424afe:	mov    rsi,r15
  424b01:	mov    rdx,rax
  424b04:	call   424920 <isspace@plt+0x21010>
  424b09:	mov    r13,rax
  424b0c:	mov    rdi,rbx
  424b0f:	mov    rsi,r12
  424b12:	call   41a7c0 <isspace@plt+0x16eb0>
  424b17:	mov    rdi,rbx
  424b1a:	mov    rsi,r13
  424b1d:	call   41a7c0 <isspace@plt+0x16eb0>
  424b22:	mov    rdi,rbx
  424b25:	call   41f080 <isspace@plt+0x1b770>
  424b2a:	mov    rbx,rax
  424b2d:	test   rax,rax
  424b30:	jne    424af0 <isspace@plt+0x211e0>
  424b32:	mov    rax,QWORD PTR [rbp+0x0]
  424b36:	mov    rbx,QWORD PTR [rax+0x28]
  424b3a:	test   rbx,rbx
  424b3d:	jne    424b5c <isspace@plt+0x2124c>
  424b3f:	jmp    424b71 <isspace@plt+0x21261>
  424b41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424b4b:	nop    DWORD PTR [rax+rax*1+0x0]
  424b50:	mov    rbx,QWORD PTR [rbx+0x2e0]
  424b57:	test   rbx,rbx
  424b5a:	je     424b71 <isspace@plt+0x21261>
  424b5c:	mov    rax,QWORD PTR [rbx+0x10]
  424b60:	cmp    rax,QWORD PTR [rbp+0x10]
  424b64:	jne    424b50 <isspace@plt+0x21240>
  424b66:	mov    rdi,QWORD PTR [rbx+0x18]
  424b6a:	call   419f00 <isspace@plt+0x165f0>
  424b6f:	jmp    424b50 <isspace@plt+0x21240>
  424b71:	mov    rax,QWORD PTR fs:0x28
  424b7a:	cmp    rax,QWORD PTR [rsp]
  424b7e:	jne    424b8f <isspace@plt+0x2127f>
  424b80:	add    rsp,0x8
  424b84:	pop    rbx
  424b85:	pop    r12
  424b87:	pop    r13
  424b89:	pop    r14
  424b8b:	pop    r15
  424b8d:	pop    rbp
  424b8e:	ret    
  424b8f:	call   403280 <__stack_chk_fail@plt>
  424b94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424b9e:	xchg   ax,ax
  424ba0:	push   r15
  424ba2:	push   r14
  424ba4:	push   rbx
  424ba5:	sub    rsp,0x10
  424ba9:	mov    r15,rsi
  424bac:	mov    r14,rdi
  424baf:	mov    rax,QWORD PTR fs:0x28
  424bb8:	mov    QWORD PTR [rsp+0x8],rax
  424bbd:	test   rsi,rsi
  424bc0:	jne    424bdd <isspace@plt+0x212cd>
  424bc2:	lea    rsi,[r14+0x2c0]
  424bc9:	xor    ebx,ebx
  424bcb:	mov    rdi,r14
  424bce:	xor    edx,edx
  424bd0:	call   42a330 <isspace@plt+0x26a20>
  424bd5:	mov    r15,rax
  424bd8:	test   rax,rax
  424bdb:	je     424c24 <isspace@plt+0x21314>
  424bdd:	call   42ad80 <isspace@plt+0x27470>
  424be2:	test   rax,rax
  424be5:	je     424c0e <isspace@plt+0x212fe>
  424be7:	mov    rbx,rax
  424bea:	movzx  edx,BYTE PTR [r14+0xb60]
  424bf2:	add    edx,edx
  424bf4:	or     edx,0x5
  424bf7:	mov    rdi,rax
  424bfa:	mov    rsi,r15
  424bfd:	call   42ade0 <isspace@plt+0x274d0>
  424c02:	test   eax,eax
  424c04:	je     424c12 <isspace@plt+0x21302>
  424c06:	mov    rdi,rbx
  424c09:	call   42ae70 <isspace@plt+0x27560>
  424c0e:	xor    ebx,ebx
  424c10:	jmp    424c24 <isspace@plt+0x21314>
  424c12:	lea    rsi,[r14+0x2c0]
  424c19:	mov    rdi,r14
  424c1c:	mov    rdx,r15
  424c1f:	call   42a480 <isspace@plt+0x26b70>
  424c24:	mov    rax,QWORD PTR fs:0x28
  424c2d:	cmp    rax,QWORD PTR [rsp+0x8]
  424c32:	jne    424c41 <isspace@plt+0x21331>
  424c34:	mov    rax,rbx
  424c37:	add    rsp,0x10
  424c3b:	pop    rbx
  424c3c:	pop    r14
  424c3e:	pop    r15
  424c40:	ret    
  424c41:	call   403280 <__stack_chk_fail@plt>
  424c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424c50:	push   rbp
  424c51:	mov    rbp,rsp
  424c54:	push   r15
  424c56:	push   r14
  424c58:	push   r13
  424c5a:	push   r12
  424c5c:	push   rbx
  424c5d:	and    rsp,0xffffffffffffffe0
  424c61:	sub    rsp,0x22c0
  424c68:	mov    r12,r9
  424c6b:	mov    rbx,r8
  424c6e:	mov    QWORD PTR [rsp+0x20],rcx
  424c73:	mov    r15,rdx
  424c76:	mov    QWORD PTR [rsp],rdi
  424c7a:	mov    rax,QWORD PTR fs:0x28
  424c83:	mov    QWORD PTR [rsp+0x22a0],rax
  424c8b:	mov    QWORD PTR [rsp+0x18],rsi
  424c90:	mov    rax,QWORD PTR [rsi]
  424c93:	mov    QWORD PTR [rsp+0x28],rax
  424c98:	mov    DWORD PTR [rsp+0x4c],0xffffffff
  424ca0:	mov    rdi,rdx
  424ca3:	call   416fc0 <isspace@plt+0x136b0>
  424ca8:	mov    r13d,eax
  424cab:	test   al,al
  424cad:	je     424cbc <isspace@plt+0x213ac>
  424caf:	vmovups xmm0,XMMWORD PTR [r15]
  424cb4:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  424cba:	jmp    424ccf <isspace@plt+0x213bf>
  424cbc:	xor    edi,edi
  424cbe:	xor    esi,esi
  424cc0:	call   417250 <isspace@plt+0x13940>
  424cc5:	mov    QWORD PTR [rsp+0x30],rax
  424cca:	mov    QWORD PTR [rsp+0x38],rdx
  424ccf:	lea    rdi,[rsp+0x2298]
  424cd7:	call   4033d0 <pipe@plt>
  424cdc:	mov    r14d,0xffffffff
  424ce2:	cmp    eax,0xffffffff
  424ce5:	je     425534 <isspace@plt+0x21c24>
  424ceb:	lea    rdi,[rsp+0x2290]
  424cf3:	call   4033d0 <pipe@plt>
  424cf8:	cmp    eax,0xffffffff
  424cfb:	je     424db5 <isspace@plt+0x214a5>
  424d01:	lea    rdi,[rsp+0x2288]
  424d09:	call   4033d0 <pipe@plt>
  424d0e:	cmp    eax,0xffffffff
  424d11:	je     424dd2 <isspace@plt+0x214c2>
  424d17:	mov    QWORD PTR [rsp+0x10],rbx
  424d1c:	mov    QWORD PTR [rsp+0x8],r12
  424d21:	mov    rax,QWORD PTR [rsp]
  424d25:	mov    rdi,QWORD PTR [rax]
  424d28:	call   QWORD PTR [rdi+0x80]
  424d2e:	call   4038d0 <fork@plt>
  424d33:	test   eax,eax
  424d35:	je     424e07 <isspace@plt+0x214f7>
  424d3b:	mov    r12d,eax
  424d3e:	cmp    eax,0xffffffff
  424d41:	jne    424f68 <isspace@plt+0x21658>
  424d47:	mov    edi,DWORD PTR [rsp+0x2298]
  424d4e:	call   4033c0 <close@plt>
  424d53:	mov    edi,DWORD PTR [rsp+0x229c]
  424d5a:	call   4033c0 <close@plt>
  424d5f:	mov    edi,DWORD PTR [rsp+0x2290]
  424d66:	call   4033c0 <close@plt>
  424d6b:	mov    edi,DWORD PTR [rsp+0x2294]
  424d72:	call   4033c0 <close@plt>
  424d77:	mov    edi,DWORD PTR [rsp+0x2288]
  424d7e:	call   4033c0 <close@plt>
  424d83:	mov    edi,DWORD PTR [rsp+0x228c]
  424d8a:	call   4033c0 <close@plt>
  424d8f:	call   403130 <__errno_location@plt>
  424d94:	mov    edi,DWORD PTR [rax]
  424d96:	call   403880 <strerror@plt>
  424d9b:	lea    rsi,[rip+0xbfe3]        # 430d85 <isspace@plt+0x2d475>
  424da2:	mov    rdi,QWORD PTR [rsp]
  424da6:	mov    rdx,rax
  424da9:	xor    eax,eax
  424dab:	call   4299f0 <isspace@plt+0x260e0>
  424db0:	jmp    425534 <isspace@plt+0x21c24>
  424db5:	mov    edi,DWORD PTR [rsp+0x2298]
  424dbc:	call   4033c0 <close@plt>
  424dc1:	mov    edi,DWORD PTR [rsp+0x229c]
  424dc8:	call   4033c0 <close@plt>
  424dcd:	jmp    425534 <isspace@plt+0x21c24>
  424dd2:	mov    edi,DWORD PTR [rsp+0x2298]
  424dd9:	call   4033c0 <close@plt>
  424dde:	mov    edi,DWORD PTR [rsp+0x229c]
  424de5:	call   4033c0 <close@plt>
  424dea:	mov    edi,DWORD PTR [rsp+0x2290]
  424df1:	call   4033c0 <close@plt>
  424df6:	mov    edi,DWORD PTR [rsp+0x2294]
  424dfd:	call   4033c0 <close@plt>
  424e02:	jmp    425534 <isspace@plt+0x21c24>
  424e07:	lea    rbx,[rsp+0x180]
  424e0f:	mov    rdi,rbx
  424e12:	call   403490 <sigemptyset@plt>
  424e17:	mov    rdi,rbx
  424e1a:	mov    esi,0xf
  424e1f:	call   4038c0 <sigaddset@plt>
  424e24:	mov    edi,0x1
  424e29:	mov    rsi,rbx
  424e2c:	xor    edx,edx
  424e2e:	call   4030b0 <sigprocmask@plt>
  424e33:	cmp    eax,0xffffffff
  424e36:	je     42555e <isspace@plt+0x21c4e>
  424e3c:	lea    rdi,[rip+0xbf7e]        # 430dc1 <isspace@plt+0x2d4b1>
  424e43:	mov    esi,0x2
  424e48:	xor    eax,eax
  424e4a:	call   4037a0 <open@plt>
  424e4f:	cmp    eax,0xffffffff
  424e52:	je     425571 <isspace@plt+0x21c61>
  424e58:	mov    r14d,eax
  424e5b:	test   r13b,r13b
  424e5e:	jne    425598 <isspace@plt+0x21c88>
  424e64:	mov    edi,DWORD PTR [rsp+0x2298]
  424e6b:	call   4033c0 <close@plt>
  424e70:	mov    edi,DWORD PTR [rsp+0x229c]
  424e77:	call   4033c0 <close@plt>
  424e7c:	mov    edi,0x2
  424e81:	mov    esi,0x1
  424e86:	call   4032c0 <dup2@plt>
  424e8b:	lea    rbx,[rip+0xae83]        # 42fd15 <isspace@plt+0x2c405>
  424e92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424e9c:	nop    DWORD PTR [rax+0x0]
  424ea0:	mov    edx,0x1
  424ea5:	mov    edi,0x1
  424eaa:	mov    rsi,rbx
  424ead:	call   4031f0 <write@plt>
  424eb2:	cmp    rax,0xffffffffffffffff
  424eb6:	jne    424ec2 <isspace@plt+0x215b2>
  424eb8:	call   403130 <__errno_location@plt>
  424ebd:	cmp    DWORD PTR [rax],0x4
  424ec0:	je     424ea0 <isspace@plt+0x21590>
  424ec2:	mov    edi,DWORD PTR [rsp+0x2294]
  424ec9:	call   4033c0 <close@plt>
  424ece:	mov    edi,DWORD PTR [rsp+0x2290]
  424ed5:	call   4033c0 <close@plt>
  424eda:	test   r13b,r13b
  424edd:	mov    r15,QWORD PTR [rsp]
  424ee1:	mov    r12,QWORD PTR [rsp+0x18]
  424ee6:	je     424f03 <isspace@plt+0x215f3>
  424ee8:	mov    edi,r14d
  424eeb:	cmp    QWORD PTR [rbp+0x18],0x0
  424ef0:	je     424ef9 <isspace@plt+0x215e9>
  424ef2:	mov    edi,DWORD PTR [rsp+0x228c]
  424ef9:	mov    esi,0x2
  424efe:	call   4032c0 <dup2@plt>
  424f03:	mov    edi,DWORD PTR [rsp+0x2288]
  424f0a:	call   4033c0 <close@plt>
  424f0f:	mov    edi,DWORD PTR [rsp+0x228c]
  424f16:	call   4033c0 <close@plt>
  424f1b:	mov    edi,r14d
  424f1e:	call   4033c0 <close@plt>
  424f23:	mov    rbx,QWORD PTR [r12+0x8]
  424f28:	test   rbx,rbx
  424f2b:	je     4253b1 <isspace@plt+0x21aa1>
  424f31:	mov    rdi,rbx
  424f34:	mov    esi,0x2f
  424f39:	call   403320 <strrchr@plt>
  424f3e:	mov    r14,rax
  424f41:	lea    rdi,[rip+0xbe83]        # 430dcb <isspace@plt+0x2d4bb>
  424f48:	mov    rsi,rbx
  424f4b:	mov    edx,0x1
  424f50:	call   4031e0 <setenv@plt>
  424f55:	test   r14,r14
  424f58:	jne    42539a <isspace@plt+0x21a8a>
  424f5e:	mov    r14,QWORD PTR [r12+0x8]
  424f63:	jmp    42539d <isspace@plt+0x21a8d>
  424f68:	mov    r13,QWORD PTR [rsp]
  424f6c:	mov    DWORD PTR [r13+0x9c0],0x0
  424f77:	mov    edi,DWORD PTR [rsp+0x2298]
  424f7e:	call   4033c0 <close@plt>
  424f83:	mov    edi,DWORD PTR [rsp+0x2294]
  424f8a:	call   4033c0 <close@plt>
  424f8f:	mov    edi,DWORD PTR [rsp+0x228c]
  424f96:	call   4033c0 <close@plt>
  424f9b:	mov    edi,DWORD PTR [rsp+0x2290]
  424fa2:	mov    esi,0x4
  424fa7:	mov    edx,0x800
  424fac:	xor    eax,eax
  424fae:	call   4031d0 <fcntl@plt>
  424fb3:	cmp    eax,0xffffffff
  424fb6:	je     42543d <isspace@plt+0x21b2d>
  424fbc:	mov    edi,DWORD PTR [rsp+0x2288]
  424fc3:	mov    esi,0x4
  424fc8:	mov    edx,0x800
  424fcd:	xor    eax,eax
  424fcf:	call   4031d0 <fcntl@plt>
  424fd4:	cmp    eax,0xffffffff
  424fd7:	je     42543d <isspace@plt+0x21b2d>
  424fdd:	mov    r14d,0x1000
  424fe3:	mov    r15d,0x1
  424fe9:	nop    DWORD PTR [rax+0x0]
  424ff0:	cmp    DWORD PTR [r13+0x9c0],0x0
  424ff8:	jne    42541e <isspace@plt+0x21b0e>
  424ffe:	vxorps xmm0,xmm0,xmm0
  425002:	vmovaps YMMWORD PTR [rsp+0x2260],ymm0
  42500b:	vmovaps YMMWORD PTR [rsp+0x2240],ymm0
  425014:	vmovaps YMMWORD PTR [rsp+0x2220],ymm0
  42501d:	vmovaps YMMWORD PTR [rsp+0x2200],ymm0
  425026:	vmovaps YMMWORD PTR [rsp+0x2180],ymm0
  42502f:	vmovaps YMMWORD PTR [rsp+0x21a0],ymm0
  425038:	vmovaps YMMWORD PTR [rsp+0x21c0],ymm0
  425041:	vmovaps YMMWORD PTR [rsp+0x21e0],ymm0
  42504a:	movsxd rdi,DWORD PTR [rsp+0x229c]
  425052:	cmp    rdi,0xffffffffffffffff
  425056:	je     425080 <isspace@plt+0x21770>
  425058:	mov    eax,edi
  42505a:	sar    eax,0x1f
  42505d:	shr    eax,0x1a
  425060:	add    eax,edi
  425062:	and    eax,0xc0
  425067:	mov    ecx,edi
  425069:	sub    ecx,eax
  42506b:	shlx   rbx,r15,rcx
  425070:	vzeroupper 
  425073:	call   403300 <__fdelt_chk@plt>
  425078:	or     QWORD PTR [rsp+rax*8+0x2180],rbx
  425080:	movsxd rdi,DWORD PTR [rsp+0x2290]
  425088:	cmp    rdi,0xffffffffffffffff
  42508c:	je     4250b6 <isspace@plt+0x217a6>
  42508e:	mov    eax,edi
  425090:	sar    eax,0x1f
  425093:	shr    eax,0x1a
  425096:	add    eax,edi
  425098:	and    eax,0xc0
  42509d:	mov    ecx,edi
  42509f:	sub    ecx,eax
  4250a1:	shlx   rbx,r15,rcx
  4250a6:	vzeroupper 
  4250a9:	call   403300 <__fdelt_chk@plt>
  4250ae:	or     QWORD PTR [rsp+rax*8+0x2200],rbx
  4250b6:	movsxd rdi,DWORD PTR [rsp+0x2288]
  4250be:	cmp    rdi,0xffffffffffffffff
  4250c2:	je     4250ec <isspace@plt+0x217dc>
  4250c4:	mov    eax,edi
  4250c6:	sar    eax,0x1f
  4250c9:	shr    eax,0x1a
  4250cc:	add    eax,edi
  4250ce:	and    eax,0xc0
  4250d3:	mov    ecx,edi
  4250d5:	sub    ecx,eax
  4250d7:	shlx   rbx,r15,rcx
  4250dc:	vzeroupper 
  4250df:	call   403300 <__fdelt_chk@plt>
  4250e4:	or     QWORD PTR [rsp+rax*8+0x2200],rbx
  4250ec:	mov    edi,0x400
  4250f1:	lea    rsi,[rsp+0x2200]
  4250f9:	lea    rdx,[rsp+0x2180]
  425101:	xor    ecx,ecx
  425103:	xor    r8d,r8d
  425106:	vzeroupper 
  425109:	call   403550 <select@plt>
  42510e:	cmp    eax,0xffffffff
  425111:	je     4251ce <isspace@plt+0x218be>
  425117:	movsxd rdi,DWORD PTR [rsp+0x229c]
  42511f:	cmp    rdi,0xffffffffffffffff
  425123:	je     425210 <isspace@plt+0x21900>
  425129:	call   403300 <__fdelt_chk@plt>
  42512e:	mov    rax,QWORD PTR [rsp+rax*8+0x2180]
  425136:	mov    edx,DWORD PTR [rsp+0x229c]
  42513d:	mov    ecx,edx
  42513f:	sar    ecx,0x1f
  425142:	shr    ecx,0x1a
  425145:	add    ecx,edx
  425147:	and    ecx,0xc0
  42514d:	mov    esi,edx
  42514f:	sub    esi,ecx
  425151:	bt     rax,rsi
  425155:	jae    425210 <isspace@plt+0x21900>
  42515b:	vmovaps xmm0,XMMWORD PTR [rsp+0x30]
  425161:	vmovaps XMMWORD PTR [rsp+0x180],xmm0
  42516a:	mov    rax,QWORD PTR [rsp+0x180]
  425172:	add    rax,r14
  425175:	cmp    QWORD PTR [rsp+0x188],rax
  42517d:	jbe    425187 <isspace@plt+0x21877>
  42517f:	mov    QWORD PTR [rsp+0x188],rax
  425187:	mov    rdi,QWORD PTR [rsp+0x28]
  42518c:	lea    rsi,[rsp+0x180]
  425194:	call   4122c0 <isspace@plt+0xe9b0>
  425199:	mov    rbx,rax
  42519c:	test   rax,rax
  42519f:	jle    4251e1 <isspace@plt+0x218d1>
  4251a1:	add    QWORD PTR [rsp+0x30],rbx
  4251a6:	lea    rdi,[rsp+0x30]
  4251ab:	call   417020 <isspace@plt+0x13710>
  4251b0:	test   rax,rax
  4251b3:	jne    425210 <isspace@plt+0x21900>
  4251b5:	mov    edi,DWORD PTR [rsp+0x2294]
  4251bc:	call   4033c0 <close@plt>
  4251c1:	mov    DWORD PTR [rsp+0x2294],0xffffffff
  4251cc:	jmp    425210 <isspace@plt+0x21900>
  4251ce:	call   403130 <__errno_location@plt>
  4251d3:	cmp    DWORD PTR [rax],0x4
  4251d6:	je     425370 <isspace@plt+0x21a60>
  4251dc:	jmp    42542c <isspace@plt+0x21b1c>
  4251e1:	mov    edi,DWORD PTR [rsp+0x229c]
  4251e8:	call   4033c0 <close@plt>
  4251ed:	mov    DWORD PTR [rsp+0x229c],0xffffffff
  4251f8:	cmp    rbx,0xffffffffffffffff
  4251fc:	jne    425210 <isspace@plt+0x21900>
  4251fe:	mov    rdi,r13
  425201:	lea    rsi,[rip+0xbc00]        # 430e08 <isspace@plt+0x2d4f8>
  425208:	xor    eax,eax
  42520a:	call   4299f0 <isspace@plt+0x260e0>
  42520f:	nop
  425210:	movsxd rdi,DWORD PTR [rsp+0x2290]
  425218:	cmp    rdi,0xffffffffffffffff
  42521c:	je     4252c0 <isspace@plt+0x219b0>
  425222:	call   403300 <__fdelt_chk@plt>
  425227:	mov    rax,QWORD PTR [rsp+rax*8+0x2200]
  42522f:	mov    edi,DWORD PTR [rsp+0x2290]
  425236:	mov    ecx,edi
  425238:	sar    ecx,0x1f
  42523b:	shr    ecx,0x1a
  42523e:	add    ecx,edi
  425240:	and    ecx,0xc0
  425246:	mov    edx,edi
  425248:	sub    edx,ecx
  42524a:	bt     rax,rdx
  42524e:	jae    4252c0 <isspace@plt+0x219b0>
  425250:	mov    edx,0x2000
  425255:	lea    rsi,[rsp+0x180]
  42525d:	call   403420 <read@plt>
  425262:	test   rax,rax
  425265:	jle    425285 <isspace@plt+0x21975>
  425267:	cmp    QWORD PTR [rsp+0x8],0x0
  42526d:	je     4252c0 <isspace@plt+0x219b0>
  42526f:	mov    rdi,QWORD PTR [rsp+0x10]
  425274:	lea    rsi,[rsp+0x180]
  42527c:	mov    rdx,rax
  42527f:	call   QWORD PTR [rsp+0x8]
  425283:	jmp    4252c0 <isspace@plt+0x219b0>
  425285:	je     4252a9 <isspace@plt+0x21999>
  425287:	call   403130 <__errno_location@plt>
  42528c:	mov    eax,DWORD PTR [rax]
  42528e:	cmp    eax,0x4
  425291:	je     4252c0 <isspace@plt+0x219b0>
  425293:	cmp    eax,0xb
  425296:	je     4252c0 <isspace@plt+0x219b0>
  425298:	mov    rdi,r13
  42529b:	lea    rsi,[rip+0xbb88]        # 430e2a <isspace@plt+0x2d51a>
  4252a2:	xor    eax,eax
  4252a4:	call   4299f0 <isspace@plt+0x260e0>
  4252a9:	mov    edi,DWORD PTR [rsp+0x2290]
  4252b0:	call   4033c0 <close@plt>
  4252b5:	mov    DWORD PTR [rsp+0x2290],0xffffffff
  4252c0:	movsxd rdi,DWORD PTR [rsp+0x2288]
  4252c8:	cmp    rdi,0xffffffffffffffff
  4252cc:	je     425370 <isspace@plt+0x21a60>
  4252d2:	call   403300 <__fdelt_chk@plt>
  4252d7:	mov    rax,QWORD PTR [rsp+rax*8+0x2200]
  4252df:	mov    edi,DWORD PTR [rsp+0x2288]
  4252e6:	mov    ecx,edi
  4252e8:	sar    ecx,0x1f
  4252eb:	shr    ecx,0x1a
  4252ee:	add    ecx,edi
  4252f0:	and    ecx,0xc0
  4252f6:	mov    edx,edi
  4252f8:	sub    edx,ecx
  4252fa:	bt     rax,rdx
  4252fe:	jae    425370 <isspace@plt+0x21a60>
  425300:	mov    edx,0x2000
  425305:	lea    rsi,[rsp+0x180]
  42530d:	call   403420 <read@plt>
  425312:	test   rax,rax
  425315:	jle    425332 <isspace@plt+0x21a22>
  425317:	cmp    QWORD PTR [rbp+0x18],0x0
  42531c:	je     425370 <isspace@plt+0x21a60>
  42531e:	mov    rdi,QWORD PTR [rbp+0x10]
  425322:	lea    rsi,[rsp+0x180]
  42532a:	mov    rdx,rax
  42532d:	call   QWORD PTR [rbp+0x18]
  425330:	jmp    425370 <isspace@plt+0x21a60>
  425332:	je     425356 <isspace@plt+0x21a46>
  425334:	call   403130 <__errno_location@plt>
  425339:	mov    eax,DWORD PTR [rax]
  42533b:	cmp    eax,0x4
  42533e:	je     425370 <isspace@plt+0x21a60>
  425340:	cmp    eax,0xb
  425343:	je     425370 <isspace@plt+0x21a60>
  425345:	mov    rdi,r13
  425348:	lea    rsi,[rip+0xbafc]        # 430e4b <isspace@plt+0x2d53b>
  42534f:	xor    eax,eax
  425351:	call   4299f0 <isspace@plt+0x260e0>
  425356:	mov    edi,DWORD PTR [rsp+0x2288]
  42535d:	call   4033c0 <close@plt>
  425362:	mov    DWORD PTR [rsp+0x2288],0xffffffff
  42536d:	nop    DWORD PTR [rax]
  425370:	mov    eax,DWORD PTR [rsp+0x2290]
  425377:	and    eax,DWORD PTR [rsp+0x229c]
  42537e:	cmp    eax,0xffffffff
  425381:	jne    424ff0 <isspace@plt+0x216e0>
  425387:	cmp    DWORD PTR [rsp+0x2288],0xffffffff
  42538f:	jne    424ff0 <isspace@plt+0x216e0>
  425395:	jmp    42543d <isspace@plt+0x21b2d>
  42539a:	inc    r14
  42539d:	lea    rdi,[rip+0xba34]        # 430dd8 <isspace@plt+0x2d4c8>
  4253a4:	mov    rsi,r14
  4253a7:	mov    edx,0x1
  4253ac:	call   4031e0 <setenv@plt>
  4253b1:	mov    rsi,QWORD PTR [rsp+0x20]
  4253b6:	cmp    QWORD PTR [rsi+0x8],0x0
  4253bb:	jne    4253dd <isspace@plt+0x21acd>
  4253bd:	mov    rdi,QWORD PTR [r15+0x800]
  4253c4:	mov    rcx,QWORD PTR [rsi]
  4253c7:	lea    rdx,[rip+0xba17]        # 430de5 <isspace@plt+0x2d4d5>
  4253ce:	mov    rsi,rdi
  4253d1:	xor    r8d,r8d
  4253d4:	xor    eax,eax
  4253d6:	call   403860 <execlp@plt>
  4253db:	jmp    4253e5 <isspace@plt+0x21ad5>
  4253dd:	mov    rdi,QWORD PTR [rsi]
  4253e0:	call   4037c0 <execvp@plt>
  4253e5:	mov    rax,QWORD PTR [rip+0x1cc0c]        # 441ff8 <isspace@plt+0x3e6e8>
  4253ec:	mov    rbx,QWORD PTR [rax]
  4253ef:	call   403130 <__errno_location@plt>
  4253f4:	mov    edi,DWORD PTR [rax]
  4253f6:	call   403880 <strerror@plt>
  4253fb:	lea    rdx,[rip+0xb9e6]        # 430de8 <isspace@plt+0x2d4d8>
  425402:	mov    rdi,rbx
  425405:	mov    esi,0x1
  42540a:	mov    rcx,rax
  42540d:	xor    eax,eax
  42540f:	call   403820 <__fprintf_chk@plt>
  425414:	mov    edi,0x1
  425419:	call   403800 <exit@plt>
  42541e:	xor    edi,edi
  425420:	mov    esi,0xf
  425425:	call   4034f0 <kill@plt>
  42542a:	jmp    42543d <isspace@plt+0x21b2d>
  42542c:	lea    rsi,[rip+0xb9c6]        # 430df9 <isspace@plt+0x2d4e9>
  425433:	mov    rdi,r13
  425436:	xor    eax,eax
  425438:	call   4299f0 <isspace@plt+0x260e0>
  42543d:	mov    edi,DWORD PTR [rsp+0x229c]
  425444:	cmp    edi,0xffffffff
  425447:	je     42544e <isspace@plt+0x21b3e>
  425449:	call   4033c0 <close@plt>
  42544e:	mov    edi,DWORD PTR [rsp+0x2290]
  425455:	cmp    edi,0xffffffff
  425458:	je     42545f <isspace@plt+0x21b4f>
  42545a:	call   4033c0 <close@plt>
  42545f:	mov    edi,DWORD PTR [rsp+0x2288]
  425466:	cmp    edi,0xffffffff
  425469:	je     425470 <isspace@plt+0x21b60>
  42546b:	call   4033c0 <close@plt>
  425470:	lea    rbx,[rsp+0x4c]
  425475:	cmp    DWORD PTR [r13+0x9c0],0x0
  42547d:	jne    42549f <isspace@plt+0x21b8f>
  42547f:	jmp    4254ab <isspace@plt+0x21b9b>
  425481:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42548b:	nop    DWORD PTR [rax+rax*1+0x0]
  425490:	cmp    r12d,eax
  425493:	je     4254cd <isspace@plt+0x21bbd>
  425495:	cmp    DWORD PTR [r13+0x9c0],0x0
  42549d:	je     4254ab <isspace@plt+0x21b9b>
  42549f:	xor    edi,edi
  4254a1:	mov    esi,0xf
  4254a6:	call   4034f0 <kill@plt>
  4254ab:	mov    edi,r12d
  4254ae:	mov    rsi,rbx
  4254b1:	xor    edx,edx
  4254b3:	call   403790 <waitpid@plt>
  4254b8:	cmp    eax,0xffffffff
  4254bb:	jne    425490 <isspace@plt+0x21b80>
  4254bd:	call   403130 <__errno_location@plt>
  4254c2:	cmp    r12d,0xffffffff
  4254c6:	je     4254cd <isspace@plt+0x21bbd>
  4254c8:	cmp    DWORD PTR [rax],0xa
  4254cb:	jne    425495 <isspace@plt+0x21b85>
  4254cd:	mov    QWORD PTR [rsp+0xe8],0x1
  4254d9:	mov    DWORD PTR [rsp+0x170],0x0
  4254e4:	lea    rdi,[rsp+0xf0]
  4254ec:	call   403490 <sigemptyset@plt>
  4254f1:	lea    rsi,[rsp+0xe8]
  4254f9:	lea    rbx,[rsp+0x50]
  4254fe:	mov    edi,0xf
  425503:	mov    rdx,rbx
  425506:	call   4031b0 <sigaction@plt>
  42550b:	mov    edi,0xf
  425510:	mov    rsi,rbx
  425513:	xor    edx,edx
  425515:	call   4031b0 <sigaction@plt>
  42551a:	mov    DWORD PTR [r13+0x9c0],0x0
  425525:	mov    rdi,QWORD PTR [r13+0x0]
  425529:	call   QWORD PTR [rdi+0x88]
  42552f:	mov    r14d,DWORD PTR [rsp+0x4c]
  425534:	mov    rax,QWORD PTR fs:0x28
  42553d:	cmp    rax,QWORD PTR [rsp+0x22a0]
  425545:	jne    425559 <isspace@plt+0x21c49>
  425547:	mov    eax,r14d
  42554a:	lea    rsp,[rbp-0x28]
  42554e:	pop    rbx
  42554f:	pop    r12
  425551:	pop    r13
  425553:	pop    r14
  425555:	pop    r15
  425557:	pop    rbp
  425558:	ret    
  425559:	call   403280 <__stack_chk_fail@plt>
  42555e:	mov    rax,QWORD PTR [rip+0x1ca93]        # 441ff8 <isspace@plt+0x3e6e8>
  425565:	mov    rdi,QWORD PTR [rax]
  425568:	lea    rdx,[rip+0xb827]        # 430d96 <isspace@plt+0x2d486>
  42556f:	jmp    425582 <isspace@plt+0x21c72>
  425571:	mov    rax,QWORD PTR [rip+0x1ca80]        # 441ff8 <isspace@plt+0x3e6e8>
  425578:	mov    rdi,QWORD PTR [rax]
  42557b:	lea    rdx,[rip+0xb830]        # 430db2 <isspace@plt+0x2d4a2>
  425582:	mov    esi,0x1
  425587:	xor    eax,eax
  425589:	call   403820 <__fprintf_chk@plt>
  42558e:	mov    edi,0x1
  425593:	call   403800 <exit@plt>
  425598:	mov    rdi,r15
  42559b:	call   417020 <isspace@plt+0x13710>
  4255a0:	mov    edi,r14d
  4255a3:	test   rax,rax
  4255a6:	je     4255af <isspace@plt+0x21c9f>
  4255a8:	mov    edi,DWORD PTR [rsp+0x2298]
  4255af:	xor    esi,esi
  4255b1:	call   4032c0 <dup2@plt>
  4255b6:	mov    edi,DWORD PTR [rsp+0x2298]
  4255bd:	call   4033c0 <close@plt>
  4255c2:	mov    edi,DWORD PTR [rsp+0x229c]
  4255c9:	call   4033c0 <close@plt>
  4255ce:	cmp    QWORD PTR [rsp+0x8],0x0
  4255d4:	jne    4255db <isspace@plt+0x21ccb>
  4255d6:	mov    edi,r14d
  4255d9:	jmp    4255e2 <isspace@plt+0x21cd2>
  4255db:	mov    edi,DWORD PTR [rsp+0x2294]
  4255e2:	mov    esi,0x1
  4255e7:	call   4032c0 <dup2@plt>
  4255ec:	jmp    424ec2 <isspace@plt+0x215b2>
  4255f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4255fb:	nop    DWORD PTR [rax+rax*1+0x0]
  425600:	push   rax
  425601:	mov    rax,QWORD PTR fs:0x28
  42560a:	mov    QWORD PTR [rsp],rax
  42560e:	mov    rax,QWORD PTR [rdi+0x30]
  425612:	test   rax,rax
  425615:	je     425620 <isspace@plt+0x21d10>
  425617:	mov    rax,QWORD PTR [rax+0x10]
  42561b:	mov    rax,QWORD PTR [rax]
  42561e:	jmp    425622 <isspace@plt+0x21d12>
  425620:	xor    eax,eax
  425622:	mov    rcx,QWORD PTR fs:0x28
  42562b:	cmp    rcx,QWORD PTR [rsp]
  42562f:	jne    425633 <isspace@plt+0x21d23>
  425631:	pop    rcx
  425632:	ret    
  425633:	call   403280 <__stack_chk_fail@plt>
  425638:	nop    DWORD PTR [rax+rax*1+0x0]
  425640:	push   rax
  425641:	mov    rax,QWORD PTR fs:0x28
  42564a:	mov    QWORD PTR [rsp],rax
  42564e:	mov    rax,QWORD PTR [rdi+0x30]
  425652:	test   rax,rax
  425655:	je     42565d <isspace@plt+0x21d4d>
  425657:	mov    rax,QWORD PTR [rax+0x18]
  42565b:	jmp    42565f <isspace@plt+0x21d4f>
  42565d:	xor    eax,eax
  42565f:	mov    rcx,QWORD PTR fs:0x28
  425668:	cmp    rcx,QWORD PTR [rsp]
  42566c:	jne    425670 <isspace@plt+0x21d60>
  42566e:	pop    rcx
  42566f:	ret    
  425670:	call   403280 <__stack_chk_fail@plt>
  425675:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42567f:	nop
  425680:	push   rax
  425681:	mov    rax,QWORD PTR fs:0x28
  42568a:	mov    QWORD PTR [rsp],rax
  42568e:	mov    rax,QWORD PTR [rdi+0x30]
  425692:	mov    rcx,QWORD PTR fs:0x28
  42569b:	cmp    rcx,QWORD PTR [rsp]
  42569f:	jne    4256a3 <isspace@plt+0x21d93>
  4256a1:	pop    rcx
  4256a2:	ret    
  4256a3:	call   403280 <__stack_chk_fail@plt>
  4256a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4256b0:	push   rax
  4256b1:	mov    rax,QWORD PTR fs:0x28
  4256ba:	mov    QWORD PTR [rsp],rax
  4256be:	cmp    BYTE PTR [rdi+0x7fd],0x0
  4256c5:	setne  al
  4256c8:	mov    rcx,QWORD PTR fs:0x28
  4256d1:	cmp    rcx,QWORD PTR [rsp]
  4256d5:	jne    4256d9 <isspace@plt+0x21dc9>
  4256d7:	pop    rcx
  4256d8:	ret    
  4256d9:	call   403280 <__stack_chk_fail@plt>
  4256de:	xchg   ax,ax
  4256e0:	push   rbp
  4256e1:	push   r15
  4256e3:	push   r14
  4256e5:	push   rbx
  4256e6:	sub    rsp,0x38
  4256ea:	mov    rbx,rdx
  4256ed:	mov    r15,rdi
  4256f0:	mov    rax,QWORD PTR fs:0x28
  4256f9:	mov    QWORD PTR [rsp+0x30],rax
  4256fe:	mov    rdi,rsi
  425701:	call   41f7a0 <isspace@plt+0x1be90>
  425706:	mov    QWORD PTR [rsp+0x20],rax
  42570b:	mov    QWORD PTR [rsp+0x28],rdx
  425710:	lea    rdi,[rsp+0x20]
  425715:	call   416fc0 <isspace@plt+0x136b0>
  42571a:	test   al,al
  42571c:	je     4258c9 <isspace@plt+0x21fb9>
  425722:	mov    rsi,QWORD PTR [rsp+0x20]
  425727:	lea    rdx,[rsp+0x18]
  42572c:	lea    r8,[rsp+0x14]
  425731:	mov    rdi,r15
  425734:	xor    ecx,ecx
  425736:	call   41a640 <isspace@plt+0x16d30>
  42573b:	mov    rsi,QWORD PTR [rsp+0x28]
  425740:	lea    rdx,[rsp+0x8]
  425745:	lea    r14,[rsp+0x4]
  42574a:	mov    rdi,r15
  42574d:	xor    ecx,ecx
  42574f:	mov    r8,r14
  425752:	call   41a640 <isspace@plt+0x16d30>
  425757:	mov    r9,QWORD PTR [rsp+0x18]
  42575c:	mov    rax,QWORD PTR [rsp+0x8]
  425761:	mov    rcx,r9
  425764:	or     rcx,rax
  425767:	je     4258c9 <isspace@plt+0x21fb9>
  42576d:	test   r9,r9
  425770:	je     4258e4 <isspace@plt+0x21fd4>
  425776:	test   rax,rax
  425779:	je     42590a <isspace@plt+0x21ffa>
  42577f:	mov    r8,QWORD PTR [rax+0x8]
  425783:	cmp    r9,r8
  425786:	je     4258c9 <isspace@plt+0x21fb9>
  42578c:	mov    rsi,r9
  42578f:	jmp    4257ad <isspace@plt+0x21e9d>
  425791:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42579b:	nop    DWORD PTR [rax+rax*1+0x0]
  4257a0:	mov    rsi,QWORD PTR [rsi+0x8]
  4257a4:	cmp    rsi,r8
  4257a7:	je     4258c9 <isspace@plt+0x21fb9>
  4257ad:	xor    edx,edx
  4257af:	cmp    rsi,r9
  4257b2:	jne    4257b8 <isspace@plt+0x21ea8>
  4257b4:	mov    edx,DWORD PTR [rsp+0x14]
  4257b8:	lea    rcx,[rsi+0x20]
  4257bc:	cmp    rsi,rax
  4257bf:	cmove  rcx,r14
  4257c3:	movsxd rdi,DWORD PTR [rcx]
  4257c6:	cmp    edx,edi
  4257c8:	jge    4257a0 <isspace@plt+0x21e90>
  4257ca:	movsxd r10,edx
  4257cd:	mov    ecx,edi
  4257cf:	sub    ecx,edx
  4257d1:	mov    rdx,r10
  4257d4:	not    rdx
  4257d7:	test   cl,0x1
  4257da:	je     425827 <isspace@plt+0x21f17>
  4257dc:	lea    rcx,[r10+r10*2]
  4257e0:	shl    rcx,0x4
  4257e4:	movzx  r11d,WORD PTR [rsi+rcx*1+0x50]
  4257ea:	movzx  ebp,WORD PTR [rbx+0xa]
  4257ee:	lea    r15,[rsi+rcx*1]
  4257f2:	add    r15,0x52
  4257f6:	cmp    r11w,bp
  4257fa:	jne    425810 <isspace@plt+0x21f00>
  4257fc:	movzx  ebp,WORD PTR [r15]
  425800:	cmp    r11w,bp
  425804:	jne    425816 <isspace@plt+0x21f06>
  425806:	mov    rbp,QWORD PTR [rbx]
  425809:	mov    QWORD PTR [rsi+rcx*1+0x48],rbp
  42580e:	jmp    425824 <isspace@plt+0x21f14>
  425810:	mov    WORD PTR [r15],bp
  425814:	jmp    425824 <isspace@plt+0x21f14>
  425816:	add    rcx,rsi
  425819:	add    rcx,0x50
  42581d:	mov    WORD PTR [rcx],bp
  425820:	mov    WORD PTR [r15],r11w
  425824:	inc    r10
  425827:	add    rdx,rdi
  42582a:	je     4257a0 <isspace@plt+0x21e90>
  425830:	sub    rdi,r10
  425833:	lea    rcx,[r10+r10*2]
  425837:	shl    rcx,0x4
  42583b:	lea    rdx,[rsi+rcx*1]
  42583f:	add    rdx,0x82
  425846:	jmp    425861 <isspace@plt+0x21f51>
  425848:	nop    DWORD PTR [rax+rax*1+0x0]
  425850:	mov    WORD PTR [rdx],bp
  425853:	add    rdx,0x60
  425857:	add    rdi,0xfffffffffffffffe
  42585b:	je     4257a0 <isspace@plt+0x21e90>
  425861:	movzx  ecx,WORD PTR [rdx-0x32]
  425865:	movzx  ebp,WORD PTR [rbx+0xa]
  425869:	cmp    cx,bp
  42586c:	jne    425880 <isspace@plt+0x21f70>
  42586e:	movzx  ebp,WORD PTR [rdx-0x30]
  425872:	cmp    cx,bp
  425875:	jne    425890 <isspace@plt+0x21f80>
  425877:	mov    rcx,QWORD PTR [rbx]
  42587a:	mov    QWORD PTR [rdx-0x3a],rcx
  42587e:	jmp    425898 <isspace@plt+0x21f88>
  425880:	mov    WORD PTR [rdx-0x30],bp
  425884:	jmp    425898 <isspace@plt+0x21f88>
  425886:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425890:	mov    WORD PTR [rdx-0x32],bp
  425894:	mov    WORD PTR [rdx-0x30],cx
  425898:	movzx  ecx,WORD PTR [rdx-0x2]
  42589c:	movzx  ebp,WORD PTR [rbx+0xa]
  4258a0:	cmp    cx,bp
  4258a3:	jne    425850 <isspace@plt+0x21f40>
  4258a5:	movzx  ebp,WORD PTR [rdx]
  4258a8:	cmp    cx,bp
  4258ab:	jne    4258c0 <isspace@plt+0x21fb0>
  4258ad:	mov    rcx,QWORD PTR [rbx]
  4258b0:	mov    QWORD PTR [rdx-0xa],rcx
  4258b4:	jmp    425853 <isspace@plt+0x21f43>
  4258b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4258c0:	mov    WORD PTR [rdx-0x2],bp
  4258c4:	mov    WORD PTR [rdx],cx
  4258c7:	jmp    425853 <isspace@plt+0x21f43>
  4258c9:	mov    rax,QWORD PTR fs:0x28
  4258d2:	cmp    rax,QWORD PTR [rsp+0x30]
  4258d7:	jne    425928 <isspace@plt+0x22018>
  4258d9:	add    rsp,0x38
  4258dd:	pop    rbx
  4258de:	pop    r14
  4258e0:	pop    r15
  4258e2:	pop    rbp
  4258e3:	ret    
  4258e4:	mov    rdi,r15
  4258e7:	call   41e550 <isspace@plt+0x1ac40>
  4258ec:	mov    r9,rax
  4258ef:	mov    QWORD PTR [rsp+0x18],rax
  4258f4:	mov    DWORD PTR [rsp+0x14],0x0
  4258fc:	mov    rax,QWORD PTR [rsp+0x8]
  425901:	test   rax,rax
  425904:	jne    42577f <isspace@plt+0x21e6f>
  42590a:	mov    rdi,r15
  42590d:	call   41e580 <isspace@plt+0x1ac70>
  425912:	mov    QWORD PTR [rsp+0x8],rax
  425917:	mov    ecx,DWORD PTR [rax+0x20]
  42591a:	mov    DWORD PTR [rsp+0x4],ecx
  42591e:	mov    r9,QWORD PTR [rsp+0x18]
  425923:	jmp    42577f <isspace@plt+0x21e6f>
  425928:	call   403280 <__stack_chk_fail@plt>
  42592d:	nop    DWORD PTR [rax]
  425930:	push   r15
  425932:	push   r14
  425934:	push   r13
  425936:	push   r12
  425938:	push   rbx
  425939:	sub    rsp,0x30
  42593d:	mov    rax,QWORD PTR fs:0x28
  425946:	mov    QWORD PTR [rsp+0x28],rax
  42594b:	mov    rax,QWORD PTR [rdi]
  42594e:	cmp    QWORD PTR [rax+0x30],rdi
  425952:	je     425976 <isspace@plt+0x22066>
  425954:	mov    rax,QWORD PTR fs:0x28
  42595d:	cmp    rax,QWORD PTR [rsp+0x28]
  425962:	jne    425a67 <isspace@plt+0x22157>
  425968:	add    rsp,0x30
  42596c:	pop    rbx
  42596d:	pop    r12
  42596f:	pop    r13
  425971:	pop    r14
  425973:	pop    r15
  425975:	ret    
  425976:	mov    r14,rcx
  425979:	mov    r12,rdx
  42597c:	mov    r15,rsi
  42597f:	mov    rbx,rdi
  425982:	mov    rdi,rsi
  425985:	call   41e5b0 <isspace@plt+0x1aca0>
  42598a:	mov    r13,rax
  42598d:	mov    rdi,r15
  425990:	call   41f190 <isspace@plt+0x1b880>
  425995:	test   r13,r13
  425998:	je     425954 <isspace@plt+0x22044>
  42599a:	cmp    eax,0xffffffff
  42599d:	je     425954 <isspace@plt+0x22044>
  42599f:	cdqe   
  4259a1:	lea    rax,[rax+rax*2]
  4259a5:	shl    rax,0x4
  4259a9:	vmovups xmm0,XMMWORD PTR [r12]
  4259af:	vmovups XMMWORD PTR [r13+rax*1+0x48],xmm0
  4259b6:	mov    rax,QWORD PTR [rbx]
  4259b9:	mov    rax,QWORD PTR [rax+0x9a0]
  4259c0:	cmp    BYTE PTR [rax+0x58],0x0
  4259c4:	jne    425954 <isspace@plt+0x22044>
  4259c6:	mov    rdi,r15
  4259c9:	call   41af10 <isspace@plt+0x17600>
  4259ce:	mov    r15,rax
  4259d1:	mov    rdi,QWORD PTR [rbx+0x18]
  4259d5:	call   41a610 <isspace@plt+0x16d00>
  4259da:	mov    QWORD PTR [rsp+0x8],rax
  4259df:	mov    QWORD PTR [rsp+0x10],rdx
  4259e4:	mov    rax,QWORD PTR [rbx+0x10]
  4259e8:	mov    rdi,QWORD PTR [rax]
  4259eb:	lea    rdx,[rip+0xb47a]        # 430e6c <isspace@plt+0x2d55c>
  4259f2:	lea    rcx,[rsp+0x8]
  4259f7:	mov    rsi,r15
  4259fa:	call   415350 <isspace@plt+0x11a40>
  4259ff:	cmp    r15,rax
  425a02:	je     425954 <isspace@plt+0x22044>
  425a08:	mov    rdi,QWORD PTR [rbx+0x18]
  425a0c:	lea    rdx,[rsp+0x20]
  425a11:	lea    r8,[rsp+0x1c]
  425a16:	mov    rsi,rax
  425a19:	xor    ecx,ecx
  425a1b:	call   41a640 <isspace@plt+0x16d30>
  425a20:	test   al,al
  425a22:	je     425954 <isspace@plt+0x22044>
  425a28:	mov    rax,QWORD PTR [rsp+0x20]
  425a2d:	movsxd rcx,DWORD PTR [rsp+0x1c]
  425a32:	lea    rcx,[rcx+rcx*2]
  425a36:	shl    rcx,0x4
  425a3a:	movzx  edx,WORD PTR [rax+rcx*1+0x50]
  425a3f:	cmp    dx,WORD PTR [r14+0x8]
  425a44:	jne    425a58 <isspace@plt+0x22148>
  425a46:	lea    rsi,[rax+rcx*1]
  425a4a:	add    rsi,0x50
  425a4e:	movzx  edi,WORD PTR [rax+rcx*1+0x52]
  425a53:	mov    WORD PTR [rsi],di
  425a56:	jmp    425a5d <isspace@plt+0x2214d>
  425a58:	movzx  edx,WORD PTR [r14+0xa]
  425a5d:	mov    WORD PTR [rax+rcx*1+0x52],dx
  425a62:	jmp    425954 <isspace@plt+0x22044>
  425a67:	call   403280 <__stack_chk_fail@plt>
  425a6c:	nop    DWORD PTR [rax+0x0]
  425a70:	push   r15
  425a72:	push   r14
  425a74:	push   rbx
  425a75:	sub    rsp,0x10
  425a79:	mov    rbx,rdx
  425a7c:	mov    rax,QWORD PTR fs:0x28
  425a85:	mov    QWORD PTR [rsp+0x8],rax
  425a8a:	cmp    BYTE PTR [rdx+0x14],0x0
  425a8e:	je     425aba <isspace@plt+0x221aa>
  425a90:	mov    r14,rdi
  425a93:	mov    rdi,QWORD PTR [rbx]
  425a96:	mov    r15,QWORD PTR [rbx+0x8]
  425a9a:	lea    rsi,[r14+r15*1]
  425a9e:	call   422ec0 <isspace@plt+0x1f5b0>
  425aa3:	mov    ecx,DWORD PTR [rbx+0x10]
  425aa6:	test   rax,rax
  425aa9:	je     425ac2 <isspace@plt+0x221b2>
  425aab:	lea    rdx,[r14+r15*1]
  425aaf:	add    rdx,0x1
  425ab3:	cmp    rdx,rax
  425ab6:	je     425abd <isspace@plt+0x221ad>
  425ab8:	jmp    425ac2 <isspace@plt+0x221b2>
  425aba:	mov    ecx,DWORD PTR [rbx+0x10]
  425abd:	inc    ecx
  425abf:	mov    DWORD PTR [rbx+0x10],ecx
  425ac2:	cmp    ecx,0x1
  425ac5:	sete   al
  425ac8:	mov    rcx,QWORD PTR fs:0x28
  425ad1:	cmp    rcx,QWORD PTR [rsp+0x8]
  425ad6:	jne    425ae2 <isspace@plt+0x221d2>
  425ad8:	add    rsp,0x10
  425adc:	pop    rbx
  425add:	pop    r14
  425adf:	pop    r15
  425ae1:	ret    
  425ae2:	call   403280 <__stack_chk_fail@plt>
  425ae7:	nop    WORD PTR [rax+rax*1+0x0]
  425af0:	push   rax
  425af1:	mov    rax,QWORD PTR fs:0x28
  425afa:	mov    QWORD PTR [rsp],rax
  425afe:	mov    rax,QWORD PTR fs:0x28
  425b07:	cmp    rax,QWORD PTR [rsp]
  425b0b:	jne    425b11 <isspace@plt+0x22201>
  425b0d:	xor    eax,eax
  425b0f:	pop    rcx
  425b10:	ret    
  425b11:	call   403280 <__stack_chk_fail@plt>
  425b16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425b20:	push   rax
  425b21:	mov    rax,QWORD PTR fs:0x28
  425b2a:	mov    QWORD PTR [rsp],rax
  425b2e:	mov    rax,QWORD PTR fs:0x28
  425b37:	cmp    rax,QWORD PTR [rsp]
  425b3b:	jne    425b3f <isspace@plt+0x2222f>
  425b3d:	pop    rax
  425b3e:	ret    
  425b3f:	call   403280 <__stack_chk_fail@plt>
  425b44:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425b4e:	xchg   ax,ax
  425b50:	push   rax
  425b51:	mov    rax,QWORD PTR fs:0x28
  425b5a:	mov    QWORD PTR [rsp],rax
  425b5e:	mov    rax,QWORD PTR fs:0x28
  425b67:	cmp    rax,QWORD PTR [rsp]
  425b6b:	jne    425b6f <isspace@plt+0x2225f>
  425b6d:	pop    rax
  425b6e:	ret    
  425b6f:	call   403280 <__stack_chk_fail@plt>
  425b74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425b7e:	xchg   ax,ax
  425b80:	push   rax
  425b81:	mov    rax,QWORD PTR fs:0x28
  425b8a:	mov    QWORD PTR [rsp],rax
  425b8e:	mov    rax,QWORD PTR fs:0x28
  425b97:	cmp    rax,QWORD PTR [rsp]
  425b9b:	jne    425b9f <isspace@plt+0x2228f>
  425b9d:	pop    rax
  425b9e:	ret    
  425b9f:	call   403280 <__stack_chk_fail@plt>
  425ba4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425bae:	xchg   ax,ax
  425bb0:	push   rax
  425bb1:	mov    rax,QWORD PTR fs:0x28
  425bba:	mov    QWORD PTR [rsp],rax
  425bbe:	mov    rax,QWORD PTR fs:0x28
  425bc7:	cmp    rax,QWORD PTR [rsp]
  425bcb:	jne    425bcf <isspace@plt+0x222bf>
  425bcd:	pop    rax
  425bce:	ret    
  425bcf:	call   403280 <__stack_chk_fail@plt>
  425bd4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425bde:	xchg   ax,ax
  425be0:	push   rax
  425be1:	mov    rax,QWORD PTR fs:0x28
  425bea:	mov    QWORD PTR [rsp],rax
  425bee:	mov    rax,QWORD PTR fs:0x28
  425bf7:	cmp    rax,QWORD PTR [rsp]
  425bfb:	jne    425c01 <isspace@plt+0x222f1>
  425bfd:	mov    al,0x1
  425bff:	pop    rcx
  425c00:	ret    
  425c01:	call   403280 <__stack_chk_fail@plt>
  425c06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425c10:	push   rax
  425c11:	mov    rax,QWORD PTR fs:0x28
  425c1a:	mov    QWORD PTR [rsp],rax
  425c1e:	mov    rax,QWORD PTR fs:0x28
  425c27:	cmp    rax,QWORD PTR [rsp]
  425c2b:	jne    425c2f <isspace@plt+0x2231f>
  425c2d:	pop    rax
  425c2e:	ret    
  425c2f:	call   403280 <__stack_chk_fail@plt>
  425c34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425c3e:	xchg   ax,ax
  425c40:	push   rax
  425c41:	mov    rax,QWORD PTR fs:0x28
  425c4a:	mov    QWORD PTR [rsp],rax
  425c4e:	mov    rax,QWORD PTR fs:0x28
  425c57:	cmp    rax,QWORD PTR [rsp]
  425c5b:	jne    425c5f <isspace@plt+0x2234f>
  425c5d:	pop    rax
  425c5e:	ret    
  425c5f:	call   403280 <__stack_chk_fail@plt>
  425c64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425c6e:	xchg   ax,ax
  425c70:	push   rax
  425c71:	mov    rax,QWORD PTR fs:0x28
  425c7a:	mov    QWORD PTR [rsp],rax
  425c7e:	mov    rax,QWORD PTR fs:0x28
  425c87:	cmp    rax,QWORD PTR [rsp]
  425c8b:	jne    425c8f <isspace@plt+0x2237f>
  425c8d:	pop    rax
  425c8e:	ret    
  425c8f:	call   403280 <__stack_chk_fail@plt>
  425c94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425c9e:	xchg   ax,ax
  425ca0:	push   rax
  425ca1:	mov    rax,QWORD PTR fs:0x28
  425caa:	mov    QWORD PTR [rsp],rax
  425cae:	mov    rax,QWORD PTR fs:0x28
  425cb7:	cmp    rax,QWORD PTR [rsp]
  425cbb:	jne    425cbf <isspace@plt+0x223af>
  425cbd:	pop    rax
  425cbe:	ret    
  425cbf:	call   403280 <__stack_chk_fail@plt>
  425cc4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425cce:	xchg   ax,ax
  425cd0:	push   rax
  425cd1:	mov    rax,QWORD PTR fs:0x28
  425cda:	mov    QWORD PTR [rsp],rax
  425cde:	mov    rax,QWORD PTR fs:0x28
  425ce7:	cmp    rax,QWORD PTR [rsp]
  425ceb:	jne    425cef <isspace@plt+0x223df>
  425ced:	pop    rax
  425cee:	ret    
  425cef:	call   403280 <__stack_chk_fail@plt>
  425cf4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425cfe:	xchg   ax,ax
  425d00:	push   rbp
  425d01:	mov    rbp,rsp
  425d04:	push   r15
  425d06:	push   r14
  425d08:	push   r13
  425d0a:	push   r12
  425d0c:	push   rbx
  425d0d:	and    rsp,0xffffffffffffffe0
  425d11:	sub    rsp,0xe60
  425d18:	mov    rbx,rsi
  425d1b:	mov    r15,rdi
  425d1e:	mov    rax,QWORD PTR fs:0x28
  425d27:	mov    QWORD PTR [rsp+0xe40],rax
  425d2f:	lea    rdi,[rsp+0xa40]
  425d37:	xor    r14d,r14d
  425d3a:	mov    edx,0x3fc
  425d3f:	xor    esi,esi
  425d41:	call   403360 <memset@plt>
  425d46:	vxorpd xmm0,xmm0,xmm0
  425d4a:	vmovapd YMMWORD PTR [rsp+0xa20],ymm0
  425d53:	vmovapd YMMWORD PTR [rsp+0xa00],ymm0
  425d5c:	vmovapd YMMWORD PTR [rsp+0x9e0],ymm0
  425d65:	vmovapd YMMWORD PTR [rsp+0x9c0],ymm0
  425d6e:	mov    r13,QWORD PTR [rbx+0x10]
  425d72:	mov    r12,QWORD PTR [rbx+0x18]
  425d76:	mov    rax,QWORD PTR [r13+0x0]
  425d7a:	mov    QWORD PTR [rsp+0x28],rax
  425d7f:	mov    rdi,rbx
  425d82:	vzeroupper 
  425d85:	call   421500 <isspace@plt+0x1dbf0>
  425d8a:	mov    QWORD PTR [rsp+0x30],rax
  425d8f:	mov    QWORD PTR [rsp+0x20],r12
  425d94:	mov    rdi,r12
  425d97:	call   41e6c0 <isspace@plt+0x1adb0>
  425d9c:	mov    DWORD PTR [rsp+0x14],eax
  425da0:	mov    r12,QWORD PTR [r15+0x30]
  425da4:	mov    rdi,r13
  425da7:	call   420350 <isspace@plt+0x1ca40>
  425dac:	mov    r13,rax
  425daf:	mov    QWORD PTR [rsp+0x18],rbx
  425db4:	cmp    r12,rbx
  425db7:	jne    425de1 <isspace@plt+0x224d1>
  425db9:	mov    rax,QWORD PTR [r15+0x9a0]
  425dc0:	mov    rsi,QWORD PTR [rax+0x20]
  425dc4:	test   rsi,rsi
  425dc7:	je     425de1 <isspace@plt+0x224d1>
  425dc9:	lea    rdi,[rsp+0xa40]
  425dd1:	mov    edx,0x3fc
  425dd6:	call   4036c0 <__strcpy_chk@plt>
  425ddb:	mov    r14d,0x1
  425de1:	mov    rax,r14
  425de4:	shl    rax,0x8
  425de8:	sub    rax,r14
  425deb:	add    rax,rsp
  425dee:	add    rax,0xa40
  425df4:	mov    QWORD PTR [rsp+0x38],rax
  425df9:	test   r13,r13
  425dfc:	lea    r12,[rip+0xb0e5]        # 430ee8 <isspace@plt+0x2d5d8>
  425e03:	cmovne r12,r13
  425e07:	mov    rdi,QWORD PTR [rsp+0x28]
  425e0c:	call   4104b0 <isspace@plt+0xcba0>
  425e11:	lea    r13,[rip+0xb0da]        # 430ef2 <isspace@plt+0x2d5e2>
  425e18:	lea    r14,[rip+0xac74]        # 430a93 <isspace@plt+0x2d183>
  425e1f:	test   al,al
  425e21:	cmove  r13,r14
  425e25:	mov    rdi,r15
  425e28:	call   4240a0 <isspace@plt+0x20790>
  425e2d:	lea    rbx,[rip+0xb0c3]        # 430ef7 <isspace@plt+0x2d5e7>
  425e34:	test   al,al
  425e36:	cmove  rbx,r14
  425e3a:	lea    r8,[rip+0xb0d7]        # 430f18 <isspace@plt+0x2d608>
  425e41:	mov    esi,0xff
  425e46:	mov    rdi,QWORD PTR [rsp+0x38]
  425e4b:	mov    edx,0x1
  425e50:	mov    rcx,0xffffffffffffffff
  425e57:	mov    r9,r12
  425e5a:	xor    eax,eax
  425e5c:	push   rbx
  425e5d:	push   r13
  425e5f:	call   4030c0 <__snprintf_chk@plt>
  425e64:	add    rsp,0x10
  425e68:	mov    rdi,r15
  425e6b:	call   424630 <isspace@plt+0x20d20>
  425e70:	mov    ebx,eax
  425e72:	add    r15,0x8f0
  425e79:	mov    rdi,r15
  425e7c:	call   404da0 <isspace@plt+0x1490>
  425e81:	test   rax,rax
  425e84:	je     425ec7 <isspace@plt+0x225b7>
  425e86:	cmp    BYTE PTR [rax],0x0
  425e89:	je     425ec7 <isspace@plt+0x225b7>
  425e8b:	lea    r8,[rip+0x9bd8]        # 42fa6a <isspace@plt+0x2c15a>
  425e92:	lea    rdi,[rsp+0x9c0]
  425e9a:	mov    esi,0x20
  425e9f:	mov    edx,0x1
  425ea4:	mov    rcx,0xffffffffffffffff
  425eab:	mov    r9,rax
  425eae:	xor    eax,eax
  425eb0:	call   4030c0 <__snprintf_chk@plt>
  425eb5:	mov    r14d,0x1
  425ebb:	mov    r12d,DWORD PTR [rsp+0x14]
  425ec0:	mov    r13,QWORD PTR [rsp+0x20]
  425ec5:	jmp    425f0b <isspace@plt+0x225fb>
  425ec7:	cmp    ebx,0xffffffff
  425eca:	mov    r12d,DWORD PTR [rsp+0x14]
  425ecf:	mov    r13,QWORD PTR [rsp+0x20]
  425ed4:	je     425f08 <isspace@plt+0x225f8>
  425ed6:	lea    r8,[rip+0xb020]        # 430efd <isspace@plt+0x2d5ed>
  425edd:	lea    rdi,[rsp+0x9c0]
  425ee5:	mov    esi,0x20
  425eea:	mov    edx,0x1
  425eef:	mov    rcx,0xffffffffffffffff
  425ef6:	mov    r9d,ebx
  425ef9:	xor    eax,eax
  425efb:	call   4030c0 <__snprintf_chk@plt>
  425f00:	mov    r14d,0x1
  425f06:	jmp    425f0b <isspace@plt+0x225fb>
  425f08:	xor    r14d,r14d
  425f0b:	mov    rdi,r13
  425f0e:	call   41ea70 <isspace@plt+0x1b160>
  425f13:	cmp    eax,0x2
  425f16:	jl     425f6c <isspace@plt+0x2265c>
  425f18:	mov    ebx,eax
  425f1a:	mov    rdi,r13
  425f1d:	call   41efe0 <isspace@plt+0x1b6d0>
  425f22:	mov    rdi,rax
  425f25:	call   41eaa0 <isspace@plt+0x1b190>
  425f2a:	lea    r9d,[rax+0x1]
  425f2e:	lea    r15,[r14+0x1]
  425f32:	shl    r14,0x5
  425f36:	lea    rdi,[rsp+r14*1]
  425f3a:	add    rdi,0x9c0
  425f41:	sub    rsp,0x8
  425f45:	lea    r8,[rip+0xafae]        # 430efa <isspace@plt+0x2d5ea>
  425f4c:	mov    esi,0x20
  425f51:	mov    edx,0x1
  425f56:	mov    rcx,0xffffffffffffffff
  425f5d:	xor    eax,eax
  425f5f:	push   rbx
  425f60:	call   4030c0 <__snprintf_chk@plt>
  425f65:	add    rsp,0x10
  425f69:	mov    r14,r15
  425f6c:	mov    rdi,QWORD PTR [rsp+0x28]
  425f71:	call   410890 <isspace@plt+0xcf80>
  425f76:	mov    rbx,rax
  425f79:	mov    rdi,r13
  425f7c:	call   41e510 <isspace@plt+0x1ac00>
  425f81:	test   rbx,rbx
  425f84:	je     425ff9 <isspace@plt+0x226e9>
  425f86:	vmovq  xmm0,rax
  425f8b:	vmovdqa xmm1,XMMWORD PTR [rip+0xaf1d]        # 430eb0 <isspace@plt+0x2d5a0>
  425f93:	vpunpckldq xmm0,xmm0,xmm1
  425f97:	vmovapd xmm2,XMMWORD PTR [rip+0xaf21]        # 430ec0 <isspace@plt+0x2d5b0>
  425f9f:	vsubpd xmm0,xmm0,xmm2
  425fa3:	vhaddpd xmm0,xmm0,xmm0
  425fa7:	vmovq  xmm3,rbx
  425fac:	vpunpckldq xmm1,xmm3,xmm1
  425fb0:	vsubpd xmm1,xmm1,xmm2
  425fb4:	vhaddpd xmm1,xmm1,xmm1
  425fb8:	vdivsd xmm0,xmm0,xmm1
  425fbc:	vmulsd xmm0,xmm0,QWORD PTR [rip+0xaf0c]        # 430ed0 <isspace@plt+0x2d5c0>
  425fc4:	vaddsd xmm0,xmm0,QWORD PTR [rip+0xaf0c]        # 430ed8 <isspace@plt+0x2d5c8>
  425fcc:	vmovsd xmm1,QWORD PTR [rip+0xaf0c]        # 430ee0 <isspace@plt+0x2d5d0>
  425fd4:	vsubsd xmm2,xmm0,xmm1
  425fd8:	vcvttsd2si rax,xmm2
  425fdd:	movabs rcx,0x8000000000000000
  425fe7:	xor    rcx,rax
  425fea:	vcvttsd2si r9,xmm0
  425fef:	vucomisd xmm0,xmm1
  425ff3:	cmovae r9,rcx
  425ff7:	jmp    425ffc <isspace@plt+0x226ec>
  425ff9:	xor    r9d,r9d
  425ffc:	mov    rax,r14
  425fff:	shl    rax,0x5
  426003:	lea    rdi,[rsp+rax*1]
  426007:	add    rdi,0x9c0
  42600e:	lea    r8,[rip+0xaeeb]        # 430f00 <isspace@plt+0x2d5f0>
  426015:	mov    esi,0x20
  42601a:	mov    edx,0x1
  42601f:	mov    rcx,0xffffffffffffffff
  426026:	xor    eax,eax
  426028:	call   4030c0 <__snprintf_chk@plt>
  42602d:	test   r12d,0x400
  426034:	jne    4260be <isspace@plt+0x227ae>
  42603a:	inc    r14
  42603d:	mov    rax,QWORD PTR [rsp+0x18]
  426042:	mov    rdi,QWORD PTR [rax+0x18]
  426046:	call   41efe0 <isspace@plt+0x1b6d0>
  42604b:	mov    rbx,rax
  42604e:	mov    rdi,rax
  426051:	call   41f0e0 <isspace@plt+0x1b7d0>
  426056:	mov    r15,rax
  426059:	mov    rdi,rbx
  42605c:	call   41f130 <isspace@plt+0x1b820>
  426061:	mov    rbx,rax
  426064:	cmp    rax,0x10001
  42606a:	jb     426084 <isspace@plt+0x22774>
  42606c:	or     r12d,0x400
  426073:	mov    rax,QWORD PTR [rsp+0x18]
  426078:	mov    rdi,QWORD PTR [rax+0x18]
  42607c:	mov    esi,r12d
  42607f:	call   41b530 <isspace@plt+0x17c20>
  426084:	shl    r14,0x5
  426088:	lea    rdi,[rsp+r14*1]
  42608c:	add    rdi,0x9c0
  426093:	sub    rsp,0x8
  426097:	lea    r8,[rip+0xae68]        # 430f06 <isspace@plt+0x2d5f6>
  42609e:	mov    esi,0x20
  4260a3:	mov    edx,0x1
  4260a8:	mov    rcx,0xffffffffffffffff
  4260af:	mov    r9,r15
  4260b2:	xor    eax,eax
  4260b4:	push   rbx
  4260b5:	call   4030c0 <__snprintf_chk@plt>
  4260ba:	add    rsp,0x10
  4260be:	lea    r10,[rsp+0xb3f]
  4260c6:	cmp    BYTE PTR [rsp+0xb3f],0x0
  4260ce:	lea    rbx,[rip+0xae4a]        # 430f1f <isspace@plt+0x2d60f>
  4260d5:	mov    r11,rbx
  4260d8:	lea    r14,[rip+0xa9b4]        # 430a93 <isspace@plt+0x2d183>
  4260df:	cmove  r11,r14
  4260e3:	cmp    BYTE PTR [rsp+0xc3e],0x0
  4260eb:	lea    r13,[rsp+0xc3e]
  4260f3:	mov    r15,rbx
  4260f6:	cmove  r15,r14
  4260fa:	lea    r12,[rsp+0xd3d]
  426102:	cmp    BYTE PTR [rsp+0xd3d],0x0
  42610a:	cmove  rbx,r14
  42610e:	lea    r8,[rip+0xadfa]        # 430f0f <isspace@plt+0x2d5ff>
  426115:	lea    rdi,[rsp+0x5a0]
  42611d:	lea    r9,[rsp+0xa40]
  426125:	mov    esi,0x41c
  42612a:	mov    ecx,0x41c
  42612f:	mov    edx,0x1
  426134:	mov    eax,0x0
  426139:	push   r12
  42613b:	push   rbx
  42613c:	push   r13
  42613e:	push   r15
  426140:	push   r10
  426142:	push   r11
  426144:	call   4030c0 <__snprintf_chk@plt>
  426149:	add    rsp,0x30
  42614d:	mov    r13d,eax
  426150:	cmp    BYTE PTR [rsp+0x9e0],0x0
  426158:	lea    rbx,[rip+0xadd5]        # 430f34 <isspace@plt+0x2d624>
  42615f:	mov    r11,rbx
  426162:	cmove  r11,r14
  426166:	cmp    BYTE PTR [rsp+0xa00],0x0
  42616e:	lea    r15,[rsp+0xa00]
  426176:	mov    r12,rbx
  426179:	cmove  r12,r14
  42617d:	lea    r10,[rsp+0xa20]
  426185:	cmp    BYTE PTR [rsp+0xa20],0x0
  42618d:	cmove  rbx,r14
  426191:	lea    r8,[rip+0xad8c]        # 430f24 <isspace@plt+0x2d614>
  426198:	lea    r14,[rsp+0x500]
  4261a0:	lea    r9,[rsp+0x9c0]
  4261a8:	mov    esi,0xa0
  4261ad:	mov    ecx,0xa0
  4261b2:	mov    rdi,r14
  4261b5:	mov    edx,0x1
  4261ba:	mov    eax,0x0
  4261bf:	push   r10
  4261c1:	push   rbx
  4261c2:	push   r15
  4261c4:	push   r12
  4261c6:	lea    rbx,[rsp+0xa00]
  4261ce:	push   rbx
  4261cf:	push   r11
  4261d1:	call   4030c0 <__snprintf_chk@plt>
  4261d6:	add    rsp,0x30
  4261da:	mov    ebx,eax
  4261dc:	or     eax,r13d
  4261df:	js     42625f <isspace@plt+0x2294f>
  4261e1:	movsxd rsi,r13d
  4261e4:	lea    r15,[rsp+0x5a0]
  4261ec:	mov    rdi,r15
  4261ef:	call   4174a0 <isspace@plt+0x13b90>
  4261f4:	mov    r12d,eax
  4261f7:	movsxd rsi,ebx
  4261fa:	mov    rdi,r14
  4261fd:	call   4174a0 <isspace@plt+0x13b90>
  426202:	mov    rbx,QWORD PTR [rsp+0x30]
  426207:	sub    ebx,r12d
  42620a:	sub    ebx,eax
  42620c:	test   ebx,ebx
  42620e:	mov    eax,0x1
  426213:	cmovle ebx,eax
  426216:	sub    rsp,0x8
  42621a:	lea    r10,[rip+0x9af4]        # 42fd15 <isspace@plt+0x2c405>
  426221:	lea    r8,[rip+0xad11]        # 430f39 <isspace@plt+0x2d629>
  426228:	lea    r12,[rsp+0x48]
  42622d:	mov    esi,0x4bd
  426232:	mov    ecx,0x4bd
  426237:	mov    rdi,r12
  42623a:	mov    edx,0x1
  42623f:	mov    r9,r15
  426242:	xor    eax,eax
  426244:	push   r14
  426246:	push   r10
  426248:	push   rbx
  426249:	call   4030c0 <__snprintf_chk@plt>
  42624e:	add    rsp,0x20
  426252:	mov    rdi,QWORD PTR [rsp+0x18]
  426257:	mov    rsi,r12
  42625a:	call   4203f0 <isspace@plt+0x1cae0>
  42625f:	mov    rax,QWORD PTR fs:0x28
  426268:	cmp    rax,QWORD PTR [rsp+0xe40]
  426270:	jne    426281 <isspace@plt+0x22971>
  426272:	lea    rsp,[rbp-0x28]
  426276:	pop    rbx
  426277:	pop    r12
  426279:	pop    r13
  42627b:	pop    r14
  42627d:	pop    r15
  42627f:	pop    rbp
  426280:	ret    
  426281:	call   403280 <__stack_chk_fail@plt>
  426286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426290:	push   rax
  426291:	mov    rax,QWORD PTR fs:0x28
  42629a:	mov    QWORD PTR [rsp],rax
  42629e:	mov    rax,QWORD PTR fs:0x28
  4262a7:	cmp    rax,QWORD PTR [rsp]
  4262ab:	jne    4262af <isspace@plt+0x2299f>
  4262ad:	pop    rax
  4262ae:	ret    
  4262af:	call   403280 <__stack_chk_fail@plt>
  4262b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4262be:	xchg   ax,ax
  4262c0:	push   r15
  4262c2:	push   r14
  4262c4:	push   r12
  4262c6:	push   rbx
  4262c7:	push   rax
  4262c8:	mov    r14,rdi
  4262cb:	mov    rax,QWORD PTR fs:0x28
  4262d4:	mov    QWORD PTR [rsp],rax
  4262d8:	lea    rsi,[rip+0xa1]        # 426380 <isspace@plt+0x22a70>
  4262df:	call   404080 <isspace@plt+0x770>
  4262e4:	mov    rdi,r14
  4262e7:	xor    esi,esi
  4262e9:	call   403d30 <isspace@plt+0x420>
  4262ee:	test   rax,rax
  4262f1:	je     426357 <isspace@plt+0x22a47>
  4262f3:	mov    rbx,rax
  4262f6:	xor    r15d,r15d
  4262f9:	xor    r12d,r12d
  4262fc:	jmp    42632e <isspace@plt+0x22a1e>
  4262fe:	mov    rdi,r15
  426301:	mov    rsi,rbx
  426304:	call   4170c0 <isspace@plt+0x137b0>
  426309:	mov    QWORD PTR [r15],rax
  42630c:	mov    QWORD PTR [r15+0x8],rdx
  426310:	mov    rdi,r14
  426313:	mov    rsi,r12
  426316:	call   403f20 <isspace@plt+0x610>
  42631b:	mov    rdi,r14
  42631e:	mov    rsi,r12
  426321:	call   403d30 <isspace@plt+0x420>
  426326:	mov    rbx,rax
  426329:	test   rax,rax
  42632c:	je     426357 <isspace@plt+0x22a47>
  42632e:	mov    rdi,rbx
  426331:	call   417020 <isspace@plt+0x13710>
  426336:	test   rax,rax
  426339:	je     426310 <isspace@plt+0x22a00>
  42633b:	test   r15,r15
  42633e:	je     42634f <isspace@plt+0x22a3f>
  426340:	mov    rdi,r15
  426343:	mov    rsi,rbx
  426346:	call   4171d0 <isspace@plt+0x138c0>
  42634b:	test   al,al
  42634d:	jne    4262fe <isspace@plt+0x229ee>
  42634f:	inc    r12
  426352:	mov    r15,rbx
  426355:	jmp    42631b <isspace@plt+0x22a0b>
  426357:	mov    rax,QWORD PTR fs:0x28
  426360:	cmp    rax,QWORD PTR [rsp]
  426364:	jne    426372 <isspace@plt+0x22a62>
  426366:	add    rsp,0x8
  42636a:	pop    rbx
  42636b:	pop    r12
  42636d:	pop    r14
  42636f:	pop    r15
  426371:	ret    
  426372:	call   403280 <__stack_chk_fail@plt>
  426377:	nop    WORD PTR [rax+rax*1+0x0]
  426380:	push   r15
  426382:	push   r14
  426384:	push   rbx
  426385:	sub    rsp,0x10
  426389:	mov    r14,rsi
  42638c:	mov    r15,rdi
  42638f:	mov    rax,QWORD PTR fs:0x28
  426398:	mov    QWORD PTR [rsp+0x8],rax
  42639d:	call   416fc0 <isspace@plt+0x136b0>
  4263a2:	mov    ebx,eax
  4263a4:	mov    rdi,r14
  4263a7:	call   416fc0 <isspace@plt+0x136b0>
  4263ac:	mov    ecx,eax
  4263ae:	test   bl,bl
  4263b0:	je     4263df <isspace@plt+0x22acf>
  4263b2:	mov    eax,0xffffffff
  4263b7:	test   cl,cl
  4263b9:	je     4263e2 <isspace@plt+0x22ad2>
  4263bb:	mov    rcx,QWORD PTR [r14]
  4263be:	cmp    QWORD PTR [r15],rcx
  4263c1:	jb     4263e2 <isspace@plt+0x22ad2>
  4263c3:	mov    eax,0x1
  4263c8:	jne    4263e2 <isspace@plt+0x22ad2>
  4263ca:	mov    rax,QWORD PTR [r15+0x8]
  4263ce:	xor    ecx,ecx
  4263d0:	cmp    rax,QWORD PTR [r14+0x8]
  4263d4:	setae  cl
  4263d7:	lea    eax,[rcx+rcx*1]
  4263da:	add    eax,0xffffffff
  4263dd:	jmp    4263e2 <isspace@plt+0x22ad2>
  4263df:	movzx  eax,cl
  4263e2:	mov    rcx,QWORD PTR fs:0x28
  4263eb:	cmp    rcx,QWORD PTR [rsp+0x8]
  4263f0:	jne    4263fc <isspace@plt+0x22aec>
  4263f2:	add    rsp,0x10
  4263f6:	pop    rbx
  4263f7:	pop    r14
  4263f9:	pop    r15
  4263fb:	ret    
  4263fc:	call   403280 <__stack_chk_fail@plt>
  426401:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42640b:	nop    DWORD PTR [rax+rax*1+0x0]
  426410:	push   rax
  426411:	mov    rax,QWORD PTR fs:0x28
  42641a:	mov    QWORD PTR [rsp],rax
  42641e:	mov    esi,0x10
  426423:	call   403a50 <isspace@plt+0x140>
  426428:	mov    rax,QWORD PTR fs:0x28
  426431:	cmp    rax,QWORD PTR [rsp]
  426435:	jne    426439 <isspace@plt+0x22b29>
  426437:	pop    rax
  426438:	ret    
  426439:	call   403280 <__stack_chk_fail@plt>
  42643e:	xchg   ax,ax
  426440:	push   rax
  426441:	mov    rax,QWORD PTR fs:0x28
  42644a:	mov    QWORD PTR [rsp],rax
  42644e:	test   rdi,rdi
  426451:	je     426469 <isspace@plt+0x22b59>
  426453:	call   403b50 <isspace@plt+0x240>
  426458:	mov    rax,QWORD PTR fs:0x28
  426461:	cmp    rax,QWORD PTR [rsp]
  426465:	jne    42647a <isspace@plt+0x22b6a>
  426467:	pop    rax
  426468:	ret    
  426469:	mov    rax,QWORD PTR fs:0x28
  426472:	cmp    rax,QWORD PTR [rsp]
  426476:	jne    42647a <isspace@plt+0x22b6a>
  426478:	pop    rax
  426479:	ret    
  42647a:	call   403280 <__stack_chk_fail@plt>
  42647f:	nop
  426480:	push   rax
  426481:	mov    rax,QWORD PTR fs:0x28
  42648a:	mov    QWORD PTR [rsp],rax
  42648e:	mov    eax,DWORD PTR [rdi+0x948]
  426494:	mov    rcx,QWORD PTR fs:0x28
  42649d:	cmp    rcx,QWORD PTR [rsp]
  4264a1:	jne    4264a5 <isspace@plt+0x22b95>
  4264a3:	pop    rcx
  4264a4:	ret    
  4264a5:	call   403280 <__stack_chk_fail@plt>
  4264aa:	nop    WORD PTR [rax+rax*1+0x0]
  4264b0:	push   rax
  4264b1:	mov    rax,QWORD PTR fs:0x28
  4264ba:	mov    QWORD PTR [rsp],rax
  4264be:	cmp    esi,0x1b
  4264c1:	ja     4264c9 <isspace@plt+0x22bb9>
  4264c3:	mov    DWORD PTR [rdi+0x948],esi
  4264c9:	mov    rax,QWORD PTR fs:0x28
  4264d2:	cmp    rax,QWORD PTR [rsp]
  4264d6:	jne    4264da <isspace@plt+0x22bca>
  4264d8:	pop    rax
  4264d9:	ret    
  4264da:	call   403280 <__stack_chk_fail@plt>
  4264df:	nop
  4264e0:	push   rbx
  4264e1:	sub    rsp,0x10
  4264e5:	mov    eax,edx
  4264e7:	mov    rbx,rdi
  4264ea:	mov    rcx,QWORD PTR fs:0x28
  4264f3:	mov    QWORD PTR [rsp+0x8],rcx
  4264f8:	mov    rcx,QWORD PTR [rsi]
  4264fb:	mov    rdx,QWORD PTR [rcx+0x30]
  4264ff:	test   rdx,rdx
  426502:	je     42652b <isspace@plt+0x22c1b>
  426504:	cmp    eax,0x1
  426507:	jne    42650f <isspace@plt+0x22bff>
  426509:	add    rdx,0x68
  42650d:	jmp    42652d <isspace@plt+0x22c1d>
  42650f:	cmp    eax,0x1b
  426512:	ja     42652b <isspace@plt+0x22c1b>
  426514:	mov    rcx,QWORD PTR [rdx+0x10]
  426518:	mov    eax,eax
  42651a:	shl    rax,0x5
  42651e:	lea    rdx,[rcx+rax*1]
  426522:	add    rdx,0xb8
  426529:	jmp    42652d <isspace@plt+0x22c1d>
  42652b:	xor    edx,edx
  42652d:	mov    rdi,rbx
  426530:	call   426560 <isspace@plt+0x22c50>
  426535:	mov    rax,QWORD PTR fs:0x28
  42653e:	cmp    rax,QWORD PTR [rsp+0x8]
  426543:	jne    42654e <isspace@plt+0x22c3e>
  426545:	mov    rax,rbx
  426548:	add    rsp,0x10
  42654c:	pop    rbx
  42654d:	ret    
  42654e:	call   403280 <__stack_chk_fail@plt>
  426553:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42655d:	nop    DWORD PTR [rax]
  426560:	push   rbp
  426561:	push   r15
  426563:	push   r14
  426565:	push   r13
  426567:	push   r12
  426569:	push   rbx
  42656a:	sub    rsp,0x18
  42656e:	mov    r15,rdx
  426571:	mov    rbx,rsi
  426574:	mov    r14,rdi
  426577:	mov    rax,QWORD PTR fs:0x28
  426580:	mov    QWORD PTR [rsp+0x10],rax
  426585:	mov    esi,0x10
  42658a:	call   403a50 <isspace@plt+0x140>
  42658f:	test   r15,r15
  426592:	je     426608 <isspace@plt+0x22cf8>
  426594:	mov    r12,QWORD PTR [rbx+0x18]
  426598:	mov    rdi,r15
  42659b:	call   403fa0 <isspace@plt+0x690>
  4265a0:	mov    r13,rax
  4265a3:	mov    rdi,r14
  4265a6:	mov    rsi,rax
  4265a9:	call   403ad0 <isspace@plt+0x1c0>
  4265ae:	test   r13,r13
  4265b1:	je     426600 <isspace@plt+0x22cf0>
  4265b3:	xor    ebx,ebx
  4265b5:	mov    rbp,rsp
  4265b8:	jmp    4265c8 <isspace@plt+0x22cb8>
  4265ba:	nop    WORD PTR [rax+rax*1+0x0]
  4265c0:	inc    rbx
  4265c3:	cmp    r13,rbx
  4265c6:	je     426600 <isspace@plt+0x22cf0>
  4265c8:	mov    rdi,r15
  4265cb:	mov    rsi,rbx
  4265ce:	call   403d30 <isspace@plt+0x420>
  4265d3:	mov    rdi,r12
  4265d6:	mov    rsi,rax
  4265d9:	call   41f940 <isspace@plt+0x1c030>
  4265de:	mov    QWORD PTR [rsp],rax
  4265e2:	mov    QWORD PTR [rsp+0x8],rdx
  4265e7:	mov    rdi,rbp
  4265ea:	call   416fc0 <isspace@plt+0x136b0>
  4265ef:	test   al,al
  4265f1:	je     4265c0 <isspace@plt+0x22cb0>
  4265f3:	mov    rdi,r14
  4265f6:	mov    rsi,rbp
  4265f9:	call   403d80 <isspace@plt+0x470>
  4265fe:	jmp    4265c0 <isspace@plt+0x22cb0>
  426600:	mov    rdi,r14
  426603:	call   4262c0 <isspace@plt+0x229b0>
  426608:	mov    rax,QWORD PTR fs:0x28
  426611:	cmp    rax,QWORD PTR [rsp+0x10]
  426616:	jne    42662a <isspace@plt+0x22d1a>
  426618:	mov    rax,r14
  42661b:	add    rsp,0x18
  42661f:	pop    rbx
  426620:	pop    r12
  426622:	pop    r13
  426624:	pop    r14
  426626:	pop    r15
  426628:	pop    rbp
  426629:	ret    
  42662a:	call   403280 <__stack_chk_fail@plt>
  42662f:	nop
  426630:	push   rbp
  426631:	push   r15
  426633:	push   r14
  426635:	push   r13
  426637:	push   r12
  426639:	push   rbx
  42663a:	sub    rsp,0x18
  42663e:	mov    rax,QWORD PTR fs:0x28
  426647:	mov    QWORD PTR [rsp+0x10],rax
  42664c:	mov    rax,QWORD PTR [rdi]
  42664f:	mov    r14,QWORD PTR [rax+0x30]
  426653:	test   r14,r14
  426656:	je     4266e2 <isspace@plt+0x22dd2>
  42665c:	mov    r15,rdx
  42665f:	mov    rbx,rdi
  426662:	cmp    esi,0x1
  426665:	jne    42666d <isspace@plt+0x22d5d>
  426667:	add    r14,0x68
  42666b:	jmp    426687 <isspace@plt+0x22d77>
  42666d:	cmp    esi,0x1b
  426670:	ja     4266e2 <isspace@plt+0x22dd2>
  426672:	mov    rax,QWORD PTR [r14+0x10]
  426676:	mov    ecx,esi
  426678:	shl    rcx,0x5
  42667c:	lea    r14,[rax+rcx*1]
  426680:	add    r14,0xb8
  426687:	mov    rdi,r14
  42668a:	call   403cd0 <isspace@plt+0x3c0>
  42668f:	mov    r12,QWORD PTR [rbx+0x18]
  426693:	mov    rdi,r15
  426696:	call   403fa0 <isspace@plt+0x690>
  42669b:	test   rax,rax
  42669e:	je     4266e2 <isspace@plt+0x22dd2>
  4266a0:	mov    r13,rax
  4266a3:	xor    ebx,ebx
  4266a5:	mov    rbp,rsp
  4266a8:	jmp    4266b8 <isspace@plt+0x22da8>
  4266aa:	nop    WORD PTR [rax+rax*1+0x0]
  4266b0:	inc    rbx
  4266b3:	cmp    r13,rbx
  4266b6:	je     4266e2 <isspace@plt+0x22dd2>
  4266b8:	mov    rdi,r15
  4266bb:	mov    rsi,rbx
  4266be:	call   403d30 <isspace@plt+0x420>
  4266c3:	mov    rdi,r12
  4266c6:	mov    rsi,rax
  4266c9:	mov    rdx,rbp
  4266cc:	call   41f9e0 <isspace@plt+0x1c0d0>
  4266d1:	test   al,al
  4266d3:	je     4266b0 <isspace@plt+0x22da0>
  4266d5:	mov    rdi,r14
  4266d8:	mov    rsi,rbp
  4266db:	call   403d80 <isspace@plt+0x470>
  4266e0:	jmp    4266b0 <isspace@plt+0x22da0>
  4266e2:	mov    rax,QWORD PTR fs:0x28
  4266eb:	cmp    rax,QWORD PTR [rsp+0x10]
  4266f0:	jne    426701 <isspace@plt+0x22df1>
  4266f2:	add    rsp,0x18
  4266f6:	pop    rbx
  4266f7:	pop    r12
  4266f9:	pop    r13
  4266fb:	pop    r14
  4266fd:	pop    r15
  4266ff:	pop    rbp
  426700:	ret    
  426701:	call   403280 <__stack_chk_fail@plt>
  426706:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426710:	push   r15
  426712:	push   r14
  426714:	push   rbx
  426715:	sub    rsp,0x30
  426719:	mov    r14,rsi
  42671c:	mov    rbx,rdi
  42671f:	mov    rax,QWORD PTR fs:0x28
  426728:	mov    QWORD PTR [rsp+0x28],rax
  42672d:	lea    r15,[rsp+0x8]
  426732:	mov    esi,0x10
  426737:	mov    rdi,r15
  42673a:	call   403a50 <isspace@plt+0x140>
  42673f:	mov    esi,0x20
  426744:	mov    rdi,rbx
  426747:	call   403a50 <isspace@plt+0x140>
  42674c:	mov    rdi,rbx
  42674f:	mov    rsi,r14
  426752:	call   403ad0 <isspace@plt+0x1c0>
  426757:	mov    rdi,rbx
  42675a:	mov    rsi,r15
  42675d:	call   403d80 <isspace@plt+0x470>
  426762:	add    rbx,0x20
  426766:	mov    esi,0x20
  42676b:	mov    rdi,rbx
  42676e:	call   403a50 <isspace@plt+0x140>
  426773:	mov    rdi,rbx
  426776:	mov    rsi,r14
  426779:	call   403ad0 <isspace@plt+0x1c0>
  42677e:	mov    rax,QWORD PTR fs:0x28
  426787:	cmp    rax,QWORD PTR [rsp+0x28]
  42678c:	jne    426798 <isspace@plt+0x22e88>
  42678e:	add    rsp,0x30
  426792:	pop    rbx
  426793:	pop    r14
  426795:	pop    r15
  426797:	ret    
  426798:	call   403280 <__stack_chk_fail@plt>
  42679d:	nop    DWORD PTR [rax]
  4267a0:	push   r15
  4267a2:	push   r14
  4267a4:	push   rbx
  4267a5:	sub    rsp,0x10
  4267a9:	mov    r15,rdi
  4267ac:	mov    rax,QWORD PTR fs:0x28
  4267b5:	mov    QWORD PTR [rsp+0x8],rax
  4267ba:	call   403fa0 <isspace@plt+0x690>
  4267bf:	test   rax,rax
  4267c2:	je     4267eb <isspace@plt+0x22edb>
  4267c4:	mov    r14,rax
  4267c7:	xor    ebx,ebx
  4267c9:	nop    DWORD PTR [rax+0x0]
  4267d0:	mov    rdi,r15
  4267d3:	mov    rsi,rbx
  4267d6:	call   403d30 <isspace@plt+0x420>
  4267db:	mov    rdi,rax
  4267de:	call   403b50 <isspace@plt+0x240>
  4267e3:	inc    rbx
  4267e6:	cmp    r14,rbx
  4267e9:	jne    4267d0 <isspace@plt+0x22ec0>
  4267eb:	mov    rdi,r15
  4267ee:	call   403b50 <isspace@plt+0x240>
  4267f3:	add    r15,0x20
  4267f7:	mov    rdi,r15
  4267fa:	call   403fa0 <isspace@plt+0x690>
  4267ff:	test   rax,rax
  426802:	je     42682b <isspace@plt+0x22f1b>
  426804:	mov    r14,rax
  426807:	xor    ebx,ebx
  426809:	nop    DWORD PTR [rax+0x0]
  426810:	mov    rdi,r15
  426813:	mov    rsi,rbx
  426816:	call   403d30 <isspace@plt+0x420>
  42681b:	mov    rdi,rax
  42681e:	call   403b50 <isspace@plt+0x240>
  426823:	inc    rbx
  426826:	cmp    r14,rbx
  426829:	jne    426810 <isspace@plt+0x22f00>
  42682b:	mov    rdi,r15
  42682e:	call   403b50 <isspace@plt+0x240>
  426833:	mov    rax,QWORD PTR fs:0x28
  42683c:	cmp    rax,QWORD PTR [rsp+0x8]
  426841:	jne    42684d <isspace@plt+0x22f3d>
  426843:	add    rsp,0x10
  426847:	pop    rbx
  426848:	pop    r14
  42684a:	pop    r15
  42684c:	ret    
  42684d:	call   403280 <__stack_chk_fail@plt>
  426852:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42685c:	nop    DWORD PTR [rax+0x0]
  426860:	push   rbp
  426861:	push   r15
  426863:	push   r14
  426865:	push   r13
  426867:	push   r12
  426869:	push   rbx
  42686a:	sub    rsp,0x68
  42686e:	mov    rbx,rdi
  426871:	mov    rax,QWORD PTR fs:0x28
  42687a:	mov    QWORD PTR [rsp+0x60],rax
  42687f:	mov    rax,QWORD PTR [rdi+0x30]
  426883:	mov    rsi,QWORD PTR [rax+0x18]
  426887:	lea    rdi,[rsp+0x10]
  42688c:	call   41fc50 <isspace@plt+0x1c340>
  426891:	mov    r15,QWORD PTR [rbx+0x30]
  426895:	lea    r12,[r15+0x20]
  426899:	mov    rdi,r12
  42689c:	call   4041f0 <isspace@plt+0x8e0>
  4268a1:	test   rax,rax
  4268a4:	mov    QWORD PTR [rsp+0x8],r12
  4268a9:	je     426940 <isspace@plt+0x23030>
  4268af:	lea    rbx,[rsp+0x30]
  4268b4:	mov    rdi,rbx
  4268b7:	mov    rsi,r15
  4268ba:	mov    rdx,rax
  4268bd:	call   426560 <isspace@plt+0x22c50>
  4268c2:	mov    rdi,rbx
  4268c5:	call   403fa0 <isspace@plt+0x690>
  4268ca:	mov    r12,rax
  4268cd:	lea    rdi,[rsp+0x10]
  4268d2:	call   403fa0 <isspace@plt+0x690>
  4268d7:	cmp    r12,rax
  4268da:	jne    426931 <isspace@plt+0x23021>
  4268dc:	test   r12,r12
  4268df:	je     426920 <isspace@plt+0x23010>
  4268e1:	xor    ebx,ebx
  4268e3:	lea    r13,[rsp+0x30]
  4268e8:	lea    r14,[rsp+0x10]
  4268ed:	nop    DWORD PTR [rax]
  4268f0:	mov    rdi,r13
  4268f3:	mov    rsi,rbx
  4268f6:	call   403d30 <isspace@plt+0x420>
  4268fb:	mov    rbp,rax
  4268fe:	mov    rdi,r14
  426901:	mov    rsi,rbx
  426904:	call   403d30 <isspace@plt+0x420>
  426909:	mov    rdi,rbp
  42690c:	mov    rsi,rax
  42690f:	call   417290 <isspace@plt+0x13980>
  426914:	test   al,al
  426916:	je     426931 <isspace@plt+0x23021>
  426918:	inc    rbx
  42691b:	cmp    r12,rbx
  42691e:	jne    4268f0 <isspace@plt+0x22fe0>
  426920:	lea    rdi,[rsp+0x30]
  426925:	call   403b50 <isspace@plt+0x240>
  42692a:	mov    bl,0x1
  42692c:	jmp    426a43 <isspace@plt+0x23133>
  426931:	lea    rdi,[rsp+0x30]
  426936:	call   403b50 <isspace@plt+0x240>
  42693b:	mov    r12,QWORD PTR [rsp+0x8]
  426940:	lea    r14,[r15+0x40]
  426944:	mov    rdi,r14
  426947:	call   403fa0 <isspace@plt+0x690>
  42694c:	test   rax,rax
  42694f:	je     42697b <isspace@plt+0x2306b>
  426951:	mov    rbp,rax
  426954:	xor    ebx,ebx
  426956:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426960:	mov    rdi,r14
  426963:	mov    rsi,rbx
  426966:	call   403d30 <isspace@plt+0x420>
  42696b:	mov    rdi,rax
  42696e:	call   403b50 <isspace@plt+0x240>
  426973:	inc    rbx
  426976:	cmp    rbp,rbx
  426979:	jne    426960 <isspace@plt+0x23050>
  42697b:	mov    rdi,r14
  42697e:	call   403cd0 <isspace@plt+0x3c0>
  426983:	lea    rdi,[rsp+0x30]
  426988:	mov    esi,0x10
  42698d:	call   403a50 <isspace@plt+0x140>
  426992:	mov    rdi,r12
  426995:	call   403fa0 <isspace@plt+0x690>
  42699a:	mov    rbx,rax
  42699d:	mov    rdi,r12
  4269a0:	call   403fd0 <isspace@plt+0x6c0>
  4269a5:	cmp    rbx,rax
  4269a8:	jb     4269cb <isspace@plt+0x230bb>
  4269aa:	mov    rdi,r12
  4269ad:	xor    esi,esi
  4269af:	call   403d30 <isspace@plt+0x420>
  4269b4:	vmovups ymm0,YMMWORD PTR [rax]
  4269b8:	vmovups YMMWORD PTR [rsp+0x30],ymm0
  4269be:	mov    rdi,r12
  4269c1:	xor    esi,esi
  4269c3:	vzeroupper 
  4269c6:	call   403f20 <isspace@plt+0x610>
  4269cb:	lea    rdi,[rsp+0x30]
  4269d0:	call   403cd0 <isspace@plt+0x3c0>
  4269d5:	mov    r15,QWORD PTR [r15+0x18]
  4269d9:	lea    rdi,[rsp+0x10]
  4269de:	call   403fa0 <isspace@plt+0x690>
  4269e3:	test   rax,rax
  4269e6:	je     426a32 <isspace@plt+0x23122>
  4269e8:	mov    r12,rax
  4269eb:	xor    ebx,ebx
  4269ed:	lea    r13,[rsp+0x10]
  4269f2:	lea    rbp,[rsp+0x50]
  4269f7:	lea    r14,[rsp+0x30]
  4269fc:	jmp    426a08 <isspace@plt+0x230f8>
  4269fe:	xchg   ax,ax
  426a00:	inc    rbx
  426a03:	cmp    r12,rbx
  426a06:	je     426a32 <isspace@plt+0x23122>
  426a08:	mov    rdi,r13
  426a0b:	mov    rsi,rbx
  426a0e:	call   403d30 <isspace@plt+0x420>
  426a13:	mov    rdi,r15
  426a16:	mov    rsi,rax
  426a19:	mov    rdx,rbp
  426a1c:	call   41f9e0 <isspace@plt+0x1c0d0>
  426a21:	test   al,al
  426a23:	je     426a00 <isspace@plt+0x230f0>
  426a25:	mov    rdi,r14
  426a28:	mov    rsi,rbp
  426a2b:	call   403d80 <isspace@plt+0x470>
  426a30:	jmp    426a00 <isspace@plt+0x230f0>
  426a32:	lea    rsi,[rsp+0x30]
  426a37:	mov    rdi,QWORD PTR [rsp+0x8]
  426a3c:	call   4040d0 <isspace@plt+0x7c0>
  426a41:	mov    ebx,eax
  426a43:	lea    rdi,[rsp+0x10]
  426a48:	call   403b50 <isspace@plt+0x240>
  426a4d:	mov    rax,QWORD PTR fs:0x28
  426a56:	cmp    rax,QWORD PTR [rsp+0x60]
  426a5b:	jne    426a6e <isspace@plt+0x2315e>
  426a5d:	mov    eax,ebx
  426a5f:	add    rsp,0x68
  426a63:	pop    rbx
  426a64:	pop    r12
  426a66:	pop    r13
  426a68:	pop    r14
  426a6a:	pop    r15
  426a6c:	pop    rbp
  426a6d:	ret    
  426a6e:	call   403280 <__stack_chk_fail@plt>
  426a73:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426a7d:	nop    DWORD PTR [rax]
  426a80:	push   rbp
  426a81:	push   r15
  426a83:	push   r14
  426a85:	push   r13
  426a87:	push   r12
  426a89:	push   rbx
  426a8a:	sub    rsp,0x78
  426a8e:	mov    rax,QWORD PTR fs:0x28
  426a97:	mov    QWORD PTR [rsp+0x70],rax
  426a9c:	mov    r12,QWORD PTR [rdi+0x30]
  426aa0:	mov    rbx,QWORD PTR [r12+0x18]
  426aa5:	lea    rdi,[rsp+0x50]
  426aaa:	mov    rsi,rbx
  426aad:	call   41fc50 <isspace@plt+0x1c340>
  426ab2:	mov    rdi,rbx
  426ab5:	call   41efe0 <isspace@plt+0x1b6d0>
  426aba:	mov    rdi,rax
  426abd:	call   41f600 <isspace@plt+0x1bcf0>
  426ac2:	mov    ebp,eax
  426ac4:	lea    r15,[r12+0x20]
  426ac9:	mov    rdi,r15
  426acc:	call   4041f0 <isspace@plt+0x8e0>
  426ad1:	test   rax,rax
  426ad4:	je     426bdc <isspace@plt+0x232cc>
  426ada:	mov    BYTE PTR [rsp+0x7],bpl
  426adf:	mov    QWORD PTR [rsp+0x8],rbx
  426ae4:	lea    rbx,[rsp+0x30]
  426ae9:	mov    rdi,rbx
  426aec:	mov    rsi,r12
  426aef:	mov    rdx,rax
  426af2:	call   426560 <isspace@plt+0x22c50>
  426af7:	mov    rdi,rbx
  426afa:	call   403fa0 <isspace@plt+0x690>
  426aff:	mov    rbx,rax
  426b02:	lea    rdi,[rsp+0x50]
  426b07:	call   403fa0 <isspace@plt+0x690>
  426b0c:	cmp    rbx,rax
  426b0f:	jne    426be0 <isspace@plt+0x232d0>
  426b15:	test   rbx,rbx
  426b18:	je     426b66 <isspace@plt+0x23256>
  426b1a:	xor    ebp,ebp
  426b1c:	lea    r14,[rsp+0x50]
  426b21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426b2b:	nop    DWORD PTR [rax+rax*1+0x0]
  426b30:	lea    rdi,[rsp+0x30]
  426b35:	mov    rsi,rbp
  426b38:	call   403d30 <isspace@plt+0x420>
  426b3d:	mov    r13,rax
  426b40:	mov    rdi,r14
  426b43:	mov    rsi,rbp
  426b46:	call   403d30 <isspace@plt+0x420>
  426b4b:	mov    rdi,r13
  426b4e:	mov    rsi,rax
  426b51:	call   417290 <isspace@plt+0x13980>
  426b56:	test   al,al
  426b58:	je     426be0 <isspace@plt+0x232d0>
  426b5e:	inc    rbp
  426b61:	cmp    rbx,rbp
  426b64:	jne    426b30 <isspace@plt+0x23220>
  426b66:	lea    rdi,[rsp+0x30]
  426b6b:	call   403b50 <isspace@plt+0x240>
  426b70:	mov    rdi,r15
  426b73:	call   403fa0 <isspace@plt+0x690>
  426b78:	cmp    rax,0x2
  426b7c:	jb     426bdc <isspace@plt+0x232cc>
  426b7e:	lea    r13,[r12+0x40]
  426b83:	lea    rbx,[rsp+0x10]
  426b88:	mov    bpl,BYTE PTR [rsp+0x7]
  426b8d:	nop    DWORD PTR [rax]
  426b90:	mov    rdi,r15
  426b93:	call   4041a0 <isspace@plt+0x890>
  426b98:	mov    rdi,r13
  426b9b:	mov    rsi,rax
  426b9e:	call   4040d0 <isspace@plt+0x7c0>
  426ba3:	mov    rdi,r15
  426ba6:	call   4041f0 <isspace@plt+0x8e0>
  426bab:	mov    rdi,rbx
  426bae:	mov    rsi,r12
  426bb1:	mov    rdx,rax
  426bb4:	call   426560 <isspace@plt+0x22c50>
  426bb9:	mov    rdi,rbx
  426bbc:	call   403fa0 <isspace@plt+0x690>
  426bc1:	test   rax,rax
  426bc4:	jne    426c2c <isspace@plt+0x2331c>
  426bc6:	mov    rdi,rbx
  426bc9:	call   403b50 <isspace@plt+0x240>
  426bce:	mov    rdi,r15
  426bd1:	call   403fa0 <isspace@plt+0x690>
  426bd6:	cmp    rax,0x2
  426bda:	jae    426b90 <isspace@plt+0x23280>
  426bdc:	xor    ebx,ebx
  426bde:	jmp    426c01 <isspace@plt+0x232f1>
  426be0:	movzx  edx,BYTE PTR [rsp+0x7]
  426be5:	lea    rbx,[rsp+0x30]
  426bea:	mov    rdi,QWORD PTR [rsp+0x8]
  426bef:	mov    rsi,rbx
  426bf2:	call   41fa90 <isspace@plt+0x1c180>
  426bf7:	mov    rdi,rbx
  426bfa:	call   403b50 <isspace@plt+0x240>
  426bff:	mov    bl,0x1
  426c01:	lea    rdi,[rsp+0x50]
  426c06:	call   403b50 <isspace@plt+0x240>
  426c0b:	mov    rax,QWORD PTR fs:0x28
  426c14:	cmp    rax,QWORD PTR [rsp+0x70]
  426c19:	jne    426c37 <isspace@plt+0x23327>
  426c1b:	mov    eax,ebx
  426c1d:	add    rsp,0x78
  426c21:	pop    rbx
  426c22:	pop    r12
  426c24:	pop    r13
  426c26:	pop    r14
  426c28:	pop    r15
  426c2a:	pop    rbp
  426c2b:	ret    
  426c2c:	movzx  edx,bpl
  426c30:	lea    rbx,[rsp+0x10]
  426c35:	jmp    426bea <isspace@plt+0x232da>
  426c37:	call   403280 <__stack_chk_fail@plt>
  426c3c:	nop    DWORD PTR [rax+0x0]
  426c40:	push   rbp
  426c41:	push   r15
  426c43:	push   r14
  426c45:	push   r13
  426c47:	push   r12
  426c49:	push   rbx
  426c4a:	sub    rsp,0x28
  426c4e:	mov    rax,QWORD PTR fs:0x28
  426c57:	mov    QWORD PTR [rsp+0x20],rax
  426c5c:	mov    r15,QWORD PTR [rdi+0x30]
  426c60:	mov    r14,QWORD PTR [r15+0x18]
  426c64:	mov    rdi,r14
  426c67:	call   41efe0 <isspace@plt+0x1b6d0>
  426c6c:	mov    rdi,rax
  426c6f:	call   41f600 <isspace@plt+0x1bcf0>
  426c74:	mov    r12d,eax
  426c77:	lea    r13,[r15+0x40]
  426c7b:	mov    rdi,r13
  426c7e:	call   4041a0 <isspace@plt+0x890>
  426c83:	test   rax,rax
  426c86:	je     426cc3 <isspace@plt+0x233b3>
  426c88:	mov    rbx,rax
  426c8b:	mov    rbp,rsp
  426c8e:	xchg   ax,ax
  426c90:	mov    rdi,rbp
  426c93:	mov    rsi,r15
  426c96:	mov    rdx,rbx
  426c99:	call   426560 <isspace@plt+0x22c50>
  426c9e:	mov    rdi,rbp
  426ca1:	call   403fa0 <isspace@plt+0x690>
  426ca6:	test   rax,rax
  426ca9:	jne    426cc7 <isspace@plt+0x233b7>
  426cab:	mov    rdi,rbx
  426cae:	call   403b50 <isspace@plt+0x240>
  426cb3:	mov    rdi,r13
  426cb6:	call   4041a0 <isspace@plt+0x890>
  426cbb:	mov    rbx,rax
  426cbe:	test   rax,rax
  426cc1:	jne    426c90 <isspace@plt+0x23380>
  426cc3:	xor    eax,eax
  426cc5:	jmp    426cf2 <isspace@plt+0x233e2>
  426cc7:	movzx  edx,r12b
  426ccb:	mov    rbp,rsp
  426cce:	mov    rdi,r14
  426cd1:	mov    rsi,rbp
  426cd4:	call   41fa90 <isspace@plt+0x1c180>
  426cd9:	mov    rdi,rbp
  426cdc:	call   403b50 <isspace@plt+0x240>
  426ce1:	add    r15,0x20
  426ce5:	mov    rdi,r15
  426ce8:	mov    rsi,rbx
  426ceb:	call   4040d0 <isspace@plt+0x7c0>
  426cf0:	mov    al,0x1
  426cf2:	mov    rcx,QWORD PTR fs:0x28
  426cfb:	cmp    rcx,QWORD PTR [rsp+0x20]
  426d00:	jne    426d11 <isspace@plt+0x23401>
  426d02:	add    rsp,0x28
  426d06:	pop    rbx
  426d07:	pop    r12
  426d09:	pop    r13
  426d0b:	pop    r14
  426d0d:	pop    r15
  426d0f:	pop    rbp
  426d10:	ret    
  426d11:	call   403280 <__stack_chk_fail@plt>
  426d16:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426d20:	push   rax
  426d21:	mov    rax,QWORD PTR fs:0x28
  426d2a:	mov    QWORD PTR [rsp],rax
  426d2e:	lea    eax,[rsi-0x61]
  426d31:	cmp    al,0x1a
  426d33:	jae    426d4d <isspace@plt+0x2343d>
  426d35:	mov    rax,QWORD PTR fs:0x28
  426d3e:	cmp    rax,QWORD PTR [rsp]
  426d42:	jne    426d78 <isspace@plt+0x23468>
  426d44:	movsx  eax,sil
  426d48:	add    eax,0xffffffa1
  426d4b:	pop    rcx
  426d4c:	ret    
  426d4d:	cmp    sil,0x5e
  426d51:	mov    eax,0x1
  426d56:	mov    ecx,0x1c
  426d5b:	cmove  ecx,eax
  426d5e:	xor    eax,eax
  426d60:	cmp    sil,0x27
  426d64:	cmovne eax,ecx
  426d67:	mov    rcx,QWORD PTR fs:0x28
  426d70:	cmp    rcx,QWORD PTR [rsp]
  426d74:	jne    426d78 <isspace@plt+0x23468>
  426d76:	pop    rcx
  426d77:	ret    
  426d78:	call   403280 <__stack_chk_fail@plt>
  426d7d:	nop    DWORD PTR [rax]
  426d80:	push   r15
  426d82:	push   r14
  426d84:	push   r12
  426d86:	push   rbx
  426d87:	push   rax
  426d88:	mov    rax,QWORD PTR fs:0x28
  426d91:	mov    QWORD PTR [rsp],rax
  426d95:	test   rsi,rsi
  426d98:	je     426dfe <isspace@plt+0x234ee>
  426d9a:	mov    r14,rsi
  426d9d:	mov    r15,rdi
  426da0:	add    r15,0xaa8
  426da7:	mov    rdi,r15
  426daa:	call   403fa0 <isspace@plt+0x690>
  426daf:	test   rax,rax
  426db2:	je     426dfe <isspace@plt+0x234ee>
  426db4:	mov    r12,rax
  426db7:	xor    ebx,ebx
  426db9:	nop    DWORD PTR [rax+0x0]
  426dc0:	mov    rdi,r15
  426dc3:	mov    rsi,rbx
  426dc6:	call   403c70 <isspace@plt+0x360>
  426dcb:	cmp    rax,r14
  426dce:	je     426dda <isspace@plt+0x234ca>
  426dd0:	inc    rbx
  426dd3:	cmp    r12,rbx
  426dd6:	jne    426dc0 <isspace@plt+0x234b0>
  426dd8:	jmp    426dfe <isspace@plt+0x234ee>
  426dda:	mov    rdi,QWORD PTR [r14]
  426ddd:	call   4030d0 <free@plt>
  426de2:	mov    rdi,QWORD PTR [r14+0x8]
  426de6:	call   4030d0 <free@plt>
  426deb:	mov    rdi,r14
  426dee:	call   4030d0 <free@plt>
  426df3:	mov    rdi,r15
  426df6:	mov    rsi,rbx
  426df9:	call   403f20 <isspace@plt+0x610>
  426dfe:	mov    rax,QWORD PTR fs:0x28
  426e07:	cmp    rax,QWORD PTR [rsp]
  426e0b:	jne    426e19 <isspace@plt+0x23509>
  426e0d:	add    rsp,0x8
  426e11:	pop    rbx
  426e12:	pop    r12
  426e14:	pop    r14
  426e16:	pop    r15
  426e18:	ret    
  426e19:	call   403280 <__stack_chk_fail@plt>
  426e1e:	xchg   ax,ax
  426e20:	push   r14
  426e22:	push   rbx
  426e23:	push   rax
  426e24:	mov    r14,rdi
  426e27:	mov    rax,QWORD PTR fs:0x28
  426e30:	mov    QWORD PTR [rsp],rax
  426e34:	mov    edi,0x1
  426e39:	mov    esi,0x18
  426e3e:	call   403460 <calloc@plt>
  426e43:	mov    rbx,rax
  426e46:	test   rax,rax
  426e49:	je     426e61 <isspace@plt+0x23551>
  426e4b:	add    r14,0xb40
  426e52:	mov    rdi,r14
  426e55:	mov    rsi,rbx
  426e58:	call   403e50 <isspace@plt+0x540>
  426e5d:	test   al,al
  426e5f:	jne    426e6b <isspace@plt+0x2355b>
  426e61:	mov    rdi,rbx
  426e64:	call   4030d0 <free@plt>
  426e69:	xor    ebx,ebx
  426e6b:	mov    rax,QWORD PTR fs:0x28
  426e74:	cmp    rax,QWORD PTR [rsp]
  426e78:	jne    426e85 <isspace@plt+0x23575>
  426e7a:	mov    rax,rbx
  426e7d:	add    rsp,0x8
  426e81:	pop    rbx
  426e82:	pop    r14
  426e84:	ret    
  426e85:	call   403280 <__stack_chk_fail@plt>
  426e8a:	nop    WORD PTR [rax+rax*1+0x0]
  426e90:	push   r15
  426e92:	push   r14
  426e94:	push   r13
  426e96:	push   r12
  426e98:	push   rbx
  426e99:	sub    rsp,0x10
  426e9d:	mov    rax,QWORD PTR fs:0x28
  426ea6:	mov    QWORD PTR [rsp+0x8],rax
  426eab:	test   rsi,rsi
  426eae:	je     426f24 <isspace@plt+0x23614>
  426eb0:	mov    r12,rsi
  426eb3:	mov    r15,rdi
  426eb6:	lea    r14,[rdi+0xb40]
  426ebd:	mov    rdi,r14
  426ec0:	call   403fa0 <isspace@plt+0x690>
  426ec5:	test   rax,rax
  426ec8:	je     426f24 <isspace@plt+0x23614>
  426eca:	mov    r13,rax
  426ecd:	xor    ebx,ebx
  426ecf:	nop
  426ed0:	mov    rdi,r14
  426ed3:	mov    rsi,rbx
  426ed6:	call   403c70 <isspace@plt+0x360>
  426edb:	cmp    rax,r12
  426ede:	je     426eea <isspace@plt+0x235da>
  426ee0:	inc    rbx
  426ee3:	cmp    r13,rbx
  426ee6:	jne    426ed0 <isspace@plt+0x235c0>
  426ee8:	jmp    426f24 <isspace@plt+0x23614>
  426eea:	mov    rdi,QWORD PTR [r12+0x10]
  426eef:	test   rdi,rdi
  426ef2:	je     426ef9 <isspace@plt+0x235e9>
  426ef4:	call   4030d0 <free@plt>
  426ef9:	mov    rsi,QWORD PTR [r12+0x8]
  426efe:	test   rsi,rsi
  426f01:	je     426f11 <isspace@plt+0x23601>
  426f03:	cmp    QWORD PTR [rsi],0x0
  426f07:	jne    426f11 <isspace@plt+0x23601>
  426f09:	mov    rdi,r15
  426f0c:	call   426d80 <isspace@plt+0x23470>
  426f11:	mov    rdi,r12
  426f14:	call   4030d0 <free@plt>
  426f19:	mov    rdi,r14
  426f1c:	mov    rsi,rbx
  426f1f:	call   403f20 <isspace@plt+0x610>
  426f24:	mov    rax,QWORD PTR fs:0x28
  426f2d:	cmp    rax,QWORD PTR [rsp+0x8]
  426f32:	jne    426f42 <isspace@plt+0x23632>
  426f34:	add    rsp,0x10
  426f38:	pop    rbx
  426f39:	pop    r12
  426f3b:	pop    r13
  426f3d:	pop    r14
  426f3f:	pop    r15
  426f41:	ret    
  426f42:	call   403280 <__stack_chk_fail@plt>
  426f47:	nop    WORD PTR [rax+rax*1+0x0]
  426f50:	push   r14
  426f52:	push   rbx
  426f53:	push   rax
  426f54:	mov    rax,QWORD PTR fs:0x28
  426f5d:	mov    QWORD PTR [rsp],rax
  426f61:	mov    rax,QWORD PTR [rdi+0x9a0]
  426f68:	cmp    rax,rsi
  426f6b:	je     426fbe <isspace@plt+0x236ae>
  426f6d:	mov    r14,rsi
  426f70:	mov    rbx,rdi
  426f73:	mov    rcx,QWORD PTR [rax+0x38]
  426f77:	test   rcx,rcx
  426f7a:	je     426f8b <isspace@plt+0x2367b>
  426f7c:	mov    rdi,rbx
  426f7f:	mov    rsi,r14
  426f82:	call   rcx
  426f84:	mov    rax,QWORD PTR [rbx+0x9a0]
  426f8b:	lea    rcx,[rip+0x1b14e]        # 4420e0 <isspace@plt+0x3e7d0>
  426f92:	add    rcx,0x60
  426f96:	cmp    rax,rcx
  426f99:	je     426fa2 <isspace@plt+0x23692>
  426f9b:	mov    QWORD PTR [rbx+0x9a8],rax
  426fa2:	mov    QWORD PTR [rbx+0x9a0],r14
  426fa9:	mov    rax,QWORD PTR [r14+0x30]
  426fad:	test   rax,rax
  426fb0:	je     426fbe <isspace@plt+0x236ae>
  426fb2:	mov    rsi,QWORD PTR [rbx+0x9a8]
  426fb9:	mov    rdi,rbx
  426fbc:	call   rax
  426fbe:	mov    rax,QWORD PTR fs:0x28
  426fc7:	cmp    rax,QWORD PTR [rsp]
  426fcb:	jne    426fd5 <isspace@plt+0x236c5>
  426fcd:	add    rsp,0x8
  426fd1:	pop    rbx
  426fd2:	pop    r14
  426fd4:	ret    
  426fd5:	call   403280 <__stack_chk_fail@plt>
  426fda:	nop    WORD PTR [rax+rax*1+0x0]
  426fe0:	push   r15
  426fe2:	push   r14
  426fe4:	push   rbx
  426fe5:	sub    rsp,0x10
  426fe9:	mov    rax,QWORD PTR fs:0x28
  426ff2:	mov    QWORD PTR [rsp+0x8],rax
  426ff7:	cmp    esi,0x5
  426ffa:	ja     42706b <isspace@plt+0x2375b>
  426ffc:	mov    r14,rdi
  426fff:	mov    eax,esi
  427001:	lea    r15,[rax+rax*2]
  427005:	shl    r15,0x5
  427009:	lea    rbx,[rip+0x1b0d0]        # 4420e0 <isspace@plt+0x3e7d0>
  427010:	add    rbx,r15
  427013:	mov    rax,QWORD PTR [rdi+0x9a0]
  42701a:	cmp    rax,rbx
  42701d:	je     42706b <isspace@plt+0x2375b>
  42701f:	mov    rcx,QWORD PTR [rax+0x38]
  427023:	test   rcx,rcx
  427026:	je     427037 <isspace@plt+0x23727>
  427028:	mov    rdi,r14
  42702b:	mov    rsi,rbx
  42702e:	call   rcx
  427030:	mov    rax,QWORD PTR [r14+0x9a0]
  427037:	lea    rcx,[rip+0x1b0a2]        # 4420e0 <isspace@plt+0x3e7d0>
  42703e:	lea    rdx,[rcx+0x60]
  427042:	cmp    rax,rdx
  427045:	je     42704e <isspace@plt+0x2373e>
  427047:	mov    QWORD PTR [r14+0x9a8],rax
  42704e:	mov    QWORD PTR [r14+0x9a0],rbx
  427055:	mov    rax,QWORD PTR [rcx+r15*1+0x30]
  42705a:	test   rax,rax
  42705d:	je     42706b <isspace@plt+0x2375b>
  42705f:	mov    rsi,QWORD PTR [r14+0x9a8]
  427066:	mov    rdi,r14
  427069:	call   rax
  42706b:	mov    rax,QWORD PTR fs:0x28
  427074:	cmp    rax,QWORD PTR [rsp+0x8]
  427079:	jne    427085 <isspace@plt+0x23775>
  42707b:	add    rsp,0x10
  42707f:	pop    rbx
  427080:	pop    r14
  427082:	pop    r15
  427084:	ret    
  427085:	call   403280 <__stack_chk_fail@plt>
  42708a:	nop    WORD PTR [rax+rax*1+0x0]
  427090:	push   rbp
  427091:	push   r14
  427093:	push   rbx
  427094:	sub    rsp,0x10
  427098:	mov    rax,QWORD PTR fs:0x28
  4270a1:	mov    QWORD PTR [rsp+0x8],rax
  4270a6:	mov    ebp,0x6
  4270ab:	test   rsi,rsi
  4270ae:	je     427158 <isspace@plt+0x23848>
  4270b4:	mov    rbx,rsi
  4270b7:	lea    r14,[rip+0x1b022]        # 4420e0 <isspace@plt+0x3e7d0>
  4270be:	mov    rdi,QWORD PTR [r14+0x18]
  4270c2:	call   4030f0 <strcasecmp@plt>
  4270c7:	test   eax,eax
  4270c9:	je     42712e <isspace@plt+0x2381e>
  4270cb:	mov    rdi,QWORD PTR [r14+0x78]
  4270cf:	mov    rsi,rbx
  4270d2:	call   4030f0 <strcasecmp@plt>
  4270d7:	test   eax,eax
  4270d9:	je     427132 <isspace@plt+0x23822>
  4270db:	mov    rdi,QWORD PTR [r14+0xd8]
  4270e2:	mov    rsi,rbx
  4270e5:	call   4030f0 <strcasecmp@plt>
  4270ea:	test   eax,eax
  4270ec:	je     427139 <isspace@plt+0x23829>
  4270ee:	mov    rdi,QWORD PTR [r14+0x138]
  4270f5:	mov    rsi,rbx
  4270f8:	call   4030f0 <strcasecmp@plt>
  4270fd:	test   eax,eax
  4270ff:	je     427140 <isspace@plt+0x23830>
  427101:	mov    rdi,QWORD PTR [r14+0x198]
  427108:	mov    rsi,rbx
  42710b:	call   4030f0 <strcasecmp@plt>
  427110:	test   eax,eax
  427112:	je     427147 <isspace@plt+0x23837>
  427114:	mov    rdi,QWORD PTR [r14+0x1f8]
  42711b:	mov    rsi,rbx
  42711e:	call   4030f0 <strcasecmp@plt>
  427123:	test   eax,eax
  427125:	jne    427158 <isspace@plt+0x23848>
  427127:	mov    eax,0x5
  42712c:	jmp    42714c <isspace@plt+0x2383c>
  42712e:	xor    eax,eax
  427130:	jmp    42714c <isspace@plt+0x2383c>
  427132:	mov    eax,0x1
  427137:	jmp    42714c <isspace@plt+0x2383c>
  427139:	mov    eax,0x2
  42713e:	jmp    42714c <isspace@plt+0x2383c>
  427140:	mov    eax,0x3
  427145:	jmp    42714c <isspace@plt+0x2383c>
  427147:	mov    eax,0x4
  42714c:	lea    rax,[rax+rax*2]
  427150:	shl    rax,0x5
  427154:	mov    ebp,DWORD PTR [r14+rax*1]
  427158:	mov    rax,QWORD PTR fs:0x28
  427161:	cmp    rax,QWORD PTR [rsp+0x8]
  427166:	jne    427173 <isspace@plt+0x23863>
  427168:	mov    eax,ebp
  42716a:	add    rsp,0x10
  42716e:	pop    rbx
  42716f:	pop    r14
  427171:	pop    rbp
  427172:	ret    
  427173:	call   403280 <__stack_chk_fail@plt>
  427178:	nop    DWORD PTR [rax+rax*1+0x0]
  427180:	push   rax
  427181:	mov    rax,QWORD PTR fs:0x28
  42718a:	mov    QWORD PTR [rsp],rax
  42718e:	mov    rax,QWORD PTR [rdi+0x9a0]
  427195:	mov    eax,DWORD PTR [rax]
  427197:	mov    rcx,QWORD PTR fs:0x28
  4271a0:	cmp    rcx,QWORD PTR [rsp]
  4271a4:	jne    4271a8 <isspace@plt+0x23898>
  4271a6:	pop    rcx
  4271a7:	ret    
  4271a8:	call   403280 <__stack_chk_fail@plt>
  4271ad:	nop    DWORD PTR [rax]
  4271b0:	push   rax
  4271b1:	mov    rax,QWORD PTR fs:0x28
  4271ba:	mov    QWORD PTR [rsp],rax
  4271be:	cmp    esi,0x5
  4271c1:	ja     4271ee <isspace@plt+0x238de>
  4271c3:	mov    eax,esi
  4271c5:	lea    rax,[rax+rax*2]
  4271c9:	shl    rax,0x5
  4271cd:	lea    rcx,[rip+0x1af0c]        # 4420e0 <isspace@plt+0x3e7d0>
  4271d4:	mov    rdi,QWORD PTR [rcx+rax*1+0x10]
  4271d9:	test   rdi,rdi
  4271dc:	je     4271ee <isspace@plt+0x238de>
  4271de:	mov    rsi,rdx
  4271e1:	call   408ab0 <isspace@plt+0x51a0>
  4271e6:	test   rax,rax
  4271e9:	setne  al
  4271ec:	jmp    4271f0 <isspace@plt+0x238e0>
  4271ee:	xor    eax,eax
  4271f0:	mov    rcx,QWORD PTR fs:0x28
  4271f9:	cmp    rcx,QWORD PTR [rsp]
  4271fd:	jne    427201 <isspace@plt+0x238f1>
  4271ff:	pop    rcx
  427200:	ret    
  427201:	call   403280 <__stack_chk_fail@plt>
  427206:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427210:	push   rax
  427211:	mov    rax,QWORD PTR fs:0x28
  42721a:	mov    QWORD PTR [rsp],rax
  42721e:	cmp    esi,0x5
  427221:	ja     42724a <isspace@plt+0x2393a>
  427223:	mov    eax,esi
  427225:	lea    rax,[rax+rax*2]
  427229:	shl    rax,0x5
  42722d:	mov    rdi,QWORD PTR [rdi+rax*1+0x98]
  427235:	test   rdi,rdi
  427238:	je     42724a <isspace@plt+0x2393a>
  42723a:	mov    rsi,rdx
  42723d:	call   408ab0 <isspace@plt+0x51a0>
  427242:	test   rax,rax
  427245:	setne  al
  427248:	jmp    42724c <isspace@plt+0x2393c>
  42724a:	xor    eax,eax
  42724c:	mov    rcx,QWORD PTR fs:0x28
  427255:	cmp    rcx,QWORD PTR [rsp]
  427259:	jne    42725d <isspace@plt+0x2394d>
  42725b:	pop    rcx
  42725c:	ret    
  42725d:	call   403280 <__stack_chk_fail@plt>
  427262:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42726c:	nop    DWORD PTR [rax+0x0]
  427270:	push   rax
  427271:	mov    rax,QWORD PTR fs:0x28
  42727a:	mov    QWORD PTR [rsp],rax
  42727e:	cmp    esi,0x5
  427281:	ja     4272b3 <isspace@plt+0x239a3>
  427283:	mov    eax,esi
  427285:	lea    rdi,[rax+rax*2]
  427289:	shl    rdi,0x5
  42728d:	add    rdi,QWORD PTR [rip+0x1ad2c]        # 441fc0 <isspace@plt+0x3e6b0>
  427294:	movzx  esi,dl
  427297:	mov    rdx,rcx
  42729a:	mov    rcx,r8
  42729d:	call   4272d0 <isspace@plt+0x239c0>
  4272a2:	mov    rcx,QWORD PTR fs:0x28
  4272ab:	cmp    rcx,QWORD PTR [rsp]
  4272af:	jne    4272c6 <isspace@plt+0x239b6>
  4272b1:	pop    rcx
  4272b2:	ret    
  4272b3:	mov    rax,QWORD PTR fs:0x28
  4272bc:	cmp    rax,QWORD PTR [rsp]
  4272c0:	jne    4272c6 <isspace@plt+0x239b6>
  4272c2:	xor    eax,eax
  4272c4:	pop    rcx
  4272c5:	ret    
  4272c6:	call   403280 <__stack_chk_fail@plt>
  4272cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4272d0:	push   rbp
  4272d1:	push   r15
  4272d3:	push   r14
  4272d5:	push   r12
  4272d7:	push   rbx
  4272d8:	sub    rsp,0x10
  4272dc:	mov    rax,QWORD PTR fs:0x28
  4272e5:	mov    QWORD PTR [rsp+0x8],rax
  4272ea:	test   rdi,rdi
  4272ed:	je     42736c <isspace@plt+0x23a5c>
  4272ef:	mov    r14,rcx
  4272f2:	mov    r15,rdx
  4272f5:	mov    r12d,esi
  4272f8:	mov    rbx,rdi
  4272fb:	mov    rbp,QWORD PTR [rcx+0x10]
  4272ff:	test   rbp,rbp
  427302:	je     427324 <isspace@plt+0x23a14>
  427304:	cmp    BYTE PTR [r15],0x3c
  427308:	je     427324 <isspace@plt+0x23a14>
  42730a:	mov    rdi,r15
  42730d:	call   403250 <strlen@plt>
  427312:	mov    rdi,r15
  427315:	mov    rsi,rbp
  427318:	mov    rdx,rax
  42731b:	call   403160 <strncmp@plt>
  427320:	test   eax,eax
  427322:	je     42736c <isspace@plt+0x23a5c>
  427324:	mov    rdi,QWORD PTR [rbx+0x10]
  427328:	test   rdi,rdi
  42732b:	jne    42733e <isspace@plt+0x23a2e>
  42732d:	call   408ef0 <isspace@plt+0x55e0>
  427332:	mov    rdi,rax
  427335:	mov    QWORD PTR [rbx+0x10],rax
  427339:	test   rax,rax
  42733c:	je     42736c <isspace@plt+0x23a5c>
  42733e:	test   r12b,r12b
  427341:	je     42734f <isspace@plt+0x23a3f>
  427343:	mov    rsi,r15
  427346:	call   408ab0 <isspace@plt+0x51a0>
  42734b:	mov    rdi,QWORD PTR [rbx+0x10]
  42734f:	mov    rsi,r15
  427352:	mov    rdx,r14
  427355:	call   408870 <isspace@plt+0x4f60>
  42735a:	mov    rcx,QWORD PTR fs:0x28
  427363:	cmp    rcx,QWORD PTR [rsp+0x8]
  427368:	je     42737e <isspace@plt+0x23a6e>
  42736a:	jmp    42738b <isspace@plt+0x23a7b>
  42736c:	mov    rax,QWORD PTR fs:0x28
  427375:	cmp    rax,QWORD PTR [rsp+0x8]
  42737a:	jne    42738b <isspace@plt+0x23a7b>
  42737c:	xor    eax,eax
  42737e:	add    rsp,0x10
  427382:	pop    rbx
  427383:	pop    r12
  427385:	pop    r14
  427387:	pop    r15
  427389:	pop    rbp
  42738a:	ret    
  42738b:	call   403280 <__stack_chk_fail@plt>
  427390:	push   rax
  427391:	mov    rax,QWORD PTR fs:0x28
  42739a:	mov    QWORD PTR [rsp],rax
  42739e:	cmp    esi,0x5
  4273a1:	ja     4273d6 <isspace@plt+0x23ac6>
  4273a3:	mov    eax,esi
  4273a5:	lea    rax,[rax+rax*2]
  4273a9:	shl    rax,0x5
  4273ad:	add    rdi,rax
  4273b0:	add    rdi,0x88
  4273b7:	movzx  esi,dl
  4273ba:	mov    rdx,rcx
  4273bd:	mov    rcx,r8
  4273c0:	call   4272d0 <isspace@plt+0x239c0>
  4273c5:	mov    rcx,QWORD PTR fs:0x28
  4273ce:	cmp    rcx,QWORD PTR [rsp]
  4273d2:	jne    4273e9 <isspace@plt+0x23ad9>
  4273d4:	pop    rcx
  4273d5:	ret    
  4273d6:	mov    rax,QWORD PTR fs:0x28
  4273df:	cmp    rax,QWORD PTR [rsp]
  4273e3:	jne    4273e9 <isspace@plt+0x23ad9>
  4273e5:	xor    eax,eax
  4273e7:	pop    rcx
  4273e8:	ret    
  4273e9:	call   403280 <__stack_chk_fail@plt>
  4273ee:	xchg   ax,ax
  4273f0:	push   rbp
  4273f1:	push   r15
  4273f3:	push   r14
  4273f5:	push   r13
  4273f7:	push   r12
  4273f9:	push   rbx
  4273fa:	push   rax
  4273fb:	mov    rax,QWORD PTR fs:0x28
  427404:	mov    QWORD PTR [rsp],rax
  427408:	mov    rbp,QWORD PTR [rdi+0x30]
  42740c:	test   rbp,rbp
  42740f:	je     427578 <isspace@plt+0x23c68>
  427415:	mov    r14,rdi
  427418:	mov    eax,0x180
  42741d:	add    rax,QWORD PTR [rip+0x1ab9c]        # 441fc0 <isspace@plt+0x3e6b0>
  427424:	cmp    rsi,rax
  427427:	je     42743e <isspace@plt+0x23b2e>
  427429:	mov    eax,0x1e0
  42742e:	add    rax,QWORD PTR [rip+0x1ab8b]        # 441fc0 <isspace@plt+0x3e6b0>
  427435:	cmp    rsi,rax
  427438:	jne    427578 <isspace@plt+0x23c68>
  42743e:	cmp    BYTE PTR [r14+0x7fd],0x0
  427446:	je     4274fc <isspace@plt+0x23bec>
  42744c:	lea    rdi,[r14+0x8a9]
  427453:	lea    rsi,[rip+0x7804]        # 42ec5e <isspace@plt+0x2b34e>
  42745a:	call   403470 <strcmp@plt>
  42745f:	test   eax,eax
  427461:	jne    4274fc <isspace@plt+0x23bec>
  427467:	mov    rax,QWORD PTR [rbp+0x10]
  42746b:	mov    rdi,QWORD PTR [rbp+0x18]
  42746f:	mov    r15,QWORD PTR [rax]
  427472:	call   41efa0 <isspace@plt+0x1b690>
  427477:	test   rax,rax
  42747a:	je     4274fc <isspace@plt+0x23bec>
  427480:	mov    r12,rax
  427483:	jmp    4274a0 <isspace@plt+0x23b90>
  427485:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42748f:	nop
  427490:	mov    rdi,r12
  427493:	call   41f080 <isspace@plt+0x1b770>
  427498:	mov    r12,rax
  42749b:	test   rax,rax
  42749e:	je     4274fc <isspace@plt+0x23bec>
  4274a0:	mov    rdi,r12
  4274a3:	call   41af10 <isspace@plt+0x17600>
  4274a8:	mov    rbx,rax
  4274ab:	mov    rdi,r15
  4274ae:	mov    rsi,rax
  4274b1:	call   4132e0 <isspace@plt+0xf9d0>
  4274b6:	mov    r13,rax
  4274b9:	mov    rdi,r15
  4274bc:	mov    rsi,rbx
  4274bf:	call   413470 <isspace@plt+0xfb60>
  4274c4:	cmp    r13,rbx
  4274c7:	jne    427490 <isspace@plt+0x23b80>
  4274c9:	cmp    r13,rax
  4274cc:	jne    427490 <isspace@plt+0x23b80>
  4274ce:	mov    rdi,r15
  4274d1:	mov    rsi,rbx
  4274d4:	call   413280 <isspace@plt+0xf970>
  4274d9:	sub    rbx,rax
  4274dc:	je     427490 <isspace@plt+0x23b80>
  4274de:	mov    r13,rax
  4274e1:	mov    rdi,r15
  4274e4:	mov    rsi,rax
  4274e7:	mov    rdx,rbx
  4274ea:	call   410050 <isspace@plt+0xc740>
  4274ef:	mov    rdi,r12
  4274f2:	mov    rsi,r13
  4274f5:	call   41a7c0 <isspace@plt+0x16eb0>
  4274fa:	jmp    427490 <isspace@plt+0x23b80>
  4274fc:	mov    rdi,r14
  4274ff:	call   423ef0 <isspace@plt+0x205e0>
  427504:	cmp    QWORD PTR [rbp+0x2c8],0x0
  42750c:	jne    42756c <isspace@plt+0x23c5c>
  42750e:	lea    rax,[rip+0x19d6b]        # 441280 <isspace@plt+0x3d970>
  427515:	add    rax,0x70
  427519:	cmp    QWORD PTR [r14+0x968],rax
  427520:	jne    42756c <isspace@plt+0x23c5c>
  427522:	mov    eax,DWORD PTR [r14+0x958]
  427529:	cmp    eax,0x2
  42752c:	jl     42756c <isspace@plt+0x23c5c>
  42752e:	mov    rbx,QWORD PTR [r14+0x970]
  427535:	test   rbx,rbx
  427538:	je     42754d <isspace@plt+0x23c3d>
  42753a:	mov    ecx,0x10e0
  42753f:	add    rcx,QWORD PTR [rip+0x1aaaa]        # 441ff0 <isspace@plt+0x3e6e0>
  427546:	mov    QWORD PTR [r14+0x970],rcx
  42754d:	dec    eax
  42754f:	mov    DWORD PTR [r14+0x958],eax
  427556:	mov    rdi,r14
  427559:	call   424440 <isspace@plt+0x20b30>
  42755e:	inc    DWORD PTR [r14+0x958]
  427565:	mov    QWORD PTR [r14+0x970],rbx
  42756c:	mov    rsi,QWORD PTR [rbp+0x10]
  427570:	mov    rdi,r14
  427573:	call   422d80 <isspace@plt+0x1f470>
  427578:	mov    rax,QWORD PTR fs:0x28
  427581:	cmp    rax,QWORD PTR [rsp]
  427585:	jne    427596 <isspace@plt+0x23c86>
  427587:	add    rsp,0x8
  42758b:	pop    rbx
  42758c:	pop    r12
  42758e:	pop    r13
  427590:	pop    r14
  427592:	pop    r15
  427594:	pop    rbp
  427595:	ret    
  427596:	call   403280 <__stack_chk_fail@plt>
  42759b:	nop    DWORD PTR [rax+rax*1+0x0]
  4275a0:	push   r14
  4275a2:	push   rbx
  4275a3:	push   rax
  4275a4:	mov    rbx,rdi
  4275a7:	mov    rax,QWORD PTR fs:0x28
  4275b0:	mov    QWORD PTR [rsp],rax
  4275b4:	call   422dd0 <isspace@plt+0x1f4c0>
  4275b9:	mov    rax,QWORD PTR [rbx+0x9a0]
  4275c0:	mov    r14,QWORD PTR [rbx+0x9a8]
  4275c7:	cmp    rax,r14
  4275ca:	je     427617 <isspace@plt+0x23d07>
  4275cc:	mov    rcx,QWORD PTR [rax+0x38]
  4275d0:	test   rcx,rcx
  4275d3:	je     4275e4 <isspace@plt+0x23cd4>
  4275d5:	mov    rdi,rbx
  4275d8:	mov    rsi,r14
  4275db:	call   rcx
  4275dd:	mov    rax,QWORD PTR [rbx+0x9a0]
  4275e4:	lea    rcx,[rip+0x1aaf5]        # 4420e0 <isspace@plt+0x3e7d0>
  4275eb:	add    rcx,0x60
  4275ef:	cmp    rax,rcx
  4275f2:	je     4275fb <isspace@plt+0x23ceb>
  4275f4:	mov    QWORD PTR [rbx+0x9a8],rax
  4275fb:	mov    QWORD PTR [rbx+0x9a0],r14
  427602:	mov    rax,QWORD PTR [r14+0x30]
  427606:	test   rax,rax
  427609:	je     427617 <isspace@plt+0x23d07>
  42760b:	mov    rsi,QWORD PTR [rbx+0x9a8]
  427612:	mov    rdi,rbx
  427615:	call   rax
  427617:	mov    rax,QWORD PTR fs:0x28
  427620:	cmp    rax,QWORD PTR [rsp]
  427624:	jne    42762e <isspace@plt+0x23d1e>
  427626:	add    rsp,0x8
  42762a:	pop    rbx
  42762b:	pop    r14
  42762d:	ret    
  42762e:	call   403280 <__stack_chk_fail@plt>
  427633:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42763d:	nop    DWORD PTR [rax]
  427640:	push   rbx
  427641:	sub    rsp,0x10
  427645:	mov    rax,QWORD PTR fs:0x28
  42764e:	mov    QWORD PTR [rsp+0x8],rax
  427653:	mov    rax,QWORD PTR [rdi+0x30]
  427657:	test   rax,rax
  42765a:	je     42769d <isspace@plt+0x23d8d>
  42765c:	cmp    BYTE PTR [rsi+0x58],0x0
  427660:	jne    42769d <isspace@plt+0x23d8d>
  427662:	mov    rdi,QWORD PTR [rax+0x18]
  427666:	call   41efa0 <isspace@plt+0x1b690>
  42766b:	test   rax,rax
  42766e:	je     42769d <isspace@plt+0x23d8d>
  427670:	mov    rbx,rax
  427673:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42767d:	nop    DWORD PTR [rax]
  427680:	mov    rdi,rbx
  427683:	mov    esi,0x1
  427688:	call   41f570 <isspace@plt+0x1bc60>
  42768d:	mov    rdi,rbx
  427690:	call   41f080 <isspace@plt+0x1b770>
  427695:	mov    rbx,rax
  427698:	test   rax,rax
  42769b:	jne    427680 <isspace@plt+0x23d70>
  42769d:	mov    rax,QWORD PTR fs:0x28
  4276a6:	cmp    rax,QWORD PTR [rsp+0x8]
  4276ab:	jne    4276b3 <isspace@plt+0x23da3>
  4276ad:	add    rsp,0x10
  4276b1:	pop    rbx
  4276b2:	ret    
  4276b3:	call   403280 <__stack_chk_fail@plt>
  4276b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4276c0:	push   rbx
  4276c1:	sub    rsp,0x10
  4276c5:	mov    rax,QWORD PTR fs:0x28
  4276ce:	mov    QWORD PTR [rsp+0x8],rax
  4276d3:	mov    rbx,QWORD PTR [rdi+0x30]
  4276d7:	test   rbx,rbx
  4276da:	je     4276fd <isspace@plt+0x23ded>
  4276dc:	cmp    BYTE PTR [rsi+0x58],0x0
  4276e0:	jne    4276fd <isspace@plt+0x23ded>
  4276e2:	cmp    QWORD PTR [rdi+0x920],0x0
  4276ea:	jne    4276f4 <isspace@plt+0x23de4>
  4276ec:	mov    rdi,rbx
  4276ef:	call   420420 <isspace@plt+0x1cb10>
  4276f4:	mov    rdi,QWORD PTR [rbx+0x18]
  4276f8:	call   41b340 <isspace@plt+0x17a30>
  4276fd:	mov    rax,QWORD PTR fs:0x28
  427706:	cmp    rax,QWORD PTR [rsp+0x8]
  42770b:	jne    427713 <isspace@plt+0x23e03>
  42770d:	add    rsp,0x10
  427711:	pop    rbx
  427712:	ret    
  427713:	call   403280 <__stack_chk_fail@plt>
  427718:	nop    DWORD PTR [rax+rax*1+0x0]
  427720:	push   r14
  427722:	push   rbx
  427723:	push   rax
  427724:	mov    r14,rdi
  427727:	mov    rax,QWORD PTR fs:0x28
  427730:	mov    QWORD PTR [rsp],rax
  427734:	mov    rax,QWORD PTR [rdi+0x30]
  427738:	test   rax,rax
  42773b:	je     42777d <isspace@plt+0x23e6d>
  42773d:	cmp    BYTE PTR [rsi+0x58],0x0
  427741:	jne    42777d <isspace@plt+0x23e6d>
  427743:	mov    rdi,QWORD PTR [rax+0x18]
  427747:	call   41efa0 <isspace@plt+0x1b690>
  42774c:	test   rax,rax
  42774f:	je     42777d <isspace@plt+0x23e6d>
  427751:	mov    rbx,rax
  427754:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42775e:	xchg   ax,ax
  427760:	mov    rdi,rbx
  427763:	mov    esi,0x1
  427768:	call   41f570 <isspace@plt+0x1bc60>
  42776d:	mov    rdi,rbx
  427770:	call   41f080 <isspace@plt+0x1b770>
  427775:	mov    rbx,rax
  427778:	test   rax,rax
  42777b:	jne    427760 <isspace@plt+0x23e50>
  42777d:	cmp    QWORD PTR [r14+0x920],0x0
  427785:	jne    427796 <isspace@plt+0x23e86>
  427787:	mov    rdi,r14
  42778a:	mov    esi,0x3c
  42778f:	xor    eax,eax
  427791:	call   4279b0 <isspace@plt+0x240a0>
  427796:	mov    rax,QWORD PTR fs:0x28
  42779f:	cmp    rax,QWORD PTR [rsp]
  4277a3:	jne    4277ad <isspace@plt+0x23e9d>
  4277a5:	add    rsp,0x8
  4277a9:	pop    rbx
  4277aa:	pop    r14
  4277ac:	ret    
  4277ad:	call   403280 <__stack_chk_fail@plt>
  4277b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4277bc:	nop    DWORD PTR [rax+0x0]
  4277c0:	push   rbx
  4277c1:	sub    rsp,0x10
  4277c5:	mov    rax,QWORD PTR fs:0x28
  4277ce:	mov    QWORD PTR [rsp+0x8],rax
  4277d3:	mov    rbx,QWORD PTR [rdi+0x30]
  4277d7:	test   rbx,rbx
  4277da:	je     427816 <isspace@plt+0x23f06>
  4277dc:	cmp    BYTE PTR [rsi+0x58],0x0
  4277e0:	je     4277fb <isspace@plt+0x23eeb>
  4277e2:	mov    rbx,QWORD PTR [rbx+0x18]
  4277e6:	mov    rdi,rbx
  4277e9:	call   41e510 <isspace@plt+0x1ac00>
  4277ee:	mov    rdi,rbx
  4277f1:	mov    rsi,rax
  4277f4:	call   41a790 <isspace@plt+0x16e80>
  4277f9:	jmp    427816 <isspace@plt+0x23f06>
  4277fb:	cmp    QWORD PTR [rdi+0x920],0x0
  427803:	jne    42780d <isspace@plt+0x23efd>
  427805:	mov    rdi,rbx
  427808:	call   420420 <isspace@plt+0x1cb10>
  42780d:	mov    rdi,QWORD PTR [rbx+0x18]
  427811:	call   41b340 <isspace@plt+0x17a30>
  427816:	mov    rax,QWORD PTR fs:0x28
  42781f:	cmp    rax,QWORD PTR [rsp+0x8]
  427824:	jne    42782c <isspace@plt+0x23f1c>
  427826:	add    rsp,0x10
  42782a:	pop    rbx
  42782b:	ret    
  42782c:	call   403280 <__stack_chk_fail@plt>
  427831:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42783b:	nop    DWORD PTR [rax+rax*1+0x0]
  427840:	push   rbx
  427841:	sub    rsp,0x10
  427845:	mov    rax,QWORD PTR fs:0x28
  42784e:	mov    QWORD PTR [rsp+0x8],rax
  427853:	mov    rax,QWORD PTR [rdi+0x30]
  427857:	test   rax,rax
  42785a:	je     4278a8 <isspace@plt+0x23f98>
  42785c:	cmp    QWORD PTR [rax+0x2c8],0x0
  427864:	jne    4278a8 <isspace@plt+0x23f98>
  427866:	mov    rbx,rdi
  427869:	cmp    QWORD PTR [rdi+0x920],0x0
  427871:	jne    4278a0 <isspace@plt+0x23f90>
  427873:	lea    rdi,[rbx+0x958]
  42787a:	call   421c70 <isspace@plt+0x1e360>
  42787f:	lea    rax,[rip+0x199fa]        # 441280 <isspace@plt+0x3d970>
  427886:	add    rax,0x70
  42788a:	mov    QWORD PTR [rbx+0x968],rax
  427891:	mov    rax,QWORD PTR [rbx+0x9a0]
  427898:	mov    eax,DWORD PTR [rax]
  42789a:	mov    DWORD PTR [rbx+0x95c],eax
  4278a0:	mov    rdi,rbx
  4278a3:	call   423e90 <isspace@plt+0x20580>
  4278a8:	mov    rax,QWORD PTR fs:0x28
  4278b1:	cmp    rax,QWORD PTR [rsp+0x8]
  4278b6:	jne    4278be <isspace@plt+0x23fae>
  4278b8:	add    rsp,0x10
  4278bc:	pop    rbx
  4278bd:	ret    
  4278be:	call   403280 <__stack_chk_fail@plt>
  4278c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4278cd:	nop    DWORD PTR [rax]
  4278d0:	push   rax
  4278d1:	mov    rax,QWORD PTR fs:0x28
  4278da:	mov    QWORD PTR [rsp],rax
  4278de:	call   421f60 <isspace@plt+0x1e650>
  4278e3:	mov    rax,QWORD PTR fs:0x28
  4278ec:	cmp    rax,QWORD PTR [rsp]
  4278f0:	jne    4278f4 <isspace@plt+0x23fe4>
  4278f2:	pop    rax
  4278f3:	ret    
  4278f4:	call   403280 <__stack_chk_fail@plt>
  4278f9:	nop    DWORD PTR [rax+0x0]
  427900:	push   rax
  427901:	mov    rax,QWORD PTR fs:0x28
  42790a:	mov    QWORD PTR [rsp],rax
  42790e:	mov    rax,QWORD PTR [rdi+0x30]
  427912:	test   rax,rax
  427915:	je     427931 <isspace@plt+0x24021>
  427917:	mov    rsi,QWORD PTR [rax+0x10]
  42791b:	call   422d80 <isspace@plt+0x1f470>
  427920:	mov    rax,QWORD PTR fs:0x28
  427929:	cmp    rax,QWORD PTR [rsp]
  42792d:	jne    427942 <isspace@plt+0x24032>
  42792f:	pop    rax
  427930:	ret    
  427931:	mov    rax,QWORD PTR fs:0x28
  42793a:	cmp    rax,QWORD PTR [rsp]
  42793e:	jne    427942 <isspace@plt+0x24032>
  427940:	pop    rax
  427941:	ret    
  427942:	call   403280 <__stack_chk_fail@plt>
  427947:	nop    WORD PTR [rax+rax*1+0x0]
  427950:	push   rax
  427951:	mov    rax,QWORD PTR fs:0x28
  42795a:	mov    QWORD PTR [rsp],rax
  42795e:	call   4221a0 <isspace@plt+0x1e890>
  427963:	mov    rax,QWORD PTR fs:0x28
  42796c:	cmp    rax,QWORD PTR [rsp]
  427970:	jne    427974 <isspace@plt+0x24064>
  427972:	pop    rax
  427973:	ret    
  427974:	call   403280 <__stack_chk_fail@plt>
  427979:	nop    DWORD PTR [rax+0x0]
  427980:	push   rax
  427981:	mov    rax,QWORD PTR fs:0x28
  42798a:	mov    QWORD PTR [rsp],rax
  42798e:	mov    DWORD PTR [rdi+0x918],esi
  427994:	mov    rax,QWORD PTR fs:0x28
  42799d:	cmp    rax,QWORD PTR [rsp]
  4279a1:	jne    4279a5 <isspace@plt+0x24095>
  4279a3:	pop    rax
  4279a4:	ret    
  4279a5:	call   403280 <__stack_chk_fail@plt>
  4279aa:	nop    WORD PTR [rax+rax*1+0x0]
  4279b0:	push   r14
  4279b2:	push   rbx
  4279b3:	sub    rsp,0xd8
  4279ba:	mov    ebx,esi
  4279bc:	mov    r14,rdi
  4279bf:	test   al,al
  4279c1:	je     4279fc <isspace@plt+0x240ec>
  4279c3:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  4279c9:	vmovaps XMMWORD PTR [rsp+0x40],xmm1
  4279cf:	vmovaps XMMWORD PTR [rsp+0x50],xmm2
  4279d5:	vmovaps XMMWORD PTR [rsp+0x60],xmm3
  4279db:	vmovaps XMMWORD PTR [rsp+0x70],xmm4
  4279e1:	vmovaps XMMWORD PTR [rsp+0x80],xmm5
  4279ea:	vmovaps XMMWORD PTR [rsp+0x90],xmm6
  4279f3:	vmovaps XMMWORD PTR [rsp+0xa0],xmm7
  4279fc:	mov    QWORD PTR [rsp+0x10],rdx
  427a01:	mov    QWORD PTR [rsp+0x18],rcx
  427a06:	mov    QWORD PTR [rsp+0x20],r8
  427a0b:	mov    QWORD PTR [rsp+0x28],r9
  427a10:	mov    rax,QWORD PTR fs:0x28
  427a19:	mov    QWORD PTR [rsp+0xd0],rax
  427a21:	mov    rax,rsp
  427a24:	mov    QWORD PTR [rsp+0xc0],rax
  427a2c:	lea    rax,[rsp+0xf0]
  427a34:	mov    QWORD PTR [rsp+0xb8],rax
  427a3c:	movabs rax,0x3000000010
  427a46:	mov    QWORD PTR [rsp+0xb0],rax
  427a4e:	lea    eax,[rbx-0x17]
  427a51:	cmp    eax,0x30
  427a54:	ja     427bbc <isspace@plt+0x242ac>
  427a5a:	lea    rcx,[rip+0x9537]        # 430f98 <isspace@plt+0x2d688>
  427a61:	movsxd rax,DWORD PTR [rcx+rax*4]
  427a65:	add    rax,rcx
  427a68:	jmp    rax
  427a6a:	movsxd rcx,DWORD PTR [rsp+0xb0]
  427a72:	cmp    rcx,0x28
  427a76:	ja     427ae3 <isspace@plt+0x241d3>
  427a78:	mov    rax,rcx
  427a7b:	add    rax,QWORD PTR [rsp+0xc0]
  427a83:	add    ecx,0x8
  427a86:	mov    DWORD PTR [rsp+0xb0],ecx
  427a8d:	jmp    427af7 <isspace@plt+0x241e7>
  427a8f:	movsxd rcx,DWORD PTR [rsp+0xb0]
  427a97:	cmp    rcx,0x28
  427a9b:	ja     427b28 <isspace@plt+0x24218>
  427aa1:	mov    rax,rcx
  427aa4:	add    rax,QWORD PTR [rsp+0xc0]
  427aac:	add    ecx,0x8
  427aaf:	mov    DWORD PTR [rsp+0xb0],ecx
  427ab6:	jmp    427b3c <isspace@plt+0x2422c>
  427abb:	mov    eax,DWORD PTR [r14+0x7f4]
  427ac2:	test   eax,eax
  427ac4:	je     427c0a <isspace@plt+0x242fa>
  427aca:	cmp    ebx,0x46
  427acd:	jne    427c23 <isspace@plt+0x24313>
  427ad3:	mov    ebx,eax
  427ad5:	cmp    ebx,0x41
  427ad8:	jae    427bc1 <isspace@plt+0x242b1>
  427ade:	jmp    427c2e <isspace@plt+0x2431e>
  427ae3:	mov    rax,QWORD PTR [rsp+0xb8]
  427aeb:	lea    rcx,[rax+0x8]
  427aef:	mov    QWORD PTR [rsp+0xb8],rcx
  427af7:	mov    rsi,QWORD PTR [rax]
  427afa:	test   rsi,rsi
  427afd:	je     427c06 <isspace@plt+0x242f6>
  427b03:	lea    rdi,[r14+0x7e8]
  427b0a:	mov    edx,0x8
  427b0f:	call   403150 <strncpy@plt>
  427b14:	mov    BYTE PTR [r14+0x7ef],0x0
  427b1c:	mov    DWORD PTR [r14+0x7f0],ebx
  427b23:	jmp    427c2e <isspace@plt+0x2431e>
  427b28:	mov    rax,QWORD PTR [rsp+0xb8]
  427b30:	lea    rcx,[rax+0x8]
  427b34:	mov    QWORD PTR [rsp+0xb8],rcx
  427b3c:	mov    rsi,QWORD PTR [rax]
  427b3f:	mov    rdi,r14
  427b42:	call   424ba0 <isspace@plt+0x21290>
  427b47:	test   rax,rax
  427b4a:	je     427bfe <isspace@plt+0x242ee>
  427b50:	mov    rdi,rax
  427b53:	call   42ae70 <isspace@plt+0x27560>
  427b58:	xor    eax,eax
  427b5a:	cmp    ebx,0x44
  427b5d:	sete   al
  427b60:	mov    ebx,0x36
  427b65:	sub    ebx,eax
  427b67:	mov    DWORD PTR [r14+0x7f4],ebx
  427b6e:	jmp    427c2e <isspace@plt+0x2431e>
  427b73:	lea    rax,[rip+0x19706]        # 441280 <isspace@plt+0x3d970>
  427b7a:	add    rax,0x10
  427b7e:	xor    ebx,ebx
  427b80:	cmp    QWORD PTR [r14+0x920],rax
  427b87:	sete   bl
  427b8a:	xor    ebx,0x17
  427b8d:	jmp    427c2e <isspace@plt+0x2431e>
  427b92:	lea    rax,[rip+0x196e7]        # 441280 <isspace@plt+0x3d970>
  427b99:	add    rax,0x10
  427b9d:	xor    ecx,ecx
  427b9f:	cmp    QWORD PTR [r14+0x920],rax
  427ba6:	setne  cl
  427ba9:	lea    ebx,[rcx+rcx*1]
  427bac:	add    ebx,0x1b
  427baf:	jmp    427c2e <isspace@plt+0x2431e>
  427bb1:	mov    ebx,DWORD PTR [r14+0x7f0]
  427bb8:	test   ebx,ebx
  427bba:	je     427c06 <isspace@plt+0x242f6>
  427bbc:	cmp    ebx,0x41
  427bbf:	jb     427c2e <isspace@plt+0x2431e>
  427bc1:	lea    rdi,[r14+0xb00]
  427bc8:	add    ebx,0xffffffb8
  427bcb:	mov    rsi,rbx
  427bce:	call   403c70 <isspace@plt+0x360>
  427bd3:	mov    QWORD PTR [r14+0x928],rax
  427bda:	test   rax,rax
  427bdd:	jne    427c46 <isspace@plt+0x24336>
  427bdf:	jmp    427c06 <isspace@plt+0x242f6>
  427be1:	mov    eax,DWORD PTR [r14+0x7f0]
  427be8:	add    eax,0xffffffd3
  427beb:	cmp    eax,0x4
  427bee:	jae    427c06 <isspace@plt+0x242f6>
  427bf0:	cdqe   
  427bf2:	lea    rcx,[rip+0x95f7]        # 4311f0 <isspace@plt+0x2d8e0>
  427bf9:	mov    ebx,DWORD PTR [rcx+rax*4]
  427bfc:	jmp    427c2e <isspace@plt+0x2431e>
  427bfe:	mov    rdi,r14
  427c01:	call   422dd0 <isspace@plt+0x1f4c0>
  427c06:	xor    eax,eax
  427c08:	jmp    427c50 <isspace@plt+0x24340>
  427c0a:	mov    DWORD PTR [r14+0x7f4],0x35
  427c15:	mov    eax,0x35
  427c1a:	cmp    ebx,0x46
  427c1d:	je     427ad3 <isspace@plt+0x241c3>
  427c23:	xor    ebx,ebx
  427c25:	cmp    eax,0x35
  427c28:	sete   bl
  427c2b:	add    ebx,0x35
  427c2e:	mov    eax,ebx
  427c30:	lea    rax,[rax+rax*8]
  427c34:	shl    rax,0x3
  427c38:	add    rax,QWORD PTR [rip+0x1a3b1]        # 441ff0 <isspace@plt+0x3e6e0>
  427c3f:	mov    QWORD PTR [r14+0x928],rax
  427c46:	mov    rdi,r14
  427c49:	call   4222e0 <isspace@plt+0x1e9d0>
  427c4e:	mov    al,0x1
  427c50:	mov    rcx,QWORD PTR fs:0x28
  427c59:	cmp    rcx,QWORD PTR [rsp+0xd0]
  427c61:	jne    427c6e <isspace@plt+0x2435e>
  427c63:	add    rsp,0xd8
  427c6a:	pop    rbx
  427c6b:	pop    r14
  427c6d:	ret    
  427c6e:	call   403280 <__stack_chk_fail@plt>
  427c73:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427c7d:	nop    DWORD PTR [rax]
  427c80:	push   rbx
  427c81:	sub    rsp,0x10
  427c85:	mov    rbx,rsi
  427c88:	mov    rax,QWORD PTR fs:0x28
  427c91:	mov    QWORD PTR [rsp+0x8],rax
  427c96:	mov    esi,0x1
  427c9b:	call   424330 <isspace@plt+0x20a20>
  427ca0:	movsxd rsi,eax
  427ca3:	mov    rdi,rbx
  427ca6:	call   4108c0 <isspace@plt+0xcfb0>
  427cab:	mov    rdi,rbx
  427cae:	mov    rsi,rax
  427cb1:	call   4132e0 <isspace@plt+0xf9d0>
  427cb6:	mov    rcx,QWORD PTR fs:0x28
  427cbf:	cmp    rcx,QWORD PTR [rsp+0x8]
  427cc4:	jne    427ccc <isspace@plt+0x243bc>
  427cc6:	add    rsp,0x10
  427cca:	pop    rbx
  427ccb:	ret    
  427ccc:	call   403280 <__stack_chk_fail@plt>
  427cd1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427cdb:	nop    DWORD PTR [rax+rax*1+0x0]
  427ce0:	push   r14
  427ce2:	push   rbx
  427ce3:	push   rax
  427ce4:	mov    r14,rdx
  427ce7:	mov    rbx,rsi
  427cea:	mov    rax,QWORD PTR fs:0x28
  427cf3:	mov    QWORD PTR [rsp],rax
  427cf7:	xor    esi,esi
  427cf9:	call   424330 <isspace@plt+0x20a20>
  427cfe:	movsxd rdx,eax
  427d01:	mov    rdi,rbx
  427d04:	mov    rsi,r14
  427d07:	call   413530 <isspace@plt+0xfc20>
  427d0c:	mov    rcx,QWORD PTR fs:0x28
  427d15:	cmp    rcx,QWORD PTR [rsp]
  427d19:	jne    427d23 <isspace@plt+0x24413>
  427d1b:	add    rsp,0x8
  427d1f:	pop    rbx
  427d20:	pop    r14
  427d22:	ret    
  427d23:	call   403280 <__stack_chk_fail@plt>
  427d28:	nop    DWORD PTR [rax+rax*1+0x0]
  427d30:	push   rbp
  427d31:	push   r15
  427d33:	push   r14
  427d35:	push   r13
  427d37:	push   r12
  427d39:	push   rbx
  427d3a:	sub    rsp,0x38
  427d3e:	mov    r12,rdx
  427d41:	mov    r14,rsi
  427d44:	mov    r15,rdi
  427d47:	mov    rax,QWORD PTR fs:0x28
  427d50:	mov    QWORD PTR [rsp+0x30],rax
  427d55:	mov    rbx,rsp
  427d58:	mov    rdi,rbx
  427d5b:	call   410570 <isspace@plt+0xcc60>
  427d60:	lea    rsi,[rsp+0x2f]
  427d65:	mov    rdi,rbx
  427d68:	call   412400 <isspace@plt+0xeaf0>
  427d6d:	test   al,al
  427d6f:	je     427e3d <isspace@plt+0x2452d>
  427d75:	mov    rdi,r15
  427d78:	mov    esi,0x1
  427d7d:	call   424330 <isspace@plt+0x20a20>
  427d82:	mov    ebp,eax
  427d84:	call   4038f0 <__ctype_b_loc@plt>
  427d89:	mov    rax,QWORD PTR [rax]
  427d8c:	movzx  edi,BYTE PTR [rsp+0x2f]
  427d91:	test   BYTE PTR [rax+rdi*2+0x1],0x20
  427d96:	jne    427dee <isspace@plt+0x244de>
  427d98:	call   412cb0 <isspace@plt+0xf3a0>
  427d9d:	mov    r13d,0x708
  427da3:	add    r13,QWORD PTR [rip+0x1a246]        # 441ff0 <isspace@plt+0x3e6e0>
  427daa:	test   eax,eax
  427dac:	jne    427dfb <isspace@plt+0x244eb>
  427dae:	mov    rdi,rsp
  427db1:	lea    rsi,[rsp+0x2f]
  427db6:	call   4128a0 <isspace@plt+0xef90>
  427dbb:	test   al,al
  427dbd:	je     427dfb <isspace@plt+0x244eb>
  427dbf:	movzx  edi,BYTE PTR [rsp+0x2f]
  427dc4:	call   412cb0 <isspace@plt+0xf3a0>
  427dc9:	test   eax,eax
  427dcb:	je     427e5f <isspace@plt+0x2454f>
  427dd1:	cmp    ebp,0x1
  427dd4:	jne    427e67 <isspace@plt+0x24557>
  427dda:	mov    r13d,0x4c8
  427de0:	add    r13,QWORD PTR [rip+0x1a209]        # 441ff0 <isspace@plt+0x3e6e0>
  427de7:	mov    ebp,0x1
  427dec:	jmp    427dfb <isspace@plt+0x244eb>
  427dee:	mov    r13d,0x678
  427df4:	add    r13,QWORD PTR [rip+0x1a1f5]        # 441ff0 <isspace@plt+0x3e6e0>
  427dfb:	inc    ebp
  427dfd:	nop    DWORD PTR [rax]
  427e00:	mov    rbx,r12
  427e03:	dec    ebp
  427e05:	je     427e23 <isspace@plt+0x24513>
  427e07:	cmp    DWORD PTR [r15+0x9c0],0x0
  427e0f:	jne    427e2a <isspace@plt+0x2451a>
  427e11:	mov    rdi,r14
  427e14:	mov    rsi,rbx
  427e17:	call   QWORD PTR [r13+0x8]
  427e1b:	mov    r12,rax
  427e1e:	cmp    rax,rbx
  427e21:	jne    427e00 <isspace@plt+0x244f0>
  427e23:	test   BYTE PTR [r13+0x38],0x4
  427e28:	jne    427e2f <isspace@plt+0x2451f>
  427e2a:	mov    r12,rbx
  427e2d:	jmp    427e3d <isspace@plt+0x2452d>
  427e2f:	mov    rdi,r14
  427e32:	mov    rsi,rbx
  427e35:	call   412d10 <isspace@plt+0xf400>
  427e3a:	mov    r12,rax
  427e3d:	mov    rax,QWORD PTR fs:0x28
  427e46:	cmp    rax,QWORD PTR [rsp+0x30]
  427e4b:	jne    427e7b <isspace@plt+0x2456b>
  427e4d:	mov    rax,r12
  427e50:	add    rsp,0x38
  427e54:	pop    rbx
  427e55:	pop    r12
  427e57:	pop    r13
  427e59:	pop    r14
  427e5b:	pop    r15
  427e5d:	pop    rbp
  427e5e:	ret    
  427e5f:	mov    r13d,0x708
  427e65:	jmp    427df4 <isspace@plt+0x244e4>
  427e67:	mov    r13d,0x708
  427e6d:	add    r13,QWORD PTR [rip+0x1a17c]        # 441ff0 <isspace@plt+0x3e6e0>
  427e74:	dec    ebp
  427e76:	jmp    427dfb <isspace@plt+0x244eb>
  427e7b:	call   403280 <__stack_chk_fail@plt>
  427e80:	push   rbp
  427e81:	push   r15
  427e83:	push   r14
  427e85:	push   r13
  427e87:	push   r12
  427e89:	push   rbx
  427e8a:	sub    rsp,0x38
  427e8e:	mov    r12,rdx
  427e91:	mov    r14,rsi
  427e94:	mov    r15,rdi
  427e97:	mov    rax,QWORD PTR fs:0x28
  427ea0:	mov    QWORD PTR [rsp+0x30],rax
  427ea5:	mov    rbx,rsp
  427ea8:	mov    rdi,rbx
  427eab:	call   410570 <isspace@plt+0xcc60>
  427eb0:	lea    rsi,[rsp+0x2f]
  427eb5:	mov    rdi,rbx
  427eb8:	call   412400 <isspace@plt+0xeaf0>
  427ebd:	test   al,al
  427ebf:	je     427f8d <isspace@plt+0x2467d>
  427ec5:	mov    rdi,r15
  427ec8:	mov    esi,0x1
  427ecd:	call   424330 <isspace@plt+0x20a20>
  427ed2:	mov    ebp,eax
  427ed4:	call   4038f0 <__ctype_b_loc@plt>
  427ed9:	mov    rax,QWORD PTR [rax]
  427edc:	movzx  edi,BYTE PTR [rsp+0x2f]
  427ee1:	test   BYTE PTR [rax+rdi*2+0x1],0x20
  427ee6:	jne    427f3e <isspace@plt+0x2462e>
  427ee8:	call   403910 <isspace@plt>
  427eed:	mov    r13d,0x8b8
  427ef3:	add    r13,QWORD PTR [rip+0x1a0f6]        # 441ff0 <isspace@plt+0x3e6e0>
  427efa:	test   eax,eax
  427efc:	jne    427f4b <isspace@plt+0x2463b>
  427efe:	mov    rdi,rsp
  427f01:	lea    rsi,[rsp+0x2f]
  427f06:	call   4128a0 <isspace@plt+0xef90>
  427f0b:	test   al,al
  427f0d:	je     427f4b <isspace@plt+0x2463b>
  427f0f:	movzx  edi,BYTE PTR [rsp+0x2f]
  427f14:	call   403910 <isspace@plt>
  427f19:	test   eax,eax
  427f1b:	je     427faf <isspace@plt+0x2469f>
  427f21:	cmp    ebp,0x1
  427f24:	jne    427fb7 <isspace@plt+0x246a7>
  427f2a:	mov    r13d,0x4c8
  427f30:	add    r13,QWORD PTR [rip+0x1a0b9]        # 441ff0 <isspace@plt+0x3e6e0>
  427f37:	mov    ebp,0x1
  427f3c:	jmp    427f4b <isspace@plt+0x2463b>
  427f3e:	mov    r13d,0x828
  427f44:	add    r13,QWORD PTR [rip+0x1a0a5]        # 441ff0 <isspace@plt+0x3e6e0>
  427f4b:	inc    ebp
  427f4d:	nop    DWORD PTR [rax]
  427f50:	mov    rbx,r12
  427f53:	dec    ebp
  427f55:	je     427f73 <isspace@plt+0x24663>
  427f57:	cmp    DWORD PTR [r15+0x9c0],0x0
  427f5f:	jne    427f7a <isspace@plt+0x2466a>
  427f61:	mov    rdi,r14
  427f64:	mov    rsi,rbx
  427f67:	call   QWORD PTR [r13+0x8]
  427f6b:	mov    r12,rax
  427f6e:	cmp    rax,rbx
  427f71:	jne    427f50 <isspace@plt+0x24640>
  427f73:	test   BYTE PTR [r13+0x38],0x4
  427f78:	jne    427f7f <isspace@plt+0x2466f>
  427f7a:	mov    r12,rbx
  427f7d:	jmp    427f8d <isspace@plt+0x2467d>
  427f7f:	mov    rdi,r14
  427f82:	mov    rsi,rbx
  427f85:	call   412d10 <isspace@plt+0xf400>
  427f8a:	mov    r12,rax
  427f8d:	mov    rax,QWORD PTR fs:0x28
  427f96:	cmp    rax,QWORD PTR [rsp+0x30]
  427f9b:	jne    427fcb <isspace@plt+0x246bb>
  427f9d:	mov    rax,r12
  427fa0:	add    rsp,0x38
  427fa4:	pop    rbx
  427fa5:	pop    r12
  427fa7:	pop    r13
  427fa9:	pop    r14
  427fab:	pop    r15
  427fad:	pop    rbp
  427fae:	ret    
  427faf:	mov    r13d,0x8b8
  427fb5:	jmp    427f44 <isspace@plt+0x24634>
  427fb7:	mov    r13d,0x8b8
  427fbd:	add    r13,QWORD PTR [rip+0x1a02c]        # 441ff0 <isspace@plt+0x3e6e0>
  427fc4:	dec    ebp
  427fc6:	jmp    427f4b <isspace@plt+0x2463b>
  427fcb:	call   403280 <__stack_chk_fail@plt>
  427fd0:	push   r15
  427fd2:	push   r14
  427fd4:	push   r12
  427fd6:	push   rbx
  427fd7:	sub    rsp,0x38
  427fdb:	mov    r14,rsi
  427fde:	mov    rbx,rdi
  427fe1:	mov    rax,QWORD PTR fs:0x28
  427fea:	mov    QWORD PTR [rsp+0x30],rax
  427fef:	lea    rdx,[rip+0x91d6]        # 4311cc <isspace@plt+0x2d8bc>
  427ff6:	xor    ecx,ecx
  427ff8:	call   415350 <isspace@plt+0x11a40>
  427ffd:	cmp    rax,r14
  428000:	jne    428077 <isspace@plt+0x24767>
  428002:	mov    r15,rsp
  428005:	mov    rdi,r15
  428008:	mov    rsi,rbx
  42800b:	mov    rdx,r14
  42800e:	call   410570 <isspace@plt+0xcc60>
  428013:	lea    rsi,[rsp+0x2f]
  428018:	mov    rdi,r15
  42801b:	call   412400 <isspace@plt+0xeaf0>
  428020:	test   al,al
  428022:	je     428074 <isspace@plt+0x24764>
  428024:	mov    rbx,rsp
  428027:	lea    r15,[rsp+0x2f]
  42802c:	lea    r12,[rip+0x9029]        # 43105c <isspace@plt+0x2d74c>
  428033:	jmp    428059 <isspace@plt+0x24749>
  428035:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42803f:	nop
  428040:	mov    rdi,rbx
  428043:	xor    esi,esi
  428045:	call   412480 <isspace@plt+0xeb70>
  42804a:	mov    rdi,rbx
  42804d:	mov    rsi,r15
  428050:	call   412400 <isspace@plt+0xeaf0>
  428055:	test   al,al
  428057:	je     428074 <isspace@plt+0x24764>
  428059:	movsx  eax,BYTE PTR [rsp+0x2f]
  42805e:	add    eax,0xffffffde
  428061:	cmp    eax,0x5b
  428064:	ja     428040 <isspace@plt+0x24730>
  428066:	movsxd rax,DWORD PTR [r12+rax*4]
  42806a:	add    rax,r12
  42806d:	jmp    rax
  42806f:	mov    r14,QWORD PTR [rsp+0x20]
  428074:	mov    rax,r14
  428077:	mov    rcx,QWORD PTR fs:0x28
  428080:	cmp    rcx,QWORD PTR [rsp+0x30]
  428085:	jne    428093 <isspace@plt+0x24783>
  428087:	add    rsp,0x38
  42808b:	pop    rbx
  42808c:	pop    r12
  42808e:	pop    r14
  428090:	pop    r15
  428092:	ret    
  428093:	call   403280 <__stack_chk_fail@plt>
  428098:	nop    DWORD PTR [rax+rax*1+0x0]
  4280a0:	push   rax
  4280a1:	mov    rax,QWORD PTR fs:0x28
  4280aa:	mov    QWORD PTR [rsp],rax
  4280ae:	lea    rax,[rdi+0x7e8]
  4280b5:	mov    rdi,rsi
  4280b8:	mov    rsi,rdx
  4280bb:	mov    rdx,rax
  4280be:	call   413100 <isspace@plt+0xf7f0>
  4280c3:	mov    rcx,QWORD PTR fs:0x28
  4280cc:	cmp    rcx,QWORD PTR [rsp]
  4280d0:	jne    4280d4 <isspace@plt+0x247c4>
  4280d2:	pop    rcx
  4280d3:	ret    
  4280d4:	call   403280 <__stack_chk_fail@plt>
  4280d9:	nop    DWORD PTR [rax+0x0]
  4280e0:	push   r15
  4280e2:	push   r14
  4280e4:	push   r12
  4280e6:	push   rbx
  4280e7:	sub    rsp,0x18
  4280eb:	mov    rbx,rdx
  4280ee:	mov    r15,rsi
  4280f1:	mov    r14,rdi
  4280f4:	mov    rax,QWORD PTR fs:0x28
  4280fd:	mov    QWORD PTR [rsp+0x10],rax
  428102:	mov    rdi,rsi
  428105:	mov    rsi,rdx
  428108:	call   413470 <isspace@plt+0xfb60>
  42810d:	cmp    rax,rbx
  428110:	je     42814a <isspace@plt+0x2483a>
  428112:	lea    rsi,[rbx+0x1]
  428116:	add    r14,0x7e8
  42811d:	mov    rdi,r15
  428120:	mov    rdx,r14
  428123:	call   412fb0 <isspace@plt+0xf6a0>
  428128:	mov    r12,rax
  42812b:	lea    rdx,[rsp+0xf]
  428130:	mov    rdi,r15
  428133:	mov    rsi,rax
  428136:	call   411060 <isspace@plt+0xd750>
  42813b:	test   al,al
  42813d:	je     42814a <isspace@plt+0x2483a>
  42813f:	mov    al,BYTE PTR [rsp+0xf]
  428143:	cmp    al,BYTE PTR [r14]
  428146:	cmove  rbx,r12
  42814a:	mov    rax,QWORD PTR fs:0x28
  428153:	cmp    rax,QWORD PTR [rsp+0x10]
  428158:	jne    428169 <isspace@plt+0x24859>
  42815a:	mov    rax,rbx
  42815d:	add    rsp,0x18
  428161:	pop    rbx
  428162:	pop    r12
  428164:	pop    r14
  428166:	pop    r15
  428168:	ret    
  428169:	call   403280 <__stack_chk_fail@plt>
  42816e:	xchg   ax,ax
  428170:	push   r15
  428172:	push   r14
  428174:	push   r12
  428176:	push   rbx
  428177:	push   rax
  428178:	mov    rbx,rdx
  42817b:	mov    r14,rsi
  42817e:	mov    r15,rdi
  428181:	mov    rax,QWORD PTR fs:0x28
  42818a:	mov    QWORD PTR [rsp],rax
  42818e:	mov    rdi,rsi
  428191:	mov    rsi,rdx
  428194:	call   413280 <isspace@plt+0xf970>
  428199:	cmp    rax,rbx
  42819c:	je     4281bc <isspace@plt+0x248ac>
  42819e:	lea    r12,[rbx-0x1]
  4281a2:	add    r15,0x7e8
  4281a9:	mov    rdi,r14
  4281ac:	mov    rsi,r12
  4281af:	mov    rdx,r15
  4281b2:	call   413100 <isspace@plt+0xf7f0>
  4281b7:	cmp    rax,r12
  4281ba:	jne    4281d0 <isspace@plt+0x248c0>
  4281bc:	mov    rax,QWORD PTR fs:0x28
  4281c5:	cmp    rax,QWORD PTR [rsp]
  4281c9:	jne    4281f6 <isspace@plt+0x248e6>
  4281cb:	mov    rax,rbx
  4281ce:	jmp    4281ea <isspace@plt+0x248da>
  4281d0:	mov    rdi,r14
  4281d3:	mov    rsi,rax
  4281d6:	call   412d10 <isspace@plt+0xf400>
  4281db:	mov    rcx,QWORD PTR fs:0x28
  4281e4:	cmp    rcx,QWORD PTR [rsp]
  4281e8:	jne    4281f6 <isspace@plt+0x248e6>
  4281ea:	add    rsp,0x8
  4281ee:	pop    rbx
  4281ef:	pop    r12
  4281f1:	pop    r14
  4281f3:	pop    r15
  4281f5:	ret    
  4281f6:	call   403280 <__stack_chk_fail@plt>
  4281fb:	nop    DWORD PTR [rax+rax*1+0x0]
  428200:	push   r15
  428202:	push   r14
  428204:	push   r13
  428206:	push   r12
  428208:	push   rbx
  428209:	sub    rsp,0x10
  42820d:	mov    rbx,rdx
  428210:	mov    r14,rsi
  428213:	mov    r12,rdi
  428216:	mov    rax,QWORD PTR fs:0x28
  42821f:	mov    QWORD PTR [rsp+0x8],rax
  428224:	lea    r15,[rdx+0x1]
  428228:	mov    rdi,rsi
  42822b:	mov    rsi,r15
  42822e:	call   413470 <isspace@plt+0xfb60>
  428233:	cmp    rax,r15
  428236:	je     428271 <isspace@plt+0x24961>
  428238:	lea    rsi,[rbx+0x2]
  42823c:	add    r12,0x7e8
  428243:	mov    rdi,r14
  428246:	mov    rdx,r12
  428249:	call   412fb0 <isspace@plt+0xf6a0>
  42824e:	mov    r13,rax
  428251:	lea    rdx,[rsp+0x7]
  428256:	mov    rdi,r14
  428259:	mov    rsi,rax
  42825c:	call   411060 <isspace@plt+0xd750>
  428261:	test   al,al
  428263:	je     428271 <isspace@plt+0x24961>
  428265:	mov    al,BYTE PTR [rsp+0x7]
  428269:	cmp    al,BYTE PTR [r12]
  42826d:	cmove  r15,r13
  428271:	mov    rdi,r14
  428274:	mov    rsi,rbx
  428277:	call   413470 <isspace@plt+0xfb60>
  42827c:	cmp    r15,rbx
  42827f:	je     428294 <isspace@plt+0x24984>
  428281:	cmp    rax,rbx
  428284:	je     428294 <isspace@plt+0x24984>
  428286:	mov    rdi,r14
  428289:	mov    rsi,r15
  42828c:	call   412d60 <isspace@plt+0xf450>
  428291:	mov    rbx,rax
  428294:	mov    rax,QWORD PTR fs:0x28
  42829d:	cmp    rax,QWORD PTR [rsp+0x8]
  4282a2:	jne    4282b5 <isspace@plt+0x249a5>
  4282a4:	mov    rax,rbx
  4282a7:	add    rsp,0x10
  4282ab:	pop    rbx
  4282ac:	pop    r12
  4282ae:	pop    r13
  4282b0:	pop    r14
  4282b2:	pop    r15
  4282b4:	ret    
  4282b5:	call   403280 <__stack_chk_fail@plt>
  4282ba:	nop    WORD PTR [rax+rax*1+0x0]
  4282c0:	push   rax
  4282c1:	mov    rax,QWORD PTR fs:0x28
  4282ca:	mov    QWORD PTR [rsp],rax
  4282ce:	xor    esi,esi
  4282d0:	call   4132e0 <isspace@plt+0xf9d0>
  4282d5:	mov    rcx,QWORD PTR fs:0x28
  4282de:	cmp    rcx,QWORD PTR [rsp]
  4282e2:	jne    4282e6 <isspace@plt+0x249d6>
  4282e4:	pop    rcx
  4282e5:	ret    
  4282e6:	call   403280 <__stack_chk_fail@plt>
  4282eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4282f0:	push   rbx
  4282f1:	sub    rsp,0x10
  4282f5:	mov    rbx,rdi
  4282f8:	mov    rax,QWORD PTR fs:0x28
  428301:	mov    QWORD PTR [rsp+0x8],rax
  428306:	call   410890 <isspace@plt+0xcf80>
  42830b:	xor    esi,esi
  42830d:	sub    rax,0x1
  428311:	cmovae rsi,rax
  428315:	mov    rdi,rbx
  428318:	call   4132e0 <isspace@plt+0xf9d0>
  42831d:	mov    rcx,QWORD PTR fs:0x28
  428326:	cmp    rcx,QWORD PTR [rsp+0x8]
  42832b:	jne    428333 <isspace@plt+0x24a23>
  42832d:	add    rsp,0x10
  428331:	pop    rbx
  428332:	ret    
  428333:	call   403280 <__stack_chk_fail@plt>
  428338:	nop    DWORD PTR [rax+rax*1+0x0]
  428340:	push   r15
  428342:	push   r14
  428344:	push   r12
  428346:	push   rbx
  428347:	push   rax
  428348:	mov    r14,rdx
  42834b:	mov    r15,rsi
  42834e:	mov    r12,rdi
  428351:	mov    rax,QWORD PTR fs:0x28
  42835a:	mov    QWORD PTR [rsp],rax
  42835e:	call   4287e0 <isspace@plt+0x24ed0>
  428363:	mov    rbx,rax
  428366:	test   rax,rax
  428369:	je     428388 <isspace@plt+0x24a78>
  42836b:	mov    DWORD PTR [r12+0x7f4],0x35
  428377:	mov    rdi,r15
  42837a:	mov    rsi,r14
  42837d:	mov    rdx,rbx
  428380:	call   4156e0 <isspace@plt+0x11dd0>
  428385:	mov    r14,rax
  428388:	mov    rdi,rbx
  42838b:	call   42ae70 <isspace@plt+0x27560>
  428390:	mov    rax,QWORD PTR fs:0x28
  428399:	cmp    rax,QWORD PTR [rsp]
  42839d:	jne    4283ae <isspace@plt+0x24a9e>
  42839f:	mov    rax,r14
  4283a2:	add    rsp,0x8
  4283a6:	pop    rbx
  4283a7:	pop    r12
  4283a9:	pop    r14
  4283ab:	pop    r15
  4283ad:	ret    
  4283ae:	call   403280 <__stack_chk_fail@plt>
  4283b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4283bd:	nop    DWORD PTR [rax]
  4283c0:	push   r15
  4283c2:	push   r14
  4283c4:	push   r12
  4283c6:	push   rbx
  4283c7:	push   rax
  4283c8:	mov    r14,rdx
  4283cb:	mov    r15,rsi
  4283ce:	mov    r12,rdi
  4283d1:	mov    rax,QWORD PTR fs:0x28
  4283da:	mov    QWORD PTR [rsp],rax
  4283de:	call   4287e0 <isspace@plt+0x24ed0>
  4283e3:	mov    rbx,rax
  4283e6:	test   rax,rax
  4283e9:	je     428408 <isspace@plt+0x24af8>
  4283eb:	mov    DWORD PTR [r12+0x7f4],0x36
  4283f7:	mov    rdi,r15
  4283fa:	mov    rsi,r14
  4283fd:	mov    rdx,rbx
  428400:	call   4157b0 <isspace@plt+0x11ea0>
  428405:	mov    r14,rax
  428408:	mov    rdi,rbx
  42840b:	call   42ae70 <isspace@plt+0x27560>
  428410:	mov    rax,QWORD PTR fs:0x28
  428419:	cmp    rax,QWORD PTR [rsp]
  42841d:	jne    42842e <isspace@plt+0x24b1e>
  42841f:	mov    rax,r14
  428422:	add    rsp,0x8
  428426:	pop    rbx
  428427:	pop    r12
  428429:	pop    r14
  42842b:	pop    r15
  42842d:	ret    
  42842e:	call   403280 <__stack_chk_fail@plt>
  428433:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42843d:	nop    DWORD PTR [rax]
  428440:	push   r15
  428442:	push   r14
  428444:	push   rbx
  428445:	sub    rsp,0x10
  428449:	mov    r14,rdx
  42844c:	mov    r15,rsi
  42844f:	mov    rax,QWORD PTR fs:0x28
  428458:	mov    QWORD PTR [rsp+0x8],rax
  42845d:	xor    esi,esi
  42845f:	call   424ba0 <isspace@plt+0x21290>
  428464:	mov    rbx,rax
  428467:	test   rax,rax
  42846a:	je     42847d <isspace@plt+0x24b6d>
  42846c:	mov    rdi,r15
  42846f:	mov    rsi,r14
  428472:	mov    rdx,rbx
  428475:	call   4156e0 <isspace@plt+0x11dd0>
  42847a:	mov    r14,rax
  42847d:	mov    rdi,rbx
  428480:	call   42ae70 <isspace@plt+0x27560>
  428485:	mov    rax,QWORD PTR fs:0x28
  42848e:	cmp    rax,QWORD PTR [rsp+0x8]
  428493:	jne    4284a2 <isspace@plt+0x24b92>
  428495:	mov    rax,r14
  428498:	add    rsp,0x10
  42849c:	pop    rbx
  42849d:	pop    r14
  42849f:	pop    r15
  4284a1:	ret    
  4284a2:	call   403280 <__stack_chk_fail@plt>
  4284a7:	nop    WORD PTR [rax+rax*1+0x0]
  4284b0:	push   r15
  4284b2:	push   r14
  4284b4:	push   rbx
  4284b5:	sub    rsp,0x10
  4284b9:	mov    r14,rdx
  4284bc:	mov    r15,rsi
  4284bf:	mov    rax,QWORD PTR fs:0x28
  4284c8:	mov    QWORD PTR [rsp+0x8],rax
  4284cd:	xor    esi,esi
  4284cf:	call   424ba0 <isspace@plt+0x21290>
  4284d4:	mov    rbx,rax
  4284d7:	test   rax,rax
  4284da:	je     4284ed <isspace@plt+0x24bdd>
  4284dc:	mov    rdi,r15
  4284df:	mov    rsi,r14
  4284e2:	mov    rdx,rbx
  4284e5:	call   4157b0 <isspace@plt+0x11ea0>
  4284ea:	mov    r14,rax
  4284ed:	mov    rdi,rbx
  4284f0:	call   42ae70 <isspace@plt+0x27560>
  4284f5:	mov    rax,QWORD PTR fs:0x28
  4284fe:	cmp    rax,QWORD PTR [rsp+0x8]
  428503:	jne    428512 <isspace@plt+0x24c02>
  428505:	mov    rax,r14
  428508:	add    rsp,0x10
  42850c:	pop    rbx
  42850d:	pop    r14
  42850f:	pop    r15
  428511:	ret    
  428512:	call   403280 <__stack_chk_fail@plt>
  428517:	nop    WORD PTR [rax+rax*1+0x0]
  428520:	push   rbx
  428521:	sub    rsp,0x10
  428525:	mov    rbx,rsi
  428528:	mov    rax,QWORD PTR fs:0x28
  428531:	mov    QWORD PTR [rsp+0x8],rax
  428536:	mov    esi,0x1
  42853b:	call   424330 <isspace@plt+0x20a20>
  428540:	mov    rdi,rbx
  428543:	mov    esi,eax
  428545:	call   41e770 <isspace@plt+0x1ae60>
  42854a:	mov    rcx,QWORD PTR fs:0x28
  428553:	cmp    rcx,QWORD PTR [rsp+0x8]
  428558:	jne    428560 <isspace@plt+0x24c50>
  42855a:	add    rsp,0x10
  42855e:	pop    rbx
  42855f:	ret    
  428560:	call   403280 <__stack_chk_fail@plt>
  428565:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42856f:	nop
  428570:	push   rbx
  428571:	sub    rsp,0x10
  428575:	mov    rbx,rsi
  428578:	mov    rax,QWORD PTR fs:0x28
  428581:	mov    QWORD PTR [rsp+0x8],rax
  428586:	mov    rdi,rsi
  428589:	call   41b120 <isspace@plt+0x17810>
  42858e:	mov    ecx,eax
  428590:	shr    ecx,0x1f
  428593:	lea    esi,[rcx+rax*1]
  428596:	sar    esi,1
  428598:	mov    rdi,rbx
  42859b:	call   41e770 <isspace@plt+0x1ae60>
  4285a0:	mov    rcx,QWORD PTR fs:0x28
  4285a9:	cmp    rcx,QWORD PTR [rsp+0x8]
  4285ae:	jne    4285b6 <isspace@plt+0x24ca6>
  4285b0:	add    rsp,0x10
  4285b4:	pop    rbx
  4285b5:	ret    
  4285b6:	call   403280 <__stack_chk_fail@plt>
  4285bb:	nop    DWORD PTR [rax+rax*1+0x0]
  4285c0:	push   rbp
  4285c1:	push   r14
  4285c3:	push   rbx
  4285c4:	sub    rsp,0x10
  4285c8:	mov    rbx,rdi
  4285cb:	mov    rax,QWORD PTR fs:0x28
  4285d4:	mov    QWORD PTR [rsp+0x8],rax
  4285d9:	mov    rax,QWORD PTR [rdi+0x30]
  4285dd:	mov    rdi,QWORD PTR [rax+0x18]
  4285e1:	call   41b120 <isspace@plt+0x17810>
  4285e6:	mov    ebp,eax
  4285e8:	mov    rax,QWORD PTR [rbx+0x30]
  4285ec:	mov    r14,QWORD PTR [rax+0x18]
  4285f0:	mov    rdi,rbx
  4285f3:	xor    esi,esi
  4285f5:	call   424330 <isspace@plt+0x20a20>
  4285fa:	sub    ebp,eax
  4285fc:	mov    rdi,r14
  4285ff:	mov    esi,ebp
  428601:	call   41e770 <isspace@plt+0x1ae60>
  428606:	mov    rcx,QWORD PTR fs:0x28
  42860f:	cmp    rcx,QWORD PTR [rsp+0x8]
  428614:	jne    42861f <isspace@plt+0x24d0f>
  428616:	add    rsp,0x10
  42861a:	pop    rbx
  42861b:	pop    r14
  42861d:	pop    rbp
  42861e:	ret    
  42861f:	call   403280 <__stack_chk_fail@plt>
  428624:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42862e:	xchg   ax,ax
  428630:	push   rax
  428631:	mov    rcx,QWORD PTR fs:0x28
  42863a:	mov    QWORD PTR [rsp],rcx
  42863e:	mov    rcx,QWORD PTR fs:0x28
  428647:	cmp    rcx,QWORD PTR [rsp]
  42864b:	jne    428652 <isspace@plt+0x24d42>
  42864d:	mov    rax,rdx
  428650:	pop    rcx
  428651:	ret    
  428652:	call   403280 <__stack_chk_fail@plt>
  428657:	nop    WORD PTR [rax+rax*1+0x0]
  428660:	push   rbp
  428661:	push   rbx
  428662:	push   rax
  428663:	mov    rbx,rsi
  428666:	mov    rax,QWORD PTR fs:0x28
  42866f:	mov    QWORD PTR [rsp],rax
  428673:	xor    esi,esi
  428675:	call   424330 <isspace@plt+0x20a20>
  42867a:	cmp    eax,0x65
  42867d:	mov    ebp,0x64
  428682:	cmovl  ebp,eax
  428685:	mov    rdi,rbx
  428688:	call   410890 <isspace@plt+0xcf80>
  42868d:	movsxd rcx,ebp
  428690:	imul   rax,rcx
  428694:	shr    rax,0x2
  428698:	movabs rcx,0x28f5c28f5c28f5c3
  4286a2:	mul    rcx
  4286a5:	mov    rcx,QWORD PTR fs:0x28
  4286ae:	cmp    rcx,QWORD PTR [rsp]
  4286b2:	jne    4286c2 <isspace@plt+0x24db2>
  4286b4:	mov    rax,rdx
  4286b7:	shr    rax,0x2
  4286bb:	add    rsp,0x8
  4286bf:	pop    rbx
  4286c0:	pop    rbp
  4286c1:	ret    
  4286c2:	call   403280 <__stack_chk_fail@plt>
  4286c7:	nop    WORD PTR [rax+rax*1+0x0]
  4286d0:	push   r14
  4286d2:	push   rbx
  4286d3:	push   rax
  4286d4:	mov    r14,rsi
  4286d7:	mov    rax,QWORD PTR fs:0x28
  4286e0:	mov    QWORD PTR [rsp],rax
  4286e4:	xor    esi,esi
  4286e6:	call   424330 <isspace@plt+0x20a20>
  4286eb:	movsxd rbx,eax
  4286ee:	mov    rdi,r14
  4286f1:	call   410890 <isspace@plt+0xcf80>
  4286f6:	cmp    rax,rbx
  4286f9:	cmovb  rbx,rax
  4286fd:	mov    rax,QWORD PTR fs:0x28
  428706:	cmp    rax,QWORD PTR [rsp]
  42870a:	jne    428717 <isspace@plt+0x24e07>
  42870c:	mov    rax,rbx
  42870f:	add    rsp,0x8
  428713:	pop    rbx
  428714:	pop    r14
  428716:	ret    
  428717:	call   403280 <__stack_chk_fail@plt>
  42871c:	nop    DWORD PTR [rax+0x0]
  428720:	push   rbx
  428721:	sub    rsp,0x10
  428725:	mov    rbx,rdx
  428728:	mov    rax,QWORD PTR fs:0x28
  428731:	mov    QWORD PTR [rsp+0x8],rax
  428736:	mov    esi,0x1
  42873b:	call   424330 <isspace@plt+0x20a20>
  428740:	movsxd rcx,eax
  428743:	xor    eax,eax
  428745:	sub    rbx,rcx
  428748:	cmovae rax,rbx
  42874c:	mov    rcx,QWORD PTR fs:0x28
  428755:	cmp    rcx,QWORD PTR [rsp+0x8]
  42875a:	jne    428762 <isspace@plt+0x24e52>
  42875c:	add    rsp,0x10
  428760:	pop    rbx
  428761:	ret    
  428762:	call   403280 <__stack_chk_fail@plt>
  428767:	nop    WORD PTR [rax+rax*1+0x0]
  428770:	push   r15
  428772:	push   r14
  428774:	push   rbx
  428775:	sub    rsp,0x10
  428779:	mov    r15,rdx
  42877c:	mov    r14,rsi
  42877f:	mov    rax,QWORD PTR fs:0x28
  428788:	mov    QWORD PTR [rsp+0x8],rax
  42878d:	mov    esi,0x1
  428792:	call   424330 <isspace@plt+0x20a20>
  428797:	movsxd rbx,eax
  42879a:	add    rbx,r15
  42879d:	mov    rdi,r14
  4287a0:	call   410890 <isspace@plt+0xcf80>
  4287a5:	mov    rcx,rax
  4287a8:	cmp    rbx,r15
  4287ab:	cmova  rax,rbx
  4287af:	cmp    rbx,rcx
  4287b2:	cmova  rax,rcx
  4287b6:	mov    rcx,QWORD PTR fs:0x28
  4287bf:	cmp    rcx,QWORD PTR [rsp+0x8]
  4287c4:	jne    4287d0 <isspace@plt+0x24ec0>
  4287c6:	add    rsp,0x10
  4287ca:	pop    rbx
  4287cb:	pop    r14
  4287cd:	pop    r15
  4287cf:	ret    
  4287d0:	call   403280 <__stack_chk_fail@plt>
  4287d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4287df:	nop
  4287e0:	push   r15
  4287e2:	push   r14
  4287e4:	push   rbx
  4287e5:	sub    rsp,0x220
  4287ec:	mov    rbx,rsi
  4287ef:	mov    r14,rdi
  4287f2:	mov    rax,QWORD PTR fs:0x28
  4287fb:	mov    QWORD PTR [rsp+0x218],rax
  428803:	mov    rdi,rsi
  428806:	mov    rsi,rdx
  428809:	call   415890 <isspace@plt+0x11f80>
  42880e:	mov    QWORD PTR [rsp],rax
  428812:	mov    QWORD PTR [rsp+0x8],rdx
  428817:	mov    rdi,rsp
  42881a:	call   416fc0 <isspace@plt+0x136b0>
  42881f:	test   al,al
  428821:	je     4288c4 <isspace@plt+0x24fb4>
  428827:	mov    r15,QWORD PTR [rsp]
  42882b:	mov    rdi,rsp
  42882e:	call   417020 <isspace@plt+0x13710>
  428833:	mov    rdi,rbx
  428836:	mov    rsi,r15
  428839:	mov    rdx,rax
  42883c:	call   411210 <isspace@plt+0xd900>
  428841:	test   rax,rax
  428844:	je     4288c4 <isspace@plt+0x24fb4>
  428846:	mov    r15,rax
  428849:	lea    r8,[rip+0x8988]        # 4311d8 <isspace@plt+0x2d8c8>
  428850:	lea    rbx,[rsp+0x10]
  428855:	mov    esi,0x200
  42885a:	mov    ecx,0x200
  42885f:	mov    rdi,rbx
  428862:	mov    edx,0x1
  428867:	mov    r9,rax
  42886a:	xor    eax,eax
  42886c:	call   4030c0 <__snprintf_chk@plt>
  428871:	mov    rdi,r14
  428874:	mov    rsi,rbx
  428877:	call   424ba0 <isspace@plt+0x21290>
  42887c:	mov    rbx,rax
  42887f:	test   rax,rax
  428882:	jne    4288ba <isspace@plt+0x24faa>
  428884:	lea    r8,[rip+0x895e]        # 4311e9 <isspace@plt+0x2d8d9>
  42888b:	lea    rbx,[rsp+0x10]
  428890:	mov    esi,0x200
  428895:	mov    ecx,0x200
  42889a:	mov    rdi,rbx
  42889d:	mov    edx,0x1
  4288a2:	mov    r9,r15
  4288a5:	xor    eax,eax
  4288a7:	call   4030c0 <__snprintf_chk@plt>
  4288ac:	mov    rdi,r14
  4288af:	mov    rsi,rbx
  4288b2:	call   424ba0 <isspace@plt+0x21290>
  4288b7:	mov    rbx,rax
  4288ba:	mov    rdi,r15
  4288bd:	call   4030d0 <free@plt>
  4288c2:	jmp    4288c6 <isspace@plt+0x24fb6>
  4288c4:	xor    ebx,ebx
  4288c6:	mov    rax,QWORD PTR fs:0x28
  4288cf:	cmp    rax,QWORD PTR [rsp+0x218]
  4288d7:	jne    4288e9 <isspace@plt+0x24fd9>
  4288d9:	mov    rax,rbx
  4288dc:	add    rsp,0x220
  4288e3:	pop    rbx
  4288e4:	pop    r14
  4288e6:	pop    r15
  4288e8:	ret    
  4288e9:	call   403280 <__stack_chk_fail@plt>
  4288ee:	xchg   ax,ax
  4288f0:	push   r15
  4288f2:	push   r14
  4288f4:	push   rbx
  4288f5:	sub    rsp,0xd0
  4288fc:	mov    r15d,esi
  4288ff:	mov    r14,rdi
  428902:	test   al,al
  428904:	je     42893f <isspace@plt+0x2502f>
  428906:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  42890c:	vmovaps XMMWORD PTR [rsp+0x40],xmm1
  428912:	vmovaps XMMWORD PTR [rsp+0x50],xmm2
  428918:	vmovaps XMMWORD PTR [rsp+0x60],xmm3
  42891e:	vmovaps XMMWORD PTR [rsp+0x70],xmm4
  428924:	vmovaps XMMWORD PTR [rsp+0x80],xmm5
  42892d:	vmovaps XMMWORD PTR [rsp+0x90],xmm6
  428936:	vmovaps XMMWORD PTR [rsp+0xa0],xmm7
  42893f:	mov    QWORD PTR [rsp+0x10],rdx
  428944:	mov    QWORD PTR [rsp+0x18],rcx
  428949:	mov    QWORD PTR [rsp+0x20],r8
  42894e:	mov    QWORD PTR [rsp+0x28],r9
  428953:	mov    rax,QWORD PTR fs:0x28
  42895c:	mov    QWORD PTR [rsp+0xc8],rax
  428964:	mov    rax,rsp
  428967:	mov    QWORD PTR [rsp+0xc0],rax
  42896f:	lea    rax,[rsp+0xf0]
  428977:	mov    QWORD PTR [rsp+0xb8],rax
  42897f:	movabs rax,0x3000000010
  428989:	mov    QWORD PTR [rsp+0xb0],rax
  428991:	cmp    r15d,0xe
  428995:	ja     428abb <isspace@plt+0x251ab>
  42899b:	mov    eax,r15d
  42899e:	lea    rcx,[rip+0x885b]        # 431200 <isspace@plt+0x2d8f0>
  4289a5:	movsxd rax,DWORD PTR [rcx+rax*4]
  4289a9:	add    rax,rcx
  4289ac:	jmp    rax
  4289ae:	mov    DWORD PTR [r14+0x950],r15d
  4289b5:	mov    r15d,0x3
  4289bb:	jmp    428b62 <isspace@plt+0x25252>
  4289c0:	mov    rdi,r14
  4289c3:	mov    esi,0x1
  4289c8:	call   427980 <isspace@plt+0x24070>
  4289cd:	jmp    428b62 <isspace@plt+0x25252>
  4289d2:	mov    DWORD PTR [r14+0x950],r15d
  4289d9:	mov    r15d,0x9
  4289df:	jmp    428b62 <isspace@plt+0x25252>
  4289e4:	mov    rdi,r14
  4289e7:	call   427180 <isspace@plt+0x23870>
  4289ec:	mov    ebx,eax
  4289ee:	mov    rdi,r14
  4289f1:	call   42a9b0 <isspace@plt+0x270a0>
  4289f6:	xor    r15d,r15d
  4289f9:	test   eax,eax
  4289fb:	jne    428b62 <isspace@plt+0x25252>
  428a01:	or     ebx,0x1
  428a04:	cmp    ebx,0x5
  428a07:	jne    428b62 <isspace@plt+0x25252>
  428a0d:	mov    rdi,r14
  428a10:	mov    esi,0xc
  428a15:	call   42a950 <isspace@plt+0x27040>
  428a1a:	jmp    428b62 <isspace@plt+0x25252>
  428a1f:	movsxd rcx,DWORD PTR [rsp+0xb0]
  428a27:	cmp    rcx,0x28
  428a2b:	ja     428ae8 <isspace@plt+0x251d8>
  428a31:	mov    rax,rcx
  428a34:	add    rax,QWORD PTR [rsp+0xc0]
  428a3c:	add    ecx,0x8
  428a3f:	mov    DWORD PTR [rsp+0xb0],ecx
  428a46:	jmp    428afc <isspace@plt+0x251ec>
  428a4b:	movsxd rcx,DWORD PTR [rsp+0xb0]
  428a53:	cmp    rcx,0x28
  428a57:	ja     428b0e <isspace@plt+0x251fe>
  428a5d:	mov    rax,rcx
  428a60:	add    rax,QWORD PTR [rsp+0xc0]
  428a68:	add    ecx,0x8
  428a6b:	mov    DWORD PTR [rsp+0xb0],ecx
  428a72:	jmp    428b22 <isspace@plt+0x25212>
  428a77:	mov    rdi,r14
  428a7a:	mov    esi,0xf
  428a7f:	call   423e20 <isspace@plt+0x20510>
  428a84:	mov    rbx,rax
  428a87:	mov    rdi,rax
  428a8a:	call   404590 <isspace@plt+0xc80>
  428a8f:	movsxd rcx,DWORD PTR [rsp+0xb0]
  428a97:	cmp    rcx,0x28
  428a9b:	ja     428b33 <isspace@plt+0x25223>
  428aa1:	mov    rax,rcx
  428aa4:	add    rax,QWORD PTR [rsp+0xc0]
  428aac:	add    ecx,0x8
  428aaf:	mov    DWORD PTR [rsp+0xb0],ecx
  428ab6:	jmp    428b47 <isspace@plt+0x25237>
  428abb:	cmp    r15d,0x9
  428abf:	jbe    428b62 <isspace@plt+0x25252>
  428ac5:	lea    rdi,[r14+0xae0]
  428acc:	lea    esi,[r15-0xf]
  428ad0:	call   403c70 <isspace@plt+0x360>
  428ad5:	mov    rbx,rax
  428ad8:	test   rax,rax
  428adb:	jne    428b70 <isspace@plt+0x25260>
  428ae1:	xor    ebx,ebx
  428ae3:	jmp    428be2 <isspace@plt+0x252d2>
  428ae8:	mov    rax,QWORD PTR [rsp+0xb8]
  428af0:	lea    rcx,[rax+0x8]
  428af4:	mov    QWORD PTR [rsp+0xb8],rcx
  428afc:	mov    rax,QWORD PTR [rax]
  428aff:	mov    QWORD PTR [r14+0x950],rax
  428b06:	mov    r15d,0x6
  428b0c:	jmp    428b62 <isspace@plt+0x25252>
  428b0e:	mov    rax,QWORD PTR [rsp+0xb8]
  428b16:	lea    rcx,[rax+0x8]
  428b1a:	mov    QWORD PTR [rsp+0xb8],rcx
  428b22:	mov    eax,DWORD PTR [rax]
  428b24:	mov    DWORD PTR [r14+0x914],eax
  428b2b:	mov    r15d,0x7
  428b31:	jmp    428b62 <isspace@plt+0x25252>
  428b33:	mov    rax,QWORD PTR [rsp+0xb8]
  428b3b:	lea    rcx,[rax+0x8]
  428b3f:	mov    QWORD PTR [rsp+0xb8],rcx
  428b47:	mov    rsi,QWORD PTR [rax]
  428b4a:	mov    rdi,rbx
  428b4d:	call   404940 <isspace@plt+0x1030>
  428b52:	mov    rax,QWORD PTR [rbx]
  428b55:	mov    QWORD PTR [r14+0x950],rax
  428b5c:	mov    r15d,0x8
  428b62:	mov    ebx,r15d
  428b65:	shl    rbx,0x4
  428b69:	add    rbx,QWORD PTR [rip+0x19418]        # 441f88 <isspace@plt+0x3e678>
  428b70:	mov    rax,QWORD PTR [r14+0x9a0]
  428b77:	cmp    BYTE PTR [rax+0x58],0x0
  428b7b:	je     428b90 <isspace@plt+0x25280>
  428b7d:	mov    QWORD PTR [r14+0x920],rbx
  428b84:	mov    rdi,r14
  428b87:	call   4222e0 <isspace@plt+0x1e9d0>
  428b8c:	mov    bl,0x1
  428b8e:	jmp    428be2 <isspace@plt+0x252d2>
  428b90:	mov    rdi,r14
  428b93:	mov    esi,0x1
  428b98:	call   426fe0 <isspace@plt+0x236d0>
  428b9d:	cmp    QWORD PTR [r14+0x920],rbx
  428ba4:	je     428baf <isspace@plt+0x2529f>
  428ba6:	mov    QWORD PTR [r14+0x920],rbx
  428bad:	jmp    428bcb <isspace@plt+0x252bb>
  428baf:	mov    rdi,r14
  428bb2:	mov    esi,0x1
  428bb7:	call   427980 <isspace@plt+0x24070>
  428bbc:	mov    rdi,r14
  428bbf:	mov    esi,0xd
  428bc4:	xor    eax,eax
  428bc6:	call   4279b0 <isspace@plt+0x240a0>
  428bcb:	mov    bl,0x1
  428bcd:	cmp    r15d,0x3
  428bd1:	jne    428be2 <isspace@plt+0x252d2>
  428bd3:	mov    rdi,r14
  428bd6:	mov    esi,0x3c
  428bdb:	xor    eax,eax
  428bdd:	call   4279b0 <isspace@plt+0x240a0>
  428be2:	mov    rax,QWORD PTR fs:0x28
  428beb:	cmp    rax,QWORD PTR [rsp+0xc8]
  428bf3:	jne    428c04 <isspace@plt+0x252f4>
  428bf5:	mov    eax,ebx
  428bf7:	add    rsp,0xd0
  428bfe:	pop    rbx
  428bff:	pop    r14
  428c01:	pop    r15
  428c03:	ret    
  428c04:	call   403280 <__stack_chk_fail@plt>
  428c09:	nop    DWORD PTR [rax+0x0]
  428c10:	push   r15
  428c12:	push   r14
  428c14:	push   rbx
  428c15:	sub    rsp,0x10
  428c19:	mov    rbx,rdx
  428c1c:	mov    r15,rsi
  428c1f:	mov    rax,QWORD PTR fs:0x28
  428c28:	mov    QWORD PTR [rsp+0x8],rax
  428c2d:	mov    al,BYTE PTR [rdx+0x38]
  428c30:	mov    rsi,QWORD PTR [rdx+0x8]
  428c34:	mov    BYTE PTR [rsi+0x20],al
  428c37:	mov    rdx,QWORD PTR [rdx+0x10]
  428c3b:	lea    r14,[rbx+0x18]
  428c3f:	mov    rcx,r15
  428c42:	mov    r8,r14
  428c45:	call   42a520 <isspace@plt+0x26c10>
  428c4a:	mov    rdi,r15
  428c4d:	mov    rsi,r14
  428c50:	call   410430 <isspace@plt+0xcb20>
  428c55:	mov    r14,QWORD PTR [rbx+0x18]
  428c59:	cmp    BYTE PTR [rbx+0x38],0x0
  428c5d:	je     428c94 <isspace@plt+0x25384>
  428c5f:	mov    rdi,r15
  428c62:	call   410890 <isspace@plt+0xcf80>
  428c67:	cmp    r14,rax
  428c6a:	jne    428c94 <isspace@plt+0x25384>
  428c6c:	mov    rdi,r15
  428c6f:	mov    rsi,r14
  428c72:	call   413220 <isspace@plt+0xf910>
  428c77:	mov    rdi,r15
  428c7a:	mov    rsi,rax
  428c7d:	call   413280 <isspace@plt+0xf970>
  428c82:	mov    rcx,QWORD PTR fs:0x28
  428c8b:	cmp    rcx,QWORD PTR [rsp+0x8]
  428c90:	je     428ca7 <isspace@plt+0x25397>
  428c92:	jmp    428cb1 <isspace@plt+0x253a1>
  428c94:	mov    rax,QWORD PTR fs:0x28
  428c9d:	cmp    rax,QWORD PTR [rsp+0x8]
  428ca2:	jne    428cb1 <isspace@plt+0x253a1>
  428ca4:	mov    rax,r14
  428ca7:	add    rsp,0x10
  428cab:	pop    rbx
  428cac:	pop    r14
  428cae:	pop    r15
  428cb0:	ret    
  428cb1:	call   403280 <__stack_chk_fail@plt>
  428cb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428cc0:	push   rbp
  428cc1:	push   r15
  428cc3:	push   r14
  428cc5:	push   r12
  428cc7:	push   rbx
  428cc8:	sub    rsp,0x10
  428ccc:	mov    rbx,rdx
  428ccf:	mov    r15,rsi
  428cd2:	mov    r14,rdi
  428cd5:	mov    rax,QWORD PTR fs:0x28
  428cde:	mov    QWORD PTR [rsp+0x8],rax
  428ce3:	mov    al,0x1
  428ce5:	cmp    BYTE PTR [rdx+0x38],0x0
  428ce9:	mov    r12b,0x1
  428cec:	jne    428d00 <isspace@plt+0x253f0>
  428cee:	lea    rsi,[rbx+0x18]
  428cf2:	mov    rdi,r15
  428cf5:	call   416f40 <isspace@plt+0x13630>
  428cfa:	mov    r12d,eax
  428cfd:	mov    al,BYTE PTR [rbx+0x38]
  428d00:	mov    rsi,QWORD PTR [rbx+0x8]
  428d04:	mov    BYTE PTR [rsi+0x20],al
  428d07:	mov    rdx,QWORD PTR [rbx+0x10]
  428d0b:	lea    rbp,[rbx+0x18]
  428d0f:	mov    rdi,r14
  428d12:	mov    rcx,r15
  428d15:	mov    r8,rbp
  428d18:	call   42a520 <isspace@plt+0x26c10>
  428d1d:	mov    rdi,r15
  428d20:	mov    rsi,rbp
  428d23:	call   410430 <isspace@plt+0xcb20>
  428d28:	cmp    BYTE PTR [rbx+0x38],0x0
  428d2c:	je     428d55 <isspace@plt+0x25445>
  428d2e:	mov    rbp,QWORD PTR [rbx+0x18]
  428d32:	mov    rdi,r15
  428d35:	call   410890 <isspace@plt+0xcf80>
  428d3a:	cmp    rbp,rax
  428d3d:	jne    428d55 <isspace@plt+0x25445>
  428d3f:	mov    rdi,r15
  428d42:	mov    rsi,rbp
  428d45:	call   413220 <isspace@plt+0xf910>
  428d4a:	mov    rdi,r15
  428d4d:	mov    rsi,rax
  428d50:	call   413280 <isspace@plt+0xf970>
  428d55:	mov    rbx,QWORD PTR [rbx+0x18]
  428d59:	test   r12b,r12b
  428d5c:	je     428d81 <isspace@plt+0x25471>
  428d5e:	xor    ebp,ebp
  428d60:	mov    rdx,rbx
  428d63:	add    rdx,0xffffffffffffffff
  428d67:	cmovae rdx,rbp
  428d6b:	mov    rdi,r14
  428d6e:	mov    rsi,r15
  428d71:	call   424920 <isspace@plt+0x21010>
  428d76:	add    rbx,0xffffffffffffffff
  428d7a:	cmovae rax,rbp
  428d7e:	mov    rbx,rax
  428d81:	mov    rax,QWORD PTR fs:0x28
  428d8a:	cmp    rax,QWORD PTR [rsp+0x8]
  428d8f:	jne    428da1 <isspace@plt+0x25491>
  428d91:	mov    rax,rbx
  428d94:	add    rsp,0x10
  428d98:	pop    rbx
  428d99:	pop    r12
  428d9b:	pop    r14
  428d9d:	pop    r15
  428d9f:	pop    rbp
  428da0:	ret    
  428da1:	call   403280 <__stack_chk_fail@plt>
  428da6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428db0:	push   r15
  428db2:	push   r14
  428db4:	push   r12
  428db6:	push   rbx
  428db7:	push   rax
  428db8:	mov    rbx,rdx
  428dbb:	mov    r14,rsi
  428dbe:	mov    r15,rdi
  428dc1:	mov    rax,QWORD PTR fs:0x28
  428dca:	mov    QWORD PTR [rsp],rax
  428dce:	mov    al,BYTE PTR [rdx+0x38]
  428dd1:	mov    rsi,QWORD PTR [rdx+0x8]
  428dd5:	mov    BYTE PTR [rsi+0x20],al
  428dd8:	mov    rdx,QWORD PTR [rdx+0x10]
  428ddc:	lea    r12,[rbx+0x18]
  428de0:	mov    rcx,r14
  428de3:	mov    r8,r12
  428de6:	call   42a520 <isspace@plt+0x26c10>
  428deb:	mov    rax,QWORD PTR [rbx+0x8]
  428def:	lea    rcx,[r15+0x40]
  428df3:	cmp    rax,rcx
  428df6:	jne    428e18 <isspace@plt+0x25508>
  428df8:	mov    al,BYTE PTR [rax+0x20]
  428dfb:	mov    BYTE PTR [r15+0x88],al
  428e02:	mov    rdx,QWORD PTR [rbx+0x10]
  428e06:	lea    rsi,[r15+0x68]
  428e0a:	mov    rdi,r15
  428e0d:	mov    rcx,r14
  428e10:	mov    r8,r12
  428e13:	call   42a520 <isspace@plt+0x26c10>
  428e18:	movzx  eax,BYTE PTR [rbx+0x38]
  428e1c:	shl    rax,0x4
  428e20:	mov    rax,QWORD PTR [rax+rbx*1+0x18]
  428e25:	mov    rcx,QWORD PTR fs:0x28
  428e2e:	cmp    rcx,QWORD PTR [rsp]
  428e32:	jne    428e40 <isspace@plt+0x25530>
  428e34:	add    rsp,0x8
  428e38:	pop    rbx
  428e39:	pop    r12
  428e3b:	pop    r14
  428e3d:	pop    r15
  428e3f:	ret    
  428e40:	call   403280 <__stack_chk_fail@plt>
  428e45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428e4f:	nop
  428e50:	push   rbp
  428e51:	push   r15
  428e53:	push   r14
  428e55:	push   r13
  428e57:	push   r12
  428e59:	push   rbx
  428e5a:	sub    rsp,0x28
  428e5e:	mov    r15,rdx
  428e61:	mov    r14,rsi
  428e64:	mov    QWORD PTR [rsp],rdi
  428e68:	mov    rax,QWORD PTR fs:0x28
  428e71:	mov    QWORD PTR [rsp+0x20],rax
  428e76:	mov    rbx,QWORD PTR [rdx+0x28]
  428e7a:	lea    r12,[rdx+0x18]
  428e7e:	mov    rdi,r12
  428e81:	call   417020 <isspace@plt+0x13710>
  428e86:	mov    r13,rax
  428e89:	test   rax,rax
  428e8c:	je     428eb0 <isspace@plt+0x255a0>
  428e8e:	mov    rdi,r14
  428e91:	mov    rsi,r12
  428e94:	call   416f40 <isspace@plt+0x13630>
  428e99:	mov    ebp,eax
  428e9b:	mov    rdi,r14
  428e9e:	mov    rsi,r12
  428ea1:	call   410430 <isspace@plt+0xcb20>
  428ea6:	mov    rbx,QWORD PTR [r15+0x18]
  428eaa:	mov    QWORD PTR [r15+0x28],rbx
  428eae:	jmp    428eb2 <isspace@plt+0x255a2>
  428eb0:	xor    ebp,ebp
  428eb2:	mov    rax,QWORD PTR [r15+0x40]
  428eb6:	mov    eax,DWORD PTR [rax]
  428eb8:	lea    ecx,[rax-0xd]
  428ebb:	cmp    ecx,0x2
  428ebe:	jb     428f0b <isspace@plt+0x255fb>
  428ec0:	cmp    eax,0xc
  428ec3:	je     428eca <isspace@plt+0x255ba>
  428ec5:	cmp    eax,0x3
  428ec8:	jne    428f37 <isspace@plt+0x25627>
  428eca:	mov    rax,QWORD PTR [r15+0x8]
  428ece:	cmp    BYTE PTR [rax+0x20],0x0
  428ed2:	sete   al
  428ed5:	or     bpl,al
  428ed8:	je     428f29 <isspace@plt+0x25619>
  428eda:	test   r13,r13
  428edd:	jne    428f37 <isspace@plt+0x25627>
  428edf:	lea    rdx,[rsp+0x1f]
  428ee4:	mov    rdi,r14
  428ee7:	mov    rsi,rbx
  428eea:	call   411060 <isspace@plt+0xd750>
  428eef:	cmp    BYTE PTR [rsp+0x1f],0xa
  428ef4:	mov    rbp,QWORD PTR [rsp]
  428ef8:	je     428f3b <isspace@plt+0x2562b>
  428efa:	test   al,al
  428efc:	je     428f3b <isspace@plt+0x2562b>
  428efe:	mov    rdi,r14
  428f01:	mov    rsi,rbx
  428f04:	call   412d10 <isspace@plt+0xf400>
  428f09:	jmp    428f24 <isspace@plt+0x25614>
  428f0b:	mov    rax,QWORD PTR [r15+0x8]
  428f0f:	cmp    BYTE PTR [rax+0x20],0x0
  428f13:	mov    rbp,QWORD PTR [rsp]
  428f17:	je     428f3b <isspace@plt+0x2562b>
  428f19:	mov    rdi,r14
  428f1c:	mov    rsi,rbx
  428f1f:	call   413280 <isspace@plt+0xf970>
  428f24:	mov    rbx,rax
  428f27:	jmp    428f3b <isspace@plt+0x2562b>
  428f29:	mov    rdi,r14
  428f2c:	mov    rsi,rbx
  428f2f:	call   4134d0 <isspace@plt+0xfbc0>
  428f34:	mov    rbx,rax
  428f37:	mov    rbp,QWORD PTR [rsp]
  428f3b:	mov    rsi,QWORD PTR [r15+0x8]
  428f3f:	mov    rdx,QWORD PTR [r15+0x10]
  428f43:	lea    rcx,[rsp+0x10]
  428f48:	mov    rdi,rbp
  428f4b:	call   42a0c0 <isspace@plt+0x267b0>
  428f50:	cmp    DWORD PTR [r15],0x0
  428f54:	jle    429029 <isspace@plt+0x25719>
  428f5a:	mov    r12,rax
  428f5d:	xor    ebp,ebp
  428f5f:	lea    r13,[rsp+0xf]
  428f64:	test   rbx,rbx
  428f67:	jne    428f80 <isspace@plt+0x25670>
  428f69:	jmp    428fc1 <isspace@plt+0x256b1>
  428f6b:	nop    DWORD PTR [rax+rax*1+0x0]
  428f70:	inc    ebp
  428f72:	cmp    ebp,DWORD PTR [r15]
  428f75:	jge    429029 <isspace@plt+0x25719>
  428f7b:	test   rbx,rbx
  428f7e:	je     428fc1 <isspace@plt+0x256b1>
  428f80:	mov    rax,QWORD PTR [r15+0x8]
  428f84:	cmp    BYTE PTR [rax+0x20],0x0
  428f88:	je     428fc1 <isspace@plt+0x256b1>
  428f8a:	lea    rsi,[rbx-0x1]
  428f8e:	mov    rdi,r14
  428f91:	mov    rdx,r13
  428f94:	call   411060 <isspace@plt+0xd750>
  428f99:	cmp    BYTE PTR [rsp+0xf],0xa
  428f9e:	je     428fc1 <isspace@plt+0x256b1>
  428fa0:	test   al,al
  428fa2:	je     428fc1 <isspace@plt+0x256b1>
  428fa4:	mov    ecx,0x1
  428fa9:	mov    rdi,r14
  428fac:	mov    rsi,rbx
  428faf:	lea    rdx,[rip+0x75a3]        # 430559 <isspace@plt+0x2cc49>
  428fb6:	call   40efe0 <isspace@plt+0xb6d0>
  428fbb:	movzx  eax,al
  428fbe:	add    rbx,rax
  428fc1:	mov    rcx,QWORD PTR [rsp+0x10]
  428fc6:	mov    rdi,r14
  428fc9:	mov    rsi,rbx
  428fcc:	mov    rdx,r12
  428fcf:	call   40efe0 <isspace@plt+0xb6d0>
  428fd4:	add    rbx,QWORD PTR [rsp+0x10]
  428fd9:	je     428f70 <isspace@plt+0x25660>
  428fdb:	mov    rax,QWORD PTR [r15+0x8]
  428fdf:	cmp    BYTE PTR [rax+0x20],0x0
  428fe3:	je     428f70 <isspace@plt+0x25660>
  428fe5:	lea    rsi,[rbx-0x1]
  428fe9:	mov    rdi,r14
  428fec:	mov    rdx,r13
  428fef:	call   411060 <isspace@plt+0xd750>
  428ff4:	cmp    BYTE PTR [rsp+0xf],0xa
  428ff9:	je     428f70 <isspace@plt+0x25660>
  428fff:	test   al,al
  429001:	je     428f70 <isspace@plt+0x25660>
  429007:	mov    ecx,0x1
  42900c:	mov    rdi,r14
  42900f:	mov    rsi,rbx
  429012:	lea    rdx,[rip+0x7540]        # 430559 <isspace@plt+0x2cc49>
  429019:	call   40efe0 <isspace@plt+0xb6d0>
  42901e:	movzx  eax,al
  429021:	add    rbx,rax
  429024:	jmp    428f70 <isspace@plt+0x25660>
  429029:	mov    rax,QWORD PTR [r15+0x8]
  42902d:	mov    rcx,QWORD PTR [r15+0x40]
  429031:	cmp    BYTE PTR [rax+0x20],0x0
  429035:	mov    eax,DWORD PTR [rcx]
  429037:	je     429059 <isspace@plt+0x25749>
  429039:	add    eax,0xfffffffd
  42903c:	cmp    eax,0xb
  42903f:	ja     429093 <isspace@plt+0x25783>
  429041:	lea    rcx,[rip+0x81f4]        # 43123c <isspace@plt+0x2d92c>
  429048:	movsxd rax,DWORD PTR [rcx+rax*4]
  42904c:	add    rax,rcx
  42904f:	jmp    rax
  429051:	mov    rdi,r14
  429054:	mov    rsi,rbx
  429057:	jmp    42908b <isspace@plt+0x2577b>
  429059:	cmp    eax,0xd
  42905c:	je     429063 <isspace@plt+0x25753>
  42905e:	cmp    eax,0x3
  429061:	jne    429093 <isspace@plt+0x25783>
  429063:	mov    rdi,r14
  429066:	mov    rsi,rbx
  429069:	call   412d60 <isspace@plt+0xf450>
  42906e:	jmp    429090 <isspace@plt+0x25780>
  429070:	mov    rsi,QWORD PTR [r15+0x28]
  429074:	mov    rdi,r14
  429077:	call   4134d0 <isspace@plt+0xfbc0>
  42907c:	mov    rdi,r14
  42907f:	mov    rsi,rax
  429082:	jmp    42908b <isspace@plt+0x2577b>
  429084:	mov    rsi,QWORD PTR [r15+0x28]
  429088:	mov    rdi,r14
  42908b:	call   4132e0 <isspace@plt+0xf9d0>
  429090:	mov    rbx,rax
  429093:	mov    rax,QWORD PTR fs:0x28
  42909c:	cmp    rax,QWORD PTR [rsp+0x20]
  4290a1:	jne    4290b5 <isspace@plt+0x257a5>
  4290a3:	mov    rax,rbx
  4290a6:	add    rsp,0x28
  4290aa:	pop    rbx
  4290ab:	pop    r12
  4290ad:	pop    r13
  4290af:	pop    r14
  4290b1:	pop    r15
  4290b3:	pop    rbp
  4290b4:	ret    
  4290b5:	call   403280 <__stack_chk_fail@plt>
  4290ba:	nop    WORD PTR [rax+rax*1+0x0]
  4290c0:	push   rbp
  4290c1:	push   r15
  4290c3:	push   r14
  4290c5:	push   r13
  4290c7:	push   r12
  4290c9:	push   rbx
  4290ca:	sub    rsp,0x38
  4290ce:	mov    rbp,rdx
  4290d1:	mov    rbx,rsi
  4290d4:	mov    rax,QWORD PTR fs:0x28
  4290dd:	mov    QWORD PTR [rsp+0x30],rax
  4290e2:	movabs rax,0x2020202020202020
  4290ec:	mov    QWORD PTR [rsp+0x20],rax
  4290f1:	mov    BYTE PTR [rsp+0x28],0x20
  4290f6:	mov    eax,DWORD PTR [rdi+0x7f8]
  4290fc:	cmp    eax,0x9
  4290ff:	mov    ecx,0x8
  429104:	cmovl  ecx,eax
  429107:	movsxd rax,ecx
  42910a:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
  42910f:	cmp    BYTE PTR [rdi+0x7fc],0x0
  429116:	lea    rax,[rip+0x7c66]        # 430d83 <isspace@plt+0x2d473>
  42911d:	lea    rdi,[rsp+0x20]
  429122:	cmove  rdi,rax
  429126:	mov    QWORD PTR [rsp+0x10],rdi
  42912b:	call   403250 <strlen@plt>
  429130:	mov    QWORD PTR [rsp+0x8],rax
  429135:	mov    rsi,QWORD PTR [rbp+0x20]
  429139:	mov    rdi,rbx
  42913c:	call   413280 <isspace@plt+0xf970>
  429141:	mov    r13,rax
  429144:	mov    rax,QWORD PTR [rbp+0x28]
  429148:	mov    QWORD PTR [rsp],rax
  42914c:	mov    r12,rbp
  42914f:	cmp    r13,QWORD PTR [rbp+0x20]
  429153:	jne    429163 <isspace@plt+0x25853>
  429155:	mov    rdi,rbx
  429158:	mov    rsi,r13
  42915b:	call   413220 <isspace@plt+0xf910>
  429160:	mov    r13,rax
  429163:	mov    rdi,rbx
  429166:	mov    rsi,r13
  429169:	call   413220 <isspace@plt+0xf910>
  42916e:	mov    QWORD PTR [rsp+0x18],rax
  429173:	mov    r14,QWORD PTR [r12+0x18]
  429178:	nop    DWORD PTR [rax+rax*1+0x0]
  429180:	mov    rdi,rbx
  429183:	mov    rsi,r13
  429186:	call   413470 <isspace@plt+0xfb60>
  42918b:	mov    rbp,rax
  42918e:	mov    rdi,rbx
  429191:	mov    rsi,rax
  429194:	call   413280 <isspace@plt+0xf970>
  429199:	mov    r15,rax
  42919c:	cmp    QWORD PTR [rsp+0x18],r14
  4291a1:	jb     4291a8 <isspace@plt+0x25898>
  4291a3:	cmp    r15,rbp
  4291a6:	je     4291d6 <isspace@plt+0x258c6>
  4291a8:	mov    rdi,rbx
  4291ab:	mov    rsi,r15
  4291ae:	mov    rdx,QWORD PTR [rsp+0x10]
  4291b3:	mov    rbp,QWORD PTR [rsp+0x8]
  4291b8:	mov    rcx,rbp
  4291bb:	call   40efe0 <isspace@plt+0xb6d0>
  4291c0:	test   al,al
  4291c2:	je     4291d6 <isspace@plt+0x258c6>
  4291c4:	cmp    r15,QWORD PTR [r12+0x28]
  4291c9:	mov    ecx,0x0
  4291ce:	cmova  rbp,rcx
  4291d2:	add    QWORD PTR [rsp],rbp
  4291d6:	mov    rdi,rbx
  4291d9:	mov    rsi,r15
  4291dc:	call   413220 <isspace@plt+0xf910>
  4291e1:	cmp    rax,r15
  4291e4:	je     4291f0 <isspace@plt+0x258e0>
  4291e6:	mov    r13,rax
  4291e9:	cmp    rax,QWORD PTR [r12+0x18]
  4291ee:	jae    429180 <isspace@plt+0x25870>
  4291f0:	mov    rax,QWORD PTR fs:0x28
  4291f9:	cmp    rax,QWORD PTR [rsp+0x30]
  4291fe:	jne    429213 <isspace@plt+0x25903>
  429200:	mov    rax,QWORD PTR [rsp]
  429204:	add    rsp,0x38
  429208:	pop    rbx
  429209:	pop    r12
  42920b:	pop    r13
  42920d:	pop    r14
  42920f:	pop    r15
  429211:	pop    rbp
  429212:	ret    
  429213:	call   403280 <__stack_chk_fail@plt>
  429218:	nop    DWORD PTR [rax+rax*1+0x0]
  429220:	push   rbp
  429221:	push   r15
  429223:	push   r14
  429225:	push   r13
  429227:	push   r12
  429229:	push   rbx
  42922a:	sub    rsp,0x48
  42922e:	mov    rbp,rdx
  429231:	mov    r12,rsi
  429234:	mov    rbx,rdi
  429237:	mov    rax,QWORD PTR fs:0x28
  429240:	mov    QWORD PTR [rsp+0x40],rax
  429245:	mov    rsi,QWORD PTR [rdx+0x20]
  429249:	mov    rdi,r12
  42924c:	call   413280 <isspace@plt+0xf970>
  429251:	movsxd r14,DWORD PTR [rbx+0x7f8]
  429258:	mov    rcx,QWORD PTR [rbp+0x28]
  42925c:	mov    QWORD PTR [rsp],rcx
  429260:	mov    QWORD PTR [rsp+0x8],rbp
  429265:	cmp    rax,QWORD PTR [rbp+0x20]
  429269:	jne    429276 <isspace@plt+0x25966>
  42926b:	mov    rdi,r12
  42926e:	mov    rsi,rax
  429271:	call   413220 <isspace@plt+0xf910>
  429276:	lea    rbx,[rsp+0x10]
  42927b:	lea    r13,[rsp+0x3f]
  429280:	mov    rdi,r12
  429283:	mov    rsi,rax
  429286:	call   413280 <isspace@plt+0xf970>
  42928b:	mov    rbp,rax
  42928e:	mov    rdi,rbx
  429291:	mov    rsi,r12
  429294:	mov    rdx,rax
  429297:	call   410570 <isspace@plt+0xcc60>
  42929c:	mov    rdi,rbx
  42929f:	mov    rsi,r13
  4292a2:	call   412400 <isspace@plt+0xeaf0>
  4292a7:	test   al,al
  4292a9:	je     429320 <isspace@plt+0x25a10>
  4292ab:	mov    r15d,0x1
  4292b1:	cmp    BYTE PTR [rsp+0x3f],0x9
  4292b6:	jne    429320 <isspace@plt+0x25a10>
  4292b8:	cmp    r15,r14
  4292bb:	cmova  r15,r14
  4292bf:	mov    rdi,r12
  4292c2:	mov    rsi,rbp
  4292c5:	mov    rdx,r15
  4292c8:	call   410050 <isspace@plt+0xc740>
  4292cd:	test   al,al
  4292cf:	je     4292f8 <isspace@plt+0x259e8>
  4292d1:	mov    rax,QWORD PTR [rsp+0x8]
  4292d6:	mov    rax,QWORD PTR [rax+0x28]
  4292da:	sub    rax,rbp
  4292dd:	jbe    4292f8 <isspace@plt+0x259e8>
  4292df:	cmp    rax,r15
  4292e2:	cmova  rax,r15
  4292e6:	mov    rcx,QWORD PTR [rsp]
  4292ea:	cmp    rax,rcx
  4292ed:	cmova  rax,rcx
  4292f1:	sub    rcx,rax
  4292f4:	mov    QWORD PTR [rsp],rcx
  4292f8:	mov    rdi,r12
  4292fb:	mov    rsi,rbp
  4292fe:	call   413220 <isspace@plt+0xf910>
  429303:	cmp    rax,rbp
  429306:	je     429384 <isspace@plt+0x25a74>
  429308:	mov    rcx,QWORD PTR [rsp+0x8]
  42930d:	cmp    rax,QWORD PTR [rcx+0x18]
  429311:	jae    429280 <isspace@plt+0x25970>
  429317:	jmp    429384 <isspace@plt+0x25a74>
  429319:	nop    DWORD PTR [rax+0x0]
  429320:	mov    rdi,rbx
  429323:	mov    rsi,r13
  429326:	call   412400 <isspace@plt+0xeaf0>
  42932b:	test   al,al
  42932d:	je     42937c <isspace@plt+0x25a6c>
  42932f:	cmp    BYTE PTR [rsp+0x3f],0x20
  429334:	mov    r15d,0x0
  42933a:	jne    4292b8 <isspace@plt+0x259a8>
  429340:	xor    r15d,r15d
  429343:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42934d:	nop    DWORD PTR [rax]
  429350:	mov    rdi,rbx
  429353:	xor    esi,esi
  429355:	call   412480 <isspace@plt+0xeb70>
  42935a:	inc    r15
  42935d:	mov    rdi,rbx
  429360:	mov    rsi,r13
  429363:	call   412400 <isspace@plt+0xeaf0>
  429368:	test   al,al
  42936a:	je     4292b8 <isspace@plt+0x259a8>
  429370:	cmp    BYTE PTR [rsp+0x3f],0x20
  429375:	je     429350 <isspace@plt+0x25a40>
  429377:	jmp    4292b8 <isspace@plt+0x259a8>
  42937c:	xor    r15d,r15d
  42937f:	jmp    4292b8 <isspace@plt+0x259a8>
  429384:	mov    rax,QWORD PTR fs:0x28
  42938d:	cmp    rax,QWORD PTR [rsp+0x40]
  429392:	jne    4293a7 <isspace@plt+0x25a97>
  429394:	mov    rax,QWORD PTR [rsp]
  429398:	add    rsp,0x48
  42939c:	pop    rbx
  42939d:	pop    r12
  42939f:	pop    r13
  4293a1:	pop    r14
  4293a3:	pop    r15
  4293a5:	pop    rbp
  4293a6:	ret    
  4293a7:	call   403280 <__stack_chk_fail@plt>
  4293ac:	nop    DWORD PTR [rax+0x0]
  4293b0:	push   rbp
  4293b1:	push   r15
  4293b3:	push   r14
  4293b5:	push   r13
  4293b7:	push   r12
  4293b9:	push   rbx
  4293ba:	sub    rsp,0x28
  4293be:	mov    rbx,rdx
  4293c1:	mov    r12,rsi
  4293c4:	mov    rax,QWORD PTR fs:0x28
  4293cd:	mov    QWORD PTR [rsp+0x20],rax
  4293d2:	lea    r14,[rdx+0x18]
  4293d6:	mov    rsi,QWORD PTR [rdx+0x20]
  4293da:	mov    rdi,r12
  4293dd:	call   413280 <isspace@plt+0xf970>
  4293e2:	mov    r15,rax
  4293e5:	mov    QWORD PTR [rsp+0x10],rbx
  4293ea:	cmp    BYTE PTR [rbx+0x38],0x0
  4293ee:	je     42941f <isspace@plt+0x25b0f>
  4293f0:	mov    rdi,r12
  4293f3:	mov    rsi,r14
  4293f6:	call   416f40 <isspace@plt+0x13630>
  4293fb:	test   al,al
  4293fd:	je     42941f <isspace@plt+0x25b0f>
  4293ff:	mov    rdi,r12
  429402:	mov    rsi,r15
  429405:	call   413220 <isspace@plt+0xf910>
  42940a:	mov    rbx,rax
  42940d:	mov    rdi,r12
  429410:	mov    rsi,rax
  429413:	call   413220 <isspace@plt+0xf910>
  429418:	cmp    rax,QWORD PTR [r14]
  42941b:	cmovae r15,rbx
  42941f:	mov    rax,QWORD PTR [rsp+0x10]
  429424:	mov    rax,QWORD PTR [rax+0x40]
  429428:	mov    rdi,QWORD PTR [rax]
  42942b:	test   rdi,rdi
  42942e:	je     429437 <isspace@plt+0x25b27>
  429430:	call   403250 <strlen@plt>
  429435:	jmp    429439 <isspace@plt+0x25b29>
  429437:	xor    eax,eax
  429439:	mov    QWORD PTR [rsp+0x8],rax
  42943e:	xor    ebp,ebp
  429440:	jmp    429465 <isspace@plt+0x25b55>
  429442:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42944c:	nop    DWORD PTR [rax+0x0]
  429450:	test   rbp,rbp
  429453:	je     429510 <isspace@plt+0x25c00>
  429459:	cmp    rbx,r15
  42945c:	mov    r15,rbx
  42945f:	je     429523 <isspace@plt+0x25c13>
  429465:	mov    rdi,r12
  429468:	mov    rsi,r15
  42946b:	call   4132e0 <isspace@plt+0xf9d0>
  429470:	mov    r13,rax
  429473:	mov    rdi,r12
  429476:	mov    rsi,rax
  429479:	call   413220 <isspace@plt+0xf910>
  42947e:	sub    r13,rax
  429481:	jbe    429523 <isspace@plt+0x25c13>
  429487:	mov    rbx,rax
  42948a:	cmp    rax,QWORD PTR [r14]
  42948d:	jb     429523 <isspace@plt+0x25c13>
  429493:	mov    rdi,r12
  429496:	mov    rsi,rbx
  429499:	mov    rdx,r13
  42949c:	call   410050 <isspace@plt+0xc740>
  4294a1:	lea    rsi,[rbx-0x1]
  4294a5:	mov    rdi,r12
  4294a8:	lea    rdx,[rsp+0x1f]
  4294ad:	call   411060 <isspace@plt+0xd750>
  4294b2:	test   al,al
  4294b4:	je     429450 <isspace@plt+0x25b40>
  4294b6:	call   4038f0 <__ctype_b_loc@plt>
  4294bb:	mov    rax,QWORD PTR [rax]
  4294be:	movzx  ecx,BYTE PTR [rsp+0x1f]
  4294c3:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  4294c8:	jne    429450 <isspace@plt+0x25b40>
  4294ca:	mov    rdi,r12
  4294cd:	mov    rsi,rbx
  4294d0:	lea    rdx,[rsp+0x1e]
  4294d5:	call   411060 <isspace@plt+0xd750>
  4294da:	cmp    BYTE PTR [rsp+0x1e],0xa
  4294df:	je     429450 <isspace@plt+0x25b40>
  4294e5:	test   al,al
  4294e7:	je     429450 <isspace@plt+0x25b40>
  4294ed:	mov    rax,QWORD PTR [rsp+0x10]
  4294f2:	mov    rax,QWORD PTR [rax+0x40]
  4294f6:	mov    rdx,QWORD PTR [rax]
  4294f9:	mov    rdi,r12
  4294fc:	mov    rsi,rbx
  4294ff:	mov    rcx,QWORD PTR [rsp+0x8]
  429504:	call   40efe0 <isspace@plt+0xb6d0>
  429509:	jmp    429450 <isspace@plt+0x25b40>
  42950e:	xchg   ax,ax
  429510:	mov    rdi,r12
  429513:	mov    rsi,rbx
  429516:	call   410d60 <isspace@plt+0xd450>
  42951b:	mov    rbp,rax
  42951e:	jmp    429459 <isspace@plt+0x25b49>
  429523:	mov    rdi,r12
  429526:	mov    rsi,rbp
  429529:	call   410e10 <isspace@plt+0xd500>
  42952e:	cmp    rax,0xffffffffffffffff
  429532:	jne    429537 <isspace@plt+0x25c27>
  429534:	mov    rax,QWORD PTR [r14]
  429537:	mov    rcx,QWORD PTR fs:0x28
  429540:	cmp    rcx,QWORD PTR [rsp+0x20]
  429545:	jne    429556 <isspace@plt+0x25c46>
  429547:	add    rsp,0x28
  42954b:	pop    rbx
  42954c:	pop    r12
  42954e:	pop    r13
  429550:	pop    r14
  429552:	pop    r15
  429554:	pop    rbp
  429555:	ret    
  429556:	call   403280 <__stack_chk_fail@plt>
  42955b:	nop    DWORD PTR [rax+rax*1+0x0]
  429560:	push   rax
  429561:	mov    rax,QWORD PTR fs:0x28
  42956a:	mov    QWORD PTR [rsp],rax
  42956e:	mov    rax,QWORD PTR [rdx+0x30]
  429572:	cmp    rax,0xffffffffffffffff
  429576:	jne    42957c <isspace@plt+0x25c6c>
  429578:	mov    rax,QWORD PTR [rdx+0x28]
  42957c:	mov    rcx,QWORD PTR fs:0x28
  429585:	cmp    rcx,QWORD PTR [rsp]
  429589:	jne    42958d <isspace@plt+0x25c7d>
  42958b:	pop    rcx
  42958c:	ret    
  42958d:	call   403280 <__stack_chk_fail@plt>
  429592:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42959c:	nop    DWORD PTR [rax+0x0]
  4295a0:	push   rbp
  4295a1:	push   r15
  4295a3:	push   r14
  4295a5:	push   r13
  4295a7:	push   r12
  4295a9:	push   rbx
  4295aa:	sub    rsp,0x38
  4295ae:	mov    r15,rdx
  4295b1:	mov    r14,rsi
  4295b4:	mov    r12,rdi
  4295b7:	mov    rax,QWORD PTR fs:0x28
  4295c0:	mov    QWORD PTR [rsp+0x30],rax
  4295c5:	mov    rdx,QWORD PTR [rdx+0x18]
  4295c9:	lea    rdi,[rsp+0x8]
  4295ce:	call   410570 <isspace@plt+0xcc60>
  4295d3:	mov    rax,QWORD PTR [rsp+0x28]
  4295d8:	cmp    rax,QWORD PTR [r15+0x20]
  4295dc:	jae    42960e <isspace@plt+0x25cfe>
  4295de:	xor    ebp,ebp
  4295e0:	lea    rbx,[rsp+0x8]
  4295e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4295ef:	nop
  4295f0:	mov    rdi,rbx
  4295f3:	xor    esi,esi
  4295f5:	call   4128a0 <isspace@plt+0xef90>
  4295fa:	test   al,al
  4295fc:	je     429610 <isspace@plt+0x25d00>
  4295fe:	inc    rbp
  429601:	mov    rax,QWORD PTR [rsp+0x28]
  429606:	cmp    rax,QWORD PTR [r15+0x20]
  42960a:	jb     4295f0 <isspace@plt+0x25ce0>
  42960c:	jmp    429610 <isspace@plt+0x25d00>
  42960e:	xor    ebp,ebp
  429610:	mov    al,BYTE PTR [r15+0x38]
  429614:	mov    rsi,QWORD PTR [r15+0x8]
  429618:	mov    BYTE PTR [rsi+0x20],al
  42961b:	mov    rdx,QWORD PTR [r15+0x10]
  42961f:	lea    rbx,[r15+0x18]
  429623:	mov    rdi,r12
  429626:	mov    rcx,r14
  429629:	mov    r8,rbx
  42962c:	call   42a520 <isspace@plt+0x26c10>
  429631:	mov    rdi,r14
  429634:	mov    rsi,rbx
  429637:	call   410430 <isspace@plt+0xcb20>
  42963c:	cmp    BYTE PTR [r15+0x38],0x0
  429641:	je     42966a <isspace@plt+0x25d5a>
  429643:	mov    rbx,QWORD PTR [r15+0x18]
  429647:	mov    rdi,r14
  42964a:	call   410890 <isspace@plt+0xcf80>
  42964f:	cmp    rbx,rax
  429652:	jne    42966a <isspace@plt+0x25d5a>
  429654:	mov    rdi,r14
  429657:	mov    rsi,rbx
  42965a:	call   413220 <isspace@plt+0xf910>
  42965f:	mov    rdi,r14
  429662:	mov    rsi,rax
  429665:	call   413280 <isspace@plt+0xf970>
  42966a:	mov    rbx,QWORD PTR [r15+0x18]
  42966e:	mov    rax,QWORD PTR [r15+0x40]
  429672:	mov    r13,QWORD PTR [rax]
  429675:	mov    rdi,r13
  429678:	call   403250 <strlen@plt>
  42967d:	test   rbp,rbp
  429680:	je     4296c1 <isspace@plt+0x25db1>
  429682:	mov    r12,rax
  429685:	mov    rdi,r14
  429688:	mov    rsi,rbx
  42968b:	mov    rdx,r13
  42968e:	mov    rcx,rax
  429691:	call   40efe0 <isspace@plt+0xb6d0>
  429696:	dec    rbp
  429699:	je     4296bd <isspace@plt+0x25dad>
  42969b:	add    rbx,r12
  42969e:	xchg   ax,ax
  4296a0:	mov    rax,QWORD PTR [r15+0x40]
  4296a4:	mov    rdx,QWORD PTR [rax]
  4296a7:	mov    rdi,r14
  4296aa:	mov    rsi,rbx
  4296ad:	mov    rcx,r12
  4296b0:	call   40efe0 <isspace@plt+0xb6d0>
  4296b5:	add    rbx,r12
  4296b8:	dec    rbp
  4296bb:	jne    4296a0 <isspace@plt+0x25d90>
  4296bd:	mov    rbx,QWORD PTR [r15+0x18]
  4296c1:	mov    rax,QWORD PTR fs:0x28
  4296ca:	cmp    rax,QWORD PTR [rsp+0x30]
  4296cf:	jne    4296e3 <isspace@plt+0x25dd3>
  4296d1:	mov    rax,rbx
  4296d4:	add    rsp,0x38
  4296d8:	pop    rbx
  4296d9:	pop    r12
  4296db:	pop    r13
  4296dd:	pop    r14
  4296df:	pop    r15
  4296e1:	pop    rbp
  4296e2:	ret    
  4296e3:	call   403280 <__stack_chk_fail@plt>
  4296e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4296f0:	push   r15
  4296f2:	push   r14
  4296f4:	push   r13
  4296f6:	push   r12
  4296f8:	push   rbx
  4296f9:	sub    rsp,0x20
  4296fd:	mov    r14,rdx
  429700:	mov    r12,rsi
  429703:	mov    rax,QWORD PTR fs:0x28
  42970c:	mov    QWORD PTR [rsp+0x18],rax
  429711:	mov    rax,QWORD PTR [rdi+0x30]
  429715:	mov    r15,QWORD PTR [rax+0x18]
  429719:	lea    rsi,[rdx+0x18]
  42971d:	mov    rdi,r12
  429720:	call   416ec0 <isspace@plt+0x135b0>
  429725:	mov    QWORD PTR [rsp+0x8],rax
  42972a:	mov    QWORD PTR [rsp+0x10],rdx
  42972f:	lea    rsi,[rsp+0x8]
  429734:	mov    rdi,r12
  429737:	call   413bd0 <isspace@plt+0x102c0>
  42973c:	cmp    rax,0xffffffffffffffff
  429740:	je     429793 <isspace@plt+0x25e83>
  429742:	mov    rbx,rax
  429745:	lea    r13,[rsp+0x8]
  42974a:	jmp    42977d <isspace@plt+0x25e6d>
  42974c:	nop    DWORD PTR [rax+0x0]
  429750:	mov    rdi,r12
  429753:	mov    rsi,rbx
  429756:	call   4132e0 <isspace@plt+0xf9d0>
  42975b:	mov    rdi,r15
  42975e:	mov    rsi,rax
  429761:	call   41ea40 <isspace@plt+0x1b130>
  429766:	mov    rdi,r12
  429769:	mov    rsi,r13
  42976c:	mov    rdx,rbx
  42976f:	call   413c20 <isspace@plt+0x10310>
  429774:	mov    rbx,rax
  429777:	cmp    rax,0xffffffffffffffff
  42977b:	je     429793 <isspace@plt+0x25e83>
  42977d:	mov    rax,QWORD PTR [r14+0x40]
  429781:	cmp    DWORD PTR [rax],0xb
  429784:	jne    429750 <isspace@plt+0x25e40>
  429786:	mov    rdi,r12
  429789:	mov    rsi,rbx
  42978c:	call   4133a0 <isspace@plt+0xfa90>
  429791:	jmp    42975b <isspace@plt+0x25e4b>
  429793:	mov    rax,QWORD PTR fs:0x28
  42979c:	cmp    rax,QWORD PTR [rsp+0x18]
  4297a1:	jne    4297b8 <isspace@plt+0x25ea8>
  4297a3:	mov    rax,0xffffffffffffffff
  4297aa:	add    rsp,0x20
  4297ae:	pop    rbx
  4297af:	pop    r12
  4297b1:	pop    r13
  4297b3:	pop    r14
  4297b5:	pop    r15
  4297b7:	ret    
  4297b8:	call   403280 <__stack_chk_fail@plt>
  4297bd:	nop    DWORD PTR [rax]
  4297c0:	push   r14
  4297c2:	push   rbx
  4297c3:	push   rax
  4297c4:	mov    rax,QWORD PTR fs:0x28
  4297cd:	mov    QWORD PTR [rsp],rax
  4297d1:	mov    al,0x1
  4297d3:	test   rsi,rsi
  4297d6:	je     429827 <isspace@plt+0x25f17>
  4297d8:	mov    rbx,rsi
  4297db:	movsx  ecx,BYTE PTR [rsi]
  4297de:	test   ecx,ecx
  4297e0:	je     429827 <isspace@plt+0x25f17>
  4297e2:	cmp    BYTE PTR [rbx+0x1],0x0
  4297e6:	je     429827 <isspace@plt+0x25f17>
  4297e8:	xor    eax,eax
  4297ea:	add    ecx,0xffffffd5
  4297ed:	cmp    ecx,0x14
  4297f0:	ja     429827 <isspace@plt+0x25f17>
  4297f2:	mov    r14,rdi
  4297f5:	inc    rbx
  4297f8:	lea    rdx,[rip+0x7a6d]        # 43126c <isspace@plt+0x2d95c>
  4297ff:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  429803:	add    rcx,rdx
  429806:	jmp    rcx
  429808:	lea    rsi,[r14+0x2e8]
  42980f:	mov    rdi,r14
  429812:	mov    rdx,rbx
  429815:	call   42a480 <isspace@plt+0x26b70>
  42981a:	mov    rdi,r14
  42981d:	mov    rsi,rbx
  429820:	call   424240 <isspace@plt+0x20930>
  429825:	jmp    42985a <isspace@plt+0x25f4a>
  429827:	mov    rcx,QWORD PTR fs:0x28
  429830:	cmp    rcx,QWORD PTR [rsp]
  429834:	jne    429869 <isspace@plt+0x25f59>
  429836:	add    rsp,0x8
  42983a:	pop    rbx
  42983b:	pop    r14
  42983d:	ret    
  42983e:	mov    rdi,r14
  429841:	mov    esi,0x44
  429846:	jmp    429850 <isspace@plt+0x25f40>
  429848:	mov    rdi,r14
  42984b:	mov    esi,0x45
  429850:	mov    rdx,rbx
  429853:	xor    eax,eax
  429855:	call   4279b0 <isspace@plt+0x240a0>
  42985a:	mov    rcx,QWORD PTR fs:0x28
  429863:	cmp    rcx,QWORD PTR [rsp]
  429867:	je     429836 <isspace@plt+0x25f26>
  429869:	call   403280 <__stack_chk_fail@plt>
  42986e:	xchg   ax,ax
  429870:	push   r15
  429872:	push   r14
  429874:	push   r13
  429876:	push   r12
  429878:	push   rbx
  429879:	sub    rsp,0x10
  42987d:	mov    r15,rsi
  429880:	mov    r14,rdi
  429883:	mov    rax,QWORD PTR fs:0x28
  42988c:	mov    QWORD PTR [rsp+0x8],rax
  429891:	mov    r13,QWORD PTR [rdi+0x30]
  429895:	xor    eax,eax
  429897:	cmp    BYTE PTR [rsi],0x3a
  42989a:	setne  al
  42989d:	mov    rsi,QWORD PTR [rdi+rax*8+0x10]
  4298a2:	mov    edx,0x200
  4298a7:	call   420980 <isspace@plt+0x1d070>
  4298ac:	test   rax,rax
  4298af:	je     4299c1 <isspace@plt+0x260b1>
  4298b5:	mov    rbx,rax
  4298b8:	mov    rax,QWORD PTR [rax+0x10]
  4298bc:	mov    r12,QWORD PTR [rax]
  4298bf:	lea    rsi,[rip+0x64fd]        # 42fdc3 <isspace@plt+0x2c4b3>
  4298c6:	mov    rdi,r12
  4298c9:	mov    rdx,r15
  4298cc:	xor    eax,eax
  4298ce:	call   410ea0 <isspace@plt+0xd590>
  4298d3:	mov    rdi,QWORD PTR [rbx+0x18]
  4298d7:	call   41efe0 <isspace@plt+0x1b6d0>
  4298dc:	mov    r15,rax
  4298df:	mov    rdi,r12
  4298e2:	call   410890 <isspace@plt+0xcf80>
  4298e7:	lea    rsi,[rax-0x1]
  4298eb:	mov    rdi,r15
  4298ee:	call   41e5e0 <isspace@plt+0x1acd0>
  4298f3:	mov    QWORD PTR [rbx+0x2c8],r13
  4298fa:	mov    rax,QWORD PTR [r14+0x9a0]
  429901:	mov    QWORD PTR [rbx+0x2d0],rax
  429908:	lea    r15,[rip+0x534f]        # 42ec5e <isspace@plt+0x2b34e>
  42990f:	lea    r12,[rip+0x17a0a]        # 441320 <isspace@plt+0x3da10>
  429916:	mov    rdi,rbx
  429919:	xor    esi,esi
  42991b:	mov    edx,0x1
  429920:	mov    rcx,r15
  429923:	mov    r8,r12
  429926:	call   427390 <isspace@plt+0x23a80>
  42992b:	mov    rdi,rbx
  42992e:	mov    esi,0x4
  429933:	mov    edx,0x1
  429938:	mov    rcx,r15
  42993b:	mov    r8,r12
  42993e:	call   427390 <isspace@plt+0x23a80>
  429943:	lea    rcx,[rip+0x5217]        # 42eb61 <isspace@plt+0x2b251>
  42994a:	mov    rdi,rbx
  42994d:	mov    esi,0x4
  429952:	mov    edx,0x1
  429957:	mov    r8,r12
  42995a:	call   427390 <isspace@plt+0x23a80>
  42995f:	mov    rdi,rbx
  429962:	mov    esi,0x2
  429967:	mov    edx,0x1
  42996c:	mov    rcx,r15
  42996f:	mov    r8,r12
  429972:	call   427390 <isspace@plt+0x23a80>
  429977:	lea    rcx,[rip+0x5502]        # 42ee80 <isspace@plt+0x2b570>
  42997e:	lea    r8,[rip+0x179b3]        # 441338 <isspace@plt+0x3da28>
  429985:	mov    rdi,rbx
  429988:	xor    esi,esi
  42998a:	mov    edx,0x1
  42998f:	call   427390 <isspace@plt+0x23a80>
  429994:	lea    rcx,[rip+0x5155]        # 42eaf0 <isspace@plt+0x2b1e0>
  42999b:	lea    r8,[rip+0x179ae]        # 441350 <isspace@plt+0x3da40>
  4299a2:	mov    rdi,rbx
  4299a5:	mov    esi,0x4
  4299aa:	mov    edx,0x1
  4299af:	call   427390 <isspace@plt+0x23a80>
  4299b4:	mov    rdi,r14
  4299b7:	mov    esi,0x4
  4299bc:	call   426fe0 <isspace@plt+0x236d0>
  4299c1:	mov    rax,QWORD PTR fs:0x28
  4299ca:	cmp    rax,QWORD PTR [rsp+0x8]
  4299cf:	jne    4299df <isspace@plt+0x260cf>
  4299d1:	add    rsp,0x10
  4299d5:	pop    rbx
  4299d6:	pop    r12
  4299d8:	pop    r13
  4299da:	pop    r14
  4299dc:	pop    r15
  4299de:	ret    
  4299df:	call   403280 <__stack_chk_fail@plt>
  4299e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4299ee:	xchg   ax,ax
  4299f0:	sub    rsp,0xd8
  4299f7:	test   al,al
  4299f9:	je     429a34 <isspace@plt+0x26124>
  4299fb:	vmovaps XMMWORD PTR [rsp+0x30],xmm0
  429a01:	vmovaps XMMWORD PTR [rsp+0x40],xmm1
  429a07:	vmovaps XMMWORD PTR [rsp+0x50],xmm2
  429a0d:	vmovaps XMMWORD PTR [rsp+0x60],xmm3
  429a13:	vmovaps XMMWORD PTR [rsp+0x70],xmm4
  429a19:	vmovaps XMMWORD PTR [rsp+0x80],xmm5
  429a22:	vmovaps XMMWORD PTR [rsp+0x90],xmm6
  429a2b:	vmovaps XMMWORD PTR [rsp+0xa0],xmm7
  429a34:	mov    QWORD PTR [rsp+0x10],rdx
  429a39:	mov    QWORD PTR [rsp+0x18],rcx
  429a3e:	mov    QWORD PTR [rsp+0x20],r8
  429a43:	mov    QWORD PTR [rsp+0x28],r9
  429a48:	mov    rax,QWORD PTR fs:0x28
  429a51:	mov    QWORD PTR [rsp+0xd0],rax
  429a59:	mov    rax,rsp
  429a5c:	mov    QWORD PTR [rsp+0xc0],rax
  429a64:	lea    rax,[rsp+0xe0]
  429a6c:	mov    QWORD PTR [rsp+0xb8],rax
  429a74:	movabs rax,0x3000000010
  429a7e:	mov    QWORD PTR [rsp+0xb0],rax
  429a86:	mov    rdi,QWORD PTR [rdi]
  429a89:	lea    rdx,[rsp+0xb0]
  429a91:	call   QWORD PTR [rdi+0x40]
  429a94:	mov    rax,QWORD PTR fs:0x28
  429a9d:	cmp    rax,QWORD PTR [rsp+0xd0]
  429aa5:	jne    429aaf <isspace@plt+0x2619f>
  429aa7:	add    rsp,0xd8
  429aae:	ret    
  429aaf:	call   403280 <__stack_chk_fail@plt>
  429ab4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429abe:	xchg   ax,ax
  429ac0:	push   rax
  429ac1:	mov    rax,QWORD PTR fs:0x28
  429aca:	mov    QWORD PTR [rsp],rax
  429ace:	mov    rdi,QWORD PTR [rdi]
  429ad1:	call   QWORD PTR [rdi+0x48]
  429ad4:	mov    rax,QWORD PTR fs:0x28
  429add:	cmp    rax,QWORD PTR [rsp]
  429ae1:	jne    429ae5 <isspace@plt+0x261d5>
  429ae3:	pop    rax
  429ae4:	ret    
  429ae5:	call   403280 <__stack_chk_fail@plt>
  429aea:	nop    WORD PTR [rax+rax*1+0x0]
  429af0:	push   rbp
  429af1:	push   r15
  429af3:	push   r14
  429af5:	push   r13
  429af7:	push   r12
  429af9:	push   rbx
  429afa:	sub    rsp,0x28
  429afe:	mov    QWORD PTR [rsp+0x8],rsi
  429b03:	mov    r15,rdi
  429b06:	mov    rax,QWORD PTR fs:0x28
  429b0f:	mov    QWORD PTR [rsp+0x20],rax
  429b14:	mov    rbx,QWORD PTR [rdi+0x30]
  429b18:	mov    rax,QWORD PTR [rbx+0x10]
  429b1c:	mov    rbp,QWORD PTR [rbx+0x18]
  429b20:	mov    r12,QWORD PTR [rax]
  429b23:	mov    r14,QWORD PTR [rbx+0x2c8]
  429b2a:	mov    rdi,rbp
  429b2d:	call   41f770 <isspace@plt+0x1be60>
  429b32:	mov    QWORD PTR [rsp+0x10],rax
  429b37:	mov    QWORD PTR [rsp+0x18],rdx
  429b3c:	mov    rax,QWORD PTR [r15+0x9a0]
  429b43:	cmp    BYTE PTR [rax+0x58],0x0
  429b47:	jne    429c20 <isspace@plt+0x26310>
  429b4d:	call   42ad80 <isspace@plt+0x27470>
  429b52:	mov    r13,rax
  429b55:	mov    rdi,rbp
  429b58:	call   41e510 <isspace@plt+0x1ac00>
  429b5d:	mov    rbp,rax
  429b60:	mov    rax,QWORD PTR [rbx+0x10]
  429b64:	cmp    rax,QWORD PTR [r15+0x10]
  429b68:	je     429c08 <isspace@plt+0x262f8>
  429b6e:	xor    esi,esi
  429b70:	cmp    rax,QWORD PTR [r15+0x18]
  429b74:	lea    rax,[rip+0x7748]        # 4312c3 <isspace@plt+0x2d9b3>
  429b7b:	cmove  rsi,rax
  429b7f:	test   r13,r13
  429b82:	je     429c18 <isspace@plt+0x26308>
  429b88:	test   rsi,rsi
  429b8b:	je     429c18 <isspace@plt+0x26308>
  429b91:	movzx  edx,BYTE PTR [r15+0xb60]
  429b99:	add    edx,edx
  429b9b:	or     edx,0x5
  429b9e:	mov    rdi,r13
  429ba1:	call   42ade0 <isspace@plt+0x274d0>
  429ba6:	test   eax,eax
  429ba8:	jne    429c18 <isspace@plt+0x26308>
  429baa:	mov    rdi,r12
  429bad:	mov    rsi,rbp
  429bb0:	call   413470 <isspace@plt+0xfb60>
  429bb5:	mov    rdi,r12
  429bb8:	mov    rsi,rax
  429bbb:	mov    rdx,r13
  429bbe:	call   4157b0 <isspace@plt+0x11ea0>
  429bc3:	cmp    rax,rbp
  429bc6:	mov    rcx,0xffffffffffffffff
  429bcd:	cmovbe rcx,rax
  429bd1:	mov    QWORD PTR [rsp],rcx
  429bd5:	mov    rdi,r12
  429bd8:	mov    rsi,rbp
  429bdb:	mov    rdx,r13
  429bde:	call   4156e0 <isspace@plt+0x11dd0>
  429be3:	cmp    rax,rbp
  429be6:	jae    429bf0 <isspace@plt+0x262e0>
  429be8:	mov    rdi,r12
  429beb:	call   410890 <isspace@plt+0xcf80>
  429bf0:	mov    rdi,QWORD PTR [rsp]
  429bf4:	mov    rsi,rax
  429bf7:	call   417250 <isspace@plt+0x13940>
  429bfc:	mov    QWORD PTR [rsp+0x10],rax
  429c01:	mov    QWORD PTR [rsp+0x18],rdx
  429c06:	jmp    429c18 <isspace@plt+0x26308>
  429c08:	lea    rsi,[rip+0x76b1]        # 4312c0 <isspace@plt+0x2d9b0>
  429c0f:	test   r13,r13
  429c12:	jne    429b88 <isspace@plt+0x26278>
  429c18:	mov    rdi,r13
  429c1b:	call   42ae70 <isspace@plt+0x27560>
  429c20:	lea    rdi,[rsp+0x10]
  429c25:	call   416fc0 <isspace@plt+0x136b0>
  429c2a:	test   al,al
  429c2c:	je     429d07 <isspace@plt+0x263f7>
  429c32:	mov    rbp,QWORD PTR [rsp+0x10]
  429c37:	lea    rdi,[rsp+0x10]
  429c3c:	call   417020 <isspace@plt+0x13710>
  429c41:	mov    rdi,r12
  429c44:	mov    rsi,rbp
  429c47:	mov    rdx,rax
  429c4a:	call   411210 <isspace@plt+0xd900>
  429c4f:	mov    r13,rax
  429c52:	test   r14,r14
  429c55:	je     429d15 <isspace@plt+0x26405>
  429c5b:	test   r13,r13
  429c5e:	je     429d15 <isspace@plt+0x26405>
  429c64:	mov    rdi,r13
  429c67:	call   403250 <strlen@plt>
  429c6c:	test   rax,rax
  429c6f:	je     429c7f <isspace@plt+0x2636f>
  429c71:	cmp    BYTE PTR [rax+r13*1-0x1],0xa
  429c77:	jne    429c7f <isspace@plt+0x2636f>
  429c79:	mov    BYTE PTR [r13+rax*1-0x1],0x0
  429c7f:	mov    r14,QWORD PTR [rsp+0x18]
  429c84:	mov    rdi,r12
  429c87:	call   410890 <isspace@plt+0xcf80>
  429c8c:	mov    rbp,rax
  429c8f:	mov    rax,QWORD PTR [rbx]
  429c92:	mov    rcx,QWORD PTR [rbx+0x2c8]
  429c99:	test   rcx,rcx
  429c9c:	je     429ca2 <isspace@plt+0x26392>
  429c9e:	mov    QWORD PTR [rax+0x30],rcx
  429ca2:	mov    rcx,QWORD PTR [rbx+0x2d0]
  429ca9:	mov    QWORD PTR [rax+0x9a0],rcx
  429cb0:	mov    rdi,r15
  429cb3:	mov    rsi,r13
  429cb6:	call   4297c0 <isspace@plt+0x25eb0>
  429cbb:	test   al,al
  429cbd:	je     429d6c <isspace@plt+0x2645c>
  429cc3:	mov    rdi,rbx
  429cc6:	call   429dd0 <isspace@plt+0x264c0>
  429ccb:	cmp    r14,rbp
  429cce:	je     429d83 <isspace@plt+0x26473>
  429cd4:	mov    rbx,QWORD PTR [rsp+0x10]
  429cd9:	lea    rdi,[rsp+0x10]
  429cde:	call   417020 <isspace@plt+0x13710>
  429ce3:	mov    rdi,r12
  429ce6:	mov    rsi,rbx
  429ce9:	mov    rdx,rax
  429cec:	call   410050 <isspace@plt+0xc740>
  429cf1:	lea    rsi,[rip+0x60cb]        # 42fdc3 <isspace@plt+0x2c4b3>
  429cf8:	mov    rdi,r12
  429cfb:	mov    rdx,r13
  429cfe:	xor    eax,eax
  429d00:	call   410ea0 <isspace@plt+0xd590>
  429d05:	jmp    429d83 <isspace@plt+0x26473>
  429d07:	test   r14,r14
  429d0a:	je     429d25 <isspace@plt+0x26415>
  429d0c:	lea    rsi,[rip+0x75ce]        # 4312e1 <isspace@plt+0x2d9d1>
  429d13:	jmp    429d2c <isspace@plt+0x2641c>
  429d15:	test   r14,r14
  429d18:	je     429db7 <isspace@plt+0x264a7>
  429d1e:	test   r13,r13
  429d21:	jne    429d39 <isspace@plt+0x26429>
  429d23:	jmp    429d0c <isspace@plt+0x263fc>
  429d25:	lea    rsi,[rip+0x759f]        # 4312cb <isspace@plt+0x2d9bb>
  429d2c:	xor    r13d,r13d
  429d2f:	mov    rdi,r15
  429d32:	xor    eax,eax
  429d34:	call   4299f0 <isspace@plt+0x260e0>
  429d39:	mov    rax,QWORD PTR [rbx]
  429d3c:	mov    rcx,QWORD PTR [rbx+0x2c8]
  429d43:	test   rcx,rcx
  429d46:	je     429d4c <isspace@plt+0x2643c>
  429d48:	mov    QWORD PTR [rax+0x30],rcx
  429d4c:	mov    rcx,QWORD PTR [rbx+0x2d0]
  429d53:	mov    QWORD PTR [rax+0x9a0],rcx
  429d5a:	mov    rdi,rbx
  429d5d:	call   429dd0 <isspace@plt+0x264c0>
  429d62:	mov    rdi,r13
  429d65:	call   4030d0 <free@plt>
  429d6a:	jmp    429d93 <isspace@plt+0x26483>
  429d6c:	mov    QWORD PTR [r15+0x30],rbx
  429d70:	mov    eax,0x180
  429d75:	add    rax,QWORD PTR [rip+0x18244]        # 441fc0 <isspace@plt+0x3e6b0>
  429d7c:	mov    QWORD PTR [r15+0x9a0],rax
  429d83:	mov    rdi,r13
  429d86:	call   4030d0 <free@plt>
  429d8b:	mov    rdi,r15
  429d8e:	call   421530 <isspace@plt+0x1dc20>
  429d93:	mov    rax,QWORD PTR fs:0x28
  429d9c:	cmp    rax,QWORD PTR [rsp+0x20]
  429da1:	jne    429dc3 <isspace@plt+0x264b3>
  429da3:	mov    rax,QWORD PTR [rsp+0x8]
  429da8:	add    rsp,0x28
  429dac:	pop    rbx
  429dad:	pop    r12
  429daf:	pop    r13
  429db1:	pop    r14
  429db3:	pop    r15
  429db5:	pop    rbp
  429db6:	ret    
  429db7:	lea    rsi,[rip+0x750d]        # 4312cb <isspace@plt+0x2d9bb>
  429dbe:	jmp    429d2f <isspace@plt+0x2641f>
  429dc3:	call   403280 <__stack_chk_fail@plt>
  429dc8:	nop    DWORD PTR [rax+rax*1+0x0]
  429dd0:	push   r15
  429dd2:	push   r14
  429dd4:	push   rbx
  429dd5:	sub    rsp,0x20
  429dd9:	mov    r14,rdi
  429ddc:	mov    rax,QWORD PTR fs:0x28
  429de5:	mov    QWORD PTR [rsp+0x18],rax
  429dea:	mov    rax,QWORD PTR [rdi+0x10]
  429dee:	mov    r15,QWORD PTR [rax]
  429df1:	mov    rdi,r15
  429df4:	call   410890 <isspace@plt+0xcf80>
  429df9:	mov    BYTE PTR [rsp+0x17],0x0
  429dfe:	test   rax,rax
  429e01:	je     429e39 <isspace@plt+0x26529>
  429e03:	mov    rbx,rax
  429e06:	lea    rsi,[rax-0x1]
  429e0a:	lea    rdx,[rsp+0x17]
  429e0f:	mov    rdi,r15
  429e12:	call   411060 <isspace@plt+0xd750>
  429e17:	cmp    BYTE PTR [rsp+0x17],0xa
  429e1c:	je     429e39 <isspace@plt+0x26529>
  429e1e:	test   al,al
  429e20:	je     429e39 <isspace@plt+0x26529>
  429e22:	lea    rdx,[rip+0x6730]        # 430559 <isspace@plt+0x2cc49>
  429e29:	mov    ecx,0x1
  429e2e:	mov    rdi,r15
  429e31:	mov    rsi,rbx
  429e34:	call   40efe0 <isspace@plt+0xb6d0>
  429e39:	mov    rdi,r15
  429e3c:	call   410890 <isspace@plt+0xcf80>
  429e41:	lea    rsi,[rax-0x1]
  429e45:	mov    rdi,r15
  429e48:	call   4162d0 <isspace@plt+0x129c0>
  429e4d:	mov    rbx,rax
  429e50:	mov    QWORD PTR [rsp],rax
  429e54:	mov    QWORD PTR [rsp+0x8],rdx
  429e59:	mov    rdi,rsp
  429e5c:	call   417020 <isspace@plt+0x13710>
  429e61:	mov    rdi,r15
  429e64:	mov    rsi,rbx
  429e67:	mov    rdx,rax
  429e6a:	call   411210 <isspace@plt+0xd900>
  429e6f:	mov    rbx,rax
  429e72:	test   rax,rax
  429e75:	je     429e8b <isspace@plt+0x2657b>
  429e77:	movzx  eax,BYTE PTR [rbx]
  429e7a:	cmp    rax,0xa
  429e7e:	jne    429eb5 <isspace@plt+0x265a5>
  429e80:	mov    rsi,rsp
  429e83:	mov    rdi,r15
  429e86:	call   410430 <isspace@plt+0xcb20>
  429e8b:	mov    rdi,rbx
  429e8e:	call   4030d0 <free@plt>
  429e93:	mov    rdi,r14
  429e96:	call   421880 <isspace@plt+0x1df70>
  429e9b:	mov    rax,QWORD PTR fs:0x28
  429ea4:	cmp    rax,QWORD PTR [rsp+0x18]
  429ea9:	jne    429edf <isspace@plt+0x265cf>
  429eab:	add    rsp,0x20
  429eaf:	pop    rbx
  429eb0:	pop    r14
  429eb2:	pop    r15
  429eb4:	ret    
  429eb5:	cmp    al,0x3f
  429eb7:	ja     429e8b <isspace@plt+0x2657b>
  429eb9:	mov    ecx,0x1
  429ebe:	shlx   rax,rcx,rax
  429ec3:	movabs rcx,0x8400800000000001
  429ecd:	and    rcx,rax
  429ed0:	je     429e8b <isspace@plt+0x2657b>
  429ed2:	mov    al,BYTE PTR [rbx+0x1]
  429ed5:	cmp    al,0xa
  429ed7:	je     429e80 <isspace@plt+0x26570>
  429ed9:	test   al,al
  429edb:	je     429e80 <isspace@plt+0x26570>
  429edd:	jmp    429e8b <isspace@plt+0x2657b>
  429edf:	call   403280 <__stack_chk_fail@plt>
  429ee4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429eee:	xchg   ax,ax
  429ef0:	push   r14
  429ef2:	push   rbx
  429ef3:	push   rax
  429ef4:	mov    r14,rsi
  429ef7:	mov    rax,QWORD PTR fs:0x28
  429f00:	mov    QWORD PTR [rsp],rax
  429f04:	mov    rbx,QWORD PTR [rdi+0x30]
  429f08:	mov    rdi,QWORD PTR [rbx+0x18]
  429f0c:	call   41ea70 <isspace@plt+0x1b160>
  429f11:	cmp    eax,0x2
  429f14:	jl     429f21 <isspace@plt+0x26611>
  429f16:	mov    rdi,QWORD PTR [rbx+0x18]
  429f1a:	call   41f630 <isspace@plt+0x1bd20>
  429f1f:	jmp    429f4a <isspace@plt+0x2663a>
  429f21:	mov    rax,QWORD PTR [rbx]
  429f24:	mov    rcx,QWORD PTR [rbx+0x2c8]
  429f2b:	test   rcx,rcx
  429f2e:	je     429f34 <isspace@plt+0x26624>
  429f30:	mov    QWORD PTR [rax+0x30],rcx
  429f34:	mov    rcx,QWORD PTR [rbx+0x2d0]
  429f3b:	mov    QWORD PTR [rax+0x9a0],rcx
  429f42:	mov    rdi,rbx
  429f45:	call   429dd0 <isspace@plt+0x264c0>
  429f4a:	mov    rax,QWORD PTR fs:0x28
  429f53:	cmp    rax,QWORD PTR [rsp]
  429f57:	jne    429f64 <isspace@plt+0x26654>
  429f59:	mov    rax,r14
  429f5c:	add    rsp,0x8
  429f60:	pop    rbx
  429f61:	pop    r14
  429f63:	ret    
  429f64:	call   403280 <__stack_chk_fail@plt>
  429f69:	nop    DWORD PTR [rax+0x0]
  429f70:	push   r14
  429f72:	push   rbx
  429f73:	push   rax
  429f74:	mov    r14,rsi
  429f77:	mov    rbx,rdi
  429f7a:	mov    rax,QWORD PTR fs:0x28
  429f83:	mov    QWORD PTR [rsp],rax
  429f87:	mov    esi,0x1
  429f8c:	xor    eax,eax
  429f8e:	call   4279b0 <isspace@plt+0x240a0>
  429f93:	mov    rdi,QWORD PTR [rbx+0x30]
  429f97:	lea    rdx,[rip+0x4b52]        # 42eaf0 <isspace@plt+0x2b1e0>
  429f9e:	mov    esi,0x4
  429fa3:	call   427210 <isspace@plt+0x23900>
  429fa8:	mov    rax,QWORD PTR [rbx+0x30]
  429fac:	mov    rdi,QWORD PTR [rax+0x18]
  429fb0:	mov    esi,0x40
  429fb5:	call   41b530 <isspace@plt+0x17c20>
  429fba:	mov    rax,QWORD PTR fs:0x28
  429fc3:	cmp    rax,QWORD PTR [rsp]
  429fc7:	jne    429fd4 <isspace@plt+0x266c4>
  429fc9:	mov    rax,r14
  429fcc:	add    rsp,0x8
  429fd0:	pop    rbx
  429fd1:	pop    r14
  429fd3:	ret    
  429fd4:	call   403280 <__stack_chk_fail@plt>
  429fd9:	nop    DWORD PTR [rax+0x0]
  429fe0:	push   r14
  429fe2:	push   rbx
  429fe3:	sub    rsp,0x28
  429fe7:	mov    rbx,rdi
  429fea:	mov    rax,QWORD PTR fs:0x28
  429ff3:	mov    QWORD PTR [rsp+0x20],rax
  429ff8:	lea    r14,[rsp+0x8]
  429ffd:	mov    rdi,r14
  42a000:	call   404230 <isspace@plt+0x920>
  42a005:	mov    esi,0x18
  42a00a:	mov    rdi,rbx
  42a00d:	call   403a50 <isspace@plt+0x140>
  42a012:	mov    rdi,rbx
  42a015:	mov    rsi,r14
  42a018:	call   403d80 <isspace@plt+0x470>
  42a01d:	mov    rcx,QWORD PTR fs:0x28
  42a026:	cmp    rcx,QWORD PTR [rsp+0x20]
  42a02b:	jne    42a035 <isspace@plt+0x26725>
  42a02d:	add    rsp,0x28
  42a031:	pop    rbx
  42a032:	pop    r14
  42a034:	ret    
  42a035:	call   403280 <__stack_chk_fail@plt>
  42a03a:	nop    WORD PTR [rax+rax*1+0x0]
  42a040:	push   r15
  42a042:	push   r14
  42a044:	push   rbx
  42a045:	sub    rsp,0x10
  42a049:	mov    rax,QWORD PTR fs:0x28
  42a052:	mov    QWORD PTR [rsp+0x8],rax
  42a057:	test   rdi,rdi
  42a05a:	je     42a093 <isspace@plt+0x26783>
  42a05c:	mov    r14,rdi
  42a05f:	call   403fd0 <isspace@plt+0x6c0>
  42a064:	test   rax,rax
  42a067:	je     42a08b <isspace@plt+0x2677b>
  42a069:	mov    r15,rax
  42a06c:	xor    ebx,ebx
  42a06e:	xchg   ax,ax
  42a070:	mov    rdi,r14
  42a073:	mov    rsi,rbx
  42a076:	call   403d30 <isspace@plt+0x420>
  42a07b:	mov    rdi,rax
  42a07e:	call   404540 <isspace@plt+0xc30>
  42a083:	inc    rbx
  42a086:	cmp    r15,rbx
  42a089:	jne    42a070 <isspace@plt+0x26760>
  42a08b:	mov    rdi,r14
  42a08e:	call   403b50 <isspace@plt+0x240>
  42a093:	mov    rax,QWORD PTR fs:0x28
  42a09c:	cmp    rax,QWORD PTR [rsp+0x8]
  42a0a1:	jne    42a0ad <isspace@plt+0x2679d>
  42a0a3:	add    rsp,0x10
  42a0a7:	pop    rbx
  42a0a8:	pop    r14
  42a0aa:	pop    r15
  42a0ac:	ret    
  42a0ad:	call   403280 <__stack_chk_fail@plt>
  42a0b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a0bc:	nop    DWORD PTR [rax+0x0]
  42a0c0:	push   rbp
  42a0c1:	mov    rbp,rsp
  42a0c4:	push   r15
  42a0c6:	push   r14
  42a0c8:	push   r13
  42a0ca:	push   r12
  42a0cc:	push   rbx
  42a0cd:	and    rsp,0xffffffffffffffe0
  42a0d1:	sub    rsp,0xa0
  42a0d8:	mov    r12,rcx
  42a0db:	mov    r15,rdx
  42a0de:	mov    rbx,rsi
  42a0e1:	mov    r14,rdi
  42a0e4:	mov    rax,QWORD PTR fs:0x28
  42a0ed:	mov    QWORD PTR [rsp+0x80],rax
  42a0f5:	test   rcx,rcx
  42a0f8:	je     42a102 <isspace@plt+0x267f2>
  42a0fa:	mov    QWORD PTR [r12],0x0
  42a102:	mov    eax,DWORD PTR [rbx+0x24]
  42a105:	cmp    eax,0x3
  42a108:	je     42a1a6 <isspace@plt+0x26896>
  42a10e:	cmp    eax,0x1
  42a111:	je     42a141 <isspace@plt+0x26831>
  42a113:	test   eax,eax
  42a115:	jne    42a2c1 <isspace@plt+0x269b1>
  42a11b:	mov    rdi,rbx
  42a11e:	mov    rsi,r15
  42a121:	call   403d30 <isspace@plt+0x420>
  42a126:	test   rax,rax
  42a129:	je     42a2c1 <isspace@plt+0x269b1>
  42a12f:	mov    rbx,rax
  42a132:	mov    rdi,rax
  42a135:	call   404380 <isspace@plt+0xa70>
  42a13a:	test   r12,r12
  42a13d:	jne    42a176 <isspace@plt+0x26866>
  42a13f:	jmp    42a182 <isspace@plt+0x26872>
  42a141:	xor    r14d,r14d
  42a144:	mov    rdi,rbx
  42a147:	xor    esi,esi
  42a149:	call   403d30 <isspace@plt+0x420>
  42a14e:	test   rax,rax
  42a151:	je     42a2c4 <isspace@plt+0x269b4>
  42a157:	mov    rbx,rax
  42a15a:	inc    r15
  42a15d:	lea    rsi,[rip+0x6da7]        # 430f0b <isspace@plt+0x2d5fb>
  42a164:	mov    rdi,rax
  42a167:	mov    rdx,r15
  42a16a:	xor    eax,eax
  42a16c:	call   404c50 <isspace@plt+0x1340>
  42a171:	test   r12,r12
  42a174:	je     42a182 <isspace@plt+0x26872>
  42a176:	mov    rdi,rbx
  42a179:	call   404d20 <isspace@plt+0x1410>
  42a17e:	mov    QWORD PTR [r12],rax
  42a182:	mov    rdi,rbx
  42a185:	call   404da0 <isspace@plt+0x1490>
  42a18a:	mov    rcx,QWORD PTR fs:0x28
  42a193:	cmp    rcx,QWORD PTR [rsp+0x80]
  42a19b:	je     42a2da <isspace@plt+0x269ca>
  42a1a1:	jmp    42a2e9 <isspace@plt+0x269d9>
  42a1a6:	vxorps xmm0,xmm0,xmm0
  42a1aa:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  42a1b0:	mov    QWORD PTR [rsp+0x60],0x0
  42a1b9:	lea    rax,[rip+0x7246]        # 431406 <isspace@plt+0x2daf6>
  42a1c0:	vmovq  xmm0,rax
  42a1c5:	lea    rax,[rip+0x722c]        # 4313f8 <isspace@plt+0x2dae8>
  42a1cc:	vmovq  xmm1,rax
  42a1d1:	vpunpcklqdq xmm0,xmm1,xmm0
  42a1d5:	vmovdqa XMMWORD PTR [rsp+0x40],xmm0
  42a1db:	lea    rax,[rip+0x722c]        # 43140e <isspace@plt+0x2dafe>
  42a1e2:	mov    QWORD PTR [rsp+0x50],rax
  42a1e7:	lea    r13,[rsp+0x28]
  42a1ec:	mov    rdi,r13
  42a1ef:	vzeroupper 
  42a1f2:	call   404230 <isspace@plt+0x920>
  42a1f7:	mov    rdi,rbx
  42a1fa:	mov    rsi,r15
  42a1fd:	call   403d30 <isspace@plt+0x420>
  42a202:	test   rax,rax
  42a205:	je     42a2c1 <isspace@plt+0x269b1>
  42a20b:	mov    r15,rax
  42a20e:	sub    rbx,r14
  42a211:	add    rbx,0xffffffffffffffc0
  42a215:	shr    rbx,0x3
  42a219:	imul   ebx,ebx,0xcccccccd
  42a21f:	mov    rdi,rax
  42a222:	call   404590 <isspace@plt+0xc80>
  42a227:	cmp    ebx,0xe
  42a22a:	lea    rax,[rip+0x71e9]        # 43141a <isspace@plt+0x2db0a>
  42a231:	lea    rcx,[rip+0x71c4]        # 4313fc <isspace@plt+0x2daec>
  42a238:	cmove  rcx,rax
  42a23c:	mov    QWORD PTR [rsp+0x58],rcx
  42a241:	mov    rax,QWORD PTR [r14+0x30]
  42a245:	mov    rsi,QWORD PTR [rax+0x10]
  42a249:	vpxor  xmm0,xmm0,xmm0
  42a24d:	vmovdqa XMMWORD PTR [rsp+0x10],xmm0
  42a253:	lea    r9,[rip+0x96]        # 42a2f0 <isspace@plt+0x269e0>
  42a25a:	lea    rdx,[rsp+0x10]
  42a25f:	lea    rcx,[rsp+0x40]
  42a264:	mov    rdi,r14
  42a267:	mov    r8,r15
  42a26a:	push   r9
  42a26c:	push   r13
  42a26e:	call   424c50 <isspace@plt+0x21340>
  42a273:	add    rsp,0x10
  42a277:	test   eax,eax
  42a279:	je     42a299 <isspace@plt+0x26989>
  42a27b:	lea    rdi,[rsp+0x28]
  42a280:	call   404da0 <isspace@plt+0x1490>
  42a285:	lea    rsi,[rip+0x55a6]        # 42f832 <isspace@plt+0x2bf22>
  42a28c:	mov    rdi,r14
  42a28f:	mov    rdx,rax
  42a292:	xor    eax,eax
  42a294:	call   4299f0 <isspace@plt+0x260e0>
  42a299:	lea    rdi,[rsp+0x28]
  42a29e:	call   404540 <isspace@plt+0xc30>
  42a2a3:	test   r12,r12
  42a2a6:	je     42a2b4 <isspace@plt+0x269a4>
  42a2a8:	mov    rdi,r15
  42a2ab:	call   404d20 <isspace@plt+0x1410>
  42a2b0:	mov    QWORD PTR [r12],rax
  42a2b4:	mov    rdi,r15
  42a2b7:	call   404da0 <isspace@plt+0x1490>
  42a2bc:	mov    r14,rax
  42a2bf:	jmp    42a2c4 <isspace@plt+0x269b4>
  42a2c1:	xor    r14d,r14d
  42a2c4:	mov    rax,QWORD PTR fs:0x28
  42a2cd:	cmp    rax,QWORD PTR [rsp+0x80]
  42a2d5:	jne    42a2e9 <isspace@plt+0x269d9>
  42a2d7:	mov    rax,r14
  42a2da:	lea    rsp,[rbp-0x28]
  42a2de:	pop    rbx
  42a2df:	pop    r12
  42a2e1:	pop    r13
  42a2e3:	pop    r14
  42a2e5:	pop    r15
  42a2e7:	pop    rbp
  42a2e8:	ret    
  42a2e9:	call   403280 <__stack_chk_fail@plt>
  42a2ee:	xchg   ax,ax
  42a2f0:	push   rbx
  42a2f1:	sub    rsp,0x10
  42a2f5:	mov    rbx,rdx
  42a2f8:	mov    rax,QWORD PTR fs:0x28
  42a301:	mov    QWORD PTR [rsp+0x8],rax
  42a306:	call   404460 <isspace@plt+0xb50>
  42a30b:	mov    rax,QWORD PTR fs:0x28
  42a314:	cmp    rax,QWORD PTR [rsp+0x8]
  42a319:	jne    42a324 <isspace@plt+0x26a14>
  42a31b:	mov    rax,rbx
  42a31e:	add    rsp,0x10
  42a322:	pop    rbx
  42a323:	ret    
  42a324:	call   403280 <__stack_chk_fail@plt>
  42a329:	nop    DWORD PTR [rax+0x0]
  42a330:	push   rax
  42a331:	mov    rcx,rdx
  42a334:	mov    rax,QWORD PTR fs:0x28
  42a33d:	mov    QWORD PTR [rsp],rax
  42a341:	xor    edx,edx
  42a343:	call   42a0c0 <isspace@plt+0x267b0>
  42a348:	mov    rcx,QWORD PTR fs:0x28
  42a351:	cmp    rcx,QWORD PTR [rsp]
  42a355:	jne    42a359 <isspace@plt+0x26a49>
  42a357:	pop    rcx
  42a358:	ret    
  42a359:	call   403280 <__stack_chk_fail@plt>
  42a35e:	xchg   ax,ax
  42a360:	push   r15
  42a362:	push   r14
  42a364:	push   r13
  42a366:	push   r12
  42a368:	push   rbx
  42a369:	sub    rsp,0x20
  42a36d:	mov    r14,rsi
  42a370:	mov    r15,rdi
  42a373:	mov    rax,QWORD PTR fs:0x28
  42a37c:	mov    QWORD PTR [rsp+0x18],rax
  42a381:	call   403d30 <isspace@plt+0x420>
  42a386:	test   rax,rax
  42a389:	je     42a3b3 <isspace@plt+0x26aa3>
  42a38b:	mov    r12,rax
  42a38e:	mov    rax,QWORD PTR fs:0x28
  42a397:	cmp    rax,QWORD PTR [rsp+0x18]
  42a39c:	jne    42a440 <isspace@plt+0x26b30>
  42a3a2:	mov    rax,r12
  42a3a5:	add    rsp,0x20
  42a3a9:	pop    rbx
  42a3aa:	pop    r12
  42a3ac:	pop    r13
  42a3ae:	pop    r14
  42a3b0:	pop    r15
  42a3b2:	ret    
  42a3b3:	mov    rdi,r15
  42a3b6:	mov    rsi,r14
  42a3b9:	call   404040 <isspace@plt+0x730>
  42a3be:	test   al,al
  42a3c0:	je     42a3d2 <isspace@plt+0x26ac2>
  42a3c2:	mov    rdi,r15
  42a3c5:	mov    rsi,r14
  42a3c8:	call   403d30 <isspace@plt+0x420>
  42a3cd:	test   rax,rax
  42a3d0:	jne    42a38b <isspace@plt+0x26a7b>
  42a3d2:	mov    rbx,rsp
  42a3d5:	mov    rdi,rbx
  42a3d8:	call   404230 <isspace@plt+0x920>
  42a3dd:	mov    rdi,r15
  42a3e0:	mov    rsi,rbx
  42a3e3:	call   403d80 <isspace@plt+0x470>
  42a3e8:	test   al,al
  42a3ea:	je     42a438 <isspace@plt+0x26b28>
  42a3ec:	mov    rdi,r15
  42a3ef:	call   403fd0 <isspace@plt+0x6c0>
  42a3f4:	mov    rbx,rax
  42a3f7:	mov    rdi,r15
  42a3fa:	call   403fa0 <isspace@plt+0x690>
  42a3ff:	cmp    rax,rbx
  42a402:	jae    42a428 <isspace@plt+0x26b18>
  42a404:	sub    rbx,rax
  42a407:	mov    r13,rsp
  42a40a:	xor    r12d,r12d
  42a40d:	nop    DWORD PTR [rax]
  42a410:	mov    rdi,r15
  42a413:	mov    rsi,r13
  42a416:	call   403d80 <isspace@plt+0x470>
  42a41b:	test   al,al
  42a41d:	je     42a38e <isspace@plt+0x26a7e>
  42a423:	dec    rbx
  42a426:	jne    42a410 <isspace@plt+0x26b00>
  42a428:	mov    rdi,r15
  42a42b:	mov    rsi,r14
  42a42e:	call   403d30 <isspace@plt+0x420>
  42a433:	jmp    42a38b <isspace@plt+0x26a7b>
  42a438:	xor    r12d,r12d
  42a43b:	jmp    42a38e <isspace@plt+0x26a7e>
  42a440:	call   403280 <__stack_chk_fail@plt>
  42a445:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a44f:	nop
  42a450:	push   rax
  42a451:	mov    rax,QWORD PTR fs:0x28
  42a45a:	mov    QWORD PTR [rsp],rax
  42a45e:	call   404000 <isspace@plt+0x6f0>
  42a463:	mov    rcx,QWORD PTR fs:0x28
  42a46c:	cmp    rcx,QWORD PTR [rsp]
  42a470:	jne    42a474 <isspace@plt+0x26b64>
  42a472:	pop    rcx
  42a473:	ret    
  42a474:	call   403280 <__stack_chk_fail@plt>
  42a479:	nop    DWORD PTR [rax+0x0]
  42a480:	push   r15
  42a482:	push   r14
  42a484:	push   rbx
  42a485:	sub    rsp,0x10
  42a489:	mov    rbx,rdx
  42a48c:	mov    r14,rsi
  42a48f:	mov    rax,QWORD PTR fs:0x28
  42a498:	mov    QWORD PTR [rsp+0x8],rax
  42a49d:	mov    rdi,rdx
  42a4a0:	call   403250 <strlen@plt>
  42a4a5:	cmp    DWORD PTR [r14+0x24],0x0
  42a4aa:	je     42a4c8 <isspace@plt+0x26bb8>
  42a4ac:	mov    rax,QWORD PTR fs:0x28
  42a4b5:	cmp    rax,QWORD PTR [rsp+0x8]
  42a4ba:	jne    42a50c <isspace@plt+0x26bfc>
  42a4bc:	xor    eax,eax
  42a4be:	add    rsp,0x10
  42a4c2:	pop    rbx
  42a4c3:	pop    r14
  42a4c5:	pop    r15
  42a4c7:	ret    
  42a4c8:	mov    r15,rax
  42a4cb:	mov    rdi,r14
  42a4ce:	xor    esi,esi
  42a4d0:	call   42a360 <isspace@plt+0x26a50>
  42a4d5:	test   rax,rax
  42a4d8:	je     42a4ac <isspace@plt+0x26b9c>
  42a4da:	inc    r15
  42a4dd:	mov    rdi,rax
  42a4e0:	mov    rsi,rbx
  42a4e3:	mov    rdx,r15
  42a4e6:	call   4045c0 <isspace@plt+0xcb0>
  42a4eb:	test   al,al
  42a4ed:	je     42a4ac <isspace@plt+0x26b9c>
  42a4ef:	mov    esi,0x1
  42a4f4:	mov    rdi,r14
  42a4f7:	call   404000 <isspace@plt+0x6f0>
  42a4fc:	mov    rcx,QWORD PTR fs:0x28
  42a505:	cmp    rcx,QWORD PTR [rsp+0x8]
  42a50a:	je     42a4be <isspace@plt+0x26bae>
  42a50c:	call   403280 <__stack_chk_fail@plt>
  42a511:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a51b:	nop    DWORD PTR [rax+rax*1+0x0]
  42a520:	push   rbp
  42a521:	push   r15
  42a523:	push   r14
  42a525:	push   rbx
  42a526:	sub    rsp,0x58
  42a52a:	mov    r15,r8
  42a52d:	mov    r14,rcx
  42a530:	mov    rax,QWORD PTR fs:0x28
  42a539:	mov    QWORD PTR [rsp+0x50],rax
  42a53e:	cmp    BYTE PTR [rsi+0x21],0x0
  42a542:	mov    eax,DWORD PTR [rsi+0x24]
  42a545:	je     42a572 <isspace@plt+0x26c62>
  42a547:	test   eax,eax
  42a549:	je     42a5d6 <isspace@plt+0x26cc6>
  42a54f:	xor    ebp,ebp
  42a551:	mov    rax,QWORD PTR fs:0x28
  42a55a:	cmp    rax,QWORD PTR [rsp+0x50]
  42a55f:	jne    42a75d <isspace@plt+0x26e4d>
  42a565:	mov    eax,ebp
  42a567:	add    rsp,0x58
  42a56b:	pop    rbx
  42a56c:	pop    r14
  42a56e:	pop    r15
  42a570:	pop    rbp
  42a571:	ret    
  42a572:	cmp    eax,0x3
  42a575:	je     42a63d <isspace@plt+0x26d2d>
  42a57b:	cmp    eax,0x2
  42a57e:	je     42a716 <isspace@plt+0x26e06>
  42a584:	test   eax,eax
  42a586:	jne    42a54f <isspace@plt+0x26c3f>
  42a588:	mov    rdi,rsi
  42a58b:	mov    rsi,rdx
  42a58e:	call   42a360 <isspace@plt+0x26a50>
  42a593:	test   rax,rax
  42a596:	je     42a54f <isspace@plt+0x26c3f>
  42a598:	mov    rbx,rax
  42a59b:	mov    rdi,r15
  42a59e:	call   417020 <isspace@plt+0x13710>
  42a5a3:	cmp    rax,0xffffffffffffffff
  42a5a7:	je     42a54f <isspace@plt+0x26c3f>
  42a5a9:	mov    rbp,rax
  42a5ac:	lea    rsi,[rax+0x1]
  42a5b0:	mov    rdi,rbx
  42a5b3:	call   404270 <isspace@plt+0x960>
  42a5b8:	test   al,al
  42a5ba:	je     42a54f <isspace@plt+0x26c3f>
  42a5bc:	mov    rsi,QWORD PTR [r15]
  42a5bf:	mov    rcx,QWORD PTR [rbx]
  42a5c2:	mov    rdi,r14
  42a5c5:	mov    rdx,rbp
  42a5c8:	call   411130 <isspace@plt+0xd820>
  42a5cd:	mov    QWORD PTR [rbx+0x8],rax
  42a5d1:	jmp    42a735 <isspace@plt+0x26e25>
  42a5d6:	mov    rdi,rsi
  42a5d9:	mov    rsi,rdx
  42a5dc:	call   42a360 <isspace@plt+0x26a50>
  42a5e1:	test   rax,rax
  42a5e4:	je     42a54f <isspace@plt+0x26c3f>
  42a5ea:	mov    rbx,rax
  42a5ed:	mov    rdi,r15
  42a5f0:	call   417020 <isspace@plt+0x13710>
  42a5f5:	cmp    rax,0xffffffffffffffff
  42a5f9:	je     42a54f <isspace@plt+0x26c3f>
  42a5ff:	mov    rbp,rax
  42a602:	lea    rsi,[rax+0x1]
  42a606:	mov    rdi,rbx
  42a609:	call   4042f0 <isspace@plt+0x9e0>
  42a60e:	test   al,al
  42a610:	je     42a54f <isspace@plt+0x26c3f>
  42a616:	mov    rcx,QWORD PTR [rbx]
  42a619:	mov    rax,QWORD PTR [rbx+0x8]
  42a61d:	test   rax,rax
  42a620:	je     42a71e <isspace@plt+0x26e0e>
  42a626:	cmp    BYTE PTR [rcx+rax*1-0x1],0x0
  42a62b:	jne    42a720 <isspace@plt+0x26e10>
  42a631:	dec    rax
  42a634:	mov    QWORD PTR [rbx+0x8],rax
  42a638:	jmp    42a720 <isspace@plt+0x26e10>
  42a63d:	mov    rbx,rdi
  42a640:	mov    QWORD PTR [rsp+0x40],0x0
  42a649:	lea    rax,[rip+0x6dd2]        # 431422 <isspace@plt+0x2db12>
  42a650:	vmovq  xmm0,rax
  42a655:	lea    rax,[rip+0x6d9c]        # 4313f8 <isspace@plt+0x2dae8>
  42a65c:	vmovq  xmm1,rax
  42a661:	vpunpcklqdq xmm0,xmm1,xmm0
  42a665:	vmovdqa XMMWORD PTR [rsp+0x20],xmm0
  42a66b:	lea    rax,[rip+0x6d9c]        # 43140e <isspace@plt+0x2dafe>
  42a672:	mov    QWORD PTR [rsp+0x30],rax
  42a677:	sub    rsi,rdi
  42a67a:	add    rsi,0xffffffffffffffc0
  42a67e:	shr    rsi,0x3
  42a682:	imul   ebp,esi,0xcccccccd
  42a688:	lea    r14,[rsp+0x8]
  42a68d:	mov    rdi,r14
  42a690:	call   404230 <isspace@plt+0x920>
  42a695:	cmp    ebp,0xe
  42a698:	lea    rax,[rip+0x6d7b]        # 43141a <isspace@plt+0x2db0a>
  42a69f:	lea    rcx,[rip+0x6d56]        # 4313fc <isspace@plt+0x2daec>
  42a6a6:	cmove  rcx,rax
  42a6aa:	mov    QWORD PTR [rsp+0x38],rcx
  42a6af:	mov    rax,QWORD PTR [rbx+0x30]
  42a6b3:	mov    rsi,QWORD PTR [rax+0x10]
  42a6b7:	lea    rax,[rip+0xfffffffffffffc32]        # 42a2f0 <isspace@plt+0x269e0>
  42a6be:	lea    rcx,[rsp+0x20]
  42a6c3:	mov    rdi,rbx
  42a6c6:	mov    rdx,r15
  42a6c9:	mov    r8d,0x0
  42a6cf:	mov    r9d,0x0
  42a6d5:	push   rax
  42a6d6:	push   r14
  42a6d8:	call   424c50 <isspace@plt+0x21340>
  42a6dd:	add    rsp,0x10
  42a6e1:	test   eax,eax
  42a6e3:	sete   bpl
  42a6e7:	je     42a707 <isspace@plt+0x26df7>
  42a6e9:	lea    rdi,[rsp+0x8]
  42a6ee:	call   404da0 <isspace@plt+0x1490>
  42a6f3:	lea    rsi,[rip+0x5138]        # 42f832 <isspace@plt+0x2bf22>
  42a6fa:	mov    rdi,rbx
  42a6fd:	mov    rdx,rax
  42a700:	xor    eax,eax
  42a702:	call   4299f0 <isspace@plt+0x260e0>
  42a707:	lea    rdi,[rsp+0x8]
  42a70c:	call   404540 <isspace@plt+0xc30>
  42a711:	jmp    42a551 <isspace@plt+0x26c41>
  42a716:	mov    bpl,0x1
  42a719:	jmp    42a551 <isspace@plt+0x26c41>
  42a71e:	xor    eax,eax
  42a720:	mov    rsi,QWORD PTR [r15]
  42a723:	add    rcx,rax
  42a726:	mov    rdi,r14
  42a729:	mov    rdx,rbp
  42a72c:	call   411130 <isspace@plt+0xd820>
  42a731:	add    QWORD PTR [rbx+0x8],rax
  42a735:	lea    rsi,[rip+0x6ee9]        # 431625 <isspace@plt+0x2dd15>
  42a73c:	mov    edx,0x1
  42a741:	mov    rdi,rbx
  42a744:	call   404460 <isspace@plt+0xb50>
  42a749:	mov    rcx,QWORD PTR fs:0x28
  42a752:	cmp    rcx,QWORD PTR [rsp+0x50]
  42a757:	je     42a567 <isspace@plt+0x26c57>
  42a75d:	call   403280 <__stack_chk_fail@plt>
  42a762:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a76c:	nop    DWORD PTR [rax+0x0]
  42a770:	push   rbx
  42a771:	sub    rsp,0x10
  42a775:	mov    r8,rcx
  42a778:	mov    rcx,rdx
  42a77b:	mov    rbx,rsi
  42a77e:	mov    rax,QWORD PTR fs:0x28
  42a787:	mov    QWORD PTR [rsp+0x8],rax
  42a78c:	xor    edx,edx
  42a78e:	call   42a520 <isspace@plt+0x26c10>
  42a793:	test   al,al
  42a795:	je     42a7b6 <isspace@plt+0x26ea6>
  42a797:	mov    esi,0x1
  42a79c:	mov    rdi,rbx
  42a79f:	call   404000 <isspace@plt+0x6f0>
  42a7a4:	mov    rcx,QWORD PTR fs:0x28
  42a7ad:	cmp    rcx,QWORD PTR [rsp+0x8]
  42a7b2:	je     42a7c8 <isspace@plt+0x26eb8>
  42a7b4:	jmp    42a7ce <isspace@plt+0x26ebe>
  42a7b6:	mov    rax,QWORD PTR fs:0x28
  42a7bf:	cmp    rax,QWORD PTR [rsp+0x8]
  42a7c4:	jne    42a7ce <isspace@plt+0x26ebe>
  42a7c6:	xor    eax,eax
  42a7c8:	add    rsp,0x10
  42a7cc:	pop    rbx
  42a7cd:	ret    
  42a7ce:	call   403280 <__stack_chk_fail@plt>
  42a7d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a7dd:	nop    DWORD PTR [rax]
  42a7e0:	push   rax
  42a7e1:	mov    rax,QWORD PTR fs:0x28
  42a7ea:	mov    QWORD PTR [rsp],rax
  42a7ee:	cmp    DWORD PTR [rsi+0x24],0x1
  42a7f2:	jne    42a80a <isspace@plt+0x26efa>
  42a7f4:	mov    rax,QWORD PTR [rdi+0x30]
  42a7f8:	test   rax,rax
  42a7fb:	je     42a823 <isspace@plt+0x26f13>
  42a7fd:	mov    rdi,QWORD PTR [rax+0x18]
  42a801:	call   41ea70 <isspace@plt+0x1b160>
  42a806:	cdqe   
  42a808:	jmp    42a825 <isspace@plt+0x26f15>
  42a80a:	mov    rdi,rsi
  42a80d:	call   403fa0 <isspace@plt+0x690>
  42a812:	mov    rcx,QWORD PTR fs:0x28
  42a81b:	cmp    rcx,QWORD PTR [rsp]
  42a81f:	jne    42a836 <isspace@plt+0x26f26>
  42a821:	pop    rcx
  42a822:	ret    
  42a823:	xor    eax,eax
  42a825:	mov    rcx,QWORD PTR fs:0x28
  42a82e:	cmp    rcx,QWORD PTR [rsp]
  42a832:	jne    42a836 <isspace@plt+0x26f26>
  42a834:	pop    rcx
  42a835:	ret    
  42a836:	call   403280 <__stack_chk_fail@plt>
  42a83b:	nop    DWORD PTR [rax+rax*1+0x0]
  42a840:	push   rax
  42a841:	mov    rax,QWORD PTR fs:0x28
  42a84a:	mov    QWORD PTR [rsp],rax
  42a84e:	mov    eax,0x4b
  42a853:	cmp    sil,0x40
  42a857:	je     42a871 <isspace@plt+0x26f61>
  42a859:	lea    eax,[rsi-0x61]
  42a85c:	cmp    al,0x19
  42a85e:	ja     42a865 <isspace@plt+0x26f55>
  42a860:	add    esi,0xffffffb3
  42a863:	jmp    42a86f <isspace@plt+0x26f5f>
  42a865:	lea    eax,[rsi-0x41]
  42a868:	cmp    al,0x1a
  42a86a:	jae    42a886 <isspace@plt+0x26f76>
  42a86c:	add    esi,0xfffffff0
  42a86f:	mov    eax,esi
  42a871:	mov    rcx,QWORD PTR fs:0x28
  42a87a:	cmp    rcx,QWORD PTR [rsp]
  42a87e:	jne    42a94a <isspace@plt+0x2703a>
  42a884:	pop    rcx
  42a885:	ret    
  42a886:	lea    ecx,[rsi-0x21]
  42a889:	cmp    cl,0x3e
  42a88c:	ja     42a8b1 <isspace@plt+0x26fa1>
  42a88e:	xor    eax,eax
  42a890:	movzx  ecx,cl
  42a893:	lea    rdx,[rip+0x6a62]        # 4312fc <isspace@plt+0x2d9ec>
  42a89a:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  42a89e:	add    rcx,rdx
  42a8a1:	jmp    rcx
  42a8a3:	mov    eax,0x12
  42a8a8:	jmp    42a871 <isspace@plt+0x26f61>
  42a8aa:	mov    eax,0x13
  42a8af:	jmp    42a871 <isspace@plt+0x26f61>
  42a8b1:	mov    eax,0x30
  42a8b6:	jmp    42a871 <isspace@plt+0x26f61>
  42a8b8:	mov    eax,0xd
  42a8bd:	jmp    42a871 <isspace@plt+0x26f61>
  42a8bf:	mov    eax,0xf
  42a8c4:	jmp    42a871 <isspace@plt+0x26f61>
  42a8c6:	mov    eax,0x10
  42a8cb:	jmp    42a871 <isspace@plt+0x26f61>
  42a8cd:	mov    eax,0x4
  42a8d2:	jmp    42a871 <isspace@plt+0x26f61>
  42a8d4:	mov    eax,0x5
  42a8d9:	jmp    42a871 <isspace@plt+0x26f61>
  42a8db:	mov    eax,0x6
  42a8e0:	jmp    42a871 <isspace@plt+0x26f61>
  42a8e2:	mov    eax,0x7
  42a8e7:	jmp    42a871 <isspace@plt+0x26f61>
  42a8e9:	mov    eax,0x8
  42a8ee:	jmp    42a871 <isspace@plt+0x26f61>
  42a8f0:	mov    eax,0x9
  42a8f5:	jmp    42a871 <isspace@plt+0x26f61>
  42a8fa:	mov    eax,0x11
  42a8ff:	jmp    42a871 <isspace@plt+0x26f61>
  42a904:	mov    eax,0xc
  42a909:	jmp    42a871 <isspace@plt+0x26f61>
  42a90e:	mov    eax,0x2
  42a913:	jmp    42a871 <isspace@plt+0x26f61>
  42a918:	mov    eax,0xe
  42a91d:	jmp    42a871 <isspace@plt+0x26f61>
  42a922:	mov    eax,0x1
  42a927:	jmp    42a871 <isspace@plt+0x26f61>
  42a92c:	mov    eax,0x3
  42a931:	jmp    42a871 <isspace@plt+0x26f61>
  42a936:	mov    eax,0xa
  42a93b:	jmp    42a871 <isspace@plt+0x26f61>
  42a940:	mov    eax,0xb
  42a945:	jmp    42a871 <isspace@plt+0x26f61>
  42a94a:	call   403280 <__stack_chk_fail@plt>
  42a94f:	nop
  42a950:	push   rax
  42a951:	mov    rax,QWORD PTR fs:0x28
  42a95a:	mov    QWORD PTR [rsp],rax
  42a95e:	lea    eax,[rsi-0x31]
  42a961:	cmp    eax,0x19
  42a964:	ja     42a96d <isspace@plt+0x2705d>
  42a966:	add    esi,0xffffffe3
  42a969:	mov    al,0x1
  42a96b:	jmp    42a974 <isspace@plt+0x27064>
  42a96d:	cmp    esi,0x2f
  42a970:	ja     42a98d <isspace@plt+0x2707d>
  42a972:	xor    eax,eax
  42a974:	mov    ecx,esi
  42a976:	lea    rcx,[rcx+rcx*4]
  42a97a:	lea    rdx,[rdi+rcx*8]
  42a97e:	add    rdx,0x40
  42a982:	mov    QWORD PTR [rdi+0x940],rdx
  42a989:	mov    BYTE PTR [rdi+rcx*8+0x61],al
  42a98d:	mov    rax,QWORD PTR fs:0x28
  42a996:	cmp    rax,QWORD PTR [rsp]
  42a99a:	jne    42a99e <isspace@plt+0x2708e>
  42a99c:	pop    rax
  42a99d:	ret    
  42a99e:	call   403280 <__stack_chk_fail@plt>
  42a9a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a9ad:	nop    DWORD PTR [rax]
  42a9b0:	push   rax
  42a9b1:	mov    rax,QWORD PTR fs:0x28
  42a9ba:	mov    QWORD PTR [rsp],rax
  42a9be:	mov    rax,QWORD PTR [rdi+0x940]
  42a9c5:	test   rax,rax
  42a9c8:	je     42a9dd <isspace@plt+0x270cd>
  42a9ca:	sub    rax,rdi
  42a9cd:	add    rax,0xffffffffffffffc0
  42a9d1:	shr    rax,0x3
  42a9d5:	imul   eax,eax,0xcccccccd
  42a9db:	jmp    42a9df <isspace@plt+0x270cf>
  42a9dd:	xor    eax,eax
  42a9df:	mov    rcx,QWORD PTR fs:0x28
  42a9e8:	cmp    rcx,QWORD PTR [rsp]
  42a9ec:	jne    42a9f0 <isspace@plt+0x270e0>
  42a9ee:	pop    rcx
  42a9ef:	ret    
  42a9f0:	call   403280 <__stack_chk_fail@plt>
  42a9f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a9ff:	nop
  42aa00:	push   rbx
  42aa01:	sub    rsp,0x10
  42aa05:	mov    rbx,rdi
  42aa08:	mov    rax,QWORD PTR fs:0x28
  42aa11:	mov    QWORD PTR [rsp+0x8],rax
  42aa16:	cmp    esi,0x19
  42aa19:	ja     42aa35 <isspace@plt+0x27125>
  42aa1b:	mov    eax,esi
  42aa1d:	lea    rax,[rax+rax*4]
  42aa21:	shl    rax,0x3
  42aa25:	add    rax,QWORD PTR [rip+0x17574]        # 441fa0 <isspace@plt+0x3e690>
  42aa2c:	mov    QWORD PTR [rbx+0x930],rax
  42aa33:	jmp    42aa50 <isspace@plt+0x27140>
  42aa35:	lea    rdi,[rbx+0xb20]
  42aa3c:	add    esi,0xffffffe6
  42aa3f:	call   403c70 <isspace@plt+0x360>
  42aa44:	mov    QWORD PTR [rbx+0x930],rax
  42aa4b:	test   rax,rax
  42aa4e:	je     42aa70 <isspace@plt+0x27160>
  42aa50:	mov    rdi,rbx
  42aa53:	call   4222e0 <isspace@plt+0x1e9d0>
  42aa58:	mov    al,0x1
  42aa5a:	mov    rcx,QWORD PTR fs:0x28
  42aa63:	cmp    rcx,QWORD PTR [rsp+0x8]
  42aa68:	jne    42aa74 <isspace@plt+0x27164>
  42aa6a:	add    rsp,0x10
  42aa6e:	pop    rbx
  42aa6f:	ret    
  42aa70:	xor    eax,eax
  42aa72:	jmp    42aa5a <isspace@plt+0x2714a>
  42aa74:	call   403280 <__stack_chk_fail@plt>
  42aa79:	nop    DWORD PTR [rax+0x0]
  42aa80:	push   rax
  42aa81:	mov    rax,QWORD PTR fs:0x28
  42aa8a:	mov    QWORD PTR [rsp],rax
  42aa8e:	mov    edx,0x22
  42aa93:	call   42ac30 <isspace@plt+0x27320>
  42aa98:	mov    rcx,QWORD PTR fs:0x28
  42aaa1:	cmp    rcx,QWORD PTR [rsp]
  42aaa5:	jne    42aaa9 <isspace@plt+0x27199>
  42aaa7:	pop    rcx
  42aaa8:	ret    
  42aaa9:	call   403280 <__stack_chk_fail@plt>
  42aaae:	xchg   ax,ax
  42aab0:	push   rax
  42aab1:	mov    rax,QWORD PTR fs:0x28
  42aaba:	mov    QWORD PTR [rsp],rax
  42aabe:	mov    edx,0x27
  42aac3:	call   42ac30 <isspace@plt+0x27320>
  42aac8:	mov    rcx,QWORD PTR fs:0x28
  42aad1:	cmp    rcx,QWORD PTR [rsp]
  42aad5:	jne    42aad9 <isspace@plt+0x271c9>
  42aad7:	pop    rcx
  42aad8:	ret    
  42aad9:	call   403280 <__stack_chk_fail@plt>
  42aade:	xchg   ax,ax
  42aae0:	push   rax
  42aae1:	mov    rax,QWORD PTR fs:0x28
  42aaea:	mov    QWORD PTR [rsp],rax
  42aaee:	mov    edx,0x60
  42aaf3:	call   42ac30 <isspace@plt+0x27320>
  42aaf8:	mov    rcx,QWORD PTR fs:0x28
  42ab01:	cmp    rcx,QWORD PTR [rsp]
  42ab05:	jne    42ab09 <isspace@plt+0x271f9>
  42ab07:	pop    rcx
  42ab08:	ret    
  42ab09:	call   403280 <__stack_chk_fail@plt>
  42ab0e:	xchg   ax,ax
  42ab10:	push   r15
  42ab12:	push   r14
  42ab14:	push   r13
  42ab16:	push   r12
  42ab18:	push   rbx
  42ab19:	sub    rsp,0x10
  42ab1d:	mov    r12,rdx
  42ab20:	mov    r13,rsi
  42ab23:	mov    rbx,rdi
  42ab26:	mov    rax,QWORD PTR fs:0x28
  42ab2f:	mov    QWORD PTR [rsp+0x8],rax
  42ab34:	call   417080 <isspace@plt+0x13770>
  42ab39:	mov    r14,rax
  42ab3c:	mov    r15,rdx
  42ab3f:	mov    rdi,rbx
  42ab42:	xor    esi,esi
  42ab44:	call   424ba0 <isspace@plt+0x21290>
  42ab49:	mov    rbx,rax
  42ab4c:	test   rax,rax
  42ab4f:	je     42ab65 <isspace@plt+0x27255>
  42ab51:	mov    rdi,r13
  42ab54:	mov    rsi,r12
  42ab57:	mov    rdx,rbx
  42ab5a:	call   416b70 <isspace@plt+0x13260>
  42ab5f:	mov    r14,rax
  42ab62:	mov    r15,rdx
  42ab65:	mov    rdi,rbx
  42ab68:	call   42ae70 <isspace@plt+0x27560>
  42ab6d:	mov    rax,QWORD PTR fs:0x28
  42ab76:	cmp    rax,QWORD PTR [rsp+0x8]
  42ab7b:	jne    42ab91 <isspace@plt+0x27281>
  42ab7d:	mov    rax,r14
  42ab80:	mov    rdx,r15
  42ab83:	add    rsp,0x10
  42ab87:	pop    rbx
  42ab88:	pop    r12
  42ab8a:	pop    r13
  42ab8c:	pop    r14
  42ab8e:	pop    r15
  42ab90:	ret    
  42ab91:	call   403280 <__stack_chk_fail@plt>
  42ab96:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42aba0:	push   r15
  42aba2:	push   r14
  42aba4:	push   r13
  42aba6:	push   r12
  42aba8:	push   rbx
  42aba9:	sub    rsp,0x10
  42abad:	mov    r12,rdx
  42abb0:	mov    r13,rsi
  42abb3:	mov    rbx,rdi
  42abb6:	mov    rax,QWORD PTR fs:0x28
  42abbf:	mov    QWORD PTR [rsp+0x8],rax
  42abc4:	call   417080 <isspace@plt+0x13770>
  42abc9:	mov    r14,rax
  42abcc:	mov    r15,rdx
  42abcf:	mov    rdi,rbx
  42abd2:	xor    esi,esi
  42abd4:	call   424ba0 <isspace@plt+0x21290>
  42abd9:	mov    rbx,rax
  42abdc:	test   rax,rax
  42abdf:	je     42abf5 <isspace@plt+0x272e5>
  42abe1:	mov    rdi,r13
  42abe4:	mov    rsi,r12
  42abe7:	mov    rdx,rbx
  42abea:	call   416c00 <isspace@plt+0x132f0>
  42abef:	mov    r14,rax
  42abf2:	mov    r15,rdx
  42abf5:	mov    rdi,rbx
  42abf8:	call   42ae70 <isspace@plt+0x27560>
  42abfd:	mov    rax,QWORD PTR fs:0x28
  42ac06:	cmp    rax,QWORD PTR [rsp+0x8]
  42ac0b:	jne    42ac21 <isspace@plt+0x27311>
  42ac0d:	mov    rax,r14
  42ac10:	mov    rdx,r15
  42ac13:	add    rsp,0x10
  42ac17:	pop    rbx
  42ac18:	pop    r12
  42ac1a:	pop    r13
  42ac1c:	pop    r14
  42ac1e:	pop    r15
  42ac20:	ret    
  42ac21:	call   403280 <__stack_chk_fail@plt>
  42ac26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ac30:	push   rbp
  42ac31:	push   r15
  42ac33:	push   r14
  42ac35:	push   r12
  42ac37:	push   rbx
  42ac38:	sub    rsp,0x60
  42ac3c:	mov    ebp,edx
  42ac3e:	mov    r15,rsi
  42ac41:	mov    r14,rdi
  42ac44:	mov    rax,QWORD PTR fs:0x28
  42ac4d:	mov    QWORD PTR [rsp+0x58],rax
  42ac52:	lea    rdi,[rsp+0x28]
  42ac57:	mov    rsi,r14
  42ac5a:	mov    rdx,r15
  42ac5d:	call   410570 <isspace@plt+0xcc60>
  42ac62:	mov    rax,QWORD PTR [rsp+0x48]
  42ac67:	mov    QWORD PTR [rsp+0x20],rax
  42ac6c:	vmovups ymm0,YMMWORD PTR [rsp+0x28]
  42ac72:	vmovups YMMWORD PTR [rsp],ymm0
  42ac77:	mov    rdi,rsp
  42ac7a:	lea    rsi,[rsp+0x57]
  42ac7f:	vzeroupper 
  42ac82:	call   412400 <isspace@plt+0xeaf0>
  42ac87:	test   al,al
  42ac89:	je     42acc7 <isspace@plt+0x273b7>
  42ac8b:	mov    al,BYTE PTR [rsp+0x57]
  42ac8f:	cmp    al,0xa
  42ac91:	je     42acc7 <isspace@plt+0x273b7>
  42ac93:	mov    rbx,rsp
  42ac96:	lea    r12,[rsp+0x57]
  42ac9b:	nop    DWORD PTR [rax+rax*1+0x0]
  42aca0:	cmp    al,bpl
  42aca3:	je     42ad1e <isspace@plt+0x2740e>
  42aca5:	mov    rdi,rbx
  42aca8:	xor    esi,esi
  42acaa:	call   412540 <isspace@plt+0xec30>
  42acaf:	mov    rdi,rbx
  42acb2:	mov    rsi,r12
  42acb5:	call   412400 <isspace@plt+0xeaf0>
  42acba:	test   al,al
  42acbc:	je     42acc7 <isspace@plt+0x273b7>
  42acbe:	movzx  eax,BYTE PTR [rsp+0x57]
  42acc3:	cmp    al,0xa
  42acc5:	jne    42aca0 <isspace@plt+0x27390>
  42acc7:	lea    rdi,[rsp+0x28]
  42accc:	lea    rsi,[rsp+0x57]
  42acd1:	call   412400 <isspace@plt+0xeaf0>
  42acd6:	test   al,al
  42acd8:	je     42ad1e <isspace@plt+0x2740e>
  42acda:	mov    al,BYTE PTR [rsp+0x57]
  42acde:	cmp    al,0xa
  42ace0:	je     42ad1e <isspace@plt+0x2740e>
  42ace2:	lea    rbx,[rsp+0x28]
  42ace7:	lea    r12,[rsp+0x57]
  42acec:	nop    DWORD PTR [rax+0x0]
  42acf0:	cmp    al,bpl
  42acf3:	je     42ad19 <isspace@plt+0x27409>
  42acf5:	mov    rdi,rbx
  42acf8:	xor    esi,esi
  42acfa:	call   412480 <isspace@plt+0xeb70>
  42acff:	mov    rdi,rbx
  42ad02:	mov    rsi,r12
  42ad05:	call   412400 <isspace@plt+0xeaf0>
  42ad0a:	test   al,al
  42ad0c:	je     42ad1e <isspace@plt+0x2740e>
  42ad0e:	movzx  eax,BYTE PTR [rsp+0x57]
  42ad13:	cmp    al,0xa
  42ad15:	jne    42acf0 <isspace@plt+0x273e0>
  42ad17:	jmp    42ad1e <isspace@plt+0x2740e>
  42ad19:	mov    r15,QWORD PTR [rsp+0x48]
  42ad1e:	movsx  eax,bpl
  42ad22:	cmp    eax,0x60
  42ad25:	je     42ad4b <isspace@plt+0x2743b>
  42ad27:	cmp    eax,0x27
  42ad2a:	je     42ad3e <isspace@plt+0x2742e>
  42ad2c:	cmp    eax,0x22
  42ad2f:	jne    42ad58 <isspace@plt+0x27448>
  42ad31:	mov    rdi,r14
  42ad34:	mov    rsi,r15
  42ad37:	call   416ae0 <isspace@plt+0x131d0>
  42ad3c:	jmp    42ad5d <isspace@plt+0x2744d>
  42ad3e:	mov    rdi,r14
  42ad41:	mov    rsi,r15
  42ad44:	call   416b10 <isspace@plt+0x13200>
  42ad49:	jmp    42ad5d <isspace@plt+0x2744d>
  42ad4b:	mov    rdi,r14
  42ad4e:	mov    rsi,r15
  42ad51:	call   416b40 <isspace@plt+0x13230>
  42ad56:	jmp    42ad5d <isspace@plt+0x2744d>
  42ad58:	call   417080 <isspace@plt+0x13770>
  42ad5d:	mov    rcx,QWORD PTR fs:0x28
  42ad66:	cmp    rcx,QWORD PTR [rsp+0x58]
  42ad6b:	jne    42ad7a <isspace@plt+0x2746a>
  42ad6d:	add    rsp,0x60
  42ad71:	pop    rbx
  42ad72:	pop    r12
  42ad74:	pop    r14
  42ad76:	pop    r15
  42ad78:	pop    rbp
  42ad79:	ret    
  42ad7a:	call   403280 <__stack_chk_fail@plt>
  42ad7f:	nop
  42ad80:	push   rbx
  42ad81:	sub    rsp,0x10
  42ad85:	mov    rax,QWORD PTR fs:0x28
  42ad8e:	mov    QWORD PTR [rsp+0x8],rax
  42ad93:	mov    edi,0x1
  42ad98:	mov    esi,0x40
  42ad9d:	call   403460 <calloc@plt>
  42ada2:	test   rax,rax
  42ada5:	je     42adbd <isspace@plt+0x274ad>
  42ada7:	mov    rbx,rax
  42adaa:	lea    rsi,[rip+0x68af]        # 431660 <isspace@plt+0x2dd50>
  42adb1:	mov    rdi,rax
  42adb4:	xor    edx,edx
  42adb6:	call   4033f0 <regcomp@plt>
  42adbb:	jmp    42adbf <isspace@plt+0x274af>
  42adbd:	xor    ebx,ebx
  42adbf:	mov    rax,QWORD PTR fs:0x28
  42adc8:	cmp    rax,QWORD PTR [rsp+0x8]
  42adcd:	jne    42add8 <isspace@plt+0x274c8>
  42adcf:	mov    rax,rbx
  42add2:	add    rsp,0x10
  42add6:	pop    rbx
  42add7:	ret    
  42add8:	call   403280 <__stack_chk_fail@plt>
  42addd:	nop    DWORD PTR [rax]
  42ade0:	push   r14
  42ade2:	push   rbx
  42ade3:	push   rax
  42ade4:	mov    r14,rdi
  42ade7:	mov    rax,QWORD PTR fs:0x28
  42adf0:	mov    QWORD PTR [rsp],rax
  42adf4:	call   4033f0 <regcomp@plt>
  42adf9:	mov    ebx,eax
  42adfb:	test   eax,eax
  42adfd:	je     42ae10 <isspace@plt+0x27500>
  42adff:	lea    rsi,[rip+0x685a]        # 431660 <isspace@plt+0x2dd50>
  42ae06:	mov    rdi,r14
  42ae09:	xor    edx,edx
  42ae0b:	call   4033f0 <regcomp@plt>
  42ae10:	mov    rax,QWORD PTR fs:0x28
  42ae19:	cmp    rax,QWORD PTR [rsp]
  42ae1d:	jne    42ae29 <isspace@plt+0x27519>
  42ae1f:	mov    eax,ebx
  42ae21:	add    rsp,0x8
  42ae25:	pop    rbx
  42ae26:	pop    r14
  42ae28:	ret    
  42ae29:	call   403280 <__stack_chk_fail@plt>
  42ae2e:	xchg   ax,ax
  42ae30:	push   rax
  42ae31:	mov    rax,QWORD PTR fs:0x28
  42ae3a:	mov    QWORD PTR [rsp],rax
  42ae3e:	test   rdi,rdi
  42ae41:	je     42ae49 <isspace@plt+0x27539>
  42ae43:	mov    rax,QWORD PTR [rdi+0x30]
  42ae47:	jmp    42ae4b <isspace@plt+0x2753b>
  42ae49:	xor    eax,eax
  42ae4b:	mov    rcx,QWORD PTR fs:0x28
  42ae54:	cmp    rcx,QWORD PTR [rsp]
  42ae58:	jne    42ae5c <isspace@plt+0x2754c>
  42ae5a:	pop    rcx
  42ae5b:	ret    
  42ae5c:	call   403280 <__stack_chk_fail@plt>
  42ae61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ae6b:	nop    DWORD PTR [rax+rax*1+0x0]
  42ae70:	push   rbx
  42ae71:	sub    rsp,0x10
  42ae75:	mov    rax,QWORD PTR fs:0x28
  42ae7e:	mov    QWORD PTR [rsp+0x8],rax
  42ae83:	test   rdi,rdi
  42ae86:	je     42ae98 <isspace@plt+0x27588>
  42ae88:	mov    rbx,rdi
  42ae8b:	call   403240 <regfree@plt>
  42ae90:	mov    rdi,rbx
  42ae93:	call   4030d0 <free@plt>
  42ae98:	mov    rax,QWORD PTR fs:0x28
  42aea1:	cmp    rax,QWORD PTR [rsp+0x8]
  42aea6:	jne    42aeae <isspace@plt+0x2759e>
  42aea8:	add    rsp,0x10
  42aeac:	pop    rbx
  42aead:	ret    
  42aeae:	call   403280 <__stack_chk_fail@plt>
  42aeb3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42aebd:	nop    DWORD PTR [rax]
  42aec0:	push   rax
  42aec1:	mov    r8d,edx
  42aec4:	mov    rax,QWORD PTR fs:0x28
  42aecd:	mov    QWORD PTR [rsp],rax
  42aed1:	xor    edx,edx
  42aed3:	xor    ecx,ecx
  42aed5:	call   403630 <regexec@plt>
  42aeda:	mov    rcx,QWORD PTR fs:0x28
  42aee3:	cmp    rcx,QWORD PTR [rsp]
  42aee7:	jne    42aeeb <isspace@plt+0x275db>
  42aee9:	pop    rcx
  42aeea:	ret    
  42aeeb:	call   403280 <__stack_chk_fail@plt>
  42aef0:	push   rbp
  42aef1:	push   r15
  42aef3:	push   r14
  42aef5:	push   r13
  42aef7:	push   r12
  42aef9:	push   rbx
  42aefa:	sub    rsp,0x78
  42aefe:	mov    r12,r9
  42af01:	mov    r14,r8
  42af04:	mov    QWORD PTR [rsp+0x18],rcx
  42af09:	mov    rbp,rdx
  42af0c:	mov    rbx,rsi
  42af0f:	mov    rax,QWORD PTR fs:0x28
  42af18:	mov    QWORD PTR [rsp+0x70],rax
  42af1d:	call   411210 <isspace@plt+0xd900>
  42af22:	test   rax,rax
  42af25:	je     42afc3 <isspace@plt+0x276b3>
  42af2b:	test   rbp,rbp
  42af2e:	mov    QWORD PTR [rsp+0x10],rax
  42af33:	je     42afce <isspace@plt+0x276be>
  42af39:	mov    QWORD PTR [rsp+0x8],r14
  42af3e:	mov    r13,rax
  42af41:	add    r13,rbp
  42af44:	mov    r15,rax
  42af47:	jmp    42af68 <isspace@plt+0x27658>
  42af49:	nop    DWORD PTR [rax+0x0]
  42af50:	dec    rcx
  42af53:	mov    rax,rcx
  42af56:	sub    rax,r15
  42af59:	add    rbx,rax
  42af5c:	mov    r15,rcx
  42af5f:	sub    rbp,rax
  42af62:	je     42b2a3 <isspace@plt+0x27993>
  42af68:	mov    rdi,QWORD PTR [rsp+0x18]
  42af6d:	mov    rsi,r15
  42af70:	mov    rdx,QWORD PTR [rsp+0x8]
  42af75:	lea    rcx,[rsp+0x20]
  42af7a:	mov    r8d,DWORD PTR [rsp+0xb0]
  42af82:	call   403630 <regexec@plt>
  42af87:	test   eax,eax
  42af89:	je     42afd9 <isspace@plt+0x276c9>
  42af8b:	mov    r14d,eax
  42af8e:	mov    rdi,r15
  42af91:	xor    esi,esi
  42af93:	mov    rdx,rbp
  42af96:	call   403410 <memchr@plt>
  42af9b:	test   rax,rax
  42af9e:	je     42b2a3 <isspace@plt+0x27993>
  42afa4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42afae:	xchg   ax,ax
  42afb0:	lea    rcx,[rax+0x1]
  42afb4:	cmp    r13,rax
  42afb7:	je     42af50 <isspace@plt+0x27640>
  42afb9:	cmp    BYTE PTR [rax],0x0
  42afbc:	mov    rax,rcx
  42afbf:	je     42afb0 <isspace@plt+0x276a0>
  42afc1:	jmp    42af50 <isspace@plt+0x27640>
  42afc3:	mov    r14d,0x1
  42afc9:	jmp    42b2b0 <isspace@plt+0x279a0>
  42afce:	mov    r14d,0x1
  42afd4:	jmp    42b2a3 <isspace@plt+0x27993>
  42afd9:	mov    r8,QWORD PTR [rsp+0x8]
  42afde:	test   r8,r8
  42afe1:	je     42b2a0 <isspace@plt+0x27990>
  42afe7:	cmp    r8,0x4
  42afeb:	jae    42aff4 <isspace@plt+0x276e4>
  42afed:	xor    eax,eax
  42afef:	jmp    42b247 <isspace@plt+0x27937>
  42aff4:	mov    rax,r8
  42aff7:	and    rax,0xfffffffffffffffc
  42affb:	vmovq  xmm0,rbx
  42b000:	vpbroadcastq ymm0,xmm0
  42b005:	lea    rcx,[rax-0x4]
  42b009:	mov    rsi,rcx
  42b00c:	shr    rsi,0x2
  42b010:	inc    rsi
  42b013:	mov    edx,esi
  42b015:	and    edx,0x1
  42b018:	test   rcx,rcx
  42b01b:	je     42b186 <isspace@plt+0x27876>
  42b021:	sub    rsi,rdx
  42b024:	lea    rdi,[r12+0x40]
  42b029:	vmovdqa ymm1,YMMWORD PTR [rip+0x5bcf]        # 430c00 <isspace@plt+0x2d2f0>
  42b031:	xor    ecx,ecx
  42b033:	lea    rbp,[rsp+0x20]
  42b038:	vpcmpeqd xmm2,xmm2,xmm2
  42b03c:	vpbroadcastq ymm8,QWORD PTR [rip+0x65e3]        # 431628 <isspace@plt+0x2dd18>
  42b045:	vpbroadcastq ymm9,QWORD PTR [rip+0x65e2]        # 431630 <isspace@plt+0x2dd20>
  42b04e:	vpbroadcastq ymm11,QWORD PTR [rip+0x65e1]        # 431638 <isspace@plt+0x2dd28>
  42b057:	vpbroadcastq ymm12,QWORD PTR [rip+0x65e0]        # 431640 <isspace@plt+0x2dd30>
  42b060:	vpsllq ymm7,ymm1,0x3
  42b065:	vmovq  xmm3,rbp
  42b06a:	vpbroadcastq ymm3,xmm3
  42b06f:	vpaddq ymm3,ymm3,ymm7
  42b073:	vpcmpeqd xmm7,xmm7,xmm7
  42b077:	vpgatherqd xmm4,DWORD PTR [ymm3*1+0x0],xmm7
  42b081:	vpcmpeqd xmm7,xmm4,xmm2
  42b085:	vpmovsxdq ymm7,xmm7
  42b08a:	vpmovsxdq ymm4,xmm4
  42b08f:	vpaddq ymm4,ymm0,ymm4
  42b093:	vpor   ymm10,ymm3,ymm8
  42b098:	vpcmpeqd xmm5,xmm5,xmm5
  42b09c:	vpgatherqd xmm6,DWORD PTR [ymm10*1+0x0],xmm5
  42b0a6:	vpor   ymm4,ymm7,ymm4
  42b0aa:	vpcmpeqd xmm5,xmm6,xmm2
  42b0ae:	vpmovsxdq ymm5,xmm5
  42b0b3:	vpmovsxdq ymm6,xmm6
  42b0b8:	vpaddq ymm6,ymm0,ymm6
  42b0bc:	vpor   ymm5,ymm5,ymm6
  42b0c0:	vpermq ymm6,ymm4,0xd4
  42b0c6:	vpermq ymm7,ymm5,0x60
  42b0cc:	vpblendd ymm6,ymm6,ymm7,0xcc
  42b0d2:	vpermq ymm4,ymm4,0xf6
  42b0d8:	vpermq ymm5,ymm5,0xe8
  42b0de:	vpblendd ymm4,ymm4,ymm5,0xcc
  42b0e4:	vmovdqu YMMWORD PTR [rdi-0x20],ymm4
  42b0e9:	vmovdqu YMMWORD PTR [rdi-0x40],ymm6
  42b0ee:	vpaddq ymm4,ymm3,ymm9
  42b0f3:	vpcmpeqd xmm5,xmm5,xmm5
  42b0f7:	vpgatherqd xmm6,DWORD PTR [ymm4*1+0x0],xmm5
  42b101:	vpcmpeqd xmm4,xmm6,xmm2
  42b105:	vpmovsxdq ymm4,xmm4
  42b10a:	vpmovsxdq ymm5,xmm6
  42b10f:	vpaddq ymm5,ymm0,ymm5
  42b113:	vpor   ymm4,ymm4,ymm5
  42b117:	vpaddq ymm3,ymm3,ymm11
  42b11c:	vpcmpeqd xmm5,xmm5,xmm5
  42b120:	vpgatherqd xmm6,DWORD PTR [ymm3*1+0x0],xmm5
  42b12a:	vpcmpeqd xmm3,xmm6,xmm2
  42b12e:	vpmovsxdq ymm3,xmm3
  42b133:	vpmovsxdq ymm5,xmm6
  42b138:	vpaddq ymm5,ymm0,ymm5
  42b13c:	vpor   ymm3,ymm3,ymm5
  42b140:	vpermq ymm5,ymm3,0x60
  42b146:	vpermq ymm6,ymm4,0xd4
  42b14c:	vpblendd ymm5,ymm6,ymm5,0xcc
  42b152:	vpermq ymm3,ymm3,0xe8
  42b158:	vpermq ymm4,ymm4,0xf6
  42b15e:	vpblendd ymm3,ymm4,ymm3,0xcc
  42b164:	vmovdqu YMMWORD PTR [rdi+0x20],ymm3
  42b169:	vmovdqu YMMWORD PTR [rdi],ymm5
  42b16d:	add    rcx,0x8
  42b171:	vpaddq ymm1,ymm1,ymm12
  42b176:	sub    rdi,0xffffffffffffff80
  42b17a:	add    rsi,0xfffffffffffffffe
  42b17e:	jne    42b060 <isspace@plt+0x27750>
  42b184:	jmp    42b190 <isspace@plt+0x27880>
  42b186:	vmovdqa ymm1,YMMWORD PTR [rip+0x5a72]        # 430c00 <isspace@plt+0x2d2f0>
  42b18e:	xor    ecx,ecx
  42b190:	test   rdx,rdx
  42b193:	je     42b23f <isspace@plt+0x2792f>
  42b199:	vpsllq ymm1,ymm1,0x3
  42b19e:	lea    rdx,[rsp+0x20]
  42b1a3:	vmovq  xmm2,rdx
  42b1a8:	vpbroadcastq ymm2,xmm2
  42b1ad:	vpaddq ymm1,ymm2,ymm1
  42b1b1:	vpcmpeqd xmm2,xmm2,xmm2
  42b1b5:	vpgatherqd xmm3,DWORD PTR [ymm1*1+0x0],xmm2
  42b1bf:	vpbroadcastq ymm2,QWORD PTR [rip+0x6460]        # 431628 <isspace@plt+0x2dd18>
  42b1c8:	vpor   ymm1,ymm1,ymm2
  42b1cc:	vpcmpeqd xmm2,xmm2,xmm2
  42b1d0:	vpgatherqd xmm4,DWORD PTR [ymm1*1+0x0],xmm2
  42b1da:	vpcmpeqd xmm1,xmm1,xmm1
  42b1de:	vpcmpeqd xmm2,xmm3,xmm1
  42b1e2:	vpmovsxdq ymm2,xmm2
  42b1e7:	vpmovsxdq ymm3,xmm3
  42b1ec:	vpaddq ymm3,ymm0,ymm3
  42b1f0:	vpor   ymm2,ymm2,ymm3
  42b1f4:	vpcmpeqd xmm1,xmm4,xmm1
  42b1f8:	vpmovsxdq ymm1,xmm1
  42b1fd:	vpmovsxdq ymm3,xmm4
  42b202:	vpaddq ymm0,ymm0,ymm3
  42b206:	vpor   ymm0,ymm1,ymm0
  42b20a:	shl    rcx,0x4
  42b20e:	vpermq ymm1,ymm2,0xd4
  42b214:	vpermq ymm3,ymm0,0x60
  42b21a:	vpblendd ymm1,ymm1,ymm3,0xcc
  42b220:	vpermq ymm2,ymm2,0xf6
  42b226:	vpermq ymm0,ymm0,0xe8
  42b22c:	vpblendd ymm0,ymm2,ymm0,0xcc
  42b232:	vmovdqu YMMWORD PTR [r12+rcx*1+0x20],ymm0
  42b239:	vmovdqu YMMWORD PTR [r12+rcx*1],ymm1
  42b23f:	xor    r14d,r14d
  42b242:	cmp    rax,r8
  42b245:	je     42b2a3 <isspace@plt+0x27993>
  42b247:	vmovq  xmm0,rbx
  42b24c:	vpbroadcastq xmm0,xmm0
  42b251:	mov    rcx,rax
  42b254:	shl    rcx,0x4
  42b258:	add    r12,rcx
  42b25b:	vmovdqa xmm1,XMMWORD PTR [rip+0x63ed]        # 431650 <isspace@plt+0x2dd40>
  42b263:	mov    rcx,QWORD PTR [rsp+0x8]
  42b268:	nop    DWORD PTR [rax+rax*1+0x0]
  42b270:	vpmovzxdq xmm2,QWORD PTR [rsp+rax*8+0x20]
  42b277:	vpcmpeqq xmm3,xmm2,xmm1
  42b27c:	vpshufd xmm2,xmm2,0xe8
  42b281:	vpmovsxdq xmm2,xmm2
  42b286:	vpaddq xmm2,xmm0,xmm2
  42b28a:	vpor   xmm2,xmm3,xmm2
  42b28e:	vmovdqu XMMWORD PTR [r12],xmm2
  42b294:	inc    rax
  42b297:	add    r12,0x10
  42b29b:	cmp    rcx,rax
  42b29e:	jne    42b270 <isspace@plt+0x27960>
  42b2a0:	xor    r14d,r14d
  42b2a3:	mov    rdi,QWORD PTR [rsp+0x10]
  42b2a8:	vzeroupper 
  42b2ab:	call   4030d0 <free@plt>
  42b2b0:	mov    rax,QWORD PTR fs:0x28
  42b2b9:	cmp    rax,QWORD PTR [rsp+0x70]
  42b2be:	jne    42b2d2 <isspace@plt+0x279c2>
  42b2c0:	mov    eax,r14d
  42b2c3:	add    rsp,0x78
  42b2c7:	pop    rbx
  42b2c8:	pop    r12
  42b2ca:	pop    r13
  42b2cc:	pop    r14
  42b2ce:	pop    r15
  42b2d0:	pop    rbp
  42b2d1:	ret    
  42b2d2:	call   403280 <__stack_chk_fail@plt>
  42b2d7:	nop    WORD PTR [rax+rax*1+0x0]
  42b2e0:	push   rbp
  42b2e1:	push   r15
  42b2e3:	push   r14
  42b2e5:	push   r13
  42b2e7:	push   r12
  42b2e9:	push   rbx
  42b2ea:	sub    rsp,0x148
  42b2f1:	mov    QWORD PTR [rsp+0x20],r9
  42b2f6:	mov    rbx,r8
  42b2f9:	mov    QWORD PTR [rsp+0x58],rcx
  42b2fe:	mov    r13,rdx
  42b301:	mov    rbp,rsi
  42b304:	mov    rax,QWORD PTR fs:0x28
  42b30d:	mov    QWORD PTR [rsp+0x140],rax
  42b315:	call   411210 <isspace@plt+0xd900>
  42b31a:	test   rax,rax
  42b31d:	je     42b788 <isspace@plt+0x27e78>
  42b323:	test   r13,r13
  42b326:	mov    QWORD PTR [rsp+0x50],rax
  42b32b:	je     42b78f <isspace@plt+0x27e7f>
  42b331:	mov    r14d,DWORD PTR [rsp+0x180]
  42b339:	mov    r15,rax
  42b33c:	add    r15,r13
  42b33f:	lea    rcx,[rbx-0x4]
  42b343:	shr    rcx,0x2
  42b347:	mov    QWORD PTR [rsp+0x48],rcx
  42b34c:	inc    rcx
  42b34f:	mov    rdx,rbx
  42b352:	and    rdx,0xfffffffffffffffc
  42b356:	mov    QWORD PTR [rsp+0x40],rdx
  42b35b:	mov    edx,ecx
  42b35d:	and    edx,0x1
  42b360:	mov    QWORD PTR [rsp+0x38],rdx
  42b365:	sub    rcx,rdx
  42b368:	mov    QWORD PTR [rsp+0x30],rcx
  42b36d:	mov    rcx,QWORD PTR [rsp+0x20]
  42b372:	add    rcx,0x40
  42b376:	mov    QWORD PTR [rsp+0x28],rcx
  42b37b:	mov    DWORD PTR [rsp+0x1c],0x1
  42b383:	lea    rcx,[rsp+0xf0]
  42b38b:	vpbroadcastq ymm10,QWORD PTR [rip+0x6294]        # 431628 <isspace@plt+0x2dd18>
  42b394:	vpbroadcastq ymm11,QWORD PTR [rip+0x6293]        # 431630 <isspace@plt+0x2dd20>
  42b39d:	vpbroadcastq ymm12,QWORD PTR [rip+0x6292]        # 431638 <isspace@plt+0x2dd28>
  42b3a6:	vpbroadcastq ymm13,QWORD PTR [rip+0x6291]        # 431640 <isspace@plt+0x2dd30>
  42b3af:	mov    r12,rax
  42b3b2:	vmovdqu YMMWORD PTR [rsp+0xc0],ymm10
  42b3bb:	vmovdqu YMMWORD PTR [rsp+0xa0],ymm11
  42b3c4:	vmovdqu YMMWORD PTR [rsp+0x80],ymm12
  42b3cd:	vmovdqu YMMWORD PTR [rsp+0x60],ymm13
  42b3d3:	jmp    42b412 <isspace@plt+0x27b02>
  42b3d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b3df:	nop
  42b3e0:	add    rax,r12
  42b3e3:	mov    DWORD PTR [rsp+0x1c],0x0
  42b3eb:	mov    rsi,rax
  42b3ee:	sub    rsi,r12
  42b3f1:	mov    edx,r14d
  42b3f4:	and    edx,0xfffffffe
  42b3f7:	or     r14d,0x1
  42b3fb:	cmp    BYTE PTR [rax-0x1],0xa
  42b3ff:	cmove  r14d,edx
  42b403:	add    rbp,rsi
  42b406:	mov    r12,rax
  42b409:	sub    r13,rsi
  42b40c:	je     42b797 <isspace@plt+0x27e87>
  42b412:	mov    rdi,QWORD PTR [rsp+0x58]
  42b417:	mov    rsi,r12
  42b41a:	mov    rdx,rbx
  42b41d:	mov    r8d,r14d
  42b420:	vzeroupper 
  42b423:	call   403630 <regexec@plt>
  42b428:	test   eax,eax
  42b42a:	je     42b480 <isspace@plt+0x27b70>
  42b42c:	mov    rdi,r12
  42b42f:	xor    esi,esi
  42b431:	mov    rdx,r13
  42b434:	call   403410 <memchr@plt>
  42b439:	test   rax,rax
  42b43c:	je     42b797 <isspace@plt+0x27e87>
  42b442:	mov    rcx,rax
  42b445:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b44f:	nop
  42b450:	lea    rax,[rcx+0x1]
  42b454:	cmp    r15,rcx
  42b457:	je     42b461 <isspace@plt+0x27b51>
  42b459:	cmp    BYTE PTR [rcx],0x0
  42b45c:	mov    rcx,rax
  42b45f:	je     42b450 <isspace@plt+0x27b40>
  42b461:	dec    rax
  42b464:	lea    rcx,[rsp+0xf0]
  42b46c:	jmp    42b3eb <isspace@plt+0x27adb>
  42b471:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b47b:	nop    DWORD PTR [rax+rax*1+0x0]
  42b480:	test   rbx,rbx
  42b483:	lea    rcx,[rsp+0xf0]
  42b48b:	vmovdqa xmm8,XMMWORD PTR [rip+0x61bd]        # 431650 <isspace@plt+0x2dd40>
  42b493:	vpcmpeqd xmm9,xmm9,xmm9
  42b498:	vmovdqu ymm10,YMMWORD PTR [rsp+0xc0]
  42b4a1:	vmovdqu ymm11,YMMWORD PTR [rsp+0xa0]
  42b4aa:	vmovdqu ymm12,YMMWORD PTR [rsp+0x80]
  42b4b3:	vmovdqu ymm13,YMMWORD PTR [rsp+0x60]
  42b4b9:	je     42b731 <isspace@plt+0x27e21>
  42b4bf:	cmp    rbx,0x3
  42b4c3:	ja     42b4cc <isspace@plt+0x27bbc>
  42b4c5:	xor    eax,eax
  42b4c7:	jmp    42b6db <isspace@plt+0x27dcb>
  42b4cc:	vmovq  xmm0,rbp
  42b4d1:	vpbroadcastq ymm0,xmm0
  42b4d6:	cmp    QWORD PTR [rsp+0x48],0x0
  42b4dc:	je     42b76d <isspace@plt+0x27e5d>
  42b4e2:	mov    rsi,QWORD PTR [rsp+0x28]
  42b4e7:	xor    eax,eax
  42b4e9:	vmovdqa ymm1,YMMWORD PTR [rip+0x570f]        # 430c00 <isspace@plt+0x2d2f0>
  42b4f1:	mov    rdx,QWORD PTR [rsp+0x30]
  42b4f6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b500:	vpsllq ymm2,ymm1,0x3
  42b505:	vmovq  xmm3,rcx
  42b50a:	vpbroadcastq ymm3,xmm3
  42b50f:	vpaddq ymm2,ymm3,ymm2
  42b513:	vpcmpeqd xmm3,xmm3,xmm3
  42b517:	vpgatherqd xmm4,DWORD PTR [ymm2*1+0x0],xmm3
  42b521:	vpcmpeqd xmm3,xmm4,xmm9
  42b526:	vpmovsxdq ymm3,xmm3
  42b52b:	vpmovsxdq ymm4,xmm4
  42b530:	vpaddq ymm4,ymm0,ymm4
  42b534:	vpor   ymm5,ymm2,ymm10
  42b539:	vpcmpeqd xmm6,xmm6,xmm6
  42b53d:	vpgatherqd xmm7,DWORD PTR [ymm5*1+0x0],xmm6
  42b547:	vpor   ymm3,ymm3,ymm4
  42b54b:	vpcmpeqd xmm4,xmm7,xmm9
  42b550:	vpmovsxdq ymm4,xmm4
  42b555:	vpmovsxdq ymm5,xmm7
  42b55a:	vpaddq ymm5,ymm0,ymm5
  42b55e:	vpor   ymm4,ymm4,ymm5
  42b562:	vpermq ymm5,ymm3,0xd4
  42b568:	vpermq ymm6,ymm4,0x60
  42b56e:	vpblendd ymm5,ymm5,ymm6,0xcc
  42b574:	vpermq ymm3,ymm3,0xf6
  42b57a:	vpermq ymm4,ymm4,0xe8
  42b580:	vpblendd ymm3,ymm3,ymm4,0xcc
  42b586:	vmovdqu YMMWORD PTR [rsi-0x20],ymm3
  42b58b:	vmovdqu YMMWORD PTR [rsi-0x40],ymm5
  42b590:	vpaddq ymm3,ymm2,ymm11
  42b595:	vpcmpeqd xmm4,xmm4,xmm4
  42b599:	vpgatherqd xmm5,DWORD PTR [ymm3*1+0x0],xmm4
  42b5a3:	vpcmpeqd xmm3,xmm5,xmm9
  42b5a8:	vpmovsxdq ymm3,xmm3
  42b5ad:	vpmovsxdq ymm4,xmm5
  42b5b2:	vpaddq ymm4,ymm0,ymm4
  42b5b6:	vpor   ymm3,ymm3,ymm4
  42b5ba:	vpaddq ymm2,ymm2,ymm12
  42b5bf:	vpcmpeqd xmm4,xmm4,xmm4
  42b5c3:	vpgatherqd xmm5,DWORD PTR [ymm2*1+0x0],xmm4
  42b5cd:	vpcmpeqd xmm2,xmm5,xmm9
  42b5d2:	vpmovsxdq ymm2,xmm2
  42b5d7:	vpmovsxdq ymm4,xmm5
  42b5dc:	vpaddq ymm4,ymm0,ymm4
  42b5e0:	vpor   ymm2,ymm2,ymm4
  42b5e4:	vpermq ymm4,ymm2,0x60
  42b5ea:	vpermq ymm5,ymm3,0xd4
  42b5f0:	vpblendd ymm4,ymm5,ymm4,0xcc
  42b5f6:	vpermq ymm2,ymm2,0xe8
  42b5fc:	vpermq ymm3,ymm3,0xf6
  42b602:	vpblendd ymm2,ymm3,ymm2,0xcc
  42b608:	vmovdqu YMMWORD PTR [rsi+0x20],ymm2
  42b60d:	vmovdqu YMMWORD PTR [rsi],ymm4
  42b611:	add    rax,0x8
  42b615:	vpaddq ymm1,ymm1,ymm13
  42b61a:	sub    rsi,0xffffffffffffff80
  42b61e:	add    rdx,0xfffffffffffffffe
  42b622:	jne    42b500 <isspace@plt+0x27bf0>
  42b628:	cmp    QWORD PTR [rsp+0x38],0x0
  42b62e:	je     42b6ce <isspace@plt+0x27dbe>
  42b634:	vpsllq ymm1,ymm1,0x3
  42b639:	vmovq  xmm2,rcx
  42b63e:	vpbroadcastq ymm2,xmm2
  42b643:	vpaddq ymm1,ymm2,ymm1
  42b647:	vpcmpeqd xmm2,xmm2,xmm2
  42b64b:	vpgatherqd xmm3,DWORD PTR [ymm1*1+0x0],xmm2
  42b655:	vpor   ymm1,ymm1,ymm10
  42b65a:	vpcmpeqd xmm2,xmm2,xmm2
  42b65e:	vpgatherqd xmm4,DWORD PTR [ymm1*1+0x0],xmm2
  42b668:	vpcmpeqd xmm1,xmm3,xmm9
  42b66d:	vpmovsxdq ymm1,xmm1
  42b672:	vpmovsxdq ymm2,xmm3
  42b677:	vpaddq ymm2,ymm0,ymm2
  42b67b:	vpor   ymm1,ymm1,ymm2
  42b67f:	vpcmpeqd xmm2,xmm4,xmm9
  42b684:	vpmovsxdq ymm2,xmm2
  42b689:	vpmovsxdq ymm3,xmm4
  42b68e:	vpaddq ymm0,ymm0,ymm3
  42b692:	vpor   ymm0,ymm2,ymm0
  42b696:	shl    rax,0x4
  42b69a:	vpermq ymm2,ymm1,0xd4
  42b6a0:	vpermq ymm3,ymm0,0x60
  42b6a6:	vpblendd ymm2,ymm2,ymm3,0xcc
  42b6ac:	vpermq ymm1,ymm1,0xf6
  42b6b2:	vpermq ymm0,ymm0,0xe8
  42b6b8:	vpblendd ymm0,ymm1,ymm0,0xcc
  42b6be:	mov    rdx,QWORD PTR [rsp+0x20]
  42b6c3:	vmovdqu YMMWORD PTR [rdx+rax*1+0x20],ymm0
  42b6c9:	vmovdqu YMMWORD PTR [rdx+rax*1],ymm2
  42b6ce:	mov    rdx,QWORD PTR [rsp+0x40]
  42b6d3:	mov    rax,rdx
  42b6d6:	cmp    rdx,rbx
  42b6d9:	je     42b731 <isspace@plt+0x27e21>
  42b6db:	vmovq  xmm0,rbp
  42b6e0:	vpbroadcastq xmm0,xmm0
  42b6e5:	mov    rdx,rax
  42b6e8:	shl    rdx,0x4
  42b6ec:	add    rdx,QWORD PTR [rsp+0x20]
  42b6f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b6fb:	nop    DWORD PTR [rax+rax*1+0x0]
  42b700:	vpmovzxdq xmm1,QWORD PTR [rsp+rax*8+0xf0]
  42b70a:	vpcmpeqq xmm2,xmm1,xmm8
  42b70f:	vpshufd xmm1,xmm1,0xe8
  42b714:	vpmovsxdq xmm1,xmm1
  42b719:	vpaddq xmm1,xmm0,xmm1
  42b71d:	vpor   xmm1,xmm2,xmm1
  42b721:	vmovdqu XMMWORD PTR [rdx],xmm1
  42b725:	inc    rax
  42b728:	add    rdx,0x10
  42b72c:	cmp    rbx,rax
  42b72f:	jne    42b700 <isspace@plt+0x27df0>
  42b731:	movsxd rax,DWORD PTR [rsp+0xf4]
  42b739:	mov    edx,DWORD PTR [rsp+0xf0]
  42b740:	or     edx,eax
  42b742:	jne    42b3e0 <isspace@plt+0x27ad0>
  42b748:	mov    rdi,r12
  42b74b:	mov    esi,0xa
  42b750:	vzeroupper 
  42b753:	call   4032f0 <strchr@plt>
  42b758:	test   rax,rax
  42b75b:	je     42b7cd <isspace@plt+0x27ebd>
  42b75d:	inc    rax
  42b760:	mov    DWORD PTR [rsp+0x1c],0x0
  42b768:	jmp    42b464 <isspace@plt+0x27b54>
  42b76d:	xor    eax,eax
  42b76f:	vmovdqa ymm1,YMMWORD PTR [rip+0x5489]        # 430c00 <isspace@plt+0x2d2f0>
  42b777:	cmp    QWORD PTR [rsp+0x38],0x0
  42b77d:	jne    42b634 <isspace@plt+0x27d24>
  42b783:	jmp    42b6ce <isspace@plt+0x27dbe>
  42b788:	mov    eax,0x1
  42b78d:	jmp    42b7a8 <isspace@plt+0x27e98>
  42b78f:	mov    DWORD PTR [rsp+0x1c],0x1
  42b797:	mov    rdi,QWORD PTR [rsp+0x50]
  42b79c:	vzeroupper 
  42b79f:	call   4030d0 <free@plt>
  42b7a4:	mov    eax,DWORD PTR [rsp+0x1c]
  42b7a8:	mov    rcx,QWORD PTR fs:0x28
  42b7b1:	cmp    rcx,QWORD PTR [rsp+0x140]
  42b7b9:	jne    42b7d7 <isspace@plt+0x27ec7>
  42b7bb:	add    rsp,0x148
  42b7c2:	pop    rbx
  42b7c3:	pop    r12
  42b7c5:	pop    r13
  42b7c7:	pop    r14
  42b7c9:	pop    r15
  42b7cb:	pop    rbp
  42b7cc:	ret    
  42b7cd:	mov    DWORD PTR [rsp+0x1c],0x0
  42b7d5:	jmp    42b797 <isspace@plt+0x27e87>
  42b7d7:	call   403280 <__stack_chk_fail@plt>
  42b7dc:	nop    DWORD PTR [rax+0x0]
  42b7e0:	endbr64 
  42b7e4:	push   r15
  42b7e6:	lea    r15,[rip+0x10c83]        # 43c470 <isspace@plt+0x38b60>
  42b7ed:	push   r14
  42b7ef:	mov    r14,rdx
  42b7f2:	push   r13
  42b7f4:	mov    r13,rsi
  42b7f7:	push   r12
  42b7f9:	mov    r12d,edi
  42b7fc:	push   rbp
  42b7fd:	lea    rbp,[rip+0x10c74]        # 43c478 <isspace@plt+0x38b68>
  42b804:	push   rbx
  42b805:	sub    rbp,r15
  42b808:	sub    rsp,0x8
  42b80c:	call   403000 <start_color@plt-0x30>
  42b811:	sar    rbp,0x3
  42b815:	je     42b836 <isspace@plt+0x27f26>
  42b817:	xor    ebx,ebx
  42b819:	nop    DWORD PTR [rax+0x0]
  42b820:	mov    rdx,r14
  42b823:	mov    rsi,r13
  42b826:	mov    edi,r12d
  42b829:	call   QWORD PTR [r15+rbx*8]
  42b82d:	add    rbx,0x1
  42b831:	cmp    rbp,rbx
  42b834:	jne    42b820 <isspace@plt+0x27f10>
  42b836:	add    rsp,0x8
  42b83a:	pop    rbx
  42b83b:	pop    rbp
  42b83c:	pop    r12
  42b83e:	pop    r13
  42b840:	pop    r14
  42b842:	pop    r15
  42b844:	ret    
  42b845:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  42b850:	endbr64 
  42b854:	ret    

Disassembly of section .fini:

000000000042b858 <.fini>:
  42b858:	endbr64 
  42b85c:	sub    rsp,0x8
  42b860:	add    rsp,0x8
  42b864:	ret    
