
../repos/dvidelabs-flatcc-3b39ef7/test/cgen_test/cgen_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000406000 <.init>:
  406000:	endbr64 
  406004:	sub    rsp,0x8
  406008:	mov    rax,QWORD PTR [rip+0x49fe1]        # 44fff0 <__gmon_start__>
  40600f:	test   rax,rax
  406012:	je     406016 <__ctype_toupper_loc@plt-0x1a>
  406014:	call   rax
  406016:	add    rsp,0x8
  40601a:	ret    

Disassembly of section .plt:

0000000000406020 <__ctype_toupper_loc@plt-0x10>:
  406020:	push   QWORD PTR [rip+0x49fe2]        # 450008 <fb_value_set_deleted@@Base+0x6588>
  406026:	jmp    QWORD PTR [rip+0x49fe4]        # 450010 <fb_value_set_deleted@@Base+0x6590>
  40602c:	nop    DWORD PTR [rax+0x0]

0000000000406030 <__ctype_toupper_loc@plt>:
  406030:	jmp    QWORD PTR [rip+0x49fe2]        # 450018 <__ctype_toupper_loc@GLIBC_2.3>
  406036:	push   0x0
  40603b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406040 <free@plt>:
  406040:	jmp    QWORD PTR [rip+0x49fda]        # 450020 <free@GLIBC_2.2.5>
  406046:	push   0x1
  40604b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406050 <strncpy@plt>:
  406050:	jmp    QWORD PTR [rip+0x49fd2]        # 450028 <strncpy@GLIBC_2.2.5>
  406056:	push   0x2
  40605b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406060 <strncmp@plt>:
  406060:	jmp    QWORD PTR [rip+0x49fca]        # 450030 <strncmp@GLIBC_2.2.5>
  406066:	push   0x3
  40606b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406070 <puts@plt>:
  406070:	jmp    QWORD PTR [rip+0x49fc2]        # 450038 <puts@GLIBC_2.2.5>
  406076:	push   0x4
  40607b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406080 <qsort@plt>:
  406080:	jmp    QWORD PTR [rip+0x49fba]        # 450040 <qsort@GLIBC_2.2.5>
  406086:	push   0x5
  40608b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406090 <strtod@plt>:
  406090:	jmp    QWORD PTR [rip+0x49fb2]        # 450048 <strtod@GLIBC_2.2.5>
  406096:	push   0x6
  40609b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004060a0 <vsnprintf@plt>:
  4060a0:	jmp    QWORD PTR [rip+0x49faa]        # 450050 <vsnprintf@GLIBC_2.2.5>
  4060a6:	push   0x7
  4060ab:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004060b0 <fread_unlocked@plt>:
  4060b0:	jmp    QWORD PTR [rip+0x49fa2]        # 450058 <fread_unlocked@GLIBC_2.2.5>
  4060b6:	push   0x8
  4060bb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004060c0 <fclose@plt>:
  4060c0:	jmp    QWORD PTR [rip+0x49f9a]        # 450060 <fclose@GLIBC_2.2.5>
  4060c6:	push   0x9
  4060cb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004060d0 <strlen@plt>:
  4060d0:	jmp    QWORD PTR [rip+0x49f92]        # 450068 <strlen@GLIBC_2.2.5>
  4060d6:	push   0xa
  4060db:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004060e0 <rewind@plt>:
  4060e0:	jmp    QWORD PTR [rip+0x49f8a]        # 450070 <rewind@GLIBC_2.2.5>
  4060e6:	push   0xb
  4060eb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004060f0 <__assert_fail@plt>:
  4060f0:	jmp    QWORD PTR [rip+0x49f82]        # 450078 <__assert_fail@GLIBC_2.2.5>
  4060f6:	push   0xc
  4060fb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406100 <memset@plt>:
  406100:	jmp    QWORD PTR [rip+0x49f7a]        # 450080 <memset@GLIBC_2.2.5>
  406106:	push   0xd
  40610b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406110 <fputc@plt>:
  406110:	jmp    QWORD PTR [rip+0x49f72]        # 450088 <fputc@GLIBC_2.2.5>
  406116:	push   0xe
  40611b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406120 <memchr@plt>:
  406120:	jmp    QWORD PTR [rip+0x49f6a]        # 450090 <memchr@GLIBC_2.2.5>
  406126:	push   0xf
  40612b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406130 <memcmp@plt>:
  406130:	jmp    QWORD PTR [rip+0x49f62]        # 450098 <memcmp@GLIBC_2.2.5>
  406136:	push   0x10
  40613b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406140 <calloc@plt>:
  406140:	jmp    QWORD PTR [rip+0x49f5a]        # 4500a0 <calloc@GLIBC_2.2.5>
  406146:	push   0x11
  40614b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406150 <strcmp@plt>:
  406150:	jmp    QWORD PTR [rip+0x49f52]        # 4500a8 <strcmp@GLIBC_2.2.5>
  406156:	push   0x12
  40615b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406160 <fputc_unlocked@plt>:
  406160:	jmp    QWORD PTR [rip+0x49f4a]        # 4500b0 <fputc_unlocked@GLIBC_2.2.5>
  406166:	push   0x13
  40616b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406170 <fprintf@plt>:
  406170:	jmp    QWORD PTR [rip+0x49f42]        # 4500b8 <fprintf@GLIBC_2.2.5>
  406176:	push   0x14
  40617b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406180 <ftell@plt>:
  406180:	jmp    QWORD PTR [rip+0x49f3a]        # 4500c0 <ftell@GLIBC_2.2.5>
  406186:	push   0x15
  40618b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406190 <memcpy@plt>:
  406190:	jmp    QWORD PTR [rip+0x49f32]        # 4500c8 <memcpy@GLIBC_2.14>
  406196:	push   0x16
  40619b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004061a0 <malloc@plt>:
  4061a0:	jmp    QWORD PTR [rip+0x49f2a]        # 4500d0 <malloc@GLIBC_2.2.5>
  4061a6:	push   0x17
  4061ab:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004061b0 <bcmp@plt>:
  4061b0:	jmp    QWORD PTR [rip+0x49f22]        # 4500d8 <bcmp@GLIBC_2.2.5>
  4061b6:	push   0x18
  4061bb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004061c0 <fseek@plt>:
  4061c0:	jmp    QWORD PTR [rip+0x49f1a]        # 4500e0 <fseek@GLIBC_2.2.5>
  4061c6:	push   0x19
  4061cb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004061d0 <realloc@plt>:
  4061d0:	jmp    QWORD PTR [rip+0x49f12]        # 4500e8 <realloc@GLIBC_2.2.5>
  4061d6:	push   0x1a
  4061db:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004061e0 <fopen@plt>:
  4061e0:	jmp    QWORD PTR [rip+0x49f0a]        # 4500f0 <fopen@GLIBC_2.2.5>
  4061e6:	push   0x1b
  4061eb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

00000000004061f0 <vfprintf@plt>:
  4061f0:	jmp    QWORD PTR [rip+0x49f02]        # 4500f8 <vfprintf@GLIBC_2.2.5>
  4061f6:	push   0x1c
  4061fb:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406200 <sprintf@plt>:
  406200:	jmp    QWORD PTR [rip+0x49efa]        # 450100 <sprintf@GLIBC_2.2.5>
  406206:	push   0x1d
  40620b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406210 <exit@plt>:
  406210:	jmp    QWORD PTR [rip+0x49ef2]        # 450108 <exit@GLIBC_2.2.5>
  406216:	push   0x1e
  40621b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406220 <fwrite@plt>:
  406220:	jmp    QWORD PTR [rip+0x49eea]        # 450110 <fwrite@GLIBC_2.2.5>
  406226:	push   0x1f
  40622b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

0000000000406230 <posix_memalign@plt>:
  406230:	jmp    QWORD PTR [rip+0x49ee2]        # 450118 <posix_memalign@GLIBC_2.2.5>
  406236:	push   0x20
  40623b:	jmp    406020 <__ctype_toupper_loc@plt-0x10>

Disassembly of section .text:

0000000000406240 <_start@@Base>:
  406240:	endbr64 
  406244:	xor    ebp,ebp
  406246:	mov    r9,rdx
  406249:	pop    rsi
  40624a:	mov    rdx,rsp
  40624d:	and    rsp,0xfffffffffffffff0
  406251:	push   rax
  406252:	push   rsp
  406253:	mov    r8,0x42cb70
  40625a:	mov    rcx,0x42cb00
  406261:	mov    rdi,0x406330
  406268:	call   QWORD PTR [rip+0x49d7a]        # 44ffe8 <__libc_start_main@GLIBC_2.2.5>
  40626e:	hlt    
  40626f:	nop
  406270:	endbr64 
  406274:	ret    
  406275:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40627f:	nop
  406280:	mov    eax,0x450130
  406285:	cmp    rax,0x450130
  40628b:	je     4062a0 <_start@@Base+0x60>
  40628d:	mov    eax,0x0
  406292:	test   rax,rax
  406295:	je     4062a0 <_start@@Base+0x60>
  406297:	mov    edi,0x450130
  40629c:	jmp    rax
  40629e:	xchg   ax,ax
  4062a0:	ret    
  4062a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4062ac:	nop    DWORD PTR [rax+0x0]
  4062b0:	mov    esi,0x450130
  4062b5:	sub    rsi,0x450130
  4062bc:	mov    rax,rsi
  4062bf:	shr    rsi,0x3f
  4062c3:	sar    rax,0x3
  4062c7:	add    rsi,rax
  4062ca:	sar    rsi,1
  4062cd:	je     4062e0 <_start@@Base+0xa0>
  4062cf:	mov    eax,0x0
  4062d4:	test   rax,rax
  4062d7:	je     4062e0 <_start@@Base+0xa0>
  4062d9:	mov    edi,0x450130
  4062de:	jmp    rax
  4062e0:	ret    
  4062e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4062ec:	nop    DWORD PTR [rax+0x0]
  4062f0:	endbr64 
  4062f4:	cmp    BYTE PTR [rip+0x49e35],0x0        # 450130 <__bss_start@@Base>
  4062fb:	jne    406310 <_start@@Base+0xd0>
  4062fd:	push   rbp
  4062fe:	mov    rbp,rsp
  406301:	call   406280 <_start@@Base+0x40>
  406306:	mov    BYTE PTR [rip+0x49e23],0x1        # 450130 <__bss_start@@Base>
  40630d:	pop    rbp
  40630e:	ret    
  40630f:	nop
  406310:	ret    
  406311:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40631c:	nop    DWORD PTR [rax+0x0]
  406320:	endbr64 
  406324:	jmp    4062b0 <_start@@Base+0x70>
  406326:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000406330 <main@@Base>:
  406330:	push   rbp
  406331:	push   r14
  406333:	push   rbx
  406334:	sub    rsp,0xfb0
  40633b:	lea    rsi,[rip+0x26dbe]        # 42d100 <_IO_stdin_used@@Base+0x100>
  406342:	lea    rdi,[rsp+0x110]
  40634a:	mov    edx,0xe97
  40634f:	call   406190 <memcpy@plt>
  406354:	mov    rbx,rsp
  406357:	mov    rdi,rbx
  40635a:	call   406480 <flatcc_init_options@@Base>
  40635f:	vbroadcastss xmm0,DWORD PTR [rip+0x26c9c]        # 42d004 <_IO_stdin_used@@Base+0x4>
  406368:	vmovups XMMWORD PTR [rsp+0xb0],xmm0
  406371:	mov    DWORD PTR [rsp+0x80],0x1
  40637c:	lea    rsi,[rip+0x26c85]        # 42d008 <_IO_stdin_used@@Base+0x8>
  406383:	mov    rdi,rbx
  406386:	xor    edx,edx
  406388:	xor    ecx,ecx
  40638a:	call   406580 <flatcc_create_context@@Base>
  40638f:	test   rax,rax
  406392:	jne    4063be <main@@Base+0x8e>
  406394:	mov    rax,QWORD PTR [rip+0x49c5d]        # 44fff8 <stderr@GLIBC_2.2.5>
  40639b:	mov    rcx,QWORD PTR [rax]
  40639e:	lea    rdi,[rip+0x26c70]        # 42d015 <_IO_stdin_used@@Base+0x15>
  4063a5:	mov    esi,0x29
  4063aa:	mov    edx,0x1
  4063af:	call   406220 <fwrite@plt>
  4063b4:	mov    ebp,0xffffffff
  4063b9:	jmp    406461 <main@@Base+0x131>
  4063be:	mov    rbx,rax
  4063c1:	lea    rsi,[rsp+0x110]
  4063c9:	mov    edx,0xe97
  4063ce:	mov    rdi,rax
  4063d1:	call   4065e0 <flatcc_parse_buffer@@Base>
  4063d6:	mov    ebp,eax
  4063d8:	mov    r14,QWORD PTR [rip+0x49c19]        # 44fff8 <stderr@GLIBC_2.2.5>
  4063df:	mov    rcx,QWORD PTR [r14]
  4063e2:	test   eax,eax
  4063e4:	jne    406443 <main@@Base+0x113>
  4063e6:	lea    rdi,[rip+0x26c67]        # 42d054 <_IO_stdin_used@@Base+0x54>
  4063ed:	mov    esi,0x11
  4063f2:	mov    edx,0x1
  4063f7:	call   406220 <fwrite@plt>
  4063fc:	mov    rcx,QWORD PTR [r14]
  4063ff:	lea    rdi,[rip+0x26c60]        # 42d066 <_IO_stdin_used@@Base+0x66>
  406406:	mov    esi,0x1f
  40640b:	mov    edx,0x1
  406410:	call   406220 <fwrite@plt>
  406415:	mov    rdi,rbx
  406418:	call   406d00 <flatcc_generate_files@@Base>
  40641d:	test   eax,eax
  40641f:	jne    40646f <main@@Base+0x13f>
  406421:	mov    rax,QWORD PTR [rip+0x49bb8]        # 44ffe0 <stdout@GLIBC_2.2.5>
  406428:	mov    rdi,QWORD PTR [rax]
  40642b:	lea    rsi,[rip+0x26c75]        # 42d0a7 <_IO_stdin_used@@Base+0xa7>
  406432:	lea    rdx,[rsp+0x110]
  40643a:	xor    eax,eax
  40643c:	call   406170 <fprintf@plt>
  406441:	jmp    406459 <main@@Base+0x129>
  406443:	lea    rdi,[rip+0x26bf5]        # 42d03f <_IO_stdin_used@@Base+0x3f>
  40644a:	mov    esi,0x14
  40644f:	mov    edx,0x1
  406454:	call   406220 <fwrite@plt>
  406459:	mov    rdi,rbx
  40645c:	call   406e20 <flatcc_destroy_context@@Base>
  406461:	mov    eax,ebp
  406463:	add    rsp,0xfb0
  40646a:	pop    rbx
  40646b:	pop    r14
  40646d:	pop    rbp
  40646e:	ret    
  40646f:	mov    rcx,QWORD PTR [r14]
  406472:	lea    rdi,[rip+0x26c0d]        # 42d086 <_IO_stdin_used@@Base+0x86>
  406479:	mov    esi,0x20
  40647e:	jmp    40644f <main@@Base+0x11f>

0000000000406480 <flatcc_init_options@@Base>:
  406480:	vxorps xmm0,xmm0,xmm0
  406484:	vmovups YMMWORD PTR [rdi+0x30],ymm0
  406489:	vmovups YMMWORD PTR [rdi+0x10],ymm0
  40648e:	vmovups YMMWORD PTR [rdi+0x50],ymm0
  406493:	vmovups YMMWORD PTR [rdi+0x70],ymm0
  406498:	vmovups YMMWORD PTR [rdi+0x90],ymm0
  4064a0:	vmovups YMMWORD PTR [rdi+0xb0],ymm0
  4064a8:	vmovups YMMWORD PTR [rdi+0xf0],ymm0
  4064b0:	vmovups YMMWORD PTR [rdi+0xd0],ymm0
  4064b8:	mov    QWORD PTR [rdi],0x10000
  4064bf:	movabs rax,0x6400000064
  4064c9:	mov    QWORD PTR [rdi+0x8],rax
  4064cd:	vbroadcastss ymm0,DWORD PTR [rip+0x26b2e]        # 42d004 <_IO_stdin_used@@Base+0x4>
  4064d6:	vmovups YMMWORD PTR [rdi+0x14],ymm0
  4064db:	vmovaps xmm0,XMMWORD PTR [rip+0x27abd]        # 42dfa0 <_IO_stdin_used@@Base+0xfa0>
  4064e3:	vmovups XMMWORD PTR [rdi+0x34],xmm0
  4064e8:	mov    DWORD PTR [rdi+0x44],0x4
  4064ef:	vmovaps xmm0,XMMWORD PTR [rip+0x27ab9]        # 42dfb0 <_IO_stdin_used@@Base+0xfb0>
  4064f7:	vmovups XMMWORD PTR [rdi+0x48],xmm0
  4064fc:	mov    DWORD PTR [rdi+0x58],0x1
  406503:	mov    QWORD PTR [rdi+0x60],0xfffe
  40650b:	lea    rax,[rip+0x27abe]        # 42dfd0 <_IO_stdin_used@@Base+0xfd0>
  406512:	vmovq  xmm0,rax
  406517:	lea    rax,[rip+0x26af2]        # 42d010 <_IO_stdin_used@@Base+0x10>
  40651e:	vmovq  xmm1,rax
  406523:	vpunpcklqdq xmm0,xmm1,xmm0
  406527:	vmovdqu XMMWORD PTR [rdi+0x68],xmm0
  40652c:	lea    rax,[rip+0x27aa3]        # 42dfd6 <_IO_stdin_used@@Base+0xfd6>
  406533:	mov    QWORD PTR [rdi+0x78],rax
  406537:	movabs rax,0x100000000
  406541:	mov    QWORD PTR [rdi+0xa4],rax
  406548:	mov    DWORD PTR [rdi+0xac],0x1
  406552:	mov    DWORD PTR [rdi+0xc4],0x0
  40655c:	vpxor  xmm0,xmm0,xmm0
  406560:	vmovdqu XMMWORD PTR [rdi+0xb0],xmm0
  406568:	vmovaps xmm0,XMMWORD PTR [rip+0x27a50]        # 42dfc0 <_IO_stdin_used@@Base+0xfc0>
  406570:	vmovups XMMWORD PTR [rdi+0xd0],xmm0
  406578:	vzeroupper 
  40657b:	ret    
  40657c:	nop    DWORD PTR [rax+0x0]

0000000000406580 <flatcc_create_context@@Base>:
  406580:	push   r15
  406582:	push   r14
  406584:	push   r13
  406586:	push   r12
  406588:	push   rbx
  406589:	mov    r14,rcx
  40658c:	mov    r15,rdx
  40658f:	mov    r12,rsi
  406592:	mov    r13,rdi
  406595:	mov    edi,0x358
  40659a:	call   4061a0 <malloc@plt>
  40659f:	test   rax,rax
  4065a2:	je     4065ca <flatcc_create_context@@Base+0x4a>
  4065a4:	mov    rbx,rax
  4065a7:	mov    rdi,rax
  4065aa:	mov    rsi,r13
  4065ad:	mov    rdx,r12
  4065b0:	mov    rcx,r15
  4065b3:	mov    r8,r14
  4065b6:	xor    r9d,r9d
  4065b9:	call   41b9f0 <__flatcc_fb_init_parser@@Base>
  4065be:	test   eax,eax
  4065c0:	je     4065cc <flatcc_create_context@@Base+0x4c>
  4065c2:	mov    rdi,rbx
  4065c5:	call   406040 <free@plt>
  4065ca:	xor    ebx,ebx
  4065cc:	mov    rax,rbx
  4065cf:	pop    rbx
  4065d0:	pop    r12
  4065d2:	pop    r13
  4065d4:	pop    r14
  4065d6:	pop    r15
  4065d8:	ret    
  4065d9:	nop    DWORD PTR [rax+0x0]

00000000004065e0 <flatcc_parse_buffer@@Base>:
  4065e0:	push   r15
  4065e2:	push   r14
  4065e4:	push   rbx
  4065e5:	mov    r14,rdx
  4065e8:	mov    r15,rsi
  4065eb:	mov    rbx,rdi
  4065ee:	mov    DWORD PTR [rdi+0xf8],0x1
  4065f8:	mov    rax,QWORD PTR [rdi+0xe8]
  4065ff:	cmp    rax,rdx
  406602:	jae    406621 <flatcc_parse_buffer@@Base+0x41>
  406604:	test   rax,rax
  406607:	je     406621 <flatcc_parse_buffer@@Base+0x41>
  406609:	lea    rsi,[rip+0x279cb]        # 42dfdb <_IO_stdin_used@@Base+0xfdb>
  406610:	mov    rdi,rbx
  406613:	xor    eax,eax
  406615:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  40661a:	mov    eax,0xffffffff
  40661f:	jmp    406660 <flatcc_parse_buffer@@Base+0x80>
  406621:	lea    rsi,[rbx+0x1f8]
  406628:	lea    rdi,[rbx+0x320]
  40662f:	mov    edx,0x1
  406634:	call   418df0 <ptr_set_insert_item@@Base>
  406639:	mov    rdi,rbx
  40663c:	mov    rsi,r15
  40663f:	mov    rdx,r14
  406642:	xor    ecx,ecx
  406644:	call   41bce0 <__flatcc_fb_parse@@Base>
  406649:	mov    ecx,eax
  40664b:	mov    eax,0xffffffff
  406650:	test   ecx,ecx
  406652:	jne    406660 <flatcc_parse_buffer@@Base+0x80>
  406654:	mov    rdi,rbx
  406657:	call   423690 <__flatcc_fb_build_schema@@Base>
  40665c:	neg    eax
  40665e:	sbb    eax,eax
  406660:	pop    rbx
  406661:	pop    r14
  406663:	pop    r15
  406665:	ret    
  406666:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000406670 <flatcc_parse_file@@Base>:
  406670:	push   rbp
  406671:	push   r15
  406673:	push   r14
  406675:	push   r13
  406677:	push   r12
  406679:	push   rbx
  40667a:	sub    rsp,0x28
  40667e:	mov    r13,rsi
  406681:	mov    rbx,rdi
  406684:	mov    rdi,rsi
  406687:	call   4060d0 <strlen@plt>
  40668c:	mov    r12,rax
  40668f:	lea    rbp,[rbx+0x1f8]
  406696:	mov    rdi,QWORD PTR [rbx+0x260]
  40669d:	add    rdi,0x40
  4066a1:	mov    rsi,rbp
  4066a4:	mov    edx,0x1
  4066a9:	call   41aa30 <fb_schema_table_insert_item@@Base>
  4066ae:	xor    r15d,r15d
  4066b1:	test   rax,rax
  4066b4:	je     4066c8 <flatcc_parse_file@@Base+0x58>
  4066b6:	mov    eax,r15d
  4066b9:	add    rsp,0x28
  4066bd:	pop    rbx
  4066be:	pop    r12
  4066c0:	pop    r13
  4066c2:	pop    r14
  4066c4:	pop    r15
  4066c6:	pop    rbp
  4066c7:	ret    
  4066c8:	mov    rax,QWORD PTR [rbx+0x350]
  4066cf:	mov    QWORD PTR [rsp+0x10],rax
  4066d4:	test   rax,rax
  4066d7:	mov    QWORD PTR [rsp+0x18],rbp
  4066dc:	je     406805 <flatcc_parse_file@@Base+0x195>
  4066e2:	cmp    DWORD PTR [rbx+0x1e8],0x0
  4066e9:	jle    40678d <flatcc_parse_file@@Base+0x11d>
  4066ef:	xor    r15d,r15d
  4066f2:	jmp    40670f <flatcc_parse_file@@Base+0x9f>
  4066f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4066fe:	xchg   ax,ax
  406700:	inc    r15
  406703:	movsxd rax,DWORD PTR [rbx+0x1e8]
  40670a:	cmp    r15,rax
  40670d:	jge    40678d <flatcc_parse_file@@Base+0x11d>
  40670f:	mov    rax,QWORD PTR [rbx+0x1d8]
  406716:	mov    rbp,QWORD PTR [rax+r15*8]
  40671a:	mov    rdi,rbp
  40671d:	call   4060d0 <strlen@plt>
  406722:	mov    rdi,rbp
  406725:	mov    rsi,rax
  406728:	mov    rdx,r13
  40672b:	mov    rcx,r12
  40672e:	lea    r8,[rip+0x27e1a]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  406735:	mov    r9d,0x1
  40673b:	call   41ae60 <__flatcc_fb_create_join_path_n@@Base>
  406740:	test   rax,rax
  406743:	je     406c51 <flatcc_parse_file@@Base+0x5e1>
  406749:	mov    rbp,rax
  40674c:	mov    rsi,QWORD PTR [rbx+0xe8]
  406753:	mov    rdi,rax
  406756:	lea    rdx,[rsp+0x8]
  40675b:	call   41b4c0 <__flatcc_fb_read_file@@Base>
  406760:	test   rax,rax
  406763:	jne    40683b <flatcc_parse_file@@Base+0x1cb>
  406769:	mov    rdi,rbp
  40676c:	call   406040 <free@plt>
  406771:	mov    rax,QWORD PTR [rbx+0xe8]
  406778:	cmp    QWORD PTR [rsp+0x8],rax
  40677d:	jbe    406700 <flatcc_parse_file@@Base+0x90>
  40677f:	test   rax,rax
  406782:	je     406700 <flatcc_parse_file@@Base+0x90>
  406788:	jmp    406baf <flatcc_parse_file@@Base+0x53f>
  40678d:	cmp    QWORD PTR [rsp+0x10],0x0
  406793:	je     406bcb <flatcc_parse_file@@Base+0x55b>
  406799:	mov    rbp,QWORD PTR [rbx+0x350]
  4067a0:	mov    rdi,rbp
  4067a3:	call   4060d0 <strlen@plt>
  4067a8:	mov    rdi,rbp
  4067ab:	mov    rsi,rax
  4067ae:	call   41b3d0 <__flatcc_fb_find_basename@@Base>
  4067b3:	lea    r8,[rip+0x27d95]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  4067ba:	mov    rdi,rbp
  4067bd:	mov    rsi,rax
  4067c0:	mov    rdx,r13
  4067c3:	mov    rcx,r12
  4067c6:	mov    r9d,0x1
  4067cc:	call   41ae60 <__flatcc_fb_create_join_path_n@@Base>
  4067d1:	test   rax,rax
  4067d4:	je     406c51 <flatcc_parse_file@@Base+0x5e1>
  4067da:	mov    rbp,rax
  4067dd:	mov    rsi,QWORD PTR [rbx+0xe8]
  4067e4:	lea    rdx,[rsp+0x8]
  4067e9:	mov    rdi,rax
  4067ec:	call   41b4c0 <__flatcc_fb_read_file@@Base>
  4067f1:	test   rax,rax
  4067f4:	mov    r15d,0x0
  4067fa:	je     406b94 <flatcc_parse_file@@Base+0x524>
  406800:	mov    r14,rax
  406803:	jmp    406841 <flatcc_parse_file@@Base+0x1d1>
  406805:	mov    rsi,QWORD PTR [rbx+0xe8]
  40680c:	lea    rdx,[rsp+0x8]
  406811:	mov    rdi,r13
  406814:	call   41b4c0 <__flatcc_fb_read_file@@Base>
  406819:	test   rax,rax
  40681c:	je     4069d1 <flatcc_parse_file@@Base+0x361>
  406822:	mov    r14,rax
  406825:	mov    rdi,r13
  406828:	call   41adc0 <__flatcc_fb_copy_path@@Base>
  40682d:	test   rax,rax
  406830:	je     406c51 <flatcc_parse_file@@Base+0x5e1>
  406836:	mov    rbp,rax
  406839:	jmp    406841 <flatcc_parse_file@@Base+0x1d1>
  40683b:	mov    r14,rax
  40683e:	xor    r15d,r15d
  406841:	mov    rdx,QWORD PTR [rsp+0x8]
  406846:	mov    rax,QWORD PTR [rbx+0x260]
  40684d:	add    QWORD PTR [rax+0x68],rdx
  406851:	mov    QWORD PTR [rbx+0x348],rbp
  406858:	mov    rdi,rbx
  40685b:	mov    rsi,r14
  40685e:	mov    ecx,0x1
  406863:	call   41bce0 <__flatcc_fb_parse@@Base>
  406868:	test   eax,eax
  40686a:	jne    4066b6 <flatcc_parse_file@@Base+0x46>
  406870:	mov    rbp,QWORD PTR [rsp+0x18]
  406875:	mov    r15,QWORD PTR [rbp+0x0]
  406879:	test   r15,r15
  40687c:	je     4069ff <flatcc_parse_file@@Base+0x38f>
  406882:	lea    rax,[rbx+0xe8]
  406889:	mov    QWORD PTR [rsp+0x20],rax
  40688e:	jmp    4068f7 <flatcc_parse_file@@Base+0x287>
  406890:	mov    rax,QWORD PTR [rbx]
  406893:	mov    QWORD PTR [r13+0x0],rax
  406897:	mov    QWORD PTR [rbx],r13
  40689a:	mov    rax,QWORD PTR [rbx+0x348]
  4068a1:	mov    QWORD PTR [r13+0x350],rax
  4068a8:	inc    DWORD PTR [r12+0x64]
  4068ad:	inc    DWORD PTR [r12+0x60]
  4068b2:	mov    rdi,r13
  4068b5:	mov    rsi,r14
  4068b8:	call   406670 <flatcc_parse_file@@Base>
  4068bd:	test   eax,eax
  4068bf:	jne    406c0e <flatcc_parse_file@@Base+0x59e>
  4068c5:	add    r13,0x320
  4068cc:	mov    rdi,r13
  4068cf:	lea    rsi,[rip+0x58a]        # 406e60 <flatcc_destroy_context@@Base+0x40>
  4068d6:	mov    rdx,rbp
  4068d9:	call   419000 <ptr_set_visit@@Base>
  4068de:	mov    rdi,r14
  4068e1:	call   406040 <free@plt>
  4068e6:	mov    r15,QWORD PTR [r15]
  4068e9:	test   r15,r15
  4068ec:	mov    rbp,QWORD PTR [rsp+0x18]
  4068f1:	je     4069ff <flatcc_parse_file@@Base+0x38f>
  4068f7:	mov    rdi,QWORD PTR [r15+0x8]
  4068fb:	movsxd rsi,DWORD PTR [r15+0x10]
  4068ff:	call   41ad70 <__flatcc_fb_copy_path_n@@Base>
  406904:	test   rax,rax
  406907:	je     406c51 <flatcc_parse_file@@Base+0x5e1>
  40690d:	mov    r14,rax
  406910:	mov    r12,QWORD PTR [rbx+0x260]
  406917:	mov    eax,DWORD PTR [rbx+0xf0]
  40691d:	cmp    DWORD PTR [r12+0x64],eax
  406922:	jl     40692c <flatcc_parse_file@@Base+0x2bc>
  406924:	test   eax,eax
  406926:	jg     406bea <flatcc_parse_file@@Base+0x57a>
  40692c:	mov    eax,DWORD PTR [rbx+0xf4]
  406932:	cmp    DWORD PTR [r12+0x60],eax
  406937:	jl     406941 <flatcc_parse_file@@Base+0x2d1>
  406939:	test   eax,eax
  40693b:	jg     406bf3 <flatcc_parse_file@@Base+0x583>
  406941:	mov    edi,0x358
  406946:	call   4061a0 <malloc@plt>
  40694b:	test   rax,rax
  40694e:	je     406c0e <flatcc_parse_file@@Base+0x59e>
  406954:	mov    r13,rax
  406957:	mov    rcx,QWORD PTR [rbx+0x10]
  40695b:	mov    r8,QWORD PTR [rbx+0x18]
  40695f:	mov    rdi,rax
  406962:	mov    rsi,QWORD PTR [rsp+0x20]
  406967:	mov    rdx,r14
  40696a:	mov    r9,r12
  40696d:	call   41b9f0 <__flatcc_fb_init_parser@@Base>
  406972:	test   eax,eax
  406974:	jne    406c06 <flatcc_parse_file@@Base+0x596>
  40697a:	lea    rdi,[r12+0x40]
  40697f:	lea    rsi,[r13+0x1f8]
  406986:	call   41aae0 <fb_schema_table_find_item@@Base>
  40698b:	test   rax,rax
  40698e:	je     406890 <flatcc_parse_file@@Base+0x220>
  406994:	add    rax,0x128
  40699a:	mov    rdi,rax
  40699d:	lea    rsi,[rip+0x4bc]        # 406e60 <flatcc_destroy_context@@Base+0x40>
  4069a4:	mov    rdx,rbp
  4069a7:	call   419000 <ptr_set_visit@@Base>
  4069ac:	nop    DWORD PTR [rax+0x0]
  4069b0:	mov    rbp,QWORD PTR [r13+0x0]
  4069b4:	mov    rdi,r13
  4069b7:	call   421d70 <__flatcc_fb_clear_parser@@Base>
  4069bc:	mov    rdi,r13
  4069bf:	call   406040 <free@plt>
  4069c4:	mov    r13,rbp
  4069c7:	test   rbp,rbp
  4069ca:	jne    4069b0 <flatcc_parse_file@@Base+0x340>
  4069cc:	jmp    4068de <flatcc_parse_file@@Base+0x26e>
  4069d1:	mov    rax,QWORD PTR [rbx+0xe8]
  4069d8:	mov    rcx,QWORD PTR [rbx+0x260]
  4069df:	mov    rcx,QWORD PTR [rcx+0x68]
  4069e3:	add    rcx,QWORD PTR [rsp+0x8]
  4069e8:	cmp    rcx,rax
  4069eb:	jbe    4066e2 <flatcc_parse_file@@Base+0x72>
  4069f1:	test   rax,rax
  4069f4:	jne    406baf <flatcc_parse_file@@Base+0x53f>
  4069fa:	jmp    4066e2 <flatcc_parse_file@@Base+0x72>
  4069ff:	lea    rdi,[rbx+0x320]
  406a06:	mov    rsi,rbp
  406a09:	mov    edx,0x1
  406a0e:	call   418df0 <ptr_set_insert_item@@Base>
  406a13:	mov    rdi,rbx
  406a16:	call   423690 <__flatcc_fb_build_schema@@Base>
  406a1b:	test   eax,eax
  406a1d:	jne    406c16 <flatcc_parse_file@@Base+0x5a6>
  406a23:	cmp    QWORD PTR [rsp+0x10],0x0
  406a29:	mov    r15d,0x0
  406a2f:	jne    4066b6 <flatcc_parse_file@@Base+0x46>
  406a35:	cmp    DWORD PTR [rbx+0x16c],0x0
  406a3c:	je     4066b6 <flatcc_parse_file@@Base+0x46>
  406a42:	cmp    QWORD PTR [rbx+0x350],0x0
  406a4a:	jne    406c7b <flatcc_parse_file@@Base+0x60b>
  406a50:	mov    rax,QWORD PTR [rbx+0x1f0]
  406a57:	test   rax,rax
  406a5a:	lea    rbp,[rip+0x27aee]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  406a61:	cmove  rax,rbp
  406a65:	mov    rcx,QWORD PTR [rbx+0x308]
  406a6c:	mov    rsi,QWORD PTR [rbx+0x170]
  406a73:	mov    r14,QWORD PTR [rbx+0x178]
  406a7a:	test   rsi,rsi
  406a7d:	cmove  rsi,rcx
  406a81:	mov    rdi,rbp
  406a84:	cmove  rdi,rax
  406a88:	lea    rdx,[rip+0x2769b]        # 42e12a <_IO_stdin_used@@Base+0x112a>
  406a8f:	cmovne rdx,rbp
  406a93:	mov    r15,rbp
  406a96:	test   r14,r14
  406a99:	jne    406aba <flatcc_parse_file@@Base+0x44a>
  406a9b:	cmp    DWORD PTR [rbx+0x1bc],0x0
  406aa2:	lea    r8,[rip+0x3e903]        # 4453ac <_IO_stdin_used@@Base+0x183ac>
  406aa9:	lea    rbp,[rip+0x27520]        # 42dfd0 <_IO_stdin_used@@Base+0xfd0>
  406ab0:	cmove  rbp,r8
  406ab4:	mov    r14,rcx
  406ab7:	mov    r15,rax
  406aba:	mov    ecx,0x1
  406abf:	call   41af80 <__flatcc_fb_create_join_path@@Base>
  406ac4:	test   rax,rax
  406ac7:	je     406c51 <flatcc_parse_file@@Base+0x5e1>
  406acd:	mov    r12,rax
  406ad0:	mov    rdi,r15
  406ad3:	mov    rsi,r14
  406ad6:	mov    rdx,rbp
  406ad9:	mov    ecx,0x1
  406ade:	call   41af80 <__flatcc_fb_create_join_path@@Base>
  406ae3:	test   rax,rax
  406ae6:	je     406c51 <flatcc_parse_file@@Base+0x5e1>
  406aec:	mov    rbp,rax
  406aef:	mov    rdi,rax
  406af2:	call   41b3b0 <__flatcc_fb_create_make_path@@Base>
  406af7:	test   rax,rax
  406afa:	je     406c51 <flatcc_parse_file@@Base+0x5e1>
  406b00:	mov    r15,rax
  406b03:	mov    rdi,rbp
  406b06:	call   406040 <free@plt>
  406b0b:	lea    rsi,[rip+0x2761f]        # 42e131 <_IO_stdin_used@@Base+0x1131>
  406b12:	mov    rdi,r12
  406b15:	call   4061e0 <fopen@plt>
  406b1a:	mov    r13,rax
  406b1d:	test   rax,rax
  406b20:	je     406c1e <flatcc_parse_file@@Base+0x5ae>
  406b26:	lea    rsi,[rip+0x27636]        # 42e163 <_IO_stdin_used@@Base+0x1163>
  406b2d:	mov    rdi,r13
  406b30:	mov    rdx,r15
  406b33:	xor    eax,eax
  406b35:	call   406170 <fprintf@plt>
  406b3a:	mov    rbp,QWORD PTR [rbx]
  406b3d:	test   rbp,rbp
  406b40:	je     406b82 <flatcc_parse_file@@Base+0x512>
  406b42:	lea    r14,[rip+0x2761e]        # 42e167 <_IO_stdin_used@@Base+0x1167>
  406b49:	mov    rdi,QWORD PTR [rbp+0x348]
  406b50:	call   41b3b0 <__flatcc_fb_create_make_path@@Base>
  406b55:	test   rax,rax
  406b58:	je     406c51 <flatcc_parse_file@@Base+0x5e1>
  406b5e:	mov    rbx,rax
  406b61:	mov    rdi,r13
  406b64:	mov    rsi,r14
  406b67:	mov    rdx,rax
  406b6a:	xor    eax,eax
  406b6c:	call   406170 <fprintf@plt>
  406b71:	mov    rbp,QWORD PTR [rbp+0x0]
  406b75:	mov    rdi,rbx
  406b78:	call   406040 <free@plt>
  406b7d:	test   rbp,rbp
  406b80:	jne    406b49 <flatcc_parse_file@@Base+0x4d9>
  406b82:	mov    edi,0xa
  406b87:	mov    rsi,r13
  406b8a:	call   406160 <fputc_unlocked@plt>
  406b8f:	jmp    406c32 <flatcc_parse_file@@Base+0x5c2>
  406b94:	mov    rdi,rbp
  406b97:	call   406040 <free@plt>
  406b9c:	mov    rax,QWORD PTR [rbx+0xe8]
  406ba3:	cmp    QWORD PTR [rsp+0x8],rax
  406ba8:	jbe    406bcb <flatcc_parse_file@@Base+0x55b>
  406baa:	test   rax,rax
  406bad:	je     406bcb <flatcc_parse_file@@Base+0x55b>
  406baf:	lea    rsi,[rip+0x27425]        # 42dfdb <_IO_stdin_used@@Base+0xfdb>
  406bb6:	mov    rdi,rbx
  406bb9:	xor    eax,eax
  406bbb:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  406bc0:	mov    r15d,0xffffffff
  406bc6:	jmp    4066b6 <flatcc_parse_file@@Base+0x46>
  406bcb:	lea    rsi,[rip+0x2742d]        # 42dfff <_IO_stdin_used@@Base+0xfff>
  406bd2:	mov    rdi,rbx
  406bd5:	mov    rdx,r13
  406bd8:	xor    eax,eax
  406bda:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  406bdf:	mov    r15d,0xffffffff
  406be5:	jmp    4066b6 <flatcc_parse_file@@Base+0x46>
  406bea:	lea    rsi,[rip+0x27459]        # 42e04a <_IO_stdin_used@@Base+0x104a>
  406bf1:	jmp    406bfa <flatcc_parse_file@@Base+0x58a>
  406bf3:	lea    rsi,[rip+0x27470]        # 42e06a <_IO_stdin_used@@Base+0x106a>
  406bfa:	mov    rdi,rbx
  406bfd:	xor    eax,eax
  406bff:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  406c04:	jmp    406c0e <flatcc_parse_file@@Base+0x59e>
  406c06:	mov    rdi,r13
  406c09:	call   406040 <free@plt>
  406c0e:	mov    rdi,r14
  406c11:	call   406040 <free@plt>
  406c16:	xor    r15d,r15d
  406c19:	jmp    4066b6 <flatcc_parse_file@@Base+0x46>
  406c1e:	lea    rsi,[rip+0x2750f]        # 42e134 <_IO_stdin_used@@Base+0x1134>
  406c25:	mov    rdi,rbx
  406c28:	mov    rdx,r12
  406c2b:	xor    eax,eax
  406c2d:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  406c32:	mov    rdi,r12
  406c35:	call   406040 <free@plt>
  406c3a:	mov    rdi,r15
  406c3d:	call   406040 <free@plt>
  406c42:	test   r13,r13
  406c45:	je     406c16 <flatcc_parse_file@@Base+0x5a6>
  406c47:	mov    rdi,r13
  406c4a:	call   4060c0 <fclose@plt>
  406c4f:	jmp    406c16 <flatcc_parse_file@@Base+0x5a6>
  406c51:	mov    rax,QWORD PTR [rip+0x493a0]        # 44fff8 <stderr@GLIBC_2.2.5>
  406c58:	mov    rcx,QWORD PTR [rax]
  406c5b:	lea    rdi,[rip+0x273c5]        # 42e027 <_IO_stdin_used@@Base+0x1027>
  406c62:	mov    esi,0x22
  406c67:	mov    edx,0x1
  406c6c:	call   406220 <fwrite@plt>
  406c71:	mov    edi,0x1
  406c76:	call   406210 <exit@plt>
  406c7b:	lea    rdi,[rip+0x27406]        # 42e088 <_IO_stdin_used@@Base+0x1088>
  406c82:	lea    rsi,[rip+0x27414]        # 42e09d <_IO_stdin_used@@Base+0x109d>
  406c89:	lea    rcx,[rip+0x2746d]        # 42e0fd <_IO_stdin_used@@Base+0x10fd>
  406c90:	mov    edx,0xdc
  406c95:	call   4060f0 <__assert_fail@plt>
  406c9a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406ca0 <flatcc_generate_binary_schema_to_buffer@@Base>:
  406ca0:	push   rax
  406ca1:	mov    rax,rsi
  406ca4:	mov    QWORD PTR [rsp],rdx
  406ca8:	lea    rdx,[rdi+0xe8]
  406caf:	lea    rsi,[rdi+0x1f8]
  406cb6:	mov    rcx,rsp
  406cb9:	mov    rdi,rdx
  406cbc:	mov    rdx,rax
  406cbf:	call   416860 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>
  406cc4:	xor    ecx,ecx
  406cc6:	cmp    rax,0x1
  406cca:	sbb    ecx,ecx
  406ccc:	or     ecx,DWORD PTR [rsp]
  406ccf:	mov    eax,ecx
  406cd1:	pop    rcx
  406cd2:	ret    
  406cd3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406cdd:	nop    DWORD PTR [rax]

0000000000406ce0 <flatcc_generate_binary_schema@@Base>:
  406ce0:	mov    rdx,rsi
  406ce3:	lea    rax,[rdi+0xe8]
  406cea:	lea    rsi,[rdi+0x1f8]
  406cf1:	mov    rdi,rax
  406cf4:	jmp    417a60 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>
  406cf9:	nop    DWORD PTR [rax+0x0]

0000000000406d00 <flatcc_generate_files@@Base>:
  406d00:	push   rbp
  406d01:	push   r15
  406d03:	push   r14
  406d05:	push   rbx
  406d06:	sub    rsp,0x108
  406d0d:	mov    r15d,0xffffffff
  406d13:	test   rdi,rdi
  406d16:	je     406d24 <flatcc_generate_files@@Base+0x24>
  406d18:	mov    rbx,rdi
  406d1b:	cmp    DWORD PTR [rdi+0xd0],0x0
  406d22:	je     406d35 <flatcc_generate_files@@Base+0x35>
  406d24:	mov    eax,r15d
  406d27:	add    rsp,0x108
  406d2e:	pop    rbx
  406d2f:	pop    r14
  406d31:	pop    r15
  406d33:	pop    rbp
  406d34:	ret    
  406d35:	xor    eax,eax
  406d37:	mov    rcx,rbx
  406d3a:	nop    WORD PTR [rax+rax*1+0x0]
  406d40:	mov    rbp,rcx
  406d43:	mov    QWORD PTR [rcx+0x8],rax
  406d47:	mov    rcx,QWORD PTR [rcx]
  406d4a:	mov    rax,rbp
  406d4d:	test   rcx,rcx
  406d50:	jne    406d40 <flatcc_generate_files@@Base+0x40>
  406d52:	lea    r14,[rbx+0xe8]
  406d59:	cmp    DWORD PTR [rbx+0x1bc],0x0
  406d60:	je     406d75 <flatcc_generate_files@@Base+0x75>
  406d62:	lea    rsi,[rbx+0x1f8]
  406d69:	mov    rdi,r14
  406d6c:	call   417ad0 <__flatcc_fb_codegen_bfbs_to_file@@Base>
  406d71:	test   eax,eax
  406d73:	jne    406d24 <flatcc_generate_files@@Base+0x24>
  406d75:	lea    rdi,[rsp+0x8]
  406d7a:	mov    rsi,r14
  406d7d:	call   406fe0 <__flatcc_fb_init_output_c@@Base>
  406d82:	test   eax,eax
  406d84:	jne    406d24 <flatcc_generate_files@@Base+0x24>
  406d86:	cmp    DWORD PTR [rbx+0x188],0x0
  406d8d:	je     406dda <flatcc_generate_files@@Base+0xda>
  406d8f:	xor    r15d,r15d
  406d92:	cmp    DWORD PTR [rbx+0xe4],0x0
  406d99:	je     406e0c <flatcc_generate_files@@Base+0x10c>
  406d9b:	cmp    DWORD PTR [rbx+0x1b4],0x0
  406da2:	je     406ded <flatcc_generate_files@@Base+0xed>
  406da4:	test   rbp,rbp
  406da7:	je     406e0c <flatcc_generate_files@@Base+0x10c>
  406da9:	lea    rbx,[rsp+0x8]
  406dae:	cmp    DWORD PTR [rbp+0xd0],0x0
  406db5:	jne    406e06 <flatcc_generate_files@@Base+0x106>
  406db7:	lea    rsi,[rbp+0x1f8]
  406dbe:	mov    rdi,rbx
  406dc1:	call   407700 <__flatcc_fb_codegen_c@@Base>
  406dc6:	test   eax,eax
  406dc8:	setne  cl
  406dcb:	mov    rbp,QWORD PTR [rbp+0x8]
  406dcf:	test   rbp,rbp
  406dd2:	je     406e08 <flatcc_generate_files@@Base+0x108>
  406dd4:	test   eax,eax
  406dd6:	je     406dae <flatcc_generate_files@@Base+0xae>
  406dd8:	jmp    406e08 <flatcc_generate_files@@Base+0x108>
  406dda:	lea    rdi,[rsp+0x8]
  406ddf:	call   407600 <__flatcc_fb_codegen_common_c@@Base>
  406de4:	mov    r15d,eax
  406de7:	test   eax,eax
  406de9:	jne    406e0c <flatcc_generate_files@@Base+0x10c>
  406deb:	jmp    406d8f <flatcc_generate_files@@Base+0x8f>
  406ded:	add    rbx,0x1f8
  406df4:	lea    rdi,[rsp+0x8]
  406df9:	mov    rsi,rbx
  406dfc:	call   407700 <__flatcc_fb_codegen_c@@Base>
  406e01:	mov    r15d,eax
  406e04:	jmp    406e0c <flatcc_generate_files@@Base+0x10c>
  406e06:	mov    cl,0x1
  406e08:	movzx  r15d,cl
  406e0c:	lea    rdi,[rsp+0x8]
  406e11:	call   406fb0 <__flatcc_fb_end_output_c@@Base>
  406e16:	jmp    406d24 <flatcc_generate_files@@Base+0x24>
  406e1b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406e20 <flatcc_destroy_context@@Base>:
  406e20:	push   r14
  406e22:	push   rbx
  406e23:	push   rax
  406e24:	test   rdi,rdi
  406e27:	je     406e4b <flatcc_destroy_context@@Base+0x2b>
  406e29:	mov    rbx,rdi
  406e2c:	nop    DWORD PTR [rax+0x0]
  406e30:	mov    r14,QWORD PTR [rbx]
  406e33:	mov    rdi,rbx
  406e36:	call   421d70 <__flatcc_fb_clear_parser@@Base>
  406e3b:	mov    rdi,rbx
  406e3e:	call   406040 <free@plt>
  406e43:	mov    rbx,r14
  406e46:	test   r14,r14
  406e49:	jne    406e30 <flatcc_destroy_context@@Base+0x10>
  406e4b:	add    rsp,0x8
  406e4f:	pop    rbx
  406e50:	pop    r14
  406e52:	ret    
  406e53:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406e5d:	nop    DWORD PTR [rax]
  406e60:	add    rdi,0x128
  406e67:	mov    edx,0x1
  406e6c:	jmp    418df0 <ptr_set_insert_item@@Base>
  406e71:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406e7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406e80 <__flatcc_fb_open_output_file@@Base>:
  406e80:	push   rbp
  406e81:	push   r15
  406e83:	push   r14
  406e85:	push   r13
  406e87:	push   r12
  406e89:	push   rbx
  406e8a:	push   rax
  406e8b:	mov    rax,QWORD PTR [rdi+0xe0]
  406e92:	mov    rax,QWORD PTR [rax+0x108]
  406e99:	test   rax,rax
  406e9c:	lea    rbx,[rip+0x276ac]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  406ea3:	cmovne rbx,rax
  406ea7:	xor    ebp,ebp
  406ea9:	cmp    QWORD PTR [rdi+0xd0],0x0
  406eb1:	jne    406f0e <__flatcc_fb_open_output_file@@Base+0x8e>
  406eb3:	mov    r14,rcx
  406eb6:	mov    r15,rdx
  406eb9:	mov    r12,rsi
  406ebc:	mov    r13,rdi
  406ebf:	mov    rdi,rbx
  406ec2:	call   4060d0 <strlen@plt>
  406ec7:	mov    rdi,rbx
  406eca:	mov    rsi,rax
  406ecd:	mov    rdx,r12
  406ed0:	mov    rcx,r15
  406ed3:	mov    r8,r14
  406ed6:	mov    r9d,0x1
  406edc:	call   41ae60 <__flatcc_fb_create_join_path_n@@Base>
  406ee1:	test   rax,rax
  406ee4:	je     406f41 <__flatcc_fb_open_output_file@@Base+0xc1>
  406ee6:	mov    r14,rax
  406ee9:	lea    rsi,[rip+0x27241]        # 42e131 <_IO_stdin_used@@Base+0x1131>
  406ef0:	mov    rdi,rax
  406ef3:	call   4061e0 <fopen@plt>
  406ef8:	mov    QWORD PTR [r13+0xd0],rax
  406eff:	xor    ebp,ebp
  406f01:	test   rax,rax
  406f04:	je     406f1f <__flatcc_fb_open_output_file@@Base+0x9f>
  406f06:	mov    rdi,r14
  406f09:	call   406040 <free@plt>
  406f0e:	mov    eax,ebp
  406f10:	add    rsp,0x8
  406f14:	pop    rbx
  406f15:	pop    r12
  406f17:	pop    r13
  406f19:	pop    r14
  406f1b:	pop    r15
  406f1d:	pop    rbp
  406f1e:	ret    
  406f1f:	mov    rax,QWORD PTR [rip+0x490d2]        # 44fff8 <stderr@GLIBC_2.2.5>
  406f26:	mov    rdi,QWORD PTR [rax]
  406f29:	lea    rsi,[rip+0x2723b]        # 42e16b <_IO_stdin_used@@Base+0x116b>
  406f30:	mov    rdx,r14
  406f33:	xor    eax,eax
  406f35:	call   406170 <fprintf@plt>
  406f3a:	mov    ebp,0xffffffff
  406f3f:	jmp    406f06 <__flatcc_fb_open_output_file@@Base+0x86>
  406f41:	mov    rax,QWORD PTR [rip+0x490b0]        # 44fff8 <stderr@GLIBC_2.2.5>
  406f48:	mov    rcx,QWORD PTR [rax]
  406f4b:	lea    rdi,[rip+0x270d5]        # 42e027 <_IO_stdin_used@@Base+0x1027>
  406f52:	mov    esi,0x22
  406f57:	mov    edx,0x1
  406f5c:	call   406220 <fwrite@plt>
  406f61:	mov    edi,0x1
  406f66:	call   406210 <exit@plt>
  406f6b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406f70 <__flatcc_fb_close_output_file@@Base>:
  406f70:	push   rbx
  406f71:	mov    rax,QWORD PTR [rdi+0xe0]
  406f78:	cmp    QWORD PTR [rax+0x98],0x0
  406f80:	jne    406faa <__flatcc_fb_close_output_file@@Base+0x3a>
  406f82:	cmp    DWORD PTR [rax+0x80],0x0
  406f89:	jne    406faa <__flatcc_fb_close_output_file@@Base+0x3a>
  406f8b:	mov    rbx,rdi
  406f8e:	mov    rdi,QWORD PTR [rdi+0xd0]
  406f95:	test   rdi,rdi
  406f98:	je     406faa <__flatcc_fb_close_output_file@@Base+0x3a>
  406f9a:	call   4060c0 <fclose@plt>
  406f9f:	mov    QWORD PTR [rbx+0xd0],0x0
  406faa:	pop    rbx
  406fab:	ret    
  406fac:	nop    DWORD PTR [rax+0x0]

0000000000406fb0 <__flatcc_fb_end_output_c@@Base>:
  406fb0:	push   rbx
  406fb1:	mov    rbx,rdi
  406fb4:	mov    rdi,QWORD PTR [rdi+0xd0]
  406fbb:	test   rdi,rdi
  406fbe:	je     406fd1 <__flatcc_fb_end_output_c@@Base+0x21>
  406fc0:	mov    rax,QWORD PTR [rip+0x49019]        # 44ffe0 <stdout@GLIBC_2.2.5>
  406fc7:	cmp    rdi,QWORD PTR [rax]
  406fca:	je     406fd1 <__flatcc_fb_end_output_c@@Base+0x21>
  406fcc:	call   4060c0 <fclose@plt>
  406fd1:	mov    QWORD PTR [rbx+0xd0],0x0
  406fdc:	pop    rbx
  406fdd:	ret    
  406fde:	xchg   ax,ax

0000000000406fe0 <__flatcc_fb_init_output_c@@Base>:
  406fe0:	push   rbp
  406fe1:	push   r15
  406fe3:	push   r14
  406fe5:	push   r13
  406fe7:	push   r12
  406fe9:	push   rbx
  406fea:	push   rax
  406feb:	mov    r12,rsi
  406fee:	mov    rbx,rdi
  406ff1:	cmp    DWORD PTR [rsi+0xa0],0x0
  406ff8:	lea    rax,[rip+0x27132]        # 42e131 <_IO_stdin_used@@Base+0x1131>
  406fff:	lea    r14,[rip+0x27187]        # 42e18d <_IO_stdin_used@@Base+0x118d>
  407006:	cmove  r14,rax
  40700a:	mov    rax,QWORD PTR [rsi+0x108]
  407011:	test   rax,rax
  407014:	lea    r15,[rip+0x27534]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  40701b:	vxorps xmm0,xmm0,xmm0
  40701f:	vmovups YMMWORD PTR [rdi+0xe0],ymm0
  407027:	vmovups YMMWORD PTR [rdi+0xc0],ymm0
  40702f:	vmovups YMMWORD PTR [rdi+0xa0],ymm0
  407037:	vmovups YMMWORD PTR [rdi+0x80],ymm0
  40703f:	vmovups YMMWORD PTR [rdi+0x60],ymm0
  407044:	vmovups YMMWORD PTR [rdi+0x40],ymm0
  407049:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  40704e:	cmovne r15,rax
  407052:	vmovups YMMWORD PTR [rdi],ymm0
  407056:	mov    QWORD PTR [rdi+0xe0],rsi
  40705d:	mov    rbp,QWORD PTR [rsi+0xe8]
  407064:	test   rbp,rbp
  407067:	je     4070a4 <__flatcc_fb_init_output_c@@Base+0xc4>
  407069:	mov    rdi,rbp
  40706c:	vzeroupper 
  40706f:	call   4060d0 <strlen@plt>
  407074:	mov    r13,rax
  407077:	cmp    rax,0x65
  40707b:	jb     4070b1 <__flatcc_fb_init_output_c@@Base+0xd1>
  40707d:	mov    rax,QWORD PTR [rip+0x48f74]        # 44fff8 <stderr@GLIBC_2.2.5>
  407084:	mov    rdi,QWORD PTR [rax]
  407087:	lea    rsi,[rip+0x27102]        # 42e190 <_IO_stdin_used@@Base+0x1190>
  40708e:	mov    edx,0x64
  407093:	xor    eax,eax
  407095:	call   406170 <fprintf@plt>
  40709a:	mov    ebx,0xffffffff
  40709f:	jmp    407194 <__flatcc_fb_init_output_c@@Base+0x1b4>
  4070a4:	lea    rbp,[rip+0x2711c]        # 42e1c7 <_IO_stdin_used@@Base+0x11c7>
  4070ab:	mov    r13d,0xb
  4070b1:	mov    QWORD PTR [rsp],r14
  4070b5:	mov    edx,0x64
  4070ba:	mov    rdi,rbx
  4070bd:	mov    rsi,rbp
  4070c0:	vzeroupper 
  4070c3:	call   406050 <strncpy@plt>
  4070c8:	mov    BYTE PTR [rbx+0x64],0x0
  4070cc:	test   r13,r13
  4070cf:	je     4070d8 <__flatcc_fb_init_output_c@@Base+0xf8>
  4070d1:	mov    WORD PTR [rbx+r13*1],0x5f
  4070d8:	lea    rbp,[rbx+0x66]
  4070dc:	mov    r14b,BYTE PTR [rbx]
  4070df:	test   r14b,r14b
  4070e2:	je     40710b <__flatcc_fb_init_output_c@@Base+0x12b>
  4070e4:	call   406030 <__ctype_toupper_loc@plt>
  4070e9:	nop    DWORD PTR [rax+0x0]
  4070f0:	mov    rcx,QWORD PTR [rax]
  4070f3:	movsx  rdx,r14b
  4070f7:	movzx  ecx,BYTE PTR [rcx+rdx*4]
  4070fb:	mov    BYTE PTR [rbp+0x0],cl
  4070fe:	movzx  r14d,BYTE PTR [rbp-0x65]
  407103:	inc    rbp
  407106:	test   r14b,r14b
  407109:	jne    4070f0 <__flatcc_fb_init_output_c@@Base+0x110>
  40710b:	mov    BYTE PTR [rbp+0x0],0x0
  40710f:	mov    BYTE PTR [rbx+r13*1+0x66],0x0
  407115:	mov    eax,DWORD PTR [r12+0xd0]
  40711d:	mov    DWORD PTR [rbx+0xf4],eax
  407123:	cmp    DWORD PTR [r12+0x80],0x0
  40712c:	je     407143 <__flatcc_fb_init_output_c@@Base+0x163>
  40712e:	mov    rax,QWORD PTR [rip+0x48eab]        # 44ffe0 <stdout@GLIBC_2.2.5>
  407135:	mov    rax,QWORD PTR [rax]
  407138:	mov    QWORD PTR [rbx+0xd0],rax
  40713f:	xor    ebx,ebx
  407141:	jmp    407194 <__flatcc_fb_init_output_c@@Base+0x1b4>
  407143:	mov    rax,QWORD PTR [rbx+0xe0]
  40714a:	mov    rsi,QWORD PTR [rax+0x98]
  407151:	test   rsi,rsi
  407154:	je     40713f <__flatcc_fb_init_output_c@@Base+0x15f>
  407156:	lea    rdx,[rip+0x273f2]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  40715d:	mov    rdi,r15
  407160:	mov    ecx,0x1
  407165:	call   41af80 <__flatcc_fb_create_join_path@@Base>
  40716a:	test   rax,rax
  40716d:	je     4071c7 <__flatcc_fb_init_output_c@@Base+0x1e7>
  40716f:	mov    r15,rax
  407172:	mov    rdi,rax
  407175:	mov    rsi,QWORD PTR [rsp]
  407179:	call   4061e0 <fopen@plt>
  40717e:	mov    QWORD PTR [rbx+0xd0],rax
  407185:	xor    ebx,ebx
  407187:	test   rax,rax
  40718a:	je     4071a5 <__flatcc_fb_init_output_c@@Base+0x1c5>
  40718c:	mov    rdi,r15
  40718f:	call   406040 <free@plt>
  407194:	mov    eax,ebx
  407196:	add    rsp,0x8
  40719a:	pop    rbx
  40719b:	pop    r12
  40719d:	pop    r13
  40719f:	pop    r14
  4071a1:	pop    r15
  4071a3:	pop    rbp
  4071a4:	ret    
  4071a5:	mov    rax,QWORD PTR [rip+0x48e4c]        # 44fff8 <stderr@GLIBC_2.2.5>
  4071ac:	mov    rdi,QWORD PTR [rax]
  4071af:	lea    rsi,[rip+0x26fb5]        # 42e16b <_IO_stdin_used@@Base+0x116b>
  4071b6:	mov    rdx,r15
  4071b9:	xor    eax,eax
  4071bb:	call   406170 <fprintf@plt>
  4071c0:	mov    ebx,0xffffffff
  4071c5:	jmp    40718c <__flatcc_fb_init_output_c@@Base+0x1ac>
  4071c7:	mov    rax,QWORD PTR [rip+0x48e2a]        # 44fff8 <stderr@GLIBC_2.2.5>
  4071ce:	mov    rcx,QWORD PTR [rax]
  4071d1:	lea    rdi,[rip+0x26e4f]        # 42e027 <_IO_stdin_used@@Base+0x1027>
  4071d8:	mov    esi,0x22
  4071dd:	mov    edx,0x1
  4071e2:	call   406220 <fwrite@plt>
  4071e7:	mov    edi,0x1
  4071ec:	call   406210 <exit@plt>
  4071f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4071fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407200 <__flatcc_fb_gen_c_includes@@Base>:
  407200:	push   rbp
  407201:	mov    rbp,rsp
  407204:	push   r15
  407206:	push   r14
  407208:	push   r13
  40720a:	push   r12
  40720c:	push   rbx
  40720d:	and    rsp,0xffffffffffffffe0
  407211:	sub    rsp,0x60
  407215:	mov    QWORD PTR [rsp+0x18],rdx
  40721a:	mov    QWORD PTR [rsp+0x10],rsi
  40721f:	mov    rbx,rdi
  407222:	mov    rax,QWORD PTR [rdi+0xd8]
  407229:	mov    r15,QWORD PTR [rax]
  40722c:	vxorps xmm0,xmm0,xmm0
  407230:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  407236:	mov    rdi,QWORD PTR [rax+0x118]
  40723d:	vzeroupper 
  407240:	call   41adc0 <__flatcc_fb_copy_path@@Base>
  407245:	lea    rdi,[rsp+0x20]
  40724a:	mov    rsi,rax
  40724d:	mov    edx,0x1
  407252:	call   418710 <str_set_insert_item@@Base>
  407257:	test   r15,r15
  40725a:	jne    407289 <__flatcc_fb_gen_c_includes@@Base+0x89>
  40725c:	jmp    40733f <__flatcc_fb_gen_c_includes@@Base+0x13f>
  407261:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40726b:	nop    DWORD PTR [rax+rax*1+0x0]
  407270:	mov    rdi,r14
  407273:	call   406040 <free@plt>
  407278:	mov    rdi,r13
  40727b:	call   406040 <free@plt>
  407280:	test   r15,r15
  407283:	je     40733f <__flatcc_fb_gen_c_includes@@Base+0x13f>
  407289:	mov    rdi,QWORD PTR [r15+0x8]
  40728d:	movsxd rsi,DWORD PTR [r15+0x10]
  407291:	mov    rax,QWORD PTR [rbx+0xe0]
  407298:	mov    rdx,QWORD PTR [rax+0x68]
  40729c:	call   41b400 <__flatcc_fb_create_basename@@Base>
  4072a1:	test   rax,rax
  4072a4:	je     407361 <__flatcc_fb_gen_c_includes@@Base+0x161>
  4072aa:	mov    r13,rax
  4072ad:	mov    r15,QWORD PTR [r15]
  4072b0:	mov    rdi,rax
  4072b3:	call   41adc0 <__flatcc_fb_copy_path@@Base>
  4072b8:	test   rax,rax
  4072bb:	je     407361 <__flatcc_fb_gen_c_includes@@Base+0x161>
  4072c1:	mov    r14,rax
  4072c4:	mov    r12b,BYTE PTR [rax]
  4072c7:	test   r12b,r12b
  4072ca:	je     4072fa <__flatcc_fb_gen_c_includes@@Base+0xfa>
  4072cc:	call   406030 <__ctype_toupper_loc@plt>
  4072d1:	mov    rcx,r14
  4072d4:	inc    rcx
  4072d7:	nop    WORD PTR [rax+rax*1+0x0]
  4072e0:	mov    rdx,QWORD PTR [rax]
  4072e3:	movsx  rsi,r12b
  4072e7:	movzx  edx,BYTE PTR [rdx+rsi*4]
  4072eb:	mov    BYTE PTR [rcx-0x1],dl
  4072ee:	movzx  r12d,BYTE PTR [rcx]
  4072f2:	inc    rcx
  4072f5:	test   r12b,r12b
  4072f8:	jne    4072e0 <__flatcc_fb_gen_c_includes@@Base+0xe0>
  4072fa:	lea    rdi,[rsp+0x20]
  4072ff:	mov    rsi,r14
  407302:	mov    edx,0x1
  407307:	call   418710 <str_set_insert_item@@Base>
  40730c:	test   rax,rax
  40730f:	jne    407270 <__flatcc_fb_gen_c_includes@@Base+0x70>
  407315:	mov    rdi,QWORD PTR [rbx+0xd0]
  40731c:	lea    rsi,[rip+0x26eb0]        # 42e1d3 <_IO_stdin_used@@Base+0x11d3>
  407323:	mov    rdx,r14
  407326:	mov    rcx,QWORD PTR [rsp+0x18]
  40732b:	mov    r8,r13
  40732e:	mov    r9,QWORD PTR [rsp+0x10]
  407333:	xor    eax,eax
  407335:	call   406170 <fprintf@plt>
  40733a:	jmp    407278 <__flatcc_fb_gen_c_includes@@Base+0x78>
  40733f:	lea    rsi,[rip+0x4a]        # 407390 <__flatcc_fb_gen_c_includes@@Base+0x190>
  407346:	lea    rdi,[rsp+0x20]
  40734b:	xor    edx,edx
  40734d:	call   418320 <str_set_destroy@@Base>
  407352:	lea    rsp,[rbp-0x28]
  407356:	pop    rbx
  407357:	pop    r12
  407359:	pop    r13
  40735b:	pop    r14
  40735d:	pop    r15
  40735f:	pop    rbp
  407360:	ret    
  407361:	mov    rax,QWORD PTR [rip+0x48c90]        # 44fff8 <stderr@GLIBC_2.2.5>
  407368:	mov    rcx,QWORD PTR [rax]
  40736b:	lea    rdi,[rip+0x26cb5]        # 42e027 <_IO_stdin_used@@Base+0x1027>
  407372:	mov    esi,0x22
  407377:	mov    edx,0x1
  40737c:	call   406220 <fwrite@plt>
  407381:	mov    edi,0x1
  407386:	call   406210 <exit@plt>
  40738b:	nop    DWORD PTR [rax+rax*1+0x0]
  407390:	mov    rdi,rsi
  407393:	jmp    406040 <free@plt>
  407398:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004073a0 <__flatcc_fb_copy_scope@@Base>:
  4073a0:	push   r15
  4073a2:	push   r14
  4073a4:	push   r12
  4073a6:	push   rbx
  4073a7:	push   rax
  4073a8:	mov    r14,rsi
  4073ab:	mov    r15,rdi
  4073ae:	movsxd r12,DWORD PTR [rdi+0x30]
  4073b2:	mov    rcx,QWORD PTR [rdi]
  4073b5:	mov    rax,r12
  4073b8:	test   rcx,rcx
  4073bb:	je     4073da <__flatcc_fb_copy_scope@@Base+0x3a>
  4073bd:	mov    rax,r12
  4073c0:	mov    rdx,QWORD PTR [rcx+0x8]
  4073c4:	mov    rsi,QWORD PTR [rcx]
  4073c7:	mov    rcx,QWORD PTR [rdx+0x8]
  4073cb:	add    rax,rcx
  4073ce:	add    rax,0x1
  4073d2:	mov    rcx,rsi
  4073d5:	test   rsi,rsi
  4073d8:	jne    4073c0 <__flatcc_fb_copy_scope@@Base+0x20>
  4073da:	cmp    rax,0x66
  4073de:	jb     4073ec <__flatcc_fb_copy_scope@@Base+0x4c>
  4073e0:	mov    BYTE PTR [r14],0x0
  4073e4:	mov    r12d,0xffffffff
  4073ea:	jmp    407444 <__flatcc_fb_copy_scope@@Base+0xa4>
  4073ec:	mov    rsi,QWORD PTR [r15+0x28]
  4073f0:	mov    rdi,r14
  4073f3:	mov    rdx,r12
  4073f6:	call   406190 <memcpy@plt>
  4073fb:	mov    rbx,QWORD PTR [r15]
  4073fe:	test   rbx,rbx
  407401:	je     40743f <__flatcc_fb_copy_scope@@Base+0x9f>
  407403:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40740d:	nop    DWORD PTR [rax]
  407410:	mov    rax,QWORD PTR [rbx+0x8]
  407414:	mov    rsi,QWORD PTR [rax]
  407417:	mov    r15,QWORD PTR [rax+0x8]
  40741b:	lea    rdi,[r14+r12*1]
  40741f:	mov    rdx,r15
  407422:	call   406190 <memcpy@plt>
  407427:	lea    rax,[r15+r12*1]
  40742b:	add    r12,r15
  40742e:	add    r12,0x1
  407432:	mov    BYTE PTR [r14+rax*1],0x5f
  407437:	mov    rbx,QWORD PTR [rbx]
  40743a:	test   rbx,rbx
  40743d:	jne    407410 <__flatcc_fb_copy_scope@@Base+0x70>
  40743f:	mov    BYTE PTR [r14+r12*1],0x0
  407444:	mov    eax,r12d
  407447:	add    rsp,0x8
  40744b:	pop    rbx
  40744c:	pop    r12
  40744e:	pop    r14
  407450:	pop    r15
  407452:	ret    
  407453:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40745d:	nop    DWORD PTR [rax]

0000000000407460 <__flatcc_fb_scoped_symbol_name@@Base>:
  407460:	push   r15
  407462:	push   r14
  407464:	push   r13
  407466:	push   r12
  407468:	push   rbx
  407469:	mov    r14,rdx
  40746c:	mov    r13,QWORD PTR [rsi+0x8]
  407470:	cmp    QWORD PTR [rdx+0xd0],rdi
  407477:	je     407524 <__flatcc_fb_scoped_symbol_name@@Base+0xc4>
  40747d:	mov    r15,rdi
  407480:	movsxd r12,DWORD PTR [rdi+0x30]
  407484:	mov    rcx,QWORD PTR [rdi]
  407487:	mov    rax,r12
  40748a:	test   rcx,rcx
  40748d:	je     4074ba <__flatcc_fb_scoped_symbol_name@@Base+0x5a>
  40748f:	mov    rax,r12
  407492:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40749c:	nop    DWORD PTR [rax+0x0]
  4074a0:	mov    rdx,QWORD PTR [rcx+0x8]
  4074a4:	mov    rsi,QWORD PTR [rcx]
  4074a7:	mov    rcx,QWORD PTR [rdx+0x8]
  4074ab:	add    rax,rcx
  4074ae:	add    rax,0x1
  4074b2:	mov    rcx,rsi
  4074b5:	test   rsi,rsi
  4074b8:	jne    4074a0 <__flatcc_fb_scoped_symbol_name@@Base+0x40>
  4074ba:	cmp    rax,0x66
  4074be:	jae    4075ae <__flatcc_fb_scoped_symbol_name@@Base+0x14e>
  4074c4:	mov    rsi,QWORD PTR [r15+0x28]
  4074c8:	mov    rdi,r14
  4074cb:	mov    rdx,r12
  4074ce:	call   406190 <memcpy@plt>
  4074d3:	mov    rbx,QWORD PTR [r15]
  4074d6:	test   rbx,rbx
  4074d9:	je     40750f <__flatcc_fb_scoped_symbol_name@@Base+0xaf>
  4074db:	nop    DWORD PTR [rax+rax*1+0x0]
  4074e0:	mov    rax,QWORD PTR [rbx+0x8]
  4074e4:	mov    rsi,QWORD PTR [rax]
  4074e7:	mov    r15,QWORD PTR [rax+0x8]
  4074eb:	lea    rdi,[r14+r12*1]
  4074ef:	mov    rdx,r15
  4074f2:	call   406190 <memcpy@plt>
  4074f7:	lea    rax,[r15+r12*1]
  4074fb:	add    r12,r15
  4074fe:	add    r12,0x1
  407502:	mov    BYTE PTR [r14+rax*1],0x5f
  407507:	mov    rbx,QWORD PTR [rbx]
  40750a:	test   rbx,rbx
  40750d:	jne    4074e0 <__flatcc_fb_scoped_symbol_name@@Base+0x80>
  40750f:	mov    BYTE PTR [r14+r12*1],0x0
  407514:	mov    DWORD PTR [r14+0xd8],r12d
  40751b:	test   r12d,r12d
  40751e:	js     4075c6 <__flatcc_fb_scoped_symbol_name@@Base+0x166>
  407524:	mov    edx,DWORD PTR [r13+0x8]
  407528:	mov    DWORD PTR [r14+0xdc],edx
  40752f:	mov    eax,DWORD PTR [r14+0xd8]
  407536:	lea    ecx,[rax+rdx*1]
  407539:	mov    DWORD PTR [r14+0xe0],ecx
  407540:	cmp    ecx,0xcc
  407546:	jge    407570 <__flatcc_fb_scoped_symbol_name@@Base+0x110>
  407548:	movsxd rdi,eax
  40754b:	add    rdi,r14
  40754e:	mov    rsi,QWORD PTR [r13+0x0]
  407552:	movsxd rdx,edx
  407555:	call   406190 <memcpy@plt>
  40755a:	movsxd rax,DWORD PTR [r14+0xe0]
  407561:	mov    BYTE PTR [r14+rax*1],0x0
  407566:	pop    rbx
  407567:	pop    r12
  407569:	pop    r13
  40756b:	pop    r14
  40756d:	pop    r15
  40756f:	ret    
  407570:	mov    rax,QWORD PTR [rip+0x48a81]        # 44fff8 <stderr@GLIBC_2.2.5>
  407577:	mov    rdi,QWORD PTR [rax]
  40757a:	mov    rcx,QWORD PTR [r13+0x0]
  40757e:	lea    rsi,[rip+0x26c90]        # 42e215 <_IO_stdin_used@@Base+0x1215>
  407585:	xor    eax,eax
  407587:	call   406170 <fprintf@plt>
  40758c:	mov    eax,DWORD PTR [r14+0xd8]
  407593:	mov    edx,0xcb
  407598:	sub    edx,eax
  40759a:	mov    DWORD PTR [r14+0xdc],edx
  4075a1:	mov    DWORD PTR [r14+0xe0],0xcb
  4075ac:	jmp    407548 <__flatcc_fb_scoped_symbol_name@@Base+0xe8>
  4075ae:	mov    BYTE PTR [r14],0x0
  4075b2:	lea    rax,[r14+0xd8]
  4075b9:	mov    DWORD PTR [r14+0xd8],0xffffffff
  4075c4:	jmp    4075cd <__flatcc_fb_scoped_symbol_name@@Base+0x16d>
  4075c6:	lea    rax,[r14+0xd8]
  4075cd:	mov    DWORD PTR [rax],0x0
  4075d3:	mov    rax,QWORD PTR [rip+0x48a1e]        # 44fff8 <stderr@GLIBC_2.2.5>
  4075da:	mov    rcx,QWORD PTR [rax]
  4075dd:	lea    rdi,[rip+0x26c14]        # 42e1f8 <_IO_stdin_used@@Base+0x11f8>
  4075e4:	mov    esi,0x1c
  4075e9:	mov    edx,0x1
  4075ee:	call   406220 <fwrite@plt>
  4075f3:	jmp    407524 <__flatcc_fb_scoped_symbol_name@@Base+0xc4>
  4075f8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000407600 <__flatcc_fb_codegen_common_c@@Base>:
  407600:	push   rbp
  407601:	push   r14
  407603:	push   rbx
  407604:	mov    rbx,rdi
  407607:	call   4060d0 <strlen@plt>
  40760c:	mov    r14,rax
  40760f:	dec    r14
  407612:	mov    rax,QWORD PTR [rbx+0xe0]
  407619:	cmp    DWORD PTR [rax+0xb0],0x0
  407620:	je     40768f <__flatcc_fb_codegen_common_c@@Base+0x8f>
  407622:	lea    rcx,[rip+0x26c12]        # 42e23b <_IO_stdin_used@@Base+0x123b>
  407629:	mov    rdi,rbx
  40762c:	mov    rsi,rbx
  40762f:	mov    rdx,r14
  407632:	call   406e80 <__flatcc_fb_open_output_file@@Base>
  407637:	mov    ebp,0xffffffff
  40763c:	test   eax,eax
  40763e:	jne    4076f6 <__flatcc_fb_codegen_common_c@@Base+0xf6>
  407644:	mov    rdi,rbx
  407647:	call   4079d0 <__flatcc_fb_gen_common_c_header@@Base>
  40764c:	mov    ebp,eax
  40764e:	mov    rax,QWORD PTR [rbx+0xe0]
  407655:	cmp    QWORD PTR [rax+0x98],0x0
  40765d:	jne    407684 <__flatcc_fb_codegen_common_c@@Base+0x84>
  40765f:	cmp    DWORD PTR [rax+0x80],0x0
  407666:	jne    407684 <__flatcc_fb_codegen_common_c@@Base+0x84>
  407668:	mov    rdi,QWORD PTR [rbx+0xd0]
  40766f:	test   rdi,rdi
  407672:	je     407684 <__flatcc_fb_codegen_common_c@@Base+0x84>
  407674:	call   4060c0 <fclose@plt>
  407679:	mov    QWORD PTR [rbx+0xd0],0x0
  407684:	test   ebp,ebp
  407686:	jne    4076f6 <__flatcc_fb_codegen_common_c@@Base+0xf6>
  407688:	mov    rax,QWORD PTR [rbx+0xe0]
  40768f:	cmp    DWORD PTR [rax+0xb4],0x0
  407696:	je     4076f4 <__flatcc_fb_codegen_common_c@@Base+0xf4>
  407698:	lea    rcx,[rip+0x26bad]        # 42e24c <_IO_stdin_used@@Base+0x124c>
  40769f:	mov    rdi,rbx
  4076a2:	mov    rsi,rbx
  4076a5:	mov    rdx,r14
  4076a8:	call   406e80 <__flatcc_fb_open_output_file@@Base>
  4076ad:	mov    ebp,0xffffffff
  4076b2:	test   eax,eax
  4076b4:	jne    4076f6 <__flatcc_fb_codegen_common_c@@Base+0xf6>
  4076b6:	mov    rdi,rbx
  4076b9:	call   40b330 <__flatcc_fb_gen_common_c_builder_header@@Base>
  4076be:	mov    rax,QWORD PTR [rbx+0xe0]
  4076c5:	cmp    QWORD PTR [rax+0x98],0x0
  4076cd:	jne    4076f4 <__flatcc_fb_codegen_common_c@@Base+0xf4>
  4076cf:	cmp    DWORD PTR [rax+0x80],0x0
  4076d6:	jne    4076f4 <__flatcc_fb_codegen_common_c@@Base+0xf4>
  4076d8:	mov    rdi,QWORD PTR [rbx+0xd0]
  4076df:	test   rdi,rdi
  4076e2:	je     4076f4 <__flatcc_fb_codegen_common_c@@Base+0xf4>
  4076e4:	call   4060c0 <fclose@plt>
  4076e9:	mov    QWORD PTR [rbx+0xd0],0x0
  4076f4:	xor    ebp,ebp
  4076f6:	mov    eax,ebp
  4076f8:	pop    rbx
  4076f9:	pop    r14
  4076fb:	pop    rbp
  4076fc:	ret    
  4076fd:	nop    DWORD PTR [rax]

0000000000407700 <__flatcc_fb_codegen_c@@Base>:
  407700:	push   r15
  407702:	push   r14
  407704:	push   rbx
  407705:	mov    r15,rdi
  407708:	mov    QWORD PTR [rdi+0xd8],rsi
  40770f:	mov    rdi,QWORD PTR [rsi+0x68]
  407713:	xor    esi,esi
  407715:	xor    edx,edx
  407717:	call   419e20 <fb_scope_table_find@@Base>
  40771c:	mov    QWORD PTR [r15+0xe8],rax
  407723:	mov    rax,QWORD PTR [r15+0xd8]
  40772a:	mov    rbx,QWORD PTR [rax+0x110]
  407731:	mov    rdi,rbx
  407734:	call   4060d0 <strlen@plt>
  407739:	mov    r14,rax
  40773c:	mov    rax,QWORD PTR [r15+0xe0]
  407743:	cmp    DWORD PTR [rax+0xb8],0x0
  40774a:	je     4077bd <__flatcc_fb_codegen_c@@Base+0xbd>
  40774c:	lea    rcx,[rip+0x3dc59]        # 4453ac <_IO_stdin_used@@Base+0x183ac>
  407753:	mov    rdi,r15
  407756:	mov    rsi,rbx
  407759:	mov    rdx,r14
  40775c:	call   406e80 <__flatcc_fb_open_output_file@@Base>
  407761:	mov    ecx,eax
  407763:	mov    eax,0xffffffff
  407768:	test   ecx,ecx
  40776a:	jne    4079c4 <__flatcc_fb_codegen_c@@Base+0x2c4>
  407770:	mov    rdi,r15
  407773:	call   4085b0 <__flatcc_fb_gen_c_reader@@Base>
  407778:	test   eax,eax
  40777a:	jne    4079c4 <__flatcc_fb_codegen_c@@Base+0x2c4>
  407780:	mov    rax,QWORD PTR [r15+0xe0]
  407787:	cmp    QWORD PTR [rax+0x98],0x0
  40778f:	jne    4077bd <__flatcc_fb_codegen_c@@Base+0xbd>
  407791:	cmp    DWORD PTR [rax+0x80],0x0
  407798:	jne    4077bd <__flatcc_fb_codegen_c@@Base+0xbd>
  40779a:	mov    rdi,QWORD PTR [r15+0xd0]
  4077a1:	test   rdi,rdi
  4077a4:	je     4077bd <__flatcc_fb_codegen_c@@Base+0xbd>
  4077a6:	call   4060c0 <fclose@plt>
  4077ab:	mov    QWORD PTR [r15+0xd0],0x0
  4077b6:	mov    rax,QWORD PTR [r15+0xe0]
  4077bd:	cmp    DWORD PTR [rax+0xbc],0x0
  4077c4:	je     407842 <__flatcc_fb_codegen_c@@Base+0x142>
  4077c6:	mov    rax,QWORD PTR [r15+0xd8]
  4077cd:	mov    rsi,QWORD PTR [rax+0x110]
  4077d4:	lea    rcx,[rip+0x3d6b7]        # 444e92 <_IO_stdin_used@@Base+0x17e92>
  4077db:	mov    rdi,r15
  4077de:	mov    rdx,r14
  4077e1:	call   406e80 <__flatcc_fb_open_output_file@@Base>
  4077e6:	mov    ecx,eax
  4077e8:	mov    eax,0xffffffff
  4077ed:	test   ecx,ecx
  4077ef:	jne    4079c4 <__flatcc_fb_codegen_c@@Base+0x2c4>
  4077f5:	mov    rdi,r15
  4077f8:	call   40bd20 <__flatcc_fb_gen_c_builder@@Base>
  4077fd:	test   eax,eax
  4077ff:	jne    4079c4 <__flatcc_fb_codegen_c@@Base+0x2c4>
  407805:	mov    rax,QWORD PTR [r15+0xe0]
  40780c:	cmp    QWORD PTR [rax+0x98],0x0
  407814:	jne    407842 <__flatcc_fb_codegen_c@@Base+0x142>
  407816:	cmp    DWORD PTR [rax+0x80],0x0
  40781d:	jne    407842 <__flatcc_fb_codegen_c@@Base+0x142>
  40781f:	mov    rdi,QWORD PTR [r15+0xd0]
  407826:	test   rdi,rdi
  407829:	je     407842 <__flatcc_fb_codegen_c@@Base+0x142>
  40782b:	call   4060c0 <fclose@plt>
  407830:	mov    QWORD PTR [r15+0xd0],0x0
  40783b:	mov    rax,QWORD PTR [r15+0xe0]
  407842:	cmp    DWORD PTR [rax+0xc0],0x0
  407849:	je     4078c7 <__flatcc_fb_codegen_c@@Base+0x1c7>
  40784b:	mov    rax,QWORD PTR [r15+0xd8]
  407852:	mov    rsi,QWORD PTR [rax+0x110]
  407859:	lea    rcx,[rip+0x269fe]        # 42e25e <_IO_stdin_used@@Base+0x125e>
  407860:	mov    rdi,r15
  407863:	mov    rdx,r14
  407866:	call   406e80 <__flatcc_fb_open_output_file@@Base>
  40786b:	mov    ecx,eax
  40786d:	mov    eax,0xffffffff
  407872:	test   ecx,ecx
  407874:	jne    4079c4 <__flatcc_fb_codegen_c@@Base+0x2c4>
  40787a:	mov    rdi,r15
  40787d:	call   40ea30 <__flatcc_fb_gen_c_verifier@@Base>
  407882:	test   eax,eax
  407884:	jne    4079c4 <__flatcc_fb_codegen_c@@Base+0x2c4>
  40788a:	mov    rax,QWORD PTR [r15+0xe0]
  407891:	cmp    QWORD PTR [rax+0x98],0x0
  407899:	jne    4078c7 <__flatcc_fb_codegen_c@@Base+0x1c7>
  40789b:	cmp    DWORD PTR [rax+0x80],0x0
  4078a2:	jne    4078c7 <__flatcc_fb_codegen_c@@Base+0x1c7>
  4078a4:	mov    rdi,QWORD PTR [r15+0xd0]
  4078ab:	test   rdi,rdi
  4078ae:	je     4078c7 <__flatcc_fb_codegen_c@@Base+0x1c7>
  4078b0:	call   4060c0 <fclose@plt>
  4078b5:	mov    QWORD PTR [r15+0xd0],0x0
  4078c0:	mov    rax,QWORD PTR [r15+0xe0]
  4078c7:	cmp    DWORD PTR [rax+0xc4],0x0
  4078ce:	je     40794c <__flatcc_fb_codegen_c@@Base+0x24c>
  4078d0:	mov    rax,QWORD PTR [r15+0xd8]
  4078d7:	mov    rsi,QWORD PTR [rax+0x110]
  4078de:	lea    rcx,[rip+0x26985]        # 42e26a <_IO_stdin_used@@Base+0x126a>
  4078e5:	mov    rdi,r15
  4078e8:	mov    rdx,r14
  4078eb:	call   406e80 <__flatcc_fb_open_output_file@@Base>
  4078f0:	mov    ecx,eax
  4078f2:	mov    eax,0xffffffff
  4078f7:	test   ecx,ecx
  4078f9:	jne    4079c4 <__flatcc_fb_codegen_c@@Base+0x2c4>
  4078ff:	mov    rdi,r15
  407902:	call   40f600 <__flatcc_fb_gen_c_json_parser@@Base>
  407907:	test   eax,eax
  407909:	jne    4079c4 <__flatcc_fb_codegen_c@@Base+0x2c4>
  40790f:	mov    rax,QWORD PTR [r15+0xe0]
  407916:	cmp    QWORD PTR [rax+0x98],0x0
  40791e:	jne    40794c <__flatcc_fb_codegen_c@@Base+0x24c>
  407920:	cmp    DWORD PTR [rax+0x80],0x0
  407927:	jne    40794c <__flatcc_fb_codegen_c@@Base+0x24c>
  407929:	mov    rdi,QWORD PTR [r15+0xd0]
  407930:	test   rdi,rdi
  407933:	je     40794c <__flatcc_fb_codegen_c@@Base+0x24c>
  407935:	call   4060c0 <fclose@plt>
  40793a:	mov    QWORD PTR [r15+0xd0],0x0
  407945:	mov    rax,QWORD PTR [r15+0xe0]
  40794c:	cmp    DWORD PTR [rax+0xc8],0x0
  407953:	je     4079c2 <__flatcc_fb_codegen_c@@Base+0x2c2>
  407955:	mov    rax,QWORD PTR [r15+0xd8]
  40795c:	mov    rsi,QWORD PTR [rax+0x110]
  407963:	lea    rcx,[rip+0x2690f]        # 42e279 <_IO_stdin_used@@Base+0x1279>
  40796a:	mov    rdi,r15
  40796d:	mov    rdx,r14
  407970:	call   406e80 <__flatcc_fb_open_output_file@@Base>
  407975:	mov    ecx,eax
  407977:	mov    eax,0xffffffff
  40797c:	test   ecx,ecx
  40797e:	jne    4079c4 <__flatcc_fb_codegen_c@@Base+0x2c4>
  407980:	mov    rdi,r15
  407983:	call   415170 <__flatcc_fb_gen_c_json_printer@@Base>
  407988:	test   eax,eax
  40798a:	jne    4079c4 <__flatcc_fb_codegen_c@@Base+0x2c4>
  40798c:	mov    rax,QWORD PTR [r15+0xe0]
  407993:	cmp    QWORD PTR [rax+0x98],0x0
  40799b:	jne    4079c2 <__flatcc_fb_codegen_c@@Base+0x2c2>
  40799d:	cmp    DWORD PTR [rax+0x80],0x0
  4079a4:	jne    4079c2 <__flatcc_fb_codegen_c@@Base+0x2c2>
  4079a6:	mov    rdi,QWORD PTR [r15+0xd0]
  4079ad:	test   rdi,rdi
  4079b0:	je     4079c2 <__flatcc_fb_codegen_c@@Base+0x2c2>
  4079b2:	call   4060c0 <fclose@plt>
  4079b7:	mov    QWORD PTR [r15+0xd0],0x0
  4079c2:	xor    eax,eax
  4079c4:	pop    rbx
  4079c5:	pop    r14
  4079c7:	pop    r15
  4079c9:	ret    
  4079ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000004079d0 <__flatcc_fb_gen_common_c_header@@Base>:
  4079d0:	push   r14
  4079d2:	push   rbx
  4079d3:	push   rax
  4079d4:	mov    rbx,rdi
  4079d7:	lea    r14,[rdi+0x66]
  4079db:	mov    rdi,QWORD PTR [rdi+0xd0]
  4079e2:	lea    rsi,[rip+0x268eb]        # 42e2d4 <_IO_stdin_used@@Base+0x12d4>
  4079e9:	mov    rdx,r14
  4079ec:	mov    rcx,r14
  4079ef:	xor    eax,eax
  4079f1:	call   406170 <fprintf@plt>
  4079f6:	mov    rcx,QWORD PTR [rbx+0xd0]
  4079fd:	lea    rdi,[rip+0x26907]        # 42e30b <_IO_stdin_used@@Base+0x130b>
  407a04:	mov    esi,0x51
  407a09:	mov    edx,0x1
  407a0e:	call   406220 <fwrite@plt>
  407a13:	mov    rcx,QWORD PTR [rbx+0xd0]
  407a1a:	lea    rdi,[rip+0x2693c]        # 42e35d <_IO_stdin_used@@Base+0x135d>
  407a21:	mov    esi,0x34
  407a26:	mov    edx,0x1
  407a2b:	call   406220 <fwrite@plt>
  407a30:	mov    rax,QWORD PTR [rbx+0xe0]
  407a37:	cmp    DWORD PTR [rax+0xa8],0x0
  407a3e:	je     407be2 <__flatcc_fb_gen_common_c_header@@Base+0x212>
  407a44:	cmp    DWORD PTR [rax+0xac],0x0
  407a4b:	je     407a6a <__flatcc_fb_gen_common_c_header@@Base+0x9a>
  407a4d:	mov    rcx,QWORD PTR [rbx+0xd0]
  407a54:	lea    rdi,[rip+0x26aa6]        # 42e501 <_IO_stdin_used@@Base+0x1501>
  407a5b:	mov    esi,0x24
  407a60:	mov    edx,0x1
  407a65:	call   406220 <fwrite@plt>
  407a6a:	mov    rcx,QWORD PTR [rbx+0xd0]
  407a71:	lea    rdi,[rip+0x26aae]        # 42e526 <_IO_stdin_used@@Base+0x1526>
  407a78:	mov    esi,0x29
  407a7d:	mov    edx,0x1
  407a82:	call   406220 <fwrite@plt>
  407a87:	lea    rsi,[rip+0x26ac2]        # 42e550 <_IO_stdin_used@@Base+0x1550>
  407a8e:	mov    rdi,rbx
  407a91:	call   406150 <strcmp@plt>
  407a96:	test   eax,eax
  407a98:	je     407b32 <__flatcc_fb_gen_common_c_header@@Base+0x162>
  407a9e:	mov    rdi,QWORD PTR [rbx+0xd0]
  407aa5:	sub    rsp,0x8
  407aa9:	lea    rsi,[rip+0x26aad]        # 42e55d <_IO_stdin_used@@Base+0x155d>
  407ab0:	mov    rdx,rbx
  407ab3:	mov    rcx,rbx
  407ab6:	mov    r8,rbx
  407ab9:	mov    r9,rbx
  407abc:	xor    eax,eax
  407abe:	push   rbx
  407abf:	call   406170 <fprintf@plt>
  407ac4:	add    rsp,0x10
  407ac8:	mov    rdi,QWORD PTR [rbx+0xd0]
  407acf:	lea    rsi,[rip+0x26b56]        # 42e62c <_IO_stdin_used@@Base+0x162c>
  407ad6:	lea    rdx,[rip+0x26a71]        # 42e54e <_IO_stdin_used@@Base+0x154e>
  407add:	mov    rcx,rbx
  407ae0:	mov    r8,rbx
  407ae3:	mov    r9,rbx
  407ae6:	xor    eax,eax
  407ae8:	call   406170 <fprintf@plt>
  407aed:	mov    rdi,QWORD PTR [rbx+0xd0]
  407af4:	sub    rsp,0x8
  407af8:	lea    rsi,[rip+0x26c84]        # 42e783 <_IO_stdin_used@@Base+0x1783>
  407aff:	mov    rdx,rbx
  407b02:	mov    rcx,rbx
  407b05:	mov    r8,rbx
  407b08:	mov    r9,rbx
  407b0b:	xor    eax,eax
  407b0d:	push   rbx
  407b0e:	call   406170 <fprintf@plt>
  407b13:	add    rsp,0x10
  407b17:	mov    rdi,QWORD PTR [rbx+0xd0]
  407b1e:	lea    rsi,[rip+0x26ec4]        # 42e9e9 <_IO_stdin_used@@Base+0x19e9>
  407b25:	mov    rdx,r14
  407b28:	mov    rcx,r14
  407b2b:	xor    eax,eax
  407b2d:	call   406170 <fprintf@plt>
  407b32:	mov    rdi,QWORD PTR [rbx+0xd0]
  407b39:	lea    rsi,[rip+0x26ef9]        # 42ea39 <_IO_stdin_used@@Base+0x1a39>
  407b40:	mov    rdx,rbx
  407b43:	mov    rcx,rbx
  407b46:	xor    eax,eax
  407b48:	call   406170 <fprintf@plt>
  407b4d:	mov    rdi,QWORD PTR [rbx+0xd0]
  407b54:	sub    rsp,0x8
  407b58:	lea    rsi,[rip+0x26f67]        # 42eac6 <_IO_stdin_used@@Base+0x1ac6>
  407b5f:	mov    rdx,rbx
  407b62:	mov    rcx,rbx
  407b65:	mov    r8,rbx
  407b68:	mov    r9,rbx
  407b6b:	mov    eax,0x0
  407b70:	push   rbx
  407b71:	push   rbx
  407b72:	push   rbx
  407b73:	call   406170 <fprintf@plt>
  407b78:	add    rsp,0x20
  407b7c:	mov    rdi,QWORD PTR [rbx+0xd0]
  407b83:	lea    rsi,[rip+0x270af]        # 42ec39 <_IO_stdin_used@@Base+0x1c39>
  407b8a:	mov    rdx,rbx
  407b8d:	mov    rcx,rbx
  407b90:	xor    eax,eax
  407b92:	call   406170 <fprintf@plt>
  407b97:	mov    rdi,QWORD PTR [rbx+0xd0]
  407b9e:	lea    rsi,[rip+0x270e9]        # 42ec8e <_IO_stdin_used@@Base+0x1c8e>
  407ba5:	mov    rdx,rbx
  407ba8:	mov    rcx,rbx
  407bab:	mov    r8,rbx
  407bae:	mov    r9,rbx
  407bb1:	xor    eax,eax
  407bb3:	call   406170 <fprintf@plt>
  407bb8:	mov    rax,QWORD PTR [rbx+0xd0]
  407bbf:	mov    rcx,QWORD PTR [rbx+0xe0]
  407bc6:	cmp    DWORD PTR [rcx+0x24],0x0
  407bca:	je     407c18 <__flatcc_fb_gen_common_c_header@@Base+0x248>
  407bcc:	lea    rsi,[rip+0x271e0]        # 42edb3 <_IO_stdin_used@@Base+0x1db3>
  407bd3:	mov    rdi,rax
  407bd6:	mov    rdx,rbx
  407bd9:	xor    eax,eax
  407bdb:	call   406170 <fprintf@plt>
  407be0:	jmp    407c25 <__flatcc_fb_gen_common_c_header@@Base+0x255>
  407be2:	mov    rcx,QWORD PTR [rbx+0xd0]
  407be9:	lea    rdi,[rip+0x267a2]        # 42e392 <_IO_stdin_used@@Base+0x1392>
  407bf0:	mov    esi,0x87
  407bf5:	mov    edx,0x1
  407bfa:	call   406220 <fwrite@plt>
  407bff:	mov    rax,QWORD PTR [rbx+0xe0]
  407c06:	cmp    DWORD PTR [rax+0xac],0x0
  407c0d:	jne    407a4d <__flatcc_fb_gen_common_c_header@@Base+0x7d>
  407c13:	jmp    407a6a <__flatcc_fb_gen_common_c_header@@Base+0x9a>
  407c18:	mov    edi,0xa
  407c1d:	mov    rsi,rax
  407c20:	call   406110 <fputc@plt>
  407c25:	mov    rdi,QWORD PTR [rbx+0xd0]
  407c2c:	lea    rsi,[rip+0x271ad]        # 42ede0 <_IO_stdin_used@@Base+0x1de0>
  407c33:	mov    rdx,rbx
  407c36:	mov    rcx,rbx
  407c39:	xor    eax,eax
  407c3b:	call   406170 <fprintf@plt>
  407c40:	mov    rdi,QWORD PTR [rbx+0xd0]
  407c47:	sub    rsp,0x8
  407c4b:	lea    rsi,[rip+0x27261]        # 42eeb3 <_IO_stdin_used@@Base+0x1eb3>
  407c52:	mov    rdx,rbx
  407c55:	mov    rcx,rbx
  407c58:	mov    r8,rbx
  407c5b:	mov    r9,rbx
  407c5e:	xor    eax,eax
  407c60:	push   rbx
  407c61:	call   406170 <fprintf@plt>
  407c66:	add    rsp,0x10
  407c6a:	mov    rdi,QWORD PTR [rbx+0xd0]
  407c71:	sub    rsp,0x8
  407c75:	lea    rsi,[rip+0x273e1]        # 42f05d <_IO_stdin_used@@Base+0x205d>
  407c7c:	mov    rdx,rbx
  407c7f:	mov    rcx,rbx
  407c82:	mov    r8,rbx
  407c85:	mov    r9,rbx
  407c88:	xor    eax,eax
  407c8a:	push   rbx
  407c8b:	call   406170 <fprintf@plt>
  407c90:	add    rsp,0x10
  407c94:	mov    rdi,QWORD PTR [rbx+0xd0]
  407c9b:	lea    rsi,[rip+0x2745b]        # 42f0fd <_IO_stdin_used@@Base+0x20fd>
  407ca2:	mov    rdx,rbx
  407ca5:	mov    rcx,rbx
  407ca8:	mov    r8,rbx
  407cab:	xor    eax,eax
  407cad:	call   406170 <fprintf@plt>
  407cb2:	mov    rdi,QWORD PTR [rbx+0xd0]
  407cb9:	lea    rsi,[rip+0x27517]        # 42f1d7 <_IO_stdin_used@@Base+0x21d7>
  407cc0:	mov    rdx,rbx
  407cc3:	mov    rcx,rbx
  407cc6:	mov    r8,rbx
  407cc9:	xor    eax,eax
  407ccb:	call   406170 <fprintf@plt>
  407cd0:	mov    rdi,QWORD PTR [rbx+0xd0]
  407cd7:	lea    rsi,[rip+0x275d3]        # 42f2b1 <_IO_stdin_used@@Base+0x22b1>
  407cde:	mov    rdx,rbx
  407ce1:	mov    rcx,rbx
  407ce4:	mov    r8,rbx
  407ce7:	xor    eax,eax
  407ce9:	call   406170 <fprintf@plt>
  407cee:	mov    rdi,QWORD PTR [rbx+0xd0]
  407cf5:	sub    rsp,0x8
  407cf9:	lea    rsi,[rip+0x27689]        # 42f389 <_IO_stdin_used@@Base+0x2389>
  407d00:	mov    rdx,rbx
  407d03:	mov    rcx,rbx
  407d06:	mov    r8,rbx
  407d09:	mov    r9,rbx
  407d0c:	xor    eax,eax
  407d0e:	push   rbx
  407d0f:	call   406170 <fprintf@plt>
  407d14:	add    rsp,0x10
  407d18:	mov    rax,QWORD PTR [rbx+0xd0]
  407d1f:	mov    rcx,QWORD PTR [rbx+0xe0]
  407d26:	cmp    DWORD PTR [rcx+0x24],0x0
  407d2a:	je     407d42 <__flatcc_fb_gen_common_c_header@@Base+0x372>
  407d2c:	lea    rsi,[rip+0x2773e]        # 42f471 <_IO_stdin_used@@Base+0x2471>
  407d33:	mov    rdi,rax
  407d36:	mov    rdx,rbx
  407d39:	xor    eax,eax
  407d3b:	call   406170 <fprintf@plt>
  407d40:	jmp    407d4f <__flatcc_fb_gen_common_c_header@@Base+0x37f>
  407d42:	mov    edi,0xa
  407d47:	mov    rsi,rax
  407d4a:	call   406110 <fputc@plt>
  407d4f:	mov    rdi,QWORD PTR [rbx+0xd0]
  407d56:	lea    rsi,[rip+0x2773e]        # 42f49b <_IO_stdin_used@@Base+0x249b>
  407d5d:	mov    rdx,rbx
  407d60:	mov    rcx,rbx
  407d63:	mov    r8,rbx
  407d66:	mov    r9,rbx
  407d69:	xor    eax,eax
  407d6b:	call   406170 <fprintf@plt>
  407d70:	mov    rdi,QWORD PTR [rbx+0xd0]
  407d77:	lea    rsi,[rip+0x277bc]        # 42f53a <_IO_stdin_used@@Base+0x253a>
  407d7e:	mov    rdx,rbx
  407d81:	mov    rcx,rbx
  407d84:	xor    eax,eax
  407d86:	call   406170 <fprintf@plt>
  407d8b:	mov    rdi,QWORD PTR [rbx+0xd0]
  407d92:	lea    rsi,[rip+0x277e3]        # 42f57c <_IO_stdin_used@@Base+0x257c>
  407d99:	mov    rdx,rbx
  407d9c:	mov    rcx,rbx
  407d9f:	mov    r8,rbx
  407da2:	xor    eax,eax
  407da4:	call   406170 <fprintf@plt>
  407da9:	mov    rdi,QWORD PTR [rbx+0xd0]
  407db0:	lea    rsi,[rip+0x2784f]        # 42f606 <_IO_stdin_used@@Base+0x2606>
  407db7:	mov    rdx,rbx
  407dba:	mov    rcx,rbx
  407dbd:	xor    eax,eax
  407dbf:	call   406170 <fprintf@plt>
  407dc4:	mov    rdi,QWORD PTR [rbx+0xd0]
  407dcb:	lea    rsi,[rip+0x278a6]        # 42f678 <_IO_stdin_used@@Base+0x2678>
  407dd2:	mov    rdx,rbx
  407dd5:	mov    rcx,rbx
  407dd8:	mov    r8,rbx
  407ddb:	mov    r9,rbx
  407dde:	xor    eax,eax
  407de0:	call   406170 <fprintf@plt>
  407de5:	mov    rdi,QWORD PTR [rbx+0xd0]
  407dec:	lea    rsi,[rip+0x279a5]        # 42f798 <_IO_stdin_used@@Base+0x2798>
  407df3:	mov    rdx,rbx
  407df6:	mov    rcx,rbx
  407df9:	xor    eax,eax
  407dfb:	call   406170 <fprintf@plt>
  407e00:	mov    rdi,QWORD PTR [rbx+0xd0]
  407e07:	lea    rsi,[rip+0x27a01]        # 42f80f <_IO_stdin_used@@Base+0x280f>
  407e0e:	mov    rdx,rbx
  407e11:	mov    rcx,rbx
  407e14:	xor    eax,eax
  407e16:	call   406170 <fprintf@plt>
  407e1b:	mov    rdi,QWORD PTR [rbx+0xd0]
  407e22:	lea    rsi,[rip+0x27a66]        # 42f88f <_IO_stdin_used@@Base+0x288f>
  407e29:	mov    rdx,rbx
  407e2c:	mov    rcx,rbx
  407e2f:	mov    r8,rbx
  407e32:	mov    r9,rbx
  407e35:	xor    eax,eax
  407e37:	call   406170 <fprintf@plt>
  407e3c:	mov    rdi,QWORD PTR [rbx+0xd0]
  407e43:	lea    rsi,[rip+0x27aa8]        # 42f8f2 <_IO_stdin_used@@Base+0x28f2>
  407e4a:	mov    rdx,rbx
  407e4d:	mov    rcx,rbx
  407e50:	mov    r8,rbx
  407e53:	mov    r9,rbx
  407e56:	mov    eax,0x0
  407e5b:	push   rbx
  407e5c:	push   rbx
  407e5d:	push   rbx
  407e5e:	push   rbx
  407e5f:	push   rbx
  407e60:	push   rbx
  407e61:	push   rbx
  407e62:	push   rbx
  407e63:	call   406170 <fprintf@plt>
  407e68:	add    rsp,0x40
  407e6c:	mov    rdi,QWORD PTR [rbx+0xd0]
  407e73:	lea    rsi,[rip+0x27b99]        # 42fa13 <_IO_stdin_used@@Base+0x2a13>
  407e7a:	mov    rdx,rbx
  407e7d:	xor    eax,eax
  407e7f:	call   406170 <fprintf@plt>
  407e84:	mov    rdi,QWORD PTR [rbx+0xd0]
  407e8b:	lea    rsi,[rip+0x27ba3]        # 42fa35 <_IO_stdin_used@@Base+0x2a35>
  407e92:	mov    rdx,rbx
  407e95:	mov    rcx,rbx
  407e98:	mov    r8,rbx
  407e9b:	mov    r9,rbx
  407e9e:	xor    eax,eax
  407ea0:	call   406170 <fprintf@plt>
  407ea5:	mov    rdi,QWORD PTR [rbx+0xd0]
  407eac:	sub    rsp,0x8
  407eb0:	lea    rsi,[rip+0x27c05]        # 42fabc <_IO_stdin_used@@Base+0x2abc>
  407eb7:	mov    rdx,rbx
  407eba:	mov    rcx,rbx
  407ebd:	mov    r8,rbx
  407ec0:	mov    r9,rbx
  407ec3:	mov    eax,0x0
  407ec8:	push   rbx
  407ec9:	push   rbx
  407eca:	push   rbx
  407ecb:	push   rbx
  407ecc:	push   rbx
  407ecd:	push   rbx
  407ece:	push   rbx
  407ecf:	push   rbx
  407ed0:	push   rbx
  407ed1:	push   rbx
  407ed2:	push   rbx
  407ed3:	push   rbx
  407ed4:	push   rbx
  407ed5:	call   406170 <fprintf@plt>
  407eda:	add    rsp,0x70
  407ede:	mov    rdi,QWORD PTR [rbx+0xd0]
  407ee5:	lea    rsi,[rip+0x29582]        # 43146e <_IO_stdin_used@@Base+0x446e>
  407eec:	mov    rdx,rbx
  407eef:	mov    rcx,rbx
  407ef2:	mov    r8,rbx
  407ef5:	mov    r9,rbx
  407ef8:	mov    eax,0x0
  407efd:	push   rbx
  407efe:	push   rbx
  407eff:	push   rbx
  407f00:	push   rbx
  407f01:	call   406170 <fprintf@plt>
  407f06:	add    rsp,0x20
  407f0a:	mov    rdi,QWORD PTR [rbx+0xd0]
  407f11:	lea    rsi,[rip+0x29619]        # 431531 <_IO_stdin_used@@Base+0x4531>
  407f18:	mov    rdx,rbx
  407f1b:	mov    rcx,rbx
  407f1e:	mov    r8,rbx
  407f21:	mov    r9,rbx
  407f24:	xor    eax,eax
  407f26:	call   406170 <fprintf@plt>
  407f2b:	mov    rdi,QWORD PTR [rbx+0xd0]
  407f32:	lea    rsi,[rip+0x29691]        # 4315ca <_IO_stdin_used@@Base+0x45ca>
  407f39:	mov    rdx,rbx
  407f3c:	mov    rcx,rbx
  407f3f:	mov    r8,rbx
  407f42:	mov    r9,rbx
  407f45:	xor    eax,eax
  407f47:	call   406170 <fprintf@plt>
  407f4c:	mov    rdi,QWORD PTR [rbx+0xd0]
  407f53:	lea    rsi,[rip+0x296e7]        # 431641 <_IO_stdin_used@@Base+0x4641>
  407f5a:	mov    rdx,rbx
  407f5d:	xor    eax,eax
  407f5f:	call   406170 <fprintf@plt>
  407f64:	mov    rdi,QWORD PTR [rbx+0xd0]
  407f6b:	lea    rsi,[rip+0x299a0]        # 431912 <_IO_stdin_used@@Base+0x4912>
  407f72:	mov    rdx,rbx
  407f75:	xor    eax,eax
  407f77:	call   406170 <fprintf@plt>
  407f7c:	mov    rdi,QWORD PTR [rbx+0xd0]
  407f83:	lea    rsi,[rip+0x29c1a]        # 431ba4 <_IO_stdin_used@@Base+0x4ba4>
  407f8a:	mov    rdx,rbx
  407f8d:	xor    eax,eax
  407f8f:	call   406170 <fprintf@plt>
  407f94:	mov    rdi,QWORD PTR [rbx+0xd0]
  407f9b:	lea    rsi,[rip+0x29c83]        # 431c25 <_IO_stdin_used@@Base+0x4c25>
  407fa2:	mov    rdx,rbx
  407fa5:	xor    eax,eax
  407fa7:	call   406170 <fprintf@plt>
  407fac:	mov    rdi,QWORD PTR [rbx+0xd0]
  407fb3:	lea    rsi,[rip+0x29cd9]        # 431c93 <_IO_stdin_used@@Base+0x4c93>
  407fba:	mov    rdx,rbx
  407fbd:	xor    eax,eax
  407fbf:	call   406170 <fprintf@plt>
  407fc4:	mov    rdi,QWORD PTR [rbx+0xd0]
  407fcb:	lea    rsi,[rip+0x29ea5]        # 431e77 <_IO_stdin_used@@Base+0x4e77>
  407fd2:	mov    rdx,rbx
  407fd5:	mov    rcx,rbx
  407fd8:	mov    r8,rbx
  407fdb:	mov    r9,rbx
  407fde:	xor    eax,eax
  407fe0:	call   406170 <fprintf@plt>
  407fe5:	mov    rdi,QWORD PTR [rbx+0xd0]
  407fec:	lea    rsi,[rip+0x29f2d]        # 431f20 <_IO_stdin_used@@Base+0x4f20>
  407ff3:	mov    rdx,rbx
  407ff6:	mov    rcx,rbx
  407ff9:	mov    r8,rbx
  407ffc:	mov    r9,rbx
  407fff:	mov    eax,0x0
  408004:	push   rbx
  408005:	push   rbx
  408006:	call   406170 <fprintf@plt>
  40800b:	add    rsp,0x10
  40800f:	mov    rdi,QWORD PTR [rbx+0xd0]
  408016:	lea    rsi,[rip+0x2a0de]        # 4320fb <_IO_stdin_used@@Base+0x50fb>
  40801d:	mov    rdx,rbx
  408020:	mov    rcx,rbx
  408023:	mov    r8,rbx
  408026:	xor    eax,eax
  408028:	call   406170 <fprintf@plt>
  40802d:	mov    rdi,QWORD PTR [rbx+0xd0]
  408034:	sub    rsp,0x8
  408038:	lea    rsi,[rip+0x2a2d6]        # 432315 <_IO_stdin_used@@Base+0x5315>
  40803f:	mov    rdx,rbx
  408042:	mov    rcx,rbx
  408045:	mov    r8,rbx
  408048:	mov    r9,rbx
  40804b:	mov    eax,0x0
  408050:	push   rbx
  408051:	push   rbx
  408052:	push   rbx
  408053:	push   rbx
  408054:	push   rbx
  408055:	push   rbx
  408056:	push   rbx
  408057:	call   406170 <fprintf@plt>
  40805c:	add    rsp,0x40
  408060:	mov    rdi,QWORD PTR [rbx+0xd0]
  408067:	lea    rsi,[rip+0x2a3fe]        # 43246c <_IO_stdin_used@@Base+0x546c>
  40806e:	mov    rdx,rbx
  408071:	mov    rcx,rbx
  408074:	xor    eax,eax
  408076:	call   406170 <fprintf@plt>
  40807b:	mov    rdi,QWORD PTR [rbx+0xd0]
  408082:	lea    rsi,[rip+0x2a4b2]        # 43253b <_IO_stdin_used@@Base+0x553b>
  408089:	mov    rdx,rbx
  40808c:	mov    rcx,rbx
  40808f:	mov    r8,rbx
  408092:	xor    eax,eax
  408094:	call   406170 <fprintf@plt>
  408099:	mov    rdi,QWORD PTR [rbx+0xd0]
  4080a0:	lea    rsi,[rip+0x2a549]        # 4325f0 <_IO_stdin_used@@Base+0x55f0>
  4080a7:	mov    rdx,rbx
  4080aa:	mov    rcx,rbx
  4080ad:	mov    r8,rbx
  4080b0:	xor    eax,eax
  4080b2:	call   406170 <fprintf@plt>
  4080b7:	mov    rdi,QWORD PTR [rbx+0xd0]
  4080be:	lea    rsi,[rip+0x2a6e0]        # 4327a5 <_IO_stdin_used@@Base+0x57a5>
  4080c5:	mov    rdx,rbx
  4080c8:	xor    eax,eax
  4080ca:	call   406170 <fprintf@plt>
  4080cf:	mov    rdi,QWORD PTR [rbx+0xd0]
  4080d6:	lea    rsi,[rip+0x2a772]        # 43284f <_IO_stdin_used@@Base+0x584f>
  4080dd:	mov    rdx,rbx
  4080e0:	xor    eax,eax
  4080e2:	call   406170 <fprintf@plt>
  4080e7:	mov    rdi,QWORD PTR [rbx+0xd0]
  4080ee:	lea    rsi,[rip+0x2a887]        # 43297c <_IO_stdin_used@@Base+0x597c>
  4080f5:	mov    rdx,rbx
  4080f8:	mov    rcx,rbx
  4080fb:	xor    eax,eax
  4080fd:	call   406170 <fprintf@plt>
  408102:	mov    rdi,QWORD PTR [rbx+0xd0]
  408109:	lea    rsi,[rip+0x2a9bc]        # 432acc <_IO_stdin_used@@Base+0x5acc>
  408110:	mov    rdx,rbx
  408113:	mov    rcx,rbx
  408116:	xor    eax,eax
  408118:	call   406170 <fprintf@plt>
  40811d:	mov    rdi,QWORD PTR [rbx+0xd0]
  408124:	sub    rsp,0x8
  408128:	lea    rsi,[rip+0x2aa71]        # 432ba0 <_IO_stdin_used@@Base+0x5ba0>
  40812f:	mov    rdx,rbx
  408132:	mov    rcx,rbx
  408135:	mov    r8,rbx
  408138:	mov    r9,rbx
  40813b:	mov    eax,0x0
  408140:	push   rbx
  408141:	push   rbx
  408142:	push   rbx
  408143:	push   rbx
  408144:	push   rbx
  408145:	push   rbx
  408146:	push   rbx
  408147:	call   406170 <fprintf@plt>
  40814c:	add    rsp,0x40
  408150:	mov    rdi,QWORD PTR [rbx+0xd0]
  408157:	sub    rsp,0x8
  40815b:	lea    rsi,[rip+0x2abb9]        # 432d1b <_IO_stdin_used@@Base+0x5d1b>
  408162:	mov    rdx,rbx
  408165:	mov    rcx,rbx
  408168:	mov    r8,rbx
  40816b:	mov    r9,rbx
  40816e:	mov    eax,0x0
  408173:	push   rbx
  408174:	push   rbx
  408175:	push   rbx
  408176:	push   rbx
  408177:	push   rbx
  408178:	push   rbx
  408179:	push   rbx
  40817a:	call   406170 <fprintf@plt>
  40817f:	add    rsp,0x40
  408183:	mov    rdi,QWORD PTR [rbx+0xd0]
  40818a:	sub    rsp,0x8
  40818e:	lea    rsi,[rip+0x2ad07]        # 432e9c <_IO_stdin_used@@Base+0x5e9c>
  408195:	mov    rdx,rbx
  408198:	mov    rcx,rbx
  40819b:	mov    r8,rbx
  40819e:	mov    r9,rbx
  4081a1:	mov    eax,0x0
  4081a6:	push   rbx
  4081a7:	push   rbx
  4081a8:	push   rbx
  4081a9:	call   406170 <fprintf@plt>
  4081ae:	add    rsp,0x20
  4081b2:	mov    rdi,QWORD PTR [rbx+0xd0]
  4081b9:	sub    rsp,0x8
  4081bd:	lea    rsi,[rip+0x2b02d]        # 4331f1 <_IO_stdin_used@@Base+0x61f1>
  4081c4:	mov    rdx,rbx
  4081c7:	mov    rcx,rbx
  4081ca:	mov    r8,rbx
  4081cd:	mov    r9,rbx
  4081d0:	mov    eax,0x0
  4081d5:	push   rbx
  4081d6:	push   rbx
  4081d7:	push   rbx
  4081d8:	push   rbx
  4081d9:	push   rbx
  4081da:	push   rbx
  4081db:	push   rbx
  4081dc:	call   406170 <fprintf@plt>
  4081e1:	add    rsp,0x40
  4081e5:	mov    rdi,QWORD PTR [rbx+0xd0]
  4081ec:	sub    rsp,0x8
  4081f0:	lea    rsi,[rip+0x2b31a]        # 433511 <_IO_stdin_used@@Base+0x6511>
  4081f7:	mov    rdx,rbx
  4081fa:	mov    rcx,rbx
  4081fd:	mov    r8,rbx
  408200:	mov    r9,rbx
  408203:	mov    eax,0x0
  408208:	push   rbx
  408209:	push   rbx
  40820a:	push   rbx
  40820b:	push   rbx
  40820c:	push   rbx
  40820d:	push   rbx
  40820e:	push   rbx
  40820f:	push   rbx
  408210:	push   rbx
  408211:	call   406170 <fprintf@plt>
  408216:	add    rsp,0x50
  40821a:	mov    rdi,QWORD PTR [rbx+0xd0]
  408221:	lea    rsi,[rip+0x2b9b2]        # 433bda <_IO_stdin_used@@Base+0x6bda>
  408228:	mov    rdx,rbx
  40822b:	xor    eax,eax
  40822d:	call   406170 <fprintf@plt>
  408232:	mov    rdi,QWORD PTR [rbx+0xd0]
  408239:	lea    rsi,[rip+0x2bbea]        # 433e2a <_IO_stdin_used@@Base+0x6e2a>
  408240:	mov    rdx,rbx
  408243:	xor    eax,eax
  408245:	call   406170 <fprintf@plt>
  40824a:	mov    rax,QWORD PTR [rbx+0xe0]
  408251:	cmp    DWORD PTR [rax+0xa8],0x0
  408258:	je     408264 <__flatcc_fb_gen_common_c_header@@Base+0x894>
  40825a:	mov    rdi,rbx
  40825d:	call   40b200 <__flatcc_gen_sort@@Base>
  408262:	jmp    408281 <__flatcc_fb_gen_common_c_header@@Base+0x8b1>
  408264:	mov    rcx,QWORD PTR [rbx+0xd0]
  40826b:	lea    rdi,[rip+0x279f9]        # 42fc6b <_IO_stdin_used@@Base+0x2c6b>
  408272:	mov    esi,0x14
  408277:	mov    edx,0x1
  40827c:	call   406220 <fwrite@plt>
  408281:	mov    rdi,QWORD PTR [rbx+0xd0]
  408288:	sub    rsp,0x8
  40828c:	lea    rsi,[rip+0x279ed]        # 42fc80 <_IO_stdin_used@@Base+0x2c80>
  408293:	mov    rdx,rbx
  408296:	mov    rcx,rbx
  408299:	mov    r8,rbx
  40829c:	mov    r9,rbx
  40829f:	xor    eax,eax
  4082a1:	push   rbx
  4082a2:	call   406170 <fprintf@plt>
  4082a7:	add    rsp,0x10
  4082ab:	mov    rax,QWORD PTR [rbx+0xd0]
  4082b2:	mov    rcx,QWORD PTR [rbx+0xe0]
  4082b9:	cmp    DWORD PTR [rcx+0xa8],0x0
  4082c0:	je     4082d8 <__flatcc_fb_gen_common_c_header@@Base+0x908>
  4082c2:	lea    rsi,[rip+0x27a98]        # 42fd61 <_IO_stdin_used@@Base+0x2d61>
  4082c9:	mov    rdi,rax
  4082cc:	mov    rdx,rbx
  4082cf:	xor    eax,eax
  4082d1:	call   406170 <fprintf@plt>
  4082d6:	jmp    4082e5 <__flatcc_fb_gen_common_c_header@@Base+0x915>
  4082d8:	mov    edi,0xa
  4082dd:	mov    rsi,rax
  4082e0:	call   406110 <fputc@plt>
  4082e5:	mov    rsi,QWORD PTR [rbx+0xd0]
  4082ec:	mov    edi,0xa
  4082f1:	call   406110 <fputc@plt>
  4082f6:	mov    rdi,QWORD PTR [rbx+0xd0]
  4082fd:	lea    rsi,[rip+0x27a7d]        # 42fd81 <_IO_stdin_used@@Base+0x2d81>
  408304:	mov    rdx,rbx
  408307:	mov    rcx,rbx
  40830a:	mov    r8,rbx
  40830d:	xor    eax,eax
  40830f:	call   406170 <fprintf@plt>
  408314:	mov    rdi,QWORD PTR [rbx+0xd0]
  40831b:	lea    rsi,[rip+0x27adf]        # 42fe01 <_IO_stdin_used@@Base+0x2e01>
  408322:	mov    rdx,rbx
  408325:	mov    rcx,rbx
  408328:	mov    r8,rbx
  40832b:	mov    r9,rbx
  40832e:	mov    eax,0x0
  408333:	push   rbx
  408334:	push   rbx
  408335:	push   rbx
  408336:	push   rbx
  408337:	push   rbx
  408338:	push   rbx
  408339:	push   rbx
  40833a:	push   rbx
  40833b:	push   rbx
  40833c:	push   rbx
  40833d:	push   rbx
  40833e:	push   rbx
  40833f:	push   rbx
  408340:	push   rbx
  408341:	push   rbx
  408342:	push   rbx
  408343:	push   rbx
  408344:	push   rbx
  408345:	push   rbx
  408346:	push   rbx
  408347:	push   rbx
  408348:	push   rbx
  408349:	call   406170 <fprintf@plt>
  40834e:	add    rsp,0xb0
  408355:	mov    rdi,QWORD PTR [rbx+0xd0]
  40835c:	lea    rsi,[rip+0x27cb1]        # 430014 <_IO_stdin_used@@Base+0x3014>
  408363:	mov    rdx,rbx
  408366:	mov    rcx,rbx
  408369:	mov    r8,rbx
  40836c:	mov    r9,rbx
  40836f:	mov    eax,0x0
  408374:	push   rbx
  408375:	push   rbx
  408376:	push   rbx
  408377:	push   rbx
  408378:	push   rbx
  408379:	push   rbx
  40837a:	push   rbx
  40837b:	push   rbx
  40837c:	call   406170 <fprintf@plt>
  408381:	add    rsp,0x40
  408385:	mov    rdi,QWORD PTR [rbx+0xd0]
  40838c:	lea    rsi,[rip+0x27dcb]        # 43015e <_IO_stdin_used@@Base+0x315e>
  408393:	mov    rdx,rbx
  408396:	mov    rcx,rbx
  408399:	mov    r8,rbx
  40839c:	mov    r9,rbx
  40839f:	mov    eax,0x0
  4083a4:	push   rbx
  4083a5:	push   rbx
  4083a6:	push   rbx
  4083a7:	push   rbx
  4083a8:	push   rbx
  4083a9:	push   rbx
  4083aa:	push   rbx
  4083ab:	push   rbx
  4083ac:	push   rbx
  4083ad:	push   rbx
  4083ae:	push   rbx
  4083af:	push   rbx
  4083b0:	push   rbx
  4083b1:	push   rbx
  4083b2:	push   rbx
  4083b3:	push   rbx
  4083b4:	push   rbx
  4083b5:	push   rbx
  4083b6:	push   rbx
  4083b7:	push   rbx
  4083b8:	push   rbx
  4083b9:	push   rbx
  4083ba:	push   rbx
  4083bb:	push   rbx
  4083bc:	push   rbx
  4083bd:	push   rbx
  4083be:	push   rbx
  4083bf:	push   rbx
  4083c0:	push   rbx
  4083c1:	push   rbx
  4083c2:	push   rbx
  4083c3:	push   rbx
  4083c4:	push   rbx
  4083c5:	push   rbx
  4083c6:	push   rbx
  4083c7:	push   rbx
  4083c8:	push   rbx
  4083c9:	push   rbx
  4083ca:	push   rbx
  4083cb:	push   rbx
  4083cc:	push   rbx
  4083cd:	push   rbx
  4083ce:	push   rbx
  4083cf:	push   rbx
  4083d0:	push   rbx
  4083d1:	push   rbx
  4083d2:	push   rbx
  4083d3:	push   rbx
  4083d4:	push   rbx
  4083d5:	push   rbx
  4083d6:	push   rbx
  4083d7:	push   rbx
  4083d8:	push   rbx
  4083d9:	push   rbx
  4083da:	push   rbx
  4083db:	push   rbx
  4083dc:	call   406170 <fprintf@plt>
  4083e1:	add    rsp,0x1c0
  4083e8:	mov    rax,QWORD PTR [rbx+0xe0]
  4083ef:	cmp    DWORD PTR [rax+0xa8],0x0
  4083f6:	je     408410 <__flatcc_fb_gen_common_c_header@@Base+0xa40>
  4083f8:	mov    rdi,QWORD PTR [rbx+0xd0]
  4083ff:	lea    rsi,[rip+0x28411]        # 430817 <_IO_stdin_used@@Base+0x3817>
  408406:	mov    rdx,rbx
  408409:	xor    eax,eax
  40840b:	call   406170 <fprintf@plt>
  408410:	mov    rdi,QWORD PTR [rbx+0xd0]
  408417:	lea    rsi,[rip+0x28413]        # 430831 <_IO_stdin_used@@Base+0x3831>
  40841e:	mov    rdx,rbx
  408421:	mov    rcx,rbx
  408424:	xor    eax,eax
  408426:	call   406170 <fprintf@plt>
  40842b:	mov    rax,QWORD PTR [rbx+0xd0]
  408432:	mov    rcx,QWORD PTR [rbx+0xe0]
  408439:	cmp    DWORD PTR [rcx+0x24],0x0
  40843d:	je     408455 <__flatcc_fb_gen_common_c_header@@Base+0xa85>
  40843f:	lea    rsi,[rip+0x2696d]        # 42edb3 <_IO_stdin_used@@Base+0x1db3>
  408446:	mov    rdi,rax
  408449:	mov    rdx,rbx
  40844c:	xor    eax,eax
  40844e:	call   406170 <fprintf@plt>
  408453:	jmp    408462 <__flatcc_fb_gen_common_c_header@@Base+0xa92>
  408455:	mov    edi,0xa
  40845a:	mov    rsi,rax
  40845d:	call   406110 <fputc@plt>
  408462:	mov    rdi,QWORD PTR [rbx+0xd0]
  408469:	lea    rsi,[rip+0x2845a]        # 4308ca <_IO_stdin_used@@Base+0x38ca>
  408470:	mov    rdx,rbx
  408473:	xor    eax,eax
  408475:	call   406170 <fprintf@plt>
  40847a:	mov    rdi,QWORD PTR [rbx+0xd0]
  408481:	lea    rsi,[rip+0x284c1]        # 430949 <_IO_stdin_used@@Base+0x3949>
  408488:	mov    rdx,rbx
  40848b:	mov    rcx,rbx
  40848e:	mov    r8,rbx
  408491:	mov    r9,rbx
  408494:	mov    eax,0x0
  408499:	push   rbx
  40849a:	push   rbx
  40849b:	push   rbx
  40849c:	push   rbx
  40849d:	push   rbx
  40849e:	push   rbx
  40849f:	push   rbx
  4084a0:	push   rbx
  4084a1:	push   rbx
  4084a2:	push   rbx
  4084a3:	call   406170 <fprintf@plt>
  4084a8:	add    rsp,0x50
  4084ac:	mov    rdi,QWORD PTR [rbx+0xd0]
  4084b3:	lea    rsi,[rip+0x287d8]        # 430c92 <_IO_stdin_used@@Base+0x3c92>
  4084ba:	mov    rdx,rbx
  4084bd:	mov    rcx,rbx
  4084c0:	mov    r8,rbx
  4084c3:	xor    eax,eax
  4084c5:	call   406170 <fprintf@plt>
  4084ca:	mov    rdi,QWORD PTR [rbx+0xd0]
  4084d1:	lea    rsi,[rip+0x28871]        # 430d49 <_IO_stdin_used@@Base+0x3d49>
  4084d8:	mov    rdx,rbx
  4084db:	mov    rcx,rbx
  4084de:	mov    r8,rbx
  4084e1:	mov    r9,rbx
  4084e4:	mov    eax,0x0
  4084e9:	push   rbx
  4084ea:	push   rbx
  4084eb:	call   406170 <fprintf@plt>
  4084f0:	add    rsp,0x10
  4084f4:	mov    rdi,QWORD PTR [rbx+0xd0]
  4084fb:	lea    rsi,[rip+0x28a0e]        # 430f10 <_IO_stdin_used@@Base+0x3f10>
  408502:	mov    rdx,rbx
  408505:	mov    rcx,rbx
  408508:	mov    r8,rbx
  40850b:	mov    r9,rbx
  40850e:	xor    eax,eax
  408510:	call   406170 <fprintf@plt>
  408515:	mov    rdi,QWORD PTR [rbx+0xd0]
  40851c:	lea    rsi,[rip+0x28c69]        # 43118c <_IO_stdin_used@@Base+0x418c>
  408523:	mov    rdx,rbx
  408526:	mov    rcx,rbx
  408529:	mov    r8,rbx
  40852c:	mov    r9,rbx
  40852f:	mov    eax,0x0
  408534:	push   rbx
  408535:	push   rbx
  408536:	push   rbx
  408537:	push   rbx
  408538:	push   rbx
  408539:	push   rbx
  40853a:	call   406170 <fprintf@plt>
  40853f:	add    rsp,0x30
  408543:	mov    rsi,QWORD PTR [rbx+0xd0]
  40854a:	mov    edi,0xa
  40854f:	call   406110 <fputc@plt>
  408554:	mov    rax,QWORD PTR [rbx+0xe0]
  40855b:	cmp    DWORD PTR [rax+0xac],0x0
  408562:	je     408581 <__flatcc_fb_gen_common_c_header@@Base+0xbb1>
  408564:	mov    rcx,QWORD PTR [rbx+0xd0]
  40856b:	lea    rdi,[rip+0x2bd79]        # 4342eb <_IO_stdin_used@@Base+0x72eb>
  408572:	mov    esi,0x24
  408577:	mov    edx,0x1
  40857c:	call   406220 <fwrite@plt>
  408581:	mov    rdi,QWORD PTR [rbx+0xd0]
  408588:	lea    rsi,[rip+0x25e8b]        # 42e41a <_IO_stdin_used@@Base+0x141a>
  40858f:	mov    rdx,r14
  408592:	xor    eax,eax
  408594:	call   406170 <fprintf@plt>
  408599:	xor    eax,eax
  40859b:	add    rsp,0x8
  40859f:	pop    rbx
  4085a0:	pop    r14
  4085a2:	ret    
  4085a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4085ad:	nop    DWORD PTR [rax]

00000000004085b0 <__flatcc_fb_gen_c_reader@@Base>:
  4085b0:	push   rbp
  4085b1:	mov    rbp,rsp
  4085b4:	push   r15
  4085b6:	push   r14
  4085b8:	push   r13
  4085ba:	push   r12
  4085bc:	push   rbx
  4085bd:	and    rsp,0xffffffffffffffe0
  4085c1:	sub    rsp,0x4e0
  4085c8:	mov    r12,rdi
  4085cb:	lea    r14,[rdi+0x66]
  4085cf:	mov    rax,QWORD PTR [rdi+0xe0]
  4085d6:	mov    rdi,QWORD PTR [rdi+0xd0]
  4085dd:	mov    rcx,QWORD PTR [r12+0xd8]
  4085e5:	mov    rcx,QWORD PTR [rcx+0x118]
  4085ec:	mov    ebx,DWORD PTR [rax+0xa4]
  4085f2:	lea    rsi,[rip+0x2bd17]        # 434310 <_IO_stdin_used@@Base+0x7310>
  4085f9:	mov    rdx,rcx
  4085fc:	xor    eax,eax
  4085fe:	call   406170 <fprintf@plt>
  408603:	mov    rcx,QWORD PTR [r12+0xd0]
  40860b:	lea    rdi,[rip+0x25cf9]        # 42e30b <_IO_stdin_used@@Base+0x130b>
  408612:	mov    esi,0x51
  408617:	mov    edx,0x1
  40861c:	call   406220 <fwrite@plt>
  408621:	mov    rcx,QWORD PTR [r12+0xd0]
  408629:	test   ebx,ebx
  40862b:	je     40868b <__flatcc_fb_gen_c_reader@@Base+0xdb>
  40862d:	lea    rdi,[rip+0x2bd05]        # 434339 <_IO_stdin_used@@Base+0x7339>
  408634:	mov    esi,0x1bb
  408639:	mov    edx,0x1
  40863e:	call   406220 <fwrite@plt>
  408643:	mov    rdi,QWORD PTR [r12+0xd0]
  40864b:	lea    rsi,[rip+0x2bea3]        # 4344f5 <_IO_stdin_used@@Base+0x74f5>
  408652:	mov    rdx,r14
  408655:	mov    rcx,r12
  408658:	xor    eax,eax
  40865a:	call   406170 <fprintf@plt>
  40865f:	lea    rsi,[rip+0x3cd46]        # 4453ac <_IO_stdin_used@@Base+0x183ac>
  408666:	lea    rdx,[rip+0x2bec8]        # 434535 <_IO_stdin_used@@Base+0x7535>
  40866d:	mov    rdi,r12
  408670:	call   407200 <__flatcc_fb_gen_c_includes@@Base>
  408675:	mov    rcx,QWORD PTR [r12+0xd0]
  40867d:	lea    rdi,[rip+0x2bebb]        # 43453f <_IO_stdin_used@@Base+0x753f>
  408684:	mov    esi,0x27
  408689:	jmp    4086ea <__flatcc_fb_gen_c_reader@@Base+0x13a>
  40868b:	lea    rsi,[rip+0x2be63]        # 4344f5 <_IO_stdin_used@@Base+0x74f5>
  408692:	mov    rdi,rcx
  408695:	mov    rdx,r14
  408698:	mov    rcx,r12
  40869b:	xor    eax,eax
  40869d:	call   406170 <fprintf@plt>
  4086a2:	lea    rsi,[rip+0x3cd03]        # 4453ac <_IO_stdin_used@@Base+0x183ac>
  4086a9:	lea    rdx,[rip+0x2be85]        # 434535 <_IO_stdin_used@@Base+0x7535>
  4086b0:	mov    rdi,r12
  4086b3:	call   407200 <__flatcc_fb_gen_c_includes@@Base>
  4086b8:	mov    rcx,QWORD PTR [r12+0xd0]
  4086c0:	lea    rdi,[rip+0x2be78]        # 43453f <_IO_stdin_used@@Base+0x753f>
  4086c7:	mov    esi,0x27
  4086cc:	mov    edx,0x1
  4086d1:	call   406220 <fwrite@plt>
  4086d6:	mov    rcx,QWORD PTR [r12+0xd0]
  4086de:	lea    rdi,[rip+0x2be82]        # 434567 <_IO_stdin_used@@Base+0x7567>
  4086e5:	mov    esi,0x3a
  4086ea:	mov    edx,0x1
  4086ef:	call   406220 <fwrite@plt>
  4086f4:	lea    r13,[r12+0xd0]
  4086fc:	mov    rax,QWORD PTR [r12+0xe0]
  408704:	cmp    DWORD PTR [rax+0xac],0x0
  40870b:	je     408727 <__flatcc_fb_gen_c_reader@@Base+0x177>
  40870d:	mov    rcx,QWORD PTR [r13+0x0]
  408711:	lea    rdi,[rip+0x25de9]        # 42e501 <_IO_stdin_used@@Base+0x1501>
  408718:	mov    esi,0x24
  40871d:	mov    edx,0x1
  408722:	call   406220 <fwrite@plt>
  408727:	mov    rdi,QWORD PTR [r12+0xd0]
  40872f:	mov    rax,QWORD PTR [r12+0xd8]
  408737:	cmp    WORD PTR [rax+0x20],0x2
  40873c:	jne    40875c <__flatcc_fb_gen_c_reader@@Base+0x1ac>
  40873e:	mov    r8d,DWORD PTR [rax+0x18]
  408742:	mov    r9,QWORD PTR [rax+0x10]
  408746:	lea    rsi,[rip+0x2be55]        # 4345a2 <_IO_stdin_used@@Base+0x75a2>
  40874d:	mov    rdx,r12
  408750:	mov    rcx,r12
  408753:	xor    eax,eax
  408755:	call   406170 <fprintf@plt>
  40875a:	jmp    408770 <__flatcc_fb_gen_c_reader@@Base+0x1c0>
  40875c:	lea    rsi,[rip+0x2be70]        # 4345d3 <_IO_stdin_used@@Base+0x75d3>
  408763:	mov    rdx,r12
  408766:	mov    rcx,r12
  408769:	xor    eax,eax
  40876b:	call   406170 <fprintf@plt>
  408770:	mov    rdi,QWORD PTR [r12+0xd0]
  408778:	mov    rax,QWORD PTR [r12+0xd8]
  408780:	cmp    WORD PTR [rax+0x38],0x2
  408785:	jne    4087a5 <__flatcc_fb_gen_c_reader@@Base+0x1f5>
  408787:	mov    r8d,DWORD PTR [rax+0x30]
  40878b:	mov    r9,QWORD PTR [rax+0x28]
  40878f:	lea    rsi,[rip+0x2be71]        # 434607 <_IO_stdin_used@@Base+0x7607>
  408796:	mov    rdx,r12
  408799:	mov    rcx,r12
  40879c:	xor    eax,eax
  40879e:	call   406170 <fprintf@plt>
  4087a3:	jmp    4087c5 <__flatcc_fb_gen_c_reader@@Base+0x215>
  4087a5:	mov    rax,QWORD PTR [r12+0xe0]
  4087ad:	mov    r8,QWORD PTR [rax+0x78]
  4087b1:	lea    rsi,[rip+0x2be7f]        # 434637 <_IO_stdin_used@@Base+0x7637>
  4087b8:	mov    rdx,r12
  4087bb:	mov    rcx,r12
  4087be:	xor    eax,eax
  4087c0:	call   406170 <fprintf@plt>
  4087c5:	mov    rsi,QWORD PTR [r12+0xd0]
  4087cd:	mov    edi,0xa
  4087d2:	call   406110 <fputc@plt>
  4087d7:	mov    rax,QWORD PTR [r12+0xd8]
  4087df:	mov    rbx,QWORD PTR [rax+0x48]
  4087e3:	test   rbx,rbx
  4087e6:	je     408807 <__flatcc_fb_gen_c_reader@@Base+0x257>
  4087e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4087f0:	mov    rdi,r12
  4087f3:	mov    rsi,rbx
  4087f6:	call   40a880 <__flatcc_fb_gen_c_reader@@Base+0x22d0>
  4087fb:	mov    rbx,QWORD PTR [rbx+0xc0]
  408802:	test   rbx,rbx
  408805:	jne    4087f0 <__flatcc_fb_gen_c_reader@@Base+0x240>
  408807:	mov    rsi,QWORD PTR [r12+0xd0]
  40880f:	mov    edi,0xa
  408814:	call   406110 <fputc@plt>
  408819:	mov    rax,QWORD PTR [r12+0xd8]
  408821:	mov    rbx,QWORD PTR [rax+0x40]
  408825:	test   rbx,rbx
  408828:	mov    QWORD PTR [rsp+0x18],r12
  40882d:	jne    408848 <__flatcc_fb_gen_c_reader@@Base+0x298>
  40882f:	jmp    408aa4 <__flatcc_fb_gen_c_reader@@Base+0x4f4>
  408834:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40883e:	xchg   ax,ax
  408840:	mov    rbx,QWORD PTR [rbx]
  408843:	test   rbx,rbx
  408846:	je     40885c <__flatcc_fb_gen_c_reader@@Base+0x2ac>
  408848:	cmp    WORD PTR [rbx+0x10],0x0
  40884d:	jne    408840 <__flatcc_fb_gen_c_reader@@Base+0x290>
  40884f:	mov    rdi,r12
  408852:	mov    rsi,rbx
  408855:	call   40a880 <__flatcc_fb_gen_c_reader@@Base+0x22d0>
  40885a:	jmp    408840 <__flatcc_fb_gen_c_reader@@Base+0x290>
  40885c:	mov    rax,QWORD PTR [r12+0xd8]
  408864:	mov    rbx,QWORD PTR [rax+0x40]
  408868:	test   rbx,rbx
  40886b:	jne    40888c <__flatcc_fb_gen_c_reader@@Base+0x2dc>
  40886d:	jmp    408aa4 <__flatcc_fb_gen_c_reader@@Base+0x4f4>
  408872:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40887c:	nop    DWORD PTR [rax+0x0]
  408880:	mov    rbx,QWORD PTR [rbx]
  408883:	test   rbx,rbx
  408886:	je     408aa4 <__flatcc_fb_gen_c_reader@@Base+0x4f4>
  40888c:	cmp    WORD PTR [rbx+0x10],0x1
  408891:	ja     408880 <__flatcc_fb_gen_c_reader@@Base+0x2d0>
  408893:	vxorps xmm0,xmm0,xmm0
  408897:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  4088a0:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  4088a9:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  4088b2:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  4088bb:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  4088c4:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  4088cd:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  4088d3:	mov    QWORD PTR [rsp+0x140],0x0
  4088df:	mov    rdi,QWORD PTR [rbx+0x18]
  4088e3:	mov    rsi,rbx
  4088e6:	lea    r15,[rsp+0x60]
  4088eb:	mov    rdx,r15
  4088ee:	vzeroupper 
  4088f1:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  4088f6:	mov    r12d,DWORD PTR [rbx+0xa0]
  4088fd:	mov    r14,r12
  408900:	shr    r14,0x1d
  408904:	mov    rax,QWORD PTR [rsp+0x18]
  408909:	mov    rdi,QWORD PTR [rax+0xd0]
  408910:	lea    rsi,[rip+0x2bf12]        # 434829 <_IO_stdin_used@@Base+0x7829>
  408917:	mov    rdx,r15
  40891a:	mov    rcx,r15
  40891d:	mov    r8,QWORD PTR [rsp+0x18]
  408922:	xor    eax,eax
  408924:	call   406170 <fprintf@plt>
  408929:	mov    rax,QWORD PTR [rsp+0x18]
  40892e:	mov    rdi,QWORD PTR [rax+0xd0]
  408935:	lea    rsi,[rip+0x2bf2e]        # 43486a <_IO_stdin_used@@Base+0x786a>
  40893c:	mov    rdx,r15
  40893f:	mov    rcx,QWORD PTR [rsp+0x18]
  408944:	mov    r8,r12
  408947:	xor    eax,eax
  408949:	call   406170 <fprintf@plt>
  40894e:	mov    ecx,r12d
  408951:	and    ecx,0xf
  408954:	cmp    ecx,0x9
  408957:	mov    r8d,0x30
  40895d:	mov    r11d,0x57
  408963:	cmova  r8d,r11d
  408967:	add    r8d,ecx
  40896a:	mov    edx,r12d
  40896d:	shr    edx,0x4
  408970:	and    edx,0xf
  408973:	cmp    edx,0x9
  408976:	mov    r9d,0x30
  40897c:	cmova  r9d,r11d
  408980:	add    r9d,edx
  408983:	mov    esi,r12d
  408986:	shr    esi,0x8
  408989:	and    esi,0xf
  40898c:	cmp    esi,0x9
  40898f:	mov    r10d,0x30
  408995:	cmova  r10d,r11d
  408999:	add    r10d,esi
  40899c:	mov    edi,r12d
  40899f:	shr    edi,0xc
  4089a2:	and    edi,0xf
  4089a5:	cmp    edi,0x9
  4089a8:	mov    esi,0x30
  4089ad:	cmova  esi,r11d
  4089b1:	add    esi,edi
  4089b3:	mov    eax,r12d
  4089b6:	shr    eax,0x10
  4089b9:	and    eax,0xf
  4089bc:	cmp    eax,0x9
  4089bf:	mov    edi,0x30
  4089c4:	cmova  edi,r11d
  4089c8:	add    edi,eax
  4089ca:	mov    eax,r12d
  4089cd:	shr    eax,0x14
  4089d0:	and    eax,0xf
  4089d3:	cmp    eax,0x9
  4089d6:	mov    ecx,0x30
  4089db:	cmova  ecx,r11d
  4089df:	add    ecx,eax
  4089e1:	mov    eax,r12d
  4089e4:	shr    eax,0x18
  4089e7:	and    eax,0xf
  4089ea:	cmp    eax,0x9
  4089ed:	mov    edx,0x30
  4089f2:	cmova  edx,r11d
  4089f6:	add    edx,eax
  4089f8:	shr    r12d,0x1c
  4089fc:	cmp    r14,0x4
  408a00:	mov    WORD PTR [rsp+0x160],0x785c
  408a0a:	mov    BYTE PTR [rsp+0x163],r8b
  408a12:	mov    BYTE PTR [rsp+0x162],r9b
  408a1a:	mov    WORD PTR [rsp+0x164],0x785c
  408a24:	mov    BYTE PTR [rsp+0x167],r10b
  408a2c:	mov    BYTE PTR [rsp+0x166],sil
  408a34:	mov    WORD PTR [rsp+0x168],0x785c
  408a3e:	mov    BYTE PTR [rsp+0x16b],dil
  408a46:	mov    BYTE PTR [rsp+0x16a],cl
  408a4d:	mov    WORD PTR [rsp+0x16c],0x785c
  408a57:	mov    BYTE PTR [rsp+0x16f],dl
  408a5e:	mov    eax,0x30
  408a63:	cmova  eax,r11d
  408a67:	add    eax,r12d
  408a6a:	mov    r12,QWORD PTR [rsp+0x18]
  408a6f:	mov    BYTE PTR [rsp+0x16e],al
  408a76:	mov    BYTE PTR [rsp+0x170],0x0
  408a7e:	mov    rdi,QWORD PTR [r12+0xd0]
  408a86:	lea    rsi,[rip+0x2be06]        # 434893 <_IO_stdin_used@@Base+0x7893>
  408a8d:	mov    rdx,r15
  408a90:	lea    rcx,[rsp+0x160]
  408a98:	xor    eax,eax
  408a9a:	call   406170 <fprintf@plt>
  408a9f:	jmp    408880 <__flatcc_fb_gen_c_reader@@Base+0x2d0>
  408aa4:	mov    rsi,QWORD PTR [r12+0xd0]
  408aac:	mov    edi,0xa
  408ab1:	call   406110 <fputc@plt>
  408ab6:	mov    rax,QWORD PTR [r12+0xd8]
  408abe:	mov    rbx,QWORD PTR [rax+0x40]
  408ac2:	test   rbx,rbx
  408ac5:	jne    408ad8 <__flatcc_fb_gen_c_reader@@Base+0x528>
  408ac7:	jmp    408aec <__flatcc_fb_gen_c_reader@@Base+0x53c>
  408ac9:	nop    DWORD PTR [rax+0x0]
  408ad0:	mov    rbx,QWORD PTR [rbx]
  408ad3:	test   rbx,rbx
  408ad6:	je     408aec <__flatcc_fb_gen_c_reader@@Base+0x53c>
  408ad8:	cmp    WORD PTR [rbx+0x10],0x3
  408add:	jne    408ad0 <__flatcc_fb_gen_c_reader@@Base+0x520>
  408adf:	mov    rdi,r12
  408ae2:	mov    rsi,rbx
  408ae5:	call   40aa20 <__flatcc_fb_gen_c_reader@@Base+0x2470>
  408aea:	jmp    408ad0 <__flatcc_fb_gen_c_reader@@Base+0x520>
  408aec:	mov    rsi,QWORD PTR [r12+0xd0]
  408af4:	mov    edi,0xa
  408af9:	call   406110 <fputc@plt>
  408afe:	mov    rax,QWORD PTR [r12+0xd8]
  408b06:	mov    r15,QWORD PTR [rax+0x48]
  408b0a:	test   r15,r15
  408b0d:	je     4096a8 <__flatcc_fb_gen_c_reader@@Base+0x10f8>
  408b13:	lea    rdx,[rsp+0x60]
  408b18:	mov    QWORD PTR [rsp+0x38],r13
  408b1d:	jmp    408b4d <__flatcc_fb_gen_c_reader@@Base+0x59d>
  408b1f:	nop
  408b20:	mov    rsi,QWORD PTR [r13+0x0]
  408b24:	mov    edi,0xa
  408b29:	call   406110 <fputc@plt>
  408b2e:	mov    r15,QWORD PTR [rsp+0x50]
  408b33:	mov    r15,QWORD PTR [r15+0xc0]
  408b3a:	test   r15,r15
  408b3d:	mov    r12,QWORD PTR [rsp+0x18]
  408b42:	lea    rdx,[rsp+0x60]
  408b47:	je     4096a0 <__flatcc_fb_gen_c_reader@@Base+0x10f0>
  408b4d:	mov    rax,QWORD PTR [r12+0xe0]
  408b55:	mov    eax,DWORD PTR [rax+0xa4]
  408b5b:	mov    DWORD PTR [rsp+0x20],eax
  408b5f:	vxorps xmm0,xmm0,xmm0
  408b63:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  408b69:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  408b72:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  408b7b:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  408b84:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  408b8d:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  408b96:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  408b9f:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  408ba8:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  408bb1:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  408bba:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  408bc3:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  408bcc:	vmovaps YMMWORD PTR [rsp+0x200],ymm0
  408bd5:	mov    QWORD PTR [rsp+0x140],0x0
  408be1:	vmovaps YMMWORD PTR [rsp+0x220],ymm0
  408bea:	mov    QWORD PTR [rsp+0x240],0x0
  408bf6:	cmp    WORD PTR [r15+0x10],0x1
  408bfc:	jne    40a67d <__flatcc_fb_gen_c_reader@@Base+0x20cd>
  408c02:	cmp    WORD PTR [r15+0xb0],0x0
  408c0b:	jne    408c1b <__flatcc_fb_gen_c_reader@@Base+0x66b>
  408c0d:	cmp    QWORD PTR [r15+0xa8],0x0
  408c15:	jne    40a77a <__flatcc_fb_gen_c_reader@@Base+0x21ca>
  408c1b:	cmp    QWORD PTR [r15+0xb8],0x0
  408c23:	jne    408c33 <__flatcc_fb_gen_c_reader@@Base+0x683>
  408c25:	cmp    QWORD PTR [r15+0xa8],0x0
  408c2d:	jne    40a79c <__flatcc_fb_gen_c_reader@@Base+0x21ec>
  408c33:	mov    rdi,QWORD PTR [r15+0x18]
  408c37:	mov    rsi,r15
  408c3a:	vzeroupper 
  408c3d:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  408c42:	mov    r14,QWORD PTR [r15+0x40]
  408c46:	test   r14,r14
  408c49:	je     408d2a <__flatcc_fb_gen_c_reader@@Base+0x77a>
  408c4f:	mov    rax,QWORD PTR [r14+0x8]
  408c53:	cmp    QWORD PTR [rax+0x10],0x0
  408c58:	je     408c73 <__flatcc_fb_gen_c_reader@@Base+0x6c3>
  408c5a:	mov    rdi,QWORD PTR [r13+0x0]
  408c5e:	lea    rsi,[rip+0x2c04a]        # 434caf <_IO_stdin_used@@Base+0x7caf>
  408c65:	lea    rdx,[rip+0x258e3]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  408c6c:	xor    eax,eax
  408c6e:	call   406170 <fprintf@plt>
  408c73:	mov    rdi,QWORD PTR [r13+0x0]
  408c77:	mov    rax,QWORD PTR [r14+0x8]
  408c7b:	mov    edx,DWORD PTR [rax+0x8]
  408c7e:	mov    rcx,QWORD PTR [rax]
  408c81:	lea    rsi,[rip+0x36723]        # 43f3ab <_IO_stdin_used@@Base+0x123ab>
  408c88:	xor    eax,eax
  408c8a:	call   406170 <fprintf@plt>
  408c8f:	mov    rbx,QWORD PTR [r14]
  408c92:	test   rbx,rbx
  408c95:	je     408d10 <__flatcc_fb_gen_c_reader@@Base+0x760>
  408c97:	mov    rax,QWORD PTR [r14+0x8]
  408c9b:	mov    rax,QWORD PTR [rax+0x10]
  408c9f:	jmp    408cdf <__flatcc_fb_gen_c_reader@@Base+0x72f>
  408ca1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408cab:	nop    DWORD PTR [rax+rax*1+0x0]
  408cb0:	mov    rdi,QWORD PTR [r13+0x0]
  408cb4:	mov    rax,QWORD PTR [rbx+0x8]
  408cb8:	mov    edx,DWORD PTR [rax+0x8]
  408cbb:	mov    rcx,QWORD PTR [rax]
  408cbe:	lea    rsi,[rip+0x366e6]        # 43f3ab <_IO_stdin_used@@Base+0x123ab>
  408cc5:	xor    eax,eax
  408cc7:	call   406170 <fprintf@plt>
  408ccc:	mov    rax,QWORD PTR [rbx+0x8]
  408cd0:	mov    rcx,QWORD PTR [rbx]
  408cd3:	mov    rax,QWORD PTR [rax+0x10]
  408cd7:	mov    rbx,rcx
  408cda:	test   rcx,rcx
  408cdd:	je     408d10 <__flatcc_fb_gen_c_reader@@Base+0x760>
  408cdf:	mov    rcx,QWORD PTR [rbx+0x8]
  408ce3:	cmp    rax,QWORD PTR [rcx+0x10]
  408ce7:	je     408cb0 <__flatcc_fb_gen_c_reader@@Base+0x700>
  408ce9:	mov    rdi,QWORD PTR [r13+0x0]
  408ced:	lea    rsi,[rip+0x2bfc2]        # 434cb6 <_IO_stdin_used@@Base+0x7cb6>
  408cf4:	lea    rdx,[rip+0x25854]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  408cfb:	xor    eax,eax
  408cfd:	call   406170 <fprintf@plt>
  408d02:	jmp    408cb0 <__flatcc_fb_gen_c_reader@@Base+0x700>
  408d04:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408d0e:	xchg   ax,ax
  408d10:	mov    rcx,QWORD PTR [r13+0x0]
  408d14:	mov    esi,0x4
  408d19:	mov    edx,0x1
  408d1e:	lea    rdi,[rip+0x3ab67]        # 44388c <_IO_stdin_used@@Base+0x1688c>
  408d25:	call   406220 <fwrite@plt>
  408d2a:	cmp    QWORD PTR [r15+0xb8],0x0
  408d32:	mov    QWORD PTR [rsp+0x50],r15
  408d37:	je     4090b0 <__flatcc_fb_gen_c_reader@@Base+0xb00>
  408d3d:	cmp    DWORD PTR [rsp+0x20],0x0
  408d42:	lea    rbx,[rsp+0x60]
  408d47:	je     408d63 <__flatcc_fb_gen_c_reader@@Base+0x7b3>
  408d49:	mov    rcx,QWORD PTR [r13+0x0]
  408d4d:	mov    esi,0x10
  408d52:	mov    edx,0x1
  408d57:	lea    rdi,[rip+0x2c1e8]        # 434f46 <_IO_stdin_used@@Base+0x7f46>
  408d5e:	call   406220 <fwrite@plt>
  408d63:	mov    rdi,QWORD PTR [r13+0x0]
  408d67:	lea    rsi,[rip+0x2c1e9]        # 434f57 <_IO_stdin_used@@Base+0x7f57>
  408d6e:	mov    rdx,rbx
  408d71:	xor    eax,eax
  408d73:	call   406170 <fprintf@plt>
  408d78:	mov    r14,QWORD PTR [r15+0x28]
  408d7c:	test   r14,r14
  408d7f:	je     409120 <__flatcc_fb_gen_c_reader@@Base+0xb70>
  408d85:	lea    rax,[r15+0xb0]
  408d8c:	mov    QWORD PTR [rsp+0x28],rax
  408d91:	xor    r15d,r15d
  408d94:	mov    DWORD PTR [rsp+0x30],0x0
  408d9c:	xor    eax,eax
  408d9e:	mov    QWORD PTR [rsp+0x40],rax
  408da3:	jmp    408e00 <__flatcc_fb_gen_c_reader@@Base+0x850>
  408da5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408daf:	nop
  408db0:	mov    r8d,DWORD PTR [r14+0x80]
  408db7:	mov    rdi,QWORD PTR [r13+0x0]
  408dbb:	cmp    DWORD PTR [rsp+0x20],0x0
  408dc0:	je     409038 <__flatcc_fb_gen_c_reader@@Base+0xa88>
  408dc6:	lea    rsi,[rip+0x2c1b5]        # 434f82 <_IO_stdin_used@@Base+0x7f82>
  408dcd:	mov    ebx,DWORD PTR [rsp+0x30]
  408dd1:	mov    edx,ebx
  408dd3:	mov    ecx,r8d
  408dd6:	mov    r8d,r9d
  408dd9:	mov    r9,r12
  408ddc:	xor    eax,eax
  408dde:	call   406170 <fprintf@plt>
  408de3:	inc    ebx
  408de5:	mov    DWORD PTR [rsp+0x30],ebx
  408de9:	mov    r15d,DWORD PTR [r14+0x80]
  408df0:	add    r15d,DWORD PTR [r14+0x78]
  408df4:	mov    r14,QWORD PTR [r14]
  408df7:	test   r14,r14
  408dfa:	je     40912a <__flatcc_fb_gen_c_reader@@Base+0xb7a>
  408e00:	mov    r12,QWORD PTR [r14+0x68]
  408e04:	test   r12,r12
  408e07:	je     408eea <__flatcc_fb_gen_c_reader@@Base+0x93a>
  408e0d:	mov    rax,QWORD PTR [r12+0x8]
  408e12:	cmp    QWORD PTR [rax+0x10],0x0
  408e17:	je     408e32 <__flatcc_fb_gen_c_reader@@Base+0x882>
  408e19:	mov    rdi,QWORD PTR [r13+0x0]
  408e1d:	lea    rsi,[rip+0x2be8b]        # 434caf <_IO_stdin_used@@Base+0x7caf>
  408e24:	lea    rdx,[rip+0x3b60a]        # 444435 <_IO_stdin_used@@Base+0x17435>
  408e2b:	xor    eax,eax
  408e2d:	call   406170 <fprintf@plt>
  408e32:	mov    rdi,QWORD PTR [r13+0x0]
  408e36:	mov    rax,QWORD PTR [r12+0x8]
  408e3b:	mov    edx,DWORD PTR [rax+0x8]
  408e3e:	mov    rcx,QWORD PTR [rax]
  408e41:	lea    rsi,[rip+0x36563]        # 43f3ab <_IO_stdin_used@@Base+0x123ab>
  408e48:	xor    eax,eax
  408e4a:	call   406170 <fprintf@plt>
  408e4f:	mov    rbx,QWORD PTR [r12]
  408e53:	test   rbx,rbx
  408e56:	je     408ed0 <__flatcc_fb_gen_c_reader@@Base+0x920>
  408e58:	mov    rax,QWORD PTR [r12+0x8]
  408e5d:	mov    rax,QWORD PTR [rax+0x10]
  408e61:	jmp    408e9f <__flatcc_fb_gen_c_reader@@Base+0x8ef>
  408e63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408e6d:	nop    DWORD PTR [rax]
  408e70:	mov    rdi,QWORD PTR [r13+0x0]
  408e74:	mov    rax,QWORD PTR [rbx+0x8]
  408e78:	mov    edx,DWORD PTR [rax+0x8]
  408e7b:	mov    rcx,QWORD PTR [rax]
  408e7e:	lea    rsi,[rip+0x36526]        # 43f3ab <_IO_stdin_used@@Base+0x123ab>
  408e85:	xor    eax,eax
  408e87:	call   406170 <fprintf@plt>
  408e8c:	mov    rax,QWORD PTR [rbx+0x8]
  408e90:	mov    rcx,QWORD PTR [rbx]
  408e93:	mov    rax,QWORD PTR [rax+0x10]
  408e97:	mov    rbx,rcx
  408e9a:	test   rcx,rcx
  408e9d:	je     408ed0 <__flatcc_fb_gen_c_reader@@Base+0x920>
  408e9f:	mov    rcx,QWORD PTR [rbx+0x8]
  408ea3:	cmp    rax,QWORD PTR [rcx+0x10]
  408ea7:	je     408e70 <__flatcc_fb_gen_c_reader@@Base+0x8c0>
  408ea9:	mov    rdi,QWORD PTR [r13+0x0]
  408ead:	lea    rsi,[rip+0x2be02]        # 434cb6 <_IO_stdin_used@@Base+0x7cb6>
  408eb4:	lea    rdx,[rip+0x3b57a]        # 444435 <_IO_stdin_used@@Base+0x17435>
  408ebb:	xor    eax,eax
  408ebd:	call   406170 <fprintf@plt>
  408ec2:	jmp    408e70 <__flatcc_fb_gen_c_reader@@Base+0x8c0>
  408ec4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408ece:	xchg   ax,ax
  408ed0:	mov    rcx,QWORD PTR [r13+0x0]
  408ed4:	mov    esi,0x4
  408ed9:	mov    edx,0x1
  408ede:	lea    rdi,[rip+0x3a9a7]        # 44388c <_IO_stdin_used@@Base+0x1688c>
  408ee5:	call   406220 <fwrite@plt>
  408eea:	lea    rax,[r14+0x72]
  408eee:	test   r15,r15
  408ef1:	cmove  rax,QWORD PTR [rsp+0x28]
  408ef7:	mov    rcx,QWORD PTR [r14+0x8]
  408efb:	mov    r9d,DWORD PTR [rcx+0x8]
  408eff:	mov    r12,QWORD PTR [rcx]
  408f02:	movzx  r10d,WORD PTR [rax]
  408f06:	cmp    DWORD PTR [rsp+0x20],0x0
  408f0b:	je     408f4f <__flatcc_fb_gen_c_reader@@Base+0x99f>
  408f0d:	mov    ecx,DWORD PTR [r14+0x78]
  408f11:	sub    ecx,r15d
  408f14:	je     408f4f <__flatcc_fb_gen_c_reader@@Base+0x99f>
  408f16:	mov    rdi,QWORD PTR [r13+0x0]
  408f1a:	mov    rdx,QWORD PTR [rsp+0x40]
  408f1f:	lea    eax,[rdx+0x1]
  408f22:	mov    DWORD PTR [rsp+0x58],eax
  408f26:	lea    rsi,[rip+0x2c037]        # 434f64 <_IO_stdin_used@@Base+0x7f64>
  408f2d:	xor    eax,eax
  408f2f:	mov    ebx,r9d
  408f32:	mov    r15,r13
  408f35:	mov    r13d,r10d
  408f38:	call   406170 <fprintf@plt>
  408f3d:	mov    r10d,r13d
  408f40:	mov    r13,r15
  408f43:	mov    r9d,ebx
  408f46:	mov    eax,DWORD PTR [rsp+0x58]
  408f4a:	mov    QWORD PTR [rsp+0x40],rax
  408f4f:	test   BYTE PTR [r14+0x70],0x4
  408f54:	jne    408db0 <__flatcc_fb_gen_c_reader@@Base+0x800>
  408f5a:	movzx  eax,WORD PTR [r14+0x28]
  408f5f:	cmp    ax,0xe
  408f63:	mov    DWORD PTR [rsp+0x48],r9d
  408f68:	je     408fd0 <__flatcc_fb_gen_c_reader@@Base+0xa20>
  408f6a:	cmp    ax,0x8
  408f6e:	jne    40a56a <__flatcc_fb_gen_c_reader@@Base+0x1fba>
  408f74:	mov    eax,DWORD PTR [r14+0x18]
  408f78:	cmp    eax,0x5
  408f7b:	lea    rcx,[rip+0x255cd]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  408f82:	cmove  rcx,QWORD PTR [rsp+0x18]
  408f88:	dec    eax
  408f8a:	cmp    eax,0xb
  408f8d:	jae    40a521 <__flatcc_fb_gen_c_reader@@Base+0x1f71>
  408f93:	cdqe   
  408f95:	lea    rdx,[rip+0x46b74]        # 44fb10 <fb_value_set_deleted@@Base+0x6090>
  408f9c:	mov    r8,QWORD PTR [rdx+rax*8]
  408fa0:	mov    rax,QWORD PTR [rsp+0x38]
  408fa5:	mov    rdi,QWORD PTR [rax]
  408fa8:	cmp    DWORD PTR [rsp+0x20],0x0
  408fad:	je     40905e <__flatcc_fb_gen_c_reader@@Base+0xaae>
  408fb3:	lea    rsi,[rip+0x2c03a]        # 434ff4 <_IO_stdin_used@@Base+0x7ff4>
  408fba:	mov    rdx,rcx
  408fbd:	mov    rcx,r8
  408fc0:	jmp    40902f <__flatcc_fb_gen_c_reader@@Base+0xa7f>
  408fc2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408fcc:	nop    DWORD PTR [rax+0x0]
  408fd0:	mov    rsi,QWORD PTR [r14+0x18]
  408fd4:	mov    eax,DWORD PTR [rsi+0x10]
  408fd7:	mov    ecx,eax
  408fd9:	or     ecx,0x2
  408fdc:	cmp    cx,0x3
  408fe0:	jne    40a615 <__flatcc_fb_gen_c_reader@@Base+0x2065>
  408fe6:	mov    r13d,r10d
  408fe9:	cmp    ax,0x1
  408fed:	lea    rbx,[rip+0x2c07b]        # 43506f <_IO_stdin_used@@Base+0x806f>
  408ff4:	lea    rax,[rip+0x25554]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  408ffb:	cmove  rbx,rax
  408fff:	mov    rdi,QWORD PTR [rsi+0x18]
  409003:	lea    r15,[rsp+0x160]
  40900b:	mov    rdx,r15
  40900e:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  409013:	mov    rax,QWORD PTR [rsp+0x38]
  409018:	mov    rdi,QWORD PTR [rax]
  40901b:	cmp    DWORD PTR [rsp+0x20],0x0
  409020:	je     40906a <__flatcc_fb_gen_c_reader@@Base+0xaba>
  409022:	lea    rsi,[rip+0x2c04c]        # 435075 <_IO_stdin_used@@Base+0x8075>
  409029:	mov    rdx,r15
  40902c:	mov    rcx,rbx
  40902f:	xor    eax,eax
  409031:	call   406170 <fprintf@plt>
  409036:	jmp    409081 <__flatcc_fb_gen_c_reader@@Base+0xad1>
  409038:	sub    rsp,0x8
  40903c:	lea    rsi,[rip+0x2bf72]        # 434fb5 <_IO_stdin_used@@Base+0x7fb5>
  409043:	mov    edx,r10d
  409046:	mov    ebx,DWORD PTR [rsp+0x38]
  40904a:	mov    ecx,ebx
  40904c:	xor    eax,eax
  40904e:	push   r12
  409050:	call   406170 <fprintf@plt>
  409055:	add    rsp,0x10
  409059:	jmp    408de3 <__flatcc_fb_gen_c_reader@@Base+0x833>
  40905e:	lea    rsi,[rip+0x2bf99]        # 434ffe <_IO_stdin_used@@Base+0x7ffe>
  409065:	mov    edx,r10d
  409068:	jmp    40907a <__flatcc_fb_gen_c_reader@@Base+0xaca>
  40906a:	lea    rsi,[rip+0x2c010]        # 435081 <_IO_stdin_used@@Base+0x8081>
  409071:	mov    edx,r13d
  409074:	mov    rcx,r15
  409077:	mov    r8,rbx
  40907a:	xor    eax,eax
  40907c:	call   406170 <fprintf@plt>
  409081:	mov    rax,QWORD PTR [rsp+0x38]
  409086:	mov    rdi,QWORD PTR [rax]
  409089:	lea    rsi,[rip+0x2c030]        # 4350c0 <_IO_stdin_used@@Base+0x80c0>
  409090:	mov    edx,DWORD PTR [rsp+0x48]
  409094:	mov    r13,rax
  409097:	mov    rcx,r12
  40909a:	xor    eax,eax
  40909c:	call   406170 <fprintf@plt>
  4090a1:	jmp    408de9 <__flatcc_fb_gen_c_reader@@Base+0x839>
  4090a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4090b0:	mov    rdi,QWORD PTR [r13+0x0]
  4090b4:	lea    rsi,[rip+0x2bd47]        # 434e02 <_IO_stdin_used@@Base+0x7e02>
  4090bb:	lea    rbx,[rsp+0x60]
  4090c0:	mov    rdx,rbx
  4090c3:	xor    eax,eax
  4090c5:	call   406170 <fprintf@plt>
  4090ca:	mov    rdi,QWORD PTR [r13+0x0]
  4090ce:	lea    rsi,[rip+0x2bd8e]        # 434e63 <_IO_stdin_used@@Base+0x7e63>
  4090d5:	mov    rdx,rbx
  4090d8:	mov    rcx,rbx
  4090db:	mov    r8,rbx
  4090de:	xor    eax,eax
  4090e0:	call   406170 <fprintf@plt>
  4090e5:	mov    rdi,QWORD PTR [r13+0x0]
  4090e9:	lea    rsi,[rip+0x2bdc7]        # 434eb7 <_IO_stdin_used@@Base+0x7eb7>
  4090f0:	mov    rdx,rbx
  4090f3:	mov    rcx,rbx
  4090f6:	mov    r8,rbx
  4090f9:	xor    eax,eax
  4090fb:	call   406170 <fprintf@plt>
  409100:	mov    rdi,QWORD PTR [r13+0x0]
  409104:	lea    rsi,[rip+0x2bdee]        # 434ef9 <_IO_stdin_used@@Base+0x7ef9>
  40910b:	mov    rdx,rbx
  40910e:	mov    rcx,rbx
  409111:	mov    r8,rbx
  409114:	xor    eax,eax
  409116:	call   406170 <fprintf@plt>
  40911b:	jmp    409249 <__flatcc_fb_gen_c_reader@@Base+0xc99>
  409120:	xor    eax,eax
  409122:	mov    QWORD PTR [rsp+0x40],rax
  409127:	xor    r15d,r15d
  40912a:	cmp    DWORD PTR [rsp+0x20],0x0
  40912f:	je     4091a0 <__flatcc_fb_gen_c_reader@@Base+0xbf0>
  409131:	mov    rax,QWORD PTR [rsp+0x50]
  409136:	mov    ecx,DWORD PTR [rax+0xb8]
  40913c:	sub    ecx,r15d
  40913f:	mov    r12,QWORD PTR [rsp+0x18]
  409144:	lea    rbx,[rsp+0x60]
  409149:	je     409162 <__flatcc_fb_gen_c_reader@@Base+0xbb2>
  40914b:	mov    rdi,QWORD PTR [r13+0x0]
  40914f:	lea    rsi,[rip+0x2be0e]        # 434f64 <_IO_stdin_used@@Base+0x7f64>
  409156:	mov    rdx,QWORD PTR [rsp+0x40]
  40915b:	xor    eax,eax
  40915d:	call   406170 <fprintf@plt>
  409162:	mov    rcx,QWORD PTR [r13+0x0]
  409166:	mov    esi,0x3
  40916b:	mov    edx,0x1
  409170:	lea    rdi,[rip+0x363d8]        # 43f54f <_IO_stdin_used@@Base+0x1254f>
  409177:	call   406220 <fwrite@plt>
  40917c:	mov    rcx,QWORD PTR [r13+0x0]
  409180:	mov    esi,0xf
  409185:	mov    edx,0x1
  40918a:	lea    rdi,[rip+0x2bf36]        # 4350c7 <_IO_stdin_used@@Base+0x80c7>
  409191:	call   406220 <fwrite@plt>
  409196:	jmp    4091c4 <__flatcc_fb_gen_c_reader@@Base+0xc14>
  409198:	nop    DWORD PTR [rax+rax*1+0x0]
  4091a0:	mov    rcx,QWORD PTR [r13+0x0]
  4091a4:	mov    esi,0x3
  4091a9:	mov    edx,0x1
  4091ae:	lea    rdi,[rip+0x3639a]        # 43f54f <_IO_stdin_used@@Base+0x1254f>
  4091b5:	call   406220 <fwrite@plt>
  4091ba:	mov    r12,QWORD PTR [rsp+0x18]
  4091bf:	lea    rbx,[rsp+0x60]
  4091c4:	mov    rdi,QWORD PTR [r12+0xd0]
  4091cc:	mov    r15,QWORD PTR [rsp+0x50]
  4091d1:	mov    rcx,QWORD PTR [r15+0xb8]
  4091d8:	lea    rsi,[rip+0x2bef8]        # 4350d7 <_IO_stdin_used@@Base+0x80d7>
  4091df:	mov    rdx,rbx
  4091e2:	xor    eax,eax
  4091e4:	call   406170 <fprintf@plt>
  4091e9:	mov    rdi,QWORD PTR [r12+0xd0]
  4091f1:	lea    rsi,[rip+0x2bf1e]        # 435116 <_IO_stdin_used@@Base+0x8116>
  4091f8:	mov    rdx,rbx
  4091fb:	mov    rcx,rbx
  4091fe:	mov    r8,rbx
  409201:	xor    eax,eax
  409203:	call   406170 <fprintf@plt>
  409208:	mov    rdi,QWORD PTR [r12+0xd0]
  409210:	lea    rsi,[rip+0x2bf57]        # 43516e <_IO_stdin_used@@Base+0x816e>
  409217:	mov    rdx,rbx
  40921a:	mov    rcx,rbx
  40921d:	mov    r8,rbx
  409220:	xor    eax,eax
  409222:	call   406170 <fprintf@plt>
  409227:	mov    rdi,QWORD PTR [r12+0xd0]
  40922f:	lea    rsi,[rip+0x2bf7e]        # 4351b4 <_IO_stdin_used@@Base+0x81b4>
  409236:	mov    rdx,rbx
  409239:	mov    rcx,rbx
  40923c:	mov    r8,rbx
  40923f:	mov    r9,r12
  409242:	xor    eax,eax
  409244:	call   406170 <fprintf@plt>
  409249:	mov    rdi,QWORD PTR [r12+0xd0]
  409251:	mov    rcx,QWORD PTR [r15+0xb8]
  409258:	lea    rsi,[rip+0x2bfac]        # 43520b <_IO_stdin_used@@Base+0x820b>
  40925f:	mov    rdx,rbx
  409262:	xor    eax,eax
  409264:	call   406170 <fprintf@plt>
  409269:	mov    rdi,QWORD PTR [r12+0xd0]
  409271:	lea    rsi,[rip+0x2bfc5]        # 43523d <_IO_stdin_used@@Base+0x823d>
  409278:	mov    rdx,rbx
  40927b:	mov    rcx,rbx
  40927e:	mov    r8,r12
  409281:	xor    eax,eax
  409283:	call   406170 <fprintf@plt>
  409288:	mov    rdi,QWORD PTR [r12+0xd0]
  409290:	lea    rsi,[rip+0x2bfe6]        # 43527d <_IO_stdin_used@@Base+0x827d>
  409297:	mov    rdx,r12
  40929a:	mov    rcx,rbx
  40929d:	xor    eax,eax
  40929f:	call   406170 <fprintf@plt>
  4092a4:	mov    rsi,QWORD PTR [r12+0xd0]
  4092ac:	mov    edi,0xa
  4092b1:	call   406110 <fputc@plt>
  4092b6:	mov    r14,QWORD PTR [r15+0x28]
  4092ba:	test   r14,r14
  4092bd:	lea    r12,[rsp+0x160]
  4092c5:	je     408b20 <__flatcc_fb_gen_c_reader@@Base+0x570>
  4092cb:	mov    DWORD PTR [rsp+0x28],0x0
  4092d3:	mov    DWORD PTR [rsp+0x20],0x0
  4092db:	test   BYTE PTR [r14+0x70],0x4
  4092e0:	jne    409300 <__flatcc_fb_gen_c_reader@@Base+0xd50>
  4092e2:	jmp    409313 <__flatcc_fb_gen_c_reader@@Base+0xd63>
  4092e4:	mov    DWORD PTR [rsp+0x28],0x1
  4092ec:	lea    r12,[rsp+0x160]
  4092f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4092fe:	xchg   ax,ax
  409300:	mov    r14,QWORD PTR [r14]
  409303:	test   r14,r14
  409306:	je     408b20 <__flatcc_fb_gen_c_reader@@Base+0x570>
  40930c:	test   BYTE PTR [r14+0x70],0x4
  409311:	jne    409300 <__flatcc_fb_gen_c_reader@@Base+0xd50>
  409313:	mov    rax,QWORD PTR [r14+0x8]
  409317:	mov    r15d,DWORD PTR [rax+0x8]
  40931b:	mov    rbx,QWORD PTR [rax]
  40931e:	movzx  eax,WORD PTR [r14+0x28]
  409323:	cmp    ax,0xe
  409327:	je     4093ad <__flatcc_fb_gen_c_reader@@Base+0xdfd>
  40932d:	cmp    ax,0x8
  409331:	jne    409620 <__flatcc_fb_gen_c_reader@@Base+0x1070>
  409337:	mov    ecx,DWORD PTR [r14+0x18]
  40933b:	lea    eax,[rcx-0x1]
  40933e:	cmp    eax,0xb
  409341:	jae    40a521 <__flatcc_fb_gen_c_reader@@Base+0x1f71>
  409347:	cmp    ecx,0x5
  40934a:	lea    r10,[rip+0x251fe]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  409351:	mov    rdx,QWORD PTR [rsp+0x18]
  409356:	cmove  r10,rdx
  40935a:	movsxd r11,eax
  40935d:	mov    rdi,QWORD PTR [rdx+0xd0]
  409364:	lea    rsi,[rip+0x2bf2a]        # 435295 <_IO_stdin_used@@Base+0x8295>
  40936b:	lea    rcx,[rsp+0x60]
  409370:	mov    r8d,r15d
  409373:	mov    r9,rbx
  409376:	mov    eax,0x0
  40937b:	lea    rbx,[rip+0x4678e]        # 44fb10 <fb_value_set_deleted@@Base+0x6090>
  409382:	push   QWORD PTR [rbx+r11*8]
  409386:	push   r10
  409388:	lea    rbx,[rip+0x466d1]        # 44fa60 <fb_value_set_deleted@@Base+0x5fe0>
  40938f:	push   QWORD PTR [rbx+r11*8]
  409393:	push   rdx
  409394:	call   406170 <fprintf@plt>
  409399:	add    rsp,0x20
  40939d:	cmp    DWORD PTR [rsp+0x20],0x0
  4093a2:	je     40962b <__flatcc_fb_gen_c_reader@@Base+0x107b>
  4093a8:	jmp    409300 <__flatcc_fb_gen_c_reader@@Base+0xd50>
  4093ad:	mov    rsi,QWORD PTR [r14+0x18]
  4093b1:	mov    rdi,QWORD PTR [rsi+0x18]
  4093b5:	mov    rdx,r12
  4093b8:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  4093bd:	mov    rax,QWORD PTR [r14+0x18]
  4093c1:	movzx  ecx,WORD PTR [rax+0x10]
  4093c5:	cmp    cx,0x1
  4093c9:	je     4095e2 <__flatcc_fb_gen_c_reader@@Base+0x1032>
  4093cf:	cmp    cx,0x3
  4093d3:	jne    409620 <__flatcc_fb_gen_c_reader@@Base+0x1070>
  4093d9:	mov    eax,DWORD PTR [rax+0x48]
  4093dc:	dec    eax
  4093de:	cmp    eax,0xb
  4093e1:	jae    40a634 <__flatcc_fb_gen_c_reader@@Base+0x2084>
  4093e7:	mov    r12,QWORD PTR [rsp+0x18]
  4093ec:	mov    rdi,QWORD PTR [r12+0xd0]
  4093f4:	lea    rsi,[rip+0x2bed0]        # 4352cb <_IO_stdin_used@@Base+0x82cb>
  4093fb:	mov    rdx,r12
  4093fe:	lea    rcx,[rsp+0x60]
  409403:	mov    r8d,r15d
  409406:	mov    r9,rbx
  409409:	xor    eax,eax
  40940b:	mov    QWORD PTR [rsp+0x30],rbx
  409410:	lea    rbx,[rsp+0x160]
  409418:	push   rbx
  409419:	push   rbx
  40941a:	call   406170 <fprintf@plt>
  40941f:	add    rsp,0x10
  409423:	mov    rax,QWORD PTR [r12+0xe0]
  40942b:	mov    r12,rbx
  40942e:	mov    rbx,QWORD PTR [rsp+0x30]
  409433:	cmp    DWORD PTR [rax+0x24],0x0
  409437:	jne    409444 <__flatcc_fb_gen_c_reader@@Base+0xe94>
  409439:	cmp    BYTE PTR [r14+0x70],0x0
  40943e:	js     409665 <__flatcc_fb_gen_c_reader@@Base+0x10b5>
  409444:	cmp    BYTE PTR [r14+0x70],0x0
  409449:	jns    409620 <__flatcc_fb_gen_c_reader@@Base+0x1070>
  40944f:	cmp    DWORD PTR [rsp+0x28],0x0
  409454:	je     409470 <__flatcc_fb_gen_c_reader@@Base+0xec0>
  409456:	mov    rcx,QWORD PTR [r13+0x0]
  40945a:	mov    esi,0x42
  40945f:	mov    edx,0x1
  409464:	lea    rdi,[rip+0x2becf]        # 43533a <_IO_stdin_used@@Base+0x833a>
  40946b:	call   406220 <fwrite@plt>
  409470:	mov    r12,QWORD PTR [rsp+0x18]
  409475:	mov    rcx,QWORD PTR [r12+0xd0]
  40947d:	mov    esi,0x3d
  409482:	mov    edx,0x1
  409487:	lea    rdi,[rip+0x2beef]        # 43537d <_IO_stdin_used@@Base+0x837d>
  40948e:	call   406220 <fwrite@plt>
  409493:	mov    rdi,QWORD PTR [r12+0xd0]
  40949b:	sub    rsp,0x8
  40949f:	lea    rsi,[rip+0x2bf15]        # 4353bb <_IO_stdin_used@@Base+0x83bb>
  4094a6:	mov    rdx,r12
  4094a9:	lea    rax,[rsp+0x68]
  4094ae:	mov    rcx,rax
  4094b1:	mov    r8d,r15d
  4094b4:	mov    r9,rbx
  4094b7:	xor    eax,eax
  4094b9:	lea    rbx,[rsp+0x168]
  4094c1:	push   rbx
  4094c2:	call   406170 <fprintf@plt>
  4094c7:	add    rsp,0x10
  4094cb:	mov    rax,QWORD PTR [r12+0xe0]
  4094d3:	cmp    DWORD PTR [rax+0xa8],0x0
  4094da:	je     409510 <__flatcc_fb_gen_c_reader@@Base+0xf60>
  4094dc:	mov    rdi,QWORD PTR [r12+0xd0]
  4094e4:	lea    rsi,[rip+0x2bf06]        # 4353f1 <_IO_stdin_used@@Base+0x83f1>
  4094eb:	mov    rdx,r12
  4094ee:	lea    rcx,[rsp+0x60]
  4094f3:	mov    r8d,r15d
  4094f6:	mov    r9,QWORD PTR [rsp+0x30]
  4094fb:	xor    eax,eax
  4094fd:	push   rcx
  4094fe:	lea    rbx,[rsp+0x168]
  409506:	push   rbx
  409507:	call   406170 <fprintf@plt>
  40950c:	add    rsp,0x10
  409510:	mov    rbx,QWORD PTR [rsp+0x30]
  409515:	mov    DWORD PTR [rsp+0x20],0x1
  40951d:	cmp    DWORD PTR [rsp+0x28],0x0
  409522:	lea    r12,[rsp+0x160]
  40952a:	jne    409300 <__flatcc_fb_gen_c_reader@@Base+0xd50>
  409530:	mov    r10,r12
  409533:	mov    r12,QWORD PTR [rsp+0x18]
  409538:	mov    rdi,QWORD PTR [r12+0xd0]
  409540:	sub    rsp,0x8
  409544:	lea    rsi,[rip+0x2bee2]        # 43542d <_IO_stdin_used@@Base+0x842d>
  40954b:	mov    rdx,r12
  40954e:	lea    rax,[rsp+0x68]
  409553:	mov    rcx,rax
  409556:	mov    r8d,r15d
  409559:	mov    r9,rbx
  40955c:	xor    eax,eax
  40955e:	push   r10
  409560:	call   406170 <fprintf@plt>
  409565:	add    rsp,0x10
  409569:	mov    rdi,QWORD PTR [r12+0xd0]
  409571:	sub    rsp,0x8
  409575:	lea    rsi,[rip+0x2beef]        # 43546b <_IO_stdin_used@@Base+0x846b>
  40957c:	mov    rdx,r12
  40957f:	lea    rcx,[rsp+0x68]
  409584:	mov    r8d,r15d
  409587:	mov    r9,rbx
  40958a:	xor    eax,eax
  40958c:	lea    rbx,[rsp+0x168]
  409594:	push   rbx
  409595:	call   406170 <fprintf@plt>
  40959a:	add    rsp,0x10
  40959e:	mov    rax,QWORD PTR [r12+0xe0]
  4095a6:	mov    DWORD PTR [rsp+0x20],0x1
  4095ae:	cmp    DWORD PTR [rax+0xa8],0x0
  4095b5:	je     4092e4 <__flatcc_fb_gen_c_reader@@Base+0xd34>
  4095bb:	mov    rdi,QWORD PTR [r13+0x0]
  4095bf:	lea    rsi,[rip+0x2bee3]        # 4354a9 <_IO_stdin_used@@Base+0x84a9>
  4095c6:	lea    rcx,[rsp+0x60]
  4095cb:	mov    rdx,rcx
  4095ce:	mov    r8d,r15d
  4095d1:	mov    r9,QWORD PTR [rsp+0x30]
  4095d6:	xor    eax,eax
  4095d8:	call   406170 <fprintf@plt>
  4095dd:	jmp    4092e4 <__flatcc_fb_gen_c_reader@@Base+0xd34>
  4095e2:	mov    rdx,QWORD PTR [rsp+0x18]
  4095e7:	mov    rdi,QWORD PTR [rdx+0xd0]
  4095ee:	sub    rsp,0x8
  4095f2:	lea    rsi,[rip+0x2bed9]        # 4354d2 <_IO_stdin_used@@Base+0x84d2>
  4095f9:	lea    rcx,[rsp+0x68]
  4095fe:	mov    r8d,r15d
  409601:	mov    r9,rbx
  409604:	xor    eax,eax
  409606:	push   r12
  409608:	call   406170 <fprintf@plt>
  40960d:	add    rsp,0x10
  409611:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40961b:	nop    DWORD PTR [rax+rax*1+0x0]
  409620:	cmp    DWORD PTR [rsp+0x20],0x0
  409625:	jne    409300 <__flatcc_fb_gen_c_reader@@Base+0xd50>
  40962b:	cmp    BYTE PTR [r14+0x70],0x0
  409630:	jns    409300 <__flatcc_fb_gen_c_reader@@Base+0xd50>
  409636:	mov    rcx,QWORD PTR [r13+0x0]
  40963a:	mov    esi,0x54
  40963f:	mov    edx,0x1
  409644:	lea    rdi,[rip+0x2bebe]        # 435509 <_IO_stdin_used@@Base+0x8509>
  40964b:	call   406220 <fwrite@plt>
  409650:	mov    DWORD PTR [rsp+0x28],0x1
  409658:	mov    DWORD PTR [rsp+0x20],0x0
  409660:	jmp    409300 <__flatcc_fb_gen_c_reader@@Base+0xd50>
  409665:	mov    rdx,QWORD PTR [rsp+0x18]
  40966a:	mov    rdi,QWORD PTR [rdx+0xd0]
  409671:	sub    rsp,0x8
  409675:	lea    rsi,[rip+0x2bc88]        # 435304 <_IO_stdin_used@@Base+0x8304>
  40967c:	lea    rcx,[rsp+0x68]
  409681:	mov    r8d,r15d
  409684:	mov    r9,rbx
  409687:	xor    eax,eax
  409689:	push   r12
  40968b:	call   406170 <fprintf@plt>
  409690:	add    rsp,0x10
  409694:	cmp    BYTE PTR [r14+0x70],0x0
  409699:	jns    409620 <__flatcc_fb_gen_c_reader@@Base+0x1070>
  40969b:	jmp    40944f <__flatcc_fb_gen_c_reader@@Base+0xe9f>
  4096a0:	mov    rax,QWORD PTR [r12+0xd8]
  4096a8:	mov    rbx,QWORD PTR [rax+0x40]
  4096ac:	test   rbx,rbx
  4096af:	je     40a4ae <__flatcc_fb_gen_c_reader@@Base+0x1efe>
  4096b5:	lea    r14,[rsp+0x260]
  4096bd:	lea    r15,[rip+0x35ce7]        # 43f3ab <_IO_stdin_used@@Base+0x123ab>
  4096c4:	jmp    4096ec <__flatcc_fb_gen_c_reader@@Base+0x113c>
  4096c6:	mov    r12,QWORD PTR [rsp+0x18]
  4096cb:	mov    rbx,QWORD PTR [rsp+0x48]
  4096d0:	lea    r14,[rsp+0x260]
  4096d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4096e0:	mov    rbx,QWORD PTR [rbx]
  4096e3:	test   rbx,rbx
  4096e6:	je     40a4ae <__flatcc_fb_gen_c_reader@@Base+0x1efe>
  4096ec:	mov    eax,DWORD PTR [rbx+0x10]
  4096ef:	lea    ecx,[rax-0x1]
  4096f2:	cmp    cx,0x3
  4096f6:	jb     4096e0 <__flatcc_fb_gen_c_reader@@Base+0x1130>
  4096f8:	test   ax,ax
  4096fb:	je     409714 <__flatcc_fb_gen_c_reader@@Base+0x1164>
  4096fd:	cmp    ax,0x4
  409701:	jne    40a69f <__flatcc_fb_gen_c_reader@@Base+0x20ef>
  409707:	mov    rdi,r12
  40970a:	mov    rsi,rbx
  40970d:	call   40aa20 <__flatcc_fb_gen_c_reader@@Base+0x2470>
  409712:	jmp    4096e0 <__flatcc_fb_gen_c_reader@@Base+0x1130>
  409714:	vxorps xmm0,xmm0,xmm0
  409718:	vmovaps YMMWORD PTR [rsp+0x260],ymm0
  409721:	vmovaps YMMWORD PTR [rsp+0x280],ymm0
  40972a:	vmovaps YMMWORD PTR [rsp+0x2a0],ymm0
  409733:	vmovaps YMMWORD PTR [rsp+0x2c0],ymm0
  40973c:	vmovaps YMMWORD PTR [rsp+0x2e0],ymm0
  409745:	vmovaps YMMWORD PTR [rsp+0x300],ymm0
  40974e:	vmovaps YMMWORD PTR [rsp+0x320],ymm0
  409757:	mov    QWORD PTR [rsp+0x340],0x0
  409763:	vmovaps YMMWORD PTR [rsp+0x360],ymm0
  40976c:	vmovaps YMMWORD PTR [rsp+0x380],ymm0
  409775:	vmovaps YMMWORD PTR [rsp+0x3a0],ymm0
  40977e:	vmovaps YMMWORD PTR [rsp+0x3c0],ymm0
  409787:	vmovaps YMMWORD PTR [rsp+0x3e0],ymm0
  409790:	vmovaps YMMWORD PTR [rsp+0x400],ymm0
  409799:	vmovaps YMMWORD PTR [rsp+0x420],ymm0
  4097a2:	mov    QWORD PTR [rsp+0x440],0x0
  4097ae:	mov    rsi,QWORD PTR [r13+0x0]
  4097b2:	mov    edi,0xa
  4097b7:	vzeroupper 
  4097ba:	call   406110 <fputc@plt>
  4097bf:	mov    rdi,QWORD PTR [rbx+0x18]
  4097c3:	mov    rsi,rbx
  4097c6:	mov    rdx,r14
  4097c9:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  4097ce:	mov    QWORD PTR [rsp+0x48],rbx
  4097d3:	mov    r14,QWORD PTR [rbx+0x40]
  4097d7:	test   r14,r14
  4097da:	je     40989a <__flatcc_fb_gen_c_reader@@Base+0x12ea>
  4097e0:	mov    rax,QWORD PTR [r14+0x8]
  4097e4:	cmp    QWORD PTR [rax+0x10],0x0
  4097e9:	je     409804 <__flatcc_fb_gen_c_reader@@Base+0x1254>
  4097eb:	mov    rdi,QWORD PTR [r13+0x0]
  4097ef:	lea    rsi,[rip+0x2b4b9]        # 434caf <_IO_stdin_used@@Base+0x7caf>
  4097f6:	lea    rdx,[rip+0x24d52]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  4097fd:	xor    eax,eax
  4097ff:	call   406170 <fprintf@plt>
  409804:	mov    rdi,QWORD PTR [r13+0x0]
  409808:	mov    rax,QWORD PTR [r14+0x8]
  40980c:	mov    edx,DWORD PTR [rax+0x8]
  40980f:	mov    rcx,QWORD PTR [rax]
  409812:	mov    rsi,r15
  409815:	xor    eax,eax
  409817:	call   406170 <fprintf@plt>
  40981c:	mov    rbx,QWORD PTR [r14]
  40981f:	test   rbx,rbx
  409822:	je     409880 <__flatcc_fb_gen_c_reader@@Base+0x12d0>
  409824:	mov    rax,QWORD PTR [r14+0x8]
  409828:	mov    rax,QWORD PTR [rax+0x10]
  40982c:	jmp    40985b <__flatcc_fb_gen_c_reader@@Base+0x12ab>
  40982e:	xchg   ax,ax
  409830:	mov    rdi,QWORD PTR [r13+0x0]
  409834:	mov    rax,QWORD PTR [rbx+0x8]
  409838:	mov    edx,DWORD PTR [rax+0x8]
  40983b:	mov    rcx,QWORD PTR [rax]
  40983e:	mov    rsi,r15
  409841:	xor    eax,eax
  409843:	call   406170 <fprintf@plt>
  409848:	mov    rax,QWORD PTR [rbx+0x8]
  40984c:	mov    rcx,QWORD PTR [rbx]
  40984f:	mov    rax,QWORD PTR [rax+0x10]
  409853:	mov    rbx,rcx
  409856:	test   rcx,rcx
  409859:	je     409880 <__flatcc_fb_gen_c_reader@@Base+0x12d0>
  40985b:	mov    rcx,QWORD PTR [rbx+0x8]
  40985f:	cmp    rax,QWORD PTR [rcx+0x10]
  409863:	je     409830 <__flatcc_fb_gen_c_reader@@Base+0x1280>
  409865:	mov    rdi,QWORD PTR [r13+0x0]
  409869:	lea    rsi,[rip+0x2b446]        # 434cb6 <_IO_stdin_used@@Base+0x7cb6>
  409870:	lea    rdx,[rip+0x24cd8]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  409877:	xor    eax,eax
  409879:	call   406170 <fprintf@plt>
  40987e:	jmp    409830 <__flatcc_fb_gen_c_reader@@Base+0x1280>
  409880:	mov    rcx,QWORD PTR [r13+0x0]
  409884:	mov    esi,0x4
  409889:	mov    edx,0x1
  40988e:	lea    rdi,[rip+0x39ff7]        # 44388c <_IO_stdin_used@@Base+0x1688c>
  409895:	call   406220 <fwrite@plt>
  40989a:	mov    rdi,QWORD PTR [r12+0xd0]
  4098a2:	lea    rsi,[rip+0x2bd35]        # 4355de <_IO_stdin_used@@Base+0x85de>
  4098a9:	lea    rbx,[rsp+0x260]
  4098b1:	mov    rdx,rbx
  4098b4:	xor    eax,eax
  4098b6:	call   406170 <fprintf@plt>
  4098bb:	mov    rdi,QWORD PTR [r12+0xd0]
  4098c3:	lea    rsi,[rip+0x2b973]        # 43523d <_IO_stdin_used@@Base+0x823d>
  4098ca:	mov    rdx,rbx
  4098cd:	mov    rcx,rbx
  4098d0:	mov    r8,r12
  4098d3:	xor    eax,eax
  4098d5:	call   406170 <fprintf@plt>
  4098da:	mov    rdi,QWORD PTR [r12+0xd0]
  4098e2:	sub    rsp,0x8
  4098e6:	lea    rsi,[rip+0x2bd1a]        # 435607 <_IO_stdin_used@@Base+0x8607>
  4098ed:	mov    rdx,rbx
  4098f0:	mov    rcx,rbx
  4098f3:	mov    r8,rbx
  4098f6:	mov    r9,r12
  4098f9:	xor    eax,eax
  4098fb:	push   rbx
  4098fc:	call   406170 <fprintf@plt>
  409901:	add    rsp,0x10
  409905:	mov    rdi,QWORD PTR [r12+0xd0]
  40990d:	lea    rsi,[rip+0x2bd58]        # 43566c <_IO_stdin_used@@Base+0x866c>
  409914:	mov    rdx,r12
  409917:	mov    rcx,rbx
  40991a:	xor    eax,eax
  40991c:	call   406170 <fprintf@plt>
  409921:	mov    rsi,QWORD PTR [r12+0xd0]
  409929:	mov    edi,0xa
  40992e:	call   406110 <fputc@plt>
  409933:	mov    rax,QWORD PTR [rsp+0x48]
  409938:	mov    r12,QWORD PTR [rax+0x28]
  40993c:	test   r12,r12
  40993f:	je     4096c6 <__flatcc_fb_gen_c_reader@@Base+0x1116>
  409945:	mov    DWORD PTR [rsp+0x30],0x0
  40994d:	jmp    40997d <__flatcc_fb_gen_c_reader@@Base+0x13cd>
  40994f:	nop
  409950:	mov    rdi,QWORD PTR [r13+0x0]
  409954:	lea    rsi,[rip+0x2bd28]        # 435683 <_IO_stdin_used@@Base+0x8683>
  40995b:	lea    rdx,[rsp+0x260]
  409963:	mov    ecx,r9d
  409966:	mov    r8,r11
  409969:	xor    eax,eax
  40996b:	call   406170 <fprintf@plt>
  409970:	mov    r12,QWORD PTR [r12]
  409974:	test   r12,r12
  409977:	je     4096c6 <__flatcc_fb_gen_c_reader@@Base+0x1116>
  40997d:	mov    r14,QWORD PTR [r12+0x68]
  409982:	test   r14,r14
  409985:	je     409a4a <__flatcc_fb_gen_c_reader@@Base+0x149a>
  40998b:	mov    rax,QWORD PTR [r14+0x8]
  40998f:	cmp    QWORD PTR [rax+0x10],0x0
  409994:	je     4099af <__flatcc_fb_gen_c_reader@@Base+0x13ff>
  409996:	mov    rdi,QWORD PTR [r13+0x0]
  40999a:	lea    rsi,[rip+0x2b30e]        # 434caf <_IO_stdin_used@@Base+0x7caf>
  4099a1:	lea    rdx,[rip+0x24ba7]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  4099a8:	xor    eax,eax
  4099aa:	call   406170 <fprintf@plt>
  4099af:	mov    rdi,QWORD PTR [r13+0x0]
  4099b3:	mov    rax,QWORD PTR [r14+0x8]
  4099b7:	mov    edx,DWORD PTR [rax+0x8]
  4099ba:	mov    rcx,QWORD PTR [rax]
  4099bd:	mov    rsi,r15
  4099c0:	xor    eax,eax
  4099c2:	call   406170 <fprintf@plt>
  4099c7:	mov    rbx,QWORD PTR [r14]
  4099ca:	test   rbx,rbx
  4099cd:	je     409a30 <__flatcc_fb_gen_c_reader@@Base+0x1480>
  4099cf:	mov    rax,QWORD PTR [r14+0x8]
  4099d3:	mov    rax,QWORD PTR [rax+0x10]
  4099d7:	jmp    409a0b <__flatcc_fb_gen_c_reader@@Base+0x145b>
  4099d9:	nop    DWORD PTR [rax+0x0]
  4099e0:	mov    rdi,QWORD PTR [r13+0x0]
  4099e4:	mov    rax,QWORD PTR [rbx+0x8]
  4099e8:	mov    edx,DWORD PTR [rax+0x8]
  4099eb:	mov    rcx,QWORD PTR [rax]
  4099ee:	mov    rsi,r15
  4099f1:	xor    eax,eax
  4099f3:	call   406170 <fprintf@plt>
  4099f8:	mov    rax,QWORD PTR [rbx+0x8]
  4099fc:	mov    rcx,QWORD PTR [rbx]
  4099ff:	mov    rax,QWORD PTR [rax+0x10]
  409a03:	mov    rbx,rcx
  409a06:	test   rcx,rcx
  409a09:	je     409a30 <__flatcc_fb_gen_c_reader@@Base+0x1480>
  409a0b:	mov    rcx,QWORD PTR [rbx+0x8]
  409a0f:	cmp    rax,QWORD PTR [rcx+0x10]
  409a13:	je     4099e0 <__flatcc_fb_gen_c_reader@@Base+0x1430>
  409a15:	mov    rdi,QWORD PTR [r13+0x0]
  409a19:	lea    rsi,[rip+0x2b296]        # 434cb6 <_IO_stdin_used@@Base+0x7cb6>
  409a20:	lea    rdx,[rip+0x24b28]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  409a27:	xor    eax,eax
  409a29:	call   406170 <fprintf@plt>
  409a2e:	jmp    4099e0 <__flatcc_fb_gen_c_reader@@Base+0x1430>
  409a30:	mov    rcx,QWORD PTR [r13+0x0]
  409a34:	mov    esi,0x4
  409a39:	mov    edx,0x1
  409a3e:	lea    rdi,[rip+0x39e47]        # 44388c <_IO_stdin_used@@Base+0x1688c>
  409a45:	call   406220 <fwrite@plt>
  409a4a:	mov    rax,QWORD PTR [r12+0x8]
  409a4f:	mov    r9d,DWORD PTR [rax+0x8]
  409a53:	mov    r11,QWORD PTR [rax]
  409a56:	movzx  r14d,WORD PTR [r12+0x70]
  409a5c:	test   r14b,0x4
  409a60:	jne    409950 <__flatcc_fb_gen_c_reader@@Base+0x13a0>
  409a66:	mov    eax,DWORD PTR [r12+0x28]
  409a6b:	add    eax,0xfffffff9
  409a6e:	cmp    ax,0x8
  409a72:	ja     40a5cc <__flatcc_fb_gen_c_reader@@Base+0x201c>
  409a78:	shr    r14d,0x8
  409a7c:	and    r14d,0x1
  409a80:	movzx  eax,ax
  409a83:	lea    rcx,[rip+0x24802]        # 42e28c <_IO_stdin_used@@Base+0x128c>
  409a8a:	movsxd rax,DWORD PTR [rcx+rax*4]
  409a8e:	add    rax,rcx
  409a91:	jmp    rax
  409a93:	mov    eax,DWORD PTR [r12+0x18]
  409a98:	dec    eax
  409a9a:	cmp    eax,0xb
  409a9d:	jae    40a7be <__flatcc_fb_gen_c_reader@@Base+0x220e>
  409aa3:	movsxd r10,eax
  409aa6:	mov    rdx,QWORD PTR [rsp+0x18]
  409aab:	mov    rdi,QWORD PTR [rdx+0xd0]
  409ab2:	mov    rcx,QWORD PTR [r12+0x88]
  409aba:	lea    rsi,[rip+0x2bd3a]        # 4357fb <_IO_stdin_used@@Base+0x87fb>
  409ac1:	lea    r8,[rsp+0x260]
  409ac9:	mov    eax,0x0
  409ace:	push   r14
  409ad0:	lea    rbx,[rip+0x45fe1]        # 44fab8 <fb_value_set_deleted@@Base+0x6038>
  409ad7:	push   QWORD PTR [rbx+r10*8]
  409adb:	push   rdx
  409adc:	push   r11
  409ade:	call   406170 <fprintf@plt>
  409ae3:	add    rsp,0x20
  409ae7:	mov    rsi,QWORD PTR [r12+0x90]
  409aef:	test   rsi,rsi
  409af2:	je     40a213 <__flatcc_fb_gen_c_reader@@Base+0x1c63>
  409af8:	vxorps xmm0,xmm0,xmm0
  409afc:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  409b02:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  409b0b:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  409b14:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  409b1d:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  409b26:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  409b2f:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  409b38:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  409b41:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  409b4a:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  409b53:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  409b5c:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  409b65:	vmovaps YMMWORD PTR [rsp+0x200],ymm0
  409b6e:	mov    QWORD PTR [rsp+0x140],0x0
  409b7a:	vmovaps YMMWORD PTR [rsp+0x220],ymm0
  409b83:	mov    QWORD PTR [rsp+0x240],0x0
  409b8f:	movzx  eax,WORD PTR [rsi+0x10]
  409b93:	lea    r14,[rip+0x2c0e6]        # 435c80 <_IO_stdin_used@@Base+0x8c80>
  409b9a:	test   ax,ax
  409b9d:	mov    rbx,QWORD PTR [rsp+0x48]
  409ba2:	lea    rdx,[rsp+0x60]
  409ba7:	je     409bba <__flatcc_fb_gen_c_reader@@Base+0x160a>
  409ba9:	cmp    ax,0x1
  409bad:	jne    40a807 <__flatcc_fb_gen_c_reader@@Base+0x2257>
  409bb3:	lea    r14,[rip+0x2c0cd]        # 435c87 <_IO_stdin_used@@Base+0x8c87>
  409bba:	mov    rdi,QWORD PTR [rsi+0x18]
  409bbe:	vzeroupper 
  409bc1:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  409bc6:	cmp    WORD PTR [rbx+0x10],0x0
  409bcb:	jne    40a853 <__flatcc_fb_gen_c_reader@@Base+0x22a3>
  409bd1:	mov    rdi,QWORD PTR [rbx+0x18]
  409bd5:	mov    rsi,rbx
  409bd8:	lea    rbx,[rsp+0x160]
  409be0:	mov    rdx,rbx
  409be3:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  409be8:	mov    rax,QWORD PTR [r12+0x8]
  409bed:	mov    r8d,DWORD PTR [rax+0x8]
  409bf1:	mov    r9,QWORD PTR [rax]
  409bf4:	mov    rdx,QWORD PTR [rsp+0x18]
  409bf9:	mov    rdi,QWORD PTR [rdx+0xd0]
  409c00:	lea    rsi,[rip+0x2c12c]        # 435d33 <_IO_stdin_used@@Base+0x8d33>
  409c07:	mov    rcx,rbx
  409c0a:	xor    eax,eax
  409c0c:	push   r14
  409c0e:	lea    rbx,[rsp+0x68]
  409c13:	push   rbx
  409c14:	call   406170 <fprintf@plt>
  409c19:	add    rsp,0x10
  409c1d:	cmp    BYTE PTR [r12+0x70],0x0
  409c23:	jns    409970 <__flatcc_fb_gen_c_reader@@Base+0x13c0>
  409c29:	jmp    40a21f <__flatcc_fb_gen_c_reader@@Base+0x1c6f>
  409c2e:	mov    rbx,QWORD PTR [rsp+0x18]
  409c33:	mov    rdi,QWORD PTR [rbx+0xd0]
  409c3a:	mov    rcx,QWORD PTR [r12+0x88]
  409c42:	lea    rsi,[rip+0x2bbe5]        # 43582e <_IO_stdin_used@@Base+0x882e>
  409c49:	mov    rdx,rbx
  409c4c:	lea    r8,[rsp+0x260]
  409c54:	mov    QWORD PTR [rsp+0x20],r9
  409c59:	xor    eax,eax
  409c5b:	push   r14
  409c5d:	mov    QWORD PTR [rsp+0x30],r11
  409c62:	push   r11
  409c64:	call   406170 <fprintf@plt>
  409c69:	add    rsp,0x10
  409c6d:	mov    rax,QWORD PTR [rbx+0xe0]
  409c74:	cmp    DWORD PTR [rax+0x24],0x0
  409c78:	jne    409c86 <__flatcc_fb_gen_c_reader@@Base+0x16d6>
  409c7a:	cmp    BYTE PTR [r12+0x70],0x0
  409c80:	js     40a428 <__flatcc_fb_gen_c_reader@@Base+0x1e78>
  409c86:	cmp    BYTE PTR [r12+0x70],0x0
  409c8c:	jns    40a213 <__flatcc_fb_gen_c_reader@@Base+0x1c63>
  409c92:	cmp    DWORD PTR [rsp+0x30],0x0
  409c97:	je     409cb3 <__flatcc_fb_gen_c_reader@@Base+0x1703>
  409c99:	mov    rcx,QWORD PTR [r13+0x0]
  409c9d:	mov    esi,0x42
  409ca2:	mov    edx,0x1
  409ca7:	lea    rdi,[rip+0x2b68c]        # 43533a <_IO_stdin_used@@Base+0x833a>
  409cae:	call   406220 <fwrite@plt>
  409cb3:	mov    rbx,QWORD PTR [rsp+0x18]
  409cb8:	mov    rdi,QWORD PTR [rbx+0xd0]
  409cbf:	lea    rsi,[rip+0x2bbc0]        # 435886 <_IO_stdin_used@@Base+0x8886>
  409cc6:	mov    rdx,rbx
  409cc9:	lea    r14,[rsp+0x260]
  409cd1:	mov    rcx,r14
  409cd4:	mov    r8,QWORD PTR [rsp+0x20]
  409cd9:	mov    r9,QWORD PTR [rsp+0x28]
  409cde:	xor    eax,eax
  409ce0:	call   406170 <fprintf@plt>
  409ce5:	mov    rax,QWORD PTR [rbx+0xe0]
  409cec:	cmp    DWORD PTR [rax+0xa8],0x0
  409cf3:	je     409d1a <__flatcc_fb_gen_c_reader@@Base+0x176a>
  409cf5:	mov    rdi,QWORD PTR [rbx+0xd0]
  409cfc:	lea    rsi,[rip+0x2bbae]        # 4358b1 <_IO_stdin_used@@Base+0x88b1>
  409d03:	mov    rdx,rbx
  409d06:	mov    rcx,r14
  409d09:	mov    r8,QWORD PTR [rsp+0x20]
  409d0e:	mov    r9,QWORD PTR [rsp+0x28]
  409d13:	xor    eax,eax
  409d15:	call   406170 <fprintf@plt>
  409d1a:	cmp    DWORD PTR [rsp+0x30],0x0
  409d1f:	jne    409970 <__flatcc_fb_gen_c_reader@@Base+0x13c0>
  409d25:	mov    rbx,QWORD PTR [rsp+0x18]
  409d2a:	mov    rdi,QWORD PTR [rbx+0xd0]
  409d31:	lea    rsi,[rip+0x2bba4]        # 4358dc <_IO_stdin_used@@Base+0x88dc>
  409d38:	mov    rdx,rbx
  409d3b:	lea    r14,[rsp+0x260]
  409d43:	mov    rcx,r14
  409d46:	mov    r8,QWORD PTR [rsp+0x20]
  409d4b:	mov    r14,QWORD PTR [rsp+0x28]
  409d50:	mov    r9,r14
  409d53:	xor    eax,eax
  409d55:	call   406170 <fprintf@plt>
  409d5a:	mov    rdi,QWORD PTR [rbx+0xd0]
  409d61:	lea    rsi,[rip+0x2bba7]        # 43590f <_IO_stdin_used@@Base+0x890f>
  409d68:	mov    rdx,rbx
  409d6b:	lea    rcx,[rsp+0x260]
  409d73:	mov    r8,QWORD PTR [rsp+0x20]
  409d78:	mov    r9,r14
  409d7b:	xor    eax,eax
  409d7d:	call   406170 <fprintf@plt>
  409d82:	jmp    409fe0 <__flatcc_fb_gen_c_reader@@Base+0x1a30>
  409d87:	mov    QWORD PTR [rsp+0x20],r9
  409d8c:	mov    QWORD PTR [rsp+0x28],r11
  409d91:	mov    edi,DWORD PTR [r12+0x18]
  409d96:	cmp    edi,0x5
  409d99:	lea    r14,[rip+0x247af]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  409da0:	mov    r15,QWORD PTR [rsp+0x18]
  409da5:	cmove  r14,r15
  409da9:	lea    eax,[rdi-0x1]
  409dac:	cmp    eax,0xb
  409daf:	jae    40a521 <__flatcc_fb_gen_c_reader@@Base+0x1f71>
  409db5:	cdqe   
  409db7:	lea    rcx,[rip+0x45d52]        # 44fb10 <fb_value_set_deleted@@Base+0x6090>
  409dbe:	mov    rcx,QWORD PTR [rcx+rax*8]
  409dc2:	mov    QWORD PTR [rsp+0x38],rcx
  409dc7:	lea    rcx,[rip+0x45c92]        # 44fa60 <fb_value_set_deleted@@Base+0x5fe0>
  409dce:	mov    rax,QWORD PTR [rcx+rax*8]
  409dd2:	mov    QWORD PTR [rsp+0x40],rax
  409dd7:	lea    rsi,[r12+0x48]
  409ddc:	lea    rax,[rsp+0x460]
  409de4:	mov    rdx,rax
  409de7:	call   40b090 <__flatcc_fb_gen_c_reader@@Base+0x2ae0>
  409dec:	mov    rdi,QWORD PTR [r15+0xd0]
  409df3:	mov    rcx,QWORD PTR [r12+0x88]
  409dfb:	lea    rsi,[rip+0x2b8ae]        # 4356b0 <_IO_stdin_used@@Base+0x86b0>
  409e02:	mov    rdx,r15
  409e05:	lea    r8,[rsp+0x260]
  409e0d:	mov    r9,QWORD PTR [rsp+0x20]
  409e12:	mov    eax,0x0
  409e17:	lea    rbx,[rsp+0x460]
  409e1f:	push   rbx
  409e20:	push   QWORD PTR [rsp+0x40]
  409e24:	push   r14
  409e26:	push   QWORD PTR [rsp+0x58]
  409e2a:	push   r15
  409e2c:	push   QWORD PTR [rsp+0x50]
  409e30:	call   406170 <fprintf@plt>
  409e35:	add    rsp,0x30
  409e39:	mov    rax,QWORD PTR [r15+0xe0]
  409e40:	cmp    DWORD PTR [rax+0x24],0x0
  409e44:	jne    409e84 <__flatcc_fb_gen_c_reader@@Base+0x18d4>
  409e46:	cmp    BYTE PTR [r12+0x70],0x0
  409e4c:	jns    409e84 <__flatcc_fb_gen_c_reader@@Base+0x18d4>
  409e4e:	mov    rdx,QWORD PTR [rsp+0x18]
  409e53:	mov    rdi,QWORD PTR [rdx+0xd0]
  409e5a:	lea    rsi,[rip+0x2b888]        # 4356e9 <_IO_stdin_used@@Base+0x86e9>
  409e61:	lea    rcx,[rsp+0x260]
  409e69:	mov    r8,QWORD PTR [rsp+0x20]
  409e6e:	mov    r9,QWORD PTR [rsp+0x28]
  409e73:	xor    eax,eax
  409e75:	push   QWORD PTR [rsp+0x38]
  409e79:	push   r14
  409e7b:	call   406170 <fprintf@plt>
  409e80:	add    rsp,0x10
  409e84:	cmp    BYTE PTR [r12+0x70],0x0
  409e8a:	lea    r15,[rip+0x3551a]        # 43f3ab <_IO_stdin_used@@Base+0x123ab>
  409e91:	jns    40a213 <__flatcc_fb_gen_c_reader@@Base+0x1c63>
  409e97:	cmp    DWORD PTR [rsp+0x30],0x0
  409e9c:	je     409eb8 <__flatcc_fb_gen_c_reader@@Base+0x1908>
  409e9e:	mov    rcx,QWORD PTR [r13+0x0]
  409ea2:	mov    esi,0x42
  409ea7:	mov    edx,0x1
  409eac:	lea    rdi,[rip+0x2b487]        # 43533a <_IO_stdin_used@@Base+0x833a>
  409eb3:	call   406220 <fwrite@plt>
  409eb8:	mov    rbx,QWORD PTR [rsp+0x18]
  409ebd:	mov    rcx,QWORD PTR [rbx+0xd0]
  409ec4:	mov    esi,0x3d
  409ec9:	mov    edx,0x1
  409ece:	lea    rdi,[rip+0x2b4a8]        # 43537d <_IO_stdin_used@@Base+0x837d>
  409ed5:	call   406220 <fwrite@plt>
  409eda:	mov    rdi,QWORD PTR [rbx+0xd0]
  409ee1:	lea    rsi,[rip+0x2b832]        # 43571a <_IO_stdin_used@@Base+0x871a>
  409ee8:	mov    rdx,rbx
  409eeb:	lea    rax,[rsp+0x260]
  409ef3:	mov    rcx,rax
  409ef6:	mov    r8,QWORD PTR [rsp+0x20]
  409efb:	mov    r9,QWORD PTR [rsp+0x28]
  409f00:	xor    eax,eax
  409f02:	push   QWORD PTR [rsp+0x38]
  409f06:	push   r14
  409f08:	call   406170 <fprintf@plt>
  409f0d:	add    rsp,0x10
  409f11:	mov    rax,QWORD PTR [rbx+0xe0]
  409f18:	cmp    DWORD PTR [rax+0xa8],0x0
  409f1f:	je     409f5a <__flatcc_fb_gen_c_reader@@Base+0x19aa>
  409f21:	mov    rdi,QWORD PTR [rbx+0xd0]
  409f28:	sub    rsp,0x8
  409f2c:	lea    rsi,[rip+0x2b818]        # 43574b <_IO_stdin_used@@Base+0x874b>
  409f33:	mov    rdx,rbx
  409f36:	lea    rcx,[rsp+0x268]
  409f3e:	mov    r8,QWORD PTR [rsp+0x28]
  409f43:	mov    r9,QWORD PTR [rsp+0x30]
  409f48:	xor    eax,eax
  409f4a:	push   rbx
  409f4b:	push   QWORD PTR [rsp+0x48]
  409f4f:	push   r14
  409f51:	call   406170 <fprintf@plt>
  409f56:	add    rsp,0x20
  409f5a:	cmp    DWORD PTR [rsp+0x30],0x0
  409f5f:	jne    409970 <__flatcc_fb_gen_c_reader@@Base+0x13c0>
  409f65:	mov    rbx,QWORD PTR [rsp+0x18]
  409f6a:	mov    rdi,QWORD PTR [rbx+0xd0]
  409f71:	lea    rsi,[rip+0x2b811]        # 435789 <_IO_stdin_used@@Base+0x8789>
  409f78:	mov    rdx,rbx
  409f7b:	lea    rax,[rsp+0x260]
  409f83:	mov    rcx,rax
  409f86:	mov    r8,QWORD PTR [rsp+0x20]
  409f8b:	mov    r9,QWORD PTR [rsp+0x28]
  409f90:	xor    eax,eax
  409f92:	mov    r10,r14
  409f95:	mov    QWORD PTR [rsp+0x58],r14
  409f9a:	mov    r14,QWORD PTR [rsp+0x38]
  409f9f:	push   r14
  409fa1:	push   r10
  409fa3:	call   406170 <fprintf@plt>
  409fa8:	add    rsp,0x10
  409fac:	mov    rdi,QWORD PTR [rbx+0xd0]
  409fb3:	lea    rsi,[rip+0x2b808]        # 4357c2 <_IO_stdin_used@@Base+0x87c2>
  409fba:	mov    rdx,rbx
  409fbd:	lea    rcx,[rsp+0x260]
  409fc5:	mov    r8,QWORD PTR [rsp+0x20]
  409fca:	mov    r9,QWORD PTR [rsp+0x28]
  409fcf:	xor    eax,eax
  409fd1:	push   r14
  409fd3:	push   QWORD PTR [rsp+0x60]
  409fd7:	call   406170 <fprintf@plt>
  409fdc:	add    rsp,0x10
  409fe0:	mov    rax,QWORD PTR [rbx+0xe0]
  409fe7:	mov    DWORD PTR [rsp+0x30],0x1
  409fef:	cmp    DWORD PTR [rax+0xa8],0x0
  409ff6:	je     409970 <__flatcc_fb_gen_c_reader@@Base+0x13c0>
  409ffc:	mov    rdi,QWORD PTR [r13+0x0]
  40a000:	lea    rsi,[rip+0x2b4a2]        # 4354a9 <_IO_stdin_used@@Base+0x84a9>
  40a007:	lea    rcx,[rsp+0x260]
  40a00f:	mov    rdx,rcx
  40a012:	mov    r8,QWORD PTR [rsp+0x20]
  40a017:	mov    r9,QWORD PTR [rsp+0x28]
  40a01c:	xor    eax,eax
  40a01e:	call   406170 <fprintf@plt>
  40a023:	jmp    409970 <__flatcc_fb_gen_c_reader@@Base+0x13c0>
  40a028:	mov    rdx,QWORD PTR [rsp+0x18]
  40a02d:	mov    rdi,QWORD PTR [rdx+0xd0]
  40a034:	mov    rcx,QWORD PTR [r12+0x88]
  40a03c:	sub    rsp,0x8
  40a040:	lea    rsi,[rip+0x2b8fb]        # 435942 <_IO_stdin_used@@Base+0x8942>
  40a047:	lea    r8,[rsp+0x268]
  40a04f:	xor    eax,eax
  40a051:	push   r14
  40a053:	push   rdx
  40a054:	push   r11
  40a056:	jmp    40a20a <__flatcc_fb_gen_c_reader@@Base+0x1c5a>
  40a05b:	mov    QWORD PTR [rsp+0x20],r9
  40a060:	mov    rbx,r11
  40a063:	mov    rsi,QWORD PTR [r12+0x18]
  40a068:	mov    rdi,QWORD PTR [rsi+0x18]
  40a06c:	lea    rdx,[rsp+0x360]
  40a074:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40a079:	mov    rax,QWORD PTR [r12+0x18]
  40a07e:	movzx  eax,WORD PTR [rax+0x10]
  40a082:	cmp    ax,0x4
  40a086:	ja     40a6e8 <__flatcc_fb_gen_c_reader@@Base+0x2138>
  40a08c:	cmp    ax,0x2
  40a090:	je     40a6e8 <__flatcc_fb_gen_c_reader@@Base+0x2138>
  40a096:	mov    rdi,QWORD PTR [r13+0x0]
  40a09a:	mov    r8,QWORD PTR [r12+0x88]
  40a0a2:	cmp    ax,0x4
  40a0a6:	mov    r10,rbx
  40a0a9:	jne    40a144 <__flatcc_fb_gen_c_reader@@Base+0x1b94>
  40a0af:	lea    rsi,[rip+0x2ba87]        # 435b3d <_IO_stdin_used@@Base+0x8b3d>
  40a0b6:	mov    rcx,QWORD PTR [rsp+0x18]
  40a0bb:	mov    rdx,rcx
  40a0be:	lea    r9,[rsp+0x260]
  40a0c6:	mov    eax,0x0
  40a0cb:	push   r14
  40a0cd:	lea    rbx,[rsp+0x368]
  40a0d5:	push   rbx
  40a0d6:	push   r10
  40a0d8:	jmp    40a1b2 <__flatcc_fb_gen_c_reader@@Base+0x1c02>
  40a0dd:	mov    QWORD PTR [rsp+0x20],r9
  40a0e2:	mov    QWORD PTR [rsp+0x28],r11
  40a0e7:	mov    rsi,QWORD PTR [r12+0x18]
  40a0ec:	mov    rdi,QWORD PTR [rsi+0x18]
  40a0f0:	lea    rdx,[rsp+0x360]
  40a0f8:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40a0fd:	mov    rax,QWORD PTR [r12+0x18]
  40a102:	movzx  ecx,WORD PTR [rax+0x10]
  40a106:	cmp    rcx,0x4
  40a10a:	ja     40a731 <__flatcc_fb_gen_c_reader@@Base+0x2181>
  40a110:	lea    rdx,[rip+0x24199]        # 42e2b0 <_IO_stdin_used@@Base+0x12b0>
  40a117:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40a11b:	add    rcx,rdx
  40a11e:	jmp    rcx
  40a120:	mov    rdx,QWORD PTR [rsp+0x18]
  40a125:	mov    rdi,QWORD PTR [rdx+0xd0]
  40a12c:	mov    rcx,QWORD PTR [r12+0x88]
  40a134:	sub    rsp,0x8
  40a138:	lea    rsi,[rip+0x2b87a]        # 4359b9 <_IO_stdin_used@@Base+0x89b9>
  40a13f:	jmp    40a1ec <__flatcc_fb_gen_c_reader@@Base+0x1c3c>
  40a144:	sub    rsp,0x8
  40a148:	lea    rsi,[rip+0x2ba29]        # 435b78 <_IO_stdin_used@@Base+0x8b78>
  40a14f:	mov    rdx,QWORD PTR [rsp+0x20]
  40a154:	mov    rcx,r8
  40a157:	lea    r8,[rsp+0x268]
  40a15f:	mov    r9,QWORD PTR [rsp+0x28]
  40a164:	xor    eax,eax
  40a166:	push   r14
  40a168:	lea    rbx,[rsp+0x370]
  40a170:	push   rbx
  40a171:	push   r10
  40a173:	jmp    40a20a <__flatcc_fb_gen_c_reader@@Base+0x1c5a>
  40a178:	mov    rcx,QWORD PTR [rsp+0x18]
  40a17d:	mov    rdi,QWORD PTR [rcx+0xd0]
  40a184:	mov    r8,QWORD PTR [r12+0x88]
  40a18c:	lea    rsi,[rip+0x2b8dd]        # 435a70 <_IO_stdin_used@@Base+0x8a70>
  40a193:	mov    rdx,rcx
  40a196:	lea    r9,[rsp+0x260]
  40a19e:	mov    eax,0x0
  40a1a3:	push   r14
  40a1a5:	lea    rbx,[rsp+0x368]
  40a1ad:	push   rbx
  40a1ae:	push   QWORD PTR [rsp+0x38]
  40a1b2:	push   QWORD PTR [rsp+0x38]
  40a1b6:	call   406170 <fprintf@plt>
  40a1bb:	add    rsp,0x20
  40a1bf:	cmp    BYTE PTR [r12+0x70],0x0
  40a1c5:	jns    409970 <__flatcc_fb_gen_c_reader@@Base+0x13c0>
  40a1cb:	jmp    40a21f <__flatcc_fb_gen_c_reader@@Base+0x1c6f>
  40a1cd:	mov    rdx,QWORD PTR [rsp+0x18]
  40a1d2:	mov    rdi,QWORD PTR [rdx+0xd0]
  40a1d9:	mov    rcx,QWORD PTR [r12+0x88]
  40a1e1:	sub    rsp,0x8
  40a1e5:	lea    rsi,[rip+0x2b793]        # 43597f <_IO_stdin_used@@Base+0x897f>
  40a1ec:	lea    r8,[rsp+0x268]
  40a1f4:	mov    r9,QWORD PTR [rsp+0x28]
  40a1f9:	xor    eax,eax
  40a1fb:	push   r14
  40a1fd:	lea    rbx,[rsp+0x370]
  40a205:	push   rbx
  40a206:	push   QWORD PTR [rsp+0x40]
  40a20a:	call   406170 <fprintf@plt>
  40a20f:	add    rsp,0x20
  40a213:	cmp    BYTE PTR [r12+0x70],0x0
  40a219:	jns    409970 <__flatcc_fb_gen_c_reader@@Base+0x13c0>
  40a21f:	mov    rcx,QWORD PTR [r13+0x0]
  40a223:	mov    esi,0x54
  40a228:	mov    edx,0x1
  40a22d:	lea    rdi,[rip+0x2b2d5]        # 435509 <_IO_stdin_used@@Base+0x8509>
  40a234:	call   406220 <fwrite@plt>
  40a239:	mov    DWORD PTR [rsp+0x30],0x1
  40a241:	jmp    409970 <__flatcc_fb_gen_c_reader@@Base+0x13c0>
  40a246:	mov    edi,DWORD PTR [rax+0x48]
  40a249:	lea    rsi,[r12+0x48]
  40a24e:	lea    rbx,[rsp+0x460]
  40a256:	mov    rdx,rbx
  40a259:	call   40b090 <__flatcc_fb_gen_c_reader@@Base+0x2ae0>
  40a25e:	mov    rdx,QWORD PTR [rsp+0x18]
  40a263:	mov    rdi,QWORD PTR [rdx+0xd0]
  40a26a:	mov    rcx,QWORD PTR [r12+0x88]
  40a272:	lea    rsi,[rip+0x2b778]        # 4359f1 <_IO_stdin_used@@Base+0x89f1>
  40a279:	lea    r14,[rsp+0x260]
  40a281:	mov    r8,r14
  40a284:	mov    r9,QWORD PTR [rsp+0x20]
  40a289:	mov    eax,0x0
  40a28e:	push   rbx
  40a28f:	lea    rbx,[rsp+0x368]
  40a297:	push   rbx
  40a298:	push   rbx
  40a299:	push   QWORD PTR [rsp+0x40]
  40a29d:	call   406170 <fprintf@plt>
  40a2a2:	add    rsp,0x20
  40a2a6:	mov    rax,QWORD PTR [rsp+0x18]
  40a2ab:	mov    rax,QWORD PTR [rax+0xe0]
  40a2b2:	cmp    DWORD PTR [rax+0x24],0x0
  40a2b6:	jne    40a2c4 <__flatcc_fb_gen_c_reader@@Base+0x1d14>
  40a2b8:	cmp    BYTE PTR [r12+0x70],0x0
  40a2be:	js     40a465 <__flatcc_fb_gen_c_reader@@Base+0x1eb5>
  40a2c4:	cmp    BYTE PTR [r12+0x70],0x0
  40a2ca:	jns    40a213 <__flatcc_fb_gen_c_reader@@Base+0x1c63>
  40a2d0:	cmp    DWORD PTR [rsp+0x30],0x0
  40a2d5:	je     40a2f1 <__flatcc_fb_gen_c_reader@@Base+0x1d41>
  40a2d7:	mov    rcx,QWORD PTR [r13+0x0]
  40a2db:	mov    esi,0x42
  40a2e0:	mov    edx,0x1
  40a2e5:	lea    rdi,[rip+0x2b04e]        # 43533a <_IO_stdin_used@@Base+0x833a>
  40a2ec:	call   406220 <fwrite@plt>
  40a2f1:	mov    rbx,QWORD PTR [rsp+0x18]
  40a2f6:	mov    rcx,QWORD PTR [rbx+0xd0]
  40a2fd:	mov    esi,0x3d
  40a302:	mov    edx,0x1
  40a307:	lea    rdi,[rip+0x2b06f]        # 43537d <_IO_stdin_used@@Base+0x837d>
  40a30e:	call   406220 <fwrite@plt>
  40a313:	mov    rdi,QWORD PTR [rbx+0xd0]
  40a31a:	sub    rsp,0x8
  40a31e:	lea    rsi,[rip+0x2b096]        # 4353bb <_IO_stdin_used@@Base+0x83bb>
  40a325:	mov    rdx,rbx
  40a328:	lea    r14,[rsp+0x268]
  40a330:	mov    rcx,r14
  40a333:	mov    r8,QWORD PTR [rsp+0x28]
  40a338:	mov    r9,QWORD PTR [rsp+0x30]
  40a33d:	xor    eax,eax
  40a33f:	lea    rbx,[rsp+0x368]
  40a347:	push   rbx
  40a348:	call   406170 <fprintf@plt>
  40a34d:	mov    rdx,QWORD PTR [rsp+0x28]
  40a352:	add    rsp,0x10
  40a356:	mov    rax,QWORD PTR [rdx+0xe0]
  40a35d:	cmp    DWORD PTR [rax+0xa8],0x0
  40a364:	je     40a38e <__flatcc_fb_gen_c_reader@@Base+0x1dde>
  40a366:	mov    rdi,QWORD PTR [rdx+0xd0]
  40a36d:	lea    rsi,[rip+0x2b6b9]        # 435a2d <_IO_stdin_used@@Base+0x8a2d>
  40a374:	mov    rcx,r14
  40a377:	mov    r8,QWORD PTR [rsp+0x20]
  40a37c:	mov    r9,QWORD PTR [rsp+0x28]
  40a381:	xor    eax,eax
  40a383:	push   rdx
  40a384:	push   rbx
  40a385:	call   406170 <fprintf@plt>
  40a38a:	add    rsp,0x10
  40a38e:	cmp    DWORD PTR [rsp+0x30],0x0
  40a393:	jne    409970 <__flatcc_fb_gen_c_reader@@Base+0x13c0>
  40a399:	mov    rdx,QWORD PTR [rsp+0x18]
  40a39e:	mov    rdi,QWORD PTR [rdx+0xd0]
  40a3a5:	sub    rsp,0x8
  40a3a9:	lea    rsi,[rip+0x2b07d]        # 43542d <_IO_stdin_used@@Base+0x842d>
  40a3b0:	lea    r14,[rsp+0x268]
  40a3b8:	mov    rcx,r14
  40a3bb:	mov    r8,QWORD PTR [rsp+0x28]
  40a3c0:	mov    r14,QWORD PTR [rsp+0x30]
  40a3c5:	mov    r9,r14
  40a3c8:	xor    eax,eax
  40a3ca:	lea    rbx,[rsp+0x368]
  40a3d2:	push   rbx
  40a3d3:	call   406170 <fprintf@plt>
  40a3d8:	add    rsp,0x10
  40a3dc:	mov    rdx,QWORD PTR [rsp+0x18]
  40a3e1:	mov    rdi,QWORD PTR [rdx+0xd0]
  40a3e8:	sub    rsp,0x8
  40a3ec:	lea    rsi,[rip+0x2b078]        # 43546b <_IO_stdin_used@@Base+0x846b>
  40a3f3:	lea    rcx,[rsp+0x268]
  40a3fb:	mov    r8,QWORD PTR [rsp+0x28]
  40a400:	mov    r9,r14
  40a403:	xor    eax,eax
  40a405:	lea    rbx,[rsp+0x368]
  40a40d:	push   rbx
  40a40e:	call   406170 <fprintf@plt>
  40a413:	add    rsp,0x10
  40a417:	mov    rax,QWORD PTR [rsp+0x18]
  40a41c:	mov    rax,QWORD PTR [rax+0xe0]
  40a423:	jmp    409fe7 <__flatcc_fb_gen_c_reader@@Base+0x1a37>
  40a428:	mov    rdx,QWORD PTR [rsp+0x18]
  40a42d:	mov    rdi,QWORD PTR [rdx+0xd0]
  40a434:	lea    rsi,[rip+0x2b420]        # 43585b <_IO_stdin_used@@Base+0x885b>
  40a43b:	lea    rcx,[rsp+0x260]
  40a443:	mov    r8,QWORD PTR [rsp+0x20]
  40a448:	mov    r9,QWORD PTR [rsp+0x28]
  40a44d:	xor    eax,eax
  40a44f:	call   406170 <fprintf@plt>
  40a454:	cmp    BYTE PTR [r12+0x70],0x0
  40a45a:	jns    40a213 <__flatcc_fb_gen_c_reader@@Base+0x1c63>
  40a460:	jmp    409c92 <__flatcc_fb_gen_c_reader@@Base+0x16e2>
  40a465:	mov    rdx,QWORD PTR [rsp+0x18]
  40a46a:	mov    rdi,QWORD PTR [rdx+0xd0]
  40a471:	sub    rsp,0x8
  40a475:	lea    rsi,[rip+0x2ae88]        # 435304 <_IO_stdin_used@@Base+0x8304>
  40a47c:	mov    rcx,r14
  40a47f:	mov    r8,QWORD PTR [rsp+0x28]
  40a484:	mov    r9,QWORD PTR [rsp+0x30]
  40a489:	xor    eax,eax
  40a48b:	lea    rbx,[rsp+0x368]
  40a493:	push   rbx
  40a494:	call   406170 <fprintf@plt>
  40a499:	add    rsp,0x10
  40a49d:	cmp    BYTE PTR [r12+0x70],0x0
  40a4a3:	jns    40a213 <__flatcc_fb_gen_c_reader@@Base+0x1c63>
  40a4a9:	jmp    40a2d0 <__flatcc_fb_gen_c_reader@@Base+0x1d20>
  40a4ae:	mov    rsi,QWORD PTR [r12+0xd0]
  40a4b6:	mov    edi,0xa
  40a4bb:	call   406110 <fputc@plt>
  40a4c0:	mov    rax,QWORD PTR [r12+0xe0]
  40a4c8:	cmp    DWORD PTR [rax+0xac],0x0
  40a4cf:	je     40a4eb <__flatcc_fb_gen_c_reader@@Base+0x1f3b>
  40a4d1:	mov    rcx,QWORD PTR [r13+0x0]
  40a4d5:	lea    rdi,[rip+0x29e0f]        # 4342eb <_IO_stdin_used@@Base+0x72eb>
  40a4dc:	mov    esi,0x24
  40a4e1:	mov    edx,0x1
  40a4e6:	call   406220 <fwrite@plt>
  40a4eb:	mov    rdi,QWORD PTR [r12+0xd0]
  40a4f3:	mov    rax,QWORD PTR [r12+0xd8]
  40a4fb:	mov    rdx,QWORD PTR [rax+0x118]
  40a502:	lea    rsi,[rip+0x2b857]        # 435d60 <_IO_stdin_used@@Base+0x8d60>
  40a509:	xor    eax,eax
  40a50b:	call   406170 <fprintf@plt>
  40a510:	xor    eax,eax
  40a512:	lea    rsp,[rbp-0x28]
  40a516:	pop    rbx
  40a517:	pop    r12
  40a519:	pop    r13
  40a51b:	pop    r14
  40a51d:	pop    r15
  40a51f:	pop    rbp
  40a520:	ret    
  40a521:	mov    rax,QWORD PTR [rip+0x45ad0]        # 44fff8 <stderr@GLIBC_2.2.5>
  40a528:	mov    rdi,QWORD PTR [rax]
  40a52b:	lea    rsi,[rip+0x23f02]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40a532:	lea    rbx,[rip+0x2a6ad]        # 434be6 <_IO_stdin_used@@Base+0x7be6>
  40a539:	lea    r8,[rip+0x2a709]        # 434c49 <_IO_stdin_used@@Base+0x7c49>
  40a540:	mov    rdx,rbx
  40a543:	mov    ecx,0x8d
  40a548:	xor    eax,eax
  40a54a:	call   406170 <fprintf@plt>
  40a54f:	lea    rdi,[rip+0x34e45]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40a556:	lea    rcx,[rip+0x2a723]        # 434c80 <_IO_stdin_used@@Base+0x7c80>
  40a55d:	mov    rsi,rbx
  40a560:	mov    edx,0x8d
  40a565:	call   4060f0 <__assert_fail@plt>
  40a56a:	mov    rdi,QWORD PTR [r13+0x0]
  40a56e:	lea    rsi,[rip+0x2ab24]        # 435099 <_IO_stdin_used@@Base+0x8099>
  40a575:	lea    rdx,[rip+0x2ab25]        # 4350a1 <_IO_stdin_used@@Base+0x80a1>
  40a57c:	xor    eax,eax
  40a57e:	call   406170 <fprintf@plt>
  40a583:	mov    rax,QWORD PTR [rip+0x45a6e]        # 44fff8 <stderr@GLIBC_2.2.5>
  40a58a:	mov    rdi,QWORD PTR [rax]
  40a58d:	lea    rsi,[rip+0x23ea0]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40a594:	lea    rbx,[rip+0x23ea4]        # 42e43f <_IO_stdin_used@@Base+0x143f>
  40a59b:	lea    r8,[rip+0x2a6a7]        # 434c49 <_IO_stdin_used@@Base+0x7c49>
  40a5a2:	mov    rdx,rbx
  40a5a5:	mov    ecx,0x405
  40a5aa:	xor    eax,eax
  40a5ac:	call   406170 <fprintf@plt>
  40a5b1:	lea    rdi,[rip+0x34de3]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40a5b8:	lea    rcx,[rip+0x2a7cf]        # 434d8e <_IO_stdin_used@@Base+0x7d8e>
  40a5bf:	mov    rsi,rbx
  40a5c2:	mov    edx,0x405
  40a5c7:	call   4060f0 <__assert_fail@plt>
  40a5cc:	mov    rax,QWORD PTR [rip+0x45a25]        # 44fff8 <stderr@GLIBC_2.2.5>
  40a5d3:	mov    rdi,QWORD PTR [rax]
  40a5d6:	lea    rsi,[rip+0x23e57]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40a5dd:	lea    rbx,[rip+0x23e5b]        # 42e43f <_IO_stdin_used@@Base+0x143f>
  40a5e4:	lea    r8,[rip+0x2b5c4]        # 435baf <_IO_stdin_used@@Base+0x8baf>
  40a5eb:	mov    rdx,rbx
  40a5ee:	mov    ecx,0x63f
  40a5f3:	xor    eax,eax
  40a5f5:	call   406170 <fprintf@plt>
  40a5fa:	lea    rdi,[rip+0x34d9a]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40a601:	lea    rcx,[rip+0x2afa2]        # 4355aa <_IO_stdin_used@@Base+0x85aa>
  40a608:	mov    rsi,rbx
  40a60b:	mov    edx,0x63f
  40a610:	call   4060f0 <__assert_fail@plt>
  40a615:	lea    rdi,[rip+0x2a9f8]        # 435014 <_IO_stdin_used@@Base+0x8014>
  40a61c:	lea    rsi,[rip+0x23e1c]        # 42e43f <_IO_stdin_used@@Base+0x143f>
  40a623:	lea    rcx,[rip+0x2a764]        # 434d8e <_IO_stdin_used@@Base+0x7d8e>
  40a62a:	mov    edx,0x3fa
  40a62f:	call   4060f0 <__assert_fail@plt>
  40a634:	mov    rax,QWORD PTR [rip+0x459bd]        # 44fff8 <stderr@GLIBC_2.2.5>
  40a63b:	mov    rdi,QWORD PTR [rax]
  40a63e:	lea    rsi,[rip+0x23def]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40a645:	lea    rbx,[rip+0x2a59a]        # 434be6 <_IO_stdin_used@@Base+0x7be6>
  40a64c:	lea    r8,[rip+0x2a5f6]        # 434c49 <_IO_stdin_used@@Base+0x7c49>
  40a653:	mov    rdx,rbx
  40a656:	mov    ecx,0x60
  40a65b:	xor    eax,eax
  40a65d:	call   406170 <fprintf@plt>
  40a662:	lea    rdi,[rip+0x34d32]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40a669:	lea    rcx,[rip+0x2af09]        # 435579 <_IO_stdin_used@@Base+0x8579>
  40a670:	mov    rsi,rbx
  40a673:	mov    edx,0x60
  40a678:	call   4060f0 <__assert_fail@plt>
  40a67d:	lea    rdi,[rip+0x2a6ea]        # 434d6e <_IO_stdin_used@@Base+0x7d6e>
  40a684:	lea    rsi,[rip+0x23db4]        # 42e43f <_IO_stdin_used@@Base+0x143f>
  40a68b:	lea    rcx,[rip+0x2a6fc]        # 434d8e <_IO_stdin_used@@Base+0x7d8e>
  40a692:	mov    edx,0x3a8
  40a697:	vzeroupper 
  40a69a:	call   4060f0 <__assert_fail@plt>
  40a69f:	mov    rax,QWORD PTR [rip+0x45952]        # 44fff8 <stderr@GLIBC_2.2.5>
  40a6a6:	mov    rdi,QWORD PTR [rax]
  40a6a9:	lea    rsi,[rip+0x23d84]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40a6b0:	lea    rbx,[rip+0x23d88]        # 42e43f <_IO_stdin_used@@Base+0x143f>
  40a6b7:	lea    r8,[rip+0x23deb]        # 42e4a9 <_IO_stdin_used@@Base+0x14a9>
  40a6be:	mov    rdx,rbx
  40a6c1:	mov    ecx,0x688
  40a6c6:	xor    eax,eax
  40a6c8:	call   406170 <fprintf@plt>
  40a6cd:	lea    rdi,[rip+0x34cc7]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40a6d4:	lea    rcx,[rip+0x23dfa]        # 42e4d5 <_IO_stdin_used@@Base+0x14d5>
  40a6db:	mov    rsi,rbx
  40a6de:	mov    edx,0x688
  40a6e3:	call   4060f0 <__assert_fail@plt>
  40a6e8:	mov    rax,QWORD PTR [rip+0x45909]        # 44fff8 <stderr@GLIBC_2.2.5>
  40a6ef:	mov    rdi,QWORD PTR [rax]
  40a6f2:	lea    rsi,[rip+0x23d3b]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40a6f9:	lea    rbx,[rip+0x23d3f]        # 42e43f <_IO_stdin_used@@Base+0x143f>
  40a700:	lea    r8,[rip+0x2b3e6]        # 435aed <_IO_stdin_used@@Base+0x8aed>
  40a707:	mov    rdx,rbx
  40a70a:	mov    ecx,0x630
  40a70f:	xor    eax,eax
  40a711:	call   406170 <fprintf@plt>
  40a716:	lea    rdi,[rip+0x34c7e]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40a71d:	lea    rcx,[rip+0x2ae86]        # 4355aa <_IO_stdin_used@@Base+0x85aa>
  40a724:	mov    rsi,rbx
  40a727:	mov    edx,0x630
  40a72c:	call   4060f0 <__assert_fail@plt>
  40a731:	mov    rax,QWORD PTR [rip+0x458c0]        # 44fff8 <stderr@GLIBC_2.2.5>
  40a738:	mov    rdi,QWORD PTR [rax]
  40a73b:	lea    rsi,[rip+0x23cf2]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40a742:	lea    rbx,[rip+0x23cf6]        # 42e43f <_IO_stdin_used@@Base+0x143f>
  40a749:	lea    r8,[rip+0x2b354]        # 435aa4 <_IO_stdin_used@@Base+0x8aa4>
  40a750:	mov    rdx,rbx
  40a753:	mov    ecx,0x620
  40a758:	xor    eax,eax
  40a75a:	call   406170 <fprintf@plt>
  40a75f:	lea    rdi,[rip+0x34c35]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40a766:	lea    rcx,[rip+0x2ae3d]        # 4355aa <_IO_stdin_used@@Base+0x85aa>
  40a76d:	mov    rsi,rbx
  40a770:	mov    edx,0x620
  40a775:	call   4060f0 <__assert_fail@plt>
  40a77a:	lea    rdi,[rip+0x2a642]        # 434dc3 <_IO_stdin_used@@Base+0x7dc3>
  40a781:	lea    rsi,[rip+0x23cb7]        # 42e43f <_IO_stdin_used@@Base+0x143f>
  40a788:	lea    rcx,[rip+0x2a5ff]        # 434d8e <_IO_stdin_used@@Base+0x7d8e>
  40a78f:	mov    edx,0x3a9
  40a794:	vzeroupper 
  40a797:	call   4060f0 <__assert_fail@plt>
  40a79c:	lea    rdi,[rip+0x2a640]        # 434de3 <_IO_stdin_used@@Base+0x7de3>
  40a7a3:	lea    rsi,[rip+0x23c95]        # 42e43f <_IO_stdin_used@@Base+0x143f>
  40a7aa:	lea    rcx,[rip+0x2a5dd]        # 434d8e <_IO_stdin_used@@Base+0x7d8e>
  40a7b1:	mov    edx,0x3aa
  40a7b6:	vzeroupper 
  40a7b9:	call   4060f0 <__assert_fail@plt>
  40a7be:	mov    rax,QWORD PTR [rip+0x45833]        # 44fff8 <stderr@GLIBC_2.2.5>
  40a7c5:	mov    rdi,QWORD PTR [rax]
  40a7c8:	lea    rsi,[rip+0x23c65]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40a7cf:	lea    rbx,[rip+0x2a410]        # 434be6 <_IO_stdin_used@@Base+0x7be6>
  40a7d6:	lea    r8,[rip+0x2a46c]        # 434c49 <_IO_stdin_used@@Base+0x7c49>
  40a7dd:	mov    rdx,rbx
  40a7e0:	mov    ecx,0xba
  40a7e5:	xor    eax,eax
  40a7e7:	call   406170 <fprintf@plt>
  40a7ec:	lea    rdi,[rip+0x34ba8]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40a7f3:	lea    rcx,[rip+0x2b450]        # 435c4a <_IO_stdin_used@@Base+0x8c4a>
  40a7fa:	mov    rsi,rbx
  40a7fd:	mov    edx,0xba
  40a802:	call   4060f0 <__assert_fail@plt>
  40a807:	mov    rax,QWORD PTR [rip+0x457ea]        # 44fff8 <stderr@GLIBC_2.2.5>
  40a80e:	mov    rdi,QWORD PTR [rax]
  40a811:	lea    rsi,[rip+0x23c1c]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40a818:	lea    rbx,[rip+0x23c20]        # 42e43f <_IO_stdin_used@@Base+0x143f>
  40a81f:	lea    r8,[rip+0x2b469]        # 435c8f <_IO_stdin_used@@Base+0x8c8f>
  40a826:	mov    rdx,rbx
  40a829:	mov    ecx,0x53b
  40a82e:	xor    eax,eax
  40a830:	vzeroupper 
  40a833:	call   406170 <fprintf@plt>
  40a838:	lea    rdi,[rip+0x34b5c]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40a83f:	lea    rcx,[rip+0x2b47d]        # 435cc3 <_IO_stdin_used@@Base+0x8cc3>
  40a846:	mov    rsi,rbx
  40a849:	mov    edx,0x53b
  40a84e:	call   4060f0 <__assert_fail@plt>
  40a853:	lea    rdi,[rip+0x2b4ba]        # 435d14 <_IO_stdin_used@@Base+0x8d14>
  40a85a:	lea    rsi,[rip+0x23bde]        # 42e43f <_IO_stdin_used@@Base+0x143f>
  40a861:	lea    rcx,[rip+0x2b45b]        # 435cc3 <_IO_stdin_used@@Base+0x8cc3>
  40a868:	mov    edx,0x53f
  40a86d:	call   4060f0 <__assert_fail@plt>
  40a872:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40a87c:	nop    DWORD PTR [rax+0x0]
  40a880:	push   rbp
  40a881:	mov    rbp,rsp
  40a884:	push   r14
  40a886:	push   rbx
  40a887:	and    rsp,0xffffffffffffffe0
  40a88b:	sub    rsp,0x100
  40a892:	vxorps xmm0,xmm0,xmm0
  40a896:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40a89f:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40a8a8:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40a8b1:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40a8b7:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40a8bd:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40a8c3:	vmovaps YMMWORD PTR [rsp],ymm0
  40a8c8:	mov    QWORD PTR [rsp+0xe0],0x0
  40a8d4:	cmp    WORD PTR [rsi+0x10],0x2
  40a8d9:	jae    40a9f7 <__flatcc_fb_gen_c_reader@@Base+0x2447>
  40a8df:	mov    rbx,rsi
  40a8e2:	mov    r14,rdi
  40a8e5:	mov    rdi,QWORD PTR [rsi+0x18]
  40a8e9:	mov    rdx,rsp
  40a8ec:	vzeroupper 
  40a8ef:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40a8f4:	cmp    WORD PTR [rbx+0x10],0x1
  40a8f9:	jne    40a922 <__flatcc_fb_gen_c_reader@@Base+0x2372>
  40a8fb:	cmp    QWORD PTR [rbx+0xb8],0x0
  40a903:	mov    rdi,QWORD PTR [r14+0xd0]
  40a90a:	je     40a96e <__flatcc_fb_gen_c_reader@@Base+0x23be>
  40a90c:	lea    rsi,[rip+0x29dfd]        # 434710 <_IO_stdin_used@@Base+0x7710>
  40a913:	mov    rcx,rsp
  40a916:	mov    rdx,rcx
  40a919:	xor    eax,eax
  40a91b:	call   406170 <fprintf@plt>
  40a920:	jmp    40a97f <__flatcc_fb_gen_c_reader@@Base+0x23cf>
  40a922:	mov    rdi,QWORD PTR [r14+0xd0]
  40a929:	lea    rsi,[rip+0x29e7f]        # 4347af <_IO_stdin_used@@Base+0x77af>
  40a930:	mov    rbx,rsp
  40a933:	mov    rdx,rbx
  40a936:	mov    rcx,rbx
  40a939:	xor    eax,eax
  40a93b:	call   406170 <fprintf@plt>
  40a940:	mov    rdi,QWORD PTR [r14+0xd0]
  40a947:	lea    rsi,[rip+0x29e8d]        # 4347db <_IO_stdin_used@@Base+0x77db>
  40a94e:	mov    rdx,r14
  40a951:	mov    rcx,rbx
  40a954:	xor    eax,eax
  40a956:	call   406170 <fprintf@plt>
  40a95b:	mov    rdi,QWORD PTR [r14+0xd0]
  40a962:	lea    rsi,[rip+0x29e98]        # 434801 <_IO_stdin_used@@Base+0x7801>
  40a969:	mov    rdx,r14
  40a96c:	jmp    40a9e4 <__flatcc_fb_gen_c_reader@@Base+0x2434>
  40a96e:	lea    rsi,[rip+0x29d74]        # 4346e9 <_IO_stdin_used@@Base+0x76e9>
  40a975:	mov    rdx,rsp
  40a978:	xor    eax,eax
  40a97a:	call   406170 <fprintf@plt>
  40a97f:	mov    rdi,QWORD PTR [r14+0xd0]
  40a986:	lea    rsi,[rip+0x29d9c]        # 434729 <_IO_stdin_used@@Base+0x7729>
  40a98d:	mov    rbx,rsp
  40a990:	mov    rdx,rbx
  40a993:	mov    rcx,rbx
  40a996:	xor    eax,eax
  40a998:	call   406170 <fprintf@plt>
  40a99d:	mov    rdi,QWORD PTR [r14+0xd0]
  40a9a4:	lea    rsi,[rip+0x29da0]        # 43474b <_IO_stdin_used@@Base+0x774b>
  40a9ab:	mov    rdx,rbx
  40a9ae:	mov    rcx,rbx
  40a9b1:	xor    eax,eax
  40a9b3:	call   406170 <fprintf@plt>
  40a9b8:	mov    rdi,QWORD PTR [r14+0xd0]
  40a9bf:	lea    rsi,[rip+0x29da9]        # 43476f <_IO_stdin_used@@Base+0x776f>
  40a9c6:	mov    rdx,rbx
  40a9c9:	mov    rcx,rbx
  40a9cc:	xor    eax,eax
  40a9ce:	call   406170 <fprintf@plt>
  40a9d3:	mov    rdi,QWORD PTR [r14+0xd0]
  40a9da:	lea    rsi,[rip+0x29dad]        # 43478e <_IO_stdin_used@@Base+0x778e>
  40a9e1:	mov    rdx,rbx
  40a9e4:	mov    rcx,rbx
  40a9e7:	xor    eax,eax
  40a9e9:	call   406170 <fprintf@plt>
  40a9ee:	lea    rsp,[rbp-0x10]
  40a9f2:	pop    rbx
  40a9f3:	pop    r14
  40a9f5:	pop    rbp
  40a9f6:	ret    
  40a9f7:	lea    rdi,[rip+0x29c6e]        # 43466c <_IO_stdin_used@@Base+0x766c>
  40a9fe:	lea    rsi,[rip+0x23a3a]        # 42e43f <_IO_stdin_used@@Base+0x143f>
  40aa05:	lea    rcx,[rip+0x29ca2]        # 4346ae <_IO_stdin_used@@Base+0x76ae>
  40aa0c:	mov    edx,0x35f
  40aa11:	vzeroupper 
  40aa14:	call   4060f0 <__assert_fail@plt>
  40aa19:	nop    DWORD PTR [rax+0x0]
  40aa20:	push   rbp
  40aa21:	mov    rbp,rsp
  40aa24:	push   r15
  40aa26:	push   r14
  40aa28:	push   r13
  40aa2a:	push   r12
  40aa2c:	push   rbx
  40aa2d:	and    rsp,0xffffffffffffffe0
  40aa31:	sub    rsp,0x1c0
  40aa38:	vxorps xmm0,xmm0,xmm0
  40aa3c:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  40aa45:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40aa4e:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40aa57:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40aa60:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40aa69:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40aa6f:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40aa75:	mov    QWORD PTR [rsp+0x120],0x0
  40aa81:	mov    eax,DWORD PTR [rsi+0x10]
  40aa84:	mov    QWORD PTR [rsp+0x20],rax
  40aa89:	add    eax,0xfffffffd
  40aa8c:	cmp    ax,0x2
  40aa90:	jae    40aff4 <__flatcc_fb_gen_c_reader@@Base+0x2a44>
  40aa96:	mov    rbx,rsi
  40aa99:	cmp    WORD PTR [rsi+0x58],0x8
  40aa9e:	jne    40b016 <__flatcc_fb_gen_c_reader@@Base+0x2a66>
  40aaa4:	mov    r13,rdi
  40aaa7:	mov    eax,DWORD PTR [rbx+0x48]
  40aaaa:	cmp    eax,0x5
  40aaad:	lea    r15,[rip+0x23a9b]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  40aab4:	cmove  r15,rdi
  40aab8:	dec    eax
  40aaba:	cmp    eax,0xb
  40aabd:	jae    40b038 <__flatcc_fb_gen_c_reader@@Base+0x2a88>
  40aac3:	cdqe   
  40aac5:	lea    rcx,[rip+0x45044]        # 44fb10 <fb_value_set_deleted@@Base+0x6090>
  40aacc:	mov    rax,QWORD PTR [rcx+rax*8]
  40aad0:	mov    QWORD PTR [rsp+0x18],rax
  40aad5:	mov    r12d,DWORD PTR [rbx+0xb8]
  40aadc:	shl    r12d,0x3
  40aae0:	cmp    WORD PTR [rsp+0x20],0x3
  40aae6:	lea    rax,[rip+0x29e5a]        # 434947 <_IO_stdin_used@@Base+0x7947>
  40aaed:	lea    rcx,[rip+0x2a576]        # 43506a <_IO_stdin_used@@Base+0x806a>
  40aaf4:	cmovne rcx,rax
  40aaf8:	mov    QWORD PTR [rsp+0x30],rcx
  40aafd:	mov    rdi,QWORD PTR [rbx+0x18]
  40ab01:	lea    rdx,[rsp+0x40]
  40ab06:	mov    rsi,rbx
  40ab09:	vzeroupper 
  40ab0c:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40ab11:	mov    QWORD PTR [rsp+0x10],rbx
  40ab16:	mov    rbx,QWORD PTR [rbx+0x40]
  40ab1a:	test   rbx,rbx
  40ab1d:	je     40ac19 <__flatcc_fb_gen_c_reader@@Base+0x2669>
  40ab23:	mov    DWORD PTR [rsp+0x2c],r12d
  40ab28:	mov    QWORD PTR [rsp+0x38],r15
  40ab2d:	mov    rax,QWORD PTR [rbx+0x8]
  40ab31:	cmp    QWORD PTR [rax+0x10],0x0
  40ab36:	je     40ab54 <__flatcc_fb_gen_c_reader@@Base+0x25a4>
  40ab38:	mov    rdi,QWORD PTR [r13+0xd0]
  40ab3f:	lea    rsi,[rip+0x2a169]        # 434caf <_IO_stdin_used@@Base+0x7caf>
  40ab46:	lea    rdx,[rip+0x23a02]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  40ab4d:	xor    eax,eax
  40ab4f:	call   406170 <fprintf@plt>
  40ab54:	mov    rdi,QWORD PTR [r13+0xd0]
  40ab5b:	mov    rax,QWORD PTR [rbx+0x8]
  40ab5f:	mov    edx,DWORD PTR [rax+0x8]
  40ab62:	mov    rcx,QWORD PTR [rax]
  40ab65:	lea    rsi,[rip+0x3483f]        # 43f3ab <_IO_stdin_used@@Base+0x123ab>
  40ab6c:	xor    eax,eax
  40ab6e:	call   406170 <fprintf@plt>
  40ab73:	mov    r12,QWORD PTR [rbx]
  40ab76:	test   r12,r12
  40ab79:	je     40abf2 <__flatcc_fb_gen_c_reader@@Base+0x2642>
  40ab7b:	mov    rax,QWORD PTR [rbx+0x8]
  40ab7f:	mov    rax,QWORD PTR [rax+0x10]
  40ab83:	lea    r15,[rip+0x34821]        # 43f3ab <_IO_stdin_used@@Base+0x123ab>
  40ab8a:	lea    rbx,[rip+0x2a125]        # 434cb6 <_IO_stdin_used@@Base+0x7cb6>
  40ab91:	lea    r14,[rip+0x239b7]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  40ab98:	jmp    40abd1 <__flatcc_fb_gen_c_reader@@Base+0x2621>
  40ab9a:	nop    WORD PTR [rax+rax*1+0x0]
  40aba0:	mov    rdi,QWORD PTR [r13+0xd0]
  40aba7:	mov    rax,QWORD PTR [r12+0x8]
  40abac:	mov    edx,DWORD PTR [rax+0x8]
  40abaf:	mov    rcx,QWORD PTR [rax]
  40abb2:	mov    rsi,r15
  40abb5:	xor    eax,eax
  40abb7:	call   406170 <fprintf@plt>
  40abbc:	mov    rax,QWORD PTR [r12+0x8]
  40abc1:	mov    rcx,QWORD PTR [r12]
  40abc5:	mov    rax,QWORD PTR [rax+0x10]
  40abc9:	mov    r12,rcx
  40abcc:	test   rcx,rcx
  40abcf:	je     40abf2 <__flatcc_fb_gen_c_reader@@Base+0x2642>
  40abd1:	mov    rcx,QWORD PTR [r12+0x8]
  40abd6:	cmp    rax,QWORD PTR [rcx+0x10]
  40abda:	je     40aba0 <__flatcc_fb_gen_c_reader@@Base+0x25f0>
  40abdc:	mov    rdi,QWORD PTR [r13+0xd0]
  40abe3:	mov    rsi,rbx
  40abe6:	mov    rdx,r14
  40abe9:	xor    eax,eax
  40abeb:	call   406170 <fprintf@plt>
  40abf0:	jmp    40aba0 <__flatcc_fb_gen_c_reader@@Base+0x25f0>
  40abf2:	mov    rcx,QWORD PTR [r13+0xd0]
  40abf9:	lea    rdi,[rip+0x38c8c]        # 44388c <_IO_stdin_used@@Base+0x1688c>
  40ac00:	mov    esi,0x4
  40ac05:	mov    edx,0x1
  40ac0a:	call   406220 <fwrite@plt>
  40ac0f:	mov    r15,QWORD PTR [rsp+0x38]
  40ac14:	mov    r12d,DWORD PTR [rsp+0x2c]
  40ac19:	mov    rdi,QWORD PTR [r13+0xd0]
  40ac20:	lea    rsi,[rip+0x29d2b]        # 434952 <_IO_stdin_used@@Base+0x7952>
  40ac27:	lea    r14,[rsp+0x40]
  40ac2c:	mov    rdx,r15
  40ac2f:	mov    rcx,QWORD PTR [rsp+0x18]
  40ac34:	mov    r8,r14
  40ac37:	mov    rbx,QWORD PTR [rsp+0x30]
  40ac3c:	mov    r9,rbx
  40ac3f:	xor    eax,eax
  40ac41:	call   406170 <fprintf@plt>
  40ac46:	mov    rdi,QWORD PTR [r13+0xd0]
  40ac4d:	mov    DWORD PTR [rsp],r12d
  40ac51:	lea    rsi,[rip+0x29d11]        # 434969 <_IO_stdin_used@@Base+0x7969>
  40ac58:	mov    rdx,r13
  40ac5b:	mov    rcx,r14
  40ac5e:	mov    r8,r14
  40ac61:	mov    r9,rbx
  40ac64:	xor    eax,eax
  40ac66:	call   406170 <fprintf@plt>
  40ac6b:	cmp    WORD PTR [rsp+0x20],0x3
  40ac71:	je     40ac93 <__flatcc_fb_gen_c_reader@@Base+0x26e3>
  40ac73:	mov    rdi,QWORD PTR [r13+0xd0]
  40ac7a:	lea    rsi,[rip+0x29d12]        # 434993 <_IO_stdin_used@@Base+0x7993>
  40ac81:	lea    r8,[rsp+0x40]
  40ac86:	mov    rdx,r13
  40ac89:	mov    rcx,r13
  40ac8c:	xor    eax,eax
  40ac8e:	call   406170 <fprintf@plt>
  40ac93:	add    r13,0xd0
  40ac9a:	mov    QWORD PTR [rsp+0x18],r13
  40ac9f:	mov    rax,QWORD PTR [rsp+0x10]
  40aca4:	mov    r12,QWORD PTR [rax+0x28]
  40aca8:	test   r12,r12
  40acab:	je     40ae04 <__flatcc_fb_gen_c_reader@@Base+0x2854>
  40acb1:	lea    r15,[rip+0x346f3]        # 43f3ab <_IO_stdin_used@@Base+0x123ab>
  40acb8:	jmp    40ad48 <__flatcc_fb_gen_c_reader@@Base+0x2798>
  40acbd:	nop    DWORD PTR [rax]
  40acc0:	mov    rcx,QWORD PTR [r13+0x0]
  40acc4:	mov    esi,0x4
  40acc9:	mov    edx,0x1
  40acce:	lea    rdi,[rip+0x38bb7]        # 44388c <_IO_stdin_used@@Base+0x1688c>
  40acd5:	call   406220 <fwrite@plt>
  40acda:	mov    rax,QWORD PTR [r12+0x8]
  40acdf:	mov    r14d,DWORD PTR [rax+0x8]
  40ace3:	mov    r13,r15
  40ace6:	mov    r15,QWORD PTR [rax]
  40ace9:	mov    rax,QWORD PTR [rsp+0x10]
  40acee:	mov    edi,DWORD PTR [rax+0x48]
  40acf1:	lea    rsi,[r12+0x48]
  40acf6:	lea    rbx,[rsp+0x140]
  40acfe:	mov    rdx,rbx
  40ad01:	call   40b090 <__flatcc_fb_gen_c_reader@@Base+0x2ae0>
  40ad06:	mov    rax,QWORD PTR [rsp+0x18]
  40ad0b:	mov    rdi,QWORD PTR [rax]
  40ad0e:	mov    QWORD PTR [rsp+0x8],rbx
  40ad13:	mov    rax,QWORD PTR [rsp+0x30]
  40ad18:	mov    QWORD PTR [rsp],rax
  40ad1c:	lea    rsi,[rip+0x29c8a]        # 4349ad <_IO_stdin_used@@Base+0x79ad>
  40ad23:	lea    rdx,[rsp+0x40]
  40ad28:	mov    ecx,r14d
  40ad2b:	mov    r8,r15
  40ad2e:	mov    r15,r13
  40ad31:	mov    r9,rdx
  40ad34:	xor    eax,eax
  40ad36:	call   406170 <fprintf@plt>
  40ad3b:	mov    r12,QWORD PTR [r12]
  40ad3f:	test   r12,r12
  40ad42:	je     40ae04 <__flatcc_fb_gen_c_reader@@Base+0x2854>
  40ad48:	mov    r14,QWORD PTR [r12+0x68]
  40ad4d:	test   r14,r14
  40ad50:	je     40acda <__flatcc_fb_gen_c_reader@@Base+0x272a>
  40ad52:	mov    rax,QWORD PTR [r14+0x8]
  40ad56:	cmp    QWORD PTR [rax+0x10],0x0
  40ad5b:	mov    r13,QWORD PTR [rsp+0x18]
  40ad60:	je     40ad7b <__flatcc_fb_gen_c_reader@@Base+0x27cb>
  40ad62:	mov    rdi,QWORD PTR [r13+0x0]
  40ad66:	lea    rsi,[rip+0x29f42]        # 434caf <_IO_stdin_used@@Base+0x7caf>
  40ad6d:	lea    rdx,[rip+0x237db]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  40ad74:	xor    eax,eax
  40ad76:	call   406170 <fprintf@plt>
  40ad7b:	mov    rdi,QWORD PTR [r13+0x0]
  40ad7f:	mov    rax,QWORD PTR [r14+0x8]
  40ad83:	mov    edx,DWORD PTR [rax+0x8]
  40ad86:	mov    rcx,QWORD PTR [rax]
  40ad89:	mov    rsi,r15
  40ad8c:	xor    eax,eax
  40ad8e:	call   406170 <fprintf@plt>
  40ad93:	mov    rbx,QWORD PTR [r14]
  40ad96:	test   rbx,rbx
  40ad99:	je     40acc0 <__flatcc_fb_gen_c_reader@@Base+0x2710>
  40ad9f:	mov    rax,QWORD PTR [r14+0x8]
  40ada3:	mov    rax,QWORD PTR [rax+0x10]
  40ada7:	jmp    40addf <__flatcc_fb_gen_c_reader@@Base+0x282f>
  40ada9:	nop    DWORD PTR [rax+0x0]
  40adb0:	mov    rdi,QWORD PTR [r13+0x0]
  40adb4:	mov    rax,QWORD PTR [rbx+0x8]
  40adb8:	mov    edx,DWORD PTR [rax+0x8]
  40adbb:	mov    rcx,QWORD PTR [rax]
  40adbe:	mov    rsi,r15
  40adc1:	xor    eax,eax
  40adc3:	call   406170 <fprintf@plt>
  40adc8:	mov    rax,QWORD PTR [rbx+0x8]
  40adcc:	mov    rcx,QWORD PTR [rbx]
  40adcf:	mov    rax,QWORD PTR [rax+0x10]
  40add3:	mov    rbx,rcx
  40add6:	test   rcx,rcx
  40add9:	je     40acc0 <__flatcc_fb_gen_c_reader@@Base+0x2710>
  40addf:	mov    rcx,QWORD PTR [rbx+0x8]
  40ade3:	cmp    rax,QWORD PTR [rcx+0x10]
  40ade7:	je     40adb0 <__flatcc_fb_gen_c_reader@@Base+0x2800>
  40ade9:	mov    rdi,QWORD PTR [r13+0x0]
  40aded:	lea    rsi,[rip+0x29ec2]        # 434cb6 <_IO_stdin_used@@Base+0x7cb6>
  40adf4:	lea    rdx,[rip+0x23754]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  40adfb:	xor    eax,eax
  40adfd:	call   406170 <fprintf@plt>
  40ae02:	jmp    40adb0 <__flatcc_fb_gen_c_reader@@Base+0x2800>
  40ae04:	mov    r13,QWORD PTR [rsp+0x18]
  40ae09:	mov    rsi,QWORD PTR [r13+0x0]
  40ae0d:	mov    edi,0xa
  40ae12:	call   406110 <fputc@plt>
  40ae17:	mov    rdi,QWORD PTR [r13+0x0]
  40ae1b:	cmp    WORD PTR [rsp+0x20],0x3
  40ae21:	je     40ae4b <__flatcc_fb_gen_c_reader@@Base+0x289b>
  40ae23:	lea    rsi,[rip+0x29ba2]        # 4349cc <_IO_stdin_used@@Base+0x79cc>
  40ae2a:	lea    rcx,[rsp+0x40]
  40ae2f:	mov    rdx,rcx
  40ae32:	xor    eax,eax
  40ae34:	call   406170 <fprintf@plt>
  40ae39:	mov    rcx,QWORD PTR [r13+0x0]
  40ae3d:	lea    rdi,[rip+0x3900c]        # 443e50 <_IO_stdin_used@@Base+0x16e50>
  40ae44:	mov    esi,0x14
  40ae49:	jmp    40ae71 <__flatcc_fb_gen_c_reader@@Base+0x28c1>
  40ae4b:	lea    rsi,[rip+0x29bba]        # 434a0c <_IO_stdin_used@@Base+0x7a0c>
  40ae52:	lea    rcx,[rsp+0x40]
  40ae57:	mov    rdx,rcx
  40ae5a:	xor    eax,eax
  40ae5c:	call   406170 <fprintf@plt>
  40ae61:	mov    rcx,QWORD PTR [r13+0x0]
  40ae65:	lea    rdi,[rip+0x29bd6]        # 434a42 <_IO_stdin_used@@Base+0x7a42>
  40ae6c:	mov    esi,0x15
  40ae71:	mov    edx,0x1
  40ae76:	call   406220 <fwrite@plt>
  40ae7b:	mov    rax,QWORD PTR [rsp+0x10]
  40ae80:	mov    rbx,QWORD PTR [rax+0x28]
  40ae84:	test   rbx,rbx
  40ae87:	je     40aed4 <__flatcc_fb_gen_c_reader@@Base+0x2924>
  40ae89:	lea    r15,[rip+0x29bfc]        # 434a8c <_IO_stdin_used@@Base+0x7a8c>
  40ae90:	lea    r12,[rip+0x29bc1]        # 434a58 <_IO_stdin_used@@Base+0x7a58>
  40ae97:	lea    r14,[rsp+0x40]
  40ae9c:	nop    DWORD PTR [rax+0x0]
  40aea0:	mov    rax,QWORD PTR [rbx+0x8]
  40aea4:	mov    ecx,DWORD PTR [rax+0x8]
  40aea7:	mov    r8,QWORD PTR [rax]
  40aeaa:	movzx  eax,WORD PTR [rbx+0x12]
  40aeae:	test   al,0x4
  40aeb0:	mov    rdi,QWORD PTR [r13+0x0]
  40aeb4:	mov    rsi,r12
  40aeb7:	cmove  rsi,r15
  40aebb:	mov    QWORD PTR [rsp],r8
  40aebf:	mov    rdx,r14
  40aec2:	mov    r9d,ecx
  40aec5:	xor    eax,eax
  40aec7:	call   406170 <fprintf@plt>
  40aecc:	mov    rbx,QWORD PTR [rbx]
  40aecf:	test   rbx,rbx
  40aed2:	jne    40aea0 <__flatcc_fb_gen_c_reader@@Base+0x28f0>
  40aed4:	mov    rcx,QWORD PTR [r13+0x0]
  40aed8:	lea    rdi,[rip+0x29bcf]        # 434aae <_IO_stdin_used@@Base+0x7aae>
  40aedf:	mov    esi,0x20
  40aee4:	mov    edx,0x1
  40aee9:	call   406220 <fwrite@plt>
  40aeee:	mov    rsi,QWORD PTR [r13+0x0]
  40aef2:	mov    edi,0xa
  40aef7:	call   406110 <fputc@plt>
  40aefc:	mov    rdi,QWORD PTR [r13+0x0]
  40af00:	cmp    WORD PTR [rsp+0x20],0x3
  40af06:	je     40af30 <__flatcc_fb_gen_c_reader@@Base+0x2980>
  40af08:	lea    rsi,[rip+0x29bc0]        # 434acf <_IO_stdin_used@@Base+0x7acf>
  40af0f:	lea    rcx,[rsp+0x40]
  40af14:	mov    rdx,rcx
  40af17:	xor    eax,eax
  40af19:	call   406170 <fprintf@plt>
  40af1e:	mov    rcx,QWORD PTR [r13+0x0]
  40af22:	lea    rdi,[rip+0x38f27]        # 443e50 <_IO_stdin_used@@Base+0x16e50>
  40af29:	mov    esi,0x14
  40af2e:	jmp    40af56 <__flatcc_fb_gen_c_reader@@Base+0x29a6>
  40af30:	lea    rsi,[rip+0x29bd4]        # 434b0b <_IO_stdin_used@@Base+0x7b0b>
  40af37:	lea    rcx,[rsp+0x40]
  40af3c:	mov    rdx,rcx
  40af3f:	xor    eax,eax
  40af41:	call   406170 <fprintf@plt>
  40af46:	mov    rcx,QWORD PTR [r13+0x0]
  40af4a:	lea    rdi,[rip+0x29af1]        # 434a42 <_IO_stdin_used@@Base+0x7a42>
  40af51:	mov    esi,0x15
  40af56:	mov    edx,0x1
  40af5b:	call   406220 <fwrite@plt>
  40af60:	mov    rax,QWORD PTR [rsp+0x10]
  40af65:	mov    rbx,QWORD PTR [rax+0x28]
  40af69:	test   rbx,rbx
  40af6c:	je     40afbd <__flatcc_fb_gen_c_reader@@Base+0x2a0d>
  40af6e:	lea    r15,[rip+0x29bfd]        # 434b72 <_IO_stdin_used@@Base+0x7b72>
  40af75:	lea    r12,[rip+0x29bc7]        # 434b43 <_IO_stdin_used@@Base+0x7b43>
  40af7c:	lea    r14,[rsp+0x40]
  40af81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40af8b:	nop    DWORD PTR [rax+rax*1+0x0]
  40af90:	mov    rax,QWORD PTR [rbx+0x8]
  40af94:	mov    ecx,DWORD PTR [rax+0x8]
  40af97:	mov    r8,QWORD PTR [rax]
  40af9a:	movzx  eax,WORD PTR [rbx+0x12]
  40af9e:	test   al,0x4
  40afa0:	mov    rdi,QWORD PTR [r13+0x0]
  40afa4:	mov    rsi,r12
  40afa7:	cmove  rsi,r15
  40afab:	mov    rdx,r14
  40afae:	xor    eax,eax
  40afb0:	call   406170 <fprintf@plt>
  40afb5:	mov    rbx,QWORD PTR [rbx]
  40afb8:	test   rbx,rbx
  40afbb:	jne    40af90 <__flatcc_fb_gen_c_reader@@Base+0x29e0>
  40afbd:	mov    rcx,QWORD PTR [r13+0x0]
  40afc1:	lea    rdi,[rip+0x29bc7]        # 434b8f <_IO_stdin_used@@Base+0x7b8f>
  40afc8:	mov    esi,0x1f
  40afcd:	mov    edx,0x1
  40afd2:	call   406220 <fwrite@plt>
  40afd7:	mov    rsi,QWORD PTR [r13+0x0]
  40afdb:	mov    edi,0xa
  40afe0:	call   406110 <fputc@plt>
  40afe5:	lea    rsp,[rbp-0x28]
  40afe9:	pop    rbx
  40afea:	pop    r12
  40afec:	pop    r13
  40afee:	pop    r14
  40aff0:	pop    r15
  40aff2:	pop    rbp
  40aff3:	ret    
  40aff4:	lea    rdi,[rip+0x298b9]        # 4348b4 <_IO_stdin_used@@Base+0x78b4>
  40affb:	lea    rsi,[rip+0x2343d]        # 42e43f <_IO_stdin_used@@Base+0x143f>
  40b002:	lea    rcx,[rip+0x298eb]        # 4348f4 <_IO_stdin_used@@Base+0x78f4>
  40b009:	mov    edx,0x4b4
  40b00e:	vzeroupper 
  40b011:	call   4060f0 <__assert_fail@plt>
  40b016:	lea    rdi,[rip+0x2990a]        # 434927 <_IO_stdin_used@@Base+0x7927>
  40b01d:	lea    rsi,[rip+0x2341b]        # 42e43f <_IO_stdin_used@@Base+0x143f>
  40b024:	lea    rcx,[rip+0x298c9]        # 4348f4 <_IO_stdin_used@@Base+0x78f4>
  40b02b:	mov    edx,0x4b5
  40b030:	vzeroupper 
  40b033:	call   4060f0 <__assert_fail@plt>
  40b038:	mov    rax,QWORD PTR [rip+0x44fb9]        # 44fff8 <stderr@GLIBC_2.2.5>
  40b03f:	mov    rdi,QWORD PTR [rax]
  40b042:	lea    rsi,[rip+0x233eb]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40b049:	lea    rbx,[rip+0x29b96]        # 434be6 <_IO_stdin_used@@Base+0x7be6>
  40b050:	lea    r8,[rip+0x29bf2]        # 434c49 <_IO_stdin_used@@Base+0x7c49>
  40b057:	mov    rdx,rbx
  40b05a:	mov    ecx,0x8d
  40b05f:	xor    eax,eax
  40b061:	vzeroupper 
  40b064:	call   406170 <fprintf@plt>
  40b069:	lea    rdi,[rip+0x3432b]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40b070:	lea    rcx,[rip+0x29c09]        # 434c80 <_IO_stdin_used@@Base+0x7c80>
  40b077:	mov    rsi,rbx
  40b07a:	mov    edx,0x8d
  40b07f:	call   4060f0 <__assert_fail@plt>
  40b084:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40b08e:	xchg   ax,ax
  40b090:	push   rbx
  40b091:	mov    ecx,DWORD PTR [rsi+0x10]
  40b094:	add    ecx,0xfffffffd
  40b097:	cmp    cx,0x3
  40b09b:	ja     40b167 <__flatcc_fb_gen_c_reader@@Base+0x2bb7>
  40b0a1:	mov    rax,rdx
  40b0a4:	movzx  ecx,cx
  40b0a7:	lea    rdx,[rip+0x23216]        # 42e2c4 <_IO_stdin_used@@Base+0x12c4>
  40b0ae:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40b0b2:	add    rcx,rdx
  40b0b5:	jmp    rcx
  40b0b7:	vmovsd xmm0,QWORD PTR [rsi]
  40b0bb:	cmp    edi,0xb
  40b0be:	jne    40b155 <__flatcc_fb_gen_c_reader@@Base+0x2ba5>
  40b0c4:	vcvtsd2ss xmm0,xmm0,xmm0
  40b0c8:	vcvtss2sd xmm0,xmm0,xmm0
  40b0cc:	lea    rsi,[rip+0x29c03]        # 434cd6 <_IO_stdin_used@@Base+0x7cd6>
  40b0d3:	jmp    40b15c <__flatcc_fb_gen_c_reader@@Base+0x2bac>
  40b0d8:	dec    edi
  40b0da:	cmp    edi,0x9
  40b0dd:	jae    40b1b0 <__flatcc_fb_gen_c_reader@@Base+0x2c00>
  40b0e3:	movsxd rcx,edi
  40b0e6:	lea    rdx,[rip+0x44a7b]        # 44fb68 <fb_value_set_deleted@@Base+0x60e8>
  40b0ed:	mov    rdx,QWORD PTR [rdx+rcx*8]
  40b0f1:	mov    rcx,QWORD PTR [rsi]
  40b0f4:	lea    rsi,[rip+0x29bc2]        # 434cbd <_IO_stdin_used@@Base+0x7cbd>
  40b0fb:	jmp    40b14a <__flatcc_fb_gen_c_reader@@Base+0x2b9a>
  40b0fd:	dec    edi
  40b0ff:	cmp    edi,0x9
  40b102:	jae    40b1b0 <__flatcc_fb_gen_c_reader@@Base+0x2c00>
  40b108:	movsxd rcx,edi
  40b10b:	lea    rdx,[rip+0x44a56]        # 44fb68 <fb_value_set_deleted@@Base+0x60e8>
  40b112:	mov    rdx,QWORD PTR [rdx+rcx*8]
  40b116:	movzx  ecx,BYTE PTR [rsi]
  40b119:	lea    rsi,[rip+0x29baf]        # 434ccf <_IO_stdin_used@@Base+0x7ccf>
  40b120:	mov    rdi,rax
  40b123:	xor    eax,eax
  40b125:	pop    rbx
  40b126:	jmp    406200 <sprintf@plt>
  40b12b:	dec    edi
  40b12d:	cmp    edi,0x9
  40b130:	jae    40b1b0 <__flatcc_fb_gen_c_reader@@Base+0x2c00>
  40b132:	movsxd rcx,edi
  40b135:	lea    rdx,[rip+0x44a2c]        # 44fb68 <fb_value_set_deleted@@Base+0x60e8>
  40b13c:	mov    rdx,QWORD PTR [rdx+rcx*8]
  40b140:	mov    rcx,QWORD PTR [rsi]
  40b143:	lea    rsi,[rip+0x29b7c]        # 434cc6 <_IO_stdin_used@@Base+0x7cc6>
  40b14a:	mov    rdi,rax
  40b14d:	xor    eax,eax
  40b14f:	pop    rbx
  40b150:	jmp    406200 <sprintf@plt>
  40b155:	lea    rsi,[rip+0x29b7e]        # 434cda <_IO_stdin_used@@Base+0x7cda>
  40b15c:	mov    rdi,rax
  40b15f:	mov    al,0x1
  40b161:	pop    rbx
  40b162:	jmp    406200 <sprintf@plt>
  40b167:	mov    rax,QWORD PTR [rip+0x44e8a]        # 44fff8 <stderr@GLIBC_2.2.5>
  40b16e:	mov    rdi,QWORD PTR [rax]
  40b171:	lea    rsi,[rip+0x232bc]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40b178:	lea    rbx,[rip+0x29a67]        # 434be6 <_IO_stdin_used@@Base+0x7be6>
  40b17f:	lea    r8,[rip+0x29ac3]        # 434c49 <_IO_stdin_used@@Base+0x7c49>
  40b186:	mov    rdx,rbx
  40b189:	mov    ecx,0x104
  40b18e:	xor    eax,eax
  40b190:	call   406170 <fprintf@plt>
  40b195:	lea    rdi,[rip+0x341ff]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40b19c:	lea    rcx,[rip+0x29b3b]        # 434cde <_IO_stdin_used@@Base+0x7cde>
  40b1a3:	mov    rsi,rbx
  40b1a6:	mov    edx,0x104
  40b1ab:	call   4060f0 <__assert_fail@plt>
  40b1b0:	mov    rax,QWORD PTR [rip+0x44e41]        # 44fff8 <stderr@GLIBC_2.2.5>
  40b1b7:	mov    rdi,QWORD PTR [rax]
  40b1ba:	lea    rsi,[rip+0x23273]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40b1c1:	lea    rbx,[rip+0x29a1e]        # 434be6 <_IO_stdin_used@@Base+0x7be6>
  40b1c8:	lea    r8,[rip+0x29a7a]        # 434c49 <_IO_stdin_used@@Base+0x7c49>
  40b1cf:	mov    rdx,rbx
  40b1d2:	mov    ecx,0xe2
  40b1d7:	xor    eax,eax
  40b1d9:	call   406170 <fprintf@plt>
  40b1de:	lea    rdi,[rip+0x341b6]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40b1e5:	lea    rcx,[rip+0x29b58]        # 434d44 <_IO_stdin_used@@Base+0x7d44>
  40b1ec:	mov    rsi,rbx
  40b1ef:	mov    edx,0xe2
  40b1f4:	call   4060f0 <__assert_fail@plt>
  40b1f9:	nop    DWORD PTR [rax+0x0]

000000000040b200 <__flatcc_gen_sort@@Base>:
  40b200:	push   rbx
  40b201:	mov    rbx,rdi
  40b204:	mov    rdi,QWORD PTR [rdi+0xd0]
  40b20b:	lea    rsi,[rip+0x2ab68]        # 435d7a <_IO_stdin_used@@Base+0x8d7a>
  40b212:	mov    rdx,rbx
  40b215:	xor    eax,eax
  40b217:	call   406170 <fprintf@plt>
  40b21c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b223:	lea    rsi,[rip+0x2af1e]        # 436148 <_IO_stdin_used@@Base+0x9148>
  40b22a:	mov    rdx,rbx
  40b22d:	mov    rcx,rbx
  40b230:	xor    eax,eax
  40b232:	call   406170 <fprintf@plt>
  40b237:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b23e:	lea    rsi,[rip+0x2b013]        # 436258 <_IO_stdin_used@@Base+0x9258>
  40b245:	mov    rdx,rbx
  40b248:	mov    rcx,rbx
  40b24b:	mov    r8,rbx
  40b24e:	xor    eax,eax
  40b250:	call   406170 <fprintf@plt>
  40b255:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b25c:	lea    rsi,[rip+0x2b0c9]        # 43632c <_IO_stdin_used@@Base+0x932c>
  40b263:	mov    rdx,rbx
  40b266:	mov    rcx,rbx
  40b269:	mov    r8,rbx
  40b26c:	mov    r9,rbx
  40b26f:	xor    eax,eax
  40b271:	call   406170 <fprintf@plt>
  40b276:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b27d:	lea    rsi,[rip+0x2b13c]        # 4363c0 <_IO_stdin_used@@Base+0x93c0>
  40b284:	mov    rdx,rbx
  40b287:	mov    rcx,rbx
  40b28a:	xor    eax,eax
  40b28c:	call   406170 <fprintf@plt>
  40b291:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b298:	lea    rsi,[rip+0x2b2b8]        # 436557 <_IO_stdin_used@@Base+0x9557>
  40b29f:	mov    rdx,rbx
  40b2a2:	mov    rcx,rbx
  40b2a5:	mov    r8,rbx
  40b2a8:	mov    r9,rbx
  40b2ab:	xor    eax,eax
  40b2ad:	call   406170 <fprintf@plt>
  40b2b2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b2b9:	lea    rsi,[rip+0x2b31c]        # 4365dc <_IO_stdin_used@@Base+0x95dc>
  40b2c0:	mov    rdx,rbx
  40b2c3:	mov    rcx,rbx
  40b2c6:	mov    r8,rbx
  40b2c9:	mov    r9,rbx
  40b2cc:	mov    eax,0x0
  40b2d1:	push   rbx
  40b2d2:	push   rbx
  40b2d3:	call   406170 <fprintf@plt>
  40b2d8:	add    rsp,0x10
  40b2dc:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b2e3:	lea    rsi,[rip+0x2b380]        # 43666a <_IO_stdin_used@@Base+0x966a>
  40b2ea:	mov    rdx,rbx
  40b2ed:	mov    rcx,rbx
  40b2f0:	mov    r8,rbx
  40b2f3:	mov    r9,rbx
  40b2f6:	xor    eax,eax
  40b2f8:	call   406170 <fprintf@plt>
  40b2fd:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b304:	sub    rsp,0x8
  40b308:	lea    rsi,[rip+0x2b3bc]        # 4366cb <_IO_stdin_used@@Base+0x96cb>
  40b30f:	mov    rdx,rbx
  40b312:	mov    rcx,rbx
  40b315:	mov    r8,rbx
  40b318:	mov    r9,rbx
  40b31b:	mov    eax,0x0
  40b320:	push   rbx
  40b321:	push   rbx
  40b322:	push   rbx
  40b323:	call   406170 <fprintf@plt>
  40b328:	add    rsp,0x20
  40b32c:	xor    eax,eax
  40b32e:	pop    rbx
  40b32f:	ret    

000000000040b330 <__flatcc_fb_gen_common_c_builder_header@@Base>:
  40b330:	push   r14
  40b332:	push   rbx
  40b333:	push   rax
  40b334:	mov    rbx,rdi
  40b337:	lea    r14,[rdi+0x66]
  40b33b:	mov    rdi,QWORD PTR [rdi+0xd0]
  40b342:	lea    rsi,[rip+0x2b48f]        # 4367d8 <_IO_stdin_used@@Base+0x97d8>
  40b349:	mov    rdx,r14
  40b34c:	xor    eax,eax
  40b34e:	call   406170 <fprintf@plt>
  40b353:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b35a:	lea    rsi,[rip+0x2b494]        # 4367f5 <_IO_stdin_used@@Base+0x97f5>
  40b361:	mov    rdx,r14
  40b364:	xor    eax,eax
  40b366:	call   406170 <fprintf@plt>
  40b36b:	mov    rcx,QWORD PTR [rbx+0xd0]
  40b372:	lea    rdi,[rip+0x22f92]        # 42e30b <_IO_stdin_used@@Base+0x130b>
  40b379:	mov    esi,0x51
  40b37e:	mov    edx,0x1
  40b383:	call   406220 <fwrite@plt>
  40b388:	mov    rcx,QWORD PTR [rbx+0xd0]
  40b38f:	lea    rdi,[rip+0x2b47c]        # 436812 <_IO_stdin_used@@Base+0x9812>
  40b396:	mov    esi,0x35
  40b39b:	mov    edx,0x1
  40b3a0:	call   406220 <fwrite@plt>
  40b3a5:	mov    rax,QWORD PTR [rbx+0xe0]
  40b3ac:	cmp    DWORD PTR [rax+0xac],0x0
  40b3b3:	je     40b3d2 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa2>
  40b3b5:	mov    rcx,QWORD PTR [rbx+0xd0]
  40b3bc:	lea    rdi,[rip+0x2313e]        # 42e501 <_IO_stdin_used@@Base+0x1501>
  40b3c3:	mov    esi,0x24
  40b3c8:	mov    edx,0x1
  40b3cd:	call   406220 <fwrite@plt>
  40b3d2:	mov    rcx,QWORD PTR [rbx+0xd0]
  40b3d9:	lea    rdi,[rip+0x2b468]        # 436848 <_IO_stdin_used@@Base+0x9848>
  40b3e0:	mov    esi,0x16
  40b3e5:	mov    edx,0x1
  40b3ea:	call   406220 <fwrite@plt>
  40b3ef:	mov    rcx,QWORD PTR [rbx+0xd0]
  40b3f6:	lea    rdi,[rip+0x2b462]        # 43685f <_IO_stdin_used@@Base+0x985f>
  40b3fd:	mov    esi,0x23
  40b402:	mov    edx,0x1
  40b407:	call   406220 <fwrite@plt>
  40b40c:	mov    rcx,QWORD PTR [rbx+0xd0]
  40b413:	lea    rdi,[rip+0x29113]        # 43452d <_IO_stdin_used@@Base+0x752d>
  40b41a:	mov    esi,0x7
  40b41f:	mov    edx,0x1
  40b424:	call   406220 <fwrite@plt>
  40b429:	lea    rsi,[rip+0x2b453]        # 436883 <_IO_stdin_used@@Base+0x9883>
  40b430:	mov    rdi,rbx
  40b433:	call   406150 <strcmp@plt>
  40b438:	test   eax,eax
  40b43a:	je     40b4d0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x1a0>
  40b440:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b447:	lea    rsi,[rip+0x2b445]        # 436893 <_IO_stdin_used@@Base+0x9893>
  40b44e:	mov    rdx,rbx
  40b451:	xor    eax,eax
  40b453:	call   406170 <fprintf@plt>
  40b458:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b45f:	lea    rsi,[rip+0x2b454]        # 4368ba <_IO_stdin_used@@Base+0x98ba>
  40b466:	mov    rdx,rbx
  40b469:	xor    eax,eax
  40b46b:	call   406170 <fprintf@plt>
  40b470:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b477:	lea    rsi,[rip+0x2b463]        # 4368e1 <_IO_stdin_used@@Base+0x98e1>
  40b47e:	mov    rdx,rbx
  40b481:	xor    eax,eax
  40b483:	call   406170 <fprintf@plt>
  40b488:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b48f:	lea    rsi,[rip+0x2b476]        # 43690c <_IO_stdin_used@@Base+0x990c>
  40b496:	mov    rdx,rbx
  40b499:	xor    eax,eax
  40b49b:	call   406170 <fprintf@plt>
  40b4a0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b4a7:	lea    rsi,[rip+0x2b491]        # 43693f <_IO_stdin_used@@Base+0x993f>
  40b4ae:	mov    rdx,rbx
  40b4b1:	xor    eax,eax
  40b4b3:	call   406170 <fprintf@plt>
  40b4b8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b4bf:	lea    rsi,[rip+0x2b4b4]        # 43697a <_IO_stdin_used@@Base+0x997a>
  40b4c6:	mov    rdx,rbx
  40b4c9:	xor    eax,eax
  40b4cb:	call   406170 <fprintf@plt>
  40b4d0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b4d7:	lea    rsi,[rip+0x2b4f4]        # 4369d2 <_IO_stdin_used@@Base+0x99d2>
  40b4de:	mov    rdx,rbx
  40b4e1:	mov    rcx,rbx
  40b4e4:	xor    eax,eax
  40b4e6:	call   406170 <fprintf@plt>
  40b4eb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b4f2:	lea    rsi,[rip+0x2b4f4]        # 4369ed <_IO_stdin_used@@Base+0x99ed>
  40b4f9:	mov    rdx,rbx
  40b4fc:	mov    rcx,rbx
  40b4ff:	xor    eax,eax
  40b501:	call   406170 <fprintf@plt>
  40b506:	lea    rsi,[rip+0x23043]        # 42e550 <_IO_stdin_used@@Base+0x1550>
  40b50d:	mov    rdi,rbx
  40b510:	call   406150 <strcmp@plt>
  40b515:	test   eax,eax
  40b517:	je     40b549 <__flatcc_fb_gen_common_c_builder_header@@Base+0x219>
  40b519:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b520:	lea    rsi,[rip+0x2b4ed]        # 436a14 <_IO_stdin_used@@Base+0x9a14>
  40b527:	mov    rdx,rbx
  40b52a:	xor    eax,eax
  40b52c:	call   406170 <fprintf@plt>
  40b531:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b538:	lea    rsi,[rip+0x2b506]        # 436a45 <_IO_stdin_used@@Base+0x9a45>
  40b53f:	mov    rdx,rbx
  40b542:	xor    eax,eax
  40b544:	call   406170 <fprintf@plt>
  40b549:	mov    rsi,QWORD PTR [rbx+0xd0]
  40b550:	mov    edi,0xa
  40b555:	call   406110 <fputc@plt>
  40b55a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b561:	lea    rsi,[rip+0x2b501]        # 436a69 <_IO_stdin_used@@Base+0x9a69>
  40b568:	mov    rdx,rbx
  40b56b:	xor    eax,eax
  40b56d:	call   406170 <fprintf@plt>
  40b572:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b579:	lea    rsi,[rip+0x2b85c]        # 436ddc <_IO_stdin_used@@Base+0x9ddc>
  40b580:	mov    rdx,rbx
  40b583:	xor    eax,eax
  40b585:	call   406170 <fprintf@plt>
  40b58a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b591:	lea    rsi,[rip+0x2bf0d]        # 4374a5 <_IO_stdin_used@@Base+0xa4a5>
  40b598:	mov    rdx,rbx
  40b59b:	mov    rcx,rbx
  40b59e:	mov    r8,rbx
  40b5a1:	xor    eax,eax
  40b5a3:	call   406170 <fprintf@plt>
  40b5a8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b5af:	lea    rsi,[rip+0x2bf78]        # 43752e <_IO_stdin_used@@Base+0xa52e>
  40b5b6:	mov    rdx,rbx
  40b5b9:	xor    eax,eax
  40b5bb:	call   406170 <fprintf@plt>
  40b5c0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b5c7:	lea    rsi,[rip+0x2ca1b]        # 437fe9 <_IO_stdin_used@@Base+0xafe9>
  40b5ce:	mov    rdx,rbx
  40b5d1:	xor    eax,eax
  40b5d3:	call   406170 <fprintf@plt>
  40b5d8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b5df:	lea    rsi,[rip+0x2cdde]        # 4383c4 <_IO_stdin_used@@Base+0xb3c4>
  40b5e6:	mov    rdx,rbx
  40b5e9:	xor    eax,eax
  40b5eb:	call   406170 <fprintf@plt>
  40b5f0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b5f7:	lea    rsi,[rip+0x2d3fc]        # 4389fa <_IO_stdin_used@@Base+0xb9fa>
  40b5fe:	mov    rdx,rbx
  40b601:	xor    eax,eax
  40b603:	call   406170 <fprintf@plt>
  40b608:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b60f:	lea    rsi,[rip+0x2d860]        # 438e76 <_IO_stdin_used@@Base+0xbe76>
  40b616:	mov    rdx,rbx
  40b619:	mov    rcx,rbx
  40b61c:	xor    eax,eax
  40b61e:	call   406170 <fprintf@plt>
  40b623:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b62a:	lea    rsi,[rip+0x2dfb8]        # 4395e9 <_IO_stdin_used@@Base+0xc5e9>
  40b631:	mov    rdx,rbx
  40b634:	mov    rcx,rbx
  40b637:	mov    r8,rbx
  40b63a:	xor    eax,eax
  40b63c:	call   406170 <fprintf@plt>
  40b641:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b648:	lea    rsi,[rip+0x2e4e2]        # 439b31 <_IO_stdin_used@@Base+0xcb31>
  40b64f:	mov    rdx,rbx
  40b652:	xor    eax,eax
  40b654:	call   406170 <fprintf@plt>
  40b659:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b660:	lea    rsi,[rip+0x2e948]        # 439faf <_IO_stdin_used@@Base+0xcfaf>
  40b667:	mov    rdx,rbx
  40b66a:	xor    eax,eax
  40b66c:	call   406170 <fprintf@plt>
  40b671:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b678:	lea    rsi,[rip+0x2eabe]        # 43a13d <_IO_stdin_used@@Base+0xd13d>
  40b67f:	mov    rdx,rbx
  40b682:	xor    eax,eax
  40b684:	call   406170 <fprintf@plt>
  40b689:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b690:	lea    rsi,[rip+0x2ee00]        # 43a497 <_IO_stdin_used@@Base+0xd497>
  40b697:	mov    rdx,rbx
  40b69a:	mov    rcx,rbx
  40b69d:	xor    eax,eax
  40b69f:	call   406170 <fprintf@plt>
  40b6a4:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b6ab:	lea    rsi,[rip+0x2efea]        # 43a69c <_IO_stdin_used@@Base+0xd69c>
  40b6b2:	mov    rdx,rbx
  40b6b5:	xor    eax,eax
  40b6b7:	call   406170 <fprintf@plt>
  40b6bc:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b6c3:	lea    rsi,[rip+0x2f33b]        # 43aa05 <_IO_stdin_used@@Base+0xda05>
  40b6ca:	mov    rdx,rbx
  40b6cd:	mov    rcx,rbx
  40b6d0:	mov    r8,rbx
  40b6d3:	xor    eax,eax
  40b6d5:	call   406170 <fprintf@plt>
  40b6da:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b6e1:	lea    rsi,[rip+0x2f819]        # 43af01 <_IO_stdin_used@@Base+0xdf01>
  40b6e8:	mov    rdx,rbx
  40b6eb:	mov    rcx,rbx
  40b6ee:	mov    r8,rbx
  40b6f1:	mov    r9,rbx
  40b6f4:	xor    eax,eax
  40b6f6:	call   406170 <fprintf@plt>
  40b6fb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b702:	lea    rsi,[rip+0x2f901]        # 43b00a <_IO_stdin_used@@Base+0xe00a>
  40b709:	mov    rdx,rbx
  40b70c:	mov    rcx,rbx
  40b70f:	xor    eax,eax
  40b711:	call   406170 <fprintf@plt>
  40b716:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b71d:	lea    rsi,[rip+0x2fc4e]        # 43b372 <_IO_stdin_used@@Base+0xe372>
  40b724:	mov    rdx,rbx
  40b727:	mov    rcx,rbx
  40b72a:	mov    r8,rbx
  40b72d:	mov    r9,rbx
  40b730:	xor    eax,eax
  40b732:	call   406170 <fprintf@plt>
  40b737:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b73e:	lea    rsi,[rip+0x3022b]        # 43b970 <_IO_stdin_used@@Base+0xe970>
  40b745:	mov    rdx,rbx
  40b748:	mov    rcx,rbx
  40b74b:	xor    eax,eax
  40b74d:	call   406170 <fprintf@plt>
  40b752:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b759:	lea    rsi,[rip+0x303c3]        # 43bb23 <_IO_stdin_used@@Base+0xeb23>
  40b760:	mov    rdx,rbx
  40b763:	xor    eax,eax
  40b765:	call   406170 <fprintf@plt>
  40b76a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b771:	lea    rsi,[rip+0x305d0]        # 43bd48 <_IO_stdin_used@@Base+0xed48>
  40b778:	mov    rdx,rbx
  40b77b:	xor    eax,eax
  40b77d:	call   406170 <fprintf@plt>
  40b782:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b789:	lea    rsi,[rip+0x30978]        # 43c108 <_IO_stdin_used@@Base+0xf108>
  40b790:	mov    rdx,rbx
  40b793:	xor    eax,eax
  40b795:	call   406170 <fprintf@plt>
  40b79a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b7a1:	lea    rsi,[rip+0x30c1d]        # 43c3c5 <_IO_stdin_used@@Base+0xf3c5>
  40b7a8:	mov    rdx,rbx
  40b7ab:	xor    eax,eax
  40b7ad:	call   406170 <fprintf@plt>
  40b7b2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b7b9:	lea    rsi,[rip+0x31019]        # 43c7d9 <_IO_stdin_used@@Base+0xf7d9>
  40b7c0:	mov    rdx,rbx
  40b7c3:	mov    rcx,rbx
  40b7c6:	xor    eax,eax
  40b7c8:	call   406170 <fprintf@plt>
  40b7cd:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b7d4:	lea    rsi,[rip+0x310ea]        # 43c8c5 <_IO_stdin_used@@Base+0xf8c5>
  40b7db:	mov    rdx,rbx
  40b7de:	xor    eax,eax
  40b7e0:	call   406170 <fprintf@plt>
  40b7e5:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b7ec:	lea    rsi,[rip+0x31333]        # 43cb26 <_IO_stdin_used@@Base+0xfb26>
  40b7f3:	mov    rdx,rbx
  40b7f6:	xor    eax,eax
  40b7f8:	call   406170 <fprintf@plt>
  40b7fd:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b804:	lea    rsi,[rip+0x31692]        # 43ce9d <_IO_stdin_used@@Base+0xfe9d>
  40b80b:	mov    rdx,rbx
  40b80e:	mov    rcx,rbx
  40b811:	xor    eax,eax
  40b813:	call   406170 <fprintf@plt>
  40b818:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b81f:	lea    rsi,[rip+0x31ac6]        # 43d2ec <_IO_stdin_used@@Base+0x102ec>
  40b826:	mov    rdx,rbx
  40b829:	mov    rcx,rbx
  40b82c:	xor    eax,eax
  40b82e:	call   406170 <fprintf@plt>
  40b833:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b83a:	lea    rsi,[rip+0x31d43]        # 43d584 <_IO_stdin_used@@Base+0x10584>
  40b841:	mov    rdx,rbx
  40b844:	mov    rcx,rbx
  40b847:	xor    eax,eax
  40b849:	call   406170 <fprintf@plt>
  40b84e:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b855:	lea    rsi,[rip+0x32124]        # 43d980 <_IO_stdin_used@@Base+0x10980>
  40b85c:	mov    rdx,rbx
  40b85f:	mov    rcx,rbx
  40b862:	xor    eax,eax
  40b864:	call   406170 <fprintf@plt>
  40b869:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b870:	lea    rsi,[rip+0x32215]        # 43da8c <_IO_stdin_used@@Base+0x10a8c>
  40b877:	mov    rdx,rbx
  40b87a:	mov    rcx,rbx
  40b87d:	mov    r8,rbx
  40b880:	xor    eax,eax
  40b882:	call   406170 <fprintf@plt>
  40b887:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b88e:	lea    rsi,[rip+0x32282]        # 43db17 <_IO_stdin_used@@Base+0x10b17>
  40b895:	mov    rdx,rbx
  40b898:	mov    rcx,rbx
  40b89b:	xor    eax,eax
  40b89d:	call   406170 <fprintf@plt>
  40b8a2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b8a9:	lea    rsi,[rip+0x325b3]        # 43de63 <_IO_stdin_used@@Base+0x10e63>
  40b8b0:	mov    rdx,rbx
  40b8b3:	xor    eax,eax
  40b8b5:	call   406170 <fprintf@plt>
  40b8ba:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b8c1:	lea    rsi,[rip+0x32823]        # 43e0eb <_IO_stdin_used@@Base+0x110eb>
  40b8c8:	mov    rdx,rbx
  40b8cb:	xor    eax,eax
  40b8cd:	call   406170 <fprintf@plt>
  40b8d2:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b8d9:	lea    rsi,[rip+0x32a99]        # 43e379 <_IO_stdin_used@@Base+0x11379>
  40b8e0:	mov    rdx,rbx
  40b8e3:	xor    eax,eax
  40b8e5:	call   406170 <fprintf@plt>
  40b8ea:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b8f1:	lea    rsi,[rip+0x33037]        # 43e92f <_IO_stdin_used@@Base+0x1192f>
  40b8f8:	mov    rdx,rbx
  40b8fb:	mov    rcx,rbx
  40b8fe:	mov    r8,rbx
  40b901:	xor    eax,eax
  40b903:	call   406170 <fprintf@plt>
  40b908:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b90f:	lea    rsi,[rip+0x330a8]        # 43e9be <_IO_stdin_used@@Base+0x119be>
  40b916:	mov    rdx,rbx
  40b919:	xor    eax,eax
  40b91b:	call   406170 <fprintf@plt>
  40b920:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b927:	lea    rsi,[rip+0x330bc]        # 43e9ea <_IO_stdin_used@@Base+0x119ea>
  40b92e:	mov    rdx,rbx
  40b931:	xor    eax,eax
  40b933:	call   406170 <fprintf@plt>
  40b938:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b93f:	lea    rsi,[rip+0x330c6]        # 43ea0c <_IO_stdin_used@@Base+0x11a0c>
  40b946:	mov    rdx,rbx
  40b949:	xor    eax,eax
  40b94b:	call   406170 <fprintf@plt>
  40b950:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b957:	lea    rsi,[rip+0x330d8]        # 43ea36 <_IO_stdin_used@@Base+0x11a36>
  40b95e:	mov    rdx,rbx
  40b961:	xor    eax,eax
  40b963:	call   406170 <fprintf@plt>
  40b968:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b96f:	lea    rsi,[rip+0x330e1]        # 43ea57 <_IO_stdin_used@@Base+0x11a57>
  40b976:	mov    rdx,rbx
  40b979:	mov    rcx,rbx
  40b97c:	xor    eax,eax
  40b97e:	call   406170 <fprintf@plt>
  40b983:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b98a:	lea    rsi,[rip+0x330f2]        # 43ea83 <_IO_stdin_used@@Base+0x11a83>
  40b991:	mov    rdx,rbx
  40b994:	xor    eax,eax
  40b996:	call   406170 <fprintf@plt>
  40b99b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b9a2:	lea    rsi,[rip+0x330fb]        # 43eaa4 <_IO_stdin_used@@Base+0x11aa4>
  40b9a9:	mov    rdx,rbx
  40b9ac:	xor    eax,eax
  40b9ae:	call   406170 <fprintf@plt>
  40b9b3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b9ba:	lea    rsi,[rip+0x33111]        # 43ead2 <_IO_stdin_used@@Base+0x11ad2>
  40b9c1:	mov    rdx,rbx
  40b9c4:	xor    eax,eax
  40b9c6:	call   406170 <fprintf@plt>
  40b9cb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b9d2:	lea    rsi,[rip+0x3311c]        # 43eaf5 <_IO_stdin_used@@Base+0x11af5>
  40b9d9:	mov    rdx,rbx
  40b9dc:	xor    eax,eax
  40b9de:	call   406170 <fprintf@plt>
  40b9e3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40b9ea:	lea    rsi,[rip+0x33132]        # 43eb23 <_IO_stdin_used@@Base+0x11b23>
  40b9f1:	mov    rdx,rbx
  40b9f4:	xor    eax,eax
  40b9f6:	call   406170 <fprintf@plt>
  40b9fb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ba02:	lea    rsi,[rip+0x3313d]        # 43eb46 <_IO_stdin_used@@Base+0x11b46>
  40ba09:	mov    rdx,rbx
  40ba0c:	xor    eax,eax
  40ba0e:	call   406170 <fprintf@plt>
  40ba13:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ba1a:	lea    rsi,[rip+0x33153]        # 43eb74 <_IO_stdin_used@@Base+0x11b74>
  40ba21:	mov    rdx,rbx
  40ba24:	xor    eax,eax
  40ba26:	call   406170 <fprintf@plt>
  40ba2b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ba32:	lea    rsi,[rip+0x3315e]        # 43eb97 <_IO_stdin_used@@Base+0x11b97>
  40ba39:	mov    rdx,rbx
  40ba3c:	xor    eax,eax
  40ba3e:	call   406170 <fprintf@plt>
  40ba43:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ba4a:	lea    rsi,[rip+0x33172]        # 43ebc3 <_IO_stdin_used@@Base+0x11bc3>
  40ba51:	mov    rdx,rbx
  40ba54:	xor    eax,eax
  40ba56:	call   406170 <fprintf@plt>
  40ba5b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ba62:	lea    rsi,[rip+0x3317c]        # 43ebe5 <_IO_stdin_used@@Base+0x11be5>
  40ba69:	mov    rdx,rbx
  40ba6c:	xor    eax,eax
  40ba6e:	call   406170 <fprintf@plt>
  40ba73:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ba7a:	lea    rsi,[rip+0x33190]        # 43ec11 <_IO_stdin_used@@Base+0x11c11>
  40ba81:	mov    rdx,rbx
  40ba84:	xor    eax,eax
  40ba86:	call   406170 <fprintf@plt>
  40ba8b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ba92:	lea    rsi,[rip+0x3319a]        # 43ec33 <_IO_stdin_used@@Base+0x11c33>
  40ba99:	mov    rdx,rbx
  40ba9c:	xor    eax,eax
  40ba9e:	call   406170 <fprintf@plt>
  40baa3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40baaa:	lea    rsi,[rip+0x331ae]        # 43ec5f <_IO_stdin_used@@Base+0x11c5f>
  40bab1:	mov    rdx,rbx
  40bab4:	xor    eax,eax
  40bab6:	call   406170 <fprintf@plt>
  40babb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bac2:	lea    rsi,[rip+0x331b8]        # 43ec81 <_IO_stdin_used@@Base+0x11c81>
  40bac9:	mov    rdx,rbx
  40bacc:	xor    eax,eax
  40bace:	call   406170 <fprintf@plt>
  40bad3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bada:	lea    rsi,[rip+0x331ca]        # 43ecab <_IO_stdin_used@@Base+0x11cab>
  40bae1:	mov    rdx,rbx
  40bae4:	xor    eax,eax
  40bae6:	call   406170 <fprintf@plt>
  40baeb:	mov    rdi,QWORD PTR [rbx+0xd0]
  40baf2:	lea    rsi,[rip+0x331d4]        # 43eccd <_IO_stdin_used@@Base+0x11ccd>
  40baf9:	mov    rdx,rbx
  40bafc:	xor    eax,eax
  40bafe:	call   406170 <fprintf@plt>
  40bb03:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bb0a:	lea    rsi,[rip+0x331e8]        # 43ecf9 <_IO_stdin_used@@Base+0x11cf9>
  40bb11:	mov    rdx,rbx
  40bb14:	xor    eax,eax
  40bb16:	call   406170 <fprintf@plt>
  40bb1b:	mov    rsi,QWORD PTR [rbx+0xd0]
  40bb22:	mov    edi,0xa
  40bb27:	call   406110 <fputc@plt>
  40bb2c:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bb33:	lea    rsi,[rip+0x331e2]        # 43ed1c <_IO_stdin_used@@Base+0x11d1c>
  40bb3a:	mov    rdx,rbx
  40bb3d:	mov    rcx,rbx
  40bb40:	mov    r8,rbx
  40bb43:	xor    eax,eax
  40bb45:	call   406170 <fprintf@plt>
  40bb4a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bb51:	lea    rsi,[rip+0x331ec]        # 43ed44 <_IO_stdin_used@@Base+0x11d44>
  40bb58:	mov    rdx,rbx
  40bb5b:	mov    rcx,rbx
  40bb5e:	mov    r8,rbx
  40bb61:	xor    eax,eax
  40bb63:	call   406170 <fprintf@plt>
  40bb68:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bb6f:	lea    rsi,[rip+0x331f4]        # 43ed6a <_IO_stdin_used@@Base+0x11d6a>
  40bb76:	mov    rdx,rbx
  40bb79:	mov    rcx,rbx
  40bb7c:	mov    r8,rbx
  40bb7f:	mov    r9,rbx
  40bb82:	xor    eax,eax
  40bb84:	call   406170 <fprintf@plt>
  40bb89:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bb90:	lea    rsi,[rip+0x331fb]        # 43ed92 <_IO_stdin_used@@Base+0x11d92>
  40bb97:	mov    rdx,rbx
  40bb9a:	mov    rcx,rbx
  40bb9d:	mov    r8,rbx
  40bba0:	xor    eax,eax
  40bba2:	call   406170 <fprintf@plt>
  40bba7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bbae:	lea    rsi,[rip+0x33207]        # 43edbc <_IO_stdin_used@@Base+0x11dbc>
  40bbb5:	mov    rdx,rbx
  40bbb8:	mov    rcx,rbx
  40bbbb:	mov    r8,rbx
  40bbbe:	xor    eax,eax
  40bbc0:	call   406170 <fprintf@plt>
  40bbc5:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bbcc:	lea    rsi,[rip+0x33213]        # 43ede6 <_IO_stdin_used@@Base+0x11de6>
  40bbd3:	mov    rdx,rbx
  40bbd6:	mov    rcx,rbx
  40bbd9:	mov    r8,rbx
  40bbdc:	xor    eax,eax
  40bbde:	call   406170 <fprintf@plt>
  40bbe3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bbea:	lea    rsi,[rip+0x3321f]        # 43ee10 <_IO_stdin_used@@Base+0x11e10>
  40bbf1:	mov    rdx,rbx
  40bbf4:	mov    rcx,rbx
  40bbf7:	mov    r8,rbx
  40bbfa:	xor    eax,eax
  40bbfc:	call   406170 <fprintf@plt>
  40bc01:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bc08:	lea    rsi,[rip+0x33229]        # 43ee38 <_IO_stdin_used@@Base+0x11e38>
  40bc0f:	mov    rdx,rbx
  40bc12:	mov    rcx,rbx
  40bc15:	mov    r8,rbx
  40bc18:	xor    eax,eax
  40bc1a:	call   406170 <fprintf@plt>
  40bc1f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bc26:	lea    rsi,[rip+0x33233]        # 43ee60 <_IO_stdin_used@@Base+0x11e60>
  40bc2d:	mov    rdx,rbx
  40bc30:	mov    rcx,rbx
  40bc33:	mov    r8,rbx
  40bc36:	xor    eax,eax
  40bc38:	call   406170 <fprintf@plt>
  40bc3d:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bc44:	lea    rsi,[rip+0x3323d]        # 43ee88 <_IO_stdin_used@@Base+0x11e88>
  40bc4b:	mov    rdx,rbx
  40bc4e:	mov    rcx,rbx
  40bc51:	mov    r8,rbx
  40bc54:	xor    eax,eax
  40bc56:	call   406170 <fprintf@plt>
  40bc5b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bc62:	lea    rsi,[rip+0x33245]        # 43eeae <_IO_stdin_used@@Base+0x11eae>
  40bc69:	mov    rdx,rbx
  40bc6c:	mov    rcx,rbx
  40bc6f:	mov    r8,rbx
  40bc72:	xor    eax,eax
  40bc74:	call   406170 <fprintf@plt>
  40bc79:	mov    rsi,QWORD PTR [rbx+0xd0]
  40bc80:	mov    edi,0xa
  40bc85:	call   406110 <fputc@plt>
  40bc8a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bc91:	lea    rsi,[rip+0x3323e]        # 43eed6 <_IO_stdin_used@@Base+0x11ed6>
  40bc98:	mov    rdx,rbx
  40bc9b:	mov    rcx,rbx
  40bc9e:	xor    eax,eax
  40bca0:	call   406170 <fprintf@plt>
  40bca5:	mov    rsi,QWORD PTR [rbx+0xd0]
  40bcac:	mov    edi,0xa
  40bcb1:	call   406110 <fputc@plt>
  40bcb6:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bcbd:	lea    rsi,[rip+0x33228]        # 43eeec <_IO_stdin_used@@Base+0x11eec>
  40bcc4:	mov    rdx,rbx
  40bcc7:	mov    rcx,rbx
  40bcca:	xor    eax,eax
  40bccc:	call   406170 <fprintf@plt>
  40bcd1:	mov    rax,QWORD PTR [rbx+0xe0]
  40bcd8:	cmp    DWORD PTR [rax+0xac],0x0
  40bcdf:	je     40bcfe <__flatcc_fb_gen_common_c_builder_header@@Base+0x9ce>
  40bce1:	mov    rcx,QWORD PTR [rbx+0xd0]
  40bce8:	lea    rdi,[rip+0x285fc]        # 4342eb <_IO_stdin_used@@Base+0x72eb>
  40bcef:	mov    esi,0x24
  40bcf4:	mov    edx,0x1
  40bcf9:	call   406220 <fwrite@plt>
  40bcfe:	mov    rdi,QWORD PTR [rbx+0xd0]
  40bd05:	lea    rsi,[rip+0x331f6]        # 43ef02 <_IO_stdin_used@@Base+0x11f02>
  40bd0c:	mov    rdx,r14
  40bd0f:	xor    eax,eax
  40bd11:	call   406170 <fprintf@plt>
  40bd16:	xor    eax,eax
  40bd18:	add    rsp,0x8
  40bd1c:	pop    rbx
  40bd1d:	pop    r14
  40bd1f:	ret    

000000000040bd20 <__flatcc_fb_gen_c_builder@@Base>:
  40bd20:	push   rbp
  40bd21:	mov    rbp,rsp
  40bd24:	push   r15
  40bd26:	push   r14
  40bd28:	push   r13
  40bd2a:	push   r12
  40bd2c:	push   rbx
  40bd2d:	and    rsp,0xffffffffffffffe0
  40bd31:	sub    rsp,0x2a0
  40bd38:	mov    r15,rdi
  40bd3b:	lea    r14,[rdi+0x66]
  40bd3f:	lea    r12,[rdi+0xd0]
  40bd46:	mov    rdi,QWORD PTR [rdi+0xd0]
  40bd4d:	mov    rax,QWORD PTR [r15+0xd8]
  40bd54:	mov    rcx,QWORD PTR [rax+0x118]
  40bd5b:	lea    rsi,[rip+0x331c2]        # 43ef24 <_IO_stdin_used@@Base+0x11f24>
  40bd62:	mov    rdx,rcx
  40bd65:	xor    eax,eax
  40bd67:	call   406170 <fprintf@plt>
  40bd6c:	mov    rcx,QWORD PTR [r15+0xd0]
  40bd73:	lea    rdi,[rip+0x22591]        # 42e30b <_IO_stdin_used@@Base+0x130b>
  40bd7a:	mov    esi,0x51
  40bd7f:	mov    edx,0x1
  40bd84:	call   406220 <fwrite@plt>
  40bd89:	mov    rdi,QWORD PTR [r15+0xd0]
  40bd90:	mov    rax,QWORD PTR [r15+0xd8]
  40bd97:	mov    rdx,QWORD PTR [rax+0x118]
  40bd9e:	lea    rsi,[rip+0x331aa]        # 43ef4f <_IO_stdin_used@@Base+0x11f4f>
  40bda5:	xor    eax,eax
  40bda7:	call   406170 <fprintf@plt>
  40bdac:	mov    rdi,QWORD PTR [r15+0xd0]
  40bdb3:	mov    rax,QWORD PTR [r15+0xd8]
  40bdba:	mov    rdx,QWORD PTR [rax+0x110]
  40bdc1:	lea    rsi,[rip+0x3319c]        # 43ef64 <_IO_stdin_used@@Base+0x11f64>
  40bdc8:	xor    eax,eax
  40bdca:	call   406170 <fprintf@plt>
  40bdcf:	mov    rcx,QWORD PTR [r15+0xd0]
  40bdd6:	lea    rbx,[rip+0x28750]        # 43452d <_IO_stdin_used@@Base+0x752d>
  40bddd:	mov    esi,0x7
  40bde2:	mov    edx,0x1
  40bde7:	mov    rdi,rbx
  40bdea:	call   406220 <fwrite@plt>
  40bdef:	mov    rdi,QWORD PTR [r15+0xd0]
  40bdf6:	lea    rsi,[rip+0x2a9db]        # 4367d8 <_IO_stdin_used@@Base+0x97d8>
  40bdfd:	mov    rdx,r14
  40be00:	xor    eax,eax
  40be02:	call   406170 <fprintf@plt>
  40be07:	mov    rdi,QWORD PTR [r15+0xd0]
  40be0e:	lea    rsi,[rip+0x33167]        # 43ef7c <_IO_stdin_used@@Base+0x11f7c>
  40be15:	mov    rdx,r15
  40be18:	xor    eax,eax
  40be1a:	call   406170 <fprintf@plt>
  40be1f:	mov    rcx,QWORD PTR [r15+0xd0]
  40be26:	mov    esi,0x7
  40be2b:	mov    edx,0x1
  40be30:	mov    rdi,rbx
  40be33:	call   406220 <fwrite@plt>
  40be38:	lea    rsi,[rip+0x39053]        # 444e92 <_IO_stdin_used@@Base+0x17e92>
  40be3f:	lea    rdx,[rip+0x33155]        # 43ef9b <_IO_stdin_used@@Base+0x11f9b>
  40be46:	mov    rdi,r15
  40be49:	call   407200 <__flatcc_fb_gen_c_includes@@Base>
  40be4e:	mov    rax,QWORD PTR [r15+0xe0]
  40be55:	cmp    DWORD PTR [rax+0xac],0x0
  40be5c:	je     40be78 <__flatcc_fb_gen_c_builder@@Base+0x158>
  40be5e:	mov    rcx,QWORD PTR [r12]
  40be62:	lea    rdi,[rip+0x22698]        # 42e501 <_IO_stdin_used@@Base+0x1501>
  40be69:	mov    esi,0x24
  40be6e:	mov    edx,0x1
  40be73:	call   406220 <fwrite@plt>
  40be78:	mov    rdi,QWORD PTR [r15+0xd0]
  40be7f:	mov    rax,QWORD PTR [r15+0xd8]
  40be86:	cmp    WORD PTR [rax+0x20],0x2
  40be8b:	jne    40beab <__flatcc_fb_gen_c_builder@@Base+0x18b>
  40be8d:	mov    r8d,DWORD PTR [rax+0x18]
  40be91:	mov    r9,QWORD PTR [rax+0x10]
  40be95:	lea    rsi,[rip+0x28706]        # 4345a2 <_IO_stdin_used@@Base+0x75a2>
  40be9c:	mov    rdx,r15
  40be9f:	mov    rcx,r15
  40bea2:	xor    eax,eax
  40bea4:	call   406170 <fprintf@plt>
  40bea9:	jmp    40bebf <__flatcc_fb_gen_c_builder@@Base+0x19f>
  40beab:	lea    rsi,[rip+0x28721]        # 4345d3 <_IO_stdin_used@@Base+0x75d3>
  40beb2:	mov    rdx,r15
  40beb5:	mov    rcx,r15
  40beb8:	xor    eax,eax
  40beba:	call   406170 <fprintf@plt>
  40bebf:	mov    rdi,QWORD PTR [r15+0xd0]
  40bec6:	mov    rax,QWORD PTR [r15+0xd8]
  40becd:	cmp    WORD PTR [rax+0x38],0x2
  40bed2:	mov    QWORD PTR [rsp],r12
  40bed6:	jne    40bef6 <__flatcc_fb_gen_c_builder@@Base+0x1d6>
  40bed8:	mov    r8d,DWORD PTR [rax+0x30]
  40bedc:	mov    r9,QWORD PTR [rax+0x28]
  40bee0:	lea    rsi,[rip+0x28720]        # 434607 <_IO_stdin_used@@Base+0x7607>
  40bee7:	mov    rdx,r15
  40beea:	mov    rcx,r15
  40beed:	xor    eax,eax
  40beef:	call   406170 <fprintf@plt>
  40bef4:	jmp    40bf15 <__flatcc_fb_gen_c_builder@@Base+0x1f5>
  40bef6:	mov    rax,QWORD PTR [r15+0xe0]
  40befd:	mov    r8,QWORD PTR [rax+0x78]
  40bf01:	lea    rsi,[rip+0x2872f]        # 434637 <_IO_stdin_used@@Base+0x7637>
  40bf08:	mov    rdx,r15
  40bf0b:	mov    rcx,r15
  40bf0e:	xor    eax,eax
  40bf10:	call   406170 <fprintf@plt>
  40bf15:	mov    rsi,QWORD PTR [r15+0xd0]
  40bf1c:	mov    edi,0xa
  40bf21:	call   406110 <fputc@plt>
  40bf26:	vxorps xmm0,xmm0,xmm0
  40bf2a:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40bf33:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40bf3c:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40bf45:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40bf4e:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40bf54:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40bf5a:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40bf60:	mov    QWORD PTR [rsp+0x100],0x0
  40bf6c:	mov    rax,QWORD PTR [r15+0xd8]
  40bf73:	mov    rbx,QWORD PTR [rax+0x40]
  40bf77:	test   rbx,rbx
  40bf7a:	mov    QWORD PTR [rsp+0x8],r15
  40bf7f:	je     40c02c <__flatcc_fb_gen_c_builder@@Base+0x30c>
  40bf85:	lea    r14,[rsp+0x20]
  40bf8a:	lea    r15,[rip+0x33015]        # 43efa6 <_IO_stdin_used@@Base+0x11fa6>
  40bf91:	lea    r12,[rip+0x33053]        # 43efeb <_IO_stdin_used@@Base+0x11feb>
  40bf98:	xor    eax,eax
  40bf9a:	mov    r13,QWORD PTR [rsp+0x8]
  40bf9f:	cmp    WORD PTR [rbx+0x10],0x3
  40bfa4:	je     40bfbf <__flatcc_fb_gen_c_builder@@Base+0x29f>
  40bfa6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40bfb0:	mov    rbx,QWORD PTR [rbx]
  40bfb3:	test   rbx,rbx
  40bfb6:	je     40c00f <__flatcc_fb_gen_c_builder@@Base+0x2ef>
  40bfb8:	cmp    WORD PTR [rbx+0x10],0x3
  40bfbd:	jne    40bfb0 <__flatcc_fb_gen_c_builder@@Base+0x290>
  40bfbf:	mov    rdi,QWORD PTR [rbx+0x18]
  40bfc3:	mov    rsi,rbx
  40bfc6:	mov    rdx,r14
  40bfc9:	vzeroupper 
  40bfcc:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40bfd1:	mov    rdi,QWORD PTR [r13+0xd0]
  40bfd8:	mov    rsi,r15
  40bfdb:	mov    rdx,r14
  40bfde:	mov    rcx,r14
  40bfe1:	mov    r8,r14
  40bfe4:	xor    eax,eax
  40bfe6:	call   406170 <fprintf@plt>
  40bfeb:	mov    rdi,QWORD PTR [r13+0xd0]
  40bff2:	mov    rsi,r12
  40bff5:	mov    rdx,r13
  40bff8:	mov    rcx,r13
  40bffb:	mov    r8,r14
  40bffe:	mov    r9,r14
  40c001:	xor    eax,eax
  40c003:	call   406170 <fprintf@plt>
  40c008:	mov    eax,0x1
  40c00d:	jmp    40bfb0 <__flatcc_fb_gen_c_builder@@Base+0x290>
  40c00f:	test   eax,eax
  40c011:	mov    r15,QWORD PTR [rsp+0x8]
  40c016:	je     40c02c <__flatcc_fb_gen_c_builder@@Base+0x30c>
  40c018:	mov    rax,QWORD PTR [rsp]
  40c01c:	mov    rsi,QWORD PTR [rax]
  40c01f:	mov    edi,0xa
  40c024:	vzeroupper 
  40c027:	call   406110 <fputc@plt>
  40c02c:	mov    rax,QWORD PTR [r15+0xd8]
  40c033:	mov    r12,QWORD PTR [rax+0x48]
  40c037:	test   r12,r12
  40c03a:	je     40c50a <__flatcc_fb_gen_c_builder@@Base+0x7ea>
  40c040:	lea    rbx,[rsp+0x20]
  40c045:	jmp    40c39b <__flatcc_fb_gen_c_builder@@Base+0x67b>
  40c04a:	nop    WORD PTR [rax+rax*1+0x0]
  40c050:	mov    r15,QWORD PTR [rsp+0x8]
  40c055:	mov    rsi,QWORD PTR [r15+0xd0]
  40c05c:	mov    edi,0xa
  40c061:	call   406110 <fputc@plt>
  40c066:	mov    rdi,QWORD PTR [r15+0xd0]
  40c06d:	lea    rsi,[rip+0x33077]        # 43f0eb <_IO_stdin_used@@Base+0x120eb>
  40c074:	lea    rbx,[rsp+0x20]
  40c079:	mov    rdx,rbx
  40c07c:	mov    rcx,rbx
  40c07f:	mov    r8,rbx
  40c082:	xor    eax,eax
  40c084:	call   406170 <fprintf@plt>
  40c089:	mov    rdi,r15
  40c08c:	mov    r12,QWORD PTR [rsp+0x10]
  40c091:	mov    rsi,r12
  40c094:	xor    edx,edx
  40c096:	mov    ecx,r14d
  40c099:	xor    r8d,r8d
  40c09c:	call   40dab0 <__flatcc_fb_gen_c_builder@@Base+0x1d90>
  40c0a1:	mov    rcx,QWORD PTR [r15+0xd0]
  40c0a8:	mov    esi,0x4
  40c0ad:	mov    edx,0x1
  40c0b2:	lea    r13,[rip+0x33058]        # 43f111 <_IO_stdin_used@@Base+0x12111>
  40c0b9:	mov    rdi,r13
  40c0bc:	call   406220 <fwrite@plt>
  40c0c1:	mov    rdi,r15
  40c0c4:	mov    rsi,r12
  40c0c7:	mov    edx,r14d
  40c0ca:	xor    ecx,ecx
  40c0cc:	xor    r8d,r8d
  40c0cf:	call   40dde0 <__flatcc_fb_gen_c_builder@@Base+0x20c0>
  40c0d4:	mov    rcx,QWORD PTR [r15+0xd0]
  40c0db:	mov    esi,0xc
  40c0e0:	mov    edx,0x1
  40c0e5:	lea    r13,[rip+0x28dbe]        # 434eaa <_IO_stdin_used@@Base+0x7eaa>
  40c0ec:	mov    rdi,r13
  40c0ef:	call   406220 <fwrite@plt>
  40c0f4:	mov    rdi,QWORD PTR [r15+0xd0]
  40c0fb:	lea    rsi,[rip+0x33014]        # 43f116 <_IO_stdin_used@@Base+0x12116>
  40c102:	mov    rdx,rbx
  40c105:	mov    rcx,rbx
  40c108:	mov    r8,rbx
  40c10b:	mov    r9,rbx
  40c10e:	xor    eax,eax
  40c110:	call   406170 <fprintf@plt>
  40c115:	mov    rcx,QWORD PTR [r15+0xd0]
  40c11c:	mov    esi,0x2
  40c121:	mov    edx,0x1
  40c126:	lea    rax,[rip+0x32fe6]        # 43f113 <_IO_stdin_used@@Base+0x12113>
  40c12d:	mov    rdi,rax
  40c130:	call   406220 <fwrite@plt>
  40c135:	mov    rdi,r15
  40c138:	mov    rsi,r12
  40c13b:	mov    edx,r14d
  40c13e:	xor    ecx,ecx
  40c140:	mov    r8d,0x1
  40c146:	call   40dde0 <__flatcc_fb_gen_c_builder@@Base+0x20c0>
  40c14b:	mov    rcx,QWORD PTR [r15+0xd0]
  40c152:	mov    esi,0xc
  40c157:	mov    edx,0x1
  40c15c:	mov    rdi,r13
  40c15f:	call   406220 <fwrite@plt>
  40c164:	mov    rdi,QWORD PTR [r15+0xd0]
  40c16b:	lea    rsi,[rip+0x32fda]        # 43f14c <_IO_stdin_used@@Base+0x1214c>
  40c172:	mov    rdx,rbx
  40c175:	mov    rcx,rbx
  40c178:	mov    r8,rbx
  40c17b:	xor    eax,eax
  40c17d:	call   406170 <fprintf@plt>
  40c182:	mov    rdi,r15
  40c185:	mov    rsi,r12
  40c188:	xor    edx,edx
  40c18a:	mov    ecx,r14d
  40c18d:	xor    r8d,r8d
  40c190:	call   40dab0 <__flatcc_fb_gen_c_builder@@Base+0x1d90>
  40c195:	mov    rcx,QWORD PTR [r15+0xd0]
  40c19c:	mov    esi,0x4
  40c1a1:	mov    edx,0x1
  40c1a6:	lea    rdi,[rip+0x32f64]        # 43f111 <_IO_stdin_used@@Base+0x12111>
  40c1ad:	call   406220 <fwrite@plt>
  40c1b2:	mov    rdi,r15
  40c1b5:	mov    rsi,r12
  40c1b8:	mov    edx,r14d
  40c1bb:	mov    ecx,0x2
  40c1c0:	xor    r8d,r8d
  40c1c3:	call   40dde0 <__flatcc_fb_gen_c_builder@@Base+0x20c0>
  40c1c8:	mov    rcx,QWORD PTR [r15+0xd0]
  40c1cf:	mov    esi,0xc
  40c1d4:	mov    edx,0x1
  40c1d9:	mov    rdi,r13
  40c1dc:	call   406220 <fwrite@plt>
  40c1e1:	mov    rdi,QWORD PTR [r15+0xd0]
  40c1e8:	lea    rsi,[rip+0x32f89]        # 43f178 <_IO_stdin_used@@Base+0x12178>
  40c1ef:	mov    rdx,rbx
  40c1f2:	mov    rcx,rbx
  40c1f5:	mov    r8,rbx
  40c1f8:	mov    r9,rbx
  40c1fb:	xor    eax,eax
  40c1fd:	call   406170 <fprintf@plt>
  40c202:	mov    rcx,QWORD PTR [r15+0xd0]
  40c209:	mov    esi,0x2
  40c20e:	mov    edx,0x1
  40c213:	lea    rdi,[rip+0x32ef9]        # 43f113 <_IO_stdin_used@@Base+0x12113>
  40c21a:	call   406220 <fwrite@plt>
  40c21f:	mov    rdi,r15
  40c222:	mov    rsi,r12
  40c225:	mov    edx,r14d
  40c228:	mov    ecx,0x2
  40c22d:	mov    r8d,0x1
  40c233:	call   40dde0 <__flatcc_fb_gen_c_builder@@Base+0x20c0>
  40c238:	mov    rcx,QWORD PTR [r15+0xd0]
  40c23f:	mov    esi,0xc
  40c244:	mov    edx,0x1
  40c249:	mov    rdi,r13
  40c24c:	call   406220 <fwrite@plt>
  40c251:	mov    rdi,QWORD PTR [r15+0xd0]
  40c258:	lea    rsi,[rip+0x32f55]        # 43f1b4 <_IO_stdin_used@@Base+0x121b4>
  40c25f:	mov    rdx,rbx
  40c262:	mov    rcx,rbx
  40c265:	mov    r8,rbx
  40c268:	xor    eax,eax
  40c26a:	call   406170 <fprintf@plt>
  40c26f:	mov    rdi,r15
  40c272:	mov    rsi,r12
  40c275:	xor    edx,edx
  40c277:	mov    ecx,r14d
  40c27a:	xor    r8d,r8d
  40c27d:	call   40dab0 <__flatcc_fb_gen_c_builder@@Base+0x1d90>
  40c282:	mov    rcx,QWORD PTR [r15+0xd0]
  40c289:	mov    esi,0x4
  40c28e:	mov    edx,0x1
  40c293:	lea    rdi,[rip+0x32e77]        # 43f111 <_IO_stdin_used@@Base+0x12111>
  40c29a:	call   406220 <fwrite@plt>
  40c29f:	mov    rdi,r15
  40c2a2:	mov    rsi,r12
  40c2a5:	mov    edx,r14d
  40c2a8:	mov    ecx,0x1
  40c2ad:	xor    r8d,r8d
  40c2b0:	call   40dde0 <__flatcc_fb_gen_c_builder@@Base+0x20c0>
  40c2b5:	mov    rcx,QWORD PTR [r15+0xd0]
  40c2bc:	mov    esi,0xc
  40c2c1:	mov    edx,0x1
  40c2c6:	mov    rdi,r13
  40c2c9:	call   406220 <fwrite@plt>
  40c2ce:	mov    rdi,QWORD PTR [r15+0xd0]
  40c2d5:	lea    rsi,[rip+0x32f06]        # 43f1e2 <_IO_stdin_used@@Base+0x121e2>
  40c2dc:	mov    rdx,rbx
  40c2df:	mov    rcx,rbx
  40c2e2:	mov    r8,rbx
  40c2e5:	mov    r9,rbx
  40c2e8:	xor    eax,eax
  40c2ea:	call   406170 <fprintf@plt>
  40c2ef:	mov    rcx,QWORD PTR [r15+0xd0]
  40c2f6:	mov    esi,0x2
  40c2fb:	mov    edx,0x1
  40c300:	lea    rdi,[rip+0x32e0c]        # 43f113 <_IO_stdin_used@@Base+0x12113>
  40c307:	call   406220 <fwrite@plt>
  40c30c:	mov    rdi,r15
  40c30f:	mov    rsi,r12
  40c312:	mov    edx,r14d
  40c315:	mov    ecx,0x1
  40c31a:	mov    r8d,0x1
  40c320:	call   40dde0 <__flatcc_fb_gen_c_builder@@Base+0x20c0>
  40c325:	mov    rcx,QWORD PTR [r15+0xd0]
  40c32c:	mov    esi,0xc
  40c331:	mov    edx,0x1
  40c336:	mov    rdi,r13
  40c339:	call   406220 <fwrite@plt>
  40c33e:	mov    rdi,QWORD PTR [r15+0xd0]
  40c345:	mov    r9,QWORD PTR [r12+0xb8]
  40c34d:	movzx  r10d,WORD PTR [r12+0xb0]
  40c356:	sub    rsp,0x8
  40c35a:	lea    rsi,[rip+0x32ebf]        # 43f220 <_IO_stdin_used@@Base+0x12220>
  40c361:	mov    rdx,r15
  40c364:	mov    rcx,r15
  40c367:	mov    r8,rbx
  40c36a:	xor    eax,eax
  40c36c:	push   rbx
  40c36d:	push   rbx
  40c36e:	push   r10
  40c370:	call   406170 <fprintf@plt>
  40c375:	add    rsp,0x20
  40c379:	mov    rsi,QWORD PTR [r15+0xd0]
  40c380:	mov    edi,0xa
  40c385:	call   406110 <fputc@plt>
  40c38a:	mov    r12,QWORD PTR [r12+0xc0]
  40c392:	test   r12,r12
  40c395:	je     40c503 <__flatcc_fb_gen_c_builder@@Base+0x7e3>
  40c39b:	vxorps xmm0,xmm0,xmm0
  40c39f:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40c3a8:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40c3b1:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40c3ba:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40c3c3:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40c3c9:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40c3cf:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40c3d5:	mov    QWORD PTR [rsp+0x100],0x0
  40c3e1:	cmp    WORD PTR [r12+0x10],0x1
  40c3e8:	jne    40d836 <__flatcc_fb_gen_c_builder@@Base+0x1b16>
  40c3ee:	mov    rdi,QWORD PTR [r12+0x18]
  40c3f3:	mov    rsi,r12
  40c3f6:	mov    rdx,rbx
  40c3f9:	vzeroupper 
  40c3fc:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40c401:	mov    rdi,r12
  40c404:	call   40da60 <__flatcc_fb_gen_c_builder@@Base+0x1d40>
  40c409:	mov    r14d,eax
  40c40c:	mov    rdi,QWORD PTR [r15+0xd0]
  40c413:	lea    rsi,[rip+0x32c9e]        # 43f0b8 <_IO_stdin_used@@Base+0x120b8>
  40c41a:	mov    rdx,rbx
  40c41d:	xor    eax,eax
  40c41f:	call   406170 <fprintf@plt>
  40c424:	mov    rdi,r15
  40c427:	mov    rsi,r12
  40c42a:	xor    edx,edx
  40c42c:	mov    ecx,r14d
  40c42f:	mov    r8d,0x1
  40c435:	call   40dab0 <__flatcc_fb_gen_c_builder@@Base+0x1d90>
  40c43a:	mov    rdi,QWORD PTR [r15+0xd0]
  40c441:	lea    rsi,[rip+0x32c8a]        # 43f0d2 <_IO_stdin_used@@Base+0x120d2>
  40c448:	mov    rdx,rbx
  40c44b:	xor    eax,eax
  40c44d:	call   406170 <fprintf@plt>
  40c452:	mov    QWORD PTR [rsp+0x10],r12
  40c457:	mov    rdi,r12
  40c45a:	call   40da60 <__flatcc_fb_gen_c_builder@@Base+0x1d40>
  40c45f:	test   eax,eax
  40c461:	jle    40c050 <__flatcc_fb_gen_c_builder@@Base+0x330>
  40c467:	mov    r15d,eax
  40c46a:	xor    r12d,r12d
  40c46d:	mov    r13d,r14d
  40c470:	jmp    40c4be <__flatcc_fb_gen_c_builder@@Base+0x79e>
  40c472:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c47c:	nop    DWORD PTR [rax+0x0]
  40c480:	mov    esi,0x2
  40c485:	mov    edx,0x1
  40c48a:	lea    rdi,[rip+0x3880b]        # 444c9c <_IO_stdin_used@@Base+0x17c9c>
  40c491:	call   406220 <fwrite@plt>
  40c496:	mov    rdi,QWORD PTR [rbx]
  40c499:	lea    ebx,[r12+0x1]
  40c49e:	lea    rsi,[rip+0x32f15]        # 43f3ba <_IO_stdin_used@@Base+0x123ba>
  40c4a5:	mov    edx,r12d
  40c4a8:	xor    eax,eax
  40c4aa:	call   406170 <fprintf@plt>
  40c4af:	dec    r13d
  40c4b2:	mov    r12d,ebx
  40c4b5:	cmp    r15d,ebx
  40c4b8:	je     40c050 <__flatcc_fb_gen_c_builder@@Base+0x330>
  40c4be:	test   r14d,r14d
  40c4c1:	mov    rbx,QWORD PTR [rsp]
  40c4c5:	je     40c496 <__flatcc_fb_gen_c_builder@@Base+0x776>
  40c4c7:	test   r12d,r12d
  40c4ca:	je     40c4e0 <__flatcc_fb_gen_c_builder@@Base+0x7c0>
  40c4cc:	mov    rcx,QWORD PTR [rbx]
  40c4cf:	test   r12b,0x3
  40c4d3:	jne    40c480 <__flatcc_fb_gen_c_builder@@Base+0x760>
  40c4d5:	cmp    r13d,0x2
  40c4d9:	jg     40c4e9 <__flatcc_fb_gen_c_builder@@Base+0x7c9>
  40c4db:	jmp    40c480 <__flatcc_fb_gen_c_builder@@Base+0x760>
  40c4dd:	nop    DWORD PTR [rax]
  40c4e0:	mov    rcx,QWORD PTR [rbx]
  40c4e3:	cmp    r14d,0x5
  40c4e7:	jl     40c480 <__flatcc_fb_gen_c_builder@@Base+0x760>
  40c4e9:	mov    rdi,rcx
  40c4ec:	lea    rsi,[rip+0x32e09]        # 43f2fc <_IO_stdin_used@@Base+0x122fc>
  40c4f3:	lea    rdx,[rip+0x2376e]        # 42fc68 <_IO_stdin_used@@Base+0x2c68>
  40c4fa:	xor    eax,eax
  40c4fc:	call   406170 <fprintf@plt>
  40c501:	jmp    40c496 <__flatcc_fb_gen_c_builder@@Base+0x776>
  40c503:	mov    rax,QWORD PTR [r15+0xd8]
  40c50a:	vxorps xmm0,xmm0,xmm0
  40c50e:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40c517:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40c520:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40c529:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40c532:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40c538:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40c53e:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40c544:	mov    QWORD PTR [rsp+0x100],0x0
  40c550:	mov    rbx,QWORD PTR [rax+0x40]
  40c554:	test   rbx,rbx
  40c557:	je     40c5d4 <__flatcc_fb_gen_c_builder@@Base+0x8b4>
  40c559:	lea    r14,[rsp+0x20]
  40c55e:	lea    r15,[rip+0x32f61]        # 43f4c6 <_IO_stdin_used@@Base+0x124c6>
  40c565:	xor    eax,eax
  40c567:	cmp    WORD PTR [rbx+0x10],0x4
  40c56c:	je     40c57f <__flatcc_fb_gen_c_builder@@Base+0x85f>
  40c56e:	xchg   ax,ax
  40c570:	mov    rbx,QWORD PTR [rbx]
  40c573:	test   rbx,rbx
  40c576:	je     40c5b7 <__flatcc_fb_gen_c_builder@@Base+0x897>
  40c578:	cmp    WORD PTR [rbx+0x10],0x4
  40c57d:	jne    40c570 <__flatcc_fb_gen_c_builder@@Base+0x850>
  40c57f:	mov    rdi,QWORD PTR [rbx+0x18]
  40c583:	mov    rsi,rbx
  40c586:	mov    rdx,r14
  40c589:	vzeroupper 
  40c58c:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40c591:	mov    rdx,QWORD PTR [rsp+0x8]
  40c596:	mov    rdi,QWORD PTR [rdx+0xd0]
  40c59d:	mov    rsi,r15
  40c5a0:	mov    rcx,r14
  40c5a3:	mov    r8,rdx
  40c5a6:	mov    r9,r14
  40c5a9:	xor    eax,eax
  40c5ab:	call   406170 <fprintf@plt>
  40c5b0:	mov    eax,0x1
  40c5b5:	jmp    40c570 <__flatcc_fb_gen_c_builder@@Base+0x850>
  40c5b7:	test   eax,eax
  40c5b9:	mov    r15,QWORD PTR [rsp+0x8]
  40c5be:	je     40c5d4 <__flatcc_fb_gen_c_builder@@Base+0x8b4>
  40c5c0:	mov    rax,QWORD PTR [rsp]
  40c5c4:	mov    rsi,QWORD PTR [rax]
  40c5c7:	mov    edi,0xa
  40c5cc:	vzeroupper 
  40c5cf:	call   406110 <fputc@plt>
  40c5d4:	mov    rax,QWORD PTR [r15+0xd8]
  40c5db:	mov    r14,QWORD PTR [rax+0x40]
  40c5df:	test   r14,r14
  40c5e2:	je     40d735 <__flatcc_fb_gen_c_builder@@Base+0x1a15>
  40c5e8:	lea    r13,[rip+0x32f59]        # 43f548 <_IO_stdin_used@@Base+0x12548>
  40c5ef:	mov    DWORD PTR [rsp+0x18],0x0
  40c5f7:	cmp    WORD PTR [r14+0x10],0x0
  40c5fd:	jne    40c6af <__flatcc_fb_gen_c_builder@@Base+0x98f>
  40c603:	jmp    40c6c3 <__flatcc_fb_gen_c_builder@@Base+0x9a3>
  40c608:	mov    rax,QWORD PTR [rsp]
  40c60c:	mov    rcx,QWORD PTR [rax]
  40c60f:	mov    esi,0x6
  40c614:	mov    edx,0x1
  40c619:	lea    rdi,[rip+0x32f2c]        # 43f54c <_IO_stdin_used@@Base+0x1254c>
  40c620:	call   406220 <fwrite@plt>
  40c625:	vxorps xmm0,xmm0,xmm0
  40c629:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40c632:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40c63b:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40c644:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40c64d:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40c653:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40c659:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40c65f:	mov    QWORD PTR [rsp+0x100],0x0
  40c66b:	mov    rdi,QWORD PTR [r14+0x18]
  40c66f:	mov    rsi,r14
  40c672:	lea    rbx,[rsp+0x20]
  40c677:	mov    rdx,rbx
  40c67a:	vzeroupper 
  40c67d:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40c682:	mov    rdi,QWORD PTR [r15+0xd0]
  40c689:	mov    r9,QWORD PTR [r14+0xa8]
  40c690:	lea    rsi,[rip+0x32ebc]        # 43f553 <_IO_stdin_used@@Base+0x12553>
  40c697:	mov    rdx,r15
  40c69a:	mov    rcx,r15
  40c69d:	mov    r8,rbx
  40c6a0:	xor    eax,eax
  40c6a2:	call   406170 <fprintf@plt>
  40c6a7:	mov    DWORD PTR [rsp+0x18],0x1
  40c6af:	mov    r14,QWORD PTR [r14]
  40c6b2:	test   r14,r14
  40c6b5:	je     40c856 <__flatcc_fb_gen_c_builder@@Base+0xb36>
  40c6bb:	cmp    WORD PTR [r14+0x10],0x0
  40c6c1:	jne    40c6af <__flatcc_fb_gen_c_builder@@Base+0x98f>
  40c6c3:	vxorps xmm0,xmm0,xmm0
  40c6c7:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40c6d0:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40c6d9:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40c6e2:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40c6eb:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40c6f1:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40c6f7:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40c6fd:	mov    QWORD PTR [rsp+0x100],0x0
  40c709:	mov    rax,QWORD PTR [r14+0x28]
  40c70d:	xor    r12d,r12d
  40c710:	test   rax,rax
  40c713:	je     40c736 <__flatcc_fb_gen_c_builder@@Base+0xa16>
  40c715:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c71f:	nop
  40c720:	mov    ecx,DWORD PTR [rax+0x70]
  40c723:	shr    ecx,0x2
  40c726:	not    ecx
  40c728:	and    ecx,0x1
  40c72b:	add    r12d,ecx
  40c72e:	mov    rax,QWORD PTR [rax]
  40c731:	test   rax,rax
  40c734:	jne    40c720 <__flatcc_fb_gen_c_builder@@Base+0xa00>
  40c736:	mov    rdi,QWORD PTR [r14+0x18]
  40c73a:	mov    rsi,r14
  40c73d:	lea    rbx,[rsp+0x20]
  40c742:	mov    rdx,rbx
  40c745:	vzeroupper 
  40c748:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40c74d:	mov    rdi,QWORD PTR [r15+0xd0]
  40c754:	lea    rsi,[rip+0x32dc0]        # 43f51b <_IO_stdin_used@@Base+0x1251b>
  40c75b:	mov    rdx,r15
  40c75e:	mov    rcx,rbx
  40c761:	xor    eax,eax
  40c763:	call   406170 <fprintf@plt>
  40c768:	mov    rbx,QWORD PTR [r14+0x28]
  40c76c:	test   rbx,rbx
  40c76f:	je     40c608 <__flatcc_fb_gen_c_builder@@Base+0x8e8>
  40c775:	xor    r15d,r15d
  40c778:	jmp    40c7ad <__flatcc_fb_gen_c_builder@@Base+0xa8d>
  40c77a:	mov    rax,QWORD PTR [rsp]
  40c77e:	mov    rsi,QWORD PTR [rax]
  40c781:	mov    edi,0x20
  40c786:	call   406110 <fputc@plt>
  40c78b:	mov    rax,QWORD PTR [rsp]
  40c78f:	mov    rdi,QWORD PTR [rax]
  40c792:	mov    edx,DWORD PTR [rbx+0x88]
  40c798:	mov    rsi,r13
  40c79b:	xor    eax,eax
  40c79d:	call   406170 <fprintf@plt>
  40c7a2:	inc    r15d
  40c7a5:	mov    rbx,QWORD PTR [rbx]
  40c7a8:	test   rbx,rbx
  40c7ab:	je     40c820 <__flatcc_fb_gen_c_builder@@Base+0xb00>
  40c7ad:	movzx  eax,WORD PTR [rbx+0x70]
  40c7b1:	and    eax,0x104
  40c7b6:	cmp    eax,0x100
  40c7bb:	jne    40c7a5 <__flatcc_fb_gen_c_builder@@Base+0xa85>
  40c7bd:	test   r15d,r15d
  40c7c0:	jle    40c77a <__flatcc_fb_gen_c_builder@@Base+0xa5a>
  40c7c2:	test   r12d,r12d
  40c7c5:	je     40c78b <__flatcc_fb_gen_c_builder@@Base+0xa6b>
  40c7c7:	mov    rax,QWORD PTR [rsp]
  40c7cb:	mov    rcx,QWORD PTR [rax]
  40c7ce:	test   r15b,0x3
  40c7d2:	jne    40c7f9 <__flatcc_fb_gen_c_builder@@Base+0xad9>
  40c7d4:	mov    eax,r12d
  40c7d7:	sub    eax,r15d
  40c7da:	cmp    eax,0x2
  40c7dd:	jle    40c7f9 <__flatcc_fb_gen_c_builder@@Base+0xad9>
  40c7df:	mov    rdi,rcx
  40c7e2:	lea    rsi,[rip+0x32b13]        # 43f2fc <_IO_stdin_used@@Base+0x122fc>
  40c7e9:	lea    rdx,[rip+0x21d5e]        # 42e54e <_IO_stdin_used@@Base+0x154e>
  40c7f0:	xor    eax,eax
  40c7f2:	call   406170 <fprintf@plt>
  40c7f7:	jmp    40c78b <__flatcc_fb_gen_c_builder@@Base+0xa6b>
  40c7f9:	mov    esi,0x2
  40c7fe:	mov    edx,0x1
  40c803:	lea    rdi,[rip+0x38492]        # 444c9c <_IO_stdin_used@@Base+0x17c9c>
  40c80a:	call   406220 <fwrite@plt>
  40c80f:	jmp    40c78b <__flatcc_fb_gen_c_builder@@Base+0xa6b>
  40c814:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40c81e:	xchg   ax,ax
  40c820:	mov    rax,QWORD PTR [rsp]
  40c824:	mov    rcx,QWORD PTR [rax]
  40c827:	test   r15d,r15d
  40c82a:	jle    40c84c <__flatcc_fb_gen_c_builder@@Base+0xb2c>
  40c82c:	mov    esi,0x7
  40c831:	mov    edx,0x1
  40c836:	lea    rdi,[rip+0x32d0e]        # 43f54b <_IO_stdin_used@@Base+0x1254b>
  40c83d:	call   406220 <fwrite@plt>
  40c842:	mov    r15,QWORD PTR [rsp+0x8]
  40c847:	jmp    40c625 <__flatcc_fb_gen_c_builder@@Base+0x905>
  40c84c:	mov    r15,QWORD PTR [rsp+0x8]
  40c851:	jmp    40c60f <__flatcc_fb_gen_c_builder@@Base+0x8ef>
  40c856:	mov    rax,QWORD PTR [r15+0xd8]
  40c85d:	mov    r15,QWORD PTR [rax+0x40]
  40c861:	test   r15,r15
  40c864:	je     40cd19 <__flatcc_fb_gen_c_builder@@Base+0xff9>
  40c86a:	lea    r13,[rsp+0x120]
  40c872:	cmp    WORD PTR [r15+0x10],0x0
  40c878:	jne    40c8b7 <__flatcc_fb_gen_c_builder@@Base+0xb97>
  40c87a:	jmp    40c8cb <__flatcc_fb_gen_c_builder@@Base+0xbab>
  40c87c:	nop    DWORD PTR [rax+0x0]
  40c880:	mov    rbx,QWORD PTR [rsp+0x8]
  40c885:	mov    rsi,QWORD PTR [rbx+0xd0]
  40c88c:	mov    edi,0xa
  40c891:	call   406110 <fputc@plt>
  40c896:	mov    rdi,QWORD PTR [rbx+0xd0]
  40c89d:	lea    rsi,[rip+0x32cce]        # 43f572 <_IO_stdin_used@@Base+0x12572>
  40c8a4:	mov    rdx,r13
  40c8a7:	mov    rcx,r13
  40c8aa:	mov    r8,rbx
  40c8ad:	mov    r9,r13
  40c8b0:	xor    eax,eax
  40c8b2:	call   406170 <fprintf@plt>
  40c8b7:	mov    r15,QWORD PTR [r15]
  40c8ba:	test   r15,r15
  40c8bd:	je     40cd19 <__flatcc_fb_gen_c_builder@@Base+0xff9>
  40c8c3:	cmp    WORD PTR [r15+0x10],0x0
  40c8c9:	jne    40c8b7 <__flatcc_fb_gen_c_builder@@Base+0xb97>
  40c8cb:	vxorps xmm0,xmm0,xmm0
  40c8cf:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  40c8d8:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  40c8e1:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  40c8ea:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  40c8f3:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40c8fc:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  40c905:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  40c90e:	mov    QWORD PTR [rsp+0x200],0x0
  40c91a:	mov    rdi,QWORD PTR [r15+0x18]
  40c91e:	mov    rsi,r15
  40c921:	mov    rdx,r13
  40c924:	vzeroupper 
  40c927:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40c92c:	mov    rax,QWORD PTR [r15+0x28]
  40c930:	xor    r12d,r12d
  40c933:	test   rax,rax
  40c936:	je     40c958 <__flatcc_fb_gen_c_builder@@Base+0xc38>
  40c938:	mov    rbx,QWORD PTR [rsp]
  40c93c:	nop    DWORD PTR [rax+0x0]
  40c940:	mov    ecx,DWORD PTR [rax+0x70]
  40c943:	shr    ecx,0x2
  40c946:	not    ecx
  40c948:	and    ecx,0x1
  40c94b:	add    r12d,ecx
  40c94e:	mov    rax,QWORD PTR [rax]
  40c951:	test   rax,rax
  40c954:	jne    40c940 <__flatcc_fb_gen_c_builder@@Base+0xc20>
  40c956:	jmp    40c95c <__flatcc_fb_gen_c_builder@@Base+0xc3c>
  40c958:	mov    rbx,QWORD PTR [rsp]
  40c95c:	mov    rdi,QWORD PTR [rbx]
  40c95f:	lea    rsi,[rip+0x32752]        # 43f0b8 <_IO_stdin_used@@Base+0x120b8>
  40c966:	mov    rdx,r13
  40c969:	xor    eax,eax
  40c96b:	call   406170 <fprintf@plt>
  40c970:	vxorps xmm0,xmm0,xmm0
  40c974:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40c97d:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40c986:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40c98f:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40c998:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40c99e:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40c9a4:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40c9aa:	mov    QWORD PTR [rsp+0x100],0x0
  40c9b6:	mov    r13,QWORD PTR [r15+0x28]
  40c9ba:	test   r13,r13
  40c9bd:	je     40cc50 <__flatcc_fb_gen_c_builder@@Base+0xf30>
  40c9c3:	xor    r14d,r14d
  40c9c6:	mov    QWORD PTR [rsp+0x10],r15
  40c9cb:	test   BYTE PTR [r13+0x70],0x4
  40c9d0:	jne    40c9f8 <__flatcc_fb_gen_c_builder@@Base+0xcd8>
  40c9d2:	jmp    40ca0c <__flatcc_fb_gen_c_builder@@Base+0xcec>
  40c9d4:	mov    rdx,QWORD PTR [rsp+0x8]
  40c9d9:	mov    rdi,QWORD PTR [rdx+0xd0]
  40c9e0:	mov    rcx,QWORD PTR [r13+0x88]
  40c9e7:	lea    rsi,[rip+0x32ce3]        # 43f6d1 <_IO_stdin_used@@Base+0x126d1>
  40c9ee:	xor    eax,eax
  40c9f0:	vzeroupper 
  40c9f3:	call   406170 <fprintf@plt>
  40c9f8:	mov    r13,QWORD PTR [r13+0x0]
  40c9fc:	test   r13,r13
  40c9ff:	je     40cc50 <__flatcc_fb_gen_c_builder@@Base+0xf30>
  40ca05:	test   BYTE PTR [r13+0x70],0x4
  40ca0a:	jne    40c9f8 <__flatcc_fb_gen_c_builder@@Base+0xcd8>
  40ca0c:	test   r12d,r12d
  40ca0f:	je     40ca69 <__flatcc_fb_gen_c_builder@@Base+0xd49>
  40ca11:	test   r14d,r14d
  40ca14:	je     40ca47 <__flatcc_fb_gen_c_builder@@Base+0xd27>
  40ca16:	mov    rcx,QWORD PTR [rbx]
  40ca19:	test   r14b,0x3
  40ca1d:	jne    40ca50 <__flatcc_fb_gen_c_builder@@Base+0xd30>
  40ca1f:	mov    eax,r12d
  40ca22:	sub    eax,r14d
  40ca25:	cmp    eax,0x2
  40ca28:	jle    40ca50 <__flatcc_fb_gen_c_builder@@Base+0xd30>
  40ca2a:	mov    rdi,rcx
  40ca2d:	lea    rsi,[rip+0x328c8]        # 43f2fc <_IO_stdin_used@@Base+0x122fc>
  40ca34:	lea    rdx,[rip+0x2322d]        # 42fc68 <_IO_stdin_used@@Base+0x2c68>
  40ca3b:	xor    eax,eax
  40ca3d:	vzeroupper 
  40ca40:	call   406170 <fprintf@plt>
  40ca45:	jmp    40ca69 <__flatcc_fb_gen_c_builder@@Base+0xd49>
  40ca47:	mov    rcx,QWORD PTR [rbx]
  40ca4a:	cmp    r12d,0x5
  40ca4e:	jge    40ca2a <__flatcc_fb_gen_c_builder@@Base+0xd0a>
  40ca50:	mov    esi,0x2
  40ca55:	mov    edx,0x1
  40ca5a:	lea    rdi,[rip+0x3823b]        # 444c9c <_IO_stdin_used@@Base+0x17c9c>
  40ca61:	vzeroupper 
  40ca64:	call   406220 <fwrite@plt>
  40ca69:	mov    eax,DWORD PTR [r13+0x28]
  40ca6d:	add    eax,0xfffffff9
  40ca70:	cmp    ax,0x8
  40ca74:	ja     40d7a1 <__flatcc_fb_gen_c_builder@@Base+0x1a81>
  40ca7a:	inc    r14d
  40ca7d:	movzx  eax,ax
  40ca80:	lea    rcx,[rip+0x29cbd]        # 436744 <_IO_stdin_used@@Base+0x9744>
  40ca87:	movsxd rax,DWORD PTR [rcx+rax*4]
  40ca8b:	add    rax,rcx
  40ca8e:	jmp    rax
  40ca90:	mov    eax,DWORD PTR [r13+0x18]
  40ca94:	dec    eax
  40ca96:	cmp    eax,0xb
  40ca99:	jae    40d97f <__flatcc_fb_gen_c_builder@@Base+0x1c5f>
  40ca9f:	cdqe   
  40caa1:	lea    rcx,[rip+0x43160]        # 44fc08 <fb_value_set_deleted@@Base+0x6188>
  40caa8:	mov    rcx,QWORD PTR [rcx+rax*8]
  40caac:	mov    rdx,QWORD PTR [rsp+0x8]
  40cab1:	mov    rdi,QWORD PTR [rdx+0xd0]
  40cab8:	mov    r8,QWORD PTR [r13+0x88]
  40cabf:	lea    rsi,[rip+0x32bf6]        # 43f6bc <_IO_stdin_used@@Base+0x126bc>
  40cac6:	jmp    40cb0d <__flatcc_fb_gen_c_builder@@Base+0xded>
  40cac8:	mov    ecx,DWORD PTR [r13+0x18]
  40cacc:	lea    eax,[rcx-0x1]
  40cacf:	cmp    eax,0xb
  40cad2:	jae    40d8a1 <__flatcc_fb_gen_c_builder@@Base+0x1b81>
  40cad8:	cmp    ecx,0x5
  40cadb:	lea    rdx,[rip+0x21a6d]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  40cae2:	mov    rsi,QWORD PTR [rsp+0x8]
  40cae7:	cmove  rdx,rsi
  40caeb:	cdqe   
  40caed:	lea    rcx,[rip+0x430bc]        # 44fbb0 <fb_value_set_deleted@@Base+0x6130>
  40caf4:	mov    rcx,QWORD PTR [rcx+rax*8]
  40caf8:	mov    rdi,QWORD PTR [rsi+0xd0]
  40caff:	mov    r8,QWORD PTR [r13+0x88]
  40cb06:	lea    rsi,[rip+0x32ba4]        # 43f6b1 <_IO_stdin_used@@Base+0x126b1>
  40cb0d:	xor    eax,eax
  40cb0f:	vzeroupper 
  40cb12:	call   406170 <fprintf@plt>
  40cb17:	jmp    40c9f8 <__flatcc_fb_gen_c_builder@@Base+0xcd8>
  40cb1c:	mov    rdx,QWORD PTR [rsp+0x8]
  40cb21:	mov    rdi,QWORD PTR [rdx+0xd0]
  40cb28:	mov    rcx,QWORD PTR [r13+0x88]
  40cb2f:	lea    rsi,[rip+0x32bb0]        # 43f6e6 <_IO_stdin_used@@Base+0x126e6>
  40cb36:	jmp    40c9ee <__flatcc_fb_gen_c_builder@@Base+0xcce>
  40cb3b:	mov    r15,rbx
  40cb3e:	mov    rsi,QWORD PTR [r13+0x18]
  40cb42:	mov    rdi,QWORD PTR [rsi+0x18]
  40cb46:	lea    rbx,[rsp+0x20]
  40cb4b:	mov    rdx,rbx
  40cb4e:	vzeroupper 
  40cb51:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40cb56:	mov    rax,QWORD PTR [r13+0x18]
  40cb5a:	movzx  eax,WORD PTR [rax+0x10]
  40cb5e:	cmp    ax,0x2
  40cb62:	jb     40cb79 <__flatcc_fb_gen_c_builder@@Base+0xe59>
  40cb64:	cmp    ax,0x4
  40cb68:	je     40cbdc <__flatcc_fb_gen_c_builder@@Base+0xebc>
  40cb6a:	cmp    ax,0x3
  40cb6e:	lea    rbx,[rsp+0x20]
  40cb73:	jne    40d9cb <__flatcc_fb_gen_c_builder@@Base+0x1cab>
  40cb79:	mov    rdi,QWORD PTR [r15]
  40cb7c:	mov    rcx,QWORD PTR [r13+0x88]
  40cb83:	lea    rsi,[rip+0x32b34]        # 43f6be <_IO_stdin_used@@Base+0x126be>
  40cb8a:	mov    rdx,rbx
  40cb8d:	mov    rbx,r15
  40cb90:	jmp    40cbf5 <__flatcc_fb_gen_c_builder@@Base+0xed5>
  40cb92:	mov    rsi,QWORD PTR [r13+0x18]
  40cb96:	mov    rdi,QWORD PTR [rsi+0x18]
  40cb9a:	lea    rdx,[rsp+0x20]
  40cb9f:	vzeroupper 
  40cba2:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40cba7:	mov    rax,QWORD PTR [r13+0x18]
  40cbab:	movzx  eax,WORD PTR [rax+0x10]
  40cbaf:	cmp    rax,0x4
  40cbb3:	ja     40d858 <__flatcc_fb_gen_c_builder@@Base+0x1b38>
  40cbb9:	lea    rcx,[rip+0x29ba8]        # 436768 <_IO_stdin_used@@Base+0x9768>
  40cbc0:	movsxd rax,DWORD PTR [rcx+rax*4]
  40cbc4:	add    rax,rcx
  40cbc7:	jmp    rax
  40cbc9:	mov    rdi,QWORD PTR [rbx]
  40cbcc:	mov    rcx,QWORD PTR [r13+0x88]
  40cbd3:	lea    rsi,[rip+0x329f8]        # 43f5d2 <_IO_stdin_used@@Base+0x125d2>
  40cbda:	jmp    40cc3d <__flatcc_fb_gen_c_builder@@Base+0xf1d>
  40cbdc:	mov    rbx,r15
  40cbdf:	mov    rdi,QWORD PTR [r15]
  40cbe2:	mov    rcx,QWORD PTR [r13+0x88]
  40cbe9:	lea    rsi,[rip+0x32a7c]        # 43f66c <_IO_stdin_used@@Base+0x1266c>
  40cbf0:	lea    rdx,[rsp+0x20]
  40cbf5:	xor    eax,eax
  40cbf7:	call   406170 <fprintf@plt>
  40cbfc:	mov    r15,QWORD PTR [rsp+0x10]
  40cc01:	jmp    40c9f8 <__flatcc_fb_gen_c_builder@@Base+0xcd8>
  40cc06:	mov    rdi,QWORD PTR [rbx]
  40cc09:	mov    rcx,QWORD PTR [r13+0x88]
  40cc10:	lea    rsi,[rip+0x329ca]        # 43f5e1 <_IO_stdin_used@@Base+0x125e1>
  40cc17:	jmp    40cc3d <__flatcc_fb_gen_c_builder@@Base+0xf1d>
  40cc19:	mov    rdi,QWORD PTR [rbx]
  40cc1c:	mov    rcx,QWORD PTR [r13+0x88]
  40cc23:	lea    rsi,[rip+0x3298c]        # 43f5b6 <_IO_stdin_used@@Base+0x125b6>
  40cc2a:	jmp    40cc3d <__flatcc_fb_gen_c_builder@@Base+0xf1d>
  40cc2c:	mov    rdi,QWORD PTR [rbx]
  40cc2f:	mov    rcx,QWORD PTR [r13+0x88]
  40cc36:	lea    rsi,[rip+0x32985]        # 43f5c2 <_IO_stdin_used@@Base+0x125c2>
  40cc3d:	lea    rdx,[rsp+0x20]
  40cc42:	jmp    40c9ee <__flatcc_fb_gen_c_builder@@Base+0xcce>
  40cc47:	nop    WORD PTR [rax+rax*1+0x0]
  40cc50:	mov    rdi,QWORD PTR [rbx]
  40cc53:	lea    rsi,[rip+0x32478]        # 43f0d2 <_IO_stdin_used@@Base+0x120d2>
  40cc5a:	lea    r13,[rsp+0x120]
  40cc62:	mov    rdx,r13
  40cc65:	xor    eax,eax
  40cc67:	vzeroupper 
  40cc6a:	call   406170 <fprintf@plt>
  40cc6f:	mov    rbx,QWORD PTR [r15+0x28]
  40cc73:	test   rbx,rbx
  40cc76:	je     40c880 <__flatcc_fb_gen_c_builder@@Base+0xb60>
  40cc7c:	xor    r14d,r14d
  40cc7f:	test   BYTE PTR [rbx+0x70],0x4
  40cc83:	jne    40ccbc <__flatcc_fb_gen_c_builder@@Base+0xf9c>
  40cc85:	jmp    40ccce <__flatcc_fb_gen_c_builder@@Base+0xfae>
  40cc87:	mov    esi,0x2
  40cc8c:	mov    edx,0x1
  40cc91:	lea    rdi,[rip+0x38004]        # 444c9c <_IO_stdin_used@@Base+0x17c9c>
  40cc98:	call   406220 <fwrite@plt>
  40cc9d:	mov    rax,QWORD PTR [rsp]
  40cca1:	mov    rdi,QWORD PTR [rax]
  40cca4:	mov    rdx,QWORD PTR [rbx+0x88]
  40ccab:	lea    rsi,[rip+0x32a04]        # 43f6b6 <_IO_stdin_used@@Base+0x126b6>
  40ccb2:	xor    eax,eax
  40ccb4:	call   406170 <fprintf@plt>
  40ccb9:	inc    r14d
  40ccbc:	mov    rbx,QWORD PTR [rbx]
  40ccbf:	test   rbx,rbx
  40ccc2:	je     40c880 <__flatcc_fb_gen_c_builder@@Base+0xb60>
  40ccc8:	test   BYTE PTR [rbx+0x70],0x4
  40cccc:	jne    40ccbc <__flatcc_fb_gen_c_builder@@Base+0xf9c>
  40ccce:	test   r12d,r12d
  40ccd1:	je     40cc9d <__flatcc_fb_gen_c_builder@@Base+0xf7d>
  40ccd3:	test   r14d,r14d
  40ccd6:	je     40ccf2 <__flatcc_fb_gen_c_builder@@Base+0xfd2>
  40ccd8:	mov    rax,QWORD PTR [rsp]
  40ccdc:	mov    rcx,QWORD PTR [rax]
  40ccdf:	test   r14b,0x3
  40cce3:	jne    40cc87 <__flatcc_fb_gen_c_builder@@Base+0xf67>
  40cce5:	mov    eax,r12d
  40cce8:	sub    eax,r14d
  40cceb:	cmp    eax,0x2
  40ccee:	jg     40ccff <__flatcc_fb_gen_c_builder@@Base+0xfdf>
  40ccf0:	jmp    40cc87 <__flatcc_fb_gen_c_builder@@Base+0xf67>
  40ccf2:	mov    rax,QWORD PTR [rsp]
  40ccf6:	mov    rcx,QWORD PTR [rax]
  40ccf9:	cmp    r12d,0x5
  40ccfd:	jl     40cc87 <__flatcc_fb_gen_c_builder@@Base+0xf67>
  40ccff:	mov    rdi,rcx
  40cd02:	lea    rsi,[rip+0x325f3]        # 43f2fc <_IO_stdin_used@@Base+0x122fc>
  40cd09:	lea    rdx,[rip+0x22f58]        # 42fc68 <_IO_stdin_used@@Base+0x2c68>
  40cd10:	xor    eax,eax
  40cd12:	call   406170 <fprintf@plt>
  40cd17:	jmp    40cc9d <__flatcc_fb_gen_c_builder@@Base+0xf7d>
  40cd19:	cmp    DWORD PTR [rsp+0x18],0x0
  40cd1e:	mov    r15,QWORD PTR [rsp+0x8]
  40cd23:	je     40d735 <__flatcc_fb_gen_c_builder@@Base+0x1a15>
  40cd29:	mov    rsi,QWORD PTR [r15+0xd0]
  40cd30:	mov    edi,0xa
  40cd35:	vzeroupper 
  40cd38:	call   406110 <fputc@plt>
  40cd3d:	mov    rdi,r15
  40cd40:	call   40e3a0 <__flatcc_fb_gen_c_builder@@Base+0x2680>
  40cd45:	mov    rax,QWORD PTR [r15+0xd8]
  40cd4c:	mov    r12,QWORD PTR [rax+0x40]
  40cd50:	test   r12,r12
  40cd53:	mov    rbx,QWORD PTR [rsp]
  40cd57:	jne    40ce32 <__flatcc_fb_gen_c_builder@@Base+0x1112>
  40cd5d:	jmp    40d744 <__flatcc_fb_gen_c_builder@@Base+0x1a24>
  40cd62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40cd6c:	nop    DWORD PTR [rax+0x0]
  40cd70:	mov    rdi,QWORD PTR [r15+0xd0]
  40cd77:	lea    rsi,[rip+0x331c8]        # 43ff46 <_IO_stdin_used@@Base+0x12f46>
  40cd7e:	lea    rbx,[rsp+0x20]
  40cd83:	mov    rdx,rbx
  40cd86:	xor    eax,eax
  40cd88:	call   406170 <fprintf@plt>
  40cd8d:	vxorps xmm0,xmm0,xmm0
  40cd91:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40cd9a:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40cda3:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40cdac:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40cdb5:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40cdbb:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40cdc1:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40cdc7:	mov    QWORD PTR [rsp+0x100],0x0
  40cdd3:	mov    rdi,QWORD PTR [r12+0x18]
  40cdd8:	mov    rsi,r12
  40cddb:	mov    rdx,rbx
  40cdde:	vzeroupper 
  40cde1:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40cde6:	mov    rdi,QWORD PTR [r15+0xd0]
  40cded:	sub    rsp,0x8
  40cdf1:	lea    rsi,[rip+0x33183]        # 43ff7b <_IO_stdin_used@@Base+0x12f7b>
  40cdf8:	mov    rdx,r15
  40cdfb:	mov    rcx,r15
  40cdfe:	mov    r8,rbx
  40ce01:	mov    r9,rbx
  40ce04:	xor    eax,eax
  40ce06:	push   rbx
  40ce07:	call   406170 <fprintf@plt>
  40ce0c:	add    rsp,0x10
  40ce10:	mov    rsi,QWORD PTR [r15+0xd0]
  40ce17:	mov    edi,0xa
  40ce1c:	call   406110 <fputc@plt>
  40ce21:	mov    rbx,QWORD PTR [rsp]
  40ce25:	mov    r12,QWORD PTR [r12]
  40ce29:	test   r12,r12
  40ce2c:	je     40d744 <__flatcc_fb_gen_c_builder@@Base+0x1a24>
  40ce32:	cmp    WORD PTR [r12+0x10],0x0
  40ce39:	jne    40ce25 <__flatcc_fb_gen_c_builder@@Base+0x1105>
  40ce3b:	vxorps xmm0,xmm0,xmm0
  40ce3f:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40ce45:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40ce4b:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40ce51:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40ce5a:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40ce63:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40ce6c:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40ce75:	mov    QWORD PTR [rsp+0x100],0x0
  40ce81:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  40ce8a:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  40ce93:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40ce9c:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  40cea5:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  40ceae:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  40ceb7:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  40cec0:	mov    QWORD PTR [rsp+0x200],0x0
  40cecc:	mov    rdi,QWORD PTR [r12+0x18]
  40ced1:	mov    rsi,r12
  40ced4:	lea    rdx,[rsp+0x20]
  40ced9:	vzeroupper 
  40cedc:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40cee1:	mov    QWORD PTR [rsp+0x118],r12
  40cee9:	mov    r12,QWORD PTR [r12+0x28]
  40ceee:	test   r12,r12
  40cef1:	jne    40cf29 <__flatcc_fb_gen_c_builder@@Base+0x1209>
  40cef3:	jmp    40d550 <__flatcc_fb_gen_c_builder@@Base+0x1830>
  40cef8:	nop    DWORD PTR [rax+rax*1+0x0]
  40cf00:	mov    rdi,QWORD PTR [rbx]
  40cf03:	lea    rsi,[rip+0x329f8]        # 43f902 <_IO_stdin_used@@Base+0x12902>
  40cf0a:	lea    rdx,[rsp+0x20]
  40cf0f:	mov    ecx,r14d
  40cf12:	mov    r8,r13
  40cf15:	xor    eax,eax
  40cf17:	call   406170 <fprintf@plt>
  40cf1c:	mov    r12,QWORD PTR [r12]
  40cf20:	test   r12,r12
  40cf23:	je     40d550 <__flatcc_fb_gen_c_builder@@Base+0x1830>
  40cf29:	mov    rax,QWORD PTR [r12+0x8]
  40cf2e:	mov    r14d,DWORD PTR [rax+0x8]
  40cf32:	mov    r13,QWORD PTR [rax]
  40cf35:	test   BYTE PTR [r12+0x70],0x4
  40cf3b:	jne    40cf00 <__flatcc_fb_gen_c_builder@@Base+0x11e0>
  40cf3d:	mov    eax,DWORD PTR [r12+0x28]
  40cf42:	add    eax,0xfffffff9
  40cf45:	cmp    ax,0x8
  40cf49:	ja     40d7ed <__flatcc_fb_gen_c_builder@@Base+0x1acd>
  40cf4f:	movzx  eax,ax
  40cf52:	lea    rcx,[rip+0x29823]        # 43677c <_IO_stdin_used@@Base+0x977c>
  40cf59:	movsxd rax,DWORD PTR [rcx+rax*4]
  40cf5d:	add    rax,rcx
  40cf60:	jmp    rax
  40cf62:	mov    ecx,DWORD PTR [r12+0x18]
  40cf67:	lea    eax,[rcx-0x1]
  40cf6a:	cmp    eax,0xb
  40cf6d:	jae    40d8a1 <__flatcc_fb_gen_c_builder@@Base+0x1b81>
  40cf73:	cmp    ecx,0x5
  40cf76:	lea    rbx,[rip+0x215d2]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  40cf7d:	mov    r11,rbx
  40cf80:	cmove  r11,r15
  40cf84:	movsxd r10,eax
  40cf87:	mov    rdi,QWORD PTR [r15+0xd0]
  40cf8e:	mov    rcx,QWORD PTR [r12+0x88]
  40cf96:	lea    rsi,[rip+0x329e0]        # 43f97d <_IO_stdin_used@@Base+0x1297d>
  40cf9d:	mov    rdx,r15
  40cfa0:	mov    r8,r15
  40cfa3:	lea    r9,[rsp+0x20]
  40cfa8:	mov    eax,0x0
  40cfad:	lea    rbx,[rip+0x42bfc]        # 44fbb0 <fb_value_set_deleted@@Base+0x6130>
  40cfb4:	push   QWORD PTR [rbx+r10*8]
  40cfb8:	push   r11
  40cfba:	lea    rbx,[rip+0x42c47]        # 44fc08 <fb_value_set_deleted@@Base+0x6188>
  40cfc1:	push   QWORD PTR [rbx+r10*8]
  40cfc5:	push   r15
  40cfc7:	push   r13
  40cfc9:	push   r14
  40cfcb:	call   406170 <fprintf@plt>
  40cfd0:	add    rsp,0x30
  40cfd4:	mov    rsi,QWORD PTR [r12+0x90]
  40cfdc:	test   rsi,rsi
  40cfdf:	mov    rbx,QWORD PTR [rsp]
  40cfe3:	je     40d454 <__flatcc_fb_gen_c_builder@@Base+0x1734>
  40cfe9:	movzx  eax,WORD PTR [rsi+0x10]
  40cfed:	cmp    ax,0x1
  40cff1:	je     40d277 <__flatcc_fb_gen_c_builder@@Base+0x1557>
  40cff7:	test   ax,ax
  40cffa:	jne    40da14 <__flatcc_fb_gen_c_builder@@Base+0x1cf4>
  40d000:	mov    rdi,QWORD PTR [rsi+0x18]
  40d004:	lea    rax,[rsp+0x120]
  40d00c:	mov    rdx,rax
  40d00f:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40d014:	mov    rdi,QWORD PTR [r15+0xd0]
  40d01b:	lea    rsi,[rip+0x32992]        # 43f9b4 <_IO_stdin_used@@Base+0x129b4>
  40d022:	mov    rdx,r15
  40d025:	mov    rcx,r15
  40d028:	lea    r8,[rsp+0x20]
  40d02d:	mov    r9d,r14d
  40d030:	mov    eax,0x0
  40d035:	lea    r10,[rsp+0x120]
  40d03d:	push   r10
  40d03f:	push   r10
  40d041:	push   r10
  40d043:	push   r13
  40d045:	call   406170 <fprintf@plt>
  40d04a:	add    rsp,0x20
  40d04e:	mov    r12,QWORD PTR [r12]
  40d052:	test   r12,r12
  40d055:	jne    40cf29 <__flatcc_fb_gen_c_builder@@Base+0x1209>
  40d05b:	jmp    40d550 <__flatcc_fb_gen_c_builder@@Base+0x1830>
  40d060:	mov    rdi,QWORD PTR [r15+0xd0]
  40d067:	mov    rcx,QWORD PTR [r12+0x88]
  40d06f:	lea    rsi,[rip+0x32a4e]        # 43fac4 <_IO_stdin_used@@Base+0x12ac4>
  40d076:	jmp    40d167 <__flatcc_fb_gen_c_builder@@Base+0x1447>
  40d07b:	mov    QWORD PTR [rsp+0x18],r14
  40d080:	mov    edi,DWORD PTR [r12+0x18]
  40d085:	lea    eax,[rdi-0x1]
  40d088:	cmp    eax,0xb
  40d08b:	jae    40d8a1 <__flatcc_fb_gen_c_builder@@Base+0x1b81>
  40d091:	cmp    edi,0x5
  40d094:	lea    r14,[rip+0x214b4]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  40d09b:	cmove  r14,r15
  40d09f:	cdqe   
  40d0a1:	lea    rcx,[rip+0x42b08]        # 44fbb0 <fb_value_set_deleted@@Base+0x6130>
  40d0a8:	mov    r15,QWORD PTR [rcx+rax*8]
  40d0ac:	lea    rcx,[rip+0x42b55]        # 44fc08 <fb_value_set_deleted@@Base+0x6188>
  40d0b3:	mov    rax,QWORD PTR [rcx+rax*8]
  40d0b7:	mov    QWORD PTR [rsp+0x10],rax
  40d0bc:	lea    rsi,[r12+0x48]
  40d0c1:	lea    rax,[rsp+0x220]
  40d0c9:	mov    rdx,rax
  40d0cc:	call   40e630 <__flatcc_fb_gen_c_builder@@Base+0x2910>
  40d0d1:	mov    rax,QWORD PTR [rsp+0x8]
  40d0d6:	mov    rdi,QWORD PTR [rax+0xd0]
  40d0dd:	mov    rcx,QWORD PTR [r12+0x88]
  40d0e5:	movzx  r10d,WORD PTR [r12+0x72]
  40d0eb:	sub    rsp,0x8
  40d0ef:	lea    rsi,[rip+0x32842]        # 43f938 <_IO_stdin_used@@Base+0x12938>
  40d0f6:	mov    rdx,QWORD PTR [rsp+0x10]
  40d0fb:	mov    r8,QWORD PTR [rsp+0x10]
  40d100:	lea    r9,[rsp+0x28]
  40d105:	mov    eax,0x0
  40d10a:	lea    rbx,[rsp+0x228]
  40d112:	push   rbx
  40d113:	push   r10
  40d115:	push   QWORD PTR [r12+0x80]
  40d11d:	push   r15
  40d11f:	mov    r15,QWORD PTR [rsp+0x30]
  40d124:	push   r14
  40d126:	push   QWORD PTR [rsp+0x40]
  40d12a:	push   r15
  40d12c:	push   r13
  40d12e:	push   QWORD PTR [rsp+0x60]
  40d132:	call   406170 <fprintf@plt>
  40d137:	add    rsp,0x50
  40d13b:	mov    rbx,QWORD PTR [rsp]
  40d13f:	mov    r12,QWORD PTR [r12]
  40d143:	test   r12,r12
  40d146:	jne    40cf29 <__flatcc_fb_gen_c_builder@@Base+0x1209>
  40d14c:	jmp    40d550 <__flatcc_fb_gen_c_builder@@Base+0x1830>
  40d151:	mov    rdi,QWORD PTR [r15+0xd0]
  40d158:	mov    rcx,QWORD PTR [r12+0x88]
  40d160:	lea    rsi,[rip+0x32988]        # 43faef <_IO_stdin_used@@Base+0x12aef>
  40d167:	mov    rdx,r15
  40d16a:	mov    r8,r15
  40d16d:	lea    r9,[rsp+0x20]
  40d172:	xor    eax,eax
  40d174:	push   r13
  40d176:	push   r14
  40d178:	call   406170 <fprintf@plt>
  40d17d:	add    rsp,0x10
  40d181:	mov    r12,QWORD PTR [r12]
  40d185:	test   r12,r12
  40d188:	jne    40cf29 <__flatcc_fb_gen_c_builder@@Base+0x1209>
  40d18e:	jmp    40d550 <__flatcc_fb_gen_c_builder@@Base+0x1830>
  40d193:	mov    rsi,QWORD PTR [r12+0x18]
  40d198:	mov    rdi,QWORD PTR [rsi+0x18]
  40d19c:	lea    rdx,[rsp+0x120]
  40d1a4:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40d1a9:	mov    rax,QWORD PTR [r12+0x18]
  40d1ae:	movzx  ecx,WORD PTR [rax+0x10]
  40d1b2:	cmp    rcx,0x4
  40d1b6:	ja     40d8ed <__flatcc_fb_gen_c_builder@@Base+0x1bcd>
  40d1bc:	lea    rdx,[rip+0x295dd]        # 4367a0 <_IO_stdin_used@@Base+0x97a0>
  40d1c3:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40d1c7:	add    rcx,rdx
  40d1ca:	jmp    rcx
  40d1cc:	test   BYTE PTR [rax+0x12],0x8
  40d1d0:	je     40d1eb <__flatcc_fb_gen_c_builder@@Base+0x14cb>
  40d1d2:	mov    rcx,QWORD PTR [rbx]
  40d1d5:	mov    esi,0x20
  40d1da:	mov    edx,0x1
  40d1df:	lea    rdi,[rip+0x32a18]        # 43fbfe <_IO_stdin_used@@Base+0x12bfe>
  40d1e6:	call   406220 <fwrite@plt>
  40d1eb:	mov    rdi,QWORD PTR [r15+0xd0]
  40d1f2:	mov    rcx,QWORD PTR [r12+0x88]
  40d1fa:	sub    rsp,0x8
  40d1fe:	lea    rsi,[rip+0x32a4f]        # 43fc54 <_IO_stdin_used@@Base+0x12c54>
  40d205:	jmp    40d25a <__flatcc_fb_gen_c_builder@@Base+0x153a>
  40d207:	mov    rsi,QWORD PTR [r12+0x18]
  40d20c:	mov    rdi,QWORD PTR [rsi+0x18]
  40d210:	lea    rdx,[rsp+0x120]
  40d218:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40d21d:	mov    rax,QWORD PTR [r12+0x18]
  40d222:	movzx  ecx,WORD PTR [rax+0x10]
  40d226:	cmp    rcx,0x4
  40d22a:	ja     40d936 <__flatcc_fb_gen_c_builder@@Base+0x1c16>
  40d230:	lea    rdx,[rip+0x2957d]        # 4367b4 <_IO_stdin_used@@Base+0x97b4>
  40d237:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40d23b:	add    rcx,rdx
  40d23e:	jmp    rcx
  40d240:	mov    rdi,QWORD PTR [r15+0xd0]
  40d247:	mov    rcx,QWORD PTR [r12+0x88]
  40d24f:	sub    rsp,0x8
  40d253:	lea    rsi,[rip+0x32900]        # 43fb5a <_IO_stdin_used@@Base+0x12b5a>
  40d25a:	mov    rdx,r15
  40d25d:	mov    r8,r15
  40d260:	lea    r9,[rsp+0x28]
  40d265:	xor    eax,eax
  40d267:	mov    r10,rbx
  40d26a:	lea    rbx,[rsp+0x128]
  40d272:	jmp    40d498 <__flatcc_fb_gen_c_builder@@Base+0x1778>
  40d277:	mov    rdi,QWORD PTR [rsi+0x18]
  40d27b:	lea    rax,[rsp+0x120]
  40d283:	mov    rbx,rax
  40d286:	mov    rdx,rax
  40d289:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40d28e:	mov    rdi,QWORD PTR [r15+0xd0]
  40d295:	mov    rax,QWORD PTR [r12+0x90]
  40d29d:	movzx  r10d,WORD PTR [rax+0xb0]
  40d2a5:	sub    rsp,0x8
  40d2a9:	lea    rsi,[rip+0x32755]        # 43fa05 <_IO_stdin_used@@Base+0x12a05>
  40d2b0:	mov    rdx,r15
  40d2b3:	mov    rcx,r15
  40d2b6:	lea    r8,[rsp+0x28]
  40d2bb:	mov    r9d,r14d
  40d2be:	mov    eax,0x0
  40d2c3:	push   rbx
  40d2c4:	push   rbx
  40d2c5:	mov    r11,rbx
  40d2c8:	push   r10
  40d2ca:	mov    rbx,QWORD PTR [rsp+0x20]
  40d2cf:	push   r11
  40d2d1:	push   r13
  40d2d3:	call   406170 <fprintf@plt>
  40d2d8:	jmp    40d450 <__flatcc_fb_gen_c_builder@@Base+0x1730>
  40d2dd:	mov    rdi,QWORD PTR [r15+0xd0]
  40d2e4:	mov    rcx,QWORD PTR [r12+0x88]
  40d2ec:	sub    rsp,0x8
  40d2f0:	lea    rsi,[rip+0x329cc]        # 43fcc3 <_IO_stdin_used@@Base+0x12cc3>
  40d2f7:	mov    rdx,r15
  40d2fa:	mov    r8,r15
  40d2fd:	lea    rax,[rsp+0x28]
  40d302:	mov    r9,rax
  40d305:	xor    eax,eax
  40d307:	mov    r10,rbx
  40d30a:	lea    rbx,[rsp+0x128]
  40d312:	push   rbx
  40d313:	mov    rbx,r10
  40d316:	push   r13
  40d318:	push   r14
  40d31a:	call   406170 <fprintf@plt>
  40d31f:	add    rsp,0x20
  40d323:	mov    r8,QWORD PTR [r12+0x18]
  40d328:	mov    rdi,r15
  40d32b:	lea    rsi,[rsp+0x20]
  40d330:	mov    edx,r14d
  40d333:	mov    rcx,r13
  40d336:	mov    r9d,0x1
  40d33c:	call   40e7a0 <__flatcc_fb_gen_c_builder@@Base+0x2a80>
  40d341:	mov    r12,QWORD PTR [r12]
  40d345:	test   r12,r12
  40d348:	jne    40cf29 <__flatcc_fb_gen_c_builder@@Base+0x1209>
  40d34e:	jmp    40d550 <__flatcc_fb_gen_c_builder@@Base+0x1830>
  40d353:	mov    rdi,QWORD PTR [r15+0xd0]
  40d35a:	mov    rcx,QWORD PTR [r12+0x88]
  40d362:	sub    rsp,0x8
  40d366:	lea    rsi,[rip+0x32863]        # 43fbd0 <_IO_stdin_used@@Base+0x12bd0>
  40d36d:	mov    rdx,r15
  40d370:	mov    r8,r15
  40d373:	lea    rax,[rsp+0x28]
  40d378:	mov    r9,rax
  40d37b:	xor    eax,eax
  40d37d:	mov    r10,rbx
  40d380:	lea    rbx,[rsp+0x128]
  40d388:	push   rbx
  40d389:	mov    rbx,r10
  40d38c:	push   r13
  40d38e:	push   r14
  40d390:	call   406170 <fprintf@plt>
  40d395:	add    rsp,0x20
  40d399:	mov    r8,QWORD PTR [r12+0x18]
  40d39e:	mov    rdi,r15
  40d3a1:	lea    rsi,[rsp+0x20]
  40d3a6:	mov    edx,r14d
  40d3a9:	mov    rcx,r13
  40d3ac:	xor    r9d,r9d
  40d3af:	call   40e7a0 <__flatcc_fb_gen_c_builder@@Base+0x2a80>
  40d3b4:	mov    r12,QWORD PTR [r12]
  40d3b8:	test   r12,r12
  40d3bb:	jne    40cf29 <__flatcc_fb_gen_c_builder@@Base+0x1209>
  40d3c1:	jmp    40d550 <__flatcc_fb_gen_c_builder@@Base+0x1830>
  40d3c6:	test   BYTE PTR [rax+0x12],0x8
  40d3ca:	je     40d3e5 <__flatcc_fb_gen_c_builder@@Base+0x16c5>
  40d3cc:	mov    rcx,QWORD PTR [rbx]
  40d3cf:	mov    esi,0x20
  40d3d4:	mov    edx,0x1
  40d3d9:	lea    rdi,[rip+0x3281e]        # 43fbfe <_IO_stdin_used@@Base+0x12bfe>
  40d3e0:	call   406220 <fwrite@plt>
  40d3e5:	mov    rdi,QWORD PTR [r15+0xd0]
  40d3ec:	mov    rcx,QWORD PTR [r12+0x88]
  40d3f4:	lea    rsi,[rip+0x32824]        # 43fc1f <_IO_stdin_used@@Base+0x12c1f>
  40d3fb:	jmp    40d47c <__flatcc_fb_gen_c_builder@@Base+0x175c>
  40d3fd:	mov    rdi,QWORD PTR [r15+0xd0]
  40d404:	mov    rcx,QWORD PTR [r12+0x88]
  40d40c:	movzx  ebx,WORD PTR [r12+0x72]
  40d412:	sub    rsp,0x8
  40d416:	lea    rsi,[rip+0x32704]        # 43fb21 <_IO_stdin_used@@Base+0x12b21>
  40d41d:	mov    rdx,r15
  40d420:	mov    r8,r15
  40d423:	lea    r9,[rsp+0x28]
  40d428:	mov    eax,0x0
  40d42d:	push   rbx
  40d42e:	mov    r10,QWORD PTR [rsp+0x10]
  40d433:	push   QWORD PTR [r12+0x80]
  40d43b:	lea    rbx,[rsp+0x138]
  40d443:	push   rbx
  40d444:	mov    rbx,r10
  40d447:	push   r13
  40d449:	push   r14
  40d44b:	call   406170 <fprintf@plt>
  40d450:	add    rsp,0x30
  40d454:	mov    r12,QWORD PTR [r12]
  40d458:	test   r12,r12
  40d45b:	jne    40cf29 <__flatcc_fb_gen_c_builder@@Base+0x1209>
  40d461:	jmp    40d550 <__flatcc_fb_gen_c_builder@@Base+0x1830>
  40d466:	mov    rdi,QWORD PTR [r15+0xd0]
  40d46d:	mov    rcx,QWORD PTR [r12+0x88]
  40d475:	lea    rsi,[rip+0x3280d]        # 43fc89 <_IO_stdin_used@@Base+0x12c89>
  40d47c:	mov    rdx,r15
  40d47f:	mov    r8,r15
  40d482:	lea    r9,[rsp+0x20]
  40d487:	mov    eax,0x0
  40d48c:	mov    r10,rbx
  40d48f:	lea    rbx,[rsp+0x120]
  40d497:	push   rbx
  40d498:	push   rbx
  40d499:	mov    rbx,r10
  40d49c:	push   r13
  40d49e:	push   r14
  40d4a0:	call   406170 <fprintf@plt>
  40d4a5:	add    rsp,0x20
  40d4a9:	mov    r12,QWORD PTR [r12]
  40d4ad:	test   r12,r12
  40d4b0:	jne    40cf29 <__flatcc_fb_gen_c_builder@@Base+0x1209>
  40d4b6:	jmp    40d550 <__flatcc_fb_gen_c_builder@@Base+0x1830>
  40d4bb:	mov    edi,DWORD PTR [rax+0x48]
  40d4be:	lea    rsi,[r12+0x48]
  40d4c3:	lea    rax,[rsp+0x220]
  40d4cb:	mov    rdx,rax
  40d4ce:	call   40e630 <__flatcc_fb_gen_c_builder@@Base+0x2910>
  40d4d3:	mov    rdi,QWORD PTR [r15+0xd0]
  40d4da:	mov    rcx,QWORD PTR [r12+0x88]
  40d4e2:	movzx  r10d,WORD PTR [r12+0x72]
  40d4e8:	sub    rsp,0x8
  40d4ec:	lea    rsi,[rip+0x32695]        # 43fb88 <_IO_stdin_used@@Base+0x12b88>
  40d4f3:	mov    rdx,r15
  40d4f6:	mov    r8,r15
  40d4f9:	lea    r9,[rsp+0x28]
  40d4fe:	mov    eax,0x0
  40d503:	lea    rbx,[rsp+0x228]
  40d50b:	push   rbx
  40d50c:	push   r10
  40d50e:	mov    r10,QWORD PTR [rsp+0x18]
  40d513:	push   QWORD PTR [r12+0x80]
  40d51b:	lea    rbx,[rsp+0x140]
  40d523:	push   rbx
  40d524:	push   rbx
  40d525:	mov    rbx,r10
  40d528:	push   r13
  40d52a:	push   r14
  40d52c:	call   406170 <fprintf@plt>
  40d531:	add    rsp,0x40
  40d535:	mov    r12,QWORD PTR [r12]
  40d539:	test   r12,r12
  40d53c:	jne    40cf29 <__flatcc_fb_gen_c_builder@@Base+0x1209>
  40d542:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d54c:	nop    DWORD PTR [rax+0x0]
  40d550:	mov    rsi,QWORD PTR [r15+0xd0]
  40d557:	mov    edi,0xa
  40d55c:	call   406110 <fputc@plt>
  40d561:	mov    r12,QWORD PTR [rsp+0x118]
  40d569:	movzx  r14d,WORD PTR [r12+0xa4]
  40d572:	vxorps xmm0,xmm0,xmm0
  40d576:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40d57f:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40d588:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40d591:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40d59a:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40d5a0:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40d5a6:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40d5ac:	mov    QWORD PTR [rsp+0x100],0x0
  40d5b8:	mov    rdi,QWORD PTR [r12+0x18]
  40d5bd:	mov    rsi,r12
  40d5c0:	lea    rbx,[rsp+0x20]
  40d5c5:	mov    rdx,rbx
  40d5c8:	vzeroupper 
  40d5cb:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40d5d0:	mov    rdi,QWORD PTR [r15+0xd0]
  40d5d7:	lea    rsi,[rip+0x32899]        # 43fe77 <_IO_stdin_used@@Base+0x12e77>
  40d5de:	mov    rdx,rbx
  40d5e1:	mov    rcx,rbx
  40d5e4:	mov    r8,r15
  40d5e7:	mov    r9,rbx
  40d5ea:	xor    eax,eax
  40d5ec:	call   406170 <fprintf@plt>
  40d5f1:	mov    rdi,QWORD PTR [r15+0xd0]
  40d5f8:	lea    rsi,[rip+0x328bb]        # 43feba <_IO_stdin_used@@Base+0x12eba>
  40d5ff:	mov    rdx,rbx
  40d602:	xor    eax,eax
  40d604:	call   406170 <fprintf@plt>
  40d609:	mov    rbx,QWORD PTR [r12+0x30]
  40d60e:	test   rbx,rbx
  40d611:	je     40cd70 <__flatcc_fb_gen_c_builder@@Base+0x1050>
  40d617:	mov    r12d,r14d
  40d61a:	and    r12d,0x8
  40d61e:	shr    r12d,0x3
  40d622:	xor    eax,eax
  40d624:	test   BYTE PTR [rbx+0x70],0x4
  40d628:	jne    40d657 <__flatcc_fb_gen_c_builder@@Base+0x1937>
  40d62a:	jmp    40d669 <__flatcc_fb_gen_c_builder@@Base+0x1949>
  40d62c:	nop    DWORD PTR [rax+0x0]
  40d630:	lea    rsi,[rip+0x328c1]        # 43fef8 <_IO_stdin_used@@Base+0x12ef8>
  40d637:	mov    r13d,eax
  40d63a:	mov    rax,QWORD PTR [rsp]
  40d63e:	mov    rdi,QWORD PTR [rax]
  40d641:	mov    r9,QWORD PTR [rbx+0x88]
  40d648:	lea    rdx,[rsp+0x20]
  40d64d:	xor    eax,eax
  40d64f:	call   406170 <fprintf@plt>
  40d654:	mov    eax,r13d
  40d657:	mov    rbx,QWORD PTR [rbx+0x98]
  40d65e:	test   rbx,rbx
  40d661:	je     40d6b0 <__flatcc_fb_gen_c_builder@@Base+0x1990>
  40d663:	test   BYTE PTR [rbx+0x70],0x4
  40d667:	jne    40d657 <__flatcc_fb_gen_c_builder@@Base+0x1937>
  40d669:	mov    rdx,QWORD PTR [rbx+0x8]
  40d66d:	mov    ecx,DWORD PTR [rdx+0x8]
  40d670:	mov    r8,QWORD PTR [rdx]
  40d673:	cmp    WORD PTR [rbx+0x28],0xe
  40d678:	jne    40d630 <__flatcc_fb_gen_c_builder@@Base+0x1910>
  40d67a:	mov    rdx,QWORD PTR [rbx+0x18]
  40d67e:	cmp    WORD PTR [rdx+0x10],0x4
  40d683:	setne  dl
  40d686:	mov    r13d,0x1
  40d68c:	cmove  eax,r13d
  40d690:	or     dl,r12b
  40d693:	lea    rsi,[rip+0x32836]        # 43fed0 <_IO_stdin_used@@Base+0x12ed0>
  40d69a:	cmp    dl,0x1
  40d69d:	je     40d630 <__flatcc_fb_gen_c_builder@@Base+0x1910>
  40d69f:	jmp    40d63a <__flatcc_fb_gen_c_builder@@Base+0x191a>
  40d6a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40d6ab:	nop    DWORD PTR [rax+rax*1+0x0]
  40d6b0:	test   r14b,0x8
  40d6b4:	mov    r12,QWORD PTR [rsp+0x118]
  40d6bc:	jne    40cd70 <__flatcc_fb_gen_c_builder@@Base+0x1050>
  40d6c2:	test   eax,eax
  40d6c4:	je     40cd70 <__flatcc_fb_gen_c_builder@@Base+0x1050>
  40d6ca:	mov    rbx,QWORD PTR [r12+0x30]
  40d6cf:	test   rbx,rbx
  40d6d2:	jne    40d6f0 <__flatcc_fb_gen_c_builder@@Base+0x19d0>
  40d6d4:	jmp    40cd70 <__flatcc_fb_gen_c_builder@@Base+0x1050>
  40d6d9:	nop    DWORD PTR [rax+0x0]
  40d6e0:	mov    rbx,QWORD PTR [rbx+0x98]
  40d6e7:	test   rbx,rbx
  40d6ea:	je     40cd70 <__flatcc_fb_gen_c_builder@@Base+0x1050>
  40d6f0:	test   BYTE PTR [rbx+0x70],0x4
  40d6f4:	jne    40d6e0 <__flatcc_fb_gen_c_builder@@Base+0x19c0>
  40d6f6:	cmp    WORD PTR [rbx+0x28],0xe
  40d6fb:	jne    40d6e0 <__flatcc_fb_gen_c_builder@@Base+0x19c0>
  40d6fd:	mov    rax,QWORD PTR [rbx+0x18]
  40d701:	cmp    WORD PTR [rax+0x10],0x4
  40d706:	jne    40d6e0 <__flatcc_fb_gen_c_builder@@Base+0x19c0>
  40d708:	mov    rax,QWORD PTR [rbx+0x8]
  40d70c:	mov    r9,QWORD PTR [rbx+0x88]
  40d713:	mov    ecx,DWORD PTR [rax+0x8]
  40d716:	mov    r8,QWORD PTR [rax]
  40d719:	mov    rax,QWORD PTR [rsp]
  40d71d:	mov    rdi,QWORD PTR [rax]
  40d720:	lea    rsi,[rip+0x327f3]        # 43ff1a <_IO_stdin_used@@Base+0x12f1a>
  40d727:	lea    rdx,[rsp+0x20]
  40d72c:	xor    eax,eax
  40d72e:	call   406170 <fprintf@plt>
  40d733:	jmp    40d6e0 <__flatcc_fb_gen_c_builder@@Base+0x19c0>
  40d735:	mov    rdi,r15
  40d738:	vzeroupper 
  40d73b:	call   40e3a0 <__flatcc_fb_gen_c_builder@@Base+0x2680>
  40d740:	mov    rbx,QWORD PTR [rsp]
  40d744:	mov    rax,QWORD PTR [r15+0xe0]
  40d74b:	cmp    DWORD PTR [rax+0xac],0x0
  40d752:	je     40d76d <__flatcc_fb_gen_c_builder@@Base+0x1a4d>
  40d754:	mov    rcx,QWORD PTR [rbx]
  40d757:	lea    rdi,[rip+0x26b8d]        # 4342eb <_IO_stdin_used@@Base+0x72eb>
  40d75e:	mov    esi,0x24
  40d763:	mov    edx,0x1
  40d768:	call   406220 <fwrite@plt>
  40d76d:	mov    rdi,QWORD PTR [r15+0xd0]
  40d774:	mov    rax,QWORD PTR [r15+0xd8]
  40d77b:	mov    rdx,QWORD PTR [rax+0x118]
  40d782:	lea    rsi,[rip+0x32835]        # 43ffbe <_IO_stdin_used@@Base+0x12fbe>
  40d789:	xor    eax,eax
  40d78b:	call   406170 <fprintf@plt>
  40d790:	xor    eax,eax
  40d792:	lea    rsp,[rbp-0x28]
  40d796:	pop    rbx
  40d797:	pop    r12
  40d799:	pop    r13
  40d79b:	pop    r14
  40d79d:	pop    r15
  40d79f:	pop    rbp
  40d7a0:	ret    
  40d7a1:	mov    rax,QWORD PTR [rip+0x42850]        # 44fff8 <stderr@GLIBC_2.2.5>
  40d7a8:	mov    rdi,QWORD PTR [rax]
  40d7ab:	lea    rsi,[rip+0x20c82]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40d7b2:	lea    rbx,[rip+0x31857]        # 43f010 <_IO_stdin_used@@Base+0x12010>
  40d7b9:	lea    r8,[rip+0x31abe]        # 43f27e <_IO_stdin_used@@Base+0x1227e>
  40d7c0:	mov    rdx,rbx
  40d7c3:	mov    ecx,0x4b9
  40d7c8:	xor    eax,eax
  40d7ca:	vzeroupper 
  40d7cd:	call   406170 <fprintf@plt>
  40d7d2:	lea    rdi,[rip+0x31bc2]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40d7d9:	lea    rcx,[rip+0x31e42]        # 43f622 <_IO_stdin_used@@Base+0x12622>
  40d7e0:	mov    rsi,rbx
  40d7e3:	mov    edx,0x4b9
  40d7e8:	call   4060f0 <__assert_fail@plt>
  40d7ed:	mov    rax,QWORD PTR [rip+0x42804]        # 44fff8 <stderr@GLIBC_2.2.5>
  40d7f4:	mov    rdi,QWORD PTR [rax]
  40d7f7:	lea    rsi,[rip+0x20c36]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40d7fe:	lea    rbx,[rip+0x3180b]        # 43f010 <_IO_stdin_used@@Base+0x12010>
  40d805:	lea    r8,[rip+0x283a3]        # 435baf <_IO_stdin_used@@Base+0x8baf>
  40d80c:	mov    rdx,rbx
  40d80f:	mov    ecx,0x5e8
  40d814:	xor    eax,eax
  40d816:	call   406170 <fprintf@plt>
  40d81b:	lea    rdi,[rip+0x31b79]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40d822:	lea    rcx,[rip+0x32259]        # 43fa82 <_IO_stdin_used@@Base+0x12a82>
  40d829:	mov    rsi,rbx
  40d82c:	mov    edx,0x5e8
  40d831:	call   4060f0 <__assert_fail@plt>
  40d836:	lea    rdi,[rip+0x27531]        # 434d6e <_IO_stdin_used@@Base+0x7d6e>
  40d83d:	lea    rsi,[rip+0x317cc]        # 43f010 <_IO_stdin_used@@Base+0x12010>
  40d844:	lea    rcx,[rip+0x31830]        # 43f07b <_IO_stdin_used@@Base+0x1207b>
  40d84b:	mov    edx,0x3f2
  40d850:	vzeroupper 
  40d853:	call   4060f0 <__assert_fail@plt>
  40d858:	mov    rax,QWORD PTR [rip+0x42799]        # 44fff8 <stderr@GLIBC_2.2.5>
  40d85f:	mov    rdi,QWORD PTR [rax]
  40d862:	lea    rsi,[rip+0x20bcb]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40d869:	lea    rbx,[rip+0x317a0]        # 43f010 <_IO_stdin_used@@Base+0x12010>
  40d870:	lea    r8,[rip+0x31d7f]        # 43f5f6 <_IO_stdin_used@@Base+0x125f6>
  40d877:	mov    rdx,rbx
  40d87a:	mov    ecx,0x495
  40d87f:	xor    eax,eax
  40d881:	call   406170 <fprintf@plt>
  40d886:	lea    rdi,[rip+0x31b0e]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40d88d:	lea    rcx,[rip+0x31d8e]        # 43f622 <_IO_stdin_used@@Base+0x12622>
  40d894:	mov    rsi,rbx
  40d897:	mov    edx,0x495
  40d89c:	call   4060f0 <__assert_fail@plt>
  40d8a1:	mov    rax,QWORD PTR [rip+0x42750]        # 44fff8 <stderr@GLIBC_2.2.5>
  40d8a8:	mov    rdi,QWORD PTR [rax]
  40d8ab:	lea    rsi,[rip+0x20b82]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40d8b2:	lea    rbx,[rip+0x2732d]        # 434be6 <_IO_stdin_used@@Base+0x7be6>
  40d8b9:	lea    r8,[rip+0x27389]        # 434c49 <_IO_stdin_used@@Base+0x7c49>
  40d8c0:	mov    rdx,rbx
  40d8c3:	mov    ecx,0x8d
  40d8c8:	xor    eax,eax
  40d8ca:	vzeroupper 
  40d8cd:	call   406170 <fprintf@plt>
  40d8d2:	lea    rdi,[rip+0x31ac2]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40d8d9:	lea    rcx,[rip+0x273a0]        # 434c80 <_IO_stdin_used@@Base+0x7c80>
  40d8e0:	mov    rsi,rbx
  40d8e3:	mov    edx,0x8d
  40d8e8:	call   4060f0 <__assert_fail@plt>
  40d8ed:	mov    rax,QWORD PTR [rip+0x42704]        # 44fff8 <stderr@GLIBC_2.2.5>
  40d8f4:	mov    rdi,QWORD PTR [rax]
  40d8f7:	lea    rsi,[rip+0x20b36]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40d8fe:	lea    rbx,[rip+0x3170b]        # 43f010 <_IO_stdin_used@@Base+0x12010>
  40d905:	lea    r8,[rip+0x281e1]        # 435aed <_IO_stdin_used@@Base+0x8aed>
  40d90c:	mov    rdx,rbx
  40d90f:	mov    ecx,0x5e3
  40d914:	xor    eax,eax
  40d916:	call   406170 <fprintf@plt>
  40d91b:	lea    rdi,[rip+0x31a79]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40d922:	lea    rcx,[rip+0x32159]        # 43fa82 <_IO_stdin_used@@Base+0x12a82>
  40d929:	mov    rsi,rbx
  40d92c:	mov    edx,0x5e3
  40d931:	call   4060f0 <__assert_fail@plt>
  40d936:	mov    rax,QWORD PTR [rip+0x426bb]        # 44fff8 <stderr@GLIBC_2.2.5>
  40d93d:	mov    rdi,QWORD PTR [rax]
  40d940:	lea    rsi,[rip+0x20aed]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40d947:	lea    rbx,[rip+0x316c2]        # 43f010 <_IO_stdin_used@@Base+0x12010>
  40d94e:	lea    r8,[rip+0x2814f]        # 435aa4 <_IO_stdin_used@@Base+0x8aa4>
  40d955:	mov    rdx,rbx
  40d958:	mov    ecx,0x5c0
  40d95d:	xor    eax,eax
  40d95f:	call   406170 <fprintf@plt>
  40d964:	lea    rdi,[rip+0x31a30]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40d96b:	lea    rcx,[rip+0x32110]        # 43fa82 <_IO_stdin_used@@Base+0x12a82>
  40d972:	mov    rsi,rbx
  40d975:	mov    edx,0x5c0
  40d97a:	call   4060f0 <__assert_fail@plt>
  40d97f:	mov    rax,QWORD PTR [rip+0x42672]        # 44fff8 <stderr@GLIBC_2.2.5>
  40d986:	mov    rdi,QWORD PTR [rax]
  40d989:	lea    rsi,[rip+0x20aa4]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40d990:	lea    rbx,[rip+0x2724f]        # 434be6 <_IO_stdin_used@@Base+0x7be6>
  40d997:	lea    r8,[rip+0x272ab]        # 434c49 <_IO_stdin_used@@Base+0x7c49>
  40d99e:	mov    rdx,rbx
  40d9a1:	mov    ecx,0x60
  40d9a6:	xor    eax,eax
  40d9a8:	vzeroupper 
  40d9ab:	call   406170 <fprintf@plt>
  40d9b0:	lea    rdi,[rip+0x319e4]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40d9b7:	lea    rcx,[rip+0x27bbb]        # 435579 <_IO_stdin_used@@Base+0x8579>
  40d9be:	mov    rsi,rbx
  40d9c1:	mov    edx,0x60
  40d9c6:	call   4060f0 <__assert_fail@plt>
  40d9cb:	mov    rax,QWORD PTR [rip+0x42626]        # 44fff8 <stderr@GLIBC_2.2.5>
  40d9d2:	mov    rdi,QWORD PTR [rax]
  40d9d5:	lea    rsi,[rip+0x20a58]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40d9dc:	lea    rbx,[rip+0x3162d]        # 43f010 <_IO_stdin_used@@Base+0x12010>
  40d9e3:	lea    r8,[rip+0x31c9b]        # 43f685 <_IO_stdin_used@@Base+0x12685>
  40d9ea:	mov    rdx,rbx
  40d9ed:	mov    ecx,0x4a5
  40d9f2:	xor    eax,eax
  40d9f4:	call   406170 <fprintf@plt>
  40d9f9:	lea    rdi,[rip+0x3199b]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40da00:	lea    rcx,[rip+0x31c1b]        # 43f622 <_IO_stdin_used@@Base+0x12622>
  40da07:	mov    rsi,rbx
  40da0a:	mov    edx,0x4a5
  40da0f:	call   4060f0 <__assert_fail@plt>
  40da14:	mov    rax,QWORD PTR [rip+0x425dd]        # 44fff8 <stderr@GLIBC_2.2.5>
  40da1b:	mov    rdi,QWORD PTR [rax]
  40da1e:	lea    rsi,[rip+0x20a0f]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40da25:	lea    rbx,[rip+0x315e4]        # 43f010 <_IO_stdin_used@@Base+0x12010>
  40da2c:	lea    r8,[rip+0x32028]        # 43fa5b <_IO_stdin_used@@Base+0x12a5b>
  40da33:	mov    rdx,rbx
  40da36:	mov    ecx,0x596
  40da3b:	xor    eax,eax
  40da3d:	call   406170 <fprintf@plt>
  40da42:	lea    rdi,[rip+0x31952]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40da49:	lea    rcx,[rip+0x32032]        # 43fa82 <_IO_stdin_used@@Base+0x12a82>
  40da50:	mov    rsi,rbx
  40da53:	mov    edx,0x596
  40da58:	call   4060f0 <__assert_fail@plt>
  40da5d:	nop    DWORD PTR [rax]
  40da60:	push   rbp
  40da61:	push   rbx
  40da62:	push   rax
  40da63:	mov    rbx,QWORD PTR [rdi+0x28]
  40da67:	xor    ebp,ebp
  40da69:	test   rbx,rbx
  40da6c:	jne    40da7a <__flatcc_fb_gen_c_builder@@Base+0x1d5a>
  40da6e:	jmp    40daa1 <__flatcc_fb_gen_c_builder@@Base+0x1d81>
  40da70:	inc    ebp
  40da72:	mov    rbx,QWORD PTR [rbx]
  40da75:	test   rbx,rbx
  40da78:	je     40daa1 <__flatcc_fb_gen_c_builder@@Base+0x1d81>
  40da7a:	test   BYTE PTR [rbx+0x70],0x4
  40da7e:	jne    40da72 <__flatcc_fb_gen_c_builder@@Base+0x1d52>
  40da80:	cmp    WORD PTR [rbx+0x28],0xe
  40da85:	jne    40da70 <__flatcc_fb_gen_c_builder@@Base+0x1d50>
  40da87:	mov    rdi,QWORD PTR [rbx+0x18]
  40da8b:	cmp    WORD PTR [rdi+0x10],0x1
  40da90:	jne    40da70 <__flatcc_fb_gen_c_builder@@Base+0x1d50>
  40da92:	call   40da60 <__flatcc_fb_gen_c_builder@@Base+0x1d40>
  40da97:	add    ebp,eax
  40da99:	mov    rbx,QWORD PTR [rbx]
  40da9c:	test   rbx,rbx
  40da9f:	jne    40da7a <__flatcc_fb_gen_c_builder@@Base+0x1d5a>
  40daa1:	mov    eax,ebp
  40daa3:	add    rsp,0x8
  40daa7:	pop    rbx
  40daa8:	pop    rbp
  40daa9:	ret    
  40daaa:	nop    WORD PTR [rax+rax*1+0x0]
  40dab0:	push   rbp
  40dab1:	mov    rbp,rsp
  40dab4:	push   r15
  40dab6:	push   r14
  40dab8:	push   r13
  40daba:	push   r12
  40dabc:	push   rbx
  40dabd:	and    rsp,0xffffffffffffffe0
  40dac1:	sub    rsp,0x120
  40dac8:	vxorps xmm0,xmm0,xmm0
  40dacc:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40dad5:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40dade:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40dae7:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40daf0:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40daf6:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40dafc:	mov    DWORD PTR [rsp+0xc],ecx
  40db00:	mov    r15d,edx
  40db03:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40db09:	mov    QWORD PTR [rsp+0x100],0x0
  40db15:	mov    r14,QWORD PTR [rsi+0x28]
  40db19:	test   r14,r14
  40db1c:	je     40dd27 <__flatcc_fb_gen_c_builder@@Base+0x2007>
  40db22:	mov    r12d,r8d
  40db25:	mov    r13,rdi
  40db28:	test   r8d,r8d
  40db2b:	lea    rax,[rip+0x20a1c]        # 42e54e <_IO_stdin_used@@Base+0x154e>
  40db32:	lea    rcx,[rip+0x2212f]        # 42fc68 <_IO_stdin_used@@Base+0x2c68>
  40db39:	cmove  rcx,rax
  40db3d:	mov    QWORD PTR [rsp+0x10],rcx
  40db42:	mov    DWORD PTR [rsp+0x1c],r8d
  40db47:	test   BYTE PTR [r14+0x70],0x4
  40db4c:	jne    40dbb0 <__flatcc_fb_gen_c_builder@@Base+0x1e90>
  40db4e:	jmp    40dbc3 <__flatcc_fb_gen_c_builder@@Base+0x1ea3>
  40db50:	mov    esi,0x2
  40db55:	mov    edx,0x1
  40db5a:	lea    rdi,[rip+0x3713b]        # 444c9c <_IO_stdin_used@@Base+0x17c9c>
  40db61:	vzeroupper 
  40db64:	call   406220 <fwrite@plt>
  40db69:	mov    rsi,QWORD PTR [r14+0x18]
  40db6d:	mov    rdi,QWORD PTR [rsi+0x18]
  40db71:	lea    rbx,[rsp+0x20]
  40db76:	mov    rdx,rbx
  40db79:	vzeroupper 
  40db7c:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40db81:	mov    rdi,QWORD PTR [r13+0xd0]
  40db88:	lea    r12d,[r15+0x1]
  40db8c:	lea    rsi,[rip+0x316d4]        # 43f267 <_IO_stdin_used@@Base+0x12267>
  40db93:	mov    rdx,rbx
  40db96:	mov    ecx,r15d
  40db99:	xor    eax,eax
  40db9b:	call   406170 <fprintf@plt>
  40dba0:	mov    r15d,r12d
  40dba3:	mov    r12d,DWORD PTR [rsp+0x1c]
  40dba8:	nop    DWORD PTR [rax+rax*1+0x0]
  40dbb0:	mov    r14,QWORD PTR [r14]
  40dbb3:	test   r14,r14
  40dbb6:	je     40dd27 <__flatcc_fb_gen_c_builder@@Base+0x2007>
  40dbbc:	test   BYTE PTR [r14+0x70],0x4
  40dbc1:	jne    40dbb0 <__flatcc_fb_gen_c_builder@@Base+0x1e90>
  40dbc3:	movzx  eax,WORD PTR [r14+0x28]
  40dbc8:	cmp    ax,0x8
  40dbcc:	je     40dc00 <__flatcc_fb_gen_c_builder@@Base+0x1ee0>
  40dbce:	cmp    ax,0xe
  40dbd2:	jne    40dd3c <__flatcc_fb_gen_c_builder@@Base+0x201c>
  40dbd8:	mov    rsi,QWORD PTR [r14+0x18]
  40dbdc:	cmp    WORD PTR [rsi+0x10],0x1
  40dbe1:	jne    40dc44 <__flatcc_fb_gen_c_builder@@Base+0x1f24>
  40dbe3:	mov    rdi,r13
  40dbe6:	mov    edx,r15d
  40dbe9:	mov    ecx,DWORD PTR [rsp+0xc]
  40dbed:	mov    r8d,r12d
  40dbf0:	vzeroupper 
  40dbf3:	call   40dab0 <__flatcc_fb_gen_c_builder@@Base+0x1d90>
  40dbf8:	mov    r15d,eax
  40dbfb:	jmp    40dbb0 <__flatcc_fb_gen_c_builder@@Base+0x1e90>
  40dbfd:	nop    DWORD PTR [rax]
  40dc00:	cmp    DWORD PTR [rsp+0xc],0x0
  40dc05:	je     40dca5 <__flatcc_fb_gen_c_builder@@Base+0x1f85>
  40dc0b:	test   r15d,r15d
  40dc0e:	je     40dc7e <__flatcc_fb_gen_c_builder@@Base+0x1f5e>
  40dc10:	mov    rcx,QWORD PTR [r13+0xd0]
  40dc17:	test   r15b,0x3
  40dc1b:	jne    40dc8c <__flatcc_fb_gen_c_builder@@Base+0x1f6c>
  40dc1d:	mov    eax,DWORD PTR [rsp+0xc]
  40dc21:	sub    eax,r15d
  40dc24:	cmp    eax,0x2
  40dc27:	jle    40dc8c <__flatcc_fb_gen_c_builder@@Base+0x1f6c>
  40dc29:	mov    rdi,rcx
  40dc2c:	lea    rsi,[rip+0x316c9]        # 43f2fc <_IO_stdin_used@@Base+0x122fc>
  40dc33:	mov    rdx,QWORD PTR [rsp+0x10]
  40dc38:	xor    eax,eax
  40dc3a:	vzeroupper 
  40dc3d:	call   406170 <fprintf@plt>
  40dc42:	jmp    40dca5 <__flatcc_fb_gen_c_builder@@Base+0x1f85>
  40dc44:	cmp    DWORD PTR [rsp+0xc],0x0
  40dc49:	je     40db69 <__flatcc_fb_gen_c_builder@@Base+0x1e49>
  40dc4f:	test   r15d,r15d
  40dc52:	je     40dcf7 <__flatcc_fb_gen_c_builder@@Base+0x1fd7>
  40dc58:	mov    rcx,QWORD PTR [r13+0xd0]
  40dc5f:	test   r15b,0x3
  40dc63:	jne    40db50 <__flatcc_fb_gen_c_builder@@Base+0x1e30>
  40dc69:	mov    eax,DWORD PTR [rsp+0xc]
  40dc6d:	sub    eax,r15d
  40dc70:	cmp    eax,0x2
  40dc73:	jg     40dd09 <__flatcc_fb_gen_c_builder@@Base+0x1fe9>
  40dc79:	jmp    40db50 <__flatcc_fb_gen_c_builder@@Base+0x1e30>
  40dc7e:	mov    rcx,QWORD PTR [r13+0xd0]
  40dc85:	cmp    DWORD PTR [rsp+0xc],0x5
  40dc8a:	jge    40dc29 <__flatcc_fb_gen_c_builder@@Base+0x1f09>
  40dc8c:	mov    esi,0x2
  40dc91:	mov    edx,0x1
  40dc96:	lea    rdi,[rip+0x36fff]        # 444c9c <_IO_stdin_used@@Base+0x17c9c>
  40dc9d:	vzeroupper 
  40dca0:	call   406220 <fwrite@plt>
  40dca5:	mov    ecx,DWORD PTR [r14+0x18]
  40dca9:	lea    eax,[rcx-0x1]
  40dcac:	cmp    eax,0xb
  40dcaf:	jae    40dd88 <__flatcc_fb_gen_c_builder@@Base+0x2068>
  40dcb5:	cmp    ecx,0x5
  40dcb8:	lea    rdx,[rip+0x20890]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  40dcbf:	cmove  rdx,r13
  40dcc3:	cdqe   
  40dcc5:	lea    rcx,[rip+0x41ee4]        # 44fbb0 <fb_value_set_deleted@@Base+0x6130>
  40dccc:	mov    rcx,QWORD PTR [rcx+rax*8]
  40dcd0:	mov    rdi,QWORD PTR [r13+0xd0]
  40dcd7:	lea    ebx,[r15+0x1]
  40dcdb:	lea    rsi,[rip+0x31593]        # 43f275 <_IO_stdin_used@@Base+0x12275>
  40dce2:	mov    r8d,r15d
  40dce5:	xor    eax,eax
  40dce7:	vzeroupper 
  40dcea:	call   406170 <fprintf@plt>
  40dcef:	mov    r15d,ebx
  40dcf2:	jmp    40dbb0 <__flatcc_fb_gen_c_builder@@Base+0x1e90>
  40dcf7:	mov    rcx,QWORD PTR [r13+0xd0]
  40dcfe:	cmp    DWORD PTR [rsp+0xc],0x5
  40dd03:	jl     40db50 <__flatcc_fb_gen_c_builder@@Base+0x1e30>
  40dd09:	mov    rdi,rcx
  40dd0c:	lea    rsi,[rip+0x315e9]        # 43f2fc <_IO_stdin_used@@Base+0x122fc>
  40dd13:	mov    rdx,QWORD PTR [rsp+0x10]
  40dd18:	xor    eax,eax
  40dd1a:	vzeroupper 
  40dd1d:	call   406170 <fprintf@plt>
  40dd22:	jmp    40db69 <__flatcc_fb_gen_c_builder@@Base+0x1e49>
  40dd27:	mov    eax,r15d
  40dd2a:	lea    rsp,[rbp-0x28]
  40dd2e:	pop    rbx
  40dd2f:	pop    r12
  40dd31:	pop    r13
  40dd33:	pop    r14
  40dd35:	pop    r15
  40dd37:	pop    rbp
  40dd38:	vzeroupper 
  40dd3b:	ret    
  40dd3c:	mov    rax,QWORD PTR [rip+0x422b5]        # 44fff8 <stderr@GLIBC_2.2.5>
  40dd43:	mov    rdi,QWORD PTR [rax]
  40dd46:	lea    rsi,[rip+0x206e7]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40dd4d:	lea    rbx,[rip+0x312bc]        # 43f010 <_IO_stdin_used@@Base+0x12010>
  40dd54:	lea    r8,[rip+0x31523]        # 43f27e <_IO_stdin_used@@Base+0x1227e>
  40dd5b:	mov    rdx,rbx
  40dd5e:	mov    ecx,0x352
  40dd63:	xor    eax,eax
  40dd65:	vzeroupper 
  40dd68:	call   406170 <fprintf@plt>
  40dd6d:	lea    rdi,[rip+0x31627]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40dd74:	lea    rcx,[rip+0x31531]        # 43f2ac <_IO_stdin_used@@Base+0x122ac>
  40dd7b:	mov    rsi,rbx
  40dd7e:	mov    edx,0x352
  40dd83:	call   4060f0 <__assert_fail@plt>
  40dd88:	mov    rax,QWORD PTR [rip+0x42269]        # 44fff8 <stderr@GLIBC_2.2.5>
  40dd8f:	mov    rdi,QWORD PTR [rax]
  40dd92:	lea    rsi,[rip+0x2069b]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40dd99:	lea    rbx,[rip+0x26e46]        # 434be6 <_IO_stdin_used@@Base+0x7be6>
  40dda0:	lea    r8,[rip+0x26ea2]        # 434c49 <_IO_stdin_used@@Base+0x7c49>
  40dda7:	mov    rdx,rbx
  40ddaa:	mov    ecx,0x8d
  40ddaf:	xor    eax,eax
  40ddb1:	vzeroupper 
  40ddb4:	call   406170 <fprintf@plt>
  40ddb9:	lea    rdi,[rip+0x315db]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40ddc0:	lea    rcx,[rip+0x26eb9]        # 434c80 <_IO_stdin_used@@Base+0x7c80>
  40ddc7:	mov    rsi,rbx
  40ddca:	mov    edx,0x8d
  40ddcf:	call   4060f0 <__assert_fail@plt>
  40ddd4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40ddde:	xchg   ax,ax
  40dde0:	push   rbp
  40dde1:	mov    rbp,rsp
  40dde4:	push   r15
  40dde6:	push   r14
  40dde8:	push   r13
  40ddea:	push   r12
  40ddec:	push   rbx
  40dded:	and    rsp,0xffffffffffffffe0
  40ddf1:	sub    rsp,0x140
  40ddf8:	mov    DWORD PTR [rsp+0x18],r8d
  40ddfd:	mov    DWORD PTR [rsp+0x1c],edx
  40de01:	mov    rbx,rdi
  40de04:	vxorps xmm0,xmm0,xmm0
  40de08:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  40de11:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40de1a:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40de23:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40de2c:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40de35:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40de3b:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40de41:	mov    QWORD PTR [rsp+0x120],0x0
  40de4d:	cmp    ecx,0x1
  40de50:	lea    rax,[rip+0x314b2]        # 43f309 <_IO_stdin_used@@Base+0x12309>
  40de57:	lea    rdx,[rip+0x206f1]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  40de5e:	cmove  rdx,rax
  40de62:	mov    DWORD PTR [rsp+0x28],ecx
  40de66:	cmp    ecx,0x2
  40de69:	lea    rax,[rip+0x31492]        # 43f302 <_IO_stdin_used@@Base+0x12302>
  40de70:	cmovne rax,rdx
  40de74:	mov    QWORD PTR [rsp+0x30],rax
  40de79:	mov    r12,QWORD PTR [rsi+0x28]
  40de7d:	test   r12,r12
  40de80:	je     40e2c8 <__flatcc_fb_gen_c_builder@@Base+0x25a8>
  40de86:	xor    r13d,r13d
  40de89:	xor    eax,eax
  40de8b:	mov    QWORD PTR [rsp+0x20],rax
  40de90:	jmp    40ded9 <__flatcc_fb_gen_c_builder@@Base+0x21b9>
  40de92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40de9c:	nop    DWORD PTR [rax+0x0]
  40dea0:	mov    rdi,QWORD PTR [rbx+0xd0]
  40dea7:	mov    rdx,QWORD PTR [rsp+0x20]
  40deac:	lea    r14d,[rdx+0x1]
  40deb0:	lea    rsi,[rip+0x314d0]        # 43f387 <_IO_stdin_used@@Base+0x12387>
  40deb7:	xor    eax,eax
  40deb9:	vzeroupper 
  40debc:	call   406170 <fprintf@plt>
  40dec1:	inc    r13d
  40dec4:	mov    eax,r14d
  40dec7:	mov    QWORD PTR [rsp+0x20],rax
  40decc:	mov    r12,QWORD PTR [r12]
  40ded0:	test   r12,r12
  40ded3:	je     40e2c8 <__flatcc_fb_gen_c_builder@@Base+0x25a8>
  40ded9:	mov    rax,QWORD PTR [r12+0x8]
  40dede:	mov    r15d,DWORD PTR [rax+0x8]
  40dee2:	mov    r14,QWORD PTR [rax]
  40dee5:	test   r13d,r13d
  40dee8:	jle    40df29 <__flatcc_fb_gen_c_builder@@Base+0x2209>
  40deea:	mov    rcx,QWORD PTR [rbx+0xd0]
  40def1:	test   r13b,0x3
  40def5:	je     40df10 <__flatcc_fb_gen_c_builder@@Base+0x21f0>
  40def7:	mov    esi,0x2
  40defc:	mov    edx,0x1
  40df01:	lea    rdi,[rip+0x3140f]        # 43f317 <_IO_stdin_used@@Base+0x12317>
  40df08:	jmp    40df21 <__flatcc_fb_gen_c_builder@@Base+0x2201>
  40df0a:	nop    WORD PTR [rax+rax*1+0x0]
  40df10:	mov    esi,0x4
  40df15:	mov    edx,0x1
  40df1a:	lea    rdi,[rip+0x313f1]        # 43f312 <_IO_stdin_used@@Base+0x12312>
  40df21:	vzeroupper 
  40df24:	call   406220 <fwrite@plt>
  40df29:	movzx  eax,WORD PTR [r12+0x28]
  40df2f:	cmp    ax,0x8
  40df33:	je     40dfc0 <__flatcc_fb_gen_c_builder@@Base+0x22a0>
  40df39:	cmp    ax,0xe
  40df3d:	jne    40e301 <__flatcc_fb_gen_c_builder@@Base+0x25e1>
  40df43:	mov    rsi,QWORD PTR [r12+0x18]
  40df48:	mov    rdi,QWORD PTR [rsi+0x18]
  40df4c:	lea    rdx,[rsp+0x40]
  40df51:	vzeroupper 
  40df54:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40df59:	mov    rax,QWORD PTR [r12+0x18]
  40df5e:	cmp    WORD PTR [rax+0x10],0x1
  40df63:	movzx  eax,WORD PTR [r12+0x70]
  40df69:	jne    40e040 <__flatcc_fb_gen_c_builder@@Base+0x2320>
  40df6f:	mov    rdi,QWORD PTR [rbx+0xd0]
  40df76:	test   al,0x4
  40df78:	je     40e08d <__flatcc_fb_gen_c_builder@@Base+0x236d>
  40df7e:	lea    rsi,[rip+0x31395]        # 43f31a <_IO_stdin_used@@Base+0x1231a>
  40df85:	mov    r14,rbx
  40df88:	mov    rbx,QWORD PTR [rsp+0x20]
  40df8d:	mov    edx,ebx
  40df8f:	mov    ecx,ebx
  40df91:	xor    eax,eax
  40df93:	call   406170 <fprintf@plt>
  40df98:	inc    ebx
  40df9a:	mov    QWORD PTR [rsp+0x20],rbx
  40df9f:	mov    rbx,r14
  40dfa2:	mov    rdi,QWORD PTR [r12+0x18]
  40dfa7:	call   40da60 <__flatcc_fb_gen_c_builder@@Base+0x1d40>
  40dfac:	add    eax,r13d
  40dfaf:	mov    r13d,eax
  40dfb2:	jmp    40decc <__flatcc_fb_gen_c_builder@@Base+0x21ac>
  40dfb7:	nop    WORD PTR [rax+rax*1+0x0]
  40dfc0:	mov    eax,DWORD PTR [r12+0x18]
  40dfc5:	dec    eax
  40dfc7:	cmp    eax,0xb
  40dfca:	jae    40e34d <__flatcc_fb_gen_c_builder@@Base+0x262d>
  40dfd0:	test   BYTE PTR [r12+0x70],0x4
  40dfd6:	jne    40dea0 <__flatcc_fb_gen_c_builder@@Base+0x2180>
  40dfdc:	cdqe   
  40dfde:	lea    rcx,[rip+0x41c23]        # 44fc08 <fb_value_set_deleted@@Base+0x6188>
  40dfe5:	mov    rcx,QWORD PTR [rcx+rax*8]
  40dfe9:	cmp    QWORD PTR [r12+0x80],0x1
  40dff2:	mov    eax,DWORD PTR [rsp+0x28]
  40dff6:	mov    edx,0x0
  40dffb:	cmove  eax,edx
  40dffe:	cmp    eax,0x2
  40e001:	je     40e0e7 <__flatcc_fb_gen_c_builder@@Base+0x23c7>
  40e007:	cmp    eax,0x1
  40e00a:	jne    40e0b3 <__flatcc_fb_gen_c_builder@@Base+0x2393>
  40e010:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e017:	cmp    DWORD PTR [rsp+0x18],0x0
  40e01c:	je     40e243 <__flatcc_fb_gen_c_builder@@Base+0x2523>
  40e022:	mov    QWORD PTR [rsp+0x8],r14
  40e027:	mov    DWORD PTR [rsp],r15d
  40e02b:	lea    rsi,[rip+0x3138c]        # 43f3be <_IO_stdin_used@@Base+0x123be>
  40e032:	jmp    40e25b <__flatcc_fb_gen_c_builder@@Base+0x253b>
  40e037:	nop    WORD PTR [rax+rax*1+0x0]
  40e040:	test   al,0x4
  40e042:	jne    40dea0 <__flatcc_fb_gen_c_builder@@Base+0x2180>
  40e048:	cmp    QWORD PTR [r12+0x80],0x1
  40e051:	mov    eax,DWORD PTR [rsp+0x28]
  40e055:	mov    ecx,0x0
  40e05a:	cmove  eax,ecx
  40e05d:	cmp    eax,0x2
  40e060:	je     40e21a <__flatcc_fb_gen_c_builder@@Base+0x24fa>
  40e066:	cmp    eax,0x1
  40e069:	jne    40e0b3 <__flatcc_fb_gen_c_builder@@Base+0x2393>
  40e06b:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e072:	cmp    DWORD PTR [rsp+0x18],0x0
  40e077:	je     40e291 <__flatcc_fb_gen_c_builder@@Base+0x2571>
  40e07d:	mov    QWORD PTR [rsp],r14
  40e081:	lea    rsi,[rip+0x31338]        # 43f3c0 <_IO_stdin_used@@Base+0x123c0>
  40e088:	jmp    40e233 <__flatcc_fb_gen_c_builder@@Base+0x2513>
  40e08d:	cmp    DWORD PTR [rsp+0x18],0x0
  40e092:	je     40e10e <__flatcc_fb_gen_c_builder@@Base+0x23ee>
  40e094:	mov    QWORD PTR [rsp+0x8],r14
  40e099:	mov    DWORD PTR [rsp],r15d
  40e09d:	lea    rsi,[rip+0x312af]        # 43f353 <_IO_stdin_used@@Base+0x12353>
  40e0a4:	lea    rdx,[rsp+0x40]
  40e0a9:	mov    rcx,QWORD PTR [rsp+0x30]
  40e0ae:	jmp    40e25e <__flatcc_fb_gen_c_builder@@Base+0x253e>
  40e0b3:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e0ba:	cmp    DWORD PTR [rsp+0x18],0x0
  40e0bf:	je     40e1fb <__flatcc_fb_gen_c_builder@@Base+0x24db>
  40e0c5:	lea    rsi,[rip+0x312d1]        # 43f39d <_IO_stdin_used@@Base+0x1239d>
  40e0cc:	mov    edx,r15d
  40e0cf:	mov    rcx,r14
  40e0d2:	mov    r8d,r15d
  40e0d5:	mov    r9,r14
  40e0d8:	xor    eax,eax
  40e0da:	vzeroupper 
  40e0dd:	call   406170 <fprintf@plt>
  40e0e2:	jmp    40e2c0 <__flatcc_fb_gen_c_builder@@Base+0x25a0>
  40e0e7:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e0ee:	cmp    DWORD PTR [rsp+0x18],0x0
  40e0f3:	je     40e250 <__flatcc_fb_gen_c_builder@@Base+0x2530>
  40e0f9:	mov    QWORD PTR [rsp+0x8],r14
  40e0fe:	mov    DWORD PTR [rsp],r15d
  40e102:	lea    rsi,[rip+0x312ff]        # 43f408 <_IO_stdin_used@@Base+0x12408>
  40e109:	jmp    40e25b <__flatcc_fb_gen_c_builder@@Base+0x253b>
  40e10e:	lea    rsi,[rip+0x3125d]        # 43f372 <_IO_stdin_used@@Base+0x12372>
  40e115:	lea    rdx,[rsp+0x40]
  40e11a:	mov    rcx,QWORD PTR [rsp+0x30]
  40e11f:	mov    r8d,r15d
  40e122:	mov    r9,r14
  40e125:	xor    eax,eax
  40e127:	call   406170 <fprintf@plt>
  40e12c:	mov    rdi,QWORD PTR [r12+0x18]
  40e131:	call   40da60 <__flatcc_fb_gen_c_builder@@Base+0x1d40>
  40e136:	mov    DWORD PTR [rsp+0x2c],eax
  40e13a:	test   eax,eax
  40e13c:	jle    40e27b <__flatcc_fb_gen_c_builder@@Base+0x255b>
  40e142:	mov    QWORD PTR [rsp+0x38],r13
  40e147:	mov    r14,rbx
  40e14a:	xor    ebx,ebx
  40e14c:	mov    r13d,DWORD PTR [rsp+0x1c]
  40e151:	jmp    40e19d <__flatcc_fb_gen_c_builder@@Base+0x247d>
  40e153:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e15d:	nop    DWORD PTR [rax]
  40e160:	mov    esi,0x2
  40e165:	mov    edx,0x1
  40e16a:	lea    rdi,[rip+0x36b2b]        # 444c9c <_IO_stdin_used@@Base+0x17c9c>
  40e171:	call   406220 <fwrite@plt>
  40e176:	mov    rdi,QWORD PTR [r14+0xd0]
  40e17d:	lea    rsi,[rip+0x31236]        # 43f3ba <_IO_stdin_used@@Base+0x123ba>
  40e184:	mov    edx,r15d
  40e187:	xor    eax,eax
  40e189:	call   406170 <fprintf@plt>
  40e18e:	inc    ebx
  40e190:	dec    r13d
  40e193:	cmp    DWORD PTR [rsp+0x2c],ebx
  40e197:	je     40e270 <__flatcc_fb_gen_c_builder@@Base+0x2550>
  40e19d:	mov    rax,QWORD PTR [rsp+0x38]
  40e1a2:	lea    r15d,[rax+rbx*1]
  40e1a6:	cmp    DWORD PTR [rsp+0x1c],0x0
  40e1ab:	je     40e176 <__flatcc_fb_gen_c_builder@@Base+0x2456>
  40e1ad:	test   ebx,ebx
  40e1af:	je     40e1d0 <__flatcc_fb_gen_c_builder@@Base+0x24b0>
  40e1b1:	mov    rcx,QWORD PTR [r14+0xd0]
  40e1b8:	test   bl,0x3
  40e1bb:	jne    40e160 <__flatcc_fb_gen_c_builder@@Base+0x2440>
  40e1bd:	cmp    r13d,0x2
  40e1c1:	jg     40e1de <__flatcc_fb_gen_c_builder@@Base+0x24be>
  40e1c3:	jmp    40e160 <__flatcc_fb_gen_c_builder@@Base+0x2440>
  40e1c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e1cf:	nop
  40e1d0:	mov    rcx,QWORD PTR [r14+0xd0]
  40e1d7:	cmp    DWORD PTR [rsp+0x1c],0x5
  40e1dc:	jl     40e160 <__flatcc_fb_gen_c_builder@@Base+0x2440>
  40e1de:	mov    rdi,rcx
  40e1e1:	lea    rsi,[rip+0x31114]        # 43f2fc <_IO_stdin_used@@Base+0x122fc>
  40e1e8:	lea    rdx,[rip+0x2035f]        # 42e54e <_IO_stdin_used@@Base+0x154e>
  40e1ef:	xor    eax,eax
  40e1f1:	call   406170 <fprintf@plt>
  40e1f6:	jmp    40e176 <__flatcc_fb_gen_c_builder@@Base+0x2456>
  40e1fb:	lea    rsi,[rip+0x311ae]        # 43f3b0 <_IO_stdin_used@@Base+0x123b0>
  40e202:	mov    edx,r15d
  40e205:	mov    rcx,r14
  40e208:	mov    r8d,r13d
  40e20b:	xor    eax,eax
  40e20d:	vzeroupper 
  40e210:	call   406170 <fprintf@plt>
  40e215:	jmp    40e2c0 <__flatcc_fb_gen_c_builder@@Base+0x25a0>
  40e21a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40e221:	cmp    DWORD PTR [rsp+0x18],0x0
  40e226:	je     40e29a <__flatcc_fb_gen_c_builder@@Base+0x257a>
  40e228:	mov    QWORD PTR [rsp],r14
  40e22c:	lea    rsi,[rip+0x311d7]        # 43f40a <_IO_stdin_used@@Base+0x1240a>
  40e233:	lea    rdx,[rsp+0x40]
  40e238:	mov    ecx,r15d
  40e23b:	mov    r8,r14
  40e23e:	mov    r9d,r15d
  40e241:	jmp    40e2af <__flatcc_fb_gen_c_builder@@Base+0x258f>
  40e243:	mov    DWORD PTR [rsp],r13d
  40e247:	lea    rsi,[rip+0x31197]        # 43f3e5 <_IO_stdin_used@@Base+0x123e5>
  40e24e:	jmp    40e25b <__flatcc_fb_gen_c_builder@@Base+0x253b>
  40e250:	mov    DWORD PTR [rsp],r13d
  40e254:	lea    rsi,[rip+0x311d2]        # 43f42d <_IO_stdin_used@@Base+0x1242d>
  40e25b:	mov    rdx,rbx
  40e25e:	mov    r8d,r15d
  40e261:	mov    r9,r14
  40e264:	xor    eax,eax
  40e266:	vzeroupper 
  40e269:	call   406170 <fprintf@plt>
  40e26e:	jmp    40e2c0 <__flatcc_fb_gen_c_builder@@Base+0x25a0>
  40e270:	mov    r13,QWORD PTR [rsp+0x38]
  40e275:	add    r13d,ebx
  40e278:	mov    rbx,r14
  40e27b:	mov    rsi,QWORD PTR [rbx+0xd0]
  40e282:	mov    edi,0x29
  40e287:	call   406110 <fputc@plt>
  40e28c:	jmp    40decc <__flatcc_fb_gen_c_builder@@Base+0x21ac>
  40e291:	lea    rsi,[rip+0x3114f]        # 43f3e7 <_IO_stdin_used@@Base+0x123e7>
  40e298:	jmp    40e2a1 <__flatcc_fb_gen_c_builder@@Base+0x2581>
  40e29a:	lea    rsi,[rip+0x3118e]        # 43f42f <_IO_stdin_used@@Base+0x1242f>
  40e2a1:	lea    rdx,[rsp+0x40]
  40e2a6:	mov    ecx,r15d
  40e2a9:	mov    r8,r14
  40e2ac:	mov    r9d,r13d
  40e2af:	xor    eax,eax
  40e2b1:	call   406170 <fprintf@plt>
  40e2b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e2c0:	inc    r13d
  40e2c3:	jmp    40decc <__flatcc_fb_gen_c_builder@@Base+0x21ac>
  40e2c8:	cmp    DWORD PTR [rsp+0x1c],0x0
  40e2cd:	jle    40e2ef <__flatcc_fb_gen_c_builder@@Base+0x25cf>
  40e2cf:	mov    rcx,QWORD PTR [rbx+0xd0]
  40e2d6:	lea    rdi,[rip+0x31035]        # 43f312 <_IO_stdin_used@@Base+0x12312>
  40e2dd:	mov    esi,0x4
  40e2e2:	mov    edx,0x1
  40e2e7:	vzeroupper 
  40e2ea:	call   406220 <fwrite@plt>
  40e2ef:	lea    rsp,[rbp-0x28]
  40e2f3:	pop    rbx
  40e2f4:	pop    r12
  40e2f6:	pop    r13
  40e2f8:	pop    r14
  40e2fa:	pop    r15
  40e2fc:	pop    rbp
  40e2fd:	vzeroupper 
  40e300:	ret    
  40e301:	mov    rax,QWORD PTR [rip+0x41cf0]        # 44fff8 <stderr@GLIBC_2.2.5>
  40e308:	mov    rdi,QWORD PTR [rax]
  40e30b:	lea    rsi,[rip+0x20122]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40e312:	lea    rbx,[rip+0x30cf7]        # 43f010 <_IO_stdin_used@@Base+0x12010>
  40e319:	lea    r8,[rip+0x3112e]        # 43f44e <_IO_stdin_used@@Base+0x1244e>
  40e320:	mov    rdx,rbx
  40e323:	mov    ecx,0x3e1
  40e328:	xor    eax,eax
  40e32a:	vzeroupper 
  40e32d:	call   406170 <fprintf@plt>
  40e332:	lea    rdi,[rip+0x31062]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40e339:	lea    rcx,[rip+0x31129]        # 43f469 <_IO_stdin_used@@Base+0x12469>
  40e340:	mov    rsi,rbx
  40e343:	mov    edx,0x3e1
  40e348:	call   4060f0 <__assert_fail@plt>
  40e34d:	mov    rax,QWORD PTR [rip+0x41ca4]        # 44fff8 <stderr@GLIBC_2.2.5>
  40e354:	mov    rdi,QWORD PTR [rax]
  40e357:	lea    rsi,[rip+0x200d6]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40e35e:	lea    rbx,[rip+0x26881]        # 434be6 <_IO_stdin_used@@Base+0x7be6>
  40e365:	lea    r8,[rip+0x268dd]        # 434c49 <_IO_stdin_used@@Base+0x7c49>
  40e36c:	mov    rdx,rbx
  40e36f:	mov    ecx,0x60
  40e374:	xor    eax,eax
  40e376:	vzeroupper 
  40e379:	call   406170 <fprintf@plt>
  40e37e:	lea    rdi,[rip+0x31016]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40e385:	lea    rcx,[rip+0x271ed]        # 435579 <_IO_stdin_used@@Base+0x8579>
  40e38c:	mov    rsi,rbx
  40e38f:	mov    edx,0x60
  40e394:	call   4060f0 <__assert_fail@plt>
  40e399:	nop    DWORD PTR [rax+0x0]
  40e3a0:	push   rbp
  40e3a1:	mov    rbp,rsp
  40e3a4:	push   r15
  40e3a6:	push   r14
  40e3a8:	push   r13
  40e3aa:	push   r12
  40e3ac:	push   rbx
  40e3ad:	and    rsp,0xffffffffffffffe0
  40e3b1:	sub    rsp,0x200
  40e3b8:	mov    rax,QWORD PTR [rdi+0xd8]
  40e3bf:	mov    r14,QWORD PTR [rax+0x40]
  40e3c3:	test   r14,r14
  40e3c6:	je     40e5d8 <__flatcc_fb_gen_c_builder@@Base+0x28b8>
  40e3cc:	mov    r15,rdi
  40e3cf:	lea    rbx,[rsp+0x100]
  40e3d7:	mov    r13,rsp
  40e3da:	xor    eax,eax
  40e3dc:	cmp    WORD PTR [r14+0x10],0x4
  40e3e2:	jne    40e413 <__flatcc_fb_gen_c_builder@@Base+0x26f3>
  40e3e4:	jmp    40e427 <__flatcc_fb_gen_c_builder@@Base+0x2707>
  40e3e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e3f0:	mov    rdi,QWORD PTR [r15+0xd0]
  40e3f7:	lea    rsi,[rip+0x314e4]        # 43f8e2 <_IO_stdin_used@@Base+0x128e2>
  40e3fe:	mov    rdx,r15
  40e401:	mov    rcx,r15
  40e404:	mov    r8,rbx
  40e407:	xor    eax,eax
  40e409:	call   406170 <fprintf@plt>
  40e40e:	mov    eax,0x1
  40e413:	mov    r14,QWORD PTR [r14]
  40e416:	test   r14,r14
  40e419:	je     40e5c3 <__flatcc_fb_gen_c_builder@@Base+0x28a3>
  40e41f:	cmp    WORD PTR [r14+0x10],0x4
  40e425:	jne    40e413 <__flatcc_fb_gen_c_builder@@Base+0x26f3>
  40e427:	vxorps xmm0,xmm0,xmm0
  40e42b:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  40e434:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  40e43d:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  40e446:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40e44f:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  40e458:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  40e461:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  40e46a:	mov    QWORD PTR [rsp+0x1e0],0x0
  40e476:	vmovaps YMMWORD PTR [rsp],ymm0
  40e47b:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40e481:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40e487:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40e48d:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40e496:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40e49f:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40e4a8:	mov    QWORD PTR [rsp+0xe0],0x0
  40e4b4:	mov    rdi,QWORD PTR [r14+0x18]
  40e4b8:	mov    rsi,r14
  40e4bb:	mov    rdx,rbx
  40e4be:	vzeroupper 
  40e4c1:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40e4c6:	mov    r12,QWORD PTR [r14+0x28]
  40e4ca:	test   r12,r12
  40e4cd:	jne    40e527 <__flatcc_fb_gen_c_builder@@Base+0x2807>
  40e4cf:	jmp    40e3f0 <__flatcc_fb_gen_c_builder@@Base+0x26d0>
  40e4d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e4de:	xchg   ax,ax
  40e4e0:	mov    rax,QWORD PTR [r12+0x8]
  40e4e5:	mov    r8d,DWORD PTR [rax+0x8]
  40e4e9:	mov    r9,QWORD PTR [rax]
  40e4ec:	mov    rdi,QWORD PTR [r15+0xd0]
  40e4f3:	sub    rsp,0x8
  40e4f7:	lea    rsi,[rip+0x31285]        # 43f783 <_IO_stdin_used@@Base+0x12783>
  40e4fe:	mov    rdx,rbx
  40e501:	mov    rcx,rbx
  40e504:	mov    eax,0x0
  40e509:	push   r9
  40e50b:	push   r8
  40e50d:	push   rbx
  40e50e:	push   rbx
  40e50f:	push   r15
  40e511:	call   406170 <fprintf@plt>
  40e516:	add    rsp,0x30
  40e51a:	mov    r12,QWORD PTR [r12]
  40e51e:	test   r12,r12
  40e521:	je     40e3f0 <__flatcc_fb_gen_c_builder@@Base+0x26d0>
  40e527:	movzx  eax,WORD PTR [r12+0x28]
  40e52d:	test   ax,ax
  40e530:	je     40e590 <__flatcc_fb_gen_c_builder@@Base+0x2870>
  40e532:	cmp    ax,0xa
  40e536:	je     40e4e0 <__flatcc_fb_gen_c_builder@@Base+0x27c0>
  40e538:	cmp    ax,0xe
  40e53c:	jne    40e5e7 <__flatcc_fb_gen_c_builder@@Base+0x28c7>
  40e542:	mov    rsi,QWORD PTR [r12+0x18]
  40e547:	mov    rdi,QWORD PTR [rsi+0x18]
  40e54b:	mov    rdx,r13
  40e54e:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40e553:	mov    rax,QWORD PTR [r12+0x8]
  40e558:	mov    r8d,DWORD PTR [rax+0x8]
  40e55c:	mov    r9,QWORD PTR [rax]
  40e55f:	mov    rdi,QWORD PTR [r15+0xd0]
  40e566:	sub    rsp,0x8
  40e56a:	lea    rsi,[rip+0x3118e]        # 43f6ff <_IO_stdin_used@@Base+0x126ff>
  40e571:	mov    rdx,rbx
  40e574:	mov    rcx,rbx
  40e577:	mov    eax,0x0
  40e57c:	push   r9
  40e57e:	push   r8
  40e580:	push   rbx
  40e581:	push   rbx
  40e582:	push   r13
  40e584:	jmp    40e511 <__flatcc_fb_gen_c_builder@@Base+0x27f1>
  40e586:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e590:	mov    rdi,QWORD PTR [r15+0xd0]
  40e597:	lea    rsi,[rip+0x3126f]        # 43f80d <_IO_stdin_used@@Base+0x1280d>
  40e59e:	mov    rdx,rbx
  40e5a1:	mov    rcx,rbx
  40e5a4:	mov    r8,rbx
  40e5a7:	mov    r9,rbx
  40e5aa:	xor    eax,eax
  40e5ac:	call   406170 <fprintf@plt>
  40e5b1:	mov    r12,QWORD PTR [r12]
  40e5b5:	test   r12,r12
  40e5b8:	jne    40e527 <__flatcc_fb_gen_c_builder@@Base+0x2807>
  40e5be:	jmp    40e3f0 <__flatcc_fb_gen_c_builder@@Base+0x26d0>
  40e5c3:	test   eax,eax
  40e5c5:	je     40e5d8 <__flatcc_fb_gen_c_builder@@Base+0x28b8>
  40e5c7:	mov    rsi,QWORD PTR [r15+0xd0]
  40e5ce:	mov    edi,0xa
  40e5d3:	call   406110 <fputc@plt>
  40e5d8:	lea    rsp,[rbp-0x28]
  40e5dc:	pop    rbx
  40e5dd:	pop    r12
  40e5df:	pop    r13
  40e5e1:	pop    r14
  40e5e3:	pop    r15
  40e5e5:	pop    rbp
  40e5e6:	ret    
  40e5e7:	mov    rax,QWORD PTR [rip+0x41a0a]        # 44fff8 <stderr@GLIBC_2.2.5>
  40e5ee:	mov    rdi,QWORD PTR [rax]
  40e5f1:	lea    rsi,[rip+0x1fe3c]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40e5f8:	lea    rbx,[rip+0x30a11]        # 43f010 <_IO_stdin_used@@Base+0x12010>
  40e5ff:	lea    r8,[rip+0x3127d]        # 43f883 <_IO_stdin_used@@Base+0x12883>
  40e606:	mov    rdx,rbx
  40e609:	mov    ecx,0x648
  40e60e:	xor    eax,eax
  40e610:	call   406170 <fprintf@plt>
  40e615:	lea    rdi,[rip+0x30d7f]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40e61c:	lea    rcx,[rip+0x3128c]        # 43f8af <_IO_stdin_used@@Base+0x128af>
  40e623:	mov    rsi,rbx
  40e626:	mov    edx,0x648
  40e62b:	call   4060f0 <__assert_fail@plt>
  40e630:	push   rbx
  40e631:	mov    ecx,DWORD PTR [rsi+0x10]
  40e634:	add    ecx,0xfffffffd
  40e637:	cmp    cx,0x3
  40e63b:	ja     40e707 <__flatcc_fb_gen_c_builder@@Base+0x29e7>
  40e641:	mov    rax,rdx
  40e644:	movzx  ecx,cx
  40e647:	lea    rdx,[rip+0x2817a]        # 4367c8 <_IO_stdin_used@@Base+0x97c8>
  40e64e:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  40e652:	add    rcx,rdx
  40e655:	jmp    rcx
  40e657:	vmovsd xmm0,QWORD PTR [rsi]
  40e65b:	cmp    edi,0xb
  40e65e:	jne    40e6f5 <__flatcc_fb_gen_c_builder@@Base+0x29d5>
  40e664:	vcvtsd2ss xmm0,xmm0,xmm0
  40e668:	vcvtss2sd xmm0,xmm0,xmm0
  40e66c:	lea    rsi,[rip+0x26663]        # 434cd6 <_IO_stdin_used@@Base+0x7cd6>
  40e673:	jmp    40e6fc <__flatcc_fb_gen_c_builder@@Base+0x29dc>
  40e678:	dec    edi
  40e67a:	cmp    edi,0x9
  40e67d:	jae    40e750 <__flatcc_fb_gen_c_builder@@Base+0x2a30>
  40e683:	movsxd rcx,edi
  40e686:	lea    rdx,[rip+0x415d3]        # 44fc60 <fb_value_set_deleted@@Base+0x61e0>
  40e68d:	mov    rdx,QWORD PTR [rdx+rcx*8]
  40e691:	mov    rcx,QWORD PTR [rsi]
  40e694:	lea    rsi,[rip+0x26622]        # 434cbd <_IO_stdin_used@@Base+0x7cbd>
  40e69b:	jmp    40e6ea <__flatcc_fb_gen_c_builder@@Base+0x29ca>
  40e69d:	dec    edi
  40e69f:	cmp    edi,0x9
  40e6a2:	jae    40e750 <__flatcc_fb_gen_c_builder@@Base+0x2a30>
  40e6a8:	movsxd rcx,edi
  40e6ab:	lea    rdx,[rip+0x415ae]        # 44fc60 <fb_value_set_deleted@@Base+0x61e0>
  40e6b2:	mov    rdx,QWORD PTR [rdx+rcx*8]
  40e6b6:	movzx  ecx,BYTE PTR [rsi]
  40e6b9:	lea    rsi,[rip+0x2660f]        # 434ccf <_IO_stdin_used@@Base+0x7ccf>
  40e6c0:	mov    rdi,rax
  40e6c3:	xor    eax,eax
  40e6c5:	pop    rbx
  40e6c6:	jmp    406200 <sprintf@plt>
  40e6cb:	dec    edi
  40e6cd:	cmp    edi,0x9
  40e6d0:	jae    40e750 <__flatcc_fb_gen_c_builder@@Base+0x2a30>
  40e6d2:	movsxd rcx,edi
  40e6d5:	lea    rdx,[rip+0x41584]        # 44fc60 <fb_value_set_deleted@@Base+0x61e0>
  40e6dc:	mov    rdx,QWORD PTR [rdx+rcx*8]
  40e6e0:	mov    rcx,QWORD PTR [rsi]
  40e6e3:	lea    rsi,[rip+0x265dc]        # 434cc6 <_IO_stdin_used@@Base+0x7cc6>
  40e6ea:	mov    rdi,rax
  40e6ed:	xor    eax,eax
  40e6ef:	pop    rbx
  40e6f0:	jmp    406200 <sprintf@plt>
  40e6f5:	lea    rsi,[rip+0x265de]        # 434cda <_IO_stdin_used@@Base+0x7cda>
  40e6fc:	mov    rdi,rax
  40e6ff:	mov    al,0x1
  40e701:	pop    rbx
  40e702:	jmp    406200 <sprintf@plt>
  40e707:	mov    rax,QWORD PTR [rip+0x418ea]        # 44fff8 <stderr@GLIBC_2.2.5>
  40e70e:	mov    rdi,QWORD PTR [rax]
  40e711:	lea    rsi,[rip+0x1fd1c]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40e718:	lea    rbx,[rip+0x264c7]        # 434be6 <_IO_stdin_used@@Base+0x7be6>
  40e71f:	lea    r8,[rip+0x26523]        # 434c49 <_IO_stdin_used@@Base+0x7c49>
  40e726:	mov    rdx,rbx
  40e729:	mov    ecx,0x104
  40e72e:	xor    eax,eax
  40e730:	call   406170 <fprintf@plt>
  40e735:	lea    rdi,[rip+0x30c5f]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40e73c:	lea    rcx,[rip+0x2659b]        # 434cde <_IO_stdin_used@@Base+0x7cde>
  40e743:	mov    rsi,rbx
  40e746:	mov    edx,0x104
  40e74b:	call   4060f0 <__assert_fail@plt>
  40e750:	mov    rax,QWORD PTR [rip+0x418a1]        # 44fff8 <stderr@GLIBC_2.2.5>
  40e757:	mov    rdi,QWORD PTR [rax]
  40e75a:	lea    rsi,[rip+0x1fcd3]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40e761:	lea    rbx,[rip+0x2647e]        # 434be6 <_IO_stdin_used@@Base+0x7be6>
  40e768:	lea    r8,[rip+0x264da]        # 434c49 <_IO_stdin_used@@Base+0x7c49>
  40e76f:	mov    rdx,rbx
  40e772:	mov    ecx,0xe2
  40e777:	xor    eax,eax
  40e779:	call   406170 <fprintf@plt>
  40e77e:	lea    rdi,[rip+0x30c16]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40e785:	lea    rcx,[rip+0x265b8]        # 434d44 <_IO_stdin_used@@Base+0x7d44>
  40e78c:	mov    rsi,rbx
  40e78f:	mov    edx,0xe2
  40e794:	call   4060f0 <__assert_fail@plt>
  40e799:	nop    DWORD PTR [rax+0x0]
  40e7a0:	push   rbp
  40e7a1:	mov    rbp,rsp
  40e7a4:	push   r15
  40e7a6:	push   r14
  40e7a8:	push   r13
  40e7aa:	push   r12
  40e7ac:	push   rbx
  40e7ad:	and    rsp,0xffffffffffffffe0
  40e7b1:	sub    rsp,0x220
  40e7b8:	mov    rbx,r8
  40e7bb:	mov    QWORD PTR [rsp+0x18],rcx
  40e7c0:	mov    QWORD PTR [rsp+0x10],rdx
  40e7c5:	mov    QWORD PTR [rsp+0x8],rsi
  40e7ca:	mov    r13,rdi
  40e7cd:	test   r9d,r9d
  40e7d0:	lea    rax,[rip+0x390f3]        # 4478ca <fb_schema_table_deleted@@Base+0x2182>
  40e7d7:	lea    rcx,[rip+0x3151a]        # 43fcf8 <_IO_stdin_used@@Base+0x12cf8>
  40e7de:	vxorps xmm0,xmm0,xmm0
  40e7e2:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  40e7eb:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  40e7f4:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40e7fd:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  40e806:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  40e80f:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  40e818:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  40e821:	cmove  rcx,rax
  40e825:	mov    QWORD PTR [rsp],rcx
  40e829:	mov    QWORD PTR [rsp+0x200],0x0
  40e835:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40e83b:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40e841:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40e847:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40e850:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40e859:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40e862:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40e86b:	mov    QWORD PTR [rsp+0x100],0x0
  40e877:	mov    rdi,QWORD PTR [r8+0x18]
  40e87b:	lea    rdx,[rsp+0x120]
  40e883:	mov    rsi,r8
  40e886:	vzeroupper 
  40e889:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40e88e:	mov    r14,QWORD PTR [rbx+0x28]
  40e892:	test   r14,r14
  40e895:	je     40e986 <__flatcc_fb_gen_c_builder@@Base+0x2c66>
  40e89b:	lea    rbx,[rsp+0x20]
  40e8a0:	jmp    40e906 <__flatcc_fb_gen_c_builder@@Base+0x2be6>
  40e8a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40e8ac:	nop    DWORD PTR [rax+0x0]
  40e8b0:	mov    rdi,QWORD PTR [r13+0xd0]
  40e8b7:	sub    rsp,0x8
  40e8bb:	lea    rsi,[rip+0x31550]        # 43fe12 <_IO_stdin_used@@Base+0x12e12>
  40e8c2:	mov    rdx,r13
  40e8c5:	mov    rcx,QWORD PTR [rsp+0x8]
  40e8ca:	mov    r8,r13
  40e8cd:	mov    r9,QWORD PTR [rsp+0x10]
  40e8d2:	mov    eax,0x0
  40e8d7:	push   r12
  40e8d9:	push   r15
  40e8db:	lea    rbx,[rsp+0x138]
  40e8e3:	push   rbx
  40e8e4:	lea    rbx,[rsp+0x40]
  40e8e9:	push   QWORD PTR [rsp+0x38]
  40e8ed:	push   QWORD PTR [rsp+0x38]
  40e8f1:	call   406170 <fprintf@plt>
  40e8f6:	add    rsp,0x30
  40e8fa:	mov    r14,QWORD PTR [r14]
  40e8fd:	test   r14,r14
  40e900:	je     40e986 <__flatcc_fb_gen_c_builder@@Base+0x2c66>
  40e906:	movzx  eax,WORD PTR [r14+0x28]
  40e90b:	test   ax,ax
  40e90e:	je     40e8fa <__flatcc_fb_gen_c_builder@@Base+0x2bda>
  40e910:	mov    rcx,QWORD PTR [r14+0x8]
  40e914:	mov    r15d,DWORD PTR [rcx+0x8]
  40e918:	mov    r12,QWORD PTR [rcx]
  40e91b:	cmp    ax,0xa
  40e91f:	je     40e8b0 <__flatcc_fb_gen_c_builder@@Base+0x2b90>
  40e921:	cmp    ax,0xe
  40e925:	jne    40e995 <__flatcc_fb_gen_c_builder@@Base+0x2c75>
  40e927:	mov    rsi,QWORD PTR [r14+0x18]
  40e92b:	mov    rdi,QWORD PTR [rsi+0x18]
  40e92f:	mov    rdx,rbx
  40e932:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40e937:	mov    rax,QWORD PTR [r14+0x18]
  40e93b:	movzx  eax,WORD PTR [rax+0x10]
  40e93f:	cmp    ax,0x1
  40e943:	je     40e95e <__flatcc_fb_gen_c_builder@@Base+0x2c3e>
  40e945:	test   ax,ax
  40e948:	jne    40e9de <__flatcc_fb_gen_c_builder@@Base+0x2cbe>
  40e94e:	mov    rdi,QWORD PTR [r13+0xd0]
  40e955:	lea    rsi,[rip+0x313a9]        # 43fd05 <_IO_stdin_used@@Base+0x12d05>
  40e95c:	jmp    40e96c <__flatcc_fb_gen_c_builder@@Base+0x2c4c>
  40e95e:	mov    rdi,QWORD PTR [r13+0xd0]
  40e965:	lea    rsi,[rip+0x313d4]        # 43fd40 <_IO_stdin_used@@Base+0x12d40>
  40e96c:	mov    rdx,r13
  40e96f:	mov    rcx,QWORD PTR [rsp]
  40e973:	mov    r8,r13
  40e976:	mov    r9,QWORD PTR [rsp+0x8]
  40e97b:	mov    eax,0x0
  40e980:	push   rbx
  40e981:	jmp    40e8d7 <__flatcc_fb_gen_c_builder@@Base+0x2bb7>
  40e986:	lea    rsp,[rbp-0x28]
  40e98a:	pop    rbx
  40e98b:	pop    r12
  40e98d:	pop    r13
  40e98f:	pop    r14
  40e991:	pop    r15
  40e993:	pop    rbp
  40e994:	ret    
  40e995:	mov    rax,QWORD PTR [rip+0x4165c]        # 44fff8 <stderr@GLIBC_2.2.5>
  40e99c:	mov    rdi,QWORD PTR [rax]
  40e99f:	lea    rsi,[rip+0x1fa8e]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40e9a6:	lea    rbx,[rip+0x30663]        # 43f010 <_IO_stdin_used@@Base+0x12010>
  40e9ad:	lea    r8,[rip+0x31496]        # 43fe4a <_IO_stdin_used@@Base+0x12e4a>
  40e9b4:	mov    rdx,rbx
  40e9b7:	mov    ecx,0x558
  40e9bc:	xor    eax,eax
  40e9be:	call   406170 <fprintf@plt>
  40e9c3:	lea    rdi,[rip+0x309d1]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40e9ca:	lea    rcx,[rip+0x313e1]        # 43fdb2 <_IO_stdin_used@@Base+0x12db2>
  40e9d1:	mov    rsi,rbx
  40e9d4:	mov    edx,0x558
  40e9d9:	call   4060f0 <__assert_fail@plt>
  40e9de:	mov    rax,QWORD PTR [rip+0x41613]        # 44fff8 <stderr@GLIBC_2.2.5>
  40e9e5:	mov    rdi,QWORD PTR [rax]
  40e9e8:	lea    rsi,[rip+0x1fa45]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40e9ef:	lea    rbx,[rip+0x3061a]        # 43f010 <_IO_stdin_used@@Base+0x12010>
  40e9f6:	lea    r8,[rip+0x3137f]        # 43fd7c <_IO_stdin_used@@Base+0x12d7c>
  40e9fd:	mov    rdx,rbx
  40ea00:	mov    ecx,0x54e
  40ea05:	xor    eax,eax
  40ea07:	call   406170 <fprintf@plt>
  40ea0c:	lea    rdi,[rip+0x30988]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40ea13:	lea    rcx,[rip+0x31398]        # 43fdb2 <_IO_stdin_used@@Base+0x12db2>
  40ea1a:	mov    rsi,rbx
  40ea1d:	mov    edx,0x54e
  40ea22:	call   4060f0 <__assert_fail@plt>
  40ea27:	nop    WORD PTR [rax+rax*1+0x0]

000000000040ea30 <__flatcc_fb_gen_c_verifier@@Base>:
  40ea30:	push   rbp
  40ea31:	mov    rbp,rsp
  40ea34:	push   r15
  40ea36:	push   r14
  40ea38:	push   r13
  40ea3a:	push   r12
  40ea3c:	push   rbx
  40ea3d:	and    rsp,0xffffffffffffffe0
  40ea41:	sub    rsp,0x220
  40ea48:	mov    rbx,rdi
  40ea4b:	lea    r13,[rdi+0xd0]
  40ea52:	mov    rdi,QWORD PTR [rdi+0xd0]
  40ea59:	mov    rax,QWORD PTR [rbx+0xd8]
  40ea60:	mov    rcx,QWORD PTR [rax+0x118]
  40ea67:	lea    rsi,[rip+0x315ba]        # 440028 <_IO_stdin_used@@Base+0x13028>
  40ea6e:	mov    rdx,rcx
  40ea71:	xor    eax,eax
  40ea73:	call   406170 <fprintf@plt>
  40ea78:	mov    rcx,QWORD PTR [rbx+0xd0]
  40ea7f:	lea    rdi,[rip+0x1f885]        # 42e30b <_IO_stdin_used@@Base+0x130b>
  40ea86:	mov    esi,0x51
  40ea8b:	mov    edx,0x1
  40ea90:	call   406220 <fwrite@plt>
  40ea95:	mov    rdi,QWORD PTR [rbx+0xd0]
  40ea9c:	mov    rax,QWORD PTR [rbx+0xd8]
  40eaa3:	mov    rdx,QWORD PTR [rax+0x118]
  40eaaa:	lea    rsi,[rip+0x3049e]        # 43ef4f <_IO_stdin_used@@Base+0x11f4f>
  40eab1:	xor    eax,eax
  40eab3:	call   406170 <fprintf@plt>
  40eab8:	mov    rdi,QWORD PTR [rbx+0xd0]
  40eabf:	mov    rax,QWORD PTR [rbx+0xd8]
  40eac6:	mov    rdx,QWORD PTR [rax+0x110]
  40eacd:	lea    rsi,[rip+0x30490]        # 43ef64 <_IO_stdin_used@@Base+0x11f64>
  40ead4:	xor    eax,eax
  40ead6:	call   406170 <fprintf@plt>
  40eadb:	mov    rcx,QWORD PTR [rbx+0xd0]
  40eae2:	lea    rdi,[rip+0x25a44]        # 43452d <_IO_stdin_used@@Base+0x752d>
  40eae9:	mov    esi,0x7
  40eaee:	mov    edx,0x1
  40eaf3:	call   406220 <fwrite@plt>
  40eaf8:	mov    rcx,QWORD PTR [rbx+0xd0]
  40eaff:	lea    rdi,[rip+0x3154f]        # 440055 <_IO_stdin_used@@Base+0x13055>
  40eb06:	mov    esi,0x24
  40eb0b:	mov    edx,0x1
  40eb10:	call   406220 <fwrite@plt>
  40eb15:	lea    rsi,[rip+0x1f742]        # 42e25e <_IO_stdin_used@@Base+0x125e>
  40eb1c:	lea    rdx,[rip+0x31557]        # 44007a <_IO_stdin_used@@Base+0x1307a>
  40eb23:	mov    rdi,rbx
  40eb26:	call   407200 <__flatcc_fb_gen_c_includes@@Base>
  40eb2b:	mov    QWORD PTR [rsp+0x18],rbx
  40eb30:	mov    rax,QWORD PTR [rbx+0xe0]
  40eb37:	cmp    DWORD PTR [rax+0xac],0x0
  40eb3e:	je     40eb5a <__flatcc_fb_gen_c_verifier@@Base+0x12a>
  40eb40:	mov    rcx,QWORD PTR [r13+0x0]
  40eb44:	lea    rdi,[rip+0x1f9b6]        # 42e501 <_IO_stdin_used@@Base+0x1501>
  40eb4b:	mov    esi,0x24
  40eb50:	mov    edx,0x1
  40eb55:	call   406220 <fwrite@plt>
  40eb5a:	mov    rbx,QWORD PTR [rsp+0x18]
  40eb5f:	mov    rsi,QWORD PTR [rbx+0xd0]
  40eb66:	mov    edi,0xa
  40eb6b:	call   406110 <fputc@plt>
  40eb70:	vxorps xmm0,xmm0,xmm0
  40eb74:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40eb7d:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40eb86:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40eb8f:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40eb98:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40eb9e:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40eba4:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40ebaa:	mov    QWORD PTR [rsp+0x100],0x0
  40ebb6:	mov    rax,QWORD PTR [rbx+0xd8]
  40ebbd:	mov    rbx,QWORD PTR [rax+0x40]
  40ebc1:	test   rbx,rbx
  40ebc4:	je     40ec14 <__flatcc_fb_gen_c_verifier@@Base+0x1e4>
  40ebc6:	lea    r14,[rsp+0x20]
  40ebcb:	lea    r15,[rip+0x314b4]        # 440086 <_IO_stdin_used@@Base+0x13086>
  40ebd2:	cmp    WORD PTR [rbx+0x10],0x0
  40ebd7:	je     40ebef <__flatcc_fb_gen_c_verifier@@Base+0x1bf>
  40ebd9:	nop    DWORD PTR [rax+0x0]
  40ebe0:	mov    rbx,QWORD PTR [rbx]
  40ebe3:	test   rbx,rbx
  40ebe6:	je     40ec14 <__flatcc_fb_gen_c_verifier@@Base+0x1e4>
  40ebe8:	cmp    WORD PTR [rbx+0x10],0x0
  40ebed:	jne    40ebe0 <__flatcc_fb_gen_c_verifier@@Base+0x1b0>
  40ebef:	mov    rdi,QWORD PTR [rbx+0x18]
  40ebf3:	mov    rsi,rbx
  40ebf6:	mov    rdx,r14
  40ebf9:	vzeroupper 
  40ebfc:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40ec01:	mov    rdi,QWORD PTR [r13+0x0]
  40ec05:	mov    rsi,r15
  40ec08:	mov    rdx,r14
  40ec0b:	xor    eax,eax
  40ec0d:	call   406170 <fprintf@plt>
  40ec12:	jmp    40ebe0 <__flatcc_fb_gen_c_verifier@@Base+0x1b0>
  40ec14:	mov    rbx,QWORD PTR [rsp+0x18]
  40ec19:	mov    rsi,QWORD PTR [rbx+0xd0]
  40ec20:	mov    edi,0xa
  40ec25:	vzeroupper 
  40ec28:	call   406110 <fputc@plt>
  40ec2d:	mov    rax,QWORD PTR [rbx+0xd8]
  40ec34:	mov    rbx,QWORD PTR [rax+0x40]
  40ec38:	test   rbx,rbx
  40ec3b:	je     40f46b <__flatcc_fb_gen_c_verifier@@Base+0xa3b>
  40ec41:	mov    QWORD PTR [rsp+0x10],r13
  40ec46:	lea    r13,[rsp+0x120]
  40ec4e:	cmp    WORD PTR [rbx+0x10],0x4
  40ec53:	jne    40ec7e <__flatcc_fb_gen_c_verifier@@Base+0x24e>
  40ec55:	jmp    40ec91 <__flatcc_fb_gen_c_verifier@@Base+0x261>
  40ec57:	nop    WORD PTR [rax+rax*1+0x0]
  40ec60:	mov    rax,QWORD PTR [rsp+0x10]
  40ec65:	mov    rcx,QWORD PTR [rax]
  40ec68:	mov    esi,0x2f
  40ec6d:	mov    edx,0x1
  40ec72:	lea    rdi,[rip+0x316a2]        # 44031b <_IO_stdin_used@@Base+0x1331b>
  40ec79:	call   406220 <fwrite@plt>
  40ec7e:	mov    rbx,QWORD PTR [rbx]
  40ec81:	test   rbx,rbx
  40ec84:	je     40ee63 <__flatcc_fb_gen_c_verifier@@Base+0x433>
  40ec8a:	cmp    WORD PTR [rbx+0x10],0x4
  40ec8f:	jne    40ec7e <__flatcc_fb_gen_c_verifier@@Base+0x24e>
  40ec91:	vxorps xmm0,xmm0,xmm0
  40ec95:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40ec9b:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40eca1:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40eca7:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40ecb0:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40ecb9:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40ecc2:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40eccb:	mov    QWORD PTR [rsp+0x100],0x0
  40ecd7:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  40ece0:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  40ece9:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40ecf2:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  40ecfb:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  40ed04:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  40ed0d:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  40ed16:	mov    QWORD PTR [rsp+0x200],0x0
  40ed22:	mov    rdi,QWORD PTR [rbx+0x18]
  40ed26:	mov    rsi,rbx
  40ed29:	lea    r14,[rsp+0x20]
  40ed2e:	mov    rdx,r14
  40ed31:	vzeroupper 
  40ed34:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40ed39:	mov    rax,QWORD PTR [rsp+0x10]
  40ed3e:	mov    rdi,QWORD PTR [rax]
  40ed41:	lea    rsi,[rip+0x31383]        # 4400cb <_IO_stdin_used@@Base+0x130cb>
  40ed48:	mov    rdx,r14
  40ed4b:	xor    eax,eax
  40ed4d:	call   406170 <fprintf@plt>
  40ed52:	mov    r12,QWORD PTR [rbx+0x28]
  40ed56:	test   r12,r12
  40ed59:	jne    40ed9e <__flatcc_fb_gen_c_verifier@@Base+0x36e>
  40ed5b:	jmp    40ec60 <__flatcc_fb_gen_c_verifier@@Base+0x230>
  40ed60:	mov    rcx,QWORD PTR [rsp+0x10]
  40ed65:	mov    rdi,QWORD PTR [rcx]
  40ed68:	mov    edx,DWORD PTR [r12+0x48]
  40ed6d:	mov    rcx,QWORD PTR [rax+0xb8]
  40ed74:	movzx  r8d,WORD PTR [rax+0xb0]
  40ed7c:	mov    QWORD PTR [rsp],r14
  40ed80:	lea    rsi,[rip+0x313f4]        # 44017b <_IO_stdin_used@@Base+0x1317b>
  40ed87:	mov    r9d,r15d
  40ed8a:	xor    eax,eax
  40ed8c:	call   406170 <fprintf@plt>
  40ed91:	mov    r12,QWORD PTR [r12]
  40ed95:	test   r12,r12
  40ed98:	je     40ec60 <__flatcc_fb_gen_c_verifier@@Base+0x230>
  40ed9e:	movzx  eax,WORD PTR [r12+0x28]
  40eda4:	test   ax,ax
  40eda7:	je     40ed91 <__flatcc_fb_gen_c_verifier@@Base+0x361>
  40eda9:	mov    rcx,QWORD PTR [r12+0x8]
  40edae:	mov    r15d,DWORD PTR [rcx+0x8]
  40edb2:	mov    r14,QWORD PTR [rcx]
  40edb5:	cmp    ax,0xa
  40edb9:	je     40ee30 <__flatcc_fb_gen_c_verifier@@Base+0x400>
  40edbb:	cmp    ax,0xe
  40edbf:	jne    40f4d3 <__flatcc_fb_gen_c_verifier@@Base+0xaa3>
  40edc5:	mov    rsi,QWORD PTR [r12+0x18]
  40edca:	mov    rdi,QWORD PTR [rsi+0x18]
  40edce:	mov    rdx,r13
  40edd1:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40edd6:	mov    rax,QWORD PTR [r12+0x18]
  40eddb:	movzx  ecx,WORD PTR [rax+0x10]
  40eddf:	cmp    cx,0x1
  40ede3:	je     40ed60 <__flatcc_fb_gen_c_verifier@@Base+0x330>
  40ede9:	test   cx,cx
  40edec:	jne    40f51c <__flatcc_fb_gen_c_verifier@@Base+0xaec>
  40edf2:	mov    rax,QWORD PTR [rsp+0x10]
  40edf7:	mov    rdi,QWORD PTR [rax]
  40edfa:	mov    edx,DWORD PTR [r12+0x48]
  40edff:	lea    rsi,[rip+0x31325]        # 44012b <_IO_stdin_used@@Base+0x1312b>
  40ee06:	mov    rcx,r13
  40ee09:	mov    r8d,r15d
  40ee0c:	mov    r9,r14
  40ee0f:	xor    eax,eax
  40ee11:	call   406170 <fprintf@plt>
  40ee16:	mov    r12,QWORD PTR [r12]
  40ee1a:	test   r12,r12
  40ee1d:	jne    40ed9e <__flatcc_fb_gen_c_verifier@@Base+0x36e>
  40ee23:	jmp    40ec60 <__flatcc_fb_gen_c_verifier@@Base+0x230>
  40ee28:	nop    DWORD PTR [rax+rax*1+0x0]
  40ee30:	mov    rax,QWORD PTR [rsp+0x10]
  40ee35:	mov    rdi,QWORD PTR [rax]
  40ee38:	mov    edx,DWORD PTR [r12+0x48]
  40ee3d:	lea    rsi,[rip+0x31464]        # 4402a8 <_IO_stdin_used@@Base+0x132a8>
  40ee44:	mov    ecx,r15d
  40ee47:	mov    r8,r14
  40ee4a:	xor    eax,eax
  40ee4c:	call   406170 <fprintf@plt>
  40ee51:	mov    r12,QWORD PTR [r12]
  40ee55:	test   r12,r12
  40ee58:	jne    40ed9e <__flatcc_fb_gen_c_verifier@@Base+0x36e>
  40ee5e:	jmp    40ec60 <__flatcc_fb_gen_c_verifier@@Base+0x230>
  40ee63:	mov    rax,QWORD PTR [rsp+0x18]
  40ee68:	mov    rax,QWORD PTR [rax+0xd8]
  40ee6f:	mov    rbx,QWORD PTR [rax+0x40]
  40ee73:	test   rbx,rbx
  40ee76:	mov    r13,QWORD PTR [rsp+0x10]
  40ee7b:	je     40f46b <__flatcc_fb_gen_c_verifier@@Base+0xa3b>
  40ee81:	lea    r14,[rsp+0x20]
  40ee86:	lea    r13,[rip+0x315f9]        # 440486 <_IO_stdin_used@@Base+0x13486>
  40ee8d:	lea    r15,[rip+0x316a8]        # 44053c <_IO_stdin_used@@Base+0x1353c>
  40ee94:	mov    r12,QWORD PTR [rsp+0x18]
  40ee99:	cmp    WORD PTR [rbx+0x10],0x1
  40ee9e:	je     40eeb3 <__flatcc_fb_gen_c_verifier@@Base+0x483>
  40eea0:	mov    rbx,QWORD PTR [rbx]
  40eea3:	test   rbx,rbx
  40eea6:	je     40efb1 <__flatcc_fb_gen_c_verifier@@Base+0x581>
  40eeac:	cmp    WORD PTR [rbx+0x10],0x1
  40eeb1:	jne    40eea0 <__flatcc_fb_gen_c_verifier@@Base+0x470>
  40eeb3:	vxorps xmm0,xmm0,xmm0
  40eeb7:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40eec0:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40eec9:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40eed2:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40eedb:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40eee1:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40eee7:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40eeed:	mov    QWORD PTR [rsp+0x100],0x0
  40eef9:	mov    rdi,QWORD PTR [rbx+0x18]
  40eefd:	mov    rsi,rbx
  40ef00:	mov    rdx,r14
  40ef03:	vzeroupper 
  40ef06:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40ef0b:	mov    rdi,QWORD PTR [r12+0xd0]
  40ef13:	mov    r8,QWORD PTR [rbx+0xb8]
  40ef1a:	movzx  r9d,WORD PTR [rbx+0xb0]
  40ef22:	lea    rsi,[rip+0x31422]        # 44034b <_IO_stdin_used@@Base+0x1334b>
  40ef29:	mov    rdx,r14
  40ef2c:	mov    rcx,r14
  40ef2f:	xor    eax,eax
  40ef31:	call   406170 <fprintf@plt>
  40ef36:	mov    rdi,QWORD PTR [r12+0xd0]
  40ef3e:	mov    r8,QWORD PTR [rbx+0xb8]
  40ef45:	movzx  r9d,WORD PTR [rbx+0xb0]
  40ef4d:	lea    rsi,[rip+0x3148f]        # 4403e3 <_IO_stdin_used@@Base+0x133e3>
  40ef54:	mov    rdx,r14
  40ef57:	mov    rcx,r14
  40ef5a:	xor    eax,eax
  40ef5c:	call   406170 <fprintf@plt>
  40ef61:	mov    rdi,QWORD PTR [r12+0xd0]
  40ef69:	mov    r8,QWORD PTR [rbx+0xb8]
  40ef70:	movzx  r9d,WORD PTR [rbx+0xb0]
  40ef78:	mov    rsi,r13
  40ef7b:	mov    rdx,r14
  40ef7e:	mov    rcx,r12
  40ef81:	xor    eax,eax
  40ef83:	call   406170 <fprintf@plt>
  40ef88:	mov    rdi,QWORD PTR [r12+0xd0]
  40ef90:	mov    rcx,QWORD PTR [rbx+0xb8]
  40ef97:	movzx  r8d,WORD PTR [rbx+0xb0]
  40ef9f:	mov    rsi,r15
  40efa2:	mov    rdx,r14
  40efa5:	xor    eax,eax
  40efa7:	call   406170 <fprintf@plt>
  40efac:	jmp    40eea0 <__flatcc_fb_gen_c_verifier@@Base+0x470>
  40efb1:	mov    rax,QWORD PTR [rsp+0x18]
  40efb6:	mov    rax,QWORD PTR [rax+0xd8]
  40efbd:	mov    r12,QWORD PTR [rax+0x40]
  40efc1:	test   r12,r12
  40efc4:	mov    r13,QWORD PTR [rsp+0x10]
  40efc9:	je     40f46b <__flatcc_fb_gen_c_verifier@@Base+0xa3b>
  40efcf:	lea    r15,[rsp+0x20]
  40efd4:	lea    r14,[rip+0x31001]        # 43ffdc <_IO_stdin_used@@Base+0x12fdc>
  40efdb:	cmp    WORD PTR [r12+0x10],0x0
  40efe2:	jne    40f0b1 <__flatcc_fb_gen_c_verifier@@Base+0x681>
  40efe8:	jmp    40f0c7 <__flatcc_fb_gen_c_verifier@@Base+0x697>
  40efed:	nop    DWORD PTR [rax]
  40eff0:	test   ebx,ebx
  40eff2:	je     40f44c <__flatcc_fb_gen_c_verifier@@Base+0xa1c>
  40eff8:	mov    rbx,QWORD PTR [rsp+0x18]
  40effd:	mov    rcx,QWORD PTR [rbx+0xd0]
  40f004:	mov    esi,0x1d
  40f009:	mov    edx,0x1
  40f00e:	lea    rdi,[rip+0x3195b]        # 440970 <_IO_stdin_used@@Base+0x13970>
  40f015:	call   406220 <fwrite@plt>
  40f01a:	mov    rcx,QWORD PTR [rbx+0xd0]
  40f021:	mov    esi,0x3
  40f026:	mov    edx,0x1
  40f02b:	lea    rdi,[rip+0x35b5d]        # 444b8f <_IO_stdin_used@@Base+0x17b8f>
  40f032:	call   406220 <fwrite@plt>
  40f037:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f03e:	lea    rsi,[rip+0x31949]        # 44098e <_IO_stdin_used@@Base+0x1398e>
  40f045:	lea    r15,[rsp+0x20]
  40f04a:	mov    rdx,r15
  40f04d:	mov    rcx,r15
  40f050:	mov    r8,r15
  40f053:	xor    eax,eax
  40f055:	call   406170 <fprintf@plt>
  40f05a:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f061:	lea    rsi,[rip+0x319c6]        # 440a2e <_IO_stdin_used@@Base+0x13a2e>
  40f068:	mov    rdx,r15
  40f06b:	mov    rcx,r15
  40f06e:	mov    r8,r15
  40f071:	xor    eax,eax
  40f073:	call   406170 <fprintf@plt>
  40f078:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f07f:	lea    rsi,[rip+0x31a53]        # 440ad9 <_IO_stdin_used@@Base+0x13ad9>
  40f086:	mov    rdx,r15
  40f089:	mov    rcx,r15
  40f08c:	xor    eax,eax
  40f08e:	call   406170 <fprintf@plt>
  40f093:	mov    rdi,QWORD PTR [rbx+0xd0]
  40f09a:	lea    rsi,[rip+0x31aef]        # 440b90 <_IO_stdin_used@@Base+0x13b90>
  40f0a1:	mov    rdx,r15
  40f0a4:	mov    rcx,rbx
  40f0a7:	mov    r8,r15
  40f0aa:	xor    eax,eax
  40f0ac:	call   406170 <fprintf@plt>
  40f0b1:	mov    r12,QWORD PTR [r12]
  40f0b5:	test   r12,r12
  40f0b8:	je     40f46b <__flatcc_fb_gen_c_verifier@@Base+0xa3b>
  40f0be:	cmp    WORD PTR [r12+0x10],0x0
  40f0c5:	jne    40f0b1 <__flatcc_fb_gen_c_verifier@@Base+0x681>
  40f0c7:	vxorps xmm0,xmm0,xmm0
  40f0cb:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  40f0d1:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  40f0d7:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  40f0dd:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  40f0e6:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  40f0ef:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  40f0f8:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  40f101:	mov    QWORD PTR [rsp+0x100],0x0
  40f10d:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  40f116:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  40f11f:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  40f128:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  40f131:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  40f13a:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  40f143:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  40f14c:	mov    QWORD PTR [rsp+0x200],0x0
  40f158:	mov    rdi,QWORD PTR [r12+0x18]
  40f15d:	mov    rsi,r12
  40f160:	mov    rdx,r15
  40f163:	vzeroupper 
  40f166:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40f16b:	mov    rdi,QWORD PTR [r13+0x0]
  40f16f:	lea    rsi,[rip+0x31475]        # 4405eb <_IO_stdin_used@@Base+0x135eb>
  40f176:	mov    rdx,r15
  40f179:	xor    eax,eax
  40f17b:	call   406170 <fprintf@plt>
  40f180:	mov    r15,QWORD PTR [r12+0x28]
  40f185:	test   r15,r15
  40f188:	je     40eff8 <__flatcc_fb_gen_c_verifier@@Base+0x5c8>
  40f18e:	mov    ebx,0x1
  40f193:	test   BYTE PTR [r15+0x70],0x4
  40f198:	jne    40f1e8 <__flatcc_fb_gen_c_verifier@@Base+0x7b8>
  40f19a:	jmp    40f1fb <__flatcc_fb_gen_c_verifier@@Base+0x7cb>
  40f19c:	mov    rax,QWORD PTR [rsp+0x10]
  40f1a1:	mov    rdi,QWORD PTR [rax]
  40f1a4:	mov    rcx,QWORD PTR [r15+0x80]
  40f1ab:	mov    rdx,QWORD PTR [r15+0x88]
  40f1b2:	movzx  r8d,WORD PTR [r15+0x72]
  40f1b7:	lea    rsi,[rip+0x314af]        # 44066d <_IO_stdin_used@@Base+0x1366d>
  40f1be:	xor    eax,eax
  40f1c0:	call   406170 <fprintf@plt>
  40f1c5:	mov    r13,QWORD PTR [rsp+0x10]
  40f1ca:	mov    rdi,QWORD PTR [r13+0x0]
  40f1ce:	mov    rax,QWORD PTR [r15+0x8]
  40f1d2:	mov    edx,DWORD PTR [rax+0x8]
  40f1d5:	mov    rcx,QWORD PTR [rax]
  40f1d8:	xor    ebx,ebx
  40f1da:	lea    rsi,[rip+0x32441]        # 441622 <_IO_stdin_used@@Base+0x14622>
  40f1e1:	xor    eax,eax
  40f1e3:	call   406170 <fprintf@plt>
  40f1e8:	mov    r15,QWORD PTR [r15]
  40f1eb:	test   r15,r15
  40f1ee:	je     40eff0 <__flatcc_fb_gen_c_verifier@@Base+0x5c0>
  40f1f4:	test   BYTE PTR [r15+0x70],0x4
  40f1f9:	jne    40f1e8 <__flatcc_fb_gen_c_verifier@@Base+0x7b8>
  40f1fb:	mov    rcx,QWORD PTR [r13+0x0]
  40f1ff:	test   ebx,ebx
  40f201:	je     40f216 <__flatcc_fb_gen_c_verifier@@Base+0x7e6>
  40f203:	mov    esi,0x1c
  40f208:	mov    edx,0x1
  40f20d:	lea    rdi,[rip+0x3141d]        # 440631 <_IO_stdin_used@@Base+0x13631>
  40f214:	jmp    40f227 <__flatcc_fb_gen_c_verifier@@Base+0x7f7>
  40f216:	mov    esi,0x1e
  40f21b:	mov    edx,0x1
  40f220:	lea    rdi,[rip+0x31427]        # 44064e <_IO_stdin_used@@Base+0x1364e>
  40f227:	call   406220 <fwrite@plt>
  40f22c:	mov    eax,DWORD PTR [r15+0x28]
  40f230:	add    eax,0xfffffff9
  40f233:	cmp    ax,0x8
  40f237:	ja     40f1c5 <__flatcc_fb_gen_c_verifier@@Base+0x795>
  40f239:	mov    r13d,DWORD PTR [r15+0x70]
  40f23d:	shr    r13d,0x8
  40f241:	and    r13d,0x1
  40f245:	movzx  eax,ax
  40f248:	movsxd rax,DWORD PTR [r14+rax*4]
  40f24c:	add    rax,r14
  40f24f:	jmp    rax
  40f251:	mov    rsi,QWORD PTR [r15+0x90]
  40f258:	test   rsi,rsi
  40f25b:	je     40f300 <__flatcc_fb_gen_c_verifier@@Base+0x8d0>
  40f261:	mov    rdi,QWORD PTR [rsi+0x18]
  40f265:	lea    rbx,[rsp+0x120]
  40f26d:	mov    rdx,rbx
  40f270:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40f275:	mov    rdx,QWORD PTR [r15+0x88]
  40f27c:	mov    rax,QWORD PTR [r15+0x90]
  40f283:	cmp    WORD PTR [rax+0x10],0x0
  40f288:	mov    rax,QWORD PTR [rsp+0x10]
  40f28d:	mov    rdi,QWORD PTR [rax]
  40f290:	je     40f42e <__flatcc_fb_gen_c_verifier@@Base+0x9fe>
  40f296:	mov    r8,QWORD PTR [r15+0x80]
  40f29d:	movzx  r9d,WORD PTR [r15+0x72]
  40f2a2:	lea    rsi,[rip+0x31432]        # 4406db <_IO_stdin_used@@Base+0x136db>
  40f2a9:	jmp    40f3c2 <__flatcc_fb_gen_c_verifier@@Base+0x992>
  40f2ae:	mov    rax,QWORD PTR [rsp+0x10]
  40f2b3:	mov    rdi,QWORD PTR [rax]
  40f2b6:	mov    rdx,QWORD PTR [r15+0x88]
  40f2bd:	lea    rsi,[rip+0x314bc]        # 440780 <_IO_stdin_used@@Base+0x13780>
  40f2c4:	jmp    40f354 <__flatcc_fb_gen_c_verifier@@Base+0x924>
  40f2c9:	mov    rsi,QWORD PTR [r15+0x18]
  40f2cd:	mov    rdi,QWORD PTR [rsi+0x18]
  40f2d1:	lea    rdx,[rsp+0x120]
  40f2d9:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40f2de:	mov    rax,QWORD PTR [r15+0x18]
  40f2e2:	movzx  eax,WORD PTR [rax+0x10]
  40f2e6:	cmp    rax,0x4
  40f2ea:	ja     40f565 <__flatcc_fb_gen_c_verifier@@Base+0xb35>
  40f2f0:	lea    rcx,[rip+0x30d09]        # 440000 <_IO_stdin_used@@Base+0x13000>
  40f2f7:	movsxd rax,DWORD PTR [rcx+rax*4]
  40f2fb:	add    rax,rcx
  40f2fe:	jmp    rax
  40f300:	mov    rax,QWORD PTR [rsp+0x10]
  40f305:	mov    rdi,QWORD PTR [rax]
  40f308:	mov    r8,QWORD PTR [r15+0x80]
  40f30f:	mov    rcx,QWORD PTR [r15+0x88]
  40f316:	movzx  r9d,WORD PTR [r15+0x72]
  40f31b:	test   r8,r8
  40f31e:	mov    rsi,r8
  40f321:	mov    eax,0x1
  40f326:	cmove  rsi,rax
  40f32a:	mov    rax,rsi
  40f32d:	shr    rax,0x20
  40f331:	jne    40f3b2 <__flatcc_fb_gen_c_verifier@@Base+0x982>
  40f333:	mov    eax,0xffffffff
  40f338:	xor    edx,edx
  40f33a:	div    esi
  40f33c:	jmp    40f3b4 <__flatcc_fb_gen_c_verifier@@Base+0x984>
  40f33e:	mov    rax,QWORD PTR [rsp+0x10]
  40f343:	mov    rdi,QWORD PTR [rax]
  40f346:	mov    rdx,QWORD PTR [r15+0x88]
  40f34d:	lea    rsi,[rip+0x31404]        # 440758 <_IO_stdin_used@@Base+0x13758>
  40f354:	mov    ecx,r13d
  40f357:	xor    eax,eax
  40f359:	call   406170 <fprintf@plt>
  40f35e:	jmp    40f1c5 <__flatcc_fb_gen_c_verifier@@Base+0x795>
  40f363:	mov    rsi,QWORD PTR [r15+0x18]
  40f367:	mov    rdi,QWORD PTR [rsi+0x18]
  40f36b:	lea    rdx,[rsp+0x120]
  40f373:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40f378:	mov    rax,QWORD PTR [r15+0x18]
  40f37c:	movzx  eax,WORD PTR [rax+0x10]
  40f380:	cmp    rax,0x4
  40f384:	ja     40f5ae <__flatcc_fb_gen_c_verifier@@Base+0xb7e>
  40f38a:	lea    rcx,[rip+0x30c83]        # 440014 <_IO_stdin_used@@Base+0x13014>
  40f391:	movsxd rax,DWORD PTR [rcx+rax*4]
  40f395:	add    rax,rcx
  40f398:	jmp    rax
  40f39a:	mov    rax,QWORD PTR [rsp+0x10]
  40f39f:	mov    rdi,QWORD PTR [rax]
  40f3a2:	mov    rdx,QWORD PTR [r15+0x88]
  40f3a9:	lea    rsi,[rip+0x313ff]        # 4407af <_IO_stdin_used@@Base+0x137af>
  40f3b0:	jmp    40f417 <__flatcc_fb_gen_c_verifier@@Base+0x9e7>
  40f3b2:	xor    eax,eax
  40f3b4:	mov    QWORD PTR [rsp],rax
  40f3b8:	lea    rsi,[rip+0x3135a]        # 440719 <_IO_stdin_used@@Base+0x13719>
  40f3bf:	mov    rdx,rcx
  40f3c2:	mov    ecx,r13d
  40f3c5:	xor    eax,eax
  40f3c7:	call   406170 <fprintf@plt>
  40f3cc:	jmp    40f1c5 <__flatcc_fb_gen_c_verifier@@Base+0x795>
  40f3d1:	mov    rax,QWORD PTR [rsp+0x10]
  40f3d6:	mov    rdi,QWORD PTR [rax]
  40f3d9:	mov    rdx,QWORD PTR [r15+0x88]
  40f3e0:	lea    rsi,[rip+0x314b4]        # 44089b <_IO_stdin_used@@Base+0x1389b>
  40f3e7:	jmp    40f417 <__flatcc_fb_gen_c_verifier@@Base+0x9e7>
  40f3e9:	mov    rax,QWORD PTR [rsp+0x10]
  40f3ee:	mov    rdi,QWORD PTR [rax]
  40f3f1:	mov    rdx,QWORD PTR [r15+0x88]
  40f3f8:	lea    rsi,[rip+0x314dc]        # 4408db <_IO_stdin_used@@Base+0x138db>
  40f3ff:	jmp    40f417 <__flatcc_fb_gen_c_verifier@@Base+0x9e7>
  40f401:	mov    rax,QWORD PTR [rsp+0x10]
  40f406:	mov    rdi,QWORD PTR [rax]
  40f409:	mov    rdx,QWORD PTR [r15+0x88]
  40f410:	lea    rsi,[rip+0x313d1]        # 4407e8 <_IO_stdin_used@@Base+0x137e8>
  40f417:	mov    ecx,r13d
  40f41a:	lea    r8,[rsp+0x120]
  40f422:	xor    eax,eax
  40f424:	call   406170 <fprintf@plt>
  40f429:	jmp    40f1c5 <__flatcc_fb_gen_c_verifier@@Base+0x795>
  40f42e:	movzx  r8d,WORD PTR [r15+0x72]
  40f433:	lea    rsi,[rip+0x31259]        # 440693 <_IO_stdin_used@@Base+0x13693>
  40f43a:	mov    ecx,r13d
  40f43d:	mov    r9,rbx
  40f440:	xor    eax,eax
  40f442:	call   406170 <fprintf@plt>
  40f447:	jmp    40f1c5 <__flatcc_fb_gen_c_verifier@@Base+0x795>
  40f44c:	mov    rcx,QWORD PTR [r13+0x0]
  40f450:	mov    esi,0xf
  40f455:	mov    edx,0x1
  40f45a:	lea    rdi,[rip+0x314ff]        # 440960 <_IO_stdin_used@@Base+0x13960>
  40f461:	call   406220 <fwrite@plt>
  40f466:	jmp    40eff8 <__flatcc_fb_gen_c_verifier@@Base+0x5c8>
  40f46b:	mov    rax,QWORD PTR [rsp+0x18]
  40f470:	mov    rax,QWORD PTR [rax+0xe0]
  40f477:	cmp    DWORD PTR [rax+0xac],0x0
  40f47e:	je     40f49a <__flatcc_fb_gen_c_verifier@@Base+0xa6a>
  40f480:	mov    rcx,QWORD PTR [r13+0x0]
  40f484:	lea    rdi,[rip+0x24e60]        # 4342eb <_IO_stdin_used@@Base+0x72eb>
  40f48b:	mov    esi,0x24
  40f490:	mov    edx,0x1
  40f495:	call   406220 <fwrite@plt>
  40f49a:	mov    rax,QWORD PTR [rsp+0x18]
  40f49f:	mov    rdi,QWORD PTR [rax+0xd0]
  40f4a6:	mov    rax,QWORD PTR [rax+0xd8]
  40f4ad:	mov    rdx,QWORD PTR [rax+0x118]
  40f4b4:	lea    rsi,[rip+0x31793]        # 440c4e <_IO_stdin_used@@Base+0x13c4e>
  40f4bb:	xor    eax,eax
  40f4bd:	call   406170 <fprintf@plt>
  40f4c2:	xor    eax,eax
  40f4c4:	lea    rsp,[rbp-0x28]
  40f4c8:	pop    rbx
  40f4c9:	pop    r12
  40f4cb:	pop    r13
  40f4cd:	pop    r14
  40f4cf:	pop    r15
  40f4d1:	pop    rbp
  40f4d2:	ret    
  40f4d3:	mov    rax,QWORD PTR [rip+0x40b1e]        # 44fff8 <stderr@GLIBC_2.2.5>
  40f4da:	mov    rdi,QWORD PTR [rax]
  40f4dd:	lea    rsi,[rip+0x1ef50]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40f4e4:	lea    rbx,[rip+0x30cd9]        # 4401c4 <_IO_stdin_used@@Base+0x131c4>
  40f4eb:	lea    r8,[rip+0x30df6]        # 4402e8 <_IO_stdin_used@@Base+0x132e8>
  40f4f2:	mov    rdx,rbx
  40f4f5:	mov    ecx,0x53
  40f4fa:	xor    eax,eax
  40f4fc:	call   406170 <fprintf@plt>
  40f501:	lea    rdi,[rip+0x2fe93]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40f508:	lea    rcx,[rip+0x30d5d]        # 44026c <_IO_stdin_used@@Base+0x1326c>
  40f50f:	mov    rsi,rbx
  40f512:	mov    edx,0x53
  40f517:	call   4060f0 <__assert_fail@plt>
  40f51c:	mov    rax,QWORD PTR [rip+0x40ad5]        # 44fff8 <stderr@GLIBC_2.2.5>
  40f523:	mov    rdi,QWORD PTR [rax]
  40f526:	lea    rsi,[rip+0x1ef07]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40f52d:	lea    rbx,[rip+0x30c90]        # 4401c4 <_IO_stdin_used@@Base+0x131c4>
  40f534:	lea    r8,[rip+0x30cf5]        # 440230 <_IO_stdin_used@@Base+0x13230>
  40f53b:	mov    rdx,rbx
  40f53e:	mov    ecx,0x4a
  40f543:	xor    eax,eax
  40f545:	call   406170 <fprintf@plt>
  40f54a:	lea    rdi,[rip+0x2fe4a]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40f551:	lea    rcx,[rip+0x30d14]        # 44026c <_IO_stdin_used@@Base+0x1326c>
  40f558:	mov    rsi,rbx
  40f55b:	mov    edx,0x4a
  40f560:	call   4060f0 <__assert_fail@plt>
  40f565:	mov    rax,QWORD PTR [rip+0x40a8c]        # 44fff8 <stderr@GLIBC_2.2.5>
  40f56c:	mov    rdi,QWORD PTR [rax]
  40f56f:	lea    rsi,[rip+0x1eebe]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40f576:	lea    rbx,[rip+0x30c47]        # 4401c4 <_IO_stdin_used@@Base+0x131c4>
  40f57d:	lea    r8,[rip+0x31399]        # 44091d <_IO_stdin_used@@Base+0x1391d>
  40f584:	mov    rdx,rbx
  40f587:	mov    ecx,0xca
  40f58c:	xor    eax,eax
  40f58e:	call   406170 <fprintf@plt>
  40f593:	lea    rdi,[rip+0x2fe01]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40f59a:	lea    rcx,[rip+0x312be]        # 44085f <_IO_stdin_used@@Base+0x1385f>
  40f5a1:	mov    rsi,rbx
  40f5a4:	mov    edx,0xca
  40f5a9:	call   4060f0 <__assert_fail@plt>
  40f5ae:	mov    rax,QWORD PTR [rip+0x40a43]        # 44fff8 <stderr@GLIBC_2.2.5>
  40f5b5:	mov    rdi,QWORD PTR [rax]
  40f5b8:	lea    rsi,[rip+0x1ee75]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  40f5bf:	lea    rbx,[rip+0x30bfe]        # 4401c4 <_IO_stdin_used@@Base+0x131c4>
  40f5c6:	lea    r8,[rip+0x31256]        # 440823 <_IO_stdin_used@@Base+0x13823>
  40f5cd:	mov    rdx,rbx
  40f5d0:	mov    ecx,0xb2
  40f5d5:	xor    eax,eax
  40f5d7:	call   406170 <fprintf@plt>
  40f5dc:	lea    rdi,[rip+0x2fdb8]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  40f5e3:	lea    rcx,[rip+0x31275]        # 44085f <_IO_stdin_used@@Base+0x1385f>
  40f5ea:	mov    rsi,rbx
  40f5ed:	mov    edx,0xb2
  40f5f2:	call   4060f0 <__assert_fail@plt>
  40f5f7:	nop    WORD PTR [rax+rax*1+0x0]

000000000040f600 <__flatcc_fb_gen_c_json_parser@@Base>:
  40f600:	push   rbp
  40f601:	mov    rbp,rsp
  40f604:	push   r15
  40f606:	push   r14
  40f608:	push   r13
  40f60a:	push   r12
  40f60c:	push   rbx
  40f60d:	and    rsp,0xffffffffffffffe0
  40f611:	sub    rsp,0x2a0
  40f618:	mov    r15,rdi
  40f61b:	mov    rax,QWORD PTR [rdi+0xd8]
  40f622:	mov    rdx,QWORD PTR [rax+0x118]
  40f629:	lea    rsi,[rip+0x317c0]        # 440df0 <_IO_stdin_used@@Base+0x13df0>
  40f630:	xor    eax,eax
  40f632:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40f637:	mov    rax,QWORD PTR [r15+0xd8]
  40f63e:	mov    rdx,QWORD PTR [rax+0x118]
  40f645:	lea    rsi,[rip+0x317bd]        # 440e09 <_IO_stdin_used@@Base+0x13e09>
  40f64c:	mov    rdi,r15
  40f64f:	xor    eax,eax
  40f651:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40f656:	lea    rbx,[rip+0x1eef2]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  40f65d:	mov    rdi,r15
  40f660:	mov    rsi,rbx
  40f663:	xor    eax,eax
  40f665:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40f66a:	lea    rsi,[rip+0x317b1]        # 440e22 <_IO_stdin_used@@Base+0x13e22>
  40f671:	mov    rdi,r15
  40f674:	xor    eax,eax
  40f676:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40f67b:	mov    rdi,r15
  40f67e:	mov    rsi,rbx
  40f681:	xor    eax,eax
  40f683:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40f688:	lea    rsi,[rip+0x317e2]        # 440e71 <_IO_stdin_used@@Base+0x13e71>
  40f68f:	mov    rdi,r15
  40f692:	xor    eax,eax
  40f694:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40f699:	lea    rsi,[rip+0x1ebca]        # 42e26a <_IO_stdin_used@@Base+0x126a>
  40f6a0:	lea    rdx,[rip+0x3176c]        # 440e13 <_IO_stdin_used@@Base+0x13e13>
  40f6a7:	mov    rdi,r15
  40f6aa:	call   407200 <__flatcc_fb_gen_c_includes@@Base>
  40f6af:	mov    rax,QWORD PTR [r15+0xe0]
  40f6b6:	cmp    DWORD PTR [rax+0xac],0x0
  40f6bd:	je     40f6dc <__flatcc_fb_gen_c_json_parser@@Base+0xdc>
  40f6bf:	mov    rcx,QWORD PTR [r15+0xd0]
  40f6c6:	lea    rdi,[rip+0x1ee34]        # 42e501 <_IO_stdin_used@@Base+0x1501>
  40f6cd:	mov    esi,0x24
  40f6d2:	mov    edx,0x1
  40f6d7:	call   406220 <fwrite@plt>
  40f6dc:	lea    rsi,[rip+0x1ee6c]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  40f6e3:	mov    rdi,r15
  40f6e6:	xor    eax,eax
  40f6e8:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40f6ed:	mov    rax,QWORD PTR [r15+0xd8]
  40f6f4:	mov    rcx,QWORD PTR [rax+0x58]
  40f6f8:	vpxor  xmm0,xmm0,xmm0
  40f6fc:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm0
  40f705:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  40f70e:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  40f717:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  40f720:	vmovdqa YMMWORD PTR [rsp+0x60],ymm0
  40f726:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  40f72c:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  40f732:	mov    QWORD PTR [rsp+0x100],0x0
  40f73e:	test   rcx,rcx
  40f741:	je     40f868 <__flatcc_fb_gen_c_json_parser@@Base+0x268>
  40f747:	cmp    WORD PTR [rcx+0x10],0x1
  40f74c:	ja     40f868 <__flatcc_fb_gen_c_json_parser@@Base+0x268>
  40f752:	lea    rsi,[rip+0x3173f]        # 440e98 <_IO_stdin_used@@Base+0x13e98>
  40f759:	mov    rdi,r15
  40f75c:	xor    eax,eax
  40f75e:	vzeroupper 
  40f761:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40f766:	lea    rsi,[rip+0x3172e]        # 440e9b <_IO_stdin_used@@Base+0x13e9b>
  40f76d:	mov    rdi,r15
  40f770:	xor    eax,eax
  40f772:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40f777:	lea    rsi,[rip+0x31773]        # 440ef1 <_IO_stdin_used@@Base+0x13ef1>
  40f77e:	mov    rdi,r15
  40f781:	xor    eax,eax
  40f783:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40f788:	lea    rsi,[rip+0x31765]        # 440ef4 <_IO_stdin_used@@Base+0x13ef4>
  40f78f:	mov    rdi,r15
  40f792:	xor    eax,eax
  40f794:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40f799:	lea    rsi,[rip+0x31798]        # 440f38 <_IO_stdin_used@@Base+0x13f38>
  40f7a0:	mov    rdi,r15
  40f7a3:	xor    eax,eax
  40f7a5:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40f7aa:	lea    rsi,[rip+0x317bd]        # 440f6e <_IO_stdin_used@@Base+0x13f6e>
  40f7b1:	mov    rdi,r15
  40f7b4:	xor    eax,eax
  40f7b6:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40f7bb:	lea    rsi,[rip+0x317d4]        # 440f96 <_IO_stdin_used@@Base+0x13f96>
  40f7c2:	mov    rdi,r15
  40f7c5:	xor    eax,eax
  40f7c7:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40f7cc:	lea    rsi,[rip+0x3180b]        # 440fde <_IO_stdin_used@@Base+0x13fde>
  40f7d3:	mov    rdi,r15
  40f7d6:	xor    eax,eax
  40f7d8:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40f7dd:	lea    rsi,[rip+0x3260e]        # 441df2 <_IO_stdin_used@@Base+0x14df2>
  40f7e4:	mov    rdi,r15
  40f7e7:	xor    eax,eax
  40f7e9:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40f7ee:	mov    rax,QWORD PTR [r15+0xd8]
  40f7f5:	mov    rdx,QWORD PTR [rax+0x110]
  40f7fc:	lea    rsi,[rip+0x31819]        # 44101c <_IO_stdin_used@@Base+0x1401c>
  40f803:	mov    rdi,r15
  40f806:	xor    eax,eax
  40f808:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40f80d:	add    DWORD PTR [r15+0xf0],0x2
  40f815:	lea    rsi,[rip+0x31849]        # 441065 <_IO_stdin_used@@Base+0x14065>
  40f81c:	mov    rdi,r15
  40f81f:	xor    eax,eax
  40f821:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40f826:	mov    eax,DWORD PTR [r15+0xf0]
  40f82d:	test   eax,eax
  40f82f:	je     411bba <__flatcc_fb_gen_c_json_parser@@Base+0x25ba>
  40f835:	mov    ecx,eax
  40f837:	dec    ecx
  40f839:	mov    DWORD PTR [r15+0xf0],ecx
  40f840:	je     411bba <__flatcc_fb_gen_c_json_parser@@Base+0x25ba>
  40f846:	add    eax,0xfffffffe
  40f849:	mov    DWORD PTR [r15+0xf0],eax
  40f850:	lea    rsi,[rip+0x1ecf8]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  40f857:	mov    rdi,r15
  40f85a:	xor    eax,eax
  40f85c:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40f861:	mov    rax,QWORD PTR [r15+0xd8]
  40f868:	mov    rbx,QWORD PTR [rax+0x40]
  40f86c:	test   rbx,rbx
  40f86f:	je     40fa0c <__flatcc_fb_gen_c_json_parser@@Base+0x40c>
  40f875:	lea    r13,[rip+0x314ec]        # 440d68 <_IO_stdin_used@@Base+0x13d68>
  40f87c:	lea    r14,[rsp+0x20]
  40f881:	lea    r12,[rip+0x319d8]        # 441260 <_IO_stdin_used@@Base+0x14260>
  40f888:	jmp    40f8bc <__flatcc_fb_gen_c_json_parser@@Base+0x2bc>
  40f88a:	mov    rdi,QWORD PTR [rbx+0x18]
  40f88e:	mov    rsi,rbx
  40f891:	mov    rdx,r14
  40f894:	vzeroupper 
  40f897:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40f89c:	mov    rdi,r15
  40f89f:	lea    rsi,[rip+0x31af1]        # 441397 <_IO_stdin_used@@Base+0x14397>
  40f8a6:	mov    rdx,r14
  40f8a9:	xor    eax,eax
  40f8ab:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40f8b0:	mov    rbx,QWORD PTR [rbx]
  40f8b3:	test   rbx,rbx
  40f8b6:	je     40fa05 <__flatcc_fb_gen_c_json_parser@@Base+0x405>
  40f8bc:	movzx  eax,WORD PTR [rbx+0x10]
  40f8c0:	cmp    rax,0x4
  40f8c4:	ja     40f8b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2b0>
  40f8c6:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  40f8cb:	add    rax,r13
  40f8ce:	jmp    rax
  40f8d0:	mov    rdi,QWORD PTR [rbx+0x18]
  40f8d4:	mov    rsi,rbx
  40f8d7:	mov    rdx,r14
  40f8da:	vzeroupper 
  40f8dd:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40f8e2:	mov    rdi,r15
  40f8e5:	lea    rsi,[rip+0x319a7]        # 441293 <_IO_stdin_used@@Base+0x14293>
  40f8ec:	mov    rdx,r14
  40f8ef:	xor    eax,eax
  40f8f1:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40f8f6:	mov    rdi,r15
  40f8f9:	lea    rsi,[rip+0x31a13]        # 441313 <_IO_stdin_used@@Base+0x14313>
  40f900:	jmp    40f8a6 <__flatcc_fb_gen_c_json_parser@@Base+0x2a6>
  40f902:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40f90c:	nop    DWORD PTR [rax+0x0]
  40f910:	mov    rdi,QWORD PTR [rbx+0x18]
  40f914:	mov    rsi,rbx
  40f917:	mov    rdx,r14
  40f91a:	vzeroupper 
  40f91d:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40f922:	mov    rdi,r15
  40f925:	lea    rsi,[rip+0x318d1]        # 4411fd <_IO_stdin_used@@Base+0x141fd>
  40f92c:	mov    rdx,r14
  40f92f:	xor    eax,eax
  40f931:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40f936:	add    DWORD PTR [r15+0xf0],0x2
  40f93e:	mov    rdi,r15
  40f941:	mov    rsi,r12
  40f944:	mov    rdx,r14
  40f947:	xor    eax,eax
  40f949:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40f94e:	mov    eax,DWORD PTR [r15+0xf0]
  40f955:	test   eax,eax
  40f957:	je     411859 <__flatcc_fb_gen_c_json_parser@@Base+0x2259>
  40f95d:	mov    ecx,eax
  40f95f:	dec    ecx
  40f961:	mov    DWORD PTR [r15+0xf0],ecx
  40f968:	jne    40f9f6 <__flatcc_fb_gen_c_json_parser@@Base+0x3f6>
  40f96e:	jmp    411859 <__flatcc_fb_gen_c_json_parser@@Base+0x2259>
  40f973:	mov    rdi,QWORD PTR [rbx+0x18]
  40f977:	mov    rsi,rbx
  40f97a:	mov    rdx,r14
  40f97d:	vzeroupper 
  40f980:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40f985:	mov    rdi,r15
  40f988:	lea    rsi,[rip+0x317ab]        # 44113a <_IO_stdin_used@@Base+0x1413a>
  40f98f:	mov    rdx,r14
  40f992:	xor    eax,eax
  40f994:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40f999:	mov    rdi,r15
  40f99c:	lea    rsi,[rip+0x31826]        # 4411c9 <_IO_stdin_used@@Base+0x141c9>
  40f9a3:	mov    rdx,r14
  40f9a6:	xor    eax,eax
  40f9a8:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40f9ad:	mov    rdi,r15
  40f9b0:	lea    rsi,[rip+0x31846]        # 4411fd <_IO_stdin_used@@Base+0x141fd>
  40f9b7:	mov    rdx,r14
  40f9ba:	xor    eax,eax
  40f9bc:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40f9c1:	add    DWORD PTR [r15+0xf0],0x2
  40f9c9:	mov    rdi,r15
  40f9cc:	mov    rsi,r12
  40f9cf:	xor    eax,eax
  40f9d1:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40f9d6:	mov    eax,DWORD PTR [r15+0xf0]
  40f9dd:	test   eax,eax
  40f9df:	je     411878 <__flatcc_fb_gen_c_json_parser@@Base+0x2278>
  40f9e5:	mov    ecx,eax
  40f9e7:	dec    ecx
  40f9e9:	mov    DWORD PTR [r15+0xf0],ecx
  40f9f0:	je     411878 <__flatcc_fb_gen_c_json_parser@@Base+0x2278>
  40f9f6:	add    eax,0xfffffffe
  40f9f9:	mov    DWORD PTR [r15+0xf0],eax
  40fa00:	jmp    40f8b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2b0>
  40fa05:	mov    rax,QWORD PTR [r15+0xd8]
  40fa0c:	mov    rdi,QWORD PTR [rax+0x68]
  40fa10:	lea    rsi,[rip+0x2489]        # 411ea0 <__flatcc_fb_gen_c_json_parser@@Base+0x28a0>
  40fa17:	mov    rdx,r15
  40fa1a:	vzeroupper 
  40fa1d:	call   41a5a0 <fb_scope_table_visit@@Base>
  40fa22:	mov    rax,QWORD PTR [r15+0xd8]
  40fa29:	mov    rdx,QWORD PTR [rax+0x110]
  40fa30:	lea    rsi,[rip+0x319e3]        # 44141a <_IO_stdin_used@@Base+0x1441a>
  40fa37:	mov    rdi,r15
  40fa3a:	xor    eax,eax
  40fa3c:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40fa41:	add    DWORD PTR [r15+0xf0],0x2
  40fa49:	lea    rsi,[rip+0x31810]        # 441260 <_IO_stdin_used@@Base+0x14260>
  40fa50:	mov    rdi,r15
  40fa53:	xor    eax,eax
  40fa55:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40fa5a:	mov    eax,DWORD PTR [r15+0xf0]
  40fa61:	test   eax,eax
  40fa63:	je     411b5d <__flatcc_fb_gen_c_json_parser@@Base+0x255d>
  40fa69:	mov    ecx,eax
  40fa6b:	dec    ecx
  40fa6d:	mov    DWORD PTR [r15+0xf0],ecx
  40fa74:	je     411b5d <__flatcc_fb_gen_c_json_parser@@Base+0x255d>
  40fa7a:	add    eax,0xfffffffe
  40fa7d:	mov    DWORD PTR [r15+0xf0],eax
  40fa84:	lea    rsi,[rip+0x1eac4]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  40fa8b:	mov    rdi,r15
  40fa8e:	xor    eax,eax
  40fa90:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40fa95:	mov    rax,QWORD PTR [r15+0xd8]
  40fa9c:	mov    r14,QWORD PTR [rax+0x40]
  40faa0:	test   r14,r14
  40faa3:	je     410c9d <__flatcc_fb_gen_c_json_parser@@Base+0x169d>
  40faa9:	vpxor  xmm0,xmm0,xmm0
  40faad:	vbroadcastsd ymm1,QWORD PTR [rip+0x3126a]        # 440d20 <_IO_stdin_used@@Base+0x13d20>
  40fab6:	vmovaps YMMWORD PTR [rsp+0x120],ymm1
  40fabf:	vbroadcastsd ymm1,QWORD PTR [rip+0x31260]        # 440d28 <_IO_stdin_used@@Base+0x13d28>
  40fac8:	vmovaps YMMWORD PTR [rsp+0x240],ymm1
  40fad1:	vpbroadcastq ymm1,QWORD PTR [rip+0x31256]        # 440d30 <_IO_stdin_used@@Base+0x13d30>
  40fada:	vmovdqa YMMWORD PTR [rsp+0x260],ymm1
  40fae3:	lea    rbx,[rsp+0x20]
  40fae8:	lea    rcx,[rip+0x34943]        # 444432 <_IO_stdin_used@@Base+0x17432>
  40faef:	lea    r13,[rip+0x1ea59]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  40faf6:	lea    r12,[rip+0x20dcb]        # 4308c8 <_IO_stdin_used@@Base+0x38c8>
  40fafd:	jmp    40fb31 <__flatcc_fb_gen_c_json_parser@@Base+0x531>
  40faff:	nop
  40fb00:	mov    rdi,r15
  40fb03:	mov    rsi,r14
  40fb06:	vzeroupper 
  40fb09:	call   411f00 <__flatcc_fb_gen_c_json_parser@@Base+0x2900>
  40fb0e:	lea    r13,[rip+0x1ea3a]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  40fb15:	lea    rcx,[rip+0x34916]        # 444432 <_IO_stdin_used@@Base+0x17432>
  40fb1c:	lea    rbx,[rsp+0x20]
  40fb21:	vpxor  xmm0,xmm0,xmm0
  40fb25:	mov    r14,QWORD PTR [r14]
  40fb28:	test   r14,r14
  40fb2b:	je     410c96 <__flatcc_fb_gen_c_json_parser@@Base+0x1696>
  40fb31:	movzx  eax,WORD PTR [r14+0x10]
  40fb36:	cmp    rax,0x4
  40fb3a:	ja     40fb25 <__flatcc_fb_gen_c_json_parser@@Base+0x525>
  40fb3c:	lea    rdx,[rip+0x31239]        # 440d7c <_IO_stdin_used@@Base+0x13d7c>
  40fb43:	movsxd rax,DWORD PTR [rdx+rax*4]
  40fb47:	add    rax,rdx
  40fb4a:	jmp    rax
  40fb4c:	vmovdqu YMMWORD PTR [rsp+0x150],ymm0
  40fb55:	vmovdqa YMMWORD PTR [rsp+0x140],ymm0
  40fb5e:	cmp    WORD PTR [r14+0x10],0x0
  40fb64:	jne    411897 <__flatcc_fb_gen_c_json_parser@@Base+0x2297>
  40fb6a:	mov    rdi,r14
  40fb6d:	lea    rsi,[rsp+0x1c]
  40fb72:	vzeroupper 
  40fb75:	call   412570 <__flatcc_fb_gen_c_json_parser@@Base+0x2f70>
  40fb7a:	mov    QWORD PTR [rsp+0x140],rax
  40fb82:	mov    r12d,DWORD PTR [rsp+0x1c]
  40fb87:	test   rax,rax
  40fb8a:	jne    40fb95 <__flatcc_fb_gen_c_json_parser@@Base+0x595>
  40fb8c:	test   r12d,r12d
  40fb8f:	jg     4118b9 <__flatcc_fb_gen_c_json_parser@@Base+0x22b9>
  40fb95:	mov    QWORD PTR [rsp+0x158],r14
  40fb9d:	mov    QWORD PTR [rsp+0x160],0x0
  40fba9:	lea    rcx,[rip+0x4330]        # 413ee0 <__flatcc_fb_gen_c_json_parser@@Base+0x48e0>
  40fbb0:	mov    QWORD PTR [rsp+0x148],rcx
  40fbb8:	lea    rcx,[rip+0x5181]        # 414d40 <__flatcc_fb_gen_c_json_parser@@Base+0x5740>
  40fbbf:	mov    QWORD PTR [rsp+0x150],rcx
  40fbc7:	test   r12d,r12d
  40fbca:	vpxor  xmm10,xmm10,xmm10
  40fbcf:	vmovdqa ymm11,YMMWORD PTR [rsp+0x120]
  40fbd8:	vmovdqa ymm12,YMMWORD PTR [rsp+0x240]
  40fbe1:	vpcmpeqd ymm13,ymm13,ymm13
  40fbe6:	vmovdqa ymm14,YMMWORD PTR [rsp+0x260]
  40fbef:	jle    41034c <__flatcc_fb_gen_c_json_parser@@Base+0xd4c>
  40fbf5:	cmp    r12d,0x11
  40fbf9:	jae    41067c <__flatcc_fb_gen_c_json_parser@@Base+0x107c>
  40fbff:	xor    ecx,ecx
  40fc01:	xor    ebx,ebx
  40fc03:	jmp    410779 <__flatcc_fb_gen_c_json_parser@@Base+0x1179>
  40fc08:	vmovdqu YMMWORD PTR [rsp+0x150],ymm0
  40fc11:	vmovdqa YMMWORD PTR [rsp+0x140],ymm0
  40fc1a:	cmp    WORD PTR [r14+0x10],0x1
  40fc20:	jne    411902 <__flatcc_fb_gen_c_json_parser@@Base+0x2302>
  40fc26:	mov    rdi,r14
  40fc29:	lea    rsi,[rsp+0x1c]
  40fc2e:	vzeroupper 
  40fc31:	call   412570 <__flatcc_fb_gen_c_json_parser@@Base+0x2f70>
  40fc36:	mov    QWORD PTR [rsp+0x140],rax
  40fc3e:	mov    r13d,DWORD PTR [rsp+0x1c]
  40fc43:	test   rax,rax
  40fc46:	jne    40fc51 <__flatcc_fb_gen_c_json_parser@@Base+0x651>
  40fc48:	test   r13d,r13d
  40fc4b:	jg     411924 <__flatcc_fb_gen_c_json_parser@@Base+0x2324>
  40fc51:	mov    QWORD PTR [rsp+0x158],r14
  40fc59:	mov    DWORD PTR [rsp+0x160],0x1
  40fc64:	lea    rax,[rip+0x4275]        # 413ee0 <__flatcc_fb_gen_c_json_parser@@Base+0x48e0>
  40fc6b:	mov    QWORD PTR [rsp+0x148],rax
  40fc73:	lea    rax,[rip+0x50c6]        # 414d40 <__flatcc_fb_gen_c_json_parser@@Base+0x5740>
  40fc7a:	mov    QWORD PTR [rsp+0x150],rax
  40fc82:	vpxor  xmm0,xmm0,xmm0
  40fc86:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  40fc8c:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  40fc92:	vmovdqa YMMWORD PTR [rsp+0x60],ymm0
  40fc98:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  40fca1:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  40fcaa:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  40fcb3:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm0
  40fcbc:	mov    QWORD PTR [rsp+0x100],0x0
  40fcc8:	mov    rdi,QWORD PTR [r14+0x18]
  40fccc:	mov    rsi,r14
  40fccf:	lea    rbx,[rsp+0x20]
  40fcd4:	mov    rdx,rbx
  40fcd7:	vzeroupper 
  40fcda:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40fcdf:	mov    rdi,r15
  40fce2:	lea    rsi,[rip+0x321c6]        # 441eaf <_IO_stdin_used@@Base+0x14eaf>
  40fce9:	mov    rdx,rbx
  40fcec:	xor    eax,eax
  40fcee:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40fcf3:	mov    rdi,r15
  40fcf6:	lea    rsi,[rip+0x34735]        # 444432 <_IO_stdin_used@@Base+0x17432>
  40fcfd:	xor    eax,eax
  40fcff:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40fd04:	inc    DWORD PTR [r15+0xf0]
  40fd0b:	mov    rdi,r15
  40fd0e:	lea    rsi,[rip+0x32219]        # 441f2e <_IO_stdin_used@@Base+0x14f2e>
  40fd15:	xor    eax,eax
  40fd17:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40fd1c:	test   r13d,r13d
  40fd1f:	jle    40fd65 <__flatcc_fb_gen_c_json_parser@@Base+0x765>
  40fd21:	mov    rdi,r15
  40fd24:	lea    rsi,[rip+0x3220d]        # 441f38 <_IO_stdin_used@@Base+0x14f38>
  40fd2b:	xor    eax,eax
  40fd2d:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40fd32:	mov    rdi,r15
  40fd35:	lea    rsi,[rip+0x32216]        # 441f52 <_IO_stdin_used@@Base+0x14f52>
  40fd3c:	xor    eax,eax
  40fd3e:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40fd43:	mov    rdi,r15
  40fd46:	lea    rsi,[rip+0x31d1b]        # 441a68 <_IO_stdin_used@@Base+0x14a68>
  40fd4d:	xor    eax,eax
  40fd4f:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40fd54:	mov    rdi,r15
  40fd57:	lea    rsi,[rip+0x31d1c]        # 441a7a <_IO_stdin_used@@Base+0x14a7a>
  40fd5e:	xor    eax,eax
  40fd60:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40fd65:	mov    rdi,r15
  40fd68:	lea    rsi,[rip+0x1e7e0]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  40fd6f:	xor    eax,eax
  40fd71:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40fd76:	mov    rdi,r15
  40fd79:	lea    rsi,[rip+0x321de]        # 441f5e <_IO_stdin_used@@Base+0x14f5e>
  40fd80:	xor    eax,eax
  40fd82:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40fd87:	mov    rdi,r15
  40fd8a:	lea    rsi,[rip+0x3220a]        # 441f9b <_IO_stdin_used@@Base+0x14f9b>
  40fd91:	xor    eax,eax
  40fd93:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40fd98:	inc    DWORD PTR [r15+0xf0]
  40fd9f:	mov    rdi,r15
  40fda2:	test   r13d,r13d
  40fda5:	je     410353 <__flatcc_fb_gen_c_json_parser@@Base+0xd53>
  40fdab:	lea    rsi,[rip+0x32246]        # 441ff8 <_IO_stdin_used@@Base+0x14ff8>
  40fdb2:	xor    eax,eax
  40fdb4:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40fdb9:	mov    rdi,r15
  40fdbc:	lea    rsi,[rip+0x31cc3]        # 441a86 <_IO_stdin_used@@Base+0x14a86>
  40fdc3:	xor    eax,eax
  40fdc5:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40fdca:	lea    ecx,[r13-0x1]
  40fdce:	mov    rdi,r15
  40fdd1:	lea    rsi,[rsp+0x140]
  40fdd9:	xor    edx,edx
  40fddb:	xor    r8d,r8d
  40fdde:	call   412830 <__flatcc_fb_gen_c_json_parser@@Base+0x3230>
  40fde3:	jmp    410372 <__flatcc_fb_gen_c_json_parser@@Base+0xd72>
  40fde8:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  40fdee:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  40fdf4:	vmovdqa YMMWORD PTR [rsp+0x60],ymm0
  40fdfa:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  40fe03:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  40fe0c:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  40fe15:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm0
  40fe1e:	mov    QWORD PTR [rsp+0x100],0x0
  40fe2a:	vmovdqa YMMWORD PTR [rsp+0x140],ymm0
  40fe33:	vmovdqa YMMWORD PTR [rsp+0x160],ymm0
  40fe3c:	vmovdqa YMMWORD PTR [rsp+0x180],ymm0
  40fe45:	vmovdqa YMMWORD PTR [rsp+0x1a0],ymm0
  40fe4e:	vmovdqa YMMWORD PTR [rsp+0x1c0],ymm0
  40fe57:	vmovdqa YMMWORD PTR [rsp+0x1e0],ymm0
  40fe60:	vmovdqa YMMWORD PTR [rsp+0x200],ymm0
  40fe69:	mov    QWORD PTR [rsp+0x220],0x0
  40fe75:	mov    rdi,QWORD PTR [r14+0x18]
  40fe79:	mov    r12,rcx
  40fe7c:	mov    rsi,r14
  40fe7f:	mov    rdx,rbx
  40fe82:	vzeroupper 
  40fe85:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40fe8a:	mov    rdi,r15
  40fe8d:	lea    rsi,[rip+0x3165d]        # 4414f1 <_IO_stdin_used@@Base+0x144f1>
  40fe94:	mov    rdx,rbx
  40fe97:	xor    eax,eax
  40fe99:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40fe9e:	mov    rdi,r15
  40fea1:	mov    rsi,r12
  40fea4:	xor    eax,eax
  40fea6:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40feab:	inc    DWORD PTR [r15+0xf0]
  40feb2:	mov    rdi,r15
  40feb5:	mov    rsi,r13
  40feb8:	xor    eax,eax
  40feba:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40febf:	mov    rdi,r15
  40fec2:	lea    rsi,[rip+0x316b8]        # 441581 <_IO_stdin_used@@Base+0x14581>
  40fec9:	xor    eax,eax
  40fecb:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40fed0:	mov    rdi,r15
  40fed3:	lea    rsi,[rip+0x316b4]        # 44158e <_IO_stdin_used@@Base+0x1458e>
  40feda:	xor    eax,eax
  40fedc:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40fee1:	mov    rdi,r15
  40fee4:	lea    rsi,[rip+0x316b3]        # 44159e <_IO_stdin_used@@Base+0x1459e>
  40feeb:	xor    eax,eax
  40feed:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40fef2:	inc    DWORD PTR [r15+0xf0]
  40fef9:	mov    rdi,r15
  40fefc:	lea    rsi,[rip+0x316ae]        # 4415b1 <_IO_stdin_used@@Base+0x145b1>
  40ff03:	xor    eax,eax
  40ff05:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40ff0a:	mov    eax,DWORD PTR [r15+0xf0]
  40ff11:	test   eax,eax
  40ff13:	je     41196d <__flatcc_fb_gen_c_json_parser@@Base+0x236d>
  40ff19:	dec    eax
  40ff1b:	mov    DWORD PTR [r15+0xf0],eax
  40ff22:	mov    r12,QWORD PTR [r14+0x28]
  40ff26:	test   r12,r12
  40ff29:	jne    40ff9a <__flatcc_fb_gen_c_json_parser@@Base+0x99a>
  40ff2b:	jmp    41005b <__flatcc_fb_gen_c_json_parser@@Base+0xa5b>
  40ff30:	mov    edx,DWORD PTR [r12+0x48]
  40ff35:	mov    rdi,r15
  40ff38:	lea    rsi,[rip+0x316db]        # 44161a <_IO_stdin_used@@Base+0x1461a>
  40ff3f:	mov    ecx,r13d
  40ff42:	mov    r8,rbx
  40ff45:	xor    eax,eax
  40ff47:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40ff4c:	inc    DWORD PTR [r15+0xf0]
  40ff53:	mov    rdi,r15
  40ff56:	lea    rsi,[rip+0x31774]        # 4416d1 <_IO_stdin_used@@Base+0x146d1>
  40ff5d:	xor    eax,eax
  40ff5f:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40ff64:	mov    rdi,r15
  40ff67:	lea    rsi,[rip+0x3175c]        # 4416ca <_IO_stdin_used@@Base+0x146ca>
  40ff6e:	xor    eax,eax
  40ff70:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40ff75:	mov    eax,DWORD PTR [r15+0xf0]
  40ff7c:	test   eax,eax
  40ff7e:	je     4117d2 <__flatcc_fb_gen_c_json_parser@@Base+0x21d2>
  40ff84:	dec    eax
  40ff86:	mov    DWORD PTR [r15+0xf0],eax
  40ff8d:	mov    r12,QWORD PTR [r12]
  40ff91:	test   r12,r12
  40ff94:	je     41005b <__flatcc_fb_gen_c_json_parser@@Base+0xa5b>
  40ff9a:	movzx  eax,WORD PTR [r12+0x28]
  40ffa0:	test   ax,ax
  40ffa3:	je     40ff8d <__flatcc_fb_gen_c_json_parser@@Base+0x98d>
  40ffa5:	mov    rcx,QWORD PTR [r12+0x8]
  40ffaa:	mov    r13d,DWORD PTR [rcx+0x8]
  40ffae:	mov    rbx,QWORD PTR [rcx]
  40ffb1:	cmp    ax,0xa
  40ffb5:	je     40ff30 <__flatcc_fb_gen_c_json_parser@@Base+0x930>
  40ffbb:	cmp    ax,0xe
  40ffbf:	jne    411789 <__flatcc_fb_gen_c_json_parser@@Base+0x2189>
  40ffc5:	mov    rsi,QWORD PTR [r12+0x18]
  40ffca:	mov    rdi,QWORD PTR [rsi+0x18]
  40ffce:	lea    rdx,[rsp+0x140]
  40ffd6:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  40ffdb:	mov    edx,DWORD PTR [r12+0x48]
  40ffe0:	mov    rdi,r15
  40ffe3:	lea    rsi,[rip+0x31630]        # 44161a <_IO_stdin_used@@Base+0x1461a>
  40ffea:	mov    ecx,r13d
  40ffed:	mov    r8,rbx
  40fff0:	xor    eax,eax
  40fff2:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  40fff7:	inc    DWORD PTR [r15+0xf0]
  40fffe:	mov    rax,QWORD PTR [r12+0x18]
  410003:	movzx  eax,WORD PTR [rax+0x10]
  410007:	lea    rsi,[rip+0x31620]        # 44162e <_IO_stdin_used@@Base+0x1462e>
  41000e:	test   ax,ax
  410011:	je     410024 <__flatcc_fb_gen_c_json_parser@@Base+0xa24>
  410013:	cmp    ax,0x1
  410017:	jne    4117f1 <__flatcc_fb_gen_c_json_parser@@Base+0x21f1>
  41001d:	lea    rsi,[rip+0x3163c]        # 441660 <_IO_stdin_used@@Base+0x14660>
  410024:	mov    rdi,r15
  410027:	lea    rdx,[rsp+0x140]
  41002f:	xor    eax,eax
  410031:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410036:	mov    rdi,r15
  410039:	lea    rsi,[rip+0x3168a]        # 4416ca <_IO_stdin_used@@Base+0x146ca>
  410040:	xor    eax,eax
  410042:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410047:	mov    eax,DWORD PTR [r15+0xf0]
  41004e:	test   eax,eax
  410050:	jne    40ff84 <__flatcc_fb_gen_c_json_parser@@Base+0x984>
  410056:	jmp    41183a <__flatcc_fb_gen_c_json_parser@@Base+0x223a>
  41005b:	mov    rdi,r15
  41005e:	lea    rsi,[rip+0x316d8]        # 44173d <_IO_stdin_used@@Base+0x1473d>
  410065:	xor    eax,eax
  410067:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41006c:	inc    DWORD PTR [r15+0xf0]
  410073:	mov    rdi,r15
  410076:	lea    rsi,[rip+0x316c9]        # 441746 <_IO_stdin_used@@Base+0x14746>
  41007d:	xor    eax,eax
  41007f:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410084:	inc    DWORD PTR [r15+0xf0]
  41008b:	mov    rdi,r15
  41008e:	lea    rsi,[rip+0x316ea]        # 44177f <_IO_stdin_used@@Base+0x1477f>
  410095:	xor    eax,eax
  410097:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41009c:	mov    eax,DWORD PTR [r15+0xf0]
  4100a3:	test   eax,eax
  4100a5:	je     41198c <__flatcc_fb_gen_c_json_parser@@Base+0x238c>
  4100ab:	dec    eax
  4100ad:	mov    DWORD PTR [r15+0xf0],eax
  4100b4:	mov    rdi,r15
  4100b7:	lea    rsi,[rip+0x3171d]        # 4417db <_IO_stdin_used@@Base+0x147db>
  4100be:	xor    eax,eax
  4100c0:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4100c5:	inc    DWORD PTR [r15+0xf0]
  4100cc:	mov    rdi,r15
  4100cf:	lea    rsi,[rip+0x3170e]        # 4417e4 <_IO_stdin_used@@Base+0x147e4>
  4100d6:	xor    eax,eax
  4100d8:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4100dd:	mov    eax,DWORD PTR [r15+0xf0]
  4100e4:	test   eax,eax
  4100e6:	je     4119ab <__flatcc_fb_gen_c_json_parser@@Base+0x23ab>
  4100ec:	dec    eax
  4100ee:	mov    DWORD PTR [r15+0xf0],eax
  4100f5:	mov    rdi,r15
  4100f8:	lea    r12,[rip+0x207c9]        # 4308c8 <_IO_stdin_used@@Base+0x38c8>
  4100ff:	mov    rsi,r12
  410102:	xor    eax,eax
  410104:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410109:	mov    eax,DWORD PTR [r15+0xf0]
  410110:	test   eax,eax
  410112:	je     4119ca <__flatcc_fb_gen_c_json_parser@@Base+0x23ca>
  410118:	dec    eax
  41011a:	mov    DWORD PTR [r15+0xf0],eax
  410121:	mov    rdi,r15
  410124:	mov    rsi,r12
  410127:	xor    eax,eax
  410129:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41012e:	mov    rdi,r15
  410131:	lea    rsi,[rip+0x316e3]        # 44181b <_IO_stdin_used@@Base+0x1481b>
  410138:	xor    eax,eax
  41013a:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41013f:	mov    rdi,r15
  410142:	lea    rsi,[rip+0x316ee]        # 441837 <_IO_stdin_used@@Base+0x14837>
  410149:	xor    eax,eax
  41014b:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410150:	inc    DWORD PTR [r15+0xf0]
  410157:	mov    rdi,r15
  41015a:	lea    rsi,[rip+0x316e6]        # 441847 <_IO_stdin_used@@Base+0x14847>
  410161:	xor    eax,eax
  410163:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410168:	mov    eax,DWORD PTR [r15+0xf0]
  41016f:	test   eax,eax
  410171:	je     4119e9 <__flatcc_fb_gen_c_json_parser@@Base+0x23e9>
  410177:	dec    eax
  410179:	mov    DWORD PTR [r15+0xf0],eax
  410180:	mov    rdi,r15
  410183:	mov    rsi,r12
  410186:	xor    eax,eax
  410188:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41018d:	mov    rdi,r15
  410190:	lea    rsi,[rip+0x31694]        # 44182b <_IO_stdin_used@@Base+0x1482b>
  410197:	xor    eax,eax
  410199:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41019e:	mov    eax,DWORD PTR [r15+0xf0]
  4101a5:	test   eax,eax
  4101a7:	je     411a08 <__flatcc_fb_gen_c_json_parser@@Base+0x2408>
  4101ad:	dec    eax
  4101af:	mov    DWORD PTR [r15+0xf0],eax
  4101b6:	mov    rdi,r15
  4101b9:	mov    rsi,r12
  4101bc:	xor    eax,eax
  4101be:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4101c3:	mov    rdi,r15
  4101c6:	lea    rsi,[rip+0x1e382]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  4101cd:	xor    eax,eax
  4101cf:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4101d4:	vpxor  xmm0,xmm0,xmm0
  4101d8:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm0
  4101e1:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  4101ea:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  4101f3:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  4101fc:	vmovdqa YMMWORD PTR [rsp+0x60],ymm0
  410202:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  410208:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  41020e:	mov    QWORD PTR [rsp+0x100],0x0
  41021a:	mov    rdi,QWORD PTR [r14+0x18]
  41021e:	mov    rsi,r14
  410221:	lea    rbx,[rsp+0x20]
  410226:	mov    rdx,rbx
  410229:	vzeroupper 
  41022c:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  410231:	mov    rdi,r15
  410234:	lea    rsi,[rip+0x31662]        # 44189d <_IO_stdin_used@@Base+0x1489d>
  41023b:	mov    rdx,rbx
  41023e:	xor    eax,eax
  410240:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410245:	mov    rdi,r15
  410248:	lea    rsi,[rip+0x341e3]        # 444432 <_IO_stdin_used@@Base+0x17432>
  41024f:	xor    eax,eax
  410251:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410256:	inc    DWORD PTR [r15+0xf0]
  41025d:	mov    rdi,r15
  410260:	lea    rsi,[rip+0x31327]        # 44158e <_IO_stdin_used@@Base+0x1458e>
  410267:	xor    eax,eax
  410269:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41026e:	mov    rbx,QWORD PTR [r14+0x28]
  410272:	test   rbx,rbx
  410275:	jne    4102a6 <__flatcc_fb_gen_c_json_parser@@Base+0xca6>
  410277:	jmp    4102c6 <__flatcc_fb_gen_c_json_parser@@Base+0xcc6>
  410279:	nop    DWORD PTR [rax+0x0]
  410280:	mov    rax,QWORD PTR [rbx+0x8]
  410284:	mov    r8,QWORD PTR [rax]
  410287:	mov    ecx,DWORD PTR [rax+0x8]
  41028a:	mov    edx,DWORD PTR [rbx+0x48]
  41028d:	mov    rdi,r15
  410290:	lea    rsi,[rip+0x31656]        # 4418ed <_IO_stdin_used@@Base+0x148ed>
  410297:	xor    eax,eax
  410299:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41029e:	mov    rbx,QWORD PTR [rbx]
  4102a1:	test   rbx,rbx
  4102a4:	je     4102c6 <__flatcc_fb_gen_c_json_parser@@Base+0xcc6>
  4102a6:	cmp    WORD PTR [rbx+0x28],0x0
  4102ab:	jne    410280 <__flatcc_fb_gen_c_json_parser@@Base+0xc80>
  4102ad:	mov    rdi,r15
  4102b0:	lea    rsi,[rip+0x31619]        # 4418d0 <_IO_stdin_used@@Base+0x148d0>
  4102b7:	xor    eax,eax
  4102b9:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4102be:	mov    rbx,QWORD PTR [rbx]
  4102c1:	test   rbx,rbx
  4102c4:	jne    4102a6 <__flatcc_fb_gen_c_json_parser@@Base+0xca6>
  4102c6:	mov    rdi,r15
  4102c9:	lea    rsi,[rip+0x3163b]        # 44190b <_IO_stdin_used@@Base+0x1490b>
  4102d0:	xor    eax,eax
  4102d2:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4102d7:	mov    eax,DWORD PTR [r15+0xf0]
  4102de:	mov    ecx,eax
  4102e0:	inc    ecx
  4102e2:	mov    DWORD PTR [r15+0xf0],ecx
  4102e9:	je     411a27 <__flatcc_fb_gen_c_json_parser@@Base+0x2427>
  4102ef:	mov    DWORD PTR [r15+0xf0],eax
  4102f6:	mov    rdi,r15
  4102f9:	mov    rsi,r12
  4102fc:	xor    eax,eax
  4102fe:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410303:	mov    eax,DWORD PTR [r15+0xf0]
  41030a:	test   eax,eax
  41030c:	je     411a46 <__flatcc_fb_gen_c_json_parser@@Base+0x2446>
  410312:	dec    eax
  410314:	mov    DWORD PTR [r15+0xf0],eax
  41031b:	mov    rdi,r15
  41031e:	mov    rsi,r12
  410321:	xor    eax,eax
  410323:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410328:	mov    rdi,r15
  41032b:	lea    r13,[rip+0x1e21d]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  410332:	mov    rsi,r13
  410335:	xor    eax,eax
  410337:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41033c:	mov    rdi,r15
  41033f:	mov    rsi,r14
  410342:	call   411f00 <__flatcc_fb_gen_c_json_parser@@Base+0x2900>
  410347:	jmp    410667 <__flatcc_fb_gen_c_json_parser@@Base+0x1067>
  41034c:	xor    ebx,ebx
  41034e:	jmp    4107a6 <__flatcc_fb_gen_c_json_parser@@Base+0x11a6>
  410353:	lea    rsi,[rip+0x31c50]        # 441faa <_IO_stdin_used@@Base+0x14faa>
  41035a:	xor    eax,eax
  41035c:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410361:	mov    rdi,r15
  410364:	lea    rsi,[rip+0x31c53]        # 441fbe <_IO_stdin_used@@Base+0x14fbe>
  41036b:	xor    eax,eax
  41036d:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410372:	mov    rdi,r15
  410375:	lea    rsi,[rip+0x31cb2]        # 44202e <_IO_stdin_used@@Base+0x1502e>
  41037c:	xor    eax,eax
  41037e:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410383:	mov    eax,DWORD PTR [r15+0xf0]
  41038a:	test   eax,eax
  41038c:	je     411a65 <__flatcc_fb_gen_c_json_parser@@Base+0x2465>
  410392:	dec    eax
  410394:	mov    DWORD PTR [r15+0xf0],eax
  41039b:	mov    rdi,r15
  41039e:	mov    rsi,r12
  4103a1:	xor    eax,eax
  4103a3:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4103a8:	mov    rdi,r15
  4103ab:	lea    rsi,[rip+0x31479]        # 44182b <_IO_stdin_used@@Base+0x1482b>
  4103b2:	xor    eax,eax
  4103b4:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4103b9:	test   r13d,r13d
  4103bc:	jle    410407 <__flatcc_fb_gen_c_json_parser@@Base+0xe07>
  4103be:	mov    eax,DWORD PTR [r15+0xf0]
  4103c5:	mov    DWORD PTR [r15+0xf8],eax
  4103cc:	mov    DWORD PTR [r15+0xf0],0x0
  4103d7:	mov    rdi,r15
  4103da:	lea    rsi,[rip+0x31c89]        # 44206a <_IO_stdin_used@@Base+0x1506a>
  4103e1:	xor    eax,eax
  4103e3:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4103e8:	mov    eax,DWORD PTR [r15+0xf8]
  4103ef:	mov    DWORD PTR [r15+0xf0],eax
  4103f6:	mov    rdi,r15
  4103f9:	lea    rsi,[rip+0x31447]        # 441847 <_IO_stdin_used@@Base+0x14847>
  410400:	xor    eax,eax
  410402:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410407:	mov    eax,DWORD PTR [r15+0xf0]
  41040e:	test   eax,eax
  410410:	je     411a84 <__flatcc_fb_gen_c_json_parser@@Base+0x2484>
  410416:	dec    eax
  410418:	mov    DWORD PTR [r15+0xf0],eax
  41041f:	mov    rdi,r15
  410422:	mov    rsi,r12
  410425:	xor    eax,eax
  410427:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41042c:	mov    rdi,r15
  41042f:	lea    rsi,[rip+0x1e119]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  410436:	xor    eax,eax
  410438:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41043d:	mov    rdi,QWORD PTR [rsp+0x140]
  410445:	test   rdi,rdi
  410448:	je     41044f <__flatcc_fb_gen_c_json_parser@@Base+0xe4f>
  41044a:	call   406040 <free@plt>
  41044f:	cmp    WORD PTR [r14+0x10],0x1
  410455:	jne    411aa3 <__flatcc_fb_gen_c_json_parser@@Base+0x24a3>
  41045b:	vpxor  xmm0,xmm0,xmm0
  41045f:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm0
  410468:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  410471:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  41047a:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  410483:	vmovdqa YMMWORD PTR [rsp+0x60],ymm0
  410489:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  41048f:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  410495:	mov    QWORD PTR [rsp+0x100],0x0
  4104a1:	mov    rdi,QWORD PTR [r14+0x18]
  4104a5:	mov    rsi,r14
  4104a8:	lea    rbx,[rsp+0x20]
  4104ad:	mov    rdx,rbx
  4104b0:	vzeroupper 
  4104b3:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  4104b8:	mov    rdi,r15
  4104bb:	lea    rsi,[rip+0x32684]        # 442b46 <_IO_stdin_used@@Base+0x15b46>
  4104c2:	mov    rdx,rbx
  4104c5:	xor    eax,eax
  4104c7:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4104cc:	mov    rdi,r15
  4104cf:	lea    r13,[rip+0x33f5c]        # 444432 <_IO_stdin_used@@Base+0x17432>
  4104d6:	mov    rsi,r13
  4104d9:	xor    eax,eax
  4104db:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4104e0:	inc    DWORD PTR [r15+0xf0]
  4104e7:	mov    rdi,r15
  4104ea:	lea    rsi,[rip+0x31a61]        # 441f52 <_IO_stdin_used@@Base+0x14f52>
  4104f1:	xor    eax,eax
  4104f3:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4104f8:	mov    rdi,r15
  4104fb:	lea    r13,[rip+0x1e04d]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  410502:	mov    rsi,r13
  410505:	xor    eax,eax
  410507:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41050c:	mov    rdi,r15
  41050f:	lea    rsi,[rip+0x3106b]        # 441581 <_IO_stdin_used@@Base+0x14581>
  410516:	xor    eax,eax
  410518:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41051d:	mov    rdx,QWORD PTR [r14+0xb8]
  410524:	movzx  ecx,WORD PTR [r14+0xb0]
  41052c:	mov    rdi,r15
  41052f:	lea    rsi,[rip+0x32693]        # 442bc9 <_IO_stdin_used@@Base+0x15bc9>
  410536:	xor    eax,eax
  410538:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41053d:	mov    rdi,r15
  410540:	lea    rsi,[rip+0x32145]        # 44268c <_IO_stdin_used@@Base+0x1568c>
  410547:	mov    rdx,rbx
  41054a:	xor    eax,eax
  41054c:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410551:	mov    rdi,r15
  410554:	lea    rsi,[rip+0x326b9]        # 442c14 <_IO_stdin_used@@Base+0x15c14>
  41055b:	xor    eax,eax
  41055d:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410562:	mov    rdi,r15
  410565:	lea    rsi,[rip+0x312bf]        # 44182b <_IO_stdin_used@@Base+0x1482b>
  41056c:	xor    eax,eax
  41056e:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410573:	mov    eax,DWORD PTR [r15+0xf0]
  41057a:	mov    DWORD PTR [r15+0xf8],eax
  410581:	mov    DWORD PTR [r15+0xf0],0x0
  41058c:	mov    rdi,r15
  41058f:	lea    rsi,[rip+0x31ad4]        # 44206a <_IO_stdin_used@@Base+0x1506a>
  410596:	xor    eax,eax
  410598:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41059d:	mov    eax,DWORD PTR [r15+0xf8]
  4105a4:	mov    DWORD PTR [r15+0xf0],eax
  4105ab:	mov    rdi,r15
  4105ae:	lea    rsi,[rip+0x31292]        # 441847 <_IO_stdin_used@@Base+0x14847>
  4105b5:	xor    eax,eax
  4105b7:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4105bc:	mov    eax,DWORD PTR [r15+0xf0]
  4105c3:	test   eax,eax
  4105c5:	je     411ac2 <__flatcc_fb_gen_c_json_parser@@Base+0x24c2>
  4105cb:	dec    eax
  4105cd:	mov    DWORD PTR [r15+0xf0],eax
  4105d4:	mov    rdi,r15
  4105d7:	lea    r12,[rip+0x202ea]        # 4308c8 <_IO_stdin_used@@Base+0x38c8>
  4105de:	mov    rsi,r12
  4105e1:	xor    eax,eax
  4105e3:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4105e8:	mov    rdi,r15
  4105eb:	mov    rsi,r13
  4105ee:	xor    eax,eax
  4105f0:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4105f5:	mov    rdi,r15
  4105f8:	lea    rsi,[rip+0x32666]        # 442c65 <_IO_stdin_used@@Base+0x15c65>
  4105ff:	mov    rdx,rbx
  410602:	xor    eax,eax
  410604:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410609:	mov    rdi,r15
  41060c:	lea    rsi,[rip+0x33e1f]        # 444432 <_IO_stdin_used@@Base+0x17432>
  410613:	xor    eax,eax
  410615:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41061a:	inc    DWORD PTR [r15+0xf0]
  410621:	mov    rdi,r15
  410624:	lea    rsi,[rip+0x326ce]        # 442cf9 <_IO_stdin_used@@Base+0x15cf9>
  41062b:	mov    rdx,rbx
  41062e:	xor    eax,eax
  410630:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410635:	mov    eax,DWORD PTR [r15+0xf0]
  41063c:	test   eax,eax
  41063e:	je     411ae1 <__flatcc_fb_gen_c_json_parser@@Base+0x24e1>
  410644:	dec    eax
  410646:	mov    DWORD PTR [r15+0xf0],eax
  41064d:	mov    rdi,r15
  410650:	mov    rsi,r12
  410653:	xor    eax,eax
  410655:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41065a:	mov    rdi,r15
  41065d:	mov    rsi,r13
  410660:	xor    eax,eax
  410662:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410667:	vpxor  xmm0,xmm0,xmm0
  41066b:	lea    rbx,[rsp+0x20]
  410670:	lea    rcx,[rip+0x33dbb]        # 444432 <_IO_stdin_used@@Base+0x17432>
  410677:	jmp    40fb25 <__flatcc_fb_gen_c_json_parser@@Base+0x525>
  41067c:	mov    edx,r12d
  41067f:	and    edx,0xf
  410682:	test   rdx,rdx
  410685:	mov    ecx,0x10
  41068a:	cmove  rdx,rcx
  41068e:	mov    rcx,r12
  410691:	sub    rcx,rdx
  410694:	vpxor  xmm8,xmm8,xmm8
  410699:	mov    rdx,rcx
  41069c:	vmovdqa ymm1,YMMWORD PTR [rip+0x305fc]        # 440ca0 <_IO_stdin_used@@Base+0x13ca0>
  4106a4:	vmovdqa ymm2,YMMWORD PTR [rip+0x305d4]        # 440c80 <_IO_stdin_used@@Base+0x13c80>
  4106ac:	vpxor  xmm3,xmm3,xmm3
  4106b0:	vpsllq ymm4,ymm1,0x5
  4106b5:	vmovq  xmm5,rax
  4106ba:	vpbroadcastq ymm5,xmm5
  4106bf:	vpaddq ymm4,ymm5,ymm4
  4106c3:	vpaddq ymm6,ymm4,ymm11
  4106c8:	vpsllq ymm7,ymm2,0x5
  4106cd:	vpaddq ymm5,ymm5,ymm7
  4106d1:	vpaddq ymm7,ymm5,ymm11
  4106d6:	vpaddq ymm9,ymm4,ymm12
  4106db:	vpaddq ymm5,ymm5,ymm12
  4106e0:	vpcmpeqd xmm0,xmm0,xmm0
  4106e4:	vpgatherqd xmm4,DWORD PTR [ymm7*1+0x0],xmm0
  4106ee:	vpcmpeqd xmm0,xmm0,xmm0
  4106f2:	vpgatherqd xmm7,DWORD PTR [ymm6*1+0x0],xmm0
  4106fc:	vpcmpeqd xmm0,xmm0,xmm0
  410700:	vpgatherqd xmm6,DWORD PTR [ymm5*1+0x0],xmm0
  41070a:	vpcmpeqd xmm0,xmm0,xmm0
  41070e:	vpgatherqd xmm5,DWORD PTR [ymm9*1+0x0],xmm0
  410718:	vinserti128 ymm0,ymm7,xmm4,0x1
  41071e:	vinserti128 ymm4,ymm5,xmm6,0x1
  410724:	vpcmpeqd ymm0,ymm0,ymm10
  410729:	vpaddd ymm0,ymm8,ymm0
  41072d:	vpcmpeqd ymm4,ymm4,ymm10
  410732:	vpaddd ymm3,ymm3,ymm4
  410736:	vpsubd ymm8,ymm0,ymm13
  41073b:	vpsubd ymm3,ymm3,ymm13
  410740:	vpaddq ymm1,ymm1,ymm14
  410745:	vpaddq ymm2,ymm2,ymm14
  41074a:	add    rdx,0xfffffffffffffff0
  41074e:	jne    4106b0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
  410754:	vpaddd ymm0,ymm3,ymm8
  410759:	vextracti128 xmm1,ymm0,0x1
  41075f:	vpaddd xmm0,xmm0,xmm1
  410763:	vpshufd xmm1,xmm0,0x4e
  410768:	vpaddd xmm0,xmm0,xmm1
  41076c:	vpshufd xmm1,xmm0,0xe5
  410771:	vpaddd xmm0,xmm0,xmm1
  410775:	vmovd  ebx,xmm0
  410779:	mov    rdx,r12
  41077c:	sub    rdx,rcx
  41077f:	shl    rcx,0x5
  410783:	add    rax,rcx
  410786:	add    rax,0x18
  41078a:	nop    WORD PTR [rax+rax*1+0x0]
  410790:	cmp    DWORD PTR [rax],0x1
  410793:	sbb    ebx,0xffffffff
  410796:	add    rax,0x20
  41079a:	dec    rdx
  41079d:	jne    410790 <__flatcc_fb_gen_c_json_parser@@Base+0x1190>
  41079f:	mov    DWORD PTR [rsp+0x164],ebx
  4107a6:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm10
  4107af:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm10
  4107b8:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm10
  4107c1:	vmovdqa YMMWORD PTR [rsp+0x80],ymm10
  4107ca:	vmovdqa YMMWORD PTR [rsp+0x60],ymm10
  4107d0:	vmovdqa YMMWORD PTR [rsp+0x40],ymm10
  4107d6:	vmovdqa YMMWORD PTR [rsp+0x20],ymm10
  4107dc:	mov    QWORD PTR [rsp+0x100],0x0
  4107e8:	mov    rdi,QWORD PTR [r14+0x18]
  4107ec:	mov    rsi,r14
  4107ef:	lea    r13,[rsp+0x20]
  4107f4:	mov    rdx,r13
  4107f7:	vzeroupper 
  4107fa:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  4107ff:	mov    rdi,r15
  410802:	lea    rsi,[rip+0x3258b]        # 442d94 <_IO_stdin_used@@Base+0x15d94>
  410809:	mov    rdx,r13
  41080c:	xor    eax,eax
  41080e:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410813:	mov    rdi,r15
  410816:	lea    rsi,[rip+0x33c15]        # 444432 <_IO_stdin_used@@Base+0x17432>
  41081d:	xor    eax,eax
  41081f:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410824:	inc    DWORD PTR [r15+0xf0]
  41082b:	mov    rdi,r15
  41082e:	lea    rsi,[rip+0x316f9]        # 441f2e <_IO_stdin_used@@Base+0x14f2e>
  410835:	xor    eax,eax
  410837:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41083c:	test   r12d,r12d
  41083f:	jle    41088c <__flatcc_fb_gen_c_json_parser@@Base+0x128c>
  410841:	mov    rdi,r15
  410844:	lea    rsi,[rip+0x31707]        # 441f52 <_IO_stdin_used@@Base+0x14f52>
  41084b:	xor    eax,eax
  41084d:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410852:	mov    rdi,r15
  410855:	lea    rsi,[rip+0x325ba]        # 442e16 <_IO_stdin_used@@Base+0x15e16>
  41085c:	xor    eax,eax
  41085e:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410863:	mov    rdi,r15
  410866:	lea    rsi,[rip+0x311fb]        # 441a68 <_IO_stdin_used@@Base+0x14a68>
  41086d:	xor    eax,eax
  41086f:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410874:	mov    rdi,r15
  410877:	lea    rsi,[rip+0x311fc]        # 441a7a <_IO_stdin_used@@Base+0x14a7a>
  41087e:	xor    eax,eax
  410880:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410885:	mov    ebx,DWORD PTR [rsp+0x164]
  41088c:	test   ebx,ebx
  41088e:	je     4108aa <__flatcc_fb_gen_c_json_parser@@Base+0x12aa>
  410890:	mov    rdi,r15
  410893:	lea    rsi,[rip+0x3259d]        # 442e37 <_IO_stdin_used@@Base+0x15e37>
  41089a:	xor    eax,eax
  41089c:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4108a1:	mov    ebx,DWORD PTR [rsp+0x164]
  4108a8:	jmp    4108ac <__flatcc_fb_gen_c_json_parser@@Base+0x12ac>
  4108aa:	xor    ebx,ebx
  4108ac:	mov    rdi,r15
  4108af:	lea    rsi,[rip+0x1dc99]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  4108b6:	xor    eax,eax
  4108b8:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4108bd:	mov    rdi,r15
  4108c0:	lea    rsi,[rip+0x30cba]        # 441581 <_IO_stdin_used@@Base+0x14581>
  4108c7:	xor    eax,eax
  4108c9:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4108ce:	mov    rdx,QWORD PTR [r14+0xa8]
  4108d5:	mov    rdi,r15
  4108d8:	lea    rsi,[rip+0x32569]        # 442e48 <_IO_stdin_used@@Base+0x15e48>
  4108df:	xor    eax,eax
  4108e1:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4108e6:	test   ebx,ebx
  4108e8:	je     4108fe <__flatcc_fb_gen_c_json_parser@@Base+0x12fe>
  4108ea:	movsxd rdx,ebx
  4108ed:	mov    rdi,r15
  4108f0:	lea    rsi,[rip+0x3258d]        # 442e84 <_IO_stdin_used@@Base+0x15e84>
  4108f7:	xor    eax,eax
  4108f9:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4108fe:	mov    rdi,r15
  410901:	lea    rsi,[rip+0x31656]        # 441f5e <_IO_stdin_used@@Base+0x14f5e>
  410908:	xor    eax,eax
  41090a:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41090f:	mov    rdi,r15
  410912:	lea    rsi,[rip+0x31682]        # 441f9b <_IO_stdin_used@@Base+0x14f9b>
  410919:	xor    eax,eax
  41091b:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410920:	inc    DWORD PTR [r15+0xf0]
  410927:	mov    rdi,r15
  41092a:	lea    rsi,[rip+0x316c7]        # 441ff8 <_IO_stdin_used@@Base+0x14ff8>
  410931:	xor    eax,eax
  410933:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410938:	mov    rdi,r15
  41093b:	test   r12d,r12d
  41093e:	jle    41096a <__flatcc_fb_gen_c_json_parser@@Base+0x136a>
  410940:	lea    rsi,[rip+0x3113f]        # 441a86 <_IO_stdin_used@@Base+0x14a86>
  410947:	xor    eax,eax
  410949:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41094e:	lea    ecx,[r12-0x1]
  410953:	mov    rdi,r15
  410956:	lea    rsi,[rsp+0x140]
  41095e:	xor    edx,edx
  410960:	xor    r8d,r8d
  410963:	call   412830 <__flatcc_fb_gen_c_json_parser@@Base+0x3230>
  410968:	jmp    410989 <__flatcc_fb_gen_c_json_parser@@Base+0x1389>
  41096a:	lea    rsi,[rip+0x3256d]        # 442ede <_IO_stdin_used@@Base+0x15ede>
  410971:	xor    eax,eax
  410973:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410978:	mov    rdi,r15
  41097b:	lea    rsi,[rip+0x3163c]        # 441fbe <_IO_stdin_used@@Base+0x14fbe>
  410982:	xor    eax,eax
  410984:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410989:	mov    rdi,r15
  41098c:	lea    rsi,[rip+0x32566]        # 442ef9 <_IO_stdin_used@@Base+0x15ef9>
  410993:	xor    eax,eax
  410995:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41099a:	mov    eax,DWORD PTR [r15+0xf0]
  4109a1:	test   eax,eax
  4109a3:	je     411b00 <__flatcc_fb_gen_c_json_parser@@Base+0x2500>
  4109a9:	dec    eax
  4109ab:	mov    DWORD PTR [r15+0xf0],eax
  4109b2:	mov    rdi,r15
  4109b5:	lea    rsi,[rip+0x1ff0c]        # 4308c8 <_IO_stdin_used@@Base+0x38c8>
  4109bc:	xor    eax,eax
  4109be:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4109c3:	mov    rdi,r15
  4109c6:	lea    rsi,[rip+0x32567]        # 442f34 <_IO_stdin_used@@Base+0x15f34>
  4109cd:	xor    eax,eax
  4109cf:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4109d4:	test   r12d,r12d
  4109d7:	jle    410a96 <__flatcc_fb_gen_c_json_parser@@Base+0x1496>
  4109dd:	mov    r13d,0x1
  4109e3:	mov    ebx,0x10
  4109e8:	jmp    410a0d <__flatcc_fb_gen_c_json_parser@@Base+0x140d>
  4109ea:	xor    r13d,r13d
  4109ed:	mov    rdi,r15
  4109f0:	lea    rsi,[rip+0x32592]        # 442f89 <_IO_stdin_used@@Base+0x15f89>
  4109f7:	xor    eax,eax
  4109f9:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4109fe:	xchg   ax,ax
  410a00:	add    rbx,0x20
  410a04:	dec    r12
  410a07:	je     410a8d <__flatcc_fb_gen_c_json_parser@@Base+0x148d>
  410a0d:	mov    rax,QWORD PTR [rsp+0x140]
  410a15:	mov    rax,QWORD PTR [rax+rbx*1]
  410a19:	movzx  ecx,WORD PTR [rax+0x70]
  410a1d:	test   cl,0x4
  410a20:	jne    410a00 <__flatcc_fb_gen_c_json_parser@@Base+0x1400>
  410a22:	movzx  edx,WORD PTR [rax+0x28]
  410a26:	and    edx,0xfffffffe
  410a29:	cmp    dx,0xe
  410a2d:	jne    410a50 <__flatcc_fb_gen_c_json_parser@@Base+0x1450>
  410a2f:	mov    rdx,QWORD PTR [rax+0x18]
  410a33:	xor    esi,esi
  410a35:	cmp    WORD PTR [rdx+0x10],0x4
  410a3a:	sete   sil
  410a3e:	test   ecx,0x100
  410a44:	je     410a00 <__flatcc_fb_gen_c_json_parser@@Base+0x1400>
  410a46:	jmp    410a5a <__flatcc_fb_gen_c_json_parser@@Base+0x145a>
  410a48:	nop    DWORD PTR [rax+rax*1+0x0]
  410a50:	xor    esi,esi
  410a52:	test   ecx,0x100
  410a58:	je     410a00 <__flatcc_fb_gen_c_json_parser@@Base+0x1400>
  410a5a:	mov    rdx,QWORD PTR [rax+0x88]
  410a61:	sub    rdx,rsi
  410a64:	test   r13d,r13d
  410a67:	je     4109ea <__flatcc_fb_gen_c_json_parser@@Base+0x13ea>
  410a6d:	xor    r13d,r13d
  410a70:	mov    rdi,r15
  410a73:	lea    rsi,[rip+0x324d7]        # 442f51 <_IO_stdin_used@@Base+0x15f51>
  410a7a:	xor    eax,eax
  410a7c:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410a81:	inc    DWORD PTR [r15+0xf0]
  410a88:	jmp    410a00 <__flatcc_fb_gen_c_json_parser@@Base+0x1400>
  410a8d:	test   r13d,r13d
  410a90:	je     410c08 <__flatcc_fb_gen_c_json_parser@@Base+0x1608>
  410a96:	cmp    DWORD PTR [rsp+0x164],0x0
  410a9e:	je     410ab1 <__flatcc_fb_gen_c_json_parser@@Base+0x14b1>
  410aa0:	mov    rdi,r15
  410aa3:	lea    rsi,[rip+0x3256d]        # 443017 <_IO_stdin_used@@Base+0x16017>
  410aaa:	xor    eax,eax
  410aac:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410ab1:	mov    rdi,r15
  410ab4:	lea    rsi,[rip+0x3259f]        # 44305a <_IO_stdin_used@@Base+0x1605a>
  410abb:	xor    eax,eax
  410abd:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410ac2:	mov    rdi,r15
  410ac5:	lea    rsi,[rip+0x30d5f]        # 44182b <_IO_stdin_used@@Base+0x1482b>
  410acc:	xor    eax,eax
  410ace:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410ad3:	mov    eax,DWORD PTR [r15+0xf0]
  410ada:	mov    DWORD PTR [r15+0xf8],eax
  410ae1:	mov    DWORD PTR [r15+0xf0],0x0
  410aec:	mov    rdi,r15
  410aef:	lea    rsi,[rip+0x31574]        # 44206a <_IO_stdin_used@@Base+0x1506a>
  410af6:	xor    eax,eax
  410af8:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410afd:	mov    eax,DWORD PTR [r15+0xf8]
  410b04:	mov    DWORD PTR [r15+0xf0],eax
  410b0b:	mov    rdi,r15
  410b0e:	lea    rsi,[rip+0x30d32]        # 441847 <_IO_stdin_used@@Base+0x14847>
  410b15:	xor    eax,eax
  410b17:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410b1c:	mov    eax,DWORD PTR [r15+0xf0]
  410b23:	test   eax,eax
  410b25:	je     411b1f <__flatcc_fb_gen_c_json_parser@@Base+0x251f>
  410b2b:	dec    eax
  410b2d:	mov    DWORD PTR [r15+0xf0],eax
  410b34:	mov    rdi,r15
  410b37:	lea    r13,[rip+0x1fd8a]        # 4308c8 <_IO_stdin_used@@Base+0x38c8>
  410b3e:	mov    rsi,r13
  410b41:	xor    eax,eax
  410b43:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410b48:	mov    rdi,r15
  410b4b:	lea    r12,[rip+0x1d9fd]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  410b52:	mov    rsi,r12
  410b55:	xor    eax,eax
  410b57:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410b5c:	mov    rdi,r15
  410b5f:	lea    rsi,[rip+0x320ff]        # 442c65 <_IO_stdin_used@@Base+0x15c65>
  410b66:	lea    rbx,[rsp+0x20]
  410b6b:	mov    rdx,rbx
  410b6e:	xor    eax,eax
  410b70:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410b75:	mov    rdi,r15
  410b78:	lea    rsi,[rip+0x338b3]        # 444432 <_IO_stdin_used@@Base+0x17432>
  410b7f:	xor    eax,eax
  410b81:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410b86:	inc    DWORD PTR [r15+0xf0]
  410b8d:	mov    rdi,r15
  410b90:	lea    rsi,[rip+0x32505]        # 44309c <_IO_stdin_used@@Base+0x1609c>
  410b97:	mov    rdx,rbx
  410b9a:	xor    eax,eax
  410b9c:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410ba1:	mov    eax,DWORD PTR [r15+0xf0]
  410ba8:	test   eax,eax
  410baa:	je     411b3e <__flatcc_fb_gen_c_json_parser@@Base+0x253e>
  410bb0:	dec    eax
  410bb2:	mov    DWORD PTR [r15+0xf0],eax
  410bb9:	mov    rdi,r15
  410bbc:	mov    rsi,r13
  410bbf:	xor    eax,eax
  410bc1:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410bc6:	mov    rdi,r15
  410bc9:	mov    rsi,r12
  410bcc:	xor    eax,eax
  410bce:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410bd3:	mov    rdi,QWORD PTR [rsp+0x140]
  410bdb:	test   rdi,rdi
  410bde:	je     410be5 <__flatcc_fb_gen_c_json_parser@@Base+0x15e5>
  410be0:	call   406040 <free@plt>
  410be5:	vpxor  xmm0,xmm0,xmm0
  410be9:	lea    rbx,[rsp+0x20]
  410bee:	lea    rcx,[rip+0x3383d]        # 444432 <_IO_stdin_used@@Base+0x17432>
  410bf5:	lea    r13,[rip+0x1d953]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  410bfc:	lea    r12,[rip+0x1fcc5]        # 4308c8 <_IO_stdin_used@@Base+0x38c8>
  410c03:	jmp    40fb25 <__flatcc_fb_gen_c_json_parser@@Base+0x525>
  410c08:	mov    eax,DWORD PTR [r15+0xf0]
  410c0f:	test   eax,eax
  410c11:	je     411b7c <__flatcc_fb_gen_c_json_parser@@Base+0x257c>
  410c17:	dec    eax
  410c19:	mov    DWORD PTR [r15+0xf0],eax
  410c20:	mov    rdi,r15
  410c23:	lea    rsi,[rip+0x31981]        # 4425ab <_IO_stdin_used@@Base+0x155ab>
  410c2a:	xor    eax,eax
  410c2c:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410c31:	inc    DWORD PTR [r15+0xf0]
  410c38:	mov    rdi,r15
  410c3b:	lea    rsi,[rip+0x3237f]        # 442fc1 <_IO_stdin_used@@Base+0x15fc1>
  410c42:	xor    eax,eax
  410c44:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410c49:	mov    rdi,r15
  410c4c:	lea    rsi,[rip+0x31780]        # 4423d3 <_IO_stdin_used@@Base+0x153d3>
  410c53:	xor    eax,eax
  410c55:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410c5a:	mov    eax,DWORD PTR [r15+0xf0]
  410c61:	test   eax,eax
  410c63:	lea    rsi,[rip+0x1fc5e]        # 4308c8 <_IO_stdin_used@@Base+0x38c8>
  410c6a:	je     411b9b <__flatcc_fb_gen_c_json_parser@@Base+0x259b>
  410c70:	dec    eax
  410c72:	mov    DWORD PTR [r15+0xf0],eax
  410c79:	mov    rdi,r15
  410c7c:	xor    eax,eax
  410c7e:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410c83:	cmp    DWORD PTR [rsp+0x164],0x0
  410c8b:	jne    410aa0 <__flatcc_fb_gen_c_json_parser@@Base+0x14a0>
  410c91:	jmp    410ab1 <__flatcc_fb_gen_c_json_parser@@Base+0x14b1>
  410c96:	mov    rax,QWORD PTR [r15+0xd8]
  410c9d:	mov    rdi,QWORD PTR [rax+0x68]
  410ca1:	lea    rsi,[rip+0x1598]        # 412240 <__flatcc_fb_gen_c_json_parser@@Base+0x2c40>
  410ca8:	mov    rdx,r15
  410cab:	vzeroupper 
  410cae:	call   41a5a0 <fb_scope_table_visit@@Base>
  410cb3:	vpxor  xmm0,xmm0,xmm0
  410cb7:	vmovdqa YMMWORD PTR [rsp+0x140],ymm0
  410cc0:	vmovdqu YMMWORD PTR [rsp+0x150],ymm0
  410cc9:	mov    rax,QWORD PTR [r15+0xd8]
  410cd0:	mov    rdi,QWORD PTR [rax+0x68]
  410cd4:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  410cda:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  410ce0:	mov    QWORD PTR [rsp+0x60],0x0
  410ce9:	mov    DWORD PTR [rsp+0x20],0x1
  410cf1:	mov    QWORD PTR [rsp+0x68],rax
  410cf6:	lea    rsi,[rip+0x4273]        # 414f70 <__flatcc_fb_gen_c_json_parser@@Base+0x5970>
  410cfd:	lea    rdx,[rsp+0x20]
  410d02:	mov    QWORD PTR [rsp+0x240],rdi
  410d0a:	vzeroupper 
  410d0d:	call   41a5a0 <fb_scope_table_visit@@Base>
  410d12:	movsxd r14,DWORD PTR [rsp+0x24]
  410d17:	mov    esi,0x10
  410d1c:	mov    rdi,r14
  410d1f:	call   406140 <calloc@plt>
  410d24:	mov    r12,rax
  410d27:	mov    QWORD PTR [rsp+0x38],rax
  410d2c:	mov    r13d,DWORD PTR [rsp+0x28]
  410d31:	movsxd rdi,r13d
  410d34:	mov    esi,0x10
  410d39:	call   406140 <calloc@plt>
  410d3e:	mov    rbx,rax
  410d41:	mov    QWORD PTR [rsp+0x40],rax
  410d46:	mov    rdi,QWORD PTR [rsp+0x30]
  410d4b:	mov    QWORD PTR [rsp+0x120],rdi
  410d53:	call   4061a0 <malloc@plt>
  410d58:	mov    QWORD PTR [rsp+0x48],rax
  410d5d:	mov    QWORD PTR [rsp+0x50],r12
  410d62:	mov    QWORD PTR [rsp+0x58],rbx
  410d67:	mov    QWORD PTR [rsp+0x60],rax
  410d6c:	test   r14,r14
  410d6f:	jle    410d76 <__flatcc_fb_gen_c_json_parser@@Base+0x1776>
  410d71:	test   r12,r12
  410d74:	je     410daa <__flatcc_fb_gen_c_json_parser@@Base+0x17aa>
  410d76:	test   r13d,r13d
  410d79:	jle    410d80 <__flatcc_fb_gen_c_json_parser@@Base+0x1780>
  410d7b:	test   rbx,rbx
  410d7e:	je     410d98 <__flatcc_fb_gen_c_json_parser@@Base+0x1798>
  410d80:	cmp    QWORD PTR [rsp+0x120],0x0
  410d89:	je     41109b <__flatcc_fb_gen_c_json_parser@@Base+0x1a9b>
  410d8f:	test   rax,rax
  410d92:	jne    41109b <__flatcc_fb_gen_c_json_parser@@Base+0x1a9b>
  410d98:	test   r12,r12
  410d9b:	je     410daa <__flatcc_fb_gen_c_json_parser@@Base+0x17aa>
  410d9d:	mov    rdi,r12
  410da0:	call   406040 <free@plt>
  410da5:	mov    rbx,QWORD PTR [rsp+0x40]
  410daa:	test   rbx,rbx
  410dad:	je     410db7 <__flatcc_fb_gen_c_json_parser@@Base+0x17b7>
  410daf:	mov    rdi,rbx
  410db2:	call   406040 <free@plt>
  410db7:	mov    rdi,QWORD PTR [rsp+0x48]
  410dbc:	test   rdi,rdi
  410dbf:	je     410dc6 <__flatcc_fb_gen_c_json_parser@@Base+0x17c6>
  410dc1:	call   406040 <free@plt>
  410dc6:	mov    rax,QWORD PTR [r15+0xd8]
  410dcd:	mov    rsi,QWORD PTR [rax+0x58]
  410dd1:	test   rsi,rsi
  410dd4:	je     4112c5 <__flatcc_fb_gen_c_json_parser@@Base+0x1cc5>
  410dda:	movzx  eax,WORD PTR [rsi+0x10]
  410dde:	cmp    ax,0x1
  410de2:	je     410f46 <__flatcc_fb_gen_c_json_parser@@Base+0x1946>
  410de8:	test   ax,ax
  410deb:	jne    4112c5 <__flatcc_fb_gen_c_json_parser@@Base+0x1cc5>
  410df1:	vpxor  xmm0,xmm0,xmm0
  410df5:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm0
  410dfe:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  410e07:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  410e10:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  410e19:	vmovdqa YMMWORD PTR [rsp+0x60],ymm0
  410e1f:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  410e25:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  410e2b:	mov    QWORD PTR [rsp+0x100],0x0
  410e37:	mov    rdi,QWORD PTR [rsi+0x18]
  410e3b:	lea    rdx,[rsp+0x20]
  410e40:	vzeroupper 
  410e43:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  410e48:	mov    rax,QWORD PTR [r15+0xd8]
  410e4f:	mov    rdx,QWORD PTR [rax+0x110]
  410e56:	lea    rsi,[rip+0x301bf]        # 44101c <_IO_stdin_used@@Base+0x1401c>
  410e5d:	mov    rdi,r15
  410e60:	xor    eax,eax
  410e62:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410e67:	add    DWORD PTR [r15+0xf0],0x2
  410e6f:	lea    rsi,[rip+0x324a3]        # 443319 <_IO_stdin_used@@Base+0x16319>
  410e76:	mov    rdi,r15
  410e79:	xor    eax,eax
  410e7b:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410e80:	mov    eax,DWORD PTR [r15+0xf0]
  410e87:	test   eax,eax
  410e89:	je     411bd9 <__flatcc_fb_gen_c_json_parser@@Base+0x25d9>
  410e8f:	mov    ecx,eax
  410e91:	dec    ecx
  410e93:	mov    DWORD PTR [r15+0xf0],ecx
  410e9a:	je     411bd9 <__flatcc_fb_gen_c_json_parser@@Base+0x25d9>
  410ea0:	add    eax,0xfffffffe
  410ea3:	mov    DWORD PTR [r15+0xf0],eax
  410eaa:	lea    rsi,[rip+0x33581]        # 444432 <_IO_stdin_used@@Base+0x17432>
  410eb1:	mov    rdi,r15
  410eb4:	xor    eax,eax
  410eb6:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410ebb:	inc    DWORD PTR [r15+0xf0]
  410ec2:	lea    rsi,[rip+0x324ba]        # 443383 <_IO_stdin_used@@Base+0x16383>
  410ec9:	mov    rdi,r15
  410ecc:	xor    eax,eax
  410ece:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410ed3:	lea    rsi,[rip+0x324c6]        # 4433a0 <_IO_stdin_used@@Base+0x163a0>
  410eda:	mov    rdi,r15
  410edd:	xor    eax,eax
  410edf:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410ee4:	lea    rsi,[rip+0x1d664]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  410eeb:	mov    rdi,r15
  410eee:	xor    eax,eax
  410ef0:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410ef5:	lea    rsi,[rip+0x324bf]        # 4433bb <_IO_stdin_used@@Base+0x163bb>
  410efc:	mov    rdi,r15
  410eff:	xor    eax,eax
  410f01:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410f06:	lea    rsi,[rip+0x324c9]        # 4433d6 <_IO_stdin_used@@Base+0x163d6>
  410f0d:	mov    rdi,r15
  410f10:	xor    eax,eax
  410f12:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410f17:	mov    rax,QWORD PTR [r15+0xd8]
  410f1e:	cmp    WORD PTR [rax+0x20],0x2
  410f23:	jne    411105 <__flatcc_fb_gen_c_json_parser@@Base+0x1b05>
  410f29:	mov    edx,DWORD PTR [rax+0x18]
  410f2c:	mov    rcx,QWORD PTR [rax+0x10]
  410f30:	lea    rsi,[rip+0x324da]        # 443411 <_IO_stdin_used@@Base+0x16411>
  410f37:	mov    rdi,r15
  410f3a:	xor    eax,eax
  410f3c:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410f41:	jmp    411116 <__flatcc_fb_gen_c_json_parser@@Base+0x1b16>
  410f46:	vpxor  xmm0,xmm0,xmm0
  410f4a:	vmovdqa YMMWORD PTR [rsp+0xe0],ymm0
  410f53:	vmovdqa YMMWORD PTR [rsp+0xc0],ymm0
  410f5c:	vmovdqa YMMWORD PTR [rsp+0xa0],ymm0
  410f65:	vmovdqa YMMWORD PTR [rsp+0x80],ymm0
  410f6e:	vmovdqa YMMWORD PTR [rsp+0x60],ymm0
  410f74:	vmovdqa YMMWORD PTR [rsp+0x40],ymm0
  410f7a:	vmovdqa YMMWORD PTR [rsp+0x20],ymm0
  410f80:	mov    QWORD PTR [rsp+0x100],0x0
  410f8c:	mov    rdi,QWORD PTR [rsi+0x18]
  410f90:	lea    rdx,[rsp+0x20]
  410f95:	vzeroupper 
  410f98:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  410f9d:	mov    rax,QWORD PTR [r15+0xd8]
  410fa4:	mov    rdx,QWORD PTR [rax+0x110]
  410fab:	lea    rsi,[rip+0x3006a]        # 44101c <_IO_stdin_used@@Base+0x1401c>
  410fb2:	mov    rdi,r15
  410fb5:	xor    eax,eax
  410fb7:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410fbc:	add    DWORD PTR [r15+0xf0],0x2
  410fc4:	lea    rsi,[rip+0x3234e]        # 443319 <_IO_stdin_used@@Base+0x16319>
  410fcb:	mov    rdi,r15
  410fce:	xor    eax,eax
  410fd0:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  410fd5:	mov    eax,DWORD PTR [r15+0xf0]
  410fdc:	test   eax,eax
  410fde:	je     411bf8 <__flatcc_fb_gen_c_json_parser@@Base+0x25f8>
  410fe4:	mov    ecx,eax
  410fe6:	dec    ecx
  410fe8:	mov    DWORD PTR [r15+0xf0],ecx
  410fef:	je     411bf8 <__flatcc_fb_gen_c_json_parser@@Base+0x25f8>
  410ff5:	add    eax,0xfffffffe
  410ff8:	mov    DWORD PTR [r15+0xf0],eax
  410fff:	lea    rsi,[rip+0x3342c]        # 444432 <_IO_stdin_used@@Base+0x17432>
  411006:	mov    rdi,r15
  411009:	xor    eax,eax
  41100b:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411010:	inc    DWORD PTR [r15+0xf0]
  411017:	lea    rsi,[rip+0x32549]        # 443567 <_IO_stdin_used@@Base+0x16567>
  41101e:	mov    rdi,r15
  411021:	xor    eax,eax
  411023:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411028:	lea    rsi,[rip+0x32371]        # 4433a0 <_IO_stdin_used@@Base+0x163a0>
  41102f:	mov    rdi,r15
  411032:	xor    eax,eax
  411034:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411039:	lea    rsi,[rip+0x1d50f]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  411040:	mov    rdi,r15
  411043:	xor    eax,eax
  411045:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41104a:	lea    rsi,[rip+0x32531]        # 443582 <_IO_stdin_used@@Base+0x16582>
  411051:	mov    rdi,r15
  411054:	xor    eax,eax
  411056:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41105b:	lea    rsi,[rip+0x32374]        # 4433d6 <_IO_stdin_used@@Base+0x163d6>
  411062:	mov    rdi,r15
  411065:	xor    eax,eax
  411067:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41106c:	mov    rax,QWORD PTR [r15+0xd8]
  411073:	cmp    WORD PTR [rax+0x20],0x2
  411078:	jne    4111df <__flatcc_fb_gen_c_json_parser@@Base+0x1bdf>
  41107e:	mov    edx,DWORD PTR [rax+0x18]
  411081:	mov    rcx,QWORD PTR [rax+0x10]
  411085:	lea    rsi,[rip+0x32385]        # 443411 <_IO_stdin_used@@Base+0x16411>
  41108c:	mov    rdi,r15
  41108f:	xor    eax,eax
  411091:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411096:	jmp    4111f0 <__flatcc_fb_gen_c_json_parser@@Base+0x1bf0>
  41109b:	lea    rsi,[rip+0x3eee]        # 414f90 <__flatcc_fb_gen_c_json_parser@@Base+0x5990>
  4110a2:	lea    rdx,[rsp+0x20]
  4110a7:	mov    rdi,QWORD PTR [rsp+0x240]
  4110af:	call   41a5a0 <fb_scope_table_visit@@Base>
  4110b4:	mov    rbx,QWORD PTR [rsp+0x38]
  4110b9:	movsxd r14,DWORD PTR [rsp+0x24]
  4110be:	lea    rcx,[rip+0x409b]        # 415160 <__flatcc_fb_gen_c_json_parser@@Base+0x5b60>
  4110c5:	mov    edx,0x10
  4110ca:	mov    rdi,rbx
  4110cd:	mov    rsi,r14
  4110d0:	call   406080 <qsort@plt>
  4110d5:	test   r14,r14
  4110d8:	jle    4113d6 <__flatcc_fb_gen_c_json_parser@@Base+0x1dd6>
  4110de:	mov    r8d,r14d
  4110e1:	lea    rcx,[r8-0x1]
  4110e5:	mov    eax,r8d
  4110e8:	and    eax,0x7
  4110eb:	cmp    rcx,0x7
  4110ef:	jae    411322 <__flatcc_fb_gen_c_json_parser@@Base+0x1d22>
  4110f5:	xor    ecx,ecx
  4110f7:	test   rax,rax
  4110fa:	jne    4113b5 <__flatcc_fb_gen_c_json_parser@@Base+0x1db5>
  411100:	jmp    4113d6 <__flatcc_fb_gen_c_json_parser@@Base+0x1dd6>
  411105:	lea    rsi,[rip+0x32342]        # 44344e <_IO_stdin_used@@Base+0x1644e>
  41110c:	mov    rdi,r15
  41110f:	xor    eax,eax
  411111:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411116:	lea    rsi,[rip+0x32369]        # 443486 <_IO_stdin_used@@Base+0x16486>
  41111d:	lea    rdx,[rsp+0x20]
  411122:	mov    rdi,r15
  411125:	xor    eax,eax
  411127:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41112c:	lea    rsi,[rip+0x32387]        # 4434ba <_IO_stdin_used@@Base+0x164ba>
  411133:	mov    rdi,r15
  411136:	xor    eax,eax
  411138:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41113d:	inc    DWORD PTR [r15+0xf0]
  411144:	lea    rsi,[rip+0x32381]        # 4434cc <_IO_stdin_used@@Base+0x164cc>
  41114b:	mov    rdi,r15
  41114e:	xor    eax,eax
  411150:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411155:	mov    eax,DWORD PTR [r15+0xf0]
  41115c:	test   eax,eax
  41115e:	je     411c36 <__flatcc_fb_gen_c_json_parser@@Base+0x2636>
  411164:	dec    eax
  411166:	mov    DWORD PTR [r15+0xf0],eax
  41116d:	lea    rsi,[rip+0x1f754]        # 4308c8 <_IO_stdin_used@@Base+0x38c8>
  411174:	mov    rdi,r15
  411177:	xor    eax,eax
  411179:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41117e:	lea    rsi,[rip+0x3235a]        # 4434df <_IO_stdin_used@@Base+0x164df>
  411185:	mov    rdi,r15
  411188:	xor    eax,eax
  41118a:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41118f:	lea    rsi,[rip+0x3237d]        # 443513 <_IO_stdin_used@@Base+0x16513>
  411196:	mov    rdi,r15
  411199:	xor    eax,eax
  41119b:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4111a0:	lea    rsi,[rip+0x3076d]        # 441914 <_IO_stdin_used@@Base+0x14914>
  4111a7:	mov    rdi,r15
  4111aa:	xor    eax,eax
  4111ac:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4111b1:	mov    eax,DWORD PTR [r15+0xf0]
  4111b8:	test   eax,eax
  4111ba:	jne    41129a <__flatcc_fb_gen_c_json_parser@@Base+0x1c9a>
  4111c0:	lea    rdi,[rip+0x2feca]        # 441091 <_IO_stdin_used@@Base+0x14091>
  4111c7:	lea    rsi,[rip+0x2fecf]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  4111ce:	lea    rcx,[rip+0x3216f]        # 443344 <_IO_stdin_used@@Base+0x16344>
  4111d5:	mov    edx,0x65e
  4111da:	call   4060f0 <__assert_fail@plt>
  4111df:	lea    rsi,[rip+0x32268]        # 44344e <_IO_stdin_used@@Base+0x1644e>
  4111e6:	mov    rdi,r15
  4111e9:	xor    eax,eax
  4111eb:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4111f0:	lea    rsi,[rip+0x323a4]        # 44359b <_IO_stdin_used@@Base+0x1659b>
  4111f7:	lea    rdx,[rsp+0x20]
  4111fc:	mov    rdi,r15
  4111ff:	xor    eax,eax
  411201:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411206:	lea    rsi,[rip+0x322ad]        # 4434ba <_IO_stdin_used@@Base+0x164ba>
  41120d:	mov    rdi,r15
  411210:	xor    eax,eax
  411212:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411217:	inc    DWORD PTR [r15+0xf0]
  41121e:	lea    rsi,[rip+0x322a7]        # 4434cc <_IO_stdin_used@@Base+0x164cc>
  411225:	mov    rdi,r15
  411228:	xor    eax,eax
  41122a:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41122f:	mov    eax,DWORD PTR [r15+0xf0]
  411236:	test   eax,eax
  411238:	je     411c55 <__flatcc_fb_gen_c_json_parser@@Base+0x2655>
  41123e:	dec    eax
  411240:	mov    DWORD PTR [r15+0xf0],eax
  411247:	lea    rsi,[rip+0x1f67a]        # 4308c8 <_IO_stdin_used@@Base+0x38c8>
  41124e:	mov    rdi,r15
  411251:	xor    eax,eax
  411253:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411258:	lea    rsi,[rip+0x32280]        # 4434df <_IO_stdin_used@@Base+0x164df>
  41125f:	mov    rdi,r15
  411262:	xor    eax,eax
  411264:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411269:	lea    rsi,[rip+0x322a3]        # 443513 <_IO_stdin_used@@Base+0x16513>
  411270:	mov    rdi,r15
  411273:	xor    eax,eax
  411275:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41127a:	lea    rsi,[rip+0x30693]        # 441914 <_IO_stdin_used@@Base+0x14914>
  411281:	mov    rdi,r15
  411284:	xor    eax,eax
  411286:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41128b:	mov    eax,DWORD PTR [r15+0xf0]
  411292:	test   eax,eax
  411294:	je     411c74 <__flatcc_fb_gen_c_json_parser@@Base+0x2674>
  41129a:	dec    eax
  41129c:	mov    DWORD PTR [r15+0xf0],eax
  4112a3:	lea    rsi,[rip+0x1f61e]        # 4308c8 <_IO_stdin_used@@Base+0x38c8>
  4112aa:	mov    rdi,r15
  4112ad:	xor    eax,eax
  4112af:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4112b4:	lea    rsi,[rip+0x1d294]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  4112bb:	mov    rdi,r15
  4112be:	xor    eax,eax
  4112c0:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4112c5:	mov    rax,QWORD PTR [r15+0xe0]
  4112cc:	cmp    DWORD PTR [rax+0xac],0x0
  4112d3:	je     4112f2 <__flatcc_fb_gen_c_json_parser@@Base+0x1cf2>
  4112d5:	mov    rcx,QWORD PTR [r15+0xd0]
  4112dc:	lea    rdi,[rip+0x23008]        # 4342eb <_IO_stdin_used@@Base+0x72eb>
  4112e3:	mov    esi,0x24
  4112e8:	mov    edx,0x1
  4112ed:	call   406220 <fwrite@plt>
  4112f2:	mov    rax,QWORD PTR [r15+0xd8]
  4112f9:	mov    rdx,QWORD PTR [rax+0x118]
  411300:	lea    rsi,[rip+0x322cf]        # 4435d6 <_IO_stdin_used@@Base+0x165d6>
  411307:	mov    rdi,r15
  41130a:	xor    eax,eax
  41130c:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411311:	xor    eax,eax
  411313:	lea    rsp,[rbp-0x28]
  411317:	pop    rbx
  411318:	pop    r12
  41131a:	pop    r13
  41131c:	pop    r14
  41131e:	pop    r15
  411320:	pop    rbp
  411321:	ret    
  411322:	lea    rsi,[rbx+0x70]
  411326:	sub    r8,rax
  411329:	xor    ecx,ecx
  41132b:	nop    DWORD PTR [rax+rax*1+0x0]
  411330:	mov    rdi,QWORD PTR [rsi-0x70]
  411334:	mov    QWORD PTR [rdi+0xc8],rcx
  41133b:	mov    rdi,QWORD PTR [rsi-0x60]
  41133f:	lea    rdx,[rcx+0x1]
  411343:	mov    QWORD PTR [rdi+0xc8],rdx
  41134a:	mov    rdx,QWORD PTR [rsi-0x50]
  41134e:	lea    rdi,[rcx+0x2]
  411352:	mov    QWORD PTR [rdx+0xc8],rdi
  411359:	mov    rdx,QWORD PTR [rsi-0x40]
  41135d:	lea    rdi,[rcx+0x3]
  411361:	mov    QWORD PTR [rdx+0xc8],rdi
  411368:	mov    rdx,QWORD PTR [rsi-0x30]
  41136c:	lea    rdi,[rcx+0x4]
  411370:	mov    QWORD PTR [rdx+0xc8],rdi
  411377:	mov    rdx,QWORD PTR [rsi-0x20]
  41137b:	lea    rdi,[rcx+0x5]
  41137f:	mov    QWORD PTR [rdx+0xc8],rdi
  411386:	mov    rdx,QWORD PTR [rsi-0x10]
  41138a:	lea    rdi,[rcx+0x6]
  41138e:	mov    QWORD PTR [rdx+0xc8],rdi
  411395:	mov    rdx,QWORD PTR [rsi]
  411398:	lea    rdi,[rcx+0x7]
  41139c:	mov    QWORD PTR [rdx+0xc8],rdi
  4113a3:	add    rcx,0x8
  4113a7:	sub    rsi,0xffffffffffffff80
  4113ab:	cmp    r8,rcx
  4113ae:	jne    411330 <__flatcc_fb_gen_c_json_parser@@Base+0x1d30>
  4113b0:	test   rax,rax
  4113b3:	je     4113d6 <__flatcc_fb_gen_c_json_parser@@Base+0x1dd6>
  4113b5:	mov    rdx,rcx
  4113b8:	shl    rdx,0x4
  4113bc:	add    rbx,rdx
  4113bf:	nop
  4113c0:	mov    rdx,QWORD PTR [rbx]
  4113c3:	mov    QWORD PTR [rdx+0xc8],rcx
  4113ca:	inc    rcx
  4113cd:	add    rbx,0x10
  4113d1:	dec    rax
  4113d4:	jne    4113c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1dc0>
  4113d6:	mov    rbx,QWORD PTR [rsp+0x40]
  4113db:	movsxd r14,DWORD PTR [rsp+0x28]
  4113e0:	lea    rcx,[rip+0x3d79]        # 415160 <__flatcc_fb_gen_c_json_parser@@Base+0x5b60>
  4113e7:	mov    edx,0x10
  4113ec:	mov    rdi,rbx
  4113ef:	mov    rsi,r14
  4113f2:	call   406080 <qsort@plt>
  4113f7:	test   r14,r14
  4113fa:	jle    4114d6 <__flatcc_fb_gen_c_json_parser@@Base+0x1ed6>
  411400:	mov    r8d,r14d
  411403:	lea    rcx,[r8-0x1]
  411407:	mov    eax,r8d
  41140a:	and    eax,0x7
  41140d:	cmp    rcx,0x7
  411411:	jae    411423 <__flatcc_fb_gen_c_json_parser@@Base+0x1e23>
  411413:	xor    ecx,ecx
  411415:	test   rax,rax
  411418:	jne    4114b5 <__flatcc_fb_gen_c_json_parser@@Base+0x1eb5>
  41141e:	jmp    4114d6 <__flatcc_fb_gen_c_json_parser@@Base+0x1ed6>
  411423:	lea    rsi,[rbx+0x70]
  411427:	sub    r8,rax
  41142a:	xor    ecx,ecx
  41142c:	nop    DWORD PTR [rax+0x0]
  411430:	mov    rdi,QWORD PTR [rsi-0x70]
  411434:	mov    QWORD PTR [rdi+0xc8],rcx
  41143b:	mov    rdi,QWORD PTR [rsi-0x60]
  41143f:	lea    rdx,[rcx+0x1]
  411443:	mov    QWORD PTR [rdi+0xc8],rdx
  41144a:	mov    rdx,QWORD PTR [rsi-0x50]
  41144e:	lea    rdi,[rcx+0x2]
  411452:	mov    QWORD PTR [rdx+0xc8],rdi
  411459:	mov    rdx,QWORD PTR [rsi-0x40]
  41145d:	lea    rdi,[rcx+0x3]
  411461:	mov    QWORD PTR [rdx+0xc8],rdi
  411468:	mov    rdx,QWORD PTR [rsi-0x30]
  41146c:	lea    rdi,[rcx+0x4]
  411470:	mov    QWORD PTR [rdx+0xc8],rdi
  411477:	mov    rdx,QWORD PTR [rsi-0x20]
  41147b:	lea    rdi,[rcx+0x5]
  41147f:	mov    QWORD PTR [rdx+0xc8],rdi
  411486:	mov    rdx,QWORD PTR [rsi-0x10]
  41148a:	lea    rdi,[rcx+0x6]
  41148e:	mov    QWORD PTR [rdx+0xc8],rdi
  411495:	mov    rdx,QWORD PTR [rsi]
  411498:	lea    rdi,[rcx+0x7]
  41149c:	mov    QWORD PTR [rdx+0xc8],rdi
  4114a3:	add    rcx,0x8
  4114a7:	sub    rsi,0xffffffffffffff80
  4114ab:	cmp    r8,rcx
  4114ae:	jne    411430 <__flatcc_fb_gen_c_json_parser@@Base+0x1e30>
  4114b0:	test   rax,rax
  4114b3:	je     4114d6 <__flatcc_fb_gen_c_json_parser@@Base+0x1ed6>
  4114b5:	mov    rdx,rcx
  4114b8:	shl    rdx,0x4
  4114bc:	add    rbx,rdx
  4114bf:	nop
  4114c0:	mov    rdx,QWORD PTR [rbx]
  4114c3:	mov    QWORD PTR [rdx+0xc8],rcx
  4114ca:	inc    rcx
  4114cd:	add    rbx,0x10
  4114d1:	dec    rax
  4114d4:	jne    4114c0 <__flatcc_fb_gen_c_json_parser@@Base+0x1ec0>
  4114d6:	movsxd rbx,DWORD PTR [rsp+0x28]
  4114db:	test   rbx,rbx
  4114de:	je     411571 <__flatcc_fb_gen_c_json_parser@@Base+0x1f71>
  4114e4:	mov    rdi,rbx
  4114e7:	shl    rdi,0x5
  4114eb:	call   4061a0 <malloc@plt>
  4114f0:	test   rax,rax
  4114f3:	je     411581 <__flatcc_fb_gen_c_json_parser@@Base+0x1f81>
  4114f9:	mov    r12,rax
  4114fc:	mov    QWORD PTR [rsp+0x120],rbx
  411504:	test   ebx,ebx
  411506:	jle    41154f <__flatcc_fb_gen_c_json_parser@@Base+0x1f4f>
  411508:	mov    ebx,0x8
  41150d:	mov    r13,QWORD PTR [rsp+0x40]
  411512:	mov    r14,QWORD PTR [rsp+0x120]
  41151a:	nop    WORD PTR [rax+rax*1+0x0]
  411520:	mov    rdi,QWORD PTR [r13+rbx*1+0x0]
  411525:	mov    QWORD PTR [r12+rbx*2-0x10],rdi
  41152a:	call   4060d0 <strlen@plt>
  41152f:	mov    DWORD PTR [r12+rbx*2-0x8],eax
  411534:	mov    rax,QWORD PTR [r13+rbx*1-0x8]
  411539:	mov    QWORD PTR [r12+rbx*2],rax
  41153d:	mov    DWORD PTR [r12+rbx*2+0x8],0x0
  411546:	add    rbx,0x10
  41154a:	dec    r14
  41154d:	jne    411520 <__flatcc_fb_gen_c_json_parser@@Base+0x1f20>
  41154f:	lea    rcx,[rip+0x23ea]        # 413940 <__flatcc_fb_gen_c_json_parser@@Base+0x4340>
  411556:	mov    edx,0x20
  41155b:	mov    rdi,r12
  41155e:	mov    rsi,QWORD PTR [rsp+0x120]
  411566:	call   406080 <qsort@plt>
  41156b:	mov    ebx,DWORD PTR [rsp+0x28]
  41156f:	jmp    411584 <__flatcc_fb_gen_c_json_parser@@Base+0x1f84>
  411571:	mov    QWORD PTR [rsp+0x140],0x0
  41157d:	xor    ebx,ebx
  41157f:	jmp    411599 <__flatcc_fb_gen_c_json_parser@@Base+0x1f99>
  411581:	xor    r12d,r12d
  411584:	mov    QWORD PTR [rsp+0x140],r12
  41158c:	test   ebx,ebx
  41158e:	jle    411599 <__flatcc_fb_gen_c_json_parser@@Base+0x1f99>
  411590:	test   r12,r12
  411593:	je     411c93 <__flatcc_fb_gen_c_json_parser@@Base+0x2693>
  411599:	mov    QWORD PTR [rsp+0x158],0x0
  4115a5:	mov    DWORD PTR [rsp+0x160],0x4
  4115b0:	lea    rax,[rip+0x3799]        # 414d50 <__flatcc_fb_gen_c_json_parser@@Base+0x5750>
  4115b7:	mov    QWORD PTR [rsp+0x148],rax
  4115bf:	lea    rax,[rip+0x38ba]        # 414e80 <__flatcc_fb_gen_c_json_parser@@Base+0x5880>
  4115c6:	mov    QWORD PTR [rsp+0x150],rax
  4115ce:	mov    rax,QWORD PTR [r15+0xd8]
  4115d5:	mov    rdx,QWORD PTR [rax+0x110]
  4115dc:	lea    rsi,[rip+0x2fe37]        # 44141a <_IO_stdin_used@@Base+0x1441a>
  4115e3:	mov    rdi,r15
  4115e6:	xor    eax,eax
  4115e8:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4115ed:	add    DWORD PTR [r15+0xf0],0x2
  4115f5:	lea    rsi,[rip+0x31b31]        # 44312d <_IO_stdin_used@@Base+0x1612d>
  4115fc:	mov    rdi,r15
  4115ff:	xor    eax,eax
  411601:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411606:	mov    eax,DWORD PTR [r15+0xf0]
  41160d:	test   eax,eax
  41160f:	je     411c17 <__flatcc_fb_gen_c_json_parser@@Base+0x2617>
  411615:	mov    ecx,eax
  411617:	dec    ecx
  411619:	mov    DWORD PTR [r15+0xf0],ecx
  411620:	je     411c17 <__flatcc_fb_gen_c_json_parser@@Base+0x2617>
  411626:	add    eax,0xfffffffe
  411629:	mov    DWORD PTR [r15+0xf0],eax
  411630:	lea    rsi,[rip+0x32dfb]        # 444432 <_IO_stdin_used@@Base+0x17432>
  411637:	mov    rdi,r15
  41163a:	xor    eax,eax
  41163c:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411641:	inc    DWORD PTR [r15+0xf0]
  411648:	test   ebx,ebx
  41164a:	je     4116f9 <__flatcc_fb_gen_c_json_parser@@Base+0x20f9>
  411650:	lea    rsi,[rip+0x303f4]        # 441a4b <_IO_stdin_used@@Base+0x14a4b>
  411657:	mov    rdi,r15
  41165a:	xor    eax,eax
  41165c:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411661:	lea    rsi,[rip+0x30400]        # 441a68 <_IO_stdin_used@@Base+0x14a68>
  411668:	mov    rdi,r15
  41166b:	xor    eax,eax
  41166d:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411672:	lea    rsi,[rip+0x30401]        # 441a7a <_IO_stdin_used@@Base+0x14a7a>
  411679:	mov    rdi,r15
  41167c:	xor    eax,eax
  41167e:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411683:	lea    rsi,[rip+0x1cec5]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41168a:	mov    rdi,r15
  41168d:	xor    eax,eax
  41168f:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411694:	lea    rsi,[rip+0x303eb]        # 441a86 <_IO_stdin_used@@Base+0x14a86>
  41169b:	mov    rdi,r15
  41169e:	xor    eax,eax
  4116a0:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4116a5:	dec    ebx
  4116a7:	lea    rsi,[rsp+0x140]
  4116af:	mov    rdi,r15
  4116b2:	xor    edx,edx
  4116b4:	mov    ecx,ebx
  4116b6:	xor    r8d,r8d
  4116b9:	call   412830 <__flatcc_fb_gen_c_json_parser@@Base+0x3230>
  4116be:	lea    rsi,[rip+0x30166]        # 44182b <_IO_stdin_used@@Base+0x1482b>
  4116c5:	mov    rdi,r15
  4116c8:	xor    eax,eax
  4116ca:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4116cf:	mov    eax,DWORD PTR [r15+0xf0]
  4116d6:	test   eax,eax
  4116d8:	jne    41172a <__flatcc_fb_gen_c_json_parser@@Base+0x212a>
  4116da:	lea    rdi,[rip+0x2f9b0]        # 441091 <_IO_stdin_used@@Base+0x14091>
  4116e1:	lea    rsi,[rip+0x2f9b5]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  4116e8:	lea    rcx,[rip+0x31bc6]        # 4432b5 <_IO_stdin_used@@Base+0x162b5>
  4116ef:	mov    edx,0x4c3
  4116f4:	call   4060f0 <__assert_fail@plt>
  4116f9:	lea    rsi,[rip+0x31be0]        # 4432e0 <_IO_stdin_used@@Base+0x162e0>
  411700:	mov    rdi,r15
  411703:	xor    eax,eax
  411705:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41170a:	lea    rsi,[rip+0x3031d]        # 441a2e <_IO_stdin_used@@Base+0x14a2e>
  411711:	mov    rdi,r15
  411714:	xor    eax,eax
  411716:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41171b:	mov    eax,DWORD PTR [r15+0xf0]
  411722:	test   eax,eax
  411724:	je     411ce6 <__flatcc_fb_gen_c_json_parser@@Base+0x26e6>
  41172a:	dec    eax
  41172c:	mov    DWORD PTR [r15+0xf0],eax
  411733:	lea    rsi,[rip+0x1f18e]        # 4308c8 <_IO_stdin_used@@Base+0x38c8>
  41173a:	mov    rdi,r15
  41173d:	xor    eax,eax
  41173f:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411744:	lea    rsi,[rip+0x1ce04]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41174b:	mov    rdi,r15
  41174e:	xor    eax,eax
  411750:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411755:	mov    rdi,QWORD PTR [rsp+0x140]
  41175d:	test   rdi,rdi
  411760:	je     411767 <__flatcc_fb_gen_c_json_parser@@Base+0x2167>
  411762:	call   406040 <free@plt>
  411767:	mov    rdi,QWORD PTR [rsp+0x38]
  41176c:	test   rdi,rdi
  41176f:	je     411776 <__flatcc_fb_gen_c_json_parser@@Base+0x2176>
  411771:	call   406040 <free@plt>
  411776:	mov    rdi,QWORD PTR [rsp+0x40]
  41177b:	test   rdi,rdi
  41177e:	jne    410db2 <__flatcc_fb_gen_c_json_parser@@Base+0x17b2>
  411784:	jmp    410db7 <__flatcc_fb_gen_c_json_parser@@Base+0x17b7>
  411789:	mov    rax,QWORD PTR [rip+0x3e868]        # 44fff8 <stderr@GLIBC_2.2.5>
  411790:	mov    rdi,QWORD PTR [rax]
  411793:	lea    rsi,[rip+0x1cc9a]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  41179a:	lea    rbx,[rip+0x2f8fc]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  4117a1:	lea    r8,[rip+0x2ff67]        # 44170f <_IO_stdin_used@@Base+0x1470f>
  4117a8:	mov    rdx,rbx
  4117ab:	mov    ecx,0x5ff
  4117b0:	xor    eax,eax
  4117b2:	call   406170 <fprintf@plt>
  4117b7:	lea    rdi,[rip+0x2dbdd]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  4117be:	lea    rcx,[rip+0x2fe1b]        # 4415e0 <_IO_stdin_used@@Base+0x145e0>
  4117c5:	mov    rsi,rbx
  4117c8:	mov    edx,0x5ff
  4117cd:	call   4060f0 <__assert_fail@plt>
  4117d2:	lea    rdi,[rip+0x2f8b8]        # 441091 <_IO_stdin_used@@Base+0x14091>
  4117d9:	lea    rsi,[rip+0x2f8bd]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  4117e0:	lea    rcx,[rip+0x2fdf9]        # 4415e0 <_IO_stdin_used@@Base+0x145e0>
  4117e7:	mov    edx,0x5fc
  4117ec:	call   4060f0 <__assert_fail@plt>
  4117f1:	mov    rax,QWORD PTR [rip+0x3e800]        # 44fff8 <stderr@GLIBC_2.2.5>
  4117f8:	mov    rdi,QWORD PTR [rax]
  4117fb:	lea    rsi,[rip+0x1cc32]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  411802:	lea    rbx,[rip+0x2f894]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  411809:	lea    r8,[rip+0x2fe83]        # 441693 <_IO_stdin_used@@Base+0x14693>
  411810:	mov    rdx,rbx
  411813:	mov    ecx,0x5f2
  411818:	xor    eax,eax
  41181a:	call   406170 <fprintf@plt>
  41181f:	lea    rdi,[rip+0x2db75]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  411826:	lea    rcx,[rip+0x2fdb3]        # 4415e0 <_IO_stdin_used@@Base+0x145e0>
  41182d:	mov    rsi,rbx
  411830:	mov    edx,0x5f2
  411835:	call   4060f0 <__assert_fail@plt>
  41183a:	lea    rdi,[rip+0x2f850]        # 441091 <_IO_stdin_used@@Base+0x14091>
  411841:	lea    rsi,[rip+0x2f855]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  411848:	lea    rcx,[rip+0x2fd91]        # 4415e0 <_IO_stdin_used@@Base+0x145e0>
  41184f:	mov    edx,0x5f6
  411854:	call   4060f0 <__assert_fail@plt>
  411859:	lea    rdi,[rip+0x2f831]        # 441091 <_IO_stdin_used@@Base+0x14091>
  411860:	lea    rsi,[rip+0x2f836]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  411867:	lea    rcx,[rip+0x2f89e]        # 44110c <_IO_stdin_used@@Base+0x1410c>
  41186e:	mov    edx,0x6d3
  411873:	call   4060f0 <__assert_fail@plt>
  411878:	lea    rdi,[rip+0x2f812]        # 441091 <_IO_stdin_used@@Base+0x14091>
  41187f:	lea    rsi,[rip+0x2f817]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  411886:	lea    rcx,[rip+0x2f87f]        # 44110c <_IO_stdin_used@@Base+0x1410c>
  41188d:	mov    edx,0x6c3
  411892:	call   4060f0 <__assert_fail@plt>
  411897:	lea    rdi,[rip+0x22df1]        # 43468f <_IO_stdin_used@@Base+0x768f>
  41189e:	lea    rsi,[rip+0x2f7f8]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  4118a5:	lea    rcx,[rip+0x314ae]        # 442d5a <_IO_stdin_used@@Base+0x15d5a>
  4118ac:	mov    edx,0x56e
  4118b1:	vzeroupper 
  4118b4:	call   4060f0 <__assert_fail@plt>
  4118b9:	mov    rax,QWORD PTR [rip+0x3e738]        # 44fff8 <stderr@GLIBC_2.2.5>
  4118c0:	mov    rdi,QWORD PTR [rax]
  4118c3:	lea    rsi,[rip+0x1cb6a]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  4118ca:	lea    rbx,[rip+0x2f7cc]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  4118d1:	lea    r8,[rip+0x300be]        # 441996 <_IO_stdin_used@@Base+0x14996>
  4118d8:	mov    rdx,rbx
  4118db:	mov    ecx,0x570
  4118e0:	xor    eax,eax
  4118e2:	call   406170 <fprintf@plt>
  4118e7:	lea    rdi,[rip+0x2daad]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  4118ee:	lea    rcx,[rip+0x31465]        # 442d5a <_IO_stdin_used@@Base+0x15d5a>
  4118f5:	mov    rsi,rbx
  4118f8:	mov    edx,0x570
  4118fd:	call   4060f0 <__assert_fail@plt>
  411902:	lea    rdi,[rip+0x23465]        # 434d6e <_IO_stdin_used@@Base+0x7d6e>
  411909:	lea    rsi,[rip+0x2f78d]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  411910:	lea    rcx,[rip+0x30556]        # 441e6d <_IO_stdin_used@@Base+0x14e6d>
  411917:	mov    edx,0x515
  41191c:	vzeroupper 
  41191f:	call   4060f0 <__assert_fail@plt>
  411924:	mov    rax,QWORD PTR [rip+0x3e6cd]        # 44fff8 <stderr@GLIBC_2.2.5>
  41192b:	mov    rdi,QWORD PTR [rax]
  41192e:	lea    rsi,[rip+0x1caff]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  411935:	lea    rbx,[rip+0x2f761]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  41193c:	lea    r8,[rip+0x30053]        # 441996 <_IO_stdin_used@@Base+0x14996>
  411943:	mov    rdx,rbx
  411946:	mov    ecx,0x517
  41194b:	xor    eax,eax
  41194d:	call   406170 <fprintf@plt>
  411952:	lea    rdi,[rip+0x2da42]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  411959:	lea    rcx,[rip+0x3050d]        # 441e6d <_IO_stdin_used@@Base+0x14e6d>
  411960:	mov    rsi,rbx
  411963:	mov    edx,0x517
  411968:	call   4060f0 <__assert_fail@plt>
  41196d:	lea    rdi,[rip+0x2f71d]        # 441091 <_IO_stdin_used@@Base+0x14091>
  411974:	lea    rsi,[rip+0x2f722]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  41197b:	lea    rcx,[rip+0x2fc5e]        # 4415e0 <_IO_stdin_used@@Base+0x145e0>
  411982:	mov    edx,0x5df
  411987:	call   4060f0 <__assert_fail@plt>
  41198c:	lea    rdi,[rip+0x2f6fe]        # 441091 <_IO_stdin_used@@Base+0x14091>
  411993:	lea    rsi,[rip+0x2f703]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  41199a:	lea    rcx,[rip+0x2fc3f]        # 4415e0 <_IO_stdin_used@@Base+0x145e0>
  4119a1:	mov    edx,0x607
  4119a6:	call   4060f0 <__assert_fail@plt>
  4119ab:	lea    rdi,[rip+0x2f6df]        # 441091 <_IO_stdin_used@@Base+0x14091>
  4119b2:	lea    rsi,[rip+0x2f6e4]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  4119b9:	lea    rcx,[rip+0x2fc20]        # 4415e0 <_IO_stdin_used@@Base+0x145e0>
  4119c0:	mov    edx,0x609
  4119c5:	call   4060f0 <__assert_fail@plt>
  4119ca:	lea    rdi,[rip+0x2f6c0]        # 441091 <_IO_stdin_used@@Base+0x14091>
  4119d1:	lea    rsi,[rip+0x2f6c5]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  4119d8:	lea    rcx,[rip+0x2fc01]        # 4415e0 <_IO_stdin_used@@Base+0x145e0>
  4119df:	mov    edx,0x60a
  4119e4:	call   4060f0 <__assert_fail@plt>
  4119e9:	lea    rdi,[rip+0x2f6a1]        # 441091 <_IO_stdin_used@@Base+0x14091>
  4119f0:	lea    rsi,[rip+0x2f6a6]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  4119f7:	lea    rcx,[rip+0x2fbe2]        # 4415e0 <_IO_stdin_used@@Base+0x145e0>
  4119fe:	mov    edx,0x60e
  411a03:	call   4060f0 <__assert_fail@plt>
  411a08:	lea    rdi,[rip+0x2f682]        # 441091 <_IO_stdin_used@@Base+0x14091>
  411a0f:	lea    rsi,[rip+0x2f687]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  411a16:	lea    rcx,[rip+0x2fbc3]        # 4415e0 <_IO_stdin_used@@Base+0x145e0>
  411a1d:	mov    edx,0x610
  411a22:	call   4060f0 <__assert_fail@plt>
  411a27:	lea    rdi,[rip+0x2f663]        # 441091 <_IO_stdin_used@@Base+0x14091>
  411a2e:	lea    rsi,[rip+0x2f668]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  411a35:	lea    rcx,[rip+0x2fee2]        # 44191e <_IO_stdin_used@@Base+0x1491e>
  411a3c:	mov    edx,0x62e
  411a41:	call   4060f0 <__assert_fail@plt>
  411a46:	lea    rdi,[rip+0x2f644]        # 441091 <_IO_stdin_used@@Base+0x14091>
  411a4d:	lea    rsi,[rip+0x2f649]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  411a54:	lea    rcx,[rip+0x2fec3]        # 44191e <_IO_stdin_used@@Base+0x1491e>
  411a5b:	mov    edx,0x62f
  411a60:	call   4060f0 <__assert_fail@plt>
  411a65:	lea    rdi,[rip+0x2f625]        # 441091 <_IO_stdin_used@@Base+0x14091>
  411a6c:	lea    rsi,[rip+0x2f62a]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  411a73:	lea    rcx,[rip+0x303f3]        # 441e6d <_IO_stdin_used@@Base+0x14e6d>
  411a7a:	mov    edx,0x536
  411a7f:	call   4060f0 <__assert_fail@plt>
  411a84:	lea    rdi,[rip+0x2f606]        # 441091 <_IO_stdin_used@@Base+0x14091>
  411a8b:	lea    rsi,[rip+0x2f60b]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  411a92:	lea    rcx,[rip+0x303d4]        # 441e6d <_IO_stdin_used@@Base+0x14e6d>
  411a99:	mov    edx,0x53f
  411a9e:	call   4060f0 <__assert_fail@plt>
  411aa3:	lea    rdi,[rip+0x232c4]        # 434d6e <_IO_stdin_used@@Base+0x7d6e>
  411aaa:	lea    rsi,[rip+0x2f5ec]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  411ab1:	lea    rcx,[rip+0x31053]        # 442b0b <_IO_stdin_used@@Base+0x15b0b>
  411ab8:	mov    edx,0x549
  411abd:	call   4060f0 <__assert_fail@plt>
  411ac2:	lea    rdi,[rip+0x2f5c8]        # 441091 <_IO_stdin_used@@Base+0x14091>
  411ac9:	lea    rsi,[rip+0x2f5cd]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  411ad0:	lea    rcx,[rip+0x31034]        # 442b0b <_IO_stdin_used@@Base+0x15b0b>
  411ad7:	mov    edx,0x55a
  411adc:	call   4060f0 <__assert_fail@plt>
  411ae1:	lea    rdi,[rip+0x2f5a9]        # 441091 <_IO_stdin_used@@Base+0x14091>
  411ae8:	lea    rsi,[rip+0x2f5ae]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  411aef:	lea    rcx,[rip+0x31015]        # 442b0b <_IO_stdin_used@@Base+0x15b0b>
  411af6:	mov    edx,0x560
  411afb:	call   4060f0 <__assert_fail@plt>
  411b00:	lea    rdi,[rip+0x2f58a]        # 441091 <_IO_stdin_used@@Base+0x14091>
  411b07:	lea    rsi,[rip+0x2f58f]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  411b0e:	lea    rcx,[rip+0x31245]        # 442d5a <_IO_stdin_used@@Base+0x15d5a>
  411b15:	mov    edx,0x59e
  411b1a:	call   4060f0 <__assert_fail@plt>
  411b1f:	lea    rdi,[rip+0x2f56b]        # 441091 <_IO_stdin_used@@Base+0x14091>
  411b26:	lea    rsi,[rip+0x2f570]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  411b2d:	lea    rcx,[rip+0x31226]        # 442d5a <_IO_stdin_used@@Base+0x15d5a>
  411b34:	mov    edx,0x5c1
  411b39:	call   4060f0 <__assert_fail@plt>
  411b3e:	lea    rdi,[rip+0x2f54c]        # 441091 <_IO_stdin_used@@Base+0x14091>
  411b45:	lea    rsi,[rip+0x2f551]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  411b4c:	lea    rcx,[rip+0x31207]        # 442d5a <_IO_stdin_used@@Base+0x15d5a>
  411b53:	mov    edx,0x5c7
  411b58:	call   4060f0 <__assert_fail@plt>
  411b5d:	lea    rdi,[rip+0x2f52d]        # 441091 <_IO_stdin_used@@Base+0x14091>
  411b64:	lea    rsi,[rip+0x2f532]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  411b6b:	lea    rcx,[rip+0x2f59a]        # 44110c <_IO_stdin_used@@Base+0x1410c>
  411b72:	mov    edx,0x6db
  411b77:	call   4060f0 <__assert_fail@plt>
  411b7c:	lea    rdi,[rip+0x2f50e]        # 441091 <_IO_stdin_used@@Base+0x14091>
  411b83:	lea    rsi,[rip+0x2f513]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  411b8a:	lea    rcx,[rip+0x311c9]        # 442d5a <_IO_stdin_used@@Base+0x15d5a>
  411b91:	mov    edx,0x5b2
  411b96:	call   4060f0 <__assert_fail@plt>
  411b9b:	lea    rdi,[rip+0x2f4ef]        # 441091 <_IO_stdin_used@@Base+0x14091>
  411ba2:	lea    rsi,[rip+0x2f4f4]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  411ba9:	lea    rcx,[rip+0x311aa]        # 442d5a <_IO_stdin_used@@Base+0x15d5a>
  411bb0:	mov    edx,0x5b5
  411bb5:	call   4060f0 <__assert_fail@plt>
  411bba:	lea    rdi,[rip+0x2f4d0]        # 441091 <_IO_stdin_used@@Base+0x14091>
  411bc1:	lea    rsi,[rip+0x2f4d5]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  411bc8:	lea    rcx,[rip+0x2f53d]        # 44110c <_IO_stdin_used@@Base+0x1410c>
  411bcf:	mov    edx,0x6b4
  411bd4:	call   4060f0 <__assert_fail@plt>
  411bd9:	lea    rdi,[rip+0x2f4b1]        # 441091 <_IO_stdin_used@@Base+0x14091>
  411be0:	lea    rsi,[rip+0x2f4b6]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  411be7:	lea    rcx,[rip+0x31756]        # 443344 <_IO_stdin_used@@Base+0x16344>
  411bee:	mov    edx,0x64a
  411bf3:	call   4060f0 <__assert_fail@plt>
  411bf8:	lea    rdi,[rip+0x2f492]        # 441091 <_IO_stdin_used@@Base+0x14091>
  411bff:	lea    rsi,[rip+0x2f497]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  411c06:	lea    rcx,[rip+0x3191a]        # 443527 <_IO_stdin_used@@Base+0x16527>
  411c0d:	mov    edx,0x66d
  411c12:	call   4060f0 <__assert_fail@plt>
  411c17:	lea    rdi,[rip+0x2f473]        # 441091 <_IO_stdin_used@@Base+0x14091>
  411c1e:	lea    rsi,[rip+0x2f478]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  411c25:	lea    rcx,[rip+0x31689]        # 4432b5 <_IO_stdin_used@@Base+0x162b5>
  411c2c:	mov    edx,0x4b5
  411c31:	call   4060f0 <__assert_fail@plt>
  411c36:	lea    rdi,[rip+0x2f454]        # 441091 <_IO_stdin_used@@Base+0x14091>
  411c3d:	lea    rsi,[rip+0x2f459]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  411c44:	lea    rcx,[rip+0x316f9]        # 443344 <_IO_stdin_used@@Base+0x16344>
  411c4b:	mov    edx,0x65a
  411c50:	call   4060f0 <__assert_fail@plt>
  411c55:	lea    rdi,[rip+0x2f435]        # 441091 <_IO_stdin_used@@Base+0x14091>
  411c5c:	lea    rsi,[rip+0x2f43a]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  411c63:	lea    rcx,[rip+0x318bd]        # 443527 <_IO_stdin_used@@Base+0x16527>
  411c6a:	mov    edx,0x67d
  411c6f:	call   4060f0 <__assert_fail@plt>
  411c74:	lea    rdi,[rip+0x2f416]        # 441091 <_IO_stdin_used@@Base+0x14091>
  411c7b:	lea    rsi,[rip+0x2f41b]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  411c82:	lea    rcx,[rip+0x3189e]        # 443527 <_IO_stdin_used@@Base+0x16527>
  411c89:	mov    edx,0x681
  411c8e:	call   4060f0 <__assert_fail@plt>
  411c93:	lea    rdi,[rsp+0x20]
  411c98:	call   414f20 <__flatcc_fb_gen_c_json_parser@@Base+0x5920>
  411c9d:	mov    rax,QWORD PTR [rip+0x3e354]        # 44fff8 <stderr@GLIBC_2.2.5>
  411ca4:	mov    rdi,QWORD PTR [rax]
  411ca7:	lea    rsi,[rip+0x1c786]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  411cae:	lea    rbx,[rip+0x2f3e8]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  411cb5:	lea    r8,[rip+0x2fcda]        # 441996 <_IO_stdin_used@@Base+0x14996>
  411cbc:	mov    rdx,rbx
  411cbf:	mov    ecx,0x4aa
  411cc4:	xor    eax,eax
  411cc6:	call   406170 <fprintf@plt>
  411ccb:	lea    rdi,[rip+0x2d6c9]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  411cd2:	lea    rcx,[rip+0x315dc]        # 4432b5 <_IO_stdin_used@@Base+0x162b5>
  411cd9:	mov    rsi,rbx
  411cdc:	mov    edx,0x4aa
  411ce1:	call   4060f0 <__assert_fail@plt>
  411ce6:	lea    rdi,[rip+0x2f3a4]        # 441091 <_IO_stdin_used@@Base+0x14091>
  411ced:	lea    rsi,[rip+0x2f3a9]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  411cf4:	lea    rcx,[rip+0x315ba]        # 4432b5 <_IO_stdin_used@@Base+0x162b5>
  411cfb:	mov    edx,0x4ba
  411d00:	call   4060f0 <__assert_fail@plt>
  411d05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  411d0f:	nop
  411d10:	push   rbp
  411d11:	push   r15
  411d13:	push   r14
  411d15:	push   r13
  411d17:	push   r12
  411d19:	push   rbx
  411d1a:	sub    rsp,0xe8
  411d21:	mov    rbp,rsi
  411d24:	mov    rbx,rdi
  411d27:	test   al,al
  411d29:	je     411d6d <__flatcc_fb_gen_c_json_parser@@Base+0x276d>
  411d2b:	vmovaps XMMWORD PTR [rsp+0x60],xmm0
  411d31:	vmovaps XMMWORD PTR [rsp+0x70],xmm1
  411d37:	vmovaps XMMWORD PTR [rsp+0x80],xmm2
  411d40:	vmovaps XMMWORD PTR [rsp+0x90],xmm3
  411d49:	vmovaps XMMWORD PTR [rsp+0xa0],xmm4
  411d52:	vmovaps XMMWORD PTR [rsp+0xb0],xmm5
  411d5b:	vmovaps XMMWORD PTR [rsp+0xc0],xmm6
  411d64:	vmovaps XMMWORD PTR [rsp+0xd0],xmm7
  411d6d:	mov    QWORD PTR [rsp+0x40],rdx
  411d72:	mov    QWORD PTR [rsp+0x48],rcx
  411d77:	mov    QWORD PTR [rsp+0x50],r8
  411d7c:	mov    QWORD PTR [rsp+0x58],r9
  411d81:	mov    rax,QWORD PTR [rbx+0xe0]
  411d88:	mov    r15d,DWORD PTR [rax+0xd0]
  411d8f:	imul   r15d,DWORD PTR [rbx+0xf0]
  411d97:	cmp    BYTE PTR [rip+0x3e3a2],0x0        # 450140 <__bss_start@@Base+0x10>
  411d9e:	jne    411db8 <__flatcc_fb_gen_c_json_parser@@Base+0x27b8>
  411da0:	vmovaps ymm0,YMMWORD PTR [rip+0x2ef18]        # 440cc0 <_IO_stdin_used@@Base+0x13cc0>
  411da8:	vmovups YMMWORD PTR [rip+0x3e3b0],ymm0        # 450160 <__bss_start@@Base+0x30>
  411db0:	vmovups YMMWORD PTR [rip+0x3e388],ymm0        # 450140 <__bss_start@@Base+0x10>
  411db8:	cmp    BYTE PTR [rbp+0x0],0x0
  411dbc:	je     411e77 <__flatcc_fb_gen_c_json_parser@@Base+0x2877>
  411dc2:	mov    rdi,QWORD PTR [rbx+0xd0]
  411dc9:	cmp    r15d,0x41
  411dcd:	jl     411e22 <__flatcc_fb_gen_c_json_parser@@Base+0x2822>
  411dcf:	mov    QWORD PTR [rsp+0x8],rbp
  411dd4:	lea    ebp,[r15-0x41]
  411dd8:	and    ebp,0xffffffc0
  411ddb:	lea    r12,[rip+0x2d5c9]        # 43f3ab <_IO_stdin_used@@Base+0x123ab>
  411de2:	lea    r13,[rip+0x3e357]        # 450140 <__bss_start@@Base+0x10>
  411de9:	mov    r14d,r15d
  411dec:	nop    DWORD PTR [rax+0x0]
  411df0:	mov    rsi,r12
  411df3:	mov    edx,0x40
  411df8:	mov    rcx,r13
  411dfb:	xor    eax,eax
  411dfd:	vzeroupper 
  411e00:	call   406170 <fprintf@plt>
  411e05:	add    r14d,0xffffffc0
  411e09:	mov    rdi,QWORD PTR [rbx+0xd0]
  411e10:	cmp    r14d,0x40
  411e14:	jg     411df0 <__flatcc_fb_gen_c_json_parser@@Base+0x27f0>
  411e16:	sub    r15d,ebp
  411e19:	add    r15d,0xffffffc0
  411e1d:	mov    rbp,QWORD PTR [rsp+0x8]
  411e22:	lea    rsi,[rip+0x2d582]        # 43f3ab <_IO_stdin_used@@Base+0x123ab>
  411e29:	lea    rcx,[rip+0x3e310]        # 450140 <__bss_start@@Base+0x10>
  411e30:	mov    edx,r15d
  411e33:	xor    eax,eax
  411e35:	vzeroupper 
  411e38:	call   406170 <fprintf@plt>
  411e3d:	movabs rax,0x3000000010
  411e47:	mov    QWORD PTR [rsp+0x10],rax
  411e4c:	lea    rax,[rsp+0x120]
  411e54:	mov    QWORD PTR [rsp+0x18],rax
  411e59:	lea    rax,[rsp+0x30]
  411e5e:	mov    QWORD PTR [rsp+0x20],rax
  411e63:	mov    rdi,QWORD PTR [rbx+0xd0]
  411e6a:	lea    rdx,[rsp+0x10]
  411e6f:	mov    rsi,rbp
  411e72:	call   4061f0 <vfprintf@plt>
  411e77:	mov    rsi,QWORD PTR [rbx+0xd0]
  411e7e:	mov    edi,0xa
  411e83:	vzeroupper 
  411e86:	call   406110 <fputc@plt>
  411e8b:	add    rsp,0xe8
  411e92:	pop    rbx
  411e93:	pop    r12
  411e95:	pop    r13
  411e97:	pop    r14
  411e99:	pop    r15
  411e9b:	pop    rbp
  411e9c:	ret    
  411e9d:	nop    DWORD PTR [rax]
  411ea0:	push   r14
  411ea2:	push   rbx
  411ea3:	sub    rsp,0xd8
  411eaa:	mov    rbx,rdi
  411ead:	mov    r14,rsp
  411eb0:	mov    rdi,rsi
  411eb3:	mov    rsi,r14
  411eb6:	call   4073a0 <__flatcc_fb_copy_scope@@Base>
  411ebb:	mov    rax,QWORD PTR [rbx+0xd8]
  411ec2:	mov    rdx,QWORD PTR [rax+0x110]
  411ec9:	lea    rsi,[rip+0x2f5b5]        # 441485 <_IO_stdin_used@@Base+0x14485>
  411ed0:	mov    rdi,rbx
  411ed3:	mov    rcx,r14
  411ed6:	xor    eax,eax
  411ed8:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411edd:	lea    rsi,[rip+0x2f37c]        # 441260 <_IO_stdin_used@@Base+0x14260>
  411ee4:	mov    rdi,rbx
  411ee7:	xor    eax,eax
  411ee9:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  411eee:	add    rsp,0xd8
  411ef5:	pop    rbx
  411ef6:	pop    r14
  411ef8:	ret    
  411ef9:	nop    DWORD PTR [rax+0x0]
  411f00:	push   rbp
  411f01:	mov    rbp,rsp
  411f04:	push   r15
  411f06:	push   r14
  411f08:	push   r12
  411f0a:	push   rbx
  411f0b:	and    rsp,0xffffffffffffffe0
  411f0f:	sub    rsp,0x160
  411f16:	vxorps xmm0,xmm0,xmm0
  411f1a:	vmovups YMMWORD PTR [rsp+0x30],ymm0
  411f20:	mov    DWORD PTR [rsp+0x1c],0x0
  411f28:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  411f2e:	mov    eax,DWORD PTR [rsi+0x10]
  411f31:	add    eax,0xfffffffd
  411f34:	cmp    ax,0x2
  411f38:	jae    4121b4 <__flatcc_fb_gen_c_json_parser@@Base+0x2bb4>
  411f3e:	mov    r15,rsi
  411f41:	mov    rbx,rdi
  411f44:	lea    rsi,[rsp+0x1c]
  411f49:	mov    rdi,r15
  411f4c:	vzeroupper 
  411f4f:	call   412570 <__flatcc_fb_gen_c_json_parser@@Base+0x2f70>
  411f54:	mov    QWORD PTR [rsp+0x20],rax
  411f59:	mov    r14d,DWORD PTR [rsp+0x1c]
  411f5e:	test   rax,rax
  411f61:	jne    411f6c <__flatcc_fb_gen_c_json_parser@@Base+0x296c>
  411f63:	test   r14d,r14d
  411f66:	jg     4121d6 <__flatcc_fb_gen_c_json_parser@@Base+0x2bd6>
  411f6c:	mov    QWORD PTR [rsp+0x38],r15
  411f71:	mov    DWORD PTR [rsp+0x40],0x2
  411f79:	lea    rax,[rip+0x790]        # 412710 <__flatcc_fb_gen_c_json_parser@@Base+0x3110>
  411f80:	mov    QWORD PTR [rsp+0x28],rax
  411f85:	lea    rax,[rip+0x894]        # 412820 <__flatcc_fb_gen_c_json_parser@@Base+0x3220>
  411f8c:	mov    QWORD PTR [rsp+0x30],rax
  411f91:	vxorps xmm0,xmm0,xmm0
  411f95:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  411f9b:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  411fa4:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  411fad:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  411fb6:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  411fbf:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  411fc8:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  411fd1:	mov    QWORD PTR [rsp+0x140],0x0
  411fdd:	mov    rdi,QWORD PTR [r15+0x18]
  411fe1:	lea    r12,[rsp+0x60]
  411fe6:	mov    rsi,r15
  411fe9:	mov    rdx,r12
  411fec:	vzeroupper 
  411fef:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  411ff4:	lea    rsi,[rip+0x2f202]        # 4411fd <_IO_stdin_used@@Base+0x141fd>
  411ffb:	mov    rdi,rbx
  411ffe:	mov    rdx,r12
  412001:	xor    eax,eax
  412003:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412008:	add    DWORD PTR [rbx+0xf0],0x2
  41200f:	lea    rsi,[rip+0x2f9bc]        # 4419d2 <_IO_stdin_used@@Base+0x149d2>
  412016:	mov    rdi,rbx
  412019:	xor    eax,eax
  41201b:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412020:	mov    eax,DWORD PTR [rbx+0xf0]
  412026:	test   eax,eax
  412028:	je     412195 <__flatcc_fb_gen_c_json_parser@@Base+0x2b95>
  41202e:	mov    ecx,eax
  412030:	dec    ecx
  412032:	mov    DWORD PTR [rbx+0xf0],ecx
  412038:	je     412195 <__flatcc_fb_gen_c_json_parser@@Base+0x2b95>
  41203e:	add    eax,0xfffffffe
  412041:	mov    DWORD PTR [rbx+0xf0],eax
  412047:	lea    rsi,[rip+0x323e4]        # 444432 <_IO_stdin_used@@Base+0x17432>
  41204e:	mov    rdi,rbx
  412051:	xor    eax,eax
  412053:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412058:	inc    DWORD PTR [rbx+0xf0]
  41205e:	test   r14d,r14d
  412061:	je     41210e <__flatcc_fb_gen_c_json_parser@@Base+0x2b0e>
  412067:	lea    rsi,[rip+0x2f9dd]        # 441a4b <_IO_stdin_used@@Base+0x14a4b>
  41206e:	mov    rdi,rbx
  412071:	xor    eax,eax
  412073:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412078:	lea    rsi,[rip+0x2f9e9]        # 441a68 <_IO_stdin_used@@Base+0x14a68>
  41207f:	mov    rdi,rbx
  412082:	xor    eax,eax
  412084:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412089:	lea    rsi,[rip+0x2f9ea]        # 441a7a <_IO_stdin_used@@Base+0x14a7a>
  412090:	mov    rdi,rbx
  412093:	xor    eax,eax
  412095:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41209a:	lea    rsi,[rip+0x1c4ae]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  4120a1:	mov    rdi,rbx
  4120a4:	xor    eax,eax
  4120a6:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4120ab:	lea    rsi,[rip+0x2f9d4]        # 441a86 <_IO_stdin_used@@Base+0x14a86>
  4120b2:	mov    rdi,rbx
  4120b5:	xor    eax,eax
  4120b7:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4120bc:	dec    r14d
  4120bf:	lea    rsi,[rsp+0x20]
  4120c4:	mov    rdi,rbx
  4120c7:	xor    edx,edx
  4120c9:	mov    ecx,r14d
  4120cc:	xor    r8d,r8d
  4120cf:	call   412830 <__flatcc_fb_gen_c_json_parser@@Base+0x3230>
  4120d4:	lea    rsi,[rip+0x2f750]        # 44182b <_IO_stdin_used@@Base+0x1482b>
  4120db:	mov    rdi,rbx
  4120de:	xor    eax,eax
  4120e0:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4120e5:	mov    eax,DWORD PTR [rbx+0xf0]
  4120eb:	test   eax,eax
  4120ed:	jne    41214f <__flatcc_fb_gen_c_json_parser@@Base+0x2b4f>
  4120ef:	lea    rdi,[rip+0x2ef9b]        # 441091 <_IO_stdin_used@@Base+0x14091>
  4120f6:	lea    rsi,[rip+0x2efa0]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  4120fd:	lea    rcx,[rip+0x2f859]        # 44195d <_IO_stdin_used@@Base+0x1495d>
  412104:	mov    edx,0x4fe
  412109:	call   4060f0 <__assert_fail@plt>
  41210e:	lea    rsi,[rip+0x2f8ef]        # 441a04 <_IO_stdin_used@@Base+0x14a04>
  412115:	mov    rdi,rbx
  412118:	xor    eax,eax
  41211a:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41211f:	lea    rsi,[rip+0x2f8f8]        # 441a1e <_IO_stdin_used@@Base+0x14a1e>
  412126:	mov    rdi,rbx
  412129:	xor    eax,eax
  41212b:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412130:	lea    rsi,[rip+0x2f8f7]        # 441a2e <_IO_stdin_used@@Base+0x14a2e>
  412137:	mov    rdi,rbx
  41213a:	xor    eax,eax
  41213c:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412141:	mov    eax,DWORD PTR [rbx+0xf0]
  412147:	test   eax,eax
  412149:	je     41221f <__flatcc_fb_gen_c_json_parser@@Base+0x2c1f>
  41214f:	dec    eax
  412151:	mov    DWORD PTR [rbx+0xf0],eax
  412157:	lea    rsi,[rip+0x1e76a]        # 4308c8 <_IO_stdin_used@@Base+0x38c8>
  41215e:	mov    rdi,rbx
  412161:	xor    eax,eax
  412163:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412168:	lea    rsi,[rip+0x1c3e0]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41216f:	mov    rdi,rbx
  412172:	xor    eax,eax
  412174:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412179:	mov    rdi,QWORD PTR [rsp+0x20]
  41217e:	test   rdi,rdi
  412181:	je     412188 <__flatcc_fb_gen_c_json_parser@@Base+0x2b88>
  412183:	call   406040 <free@plt>
  412188:	lea    rsp,[rbp-0x20]
  41218c:	pop    rbx
  41218d:	pop    r12
  41218f:	pop    r14
  412191:	pop    r15
  412193:	pop    rbp
  412194:	ret    
  412195:	lea    rdi,[rip+0x2eef5]        # 441091 <_IO_stdin_used@@Base+0x14091>
  41219c:	lea    rsi,[rip+0x2eefa]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  4121a3:	lea    rcx,[rip+0x2f7b3]        # 44195d <_IO_stdin_used@@Base+0x1495d>
  4121aa:	mov    edx,0x4ef
  4121af:	call   4060f0 <__assert_fail@plt>
  4121b4:	lea    rdi,[rip+0x226f9]        # 4348b4 <_IO_stdin_used@@Base+0x78b4>
  4121bb:	lea    rsi,[rip+0x2eedb]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  4121c2:	lea    rcx,[rip+0x2f794]        # 44195d <_IO_stdin_used@@Base+0x1495d>
  4121c9:	mov    edx,0x4de
  4121ce:	vzeroupper 
  4121d1:	call   4060f0 <__assert_fail@plt>
  4121d6:	mov    rax,QWORD PTR [rip+0x3de1b]        # 44fff8 <stderr@GLIBC_2.2.5>
  4121dd:	mov    rdi,QWORD PTR [rax]
  4121e0:	lea    rsi,[rip+0x1c24d]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  4121e7:	lea    rbx,[rip+0x2eeaf]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  4121ee:	lea    r8,[rip+0x2f7a1]        # 441996 <_IO_stdin_used@@Base+0x14996>
  4121f5:	mov    rdx,rbx
  4121f8:	mov    ecx,0x4e1
  4121fd:	xor    eax,eax
  4121ff:	call   406170 <fprintf@plt>
  412204:	lea    rdi,[rip+0x2d190]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  41220b:	lea    rcx,[rip+0x2f74b]        # 44195d <_IO_stdin_used@@Base+0x1495d>
  412212:	mov    rsi,rbx
  412215:	mov    edx,0x4e1
  41221a:	call   4060f0 <__assert_fail@plt>
  41221f:	lea    rdi,[rip+0x2ee6b]        # 441091 <_IO_stdin_used@@Base+0x14091>
  412226:	lea    rsi,[rip+0x2ee70]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  41222d:	lea    rcx,[rip+0x2f729]        # 44195d <_IO_stdin_used@@Base+0x1495d>
  412234:	mov    edx,0x4f5
  412239:	call   4060f0 <__assert_fail@plt>
  41223e:	xchg   ax,ax
  412240:	push   rbp
  412241:	mov    rbp,rsp
  412244:	push   r15
  412246:	push   r14
  412248:	push   r12
  41224a:	push   rbx
  41224b:	and    rsp,0xffffffffffffffe0
  41224f:	sub    rsp,0x140
  412256:	mov    r15,rsi
  412259:	mov    rbx,rdi
  41225c:	vxorps xmm0,xmm0,xmm0
  412260:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  412266:	vmovups YMMWORD PTR [rsp+0x30],ymm0
  41226c:	lea    rsi,[rsp+0x60]
  412271:	mov    rdi,r15
  412274:	vzeroupper 
  412277:	call   4073a0 <__flatcc_fb_copy_scope@@Base>
  41227c:	mov    rax,QWORD PTR [rbx+0xd8]
  412283:	vxorps xmm0,xmm0,xmm0
  412287:	vmovaps XMMWORD PTR [rsp],xmm0
  41228c:	mov    QWORD PTR [rsp+0x10],0x0
  412295:	mov    QWORD PTR [rsp+0x8],rax
  41229a:	add    r15,0x8
  41229e:	lea    rsi,[rip+0x2beb]        # 414e90 <__flatcc_fb_gen_c_json_parser@@Base+0x5890>
  4122a5:	mov    rdx,rsp
  4122a8:	mov    rdi,r15
  4122ab:	call   419740 <fb_symbol_table_visit@@Base>
  4122b0:	movsxd r14,DWORD PTR [rsp]
  4122b4:	test   r14,r14
  4122b7:	je     4122fe <__flatcc_fb_gen_c_json_parser@@Base+0x2cfe>
  4122b9:	mov    rdi,r14
  4122bc:	shl    rdi,0x5
  4122c0:	call   4061a0 <malloc@plt>
  4122c5:	test   rax,rax
  4122c8:	je     4122fe <__flatcc_fb_gen_c_json_parser@@Base+0x2cfe>
  4122ca:	mov    r12,rax
  4122cd:	mov    QWORD PTR [rsp+0x10],rax
  4122d2:	lea    rsi,[rip+0x2be7]        # 414ec0 <__flatcc_fb_gen_c_json_parser@@Base+0x58c0>
  4122d9:	mov    rdx,rsp
  4122dc:	mov    rdi,r15
  4122df:	call   419740 <fb_symbol_table_visit@@Base>
  4122e4:	movsxd rsi,DWORD PTR [rsp]
  4122e8:	lea    rcx,[rip+0x1651]        # 413940 <__flatcc_fb_gen_c_json_parser@@Base+0x4340>
  4122ef:	mov    edx,0x20
  4122f4:	mov    rdi,r12
  4122f7:	call   406080 <qsort@plt>
  4122fc:	jmp    412301 <__flatcc_fb_gen_c_json_parser@@Base+0x2d01>
  4122fe:	xor    r12d,r12d
  412301:	mov    QWORD PTR [rsp+0x20],r12
  412306:	test   r14d,r14d
  412309:	jle    412314 <__flatcc_fb_gen_c_json_parser@@Base+0x2d14>
  41230b:	test   r12,r12
  41230e:	je     4124fc <__flatcc_fb_gen_c_json_parser@@Base+0x2efc>
  412314:	mov    QWORD PTR [rsp+0x38],0x0
  41231d:	mov    DWORD PTR [rsp+0x40],0x3
  412325:	lea    rax,[rip+0x2a24]        # 414d50 <__flatcc_fb_gen_c_json_parser@@Base+0x5750>
  41232c:	mov    QWORD PTR [rsp+0x28],rax
  412331:	lea    rax,[rip+0x2b48]        # 414e80 <__flatcc_fb_gen_c_json_parser@@Base+0x5880>
  412338:	mov    QWORD PTR [rsp+0x30],rax
  41233d:	mov    rax,QWORD PTR [rbx+0xd8]
  412344:	mov    rdx,QWORD PTR [rax+0x110]
  41234b:	lea    rsi,[rip+0x2f133]        # 441485 <_IO_stdin_used@@Base+0x14485>
  412352:	lea    rcx,[rsp+0x60]
  412357:	mov    rdi,rbx
  41235a:	xor    eax,eax
  41235c:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412361:	add    DWORD PTR [rbx+0xf0],0x2
  412368:	lea    rsi,[rip+0x30dbe]        # 44312d <_IO_stdin_used@@Base+0x1612d>
  41236f:	mov    rdi,rbx
  412372:	xor    eax,eax
  412374:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412379:	mov    eax,DWORD PTR [rbx+0xf0]
  41237f:	test   eax,eax
  412381:	je     4124dd <__flatcc_fb_gen_c_json_parser@@Base+0x2edd>
  412387:	mov    ecx,eax
  412389:	dec    ecx
  41238b:	mov    DWORD PTR [rbx+0xf0],ecx
  412391:	je     4124dd <__flatcc_fb_gen_c_json_parser@@Base+0x2edd>
  412397:	add    eax,0xfffffffe
  41239a:	mov    DWORD PTR [rbx+0xf0],eax
  4123a0:	lea    rsi,[rip+0x3208b]        # 444432 <_IO_stdin_used@@Base+0x17432>
  4123a7:	mov    rdi,rbx
  4123aa:	xor    eax,eax
  4123ac:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4123b1:	inc    DWORD PTR [rbx+0xf0]
  4123b7:	test   r14d,r14d
  4123ba:	je     412467 <__flatcc_fb_gen_c_json_parser@@Base+0x2e67>
  4123c0:	lea    rsi,[rip+0x2f684]        # 441a4b <_IO_stdin_used@@Base+0x14a4b>
  4123c7:	mov    rdi,rbx
  4123ca:	xor    eax,eax
  4123cc:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4123d1:	lea    rsi,[rip+0x2f690]        # 441a68 <_IO_stdin_used@@Base+0x14a68>
  4123d8:	mov    rdi,rbx
  4123db:	xor    eax,eax
  4123dd:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4123e2:	lea    rsi,[rip+0x2f691]        # 441a7a <_IO_stdin_used@@Base+0x14a7a>
  4123e9:	mov    rdi,rbx
  4123ec:	xor    eax,eax
  4123ee:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4123f3:	lea    rsi,[rip+0x1c155]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  4123fa:	mov    rdi,rbx
  4123fd:	xor    eax,eax
  4123ff:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412404:	lea    rsi,[rip+0x2f67b]        # 441a86 <_IO_stdin_used@@Base+0x14a86>
  41240b:	mov    rdi,rbx
  41240e:	xor    eax,eax
  412410:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412415:	dec    r14d
  412418:	lea    rsi,[rsp+0x20]
  41241d:	mov    rdi,rbx
  412420:	xor    edx,edx
  412422:	mov    ecx,r14d
  412425:	xor    r8d,r8d
  412428:	call   412830 <__flatcc_fb_gen_c_json_parser@@Base+0x3230>
  41242d:	lea    rsi,[rip+0x2f3f7]        # 44182b <_IO_stdin_used@@Base+0x1482b>
  412434:	mov    rdi,rbx
  412437:	xor    eax,eax
  412439:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41243e:	mov    eax,DWORD PTR [rbx+0xf0]
  412444:	test   eax,eax
  412446:	jne    412497 <__flatcc_fb_gen_c_json_parser@@Base+0x2e97>
  412448:	lea    rdi,[rip+0x2ec42]        # 441091 <_IO_stdin_used@@Base+0x14091>
  41244f:	lea    rsi,[rip+0x2ec47]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  412456:	lea    rcx,[rip+0x30c9e]        # 4430fb <_IO_stdin_used@@Base+0x160fb>
  41245d:	mov    edx,0x48e
  412462:	call   4060f0 <__assert_fail@plt>
  412467:	lea    rsi,[rip+0x30cf1]        # 44315f <_IO_stdin_used@@Base+0x1615f>
  41246e:	mov    rdi,rbx
  412471:	xor    eax,eax
  412473:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412478:	lea    rsi,[rip+0x2f5af]        # 441a2e <_IO_stdin_used@@Base+0x14a2e>
  41247f:	mov    rdi,rbx
  412482:	xor    eax,eax
  412484:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412489:	mov    eax,DWORD PTR [rbx+0xf0]
  41248f:	test   eax,eax
  412491:	je     412545 <__flatcc_fb_gen_c_json_parser@@Base+0x2f45>
  412497:	dec    eax
  412499:	mov    DWORD PTR [rbx+0xf0],eax
  41249f:	lea    rsi,[rip+0x1e422]        # 4308c8 <_IO_stdin_used@@Base+0x38c8>
  4124a6:	mov    rdi,rbx
  4124a9:	xor    eax,eax
  4124ab:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4124b0:	lea    rsi,[rip+0x1c098]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  4124b7:	mov    rdi,rbx
  4124ba:	xor    eax,eax
  4124bc:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4124c1:	mov    rdi,QWORD PTR [rsp+0x20]
  4124c6:	test   rdi,rdi
  4124c9:	je     4124d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2ed0>
  4124cb:	call   406040 <free@plt>
  4124d0:	lea    rsp,[rbp-0x20]
  4124d4:	pop    rbx
  4124d5:	pop    r12
  4124d7:	pop    r14
  4124d9:	pop    r15
  4124db:	pop    rbp
  4124dc:	ret    
  4124dd:	lea    rdi,[rip+0x2ebad]        # 441091 <_IO_stdin_used@@Base+0x14091>
  4124e4:	lea    rsi,[rip+0x2ebb2]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  4124eb:	lea    rcx,[rip+0x30c09]        # 4430fb <_IO_stdin_used@@Base+0x160fb>
  4124f2:	mov    edx,0x480
  4124f7:	call   4060f0 <__assert_fail@plt>
  4124fc:	mov    rax,QWORD PTR [rip+0x3daf5]        # 44fff8 <stderr@GLIBC_2.2.5>
  412503:	mov    rdi,QWORD PTR [rax]
  412506:	lea    rsi,[rip+0x1bf27]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  41250d:	lea    rbx,[rip+0x2eb89]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  412514:	lea    r8,[rip+0x2f47b]        # 441996 <_IO_stdin_used@@Base+0x14996>
  41251b:	mov    rdx,rbx
  41251e:	mov    ecx,0x474
  412523:	xor    eax,eax
  412525:	call   406170 <fprintf@plt>
  41252a:	lea    rdi,[rip+0x2ce6a]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  412531:	lea    rcx,[rip+0x30bc3]        # 4430fb <_IO_stdin_used@@Base+0x160fb>
  412538:	mov    rsi,rbx
  41253b:	mov    edx,0x474
  412540:	call   4060f0 <__assert_fail@plt>
  412545:	lea    rdi,[rip+0x2eb45]        # 441091 <_IO_stdin_used@@Base+0x14091>
  41254c:	lea    rsi,[rip+0x2eb4a]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  412553:	lea    rcx,[rip+0x30ba1]        # 4430fb <_IO_stdin_used@@Base+0x160fb>
  41255a:	mov    edx,0x485
  41255f:	call   4060f0 <__assert_fail@plt>
  412564:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41256e:	xchg   ax,ax
  412570:	push   rbp
  412571:	push   r15
  412573:	push   r14
  412575:	push   r13
  412577:	push   r12
  412579:	push   rbx
  41257a:	push   rax
  41257b:	mov    rbx,QWORD PTR [rdi+0x28]
  41257f:	test   rbx,rbx
  412582:	je     4126d0 <__flatcc_fb_gen_c_json_parser@@Base+0x30d0>
  412588:	xor    eax,eax
  41258a:	mov    rdx,rbx
  41258d:	xor    ecx,ecx
  41258f:	test   BYTE PTR [rdx+0x70],0x4
  412593:	jne    4125a2 <__flatcc_fb_gen_c_json_parser@@Base+0x2fa2>
  412595:	jmp    4125b0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
  412597:	nop    WORD PTR [rax+rax*1+0x0]
  4125a0:	inc    ecx
  4125a2:	mov    rdx,QWORD PTR [rdx]
  4125a5:	test   rdx,rdx
  4125a8:	je     4125d9 <__flatcc_fb_gen_c_json_parser@@Base+0x2fd9>
  4125aa:	test   BYTE PTR [rdx+0x70],0x4
  4125ae:	jne    4125a2 <__flatcc_fb_gen_c_json_parser@@Base+0x2fa2>
  4125b0:	movzx  edi,WORD PTR [rdx+0x28]
  4125b4:	and    edi,0xfffffffe
  4125b7:	cmp    di,0xe
  4125bb:	jne    4125a0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fa0>
  4125bd:	mov    rdi,QWORD PTR [rdx+0x18]
  4125c1:	cmp    WORD PTR [rdi+0x10],0x4
  4125c6:	jne    4125a0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fa0>
  4125c8:	inc    ecx
  4125ca:	mov    rdi,QWORD PTR [rdx+0x8]
  4125ce:	mov    edi,DWORD PTR [rdi+0x8]
  4125d1:	lea    eax,[rax+rdi*1]
  4125d4:	add    eax,0x6
  4125d7:	jmp    4125a0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fa0>
  4125d9:	mov    DWORD PTR [rsi],ecx
  4125db:	test   ecx,ecx
  4125dd:	je     4126d6 <__flatcc_fb_gen_c_json_parser@@Base+0x30d6>
  4125e3:	movsxd r14,ecx
  4125e6:	mov    rbp,r14
  4125e9:	shl    rbp,0x5
  4125ed:	movsxd rdi,eax
  4125f0:	add    rdi,rbp
  4125f3:	call   4061a0 <malloc@plt>
  4125f8:	test   rax,rax
  4125fb:	je     4126d6 <__flatcc_fb_gen_c_json_parser@@Base+0x30d6>
  412601:	mov    r15,rax
  412604:	test   rbx,rbx
  412607:	je     4126db <__flatcc_fb_gen_c_json_parser@@Base+0x30db>
  41260d:	mov    r12,r15
  412610:	add    r12,rbp
  412613:	xor    r13d,r13d
  412616:	mov    rbp,r15
  412619:	test   BYTE PTR [rbx+0x70],0x4
  41261d:	jne    412633 <__flatcc_fb_gen_c_json_parser@@Base+0x3033>
  41261f:	jmp    412645 <__flatcc_fb_gen_c_json_parser@@Base+0x3045>
  412621:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41262b:	nop    DWORD PTR [rax+rax*1+0x0]
  412630:	mov    rbp,rax
  412633:	mov    rbx,QWORD PTR [rbx]
  412636:	test   rbx,rbx
  412639:	je     4126db <__flatcc_fb_gen_c_json_parser@@Base+0x30db>
  41263f:	test   BYTE PTR [rbx+0x70],0x4
  412643:	jne    412633 <__flatcc_fb_gen_c_json_parser@@Base+0x3033>
  412645:	mov    rax,QWORD PTR [rbx+0x8]
  412649:	mov    rsi,QWORD PTR [rax]
  41264c:	mov    QWORD PTR [rbp+0x0],rsi
  412650:	mov    rdx,QWORD PTR [rax+0x8]
  412654:	mov    DWORD PTR [rbp+0x8],edx
  412657:	mov    QWORD PTR [rbp+0x10],rbx
  41265b:	mov    DWORD PTR [rbp+0x18],0x0
  412662:	lea    rax,[rbp+0x20]
  412666:	movzx  ecx,WORD PTR [rbx+0x28]
  41266a:	and    ecx,0xfffffffe
  41266d:	cmp    cx,0xe
  412671:	jne    412630 <__flatcc_fb_gen_c_json_parser@@Base+0x3030>
  412673:	mov    rcx,QWORD PTR [rbx+0x18]
  412677:	cmp    WORD PTR [rcx+0x10],0x4
  41267c:	jne    412630 <__flatcc_fb_gen_c_json_parser@@Base+0x3030>
  41267e:	movsxd rax,r13d
  412681:	inc    r13d
  412684:	mov    QWORD PTR [rbx+0xa0],rax
  41268b:	lea    eax,[rdx+0x5]
  41268e:	mov    DWORD PTR [rbp+0x28],eax
  412691:	mov    QWORD PTR [rbp+0x20],r12
  412695:	mov    rdi,r12
  412698:	call   406190 <memcpy@plt>
  41269d:	mov    rax,QWORD PTR [rbx+0x8]
  4126a1:	mov    rax,QWORD PTR [rax+0x8]
  4126a5:	mov    WORD PTR [r12+rax*1+0x4],0x65
  4126ad:	mov    DWORD PTR [r12+rax*1],0x7079745f
  4126b5:	add    r12,rax
  4126b8:	add    r12,0x6
  4126bc:	mov    QWORD PTR [rbp+0x30],rbx
  4126c0:	mov    DWORD PTR [rbp+0x38],0x1
  4126c7:	add    rbp,0x40
  4126cb:	jmp    412633 <__flatcc_fb_gen_c_json_parser@@Base+0x3033>
  4126d0:	mov    DWORD PTR [rsi],0x0
  4126d6:	xor    r15d,r15d
  4126d9:	jmp    4126f2 <__flatcc_fb_gen_c_json_parser@@Base+0x30f2>
  4126db:	lea    rcx,[rip+0x125e]        # 413940 <__flatcc_fb_gen_c_json_parser@@Base+0x4340>
  4126e2:	mov    edx,0x20
  4126e7:	mov    rdi,r15
  4126ea:	mov    rsi,r14
  4126ed:	call   406080 <qsort@plt>
  4126f2:	mov    rax,r15
  4126f5:	add    rsp,0x8
  4126f9:	pop    rbx
  4126fa:	pop    r12
  4126fc:	pop    r13
  4126fe:	pop    r14
  412700:	pop    r15
  412702:	pop    rbp
  412703:	ret    
  412704:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41270e:	xchg   ax,ax
  412710:	push   r15
  412712:	push   r14
  412714:	push   rbx
  412715:	mov    r14,rdx
  412718:	mov    r15,rsi
  41271b:	mov    rbx,rdi
  41271e:	lea    rsi,[rip+0x2f38f]        # 441ab4 <_IO_stdin_used@@Base+0x14ab4>
  412725:	mov    edx,r8d
  412728:	xor    eax,eax
  41272a:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41272f:	lea    rsi,[rip+0x2f3ce]        # 441b04 <_IO_stdin_used@@Base+0x14b04>
  412736:	mov    rdi,rbx
  412739:	xor    eax,eax
  41273b:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  412740:	inc    DWORD PTR [rbx+0xf0]
  412746:	mov    eax,DWORD PTR [r15+0x48]
  41274a:	lea    ecx,[rax-0x1]
  41274d:	cmp    ecx,0x5
  412750:	jae    412758 <__flatcc_fb_gen_c_json_parser@@Base+0x3158>
  412752:	mov    rdx,QWORD PTR [r14+0x48]
  412756:	jmp    412769 <__flatcc_fb_gen_c_json_parser@@Base+0x3169>
  412758:	add    eax,0xfffffffa
  41275b:	cmp    eax,0x4
  41275e:	jae    4127b2 <__flatcc_fb_gen_c_json_parser@@Base+0x31b2>
  412760:	mov    rdx,QWORD PTR [r14+0x48]
  412764:	test   rdx,rdx
  412767:	js     4127a9 <__flatcc_fb_gen_c_json_parser@@Base+0x31a9>
  412769:	lea    rsi,[rip+0x2f3f2]        # 441b62 <_IO_stdin_used@@Base+0x14b62>
  412770:	mov    rdi,rbx
  412773:	xor    eax,eax
  412775:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41277a:	mov    eax,DWORD PTR [rbx+0xf0]
  412780:	test   eax,eax
  412782:	je     4127fb <__flatcc_fb_gen_c_json_parser@@Base+0x31fb>
  412784:	dec    eax
  412786:	mov    DWORD PTR [rbx+0xf0],eax
  41278c:	lea    rsi,[rip+0x2f048]        # 4417db <_IO_stdin_used@@Base+0x147db>
  412793:	mov    rdi,rbx
  412796:	xor    eax,eax
  412798:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41279d:	inc    DWORD PTR [rbx+0xf0]
  4127a3:	pop    rbx
  4127a4:	pop    r14
  4127a6:	pop    r15
  4127a8:	ret    
  4127a9:	lea    rsi,[rip+0x2f3db]        # 441b8b <_IO_stdin_used@@Base+0x14b8b>
  4127b0:	jmp    412770 <__flatcc_fb_gen_c_json_parser@@Base+0x3170>
  4127b2:	mov    rax,QWORD PTR [rip+0x3d83f]        # 44fff8 <stderr@GLIBC_2.2.5>
  4127b9:	mov    rdi,QWORD PTR [rax]
  4127bc:	lea    rsi,[rip+0x1bc71]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  4127c3:	lea    rbx,[rip+0x2e8d3]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  4127ca:	lea    r8,[rip+0x2f3e3]        # 441bb4 <_IO_stdin_used@@Base+0x14bb4>
  4127d1:	mov    rdx,rbx
  4127d4:	mov    ecx,0x2c6
  4127d9:	xor    eax,eax
  4127db:	call   406170 <fprintf@plt>
  4127e0:	lea    rdi,[rip+0x2cbb4]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  4127e7:	lea    rcx,[rip+0x2f3e9]        # 441bd7 <_IO_stdin_used@@Base+0x14bd7>
  4127ee:	mov    rsi,rbx
  4127f1:	mov    edx,0x2c6
  4127f6:	call   4060f0 <__assert_fail@plt>
  4127fb:	lea    rdi,[rip+0x2e88f]        # 441091 <_IO_stdin_used@@Base+0x14091>
  412802:	lea    rsi,[rip+0x2e894]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  412809:	lea    rcx,[rip+0x2f307]        # 441b17 <_IO_stdin_used@@Base+0x14b17>
  412810:	mov    edx,0x2cf
  412815:	call   4060f0 <__assert_fail@plt>
  41281a:	nop    WORD PTR [rax+rax*1+0x0]
  412820:	lea    rsi,[rip+0x2f3fe]        # 441c25 <_IO_stdin_used@@Base+0x14c25>
  412827:	xor    eax,eax
  412829:	jmp    411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41282e:	xchg   ax,ax
  412830:	push   rbp
  412831:	push   r15
  412833:	push   r14
  412835:	push   r13
  412837:	push   r12
  412839:	push   rbx
  41283a:	sub    rsp,0x58
  41283e:	mov    r15d,r8d
  412841:	mov    r9,QWORD PTR [rsi]
  412844:	movsxd r11,edx
  412847:	mov    rbp,r11
  41284a:	shl    rbp,0x5
  41284e:	mov    r10d,DWORD PTR [r9+rbp*1+0x8]
  412853:	lea    r8d,[r15+0x8]
  412857:	mov    ebx,0xfffffff8
  41285c:	sub    ebx,r15d
  41285f:	cmp    r8d,r10d
  412862:	jg     412cec <__flatcc_fb_gen_c_json_parser@@Base+0x36ec>
  412868:	mov    eax,r10d
  41286b:	neg    eax
  41286d:	cmp    ebx,eax
  41286f:	je     412cec <__flatcc_fb_gen_c_json_parser@@Base+0x36ec>
  412875:	mov    DWORD PTR [rsp+0x48],r10d
  41287a:	mov    QWORD PTR [rsp+0x50],rbp
  41287f:	mov    DWORD PTR [rsp+0x28],ebx
  412883:	mov    DWORD PTR [rsp+0x2c],r8d
  412888:	mov    QWORD PTR [rsp+0x30],rsi
  41288d:	mov    QWORD PTR [rsp+0x40],rdi
  412892:	mov    DWORD PTR [rsp+0x14],ecx
  412896:	mov    eax,ecx
  412898:	sub    eax,edx
  41289a:	mov    ecx,eax
  41289c:	shr    ecx,0x1f
  41289f:	add    ecx,eax
  4128a1:	sar    ecx,1
  4128a3:	movsxd rsi,r15d
  4128a6:	mov    QWORD PTR [rsp+0x38],rdx
  4128ab:	add    ecx,edx
  4128ad:	movsxd r13,ecx
  4128b0:	mov    rax,rsi
  4128b3:	mov    QWORD PTR [rsp+0x8],rsi
  4128b8:	lea    rax,[rsi-0x1]
  4128bc:	mov    QWORD PTR [rsp+0x20],rax
  4128c1:	xor    eax,eax
  4128c3:	vpcmpeqd ymm14,ymm14,ymm14
  4128c8:	vmovdqa xmm0,XMMWORD PTR [rip+0x2e510]        # 440de0 <_IO_stdin_used@@Base+0x13de0>
  4128d0:	vpbroadcastq ymm15,QWORD PTR [rip+0x2e45f]        # 440d38 <_IO_stdin_used@@Base+0x13d38>
  4128d9:	vpbroadcastq ymm8,QWORD PTR [rip+0x2e45e]        # 440d40 <_IO_stdin_used@@Base+0x13d40>
  4128e2:	vpbroadcastq ymm3,QWORD PTR [rip+0x2e45d]        # 440d48 <_IO_stdin_used@@Base+0x13d48>
  4128eb:	vpbroadcastq ymm4,QWORD PTR [rip+0x2e45c]        # 440d50 <_IO_stdin_used@@Base+0x13d50>
  4128f4:	vpbroadcastq ymm5,QWORD PTR [rip+0x2e45b]        # 440d58 <_IO_stdin_used@@Base+0x13d58>
  4128fd:	vpbroadcastq ymm6,QWORD PTR [rip+0x2e45a]        # 440d60 <_IO_stdin_used@@Base+0x13d60>
  412906:	mov    QWORD PTR [rsp+0x18],r13
  41290b:	xor    r8d,r8d
  41290e:	xor    r14d,r14d
  412911:	jmp    41292f <__flatcc_fb_gen_c_json_parser@@Base+0x332f>
  412913:	xor    r8d,r8d
  412916:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412920:	mov    rcx,r8
  412923:	xor    rcx,rax
  412926:	test   rcx,r14
  412929:	jne    412c80 <__flatcc_fb_gen_c_json_parser@@Base+0x3680>
  41292f:	mov    r12,r13
  412932:	cmp    r13,r11
  412935:	jle    412c80 <__flatcc_fb_gen_c_json_parser@@Base+0x3680>
  41293b:	lea    r13,[r12-0x1]
  412940:	mov    rcx,r13
  412943:	shl    rcx,0x5
  412947:	mov    r10d,DWORD PTR [r9+rcx*1+0x8]
  41294c:	sub    r10d,r15d
  41294f:	jl     412aee <__flatcc_fb_gen_c_json_parser@@Base+0x34ee>
  412955:	cmp    r10d,0x9
  412959:	mov    eax,0x8
  41295e:	cmovge r10d,eax
  412962:	test   r10d,r10d
  412965:	je     41297e <__flatcc_fb_gen_c_json_parser@@Base+0x337e>
  412967:	mov    rdi,QWORD PTR [r9+rcx*1]
  41296b:	movsxd rdx,r10d
  41296e:	cmp    r10d,0x10
  412972:	jae    412985 <__flatcc_fb_gen_c_json_parser@@Base+0x3385>
  412974:	mov    rsi,rdx
  412977:	xor    eax,eax
  412979:	jmp    412aaa <__flatcc_fb_gen_c_json_parser@@Base+0x34aa>
  41297e:	xor    eax,eax
  412980:	jmp    412adb <__flatcc_fb_gen_c_json_parser@@Base+0x34db>
  412985:	mov    rax,QWORD PTR [rsp+0x8]
  41298a:	add    rax,rdi
  41298d:	mov    rbx,rdx
  412990:	and    rbx,0xfffffffffffffff0
  412994:	mov    rsi,rdx
  412997:	sub    rsi,rbx
  41299a:	vmovq  xmm7,rdx
  41299f:	vpbroadcastq ymm7,xmm7
  4129a4:	vpaddq ymm10,ymm7,YMMWORD PTR [rip+0x2e334]        # 440ce0 <_IO_stdin_used@@Base+0x13ce0>
  4129ac:	vpxor  xmm9,xmm9,xmm9
  4129b1:	mov    rcx,rbx
  4129b4:	vpxor  xmm11,xmm11,xmm11
  4129b9:	vpxor  xmm12,xmm12,xmm12
  4129be:	vpxor  xmm13,xmm13,xmm13
  4129c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4129cd:	nop    DWORD PTR [rax]
  4129d0:	vpaddq ymm7,ymm10,ymm14
  4129d5:	vmovq  rbp,xmm7
  4129da:	vmovd  xmm1,DWORD PTR [rax+rbp*1-0x3]
  4129e0:	vmovd  xmm14,DWORD PTR [rax+rbp*1-0x7]
  4129e6:	vpshufb xmm1,xmm1,xmm0
  4129eb:	vpmovsxbq ymm1,xmm1
  4129f0:	vpshufb xmm2,xmm14,xmm0
  4129f5:	vpcmpeqd ymm14,ymm14,ymm14
  4129fa:	vpmovsxbq ymm2,xmm2
  4129ff:	vpsllq ymm7,ymm7,0x3
  412a04:	vpsubq ymm7,ymm15,ymm7
  412a08:	vpand  ymm7,ymm7,ymm5
  412a0c:	vpsllvq ymm1,ymm1,ymm7
  412a11:	vpsllq ymm7,ymm10,0x3
  412a17:	vpor   ymm9,ymm1,ymm9
  412a1c:	vpsubq ymm1,ymm8,ymm7
  412a20:	vpand  ymm1,ymm1,ymm5
  412a24:	vpsllvq ymm1,ymm2,ymm1
  412a29:	vmovd  xmm2,DWORD PTR [rax+rbp*1-0xb]
  412a2f:	vpshufb xmm2,xmm2,xmm0
  412a34:	vpmovsxbq ymm2,xmm2
  412a39:	vpor   ymm11,ymm1,ymm11
  412a3e:	vpsubq ymm1,ymm3,ymm7
  412a42:	vpand  ymm1,ymm1,ymm5
  412a46:	vpsllvq ymm1,ymm2,ymm1
  412a4b:	vpor   ymm12,ymm1,ymm12
  412a50:	vmovd  xmm1,DWORD PTR [rax+rbp*1-0xf]
  412a56:	vpshufb xmm1,xmm1,xmm0
  412a5b:	vpmovsxbq ymm1,xmm1
  412a60:	vpsubq ymm2,ymm4,ymm7
  412a64:	vpand  ymm2,ymm2,ymm5
  412a68:	vpsllvq ymm1,ymm1,ymm2
  412a6d:	vpor   ymm13,ymm1,ymm13
  412a72:	vpaddq ymm10,ymm10,ymm6
  412a76:	add    rcx,0xfffffffffffffff0
  412a7a:	jne    4129d0 <__flatcc_fb_gen_c_json_parser@@Base+0x33d0>
  412a80:	vpor   ymm1,ymm11,ymm9
  412a85:	vpor   ymm1,ymm12,ymm1
  412a89:	vpor   ymm1,ymm13,ymm1
  412a8d:	vextracti128 xmm2,ymm1,0x1
  412a93:	vpor   xmm1,xmm1,xmm2
  412a97:	vpshufd xmm2,xmm1,0x4e
  412a9c:	vpor   xmm1,xmm1,xmm2
  412aa0:	vmovq  rax,xmm1
  412aa5:	cmp    rbx,rdx
  412aa8:	je     412adb <__flatcc_fb_gen_c_json_parser@@Base+0x34db>
  412aaa:	lea    rdx,[rsi*8+0x0]
  412ab2:	mov    ecx,0x40
  412ab7:	sub    rcx,rdx
  412aba:	add    rdi,QWORD PTR [rsp+0x20]
  412abf:	nop
  412ac0:	movsx  rdx,BYTE PTR [rdi+rsi*1]
  412ac5:	mov    ebx,ecx
  412ac7:	and    bl,0xf8
  412aca:	shlx   rdx,rdx,rbx
  412acf:	or     rax,rdx
  412ad2:	add    rcx,0x8
  412ad6:	dec    rsi
  412ad9:	jne    412ac0 <__flatcc_fb_gen_c_json_parser@@Base+0x34c0>
  412adb:	shl    r10d,0x3
  412adf:	neg    r10b
  412ae2:	mov    rcx,0xffffffffffffffff
  412ae9:	shlx   r14,rcx,r10
  412aee:	mov    rdx,r12
  412af1:	shl    rdx,0x5
  412af5:	mov    ecx,DWORD PTR [r9+rdx*1+0x8]
  412afa:	sub    ecx,r15d
  412afd:	jl     412920 <__flatcc_fb_gen_c_json_parser@@Base+0x3320>
  412b03:	cmp    ecx,0x9
  412b06:	mov    esi,0x8
  412b0b:	cmovge ecx,esi
  412b0e:	test   ecx,ecx
  412b10:	je     412913 <__flatcc_fb_gen_c_json_parser@@Base+0x3313>
  412b16:	mov    rsi,QWORD PTR [r9+rdx*1]
  412b1a:	movsxd rbx,ecx
  412b1d:	cmp    ecx,0x10
  412b20:	jae    412b2d <__flatcc_fb_gen_c_json_parser@@Base+0x352d>
  412b22:	mov    rdx,rbx
  412b25:	xor    r8d,r8d
  412b28:	jmp    412c49 <__flatcc_fb_gen_c_json_parser@@Base+0x3649>
  412b2d:	mov    rcx,QWORD PTR [rsp+0x8]
  412b32:	lea    rdi,[rsi+rcx*1]
  412b36:	mov    r10,rbx
  412b39:	and    r10,0xfffffffffffffff0
  412b3d:	mov    rdx,rbx
  412b40:	sub    rdx,r10
  412b43:	vmovq  xmm1,rbx
  412b48:	vpbroadcastq ymm1,xmm1
  412b4d:	vpaddq ymm10,ymm1,YMMWORD PTR [rip+0x2e18b]        # 440ce0 <_IO_stdin_used@@Base+0x13ce0>
  412b55:	vpxor  xmm9,xmm9,xmm9
  412b5a:	mov    rcx,r10
  412b5d:	vpxor  xmm11,xmm11,xmm11
  412b62:	vpxor  xmm12,xmm12,xmm12
  412b67:	vpxor  xmm13,xmm13,xmm13
  412b6c:	nop    DWORD PTR [rax+0x0]
  412b70:	vpaddq ymm1,ymm10,ymm14
  412b75:	vmovq  rbp,xmm1
  412b7a:	vmovd  xmm2,DWORD PTR [rdi+rbp*1-0x3]
  412b80:	vmovd  xmm7,DWORD PTR [rdi+rbp*1-0x7]
  412b86:	vpshufb xmm2,xmm2,xmm0
  412b8b:	vpmovsxbq ymm2,xmm2
  412b90:	vpshufb xmm7,xmm7,xmm0
  412b95:	vpmovsxbq ymm7,xmm7
  412b9a:	vpsllq ymm1,ymm1,0x3
  412b9f:	vpsubq ymm1,ymm15,ymm1
  412ba3:	vpand  ymm1,ymm1,ymm5
  412ba7:	vpsllvq ymm1,ymm2,ymm1
  412bac:	vpsllq ymm2,ymm10,0x3
  412bb2:	vpor   ymm9,ymm1,ymm9
  412bb7:	vpsubq ymm1,ymm8,ymm2
  412bbb:	vpand  ymm1,ymm1,ymm5
  412bbf:	vpsllvq ymm1,ymm7,ymm1
  412bc4:	vmovd  xmm7,DWORD PTR [rdi+rbp*1-0xb]
  412bca:	vpshufb xmm7,xmm7,xmm0
  412bcf:	vpmovsxbq ymm7,xmm7
  412bd4:	vpor   ymm11,ymm1,ymm11
  412bd9:	vpsubq ymm1,ymm3,ymm2
  412bdd:	vpand  ymm1,ymm1,ymm5
  412be1:	vpsllvq ymm1,ymm7,ymm1
  412be6:	vpor   ymm12,ymm1,ymm12
  412beb:	vmovd  xmm1,DWORD PTR [rdi+rbp*1-0xf]
  412bf1:	vpshufb xmm1,xmm1,xmm0
  412bf6:	vpmovsxbq ymm1,xmm1
  412bfb:	vpsubq ymm2,ymm4,ymm2
  412bff:	vpand  ymm2,ymm2,ymm5
  412c03:	vpsllvq ymm1,ymm1,ymm2
  412c08:	vpor   ymm13,ymm1,ymm13
  412c0d:	vpaddq ymm10,ymm10,ymm6
  412c11:	add    rcx,0xfffffffffffffff0
  412c15:	jne    412b70 <__flatcc_fb_gen_c_json_parser@@Base+0x3570>
  412c1b:	vpor   ymm1,ymm11,ymm9
  412c20:	vpor   ymm1,ymm12,ymm1
  412c24:	vpor   ymm1,ymm13,ymm1
  412c28:	vextracti128 xmm2,ymm1,0x1
  412c2e:	vpor   xmm1,xmm1,xmm2
  412c32:	vpshufd xmm2,xmm1,0x4e
  412c37:	vpor   xmm1,xmm1,xmm2
  412c3b:	vmovq  r8,xmm1
  412c40:	cmp    r10,rbx
  412c43:	je     412920 <__flatcc_fb_gen_c_json_parser@@Base+0x3320>
  412c49:	lea    rdi,[rdx*8+0x0]
  412c51:	mov    ebp,0x40
  412c56:	sub    rbp,rdi
  412c59:	add    rsi,QWORD PTR [rsp+0x20]
  412c5e:	xchg   ax,ax
  412c60:	movsx  rdi,BYTE PTR [rsi+rdx*1]
  412c65:	mov    ecx,ebp
  412c67:	and    cl,0xf8
  412c6a:	shlx   rcx,rdi,rcx
  412c6f:	or     r8,rcx
  412c72:	add    rbp,0x8
  412c76:	dec    rdx
  412c79:	jne    412c60 <__flatcc_fb_gen_c_json_parser@@Base+0x3660>
  412c7b:	jmp    412920 <__flatcc_fb_gen_c_json_parser@@Base+0x3320>
  412c80:	cmp    r12d,DWORD PTR [rsp+0x38]
  412c85:	jle    412d0d <__flatcc_fb_gen_c_json_parser@@Base+0x370d>
  412c8b:	movsxd rcx,r12d
  412c8e:	shl    rcx,0x5
  412c92:	mov    eax,DWORD PTR [r9+rcx*1+0x8]
  412c97:	xor    edx,edx
  412c99:	mov    r14d,0x0
  412c9f:	mov    ebp,0x0
  412ca4:	sub    eax,r15d
  412ca7:	mov    r13,QWORD PTR [rsp+0x40]
  412cac:	jl     4132ac <__flatcc_fb_gen_c_json_parser@@Base+0x3cac>
  412cb2:	mov    rcx,QWORD PTR [r9+rcx*1]
  412cb6:	mov    rdx,QWORD PTR [rsp+0x8]
  412cbb:	lea    rbp,[rcx+rdx*1]
  412cbf:	cmp    eax,0x9
  412cc2:	mov    r14d,0x8
  412cc8:	cmovl  r14d,eax
  412ccc:	test   r14d,r14d
  412ccf:	je     413141 <__flatcc_fb_gen_c_json_parser@@Base+0x3b41>
  412cd5:	movsxd rsi,r14d
  412cd8:	cmp    r14d,0x10
  412cdc:	jae    41314b <__flatcc_fb_gen_c_json_parser@@Base+0x3b4b>
  412ce2:	xor    edx,edx
  412ce4:	mov    rax,rsi
  412ce7:	jmp    41326a <__flatcc_fb_gen_c_json_parser@@Base+0x3c6a>
  412cec:	cmp    ecx,edx
  412cee:	jne    4130a0 <__flatcc_fb_gen_c_json_parser@@Base+0x3aa0>
  412cf4:	mov    r8d,r15d
  412cf7:	xor    r9d,r9d
  412cfa:	add    rsp,0x58
  412cfe:	pop    rbx
  412cff:	pop    r12
  412d01:	pop    r13
  412d03:	pop    r14
  412d05:	pop    r15
  412d07:	pop    rbp
  412d08:	jmp    413970 <__flatcc_fb_gen_c_json_parser@@Base+0x4370>
  412d0d:	movsxd r8,DWORD PTR [rsp+0x14]
  412d12:	xor    ebp,ebp
  412d14:	mov    r12d,0x8
  412d1a:	vpcmpeqd ymm14,ymm14,ymm14
  412d1f:	xor    eax,eax
  412d21:	xor    r14d,r14d
  412d24:	mov    r13,QWORD PTR [rsp+0x40]
  412d29:	jmp    412d3f <__flatcc_fb_gen_c_json_parser@@Base+0x373f>
  412d2b:	xor    eax,eax
  412d2d:	nop    DWORD PTR [rax]
  412d30:	mov    rcx,rax
  412d33:	xor    rcx,rbp
  412d36:	test   rcx,r14
  412d39:	jne    4130d3 <__flatcc_fb_gen_c_json_parser@@Base+0x3ad3>
  412d3f:	mov    rsi,QWORD PTR [rsp+0x18]
  412d44:	cmp    rsi,r8
  412d47:	jge    4130cf <__flatcc_fb_gen_c_json_parser@@Base+0x3acf>
  412d4d:	mov    rcx,rsi
  412d50:	shl    rcx,0x5
  412d54:	mov    r10d,DWORD PTR [r9+rcx*1+0x8]
  412d59:	sub    r10d,r15d
  412d5c:	jl     412f03 <__flatcc_fb_gen_c_json_parser@@Base+0x3903>
  412d62:	cmp    r10d,0x9
  412d66:	cmovge r10d,r12d
  412d6a:	test   r10d,r10d
  412d6d:	je     412d8b <__flatcc_fb_gen_c_json_parser@@Base+0x378b>
  412d6f:	mov    rdi,QWORD PTR [r9+rcx*1]
  412d73:	movsxd r13,r10d
  412d76:	cmp    r10d,0x10
  412d7a:	jae    412d92 <__flatcc_fb_gen_c_json_parser@@Base+0x3792>
  412d7c:	mov    rdx,r13
  412d7f:	xor    ebp,ebp
  412d81:	mov    r13,QWORD PTR [rsp+0x40]
  412d86:	jmp    412eba <__flatcc_fb_gen_c_json_parser@@Base+0x38ba>
  412d8b:	xor    ebp,ebp
  412d8d:	jmp    412eeb <__flatcc_fb_gen_c_json_parser@@Base+0x38eb>
  412d92:	mov    rcx,QWORD PTR [rsp+0x8]
  412d97:	lea    rbp,[rdi+rcx*1]
  412d9b:	mov    r14,r13
  412d9e:	and    r14,0xfffffffffffffff0
  412da2:	mov    rdx,r13
  412da5:	sub    rdx,r14
  412da8:	vmovq  xmm2,r13
  412dad:	vpbroadcastq ymm2,xmm2
  412db2:	vpaddq ymm10,ymm2,YMMWORD PTR [rip+0x2df26]        # 440ce0 <_IO_stdin_used@@Base+0x13ce0>
  412dba:	vpxor  xmm9,xmm9,xmm9
  412dbf:	mov    rcx,r14
  412dc2:	vpxor  xmm11,xmm11,xmm11
  412dc7:	vpxor  xmm12,xmm12,xmm12
  412dcc:	vpxor  xmm13,xmm13,xmm13
  412dd1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412ddb:	nop    DWORD PTR [rax+rax*1+0x0]
  412de0:	vpaddq ymm2,ymm10,ymm14
  412de5:	vmovq  rbx,xmm2
  412dea:	vmovd  xmm7,DWORD PTR [rbp+rbx*1-0x3]
  412df0:	vmovd  xmm1,DWORD PTR [rbp+rbx*1-0x7]
  412df6:	vpshufb xmm7,xmm7,xmm0
  412dfb:	vpmovsxbq ymm7,xmm7
  412e00:	vpshufb xmm1,xmm1,xmm0
  412e05:	vpmovsxbq ymm1,xmm1
  412e0a:	vpsllq ymm2,ymm2,0x3
  412e0f:	vpsubq ymm2,ymm15,ymm2
  412e13:	vpand  ymm2,ymm2,ymm5
  412e17:	vpsllvq ymm2,ymm7,ymm2
  412e1c:	vpsllq ymm7,ymm10,0x3
  412e22:	vpor   ymm9,ymm2,ymm9
  412e27:	vpsubq ymm2,ymm8,ymm7
  412e2b:	vpand  ymm2,ymm2,ymm5
  412e2f:	vpsllvq ymm1,ymm1,ymm2
  412e34:	vmovd  xmm2,DWORD PTR [rbp+rbx*1-0xb]
  412e3a:	vpshufb xmm2,xmm2,xmm0
  412e3f:	vpmovsxbq ymm2,xmm2
  412e44:	vpor   ymm11,ymm1,ymm11
  412e49:	vpsubq ymm1,ymm3,ymm7
  412e4d:	vpand  ymm1,ymm1,ymm5
  412e51:	vpsllvq ymm1,ymm2,ymm1
  412e56:	vpor   ymm12,ymm1,ymm12
  412e5b:	vmovd  xmm1,DWORD PTR [rbp+rbx*1-0xf]
  412e61:	vpshufb xmm1,xmm1,xmm0
  412e66:	vpmovsxbq ymm1,xmm1
  412e6b:	vpsubq ymm2,ymm4,ymm7
  412e6f:	vpand  ymm2,ymm2,ymm5
  412e73:	vpsllvq ymm1,ymm1,ymm2
  412e78:	vpor   ymm13,ymm1,ymm13
  412e7d:	vpaddq ymm10,ymm10,ymm6
  412e81:	add    rcx,0xfffffffffffffff0
  412e85:	jne    412de0 <__flatcc_fb_gen_c_json_parser@@Base+0x37e0>
  412e8b:	vpor   ymm1,ymm11,ymm9
  412e90:	vpor   ymm1,ymm12,ymm1
  412e94:	vpor   ymm1,ymm13,ymm1
  412e98:	vextracti128 xmm2,ymm1,0x1
  412e9e:	vpor   xmm1,xmm1,xmm2
  412ea2:	vpshufd xmm2,xmm1,0x4e
  412ea7:	vpor   xmm1,xmm1,xmm2
  412eab:	vmovq  rbp,xmm1
  412eb0:	cmp    r14,r13
  412eb3:	mov    r13,QWORD PTR [rsp+0x40]
  412eb8:	je     412eeb <__flatcc_fb_gen_c_json_parser@@Base+0x38eb>
  412eba:	lea    rbx,[rdx*8+0x0]
  412ec2:	mov    esi,0x40
  412ec7:	sub    rsi,rbx
  412eca:	add    rdi,QWORD PTR [rsp+0x20]
  412ecf:	nop
  412ed0:	movsx  rbx,BYTE PTR [rdi+rdx*1]
  412ed5:	mov    ecx,esi
  412ed7:	and    cl,0xf8
  412eda:	shlx   rcx,rbx,rcx
  412edf:	or     rbp,rcx
  412ee2:	add    rsi,0x8
  412ee6:	dec    rdx
  412ee9:	jne    412ed0 <__flatcc_fb_gen_c_json_parser@@Base+0x38d0>
  412eeb:	shl    r10d,0x3
  412eef:	neg    r10b
  412ef2:	mov    rcx,0xffffffffffffffff
  412ef9:	shlx   r14,rcx,r10
  412efe:	mov    rsi,QWORD PTR [rsp+0x18]
  412f03:	inc    rsi
  412f06:	mov    QWORD PTR [rsp+0x18],rsi
  412f0b:	mov    rdx,rsi
  412f0e:	shl    rdx,0x5
  412f12:	mov    ecx,DWORD PTR [r9+rdx*1+0x8]
  412f17:	sub    ecx,r15d
  412f1a:	jl     412d30 <__flatcc_fb_gen_c_json_parser@@Base+0x3730>
  412f20:	cmp    ecx,0x9
  412f23:	cmovge ecx,r12d
  412f27:	test   ecx,ecx
  412f29:	je     412d2b <__flatcc_fb_gen_c_json_parser@@Base+0x372b>
  412f2f:	mov    rsi,QWORD PTR [r9+rdx*1]
  412f33:	movsxd rbx,ecx
  412f36:	cmp    ecx,0x10
  412f39:	jae    412f45 <__flatcc_fb_gen_c_json_parser@@Base+0x3945>
  412f3b:	mov    rdx,rbx
  412f3e:	xor    eax,eax
  412f40:	jmp    413069 <__flatcc_fb_gen_c_json_parser@@Base+0x3a69>
  412f45:	mov    rax,QWORD PTR [rsp+0x8]
  412f4a:	add    rax,rsi
  412f4d:	mov    r10,rbx
  412f50:	and    r10,0xfffffffffffffff0
  412f54:	mov    rdx,rbx
  412f57:	sub    rdx,r10
  412f5a:	vmovq  xmm1,rbx
  412f5f:	vpbroadcastq ymm1,xmm1
  412f64:	vpaddq ymm10,ymm1,YMMWORD PTR [rip+0x2dd74]        # 440ce0 <_IO_stdin_used@@Base+0x13ce0>
  412f6c:	vpxor  xmm9,xmm9,xmm9
  412f71:	mov    rcx,r10
  412f74:	vpxor  xmm11,xmm11,xmm11
  412f79:	vpxor  xmm12,xmm12,xmm12
  412f7e:	vpxor  xmm13,xmm13,xmm13
  412f83:	nop    WORD PTR cs:[rax+rax*1+0x0]
  412f8d:	nop    DWORD PTR [rax]
  412f90:	vpaddq ymm1,ymm10,ymm14
  412f95:	vmovq  rdi,xmm1
  412f9a:	vmovd  xmm2,DWORD PTR [rax+rdi*1-0x3]
  412fa0:	vmovd  xmm7,DWORD PTR [rax+rdi*1-0x7]
  412fa6:	vpshufb xmm2,xmm2,xmm0
  412fab:	vpmovsxbq ymm2,xmm2
  412fb0:	vpshufb xmm7,xmm7,xmm0
  412fb5:	vpmovsxbq ymm7,xmm7
  412fba:	vpsllq ymm1,ymm1,0x3
  412fbf:	vpsubq ymm1,ymm15,ymm1
  412fc3:	vpand  ymm1,ymm1,ymm5
  412fc7:	vpsllvq ymm1,ymm2,ymm1
  412fcc:	vpsllq ymm2,ymm10,0x3
  412fd2:	vpor   ymm9,ymm1,ymm9
  412fd7:	vpsubq ymm1,ymm8,ymm2
  412fdb:	vpand  ymm1,ymm1,ymm5
  412fdf:	vpsllvq ymm1,ymm7,ymm1
  412fe4:	vmovd  xmm7,DWORD PTR [rax+rdi*1-0xb]
  412fea:	vpshufb xmm7,xmm7,xmm0
  412fef:	vpmovsxbq ymm7,xmm7
  412ff4:	vpor   ymm11,ymm1,ymm11
  412ff9:	vpsubq ymm1,ymm3,ymm2
  412ffd:	vpand  ymm1,ymm1,ymm5
  413001:	vpsllvq ymm1,ymm7,ymm1
  413006:	vpor   ymm12,ymm1,ymm12
  41300b:	vmovd  xmm1,DWORD PTR [rax+rdi*1-0xf]
  413011:	vpshufb xmm1,xmm1,xmm0
  413016:	vpmovsxbq ymm1,xmm1
  41301b:	vpsubq ymm2,ymm4,ymm2
  41301f:	vpand  ymm2,ymm2,ymm5
  413023:	vpsllvq ymm1,ymm1,ymm2
  413028:	vpor   ymm13,ymm1,ymm13
  41302d:	vpaddq ymm10,ymm10,ymm6
  413031:	add    rcx,0xfffffffffffffff0
  413035:	jne    412f90 <__flatcc_fb_gen_c_json_parser@@Base+0x3990>
  41303b:	vpor   ymm1,ymm11,ymm9
  413040:	vpor   ymm1,ymm12,ymm1
  413044:	vpor   ymm1,ymm13,ymm1
  413048:	vextracti128 xmm2,ymm1,0x1
  41304e:	vpor   xmm1,xmm1,xmm2
  413052:	vpshufd xmm2,xmm1,0x4e
  413057:	vpor   xmm1,xmm1,xmm2
  41305b:	vmovq  rax,xmm1
  413060:	cmp    r10,rbx
  413063:	je     412d30 <__flatcc_fb_gen_c_json_parser@@Base+0x3730>
  413069:	lea    rdi,[rdx*8+0x0]
  413071:	mov    ebx,0x40
  413076:	sub    rbx,rdi
  413079:	add    rsi,QWORD PTR [rsp+0x20]
  41307e:	xchg   ax,ax
  413080:	movsx  rdi,BYTE PTR [rsi+rdx*1]
  413085:	mov    ecx,ebx
  413087:	and    cl,0xf8
  41308a:	shlx   rcx,rdi,rcx
  41308f:	or     rax,rcx
  413092:	add    rbx,0x8
  413096:	dec    rdx
  413099:	jne    413080 <__flatcc_fb_gen_c_json_parser@@Base+0x3a80>
  41309b:	jmp    412d30 <__flatcc_fb_gen_c_json_parser@@Base+0x3730>
  4130a0:	lea    eax,[rdx+0x1]
  4130a3:	cmp    eax,ecx
  4130a5:	jne    412875 <__flatcc_fb_gen_c_json_parser@@Base+0x3275>
  4130ab:	movsxd rax,ecx
  4130ae:	shl    rax,0x5
  4130b2:	mov    eax,DWORD PTR [r9+rax*1+0x8]
  4130b7:	cmp    r8d,eax
  4130ba:	jg     412cf4 <__flatcc_fb_gen_c_json_parser@@Base+0x36f4>
  4130c0:	neg    eax
  4130c2:	cmp    ebx,eax
  4130c4:	jne    412875 <__flatcc_fb_gen_c_json_parser@@Base+0x3275>
  4130ca:	jmp    412cf4 <__flatcc_fb_gen_c_json_parser@@Base+0x36f4>
  4130cf:	inc    esi
  4130d1:	jmp    4130d8 <__flatcc_fb_gen_c_json_parser@@Base+0x3ad8>
  4130d3:	mov    rsi,QWORD PTR [rsp+0x18]
  4130d8:	lea    r10d,[rsi-0x1]
  4130dc:	mov    rdx,QWORD PTR [rsp+0x38]
  4130e1:	mov    r12d,edx
  4130e4:	cmp    esi,edx
  4130e6:	mov    ecx,DWORD PTR [rsp+0x14]
  4130ea:	mov    QWORD PTR [rsp+0x18],rsi
  4130ef:	jle    41336a <__flatcc_fb_gen_c_json_parser@@Base+0x3d6a>
  4130f5:	mov    ebp,DWORD PTR [rsp+0x2c]
  4130f9:	mov    eax,DWORD PTR [rsp+0x48]
  4130fd:	cmp    ebp,eax
  4130ff:	mov    ebx,DWORD PTR [rsp+0x28]
  413103:	jg     41310f <__flatcc_fb_gen_c_json_parser@@Base+0x3b0f>
  413105:	add    eax,ebx
  413107:	test   eax,eax
  413109:	jg     413362 <__flatcc_fb_gen_c_json_parser@@Base+0x3d62>
  41310f:	movsxd rax,r10d
  413112:	mov    rsi,QWORD PTR [rsp+0x50]
  413117:	add    rsi,r9
  41311a:	add    rsi,0x28
  41311e:	xchg   ax,ax
  413120:	cmp    r11,rax
  413123:	jge    41335f <__flatcc_fb_gen_c_json_parser@@Base+0x3d5f>
  413129:	inc    r11
  41312c:	mov    edi,DWORD PTR [rsi]
  41312e:	add    rsi,0x20
  413132:	cmp    ebp,edi
  413134:	jg     413120 <__flatcc_fb_gen_c_json_parser@@Base+0x3b20>
  413136:	add    edi,ebx
  413138:	test   edi,edi
  41313a:	jle    413120 <__flatcc_fb_gen_c_json_parser@@Base+0x3b20>
  41313c:	jmp    413362 <__flatcc_fb_gen_c_json_parser@@Base+0x3d62>
  413141:	xor    edx,edx
  413143:	xor    r14d,r14d
  413146:	jmp    4132ac <__flatcc_fb_gen_c_json_parser@@Base+0x3cac>
  41314b:	mov    r8,rsi
  41314e:	and    r8,0xfffffffffffffff0
  413152:	mov    rax,rsi
  413155:	vmovq  xmm1,rsi
  41315a:	vpbroadcastq ymm1,xmm1
  41315f:	vpaddq ymm1,ymm1,YMMWORD PTR [rip+0x2db79]        # 440ce0 <_IO_stdin_used@@Base+0x13ce0>
  413167:	sub    rax,r8
  41316a:	vpxor  xmm9,xmm9,xmm9
  41316f:	mov    rdx,r8
  413172:	vpxor  xmm10,xmm10,xmm10
  413177:	vpxor  xmm11,xmm11,xmm11
  41317c:	vpxor  xmm12,xmm12,xmm12
  413181:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41318b:	nop    DWORD PTR [rax+rax*1+0x0]
  413190:	vpaddq ymm2,ymm1,YMMWORD PTR [rip+0x2db68]        # 440d00 <_IO_stdin_used@@Base+0x13d00>
  413198:	vmovq  rdi,xmm2
  41319d:	vmovd  xmm13,DWORD PTR [rbp+rdi*1-0x3]
  4131a3:	vmovd  xmm14,DWORD PTR [rbp+rdi*1-0x7]
  4131a9:	vpshufb xmm7,xmm13,xmm0
  4131ae:	vpmovsxbq ymm13,xmm7
  4131b3:	vpshufb xmm7,xmm14,xmm0
  4131b8:	vpmovsxbq ymm7,xmm7
  4131bd:	vpsllq ymm2,ymm2,0x3
  4131c2:	vpsubq ymm2,ymm15,ymm2
  4131c6:	vpand  ymm2,ymm2,ymm5
  4131ca:	vpsllvq ymm2,ymm13,ymm2
  4131cf:	vpsllq ymm13,ymm1,0x3
  4131d4:	vpor   ymm9,ymm2,ymm9
  4131d9:	vpsubq ymm2,ymm8,ymm13
  4131de:	vpand  ymm2,ymm2,ymm5
  4131e2:	vpsllvq ymm2,ymm7,ymm2
  4131e7:	vmovd  xmm7,DWORD PTR [rbp+rdi*1-0xb]
  4131ed:	vpshufb xmm7,xmm7,xmm0
  4131f2:	vpmovsxbq ymm7,xmm7
  4131f7:	vpor   ymm10,ymm2,ymm10
  4131fc:	vpsubq ymm2,ymm3,ymm13
  413201:	vpand  ymm2,ymm2,ymm5
  413205:	vpsllvq ymm2,ymm7,ymm2
  41320a:	vpor   ymm11,ymm2,ymm11
  41320f:	vmovd  xmm2,DWORD PTR [rbp+rdi*1-0xf]
  413215:	vpshufb xmm2,xmm2,xmm0
  41321a:	vpmovsxbq ymm2,xmm2
  41321f:	vpsubq ymm7,ymm4,ymm13
  413224:	vpand  ymm7,ymm7,ymm5
  413228:	vpsllvq ymm2,ymm2,ymm7
  41322d:	vpor   ymm12,ymm2,ymm12
  413232:	vpaddq ymm1,ymm1,ymm6
  413236:	add    rdx,0xfffffffffffffff0
  41323a:	jne    413190 <__flatcc_fb_gen_c_json_parser@@Base+0x3b90>
  413240:	vpor   ymm0,ymm10,ymm9
  413245:	vpor   ymm0,ymm11,ymm0
  413249:	vpor   ymm0,ymm12,ymm0
  41324d:	vextracti128 xmm1,ymm0,0x1
  413253:	vpor   xmm0,xmm0,xmm1
  413257:	vpshufd xmm1,xmm0,0x4e
  41325c:	vpor   xmm0,xmm0,xmm1
  413260:	vmovq  rdx,xmm0
  413265:	cmp    r8,rsi
  413268:	je     4132ac <__flatcc_fb_gen_c_json_parser@@Base+0x3cac>
  41326a:	lea    rdi,[rax*8+0x0]
  413272:	mov    ebx,0x40
  413277:	sub    rbx,rdi
  41327a:	mov    rsi,QWORD PTR [rsp+0x8]
  41327f:	add    rcx,rsi
  413282:	add    rcx,0xffffffffffffffff
  413286:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413290:	movsx  rdi,BYTE PTR [rcx+rax*1]
  413295:	mov    esi,ebx
  413297:	and    sil,0xf8
  41329b:	shlx   rsi,rdi,rsi
  4132a0:	or     rdx,rsi
  4132a3:	add    rbx,0x8
  4132a7:	dec    rax
  4132aa:	jne    413290 <__flatcc_fb_gen_c_json_parser@@Base+0x3c90>
  4132ac:	lea    rsi,[rip+0x2e984]        # 441c37 <_IO_stdin_used@@Base+0x14c37>
  4132b3:	mov    rdi,r13
  4132b6:	mov    ecx,r14d
  4132b9:	mov    r8,rbp
  4132bc:	xor    eax,eax
  4132be:	vzeroupper 
  4132c1:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4132c6:	inc    DWORD PTR [r13+0xf0]
  4132cd:	lea    ecx,[r12-0x1]
  4132d2:	mov    rdi,r13
  4132d5:	mov    rbx,QWORD PTR [rsp+0x30]
  4132da:	mov    rsi,rbx
  4132dd:	mov    rdx,QWORD PTR [rsp+0x38]
  4132e2:	mov    r8d,r15d
  4132e5:	call   412830 <__flatcc_fb_gen_c_json_parser@@Base+0x3230>
  4132ea:	mov    eax,DWORD PTR [r13+0xf0]
  4132f1:	test   eax,eax
  4132f3:	je     413893 <__flatcc_fb_gen_c_json_parser@@Base+0x4293>
  4132f9:	dec    eax
  4132fb:	mov    DWORD PTR [r13+0xf0],eax
  413302:	lea    rsi,[rip+0x2e989]        # 441c92 <_IO_stdin_used@@Base+0x14c92>
  413309:	mov    rdi,r13
  41330c:	mov    edx,r14d
  41330f:	mov    rcx,rbp
  413312:	xor    eax,eax
  413314:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413319:	inc    DWORD PTR [r13+0xf0]
  413320:	mov    rdi,r13
  413323:	mov    rsi,rbx
  413326:	mov    edx,r12d
  413329:	mov    ecx,DWORD PTR [rsp+0x14]
  41332d:	mov    r8d,r15d
  413330:	call   412830 <__flatcc_fb_gen_c_json_parser@@Base+0x3230>
  413335:	mov    eax,DWORD PTR [r13+0xf0]
  41333c:	test   eax,eax
  41333e:	je     4138b2 <__flatcc_fb_gen_c_json_parser@@Base+0x42b2>
  413344:	dec    eax
  413346:	mov    DWORD PTR [r13+0xf0],eax
  41334d:	lea    rsi,[rip+0x2e95b]        # 441caf <_IO_stdin_used@@Base+0x14caf>
  413354:	mov    rdi,r13
  413357:	mov    edx,r14d
  41335a:	jmp    413866 <__flatcc_fb_gen_c_json_parser@@Base+0x4266>
  41335f:	inc    r11d
  413362:	mov    r12d,r11d
  413365:	mov    rsi,QWORD PTR [rsp+0x18]
  41336a:	mov    DWORD PTR [rsp+0x20],0x0
  413372:	cmp    r12d,esi
  413375:	mov    QWORD PTR [rsp+0x40],r12
  41337a:	jge    4133f8 <__flatcc_fb_gen_c_json_parser@@Base+0x3df8>
  41337c:	xor    ebx,ebx
  41337e:	movsxd r14,r12d
  413381:	mov    eax,0x0
  413386:	cmp    r12d,edx
  413389:	jle    4133a9 <__flatcc_fb_gen_c_json_parser@@Base+0x3da9>
  41338b:	mov    rax,r14
  41338e:	shl    rax,0x5
  413392:	mov    eax,DWORD PTR [rax+r9*1-0x18]
  413397:	cmp    DWORD PTR [rsp+0x2c],eax
  41339b:	setge  cl
  41339e:	sub    eax,r15d
  4133a1:	cmp    eax,0x8
  4133a4:	sete   al
  4133a7:	and    al,cl
  4133a9:	mov    QWORD PTR [rsp+0x48],rax
  4133ae:	shl    r14,0x5
  4133b2:	mov    eax,DWORD PTR [r9+r14*1+0x8]
  4133b7:	mov    edx,0x0
  4133bc:	mov    ebp,0x0
  4133c1:	sub    eax,r15d
  4133c4:	jl     41356f <__flatcc_fb_gen_c_json_parser@@Base+0x3f6f>
  4133ca:	mov    rcx,QWORD PTR [r9+r14*1]
  4133ce:	mov    rdx,QWORD PTR [rsp+0x8]
  4133d3:	lea    rbp,[rcx+rdx*1]
  4133d7:	cmp    eax,0x9
  4133da:	mov    ebx,0x8
  4133df:	cmovl  ebx,eax
  4133e2:	test   ebx,ebx
  4133e4:	je     41340e <__flatcc_fb_gen_c_json_parser@@Base+0x3e0e>
  4133e6:	movsxd rsi,ebx
  4133e9:	cmp    ebx,0x10
  4133ec:	jae    413417 <__flatcc_fb_gen_c_json_parser@@Base+0x3e17>
  4133ee:	xor    edx,edx
  4133f0:	mov    rax,rsi
  4133f3:	jmp    41352a <__flatcc_fb_gen_c_json_parser@@Base+0x3f2a>
  4133f8:	lea    rbp,[rip+0x1b150]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  4133ff:	xor    eax,eax
  413401:	mov    QWORD PTR [rsp+0x8],rax
  413406:	mov    r14d,r12d
  413409:	jmp    4136ec <__flatcc_fb_gen_c_json_parser@@Base+0x40ec>
  41340e:	xor    edx,edx
  413410:	xor    ebx,ebx
  413412:	jmp    41356f <__flatcc_fb_gen_c_json_parser@@Base+0x3f6f>
  413417:	mov    r8,rsi
  41341a:	and    r8,0xfffffffffffffff0
  41341e:	mov    rax,rsi
  413421:	vmovq  xmm1,rsi
  413426:	vpbroadcastq ymm1,xmm1
  41342b:	vpaddq ymm1,ymm1,YMMWORD PTR [rip+0x2d8ad]        # 440ce0 <_IO_stdin_used@@Base+0x13ce0>
  413433:	sub    rax,r8
  413436:	vpxor  xmm9,xmm9,xmm9
  41343b:	mov    rdx,r8
  41343e:	vpxor  xmm10,xmm10,xmm10
  413443:	vpxor  xmm11,xmm11,xmm11
  413448:	vpxor  xmm12,xmm12,xmm12
  41344d:	nop    DWORD PTR [rax]
  413450:	vpaddq ymm2,ymm1,YMMWORD PTR [rip+0x2d8a8]        # 440d00 <_IO_stdin_used@@Base+0x13d00>
  413458:	vmovq  rdi,xmm2
  41345d:	vmovd  xmm13,DWORD PTR [rbp+rdi*1-0x3]
  413463:	vmovd  xmm14,DWORD PTR [rbp+rdi*1-0x7]
  413469:	vpshufb xmm7,xmm13,xmm0
  41346e:	vpmovsxbq ymm13,xmm7
  413473:	vpshufb xmm7,xmm14,xmm0
  413478:	vpmovsxbq ymm7,xmm7
  41347d:	vpsllq ymm2,ymm2,0x3
  413482:	vpsubq ymm2,ymm15,ymm2
  413486:	vpand  ymm2,ymm2,ymm5
  41348a:	vpsllvq ymm2,ymm13,ymm2
  41348f:	vpsllq ymm13,ymm1,0x3
  413494:	vpor   ymm9,ymm2,ymm9
  413499:	vpsubq ymm2,ymm8,ymm13
  41349e:	vpand  ymm2,ymm2,ymm5
  4134a2:	vpsllvq ymm2,ymm7,ymm2
  4134a7:	vmovd  xmm7,DWORD PTR [rbp+rdi*1-0xb]
  4134ad:	vpshufb xmm7,xmm7,xmm0
  4134b2:	vpmovsxbq ymm7,xmm7
  4134b7:	vpor   ymm10,ymm2,ymm10
  4134bc:	vpsubq ymm2,ymm3,ymm13
  4134c1:	vpand  ymm2,ymm2,ymm5
  4134c5:	vpsllvq ymm2,ymm7,ymm2
  4134ca:	vpor   ymm11,ymm2,ymm11
  4134cf:	vmovd  xmm2,DWORD PTR [rbp+rdi*1-0xf]
  4134d5:	vpshufb xmm2,xmm2,xmm0
  4134da:	vpmovsxbq ymm2,xmm2
  4134df:	vpsubq ymm7,ymm4,ymm13
  4134e4:	vpand  ymm7,ymm7,ymm5
  4134e8:	vpsllvq ymm2,ymm2,ymm7
  4134ed:	vpor   ymm12,ymm2,ymm12
  4134f2:	vpaddq ymm1,ymm1,ymm6
  4134f6:	add    rdx,0xfffffffffffffff0
  4134fa:	jne    413450 <__flatcc_fb_gen_c_json_parser@@Base+0x3e50>
  413500:	vpor   ymm0,ymm10,ymm9
  413505:	vpor   ymm0,ymm11,ymm0
  413509:	vpor   ymm0,ymm12,ymm0
  41350d:	vextracti128 xmm1,ymm0,0x1
  413513:	vpor   xmm0,xmm0,xmm1
  413517:	vpshufd xmm1,xmm0,0x4e
  41351c:	vpor   xmm0,xmm0,xmm1
  413520:	vmovq  rdx,xmm0
  413525:	cmp    r8,rsi
  413528:	je     41356f <__flatcc_fb_gen_c_json_parser@@Base+0x3f6f>
  41352a:	mov    r8,rbx
  41352d:	lea    rdi,[rax*8+0x0]
  413535:	mov    ebx,0x40
  41353a:	sub    rbx,rdi
  41353d:	mov    rsi,QWORD PTR [rsp+0x8]
  413542:	add    rcx,rsi
  413545:	add    rcx,0xffffffffffffffff
  413549:	nop    DWORD PTR [rax+0x0]
  413550:	movsx  rdi,BYTE PTR [rcx+rax*1]
  413555:	mov    esi,ebx
  413557:	and    sil,0xf8
  41355b:	shlx   rsi,rdi,rsi
  413560:	or     rdx,rsi
  413563:	add    rbx,0x8
  413567:	dec    rax
  41356a:	jne    413550 <__flatcc_fb_gen_c_json_parser@@Base+0x3f50>
  41356c:	mov    rbx,r8
  41356f:	mov    DWORD PTR [rsp+0x28],r10d
  413574:	lea    rsi,[rip+0x2e74a]        # 441cc5 <_IO_stdin_used@@Base+0x14cc5>
  41357b:	mov    rdi,r13
  41357e:	mov    ecx,ebx
  413580:	mov    r8,rbp
  413583:	xor    eax,eax
  413585:	vzeroupper 
  413588:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41358d:	inc    DWORD PTR [r13+0xf0]
  413594:	cmp    BYTE PTR [rsp+0x48],0x0
  413599:	mov    QWORD PTR [rsp+0x8],rbx
  41359e:	je     41366b <__flatcc_fb_gen_c_json_parser@@Base+0x406b>
  4135a4:	lea    rsi,[rip+0x2e741]        # 441cec <_IO_stdin_used@@Base+0x14cec>
  4135ab:	mov    rdi,r13
  4135ae:	mov    edx,ebx
  4135b0:	mov    rcx,rbp
  4135b3:	xor    eax,eax
  4135b5:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4135ba:	mov    rcx,r14
  4135bd:	mov    r14,rbx
  4135c0:	mov    rbx,QWORD PTR [rsp+0x30]
  4135c5:	mov    rax,QWORD PTR [rbx]
  4135c8:	mov    rsi,QWORD PTR [rbx+0x18]
  4135cc:	mov    rdx,QWORD PTR [rcx+rax*1-0x10]
  4135d1:	mov    ecx,DWORD PTR [rcx+rax*1-0x8]
  4135d5:	mov    rdi,r13
  4135d8:	mov    r8d,0x8
  4135de:	call   QWORD PTR [rbx+0x8]
  4135e1:	lea    rsi,[rip+0x2e724]        # 441d0c <_IO_stdin_used@@Base+0x14d0c>
  4135e8:	mov    rdi,r13
  4135eb:	mov    edx,r14d
  4135ee:	mov    rcx,rbp
  4135f1:	xor    eax,eax
  4135f3:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4135f8:	lea    rsi,[rip+0x2e729]        # 441d28 <_IO_stdin_used@@Base+0x14d28>
  4135ff:	mov    rdi,r13
  413602:	xor    eax,eax
  413604:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413609:	lea    rsi,[rip+0x2e476]        # 441a86 <_IO_stdin_used@@Base+0x14a86>
  413610:	mov    rdi,r13
  413613:	xor    eax,eax
  413615:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41361a:	mov    rdi,r13
  41361d:	mov    rsi,rbx
  413620:	mov    edx,r12d
  413623:	mov    ecx,DWORD PTR [rsp+0x28]
  413627:	mov    r8d,DWORD PTR [rsp+0x2c]
  41362c:	call   412830 <__flatcc_fb_gen_c_json_parser@@Base+0x3230>
  413631:	mov    eax,DWORD PTR [r13+0xf0]
  413638:	test   eax,eax
  41363a:	je     413912 <__flatcc_fb_gen_c_json_parser@@Base+0x4312>
  413640:	lea    r14d,[r12-0x1]
  413645:	dec    eax
  413647:	mov    DWORD PTR [r13+0xf0],eax
  41364e:	lea    rsi,[rip+0x2e6dd]        # 441d32 <_IO_stdin_used@@Base+0x14d32>
  413655:	mov    rdi,r13
  413658:	mov    rbx,QWORD PTR [rsp+0x8]
  41365d:	mov    edx,ebx
  41365f:	mov    rcx,rbp
  413662:	xor    eax,eax
  413664:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413669:	jmp    4136a9 <__flatcc_fb_gen_c_json_parser@@Base+0x40a9>
  41366b:	lea    rsi,[rip+0x2e6b6]        # 441d28 <_IO_stdin_used@@Base+0x14d28>
  413672:	mov    rdi,r13
  413675:	xor    eax,eax
  413677:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41367c:	lea    rsi,[rip+0x2e403]        # 441a86 <_IO_stdin_used@@Base+0x14a86>
  413683:	mov    rdi,r13
  413686:	xor    eax,eax
  413688:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41368d:	mov    rdi,r13
  413690:	mov    rsi,QWORD PTR [rsp+0x30]
  413695:	mov    edx,r12d
  413698:	mov    ecx,DWORD PTR [rsp+0x28]
  41369c:	mov    r8d,DWORD PTR [rsp+0x2c]
  4136a1:	call   412830 <__flatcc_fb_gen_c_json_parser@@Base+0x3230>
  4136a6:	mov    r14d,r12d
  4136a9:	mov    eax,DWORD PTR [r13+0xf0]
  4136b0:	test   eax,eax
  4136b2:	je     4138d1 <__flatcc_fb_gen_c_json_parser@@Base+0x42d1>
  4136b8:	dec    eax
  4136ba:	mov    DWORD PTR [r13+0xf0],eax
  4136c1:	lea    rsi,[rip+0x2e687]        # 441d4f <_IO_stdin_used@@Base+0x14d4f>
  4136c8:	mov    rdi,r13
  4136cb:	mov    edx,ebx
  4136cd:	mov    rcx,rbp
  4136d0:	xor    eax,eax
  4136d2:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4136d7:	inc    DWORD PTR [r13+0xf0]
  4136de:	mov    ecx,DWORD PTR [rsp+0x14]
  4136e2:	mov    rdx,QWORD PTR [rsp+0x38]
  4136e7:	mov    rsi,QWORD PTR [rsp+0x18]
  4136ec:	cmp    r14d,edx
  4136ef:	setg   al
  4136f2:	cmp    esi,ecx
  4136f4:	setle  bl
  4136f7:	and    bl,al
  4136f9:	cmp    bl,0x1
  4136fc:	jne    41370f <__flatcc_fb_gen_c_json_parser@@Base+0x410f>
  4136fe:	mov    rax,QWORD PTR [rsp+0x30]
  413703:	mov    edi,DWORD PTR [rax+0x28]
  413706:	inc    edi
  413708:	mov    DWORD PTR [rsp+0x20],edi
  41370c:	mov    DWORD PTR [rax+0x28],edi
  41370f:	cmp    r14d,edx
  413712:	jle    4137a8 <__flatcc_fb_gen_c_json_parser@@Base+0x41a8>
  413718:	lea    ecx,[r14-0x1]
  41371c:	mov    rdi,r13
  41371f:	mov    rsi,QWORD PTR [rsp+0x30]
  413724:	mov    r8d,r15d
  413727:	mov    r9d,DWORD PTR [rsp+0x20]
  41372c:	vzeroupper 
  41372f:	call   413970 <__flatcc_fb_gen_c_json_parser@@Base+0x4370>
  413734:	mov    rsi,QWORD PTR [rsp+0x18]
  413739:	mov    rdx,QWORD PTR [rsp+0x38]
  41373e:	mov    ecx,DWORD PTR [rsp+0x14]
  413742:	test   bl,bl
  413744:	je     4137a8 <__flatcc_fb_gen_c_json_parser@@Base+0x41a8>
  413746:	lea    rsi,[rip+0x2e620]        # 441d6d <_IO_stdin_used@@Base+0x14d6d>
  41374d:	mov    rdi,r13
  413750:	mov    r12d,DWORD PTR [rsp+0x20]
  413755:	mov    edx,r12d
  413758:	xor    eax,eax
  41375a:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41375f:	mov    eax,DWORD PTR [r13+0xf0]
  413766:	mov    DWORD PTR [r13+0xf8],eax
  41376d:	mov    DWORD PTR [r13+0xf0],0x0
  413778:	lea    rsi,[rip+0x2e604]        # 441d83 <_IO_stdin_used@@Base+0x14d83>
  41377f:	mov    rdi,r13
  413782:	mov    edx,r12d
  413785:	xor    eax,eax
  413787:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41378c:	mov    rsi,QWORD PTR [rsp+0x18]
  413791:	mov    rdx,QWORD PTR [rsp+0x38]
  413796:	mov    ecx,DWORD PTR [rsp+0x14]
  41379a:	mov    eax,DWORD PTR [r13+0xf8]
  4137a1:	mov    DWORD PTR [r13+0xf0],eax
  4137a8:	cmp    esi,ecx
  4137aa:	jle    4137c6 <__flatcc_fb_gen_c_json_parser@@Base+0x41c6>
  4137ac:	cmp    r14d,edx
  4137af:	jg     4137de <__flatcc_fb_gen_c_json_parser@@Base+0x41de>
  4137b1:	mov    rdi,r13
  4137b4:	mov    rax,QWORD PTR [rsp+0x30]
  4137b9:	vzeroupper 
  4137bc:	call   QWORD PTR [rax+0x10]
  4137bf:	mov    rbx,QWORD PTR [rsp+0x8]
  4137c4:	jmp    413837 <__flatcc_fb_gen_c_json_parser@@Base+0x4237>
  4137c6:	mov    rax,rsi
  4137c9:	mov    rdi,r13
  4137cc:	mov    rsi,QWORD PTR [rsp+0x30]
  4137d1:	mov    edx,eax
  4137d3:	mov    r8d,r15d
  4137d6:	vzeroupper 
  4137d9:	call   412830 <__flatcc_fb_gen_c_json_parser@@Base+0x3230>
  4137de:	test   bl,bl
  4137e0:	mov    rbx,QWORD PTR [rsp+0x8]
  4137e5:	je     413837 <__flatcc_fb_gen_c_json_parser@@Base+0x4237>
  4137e7:	mov    eax,DWORD PTR [r13+0xf0]
  4137ee:	mov    DWORD PTR [r13+0xf8],eax
  4137f5:	mov    DWORD PTR [r13+0xf0],0x0
  413800:	lea    rsi,[rip+0x2e579]        # 441d80 <_IO_stdin_used@@Base+0x14d80>
  413807:	mov    rdi,r13
  41380a:	mov    edx,DWORD PTR [rsp+0x20]
  41380e:	xor    eax,eax
  413810:	vzeroupper 
  413813:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413818:	mov    eax,DWORD PTR [r13+0xf8]
  41381f:	mov    DWORD PTR [r13+0xf0],eax
  413826:	lea    rsi,[rip+0x2e561]        # 441d8e <_IO_stdin_used@@Base+0x14d8e>
  41382d:	mov    rdi,r13
  413830:	xor    eax,eax
  413832:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413837:	mov    rax,QWORD PTR [rsp+0x40]
  41383c:	cmp    eax,DWORD PTR [rsp+0x18]
  413840:	jge    413881 <__flatcc_fb_gen_c_json_parser@@Base+0x4281>
  413842:	mov    eax,DWORD PTR [r13+0xf0]
  413849:	test   eax,eax
  41384b:	je     4138f0 <__flatcc_fb_gen_c_json_parser@@Base+0x42f0>
  413851:	dec    eax
  413853:	mov    DWORD PTR [r13+0xf0],eax
  41385a:	lea    rsi,[rip+0x2e536]        # 441d97 <_IO_stdin_used@@Base+0x14d97>
  413861:	mov    rdi,r13
  413864:	mov    edx,ebx
  413866:	mov    rcx,rbp
  413869:	xor    eax,eax
  41386b:	add    rsp,0x58
  41386f:	pop    rbx
  413870:	pop    r12
  413872:	pop    r13
  413874:	pop    r14
  413876:	pop    r15
  413878:	pop    rbp
  413879:	vzeroupper 
  41387c:	jmp    411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413881:	add    rsp,0x58
  413885:	pop    rbx
  413886:	pop    r12
  413888:	pop    r13
  41388a:	pop    r14
  41388c:	pop    r15
  41388e:	pop    rbp
  41388f:	vzeroupper 
  413892:	ret    
  413893:	lea    rdi,[rip+0x2d7f7]        # 441091 <_IO_stdin_used@@Base+0x14091>
  41389a:	lea    rsi,[rip+0x2d7fc]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  4138a1:	lea    rcx,[rip+0x2e3b4]        # 441c5c <_IO_stdin_used@@Base+0x14c5c>
  4138a8:	mov    edx,0x3cd
  4138ad:	call   4060f0 <__assert_fail@plt>
  4138b2:	lea    rdi,[rip+0x2d7d8]        # 441091 <_IO_stdin_used@@Base+0x14091>
  4138b9:	lea    rsi,[rip+0x2d7dd]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  4138c0:	lea    rcx,[rip+0x2e395]        # 441c5c <_IO_stdin_used@@Base+0x14c5c>
  4138c7:	mov    edx,0x3cf
  4138cc:	call   4060f0 <__assert_fail@plt>
  4138d1:	lea    rdi,[rip+0x2d7b9]        # 441091 <_IO_stdin_used@@Base+0x14091>
  4138d8:	lea    rsi,[rip+0x2d7be]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  4138df:	lea    rcx,[rip+0x2e376]        # 441c5c <_IO_stdin_used@@Base+0x14c5c>
  4138e6:	mov    edx,0x414
  4138eb:	call   4060f0 <__assert_fail@plt>
  4138f0:	lea    rdi,[rip+0x2d79a]        # 441091 <_IO_stdin_used@@Base+0x14091>
  4138f7:	lea    rsi,[rip+0x2d79f]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  4138fe:	lea    rcx,[rip+0x2e357]        # 441c5c <_IO_stdin_used@@Base+0x14c5c>
  413905:	mov    edx,0x430
  41390a:	vzeroupper 
  41390d:	call   4060f0 <__assert_fail@plt>
  413912:	lea    rdi,[rip+0x2d778]        # 441091 <_IO_stdin_used@@Base+0x14091>
  413919:	lea    rsi,[rip+0x2d77d]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  413920:	lea    rcx,[rip+0x2e335]        # 441c5c <_IO_stdin_used@@Base+0x14c5c>
  413927:	mov    edx,0x410
  41392c:	call   4060f0 <__assert_fail@plt>
  413931:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41393b:	nop    DWORD PTR [rax+rax*1+0x0]
  413940:	push   rbx
  413941:	mov    eax,DWORD PTR [rdi+0x8]
  413944:	mov    ecx,DWORD PTR [rsi+0x8]
  413947:	mov    ebx,eax
  413949:	sub    ebx,ecx
  41394b:	cmovg  eax,ecx
  41394e:	mov    rdi,QWORD PTR [rdi]
  413951:	mov    rsi,QWORD PTR [rsi]
  413954:	movsxd rdx,eax
  413957:	call   406130 <memcmp@plt>
  41395c:	test   eax,eax
  41395e:	cmove  eax,ebx
  413961:	pop    rbx
  413962:	ret    
  413963:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41396d:	nop    DWORD PTR [rax]
  413970:	push   rbp
  413971:	push   r15
  413973:	push   r14
  413975:	push   r13
  413977:	push   r12
  413979:	push   rbx
  41397a:	sub    rsp,0x38
  41397e:	mov    DWORD PTR [rsp+0xc],r9d
  413983:	mov    ebx,r8d
  413986:	mov    ebp,ecx
  413988:	mov    r14,rdi
  41398b:	mov    r13d,ecx
  41398e:	sub    r13d,edx
  413991:	lea    eax,[r13+0x1]
  413995:	shr    eax,0x1f
  413998:	lea    r15d,[rax+r13*1]
  41399c:	add    r15d,0x1
  4139a0:	sar    r15d,1
  4139a3:	mov    DWORD PTR [rsp+0x24],edx
  4139a7:	add    r15d,edx
  4139aa:	mov    QWORD PTR [rsp+0x30],rsi
  4139af:	mov    rcx,QWORD PTR [rsi]
  4139b2:	movsxd rsi,r15d
  4139b5:	shl    rsi,0x5
  4139b9:	mov    r11d,DWORD PTR [rcx+rsi*1+0x8]
  4139be:	xor    r12d,r12d
  4139c1:	mov    r8d,0x0
  4139c7:	mov    eax,0x0
  4139cc:	mov    edx,0x0
  4139d1:	sub    r11d,ebx
  4139d4:	mov    QWORD PTR [rsp+0x28],rsi
  4139d9:	jl     413c0c <__flatcc_fb_gen_c_json_parser@@Base+0x460c>
  4139df:	mov    r8,QWORD PTR [rcx+rsi*1]
  4139e3:	movsxd r9,ebx
  4139e6:	lea    r12,[r8+r9*1]
  4139ea:	cmp    r11d,0x9
  4139ee:	mov    ecx,0x8
  4139f3:	cmovl  ecx,r11d
  4139f7:	test   ecx,ecx
  4139f9:	je     413a15 <__flatcc_fb_gen_c_json_parser@@Base+0x4415>
  4139fb:	movsxd rdi,ecx
  4139fe:	cmp    ecx,0x10
  413a01:	mov    DWORD PTR [rsp+0x20],ebx
  413a05:	mov    DWORD PTR [rsp+0x1c],ebp
  413a09:	jae    413a1f <__flatcc_fb_gen_c_json_parser@@Base+0x441f>
  413a0b:	xor    eax,eax
  413a0d:	mov    rdx,rdi
  413a10:	jmp    413b80 <__flatcc_fb_gen_c_json_parser@@Base+0x4580>
  413a15:	xor    r8d,r8d
  413a18:	xor    eax,eax
  413a1a:	jmp    413c0c <__flatcc_fb_gen_c_json_parser@@Base+0x460c>
  413a1f:	mov    r10,rdi
  413a22:	and    r10,0xfffffffffffffff0
  413a26:	mov    rdx,rdi
  413a29:	sub    rdx,r10
  413a2c:	vmovq  xmm0,rdi
  413a31:	vpbroadcastq ymm0,xmm0
  413a36:	vpaddq ymm1,ymm0,YMMWORD PTR [rip+0x2d2a2]        # 440ce0 <_IO_stdin_used@@Base+0x13ce0>
  413a3e:	vpxor  xmm0,xmm0,xmm0
  413a42:	vpcmpeqd ymm14,ymm14,ymm14
  413a47:	vmovdqa xmm3,XMMWORD PTR [rip+0x2d391]        # 440de0 <_IO_stdin_used@@Base+0x13de0>
  413a4f:	vpbroadcastq ymm15,QWORD PTR [rip+0x2d2e0]        # 440d38 <_IO_stdin_used@@Base+0x13d38>
  413a58:	vpbroadcastq ymm5,QWORD PTR [rip+0x2d2df]        # 440d40 <_IO_stdin_used@@Base+0x13d40>
  413a61:	vpbroadcastq ymm6,QWORD PTR [rip+0x2d2de]        # 440d48 <_IO_stdin_used@@Base+0x13d48>
  413a6a:	vpbroadcastq ymm7,QWORD PTR [rip+0x2d2dd]        # 440d50 <_IO_stdin_used@@Base+0x13d50>
  413a73:	vpbroadcastq ymm8,QWORD PTR [rip+0x2d2dc]        # 440d58 <_IO_stdin_used@@Base+0x13d58>
  413a7c:	vpbroadcastq ymm9,QWORD PTR [rip+0x2d2db]        # 440d60 <_IO_stdin_used@@Base+0x13d60>
  413a85:	mov    rax,r10
  413a88:	vpxor  xmm10,xmm10,xmm10
  413a8d:	vpxor  xmm11,xmm11,xmm11
  413a92:	vpxor  xmm12,xmm12,xmm12
  413a97:	nop    WORD PTR [rax+rax*1+0x0]
  413aa0:	vpaddq ymm13,ymm1,ymm14
  413aa5:	vmovq  rsi,xmm13
  413aaa:	vmovd  xmm2,DWORD PTR [r12+rsi*1-0x3]
  413ab1:	vmovd  xmm4,DWORD PTR [r12+rsi*1-0x7]
  413ab8:	vpshufb xmm2,xmm2,xmm3
  413abd:	vpmovsxbq ymm2,xmm2
  413ac2:	vpshufb xmm4,xmm4,xmm3
  413ac7:	vpmovsxbq ymm4,xmm4
  413acc:	vpsllq ymm13,ymm13,0x3
  413ad2:	vpsubq ymm13,ymm15,ymm13
  413ad7:	vpand  ymm13,ymm13,ymm8
  413adc:	vpsllvq ymm2,ymm2,ymm13
  413ae1:	vpsllq ymm13,ymm1,0x3
  413ae6:	vpor   ymm0,ymm2,ymm0
  413aea:	vpsubq ymm2,ymm5,ymm13
  413aef:	vpand  ymm2,ymm2,ymm8
  413af4:	vpsllvq ymm2,ymm4,ymm2
  413af9:	vmovd  xmm4,DWORD PTR [r12+rsi*1-0xb]
  413b00:	vpshufb xmm4,xmm4,xmm3
  413b05:	vpmovsxbq ymm4,xmm4
  413b0a:	vpor   ymm10,ymm2,ymm10
  413b0f:	vpsubq ymm2,ymm6,ymm13
  413b14:	vpand  ymm2,ymm2,ymm8
  413b19:	vpsllvq ymm2,ymm4,ymm2
  413b1e:	vpor   ymm11,ymm2,ymm11
  413b23:	vmovd  xmm2,DWORD PTR [r12+rsi*1-0xf]
  413b2a:	vpshufb xmm2,xmm2,xmm3
  413b2f:	vpmovsxbq ymm2,xmm2
  413b34:	vpsubq ymm4,ymm7,ymm13
  413b39:	vpand  ymm4,ymm4,ymm8
  413b3e:	vpsllvq ymm2,ymm2,ymm4
  413b43:	vpor   ymm12,ymm2,ymm12
  413b48:	vpaddq ymm1,ymm1,ymm9
  413b4d:	add    rax,0xfffffffffffffff0
  413b51:	jne    413aa0 <__flatcc_fb_gen_c_json_parser@@Base+0x44a0>
  413b57:	vpor   ymm0,ymm10,ymm0
  413b5b:	vpor   ymm0,ymm11,ymm0
  413b5f:	vpor   ymm0,ymm12,ymm0
  413b63:	vextracti128 xmm1,ymm0,0x1
  413b69:	vpor   xmm0,xmm0,xmm1
  413b6d:	vpshufd xmm1,xmm0,0x4e
  413b72:	vpor   xmm0,xmm0,xmm1
  413b76:	vmovq  rax,xmm0
  413b7b:	cmp    r10,rdi
  413b7e:	je     413bbc <__flatcc_fb_gen_c_json_parser@@Base+0x45bc>
  413b80:	lea    rsi,[rdx*8+0x0]
  413b88:	mov    ebx,0x40
  413b8d:	sub    rbx,rsi
  413b90:	lea    rsi,[r9+r8*1]
  413b94:	add    rsi,0xffffffffffffffff
  413b98:	nop    DWORD PTR [rax+rax*1+0x0]
  413ba0:	movsx  rbp,BYTE PTR [rsi+rdx*1]
  413ba5:	mov    edi,ebx
  413ba7:	and    dil,0xf8
  413bab:	shlx   rdi,rbp,rdi
  413bb0:	or     rax,rdi
  413bb3:	add    rbx,0x8
  413bb7:	dec    rdx
  413bba:	jne    413ba0 <__flatcc_fb_gen_c_json_parser@@Base+0x45a0>
  413bbc:	cmp    r11d,0x8
  413bc0:	jl     413bf0 <__flatcc_fb_gen_c_json_parser@@Base+0x45f0>
  413bc2:	lea    rsi,[rip+0x2e1e5]        # 441dae <_IO_stdin_used@@Base+0x14dae>
  413bc9:	mov    rdi,r14
  413bcc:	mov    rdx,rax
  413bcf:	mov    r8,r12
  413bd2:	xor    eax,eax
  413bd4:	vzeroupper 
  413bd7:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413bdc:	mov    eax,0x8
  413be1:	mov    QWORD PTR [rsp+0x10],rax
  413be6:	mov    ebx,DWORD PTR [rsp+0x20]
  413bea:	mov    ebp,DWORD PTR [rsp+0x1c]
  413bee:	jmp    413c2b <__flatcc_fb_gen_c_json_parser@@Base+0x462b>
  413bf0:	shl    ecx,0x3
  413bf3:	neg    cl
  413bf5:	mov    rdx,0xffffffffffffffff
  413bfc:	shlx   rdx,rdx,rcx
  413c01:	mov    r8d,r11d
  413c04:	mov    ebx,DWORD PTR [rsp+0x20]
  413c08:	mov    ebp,DWORD PTR [rsp+0x1c]
  413c0c:	lea    rsi,[rip+0x2e1ba]        # 441dcd <_IO_stdin_used@@Base+0x14dcd>
  413c13:	mov    rdi,r14
  413c16:	mov    rcx,rax
  413c19:	mov    QWORD PTR [rsp+0x10],r8
  413c1e:	mov    r9,r12
  413c21:	xor    eax,eax
  413c23:	vzeroupper 
  413c26:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413c2b:	inc    DWORD PTR [r14+0xf0]
  413c32:	add    r13d,0x2
  413c36:	cmp    r13d,0x2
  413c3a:	ja     413c82 <__flatcc_fb_gen_c_json_parser@@Base+0x4682>
  413c3c:	mov    rbx,QWORD PTR [rsp+0x30]
  413c41:	mov    rax,QWORD PTR [rbx]
  413c44:	mov    rsi,QWORD PTR [rbx+0x18]
  413c48:	mov    rcx,QWORD PTR [rsp+0x28]
  413c4d:	mov    rdx,QWORD PTR [rax+rcx*1+0x10]
  413c52:	mov    ecx,DWORD PTR [rax+rcx*1+0x18]
  413c56:	mov    rdi,r14
  413c59:	mov    r8,QWORD PTR [rsp+0x10]
  413c5e:	call   QWORD PTR [rbx+0x8]
  413c61:	mov    ebp,DWORD PTR [rsp+0xc]
  413c65:	test   ebp,ebp
  413c67:	jle    413cee <__flatcc_fb_gen_c_json_parser@@Base+0x46ee>
  413c6d:	lea    rsi,[rip+0x2e182]        # 441df6 <_IO_stdin_used@@Base+0x14df6>
  413c74:	mov    rdi,r14
  413c77:	mov    edx,ebp
  413c79:	xor    eax,eax
  413c7b:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413c80:	jmp    413cf4 <__flatcc_fb_gen_c_json_parser@@Base+0x46f4>
  413c82:	mov    r13d,ebx
  413c85:	cmp    r15d,ebp
  413c88:	mov    rbx,QWORD PTR [rsp+0x30]
  413c8d:	jne    413cd1 <__flatcc_fb_gen_c_json_parser@@Base+0x46d1>
  413c8f:	mov    rax,QWORD PTR [rbx]
  413c92:	mov    rsi,QWORD PTR [rbx+0x18]
  413c96:	mov    rcx,QWORD PTR [rsp+0x28]
  413c9b:	mov    rdx,QWORD PTR [rax+rcx*1+0x10]
  413ca0:	mov    ecx,DWORD PTR [rax+rcx*1+0x18]
  413ca4:	mov    rdi,r14
  413ca7:	mov    r8,QWORD PTR [rsp+0x10]
  413cac:	call   QWORD PTR [rbx+0x8]
  413caf:	mov    edx,DWORD PTR [rsp+0xc]
  413cb3:	test   edx,edx
  413cb5:	jle    413d7c <__flatcc_fb_gen_c_json_parser@@Base+0x477c>
  413cbb:	lea    rsi,[rip+0x2e134]        # 441df6 <_IO_stdin_used@@Base+0x14df6>
  413cc2:	mov    rdi,r14
  413cc5:	xor    eax,eax
  413cc7:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413ccc:	jmp    413d82 <__flatcc_fb_gen_c_json_parser@@Base+0x4782>
  413cd1:	mov    rdi,r14
  413cd4:	mov    rsi,rbx
  413cd7:	mov    edx,r15d
  413cda:	mov    ecx,ebp
  413cdc:	mov    r8d,r13d
  413cdf:	mov    r9d,DWORD PTR [rsp+0xc]
  413ce4:	call   413970 <__flatcc_fb_gen_c_json_parser@@Base+0x4370>
  413ce9:	jmp    413dab <__flatcc_fb_gen_c_json_parser@@Base+0x47ab>
  413cee:	mov    rdi,r14
  413cf1:	call   QWORD PTR [rbx+0x10]
  413cf4:	mov    eax,DWORD PTR [r14+0xf0]
  413cfb:	test   eax,eax
  413cfd:	je     413e5a <__flatcc_fb_gen_c_json_parser@@Base+0x485a>
  413d03:	dec    eax
  413d05:	mov    DWORD PTR [r14+0xf0],eax
  413d0c:	lea    rsi,[rip+0x1cbb5]        # 4308c8 <_IO_stdin_used@@Base+0x38c8>
  413d13:	mov    rdi,r14
  413d16:	xor    eax,eax
  413d18:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413d1d:	mov    eax,DWORD PTR [r14+0xf0]
  413d24:	test   eax,eax
  413d26:	je     413e79 <__flatcc_fb_gen_c_json_parser@@Base+0x4879>
  413d2c:	dec    eax
  413d2e:	mov    DWORD PTR [r14+0xf0],eax
  413d35:	lea    rsi,[rip+0x2e10c]        # 441e48 <_IO_stdin_used@@Base+0x14e48>
  413d3c:	mov    rdi,r14
  413d3f:	mov    rdx,QWORD PTR [rsp+0x10]
  413d44:	mov    rcx,r12
  413d47:	xor    eax,eax
  413d49:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413d4e:	inc    DWORD PTR [r14+0xf0]
  413d55:	test   ebp,ebp
  413d57:	jle    413d71 <__flatcc_fb_gen_c_json_parser@@Base+0x4771>
  413d59:	lea    rsi,[rip+0x2e096]        # 441df6 <_IO_stdin_used@@Base+0x14df6>
  413d60:	mov    rdi,r14
  413d63:	mov    edx,ebp
  413d65:	xor    eax,eax
  413d67:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413d6c:	jmp    413e00 <__flatcc_fb_gen_c_json_parser@@Base+0x4800>
  413d71:	mov    rdi,r14
  413d74:	call   QWORD PTR [rbx+0x10]
  413d77:	jmp    413e00 <__flatcc_fb_gen_c_json_parser@@Base+0x4800>
  413d7c:	mov    rdi,r14
  413d7f:	call   QWORD PTR [rbx+0x10]
  413d82:	mov    eax,DWORD PTR [r14+0xf0]
  413d89:	test   eax,eax
  413d8b:	je     413eb7 <__flatcc_fb_gen_c_json_parser@@Base+0x48b7>
  413d91:	dec    eax
  413d93:	mov    DWORD PTR [r14+0xf0],eax
  413d9a:	lea    rsi,[rip+0x1cb27]        # 4308c8 <_IO_stdin_used@@Base+0x38c8>
  413da1:	mov    rdi,r14
  413da4:	xor    eax,eax
  413da6:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413dab:	mov    eax,DWORD PTR [r14+0xf0]
  413db2:	test   eax,eax
  413db4:	mov    rdx,QWORD PTR [rsp+0x10]
  413db9:	je     413e98 <__flatcc_fb_gen_c_json_parser@@Base+0x4898>
  413dbf:	dec    eax
  413dc1:	mov    DWORD PTR [r14+0xf0],eax
  413dc8:	lea    rsi,[rip+0x2e079]        # 441e48 <_IO_stdin_used@@Base+0x14e48>
  413dcf:	mov    rdi,r14
  413dd2:	mov    rcx,r12
  413dd5:	xor    eax,eax
  413dd7:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413ddc:	inc    DWORD PTR [r14+0xf0]
  413de3:	dec    r15d
  413de6:	mov    rdi,r14
  413de9:	mov    rsi,rbx
  413dec:	mov    edx,DWORD PTR [rsp+0x24]
  413df0:	mov    ecx,r15d
  413df3:	mov    r8d,r13d
  413df6:	mov    r9d,DWORD PTR [rsp+0xc]
  413dfb:	call   413970 <__flatcc_fb_gen_c_json_parser@@Base+0x4370>
  413e00:	mov    eax,DWORD PTR [r14+0xf0]
  413e07:	test   eax,eax
  413e09:	je     413e3b <__flatcc_fb_gen_c_json_parser@@Base+0x483b>
  413e0b:	dec    eax
  413e0d:	mov    DWORD PTR [r14+0xf0],eax
  413e14:	lea    rsi,[rip+0x2e043]        # 441e5e <_IO_stdin_used@@Base+0x14e5e>
  413e1b:	mov    rdi,r14
  413e1e:	mov    rdx,QWORD PTR [rsp+0x10]
  413e23:	mov    rcx,r12
  413e26:	xor    eax,eax
  413e28:	add    rsp,0x38
  413e2c:	pop    rbx
  413e2d:	pop    r12
  413e2f:	pop    r13
  413e31:	pop    r14
  413e33:	pop    r15
  413e35:	pop    rbp
  413e36:	jmp    411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413e3b:	lea    rdi,[rip+0x2d24f]        # 441091 <_IO_stdin_used@@Base+0x14091>
  413e42:	lea    rsi,[rip+0x2d254]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  413e49:	lea    rcx,[rip+0x2dfb6]        # 441e06 <_IO_stdin_used@@Base+0x14e06>
  413e50:	mov    edx,0x38e
  413e55:	call   4060f0 <__assert_fail@plt>
  413e5a:	lea    rdi,[rip+0x2d230]        # 441091 <_IO_stdin_used@@Base+0x14091>
  413e61:	lea    rsi,[rip+0x2d235]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  413e68:	lea    rcx,[rip+0x2df97]        # 441e06 <_IO_stdin_used@@Base+0x14e06>
  413e6f:	mov    edx,0x378
  413e74:	call   4060f0 <__assert_fail@plt>
  413e79:	lea    rdi,[rip+0x2d211]        # 441091 <_IO_stdin_used@@Base+0x14091>
  413e80:	lea    rsi,[rip+0x2d216]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  413e87:	lea    rcx,[rip+0x2df78]        # 441e06 <_IO_stdin_used@@Base+0x14e06>
  413e8e:	mov    edx,0x379
  413e93:	call   4060f0 <__assert_fail@plt>
  413e98:	lea    rdi,[rip+0x2d1f2]        # 441091 <_IO_stdin_used@@Base+0x14091>
  413e9f:	lea    rsi,[rip+0x2d1f7]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  413ea6:	lea    rcx,[rip+0x2df59]        # 441e06 <_IO_stdin_used@@Base+0x14e06>
  413ead:	mov    edx,0x38b
  413eb2:	call   4060f0 <__assert_fail@plt>
  413eb7:	lea    rdi,[rip+0x2d1d3]        # 441091 <_IO_stdin_used@@Base+0x14091>
  413ebe:	lea    rsi,[rip+0x2d1d8]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  413ec5:	lea    rcx,[rip+0x2df3a]        # 441e06 <_IO_stdin_used@@Base+0x14e06>
  413ecc:	mov    edx,0x387
  413ed1:	call   4060f0 <__assert_fail@plt>
  413ed6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  413ee0:	push   rbp
  413ee1:	mov    rbp,rsp
  413ee4:	push   r15
  413ee6:	push   r14
  413ee8:	push   r13
  413eea:	push   r12
  413eec:	push   rbx
  413eed:	and    rsp,0xffffffffffffffe0
  413ef1:	sub    rsp,0x240
  413ef8:	mov    DWORD PTR [rsp+0x2c],ecx
  413efc:	mov    r13,rdx
  413eff:	mov    rbx,rsi
  413f02:	mov    r15,rdi
  413f05:	lea    rsi,[rip+0x2e166]        # 442072 <_IO_stdin_used@@Base+0x15072>
  413f0c:	mov    edx,r8d
  413f0f:	xor    eax,eax
  413f11:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413f16:	lea    rsi,[rip+0x2e198]        # 4420b5 <_IO_stdin_used@@Base+0x150b5>
  413f1d:	mov    rdi,r15
  413f20:	xor    eax,eax
  413f22:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  413f27:	inc    DWORD PTR [r15+0xf0]
  413f2e:	vxorps xmm0,xmm0,xmm0
  413f32:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  413f38:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  413f41:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  413f4a:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  413f53:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  413f5c:	vmovaps YMMWORD PTR [rsp+0x100],ymm0
  413f65:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  413f6e:	mov    QWORD PTR [rsp+0x140],0x0
  413f7a:	mov    rdi,QWORD PTR [rbx+0x18]
  413f7e:	lea    rsi,[rsp+0x150]
  413f86:	vzeroupper 
  413f89:	call   4073a0 <__flatcc_fb_copy_scope@@Base>
  413f8e:	movzx  eax,WORD PTR [rbx+0x10]
  413f92:	mov    WORD PTR [rsp+0x2a],ax
  413f97:	movzx  eax,WORD PTR [r13+0x28]
  413f9c:	mov    r12d,0x0
  413fa2:	cmp    ax,0xf
  413fa6:	ja     413fbe <__flatcc_fb_gen_c_json_parser@@Base+0x49be>
  413fa8:	mov    ecx,0x8280
  413fad:	bt     ecx,eax
  413fb0:	mov    r12d,0x0
  413fb6:	jae    413fbe <__flatcc_fb_gen_c_json_parser@@Base+0x49be>
  413fb8:	mov    r12d,0x1
  413fbe:	add    eax,0xfffffff9
  413fc1:	cmp    ax,0x8
  413fc5:	ja     41414d <__flatcc_fb_gen_c_json_parser@@Base+0x4b4d>
  413fcb:	movzx  eax,ax
  413fce:	lea    rcx,[rip+0x2cdbb]        # 440d90 <_IO_stdin_used@@Base+0x13d90>
  413fd5:	movsxd rsi,DWORD PTR [rcx+rax*4]
  413fd9:	add    rsi,rcx
  413fdc:	xor    edx,edx
  413fde:	xor    ecx,ecx
  413fe0:	xor    r8d,r8d
  413fe3:	mov    DWORD PTR [rsp+0x10],0x0
  413feb:	mov    DWORD PTR [rsp+0x20],0x0
  413ff3:	xor    r9d,r9d
  413ff6:	mov    DWORD PTR [rsp+0xc],0x0
  413ffe:	mov    DWORD PTR [rsp+0x14],0x0
  414006:	mov    DWORD PTR [rsp+0x1c],0x0
  41400e:	xor    edi,edi
  414010:	xor    r14d,r14d
  414013:	xor    eax,eax
  414015:	mov    QWORD PTR [rsp+0x30],rax
  41401a:	xor    ebx,ebx
  41401c:	jmp    rsi
  41401e:	mov    DWORD PTR [rsp+0x10],0x1
  414026:	mov    DWORD PTR [rsp+0x20],0x0
  41402e:	xor    r9d,r9d
  414031:	mov    DWORD PTR [rsp+0xc],0x0
  414039:	mov    DWORD PTR [rsp+0x14],0x0
  414041:	mov    DWORD PTR [rsp+0x1c],0x0
  414049:	xor    edi,edi
  41404b:	xor    r14d,r14d
  41404e:	xor    eax,eax
  414050:	mov    QWORD PTR [rsp+0x30],rax
  414055:	jmp    414186 <__flatcc_fb_gen_c_json_parser@@Base+0x4b86>
  41405a:	mov    rsi,QWORD PTR [r13+0x18]
  41405e:	mov    rdi,QWORD PTR [rsi+0x18]
  414062:	lea    rdx,[rsp+0x60]
  414067:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  41406c:	mov    rax,QWORD PTR [r13+0x18]
  414070:	movzx  ecx,WORD PTR [rax+0x10]
  414074:	xor    edx,edx
  414076:	cmp    cx,0x1
  41407a:	sete   dl
  41407d:	mov    DWORD PTR [rsp+0x14],edx
  414081:	xor    edx,edx
  414083:	test   cx,cx
  414086:	sete   dl
  414089:	mov    DWORD PTR [rsp+0xc],edx
  41408d:	cmp    cx,0x4
  414091:	sete   dl
  414094:	cmp    DWORD PTR [rsp+0x2c],0x0
  414099:	sete   bl
  41409c:	and    bl,dl
  41409e:	movzx  edx,bl
  4140a1:	mov    DWORD PTR [rsp+0x1c],edx
  4140a5:	cmp    cx,0x3
  4140a9:	jne    4140d3 <__flatcc_fb_gen_c_json_parser@@Base+0x4ad3>
  4140ab:	mov    eax,DWORD PTR [rax+0x48]
  4140ae:	mov    QWORD PTR [rsp+0x30],rax
  4140b3:	mov    DWORD PTR [rsp+0x20],0x1
  4140bb:	mov    DWORD PTR [rsp+0x10],0x0
  4140c3:	mov    r9d,0x1
  4140c9:	xor    edi,edi
  4140cb:	xor    r14d,r14d
  4140ce:	jmp    414184 <__flatcc_fb_gen_c_json_parser@@Base+0x4b84>
  4140d3:	mov    DWORD PTR [rsp+0x10],0x0
  4140db:	mov    DWORD PTR [rsp+0x20],0x0
  4140e3:	xor    r9d,r9d
  4140e6:	jmp    414178 <__flatcc_fb_gen_c_json_parser@@Base+0x4b78>
  4140eb:	xor    r8d,r8d
  4140ee:	cmp    QWORD PTR [r13+0x90],0x0
  4140f6:	setne  r8b
  4140fa:	movzx  ecx,WORD PTR [r13+0x70]
  4140ff:	mov    edx,ecx
  414101:	and    edx,0x400
  414107:	and    ecx,0x800
  41410d:	mov    esi,DWORD PTR [r13+0x18]
  414111:	mov    QWORD PTR [rsp+0x30],rsi
  414116:	mov    r9d,0x1
  41411c:	mov    DWORD PTR [rsp+0x10],0x0
  414124:	mov    DWORD PTR [rsp+0x20],0x0
  41412c:	mov    DWORD PTR [rsp+0xc],0x0
  414134:	mov    DWORD PTR [rsp+0x14],0x0
  41413c:	mov    DWORD PTR [rsp+0x1c],0x0
  414144:	mov    ebx,edx
  414146:	mov    edi,ecx
  414148:	mov    r14d,r8d
  41414b:	jmp    414186 <__flatcc_fb_gen_c_json_parser@@Base+0x4b86>
  41414d:	mov    DWORD PTR [rsp+0x10],0x0
  414155:	mov    DWORD PTR [rsp+0x20],0x0
  41415d:	xor    r9d,r9d
  414160:	mov    DWORD PTR [rsp+0xc],0x0
  414168:	mov    DWORD PTR [rsp+0x14],0x0
  414170:	mov    DWORD PTR [rsp+0x1c],0x0
  414178:	xor    edi,edi
  41417a:	xor    r14d,r14d
  41417d:	xor    eax,eax
  41417f:	mov    QWORD PTR [rsp+0x30],rax
  414184:	xor    ebx,ebx
  414186:	or     edi,ebx
  414188:	mov    DWORD PTR [rsp+0x38],edi
  41418c:	je     4141b1 <__flatcc_fb_gen_c_json_parser@@Base+0x4bb1>
  41418e:	test   r12d,r12d
  414191:	je     414cab <__flatcc_fb_gen_c_json_parser@@Base+0x56ab>
  414197:	xor    r12d,r12d
  41419a:	mov    r9d,0x0
  4141a0:	mov    r14d,0x0
  4141a6:	cmp    DWORD PTR [rsp+0x30],0x4
  4141ab:	jne    414cab <__flatcc_fb_gen_c_json_parser@@Base+0x56ab>
  4141b1:	xor    eax,eax
  4141b3:	cmp    DWORD PTR [rsp+0x2c],0x0
  4141b8:	setne  cl
  4141bb:	cmovne r9d,eax
  4141bf:	mov    DWORD PTR [rsp+0x3c],r9d
  4141c4:	test   r12d,r12d
  4141c7:	setne  dl
  4141ca:	and    dl,cl
  4141cc:	mov    BYTE PTR [rsp+0x1a],dl
  4141d0:	cmovne r12d,eax
  4141d4:	test   r12d,r12d
  4141d7:	setne  cl
  4141da:	cmp    DWORD PTR [rsp+0x1c],0x0
  4141df:	setne  dl
  4141e2:	and    dl,cl
  4141e4:	mov    BYTE PTR [rsp+0x1b],dl
  4141e8:	cmovne r12d,eax
  4141ec:	mov    DWORD PTR [rsp+0x24],r12d
  4141f1:	test   r14d,r14d
  4141f4:	je     41420e <__flatcc_fb_gen_c_json_parser@@Base+0x4c0e>
  4141f6:	lea    rsi,[rip+0x2dfa4]        # 4421a1 <_IO_stdin_used@@Base+0x151a1>
  4141fd:	mov    rdi,r15
  414200:	xor    eax,eax
  414202:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414207:	inc    DWORD PTR [r15+0xf0]
  41420e:	cmp    DWORD PTR [rsp+0x2c],0x0
  414213:	sete   BYTE PTR [rsp+0xb]
  414218:	xor    eax,eax
  41421a:	test   ebx,ebx
  41421c:	sete   al
  41421f:	mov    DWORD PTR [rsp+0x58],eax
  414223:	lea    rax,[rip+0x2deea]        # 442114 <_IO_stdin_used@@Base+0x15114>
  41422a:	mov    QWORD PTR [rsp+0x40],rax
  41422f:	mov    QWORD PTR [rsp+0x50],rax
  414234:	mov    QWORD PTR [rsp+0x48],r13
  414239:	jmp    41425c <__flatcc_fb_gen_c_json_parser@@Base+0x4c5c>
  41423b:	lea    rsi,[rip+0x2e7f1]        # 442a33 <_IO_stdin_used@@Base+0x15a33>
  414242:	xor    eax,eax
  414244:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414249:	mov    r14d,0x2
  41424f:	mov    ebx,DWORD PTR [rsp+0x5c]
  414253:	cmp    ebx,0x1
  414256:	jne    414a46 <__flatcc_fb_gen_c_json_parser@@Base+0x5446>
  41425c:	cmp    r14d,0x2
  414260:	mov    DWORD PTR [rsp+0x5c],r14d
  414265:	jne    414360 <__flatcc_fb_gen_c_json_parser@@Base+0x4d60>
  41426b:	mov    eax,DWORD PTR [r15+0xf0]
  414272:	test   eax,eax
  414274:	je     414b16 <__flatcc_fb_gen_c_json_parser@@Base+0x5516>
  41427a:	dec    eax
  41427c:	mov    DWORD PTR [r15+0xf0],eax
  414283:	mov    DWORD PTR [rsp+0x4],0x0
  41428b:	mov    rdi,r15
  41428e:	lea    rsi,[rip+0x2df40]        # 4421d5 <_IO_stdin_used@@Base+0x151d5>
  414295:	xor    eax,eax
  414297:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41429c:	inc    DWORD PTR [r15+0xf0]
  4142a3:	mov    rsi,QWORD PTR [r13+0x90]
  4142aa:	mov    rdi,QWORD PTR [rsi+0x18]
  4142ae:	lea    rdx,[rsp+0x60]
  4142b3:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  4142b8:	mov    rax,QWORD PTR [r13+0x90]
  4142bf:	cmp    WORD PTR [rax+0x10],0x0
  4142c4:	mov    eax,DWORD PTR [rsp+0xc]
  4142c8:	mov    ecx,0x1
  4142cd:	cmove  eax,ecx
  4142d0:	mov    DWORD PTR [rsp+0xc],eax
  4142d4:	mov    ebx,DWORD PTR [rsp+0x14]
  4142d8:	cmovne ebx,ecx
  4142db:	mov    rdi,r15
  4142de:	lea    rsi,[rip+0x2df06]        # 4421eb <_IO_stdin_used@@Base+0x151eb>
  4142e5:	xor    eax,eax
  4142e7:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4142ec:	mov    DWORD PTR [rsp+0x14],ebx
  4142f0:	test   ebx,ebx
  4142f2:	sete   r14b
  4142f6:	mov    r12d,r14d
  4142f9:	and    r12b,BYTE PTR [rsp+0xb]
  4142fe:	xor    ebx,ebx
  414300:	mov    DWORD PTR [rsp+0x3c],0x0
  414308:	xor    r13d,r13d
  41430b:	cmp    WORD PTR [rsp+0x2a],0x1
  414311:	je     414610 <__flatcc_fb_gen_c_json_parser@@Base+0x5010>
  414317:	mov    eax,DWORD PTR [rsp+0x4]
  41431b:	or     al,r14b
  41431e:	jne    41462a <__flatcc_fb_gen_c_json_parser@@Base+0x502a>
  414324:	mov    rax,QWORD PTR [rsp+0x48]
  414329:	mov    rcx,QWORD PTR [rax+0x80]
  414330:	mov    rdx,QWORD PTR [rax+0x88]
  414337:	movzx  r8d,WORD PTR [rax+0x72]
  41433c:	mov    rdi,r15
  41433f:	lea    rsi,[rip+0x2e0c6]        # 44240c <_IO_stdin_used@@Base+0x1540c>
  414346:	xor    eax,eax
  414348:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41434d:	jmp    41462a <__flatcc_fb_gen_c_json_parser@@Base+0x502a>
  414352:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41435c:	nop    DWORD PTR [rax+0x0]
  414360:	mov    eax,DWORD PTR [rsp+0x14]
  414364:	test   eax,eax
  414366:	sete   r14b
  41436a:	mov    ecx,DWORD PTR [rsp+0x3c]
  41436e:	or     eax,ecx
  414370:	sete   r12b
  414374:	test   ecx,ecx
  414376:	je     4143d3 <__flatcc_fb_gen_c_json_parser@@Base+0x4dd3>
  414378:	mov    rax,QWORD PTR [rsp+0x30]
  41437d:	dec    eax
  41437f:	cmp    eax,0xa
  414382:	ja     414b92 <__flatcc_fb_gen_c_json_parser@@Base+0x5592>
  414388:	mov    bl,0x1
  41438a:	lea    rcx,[rip+0x2ca23]        # 440db4 <_IO_stdin_used@@Base+0x13db4>
  414391:	movsxd rdx,DWORD PTR [rcx+rax*4]
  414395:	add    rdx,rcx
  414398:	lea    rax,[rip+0x211c6]        # 435565 <_IO_stdin_used@@Base+0x8565>
  41439f:	lea    rcx,[rip+0x20812]        # 434bb8 <_IO_stdin_used@@Base+0x7bb8>
  4143a6:	lea    rsi,[rip+0x3287b]        # 446c28 <fb_schema_table_deleted@@Base+0x14e0>
  4143ad:	mov    QWORD PTR [rsp+0x40],rsi
  4143b2:	lea    rsi,[rip+0x20811]        # 434bca <_IO_stdin_used@@Base+0x7bca>
  4143b9:	mov    QWORD PTR [rsp+0x50],rsi
  4143be:	jmp    rdx
  4143c0:	lea    rax,[rip+0x21197]        # 43555e <_IO_stdin_used@@Base+0x855e>
  4143c7:	lea    rcx,[rip+0x207e1]        # 434baf <_IO_stdin_used@@Base+0x7baf>
  4143ce:	jmp    414450 <__flatcc_fb_gen_c_json_parser@@Base+0x4e50>
  4143d3:	xor    ebx,ebx
  4143d5:	jmp    41445a <__flatcc_fb_gen_c_json_parser@@Base+0x4e5a>
  4143da:	lea    rax,[rip+0x21192]        # 435573 <_IO_stdin_used@@Base+0x8573>
  4143e1:	lea    rcx,[rip+0x207e2]        # 434bca <_IO_stdin_used@@Base+0x7bca>
  4143e8:	jmp    414450 <__flatcc_fb_gen_c_json_parser@@Base+0x4e50>
  4143ea:	lea    rcx,[rip+0x207ee]        # 434bdf <_IO_stdin_used@@Base+0x7bdf>
  4143f1:	jmp    41444a <__flatcc_fb_gen_c_json_parser@@Base+0x4e4a>
  4143f3:	lea    rax,[rip+0x21172]        # 43556c <_IO_stdin_used@@Base+0x856c>
  4143fa:	lea    rcx,[rip+0x207c0]        # 434bc1 <_IO_stdin_used@@Base+0x7bc1>
  414401:	jmp    414450 <__flatcc_fb_gen_c_json_parser@@Base+0x4e50>
  414403:	lea    rax,[rip+0x21163]        # 43556d <_IO_stdin_used@@Base+0x856d>
  41440a:	lea    rcx,[rip+0x207b1]        # 434bc2 <_IO_stdin_used@@Base+0x7bc2>
  414411:	jmp    414450 <__flatcc_fb_gen_c_json_parser@@Base+0x4e50>
  414413:	lea    rax,[rip+0x21145]        # 43555f <_IO_stdin_used@@Base+0x855f>
  41441a:	lea    rcx,[rip+0x2078f]        # 434bb0 <_IO_stdin_used@@Base+0x7bb0>
  414421:	jmp    414450 <__flatcc_fb_gen_c_json_parser@@Base+0x4e50>
  414423:	lea    rax,[rip+0x2113c]        # 435566 <_IO_stdin_used@@Base+0x8566>
  41442a:	lea    rcx,[rip+0x20788]        # 434bb9 <_IO_stdin_used@@Base+0x7bb9>
  414431:	jmp    414450 <__flatcc_fb_gen_c_json_parser@@Base+0x4e50>
  414433:	lea    rax,[rip+0x2113a]        # 435574 <_IO_stdin_used@@Base+0x8574>
  41443a:	lea    rcx,[rip+0x2078a]        # 434bcb <_IO_stdin_used@@Base+0x7bcb>
  414441:	jmp    414450 <__flatcc_fb_gen_c_json_parser@@Base+0x4e50>
  414443:	lea    rcx,[rip+0x2078f]        # 434bd9 <_IO_stdin_used@@Base+0x7bd9>
  41444a:	mov    rax,rcx
  41444d:	nop    DWORD PTR [rax]
  414450:	mov    QWORD PTR [rsp+0x40],rax
  414455:	mov    QWORD PTR [rsp+0x50],rcx
  41445a:	and    r12b,BYTE PTR [rsp+0xb]
  41445f:	cmp    DWORD PTR [rsp+0x24],0x0
  414464:	je     41447e <__flatcc_fb_gen_c_json_parser@@Base+0x4e7e>
  414466:	test   r12b,r12b
  414469:	je     4144a1 <__flatcc_fb_gen_c_json_parser@@Base+0x4ea1>
  41446b:	mov    rdi,r15
  41446e:	lea    rsi,[rip+0x2ddb7]        # 44222c <_IO_stdin_used@@Base+0x1522c>
  414475:	xor    eax,eax
  414477:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41447c:	jmp    4144e9 <__flatcc_fb_gen_c_json_parser@@Base+0x4ee9>
  41447e:	mov    DWORD PTR [rsp+0x4],0x0
  414486:	test   bl,bl
  414488:	mov    ebx,DWORD PTR [rsp+0x24]
  41448c:	jne    414527 <__flatcc_fb_gen_c_json_parser@@Base+0x4f27>
  414492:	mov    DWORD PTR [rsp+0x4],0x0
  41449a:	xor    ebx,ebx
  41449c:	jmp    414308 <__flatcc_fb_gen_c_json_parser@@Base+0x4d08>
  4144a1:	mov    r8,QWORD PTR [r13+0x80]
  4144a8:	movsx  ecx,WORD PTR [r13+0x72]
  4144ad:	test   r8,r8
  4144b0:	mov    rsi,r8
  4144b3:	mov    eax,0x1
  4144b8:	cmove  rsi,rax
  4144bc:	mov    rax,rsi
  4144bf:	shr    rax,0x20
  4144c3:	jne    4144d0 <__flatcc_fb_gen_c_json_parser@@Base+0x4ed0>
  4144c5:	mov    eax,0xffffffff
  4144ca:	xor    edx,edx
  4144cc:	div    esi
  4144ce:	jmp    4144d2 <__flatcc_fb_gen_c_json_parser@@Base+0x4ed2>
  4144d0:	xor    eax,eax
  4144d2:	mov    rdi,r15
  4144d5:	lea    rsi,[rip+0x2dd8f]        # 44226b <_IO_stdin_used@@Base+0x1526b>
  4144dc:	mov    rdx,r8
  4144df:	mov    r8,rax
  4144e2:	xor    eax,eax
  4144e4:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4144e9:	xor    r13d,r13d
  4144ec:	mov    rdi,r15
  4144ef:	lea    rsi,[rip+0x2ddc6]        # 4422bc <_IO_stdin_used@@Base+0x152bc>
  4144f6:	xor    eax,eax
  4144f8:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4144fd:	mov    rdi,r15
  414500:	lea    rsi,[rip+0x2da94]        # 441f9b <_IO_stdin_used@@Base+0x14f9b>
  414507:	xor    eax,eax
  414509:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41450e:	inc    DWORD PTR [r15+0xf0]
  414515:	mov    al,0x1
  414517:	mov    DWORD PTR [rsp+0x4],eax
  41451b:	test   bl,bl
  41451d:	mov    ebx,DWORD PTR [rsp+0x24]
  414521:	je     4145e6 <__flatcc_fb_gen_c_json_parser@@Base+0x4fe6>
  414527:	mov    rdi,r15
  41452a:	lea    rsi,[rip+0x2ddc7]        # 4422f8 <_IO_stdin_used@@Base+0x152f8>
  414531:	mov    rdx,QWORD PTR [rsp+0x50]
  414536:	xor    eax,eax
  414538:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41453d:	mov    rdi,r15
  414540:	lea    rsi,[rip+0x2ddbd]        # 442304 <_IO_stdin_used@@Base+0x15304>
  414547:	xor    eax,eax
  414549:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41454e:	add    DWORD PTR [r15+0xf0],0x2
  414556:	cmp    DWORD PTR [rsp+0x20],0x0
  41455b:	je     414573 <__flatcc_fb_gen_c_json_parser@@Base+0x4f73>
  41455d:	mov    rdi,r15
  414560:	lea    rsi,[rip+0x2dde1]        # 442348 <_IO_stdin_used@@Base+0x15348>
  414567:	lea    rdx,[rsp+0x60]
  41456c:	xor    eax,eax
  41456e:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414573:	mov    rax,QWORD PTR [r15+0xd8]
  41457a:	mov    rdx,QWORD PTR [rax+0x110]
  414581:	mov    rdi,r15
  414584:	lea    rsi,[rip+0x2ddd1]        # 44235c <_IO_stdin_used@@Base+0x1535c>
  41458b:	lea    rcx,[rsp+0x150]
  414593:	xor    eax,eax
  414595:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41459a:	mov    rax,QWORD PTR [r15+0xd8]
  4145a1:	mov    rdx,QWORD PTR [rax+0x110]
  4145a8:	mov    rdi,r15
  4145ab:	lea    rsi,[rip+0x2ddc7]        # 442379 <_IO_stdin_used@@Base+0x15379>
  4145b2:	xor    eax,eax
  4145b4:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4145b9:	mov    eax,DWORD PTR [r15+0xf0]
  4145c0:	test   eax,eax
  4145c2:	je     414b35 <__flatcc_fb_gen_c_json_parser@@Base+0x5535>
  4145c8:	mov    ecx,eax
  4145ca:	dec    ecx
  4145cc:	mov    DWORD PTR [r15+0xf0],ecx
  4145d3:	je     414b35 <__flatcc_fb_gen_c_json_parser@@Base+0x5535>
  4145d9:	add    eax,0xfffffffe
  4145dc:	mov    DWORD PTR [r15+0xf0],eax
  4145e3:	mov    r13b,0x1
  4145e6:	test   ebx,ebx
  4145e8:	sete   al
  4145eb:	or     al,r12b
  4145ee:	jne    414604 <__flatcc_fb_gen_c_json_parser@@Base+0x5004>
  4145f0:	xor    r12d,r12d
  4145f3:	mov    rdi,r15
  4145f6:	lea    rsi,[rip+0x2dd9d]        # 44239a <_IO_stdin_used@@Base+0x1539a>
  4145fd:	xor    eax,eax
  4145ff:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414604:	cmp    WORD PTR [rsp+0x2a],0x1
  41460a:	jne    414317 <__flatcc_fb_gen_c_json_parser@@Base+0x4d17>
  414610:	mov    rax,QWORD PTR [rsp+0x48]
  414615:	mov    rdx,QWORD PTR [rax+0x78]
  414619:	mov    rdi,r15
  41461c:	lea    rsi,[rip+0x2ddbd]        # 4423e0 <_IO_stdin_used@@Base+0x153e0>
  414623:	xor    eax,eax
  414625:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41462a:	test   r13b,r13b
  41462d:	mov    DWORD PTR [rsp+0x24],ebx
  414631:	je     414710 <__flatcc_fb_gen_c_json_parser@@Base+0x5110>
  414637:	mov    rdi,r15
  41463a:	lea    rsi,[rip+0x2de18]        # 442459 <_IO_stdin_used@@Base+0x15459>
  414641:	mov    rbx,QWORD PTR [rsp+0x40]
  414646:	mov    rdx,rbx
  414649:	xor    eax,eax
  41464b:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414650:	mov    rdi,r15
  414653:	lea    rsi,[rip+0x2de3a]        # 442494 <_IO_stdin_used@@Base+0x15494>
  41465a:	xor    eax,eax
  41465c:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414661:	inc    DWORD PTR [r15+0xf0]
  414668:	mov    rdi,r15
  41466b:	lea    rsi,[rip+0x2de35]        # 4424a7 <_IO_stdin_used@@Base+0x154a7>
  414672:	mov    rdx,rbx
  414675:	xor    eax,eax
  414677:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41467c:	mov    rdi,r15
  41467f:	lea    rsi,[rip+0x2de77]        # 4424fd <_IO_stdin_used@@Base+0x154fd>
  414686:	xor    eax,eax
  414688:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41468d:	mov    eax,DWORD PTR [r15+0xf0]
  414694:	test   eax,eax
  414696:	mov    r13,QWORD PTR [rsp+0x48]
  41469b:	je     414b54 <__flatcc_fb_gen_c_json_parser@@Base+0x5554>
  4146a1:	cmp    WORD PTR [rsp+0x2a],0x1
  4146a7:	sete   bl
  4146aa:	dec    eax
  4146ac:	mov    DWORD PTR [r15+0xf0],eax
  4146b3:	mov    rdi,r15
  4146b6:	lea    rsi,[rip+0x1c20b]        # 4308c8 <_IO_stdin_used@@Base+0x38c8>
  4146bd:	xor    eax,eax
  4146bf:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4146c4:	or     bl,BYTE PTR [rsp+0x4]
  4146c8:	cmp    DWORD PTR [rsp+0x38],0x0
  4146cd:	jne    4147fc <__flatcc_fb_gen_c_json_parser@@Base+0x51fc>
  4146d3:	test   bl,bl
  4146d5:	jne    4147fc <__flatcc_fb_gen_c_json_parser@@Base+0x51fc>
  4146db:	mov    eax,DWORD PTR [r13+0x58]
  4146df:	lea    ecx,[rax-0x5]
  4146e2:	cmp    cx,0x2
  4146e6:	jb     414776 <__flatcc_fb_gen_c_json_parser@@Base+0x5176>
  4146ec:	cmp    ax,0x3
  4146f0:	je     4147ba <__flatcc_fb_gen_c_json_parser@@Base+0x51ba>
  4146f6:	cmp    ax,0x4
  4146fa:	jne    414bdb <__flatcc_fb_gen_c_json_parser@@Base+0x55db>
  414700:	mov    rdx,QWORD PTR [r13+0x48]
  414704:	mov    rdi,r15
  414707:	lea    rsi,[rip+0x2de5e]        # 44256c <_IO_stdin_used@@Base+0x1556c>
  41470e:	jmp    414784 <__flatcc_fb_gen_c_json_parser@@Base+0x5184>
  414710:	test   r14b,r14b
  414713:	mov    r13,QWORD PTR [rsp+0x48]
  414718:	je     414750 <__flatcc_fb_gen_c_json_parser@@Base+0x5150>
  41471a:	cmp    DWORD PTR [rsp+0x10],0x0
  41471f:	je     41478d <__flatcc_fb_gen_c_json_parser@@Base+0x518d>
  414721:	mov    rdi,r15
  414724:	lea    rsi,[rip+0x2df99]        # 4426c4 <_IO_stdin_used@@Base+0x156c4>
  41472b:	xor    eax,eax
  41472d:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414732:	cmp    BYTE PTR [rsp+0x4],0x0
  414737:	je     414249 <__flatcc_fb_gen_c_json_parser@@Base+0x4c49>
  41473d:	jmp    414828 <__flatcc_fb_gen_c_json_parser@@Base+0x5228>
  414742:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41474c:	nop    DWORD PTR [rax+0x0]
  414750:	mov    rdi,r15
  414753:	lea    rsi,[rip+0x2df32]        # 44268c <_IO_stdin_used@@Base+0x1568c>
  41475a:	lea    rdx,[rsp+0x60]
  41475f:	xor    eax,eax
  414761:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414766:	cmp    BYTE PTR [rsp+0x4],0x0
  41476b:	je     414249 <__flatcc_fb_gen_c_json_parser@@Base+0x4c49>
  414771:	jmp    414828 <__flatcc_fb_gen_c_json_parser@@Base+0x5228>
  414776:	mov    rdx,QWORD PTR [r13+0x48]
  41477a:	mov    rdi,r15
  41477d:	lea    rsi,[rip+0x2dda5]        # 442529 <_IO_stdin_used@@Base+0x15529>
  414784:	xor    eax,eax
  414786:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41478b:	jmp    4147d1 <__flatcc_fb_gen_c_json_parser@@Base+0x51d1>
  41478d:	cmp    DWORD PTR [rsp+0x38],0x0
  414792:	je     4148d7 <__flatcc_fb_gen_c_json_parser@@Base+0x52d7>
  414798:	mov    rdi,r15
  41479b:	lea    rsi,[rip+0x2df5e]        # 442700 <_IO_stdin_used@@Base+0x15700>
  4147a2:	mov    edx,DWORD PTR [rsp+0x58]
  4147a6:	xor    eax,eax
  4147a8:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4147ad:	cmp    BYTE PTR [rsp+0x4],0x0
  4147b2:	je     414249 <__flatcc_fb_gen_c_json_parser@@Base+0x4c49>
  4147b8:	jmp    414828 <__flatcc_fb_gen_c_json_parser@@Base+0x5228>
  4147ba:	vmovsd xmm0,QWORD PTR [r13+0x48]
  4147c0:	mov    rdi,r15
  4147c3:	lea    rsi,[rip+0x2dde5]        # 4425af <_IO_stdin_used@@Base+0x155af>
  4147ca:	mov    al,0x1
  4147cc:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4147d1:	inc    DWORD PTR [r15+0xf0]
  4147d8:	mov    rcx,QWORD PTR [r13+0x80]
  4147df:	mov    rdx,QWORD PTR [r13+0x88]
  4147e6:	movsx  r8d,WORD PTR [r13+0x72]
  4147eb:	mov    rdi,r15
  4147ee:	lea    rsi,[rip+0x2de2c]        # 442621 <_IO_stdin_used@@Base+0x15621>
  4147f5:	xor    eax,eax
  4147f7:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4147fc:	mov    rdi,r15
  4147ff:	lea    rsi,[rip+0x2de69]        # 44266f <_IO_stdin_used@@Base+0x1566f>
  414806:	mov    rdx,r15
  414809:	mov    rcx,QWORD PTR [rsp+0x40]
  41480e:	xor    eax,eax
  414810:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414815:	test   bl,bl
  414817:	je     4148b0 <__flatcc_fb_gen_c_json_parser@@Base+0x52b0>
  41481d:	cmp    BYTE PTR [rsp+0x4],0x0
  414822:	je     414249 <__flatcc_fb_gen_c_json_parser@@Base+0x4c49>
  414828:	test   r12b,r12b
  41482b:	je     41484f <__flatcc_fb_gen_c_json_parser@@Base+0x524f>
  41482d:	mov    rdi,r15
  414830:	lea    rsi,[rip+0x2e12e]        # 442965 <_IO_stdin_used@@Base+0x15965>
  414837:	xor    eax,eax
  414839:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41483e:	mov    rdi,r15
  414841:	lea    rsi,[rip+0x2e172]        # 4429ba <_IO_stdin_used@@Base+0x159ba>
  414848:	xor    eax,eax
  41484a:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41484f:	mov    rdi,r15
  414852:	lea    rsi,[rip+0x2e16e]        # 4429c7 <_IO_stdin_used@@Base+0x159c7>
  414859:	xor    eax,eax
  41485b:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414860:	mov    eax,DWORD PTR [r15+0xf0]
  414867:	test   eax,eax
  414869:	je     414b73 <__flatcc_fb_gen_c_json_parser@@Base+0x5573>
  41486f:	dec    eax
  414871:	mov    DWORD PTR [r15+0xf0],eax
  414878:	mov    rdi,r15
  41487b:	lea    rsi,[rip+0x1c046]        # 4308c8 <_IO_stdin_used@@Base+0x38c8>
  414882:	xor    eax,eax
  414884:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414889:	mov    rdi,r15
  41488c:	test   r12b,r12b
  41488f:	je     41423b <__flatcc_fb_gen_c_json_parser@@Base+0x4c3b>
  414895:	lea    rsi,[rip+0x2e165]        # 442a01 <_IO_stdin_used@@Base+0x15a01>
  41489c:	jmp    414242 <__flatcc_fb_gen_c_json_parser@@Base+0x4c42>
  4148a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4148ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4148b0:	mov    eax,DWORD PTR [r15+0xf0]
  4148b7:	test   eax,eax
  4148b9:	je     414c24 <__flatcc_fb_gen_c_json_parser@@Base+0x5624>
  4148bf:	dec    eax
  4148c1:	mov    DWORD PTR [r15+0xf0],eax
  4148c8:	mov    rdi,r15
  4148cb:	lea    rsi,[rip+0x1bff6]        # 4308c8 <_IO_stdin_used@@Base+0x38c8>
  4148d2:	jmp    414242 <__flatcc_fb_gen_c_json_parser@@Base+0x4c42>
  4148d7:	cmp    DWORD PTR [rsp+0xc],0x0
  4148dc:	je     4148ed <__flatcc_fb_gen_c_json_parser@@Base+0x52ed>
  4148de:	mov    rdi,r15
  4148e1:	lea    rsi,[rip+0x2de65]        # 44274d <_IO_stdin_used@@Base+0x1574d>
  4148e8:	jmp    41475a <__flatcc_fb_gen_c_json_parser@@Base+0x515a>
  4148ed:	cmp    DWORD PTR [rsp+0x1c],0x0
  4148f2:	je     41491c <__flatcc_fb_gen_c_json_parser@@Base+0x531c>
  4148f4:	mov    rcx,QWORD PTR [r13+0x88]
  4148fb:	mov    rdx,QWORD PTR [r13+0xa0]
  414902:	cmp    BYTE PTR [rsp+0x1b],0x0
  414907:	je     414a04 <__flatcc_fb_gen_c_json_parser@@Base+0x5404>
  41490d:	mov    rdi,r15
  414910:	lea    rsi,[rip+0x2de66]        # 44277d <_IO_stdin_used@@Base+0x1577d>
  414917:	jmp    414a2a <__flatcc_fb_gen_c_json_parser@@Base+0x542a>
  41491c:	cmp    DWORD PTR [rsp+0x2c],0x0
  414921:	je     414a10 <__flatcc_fb_gen_c_json_parser@@Base+0x5410>
  414927:	mov    rdi,r15
  41492a:	lea    rsi,[rip+0x2d9d3]        # 442304 <_IO_stdin_used@@Base+0x15304>
  414931:	xor    eax,eax
  414933:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414938:	add    DWORD PTR [r15+0xf0],0x2
  414940:	mov    rdi,r15
  414943:	lea    rsi,[rip+0x2d9fe]        # 442348 <_IO_stdin_used@@Base+0x15348>
  41494a:	lea    rdx,[rsp+0x60]
  41494f:	xor    eax,eax
  414951:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414956:	mov    rax,QWORD PTR [r15+0xd8]
  41495d:	mov    rdx,QWORD PTR [rax+0x110]
  414964:	mov    rdi,r15
  414967:	lea    rsi,[rip+0x2d9ee]        # 44235c <_IO_stdin_used@@Base+0x1535c>
  41496e:	lea    rcx,[rsp+0x150]
  414976:	xor    eax,eax
  414978:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41497d:	mov    rax,QWORD PTR [r15+0xd8]
  414984:	mov    rdx,QWORD PTR [rax+0x110]
  41498b:	mov    rdi,r15
  41498e:	lea    rsi,[rip+0x2d9e4]        # 442379 <_IO_stdin_used@@Base+0x15379>
  414995:	xor    eax,eax
  414997:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  41499c:	mov    eax,DWORD PTR [r15+0xf0]
  4149a3:	test   eax,eax
  4149a5:	je     414c43 <__flatcc_fb_gen_c_json_parser@@Base+0x5643>
  4149ab:	mov    ecx,eax
  4149ad:	dec    ecx
  4149af:	mov    DWORD PTR [r15+0xf0],ecx
  4149b6:	je     414c43 <__flatcc_fb_gen_c_json_parser@@Base+0x5643>
  4149bc:	add    eax,0xfffffffe
  4149bf:	mov    DWORD PTR [r15+0xf0],eax
  4149c6:	mov    rcx,QWORD PTR [r13+0x88]
  4149cd:	mov    rdx,QWORD PTR [r13+0xa0]
  4149d4:	cmp    BYTE PTR [rsp+0x1a],0x0
  4149d9:	je     414a20 <__flatcc_fb_gen_c_json_parser@@Base+0x5420>
  4149db:	mov    rdi,r15
  4149de:	lea    rsi,[rip+0x2de4f]        # 442834 <_IO_stdin_used@@Base+0x15834>
  4149e5:	lea    r8,[rsp+0x60]
  4149ea:	mov    r9,r8
  4149ed:	xor    eax,eax
  4149ef:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  4149f4:	cmp    BYTE PTR [rsp+0x4],0x0
  4149f9:	je     414249 <__flatcc_fb_gen_c_json_parser@@Base+0x4c49>
  4149ff:	jmp    414828 <__flatcc_fb_gen_c_json_parser@@Base+0x5228>
  414a04:	mov    rdi,r15
  414a07:	lea    rsi,[rip+0x2ddce]        # 4427dc <_IO_stdin_used@@Base+0x157dc>
  414a0e:	jmp    414a2a <__flatcc_fb_gen_c_json_parser@@Base+0x542a>
  414a10:	cmp    BYTE PTR [rsp+0x4],0x0
  414a15:	jne    414828 <__flatcc_fb_gen_c_json_parser@@Base+0x5228>
  414a1b:	jmp    414c62 <__flatcc_fb_gen_c_json_parser@@Base+0x5662>
  414a20:	mov    rdi,r15
  414a23:	lea    rsi,[rip+0x2de9b]        # 4428c5 <_IO_stdin_used@@Base+0x158c5>
  414a2a:	lea    r8,[rsp+0x60]
  414a2f:	xor    eax,eax
  414a31:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414a36:	cmp    BYTE PTR [rsp+0x4],0x0
  414a3b:	je     414249 <__flatcc_fb_gen_c_json_parser@@Base+0x4c49>
  414a41:	jmp    414828 <__flatcc_fb_gen_c_json_parser@@Base+0x5228>
  414a46:	cmp    ebx,0x2
  414a49:	mov    r14d,DWORD PTR [rsp+0x24]
  414a4e:	jne    414a9b <__flatcc_fb_gen_c_json_parser@@Base+0x549b>
  414a50:	lea    rsi,[rip+0x2e007]        # 442a5e <_IO_stdin_used@@Base+0x15a5e>
  414a57:	mov    rdi,r15
  414a5a:	xor    eax,eax
  414a5c:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414a61:	lea    rsi,[rip+0x2e00d]        # 442a75 <_IO_stdin_used@@Base+0x15a75>
  414a68:	mov    rdi,r15
  414a6b:	xor    eax,eax
  414a6d:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414a72:	mov    eax,DWORD PTR [r15+0xf0]
  414a79:	test   eax,eax
  414a7b:	je     414d13 <__flatcc_fb_gen_c_json_parser@@Base+0x5713>
  414a81:	dec    eax
  414a83:	mov    DWORD PTR [r15+0xf0],eax
  414a8a:	lea    rsi,[rip+0x2e014]        # 442aa5 <_IO_stdin_used@@Base+0x15aa5>
  414a91:	mov    rdi,r15
  414a94:	xor    eax,eax
  414a96:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414a9b:	mov    eax,DWORD PTR [rsp+0x38]
  414a9f:	or     eax,DWORD PTR [rsp+0x10]
  414aa3:	or     eax,ebx
  414aa5:	or     eax,r14d
  414aa8:	or     eax,DWORD PTR [rsp+0xc]
  414aac:	je     414ad7 <__flatcc_fb_gen_c_json_parser@@Base+0x54d7>
  414aae:	mov    rdx,QWORD PTR [r13+0x88]
  414ab5:	lea    rsi,[rip+0x2dffc]        # 442ab8 <_IO_stdin_used@@Base+0x15ab8>
  414abc:	mov    rdi,r15
  414abf:	xor    eax,eax
  414ac1:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414ac6:	lea    rsi,[rip+0x2deed]        # 4429ba <_IO_stdin_used@@Base+0x159ba>
  414acd:	mov    rdi,r15
  414ad0:	xor    eax,eax
  414ad2:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414ad7:	mov    eax,DWORD PTR [r15+0xf0]
  414ade:	test   eax,eax
  414ae0:	je     414cf4 <__flatcc_fb_gen_c_json_parser@@Base+0x56f4>
  414ae6:	dec    eax
  414ae8:	mov    DWORD PTR [r15+0xf0],eax
  414aef:	lea    rsi,[rip+0x2cce5]        # 4417db <_IO_stdin_used@@Base+0x147db>
  414af6:	mov    rdi,r15
  414af9:	xor    eax,eax
  414afb:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414b00:	inc    DWORD PTR [r15+0xf0]
  414b07:	lea    rsp,[rbp-0x28]
  414b0b:	pop    rbx
  414b0c:	pop    r12
  414b0e:	pop    r13
  414b10:	pop    r14
  414b12:	pop    r15
  414b14:	pop    rbp
  414b15:	ret    
  414b16:	lea    rdi,[rip+0x2c574]        # 441091 <_IO_stdin_used@@Base+0x14091>
  414b1d:	lea    rsi,[rip+0x2c579]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  414b24:	lea    rcx,[rip+0x2d628]        # 442153 <_IO_stdin_used@@Base+0x15153>
  414b2b:	mov    edx,0x1ea
  414b30:	call   4060f0 <__assert_fail@plt>
  414b35:	lea    rdi,[rip+0x2c555]        # 441091 <_IO_stdin_used@@Base+0x14091>
  414b3c:	lea    rsi,[rip+0x2c55a]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  414b43:	lea    rcx,[rip+0x2d609]        # 442153 <_IO_stdin_used@@Base+0x15153>
  414b4a:	mov    edx,0x21b
  414b4f:	call   4060f0 <__assert_fail@plt>
  414b54:	lea    rdi,[rip+0x2c536]        # 441091 <_IO_stdin_used@@Base+0x14091>
  414b5b:	lea    rsi,[rip+0x2c53b]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  414b62:	lea    rcx,[rip+0x2d5ea]        # 442153 <_IO_stdin_used@@Base+0x15153>
  414b69:	mov    edx,0x22f
  414b6e:	call   4060f0 <__assert_fail@plt>
  414b73:	lea    rdi,[rip+0x2c517]        # 441091 <_IO_stdin_used@@Base+0x14091>
  414b7a:	lea    rsi,[rip+0x2c51c]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  414b81:	lea    rcx,[rip+0x2d5cb]        # 442153 <_IO_stdin_used@@Base+0x15153>
  414b88:	mov    edx,0x287
  414b8d:	call   4060f0 <__assert_fail@plt>
  414b92:	mov    rax,QWORD PTR [rip+0x3b45f]        # 44fff8 <stderr@GLIBC_2.2.5>
  414b99:	mov    rdi,QWORD PTR [rax]
  414b9c:	lea    rsi,[rip+0x19891]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  414ba3:	lea    rbx,[rip+0x2003c]        # 434be6 <_IO_stdin_used@@Base+0x7be6>
  414baa:	lea    r8,[rip+0x20098]        # 434c49 <_IO_stdin_used@@Base+0x7c49>
  414bb1:	mov    rdx,rbx
  414bb4:	mov    ecx,0x60
  414bb9:	xor    eax,eax
  414bbb:	call   406170 <fprintf@plt>
  414bc0:	lea    rdi,[rip+0x2a7d4]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  414bc7:	lea    rcx,[rip+0x209ab]        # 435579 <_IO_stdin_used@@Base+0x8579>
  414bce:	mov    rsi,rbx
  414bd1:	mov    edx,0x60
  414bd6:	call   4060f0 <__assert_fail@plt>
  414bdb:	mov    rax,QWORD PTR [rip+0x3b416]        # 44fff8 <stderr@GLIBC_2.2.5>
  414be2:	mov    rdi,QWORD PTR [rax]
  414be5:	lea    rsi,[rip+0x19848]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  414bec:	lea    rbx,[rip+0x2c4aa]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  414bf3:	lea    r8,[rip+0x2d9f8]        # 4425f2 <_IO_stdin_used@@Base+0x155f2>
  414bfa:	mov    rdx,rbx
  414bfd:	mov    ecx,0x24e
  414c02:	xor    eax,eax
  414c04:	call   406170 <fprintf@plt>
  414c09:	lea    rdi,[rip+0x2a78b]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  414c10:	lea    rcx,[rip+0x2d53c]        # 442153 <_IO_stdin_used@@Base+0x15153>
  414c17:	mov    rsi,rbx
  414c1a:	mov    edx,0x24e
  414c1f:	call   4060f0 <__assert_fail@plt>
  414c24:	lea    rdi,[rip+0x2c466]        # 441091 <_IO_stdin_used@@Base+0x14091>
  414c2b:	lea    rsi,[rip+0x2c46b]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  414c32:	lea    rcx,[rip+0x2d51a]        # 442153 <_IO_stdin_used@@Base+0x15153>
  414c39:	mov    edx,0x25a
  414c3e:	call   4060f0 <__assert_fail@plt>
  414c43:	lea    rdi,[rip+0x2c447]        # 441091 <_IO_stdin_used@@Base+0x14091>
  414c4a:	lea    rsi,[rip+0x2c44c]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  414c51:	lea    rcx,[rip+0x2d4fb]        # 442153 <_IO_stdin_used@@Base+0x15153>
  414c58:	mov    edx,0x273
  414c5d:	call   4060f0 <__assert_fail@plt>
  414c62:	mov    rax,QWORD PTR [rip+0x3b38f]        # 44fff8 <stderr@GLIBC_2.2.5>
  414c69:	mov    rdi,QWORD PTR [rax]
  414c6c:	lea    rsi,[rip+0x197c1]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  414c73:	lea    rbx,[rip+0x2c423]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  414c7a:	lea    r8,[rip+0x2dcb3]        # 442934 <_IO_stdin_used@@Base+0x15934>
  414c81:	mov    rdx,rbx
  414c84:	mov    ecx,0x27c
  414c89:	xor    eax,eax
  414c8b:	call   406170 <fprintf@plt>
  414c90:	lea    rdi,[rip+0x2a704]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  414c97:	lea    rcx,[rip+0x2d4b5]        # 442153 <_IO_stdin_used@@Base+0x15153>
  414c9e:	mov    rsi,rbx
  414ca1:	mov    edx,0x27c
  414ca6:	call   4060f0 <__assert_fail@plt>
  414cab:	mov    rax,QWORD PTR [rip+0x3b346]        # 44fff8 <stderr@GLIBC_2.2.5>
  414cb2:	mov    rdi,QWORD PTR [rax]
  414cb5:	lea    rsi,[rip+0x19778]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  414cbc:	lea    rbx,[rip+0x2c3da]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  414cc3:	lea    r8,[rip+0x2d44e]        # 442118 <_IO_stdin_used@@Base+0x15118>
  414cca:	mov    rdx,rbx
  414ccd:	mov    ecx,0x1d2
  414cd2:	xor    eax,eax
  414cd4:	call   406170 <fprintf@plt>
  414cd9:	lea    rdi,[rip+0x2a6bb]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  414ce0:	lea    rcx,[rip+0x2d46c]        # 442153 <_IO_stdin_used@@Base+0x15153>
  414ce7:	mov    rsi,rbx
  414cea:	mov    edx,0x1d2
  414cef:	call   4060f0 <__assert_fail@plt>
  414cf4:	lea    rdi,[rip+0x2c396]        # 441091 <_IO_stdin_used@@Base+0x14091>
  414cfb:	lea    rsi,[rip+0x2c39b]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  414d02:	lea    rcx,[rip+0x2d3bf]        # 4420c8 <_IO_stdin_used@@Base+0x150c8>
  414d09:	mov    edx,0x2a3
  414d0e:	call   4060f0 <__assert_fail@plt>
  414d13:	lea    rdi,[rip+0x2c377]        # 441091 <_IO_stdin_used@@Base+0x14091>
  414d1a:	lea    rsi,[rip+0x2c37c]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  414d21:	lea    rcx,[rip+0x2d42b]        # 442153 <_IO_stdin_used@@Base+0x15153>
  414d28:	mov    edx,0x295
  414d2d:	call   4060f0 <__assert_fail@plt>
  414d32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414d3c:	nop    DWORD PTR [rax+0x0]
  414d40:	lea    rsi,[rip+0x2d277]        # 441fbe <_IO_stdin_used@@Base+0x14fbe>
  414d47:	xor    eax,eax
  414d49:	jmp    411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414d4e:	xchg   ax,ax
  414d50:	push   rbp
  414d51:	mov    rbp,rsp
  414d54:	push   r15
  414d56:	push   r14
  414d58:	push   rbx
  414d59:	and    rsp,0xffffffffffffffe0
  414d5d:	sub    rsp,0x100
  414d64:	mov    r14,rdx
  414d67:	mov    rbx,rdi
  414d6a:	lea    rsi,[rip+0x2e420]        # 443191 <_IO_stdin_used@@Base+0x16191>
  414d71:	mov    edx,r8d
  414d74:	xor    eax,eax
  414d76:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414d7b:	lea    rsi,[rip+0x2cd82]        # 441b04 <_IO_stdin_used@@Base+0x14b04>
  414d82:	mov    rdi,rbx
  414d85:	xor    eax,eax
  414d87:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414d8c:	inc    DWORD PTR [rbx+0xf0]
  414d92:	mov    eax,DWORD PTR [r14+0x10]
  414d96:	add    eax,0xfffffffd
  414d99:	cmp    ax,0x2
  414d9d:	jae    414e42 <__flatcc_fb_gen_c_json_parser@@Base+0x5842>
  414da3:	vxorps xmm0,xmm0,xmm0
  414da7:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  414db0:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  414db9:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  414dc2:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  414dc8:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  414dce:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  414dd4:	vmovaps YMMWORD PTR [rsp],ymm0
  414dd9:	mov    QWORD PTR [rsp+0xe0],0x0
  414de5:	mov    rdi,QWORD PTR [r14+0x18]
  414de9:	mov    r15,rsp
  414dec:	mov    rsi,r14
  414def:	mov    rdx,r15
  414df2:	vzeroupper 
  414df5:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  414dfa:	lea    rsi,[rip+0x2e46d]        # 44326e <_IO_stdin_used@@Base+0x1626e>
  414e01:	mov    rdi,rbx
  414e04:	mov    rdx,r15
  414e07:	xor    eax,eax
  414e09:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414e0e:	mov    eax,DWORD PTR [rbx+0xf0]
  414e14:	test   eax,eax
  414e16:	je     414e61 <__flatcc_fb_gen_c_json_parser@@Base+0x5861>
  414e18:	dec    eax
  414e1a:	mov    DWORD PTR [rbx+0xf0],eax
  414e20:	lea    rsi,[rip+0x2c9b4]        # 4417db <_IO_stdin_used@@Base+0x147db>
  414e27:	mov    rdi,rbx
  414e2a:	xor    eax,eax
  414e2c:	call   411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414e31:	inc    DWORD PTR [rbx+0xf0]
  414e37:	lea    rsp,[rbp-0x18]
  414e3b:	pop    rbx
  414e3c:	pop    r14
  414e3e:	pop    r15
  414e40:	pop    rbp
  414e41:	ret    
  414e42:	lea    rdi,[rip+0x1fa6b]        # 4348b4 <_IO_stdin_used@@Base+0x78b4>
  414e49:	lea    rsi,[rip+0x2c24d]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  414e50:	lea    rcx,[rip+0x2e3c8]        # 44321f <_IO_stdin_used@@Base+0x1621f>
  414e57:	mov    edx,0x2d9
  414e5c:	call   4060f0 <__assert_fail@plt>
  414e61:	lea    rdi,[rip+0x2c229]        # 441091 <_IO_stdin_used@@Base+0x14091>
  414e68:	lea    rsi,[rip+0x2c22e]        # 44109d <_IO_stdin_used@@Base+0x1409d>
  414e6f:	lea    rcx,[rip+0x2e35d]        # 4431d3 <_IO_stdin_used@@Base+0x161d3>
  414e76:	mov    edx,0x2e6
  414e7b:	call   4060f0 <__assert_fail@plt>
  414e80:	lea    rsi,[rip+0x2cd9e]        # 441c25 <_IO_stdin_used@@Base+0x14c25>
  414e87:	xor    eax,eax
  414e89:	jmp    411d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2710>
  414e8e:	xchg   ax,ax
  414e90:	push   rbx
  414e91:	movzx  eax,WORD PTR [rsi+0x10]
  414e95:	add    eax,0xfffffffd
  414e98:	cmp    eax,0x1
  414e9b:	ja     414eb9 <__flatcc_fb_gen_c_json_parser@@Base+0x58b9>
  414e9d:	mov    rbx,rdi
  414ea0:	mov    edi,0x128
  414ea5:	add    rdi,QWORD PTR [rbx+0x8]
  414ea9:	mov    rsi,QWORD PTR [rsi+0x20]
  414ead:	call   418e70 <ptr_set_find_item@@Base>
  414eb2:	test   rax,rax
  414eb5:	je     414eb9 <__flatcc_fb_gen_c_json_parser@@Base+0x58b9>
  414eb7:	inc    DWORD PTR [rbx]
  414eb9:	pop    rbx
  414eba:	ret    
  414ebb:	nop    DWORD PTR [rax+rax*1+0x0]
  414ec0:	push   r14
  414ec2:	push   rbx
  414ec3:	push   rax
  414ec4:	movzx  eax,WORD PTR [rsi+0x10]
  414ec8:	add    eax,0xfffffffd
  414ecb:	cmp    eax,0x1
  414ece:	ja     414f0d <__flatcc_fb_gen_c_json_parser@@Base+0x590d>
  414ed0:	mov    rbx,rsi
  414ed3:	mov    r14,rdi
  414ed6:	mov    edi,0x128
  414edb:	add    rdi,QWORD PTR [r14+0x8]
  414edf:	mov    rsi,QWORD PTR [rsi+0x20]
  414ee3:	call   418e70 <ptr_set_find_item@@Base>
  414ee8:	test   rax,rax
  414eeb:	je     414f0d <__flatcc_fb_gen_c_json_parser@@Base+0x590d>
  414eed:	mov    rax,QWORD PTR [rbx+0x8]
  414ef1:	mov    rcx,QWORD PTR [rax]
  414ef4:	mov    rdx,QWORD PTR [r14+0x10]
  414ef8:	mov    QWORD PTR [rdx],rcx
  414efb:	mov    eax,DWORD PTR [rax+0x8]
  414efe:	mov    DWORD PTR [rdx+0x8],eax
  414f01:	mov    QWORD PTR [rdx+0x10],rbx
  414f05:	add    rdx,0x20
  414f09:	mov    QWORD PTR [r14+0x10],rdx
  414f0d:	add    rsp,0x8
  414f11:	pop    rbx
  414f12:	pop    r14
  414f14:	ret    
  414f15:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414f1f:	nop
  414f20:	push   rbx
  414f21:	mov    rbx,rdi
  414f24:	mov    rdi,QWORD PTR [rdi+0x18]
  414f28:	test   rdi,rdi
  414f2b:	je     414f32 <__flatcc_fb_gen_c_json_parser@@Base+0x5932>
  414f2d:	call   406040 <free@plt>
  414f32:	mov    rdi,QWORD PTR [rbx+0x20]
  414f36:	test   rdi,rdi
  414f39:	je     414f40 <__flatcc_fb_gen_c_json_parser@@Base+0x5940>
  414f3b:	call   406040 <free@plt>
  414f40:	mov    rdi,QWORD PTR [rbx+0x28]
  414f44:	test   rdi,rdi
  414f47:	je     414f4e <__flatcc_fb_gen_c_json_parser@@Base+0x594e>
  414f49:	call   406040 <free@plt>
  414f4e:	vxorps xmm0,xmm0,xmm0
  414f52:	vmovups YMMWORD PTR [rbx+0x30],ymm0
  414f57:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  414f5c:	vmovups YMMWORD PTR [rbx],ymm0
  414f60:	pop    rbx
  414f61:	vzeroupper 
  414f64:	ret    
  414f65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414f6f:	nop
  414f70:	mov    rdx,rdi
  414f73:	lea    rdi,[rsi+0x8]
  414f77:	lea    rsi,[rip+0x32]        # 414fb0 <__flatcc_fb_gen_c_json_parser@@Base+0x59b0>
  414f7e:	jmp    419740 <fb_symbol_table_visit@@Base>
  414f83:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414f8d:	nop    DWORD PTR [rax]
  414f90:	mov    rdx,rdi
  414f93:	lea    rdi,[rsi+0x8]
  414f97:	lea    rsi,[rip+0xb2]        # 415050 <__flatcc_fb_gen_c_json_parser@@Base+0x5a50>
  414f9e:	jmp    419740 <fb_symbol_table_visit@@Base>
  414fa3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414fad:	nop    DWORD PTR [rax]
  414fb0:	push   r14
  414fb2:	push   rbx
  414fb3:	push   rax
  414fb4:	cmp    WORD PTR [rsi+0x10],0x4
  414fb9:	ja     415045 <__flatcc_fb_gen_c_json_parser@@Base+0x5a45>
  414fbf:	mov    rbx,rsi
  414fc2:	mov    r14,rdi
  414fc5:	mov    edi,0x128
  414fca:	add    rdi,QWORD PTR [r14+0x48]
  414fce:	mov    rsi,QWORD PTR [rsi+0x20]
  414fd2:	call   418e70 <ptr_set_find_item@@Base>
  414fd7:	test   rax,rax
  414fda:	je     415045 <__flatcc_fb_gen_c_json_parser@@Base+0x5a45>
  414fdc:	mov    eax,0x1
  414fe1:	cmp    DWORD PTR [r14],0x0
  414fe5:	je     41501d <__flatcc_fb_gen_c_json_parser@@Base+0x5a1d>
  414fe7:	mov    rcx,QWORD PTR [rbx+0x18]
  414feb:	mov    rcx,QWORD PTR [rcx]
  414fee:	test   rcx,rcx
  414ff1:	je     41501d <__flatcc_fb_gen_c_json_parser@@Base+0x5a1d>
  414ff3:	xor    eax,eax
  414ff5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  414fff:	nop
  415000:	mov    rdx,QWORD PTR [rcx+0x8]
  415004:	mov    rsi,QWORD PTR [rcx]
  415007:	mov    rcx,QWORD PTR [rdx+0x8]
  41500b:	add    rax,rcx
  41500e:	add    rax,0x1
  415012:	mov    rcx,rsi
  415015:	test   rsi,rsi
  415018:	jne    415000 <__flatcc_fb_gen_c_json_parser@@Base+0x5a00>
  41501a:	inc    rax
  41501d:	mov    rcx,QWORD PTR [rbx+0x8]
  415021:	add    rax,QWORD PTR [rcx+0x8]
  415025:	add    QWORD PTR [r14+0x10],rax
  415029:	mov    eax,DWORD PTR [rbx+0x10]
  41502c:	lea    ecx,[rax-0x3]
  41502f:	cmp    cx,0x2
  415033:	jb     415041 <__flatcc_fb_gen_c_json_parser@@Base+0x5a41>
  415035:	cmp    ax,0x1
  415039:	ja     415045 <__flatcc_fb_gen_c_json_parser@@Base+0x5a45>
  41503b:	inc    DWORD PTR [r14+0x4]
  41503f:	jmp    415045 <__flatcc_fb_gen_c_json_parser@@Base+0x5a45>
  415041:	inc    DWORD PTR [r14+0x8]
  415045:	add    rsp,0x8
  415049:	pop    rbx
  41504a:	pop    r14
  41504c:	ret    
  41504d:	nop    DWORD PTR [rax]
  415050:	push   rbp
  415051:	push   r15
  415053:	push   r14
  415055:	push   r13
  415057:	push   r12
  415059:	push   rbx
  41505a:	push   rax
  41505b:	cmp    WORD PTR [rsi+0x10],0x4
  415060:	ja     415149 <__flatcc_fb_gen_c_json_parser@@Base+0x5b49>
  415066:	mov    r15,rsi
  415069:	mov    r14,rdi
  41506c:	mov    edi,0x128
  415071:	add    rdi,QWORD PTR [r14+0x48]
  415075:	mov    rsi,QWORD PTR [rsi+0x20]
  415079:	call   418e70 <ptr_set_find_item@@Base>
  41507e:	test   rax,rax
  415081:	je     415149 <__flatcc_fb_gen_c_json_parser@@Base+0x5b49>
  415087:	mov    r12,QWORD PTR [r14+0x40]
  41508b:	cmp    DWORD PTR [r14],0x0
  41508f:	mov    QWORD PTR [rsp],r12
  415093:	je     4150df <__flatcc_fb_gen_c_json_parser@@Base+0x5adf>
  415095:	mov    rax,QWORD PTR [r15+0x18]
  415099:	mov    rbp,QWORD PTR [rax]
  41509c:	mov    r12,QWORD PTR [rsp]
  4150a0:	test   rbp,rbp
  4150a3:	je     4150df <__flatcc_fb_gen_c_json_parser@@Base+0x5adf>
  4150a5:	mov    rbx,QWORD PTR [rsp]
  4150a9:	nop    DWORD PTR [rax+0x0]
  4150b0:	mov    rax,QWORD PTR [rbp+0x8]
  4150b4:	movsxd r13,DWORD PTR [rax+0x8]
  4150b8:	mov    rsi,QWORD PTR [rax]
  4150bb:	mov    rdi,rbx
  4150be:	mov    rdx,r13
  4150c1:	call   406190 <memcpy@plt>
  4150c6:	lea    r12,[rbx+r13*1]
  4150ca:	add    r12,0x1
  4150ce:	mov    BYTE PTR [rbx+r13*1],0x2e
  4150d3:	mov    rbp,QWORD PTR [rbp+0x0]
  4150d7:	mov    rbx,r12
  4150da:	test   rbp,rbp
  4150dd:	jne    4150b0 <__flatcc_fb_gen_c_json_parser@@Base+0x5ab0>
  4150df:	mov    rax,QWORD PTR [r15+0x8]
  4150e3:	movsxd rbx,DWORD PTR [rax+0x8]
  4150e7:	mov    rsi,QWORD PTR [rax]
  4150ea:	mov    rdi,r12
  4150ed:	mov    rdx,rbx
  4150f0:	call   406190 <memcpy@plt>
  4150f5:	lea    rax,[r12+rbx*1]
  4150f9:	add    rax,0x1
  4150fd:	mov    BYTE PTR [r12+rbx*1],0x0
  415102:	mov    QWORD PTR [r14+0x40],rax
  415106:	mov    eax,DWORD PTR [r15+0x10]
  41510a:	lea    ecx,[rax-0x3]
  41510d:	cmp    cx,0x2
  415111:	jb     415132 <__flatcc_fb_gen_c_json_parser@@Base+0x5b32>
  415113:	cmp    ax,0x1
  415117:	ja     415149 <__flatcc_fb_gen_c_json_parser@@Base+0x5b49>
  415119:	mov    rax,QWORD PTR [r14+0x30]
  41511d:	mov    QWORD PTR [rax],r15
  415120:	mov    rcx,QWORD PTR [rsp]
  415124:	mov    QWORD PTR [rax+0x8],rcx
  415128:	add    rax,0x10
  41512c:	mov    QWORD PTR [r14+0x30],rax
  415130:	jmp    415149 <__flatcc_fb_gen_c_json_parser@@Base+0x5b49>
  415132:	mov    rax,QWORD PTR [r14+0x38]
  415136:	mov    QWORD PTR [rax],r15
  415139:	mov    rcx,QWORD PTR [rsp]
  41513d:	mov    QWORD PTR [rax+0x8],rcx
  415141:	add    rax,0x10
  415145:	mov    QWORD PTR [r14+0x38],rax
  415149:	add    rsp,0x8
  41514d:	pop    rbx
  41514e:	pop    r12
  415150:	pop    r13
  415152:	pop    r14
  415154:	pop    r15
  415156:	pop    rbp
  415157:	ret    
  415158:	nop    DWORD PTR [rax+rax*1+0x0]
  415160:	mov    rdi,QWORD PTR [rdi+0x8]
  415164:	mov    rsi,QWORD PTR [rsi+0x8]
  415168:	jmp    406150 <strcmp@plt>
  41516d:	nop    DWORD PTR [rax]

0000000000415170 <__flatcc_fb_gen_c_json_printer@@Base>:
  415170:	push   rbp
  415171:	mov    rbp,rsp
  415174:	push   r15
  415176:	push   r14
  415178:	push   r13
  41517a:	push   r12
  41517c:	push   rbx
  41517d:	and    rsp,0xffffffffffffffe0
  415181:	sub    rsp,0x220
  415188:	mov    rbx,rdi
  41518b:	lea    r15,[rdi+0xd0]
  415192:	mov    rdi,QWORD PTR [rdi+0xd0]
  415199:	mov    rax,QWORD PTR [rbx+0xd8]
  4151a0:	mov    rcx,QWORD PTR [rax+0x118]
  4151a7:	lea    rsi,[rip+0x2e492]        # 443640 <_IO_stdin_used@@Base+0x16640>
  4151ae:	mov    rdx,rcx
  4151b1:	xor    eax,eax
  4151b3:	call   406170 <fprintf@plt>
  4151b8:	mov    rcx,QWORD PTR [rbx+0xd0]
  4151bf:	lea    rdi,[rip+0x19145]        # 42e30b <_IO_stdin_used@@Base+0x130b>
  4151c6:	mov    esi,0x51
  4151cb:	mov    edx,0x1
  4151d0:	call   406220 <fwrite@plt>
  4151d5:	mov    rcx,QWORD PTR [rbx+0xd0]
  4151dc:	lea    rdi,[rip+0x2e492]        # 443675 <_IO_stdin_used@@Base+0x16675>
  4151e3:	mov    esi,0x28
  4151e8:	mov    edx,0x1
  4151ed:	call   406220 <fwrite@plt>
  4151f2:	lea    rsi,[rip+0x19080]        # 42e279 <_IO_stdin_used@@Base+0x1279>
  4151f9:	lea    rdx,[rip+0x2e49e]        # 44369e <_IO_stdin_used@@Base+0x1669e>
  415200:	mov    rdi,rbx
  415203:	call   407200 <__flatcc_fb_gen_c_includes@@Base>
  415208:	mov    QWORD PTR [rsp+0x18],rbx
  41520d:	mov    rax,QWORD PTR [rbx+0xe0]
  415214:	cmp    DWORD PTR [rax+0xac],0x0
  41521b:	je     415236 <__flatcc_fb_gen_c_json_printer@@Base+0xc6>
  41521d:	mov    rcx,QWORD PTR [r15]
  415220:	lea    rdi,[rip+0x192da]        # 42e501 <_IO_stdin_used@@Base+0x1501>
  415227:	mov    esi,0x24
  41522c:	mov    edx,0x1
  415231:	call   406220 <fwrite@plt>
  415236:	mov    rbx,QWORD PTR [rsp+0x18]
  41523b:	mov    rsi,QWORD PTR [rbx+0xd0]
  415242:	mov    edi,0xa
  415247:	call   406110 <fputc@plt>
  41524c:	mov    rax,QWORD PTR [rbx+0xd8]
  415253:	mov    rcx,QWORD PTR [rax+0x58]
  415257:	vxorps xmm0,xmm0,xmm0
  41525b:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  415264:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  41526d:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  415276:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  41527f:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  415285:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  41528b:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  415291:	mov    QWORD PTR [rsp+0x100],0x0
  41529d:	test   rcx,rcx
  4152a0:	je     4152f8 <__flatcc_fb_gen_c_json_printer@@Base+0x188>
  4152a2:	cmp    WORD PTR [rcx+0x10],0x1
  4152a7:	ja     4152f8 <__flatcc_fb_gen_c_json_printer@@Base+0x188>
  4152a9:	mov    rbx,QWORD PTR [rsp+0x18]
  4152ae:	mov    rcx,QWORD PTR [rbx+0xd0]
  4152b5:	lea    rdi,[rip+0x2e3f2]        # 4436ae <_IO_stdin_used@@Base+0x166ae>
  4152bc:	mov    esi,0x1e2
  4152c1:	mov    edx,0x1
  4152c6:	vzeroupper 
  4152c9:	call   406220 <fwrite@plt>
  4152ce:	mov    rdi,QWORD PTR [rbx+0xd0]
  4152d5:	mov    rax,QWORD PTR [rbx+0xd8]
  4152dc:	mov    rdx,QWORD PTR [rax+0x110]
  4152e3:	lea    rsi,[rip+0x2e5a7]        # 443891 <_IO_stdin_used@@Base+0x16891>
  4152ea:	xor    eax,eax
  4152ec:	call   406170 <fprintf@plt>
  4152f1:	mov    rax,QWORD PTR [rbx+0xd8]
  4152f8:	mov    rbx,QWORD PTR [rax+0x40]
  4152fc:	test   rbx,rbx
  4152ff:	je     4153ae <__flatcc_fb_gen_c_json_printer@@Base+0x23e>
  415305:	lea    r14,[rsp+0x20]
  41530a:	lea    r12,[rip+0x2e708]        # 443a19 <_IO_stdin_used@@Base+0x16a19>
  415311:	lea    r13,[rip+0x2e5d1]        # 4438e9 <_IO_stdin_used@@Base+0x168e9>
  415318:	jmp    41534a <__flatcc_fb_gen_c_json_printer@@Base+0x1da>
  41531a:	nop    WORD PTR [rax+rax*1+0x0]
  415320:	mov    rdi,QWORD PTR [rbx+0x18]
  415324:	mov    rsi,rbx
  415327:	mov    rdx,r14
  41532a:	vzeroupper 
  41532d:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  415332:	mov    rdi,QWORD PTR [r15]
  415335:	mov    rsi,r12
  415338:	mov    rdx,r14
  41533b:	xor    eax,eax
  41533d:	call   406170 <fprintf@plt>
  415342:	mov    rbx,QWORD PTR [rbx]
  415345:	test   rbx,rbx
  415348:	je     4153ae <__flatcc_fb_gen_c_json_printer@@Base+0x23e>
  41534a:	movzx  eax,WORD PTR [rbx+0x10]
  41534e:	test   ax,ax
  415351:	je     415390 <__flatcc_fb_gen_c_json_printer@@Base+0x220>
  415353:	cmp    ax,0x1
  415357:	je     415320 <__flatcc_fb_gen_c_json_printer@@Base+0x1b0>
  415359:	cmp    ax,0x4
  41535d:	jne    415342 <__flatcc_fb_gen_c_json_printer@@Base+0x1d2>
  41535f:	mov    rdi,QWORD PTR [rbx+0x18]
  415363:	mov    rsi,rbx
  415366:	mov    rdx,r14
  415369:	vzeroupper 
  41536c:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  415371:	mov    rdi,QWORD PTR [r15]
  415374:	mov    rsi,r13
  415377:	mov    rdx,r14
  41537a:	mov    rcx,r14
  41537d:	xor    eax,eax
  41537f:	call   406170 <fprintf@plt>
  415384:	jmp    415342 <__flatcc_fb_gen_c_json_printer@@Base+0x1d2>
  415386:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415390:	mov    rdi,QWORD PTR [rbx+0x18]
  415394:	mov    rsi,rbx
  415397:	mov    rdx,r14
  41539a:	vzeroupper 
  41539d:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  4153a2:	mov    rdi,QWORD PTR [r15]
  4153a5:	lea    rsi,[rip+0x2e603]        # 4439af <_IO_stdin_used@@Base+0x169af>
  4153ac:	jmp    415338 <__flatcc_fb_gen_c_json_printer@@Base+0x1c8>
  4153ae:	mov    rbx,QWORD PTR [rsp+0x18]
  4153b3:	mov    rsi,QWORD PTR [rbx+0xd0]
  4153ba:	mov    edi,0xa
  4153bf:	vzeroupper 
  4153c2:	call   406110 <fputc@plt>
  4153c7:	mov    rax,QWORD PTR [rbx+0xd8]
  4153ce:	mov    r13,QWORD PTR [rax+0x40]
  4153d2:	test   r13,r13
  4153d5:	je     416407 <__flatcc_fb_gen_c_json_printer@@Base+0x1297>
  4153db:	lea    r14,[rsp+0x20]
  4153e0:	lea    r12,[rip+0x3a8c1]        # 44fca8 <fb_value_set_deleted@@Base+0x6228>
  4153e7:	mov    QWORD PTR [rsp+0x118],r15
  4153ef:	cmp    WORD PTR [r13+0x10],0x3
  4153f5:	jne    41543e <__flatcc_fb_gen_c_json_printer@@Base+0x2ce>
  4153f7:	jmp    415453 <__flatcc_fb_gen_c_json_printer@@Base+0x2e3>
  4153f9:	nop    DWORD PTR [rax+0x0]
  415400:	mov    rcx,QWORD PTR [r15]
  415403:	mov    esi,0x3b
  415408:	mov    edx,0x1
  41540d:	lea    rdi,[rip+0x2e75b]        # 443b6f <_IO_stdin_used@@Base+0x16b6f>
  415414:	call   406220 <fwrite@plt>
  415419:	lea    r14,[rsp+0x20]
  41541e:	lea    r12,[rip+0x3a883]        # 44fca8 <fb_value_set_deleted@@Base+0x6228>
  415425:	mov    rcx,QWORD PTR [r15]
  415428:	mov    esi,0x3
  41542d:	mov    edx,0x1
  415432:	lea    rdi,[rip+0x2f756]        # 444b8f <_IO_stdin_used@@Base+0x17b8f>
  415439:	call   406220 <fwrite@plt>
  41543e:	mov    r13,QWORD PTR [r13+0x0]
  415442:	test   r13,r13
  415445:	je     4157ac <__flatcc_fb_gen_c_json_printer@@Base+0x63c>
  41544b:	cmp    WORD PTR [r13+0x10],0x3
  415451:	jne    41543e <__flatcc_fb_gen_c_json_printer@@Base+0x2ce>
  415453:	vxorps xmm0,xmm0,xmm0
  415457:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  415460:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  415469:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  415472:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  41547b:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  415481:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  415487:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  41548d:	mov    QWORD PTR [rsp+0x100],0x0
  415499:	mov    rdi,QWORD PTR [r13+0x18]
  41549d:	mov    rsi,r13
  4154a0:	mov    rdx,r14
  4154a3:	vzeroupper 
  4154a6:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  4154ab:	mov    eax,DWORD PTR [r13+0x48]
  4154af:	lea    ecx,[rax-0x1]
  4154b2:	cmp    ecx,0xb
  4154b5:	jae    4166a5 <__flatcc_fb_gen_c_json_printer@@Base+0x1535>
  4154bb:	movsxd rcx,ecx
  4154be:	lea    rdx,[rip+0x3a87b]        # 44fd40 <fb_value_set_deleted@@Base+0x62c0>
  4154c5:	mov    rdi,QWORD PTR [rdx+rcx*8]
  4154c9:	mov    r8,QWORD PTR [r12+rcx*8]
  4154cd:	cmp    eax,0x5
  4154d0:	lea    rcx,[rip+0x19078]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  4154d7:	cmove  rcx,QWORD PTR [rsp+0x18]
  4154dd:	test   BYTE PTR [r13+0xa4],0x20
  4154e5:	mov    QWORD PTR [rsp+0x8],rdi
  4154ea:	jne    4155e0 <__flatcc_fb_gen_c_json_printer@@Base+0x470>
  4154f0:	mov    rdi,QWORD PTR [r15]
  4154f3:	lea    rsi,[rip+0x2e576]        # 443a70 <_IO_stdin_used@@Base+0x16a70>
  4154fa:	mov    rdx,r14
  4154fd:	xor    eax,eax
  4154ff:	call   406170 <fprintf@plt>
  415504:	mov    rcx,QWORD PTR [r15]
  415507:	mov    esi,0x12
  41550c:	mov    edx,0x1
  415511:	lea    rdi,[rip+0x2e7c8]        # 443ce0 <_IO_stdin_used@@Base+0x16ce0>
  415518:	call   406220 <fwrite@plt>
  41551d:	mov    rbx,QWORD PTR [r13+0x28]
  415521:	test   rbx,rbx
  415524:	jne    41555b <__flatcc_fb_gen_c_json_printer@@Base+0x3eb>
  415526:	jmp    4155bb <__flatcc_fb_gen_c_json_printer@@Base+0x44b>
  41552b:	nop    DWORD PTR [rax+rax*1+0x0]
  415530:	mov    rdi,QWORD PTR [r15]
  415533:	movzx  edx,BYTE PTR [rbx+0x48]
  415537:	mov    rax,QWORD PTR [rbx+0x8]
  41553b:	mov    r8,QWORD PTR [rax]
  41553e:	mov    rcx,QWORD PTR [rax+0x8]
  415542:	lea    rsi,[rip+0x2e82e]        # 443d77 <_IO_stdin_used@@Base+0x16d77>
  415549:	mov    r9,rcx
  41554c:	xor    eax,eax
  41554e:	call   406170 <fprintf@plt>
  415553:	mov    rbx,QWORD PTR [rbx]
  415556:	test   rbx,rbx
  415559:	je     4155bb <__flatcc_fb_gen_c_json_printer@@Base+0x44b>
  41555b:	movzx  eax,WORD PTR [rbx+0x58]
  41555f:	cmp    ax,0x4
  415563:	je     415590 <__flatcc_fb_gen_c_json_printer@@Base+0x420>
  415565:	cmp    ax,0x6
  415569:	je     415530 <__flatcc_fb_gen_c_json_printer@@Base+0x3c0>
  41556b:	cmp    ax,0x5
  41556f:	jne    4165ca <__flatcc_fb_gen_c_json_printer@@Base+0x145a>
  415575:	mov    rdi,QWORD PTR [r15]
  415578:	mov    rax,QWORD PTR [rbx+0x8]
  41557c:	mov    rdx,QWORD PTR [rbx+0x48]
  415580:	mov    r8,QWORD PTR [rax]
  415583:	mov    rcx,QWORD PTR [rax+0x8]
  415587:	lea    rsi,[rip+0x2e765]        # 443cf3 <_IO_stdin_used@@Base+0x16cf3>
  41558e:	jmp    4155a9 <__flatcc_fb_gen_c_json_printer@@Base+0x439>
  415590:	mov    rdi,QWORD PTR [r15]
  415593:	mov    rax,QWORD PTR [rbx+0x8]
  415597:	mov    rdx,QWORD PTR [rbx+0x48]
  41559b:	mov    r8,QWORD PTR [rax]
  41559e:	mov    rcx,QWORD PTR [rax+0x8]
  4155a2:	lea    rsi,[rip+0x2e78c]        # 443d35 <_IO_stdin_used@@Base+0x16d35>
  4155a9:	mov    r9,rcx
  4155ac:	xor    eax,eax
  4155ae:	call   406170 <fprintf@plt>
  4155b3:	mov    rbx,QWORD PTR [rbx]
  4155b6:	test   rbx,rbx
  4155b9:	jne    41555b <__flatcc_fb_gen_c_json_printer@@Base+0x3eb>
  4155bb:	mov    rdi,QWORD PTR [r15]
  4155be:	lea    rsi,[rip+0x2e7f3]        # 443db8 <_IO_stdin_used@@Base+0x16db8>
  4155c5:	mov    rdx,QWORD PTR [rsp+0x8]
  4155ca:	xor    eax,eax
  4155cc:	call   406170 <fprintf@plt>
  4155d1:	jmp    415425 <__flatcc_fb_gen_c_json_printer@@Base+0x2b5>
  4155d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4155e0:	mov    rax,QWORD PTR [r13+0xb8]
  4155e7:	lea    rdx,[rax-0x1]
  4155eb:	mov    r14,0xffffffffffffffff
  4155f2:	lea    r12,[rip+0x2e473]        # 443a6c <_IO_stdin_used@@Base+0x16a6c>
  4155f9:	lea    rbx,[rip+0x1f5af]        # 434baf <_IO_stdin_used@@Base+0x7baf>
  415600:	cmp    rdx,0x3
  415604:	ja     41562a <__flatcc_fb_gen_c_json_printer@@Base+0x4ba>
  415606:	lea    rdx,[rip+0x2f6c3]        # 444cd0 <_IO_stdin_used@@Base+0x17cd0>
  41560d:	mov    r14,QWORD PTR [rdx+rax*8-0x8]
  415612:	lea    rdx,[rip+0x3a6e7]        # 44fd00 <fb_value_set_deleted@@Base+0x6280>
  415619:	mov    r12,QWORD PTR [rdx+rax*8-0x8]
  41561e:	lea    rdx,[rip+0x3a6fb]        # 44fd20 <fb_value_set_deleted@@Base+0x62a0>
  415625:	mov    rbx,QWORD PTR [rdx+rax*8-0x8]
  41562a:	mov    rax,QWORD PTR [r13+0x28]
  41562e:	test   rax,rax
  415631:	jne    415651 <__flatcc_fb_gen_c_json_printer@@Base+0x4e1>
  415633:	jmp    415680 <__flatcc_fb_gen_c_json_printer@@Base+0x510>
  415635:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41563f:	nop
  415640:	mov    rdx,QWORD PTR [rax+0x48]
  415644:	andn   r14,rdx,r14
  415649:	mov    rax,QWORD PTR [rax]
  41564c:	test   rax,rax
  41564f:	je     415680 <__flatcc_fb_gen_c_json_printer@@Base+0x510>
  415651:	movzx  edx,WORD PTR [rax+0x58]
  415655:	cmp    dx,0x4
  415659:	je     415640 <__flatcc_fb_gen_c_json_printer@@Base+0x4d0>
  41565b:	cmp    dx,0x6
  41565f:	je     415670 <__flatcc_fb_gen_c_json_printer@@Base+0x500>
  415661:	cmp    dx,0x5
  415665:	je     415640 <__flatcc_fb_gen_c_json_printer@@Base+0x4d0>
  415667:	jmp    415649 <__flatcc_fb_gen_c_json_printer@@Base+0x4d9>
  415669:	nop    DWORD PTR [rax+0x0]
  415670:	movzx  edx,BYTE PTR [rax+0x48]
  415674:	jmp    415644 <__flatcc_fb_gen_c_json_printer@@Base+0x4d4>
  415676:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415680:	mov    rdi,QWORD PTR [r15]
  415683:	lea    rsi,[rip+0x2e3e6]        # 443a70 <_IO_stdin_used@@Base+0x16a70>
  41568a:	lea    rdx,[rsp+0x20]
  41568f:	mov    r15,r8
  415692:	xor    eax,eax
  415694:	call   406170 <fprintf@plt>
  415699:	mov    rdi,rbx
  41569c:	mov    rsi,r15
  41569f:	mov    r15,QWORD PTR [rsp+0x118]
  4156a7:	call   406150 <strcmp@plt>
  4156ac:	mov    rdi,QWORD PTR [r15]
  4156af:	test   eax,eax
  4156b1:	je     4156c9 <__flatcc_fb_gen_c_json_printer@@Base+0x559>
  4156b3:	lea    rsi,[rip+0x2e3fc]        # 443ab6 <_IO_stdin_used@@Base+0x16ab6>
  4156ba:	mov    rdx,rbx
  4156bd:	mov    rcx,rbx
  4156c0:	xor    eax,eax
  4156c2:	call   406170 <fprintf@plt>
  4156c7:	jmp    4156da <__flatcc_fb_gen_c_json_printer@@Base+0x56a>
  4156c9:	lea    rsi,[rip+0x2e3f9]        # 443ac9 <_IO_stdin_used@@Base+0x16ac9>
  4156d0:	mov    rdx,rbx
  4156d3:	xor    eax,eax
  4156d5:	call   406170 <fprintf@plt>
  4156da:	mov    rcx,QWORD PTR [r15]
  4156dd:	mov    esi,0x36
  4156e2:	mov    edx,0x1
  4156e7:	lea    rdi,[rip+0x2e3ea]        # 443ad8 <_IO_stdin_used@@Base+0x16ad8>
  4156ee:	call   406220 <fwrite@plt>
  4156f3:	mov    rsi,QWORD PTR [r15]
  4156f6:	mov    edi,0xa
  4156fb:	call   406110 <fputc@plt>
  415700:	test   r14,r14
  415703:	je     41571e <__flatcc_fb_gen_c_json_printer@@Base+0x5ae>
  415705:	mov    rdi,QWORD PTR [r15]
  415708:	lea    rsi,[rip+0x2e400]        # 443b0f <_IO_stdin_used@@Base+0x16b0f>
  41570f:	mov    rdx,r14
  415712:	mov    rcx,QWORD PTR [rsp+0x8]
  415717:	xor    eax,eax
  415719:	call   406170 <fprintf@plt>
  41571e:	mov    rcx,QWORD PTR [r15]
  415721:	mov    esi,0x3b
  415726:	mov    edx,0x1
  41572b:	lea    rdi,[rip+0x2e43d]        # 443b6f <_IO_stdin_used@@Base+0x16b6f>
  415732:	call   406220 <fwrite@plt>
  415737:	mov    rbx,QWORD PTR [r13+0x28]
  41573b:	test   rbx,rbx
  41573e:	lea    r14,[rip+0x2e466]        # 443bab <_IO_stdin_used@@Base+0x16bab>
  415745:	jne    415785 <__flatcc_fb_gen_c_json_printer@@Base+0x615>
  415747:	jmp    415400 <__flatcc_fb_gen_c_json_printer@@Base+0x290>
  41574c:	nop    DWORD PTR [rax+0x0]
  415750:	mov    rdi,QWORD PTR [r15]
  415753:	movzx  edx,BYTE PTR [rbx+0x48]
  415757:	mov    rax,QWORD PTR [rbx+0x8]
  41575b:	mov    r9,QWORD PTR [rax]
  41575e:	mov    r8,QWORD PTR [rax+0x8]
  415762:	sub    rsp,0x8
  415766:	mov    rsi,r14
  415769:	mov    rcx,r12
  41576c:	xor    eax,eax
  41576e:	push   r8
  415770:	call   406170 <fprintf@plt>
  415775:	add    rsp,0x10
  415779:	mov    rbx,QWORD PTR [rbx]
  41577c:	test   rbx,rbx
  41577f:	je     415400 <__flatcc_fb_gen_c_json_printer@@Base+0x290>
  415785:	movzx  eax,WORD PTR [rbx+0x58]
  415789:	cmp    ax,0x4
  41578d:	je     41579f <__flatcc_fb_gen_c_json_printer@@Base+0x62f>
  41578f:	cmp    ax,0x6
  415793:	je     415750 <__flatcc_fb_gen_c_json_printer@@Base+0x5e0>
  415795:	cmp    ax,0x5
  415799:	jne    416613 <__flatcc_fb_gen_c_json_printer@@Base+0x14a3>
  41579f:	mov    rdi,QWORD PTR [r15]
  4157a2:	mov    rax,QWORD PTR [rbx+0x8]
  4157a6:	mov    rdx,QWORD PTR [rbx+0x48]
  4157aa:	jmp    41575b <__flatcc_fb_gen_c_json_printer@@Base+0x5eb>
  4157ac:	mov    rax,QWORD PTR [rsp+0x18]
  4157b1:	mov    rax,QWORD PTR [rax+0xd8]
  4157b8:	mov    r13,QWORD PTR [rax+0x40]
  4157bc:	test   r13,r13
  4157bf:	je     416407 <__flatcc_fb_gen_c_json_printer@@Base+0x1297>
  4157c5:	lea    r14,[rsp+0x20]
  4157ca:	lea    rbx,[rsp+0x120]
  4157d2:	lea    r12,[rip+0x2e68c]        # 443e65 <_IO_stdin_used@@Base+0x16e65>
  4157d9:	cmp    WORD PTR [r13+0x10],0x4
  4157df:	jne    415827 <__flatcc_fb_gen_c_json_printer@@Base+0x6b7>
  4157e1:	jmp    41583c <__flatcc_fb_gen_c_json_printer@@Base+0x6cc>
  4157e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4157ed:	nop    DWORD PTR [rax]
  4157f0:	mov    rcx,QWORD PTR [r15]
  4157f3:	mov    esi,0x1c
  4157f8:	mov    edx,0x1
  4157fd:	lea    rdi,[rip+0x2e90c]        # 444110 <_IO_stdin_used@@Base+0x17110>
  415804:	call   406220 <fwrite@plt>
  415809:	mov    rcx,QWORD PTR [r15]
  41580c:	mov    esi,0x9
  415811:	mov    edx,0x1
  415816:	lea    rdi,[rip+0x2ab24]        # 440341 <_IO_stdin_used@@Base+0x13341>
  41581d:	call   406220 <fwrite@plt>
  415822:	lea    r14,[rsp+0x20]
  415827:	mov    r13,QWORD PTR [r13+0x0]
  41582b:	test   r13,r13
  41582e:	je     415a7c <__flatcc_fb_gen_c_json_printer@@Base+0x90c>
  415834:	cmp    WORD PTR [r13+0x10],0x4
  41583a:	jne    415827 <__flatcc_fb_gen_c_json_printer@@Base+0x6b7>
  41583c:	vxorps xmm0,xmm0,xmm0
  415840:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  415849:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  415852:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  41585b:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  415864:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  41586a:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  415870:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  415876:	mov    QWORD PTR [rsp+0x100],0x0
  415882:	mov    rdi,QWORD PTR [r13+0x18]
  415886:	mov    rsi,r13
  415889:	mov    rdx,r14
  41588c:	vzeroupper 
  41588f:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  415894:	mov    rdi,QWORD PTR [r15]
  415897:	lea    rsi,[rip+0x2e555]        # 443df3 <_IO_stdin_used@@Base+0x16df3>
  41589e:	mov    rdx,r14
  4158a1:	xor    eax,eax
  4158a3:	call   406170 <fprintf@plt>
  4158a8:	mov    rbx,QWORD PTR [r13+0x28]
  4158ac:	test   rbx,rbx
  4158af:	jne    4158c8 <__flatcc_fb_gen_c_json_printer@@Base+0x758>
  4158b1:	jmp    4158f0 <__flatcc_fb_gen_c_json_printer@@Base+0x780>
  4158b3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4158bd:	nop    DWORD PTR [rax]
  4158c0:	mov    rbx,QWORD PTR [rbx]
  4158c3:	test   rbx,rbx
  4158c6:	je     4158f0 <__flatcc_fb_gen_c_json_printer@@Base+0x780>
  4158c8:	cmp    WORD PTR [rbx+0x28],0x0
  4158cd:	je     4158c0 <__flatcc_fb_gen_c_json_printer@@Base+0x750>
  4158cf:	mov    rdi,QWORD PTR [r15]
  4158d2:	mov    edx,DWORD PTR [rbx+0x48]
  4158d5:	mov    rax,QWORD PTR [rbx+0x8]
  4158d9:	mov    r8,QWORD PTR [rax]
  4158dc:	mov    rcx,QWORD PTR [rax+0x8]
  4158e0:	mov    rsi,r12
  4158e3:	mov    r9,rcx
  4158e6:	xor    eax,eax
  4158e8:	call   406170 <fprintf@plt>
  4158ed:	jmp    4158c0 <__flatcc_fb_gen_c_json_printer@@Base+0x750>
  4158ef:	nop
  4158f0:	mov    rcx,QWORD PTR [r15]
  4158f3:	mov    esi,0x4e
  4158f8:	mov    edx,0x1
  4158fd:	lea    rdi,[rip+0x2e5b2]        # 443eb6 <_IO_stdin_used@@Base+0x16eb6>
  415904:	call   406220 <fwrite@plt>
  415909:	mov    rcx,QWORD PTR [r15]
  41590c:	mov    esi,0x9
  415911:	mov    edx,0x1
  415916:	lea    rdi,[rip+0x2aa24]        # 440341 <_IO_stdin_used@@Base+0x13341>
  41591d:	call   406220 <fwrite@plt>
  415922:	vxorps xmm0,xmm0,xmm0
  415926:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  41592c:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  415932:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  415938:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  415941:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  41594a:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  415953:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  41595c:	mov    QWORD PTR [rsp+0x100],0x0
  415968:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  415971:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  41597a:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  415983:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  41598c:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  415995:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  41599e:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  4159a7:	mov    QWORD PTR [rsp+0x200],0x0
  4159b3:	mov    rdi,QWORD PTR [r13+0x18]
  4159b7:	mov    rsi,r13
  4159ba:	mov    rdx,r14
  4159bd:	vzeroupper 
  4159c0:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  4159c5:	mov    rdi,QWORD PTR [r15]
  4159c8:	lea    rsi,[rip+0x2e536]        # 443f05 <_IO_stdin_used@@Base+0x16f05>
  4159cf:	mov    rdx,r14
  4159d2:	xor    eax,eax
  4159d4:	call   406170 <fprintf@plt>
  4159d9:	mov    r14,QWORD PTR [r13+0x28]
  4159dd:	test   r14,r14
  4159e0:	lea    rbx,[rsp+0x120]
  4159e8:	jne    415a11 <__flatcc_fb_gen_c_json_printer@@Base+0x8a1>
  4159ea:	jmp    4157f0 <__flatcc_fb_gen_c_json_printer@@Base+0x680>
  4159ef:	nop
  4159f0:	mov    rdi,QWORD PTR [r15]
  4159f3:	mov    edx,DWORD PTR [r14+0x48]
  4159f7:	lea    rsi,[rip+0x2e6c2]        # 4440c0 <_IO_stdin_used@@Base+0x170c0>
  4159fe:	xor    eax,eax
  415a00:	call   406170 <fprintf@plt>
  415a05:	mov    r14,QWORD PTR [r14]
  415a08:	test   r14,r14
  415a0b:	je     4157f0 <__flatcc_fb_gen_c_json_printer@@Base+0x680>
  415a11:	movzx  eax,WORD PTR [r14+0x28]
  415a16:	test   ax,ax
  415a19:	je     415a05 <__flatcc_fb_gen_c_json_printer@@Base+0x895>
  415a1b:	cmp    ax,0xa
  415a1f:	je     4159f0 <__flatcc_fb_gen_c_json_printer@@Base+0x880>
  415a21:	cmp    ax,0xe
  415a25:	jne    416581 <__flatcc_fb_gen_c_json_printer@@Base+0x1411>
  415a2b:	mov    rsi,QWORD PTR [r14+0x18]
  415a2f:	mov    rdi,QWORD PTR [rsi+0x18]
  415a33:	mov    rdx,rbx
  415a36:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  415a3b:	mov    rax,QWORD PTR [r14+0x18]
  415a3f:	movzx  eax,WORD PTR [rax+0x10]
  415a43:	cmp    ax,0x1
  415a47:	je     415a62 <__flatcc_fb_gen_c_json_printer@@Base+0x8f2>
  415a49:	test   ax,ax
  415a4c:	jne    41665c <__flatcc_fb_gen_c_json_printer@@Base+0x14ec>
  415a52:	mov    rdi,QWORD PTR [r15]
  415a55:	mov    edx,DWORD PTR [r14+0x48]
  415a59:	lea    rsi,[rip+0x2e528]        # 443f88 <_IO_stdin_used@@Base+0x16f88>
  415a60:	jmp    415a70 <__flatcc_fb_gen_c_json_printer@@Base+0x900>
  415a62:	mov    rdi,QWORD PTR [r15]
  415a65:	mov    edx,DWORD PTR [r14+0x48]
  415a69:	lea    rsi,[rip+0x2e57c]        # 443fec <_IO_stdin_used@@Base+0x16fec>
  415a70:	mov    rcx,rbx
  415a73:	xor    eax,eax
  415a75:	call   406170 <fprintf@plt>
  415a7a:	jmp    415a05 <__flatcc_fb_gen_c_json_printer@@Base+0x895>
  415a7c:	mov    rax,QWORD PTR [rsp+0x18]
  415a81:	mov    rax,QWORD PTR [rax+0xd8]
  415a88:	mov    r14,QWORD PTR [rax+0x40]
  415a8c:	test   r14,r14
  415a8f:	je     416407 <__flatcc_fb_gen_c_json_printer@@Base+0x1297>
  415a95:	lea    r12,[rsp+0x20]
  415a9a:	cmp    WORD PTR [r14+0x10],0x1
  415aa0:	jne    415ae5 <__flatcc_fb_gen_c_json_printer@@Base+0x975>
  415aa2:	jmp    415af9 <__flatcc_fb_gen_c_json_printer@@Base+0x989>
  415aa4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415aae:	xchg   ax,ax
  415ab0:	mov    rcx,QWORD PTR [r15]
  415ab3:	mov    esi,0x3
  415ab8:	mov    edx,0x1
  415abd:	lea    rdi,[rip+0x2f0cb]        # 444b8f <_IO_stdin_used@@Base+0x17b8f>
  415ac4:	call   406220 <fwrite@plt>
  415ac9:	mov    rdi,QWORD PTR [r15]
  415acc:	lea    rsi,[rip+0x2e7b6]        # 444289 <_IO_stdin_used@@Base+0x17289>
  415ad3:	lea    r12,[rsp+0x20]
  415ad8:	mov    rdx,r12
  415adb:	mov    rcx,r12
  415ade:	xor    eax,eax
  415ae0:	call   406170 <fprintf@plt>
  415ae5:	mov    r14,QWORD PTR [r14]
  415ae8:	test   r14,r14
  415aeb:	je     415cf8 <__flatcc_fb_gen_c_json_printer@@Base+0xb88>
  415af1:	cmp    WORD PTR [r14+0x10],0x1
  415af7:	jne    415ae5 <__flatcc_fb_gen_c_json_printer@@Base+0x975>
  415af9:	vxorps xmm0,xmm0,xmm0
  415afd:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  415b03:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  415b09:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  415b0f:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  415b18:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  415b21:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  415b2a:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  415b33:	mov    QWORD PTR [rsp+0x100],0x0
  415b3f:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  415b48:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  415b51:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  415b5a:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  415b63:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  415b6c:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  415b75:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  415b7e:	mov    QWORD PTR [rsp+0x200],0x0
  415b8a:	mov    rdi,QWORD PTR [r14+0x18]
  415b8e:	mov    rsi,r14
  415b91:	mov    rdx,r12
  415b94:	vzeroupper 
  415b97:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  415b9c:	mov    rdi,QWORD PTR [r15]
  415b9f:	lea    rsi,[rip+0x2e587]        # 44412d <_IO_stdin_used@@Base+0x1712d>
  415ba6:	mov    rdx,r12
  415ba9:	xor    eax,eax
  415bab:	call   406170 <fprintf@plt>
  415bb0:	mov    r13,QWORD PTR [r14+0x28]
  415bb4:	test   r13,r13
  415bb7:	je     415ab0 <__flatcc_fb_gen_c_json_printer@@Base+0x940>
  415bbd:	xor    r12d,r12d
  415bc0:	test   BYTE PTR [r13+0x70],0x4
  415bc5:	jne    415c00 <__flatcc_fb_gen_c_json_printer@@Base+0xa90>
  415bc7:	jmp    415c17 <__flatcc_fb_gen_c_json_printer@@Base+0xaa7>
  415bc9:	mov    rdi,QWORD PTR [r15]
  415bcc:	mov    rax,QWORD PTR [r13+0x8]
  415bd0:	mov    rcx,QWORD PTR [r13+0x78]
  415bd4:	mov    r9,QWORD PTR [rax]
  415bd7:	mov    r8,QWORD PTR [rax+0x8]
  415bdb:	lea    rsi,[rip+0x2e643]        # 444225 <_IO_stdin_used@@Base+0x17225>
  415be2:	mov    edx,r12d
  415be5:	xor    eax,eax
  415be7:	push   rbx
  415be8:	push   r8
  415bea:	call   406170 <fprintf@plt>
  415bef:	add    rsp,0x10
  415bf3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415bfd:	nop    DWORD PTR [rax]
  415c00:	inc    r12d
  415c03:	mov    r13,QWORD PTR [r13+0x0]
  415c07:	test   r13,r13
  415c0a:	je     415ab0 <__flatcc_fb_gen_c_json_printer@@Base+0x940>
  415c10:	test   BYTE PTR [r13+0x70],0x4
  415c15:	jne    415c00 <__flatcc_fb_gen_c_json_printer@@Base+0xa90>
  415c17:	movzx  eax,WORD PTR [r13+0x28]
  415c1c:	cmp    ax,0xe
  415c20:	je     415c76 <__flatcc_fb_gen_c_json_printer@@Base+0xb06>
  415c22:	cmp    ax,0x8
  415c26:	jne    415c00 <__flatcc_fb_gen_c_json_printer@@Base+0xa90>
  415c28:	mov    eax,DWORD PTR [r13+0x18]
  415c2c:	dec    eax
  415c2e:	cmp    eax,0xb
  415c31:	jae    4166a5 <__flatcc_fb_gen_c_json_printer@@Base+0x1535>
  415c37:	cdqe   
  415c39:	lea    rcx,[rip+0x3a100]        # 44fd40 <fb_value_set_deleted@@Base+0x62c0>
  415c40:	mov    rdx,QWORD PTR [rcx+rax*8]
  415c44:	mov    rdi,QWORD PTR [r15]
  415c47:	mov    rbx,QWORD PTR [r13+0x8]
  415c4b:	mov    r8,QWORD PTR [r13+0x78]
  415c4f:	mov    r9,QWORD PTR [rbx+0x8]
  415c53:	lea    rsi,[rip+0x2e522]        # 44417c <_IO_stdin_used@@Base+0x1717c>
  415c5a:	mov    ecx,r12d
  415c5d:	xor    eax,eax
  415c5f:	push   r9
  415c61:	push   QWORD PTR [rbx]
  415c63:	call   406170 <fprintf@plt>
  415c68:	add    rsp,0x10
  415c6c:	lea    rbx,[rsp+0x120]
  415c74:	jmp    415c00 <__flatcc_fb_gen_c_json_printer@@Base+0xa90>
  415c76:	mov    rsi,QWORD PTR [r13+0x18]
  415c7a:	mov    rdi,QWORD PTR [rsi+0x18]
  415c7e:	mov    rdx,rbx
  415c81:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  415c86:	mov    rax,QWORD PTR [r13+0x18]
  415c8a:	movzx  ecx,WORD PTR [rax+0x10]
  415c8e:	cmp    cx,0x1
  415c92:	je     415bc9 <__flatcc_fb_gen_c_json_printer@@Base+0xa59>
  415c98:	cmp    cx,0x3
  415c9c:	jne    415c00 <__flatcc_fb_gen_c_json_printer@@Base+0xa90>
  415ca2:	mov    eax,DWORD PTR [rax+0x48]
  415ca5:	dec    eax
  415ca7:	cmp    eax,0xb
  415caa:	jae    4166a5 <__flatcc_fb_gen_c_json_printer@@Base+0x1535>
  415cb0:	cdqe   
  415cb2:	lea    rcx,[rip+0x3a087]        # 44fd40 <fb_value_set_deleted@@Base+0x62c0>
  415cb9:	mov    rdx,QWORD PTR [rcx+rax*8]
  415cbd:	mov    rdi,QWORD PTR [r15]
  415cc0:	mov    r10,QWORD PTR [r13+0x8]
  415cc4:	mov    r8,QWORD PTR [r13+0x78]
  415cc8:	mov    r9,QWORD PTR [r10+0x8]
  415ccc:	sub    rsp,0x8
  415cd0:	lea    rsi,[rip+0x2e4ed]        # 4441c4 <_IO_stdin_used@@Base+0x171c4>
  415cd7:	mov    ecx,r12d
  415cda:	xor    eax,eax
  415cdc:	lea    rbx,[rsp+0x128]
  415ce4:	push   rbx
  415ce5:	push   r9
  415ce7:	push   QWORD PTR [r10]
  415cea:	call   406170 <fprintf@plt>
  415cef:	add    rsp,0x20
  415cf3:	jmp    415c00 <__flatcc_fb_gen_c_json_printer@@Base+0xa90>
  415cf8:	mov    rax,QWORD PTR [rsp+0x18]
  415cfd:	mov    rax,QWORD PTR [rax+0xd8]
  415d04:	mov    r12,QWORD PTR [rax+0x40]
  415d08:	test   r12,r12
  415d0b:	je     416407 <__flatcc_fb_gen_c_json_printer@@Base+0x1297>
  415d11:	lea    r14,[rsp+0x20]
  415d16:	cmp    WORD PTR [r12+0x10],0x0
  415d1d:	je     415d36 <__flatcc_fb_gen_c_json_printer@@Base+0xbc6>
  415d1f:	nop
  415d20:	mov    r12,QWORD PTR [r12]
  415d24:	test   r12,r12
  415d27:	je     4163fb <__flatcc_fb_gen_c_json_printer@@Base+0x128b>
  415d2d:	cmp    WORD PTR [r12+0x10],0x0
  415d34:	jne    415d20 <__flatcc_fb_gen_c_json_printer@@Base+0xbb0>
  415d36:	vxorps xmm0,xmm0,xmm0
  415d3a:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  415d40:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  415d46:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  415d4c:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  415d55:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  415d5e:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  415d67:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  415d70:	mov    QWORD PTR [rsp+0x100],0x0
  415d7c:	vmovaps YMMWORD PTR [rsp+0x120],ymm0
  415d85:	vmovaps YMMWORD PTR [rsp+0x140],ymm0
  415d8e:	vmovaps YMMWORD PTR [rsp+0x160],ymm0
  415d97:	vmovaps YMMWORD PTR [rsp+0x180],ymm0
  415da0:	vmovaps YMMWORD PTR [rsp+0x1a0],ymm0
  415da9:	vmovaps YMMWORD PTR [rsp+0x1c0],ymm0
  415db2:	vmovaps YMMWORD PTR [rsp+0x1e0],ymm0
  415dbb:	mov    QWORD PTR [rsp+0x200],0x0
  415dc7:	mov    rdi,QWORD PTR [r12+0x18]
  415dcc:	mov    rsi,r12
  415dcf:	mov    rdx,r14
  415dd2:	vzeroupper 
  415dd5:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  415dda:	mov    QWORD PTR [rsp+0x8],r12
  415ddf:	mov    rbx,QWORD PTR [r12+0xa8]
  415de7:	mov    esi,0x8
  415dec:	mov    rdi,rbx
  415def:	call   406140 <calloc@plt>
  415df4:	test   rbx,rbx
  415df7:	mov    rbx,rax
  415dfa:	je     415e05 <__flatcc_fb_gen_c_json_printer@@Base+0xc95>
  415dfc:	test   rbx,rbx
  415dff:	je     416812 <__flatcc_fb_gen_c_json_printer@@Base+0x16a2>
  415e05:	mov    r12,QWORD PTR [rsp+0x8]
  415e0a:	mov    rax,QWORD PTR [r12+0x28]
  415e0f:	test   rax,rax
  415e12:	je     415e33 <__flatcc_fb_gen_c_json_printer@@Base+0xcc3>
  415e14:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415e1e:	xchg   ax,ax
  415e20:	mov    rcx,QWORD PTR [rax+0x88]
  415e27:	mov    QWORD PTR [rbx+rcx*8],rax
  415e2b:	mov    rax,QWORD PTR [rax]
  415e2e:	test   rax,rax
  415e31:	jne    415e20 <__flatcc_fb_gen_c_json_printer@@Base+0xcb0>
  415e33:	mov    rdi,QWORD PTR [r15]
  415e36:	lea    rsi,[rip+0x2e58d]        # 4443ca <_IO_stdin_used@@Base+0x173ca>
  415e3d:	mov    rdx,r14
  415e40:	xor    eax,eax
  415e42:	call   406170 <fprintf@plt>
  415e47:	cmp    QWORD PTR [r12+0xa8],0x0
  415e50:	je     4163b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1240>
  415e56:	xor    r14d,r14d
  415e59:	mov    QWORD PTR [rsp+0x10],rbx
  415e5e:	jmp    415ec1 <__flatcc_fb_gen_c_json_printer@@Base+0xd51>
  415e60:	mov    rdi,QWORD PTR [r15]
  415e63:	mov    rax,QWORD PTR [r13+0x8]
  415e67:	mov    rdx,QWORD PTR [r13+0x88]
  415e6e:	mov    r8,QWORD PTR [rax]
  415e71:	mov    rcx,QWORD PTR [rax+0x8]
  415e75:	sub    rsp,0x8
  415e79:	lea    rsi,[rip+0x2ea72]        # 4448f2 <_IO_stdin_used@@Base+0x178f2>
  415e80:	mov    r9,rcx
  415e83:	xor    eax,eax
  415e85:	lea    rbx,[rsp+0x128]
  415e8d:	push   rbx
  415e8e:	mov    rbx,QWORD PTR [rsp+0x20]
  415e93:	mov    r12,QWORD PTR [rsp+0x18]
  415e98:	call   406170 <fprintf@plt>
  415e9d:	add    rsp,0x10
  415ea1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  415eab:	nop    DWORD PTR [rax+rax*1+0x0]
  415eb0:	inc    r14
  415eb3:	cmp    r14,QWORD PTR [r12+0xa8]
  415ebb:	jae    4163b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1240>
  415ec1:	mov    r13,QWORD PTR [rbx+r14*8]
  415ec5:	test   r13,r13
  415ec8:	je     415eb0 <__flatcc_fb_gen_c_json_printer@@Base+0xd40>
  415eca:	test   BYTE PTR [r13+0x70],0x4
  415ecf:	jne    415eb0 <__flatcc_fb_gen_c_json_printer@@Base+0xd40>
  415ed1:	mov    rcx,QWORD PTR [r15]
  415ed4:	mov    esi,0x5
  415ed9:	mov    edx,0x1
  415ede:	lea    rdi,[rip+0x2e54f]        # 444434 <_IO_stdin_used@@Base+0x17434>
  415ee5:	call   406220 <fwrite@plt>
  415eea:	mov    eax,DWORD PTR [r13+0x28]
  415eee:	add    eax,0xfffffff9
  415ef1:	cmp    ax,0x8
  415ef5:	ja     415eb0 <__flatcc_fb_gen_c_json_printer@@Base+0xd40>
  415ef7:	movzx  eax,ax
  415efa:	lea    rcx,[rip+0x2d6f3]        # 4435f4 <_IO_stdin_used@@Base+0x165f4>
  415f01:	movsxd rax,DWORD PTR [rcx+rax*4]
  415f05:	add    rax,rcx
  415f08:	jmp    rax
  415f0a:	movzx  r10d,WORD PTR [r13+0x70]
  415f0f:	test   r10d,0xc00
  415f16:	je     416102 <__flatcc_fb_gen_c_json_printer@@Base+0xf92>
  415f1c:	mov    rdi,QWORD PTR [r15]
  415f1f:	mov    rax,QWORD PTR [r13+0x8]
  415f23:	mov    rdx,QWORD PTR [r13+0x88]
  415f2a:	mov    r8,QWORD PTR [rax]
  415f2d:	mov    rcx,QWORD PTR [rax+0x8]
  415f31:	shr    r10d,0xa
  415f35:	not    r10d
  415f38:	and    r10d,0x1
  415f3c:	sub    rsp,0x8
  415f40:	lea    rsi,[rip+0x2e5ad]        # 4444f4 <_IO_stdin_used@@Base+0x174f4>
  415f47:	mov    r9,rcx
  415f4a:	xor    eax,eax
  415f4c:	push   r10
  415f4e:	jmp    415e98 <__flatcc_fb_gen_c_json_printer@@Base+0xd28>
  415f53:	mov    rdi,QWORD PTR [r15]
  415f56:	mov    rax,QWORD PTR [r13+0x8]
  415f5a:	mov    rdx,QWORD PTR [r13+0x88]
  415f61:	mov    r8,QWORD PTR [rax]
  415f64:	mov    rcx,QWORD PTR [rax+0x8]
  415f68:	lea    rsi,[rip+0x2e70c]        # 44467b <_IO_stdin_used@@Base+0x1767b>
  415f6f:	jmp    416069 <__flatcc_fb_gen_c_json_printer@@Base+0xef9>
  415f74:	mov    rsi,QWORD PTR [r13+0x18]
  415f78:	mov    rdi,QWORD PTR [rsi+0x18]
  415f7c:	lea    rdx,[rsp+0x120]
  415f84:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  415f89:	mov    rax,QWORD PTR [r13+0x18]
  415f8d:	movzx  ecx,WORD PTR [rax+0x10]
  415f91:	cmp    rcx,0x4
  415f95:	ja     4166ee <__flatcc_fb_gen_c_json_printer@@Base+0x157e>
  415f9b:	lea    rdx,[rip+0x2d676]        # 443618 <_IO_stdin_used@@Base+0x16618>
  415fa2:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  415fa6:	add    rcx,rdx
  415fa9:	jmp    rcx
  415fab:	mov    rdi,QWORD PTR [r15]
  415fae:	mov    rdx,QWORD PTR [r13+0x88]
  415fb5:	mov    rax,QWORD PTR [r13+0x8]
  415fb9:	mov    r8,QWORD PTR [rax]
  415fbc:	mov    rcx,QWORD PTR [rax+0x8]
  415fc0:	lea    rsi,[rip+0x2e9e1]        # 4449a8 <_IO_stdin_used@@Base+0x179a8>
  415fc7:	mov    r9,rcx
  415fca:	xor    eax,eax
  415fcc:	lea    rbx,[rsp+0x120]
  415fd4:	push   rbx
  415fd5:	mov    rbx,QWORD PTR [rsp+0x18]
  415fda:	mov    r12,QWORD PTR [rsp+0x10]
  415fdf:	push   QWORD PTR [r13+0x80]
  415fe6:	jmp    415e98 <__flatcc_fb_gen_c_json_printer@@Base+0xd28>
  415feb:	mov    eax,DWORD PTR [r13+0x18]
  415fef:	dec    eax
  415ff1:	cmp    eax,0xb
  415ff4:	jae    4166a5 <__flatcc_fb_gen_c_json_printer@@Base+0x1535>
  415ffa:	cdqe   
  415ffc:	lea    rcx,[rip+0x39d3d]        # 44fd40 <fb_value_set_deleted@@Base+0x62c0>
  416003:	mov    rdx,QWORD PTR [rcx+rax*8]
  416007:	mov    eax,DWORD PTR [r13+0x58]
  41600b:	lea    ecx,[rax-0x5]
  41600e:	cmp    cx,0x2
  416012:	jb     4160d4 <__flatcc_fb_gen_c_json_printer@@Base+0xf64>
  416018:	cmp    ax,0x3
  41601c:	je     4161e3 <__flatcc_fb_gen_c_json_printer@@Base+0x1073>
  416022:	cmp    ax,0x4
  416026:	jne    416737 <__flatcc_fb_gen_c_json_printer@@Base+0x15c7>
  41602c:	mov    rdi,QWORD PTR [r15]
  41602f:	mov    rcx,QWORD PTR [r13+0x88]
  416036:	mov    rax,QWORD PTR [r13+0x8]
  41603a:	mov    r9,QWORD PTR [rax]
  41603d:	mov    r8,QWORD PTR [rax+0x8]
  416041:	lea    rsi,[rip+0x2e430]        # 444478 <_IO_stdin_used@@Base+0x17478>
  416048:	jmp    4160f0 <__flatcc_fb_gen_c_json_printer@@Base+0xf80>
  41604d:	mov    rdi,QWORD PTR [r15]
  416050:	mov    rax,QWORD PTR [r13+0x8]
  416054:	mov    rdx,QWORD PTR [r13+0x88]
  41605b:	mov    r8,QWORD PTR [rax]
  41605e:	mov    rcx,QWORD PTR [rax+0x8]
  416062:	lea    rsi,[rip+0x2e5d5]        # 44463e <_IO_stdin_used@@Base+0x1763e>
  416069:	mov    r9,rcx
  41606c:	xor    eax,eax
  41606e:	call   406170 <fprintf@plt>
  416073:	jmp    415eb0 <__flatcc_fb_gen_c_json_printer@@Base+0xd40>
  416078:	mov    rsi,QWORD PTR [r13+0x18]
  41607c:	mov    rdi,QWORD PTR [rsi+0x18]
  416080:	lea    rdx,[rsp+0x120]
  416088:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  41608d:	mov    rax,QWORD PTR [r13+0x18]
  416091:	movzx  ecx,WORD PTR [rax+0x10]
  416095:	cmp    rcx,0x4
  416099:	ja     416780 <__flatcc_fb_gen_c_json_printer@@Base+0x1610>
  41609f:	lea    rdx,[rip+0x2d586]        # 44362c <_IO_stdin_used@@Base+0x1662c>
  4160a6:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4160aa:	add    rcx,rdx
  4160ad:	jmp    rcx
  4160af:	mov    rdi,QWORD PTR [r15]
  4160b2:	mov    rax,QWORD PTR [r13+0x8]
  4160b6:	mov    rdx,QWORD PTR [r13+0x88]
  4160bd:	mov    r8,QWORD PTR [rax]
  4160c0:	mov    rcx,QWORD PTR [rax+0x8]
  4160c4:	sub    rsp,0x8
  4160c8:	lea    rsi,[rip+0x2e729]        # 4447f8 <_IO_stdin_used@@Base+0x177f8>
  4160cf:	jmp    415e80 <__flatcc_fb_gen_c_json_printer@@Base+0xd10>
  4160d4:	mov    rdi,QWORD PTR [r15]
  4160d7:	mov    rcx,QWORD PTR [r13+0x88]
  4160de:	mov    rax,QWORD PTR [r13+0x8]
  4160e2:	mov    r9,QWORD PTR [rax]
  4160e5:	mov    r8,QWORD PTR [rax+0x8]
  4160e9:	lea    rsi,[rip+0x2e34a]        # 44443a <_IO_stdin_used@@Base+0x1743a>
  4160f0:	xor    eax,eax
  4160f2:	push   QWORD PTR [r13+0x48]
  4160f6:	push   r8
  4160f8:	call   406170 <fprintf@plt>
  4160fd:	jmp    415e9d <__flatcc_fb_gen_c_json_printer@@Base+0xd2d>
  416102:	mov    rsi,QWORD PTR [r13+0x90]
  416109:	test   rsi,rsi
  41610c:	je     4162e0 <__flatcc_fb_gen_c_json_printer@@Base+0x1170>
  416112:	mov    rdi,QWORD PTR [rsi+0x18]
  416116:	lea    rax,[rsp+0x120]
  41611e:	mov    rdx,rax
  416121:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  416126:	mov    rax,QWORD PTR [r13+0x90]
  41612d:	cmp    WORD PTR [rax+0x10],0x0
  416132:	mov    rdi,QWORD PTR [r15]
  416135:	mov    rax,QWORD PTR [r13+0x8]
  416139:	mov    rdx,QWORD PTR [r13+0x88]
  416140:	mov    r8,QWORD PTR [rax]
  416143:	mov    rcx,QWORD PTR [rax+0x8]
  416147:	je     416323 <__flatcc_fb_gen_c_json_printer@@Base+0x11b3>
  41614d:	sub    rsp,0x8
  416151:	lea    rsi,[rip+0x2e447]        # 44459f <_IO_stdin_used@@Base+0x1759f>
  416158:	jmp    41632e <__flatcc_fb_gen_c_json_printer@@Base+0x11be>
  41615d:	mov    rdi,QWORD PTR [r15]
  416160:	mov    rax,QWORD PTR [r13+0x8]
  416164:	mov    rdx,QWORD PTR [r13+0x88]
  41616b:	mov    r8,QWORD PTR [rax]
  41616e:	mov    rcx,QWORD PTR [rax+0x8]
  416172:	lea    rsi,[rip+0x2e88e]        # 444a07 <_IO_stdin_used@@Base+0x17a07>
  416179:	jmp    416233 <__flatcc_fb_gen_c_json_printer@@Base+0x10c3>
  41617e:	dec    eax
  416180:	cmp    eax,0xb
  416183:	jae    4166a5 <__flatcc_fb_gen_c_json_printer@@Base+0x1535>
  416189:	cdqe   
  41618b:	lea    rcx,[rip+0x39bae]        # 44fd40 <fb_value_set_deleted@@Base+0x62c0>
  416192:	mov    rdx,QWORD PTR [rcx+rax*8]
  416196:	mov    rdi,QWORD PTR [r15]
  416199:	mov    rax,QWORD PTR [r13+0x8]
  41619d:	mov    rcx,QWORD PTR [r13+0x88]
  4161a4:	mov    r9,QWORD PTR [rax]
  4161a7:	mov    r8,QWORD PTR [rax+0x8]
  4161ab:	sub    rsp,0x8
  4161af:	lea    rsi,[rip+0x2e794]        # 44494a <_IO_stdin_used@@Base+0x1794a>
  4161b6:	xor    eax,eax
  4161b8:	lea    rbx,[rsp+0x128]
  4161c0:	push   rbx
  4161c1:	mov    r12,QWORD PTR [rsp+0x18]
  4161c6:	push   QWORD PTR [r12+0xb8]
  4161ce:	push   r8
  4161d0:	call   406170 <fprintf@plt>
  4161d5:	add    rsp,0x20
  4161d9:	mov    rbx,QWORD PTR [rsp+0x10]
  4161de:	jmp    415eb0 <__flatcc_fb_gen_c_json_printer@@Base+0xd40>
  4161e3:	mov    rdi,QWORD PTR [r15]
  4161e6:	mov    rcx,QWORD PTR [r13+0x88]
  4161ed:	mov    rax,QWORD PTR [r13+0x8]
  4161f1:	mov    r9,QWORD PTR [rax]
  4161f4:	mov    r8,QWORD PTR [rax+0x8]
  4161f8:	vmovsd xmm0,QWORD PTR [r13+0x48]
  4161fe:	sub    rsp,0x8
  416202:	lea    rsi,[rip+0x2e2ad]        # 4444b6 <_IO_stdin_used@@Base+0x174b6>
  416209:	mov    al,0x1
  41620b:	push   r8
  41620d:	call   406170 <fprintf@plt>
  416212:	jmp    415e9d <__flatcc_fb_gen_c_json_printer@@Base+0xd2d>
  416217:	mov    rdi,QWORD PTR [r15]
  41621a:	mov    rax,QWORD PTR [r13+0x8]
  41621e:	mov    rdx,QWORD PTR [r13+0x88]
  416225:	mov    r8,QWORD PTR [rax]
  416228:	mov    rcx,QWORD PTR [rax+0x8]
  41622c:	lea    rsi,[rip+0x2e616]        # 444849 <_IO_stdin_used@@Base+0x17849>
  416233:	mov    r9,rcx
  416236:	xor    eax,eax
  416238:	lea    rbx,[rsp+0x120]
  416240:	push   rbx
  416241:	jmp    415e8d <__flatcc_fb_gen_c_json_printer@@Base+0xd1d>
  416246:	mov    rdi,QWORD PTR [r15]
  416249:	mov    rax,QWORD PTR [r13+0x8]
  41624d:	mov    rdx,QWORD PTR [r13+0x88]
  416254:	mov    r8,QWORD PTR [rax]
  416257:	mov    rcx,QWORD PTR [rax+0x8]
  41625b:	sub    rsp,0x8
  41625f:	lea    rsi,[rip+0x2e53f]        # 4447a5 <_IO_stdin_used@@Base+0x177a5>
  416266:	jmp    415e80 <__flatcc_fb_gen_c_json_printer@@Base+0xd10>
  41626b:	mov    eax,DWORD PTR [rax+0x48]
  41626e:	dec    eax
  416270:	cmp    eax,0xb
  416273:	jae    4166a5 <__flatcc_fb_gen_c_json_printer@@Base+0x1535>
  416279:	cdqe   
  41627b:	lea    rcx,[rip+0x39abe]        # 44fd40 <fb_value_set_deleted@@Base+0x62c0>
  416282:	mov    rdx,QWORD PTR [rcx+rax*8]
  416286:	mov    eax,DWORD PTR [r13+0x58]
  41628a:	lea    ecx,[rax-0x5]
  41628d:	cmp    cx,0x2
  416291:	jae    41634f <__flatcc_fb_gen_c_json_printer@@Base+0x11df>
  416297:	mov    rdi,QWORD PTR [r15]
  41629a:	mov    rcx,QWORD PTR [r13+0x88]
  4162a1:	mov    rax,QWORD PTR [r13+0x8]
  4162a5:	mov    r9,QWORD PTR [rax]
  4162a8:	mov    r8,QWORD PTR [rax+0x8]
  4162ac:	sub    rsp,0x8
  4162b0:	lea    rsi,[rip+0x2e408]        # 4446bf <_IO_stdin_used@@Base+0x176bf>
  4162b7:	xor    eax,eax
  4162b9:	lea    rbx,[rsp+0x128]
  4162c1:	push   rbx
  4162c2:	mov    rbx,QWORD PTR [rsp+0x20]
  4162c7:	mov    r12,QWORD PTR [rsp+0x18]
  4162cc:	push   QWORD PTR [r13+0x48]
  4162d0:	push   r8
  4162d2:	call   406170 <fprintf@plt>
  4162d7:	add    rsp,0x20
  4162db:	jmp    415eb0 <__flatcc_fb_gen_c_json_printer@@Base+0xd40>
  4162e0:	mov    eax,DWORD PTR [r13+0x18]
  4162e4:	dec    eax
  4162e6:	cmp    eax,0xb
  4162e9:	jae    4166a5 <__flatcc_fb_gen_c_json_printer@@Base+0x1535>
  4162ef:	cdqe   
  4162f1:	lea    rcx,[rip+0x39a48]        # 44fd40 <fb_value_set_deleted@@Base+0x62c0>
  4162f8:	mov    rdx,QWORD PTR [rcx+rax*8]
  4162fc:	mov    rdi,QWORD PTR [r15]
  4162ff:	mov    rax,QWORD PTR [r13+0x8]
  416303:	mov    rcx,QWORD PTR [r13+0x88]
  41630a:	mov    r9,QWORD PTR [rax]
  41630d:	mov    r8,QWORD PTR [rax+0x8]
  416311:	sub    rsp,0x8
  416315:	lea    rsi,[rip+0x2e2e2]        # 4445fe <_IO_stdin_used@@Base+0x175fe>
  41631c:	xor    eax,eax
  41631e:	jmp    4160f6 <__flatcc_fb_gen_c_json_printer@@Base+0xf86>
  416323:	sub    rsp,0x8
  416327:	lea    rsi,[rip+0x2e214]        # 444542 <_IO_stdin_used@@Base+0x17542>
  41632e:	mov    r9,rcx
  416331:	xor    eax,eax
  416333:	lea    rbx,[rsp+0x128]
  41633b:	push   rbx
  41633c:	call   406170 <fprintf@plt>
  416341:	add    rsp,0x10
  416345:	mov    rbx,QWORD PTR [rsp+0x10]
  41634a:	jmp    415eb0 <__flatcc_fb_gen_c_json_printer@@Base+0xd40>
  41634f:	cmp    ax,0x4
  416353:	jne    4167c9 <__flatcc_fb_gen_c_json_printer@@Base+0x1659>
  416359:	mov    rdi,QWORD PTR [r15]
  41635c:	mov    rcx,QWORD PTR [r13+0x88]
  416363:	mov    rax,QWORD PTR [r13+0x8]
  416367:	mov    r9,QWORD PTR [rax]
  41636a:	mov    r8,QWORD PTR [rax+0x8]
  41636e:	sub    rsp,0x8
  416372:	lea    rsi,[rip+0x2e39d]        # 444716 <_IO_stdin_used@@Base+0x17716>
  416379:	xor    eax,eax
  41637b:	lea    rbx,[rsp+0x128]
  416383:	push   rbx
  416384:	push   QWORD PTR [r13+0x48]
  416388:	push   r8
  41638a:	call   406170 <fprintf@plt>
  41638f:	add    rsp,0x20
  416393:	mov    r12,QWORD PTR [rsp+0x8]
  416398:	mov    rbx,QWORD PTR [rsp+0x10]
  41639d:	jmp    415eb0 <__flatcc_fb_gen_c_json_printer@@Base+0xd40>
  4163a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4163ac:	nop    DWORD PTR [rax+0x0]
  4163b0:	mov    rcx,QWORD PTR [r15]
  4163b3:	mov    esi,0x4
  4163b8:	mov    edx,0x1
  4163bd:	lea    rdi,[rip+0x2e7ca]        # 444b8e <_IO_stdin_used@@Base+0x17b8e>
  4163c4:	call   406220 <fwrite@plt>
  4163c9:	mov    rdi,QWORD PTR [r15]
  4163cc:	lea    rsi,[rip+0x2e6eb]        # 444abe <_IO_stdin_used@@Base+0x17abe>
  4163d3:	lea    r14,[rsp+0x20]
  4163d8:	mov    rdx,r14
  4163db:	mov    rcx,r14
  4163de:	xor    eax,eax
  4163e0:	call   406170 <fprintf@plt>
  4163e5:	test   rbx,rbx
  4163e8:	je     415d20 <__flatcc_fb_gen_c_json_printer@@Base+0xbb0>
  4163ee:	mov    rdi,rbx
  4163f1:	call   406040 <free@plt>
  4163f6:	jmp    415d20 <__flatcc_fb_gen_c_json_printer@@Base+0xbb0>
  4163fb:	mov    rax,QWORD PTR [rsp+0x18]
  416400:	mov    rax,QWORD PTR [rax+0xd8]
  416407:	mov    rsi,QWORD PTR [rax+0x58]
  41640b:	test   rsi,rsi
  41640e:	je     41651a <__flatcc_fb_gen_c_json_printer@@Base+0x13aa>
  416414:	cmp    WORD PTR [rsi+0x10],0x1
  416419:	ja     41651a <__flatcc_fb_gen_c_json_printer@@Base+0x13aa>
  41641f:	vxorps xmm0,xmm0,xmm0
  416423:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  41642c:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  416435:	vmovaps YMMWORD PTR [rsp+0xa0],ymm0
  41643e:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  416447:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  41644d:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  416453:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  416459:	mov    QWORD PTR [rsp+0x100],0x0
  416465:	mov    rdi,QWORD PTR [rsi+0x18]
  416469:	lea    r14,[rsp+0x20]
  41646e:	mov    rdx,r14
  416471:	vzeroupper 
  416474:	call   407460 <__flatcc_fb_scoped_symbol_name@@Base>
  416479:	mov    rbx,QWORD PTR [rsp+0x18]
  41647e:	mov    rdi,QWORD PTR [rbx+0xd0]
  416485:	mov    rax,QWORD PTR [rbx+0xd8]
  41648c:	mov    rdx,QWORD PTR [rax+0x110]
  416493:	lea    rsi,[rip+0x2e6f9]        # 444b93 <_IO_stdin_used@@Base+0x17b93>
  41649a:	xor    eax,eax
  41649c:	call   406170 <fprintf@plt>
  4164a1:	mov    rdi,QWORD PTR [rbx+0xd0]
  4164a8:	lea    rsi,[rip+0x2e73a]        # 444be9 <_IO_stdin_used@@Base+0x17be9>
  4164af:	mov    rdx,r14
  4164b2:	xor    eax,eax
  4164b4:	call   406170 <fprintf@plt>
  4164b9:	mov    rcx,QWORD PTR [rbx+0xd0]
  4164c0:	mov    rax,QWORD PTR [rbx+0xd8]
  4164c7:	cmp    WORD PTR [rax+0x20],0x2
  4164cc:	jne    4164eb <__flatcc_fb_gen_c_json_printer@@Base+0x137b>
  4164ce:	mov    edx,DWORD PTR [rax+0x18]
  4164d1:	mov    rax,QWORD PTR [rax+0x10]
  4164d5:	lea    rsi,[rip+0x2e7c3]        # 444c9f <_IO_stdin_used@@Base+0x17c9f>
  4164dc:	mov    rdi,rcx
  4164df:	mov    rcx,rax
  4164e2:	xor    eax,eax
  4164e4:	call   406170 <fprintf@plt>
  4164e9:	jmp    416501 <__flatcc_fb_gen_c_json_printer@@Base+0x1391>
  4164eb:	lea    rdi,[rip+0x2e7b7]        # 444ca9 <_IO_stdin_used@@Base+0x17ca9>
  4164f2:	mov    esi,0x3
  4164f7:	mov    edx,0x1
  4164fc:	call   406220 <fwrite@plt>
  416501:	mov    rcx,QWORD PTR [r15]
  416504:	lea    rdi,[rip+0x2e684]        # 444b8f <_IO_stdin_used@@Base+0x17b8f>
  41650b:	mov    esi,0x3
  416510:	mov    edx,0x1
  416515:	call   406220 <fwrite@plt>
  41651a:	mov    rax,QWORD PTR [rsp+0x18]
  41651f:	mov    rax,QWORD PTR [rax+0xe0]
  416526:	cmp    DWORD PTR [rax+0xac],0x0
  41652d:	je     416548 <__flatcc_fb_gen_c_json_printer@@Base+0x13d8>
  41652f:	mov    rcx,QWORD PTR [r15]
  416532:	lea    rdi,[rip+0x1ddb2]        # 4342eb <_IO_stdin_used@@Base+0x72eb>
  416539:	mov    esi,0x24
  41653e:	mov    edx,0x1
  416543:	call   406220 <fwrite@plt>
  416548:	mov    rax,QWORD PTR [rsp+0x18]
  41654d:	mov    rdi,QWORD PTR [rax+0xd0]
  416554:	mov    rax,QWORD PTR [rax+0xd8]
  41655b:	mov    rdx,QWORD PTR [rax+0x118]
  416562:	lea    rsi,[rip+0x2e744]        # 444cad <_IO_stdin_used@@Base+0x17cad>
  416569:	xor    eax,eax
  41656b:	call   406170 <fprintf@plt>
  416570:	xor    eax,eax
  416572:	lea    rsp,[rbp-0x28]
  416576:	pop    rbx
  416577:	pop    r12
  416579:	pop    r13
  41657b:	pop    r14
  41657d:	pop    r15
  41657f:	pop    rbp
  416580:	ret    
  416581:	mov    rax,QWORD PTR [rip+0x39a70]        # 44fff8 <stderr@GLIBC_2.2.5>
  416588:	mov    rdi,QWORD PTR [rax]
  41658b:	lea    rsi,[rip+0x17ea2]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  416592:	lea    rbx,[rip+0x2d65e]        # 443bf7 <_IO_stdin_used@@Base+0x16bf7>
  416599:	lea    r8,[rip+0x2dab2]        # 444052 <_IO_stdin_used@@Base+0x17052>
  4165a0:	mov    rdx,rbx
  4165a3:	mov    ecx,0xfb
  4165a8:	xor    eax,eax
  4165aa:	call   406170 <fprintf@plt>
  4165af:	lea    rdi,[rip+0x28de5]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  4165b6:	lea    rcx,[rip+0x2dabc]        # 444079 <_IO_stdin_used@@Base+0x17079>
  4165bd:	mov    rsi,rbx
  4165c0:	mov    edx,0xfb
  4165c5:	call   4060f0 <__assert_fail@plt>
  4165ca:	mov    rax,QWORD PTR [rip+0x39a27]        # 44fff8 <stderr@GLIBC_2.2.5>
  4165d1:	mov    rdi,QWORD PTR [rax]
  4165d4:	lea    rsi,[rip+0x17e59]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  4165db:	lea    rbx,[rip+0x2d615]        # 443bf7 <_IO_stdin_used@@Base+0x16bf7>
  4165e2:	lea    r8,[rip+0x2d67e]        # 443c67 <_IO_stdin_used@@Base+0x16c67>
  4165e9:	mov    rdx,rbx
  4165ec:	mov    ecx,0x9d
  4165f1:	xor    eax,eax
  4165f3:	call   406170 <fprintf@plt>
  4165f8:	lea    rdi,[rip+0x28d9c]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  4165ff:	lea    rcx,[rip+0x2d69b]        # 443ca1 <_IO_stdin_used@@Base+0x16ca1>
  416606:	mov    rsi,rbx
  416609:	mov    edx,0x9d
  41660e:	call   4060f0 <__assert_fail@plt>
  416613:	mov    rax,QWORD PTR [rip+0x399de]        # 44fff8 <stderr@GLIBC_2.2.5>
  41661a:	mov    rdi,QWORD PTR [rax]
  41661d:	lea    rsi,[rip+0x17e10]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  416624:	lea    rbx,[rip+0x2d5cc]        # 443bf7 <_IO_stdin_used@@Base+0x16bf7>
  41662b:	lea    r8,[rip+0x2d635]        # 443c67 <_IO_stdin_used@@Base+0x16c67>
  416632:	mov    rdx,rbx
  416635:	mov    ecx,0x86
  41663a:	xor    eax,eax
  41663c:	call   406170 <fprintf@plt>
  416641:	lea    rdi,[rip+0x28d53]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  416648:	lea    rcx,[rip+0x2d652]        # 443ca1 <_IO_stdin_used@@Base+0x16ca1>
  41664f:	mov    rsi,rbx
  416652:	mov    edx,0x86
  416657:	call   4060f0 <__assert_fail@plt>
  41665c:	mov    rax,QWORD PTR [rip+0x39995]        # 44fff8 <stderr@GLIBC_2.2.5>
  416663:	mov    rdi,QWORD PTR [rax]
  416666:	lea    rsi,[rip+0x17dc7]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  41666d:	lea    rbx,[rip+0x2d583]        # 443bf7 <_IO_stdin_used@@Base+0x16bf7>
  416674:	lea    r8,[rip+0x2d9d7]        # 444052 <_IO_stdin_used@@Base+0x17052>
  41667b:	mov    rdx,rbx
  41667e:	mov    ecx,0xf0
  416683:	xor    eax,eax
  416685:	call   406170 <fprintf@plt>
  41668a:	lea    rdi,[rip+0x28d0a]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  416691:	lea    rcx,[rip+0x2d9e1]        # 444079 <_IO_stdin_used@@Base+0x17079>
  416698:	mov    rsi,rbx
  41669b:	mov    edx,0xf0
  4166a0:	call   4060f0 <__assert_fail@plt>
  4166a5:	mov    rax,QWORD PTR [rip+0x3994c]        # 44fff8 <stderr@GLIBC_2.2.5>
  4166ac:	mov    rdi,QWORD PTR [rax]
  4166af:	lea    rsi,[rip+0x17d7e]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  4166b6:	lea    rbx,[rip+0x1e529]        # 434be6 <_IO_stdin_used@@Base+0x7be6>
  4166bd:	lea    r8,[rip+0x1e585]        # 434c49 <_IO_stdin_used@@Base+0x7c49>
  4166c4:	mov    rdx,rbx
  4166c7:	mov    ecx,0x60
  4166cc:	xor    eax,eax
  4166ce:	call   406170 <fprintf@plt>
  4166d3:	lea    rdi,[rip+0x28cc1]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  4166da:	lea    rcx,[rip+0x1ee98]        # 435579 <_IO_stdin_used@@Base+0x8579>
  4166e1:	mov    rsi,rbx
  4166e4:	mov    edx,0x60
  4166e9:	call   4060f0 <__assert_fail@plt>
  4166ee:	mov    rax,QWORD PTR [rip+0x39903]        # 44fff8 <stderr@GLIBC_2.2.5>
  4166f5:	mov    rdi,QWORD PTR [rax]
  4166f8:	lea    rsi,[rip+0x17d35]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  4166ff:	lea    rbx,[rip+0x2d4f1]        # 443bf7 <_IO_stdin_used@@Base+0x16bf7>
  416706:	lea    r8,[rip+0x2e36c]        # 444a79 <_IO_stdin_used@@Base+0x17a79>
  41670d:	mov    rdx,rbx
  416710:	mov    ecx,0x21f
  416715:	xor    eax,eax
  416717:	call   406170 <fprintf@plt>
  41671c:	lea    rdi,[rip+0x28c78]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  416723:	lea    rcx,[rip+0x2dc60]        # 44438a <_IO_stdin_used@@Base+0x1738a>
  41672a:	mov    rsi,rbx
  41672d:	mov    edx,0x21f
  416732:	call   4060f0 <__assert_fail@plt>
  416737:	mov    rax,QWORD PTR [rip+0x398ba]        # 44fff8 <stderr@GLIBC_2.2.5>
  41673e:	mov    rdi,QWORD PTR [rax]
  416741:	lea    rsi,[rip+0x17cec]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  416748:	lea    rbx,[rip+0x2d4a8]        # 443bf7 <_IO_stdin_used@@Base+0x16bf7>
  41674f:	lea    r8,[rip+0x2be9c]        # 4425f2 <_IO_stdin_used@@Base+0x155f2>
  416756:	mov    rdx,rbx
  416759:	mov    ecx,0x196
  41675e:	xor    eax,eax
  416760:	call   406170 <fprintf@plt>
  416765:	lea    rdi,[rip+0x28c2f]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  41676c:	lea    rcx,[rip+0x2dc17]        # 44438a <_IO_stdin_used@@Base+0x1738a>
  416773:	mov    rsi,rbx
  416776:	mov    edx,0x196
  41677b:	call   4060f0 <__assert_fail@plt>
  416780:	mov    rax,QWORD PTR [rip+0x39871]        # 44fff8 <stderr@GLIBC_2.2.5>
  416787:	mov    rdi,QWORD PTR [rax]
  41678a:	lea    rsi,[rip+0x17ca3]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  416791:	lea    rbx,[rip+0x2d45f]        # 443bf7 <_IO_stdin_used@@Base+0x16bf7>
  416798:	lea    r8,[rip+0x2e115]        # 4448b4 <_IO_stdin_used@@Base+0x178b4>
  41679f:	mov    rdx,rbx
  4167a2:	mov    ecx,0x1f8
  4167a7:	xor    eax,eax
  4167a9:	call   406170 <fprintf@plt>
  4167ae:	lea    rdi,[rip+0x28be6]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  4167b5:	lea    rcx,[rip+0x2dbce]        # 44438a <_IO_stdin_used@@Base+0x1738a>
  4167bc:	mov    rsi,rbx
  4167bf:	mov    edx,0x1f8
  4167c4:	call   4060f0 <__assert_fail@plt>
  4167c9:	mov    rax,QWORD PTR [rip+0x39828]        # 44fff8 <stderr@GLIBC_2.2.5>
  4167d0:	mov    rdi,QWORD PTR [rax]
  4167d3:	lea    rsi,[rip+0x17c5a]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  4167da:	lea    rbx,[rip+0x2d416]        # 443bf7 <_IO_stdin_used@@Base+0x16bf7>
  4167e1:	lea    r8,[rip+0x2df85]        # 44476d <_IO_stdin_used@@Base+0x1776d>
  4167e8:	mov    rdx,rbx
  4167eb:	mov    ecx,0x1e3
  4167f0:	xor    eax,eax
  4167f2:	call   406170 <fprintf@plt>
  4167f7:	lea    rdi,[rip+0x28b9d]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  4167fe:	lea    rcx,[rip+0x2db85]        # 44438a <_IO_stdin_used@@Base+0x1738a>
  416805:	mov    rsi,rbx
  416808:	mov    edx,0x1e3
  41680d:	call   4060f0 <__assert_fail@plt>
  416812:	mov    rax,QWORD PTR [rip+0x397df]        # 44fff8 <stderr@GLIBC_2.2.5>
  416819:	mov    rdi,QWORD PTR [rax]
  41681c:	lea    rsi,[rip+0x17c11]        # 42e434 <_IO_stdin_used@@Base+0x1434>
  416823:	lea    rbx,[rip+0x2d3cd]        # 443bf7 <_IO_stdin_used@@Base+0x16bf7>
  41682a:	lea    r8,[rip+0x2db2f]        # 444360 <_IO_stdin_used@@Base+0x17360>
  416831:	mov    rdx,rbx
  416834:	mov    ecx,0x169
  416839:	xor    eax,eax
  41683b:	call   406170 <fprintf@plt>
  416840:	lea    rdi,[rip+0x28b54]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  416847:	lea    rcx,[rip+0x2db3c]        # 44438a <_IO_stdin_used@@Base+0x1738a>
  41684e:	mov    rsi,rbx
  416851:	mov    edx,0x169
  416856:	call   4060f0 <__assert_fail@plt>
  41685b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000416860 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>:
  416860:	push   r15
  416862:	push   r14
  416864:	push   r13
  416866:	push   r12
  416868:	push   rbx
  416869:	sub    rsp,0x190
  416870:	mov    r14,rcx
  416873:	mov    r15,rdx
  416876:	mov    r12,rsi
  416879:	mov    rbx,rdi
  41687c:	lea    r13,[rsp+0x8]
  416881:	mov    rdi,r13
  416884:	call   426860 <flatcc_builder_init@@Base>
  416889:	mov    rdi,r13
  41688c:	mov    rsi,rbx
  41688f:	mov    rdx,r12
  416892:	call   4168e0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x80>
  416897:	mov    rdx,QWORD PTR [r14]
  41689a:	mov    rdi,r13
  41689d:	mov    rsi,r15
  4168a0:	call   42ae80 <flatcc_builder_copy_buffer@@Base>
  4168a5:	test   rax,rax
  4168a8:	je     4168b2 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x52>
  4168aa:	mov    rdi,r15
  4168ad:	call   417870 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1010>
  4168b2:	lea    rbx,[rsp+0x8]
  4168b7:	mov    rdi,rbx
  4168ba:	call   42ad80 <flatcc_builder_get_buffer_size@@Base>
  4168bf:	mov    QWORD PTR [r14],rax
  4168c2:	mov    rdi,rbx
  4168c5:	call   426c20 <flatcc_builder_clear@@Base>
  4168ca:	mov    rax,r15
  4168cd:	add    rsp,0x190
  4168d4:	pop    rbx
  4168d5:	pop    r12
  4168d7:	pop    r13
  4168d9:	pop    r14
  4168db:	pop    r15
  4168dd:	ret    
  4168de:	xchg   ax,ax
  4168e0:	push   rbp
  4168e1:	mov    rbp,rsp
  4168e4:	push   r15
  4168e6:	push   r14
  4168e8:	push   r13
  4168ea:	push   r12
  4168ec:	push   rbx
  4168ed:	and    rsp,0xffffffffffffffe0
  4168f1:	sub    rsp,0x100
  4168f8:	mov    QWORD PTR [rsp+0x40],rsi
  4168fd:	mov    eax,DWORD PTR [rsi+0xd8]
  416903:	mov    rcx,QWORD PTR [rdx+0x68]
  416907:	vxorps xmm0,xmm0,xmm0
  41690b:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  416911:	mov    QWORD PTR [rsp+0x30],rdi
  416916:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  41691f:	mov    QWORD PTR [rsp+0xa0],0x0
  41692b:	mov    DWORD PTR [rsp+0x60],eax
  41692f:	mov    QWORD PTR [rsp+0x48],rdx
  416934:	mov    QWORD PTR [rsp+0xa8],rdx
  41693c:	lea    rsi,[rip+0x137d]        # 417cc0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1f0>
  416943:	lea    rdx,[rsp+0x60]
  416948:	mov    QWORD PTR [rsp+0x38],rcx
  41694d:	mov    rdi,rcx
  416950:	vzeroupper 
  416953:	call   41a5a0 <fb_scope_table_visit@@Base>
  416958:	movsxd r15,DWORD PTR [rsp+0x64]
  41695d:	mov    esi,0x10
  416962:	mov    rdi,r15
  416965:	call   406140 <calloc@plt>
  41696a:	mov    r14,rax
  41696d:	mov    QWORD PTR [rsp+0x78],rax
  416972:	mov    ebx,DWORD PTR [rsp+0x68]
  416976:	movsxd rdi,ebx
  416979:	mov    esi,0x10
  41697e:	call   406140 <calloc@plt>
  416983:	mov    r13,rax
  416986:	mov    QWORD PTR [rsp+0x80],rax
  41698e:	mov    r12,QWORD PTR [rsp+0x70]
  416993:	mov    rdi,r12
  416996:	call   4061a0 <malloc@plt>
  41699b:	mov    QWORD PTR [rsp+0x88],rax
  4169a3:	mov    QWORD PTR [rsp+0x90],r14
  4169ab:	mov    QWORD PTR [rsp+0x98],r13
  4169b3:	mov    QWORD PTR [rsp+0xa0],rax
  4169bb:	test   r15,r15
  4169be:	jle    4169c5 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x165>
  4169c0:	test   r14,r14
  4169c3:	je     4169ed <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x18d>
  4169c5:	test   ebx,ebx
  4169c7:	jle    4169ce <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x16e>
  4169c9:	test   r13,r13
  4169cc:	je     4169d8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x178>
  4169ce:	test   r12,r12
  4169d1:	je     416a41 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1e1>
  4169d3:	test   rax,rax
  4169d6:	jne    416a41 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1e1>
  4169d8:	test   r14,r14
  4169db:	je     4169ed <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x18d>
  4169dd:	mov    rdi,r14
  4169e0:	call   406040 <free@plt>
  4169e5:	mov    r13,QWORD PTR [rsp+0x80]
  4169ed:	test   r13,r13
  4169f0:	je     4169fa <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x19a>
  4169f2:	mov    rdi,r13
  4169f5:	call   406040 <free@plt>
  4169fa:	mov    rdi,QWORD PTR [rsp+0x88]
  416a02:	test   rdi,rdi
  416a05:	je     416a0c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1ac>
  416a07:	call   406040 <free@plt>
  416a0c:	vxorps xmm0,xmm0,xmm0
  416a10:	vmovups YMMWORD PTR [rsp+0x90],ymm0
  416a19:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  416a22:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  416a28:	mov    ebx,0xffffffff
  416a2d:	mov    eax,ebx
  416a2f:	lea    rsp,[rbp-0x28]
  416a33:	pop    rbx
  416a34:	pop    r12
  416a36:	pop    r13
  416a38:	pop    r14
  416a3a:	pop    r15
  416a3c:	pop    rbp
  416a3d:	vzeroupper 
  416a40:	ret    
  416a41:	lea    rsi,[rip+0x1298]        # 417ce0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x210>
  416a48:	lea    rdx,[rsp+0x60]
  416a4d:	mov    rdi,QWORD PTR [rsp+0x38]
  416a52:	call   41a5a0 <fb_scope_table_visit@@Base>
  416a57:	mov    r15,QWORD PTR [rsp+0x78]
  416a5c:	movsxd rbx,DWORD PTR [rsp+0x64]
  416a61:	lea    rcx,[rip+0x1448]        # 417eb0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3e0>
  416a68:	mov    edx,0x10
  416a6d:	mov    rdi,r15
  416a70:	mov    rsi,rbx
  416a73:	call   406080 <qsort@plt>
  416a78:	test   rbx,rbx
  416a7b:	jle    416b56 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x2f6>
  416a81:	mov    edx,ebx
  416a83:	lea    rcx,[rdx-0x1]
  416a87:	mov    eax,edx
  416a89:	and    eax,0x7
  416a8c:	cmp    rcx,0x7
  416a90:	jae    416aa2 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x242>
  416a92:	xor    ecx,ecx
  416a94:	test   rax,rax
  416a97:	jne    416b35 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x2d5>
  416a9d:	jmp    416b56 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x2f6>
  416aa2:	lea    rsi,[r15+0x70]
  416aa6:	sub    rdx,rax
  416aa9:	xor    ecx,ecx
  416aab:	nop    DWORD PTR [rax+rax*1+0x0]
  416ab0:	mov    rdi,QWORD PTR [rsi-0x70]
  416ab4:	mov    QWORD PTR [rdi+0xc8],rcx
  416abb:	mov    rdi,QWORD PTR [rsi-0x60]
  416abf:	lea    rbx,[rcx+0x1]
  416ac3:	mov    QWORD PTR [rdi+0xc8],rbx
  416aca:	mov    rdi,QWORD PTR [rsi-0x50]
  416ace:	lea    rbx,[rcx+0x2]
  416ad2:	mov    QWORD PTR [rdi+0xc8],rbx
  416ad9:	mov    rdi,QWORD PTR [rsi-0x40]
  416add:	lea    rbx,[rcx+0x3]
  416ae1:	mov    QWORD PTR [rdi+0xc8],rbx
  416ae8:	mov    rdi,QWORD PTR [rsi-0x30]
  416aec:	lea    rbx,[rcx+0x4]
  416af0:	mov    QWORD PTR [rdi+0xc8],rbx
  416af7:	mov    rdi,QWORD PTR [rsi-0x20]
  416afb:	lea    rbx,[rcx+0x5]
  416aff:	mov    QWORD PTR [rdi+0xc8],rbx
  416b06:	mov    rdi,QWORD PTR [rsi-0x10]
  416b0a:	lea    rbx,[rcx+0x6]
  416b0e:	mov    QWORD PTR [rdi+0xc8],rbx
  416b15:	mov    rdi,QWORD PTR [rsi]
  416b18:	lea    rbx,[rcx+0x7]
  416b1c:	mov    QWORD PTR [rdi+0xc8],rbx
  416b23:	add    rcx,0x8
  416b27:	sub    rsi,0xffffffffffffff80
  416b2b:	cmp    rdx,rcx
  416b2e:	jne    416ab0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x250>
  416b30:	test   rax,rax
  416b33:	je     416b56 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x2f6>
  416b35:	mov    rdx,rcx
  416b38:	shl    rdx,0x4
  416b3c:	add    r15,rdx
  416b3f:	nop
  416b40:	mov    rdx,QWORD PTR [r15]
  416b43:	mov    QWORD PTR [rdx+0xc8],rcx
  416b4a:	inc    rcx
  416b4d:	add    r15,0x10
  416b51:	dec    rax
  416b54:	jne    416b40 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x2e0>
  416b56:	mov    r15,QWORD PTR [rsp+0x80]
  416b5e:	movsxd rbx,DWORD PTR [rsp+0x68]
  416b63:	lea    rcx,[rip+0x1346]        # 417eb0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3e0>
  416b6a:	mov    edx,0x10
  416b6f:	mov    rdi,r15
  416b72:	mov    rsi,rbx
  416b75:	call   406080 <qsort@plt>
  416b7a:	test   rbx,rbx
  416b7d:	jle    416c56 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x3f6>
  416b83:	mov    edx,ebx
  416b85:	lea    rcx,[rdx-0x1]
  416b89:	mov    eax,edx
  416b8b:	and    eax,0x7
  416b8e:	cmp    rcx,0x7
  416b92:	jae    416ba4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x344>
  416b94:	xor    ecx,ecx
  416b96:	test   rax,rax
  416b99:	jne    416c35 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x3d5>
  416b9f:	jmp    416c56 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x3f6>
  416ba4:	lea    rsi,[r15+0x70]
  416ba8:	sub    rdx,rax
  416bab:	xor    ecx,ecx
  416bad:	nop    DWORD PTR [rax]
  416bb0:	mov    rdi,QWORD PTR [rsi-0x70]
  416bb4:	mov    QWORD PTR [rdi+0xc8],rcx
  416bbb:	mov    rdi,QWORD PTR [rsi-0x60]
  416bbf:	lea    rbx,[rcx+0x1]
  416bc3:	mov    QWORD PTR [rdi+0xc8],rbx
  416bca:	mov    rdi,QWORD PTR [rsi-0x50]
  416bce:	lea    rbx,[rcx+0x2]
  416bd2:	mov    QWORD PTR [rdi+0xc8],rbx
  416bd9:	mov    rdi,QWORD PTR [rsi-0x40]
  416bdd:	lea    rbx,[rcx+0x3]
  416be1:	mov    QWORD PTR [rdi+0xc8],rbx
  416be8:	mov    rdi,QWORD PTR [rsi-0x30]
  416bec:	lea    rbx,[rcx+0x4]
  416bf0:	mov    QWORD PTR [rdi+0xc8],rbx
  416bf7:	mov    rdi,QWORD PTR [rsi-0x20]
  416bfb:	lea    rbx,[rcx+0x5]
  416bff:	mov    QWORD PTR [rdi+0xc8],rbx
  416c06:	mov    rdi,QWORD PTR [rsi-0x10]
  416c0a:	lea    rbx,[rcx+0x6]
  416c0e:	mov    QWORD PTR [rdi+0xc8],rbx
  416c15:	mov    rdi,QWORD PTR [rsi]
  416c18:	lea    rbx,[rcx+0x7]
  416c1c:	mov    QWORD PTR [rdi+0xc8],rbx
  416c23:	add    rcx,0x8
  416c27:	sub    rsi,0xffffffffffffff80
  416c2b:	cmp    rdx,rcx
  416c2e:	jne    416bb0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x350>
  416c30:	test   rax,rax
  416c33:	je     416c56 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x3f6>
  416c35:	mov    rdx,rcx
  416c38:	shl    rdx,0x4
  416c3c:	add    r15,rdx
  416c3f:	nop
  416c40:	mov    rdx,QWORD PTR [r15]
  416c43:	mov    QWORD PTR [rdx+0xc8],rcx
  416c4a:	inc    rcx
  416c4d:	add    r15,0x10
  416c51:	dec    rax
  416c54:	jne    416c40 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x3e0>
  416c56:	movsxd rdi,DWORD PTR [rsp+0x64]
  416c5b:	test   rdi,rdi
  416c5e:	jle    416c7c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x41c>
  416c60:	shl    rdi,0x2
  416c64:	call   4061a0 <malloc@plt>
  416c69:	test   rax,rax
  416c6c:	mov    r12,QWORD PTR [rsp+0x30]
  416c71:	je     41775d <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xefd>
  416c77:	mov    r15,rax
  416c7a:	jmp    416c84 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x424>
  416c7c:	xor    r15d,r15d
  416c7f:	mov    r12,QWORD PTR [rsp+0x30]
  416c84:	mov    rax,QWORD PTR [rsp+0x40]
  416c89:	cmp    DWORD PTR [rax+0xdc],0x0
  416c90:	je     416ca5 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x445>
  416c92:	lea    rsi,[rip+0x2e0f9]        # 444d92 <_IO_stdin_used@@Base+0x17d92>
  416c99:	mov    rdi,r12
  416c9c:	xor    edx,edx
  416c9e:	mov    ecx,0x2
  416ca3:	jmp    416cb3 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x453>
  416ca5:	lea    rsi,[rip+0x2e0e6]        # 444d92 <_IO_stdin_used@@Base+0x17d92>
  416cac:	mov    rdi,r12
  416caf:	xor    edx,edx
  416cb1:	xor    ecx,ecx
  416cb3:	call   4275f0 <flatcc_builder_start_buffer@@Base>
  416cb8:	test   eax,eax
  416cba:	jne    416cc9 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x469>
  416cbc:	mov    rdi,r12
  416cbf:	mov    esi,0x5
  416cc4:	call   428890 <flatcc_builder_start_table@@Base>
  416cc9:	mov    rcx,QWORD PTR [rsp+0x48]
  416cce:	cmp    WORD PTR [rcx+0x20],0x2
  416cd3:	jne    416d10 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4b0>
  416cd5:	mov    rsi,QWORD PTR [rcx+0x10]
  416cd9:	mov    rax,QWORD PTR [rsp+0x48]
  416cde:	movsxd rdx,DWORD PTR [rax+0x18]
  416ce2:	mov    rdi,r12
  416ce5:	call   42a9b0 <flatcc_builder_create_string@@Base>
  416cea:	mov    rcx,QWORD PTR [rsp+0x48]
  416cef:	test   eax,eax
  416cf1:	je     416d10 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4b0>
  416cf3:	mov    r14d,eax
  416cf6:	mov    rdi,r12
  416cf9:	mov    esi,0x2
  416cfe:	call   429ab0 <flatcc_builder_table_add_offset@@Base>
  416d03:	mov    rcx,QWORD PTR [rsp+0x48]
  416d08:	test   rax,rax
  416d0b:	je     416d10 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4b0>
  416d0d:	mov    DWORD PTR [rax],r14d
  416d10:	cmp    WORD PTR [rcx+0x38],0x2
  416d15:	jne    416d48 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4e8>
  416d17:	mov    rax,QWORD PTR [rsp+0x48]
  416d1c:	mov    rsi,QWORD PTR [rax+0x28]
  416d20:	movsxd rdx,DWORD PTR [rax+0x30]
  416d24:	mov    rdi,r12
  416d27:	call   42a9b0 <flatcc_builder_create_string@@Base>
  416d2c:	test   eax,eax
  416d2e:	je     416d48 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4e8>
  416d30:	mov    r14d,eax
  416d33:	mov    rdi,r12
  416d36:	mov    esi,0x3
  416d3b:	call   429ab0 <flatcc_builder_table_add_offset@@Base>
  416d40:	test   rax,rax
  416d43:	je     416d48 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x4e8>
  416d45:	mov    DWORD PTR [rax],r14d
  416d48:	mov    eax,DWORD PTR [rsp+0x64]
  416d4c:	mov    QWORD PTR [rsp+0xd0],rax
  416d54:	test   eax,eax
  416d56:	mov    QWORD PTR [rsp+0xc0],r15
  416d5e:	jle    4173b8 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xb58>
  416d64:	mov    rax,QWORD PTR [rsp+0x78]
  416d69:	mov    QWORD PTR [rsp+0xd8],rax
  416d71:	xor    eax,eax
  416d73:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416d7d:	nop    DWORD PTR [rax]
  416d80:	mov    QWORD PTR [rsp+0xe0],rax
  416d88:	mov    rbx,rax
  416d8b:	shl    rbx,0x4
  416d8f:	mov    r14,QWORD PTR [rsp+0xd8]
  416d97:	mov    r12,QWORD PTR [r14+rbx*1]
  416d9b:	mov    rdi,QWORD PTR [rsp+0x30]
  416da0:	mov    esi,0x5
  416da5:	call   428890 <flatcc_builder_start_table@@Base>
  416daa:	mov    rsi,QWORD PTR [r14+rbx*1+0x8]
  416daf:	mov    rbx,QWORD PTR [rsp+0x30]
  416db4:	mov    rdi,rbx
  416db7:	call   42aae0 <flatcc_builder_create_string_str@@Base>
  416dbc:	test   eax,eax
  416dbe:	je     416dd5 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x575>
  416dc0:	mov    r14d,eax
  416dc3:	mov    rdi,rbx
  416dc6:	xor    esi,esi
  416dc8:	call   429ab0 <flatcc_builder_table_add_offset@@Base>
  416dcd:	test   rax,rax
  416dd0:	je     416dd5 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x575>
  416dd2:	mov    DWORD PTR [rax],r14d
  416dd5:	mov    rdi,rbx
  416dd8:	call   4284a0 <flatcc_builder_start_offset_vector@@Base>
  416ddd:	mov    r14,QWORD PTR [r12+0x28]
  416de2:	test   r14,r14
  416de5:	je     4172c0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa60>
  416deb:	xor    eax,eax
  416ded:	mov    QWORD PTR [rsp+0x40],r12
  416df2:	jmp    416e16 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x5b6>
  416df4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  416dfe:	xchg   ax,ax
  416e00:	mov    eax,DWORD PTR [rsp+0xc8]
  416e07:	or     al,r15b
  416e0a:	mov    r14,QWORD PTR [r14]
  416e0d:	test   r14,r14
  416e10:	je     4172c0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa60>
  416e16:	mov    DWORD PTR [rsp+0xc8],eax
  416e1d:	test   al,al
  416e1f:	sete   r15b
  416e23:	mov    eax,DWORD PTR [r14+0x70]
  416e27:	test   al,al
  416e29:	sets   r12b
  416e2d:	mov    DWORD PTR [rsp+0x5c],eax
  416e31:	mov    r13d,eax
  416e34:	shr    r13b,0x2
  416e38:	and    r13b,0x1
  416e3c:	lea    rax,[r14+0x18]
  416e40:	mov    QWORD PTR [rsp+0x38],rax
  416e45:	cmp    WORD PTR [r14+0x28],0xe
  416e4b:	jne    416fa0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x740>
  416e51:	mov    rax,QWORD PTR [rsp+0x38]
  416e56:	mov    rax,QWORD PTR [rax]
  416e59:	cmp    WORD PTR [rax+0x10],0x4
  416e5e:	jne    416fa0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x740>
  416e64:	mov    BYTE PTR [rsp+0x50],r15b
  416e69:	mov    rdi,rbx
  416e6c:	mov    esi,0x9
  416e71:	call   428890 <flatcc_builder_start_table@@Base>
  416e76:	mov    rdi,rbx
  416e79:	call   428720 <flatcc_builder_start_string@@Base>
  416e7e:	mov    rax,QWORD PTR [r14+0x8]
  416e82:	mov    rsi,QWORD PTR [rax]
  416e85:	mov    rdx,QWORD PTR [rax+0x8]
  416e89:	mov    rdi,rbx
  416e8c:	call   428130 <flatcc_builder_append_string@@Base>
  416e91:	mov    edx,0x5
  416e96:	mov    rdi,rbx
  416e99:	lea    rsi,[rip+0x1daac]        # 43494c <_IO_stdin_used@@Base+0x794c>
  416ea0:	call   428130 <flatcc_builder_append_string@@Base>
  416ea5:	mov    rdi,rbx
  416ea8:	call   42ab50 <flatcc_builder_end_string@@Base>
  416ead:	test   eax,eax
  416eaf:	je     416ec6 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x666>
  416eb1:	mov    r15d,eax
  416eb4:	mov    rdi,rbx
  416eb7:	xor    esi,esi
  416eb9:	call   429ab0 <flatcc_builder_table_add_offset@@Base>
  416ebe:	test   rax,rax
  416ec1:	je     416ec6 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x666>
  416ec3:	mov    DWORD PTR [rax],r15d
  416ec6:	mov    rdi,rbx
  416ec9:	mov    esi,0x3
  416ece:	call   428890 <flatcc_builder_start_table@@Base>
  416ed3:	test   eax,eax
  416ed5:	movzx  r15d,BYTE PTR [rsp+0x50]
  416edb:	je     4170be <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x85e>
  416ee1:	mov    ebx,DWORD PTR [r14+0x88]
  416ee8:	add    ebx,ebx
  416eea:	add    bx,0x2
  416eee:	je     416f11 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x6b1>
  416ef0:	mov    edx,0x2
  416ef5:	mov    rdi,QWORD PTR [rsp+0x30]
  416efa:	mov    esi,0x3
  416eff:	mov    ecx,0x2
  416f04:	call   429c10 <flatcc_builder_table_add@@Base>
  416f09:	test   rax,rax
  416f0c:	je     416f11 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x6b1>
  416f0e:	mov    WORD PTR [rax],bx
  416f11:	movzx  ebx,WORD PTR [r14+0x88]
  416f19:	dec    bx
  416f1c:	je     416f3f <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x6df>
  416f1e:	mov    edx,0x2
  416f23:	mov    rdi,QWORD PTR [rsp+0x30]
  416f28:	mov    esi,0x2
  416f2d:	mov    ecx,0x2
  416f32:	call   429c10 <flatcc_builder_table_add@@Base>
  416f37:	test   rax,rax
  416f3a:	je     416f3f <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x6df>
  416f3c:	mov    WORD PTR [rax],bx
  416f3f:	test   r13b,r13b
  416f42:	mov    rbx,QWORD PTR [rsp+0x30]
  416f47:	je     416f68 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x708>
  416f49:	mov    edx,0x1
  416f4e:	mov    rdi,rbx
  416f51:	mov    esi,0x6
  416f56:	mov    ecx,0x1
  416f5b:	call   429c10 <flatcc_builder_table_add@@Base>
  416f60:	test   rax,rax
  416f63:	je     416f68 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x708>
  416f65:	mov    BYTE PTR [rax],r13b
  416f68:	mov    rdi,rbx
  416f6b:	lea    rsi,[rip+0x2ddd0]        # 444d42 <_IO_stdin_used@@Base+0x17d42>
  416f72:	mov    edx,0x2
  416f77:	call   429230 <flatcc_builder_check_required@@Base>
  416f7c:	test   eax,eax
  416f7e:	je     4177b4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf54>
  416f84:	mov    rdi,rbx
  416f87:	call   4292a0 <flatcc_builder_end_table@@Base>
  416f8c:	test   eax,eax
  416f8e:	je     416fa0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x740>
  416f90:	mov    rdi,rbx
  416f93:	mov    esi,eax
  416f95:	call   427e70 <flatcc_builder_offset_vector_push@@Base>
  416f9a:	nop    WORD PTR [rax+rax*1+0x0]
  416fa0:	mov    BYTE PTR [rsp+0x50],r13b
  416fa5:	mov    r13d,r12d
  416fa8:	mov    r12d,r15d
  416fab:	mov    rdi,rbx
  416fae:	mov    esi,0x9
  416fb3:	call   428890 <flatcc_builder_start_table@@Base>
  416fb8:	mov    rax,QWORD PTR [r14+0x8]
  416fbc:	mov    rsi,QWORD PTR [rax]
  416fbf:	mov    rdx,QWORD PTR [rax+0x8]
  416fc3:	mov    rdi,rbx
  416fc6:	call   42a9b0 <flatcc_builder_create_string@@Base>
  416fcb:	mov    r15,rbx
  416fce:	test   eax,eax
  416fd0:	je     416fe5 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x785>
  416fd2:	mov    ebx,eax
  416fd4:	mov    rdi,r15
  416fd7:	xor    esi,esi
  416fd9:	call   429ab0 <flatcc_builder_table_add_offset@@Base>
  416fde:	test   rax,rax
  416fe1:	je     416fe5 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x785>
  416fe3:	mov    DWORD PTR [rax],ebx
  416fe5:	mov    rcx,QWORD PTR [rsp+0x38]
  416fea:	mov    rax,QWORD PTR [rcx+0x10]
  416fee:	mov    QWORD PTR [rsp+0x10],rax
  416ff3:	vmovups xmm0,XMMWORD PTR [rcx]
  416ff7:	vmovups XMMWORD PTR [rsp],xmm0
  416ffc:	mov    rdi,r15
  416fff:	call   417ec0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3f0>
  417004:	test   eax,eax
  417006:	je     417020 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x7c0>
  417008:	mov    ebx,eax
  41700a:	mov    rdi,QWORD PTR [rsp+0x30]
  41700f:	mov    esi,0x1
  417014:	call   429ab0 <flatcc_builder_table_add_offset@@Base>
  417019:	test   rax,rax
  41701c:	je     417020 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x7c0>
  41701e:	mov    DWORD PTR [rax],ebx
  417020:	mov    r15d,r12d
  417023:	and    r15b,r13b
  417026:	mov    rax,QWORD PTR [rsp+0x40]
  41702b:	movzx  eax,WORD PTR [rax+0x10]
  41702f:	cmp    ax,0x1
  417033:	je     417080 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x820>
  417035:	test   ax,ax
  417038:	movzx  r13d,BYTE PTR [rsp+0x50]
  41703e:	jne    417250 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9f0>
  417044:	mov    eax,DWORD PTR [r14+0x58]
  417048:	add    eax,0xfffffffd
  41704b:	cmp    ax,0x3
  41704f:	ja     417193 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x933>
  417055:	movzx  eax,ax
  417058:	lea    rcx,[rip+0x2dc99]        # 444cf8 <_IO_stdin_used@@Base+0x17cf8>
  41705f:	movsxd rax,DWORD PTR [rcx+rax*4]
  417063:	add    rax,rcx
  417066:	jmp    rax
  417068:	mov    rbx,QWORD PTR [r14+0x48]
  41706c:	test   rbx,rbx
  41706f:	jne    417172 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x912>
  417075:	jmp    417193 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x933>
  41707a:	nop    WORD PTR [rax+rax*1+0x0]
  417080:	movzx  ebx,WORD PTR [r14+0x78]
  417085:	test   bx,bx
  417088:	movzx  r13d,BYTE PTR [rsp+0x50]
  41708e:	je     417250 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9f0>
  417094:	mov    edx,0x2
  417099:	mov    rdi,QWORD PTR [rsp+0x30]
  41709e:	mov    esi,0x3
  4170a3:	mov    ecx,0x2
  4170a8:	call   429c10 <flatcc_builder_table_add@@Base>
  4170ad:	test   rax,rax
  4170b0:	je     417250 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9f0>
  4170b6:	mov    WORD PTR [rax],bx
  4170b9:	jmp    417250 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9f0>
  4170be:	mov    edx,0x1
  4170c3:	mov    rdi,rbx
  4170c6:	xor    esi,esi
  4170c8:	mov    ecx,0x1
  4170cd:	call   429c10 <flatcc_builder_table_add@@Base>
  4170d2:	test   rax,rax
  4170d5:	je     416ee1 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x681>
  4170db:	mov    BYTE PTR [rax],0x1
  4170de:	mov    rdi,rbx
  4170e1:	lea    rsi,[rip+0x2dc58]        # 444d40 <_IO_stdin_used@@Base+0x17d40>
  4170e8:	xor    edx,edx
  4170ea:	call   429230 <flatcc_builder_check_required@@Base>
  4170ef:	test   eax,eax
  4170f1:	je     4177f2 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf92>
  4170f7:	mov    rdi,rbx
  4170fa:	call   4292a0 <flatcc_builder_end_table@@Base>
  4170ff:	test   eax,eax
  417101:	je     416ee1 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x681>
  417107:	mov    rdi,rbx
  41710a:	mov    ebx,eax
  41710c:	mov    esi,0x1
  417111:	call   429ab0 <flatcc_builder_table_add_offset@@Base>
  417116:	test   rax,rax
  417119:	je     416ee1 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x681>
  41711f:	mov    DWORD PTR [rax],ebx
  417121:	jmp    416ee1 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x681>
  417126:	vmovsd xmm0,QWORD PTR [r14+0x48]
  41712c:	vucomisd xmm0,QWORD PTR [rip+0x2dbbc]        # 444cf0 <_IO_stdin_used@@Base+0x17cf0>
  417134:	jne    417138 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x8d8>
  417136:	jnp    417193 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x933>
  417138:	mov    edx,0x8
  41713d:	mov    rdi,QWORD PTR [rsp+0x30]
  417142:	mov    esi,0x5
  417147:	mov    ecx,0x8
  41714c:	vmovsd QWORD PTR [rsp+0x38],xmm0
  417152:	call   429c10 <flatcc_builder_table_add@@Base>
  417157:	vmovsd xmm0,QWORD PTR [rsp+0x38]
  41715d:	test   rax,rax
  417160:	je     417193 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x933>
  417162:	vmovsd QWORD PTR [rax],xmm0
  417166:	jmp    417193 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x933>
  417168:	movzx  ebx,BYTE PTR [r14+0x48]
  41716d:	test   rbx,rbx
  417170:	je     417193 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x933>
  417172:	mov    edx,0x8
  417177:	mov    rdi,QWORD PTR [rsp+0x30]
  41717c:	mov    esi,0x4
  417181:	mov    ecx,0x8
  417186:	call   429c10 <flatcc_builder_table_add@@Base>
  41718b:	test   rax,rax
  41718e:	je     417193 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x933>
  417190:	mov    QWORD PTR [rax],rbx
  417193:	shr    DWORD PTR [rsp+0x5c],0x8
  417198:	movzx  ebx,WORD PTR [r14+0x88]
  4171a0:	test   bx,bx
  4171a3:	je     4171c6 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x966>
  4171a5:	mov    edx,0x2
  4171aa:	mov    rdi,QWORD PTR [rsp+0x30]
  4171af:	mov    esi,0x2
  4171b4:	mov    ecx,0x2
  4171b9:	call   429c10 <flatcc_builder_table_add@@Base>
  4171be:	test   rax,rax
  4171c1:	je     4171c6 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x966>
  4171c3:	mov    WORD PTR [rax],bx
  4171c6:	mov    ebx,DWORD PTR [r14+0x88]
  4171cd:	add    ebx,ebx
  4171cf:	add    bx,0x4
  4171d3:	je     4171f6 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x996>
  4171d5:	mov    edx,0x2
  4171da:	mov    rdi,QWORD PTR [rsp+0x30]
  4171df:	mov    esi,0x3
  4171e4:	mov    ecx,0x2
  4171e9:	call   429c10 <flatcc_builder_table_add@@Base>
  4171ee:	test   rax,rax
  4171f1:	je     4171f6 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x996>
  4171f3:	mov    WORD PTR [rax],bx
  4171f6:	mov    ebx,DWORD PTR [rsp+0x5c]
  4171fa:	and    bl,0x1
  4171fd:	test   r15b,r15b
  417200:	je     417223 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9c3>
  417202:	mov    edx,0x1
  417207:	mov    rdi,QWORD PTR [rsp+0x30]
  41720c:	mov    esi,0x8
  417211:	mov    ecx,0x1
  417216:	call   429c10 <flatcc_builder_table_add@@Base>
  41721b:	test   rax,rax
  41721e:	je     417223 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9c3>
  417220:	mov    BYTE PTR [rax],r15b
  417223:	test   bl,bl
  417225:	je     417250 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9f0>
  417227:	mov    r12d,ebx
  41722a:	mov    edx,0x1
  41722f:	mov    rdi,QWORD PTR [rsp+0x30]
  417234:	mov    esi,0x7
  417239:	mov    ecx,0x1
  41723e:	call   429c10 <flatcc_builder_table_add@@Base>
  417243:	test   rax,rax
  417246:	je     417250 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x9f0>
  417248:	mov    BYTE PTR [rax],r12b
  41724b:	nop    DWORD PTR [rax+rax*1+0x0]
  417250:	test   r13b,r13b
  417253:	mov    rbx,QWORD PTR [rsp+0x30]
  417258:	je     417279 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa19>
  41725a:	mov    edx,0x1
  41725f:	mov    rdi,rbx
  417262:	mov    esi,0x6
  417267:	mov    ecx,0x1
  41726c:	call   429c10 <flatcc_builder_table_add@@Base>
  417271:	test   rax,rax
  417274:	je     417279 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa19>
  417276:	mov    BYTE PTR [rax],r13b
  417279:	mov    rdi,rbx
  41727c:	lea    rsi,[rip+0x2dabf]        # 444d42 <_IO_stdin_used@@Base+0x17d42>
  417283:	mov    edx,0x2
  417288:	call   429230 <flatcc_builder_check_required@@Base>
  41728d:	test   eax,eax
  41728f:	je     4177b4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf54>
  417295:	mov    rdi,rbx
  417298:	call   4292a0 <flatcc_builder_end_table@@Base>
  41729d:	test   eax,eax
  41729f:	mov    r12,QWORD PTR [rsp+0x40]
  4172a4:	je     416e00 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x5a0>
  4172aa:	mov    rdi,rbx
  4172ad:	mov    esi,eax
  4172af:	call   427e70 <flatcc_builder_offset_vector_push@@Base>
  4172b4:	jmp    416e00 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x5a0>
  4172b9:	nop    DWORD PTR [rax+0x0]
  4172c0:	mov    rdi,rbx
  4172c3:	call   428660 <flatcc_builder_end_offset_vector@@Base>
  4172c8:	test   eax,eax
  4172ca:	je     4172e4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa84>
  4172cc:	mov    ebx,eax
  4172ce:	mov    rdi,QWORD PTR [rsp+0x30]
  4172d3:	mov    esi,0x1
  4172d8:	call   429ab0 <flatcc_builder_table_add_offset@@Base>
  4172dd:	test   rax,rax
  4172e0:	je     4172e4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xa84>
  4172e2:	mov    DWORD PTR [rax],ebx
  4172e4:	cmp    WORD PTR [r12+0x10],0x1
  4172eb:	mov    r15,QWORD PTR [rsp+0xc0]
  4172f3:	jne    417342 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xae2>
  4172f5:	mov    ebx,DWORD PTR [r12+0xb8]
  4172fd:	test   ebx,ebx
  4172ff:	je     417321 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xac1>
  417301:	mov    edx,0x4
  417306:	mov    rdi,QWORD PTR [rsp+0x30]
  41730b:	mov    esi,0x4
  417310:	mov    ecx,0x4
  417315:	call   429c10 <flatcc_builder_table_add@@Base>
  41731a:	test   rax,rax
  41731d:	je     417321 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xac1>
  41731f:	mov    DWORD PTR [rax],ebx
  417321:	mov    edx,0x1
  417326:	mov    rdi,QWORD PTR [rsp+0x30]
  41732b:	mov    esi,0x2
  417330:	mov    ecx,0x1
  417335:	call   429c10 <flatcc_builder_table_add@@Base>
  41733a:	test   rax,rax
  41733d:	je     417342 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xae2>
  41733f:	mov    BYTE PTR [rax],0x1
  417342:	movzx  ebx,WORD PTR [r12+0xb0]
  41734b:	test   ebx,ebx
  41734d:	je     41736f <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xb0f>
  41734f:	mov    edx,0x4
  417354:	mov    rdi,QWORD PTR [rsp+0x30]
  417359:	mov    esi,0x3
  41735e:	mov    ecx,0x4
  417363:	call   429c10 <flatcc_builder_table_add@@Base>
  417368:	test   rax,rax
  41736b:	je     41736f <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xb0f>
  41736d:	mov    DWORD PTR [rax],ebx
  41736f:	mov    r12,QWORD PTR [rsp+0x30]
  417374:	mov    rdi,r12
  417377:	lea    rsi,[rip+0x2d9ca]        # 444d48 <_IO_stdin_used@@Base+0x17d48>
  41737e:	mov    edx,0x2
  417383:	call   429230 <flatcc_builder_check_required@@Base>
  417388:	test   eax,eax
  41738a:	je     417811 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xfb1>
  417390:	mov    rdi,r12
  417393:	call   4292a0 <flatcc_builder_end_table@@Base>
  417398:	mov    rcx,QWORD PTR [rsp+0xe0]
  4173a0:	mov    DWORD PTR [r15+rcx*4],eax
  4173a4:	mov    rax,rcx
  4173a7:	inc    rax
  4173aa:	cmp    rax,QWORD PTR [rsp+0xd0]
  4173b2:	jne    416d80 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x520>
  4173b8:	movsxd rdx,DWORD PTR [rsp+0xd0]
  4173c0:	mov    rdi,r12
  4173c3:	mov    rsi,r15
  4173c6:	call   428510 <flatcc_builder_create_offset_vector@@Base>
  4173cb:	test   eax,eax
  4173cd:	je     4173e4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xb84>
  4173cf:	mov    r14d,eax
  4173d2:	mov    rdi,r12
  4173d5:	xor    esi,esi
  4173d7:	call   429ab0 <flatcc_builder_table_add_offset@@Base>
  4173dc:	test   rax,rax
  4173df:	je     4173e4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xb84>
  4173e1:	mov    DWORD PTR [rax],r14d
  4173e4:	mov    rax,QWORD PTR [rsp+0x80]
  4173ec:	mov    QWORD PTR [rsp+0x50],rax
  4173f1:	mov    r14d,DWORD PTR [rsp+0x68]
  4173f6:	mov    rdi,r12
  4173f9:	call   4284a0 <flatcc_builder_start_offset_vector@@Base>
  4173fe:	mov    QWORD PTR [rsp+0xc8],r14
  417406:	test   r14d,r14d
  417409:	jle    41767b <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe1b>
  41740f:	xor    r14d,r14d
  417412:	lea    r13,[rip+0x2d935]        # 444d4e <_IO_stdin_used@@Base+0x17d4e>
  417419:	jmp    417431 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xbd1>
  41741b:	nop    DWORD PTR [rax+rax*1+0x0]
  417420:	inc    r14
  417423:	cmp    r14,QWORD PTR [rsp+0xc8]
  41742b:	je     41767b <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe1b>
  417431:	mov    rbx,r14
  417434:	shl    rbx,0x4
  417438:	mov    r15,QWORD PTR [rsp+0x50]
  41743d:	mov    rax,QWORD PTR [r15+rbx*1]
  417441:	mov    QWORD PTR [rsp+0x38],rax
  417446:	movzx  eax,WORD PTR [rax+0x10]
  41744a:	mov    WORD PTR [rsp+0x40],ax
  41744f:	mov    rdi,r12
  417452:	mov    esi,0x4
  417457:	call   428890 <flatcc_builder_start_table@@Base>
  41745c:	mov    rsi,QWORD PTR [r15+rbx*1+0x8]
  417461:	mov    rdi,r12
  417464:	call   42aae0 <flatcc_builder_create_string_str@@Base>
  417469:	test   eax,eax
  41746b:	je     417480 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc20>
  41746d:	mov    ebx,eax
  41746f:	mov    rdi,r12
  417472:	xor    esi,esi
  417474:	call   429ab0 <flatcc_builder_table_add_offset@@Base>
  417479:	test   rax,rax
  41747c:	je     417480 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc20>
  41747e:	mov    DWORD PTR [rax],ebx
  417480:	mov    rdi,r12
  417483:	call   4284a0 <flatcc_builder_start_offset_vector@@Base>
  417488:	mov    rax,QWORD PTR [rsp+0x38]
  41748d:	mov    r15,QWORD PTR [rax+0x28]
  417491:	test   r15,r15
  417494:	mov    rbx,r12
  417497:	je     4175b0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd50>
  41749d:	cmp    WORD PTR [rsp+0x40],0x4
  4174a3:	mov    r12d,0x0
  4174a9:	cmove  r12,QWORD PTR [rsp+0xc0]
  4174b2:	jmp    4174cc <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc6c>
  4174b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4174be:	xchg   ax,ax
  4174c0:	mov    r15,QWORD PTR [r15]
  4174c3:	test   r15,r15
  4174c6:	je     4175b0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd50>
  4174cc:	mov    rdi,rbx
  4174cf:	mov    esi,0x3
  4174d4:	call   428890 <flatcc_builder_start_table@@Base>
  4174d9:	mov    rax,QWORD PTR [r15+0x8]
  4174dd:	mov    rsi,QWORD PTR [rax]
  4174e0:	mov    rdx,QWORD PTR [rax+0x8]
  4174e4:	mov    rdi,rbx
  4174e7:	call   42a9b0 <flatcc_builder_create_string@@Base>
  4174ec:	test   eax,eax
  4174ee:	je     417505 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xca5>
  4174f0:	mov    ebx,eax
  4174f2:	mov    rdi,QWORD PTR [rsp+0x30]
  4174f7:	xor    esi,esi
  4174f9:	call   429ab0 <flatcc_builder_table_add_offset@@Base>
  4174fe:	test   rax,rax
  417501:	je     417505 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xca5>
  417503:	mov    DWORD PTR [rax],ebx
  417505:	test   r12,r12
  417508:	je     417540 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xce0>
  41750a:	cmp    WORD PTR [r15+0x28],0xe
  417510:	jne    417540 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xce0>
  417512:	mov    rax,QWORD PTR [r15+0x18]
  417516:	mov    rax,QWORD PTR [rax+0xc8]
  41751d:	mov    ebx,DWORD PTR [r12+rax*4]
  417521:	test   ebx,ebx
  417523:	je     417540 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xce0>
  417525:	mov    rdi,QWORD PTR [rsp+0x30]
  41752a:	mov    esi,0x2
  41752f:	call   429ab0 <flatcc_builder_table_add_offset@@Base>
  417534:	test   rax,rax
  417537:	je     417540 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xce0>
  417539:	mov    DWORD PTR [rax],ebx
  41753b:	nop    DWORD PTR [rax+rax*1+0x0]
  417540:	mov    rbx,QWORD PTR [r15+0x48]
  417544:	test   rbx,rbx
  417547:	je     41756a <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd0a>
  417549:	mov    edx,0x8
  41754e:	mov    rdi,QWORD PTR [rsp+0x30]
  417553:	mov    esi,0x1
  417558:	mov    ecx,0x8
  41755d:	call   429c10 <flatcc_builder_table_add@@Base>
  417562:	test   rax,rax
  417565:	je     41756a <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd0a>
  417567:	mov    QWORD PTR [rax],rbx
  41756a:	mov    rbx,QWORD PTR [rsp+0x30]
  41756f:	mov    rdi,rbx
  417572:	mov    rsi,r13
  417575:	mov    edx,0x1
  41757a:	call   429230 <flatcc_builder_check_required@@Base>
  41757f:	test   eax,eax
  417581:	je     4177d3 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf73>
  417587:	mov    rdi,rbx
  41758a:	call   4292a0 <flatcc_builder_end_table@@Base>
  41758f:	test   eax,eax
  417591:	je     4174c0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc60>
  417597:	mov    rdi,rbx
  41759a:	mov    esi,eax
  41759c:	call   427e70 <flatcc_builder_offset_vector_push@@Base>
  4175a1:	jmp    4174c0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xc60>
  4175a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4175b0:	mov    rdi,rbx
  4175b3:	call   428660 <flatcc_builder_end_offset_vector@@Base>
  4175b8:	test   eax,eax
  4175ba:	je     4175d4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd74>
  4175bc:	mov    ebx,eax
  4175be:	mov    rdi,QWORD PTR [rsp+0x30]
  4175c3:	mov    esi,0x1
  4175c8:	call   429ab0 <flatcc_builder_table_add_offset@@Base>
  4175cd:	test   rax,rax
  4175d0:	je     4175d4 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd74>
  4175d2:	mov    DWORD PTR [rax],ebx
  4175d4:	cmp    WORD PTR [rsp+0x40],0x4
  4175da:	sete   bl
  4175dd:	jne    4175ff <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd9f>
  4175df:	mov    edx,0x1
  4175e4:	mov    rdi,QWORD PTR [rsp+0x30]
  4175e9:	mov    esi,0x2
  4175ee:	mov    ecx,0x1
  4175f3:	call   429c10 <flatcc_builder_table_add@@Base>
  4175f8:	test   rax,rax
  4175fb:	je     4175ff <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xd9f>
  4175fd:	mov    BYTE PTR [rax],bl
  4175ff:	mov    rcx,QWORD PTR [rsp+0x38]
  417604:	mov    rax,QWORD PTR [rcx+0x58]
  417608:	mov    QWORD PTR [rsp+0x10],rax
  41760d:	vmovups xmm0,XMMWORD PTR [rcx+0x48]
  417612:	vmovups XMMWORD PTR [rsp],xmm0
  417617:	mov    r12,QWORD PTR [rsp+0x30]
  41761c:	mov    rdi,r12
  41761f:	call   417ec0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3f0>
  417624:	test   eax,eax
  417626:	je     417640 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xde0>
  417628:	mov    r15d,eax
  41762b:	mov    rdi,r12
  41762e:	mov    esi,0x3
  417633:	call   429ab0 <flatcc_builder_table_add_offset@@Base>
  417638:	test   rax,rax
  41763b:	je     417640 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xde0>
  41763d:	mov    DWORD PTR [rax],r15d
  417640:	mov    rdi,r12
  417643:	lea    rsi,[rip+0x2d708]        # 444d52 <_IO_stdin_used@@Base+0x17d52>
  41764a:	mov    edx,0x3
  41764f:	call   429230 <flatcc_builder_check_required@@Base>
  417654:	test   eax,eax
  417656:	je     417830 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xfd0>
  41765c:	mov    rdi,r12
  41765f:	call   4292a0 <flatcc_builder_end_table@@Base>
  417664:	test   eax,eax
  417666:	je     417420 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xbc0>
  41766c:	mov    rdi,r12
  41766f:	mov    esi,eax
  417671:	call   427e70 <flatcc_builder_offset_vector_push@@Base>
  417676:	jmp    417420 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xbc0>
  41767b:	mov    rdi,r12
  41767e:	call   428660 <flatcc_builder_end_offset_vector@@Base>
  417683:	test   eax,eax
  417685:	je     41769f <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe3f>
  417687:	mov    r14d,eax
  41768a:	mov    rdi,r12
  41768d:	mov    esi,0x1
  417692:	call   429ab0 <flatcc_builder_table_add_offset@@Base>
  417697:	test   rax,rax
  41769a:	je     41769f <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe3f>
  41769c:	mov    DWORD PTR [rax],r14d
  41769f:	mov    rax,QWORD PTR [rsp+0x48]
  4176a4:	mov    rax,QWORD PTR [rax+0x58]
  4176a8:	test   rax,rax
  4176ab:	mov    r14,QWORD PTR [rsp+0xc0]
  4176b3:	je     4176c0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe60>
  4176b5:	cmp    WORD PTR [rax+0x10],0x0
  4176ba:	je     417782 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf22>
  4176c0:	lea    rsi,[rip+0x2d693]        # 444d5a <_IO_stdin_used@@Base+0x17d5a>
  4176c7:	mov    rbx,QWORD PTR [rsp+0x30]
  4176cc:	mov    rdi,rbx
  4176cf:	mov    edx,0x2
  4176d4:	call   429230 <flatcc_builder_check_required@@Base>
  4176d9:	test   eax,eax
  4176db:	je     41784f <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xfef>
  4176e1:	mov    rdi,rbx
  4176e4:	call   4292a0 <flatcc_builder_end_table@@Base>
  4176e9:	mov    rdi,rbx
  4176ec:	mov    esi,eax
  4176ee:	call   427810 <flatcc_builder_end_buffer@@Base>
  4176f3:	mov    rdi,QWORD PTR [rsp+0x78]
  4176f8:	test   rdi,rdi
  4176fb:	je     417702 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xea2>
  4176fd:	call   406040 <free@plt>
  417702:	mov    rdi,QWORD PTR [rsp+0x80]
  41770a:	test   rdi,rdi
  41770d:	je     417714 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xeb4>
  41770f:	call   406040 <free@plt>
  417714:	mov    rdi,QWORD PTR [rsp+0x88]
  41771c:	test   rdi,rdi
  41771f:	je     417726 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xec6>
  417721:	call   406040 <free@plt>
  417726:	vxorps xmm0,xmm0,xmm0
  41772a:	vmovups YMMWORD PTR [rsp+0x90],ymm0
  417733:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  41773c:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  417742:	xor    ebx,ebx
  417744:	test   r14,r14
  417747:	je     416a2d <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1cd>
  41774d:	mov    rdi,r14
  417750:	vzeroupper 
  417753:	call   406040 <free@plt>
  417758:	jmp    416a2d <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1cd>
  41775d:	mov    rdi,QWORD PTR [rsp+0x78]
  417762:	test   rdi,rdi
  417765:	je     41776c <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xf0c>
  417767:	call   406040 <free@plt>
  41776c:	mov    rdi,QWORD PTR [rsp+0x80]
  417774:	test   rdi,rdi
  417777:	jne    4169f5 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x195>
  41777d:	jmp    4169fa <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x19a>
  417782:	mov    rax,QWORD PTR [rax+0xc8]
  417789:	mov    ebx,DWORD PTR [r14+rax*4]
  41778d:	test   ebx,ebx
  41778f:	je     4176c0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe60>
  417795:	mov    rdi,QWORD PTR [rsp+0x30]
  41779a:	mov    esi,0x4
  41779f:	call   429ab0 <flatcc_builder_table_add_offset@@Base>
  4177a4:	test   rax,rax
  4177a7:	je     4176c0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe60>
  4177ad:	mov    DWORD PTR [rax],ebx
  4177af:	jmp    4176c0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0xe60>
  4177b4:	lea    rdi,[rip+0x2d725]        # 444ee0 <_IO_stdin_used@@Base+0x17ee0>
  4177bb:	lea    rsi,[rip+0x2d662]        # 444e24 <_IO_stdin_used@@Base+0x17e24>
  4177c2:	lea    rcx,[rip+0x2d7a7]        # 444f70 <_IO_stdin_used@@Base+0x17f70>
  4177c9:	mov    edx,0x1d
  4177ce:	call   4060f0 <__assert_fail@plt>
  4177d3:	lea    rdi,[rip+0x2d8b5]        # 44508f <_IO_stdin_used@@Base+0x1808f>
  4177da:	lea    rsi,[rip+0x2d643]        # 444e24 <_IO_stdin_used@@Base+0x17e24>
  4177e1:	lea    rcx,[rip+0x2d93d]        # 445125 <_IO_stdin_used@@Base+0x18125>
  4177e8:	mov    edx,0x19
  4177ed:	call   4060f0 <__assert_fail@plt>
  4177f2:	lea    rdi,[rip+0x2d59e]        # 444d97 <_IO_stdin_used@@Base+0x17d97>
  4177f9:	lea    rsi,[rip+0x2d624]        # 444e24 <_IO_stdin_used@@Base+0x17e24>
  417800:	lea    rcx,[rip+0x2d696]        # 444e9d <_IO_stdin_used@@Base+0x17e9d>
  417807:	mov    edx,0x17
  41780c:	call   4060f0 <__assert_fail@plt>
  417811:	lea    rdi,[rip+0x2d79d]        # 444fb5 <_IO_stdin_used@@Base+0x17fb5>
  417818:	lea    rsi,[rip+0x2d605]        # 444e24 <_IO_stdin_used@@Base+0x17e24>
  41781f:	lea    rcx,[rip+0x2d822]        # 445048 <_IO_stdin_used@@Base+0x18048>
  417826:	mov    edx,0x1f
  41782b:	call   4060f0 <__assert_fail@plt>
  417830:	lea    rdi,[rip+0x2d937]        # 44516e <_IO_stdin_used@@Base+0x1816e>
  417837:	lea    rsi,[rip+0x2d5e6]        # 444e24 <_IO_stdin_used@@Base+0x17e24>
  41783e:	lea    rcx,[rip+0x2d9b6]        # 4451fb <_IO_stdin_used@@Base+0x181fb>
  417845:	mov    edx,0x1b
  41784a:	call   4060f0 <__assert_fail@plt>
  41784f:	lea    rdi,[rip+0x2d9e8]        # 44523e <_IO_stdin_used@@Base+0x1823e>
  417856:	lea    rsi,[rip+0x2d5c7]        # 444e24 <_IO_stdin_used@@Base+0x17e24>
  41785d:	lea    rcx,[rip+0x2da6d]        # 4452d1 <_IO_stdin_used@@Base+0x182d1>
  417864:	mov    edx,0x21
  417869:	call   4060f0 <__assert_fail@plt>
  41786e:	xchg   ax,ax
  417870:	push   rbp
  417871:	push   r15
  417873:	push   r14
  417875:	push   r13
  417877:	push   r12
  417879:	push   rbx
  41787a:	sub    rsp,0x28
  41787e:	test   rdi,rdi
  417881:	je     417a35 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11d5>
  417887:	cmp    DWORD PTR [rdi+0x4],0x53424642
  41788e:	jne    417a35 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11d5>
  417894:	mov    ecx,DWORD PTR [rdi]
  417896:	lea    rax,[rdi+rcx*1]
  41789a:	movsxd rcx,DWORD PTR [rdi+rcx*1]
  41789e:	mov    rdx,rax
  4178a1:	sub    rdx,rcx
  4178a4:	cmp    WORD PTR [rdx],0x5
  4178a8:	jbe    417a3e <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11de>
  4178ae:	neg    rcx
  4178b1:	movzx  ecx,WORD PTR [rax+rcx*1+0x4]
  4178b6:	test   rcx,rcx
  4178b9:	je     417a3e <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11de>
  4178bf:	lea    rdx,[rax+rcx*1]
  4178c3:	mov    eax,DWORD PTR [rax+rcx*1]
  4178c6:	cmp    DWORD PTR [rax+rdx*1],0x0
  4178ca:	je     417a07 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11a7>
  4178d0:	lea    rcx,[rax+rdx*1]
  4178d4:	add    rcx,0x4
  4178d8:	xor    edx,edx
  4178da:	mov    QWORD PTR [rsp+0x8],rcx
  4178df:	mov    QWORD PTR [rsp+0x10],rcx
  4178e4:	jmp    41790f <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x10af>
  4178e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4178f0:	mov    rdx,QWORD PTR [rsp+0x20]
  4178f5:	inc    rdx
  4178f8:	mov    rcx,QWORD PTR [rsp+0x10]
  4178fd:	mov    eax,DWORD PTR [rcx-0x4]
  417900:	add    QWORD PTR [rsp+0x8],0x4
  417906:	cmp    rdx,rax
  417909:	jae    417a07 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11a7>
  41790f:	lea    rax,[rcx+rdx*4]
  417913:	mov    QWORD PTR [rsp+0x20],rdx
  417918:	mov    esi,DWORD PTR [rcx+rdx*4]
  41791b:	movsxd rcx,DWORD PTR [rsi+rax*1]
  41791f:	add    rax,rsi
  417922:	mov    rdx,rax
  417925:	sub    rdx,rcx
  417928:	cmp    WORD PTR [rdx],0x8
  41792c:	jb     417a16 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11b6>
  417932:	neg    rcx
  417935:	movzx  r13d,WORD PTR [rax+rcx*1+0x6]
  41793b:	test   r13,r13
  41793e:	je     417a16 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11b6>
  417944:	mov    ebp,DWORD PTR [rax+r13*1]
  417948:	add    rax,r13
  41794b:	mov    r12d,DWORD PTR [rbp+rax*1+0x0]
  417950:	test   r12,r12
  417953:	je     4178f0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1090>
  417955:	mov    QWORD PTR [rsp+0x18],rsi
  41795a:	lea    r14,[rax+rbp*1]
  41795e:	add    r14,0x4
  417962:	lea    r15,[r12-0x1]
  417967:	mov    rbx,r12
  41796a:	shr    rbx,1
  41796d:	nop    DWORD PTR [rax]
  417970:	mov    rdi,r14
  417973:	mov    rsi,rbx
  417976:	mov    rdx,r15
  417979:	call   418080 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5b0>
  41797e:	dec    rbx
  417981:	cmp    rbx,0xffffffffffffffff
  417985:	jne    417970 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1110>
  417987:	test   r15,r15
  41798a:	mov    rax,QWORD PTR [rsp+0x18]
  41798f:	je     4178f0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1090>
  417995:	lea    r15,[r12*4+0x0]
  41799d:	add    r15,rbp
  4179a0:	mov    rbx,r12
  4179a3:	add    rbx,0xfffffffffffffffe
  4179a7:	add    r15,r13
  4179aa:	add    r15,rax
  4179ad:	add    r15,QWORD PTR [rsp+0x8]
  4179b2:	lea    eax,[r12*4+0x0]
  4179ba:	mov    r13d,0x4
  4179c0:	sub    r13d,eax
  4179c3:	lea    ebp,[r12*4-0x4]
  4179cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4179d0:	mov    eax,DWORD PTR [r15]
  4179d3:	add    eax,ebp
  4179d5:	mov    ecx,DWORD PTR [r14]
  4179d8:	add    ecx,r13d
  4179db:	mov    DWORD PTR [r14],eax
  4179de:	mov    DWORD PTR [r15],ecx
  4179e1:	mov    rdi,r14
  4179e4:	xor    esi,esi
  4179e6:	mov    rdx,rbx
  4179e9:	call   418080 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5b0>
  4179ee:	dec    rbx
  4179f1:	add    r15,0xfffffffffffffffc
  4179f5:	add    ebp,0xfffffffc
  4179f8:	add    r13d,0x4
  4179fc:	cmp    rbx,0xffffffffffffffff
  417a00:	jne    4179d0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1170>
  417a02:	jmp    4178f0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1090>
  417a07:	add    rsp,0x28
  417a0b:	pop    rbx
  417a0c:	pop    r12
  417a0e:	pop    r13
  417a10:	pop    r14
  417a12:	pop    r15
  417a14:	pop    rbp
  417a15:	ret    
  417a16:	lea    rdi,[rip+0x2d9e6]        # 445403 <_IO_stdin_used@@Base+0x18403>
  417a1d:	lea    rsi,[rip+0x2d91a]        # 44533e <_IO_stdin_used@@Base+0x1833e>
  417a24:	lea    rcx,[rip+0x2da30]        # 44545b <_IO_stdin_used@@Base+0x1845b>
  417a2b:	mov    edx,0xe0
  417a30:	call   4060f0 <__assert_fail@plt>
  417a35:	lea    rdi,[rip+0x2d8dc]        # 445318 <_IO_stdin_used@@Base+0x18318>
  417a3c:	jmp    417a45 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x11e5>
  417a3e:	lea    rdi,[rip+0x2d9be]        # 445403 <_IO_stdin_used@@Base+0x18403>
  417a45:	lea    rsi,[rip+0x2d8f2]        # 44533e <_IO_stdin_used@@Base+0x1833e>
  417a4c:	lea    rcx,[rip+0x2d963]        # 4453b6 <_IO_stdin_used@@Base+0x183b6>
  417a53:	mov    edx,0xed
  417a58:	call   4060f0 <__assert_fail@plt>
  417a5d:	nop    DWORD PTR [rax]

0000000000417a60 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>:
  417a60:	push   r15
  417a62:	push   r14
  417a64:	push   r12
  417a66:	push   rbx
  417a67:	sub    rsp,0x188
  417a6e:	mov    r14,rdx
  417a71:	mov    r15,rsi
  417a74:	mov    rbx,rdi
  417a77:	mov    r12,rsp
  417a7a:	mov    rdi,r12
  417a7d:	call   426860 <flatcc_builder_init@@Base>
  417a82:	mov    rdi,r12
  417a85:	mov    rsi,rbx
  417a88:	mov    rdx,r15
  417a8b:	call   4168e0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x80>
  417a90:	test   eax,eax
  417a92:	je     417a98 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x38>
  417a94:	xor    ebx,ebx
  417a96:	jmp    417ab3 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x53>
  417a98:	mov    rdi,rsp
  417a9b:	mov    rsi,r14
  417a9e:	call   42aec0 <flatcc_builder_finalize_buffer@@Base>
  417aa3:	test   rax,rax
  417aa6:	je     417a94 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x34>
  417aa8:	mov    rbx,rax
  417aab:	mov    rdi,rax
  417aae:	call   417870 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1010>
  417ab3:	mov    rdi,rsp
  417ab6:	call   426c20 <flatcc_builder_clear@@Base>
  417abb:	mov    rax,rbx
  417abe:	add    rsp,0x188
  417ac5:	pop    rbx
  417ac6:	pop    r12
  417ac8:	pop    r14
  417aca:	pop    r15
  417acc:	ret    
  417acd:	nop    DWORD PTR [rax]

0000000000417ad0 <__flatcc_fb_codegen_bfbs_to_file@@Base>:
  417ad0:	push   rbp
  417ad1:	push   r15
  417ad3:	push   r14
  417ad5:	push   r12
  417ad7:	push   rbx
  417ad8:	sub    rsp,0x190
  417adf:	mov    r14,rsi
  417ae2:	mov    rbx,rdi
  417ae5:	mov    rax,QWORD PTR [rdi+0x108]
  417aec:	test   rax,rax
  417aef:	lea    rbp,[rip+0x16a59]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  417af6:	cmovne rbp,rax
  417afa:	cmp    DWORD PTR [rdi+0x80],0x0
  417b01:	je     417b3d <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6d>
  417b03:	mov    rax,QWORD PTR [rip+0x384d6]        # 44ffe0 <stdout@GLIBC_2.2.5>
  417b0a:	mov    r15,QWORD PTR [rax]
  417b0d:	test   r15,r15
  417b10:	je     417bad <__flatcc_fb_codegen_bfbs_to_file@@Base+0xdd>
  417b16:	lea    rbp,[rsp+0x8]
  417b1b:	mov    rdi,rbp
  417b1e:	call   426860 <flatcc_builder_init@@Base>
  417b23:	mov    rdi,rbp
  417b26:	mov    rsi,rbx
  417b29:	mov    rdx,r14
  417b2c:	call   4168e0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x80>
  417b31:	test   eax,eax
  417b33:	je     417bb4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xe4>
  417b35:	xor    r14d,r14d
  417b38:	jmp    417bd5 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x105>
  417b3d:	mov    r15,QWORD PTR [r14+0x110]
  417b44:	mov    rdi,r15
  417b47:	call   4060d0 <strlen@plt>
  417b4c:	mov    r12,rax
  417b4f:	mov    rdi,rbp
  417b52:	call   4060d0 <strlen@plt>
  417b57:	lea    r8,[rip+0x16472]        # 42dfd0 <_IO_stdin_used@@Base+0xfd0>
  417b5e:	mov    rdi,rbp
  417b61:	mov    rsi,rax
  417b64:	mov    rdx,r15
  417b67:	mov    rcx,r12
  417b6a:	mov    r9d,0x1
  417b70:	call   41ae60 <__flatcc_fb_create_join_path_n@@Base>
  417b75:	test   rax,rax
  417b78:	je     417c8a <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ba>
  417b7e:	mov    rbp,rax
  417b81:	lea    rsi,[rip+0x165a9]        # 42e131 <_IO_stdin_used@@Base+0x1131>
  417b88:	mov    rdi,rax
  417b8b:	call   4061e0 <fopen@plt>
  417b90:	mov    r15,rax
  417b93:	test   rax,rax
  417b96:	je     417c6a <__flatcc_fb_codegen_bfbs_to_file@@Base+0x19a>
  417b9c:	mov    rdi,rbp
  417b9f:	call   406040 <free@plt>
  417ba4:	test   r15,r15
  417ba7:	jne    417b16 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x46>
  417bad:	mov    ebp,0xffffffff
  417bb2:	jmp    417c31 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x161>
  417bb4:	lea    rdi,[rsp+0x8]
  417bb9:	mov    rsi,rsp
  417bbc:	call   42aec0 <flatcc_builder_finalize_buffer@@Base>
  417bc1:	test   rax,rax
  417bc4:	je     417b35 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x65>
  417bca:	mov    r14,rax
  417bcd:	mov    rdi,rax
  417bd0:	call   417870 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x1010>
  417bd5:	lea    rdi,[rsp+0x8]
  417bda:	call   426c20 <flatcc_builder_clear@@Base>
  417bdf:	test   r14,r14
  417be2:	je     417c0c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x13c>
  417be4:	mov    rbx,QWORD PTR [rsp]
  417be8:	mov    esi,0x1
  417bed:	mov    rdi,r14
  417bf0:	mov    rdx,rbx
  417bf3:	mov    rcx,r15
  417bf6:	call   406220 <fwrite@plt>
  417bfb:	xor    ebp,ebp
  417bfd:	cmp    rbx,rax
  417c00:	jne    417c43 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x173>
  417c02:	mov    rdi,r14
  417c05:	call   406040 <free@plt>
  417c0a:	jmp    417c1d <__flatcc_fb_codegen_bfbs_to_file@@Base+0x14d>
  417c0c:	lea    rdi,[rip+0x2d95b]        # 44556e <_IO_stdin_used@@Base+0x1856e>
  417c13:	call   406070 <puts@plt>
  417c18:	mov    ebp,0xffffffff
  417c1d:	mov    rax,QWORD PTR [rip+0x383bc]        # 44ffe0 <stdout@GLIBC_2.2.5>
  417c24:	cmp    QWORD PTR [rax],r15
  417c27:	je     417c31 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x161>
  417c29:	mov    rdi,r15
  417c2c:	call   4060c0 <fclose@plt>
  417c31:	mov    eax,ebp
  417c33:	add    rsp,0x190
  417c3a:	pop    rbx
  417c3b:	pop    r12
  417c3d:	pop    r14
  417c3f:	pop    r15
  417c41:	pop    rbp
  417c42:	ret    
  417c43:	mov    rax,QWORD PTR [rip+0x383ae]        # 44fff8 <stderr@GLIBC_2.2.5>
  417c4a:	mov    rcx,QWORD PTR [rax]
  417c4d:	lea    rdi,[rip+0x2d117]        # 444d6b <_IO_stdin_used@@Base+0x17d6b>
  417c54:	mov    esi,0x26
  417c59:	mov    edx,0x1
  417c5e:	call   406220 <fwrite@plt>
  417c63:	mov    ebp,0xffffffff
  417c68:	jmp    417c02 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x132>
  417c6a:	mov    rax,QWORD PTR [rip+0x38387]        # 44fff8 <stderr@GLIBC_2.2.5>
  417c71:	mov    rdi,QWORD PTR [rax]
  417c74:	lea    rsi,[rip+0x2d8c1]        # 44553c <_IO_stdin_used@@Base+0x1853c>
  417c7b:	mov    rdx,rbp
  417c7e:	xor    eax,eax
  417c80:	call   406170 <fprintf@plt>
  417c85:	jmp    417b9c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xcc>
  417c8a:	mov    rax,QWORD PTR [rip+0x38367]        # 44fff8 <stderr@GLIBC_2.2.5>
  417c91:	mov    rcx,QWORD PTR [rax]
  417c94:	lea    rdi,[rip+0x1638c]        # 42e027 <_IO_stdin_used@@Base+0x1027>
  417c9b:	mov    esi,0x22
  417ca0:	mov    edx,0x1
  417ca5:	call   406220 <fwrite@plt>
  417caa:	mov    edi,0x1
  417caf:	call   406210 <exit@plt>
  417cb4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417cbe:	xchg   ax,ax
  417cc0:	mov    rdx,rdi
  417cc3:	lea    rdi,[rsi+0x8]
  417cc7:	lea    rsi,[rip+0x32]        # 417d00 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x230>
  417cce:	jmp    419740 <fb_symbol_table_visit@@Base>
  417cd3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417cdd:	nop    DWORD PTR [rax]
  417ce0:	mov    rdx,rdi
  417ce3:	lea    rdi,[rsi+0x8]
  417ce7:	lea    rsi,[rip+0xb2]        # 417da0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2d0>
  417cee:	jmp    419740 <fb_symbol_table_visit@@Base>
  417cf3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417cfd:	nop    DWORD PTR [rax]
  417d00:	push   r14
  417d02:	push   rbx
  417d03:	push   rax
  417d04:	cmp    WORD PTR [rsi+0x10],0x4
  417d09:	ja     417d95 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2c5>
  417d0f:	mov    rbx,rsi
  417d12:	mov    r14,rdi
  417d15:	mov    edi,0x128
  417d1a:	add    rdi,QWORD PTR [r14+0x48]
  417d1e:	mov    rsi,QWORD PTR [rsi+0x20]
  417d22:	call   418e70 <ptr_set_find_item@@Base>
  417d27:	test   rax,rax
  417d2a:	je     417d95 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2c5>
  417d2c:	mov    eax,0x1
  417d31:	cmp    DWORD PTR [r14],0x0
  417d35:	je     417d6d <__flatcc_fb_codegen_bfbs_to_file@@Base+0x29d>
  417d37:	mov    rcx,QWORD PTR [rbx+0x18]
  417d3b:	mov    rcx,QWORD PTR [rcx]
  417d3e:	test   rcx,rcx
  417d41:	je     417d6d <__flatcc_fb_codegen_bfbs_to_file@@Base+0x29d>
  417d43:	xor    eax,eax
  417d45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  417d4f:	nop
  417d50:	mov    rdx,QWORD PTR [rcx+0x8]
  417d54:	mov    rsi,QWORD PTR [rcx]
  417d57:	mov    rcx,QWORD PTR [rdx+0x8]
  417d5b:	add    rax,rcx
  417d5e:	add    rax,0x1
  417d62:	mov    rcx,rsi
  417d65:	test   rsi,rsi
  417d68:	jne    417d50 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x280>
  417d6a:	inc    rax
  417d6d:	mov    rcx,QWORD PTR [rbx+0x8]
  417d71:	add    rax,QWORD PTR [rcx+0x8]
  417d75:	add    QWORD PTR [r14+0x10],rax
  417d79:	mov    eax,DWORD PTR [rbx+0x10]
  417d7c:	lea    ecx,[rax-0x3]
  417d7f:	cmp    cx,0x2
  417d83:	jb     417d91 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2c1>
  417d85:	cmp    ax,0x1
  417d89:	ja     417d95 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2c5>
  417d8b:	inc    DWORD PTR [r14+0x4]
  417d8f:	jmp    417d95 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2c5>
  417d91:	inc    DWORD PTR [r14+0x8]
  417d95:	add    rsp,0x8
  417d99:	pop    rbx
  417d9a:	pop    r14
  417d9c:	ret    
  417d9d:	nop    DWORD PTR [rax]
  417da0:	push   rbp
  417da1:	push   r15
  417da3:	push   r14
  417da5:	push   r13
  417da7:	push   r12
  417da9:	push   rbx
  417daa:	push   rax
  417dab:	cmp    WORD PTR [rsi+0x10],0x4
  417db0:	ja     417e99 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c9>
  417db6:	mov    r15,rsi
  417db9:	mov    r14,rdi
  417dbc:	mov    edi,0x128
  417dc1:	add    rdi,QWORD PTR [r14+0x48]
  417dc5:	mov    rsi,QWORD PTR [rsi+0x20]
  417dc9:	call   418e70 <ptr_set_find_item@@Base>
  417dce:	test   rax,rax
  417dd1:	je     417e99 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c9>
  417dd7:	mov    r12,QWORD PTR [r14+0x40]
  417ddb:	cmp    DWORD PTR [r14],0x0
  417ddf:	mov    QWORD PTR [rsp],r12
  417de3:	je     417e2f <__flatcc_fb_codegen_bfbs_to_file@@Base+0x35f>
  417de5:	mov    rax,QWORD PTR [r15+0x18]
  417de9:	mov    rbp,QWORD PTR [rax]
  417dec:	mov    r12,QWORD PTR [rsp]
  417df0:	test   rbp,rbp
  417df3:	je     417e2f <__flatcc_fb_codegen_bfbs_to_file@@Base+0x35f>
  417df5:	mov    rbx,QWORD PTR [rsp]
  417df9:	nop    DWORD PTR [rax+0x0]
  417e00:	mov    rax,QWORD PTR [rbp+0x8]
  417e04:	movsxd r13,DWORD PTR [rax+0x8]
  417e08:	mov    rsi,QWORD PTR [rax]
  417e0b:	mov    rdi,rbx
  417e0e:	mov    rdx,r13
  417e11:	call   406190 <memcpy@plt>
  417e16:	lea    r12,[rbx+r13*1]
  417e1a:	add    r12,0x1
  417e1e:	mov    BYTE PTR [rbx+r13*1],0x2e
  417e23:	mov    rbp,QWORD PTR [rbp+0x0]
  417e27:	mov    rbx,r12
  417e2a:	test   rbp,rbp
  417e2d:	jne    417e00 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x330>
  417e2f:	mov    rax,QWORD PTR [r15+0x8]
  417e33:	movsxd rbx,DWORD PTR [rax+0x8]
  417e37:	mov    rsi,QWORD PTR [rax]
  417e3a:	mov    rdi,r12
  417e3d:	mov    rdx,rbx
  417e40:	call   406190 <memcpy@plt>
  417e45:	lea    rax,[r12+rbx*1]
  417e49:	add    rax,0x1
  417e4d:	mov    BYTE PTR [r12+rbx*1],0x0
  417e52:	mov    QWORD PTR [r14+0x40],rax
  417e56:	mov    eax,DWORD PTR [r15+0x10]
  417e5a:	lea    ecx,[rax-0x3]
  417e5d:	cmp    cx,0x2
  417e61:	jb     417e82 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3b2>
  417e63:	cmp    ax,0x1
  417e67:	ja     417e99 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c9>
  417e69:	mov    rax,QWORD PTR [r14+0x30]
  417e6d:	mov    QWORD PTR [rax],r15
  417e70:	mov    rcx,QWORD PTR [rsp]
  417e74:	mov    QWORD PTR [rax+0x8],rcx
  417e78:	add    rax,0x10
  417e7c:	mov    QWORD PTR [r14+0x30],rax
  417e80:	jmp    417e99 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c9>
  417e82:	mov    rax,QWORD PTR [r14+0x38]
  417e86:	mov    QWORD PTR [rax],r15
  417e89:	mov    rcx,QWORD PTR [rsp]
  417e8d:	mov    QWORD PTR [rax+0x8],rcx
  417e91:	add    rax,0x10
  417e95:	mov    QWORD PTR [r14+0x38],rax
  417e99:	add    rsp,0x8
  417e9d:	pop    rbx
  417e9e:	pop    r12
  417ea0:	pop    r13
  417ea2:	pop    r14
  417ea4:	pop    r15
  417ea6:	pop    rbp
  417ea7:	ret    
  417ea8:	nop    DWORD PTR [rax+rax*1+0x0]
  417eb0:	mov    rdi,QWORD PTR [rdi+0x8]
  417eb4:	mov    rsi,QWORD PTR [rsi+0x8]
  417eb8:	jmp    406150 <strcmp@plt>
  417ebd:	nop    DWORD PTR [rax]
  417ec0:	push   rbp
  417ec1:	push   r15
  417ec3:	push   r14
  417ec5:	push   rbx
  417ec6:	push   rax
  417ec7:	mov    r15,rdi
  417eca:	mov    r14d,0xffffffff
  417ed0:	xor    ebp,ebp
  417ed2:	mov    ecx,DWORD PTR [rsp+0x40]
  417ed6:	add    ecx,0xfffffffe
  417ed9:	cmp    cx,0xd
  417edd:	ja     417f94 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c4>
  417ee3:	lea    rax,[rsp+0x30]
  417ee8:	mov    dl,0xd
  417eea:	movzx  ecx,cx
  417eed:	lea    rsi,[rip+0x2ce14]        # 444d08 <_IO_stdin_used@@Base+0x17d08>
  417ef4:	movsxd rdi,DWORD PTR [rsi+rcx*4]
  417ef8:	add    rdi,rsi
  417efb:	mov    cl,0xd
  417efd:	xor    ebx,ebx
  417eff:	jmp    rdi
  417f01:	mov    cl,0xe
  417f03:	mov    r14d,0xffffffff
  417f09:	jmp    417f37 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x467>
  417f0b:	mov    rax,QWORD PTR [rax]
  417f0e:	mov    r14d,DWORD PTR [rax+0xc8]
  417f15:	movzx  ecx,WORD PTR [rax+0x10]
  417f19:	mov    dl,0xf
  417f1b:	cmp    cx,0x2
  417f1f:	jb     417f55 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x485>
  417f21:	cmp    cx,0x3
  417f25:	jne    417f98 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c8>
  417f27:	add    rax,0x48
  417f2b:	mov    cl,0xe
  417f2d:	jmp    417f37 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x467>
  417f2f:	mov    r14d,0xffffffff
  417f35:	xor    ecx,ecx
  417f37:	mov    eax,DWORD PTR [rax]
  417f39:	dec    eax
  417f3b:	cmp    eax,0xa
  417f3e:	ja     417f5c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x48c>
  417f40:	cdqe   
  417f42:	lea    rdx,[rip+0x2ce17]        # 444d60 <_IO_stdin_used@@Base+0x17d60>
  417f49:	mov    dl,BYTE PTR [rax+rdx*1]
  417f4c:	test   cl,cl
  417f4e:	je     417f62 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x492>
  417f50:	cmp    cl,0xe
  417f53:	jne    417fa3 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4d3>
  417f55:	mov    bpl,0xe
  417f58:	mov    ebx,edx
  417f5a:	jmp    417fa7 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4d7>
  417f5c:	xor    edx,edx
  417f5e:	test   cl,cl
  417f60:	jne    417f50 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x480>
  417f62:	mov    ebp,edx
  417f64:	mov    ebx,ecx
  417f66:	jmp    417fa7 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4d7>
  417f68:	mov    rax,QWORD PTR [rax]
  417f6b:	mov    edx,DWORD PTR [rax+0xc8]
  417f71:	movzx  esi,WORD PTR [rax+0x10]
  417f75:	mov    cl,0xf
  417f77:	cmp    si,0x2
  417f7b:	jb     417fa0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4d0>
  417f7d:	cmp    si,0x4
  417f81:	je     417f9e <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4ce>
  417f83:	cmp    si,0x3
  417f87:	jne    417f98 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c8>
  417f89:	add    rax,0x48
  417f8d:	xor    ecx,ecx
  417f8f:	mov    r14d,edx
  417f92:	jmp    417f37 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x467>
  417f94:	xor    ebx,ebx
  417f96:	jmp    417fa7 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4d7>
  417f98:	xor    ebp,ebp
  417f9a:	xor    ebx,ebx
  417f9c:	jmp    417fa7 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4d7>
  417f9e:	mov    cl,0x10
  417fa0:	mov    r14d,edx
  417fa3:	xor    ebx,ebx
  417fa5:	mov    ebp,ecx
  417fa7:	mov    rdi,r15
  417faa:	mov    esi,0x3
  417faf:	call   428890 <flatcc_builder_start_table@@Base>
  417fb4:	test   eax,eax
  417fb6:	je     417fc5 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4f5>
  417fb8:	xor    eax,eax
  417fba:	add    rsp,0x8
  417fbe:	pop    rbx
  417fbf:	pop    r14
  417fc1:	pop    r15
  417fc3:	pop    rbp
  417fc4:	ret    
  417fc5:	cmp    r14d,0xffffffff
  417fc9:	je     417fea <__flatcc_fb_codegen_bfbs_to_file@@Base+0x51a>
  417fcb:	mov    edx,0x4
  417fd0:	mov    rdi,r15
  417fd3:	mov    esi,0x2
  417fd8:	mov    ecx,0x4
  417fdd:	call   429c10 <flatcc_builder_table_add@@Base>
  417fe2:	test   rax,rax
  417fe5:	je     417fb8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4e8>
  417fe7:	mov    DWORD PTR [rax],r14d
  417fea:	test   bpl,bpl
  417fed:	je     41800b <__flatcc_fb_codegen_bfbs_to_file@@Base+0x53b>
  417fef:	mov    edx,0x1
  417ff4:	mov    rdi,r15
  417ff7:	xor    esi,esi
  417ff9:	mov    ecx,0x1
  417ffe:	call   429c10 <flatcc_builder_table_add@@Base>
  418003:	test   rax,rax
  418006:	je     417fb8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4e8>
  418008:	mov    BYTE PTR [rax],bpl
  41800b:	test   bl,bl
  41800d:	je     41802d <__flatcc_fb_codegen_bfbs_to_file@@Base+0x55d>
  41800f:	mov    edx,0x1
  418014:	mov    rdi,r15
  418017:	mov    esi,0x1
  41801c:	mov    ecx,0x1
  418021:	call   429c10 <flatcc_builder_table_add@@Base>
  418026:	test   rax,rax
  418029:	je     417fb8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4e8>
  41802b:	mov    BYTE PTR [rax],bl
  41802d:	lea    rsi,[rip+0x2cd0c]        # 444d40 <_IO_stdin_used@@Base+0x17d40>
  418034:	mov    rdi,r15
  418037:	xor    edx,edx
  418039:	call   429230 <flatcc_builder_check_required@@Base>
  41803e:	test   eax,eax
  418040:	je     418054 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x584>
  418042:	mov    rdi,r15
  418045:	add    rsp,0x8
  418049:	pop    rbx
  41804a:	pop    r14
  41804c:	pop    r15
  41804e:	pop    rbp
  41804f:	jmp    4292a0 <flatcc_builder_end_table@@Base>
  418054:	lea    rdi,[rip+0x2cd3c]        # 444d97 <_IO_stdin_used@@Base+0x17d97>
  41805b:	lea    rsi,[rip+0x2cdc2]        # 444e24 <_IO_stdin_used@@Base+0x17e24>
  418062:	lea    rcx,[rip+0x2ce34]        # 444e9d <_IO_stdin_used@@Base+0x17e9d>
  418069:	mov    edx,0x17
  41806e:	call   4060f0 <__assert_fail@plt>
  418073:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41807d:	nop    DWORD PTR [rax]
  418080:	push   rbp
  418081:	push   r15
  418083:	push   r14
  418085:	push   r13
  418087:	push   r12
  418089:	push   rbx
  41808a:	sub    rsp,0x18
  41808e:	lea    rbp,[rsi+rsi*1]
  418092:	mov    QWORD PTR [rsp+0x10],rdx
  418097:	cmp    rbp,rdx
  41809a:	ja     4182a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7d8>
  4180a0:	mov    r12,rsi
  4180a3:	mov    QWORD PTR [rsp+0x8],rdi
  4180a8:	nop    DWORD PTR [rax+rax*1+0x0]
  4180b0:	cmp    rbp,QWORD PTR [rsp+0x10]
  4180b5:	jae    4181b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6e0>
  4180bb:	test   rdi,rdi
  4180be:	je     4182d6 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x806>
  4180c4:	mov    esi,DWORD PTR [rdi-0x4]
  4180c7:	cmp    rbp,rsi
  4180ca:	jae    4182d6 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x806>
  4180d0:	lea    rcx,[rdi+rbp*4]
  4180d4:	mov    edx,DWORD PTR [rdi+rbp*4]
  4180d7:	lea    rax,[rcx+rdx*1]
  4180db:	movsxd rcx,DWORD PTR [rdx+rcx*1]
  4180df:	mov    rdx,rax
  4180e2:	sub    rdx,rcx
  4180e5:	cmp    WORD PTR [rdx],0x6
  4180e9:	jb     4182b7 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7e7>
  4180ef:	neg    rcx
  4180f2:	movzx  ecx,WORD PTR [rax+rcx*1+0x4]
  4180f7:	test   rcx,rcx
  4180fa:	je     4182b7 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7e7>
  418100:	mov    rbx,rbp
  418103:	or     rbx,0x1
  418107:	cmp    rbx,rsi
  41810a:	jae    4182d6 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x806>
  418110:	mov    QWORD PTR [rsp],rsi
  418114:	lea    rsi,[rdi+rbx*4]
  418118:	mov    edi,DWORD PTR [rdi+rbx*4]
  41811b:	lea    rdx,[rsi+rdi*1]
  41811f:	movsxd rsi,DWORD PTR [rdi+rsi*1]
  418123:	mov    rdi,rdx
  418126:	sub    rdi,rsi
  418129:	cmp    WORD PTR [rdi],0x6
  41812d:	jb     4182b7 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7e7>
  418133:	neg    rsi
  418136:	movzx  esi,WORD PTR [rdx+rsi*1+0x4]
  41813b:	test   rsi,rsi
  41813e:	je     4182b7 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7e7>
  418144:	lea    rdi,[rax+rcx*1]
  418148:	mov    eax,DWORD PTR [rax+rcx*1]
  41814b:	add    rdi,rax
  41814e:	add    rdi,0x4
  418152:	lea    rax,[rdx+rsi*1]
  418156:	mov    ecx,DWORD PTR [rdx+rsi*1]
  418159:	lea    rsi,[rcx+rax*1]
  41815d:	add    rsi,0x4
  418161:	mov    r14d,DWORD PTR [rcx+rax*1]
  418165:	mov    r15d,DWORD PTR [rdi-0x4]
  418169:	cmp    r15d,r14d
  41816c:	mov    edx,r14d
  41816f:	cmovb  edx,r15d
  418173:	call   406060 <strncmp@plt>
  418178:	test   eax,eax
  41817a:	mov    rax,rbx
  41817d:	cmovne rax,rbp
  418181:	cmovs  rax,rbx
  418185:	cmovne rbp,rax
  418189:	cmp    r15d,r14d
  41818c:	cmovb  rbp,rax
  418190:	mov    r13,rbp
  418193:	mov    rdi,QWORD PTR [rsp+0x8]
  418198:	mov    rsi,QWORD PTR [rsp]
  41819c:	cmp    r12,rsi
  41819f:	jb     4181c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6f8>
  4181a1:	jmp    4182d6 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x806>
  4181a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4181b0:	test   rdi,rdi
  4181b3:	je     4182d6 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x806>
  4181b9:	mov    esi,DWORD PTR [rdi-0x4]
  4181bc:	mov    r13,rbp
  4181bf:	cmp    r12,rsi
  4181c2:	jae    4182d6 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x806>
  4181c8:	lea    r15,[rdi+r12*4]
  4181cc:	mov    r14d,DWORD PTR [rdi+r12*4]
  4181d0:	lea    rax,[r15+r14*1]
  4181d4:	movsxd rcx,DWORD PTR [r14+r15*1]
  4181d8:	mov    rdx,rax
  4181db:	sub    rdx,rcx
  4181de:	cmp    WORD PTR [rdx],0x6
  4181e2:	jb     4182b7 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7e7>
  4181e8:	neg    rcx
  4181eb:	movzx  ecx,WORD PTR [rax+rcx*1+0x4]
  4181f0:	test   rcx,rcx
  4181f3:	je     4182b7 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7e7>
  4181f9:	cmp    r13,rsi
  4181fc:	jae    4182d6 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x806>
  418202:	lea    rbx,[rdi+r13*4]
  418206:	mov    ebp,DWORD PTR [rdi+r13*4]
  41820a:	lea    rdx,[rbx+rbp*1]
  41820e:	movsxd rsi,DWORD PTR [rbp+rbx*1+0x0]
  418213:	mov    rdi,rdx
  418216:	sub    rdi,rsi
  418219:	cmp    WORD PTR [rdi],0x6
  41821d:	jb     4182b7 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7e7>
  418223:	neg    rsi
  418226:	movzx  esi,WORD PTR [rdx+rsi*1+0x4]
  41822b:	test   rsi,rsi
  41822e:	je     4182b7 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7e7>
  418234:	lea    rdi,[rax+rcx*1]
  418238:	mov    eax,DWORD PTR [rax+rcx*1]
  41823b:	add    rdi,rax
  41823e:	add    rdi,0x4
  418242:	lea    rax,[rdx+rsi*1]
  418246:	mov    ecx,DWORD PTR [rdx+rsi*1]
  418249:	lea    rsi,[rcx+rax*1]
  41824d:	add    rsi,0x4
  418251:	mov    edx,DWORD PTR [rcx+rax*1]
  418254:	mov    eax,DWORD PTR [rdi-0x4]
  418257:	cmp    eax,edx
  418259:	setb   BYTE PTR [rsp]
  41825d:	cmovb  edx,eax
  418260:	call   406060 <strncmp@plt>
  418265:	test   eax,eax
  418267:	setne  cl
  41826a:	setle  al
  41826d:	or     cl,BYTE PTR [rsp]
  418270:	cmp    cl,0x1
  418273:	mov    rdi,QWORD PTR [rsp+0x8]
  418278:	jne    4182a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7d8>
  41827a:	test   al,al
  41827c:	je     4182a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x7d8>
  41827e:	sub    r12d,r13d
  418281:	lea    eax,[r12*4+0x0]
  418289:	sub    ebp,eax
  41828b:	lea    eax,[r14+r12*4]
  41828f:	mov    DWORD PTR [r15],ebp
  418292:	mov    DWORD PTR [rbx],eax
  418294:	mov    rbp,r13
  418297:	add    rbp,r13
  41829a:	mov    r12,r13
  41829d:	cmp    rbp,QWORD PTR [rsp+0x10]
  4182a2:	jbe    4180b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5e0>
  4182a8:	add    rsp,0x18
  4182ac:	pop    rbx
  4182ad:	pop    r12
  4182af:	pop    r13
  4182b1:	pop    r14
  4182b3:	pop    r15
  4182b5:	pop    rbp
  4182b6:	ret    
  4182b7:	lea    rdi,[rip+0x2d145]        # 445403 <_IO_stdin_used@@Base+0x18403>
  4182be:	lea    rsi,[rip+0x2d079]        # 44533e <_IO_stdin_used@@Base+0x1833e>
  4182c5:	lea    rcx,[rip+0x2d1da]        # 4454a6 <_IO_stdin_used@@Base+0x184a6>
  4182cc:	mov    edx,0xc3
  4182d1:	call   4060f0 <__assert_fail@plt>
  4182d6:	lea    rdi,[rip+0x2d147]        # 445424 <_IO_stdin_used@@Base+0x18424>
  4182dd:	lea    rsi,[rip+0x2d05a]        # 44533e <_IO_stdin_used@@Base+0x1833e>
  4182e4:	lea    rcx,[rip+0x2d200]        # 4454eb <_IO_stdin_used@@Base+0x184eb>
  4182eb:	mov    edx,0xc0
  4182f0:	call   4060f0 <__assert_fail@plt>
  4182f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4182ff:	nop

0000000000418300 <str_set_clear@@Base>:
  418300:	push   rbx
  418301:	mov    rbx,rdi
  418304:	mov    rdi,QWORD PTR [rdi]
  418307:	test   rdi,rdi
  41830a:	je     418311 <str_set_clear@@Base+0x11>
  41830c:	call   406040 <free@plt>
  418311:	vxorps xmm0,xmm0,xmm0
  418315:	vmovups YMMWORD PTR [rbx],ymm0
  418319:	pop    rbx
  41831a:	vzeroupper 
  41831d:	ret    
  41831e:	xchg   ax,ax

0000000000418320 <str_set_destroy@@Base>:
  418320:	push   r15
  418322:	push   r14
  418324:	push   r13
  418326:	push   r12
  418328:	push   rbx
  418329:	mov    r12,rdi
  41832c:	test   rsi,rsi
  41832f:	je     418377 <str_set_destroy@@Base+0x57>
  418331:	mov    rax,QWORD PTR [r12+0x18]
  418336:	test   rax,rax
  418339:	je     418377 <str_set_destroy@@Base+0x57>
  41833b:	mov    r14,rdx
  41833e:	mov    r15,rsi
  418341:	mov    r13,QWORD PTR [r12]
  418345:	xor    ebx,ebx
  418347:	jmp    418358 <str_set_destroy@@Base+0x38>
  418349:	nop    DWORD PTR [rax+0x0]
  418350:	inc    rbx
  418353:	cmp    rbx,rax
  418356:	jae    418377 <str_set_destroy@@Base+0x57>
  418358:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  41835d:	mov    rcx,rsi
  418360:	or     rcx,0x2
  418364:	cmp    rcx,0x2
  418368:	je     418350 <str_set_destroy@@Base+0x30>
  41836a:	mov    rdi,r14
  41836d:	call   r15
  418370:	mov    rax,QWORD PTR [r12+0x18]
  418375:	jmp    418350 <str_set_destroy@@Base+0x30>
  418377:	mov    rdi,QWORD PTR [r12]
  41837b:	test   rdi,rdi
  41837e:	je     418385 <str_set_destroy@@Base+0x65>
  418380:	call   406040 <free@plt>
  418385:	vxorps xmm0,xmm0,xmm0
  418389:	vmovups YMMWORD PTR [r12],ymm0
  41838f:	pop    rbx
  418390:	pop    r12
  418392:	pop    r13
  418394:	pop    r14
  418396:	pop    r15
  418398:	vzeroupper 
  41839b:	ret    
  41839c:	nop    DWORD PTR [rax+0x0]

00000000004183a0 <str_set_init@@Base>:
  4183a0:	push   r14
  4183a2:	push   rbx
  4183a3:	push   rax
  4183a4:	mov    r14,rdi
  4183a7:	mov    eax,0x4
  4183ac:	nop    DWORD PTR [rax+0x0]
  4183b0:	mov    rbx,rax
  4183b3:	imul   rcx,rax,0xb3
  4183ba:	shr    rcx,0x8
  4183be:	add    rax,rax
  4183c1:	cmp    rcx,rsi
  4183c4:	jb     4183b0 <str_set_init@@Base+0x10>
  4183c6:	mov    esi,0x8
  4183cb:	mov    rdi,rbx
  4183ce:	call   406140 <calloc@plt>
  4183d3:	mov    QWORD PTR [r14],rax
  4183d6:	test   rax,rax
  4183d9:	je     4183ed <str_set_init@@Base+0x4d>
  4183db:	vxorps xmm0,xmm0,xmm0
  4183df:	vmovups XMMWORD PTR [r14+0x8],xmm0
  4183e5:	mov    QWORD PTR [r14+0x18],rbx
  4183e9:	xor    eax,eax
  4183eb:	jmp    4183f2 <str_set_init@@Base+0x52>
  4183ed:	mov    eax,0xffffffff
  4183f2:	add    rsp,0x8
  4183f6:	pop    rbx
  4183f7:	pop    r14
  4183f9:	ret    
  4183fa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000418400 <str_set_resize@@Base>:
  418400:	jmp    418410 <str_set_resize@@Base+0x10>
  418402:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41840c:	nop    DWORD PTR [rax+0x0]
  418410:	push   r15
  418412:	push   r14
  418414:	push   r13
  418416:	push   r12
  418418:	push   rbx
  418419:	sub    rsp,0x20
  41841d:	mov    r14,rdi
  418420:	mov    r12,QWORD PTR [rdi]
  418423:	mov    rax,QWORD PTR [rdi+0x10]
  418427:	cmp    rax,rsi
  41842a:	cmova  rsi,rax
  41842e:	mov    eax,0x4
  418433:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41843d:	nop    DWORD PTR [rax]
  418440:	mov    rbx,rax
  418443:	imul   rcx,rax,0xb3
  41844a:	shr    rcx,0x8
  41844e:	add    rax,rax
  418451:	cmp    rcx,rsi
  418454:	jb     418440 <str_set_resize@@Base+0x40>
  418456:	mov    esi,0x8
  41845b:	mov    rdi,rbx
  41845e:	call   406140 <calloc@plt>
  418463:	mov    QWORD PTR [rsp],rax
  418467:	test   rax,rax
  41846a:	je     4184ce <str_set_resize@@Base+0xce>
  41846c:	vxorps xmm0,xmm0,xmm0
  418470:	vmovups XMMWORD PTR [rsp+0x8],xmm0
  418476:	mov    QWORD PTR [rsp+0x18],rbx
  41847b:	mov    rax,QWORD PTR [r14+0x18]
  41847f:	test   rax,rax
  418482:	je     4184d8 <str_set_resize@@Base+0xd8>
  418484:	xor    ebx,ebx
  418486:	mov    r15,rsp
  418489:	jmp    418498 <str_set_resize@@Base+0x98>
  41848b:	nop    DWORD PTR [rax+rax*1+0x0]
  418490:	inc    rbx
  418493:	cmp    rbx,rax
  418496:	jae    4184d5 <str_set_resize@@Base+0xd5>
  418498:	mov    r13,QWORD PTR [r12+rbx*8]
  41849c:	mov    rcx,r13
  41849f:	or     rcx,0x2
  4184a3:	cmp    rcx,0x2
  4184a7:	je     418490 <str_set_resize@@Base+0x90>
  4184a9:	mov    rdi,r13
  4184ac:	call   4060d0 <strlen@plt>
  4184b1:	mov    rdi,r15
  4184b4:	mov    rsi,r13
  4184b7:	mov    rdx,rax
  4184ba:	mov    rcx,r13
  4184bd:	mov    r8d,0x3
  4184c3:	call   418520 <str_set_insert@@Base+0x10>
  4184c8:	mov    rax,QWORD PTR [r14+0x18]
  4184cc:	jmp    418490 <str_set_resize@@Base+0x90>
  4184ce:	mov    eax,0xffffffff
  4184d3:	jmp    4184f1 <str_set_resize@@Base+0xf1>
  4184d5:	mov    r12,QWORD PTR [r14]
  4184d8:	test   r12,r12
  4184db:	je     4184e5 <str_set_resize@@Base+0xe5>
  4184dd:	mov    rdi,r12
  4184e0:	call   406040 <free@plt>
  4184e5:	vmovups ymm0,YMMWORD PTR [rsp]
  4184ea:	vmovups YMMWORD PTR [r14],ymm0
  4184ef:	xor    eax,eax
  4184f1:	add    rsp,0x20
  4184f5:	pop    rbx
  4184f6:	pop    r12
  4184f8:	pop    r13
  4184fa:	pop    r14
  4184fc:	pop    r15
  4184fe:	vzeroupper 
  418501:	ret    
  418502:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41850c:	nop    DWORD PTR [rax+0x0]

0000000000418510 <str_set_insert@@Base>:
  418510:	jmp    418520 <str_set_insert@@Base+0x10>
  418512:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41851c:	nop    DWORD PTR [rax+0x0]
  418520:	push   rbp
  418521:	push   r15
  418523:	push   r14
  418525:	push   r13
  418527:	push   r12
  418529:	push   rbx
  41852a:	sub    rsp,0x38
  41852e:	mov    QWORD PTR [rsp+0x20],rdx
  418533:	mov    QWORD PTR [rsp+0x18],rsi
  418538:	cmp    rcx,0x2
  41853c:	je     41867b <str_set_insert@@Base+0x16b>
  418542:	mov    r13,rcx
  418545:	cmp    rcx,0x1
  418549:	je     41869a <str_set_insert@@Base+0x18a>
  41854f:	test   r13,r13
  418552:	je     4186b9 <str_set_insert@@Base+0x1a9>
  418558:	mov    ebp,r8d
  41855b:	mov    rbx,rdi
  41855e:	mov    rsi,QWORD PTR [rdi+0x10]
  418562:	mov    r15,QWORD PTR [rdi+0x18]
  418566:	imul   rax,r15,0xb3
  41856d:	shr    rax,0x8
  418571:	cmp    rsi,rax
  418574:	jb     41858d <str_set_insert@@Base+0x7d>
  418576:	add    rsi,rsi
  418579:	mov    rdi,rbx
  41857c:	call   418410 <str_set_resize@@Base+0x10>
  418581:	test   eax,eax
  418583:	jne    4186d8 <str_set_insert@@Base+0x1c8>
  418589:	mov    r15,QWORD PTR [rbx+0x18]
  41858d:	mov    r14,QWORD PTR [rbx]
  418590:	dec    r15
  418593:	lea    rcx,[rsp+0x30]
  418598:	mov    rdi,QWORD PTR [rsp+0x18]
  41859d:	mov    rsi,QWORD PTR [rsp+0x20]
  4185a2:	mov    edx,0x2f693b52
  4185a7:	call   42b7d0 <cmetrohash64_1@@Base>
  4185ac:	mov    rcx,QWORD PTR [rsp+0x30]
  4185b1:	mov    r12d,ecx
  4185b4:	mov    eax,r15d
  4185b7:	and    eax,ecx
  4185b9:	mov    ecx,ebp
  4185bb:	or     ecx,0x1
  4185be:	cmp    ecx,0x3
  4185c1:	jne    4185e9 <str_set_insert@@Base+0xd9>
  4185c3:	inc    QWORD PTR [rbx+0x10]
  4185c7:	nop    WORD PTR [rax+rax*1+0x0]
  4185d0:	inc    r12
  4185d3:	mov    rcx,QWORD PTR [r14+rax*8]
  4185d7:	or     rcx,0x2
  4185db:	cmp    rcx,0x2
  4185df:	je     418647 <str_set_insert@@Base+0x137>
  4185e1:	mov    rax,r12
  4185e4:	and    rax,r15
  4185e7:	jmp    4185d0 <str_set_insert@@Base+0xc0>
  4185e9:	mov    DWORD PTR [rsp+0xc],ebp
  4185ed:	mov    QWORD PTR [rsp+0x28],rbx
  4185f2:	mov    QWORD PTR [rsp+0x10],r13
  4185f7:	inc    r12
  4185fa:	xor    r13d,r13d
  4185fd:	jmp    418610 <str_set_insert@@Base+0x100>
  4185ff:	nop
  418600:	test   r13,r13
  418603:	cmove  r13,rbx
  418607:	mov    rax,r12
  41860a:	and    rax,r15
  41860d:	inc    r12
  418610:	lea    rbx,[r14+rax*8]
  418614:	mov    rbp,QWORD PTR [r14+rax*8]
  418618:	cmp    rbp,0x2
  41861c:	je     418600 <str_set_insert@@Base+0xf0>
  41861e:	test   rbp,rbp
  418621:	je     41864f <str_set_insert@@Base+0x13f>
  418623:	mov    rdi,QWORD PTR [rsp+0x18]
  418628:	mov    rsi,rbp
  41862b:	mov    rdx,QWORD PTR [rsp+0x20]
  418630:	call   406060 <strncmp@plt>
  418635:	test   eax,eax
  418637:	jne    418607 <str_set_insert@@Base+0xf7>
  418639:	cmp    DWORD PTR [rsp+0xc],0x0
  41863e:	mov    r13,QWORD PTR [rsp+0x10]
  418643:	jne    418669 <str_set_insert@@Base+0x159>
  418645:	jmp    418666 <str_set_insert@@Base+0x156>
  418647:	lea    rbx,[r14+rax*8]
  41864b:	xor    ebp,ebp
  41864d:	jmp    418666 <str_set_insert@@Base+0x156>
  41864f:	test   r13,r13
  418652:	cmovne rbx,r13
  418656:	mov    rax,QWORD PTR [rsp+0x28]
  41865b:	inc    QWORD PTR [rax+0x10]
  41865f:	xor    ebp,ebp
  418661:	mov    r13,QWORD PTR [rsp+0x10]
  418666:	mov    QWORD PTR [rbx],r13
  418669:	mov    rax,rbp
  41866c:	add    rsp,0x38
  418670:	pop    rbx
  418671:	pop    r12
  418673:	pop    r13
  418675:	pop    r14
  418677:	pop    r15
  418679:	pop    rbp
  41867a:	ret    
  41867b:	lea    rdi,[rip+0x2cff1]        # 445673 <str_set_deleted@@Base+0xd3>
  418682:	lea    rsi,[rip+0x2cf36]        # 4455bf <str_set_deleted@@Base+0x1f>
  418689:	lea    rcx,[rip+0x2cf99]        # 445629 <str_set_deleted@@Base+0x89>
  418690:	mov    edx,0x73
  418695:	call   4060f0 <__assert_fail@plt>
  41869a:	lea    rdi,[rip+0x2cfe9]        # 44568a <str_set_deleted@@Base+0xea>
  4186a1:	lea    rsi,[rip+0x2cf17]        # 4455bf <str_set_deleted@@Base+0x1f>
  4186a8:	lea    rcx,[rip+0x2cf7a]        # 445629 <str_set_deleted@@Base+0x89>
  4186af:	mov    edx,0x74
  4186b4:	call   4060f0 <__assert_fail@plt>
  4186b9:	lea    rdi,[rip+0x2cee8]        # 4455a8 <str_set_deleted@@Base+0x8>
  4186c0:	lea    rsi,[rip+0x2cef8]        # 4455bf <str_set_deleted@@Base+0x1f>
  4186c7:	lea    rcx,[rip+0x2cf5b]        # 445629 <str_set_deleted@@Base+0x89>
  4186ce:	mov    edx,0x72
  4186d3:	call   4060f0 <__assert_fail@plt>
  4186d8:	mov    rax,QWORD PTR [rip+0x37919]        # 44fff8 <stderr@GLIBC_2.2.5>
  4186df:	mov    rdi,QWORD PTR [rax]
  4186e2:	lea    rsi,[rip+0x2cfb6]        # 44569f <str_set_deleted@@Base+0xff>
  4186e9:	lea    rdx,[rip+0x2cfc6]        # 4456b6 <str_set_deleted@@Base+0x116>
  4186f0:	xor    eax,eax
  4186f2:	call   406170 <fprintf@plt>
  4186f7:	mov    edi,0x1
  4186fc:	call   406210 <exit@plt>
  418701:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41870b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000418710 <str_set_insert_item@@Base>:
  418710:	push   rbp
  418711:	push   r14
  418713:	push   rbx
  418714:	mov    r14d,edx
  418717:	mov    rbx,rsi
  41871a:	mov    rbp,rdi
  41871d:	mov    rdi,rsi
  418720:	call   4060d0 <strlen@plt>
  418725:	mov    rdi,rbp
  418728:	mov    rsi,rbx
  41872b:	mov    rdx,rax
  41872e:	mov    rcx,rbx
  418731:	mov    r8d,r14d
  418734:	pop    rbx
  418735:	pop    r14
  418737:	pop    rbp
  418738:	jmp    418520 <str_set_insert@@Base+0x10>
  41873d:	nop    DWORD PTR [rax]

0000000000418740 <str_set_find@@Base>:
  418740:	push   rbp
  418741:	push   r15
  418743:	push   r14
  418745:	push   r13
  418747:	push   r12
  418749:	push   rbx
  41874a:	push   rax
  41874b:	mov    r12,QWORD PTR [rdi]
  41874e:	test   r12,r12
  418751:	je     4187ac <str_set_find@@Base+0x6c>
  418753:	mov    r14,rdx
  418756:	mov    r15,rsi
  418759:	mov    r13,QWORD PTR [rdi+0x18]
  41875d:	dec    r13
  418760:	mov    rcx,rsp
  418763:	mov    rdi,rsi
  418766:	mov    rsi,rdx
  418769:	mov    edx,0x2f693b52
  41876e:	call   42b7d0 <cmetrohash64_1@@Base>
  418773:	mov    ebp,DWORD PTR [rsp]
  418776:	jmp    418783 <str_set_find@@Base+0x43>
  418778:	nop    DWORD PTR [rax+rax*1+0x0]
  418780:	inc    rbp
  418783:	mov    rax,rbp
  418786:	and    rax,r13
  418789:	mov    rbx,QWORD PTR [r12+rax*8]
  41878d:	cmp    rbx,0x2
  418791:	je     418780 <str_set_find@@Base+0x40>
  418793:	test   rbx,rbx
  418796:	je     4187ac <str_set_find@@Base+0x6c>
  418798:	mov    rdi,r15
  41879b:	mov    rsi,rbx
  41879e:	mov    rdx,r14
  4187a1:	call   406060 <strncmp@plt>
  4187a6:	test   eax,eax
  4187a8:	jne    418780 <str_set_find@@Base+0x40>
  4187aa:	jmp    4187ae <str_set_find@@Base+0x6e>
  4187ac:	xor    ebx,ebx
  4187ae:	mov    rax,rbx
  4187b1:	add    rsp,0x8
  4187b5:	pop    rbx
  4187b6:	pop    r12
  4187b8:	pop    r13
  4187ba:	pop    r14
  4187bc:	pop    r15
  4187be:	pop    rbp
  4187bf:	ret    

00000000004187c0 <str_set_find_item@@Base>:
  4187c0:	push   rbp
  4187c1:	push   r15
  4187c3:	push   r14
  4187c5:	push   r13
  4187c7:	push   r12
  4187c9:	push   rbx
  4187ca:	push   rax
  4187cb:	mov    r15,rsi
  4187ce:	mov    rbx,rdi
  4187d1:	mov    rdi,rsi
  4187d4:	call   4060d0 <strlen@plt>
  4187d9:	mov    r12,QWORD PTR [rbx]
  4187dc:	test   r12,r12
  4187df:	je     41883c <str_set_find_item@@Base+0x7c>
  4187e1:	mov    r14,rax
  4187e4:	mov    r13,QWORD PTR [rbx+0x18]
  4187e8:	dec    r13
  4187eb:	mov    rcx,rsp
  4187ee:	mov    rdi,r15
  4187f1:	mov    rsi,rax
  4187f4:	mov    edx,0x2f693b52
  4187f9:	call   42b7d0 <cmetrohash64_1@@Base>
  4187fe:	mov    ebp,DWORD PTR [rsp]
  418801:	jmp    418813 <str_set_find_item@@Base+0x53>
  418803:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41880d:	nop    DWORD PTR [rax]
  418810:	inc    rbp
  418813:	mov    rax,rbp
  418816:	and    rax,r13
  418819:	mov    rbx,QWORD PTR [r12+rax*8]
  41881d:	cmp    rbx,0x2
  418821:	je     418810 <str_set_find_item@@Base+0x50>
  418823:	test   rbx,rbx
  418826:	je     41883c <str_set_find_item@@Base+0x7c>
  418828:	mov    rdi,r15
  41882b:	mov    rsi,rbx
  41882e:	mov    rdx,r14
  418831:	call   406060 <strncmp@plt>
  418836:	test   eax,eax
  418838:	jne    418810 <str_set_find_item@@Base+0x50>
  41883a:	jmp    41883e <str_set_find_item@@Base+0x7e>
  41883c:	xor    ebx,ebx
  41883e:	mov    rax,rbx
  418841:	add    rsp,0x8
  418845:	pop    rbx
  418846:	pop    r12
  418848:	pop    r13
  41884a:	pop    r14
  41884c:	pop    r15
  41884e:	pop    rbp
  41884f:	ret    

0000000000418850 <str_set_remove@@Base>:
  418850:	push   rbp
  418851:	push   r15
  418853:	push   r14
  418855:	push   r13
  418857:	push   r12
  418859:	push   rbx
  41885a:	sub    rsp,0x18
  41885e:	mov    r13,QWORD PTR [rdi]
  418861:	test   r13,r13
  418864:	je     4188e0 <str_set_remove@@Base+0x90>
  418866:	mov    QWORD PTR [rsp],rdi
  41886a:	mov    rbp,QWORD PTR [rdi+0x18]
  41886e:	dec    rbp
  418871:	lea    rcx,[rsp+0x10]
  418876:	mov    QWORD PTR [rsp+0x8],rsi
  41887b:	mov    rdi,rsi
  41887e:	mov    r12,rdx
  418881:	mov    rsi,rdx
  418884:	mov    edx,0x2f693b52
  418889:	call   42b7d0 <cmetrohash64_1@@Base>
  41888e:	mov    r15d,DWORD PTR [rsp+0x10]
  418893:	jmp    4188a3 <str_set_remove@@Base+0x53>
  418895:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41889f:	nop
  4188a0:	inc    r15
  4188a3:	mov    r14,r15
  4188a6:	and    r14,rbp
  4188a9:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  4188ae:	cmp    rbx,0x2
  4188b2:	je     4188a0 <str_set_remove@@Base+0x50>
  4188b4:	test   rbx,rbx
  4188b7:	je     4188e0 <str_set_remove@@Base+0x90>
  4188b9:	mov    rdi,QWORD PTR [rsp+0x8]
  4188be:	mov    rsi,rbx
  4188c1:	mov    rdx,r12
  4188c4:	call   406060 <strncmp@plt>
  4188c9:	test   eax,eax
  4188cb:	jne    4188a0 <str_set_remove@@Base+0x50>
  4188cd:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  4188d6:	mov    rax,QWORD PTR [rsp]
  4188da:	dec    QWORD PTR [rax+0x10]
  4188de:	jmp    4188e2 <str_set_remove@@Base+0x92>
  4188e0:	xor    ebx,ebx
  4188e2:	mov    rax,rbx
  4188e5:	add    rsp,0x18
  4188e9:	pop    rbx
  4188ea:	pop    r12
  4188ec:	pop    r13
  4188ee:	pop    r14
  4188f0:	pop    r15
  4188f2:	pop    rbp
  4188f3:	ret    
  4188f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4188fe:	xchg   ax,ax

0000000000418900 <str_set_remove_item@@Base>:
  418900:	push   rbp
  418901:	push   r15
  418903:	push   r14
  418905:	push   r13
  418907:	push   r12
  418909:	push   rbx
  41890a:	sub    rsp,0x18
  41890e:	mov    r14,rsi
  418911:	mov    rbx,rdi
  418914:	mov    rdi,rsi
  418917:	call   4060d0 <strlen@plt>
  41891c:	mov    r13,QWORD PTR [rbx]
  41891f:	test   r13,r13
  418922:	je     4189a0 <str_set_remove_item@@Base+0xa0>
  418924:	mov    QWORD PTR [rsp],rbx
  418928:	mov    rbp,QWORD PTR [rbx+0x18]
  41892c:	dec    rbp
  41892f:	lea    rcx,[rsp+0x10]
  418934:	mov    QWORD PTR [rsp+0x8],r14
  418939:	mov    rdi,r14
  41893c:	mov    r12,rax
  41893f:	mov    rsi,rax
  418942:	mov    edx,0x2f693b52
  418947:	call   42b7d0 <cmetrohash64_1@@Base>
  41894c:	mov    r15d,DWORD PTR [rsp+0x10]
  418951:	jmp    418963 <str_set_remove_item@@Base+0x63>
  418953:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41895d:	nop    DWORD PTR [rax]
  418960:	inc    r15
  418963:	mov    r14,r15
  418966:	and    r14,rbp
  418969:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  41896e:	cmp    rbx,0x2
  418972:	je     418960 <str_set_remove_item@@Base+0x60>
  418974:	test   rbx,rbx
  418977:	je     4189a0 <str_set_remove_item@@Base+0xa0>
  418979:	mov    rdi,QWORD PTR [rsp+0x8]
  41897e:	mov    rsi,rbx
  418981:	mov    rdx,r12
  418984:	call   406060 <strncmp@plt>
  418989:	test   eax,eax
  41898b:	jne    418960 <str_set_remove_item@@Base+0x60>
  41898d:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  418996:	mov    rax,QWORD PTR [rsp]
  41899a:	dec    QWORD PTR [rax+0x10]
  41899e:	jmp    4189a2 <str_set_remove_item@@Base+0xa2>
  4189a0:	xor    ebx,ebx
  4189a2:	mov    rax,rbx
  4189a5:	add    rsp,0x18
  4189a9:	pop    rbx
  4189aa:	pop    r12
  4189ac:	pop    r13
  4189ae:	pop    r14
  4189b0:	pop    r15
  4189b2:	pop    rbp
  4189b3:	ret    
  4189b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4189be:	xchg   ax,ax

00000000004189c0 <str_set_visit@@Base>:
  4189c0:	push   r15
  4189c2:	push   r14
  4189c4:	push   r13
  4189c6:	push   r12
  4189c8:	push   rbx
  4189c9:	mov    rax,QWORD PTR [rdi+0x18]
  4189cd:	test   rax,rax
  4189d0:	je     418a17 <str_set_visit@@Base+0x57>
  4189d2:	mov    r14,rdx
  4189d5:	mov    r15,rsi
  4189d8:	mov    r12,rdi
  4189db:	mov    r13,QWORD PTR [rdi]
  4189de:	xor    ebx,ebx
  4189e0:	jmp    4189f8 <str_set_visit@@Base+0x38>
  4189e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4189ec:	nop    DWORD PTR [rax+0x0]
  4189f0:	inc    rbx
  4189f3:	cmp    rbx,rax
  4189f6:	jae    418a17 <str_set_visit@@Base+0x57>
  4189f8:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  4189fd:	mov    rcx,rsi
  418a00:	or     rcx,0x2
  418a04:	cmp    rcx,0x2
  418a08:	je     4189f0 <str_set_visit@@Base+0x30>
  418a0a:	mov    rdi,r14
  418a0d:	call   r15
  418a10:	mov    rax,QWORD PTR [r12+0x18]
  418a15:	jmp    4189f0 <str_set_visit@@Base+0x30>
  418a17:	pop    rbx
  418a18:	pop    r12
  418a1a:	pop    r13
  418a1c:	pop    r14
  418a1e:	pop    r15
  418a20:	ret    
  418a21:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418a2b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000418a30 <ptr_set_clear@@Base>:
  418a30:	push   rbx
  418a31:	mov    rbx,rdi
  418a34:	mov    rdi,QWORD PTR [rdi]
  418a37:	test   rdi,rdi
  418a3a:	je     418a41 <ptr_set_clear@@Base+0x11>
  418a3c:	call   406040 <free@plt>
  418a41:	vxorps xmm0,xmm0,xmm0
  418a45:	vmovups YMMWORD PTR [rbx],ymm0
  418a49:	pop    rbx
  418a4a:	vzeroupper 
  418a4d:	ret    
  418a4e:	xchg   ax,ax

0000000000418a50 <ptr_set_destroy@@Base>:
  418a50:	push   r15
  418a52:	push   r14
  418a54:	push   r13
  418a56:	push   r12
  418a58:	push   rbx
  418a59:	mov    r12,rdi
  418a5c:	test   rsi,rsi
  418a5f:	je     418aa7 <ptr_set_destroy@@Base+0x57>
  418a61:	mov    rax,QWORD PTR [r12+0x18]
  418a66:	test   rax,rax
  418a69:	je     418aa7 <ptr_set_destroy@@Base+0x57>
  418a6b:	mov    r14,rdx
  418a6e:	mov    r15,rsi
  418a71:	mov    r13,QWORD PTR [r12]
  418a75:	xor    ebx,ebx
  418a77:	jmp    418a88 <ptr_set_destroy@@Base+0x38>
  418a79:	nop    DWORD PTR [rax+0x0]
  418a80:	inc    rbx
  418a83:	cmp    rbx,rax
  418a86:	jae    418aa7 <ptr_set_destroy@@Base+0x57>
  418a88:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  418a8d:	mov    rcx,rsi
  418a90:	or     rcx,0x2
  418a94:	cmp    rcx,0x2
  418a98:	je     418a80 <ptr_set_destroy@@Base+0x30>
  418a9a:	mov    rdi,r14
  418a9d:	call   r15
  418aa0:	mov    rax,QWORD PTR [r12+0x18]
  418aa5:	jmp    418a80 <ptr_set_destroy@@Base+0x30>
  418aa7:	mov    rdi,QWORD PTR [r12]
  418aab:	test   rdi,rdi
  418aae:	je     418ab5 <ptr_set_destroy@@Base+0x65>
  418ab0:	call   406040 <free@plt>
  418ab5:	vxorps xmm0,xmm0,xmm0
  418ab9:	vmovups YMMWORD PTR [r12],ymm0
  418abf:	pop    rbx
  418ac0:	pop    r12
  418ac2:	pop    r13
  418ac4:	pop    r14
  418ac6:	pop    r15
  418ac8:	vzeroupper 
  418acb:	ret    
  418acc:	nop    DWORD PTR [rax+0x0]

0000000000418ad0 <ptr_set_init@@Base>:
  418ad0:	push   r14
  418ad2:	push   rbx
  418ad3:	push   rax
  418ad4:	mov    r14,rdi
  418ad7:	mov    eax,0x4
  418adc:	nop    DWORD PTR [rax+0x0]
  418ae0:	mov    rbx,rax
  418ae3:	imul   rcx,rax,0xb3
  418aea:	shr    rcx,0x8
  418aee:	add    rax,rax
  418af1:	cmp    rcx,rsi
  418af4:	jb     418ae0 <ptr_set_init@@Base+0x10>
  418af6:	mov    esi,0x8
  418afb:	mov    rdi,rbx
  418afe:	call   406140 <calloc@plt>
  418b03:	mov    QWORD PTR [r14],rax
  418b06:	test   rax,rax
  418b09:	je     418b1d <ptr_set_init@@Base+0x4d>
  418b0b:	vxorps xmm0,xmm0,xmm0
  418b0f:	vmovups XMMWORD PTR [r14+0x8],xmm0
  418b15:	mov    QWORD PTR [r14+0x18],rbx
  418b19:	xor    eax,eax
  418b1b:	jmp    418b22 <ptr_set_init@@Base+0x52>
  418b1d:	mov    eax,0xffffffff
  418b22:	add    rsp,0x8
  418b26:	pop    rbx
  418b27:	pop    r14
  418b29:	ret    
  418b2a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000418b30 <ptr_set_resize@@Base>:
  418b30:	jmp    418b40 <ptr_set_resize@@Base+0x10>
  418b32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418b3c:	nop    DWORD PTR [rax+0x0]
  418b40:	push   r15
  418b42:	push   r14
  418b44:	push   r12
  418b46:	push   rbx
  418b47:	sub    rsp,0x28
  418b4b:	mov    r14,rdi
  418b4e:	mov    r12,QWORD PTR [rdi]
  418b51:	mov    rax,QWORD PTR [rdi+0x10]
  418b55:	cmp    rax,rsi
  418b58:	cmova  rsi,rax
  418b5c:	mov    eax,0x4
  418b61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418b6b:	nop    DWORD PTR [rax+rax*1+0x0]
  418b70:	mov    rbx,rax
  418b73:	imul   rcx,rax,0xb3
  418b7a:	shr    rcx,0x8
  418b7e:	add    rax,rax
  418b81:	cmp    rcx,rsi
  418b84:	jb     418b70 <ptr_set_resize@@Base+0x40>
  418b86:	mov    esi,0x8
  418b8b:	mov    rdi,rbx
  418b8e:	call   406140 <calloc@plt>
  418b93:	mov    QWORD PTR [rsp+0x8],rax
  418b98:	test   rax,rax
  418b9b:	je     418bef <ptr_set_resize@@Base+0xbf>
  418b9d:	vxorps xmm0,xmm0,xmm0
  418ba1:	vmovups XMMWORD PTR [rsp+0x10],xmm0
  418ba7:	mov    QWORD PTR [rsp+0x20],rbx
  418bac:	mov    rax,QWORD PTR [r14+0x18]
  418bb0:	test   rax,rax
  418bb3:	je     418bf9 <ptr_set_resize@@Base+0xc9>
  418bb5:	xor    ebx,ebx
  418bb7:	lea    r15,[rsp+0x8]
  418bbc:	jmp    418bc8 <ptr_set_resize@@Base+0x98>
  418bbe:	xchg   ax,ax
  418bc0:	inc    rbx
  418bc3:	cmp    rbx,rax
  418bc6:	jae    418bf6 <ptr_set_resize@@Base+0xc6>
  418bc8:	mov    rdx,QWORD PTR [r12+rbx*8]
  418bcc:	mov    rcx,rdx
  418bcf:	or     rcx,0x2
  418bd3:	cmp    rcx,0x2
  418bd7:	je     418bc0 <ptr_set_resize@@Base+0x90>
  418bd9:	mov    rdi,r15
  418bdc:	mov    rsi,rdx
  418bdf:	mov    ecx,0x3
  418be4:	call   418c40 <ptr_set_insert@@Base+0x10>
  418be9:	mov    rax,QWORD PTR [r14+0x18]
  418bed:	jmp    418bc0 <ptr_set_resize@@Base+0x90>
  418bef:	mov    eax,0xffffffff
  418bf4:	jmp    418c13 <ptr_set_resize@@Base+0xe3>
  418bf6:	mov    r12,QWORD PTR [r14]
  418bf9:	test   r12,r12
  418bfc:	je     418c06 <ptr_set_resize@@Base+0xd6>
  418bfe:	mov    rdi,r12
  418c01:	call   406040 <free@plt>
  418c06:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  418c0c:	vmovups YMMWORD PTR [r14],ymm0
  418c11:	xor    eax,eax
  418c13:	add    rsp,0x28
  418c17:	pop    rbx
  418c18:	pop    r12
  418c1a:	pop    r14
  418c1c:	pop    r15
  418c1e:	vzeroupper 
  418c21:	ret    
  418c22:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418c2c:	nop    DWORD PTR [rax+0x0]

0000000000418c30 <ptr_set_insert@@Base>:
  418c30:	mov    rdx,rcx
  418c33:	mov    ecx,r8d
  418c36:	jmp    418c40 <ptr_set_insert@@Base+0x10>
  418c38:	nop    DWORD PTR [rax+rax*1+0x0]
  418c40:	push   rbp
  418c41:	push   r15
  418c43:	push   r14
  418c45:	push   r13
  418c47:	push   r12
  418c49:	push   rbx
  418c4a:	sub    rsp,0x18
  418c4e:	cmp    rdx,0x2
  418c52:	je     418d68 <ptr_set_insert@@Base+0x138>
  418c58:	mov    r14,rdx
  418c5b:	cmp    rdx,0x1
  418c5f:	je     418d87 <ptr_set_insert@@Base+0x157>
  418c65:	test   r14,r14
  418c68:	je     418da6 <ptr_set_insert@@Base+0x176>
  418c6e:	mov    r12d,ecx
  418c71:	mov    r13,rsi
  418c74:	mov    r15,rdi
  418c77:	mov    rsi,QWORD PTR [rdi+0x10]
  418c7b:	mov    rbp,QWORD PTR [rdi+0x18]
  418c7f:	imul   rax,rbp,0xb3
  418c86:	shr    rax,0x8
  418c8a:	cmp    rsi,rax
  418c8d:	jb     418ca6 <ptr_set_insert@@Base+0x76>
  418c8f:	add    rsi,rsi
  418c92:	mov    rdi,r15
  418c95:	call   418b40 <ptr_set_resize@@Base+0x10>
  418c9a:	test   eax,eax
  418c9c:	jne    418dc5 <ptr_set_insert@@Base+0x195>
  418ca2:	mov    rbp,QWORD PTR [r15+0x18]
  418ca6:	mov    rbx,QWORD PTR [r15]
  418ca9:	dec    rbp
  418cac:	mov    QWORD PTR [rsp+0x8],r13
  418cb1:	lea    rdi,[rsp+0x8]
  418cb6:	lea    rcx,[rsp+0x10]
  418cbb:	mov    esi,0x8
  418cc0:	mov    edx,0x2f693b52
  418cc5:	call   42b7d0 <cmetrohash64_1@@Base>
  418cca:	mov    rdx,QWORD PTR [rsp+0x10]
  418ccf:	mov    eax,edx
  418cd1:	mov    ecx,ebp
  418cd3:	and    ecx,edx
  418cd5:	mov    edx,r12d
  418cd8:	or     edx,0x1
  418cdb:	cmp    edx,0x3
  418cde:	jne    418d09 <ptr_set_insert@@Base+0xd9>
  418ce0:	inc    QWORD PTR [r15+0x10]
  418ce4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418cee:	xchg   ax,ax
  418cf0:	inc    rax
  418cf3:	mov    rdx,QWORD PTR [rbx+rcx*8]
  418cf7:	or     rdx,0x2
  418cfb:	cmp    rdx,0x2
  418cff:	je     418d3f <ptr_set_insert@@Base+0x10f>
  418d01:	mov    rcx,rax
  418d04:	and    rcx,rbp
  418d07:	jmp    418cf0 <ptr_set_insert@@Base+0xc0>
  418d09:	inc    rax
  418d0c:	xor    edx,edx
  418d0e:	jmp    418d20 <ptr_set_insert@@Base+0xf0>
  418d10:	test   rdx,rdx
  418d13:	cmove  rdx,rsi
  418d17:	mov    rcx,rax
  418d1a:	and    rcx,rbp
  418d1d:	inc    rax
  418d20:	lea    rsi,[rbx+rcx*8]
  418d24:	mov    rcx,QWORD PTR [rbx+rcx*8]
  418d28:	cmp    rcx,0x2
  418d2c:	je     418d10 <ptr_set_insert@@Base+0xe0>
  418d2e:	test   rcx,rcx
  418d31:	je     418d45 <ptr_set_insert@@Base+0x115>
  418d33:	cmp    rcx,r13
  418d36:	jne    418d17 <ptr_set_insert@@Base+0xe7>
  418d38:	test   r12d,r12d
  418d3b:	jne    418d56 <ptr_set_insert@@Base+0x126>
  418d3d:	jmp    418d53 <ptr_set_insert@@Base+0x123>
  418d3f:	lea    rsi,[rbx+rcx*8]
  418d43:	jmp    418d50 <ptr_set_insert@@Base+0x120>
  418d45:	test   rdx,rdx
  418d48:	cmovne rsi,rdx
  418d4c:	inc    QWORD PTR [r15+0x10]
  418d50:	xor    r13d,r13d
  418d53:	mov    QWORD PTR [rsi],r14
  418d56:	mov    rax,r13
  418d59:	add    rsp,0x18
  418d5d:	pop    rbx
  418d5e:	pop    r12
  418d60:	pop    r13
  418d62:	pop    r14
  418d64:	pop    r15
  418d66:	pop    rbp
  418d67:	ret    
  418d68:	lea    rdi,[rip+0x2c904]        # 445673 <str_set_deleted@@Base+0xd3>
  418d6f:	lea    rsi,[rip+0x2c849]        # 4455bf <str_set_deleted@@Base+0x1f>
  418d76:	lea    rcx,[rip+0x2c8ac]        # 445629 <str_set_deleted@@Base+0x89>
  418d7d:	mov    edx,0x73
  418d82:	call   4060f0 <__assert_fail@plt>
  418d87:	lea    rdi,[rip+0x2c8fc]        # 44568a <str_set_deleted@@Base+0xea>
  418d8e:	lea    rsi,[rip+0x2c82a]        # 4455bf <str_set_deleted@@Base+0x1f>
  418d95:	lea    rcx,[rip+0x2c88d]        # 445629 <str_set_deleted@@Base+0x89>
  418d9c:	mov    edx,0x74
  418da1:	call   4060f0 <__assert_fail@plt>
  418da6:	lea    rdi,[rip+0x2c7fb]        # 4455a8 <str_set_deleted@@Base+0x8>
  418dad:	lea    rsi,[rip+0x2c80b]        # 4455bf <str_set_deleted@@Base+0x1f>
  418db4:	lea    rcx,[rip+0x2c86e]        # 445629 <str_set_deleted@@Base+0x89>
  418dbb:	mov    edx,0x72
  418dc0:	call   4060f0 <__assert_fail@plt>
  418dc5:	mov    rax,QWORD PTR [rip+0x3722c]        # 44fff8 <stderr@GLIBC_2.2.5>
  418dcc:	mov    rdi,QWORD PTR [rax]
  418dcf:	lea    rsi,[rip+0x2c8c9]        # 44569f <str_set_deleted@@Base+0xff>
  418dd6:	lea    rdx,[rip+0x2c8d9]        # 4456b6 <str_set_deleted@@Base+0x116>
  418ddd:	xor    eax,eax
  418ddf:	call   406170 <fprintf@plt>
  418de4:	mov    edi,0x1
  418de9:	call   406210 <exit@plt>
  418dee:	xchg   ax,ax

0000000000418df0 <ptr_set_insert_item@@Base>:
  418df0:	mov    ecx,edx
  418df2:	mov    rdx,rsi
  418df5:	jmp    418c40 <ptr_set_insert@@Base+0x10>
  418dfa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000418e00 <ptr_set_find@@Base>:
  418e00:	push   r15
  418e02:	push   r14
  418e04:	push   rbx
  418e05:	sub    rsp,0x10
  418e09:	mov    r15,QWORD PTR [rdi]
  418e0c:	test   r15,r15
  418e0f:	je     418e5f <ptr_set_find@@Base+0x5f>
  418e11:	mov    r14,rsi
  418e14:	mov    rbx,QWORD PTR [rdi+0x18]
  418e18:	dec    rbx
  418e1b:	mov    QWORD PTR [rsp],rsi
  418e1f:	mov    rdi,rsp
  418e22:	lea    rcx,[rsp+0x8]
  418e27:	mov    esi,0x8
  418e2c:	mov    edx,0x2f693b52
  418e31:	call   42b7d0 <cmetrohash64_1@@Base>
  418e36:	mov    eax,DWORD PTR [rsp+0x8]
  418e3a:	jmp    418e43 <ptr_set_find@@Base+0x43>
  418e3c:	nop    DWORD PTR [rax+0x0]
  418e40:	inc    rax
  418e43:	mov    rcx,rax
  418e46:	and    rcx,rbx
  418e49:	mov    rcx,QWORD PTR [r15+rcx*8]
  418e4d:	cmp    rcx,0x2
  418e51:	je     418e40 <ptr_set_find@@Base+0x40>
  418e53:	test   rcx,rcx
  418e56:	je     418e5f <ptr_set_find@@Base+0x5f>
  418e58:	cmp    rcx,r14
  418e5b:	jne    418e40 <ptr_set_find@@Base+0x40>
  418e5d:	jmp    418e62 <ptr_set_find@@Base+0x62>
  418e5f:	xor    r14d,r14d
  418e62:	mov    rax,r14
  418e65:	add    rsp,0x10
  418e69:	pop    rbx
  418e6a:	pop    r14
  418e6c:	pop    r15
  418e6e:	ret    
  418e6f:	nop

0000000000418e70 <ptr_set_find_item@@Base>:
  418e70:	push   r15
  418e72:	push   r14
  418e74:	push   rbx
  418e75:	sub    rsp,0x10
  418e79:	mov    r15,QWORD PTR [rdi]
  418e7c:	test   r15,r15
  418e7f:	je     418ecf <ptr_set_find_item@@Base+0x5f>
  418e81:	mov    r14,rsi
  418e84:	mov    rbx,QWORD PTR [rdi+0x18]
  418e88:	dec    rbx
  418e8b:	mov    QWORD PTR [rsp],rsi
  418e8f:	mov    rdi,rsp
  418e92:	lea    rcx,[rsp+0x8]
  418e97:	mov    esi,0x8
  418e9c:	mov    edx,0x2f693b52
  418ea1:	call   42b7d0 <cmetrohash64_1@@Base>
  418ea6:	mov    eax,DWORD PTR [rsp+0x8]
  418eaa:	jmp    418eb3 <ptr_set_find_item@@Base+0x43>
  418eac:	nop    DWORD PTR [rax+0x0]
  418eb0:	inc    rax
  418eb3:	mov    rcx,rax
  418eb6:	and    rcx,rbx
  418eb9:	mov    rcx,QWORD PTR [r15+rcx*8]
  418ebd:	cmp    rcx,0x2
  418ec1:	je     418eb0 <ptr_set_find_item@@Base+0x40>
  418ec3:	test   rcx,rcx
  418ec6:	je     418ecf <ptr_set_find_item@@Base+0x5f>
  418ec8:	cmp    rcx,r14
  418ecb:	jne    418eb0 <ptr_set_find_item@@Base+0x40>
  418ecd:	jmp    418ed2 <ptr_set_find_item@@Base+0x62>
  418ecf:	xor    r14d,r14d
  418ed2:	mov    rax,r14
  418ed5:	add    rsp,0x10
  418ed9:	pop    rbx
  418eda:	pop    r14
  418edc:	pop    r15
  418ede:	ret    
  418edf:	nop

0000000000418ee0 <ptr_set_remove@@Base>:
  418ee0:	push   r15
  418ee2:	push   r14
  418ee4:	push   r12
  418ee6:	push   rbx
  418ee7:	sub    rsp,0x18
  418eeb:	mov    r12,QWORD PTR [rdi]
  418eee:	test   r12,r12
  418ef1:	je     418f5b <ptr_set_remove@@Base+0x7b>
  418ef3:	mov    r15,rsi
  418ef6:	mov    r14,rdi
  418ef9:	mov    rbx,QWORD PTR [rdi+0x18]
  418efd:	dec    rbx
  418f00:	mov    QWORD PTR [rsp+0x8],rsi
  418f05:	lea    rdi,[rsp+0x8]
  418f0a:	lea    rcx,[rsp+0x10]
  418f0f:	mov    esi,0x8
  418f14:	mov    edx,0x2f693b52
  418f19:	call   42b7d0 <cmetrohash64_1@@Base>
  418f1e:	mov    eax,DWORD PTR [rsp+0x10]
  418f22:	jmp    418f33 <ptr_set_remove@@Base+0x53>
  418f24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418f2e:	xchg   ax,ax
  418f30:	inc    rax
  418f33:	mov    rcx,rax
  418f36:	and    rcx,rbx
  418f39:	mov    rdx,QWORD PTR [r12+rcx*8]
  418f3d:	cmp    rdx,0x2
  418f41:	je     418f30 <ptr_set_remove@@Base+0x50>
  418f43:	test   rdx,rdx
  418f46:	je     418f5b <ptr_set_remove@@Base+0x7b>
  418f48:	cmp    rdx,r15
  418f4b:	jne    418f30 <ptr_set_remove@@Base+0x50>
  418f4d:	mov    QWORD PTR [r12+rcx*8],0x2
  418f55:	dec    QWORD PTR [r14+0x10]
  418f59:	jmp    418f5e <ptr_set_remove@@Base+0x7e>
  418f5b:	xor    r15d,r15d
  418f5e:	mov    rax,r15
  418f61:	add    rsp,0x18
  418f65:	pop    rbx
  418f66:	pop    r12
  418f68:	pop    r14
  418f6a:	pop    r15
  418f6c:	ret    
  418f6d:	nop    DWORD PTR [rax]

0000000000418f70 <ptr_set_remove_item@@Base>:
  418f70:	push   r15
  418f72:	push   r14
  418f74:	push   r12
  418f76:	push   rbx
  418f77:	sub    rsp,0x18
  418f7b:	mov    r12,QWORD PTR [rdi]
  418f7e:	test   r12,r12
  418f81:	je     418feb <ptr_set_remove_item@@Base+0x7b>
  418f83:	mov    r15,rsi
  418f86:	mov    r14,rdi
  418f89:	mov    rbx,QWORD PTR [rdi+0x18]
  418f8d:	dec    rbx
  418f90:	mov    QWORD PTR [rsp+0x8],rsi
  418f95:	lea    rdi,[rsp+0x8]
  418f9a:	lea    rcx,[rsp+0x10]
  418f9f:	mov    esi,0x8
  418fa4:	mov    edx,0x2f693b52
  418fa9:	call   42b7d0 <cmetrohash64_1@@Base>
  418fae:	mov    eax,DWORD PTR [rsp+0x10]
  418fb2:	jmp    418fc3 <ptr_set_remove_item@@Base+0x53>
  418fb4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  418fbe:	xchg   ax,ax
  418fc0:	inc    rax
  418fc3:	mov    rcx,rax
  418fc6:	and    rcx,rbx
  418fc9:	mov    rdx,QWORD PTR [r12+rcx*8]
  418fcd:	cmp    rdx,0x2
  418fd1:	je     418fc0 <ptr_set_remove_item@@Base+0x50>
  418fd3:	test   rdx,rdx
  418fd6:	je     418feb <ptr_set_remove_item@@Base+0x7b>
  418fd8:	cmp    rdx,r15
  418fdb:	jne    418fc0 <ptr_set_remove_item@@Base+0x50>
  418fdd:	mov    QWORD PTR [r12+rcx*8],0x2
  418fe5:	dec    QWORD PTR [r14+0x10]
  418fe9:	jmp    418fee <ptr_set_remove_item@@Base+0x7e>
  418feb:	xor    r15d,r15d
  418fee:	mov    rax,r15
  418ff1:	add    rsp,0x18
  418ff5:	pop    rbx
  418ff6:	pop    r12
  418ff8:	pop    r14
  418ffa:	pop    r15
  418ffc:	ret    
  418ffd:	nop    DWORD PTR [rax]

0000000000419000 <ptr_set_visit@@Base>:
  419000:	push   r15
  419002:	push   r14
  419004:	push   r13
  419006:	push   r12
  419008:	push   rbx
  419009:	mov    rax,QWORD PTR [rdi+0x18]
  41900d:	test   rax,rax
  419010:	je     419057 <ptr_set_visit@@Base+0x57>
  419012:	mov    r14,rdx
  419015:	mov    r15,rsi
  419018:	mov    r12,rdi
  41901b:	mov    r13,QWORD PTR [rdi]
  41901e:	xor    ebx,ebx
  419020:	jmp    419038 <ptr_set_visit@@Base+0x38>
  419022:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41902c:	nop    DWORD PTR [rax+0x0]
  419030:	inc    rbx
  419033:	cmp    rbx,rax
  419036:	jae    419057 <ptr_set_visit@@Base+0x57>
  419038:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  41903d:	mov    rcx,rsi
  419040:	or     rcx,0x2
  419044:	cmp    rcx,0x2
  419048:	je     419030 <ptr_set_visit@@Base+0x30>
  41904a:	mov    rdi,r14
  41904d:	call   r15
  419050:	mov    rax,QWORD PTR [r12+0x18]
  419055:	jmp    419030 <ptr_set_visit@@Base+0x30>
  419057:	pop    rbx
  419058:	pop    r12
  41905a:	pop    r13
  41905c:	pop    r14
  41905e:	pop    r15
  419060:	ret    
  419061:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41906b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419070 <fb_symbol_table_clear@@Base>:
  419070:	push   rbx
  419071:	mov    rbx,rdi
  419074:	mov    rdi,QWORD PTR [rdi]
  419077:	test   rdi,rdi
  41907a:	je     419081 <fb_symbol_table_clear@@Base+0x11>
  41907c:	call   406040 <free@plt>
  419081:	vxorps xmm0,xmm0,xmm0
  419085:	vmovups YMMWORD PTR [rbx],ymm0
  419089:	pop    rbx
  41908a:	vzeroupper 
  41908d:	ret    
  41908e:	xchg   ax,ax

0000000000419090 <fb_symbol_table_destroy@@Base>:
  419090:	push   r15
  419092:	push   r14
  419094:	push   r13
  419096:	push   r12
  419098:	push   rbx
  419099:	mov    r12,rdi
  41909c:	test   rsi,rsi
  41909f:	je     4190e7 <fb_symbol_table_destroy@@Base+0x57>
  4190a1:	mov    rax,QWORD PTR [r12+0x18]
  4190a6:	test   rax,rax
  4190a9:	je     4190e7 <fb_symbol_table_destroy@@Base+0x57>
  4190ab:	mov    r14,rdx
  4190ae:	mov    r15,rsi
  4190b1:	mov    r13,QWORD PTR [r12]
  4190b5:	xor    ebx,ebx
  4190b7:	jmp    4190c8 <fb_symbol_table_destroy@@Base+0x38>
  4190b9:	nop    DWORD PTR [rax+0x0]
  4190c0:	inc    rbx
  4190c3:	cmp    rbx,rax
  4190c6:	jae    4190e7 <fb_symbol_table_destroy@@Base+0x57>
  4190c8:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  4190cd:	mov    rcx,rsi
  4190d0:	or     rcx,0x2
  4190d4:	cmp    rcx,0x2
  4190d8:	je     4190c0 <fb_symbol_table_destroy@@Base+0x30>
  4190da:	mov    rdi,r14
  4190dd:	call   r15
  4190e0:	mov    rax,QWORD PTR [r12+0x18]
  4190e5:	jmp    4190c0 <fb_symbol_table_destroy@@Base+0x30>
  4190e7:	mov    rdi,QWORD PTR [r12]
  4190eb:	test   rdi,rdi
  4190ee:	je     4190f5 <fb_symbol_table_destroy@@Base+0x65>
  4190f0:	call   406040 <free@plt>
  4190f5:	vxorps xmm0,xmm0,xmm0
  4190f9:	vmovups YMMWORD PTR [r12],ymm0
  4190ff:	pop    rbx
  419100:	pop    r12
  419102:	pop    r13
  419104:	pop    r14
  419106:	pop    r15
  419108:	vzeroupper 
  41910b:	ret    
  41910c:	nop    DWORD PTR [rax+0x0]

0000000000419110 <fb_symbol_table_init@@Base>:
  419110:	push   r14
  419112:	push   rbx
  419113:	push   rax
  419114:	mov    r14,rdi
  419117:	mov    eax,0x4
  41911c:	nop    DWORD PTR [rax+0x0]
  419120:	mov    rbx,rax
  419123:	imul   rcx,rax,0xb3
  41912a:	shr    rcx,0x8
  41912e:	add    rax,rax
  419131:	cmp    rcx,rsi
  419134:	jb     419120 <fb_symbol_table_init@@Base+0x10>
  419136:	mov    esi,0x8
  41913b:	mov    rdi,rbx
  41913e:	call   406140 <calloc@plt>
  419143:	mov    QWORD PTR [r14],rax
  419146:	test   rax,rax
  419149:	je     41915d <fb_symbol_table_init@@Base+0x4d>
  41914b:	vxorps xmm0,xmm0,xmm0
  41914f:	vmovups XMMWORD PTR [r14+0x8],xmm0
  419155:	mov    QWORD PTR [r14+0x18],rbx
  419159:	xor    eax,eax
  41915b:	jmp    419162 <fb_symbol_table_init@@Base+0x52>
  41915d:	mov    eax,0xffffffff
  419162:	add    rsp,0x8
  419166:	pop    rbx
  419167:	pop    r14
  419169:	ret    
  41916a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000419170 <fb_symbol_table_resize@@Base>:
  419170:	jmp    419180 <fb_symbol_table_resize@@Base+0x10>
  419172:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41917c:	nop    DWORD PTR [rax+0x0]
  419180:	push   r15
  419182:	push   r14
  419184:	push   r12
  419186:	push   rbx
  419187:	sub    rsp,0x28
  41918b:	mov    r14,rdi
  41918e:	mov    r12,QWORD PTR [rdi]
  419191:	mov    rax,QWORD PTR [rdi+0x10]
  419195:	cmp    rax,rsi
  419198:	cmova  rsi,rax
  41919c:	mov    eax,0x4
  4191a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4191ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4191b0:	mov    rbx,rax
  4191b3:	imul   rcx,rax,0xb3
  4191ba:	shr    rcx,0x8
  4191be:	add    rax,rax
  4191c1:	cmp    rcx,rsi
  4191c4:	jb     4191b0 <fb_symbol_table_resize@@Base+0x40>
  4191c6:	mov    esi,0x8
  4191cb:	mov    rdi,rbx
  4191ce:	call   406140 <calloc@plt>
  4191d3:	mov    QWORD PTR [rsp+0x8],rax
  4191d8:	test   rax,rax
  4191db:	je     419238 <fb_symbol_table_resize@@Base+0xc8>
  4191dd:	vxorps xmm0,xmm0,xmm0
  4191e1:	vmovups XMMWORD PTR [rsp+0x10],xmm0
  4191e7:	mov    QWORD PTR [rsp+0x20],rbx
  4191ec:	mov    rax,QWORD PTR [r14+0x18]
  4191f0:	test   rax,rax
  4191f3:	je     419242 <fb_symbol_table_resize@@Base+0xd2>
  4191f5:	xor    ebx,ebx
  4191f7:	lea    r15,[rsp+0x8]
  4191fc:	jmp    419208 <fb_symbol_table_resize@@Base+0x98>
  4191fe:	xchg   ax,ax
  419200:	inc    rbx
  419203:	cmp    rbx,rax
  419206:	jae    41923f <fb_symbol_table_resize@@Base+0xcf>
  419208:	mov    rcx,QWORD PTR [r12+rbx*8]
  41920c:	mov    rdx,rcx
  41920f:	or     rdx,0x2
  419213:	cmp    rdx,0x2
  419217:	je     419200 <fb_symbol_table_resize@@Base+0x90>
  419219:	mov    rax,QWORD PTR [rcx+0x8]
  41921d:	mov    rsi,QWORD PTR [rax]
  419220:	mov    rdx,QWORD PTR [rax+0x8]
  419224:	mov    rdi,r15
  419227:	mov    r8d,0x3
  41922d:	call   419280 <fb_symbol_table_insert@@Base+0x10>
  419232:	mov    rax,QWORD PTR [r14+0x18]
  419236:	jmp    419200 <fb_symbol_table_resize@@Base+0x90>
  419238:	mov    eax,0xffffffff
  41923d:	jmp    41925c <fb_symbol_table_resize@@Base+0xec>
  41923f:	mov    r12,QWORD PTR [r14]
  419242:	test   r12,r12
  419245:	je     41924f <fb_symbol_table_resize@@Base+0xdf>
  419247:	mov    rdi,r12
  41924a:	call   406040 <free@plt>
  41924f:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  419255:	vmovups YMMWORD PTR [r14],ymm0
  41925a:	xor    eax,eax
  41925c:	add    rsp,0x28
  419260:	pop    rbx
  419261:	pop    r12
  419263:	pop    r14
  419265:	pop    r15
  419267:	vzeroupper 
  41926a:	ret    
  41926b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419270 <fb_symbol_table_insert@@Base>:
  419270:	jmp    419280 <fb_symbol_table_insert@@Base+0x10>
  419272:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41927c:	nop    DWORD PTR [rax+0x0]
  419280:	push   rbp
  419281:	push   r15
  419283:	push   r14
  419285:	push   r13
  419287:	push   r12
  419289:	push   rbx
  41928a:	sub    rsp,0x38
  41928e:	mov    QWORD PTR [rsp+0x20],rsi
  419293:	cmp    rcx,0x2
  419297:	je     4193fb <fb_symbol_table_insert@@Base+0x18b>
  41929d:	mov    r13,rcx
  4192a0:	cmp    rcx,0x1
  4192a4:	je     41941a <fb_symbol_table_insert@@Base+0x1aa>
  4192aa:	test   r13,r13
  4192ad:	je     419439 <fb_symbol_table_insert@@Base+0x1c9>
  4192b3:	mov    ebp,r8d
  4192b6:	mov    rbx,rdi
  4192b9:	mov    rsi,QWORD PTR [rdi+0x10]
  4192bd:	mov    r15,QWORD PTR [rdi+0x18]
  4192c1:	imul   rax,r15,0xb3
  4192c8:	shr    rax,0x8
  4192cc:	cmp    rsi,rax
  4192cf:	mov    QWORD PTR [rsp+0x8],rdx
  4192d4:	jb     4192f2 <fb_symbol_table_insert@@Base+0x82>
  4192d6:	add    rsi,rsi
  4192d9:	mov    rdi,rbx
  4192dc:	call   419180 <fb_symbol_table_resize@@Base+0x10>
  4192e1:	test   eax,eax
  4192e3:	jne    419458 <fb_symbol_table_insert@@Base+0x1e8>
  4192e9:	mov    r15,QWORD PTR [rbx+0x18]
  4192ed:	mov    rdx,QWORD PTR [rsp+0x8]
  4192f2:	mov    r14,QWORD PTR [rbx]
  4192f5:	dec    r15
  4192f8:	lea    rcx,[rsp+0x30]
  4192fd:	mov    rdi,QWORD PTR [rsp+0x20]
  419302:	mov    rsi,rdx
  419305:	mov    edx,0x2f693b52
  41930a:	call   42b7d0 <cmetrohash64_1@@Base>
  41930f:	mov    rcx,QWORD PTR [rsp+0x30]
  419314:	mov    r12d,ecx
  419317:	mov    eax,r15d
  41931a:	and    eax,ecx
  41931c:	mov    ecx,ebp
  41931e:	or     ecx,0x1
  419321:	cmp    ecx,0x3
  419324:	jne    41934d <fb_symbol_table_insert@@Base+0xdd>
  419326:	inc    QWORD PTR [rbx+0x10]
  41932a:	nop    WORD PTR [rax+rax*1+0x0]
  419330:	inc    r12
  419333:	mov    rcx,QWORD PTR [r14+rax*8]
  419337:	or     rcx,0x2
  41933b:	cmp    rcx,0x2
  41933f:	je     4193c6 <fb_symbol_table_insert@@Base+0x156>
  419345:	mov    rax,r12
  419348:	and    rax,r15
  41934b:	jmp    419330 <fb_symbol_table_insert@@Base+0xc0>
  41934d:	mov    DWORD PTR [rsp+0x14],ebp
  419351:	mov    QWORD PTR [rsp+0x28],rbx
  419356:	mov    QWORD PTR [rsp+0x18],r13
  41935b:	inc    r12
  41935e:	xor    r13d,r13d
  419361:	mov    rcx,QWORD PTR [rsp+0x8]
  419366:	jmp    419380 <fb_symbol_table_insert@@Base+0x110>
  419368:	nop    DWORD PTR [rax+rax*1+0x0]
  419370:	test   r13,r13
  419373:	cmove  r13,rbp
  419377:	mov    rax,r12
  41937a:	and    rax,r15
  41937d:	inc    r12
  419380:	lea    rbp,[r14+rax*8]
  419384:	mov    rbx,QWORD PTR [r14+rax*8]
  419388:	cmp    rbx,0x2
  41938c:	je     419370 <fb_symbol_table_insert@@Base+0x100>
  41938e:	test   rbx,rbx
  419391:	je     4193ce <fb_symbol_table_insert@@Base+0x15e>
  419393:	mov    rax,QWORD PTR [rbx+0x8]
  419397:	cmp    QWORD PTR [rax+0x8],rcx
  41939b:	jne    419377 <fb_symbol_table_insert@@Base+0x107>
  41939d:	mov    rsi,QWORD PTR [rax]
  4193a0:	mov    rdi,QWORD PTR [rsp+0x20]
  4193a5:	mov    rdx,QWORD PTR [rsp+0x8]
  4193aa:	call   4061b0 <bcmp@plt>
  4193af:	mov    rcx,QWORD PTR [rsp+0x8]
  4193b4:	test   eax,eax
  4193b6:	jne    419377 <fb_symbol_table_insert@@Base+0x107>
  4193b8:	cmp    DWORD PTR [rsp+0x14],0x0
  4193bd:	mov    r13,QWORD PTR [rsp+0x18]
  4193c2:	jne    4193e9 <fb_symbol_table_insert@@Base+0x179>
  4193c4:	jmp    4193e5 <fb_symbol_table_insert@@Base+0x175>
  4193c6:	lea    rbp,[r14+rax*8]
  4193ca:	xor    ebx,ebx
  4193cc:	jmp    4193e5 <fb_symbol_table_insert@@Base+0x175>
  4193ce:	test   r13,r13
  4193d1:	cmovne rbp,r13
  4193d5:	mov    rax,QWORD PTR [rsp+0x28]
  4193da:	inc    QWORD PTR [rax+0x10]
  4193de:	xor    ebx,ebx
  4193e0:	mov    r13,QWORD PTR [rsp+0x18]
  4193e5:	mov    QWORD PTR [rbp+0x0],r13
  4193e9:	mov    rax,rbx
  4193ec:	add    rsp,0x38
  4193f0:	pop    rbx
  4193f1:	pop    r12
  4193f3:	pop    r13
  4193f5:	pop    r14
  4193f7:	pop    r15
  4193f9:	pop    rbp
  4193fa:	ret    
  4193fb:	lea    rdi,[rip+0x2c271]        # 445673 <str_set_deleted@@Base+0xd3>
  419402:	lea    rsi,[rip+0x2c1b6]        # 4455bf <str_set_deleted@@Base+0x1f>
  419409:	lea    rcx,[rip+0x2c219]        # 445629 <str_set_deleted@@Base+0x89>
  419410:	mov    edx,0x73
  419415:	call   4060f0 <__assert_fail@plt>
  41941a:	lea    rdi,[rip+0x2c269]        # 44568a <str_set_deleted@@Base+0xea>
  419421:	lea    rsi,[rip+0x2c197]        # 4455bf <str_set_deleted@@Base+0x1f>
  419428:	lea    rcx,[rip+0x2c1fa]        # 445629 <str_set_deleted@@Base+0x89>
  41942f:	mov    edx,0x74
  419434:	call   4060f0 <__assert_fail@plt>
  419439:	lea    rdi,[rip+0x2c168]        # 4455a8 <str_set_deleted@@Base+0x8>
  419440:	lea    rsi,[rip+0x2c178]        # 4455bf <str_set_deleted@@Base+0x1f>
  419447:	lea    rcx,[rip+0x2c1db]        # 445629 <str_set_deleted@@Base+0x89>
  41944e:	mov    edx,0x72
  419453:	call   4060f0 <__assert_fail@plt>
  419458:	mov    rax,QWORD PTR [rip+0x36b99]        # 44fff8 <stderr@GLIBC_2.2.5>
  41945f:	mov    rdi,QWORD PTR [rax]
  419462:	lea    rsi,[rip+0x2c236]        # 44569f <str_set_deleted@@Base+0xff>
  419469:	lea    rdx,[rip+0x2c246]        # 4456b6 <str_set_deleted@@Base+0x116>
  419470:	xor    eax,eax
  419472:	call   406170 <fprintf@plt>
  419477:	mov    edi,0x1
  41947c:	call   406210 <exit@plt>
  419481:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41948b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000419490 <fb_symbol_table_insert_item@@Base>:
  419490:	mov    r8d,edx
  419493:	mov    rcx,rsi
  419496:	mov    rax,QWORD PTR [rsi+0x8]
  41949a:	mov    rsi,QWORD PTR [rax]
  41949d:	mov    rdx,QWORD PTR [rax+0x8]
  4194a1:	jmp    419280 <fb_symbol_table_insert@@Base+0x10>
  4194a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004194b0 <fb_symbol_table_find@@Base>:
  4194b0:	push   rbp
  4194b1:	push   r15
  4194b3:	push   r14
  4194b5:	push   r13
  4194b7:	push   r12
  4194b9:	push   rbx
  4194ba:	push   rax
  4194bb:	mov    r12,QWORD PTR [rdi]
  4194be:	test   r12,r12
  4194c1:	je     419526 <fb_symbol_table_find@@Base+0x76>
  4194c3:	mov    r15,rdx
  4194c6:	mov    r14,rsi
  4194c9:	mov    r13,QWORD PTR [rdi+0x18]
  4194cd:	dec    r13
  4194d0:	mov    rcx,rsp
  4194d3:	mov    rdi,rsi
  4194d6:	mov    rsi,rdx
  4194d9:	mov    edx,0x2f693b52
  4194de:	call   42b7d0 <cmetrohash64_1@@Base>
  4194e3:	mov    ebp,DWORD PTR [rsp]
  4194e6:	jmp    4194f3 <fb_symbol_table_find@@Base+0x43>
  4194e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4194f0:	inc    rbp
  4194f3:	mov    rax,rbp
  4194f6:	and    rax,r13
  4194f9:	mov    rbx,QWORD PTR [r12+rax*8]
  4194fd:	cmp    rbx,0x2
  419501:	je     4194f0 <fb_symbol_table_find@@Base+0x40>
  419503:	test   rbx,rbx
  419506:	je     419526 <fb_symbol_table_find@@Base+0x76>
  419508:	mov    rax,QWORD PTR [rbx+0x8]
  41950c:	cmp    QWORD PTR [rax+0x8],r15
  419510:	jne    4194f0 <fb_symbol_table_find@@Base+0x40>
  419512:	mov    rsi,QWORD PTR [rax]
  419515:	mov    rdi,r14
  419518:	mov    rdx,r15
  41951b:	call   4061b0 <bcmp@plt>
  419520:	test   eax,eax
  419522:	jne    4194f0 <fb_symbol_table_find@@Base+0x40>
  419524:	jmp    419528 <fb_symbol_table_find@@Base+0x78>
  419526:	xor    ebx,ebx
  419528:	mov    rax,rbx
  41952b:	add    rsp,0x8
  41952f:	pop    rbx
  419530:	pop    r12
  419532:	pop    r13
  419534:	pop    r14
  419536:	pop    r15
  419538:	pop    rbp
  419539:	ret    
  41953a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000419540 <fb_symbol_table_find_item@@Base>:
  419540:	push   rbp
  419541:	push   r15
  419543:	push   r14
  419545:	push   r13
  419547:	push   r12
  419549:	push   rbx
  41954a:	push   rax
  41954b:	mov    r12,QWORD PTR [rdi]
  41954e:	test   r12,r12
  419551:	je     4195b6 <fb_symbol_table_find_item@@Base+0x76>
  419553:	mov    rax,QWORD PTR [rsi+0x8]
  419557:	mov    r14,QWORD PTR [rax]
  41955a:	mov    r15,QWORD PTR [rax+0x8]
  41955e:	mov    r13,QWORD PTR [rdi+0x18]
  419562:	dec    r13
  419565:	mov    rcx,rsp
  419568:	mov    rdi,r14
  41956b:	mov    rsi,r15
  41956e:	mov    edx,0x2f693b52
  419573:	call   42b7d0 <cmetrohash64_1@@Base>
  419578:	mov    ebp,DWORD PTR [rsp]
  41957b:	jmp    419583 <fb_symbol_table_find_item@@Base+0x43>
  41957d:	nop    DWORD PTR [rax]
  419580:	inc    rbp
  419583:	mov    rax,rbp
  419586:	and    rax,r13
  419589:	mov    rbx,QWORD PTR [r12+rax*8]
  41958d:	cmp    rbx,0x2
  419591:	je     419580 <fb_symbol_table_find_item@@Base+0x40>
  419593:	test   rbx,rbx
  419596:	je     4195b6 <fb_symbol_table_find_item@@Base+0x76>
  419598:	mov    rax,QWORD PTR [rbx+0x8]
  41959c:	cmp    QWORD PTR [rax+0x8],r15
  4195a0:	jne    419580 <fb_symbol_table_find_item@@Base+0x40>
  4195a2:	mov    rsi,QWORD PTR [rax]
  4195a5:	mov    rdi,r14
  4195a8:	mov    rdx,r15
  4195ab:	call   4061b0 <bcmp@plt>
  4195b0:	test   eax,eax
  4195b2:	jne    419580 <fb_symbol_table_find_item@@Base+0x40>
  4195b4:	jmp    4195b8 <fb_symbol_table_find_item@@Base+0x78>
  4195b6:	xor    ebx,ebx
  4195b8:	mov    rax,rbx
  4195bb:	add    rsp,0x8
  4195bf:	pop    rbx
  4195c0:	pop    r12
  4195c2:	pop    r13
  4195c4:	pop    r14
  4195c6:	pop    r15
  4195c8:	pop    rbp
  4195c9:	ret    
  4195ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000004195d0 <fb_symbol_table_remove@@Base>:
  4195d0:	push   rbp
  4195d1:	push   r15
  4195d3:	push   r14
  4195d5:	push   r13
  4195d7:	push   r12
  4195d9:	push   rbx
  4195da:	sub    rsp,0x18
  4195de:	mov    r13,QWORD PTR [rdi]
  4195e1:	test   r13,r13
  4195e4:	je     41966a <fb_symbol_table_remove@@Base+0x9a>
  4195ea:	mov    r12,rdx
  4195ed:	mov    QWORD PTR [rsp],rdi
  4195f1:	mov    rbp,QWORD PTR [rdi+0x18]
  4195f5:	dec    rbp
  4195f8:	lea    rcx,[rsp+0x10]
  4195fd:	mov    QWORD PTR [rsp+0x8],rsi
  419602:	mov    rdi,rsi
  419605:	mov    rsi,rdx
  419608:	mov    edx,0x2f693b52
  41960d:	call   42b7d0 <cmetrohash64_1@@Base>
  419612:	mov    r15d,DWORD PTR [rsp+0x10]
  419617:	jmp    419623 <fb_symbol_table_remove@@Base+0x53>
  419619:	nop    DWORD PTR [rax+0x0]
  419620:	inc    r15
  419623:	mov    r14,r15
  419626:	and    r14,rbp
  419629:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  41962e:	cmp    rbx,0x2
  419632:	je     419620 <fb_symbol_table_remove@@Base+0x50>
  419634:	test   rbx,rbx
  419637:	je     41966a <fb_symbol_table_remove@@Base+0x9a>
  419639:	mov    rax,QWORD PTR [rbx+0x8]
  41963d:	cmp    QWORD PTR [rax+0x8],r12
  419641:	jne    419620 <fb_symbol_table_remove@@Base+0x50>
  419643:	mov    rsi,QWORD PTR [rax]
  419646:	mov    rdi,QWORD PTR [rsp+0x8]
  41964b:	mov    rdx,r12
  41964e:	call   4061b0 <bcmp@plt>
  419653:	test   eax,eax
  419655:	jne    419620 <fb_symbol_table_remove@@Base+0x50>
  419657:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  419660:	mov    rax,QWORD PTR [rsp]
  419664:	dec    QWORD PTR [rax+0x10]
  419668:	jmp    41966c <fb_symbol_table_remove@@Base+0x9c>
  41966a:	xor    ebx,ebx
  41966c:	mov    rax,rbx
  41966f:	add    rsp,0x18
  419673:	pop    rbx
  419674:	pop    r12
  419676:	pop    r13
  419678:	pop    r14
  41967a:	pop    r15
  41967c:	pop    rbp
  41967d:	ret    
  41967e:	xchg   ax,ax

0000000000419680 <fb_symbol_table_remove_item@@Base>:
  419680:	push   rbp
  419681:	push   r15
  419683:	push   r14
  419685:	push   r13
  419687:	push   r12
  419689:	push   rbx
  41968a:	sub    rsp,0x18
  41968e:	mov    r13,QWORD PTR [rdi]
  419691:	test   r13,r13
  419694:	je     41972a <fb_symbol_table_remove_item@@Base+0xaa>
  41969a:	mov    rax,QWORD PTR [rsi+0x8]
  41969e:	mov    rdx,QWORD PTR [rax]
  4196a1:	mov    r12,QWORD PTR [rax+0x8]
  4196a5:	mov    QWORD PTR [rsp],rdi
  4196a9:	mov    rbp,QWORD PTR [rdi+0x18]
  4196ad:	dec    rbp
  4196b0:	lea    rcx,[rsp+0x10]
  4196b5:	mov    QWORD PTR [rsp+0x8],rdx
  4196ba:	mov    rdi,rdx
  4196bd:	mov    rsi,r12
  4196c0:	mov    edx,0x2f693b52
  4196c5:	call   42b7d0 <cmetrohash64_1@@Base>
  4196ca:	mov    r15d,DWORD PTR [rsp+0x10]
  4196cf:	jmp    4196e3 <fb_symbol_table_remove_item@@Base+0x63>
  4196d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4196db:	nop    DWORD PTR [rax+rax*1+0x0]
  4196e0:	inc    r15
  4196e3:	mov    r14,r15
  4196e6:	and    r14,rbp
  4196e9:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  4196ee:	cmp    rbx,0x2
  4196f2:	je     4196e0 <fb_symbol_table_remove_item@@Base+0x60>
  4196f4:	test   rbx,rbx
  4196f7:	je     41972a <fb_symbol_table_remove_item@@Base+0xaa>
  4196f9:	mov    rax,QWORD PTR [rbx+0x8]
  4196fd:	cmp    QWORD PTR [rax+0x8],r12
  419701:	jne    4196e0 <fb_symbol_table_remove_item@@Base+0x60>
  419703:	mov    rsi,QWORD PTR [rax]
  419706:	mov    rdi,QWORD PTR [rsp+0x8]
  41970b:	mov    rdx,r12
  41970e:	call   4061b0 <bcmp@plt>
  419713:	test   eax,eax
  419715:	jne    4196e0 <fb_symbol_table_remove_item@@Base+0x60>
  419717:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  419720:	mov    rax,QWORD PTR [rsp]
  419724:	dec    QWORD PTR [rax+0x10]
  419728:	jmp    41972c <fb_symbol_table_remove_item@@Base+0xac>
  41972a:	xor    ebx,ebx
  41972c:	mov    rax,rbx
  41972f:	add    rsp,0x18
  419733:	pop    rbx
  419734:	pop    r12
  419736:	pop    r13
  419738:	pop    r14
  41973a:	pop    r15
  41973c:	pop    rbp
  41973d:	ret    
  41973e:	xchg   ax,ax

0000000000419740 <fb_symbol_table_visit@@Base>:
  419740:	push   r15
  419742:	push   r14
  419744:	push   r13
  419746:	push   r12
  419748:	push   rbx
  419749:	mov    rax,QWORD PTR [rdi+0x18]
  41974d:	test   rax,rax
  419750:	je     419797 <fb_symbol_table_visit@@Base+0x57>
  419752:	mov    r14,rdx
  419755:	mov    r15,rsi
  419758:	mov    r12,rdi
  41975b:	mov    r13,QWORD PTR [rdi]
  41975e:	xor    ebx,ebx
  419760:	jmp    419778 <fb_symbol_table_visit@@Base+0x38>
  419762:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41976c:	nop    DWORD PTR [rax+0x0]
  419770:	inc    rbx
  419773:	cmp    rbx,rax
  419776:	jae    419797 <fb_symbol_table_visit@@Base+0x57>
  419778:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  41977d:	mov    rcx,rsi
  419780:	or     rcx,0x2
  419784:	cmp    rcx,0x2
  419788:	je     419770 <fb_symbol_table_visit@@Base+0x30>
  41978a:	mov    rdi,r14
  41978d:	call   r15
  419790:	mov    rax,QWORD PTR [r12+0x18]
  419795:	jmp    419770 <fb_symbol_table_visit@@Base+0x30>
  419797:	pop    rbx
  419798:	pop    r12
  41979a:	pop    r13
  41979c:	pop    r14
  41979e:	pop    r15
  4197a0:	ret    
  4197a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4197ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004197b0 <fb_scope_table_clear@@Base>:
  4197b0:	push   rbx
  4197b1:	mov    rbx,rdi
  4197b4:	mov    rdi,QWORD PTR [rdi]
  4197b7:	test   rdi,rdi
  4197ba:	je     4197c1 <fb_scope_table_clear@@Base+0x11>
  4197bc:	call   406040 <free@plt>
  4197c1:	vxorps xmm0,xmm0,xmm0
  4197c5:	vmovups YMMWORD PTR [rbx],ymm0
  4197c9:	pop    rbx
  4197ca:	vzeroupper 
  4197cd:	ret    
  4197ce:	xchg   ax,ax

00000000004197d0 <fb_scope_table_destroy@@Base>:
  4197d0:	push   r15
  4197d2:	push   r14
  4197d4:	push   r13
  4197d6:	push   r12
  4197d8:	push   rbx
  4197d9:	mov    r12,rdi
  4197dc:	test   rsi,rsi
  4197df:	je     419827 <fb_scope_table_destroy@@Base+0x57>
  4197e1:	mov    rax,QWORD PTR [r12+0x18]
  4197e6:	test   rax,rax
  4197e9:	je     419827 <fb_scope_table_destroy@@Base+0x57>
  4197eb:	mov    r14,rdx
  4197ee:	mov    r15,rsi
  4197f1:	mov    r13,QWORD PTR [r12]
  4197f5:	xor    ebx,ebx
  4197f7:	jmp    419808 <fb_scope_table_destroy@@Base+0x38>
  4197f9:	nop    DWORD PTR [rax+0x0]
  419800:	inc    rbx
  419803:	cmp    rbx,rax
  419806:	jae    419827 <fb_scope_table_destroy@@Base+0x57>
  419808:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  41980d:	mov    rcx,rsi
  419810:	or     rcx,0x2
  419814:	cmp    rcx,0x2
  419818:	je     419800 <fb_scope_table_destroy@@Base+0x30>
  41981a:	mov    rdi,r14
  41981d:	call   r15
  419820:	mov    rax,QWORD PTR [r12+0x18]
  419825:	jmp    419800 <fb_scope_table_destroy@@Base+0x30>
  419827:	mov    rdi,QWORD PTR [r12]
  41982b:	test   rdi,rdi
  41982e:	je     419835 <fb_scope_table_destroy@@Base+0x65>
  419830:	call   406040 <free@plt>
  419835:	vxorps xmm0,xmm0,xmm0
  419839:	vmovups YMMWORD PTR [r12],ymm0
  41983f:	pop    rbx
  419840:	pop    r12
  419842:	pop    r13
  419844:	pop    r14
  419846:	pop    r15
  419848:	vzeroupper 
  41984b:	ret    
  41984c:	nop    DWORD PTR [rax+0x0]

0000000000419850 <fb_scope_table_init@@Base>:
  419850:	push   r14
  419852:	push   rbx
  419853:	push   rax
  419854:	mov    r14,rdi
  419857:	mov    eax,0x4
  41985c:	nop    DWORD PTR [rax+0x0]
  419860:	mov    rbx,rax
  419863:	imul   rcx,rax,0xb3
  41986a:	shr    rcx,0x8
  41986e:	add    rax,rax
  419871:	cmp    rcx,rsi
  419874:	jb     419860 <fb_scope_table_init@@Base+0x10>
  419876:	mov    esi,0x8
  41987b:	mov    rdi,rbx
  41987e:	call   406140 <calloc@plt>
  419883:	mov    QWORD PTR [r14],rax
  419886:	test   rax,rax
  419889:	je     41989d <fb_scope_table_init@@Base+0x4d>
  41988b:	vxorps xmm0,xmm0,xmm0
  41988f:	vmovups XMMWORD PTR [r14+0x8],xmm0
  419895:	mov    QWORD PTR [r14+0x18],rbx
  419899:	xor    eax,eax
  41989b:	jmp    4198a2 <fb_scope_table_init@@Base+0x52>
  41989d:	mov    eax,0xffffffff
  4198a2:	add    rsp,0x8
  4198a6:	pop    rbx
  4198a7:	pop    r14
  4198a9:	ret    
  4198aa:	nop    WORD PTR [rax+rax*1+0x0]

00000000004198b0 <fb_scope_table_resize@@Base>:
  4198b0:	jmp    4198c0 <fb_scope_table_resize@@Base+0x10>
  4198b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4198bc:	nop    DWORD PTR [rax+0x0]
  4198c0:	push   r15
  4198c2:	push   r14
  4198c4:	push   r12
  4198c6:	push   rbx
  4198c7:	sub    rsp,0x28
  4198cb:	mov    r14,rdi
  4198ce:	mov    r12,QWORD PTR [rdi]
  4198d1:	mov    rax,QWORD PTR [rdi+0x10]
  4198d5:	cmp    rax,rsi
  4198d8:	cmova  rsi,rax
  4198dc:	mov    eax,0x4
  4198e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4198eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4198f0:	mov    rbx,rax
  4198f3:	imul   rcx,rax,0xb3
  4198fa:	shr    rcx,0x8
  4198fe:	add    rax,rax
  419901:	cmp    rcx,rsi
  419904:	jb     4198f0 <fb_scope_table_resize@@Base+0x40>
  419906:	mov    esi,0x8
  41990b:	mov    rdi,rbx
  41990e:	call   406140 <calloc@plt>
  419913:	mov    QWORD PTR [rsp+0x8],rax
  419918:	test   rax,rax
  41991b:	je     419972 <fb_scope_table_resize@@Base+0xc2>
  41991d:	vxorps xmm0,xmm0,xmm0
  419921:	vmovups XMMWORD PTR [rsp+0x10],xmm0
  419927:	mov    QWORD PTR [rsp+0x20],rbx
  41992c:	mov    rax,QWORD PTR [r14+0x18]
  419930:	test   rax,rax
  419933:	je     41997c <fb_scope_table_resize@@Base+0xcc>
  419935:	xor    ebx,ebx
  419937:	lea    r15,[rsp+0x8]
  41993c:	jmp    419948 <fb_scope_table_resize@@Base+0x98>
  41993e:	xchg   ax,ax
  419940:	inc    rbx
  419943:	cmp    rbx,rax
  419946:	jae    419979 <fb_scope_table_resize@@Base+0xc9>
  419948:	mov    rcx,QWORD PTR [r12+rbx*8]
  41994c:	mov    rdx,rcx
  41994f:	or     rdx,0x2
  419953:	cmp    rdx,0x2
  419957:	je     419940 <fb_scope_table_resize@@Base+0x90>
  419959:	mov    rsi,QWORD PTR [rcx]
  41995c:	mov    rdi,r15
  41995f:	xor    edx,edx
  419961:	mov    r8d,0x3
  419967:	call   4199c0 <fb_scope_table_insert@@Base+0x10>
  41996c:	mov    rax,QWORD PTR [r14+0x18]
  419970:	jmp    419940 <fb_scope_table_resize@@Base+0x90>
  419972:	mov    eax,0xffffffff
  419977:	jmp    419996 <fb_scope_table_resize@@Base+0xe6>
  419979:	mov    r12,QWORD PTR [r14]
  41997c:	test   r12,r12
  41997f:	je     419989 <fb_scope_table_resize@@Base+0xd9>
  419981:	mov    rdi,r12
  419984:	call   406040 <free@plt>
  419989:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  41998f:	vmovups YMMWORD PTR [r14],ymm0
  419994:	xor    eax,eax
  419996:	add    rsp,0x28
  41999a:	pop    rbx
  41999b:	pop    r12
  41999d:	pop    r14
  41999f:	pop    r15
  4199a1:	vzeroupper 
  4199a4:	ret    
  4199a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4199af:	nop

00000000004199b0 <fb_scope_table_insert@@Base>:
  4199b0:	jmp    4199c0 <fb_scope_table_insert@@Base+0x10>
  4199b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4199bc:	nop    DWORD PTR [rax+0x0]
  4199c0:	push   rbp
  4199c1:	push   r15
  4199c3:	push   r14
  4199c5:	push   r13
  4199c7:	push   r12
  4199c9:	push   rbx
  4199ca:	sub    rsp,0x48
  4199ce:	mov    QWORD PTR [rsp+0x10],rdx
  4199d3:	mov    QWORD PTR [rsp+0x20],rsi
  4199d8:	cmp    rcx,0x2
  4199dc:	je     419d88 <fb_scope_table_insert@@Base+0x3d8>
  4199e2:	mov    rbx,rcx
  4199e5:	cmp    rcx,0x1
  4199e9:	je     419da7 <fb_scope_table_insert@@Base+0x3f7>
  4199ef:	test   rbx,rbx
  4199f2:	je     419dc6 <fb_scope_table_insert@@Base+0x416>
  4199f8:	mov    r15d,r8d
  4199fb:	mov    r14,rdi
  4199fe:	mov    rsi,QWORD PTR [rdi+0x10]
  419a02:	mov    rcx,QWORD PTR [rdi+0x18]
  419a06:	imul   rax,rcx,0xb3
  419a0d:	shr    rax,0x8
  419a11:	cmp    rsi,rax
  419a14:	jb     419a2d <fb_scope_table_insert@@Base+0x7d>
  419a16:	add    rsi,rsi
  419a19:	mov    rdi,r14
  419a1c:	call   4198c0 <fb_scope_table_resize@@Base+0x10>
  419a21:	test   eax,eax
  419a23:	jne    419de5 <fb_scope_table_insert@@Base+0x435>
  419a29:	mov    rcx,QWORD PTR [r14+0x18]
  419a2d:	mov    QWORD PTR [rsp+0x40],rbx
  419a32:	mov    r8d,0x9e3779b1
  419a38:	mov    rax,QWORD PTR [r14]
  419a3b:	mov    QWORD PTR [rsp+0x8],rax
  419a40:	dec    rcx
  419a43:	mov    QWORD PTR [rsp],rcx
  419a47:	mov    r9,QWORD PTR [rsp+0x10]
  419a4c:	xor    r12d,r12d
  419a4f:	test   r9d,r9d
  419a52:	jle    419b0e <fb_scope_table_insert@@Base+0x15e>
  419a58:	mov    rdx,QWORD PTR [rsp+0x20]
  419a5d:	test   r9,r9
  419a60:	je     419ab0 <fb_scope_table_insert@@Base+0x100>
  419a62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419a6c:	nop    DWORD PTR [rax+0x0]
  419a70:	xor    esi,esi
  419a72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419a7c:	nop    DWORD PTR [rax+0x0]
  419a80:	cmp    BYTE PTR [rdx+rsi*1],0x2e
  419a84:	je     419a91 <fb_scope_table_insert@@Base+0xe1>
  419a86:	inc    rsi
  419a89:	cmp    r9,rsi
  419a8c:	jne    419a80 <fb_scope_table_insert@@Base+0xd0>
  419a8e:	mov    rsi,r9
  419a91:	mov    rbp,rsi
  419a94:	dec    rbp
  419a97:	jne    419ab9 <fb_scope_table_insert@@Base+0x109>
  419a99:	mov    ecx,0x2f692e57
  419a9e:	mov    esi,0x1
  419aa3:	jmp    419ade <fb_scope_table_insert@@Base+0x12e>
  419aa5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419aaf:	nop
  419ab0:	mov    rbp,0xffffffffffffffff
  419ab7:	xor    esi,esi
  419ab9:	mov    ecx,0x2f692e57
  419abe:	xor    ebx,ebx
  419ac0:	movzx  eax,BYTE PTR [rdx+rbx*1]
  419ac4:	test   rax,rax
  419ac7:	je     419ade <fb_scope_table_insert@@Base+0x12e>
  419ac9:	mov    rdi,rcx
  419acc:	shl    rdi,0x5
  419ad0:	add    rcx,rdi
  419ad3:	xor    rcx,rax
  419ad6:	inc    rbx
  419ad9:	cmp    rbp,rbx
  419adc:	jne    419ac0 <fb_scope_table_insert@@Base+0x110>
  419ade:	xor    r12,rcx
  419ae1:	xor    r12,0x2f693b52
  419ae8:	imul   r12,r8
  419aec:	cmp    rsi,r9
  419aef:	je     419b95 <fb_scope_table_insert@@Base+0x1e5>
  419af5:	lea    rax,[rsi+0x1]
  419af9:	sub    r9,rax
  419afc:	add    rdx,rsi
  419aff:	add    rdx,0x1
  419b03:	test   r9,r9
  419b06:	jne    419a70 <fb_scope_table_insert@@Base+0xc0>
  419b0c:	jmp    419ab0 <fb_scope_table_insert@@Base+0x100>
  419b0e:	mov    rdx,QWORD PTR [rsp+0x20]
  419b13:	test   rdx,rdx
  419b16:	jne    419b40 <fb_scope_table_insert@@Base+0x190>
  419b18:	jmp    419b95 <fb_scope_table_insert@@Base+0x1e5>
  419b1d:	nop    DWORD PTR [rax]
  419b20:	mov    ebx,0x2f692e57
  419b25:	xor    r12,rbx
  419b28:	xor    r12,0x2f693b52
  419b2f:	imul   r12,r8
  419b33:	mov    rdx,QWORD PTR [rdx]
  419b36:	inc    r9d
  419b39:	je     419b95 <fb_scope_table_insert@@Base+0x1e5>
  419b3b:	test   rdx,rdx
  419b3e:	je     419b95 <fb_scope_table_insert@@Base+0x1e5>
  419b40:	mov    rax,QWORD PTR [rdx+0x8]
  419b44:	mov    rsi,QWORD PTR [rax+0x8]
  419b48:	dec    rsi
  419b4b:	je     419b20 <fb_scope_table_insert@@Base+0x170>
  419b4d:	mov    rdi,QWORD PTR [rax]
  419b50:	mov    eax,0x2f692e57
  419b55:	xor    ebp,ebp
  419b57:	nop    WORD PTR [rax+rax*1+0x0]
  419b60:	movzx  ecx,BYTE PTR [rdi+rbp*1]
  419b64:	test   rcx,rcx
  419b67:	je     419b90 <fb_scope_table_insert@@Base+0x1e0>
  419b69:	mov    rbx,rax
  419b6c:	shl    rbx,0x5
  419b70:	add    rbx,rax
  419b73:	xor    rbx,rcx
  419b76:	inc    rbp
  419b79:	mov    rax,rbx
  419b7c:	cmp    rsi,rbp
  419b7f:	jne    419b60 <fb_scope_table_insert@@Base+0x1b0>
  419b81:	jmp    419b25 <fb_scope_table_insert@@Base+0x175>
  419b83:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419b8d:	nop    DWORD PTR [rax]
  419b90:	mov    rbx,rax
  419b93:	jmp    419b25 <fb_scope_table_insert@@Base+0x175>
  419b95:	mov    rax,r12
  419b98:	and    rax,QWORD PTR [rsp]
  419b9c:	mov    ecx,r15d
  419b9f:	or     ecx,0x1
  419ba2:	cmp    ecx,0x3
  419ba5:	jne    419bdd <fb_scope_table_insert@@Base+0x22d>
  419ba7:	inc    QWORD PTR [r14+0x10]
  419bab:	inc    r12
  419bae:	mov    rdx,QWORD PTR [rsp]
  419bb2:	mov    rsi,QWORD PTR [rsp+0x8]
  419bb7:	nop    WORD PTR [rax+rax*1+0x0]
  419bc0:	mov    rcx,QWORD PTR [rsi+rax*8]
  419bc4:	or     rcx,0x2
  419bc8:	cmp    rcx,0x2
  419bcc:	je     419d55 <fb_scope_table_insert@@Base+0x3a5>
  419bd2:	mov    rax,r12
  419bd5:	and    rax,rdx
  419bd8:	inc    r12
  419bdb:	jmp    419bc0 <fb_scope_table_insert@@Base+0x210>
  419bdd:	mov    DWORD PTR [rsp+0x2c],r15d
  419be2:	mov    QWORD PTR [rsp+0x38],r14
  419be7:	xor    ebp,ebp
  419be9:	xor    r11d,r11d
  419bec:	mov    r8,QWORD PTR [rsp+0x10]
  419bf1:	mov    r9,QWORD PTR [rsp]
  419bf5:	mov    r10,QWORD PTR [rsp+0x8]
  419bfa:	jmp    419c15 <fb_scope_table_insert@@Base+0x265>
  419bfc:	nop    DWORD PTR [rax+0x0]
  419c00:	test   r11,r11
  419c03:	cmove  r11,r15
  419c07:	lea    rax,[r12+rbp*1]
  419c0b:	add    rax,0x1
  419c0f:	inc    rbp
  419c12:	and    rax,r9
  419c15:	lea    r15,[r10+rax*8]
  419c19:	mov    r13,QWORD PTR [r10+rax*8]
  419c1d:	cmp    r13,0x2
  419c21:	je     419c00 <fb_scope_table_insert@@Base+0x250>
  419c23:	test   r13,r13
  419c26:	je     419d5b <fb_scope_table_insert@@Base+0x3ab>
  419c2c:	mov    r14,QWORD PTR [r13+0x0]
  419c30:	test   r8d,r8d
  419c33:	jle    419c9b <fb_scope_table_insert@@Base+0x2eb>
  419c35:	mov    rax,QWORD PTR [rsp+0x20]
  419c3a:	mov    rcx,r8
  419c3d:	test   r14,r14
  419c40:	je     419c07 <fb_scope_table_insert@@Base+0x257>
  419c42:	mov    rsi,QWORD PTR [r14+0x8]
  419c46:	mov    rdx,QWORD PTR [rsi+0x8]
  419c4a:	cmp    rdx,rcx
  419c4d:	ja     419c07 <fb_scope_table_insert@@Base+0x257>
  419c4f:	test   rdx,rdx
  419c52:	je     419c71 <fb_scope_table_insert@@Base+0x2c1>
  419c54:	mov    rsi,QWORD PTR [rsi]
  419c57:	xor    edi,edi
  419c59:	nop    DWORD PTR [rax+0x0]
  419c60:	movzx  ebx,BYTE PTR [rsi+rdi*1]
  419c64:	cmp    bl,BYTE PTR [rax+rdi*1]
  419c67:	jne    419c07 <fb_scope_table_insert@@Base+0x257>
  419c69:	inc    rdi
  419c6c:	cmp    rdx,rdi
  419c6f:	jne    419c60 <fb_scope_table_insert@@Base+0x2b0>
  419c71:	cmp    rdx,rcx
  419c74:	je     419d38 <fb_scope_table_insert@@Base+0x388>
  419c7a:	cmp    BYTE PTR [rax+rdx*1],0x2e
  419c7e:	jne    419c07 <fb_scope_table_insert@@Base+0x257>
  419c80:	lea    rsi,[rdx+0x1]
  419c84:	sub    rcx,rsi
  419c87:	add    rax,rdx
  419c8a:	add    rax,0x1
  419c8e:	mov    r14,QWORD PTR [r14]
  419c91:	test   r14,r14
  419c94:	jne    419c42 <fb_scope_table_insert@@Base+0x292>
  419c96:	jmp    419c07 <fb_scope_table_insert@@Base+0x257>
  419c9b:	mov    QWORD PTR [rsp+0x30],r15
  419ca0:	mov    rbx,r11
  419ca3:	mov    QWORD PTR [rsp+0x18],rbp
  419ca8:	mov    rbp,r8
  419cab:	mov    r15d,ebp
  419cae:	mov    rbp,QWORD PTR [rsp+0x20]
  419cb3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419cbd:	nop    DWORD PTR [rax]
  419cc0:	test   r14,r14
  419cc3:	je     419d17 <fb_scope_table_insert@@Base+0x367>
  419cc5:	test   rbp,rbp
  419cc8:	je     419d17 <fb_scope_table_insert@@Base+0x367>
  419cca:	mov    rax,QWORD PTR [r14+0x8]
  419cce:	mov    rdx,QWORD PTR [rax+0x8]
  419cd2:	mov    rcx,QWORD PTR [rbp+0x8]
  419cd6:	cmp    rdx,QWORD PTR [rcx+0x8]
  419cda:	jne    419cfc <fb_scope_table_insert@@Base+0x34c>
  419cdc:	mov    rdi,QWORD PTR [rax]
  419cdf:	mov    rsi,QWORD PTR [rcx]
  419ce2:	call   406060 <strncmp@plt>
  419ce7:	test   eax,eax
  419ce9:	jne    419cfc <fb_scope_table_insert@@Base+0x34c>
  419ceb:	mov    r14,QWORD PTR [r14]
  419cee:	mov    rbp,QWORD PTR [rbp+0x0]
  419cf2:	inc    r15d
  419cf5:	jne    419cc0 <fb_scope_table_insert@@Base+0x310>
  419cf7:	test   r14,r14
  419cfa:	jmp    419d1a <fb_scope_table_insert@@Base+0x36a>
  419cfc:	mov    r8,QWORD PTR [rsp+0x10]
  419d01:	mov    r9,QWORD PTR [rsp]
  419d05:	mov    r10,QWORD PTR [rsp+0x8]
  419d0a:	mov    rbp,QWORD PTR [rsp+0x18]
  419d0f:	mov    r11,rbx
  419d12:	jmp    419c07 <fb_scope_table_insert@@Base+0x257>
  419d17:	or     r14,rbp
  419d1a:	mov    r8,QWORD PTR [rsp+0x10]
  419d1f:	mov    r9,QWORD PTR [rsp]
  419d23:	mov    r10,QWORD PTR [rsp+0x8]
  419d28:	mov    rbp,QWORD PTR [rsp+0x18]
  419d2d:	mov    r11,rbx
  419d30:	jne    419c07 <fb_scope_table_insert@@Base+0x257>
  419d36:	jmp    419d47 <fb_scope_table_insert@@Base+0x397>
  419d38:	mov    QWORD PTR [rsp+0x30],r15
  419d3d:	cmp    QWORD PTR [r14],0x0
  419d41:	jne    419c07 <fb_scope_table_insert@@Base+0x257>
  419d47:	cmp    DWORD PTR [rsp+0x2c],0x0
  419d4c:	mov    r15,QWORD PTR [rsp+0x30]
  419d51:	jne    419d76 <fb_scope_table_insert@@Base+0x3c6>
  419d53:	jmp    419d6e <fb_scope_table_insert@@Base+0x3be>
  419d55:	lea    r15,[rsi+rax*8]
  419d59:	jmp    419d6b <fb_scope_table_insert@@Base+0x3bb>
  419d5b:	test   r11,r11
  419d5e:	cmovne r15,r11
  419d62:	mov    rax,QWORD PTR [rsp+0x38]
  419d67:	inc    QWORD PTR [rax+0x10]
  419d6b:	xor    r13d,r13d
  419d6e:	mov    rax,QWORD PTR [rsp+0x40]
  419d73:	mov    QWORD PTR [r15],rax
  419d76:	mov    rax,r13
  419d79:	add    rsp,0x48
  419d7d:	pop    rbx
  419d7e:	pop    r12
  419d80:	pop    r13
  419d82:	pop    r14
  419d84:	pop    r15
  419d86:	pop    rbp
  419d87:	ret    
  419d88:	lea    rdi,[rip+0x2b8e4]        # 445673 <str_set_deleted@@Base+0xd3>
  419d8f:	lea    rsi,[rip+0x2b829]        # 4455bf <str_set_deleted@@Base+0x1f>
  419d96:	lea    rcx,[rip+0x2b88c]        # 445629 <str_set_deleted@@Base+0x89>
  419d9d:	mov    edx,0x73
  419da2:	call   4060f0 <__assert_fail@plt>
  419da7:	lea    rdi,[rip+0x2b8dc]        # 44568a <str_set_deleted@@Base+0xea>
  419dae:	lea    rsi,[rip+0x2b80a]        # 4455bf <str_set_deleted@@Base+0x1f>
  419db5:	lea    rcx,[rip+0x2b86d]        # 445629 <str_set_deleted@@Base+0x89>
  419dbc:	mov    edx,0x74
  419dc1:	call   4060f0 <__assert_fail@plt>
  419dc6:	lea    rdi,[rip+0x2b7db]        # 4455a8 <str_set_deleted@@Base+0x8>
  419dcd:	lea    rsi,[rip+0x2b7eb]        # 4455bf <str_set_deleted@@Base+0x1f>
  419dd4:	lea    rcx,[rip+0x2b84e]        # 445629 <str_set_deleted@@Base+0x89>
  419ddb:	mov    edx,0x72
  419de0:	call   4060f0 <__assert_fail@plt>
  419de5:	mov    rax,QWORD PTR [rip+0x3620c]        # 44fff8 <stderr@GLIBC_2.2.5>
  419dec:	mov    rdi,QWORD PTR [rax]
  419def:	lea    rsi,[rip+0x2b8a9]        # 44569f <str_set_deleted@@Base+0xff>
  419df6:	lea    rdx,[rip+0x2b8b9]        # 4456b6 <str_set_deleted@@Base+0x116>
  419dfd:	xor    eax,eax
  419dff:	call   406170 <fprintf@plt>
  419e04:	mov    edi,0x1
  419e09:	call   406210 <exit@plt>
  419e0e:	xchg   ax,ax

0000000000419e10 <fb_scope_table_insert_item@@Base>:
  419e10:	mov    r8d,edx
  419e13:	mov    rcx,rsi
  419e16:	mov    rsi,QWORD PTR [rsi]
  419e19:	xor    edx,edx
  419e1b:	jmp    4199c0 <fb_scope_table_insert@@Base+0x10>

0000000000419e20 <fb_scope_table_find@@Base>:
  419e20:	push   rbp
  419e21:	push   r15
  419e23:	push   r14
  419e25:	push   r13
  419e27:	push   r12
  419e29:	push   rbx
  419e2a:	sub    rsp,0x28
  419e2e:	mov    QWORD PTR [rsp],rsi
  419e32:	mov    rax,QWORD PTR [rdi]
  419e35:	mov    QWORD PTR [rsp+0x20],rax
  419e3a:	test   rax,rax
  419e3d:	je     41a0cf <fb_scope_table_find@@Base+0x2af>
  419e43:	mov    rax,QWORD PTR [rdi+0x18]
  419e47:	mov    QWORD PTR [rsp+0x8],rax
  419e4c:	test   edx,edx
  419e4e:	mov    QWORD PTR [rsp+0x18],rdx
  419e53:	mov    r8d,0x9e3779b1
  419e59:	jle    419f0a <fb_scope_table_find@@Base+0xea>
  419e5f:	xor    r14d,r14d
  419e62:	mov    r9,rdx
  419e65:	mov    rdx,QWORD PTR [rsp]
  419e69:	test   r9,r9
  419e6c:	jne    419e83 <fb_scope_table_find@@Base+0x63>
  419e6e:	jmp    419ec0 <fb_scope_table_find@@Base+0xa0>
  419e70:	lea    rax,[rsi+0x1]
  419e74:	sub    r9,rax
  419e77:	add    rdx,rsi
  419e7a:	add    rdx,0x1
  419e7e:	test   r9,r9
  419e81:	je     419ec0 <fb_scope_table_find@@Base+0xa0>
  419e83:	xor    esi,esi
  419e85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419e8f:	nop
  419e90:	cmp    BYTE PTR [rdx+rsi*1],0x2e
  419e94:	je     419ea1 <fb_scope_table_find@@Base+0x81>
  419e96:	inc    rsi
  419e99:	cmp    r9,rsi
  419e9c:	jne    419e90 <fb_scope_table_find@@Base+0x70>
  419e9e:	mov    rsi,r9
  419ea1:	mov    rbx,rsi
  419ea4:	dec    rbx
  419ea7:	jne    419ec9 <fb_scope_table_find@@Base+0xa9>
  419ea9:	mov    ecx,0x2f692e57
  419eae:	mov    esi,0x1
  419eb3:	jmp    419eee <fb_scope_table_find@@Base+0xce>
  419eb5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419ebf:	nop
  419ec0:	mov    rbx,0xffffffffffffffff
  419ec7:	xor    esi,esi
  419ec9:	mov    ecx,0x2f692e57
  419ece:	xor    eax,eax
  419ed0:	movzx  ebp,BYTE PTR [rdx+rax*1]
  419ed4:	test   rbp,rbp
  419ed7:	je     419eee <fb_scope_table_find@@Base+0xce>
  419ed9:	mov    rdi,rcx
  419edc:	shl    rdi,0x5
  419ee0:	add    rcx,rdi
  419ee3:	xor    rcx,rbp
  419ee6:	inc    rax
  419ee9:	cmp    rbx,rax
  419eec:	jne    419ed0 <fb_scope_table_find@@Base+0xb0>
  419eee:	xor    r14,rcx
  419ef1:	xor    r14,0x2f693b52
  419ef8:	imul   r14,r8
  419efc:	cmp    rsi,r9
  419eff:	jne    419e70 <fb_scope_table_find@@Base+0x50>
  419f05:	jmp    419f95 <fb_scope_table_find@@Base+0x175>
  419f0a:	xor    r14d,r14d
  419f0d:	mov    r9d,edx
  419f10:	mov    r10,QWORD PTR [rsp]
  419f14:	test   r10,r10
  419f17:	jne    419f40 <fb_scope_table_find@@Base+0x120>
  419f19:	jmp    419f95 <fb_scope_table_find@@Base+0x175>
  419f1e:	xchg   ax,ax
  419f20:	mov    eax,0x2f692e57
  419f25:	xor    r14,rax
  419f28:	xor    r14,0x2f693b52
  419f2f:	imul   r14,r8
  419f33:	mov    r10,QWORD PTR [r10]
  419f36:	inc    r9d
  419f39:	je     419f95 <fb_scope_table_find@@Base+0x175>
  419f3b:	test   r10,r10
  419f3e:	je     419f95 <fb_scope_table_find@@Base+0x175>
  419f40:	mov    rax,QWORD PTR [r10+0x8]
  419f44:	mov    rsi,QWORD PTR [rax+0x8]
  419f48:	dec    rsi
  419f4b:	je     419f20 <fb_scope_table_find@@Base+0x100>
  419f4d:	mov    rdi,QWORD PTR [rax]
  419f50:	mov    ecx,0x2f692e57
  419f55:	xor    ebx,ebx
  419f57:	nop    WORD PTR [rax+rax*1+0x0]
  419f60:	movzx  edx,BYTE PTR [rdi+rbx*1]
  419f64:	test   rdx,rdx
  419f67:	je     419f90 <fb_scope_table_find@@Base+0x170>
  419f69:	mov    rax,rcx
  419f6c:	shl    rax,0x5
  419f70:	add    rax,rcx
  419f73:	xor    rax,rdx
  419f76:	inc    rbx
  419f79:	mov    rcx,rax
  419f7c:	cmp    rsi,rbx
  419f7f:	jne    419f60 <fb_scope_table_find@@Base+0x140>
  419f81:	jmp    419f25 <fb_scope_table_find@@Base+0x105>
  419f83:	nop    WORD PTR cs:[rax+rax*1+0x0]
  419f8d:	nop    DWORD PTR [rax]
  419f90:	mov    rax,rcx
  419f93:	jmp    419f25 <fb_scope_table_find@@Base+0x105>
  419f95:	dec    QWORD PTR [rsp+0x8]
  419f9a:	mov    rax,r14
  419f9d:	xor    ecx,ecx
  419f9f:	jmp    419fc2 <fb_scope_table_find@@Base+0x1a2>
  419fa1:	or     r15,r12
  419fa4:	je     41a0d1 <fb_scope_table_find@@Base+0x2b1>
  419faa:	nop    WORD PTR [rax+rax*1+0x0]
  419fb0:	mov    rax,QWORD PTR [rsp+0x10]
  419fb5:	mov    rcx,rax
  419fb8:	add    rax,r14
  419fbb:	add    rax,0x1
  419fbf:	inc    rcx
  419fc2:	mov    QWORD PTR [rsp+0x10],rcx
  419fc7:	and    rax,QWORD PTR [rsp+0x8]
  419fcc:	mov    rcx,QWORD PTR [rsp+0x20]
  419fd1:	mov    rbp,QWORD PTR [rcx+rax*8]
  419fd5:	cmp    rbp,0x2
  419fd9:	je     419fb0 <fb_scope_table_find@@Base+0x190>
  419fdb:	test   rbp,rbp
  419fde:	je     41a0cf <fb_scope_table_find@@Base+0x2af>
  419fe4:	mov    r15,QWORD PTR [rbp+0x0]
  419fe8:	mov    rcx,QWORD PTR [rsp+0x18]
  419fed:	test   ecx,ecx
  419fef:	jle    41a05f <fb_scope_table_find@@Base+0x23f>
  419ff1:	mov    rax,QWORD PTR [rsp]
  419ff5:	test   r15,r15
  419ff8:	je     419fb0 <fb_scope_table_find@@Base+0x190>
  419ffa:	mov    rsi,QWORD PTR [r15+0x8]
  419ffe:	mov    rdx,QWORD PTR [rsi+0x8]
  41a002:	cmp    rdx,rcx
  41a005:	ja     419fb0 <fb_scope_table_find@@Base+0x190>
  41a007:	test   rdx,rdx
  41a00a:	je     41a031 <fb_scope_table_find@@Base+0x211>
  41a00c:	mov    rsi,QWORD PTR [rsi]
  41a00f:	xor    edi,edi
  41a011:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a01b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a020:	movzx  ebx,BYTE PTR [rsi+rdi*1]
  41a024:	cmp    bl,BYTE PTR [rax+rdi*1]
  41a027:	jne    419fb0 <fb_scope_table_find@@Base+0x190>
  41a029:	inc    rdi
  41a02c:	cmp    rdx,rdi
  41a02f:	jne    41a020 <fb_scope_table_find@@Base+0x200>
  41a031:	cmp    rdx,rcx
  41a034:	je     41a0c3 <fb_scope_table_find@@Base+0x2a3>
  41a03a:	cmp    BYTE PTR [rax+rdx*1],0x2e
  41a03e:	jne    419fb0 <fb_scope_table_find@@Base+0x190>
  41a044:	lea    rsi,[rdx+0x1]
  41a048:	sub    rcx,rsi
  41a04b:	add    rax,rdx
  41a04e:	add    rax,0x1
  41a052:	mov    r15,QWORD PTR [r15]
  41a055:	test   r15,r15
  41a058:	jne    419ffa <fb_scope_table_find@@Base+0x1da>
  41a05a:	jmp    419fb0 <fb_scope_table_find@@Base+0x190>
  41a05f:	mov    r13d,ecx
  41a062:	mov    r12,QWORD PTR [rsp]
  41a066:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a070:	test   r15,r15
  41a073:	je     419fa1 <fb_scope_table_find@@Base+0x181>
  41a079:	test   r12,r12
  41a07c:	je     419fa1 <fb_scope_table_find@@Base+0x181>
  41a082:	mov    rax,QWORD PTR [r15+0x8]
  41a086:	mov    rdx,QWORD PTR [rax+0x8]
  41a08a:	mov    rcx,QWORD PTR [r12+0x8]
  41a08f:	cmp    rdx,QWORD PTR [rcx+0x8]
  41a093:	jne    419fb0 <fb_scope_table_find@@Base+0x190>
  41a099:	mov    rdi,QWORD PTR [rax]
  41a09c:	mov    rsi,QWORD PTR [rcx]
  41a09f:	call   406060 <strncmp@plt>
  41a0a4:	test   eax,eax
  41a0a6:	jne    419fb0 <fb_scope_table_find@@Base+0x190>
  41a0ac:	mov    r15,QWORD PTR [r15]
  41a0af:	mov    r12,QWORD PTR [r12]
  41a0b3:	inc    r13d
  41a0b6:	jne    41a070 <fb_scope_table_find@@Base+0x250>
  41a0b8:	test   r15,r15
  41a0bb:	jne    419fb0 <fb_scope_table_find@@Base+0x190>
  41a0c1:	jmp    41a0d1 <fb_scope_table_find@@Base+0x2b1>
  41a0c3:	cmp    QWORD PTR [r15],0x0
  41a0c7:	jne    419fb0 <fb_scope_table_find@@Base+0x190>
  41a0cd:	jmp    41a0d1 <fb_scope_table_find@@Base+0x2b1>
  41a0cf:	xor    ebp,ebp
  41a0d1:	mov    rax,rbp
  41a0d4:	add    rsp,0x28
  41a0d8:	pop    rbx
  41a0d9:	pop    r12
  41a0db:	pop    r13
  41a0dd:	pop    r14
  41a0df:	pop    r15
  41a0e1:	pop    rbp
  41a0e2:	ret    
  41a0e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a0ed:	nop    DWORD PTR [rax]

000000000041a0f0 <fb_scope_table_find_item@@Base>:
  41a0f0:	push   rbp
  41a0f1:	push   r15
  41a0f3:	push   r14
  41a0f5:	push   r13
  41a0f7:	push   r12
  41a0f9:	push   rbx
  41a0fa:	sub    rsp,0x18
  41a0fe:	mov    rax,QWORD PTR [rdi]
  41a101:	mov    QWORD PTR [rsp+0x10],rax
  41a106:	test   rax,rax
  41a109:	je     41a272 <fb_scope_table_find_item@@Base+0x182>
  41a10f:	mov    r10,QWORD PTR [rsi]
  41a112:	mov    rax,QWORD PTR [rdi+0x18]
  41a116:	mov    QWORD PTR [rsp+0x8],rax
  41a11b:	xor    ebx,ebx
  41a11d:	test   r10,r10
  41a120:	je     41a1b5 <fb_scope_table_find_item@@Base+0xc5>
  41a126:	mov    r8d,0x9e3779b1
  41a12c:	mov    r9,r10
  41a12f:	jmp    41a15b <fb_scope_table_find_item@@Base+0x6b>
  41a131:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a13b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a140:	mov    ebp,0x2f692e57
  41a145:	xor    rbx,rbp
  41a148:	xor    rbx,0x2f693b52
  41a14f:	imul   rbx,r8
  41a153:	mov    r9,QWORD PTR [r9]
  41a156:	test   r9,r9
  41a159:	je     41a1b5 <fb_scope_table_find_item@@Base+0xc5>
  41a15b:	mov    rax,QWORD PTR [r9+0x8]
  41a15f:	mov    rdx,QWORD PTR [rax+0x8]
  41a163:	dec    rdx
  41a166:	je     41a140 <fb_scope_table_find_item@@Base+0x50>
  41a168:	mov    rsi,QWORD PTR [rax]
  41a16b:	mov    eax,0x2f692e57
  41a170:	xor    edi,edi
  41a172:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a17c:	nop    DWORD PTR [rax+0x0]
  41a180:	movzx  ecx,BYTE PTR [rsi+rdi*1]
  41a184:	test   rcx,rcx
  41a187:	je     41a1b0 <fb_scope_table_find_item@@Base+0xc0>
  41a189:	mov    rbp,rax
  41a18c:	shl    rbp,0x5
  41a190:	add    rbp,rax
  41a193:	xor    rbp,rcx
  41a196:	inc    rdi
  41a199:	mov    rax,rbp
  41a19c:	cmp    rdx,rdi
  41a19f:	jne    41a180 <fb_scope_table_find_item@@Base+0x90>
  41a1a1:	jmp    41a145 <fb_scope_table_find_item@@Base+0x55>
  41a1a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a1ad:	nop    DWORD PTR [rax]
  41a1b0:	mov    rbp,rax
  41a1b3:	jmp    41a145 <fb_scope_table_find_item@@Base+0x55>
  41a1b5:	dec    QWORD PTR [rsp+0x8]
  41a1ba:	mov    r12,r10
  41a1bd:	test   r10,r10
  41a1c0:	setne  BYTE PTR [rsp+0x7]
  41a1c5:	mov    rax,rbx
  41a1c8:	xor    ebp,ebp
  41a1ca:	jmp    41a1db <fb_scope_table_find_item@@Base+0xeb>
  41a1cc:	nop    DWORD PTR [rax+0x0]
  41a1d0:	lea    rax,[rbx+rbp*1]
  41a1d4:	add    rax,0x1
  41a1d8:	inc    rbp
  41a1db:	and    rax,QWORD PTR [rsp+0x8]
  41a1e0:	mov    rcx,QWORD PTR [rsp+0x10]
  41a1e5:	mov    r13,QWORD PTR [rcx+rax*8]
  41a1e9:	cmp    r13,0x2
  41a1ed:	je     41a1d0 <fb_scope_table_find_item@@Base+0xe0>
  41a1ef:	test   r13,r13
  41a1f2:	je     41a272 <fb_scope_table_find_item@@Base+0x182>
  41a1f4:	mov    r15,QWORD PTR [r13+0x0]
  41a1f8:	test   r15,r15
  41a1fb:	setne  al
  41a1fe:	mov    rcx,r12
  41a201:	test   r12,r12
  41a204:	je     41a25c <fb_scope_table_find_item@@Base+0x16c>
  41a206:	mov    cl,BYTE PTR [rsp+0x7]
  41a20a:	test   r15,r15
  41a20d:	je     41a260 <fb_scope_table_find_item@@Base+0x170>
  41a20f:	mov    r14,r12
  41a212:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a21c:	nop    DWORD PTR [rax+0x0]
  41a220:	mov    rax,QWORD PTR [r15+0x8]
  41a224:	mov    rdx,QWORD PTR [rax+0x8]
  41a228:	mov    rcx,QWORD PTR [r14+0x8]
  41a22c:	cmp    rdx,QWORD PTR [rcx+0x8]
  41a230:	jne    41a1d0 <fb_scope_table_find_item@@Base+0xe0>
  41a232:	mov    rdi,QWORD PTR [rax]
  41a235:	mov    rsi,QWORD PTR [rcx]
  41a238:	call   406060 <strncmp@plt>
  41a23d:	test   eax,eax
  41a23f:	jne    41a1d0 <fb_scope_table_find_item@@Base+0xe0>
  41a241:	mov    r14,QWORD PTR [r14]
  41a244:	mov    r15,QWORD PTR [r15]
  41a247:	test   r15,r15
  41a24a:	setne  al
  41a24d:	test   r14,r14
  41a250:	setne  cl
  41a253:	je     41a260 <fb_scope_table_find_item@@Base+0x170>
  41a255:	test   r15,r15
  41a258:	jne    41a220 <fb_scope_table_find_item@@Base+0x130>
  41a25a:	jmp    41a260 <fb_scope_table_find_item@@Base+0x170>
  41a25c:	mov    cl,BYTE PTR [rsp+0x7]
  41a260:	test   cl,cl
  41a262:	jne    41a1d0 <fb_scope_table_find_item@@Base+0xe0>
  41a268:	test   al,al
  41a26a:	jne    41a1d0 <fb_scope_table_find_item@@Base+0xe0>
  41a270:	jmp    41a275 <fb_scope_table_find_item@@Base+0x185>
  41a272:	xor    r13d,r13d
  41a275:	mov    rax,r13
  41a278:	add    rsp,0x18
  41a27c:	pop    rbx
  41a27d:	pop    r12
  41a27f:	pop    r13
  41a281:	pop    r14
  41a283:	pop    r15
  41a285:	pop    rbp
  41a286:	ret    
  41a287:	nop    WORD PTR [rax+rax*1+0x0]

000000000041a290 <fb_scope_table_remove@@Base>:
  41a290:	jmp    41a2a0 <fb_scope_table_remove@@Base+0x10>
  41a292:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a29c:	nop    DWORD PTR [rax+0x0]
  41a2a0:	push   rbp
  41a2a1:	push   r15
  41a2a3:	push   r14
  41a2a5:	push   r13
  41a2a7:	push   r12
  41a2a9:	push   rbx
  41a2aa:	sub    rsp,0x38
  41a2ae:	mov    QWORD PTR [rsp],rsi
  41a2b2:	mov    rax,QWORD PTR [rdi]
  41a2b5:	mov    QWORD PTR [rsp+0x8],rax
  41a2ba:	test   rax,rax
  41a2bd:	je     41a57b <fb_scope_table_remove@@Base+0x2eb>
  41a2c3:	mov    rax,QWORD PTR [rdi+0x18]
  41a2c7:	mov    QWORD PTR [rsp+0x10],rax
  41a2cc:	test   edx,edx
  41a2ce:	mov    QWORD PTR [rsp+0x30],rdx
  41a2d3:	mov    QWORD PTR [rsp+0x28],rdi
  41a2d8:	mov    r8d,0x9e3779b1
  41a2de:	jle    41a39e <fb_scope_table_remove@@Base+0x10e>
  41a2e4:	xor    r14d,r14d
  41a2e7:	mov    r9,rdx
  41a2ea:	mov    rdx,QWORD PTR [rsp]
  41a2ee:	test   r9,r9
  41a2f1:	je     41a340 <fb_scope_table_remove@@Base+0xb0>
  41a2f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a2fd:	nop    DWORD PTR [rax]
  41a300:	xor    esi,esi
  41a302:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a30c:	nop    DWORD PTR [rax+0x0]
  41a310:	cmp    BYTE PTR [rdx+rsi*1],0x2e
  41a314:	je     41a321 <fb_scope_table_remove@@Base+0x91>
  41a316:	inc    rsi
  41a319:	cmp    r9,rsi
  41a31c:	jne    41a310 <fb_scope_table_remove@@Base+0x80>
  41a31e:	mov    rsi,r9
  41a321:	mov    rbp,rsi
  41a324:	dec    rbp
  41a327:	jne    41a349 <fb_scope_table_remove@@Base+0xb9>
  41a329:	mov    ecx,0x2f692e57
  41a32e:	mov    esi,0x1
  41a333:	jmp    41a36e <fb_scope_table_remove@@Base+0xde>
  41a335:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a33f:	nop
  41a340:	mov    rbp,0xffffffffffffffff
  41a347:	xor    esi,esi
  41a349:	mov    ecx,0x2f692e57
  41a34e:	xor    ebx,ebx
  41a350:	movzx  eax,BYTE PTR [rdx+rbx*1]
  41a354:	test   rax,rax
  41a357:	je     41a36e <fb_scope_table_remove@@Base+0xde>
  41a359:	mov    rdi,rcx
  41a35c:	shl    rdi,0x5
  41a360:	add    rcx,rdi
  41a363:	xor    rcx,rax
  41a366:	inc    rbx
  41a369:	cmp    rbp,rbx
  41a36c:	jne    41a350 <fb_scope_table_remove@@Base+0xc0>
  41a36e:	xor    r14,rcx
  41a371:	xor    r14,0x2f693b52
  41a378:	imul   r14,r8
  41a37c:	cmp    rsi,r9
  41a37f:	je     41a425 <fb_scope_table_remove@@Base+0x195>
  41a385:	lea    rax,[rsi+0x1]
  41a389:	sub    r9,rax
  41a38c:	add    rdx,rsi
  41a38f:	add    rdx,0x1
  41a393:	test   r9,r9
  41a396:	jne    41a300 <fb_scope_table_remove@@Base+0x70>
  41a39c:	jmp    41a340 <fb_scope_table_remove@@Base+0xb0>
  41a39e:	xor    r14d,r14d
  41a3a1:	mov    r9d,edx
  41a3a4:	mov    rdx,QWORD PTR [rsp]
  41a3a8:	test   rdx,rdx
  41a3ab:	jne    41a3d0 <fb_scope_table_remove@@Base+0x140>
  41a3ad:	jmp    41a425 <fb_scope_table_remove@@Base+0x195>
  41a3af:	nop
  41a3b0:	mov    ebx,0x2f692e57
  41a3b5:	xor    r14,rbx
  41a3b8:	xor    r14,0x2f693b52
  41a3bf:	imul   r14,r8
  41a3c3:	mov    rdx,QWORD PTR [rdx]
  41a3c6:	inc    r9d
  41a3c9:	je     41a425 <fb_scope_table_remove@@Base+0x195>
  41a3cb:	test   rdx,rdx
  41a3ce:	je     41a425 <fb_scope_table_remove@@Base+0x195>
  41a3d0:	mov    rax,QWORD PTR [rdx+0x8]
  41a3d4:	mov    rsi,QWORD PTR [rax+0x8]
  41a3d8:	dec    rsi
  41a3db:	je     41a3b0 <fb_scope_table_remove@@Base+0x120>
  41a3dd:	mov    rdi,QWORD PTR [rax]
  41a3e0:	mov    eax,0x2f692e57
  41a3e5:	xor    ebp,ebp
  41a3e7:	nop    WORD PTR [rax+rax*1+0x0]
  41a3f0:	movzx  ecx,BYTE PTR [rdi+rbp*1]
  41a3f4:	test   rcx,rcx
  41a3f7:	je     41a420 <fb_scope_table_remove@@Base+0x190>
  41a3f9:	mov    rbx,rax
  41a3fc:	shl    rbx,0x5
  41a400:	add    rbx,rax
  41a403:	xor    rbx,rcx
  41a406:	inc    rbp
  41a409:	mov    rax,rbx
  41a40c:	cmp    rsi,rbp
  41a40f:	jne    41a3f0 <fb_scope_table_remove@@Base+0x160>
  41a411:	jmp    41a3b5 <fb_scope_table_remove@@Base+0x125>
  41a413:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a41d:	nop    DWORD PTR [rax]
  41a420:	mov    rbx,rax
  41a423:	jmp    41a3b5 <fb_scope_table_remove@@Base+0x125>
  41a425:	dec    QWORD PTR [rsp+0x10]
  41a42a:	xor    eax,eax
  41a42c:	mov    QWORD PTR [rsp+0x20],rax
  41a431:	mov    r12,r14
  41a434:	jmp    41a455 <fb_scope_table_remove@@Base+0x1c5>
  41a436:	or     r13,rbp
  41a439:	je     41a55e <fb_scope_table_remove@@Base+0x2ce>
  41a43f:	nop
  41a440:	mov    rax,QWORD PTR [rsp+0x20]
  41a445:	lea    r12,[rax+r14*1]
  41a449:	add    r12,0x1
  41a44d:	inc    rax
  41a450:	mov    QWORD PTR [rsp+0x20],rax
  41a455:	and    r12,QWORD PTR [rsp+0x10]
  41a45a:	mov    rax,QWORD PTR [rsp+0x8]
  41a45f:	mov    rax,QWORD PTR [rax+r12*8]
  41a463:	mov    QWORD PTR [rsp+0x18],rax
  41a468:	cmp    rax,0x2
  41a46c:	je     41a440 <fb_scope_table_remove@@Base+0x1b0>
  41a46e:	mov    rax,QWORD PTR [rsp+0x18]
  41a473:	test   rax,rax
  41a476:	je     41a57b <fb_scope_table_remove@@Base+0x2eb>
  41a47c:	mov    r13,QWORD PTR [rax]
  41a47f:	mov    rcx,QWORD PTR [rsp+0x30]
  41a484:	test   ecx,ecx
  41a486:	jle    41a4f0 <fb_scope_table_remove@@Base+0x260>
  41a488:	mov    rax,QWORD PTR [rsp]
  41a48c:	test   r13,r13
  41a48f:	je     41a440 <fb_scope_table_remove@@Base+0x1b0>
  41a491:	mov    rsi,QWORD PTR [r13+0x8]
  41a495:	mov    rdx,QWORD PTR [rsi+0x8]
  41a499:	cmp    rdx,rcx
  41a49c:	ja     41a440 <fb_scope_table_remove@@Base+0x1b0>
  41a49e:	test   rdx,rdx
  41a4a1:	je     41a4c1 <fb_scope_table_remove@@Base+0x231>
  41a4a3:	mov    rsi,QWORD PTR [rsi]
  41a4a6:	xor    edi,edi
  41a4a8:	nop    DWORD PTR [rax+rax*1+0x0]
  41a4b0:	movzx  ebx,BYTE PTR [rsi+rdi*1]
  41a4b4:	cmp    bl,BYTE PTR [rax+rdi*1]
  41a4b7:	jne    41a440 <fb_scope_table_remove@@Base+0x1b0>
  41a4b9:	inc    rdi
  41a4bc:	cmp    rdx,rdi
  41a4bf:	jne    41a4b0 <fb_scope_table_remove@@Base+0x220>
  41a4c1:	cmp    rdx,rcx
  41a4c4:	je     41a553 <fb_scope_table_remove@@Base+0x2c3>
  41a4ca:	cmp    BYTE PTR [rax+rdx*1],0x2e
  41a4ce:	jne    41a440 <fb_scope_table_remove@@Base+0x1b0>
  41a4d4:	lea    rsi,[rdx+0x1]
  41a4d8:	sub    rcx,rsi
  41a4db:	add    rax,rdx
  41a4de:	add    rax,0x1
  41a4e2:	mov    r13,QWORD PTR [r13+0x0]
  41a4e6:	test   r13,r13
  41a4e9:	jne    41a491 <fb_scope_table_remove@@Base+0x201>
  41a4eb:	jmp    41a440 <fb_scope_table_remove@@Base+0x1b0>
  41a4f0:	mov    r15d,ecx
  41a4f3:	mov    rbp,QWORD PTR [rsp]
  41a4f7:	nop    WORD PTR [rax+rax*1+0x0]
  41a500:	test   r13,r13
  41a503:	je     41a436 <fb_scope_table_remove@@Base+0x1a6>
  41a509:	test   rbp,rbp
  41a50c:	je     41a436 <fb_scope_table_remove@@Base+0x1a6>
  41a512:	mov    rax,QWORD PTR [r13+0x8]
  41a516:	mov    rdx,QWORD PTR [rax+0x8]
  41a51a:	mov    rcx,QWORD PTR [rbp+0x8]
  41a51e:	cmp    rdx,QWORD PTR [rcx+0x8]
  41a522:	jne    41a440 <fb_scope_table_remove@@Base+0x1b0>
  41a528:	mov    rdi,QWORD PTR [rax]
  41a52b:	mov    rsi,QWORD PTR [rcx]
  41a52e:	call   406060 <strncmp@plt>
  41a533:	test   eax,eax
  41a535:	jne    41a440 <fb_scope_table_remove@@Base+0x1b0>
  41a53b:	mov    r13,QWORD PTR [r13+0x0]
  41a53f:	mov    rbp,QWORD PTR [rbp+0x0]
  41a543:	inc    r15d
  41a546:	jne    41a500 <fb_scope_table_remove@@Base+0x270>
  41a548:	test   r13,r13
  41a54b:	jne    41a440 <fb_scope_table_remove@@Base+0x1b0>
  41a551:	jmp    41a55e <fb_scope_table_remove@@Base+0x2ce>
  41a553:	cmp    QWORD PTR [r13+0x0],0x0
  41a558:	jne    41a440 <fb_scope_table_remove@@Base+0x1b0>
  41a55e:	mov    rax,QWORD PTR [rsp+0x8]
  41a563:	mov    QWORD PTR [rax+r12*8],0x2
  41a56b:	mov    rax,QWORD PTR [rsp+0x28]
  41a570:	dec    QWORD PTR [rax+0x10]
  41a574:	mov    rax,QWORD PTR [rsp+0x18]
  41a579:	jmp    41a57d <fb_scope_table_remove@@Base+0x2ed>
  41a57b:	xor    eax,eax
  41a57d:	add    rsp,0x38
  41a581:	pop    rbx
  41a582:	pop    r12
  41a584:	pop    r13
  41a586:	pop    r14
  41a588:	pop    r15
  41a58a:	pop    rbp
  41a58b:	ret    
  41a58c:	nop    DWORD PTR [rax+0x0]

000000000041a590 <fb_scope_table_remove_item@@Base>:
  41a590:	mov    rsi,QWORD PTR [rsi]
  41a593:	xor    edx,edx
  41a595:	jmp    41a2a0 <fb_scope_table_remove@@Base+0x10>
  41a59a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041a5a0 <fb_scope_table_visit@@Base>:
  41a5a0:	push   r15
  41a5a2:	push   r14
  41a5a4:	push   r13
  41a5a6:	push   r12
  41a5a8:	push   rbx
  41a5a9:	mov    rax,QWORD PTR [rdi+0x18]
  41a5ad:	test   rax,rax
  41a5b0:	je     41a5f7 <fb_scope_table_visit@@Base+0x57>
  41a5b2:	mov    r14,rdx
  41a5b5:	mov    r15,rsi
  41a5b8:	mov    r12,rdi
  41a5bb:	mov    r13,QWORD PTR [rdi]
  41a5be:	xor    ebx,ebx
  41a5c0:	jmp    41a5d8 <fb_scope_table_visit@@Base+0x38>
  41a5c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a5cc:	nop    DWORD PTR [rax+0x0]
  41a5d0:	inc    rbx
  41a5d3:	cmp    rbx,rax
  41a5d6:	jae    41a5f7 <fb_scope_table_visit@@Base+0x57>
  41a5d8:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  41a5dd:	mov    rcx,rsi
  41a5e0:	or     rcx,0x2
  41a5e4:	cmp    rcx,0x2
  41a5e8:	je     41a5d0 <fb_scope_table_visit@@Base+0x30>
  41a5ea:	mov    rdi,r14
  41a5ed:	call   r15
  41a5f0:	mov    rax,QWORD PTR [r12+0x18]
  41a5f5:	jmp    41a5d0 <fb_scope_table_visit@@Base+0x30>
  41a5f7:	pop    rbx
  41a5f8:	pop    r12
  41a5fa:	pop    r13
  41a5fc:	pop    r14
  41a5fe:	pop    r15
  41a600:	ret    
  41a601:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a60b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041a610 <fb_schema_table_clear@@Base>:
  41a610:	push   rbx
  41a611:	mov    rbx,rdi
  41a614:	mov    rdi,QWORD PTR [rdi]
  41a617:	test   rdi,rdi
  41a61a:	je     41a621 <fb_schema_table_clear@@Base+0x11>
  41a61c:	call   406040 <free@plt>
  41a621:	vxorps xmm0,xmm0,xmm0
  41a625:	vmovups YMMWORD PTR [rbx],ymm0
  41a629:	pop    rbx
  41a62a:	vzeroupper 
  41a62d:	ret    
  41a62e:	xchg   ax,ax

000000000041a630 <fb_schema_table_destroy@@Base>:
  41a630:	push   r15
  41a632:	push   r14
  41a634:	push   r13
  41a636:	push   r12
  41a638:	push   rbx
  41a639:	mov    r12,rdi
  41a63c:	test   rsi,rsi
  41a63f:	je     41a687 <fb_schema_table_destroy@@Base+0x57>
  41a641:	mov    rax,QWORD PTR [r12+0x18]
  41a646:	test   rax,rax
  41a649:	je     41a687 <fb_schema_table_destroy@@Base+0x57>
  41a64b:	mov    r14,rdx
  41a64e:	mov    r15,rsi
  41a651:	mov    r13,QWORD PTR [r12]
  41a655:	xor    ebx,ebx
  41a657:	jmp    41a668 <fb_schema_table_destroy@@Base+0x38>
  41a659:	nop    DWORD PTR [rax+0x0]
  41a660:	inc    rbx
  41a663:	cmp    rbx,rax
  41a666:	jae    41a687 <fb_schema_table_destroy@@Base+0x57>
  41a668:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  41a66d:	mov    rcx,rsi
  41a670:	or     rcx,0x2
  41a674:	cmp    rcx,0x2
  41a678:	je     41a660 <fb_schema_table_destroy@@Base+0x30>
  41a67a:	mov    rdi,r14
  41a67d:	call   r15
  41a680:	mov    rax,QWORD PTR [r12+0x18]
  41a685:	jmp    41a660 <fb_schema_table_destroy@@Base+0x30>
  41a687:	mov    rdi,QWORD PTR [r12]
  41a68b:	test   rdi,rdi
  41a68e:	je     41a695 <fb_schema_table_destroy@@Base+0x65>
  41a690:	call   406040 <free@plt>
  41a695:	vxorps xmm0,xmm0,xmm0
  41a699:	vmovups YMMWORD PTR [r12],ymm0
  41a69f:	pop    rbx
  41a6a0:	pop    r12
  41a6a2:	pop    r13
  41a6a4:	pop    r14
  41a6a6:	pop    r15
  41a6a8:	vzeroupper 
  41a6ab:	ret    
  41a6ac:	nop    DWORD PTR [rax+0x0]

000000000041a6b0 <fb_schema_table_init@@Base>:
  41a6b0:	push   r14
  41a6b2:	push   rbx
  41a6b3:	push   rax
  41a6b4:	mov    r14,rdi
  41a6b7:	mov    eax,0x4
  41a6bc:	nop    DWORD PTR [rax+0x0]
  41a6c0:	mov    rbx,rax
  41a6c3:	imul   rcx,rax,0xb3
  41a6ca:	shr    rcx,0x8
  41a6ce:	add    rax,rax
  41a6d1:	cmp    rcx,rsi
  41a6d4:	jb     41a6c0 <fb_schema_table_init@@Base+0x10>
  41a6d6:	mov    esi,0x8
  41a6db:	mov    rdi,rbx
  41a6de:	call   406140 <calloc@plt>
  41a6e3:	mov    QWORD PTR [r14],rax
  41a6e6:	test   rax,rax
  41a6e9:	je     41a6fd <fb_schema_table_init@@Base+0x4d>
  41a6eb:	vxorps xmm0,xmm0,xmm0
  41a6ef:	vmovups XMMWORD PTR [r14+0x8],xmm0
  41a6f5:	mov    QWORD PTR [r14+0x18],rbx
  41a6f9:	xor    eax,eax
  41a6fb:	jmp    41a702 <fb_schema_table_init@@Base+0x52>
  41a6fd:	mov    eax,0xffffffff
  41a702:	add    rsp,0x8
  41a706:	pop    rbx
  41a707:	pop    r14
  41a709:	ret    
  41a70a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041a710 <fb_schema_table_resize@@Base>:
  41a710:	jmp    41a720 <fb_schema_table_resize@@Base+0x10>
  41a712:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a71c:	nop    DWORD PTR [rax+0x0]
  41a720:	push   r15
  41a722:	push   r14
  41a724:	push   r12
  41a726:	push   rbx
  41a727:	sub    rsp,0x28
  41a72b:	mov    r14,rdi
  41a72e:	mov    r12,QWORD PTR [rdi]
  41a731:	mov    rax,QWORD PTR [rdi+0x10]
  41a735:	cmp    rax,rsi
  41a738:	cmova  rsi,rax
  41a73c:	mov    eax,0x4
  41a741:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a74b:	nop    DWORD PTR [rax+rax*1+0x0]
  41a750:	mov    rbx,rax
  41a753:	imul   rcx,rax,0xb3
  41a75a:	shr    rcx,0x8
  41a75e:	add    rax,rax
  41a761:	cmp    rcx,rsi
  41a764:	jb     41a750 <fb_schema_table_resize@@Base+0x40>
  41a766:	mov    esi,0x8
  41a76b:	mov    rdi,rbx
  41a76e:	call   406140 <calloc@plt>
  41a773:	mov    QWORD PTR [rsp+0x8],rax
  41a778:	test   rax,rax
  41a77b:	je     41a7db <fb_schema_table_resize@@Base+0xcb>
  41a77d:	vxorps xmm0,xmm0,xmm0
  41a781:	vmovups XMMWORD PTR [rsp+0x10],xmm0
  41a787:	mov    QWORD PTR [rsp+0x20],rbx
  41a78c:	mov    rax,QWORD PTR [r14+0x18]
  41a790:	test   rax,rax
  41a793:	je     41a7e5 <fb_schema_table_resize@@Base+0xd5>
  41a795:	xor    ebx,ebx
  41a797:	lea    r15,[rsp+0x8]
  41a79c:	jmp    41a7a8 <fb_schema_table_resize@@Base+0x98>
  41a79e:	xchg   ax,ax
  41a7a0:	inc    rbx
  41a7a3:	cmp    rbx,rax
  41a7a6:	jae    41a7e2 <fb_schema_table_resize@@Base+0xd2>
  41a7a8:	mov    rcx,QWORD PTR [r12+rbx*8]
  41a7ac:	mov    rdx,rcx
  41a7af:	or     rdx,0x2
  41a7b3:	cmp    rdx,0x2
  41a7b7:	je     41a7a0 <fb_schema_table_resize@@Base+0x90>
  41a7b9:	mov    rsi,QWORD PTR [rcx+0xf8]
  41a7c0:	movsxd rdx,DWORD PTR [rcx+0x100]
  41a7c7:	mov    rdi,r15
  41a7ca:	mov    r8d,0x3
  41a7d0:	call   41a820 <fb_schema_table_insert@@Base+0x10>
  41a7d5:	mov    rax,QWORD PTR [r14+0x18]
  41a7d9:	jmp    41a7a0 <fb_schema_table_resize@@Base+0x90>
  41a7db:	mov    eax,0xffffffff
  41a7e0:	jmp    41a7ff <fb_schema_table_resize@@Base+0xef>
  41a7e2:	mov    r12,QWORD PTR [r14]
  41a7e5:	test   r12,r12
  41a7e8:	je     41a7f2 <fb_schema_table_resize@@Base+0xe2>
  41a7ea:	mov    rdi,r12
  41a7ed:	call   406040 <free@plt>
  41a7f2:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  41a7f8:	vmovups YMMWORD PTR [r14],ymm0
  41a7fd:	xor    eax,eax
  41a7ff:	add    rsp,0x28
  41a803:	pop    rbx
  41a804:	pop    r12
  41a806:	pop    r14
  41a808:	pop    r15
  41a80a:	vzeroupper 
  41a80d:	ret    
  41a80e:	xchg   ax,ax

000000000041a810 <fb_schema_table_insert@@Base>:
  41a810:	jmp    41a820 <fb_schema_table_insert@@Base+0x10>
  41a812:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41a81c:	nop    DWORD PTR [rax+0x0]
  41a820:	push   rbp
  41a821:	push   r15
  41a823:	push   r14
  41a825:	push   r13
  41a827:	push   r12
  41a829:	push   rbx
  41a82a:	sub    rsp,0x38
  41a82e:	mov    QWORD PTR [rsp+0x20],rsi
  41a833:	cmp    rcx,0x2
  41a837:	je     41a9a1 <fb_schema_table_insert@@Base+0x191>
  41a83d:	mov    r13,rcx
  41a840:	cmp    rcx,0x1
  41a844:	je     41a9c0 <fb_schema_table_insert@@Base+0x1b0>
  41a84a:	test   r13,r13
  41a84d:	je     41a9df <fb_schema_table_insert@@Base+0x1cf>
  41a853:	mov    ebp,r8d
  41a856:	mov    rbx,rdi
  41a859:	mov    rsi,QWORD PTR [rdi+0x10]
  41a85d:	mov    r15,QWORD PTR [rdi+0x18]
  41a861:	imul   rax,r15,0xb3
  41a868:	shr    rax,0x8
  41a86c:	cmp    rsi,rax
  41a86f:	mov    QWORD PTR [rsp+0x8],rdx
  41a874:	jb     41a892 <fb_schema_table_insert@@Base+0x82>
  41a876:	add    rsi,rsi
  41a879:	mov    rdi,rbx
  41a87c:	call   41a720 <fb_schema_table_resize@@Base+0x10>
  41a881:	test   eax,eax
  41a883:	jne    41a9fe <fb_schema_table_insert@@Base+0x1ee>
  41a889:	mov    r15,QWORD PTR [rbx+0x18]
  41a88d:	mov    rdx,QWORD PTR [rsp+0x8]
  41a892:	mov    r14,QWORD PTR [rbx]
  41a895:	dec    r15
  41a898:	lea    rcx,[rsp+0x30]
  41a89d:	mov    rdi,QWORD PTR [rsp+0x20]
  41a8a2:	mov    rsi,rdx
  41a8a5:	mov    edx,0x2f693b52
  41a8aa:	call   42b7d0 <cmetrohash64_1@@Base>
  41a8af:	mov    rcx,QWORD PTR [rsp+0x30]
  41a8b4:	mov    r12d,ecx
  41a8b7:	mov    eax,r15d
  41a8ba:	and    eax,ecx
  41a8bc:	mov    ecx,ebp
  41a8be:	or     ecx,0x1
  41a8c1:	cmp    ecx,0x3
  41a8c4:	jne    41a8ed <fb_schema_table_insert@@Base+0xdd>
  41a8c6:	inc    QWORD PTR [rbx+0x10]
  41a8ca:	nop    WORD PTR [rax+rax*1+0x0]
  41a8d0:	inc    r12
  41a8d3:	mov    rcx,QWORD PTR [r14+rax*8]
  41a8d7:	or     rcx,0x2
  41a8db:	cmp    rcx,0x2
  41a8df:	je     41a96c <fb_schema_table_insert@@Base+0x15c>
  41a8e5:	mov    rax,r12
  41a8e8:	and    rax,r15
  41a8eb:	jmp    41a8d0 <fb_schema_table_insert@@Base+0xc0>
  41a8ed:	mov    DWORD PTR [rsp+0x14],ebp
  41a8f1:	mov    QWORD PTR [rsp+0x28],rbx
  41a8f6:	mov    QWORD PTR [rsp+0x18],r13
  41a8fb:	inc    r12
  41a8fe:	xor    r13d,r13d
  41a901:	mov    rcx,QWORD PTR [rsp+0x8]
  41a906:	jmp    41a920 <fb_schema_table_insert@@Base+0x110>
  41a908:	nop    DWORD PTR [rax+rax*1+0x0]
  41a910:	test   r13,r13
  41a913:	cmove  r13,rbp
  41a917:	mov    rax,r12
  41a91a:	and    rax,r15
  41a91d:	inc    r12
  41a920:	lea    rbp,[r14+rax*8]
  41a924:	mov    rbx,QWORD PTR [r14+rax*8]
  41a928:	cmp    rbx,0x2
  41a92c:	je     41a910 <fb_schema_table_insert@@Base+0x100>
  41a92e:	test   rbx,rbx
  41a931:	je     41a974 <fb_schema_table_insert@@Base+0x164>
  41a933:	movsxd rax,DWORD PTR [rbx+0x100]
  41a93a:	cmp    rax,rcx
  41a93d:	jne    41a917 <fb_schema_table_insert@@Base+0x107>
  41a93f:	mov    rsi,QWORD PTR [rbx+0xf8]
  41a946:	mov    rdi,QWORD PTR [rsp+0x20]
  41a94b:	mov    rdx,QWORD PTR [rsp+0x8]
  41a950:	call   4061b0 <bcmp@plt>
  41a955:	mov    rcx,QWORD PTR [rsp+0x8]
  41a95a:	test   eax,eax
  41a95c:	jne    41a917 <fb_schema_table_insert@@Base+0x107>
  41a95e:	cmp    DWORD PTR [rsp+0x14],0x0
  41a963:	mov    r13,QWORD PTR [rsp+0x18]
  41a968:	jne    41a98f <fb_schema_table_insert@@Base+0x17f>
  41a96a:	jmp    41a98b <fb_schema_table_insert@@Base+0x17b>
  41a96c:	lea    rbp,[r14+rax*8]
  41a970:	xor    ebx,ebx
  41a972:	jmp    41a98b <fb_schema_table_insert@@Base+0x17b>
  41a974:	test   r13,r13
  41a977:	cmovne rbp,r13
  41a97b:	mov    rax,QWORD PTR [rsp+0x28]
  41a980:	inc    QWORD PTR [rax+0x10]
  41a984:	xor    ebx,ebx
  41a986:	mov    r13,QWORD PTR [rsp+0x18]
  41a98b:	mov    QWORD PTR [rbp+0x0],r13
  41a98f:	mov    rax,rbx
  41a992:	add    rsp,0x38
  41a996:	pop    rbx
  41a997:	pop    r12
  41a999:	pop    r13
  41a99b:	pop    r14
  41a99d:	pop    r15
  41a99f:	pop    rbp
  41a9a0:	ret    
  41a9a1:	lea    rdi,[rip+0x2accb]        # 445673 <str_set_deleted@@Base+0xd3>
  41a9a8:	lea    rsi,[rip+0x2ac10]        # 4455bf <str_set_deleted@@Base+0x1f>
  41a9af:	lea    rcx,[rip+0x2ac73]        # 445629 <str_set_deleted@@Base+0x89>
  41a9b6:	mov    edx,0x73
  41a9bb:	call   4060f0 <__assert_fail@plt>
  41a9c0:	lea    rdi,[rip+0x2acc3]        # 44568a <str_set_deleted@@Base+0xea>
  41a9c7:	lea    rsi,[rip+0x2abf1]        # 4455bf <str_set_deleted@@Base+0x1f>
  41a9ce:	lea    rcx,[rip+0x2ac54]        # 445629 <str_set_deleted@@Base+0x89>
  41a9d5:	mov    edx,0x74
  41a9da:	call   4060f0 <__assert_fail@plt>
  41a9df:	lea    rdi,[rip+0x2abc2]        # 4455a8 <str_set_deleted@@Base+0x8>
  41a9e6:	lea    rsi,[rip+0x2abd2]        # 4455bf <str_set_deleted@@Base+0x1f>
  41a9ed:	lea    rcx,[rip+0x2ac35]        # 445629 <str_set_deleted@@Base+0x89>
  41a9f4:	mov    edx,0x72
  41a9f9:	call   4060f0 <__assert_fail@plt>
  41a9fe:	mov    rax,QWORD PTR [rip+0x355f3]        # 44fff8 <stderr@GLIBC_2.2.5>
  41aa05:	mov    rdi,QWORD PTR [rax]
  41aa08:	lea    rsi,[rip+0x2ac90]        # 44569f <str_set_deleted@@Base+0xff>
  41aa0f:	lea    rdx,[rip+0x2aca0]        # 4456b6 <str_set_deleted@@Base+0x116>
  41aa16:	xor    eax,eax
  41aa18:	call   406170 <fprintf@plt>
  41aa1d:	mov    edi,0x1
  41aa22:	call   406210 <exit@plt>
  41aa27:	nop    WORD PTR [rax+rax*1+0x0]

000000000041aa30 <fb_schema_table_insert_item@@Base>:
  41aa30:	mov    r8d,edx
  41aa33:	mov    rcx,rsi
  41aa36:	mov    rsi,QWORD PTR [rsi+0xf8]
  41aa3d:	movsxd rdx,DWORD PTR [rcx+0x100]
  41aa44:	jmp    41a820 <fb_schema_table_insert@@Base+0x10>
  41aa49:	nop    DWORD PTR [rax+0x0]

000000000041aa50 <fb_schema_table_find@@Base>:
  41aa50:	push   rbp
  41aa51:	push   r15
  41aa53:	push   r14
  41aa55:	push   r13
  41aa57:	push   r12
  41aa59:	push   rbx
  41aa5a:	push   rax
  41aa5b:	mov    r12,QWORD PTR [rdi]
  41aa5e:	test   r12,r12
  41aa61:	je     41aacc <fb_schema_table_find@@Base+0x7c>
  41aa63:	mov    r15,rdx
  41aa66:	mov    r14,rsi
  41aa69:	mov    r13,QWORD PTR [rdi+0x18]
  41aa6d:	dec    r13
  41aa70:	mov    rcx,rsp
  41aa73:	mov    rdi,rsi
  41aa76:	mov    rsi,rdx
  41aa79:	mov    edx,0x2f693b52
  41aa7e:	call   42b7d0 <cmetrohash64_1@@Base>
  41aa83:	mov    ebp,DWORD PTR [rsp]
  41aa86:	jmp    41aa93 <fb_schema_table_find@@Base+0x43>
  41aa88:	nop    DWORD PTR [rax+rax*1+0x0]
  41aa90:	inc    rbp
  41aa93:	mov    rax,rbp
  41aa96:	and    rax,r13
  41aa99:	mov    rbx,QWORD PTR [r12+rax*8]
  41aa9d:	cmp    rbx,0x2
  41aaa1:	je     41aa90 <fb_schema_table_find@@Base+0x40>
  41aaa3:	test   rbx,rbx
  41aaa6:	je     41aacc <fb_schema_table_find@@Base+0x7c>
  41aaa8:	movsxd rax,DWORD PTR [rbx+0x100]
  41aaaf:	cmp    rax,r15
  41aab2:	jne    41aa90 <fb_schema_table_find@@Base+0x40>
  41aab4:	mov    rsi,QWORD PTR [rbx+0xf8]
  41aabb:	mov    rdi,r14
  41aabe:	mov    rdx,r15
  41aac1:	call   4061b0 <bcmp@plt>
  41aac6:	test   eax,eax
  41aac8:	jne    41aa90 <fb_schema_table_find@@Base+0x40>
  41aaca:	jmp    41aace <fb_schema_table_find@@Base+0x7e>
  41aacc:	xor    ebx,ebx
  41aace:	mov    rax,rbx
  41aad1:	add    rsp,0x8
  41aad5:	pop    rbx
  41aad6:	pop    r12
  41aad8:	pop    r13
  41aada:	pop    r14
  41aadc:	pop    r15
  41aade:	pop    rbp
  41aadf:	ret    

000000000041aae0 <fb_schema_table_find_item@@Base>:
  41aae0:	push   rbp
  41aae1:	push   r15
  41aae3:	push   r14
  41aae5:	push   r13
  41aae7:	push   r12
  41aae9:	push   rbx
  41aaea:	push   rax
  41aaeb:	mov    r12,QWORD PTR [rdi]
  41aaee:	test   r12,r12
  41aaf1:	je     41ab59 <fb_schema_table_find_item@@Base+0x79>
  41aaf3:	mov    r14,QWORD PTR [rsi+0xf8]
  41aafa:	movsxd r15,DWORD PTR [rsi+0x100]
  41ab01:	mov    r13,QWORD PTR [rdi+0x18]
  41ab05:	dec    r13
  41ab08:	mov    rcx,rsp
  41ab0b:	mov    rdi,r14
  41ab0e:	mov    rsi,r15
  41ab11:	mov    edx,0x2f693b52
  41ab16:	call   42b7d0 <cmetrohash64_1@@Base>
  41ab1b:	mov    ebp,DWORD PTR [rsp]
  41ab1e:	jmp    41ab23 <fb_schema_table_find_item@@Base+0x43>
  41ab20:	inc    rbp
  41ab23:	mov    rax,rbp
  41ab26:	and    rax,r13
  41ab29:	mov    rbx,QWORD PTR [r12+rax*8]
  41ab2d:	cmp    rbx,0x2
  41ab31:	je     41ab20 <fb_schema_table_find_item@@Base+0x40>
  41ab33:	test   rbx,rbx
  41ab36:	je     41ab59 <fb_schema_table_find_item@@Base+0x79>
  41ab38:	cmp    DWORD PTR [rbx+0x100],r15d
  41ab3f:	jne    41ab20 <fb_schema_table_find_item@@Base+0x40>
  41ab41:	mov    rsi,QWORD PTR [rbx+0xf8]
  41ab48:	mov    rdi,r14
  41ab4b:	mov    rdx,r15
  41ab4e:	call   4061b0 <bcmp@plt>
  41ab53:	test   eax,eax
  41ab55:	jne    41ab20 <fb_schema_table_find_item@@Base+0x40>
  41ab57:	jmp    41ab5b <fb_schema_table_find_item@@Base+0x7b>
  41ab59:	xor    ebx,ebx
  41ab5b:	mov    rax,rbx
  41ab5e:	add    rsp,0x8
  41ab62:	pop    rbx
  41ab63:	pop    r12
  41ab65:	pop    r13
  41ab67:	pop    r14
  41ab69:	pop    r15
  41ab6b:	pop    rbp
  41ab6c:	ret    
  41ab6d:	nop    DWORD PTR [rax]

000000000041ab70 <fb_schema_table_remove@@Base>:
  41ab70:	push   rbp
  41ab71:	push   r15
  41ab73:	push   r14
  41ab75:	push   r13
  41ab77:	push   r12
  41ab79:	push   rbx
  41ab7a:	sub    rsp,0x18
  41ab7e:	mov    r13,QWORD PTR [rdi]
  41ab81:	test   r13,r13
  41ab84:	je     41ac10 <fb_schema_table_remove@@Base+0xa0>
  41ab8a:	mov    r12,rdx
  41ab8d:	mov    QWORD PTR [rsp],rdi
  41ab91:	mov    rbp,QWORD PTR [rdi+0x18]
  41ab95:	dec    rbp
  41ab98:	lea    rcx,[rsp+0x10]
  41ab9d:	mov    QWORD PTR [rsp+0x8],rsi
  41aba2:	mov    rdi,rsi
  41aba5:	mov    rsi,rdx
  41aba8:	mov    edx,0x2f693b52
  41abad:	call   42b7d0 <cmetrohash64_1@@Base>
  41abb2:	mov    r15d,DWORD PTR [rsp+0x10]
  41abb7:	jmp    41abc3 <fb_schema_table_remove@@Base+0x53>
  41abb9:	nop    DWORD PTR [rax+0x0]
  41abc0:	inc    r15
  41abc3:	mov    r14,r15
  41abc6:	and    r14,rbp
  41abc9:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  41abce:	cmp    rbx,0x2
  41abd2:	je     41abc0 <fb_schema_table_remove@@Base+0x50>
  41abd4:	test   rbx,rbx
  41abd7:	je     41ac10 <fb_schema_table_remove@@Base+0xa0>
  41abd9:	movsxd rax,DWORD PTR [rbx+0x100]
  41abe0:	cmp    rax,r12
  41abe3:	jne    41abc0 <fb_schema_table_remove@@Base+0x50>
  41abe5:	mov    rsi,QWORD PTR [rbx+0xf8]
  41abec:	mov    rdi,QWORD PTR [rsp+0x8]
  41abf1:	mov    rdx,r12
  41abf4:	call   4061b0 <bcmp@plt>
  41abf9:	test   eax,eax
  41abfb:	jne    41abc0 <fb_schema_table_remove@@Base+0x50>
  41abfd:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  41ac06:	mov    rax,QWORD PTR [rsp]
  41ac0a:	dec    QWORD PTR [rax+0x10]
  41ac0e:	jmp    41ac12 <fb_schema_table_remove@@Base+0xa2>
  41ac10:	xor    ebx,ebx
  41ac12:	mov    rax,rbx
  41ac15:	add    rsp,0x18
  41ac19:	pop    rbx
  41ac1a:	pop    r12
  41ac1c:	pop    r13
  41ac1e:	pop    r14
  41ac20:	pop    r15
  41ac22:	pop    rbp
  41ac23:	ret    
  41ac24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ac2e:	xchg   ax,ax

000000000041ac30 <fb_schema_table_remove_item@@Base>:
  41ac30:	push   rbp
  41ac31:	push   r15
  41ac33:	push   r14
  41ac35:	push   r13
  41ac37:	push   r12
  41ac39:	push   rbx
  41ac3a:	sub    rsp,0x18
  41ac3e:	mov    r13,QWORD PTR [rdi]
  41ac41:	test   r13,r13
  41ac44:	je     41acdd <fb_schema_table_remove_item@@Base+0xad>
  41ac4a:	mov    rax,QWORD PTR [rsi+0xf8]
  41ac51:	movsxd r12,DWORD PTR [rsi+0x100]
  41ac58:	mov    QWORD PTR [rsp],rdi
  41ac5c:	mov    rbp,QWORD PTR [rdi+0x18]
  41ac60:	dec    rbp
  41ac63:	lea    rcx,[rsp+0x10]
  41ac68:	mov    QWORD PTR [rsp+0x8],rax
  41ac6d:	mov    rdi,rax
  41ac70:	mov    rsi,r12
  41ac73:	mov    edx,0x2f693b52
  41ac78:	call   42b7d0 <cmetrohash64_1@@Base>
  41ac7d:	mov    r15d,DWORD PTR [rsp+0x10]
  41ac82:	jmp    41ac93 <fb_schema_table_remove_item@@Base+0x63>
  41ac84:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ac8e:	xchg   ax,ax
  41ac90:	inc    r15
  41ac93:	mov    r14,r15
  41ac96:	and    r14,rbp
  41ac99:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  41ac9e:	cmp    rbx,0x2
  41aca2:	je     41ac90 <fb_schema_table_remove_item@@Base+0x60>
  41aca4:	test   rbx,rbx
  41aca7:	je     41acdd <fb_schema_table_remove_item@@Base+0xad>
  41aca9:	cmp    DWORD PTR [rbx+0x100],r12d
  41acb0:	jne    41ac90 <fb_schema_table_remove_item@@Base+0x60>
  41acb2:	mov    rsi,QWORD PTR [rbx+0xf8]
  41acb9:	mov    rdi,QWORD PTR [rsp+0x8]
  41acbe:	mov    rdx,r12
  41acc1:	call   4061b0 <bcmp@plt>
  41acc6:	test   eax,eax
  41acc8:	jne    41ac90 <fb_schema_table_remove_item@@Base+0x60>
  41acca:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  41acd3:	mov    rax,QWORD PTR [rsp]
  41acd7:	dec    QWORD PTR [rax+0x10]
  41acdb:	jmp    41acdf <fb_schema_table_remove_item@@Base+0xaf>
  41acdd:	xor    ebx,ebx
  41acdf:	mov    rax,rbx
  41ace2:	add    rsp,0x18
  41ace6:	pop    rbx
  41ace7:	pop    r12
  41ace9:	pop    r13
  41aceb:	pop    r14
  41aced:	pop    r15
  41acef:	pop    rbp
  41acf0:	ret    
  41acf1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41acfb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041ad00 <fb_schema_table_visit@@Base>:
  41ad00:	push   r15
  41ad02:	push   r14
  41ad04:	push   r13
  41ad06:	push   r12
  41ad08:	push   rbx
  41ad09:	mov    rax,QWORD PTR [rdi+0x18]
  41ad0d:	test   rax,rax
  41ad10:	je     41ad57 <fb_schema_table_visit@@Base+0x57>
  41ad12:	mov    r14,rdx
  41ad15:	mov    r15,rsi
  41ad18:	mov    r12,rdi
  41ad1b:	mov    r13,QWORD PTR [rdi]
  41ad1e:	xor    ebx,ebx
  41ad20:	jmp    41ad38 <fb_schema_table_visit@@Base+0x38>
  41ad22:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ad2c:	nop    DWORD PTR [rax+0x0]
  41ad30:	inc    rbx
  41ad33:	cmp    rbx,rax
  41ad36:	jae    41ad57 <fb_schema_table_visit@@Base+0x57>
  41ad38:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  41ad3d:	mov    rcx,rsi
  41ad40:	or     rcx,0x2
  41ad44:	cmp    rcx,0x2
  41ad48:	je     41ad30 <fb_schema_table_visit@@Base+0x30>
  41ad4a:	mov    rdi,r14
  41ad4d:	call   r15
  41ad50:	mov    rax,QWORD PTR [r12+0x18]
  41ad55:	jmp    41ad30 <fb_schema_table_visit@@Base+0x30>
  41ad57:	pop    rbx
  41ad58:	pop    r12
  41ad5a:	pop    r13
  41ad5c:	pop    r14
  41ad5e:	pop    r15
  41ad60:	ret    
  41ad61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ad6b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041ad70 <__flatcc_fb_copy_path_n@@Base>:
  41ad70:	push   r15
  41ad72:	push   r14
  41ad74:	push   rbx
  41ad75:	mov    r15,rsi
  41ad78:	mov    r14,rdi
  41ad7b:	xor    esi,esi
  41ad7d:	mov    rdx,r15
  41ad80:	call   406120 <memchr@plt>
  41ad85:	mov    rbx,rax
  41ad88:	sub    rbx,r14
  41ad8b:	test   rax,rax
  41ad8e:	cmove  rbx,r15
  41ad92:	lea    rdi,[rbx+0x1]
  41ad96:	call   4061a0 <malloc@plt>
  41ad9b:	mov    r15,rax
  41ad9e:	test   rax,rax
  41ada1:	je     41adb6 <__flatcc_fb_copy_path_n@@Base+0x46>
  41ada3:	mov    rdi,r15
  41ada6:	mov    rsi,r14
  41ada9:	mov    rdx,rbx
  41adac:	call   406190 <memcpy@plt>
  41adb1:	mov    BYTE PTR [r15+rbx*1],0x0
  41adb6:	mov    rax,r15
  41adb9:	pop    rbx
  41adba:	pop    r14
  41adbc:	pop    r15
  41adbe:	ret    
  41adbf:	nop

000000000041adc0 <__flatcc_fb_copy_path@@Base>:
  41adc0:	push   r15
  41adc2:	push   r14
  41adc4:	push   rbx
  41adc5:	mov    r14,rdi
  41adc8:	call   4060d0 <strlen@plt>
  41adcd:	mov    r15,rax
  41add0:	lea    rdi,[rax+0x1]
  41add4:	call   4061a0 <malloc@plt>
  41add9:	mov    rbx,rax
  41addc:	test   rax,rax
  41addf:	je     41adf4 <__flatcc_fb_copy_path@@Base+0x34>
  41ade1:	mov    rdi,rbx
  41ade4:	mov    rsi,r14
  41ade7:	mov    rdx,r15
  41adea:	call   406190 <memcpy@plt>
  41adef:	mov    BYTE PTR [rbx+r15*1],0x0
  41adf4:	mov    rax,rbx
  41adf7:	pop    rbx
  41adf8:	pop    r14
  41adfa:	pop    r15
  41adfc:	ret    
  41adfd:	nop    DWORD PTR [rax]

000000000041ae00 <__flatcc_fb_chomp@@Base>:
  41ae00:	push   r15
  41ae02:	push   r14
  41ae04:	push   r12
  41ae06:	push   rbx
  41ae07:	push   rax
  41ae08:	mov    r14,rdx
  41ae0b:	mov    rbx,rsi
  41ae0e:	mov    r12,rdi
  41ae11:	test   rdx,rdx
  41ae14:	je     41ae54 <__flatcc_fb_chomp@@Base+0x54>
  41ae16:	mov    rdi,r14
  41ae19:	call   4060d0 <strlen@plt>
  41ae1e:	mov    r15,rax
  41ae21:	cmp    r15,rbx
  41ae24:	jae    41ae45 <__flatcc_fb_chomp@@Base+0x45>
  41ae26:	add    r12,rbx
  41ae29:	sub    r12,r15
  41ae2c:	mov    rdi,r12
  41ae2f:	mov    rsi,r14
  41ae32:	mov    rdx,r15
  41ae35:	call   406060 <strncmp@plt>
  41ae3a:	xor    ecx,ecx
  41ae3c:	test   eax,eax
  41ae3e:	cmove  rcx,r15
  41ae42:	sub    rbx,rcx
  41ae45:	mov    rax,rbx
  41ae48:	add    rsp,0x8
  41ae4c:	pop    rbx
  41ae4d:	pop    r12
  41ae4f:	pop    r14
  41ae51:	pop    r15
  41ae53:	ret    
  41ae54:	xor    r15d,r15d
  41ae57:	cmp    r15,rbx
  41ae5a:	jb     41ae26 <__flatcc_fb_chomp@@Base+0x26>
  41ae5c:	jmp    41ae45 <__flatcc_fb_chomp@@Base+0x45>
  41ae5e:	xchg   ax,ax

000000000041ae60 <__flatcc_fb_create_join_path_n@@Base>:
  41ae60:	push   rbp
  41ae61:	push   r15
  41ae63:	push   r14
  41ae65:	push   r13
  41ae67:	push   r12
  41ae69:	push   rbx
  41ae6a:	sub    rsp,0x28
  41ae6e:	mov    ebp,r9d
  41ae71:	mov    r14,rcx
  41ae74:	mov    r15,rdx
  41ae77:	mov    rbx,rsi
  41ae7a:	mov    r12,rdi
  41ae7d:	test   r8,r8
  41ae80:	mov    QWORD PTR [rsp+0x20],r8
  41ae85:	je     41aeb5 <__flatcc_fb_create_join_path_n@@Base+0x55>
  41ae87:	mov    rdi,r8
  41ae8a:	call   4060d0 <strlen@plt>
  41ae8f:	test   r12,r12
  41ae92:	je     41aebc <__flatcc_fb_create_join_path_n@@Base+0x5c>
  41ae94:	test   r14,r14
  41ae97:	je     41aebe <__flatcc_fb_create_join_path_n@@Base+0x5e>
  41ae99:	mov    cl,BYTE PTR [r15]
  41ae9c:	cmp    cl,0x2f
  41ae9f:	je     41aebc <__flatcc_fb_create_join_path_n@@Base+0x5c>
  41aea1:	cmp    cl,0x5c
  41aea4:	je     41aebc <__flatcc_fb_create_join_path_n@@Base+0x5c>
  41aea6:	cmp    r14,0x2
  41aeaa:	jb     41aebe <__flatcc_fb_create_join_path_n@@Base+0x5e>
  41aeac:	cmp    BYTE PTR [r15+0x1],0x3a
  41aeb1:	je     41aebc <__flatcc_fb_create_join_path_n@@Base+0x5c>
  41aeb3:	jmp    41aebe <__flatcc_fb_create_join_path_n@@Base+0x5e>
  41aeb5:	xor    eax,eax
  41aeb7:	test   r12,r12
  41aeba:	jne    41ae94 <__flatcc_fb_create_join_path_n@@Base+0x34>
  41aebc:	xor    ebx,ebx
  41aebe:	test   ebp,ebp
  41aec0:	mov    QWORD PTR [rsp+0x18],r15
  41aec5:	je     41aedb <__flatcc_fb_create_join_path_n@@Base+0x7b>
  41aec7:	test   rbx,rbx
  41aeca:	je     41aedb <__flatcc_fb_create_join_path_n@@Base+0x7b>
  41aecc:	mov    cl,BYTE PTR [rbx+r12*1-0x1]
  41aed1:	cmp    cl,0x5c
  41aed4:	je     41aedb <__flatcc_fb_create_join_path_n@@Base+0x7b>
  41aed6:	cmp    cl,0x2f
  41aed9:	jne    41aedd <__flatcc_fb_create_join_path_n@@Base+0x7d>
  41aedb:	xor    ebp,ebp
  41aedd:	mov    r15,r12
  41aee0:	movsxd rdi,ebp
  41aee3:	mov    QWORD PTR [rsp+0x8],r14
  41aee8:	add    r14,rbx
  41aeeb:	add    r14,0x1
  41aeef:	mov    QWORD PTR [rsp+0x10],rax
  41aef4:	lea    r13,[r14+rax*1]
  41aef8:	add    rdi,r13
  41aefb:	call   4061a0 <malloc@plt>
  41af00:	mov    r12,rax
  41af03:	test   rax,rax
  41af06:	je     41af68 <__flatcc_fb_create_join_path_n@@Base+0x108>
  41af08:	mov    rdi,r12
  41af0b:	mov    rsi,r15
  41af0e:	mov    rdx,rbx
  41af11:	call   406190 <memcpy@plt>
  41af16:	test   ebp,ebp
  41af18:	je     41af2e <__flatcc_fb_create_join_path_n@@Base+0xce>
  41af1a:	mov    BYTE PTR [r12+rbx*1],0x2f
  41af1f:	inc    rbx
  41af22:	mov    rdx,QWORD PTR [rsp+0x8]
  41af27:	mov    rbp,QWORD PTR [rsp+0x10]
  41af2c:	jmp    41af40 <__flatcc_fb_create_join_path_n@@Base+0xe0>
  41af2e:	mov    rdx,QWORD PTR [rsp+0x8]
  41af33:	lea    r14,[rbx+rdx*1]
  41af37:	mov    rbp,QWORD PTR [rsp+0x10]
  41af3c:	lea    r13,[r14+rbp*1]
  41af40:	add    rbx,r12
  41af43:	mov    rdi,rbx
  41af46:	mov    rsi,QWORD PTR [rsp+0x18]
  41af4b:	call   406190 <memcpy@plt>
  41af50:	add    r14,r12
  41af53:	mov    rdi,r14
  41af56:	mov    rsi,QWORD PTR [rsp+0x20]
  41af5b:	mov    rdx,rbp
  41af5e:	call   406190 <memcpy@plt>
  41af63:	mov    BYTE PTR [r12+r13*1],0x0
  41af68:	mov    rax,r12
  41af6b:	add    rsp,0x28
  41af6f:	pop    rbx
  41af70:	pop    r12
  41af72:	pop    r13
  41af74:	pop    r14
  41af76:	pop    r15
  41af78:	pop    rbp
  41af79:	ret    
  41af7a:	nop    WORD PTR [rax+rax*1+0x0]

000000000041af80 <__flatcc_fb_create_join_path@@Base>:
  41af80:	push   rbp
  41af81:	push   r15
  41af83:	push   r14
  41af85:	push   r12
  41af87:	push   rbx
  41af88:	mov    r14d,ecx
  41af8b:	mov    r15,rdx
  41af8e:	mov    rbp,rsi
  41af91:	mov    rbx,rdi
  41af94:	test   rdi,rdi
  41af97:	je     41afb6 <__flatcc_fb_create_join_path@@Base+0x36>
  41af99:	mov    rdi,rbx
  41af9c:	call   4060d0 <strlen@plt>
  41afa1:	mov    r12,rax
  41afa4:	test   rbp,rbp
  41afa7:	je     41afbe <__flatcc_fb_create_join_path@@Base+0x3e>
  41afa9:	mov    rdi,rbp
  41afac:	call   4060d0 <strlen@plt>
  41afb1:	mov    rcx,rax
  41afb4:	jmp    41afc0 <__flatcc_fb_create_join_path@@Base+0x40>
  41afb6:	xor    r12d,r12d
  41afb9:	test   rbp,rbp
  41afbc:	jne    41afa9 <__flatcc_fb_create_join_path@@Base+0x29>
  41afbe:	xor    ecx,ecx
  41afc0:	mov    rdi,rbx
  41afc3:	mov    rsi,r12
  41afc6:	mov    rdx,rbp
  41afc9:	mov    r8,r15
  41afcc:	mov    r9d,r14d
  41afcf:	pop    rbx
  41afd0:	pop    r12
  41afd2:	pop    r14
  41afd4:	pop    r15
  41afd6:	pop    rbp
  41afd7:	jmp    41ae60 <__flatcc_fb_create_join_path_n@@Base>
  41afdc:	nop    DWORD PTR [rax+0x0]

000000000041afe0 <__flatcc_fb_create_path_ext_n@@Base>:
  41afe0:	push   rbp
  41afe1:	push   r15
  41afe3:	push   r14
  41afe5:	push   r13
  41afe7:	push   r12
  41afe9:	push   rbx
  41afea:	push   rax
  41afeb:	mov    r14,rdx
  41afee:	mov    r13,rsi
  41aff1:	mov    r15,rdi
  41aff4:	test   rdx,rdx
  41aff7:	je     41b006 <__flatcc_fb_create_path_ext_n@@Base+0x26>
  41aff9:	mov    rdi,r14
  41affc:	call   4060d0 <strlen@plt>
  41b001:	mov    r12,rax
  41b004:	jmp    41b009 <__flatcc_fb_create_path_ext_n@@Base+0x29>
  41b006:	xor    r12d,r12d
  41b009:	lea    rdi,[r12+r13*1]
  41b00d:	add    rdi,0x1
  41b011:	call   4061a0 <malloc@plt>
  41b016:	mov    rbx,rax
  41b019:	test   rax,rax
  41b01c:	je     41b045 <__flatcc_fb_create_path_ext_n@@Base+0x65>
  41b01e:	lea    rbp,[r12+r13*1]
  41b022:	mov    rdi,rbx
  41b025:	mov    rsi,r15
  41b028:	mov    rdx,r13
  41b02b:	call   406190 <memcpy@plt>
  41b030:	mov    rdi,rbx
  41b033:	add    rdi,r13
  41b036:	mov    rsi,r14
  41b039:	mov    rdx,r12
  41b03c:	call   406190 <memcpy@plt>
  41b041:	mov    BYTE PTR [rbx+rbp*1],0x0
  41b045:	mov    rax,rbx
  41b048:	add    rsp,0x8
  41b04c:	pop    rbx
  41b04d:	pop    r12
  41b04f:	pop    r13
  41b051:	pop    r14
  41b053:	pop    r15
  41b055:	pop    rbp
  41b056:	ret    
  41b057:	nop    WORD PTR [rax+rax*1+0x0]

000000000041b060 <__flatcc_fb_create_path_ext@@Base>:
  41b060:	push   rbp
  41b061:	push   r15
  41b063:	push   r14
  41b065:	push   r13
  41b067:	push   r12
  41b069:	push   rbx
  41b06a:	push   rax
  41b06b:	mov    r14,rsi
  41b06e:	mov    r15,rdi
  41b071:	test   rdi,rdi
  41b074:	je     41b093 <__flatcc_fb_create_path_ext@@Base+0x33>
  41b076:	mov    rdi,r15
  41b079:	call   4060d0 <strlen@plt>
  41b07e:	mov    r12,rax
  41b081:	test   r14,r14
  41b084:	je     41b09b <__flatcc_fb_create_path_ext@@Base+0x3b>
  41b086:	mov    rdi,r14
  41b089:	call   4060d0 <strlen@plt>
  41b08e:	mov    r13,rax
  41b091:	jmp    41b09e <__flatcc_fb_create_path_ext@@Base+0x3e>
  41b093:	xor    r12d,r12d
  41b096:	test   r14,r14
  41b099:	jne    41b086 <__flatcc_fb_create_path_ext@@Base+0x26>
  41b09b:	xor    r13d,r13d
  41b09e:	lea    rdi,[r12+r13*1]
  41b0a2:	add    rdi,0x1
  41b0a6:	call   4061a0 <malloc@plt>
  41b0ab:	mov    rbx,rax
  41b0ae:	test   rax,rax
  41b0b1:	je     41b0da <__flatcc_fb_create_path_ext@@Base+0x7a>
  41b0b3:	lea    rbp,[r12+r13*1]
  41b0b7:	mov    rdi,rbx
  41b0ba:	mov    rsi,r15
  41b0bd:	mov    rdx,r12
  41b0c0:	call   406190 <memcpy@plt>
  41b0c5:	mov    rdi,rbx
  41b0c8:	add    rdi,r12
  41b0cb:	mov    rsi,r14
  41b0ce:	mov    rdx,r13
  41b0d1:	call   406190 <memcpy@plt>
  41b0d6:	mov    BYTE PTR [rbx+rbp*1],0x0
  41b0da:	mov    rax,rbx
  41b0dd:	add    rsp,0x8
  41b0e1:	pop    rbx
  41b0e2:	pop    r12
  41b0e4:	pop    r13
  41b0e6:	pop    r14
  41b0e8:	pop    r15
  41b0ea:	pop    rbp
  41b0eb:	ret    
  41b0ec:	nop    DWORD PTR [rax+0x0]

000000000041b0f0 <__flatcc_fb_create_make_path_n@@Base>:
  41b0f0:	push   rbp
  41b0f1:	push   r15
  41b0f3:	push   r14
  41b0f5:	push   r13
  41b0f7:	push   r12
  41b0f9:	push   rbx
  41b0fa:	push   rax
  41b0fb:	mov    r14,rsi
  41b0fe:	mov    rbp,rdi
  41b101:	test   rsi,rsi
  41b104:	je     41b142 <__flatcc_fb_create_make_path_n@@Base+0x52>
  41b106:	cmp    r14,0x1
  41b10a:	jne    41b190 <__flatcc_fb_create_make_path_n@@Base+0xa0>
  41b110:	mov    bl,BYTE PTR [rbp+0x0]
  41b113:	cmp    bl,0x5c
  41b116:	je     41b11d <__flatcc_fb_create_make_path_n@@Base+0x2d>
  41b118:	cmp    bl,0x20
  41b11b:	jne    41b142 <__flatcc_fb_create_make_path_n@@Base+0x52>
  41b11d:	mov    edi,0x3
  41b122:	call   4061a0 <malloc@plt>
  41b127:	test   rax,rax
  41b12a:	je     41b2ce <__flatcc_fb_create_make_path_n@@Base+0x1de>
  41b130:	mov    r15,rax
  41b133:	mov    BYTE PTR [rax],0x5c
  41b136:	mov    BYTE PTR [rax+0x1],bl
  41b139:	mov    BYTE PTR [rax+0x2],0x0
  41b13d:	jmp    41b391 <__flatcc_fb_create_make_path_n@@Base+0x2a1>
  41b142:	xor    r15d,r15d
  41b145:	mov    rdi,rbp
  41b148:	xor    esi,esi
  41b14a:	mov    rdx,r14
  41b14d:	call   406120 <memchr@plt>
  41b152:	mov    r12,rax
  41b155:	sub    r12,rbp
  41b158:	test   rax,rax
  41b15b:	cmove  r12,r14
  41b15f:	lea    rdi,[r12+0x1]
  41b164:	call   4061a0 <malloc@plt>
  41b169:	test   rax,rax
  41b16c:	je     41b391 <__flatcc_fb_create_make_path_n@@Base+0x2a1>
  41b172:	mov    r14,rax
  41b175:	mov    rdi,rax
  41b178:	mov    rsi,rbp
  41b17b:	mov    rdx,r12
  41b17e:	call   406190 <memcpy@plt>
  41b183:	mov    BYTE PTR [r14+r12*1],0x0
  41b188:	mov    r15,r14
  41b18b:	jmp    41b391 <__flatcc_fb_create_make_path_n@@Base+0x2a1>
  41b190:	lea    r12,[r14-0x1]
  41b194:	mov    r13b,BYTE PTR [rbp+0x0]
  41b198:	lea    rax,[r14-0x2]
  41b19c:	mov    r8d,r12d
  41b19f:	and    r8d,0x3
  41b1a3:	cmp    rax,0x3
  41b1a7:	jae    41b1b6 <__flatcc_fb_create_make_path_n@@Base+0xc6>
  41b1a9:	xor    ecx,ecx
  41b1ab:	mov    eax,r13d
  41b1ae:	mov    rsi,r14
  41b1b1:	jmp    41b25c <__flatcc_fb_create_make_path_n@@Base+0x16c>
  41b1b6:	mov    rdi,r12
  41b1b9:	sub    rdi,r8
  41b1bc:	xor    ecx,ecx
  41b1be:	mov    eax,r13d
  41b1c1:	mov    rsi,r14
  41b1c4:	jmp    41b1e1 <__flatcc_fb_create_make_path_n@@Base+0xf1>
  41b1c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b1d0:	xor    esi,esi
  41b1d2:	cmp    dl,0x20
  41b1d5:	sete   sil
  41b1d9:	add    rsi,rbx
  41b1dc:	cmp    rdi,rcx
  41b1df:	je     41b25c <__flatcc_fb_create_make_path_n@@Base+0x16c>
  41b1e1:	movzx  edx,BYTE PTR [rbp+rcx*1+0x1]
  41b1e6:	cmp    al,0x5c
  41b1e8:	jne    41b1f5 <__flatcc_fb_create_make_path_n@@Base+0x105>
  41b1ea:	xor    ebx,ebx
  41b1ec:	cmp    dl,0x20
  41b1ef:	sete   bl
  41b1f2:	add    rsi,rbx
  41b1f5:	xor    ebx,ebx
  41b1f7:	cmp    al,0x20
  41b1f9:	sete   bl
  41b1fc:	add    rbx,rsi
  41b1ff:	movzx  eax,BYTE PTR [rbp+rcx*1+0x2]
  41b204:	cmp    dl,0x5c
  41b207:	jne    41b214 <__flatcc_fb_create_make_path_n@@Base+0x124>
  41b209:	xor    esi,esi
  41b20b:	cmp    al,0x20
  41b20d:	sete   sil
  41b211:	add    rbx,rsi
  41b214:	xor    esi,esi
  41b216:	cmp    dl,0x20
  41b219:	sete   sil
  41b21d:	add    rsi,rbx
  41b220:	movzx  edx,BYTE PTR [rbp+rcx*1+0x3]
  41b225:	cmp    al,0x5c
  41b227:	jne    41b234 <__flatcc_fb_create_make_path_n@@Base+0x144>
  41b229:	xor    ebx,ebx
  41b22b:	cmp    dl,0x20
  41b22e:	sete   bl
  41b231:	add    rsi,rbx
  41b234:	xor    ebx,ebx
  41b236:	cmp    al,0x20
  41b238:	sete   bl
  41b23b:	add    rbx,rsi
  41b23e:	movzx  eax,BYTE PTR [rbp+rcx*1+0x4]
  41b243:	add    rcx,0x4
  41b247:	cmp    dl,0x5c
  41b24a:	jne    41b1d0 <__flatcc_fb_create_make_path_n@@Base+0xe0>
  41b24c:	xor    esi,esi
  41b24e:	cmp    al,0x20
  41b250:	sete   sil
  41b254:	add    rbx,rsi
  41b257:	jmp    41b1d0 <__flatcc_fb_create_make_path_n@@Base+0xe0>
  41b25c:	mov    ebx,eax
  41b25e:	test   r8,r8
  41b261:	je     41b29b <__flatcc_fb_create_make_path_n@@Base+0x1ab>
  41b263:	add    rcx,rbp
  41b266:	add    rcx,0x1
  41b26a:	xor    edx,edx
  41b26c:	jmp    41b285 <__flatcc_fb_create_make_path_n@@Base+0x195>
  41b26e:	xchg   ax,ax
  41b270:	xor    edi,edi
  41b272:	cmp    al,0x20
  41b274:	sete   dil
  41b278:	add    rsi,rdi
  41b27b:	inc    rdx
  41b27e:	mov    eax,ebx
  41b280:	cmp    r8,rdx
  41b283:	je     41b29b <__flatcc_fb_create_make_path_n@@Base+0x1ab>
  41b285:	movzx  ebx,BYTE PTR [rcx+rdx*1]
  41b289:	cmp    al,0x5c
  41b28b:	jne    41b270 <__flatcc_fb_create_make_path_n@@Base+0x180>
  41b28d:	xor    edi,edi
  41b28f:	cmp    bl,0x20
  41b292:	sete   dil
  41b296:	add    rsi,rdi
  41b299:	jmp    41b270 <__flatcc_fb_create_make_path_n@@Base+0x180>
  41b29b:	xor    eax,eax
  41b29d:	cmp    bl,0x20
  41b2a0:	sete   al
  41b2a3:	lea    rdi,[rsi+rax*1]
  41b2a7:	add    rdi,0x1
  41b2ab:	call   4061a0 <malloc@plt>
  41b2b0:	test   rax,rax
  41b2b3:	je     41b2ce <__flatcc_fb_create_make_path_n@@Base+0x1de>
  41b2b5:	mov    r15,rax
  41b2b8:	and    r12d,0x1
  41b2bc:	cmp    r14,0x2
  41b2c0:	jne    41b2d6 <__flatcc_fb_create_make_path_n@@Base+0x1e6>
  41b2c2:	mov    ecx,0x1
  41b2c7:	xor    eax,eax
  41b2c9:	jmp    41b34d <__flatcc_fb_create_make_path_n@@Base+0x25d>
  41b2ce:	xor    r15d,r15d
  41b2d1:	jmp    41b391 <__flatcc_fb_create_make_path_n@@Base+0x2a1>
  41b2d6:	sub    r14,r12
  41b2d9:	mov    ecx,0x1
  41b2de:	xor    eax,eax
  41b2e0:	cmp    r13b,0x20
  41b2e4:	jne    41b319 <__flatcc_fb_create_make_path_n@@Base+0x229>
  41b2e6:	jmp    41b326 <__flatcc_fb_create_make_path_n@@Base+0x236>
  41b2e8:	nop    DWORD PTR [rax+rax*1+0x0]
  41b2f0:	mov    BYTE PTR [r15+rax*1+0x1],0x5c
  41b2f6:	add    rax,0x2
  41b2fa:	mov    rdx,rax
  41b2fd:	mov    BYTE PTR [r15+rdx*1],bl
  41b301:	lea    rax,[rdx+0x1]
  41b305:	mov    r13b,BYTE PTR [rbp+rcx*1+0x1]
  41b30a:	add    rcx,0x2
  41b30e:	cmp    r14,rcx
  41b311:	je     41b34d <__flatcc_fb_create_make_path_n@@Base+0x25d>
  41b313:	cmp    r13b,0x20
  41b317:	je     41b326 <__flatcc_fb_create_make_path_n@@Base+0x236>
  41b319:	cmp    r13b,0x5c
  41b31d:	jne    41b32e <__flatcc_fb_create_make_path_n@@Base+0x23e>
  41b31f:	cmp    BYTE PTR [rbp+rcx*1+0x0],0x20
  41b324:	jne    41b32e <__flatcc_fb_create_make_path_n@@Base+0x23e>
  41b326:	mov    BYTE PTR [r15+rax*1],0x5c
  41b32b:	inc    rax
  41b32e:	mov    BYTE PTR [r15+rax*1],r13b
  41b332:	mov    bl,BYTE PTR [rbp+rcx*1+0x0]
  41b336:	cmp    bl,0x20
  41b339:	je     41b2f0 <__flatcc_fb_create_make_path_n@@Base+0x200>
  41b33b:	lea    rdx,[rax+0x1]
  41b33f:	cmp    bl,0x5c
  41b342:	jne    41b2fd <__flatcc_fb_create_make_path_n@@Base+0x20d>
  41b344:	cmp    BYTE PTR [rbp+rcx*1+0x1],0x20
  41b349:	je     41b2f0 <__flatcc_fb_create_make_path_n@@Base+0x200>
  41b34b:	jmp    41b2fd <__flatcc_fb_create_make_path_n@@Base+0x20d>
  41b34d:	test   r12,r12
  41b350:	je     41b375 <__flatcc_fb_create_make_path_n@@Base+0x285>
  41b352:	cmp    r13b,0x5c
  41b356:	je     41b3a3 <__flatcc_fb_create_make_path_n@@Base+0x2b3>
  41b358:	cmp    r13b,0x20
  41b35c:	jne    41b366 <__flatcc_fb_create_make_path_n@@Base+0x276>
  41b35e:	mov    BYTE PTR [r15+rax*1],0x5c
  41b363:	inc    rax
  41b366:	mov    BYTE PTR [r15+rax*1],r13b
  41b36a:	mov    r13b,BYTE PTR [rbp+rcx*1+0x0]
  41b36f:	mov    rdx,rax
  41b372:	inc    rax
  41b375:	cmp    r13b,0x20
  41b379:	jne    41b387 <__flatcc_fb_create_make_path_n@@Base+0x297>
  41b37b:	add    rdx,0x2
  41b37f:	mov    BYTE PTR [r15+rax*1],0x5c
  41b384:	mov    rax,rdx
  41b387:	mov    BYTE PTR [r15+rax*1],r13b
  41b38b:	mov    BYTE PTR [r15+rax*1+0x1],0x0
  41b391:	mov    rax,r15
  41b394:	add    rsp,0x8
  41b398:	pop    rbx
  41b399:	pop    r12
  41b39b:	pop    r13
  41b39d:	pop    r14
  41b39f:	pop    r15
  41b3a1:	pop    rbp
  41b3a2:	ret    
  41b3a3:	cmp    BYTE PTR [rbp+rcx*1+0x0],0x20
  41b3a8:	je     41b35e <__flatcc_fb_create_make_path_n@@Base+0x26e>
  41b3aa:	jmp    41b366 <__flatcc_fb_create_make_path_n@@Base+0x276>
  41b3ac:	nop    DWORD PTR [rax+0x0]

000000000041b3b0 <__flatcc_fb_create_make_path@@Base>:
  41b3b0:	push   rbx
  41b3b1:	mov    rbx,rdi
  41b3b4:	call   4060d0 <strlen@plt>
  41b3b9:	mov    rdi,rbx
  41b3bc:	mov    rsi,rax
  41b3bf:	pop    rbx
  41b3c0:	jmp    41b0f0 <__flatcc_fb_create_make_path_n@@Base>
  41b3c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b3cf:	nop

000000000041b3d0 <__flatcc_fb_find_basename@@Base>:
  41b3d0:	test   rsi,rsi
  41b3d3:	je     41b3f1 <__flatcc_fb_find_basename@@Base+0x21>
  41b3d5:	movzx  eax,BYTE PTR [rdi+rsi*1-0x1]
  41b3da:	dec    rsi
  41b3dd:	cmp    al,0x5c
  41b3df:	je     41b3e5 <__flatcc_fb_find_basename@@Base+0x15>
  41b3e1:	cmp    al,0x2f
  41b3e3:	jne    41b3d0 <__flatcc_fb_find_basename@@Base>
  41b3e5:	lea    rax,[rdi+rsi*1]
  41b3e9:	add    rax,0x1
  41b3ed:	sub    rax,rdi
  41b3f0:	ret    
  41b3f1:	mov    rax,rdi
  41b3f4:	sub    rax,rdi
  41b3f7:	ret    
  41b3f8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041b400 <__flatcc_fb_create_basename@@Base>:
  41b400:	push   r15
  41b402:	push   r14
  41b404:	push   r12
  41b406:	push   rbx
  41b407:	push   rax
  41b408:	mov    r15,rdx
  41b40b:	mov    rbx,rdi
  41b40e:	mov    rax,rsi
  41b411:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b41b:	nop    DWORD PTR [rax+rax*1+0x0]
  41b420:	test   rax,rax
  41b423:	je     41b441 <__flatcc_fb_create_basename@@Base+0x41>
  41b425:	movzx  ecx,BYTE PTR [rbx+rax*1-0x1]
  41b42a:	dec    rax
  41b42d:	cmp    cl,0x5c
  41b430:	je     41b437 <__flatcc_fb_create_basename@@Base+0x37>
  41b432:	cmp    cl,0x2f
  41b435:	jne    41b420 <__flatcc_fb_create_basename@@Base+0x20>
  41b437:	lea    r14,[rbx+rax*1]
  41b43b:	add    r14,0x1
  41b43f:	jmp    41b444 <__flatcc_fb_create_basename@@Base+0x44>
  41b441:	mov    r14,rbx
  41b444:	sub    rbx,r14
  41b447:	add    rbx,rsi
  41b44a:	test   r15,r15
  41b44d:	je     41b4af <__flatcc_fb_create_basename@@Base+0xaf>
  41b44f:	mov    rdi,r15
  41b452:	call   4060d0 <strlen@plt>
  41b457:	mov    r12,rax
  41b45a:	cmp    r12,rbx
  41b45d:	jae    41b47c <__flatcc_fb_create_basename@@Base+0x7c>
  41b45f:	lea    rdi,[r14+rbx*1]
  41b463:	sub    rdi,r12
  41b466:	mov    rsi,r15
  41b469:	mov    rdx,r12
  41b46c:	call   406060 <strncmp@plt>
  41b471:	xor    ecx,ecx
  41b473:	test   eax,eax
  41b475:	cmove  rcx,r12
  41b479:	sub    rbx,rcx
  41b47c:	lea    rdi,[rbx+0x1]
  41b480:	call   4061a0 <malloc@plt>
  41b485:	mov    r15,rax
  41b488:	test   rax,rax
  41b48b:	je     41b4a0 <__flatcc_fb_create_basename@@Base+0xa0>
  41b48d:	mov    rdi,r15
  41b490:	mov    rsi,r14
  41b493:	mov    rdx,rbx
  41b496:	call   406190 <memcpy@plt>
  41b49b:	mov    BYTE PTR [r15+rbx*1],0x0
  41b4a0:	mov    rax,r15
  41b4a3:	add    rsp,0x8
  41b4a7:	pop    rbx
  41b4a8:	pop    r12
  41b4aa:	pop    r14
  41b4ac:	pop    r15
  41b4ae:	ret    
  41b4af:	xor    r12d,r12d
  41b4b2:	cmp    r12,rbx
  41b4b5:	jb     41b45f <__flatcc_fb_create_basename@@Base+0x5f>
  41b4b7:	jmp    41b47c <__flatcc_fb_create_basename@@Base+0x7c>
  41b4b9:	nop    DWORD PTR [rax+0x0]

000000000041b4c0 <__flatcc_fb_read_file@@Base>:
  41b4c0:	push   r15
  41b4c2:	push   r14
  41b4c4:	push   r13
  41b4c6:	push   r12
  41b4c8:	push   rbx
  41b4c9:	sub    rsp,0x10
  41b4cd:	mov    rbx,rsi
  41b4d0:	test   rdx,rdx
  41b4d3:	lea    r12,[rsp+0x8]
  41b4d8:	cmovne r12,rdx
  41b4dc:	lea    rsi,[rip+0x2a26d]        # 445750 <fb_schema_table_deleted@@Base+0x8>
  41b4e3:	call   4061e0 <fopen@plt>
  41b4e8:	test   rax,rax
  41b4eb:	je     41b584 <__flatcc_fb_read_file@@Base+0xc4>
  41b4f1:	mov    r15,rax
  41b4f4:	mov    rdi,rax
  41b4f7:	xor    esi,esi
  41b4f9:	mov    edx,0x2
  41b4fe:	call   4061c0 <fseek@plt>
  41b503:	mov    rdi,r15
  41b506:	call   406180 <ftell@plt>
  41b50b:	mov    r14,rax
  41b50e:	mov    QWORD PTR [r12],rax
  41b512:	test   rbx,rbx
  41b515:	je     41b51c <__flatcc_fb_read_file@@Base+0x5c>
  41b517:	cmp    r14,rbx
  41b51a:	ja     41b57a <__flatcc_fb_read_file@@Base+0xba>
  41b51c:	mov    rdi,r15
  41b51f:	call   4060e0 <rewind@plt>
  41b524:	test   r14,r14
  41b527:	mov    edi,0x1
  41b52c:	cmovne rdi,r14
  41b530:	call   4061a0 <malloc@plt>
  41b535:	test   rax,rax
  41b538:	je     41b57a <__flatcc_fb_read_file@@Base+0xba>
  41b53a:	mov    r13,rax
  41b53d:	xor    ecx,ecx
  41b53f:	nop
  41b540:	mov    rbx,rcx
  41b543:	lea    rdi,[rcx+r13*1]
  41b547:	mov    rdx,r14
  41b54a:	sub    rdx,rcx
  41b54d:	mov    esi,0x1
  41b552:	mov    rcx,r15
  41b555:	call   4060b0 <fread_unlocked@plt>
  41b55a:	lea    rcx,[rax+rbx*1]
  41b55e:	test   rax,rax
  41b561:	jne    41b540 <__flatcc_fb_read_file@@Base+0x80>
  41b563:	mov    rdi,r15
  41b566:	call   4060c0 <fclose@plt>
  41b56b:	cmp    r14,rbx
  41b56e:	je     41b58a <__flatcc_fb_read_file@@Base+0xca>
  41b570:	mov    rdi,r13
  41b573:	call   406040 <free@plt>
  41b578:	jmp    41b587 <__flatcc_fb_read_file@@Base+0xc7>
  41b57a:	mov    rdi,r15
  41b57d:	call   4060c0 <fclose@plt>
  41b582:	jmp    41b587 <__flatcc_fb_read_file@@Base+0xc7>
  41b584:	xor    r14d,r14d
  41b587:	xor    r13d,r13d
  41b58a:	mov    QWORD PTR [r12],r14
  41b58e:	mov    rax,r13
  41b591:	add    rsp,0x10
  41b595:	pop    rbx
  41b596:	pop    r12
  41b598:	pop    r13
  41b59a:	pop    r14
  41b59c:	pop    r15
  41b59e:	ret    
  41b59f:	nop

000000000041b5a0 <__flatcc_fb_default_error_out@@Base>:
  41b5a0:	mov    rdi,rsi
  41b5a3:	movsxd rdx,edx
  41b5a6:	mov    rax,QWORD PTR [rip+0x34a4b]        # 44fff8 <stderr@GLIBC_2.2.5>
  41b5ad:	mov    rcx,QWORD PTR [rax]
  41b5b0:	mov    esi,0x1
  41b5b5:	jmp    406220 <fwrite@plt>
  41b5ba:	nop    WORD PTR [rax+rax*1+0x0]

000000000041b5c0 <__flatcc_fb_print_error@@Base>:
  41b5c0:	push   rbp
  41b5c1:	push   rbx
  41b5c2:	sub    rsp,0x198
  41b5c9:	mov    rbp,rdx
  41b5cc:	mov    rdx,rsi
  41b5cf:	mov    rbx,rdi
  41b5d2:	test   al,al
  41b5d4:	je     41b615 <__flatcc_fb_print_error@@Base+0x55>
  41b5d6:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  41b5dc:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  41b5e2:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  41b5e8:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  41b5f1:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  41b5fa:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  41b603:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  41b60c:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  41b615:	mov    QWORD PTR [rsp+0x30],rbp
  41b61a:	mov    QWORD PTR [rsp+0x38],rcx
  41b61f:	mov    QWORD PTR [rsp+0x40],r8
  41b624:	mov    QWORD PTR [rsp+0x48],r9
  41b629:	movabs rax,0x3000000010
  41b633:	mov    QWORD PTR [rsp],rax
  41b637:	lea    rax,[rsp+0x1b0]
  41b63f:	mov    QWORD PTR [rsp+0x8],rax
  41b644:	lea    rax,[rsp+0x20]
  41b649:	mov    QWORD PTR [rsp+0x10],rax
  41b64e:	lea    rdi,[rsp+0xd0]
  41b656:	mov    rcx,rsp
  41b659:	mov    esi,0xc8
  41b65e:	call   4060a0 <vsnprintf@plt>
  41b663:	mov    ebp,eax
  41b665:	cmp    eax,0xc8
  41b66a:	jl     41b684 <__flatcc_fb_print_error@@Base+0xc4>
  41b66c:	mov    BYTE PTR [rsp+0x197],0x0
  41b674:	mov    DWORD PTR [rsp+0x193],0xa2e2e2e
  41b67f:	mov    ebp,0xc7
  41b684:	mov    rdi,QWORD PTR [rbx+0x18]
  41b688:	lea    rsi,[rsp+0xd0]
  41b690:	mov    edx,ebp
  41b692:	call   QWORD PTR [rbx+0x10]
  41b695:	mov    eax,ebp
  41b697:	add    rsp,0x198
  41b69e:	pop    rbx
  41b69f:	pop    rbp
  41b6a0:	ret    
  41b6a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b6ab:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041b6b0 <__flatcc_error_find_file_of_token@@Base>:
  41b6b0:	lea    rax,[rip+0x12e98]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41b6b7:	test   rdi,rdi
  41b6ba:	jne    41b6c8 <__flatcc_error_find_file_of_token@@Base+0x18>
  41b6bc:	ret    
  41b6bd:	nop    DWORD PTR [rax]
  41b6c0:	mov    rdi,QWORD PTR [rdi]
  41b6c3:	test   rdi,rdi
  41b6c6:	je     41b6bc <__flatcc_error_find_file_of_token@@Base+0xc>
  41b6c8:	cmp    QWORD PTR [rdi+0x28],rsi
  41b6cc:	ja     41b6c0 <__flatcc_error_find_file_of_token@@Base+0x10>
  41b6ce:	cmp    QWORD PTR [rdi+0x30],rsi
  41b6d2:	jbe    41b6c0 <__flatcc_error_find_file_of_token@@Base+0x10>
  41b6d4:	mov    rax,QWORD PTR [rdi+0x318]
  41b6db:	ret    
  41b6dc:	nop    DWORD PTR [rax+0x0]

000000000041b6e0 <__flatcc_error_report@@Base>:
  41b6e0:	push   r14
  41b6e2:	push   rbx
  41b6e3:	push   rax
  41b6e4:	mov    eax,r9d
  41b6e7:	mov    r11,r8
  41b6ea:	mov    rbx,rcx
  41b6ed:	mov    r10,rdx
  41b6f0:	mov    r14,rdi
  41b6f3:	test   rsi,rsi
  41b6f6:	je     41b703 <__flatcc_error_report@@Base+0x23>
  41b6f8:	test   r11,r11
  41b6fb:	jne    41b703 <__flatcc_error_report@@Base+0x23>
  41b6fd:	mov    r11,QWORD PTR [rsi]
  41b700:	mov    eax,DWORD PTR [rsi+0x8]
  41b703:	test   r10,r10
  41b706:	lea    rdx,[rip+0x12e42]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41b70d:	cmove  r10,rdx
  41b711:	xor    r9d,r9d
  41b714:	test   r11,r11
  41b717:	cmove  r11,rdx
  41b71b:	cmovne r9d,eax
  41b71f:	test   rsi,rsi
  41b722:	je     41b784 <__flatcc_error_report@@Base+0xa4>
  41b724:	test   rbx,rbx
  41b727:	jne    41b784 <__flatcc_error_report@@Base+0xa4>
  41b729:	test   r14,r14
  41b72c:	je     41b75b <__flatcc_error_report@@Base+0x7b>
  41b72e:	mov    rax,r14
  41b731:	cmp    QWORD PTR [rax+0x28],rsi
  41b735:	jbe    41b74e <__flatcc_error_report@@Base+0x6e>
  41b737:	nop    WORD PTR [rax+rax*1+0x0]
  41b740:	mov    rax,QWORD PTR [rax]
  41b743:	test   rax,rax
  41b746:	je     41b75b <__flatcc_error_report@@Base+0x7b>
  41b748:	cmp    QWORD PTR [rax+0x28],rsi
  41b74c:	ja     41b740 <__flatcc_error_report@@Base+0x60>
  41b74e:	cmp    QWORD PTR [rax+0x30],rsi
  41b752:	jbe    41b740 <__flatcc_error_report@@Base+0x60>
  41b754:	mov    rdx,QWORD PTR [rax+0x318]
  41b75b:	mov    rcx,QWORD PTR [rsi+0x10]
  41b75f:	mov    r8,QWORD PTR [rsi+0x18]
  41b763:	lea    rsi,[rip+0x2a486]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41b76a:	mov    rdi,r14
  41b76d:	mov    eax,0x0
  41b772:	push   r10
  41b774:	push   r11
  41b776:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41b77b:	add    rsp,0x10
  41b77f:	jmp    41b8e0 <__flatcc_error_report@@Base+0x200>
  41b784:	test   rsi,rsi
  41b787:	je     41b7d4 <__flatcc_error_report@@Base+0xf4>
  41b789:	test   rbx,rbx
  41b78c:	je     41b7d4 <__flatcc_error_report@@Base+0xf4>
  41b78e:	test   r14,r14
  41b791:	je     41b88d <__flatcc_error_report@@Base+0x1ad>
  41b797:	lea    rax,[rip+0x12db1]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41b79e:	mov    rcx,r14
  41b7a1:	cmp    QWORD PTR [rcx+0x28],rsi
  41b7a5:	jbe    41b7c2 <__flatcc_error_report@@Base+0xe2>
  41b7a7:	nop    WORD PTR [rax+rax*1+0x0]
  41b7b0:	mov    rcx,QWORD PTR [rcx]
  41b7b3:	test   rcx,rcx
  41b7b6:	je     41b864 <__flatcc_error_report@@Base+0x184>
  41b7bc:	cmp    QWORD PTR [rcx+0x28],rsi
  41b7c0:	ja     41b7b0 <__flatcc_error_report@@Base+0xd0>
  41b7c2:	cmp    QWORD PTR [rcx+0x30],rsi
  41b7c6:	jbe    41b7b0 <__flatcc_error_report@@Base+0xd0>
  41b7c8:	mov    rdx,QWORD PTR [rcx+0x318]
  41b7cf:	jmp    41b867 <__flatcc_error_report@@Base+0x187>
  41b7d4:	or     rsi,rbx
  41b7d7:	je     41b84b <__flatcc_error_report@@Base+0x16b>
  41b7d9:	test   rbx,rbx
  41b7dc:	je     41b8ef <__flatcc_error_report@@Base+0x20f>
  41b7e2:	lea    rcx,[rip+0x12d66]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41b7e9:	test   r14,r14
  41b7ec:	je     41b81b <__flatcc_error_report@@Base+0x13b>
  41b7ee:	mov    rax,r14
  41b7f1:	cmp    QWORD PTR [rax+0x28],rbx
  41b7f5:	jbe    41b80e <__flatcc_error_report@@Base+0x12e>
  41b7f7:	nop    WORD PTR [rax+rax*1+0x0]
  41b800:	mov    rax,QWORD PTR [rax]
  41b803:	test   rax,rax
  41b806:	je     41b81b <__flatcc_error_report@@Base+0x13b>
  41b808:	cmp    QWORD PTR [rax+0x28],rbx
  41b80c:	ja     41b800 <__flatcc_error_report@@Base+0x120>
  41b80e:	cmp    QWORD PTR [rax+0x30],rbx
  41b812:	jbe    41b800 <__flatcc_error_report@@Base+0x120>
  41b814:	mov    rcx,QWORD PTR [rax+0x318]
  41b81b:	mov    r8,QWORD PTR [rbx+0x10]
  41b81f:	mov    r9,QWORD PTR [rbx+0x18]
  41b823:	mov    r11d,DWORD PTR [rbx+0x8]
  41b827:	lea    rsi,[rip+0x2a41f]        # 445c4d <fb_schema_table_deleted@@Base+0x505>
  41b82e:	mov    rdi,r14
  41b831:	mov    rdx,r10
  41b834:	mov    eax,0x0
  41b839:	push   QWORD PTR [rbx]
  41b83b:	push   r11
  41b83d:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41b842:	add    rsp,0x10
  41b846:	jmp    41b8e0 <__flatcc_error_report@@Base+0x200>
  41b84b:	lea    rsi,[rip+0x2a3f0]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41b852:	mov    rdi,r14
  41b855:	mov    rdx,r10
  41b858:	xor    eax,eax
  41b85a:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41b85f:	jmp    41b8e0 <__flatcc_error_report@@Base+0x200>
  41b864:	mov    rdx,rax
  41b867:	mov    rcx,r14
  41b86a:	cmp    QWORD PTR [rcx+0x28],rbx
  41b86e:	jbe    41b87e <__flatcc_error_report@@Base+0x19e>
  41b870:	mov    rcx,QWORD PTR [rcx]
  41b873:	test   rcx,rcx
  41b876:	je     41b897 <__flatcc_error_report@@Base+0x1b7>
  41b878:	cmp    QWORD PTR [rcx+0x28],rbx
  41b87c:	ja     41b870 <__flatcc_error_report@@Base+0x190>
  41b87e:	cmp    QWORD PTR [rcx+0x30],rbx
  41b882:	jbe    41b870 <__flatcc_error_report@@Base+0x190>
  41b884:	mov    rax,QWORD PTR [rcx+0x318]
  41b88b:	jmp    41b897 <__flatcc_error_report@@Base+0x1b7>
  41b88d:	lea    rdx,[rip+0x12cbb]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41b894:	mov    rax,rdx
  41b897:	mov    rcx,QWORD PTR [rsi+0x10]
  41b89b:	mov    r8,QWORD PTR [rsi+0x18]
  41b89f:	vmovups xmm0,XMMWORD PTR [rbx+0x10]
  41b8a4:	mov    esi,DWORD PTR [rbx+0x8]
  41b8a7:	mov    rdi,QWORD PTR [rbx]
  41b8aa:	sub    rsp,0x40
  41b8ae:	mov    QWORD PTR [rsp+0x30],rdi
  41b8b3:	vmovups XMMWORD PTR [rsp+0x18],xmm0
  41b8b9:	mov    DWORD PTR [rsp+0x28],esi
  41b8bd:	mov    QWORD PTR [rsp+0x10],rax
  41b8c2:	mov    QWORD PTR [rsp+0x8],r10
  41b8c7:	mov    QWORD PTR [rsp],r11
  41b8cb:	lea    rsi,[rip+0x2a33d]        # 445c0f <fb_schema_table_deleted@@Base+0x4c7>
  41b8d2:	mov    rdi,r14
  41b8d5:	xor    eax,eax
  41b8d7:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41b8dc:	add    rsp,0x40
  41b8e0:	inc    DWORD PTR [r14+0xd0]
  41b8e7:	add    rsp,0x8
  41b8eb:	pop    rbx
  41b8ec:	pop    r14
  41b8ee:	ret    
  41b8ef:	lea    rsi,[rip+0x2a376]        # 445c6c <fb_schema_table_deleted@@Base+0x524>
  41b8f6:	mov    rdi,r14
  41b8f9:	xor    eax,eax
  41b8fb:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41b900:	jmp    41b8e0 <__flatcc_error_report@@Base+0x200>
  41b902:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b90c:	nop    DWORD PTR [rax+0x0]

000000000041b910 <error_ref_sym@@Base>:
  41b910:	push   rbp
  41b911:	push   r15
  41b913:	push   r14
  41b915:	push   r13
  41b917:	push   r12
  41b919:	push   rbx
  41b91a:	sub    rsp,0x48
  41b91e:	mov    r12,rcx
  41b921:	mov    r14,rsi
  41b924:	test   rsi,rsi
  41b927:	je     41b996 <error_ref_sym@@Base+0x86>
  41b929:	mov    QWORD PTR [rsp],rdi
  41b92d:	mov    QWORD PTR [rsp+0x8],rdx
  41b932:	mov    ebp,0x32
  41b937:	xor    eax,eax
  41b939:	mov    r13,r14
  41b93c:	nop    DWORD PTR [rax+0x0]
  41b940:	mov    r15d,ebp
  41b943:	mov    rcx,QWORD PTR [r13+0x8]
  41b947:	mov    edx,DWORD PTR [rcx+0x8]
  41b94a:	cmp    ebp,edx
  41b94c:	cmovle edx,ebp
  41b94f:	movsxd rbx,eax
  41b952:	lea    rdi,[rsp+rbx*1+0x10]
  41b957:	mov    rsi,QWORD PTR [rcx]
  41b95a:	movsxd rbp,edx
  41b95d:	mov    rdx,rbp
  41b960:	call   406190 <memcpy@plt>
  41b965:	add    ebx,ebp
  41b967:	movsxd rax,ebx
  41b96a:	mov    BYTE PTR [rsp+rax*1+0x10],0x2e
  41b96f:	not    ebp
  41b971:	add    ebp,r15d
  41b974:	inc    rax
  41b977:	mov    r13,QWORD PTR [r13+0x0]
  41b97b:	test   r13,r13
  41b97e:	je     41b984 <error_ref_sym@@Base+0x74>
  41b980:	test   ebp,ebp
  41b982:	jg     41b940 <error_ref_sym@@Base+0x30>
  41b984:	mov    BYTE PTR [rsp+rax*1+0x10],0x0
  41b989:	test   ebp,ebp
  41b98b:	jle    41b99f <error_ref_sym@@Base+0x8f>
  41b98d:	not    ebx
  41b98f:	sar    ebx,0x1f
  41b992:	add    ebx,eax
  41b994:	jmp    41b9ac <error_ref_sym@@Base+0x9c>
  41b996:	mov    BYTE PTR [rsp+0x10],0x0
  41b99b:	xor    ebx,ebx
  41b99d:	jmp    41b9b5 <error_ref_sym@@Base+0xa5>
  41b99f:	mov    DWORD PTR [rsp+0x3f],0x2e2e2e
  41b9a7:	mov    ebx,0x32
  41b9ac:	mov    rdx,QWORD PTR [rsp+0x8]
  41b9b1:	mov    rdi,QWORD PTR [rsp]
  41b9b5:	mov    rsi,QWORD PTR [r14+0x8]
  41b9b9:	test   r12,r12
  41b9bc:	je     41b9c5 <error_ref_sym@@Base+0xb5>
  41b9be:	mov    rcx,QWORD PTR [r12+0x8]
  41b9c3:	jmp    41b9c7 <error_ref_sym@@Base+0xb7>
  41b9c5:	xor    ecx,ecx
  41b9c7:	lea    r8,[rsp+0x10]
  41b9cc:	mov    r9d,ebx
  41b9cf:	call   41b6e0 <__flatcc_error_report@@Base>
  41b9d4:	add    rsp,0x48
  41b9d8:	pop    rbx
  41b9d9:	pop    r12
  41b9db:	pop    r13
  41b9dd:	pop    r14
  41b9df:	pop    r15
  41b9e1:	pop    rbp
  41b9e2:	ret    
  41b9e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41b9ed:	nop    DWORD PTR [rax]

000000000041b9f0 <__flatcc_fb_init_parser@@Base>:
  41b9f0:	push   rbp
  41b9f1:	push   r15
  41b9f3:	push   r14
  41b9f5:	push   r13
  41b9f7:	push   r12
  41b9f9:	push   rbx
  41b9fa:	sub    rsp,0x18
  41b9fe:	mov    r15,r9
  41ba01:	mov    rbx,r8
  41ba04:	mov    rbp,rcx
  41ba07:	mov    r12,rdx
  41ba0a:	mov    r14,rsi
  41ba0d:	mov    r13,rdi
  41ba10:	mov    edx,0x358
  41ba15:	xor    esi,esi
  41ba17:	call   406100 <memset@plt>
  41ba1c:	test   rbp,rbp
  41ba1f:	je     41ba2b <__flatcc_fb_init_parser@@Base+0x3b>
  41ba21:	mov    QWORD PTR [r13+0x10],rbp
  41ba25:	mov    QWORD PTR [r13+0x18],rbx
  41ba29:	jmp    41ba36 <__flatcc_fb_init_parser@@Base+0x46>
  41ba2b:	lea    rax,[rip+0xfffffffffffffb6e]        # 41b5a0 <__flatcc_fb_default_error_out@@Base>
  41ba32:	mov    QWORD PTR [r13+0x10],rax
  41ba36:	lea    rdi,[r13+0xe8]
  41ba3d:	test   r14,r14
  41ba40:	je     41ba51 <__flatcc_fb_init_parser@@Base+0x61>
  41ba42:	mov    edx,0x110
  41ba47:	mov    rsi,r14
  41ba4a:	call   406190 <memcpy@plt>
  41ba4f:	jmp    41ba56 <__flatcc_fb_init_parser@@Base+0x66>
  41ba51:	call   406480 <flatcc_init_options@@Base>
  41ba56:	lea    rax,[r13+0x268]
  41ba5d:	test   r15,r15
  41ba60:	cmovne rax,r15
  41ba64:	mov    QWORD PTR [r13+0x260],rax
  41ba6b:	mov    eax,DWORD PTR [r13+0x12c]
  41ba72:	lea    rdx,[rip+0x2a215]        # 445c8e <fb_schema_table_deleted@@Base+0x546>
  41ba79:	cmp    eax,0x8
  41ba7c:	ja     41bc7e <__flatcc_fb_init_parser@@Base+0x28e>
  41ba82:	mov    ecx,0x114
  41ba87:	bt     ecx,eax
  41ba8a:	jae    41bc7e <__flatcc_fb_init_parser@@Base+0x28e>
  41ba90:	mov    eax,DWORD PTR [r13+0x130]
  41ba97:	lea    rdx,[rip+0x2a228]        # 445cc6 <fb_schema_table_deleted@@Base+0x57e>
  41ba9e:	cmp    eax,0x8
  41baa1:	ja     41bc7e <__flatcc_fb_init_parser@@Base+0x28e>
  41baa7:	mov    ecx,0x114
  41baac:	bt     ecx,eax
  41baaf:	jae    41bc7e <__flatcc_fb_init_parser@@Base+0x28e>
  41bab5:	test   r12,r12
  41bab8:	lea    r15,[rip+0x2a240]        # 445cff <fb_schema_table_deleted@@Base+0x5b7>
  41babf:	cmovne r15,r12
  41bac3:	mov    rdi,r15
  41bac6:	call   4060d0 <strlen@plt>
  41bacb:	mov    rbx,rax
  41bace:	mov    rdx,QWORD PTR [r14+0x68]
  41bad2:	mov    rdi,r15
  41bad5:	mov    rsi,rax
  41bad8:	call   41b400 <__flatcc_fb_create_basename@@Base>
  41badd:	mov    QWORD PTR [r13+0x308],rax
  41bae4:	test   rax,rax
  41bae7:	je     41bcae <__flatcc_fb_init_parser@@Base+0x2be>
  41baed:	mov    rbp,rax
  41baf0:	mov    QWORD PTR [rsp+0x8],rbx
  41baf5:	mov    QWORD PTR [rsp+0x10],r14
  41bafa:	mov    rdi,rax
  41bafd:	call   4060d0 <strlen@plt>
  41bb02:	mov    rbx,rax
  41bb05:	mov    rdi,rbp
  41bb08:	mov    rsi,rax
  41bb0b:	call   41ad70 <__flatcc_fb_copy_path_n@@Base>
  41bb10:	test   rax,rax
  41bb13:	je     41bcae <__flatcc_fb_init_parser@@Base+0x2be>
  41bb19:	mov    rbp,rax
  41bb1c:	test   rbx,rbx
  41bb1f:	je     41bb55 <__flatcc_fb_init_parser@@Base+0x165>
  41bb21:	xor    r12d,r12d
  41bb24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41bb2e:	xchg   ax,ax
  41bb30:	movsx  r14,BYTE PTR [rbp+r12*1+0x0]
  41bb36:	test   r14,r14
  41bb39:	je     41bb55 <__flatcc_fb_init_parser@@Base+0x165>
  41bb3b:	call   406030 <__ctype_toupper_loc@plt>
  41bb40:	mov    rax,QWORD PTR [rax]
  41bb43:	movzx  eax,BYTE PTR [rax+r14*4]
  41bb48:	mov    BYTE PTR [rbp+r12*1+0x0],al
  41bb4d:	inc    r12
  41bb50:	cmp    rbx,r12
  41bb53:	jne    41bb30 <__flatcc_fb_init_parser@@Base+0x140>
  41bb55:	mov    QWORD PTR [r13+0x310],rbp
  41bb5c:	mov    QWORD PTR [r13+0x2f0],rbp
  41bb63:	mov    DWORD PTR [r13+0x2f8],ebx
  41bb6a:	lea    rdx,[rip+0x129de]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41bb71:	mov    rdi,r15
  41bb74:	mov    rsi,QWORD PTR [rsp+0x8]
  41bb79:	call   41b400 <__flatcc_fb_create_basename@@Base>
  41bb7e:	mov    QWORD PTR [r13+0x318],rax
  41bb85:	test   rax,rax
  41bb88:	je     41bcae <__flatcc_fb_init_parser@@Base+0x2be>
  41bb8e:	mov    rax,QWORD PTR [rsp+0x10]
  41bb93:	mov    rdi,QWORD PTR [rax+0xe0]
  41bb9a:	test   rdi,rdi
  41bb9d:	je     41bbb2 <__flatcc_fb_init_parser@@Base+0x1c2>
  41bb9f:	mov    QWORD PTR [r13+0x2d8],rdi
  41bba6:	call   4060d0 <strlen@plt>
  41bbab:	mov    DWORD PTR [r13+0x2e0],eax
  41bbb2:	mov    rdi,QWORD PTR [r13+0x260]
  41bbb9:	xor    r14d,r14d
  41bbbc:	xor    esi,esi
  41bbbe:	xor    edx,edx
  41bbc0:	call   419e20 <fb_scope_table_find@@Base>
  41bbc5:	mov    r15,rax
  41bbc8:	test   rax,rax
  41bbcb:	jne    41bc43 <__flatcc_fb_init_parser@@Base+0x253>
  41bbcd:	mov    r15,QWORD PTR [r13+0x60]
  41bbd1:	lea    rax,[r15+0x40]
  41bbd5:	cmp    rax,QWORD PTR [r13+0x50]
  41bbd9:	jbe    41bc15 <__flatcc_fb_init_parser@@Base+0x225>
  41bbdb:	mov    edi,0x10000
  41bbe0:	mov    esi,0x1
  41bbe5:	call   406140 <calloc@plt>
  41bbea:	test   rax,rax
  41bbed:	je     41bcae <__flatcc_fb_init_parser@@Base+0x2be>
  41bbf3:	mov    rcx,QWORD PTR [r13+0x58]
  41bbf7:	mov    QWORD PTR [rax],rcx
  41bbfa:	mov    QWORD PTR [r13+0x58],rax
  41bbfe:	lea    r15,[rax+0x10]
  41bc02:	mov    QWORD PTR [r13+0x60],r15
  41bc06:	lea    rcx,[rax+0x10000]
  41bc0d:	mov    QWORD PTR [r13+0x50],rcx
  41bc11:	add    rax,0x50
  41bc15:	mov    QWORD PTR [r13+0x60],rax
  41bc19:	mov    QWORD PTR [r15],0x0
  41bc20:	vmovups xmm0,XMMWORD PTR [r13+0x2d8]
  41bc29:	vmovups XMMWORD PTR [r15+0x28],xmm0
  41bc2f:	mov    rdi,QWORD PTR [r13+0x260]
  41bc36:	mov    rsi,r15
  41bc39:	mov    edx,0x1
  41bc3e:	call   419e10 <fb_scope_table_insert_item@@Base>
  41bc43:	mov    QWORD PTR [r13+0x340],r15
  41bc4a:	mov    rdi,QWORD PTR [r13+0x260]
  41bc51:	xor    esi,esi
  41bc53:	xor    edx,edx
  41bc55:	call   419e20 <fb_scope_table_find@@Base>
  41bc5a:	cmp    r15,rax
  41bc5d:	je     41bc9c <__flatcc_fb_init_parser@@Base+0x2ac>
  41bc5f:	lea    rdi,[rip+0x2a09e]        # 445d04 <fb_schema_table_deleted@@Base+0x5bc>
  41bc66:	lea    rsi,[rip+0x2a0ea]        # 445d57 <fb_schema_table_deleted@@Base+0x60f>
  41bc6d:	lea    rcx,[rip+0x2a143]        # 445db7 <fb_schema_table_deleted@@Base+0x66f>
  41bc74:	mov    edx,0x533
  41bc79:	call   4060f0 <__assert_fail@plt>
  41bc7e:	lea    rsi,[rip+0x29fbd]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41bc85:	mov    rdi,r13
  41bc88:	xor    eax,eax
  41bc8a:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41bc8f:	inc    DWORD PTR [r13+0xd0]
  41bc96:	mov    r14d,0xffffffff
  41bc9c:	mov    eax,r14d
  41bc9f:	add    rsp,0x18
  41bca3:	pop    rbx
  41bca4:	pop    r12
  41bca6:	pop    r13
  41bca8:	pop    r14
  41bcaa:	pop    r15
  41bcac:	pop    rbp
  41bcad:	ret    
  41bcae:	mov    rax,QWORD PTR [rip+0x34343]        # 44fff8 <stderr@GLIBC_2.2.5>
  41bcb5:	mov    rcx,QWORD PTR [rax]
  41bcb8:	lea    rdi,[rip+0x12368]        # 42e027 <_IO_stdin_used@@Base+0x1027>
  41bcbf:	mov    esi,0x22
  41bcc4:	mov    edx,0x1
  41bcc9:	call   406220 <fwrite@plt>
  41bcce:	mov    edi,0x1
  41bcd3:	call   406210 <exit@plt>
  41bcd8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000041bce0 <__flatcc_fb_parse@@Base>:
  41bce0:	push   rbp
  41bce1:	push   r15
  41bce3:	push   r14
  41bce5:	push   r13
  41bce7:	push   r12
  41bce9:	push   rbx
  41bcea:	sub    rsp,0x58
  41bcee:	mov    r14,rdi
  41bcf1:	mov    QWORD PTR [rdi+0x70],rsi
  41bcf5:	mov    QWORD PTR [rdi+0x78],0x1
  41bcfd:	mov    QWORD PTR [rdi+0xa0],0x9
  41bd08:	lea    rax,[rip+0x2a11b]        # 445e2a <fb_schema_table_deleted@@Base+0x6e2>
  41bd0f:	mov    QWORD PTR [rdi+0x80],rax
  41bd16:	mov    QWORD PTR [rdi+0x88],0x4
  41bd21:	vxorps xmm0,xmm0,xmm0
  41bd25:	vmovups XMMWORD PTR [rdi+0x90],xmm0
  41bd2d:	mov    QWORD PTR [rdi+0xc8],0xfffffffffffffc2a
  41bd38:	lea    rax,[rip+0x2b8c6]        # 447605 <fb_schema_table_deleted@@Base+0x1ebd>
  41bd3f:	mov    QWORD PTR [rdi+0xa8],rax
  41bd46:	mov    QWORD PTR [rdi+0xb0],0x5
  41bd51:	vmovups XMMWORD PTR [rdi+0xb8],xmm0
  41bd59:	test   ecx,ecx
  41bd5b:	je     41bd61 <__flatcc_fb_parse@@Base+0x81>
  41bd5d:	mov    QWORD PTR [r14+0x20],rsi
  41bd61:	mov    rdi,rsi
  41bd64:	mov    rsi,rdx
  41bd67:	mov    rdx,r14
  41bd6a:	call   41e100 <__flatcc_fb_parse@@Base+0x2420>
  41bd6f:	mov    r13,QWORD PTR [r14+0x28]
  41bd73:	mov    rax,QWORD PTR [r14+0x48]
  41bd77:	mov    QWORD PTR [r14+0x30],rax
  41bd7b:	mov    QWORD PTR [r14+0x48],r13
  41bd7f:	mov    rdi,QWORD PTR [r14+0x148]
  41bd86:	call   4061a0 <malloc@plt>
  41bd8b:	mov    QWORD PTR [r14+0xd8],rax
  41bd92:	test   rax,rax
  41bd95:	je     41e0c7 <__flatcc_fb_parse@@Base+0x23e7>
  41bd9b:	mov    rax,QWORD PTR [r13+0x20]
  41bd9f:	cmp    rax,0xfffffffffffffc3c
  41bda5:	jne    41bdb7 <__flatcc_fb_parse@@Base+0xd7>
  41bda7:	mov    rdi,r14
  41bdaa:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41bdaf:	mov    r13,QWORD PTR [r14+0x48]
  41bdb3:	mov    rax,QWORD PTR [r13+0x20]
  41bdb7:	lea    rcx,[r14+0x48]
  41bdbb:	mov    QWORD PTR [rsp+0x10],rcx
  41bdc0:	cmp    rax,0xfffffffffffffc35
  41bdc6:	jne    41c11f <__flatcc_fb_parse@@Base+0x43f>
  41bdcc:	lea    r15,[rip+0x1277c]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41bdd3:	mov    rbp,r13
  41bdd6:	jmp    41bdfe <__flatcc_fb_parse@@Base+0x11e>
  41bdd8:	nop    DWORD PTR [rax+rax*1+0x0]
  41bde0:	mov    rdi,r14
  41bde3:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41bde8:	mov    rax,QWORD PTR [rsp+0x10]
  41bded:	mov    rbp,QWORD PTR [rax]
  41bdf0:	cmp    QWORD PTR [rbp+0x20],0xfffffffffffffc35
  41bdf8:	jne    41c117 <__flatcc_fb_parse@@Base+0x437>
  41bdfe:	mov    rdi,r14
  41be01:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41be06:	test   rbp,rbp
  41be09:	je     41c117 <__flatcc_fb_parse@@Base+0x437>
  41be0f:	cmp    DWORD PTR [r14+0xf8],0x0
  41be17:	je     41be70 <__flatcc_fb_parse@@Base+0x190>
  41be19:	test   r13,r13
  41be1c:	je     41bec0 <__flatcc_fb_parse@@Base+0x1e0>
  41be22:	mov    rax,QWORD PTR [r13+0x0]
  41be26:	xor    r9d,r9d
  41be29:	mov    rbp,r15
  41be2c:	test   rax,rax
  41be2f:	je     41be38 <__flatcc_fb_parse@@Base+0x158>
  41be31:	mov    r9d,DWORD PTR [r13+0x8]
  41be35:	mov    rbp,rax
  41be38:	mov    rax,r14
  41be3b:	cmp    QWORD PTR [rax+0x28],r13
  41be3f:	jbe    41be5e <__flatcc_fb_parse@@Base+0x17e>
  41be41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41be4b:	nop    DWORD PTR [rax+rax*1+0x0]
  41be50:	mov    rax,QWORD PTR [rax]
  41be53:	test   rax,rax
  41be56:	je     41be90 <__flatcc_fb_parse@@Base+0x1b0>
  41be58:	cmp    QWORD PTR [rax+0x28],r13
  41be5c:	ja     41be50 <__flatcc_fb_parse@@Base+0x170>
  41be5e:	cmp    QWORD PTR [rax+0x30],r13
  41be62:	jbe    41be50 <__flatcc_fb_parse@@Base+0x170>
  41be64:	mov    rdx,QWORD PTR [rax+0x318]
  41be6b:	jmp    41be93 <__flatcc_fb_parse@@Base+0x1b3>
  41be6d:	nop    DWORD PTR [rax]
  41be70:	mov    eax,DWORD PTR [r14+0xd0]
  41be77:	cmp    eax,0x9
  41be7a:	jle    41bef1 <__flatcc_fb_parse@@Base+0x211>
  41be7c:	jmp    41c117 <__flatcc_fb_parse@@Base+0x437>
  41be81:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41be8b:	nop    DWORD PTR [rax+rax*1+0x0]
  41be90:	mov    rdx,r15
  41be93:	mov    rcx,QWORD PTR [r13+0x10]
  41be97:	mov    r8,QWORD PTR [r13+0x18]
  41be9b:	mov    rdi,r14
  41be9e:	lea    rsi,[rip+0x29d4b]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41bea5:	mov    eax,0x0
  41beaa:	lea    rbx,[rip+0x2a02d]        # 445ede <fb_schema_table_deleted@@Base+0x796>
  41beb1:	push   rbx
  41beb2:	push   rbp
  41beb3:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41beb8:	add    rsp,0x10
  41bebc:	jmp    41bed8 <__flatcc_fb_parse@@Base+0x1f8>
  41bebe:	xchg   ax,ax
  41bec0:	mov    rdi,r14
  41bec3:	lea    rsi,[rip+0x29d78]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41beca:	lea    rdx,[rip+0x2a00d]        # 445ede <fb_schema_table_deleted@@Base+0x796>
  41bed1:	xor    eax,eax
  41bed3:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41bed8:	mov    eax,DWORD PTR [r14+0xd0]
  41bedf:	inc    eax
  41bee1:	mov    DWORD PTR [r14+0xd0],eax
  41bee8:	cmp    eax,0x9
  41beeb:	jg     41c117 <__flatcc_fb_parse@@Base+0x437>
  41bef1:	mov    rax,QWORD PTR [rsp+0x10]
  41bef6:	mov    r12,QWORD PTR [rax]
  41bef9:	cmp    QWORD PTR [r12+0x20],0x13
  41beff:	jne    41bf20 <__flatcc_fb_parse@@Base+0x240>
  41bf01:	mov    rdi,r14
  41bf04:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41bf09:	test   r12,r12
  41bf0c:	jne    41bff7 <__flatcc_fb_parse@@Base+0x317>
  41bf12:	jmp    41bfd0 <__flatcc_fb_parse@@Base+0x2f0>
  41bf17:	nop    WORD PTR [rax+rax*1+0x0]
  41bf20:	test   r12,r12
  41bf23:	je     41bfab <__flatcc_fb_parse@@Base+0x2cb>
  41bf29:	mov    rax,QWORD PTR [r12]
  41bf2d:	xor    r9d,r9d
  41bf30:	mov    rbp,r15
  41bf33:	test   rax,rax
  41bf36:	je     41bf40 <__flatcc_fb_parse@@Base+0x260>
  41bf38:	mov    r9d,DWORD PTR [r12+0x8]
  41bf3d:	mov    rbp,rax
  41bf40:	mov    rax,r14
  41bf43:	cmp    QWORD PTR [rax+0x28],r12
  41bf47:	jbe    41bf5e <__flatcc_fb_parse@@Base+0x27e>
  41bf49:	nop    DWORD PTR [rax+0x0]
  41bf50:	mov    rax,QWORD PTR [rax]
  41bf53:	test   rax,rax
  41bf56:	je     41bf6d <__flatcc_fb_parse@@Base+0x28d>
  41bf58:	cmp    QWORD PTR [rax+0x28],r12
  41bf5c:	ja     41bf50 <__flatcc_fb_parse@@Base+0x270>
  41bf5e:	cmp    QWORD PTR [rax+0x30],r12
  41bf62:	jbe    41bf50 <__flatcc_fb_parse@@Base+0x270>
  41bf64:	mov    rdx,QWORD PTR [rax+0x318]
  41bf6b:	jmp    41bf70 <__flatcc_fb_parse@@Base+0x290>
  41bf6d:	mov    rdx,r15
  41bf70:	mov    rcx,QWORD PTR [r12+0x10]
  41bf75:	mov    r8,QWORD PTR [r12+0x18]
  41bf7a:	mov    rdi,r14
  41bf7d:	lea    rsi,[rip+0x29c6c]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41bf84:	mov    eax,0x0
  41bf89:	lea    rbx,[rip+0x29f86]        # 445f16 <fb_schema_table_deleted@@Base+0x7ce>
  41bf90:	push   rbx
  41bf91:	push   rbp
  41bf92:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41bf97:	add    rsp,0x10
  41bf9b:	inc    DWORD PTR [r14+0xd0]
  41bfa2:	lea    r15,[rip+0x125a6]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41bfa9:	jmp    41bfd0 <__flatcc_fb_parse@@Base+0x2f0>
  41bfab:	mov    rdi,r14
  41bfae:	lea    rsi,[rip+0x29c8d]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41bfb5:	lea    rdx,[rip+0x29f5a]        # 445f16 <fb_schema_table_deleted@@Base+0x7ce>
  41bfbc:	xor    eax,eax
  41bfbe:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41bfc3:	inc    DWORD PTR [r14+0xd0]
  41bfca:	nop    WORD PTR [rax+rax*1+0x0]
  41bfd0:	mov    rax,QWORD PTR [rsp+0x10]
  41bfd5:	mov    rax,QWORD PTR [rax]
  41bfd8:	mov    rbp,QWORD PTR [rax+0x20]
  41bfdc:	test   rbp,rbp
  41bfdf:	je     41bff7 <__flatcc_fb_parse@@Base+0x317>
  41bfe1:	mov    rdi,r14
  41bfe4:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41bfe9:	cmp    rbp,0x3b
  41bfed:	jne    41bfd0 <__flatcc_fb_parse@@Base+0x2f0>
  41bfef:	mov    QWORD PTR [r14+0x40],0x0
  41bff7:	mov    rsi,QWORD PTR [r14+0x60]
  41bffb:	lea    rax,[rsi+0x20]
  41bfff:	cmp    rax,QWORD PTR [r14+0x50]
  41c003:	jbe    41c03f <__flatcc_fb_parse@@Base+0x35f>
  41c005:	mov    edi,0x10000
  41c00a:	mov    esi,0x1
  41c00f:	call   406140 <calloc@plt>
  41c014:	test   rax,rax
  41c017:	je     41e0c7 <__flatcc_fb_parse@@Base+0x23e7>
  41c01d:	mov    rcx,QWORD PTR [r14+0x58]
  41c021:	mov    QWORD PTR [rax],rcx
  41c024:	mov    QWORD PTR [r14+0x58],rax
  41c028:	lea    rsi,[rax+0x10]
  41c02c:	mov    QWORD PTR [r14+0x60],rsi
  41c030:	lea    rcx,[rax+0x10000]
  41c037:	mov    QWORD PTR [r14+0x50],rcx
  41c03b:	add    rax,0x30
  41c03f:	mov    QWORD PTR [r14+0x60],rax
  41c043:	mov    rax,QWORD PTR [r14+0x1f8]
  41c04a:	mov    QWORD PTR [rsi],rax
  41c04d:	mov    QWORD PTR [r14+0x1f8],rsi
  41c054:	add    rsi,0x8
  41c058:	mov    rdi,r14
  41c05b:	call   421eb0 <__flatcc_fb_clear_parser@@Base+0x140>
  41c060:	mov    rax,QWORD PTR [r14+0x48]
  41c064:	cmp    QWORD PTR [rax+0x20],0x3b
  41c069:	je     41bde0 <__flatcc_fb_parse@@Base+0x100>
  41c06f:	test   rax,rax
  41c072:	je     41c0f3 <__flatcc_fb_parse@@Base+0x413>
  41c074:	mov    rcx,QWORD PTR [rax]
  41c077:	xor    r9d,r9d
  41c07a:	mov    r10,r15
  41c07d:	test   rcx,rcx
  41c080:	je     41c089 <__flatcc_fb_parse@@Base+0x3a9>
  41c082:	mov    r9d,DWORD PTR [rax+0x8]
  41c086:	mov    r10,rcx
  41c089:	mov    rcx,r14
  41c08c:	cmp    QWORD PTR [rcx+0x28],rax
  41c090:	jbe    41c0ae <__flatcc_fb_parse@@Base+0x3ce>
  41c092:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c09c:	nop    DWORD PTR [rax+0x0]
  41c0a0:	mov    rcx,QWORD PTR [rcx]
  41c0a3:	test   rcx,rcx
  41c0a6:	je     41c0bd <__flatcc_fb_parse@@Base+0x3dd>
  41c0a8:	cmp    QWORD PTR [rcx+0x28],rax
  41c0ac:	ja     41c0a0 <__flatcc_fb_parse@@Base+0x3c0>
  41c0ae:	cmp    QWORD PTR [rcx+0x30],rax
  41c0b2:	jbe    41c0a0 <__flatcc_fb_parse@@Base+0x3c0>
  41c0b4:	mov    rdx,QWORD PTR [rcx+0x318]
  41c0bb:	jmp    41c0c0 <__flatcc_fb_parse@@Base+0x3e0>
  41c0bd:	mov    rdx,r15
  41c0c0:	mov    rcx,QWORD PTR [rax+0x10]
  41c0c4:	mov    r8,QWORD PTR [rax+0x18]
  41c0c8:	mov    rdi,r14
  41c0cb:	lea    rsi,[rip+0x29b1e]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41c0d2:	mov    eax,0x0
  41c0d7:	lea    rbx,[rip+0x29e66]        # 445f44 <fb_schema_table_deleted@@Base+0x7fc>
  41c0de:	push   rbx
  41c0df:	push   r10
  41c0e1:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41c0e6:	add    rsp,0x10
  41c0ea:	lea    r15,[rip+0x1245e]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41c0f1:	jmp    41c10b <__flatcc_fb_parse@@Base+0x42b>
  41c0f3:	mov    rdi,r14
  41c0f6:	lea    rsi,[rip+0x29b45]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41c0fd:	lea    rdx,[rip+0x29e40]        # 445f44 <fb_schema_table_deleted@@Base+0x7fc>
  41c104:	xor    eax,eax
  41c106:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41c10b:	inc    DWORD PTR [r14+0xd0]
  41c112:	jmp    41bde8 <__flatcc_fb_parse@@Base+0x108>
  41c117:	mov    rax,QWORD PTR [rsp+0x10]
  41c11c:	mov    r13,QWORD PTR [rax]
  41c11f:	lea    rax,[r14+0x80]
  41c126:	mov    QWORD PTR [rsp+0x30],rax
  41c12b:	lea    rax,[r14+0xd0]
  41c132:	mov    QWORD PTR [rsp+0x8],rax
  41c137:	lea    rax,[r14+0x248]
  41c13e:	mov    QWORD PTR [rsp+0x50],rax
  41c143:	lea    rax,[r14+0x208]
  41c14a:	mov    QWORD PTR [rsp+0x48],rax
  41c14f:	lea    rax,[r14+0x220]
  41c156:	mov    QWORD PTR [rsp+0x40],rax
  41c15b:	lea    rax,[r14+0x2d8]
  41c162:	mov    QWORD PTR [rsp+0x38],rax
  41c167:	jmp    41c199 <__flatcc_fb_parse@@Base+0x4b9>
  41c169:	mov    rdi,r14
  41c16c:	lea    rsi,[rip+0x29acf]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41c173:	lea    rdx,[rip+0x29e91]        # 44600b <fb_schema_table_deleted@@Base+0x8c3>
  41c17a:	xor    eax,eax
  41c17c:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41c181:	mov    rax,QWORD PTR [rsp+0x8]
  41c186:	inc    DWORD PTR [rax]
  41c188:	mov    rax,QWORD PTR [rsp+0x10]
  41c18d:	mov    r13,QWORD PTR [rax]
  41c190:	cmp    r13,r15
  41c193:	je     41dfc6 <__flatcc_fb_parse@@Base+0x22e6>
  41c199:	mov    rcx,QWORD PTR [r13+0x20]
  41c19d:	test   rcx,rcx
  41c1a0:	je     41df95 <__flatcc_fb_parse@@Base+0x22b5>
  41c1a6:	mov    rax,QWORD PTR [rsp+0x8]
  41c1ab:	mov    eax,DWORD PTR [rax]
  41c1ad:	cmp    eax,0x9
  41c1b0:	jg     41e0b8 <__flatcc_fb_parse@@Base+0x23d8>
  41c1b6:	mov    r15,r13
  41c1b9:	cmp    rcx,0x4
  41c1bd:	jg     41c2a0 <__flatcc_fb_parse@@Base+0x5c0>
  41c1c3:	add    rcx,0x3e5
  41c1ca:	cmp    rcx,0x20
  41c1ce:	ja     41ca34 <__flatcc_fb_parse@@Base+0xd54>
  41c1d4:	lea    rax,[rip+0x29585]        # 445760 <fb_schema_table_deleted@@Base+0x18>
  41c1db:	mov    rdx,rax
  41c1de:	movsxd rax,DWORD PTR [rax+rcx*4]
  41c1e2:	add    rax,rdx
  41c1e5:	jmp    rax
  41c1e7:	mov    rdi,r14
  41c1ea:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41c1ef:	mov    r13,QWORD PTR [r14+0x60]
  41c1f3:	lea    rax,[r13+0xd0]
  41c1fa:	cmp    rax,QWORD PTR [r14+0x50]
  41c1fe:	jbe    41c23c <__flatcc_fb_parse@@Base+0x55c>
  41c200:	mov    edi,0x10000
  41c205:	mov    esi,0x1
  41c20a:	call   406140 <calloc@plt>
  41c20f:	test   rax,rax
  41c212:	je     41e0c7 <__flatcc_fb_parse@@Base+0x23e7>
  41c218:	mov    rcx,QWORD PTR [r14+0x58]
  41c21c:	mov    QWORD PTR [rax],rcx
  41c21f:	mov    QWORD PTR [r14+0x58],rax
  41c223:	lea    r13,[rax+0x10]
  41c227:	mov    QWORD PTR [r14+0x60],r13
  41c22b:	lea    rcx,[rax+0x10000]
  41c232:	mov    QWORD PTR [r14+0x50],rcx
  41c236:	add    rax,0xe0
  41c23c:	mov    QWORD PTR [r14+0x60],rax
  41c240:	mov    rax,QWORD PTR [r14+0x238]
  41c247:	mov    QWORD PTR [r13+0x0],rax
  41c24b:	mov    WORD PTR [r13+0x10],0x3
  41c252:	mov    QWORD PTR [r14+0x238],r13
  41c259:	mov    rax,QWORD PTR [r14+0x340]
  41c260:	mov    QWORD PTR [r13+0x18],rax
  41c264:	mov    rax,QWORD PTR [r14+0x40]
  41c268:	test   rax,rax
  41c26b:	je     41cc9d <__flatcc_fb_parse@@Base+0xfbd>
  41c271:	xor    edx,edx
  41c273:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c27d:	nop    DWORD PTR [rax]
  41c280:	mov    rcx,rax
  41c283:	mov    rax,QWORD PTR [rax]
  41c286:	mov    QWORD PTR [rcx],rdx
  41c289:	mov    rdx,rcx
  41c28c:	test   rax,rax
  41c28f:	jne    41c280 <__flatcc_fb_parse@@Base+0x5a0>
  41c291:	jmp    41cc9f <__flatcc_fb_parse@@Base+0xfbf>
  41c296:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c2a0:	cmp    rcx,0x1a
  41c2a4:	jg     41c2f4 <__flatcc_fb_parse@@Base+0x614>
  41c2a6:	cmp    rcx,0x5
  41c2aa:	je     41c9b4 <__flatcc_fb_parse@@Base+0xcd4>
  41c2b0:	cmp    rcx,0x7
  41c2b4:	jne    41ca34 <__flatcc_fb_parse@@Base+0xd54>
  41c2ba:	test   r15,r15
  41c2bd:	je     41d1e4 <__flatcc_fb_parse@@Base+0x1504>
  41c2c3:	mov    rax,r14
  41c2c6:	cmp    QWORD PTR [rax+0x28],r15
  41c2ca:	jbe    41c2e2 <__flatcc_fb_parse@@Base+0x602>
  41c2cc:	nop    DWORD PTR [rax+0x0]
  41c2d0:	mov    rax,QWORD PTR [rax]
  41c2d3:	test   rax,rax
  41c2d6:	je     41cbae <__flatcc_fb_parse@@Base+0xece>
  41c2dc:	cmp    QWORD PTR [rax+0x28],r15
  41c2e0:	ja     41c2d0 <__flatcc_fb_parse@@Base+0x5f0>
  41c2e2:	cmp    QWORD PTR [rax+0x30],r15
  41c2e6:	jbe    41c2d0 <__flatcc_fb_parse@@Base+0x5f0>
  41c2e8:	mov    rdx,QWORD PTR [rax+0x318]
  41c2ef:	jmp    41cbb5 <__flatcc_fb_parse@@Base+0xed5>
  41c2f4:	cmp    rcx,0x1b
  41c2f8:	je     41c9f4 <__flatcc_fb_parse@@Base+0xd14>
  41c2fe:	cmp    rcx,0x7b
  41c302:	jne    41ca34 <__flatcc_fb_parse@@Base+0xd54>
  41c308:	test   r15,r15
  41c30b:	je     41d1fa <__flatcc_fb_parse@@Base+0x151a>
  41c311:	mov    rax,QWORD PTR [r15]
  41c314:	xor    r9d,r9d
  41c317:	lea    rbp,[rip+0x12231]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41c31e:	mov    r10,rbp
  41c321:	test   rax,rax
  41c324:	je     41c32d <__flatcc_fb_parse@@Base+0x64d>
  41c326:	mov    r9d,DWORD PTR [r15+0x8]
  41c32a:	mov    r10,rax
  41c32d:	mov    rax,r14
  41c330:	cmp    QWORD PTR [rax+0x28],r15
  41c334:	jbe    41c352 <__flatcc_fb_parse@@Base+0x672>
  41c336:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c340:	mov    rax,QWORD PTR [rax]
  41c343:	test   rax,rax
  41c346:	je     41cbdb <__flatcc_fb_parse@@Base+0xefb>
  41c34c:	cmp    QWORD PTR [rax+0x28],r15
  41c350:	ja     41c340 <__flatcc_fb_parse@@Base+0x660>
  41c352:	cmp    QWORD PTR [rax+0x30],r15
  41c356:	jbe    41c340 <__flatcc_fb_parse@@Base+0x660>
  41c358:	mov    rdx,QWORD PTR [rax+0x318]
  41c35f:	jmp    41cbe2 <__flatcc_fb_parse@@Base+0xf02>
  41c364:	mov    rdi,r14
  41c367:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41c36c:	cmp    WORD PTR [r14+0x218],0x0
  41c375:	je     41c39a <__flatcc_fb_parse@@Base+0x6ba>
  41c377:	mov    rsi,QWORD PTR [r14+0x48]
  41c37b:	mov    r8,QWORD PTR [r14+0x208]
  41c382:	mov    r9d,DWORD PTR [r14+0x210]
  41c389:	mov    rdi,r14
  41c38c:	lea    rdx,[rip+0x29e73]        # 446206 <fb_schema_table_deleted@@Base+0xabe>
  41c393:	xor    ecx,ecx
  41c395:	call   41b6e0 <__flatcc_error_report@@Base>
  41c39a:	mov    rax,QWORD PTR [rsp+0x10]
  41c39f:	mov    rbp,QWORD PTR [rax]
  41c3a2:	cmp    QWORD PTR [rbp+0x20],0x13
  41c3a7:	jne    41ca94 <__flatcc_fb_parse@@Base+0xdb4>
  41c3ad:	mov    rdi,r14
  41c3b0:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41c3b5:	test   rbp,rbp
  41c3b8:	je     41d4d0 <__flatcc_fb_parse@@Base+0x17f0>
  41c3be:	mov    rbp,QWORD PTR [r14+0x48]
  41c3c2:	mov    rdi,r14
  41c3c5:	mov    rsi,QWORD PTR [rsp+0x48]
  41c3ca:	call   421eb0 <__flatcc_fb_clear_parser@@Base+0x140>
  41c3cf:	cmp    QWORD PTR [r14+0x208],0x0
  41c3d7:	je     41d956 <__flatcc_fb_parse@@Base+0x1c76>
  41c3dd:	cmp    DWORD PTR [r14+0x210],0x4
  41c3e5:	je     41d956 <__flatcc_fb_parse@@Base+0x1c76>
  41c3eb:	mov    WORD PTR [r14+0x218],0x1
  41c3f5:	test   rbp,rbp
  41c3f8:	je     41d937 <__flatcc_fb_parse@@Base+0x1c57>
  41c3fe:	mov    rax,QWORD PTR [rbp+0x0]
  41c402:	xor    r9d,r9d
  41c405:	lea    r10,[rip+0x12143]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41c40c:	test   rax,rax
  41c40f:	je     41c418 <__flatcc_fb_parse@@Base+0x738>
  41c411:	mov    r9d,DWORD PTR [rbp+0x8]
  41c415:	mov    r10,rax
  41c418:	mov    rax,r14
  41c41b:	cmp    QWORD PTR [rax+0x28],rbp
  41c41f:	jbe    41c442 <__flatcc_fb_parse@@Base+0x762>
  41c421:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c42b:	nop    DWORD PTR [rax+rax*1+0x0]
  41c430:	mov    rax,QWORD PTR [rax]
  41c433:	test   rax,rax
  41c436:	je     41d904 <__flatcc_fb_parse@@Base+0x1c24>
  41c43c:	cmp    QWORD PTR [rax+0x28],rbp
  41c440:	ja     41c430 <__flatcc_fb_parse@@Base+0x750>
  41c442:	cmp    QWORD PTR [rax+0x30],rbp
  41c446:	jbe    41c430 <__flatcc_fb_parse@@Base+0x750>
  41c448:	mov    rdx,QWORD PTR [rax+0x318]
  41c44f:	jmp    41d90b <__flatcc_fb_parse@@Base+0x1c2b>
  41c454:	mov    rdi,r14
  41c457:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41c45c:	mov    QWORD PTR [rsp+0x18],0x0
  41c465:	mov    rbp,QWORD PTR [r14+0x48]
  41c469:	mov    rcx,QWORD PTR [rbp+0x20]
  41c46d:	mov    rax,rbp
  41c470:	cmp    rcx,0x3b
  41c474:	jne    41d40d <__flatcc_fb_parse@@Base+0x172d>
  41c47a:	mov    rdi,r14
  41c47d:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41c482:	test   rbp,rbp
  41c485:	je     41d401 <__flatcc_fb_parse@@Base+0x1721>
  41c48b:	mov    QWORD PTR [r14+0x340],0x0
  41c496:	jmp    41c188 <__flatcc_fb_parse@@Base+0x4a8>
  41c49b:	mov    rdi,r14
  41c49e:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41c4a3:	mov    rsi,QWORD PTR [r14+0x60]
  41c4a7:	lea    rax,[rsi+0xd0]
  41c4ae:	cmp    rax,QWORD PTR [r14+0x50]
  41c4b2:	jbe    41c4f0 <__flatcc_fb_parse@@Base+0x810>
  41c4b4:	mov    edi,0x10000
  41c4b9:	mov    esi,0x1
  41c4be:	call   406140 <calloc@plt>
  41c4c3:	test   rax,rax
  41c4c6:	je     41e0c7 <__flatcc_fb_parse@@Base+0x23e7>
  41c4cc:	mov    rcx,QWORD PTR [r14+0x58]
  41c4d0:	mov    QWORD PTR [rax],rcx
  41c4d3:	mov    QWORD PTR [r14+0x58],rax
  41c4d7:	lea    rsi,[rax+0x10]
  41c4db:	mov    QWORD PTR [r14+0x60],rsi
  41c4df:	lea    rcx,[rax+0x10000]
  41c4e6:	mov    QWORD PTR [r14+0x50],rcx
  41c4ea:	add    rax,0xe0
  41c4f0:	mov    QWORD PTR [r14+0x60],rax
  41c4f4:	mov    rax,QWORD PTR [r14+0x238]
  41c4fb:	mov    QWORD PTR [rsi],rax
  41c4fe:	mov    WORD PTR [rsi+0x10],0x2
  41c504:	mov    QWORD PTR [r14+0x238],rsi
  41c50b:	mov    rax,QWORD PTR [r14+0x340]
  41c512:	mov    QWORD PTR [rsi+0x18],rax
  41c516:	mov    rax,QWORD PTR [r14+0x40]
  41c51a:	test   rax,rax
  41c51d:	je     41cdd4 <__flatcc_fb_parse@@Base+0x10f4>
  41c523:	xor    edx,edx
  41c525:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c52f:	nop
  41c530:	mov    rcx,rax
  41c533:	mov    rax,QWORD PTR [rax]
  41c536:	mov    QWORD PTR [rcx],rdx
  41c539:	mov    rdx,rcx
  41c53c:	test   rax,rax
  41c53f:	jne    41c530 <__flatcc_fb_parse@@Base+0x850>
  41c541:	jmp    41cdd6 <__flatcc_fb_parse@@Base+0x10f6>
  41c546:	mov    rdi,r14
  41c549:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41c54e:	mov    rsi,QWORD PTR [r14+0x60]
  41c552:	lea    rax,[rsi+0xd0]
  41c559:	cmp    rax,QWORD PTR [r14+0x50]
  41c55d:	jbe    41c59b <__flatcc_fb_parse@@Base+0x8bb>
  41c55f:	mov    edi,0x10000
  41c564:	mov    esi,0x1
  41c569:	call   406140 <calloc@plt>
  41c56e:	test   rax,rax
  41c571:	je     41e0c7 <__flatcc_fb_parse@@Base+0x23e7>
  41c577:	mov    rcx,QWORD PTR [r14+0x58]
  41c57b:	mov    QWORD PTR [rax],rcx
  41c57e:	mov    QWORD PTR [r14+0x58],rax
  41c582:	lea    rsi,[rax+0x10]
  41c586:	mov    QWORD PTR [r14+0x60],rsi
  41c58a:	lea    rcx,[rax+0x10000]
  41c591:	mov    QWORD PTR [r14+0x50],rcx
  41c595:	add    rax,0xe0
  41c59b:	mov    QWORD PTR [r14+0x60],rax
  41c59f:	mov    rax,QWORD PTR [r14+0x238]
  41c5a6:	mov    QWORD PTR [rsi],rax
  41c5a9:	mov    WORD PTR [rsi+0x10],0x0
  41c5af:	mov    QWORD PTR [r14+0x238],rsi
  41c5b6:	mov    rax,QWORD PTR [r14+0x340]
  41c5bd:	mov    QWORD PTR [rsi+0x18],rax
  41c5c1:	mov    rax,QWORD PTR [r14+0x40]
  41c5c5:	test   rax,rax
  41c5c8:	je     41cdf6 <__flatcc_fb_parse@@Base+0x1116>
  41c5ce:	xor    edx,edx
  41c5d0:	mov    rcx,rax
  41c5d3:	mov    rax,QWORD PTR [rax]
  41c5d6:	mov    QWORD PTR [rcx],rdx
  41c5d9:	mov    rdx,rcx
  41c5dc:	test   rax,rax
  41c5df:	jne    41c5d0 <__flatcc_fb_parse@@Base+0x8f0>
  41c5e1:	jmp    41cdf8 <__flatcc_fb_parse@@Base+0x1118>
  41c5e6:	mov    rdi,r14
  41c5e9:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41c5ee:	mov    rsi,QWORD PTR [r14+0x60]
  41c5f2:	lea    rax,[rsi+0xd0]
  41c5f9:	cmp    rax,QWORD PTR [r14+0x50]
  41c5fd:	jbe    41c63b <__flatcc_fb_parse@@Base+0x95b>
  41c5ff:	mov    edi,0x10000
  41c604:	mov    esi,0x1
  41c609:	call   406140 <calloc@plt>
  41c60e:	test   rax,rax
  41c611:	je     41e0c7 <__flatcc_fb_parse@@Base+0x23e7>
  41c617:	mov    rcx,QWORD PTR [r14+0x58]
  41c61b:	mov    QWORD PTR [rax],rcx
  41c61e:	mov    QWORD PTR [r14+0x58],rax
  41c622:	lea    rsi,[rax+0x10]
  41c626:	mov    QWORD PTR [r14+0x60],rsi
  41c62a:	lea    rcx,[rax+0x10000]
  41c631:	mov    QWORD PTR [r14+0x50],rcx
  41c635:	add    rax,0xe0
  41c63b:	mov    QWORD PTR [r14+0x60],rax
  41c63f:	mov    rax,QWORD PTR [r14+0x238]
  41c646:	mov    QWORD PTR [rsi],rax
  41c649:	mov    WORD PTR [rsi+0x10],0x1
  41c64f:	mov    QWORD PTR [r14+0x238],rsi
  41c656:	mov    rax,QWORD PTR [r14+0x340]
  41c65d:	mov    QWORD PTR [rsi+0x18],rax
  41c661:	mov    rax,QWORD PTR [r14+0x40]
  41c665:	test   rax,rax
  41c668:	je     41ce18 <__flatcc_fb_parse@@Base+0x1138>
  41c66e:	xor    edx,edx
  41c670:	mov    rcx,rax
  41c673:	mov    rax,QWORD PTR [rax]
  41c676:	mov    QWORD PTR [rcx],rdx
  41c679:	mov    rdx,rcx
  41c67c:	test   rax,rax
  41c67f:	jne    41c670 <__flatcc_fb_parse@@Base+0x990>
  41c681:	jmp    41ce1a <__flatcc_fb_parse@@Base+0x113a>
  41c686:	mov    rdi,r14
  41c689:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41c68e:	cmp    WORD PTR [r14+0x230],0x2
  41c697:	jne    41c6bc <__flatcc_fb_parse@@Base+0x9dc>
  41c699:	mov    rsi,QWORD PTR [r14+0x48]
  41c69d:	mov    r8,QWORD PTR [r14+0x220]
  41c6a4:	mov    r9d,DWORD PTR [r14+0x228]
  41c6ab:	mov    rdi,r14
  41c6ae:	lea    rdx,[rip+0x29af3]        # 4461a8 <fb_schema_table_deleted@@Base+0xa60>
  41c6b5:	xor    ecx,ecx
  41c6b7:	call   41b6e0 <__flatcc_error_report@@Base>
  41c6bc:	mov    rax,QWORD PTR [rsp+0x10]
  41c6c1:	mov    rbp,QWORD PTR [rax]
  41c6c4:	cmp    QWORD PTR [rbp+0x20],0x13
  41c6c9:	jne    41cae4 <__flatcc_fb_parse@@Base+0xe04>
  41c6cf:	mov    rdi,r14
  41c6d2:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41c6d7:	test   rbp,rbp
  41c6da:	je     41d520 <__flatcc_fb_parse@@Base+0x1840>
  41c6e0:	mov    rdi,r14
  41c6e3:	mov    rsi,QWORD PTR [rsp+0x40]
  41c6e8:	call   421eb0 <__flatcc_fb_clear_parser@@Base+0x140>
  41c6ed:	mov    rax,QWORD PTR [r14+0x48]
  41c6f1:	cmp    QWORD PTR [rax+0x20],0x3b
  41c6f6:	je     41d965 <__flatcc_fb_parse@@Base+0x1c85>
  41c6fc:	test   rax,rax
  41c6ff:	je     41d879 <__flatcc_fb_parse@@Base+0x1b99>
  41c705:	mov    rcx,QWORD PTR [rax]
  41c708:	xor    r9d,r9d
  41c70b:	lea    rbp,[rip+0x11e3d]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41c712:	mov    r10,rbp
  41c715:	test   rcx,rcx
  41c718:	je     41c721 <__flatcc_fb_parse@@Base+0xa41>
  41c71a:	mov    r9d,DWORD PTR [rax+0x8]
  41c71e:	mov    r10,rcx
  41c721:	mov    rcx,r14
  41c724:	cmp    QWORD PTR [rcx+0x28],rax
  41c728:	jbe    41c742 <__flatcc_fb_parse@@Base+0xa62>
  41c72a:	nop    WORD PTR [rax+rax*1+0x0]
  41c730:	mov    rcx,QWORD PTR [rcx]
  41c733:	test   rcx,rcx
  41c736:	je     41d825 <__flatcc_fb_parse@@Base+0x1b45>
  41c73c:	cmp    QWORD PTR [rcx+0x28],rax
  41c740:	ja     41c730 <__flatcc_fb_parse@@Base+0xa50>
  41c742:	cmp    QWORD PTR [rcx+0x30],rax
  41c746:	jbe    41c730 <__flatcc_fb_parse@@Base+0xa50>
  41c748:	mov    rdx,QWORD PTR [rcx+0x318]
  41c74f:	jmp    41d82c <__flatcc_fb_parse@@Base+0x1b4c>
  41c754:	mov    rdi,r14
  41c757:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41c75c:	mov    r13,QWORD PTR [r14+0x60]
  41c760:	lea    rax,[r13+0xd0]
  41c767:	cmp    rax,QWORD PTR [r14+0x50]
  41c76b:	jbe    41c7a9 <__flatcc_fb_parse@@Base+0xac9>
  41c76d:	mov    edi,0x10000
  41c772:	mov    esi,0x1
  41c777:	call   406140 <calloc@plt>
  41c77c:	test   rax,rax
  41c77f:	je     41e0c7 <__flatcc_fb_parse@@Base+0x23e7>
  41c785:	mov    rcx,QWORD PTR [r14+0x58]
  41c789:	mov    QWORD PTR [rax],rcx
  41c78c:	mov    QWORD PTR [r14+0x58],rax
  41c790:	lea    r13,[rax+0x10]
  41c794:	mov    QWORD PTR [r14+0x60],r13
  41c798:	lea    rcx,[rax+0x10000]
  41c79f:	mov    QWORD PTR [r14+0x50],rcx
  41c7a3:	add    rax,0xe0
  41c7a9:	mov    QWORD PTR [r14+0x60],rax
  41c7ad:	mov    rax,QWORD PTR [r14+0x238]
  41c7b4:	mov    QWORD PTR [r13+0x0],rax
  41c7b8:	mov    WORD PTR [r13+0x10],0x4
  41c7bf:	mov    QWORD PTR [r14+0x238],r13
  41c7c6:	mov    rax,QWORD PTR [r14+0x340]
  41c7cd:	mov    QWORD PTR [r13+0x18],rax
  41c7d1:	mov    rax,QWORD PTR [r14+0x40]
  41c7d5:	test   rax,rax
  41c7d8:	je     41ce3a <__flatcc_fb_parse@@Base+0x115a>
  41c7de:	xor    edx,edx
  41c7e0:	mov    rcx,rax
  41c7e3:	mov    rax,QWORD PTR [rax]
  41c7e6:	mov    QWORD PTR [rcx],rdx
  41c7e9:	mov    rdx,rcx
  41c7ec:	test   rax,rax
  41c7ef:	jne    41c7e0 <__flatcc_fb_parse@@Base+0xb00>
  41c7f1:	jmp    41ce3c <__flatcc_fb_parse@@Base+0x115c>
  41c7f6:	mov    rdi,r14
  41c7f9:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41c7fe:	mov    rbp,QWORD PTR [r14+0x48]
  41c802:	cmp    QWORD PTR [r14+0x248],0x0
  41c80a:	je     41d2a4 <__flatcc_fb_parse@@Base+0x15c4>
  41c810:	test   rbp,rbp
  41c813:	je     41d285 <__flatcc_fb_parse@@Base+0x15a5>
  41c819:	mov    rax,QWORD PTR [rbp+0x0]
  41c81d:	xor    r9d,r9d
  41c820:	lea    r10,[rip+0x11d28]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41c827:	test   rax,rax
  41c82a:	je     41c833 <__flatcc_fb_parse@@Base+0xb53>
  41c82c:	mov    r9d,DWORD PTR [rbp+0x8]
  41c830:	mov    r10,rax
  41c833:	mov    rax,r14
  41c836:	cmp    QWORD PTR [rax+0x28],rbp
  41c83a:	jbe    41c852 <__flatcc_fb_parse@@Base+0xb72>
  41c83c:	nop    DWORD PTR [rax+0x0]
  41c840:	mov    rax,QWORD PTR [rax]
  41c843:	test   rax,rax
  41c846:	je     41d252 <__flatcc_fb_parse@@Base+0x1572>
  41c84c:	cmp    QWORD PTR [rax+0x28],rbp
  41c850:	ja     41c840 <__flatcc_fb_parse@@Base+0xb60>
  41c852:	cmp    QWORD PTR [rax+0x30],rbp
  41c856:	jbe    41c840 <__flatcc_fb_parse@@Base+0xb60>
  41c858:	mov    rdx,QWORD PTR [rax+0x318]
  41c85f:	jmp    41d259 <__flatcc_fb_parse@@Base+0x1579>
  41c864:	test   r15,r15
  41c867:	je     41c169 <__flatcc_fb_parse@@Base+0x489>
  41c86d:	mov    rax,QWORD PTR [r15]
  41c870:	xor    r9d,r9d
  41c873:	lea    rbp,[rip+0x11cd5]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41c87a:	mov    r10,rbp
  41c87d:	test   rax,rax
  41c880:	je     41c889 <__flatcc_fb_parse@@Base+0xba9>
  41c882:	mov    r9d,DWORD PTR [r15+0x8]
  41c886:	mov    r10,rax
  41c889:	mov    rax,r14
  41c88c:	cmp    QWORD PTR [rax+0x28],r15
  41c890:	jbe    41c8b2 <__flatcc_fb_parse@@Base+0xbd2>
  41c892:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c89c:	nop    DWORD PTR [rax+0x0]
  41c8a0:	mov    rax,QWORD PTR [rax]
  41c8a3:	test   rax,rax
  41c8a6:	je     41cb84 <__flatcc_fb_parse@@Base+0xea4>
  41c8ac:	cmp    QWORD PTR [rax+0x28],r15
  41c8b0:	ja     41c8a0 <__flatcc_fb_parse@@Base+0xbc0>
  41c8b2:	cmp    QWORD PTR [rax+0x30],r15
  41c8b6:	jbe    41c8a0 <__flatcc_fb_parse@@Base+0xbc0>
  41c8b8:	mov    rdx,QWORD PTR [rax+0x318]
  41c8bf:	jmp    41cb8b <__flatcc_fb_parse@@Base+0xeab>
  41c8c4:	mov    rdi,r14
  41c8c7:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41c8cc:	mov    r12,QWORD PTR [r14+0x60]
  41c8d0:	lea    rax,[r12+0x30]
  41c8d5:	cmp    rax,QWORD PTR [r14+0x50]
  41c8d9:	jbe    41c915 <__flatcc_fb_parse@@Base+0xc35>
  41c8db:	mov    edi,0x10000
  41c8e0:	mov    esi,0x1
  41c8e5:	call   406140 <calloc@plt>
  41c8ea:	test   rax,rax
  41c8ed:	je     41e0c7 <__flatcc_fb_parse@@Base+0x23e7>
  41c8f3:	mov    rcx,QWORD PTR [r14+0x58]
  41c8f7:	mov    QWORD PTR [rax],rcx
  41c8fa:	mov    QWORD PTR [r14+0x58],rax
  41c8fe:	lea    r12,[rax+0x10]
  41c902:	mov    QWORD PTR [r14+0x60],r12
  41c906:	lea    rcx,[rax+0x10000]
  41c90d:	mov    QWORD PTR [r14+0x50],rcx
  41c911:	add    rax,0x40
  41c915:	mov    QWORD PTR [r14+0x60],rax
  41c919:	mov    rax,QWORD PTR [r14+0x200]
  41c920:	mov    QWORD PTR [r12],rax
  41c924:	mov    QWORD PTR [r14+0x200],r12
  41c92b:	mov    rbp,QWORD PTR [r14+0x48]
  41c92f:	cmp    QWORD PTR [rbp+0x20],0x13
  41c934:	jne    41cb34 <__flatcc_fb_parse@@Base+0xe54>
  41c93a:	mov    rdi,r14
  41c93d:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41c942:	test   rbp,rbp
  41c945:	je     41d5bf <__flatcc_fb_parse@@Base+0x18df>
  41c94b:	lea    rsi,[r12+0x8]
  41c950:	mov    rdi,r14
  41c953:	call   421eb0 <__flatcc_fb_clear_parser@@Base+0x140>
  41c958:	cmp    DWORD PTR [r12+0x10],0x0
  41c95e:	jne    41d5bf <__flatcc_fb_parse@@Base+0x18df>
  41c964:	mov    rax,QWORD PTR [rbp+0x0]
  41c968:	xor    r9d,r9d
  41c96b:	lea    r10,[rip+0x11bdd]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41c972:	test   rax,rax
  41c975:	je     41c97e <__flatcc_fb_parse@@Base+0xc9e>
  41c977:	mov    r9d,DWORD PTR [rbp+0x8]
  41c97b:	mov    r10,rax
  41c97e:	mov    rax,r14
  41c981:	cmp    QWORD PTR [rax+0x28],rbp
  41c985:	jbe    41c9a2 <__flatcc_fb_parse@@Base+0xcc2>
  41c987:	nop    WORD PTR [rax+rax*1+0x0]
  41c990:	mov    rax,QWORD PTR [rax]
  41c993:	test   rax,rax
  41c996:	je     41d7e8 <__flatcc_fb_parse@@Base+0x1b08>
  41c99c:	cmp    QWORD PTR [rax+0x28],rbp
  41c9a0:	ja     41c990 <__flatcc_fb_parse@@Base+0xcb0>
  41c9a2:	cmp    QWORD PTR [rax+0x30],rbp
  41c9a6:	jbe    41c990 <__flatcc_fb_parse@@Base+0xcb0>
  41c9a8:	mov    rdx,QWORD PTR [rax+0x318]
  41c9af:	jmp    41d7ef <__flatcc_fb_parse@@Base+0x1b0f>
  41c9b4:	test   r15,r15
  41c9b7:	je     41d210 <__flatcc_fb_parse@@Base+0x1530>
  41c9bd:	mov    rax,r14
  41c9c0:	cmp    QWORD PTR [rax+0x28],r15
  41c9c4:	jbe    41c9e2 <__flatcc_fb_parse@@Base+0xd02>
  41c9c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41c9d0:	mov    rax,QWORD PTR [rax]
  41c9d3:	test   rax,rax
  41c9d6:	je     41cc05 <__flatcc_fb_parse@@Base+0xf25>
  41c9dc:	cmp    QWORD PTR [rax+0x28],r15
  41c9e0:	ja     41c9d0 <__flatcc_fb_parse@@Base+0xcf0>
  41c9e2:	cmp    QWORD PTR [rax+0x30],r15
  41c9e6:	jbe    41c9d0 <__flatcc_fb_parse@@Base+0xcf0>
  41c9e8:	mov    rdx,QWORD PTR [rax+0x318]
  41c9ef:	jmp    41cc0c <__flatcc_fb_parse@@Base+0xf2c>
  41c9f4:	test   r15,r15
  41c9f7:	je     41d226 <__flatcc_fb_parse@@Base+0x1546>
  41c9fd:	mov    rax,r14
  41ca00:	cmp    QWORD PTR [rax+0x28],r15
  41ca04:	jbe    41ca22 <__flatcc_fb_parse@@Base+0xd42>
  41ca06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ca10:	mov    rax,QWORD PTR [rax]
  41ca13:	test   rax,rax
  41ca16:	je     41cc3a <__flatcc_fb_parse@@Base+0xf5a>
  41ca1c:	cmp    QWORD PTR [rax+0x28],r15
  41ca20:	ja     41ca10 <__flatcc_fb_parse@@Base+0xd30>
  41ca22:	cmp    QWORD PTR [rax+0x30],r15
  41ca26:	jbe    41ca10 <__flatcc_fb_parse@@Base+0xd30>
  41ca28:	mov    rdx,QWORD PTR [rax+0x318]
  41ca2f:	jmp    41cc41 <__flatcc_fb_parse@@Base+0xf61>
  41ca34:	test   r15,r15
  41ca37:	je     41d23c <__flatcc_fb_parse@@Base+0x155c>
  41ca3d:	mov    rax,QWORD PTR [r15]
  41ca40:	xor    r9d,r9d
  41ca43:	lea    rbp,[rip+0x11b05]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41ca4a:	mov    r10,rbp
  41ca4d:	test   rax,rax
  41ca50:	je     41ca59 <__flatcc_fb_parse@@Base+0xd79>
  41ca52:	mov    r9d,DWORD PTR [r15+0x8]
  41ca56:	mov    r10,rax
  41ca59:	mov    rax,r14
  41ca5c:	cmp    QWORD PTR [rax+0x28],r15
  41ca60:	jbe    41ca82 <__flatcc_fb_parse@@Base+0xda2>
  41ca62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41ca6c:	nop    DWORD PTR [rax+0x0]
  41ca70:	mov    rax,QWORD PTR [rax]
  41ca73:	test   rax,rax
  41ca76:	je     41cc73 <__flatcc_fb_parse@@Base+0xf93>
  41ca7c:	cmp    QWORD PTR [rax+0x28],r15
  41ca80:	ja     41ca70 <__flatcc_fb_parse@@Base+0xd90>
  41ca82:	cmp    QWORD PTR [rax+0x30],r15
  41ca86:	jbe    41ca70 <__flatcc_fb_parse@@Base+0xd90>
  41ca88:	mov    rdx,QWORD PTR [rax+0x318]
  41ca8f:	jmp    41cc7a <__flatcc_fb_parse@@Base+0xf9a>
  41ca94:	test   rbp,rbp
  41ca97:	je     41d4a4 <__flatcc_fb_parse@@Base+0x17c4>
  41ca9d:	mov    rax,QWORD PTR [rbp+0x0]
  41caa1:	xor    r9d,r9d
  41caa4:	lea    r10,[rip+0x11aa4]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41caab:	test   rax,rax
  41caae:	je     41cab7 <__flatcc_fb_parse@@Base+0xdd7>
  41cab0:	mov    r9d,DWORD PTR [rbp+0x8]
  41cab4:	mov    r10,rax
  41cab7:	mov    rax,r14
  41caba:	cmp    QWORD PTR [rax+0x28],rbp
  41cabe:	jbe    41cad2 <__flatcc_fb_parse@@Base+0xdf2>
  41cac0:	mov    rax,QWORD PTR [rax]
  41cac3:	test   rax,rax
  41cac6:	je     41d2f3 <__flatcc_fb_parse@@Base+0x1613>
  41cacc:	cmp    QWORD PTR [rax+0x28],rbp
  41cad0:	ja     41cac0 <__flatcc_fb_parse@@Base+0xde0>
  41cad2:	cmp    QWORD PTR [rax+0x30],rbp
  41cad6:	jbe    41cac0 <__flatcc_fb_parse@@Base+0xde0>
  41cad8:	mov    rdx,QWORD PTR [rax+0x318]
  41cadf:	jmp    41d2fa <__flatcc_fb_parse@@Base+0x161a>
  41cae4:	test   rbp,rbp
  41cae7:	je     41d4f8 <__flatcc_fb_parse@@Base+0x1818>
  41caed:	mov    rax,QWORD PTR [rbp+0x0]
  41caf1:	xor    r9d,r9d
  41caf4:	lea    r10,[rip+0x11a54]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41cafb:	test   rax,rax
  41cafe:	je     41cb07 <__flatcc_fb_parse@@Base+0xe27>
  41cb00:	mov    r9d,DWORD PTR [rbp+0x8]
  41cb04:	mov    r10,rax
  41cb07:	mov    rax,r14
  41cb0a:	cmp    QWORD PTR [rax+0x28],rbp
  41cb0e:	jbe    41cb22 <__flatcc_fb_parse@@Base+0xe42>
  41cb10:	mov    rax,QWORD PTR [rax]
  41cb13:	test   rax,rax
  41cb16:	je     41d329 <__flatcc_fb_parse@@Base+0x1649>
  41cb1c:	cmp    QWORD PTR [rax+0x28],rbp
  41cb20:	ja     41cb10 <__flatcc_fb_parse@@Base+0xe30>
  41cb22:	cmp    QWORD PTR [rax+0x30],rbp
  41cb26:	jbe    41cb10 <__flatcc_fb_parse@@Base+0xe30>
  41cb28:	mov    rdx,QWORD PTR [rax+0x318]
  41cb2f:	jmp    41d330 <__flatcc_fb_parse@@Base+0x1650>
  41cb34:	test   rbp,rbp
  41cb37:	je     41d5a0 <__flatcc_fb_parse@@Base+0x18c0>
  41cb3d:	mov    rax,QWORD PTR [rbp+0x0]
  41cb41:	xor    r9d,r9d
  41cb44:	lea    r10,[rip+0x11a04]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41cb4b:	test   rax,rax
  41cb4e:	je     41cb57 <__flatcc_fb_parse@@Base+0xe77>
  41cb50:	mov    r9d,DWORD PTR [rbp+0x8]
  41cb54:	mov    r10,rax
  41cb57:	mov    rax,r14
  41cb5a:	cmp    QWORD PTR [rax+0x28],rbp
  41cb5e:	jbe    41cb72 <__flatcc_fb_parse@@Base+0xe92>
  41cb60:	mov    rax,QWORD PTR [rax]
  41cb63:	test   rax,rax
  41cb66:	je     41d3cb <__flatcc_fb_parse@@Base+0x16eb>
  41cb6c:	cmp    QWORD PTR [rax+0x28],rbp
  41cb70:	ja     41cb60 <__flatcc_fb_parse@@Base+0xe80>
  41cb72:	cmp    QWORD PTR [rax+0x30],rbp
  41cb76:	jbe    41cb60 <__flatcc_fb_parse@@Base+0xe80>
  41cb78:	mov    rdx,QWORD PTR [rax+0x318]
  41cb7f:	jmp    41d3d2 <__flatcc_fb_parse@@Base+0x16f2>
  41cb84:	lea    rdx,[rip+0x119c4]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41cb8b:	mov    rcx,QWORD PTR [r15+0x10]
  41cb8f:	mov    r8,QWORD PTR [r15+0x18]
  41cb93:	mov    rdi,r14
  41cb96:	lea    rsi,[rip+0x29053]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41cb9d:	mov    eax,0x0
  41cba2:	lea    rbp,[rip+0x29462]        # 44600b <fb_schema_table_deleted@@Base+0x8c3>
  41cba9:	jmp    41d9e2 <__flatcc_fb_parse@@Base+0x1d02>
  41cbae:	lea    rdx,[rip+0x1199a]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41cbb5:	mov    rcx,QWORD PTR [r15+0x10]
  41cbb9:	mov    r8,QWORD PTR [r15+0x18]
  41cbbd:	mov    rdi,r14
  41cbc0:	lea    rsi,[rip+0x29029]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41cbc7:	mov    r9d,0x1
  41cbcd:	mov    eax,0x0
  41cbd2:	lea    rbp,[rip+0x294fc]        # 4460d5 <fb_schema_table_deleted@@Base+0x98d>
  41cbd9:	jmp    41cc30 <__flatcc_fb_parse@@Base+0xf50>
  41cbdb:	lea    rdx,[rip+0x1196d]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41cbe2:	mov    rcx,QWORD PTR [r15+0x10]
  41cbe6:	mov    r8,QWORD PTR [r15+0x18]
  41cbea:	mov    rdi,r14
  41cbed:	lea    rsi,[rip+0x28ffc]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41cbf4:	mov    eax,0x0
  41cbf9:	lea    rbp,[rip+0x29441]        # 446041 <fb_schema_table_deleted@@Base+0x8f9>
  41cc00:	jmp    41d9e2 <__flatcc_fb_parse@@Base+0x1d02>
  41cc05:	lea    rdx,[rip+0x11943]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41cc0c:	mov    rcx,QWORD PTR [r15+0x10]
  41cc10:	mov    r8,QWORD PTR [r15+0x18]
  41cc14:	mov    rdi,r14
  41cc17:	lea    rsi,[rip+0x28fd2]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41cc1e:	mov    r9d,0x1
  41cc24:	mov    eax,0x0
  41cc29:	lea    rbp,[rip+0x29473]        # 4460a3 <fb_schema_table_deleted@@Base+0x95b>
  41cc30:	push   rbp
  41cc31:	lea    rbp,[rip+0x29373]        # 445fab <fb_schema_table_deleted@@Base+0x863>
  41cc38:	jmp    41cc6d <__flatcc_fb_parse@@Base+0xf8d>
  41cc3a:	lea    rdx,[rip+0x1190e]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41cc41:	mov    rcx,QWORD PTR [r15+0x10]
  41cc45:	mov    r8,QWORD PTR [r15+0x18]
  41cc49:	mov    rdi,r14
  41cc4c:	lea    rsi,[rip+0x28f9d]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41cc53:	mov    r9d,0x5
  41cc59:	mov    eax,0x0
  41cc5e:	lea    rbp,[rip+0x29498]        # 4460fd <fb_schema_table_deleted@@Base+0x9b5>
  41cc65:	push   rbp
  41cc66:	lea    rbp,[rip+0x294a5]        # 446112 <fb_schema_table_deleted@@Base+0x9ca>
  41cc6d:	push   rbp
  41cc6e:	jmp    41d9e5 <__flatcc_fb_parse@@Base+0x1d05>
  41cc73:	lea    rdx,[rip+0x118d5]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41cc7a:	mov    rcx,QWORD PTR [r15+0x10]
  41cc7e:	mov    r8,QWORD PTR [r15+0x18]
  41cc82:	mov    rdi,r14
  41cc85:	lea    rsi,[rip+0x28f64]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41cc8c:	mov    eax,0x0
  41cc91:	lea    rbp,[rip+0x29480]        # 446118 <fb_schema_table_deleted@@Base+0x9d0>
  41cc98:	jmp    41d9e2 <__flatcc_fb_parse@@Base+0x1d02>
  41cc9d:	xor    ecx,ecx
  41cc9f:	mov    QWORD PTR [r13+0x40],rcx
  41cca3:	mov    QWORD PTR [r14+0x40],0x0
  41ccab:	mov    rbp,QWORD PTR [r14+0x48]
  41ccaf:	cmp    QWORD PTR [rbp+0x20],0x9
  41ccb4:	jne    41cd84 <__flatcc_fb_parse@@Base+0x10a4>
  41ccba:	mov    rdi,r14
  41ccbd:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41ccc2:	mov    QWORD PTR [r13+0x8],rbp
  41ccc6:	test   rbp,rbp
  41ccc9:	je     41dde0 <__flatcc_fb_parse@@Base+0x2100>
  41cccf:	mov    rax,QWORD PTR [rsp+0x10]
  41ccd4:	mov    rbp,QWORD PTR [rax]
  41ccd7:	cmp    QWORD PTR [rbp+0x20],0x3a
  41ccdc:	jne    41db2b <__flatcc_fb_parse@@Base+0x1e4b>
  41cce2:	mov    rdi,r14
  41cce5:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41ccea:	test   rbp,rbp
  41cced:	je     41db2b <__flatcc_fb_parse@@Base+0x1e4b>
  41ccf3:	lea    rsi,[r13+0x48]
  41ccf7:	mov    rdi,r14
  41ccfa:	call   423460 <__flatcc_fb_clear_parser@@Base+0x16f0>
  41ccff:	cmp    WORD PTR [r13+0x58],0x8
  41cd05:	mov    rax,QWORD PTR [r13+0x48]
  41cd09:	jne    41d8a5 <__flatcc_fb_parse@@Base+0x1bc5>
  41cd0f:	mov    rcx,QWORD PTR [rax+0x20]
  41cd13:	mov    edx,0x3e4
  41cd18:	add    rcx,rdx
  41cd1b:	cmp    rcx,0x15
  41cd1f:	ja     41db2b <__flatcc_fb_parse@@Base+0x1e4b>
  41cd25:	mov    edx,0x200803
  41cd2a:	bt     rdx,rcx
  41cd2e:	jae    41db2b <__flatcc_fb_parse@@Base+0x1e4b>
  41cd34:	mov    rcx,QWORD PTR [rax]
  41cd37:	xor    r9d,r9d
  41cd3a:	lea    rbp,[rip+0x1180e]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41cd41:	mov    r10,rbp
  41cd44:	test   rcx,rcx
  41cd47:	je     41cd50 <__flatcc_fb_parse@@Base+0x1070>
  41cd49:	mov    r9d,DWORD PTR [rax+0x8]
  41cd4d:	mov    r10,rcx
  41cd50:	mov    rcx,r14
  41cd53:	cmp    QWORD PTR [rcx+0x28],rax
  41cd57:	jbe    41cd72 <__flatcc_fb_parse@@Base+0x1092>
  41cd59:	nop    DWORD PTR [rax+0x0]
  41cd60:	mov    rcx,QWORD PTR [rcx]
  41cd63:	test   rcx,rcx
  41cd66:	je     41da09 <__flatcc_fb_parse@@Base+0x1d29>
  41cd6c:	cmp    QWORD PTR [rcx+0x28],rax
  41cd70:	ja     41cd60 <__flatcc_fb_parse@@Base+0x1080>
  41cd72:	cmp    QWORD PTR [rcx+0x30],rax
  41cd76:	jbe    41cd60 <__flatcc_fb_parse@@Base+0x1080>
  41cd78:	mov    rdx,QWORD PTR [rcx+0x318]
  41cd7f:	jmp    41da10 <__flatcc_fb_parse@@Base+0x1d30>
  41cd84:	test   rbp,rbp
  41cd87:	je     41d548 <__flatcc_fb_parse@@Base+0x1868>
  41cd8d:	mov    rax,QWORD PTR [rbp+0x0]
  41cd91:	xor    r9d,r9d
  41cd94:	lea    r10,[rip+0x117b4]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41cd9b:	test   rax,rax
  41cd9e:	je     41cda7 <__flatcc_fb_parse@@Base+0x10c7>
  41cda0:	mov    r9d,DWORD PTR [rbp+0x8]
  41cda4:	mov    r10,rax
  41cda7:	mov    rax,r14
  41cdaa:	cmp    QWORD PTR [rax+0x28],rbp
  41cdae:	jbe    41cdc2 <__flatcc_fb_parse@@Base+0x10e2>
  41cdb0:	mov    rax,QWORD PTR [rax]
  41cdb3:	test   rax,rax
  41cdb6:	je     41d35f <__flatcc_fb_parse@@Base+0x167f>
  41cdbc:	cmp    QWORD PTR [rax+0x28],rbp
  41cdc0:	ja     41cdb0 <__flatcc_fb_parse@@Base+0x10d0>
  41cdc2:	cmp    QWORD PTR [rax+0x30],rbp
  41cdc6:	jbe    41cdb0 <__flatcc_fb_parse@@Base+0x10d0>
  41cdc8:	mov    rdx,QWORD PTR [rax+0x318]
  41cdcf:	jmp    41d366 <__flatcc_fb_parse@@Base+0x1686>
  41cdd4:	xor    ecx,ecx
  41cdd6:	mov    QWORD PTR [rsi+0x40],rcx
  41cdda:	mov    QWORD PTR [r14+0x40],0x0
  41cde2:	mov    rdi,r14
  41cde5:	mov    rdx,0xfffffffffffffc39
  41cdec:	call   422110 <__flatcc_fb_clear_parser@@Base+0x3a0>
  41cdf1:	jmp    41c188 <__flatcc_fb_parse@@Base+0x4a8>
  41cdf6:	xor    ecx,ecx
  41cdf8:	mov    QWORD PTR [rsi+0x40],rcx
  41cdfc:	mov    QWORD PTR [r14+0x40],0x0
  41ce04:	mov    rdi,r14
  41ce07:	mov    rdx,0xfffffffffffffc29
  41ce0e:	call   422110 <__flatcc_fb_clear_parser@@Base+0x3a0>
  41ce13:	jmp    41c188 <__flatcc_fb_parse@@Base+0x4a8>
  41ce18:	xor    ecx,ecx
  41ce1a:	mov    QWORD PTR [rsi+0x40],rcx
  41ce1e:	mov    QWORD PTR [r14+0x40],0x0
  41ce26:	mov    rdi,r14
  41ce29:	mov    rdx,0xfffffffffffffc33
  41ce30:	call   422110 <__flatcc_fb_clear_parser@@Base+0x3a0>
  41ce35:	jmp    41c188 <__flatcc_fb_parse@@Base+0x4a8>
  41ce3a:	xor    ecx,ecx
  41ce3c:	mov    QWORD PTR [r13+0x40],rcx
  41ce40:	mov    QWORD PTR [r14+0x40],0x0
  41ce48:	mov    rbp,QWORD PTR [r14+0x48]
  41ce4c:	cmp    QWORD PTR [rbp+0x20],0x9
  41ce51:	jne    41d194 <__flatcc_fb_parse@@Base+0x14b4>
  41ce57:	mov    rdi,r14
  41ce5a:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41ce5f:	mov    QWORD PTR [r13+0x8],rbp
  41ce63:	test   rbp,rbp
  41ce66:	je     41daa0 <__flatcc_fb_parse@@Base+0x1dc0>
  41ce6c:	mov    rdi,r14
  41ce6f:	call   422cf0 <__flatcc_fb_clear_parser@@Base+0xf80>
  41ce74:	mov    QWORD PTR [r13+0x38],rax
  41ce78:	mov    rbx,QWORD PTR [r14+0x48]
  41ce7c:	cmp    QWORD PTR [rbx+0x20],0x7b
  41ce81:	jne    41d711 <__flatcc_fb_parse@@Base+0x1a31>
  41ce87:	mov    rdi,r14
  41ce8a:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41ce8f:	test   rbx,rbx
  41ce92:	je     41daa0 <__flatcc_fb_parse@@Base+0x1dc0>
  41ce98:	mov    rax,QWORD PTR [rsp+0x10]
  41ce9d:	mov    r12,QWORD PTR [rax]
  41cea0:	cmp    QWORD PTR [r12+0x20],0x9
  41cea6:	mov    QWORD PTR [rsp+0x20],r13
  41ceab:	jne    41d133 <__flatcc_fb_parse@@Base+0x1453>
  41ceb1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cebb:	nop    DWORD PTR [rax+rax*1+0x0]
  41cec0:	mov    rax,QWORD PTR [rsp+0x8]
  41cec5:	cmp    DWORD PTR [rax],0x9
  41cec8:	jg     41daa0 <__flatcc_fb_parse@@Base+0x1dc0>
  41cece:	mov    rbp,QWORD PTR [r14+0x60]
  41ced2:	lea    rax,[rbp+0xb0]
  41ced9:	cmp    rax,QWORD PTR [r14+0x50]
  41cedd:	jbe    41cf1b <__flatcc_fb_parse@@Base+0x123b>
  41cedf:	mov    edi,0x10000
  41cee4:	mov    esi,0x1
  41cee9:	call   406140 <calloc@plt>
  41ceee:	test   rax,rax
  41cef1:	je     41e0c7 <__flatcc_fb_parse@@Base+0x23e7>
  41cef7:	mov    rcx,QWORD PTR [r14+0x58]
  41cefb:	mov    QWORD PTR [rax],rcx
  41cefe:	mov    QWORD PTR [r14+0x58],rax
  41cf02:	lea    rbp,[rax+0x10]
  41cf06:	mov    QWORD PTR [r14+0x60],rbp
  41cf0a:	lea    rcx,[rax+0x10000]
  41cf11:	mov    QWORD PTR [r14+0x50],rcx
  41cf15:	add    rax,0xc0
  41cf1b:	mov    QWORD PTR [r14+0x60],rax
  41cf1f:	mov    rax,QWORD PTR [r13+0x28]
  41cf23:	mov    QWORD PTR [rbp+0x0],rax
  41cf27:	mov    WORD PTR [rbp+0x10],0x5
  41cf2d:	mov    QWORD PTR [r13+0x28],rbp
  41cf31:	mov    rax,QWORD PTR [r14+0x40]
  41cf35:	test   rax,rax
  41cf38:	je     41cf53 <__flatcc_fb_parse@@Base+0x1273>
  41cf3a:	xor    edx,edx
  41cf3c:	nop    DWORD PTR [rax+0x0]
  41cf40:	mov    rcx,rax
  41cf43:	mov    rax,QWORD PTR [rax]
  41cf46:	mov    QWORD PTR [rcx],rdx
  41cf49:	mov    rdx,rcx
  41cf4c:	test   rax,rax
  41cf4f:	jne    41cf40 <__flatcc_fb_parse@@Base+0x1260>
  41cf51:	jmp    41cf55 <__flatcc_fb_parse@@Base+0x1275>
  41cf53:	xor    ecx,ecx
  41cf55:	mov    QWORD PTR [rbp+0x68],rcx
  41cf59:	mov    QWORD PTR [r14+0x40],0x0
  41cf61:	mov    rdi,r14
  41cf64:	lea    rsi,[rsp+0x18]
  41cf69:	call   422b70 <__flatcc_fb_clear_parser@@Base+0xe00>
  41cf6e:	mov    rax,QWORD PTR [rsp+0x18]
  41cf73:	mov    QWORD PTR [rbp+0x18],rax
  41cf77:	mov    WORD PTR [rbp+0x28],0xc
  41cf7d:	mov    rcx,QWORD PTR [rax]
  41cf80:	test   rcx,rcx
  41cf83:	je     41cfa0 <__flatcc_fb_parse@@Base+0x12c0>
  41cf85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41cf8f:	nop
  41cf90:	mov    rax,rcx
  41cf93:	mov    rcx,QWORD PTR [rcx]
  41cf96:	test   rcx,rcx
  41cf99:	jne    41cf90 <__flatcc_fb_parse@@Base+0x12b0>
  41cf9b:	mov    QWORD PTR [rsp+0x18],rax
  41cfa0:	mov    rax,QWORD PTR [rax+0x8]
  41cfa4:	mov    QWORD PTR [rbp+0x8],rax
  41cfa8:	mov    rax,QWORD PTR [rsp+0x10]
  41cfad:	mov    r13,QWORD PTR [rax]
  41cfb0:	mov    rax,QWORD PTR [r13+0x20]
  41cfb4:	cmp    rax,0x3a
  41cfb8:	jne    41d0b6 <__flatcc_fb_parse@@Base+0x13d6>
  41cfbe:	mov    rdi,r14
  41cfc1:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41cfc6:	test   r13,r13
  41cfc9:	je     41d0aa <__flatcc_fb_parse@@Base+0x13ca>
  41cfcf:	lea    r13,[rbp+0x18]
  41cfd3:	mov    rax,QWORD PTR [r13+0x0]
  41cfd7:	cmp    QWORD PTR [rax],0x0
  41cfdb:	je     41d09f <__flatcc_fb_parse@@Base+0x13bf>
  41cfe1:	test   r12,r12
  41cfe4:	je     41d080 <__flatcc_fb_parse@@Base+0x13a0>
  41cfea:	mov    rax,QWORD PTR [r12]
  41cfee:	xor    r9d,r9d
  41cff1:	lea    r10,[rip+0x11557]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41cff8:	test   rax,rax
  41cffb:	je     41d005 <__flatcc_fb_parse@@Base+0x1325>
  41cffd:	mov    r9d,DWORD PTR [r12+0x8]
  41d002:	mov    r10,rax
  41d005:	mov    rax,r14
  41d008:	mov    QWORD PTR [rsp+0x28],r13
  41d00d:	cmp    QWORD PTR [rax+0x28],r12
  41d011:	jbe    41d02e <__flatcc_fb_parse@@Base+0x134e>
  41d013:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d01d:	nop    DWORD PTR [rax]
  41d020:	mov    rax,QWORD PTR [rax]
  41d023:	test   rax,rax
  41d026:	je     41d040 <__flatcc_fb_parse@@Base+0x1360>
  41d028:	cmp    QWORD PTR [rax+0x28],r12
  41d02c:	ja     41d020 <__flatcc_fb_parse@@Base+0x1340>
  41d02e:	cmp    QWORD PTR [rax+0x30],r12
  41d032:	jbe    41d020 <__flatcc_fb_parse@@Base+0x1340>
  41d034:	mov    r13,rbp
  41d037:	mov    rdx,QWORD PTR [rax+0x318]
  41d03e:	jmp    41d04a <__flatcc_fb_parse@@Base+0x136a>
  41d040:	mov    r13,rbp
  41d043:	lea    rdx,[rip+0x11505]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41d04a:	mov    rcx,QWORD PTR [r12+0x10]
  41d04f:	mov    r8,QWORD PTR [r12+0x18]
  41d054:	mov    rdi,r14
  41d057:	lea    rsi,[rip+0x28b92]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41d05e:	mov    eax,0x0
  41d063:	lea    rbp,[rip+0x29768]        # 4467d2 <fb_schema_table_deleted@@Base+0x108a>
  41d06a:	push   rbp
  41d06b:	push   r10
  41d06d:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41d072:	add    rsp,0x10
  41d076:	mov    rbp,r13
  41d079:	mov    r13,QWORD PTR [rsp+0x28]
  41d07e:	jmp    41d098 <__flatcc_fb_parse@@Base+0x13b8>
  41d080:	mov    rdi,r14
  41d083:	lea    rsi,[rip+0x28bb8]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41d08a:	lea    rdx,[rip+0x29741]        # 4467d2 <fb_schema_table_deleted@@Base+0x108a>
  41d091:	xor    eax,eax
  41d093:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41d098:	mov    rax,QWORD PTR [rsp+0x8]
  41d09d:	inc    DWORD PTR [rax]
  41d09f:	mov    rdi,r14
  41d0a2:	mov    rsi,r13
  41d0a5:	call   423460 <__flatcc_fb_clear_parser@@Base+0x16f0>
  41d0aa:	mov    rax,QWORD PTR [rsp+0x10]
  41d0af:	mov    r13,QWORD PTR [rax]
  41d0b2:	mov    rax,QWORD PTR [r13+0x20]
  41d0b6:	cmp    rax,0x3d
  41d0ba:	jne    41d0e1 <__flatcc_fb_parse@@Base+0x1401>
  41d0bc:	mov    rdi,r14
  41d0bf:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41d0c4:	test   r13,r13
  41d0c7:	je     41d0e1 <__flatcc_fb_parse@@Base+0x1401>
  41d0c9:	add    rbp,0x48
  41d0cd:	mov    rdi,r14
  41d0d0:	mov    rsi,rbp
  41d0d3:	xor    edx,edx
  41d0d5:	lea    rcx,[rip+0x29658]        # 446734 <fb_schema_table_deleted@@Base+0xfec>
  41d0dc:	call   422f80 <__flatcc_fb_clear_parser@@Base+0x1210>
  41d0e1:	mov    rax,QWORD PTR [rsp+0x10]
  41d0e6:	mov    r12,QWORD PTR [rax]
  41d0e9:	mov    rax,QWORD PTR [r12+0x20]
  41d0ee:	cmp    rax,0x2c
  41d0f2:	jne    41de2f <__flatcc_fb_parse@@Base+0x214f>
  41d0f8:	mov    rdi,r14
  41d0fb:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41d100:	test   r12,r12
  41d103:	mov    r12,QWORD PTR [r14+0x48]
  41d107:	mov    rax,QWORD PTR [r12+0x20]
  41d10c:	mov    r13,QWORD PTR [rsp+0x20]
  41d111:	je     41de34 <__flatcc_fb_parse@@Base+0x2154>
  41d117:	mov    QWORD PTR [r14+0x40],0x0
  41d11f:	cmp    rax,0x9
  41d123:	je     41cec0 <__flatcc_fb_parse@@Base+0x11e0>
  41d129:	cmp    rax,0x7d
  41d12d:	je     41de42 <__flatcc_fb_parse@@Base+0x2162>
  41d133:	test   r12,r12
  41d136:	je     41da7b <__flatcc_fb_parse@@Base+0x1d9b>
  41d13c:	mov    rax,QWORD PTR [r12]
  41d140:	xor    r9d,r9d
  41d143:	lea    rbp,[rip+0x11405]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41d14a:	mov    r10,rbp
  41d14d:	test   rax,rax
  41d150:	je     41d15a <__flatcc_fb_parse@@Base+0x147a>
  41d152:	mov    r9d,DWORD PTR [r12+0x8]
  41d157:	mov    r10,rax
  41d15a:	mov    rax,r14
  41d15d:	cmp    QWORD PTR [rax+0x28],r12
  41d161:	jbe    41d182 <__flatcc_fb_parse@@Base+0x14a2>
  41d163:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d16d:	nop    DWORD PTR [rax]
  41d170:	mov    rax,QWORD PTR [rax]
  41d173:	test   rax,rax
  41d176:	je     41da46 <__flatcc_fb_parse@@Base+0x1d66>
  41d17c:	cmp    QWORD PTR [rax+0x28],r12
  41d180:	ja     41d170 <__flatcc_fb_parse@@Base+0x1490>
  41d182:	cmp    QWORD PTR [rax+0x30],r12
  41d186:	jbe    41d170 <__flatcc_fb_parse@@Base+0x1490>
  41d188:	mov    rdx,QWORD PTR [rax+0x318]
  41d18f:	jmp    41da4d <__flatcc_fb_parse@@Base+0x1d6d>
  41d194:	test   rbp,rbp
  41d197:	je     41d574 <__flatcc_fb_parse@@Base+0x1894>
  41d19d:	mov    rax,QWORD PTR [rbp+0x0]
  41d1a1:	xor    r9d,r9d
  41d1a4:	lea    r10,[rip+0x113a4]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41d1ab:	test   rax,rax
  41d1ae:	je     41d1b7 <__flatcc_fb_parse@@Base+0x14d7>
  41d1b0:	mov    r9d,DWORD PTR [rbp+0x8]
  41d1b4:	mov    r10,rax
  41d1b7:	mov    rax,r14
  41d1ba:	cmp    QWORD PTR [rax+0x28],rbp
  41d1be:	jbe    41d1d2 <__flatcc_fb_parse@@Base+0x14f2>
  41d1c0:	mov    rax,QWORD PTR [rax]
  41d1c3:	test   rax,rax
  41d1c6:	je     41d395 <__flatcc_fb_parse@@Base+0x16b5>
  41d1cc:	cmp    QWORD PTR [rax+0x28],rbp
  41d1d0:	ja     41d1c0 <__flatcc_fb_parse@@Base+0x14e0>
  41d1d2:	cmp    QWORD PTR [rax+0x30],rbp
  41d1d6:	jbe    41d1c0 <__flatcc_fb_parse@@Base+0x14e0>
  41d1d8:	mov    rdx,QWORD PTR [rax+0x318]
  41d1df:	jmp    41d39c <__flatcc_fb_parse@@Base+0x16bc>
  41d1e4:	mov    rdi,r14
  41d1e7:	lea    rsi,[rip+0x28a54]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41d1ee:	lea    rdx,[rip+0x28ee0]        # 4460d5 <fb_schema_table_deleted@@Base+0x98d>
  41d1f5:	jmp    41c17a <__flatcc_fb_parse@@Base+0x49a>
  41d1fa:	mov    rdi,r14
  41d1fd:	lea    rsi,[rip+0x28a3e]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41d204:	lea    rdx,[rip+0x28e36]        # 446041 <fb_schema_table_deleted@@Base+0x8f9>
  41d20b:	jmp    41c17a <__flatcc_fb_parse@@Base+0x49a>
  41d210:	mov    rdi,r14
  41d213:	lea    rsi,[rip+0x28a28]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41d21a:	lea    rdx,[rip+0x28e82]        # 4460a3 <fb_schema_table_deleted@@Base+0x95b>
  41d221:	jmp    41c17a <__flatcc_fb_parse@@Base+0x49a>
  41d226:	mov    rdi,r14
  41d229:	lea    rsi,[rip+0x28a12]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41d230:	lea    rdx,[rip+0x28ec6]        # 4460fd <fb_schema_table_deleted@@Base+0x9b5>
  41d237:	jmp    41c17a <__flatcc_fb_parse@@Base+0x49a>
  41d23c:	mov    rdi,r14
  41d23f:	lea    rsi,[rip+0x289fc]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41d246:	lea    rdx,[rip+0x28ecb]        # 446118 <fb_schema_table_deleted@@Base+0x9d0>
  41d24d:	jmp    41c17a <__flatcc_fb_parse@@Base+0x49a>
  41d252:	lea    rdx,[rip+0x112f6]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41d259:	mov    rcx,QWORD PTR [rbp+0x10]
  41d25d:	mov    r8,QWORD PTR [rbp+0x18]
  41d261:	mov    rdi,r14
  41d264:	lea    rsi,[rip+0x28985]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41d26b:	mov    eax,0x0
  41d270:	lea    rbx,[rip+0x29015]        # 44628c <fb_schema_table_deleted@@Base+0xb44>
  41d277:	push   rbx
  41d278:	push   r10
  41d27a:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41d27f:	add    rsp,0x10
  41d283:	jmp    41d29d <__flatcc_fb_parse@@Base+0x15bd>
  41d285:	mov    rdi,r14
  41d288:	lea    rsi,[rip+0x289b3]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41d28f:	lea    rdx,[rip+0x28ff6]        # 44628c <fb_schema_table_deleted@@Base+0xb44>
  41d296:	xor    eax,eax
  41d298:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41d29d:	mov    rax,QWORD PTR [rsp+0x8]
  41d2a2:	inc    DWORD PTR [rax]
  41d2a4:	mov    rdi,r14
  41d2a7:	mov    rsi,QWORD PTR [rsp+0x50]
  41d2ac:	call   422b70 <__flatcc_fb_clear_parser@@Base+0xe00>
  41d2b1:	mov    rax,QWORD PTR [r14+0x340]
  41d2b8:	mov    QWORD PTR [r14+0x258],rax
  41d2bf:	mov    QWORD PTR [r14+0x40],0x0
  41d2c7:	mov    rsi,QWORD PTR [r14+0x48]
  41d2cb:	cmp    QWORD PTR [rsi+0x20],0x3b
  41d2d0:	je     41d965 <__flatcc_fb_parse@@Base+0x1c85>
  41d2d6:	mov    rdi,r14
  41d2d9:	lea    rdx,[rip+0x28fc2]        # 4462a2 <fb_schema_table_deleted@@Base+0xb5a>
  41d2e0:	mov    rcx,rbp
  41d2e3:	xor    r8d,r8d
  41d2e6:	xor    r9d,r9d
  41d2e9:	call   41b6e0 <__flatcc_error_report@@Base>
  41d2ee:	jmp    41c188 <__flatcc_fb_parse@@Base+0x4a8>
  41d2f3:	lea    rdx,[rip+0x11255]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41d2fa:	mov    rcx,QWORD PTR [rbp+0x10]
  41d2fe:	mov    r8,QWORD PTR [rbp+0x18]
  41d302:	mov    rdi,r14
  41d305:	lea    rsi,[rip+0x288e4]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41d30c:	mov    eax,0x0
  41d311:	lea    rbp,[rip+0x28f0a]        # 446222 <fb_schema_table_deleted@@Base+0xada>
  41d318:	push   rbp
  41d319:	push   r10
  41d31b:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41d320:	add    rsp,0x10
  41d324:	jmp    41d4bc <__flatcc_fb_parse@@Base+0x17dc>
  41d329:	lea    rdx,[rip+0x1121f]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41d330:	mov    rcx,QWORD PTR [rbp+0x10]
  41d334:	mov    r8,QWORD PTR [rbp+0x18]
  41d338:	mov    rdi,r14
  41d33b:	lea    rsi,[rip+0x288ae]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41d342:	mov    eax,0x0
  41d347:	lea    rbp,[rip+0x28e75]        # 4461c3 <fb_schema_table_deleted@@Base+0xa7b>
  41d34e:	push   rbp
  41d34f:	push   r10
  41d351:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41d356:	add    rsp,0x10
  41d35a:	jmp    41d510 <__flatcc_fb_parse@@Base+0x1830>
  41d35f:	lea    rdx,[rip+0x111e9]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41d366:	mov    rcx,QWORD PTR [rbp+0x10]
  41d36a:	mov    r8,QWORD PTR [rbp+0x18]
  41d36e:	mov    rdi,r14
  41d371:	lea    rsi,[rip+0x28878]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41d378:	mov    eax,0x0
  41d37d:	lea    rbp,[rip+0x2933b]        # 4466bf <fb_schema_table_deleted@@Base+0xf77>
  41d384:	push   rbp
  41d385:	push   r10
  41d387:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41d38c:	add    rsp,0x10
  41d390:	jmp    41d560 <__flatcc_fb_parse@@Base+0x1880>
  41d395:	lea    rdx,[rip+0x111b3]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41d39c:	mov    rcx,QWORD PTR [rbp+0x10]
  41d3a0:	mov    r8,QWORD PTR [rbp+0x18]
  41d3a4:	mov    rdi,r14
  41d3a7:	lea    rsi,[rip+0x28842]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41d3ae:	mov    eax,0x0
  41d3b3:	lea    rbp,[rip+0x293b7]        # 446771 <fb_schema_table_deleted@@Base+0x1029>
  41d3ba:	push   rbp
  41d3bb:	push   r10
  41d3bd:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41d3c2:	add    rsp,0x10
  41d3c6:	jmp    41d58c <__flatcc_fb_parse@@Base+0x18ac>
  41d3cb:	lea    rdx,[rip+0x1117d]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41d3d2:	mov    rcx,QWORD PTR [rbp+0x10]
  41d3d6:	mov    r8,QWORD PTR [rbp+0x18]
  41d3da:	mov    rdi,r14
  41d3dd:	lea    rsi,[rip+0x2880c]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41d3e4:	mov    eax,0x0
  41d3e9:	lea    rbp,[rip+0x28ed7]        # 4462c7 <fb_schema_table_deleted@@Base+0xb7f>
  41d3f0:	push   rbp
  41d3f1:	push   r10
  41d3f3:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41d3f8:	add    rsp,0x10
  41d3fc:	jmp    41d5b8 <__flatcc_fb_parse@@Base+0x18d8>
  41d401:	mov    rax,QWORD PTR [rsp+0x10]
  41d406:	mov    rax,QWORD PTR [rax]
  41d409:	mov    rcx,QWORD PTR [rax+0x20]
  41d40d:	cmp    rcx,0x9
  41d411:	jne    41d444 <__flatcc_fb_parse@@Base+0x1764>
  41d413:	mov    rdi,r14
  41d416:	lea    rsi,[rsp+0x18]
  41d41b:	call   422b70 <__flatcc_fb_clear_parser@@Base+0xe00>
  41d420:	mov    QWORD PTR [r14+0x40],0x0
  41d428:	mov    rsi,QWORD PTR [r14+0x48]
  41d42c:	cmp    QWORD PTR [rsi+0x20],0x3b
  41d431:	jne    41d65d <__flatcc_fb_parse@@Base+0x197d>
  41d437:	mov    rdi,r14
  41d43a:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41d43f:	jmp    41d675 <__flatcc_fb_parse@@Base+0x1995>
  41d444:	test   rax,rax
  41d447:	je     41d797 <__flatcc_fb_parse@@Base+0x1ab7>
  41d44d:	mov    rcx,QWORD PTR [rax]
  41d450:	xor    r9d,r9d
  41d453:	lea    rbp,[rip+0x110f5]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41d45a:	mov    r10,rbp
  41d45d:	test   rcx,rcx
  41d460:	je     41d469 <__flatcc_fb_parse@@Base+0x1789>
  41d462:	mov    r9d,DWORD PTR [rax+0x8]
  41d466:	mov    r10,rcx
  41d469:	mov    rcx,r14
  41d46c:	cmp    QWORD PTR [rcx+0x28],rax
  41d470:	jbe    41d492 <__flatcc_fb_parse@@Base+0x17b2>
  41d472:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d47c:	nop    DWORD PTR [rax+0x0]
  41d480:	mov    rcx,QWORD PTR [rcx]
  41d483:	test   rcx,rcx
  41d486:	je     41d764 <__flatcc_fb_parse@@Base+0x1a84>
  41d48c:	cmp    QWORD PTR [rcx+0x28],rax
  41d490:	ja     41d480 <__flatcc_fb_parse@@Base+0x17a0>
  41d492:	cmp    QWORD PTR [rcx+0x30],rax
  41d496:	jbe    41d480 <__flatcc_fb_parse@@Base+0x17a0>
  41d498:	mov    rdx,QWORD PTR [rcx+0x318]
  41d49f:	jmp    41d76b <__flatcc_fb_parse@@Base+0x1a8b>
  41d4a4:	mov    rdi,r14
  41d4a7:	lea    rsi,[rip+0x28794]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41d4ae:	lea    rdx,[rip+0x28d6d]        # 446222 <fb_schema_table_deleted@@Base+0xada>
  41d4b5:	xor    eax,eax
  41d4b7:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41d4bc:	mov    rax,QWORD PTR [rsp+0x8]
  41d4c1:	inc    DWORD PTR [rax]
  41d4c3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d4cd:	nop    DWORD PTR [rax]
  41d4d0:	mov    rax,QWORD PTR [rsp+0x10]
  41d4d5:	mov    rax,QWORD PTR [rax]
  41d4d8:	mov    rbp,QWORD PTR [rax+0x20]
  41d4dc:	test   rbp,rbp
  41d4df:	je     41c188 <__flatcc_fb_parse@@Base+0x4a8>
  41d4e5:	mov    rdi,r14
  41d4e8:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41d4ed:	cmp    rbp,0x3b
  41d4f1:	jne    41d4d0 <__flatcc_fb_parse@@Base+0x17f0>
  41d4f3:	jmp    41de03 <__flatcc_fb_parse@@Base+0x2123>
  41d4f8:	mov    rdi,r14
  41d4fb:	lea    rsi,[rip+0x28740]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41d502:	lea    rdx,[rip+0x28cba]        # 4461c3 <fb_schema_table_deleted@@Base+0xa7b>
  41d509:	xor    eax,eax
  41d50b:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41d510:	mov    rax,QWORD PTR [rsp+0x8]
  41d515:	inc    DWORD PTR [rax]
  41d517:	nop    WORD PTR [rax+rax*1+0x0]
  41d520:	mov    rax,QWORD PTR [rsp+0x10]
  41d525:	mov    rax,QWORD PTR [rax]
  41d528:	mov    rbp,QWORD PTR [rax+0x20]
  41d52c:	test   rbp,rbp
  41d52f:	je     41c188 <__flatcc_fb_parse@@Base+0x4a8>
  41d535:	mov    rdi,r14
  41d538:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41d53d:	cmp    rbp,0x3b
  41d541:	jne    41d520 <__flatcc_fb_parse@@Base+0x1840>
  41d543:	jmp    41de03 <__flatcc_fb_parse@@Base+0x2123>
  41d548:	mov    rdi,r14
  41d54b:	lea    rsi,[rip+0x286f0]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41d552:	lea    rdx,[rip+0x29166]        # 4466bf <fb_schema_table_deleted@@Base+0xf77>
  41d559:	xor    eax,eax
  41d55b:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41d560:	mov    rax,QWORD PTR [rsp+0x8]
  41d565:	inc    DWORD PTR [rax]
  41d567:	mov    QWORD PTR [r13+0x8],0x0
  41d56f:	jmp    41dde0 <__flatcc_fb_parse@@Base+0x2100>
  41d574:	mov    rdi,r14
  41d577:	lea    rsi,[rip+0x286c4]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41d57e:	lea    rdx,[rip+0x291ec]        # 446771 <fb_schema_table_deleted@@Base+0x1029>
  41d585:	xor    eax,eax
  41d587:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41d58c:	mov    rax,QWORD PTR [rsp+0x8]
  41d591:	inc    DWORD PTR [rax]
  41d593:	mov    QWORD PTR [r13+0x8],0x0
  41d59b:	jmp    41daa0 <__flatcc_fb_parse@@Base+0x1dc0>
  41d5a0:	mov    rdi,r14
  41d5a3:	lea    rsi,[rip+0x28698]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41d5aa:	lea    rdx,[rip+0x28d16]        # 4462c7 <fb_schema_table_deleted@@Base+0xb7f>
  41d5b1:	xor    eax,eax
  41d5b3:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41d5b8:	mov    rax,QWORD PTR [rsp+0x8]
  41d5bd:	inc    DWORD PTR [rax]
  41d5bf:	mov    rax,QWORD PTR [rsp+0x10]
  41d5c4:	mov    rax,QWORD PTR [rax]
  41d5c7:	cmp    QWORD PTR [rax+0x20],0x3b
  41d5cc:	je     41d965 <__flatcc_fb_parse@@Base+0x1c85>
  41d5d2:	test   rax,rax
  41d5d5:	je     41d647 <__flatcc_fb_parse@@Base+0x1967>
  41d5d7:	mov    rcx,QWORD PTR [rax]
  41d5da:	xor    r9d,r9d
  41d5dd:	lea    rbp,[rip+0x10f6b]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41d5e4:	mov    r10,rbp
  41d5e7:	test   rcx,rcx
  41d5ea:	je     41d5f3 <__flatcc_fb_parse@@Base+0x1913>
  41d5ec:	mov    r9d,DWORD PTR [rax+0x8]
  41d5f0:	mov    r10,rcx
  41d5f3:	mov    rcx,r14
  41d5f6:	cmp    QWORD PTR [rcx+0x28],rax
  41d5fa:	jbe    41d60e <__flatcc_fb_parse@@Base+0x192e>
  41d5fc:	nop    DWORD PTR [rax+0x0]
  41d600:	mov    rcx,QWORD PTR [rcx]
  41d603:	test   rcx,rcx
  41d606:	je     41d61d <__flatcc_fb_parse@@Base+0x193d>
  41d608:	cmp    QWORD PTR [rcx+0x28],rax
  41d60c:	ja     41d600 <__flatcc_fb_parse@@Base+0x1920>
  41d60e:	cmp    QWORD PTR [rcx+0x30],rax
  41d612:	jbe    41d600 <__flatcc_fb_parse@@Base+0x1920>
  41d614:	mov    rdx,QWORD PTR [rcx+0x318]
  41d61b:	jmp    41d624 <__flatcc_fb_parse@@Base+0x1944>
  41d61d:	lea    rdx,[rip+0x10f2b]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41d624:	mov    rcx,QWORD PTR [rax+0x10]
  41d628:	mov    r8,QWORD PTR [rax+0x18]
  41d62c:	mov    rdi,r14
  41d62f:	lea    rsi,[rip+0x285ba]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41d636:	mov    eax,0x0
  41d63b:	lea    rbp,[rip+0x28cc6]        # 446308 <fb_schema_table_deleted@@Base+0xbc0>
  41d642:	jmp    41d9e2 <__flatcc_fb_parse@@Base+0x1d02>
  41d647:	mov    rdi,r14
  41d64a:	lea    rsi,[rip+0x285f1]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41d651:	lea    rdx,[rip+0x28cb0]        # 446308 <fb_schema_table_deleted@@Base+0xbc0>
  41d658:	jmp    41c17a <__flatcc_fb_parse@@Base+0x49a>
  41d65d:	mov    rdi,r14
  41d660:	lea    rdx,[rip+0x28af7]        # 44615e <fb_schema_table_deleted@@Base+0xa16>
  41d667:	mov    rcx,rbp
  41d66a:	xor    r8d,r8d
  41d66d:	xor    r9d,r9d
  41d670:	call   41b6e0 <__flatcc_error_report@@Base>
  41d675:	mov    r12,QWORD PTR [rsp+0x18]
  41d67a:	mov    rdi,QWORD PTR [r14+0x260]
  41d681:	mov    rsi,r12
  41d684:	xor    edx,edx
  41d686:	call   419e20 <fb_scope_table_find@@Base>
  41d68b:	mov    rbp,rax
  41d68e:	test   rax,rax
  41d691:	jne    41d705 <__flatcc_fb_parse@@Base+0x1a25>
  41d693:	mov    rbp,QWORD PTR [r14+0x60]
  41d697:	lea    rax,[rbp+0x40]
  41d69b:	cmp    rax,QWORD PTR [r14+0x50]
  41d69f:	jbe    41d6db <__flatcc_fb_parse@@Base+0x19fb>
  41d6a1:	mov    edi,0x10000
  41d6a6:	mov    esi,0x1
  41d6ab:	call   406140 <calloc@plt>
  41d6b0:	test   rax,rax
  41d6b3:	je     41e0c7 <__flatcc_fb_parse@@Base+0x23e7>
  41d6b9:	mov    rcx,QWORD PTR [r14+0x58]
  41d6bd:	mov    QWORD PTR [rax],rcx
  41d6c0:	mov    QWORD PTR [r14+0x58],rax
  41d6c4:	lea    rbp,[rax+0x10]
  41d6c8:	mov    QWORD PTR [r14+0x60],rbp
  41d6cc:	lea    rcx,[rax+0x10000]
  41d6d3:	mov    QWORD PTR [r14+0x50],rcx
  41d6d7:	add    rax,0x50
  41d6db:	mov    QWORD PTR [r14+0x60],rax
  41d6df:	mov    QWORD PTR [rbp+0x0],r12
  41d6e3:	mov    rax,QWORD PTR [rsp+0x38]
  41d6e8:	vmovups xmm0,XMMWORD PTR [rax]
  41d6ec:	vmovups XMMWORD PTR [rbp+0x28],xmm0
  41d6f1:	mov    rdi,QWORD PTR [r14+0x260]
  41d6f8:	mov    rsi,rbp
  41d6fb:	mov    edx,0x1
  41d700:	call   419e10 <fb_scope_table_insert_item@@Base>
  41d705:	mov    QWORD PTR [r14+0x340],rbp
  41d70c:	jmp    41c188 <__flatcc_fb_parse@@Base+0x4a8>
  41d711:	test   rbx,rbx
  41d714:	je     41d88f <__flatcc_fb_parse@@Base+0x1baf>
  41d71a:	mov    rax,QWORD PTR [rbx]
  41d71d:	xor    r9d,r9d
  41d720:	lea    rbp,[rip+0x10e28]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41d727:	mov    r10,rbp
  41d72a:	test   rax,rax
  41d72d:	je     41d736 <__flatcc_fb_parse@@Base+0x1a56>
  41d72f:	mov    r9d,DWORD PTR [rbx+0x8]
  41d733:	mov    r10,rax
  41d736:	mov    rax,r14
  41d739:	cmp    QWORD PTR [rax+0x28],rbx
  41d73d:	jbe    41d752 <__flatcc_fb_parse@@Base+0x1a72>
  41d73f:	nop
  41d740:	mov    rax,QWORD PTR [rax]
  41d743:	test   rax,rax
  41d746:	je     41d84f <__flatcc_fb_parse@@Base+0x1b6f>
  41d74c:	cmp    QWORD PTR [rax+0x28],rbx
  41d750:	ja     41d740 <__flatcc_fb_parse@@Base+0x1a60>
  41d752:	cmp    QWORD PTR [rax+0x30],rbx
  41d756:	jbe    41d740 <__flatcc_fb_parse@@Base+0x1a60>
  41d758:	mov    rdx,QWORD PTR [rax+0x318]
  41d75f:	jmp    41d856 <__flatcc_fb_parse@@Base+0x1b76>
  41d764:	lea    rdx,[rip+0x10de4]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41d76b:	mov    rcx,QWORD PTR [rax+0x10]
  41d76f:	mov    r8,QWORD PTR [rax+0x18]
  41d773:	mov    rdi,r14
  41d776:	lea    rsi,[rip+0x28473]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41d77d:	mov    eax,0x0
  41d782:	lea    rbp,[rip+0x289b5]        # 44613e <fb_schema_table_deleted@@Base+0x9f6>
  41d789:	push   rbp
  41d78a:	push   r10
  41d78c:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41d791:	add    rsp,0x10
  41d795:	jmp    41d7af <__flatcc_fb_parse@@Base+0x1acf>
  41d797:	mov    rdi,r14
  41d79a:	lea    rsi,[rip+0x284a1]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41d7a1:	lea    rdx,[rip+0x28996]        # 44613e <fb_schema_table_deleted@@Base+0x9f6>
  41d7a8:	xor    eax,eax
  41d7aa:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41d7af:	mov    rax,QWORD PTR [rsp+0x8]
  41d7b4:	inc    DWORD PTR [rax]
  41d7b6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d7c0:	mov    rax,QWORD PTR [rsp+0x10]
  41d7c5:	mov    rax,QWORD PTR [rax]
  41d7c8:	mov    rbp,QWORD PTR [rax+0x20]
  41d7cc:	test   rbp,rbp
  41d7cf:	je     41c188 <__flatcc_fb_parse@@Base+0x4a8>
  41d7d5:	mov    rdi,r14
  41d7d8:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41d7dd:	cmp    rbp,0x3b
  41d7e1:	jne    41d7c0 <__flatcc_fb_parse@@Base+0x1ae0>
  41d7e3:	jmp    41de03 <__flatcc_fb_parse@@Base+0x2123>
  41d7e8:	lea    rdx,[rip+0x10d60]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41d7ef:	mov    rcx,QWORD PTR [rbp+0x10]
  41d7f3:	mov    r8,QWORD PTR [rbp+0x18]
  41d7f7:	mov    rdi,r14
  41d7fa:	lea    rsi,[rip+0x283ef]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41d801:	mov    eax,0x0
  41d806:	lea    rbp,[rip+0x28adc]        # 4462e9 <fb_schema_table_deleted@@Base+0xba1>
  41d80d:	push   rbp
  41d80e:	push   r10
  41d810:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41d815:	add    rsp,0x10
  41d819:	inc    DWORD PTR [r14+0xd0]
  41d820:	jmp    41d5bf <__flatcc_fb_parse@@Base+0x18df>
  41d825:	lea    rdx,[rip+0x10d23]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41d82c:	mov    rcx,QWORD PTR [rax+0x10]
  41d830:	mov    r8,QWORD PTR [rax+0x18]
  41d834:	mov    rdi,r14
  41d837:	lea    rsi,[rip+0x283b2]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41d83e:	mov    eax,0x0
  41d843:	lea    rbp,[rip+0x289a0]        # 4461ea <fb_schema_table_deleted@@Base+0xaa2>
  41d84a:	jmp    41d9e2 <__flatcc_fb_parse@@Base+0x1d02>
  41d84f:	lea    rdx,[rip+0x10cf9]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41d856:	mov    rcx,QWORD PTR [rbx+0x10]
  41d85a:	mov    r8,QWORD PTR [rbx+0x18]
  41d85e:	mov    rdi,r14
  41d861:	lea    rsi,[rip+0x28388]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41d868:	mov    eax,0x0
  41d86d:	lea    rbp,[rip+0x28f23]        # 446797 <fb_schema_table_deleted@@Base+0x104f>
  41d874:	jmp    41da6d <__flatcc_fb_parse@@Base+0x1d8d>
  41d879:	mov    rdi,r14
  41d87c:	lea    rsi,[rip+0x283bf]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41d883:	lea    rdx,[rip+0x28960]        # 4461ea <fb_schema_table_deleted@@Base+0xaa2>
  41d88a:	jmp    41c17a <__flatcc_fb_parse@@Base+0x49a>
  41d88f:	mov    rdi,r14
  41d892:	lea    rsi,[rip+0x283a9]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41d899:	lea    rdx,[rip+0x28ef7]        # 446797 <fb_schema_table_deleted@@Base+0x104f>
  41d8a0:	jmp    41da8c <__flatcc_fb_parse@@Base+0x1dac>
  41d8a5:	test   rax,rax
  41d8a8:	je     41db0c <__flatcc_fb_parse@@Base+0x1e2c>
  41d8ae:	mov    rcx,QWORD PTR [rax]
  41d8b1:	xor    r9d,r9d
  41d8b4:	lea    rbp,[rip+0x10c94]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41d8bb:	mov    r10,rbp
  41d8be:	test   rcx,rcx
  41d8c1:	je     41d8ca <__flatcc_fb_parse@@Base+0x1bea>
  41d8c3:	mov    r9d,DWORD PTR [rax+0x8]
  41d8c7:	mov    r10,rcx
  41d8ca:	mov    rcx,r14
  41d8cd:	cmp    QWORD PTR [rcx+0x28],rax
  41d8d1:	jbe    41d8f2 <__flatcc_fb_parse@@Base+0x1c12>
  41d8d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41d8dd:	nop    DWORD PTR [rax]
  41d8e0:	mov    rcx,QWORD PTR [rcx]
  41d8e3:	test   rcx,rcx
  41d8e6:	je     41dad9 <__flatcc_fb_parse@@Base+0x1df9>
  41d8ec:	cmp    QWORD PTR [rcx+0x28],rax
  41d8f0:	ja     41d8e0 <__flatcc_fb_parse@@Base+0x1c00>
  41d8f2:	cmp    QWORD PTR [rcx+0x30],rax
  41d8f6:	jbe    41d8e0 <__flatcc_fb_parse@@Base+0x1c00>
  41d8f8:	mov    rdx,QWORD PTR [rcx+0x318]
  41d8ff:	jmp    41dae0 <__flatcc_fb_parse@@Base+0x1e00>
  41d904:	lea    rdx,[rip+0x10c44]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41d90b:	mov    rcx,QWORD PTR [rbp+0x10]
  41d90f:	mov    r8,QWORD PTR [rbp+0x18]
  41d913:	mov    rdi,r14
  41d916:	lea    rsi,[rip+0x282d3]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41d91d:	mov    eax,0x0
  41d922:	lea    rbp,[rip+0x28921]        # 44624a <fb_schema_table_deleted@@Base+0xb02>
  41d929:	push   rbp
  41d92a:	push   r10
  41d92c:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41d931:	add    rsp,0x10
  41d935:	jmp    41d94f <__flatcc_fb_parse@@Base+0x1c6f>
  41d937:	mov    rdi,r14
  41d93a:	lea    rsi,[rip+0x28301]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41d941:	lea    rdx,[rip+0x28902]        # 44624a <fb_schema_table_deleted@@Base+0xb02>
  41d948:	xor    eax,eax
  41d94a:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41d94f:	mov    rax,QWORD PTR [rsp+0x8]
  41d954:	inc    DWORD PTR [rax]
  41d956:	mov    rax,QWORD PTR [rsp+0x10]
  41d95b:	mov    rax,QWORD PTR [rax]
  41d95e:	cmp    QWORD PTR [rax+0x20],0x3b
  41d963:	jne    41d972 <__flatcc_fb_parse@@Base+0x1c92>
  41d965:	mov    rdi,r14
  41d968:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41d96d:	jmp    41c188 <__flatcc_fb_parse@@Base+0x4a8>
  41d972:	test   rax,rax
  41d975:	je     41d9f3 <__flatcc_fb_parse@@Base+0x1d13>
  41d97b:	mov    rcx,QWORD PTR [rax]
  41d97e:	xor    r9d,r9d
  41d981:	lea    rbp,[rip+0x10bc7]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41d988:	mov    r10,rbp
  41d98b:	test   rcx,rcx
  41d98e:	je     41d997 <__flatcc_fb_parse@@Base+0x1cb7>
  41d990:	mov    r9d,DWORD PTR [rax+0x8]
  41d994:	mov    r10,rcx
  41d997:	mov    rcx,r14
  41d99a:	cmp    QWORD PTR [rcx+0x28],rax
  41d99e:	jbe    41d9ae <__flatcc_fb_parse@@Base+0x1cce>
  41d9a0:	mov    rcx,QWORD PTR [rcx]
  41d9a3:	test   rcx,rcx
  41d9a6:	je     41d9bd <__flatcc_fb_parse@@Base+0x1cdd>
  41d9a8:	cmp    QWORD PTR [rcx+0x28],rax
  41d9ac:	ja     41d9a0 <__flatcc_fb_parse@@Base+0x1cc0>
  41d9ae:	cmp    QWORD PTR [rcx+0x30],rax
  41d9b2:	jbe    41d9a0 <__flatcc_fb_parse@@Base+0x1cc0>
  41d9b4:	mov    rdx,QWORD PTR [rcx+0x318]
  41d9bb:	jmp    41d9c4 <__flatcc_fb_parse@@Base+0x1ce4>
  41d9bd:	lea    rdx,[rip+0x10b8b]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41d9c4:	mov    rcx,QWORD PTR [rax+0x10]
  41d9c8:	mov    r8,QWORD PTR [rax+0x18]
  41d9cc:	mov    rdi,r14
  41d9cf:	lea    rsi,[rip+0x2821a]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41d9d6:	mov    eax,0x0
  41d9db:	lea    rbp,[rip+0x2888d]        # 44626f <fb_schema_table_deleted@@Base+0xb27>
  41d9e2:	push   rbp
  41d9e3:	push   r10
  41d9e5:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41d9ea:	add    rsp,0x10
  41d9ee:	jmp    41c181 <__flatcc_fb_parse@@Base+0x4a1>
  41d9f3:	mov    rdi,r14
  41d9f6:	lea    rsi,[rip+0x28245]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41d9fd:	lea    rdx,[rip+0x2886b]        # 44626f <fb_schema_table_deleted@@Base+0xb27>
  41da04:	jmp    41c17a <__flatcc_fb_parse@@Base+0x49a>
  41da09:	lea    rdx,[rip+0x10b3f]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41da10:	mov    rcx,QWORD PTR [rax+0x10]
  41da14:	mov    r8,QWORD PTR [rax+0x18]
  41da18:	mov    rdi,r14
  41da1b:	lea    rsi,[rip+0x281ce]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41da22:	mov    eax,0x0
  41da27:	lea    rbp,[rip+0x28cb6]        # 4466e4 <fb_schema_table_deleted@@Base+0xf9c>
  41da2e:	push   rbp
  41da2f:	push   r10
  41da31:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41da36:	add    rsp,0x10
  41da3a:	inc    DWORD PTR [r14+0xd0]
  41da41:	jmp    41db2b <__flatcc_fb_parse@@Base+0x1e4b>
  41da46:	lea    rdx,[rip+0x10b02]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41da4d:	mov    rcx,QWORD PTR [r12+0x10]
  41da52:	mov    r8,QWORD PTR [r12+0x18]
  41da57:	mov    rdi,r14
  41da5a:	lea    rsi,[rip+0x2818f]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41da61:	mov    eax,0x0
  41da66:	lea    rbp,[rip+0x28d49]        # 4467b6 <fb_schema_table_deleted@@Base+0x106e>
  41da6d:	push   rbp
  41da6e:	push   r10
  41da70:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41da75:	add    rsp,0x10
  41da79:	jmp    41da93 <__flatcc_fb_parse@@Base+0x1db3>
  41da7b:	mov    rdi,r14
  41da7e:	lea    rsi,[rip+0x281bd]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41da85:	lea    rdx,[rip+0x28d2a]        # 4467b6 <fb_schema_table_deleted@@Base+0x106e>
  41da8c:	xor    eax,eax
  41da8e:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41da93:	mov    rax,QWORD PTR [rsp+0x8]
  41da98:	inc    DWORD PTR [rax]
  41da9a:	nop    WORD PTR [rax+rax*1+0x0]
  41daa0:	mov    rax,QWORD PTR [rsp+0x10]
  41daa5:	mov    rax,QWORD PTR [rax]
  41daa8:	mov    rax,QWORD PTR [rax+0x20]
  41daac:	test   rax,rax
  41daaf:	je     41c188 <__flatcc_fb_parse@@Base+0x4a8>
  41dab5:	cmp    rax,0x7d
  41dab9:	je     41de03 <__flatcc_fb_parse@@Base+0x2123>
  41dabf:	mov    rdi,r14
  41dac2:	cmp    rax,0x3b
  41dac6:	je     41dacf <__flatcc_fb_parse@@Base+0x1def>
  41dac8:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41dacd:	jmp    41daa0 <__flatcc_fb_parse@@Base+0x1dc0>
  41dacf:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41dad4:	jmp    41de03 <__flatcc_fb_parse@@Base+0x2123>
  41dad9:	lea    rdx,[rip+0x10a6f]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41dae0:	mov    rcx,QWORD PTR [rax+0x10]
  41dae4:	mov    r8,QWORD PTR [rax+0x18]
  41dae8:	mov    rdi,r14
  41daeb:	lea    rsi,[rip+0x280fe]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41daf2:	mov    eax,0x0
  41daf7:	lea    rbp,[rip+0x28be6]        # 4466e4 <fb_schema_table_deleted@@Base+0xf9c>
  41dafe:	push   rbp
  41daff:	push   r10
  41db01:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41db06:	add    rsp,0x10
  41db0a:	jmp    41db24 <__flatcc_fb_parse@@Base+0x1e44>
  41db0c:	mov    rdi,r14
  41db0f:	lea    rsi,[rip+0x2812c]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41db16:	lea    rdx,[rip+0x28bc7]        # 4466e4 <fb_schema_table_deleted@@Base+0xf9c>
  41db1d:	xor    eax,eax
  41db1f:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41db24:	mov    rax,QWORD PTR [rsp+0x8]
  41db29:	inc    DWORD PTR [rax]
  41db2b:	mov    rdi,r14
  41db2e:	call   422cf0 <__flatcc_fb_clear_parser@@Base+0xf80>
  41db33:	mov    QWORD PTR [r13+0x38],rax
  41db37:	mov    rbx,QWORD PTR [r14+0x48]
  41db3b:	cmp    QWORD PTR [rbx+0x20],0x7b
  41db40:	jne    41dd04 <__flatcc_fb_parse@@Base+0x2024>
  41db46:	mov    rdi,r14
  41db49:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41db4e:	test   rbx,rbx
  41db51:	je     41dde0 <__flatcc_fb_parse@@Base+0x2100>
  41db57:	mov    rax,QWORD PTR [rsp+0x10]
  41db5c:	mov    r12,QWORD PTR [rax]
  41db5f:	cmp    QWORD PTR [r12+0x20],0x9
  41db65:	jne    41dca6 <__flatcc_fb_parse@@Base+0x1fc6>
  41db6b:	nop    DWORD PTR [rax+rax*1+0x0]
  41db70:	mov    rdi,r14
  41db73:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41db78:	test   r12,r12
  41db7b:	je     41dde0 <__flatcc_fb_parse@@Base+0x2100>
  41db81:	mov    rax,QWORD PTR [rsp+0x8]
  41db86:	cmp    DWORD PTR [rax],0x9
  41db89:	jg     41dde0 <__flatcc_fb_parse@@Base+0x2100>
  41db8f:	mov    rbp,QWORD PTR [r14+0x60]
  41db93:	lea    rax,[rbp+0xb0]
  41db9a:	cmp    rax,QWORD PTR [r14+0x50]
  41db9e:	jbe    41dbdc <__flatcc_fb_parse@@Base+0x1efc>
  41dba0:	mov    edi,0x10000
  41dba5:	mov    esi,0x1
  41dbaa:	call   406140 <calloc@plt>
  41dbaf:	test   rax,rax
  41dbb2:	je     41e0c7 <__flatcc_fb_parse@@Base+0x23e7>
  41dbb8:	mov    rcx,QWORD PTR [r14+0x58]
  41dbbc:	mov    QWORD PTR [rax],rcx
  41dbbf:	mov    QWORD PTR [r14+0x58],rax
  41dbc3:	lea    rbp,[rax+0x10]
  41dbc7:	mov    QWORD PTR [r14+0x60],rbp
  41dbcb:	lea    rcx,[rax+0x10000]
  41dbd2:	mov    QWORD PTR [r14+0x50],rcx
  41dbd6:	add    rax,0xc0
  41dbdc:	mov    QWORD PTR [r14+0x60],rax
  41dbe0:	mov    rax,QWORD PTR [r13+0x28]
  41dbe4:	mov    QWORD PTR [rbp+0x0],rax
  41dbe8:	mov    WORD PTR [rbp+0x10],0x5
  41dbee:	mov    QWORD PTR [r13+0x28],rbp
  41dbf2:	mov    rax,QWORD PTR [r14+0x40]
  41dbf6:	test   rax,rax
  41dbf9:	je     41dc13 <__flatcc_fb_parse@@Base+0x1f33>
  41dbfb:	xor    edx,edx
  41dbfd:	nop    DWORD PTR [rax]
  41dc00:	mov    rcx,rax
  41dc03:	mov    rax,QWORD PTR [rax]
  41dc06:	mov    QWORD PTR [rcx],rdx
  41dc09:	mov    rdx,rcx
  41dc0c:	test   rax,rax
  41dc0f:	jne    41dc00 <__flatcc_fb_parse@@Base+0x1f20>
  41dc11:	jmp    41dc15 <__flatcc_fb_parse@@Base+0x1f35>
  41dc13:	xor    ecx,ecx
  41dc15:	mov    QWORD PTR [rbp+0x68],rcx
  41dc19:	mov    QWORD PTR [r14+0x40],0x0
  41dc21:	mov    QWORD PTR [rbp+0x8],r12
  41dc25:	mov    r12,QWORD PTR [r14+0x48]
  41dc29:	mov    rax,QWORD PTR [r12+0x20]
  41dc2e:	cmp    rax,0x3d
  41dc32:	jne    41dc66 <__flatcc_fb_parse@@Base+0x1f86>
  41dc34:	mov    rdi,r14
  41dc37:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41dc3c:	test   r12,r12
  41dc3f:	je     41dc59 <__flatcc_fb_parse@@Base+0x1f79>
  41dc41:	add    rbp,0x48
  41dc45:	mov    rdi,r14
  41dc48:	mov    rsi,rbp
  41dc4b:	xor    edx,edx
  41dc4d:	lea    rcx,[rip+0x28ae0]        # 446734 <fb_schema_table_deleted@@Base+0xfec>
  41dc54:	call   422f80 <__flatcc_fb_clear_parser@@Base+0x1210>
  41dc59:	mov    rax,QWORD PTR [rsp+0x10]
  41dc5e:	mov    r12,QWORD PTR [rax]
  41dc61:	mov    rax,QWORD PTR [r12+0x20]
  41dc66:	cmp    rax,0x2c
  41dc6a:	jne    41de10 <__flatcc_fb_parse@@Base+0x2130>
  41dc70:	mov    rdi,r14
  41dc73:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41dc78:	test   r12,r12
  41dc7b:	mov    r12,QWORD PTR [r14+0x48]
  41dc7f:	mov    rax,QWORD PTR [r12+0x20]
  41dc84:	je     41de10 <__flatcc_fb_parse@@Base+0x2130>
  41dc8a:	mov    QWORD PTR [r14+0x40],0x0
  41dc92:	cmp    rax,0x9
  41dc96:	je     41db70 <__flatcc_fb_parse@@Base+0x1e90>
  41dc9c:	cmp    rax,0x7d
  41dca0:	je     41de22 <__flatcc_fb_parse@@Base+0x2142>
  41dca6:	test   r12,r12
  41dca9:	je     41ddbc <__flatcc_fb_parse@@Base+0x20dc>
  41dcaf:	mov    rax,QWORD PTR [r12]
  41dcb3:	xor    r9d,r9d
  41dcb6:	lea    rbp,[rip+0x10892]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41dcbd:	mov    r10,rbp
  41dcc0:	test   rax,rax
  41dcc3:	je     41dccd <__flatcc_fb_parse@@Base+0x1fed>
  41dcc5:	mov    r9d,DWORD PTR [r12+0x8]
  41dcca:	mov    r10,rax
  41dccd:	mov    rax,r14
  41dcd0:	cmp    QWORD PTR [rax+0x28],r12
  41dcd4:	jbe    41dcf2 <__flatcc_fb_parse@@Base+0x2012>
  41dcd6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41dce0:	mov    rax,QWORD PTR [rax]
  41dce3:	test   rax,rax
  41dce6:	je     41dd87 <__flatcc_fb_parse@@Base+0x20a7>
  41dcec:	cmp    QWORD PTR [rax+0x28],r12
  41dcf0:	ja     41dce0 <__flatcc_fb_parse@@Base+0x2000>
  41dcf2:	cmp    QWORD PTR [rax+0x30],r12
  41dcf6:	jbe    41dce0 <__flatcc_fb_parse@@Base+0x2000>
  41dcf8:	mov    rdx,QWORD PTR [rax+0x318]
  41dcff:	jmp    41dd8e <__flatcc_fb_parse@@Base+0x20ae>
  41dd04:	test   rbx,rbx
  41dd07:	je     41dd74 <__flatcc_fb_parse@@Base+0x2094>
  41dd09:	mov    rax,QWORD PTR [rbx]
  41dd0c:	xor    r9d,r9d
  41dd0f:	lea    rbp,[rip+0x10839]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41dd16:	mov    r10,rbp
  41dd19:	test   rax,rax
  41dd1c:	je     41dd25 <__flatcc_fb_parse@@Base+0x2045>
  41dd1e:	mov    r9d,DWORD PTR [rbx+0x8]
  41dd22:	mov    r10,rax
  41dd25:	mov    rax,r14
  41dd28:	cmp    QWORD PTR [rax+0x28],rbx
  41dd2c:	jbe    41dd3e <__flatcc_fb_parse@@Base+0x205e>
  41dd2e:	xchg   ax,ax
  41dd30:	mov    rax,QWORD PTR [rax]
  41dd33:	test   rax,rax
  41dd36:	je     41dd4d <__flatcc_fb_parse@@Base+0x206d>
  41dd38:	cmp    QWORD PTR [rax+0x28],rbx
  41dd3c:	ja     41dd30 <__flatcc_fb_parse@@Base+0x2050>
  41dd3e:	cmp    QWORD PTR [rax+0x30],rbx
  41dd42:	jbe    41dd30 <__flatcc_fb_parse@@Base+0x2050>
  41dd44:	mov    rdx,QWORD PTR [rax+0x318]
  41dd4b:	jmp    41dd54 <__flatcc_fb_parse@@Base+0x2074>
  41dd4d:	lea    rdx,[rip+0x107fb]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41dd54:	mov    rcx,QWORD PTR [rbx+0x10]
  41dd58:	mov    r8,QWORD PTR [rbx+0x18]
  41dd5c:	mov    rdi,r14
  41dd5f:	lea    rsi,[rip+0x27e8a]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41dd66:	mov    eax,0x0
  41dd6b:	lea    rbp,[rip+0x28989]        # 4466fb <fb_schema_table_deleted@@Base+0xfb3>
  41dd72:	jmp    41ddae <__flatcc_fb_parse@@Base+0x20ce>
  41dd74:	mov    rdi,r14
  41dd77:	lea    rsi,[rip+0x27ec4]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41dd7e:	lea    rdx,[rip+0x28976]        # 4466fb <fb_schema_table_deleted@@Base+0xfb3>
  41dd85:	jmp    41ddcd <__flatcc_fb_parse@@Base+0x20ed>
  41dd87:	lea    rdx,[rip+0x107c1]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41dd8e:	mov    rcx,QWORD PTR [r12+0x10]
  41dd93:	mov    r8,QWORD PTR [r12+0x18]
  41dd98:	mov    rdi,r14
  41dd9b:	lea    rsi,[rip+0x27e4e]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41dda2:	mov    eax,0x0
  41dda7:	lea    rbp,[rip+0x2896b]        # 446719 <fb_schema_table_deleted@@Base+0xfd1>
  41ddae:	push   rbp
  41ddaf:	push   r10
  41ddb1:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41ddb6:	add    rsp,0x10
  41ddba:	jmp    41ddd4 <__flatcc_fb_parse@@Base+0x20f4>
  41ddbc:	mov    rdi,r14
  41ddbf:	lea    rsi,[rip+0x27e7c]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41ddc6:	lea    rdx,[rip+0x2894c]        # 446719 <fb_schema_table_deleted@@Base+0xfd1>
  41ddcd:	xor    eax,eax
  41ddcf:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41ddd4:	mov    rax,QWORD PTR [rsp+0x8]
  41ddd9:	inc    DWORD PTR [rax]
  41dddb:	nop    DWORD PTR [rax+rax*1+0x0]
  41dde0:	mov    rax,QWORD PTR [rsp+0x10]
  41dde5:	mov    rax,QWORD PTR [rax]
  41dde8:	mov    rbp,QWORD PTR [rax+0x20]
  41ddec:	test   rbp,rbp
  41ddef:	je     41c188 <__flatcc_fb_parse@@Base+0x4a8>
  41ddf5:	mov    rdi,r14
  41ddf8:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41ddfd:	cmp    rbp,0x7d
  41de01:	jne    41dde0 <__flatcc_fb_parse@@Base+0x2100>
  41de03:	mov    QWORD PTR [r14+0x40],0x0
  41de0b:	jmp    41c188 <__flatcc_fb_parse@@Base+0x4a8>
  41de10:	mov    QWORD PTR [r14+0x40],0x0
  41de18:	cmp    rax,0x7d
  41de1c:	jne    41df3f <__flatcc_fb_parse@@Base+0x225f>
  41de22:	mov    rdi,r14
  41de25:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41de2a:	jmp    41df5a <__flatcc_fb_parse@@Base+0x227a>
  41de2f:	mov    r13,QWORD PTR [rsp+0x20]
  41de34:	mov    QWORD PTR [r14+0x40],0x0
  41de3c:	cmp    rax,0x7d
  41de40:	jne    41de4c <__flatcc_fb_parse@@Base+0x216c>
  41de42:	mov    rdi,r14
  41de45:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  41de4a:	jmp    41de67 <__flatcc_fb_parse@@Base+0x2187>
  41de4c:	mov    rdi,r14
  41de4f:	mov    rsi,r12
  41de52:	lea    rdx,[rip+0x289b2]        # 44680b <fb_schema_table_deleted@@Base+0x10c3>
  41de59:	mov    rcx,rbx
  41de5c:	xor    r8d,r8d
  41de5f:	xor    r9d,r9d
  41de62:	call   41b6e0 <__flatcc_error_report@@Base>
  41de67:	mov    rax,QWORD PTR [r13+0x28]
  41de6b:	test   rax,rax
  41de6e:	je     41de93 <__flatcc_fb_parse@@Base+0x21b3>
  41de70:	xor    ecx,ecx
  41de72:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41de7c:	nop    DWORD PTR [rax+0x0]
  41de80:	mov    rdx,rax
  41de83:	mov    rax,QWORD PTR [rax]
  41de86:	mov    QWORD PTR [rdx],rcx
  41de89:	mov    rcx,rdx
  41de8c:	test   rax,rax
  41de8f:	jne    41de80 <__flatcc_fb_parse@@Base+0x21a0>
  41de91:	jmp    41de95 <__flatcc_fb_parse@@Base+0x21b5>
  41de93:	xor    edx,edx
  41de95:	mov    QWORD PTR [r13+0x28],rdx
  41de99:	mov    rcx,QWORD PTR [r14+0x60]
  41de9d:	lea    rax,[rcx+0xb0]
  41dea4:	cmp    rax,QWORD PTR [r14+0x50]
  41dea8:	jbe    41deea <__flatcc_fb_parse@@Base+0x220a>
  41deaa:	mov    edi,0x10000
  41deaf:	mov    esi,0x1
  41deb4:	call   406140 <calloc@plt>
  41deb9:	test   rax,rax
  41debc:	je     41e0c7 <__flatcc_fb_parse@@Base+0x23e7>
  41dec2:	mov    rcx,QWORD PTR [r14+0x58]
  41dec6:	mov    QWORD PTR [rax],rcx
  41dec9:	mov    QWORD PTR [r14+0x58],rax
  41decd:	lea    rcx,[rax+0x10]
  41ded1:	mov    QWORD PTR [r14+0x60],rcx
  41ded5:	lea    rdx,[rax+0x10000]
  41dedc:	mov    QWORD PTR [r14+0x50],rdx
  41dee0:	add    rax,0xc0
  41dee6:	mov    rdx,QWORD PTR [r13+0x28]
  41deea:	mov    QWORD PTR [r14+0x60],rax
  41deee:	mov    QWORD PTR [rcx],rdx
  41def1:	mov    WORD PTR [rcx+0x10],0x5
  41def7:	mov    QWORD PTR [r13+0x28],rcx
  41defb:	mov    rax,QWORD PTR [r14+0x40]
  41deff:	test   rax,rax
  41df02:	je     41df23 <__flatcc_fb_parse@@Base+0x2243>
  41df04:	xor    esi,esi
  41df06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41df10:	mov    rdx,rax
  41df13:	mov    rax,QWORD PTR [rax]
  41df16:	mov    QWORD PTR [rdx],rsi
  41df19:	mov    rsi,rdx
  41df1c:	test   rax,rax
  41df1f:	jne    41df10 <__flatcc_fb_parse@@Base+0x2230>
  41df21:	jmp    41df25 <__flatcc_fb_parse@@Base+0x2245>
  41df23:	xor    edx,edx
  41df25:	mov    QWORD PTR [rcx+0x68],rdx
  41df29:	mov    QWORD PTR [r14+0x40],0x0
  41df31:	mov    rax,QWORD PTR [rsp+0x30]
  41df36:	mov    QWORD PTR [rcx+0x8],rax
  41df3a:	jmp    41c188 <__flatcc_fb_parse@@Base+0x4a8>
  41df3f:	mov    rdi,r14
  41df42:	mov    rsi,r12
  41df45:	lea    rdx,[rip+0x28803]        # 44674f <fb_schema_table_deleted@@Base+0x1007>
  41df4c:	mov    rcx,rbx
  41df4f:	xor    r8d,r8d
  41df52:	xor    r9d,r9d
  41df55:	call   41b6e0 <__flatcc_error_report@@Base>
  41df5a:	mov    rax,QWORD PTR [r13+0x28]
  41df5e:	test   rax,rax
  41df61:	je     41df8a <__flatcc_fb_parse@@Base+0x22aa>
  41df63:	xor    edx,edx
  41df65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41df6f:	nop
  41df70:	mov    rcx,rax
  41df73:	mov    rax,QWORD PTR [rax]
  41df76:	mov    QWORD PTR [rcx],rdx
  41df79:	mov    rdx,rcx
  41df7c:	test   rax,rax
  41df7f:	jne    41df70 <__flatcc_fb_parse@@Base+0x2290>
  41df81:	mov    QWORD PTR [r13+0x28],rcx
  41df85:	jmp    41c188 <__flatcc_fb_parse@@Base+0x4a8>
  41df8a:	xor    ecx,ecx
  41df8c:	mov    QWORD PTR [r13+0x28],rcx
  41df90:	jmp    41c188 <__flatcc_fb_parse@@Base+0x4a8>
  41df95:	mov    rax,QWORD PTR [r14+0x200]
  41df9c:	test   rax,rax
  41df9f:	je     41e057 <__flatcc_fb_parse@@Base+0x2377>
  41dfa5:	xor    edx,edx
  41dfa7:	nop    WORD PTR [rax+rax*1+0x0]
  41dfb0:	mov    rcx,rax
  41dfb3:	mov    rax,QWORD PTR [rax]
  41dfb6:	mov    QWORD PTR [rcx],rdx
  41dfb9:	mov    rdx,rcx
  41dfbc:	test   rax,rax
  41dfbf:	jne    41dfb0 <__flatcc_fb_parse@@Base+0x22d0>
  41dfc1:	jmp    41e059 <__flatcc_fb_parse@@Base+0x2379>
  41dfc6:	mov    rax,QWORD PTR [rsp+0x8]
  41dfcb:	mov    eax,DWORD PTR [rax]
  41dfcd:	test   eax,eax
  41dfcf:	jne    41e0b8 <__flatcc_fb_parse@@Base+0x23d8>
  41dfd5:	test   r15,r15
  41dfd8:	je     41e095 <__flatcc_fb_parse@@Base+0x23b5>
  41dfde:	mov    rax,QWORD PTR [r15]
  41dfe1:	xor    r9d,r9d
  41dfe4:	lea    rdx,[rip+0x10564]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  41dfeb:	mov    rbp,rdx
  41dfee:	test   rax,rax
  41dff1:	je     41dffa <__flatcc_fb_parse@@Base+0x231a>
  41dff3:	mov    r9d,DWORD PTR [r15+0x8]
  41dff7:	mov    rbp,rax
  41dffa:	mov    rax,r14
  41dffd:	cmp    QWORD PTR [rax+0x28],r15
  41e001:	jbe    41e01e <__flatcc_fb_parse@@Base+0x233e>
  41e003:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e00d:	nop    DWORD PTR [rax]
  41e010:	mov    rax,QWORD PTR [rax]
  41e013:	test   rax,rax
  41e016:	je     41e02b <__flatcc_fb_parse@@Base+0x234b>
  41e018:	cmp    QWORD PTR [rax+0x28],r15
  41e01c:	ja     41e010 <__flatcc_fb_parse@@Base+0x2330>
  41e01e:	cmp    QWORD PTR [rax+0x30],r15
  41e022:	jbe    41e010 <__flatcc_fb_parse@@Base+0x2330>
  41e024:	mov    rdx,QWORD PTR [rax+0x318]
  41e02b:	mov    rcx,QWORD PTR [r15+0x10]
  41e02f:	mov    r8,QWORD PTR [r15+0x18]
  41e033:	lea    r10,[rip+0x27e8e]        # 445ec8 <fb_schema_table_deleted@@Base+0x780>
  41e03a:	lea    rsi,[rip+0x27baf]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  41e041:	mov    rdi,r14
  41e044:	mov    eax,0x0
  41e049:	push   r10
  41e04b:	push   rbp
  41e04c:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41e051:	add    rsp,0x10
  41e055:	jmp    41e0ad <__flatcc_fb_parse@@Base+0x23cd>
  41e057:	xor    ecx,ecx
  41e059:	mov    QWORD PTR [r14+0x200],rcx
  41e060:	mov    rax,QWORD PTR [r14+0x238]
  41e067:	test   rax,rax
  41e06a:	je     41e083 <__flatcc_fb_parse@@Base+0x23a3>
  41e06c:	xor    edx,edx
  41e06e:	xchg   ax,ax
  41e070:	mov    rcx,rax
  41e073:	mov    rax,QWORD PTR [rax]
  41e076:	mov    QWORD PTR [rcx],rdx
  41e079:	mov    rdx,rcx
  41e07c:	test   rax,rax
  41e07f:	jne    41e070 <__flatcc_fb_parse@@Base+0x2390>
  41e081:	jmp    41e085 <__flatcc_fb_parse@@Base+0x23a5>
  41e083:	xor    ecx,ecx
  41e085:	mov    QWORD PTR [r14+0x238],rcx
  41e08c:	mov    eax,DWORD PTR [r14+0xd0]
  41e093:	jmp    41e0b8 <__flatcc_fb_parse@@Base+0x23d8>
  41e095:	lea    rsi,[rip+0x27ba6]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  41e09c:	lea    rdx,[rip+0x27e25]        # 445ec8 <fb_schema_table_deleted@@Base+0x780>
  41e0a3:	mov    rdi,r14
  41e0a6:	xor    eax,eax
  41e0a8:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  41e0ad:	mov    rcx,QWORD PTR [rsp+0x8]
  41e0b2:	mov    eax,DWORD PTR [rcx]
  41e0b4:	inc    eax
  41e0b6:	mov    DWORD PTR [rcx],eax
  41e0b8:	add    rsp,0x58
  41e0bc:	pop    rbx
  41e0bd:	pop    r12
  41e0bf:	pop    r13
  41e0c1:	pop    r14
  41e0c3:	pop    r15
  41e0c5:	pop    rbp
  41e0c6:	ret    
  41e0c7:	mov    rax,QWORD PTR [rip+0x31f2a]        # 44fff8 <stderr@GLIBC_2.2.5>
  41e0ce:	mov    rcx,QWORD PTR [rax]
  41e0d1:	lea    rdi,[rip+0xff4f]        # 42e027 <_IO_stdin_used@@Base+0x1027>
  41e0d8:	mov    esi,0x22
  41e0dd:	mov    edx,0x1
  41e0e2:	call   406220 <fwrite@plt>
  41e0e7:	mov    edi,0x1
  41e0ec:	call   406210 <exit@plt>
  41e0f1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e0fb:	nop    DWORD PTR [rax+rax*1+0x0]
  41e100:	push   rbp
  41e101:	push   r15
  41e103:	push   r14
  41e105:	push   r13
  41e107:	push   r12
  41e109:	push   rbx
  41e10a:	sub    rsp,0x68
  41e10e:	mov    r12,rdi
  41e111:	lea    r13,[rdi+rsi*1]
  41e115:	test   rsi,rsi
  41e118:	mov    QWORD PTR [rsp+0x38],rdx
  41e11d:	je     421994 <__flatcc_fb_parse@@Base+0x5cb4>
  41e123:	lea    rax,[rdx+0x28]
  41e127:	mov    QWORD PTR [rsp+0x8],rax
  41e12c:	lea    rax,[rdx+0x38]
  41e130:	mov    QWORD PTR [rsp+0x30],rax
  41e135:	lea    r9,[rdx+0x30]
  41e139:	lea    r10,[rdx+0x48]
  41e13d:	lea    r8,[rdx+0x78]
  41e141:	lea    r11,[rdx+0x70]
  41e145:	lea    r15,[rsi+r12*1-0x1]
  41e14a:	lea    rax,[r13-0x2]
  41e14e:	mov    QWORD PTR [rsp+0x50],rax
  41e153:	lea    rax,[r13-0x1]
  41e157:	mov    QWORD PTR [rsp+0x60],rax
  41e15c:	mov    QWORD PTR [rsp+0x28],r10
  41e161:	mov    QWORD PTR [rsp+0x20],r11
  41e166:	mov    QWORD PTR [rsp+0x18],r8
  41e16b:	mov    QWORD PTR [rsp+0x10],r9
  41e170:	mov    QWORD PTR [rsp+0x48],r13
  41e175:	mov    QWORD PTR [rsp+0x40],r15
  41e17a:	jmp    41e1e3 <__flatcc_fb_parse@@Base+0x2503>
  41e17c:	nop    DWORD PTR [rax+0x0]
  41e180:	movsxd rcx,DWORD PTR [rbp+0x0]
  41e184:	lea    rcx,[rcx+rcx*4]
  41e188:	lea    rcx,[rax+rcx*8]
  41e18c:	mov    r9,QWORD PTR [rsp+0x10]
  41e191:	mov    QWORD PTR [r9],rcx
  41e194:	lea    rax,[rax+r13*8]
  41e198:	mov    r10,QWORD PTR [rsp+0x28]
  41e19d:	mov    QWORD PTR [r10],rax
  41e1a0:	mov    r11,QWORD PTR [rsp+0x20]
  41e1a5:	mov    r8,QWORD PTR [rsp+0x18]
  41e1aa:	mov    QWORD PTR [rax+0x20],r15
  41e1ae:	mov    QWORD PTR [rax],r12
  41e1b1:	mov    QWORD PTR [rax+0x8],r14
  41e1b5:	mov    rcx,QWORD PTR [r8]
  41e1b8:	mov    QWORD PTR [rax+0x10],rcx
  41e1bc:	sub    r12,QWORD PTR [r11]
  41e1bf:	inc    r12
  41e1c2:	mov    QWORD PTR [rax+0x18],r12
  41e1c6:	add    rax,0x28
  41e1ca:	mov    QWORD PTR [r10],rax
  41e1cd:	mov    r13,QWORD PTR [rsp+0x48]
  41e1d2:	mov    r15,QWORD PTR [rsp+0x40]
  41e1d7:	mov    r12,rbx
  41e1da:	cmp    rbx,r13
  41e1dd:	je     4219aa <__flatcc_fb_parse@@Base+0x5cca>
  41e1e3:	movsx  eax,BYTE PTR [r12]
  41e1e8:	movsxd rbp,eax
  41e1eb:	cmp    ebp,0x7e
  41e1ee:	ja     41facc <__flatcc_fb_parse@@Base+0x3dec>
  41e1f4:	lea    rcx,[rip+0x275e9]        # 4457e4 <fb_schema_table_deleted@@Base+0x9c>
  41e1fb:	movsxd rax,DWORD PTR [rcx+rax*4]
  41e1ff:	add    rax,rcx
  41e202:	jmp    rax
  41e204:	shl    rbp,0x8
  41e208:	lea    rbx,[r12+0x1]
  41e20d:	cmp    rbx,r13
  41e210:	je     41e260 <__flatcc_fb_parse@@Base+0x2580>
  41e212:	movzx  eax,BYTE PTR [rbx]
  41e215:	lea    rdx,[rip+0x278c4]        # 445ae0 <fb_schema_table_deleted@@Base+0x398>
  41e21c:	cmp    BYTE PTR [rax+rdx*1],0x0
  41e220:	je     41e263 <__flatcc_fb_parse@@Base+0x2583>
  41e222:	movsx  rcx,al
  41e226:	shl    rcx,0x10
  41e22a:	or     rcx,rbp
  41e22d:	lea    rbx,[r12+0x2]
  41e232:	mov    rsi,QWORD PTR [rsp+0x30]
  41e237:	nop    WORD PTR [rax+rax*1+0x0]
  41e240:	cmp    r13,rbx
  41e243:	je     41e26d <__flatcc_fb_parse@@Base+0x258d>
  41e245:	movzx  eax,BYTE PTR [rbx]
  41e248:	inc    rbx
  41e24b:	cmp    BYTE PTR [rax+rdx*1],0x0
  41e24f:	jne    41e240 <__flatcc_fb_parse@@Base+0x2560>
  41e251:	dec    rbx
  41e254:	jmp    41e270 <__flatcc_fb_parse@@Base+0x2590>
  41e256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e260:	mov    rbx,r13
  41e263:	mov    rcx,rbp
  41e266:	mov    rsi,QWORD PTR [rsp+0x30]
  41e26b:	jmp    41e270 <__flatcc_fb_parse@@Base+0x2590>
  41e26d:	mov    rbx,r13
  41e270:	movsx  rdx,BYTE PTR [rbx-0x1]
  41e275:	shl    rdx,0x18
  41e279:	mov    r14,rbx
  41e27c:	sub    r14,r12
  41e27f:	movzx  eax,r14b
  41e283:	add    rax,0x30
  41e287:	or     rax,rcx
  41e28a:	or     rax,rdx
  41e28d:	cmp    rax,0x6570723a
  41e293:	mov    rdx,QWORD PTR [rsp+0x8]
  41e298:	jle    41e300 <__flatcc_fb_parse@@Base+0x2620>
  41e29a:	cmp    rax,0x6e69663d
  41e2a0:	jg     41e378 <__flatcc_fb_parse@@Base+0x2698>
  41e2a6:	cmp    rax,0x676c7534
  41e2ac:	jle    41e55b <__flatcc_fb_parse@@Base+0x287b>
  41e2b2:	cmp    rax,0x67747335
  41e2b8:	jle    41e724 <__flatcc_fb_parse@@Base+0x2a44>
  41e2be:	cmp    rax,0x67747336
  41e2c4:	je     41eb3b <__flatcc_fb_parse@@Base+0x2e5b>
  41e2ca:	cmp    rax,0x6c6f6234
  41e2d0:	je     41eb66 <__flatcc_fb_parse@@Base+0x2e86>
  41e2d6:	cmp    rax,0x6d6e6534
  41e2dc:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e2e2:	cmp    DWORD PTR [r12],0x6d756e65
  41e2ea:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e2f0:	mov    r15,0xfffffffffffffc1b
  41e2f7:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41e2fc:	nop    DWORD PTR [rax+0x0]
  41e300:	cmp    rax,0x38697534
  41e306:	jle    41e3dc <__flatcc_fb_parse@@Base+0x26fc>
  41e30c:	cmp    rax,0x65617434
  41e312:	jle    41e599 <__flatcc_fb_parse@@Base+0x28b9>
  41e318:	cmp    rax,0x656e6936
  41e31e:	jle    41e756 <__flatcc_fb_parse@@Base+0x2a76>
  41e324:	cmp    rax,0x656e6937
  41e32a:	je     41eb80 <__flatcc_fb_parse@@Base+0x2ea0>
  41e330:	cmp    rax,0x656f6436
  41e336:	je     41ebab <__flatcc_fb_parse@@Base+0x2ecb>
  41e33c:	cmp    rax,0x656f7239
  41e342:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e348:	mov    rax,QWORD PTR [r12]
  41e34c:	movabs rcx,0x7079745f746f6f72
  41e356:	xor    rax,rcx
  41e359:	movzx  ecx,BYTE PTR [r12+0x8]
  41e35f:	xor    rcx,0x65
  41e363:	or     rcx,rax
  41e366:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e36c:	mov    r15,0xfffffffffffffc38
  41e373:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41e378:	cmp    rax,0x74697533
  41e37e:	jle    41e5d7 <__flatcc_fb_parse@@Base+0x28f7>
  41e384:	cmp    rax,0x746e6932
  41e38a:	jle    41e796 <__flatcc_fb_parse@@Base+0x2ab6>
  41e390:	cmp    rax,0x74747336
  41e396:	je     41ebd6 <__flatcc_fb_parse@@Base+0x2ef6>
  41e39c:	cmp    rax,0x74737536
  41e3a2:	je     41ec01 <__flatcc_fb_parse@@Base+0x2f21>
  41e3a8:	cmp    rax,0x746e6933
  41e3ae:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e3b4:	movzx  eax,WORD PTR [r12]
  41e3b9:	xor    eax,0x6e69
  41e3be:	movzx  ecx,BYTE PTR [r12+0x2]
  41e3c4:	xor    ecx,0x74
  41e3c7:	or     cx,ax
  41e3ca:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e3d0:	mov    r15,0xfffffffffffffc1e
  41e3d7:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41e3dc:	cmp    rax,0x346c6636
  41e3e2:	jg     41e623 <__flatcc_fb_parse@@Base+0x2943>
  41e3e8:	cmp    rax,0x326e6934
  41e3ee:	jg     41e890 <__flatcc_fb_parse@@Base+0x2bb0>
  41e3f4:	cmp    rax,0x32697536
  41e3fa:	je     41ec2c <__flatcc_fb_parse@@Base+0x2f4c>
  41e400:	cmp    rax,0x326c6637
  41e406:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e40c:	mov    eax,DWORD PTR [r12]
  41e410:	mov    ecx,0x616f6c66
  41e415:	xor    eax,ecx
  41e417:	mov    ecx,DWORD PTR [r12+0x3]
  41e41c:	mov    edi,0x32337461
  41e421:	xor    ecx,edi
  41e423:	or     ecx,eax
  41e425:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e42b:	mov    r15,0xfffffffffffffc1c
  41e432:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41e437:	mov    rax,QWORD PTR [rsp+0x8]
  41e43c:	mov    rdi,QWORD PTR [rax]
  41e43f:	mov    rsi,QWORD PTR [rsp+0x30]
  41e444:	movsxd rcx,DWORD PTR [rsi]
  41e447:	lea    r14,[rcx+rcx*4]
  41e44b:	lea    rdx,[rdi+r14*8]
  41e44f:	mov    QWORD PTR [r9],rdx
  41e452:	mov    rax,QWORD PTR [r10]
  41e455:	cmp    rax,rdx
  41e458:	jne    41e4b5 <__flatcc_fb_parse@@Base+0x27d5>
  41e45a:	lea    eax,[rcx+rcx*1]
  41e45d:	test   ecx,ecx
  41e45f:	mov    ecx,0x400
  41e464:	cmove  eax,ecx
  41e467:	mov    DWORD PTR [rsi],eax
  41e469:	cdqe   
  41e46b:	shl    rax,0x3
  41e46f:	mov    rbx,rsi
  41e472:	lea    rsi,[rax+rax*4]
  41e476:	call   4061d0 <realloc@plt>
  41e47b:	mov    rcx,QWORD PTR [rsp+0x8]
  41e480:	mov    QWORD PTR [rcx],rax
  41e483:	test   rax,rax
  41e486:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41e48c:	movsxd rcx,DWORD PTR [rbx]
  41e48f:	lea    rcx,[rcx+rcx*4]
  41e493:	lea    rcx,[rax+rcx*8]
  41e497:	mov    r9,QWORD PTR [rsp+0x10]
  41e49c:	mov    QWORD PTR [r9],rcx
  41e49f:	lea    rax,[rax+r14*8]
  41e4a3:	mov    r10,QWORD PTR [rsp+0x28]
  41e4a8:	mov    QWORD PTR [r10],rax
  41e4ab:	mov    r11,QWORD PTR [rsp+0x20]
  41e4b0:	mov    r8,QWORD PTR [rsp+0x18]
  41e4b5:	lea    rbx,[r12+0x1]
  41e4ba:	mov    QWORD PTR [rax+0x20],rbp
  41e4be:	jmp    420eb8 <__flatcc_fb_parse@@Base+0x51d8>
  41e4c3:	mov    rbx,r12
  41e4c6:	mov    rsi,QWORD PTR [rsp+0x30]
  41e4cb:	nop    DWORD PTR [rax+rax*1+0x0]
  41e4d0:	movzx  eax,BYTE PTR [rbx+0x1]
  41e4d4:	inc    rbx
  41e4d7:	lea    ecx,[rax-0x30]
  41e4da:	cmp    cl,0xa
  41e4dd:	jb     41e4d0 <__flatcc_fb_parse@@Base+0x27f0>
  41e4df:	mov    rbp,rbx
  41e4e2:	cmp    al,0x2e
  41e4e4:	jne    41e505 <__flatcc_fb_parse@@Base+0x2825>
  41e4e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41e4f0:	cmp    r15,rbx
  41e4f3:	je     41f6de <__flatcc_fb_parse@@Base+0x39fe>
  41e4f9:	mov    al,BYTE PTR [rbx+0x1]
  41e4fc:	inc    rbx
  41e4ff:	add    al,0xd0
  41e501:	cmp    al,0xa
  41e503:	jb     41e4f0 <__flatcc_fb_parse@@Base+0x2810>
  41e505:	cmp    rbx,r13
  41e508:	je     41f6de <__flatcc_fb_parse@@Base+0x39fe>
  41e50e:	mov    al,BYTE PTR [rbx]
  41e510:	or     al,0x20
  41e512:	cmp    al,0x65
  41e514:	jne    41f6e1 <__flatcc_fb_parse@@Base+0x3a01>
  41e51a:	lea    rax,[rbx+0x1]
  41e51e:	mov    rcx,r13
  41e521:	cmp    rax,r13
  41e524:	je     41e538 <__flatcc_fb_parse@@Base+0x2858>
  41e526:	mov    dl,BYTE PTR [rax]
  41e528:	mov    rcx,rax
  41e52b:	cmp    dl,0x2b
  41e52e:	je     41e538 <__flatcc_fb_parse@@Base+0x2858>
  41e530:	cmp    dl,0x2d
  41e533:	je     41e538 <__flatcc_fb_parse@@Base+0x2858>
  41e535:	mov    rcx,rbx
  41e538:	mov    rbx,rcx
  41e53b:	nop    DWORD PTR [rax+rax*1+0x0]
  41e540:	cmp    r15,rbx
  41e543:	je     41f6de <__flatcc_fb_parse@@Base+0x39fe>
  41e549:	movzx  eax,BYTE PTR [rbx+0x1]
  41e54d:	inc    rbx
  41e550:	add    al,0xd0
  41e552:	cmp    al,0xa
  41e554:	jb     41e540 <__flatcc_fb_parse@@Base+0x2860>
  41e556:	jmp    41f6e1 <__flatcc_fb_parse@@Base+0x3a01>
  41e55b:	cmp    rax,0x65746138
  41e561:	jg     41e7d6 <__flatcc_fb_parse@@Base+0x2af6>
  41e567:	cmp    rax,0x6570723b
  41e56d:	je     41e9d1 <__flatcc_fb_parse@@Base+0x2cf1>
  41e573:	cmp    rax,0x65727434
  41e579:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e57f:	cmp    DWORD PTR [r12],0x65757274
  41e587:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e58d:	mov    r15,0xfffffffffffffc24
  41e594:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41e599:	cmp    rax,0x65616634
  41e59f:	jg     41e808 <__flatcc_fb_parse@@Base+0x2b28>
  41e5a5:	cmp    rax,0x38697535
  41e5ab:	je     41ea09 <__flatcc_fb_parse@@Base+0x2d29>
  41e5b1:	cmp    rax,0x386e6934
  41e5b7:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e5bd:	cmp    DWORD PTR [r12],0x38746e69
  41e5c5:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e5cb:	mov    r15,0xfffffffffffffc1f
  41e5d2:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41e5d7:	cmp    rax,0x7269663e
  41e5dd:	jg     41e850 <__flatcc_fb_parse@@Base+0x2b70>
  41e5e3:	cmp    rax,0x6e69663e
  41e5e9:	je     41ea31 <__flatcc_fb_parse@@Base+0x2d51>
  41e5ef:	cmp    rax,0x6e6e7535
  41e5f5:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e5fb:	mov    eax,DWORD PTR [r12]
  41e5ff:	mov    ecx,0x6f696e75
  41e604:	xor    eax,ecx
  41e606:	movzx  ecx,BYTE PTR [r12+0x4]
  41e60c:	xor    ecx,0x6e
  41e60f:	or     ecx,eax
  41e611:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e617:	mov    r15,0xfffffffffffffc30
  41e61e:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41e623:	cmp    rax,0x36697535
  41e629:	jg     41e8d3 <__flatcc_fb_parse@@Base+0x2bf3>
  41e62f:	cmp    rax,0x346c6637
  41e635:	je     41ec57 <__flatcc_fb_parse@@Base+0x2f77>
  41e63b:	cmp    rax,0x346e6935
  41e641:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e647:	mov    eax,DWORD PTR [r12]
  41e64b:	mov    ecx,0x36746e69
  41e650:	xor    eax,ecx
  41e652:	movzx  ecx,BYTE PTR [r12+0x4]
  41e658:	xor    ecx,0x34
  41e65b:	or     ecx,eax
  41e65d:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e663:	mov    r15,0xfffffffffffffc22
  41e66a:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41e66f:	lea    rbx,[r12+0x1]
  41e674:	cmp    rbx,r13
  41e677:	mov    rsi,QWORD PTR [rsp+0x30]
  41e67c:	je     41e913 <__flatcc_fb_parse@@Base+0x2c33>
  41e682:	cmp    BYTE PTR [rbx],0x3d
  41e685:	jne    41e913 <__flatcc_fb_parse@@Base+0x2c33>
  41e68b:	mov    rax,QWORD PTR [rsp+0x8]
  41e690:	mov    rdi,QWORD PTR [rax]
  41e693:	movsxd rcx,DWORD PTR [rsi]
  41e696:	lea    r14,[rcx+rcx*4]
  41e69a:	lea    rdx,[rdi+r14*8]
  41e69e:	mov    QWORD PTR [r9],rdx
  41e6a1:	mov    rax,QWORD PTR [r10]
  41e6a4:	cmp    rax,rdx
  41e6a7:	jne    41e704 <__flatcc_fb_parse@@Base+0x2a24>
  41e6a9:	lea    eax,[rcx+rcx*1]
  41e6ac:	test   ecx,ecx
  41e6ae:	mov    ecx,0x400
  41e6b3:	cmove  eax,ecx
  41e6b6:	mov    DWORD PTR [rsi],eax
  41e6b8:	cdqe   
  41e6ba:	shl    rax,0x3
  41e6be:	mov    rbx,rsi
  41e6c1:	lea    rsi,[rax+rax*4]
  41e6c5:	call   4061d0 <realloc@plt>
  41e6ca:	mov    rcx,QWORD PTR [rsp+0x8]
  41e6cf:	mov    QWORD PTR [rcx],rax
  41e6d2:	test   rax,rax
  41e6d5:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41e6db:	movsxd rcx,DWORD PTR [rbx]
  41e6de:	lea    rcx,[rcx+rcx*4]
  41e6e2:	lea    rcx,[rax+rcx*8]
  41e6e6:	mov    r9,QWORD PTR [rsp+0x10]
  41e6eb:	mov    QWORD PTR [r9],rcx
  41e6ee:	lea    rax,[rax+r14*8]
  41e6f2:	mov    r10,QWORD PTR [rsp+0x28]
  41e6f7:	mov    QWORD PTR [r10],rax
  41e6fa:	mov    r11,QWORD PTR [rsp+0x20]
  41e6ff:	mov    r8,QWORD PTR [rsp+0x18]
  41e704:	lea    rbx,[r12+0x2]
  41e709:	or     rbp,0x3d00
  41e710:	mov    QWORD PTR [rax+0x20],rbp
  41e714:	mov    QWORD PTR [rax],r12
  41e717:	mov    QWORD PTR [rax+0x8],0x2
  41e71f:	jmp    420ec3 <__flatcc_fb_parse@@Base+0x51e3>
  41e724:	cmp    rax,0x676c7535
  41e72a:	je     41ea69 <__flatcc_fb_parse@@Base+0x2d89>
  41e730:	cmp    rax,0x676f6c34
  41e736:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e73c:	cmp    DWORD PTR [r12],0x676e6f6c
  41e744:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e74a:	mov    r15,0xfffffffffffffc23
  41e751:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41e756:	cmp    rax,0x65617435
  41e75c:	je     41ec7b <__flatcc_fb_parse@@Base+0x2f9b>
  41e762:	cmp    rax,0x65627535
  41e768:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e76e:	mov    eax,DWORD PTR [r12]
  41e772:	mov    ecx,0x74796275
  41e777:	xor    eax,ecx
  41e779:	movzx  ecx,BYTE PTR [r12+0x4]
  41e77f:	xor    ecx,0x65
  41e782:	or     ecx,eax
  41e784:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e78a:	mov    r15,0xfffffffffffffc2a
  41e791:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41e796:	cmp    rax,0x74697534
  41e79c:	je     41ea91 <__flatcc_fb_parse@@Base+0x2db1>
  41e7a2:	cmp    rax,0x746c6635
  41e7a8:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e7ae:	mov    eax,DWORD PTR [r12]
  41e7b2:	mov    ecx,0x616f6c66
  41e7b7:	xor    eax,ecx
  41e7b9:	movzx  ecx,BYTE PTR [r12+0x4]
  41e7bf:	xor    ecx,0x74
  41e7c2:	or     ecx,eax
  41e7c4:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e7ca:	mov    r15,0xfffffffffffffc27
  41e7d1:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41e7d6:	cmp    rax,0x65746139
  41e7dc:	je     41eaab <__flatcc_fb_parse@@Base+0x2dcb>
  41e7e2:	cmp    rax,0x65796234
  41e7e8:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e7ee:	cmp    DWORD PTR [r12],0x65747962
  41e7f6:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e7fc:	mov    r15,0xfffffffffffffc1a
  41e803:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41e808:	cmp    rax,0x65616635
  41e80e:	je     41eadb <__flatcc_fb_parse@@Base+0x2dfb>
  41e814:	cmp    rax,0x65616e39
  41e81a:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e820:	mov    rax,QWORD PTR [r12]
  41e824:	movabs rcx,0x63617073656d616e
  41e82e:	xor    rax,rcx
  41e831:	movzx  ecx,BYTE PTR [r12+0x8]
  41e837:	xor    rcx,0x65
  41e83b:	or     rcx,rax
  41e83e:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e844:	mov    r15,0xfffffffffffffc37
  41e84b:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41e850:	cmp    rax,0x7269663f
  41e856:	je     41eb03 <__flatcc_fb_parse@@Base+0x2e23>
  41e85c:	cmp    rax,0x74687335
  41e862:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e868:	mov    eax,DWORD PTR [r12]
  41e86c:	mov    ecx,0x726f6873
  41e871:	xor    eax,ecx
  41e873:	movzx  ecx,BYTE PTR [r12+0x4]
  41e879:	xor    ecx,0x74
  41e87c:	or     ecx,eax
  41e87e:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e884:	mov    r15,0xfffffffffffffc28
  41e88b:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41e890:	cmp    rax,0x326e6935
  41e896:	je     41ec9c <__flatcc_fb_parse@@Base+0x2fbc>
  41e89c:	cmp    rax,0x34697536
  41e8a2:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e8a8:	mov    eax,DWORD PTR [r12]
  41e8ac:	mov    ecx,0x746e6975
  41e8b1:	xor    eax,ecx
  41e8b3:	movzx  ecx,WORD PTR [r12+0x4]
  41e8b9:	xor    ecx,0x3436
  41e8bf:	or     ecx,eax
  41e8c1:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e8c7:	mov    r15,0xfffffffffffffc2e
  41e8ce:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41e8d3:	cmp    rax,0x36697536
  41e8d9:	je     41ecbd <__flatcc_fb_parse@@Base+0x2fdd>
  41e8df:	cmp    rax,0x366e6935
  41e8e5:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e8eb:	mov    eax,DWORD PTR [r12]
  41e8ef:	mov    ecx,0x31746e69
  41e8f4:	xor    eax,ecx
  41e8f6:	movzx  ecx,BYTE PTR [r12+0x4]
  41e8fc:	xor    ecx,0x36
  41e8ff:	or     ecx,eax
  41e901:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e907:	mov    r15,0xfffffffffffffc20
  41e90e:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41e913:	mov    rax,QWORD PTR [rsp+0x8]
  41e918:	mov    rdi,QWORD PTR [rax]
  41e91b:	movsxd rcx,DWORD PTR [rsi]
  41e91e:	lea    r14,[rcx+rcx*4]
  41e922:	lea    rdx,[rdi+r14*8]
  41e926:	mov    QWORD PTR [r9],rdx
  41e929:	mov    rax,QWORD PTR [r10]
  41e92c:	cmp    rax,rdx
  41e92f:	jne    41e991 <__flatcc_fb_parse@@Base+0x2cb1>
  41e931:	lea    eax,[rcx+rcx*1]
  41e934:	test   ecx,ecx
  41e936:	mov    ecx,0x400
  41e93b:	cmove  eax,ecx
  41e93e:	mov    DWORD PTR [rsi],eax
  41e940:	cdqe   
  41e942:	shl    rax,0x3
  41e946:	mov    r15,rsi
  41e949:	lea    rsi,[rax+rax*4]
  41e94d:	call   4061d0 <realloc@plt>
  41e952:	mov    rcx,QWORD PTR [rsp+0x8]
  41e957:	mov    QWORD PTR [rcx],rax
  41e95a:	test   rax,rax
  41e95d:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41e963:	movsxd rcx,DWORD PTR [r15]
  41e966:	lea    rcx,[rcx+rcx*4]
  41e96a:	lea    rcx,[rax+rcx*8]
  41e96e:	mov    r9,QWORD PTR [rsp+0x10]
  41e973:	mov    QWORD PTR [r9],rcx
  41e976:	lea    rax,[rax+r14*8]
  41e97a:	mov    r10,QWORD PTR [rsp+0x28]
  41e97f:	mov    QWORD PTR [r10],rax
  41e982:	mov    r11,QWORD PTR [rsp+0x20]
  41e987:	mov    r8,QWORD PTR [rsp+0x18]
  41e98c:	mov    r15,QWORD PTR [rsp+0x40]
  41e991:	mov    QWORD PTR [rax+0x20],rbp
  41e995:	jmp    420eb8 <__flatcc_fb_parse@@Base+0x51d8>
  41e99a:	inc    r12
  41e99d:	cmp    r12,r13
  41e9a0:	jne    41e9bc <__flatcc_fb_parse@@Base+0x2cdc>
  41e9a2:	jmp    4219aa <__flatcc_fb_parse@@Base+0x5cca>
  41e9a7:	nop    WORD PTR [rax+rax*1+0x0]
  41e9b0:	inc    r12
  41e9b3:	cmp    r13,r12
  41e9b6:	je     4219aa <__flatcc_fb_parse@@Base+0x5cca>
  41e9bc:	movzx  eax,BYTE PTR [r12]
  41e9c1:	cmp    al,0x20
  41e9c3:	je     41e9b0 <__flatcc_fb_parse@@Base+0x2cd0>
  41e9c5:	cmp    al,0x9
  41e9c7:	je     41e9b0 <__flatcc_fb_parse@@Base+0x2cd0>
  41e9c9:	mov    rbx,r12
  41e9cc:	jmp    41e1d7 <__flatcc_fb_parse@@Base+0x24f7>
  41e9d1:	mov    rax,QWORD PTR [r12]
  41e9d5:	movabs rcx,0x767265735f637072
  41e9df:	xor    rax,rcx
  41e9e2:	mov    rcx,QWORD PTR [r12+0x3]
  41e9e7:	movabs rdi,0x656369767265735f
  41e9f1:	xor    rcx,rdi
  41e9f4:	or     rcx,rax
  41e9f7:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41e9fd:	mov    r15,0xfffffffffffffc39
  41ea04:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41ea09:	mov    eax,DWORD PTR [r12]
  41ea0d:	mov    ecx,0x746e6975
  41ea12:	xor    eax,ecx
  41ea14:	movzx  ecx,BYTE PTR [r12+0x4]
  41ea1a:	xor    ecx,0x38
  41ea1d:	or     ecx,eax
  41ea1f:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41ea25:	mov    r15,0xfffffffffffffc2b
  41ea2c:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41ea31:	mov    rax,QWORD PTR [r12]
  41ea35:	movabs rcx,0x7478655f656c6966
  41ea3f:	xor    rax,rcx
  41ea42:	mov    rcx,QWORD PTR [r12+0x6]
  41ea47:	movabs rdi,0x6e6f69736e657478
  41ea51:	xor    rcx,rdi
  41ea54:	or     rcx,rax
  41ea57:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41ea5d:	mov    r15,0xfffffffffffffc3a
  41ea64:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41ea69:	mov    eax,DWORD PTR [r12]
  41ea6d:	mov    ecx,0x6e6f6c75
  41ea72:	xor    eax,ecx
  41ea74:	movzx  ecx,BYTE PTR [r12+0x4]
  41ea7a:	xor    ecx,0x67
  41ea7d:	or     ecx,eax
  41ea7f:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41ea85:	mov    r15,0xfffffffffffffc2f
  41ea8c:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41ea91:	cmp    DWORD PTR [r12],0x746e6975
  41ea99:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41ea9f:	mov    r15,0xfffffffffffffc25
  41eaa6:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41eaab:	mov    rax,QWORD PTR [r12]
  41eaaf:	movabs rcx,0x7475626972747461
  41eab9:	xor    rax,rcx
  41eabc:	movzx  ecx,BYTE PTR [r12+0x8]
  41eac2:	xor    rcx,0x65
  41eac6:	or     rcx,rax
  41eac9:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41eacf:	mov    r15,0xfffffffffffffc36
  41ead6:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41eadb:	mov    eax,DWORD PTR [r12]
  41eadf:	mov    ecx,0x736c6166
  41eae4:	xor    eax,ecx
  41eae6:	movzx  ecx,BYTE PTR [r12+0x4]
  41eaec:	xor    ecx,0x65
  41eaef:	or     ecx,eax
  41eaf1:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41eaf7:	mov    r15,0xfffffffffffffc26
  41eafe:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41eb03:	mov    rax,QWORD PTR [r12]
  41eb07:	movabs rcx,0x6564695f656c6966
  41eb11:	xor    rax,rcx
  41eb14:	mov    rcx,QWORD PTR [r12+0x7]
  41eb19:	movabs rdi,0x7265696669746e65
  41eb23:	xor    rcx,rdi
  41eb26:	or     rcx,rax
  41eb29:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41eb2f:	mov    r15,0xfffffffffffffc3b
  41eb36:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41eb3b:	mov    eax,DWORD PTR [r12]
  41eb3f:	mov    ecx,0x69727473
  41eb44:	xor    eax,ecx
  41eb46:	movzx  ecx,WORD PTR [r12+0x4]
  41eb4c:	xor    ecx,0x676e
  41eb52:	or     ecx,eax
  41eb54:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41eb5a:	mov    r15,0xfffffffffffffc32
  41eb61:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41eb66:	cmp    DWORD PTR [r12],0x6c6f6f62
  41eb6e:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41eb74:	mov    r15,0xfffffffffffffc19
  41eb7b:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41eb80:	mov    eax,DWORD PTR [r12]
  41eb84:	mov    ecx,0x6c636e69
  41eb89:	xor    eax,ecx
  41eb8b:	mov    ecx,DWORD PTR [r12+0x3]
  41eb90:	mov    edi,0x6564756c
  41eb95:	xor    ecx,edi
  41eb97:	or     ecx,eax
  41eb99:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41eb9f:	mov    r15,0xfffffffffffffc35
  41eba6:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41ebab:	mov    eax,DWORD PTR [r12]
  41ebaf:	mov    ecx,0x62756f64
  41ebb4:	xor    eax,ecx
  41ebb6:	movzx  ecx,WORD PTR [r12+0x4]
  41ebbc:	xor    ecx,0x656c
  41ebc2:	or     ecx,eax
  41ebc4:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41ebca:	mov    r15,0xfffffffffffffc31
  41ebd1:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41ebd6:	mov    eax,DWORD PTR [r12]
  41ebda:	mov    ecx,0x75727473
  41ebdf:	xor    eax,ecx
  41ebe1:	movzx  ecx,WORD PTR [r12+0x4]
  41ebe7:	xor    ecx,0x7463
  41ebed:	or     ecx,eax
  41ebef:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41ebf5:	mov    r15,0xfffffffffffffc33
  41ebfc:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41ec01:	mov    eax,DWORD PTR [r12]
  41ec05:	mov    ecx,0x6f687375
  41ec0a:	xor    eax,ecx
  41ec0c:	movzx  ecx,WORD PTR [r12+0x4]
  41ec12:	xor    ecx,0x7472
  41ec18:	or     ecx,eax
  41ec1a:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41ec20:	mov    r15,0xfffffffffffffc34
  41ec27:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41ec2c:	mov    eax,DWORD PTR [r12]
  41ec30:	mov    ecx,0x746e6975
  41ec35:	xor    eax,ecx
  41ec37:	movzx  ecx,WORD PTR [r12+0x4]
  41ec3d:	xor    ecx,0x3233
  41ec43:	or     ecx,eax
  41ec45:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41ec4b:	mov    r15,0xfffffffffffffc2d
  41ec52:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41ec57:	mov    eax,DWORD PTR [r12]
  41ec5b:	mov    ecx,0x616f6c66
  41ec60:	xor    eax,ecx
  41ec62:	mov    ecx,DWORD PTR [r12+0x3]
  41ec67:	mov    edi,0x34367461
  41ec6c:	xor    ecx,edi
  41ec6e:	or     ecx,eax
  41ec70:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41ec72:	mov    r15,0xfffffffffffffc1d
  41ec79:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41ec7b:	mov    eax,DWORD PTR [r12]
  41ec7f:	mov    ecx,0x6c626174
  41ec84:	xor    eax,ecx
  41ec86:	movzx  ecx,BYTE PTR [r12+0x4]
  41ec8c:	xor    ecx,0x65
  41ec8f:	or     ecx,eax
  41ec91:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41ec93:	mov    r15,0xfffffffffffffc29
  41ec9a:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41ec9c:	mov    eax,DWORD PTR [r12]
  41eca0:	mov    ecx,0x33746e69
  41eca5:	xor    eax,ecx
  41eca7:	movzx  ecx,BYTE PTR [r12+0x4]
  41ecad:	xor    ecx,0x32
  41ecb0:	or     ecx,eax
  41ecb2:	jne    41ece0 <__flatcc_fb_parse@@Base+0x3000>
  41ecb4:	mov    r15,0xfffffffffffffc21
  41ecbb:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41ecbd:	mov    eax,DWORD PTR [r12]
  41ecc1:	mov    ecx,0x746e6975
  41ecc6:	xor    eax,ecx
  41ecc8:	movzx  ecx,WORD PTR [r12+0x4]
  41ecce:	xor    ecx,0x3631
  41ecd4:	or     ecx,eax
  41ecd6:	je     41fd95 <__flatcc_fb_parse@@Base+0x40b5>
  41ecdc:	nop    DWORD PTR [rax+0x0]
  41ece0:	mov    r15d,0x9
  41ece6:	mov    rdi,QWORD PTR [rdx]
  41ece9:	movsxd rcx,DWORD PTR [rsi]
  41ecec:	lea    r13,[rcx+rcx*4]
  41ecf0:	lea    rdx,[rdi+r13*8]
  41ecf4:	mov    QWORD PTR [r9],rdx
  41ecf7:	mov    rax,QWORD PTR [r10]
  41ecfa:	cmp    rax,rdx
  41ecfd:	jne    41e1aa <__flatcc_fb_parse@@Base+0x24ca>
  41ed03:	lea    eax,[rcx+rcx*1]
  41ed06:	test   ecx,ecx
  41ed08:	mov    ecx,0x400
  41ed0d:	cmove  eax,ecx
  41ed10:	mov    DWORD PTR [rsi],eax
  41ed12:	cdqe   
  41ed14:	shl    rax,0x3
  41ed18:	mov    rbp,rsi
  41ed1b:	lea    rsi,[rax+rax*4]
  41ed1f:	call   4061d0 <realloc@plt>
  41ed24:	mov    rcx,QWORD PTR [rsp+0x8]
  41ed29:	mov    QWORD PTR [rcx],rax
  41ed2c:	test   rax,rax
  41ed2f:	jne    41e180 <__flatcc_fb_parse@@Base+0x24a0>
  41ed35:	jmp    421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41ed3a:	lea    rbx,[r12+0x1]
  41ed3f:	cmp    rbx,r13
  41ed42:	mov    rsi,QWORD PTR [rsp+0x30]
  41ed47:	je     41fda1 <__flatcc_fb_parse@@Base+0x40c1>
  41ed4d:	movsx  eax,BYTE PTR [rbx]
  41ed50:	cmp    eax,0x3d
  41ed53:	je     420769 <__flatcc_fb_parse@@Base+0x4a89>
  41ed59:	cmp    eax,0x3c
  41ed5c:	je     4207f5 <__flatcc_fb_parse@@Base+0x4b15>
  41ed62:	cmp    eax,0x2d
  41ed65:	jne    41fda1 <__flatcc_fb_parse@@Base+0x40c1>
  41ed6b:	mov    rax,QWORD PTR [rsp+0x8]
  41ed70:	mov    rdi,QWORD PTR [rax]
  41ed73:	movsxd rcx,DWORD PTR [rsi]
  41ed76:	lea    rbx,[rcx+rcx*4]
  41ed7a:	lea    rdx,[rdi+rbx*8]
  41ed7e:	mov    QWORD PTR [r9],rdx
  41ed81:	mov    rax,QWORD PTR [r10]
  41ed84:	cmp    rax,rdx
  41ed87:	jne    41ede5 <__flatcc_fb_parse@@Base+0x3105>
  41ed89:	lea    eax,[rcx+rcx*1]
  41ed8c:	test   ecx,ecx
  41ed8e:	mov    ecx,0x400
  41ed93:	cmove  eax,ecx
  41ed96:	mov    DWORD PTR [rsi],eax
  41ed98:	cdqe   
  41ed9a:	shl    rax,0x3
  41ed9e:	mov    rbp,rsi
  41eda1:	lea    rsi,[rax+rax*4]
  41eda5:	call   4061d0 <realloc@plt>
  41edaa:	mov    rcx,QWORD PTR [rsp+0x8]
  41edaf:	mov    QWORD PTR [rcx],rax
  41edb2:	test   rax,rax
  41edb5:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41edbb:	movsxd rcx,DWORD PTR [rbp+0x0]
  41edbf:	lea    rcx,[rcx+rcx*4]
  41edc3:	lea    rcx,[rax+rcx*8]
  41edc7:	mov    r9,QWORD PTR [rsp+0x10]
  41edcc:	mov    QWORD PTR [r9],rcx
  41edcf:	lea    rax,[rax+rbx*8]
  41edd3:	mov    r10,QWORD PTR [rsp+0x28]
  41edd8:	mov    QWORD PTR [r10],rax
  41eddb:	mov    r11,QWORD PTR [rsp+0x20]
  41ede0:	mov    r8,QWORD PTR [rsp+0x18]
  41ede5:	lea    rbx,[r12+0x2]
  41edea:	mov    QWORD PTR [rax+0x20],0x2d3c
  41edf2:	jmp    41e714 <__flatcc_fb_parse@@Base+0x2a34>
  41edf7:	lea    rbx,[r12+0x1]
  41edfc:	cmp    rbx,r13
  41edff:	mov    rsi,QWORD PTR [rsp+0x30]
  41ee04:	je     41fb79 <__flatcc_fb_parse@@Base+0x3e99>
  41ee0a:	movsx  eax,BYTE PTR [rbx]
  41ee0d:	cmp    eax,0x2b
  41ee10:	je     420029 <__flatcc_fb_parse@@Base+0x4349>
  41ee16:	cmp    eax,0x3d
  41ee19:	jne    41fb79 <__flatcc_fb_parse@@Base+0x3e99>
  41ee1f:	mov    rax,QWORD PTR [rsp+0x8]
  41ee24:	mov    rdi,QWORD PTR [rax]
  41ee27:	movsxd rcx,DWORD PTR [rsi]
  41ee2a:	lea    rbx,[rcx+rcx*4]
  41ee2e:	lea    rdx,[rdi+rbx*8]
  41ee32:	mov    QWORD PTR [r9],rdx
  41ee35:	mov    rax,QWORD PTR [r10]
  41ee38:	cmp    rax,rdx
  41ee3b:	jne    41ee99 <__flatcc_fb_parse@@Base+0x31b9>
  41ee3d:	lea    eax,[rcx+rcx*1]
  41ee40:	test   ecx,ecx
  41ee42:	mov    ecx,0x400
  41ee47:	cmove  eax,ecx
  41ee4a:	mov    DWORD PTR [rsi],eax
  41ee4c:	cdqe   
  41ee4e:	shl    rax,0x3
  41ee52:	mov    rbp,rsi
  41ee55:	lea    rsi,[rax+rax*4]
  41ee59:	call   4061d0 <realloc@plt>
  41ee5e:	mov    rcx,QWORD PTR [rsp+0x8]
  41ee63:	mov    QWORD PTR [rcx],rax
  41ee66:	test   rax,rax
  41ee69:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41ee6f:	movsxd rcx,DWORD PTR [rbp+0x0]
  41ee73:	lea    rcx,[rcx+rcx*4]
  41ee77:	lea    rcx,[rax+rcx*8]
  41ee7b:	mov    r9,QWORD PTR [rsp+0x10]
  41ee80:	mov    QWORD PTR [r9],rcx
  41ee83:	lea    rax,[rax+rbx*8]
  41ee87:	mov    r10,QWORD PTR [rsp+0x28]
  41ee8c:	mov    QWORD PTR [r10],rax
  41ee8f:	mov    r11,QWORD PTR [rsp+0x20]
  41ee94:	mov    r8,QWORD PTR [rsp+0x18]
  41ee99:	lea    rbx,[r12+0x2]
  41ee9e:	mov    QWORD PTR [rax+0x20],0x3d2b
  41eea6:	jmp    41e714 <__flatcc_fb_parse@@Base+0x2a34>
  41eeab:	lea    rbx,[r12+0x1]
  41eeb0:	cmp    rbx,r13
  41eeb3:	mov    rsi,QWORD PTR [rsp+0x30]
  41eeb8:	je     41fe28 <__flatcc_fb_parse@@Base+0x4148>
  41eebe:	movsx  eax,BYTE PTR [rbx]
  41eec1:	cmp    eax,0x2a
  41eec4:	je     4208a4 <__flatcc_fb_parse@@Base+0x4bc4>
  41eeca:	cmp    eax,0x3d
  41eecd:	je     4208c5 <__flatcc_fb_parse@@Base+0x4be5>
  41eed3:	cmp    eax,0x2f
  41eed6:	jne    41fe28 <__flatcc_fb_parse@@Base+0x4148>
  41eedc:	lea    rbp,[r12+0x2]
  41eee1:	cmp    rbp,r13
  41eee4:	je     420f67 <__flatcc_fb_parse@@Base+0x5287>
  41eeea:	mov    al,BYTE PTR [rbp+0x0]
  41eeed:	cmp    al,0x2f
  41eeef:	sete   cl
  41eef2:	cmp    al,0x21
  41eef4:	sete   al
  41eef7:	or     al,cl
  41eef9:	jmp    420f69 <__flatcc_fb_parse@@Base+0x5289>
  41eefe:	lea    rax,[r12+0x1]
  41ef03:	mov    rbx,r12
  41ef06:	cmp    rax,r13
  41ef09:	mov    rsi,QWORD PTR [rsp+0x30]
  41ef0e:	je     41e4d0 <__flatcc_fb_parse@@Base+0x27f0>
  41ef14:	movsx  eax,BYTE PTR [rax]
  41ef17:	or     eax,0x20
  41ef1a:	mov    rbx,r12
  41ef1d:	cmp    eax,0x78
  41ef20:	jne    41e4d0 <__flatcc_fb_parse@@Base+0x27f0>
  41ef26:	lea    rax,[r12+0x2]
  41ef2b:	mov    rbx,r13
  41ef2e:	cmp    rax,r13
  41ef31:	jne    41ef4c <__flatcc_fb_parse@@Base+0x326c>
  41ef33:	jmp    4205a2 <__flatcc_fb_parse@@Base+0x48c2>
  41ef38:	nop    DWORD PTR [rax+rax*1+0x0]
  41ef40:	inc    rax
  41ef43:	cmp    r13,rax
  41ef46:	je     42059f <__flatcc_fb_parse@@Base+0x48bf>
  41ef4c:	movzx  ecx,BYTE PTR [rax]
  41ef4f:	lea    edx,[rcx-0x30]
  41ef52:	cmp    dl,0xa
  41ef55:	jb     41ef40 <__flatcc_fb_parse@@Base+0x3260>
  41ef57:	or     cl,0x20
  41ef5a:	add    cl,0x9f
  41ef5d:	cmp    cl,0x5
  41ef60:	jbe    41ef40 <__flatcc_fb_parse@@Base+0x3260>
  41ef62:	mov    rbx,rax
  41ef65:	jmp    4205a2 <__flatcc_fb_parse@@Base+0x48c2>
  41ef6a:	lea    rbx,[r12+0x1]
  41ef6f:	cmp    rbx,r13
  41ef72:	mov    rsi,QWORD PTR [rsp+0x30]
  41ef77:	je     41fc00 <__flatcc_fb_parse@@Base+0x3f20>
  41ef7d:	movsx  eax,BYTE PTR [rbx]
  41ef80:	cmp    eax,0x3a
  41ef83:	je     4200b5 <__flatcc_fb_parse@@Base+0x43d5>
  41ef89:	cmp    eax,0x3d
  41ef8c:	jne    41fc00 <__flatcc_fb_parse@@Base+0x3f20>
  41ef92:	mov    rax,QWORD PTR [rsp+0x8]
  41ef97:	mov    rdi,QWORD PTR [rax]
  41ef9a:	movsxd rcx,DWORD PTR [rsi]
  41ef9d:	lea    rbx,[rcx+rcx*4]
  41efa1:	lea    rdx,[rdi+rbx*8]
  41efa5:	mov    QWORD PTR [r9],rdx
  41efa8:	mov    rax,QWORD PTR [r10]
  41efab:	cmp    rax,rdx
  41efae:	jne    41f00c <__flatcc_fb_parse@@Base+0x332c>
  41efb0:	lea    eax,[rcx+rcx*1]
  41efb3:	test   ecx,ecx
  41efb5:	mov    ecx,0x400
  41efba:	cmove  eax,ecx
  41efbd:	mov    DWORD PTR [rsi],eax
  41efbf:	cdqe   
  41efc1:	shl    rax,0x3
  41efc5:	mov    rbp,rsi
  41efc8:	lea    rsi,[rax+rax*4]
  41efcc:	call   4061d0 <realloc@plt>
  41efd1:	mov    rcx,QWORD PTR [rsp+0x8]
  41efd6:	mov    QWORD PTR [rcx],rax
  41efd9:	test   rax,rax
  41efdc:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41efe2:	movsxd rcx,DWORD PTR [rbp+0x0]
  41efe6:	lea    rcx,[rcx+rcx*4]
  41efea:	lea    rcx,[rax+rcx*8]
  41efee:	mov    r9,QWORD PTR [rsp+0x10]
  41eff3:	mov    QWORD PTR [r9],rcx
  41eff6:	lea    rax,[rax+rbx*8]
  41effa:	mov    r10,QWORD PTR [rsp+0x28]
  41efff:	mov    QWORD PTR [r10],rax
  41f002:	mov    r11,QWORD PTR [rsp+0x20]
  41f007:	mov    r8,QWORD PTR [rsp+0x18]
  41f00c:	lea    rbx,[r12+0x2]
  41f011:	mov    QWORD PTR [rax+0x20],0x3d3a
  41f019:	jmp    41e714 <__flatcc_fb_parse@@Base+0x2a34>
  41f01e:	lea    rbx,[r12+0x1]
  41f023:	cmp    rbx,r13
  41f026:	mov    rsi,QWORD PTR [rsp+0x30]
  41f02b:	je     41fc87 <__flatcc_fb_parse@@Base+0x3fa7>
  41f031:	movsx  eax,BYTE PTR [rbx]
  41f034:	cmp    eax,0x3e
  41f037:	je     420158 <__flatcc_fb_parse@@Base+0x4478>
  41f03d:	cmp    eax,0x3d
  41f040:	jne    41fc87 <__flatcc_fb_parse@@Base+0x3fa7>
  41f046:	mov    rax,QWORD PTR [rsp+0x8]
  41f04b:	mov    rdi,QWORD PTR [rax]
  41f04e:	movsxd rcx,DWORD PTR [rsi]
  41f051:	lea    rbx,[rcx+rcx*4]
  41f055:	lea    rdx,[rdi+rbx*8]
  41f059:	mov    QWORD PTR [r9],rdx
  41f05c:	mov    rax,QWORD PTR [r10]
  41f05f:	cmp    rax,rdx
  41f062:	jne    41f0c0 <__flatcc_fb_parse@@Base+0x33e0>
  41f064:	lea    eax,[rcx+rcx*1]
  41f067:	test   ecx,ecx
  41f069:	mov    ecx,0x400
  41f06e:	cmove  eax,ecx
  41f071:	mov    DWORD PTR [rsi],eax
  41f073:	cdqe   
  41f075:	shl    rax,0x3
  41f079:	mov    rbp,rsi
  41f07c:	lea    rsi,[rax+rax*4]
  41f080:	call   4061d0 <realloc@plt>
  41f085:	mov    rcx,QWORD PTR [rsp+0x8]
  41f08a:	mov    QWORD PTR [rcx],rax
  41f08d:	test   rax,rax
  41f090:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41f096:	movsxd rcx,DWORD PTR [rbp+0x0]
  41f09a:	lea    rcx,[rcx+rcx*4]
  41f09e:	lea    rcx,[rax+rcx*8]
  41f0a2:	mov    r9,QWORD PTR [rsp+0x10]
  41f0a7:	mov    QWORD PTR [r9],rcx
  41f0aa:	lea    rax,[rax+rbx*8]
  41f0ae:	mov    r10,QWORD PTR [rsp+0x28]
  41f0b3:	mov    QWORD PTR [r10],rax
  41f0b6:	mov    r11,QWORD PTR [rsp+0x20]
  41f0bb:	mov    r8,QWORD PTR [rsp+0x18]
  41f0c0:	lea    rbx,[r12+0x2]
  41f0c5:	mov    QWORD PTR [rax+0x20],0x3d3e
  41f0cd:	jmp    41e714 <__flatcc_fb_parse@@Base+0x2a34>
  41f0d2:	mov    rbx,QWORD PTR [rsp+0x8]
  41f0d7:	mov    rax,QWORD PTR [rbx]
  41f0da:	mov    rbp,QWORD PTR [rsp+0x30]
  41f0df:	mov    esi,DWORD PTR [rbp+0x0]
  41f0e2:	movsxd rcx,esi
  41f0e5:	lea    r14,[rcx+rcx*4]
  41f0e9:	lea    rdx,[rax+r14*8]
  41f0ed:	mov    QWORD PTR [r9],rdx
  41f0f0:	mov    rcx,QWORD PTR [r10]
  41f0f3:	cmp    rcx,rdx
  41f0f6:	jne    41f151 <__flatcc_fb_parse@@Base+0x3471>
  41f0f8:	lea    ecx,[rsi+rsi*1]
  41f0fb:	test   esi,esi
  41f0fd:	mov    edx,0x400
  41f102:	cmove  ecx,edx
  41f105:	mov    DWORD PTR [rbp+0x0],ecx
  41f108:	movsxd rcx,ecx
  41f10b:	shl    rcx,0x3
  41f10f:	lea    rsi,[rcx+rcx*4]
  41f113:	mov    rdi,rax
  41f116:	call   4061d0 <realloc@plt>
  41f11b:	mov    QWORD PTR [rbx],rax
  41f11e:	test   rax,rax
  41f121:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41f127:	movsxd rsi,DWORD PTR [rbp+0x0]
  41f12b:	lea    rcx,[rsi+rsi*4]
  41f12f:	lea    rcx,[rax+rcx*8]
  41f133:	mov    rdx,QWORD PTR [rsp+0x10]
  41f138:	mov    QWORD PTR [rdx],rcx
  41f13b:	lea    rcx,[rax+r14*8]
  41f13f:	mov    r10,QWORD PTR [rsp+0x28]
  41f144:	mov    QWORD PTR [r10],rcx
  41f147:	mov    r11,QWORD PTR [rsp+0x20]
  41f14c:	mov    r8,QWORD PTR [rsp+0x18]
  41f151:	lea    rbx,[r12+0x1]
  41f156:	mov    QWORD PTR [rcx+0x20],0x13
  41f15e:	mov    QWORD PTR [rcx],r12
  41f161:	mov    QWORD PTR [rcx+0x8],0x1
  41f169:	mov    r9,QWORD PTR [r8]
  41f16c:	mov    QWORD PTR [rcx+0x10],r9
  41f170:	mov    r8,QWORD PTR [r11]
  41f173:	sub    r12,r8
  41f176:	inc    r12
  41f179:	mov    QWORD PTR [rcx+0x18],r12
  41f17d:	add    rcx,0x28
  41f181:	mov    QWORD PTR [r10],rcx
  41f184:	mov    r14,rbx
  41f187:	jmp    41f1eb <__flatcc_fb_parse@@Base+0x350b>
  41f189:	movsxd rsi,DWORD PTR [rbx]
  41f18c:	lea    rcx,[rsi+rsi*4]
  41f190:	lea    rcx,[rax+rcx*8]
  41f194:	mov    rdx,QWORD PTR [rsp+0x10]
  41f199:	mov    QWORD PTR [rdx],rcx
  41f19c:	lea    rcx,[rax+rbp*8]
  41f1a0:	mov    r10,QWORD PTR [rsp+0x28]
  41f1a5:	mov    QWORD PTR [r10],rcx
  41f1a8:	mov    rdx,QWORD PTR [rsp+0x18]
  41f1ad:	mov    r9,QWORD PTR [rdx]
  41f1b0:	mov    r11,QWORD PTR [rsp+0x20]
  41f1b5:	mov    r8,QWORD PTR [r11]
  41f1b8:	inc    r14
  41f1bb:	mov    QWORD PTR [rcx+0x20],0x6
  41f1c3:	mov    QWORD PTR [rcx],r13
  41f1c6:	mov    QWORD PTR [rcx+0x8],0x1
  41f1ce:	mov    QWORD PTR [rcx+0x10],r9
  41f1d2:	sub    r13,r8
  41f1d5:	inc    r13
  41f1d8:	mov    QWORD PTR [rcx+0x18],r13
  41f1dc:	add    rcx,0x28
  41f1e0:	mov    QWORD PTR [r10],rcx
  41f1e3:	mov    rbx,r14
  41f1e6:	mov    r13,QWORD PTR [rsp+0x48]
  41f1eb:	lea    r12,[rbx-0x1]
  41f1ef:	nop
  41f1f0:	mov    rbp,rbx
  41f1f3:	cmp    r13,rbx
  41f1f6:	je     41f2f0 <__flatcc_fb_parse@@Base+0x3610>
  41f1fc:	movzx  edx,BYTE PTR [rbp+0x0]
  41f200:	cmp    dl,0x22
  41f203:	je     41f490 <__flatcc_fb_parse@@Base+0x37b0>
  41f209:	cmp    dl,0x5c
  41f20c:	je     41f490 <__flatcc_fb_parse@@Base+0x37b0>
  41f212:	inc    r12
  41f215:	xor    r15d,r15d
  41f218:	cmp    dl,0x20
  41f21b:	jl     41f230 <__flatcc_fb_parse@@Base+0x3550>
  41f21d:	lea    rbx,[rbp+0x1]
  41f221:	cmp    dl,0x7f
  41f224:	jne    41f1f0 <__flatcc_fb_parse@@Base+0x3510>
  41f226:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f230:	cmp    r14,r12
  41f233:	je     41f2ff <__flatcc_fb_parse@@Base+0x361f>
  41f239:	movsxd rdx,esi
  41f23c:	lea    rbx,[rdx+rdx*4]
  41f240:	lea    rdx,[rax+rbx*8]
  41f244:	mov    rdi,QWORD PTR [rsp+0x10]
  41f249:	mov    QWORD PTR [rdi],rdx
  41f24c:	cmp    rcx,rdx
  41f24f:	jne    41f2bb <__flatcc_fb_parse@@Base+0x35db>
  41f251:	lea    ecx,[rsi+rsi*1]
  41f254:	test   esi,esi
  41f256:	mov    edx,0x400
  41f25b:	cmove  ecx,edx
  41f25e:	mov    r13,QWORD PTR [rsp+0x30]
  41f263:	mov    DWORD PTR [r13+0x0],ecx
  41f267:	movsxd rcx,ecx
  41f26a:	shl    rcx,0x3
  41f26e:	lea    rsi,[rcx+rcx*4]
  41f272:	mov    rdi,rax
  41f275:	call   4061d0 <realloc@plt>
  41f27a:	mov    rcx,QWORD PTR [rsp+0x8]
  41f27f:	mov    QWORD PTR [rcx],rax
  41f282:	test   rax,rax
  41f285:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41f28b:	movsxd rsi,DWORD PTR [r13+0x0]
  41f28f:	lea    rcx,[rsi+rsi*4]
  41f293:	lea    rcx,[rax+rcx*8]
  41f297:	mov    rdx,QWORD PTR [rsp+0x10]
  41f29c:	mov    QWORD PTR [rdx],rcx
  41f29f:	lea    rcx,[rax+rbx*8]
  41f2a3:	mov    r10,QWORD PTR [rsp+0x28]
  41f2a8:	mov    QWORD PTR [r10],rcx
  41f2ab:	mov    rdx,QWORD PTR [rsp+0x18]
  41f2b0:	mov    r9,QWORD PTR [rdx]
  41f2b3:	mov    r11,QWORD PTR [rsp+0x20]
  41f2b8:	mov    r8,QWORD PTR [r11]
  41f2bb:	mov    QWORD PTR [rcx+0x20],0x14
  41f2c3:	mov    QWORD PTR [rcx],r14
  41f2c6:	mov    rdx,r12
  41f2c9:	sub    rdx,r14
  41f2cc:	mov    QWORD PTR [rcx+0x8],rdx
  41f2d0:	mov    QWORD PTR [rcx+0x10],r9
  41f2d4:	sub    r14,r8
  41f2d7:	inc    r14
  41f2da:	mov    QWORD PTR [rcx+0x18],r14
  41f2de:	add    rcx,0x28
  41f2e2:	mov    QWORD PTR [r10],rcx
  41f2e5:	mov    r13,r12
  41f2e8:	jmp    41f302 <__flatcc_fb_parse@@Base+0x3622>
  41f2ea:	nop    WORD PTR [rax+rax*1+0x0]
  41f2f0:	mov    r15b,0x1
  41f2f3:	mov    r12,r13
  41f2f6:	cmp    r14,r12
  41f2f9:	jne    41f239 <__flatcc_fb_parse@@Base+0x3559>
  41f2ff:	mov    r13,r14
  41f302:	mov    dil,BYTE PTR [r12]
  41f306:	cmp    dil,0x22
  41f30a:	je     41ff36 <__flatcc_fb_parse@@Base+0x4256>
  41f310:	test   dil,dil
  41f313:	setne  dl
  41f316:	not    r15b
  41f319:	test   r15b,dl
  41f31c:	je     41fffe <__flatcc_fb_parse@@Base+0x431e>
  41f322:	cmp    dil,0x5c
  41f326:	mov    r15,QWORD PTR [rsp+0x40]
  41f32b:	jne    41f420 <__flatcc_fb_parse@@Base+0x3740>
  41f331:	movsxd rdx,esi
  41f334:	lea    r14,[rdx+rdx*4]
  41f338:	lea    rdx,[rax+r14*8]
  41f33c:	mov    rdi,QWORD PTR [rsp+0x10]
  41f341:	mov    QWORD PTR [rdi],rdx
  41f344:	cmp    rcx,rdx
  41f347:	jne    41f3b6 <__flatcc_fb_parse@@Base+0x36d6>
  41f349:	lea    ecx,[rsi+rsi*1]
  41f34c:	test   esi,esi
  41f34e:	mov    edx,0x400
  41f353:	cmove  ecx,edx
  41f356:	mov    r15,QWORD PTR [rsp+0x30]
  41f35b:	mov    DWORD PTR [r15],ecx
  41f35e:	movsxd rcx,ecx
  41f361:	shl    rcx,0x3
  41f365:	lea    rsi,[rcx+rcx*4]
  41f369:	mov    rdi,rax
  41f36c:	call   4061d0 <realloc@plt>
  41f371:	mov    rcx,QWORD PTR [rsp+0x8]
  41f376:	mov    QWORD PTR [rcx],rax
  41f379:	test   rax,rax
  41f37c:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41f382:	movsxd rsi,DWORD PTR [r15]
  41f385:	lea    rcx,[rsi+rsi*4]
  41f389:	lea    rcx,[rax+rcx*8]
  41f38d:	mov    rdx,QWORD PTR [rsp+0x10]
  41f392:	mov    QWORD PTR [rdx],rcx
  41f395:	lea    rcx,[rax+r14*8]
  41f399:	mov    r10,QWORD PTR [rsp+0x28]
  41f39e:	mov    QWORD PTR [r10],rcx
  41f3a1:	mov    rdx,QWORD PTR [rsp+0x18]
  41f3a6:	mov    r9,QWORD PTR [rdx]
  41f3a9:	mov    r11,QWORD PTR [rsp+0x20]
  41f3ae:	mov    r8,QWORD PTR [r11]
  41f3b1:	mov    r15,QWORD PTR [rsp+0x40]
  41f3b6:	lea    r14,[rbp+0x1]
  41f3ba:	mov    QWORD PTR [rcx+0x20],0x15
  41f3c2:	mov    QWORD PTR [rcx],r13
  41f3c5:	mov    rdx,r14
  41f3c8:	sub    rdx,r13
  41f3cb:	mov    QWORD PTR [rcx+0x8],rdx
  41f3cf:	mov    QWORD PTR [rcx+0x10],r9
  41f3d3:	sub    r13,r8
  41f3d6:	inc    r13
  41f3d9:	mov    QWORD PTR [rcx+0x18],r13
  41f3dd:	add    rcx,0x28
  41f3e1:	mov    QWORD PTR [r10],rcx
  41f3e4:	cmp    QWORD PTR [rsp+0x60],rbp
  41f3e9:	je     420c2f <__flatcc_fb_parse@@Base+0x4f4f>
  41f3ef:	movzx  edi,BYTE PTR [r14]
  41f3f3:	cmp    rdi,0x22
  41f3f7:	mov    r13,QWORD PTR [rsp+0x48]
  41f3fc:	ja     41f4a4 <__flatcc_fb_parse@@Base+0x37c4>
  41f402:	lea    rdx,[rip+0x265d7]        # 4459e0 <fb_schema_table_deleted@@Base+0x298>
  41f409:	mov    rbx,rdx
  41f40c:	movsxd rdx,DWORD PTR [rdx+rdi*4]
  41f410:	add    rdx,rbx
  41f413:	jmp    rdx
  41f415:	nop    WORD PTR cs:[rax+rax*1+0x0]
  41f41f:	nop
  41f420:	mov    r14,r12
  41f423:	cmp    dil,0xd
  41f427:	je     4206b0 <__flatcc_fb_parse@@Base+0x49d0>
  41f42d:	cmp    dil,0xa
  41f431:	je     4206b0 <__flatcc_fb_parse@@Base+0x49d0>
  41f437:	movsxd rdx,esi
  41f43a:	lea    rbp,[rdx+rdx*4]
  41f43e:	lea    rdx,[rax+rbp*8]
  41f442:	mov    rdi,QWORD PTR [rsp+0x10]
  41f447:	mov    QWORD PTR [rdi],rdx
  41f44a:	cmp    rcx,rdx
  41f44d:	jne    41f1b8 <__flatcc_fb_parse@@Base+0x34d8>
  41f453:	lea    ecx,[rsi+rsi*1]
  41f456:	test   esi,esi
  41f458:	mov    edx,0x400
  41f45d:	cmove  ecx,edx
  41f460:	mov    rbx,QWORD PTR [rsp+0x30]
  41f465:	mov    DWORD PTR [rbx],ecx
  41f467:	movsxd rcx,ecx
  41f46a:	shl    rcx,0x3
  41f46e:	lea    rsi,[rcx+rcx*4]
  41f472:	mov    rdi,rax
  41f475:	call   4061d0 <realloc@plt>
  41f47a:	mov    rcx,QWORD PTR [rsp+0x8]
  41f47f:	mov    QWORD PTR [rcx],rax
  41f482:	test   rax,rax
  41f485:	jne    41f189 <__flatcc_fb_parse@@Base+0x34a9>
  41f48b:	jmp    421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41f490:	xor    r15d,r15d
  41f493:	mov    r12,rbp
  41f496:	cmp    r14,r12
  41f499:	jne    41f239 <__flatcc_fb_parse@@Base+0x3559>
  41f49f:	jmp    41f2ff <__flatcc_fb_parse@@Base+0x361f>
  41f4a4:	cmp    dil,0x5c
  41f4a8:	jne    41f4b6 <__flatcc_fb_parse@@Base+0x37d6>
  41f4aa:	add    rbp,0x2
  41f4ae:	mov    rbx,rbp
  41f4b1:	jmp    41f1eb <__flatcc_fb_parse@@Base+0x350b>
  41f4b6:	mov    r13,r14
  41f4b9:	cmp    dil,0xd
  41f4bd:	jne    41f42d <__flatcc_fb_parse@@Base+0x374d>
  41f4c3:	jmp    4206b0 <__flatcc_fb_parse@@Base+0x49d0>
  41f4c8:	mov    rbx,r13
  41f4cb:	cmp    QWORD PTR [rsp+0x50],rbp
  41f4d0:	je     41f4f6 <__flatcc_fb_parse@@Base+0x3816>
  41f4d2:	lea    rdx,[rbp+0x3]
  41f4d6:	cmp    BYTE PTR [rbp+0x2],0xd
  41f4da:	jmp    41f4ee <__flatcc_fb_parse@@Base+0x380e>
  41f4dc:	mov    rbx,r13
  41f4df:	cmp    QWORD PTR [rsp+0x50],rbp
  41f4e4:	je     41f4f6 <__flatcc_fb_parse@@Base+0x3816>
  41f4e6:	lea    rdx,[rbp+0x3]
  41f4ea:	cmp    BYTE PTR [rbp+0x2],0xa
  41f4ee:	lea    rbx,[rbp+0x2]
  41f4f2:	cmove  rbx,rdx
  41f4f6:	inc    r9
  41f4f9:	mov    rdx,QWORD PTR [rsp+0x18]
  41f4fe:	mov    QWORD PTR [rdx],r9
  41f501:	mov    QWORD PTR [r11],rbx
  41f504:	movsxd rdx,esi
  41f507:	lea    r15,[rdx+rdx*4]
  41f50b:	lea    rdx,[rax+r15*8]
  41f50f:	mov    rdi,QWORD PTR [rsp+0x10]
  41f514:	mov    QWORD PTR [rdi],rdx
  41f517:	cmp    rcx,rdx
  41f51a:	je     41f521 <__flatcc_fb_parse@@Base+0x3841>
  41f51c:	mov    r8,rbx
  41f51f:	jmp    41f58a <__flatcc_fb_parse@@Base+0x38aa>
  41f521:	lea    ecx,[rsi+rsi*1]
  41f524:	test   esi,esi
  41f526:	mov    edx,0x400
  41f52b:	cmove  ecx,edx
  41f52e:	mov    rbp,QWORD PTR [rsp+0x30]
  41f533:	mov    DWORD PTR [rbp+0x0],ecx
  41f536:	movsxd rcx,ecx
  41f539:	shl    rcx,0x3
  41f53d:	lea    rsi,[rcx+rcx*4]
  41f541:	mov    rdi,rax
  41f544:	call   4061d0 <realloc@plt>
  41f549:	mov    rcx,QWORD PTR [rsp+0x8]
  41f54e:	mov    QWORD PTR [rcx],rax
  41f551:	test   rax,rax
  41f554:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41f55a:	movsxd rsi,DWORD PTR [rbp+0x0]
  41f55e:	lea    rcx,[rsi+rsi*4]
  41f562:	lea    rcx,[rax+rcx*8]
  41f566:	mov    rdx,QWORD PTR [rsp+0x10]
  41f56b:	mov    QWORD PTR [rdx],rcx
  41f56e:	lea    rcx,[rax+r15*8]
  41f572:	mov    r10,QWORD PTR [rsp+0x28]
  41f577:	mov    QWORD PTR [r10],rcx
  41f57a:	mov    rdx,QWORD PTR [rsp+0x18]
  41f57f:	mov    r9,QWORD PTR [rdx]
  41f582:	mov    r11,QWORD PTR [rsp+0x20]
  41f587:	mov    r8,QWORD PTR [r11]
  41f58a:	mov    QWORD PTR [rcx+0x20],0x12
  41f592:	mov    QWORD PTR [rcx],r14
  41f595:	mov    rdx,rbx
  41f598:	sub    rdx,r14
  41f59b:	mov    QWORD PTR [rcx+0x8],rdx
  41f59f:	mov    QWORD PTR [rcx+0x10],r9
  41f5a3:	sub    r14,r8
  41f5a6:	inc    r14
  41f5a9:	mov    QWORD PTR [rcx+0x18],r14
  41f5ad:	jmp    41f17d <__flatcc_fb_parse@@Base+0x349d>
  41f5b2:	lea    rax,[r12+0x1]
  41f5b7:	mov    rbx,r13
  41f5ba:	cmp    rax,r13
  41f5bd:	mov    rsi,QWORD PTR [rsp+0x30]
  41f5c2:	je     4202b7 <__flatcc_fb_parse@@Base+0x45d7>
  41f5c8:	movsx  ecx,BYTE PTR [rax]
  41f5cb:	cmp    ecx,0x26
  41f5ce:	je     420207 <__flatcc_fb_parse@@Base+0x4527>
  41f5d4:	mov    rbx,rax
  41f5d7:	cmp    ecx,0x3d
  41f5da:	jne    4202b7 <__flatcc_fb_parse@@Base+0x45d7>
  41f5e0:	mov    rax,QWORD PTR [rsp+0x8]
  41f5e5:	mov    rdi,QWORD PTR [rax]
  41f5e8:	movsxd rcx,DWORD PTR [rsi]
  41f5eb:	lea    rbx,[rcx+rcx*4]
  41f5ef:	lea    rdx,[rdi+rbx*8]
  41f5f3:	mov    QWORD PTR [r9],rdx
  41f5f6:	mov    rax,QWORD PTR [r10]
  41f5f9:	cmp    rax,rdx
  41f5fc:	jne    41f65a <__flatcc_fb_parse@@Base+0x397a>
  41f5fe:	lea    eax,[rcx+rcx*1]
  41f601:	test   ecx,ecx
  41f603:	mov    ecx,0x400
  41f608:	cmove  eax,ecx
  41f60b:	mov    DWORD PTR [rsi],eax
  41f60d:	cdqe   
  41f60f:	shl    rax,0x3
  41f613:	mov    rbp,rsi
  41f616:	lea    rsi,[rax+rax*4]
  41f61a:	call   4061d0 <realloc@plt>
  41f61f:	mov    rcx,QWORD PTR [rsp+0x8]
  41f624:	mov    QWORD PTR [rcx],rax
  41f627:	test   rax,rax
  41f62a:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41f630:	movsxd rcx,DWORD PTR [rbp+0x0]
  41f634:	lea    rcx,[rcx+rcx*4]
  41f638:	lea    rcx,[rax+rcx*8]
  41f63c:	mov    r9,QWORD PTR [rsp+0x10]
  41f641:	mov    QWORD PTR [r9],rcx
  41f644:	lea    rax,[rax+rbx*8]
  41f648:	mov    r10,QWORD PTR [rsp+0x28]
  41f64d:	mov    QWORD PTR [r10],rax
  41f650:	mov    r11,QWORD PTR [rsp+0x20]
  41f655:	mov    r8,QWORD PTR [rsp+0x18]
  41f65a:	lea    rbx,[r12+0x2]
  41f65f:	mov    QWORD PTR [rax+0x20],0x3d26
  41f667:	jmp    41e714 <__flatcc_fb_parse@@Base+0x2a34>
  41f66c:	lea    rax,[r12+0x1]
  41f671:	mov    rbx,r13
  41f674:	cmp    rax,r13
  41f677:	je     41f6a5 <__flatcc_fb_parse@@Base+0x39c5>
  41f679:	lea    rcx,[r12+0x2]
  41f67e:	cmp    BYTE PTR [r12+0x1],0xd
  41f684:	jmp    41f69e <__flatcc_fb_parse@@Base+0x39be>
  41f686:	lea    rax,[r12+0x1]
  41f68b:	mov    rbx,r13
  41f68e:	cmp    rax,r13
  41f691:	je     41f6a5 <__flatcc_fb_parse@@Base+0x39c5>
  41f693:	lea    rcx,[r12+0x2]
  41f698:	cmp    BYTE PTR [r12+0x1],0xa
  41f69e:	cmove  rax,rcx
  41f6a2:	mov    rbx,rax
  41f6a5:	inc    QWORD PTR [r8]
  41f6a8:	mov    QWORD PTR [r11],rbx
  41f6ab:	jmp    41e1d7 <__flatcc_fb_parse@@Base+0x24f7>
  41f6b0:	lea    rbx,[r12+0x1]
  41f6b5:	cmp    rbx,r13
  41f6b8:	mov    rsi,QWORD PTR [rsp+0x30]
  41f6bd:	je     420e36 <__flatcc_fb_parse@@Base+0x5156>
  41f6c3:	movsx  eax,BYTE PTR [rbx]
  41f6c6:	lea    ecx,[rax-0x30]
  41f6c9:	cmp    ecx,0xa
  41f6cc:	jae    420d8a <__flatcc_fb_parse@@Base+0x50aa>
  41f6d2:	mov    rbp,r12
  41f6d5:	cmp    r15,rbx
  41f6d8:	jne    41e4f9 <__flatcc_fb_parse@@Base+0x2819>
  41f6de:	mov    rbx,r13
  41f6e1:	mov    rax,QWORD PTR [rsp+0x8]
  41f6e6:	mov    rdi,QWORD PTR [rax]
  41f6e9:	movsxd rcx,DWORD PTR [rsi]
  41f6ec:	lea    r14,[rcx+rcx*4]
  41f6f0:	lea    rdx,[rdi+r14*8]
  41f6f4:	mov    QWORD PTR [r9],rdx
  41f6f7:	mov    rax,QWORD PTR [r10]
  41f6fa:	cmp    rbp,rbx
  41f6fd:	je     41f770 <__flatcc_fb_parse@@Base+0x3a90>
  41f6ff:	cmp    rax,rdx
  41f702:	jne    41f760 <__flatcc_fb_parse@@Base+0x3a80>
  41f704:	lea    eax,[rcx+rcx*1]
  41f707:	test   ecx,ecx
  41f709:	mov    ecx,0x400
  41f70e:	cmove  eax,ecx
  41f711:	mov    DWORD PTR [rsi],eax
  41f713:	cdqe   
  41f715:	shl    rax,0x3
  41f719:	mov    rbp,rsi
  41f71c:	lea    rsi,[rax+rax*4]
  41f720:	call   4061d0 <realloc@plt>
  41f725:	mov    rcx,QWORD PTR [rsp+0x8]
  41f72a:	mov    QWORD PTR [rcx],rax
  41f72d:	test   rax,rax
  41f730:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41f736:	movsxd rcx,DWORD PTR [rbp+0x0]
  41f73a:	lea    rcx,[rcx+rcx*4]
  41f73e:	lea    rcx,[rax+rcx*8]
  41f742:	mov    r9,QWORD PTR [rsp+0x10]
  41f747:	mov    QWORD PTR [r9],rcx
  41f74a:	lea    rax,[rax+r14*8]
  41f74e:	mov    r10,QWORD PTR [rsp+0x28]
  41f753:	mov    QWORD PTR [r10],rax
  41f756:	mov    r11,QWORD PTR [rsp+0x20]
  41f75b:	mov    r8,QWORD PTR [rsp+0x18]
  41f760:	mov    QWORD PTR [rax+0x20],0xb
  41f768:	mov    QWORD PTR [rax],r12
  41f76b:	mov    rbp,rbx
  41f76e:	jmp    41f7e0 <__flatcc_fb_parse@@Base+0x3b00>
  41f770:	cmp    rax,rdx
  41f773:	jne    41f7d5 <__flatcc_fb_parse@@Base+0x3af5>
  41f775:	lea    eax,[rcx+rcx*1]
  41f778:	test   ecx,ecx
  41f77a:	mov    ecx,0x400
  41f77f:	cmove  eax,ecx
  41f782:	mov    DWORD PTR [rsi],eax
  41f784:	cdqe   
  41f786:	shl    rax,0x3
  41f78a:	mov    r15,rsi
  41f78d:	lea    rsi,[rax+rax*4]
  41f791:	call   4061d0 <realloc@plt>
  41f796:	mov    rcx,QWORD PTR [rsp+0x8]
  41f79b:	mov    QWORD PTR [rcx],rax
  41f79e:	test   rax,rax
  41f7a1:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41f7a7:	movsxd rcx,DWORD PTR [r15]
  41f7aa:	lea    rcx,[rcx+rcx*4]
  41f7ae:	lea    rcx,[rax+rcx*8]
  41f7b2:	mov    r9,QWORD PTR [rsp+0x10]
  41f7b7:	mov    QWORD PTR [r9],rcx
  41f7ba:	lea    rax,[rax+r14*8]
  41f7be:	mov    r10,QWORD PTR [rsp+0x28]
  41f7c3:	mov    QWORD PTR [r10],rax
  41f7c6:	mov    r11,QWORD PTR [rsp+0x20]
  41f7cb:	mov    r8,QWORD PTR [rsp+0x18]
  41f7d0:	mov    r15,QWORD PTR [rsp+0x40]
  41f7d5:	mov    QWORD PTR [rax+0x20],0xa
  41f7dd:	mov    QWORD PTR [rax],r12
  41f7e0:	sub    rbp,r12
  41f7e3:	mov    QWORD PTR [rax+0x8],rbp
  41f7e7:	jmp    420ec3 <__flatcc_fb_parse@@Base+0x51e3>
  41f7ec:	lea    rax,[r12+0x1]
  41f7f1:	mov    rbx,r13
  41f7f4:	cmp    rax,r13
  41f7f7:	mov    rsi,QWORD PTR [rsp+0x30]
  41f7fc:	je     4203ee <__flatcc_fb_parse@@Base+0x470e>
  41f802:	movsx  ecx,BYTE PTR [rax]
  41f805:	cmp    ecx,0x7c
  41f808:	je     42033e <__flatcc_fb_parse@@Base+0x465e>
  41f80e:	mov    rbx,rax
  41f811:	cmp    ecx,0x3d
  41f814:	jne    4203ee <__flatcc_fb_parse@@Base+0x470e>
  41f81a:	mov    rax,QWORD PTR [rsp+0x8]
  41f81f:	mov    rdi,QWORD PTR [rax]
  41f822:	movsxd rcx,DWORD PTR [rsi]
  41f825:	lea    rbx,[rcx+rcx*4]
  41f829:	lea    rdx,[rdi+rbx*8]
  41f82d:	mov    QWORD PTR [r9],rdx
  41f830:	mov    rax,QWORD PTR [r10]
  41f833:	cmp    rax,rdx
  41f836:	jne    41f894 <__flatcc_fb_parse@@Base+0x3bb4>
  41f838:	lea    eax,[rcx+rcx*1]
  41f83b:	test   ecx,ecx
  41f83d:	mov    ecx,0x400
  41f842:	cmove  eax,ecx
  41f845:	mov    DWORD PTR [rsi],eax
  41f847:	cdqe   
  41f849:	shl    rax,0x3
  41f84d:	mov    rbp,rsi
  41f850:	lea    rsi,[rax+rax*4]
  41f854:	call   4061d0 <realloc@plt>
  41f859:	mov    rcx,QWORD PTR [rsp+0x8]
  41f85e:	mov    QWORD PTR [rcx],rax
  41f861:	test   rax,rax
  41f864:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41f86a:	movsxd rcx,DWORD PTR [rbp+0x0]
  41f86e:	lea    rcx,[rcx+rcx*4]
  41f872:	lea    rcx,[rax+rcx*8]
  41f876:	mov    r9,QWORD PTR [rsp+0x10]
  41f87b:	mov    QWORD PTR [r9],rcx
  41f87e:	lea    rax,[rax+rbx*8]
  41f882:	mov    r10,QWORD PTR [rsp+0x28]
  41f887:	mov    QWORD PTR [r10],rax
  41f88a:	mov    r11,QWORD PTR [rsp+0x20]
  41f88f:	mov    r8,QWORD PTR [rsp+0x18]
  41f894:	lea    rbx,[r12+0x2]
  41f899:	mov    QWORD PTR [rax+0x20],0x3d7c
  41f8a1:	jmp    41e714 <__flatcc_fb_parse@@Base+0x2a34>
  41f8a6:	lea    rbx,[r12+0x1]
  41f8ab:	cmp    rbx,r13
  41f8ae:	mov    rsi,QWORD PTR [rsp+0x30]
  41f8b3:	je     41fd0e <__flatcc_fb_parse@@Base+0x402e>
  41f8b9:	movsx  eax,BYTE PTR [rbx]
  41f8bc:	cmp    eax,0x2a
  41f8bf:	je     420475 <__flatcc_fb_parse@@Base+0x4795>
  41f8c5:	cmp    eax,0x3d
  41f8c8:	jne    41fd0e <__flatcc_fb_parse@@Base+0x402e>
  41f8ce:	mov    rax,QWORD PTR [rsp+0x8]
  41f8d3:	mov    rdi,QWORD PTR [rax]
  41f8d6:	movsxd rcx,DWORD PTR [rsi]
  41f8d9:	lea    r14,[rcx+rcx*4]
  41f8dd:	lea    rdx,[rdi+r14*8]
  41f8e1:	mov    QWORD PTR [r9],rdx
  41f8e4:	mov    rax,QWORD PTR [r10]
  41f8e7:	cmp    rax,rdx
  41f8ea:	jne    41f948 <__flatcc_fb_parse@@Base+0x3c68>
  41f8ec:	lea    eax,[rcx+rcx*1]
  41f8ef:	test   ecx,ecx
  41f8f1:	mov    ecx,0x400
  41f8f6:	cmove  eax,ecx
  41f8f9:	mov    DWORD PTR [rsi],eax
  41f8fb:	cdqe   
  41f8fd:	shl    rax,0x3
  41f901:	mov    rbp,rsi
  41f904:	lea    rsi,[rax+rax*4]
  41f908:	call   4061d0 <realloc@plt>
  41f90d:	mov    rcx,QWORD PTR [rsp+0x8]
  41f912:	mov    QWORD PTR [rcx],rax
  41f915:	test   rax,rax
  41f918:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41f91e:	movsxd rcx,DWORD PTR [rbp+0x0]
  41f922:	lea    rcx,[rcx+rcx*4]
  41f926:	lea    rcx,[rax+rcx*8]
  41f92a:	mov    r9,QWORD PTR [rsp+0x10]
  41f92f:	mov    QWORD PTR [r9],rcx
  41f932:	lea    rax,[rax+r14*8]
  41f936:	mov    r10,QWORD PTR [rsp+0x28]
  41f93b:	mov    QWORD PTR [r10],rax
  41f93e:	mov    r11,QWORD PTR [rsp+0x20]
  41f943:	mov    r8,QWORD PTR [rsp+0x18]
  41f948:	mov    QWORD PTR [rax+0x20],0x3d2a
  41f950:	jmp    420eb8 <__flatcc_fb_parse@@Base+0x51d8>
  41f955:	lea    rbx,[r12+0x1]
  41f95a:	cmp    rbx,r13
  41f95d:	mov    rsi,QWORD PTR [rsp+0x30]
  41f962:	je     41feaf <__flatcc_fb_parse@@Base+0x41cf>
  41f968:	movsx  eax,BYTE PTR [rbx]
  41f96b:	cmp    eax,0x2d
  41f96e:	je     420951 <__flatcc_fb_parse@@Base+0x4c71>
  41f974:	cmp    eax,0x3e
  41f977:	je     4209dd <__flatcc_fb_parse@@Base+0x4cfd>
  41f97d:	cmp    eax,0x3d
  41f980:	jne    41feaf <__flatcc_fb_parse@@Base+0x41cf>
  41f986:	mov    rax,QWORD PTR [rsp+0x8]
  41f98b:	mov    rdi,QWORD PTR [rax]
  41f98e:	movsxd rcx,DWORD PTR [rsi]
  41f991:	lea    rbx,[rcx+rcx*4]
  41f995:	lea    rdx,[rdi+rbx*8]
  41f999:	mov    QWORD PTR [r9],rdx
  41f99c:	mov    rax,QWORD PTR [r10]
  41f99f:	cmp    rax,rdx
  41f9a2:	jne    41fa00 <__flatcc_fb_parse@@Base+0x3d20>
  41f9a4:	lea    eax,[rcx+rcx*1]
  41f9a7:	test   ecx,ecx
  41f9a9:	mov    ecx,0x400
  41f9ae:	cmove  eax,ecx
  41f9b1:	mov    DWORD PTR [rsi],eax
  41f9b3:	cdqe   
  41f9b5:	shl    rax,0x3
  41f9b9:	mov    rbp,rsi
  41f9bc:	lea    rsi,[rax+rax*4]
  41f9c0:	call   4061d0 <realloc@plt>
  41f9c5:	mov    rcx,QWORD PTR [rsp+0x8]
  41f9ca:	mov    QWORD PTR [rcx],rax
  41f9cd:	test   rax,rax
  41f9d0:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41f9d6:	movsxd rcx,DWORD PTR [rbp+0x0]
  41f9da:	lea    rcx,[rcx+rcx*4]
  41f9de:	lea    rcx,[rax+rcx*8]
  41f9e2:	mov    r9,QWORD PTR [rsp+0x10]
  41f9e7:	mov    QWORD PTR [r9],rcx
  41f9ea:	lea    rax,[rax+rbx*8]
  41f9ee:	mov    r10,QWORD PTR [rsp+0x28]
  41f9f3:	mov    QWORD PTR [r10],rax
  41f9f6:	mov    r11,QWORD PTR [rsp+0x20]
  41f9fb:	mov    r8,QWORD PTR [rsp+0x18]
  41fa00:	lea    rbx,[r12+0x2]
  41fa05:	mov    QWORD PTR [rax+0x20],0x3d2d
  41fa0d:	jmp    41e714 <__flatcc_fb_parse@@Base+0x2a34>
  41fa12:	lea    rax,[r12+0x1]
  41fa17:	mov    rbx,r13
  41fa1a:	cmp    rax,r13
  41fa1d:	mov    rsi,QWORD PTR [rsp+0x30]
  41fa22:	je     420b9b <__flatcc_fb_parse@@Base+0x4ebb>
  41fa28:	movsx  ecx,BYTE PTR [rax]
  41fa2b:	cmp    ecx,0x3d
  41fa2e:	je     4204fc <__flatcc_fb_parse@@Base+0x481c>
  41fa34:	mov    rbx,rax
  41fa37:	cmp    ecx,0x3e
  41fa3a:	jne    420b9b <__flatcc_fb_parse@@Base+0x4ebb>
  41fa40:	mov    rax,QWORD PTR [rsp+0x8]
  41fa45:	mov    rdi,QWORD PTR [rax]
  41fa48:	movsxd rcx,DWORD PTR [rsi]
  41fa4b:	lea    rbx,[rcx+rcx*4]
  41fa4f:	lea    rdx,[rdi+rbx*8]
  41fa53:	mov    QWORD PTR [r9],rdx
  41fa56:	mov    rax,QWORD PTR [r10]
  41fa59:	cmp    rax,rdx
  41fa5c:	jne    41faba <__flatcc_fb_parse@@Base+0x3dda>
  41fa5e:	lea    eax,[rcx+rcx*1]
  41fa61:	test   ecx,ecx
  41fa63:	mov    ecx,0x400
  41fa68:	cmove  eax,ecx
  41fa6b:	mov    DWORD PTR [rsi],eax
  41fa6d:	cdqe   
  41fa6f:	shl    rax,0x3
  41fa73:	mov    rbp,rsi
  41fa76:	lea    rsi,[rax+rax*4]
  41fa7a:	call   4061d0 <realloc@plt>
  41fa7f:	mov    rcx,QWORD PTR [rsp+0x8]
  41fa84:	mov    QWORD PTR [rcx],rax
  41fa87:	test   rax,rax
  41fa8a:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41fa90:	movsxd rcx,DWORD PTR [rbp+0x0]
  41fa94:	lea    rcx,[rcx+rcx*4]
  41fa98:	lea    rcx,[rax+rcx*8]
  41fa9c:	mov    r9,QWORD PTR [rsp+0x10]
  41faa1:	mov    QWORD PTR [r9],rcx
  41faa4:	lea    rax,[rax+rbx*8]
  41faa8:	mov    r10,QWORD PTR [rsp+0x28]
  41faad:	mov    QWORD PTR [r10],rax
  41fab0:	mov    r11,QWORD PTR [rsp+0x20]
  41fab5:	mov    r8,QWORD PTR [rsp+0x18]
  41faba:	lea    rbx,[r12+0x2]
  41fabf:	mov    QWORD PTR [rax+0x20],0x3e3d
  41fac7:	jmp    41e714 <__flatcc_fb_parse@@Base+0x2a34>
  41facc:	lea    rbx,[r12+0x1]
  41fad1:	cmp    bpl,0x20
  41fad5:	mov    rsi,QWORD PTR [rsp+0x30]
  41fada:	jl     41fae2 <__flatcc_fb_parse@@Base+0x3e02>
  41fadc:	cmp    bpl,0x7f
  41fae0:	jne    41faf2 <__flatcc_fb_parse@@Base+0x3e12>
  41fae2:	cmp    bpl,0x9
  41fae6:	je     41faf2 <__flatcc_fb_parse@@Base+0x3e12>
  41fae8:	cmp    bpl,0x20
  41faec:	jne    420629 <__flatcc_fb_parse@@Base+0x4949>
  41faf2:	mov    rax,QWORD PTR [rsp+0x8]
  41faf7:	mov    rdi,QWORD PTR [rax]
  41fafa:	movsxd rcx,DWORD PTR [rsi]
  41fafd:	lea    r14,[rcx+rcx*4]
  41fb01:	lea    rdx,[rdi+r14*8]
  41fb05:	mov    QWORD PTR [r9],rdx
  41fb08:	mov    rax,QWORD PTR [r10]
  41fb0b:	cmp    rax,rdx
  41fb0e:	jne    41fb6c <__flatcc_fb_parse@@Base+0x3e8c>
  41fb10:	lea    eax,[rcx+rcx*1]
  41fb13:	test   ecx,ecx
  41fb15:	mov    ecx,0x400
  41fb1a:	cmove  eax,ecx
  41fb1d:	mov    DWORD PTR [rsi],eax
  41fb1f:	cdqe   
  41fb21:	shl    rax,0x3
  41fb25:	mov    rbp,rsi
  41fb28:	lea    rsi,[rax+rax*4]
  41fb2c:	call   4061d0 <realloc@plt>
  41fb31:	mov    rcx,QWORD PTR [rsp+0x8]
  41fb36:	mov    QWORD PTR [rcx],rax
  41fb39:	test   rax,rax
  41fb3c:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41fb42:	movsxd rcx,DWORD PTR [rbp+0x0]
  41fb46:	lea    rcx,[rcx+rcx*4]
  41fb4a:	lea    rcx,[rax+rcx*8]
  41fb4e:	mov    r9,QWORD PTR [rsp+0x10]
  41fb53:	mov    QWORD PTR [r9],rcx
  41fb56:	lea    rax,[rax+r14*8]
  41fb5a:	mov    r10,QWORD PTR [rsp+0x28]
  41fb5f:	mov    QWORD PTR [r10],rax
  41fb62:	mov    r11,QWORD PTR [rsp+0x20]
  41fb67:	mov    r8,QWORD PTR [rsp+0x18]
  41fb6c:	mov    QWORD PTR [rax+0x20],0x8
  41fb74:	jmp    420eb8 <__flatcc_fb_parse@@Base+0x51d8>
  41fb79:	mov    rax,QWORD PTR [rsp+0x8]
  41fb7e:	mov    rdi,QWORD PTR [rax]
  41fb81:	movsxd rcx,DWORD PTR [rsi]
  41fb84:	lea    r14,[rcx+rcx*4]
  41fb88:	lea    rdx,[rdi+r14*8]
  41fb8c:	mov    QWORD PTR [r9],rdx
  41fb8f:	mov    rax,QWORD PTR [r10]
  41fb92:	cmp    rax,rdx
  41fb95:	jne    41fbf3 <__flatcc_fb_parse@@Base+0x3f13>
  41fb97:	lea    eax,[rcx+rcx*1]
  41fb9a:	test   ecx,ecx
  41fb9c:	mov    ecx,0x400
  41fba1:	cmove  eax,ecx
  41fba4:	mov    DWORD PTR [rsi],eax
  41fba6:	cdqe   
  41fba8:	shl    rax,0x3
  41fbac:	mov    rbp,rsi
  41fbaf:	lea    rsi,[rax+rax*4]
  41fbb3:	call   4061d0 <realloc@plt>
  41fbb8:	mov    rcx,QWORD PTR [rsp+0x8]
  41fbbd:	mov    QWORD PTR [rcx],rax
  41fbc0:	test   rax,rax
  41fbc3:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41fbc9:	movsxd rcx,DWORD PTR [rbp+0x0]
  41fbcd:	lea    rcx,[rcx+rcx*4]
  41fbd1:	lea    rcx,[rax+rcx*8]
  41fbd5:	mov    r9,QWORD PTR [rsp+0x10]
  41fbda:	mov    QWORD PTR [r9],rcx
  41fbdd:	lea    rax,[rax+r14*8]
  41fbe1:	mov    r10,QWORD PTR [rsp+0x28]
  41fbe6:	mov    QWORD PTR [r10],rax
  41fbe9:	mov    r11,QWORD PTR [rsp+0x20]
  41fbee:	mov    r8,QWORD PTR [rsp+0x18]
  41fbf3:	mov    QWORD PTR [rax+0x20],0x2b
  41fbfb:	jmp    420eb8 <__flatcc_fb_parse@@Base+0x51d8>
  41fc00:	mov    rax,QWORD PTR [rsp+0x8]
  41fc05:	mov    rdi,QWORD PTR [rax]
  41fc08:	movsxd rcx,DWORD PTR [rsi]
  41fc0b:	lea    r14,[rcx+rcx*4]
  41fc0f:	lea    rdx,[rdi+r14*8]
  41fc13:	mov    QWORD PTR [r9],rdx
  41fc16:	mov    rax,QWORD PTR [r10]
  41fc19:	cmp    rax,rdx
  41fc1c:	jne    41fc7a <__flatcc_fb_parse@@Base+0x3f9a>
  41fc1e:	lea    eax,[rcx+rcx*1]
  41fc21:	test   ecx,ecx
  41fc23:	mov    ecx,0x400
  41fc28:	cmove  eax,ecx
  41fc2b:	mov    DWORD PTR [rsi],eax
  41fc2d:	cdqe   
  41fc2f:	shl    rax,0x3
  41fc33:	mov    rbp,rsi
  41fc36:	lea    rsi,[rax+rax*4]
  41fc3a:	call   4061d0 <realloc@plt>
  41fc3f:	mov    rcx,QWORD PTR [rsp+0x8]
  41fc44:	mov    QWORD PTR [rcx],rax
  41fc47:	test   rax,rax
  41fc4a:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41fc50:	movsxd rcx,DWORD PTR [rbp+0x0]
  41fc54:	lea    rcx,[rcx+rcx*4]
  41fc58:	lea    rcx,[rax+rcx*8]
  41fc5c:	mov    r9,QWORD PTR [rsp+0x10]
  41fc61:	mov    QWORD PTR [r9],rcx
  41fc64:	lea    rax,[rax+r14*8]
  41fc68:	mov    r10,QWORD PTR [rsp+0x28]
  41fc6d:	mov    QWORD PTR [r10],rax
  41fc70:	mov    r11,QWORD PTR [rsp+0x20]
  41fc75:	mov    r8,QWORD PTR [rsp+0x18]
  41fc7a:	mov    QWORD PTR [rax+0x20],0x3a
  41fc82:	jmp    420eb8 <__flatcc_fb_parse@@Base+0x51d8>
  41fc87:	mov    rax,QWORD PTR [rsp+0x8]
  41fc8c:	mov    rdi,QWORD PTR [rax]
  41fc8f:	movsxd rcx,DWORD PTR [rsi]
  41fc92:	lea    r14,[rcx+rcx*4]
  41fc96:	lea    rdx,[rdi+r14*8]
  41fc9a:	mov    QWORD PTR [r9],rdx
  41fc9d:	mov    rax,QWORD PTR [r10]
  41fca0:	cmp    rax,rdx
  41fca3:	jne    41fd01 <__flatcc_fb_parse@@Base+0x4021>
  41fca5:	lea    eax,[rcx+rcx*1]
  41fca8:	test   ecx,ecx
  41fcaa:	mov    ecx,0x400
  41fcaf:	cmove  eax,ecx
  41fcb2:	mov    DWORD PTR [rsi],eax
  41fcb4:	cdqe   
  41fcb6:	shl    rax,0x3
  41fcba:	mov    rbp,rsi
  41fcbd:	lea    rsi,[rax+rax*4]
  41fcc1:	call   4061d0 <realloc@plt>
  41fcc6:	mov    rcx,QWORD PTR [rsp+0x8]
  41fccb:	mov    QWORD PTR [rcx],rax
  41fcce:	test   rax,rax
  41fcd1:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41fcd7:	movsxd rcx,DWORD PTR [rbp+0x0]
  41fcdb:	lea    rcx,[rcx+rcx*4]
  41fcdf:	lea    rcx,[rax+rcx*8]
  41fce3:	mov    r9,QWORD PTR [rsp+0x10]
  41fce8:	mov    QWORD PTR [r9],rcx
  41fceb:	lea    rax,[rax+r14*8]
  41fcef:	mov    r10,QWORD PTR [rsp+0x28]
  41fcf4:	mov    QWORD PTR [r10],rax
  41fcf7:	mov    r11,QWORD PTR [rsp+0x20]
  41fcfc:	mov    r8,QWORD PTR [rsp+0x18]
  41fd01:	mov    QWORD PTR [rax+0x20],0x3e
  41fd09:	jmp    420eb8 <__flatcc_fb_parse@@Base+0x51d8>
  41fd0e:	mov    rax,QWORD PTR [rsp+0x8]
  41fd13:	mov    rdi,QWORD PTR [rax]
  41fd16:	movsxd rcx,DWORD PTR [rsi]
  41fd19:	lea    r14,[rcx+rcx*4]
  41fd1d:	lea    rdx,[rdi+r14*8]
  41fd21:	mov    QWORD PTR [r9],rdx
  41fd24:	mov    rax,QWORD PTR [r10]
  41fd27:	cmp    rax,rdx
  41fd2a:	jne    41fd88 <__flatcc_fb_parse@@Base+0x40a8>
  41fd2c:	lea    eax,[rcx+rcx*1]
  41fd2f:	test   ecx,ecx
  41fd31:	mov    ecx,0x400
  41fd36:	cmove  eax,ecx
  41fd39:	mov    DWORD PTR [rsi],eax
  41fd3b:	cdqe   
  41fd3d:	shl    rax,0x3
  41fd41:	mov    rbp,rsi
  41fd44:	lea    rsi,[rax+rax*4]
  41fd48:	call   4061d0 <realloc@plt>
  41fd4d:	mov    rcx,QWORD PTR [rsp+0x8]
  41fd52:	mov    QWORD PTR [rcx],rax
  41fd55:	test   rax,rax
  41fd58:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41fd5e:	movsxd rcx,DWORD PTR [rbp+0x0]
  41fd62:	lea    rcx,[rcx+rcx*4]
  41fd66:	lea    rcx,[rax+rcx*8]
  41fd6a:	mov    r9,QWORD PTR [rsp+0x10]
  41fd6f:	mov    QWORD PTR [r9],rcx
  41fd72:	lea    rax,[rax+r14*8]
  41fd76:	mov    r10,QWORD PTR [rsp+0x28]
  41fd7b:	mov    QWORD PTR [r10],rax
  41fd7e:	mov    r11,QWORD PTR [rsp+0x20]
  41fd83:	mov    r8,QWORD PTR [rsp+0x18]
  41fd88:	mov    QWORD PTR [rax+0x20],0x2a
  41fd90:	jmp    420eb8 <__flatcc_fb_parse@@Base+0x51d8>
  41fd95:	mov    r15,0xfffffffffffffc2c
  41fd9c:	jmp    41ece6 <__flatcc_fb_parse@@Base+0x3006>
  41fda1:	mov    rax,QWORD PTR [rsp+0x8]
  41fda6:	mov    rdi,QWORD PTR [rax]
  41fda9:	movsxd rcx,DWORD PTR [rsi]
  41fdac:	lea    r14,[rcx+rcx*4]
  41fdb0:	lea    rdx,[rdi+r14*8]
  41fdb4:	mov    QWORD PTR [r9],rdx
  41fdb7:	mov    rax,QWORD PTR [r10]
  41fdba:	cmp    rax,rdx
  41fdbd:	jne    41fe1b <__flatcc_fb_parse@@Base+0x413b>
  41fdbf:	lea    eax,[rcx+rcx*1]
  41fdc2:	test   ecx,ecx
  41fdc4:	mov    ecx,0x400
  41fdc9:	cmove  eax,ecx
  41fdcc:	mov    DWORD PTR [rsi],eax
  41fdce:	cdqe   
  41fdd0:	shl    rax,0x3
  41fdd4:	mov    rbp,rsi
  41fdd7:	lea    rsi,[rax+rax*4]
  41fddb:	call   4061d0 <realloc@plt>
  41fde0:	mov    rcx,QWORD PTR [rsp+0x8]
  41fde5:	mov    QWORD PTR [rcx],rax
  41fde8:	test   rax,rax
  41fdeb:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41fdf1:	movsxd rcx,DWORD PTR [rbp+0x0]
  41fdf5:	lea    rcx,[rcx+rcx*4]
  41fdf9:	lea    rcx,[rax+rcx*8]
  41fdfd:	mov    r9,QWORD PTR [rsp+0x10]
  41fe02:	mov    QWORD PTR [r9],rcx
  41fe05:	lea    rax,[rax+r14*8]
  41fe09:	mov    r10,QWORD PTR [rsp+0x28]
  41fe0e:	mov    QWORD PTR [r10],rax
  41fe11:	mov    r11,QWORD PTR [rsp+0x20]
  41fe16:	mov    r8,QWORD PTR [rsp+0x18]
  41fe1b:	mov    QWORD PTR [rax+0x20],0x3c
  41fe23:	jmp    420eb8 <__flatcc_fb_parse@@Base+0x51d8>
  41fe28:	mov    rax,QWORD PTR [rsp+0x8]
  41fe2d:	mov    rdi,QWORD PTR [rax]
  41fe30:	movsxd rcx,DWORD PTR [rsi]
  41fe33:	lea    r14,[rcx+rcx*4]
  41fe37:	lea    rdx,[rdi+r14*8]
  41fe3b:	mov    QWORD PTR [r9],rdx
  41fe3e:	mov    rax,QWORD PTR [r10]
  41fe41:	cmp    rax,rdx
  41fe44:	jne    41fea2 <__flatcc_fb_parse@@Base+0x41c2>
  41fe46:	lea    eax,[rcx+rcx*1]
  41fe49:	test   ecx,ecx
  41fe4b:	mov    ecx,0x400
  41fe50:	cmove  eax,ecx
  41fe53:	mov    DWORD PTR [rsi],eax
  41fe55:	cdqe   
  41fe57:	shl    rax,0x3
  41fe5b:	mov    rbp,rsi
  41fe5e:	lea    rsi,[rax+rax*4]
  41fe62:	call   4061d0 <realloc@plt>
  41fe67:	mov    rcx,QWORD PTR [rsp+0x8]
  41fe6c:	mov    QWORD PTR [rcx],rax
  41fe6f:	test   rax,rax
  41fe72:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41fe78:	movsxd rcx,DWORD PTR [rbp+0x0]
  41fe7c:	lea    rcx,[rcx+rcx*4]
  41fe80:	lea    rcx,[rax+rcx*8]
  41fe84:	mov    r9,QWORD PTR [rsp+0x10]
  41fe89:	mov    QWORD PTR [r9],rcx
  41fe8c:	lea    rax,[rax+r14*8]
  41fe90:	mov    r10,QWORD PTR [rsp+0x28]
  41fe95:	mov    QWORD PTR [r10],rax
  41fe98:	mov    r11,QWORD PTR [rsp+0x20]
  41fe9d:	mov    r8,QWORD PTR [rsp+0x18]
  41fea2:	mov    QWORD PTR [rax+0x20],0x2f
  41feaa:	jmp    420eb8 <__flatcc_fb_parse@@Base+0x51d8>
  41feaf:	mov    rax,QWORD PTR [rsp+0x8]
  41feb4:	mov    rdi,QWORD PTR [rax]
  41feb7:	movsxd rcx,DWORD PTR [rsi]
  41feba:	lea    r14,[rcx+rcx*4]
  41febe:	lea    rdx,[rdi+r14*8]
  41fec2:	mov    QWORD PTR [r9],rdx
  41fec5:	mov    rax,QWORD PTR [r10]
  41fec8:	cmp    rax,rdx
  41fecb:	jne    41ff29 <__flatcc_fb_parse@@Base+0x4249>
  41fecd:	lea    eax,[rcx+rcx*1]
  41fed0:	test   ecx,ecx
  41fed2:	mov    ecx,0x400
  41fed7:	cmove  eax,ecx
  41feda:	mov    DWORD PTR [rsi],eax
  41fedc:	cdqe   
  41fede:	shl    rax,0x3
  41fee2:	mov    rbp,rsi
  41fee5:	lea    rsi,[rax+rax*4]
  41fee9:	call   4061d0 <realloc@plt>
  41feee:	mov    rcx,QWORD PTR [rsp+0x8]
  41fef3:	mov    QWORD PTR [rcx],rax
  41fef6:	test   rax,rax
  41fef9:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41feff:	movsxd rcx,DWORD PTR [rbp+0x0]
  41ff03:	lea    rcx,[rcx+rcx*4]
  41ff07:	lea    rcx,[rax+rcx*8]
  41ff0b:	mov    r9,QWORD PTR [rsp+0x10]
  41ff10:	mov    QWORD PTR [r9],rcx
  41ff13:	lea    rax,[rax+r14*8]
  41ff17:	mov    r10,QWORD PTR [rsp+0x28]
  41ff1c:	mov    QWORD PTR [r10],rax
  41ff1f:	mov    r11,QWORD PTR [rsp+0x20]
  41ff24:	mov    r8,QWORD PTR [rsp+0x18]
  41ff29:	mov    QWORD PTR [rax+0x20],0x2d
  41ff31:	jmp    420eb8 <__flatcc_fb_parse@@Base+0x51d8>
  41ff36:	movsxd rdx,esi
  41ff39:	lea    r14,[rdx+rdx*4]
  41ff3d:	lea    rdx,[rax+r14*8]
  41ff41:	mov    rdi,QWORD PTR [rsp+0x10]
  41ff46:	mov    QWORD PTR [rdi],rdx
  41ff49:	cmp    rcx,rdx
  41ff4c:	mov    r15,QWORD PTR [rsp+0x40]
  41ff51:	jne    41ffba <__flatcc_fb_parse@@Base+0x42da>
  41ff53:	lea    ecx,[rsi+rsi*1]
  41ff56:	test   esi,esi
  41ff58:	mov    edx,0x400
  41ff5d:	cmove  ecx,edx
  41ff60:	mov    rbx,QWORD PTR [rsp+0x30]
  41ff65:	mov    DWORD PTR [rbx],ecx
  41ff67:	movsxd rcx,ecx
  41ff6a:	shl    rcx,0x3
  41ff6e:	lea    rsi,[rcx+rcx*4]
  41ff72:	mov    rdi,rax
  41ff75:	call   4061d0 <realloc@plt>
  41ff7a:	mov    rcx,QWORD PTR [rsp+0x8]
  41ff7f:	mov    QWORD PTR [rcx],rax
  41ff82:	test   rax,rax
  41ff85:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  41ff8b:	movsxd rcx,DWORD PTR [rbx]
  41ff8e:	lea    rcx,[rcx+rcx*4]
  41ff92:	lea    rcx,[rax+rcx*8]
  41ff96:	mov    rdx,QWORD PTR [rsp+0x10]
  41ff9b:	mov    QWORD PTR [rdx],rcx
  41ff9e:	lea    rcx,[rax+r14*8]
  41ffa2:	mov    r10,QWORD PTR [rsp+0x28]
  41ffa7:	mov    QWORD PTR [r10],rcx
  41ffaa:	mov    rax,QWORD PTR [rsp+0x18]
  41ffaf:	mov    r9,QWORD PTR [rax]
  41ffb2:	mov    r11,QWORD PTR [rsp+0x20]
  41ffb7:	mov    r8,QWORD PTR [r11]
  41ffba:	inc    rbp
  41ffbd:	mov    QWORD PTR [rcx+0x20],0x16
  41ffc5:	mov    QWORD PTR [rcx],r13
  41ffc8:	mov    rax,rbp
  41ffcb:	sub    rax,r13
  41ffce:	mov    QWORD PTR [rcx+0x8],rax
  41ffd2:	mov    QWORD PTR [rcx+0x10],r9
  41ffd6:	sub    r13,r8
  41ffd9:	inc    r13
  41ffdc:	mov    QWORD PTR [rcx+0x18],r13
  41ffe0:	add    rcx,0x28
  41ffe4:	mov    QWORD PTR [r10],rcx
  41ffe7:	mov    r12,rbp
  41ffea:	mov    r8,QWORD PTR [rsp+0x18]
  41ffef:	mov    r9,QWORD PTR [rsp+0x10]
  41fff4:	mov    r13,QWORD PTR [rsp+0x48]
  41fff9:	jmp    420cf5 <__flatcc_fb_parse@@Base+0x5015>
  41fffe:	movsxd rdx,esi
  420001:	lea    rbx,[rdx+rdx*4]
  420005:	lea    rdx,[rax+rbx*8]
  420009:	mov    rdi,QWORD PTR [rsp+0x10]
  42000e:	mov    QWORD PTR [rdi],rdx
  420011:	cmp    rcx,rdx
  420014:	mov    r13,QWORD PTR [rsp+0x48]
  420019:	mov    r15,QWORD PTR [rsp+0x40]
  42001e:	jne    420cc0 <__flatcc_fb_parse@@Base+0x4fe0>
  420024:	jmp    420c57 <__flatcc_fb_parse@@Base+0x4f77>
  420029:	mov    rax,QWORD PTR [rsp+0x8]
  42002e:	mov    rdi,QWORD PTR [rax]
  420031:	movsxd rcx,DWORD PTR [rsi]
  420034:	lea    rbx,[rcx+rcx*4]
  420038:	lea    rdx,[rdi+rbx*8]
  42003c:	mov    QWORD PTR [r9],rdx
  42003f:	mov    rax,QWORD PTR [r10]
  420042:	cmp    rax,rdx
  420045:	jne    4200a3 <__flatcc_fb_parse@@Base+0x43c3>
  420047:	lea    eax,[rcx+rcx*1]
  42004a:	test   ecx,ecx
  42004c:	mov    ecx,0x400
  420051:	cmove  eax,ecx
  420054:	mov    DWORD PTR [rsi],eax
  420056:	cdqe   
  420058:	shl    rax,0x3
  42005c:	mov    rbp,rsi
  42005f:	lea    rsi,[rax+rax*4]
  420063:	call   4061d0 <realloc@plt>
  420068:	mov    rcx,QWORD PTR [rsp+0x8]
  42006d:	mov    QWORD PTR [rcx],rax
  420070:	test   rax,rax
  420073:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  420079:	movsxd rcx,DWORD PTR [rbp+0x0]
  42007d:	lea    rcx,[rcx+rcx*4]
  420081:	lea    rcx,[rax+rcx*8]
  420085:	mov    r9,QWORD PTR [rsp+0x10]
  42008a:	mov    QWORD PTR [r9],rcx
  42008d:	lea    rax,[rax+rbx*8]
  420091:	mov    r10,QWORD PTR [rsp+0x28]
  420096:	mov    QWORD PTR [r10],rax
  420099:	mov    r11,QWORD PTR [rsp+0x20]
  42009e:	mov    r8,QWORD PTR [rsp+0x18]
  4200a3:	lea    rbx,[r12+0x2]
  4200a8:	mov    QWORD PTR [rax+0x20],0x2b2b
  4200b0:	jmp    41e714 <__flatcc_fb_parse@@Base+0x2a34>
  4200b5:	lea    rbx,[r12+0x2]
  4200ba:	cmp    rbx,r13
  4200bd:	je     420a69 <__flatcc_fb_parse@@Base+0x4d89>
  4200c3:	cmp    BYTE PTR [rbx],0x3d
  4200c6:	jne    420a69 <__flatcc_fb_parse@@Base+0x4d89>
  4200cc:	mov    rax,QWORD PTR [rsp+0x8]
  4200d1:	mov    rdi,QWORD PTR [rax]
  4200d4:	movsxd rcx,DWORD PTR [rsi]
  4200d7:	lea    rbx,[rcx+rcx*4]
  4200db:	lea    rdx,[rdi+rbx*8]
  4200df:	mov    QWORD PTR [r9],rdx
  4200e2:	mov    rax,QWORD PTR [r10]
  4200e5:	cmp    rax,rdx
  4200e8:	jne    420146 <__flatcc_fb_parse@@Base+0x4466>
  4200ea:	lea    eax,[rcx+rcx*1]
  4200ed:	test   ecx,ecx
  4200ef:	mov    ecx,0x400
  4200f4:	cmove  eax,ecx
  4200f7:	mov    DWORD PTR [rsi],eax
  4200f9:	cdqe   
  4200fb:	shl    rax,0x3
  4200ff:	mov    rbp,rsi
  420102:	lea    rsi,[rax+rax*4]
  420106:	call   4061d0 <realloc@plt>
  42010b:	mov    rcx,QWORD PTR [rsp+0x8]
  420110:	mov    QWORD PTR [rcx],rax
  420113:	test   rax,rax
  420116:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  42011c:	movsxd rcx,DWORD PTR [rbp+0x0]
  420120:	lea    rcx,[rcx+rcx*4]
  420124:	lea    rcx,[rax+rcx*8]
  420128:	mov    r9,QWORD PTR [rsp+0x10]
  42012d:	mov    QWORD PTR [r9],rcx
  420130:	lea    rax,[rax+rbx*8]
  420134:	mov    r10,QWORD PTR [rsp+0x28]
  420139:	mov    QWORD PTR [r10],rax
  42013c:	mov    r11,QWORD PTR [rsp+0x20]
  420141:	mov    r8,QWORD PTR [rsp+0x18]
  420146:	lea    rbx,[r12+0x3]
  42014b:	mov    QWORD PTR [rax+0x20],0x3d3a3a
  420153:	jmp    4216d4 <__flatcc_fb_parse@@Base+0x59f4>
  420158:	lea    rbx,[r12+0x2]
  42015d:	cmp    rbx,r13
  420160:	je     420d03 <__flatcc_fb_parse@@Base+0x5023>
  420166:	movsx  eax,BYTE PTR [rbx]
  420169:	cmp    eax,0x3e
  42016c:	je     4213f3 <__flatcc_fb_parse@@Base+0x5713>
  420172:	cmp    eax,0x3d
  420175:	jne    420d03 <__flatcc_fb_parse@@Base+0x5023>
  42017b:	mov    rax,QWORD PTR [rsp+0x8]
  420180:	mov    rdi,QWORD PTR [rax]
  420183:	movsxd rcx,DWORD PTR [rsi]
  420186:	lea    rbx,[rcx+rcx*4]
  42018a:	lea    rdx,[rdi+rbx*8]
  42018e:	mov    QWORD PTR [r9],rdx
  420191:	mov    rax,QWORD PTR [r10]
  420194:	cmp    rax,rdx
  420197:	jne    4201f5 <__flatcc_fb_parse@@Base+0x4515>
  420199:	lea    eax,[rcx+rcx*1]
  42019c:	test   ecx,ecx
  42019e:	mov    ecx,0x400
  4201a3:	cmove  eax,ecx
  4201a6:	mov    DWORD PTR [rsi],eax
  4201a8:	cdqe   
  4201aa:	shl    rax,0x3
  4201ae:	mov    rbp,rsi
  4201b1:	lea    rsi,[rax+rax*4]
  4201b5:	call   4061d0 <realloc@plt>
  4201ba:	mov    rcx,QWORD PTR [rsp+0x8]
  4201bf:	mov    QWORD PTR [rcx],rax
  4201c2:	test   rax,rax
  4201c5:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  4201cb:	movsxd rcx,DWORD PTR [rbp+0x0]
  4201cf:	lea    rcx,[rcx+rcx*4]
  4201d3:	lea    rcx,[rax+rcx*8]
  4201d7:	mov    r9,QWORD PTR [rsp+0x10]
  4201dc:	mov    QWORD PTR [r9],rcx
  4201df:	lea    rax,[rax+rbx*8]
  4201e3:	mov    r10,QWORD PTR [rsp+0x28]
  4201e8:	mov    QWORD PTR [r10],rax
  4201eb:	mov    r11,QWORD PTR [rsp+0x20]
  4201f0:	mov    r8,QWORD PTR [rsp+0x18]
  4201f5:	lea    rbx,[r12+0x3]
  4201fa:	mov    QWORD PTR [rax+0x20],0x3d3e3e
  420202:	jmp    4216d4 <__flatcc_fb_parse@@Base+0x59f4>
  420207:	mov    rax,QWORD PTR [rsp+0x8]
  42020c:	mov    rdi,QWORD PTR [rax]
  42020f:	movsxd rcx,DWORD PTR [rsi]
  420212:	lea    rbx,[rcx+rcx*4]
  420216:	lea    rdx,[rdi+rbx*8]
  42021a:	mov    QWORD PTR [r9],rdx
  42021d:	mov    rax,QWORD PTR [r10]
  420220:	cmp    rax,rdx
  420223:	jne    420284 <__flatcc_fb_parse@@Base+0x45a4>
  420225:	lea    eax,[rcx+rcx*1]
  420228:	test   ecx,ecx
  42022a:	mov    ecx,0x400
  42022f:	cmove  eax,ecx
  420232:	mov    DWORD PTR [rsi],eax
  420234:	cdqe   
  420236:	shl    rax,0x3
  42023a:	mov    rbp,rsi
  42023d:	lea    rsi,[rax+rax*4]
  420241:	call   4061d0 <realloc@plt>
  420246:	mov    rcx,QWORD PTR [rsp+0x8]
  42024b:	mov    QWORD PTR [rcx],rax
  42024e:	test   rax,rax
  420251:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  420257:	movsxd rcx,DWORD PTR [rbp+0x0]
  42025b:	lea    rcx,[rcx+rcx*4]
  42025f:	lea    rcx,[rax+rcx*8]
  420263:	mov    r9,QWORD PTR [rsp+0x10]
  420268:	mov    QWORD PTR [r9],rcx
  42026b:	lea    rax,[rax+rbx*8]
  42026f:	mov    r10,QWORD PTR [rsp+0x28]
  420274:	mov    QWORD PTR [r10],rax
  420277:	mov    r11,QWORD PTR [rsp+0x20]
  42027c:	mov    r8,QWORD PTR [rsp+0x18]
  420281:	mov    rsi,rbp
  420284:	lea    rbx,[r12+0x2]
  420289:	mov    QWORD PTR [rax+0x20],0x2626
  420291:	mov    QWORD PTR [rax],r12
  420294:	mov    QWORD PTR [rax+0x8],0x2
  42029c:	mov    rcx,QWORD PTR [r8]
  42029f:	mov    QWORD PTR [rax+0x10],rcx
  4202a3:	mov    rcx,r12
  4202a6:	sub    rcx,QWORD PTR [r11]
  4202a9:	inc    rcx
  4202ac:	mov    QWORD PTR [rax+0x18],rcx
  4202b0:	add    rax,0x28
  4202b4:	mov    QWORD PTR [r10],rax
  4202b7:	mov    rax,QWORD PTR [rsp+0x8]
  4202bc:	mov    rdi,QWORD PTR [rax]
  4202bf:	movsxd rcx,DWORD PTR [rsi]
  4202c2:	lea    r14,[rcx+rcx*4]
  4202c6:	lea    rdx,[rdi+r14*8]
  4202ca:	mov    QWORD PTR [r9],rdx
  4202cd:	mov    rax,QWORD PTR [r10]
  4202d0:	cmp    rax,rdx
  4202d3:	jne    420331 <__flatcc_fb_parse@@Base+0x4651>
  4202d5:	lea    eax,[rcx+rcx*1]
  4202d8:	test   ecx,ecx
  4202da:	mov    ecx,0x400
  4202df:	cmove  eax,ecx
  4202e2:	mov    DWORD PTR [rsi],eax
  4202e4:	cdqe   
  4202e6:	shl    rax,0x3
  4202ea:	mov    rbp,rsi
  4202ed:	lea    rsi,[rax+rax*4]
  4202f1:	call   4061d0 <realloc@plt>
  4202f6:	mov    rcx,QWORD PTR [rsp+0x8]
  4202fb:	mov    QWORD PTR [rcx],rax
  4202fe:	test   rax,rax
  420301:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  420307:	movsxd rcx,DWORD PTR [rbp+0x0]
  42030b:	lea    rcx,[rcx+rcx*4]
  42030f:	lea    rcx,[rax+rcx*8]
  420313:	mov    r9,QWORD PTR [rsp+0x10]
  420318:	mov    QWORD PTR [r9],rcx
  42031b:	lea    rax,[rax+r14*8]
  42031f:	mov    r10,QWORD PTR [rsp+0x28]
  420324:	mov    QWORD PTR [r10],rax
  420327:	mov    r11,QWORD PTR [rsp+0x20]
  42032c:	mov    r8,QWORD PTR [rsp+0x18]
  420331:	mov    QWORD PTR [rax+0x20],0x26
  420339:	jmp    420c1d <__flatcc_fb_parse@@Base+0x4f3d>
  42033e:	mov    rax,QWORD PTR [rsp+0x8]
  420343:	mov    rdi,QWORD PTR [rax]
  420346:	movsxd rcx,DWORD PTR [rsi]
  420349:	lea    rbx,[rcx+rcx*4]
  42034d:	lea    rdx,[rdi+rbx*8]
  420351:	mov    QWORD PTR [r9],rdx
  420354:	mov    rax,QWORD PTR [r10]
  420357:	cmp    rax,rdx
  42035a:	jne    4203bb <__flatcc_fb_parse@@Base+0x46db>
  42035c:	lea    eax,[rcx+rcx*1]
  42035f:	test   ecx,ecx
  420361:	mov    ecx,0x400
  420366:	cmove  eax,ecx
  420369:	mov    DWORD PTR [rsi],eax
  42036b:	cdqe   
  42036d:	shl    rax,0x3
  420371:	mov    rbp,rsi
  420374:	lea    rsi,[rax+rax*4]
  420378:	call   4061d0 <realloc@plt>
  42037d:	mov    rcx,QWORD PTR [rsp+0x8]
  420382:	mov    QWORD PTR [rcx],rax
  420385:	test   rax,rax
  420388:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  42038e:	movsxd rcx,DWORD PTR [rbp+0x0]
  420392:	lea    rcx,[rcx+rcx*4]
  420396:	lea    rcx,[rax+rcx*8]
  42039a:	mov    r9,QWORD PTR [rsp+0x10]
  42039f:	mov    QWORD PTR [r9],rcx
  4203a2:	lea    rax,[rax+rbx*8]
  4203a6:	mov    r10,QWORD PTR [rsp+0x28]
  4203ab:	mov    QWORD PTR [r10],rax
  4203ae:	mov    r11,QWORD PTR [rsp+0x20]
  4203b3:	mov    r8,QWORD PTR [rsp+0x18]
  4203b8:	mov    rsi,rbp
  4203bb:	lea    rbx,[r12+0x2]
  4203c0:	mov    QWORD PTR [rax+0x20],0x7c7c
  4203c8:	mov    QWORD PTR [rax],r12
  4203cb:	mov    QWORD PTR [rax+0x8],0x2
  4203d3:	mov    rcx,QWORD PTR [r8]
  4203d6:	mov    QWORD PTR [rax+0x10],rcx
  4203da:	mov    rcx,r12
  4203dd:	sub    rcx,QWORD PTR [r11]
  4203e0:	inc    rcx
  4203e3:	mov    QWORD PTR [rax+0x18],rcx
  4203e7:	add    rax,0x28
  4203eb:	mov    QWORD PTR [r10],rax
  4203ee:	mov    rax,QWORD PTR [rsp+0x8]
  4203f3:	mov    rdi,QWORD PTR [rax]
  4203f6:	movsxd rcx,DWORD PTR [rsi]
  4203f9:	lea    r14,[rcx+rcx*4]
  4203fd:	lea    rdx,[rdi+r14*8]
  420401:	mov    QWORD PTR [r9],rdx
  420404:	mov    rax,QWORD PTR [r10]
  420407:	cmp    rax,rdx
  42040a:	jne    420468 <__flatcc_fb_parse@@Base+0x4788>
  42040c:	lea    eax,[rcx+rcx*1]
  42040f:	test   ecx,ecx
  420411:	mov    ecx,0x400
  420416:	cmove  eax,ecx
  420419:	mov    DWORD PTR [rsi],eax
  42041b:	cdqe   
  42041d:	shl    rax,0x3
  420421:	mov    rbp,rsi
  420424:	lea    rsi,[rax+rax*4]
  420428:	call   4061d0 <realloc@plt>
  42042d:	mov    rcx,QWORD PTR [rsp+0x8]
  420432:	mov    QWORD PTR [rcx],rax
  420435:	test   rax,rax
  420438:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  42043e:	movsxd rcx,DWORD PTR [rbp+0x0]
  420442:	lea    rcx,[rcx+rcx*4]
  420446:	lea    rcx,[rax+rcx*8]
  42044a:	mov    r9,QWORD PTR [rsp+0x10]
  42044f:	mov    QWORD PTR [r9],rcx
  420452:	lea    rax,[rax+r14*8]
  420456:	mov    r10,QWORD PTR [rsp+0x28]
  42045b:	mov    QWORD PTR [r10],rax
  42045e:	mov    r11,QWORD PTR [rsp+0x20]
  420463:	mov    r8,QWORD PTR [rsp+0x18]
  420468:	mov    QWORD PTR [rax+0x20],0x7c
  420470:	jmp    420c1d <__flatcc_fb_parse@@Base+0x4f3d>
  420475:	mov    rax,QWORD PTR [rsp+0x8]
  42047a:	mov    rdi,QWORD PTR [rax]
  42047d:	movsxd rcx,DWORD PTR [rsi]
  420480:	lea    r14,[rcx+rcx*4]
  420484:	lea    rdx,[rdi+r14*8]
  420488:	mov    QWORD PTR [r9],rdx
  42048b:	mov    rax,QWORD PTR [r10]
  42048e:	cmp    rax,rdx
  420491:	jne    4204ef <__flatcc_fb_parse@@Base+0x480f>
  420493:	lea    eax,[rcx+rcx*1]
  420496:	test   ecx,ecx
  420498:	mov    ecx,0x400
  42049d:	cmove  eax,ecx
  4204a0:	mov    DWORD PTR [rsi],eax
  4204a2:	cdqe   
  4204a4:	shl    rax,0x3
  4204a8:	mov    rbp,rsi
  4204ab:	lea    rsi,[rax+rax*4]
  4204af:	call   4061d0 <realloc@plt>
  4204b4:	mov    rcx,QWORD PTR [rsp+0x8]
  4204b9:	mov    QWORD PTR [rcx],rax
  4204bc:	test   rax,rax
  4204bf:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  4204c5:	movsxd rcx,DWORD PTR [rbp+0x0]
  4204c9:	lea    rcx,[rcx+rcx*4]
  4204cd:	lea    rcx,[rax+rcx*8]
  4204d1:	mov    r9,QWORD PTR [rsp+0x10]
  4204d6:	mov    QWORD PTR [r9],rcx
  4204d9:	lea    rax,[rax+r14*8]
  4204dd:	mov    r10,QWORD PTR [rsp+0x28]
  4204e2:	mov    QWORD PTR [r10],rax
  4204e5:	mov    r11,QWORD PTR [rsp+0x20]
  4204ea:	mov    r8,QWORD PTR [rsp+0x18]
  4204ef:	mov    QWORD PTR [rax+0x20],0x2a2a
  4204f7:	jmp    420eb8 <__flatcc_fb_parse@@Base+0x51d8>
  4204fc:	lea    rbx,[r12+0x2]
  420501:	cmp    rbx,r13
  420504:	je     420af0 <__flatcc_fb_parse@@Base+0x4e10>
  42050a:	cmp    BYTE PTR [rbx],0x3d
  42050d:	jne    420af0 <__flatcc_fb_parse@@Base+0x4e10>
  420513:	mov    rax,QWORD PTR [rsp+0x8]
  420518:	mov    rdi,QWORD PTR [rax]
  42051b:	movsxd rcx,DWORD PTR [rsi]
  42051e:	lea    rbx,[rcx+rcx*4]
  420522:	lea    rdx,[rdi+rbx*8]
  420526:	mov    QWORD PTR [r9],rdx
  420529:	mov    rax,QWORD PTR [r10]
  42052c:	cmp    rax,rdx
  42052f:	jne    42058d <__flatcc_fb_parse@@Base+0x48ad>
  420531:	lea    eax,[rcx+rcx*1]
  420534:	test   ecx,ecx
  420536:	mov    ecx,0x400
  42053b:	cmove  eax,ecx
  42053e:	mov    DWORD PTR [rsi],eax
  420540:	cdqe   
  420542:	shl    rax,0x3
  420546:	mov    rbp,rsi
  420549:	lea    rsi,[rax+rax*4]
  42054d:	call   4061d0 <realloc@plt>
  420552:	mov    rcx,QWORD PTR [rsp+0x8]
  420557:	mov    QWORD PTR [rcx],rax
  42055a:	test   rax,rax
  42055d:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  420563:	movsxd rcx,DWORD PTR [rbp+0x0]
  420567:	lea    rcx,[rcx+rcx*4]
  42056b:	lea    rcx,[rax+rcx*8]
  42056f:	mov    r9,QWORD PTR [rsp+0x10]
  420574:	mov    QWORD PTR [r9],rcx
  420577:	lea    rax,[rax+rbx*8]
  42057b:	mov    r10,QWORD PTR [rsp+0x28]
  420580:	mov    QWORD PTR [r10],rax
  420583:	mov    r11,QWORD PTR [rsp+0x20]
  420588:	mov    r8,QWORD PTR [rsp+0x18]
  42058d:	lea    rbx,[r12+0x3]
  420592:	mov    QWORD PTR [rax+0x20],0x3d3d3d
  42059a:	jmp    4216d4 <__flatcc_fb_parse@@Base+0x59f4>
  42059f:	mov    rbx,r13
  4205a2:	mov    rax,QWORD PTR [rsp+0x8]
  4205a7:	mov    rdi,QWORD PTR [rax]
  4205aa:	movsxd rcx,DWORD PTR [rsi]
  4205ad:	lea    r14,[rcx+rcx*4]
  4205b1:	lea    rdx,[rdi+r14*8]
  4205b5:	mov    QWORD PTR [r9],rdx
  4205b8:	mov    rax,QWORD PTR [r10]
  4205bb:	cmp    rax,rdx
  4205be:	jne    42061c <__flatcc_fb_parse@@Base+0x493c>
  4205c0:	lea    eax,[rcx+rcx*1]
  4205c3:	test   ecx,ecx
  4205c5:	mov    ecx,0x400
  4205ca:	cmove  eax,ecx
  4205cd:	mov    DWORD PTR [rsi],eax
  4205cf:	cdqe   
  4205d1:	shl    rax,0x3
  4205d5:	mov    rbp,rsi
  4205d8:	lea    rsi,[rax+rax*4]
  4205dc:	call   4061d0 <realloc@plt>
  4205e1:	mov    rcx,QWORD PTR [rsp+0x8]
  4205e6:	mov    QWORD PTR [rcx],rax
  4205e9:	test   rax,rax
  4205ec:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  4205f2:	movsxd rcx,DWORD PTR [rbp+0x0]
  4205f6:	lea    rcx,[rcx+rcx*4]
  4205fa:	lea    rcx,[rax+rcx*8]
  4205fe:	mov    r9,QWORD PTR [rsp+0x10]
  420603:	mov    QWORD PTR [r9],rcx
  420606:	lea    rax,[rax+r14*8]
  42060a:	mov    r10,QWORD PTR [rsp+0x28]
  42060f:	mov    QWORD PTR [r10],rax
  420612:	mov    r11,QWORD PTR [rsp+0x20]
  420617:	mov    r8,QWORD PTR [rsp+0x18]
  42061c:	mov    QWORD PTR [rax+0x20],0xe
  420624:	jmp    420c1d <__flatcc_fb_parse@@Base+0x4f3d>
  420629:	mov    rax,QWORD PTR [rsp+0x8]
  42062e:	mov    rdi,QWORD PTR [rax]
  420631:	movsxd rcx,DWORD PTR [rsi]
  420634:	lea    r14,[rcx+rcx*4]
  420638:	lea    rdx,[rdi+r14*8]
  42063c:	mov    QWORD PTR [r9],rdx
  42063f:	mov    rax,QWORD PTR [r10]
  420642:	cmp    rax,rdx
  420645:	jne    4206a3 <__flatcc_fb_parse@@Base+0x49c3>
  420647:	lea    eax,[rcx+rcx*1]
  42064a:	test   ecx,ecx
  42064c:	mov    ecx,0x400
  420651:	cmove  eax,ecx
  420654:	mov    DWORD PTR [rsi],eax
  420656:	cdqe   
  420658:	shl    rax,0x3
  42065c:	mov    rbp,rsi
  42065f:	lea    rsi,[rax+rax*4]
  420663:	call   4061d0 <realloc@plt>
  420668:	mov    rcx,QWORD PTR [rsp+0x8]
  42066d:	mov    QWORD PTR [rcx],rax
  420670:	test   rax,rax
  420673:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  420679:	movsxd rcx,DWORD PTR [rbp+0x0]
  42067d:	lea    rcx,[rcx+rcx*4]
  420681:	lea    rcx,[rax+rcx*8]
  420685:	mov    r9,QWORD PTR [rsp+0x10]
  42068a:	mov    QWORD PTR [r9],rcx
  42068d:	lea    rax,[rax+r14*8]
  420691:	mov    r10,QWORD PTR [rsp+0x28]
  420696:	mov    QWORD PTR [r10],rax
  420699:	mov    r11,QWORD PTR [rsp+0x20]
  42069e:	mov    r8,QWORD PTR [rsp+0x18]
  4206a3:	mov    QWORD PTR [rax+0x20],0x5
  4206ab:	jmp    420eb8 <__flatcc_fb_parse@@Base+0x51d8>
  4206b0:	movsxd rdx,esi
  4206b3:	lea    rbx,[rdx+rdx*4]
  4206b7:	lea    rdx,[rax+rbx*8]
  4206bb:	mov    rdi,QWORD PTR [rsp+0x10]
  4206c0:	mov    QWORD PTR [rdi],rdx
  4206c3:	cmp    rcx,rdx
  4206c6:	mov    r13,QWORD PTR [rsp+0x48]
  4206cb:	jne    420736 <__flatcc_fb_parse@@Base+0x4a56>
  4206cd:	lea    ecx,[rsi+rsi*1]
  4206d0:	test   esi,esi
  4206d2:	mov    edx,0x400
  4206d7:	cmove  ecx,edx
  4206da:	mov    rbp,QWORD PTR [rsp+0x30]
  4206df:	mov    DWORD PTR [rbp+0x0],ecx
  4206e2:	movsxd rcx,ecx
  4206e5:	shl    rcx,0x3
  4206e9:	lea    rsi,[rcx+rcx*4]
  4206ed:	mov    rdi,rax
  4206f0:	call   4061d0 <realloc@plt>
  4206f5:	mov    rcx,QWORD PTR [rsp+0x8]
  4206fa:	mov    QWORD PTR [rcx],rax
  4206fd:	test   rax,rax
  420700:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  420706:	movsxd rcx,DWORD PTR [rbp+0x0]
  42070a:	lea    rcx,[rcx+rcx*4]
  42070e:	lea    rcx,[rax+rcx*8]
  420712:	mov    rdx,QWORD PTR [rsp+0x10]
  420717:	mov    QWORD PTR [rdx],rcx
  42071a:	lea    rcx,[rax+rbx*8]
  42071e:	mov    r10,QWORD PTR [rsp+0x28]
  420723:	mov    QWORD PTR [r10],rcx
  420726:	mov    rax,QWORD PTR [rsp+0x18]
  42072b:	mov    r9,QWORD PTR [rax]
  42072e:	mov    r11,QWORD PTR [rsp+0x20]
  420733:	mov    r8,QWORD PTR [r11]
  420736:	mov    QWORD PTR [rcx+0x20],0x17
  42073e:	mov    QWORD PTR [rcx],r14
  420741:	mov    QWORD PTR [rcx+0x8],0x0
  420749:	mov    QWORD PTR [rcx+0x10],r9
  42074d:	mov    rax,r14
  420750:	sub    rax,r8
  420753:	inc    rax
  420756:	mov    QWORD PTR [rcx+0x18],rax
  42075a:	add    rcx,0x28
  42075e:	mov    QWORD PTR [r10],rcx
  420761:	mov    r12,r14
  420764:	jmp    420ceb <__flatcc_fb_parse@@Base+0x500b>
  420769:	mov    rax,QWORD PTR [rsp+0x8]
  42076e:	mov    rdi,QWORD PTR [rax]
  420771:	movsxd rcx,DWORD PTR [rsi]
  420774:	lea    rbx,[rcx+rcx*4]
  420778:	lea    rdx,[rdi+rbx*8]
  42077c:	mov    QWORD PTR [r9],rdx
  42077f:	mov    rax,QWORD PTR [r10]
  420782:	cmp    rax,rdx
  420785:	jne    4207e3 <__flatcc_fb_parse@@Base+0x4b03>
  420787:	lea    eax,[rcx+rcx*1]
  42078a:	test   ecx,ecx
  42078c:	mov    ecx,0x400
  420791:	cmove  eax,ecx
  420794:	mov    DWORD PTR [rsi],eax
  420796:	cdqe   
  420798:	shl    rax,0x3
  42079c:	mov    rbp,rsi
  42079f:	lea    rsi,[rax+rax*4]
  4207a3:	call   4061d0 <realloc@plt>
  4207a8:	mov    rcx,QWORD PTR [rsp+0x8]
  4207ad:	mov    QWORD PTR [rcx],rax
  4207b0:	test   rax,rax
  4207b3:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  4207b9:	movsxd rcx,DWORD PTR [rbp+0x0]
  4207bd:	lea    rcx,[rcx+rcx*4]
  4207c1:	lea    rcx,[rax+rcx*8]
  4207c5:	mov    r9,QWORD PTR [rsp+0x10]
  4207ca:	mov    QWORD PTR [r9],rcx
  4207cd:	lea    rax,[rax+rbx*8]
  4207d1:	mov    r10,QWORD PTR [rsp+0x28]
  4207d6:	mov    QWORD PTR [r10],rax
  4207d9:	mov    r11,QWORD PTR [rsp+0x20]
  4207de:	mov    r8,QWORD PTR [rsp+0x18]
  4207e3:	lea    rbx,[r12+0x2]
  4207e8:	mov    QWORD PTR [rax+0x20],0x3d3c
  4207f0:	jmp    41e714 <__flatcc_fb_parse@@Base+0x2a34>
  4207f5:	lea    rbx,[r12+0x2]
  4207fa:	cmp    rbx,r13
  4207fd:	je     420ee0 <__flatcc_fb_parse@@Base+0x5200>
  420803:	movsx  eax,BYTE PTR [rbx]
  420806:	cmp    eax,0x3c
  420809:	je     42151d <__flatcc_fb_parse@@Base+0x583d>
  42080f:	cmp    eax,0x3d
  420812:	jne    420ee0 <__flatcc_fb_parse@@Base+0x5200>
  420818:	mov    rax,QWORD PTR [rsp+0x8]
  42081d:	mov    rdi,QWORD PTR [rax]
  420820:	movsxd rcx,DWORD PTR [rsi]
  420823:	lea    rbx,[rcx+rcx*4]
  420827:	lea    rdx,[rdi+rbx*8]
  42082b:	mov    QWORD PTR [r9],rdx
  42082e:	mov    rax,QWORD PTR [r10]
  420831:	cmp    rax,rdx
  420834:	jne    420892 <__flatcc_fb_parse@@Base+0x4bb2>
  420836:	lea    eax,[rcx+rcx*1]
  420839:	test   ecx,ecx
  42083b:	mov    ecx,0x400
  420840:	cmove  eax,ecx
  420843:	mov    DWORD PTR [rsi],eax
  420845:	cdqe   
  420847:	shl    rax,0x3
  42084b:	mov    rbp,rsi
  42084e:	lea    rsi,[rax+rax*4]
  420852:	call   4061d0 <realloc@plt>
  420857:	mov    rcx,QWORD PTR [rsp+0x8]
  42085c:	mov    QWORD PTR [rcx],rax
  42085f:	test   rax,rax
  420862:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  420868:	movsxd rcx,DWORD PTR [rbp+0x0]
  42086c:	lea    rcx,[rcx+rcx*4]
  420870:	lea    rcx,[rax+rcx*8]
  420874:	mov    r9,QWORD PTR [rsp+0x10]
  420879:	mov    QWORD PTR [r9],rcx
  42087c:	lea    rax,[rax+rbx*8]
  420880:	mov    r10,QWORD PTR [rsp+0x28]
  420885:	mov    QWORD PTR [r10],rax
  420888:	mov    r11,QWORD PTR [rsp+0x20]
  42088d:	mov    r8,QWORD PTR [rsp+0x18]
  420892:	lea    rbx,[r12+0x3]
  420897:	mov    QWORD PTR [rax+0x20],0x3d3c3c
  42089f:	jmp    4216d4 <__flatcc_fb_parse@@Base+0x59f4>
  4208a4:	lea    rbx,[r12+0x2]
  4208a9:	cmp    rbx,r13
  4208ac:	je     421034 <__flatcc_fb_parse@@Base+0x5354>
  4208b2:	mov    al,BYTE PTR [rbx]
  4208b4:	cmp    al,0x2a
  4208b6:	sete   cl
  4208b9:	cmp    al,0x21
  4208bb:	sete   al
  4208be:	or     al,cl
  4208c0:	jmp    421036 <__flatcc_fb_parse@@Base+0x5356>
  4208c5:	mov    rax,QWORD PTR [rsp+0x8]
  4208ca:	mov    rdi,QWORD PTR [rax]
  4208cd:	movsxd rcx,DWORD PTR [rsi]
  4208d0:	lea    rbx,[rcx+rcx*4]
  4208d4:	lea    rdx,[rdi+rbx*8]
  4208d8:	mov    QWORD PTR [r9],rdx
  4208db:	mov    rax,QWORD PTR [r10]
  4208de:	cmp    rax,rdx
  4208e1:	jne    42093f <__flatcc_fb_parse@@Base+0x4c5f>
  4208e3:	lea    eax,[rcx+rcx*1]
  4208e6:	test   ecx,ecx
  4208e8:	mov    ecx,0x400
  4208ed:	cmove  eax,ecx
  4208f0:	mov    DWORD PTR [rsi],eax
  4208f2:	cdqe   
  4208f4:	shl    rax,0x3
  4208f8:	mov    rbp,rsi
  4208fb:	lea    rsi,[rax+rax*4]
  4208ff:	call   4061d0 <realloc@plt>
  420904:	mov    rcx,QWORD PTR [rsp+0x8]
  420909:	mov    QWORD PTR [rcx],rax
  42090c:	test   rax,rax
  42090f:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  420915:	movsxd rcx,DWORD PTR [rbp+0x0]
  420919:	lea    rcx,[rcx+rcx*4]
  42091d:	lea    rcx,[rax+rcx*8]
  420921:	mov    r9,QWORD PTR [rsp+0x10]
  420926:	mov    QWORD PTR [r9],rcx
  420929:	lea    rax,[rax+rbx*8]
  42092d:	mov    r10,QWORD PTR [rsp+0x28]
  420932:	mov    QWORD PTR [r10],rax
  420935:	mov    r11,QWORD PTR [rsp+0x20]
  42093a:	mov    r8,QWORD PTR [rsp+0x18]
  42093f:	lea    rbx,[r12+0x2]
  420944:	mov    QWORD PTR [rax+0x20],0x3d2f
  42094c:	jmp    41e714 <__flatcc_fb_parse@@Base+0x2a34>
  420951:	mov    rax,QWORD PTR [rsp+0x8]
  420956:	mov    rdi,QWORD PTR [rax]
  420959:	movsxd rcx,DWORD PTR [rsi]
  42095c:	lea    rbx,[rcx+rcx*4]
  420960:	lea    rdx,[rdi+rbx*8]
  420964:	mov    QWORD PTR [r9],rdx
  420967:	mov    rax,QWORD PTR [r10]
  42096a:	cmp    rax,rdx
  42096d:	jne    4209cb <__flatcc_fb_parse@@Base+0x4ceb>
  42096f:	lea    eax,[rcx+rcx*1]
  420972:	test   ecx,ecx
  420974:	mov    ecx,0x400
  420979:	cmove  eax,ecx
  42097c:	mov    DWORD PTR [rsi],eax
  42097e:	cdqe   
  420980:	shl    rax,0x3
  420984:	mov    rbp,rsi
  420987:	lea    rsi,[rax+rax*4]
  42098b:	call   4061d0 <realloc@plt>
  420990:	mov    rcx,QWORD PTR [rsp+0x8]
  420995:	mov    QWORD PTR [rcx],rax
  420998:	test   rax,rax
  42099b:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  4209a1:	movsxd rcx,DWORD PTR [rbp+0x0]
  4209a5:	lea    rcx,[rcx+rcx*4]
  4209a9:	lea    rcx,[rax+rcx*8]
  4209ad:	mov    r9,QWORD PTR [rsp+0x10]
  4209b2:	mov    QWORD PTR [r9],rcx
  4209b5:	lea    rax,[rax+rbx*8]
  4209b9:	mov    r10,QWORD PTR [rsp+0x28]
  4209be:	mov    QWORD PTR [r10],rax
  4209c1:	mov    r11,QWORD PTR [rsp+0x20]
  4209c6:	mov    r8,QWORD PTR [rsp+0x18]
  4209cb:	lea    rbx,[r12+0x2]
  4209d0:	mov    QWORD PTR [rax+0x20],0x2d2d
  4209d8:	jmp    41e714 <__flatcc_fb_parse@@Base+0x2a34>
  4209dd:	mov    rax,QWORD PTR [rsp+0x8]
  4209e2:	mov    rdi,QWORD PTR [rax]
  4209e5:	movsxd rcx,DWORD PTR [rsi]
  4209e8:	lea    rbx,[rcx+rcx*4]
  4209ec:	lea    rdx,[rdi+rbx*8]
  4209f0:	mov    QWORD PTR [r9],rdx
  4209f3:	mov    rax,QWORD PTR [r10]
  4209f6:	cmp    rax,rdx
  4209f9:	jne    420a57 <__flatcc_fb_parse@@Base+0x4d77>
  4209fb:	lea    eax,[rcx+rcx*1]
  4209fe:	test   ecx,ecx
  420a00:	mov    ecx,0x400
  420a05:	cmove  eax,ecx
  420a08:	mov    DWORD PTR [rsi],eax
  420a0a:	cdqe   
  420a0c:	shl    rax,0x3
  420a10:	mov    rbp,rsi
  420a13:	lea    rsi,[rax+rax*4]
  420a17:	call   4061d0 <realloc@plt>
  420a1c:	mov    rcx,QWORD PTR [rsp+0x8]
  420a21:	mov    QWORD PTR [rcx],rax
  420a24:	test   rax,rax
  420a27:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  420a2d:	movsxd rcx,DWORD PTR [rbp+0x0]
  420a31:	lea    rcx,[rcx+rcx*4]
  420a35:	lea    rcx,[rax+rcx*8]
  420a39:	mov    r9,QWORD PTR [rsp+0x10]
  420a3e:	mov    QWORD PTR [r9],rcx
  420a41:	lea    rax,[rax+rbx*8]
  420a45:	mov    r10,QWORD PTR [rsp+0x28]
  420a4a:	mov    QWORD PTR [r10],rax
  420a4d:	mov    r11,QWORD PTR [rsp+0x20]
  420a52:	mov    r8,QWORD PTR [rsp+0x18]
  420a57:	lea    rbx,[r12+0x2]
  420a5c:	mov    QWORD PTR [rax+0x20],0x3e2d
  420a64:	jmp    41e714 <__flatcc_fb_parse@@Base+0x2a34>
  420a69:	mov    rax,QWORD PTR [rsp+0x8]
  420a6e:	mov    rdi,QWORD PTR [rax]
  420a71:	movsxd rcx,DWORD PTR [rsi]
  420a74:	lea    r14,[rcx+rcx*4]
  420a78:	lea    rdx,[rdi+r14*8]
  420a7c:	mov    QWORD PTR [r9],rdx
  420a7f:	mov    rax,QWORD PTR [r10]
  420a82:	cmp    rax,rdx
  420a85:	jne    420ae3 <__flatcc_fb_parse@@Base+0x4e03>
  420a87:	lea    eax,[rcx+rcx*1]
  420a8a:	test   ecx,ecx
  420a8c:	mov    ecx,0x400
  420a91:	cmove  eax,ecx
  420a94:	mov    DWORD PTR [rsi],eax
  420a96:	cdqe   
  420a98:	shl    rax,0x3
  420a9c:	mov    rbp,rsi
  420a9f:	lea    rsi,[rax+rax*4]
  420aa3:	call   4061d0 <realloc@plt>
  420aa8:	mov    rcx,QWORD PTR [rsp+0x8]
  420aad:	mov    QWORD PTR [rcx],rax
  420ab0:	test   rax,rax
  420ab3:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  420ab9:	movsxd rcx,DWORD PTR [rbp+0x0]
  420abd:	lea    rcx,[rcx+rcx*4]
  420ac1:	lea    rcx,[rax+rcx*8]
  420ac5:	mov    r9,QWORD PTR [rsp+0x10]
  420aca:	mov    QWORD PTR [r9],rcx
  420acd:	lea    rax,[rax+r14*8]
  420ad1:	mov    r10,QWORD PTR [rsp+0x28]
  420ad6:	mov    QWORD PTR [r10],rax
  420ad9:	mov    r11,QWORD PTR [rsp+0x20]
  420ade:	mov    r8,QWORD PTR [rsp+0x18]
  420ae3:	mov    QWORD PTR [rax+0x20],0x3a3a
  420aeb:	jmp    41e714 <__flatcc_fb_parse@@Base+0x2a34>
  420af0:	mov    rax,QWORD PTR [rsp+0x8]
  420af5:	mov    rdi,QWORD PTR [rax]
  420af8:	movsxd rcx,DWORD PTR [rsi]
  420afb:	lea    r14,[rcx+rcx*4]
  420aff:	lea    rdx,[rdi+r14*8]
  420b03:	mov    QWORD PTR [r9],rdx
  420b06:	mov    rax,QWORD PTR [r10]
  420b09:	cmp    rax,rdx
  420b0c:	jne    420b6d <__flatcc_fb_parse@@Base+0x4e8d>
  420b0e:	lea    eax,[rcx+rcx*1]
  420b11:	test   ecx,ecx
  420b13:	mov    ecx,0x400
  420b18:	cmove  eax,ecx
  420b1b:	mov    DWORD PTR [rsi],eax
  420b1d:	cdqe   
  420b1f:	shl    rax,0x3
  420b23:	mov    rbp,rsi
  420b26:	lea    rsi,[rax+rax*4]
  420b2a:	call   4061d0 <realloc@plt>
  420b2f:	mov    rcx,QWORD PTR [rsp+0x8]
  420b34:	mov    QWORD PTR [rcx],rax
  420b37:	test   rax,rax
  420b3a:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  420b40:	movsxd rcx,DWORD PTR [rbp+0x0]
  420b44:	lea    rcx,[rcx+rcx*4]
  420b48:	lea    rcx,[rax+rcx*8]
  420b4c:	mov    r9,QWORD PTR [rsp+0x10]
  420b51:	mov    QWORD PTR [r9],rcx
  420b54:	lea    rax,[rax+r14*8]
  420b58:	mov    r10,QWORD PTR [rsp+0x28]
  420b5d:	mov    QWORD PTR [r10],rax
  420b60:	mov    r11,QWORD PTR [rsp+0x20]
  420b65:	mov    r8,QWORD PTR [rsp+0x18]
  420b6a:	mov    rsi,rbp
  420b6d:	mov    QWORD PTR [rax+0x20],0x3d3d
  420b75:	mov    QWORD PTR [rax],r12
  420b78:	mov    QWORD PTR [rax+0x8],0x2
  420b80:	mov    rcx,QWORD PTR [r8]
  420b83:	mov    QWORD PTR [rax+0x10],rcx
  420b87:	mov    rcx,r12
  420b8a:	sub    rcx,QWORD PTR [r11]
  420b8d:	inc    rcx
  420b90:	mov    QWORD PTR [rax+0x18],rcx
  420b94:	add    rax,0x28
  420b98:	mov    QWORD PTR [r10],rax
  420b9b:	mov    rax,QWORD PTR [rsp+0x8]
  420ba0:	mov    rdi,QWORD PTR [rax]
  420ba3:	movsxd rcx,DWORD PTR [rsi]
  420ba6:	lea    r14,[rcx+rcx*4]
  420baa:	lea    rdx,[rdi+r14*8]
  420bae:	mov    QWORD PTR [r9],rdx
  420bb1:	mov    rax,QWORD PTR [r10]
  420bb4:	cmp    rax,rdx
  420bb7:	jne    420c15 <__flatcc_fb_parse@@Base+0x4f35>
  420bb9:	lea    eax,[rcx+rcx*1]
  420bbc:	test   ecx,ecx
  420bbe:	mov    ecx,0x400
  420bc3:	cmove  eax,ecx
  420bc6:	mov    DWORD PTR [rsi],eax
  420bc8:	cdqe   
  420bca:	shl    rax,0x3
  420bce:	mov    rbp,rsi
  420bd1:	lea    rsi,[rax+rax*4]
  420bd5:	call   4061d0 <realloc@plt>
  420bda:	mov    rcx,QWORD PTR [rsp+0x8]
  420bdf:	mov    QWORD PTR [rcx],rax
  420be2:	test   rax,rax
  420be5:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  420beb:	movsxd rcx,DWORD PTR [rbp+0x0]
  420bef:	lea    rcx,[rcx+rcx*4]
  420bf3:	lea    rcx,[rax+rcx*8]
  420bf7:	mov    r9,QWORD PTR [rsp+0x10]
  420bfc:	mov    QWORD PTR [r9],rcx
  420bff:	lea    rax,[rax+r14*8]
  420c03:	mov    r10,QWORD PTR [rsp+0x28]
  420c08:	mov    QWORD PTR [r10],rax
  420c0b:	mov    r11,QWORD PTR [rsp+0x20]
  420c10:	mov    r8,QWORD PTR [rsp+0x18]
  420c15:	mov    QWORD PTR [rax+0x20],0x3d
  420c1d:	mov    QWORD PTR [rax],r12
  420c20:	mov    rcx,rbx
  420c23:	sub    rcx,r12
  420c26:	mov    QWORD PTR [rax+0x8],rcx
  420c2a:	jmp    420ec3 <__flatcc_fb_parse@@Base+0x51e3>
  420c2f:	mov    r13,QWORD PTR [rsp+0x48]
  420c34:	mov    r12,r13
  420c37:	jmp    420c3f <__flatcc_fb_parse@@Base+0x4f5f>
  420c39:	inc    rbp
  420c3c:	mov    r12,rbp
  420c3f:	movsxd rdx,esi
  420c42:	lea    rbx,[rdx+rdx*4]
  420c46:	lea    rdx,[rax+rbx*8]
  420c4a:	mov    rdi,QWORD PTR [rsp+0x10]
  420c4f:	mov    QWORD PTR [rdi],rdx
  420c52:	cmp    rcx,rdx
  420c55:	jne    420cc0 <__flatcc_fb_parse@@Base+0x4fe0>
  420c57:	lea    ecx,[rsi+rsi*1]
  420c5a:	test   esi,esi
  420c5c:	mov    edx,0x400
  420c61:	cmove  ecx,edx
  420c64:	mov    rbp,QWORD PTR [rsp+0x30]
  420c69:	mov    DWORD PTR [rbp+0x0],ecx
  420c6c:	movsxd rcx,ecx
  420c6f:	shl    rcx,0x3
  420c73:	lea    rsi,[rcx+rcx*4]
  420c77:	mov    rdi,rax
  420c7a:	call   4061d0 <realloc@plt>
  420c7f:	mov    rcx,QWORD PTR [rsp+0x8]
  420c84:	mov    QWORD PTR [rcx],rax
  420c87:	test   rax,rax
  420c8a:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  420c90:	movsxd rcx,DWORD PTR [rbp+0x0]
  420c94:	lea    rcx,[rcx+rcx*4]
  420c98:	lea    rcx,[rax+rcx*8]
  420c9c:	mov    rdx,QWORD PTR [rsp+0x10]
  420ca1:	mov    QWORD PTR [rdx],rcx
  420ca4:	lea    rcx,[rax+rbx*8]
  420ca8:	mov    r10,QWORD PTR [rsp+0x28]
  420cad:	mov    QWORD PTR [r10],rcx
  420cb0:	mov    rax,QWORD PTR [rsp+0x18]
  420cb5:	mov    r9,QWORD PTR [rax]
  420cb8:	mov    r11,QWORD PTR [rsp+0x20]
  420cbd:	mov    r8,QWORD PTR [r11]
  420cc0:	mov    QWORD PTR [rcx+0x20],0x17
  420cc8:	mov    QWORD PTR [rcx],r12
  420ccb:	mov    QWORD PTR [rcx+0x8],0x0
  420cd3:	mov    QWORD PTR [rcx+0x10],r9
  420cd7:	mov    rax,r12
  420cda:	sub    rax,r8
  420cdd:	inc    rax
  420ce0:	mov    QWORD PTR [rcx+0x18],rax
  420ce4:	add    rcx,0x28
  420ce8:	mov    QWORD PTR [r10],rcx
  420ceb:	mov    r8,QWORD PTR [rsp+0x18]
  420cf0:	mov    r9,QWORD PTR [rsp+0x10]
  420cf5:	cmp    r12,r13
  420cf8:	jne    41e1e3 <__flatcc_fb_parse@@Base+0x2503>
  420cfe:	jmp    4219aa <__flatcc_fb_parse@@Base+0x5cca>
  420d03:	mov    rax,QWORD PTR [rsp+0x8]
  420d08:	mov    rdi,QWORD PTR [rax]
  420d0b:	movsxd rcx,DWORD PTR [rsi]
  420d0e:	lea    r14,[rcx+rcx*4]
  420d12:	lea    rdx,[rdi+r14*8]
  420d16:	mov    QWORD PTR [r9],rdx
  420d19:	mov    rax,QWORD PTR [r10]
  420d1c:	cmp    rax,rdx
  420d1f:	jne    420d7d <__flatcc_fb_parse@@Base+0x509d>
  420d21:	lea    eax,[rcx+rcx*1]
  420d24:	test   ecx,ecx
  420d26:	mov    ecx,0x400
  420d2b:	cmove  eax,ecx
  420d2e:	mov    DWORD PTR [rsi],eax
  420d30:	cdqe   
  420d32:	shl    rax,0x3
  420d36:	mov    rbp,rsi
  420d39:	lea    rsi,[rax+rax*4]
  420d3d:	call   4061d0 <realloc@plt>
  420d42:	mov    rcx,QWORD PTR [rsp+0x8]
  420d47:	mov    QWORD PTR [rcx],rax
  420d4a:	test   rax,rax
  420d4d:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  420d53:	movsxd rcx,DWORD PTR [rbp+0x0]
  420d57:	lea    rcx,[rcx+rcx*4]
  420d5b:	lea    rcx,[rax+rcx*8]
  420d5f:	mov    r9,QWORD PTR [rsp+0x10]
  420d64:	mov    QWORD PTR [r9],rcx
  420d67:	lea    rax,[rax+r14*8]
  420d6b:	mov    r10,QWORD PTR [rsp+0x28]
  420d70:	mov    QWORD PTR [r10],rax
  420d73:	mov    r11,QWORD PTR [rsp+0x20]
  420d78:	mov    r8,QWORD PTR [rsp+0x18]
  420d7d:	mov    QWORD PTR [rax+0x20],0x3e3e
  420d85:	jmp    41e714 <__flatcc_fb_parse@@Base+0x2a34>
  420d8a:	cmp    eax,0x2e
  420d8d:	jne    420e36 <__flatcc_fb_parse@@Base+0x5156>
  420d93:	lea    rbx,[r12+0x2]
  420d98:	cmp    rbx,r13
  420d9b:	je     421496 <__flatcc_fb_parse@@Base+0x57b6>
  420da1:	cmp    BYTE PTR [rbx],0x2e
  420da4:	jne    421496 <__flatcc_fb_parse@@Base+0x57b6>
  420daa:	mov    rax,QWORD PTR [rsp+0x8]
  420daf:	mov    rdi,QWORD PTR [rax]
  420db2:	movsxd rcx,DWORD PTR [rsi]
  420db5:	lea    rbx,[rcx+rcx*4]
  420db9:	lea    rdx,[rdi+rbx*8]
  420dbd:	mov    QWORD PTR [r9],rdx
  420dc0:	mov    rax,QWORD PTR [r10]
  420dc3:	cmp    rax,rdx
  420dc6:	jne    420e24 <__flatcc_fb_parse@@Base+0x5144>
  420dc8:	lea    eax,[rcx+rcx*1]
  420dcb:	test   ecx,ecx
  420dcd:	mov    ecx,0x400
  420dd2:	cmove  eax,ecx
  420dd5:	mov    DWORD PTR [rsi],eax
  420dd7:	cdqe   
  420dd9:	shl    rax,0x3
  420ddd:	mov    rbp,rsi
  420de0:	lea    rsi,[rax+rax*4]
  420de4:	call   4061d0 <realloc@plt>
  420de9:	mov    rcx,QWORD PTR [rsp+0x8]
  420dee:	mov    QWORD PTR [rcx],rax
  420df1:	test   rax,rax
  420df4:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  420dfa:	movsxd rcx,DWORD PTR [rbp+0x0]
  420dfe:	lea    rcx,[rcx+rcx*4]
  420e02:	lea    rcx,[rax+rcx*8]
  420e06:	mov    r9,QWORD PTR [rsp+0x10]
  420e0b:	mov    QWORD PTR [r9],rcx
  420e0e:	lea    rax,[rax+rbx*8]
  420e12:	mov    r10,QWORD PTR [rsp+0x28]
  420e17:	mov    QWORD PTR [r10],rax
  420e1a:	mov    r11,QWORD PTR [rsp+0x20]
  420e1f:	mov    r8,QWORD PTR [rsp+0x18]
  420e24:	lea    rbx,[r12+0x3]
  420e29:	mov    QWORD PTR [rax+0x20],0x2e2e2e
  420e31:	jmp    4216d4 <__flatcc_fb_parse@@Base+0x59f4>
  420e36:	mov    rax,QWORD PTR [rsp+0x8]
  420e3b:	mov    rdi,QWORD PTR [rax]
  420e3e:	movsxd rcx,DWORD PTR [rsi]
  420e41:	lea    r14,[rcx+rcx*4]
  420e45:	lea    rdx,[rdi+r14*8]
  420e49:	mov    QWORD PTR [r9],rdx
  420e4c:	mov    rax,QWORD PTR [r10]
  420e4f:	cmp    rax,rdx
  420e52:	jne    420eb0 <__flatcc_fb_parse@@Base+0x51d0>
  420e54:	lea    eax,[rcx+rcx*1]
  420e57:	test   ecx,ecx
  420e59:	mov    ecx,0x400
  420e5e:	cmove  eax,ecx
  420e61:	mov    DWORD PTR [rsi],eax
  420e63:	cdqe   
  420e65:	shl    rax,0x3
  420e69:	mov    rbp,rsi
  420e6c:	lea    rsi,[rax+rax*4]
  420e70:	call   4061d0 <realloc@plt>
  420e75:	mov    rcx,QWORD PTR [rsp+0x8]
  420e7a:	mov    QWORD PTR [rcx],rax
  420e7d:	test   rax,rax
  420e80:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  420e86:	movsxd rcx,DWORD PTR [rbp+0x0]
  420e8a:	lea    rcx,[rcx+rcx*4]
  420e8e:	lea    rcx,[rax+rcx*8]
  420e92:	mov    r9,QWORD PTR [rsp+0x10]
  420e97:	mov    QWORD PTR [r9],rcx
  420e9a:	lea    rax,[rax+r14*8]
  420e9e:	mov    r10,QWORD PTR [rsp+0x28]
  420ea3:	mov    QWORD PTR [r10],rax
  420ea6:	mov    r11,QWORD PTR [rsp+0x20]
  420eab:	mov    r8,QWORD PTR [rsp+0x18]
  420eb0:	mov    QWORD PTR [rax+0x20],0x2e
  420eb8:	mov    QWORD PTR [rax],r12
  420ebb:	mov    QWORD PTR [rax+0x8],0x1
  420ec3:	mov    rcx,QWORD PTR [r8]
  420ec6:	mov    QWORD PTR [rax+0x10],rcx
  420eca:	sub    r12,QWORD PTR [r11]
  420ecd:	inc    r12
  420ed0:	mov    QWORD PTR [rax+0x18],r12
  420ed4:	add    rax,0x28
  420ed8:	mov    QWORD PTR [r10],rax
  420edb:	jmp    41e1d7 <__flatcc_fb_parse@@Base+0x24f7>
  420ee0:	mov    rax,QWORD PTR [rsp+0x8]
  420ee5:	mov    rdi,QWORD PTR [rax]
  420ee8:	movsxd rcx,DWORD PTR [rsi]
  420eeb:	lea    r14,[rcx+rcx*4]
  420eef:	lea    rdx,[rdi+r14*8]
  420ef3:	mov    QWORD PTR [r9],rdx
  420ef6:	mov    rax,QWORD PTR [r10]
  420ef9:	cmp    rax,rdx
  420efc:	jne    420f5a <__flatcc_fb_parse@@Base+0x527a>
  420efe:	lea    eax,[rcx+rcx*1]
  420f01:	test   ecx,ecx
  420f03:	mov    ecx,0x400
  420f08:	cmove  eax,ecx
  420f0b:	mov    DWORD PTR [rsi],eax
  420f0d:	cdqe   
  420f0f:	shl    rax,0x3
  420f13:	mov    rbp,rsi
  420f16:	lea    rsi,[rax+rax*4]
  420f1a:	call   4061d0 <realloc@plt>
  420f1f:	mov    rcx,QWORD PTR [rsp+0x8]
  420f24:	mov    QWORD PTR [rcx],rax
  420f27:	test   rax,rax
  420f2a:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  420f30:	movsxd rcx,DWORD PTR [rbp+0x0]
  420f34:	lea    rcx,[rcx+rcx*4]
  420f38:	lea    rcx,[rax+rcx*8]
  420f3c:	mov    r9,QWORD PTR [rsp+0x10]
  420f41:	mov    QWORD PTR [r9],rcx
  420f44:	lea    rax,[rax+r14*8]
  420f48:	mov    r10,QWORD PTR [rsp+0x28]
  420f4d:	mov    QWORD PTR [r10],rax
  420f50:	mov    r11,QWORD PTR [rsp+0x20]
  420f55:	mov    r8,QWORD PTR [rsp+0x18]
  420f5a:	mov    QWORD PTR [rax+0x20],0x3c3c
  420f62:	jmp    41e714 <__flatcc_fb_parse@@Base+0x2a34>
  420f67:	xor    eax,eax
  420f69:	movzx  eax,al
  420f6c:	add    rbp,rax
  420f6f:	mov    rax,rbp
  420f72:	sub    rax,r12
  420f75:	xor    ecx,ecx
  420f77:	cmp    rax,0x3
  420f7b:	sete   cl
  420f7e:	mov    rax,QWORD PTR [rsp+0x38]
  420f83:	mov    DWORD PTR [rax+0x3c],ecx
  420f86:	jne    4216f0 <__flatcc_fb_parse@@Base+0x5a10>
  420f8c:	mov    rax,QWORD PTR [rsp+0x8]
  420f91:	mov    rdi,QWORD PTR [rax]
  420f94:	movsxd rcx,DWORD PTR [rsi]
  420f97:	lea    r14,[rcx+rcx*4]
  420f9b:	lea    rdx,[rdi+r14*8]
  420f9f:	mov    QWORD PTR [r9],rdx
  420fa2:	mov    rax,QWORD PTR [r10]
  420fa5:	cmp    rax,rdx
  420fa8:	jne    421008 <__flatcc_fb_parse@@Base+0x5328>
  420faa:	lea    eax,[rcx+rcx*1]
  420fad:	test   ecx,ecx
  420faf:	mov    ecx,0x400
  420fb4:	cmove  eax,ecx
  420fb7:	mov    DWORD PTR [rsi],eax
  420fb9:	cdqe   
  420fbb:	shl    rax,0x3
  420fbf:	mov    rbx,rsi
  420fc2:	lea    rsi,[rax+rax*4]
  420fc6:	call   4061d0 <realloc@plt>
  420fcb:	mov    rcx,QWORD PTR [rsp+0x8]
  420fd0:	mov    QWORD PTR [rcx],rax
  420fd3:	test   rax,rax
  420fd6:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  420fdc:	movsxd rcx,DWORD PTR [rbx]
  420fdf:	lea    rcx,[rcx+rcx*4]
  420fe3:	lea    rcx,[rax+rcx*8]
  420fe7:	mov    r9,QWORD PTR [rsp+0x10]
  420fec:	mov    QWORD PTR [r9],rcx
  420fef:	lea    rax,[rax+r14*8]
  420ff3:	mov    r10,QWORD PTR [rsp+0x28]
  420ff8:	mov    QWORD PTR [r10],rax
  420ffb:	mov    r11,QWORD PTR [rsp+0x20]
  421000:	mov    r8,QWORD PTR [rsp+0x18]
  421005:	mov    rsi,rbx
  421008:	mov    QWORD PTR [rax+0x20],0xfffffffffffffc3c
  421010:	mov    QWORD PTR [rax],rbp
  421013:	mov    QWORD PTR [rax+0x8],0x0
  42101b:	mov    rcx,QWORD PTR [r8]
  42101e:	mov    QWORD PTR [rax+0x10],rcx
  421022:	mov    rcx,rbp
  421025:	sub    rcx,QWORD PTR [r11]
  421028:	inc    rcx
  42102b:	mov    QWORD PTR [rax+0x18],rcx
  42102f:	jmp    421977 <__flatcc_fb_parse@@Base+0x5c97>
  421034:	xor    eax,eax
  421036:	movzx  eax,al
  421039:	add    rbx,rax
  42103c:	mov    rax,rbx
  42103f:	sub    rax,r12
  421042:	xor    ecx,ecx
  421044:	cmp    rax,0x3
  421048:	sete   cl
  42104b:	mov    rax,QWORD PTR [rsp+0x38]
  421050:	mov    DWORD PTR [rax+0x3c],ecx
  421053:	jne    421113 <__flatcc_fb_parse@@Base+0x5433>
  421059:	mov    rax,QWORD PTR [rsp+0x8]
  42105e:	mov    rdi,QWORD PTR [rax]
  421061:	movsxd rcx,DWORD PTR [rsi]
  421064:	lea    r14,[rcx+rcx*4]
  421068:	lea    rdx,[rdi+r14*8]
  42106c:	mov    QWORD PTR [r9],rdx
  42106f:	mov    rax,QWORD PTR [r10]
  421072:	cmp    rax,rdx
  421075:	jne    4210d6 <__flatcc_fb_parse@@Base+0x53f6>
  421077:	lea    eax,[rcx+rcx*1]
  42107a:	test   ecx,ecx
  42107c:	mov    ecx,0x400
  421081:	cmove  eax,ecx
  421084:	mov    DWORD PTR [rsi],eax
  421086:	cdqe   
  421088:	shl    rax,0x3
  42108c:	mov    rbp,rsi
  42108f:	lea    rsi,[rax+rax*4]
  421093:	call   4061d0 <realloc@plt>
  421098:	mov    rcx,QWORD PTR [rsp+0x8]
  42109d:	mov    QWORD PTR [rcx],rax
  4210a0:	test   rax,rax
  4210a3:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  4210a9:	movsxd rcx,DWORD PTR [rbp+0x0]
  4210ad:	lea    rcx,[rcx+rcx*4]
  4210b1:	lea    rcx,[rax+rcx*8]
  4210b5:	mov    r9,QWORD PTR [rsp+0x10]
  4210ba:	mov    QWORD PTR [r9],rcx
  4210bd:	lea    rax,[rax+r14*8]
  4210c1:	mov    r10,QWORD PTR [rsp+0x28]
  4210c6:	mov    QWORD PTR [r10],rax
  4210c9:	mov    r11,QWORD PTR [rsp+0x20]
  4210ce:	mov    r8,QWORD PTR [rsp+0x18]
  4210d3:	mov    rsi,rbp
  4210d6:	mov    QWORD PTR [rax+0x20],0xfffffffffffffc3c
  4210de:	mov    QWORD PTR [rax],rbx
  4210e1:	mov    QWORD PTR [rax+0x8],0x0
  4210e9:	mov    rcx,QWORD PTR [r8]
  4210ec:	mov    QWORD PTR [rax+0x10],rcx
  4210f0:	mov    rcx,rbx
  4210f3:	sub    rcx,QWORD PTR [r11]
  4210f6:	inc    rcx
  4210f9:	mov    QWORD PTR [rax+0x18],rcx
  4210fd:	add    rax,0x28
  421101:	mov    QWORD PTR [r10],rax
  421104:	jmp    421113 <__flatcc_fb_parse@@Base+0x5433>
  421106:	cmove  rax,rcx
  42110a:	mov    rbx,rax
  42110d:	inc    QWORD PTR [r8]
  421110:	mov    QWORD PTR [r11],rbx
  421113:	mov    r12,r13
  421116:	cmp    rbx,r13
  421119:	je     421154 <__flatcc_fb_parse@@Base+0x5474>
  42111b:	mov    r12,rbx
  42111e:	jmp    421128 <__flatcc_fb_parse@@Base+0x5448>
  421120:	inc    r12
  421123:	cmp    r13,r12
  421126:	je     421151 <__flatcc_fb_parse@@Base+0x5471>
  421128:	movzx  eax,BYTE PTR [r12]
  42112d:	cmp    al,0x20
  42112f:	jl     421154 <__flatcc_fb_parse@@Base+0x5474>
  421131:	cmp    al,0x7f
  421133:	je     421154 <__flatcc_fb_parse@@Base+0x5474>
  421135:	cmp    al,0x2f
  421137:	jne    421120 <__flatcc_fb_parse@@Base+0x5440>
  421139:	cmp    BYTE PTR [r12-0x1],0x2a
  42113f:	jne    421120 <__flatcc_fb_parse@@Base+0x5440>
  421141:	dec    r12
  421144:	cmp    rbx,r12
  421147:	jne    421159 <__flatcc_fb_parse@@Base+0x5479>
  421149:	mov    r14,rbx
  42114c:	jmp    421222 <__flatcc_fb_parse@@Base+0x5542>
  421151:	mov    r12,r13
  421154:	cmp    rbx,r12
  421157:	je     421149 <__flatcc_fb_parse@@Base+0x5469>
  421159:	mov    rax,QWORD PTR [rsp+0x38]
  42115e:	cmp    DWORD PTR [rax+0x3c],0x0
  421162:	mov    r14,r12
  421165:	je     421222 <__flatcc_fb_parse@@Base+0x5542>
  42116b:	mov    rax,QWORD PTR [rsp+0x8]
  421170:	mov    rdi,QWORD PTR [rax]
  421173:	movsxd rcx,DWORD PTR [rsi]
  421176:	lea    r14,[rcx+rcx*4]
  42117a:	lea    rdx,[rdi+r14*8]
  42117e:	mov    QWORD PTR [r9],rdx
  421181:	mov    rax,QWORD PTR [r10]
  421184:	cmp    rax,rdx
  421187:	jne    4211e8 <__flatcc_fb_parse@@Base+0x5508>
  421189:	lea    eax,[rcx+rcx*1]
  42118c:	test   ecx,ecx
  42118e:	mov    ecx,0x400
  421193:	cmove  eax,ecx
  421196:	mov    DWORD PTR [rsi],eax
  421198:	cdqe   
  42119a:	shl    rax,0x3
  42119e:	mov    rbp,rsi
  4211a1:	lea    rsi,[rax+rax*4]
  4211a5:	call   4061d0 <realloc@plt>
  4211aa:	mov    rcx,QWORD PTR [rsp+0x8]
  4211af:	mov    QWORD PTR [rcx],rax
  4211b2:	test   rax,rax
  4211b5:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  4211bb:	movsxd rcx,DWORD PTR [rbp+0x0]
  4211bf:	lea    rcx,[rcx+rcx*4]
  4211c3:	lea    rcx,[rax+rcx*8]
  4211c7:	mov    r9,QWORD PTR [rsp+0x10]
  4211cc:	mov    QWORD PTR [r9],rcx
  4211cf:	lea    rax,[rax+r14*8]
  4211d3:	mov    r10,QWORD PTR [rsp+0x28]
  4211d8:	mov    QWORD PTR [r10],rax
  4211db:	mov    r11,QWORD PTR [rsp+0x20]
  4211e0:	mov    r8,QWORD PTR [rsp+0x18]
  4211e5:	mov    rsi,rbp
  4211e8:	mov    QWORD PTR [rax+0x20],0xfffffffffffffc3c
  4211f0:	mov    QWORD PTR [rax],rbx
  4211f3:	mov    rcx,r12
  4211f6:	sub    rcx,rbx
  4211f9:	mov    QWORD PTR [rax+0x8],rcx
  4211fd:	mov    rcx,QWORD PTR [r8]
  421200:	mov    QWORD PTR [rax+0x10],rcx
  421204:	sub    rbx,QWORD PTR [r11]
  421207:	inc    rbx
  42120a:	mov    QWORD PTR [rax+0x18],rbx
  42120e:	add    rax,0x28
  421212:	mov    QWORD PTR [r10],rax
  421215:	mov    r14,r12
  421218:	cmp    r12,r13
  42121b:	jne    42122b <__flatcc_fb_parse@@Base+0x554b>
  42121d:	jmp    421b89 <__flatcc_fb_parse@@Base+0x5ea9>
  421222:	cmp    r12,r13
  421225:	je     421b89 <__flatcc_fb_parse@@Base+0x5ea9>
  42122b:	mov    al,BYTE PTR [r12]
  42122f:	cmp    al,0xa
  421231:	je     421301 <__flatcc_fb_parse@@Base+0x5621>
  421237:	cmp    al,0xd
  421239:	je     421322 <__flatcc_fb_parse@@Base+0x5642>
  42123f:	test   al,al
  421241:	je     421b8c <__flatcc_fb_parse@@Base+0x5eac>
  421247:	cmp    al,0x20
  421249:	jl     421253 <__flatcc_fb_parse@@Base+0x5573>
  42124b:	cmp    al,0x7f
  42124d:	jne    4216e4 <__flatcc_fb_parse@@Base+0x5a04>
  421253:	inc    r12
  421256:	mov    al,BYTE PTR [r14]
  421259:	cmp    al,0x20
  42125b:	je     421265 <__flatcc_fb_parse@@Base+0x5585>
  42125d:	cmp    al,0x9
  42125f:	jne    421343 <__flatcc_fb_parse@@Base+0x5663>
  421265:	mov    rax,QWORD PTR [rsp+0x38]
  42126a:	cmp    DWORD PTR [rax+0x3c],0x0
  42126e:	mov    rbx,r12
  421271:	je     421113 <__flatcc_fb_parse@@Base+0x5433>
  421277:	mov    rax,QWORD PTR [rsp+0x8]
  42127c:	mov    rdi,QWORD PTR [rax]
  42127f:	movsxd rcx,DWORD PTR [rsi]
  421282:	lea    rbx,[rcx+rcx*4]
  421286:	lea    rdx,[rdi+rbx*8]
  42128a:	mov    QWORD PTR [r9],rdx
  42128d:	mov    rax,QWORD PTR [r10]
  421290:	cmp    rax,rdx
  421293:	jne    4212f4 <__flatcc_fb_parse@@Base+0x5614>
  421295:	lea    eax,[rcx+rcx*1]
  421298:	test   ecx,ecx
  42129a:	mov    ecx,0x400
  42129f:	cmove  eax,ecx
  4212a2:	mov    DWORD PTR [rsi],eax
  4212a4:	cdqe   
  4212a6:	shl    rax,0x3
  4212aa:	mov    rbp,rsi
  4212ad:	lea    rsi,[rax+rax*4]
  4212b1:	call   4061d0 <realloc@plt>
  4212b6:	mov    rcx,QWORD PTR [rsp+0x8]
  4212bb:	mov    QWORD PTR [rcx],rax
  4212be:	test   rax,rax
  4212c1:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  4212c7:	movsxd rcx,DWORD PTR [rbp+0x0]
  4212cb:	lea    rcx,[rcx+rcx*4]
  4212cf:	lea    rcx,[rax+rcx*8]
  4212d3:	mov    r9,QWORD PTR [rsp+0x10]
  4212d8:	mov    QWORD PTR [r9],rcx
  4212db:	lea    rax,[rax+rbx*8]
  4212df:	mov    r10,QWORD PTR [rsp+0x28]
  4212e4:	mov    QWORD PTR [r10],rax
  4212e7:	mov    r11,QWORD PTR [rsp+0x20]
  4212ec:	mov    r8,QWORD PTR [rsp+0x18]
  4212f1:	mov    rsi,rbp
  4212f4:	mov    QWORD PTR [rax+0x20],0xfffffffffffffc3c
  4212fc:	jmp    4213c8 <__flatcc_fb_parse@@Base+0x56e8>
  421301:	lea    rax,[r12+0x1]
  421306:	mov    rbx,r13
  421309:	cmp    rax,r13
  42130c:	je     42110d <__flatcc_fb_parse@@Base+0x542d>
  421312:	lea    rcx,[r12+0x2]
  421317:	cmp    BYTE PTR [r12+0x1],0xd
  42131d:	jmp    421106 <__flatcc_fb_parse@@Base+0x5426>
  421322:	lea    rax,[r12+0x1]
  421327:	mov    rbx,r13
  42132a:	cmp    rax,r13
  42132d:	je     42110d <__flatcc_fb_parse@@Base+0x542d>
  421333:	lea    rcx,[r12+0x2]
  421338:	cmp    BYTE PTR [r12+0x1],0xa
  42133e:	jmp    421106 <__flatcc_fb_parse@@Base+0x5426>
  421343:	mov    rax,QWORD PTR [rsp+0x8]
  421348:	mov    rdi,QWORD PTR [rax]
  42134b:	movsxd rcx,DWORD PTR [rsi]
  42134e:	lea    rbx,[rcx+rcx*4]
  421352:	lea    rdx,[rdi+rbx*8]
  421356:	mov    QWORD PTR [r9],rdx
  421359:	mov    rax,QWORD PTR [r10]
  42135c:	cmp    rax,rdx
  42135f:	jne    4213c0 <__flatcc_fb_parse@@Base+0x56e0>
  421361:	lea    eax,[rcx+rcx*1]
  421364:	test   ecx,ecx
  421366:	mov    ecx,0x400
  42136b:	cmove  eax,ecx
  42136e:	mov    DWORD PTR [rsi],eax
  421370:	cdqe   
  421372:	shl    rax,0x3
  421376:	mov    rbp,rsi
  421379:	lea    rsi,[rax+rax*4]
  42137d:	call   4061d0 <realloc@plt>
  421382:	mov    rcx,QWORD PTR [rsp+0x8]
  421387:	mov    QWORD PTR [rcx],rax
  42138a:	test   rax,rax
  42138d:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  421393:	movsxd rcx,DWORD PTR [rbp+0x0]
  421397:	lea    rcx,[rcx+rcx*4]
  42139b:	lea    rcx,[rax+rcx*8]
  42139f:	mov    r9,QWORD PTR [rsp+0x10]
  4213a4:	mov    QWORD PTR [r9],rcx
  4213a7:	lea    rax,[rax+rbx*8]
  4213ab:	mov    r10,QWORD PTR [rsp+0x28]
  4213b0:	mov    QWORD PTR [r10],rax
  4213b3:	mov    r11,QWORD PTR [rsp+0x20]
  4213b8:	mov    r8,QWORD PTR [rsp+0x18]
  4213bd:	mov    rsi,rbp
  4213c0:	mov    QWORD PTR [rax+0x20],0x7
  4213c8:	mov    QWORD PTR [rax],r14
  4213cb:	mov    QWORD PTR [rax+0x8],0x1
  4213d3:	mov    rcx,QWORD PTR [r8]
  4213d6:	mov    QWORD PTR [rax+0x10],rcx
  4213da:	sub    r14,QWORD PTR [r11]
  4213dd:	inc    r14
  4213e0:	mov    QWORD PTR [rax+0x18],r14
  4213e4:	add    rax,0x28
  4213e8:	mov    QWORD PTR [r10],rax
  4213eb:	mov    rbx,r12
  4213ee:	jmp    421113 <__flatcc_fb_parse@@Base+0x5433>
  4213f3:	lea    rbx,[r12+0x3]
  4213f8:	cmp    rbx,r13
  4213fb:	je     4215cb <__flatcc_fb_parse@@Base+0x58eb>
  421401:	cmp    BYTE PTR [rbx],0x3d
  421404:	jne    4215cb <__flatcc_fb_parse@@Base+0x58eb>
  42140a:	mov    rax,QWORD PTR [rsp+0x8]
  42140f:	mov    rdi,QWORD PTR [rax]
  421412:	movsxd rcx,DWORD PTR [rsi]
  421415:	lea    rbx,[rcx+rcx*4]
  421419:	lea    rdx,[rdi+rbx*8]
  42141d:	mov    QWORD PTR [r9],rdx
  421420:	mov    rax,QWORD PTR [r10]
  421423:	cmp    rax,rdx
  421426:	jne    421484 <__flatcc_fb_parse@@Base+0x57a4>
  421428:	lea    eax,[rcx+rcx*1]
  42142b:	test   ecx,ecx
  42142d:	mov    ecx,0x400
  421432:	cmove  eax,ecx
  421435:	mov    DWORD PTR [rsi],eax
  421437:	cdqe   
  421439:	shl    rax,0x3
  42143d:	mov    rbp,rsi
  421440:	lea    rsi,[rax+rax*4]
  421444:	call   4061d0 <realloc@plt>
  421449:	mov    rcx,QWORD PTR [rsp+0x8]
  42144e:	mov    QWORD PTR [rcx],rax
  421451:	test   rax,rax
  421454:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  42145a:	movsxd rcx,DWORD PTR [rbp+0x0]
  42145e:	lea    rcx,[rcx+rcx*4]
  421462:	lea    rcx,[rax+rcx*8]
  421466:	mov    r9,QWORD PTR [rsp+0x10]
  42146b:	mov    QWORD PTR [r9],rcx
  42146e:	lea    rax,[rax+rbx*8]
  421472:	mov    r10,QWORD PTR [rsp+0x28]
  421477:	mov    QWORD PTR [r10],rax
  42147a:	mov    r11,QWORD PTR [rsp+0x20]
  42147f:	mov    r8,QWORD PTR [rsp+0x18]
  421484:	lea    rbx,[r12+0x4]
  421489:	mov    QWORD PTR [rax+0x20],0x3d3e3e3e
  421491:	jmp    4215bb <__flatcc_fb_parse@@Base+0x58db>
  421496:	mov    rax,QWORD PTR [rsp+0x8]
  42149b:	mov    rdi,QWORD PTR [rax]
  42149e:	movsxd rcx,DWORD PTR [rsi]
  4214a1:	lea    r14,[rcx+rcx*4]
  4214a5:	lea    rdx,[rdi+r14*8]
  4214a9:	mov    QWORD PTR [r9],rdx
  4214ac:	mov    rax,QWORD PTR [r10]
  4214af:	cmp    rax,rdx
  4214b2:	jne    421510 <__flatcc_fb_parse@@Base+0x5830>
  4214b4:	lea    eax,[rcx+rcx*1]
  4214b7:	test   ecx,ecx
  4214b9:	mov    ecx,0x400
  4214be:	cmove  eax,ecx
  4214c1:	mov    DWORD PTR [rsi],eax
  4214c3:	cdqe   
  4214c5:	shl    rax,0x3
  4214c9:	mov    rbp,rsi
  4214cc:	lea    rsi,[rax+rax*4]
  4214d0:	call   4061d0 <realloc@plt>
  4214d5:	mov    rcx,QWORD PTR [rsp+0x8]
  4214da:	mov    QWORD PTR [rcx],rax
  4214dd:	test   rax,rax
  4214e0:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  4214e6:	movsxd rcx,DWORD PTR [rbp+0x0]
  4214ea:	lea    rcx,[rcx+rcx*4]
  4214ee:	lea    rcx,[rax+rcx*8]
  4214f2:	mov    r9,QWORD PTR [rsp+0x10]
  4214f7:	mov    QWORD PTR [r9],rcx
  4214fa:	lea    rax,[rax+r14*8]
  4214fe:	mov    r10,QWORD PTR [rsp+0x28]
  421503:	mov    QWORD PTR [r10],rax
  421506:	mov    r11,QWORD PTR [rsp+0x20]
  42150b:	mov    r8,QWORD PTR [rsp+0x18]
  421510:	mov    QWORD PTR [rax+0x20],0x2e2e
  421518:	jmp    41e714 <__flatcc_fb_parse@@Base+0x2a34>
  42151d:	lea    rbx,[r12+0x3]
  421522:	cmp    rbx,r13
  421525:	je     421652 <__flatcc_fb_parse@@Base+0x5972>
  42152b:	cmp    BYTE PTR [rbx],0x3d
  42152e:	jne    421652 <__flatcc_fb_parse@@Base+0x5972>
  421534:	mov    rax,QWORD PTR [rsp+0x8]
  421539:	mov    rdi,QWORD PTR [rax]
  42153c:	movsxd rcx,DWORD PTR [rsi]
  42153f:	lea    rbx,[rcx+rcx*4]
  421543:	lea    rdx,[rdi+rbx*8]
  421547:	mov    QWORD PTR [r9],rdx
  42154a:	mov    rax,QWORD PTR [r10]
  42154d:	cmp    rax,rdx
  421550:	jne    4215ae <__flatcc_fb_parse@@Base+0x58ce>
  421552:	lea    eax,[rcx+rcx*1]
  421555:	test   ecx,ecx
  421557:	mov    ecx,0x400
  42155c:	cmove  eax,ecx
  42155f:	mov    DWORD PTR [rsi],eax
  421561:	cdqe   
  421563:	shl    rax,0x3
  421567:	mov    rbp,rsi
  42156a:	lea    rsi,[rax+rax*4]
  42156e:	call   4061d0 <realloc@plt>
  421573:	mov    rcx,QWORD PTR [rsp+0x8]
  421578:	mov    QWORD PTR [rcx],rax
  42157b:	test   rax,rax
  42157e:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  421584:	movsxd rcx,DWORD PTR [rbp+0x0]
  421588:	lea    rcx,[rcx+rcx*4]
  42158c:	lea    rcx,[rax+rcx*8]
  421590:	mov    r9,QWORD PTR [rsp+0x10]
  421595:	mov    QWORD PTR [r9],rcx
  421598:	lea    rax,[rax+rbx*8]
  42159c:	mov    r10,QWORD PTR [rsp+0x28]
  4215a1:	mov    QWORD PTR [r10],rax
  4215a4:	mov    r11,QWORD PTR [rsp+0x20]
  4215a9:	mov    r8,QWORD PTR [rsp+0x18]
  4215ae:	lea    rbx,[r12+0x4]
  4215b3:	mov    QWORD PTR [rax+0x20],0x3d3c3c3c
  4215bb:	mov    QWORD PTR [rax],r12
  4215be:	mov    QWORD PTR [rax+0x8],0x4
  4215c6:	jmp    420ec3 <__flatcc_fb_parse@@Base+0x51e3>
  4215cb:	mov    rax,QWORD PTR [rsp+0x8]
  4215d0:	mov    rdi,QWORD PTR [rax]
  4215d3:	movsxd rcx,DWORD PTR [rsi]
  4215d6:	lea    r14,[rcx+rcx*4]
  4215da:	lea    rdx,[rdi+r14*8]
  4215de:	mov    QWORD PTR [r9],rdx
  4215e1:	mov    rax,QWORD PTR [r10]
  4215e4:	cmp    rax,rdx
  4215e7:	jne    421645 <__flatcc_fb_parse@@Base+0x5965>
  4215e9:	lea    eax,[rcx+rcx*1]
  4215ec:	test   ecx,ecx
  4215ee:	mov    ecx,0x400
  4215f3:	cmove  eax,ecx
  4215f6:	mov    DWORD PTR [rsi],eax
  4215f8:	cdqe   
  4215fa:	shl    rax,0x3
  4215fe:	mov    rbp,rsi
  421601:	lea    rsi,[rax+rax*4]
  421605:	call   4061d0 <realloc@plt>
  42160a:	mov    rcx,QWORD PTR [rsp+0x8]
  42160f:	mov    QWORD PTR [rcx],rax
  421612:	test   rax,rax
  421615:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  42161b:	movsxd rcx,DWORD PTR [rbp+0x0]
  42161f:	lea    rcx,[rcx+rcx*4]
  421623:	lea    rcx,[rax+rcx*8]
  421627:	mov    r9,QWORD PTR [rsp+0x10]
  42162c:	mov    QWORD PTR [r9],rcx
  42162f:	lea    rax,[rax+r14*8]
  421633:	mov    r10,QWORD PTR [rsp+0x28]
  421638:	mov    QWORD PTR [r10],rax
  42163b:	mov    r11,QWORD PTR [rsp+0x20]
  421640:	mov    r8,QWORD PTR [rsp+0x18]
  421645:	mov    QWORD PTR [rax+0x20],0x3e3e3e
  42164d:	jmp    4216d4 <__flatcc_fb_parse@@Base+0x59f4>
  421652:	mov    rax,QWORD PTR [rsp+0x8]
  421657:	mov    rdi,QWORD PTR [rax]
  42165a:	movsxd rcx,DWORD PTR [rsi]
  42165d:	lea    r14,[rcx+rcx*4]
  421661:	lea    rdx,[rdi+r14*8]
  421665:	mov    QWORD PTR [r9],rdx
  421668:	mov    rax,QWORD PTR [r10]
  42166b:	cmp    rax,rdx
  42166e:	jne    4216cc <__flatcc_fb_parse@@Base+0x59ec>
  421670:	lea    eax,[rcx+rcx*1]
  421673:	test   ecx,ecx
  421675:	mov    ecx,0x400
  42167a:	cmove  eax,ecx
  42167d:	mov    DWORD PTR [rsi],eax
  42167f:	cdqe   
  421681:	shl    rax,0x3
  421685:	mov    rbp,rsi
  421688:	lea    rsi,[rax+rax*4]
  42168c:	call   4061d0 <realloc@plt>
  421691:	mov    rcx,QWORD PTR [rsp+0x8]
  421696:	mov    QWORD PTR [rcx],rax
  421699:	test   rax,rax
  42169c:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  4216a2:	movsxd rcx,DWORD PTR [rbp+0x0]
  4216a6:	lea    rcx,[rcx+rcx*4]
  4216aa:	lea    rcx,[rax+rcx*8]
  4216ae:	mov    r9,QWORD PTR [rsp+0x10]
  4216b3:	mov    QWORD PTR [r9],rcx
  4216b6:	lea    rax,[rax+r14*8]
  4216ba:	mov    r10,QWORD PTR [rsp+0x28]
  4216bf:	mov    QWORD PTR [r10],rax
  4216c2:	mov    r11,QWORD PTR [rsp+0x20]
  4216c7:	mov    r8,QWORD PTR [rsp+0x18]
  4216cc:	mov    QWORD PTR [rax+0x20],0x3c3c3c
  4216d4:	mov    QWORD PTR [rax],r12
  4216d7:	mov    QWORD PTR [rax+0x8],0x3
  4216df:	jmp    420ec3 <__flatcc_fb_parse@@Base+0x51e3>
  4216e4:	add    r12,0x2
  4216e8:	jmp    421983 <__flatcc_fb_parse@@Base+0x5ca3>
  4216ed:	nop    DWORD PTR [rax]
  4216f0:	mov    r12,rbp
  4216f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4216fd:	nop    DWORD PTR [rax]
  421700:	mov    rbx,r12
  421703:	cmp    r13,r12
  421706:	je     42172a <__flatcc_fb_parse@@Base+0x5a4a>
  421708:	movzx  eax,BYTE PTR [rbx]
  42170b:	lea    r12,[rbx+0x1]
  42170f:	cmp    al,0x20
  421711:	jl     421717 <__flatcc_fb_parse@@Base+0x5a37>
  421713:	cmp    al,0x7f
  421715:	jne    421700 <__flatcc_fb_parse@@Base+0x5a20>
  421717:	dec    r12
  42171a:	xor    r15d,r15d
  42171d:	cmp    rbp,r12
  421720:	jne    421735 <__flatcc_fb_parse@@Base+0x5a55>
  421722:	mov    r14,rbp
  421725:	jmp    421802 <__flatcc_fb_parse@@Base+0x5b22>
  42172a:	mov    r15b,0x1
  42172d:	mov    r12,r13
  421730:	cmp    rbp,r12
  421733:	je     421722 <__flatcc_fb_parse@@Base+0x5a42>
  421735:	mov    rax,QWORD PTR [rsp+0x38]
  42173a:	cmp    DWORD PTR [rax+0x3c],0x0
  42173e:	mov    r14,r12
  421741:	je     421802 <__flatcc_fb_parse@@Base+0x5b22>
  421747:	mov    rax,QWORD PTR [rsp+0x8]
  42174c:	mov    rdi,QWORD PTR [rax]
  42174f:	movsxd rcx,DWORD PTR [rsi]
  421752:	lea    rsi,[rcx+rcx*4]
  421756:	lea    rdx,[rdi+rsi*8]
  42175a:	mov    QWORD PTR [r9],rdx
  42175d:	mov    rax,QWORD PTR [r10]
  421760:	cmp    rax,rdx
  421763:	jne    4217cd <__flatcc_fb_parse@@Base+0x5aed>
  421765:	mov    QWORD PTR [rsp+0x58],rsi
  42176a:	lea    eax,[rcx+rcx*1]
  42176d:	test   ecx,ecx
  42176f:	mov    ecx,0x400
  421774:	cmove  eax,ecx
  421777:	mov    r14,QWORD PTR [rsp+0x30]
  42177c:	mov    DWORD PTR [r14],eax
  42177f:	cdqe   
  421781:	shl    rax,0x3
  421785:	lea    rsi,[rax+rax*4]
  421789:	call   4061d0 <realloc@plt>
  42178e:	mov    rcx,QWORD PTR [rsp+0x8]
  421793:	mov    QWORD PTR [rcx],rax
  421796:	test   rax,rax
  421799:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  42179f:	movsxd rcx,DWORD PTR [r14]
  4217a2:	lea    rcx,[rcx+rcx*4]
  4217a6:	lea    rcx,[rax+rcx*8]
  4217aa:	mov    r9,QWORD PTR [rsp+0x10]
  4217af:	mov    QWORD PTR [r9],rcx
  4217b2:	mov    rcx,QWORD PTR [rsp+0x58]
  4217b7:	lea    rax,[rax+rcx*8]
  4217bb:	mov    r10,QWORD PTR [rsp+0x28]
  4217c0:	mov    QWORD PTR [r10],rax
  4217c3:	mov    r11,QWORD PTR [rsp+0x20]
  4217c8:	mov    r8,QWORD PTR [rsp+0x18]
  4217cd:	mov    QWORD PTR [rax+0x20],0xfffffffffffffc3c
  4217d5:	mov    QWORD PTR [rax],rbp
  4217d8:	mov    rcx,r12
  4217db:	sub    rcx,rbp
  4217de:	mov    QWORD PTR [rax+0x8],rcx
  4217e2:	mov    rcx,QWORD PTR [r8]
  4217e5:	mov    QWORD PTR [rax+0x10],rcx
  4217e9:	sub    rbp,QWORD PTR [r11]
  4217ec:	inc    rbp
  4217ef:	mov    QWORD PTR [rax+0x18],rbp
  4217f3:	add    rax,0x28
  4217f7:	mov    QWORD PTR [r10],rax
  4217fa:	mov    r14,r12
  4217fd:	mov    rsi,QWORD PTR [rsp+0x30]
  421802:	test   r15b,r15b
  421805:	mov    r15,QWORD PTR [rsp+0x40]
  42180a:	jne    421b8c <__flatcc_fb_parse@@Base+0x5eac>
  421810:	mov    al,BYTE PTR [r12]
  421814:	cmp    al,0xd
  421816:	je     421983 <__flatcc_fb_parse@@Base+0x5ca3>
  42181c:	cmp    al,0xa
  42181e:	je     421983 <__flatcc_fb_parse@@Base+0x5ca3>
  421824:	test   al,al
  421826:	je     421b8c <__flatcc_fb_parse@@Base+0x5eac>
  42182c:	mov    rbp,rbx
  42182f:	inc    rbp
  421832:	mov    al,BYTE PTR [r14]
  421835:	cmp    al,0x20
  421837:	je     421841 <__flatcc_fb_parse@@Base+0x5b61>
  421839:	cmp    al,0x9
  42183b:	jne    4218db <__flatcc_fb_parse@@Base+0x5bfb>
  421841:	mov    rax,QWORD PTR [rsp+0x38]
  421846:	cmp    DWORD PTR [rax+0x3c],0x0
  42184a:	je     4216f0 <__flatcc_fb_parse@@Base+0x5a10>
  421850:	mov    r15,QWORD PTR [rsp+0x8]
  421855:	mov    rdi,QWORD PTR [r15]
  421858:	movsxd rcx,DWORD PTR [rsi]
  42185b:	lea    r12,[rcx+rcx*4]
  42185f:	lea    rdx,[rdi+r12*8]
  421863:	mov    QWORD PTR [r9],rdx
  421866:	mov    rax,QWORD PTR [r10]
  421869:	mov    rbx,0xfffffffffffffc3c
  421870:	cmp    rax,rdx
  421873:	jne    421957 <__flatcc_fb_parse@@Base+0x5c77>
  421879:	lea    eax,[rcx+rcx*1]
  42187c:	test   ecx,ecx
  42187e:	mov    ecx,0x400
  421883:	cmove  eax,ecx
  421886:	mov    DWORD PTR [rsi],eax
  421888:	cdqe   
  42188a:	shl    rax,0x3
  42188e:	mov    rbx,rsi
  421891:	lea    rsi,[rax+rax*4]
  421895:	call   4061d0 <realloc@plt>
  42189a:	mov    QWORD PTR [r15],rax
  42189d:	test   rax,rax
  4218a0:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  4218a6:	movsxd rcx,DWORD PTR [rbx]
  4218a9:	lea    rcx,[rcx+rcx*4]
  4218ad:	lea    rcx,[rax+rcx*8]
  4218b1:	mov    r9,QWORD PTR [rsp+0x10]
  4218b6:	mov    QWORD PTR [r9],rcx
  4218b9:	lea    rax,[rax+r12*8]
  4218bd:	mov    r10,QWORD PTR [rsp+0x28]
  4218c2:	mov    QWORD PTR [r10],rax
  4218c5:	mov    r11,QWORD PTR [rsp+0x20]
  4218ca:	mov    r8,QWORD PTR [rsp+0x18]
  4218cf:	mov    rsi,rbx
  4218d2:	mov    rbx,0xfffffffffffffc3c
  4218d9:	jmp    421957 <__flatcc_fb_parse@@Base+0x5c77>
  4218db:	mov    rbx,QWORD PTR [rsp+0x8]
  4218e0:	mov    rdi,QWORD PTR [rbx]
  4218e3:	movsxd rcx,DWORD PTR [rsi]
  4218e6:	lea    r12,[rcx+rcx*4]
  4218ea:	lea    rdx,[rdi+r12*8]
  4218ee:	mov    QWORD PTR [r9],rdx
  4218f1:	mov    rax,QWORD PTR [r10]
  4218f4:	cmp    rax,rdx
  4218f7:	jne    421952 <__flatcc_fb_parse@@Base+0x5c72>
  4218f9:	lea    eax,[rcx+rcx*1]
  4218fc:	test   ecx,ecx
  4218fe:	mov    ecx,0x400
  421903:	cmove  eax,ecx
  421906:	mov    DWORD PTR [rsi],eax
  421908:	cdqe   
  42190a:	shl    rax,0x3
  42190e:	mov    r15,rsi
  421911:	lea    rsi,[rax+rax*4]
  421915:	call   4061d0 <realloc@plt>
  42191a:	mov    QWORD PTR [rbx],rax
  42191d:	test   rax,rax
  421920:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  421926:	movsxd rcx,DWORD PTR [r15]
  421929:	lea    rcx,[rcx+rcx*4]
  42192d:	lea    rcx,[rax+rcx*8]
  421931:	mov    r9,QWORD PTR [rsp+0x10]
  421936:	mov    QWORD PTR [r9],rcx
  421939:	lea    rax,[rax+r12*8]
  42193d:	mov    r10,QWORD PTR [rsp+0x28]
  421942:	mov    QWORD PTR [r10],rax
  421945:	mov    r11,QWORD PTR [rsp+0x20]
  42194a:	mov    r8,QWORD PTR [rsp+0x18]
  42194f:	mov    rsi,r15
  421952:	mov    ebx,0x7
  421957:	mov    QWORD PTR [rax+0x20],rbx
  42195b:	mov    QWORD PTR [rax],r14
  42195e:	mov    QWORD PTR [rax+0x8],0x1
  421966:	mov    rcx,QWORD PTR [r8]
  421969:	mov    QWORD PTR [rax+0x10],rcx
  42196d:	sub    r14,QWORD PTR [r11]
  421970:	inc    r14
  421973:	mov    QWORD PTR [rax+0x18],r14
  421977:	add    rax,0x28
  42197b:	mov    QWORD PTR [r10],rax
  42197e:	jmp    4216f0 <__flatcc_fb_parse@@Base+0x5a10>
  421983:	mov    rax,QWORD PTR [rsp+0x38]
  421988:	mov    DWORD PTR [rax+0x3c],0x0
  42198f:	jmp    420cf5 <__flatcc_fb_parse@@Base+0x5015>
  421994:	mov    r14,r12
  421997:	cmp    r12,r13
  42199a:	je     4219a7 <__flatcc_fb_parse@@Base+0x5cc7>
  42199c:	cmp    BYTE PTR [r12],0x0
  4219a1:	je     421ada <__flatcc_fb_parse@@Base+0x5dfa>
  4219a7:	mov    r13,r12
  4219aa:	mov    rbp,QWORD PTR [rsp+0x38]
  4219af:	mov    rdi,QWORD PTR [rbp+0x28]
  4219b3:	mov    rax,QWORD PTR [rbp+0x48]
  4219b7:	movsxd rcx,DWORD PTR [rbp+0x38]
  4219bb:	lea    rbx,[rcx+rcx*4]
  4219bf:	lea    rdx,[rdi+rbx*8]
  4219c3:	mov    QWORD PTR [rbp+0x30],rdx
  4219c7:	cmp    rax,rdx
  4219ca:	jne    421a11 <__flatcc_fb_parse@@Base+0x5d31>
  4219cc:	lea    eax,[rcx+rcx*1]
  4219cf:	test   ecx,ecx
  4219d1:	mov    ecx,0x400
  4219d6:	cmovne ecx,eax
  4219d9:	mov    DWORD PTR [rbp+0x38],ecx
  4219dc:	movsxd rax,ecx
  4219df:	shl    rax,0x3
  4219e3:	lea    rsi,[rax+rax*4]
  4219e7:	call   4061d0 <realloc@plt>
  4219ec:	mov    QWORD PTR [rbp+0x28],rax
  4219f0:	test   rax,rax
  4219f3:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  4219f9:	movsxd rcx,DWORD PTR [rbp+0x38]
  4219fd:	lea    rcx,[rcx+rcx*4]
  421a01:	lea    rcx,[rax+rcx*8]
  421a05:	mov    QWORD PTR [rbp+0x30],rcx
  421a09:	lea    rax,[rax+rbx*8]
  421a0d:	mov    QWORD PTR [rbp+0x48],rax
  421a11:	lea    r10,[rbp+0x48]
  421a15:	mov    QWORD PTR [rax+0x20],0x0
  421a1d:	mov    QWORD PTR [rax],r13
  421a20:	mov    QWORD PTR [rax+0x8],0x0
  421a28:	mov    rcx,QWORD PTR [rbp+0x78]
  421a2c:	mov    QWORD PTR [rax+0x10],rcx
  421a30:	add    rbp,0x70
  421a34:	mov    r11,rbp
  421a37:	mov    r12,r13
  421a3a:	jmp    421b69 <__flatcc_fb_parse@@Base+0x5e89>
  421a3f:	mov    rbp,QWORD PTR [rsp+0x8]
  421a44:	mov    rdi,QWORD PTR [rbp+0x0]
  421a48:	mov    rsi,QWORD PTR [rsp+0x30]
  421a4d:	movsxd rcx,DWORD PTR [rsi]
  421a50:	lea    rbx,[rcx+rcx*4]
  421a54:	lea    rdx,[rdi+rbx*8]
  421a58:	mov    QWORD PTR [r9],rdx
  421a5b:	mov    rax,QWORD PTR [r10]
  421a5e:	cmp    rax,rdx
  421a61:	jne    421abb <__flatcc_fb_parse@@Base+0x5ddb>
  421a63:	lea    eax,[rcx+rcx*1]
  421a66:	test   ecx,ecx
  421a68:	mov    ecx,0x400
  421a6d:	cmovne ecx,eax
  421a70:	mov    DWORD PTR [rsi],ecx
  421a72:	movsxd rax,ecx
  421a75:	shl    rax,0x3
  421a79:	mov    r14,rsi
  421a7c:	lea    rsi,[rax+rax*4]
  421a80:	call   4061d0 <realloc@plt>
  421a85:	mov    QWORD PTR [rbp+0x0],rax
  421a89:	test   rax,rax
  421a8c:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  421a92:	movsxd rcx,DWORD PTR [r14]
  421a95:	lea    rcx,[rcx+rcx*4]
  421a99:	lea    rcx,[rax+rcx*8]
  421a9d:	mov    rdx,QWORD PTR [rsp+0x10]
  421aa2:	mov    QWORD PTR [rdx],rcx
  421aa5:	lea    rax,[rax+rbx*8]
  421aa9:	mov    r10,QWORD PTR [rsp+0x28]
  421aae:	mov    QWORD PTR [r10],rax
  421ab1:	mov    r11,QWORD PTR [rsp+0x20]
  421ab6:	mov    r8,QWORD PTR [rsp+0x18]
  421abb:	mov    QWORD PTR [rax+0x20],0x0
  421ac3:	mov    QWORD PTR [rax],r12
  421ac6:	mov    QWORD PTR [rax+0x8],0x0
  421ace:	mov    rcx,QWORD PTR [r8]
  421ad1:	mov    QWORD PTR [rax+0x10],rcx
  421ad5:	jmp    421b69 <__flatcc_fb_parse@@Base+0x5e89>
  421ada:	mov    rbp,QWORD PTR [rsp+0x38]
  421adf:	mov    rdi,QWORD PTR [rbp+0x28]
  421ae3:	mov    rax,QWORD PTR [rbp+0x48]
  421ae7:	movsxd rcx,DWORD PTR [rbp+0x38]
  421aeb:	lea    rbx,[rcx+rcx*4]
  421aef:	lea    rdx,[rdi+rbx*8]
  421af3:	mov    QWORD PTR [rbp+0x30],rdx
  421af7:	cmp    rax,rdx
  421afa:	jne    421b41 <__flatcc_fb_parse@@Base+0x5e61>
  421afc:	lea    eax,[rcx+rcx*1]
  421aff:	test   ecx,ecx
  421b01:	mov    ecx,0x400
  421b06:	cmovne ecx,eax
  421b09:	mov    DWORD PTR [rbp+0x38],ecx
  421b0c:	movsxd rax,ecx
  421b0f:	shl    rax,0x3
  421b13:	lea    rsi,[rax+rax*4]
  421b17:	call   4061d0 <realloc@plt>
  421b1c:	mov    QWORD PTR [rbp+0x28],rax
  421b20:	test   rax,rax
  421b23:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  421b29:	movsxd rcx,DWORD PTR [rbp+0x38]
  421b2d:	lea    rcx,[rcx+rcx*4]
  421b31:	lea    rcx,[rax+rcx*8]
  421b35:	mov    QWORD PTR [rbp+0x30],rcx
  421b39:	lea    rax,[rax+rbx*8]
  421b3d:	mov    QWORD PTR [rbp+0x48],rax
  421b41:	lea    r10,[rbp+0x48]
  421b45:	mov    QWORD PTR [rax+0x20],0x0
  421b4d:	mov    QWORD PTR [rax],r14
  421b50:	sub    r12,r14
  421b53:	mov    QWORD PTR [rax+0x8],r12
  421b57:	mov    rcx,QWORD PTR [rbp+0x78]
  421b5b:	mov    QWORD PTR [rax+0x10],rcx
  421b5f:	add    rbp,0x70
  421b63:	mov    r11,rbp
  421b66:	mov    r12,r14
  421b69:	sub    r12,QWORD PTR [r11]
  421b6c:	inc    r12
  421b6f:	mov    QWORD PTR [rax+0x18],r12
  421b73:	add    rax,0x28
  421b77:	mov    QWORD PTR [r10],rax
  421b7a:	add    rsp,0x68
  421b7e:	pop    rbx
  421b7f:	pop    r12
  421b81:	pop    r13
  421b83:	pop    r14
  421b85:	pop    r15
  421b87:	pop    rbp
  421b88:	ret    
  421b89:	mov    r12,r13
  421b8c:	mov    rbp,QWORD PTR [rsp+0x8]
  421b91:	mov    rdi,QWORD PTR [rbp+0x0]
  421b95:	movsxd rcx,DWORD PTR [rsi]
  421b98:	lea    rbx,[rcx+rcx*4]
  421b9c:	lea    rdx,[rdi+rbx*8]
  421ba0:	mov    QWORD PTR [r9],rdx
  421ba3:	mov    rax,QWORD PTR [r10]
  421ba6:	cmp    rax,rdx
  421ba9:	jne    421bff <__flatcc_fb_parse@@Base+0x5f1f>
  421bab:	lea    eax,[rcx+rcx*1]
  421bae:	test   ecx,ecx
  421bb0:	mov    ecx,0x400
  421bb5:	cmovne ecx,eax
  421bb8:	mov    DWORD PTR [rsi],ecx
  421bba:	movsxd rax,ecx
  421bbd:	shl    rax,0x3
  421bc1:	mov    r15,rsi
  421bc4:	lea    rsi,[rax+rax*4]
  421bc8:	call   4061d0 <realloc@plt>
  421bcd:	mov    QWORD PTR [rbp+0x0],rax
  421bd1:	test   rax,rax
  421bd4:	je     421c3b <__flatcc_fb_parse@@Base+0x5f5b>
  421bd6:	movsxd rcx,DWORD PTR [r15]
  421bd9:	lea    rcx,[rcx+rcx*4]
  421bdd:	lea    rcx,[rax+rcx*8]
  421be1:	mov    rdx,QWORD PTR [rsp+0x10]
  421be6:	mov    QWORD PTR [rdx],rcx
  421be9:	lea    rax,[rax+rbx*8]
  421bed:	mov    r10,QWORD PTR [rsp+0x28]
  421bf2:	mov    QWORD PTR [r10],rax
  421bf5:	mov    r11,QWORD PTR [rsp+0x20]
  421bfa:	mov    r8,QWORD PTR [rsp+0x18]
  421bff:	mov    QWORD PTR [rax+0x20],0x1b
  421c07:	mov    QWORD PTR [rax],r12
  421c0a:	mov    QWORD PTR [rax+0x8],0x0
  421c12:	mov    rcx,QWORD PTR [r8]
  421c15:	mov    QWORD PTR [rax+0x10],rcx
  421c19:	mov    rcx,r12
  421c1c:	sub    rcx,QWORD PTR [r11]
  421c1f:	inc    rcx
  421c22:	mov    QWORD PTR [rax+0x18],rcx
  421c26:	add    rax,0x28
  421c2a:	mov    QWORD PTR [r10],rax
  421c2d:	cmp    r12,r13
  421c30:	jne    42199c <__flatcc_fb_parse@@Base+0x5cbc>
  421c36:	jmp    4219a7 <__flatcc_fb_parse@@Base+0x5cc7>
  421c3b:	mov    rax,QWORD PTR [rip+0x2e3b6]        # 44fff8 <stderr@GLIBC_2.2.5>
  421c42:	mov    rcx,QWORD PTR [rax]
  421c45:	lea    rdi,[rip+0xc3db]        # 42e027 <_IO_stdin_used@@Base+0x1027>
  421c4c:	mov    esi,0x22
  421c51:	mov    edx,0x1
  421c56:	call   406220 <fwrite@plt>
  421c5b:	mov    edi,0x1
  421c60:	call   406210 <exit@plt>
  421c65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421c6f:	nop
  421c70:	push   r15
  421c72:	push   r14
  421c74:	push   rbx
  421c75:	mov    r14,rdi
  421c78:	mov    r15,QWORD PTR [rdi+0x30]
  421c7c:	mov    rax,QWORD PTR [rdi+0x48]
  421c80:	lea    rbx,[rax+0x28]
  421c84:	mov    QWORD PTR [rdi+0x48],rbx
  421c88:	cmp    rbx,r15
  421c8b:	jne    421cc0 <__flatcc_fb_parse@@Base+0x5fe0>
  421c8d:	jmp    421d20 <__flatcc_fb_parse@@Base+0x6040>
  421c92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421c9c:	nop    DWORD PTR [rax+0x0]
  421ca0:	mov    QWORD PTR [r14+0x60],rax
  421ca4:	mov    QWORD PTR [rcx+0x8],rbx
  421ca8:	mov    rax,QWORD PTR [r14+0x40]
  421cac:	mov    QWORD PTR [rcx],rax
  421caf:	mov    QWORD PTR [r14+0x40],rcx
  421cb3:	add    rbx,0x28
  421cb7:	mov    QWORD PTR [r14+0x48],rbx
  421cbb:	cmp    r15,rbx
  421cbe:	je     421d19 <__flatcc_fb_parse@@Base+0x6039>
  421cc0:	cmp    QWORD PTR [rbx+0x20],0xfffffffffffffc3c
  421cc8:	jne    421d10 <__flatcc_fb_parse@@Base+0x6030>
  421cca:	mov    rcx,QWORD PTR [r14+0x60]
  421cce:	lea    rax,[rcx+0x20]
  421cd2:	cmp    rax,QWORD PTR [r14+0x50]
  421cd6:	jbe    421ca0 <__flatcc_fb_parse@@Base+0x5fc0>
  421cd8:	mov    edi,0x10000
  421cdd:	mov    esi,0x1
  421ce2:	call   406140 <calloc@plt>
  421ce7:	test   rax,rax
  421cea:	je     421d43 <__flatcc_fb_parse@@Base+0x6063>
  421cec:	mov    rcx,QWORD PTR [r14+0x58]
  421cf0:	mov    QWORD PTR [rax],rcx
  421cf3:	mov    QWORD PTR [r14+0x58],rax
  421cf7:	lea    rcx,[rax+0x10]
  421cfb:	mov    QWORD PTR [r14+0x60],rcx
  421cff:	lea    rdx,[rax+0x10000]
  421d06:	mov    QWORD PTR [r14+0x50],rdx
  421d0a:	add    rax,0x30
  421d0e:	jmp    421ca0 <__flatcc_fb_parse@@Base+0x5fc0>
  421d10:	mov    rax,rbx
  421d13:	pop    rbx
  421d14:	pop    r14
  421d16:	pop    r15
  421d18:	ret    
  421d19:	add    rbx,0xffffffffffffffd8
  421d1d:	mov    rax,rbx
  421d20:	mov    QWORD PTR [r14+0x48],rax
  421d24:	lea    rdi,[rip+0x1d670]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  421d2b:	lea    rsi,[rip+0x24025]        # 445d57 <fb_schema_table_deleted@@Base+0x60f>
  421d32:	lea    rcx,[rip+0x2416f]        # 445ea8 <fb_schema_table_deleted@@Base+0x760>
  421d39:	mov    edx,0x155
  421d3e:	call   4060f0 <__assert_fail@plt>
  421d43:	mov    rax,QWORD PTR [rip+0x2e2ae]        # 44fff8 <stderr@GLIBC_2.2.5>
  421d4a:	mov    rcx,QWORD PTR [rax]
  421d4d:	lea    rdi,[rip+0xc2d3]        # 42e027 <_IO_stdin_used@@Base+0x1027>
  421d54:	mov    esi,0x22
  421d59:	mov    edx,0x1
  421d5e:	call   406220 <fwrite@plt>
  421d63:	mov    edi,0x1
  421d68:	call   406210 <exit@plt>
  421d6d:	nop    DWORD PTR [rax]

0000000000421d70 <__flatcc_fb_clear_parser@@Base>:
  421d70:	push   r14
  421d72:	push   rbx
  421d73:	push   rax
  421d74:	mov    r14,rdi
  421d77:	mov    rbx,QWORD PTR [rdi+0x238]
  421d7e:	test   rbx,rbx
  421d81:	jne    421d98 <__flatcc_fb_clear_parser@@Base+0x28>
  421d83:	jmp    421db6 <__flatcc_fb_clear_parser@@Base+0x46>
  421d85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421d8f:	nop
  421d90:	mov    rbx,QWORD PTR [rbx]
  421d93:	test   rbx,rbx
  421d96:	je     421db6 <__flatcc_fb_clear_parser@@Base+0x46>
  421d98:	cmp    WORD PTR [rbx+0x10],0x4
  421d9d:	ja     421d90 <__flatcc_fb_clear_parser@@Base+0x20>
  421d9f:	lea    rdi,[rbx+0x60]
  421da3:	call   419070 <fb_symbol_table_clear@@Base>
  421da8:	lea    rdi,[rbx+0x80]
  421daf:	call   42c460 <fb_value_set_clear@@Base>
  421db4:	jmp    421d90 <__flatcc_fb_clear_parser@@Base+0x20>
  421db6:	lea    rdi,[r14+0x2a8]
  421dbd:	call   41a610 <fb_schema_table_clear@@Base>
  421dc2:	lea    rdi,[r14+0x288]
  421dc9:	call   42bd30 <fb_name_table_clear@@Base>
  421dce:	lea    rdi,[r14+0x320]
  421dd5:	call   418a30 <ptr_set_clear@@Base>
  421dda:	mov    rdi,QWORD PTR [r14+0xd8]
  421de1:	test   rdi,rdi
  421de4:	je     421deb <__flatcc_fb_clear_parser@@Base+0x7b>
  421de6:	call   406040 <free@plt>
  421deb:	mov    rdi,QWORD PTR [r14+0x28]
  421def:	test   rdi,rdi
  421df2:	je     421df9 <__flatcc_fb_clear_parser@@Base+0x89>
  421df4:	call   406040 <free@plt>
  421df9:	mov    rdi,QWORD PTR [r14+0x308]
  421e00:	test   rdi,rdi
  421e03:	je     421e0a <__flatcc_fb_clear_parser@@Base+0x9a>
  421e05:	call   406040 <free@plt>
  421e0a:	mov    rdi,QWORD PTR [r14+0x310]
  421e11:	test   rdi,rdi
  421e14:	je     421e1b <__flatcc_fb_clear_parser@@Base+0xab>
  421e16:	call   406040 <free@plt>
  421e1b:	mov    rdi,QWORD PTR [r14+0x318]
  421e22:	test   rdi,rdi
  421e25:	je     421e2c <__flatcc_fb_clear_parser@@Base+0xbc>
  421e27:	call   406040 <free@plt>
  421e2c:	mov    rdi,QWORD PTR [r14+0x348]
  421e33:	test   rdi,rdi
  421e36:	je     421e3d <__flatcc_fb_clear_parser@@Base+0xcd>
  421e38:	call   406040 <free@plt>
  421e3d:	lea    rdi,[r14+0x268]
  421e44:	lea    rsi,[rip+0x55]        # 421ea0 <__flatcc_fb_clear_parser@@Base+0x130>
  421e4b:	xor    edx,edx
  421e4d:	call   4197d0 <fb_scope_table_destroy@@Base>
  421e52:	mov    rdi,QWORD PTR [r14+0x58]
  421e56:	test   rdi,rdi
  421e59:	je     421e70 <__flatcc_fb_clear_parser@@Base+0x100>
  421e5b:	nop    DWORD PTR [rax+rax*1+0x0]
  421e60:	mov    rbx,QWORD PTR [rdi]
  421e63:	call   406040 <free@plt>
  421e68:	mov    rdi,rbx
  421e6b:	test   rbx,rbx
  421e6e:	jne    421e60 <__flatcc_fb_clear_parser@@Base+0xf0>
  421e70:	mov    rdi,QWORD PTR [r14+0x20]
  421e74:	test   rdi,rdi
  421e77:	je     421e7e <__flatcc_fb_clear_parser@@Base+0x10e>
  421e79:	call   406040 <free@plt>
  421e7e:	mov    edx,0x358
  421e83:	mov    rdi,r14
  421e86:	xor    esi,esi
  421e88:	add    rsp,0x8
  421e8c:	pop    rbx
  421e8d:	pop    r14
  421e8f:	jmp    406100 <memset@plt>
  421e94:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421e9e:	xchg   ax,ax
  421ea0:	lea    rdi,[rsi+0x8]
  421ea4:	jmp    419070 <fb_symbol_table_clear@@Base>
  421ea9:	nop    DWORD PTR [rax+0x0]
  421eb0:	push   rbp
  421eb1:	push   r15
  421eb3:	push   r14
  421eb5:	push   r13
  421eb7:	push   r12
  421eb9:	push   rbx
  421eba:	push   rax
  421ebb:	mov    r14,rsi
  421ebe:	mov    rbx,rdi
  421ec1:	mov    WORD PTR [rsi+0x10],0x2
  421ec7:	mov    QWORD PTR [rsi],0x0
  421ece:	mov    DWORD PTR [rsi+0x8],0x0
  421ed5:	lea    r13,[rip+0x23b90]        # 445a6c <fb_schema_table_deleted@@Base+0x324>
  421edc:	lea    r12,[rip+0x240ca]        # 445fad <fb_schema_table_deleted@@Base+0x865>
  421ee3:	lea    r15,[rip+0x24079]        # 445f63 <fb_schema_table_deleted@@Base+0x81b>
  421eea:	jmp    421f12 <__flatcc_fb_clear_parser@@Base+0x1a2>
  421eec:	nop    DWORD PTR [rax+0x0]
  421ef0:	mov    WORD PTR [r14+0x10],0x1
  421ef7:	mov    rdi,rbx
  421efa:	mov    rdx,r15
  421efd:	xor    ecx,ecx
  421eff:	xor    r8d,r8d
  421f02:	xor    r9d,r9d
  421f05:	call   41b6e0 <__flatcc_error_report@@Base>
  421f0a:	mov    rdi,rbx
  421f0d:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  421f12:	mov    rsi,QWORD PTR [rbx+0x48]
  421f16:	mov    rax,QWORD PTR [rsi+0x20]
  421f1a:	add    rax,0xfffffffffffffffa
  421f1e:	cmp    rax,0x11
  421f22:	ja     422007 <__flatcc_fb_clear_parser@@Base+0x297>
  421f28:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  421f2d:	add    rax,r13
  421f30:	jmp    rax
  421f32:	mov    WORD PTR [r14+0x10],0x1
  421f39:	test   rsi,rsi
  421f3c:	je     421fe4 <__flatcc_fb_clear_parser@@Base+0x274>
  421f42:	mov    rax,rbx
  421f45:	cmp    QWORD PTR [rax+0x28],rsi
  421f49:	jbe    421f5e <__flatcc_fb_clear_parser@@Base+0x1ee>
  421f4b:	nop    DWORD PTR [rax+rax*1+0x0]
  421f50:	mov    rax,QWORD PTR [rax]
  421f53:	test   rax,rax
  421f56:	je     421fa5 <__flatcc_fb_clear_parser@@Base+0x235>
  421f58:	cmp    QWORD PTR [rax+0x28],rsi
  421f5c:	ja     421f50 <__flatcc_fb_clear_parser@@Base+0x1e0>
  421f5e:	cmp    QWORD PTR [rax+0x30],rsi
  421f62:	jbe    421f50 <__flatcc_fb_clear_parser@@Base+0x1e0>
  421f64:	mov    rdx,QWORD PTR [rax+0x318]
  421f6b:	jmp    421fac <__flatcc_fb_clear_parser@@Base+0x23c>
  421f6d:	nop    DWORD PTR [rax]
  421f70:	mov    WORD PTR [r14+0x10],0x1
  421f77:	mov    rdi,rbx
  421f7a:	mov    rdx,r12
  421f7d:	jmp    421efd <__flatcc_fb_clear_parser@@Base+0x18d>
  421f82:	nop    WORD PTR cs:[rax+rax*1+0x0]
  421f8c:	nop    DWORD PTR [rax+0x0]
  421f90:	cmp    QWORD PTR [r14],0x0
  421f94:	jne    421f0a <__flatcc_fb_clear_parser@@Base+0x19a>
  421f9a:	mov    rax,QWORD PTR [rsi]
  421f9d:	mov    QWORD PTR [r14],rax
  421fa0:	jmp    421f0a <__flatcc_fb_clear_parser@@Base+0x19a>
  421fa5:	lea    rdx,[rip+0xc5a3]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  421fac:	mov    rcx,QWORD PTR [rsi+0x10]
  421fb0:	mov    r8,QWORD PTR [rsi+0x18]
  421fb4:	mov    rdi,rbx
  421fb7:	lea    rsi,[rip+0x23c32]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  421fbe:	mov    r9d,0x1
  421fc4:	mov    eax,0x0
  421fc9:	lea    rbp,[rip+0x23fb1]        # 445f81 <fb_schema_table_deleted@@Base+0x839>
  421fd0:	push   rbp
  421fd1:	lea    rbp,[rip+0x23fd3]        # 445fab <fb_schema_table_deleted@@Base+0x863>
  421fd8:	push   rbp
  421fd9:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  421fde:	add    rsp,0x10
  421fe2:	jmp    421ffc <__flatcc_fb_clear_parser@@Base+0x28c>
  421fe4:	mov    rdi,rbx
  421fe7:	lea    rsi,[rip+0x23c54]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  421fee:	lea    rdx,[rip+0x23f8c]        # 445f81 <fb_schema_table_deleted@@Base+0x839>
  421ff5:	xor    eax,eax
  421ff7:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  421ffc:	inc    DWORD PTR [rbx+0xd0]
  422002:	jmp    421f0a <__flatcc_fb_clear_parser@@Base+0x19a>
  422007:	lea    rdx,[rip+0x23fbe]        # 445fcc <fb_schema_table_deleted@@Base+0x884>
  42200e:	mov    rdi,rbx
  422011:	xor    ecx,ecx
  422013:	xor    r8d,r8d
  422016:	xor    r9d,r9d
  422019:	call   41b6e0 <__flatcc_error_report@@Base>
  42201e:	mov    WORD PTR [r14+0x10],0x1
  422025:	mov    rax,QWORD PTR [r14]
  422028:	test   rax,rax
  42202b:	je     422039 <__flatcc_fb_clear_parser@@Base+0x2c9>
  42202d:	mov    rcx,QWORD PTR [rbx+0x48]
  422031:	mov    ecx,DWORD PTR [rcx]
  422033:	sub    ecx,eax
  422035:	mov    DWORD PTR [r14+0x8],ecx
  422039:	mov    rbp,QWORD PTR [rbx+0x48]
  42203d:	cmp    QWORD PTR [rbp+0x20],0x16
  422042:	jne    42205a <__flatcc_fb_clear_parser@@Base+0x2ea>
  422044:	mov    rdi,rbx
  422047:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  42204c:	test   rbp,rbp
  42204f:	jne    4220fc <__flatcc_fb_clear_parser@@Base+0x38c>
  422055:	jmp    4220f5 <__flatcc_fb_clear_parser@@Base+0x385>
  42205a:	test   rbp,rbp
  42205d:	je     4220d7 <__flatcc_fb_clear_parser@@Base+0x367>
  42205f:	mov    rax,QWORD PTR [rbp+0x0]
  422063:	xor    r9d,r9d
  422066:	lea    rdx,[rip+0xc4e2]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  42206d:	mov    r10,rdx
  422070:	test   rax,rax
  422073:	je     42207c <__flatcc_fb_clear_parser@@Base+0x30c>
  422075:	mov    r9d,DWORD PTR [rbp+0x8]
  422079:	mov    r10,rax
  42207c:	mov    rax,rbx
  42207f:	cmp    QWORD PTR [rax+0x28],rbp
  422083:	jbe    42209e <__flatcc_fb_clear_parser@@Base+0x32e>
  422085:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42208f:	nop
  422090:	mov    rax,QWORD PTR [rax]
  422093:	test   rax,rax
  422096:	je     4220ab <__flatcc_fb_clear_parser@@Base+0x33b>
  422098:	cmp    QWORD PTR [rax+0x28],rbp
  42209c:	ja     422090 <__flatcc_fb_clear_parser@@Base+0x320>
  42209e:	cmp    QWORD PTR [rax+0x30],rbp
  4220a2:	jbe    422090 <__flatcc_fb_clear_parser@@Base+0x320>
  4220a4:	mov    rdx,QWORD PTR [rax+0x318]
  4220ab:	mov    rcx,QWORD PTR [rbp+0x10]
  4220af:	mov    r8,QWORD PTR [rbp+0x18]
  4220b3:	lea    rbp,[rip+0x23f3d]        # 445ff7 <fb_schema_table_deleted@@Base+0x8af>
  4220ba:	lea    rsi,[rip+0x23b2f]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  4220c1:	mov    rdi,rbx
  4220c4:	mov    eax,0x0
  4220c9:	push   rbp
  4220ca:	push   r10
  4220cc:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  4220d1:	add    rsp,0x10
  4220d5:	jmp    4220ef <__flatcc_fb_clear_parser@@Base+0x37f>
  4220d7:	lea    rsi,[rip+0x23b64]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  4220de:	lea    rdx,[rip+0x23f12]        # 445ff7 <fb_schema_table_deleted@@Base+0x8af>
  4220e5:	mov    rdi,rbx
  4220e8:	xor    eax,eax
  4220ea:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  4220ef:	inc    DWORD PTR [rbx+0xd0]
  4220f5:	mov    WORD PTR [r14+0x10],0x1
  4220fc:	add    rsp,0x8
  422100:	pop    rbx
  422101:	pop    r12
  422103:	pop    r13
  422105:	pop    r14
  422107:	pop    r15
  422109:	pop    rbp
  42210a:	ret    
  42210b:	nop    DWORD PTR [rax+rax*1+0x0]
  422110:	push   rbp
  422111:	push   r15
  422113:	push   r14
  422115:	push   r13
  422117:	push   r12
  422119:	push   rbx
  42211a:	push   rax
  42211b:	mov    rbx,rdi
  42211e:	mov    rbp,QWORD PTR [rdi+0x48]
  422122:	cmp    QWORD PTR [rbp+0x20],0x9
  422127:	jne    4229a3 <__flatcc_fb_clear_parser@@Base+0xc33>
  42212d:	mov    r15,rdx
  422130:	mov    r14,rsi
  422133:	mov    rdi,rbx
  422136:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  42213b:	test   rbp,rbp
  42213e:	je     422b00 <__flatcc_fb_clear_parser@@Base+0xd90>
  422144:	mov    QWORD PTR [r14+0x8],rbp
  422148:	mov    rdi,rbx
  42214b:	call   422cf0 <__flatcc_fb_clear_parser@@Base+0xf80>
  422150:	mov    QWORD PTR [r14+0x38],rax
  422154:	mov    rbp,QWORD PTR [rbx+0x48]
  422158:	cmp    QWORD PTR [rbp+0x20],0x7b
  42215d:	jne    422a0f <__flatcc_fb_clear_parser@@Base+0xc9f>
  422163:	mov    rdi,rbx
  422166:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  42216b:	test   rbp,rbp
  42216e:	je     422b00 <__flatcc_fb_clear_parser@@Base+0xd90>
  422174:	mov    r12,QWORD PTR [rbx+0x48]
  422178:	cmp    QWORD PTR [r12+0x20],0x7d
  42217e:	mov    rbp,r12
  422181:	je     422a87 <__flatcc_fb_clear_parser@@Base+0xd17>
  422187:	nop    WORD PTR [rax+rax*1+0x0]
  422190:	mov    r13,QWORD PTR [rbx+0x60]
  422194:	lea    rax,[r13+0xb0]
  42219b:	cmp    rax,QWORD PTR [rbx+0x50]
  42219f:	jbe    4221dd <__flatcc_fb_clear_parser@@Base+0x46d>
  4221a1:	mov    edi,0x10000
  4221a6:	mov    esi,0x1
  4221ab:	call   406140 <calloc@plt>
  4221b0:	test   rax,rax
  4221b3:	je     422b3a <__flatcc_fb_clear_parser@@Base+0xdca>
  4221b9:	mov    rcx,QWORD PTR [rbx+0x58]
  4221bd:	mov    QWORD PTR [rax],rcx
  4221c0:	mov    QWORD PTR [rbx+0x58],rax
  4221c4:	lea    r13,[rax+0x10]
  4221c8:	mov    QWORD PTR [rbx+0x60],r13
  4221cc:	lea    rcx,[rax+0x10000]
  4221d3:	mov    QWORD PTR [rbx+0x50],rcx
  4221d7:	add    rax,0xc0
  4221dd:	mov    QWORD PTR [rbx+0x60],rax
  4221e1:	mov    rax,QWORD PTR [r14+0x28]
  4221e5:	mov    QWORD PTR [r13+0x0],rax
  4221e9:	mov    WORD PTR [r13+0x10],0x5
  4221f0:	mov    QWORD PTR [r14+0x28],r13
  4221f4:	mov    rax,QWORD PTR [rbx+0x40]
  4221f8:	test   rax,rax
  4221fb:	je     422220 <__flatcc_fb_clear_parser@@Base+0x4b0>
  4221fd:	xor    edx,edx
  4221ff:	nop
  422200:	mov    rcx,rax
  422203:	mov    rax,QWORD PTR [rax]
  422206:	mov    QWORD PTR [rcx],rdx
  422209:	mov    rdx,rcx
  42220c:	test   rax,rax
  42220f:	jne    422200 <__flatcc_fb_clear_parser@@Base+0x490>
  422211:	jmp    422222 <__flatcc_fb_clear_parser@@Base+0x4b2>
  422213:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42221d:	nop    DWORD PTR [rax]
  422220:	xor    ecx,ecx
  422222:	mov    QWORD PTR [r13+0x68],rcx
  422226:	mov    QWORD PTR [rbx+0x40],0x0
  42222e:	mov    rbp,QWORD PTR [rbx+0x48]
  422232:	mov    rax,QWORD PTR [rbp+0x20]
  422236:	cmp    r15,0xfffffffffffffc39
  42223d:	jne    422350 <__flatcc_fb_clear_parser@@Base+0x5e0>
  422243:	cmp    rax,0x9
  422247:	jne    4223fb <__flatcc_fb_clear_parser@@Base+0x68b>
  42224d:	mov    rdi,rbx
  422250:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  422255:	test   rbp,rbp
  422258:	je     422900 <__flatcc_fb_clear_parser@@Base+0xb90>
  42225e:	mov    QWORD PTR [r13+0x8],rbp
  422262:	mov    rbp,QWORD PTR [rbx+0x48]
  422266:	cmp    QWORD PTR [rbp+0x20],0x28
  42226b:	jne    42251d <__flatcc_fb_clear_parser@@Base+0x7ad>
  422271:	mov    rdi,rbx
  422274:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  422279:	test   rbp,rbp
  42227c:	je     422900 <__flatcc_fb_clear_parser@@Base+0xb90>
  422282:	lea    rsi,[r13+0x30]
  422286:	mov    rdi,rbx
  422289:	call   423460 <__flatcc_fb_clear_parser@@Base+0x16f0>
  42228e:	mov    rbp,QWORD PTR [rbx+0x48]
  422292:	cmp    QWORD PTR [rbp+0x20],0x29
  422297:	jne    42267f <__flatcc_fb_clear_parser@@Base+0x90f>
  42229d:	mov    rdi,rbx
  4222a0:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  4222a5:	test   rbp,rbp
  4222a8:	je     422900 <__flatcc_fb_clear_parser@@Base+0xb90>
  4222ae:	mov    rbp,QWORD PTR [rbx+0x48]
  4222b2:	cmp    QWORD PTR [rbp+0x20],0x3a
  4222b7:	jne    4227c4 <__flatcc_fb_clear_parser@@Base+0xa54>
  4222bd:	mov    rdi,rbx
  4222c0:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  4222c5:	test   rbp,rbp
  4222c8:	je     422900 <__flatcc_fb_clear_parser@@Base+0xb90>
  4222ce:	lea    rsi,[r13+0x18]
  4222d2:	mov    rdi,rbx
  4222d5:	call   423460 <__flatcc_fb_clear_parser@@Base+0x16f0>
  4222da:	mov    rbp,QWORD PTR [rbx+0x48]
  4222de:	cmp    QWORD PTR [rbp+0x20],0x3d
  4222e3:	jne    422811 <__flatcc_fb_clear_parser@@Base+0xaa1>
  4222e9:	mov    rdi,rbx
  4222ec:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  4222f1:	test   rbp,rbp
  4222f4:	je     422811 <__flatcc_fb_clear_parser@@Base+0xaa1>
  4222fa:	mov    rax,QWORD PTR [rbp+0x0]
  4222fe:	xor    r9d,r9d
  422301:	lea    r10,[rip+0xc247]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  422308:	test   rax,rax
  42230b:	je     422314 <__flatcc_fb_clear_parser@@Base+0x5a4>
  42230d:	mov    r9d,DWORD PTR [rbp+0x8]
  422311:	mov    r10,rax
  422314:	mov    rax,rbx
  422317:	cmp    QWORD PTR [rax+0x28],rbp
  42231b:	jbe    42232f <__flatcc_fb_clear_parser@@Base+0x5bf>
  42231d:	mov    rax,QWORD PTR [rax]
  422320:	test   rax,rax
  422323:	je     4228c7 <__flatcc_fb_clear_parser@@Base+0xb57>
  422329:	cmp    QWORD PTR [rax+0x28],rbp
  42232d:	ja     42231d <__flatcc_fb_clear_parser@@Base+0x5ad>
  42232f:	cmp    QWORD PTR [rax+0x30],rbp
  422333:	jbe    42231d <__flatcc_fb_clear_parser@@Base+0x5ad>
  422335:	mov    rdx,QWORD PTR [rax+0x318]
  42233c:	jmp    4228ce <__flatcc_fb_clear_parser@@Base+0xb5e>
  422341:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42234b:	nop    DWORD PTR [rax+rax*1+0x0]
  422350:	cmp    rax,0x9
  422354:	jne    42244d <__flatcc_fb_clear_parser@@Base+0x6dd>
  42235a:	mov    rdi,rbx
  42235d:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  422362:	test   rbp,rbp
  422365:	je     422650 <__flatcc_fb_clear_parser@@Base+0x8e0>
  42236b:	mov    QWORD PTR [r13+0x8],rbp
  42236f:	mov    rbp,QWORD PTR [rbx+0x48]
  422373:	cmp    QWORD PTR [rbp+0x20],0x3a
  422378:	jne    42256d <__flatcc_fb_clear_parser@@Base+0x7fd>
  42237e:	mov    rdi,rbx
  422381:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  422386:	test   rbp,rbp
  422389:	je     422650 <__flatcc_fb_clear_parser@@Base+0x8e0>
  42238f:	lea    rsi,[r13+0x18]
  422393:	mov    rdi,rbx
  422396:	call   423460 <__flatcc_fb_clear_parser@@Base+0x16f0>
  42239b:	mov    rbp,QWORD PTR [rbx+0x48]
  42239f:	cmp    QWORD PTR [rbp+0x20],0x3d
  4223a4:	jne    4223cb <__flatcc_fb_clear_parser@@Base+0x65b>
  4223a6:	mov    rdi,rbx
  4223a9:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  4223ae:	test   rbp,rbp
  4223b1:	je     4223cb <__flatcc_fb_clear_parser@@Base+0x65b>
  4223b3:	lea    rsi,[r13+0x48]
  4223b7:	mov    rdi,rbx
  4223ba:	mov    edx,0x2
  4223bf:	lea    rcx,[rip+0x242b4]        # 44667a <fb_schema_table_deleted@@Base+0xf32>
  4223c6:	call   422f80 <__flatcc_fb_clear_parser@@Base+0x1210>
  4223cb:	mov    rdi,rbx
  4223ce:	call   422cf0 <__flatcc_fb_clear_parser@@Base+0xf80>
  4223d3:	mov    QWORD PTR [r13+0x60],rax
  4223d7:	mov    QWORD PTR [rbx+0x40],0x0
  4223df:	mov    rax,QWORD PTR [rbx+0x48]
  4223e3:	cmp    QWORD PTR [rax+0x20],0x3b
  4223e8:	jne    4226cd <__flatcc_fb_clear_parser@@Base+0x95d>
  4223ee:	mov    rdi,rbx
  4223f1:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  4223f6:	jmp    422940 <__flatcc_fb_clear_parser@@Base+0xbd0>
  4223fb:	test   rbp,rbp
  4223fe:	je     4224f1 <__flatcc_fb_clear_parser@@Base+0x781>
  422404:	mov    rax,QWORD PTR [rbp+0x0]
  422408:	xor    r9d,r9d
  42240b:	lea    r10,[rip+0xc13d]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  422412:	test   rax,rax
  422415:	je     42241e <__flatcc_fb_clear_parser@@Base+0x6ae>
  422417:	mov    r9d,DWORD PTR [rbp+0x8]
  42241b:	mov    r10,rax
  42241e:	mov    rax,rbx
  422421:	cmp    QWORD PTR [rax+0x28],rbp
  422425:	jbe    42243e <__flatcc_fb_clear_parser@@Base+0x6ce>
  422427:	nop    WORD PTR [rax+rax*1+0x0]
  422430:	mov    rax,QWORD PTR [rax]
  422433:	test   rax,rax
  422436:	je     42249d <__flatcc_fb_clear_parser@@Base+0x72d>
  422438:	cmp    QWORD PTR [rax+0x28],rbp
  42243c:	ja     422430 <__flatcc_fb_clear_parser@@Base+0x6c0>
  42243e:	cmp    QWORD PTR [rax+0x30],rbp
  422442:	jbe    422430 <__flatcc_fb_clear_parser@@Base+0x6c0>
  422444:	mov    rdx,QWORD PTR [rax+0x318]
  42244b:	jmp    4224a4 <__flatcc_fb_clear_parser@@Base+0x734>
  42244d:	test   rbp,rbp
  422450:	je     422507 <__flatcc_fb_clear_parser@@Base+0x797>
  422456:	mov    rax,QWORD PTR [rbp+0x0]
  42245a:	xor    r9d,r9d
  42245d:	lea    r10,[rip+0xc0eb]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  422464:	test   rax,rax
  422467:	je     422470 <__flatcc_fb_clear_parser@@Base+0x700>
  422469:	mov    r9d,DWORD PTR [rbp+0x8]
  42246d:	mov    r10,rax
  422470:	mov    rax,rbx
  422473:	cmp    QWORD PTR [rax+0x28],rbp
  422477:	jbe    42248e <__flatcc_fb_clear_parser@@Base+0x71e>
  422479:	nop    DWORD PTR [rax+0x0]
  422480:	mov    rax,QWORD PTR [rax]
  422483:	test   rax,rax
  422486:	je     4224c7 <__flatcc_fb_clear_parser@@Base+0x757>
  422488:	cmp    QWORD PTR [rax+0x28],rbp
  42248c:	ja     422480 <__flatcc_fb_clear_parser@@Base+0x710>
  42248e:	cmp    QWORD PTR [rax+0x30],rbp
  422492:	jbe    422480 <__flatcc_fb_clear_parser@@Base+0x710>
  422494:	mov    rdx,QWORD PTR [rax+0x318]
  42249b:	jmp    4224ce <__flatcc_fb_clear_parser@@Base+0x75e>
  42249d:	lea    rdx,[rip+0xc0ab]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  4224a4:	mov    rcx,QWORD PTR [rbp+0x10]
  4224a8:	mov    r8,QWORD PTR [rbp+0x18]
  4224ac:	mov    rdi,rbx
  4224af:	lea    rsi,[rip+0x2373a]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  4224b6:	mov    eax,0x0
  4224bb:	lea    rbp,[rip+0x23fff]        # 4464c1 <fb_schema_table_deleted@@Base+0xd79>
  4224c2:	jmp    4228ec <__flatcc_fb_clear_parser@@Base+0xb7c>
  4224c7:	lea    rdx,[rip+0xc081]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  4224ce:	mov    rcx,QWORD PTR [rbp+0x10]
  4224d2:	mov    r8,QWORD PTR [rbp+0x18]
  4224d6:	mov    rdi,rbx
  4224d9:	lea    rsi,[rip+0x23710]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  4224e0:	mov    eax,0x0
  4224e5:	lea    rbp,[rip+0x2414b]        # 446637 <fb_schema_table_deleted@@Base+0xeef>
  4224ec:	jmp    42260c <__flatcc_fb_clear_parser@@Base+0x89c>
  4224f1:	mov    rdi,rbx
  4224f4:	lea    rsi,[rip+0x23747]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  4224fb:	lea    rdx,[rip+0x23fbf]        # 4464c1 <fb_schema_table_deleted@@Base+0xd79>
  422502:	jmp    4228be <__flatcc_fb_clear_parser@@Base+0xb4e>
  422507:	mov    rdi,rbx
  42250a:	lea    rsi,[rip+0x23731]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  422511:	lea    rdx,[rip+0x2411f]        # 446637 <fb_schema_table_deleted@@Base+0xeef>
  422518:	jmp    422641 <__flatcc_fb_clear_parser@@Base+0x8d1>
  42251d:	test   rbp,rbp
  422520:	je     42261a <__flatcc_fb_clear_parser@@Base+0x8aa>
  422526:	mov    rax,QWORD PTR [rbp+0x0]
  42252a:	xor    r9d,r9d
  42252d:	lea    r10,[rip+0xc01b]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  422534:	test   rax,rax
  422537:	je     422540 <__flatcc_fb_clear_parser@@Base+0x7d0>
  422539:	mov    r9d,DWORD PTR [rbp+0x8]
  42253d:	mov    r10,rax
  422540:	mov    rax,rbx
  422543:	cmp    QWORD PTR [rax+0x28],rbp
  422547:	jbe    42255e <__flatcc_fb_clear_parser@@Base+0x7ee>
  422549:	nop    DWORD PTR [rax+0x0]
  422550:	mov    rax,QWORD PTR [rax]
  422553:	test   rax,rax
  422556:	je     4225bd <__flatcc_fb_clear_parser@@Base+0x84d>
  422558:	cmp    QWORD PTR [rax+0x28],rbp
  42255c:	ja     422550 <__flatcc_fb_clear_parser@@Base+0x7e0>
  42255e:	cmp    QWORD PTR [rax+0x30],rbp
  422562:	jbe    422550 <__flatcc_fb_clear_parser@@Base+0x7e0>
  422564:	mov    rdx,QWORD PTR [rax+0x318]
  42256b:	jmp    4225c4 <__flatcc_fb_clear_parser@@Base+0x854>
  42256d:	test   rbp,rbp
  422570:	je     422630 <__flatcc_fb_clear_parser@@Base+0x8c0>
  422576:	mov    rax,QWORD PTR [rbp+0x0]
  42257a:	xor    r9d,r9d
  42257d:	lea    r10,[rip+0xbfcb]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  422584:	test   rax,rax
  422587:	je     422590 <__flatcc_fb_clear_parser@@Base+0x820>
  422589:	mov    r9d,DWORD PTR [rbp+0x8]
  42258d:	mov    r10,rax
  422590:	mov    rax,rbx
  422593:	cmp    QWORD PTR [rax+0x28],rbp
  422597:	jbe    4225ae <__flatcc_fb_clear_parser@@Base+0x83e>
  422599:	nop    DWORD PTR [rax+0x0]
  4225a0:	mov    rax,QWORD PTR [rax]
  4225a3:	test   rax,rax
  4225a6:	je     4225e7 <__flatcc_fb_clear_parser@@Base+0x877>
  4225a8:	cmp    QWORD PTR [rax+0x28],rbp
  4225ac:	ja     4225a0 <__flatcc_fb_clear_parser@@Base+0x830>
  4225ae:	cmp    QWORD PTR [rax+0x30],rbp
  4225b2:	jbe    4225a0 <__flatcc_fb_clear_parser@@Base+0x830>
  4225b4:	mov    rdx,QWORD PTR [rax+0x318]
  4225bb:	jmp    4225ee <__flatcc_fb_clear_parser@@Base+0x87e>
  4225bd:	lea    rdx,[rip+0xbf8b]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  4225c4:	mov    rcx,QWORD PTR [rbp+0x10]
  4225c8:	mov    r8,QWORD PTR [rbp+0x18]
  4225cc:	mov    rdi,rbx
  4225cf:	lea    rsi,[rip+0x2361a]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  4225d6:	mov    eax,0x0
  4225db:	lea    rbp,[rip+0x23efa]        # 4464dc <fb_schema_table_deleted@@Base+0xd94>
  4225e2:	jmp    4228ec <__flatcc_fb_clear_parser@@Base+0xb7c>
  4225e7:	lea    rdx,[rip+0xbf61]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  4225ee:	mov    rcx,QWORD PTR [rbp+0x10]
  4225f2:	mov    r8,QWORD PTR [rbp+0x18]
  4225f6:	mov    rdi,rbx
  4225f9:	lea    rsi,[rip+0x235f0]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  422600:	mov    eax,0x0
  422605:	lea    rbp,[rip+0x24045]        # 446651 <fb_schema_table_deleted@@Base+0xf09>
  42260c:	push   rbp
  42260d:	push   r10
  42260f:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  422614:	add    rsp,0x10
  422618:	jmp    422648 <__flatcc_fb_clear_parser@@Base+0x8d8>
  42261a:	mov    rdi,rbx
  42261d:	lea    rsi,[rip+0x2361e]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  422624:	lea    rdx,[rip+0x23eb1]        # 4464dc <fb_schema_table_deleted@@Base+0xd94>
  42262b:	jmp    4228be <__flatcc_fb_clear_parser@@Base+0xb4e>
  422630:	mov    rdi,rbx
  422633:	lea    rsi,[rip+0x23608]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  42263a:	lea    rdx,[rip+0x24010]        # 446651 <fb_schema_table_deleted@@Base+0xf09>
  422641:	xor    eax,eax
  422643:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  422648:	inc    DWORD PTR [rbx+0xd0]
  42264e:	xchg   ax,ax
  422650:	mov    rax,QWORD PTR [rbx+0x48]
  422654:	mov    rax,QWORD PTR [rax+0x20]
  422658:	test   rax,rax
  42265b:	je     422940 <__flatcc_fb_clear_parser@@Base+0xbd0>
  422661:	cmp    rax,0x7d
  422665:	je     422938 <__flatcc_fb_clear_parser@@Base+0xbc8>
  42266b:	cmp    rax,0x3b
  42266f:	je     422930 <__flatcc_fb_clear_parser@@Base+0xbc0>
  422675:	mov    rdi,rbx
  422678:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  42267d:	jmp    422650 <__flatcc_fb_clear_parser@@Base+0x8e0>
  42267f:	test   rbp,rbp
  422682:	je     42277a <__flatcc_fb_clear_parser@@Base+0xa0a>
  422688:	mov    rax,QWORD PTR [rbp+0x0]
  42268c:	xor    r9d,r9d
  42268f:	lea    r10,[rip+0xbeb9]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  422696:	test   rax,rax
  422699:	je     4226a2 <__flatcc_fb_clear_parser@@Base+0x932>
  42269b:	mov    r9d,DWORD PTR [rbp+0x8]
  42269f:	mov    r10,rax
  4226a2:	mov    rax,rbx
  4226a5:	cmp    QWORD PTR [rax+0x28],rbp
  4226a9:	jbe    4226be <__flatcc_fb_clear_parser@@Base+0x94e>
  4226ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4226b0:	mov    rax,QWORD PTR [rax]
  4226b3:	test   rax,rax
  4226b6:	je     42271d <__flatcc_fb_clear_parser@@Base+0x9ad>
  4226b8:	cmp    QWORD PTR [rax+0x28],rbp
  4226bc:	ja     4226b0 <__flatcc_fb_clear_parser@@Base+0x940>
  4226be:	cmp    QWORD PTR [rax+0x30],rbp
  4226c2:	jbe    4226b0 <__flatcc_fb_clear_parser@@Base+0x940>
  4226c4:	mov    rdx,QWORD PTR [rax+0x318]
  4226cb:	jmp    422724 <__flatcc_fb_clear_parser@@Base+0x9b4>
  4226cd:	test   rax,rax
  4226d0:	je     422790 <__flatcc_fb_clear_parser@@Base+0xa20>
  4226d6:	mov    rcx,QWORD PTR [rax]
  4226d9:	xor    r9d,r9d
  4226dc:	lea    rbp,[rip+0xbe6c]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  4226e3:	mov    r10,rbp
  4226e6:	test   rcx,rcx
  4226e9:	je     4226f2 <__flatcc_fb_clear_parser@@Base+0x982>
  4226eb:	mov    r9d,DWORD PTR [rax+0x8]
  4226ef:	mov    r10,rcx
  4226f2:	mov    rcx,rbx
  4226f5:	cmp    QWORD PTR [rcx+0x28],rax
  4226f9:	jbe    42270e <__flatcc_fb_clear_parser@@Base+0x99e>
  4226fb:	nop    DWORD PTR [rax+rax*1+0x0]
  422700:	mov    rcx,QWORD PTR [rcx]
  422703:	test   rcx,rcx
  422706:	je     422747 <__flatcc_fb_clear_parser@@Base+0x9d7>
  422708:	cmp    QWORD PTR [rcx+0x28],rax
  42270c:	ja     422700 <__flatcc_fb_clear_parser@@Base+0x990>
  42270e:	cmp    QWORD PTR [rcx+0x30],rax
  422712:	jbe    422700 <__flatcc_fb_clear_parser@@Base+0x990>
  422714:	mov    rdx,QWORD PTR [rcx+0x318]
  42271b:	jmp    42274e <__flatcc_fb_clear_parser@@Base+0x9de>
  42271d:	lea    rdx,[rip+0xbe2b]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  422724:	mov    rcx,QWORD PTR [rbp+0x10]
  422728:	mov    r8,QWORD PTR [rbp+0x18]
  42272c:	mov    rdi,rbx
  42272f:	lea    rsi,[rip+0x234ba]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  422736:	mov    eax,0x0
  42273b:	lea    rbp,[rip+0x23dbf]        # 446501 <fb_schema_table_deleted@@Base+0xdb9>
  422742:	jmp    4228ec <__flatcc_fb_clear_parser@@Base+0xb7c>
  422747:	lea    rdx,[rip+0xbe01]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  42274e:	mov    rcx,QWORD PTR [rax+0x10]
  422752:	mov    r8,QWORD PTR [rax+0x18]
  422756:	mov    rdi,rbx
  422759:	lea    rsi,[rip+0x23490]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  422760:	mov    eax,0x0
  422765:	lea    rbp,[rip+0x23f31]        # 44669d <fb_schema_table_deleted@@Base+0xf55>
  42276c:	push   rbp
  42276d:	push   r10
  42276f:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  422774:	add    rsp,0x10
  422778:	jmp    4227a8 <__flatcc_fb_clear_parser@@Base+0xa38>
  42277a:	mov    rdi,rbx
  42277d:	lea    rsi,[rip+0x234be]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  422784:	lea    rdx,[rip+0x23d76]        # 446501 <fb_schema_table_deleted@@Base+0xdb9>
  42278b:	jmp    4228be <__flatcc_fb_clear_parser@@Base+0xb4e>
  422790:	mov    rdi,rbx
  422793:	lea    rsi,[rip+0x234a8]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  42279a:	lea    rdx,[rip+0x23efc]        # 44669d <fb_schema_table_deleted@@Base+0xf55>
  4227a1:	xor    eax,eax
  4227a3:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  4227a8:	mov    eax,DWORD PTR [rbx+0xd0]
  4227ae:	inc    eax
  4227b0:	mov    DWORD PTR [rbx+0xd0],eax
  4227b6:	cmp    eax,0x9
  4227b9:	jle    42294f <__flatcc_fb_clear_parser@@Base+0xbdf>
  4227bf:	jmp    422b00 <__flatcc_fb_clear_parser@@Base+0xd90>
  4227c4:	test   rbp,rbp
  4227c7:	je     4228ad <__flatcc_fb_clear_parser@@Base+0xb3d>
  4227cd:	mov    rax,QWORD PTR [rbp+0x0]
  4227d1:	xor    r9d,r9d
  4227d4:	lea    r10,[rip+0xbd74]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  4227db:	test   rax,rax
  4227de:	je     4227e7 <__flatcc_fb_clear_parser@@Base+0xa77>
  4227e0:	mov    r9d,DWORD PTR [rbp+0x8]
  4227e4:	mov    r10,rax
  4227e7:	mov    rax,rbx
  4227ea:	cmp    QWORD PTR [rax+0x28],rbp
  4227ee:	jbe    422802 <__flatcc_fb_clear_parser@@Base+0xa92>
  4227f0:	mov    rax,QWORD PTR [rax]
  4227f3:	test   rax,rax
  4227f6:	je     422886 <__flatcc_fb_clear_parser@@Base+0xb16>
  4227fc:	cmp    QWORD PTR [rax+0x28],rbp
  422800:	ja     4227f0 <__flatcc_fb_clear_parser@@Base+0xa80>
  422802:	cmp    QWORD PTR [rax+0x30],rbp
  422806:	jbe    4227f0 <__flatcc_fb_clear_parser@@Base+0xa80>
  422808:	mov    rdx,QWORD PTR [rax+0x318]
  42280f:	jmp    42288d <__flatcc_fb_clear_parser@@Base+0xb1d>
  422811:	mov    rdi,rbx
  422814:	call   422cf0 <__flatcc_fb_clear_parser@@Base+0xf80>
  422819:	mov    QWORD PTR [r13+0x60],rax
  42281d:	mov    QWORD PTR [rbx+0x40],0x0
  422825:	mov    rax,QWORD PTR [rbx+0x48]
  422829:	cmp    QWORD PTR [rax+0x20],0x3b
  42282e:	je     4223ee <__flatcc_fb_clear_parser@@Base+0x67e>
  422834:	test   rax,rax
  422837:	je     42298d <__flatcc_fb_clear_parser@@Base+0xc1d>
  42283d:	mov    rcx,QWORD PTR [rax]
  422840:	xor    r9d,r9d
  422843:	lea    rbp,[rip+0xbd05]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  42284a:	mov    r10,rbp
  42284d:	test   rcx,rcx
  422850:	je     422859 <__flatcc_fb_clear_parser@@Base+0xae9>
  422852:	mov    r9d,DWORD PTR [rax+0x8]
  422856:	mov    r10,rcx
  422859:	mov    rcx,rbx
  42285c:	cmp    QWORD PTR [rcx+0x28],rax
  422860:	jbe    422874 <__flatcc_fb_clear_parser@@Base+0xb04>
  422862:	mov    rcx,QWORD PTR [rcx]
  422865:	test   rcx,rcx
  422868:	je     422963 <__flatcc_fb_clear_parser@@Base+0xbf3>
  42286e:	cmp    QWORD PTR [rcx+0x28],rax
  422872:	ja     422862 <__flatcc_fb_clear_parser@@Base+0xaf2>
  422874:	cmp    QWORD PTR [rcx+0x30],rax
  422878:	jbe    422862 <__flatcc_fb_clear_parser@@Base+0xaf2>
  42287a:	mov    rdx,QWORD PTR [rcx+0x318]
  422881:	jmp    42296a <__flatcc_fb_clear_parser@@Base+0xbfa>
  422886:	lea    rdx,[rip+0xbcc2]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  42288d:	mov    rcx,QWORD PTR [rbp+0x10]
  422891:	mov    r8,QWORD PTR [rbp+0x18]
  422895:	mov    rdi,rbx
  422898:	lea    rsi,[rip+0x23351]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  42289f:	mov    eax,0x0
  4228a4:	lea    rbp,[rip+0x23c7d]        # 446528 <fb_schema_table_deleted@@Base+0xde0>
  4228ab:	jmp    4228ec <__flatcc_fb_clear_parser@@Base+0xb7c>
  4228ad:	mov    rdi,rbx
  4228b0:	lea    rsi,[rip+0x2338b]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  4228b7:	lea    rdx,[rip+0x23c6a]        # 446528 <fb_schema_table_deleted@@Base+0xde0>
  4228be:	xor    eax,eax
  4228c0:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  4228c5:	jmp    4228f8 <__flatcc_fb_clear_parser@@Base+0xb88>
  4228c7:	lea    rdx,[rip+0xbc81]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  4228ce:	mov    rcx,QWORD PTR [rbp+0x10]
  4228d2:	mov    r8,QWORD PTR [rbp+0x18]
  4228d6:	mov    rdi,rbx
  4228d9:	lea    rsi,[rip+0x23310]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  4228e0:	mov    eax,0x0
  4228e5:	lea    rbp,[rip+0x23c6f]        # 44655b <fb_schema_table_deleted@@Base+0xe13>
  4228ec:	push   rbp
  4228ed:	push   r10
  4228ef:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  4228f4:	add    rsp,0x10
  4228f8:	inc    DWORD PTR [rbx+0xd0]
  4228fe:	xchg   ax,ax
  422900:	mov    rax,QWORD PTR [rbx+0x48]
  422904:	mov    rax,QWORD PTR [rax+0x20]
  422908:	test   rax,rax
  42290b:	je     422940 <__flatcc_fb_clear_parser@@Base+0xbd0>
  42290d:	cmp    rax,0x7d
  422911:	je     422938 <__flatcc_fb_clear_parser@@Base+0xbc8>
  422913:	cmp    rax,0x3b
  422917:	je     422930 <__flatcc_fb_clear_parser@@Base+0xbc0>
  422919:	mov    rdi,rbx
  42291c:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  422921:	jmp    422900 <__flatcc_fb_clear_parser@@Base+0xb90>
  422923:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42292d:	nop    DWORD PTR [rax]
  422930:	mov    rdi,rbx
  422933:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  422938:	mov    QWORD PTR [rbx+0x40],0x0
  422940:	mov    eax,DWORD PTR [rbx+0xd0]
  422946:	cmp    eax,0x9
  422949:	jg     422b00 <__flatcc_fb_clear_parser@@Base+0xd90>
  42294f:	mov    rbp,QWORD PTR [rbx+0x48]
  422953:	cmp    QWORD PTR [rbp+0x20],0x7d
  422958:	jne    422190 <__flatcc_fb_clear_parser@@Base+0x420>
  42295e:	jmp    422a87 <__flatcc_fb_clear_parser@@Base+0xd17>
  422963:	lea    rdx,[rip+0xbbe5]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  42296a:	mov    rcx,QWORD PTR [rax+0x10]
  42296e:	mov    r8,QWORD PTR [rax+0x18]
  422972:	mov    rdi,rbx
  422975:	lea    rsi,[rip+0x23274]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  42297c:	mov    eax,0x0
  422981:	lea    rbp,[rip+0x23bf9]        # 446581 <fb_schema_table_deleted@@Base+0xe39>
  422988:	jmp    42276c <__flatcc_fb_clear_parser@@Base+0x9fc>
  42298d:	mov    rdi,rbx
  422990:	lea    rsi,[rip+0x232ab]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  422997:	lea    rdx,[rip+0x23be3]        # 446581 <fb_schema_table_deleted@@Base+0xe39>
  42299e:	jmp    4227a1 <__flatcc_fb_clear_parser@@Base+0xa31>
  4229a3:	test   rbp,rbp
  4229a6:	je     4229fc <__flatcc_fb_clear_parser@@Base+0xc8c>
  4229a8:	mov    rax,QWORD PTR [rbp+0x0]
  4229ac:	xor    r9d,r9d
  4229af:	lea    rdx,[rip+0xbb99]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  4229b6:	mov    r10,rdx
  4229b9:	test   rax,rax
  4229bc:	je     4229c5 <__flatcc_fb_clear_parser@@Base+0xc55>
  4229be:	mov    r9d,DWORD PTR [rbp+0x8]
  4229c2:	mov    r10,rax
  4229c5:	mov    rax,rbx
  4229c8:	cmp    QWORD PTR [rax+0x28],rbp
  4229cc:	jbe    4229de <__flatcc_fb_clear_parser@@Base+0xc6e>
  4229ce:	xchg   ax,ax
  4229d0:	mov    rax,QWORD PTR [rax]
  4229d3:	test   rax,rax
  4229d6:	je     4229eb <__flatcc_fb_clear_parser@@Base+0xc7b>
  4229d8:	cmp    QWORD PTR [rax+0x28],rbp
  4229dc:	ja     4229d0 <__flatcc_fb_clear_parser@@Base+0xc60>
  4229de:	cmp    QWORD PTR [rax+0x30],rbp
  4229e2:	jbe    4229d0 <__flatcc_fb_clear_parser@@Base+0xc60>
  4229e4:	mov    rdx,QWORD PTR [rax+0x318]
  4229eb:	mov    rcx,QWORD PTR [rbp+0x10]
  4229ef:	mov    r8,QWORD PTR [rbp+0x18]
  4229f3:	lea    rbp,[rip+0x23925]        # 44631f <fb_schema_table_deleted@@Base+0xbd7>
  4229fa:	jmp    422a6a <__flatcc_fb_clear_parser@@Base+0xcfa>
  4229fc:	lea    rsi,[rip+0x2323f]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  422a03:	lea    rdx,[rip+0x23915]        # 44631f <fb_schema_table_deleted@@Base+0xbd7>
  422a0a:	jmp    422ae1 <__flatcc_fb_clear_parser@@Base+0xd71>
  422a0f:	test   rbp,rbp
  422a12:	je     422ad3 <__flatcc_fb_clear_parser@@Base+0xd63>
  422a18:	mov    rax,QWORD PTR [rbp+0x0]
  422a1c:	xor    r9d,r9d
  422a1f:	lea    rdx,[rip+0xbb29]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  422a26:	mov    r10,rdx
  422a29:	test   rax,rax
  422a2c:	je     422a35 <__flatcc_fb_clear_parser@@Base+0xcc5>
  422a2e:	mov    r9d,DWORD PTR [rbp+0x8]
  422a32:	mov    r10,rax
  422a35:	mov    rax,rbx
  422a38:	cmp    QWORD PTR [rax+0x28],rbp
  422a3c:	jbe    422a4e <__flatcc_fb_clear_parser@@Base+0xcde>
  422a3e:	xchg   ax,ax
  422a40:	mov    rax,QWORD PTR [rax]
  422a43:	test   rax,rax
  422a46:	je     422a5b <__flatcc_fb_clear_parser@@Base+0xceb>
  422a48:	cmp    QWORD PTR [rax+0x28],rbp
  422a4c:	ja     422a40 <__flatcc_fb_clear_parser@@Base+0xcd0>
  422a4e:	cmp    QWORD PTR [rax+0x30],rbp
  422a52:	jbe    422a40 <__flatcc_fb_clear_parser@@Base+0xcd0>
  422a54:	mov    rdx,QWORD PTR [rax+0x318]
  422a5b:	mov    rcx,QWORD PTR [rbp+0x10]
  422a5f:	mov    r8,QWORD PTR [rbp+0x18]
  422a63:	lea    rbp,[rip+0x238d8]        # 446342 <fb_schema_table_deleted@@Base+0xbfa>
  422a6a:	lea    rsi,[rip+0x2317f]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  422a71:	mov    rdi,rbx
  422a74:	mov    eax,0x0
  422a79:	push   rbp
  422a7a:	push   r10
  422a7c:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  422a81:	add    rsp,0x10
  422a85:	jmp    422aeb <__flatcc_fb_clear_parser@@Base+0xd7b>
  422a87:	mov    rdi,rbx
  422a8a:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  422a8f:	test   r12,r12
  422a92:	je     422ab5 <__flatcc_fb_clear_parser@@Base+0xd45>
  422a94:	test   rbp,rbp
  422a97:	jne    422ab5 <__flatcc_fb_clear_parser@@Base+0xd45>
  422a99:	mov    rsi,QWORD PTR [rbx+0x48]
  422a9d:	lea    rdx,[rip+0x238b7]        # 44635b <fb_schema_table_deleted@@Base+0xc13>
  422aa4:	mov    rdi,rbx
  422aa7:	mov    rcx,r12
  422aaa:	xor    r8d,r8d
  422aad:	xor    r9d,r9d
  422ab0:	call   41b6e0 <__flatcc_error_report@@Base>
  422ab5:	mov    rax,QWORD PTR [r14+0x28]
  422ab9:	test   rax,rax
  422abc:	je     422b32 <__flatcc_fb_clear_parser@@Base+0xdc2>
  422abe:	xor    edx,edx
  422ac0:	mov    rcx,rax
  422ac3:	mov    rax,QWORD PTR [rax]
  422ac6:	mov    QWORD PTR [rcx],rdx
  422ac9:	mov    rdx,rcx
  422acc:	test   rax,rax
  422acf:	jne    422ac0 <__flatcc_fb_clear_parser@@Base+0xd50>
  422ad1:	jmp    422b34 <__flatcc_fb_clear_parser@@Base+0xdc4>
  422ad3:	lea    rsi,[rip+0x23168]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  422ada:	lea    rdx,[rip+0x23861]        # 446342 <fb_schema_table_deleted@@Base+0xbfa>
  422ae1:	mov    rdi,rbx
  422ae4:	xor    eax,eax
  422ae6:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  422aeb:	inc    DWORD PTR [rbx+0xd0]
  422af1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422afb:	nop    DWORD PTR [rax+rax*1+0x0]
  422b00:	mov    rax,QWORD PTR [rbx+0x48]
  422b04:	mov    rbp,QWORD PTR [rax+0x20]
  422b08:	test   rbp,rbp
  422b0b:	je     422b23 <__flatcc_fb_clear_parser@@Base+0xdb3>
  422b0d:	mov    rdi,rbx
  422b10:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  422b15:	cmp    rbp,0x7d
  422b19:	jne    422b00 <__flatcc_fb_clear_parser@@Base+0xd90>
  422b1b:	mov    QWORD PTR [rbx+0x40],0x0
  422b23:	add    rsp,0x8
  422b27:	pop    rbx
  422b28:	pop    r12
  422b2a:	pop    r13
  422b2c:	pop    r14
  422b2e:	pop    r15
  422b30:	pop    rbp
  422b31:	ret    
  422b32:	xor    ecx,ecx
  422b34:	mov    QWORD PTR [r14+0x28],rcx
  422b38:	jmp    422b23 <__flatcc_fb_clear_parser@@Base+0xdb3>
  422b3a:	mov    rax,QWORD PTR [rip+0x2d4b7]        # 44fff8 <stderr@GLIBC_2.2.5>
  422b41:	mov    rcx,QWORD PTR [rax]
  422b44:	lea    rdi,[rip+0xb4dc]        # 42e027 <_IO_stdin_used@@Base+0x1027>
  422b4b:	mov    esi,0x22
  422b50:	mov    edx,0x1
  422b55:	call   406220 <fwrite@plt>
  422b5a:	mov    edi,0x1
  422b5f:	call   406210 <exit@plt>
  422b64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422b6e:	xchg   ax,ax
  422b70:	push   r15
  422b72:	push   r14
  422b74:	push   r13
  422b76:	push   r12
  422b78:	push   rbx
  422b79:	mov    r14,rsi
  422b7c:	mov    r12,rdi
  422b7f:	mov    r15,QWORD PTR [rdi+0x48]
  422b83:	mov    rcx,QWORD PTR [rdi+0x60]
  422b87:	lea    rax,[rcx+0x20]
  422b8b:	cmp    rax,QWORD PTR [rdi+0x50]
  422b8f:	jbe    422bcf <__flatcc_fb_clear_parser@@Base+0xe5f>
  422b91:	mov    edi,0x10000
  422b96:	mov    esi,0x1
  422b9b:	call   406140 <calloc@plt>
  422ba0:	test   rax,rax
  422ba3:	je     422cb8 <__flatcc_fb_clear_parser@@Base+0xf48>
  422ba9:	mov    rcx,QWORD PTR [r12+0x58]
  422bae:	mov    QWORD PTR [rax],rcx
  422bb1:	mov    QWORD PTR [r12+0x58],rax
  422bb6:	lea    rcx,[rax+0x10]
  422bba:	mov    QWORD PTR [r12+0x60],rcx
  422bbf:	lea    rdx,[rax+0x10000]
  422bc6:	mov    QWORD PTR [r12+0x50],rdx
  422bcb:	add    rax,0x30
  422bcf:	mov    QWORD PTR [r12+0x60],rax
  422bd4:	mov    QWORD PTR [rcx+0x8],r15
  422bd8:	mov    QWORD PTR [r14],rcx
  422bdb:	mov    rdi,r12
  422bde:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  422be3:	mov    rbx,QWORD PTR [r12+0x48]
  422be8:	cmp    QWORD PTR [rbx+0x20],0x2e
  422bed:	jne    422c8b <__flatcc_fb_clear_parser@@Base+0xf1b>
  422bf3:	mov    r15,QWORD PTR [r14]
  422bf6:	jmp    422c23 <__flatcc_fb_clear_parser@@Base+0xeb3>
  422bf8:	nop    DWORD PTR [rax+rax*1+0x0]
  422c00:	mov    QWORD PTR [r12+0x60],rax
  422c05:	mov    QWORD PTR [r13+0x8],r14
  422c09:	mov    QWORD PTR [r15],r13
  422c0c:	mov    rdi,r12
  422c0f:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  422c14:	mov    rbx,QWORD PTR [r12+0x48]
  422c19:	cmp    QWORD PTR [rbx+0x20],0x2e
  422c1e:	mov    r15,r13
  422c21:	jne    422c8b <__flatcc_fb_clear_parser@@Base+0xf1b>
  422c23:	mov    rdi,r12
  422c26:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  422c2b:	test   rbx,rbx
  422c2e:	je     422c8b <__flatcc_fb_clear_parser@@Base+0xf1b>
  422c30:	mov    r14,QWORD PTR [r12+0x48]
  422c35:	cmp    QWORD PTR [r14+0x20],0x9
  422c3a:	jne    422c95 <__flatcc_fb_clear_parser@@Base+0xf25>
  422c3c:	mov    r13,QWORD PTR [r12+0x60]
  422c41:	lea    rax,[r13+0x20]
  422c45:	cmp    rax,QWORD PTR [r12+0x50]
  422c4a:	jbe    422c00 <__flatcc_fb_clear_parser@@Base+0xe90>
  422c4c:	mov    edi,0x10000
  422c51:	mov    esi,0x1
  422c56:	call   406140 <calloc@plt>
  422c5b:	test   rax,rax
  422c5e:	je     422cb8 <__flatcc_fb_clear_parser@@Base+0xf48>
  422c60:	mov    rcx,QWORD PTR [r12+0x58]
  422c65:	mov    QWORD PTR [rax],rcx
  422c68:	mov    QWORD PTR [r12+0x58],rax
  422c6d:	lea    r13,[rax+0x10]
  422c71:	mov    QWORD PTR [r12+0x60],r13
  422c76:	lea    rcx,[rax+0x10000]
  422c7d:	mov    QWORD PTR [r12+0x50],rcx
  422c82:	add    rax,0x30
  422c86:	jmp    422c00 <__flatcc_fb_clear_parser@@Base+0xe90>
  422c8b:	pop    rbx
  422c8c:	pop    r12
  422c8e:	pop    r13
  422c90:	pop    r14
  422c92:	pop    r15
  422c94:	ret    
  422c95:	lea    rdx,[rip+0x234e7]        # 446183 <fb_schema_table_deleted@@Base+0xa3b>
  422c9c:	mov    rdi,r12
  422c9f:	mov    rsi,r14
  422ca2:	xor    ecx,ecx
  422ca4:	xor    r8d,r8d
  422ca7:	xor    r9d,r9d
  422caa:	pop    rbx
  422cab:	pop    r12
  422cad:	pop    r13
  422caf:	pop    r14
  422cb1:	pop    r15
  422cb3:	jmp    41b6e0 <__flatcc_error_report@@Base>
  422cb8:	mov    rax,QWORD PTR [rip+0x2d339]        # 44fff8 <stderr@GLIBC_2.2.5>
  422cbf:	mov    rcx,QWORD PTR [rax]
  422cc2:	lea    rdi,[rip+0xb35e]        # 42e027 <_IO_stdin_used@@Base+0x1027>
  422cc9:	mov    esi,0x22
  422cce:	mov    edx,0x1
  422cd3:	call   406220 <fwrite@plt>
  422cd8:	mov    edi,0x1
  422cdd:	call   406210 <exit@plt>
  422ce2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422cec:	nop    DWORD PTR [rax+0x0]
  422cf0:	push   rbp
  422cf1:	push   r15
  422cf3:	push   r14
  422cf5:	push   r13
  422cf7:	push   r12
  422cf9:	push   rbx
  422cfa:	push   rax
  422cfb:	mov    r14,QWORD PTR [rdi+0x48]
  422cff:	cmp    QWORD PTR [r14+0x20],0x28
  422d04:	jne    422e80 <__flatcc_fb_clear_parser@@Base+0x1110>
  422d0a:	mov    r12,rdi
  422d0d:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  422d12:	test   r14,r14
  422d15:	je     422e80 <__flatcc_fb_clear_parser@@Base+0x1110>
  422d1b:	mov    r13,QWORD PTR [r12+0x48]
  422d20:	cmp    QWORD PTR [r13+0x20],0x9
  422d25:	jne    422e25 <__flatcc_fb_clear_parser@@Base+0x10b5>
  422d2b:	mov    rdi,r12
  422d2e:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  422d33:	test   r13,r13
  422d36:	je     422e25 <__flatcc_fb_clear_parser@@Base+0x10b5>
  422d3c:	xor    ebp,ebp
  422d3e:	lea    r15,[rip+0x2363f]        # 446384 <fb_schema_table_deleted@@Base+0xc3c>
  422d45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422d4f:	nop
  422d50:	mov    rbx,QWORD PTR [r12+0x60]
  422d55:	lea    rax,[rbx+0x30]
  422d59:	cmp    rax,QWORD PTR [r12+0x50]
  422d5e:	jbe    422d9e <__flatcc_fb_clear_parser@@Base+0x102e>
  422d60:	mov    edi,0x10000
  422d65:	mov    esi,0x1
  422d6a:	call   406140 <calloc@plt>
  422d6f:	test   rax,rax
  422d72:	je     422f47 <__flatcc_fb_clear_parser@@Base+0x11d7>
  422d78:	mov    rcx,QWORD PTR [r12+0x58]
  422d7d:	mov    QWORD PTR [rax],rcx
  422d80:	mov    QWORD PTR [r12+0x58],rax
  422d85:	lea    rbx,[rax+0x10]
  422d89:	mov    QWORD PTR [r12+0x60],rbx
  422d8e:	lea    rcx,[rax+0x10000]
  422d95:	mov    QWORD PTR [r12+0x50],rcx
  422d9a:	add    rax,0x40
  422d9e:	mov    QWORD PTR [r12+0x60],rax
  422da3:	mov    QWORD PTR [rbx],rbp
  422da6:	mov    QWORD PTR [rbx+0x8],r13
  422daa:	mov    rbp,QWORD PTR [r12+0x48]
  422daf:	cmp    QWORD PTR [rbp+0x20],0x3a
  422db4:	jne    422dd7 <__flatcc_fb_clear_parser@@Base+0x1067>
  422db6:	mov    rdi,r12
  422db9:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  422dbe:	test   rbp,rbp
  422dc1:	je     422dd7 <__flatcc_fb_clear_parser@@Base+0x1067>
  422dc3:	lea    rsi,[rbx+0x10]
  422dc7:	mov    rdi,r12
  422dca:	mov    edx,0x1
  422dcf:	mov    rcx,r15
  422dd2:	call   422f80 <__flatcc_fb_clear_parser@@Base+0x1210>
  422dd7:	cmp    DWORD PTR [r12+0xd0],0x9
  422de0:	jg     422e91 <__flatcc_fb_clear_parser@@Base+0x1121>
  422de6:	mov    rbp,QWORD PTR [r12+0x48]
  422deb:	cmp    QWORD PTR [rbp+0x20],0x2c
  422df0:	jne    422e27 <__flatcc_fb_clear_parser@@Base+0x10b7>
  422df2:	mov    rdi,r12
  422df5:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  422dfa:	test   rbp,rbp
  422dfd:	je     422e27 <__flatcc_fb_clear_parser@@Base+0x10b7>
  422dff:	mov    r13,QWORD PTR [r12+0x48]
  422e04:	cmp    QWORD PTR [r13+0x20],0x9
  422e09:	jne    422e96 <__flatcc_fb_clear_parser@@Base+0x1126>
  422e0f:	mov    rdi,r12
  422e12:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  422e17:	mov    rbp,rbx
  422e1a:	test   r13,r13
  422e1d:	jne    422d50 <__flatcc_fb_clear_parser@@Base+0xfe0>
  422e23:	jmp    422e27 <__flatcc_fb_clear_parser@@Base+0x10b7>
  422e25:	xor    ebx,ebx
  422e27:	mov    QWORD PTR [r12+0x40],0x0
  422e30:	mov    rsi,QWORD PTR [r12+0x48]
  422e35:	cmp    QWORD PTR [rsi+0x20],0x29
  422e3a:	jne    422e63 <__flatcc_fb_clear_parser@@Base+0x10f3>
  422e3c:	mov    rdi,r12
  422e3f:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  422e44:	test   rbx,rbx
  422e47:	je     422e80 <__flatcc_fb_clear_parser@@Base+0x1110>
  422e49:	xor    ecx,ecx
  422e4b:	nop    DWORD PTR [rax+rax*1+0x0]
  422e50:	mov    rax,rbx
  422e53:	mov    rbx,QWORD PTR [rbx]
  422e56:	mov    QWORD PTR [rax],rcx
  422e59:	mov    rcx,rax
  422e5c:	test   rbx,rbx
  422e5f:	jne    422e50 <__flatcc_fb_clear_parser@@Base+0x10e0>
  422e61:	jmp    422e82 <__flatcc_fb_clear_parser@@Base+0x1112>
  422e63:	lea    rdx,[rip+0x23567]        # 4463d1 <fb_schema_table_deleted@@Base+0xc89>
  422e6a:	mov    rdi,r12
  422e6d:	mov    rcx,r14
  422e70:	xor    r8d,r8d
  422e73:	xor    r9d,r9d
  422e76:	call   41b6e0 <__flatcc_error_report@@Base>
  422e7b:	test   rbx,rbx
  422e7e:	jne    422e49 <__flatcc_fb_clear_parser@@Base+0x10d9>
  422e80:	xor    eax,eax
  422e82:	add    rsp,0x8
  422e86:	pop    rbx
  422e87:	pop    r12
  422e89:	pop    r13
  422e8b:	pop    r14
  422e8d:	pop    r15
  422e8f:	pop    rbp
  422e90:	ret    
  422e91:	mov    rax,rbx
  422e94:	jmp    422e82 <__flatcc_fb_clear_parser@@Base+0x1112>
  422e96:	test   r13,r13
  422e99:	je     422f22 <__flatcc_fb_clear_parser@@Base+0x11b2>
  422e9f:	mov    rax,QWORD PTR [r13+0x0]
  422ea3:	xor    r9d,r9d
  422ea6:	lea    rdx,[rip+0xb6a2]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  422ead:	mov    rbp,rdx
  422eb0:	test   rax,rax
  422eb3:	je     422ebc <__flatcc_fb_clear_parser@@Base+0x114c>
  422eb5:	mov    r9d,DWORD PTR [r13+0x8]
  422eb9:	mov    rbp,rax
  422ebc:	mov    rax,r12
  422ebf:	cmp    QWORD PTR [rax+0x28],r13
  422ec3:	jbe    422ede <__flatcc_fb_clear_parser@@Base+0x116e>
  422ec5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422ecf:	nop
  422ed0:	mov    rax,QWORD PTR [rax]
  422ed3:	test   rax,rax
  422ed6:	je     422eeb <__flatcc_fb_clear_parser@@Base+0x117b>
  422ed8:	cmp    QWORD PTR [rax+0x28],r13
  422edc:	ja     422ed0 <__flatcc_fb_clear_parser@@Base+0x1160>
  422ede:	cmp    QWORD PTR [rax+0x30],r13
  422ee2:	jbe    422ed0 <__flatcc_fb_clear_parser@@Base+0x1160>
  422ee4:	mov    rdx,QWORD PTR [rax+0x318]
  422eeb:	mov    rcx,QWORD PTR [r13+0x10]
  422eef:	mov    r8,QWORD PTR [r13+0x18]
  422ef3:	lea    r10,[rip+0x234aa]        # 4463a4 <fb_schema_table_deleted@@Base+0xc5c>
  422efa:	lea    rsi,[rip+0x22cef]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  422f01:	mov    rdi,r12
  422f04:	mov    eax,0x0
  422f09:	push   r10
  422f0b:	push   rbp
  422f0c:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  422f11:	add    rsp,0x10
  422f15:	inc    DWORD PTR [r12+0xd0]
  422f1d:	jmp    422e27 <__flatcc_fb_clear_parser@@Base+0x10b7>
  422f22:	lea    rsi,[rip+0x22d19]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  422f29:	lea    rdx,[rip+0x23474]        # 4463a4 <fb_schema_table_deleted@@Base+0xc5c>
  422f30:	mov    rdi,r12
  422f33:	xor    eax,eax
  422f35:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  422f3a:	inc    DWORD PTR [r12+0xd0]
  422f42:	jmp    422e27 <__flatcc_fb_clear_parser@@Base+0x10b7>
  422f47:	mov    rax,QWORD PTR [rip+0x2d0aa]        # 44fff8 <stderr@GLIBC_2.2.5>
  422f4e:	mov    rcx,QWORD PTR [rax]
  422f51:	lea    rdi,[rip+0xb0cf]        # 42e027 <_IO_stdin_used@@Base+0x1027>
  422f58:	mov    esi,0x22
  422f5d:	mov    edx,0x1
  422f62:	call   406220 <fwrite@plt>
  422f67:	mov    edi,0x1
  422f6c:	call   406210 <exit@plt>
  422f71:	nop    WORD PTR cs:[rax+rax*1+0x0]
  422f7b:	nop    DWORD PTR [rax+rax*1+0x0]
  422f80:	push   rbp
  422f81:	push   r15
  422f83:	push   r14
  422f85:	push   r13
  422f87:	push   r12
  422f89:	push   rbx
  422f8a:	push   rax
  422f8b:	mov    rbx,rcx
  422f8e:	mov    ebp,edx
  422f90:	mov    r15,rsi
  422f93:	mov    r14,rdi
  422f96:	mov    r13,QWORD PTR [rdi+0x48]
  422f9a:	mov    rax,QWORD PTR [r13+0x20]
  422f9e:	cmp    rax,0x2d
  422fa2:	jne    422fb7 <__flatcc_fb_clear_parser@@Base+0x1247>
  422fa4:	mov    rdi,r14
  422fa7:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  422fac:	mov    r12,QWORD PTR [r14+0x48]
  422fb0:	mov    rax,QWORD PTR [r12+0x20]
  422fb5:	jmp    422fbd <__flatcc_fb_clear_parser@@Base+0x124d>
  422fb7:	mov    r12,r13
  422fba:	xor    r13d,r13d
  422fbd:	lea    rcx,[rax-0x9]
  422fc1:	cmp    rcx,0xa
  422fc5:	ja     423005 <__flatcc_fb_clear_parser@@Base+0x1295>
  422fc7:	lea    rax,[rip+0x22ae6]        # 445ab4 <fb_schema_table_deleted@@Base+0x36c>
  422fce:	movsxd rcx,DWORD PTR [rax+rcx*4]
  422fd2:	add    rcx,rax
  422fd5:	jmp    rcx
  422fd7:	mov    rdi,r14
  422fda:	mov    rsi,r15
  422fdd:	call   422b70 <__flatcc_fb_clear_parser@@Base+0xe00>
  422fe2:	mov    WORD PTR [r15+0x10],0xd
  422fe9:	test   r13,r13
  422fec:	je     423292 <__flatcc_fb_clear_parser@@Base+0x1522>
  422ff2:	mov    WORD PTR [r15+0x10],0x1
  422ff9:	lea    rdx,[rip+0x23412]        # 446412 <fb_schema_table_deleted@@Base+0xcca>
  423000:	jmp    423271 <__flatcc_fb_clear_parser@@Base+0x1501>
  423005:	cmp    rax,0xfffffffffffffc24
  42300b:	je     423245 <__flatcc_fb_clear_parser@@Base+0x14d5>
  423011:	cmp    rax,0xfffffffffffffc26
  423017:	jne    42323a <__flatcc_fb_clear_parser@@Base+0x14ca>
  42301d:	mov    BYTE PTR [r15],0x0
  423021:	jmp    423249 <__flatcc_fb_clear_parser@@Base+0x14d9>
  423026:	mov    WORD PTR [r15+0x10],0x5
  42302d:	mov    rax,QWORD PTR [r12+0x8]
  423032:	test   eax,eax
  423034:	je     423394 <__flatcc_fb_clear_parser@@Base+0x1624>
  42303a:	mov    rcx,QWORD PTR [r12]
  42303e:	movsxd rbx,eax
  423041:	mov    al,BYTE PTR [rcx]
  423043:	xor    edx,edx
  423045:	cmp    al,0x2d
  423047:	sete   dl
  42304a:	cmp    rbx,rdx
  42304d:	je     423394 <__flatcc_fb_clear_parser@@Base+0x1624>
  423053:	lea    r9,[rcx+rbx*1]
  423057:	lea    r8,[rcx+rdx*1]
  42305b:	xor    esi,esi
  42305d:	nop    DWORD PTR [rax]
  423060:	movsx  rdi,BYTE PTR [rcx+rdx*1]
  423065:	lea    ebp,[rdi-0x30]
  423068:	cmp    bpl,0x9
  42306c:	ja     423353 <__flatcc_fb_clear_parser@@Base+0x15e3>
  423072:	lea    rbp,[rsi+rsi*4]
  423076:	lea    rdi,[rdi+rbp*2]
  42307a:	add    rdi,0xffffffffffffffd0
  42307e:	cmp    rsi,rdi
  423081:	ja     423394 <__flatcc_fb_clear_parser@@Base+0x1624>
  423087:	inc    rdx
  42308a:	mov    rsi,rdi
  42308d:	cmp    rbx,rdx
  423090:	jne    423060 <__flatcc_fb_clear_parser@@Base+0x12f0>
  423092:	xor    ebx,ebx
  423094:	cmp    r9,rcx
  423097:	jne    423363 <__flatcc_fb_clear_parser@@Base+0x15f3>
  42309d:	jmp    423394 <__flatcc_fb_clear_parser@@Base+0x1624>
  4230a2:	mov    WORD PTR [r15+0x10],0x3
  4230a9:	mov    rdi,QWORD PTR [r12]
  4230ad:	mov    rsi,rsp
  4230b0:	call   406090 <strtod@plt>
  4230b5:	vmovsd QWORD PTR [r15],xmm0
  4230ba:	mov    rbp,QWORD PTR [r12]
  4230be:	mov    r9,QWORD PTR [r12+0x8]
  4230c3:	lea    rax,[r9+rbp*1]
  4230c7:	cmp    QWORD PTR [rsp],rax
  4230cb:	je     4232a1 <__flatcc_fb_clear_parser@@Base+0x1531>
  4230d1:	mov    WORD PTR [r15+0x10],0x1
  4230d8:	xor    eax,eax
  4230da:	test   rbp,rbp
  4230dd:	lea    rdx,[rip+0xb46b]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  4230e4:	cmove  rbp,rdx
  4230e8:	cmovne eax,r9d
  4230ec:	mov    rcx,r14
  4230ef:	cmp    QWORD PTR [rcx+0x28],r12
  4230f3:	jbe    42310e <__flatcc_fb_clear_parser@@Base+0x139e>
  4230f5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4230ff:	nop
  423100:	mov    rcx,QWORD PTR [rcx]
  423103:	test   rcx,rcx
  423106:	je     42311b <__flatcc_fb_clear_parser@@Base+0x13ab>
  423108:	cmp    QWORD PTR [rcx+0x28],r12
  42310c:	ja     423100 <__flatcc_fb_clear_parser@@Base+0x1390>
  42310e:	cmp    QWORD PTR [rcx+0x30],r12
  423112:	jbe    423100 <__flatcc_fb_clear_parser@@Base+0x1390>
  423114:	mov    rdx,QWORD PTR [rcx+0x318]
  42311b:	mov    rcx,QWORD PTR [r12+0x10]
  423120:	mov    r8,QWORD PTR [r12+0x18]
  423125:	lea    rbx,[rip+0x23359]        # 446485 <fb_schema_table_deleted@@Base+0xd3d>
  42312c:	lea    rsi,[rip+0x22abd]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  423133:	mov    rdi,r14
  423136:	mov    r9d,eax
  423139:	jmp    423306 <__flatcc_fb_clear_parser@@Base+0x1596>
  42313e:	mov    WORD PTR [r15+0x10],0x5
  423145:	mov    rax,QWORD PTR [r12+0x8]
  42314a:	test   eax,eax
  42314c:	je     4233e3 <__flatcc_fb_clear_parser@@Base+0x1673>
  423152:	mov    rdx,QWORD PTR [r12]
  423156:	movsxd rcx,eax
  423159:	add    rcx,rdx
  42315c:	mov    r9b,BYTE PTR [rdx]
  42315f:	xor    esi,esi
  423161:	cmp    r9b,0x2d
  423165:	sete   sil
  423169:	add    rsi,rdx
  42316c:	mov    rax,rcx
  42316f:	sub    rax,rsi
  423172:	cmp    rax,0x2
  423176:	jl     4233e3 <__flatcc_fb_clear_parser@@Base+0x1673>
  42317c:	cmp    BYTE PTR [rsi],0x30
  42317f:	jne    4233e3 <__flatcc_fb_clear_parser@@Base+0x1673>
  423185:	mov    al,BYTE PTR [rsi+0x1]
  423188:	or     al,0x20
  42318a:	cmp    al,0x78
  42318c:	jne    4233e3 <__flatcc_fb_clear_parser@@Base+0x1673>
  423192:	lea    rax,[rsi+0x2]
  423196:	mov    rdx,rcx
  423199:	sub    rdx,rax
  42319c:	lea    r8,[rsi+0x12]
  4231a0:	cmp    rdx,0x10
  4231a4:	cmovle r8,rcx
  4231a8:	cmp    rax,r8
  4231ab:	je     4233e3 <__flatcc_fb_clear_parser@@Base+0x1673>
  4231b1:	mov    r10,r8
  4231b4:	sub    r10,rsi
  4231b7:	mov    ebp,0x2
  4231bc:	xor    edx,edx
  4231be:	jmp    4231dc <__flatcc_fb_clear_parser@@Base+0x146c>
  4231c0:	shl    rdx,0x4
  4231c4:	mov    rdi,rdx
  4231c7:	add    rdi,rax
  4231ca:	movzx  edx,bl
  4231cd:	add    rdx,rdi
  4231d0:	inc    rbp
  4231d3:	cmp    r10,rbp
  4231d6:	je     4233a4 <__flatcc_fb_clear_parser@@Base+0x1634>
  4231dc:	movzx  ebx,BYTE PTR [rsi+rbp*1]
  4231e0:	lea    edi,[rbx-0x30]
  4231e3:	mov    rax,0xffffffffffffffd0
  4231ea:	cmp    dil,0xa
  4231ee:	jb     4231c0 <__flatcc_fb_clear_parser@@Base+0x1450>
  4231f0:	or     bl,0x20
  4231f3:	lea    edi,[rbx-0x61]
  4231f6:	mov    rax,0xffffffffffffffa9
  4231fd:	cmp    dil,0x5
  423201:	jbe    4231c0 <__flatcc_fb_clear_parser@@Base+0x1450>
  423203:	add    rsi,rbp
  423206:	xor    edi,edi
  423208:	mov    r8,rsi
  42320b:	cmp    rbp,0x2
  42320f:	jne    4233ad <__flatcc_fb_clear_parser@@Base+0x163d>
  423215:	jmp    4233e3 <__flatcc_fb_clear_parser@@Base+0x1673>
  42321a:	mov    rdi,r14
  42321d:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  423222:	mov    rdi,r14
  423225:	mov    rsi,r15
  423228:	call   421eb0 <__flatcc_fb_clear_parser@@Base+0x140>
  42322d:	test   bpl,0x1
  423231:	jne    42325e <__flatcc_fb_clear_parser@@Base+0x14ee>
  423233:	mov    WORD PTR [r15+0x10],0x1
  42323a:	mov    rdi,r14
  42323d:	mov    rsi,r12
  423240:	mov    rdx,rbx
  423243:	jmp    423277 <__flatcc_fb_clear_parser@@Base+0x1507>
  423245:	mov    BYTE PTR [r15],0x1
  423249:	mov    WORD PTR [r15+0x10],0x6
  423250:	test   r13,r13
  423253:	jne    423326 <__flatcc_fb_clear_parser@@Base+0x15b6>
  423259:	jmp    42343c <__flatcc_fb_clear_parser@@Base+0x16cc>
  42325e:	test   r13,r13
  423261:	je     423292 <__flatcc_fb_clear_parser@@Base+0x1522>
  423263:	mov    WORD PTR [r15+0x10],0x1
  42326a:	lea    rdx,[rip+0x2317f]        # 4463f0 <fb_schema_table_deleted@@Base+0xca8>
  423271:	mov    rdi,r14
  423274:	mov    rsi,r12
  423277:	xor    ecx,ecx
  423279:	xor    r8d,r8d
  42327c:	xor    r9d,r9d
  42327f:	add    rsp,0x8
  423283:	pop    rbx
  423284:	pop    r12
  423286:	pop    r13
  423288:	pop    r14
  42328a:	pop    r15
  42328c:	pop    rbp
  42328d:	jmp    41b6e0 <__flatcc_error_report@@Base>
  423292:	add    rsp,0x8
  423296:	pop    rbx
  423297:	pop    r12
  423299:	pop    r13
  42329b:	pop    r14
  42329d:	pop    r15
  42329f:	pop    rbp
  4232a0:	ret    
  4232a1:	cmp    BYTE PTR [rbp+0x0],0x2e
  4232a5:	jne    423337 <__flatcc_fb_clear_parser@@Base+0x15c7>
  4232ab:	mov    WORD PTR [r15+0x10],0x1
  4232b2:	lea    rdx,[rip+0xb296]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  4232b9:	mov    rax,r14
  4232bc:	cmp    QWORD PTR [rax+0x28],r12
  4232c0:	jbe    4232de <__flatcc_fb_clear_parser@@Base+0x156e>
  4232c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4232cc:	nop    DWORD PTR [rax+0x0]
  4232d0:	mov    rax,QWORD PTR [rax]
  4232d3:	test   rax,rax
  4232d6:	je     4232eb <__flatcc_fb_clear_parser@@Base+0x157b>
  4232d8:	cmp    QWORD PTR [rax+0x28],r12
  4232dc:	ja     4232d0 <__flatcc_fb_clear_parser@@Base+0x1560>
  4232de:	cmp    QWORD PTR [rax+0x30],r12
  4232e2:	jbe    4232d0 <__flatcc_fb_clear_parser@@Base+0x1560>
  4232e4:	mov    rdx,QWORD PTR [rax+0x318]
  4232eb:	mov    rcx,QWORD PTR [r12+0x10]
  4232f0:	mov    r8,QWORD PTR [r12+0x18]
  4232f5:	lea    rbx,[rip+0x2319e]        # 44649a <fb_schema_table_deleted@@Base+0xd52>
  4232fc:	lea    rsi,[rip+0x228ed]        # 445bf0 <fb_schema_table_deleted@@Base+0x4a8>
  423303:	mov    rdi,r14
  423306:	mov    eax,0x0
  42330b:	push   rbx
  42330c:	push   rbp
  42330d:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  423312:	add    rsp,0x10
  423316:	inc    DWORD PTR [r14+0xd0]
  42331d:	test   r13,r13
  423320:	je     42343c <__flatcc_fb_clear_parser@@Base+0x16cc>
  423326:	cmp    WORD PTR [r15+0x10],0x6
  42332c:	je     42341b <__flatcc_fb_clear_parser@@Base+0x16ab>
  423332:	jmp    42343c <__flatcc_fb_clear_parser@@Base+0x16cc>
  423337:	test   r13,r13
  42333a:	je     42331d <__flatcc_fb_clear_parser@@Base+0x15ad>
  42333c:	vxorps xmm0,xmm0,XMMWORD PTR [rip+0x2289c]        # 445be0 <fb_schema_table_deleted@@Base+0x498>
  423344:	vmovlps QWORD PTR [r15],xmm0
  423349:	test   r13,r13
  42334c:	jne    423326 <__flatcc_fb_clear_parser@@Base+0x15b6>
  42334e:	jmp    42343c <__flatcc_fb_clear_parser@@Base+0x16cc>
  423353:	add    rdx,rcx
  423356:	mov    bl,0x1
  423358:	mov    rdi,rsi
  42335b:	mov    r9,rdx
  42335e:	cmp    r9,rcx
  423361:	je     423394 <__flatcc_fb_clear_parser@@Base+0x1624>
  423363:	cmp    r9,r8
  423366:	je     423394 <__flatcc_fb_clear_parser@@Base+0x1624>
  423368:	test   bl,bl
  42336a:	je     42338d <__flatcc_fb_clear_parser@@Base+0x161d>
  42336c:	movsx  ecx,BYTE PTR [r9]
  423370:	lea    edx,[rcx-0x45]
  423373:	cmp    edx,0x2b
  423376:	ja     423388 <__flatcc_fb_clear_parser@@Base+0x1618>
  423378:	movabs rsi,0x80100000801
  423382:	bt     rsi,rdx
  423386:	jb     423394 <__flatcc_fb_clear_parser@@Base+0x1624>
  423388:	cmp    ecx,0x2e
  42338b:	je     423394 <__flatcc_fb_clear_parser@@Base+0x1624>
  42338d:	mov    QWORD PTR [r15],rdi
  423390:	cmp    al,0x2d
  423392:	jne    423404 <__flatcc_fb_clear_parser@@Base+0x1694>
  423394:	mov    WORD PTR [r15+0x10],0x1
  42339b:	lea    rdx,[rip+0x230cc]        # 44646e <fb_schema_table_deleted@@Base+0xd26>
  4233a2:	jmp    4233f1 <__flatcc_fb_clear_parser@@Base+0x1681>
  4233a4:	mov    dil,0x1
  4233a7:	cmp    rbp,0x2
  4233ab:	je     4233e3 <__flatcc_fb_clear_parser@@Base+0x1673>
  4233ad:	cmp    r8,rcx
  4233b0:	je     4233da <__flatcc_fb_clear_parser@@Base+0x166a>
  4233b2:	mov    cl,BYTE PTR [r8]
  4233b5:	test   dil,dil
  4233b8:	je     4233cb <__flatcc_fb_clear_parser@@Base+0x165b>
  4233ba:	lea    eax,[rcx-0x30]
  4233bd:	cmp    al,0xa
  4233bf:	jb     4233e3 <__flatcc_fb_clear_parser@@Base+0x1673>
  4233c1:	or     cl,0x20
  4233c4:	lea    eax,[rcx-0x61]
  4233c7:	cmp    al,0x6
  4233c9:	jb     4233e3 <__flatcc_fb_clear_parser@@Base+0x1673>
  4233cb:	cmp    cl,0x2e
  4233ce:	je     4233e3 <__flatcc_fb_clear_parser@@Base+0x1673>
  4233d0:	cmp    cl,0x50
  4233d3:	je     4233e3 <__flatcc_fb_clear_parser@@Base+0x1673>
  4233d5:	cmp    cl,0x70
  4233d8:	je     4233e3 <__flatcc_fb_clear_parser@@Base+0x1673>
  4233da:	mov    QWORD PTR [r15],rdx
  4233dd:	cmp    r9b,0x2d
  4233e1:	jne    423404 <__flatcc_fb_clear_parser@@Base+0x1694>
  4233e3:	mov    WORD PTR [r15+0x10],0x1
  4233ea:	lea    rdx,[rip+0x23062]        # 446453 <fb_schema_table_deleted@@Base+0xd0b>
  4233f1:	mov    rdi,r14
  4233f4:	mov    rsi,r12
  4233f7:	xor    ecx,ecx
  4233f9:	xor    r8d,r8d
  4233fc:	xor    r9d,r9d
  4233ff:	call   41b6e0 <__flatcc_error_report@@Base>
  423404:	test   r13,r13
  423407:	je     42343c <__flatcc_fb_clear_parser@@Base+0x16cc>
  423409:	neg    QWORD PTR [r15]
  42340c:	mov    WORD PTR [r15+0x10],0x4
  423413:	cmp    WORD PTR [r15+0x10],0x6
  423419:	jne    42343c <__flatcc_fb_clear_parser@@Base+0x16cc>
  42341b:	mov    WORD PTR [r15+0x10],0x1
  423422:	lea    rdx,[rip+0x23007]        # 446430 <fb_schema_table_deleted@@Base+0xce8>
  423429:	mov    rdi,r14
  42342c:	mov    rsi,r12
  42342f:	xor    ecx,ecx
  423431:	xor    r8d,r8d
  423434:	xor    r9d,r9d
  423437:	call   41b6e0 <__flatcc_error_report@@Base>
  42343c:	mov    rdi,r14
  42343f:	add    rsp,0x8
  423443:	pop    rbx
  423444:	pop    r12
  423446:	pop    r13
  423448:	pop    r14
  42344a:	pop    r15
  42344c:	pop    rbp
  42344d:	jmp    421c70 <__flatcc_fb_parse@@Base+0x5f90>
  423452:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42345c:	nop    DWORD PTR [rax+0x0]
  423460:	push   rbp
  423461:	push   r15
  423463:	push   r14
  423465:	push   r12
  423467:	push   rbx
  423468:	mov    r15,rsi
  42346b:	mov    r12,rdi
  42346e:	mov    r14,QWORD PTR [rdi+0x48]
  423472:	mov    WORD PTR [rsi+0x10],0x1
  423478:	xor    ebp,ebp
  42347a:	cmp    QWORD PTR [r14+0x20],0x5b
  42347f:	jne    4234ca <__flatcc_fb_clear_parser@@Base+0x175a>
  423481:	xor    ebp,ebp
  423483:	mov    rbx,r14
  423486:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423490:	mov    rdi,r12
  423493:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  423498:	test   rbx,rbx
  42349b:	je     4234ab <__flatcc_fb_clear_parser@@Base+0x173b>
  42349d:	inc    ebp
  42349f:	mov    rbx,QWORD PTR [r12+0x48]
  4234a4:	cmp    QWORD PTR [rbx+0x20],0x5b
  4234a9:	je     423490 <__flatcc_fb_clear_parser@@Base+0x1720>
  4234ab:	cmp    ebp,0x2
  4234ae:	jb     4234ca <__flatcc_fb_clear_parser@@Base+0x175a>
  4234b0:	lea    rdx,[rip+0x230ed]        # 4465a4 <fb_schema_table_deleted@@Base+0xe5c>
  4234b7:	mov    rdi,r12
  4234ba:	mov    rsi,r14
  4234bd:	xor    ecx,ecx
  4234bf:	xor    r8d,r8d
  4234c2:	xor    r9d,r9d
  4234c5:	call   41b6e0 <__flatcc_error_report@@Base>
  4234ca:	mov    rcx,QWORD PTR [r12+0x48]
  4234cf:	mov    rax,QWORD PTR [rcx+0x20]
  4234d3:	lea    rdx,[rax+0x3e7]
  4234da:	cmp    rdx,0x1b
  4234de:	ja     423627 <__flatcc_fb_clear_parser@@Base+0x18b7>
  4234e4:	mov    esi,0x97ed7fb
  4234e9:	bt     rsi,rdx
  4234ed:	jae    423612 <__flatcc_fb_clear_parser@@Base+0x18a2>
  4234f3:	mov    QWORD PTR [r15],rcx
  4234f6:	cmp    ebp,0x1
  4234f9:	mov    ax,0x7
  4234fd:	adc    ax,0x0
  423501:	mov    WORD PTR [r15+0x10],ax
  423506:	mov    rdi,r12
  423509:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  42350e:	neg    ebp
  423510:	mov    rbx,QWORD PTR [r12+0x48]
  423515:	cmp    QWORD PTR [rbx+0x20],0x5d
  42351a:	jne    423532 <__flatcc_fb_clear_parser@@Base+0x17c2>
  42351c:	mov    rdi,r12
  42351f:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  423524:	test   rbx,rbx
  423527:	je     423532 <__flatcc_fb_clear_parser@@Base+0x17c2>
  423529:	inc    ebp
  42352b:	cmp    ebp,0x1
  42352e:	jne    423510 <__flatcc_fb_clear_parser@@Base+0x17a0>
  423530:	jmp    42353a <__flatcc_fb_clear_parser@@Base+0x17ca>
  423532:	test   ebp,ebp
  423534:	je     4235bc <__flatcc_fb_clear_parser@@Base+0x184c>
  42353a:	test   r14,r14
  42353d:	je     42359c <__flatcc_fb_clear_parser@@Base+0x182c>
  42353f:	lea    rcx,[rip+0xb009]        # 42e54f <_IO_stdin_used@@Base+0x154f>
  423546:	mov    rax,r12
  423549:	cmp    QWORD PTR [rax+0x28],r14
  42354d:	jbe    42355e <__flatcc_fb_clear_parser@@Base+0x17ee>
  42354f:	nop
  423550:	mov    rax,QWORD PTR [rax]
  423553:	test   rax,rax
  423556:	je     42356b <__flatcc_fb_clear_parser@@Base+0x17fb>
  423558:	cmp    QWORD PTR [rax+0x28],r14
  42355c:	ja     423550 <__flatcc_fb_clear_parser@@Base+0x17e0>
  42355e:	cmp    QWORD PTR [rax+0x30],r14
  423562:	jbe    423550 <__flatcc_fb_clear_parser@@Base+0x17e0>
  423564:	mov    rcx,QWORD PTR [rax+0x318]
  42356b:	mov    r8,QWORD PTR [r14+0x10]
  42356f:	mov    r9,QWORD PTR [r14+0x18]
  423573:	mov    ebp,DWORD PTR [r14+0x8]
  423577:	lea    rsi,[rip+0x226cf]        # 445c4d <fb_schema_table_deleted@@Base+0x505>
  42357e:	lea    rdx,[rip+0x2307a]        # 4465ff <fb_schema_table_deleted@@Base+0xeb7>
  423585:	mov    rdi,r12
  423588:	mov    eax,0x0
  42358d:	push   QWORD PTR [r14]
  423590:	push   rbp
  423591:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  423596:	add    rsp,0x10
  42359a:	jmp    4235b4 <__flatcc_fb_clear_parser@@Base+0x1844>
  42359c:	lea    rsi,[rip+0x2269f]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  4235a3:	lea    rdx,[rip+0x23055]        # 4465ff <fb_schema_table_deleted@@Base+0xeb7>
  4235aa:	mov    rdi,r12
  4235ad:	xor    eax,eax
  4235af:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  4235b4:	inc    DWORD PTR [r12+0xd0]
  4235bc:	mov    r15,QWORD PTR [r12+0x48]
  4235c1:	cmp    QWORD PTR [r15+0x20],0x5d
  4235c6:	jne    423609 <__flatcc_fb_clear_parser@@Base+0x1899>
  4235c8:	mov    rdi,r12
  4235cb:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  4235d0:	test   r15,r15
  4235d3:	je     423609 <__flatcc_fb_clear_parser@@Base+0x1899>
  4235d5:	lea    rdx,[rip+0x23044]        # 446620 <fb_schema_table_deleted@@Base+0xed8>
  4235dc:	mov    rdi,r12
  4235df:	mov    rsi,r15
  4235e2:	mov    rcx,r14
  4235e5:	xor    r8d,r8d
  4235e8:	xor    r9d,r9d
  4235eb:	call   41b6e0 <__flatcc_error_report@@Base>
  4235f0:	mov    rbx,QWORD PTR [r12+0x48]
  4235f5:	cmp    QWORD PTR [rbx+0x20],0x5d
  4235fa:	jne    423609 <__flatcc_fb_clear_parser@@Base+0x1899>
  4235fc:	mov    rdi,r12
  4235ff:	call   421c70 <__flatcc_fb_parse@@Base+0x5f90>
  423604:	test   rbx,rbx
  423607:	jne    4235f0 <__flatcc_fb_clear_parser@@Base+0x1880>
  423609:	pop    rbx
  42360a:	pop    r12
  42360c:	pop    r14
  42360e:	pop    r15
  423610:	pop    rbp
  423611:	ret    
  423612:	cmp    rdx,0x19
  423616:	jne    423627 <__flatcc_fb_clear_parser@@Base+0x18b7>
  423618:	mov    QWORD PTR [r15],rcx
  42361b:	cmp    ebp,0x1
  42361e:	mov    ax,0x9
  423622:	jmp    4234fd <__flatcc_fb_clear_parser@@Base+0x178d>
  423627:	cmp    rax,0x9
  42362b:	je     423643 <__flatcc_fb_clear_parser@@Base+0x18d3>
  42362d:	lea    rsi,[rip+0x2260e]        # 445c42 <fb_schema_table_deleted@@Base+0x4fa>
  423634:	cmp    rax,0x5d
  423638:	jne    423663 <__flatcc_fb_clear_parser@@Base+0x18f3>
  42363a:	lea    rdx,[rip+0x22f8b]        # 4465cc <fb_schema_table_deleted@@Base+0xe84>
  423641:	jmp    42366a <__flatcc_fb_clear_parser@@Base+0x18fa>
  423643:	mov    rdi,r12
  423646:	mov    rsi,r15
  423649:	call   422b70 <__flatcc_fb_clear_parser@@Base+0xe00>
  42364e:	cmp    ebp,0x1
  423651:	mov    ax,0xb
  423655:	adc    ax,0x0
  423659:	mov    WORD PTR [r15+0x10],ax
  42365e:	jmp    42350e <__flatcc_fb_clear_parser@@Base+0x179e>
  423663:	lea    rdx,[rip+0x22f7e]        # 4465e8 <fb_schema_table_deleted@@Base+0xea0>
  42366a:	mov    rdi,r12
  42366d:	xor    eax,eax
  42366f:	call   41b5c0 <__flatcc_fb_print_error@@Base>
  423674:	inc    DWORD PTR [r12+0xd0]
  42367c:	jmp    42350e <__flatcc_fb_clear_parser@@Base+0x179e>
  423681:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42368b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000423690 <__flatcc_fb_build_schema@@Base>:
  423690:	push   rbp
  423691:	mov    rbp,rsp
  423694:	push   r15
  423696:	push   r14
  423698:	push   r13
  42369a:	push   r12
  42369c:	push   rbx
  42369d:	and    rsp,0xffffffffffffffe0
  4236a1:	sub    rsp,0x140
  4236a8:	mov    r12,rdi
  4236ab:	lea    r14,[rdi+0x1f8]
  4236b2:	add    rdi,0x320
  4236b9:	mov    QWORD PTR [rsp+0x58],rdi
  4236be:	mov    rsi,r14
  4236c1:	call   418e70 <ptr_set_find_item@@Base>
  4236c6:	test   rax,rax
  4236c9:	je     425355 <__flatcc_fb_build_schema@@Base+0x1cc5>
  4236cf:	mov    r15,QWORD PTR [r12+0x238]
  4236d7:	test   r15,r15
  4236da:	je     423946 <__flatcc_fb_build_schema@@Base+0x2b6>
  4236e0:	mov    r13d,0x811c9dc5
  4236e6:	cmp    WORD PTR [r15+0x10],0x4
  4236ec:	jbe    423704 <__flatcc_fb_build_schema@@Base+0x74>
  4236ee:	xchg   ax,ax
  4236f0:	mov    r15,QWORD PTR [r15]
  4236f3:	test   r15,r15
  4236f6:	je     423946 <__flatcc_fb_build_schema@@Base+0x2b6>
  4236fc:	cmp    WORD PTR [r15+0x10],0x4
  423702:	ja     4236f0 <__flatcc_fb_build_schema@@Base+0x60>
  423704:	mov    rdi,QWORD PTR [r15+0x18]
  423708:	mov    eax,0x811c9dc5
  42370d:	test   rdi,rdi
  423710:	je     423820 <__flatcc_fb_build_schema@@Base+0x190>
  423716:	mov    r8,QWORD PTR [rdi]
  423719:	test   r8,r8
  42371c:	je     423820 <__flatcc_fb_build_schema@@Base+0x190>
  423722:	mov    eax,0x811c9dc5
  423727:	jmp    423745 <__flatcc_fb_build_schema@@Base+0xb5>
  423729:	nop    DWORD PTR [rax+0x0]
  423730:	xor    eax,0x2e
  423733:	imul   eax,eax,0x1000193
  423739:	mov    r8,QWORD PTR [r8]
  42373c:	test   r8,r8
  42373f:	je     423820 <__flatcc_fb_build_schema@@Base+0x190>
  423745:	mov    rdx,QWORD PTR [r8+0x8]
  423749:	mov    r10,QWORD PTR [rdx+0x8]
  42374d:	test   r10,r10
  423750:	je     423730 <__flatcc_fb_build_schema@@Base+0xa0>
  423752:	mov    rsi,QWORD PTR [rdx]
  423755:	lea    r9,[r10-0x1]
  423759:	mov    rdx,r10
  42375c:	and    rdx,0x7
  423760:	je     42378a <__flatcc_fb_build_schema@@Base+0xfa>
  423762:	xor    ebx,ebx
  423764:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42376e:	xchg   ax,ax
  423770:	movzx  ecx,BYTE PTR [rsi+rbx*1]
  423774:	xor    ecx,eax
  423776:	imul   eax,ecx,0x1000193
  42377c:	inc    rbx
  42377f:	cmp    rdx,rbx
  423782:	jne    423770 <__flatcc_fb_build_schema@@Base+0xe0>
  423784:	sub    r10,rbx
  423787:	add    rsi,rbx
  42378a:	cmp    r9,0x7
  42378e:	jb     423730 <__flatcc_fb_build_schema@@Base+0xa0>
  423790:	xor    ebx,ebx
  423792:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42379c:	nop    DWORD PTR [rax+0x0]
  4237a0:	movzx  ecx,BYTE PTR [rsi+rbx*1]
  4237a4:	xor    ecx,eax
  4237a6:	imul   eax,ecx,0x1000193
  4237ac:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x1]
  4237b1:	xor    ecx,eax
  4237b3:	imul   eax,ecx,0x1000193
  4237b9:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x2]
  4237be:	xor    ecx,eax
  4237c0:	imul   eax,ecx,0x1000193
  4237c6:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x3]
  4237cb:	xor    ecx,eax
  4237cd:	imul   eax,ecx,0x1000193
  4237d3:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x4]
  4237d8:	xor    ecx,eax
  4237da:	imul   eax,ecx,0x1000193
  4237e0:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x5]
  4237e5:	xor    ecx,eax
  4237e7:	imul   eax,ecx,0x1000193
  4237ed:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x6]
  4237f2:	xor    ecx,eax
  4237f4:	imul   eax,ecx,0x1000193
  4237fa:	movzx  ecx,BYTE PTR [rsi+rbx*1+0x7]
  4237ff:	xor    ecx,eax
  423801:	imul   eax,ecx,0x1000193
  423807:	add    rbx,0x8
  42380b:	cmp    r10,rbx
  42380e:	jne    4237a0 <__flatcc_fb_build_schema@@Base+0x110>
  423810:	jmp    423730 <__flatcc_fb_build_schema@@Base+0xa0>
  423815:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42381f:	nop
  423820:	mov    rcx,QWORD PTR [r15+0x8]
  423824:	mov    r9,QWORD PTR [rcx+0x8]
  423828:	test   r9,r9
  42382b:	je     4238f0 <__flatcc_fb_build_schema@@Base+0x260>
  423831:	mov    rdx,QWORD PTR [rcx]
  423834:	lea    r8,[r9-0x1]
  423838:	mov    rcx,r9
  42383b:	and    rcx,0x7
  42383f:	je     42386a <__flatcc_fb_build_schema@@Base+0x1da>
  423841:	xor    esi,esi
  423843:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42384d:	nop    DWORD PTR [rax]
  423850:	movzx  ebx,BYTE PTR [rdx+rsi*1]
  423854:	xor    ebx,eax
  423856:	imul   eax,ebx,0x1000193
  42385c:	inc    rsi
  42385f:	cmp    rcx,rsi
  423862:	jne    423850 <__flatcc_fb_build_schema@@Base+0x1c0>
  423864:	sub    r9,rsi
  423867:	add    rdx,rsi
  42386a:	cmp    r8,0x7
  42386e:	jb     4238f0 <__flatcc_fb_build_schema@@Base+0x260>
  423874:	xor    esi,esi
  423876:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423880:	movzx  ecx,BYTE PTR [rdx+rsi*1]
  423884:	xor    ecx,eax
  423886:	imul   eax,ecx,0x1000193
  42388c:	movzx  ecx,BYTE PTR [rdx+rsi*1+0x1]
  423891:	xor    ecx,eax
  423893:	imul   eax,ecx,0x1000193
  423899:	movzx  ecx,BYTE PTR [rdx+rsi*1+0x2]
  42389e:	xor    ecx,eax
  4238a0:	imul   eax,ecx,0x1000193
  4238a6:	movzx  ecx,BYTE PTR [rdx+rsi*1+0x3]
  4238ab:	xor    ecx,eax
  4238ad:	imul   eax,ecx,0x1000193
  4238b3:	movzx  ecx,BYTE PTR [rdx+rsi*1+0x4]
  4238b8:	xor    ecx,eax
  4238ba:	imul   eax,ecx,0x1000193
  4238c0:	movzx  ecx,BYTE PTR [rdx+rsi*1+0x5]
  4238c5:	xor    ecx,eax
  4238c7:	imul   eax,ecx,0x1000193
  4238cd:	movzx  ecx,BYTE PTR [rdx+rsi*1+0x6]
  4238d2:	xor    ecx,eax
  4238d4:	imul   eax,ecx,0x1000193
  4238da:	movzx  ecx,BYTE PTR [rdx+rsi*1+0x7]
  4238df:	xor    ecx,eax
  4238e1:	imul   eax,ecx,0x1000193
  4238e7:	add    rsi,0x8
  4238eb:	cmp    r9,rsi
  4238ee:	jne    423880 <__flatcc_fb_build_schema@@Base+0x1f0>
  4238f0:	test   eax,eax
  4238f2:	cmove  eax,r13d
  4238f6:	mov    DWORD PTR [r15+0xa0],eax
  4238fd:	mov    QWORD PTR [r15+0x20],r14
  423901:	test   rdi,rdi
  423904:	je     4236f0 <__flatcc_fb_build_schema@@Base+0x60>
  42390a:	add    rdi,0x8
  42390e:	mov    rsi,r15
  423911:	mov    edx,0x1
  423916:	call   419490 <fb_symbol_table_insert_item@@Base>
  42391b:	test   rax,rax
  42391e:	je     4236f0 <__flatcc_fb_build_schema@@Base+0x60>
  423924:	mov    rsi,QWORD PTR [r15+0x8]
  423928:	mov    rcx,QWORD PTR [rax+0x8]
  42392c:	mov    rdi,r12
  42392f:	lea    rdx,[rip+0x2313f]        # 446a75 <fb_schema_table_deleted@@Base+0x132d>
  423936:	xor    r8d,r8d
  423939:	xor    r9d,r9d
  42393c:	call   41b6e0 <__flatcc_error_report@@Base>
  423941:	jmp    4236f0 <__flatcc_fb_build_schema@@Base+0x60>
  423946:	mov    rbx,QWORD PTR [r12+0x200]
  42394e:	test   rbx,rbx
  423951:	je     42399f <__flatcc_fb_build_schema@@Base+0x30f>
  423953:	lea    r14,[rip+0x23137]        # 446a91 <fb_schema_table_deleted@@Base+0x1349>
  42395a:	jmp    423968 <__flatcc_fb_build_schema@@Base+0x2d8>
  42395c:	nop    DWORD PTR [rax+0x0]
  423960:	mov    rbx,QWORD PTR [rbx]
  423963:	test   rbx,rbx
  423966:	je     42399f <__flatcc_fb_build_schema@@Base+0x30f>
  423968:	mov    rdi,QWORD PTR [r12+0x260]
  423970:	add    rdi,0x20
  423974:	mov    rsi,rbx
  423977:	mov    edx,0x1
  42397c:	call   42c150 <fb_name_table_insert_item@@Base>
  423981:	test   rax,rax
  423984:	je     423960 <__flatcc_fb_build_schema@@Base+0x2d0>
  423986:	mov    r8,QWORD PTR [rbx+0x8]
  42398a:	mov    r9d,DWORD PTR [rbx+0x10]
  42398e:	mov    rdi,r12
  423991:	xor    esi,esi
  423993:	mov    rdx,r14
  423996:	xor    ecx,ecx
  423998:	call   41b6e0 <__flatcc_error_report@@Base>
  42399d:	jmp    423960 <__flatcc_fb_build_schema@@Base+0x2d0>
  42399f:	lea    r14,[rip+0x2c3fa]        # 44fda0 <fb_value_set_deleted@@Base+0x6320>
  4239a6:	xor    r15d,r15d
  4239a9:	jmp    4239c1 <__flatcc_fb_build_schema@@Base+0x331>
  4239ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4239b0:	inc    r15
  4239b3:	add    r14,0x8
  4239b7:	cmp    r15,0xc
  4239bb:	je     423a5f <__flatcc_fb_build_schema@@Base+0x3cf>
  4239c1:	mov    rbx,QWORD PTR [r12+0x60]
  4239c6:	lea    rax,[rbx+0x30]
  4239ca:	cmp    rax,QWORD PTR [r12+0x50]
  4239cf:	jbe    423a0f <__flatcc_fb_build_schema@@Base+0x37f>
  4239d1:	mov    edi,0x10000
  4239d6:	mov    esi,0x1
  4239db:	call   406140 <calloc@plt>
  4239e0:	test   rax,rax
  4239e3:	je     42532b <__flatcc_fb_build_schema@@Base+0x1c9b>
  4239e9:	mov    rcx,QWORD PTR [r12+0x58]
  4239ee:	mov    QWORD PTR [rax],rcx
  4239f1:	mov    QWORD PTR [r12+0x58],rax
  4239f6:	lea    rbx,[rax+0x10]
  4239fa:	mov    QWORD PTR [r12+0x60],rbx
  4239ff:	lea    rcx,[rax+0x10000]
  423a06:	mov    QWORD PTR [r12+0x50],rcx
  423a0b:	add    rax,0x40
  423a0f:	mov    QWORD PTR [r12+0x60],rax
  423a14:	mov    DWORD PTR [rbx+0x20],r15d
  423a18:	mov    rdi,QWORD PTR [r14]
  423a1b:	mov    QWORD PTR [rbx+0x8],rdi
  423a1f:	call   4060d0 <strlen@plt>
  423a24:	mov    DWORD PTR [rbx+0x10],eax
  423a27:	mov    WORD PTR [rbx+0x18],0x2
  423a2d:	mov    QWORD PTR [rbx],0x0
  423a34:	mov    rdi,QWORD PTR [r12+0x260]
  423a3c:	add    rdi,0x20
  423a40:	mov    rsi,rbx
  423a43:	mov    edx,0x1
  423a48:	call   42c150 <fb_name_table_insert_item@@Base>
  423a4d:	test   rax,rax
  423a50:	je     4239b0 <__flatcc_fb_build_schema@@Base+0x320>
  423a56:	mov    DWORD PTR [rax+0x20],r15d
  423a5a:	jmp    4239b0 <__flatcc_fb_build_schema@@Base+0x320>
  423a5f:	cmp    DWORD PTR [r12+0x124],0x0
  423a68:	jne    423aa6 <__flatcc_fb_build_schema@@Base+0x416>
  423a6a:	mov    rbx,QWORD PTR [r12+0x238]
  423a72:	test   rbx,rbx
  423a75:	jne    423a88 <__flatcc_fb_build_schema@@Base+0x3f8>
  423a77:	jmp    424f65 <__flatcc_fb_build_schema@@Base+0x18d5>
  423a7c:	nop    DWORD PTR [rax+0x0]
  423a80:	mov    rbx,QWORD PTR [rbx]
  423a83:	test   rbx,rbx
  423a86:	je     423aa6 <__flatcc_fb_build_schema@@Base+0x416>
  423a88:	cmp    WORD PTR [rbx+0x10],0x3
  423a8d:	jne    423a80 <__flatcc_fb_build_schema@@Base+0x3f0>
  423a8f:	mov    rdi,r12
  423a92:	mov    rsi,rbx
  423a95:	call   4253e0 <__flatcc_fb_build_schema@@Base+0x1d50>
  423a9a:	test   eax,eax
  423a9c:	je     423a80 <__flatcc_fb_build_schema@@Base+0x3f0>
  423a9e:	mov    WORD PTR [rbx+0x58],0x1
  423aa4:	jmp    423a80 <__flatcc_fb_build_schema@@Base+0x3f0>
  423aa6:	mov    rbx,QWORD PTR [r12+0x238]
  423aae:	test   rbx,rbx
  423ab1:	je     424f65 <__flatcc_fb_build_schema@@Base+0x18d5>
  423ab7:	lea    r13,[rip+0x22d72]        # 446830 <fb_schema_table_deleted@@Base+0x10e8>
  423abe:	lea    r14,[rip+0x23624]        # 4470e9 <fb_schema_table_deleted@@Base+0x19a1>
  423ac5:	lea    r15,[rip+0x235f3]        # 4470bf <fb_schema_table_deleted@@Base+0x1977>
  423acc:	jmp    423afa <__flatcc_fb_build_schema@@Base+0x46a>
  423ace:	cmp    DWORD PTR [r12+0x124],0x0
  423ad7:	je     423aee <__flatcc_fb_build_schema@@Base+0x45e>
  423ad9:	mov    rdi,r12
  423adc:	mov    rsi,rbx
  423adf:	call   4253e0 <__flatcc_fb_build_schema@@Base+0x1d50>
  423ae4:	test   eax,eax
  423ae6:	je     423aee <__flatcc_fb_build_schema@@Base+0x45e>
  423ae8:	mov    WORD PTR [rbx+0x58],0x1
  423aee:	mov    rbx,QWORD PTR [rbx]
  423af1:	test   rbx,rbx
  423af4:	je     423e2f <__flatcc_fb_build_schema@@Base+0x79f>
  423afa:	movzx  eax,WORD PTR [rbx+0x10]
  423afe:	cmp    rax,0x4
  423b02:	ja     423e0a <__flatcc_fb_build_schema@@Base+0x77a>
  423b08:	movsxd rax,DWORD PTR [r13+rax*4+0x0]
  423b0d:	add    rax,r13
  423b10:	jmp    rax
  423b12:	cmp    WORD PTR [rbx+0x58],0x0
  423b17:	je     423b32 <__flatcc_fb_build_schema@@Base+0x4a2>
  423b19:	mov    rsi,QWORD PTR [rbx+0x8]
  423b1d:	mov    rdi,r12
  423b20:	mov    rdx,r15
  423b23:	xor    ecx,ecx
  423b25:	xor    r8d,r8d
  423b28:	xor    r9d,r9d
  423b2b:	call   41b6e0 <__flatcc_error_report@@Base>
  423b30:	jmp    423ae8 <__flatcc_fb_build_schema@@Base+0x458>
  423b32:	mov    rsi,QWORD PTR [rbx+0x38]
  423b36:	mov    rdi,r12
  423b39:	mov    edx,0x10
  423b3e:	lea    rcx,[rsp+0x60]
  423b43:	call   425e70 <__flatcc_fb_build_schema@@Base+0x27e0>
  423b48:	mov    WORD PTR [rbx+0xa4],ax
  423b4f:	mov    rax,QWORD PTR [rsp+0x80]
  423b57:	test   rax,rax
  423b5a:	je     423bad <__flatcc_fb_build_schema@@Base+0x51d>
  423b5c:	mov    rax,QWORD PTR [rax+0x10]
  423b60:	mov    rcx,rax
  423b63:	sub    rcx,0x1
  423b67:	jb     423b8d <__flatcc_fb_build_schema@@Base+0x4fd>
  423b69:	cmp    rcx,0xff
  423b70:	ja     423b8d <__flatcc_fb_build_schema@@Base+0x4fd>
  423b72:	mov    ecx,0x1
  423b77:	nop    WORD PTR [rax+rax*1+0x0]
  423b80:	cmp    rcx,rax
  423b83:	je     423ba6 <__flatcc_fb_build_schema@@Base+0x516>
  423b85:	add    rcx,rcx
  423b88:	cmp    rcx,rax
  423b8b:	jbe    423b80 <__flatcc_fb_build_schema@@Base+0x4f0>
  423b8d:	mov    rsi,QWORD PTR [rbx+0x8]
  423b91:	mov    rdi,r12
  423b94:	mov    rdx,r14
  423b97:	xor    ecx,ecx
  423b99:	xor    r8d,r8d
  423b9c:	xor    r9d,r9d
  423b9f:	call   41b6e0 <__flatcc_error_report@@Base>
  423ba4:	jmp    423bad <__flatcc_fb_build_schema@@Base+0x51d>
  423ba6:	mov    WORD PTR [rbx+0xb0],ax
  423bad:	mov    r15,QWORD PTR [rbx+0x28]
  423bb1:	test   r15,r15
  423bb4:	je     423d6e <__flatcc_fb_build_schema@@Base+0x6de>
  423bba:	lea    r14,[rbx+0x60]
  423bbe:	mov    DWORD PTR [rsp+0x4],0x0
  423bc6:	jmp    423bf9 <__flatcc_fb_build_schema@@Base+0x569>
  423bc8:	nop    DWORD PTR [rax+rax*1+0x0]
  423bd0:	mov    rsi,QWORD PTR [r15+0x8]
  423bd4:	mov    rcx,QWORD PTR [rax+0x8]
  423bd8:	mov    rdi,r12
  423bdb:	lea    rdx,[rip+0x23550]        # 447132 <fb_schema_table_deleted@@Base+0x19ea>
  423be2:	xor    r8d,r8d
  423be5:	xor    r9d,r9d
  423be8:	call   41b6e0 <__flatcc_error_report@@Base>
  423bed:	mov    r15,QWORD PTR [r15]
  423bf0:	test   r15,r15
  423bf3:	je     423d2a <__flatcc_fb_build_schema@@Base+0x69a>
  423bf9:	mov    rdi,r14
  423bfc:	mov    rsi,r15
  423bff:	mov    edx,0x1
  423c04:	call   419490 <fb_symbol_table_insert_item@@Base>
  423c09:	test   rax,rax
  423c0c:	jne    423bd0 <__flatcc_fb_build_schema@@Base+0x540>
  423c0e:	cmp    WORD PTR [r15+0x10],0x5
  423c14:	jne    423d7a <__flatcc_fb_build_schema@@Base+0x6ea>
  423c1a:	xor    eax,eax
  423c1c:	cmp    DWORD PTR [r12+0x118],0x0
  423c25:	setne  al
  423c28:	shl    eax,0x7
  423c2b:	lea    edx,[rax+0x4]
  423c2e:	cmp    DWORD PTR [r12+0x114],0x0
  423c37:	cmove  edx,eax
  423c3a:	mov    rsi,QWORD PTR [r15+0x60]
  423c3e:	mov    rdi,r12
  423c41:	lea    rcx,[rsp+0x60]
  423c46:	call   425e70 <__flatcc_fb_build_schema@@Base+0x27e0>
  423c4b:	mov    WORD PTR [r15+0x70],ax
  423c50:	movzx  ecx,WORD PTR [r15+0x28]
  423c55:	cmp    cx,0x8
  423c59:	je     423c9d <__flatcc_fb_build_schema@@Base+0x60d>
  423c5b:	cmp    cx,0xc
  423c5f:	jne    423d8a <__flatcc_fb_build_schema@@Base+0x6fa>
  423c65:	mov    rsi,QWORD PTR [rbx+0x18]
  423c69:	mov    rdx,QWORD PTR [r15+0x18]
  423c6d:	mov    rdi,r12
  423c70:	xor    ecx,ecx
  423c72:	call   426000 <__flatcc_fb_build_schema@@Base+0x2970>
  423c77:	test   rax,rax
  423c7a:	je     423cc8 <__flatcc_fb_build_schema@@Base+0x638>
  423c7c:	mov    QWORD PTR [r15+0x18],rax
  423c80:	mov    WORD PTR [r15+0x28],0xe
  423c87:	movzx  ecx,WORD PTR [rax+0x10]
  423c8b:	cmp    cx,0x1
  423c8f:	jne    423cea <__flatcc_fb_build_schema@@Base+0x65a>
  423c91:	cmp    BYTE PTR [r15+0x70],0x0
  423c96:	jns    423ca7 <__flatcc_fb_build_schema@@Base+0x617>
  423c98:	jmp    423dbe <__flatcc_fb_build_schema@@Base+0x72e>
  423c9d:	shr    eax,0x7
  423ca0:	and    eax,0x1
  423ca3:	add    DWORD PTR [rsp+0x4],eax
  423ca7:	cmp    WORD PTR [r15+0x58],0x0
  423cad:	je     423bed <__flatcc_fb_build_schema@@Base+0x55d>
  423cb3:	mov    rsi,QWORD PTR [r15+0x8]
  423cb7:	mov    rdi,r12
  423cba:	lea    rdx,[rip+0x235d0]        # 447291 <fb_schema_table_deleted@@Base+0x1b49>
  423cc1:	xor    ecx,ecx
  423cc3:	jmp    423be2 <__flatcc_fb_build_schema@@Base+0x552>
  423cc8:	mov    rsi,QWORD PTR [r15+0x18]
  423ccc:	mov    rdi,r12
  423ccf:	lea    rdx,[rip+0x234a2]        # 447178 <fb_schema_table_deleted@@Base+0x1a30>
  423cd6:	mov    rcx,r15
  423cd9:	call   41b910 <error_ref_sym@@Base>
  423cde:	mov    WORD PTR [r15+0x28],0x1
  423ce5:	jmp    423bed <__flatcc_fb_build_schema@@Base+0x55d>
  423cea:	cmp    DWORD PTR [r12+0x104],0x0
  423cf3:	je     423dd0 <__flatcc_fb_build_schema@@Base+0x740>
  423cf9:	cmp    cx,0x3
  423cfd:	jne    423de4 <__flatcc_fb_build_schema@@Base+0x754>
  423d03:	cmp    BYTE PTR [r15+0x70],0x0
  423d08:	jns    423ca7 <__flatcc_fb_build_schema@@Base+0x617>
  423d0a:	cmp    DWORD PTR [r12+0x100],0x0
  423d13:	je     423dbe <__flatcc_fb_build_schema@@Base+0x72e>
  423d19:	inc    DWORD PTR [rsp+0x4]
  423d1d:	cmp    WORD PTR [r15+0x58],0x0
  423d23:	jne    423cb3 <__flatcc_fb_build_schema@@Base+0x623>
  423d25:	jmp    423bed <__flatcc_fb_build_schema@@Base+0x55d>
  423d2a:	mov    eax,DWORD PTR [rsp+0x4]
  423d2e:	test   eax,eax
  423d30:	lea    r14,[rip+0x233b2]        # 4470e9 <fb_schema_table_deleted@@Base+0x19a1>
  423d37:	je     423d6e <__flatcc_fb_build_schema@@Base+0x6de>
  423d39:	or     BYTE PTR [rbx+0x12],0x8
  423d3d:	cmp    eax,0x2
  423d40:	jl     423d6e <__flatcc_fb_build_schema@@Base+0x6de>
  423d42:	cmp    DWORD PTR [r12+0x108],0x0
  423d4b:	jne    423d6e <__flatcc_fb_build_schema@@Base+0x6de>
  423d4d:	mov    rsi,QWORD PTR [rbx+0x8]
  423d51:	mov    rdi,r12
  423d54:	lea    rdx,[rip+0x23567]        # 4472c2 <fb_schema_table_deleted@@Base+0x1b7a>
  423d5b:	xor    ecx,ecx
  423d5d:	xor    r8d,r8d
  423d60:	xor    r9d,r9d
  423d63:	call   41b6e0 <__flatcc_error_report@@Base>
  423d68:	mov    WORD PTR [rbx+0x58],0x1
  423d6e:	lea    r15,[rip+0x2334a]        # 4470bf <fb_schema_table_deleted@@Base+0x1977>
  423d75:	jmp    423aee <__flatcc_fb_build_schema@@Base+0x45e>
  423d7a:	mov    rsi,QWORD PTR [r15+0x8]
  423d7e:	mov    rdi,r12
  423d81:	lea    rdx,[rip+0x233cc]        # 447154 <fb_schema_table_deleted@@Base+0x1a0c>
  423d88:	jmp    423d98 <__flatcc_fb_build_schema@@Base+0x708>
  423d8a:	mov    rsi,QWORD PTR [r15+0x8]
  423d8e:	mov    rdi,r12
  423d91:	lea    rdx,[rip+0x234bf]        # 447257 <fb_schema_table_deleted@@Base+0x1b0f>
  423d98:	xor    ecx,ecx
  423d9a:	xor    r8d,r8d
  423d9d:	xor    r9d,r9d
  423da0:	call   41b6e0 <__flatcc_error_report@@Base>
  423da5:	mov    WORD PTR [rbx+0x58],0x1
  423dab:	lea    r14,[rip+0x23337]        # 4470e9 <fb_schema_table_deleted@@Base+0x19a1>
  423db2:	lea    r15,[rip+0x23306]        # 4470bf <fb_schema_table_deleted@@Base+0x1977>
  423db9:	jmp    423aee <__flatcc_fb_build_schema@@Base+0x45e>
  423dbe:	mov    rsi,QWORD PTR [r15+0x8]
  423dc2:	mov    rdi,r12
  423dc5:	lea    rdx,[rip+0x2341e]        # 4471ea <fb_schema_table_deleted@@Base+0x1aa2>
  423dcc:	xor    ecx,ecx
  423dce:	jmp    423df6 <__flatcc_fb_build_schema@@Base+0x766>
  423dd0:	mov    rsi,QWORD PTR [r15+0x8]
  423dd4:	mov    rcx,QWORD PTR [rax+0x8]
  423dd8:	mov    rdi,r12
  423ddb:	lea    rdx,[rip+0x23439]        # 44721b <fb_schema_table_deleted@@Base+0x1ad3>
  423de2:	jmp    423df6 <__flatcc_fb_build_schema@@Base+0x766>
  423de4:	mov    rsi,QWORD PTR [r15+0x8]
  423de8:	mov    rcx,QWORD PTR [rax+0x8]
  423dec:	mov    rdi,r12
  423def:	lea    rdx,[rip+0x233b0]        # 4471a6 <fb_schema_table_deleted@@Base+0x1a5e>
  423df6:	xor    r8d,r8d
  423df9:	xor    r9d,r9d
  423dfc:	call   41b6e0 <__flatcc_error_report@@Base>
  423e01:	mov    WORD PTR [r15+0x28],0x1
  423e08:	jmp    423da5 <__flatcc_fb_build_schema@@Base+0x715>
  423e0a:	mov    rsi,QWORD PTR [rbx+0x8]
  423e0e:	lea    rdx,[rip+0x22c96]        # 446aab <fb_schema_table_deleted@@Base+0x1363>
  423e15:	mov    rdi,r12
  423e18:	xor    ecx,ecx
  423e1a:	xor    r8d,r8d
  423e1d:	xor    r9d,r9d
  423e20:	call   41b6e0 <__flatcc_error_report@@Base>
  423e25:	mov    eax,0xffffffff
  423e2a:	jmp    4252f7 <__flatcc_fb_build_schema@@Base+0x1c67>
  423e2f:	mov    rbx,QWORD PTR [r12+0x238]
  423e37:	test   rbx,rbx
  423e3a:	jne    423e58 <__flatcc_fb_build_schema@@Base+0x7c8>
  423e3c:	jmp    424f65 <__flatcc_fb_build_schema@@Base+0x18d5>
  423e41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423e4b:	nop    DWORD PTR [rax+rax*1+0x0]
  423e50:	mov    rbx,QWORD PTR [rbx]
  423e53:	test   rbx,rbx
  423e56:	je     423e7d <__flatcc_fb_build_schema@@Base+0x7ed>
  423e58:	cmp    WORD PTR [rbx+0x10],0x1
  423e5d:	jne    423e50 <__flatcc_fb_build_schema@@Base+0x7c0>
  423e5f:	cmp    WORD PTR [rbx+0x58],0x1
  423e64:	je     423e50 <__flatcc_fb_build_schema@@Base+0x7c0>
  423e66:	mov    rdi,r12
  423e69:	mov    rsi,rbx
  423e6c:	call   425a50 <__flatcc_fb_build_schema@@Base+0x23c0>
  423e71:	test   eax,eax
  423e73:	je     423e50 <__flatcc_fb_build_schema@@Base+0x7c0>
  423e75:	mov    WORD PTR [rbx+0x58],0x1
  423e7b:	jmp    423e50 <__flatcc_fb_build_schema@@Base+0x7c0>
  423e7d:	mov    r13,QWORD PTR [r12+0x238]
  423e85:	test   r13,r13
  423e88:	je     424f65 <__flatcc_fb_build_schema@@Base+0x18d5>
  423e8e:	lea    r15,[rip+0x236bb]        # 447550 <fb_schema_table_deleted@@Base+0x1e08>
  423e95:	jmp    423ecd <__flatcc_fb_build_schema@@Base+0x83d>
  423e97:	mov    rsi,QWORD PTR [rbx+0x8]
  423e9b:	mov    rdi,r12
  423e9e:	lea    rdx,[rip+0x236cd]        # 447572 <fb_schema_table_deleted@@Base+0x1e2a>
  423ea5:	xor    ecx,ecx
  423ea7:	xor    r8d,r8d
  423eaa:	xor    r9d,r9d
  423ead:	call   41b6e0 <__flatcc_error_report@@Base>
  423eb2:	mov    WORD PTR [r13+0x58],0x1
  423eb9:	lea    r15,[rip+0x23690]        # 447550 <fb_schema_table_deleted@@Base+0x1e08>
  423ec0:	mov    r13,QWORD PTR [r13+0x0]
  423ec4:	test   r13,r13
  423ec7:	je     424f65 <__flatcc_fb_build_schema@@Base+0x18d5>
  423ecd:	movzx  eax,WORD PTR [r13+0x10]
  423ed2:	cmp    ax,0x2
  423ed6:	je     423f60 <__flatcc_fb_build_schema@@Base+0x8d0>
  423edc:	test   ax,ax
  423edf:	jne    423ec0 <__flatcc_fb_build_schema@@Base+0x830>
  423ee1:	movzx  eax,WORD PTR [r13+0x58]
  423ee6:	cmp    ax,0x1
  423eea:	je     423ec0 <__flatcc_fb_build_schema@@Base+0x830>
  423eec:	test   ax,ax
  423eef:	jne    425374 <__flatcc_fb_build_schema@@Base+0x1ce4>
  423ef5:	mov    rsi,QWORD PTR [r13+0x38]
  423ef9:	mov    rdi,r12
  423efc:	mov    edx,0x8
  423f01:	lea    rcx,[rsp+0x60]
  423f06:	call   425e70 <__flatcc_fb_build_schema@@Base+0x27e0>
  423f0b:	mov    WORD PTR [r13+0xa4],ax
  423f13:	mov    r14,QWORD PTR [r13+0x28]
  423f17:	test   r14,r14
  423f1a:	je     424de8 <__flatcc_fb_build_schema@@Base+0x1758>
  423f20:	lea    rbx,[r13+0x60]
  423f24:	xor    eax,eax
  423f26:	mov    QWORD PTR [rsp+0x30],rax
  423f2b:	mov    DWORD PTR [rsp+0x1c],0x0
  423f33:	xor    eax,eax
  423f35:	mov    QWORD PTR [rsp+0x40],rax
  423f3a:	mov    DWORD PTR [rsp+0x4],0x0
  423f42:	mov    DWORD PTR [rsp+0x18],0x0
  423f4a:	xor    eax,eax
  423f4c:	mov    QWORD PTR [rsp+0x20],rax
  423f51:	mov    QWORD PTR [rsp+0x10],rbx
  423f56:	jmp    42417c <__flatcc_fb_build_schema@@Base+0xaec>
  423f5b:	nop    DWORD PTR [rax+rax*1+0x0]
  423f60:	movzx  eax,WORD PTR [r13+0x58]
  423f65:	cmp    ax,0x1
  423f69:	je     423ec0 <__flatcc_fb_build_schema@@Base+0x830>
  423f6f:	test   ax,ax
  423f72:	jne    425393 <__flatcc_fb_build_schema@@Base+0x1d03>
  423f78:	cmp    QWORD PTR [r13+0x38],0x0
  423f7d:	lea    r15,[rip+0x23f1a]        # 447e9e <fb_schema_table_deleted@@Base+0x2756>
  423f84:	je     423fa1 <__flatcc_fb_build_schema@@Base+0x911>
  423f86:	mov    rsi,QWORD PTR [r13+0x8]
  423f8a:	mov    rdi,r12
  423f8d:	lea    rdx,[rip+0x23ee6]        # 447e7a <fb_schema_table_deleted@@Base+0x2732>
  423f94:	xor    ecx,ecx
  423f96:	xor    r8d,r8d
  423f99:	xor    r9d,r9d
  423f9c:	call   41b6e0 <__flatcc_error_report@@Base>
  423fa1:	mov    rbx,QWORD PTR [r13+0x28]
  423fa5:	test   rbx,rbx
  423fa8:	je     423eb9 <__flatcc_fb_build_schema@@Base+0x829>
  423fae:	lea    r14,[r13+0x60]
  423fb2:	jmp    423fe5 <__flatcc_fb_build_schema@@Base+0x955>
  423fb4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  423fbe:	xchg   ax,ax
  423fc0:	mov    rsi,QWORD PTR [rbx+0x8]
  423fc4:	mov    rcx,QWORD PTR [rax+0x8]
  423fc8:	mov    rdi,r12
  423fcb:	mov    rdx,r15
  423fce:	xor    r8d,r8d
  423fd1:	xor    r9d,r9d
  423fd4:	call   41b6e0 <__flatcc_error_report@@Base>
  423fd9:	mov    rbx,QWORD PTR [rbx]
  423fdc:	test   rbx,rbx
  423fdf:	je     423eb9 <__flatcc_fb_build_schema@@Base+0x829>
  423fe5:	mov    rdi,r14
  423fe8:	mov    rsi,rbx
  423feb:	mov    edx,0x1
  423ff0:	call   419490 <fb_symbol_table_insert_item@@Base>
  423ff5:	test   rax,rax
  423ff8:	jne    423fc0 <__flatcc_fb_build_schema@@Base+0x930>
  423ffa:	cmp    WORD PTR [rbx+0x10],0x5
  423fff:	jne    423e97 <__flatcc_fb_build_schema@@Base+0x807>
  424005:	cmp    WORD PTR [rbx+0x58],0x0
  42400a:	je     424027 <__flatcc_fb_build_schema@@Base+0x997>
  42400c:	mov    rsi,QWORD PTR [rbx+0x8]
  424010:	mov    rdi,r12
  424013:	lea    rdx,[rip+0x23ea4]        # 447ebe <fb_schema_table_deleted@@Base+0x2776>
  42401a:	xor    ecx,ecx
  42401c:	xor    r8d,r8d
  42401f:	xor    r9d,r9d
  424022:	call   41b6e0 <__flatcc_error_report@@Base>
  424027:	movzx  eax,WORD PTR [rbx+0x28]
  42402b:	cmp    ax,0x1
  42402f:	je     423fd9 <__flatcc_fb_build_schema@@Base+0x949>
  424031:	cmp    ax,0xc
  424035:	je     424052 <__flatcc_fb_build_schema@@Base+0x9c2>
  424037:	mov    rsi,QWORD PTR [rbx+0x8]
  42403b:	mov    rdi,r12
  42403e:	lea    rdx,[rip+0x23eb9]        # 447efe <fb_schema_table_deleted@@Base+0x27b6>
  424045:	xor    ecx,ecx
  424047:	xor    r8d,r8d
  42404a:	xor    r9d,r9d
  42404d:	call   41b6e0 <__flatcc_error_report@@Base>
  424052:	mov    rsi,QWORD PTR [r13+0x18]
  424056:	mov    rdx,QWORD PTR [rbx+0x30]
  42405a:	mov    rdi,r12
  42405d:	xor    ecx,ecx
  42405f:	call   426000 <__flatcc_fb_build_schema@@Base+0x2970>
  424064:	test   rax,rax
  424067:	je     424098 <__flatcc_fb_build_schema@@Base+0xa08>
  424069:	cmp    WORD PTR [rax+0x10],0x0
  42406e:	je     4240b9 <__flatcc_fb_build_schema@@Base+0xa29>
  424070:	mov    rsi,QWORD PTR [rbx+0x8]
  424074:	mov    rcx,QWORD PTR [rax+0x8]
  424078:	mov    rdi,r12
  42407b:	lea    rdx,[rip+0x23eeb]        # 447f6d <fb_schema_table_deleted@@Base+0x2825>
  424082:	xor    r8d,r8d
  424085:	xor    r9d,r9d
  424088:	call   41b6e0 <__flatcc_error_report@@Base>
  42408d:	mov    WORD PTR [rbx+0x28],0x1
  424093:	jmp    423fd9 <__flatcc_fb_build_schema@@Base+0x949>
  424098:	mov    rsi,QWORD PTR [rbx+0x30]
  42409c:	mov    rdi,r12
  42409f:	lea    rdx,[rip+0x23e95]        # 447f3b <fb_schema_table_deleted@@Base+0x27f3>
  4240a6:	mov    rcx,rbx
  4240a9:	call   41b910 <error_ref_sym@@Base>
  4240ae:	mov    WORD PTR [rbx+0x28],0x1
  4240b4:	jmp    423fd9 <__flatcc_fb_build_schema@@Base+0x949>
  4240b9:	mov    WORD PTR [rbx+0x40],0xe
  4240bf:	mov    QWORD PTR [rbx+0x30],rax
  4240c3:	mov    rsi,QWORD PTR [r13+0x18]
  4240c7:	mov    rdx,QWORD PTR [rbx+0x18]
  4240cb:	mov    rdi,r12
  4240ce:	xor    ecx,ecx
  4240d0:	call   426000 <__flatcc_fb_build_schema@@Base+0x2970>
  4240d5:	test   rax,rax
  4240d8:	je     4240f5 <__flatcc_fb_build_schema@@Base+0xa65>
  4240da:	cmp    WORD PTR [rax+0x10],0x0
  4240df:	je     424105 <__flatcc_fb_build_schema@@Base+0xa75>
  4240e1:	mov    rsi,QWORD PTR [rbx+0x8]
  4240e5:	mov    rcx,QWORD PTR [rax+0x8]
  4240e9:	mov    rdi,r12
  4240ec:	lea    rdx,[rip+0x23ee3]        # 447fd6 <fb_schema_table_deleted@@Base+0x288e>
  4240f3:	jmp    424082 <__flatcc_fb_build_schema@@Base+0x9f2>
  4240f5:	mov    rsi,QWORD PTR [rbx+0x18]
  4240f9:	mov    rdi,r12
  4240fc:	lea    rdx,[rip+0x23ea0]        # 447fa3 <fb_schema_table_deleted@@Base+0x285b>
  424103:	jmp    4240a6 <__flatcc_fb_build_schema@@Base+0xa16>
  424105:	mov    WORD PTR [rbx+0x28],0xe
  42410b:	mov    QWORD PTR [rbx+0x18],rax
  42410f:	mov    QWORD PTR [rbx+0x80],0x0
  42411a:	mov    rsi,QWORD PTR [rbx+0x60]
  42411e:	mov    rdi,r12
  424121:	mov    edx,0x4
  424126:	lea    rcx,[rsp+0x60]
  42412b:	call   425e70 <__flatcc_fb_build_schema@@Base+0x27e0>
  424130:	mov    WORD PTR [rbx+0x70],ax
  424134:	jmp    423fd9 <__flatcc_fb_build_schema@@Base+0x949>
  424139:	mov    rsi,QWORD PTR [r14+0x8]
  42413d:	mov    rdi,r12
  424140:	lea    rdx,[rip+0x23808]        # 44794f <fb_schema_table_deleted@@Base+0x2207>
  424147:	xor    ecx,ecx
  424149:	xor    r8d,r8d
  42414c:	xor    r9d,r9d
  42414f:	call   41b6e0 <__flatcc_error_report@@Base>
  424154:	mov    WORD PTR [r14+0x28],0x1
  42415b:	mov    rbx,QWORD PTR [rsp+0x10]
  424160:	lea    r15,[rip+0x233e9]        # 447550 <fb_schema_table_deleted@@Base+0x1e08>
  424167:	nop    WORD PTR [rax+rax*1+0x0]
  424170:	mov    r14,QWORD PTR [r14]
  424173:	test   r14,r14
  424176:	je     424dc7 <__flatcc_fb_build_schema@@Base+0x1737>
  42417c:	mov    rdi,rbx
  42417f:	mov    rsi,r14
  424182:	mov    edx,0x1
  424187:	call   419490 <fb_symbol_table_insert_item@@Base>
  42418c:	test   rax,rax
  42418f:	je     4241b0 <__flatcc_fb_build_schema@@Base+0xb20>
  424191:	mov    rsi,QWORD PTR [r14+0x8]
  424195:	mov    rcx,QWORD PTR [rax+0x8]
  424199:	mov    rdi,r12
  42419c:	mov    rdx,r15
  42419f:	xor    r8d,r8d
  4241a2:	xor    r9d,r9d
  4241a5:	call   41b6e0 <__flatcc_error_report@@Base>
  4241aa:	jmp    424170 <__flatcc_fb_build_schema@@Base+0xae0>
  4241ac:	nop    DWORD PTR [rax+0x0]
  4241b0:	cmp    WORD PTR [r14+0x10],0x5
  4241b6:	jne    424e04 <__flatcc_fb_build_schema@@Base+0x1774>
  4241bc:	mov    eax,DWORD PTR [r14+0x28]
  4241c0:	lea    ecx,[rax-0x7]
  4241c3:	cmp    cx,0x2
  4241c7:	jae    4241f4 <__flatcc_fb_build_schema@@Base+0xb64>
  4241c9:	mov    rax,QWORD PTR [r14+0x18]
  4241cd:	mov    rcx,QWORD PTR [rax+0x20]
  4241d1:	lea    rdx,[rcx+0x3e7]
  4241d8:	xor    eax,eax
  4241da:	cmp    rdx,0x1b
  4241de:	ja     4241ee <__flatcc_fb_build_schema@@Base+0xb5e>
  4241e0:	lea    rax,[rip+0x226e9]        # 4468d0 <fb_schema_table_deleted@@Base+0x1188>
  4241e7:	mov    eax,DWORD PTR [rax+rcx*4+0xf9c]
  4241ee:	mov    DWORD PTR [r14+0x18],eax
  4241f2:	jmp    4241fe <__flatcc_fb_build_schema@@Base+0xb6e>
  4241f4:	cmp    ax,0x1
  4241f8:	je     424170 <__flatcc_fb_build_schema@@Base+0xae0>
  4241fe:	mov    rsi,QWORD PTR [r14+0x60]
  424202:	mov    rdi,r12
  424205:	mov    edx,0xfc6
  42420a:	lea    rcx,[rsp+0x60]
  42420f:	call   425e70 <__flatcc_fb_build_schema@@Base+0x27e0>
  424214:	mov    WORD PTR [r14+0x70],ax
  424219:	mov    rax,QWORD PTR [rsp+0x90]
  424221:	test   rax,rax
  424224:	mov    ebx,DWORD PTR [rsp+0x4]
  424228:	je     4242a4 <__flatcc_fb_build_schema@@Base+0xc14>
  42422a:	cmp    WORD PTR [r14+0x28],0x7
  424230:	jne    424289 <__flatcc_fb_build_schema@@Base+0xbf9>
  424232:	cmp    DWORD PTR [r14+0x18],0x4
  424237:	jne    424289 <__flatcc_fb_build_schema@@Base+0xbf9>
  424239:	cmp    WORD PTR [rax+0x20],0x2
  42423e:	jne    4242a4 <__flatcc_fb_build_schema@@Base+0xc14>
  424240:	mov    QWORD PTR [rsp+0x48],r13
  424245:	mov    r13,QWORD PTR [r13+0x18]
  424249:	mov    rsi,QWORD PTR [rax+0x10]
  42424d:	mov    QWORD PTR [rsp+0x50],rax
  424252:	mov    r15d,DWORD PTR [rax+0x18]
  424256:	movsxd rax,r15d
  424259:	nop    DWORD PTR [rax+0x0]
  424260:	test   rax,rax
  424263:	jle    42477f <__flatcc_fb_build_schema@@Base+0x10ef>
  424269:	cmp    BYTE PTR [rsi+rax*1-0x1],0x2e
  42426e:	lea    rax,[rax-0x1]
  424272:	jne    424260 <__flatcc_fb_build_schema@@Base+0xbd0>
  424274:	lea    rcx,[rsi+rax*1]
  424278:	add    rcx,0x1
  42427c:	mov    QWORD PTR [rsp+0x8],rcx
  424281:	dec    r15d
  424284:	jmp    424784 <__flatcc_fb_build_schema@@Base+0x10f4>
  424289:	mov    rsi,QWORD PTR [rax+0x8]
  42428d:	mov    rdi,r12
  424290:	lea    rdx,[rip+0x23a86]        # 447d1d <fb_schema_table_deleted@@Base+0x25d5>
  424297:	xor    ecx,ecx
  424299:	xor    r8d,r8d
  42429c:	xor    r9d,r9d
  42429f:	call   41b6e0 <__flatcc_error_report@@Base>
  4242a4:	movzx  eax,WORD PTR [r14+0x70]
  4242a9:	test   eax,0x100
  4242ae:	je     4242d8 <__flatcc_fb_build_schema@@Base+0xc48>
  4242b0:	cmp    WORD PTR [r14+0x28],0x8
  4242b6:	jne    4242d8 <__flatcc_fb_build_schema@@Base+0xc48>
  4242b8:	mov    rsi,QWORD PTR [r14+0x8]
  4242bc:	mov    rdi,r12
  4242bf:	lea    rdx,[rip+0x232d1]        # 447597 <fb_schema_table_deleted@@Base+0x1e4f>
  4242c6:	xor    ecx,ecx
  4242c8:	xor    r8d,r8d
  4242cb:	xor    r9d,r9d
  4242ce:	call   41b6e0 <__flatcc_error_report@@Base>
  4242d3:	movzx  eax,WORD PTR [r14+0x70]
  4242d8:	test   eax,0x400
  4242dd:	je     42430e <__flatcc_fb_build_schema@@Base+0xc7e>
  4242df:	cmp    WORD PTR [r14+0x28],0x7
  4242e5:	jne    4242ee <__flatcc_fb_build_schema@@Base+0xc5e>
  4242e7:	cmp    DWORD PTR [r14+0x18],0x4
  4242ec:	je     42430e <__flatcc_fb_build_schema@@Base+0xc7e>
  4242ee:	mov    rsi,QWORD PTR [r14+0x8]
  4242f2:	mov    rdi,r12
  4242f5:	lea    rdx,[rip+0x232d3]        # 4475cf <fb_schema_table_deleted@@Base+0x1e87>
  4242fc:	xor    ecx,ecx
  4242fe:	xor    r8d,r8d
  424301:	xor    r9d,r9d
  424304:	call   41b6e0 <__flatcc_error_report@@Base>
  424309:	movzx  eax,WORD PTR [r14+0x70]
  42430e:	test   eax,0x800
  424313:	je     424344 <__flatcc_fb_build_schema@@Base+0xcb4>
  424315:	cmp    WORD PTR [r14+0x28],0x7
  42431b:	jne    424324 <__flatcc_fb_build_schema@@Base+0xc94>
  42431d:	cmp    DWORD PTR [r14+0x18],0x4
  424322:	je     424344 <__flatcc_fb_build_schema@@Base+0xcb4>
  424324:	mov    rsi,QWORD PTR [r14+0x8]
  424328:	mov    rdi,r12
  42432b:	lea    rdx,[rip+0x232d9]        # 44760b <fb_schema_table_deleted@@Base+0x1ec3>
  424332:	xor    ecx,ecx
  424334:	xor    r8d,r8d
  424337:	xor    r9d,r9d
  42433a:	call   41b6e0 <__flatcc_error_report@@Base>
  42433f:	movzx  eax,WORD PTR [r14+0x70]
  424344:	and    eax,0xc00
  424349:	cmp    eax,0xc00
  42434e:	jne    42436b <__flatcc_fb_build_schema@@Base+0xcdb>
  424350:	mov    rsi,QWORD PTR [r14+0x8]
  424354:	mov    rdi,r12
  424357:	lea    rdx,[rip+0x232ec]        # 44764a <fb_schema_table_deleted@@Base+0x1f02>
  42435e:	xor    ecx,ecx
  424360:	xor    r8d,r8d
  424363:	xor    r9d,r9d
  424366:	call   41b6e0 <__flatcc_error_report@@Base>
  42436b:	mov    r15,QWORD PTR [rsp+0x68]
  424370:	cmp    QWORD PTR [rsp+0x20],0x0
  424376:	jne    4243a1 <__flatcc_fb_build_schema@@Base+0xd11>
  424378:	test   r15,r15
  42437b:	je     4243a1 <__flatcc_fb_build_schema@@Base+0xd11>
  42437d:	mov    rdi,QWORD PTR [r12+0xd8]
  424385:	mov    rdx,QWORD PTR [r12+0x148]
  42438d:	mov    QWORD PTR [rsp+0x30],rdi
  424392:	xor    esi,esi
  424394:	call   406100 <memset@plt>
  424399:	mov    DWORD PTR [rsp+0x18],0x1
  4243a1:	test   ebx,ebx
  4243a3:	jne    4243f0 <__flatcc_fb_build_schema@@Base+0xd60>
  4243a5:	mov    rax,QWORD PTR [rsp+0x20]
  4243aa:	cmp    rax,QWORD PTR [r12+0x148]
  4243b2:	jae    4243cb <__flatcc_fb_build_schema@@Base+0xd3b>
  4243b4:	xor    ebx,ebx
  4243b6:	cmp    DWORD PTR [rsp+0x18],0x0
  4243bb:	jne    4243eb <__flatcc_fb_build_schema@@Base+0xd5b>
  4243bd:	movzx  eax,WORD PTR [rsp+0x20]
  4243c2:	mov    QWORD PTR [r14+0x88],rax
  4243c9:	jmp    4243eb <__flatcc_fb_build_schema@@Base+0xd5b>
  4243cb:	mov    rsi,QWORD PTR [r14+0x8]
  4243cf:	mov    rdi,r12
  4243d2:	lea    rdx,[rip+0x232a8]        # 447681 <fb_schema_table_deleted@@Base+0x1f39>
  4243d9:	xor    ecx,ecx
  4243db:	xor    r8d,r8d
  4243de:	xor    r9d,r9d
  4243e1:	call   41b6e0 <__flatcc_error_report@@Base>
  4243e6:	mov    ebx,0x1
  4243eb:	inc    QWORD PTR [rsp+0x20]
  4243f0:	mov    eax,DWORD PTR [r14+0x28]
  4243f4:	add    eax,0xfffffff9
  4243f7:	cmp    ax,0x5
  4243fb:	mov    DWORD PTR [rsp+0x4],ebx
  4243ff:	ja     424139 <__flatcc_fb_build_schema@@Base+0xaa9>
  424405:	movzx  eax,ax
  424408:	lea    rcx,[rip+0x22435]        # 446844 <fb_schema_table_deleted@@Base+0x10fc>
  42440f:	movsxd rax,DWORD PTR [rcx+rax*4]
  424413:	add    rax,rcx
  424416:	jmp    rax
  424418:	mov    eax,DWORD PTR [r14+0x18]
  42441c:	lea    rcx,[rip+0x2247d]        # 4468a0 <fb_schema_table_deleted@@Base+0x1158>
  424423:	movsxd rax,DWORD PTR [rcx+rax*4]
  424427:	mov    QWORD PTR [r14+0x80],rax
  42442e:	mov    WORD PTR [r14+0x72],ax
  424433:	cmp    WORD PTR [r14+0x58],0x0
  424439:	je     424688 <__flatcc_fb_build_schema@@Base+0xff8>
  42443f:	mov    rsi,QWORD PTR [r14+0x8]
  424443:	mov    rdi,r12
  424446:	lea    rdx,[rip+0x23286]        # 4476d3 <fb_schema_table_deleted@@Base+0x1f8b>
  42444d:	jmp    424147 <__flatcc_fb_build_schema@@Base+0xab7>
  424452:	mov    rsi,QWORD PTR [r13+0x18]
  424456:	mov    rdx,QWORD PTR [r14+0x18]
  42445a:	mov    rdi,r12
  42445d:	xor    ecx,ecx
  42445f:	call   426000 <__flatcc_fb_build_schema@@Base+0x2970>
  424464:	test   rax,rax
  424467:	je     4246ed <__flatcc_fb_build_schema@@Base+0x105d>
  42446d:	mov    rbx,rax
  424470:	movzx  eax,WORD PTR [rax+0x10]
  424474:	cmp    ax,0x4
  424478:	ja     4249e7 <__flatcc_fb_build_schema@@Base+0x1357>
  42447e:	cmp    ax,0x2
  424482:	je     4249e7 <__flatcc_fb_build_schema@@Base+0x1357>
  424488:	cmp    WORD PTR [r14+0x58],0x0
  42448e:	jne    424b2e <__flatcc_fb_build_schema@@Base+0x149e>
  424494:	mov    WORD PTR [r14+0x28],0xf
  42449b:	mov    QWORD PTR [r14+0x18],rbx
  42449f:	mov    rax,QWORD PTR [rbx+0xb8]
  4244a6:	mov    QWORD PTR [r14+0x80],rax
  4244ad:	movzx  eax,WORD PTR [rbx+0xb0]
  4244b4:	mov    WORD PTR [r14+0x72],ax
  4244b9:	xor    edx,edx
  4244bb:	cmp    DWORD PTR [rsp+0x4],0x0
  4244c0:	jne    424712 <__flatcc_fb_build_schema@@Base+0x1082>
  4244c6:	cmp    WORD PTR [rbx+0x10],0x4
  4244cb:	jne    424712 <__flatcc_fb_build_schema@@Base+0x1082>
  4244d1:	cmp    DWORD PTR [rsp+0x18],0x0
  4244d6:	jne    4244e4 <__flatcc_fb_build_schema@@Base+0xe54>
  4244d8:	movzx  eax,WORD PTR [rsp+0x20]
  4244dd:	mov    QWORD PTR [r14+0x88],rax
  4244e4:	inc    QWORD PTR [rsp+0x20]
  4244e9:	xor    edx,edx
  4244eb:	test   r15,r15
  4244ee:	je     4246a0 <__flatcc_fb_build_schema@@Base+0x1010>
  4244f4:	cmp    DWORD PTR [rsp+0x18],0x0
  4244f9:	jne    4246a0 <__flatcc_fb_build_schema@@Base+0x1010>
  4244ff:	mov    rsi,QWORD PTR [r15+0x8]
  424503:	mov    rdi,r12
  424506:	mov    ebx,edx
  424508:	lea    rdx,[rip+0x23468]        # 447977 <fb_schema_table_deleted@@Base+0x222f>
  42450f:	jmp    4246c4 <__flatcc_fb_build_schema@@Base+0x1034>
  424514:	cmp    WORD PTR [r14+0x58],0x0
  42451a:	je     424688 <__flatcc_fb_build_schema@@Base+0xff8>
  424520:	mov    rsi,QWORD PTR [r14+0x8]
  424524:	mov    rdi,r12
  424527:	lea    rdx,[rip+0x231f2]        # 447720 <fb_schema_table_deleted@@Base+0x1fd8>
  42452e:	jmp    424147 <__flatcc_fb_build_schema@@Base+0xab7>
  424533:	cmp    WORD PTR [r14+0x58],0x0
  424539:	je     424708 <__flatcc_fb_build_schema@@Base+0x1078>
  42453f:	mov    rsi,QWORD PTR [r14+0x8]
  424543:	mov    rdi,r12
  424546:	lea    rdx,[rip+0x231b0]        # 4476fd <fb_schema_table_deleted@@Base+0x1fb5>
  42454d:	jmp    424147 <__flatcc_fb_build_schema@@Base+0xab7>
  424552:	lea    rbx,[r14+0x48]
  424556:	movzx  eax,WORD PTR [r14+0x58]
  42455b:	cmp    ax,0xd
  42455f:	jne    4245d6 <__flatcc_fb_build_schema@@Base+0xf46>
  424561:	mov    rsi,QWORD PTR [r13+0x18]
  424565:	mov    rdx,QWORD PTR [rbx]
  424568:	mov    QWORD PTR [rsp+0x28],0x0
  424571:	test   rdx,rdx
  424574:	je     4253b2 <__flatcc_fb_build_schema@@Base+0x1d22>
  42457a:	mov    rdi,r12
  42457d:	lea    rcx,[rsp+0x28]
  424582:	call   426000 <__flatcc_fb_build_schema@@Base+0x2970>
  424587:	test   rax,rax
  42458a:	je     4246dd <__flatcc_fb_build_schema@@Base+0x104d>
  424590:	cmp    WORD PTR [rax+0x10],0x3
  424595:	jne    4246dd <__flatcc_fb_build_schema@@Base+0x104d>
  42459b:	add    rax,0x60
  42459f:	mov    rcx,QWORD PTR [rsp+0x28]
  4245a4:	mov    rcx,QWORD PTR [rcx+0x8]
  4245a8:	mov    rsi,QWORD PTR [rcx]
  4245ab:	mov    rdx,QWORD PTR [rcx+0x8]
  4245af:	mov    rdi,rax
  4245b2:	call   4194b0 <fb_symbol_table_find@@Base>
  4245b7:	test   rax,rax
  4245ba:	je     4246dd <__flatcc_fb_build_schema@@Base+0x104d>
  4245c0:	mov    rcx,QWORD PTR [rax+0x58]
  4245c4:	mov    QWORD PTR [rbx+0x10],rcx
  4245c8:	vmovups xmm0,XMMWORD PTR [rax+0x48]
  4245cd:	vmovups XMMWORD PTR [rbx],xmm0
  4245d1:	movzx  eax,WORD PTR [r14+0x58]
  4245d6:	test   ax,ax
  4245d9:	jne    4245ea <__flatcc_fb_build_schema@@Base+0xf5a>
  4245db:	mov    WORD PTR [r14+0x58],0x5
  4245e2:	mov    QWORD PTR [r14+0x48],0x0
  4245ea:	mov    edx,DWORD PTR [r14+0x18]
  4245ee:	mov    rdi,r12
  4245f1:	mov    rsi,r14
  4245f4:	mov    rcx,rbx
  4245f7:	call   4261f0 <__flatcc_fb_coerce_scalar_type@@Base>
  4245fc:	test   eax,eax
  4245fe:	jne    424b49 <__flatcc_fb_build_schema@@Base+0x14b9>
  424604:	mov    eax,DWORD PTR [r14+0x18]
  424608:	lea    rcx,[rip+0x22291]        # 4468a0 <fb_schema_table_deleted@@Base+0x1158>
  42460f:	movsxd rax,DWORD PTR [rcx+rax*4]
  424613:	mov    QWORD PTR [r14+0x80],rax
  42461a:	mov    WORD PTR [r14+0x72],ax
  42461f:	mov    edx,0x1
  424624:	xor    ebx,ebx
  424626:	cmp    DWORD PTR [rsp+0x4],0x0
  42462b:	jne    42471d <__flatcc_fb_build_schema@@Base+0x108d>
  424631:	jmp    424697 <__flatcc_fb_build_schema@@Base+0x1007>
  424633:	mov    rsi,QWORD PTR [r13+0x18]
  424637:	mov    rdx,QWORD PTR [r14+0x18]
  42463b:	mov    rdi,r12
  42463e:	xor    ecx,ecx
  424640:	call   426000 <__flatcc_fb_build_schema@@Base+0x2970>
  424645:	test   rax,rax
  424648:	je     424755 <__flatcc_fb_build_schema@@Base+0x10c5>
  42464e:	mov    rbx,rax
  424651:	movzx  eax,WORD PTR [rax+0x10]
  424655:	cmp    rax,0x4
  424659:	ja     424bce <__flatcc_fb_build_schema@@Base+0x153e>
  42465f:	xor    edx,edx
  424661:	lea    rcx,[rip+0x221f4]        # 44685c <fb_schema_table_deleted@@Base+0x1114>
  424668:	movsxd rax,DWORD PTR [rcx+rax*4]
  42466c:	add    rax,rcx
  42466f:	jmp    rax
  424671:	mov    rsi,QWORD PTR [r14+0x8]
  424675:	mov    rcx,QWORD PTR [rbx+0x8]
  424679:	mov    rdi,r12
  42467c:	lea    rdx,[rip+0x2312a]        # 4477ad <fb_schema_table_deleted@@Base+0x2065>
  424683:	jmp    424b3e <__flatcc_fb_build_schema@@Base+0x14ae>
  424688:	xor    ebx,ebx
  42468a:	xor    edx,edx
  42468c:	cmp    DWORD PTR [rsp+0x4],0x0
  424691:	jne    42471d <__flatcc_fb_build_schema@@Base+0x108d>
  424697:	test   r15,r15
  42469a:	jne    4244f4 <__flatcc_fb_build_schema@@Base+0xe64>
  4246a0:	test   r15,r15
  4246a3:	jne    424940 <__flatcc_fb_build_schema@@Base+0x12b0>
  4246a9:	cmp    DWORD PTR [rsp+0x18],0x0
  4246ae:	je     424940 <__flatcc_fb_build_schema@@Base+0x12b0>
  4246b4:	mov    rsi,QWORD PTR [r14+0x8]
  4246b8:	mov    rdi,r12
  4246bb:	mov    ebx,edx
  4246bd:	lea    rdx,[rip+0x232f0]        # 4479b4 <fb_schema_table_deleted@@Base+0x226c>
  4246c4:	xor    ecx,ecx
  4246c6:	xor    r8d,r8d
  4246c9:	xor    r9d,r9d
  4246cc:	call   41b6e0 <__flatcc_error_report@@Base>
  4246d1:	mov    edx,ebx
  4246d3:	mov    DWORD PTR [rsp+0x4],0x1
  4246db:	jmp    42471d <__flatcc_fb_build_schema@@Base+0x108d>
  4246dd:	mov    rsi,QWORD PTR [r14+0x48]
  4246e1:	mov    rdi,r12
  4246e4:	lea    rdx,[rip+0x22fb6]        # 4476a1 <fb_schema_table_deleted@@Base+0x1f59>
  4246eb:	jmp    4246fb <__flatcc_fb_build_schema@@Base+0x106b>
  4246ed:	mov    rsi,QWORD PTR [r14+0x18]
  4246f1:	mov    rdi,r12
  4246f4:	lea    rdx,[rip+0x231d5]        # 4478d0 <fb_schema_table_deleted@@Base+0x2188>
  4246fb:	mov    rcx,r14
  4246fe:	call   41b910 <error_ref_sym@@Base>
  424703:	jmp    424b49 <__flatcc_fb_build_schema@@Base+0x14b9>
  424708:	mov    edx,DWORD PTR [r12+0x110]
  424710:	xor    ebx,ebx
  424712:	cmp    DWORD PTR [rsp+0x4],0x0
  424717:	je     424697 <__flatcc_fb_build_schema@@Base+0x1007>
  42471d:	lea    r15,[rip+0x22e2c]        # 447550 <fb_schema_table_deleted@@Base+0x1e08>
  424724:	cmp    BYTE PTR [r14+0x70],0x0
  424729:	mov    rbx,QWORD PTR [rsp+0x10]
  42472e:	jns    424170 <__flatcc_fb_build_schema@@Base+0xae0>
  424734:	inc    DWORD PTR [rsp+0x1c]
  424738:	test   edx,edx
  42473a:	jne    424170 <__flatcc_fb_build_schema@@Base+0xae0>
  424740:	mov    rsi,QWORD PTR [r14+0x8]
  424744:	mov    rdi,r12
  424747:	lea    rdx,[rip+0x23557]        # 447ca5 <fb_schema_table_deleted@@Base+0x255d>
  42474e:	xor    ecx,ecx
  424750:	jmp    42419f <__flatcc_fb_build_schema@@Base+0xb0f>
  424755:	mov    rsi,QWORD PTR [r14+0x18]
  424759:	mov    rdi,r12
  42475c:	lea    rdx,[rip+0x22fe7]        # 44774a <fb_schema_table_deleted@@Base+0x2002>
  424763:	mov    rcx,r14
  424766:	call   41b910 <error_ref_sym@@Base>
  42476b:	mov    WORD PTR [r14+0x28],0x1
  424772:	mov    DWORD PTR [rsp+0x4],0x1
  42477a:	jmp    424b50 <__flatcc_fb_build_schema@@Base+0x14c0>
  42477f:	mov    QWORD PTR [rsp+0x8],rsi
  424784:	sub    r15d,eax
  424787:	test   r13,r13
  42478a:	je     424897 <__flatcc_fb_build_schema@@Base+0x1207>
  424790:	test   eax,eax
  424792:	jne    424897 <__flatcc_fb_build_schema@@Base+0x1207>
  424798:	movsxd rax,r15d
  42479b:	mov    QWORD PTR [rsp+0x38],rax
  4247a0:	jmp    4247bc <__flatcc_fb_build_schema@@Base+0x112c>
  4247a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4247ac:	nop    DWORD PTR [rax+0x0]
  4247b0:	mov    r13,rax
  4247b3:	test   rax,rax
  4247b6:	je     424910 <__flatcc_fb_build_schema@@Base+0x1280>
  4247bc:	lea    rdi,[r13+0x8]
  4247c0:	mov    rsi,QWORD PTR [rsp+0x8]
  4247c5:	mov    rdx,QWORD PTR [rsp+0x38]
  4247ca:	call   4194b0 <fb_symbol_table_find@@Base>
  4247cf:	test   rax,rax
  4247d2:	je     4247f5 <__flatcc_fb_build_schema@@Base+0x1165>
  4247d4:	mov    r15,rax
  4247d7:	cmp    WORD PTR [rax+0x10],0x4
  4247dc:	ja     4247f5 <__flatcc_fb_build_schema@@Base+0x1165>
  4247de:	mov    rsi,QWORD PTR [r15+0x20]
  4247e2:	mov    rdi,QWORD PTR [rsp+0x58]
  4247e7:	call   418e70 <ptr_set_find_item@@Base>
  4247ec:	test   rax,rax
  4247ef:	jne    4248d8 <__flatcc_fb_build_schema@@Base+0x1248>
  4247f5:	mov    rax,QWORD PTR [r13+0x0]
  4247f9:	test   rax,rax
  4247fc:	je     424910 <__flatcc_fb_build_schema@@Base+0x1280>
  424802:	mov    edx,0x2
  424807:	xor    esi,esi
  424809:	xor    ecx,ecx
  42480b:	movabs rdi,0xffffffff00000000
  424815:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42481f:	nop
  424820:	mov    r15,rsi
  424823:	mov    rbx,rdx
  424826:	mov    rax,QWORD PTR [rax]
  424829:	inc    rcx
  42482c:	add    rsi,rdi
  42482f:	inc    rdx
  424832:	test   rax,rax
  424835:	jne    424820 <__flatcc_fb_build_schema@@Base+0x1190>
  424837:	jmp    424866 <__flatcc_fb_build_schema@@Base+0x11d6>
  424839:	nop    DWORD PTR [rax+0x0]
  424840:	mov    rsi,QWORD PTR [r13+0x0]
  424844:	mov    rdx,r15
  424847:	sar    rdx,0x20
  42484b:	call   419e20 <fb_scope_table_find@@Base>
  424850:	movabs rcx,0x100000000
  42485a:	add    r15,rcx
  42485d:	test   rax,rax
  424860:	jne    4247b0 <__flatcc_fb_build_schema@@Base+0x1120>
  424866:	mov    rdi,QWORD PTR [r12+0x260]
  42486e:	dec    rbx
  424871:	cmp    rbx,0x2
  424875:	jl     424880 <__flatcc_fb_build_schema@@Base+0x11f0>
  424877:	test   rdi,rdi
  42487a:	jne    424840 <__flatcc_fb_build_schema@@Base+0x11b0>
  42487c:	xor    eax,eax
  42487e:	jmp    424850 <__flatcc_fb_build_schema@@Base+0x11c0>
  424880:	test   rdi,rdi
  424883:	je     424910 <__flatcc_fb_build_schema@@Base+0x1280>
  424889:	xor    esi,esi
  42488b:	xor    edx,edx
  42488d:	call   419e20 <fb_scope_table_find@@Base>
  424892:	jmp    4247b0 <__flatcc_fb_build_schema@@Base+0x1120>
  424897:	mov    rdi,QWORD PTR [r12+0x260]
  42489f:	test   rdi,rdi
  4248a2:	je     424910 <__flatcc_fb_build_schema@@Base+0x1280>
  4248a4:	test   eax,eax
  4248a6:	mov    ecx,0x0
  4248ab:	cmove  rsi,rcx
  4248af:	movsxd rdx,eax
  4248b2:	call   419e20 <fb_scope_table_find@@Base>
  4248b7:	test   rax,rax
  4248ba:	je     424910 <__flatcc_fb_build_schema@@Base+0x1280>
  4248bc:	add    rax,0x8
  4248c0:	movsxd rdx,r15d
  4248c3:	mov    rdi,rax
  4248c6:	mov    rsi,QWORD PTR [rsp+0x8]
  4248cb:	call   4194b0 <fb_symbol_table_find@@Base>
  4248d0:	mov    r15,rax
  4248d3:	test   rax,rax
  4248d6:	je     424910 <__flatcc_fb_build_schema@@Base+0x1280>
  4248d8:	movzx  eax,WORD PTR [r15+0x10]
  4248dd:	test   ax,ax
  4248e0:	mov    r13,QWORD PTR [rsp+0x48]
  4248e5:	mov    ebx,DWORD PTR [rsp+0x4]
  4248e9:	je     424904 <__flatcc_fb_build_schema@@Base+0x1274>
  4248eb:	cmp    DWORD PTR [r12+0x11c],0x0
  4248f4:	je     424c8d <__flatcc_fb_build_schema@@Base+0x15fd>
  4248fa:	cmp    ax,0x1
  4248fe:	jne    424ca9 <__flatcc_fb_build_schema@@Base+0x1619>
  424904:	mov    QWORD PTR [r14+0x90],r15
  42490b:	jmp    4242a4 <__flatcc_fb_build_schema@@Base+0xc14>
  424910:	mov    rax,QWORD PTR [rsp+0x50]
  424915:	mov    rsi,QWORD PTR [rax+0x8]
  424919:	mov    r8,QWORD PTR [rax+0x10]
  42491d:	mov    r9d,DWORD PTR [rax+0x18]
  424921:	mov    rdi,r12
  424924:	lea    rdx,[rip+0x2342f]        # 447d5a <fb_schema_table_deleted@@Base+0x2612>
  42492b:	xor    ecx,ecx
  42492d:	call   41b6e0 <__flatcc_error_report@@Base>
  424932:	mov    r13,QWORD PTR [rsp+0x48]
  424937:	mov    ebx,DWORD PTR [rsp+0x4]
  42493b:	jmp    4242a4 <__flatcc_fb_build_schema@@Base+0xc14>
  424940:	test   r15,r15
  424943:	je     424981 <__flatcc_fb_build_schema@@Base+0x12f1>
  424945:	movzx  eax,WORD PTR [r15+0x20]
  42494a:	cmp    ax,0x5
  42494e:	jne    424c35 <__flatcc_fb_build_schema@@Base+0x15a5>
  424954:	mov    rax,QWORD PTR [r15+0x10]
  424958:	cmp    rax,QWORD PTR [r12+0x148]
  424960:	jae    424c6c <__flatcc_fb_build_schema@@Base+0x15dc>
  424966:	movzx  eax,ax
  424969:	mov    QWORD PTR [r14+0x88],rax
  424970:	mov    rcx,QWORD PTR [rsp+0x40]
  424975:	cmp    rax,rcx
  424978:	cmova  rcx,rax
  42497c:	mov    QWORD PTR [rsp+0x40],rcx
  424981:	mov    DWORD PTR [rsp+0x4],0x0
  424989:	cmp    DWORD PTR [rsp+0x18],0x0
  42498e:	je     42471d <__flatcc_fb_build_schema@@Base+0x108d>
  424994:	mov    rax,QWORD PTR [r14+0x88]
  42499b:	mov    rcx,QWORD PTR [rsp+0x30]
  4249a0:	mov    cl,BYTE PTR [rcx+rax*1]
  4249a3:	test   cl,cl
  4249a5:	je     424cc5 <__flatcc_fb_build_schema@@Base+0x1635>
  4249ab:	mov    DWORD PTR [rsp+0x8],edx
  4249af:	cmp    cl,0x2
  4249b2:	jne    424cd8 <__flatcc_fb_build_schema@@Base+0x1648>
  4249b8:	mov    rsi,QWORD PTR [r15+0x8]
  4249bc:	mov    rdi,r12
  4249bf:	lea    rdx,[rip+0x23082]        # 447a48 <fb_schema_table_deleted@@Base+0x2300>
  4249c6:	xor    ecx,ecx
  4249c8:	xor    r8d,r8d
  4249cb:	xor    r9d,r9d
  4249ce:	call   41b6e0 <__flatcc_error_report@@Base>
  4249d3:	mov    DWORD PTR [rsp+0x4],0x1
  4249db:	lea    r15,[rip+0x22b6e]        # 447550 <fb_schema_table_deleted@@Base+0x1e08>
  4249e2:	jmp    424dbe <__flatcc_fb_build_schema@@Base+0x172e>
  4249e7:	mov    rsi,QWORD PTR [r14+0x8]
  4249eb:	mov    rcx,QWORD PTR [r14+0x18]
  4249ef:	mov    rdi,r12
  4249f2:	lea    rdx,[rip+0x22f0b]        # 447904 <fb_schema_table_deleted@@Base+0x21bc>
  4249f9:	jmp    424b3e <__flatcc_fb_build_schema@@Base+0x14ae>
  4249fe:	test   BYTE PTR [r14+0x71],0x1
  424a03:	je     424a20 <__flatcc_fb_build_schema@@Base+0x1390>
  424a05:	mov    rsi,QWORD PTR [r14+0x8]
  424a09:	mov    rdi,r12
  424a0c:	lea    rdx,[rip+0x22d64]        # 447777 <fb_schema_table_deleted@@Base+0x202f>
  424a13:	xor    ecx,ecx
  424a15:	xor    r8d,r8d
  424a18:	xor    r9d,r9d
  424a1b:	call   41b6e0 <__flatcc_error_report@@Base>
  424a20:	mov    edx,DWORD PTR [r12+0x100]
  424a28:	mov    WORD PTR [r14+0x28],0xe
  424a2f:	mov    QWORD PTR [r14+0x18],rbx
  424a33:	mov    rax,QWORD PTR [rbx+0xb8]
  424a3a:	mov    QWORD PTR [r14+0x80],rax
  424a41:	movzx  eax,WORD PTR [rbx+0xb0]
  424a48:	mov    WORD PTR [r14+0x72],ax
  424a4d:	movzx  eax,WORD PTR [rbx+0x10]
  424a51:	cmp    DWORD PTR [rsp+0x4],0x0
  424a56:	jne    424a76 <__flatcc_fb_build_schema@@Base+0x13e6>
  424a58:	cmp    ax,0x4
  424a5c:	jne    424a76 <__flatcc_fb_build_schema@@Base+0x13e6>
  424a5e:	cmp    DWORD PTR [rsp+0x18],0x0
  424a63:	jne    424a71 <__flatcc_fb_build_schema@@Base+0x13e1>
  424a65:	movzx  ecx,WORD PTR [rsp+0x20]
  424a6a:	mov    QWORD PTR [r14+0x88],rcx
  424a71:	inc    QWORD PTR [rsp+0x20]
  424a76:	lea    rcx,[r14+0x48]
  424a7a:	movzx  esi,WORD PTR [r14+0x58]
  424a7f:	test   si,si
  424a82:	je     424b61 <__flatcc_fb_build_schema@@Base+0x14d1>
  424a88:	cmp    ax,0x3
  424a8c:	jne    424b2e <__flatcc_fb_build_schema@@Base+0x149e>
  424a92:	cmp    si,0xd
  424a96:	mov    DWORD PTR [rsp+0x8],edx
  424a9a:	mov    QWORD PTR [rsp+0x38],rcx
  424a9f:	jne    424be5 <__flatcc_fb_build_schema@@Base+0x1555>
  424aa5:	mov    rsi,QWORD PTR [r13+0x18]
  424aa9:	mov    rdx,QWORD PTR [rcx]
  424aac:	mov    QWORD PTR [rsp+0x28],0x0
  424ab5:	test   rdx,rdx
  424ab8:	je     4253b2 <__flatcc_fb_build_schema@@Base+0x1d22>
  424abe:	mov    rdi,r12
  424ac1:	mov    QWORD PTR [rsp+0x48],rdx
  424ac6:	lea    rcx,[rsp+0x28]
  424acb:	call   426000 <__flatcc_fb_build_schema@@Base+0x2970>
  424ad0:	test   rax,rax
  424ad3:	je     424adc <__flatcc_fb_build_schema@@Base+0x144c>
  424ad5:	cmp    WORD PTR [rax+0x10],0x3
  424ada:	je     424aee <__flatcc_fb_build_schema@@Base+0x145e>
  424adc:	mov    rax,QWORD PTR [rsp+0x48]
  424ae1:	cmp    QWORD PTR [rax],0x0
  424ae5:	mov    rax,rbx
  424ae8:	jne    424c59 <__flatcc_fb_build_schema@@Base+0x15c9>
  424aee:	add    rax,0x60
  424af2:	mov    rcx,QWORD PTR [rsp+0x28]
  424af7:	mov    rcx,QWORD PTR [rcx+0x8]
  424afb:	mov    rsi,QWORD PTR [rcx]
  424afe:	mov    rdx,QWORD PTR [rcx+0x8]
  424b02:	mov    rdi,rax
  424b05:	call   4194b0 <fb_symbol_table_find@@Base>
  424b0a:	test   rax,rax
  424b0d:	je     424c59 <__flatcc_fb_build_schema@@Base+0x15c9>
  424b13:	mov    rcx,QWORD PTR [rax+0x58]
  424b17:	mov    rdx,QWORD PTR [rsp+0x38]
  424b1c:	mov    QWORD PTR [rdx+0x10],rcx
  424b20:	vmovups xmm0,XMMWORD PTR [rax+0x48]
  424b25:	vmovups XMMWORD PTR [rdx],xmm0
  424b29:	jmp    424c21 <__flatcc_fb_build_schema@@Base+0x1591>
  424b2e:	mov    rsi,QWORD PTR [r14+0x8]
  424b32:	mov    rdi,r12
  424b35:	lea    rdx,[rip+0x22cc3]        # 4477ff <fb_schema_table_deleted@@Base+0x20b7>
  424b3c:	xor    ecx,ecx
  424b3e:	xor    r8d,r8d
  424b41:	xor    r9d,r9d
  424b44:	call   41b6e0 <__flatcc_error_report@@Base>
  424b49:	mov    WORD PTR [r14+0x28],0x1
  424b50:	lea    r15,[rip+0x229f9]        # 447550 <fb_schema_table_deleted@@Base+0x1e08>
  424b57:	mov    rbx,QWORD PTR [rsp+0x10]
  424b5c:	jmp    424170 <__flatcc_fb_build_schema@@Base+0xae0>
  424b61:	cmp    ax,0x3
  424b65:	jne    424712 <__flatcc_fb_build_schema@@Base+0x1082>
  424b6b:	mov    DWORD PTR [rsp+0x8],edx
  424b6f:	mov    WORD PTR [r14+0x58],0x5
  424b76:	mov    QWORD PTR [r14+0x48],0x0
  424b7e:	mov    edx,DWORD PTR [rbx+0x48]
  424b81:	mov    rdi,r12
  424b84:	mov    rsi,rbx
  424b87:	mov    QWORD PTR [rsp+0x38],rcx
  424b8c:	call   4261f0 <__flatcc_fb_coerce_scalar_type@@Base>
  424b91:	test   eax,eax
  424b93:	jne    424b49 <__flatcc_fb_build_schema@@Base+0x14b9>
  424b95:	mov    rsi,QWORD PTR [rsp+0x38]
  424b9a:	cmp    DWORD PTR [r12+0x140],0x0
  424ba3:	je     424c21 <__flatcc_fb_build_schema@@Base+0x1591>
  424ba5:	mov    rdi,QWORD PTR [r14+0x18]
  424ba9:	sub    rdi,0xffffffffffffff80
  424bad:	call   42c920 <fb_value_set_find_item@@Base>
  424bb2:	test   rax,rax
  424bb5:	jne    424c21 <__flatcc_fb_build_schema@@Base+0x1591>
  424bb7:	mov    rsi,QWORD PTR [r14+0x8]
  424bbb:	mov    rcx,QWORD PTR [rbx+0x8]
  424bbf:	mov    rdi,r12
  424bc2:	lea    rdx,[rip+0x22cc2]        # 44788b <fb_schema_table_deleted@@Base+0x2143>
  424bc9:	jmp    424b3e <__flatcc_fb_build_schema@@Base+0x14ae>
  424bce:	mov    rsi,QWORD PTR [r14+0x8]
  424bd2:	mov    rcx,QWORD PTR [rbx+0x8]
  424bd6:	mov    rdi,r12
  424bd9:	lea    rdx,[rip+0x22bf9]        # 4477d9 <fb_schema_table_deleted@@Base+0x2091>
  424be0:	jmp    424b3e <__flatcc_fb_build_schema@@Base+0x14ae>
  424be5:	mov    edx,DWORD PTR [rbx+0x48]
  424be8:	mov    rdi,r12
  424beb:	mov    rsi,r14
  424bee:	call   4261f0 <__flatcc_fb_coerce_scalar_type@@Base>
  424bf3:	test   eax,eax
  424bf5:	jne    424b49 <__flatcc_fb_build_schema@@Base+0x14b9>
  424bfb:	mov    rsi,QWORD PTR [rsp+0x38]
  424c00:	cmp    DWORD PTR [r12+0x140],0x0
  424c09:	je     424c21 <__flatcc_fb_build_schema@@Base+0x1591>
  424c0b:	mov    rdi,QWORD PTR [r14+0x18]
  424c0f:	sub    rdi,0xffffffffffffff80
  424c13:	call   42c920 <fb_value_set_find_item@@Base>
  424c18:	test   rax,rax
  424c1b:	je     424d6a <__flatcc_fb_build_schema@@Base+0x16da>
  424c21:	mov    edx,DWORD PTR [rsp+0x8]
  424c25:	cmp    DWORD PTR [rsp+0x4],0x0
  424c2a:	jne    42471d <__flatcc_fb_build_schema@@Base+0x108d>
  424c30:	jmp    424697 <__flatcc_fb_build_schema@@Base+0x1007>
  424c35:	mov    DWORD PTR [rsp+0x8],edx
  424c39:	mov    rsi,QWORD PTR [r15+0x8]
  424c3d:	cmp    ax,0x4
  424c41:	lea    rbx,[rip+0x22908]        # 447550 <fb_schema_table_deleted@@Base+0x1e08>
  424c48:	mov    rdi,r12
  424c4b:	jne    424c81 <__flatcc_fb_build_schema@@Base+0x15f1>
  424c4d:	lea    rdx,[rip+0x22db8]        # 447a0c <fb_schema_table_deleted@@Base+0x22c4>
  424c54:	jmp    424da6 <__flatcc_fb_build_schema@@Base+0x1716>
  424c59:	mov    rsi,QWORD PTR [r14+0x48]
  424c5d:	mov    rdi,r12
  424c60:	lea    rdx,[rip+0x22bc4]        # 44782b <fb_schema_table_deleted@@Base+0x20e3>
  424c67:	jmp    4246fb <__flatcc_fb_build_schema@@Base+0x106b>
  424c6c:	mov    rsi,QWORD PTR [r14+0x8]
  424c70:	mov    rdi,r12
  424c73:	mov    ebx,edx
  424c75:	lea    rdx,[rip+0x22d72]        # 4479ee <fb_schema_table_deleted@@Base+0x22a6>
  424c7c:	jmp    4246c4 <__flatcc_fb_build_schema@@Base+0x1034>
  424c81:	lea    rdx,[rip+0x22da4]        # 447a2c <fb_schema_table_deleted@@Base+0x22e4>
  424c88:	jmp    424da6 <__flatcc_fb_build_schema@@Base+0x1716>
  424c8d:	mov    rax,QWORD PTR [rsp+0x50]
  424c92:	mov    rsi,QWORD PTR [rax+0x8]
  424c96:	mov    rcx,QWORD PTR [r15+0x8]
  424c9a:	mov    rdi,r12
  424c9d:	lea    rdx,[rip+0x230d1]        # 447d75 <fb_schema_table_deleted@@Base+0x262d>
  424ca4:	jmp    424299 <__flatcc_fb_build_schema@@Base+0xc09>
  424ca9:	mov    rax,QWORD PTR [rsp+0x50]
  424cae:	mov    rsi,QWORD PTR [rax+0x8]
  424cb2:	mov    rcx,QWORD PTR [r15+0x8]
  424cb6:	mov    rdi,r12
  424cb9:	lea    rdx,[rip+0x230e0]        # 447da0 <fb_schema_table_deleted@@Base+0x2658>
  424cc0:	jmp    424299 <__flatcc_fb_build_schema@@Base+0xc09>
  424cc5:	mov    rcx,QWORD PTR [rsp+0x30]
  424cca:	mov    BYTE PTR [rcx+rax*1],0x1
  424cce:	test   rbx,rbx
  424cd1:	jne    424d00 <__flatcc_fb_build_schema@@Base+0x1670>
  424cd3:	jmp    42471d <__flatcc_fb_build_schema@@Base+0x108d>
  424cd8:	mov    rsi,QWORD PTR [r15+0x8]
  424cdc:	mov    rdi,r12
  424cdf:	lea    rdx,[rip+0x22d98]        # 447a7e <fb_schema_table_deleted@@Base+0x2336>
  424ce6:	xor    ecx,ecx
  424ce8:	xor    r8d,r8d
  424ceb:	xor    r9d,r9d
  424cee:	call   41b6e0 <__flatcc_error_report@@Base>
  424cf3:	mov    edx,DWORD PTR [rsp+0x8]
  424cf7:	test   rbx,rbx
  424cfa:	je     42471d <__flatcc_fb_build_schema@@Base+0x108d>
  424d00:	cmp    WORD PTR [rbx+0x10],0x4
  424d05:	jne    42471d <__flatcc_fb_build_schema@@Base+0x108d>
  424d0b:	mov    DWORD PTR [rsp+0x8],edx
  424d0f:	movzx  eax,WORD PTR [r14+0x28]
  424d14:	mov    rcx,QWORD PTR [r14+0x88]
  424d1b:	cmp    rcx,0x1
  424d1f:	lea    rbx,[rip+0x2282a]        # 447550 <fb_schema_table_deleted@@Base+0x1e08>
  424d26:	ja     424d40 <__flatcc_fb_build_schema@@Base+0x16b0>
  424d28:	cmp    ax,0xb
  424d2c:	mov    rsi,QWORD PTR [r15+0x8]
  424d30:	lea    rdx,[rip+0x22dc7]        # 447afe <fb_schema_table_deleted@@Base+0x23b6>
  424d37:	lea    rax,[rip+0x22d70]        # 447aae <fb_schema_table_deleted@@Base+0x2366>
  424d3e:	jmp    424d9f <__flatcc_fb_build_schema@@Base+0x170f>
  424d40:	mov    rdx,QWORD PTR [rsp+0x30]
  424d45:	mov    dl,BYTE PTR [rcx+rdx*1-0x1]
  424d49:	test   dl,dl
  424d4b:	je     424d7d <__flatcc_fb_build_schema@@Base+0x16ed>
  424d4d:	cmp    dl,0x2
  424d50:	jne    424d89 <__flatcc_fb_build_schema@@Base+0x16f9>
  424d52:	cmp    ax,0xb
  424d56:	mov    rsi,QWORD PTR [r15+0x8]
  424d5a:	lea    rdx,[rip+0x22e47]        # 447ba8 <fb_schema_table_deleted@@Base+0x2460>
  424d61:	lea    rax,[rip+0x22ddf]        # 447b47 <fb_schema_table_deleted@@Base+0x23ff>
  424d68:	jmp    424d9f <__flatcc_fb_build_schema@@Base+0x170f>
  424d6a:	mov    rsi,QWORD PTR [r14+0x8]
  424d6e:	mov    rdi,r12
  424d71:	lea    rdx,[rip+0x22ae3]        # 44785b <fb_schema_table_deleted@@Base+0x2113>
  424d78:	jmp    424b3c <__flatcc_fb_build_schema@@Base+0x14ac>
  424d7d:	mov    rax,QWORD PTR [rsp+0x30]
  424d82:	mov    BYTE PTR [rax+rcx*1-0x1],0x2
  424d87:	jmp    424dbb <__flatcc_fb_build_schema@@Base+0x172b>
  424d89:	cmp    ax,0xb
  424d8d:	mov    rsi,QWORD PTR [r15+0x8]
  424d91:	lea    rdx,[rip+0x22ebf]        # 447c57 <fb_schema_table_deleted@@Base+0x250f>
  424d98:	lea    rax,[rip+0x22e63]        # 447c02 <fb_schema_table_deleted@@Base+0x24ba>
  424d9f:	cmove  rdx,rax
  424da3:	mov    rdi,r12
  424da6:	xor    ecx,ecx
  424da8:	xor    r8d,r8d
  424dab:	xor    r9d,r9d
  424dae:	call   41b6e0 <__flatcc_error_report@@Base>
  424db3:	mov    DWORD PTR [rsp+0x4],0x1
  424dbb:	mov    r15,rbx
  424dbe:	mov    edx,DWORD PTR [rsp+0x8]
  424dc2:	jmp    424724 <__flatcc_fb_build_schema@@Base+0x1094>
  424dc7:	mov    ecx,DWORD PTR [rsp+0x4]
  424dcb:	test   ecx,ecx
  424dcd:	je     424e2b <__flatcc_fb_build_schema@@Base+0x179b>
  424dcf:	xor    eax,eax
  424dd1:	mov    rdx,QWORD PTR [rsp+0x20]
  424dd6:	mov    ebx,ecx
  424dd8:	mov    ecx,DWORD PTR [rsp+0x1c]
  424ddc:	cmp    QWORD PTR [rsp+0x40],rdx
  424de1:	jae    424e4a <__flatcc_fb_build_schema@@Base+0x17ba>
  424de3:	jmp    424f0d <__flatcc_fb_build_schema@@Base+0x187d>
  424de8:	xor    eax,eax
  424dea:	mov    QWORD PTR [rsp+0x30],rax
  424def:	xor    ecx,ecx
  424df1:	xor    eax,eax
  424df3:	mov    QWORD PTR [rsp+0x40],rax
  424df8:	mov    DWORD PTR [rsp+0x18],0x0
  424e00:	xor    edx,edx
  424e02:	jmp    424e34 <__flatcc_fb_build_schema@@Base+0x17a4>
  424e04:	mov    rsi,QWORD PTR [r14+0x8]
  424e08:	mov    rdi,r12
  424e0b:	lea    rdx,[rip+0x22760]        # 447572 <fb_schema_table_deleted@@Base+0x1e2a>
  424e12:	xor    ecx,ecx
  424e14:	xor    r8d,r8d
  424e17:	xor    r9d,r9d
  424e1a:	call   41b6e0 <__flatcc_error_report@@Base>
  424e1f:	mov    WORD PTR [r13+0x58],0x1
  424e26:	jmp    423ec0 <__flatcc_fb_build_schema@@Base+0x830>
  424e2b:	mov    ecx,DWORD PTR [rsp+0x1c]
  424e2f:	mov    rdx,QWORD PTR [rsp+0x20]
  424e34:	mov    QWORD PTR [r13+0xa8],rdx
  424e3b:	mov    al,0x1
  424e3d:	xor    ebx,ebx
  424e3f:	cmp    QWORD PTR [rsp+0x40],rdx
  424e44:	jb     424f0d <__flatcc_fb_build_schema@@Base+0x187d>
  424e4a:	test   rdx,rdx
  424e4d:	je     424f0d <__flatcc_fb_build_schema@@Base+0x187d>
  424e53:	test   al,al
  424e55:	je     424f0d <__flatcc_fb_build_schema@@Base+0x187d>
  424e5b:	cmp    DWORD PTR [rsp+0x18],0x0
  424e60:	je     424f0d <__flatcc_fb_build_schema@@Base+0x187d>
  424e66:	mov    ebx,0x1
  424e6b:	cmp    QWORD PTR [rsp+0x40],0x0
  424e71:	je     424f0d <__flatcc_fb_build_schema@@Base+0x187d>
  424e77:	mov    DWORD PTR [rsp+0x1c],ecx
  424e7b:	mov    r14d,0xa
  424e81:	xor    ebx,ebx
  424e83:	jmp    424e9a <__flatcc_fb_build_schema@@Base+0x180a>
  424e85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424e8f:	nop
  424e90:	inc    rbx
  424e93:	cmp    QWORD PTR [rsp+0x40],rbx
  424e98:	je     424efd <__flatcc_fb_build_schema@@Base+0x186d>
  424e9a:	mov    rax,QWORD PTR [rsp+0x30]
  424e9f:	cmp    BYTE PTR [rax+rbx*1],0x0
  424ea3:	jne    424e90 <__flatcc_fb_build_schema@@Base+0x1800>
  424ea5:	test   r14d,r14d
  424ea8:	je     424ee2 <__flatcc_fb_build_schema@@Base+0x1852>
  424eaa:	dec    r14d
  424ead:	lea    r15,[rsp+0xc0]
  424eb5:	mov    rdi,r15
  424eb8:	lea    rsi,[rip+0x22e2d]        # 447cec <fb_schema_table_deleted@@Base+0x25a4>
  424ebf:	mov    rdx,rbx
  424ec2:	xor    eax,eax
  424ec4:	call   406200 <sprintf@plt>
  424ec9:	mov    rsi,QWORD PTR [r13+0x8]
  424ecd:	mov    rdi,r12
  424ed0:	mov    rdx,r15
  424ed3:	xor    ecx,ecx
  424ed5:	xor    r8d,r8d
  424ed8:	xor    r9d,r9d
  424edb:	call   41b6e0 <__flatcc_error_report@@Base>
  424ee0:	jmp    424e90 <__flatcc_fb_build_schema@@Base+0x1800>
  424ee2:	mov    rsi,QWORD PTR [r13+0x8]
  424ee6:	mov    rdi,r12
  424ee9:	lea    rdx,[rip+0x22de6]        # 447cd6 <fb_schema_table_deleted@@Base+0x258e>
  424ef0:	xor    ecx,ecx
  424ef2:	xor    r8d,r8d
  424ef5:	xor    r9d,r9d
  424ef8:	call   41b6e0 <__flatcc_error_report@@Base>
  424efd:	lea    r15,[rip+0x2264c]        # 447550 <fb_schema_table_deleted@@Base+0x1e08>
  424f04:	mov    ebx,0x1
  424f09:	mov    ecx,DWORD PTR [rsp+0x1c]
  424f0d:	xor    eax,eax
  424f0f:	test   ecx,ecx
  424f11:	je     424f28 <__flatcc_fb_build_schema@@Base+0x1898>
  424f13:	or     BYTE PTR [r13+0x12],0x8
  424f18:	cmp    ecx,0x2
  424f1b:	jl     424f28 <__flatcc_fb_build_schema@@Base+0x1898>
  424f1d:	cmp    DWORD PTR [r12+0x108],0x0
  424f26:	je     424f35 <__flatcc_fb_build_schema@@Base+0x18a5>
  424f28:	test   ebx,ebx
  424f2a:	jne    424f59 <__flatcc_fb_build_schema@@Base+0x18c9>
  424f2c:	test   eax,eax
  424f2e:	jne    424f59 <__flatcc_fb_build_schema@@Base+0x18c9>
  424f30:	jmp    423ec0 <__flatcc_fb_build_schema@@Base+0x830>
  424f35:	mov    rsi,QWORD PTR [r13+0x8]
  424f39:	mov    rdi,r12
  424f3c:	lea    rdx,[rip+0x2237f]        # 4472c2 <fb_schema_table_deleted@@Base+0x1b7a>
  424f43:	xor    ecx,ecx
  424f45:	xor    r8d,r8d
  424f48:	xor    r9d,r9d
  424f4b:	call   41b6e0 <__flatcc_error_report@@Base>
  424f50:	mov    eax,0xffffffff
  424f55:	test   ebx,ebx
  424f57:	je     424f2c <__flatcc_fb_build_schema@@Base+0x189c>
  424f59:	mov    WORD PTR [r13+0x58],0x1
  424f60:	jmp    423ec0 <__flatcc_fb_build_schema@@Base+0x830>
  424f65:	mov    rax,QWORD PTR [r12+0x240]
  424f6d:	test   rax,rax
  424f70:	je     424f9b <__flatcc_fb_build_schema@@Base+0x190b>
  424f72:	xor    edx,edx
  424f74:	nop    WORD PTR cs:[rax+rax*1+0x0]
  424f7e:	xchg   ax,ax
  424f80:	mov    rcx,rax
  424f83:	mov    rax,QWORD PTR [rax+0xc0]
  424f8a:	mov    QWORD PTR [rcx+0xc0],rdx
  424f91:	mov    rdx,rcx
  424f94:	test   rax,rax
  424f97:	jne    424f80 <__flatcc_fb_build_schema@@Base+0x18f0>
  424f99:	jmp    424f9d <__flatcc_fb_build_schema@@Base+0x190d>
  424f9b:	xor    ecx,ecx
  424f9d:	mov    QWORD PTR [r12+0x240],rcx
  424fa5:	mov    rax,QWORD PTR [r12+0x238]
  424fad:	test   rax,rax
  424fb0:	je     42521d <__flatcc_fb_build_schema@@Base+0x1b8d>
  424fb6:	lea    r9,[rsp+0x100]
  424fbe:	vxorps xmm0,xmm0,xmm0
  424fc2:	mov    edx,0x7
  424fc7:	mov    r11d,0x8680
  424fcd:	lea    r8,[rsp+0x28]
  424fd2:	lea    r10,[rsp+0xc0]
  424fda:	cmp    WORD PTR [rax+0x10],0x0
  424fdf:	jne    425000 <__flatcc_fb_build_schema@@Base+0x1970>
  424fe1:	jmp    425013 <__flatcc_fb_build_schema@@Base+0x1983>
  424fe3:	mov    QWORD PTR [rcx],0x0
  424fea:	mov    rcx,QWORD PTR [rsp+0xc0]
  424ff2:	mov    QWORD PTR [rax+0x30],rcx
  424ff6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425000:	mov    rax,QWORD PTR [rax]
  425003:	test   rax,rax
  425006:	je     42521d <__flatcc_fb_build_schema@@Base+0x1b8d>
  42500c:	cmp    WORD PTR [rax+0x10],0x0
  425011:	jne    425000 <__flatcc_fb_build_schema@@Base+0x1970>
  425013:	test   BYTE PTR [rax+0xa4],0x8
  42501a:	mov    rdi,QWORD PTR [rax+0x28]
  42501e:	jne    425139 <__flatcc_fb_build_schema@@Base+0x1aa9>
  425024:	vmovaps YMMWORD PTR [rsp+0xe0],ymm0
  42502d:	vmovaps YMMWORD PTR [rsp+0xc0],ymm0
  425036:	mov    QWORD PTR [rsp+0x100],0x0
  425042:	vmovaps YMMWORD PTR [rsp+0x80],ymm0
  42504b:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  425051:	mov    QWORD PTR [rsp+0xa0],0x0
  42505d:	test   rdi,rdi
  425060:	je     42517d <__flatcc_fb_build_schema@@Base+0x1aed>
  425066:	mov    rcx,rdi
  425069:	jmp    425096 <__flatcc_fb_build_schema@@Base+0x1a06>
  42506b:	nop    DWORD PTR [rax+rax*1+0x0]
  425070:	lea    rsi,[rsp+rbx*8]
  425074:	add    rsi,0xc0
  42507b:	mov    QWORD PTR [rsi],rcx
  42507e:	lea    rsi,[rcx+0x98]
  425085:	mov    QWORD PTR [rsp+rbx*8+0x60],rsi
  42508a:	mov    rcx,QWORD PTR [rcx]
  42508d:	test   rcx,rcx
  425090:	je     42517d <__flatcc_fb_build_schema@@Base+0x1aed>
  425096:	movzx  ebx,WORD PTR [rcx+0x28]
  42509a:	cmp    bx,0xf
  42509e:	ja     42512b <__flatcc_fb_build_schema@@Base+0x1a9b>
  4250a4:	bt     r11d,ebx
  4250a8:	jae    4250f0 <__flatcc_fb_build_schema@@Base+0x1a60>
  4250aa:	movzx  ebx,WORD PTR [r12+0x12c]
  4250b3:	test   bx,bx
  4250b6:	je     425309 <__flatcc_fb_build_schema@@Base+0x1c79>
  4250bc:	movzx  esi,bx
  4250bf:	shr    esi,1
  4250c1:	lzcnt  si,si
  4250c6:	mov    ebx,0x10
  4250cb:	sub    ebx,esi
  4250cd:	cmp    bx,0x7
  4250d1:	cmovae ebx,edx
  4250d4:	movzx  ebx,bx
  4250d7:	cmp    QWORD PTR [rsp+rbx*8+0xc0],0x0
  4250e0:	je     425070 <__flatcc_fb_build_schema@@Base+0x19e0>
  4250e2:	mov    rsi,QWORD PTR [rsp+rbx*8+0x60]
  4250e7:	jmp    42507b <__flatcc_fb_build_schema@@Base+0x19eb>
  4250e9:	nop    DWORD PTR [rax+0x0]
  4250f0:	cmp    bx,0xe
  4250f4:	jne    425121 <__flatcc_fb_build_schema@@Base+0x1a91>
  4250f6:	mov    rbx,QWORD PTR [rcx+0x18]
  4250fa:	movzx  esi,WORD PTR [rbx+0x10]
  4250fe:	cmp    si,0x1
  425102:	je     425110 <__flatcc_fb_build_schema@@Base+0x1a80>
  425104:	cmp    si,0x4
  425108:	je     4250aa <__flatcc_fb_build_schema@@Base+0x1a1a>
  42510a:	cmp    si,0x3
  42510e:	jne    4250aa <__flatcc_fb_build_schema@@Base+0x1a1a>
  425110:	movzx  ebx,WORD PTR [rbx+0xb0]
  425117:	test   bx,bx
  42511a:	jne    4250bc <__flatcc_fb_build_schema@@Base+0x1a2c>
  42511c:	jmp    425309 <__flatcc_fb_build_schema@@Base+0x1c79>
  425121:	cmp    bx,0x1
  425125:	je     4251d5 <__flatcc_fb_build_schema@@Base+0x1b45>
  42512b:	movzx  ebx,WORD PTR [rcx+0x72]
  42512f:	test   bx,bx
  425132:	jne    4250bc <__flatcc_fb_build_schema@@Base+0x1a2c>
  425134:	jmp    425309 <__flatcc_fb_build_schema@@Base+0x1c79>
  425139:	mov    QWORD PTR [rsp+0xc0],0x0
  425145:	mov    rcx,r10
  425148:	test   rdi,rdi
  42514b:	je     424fe3 <__flatcc_fb_build_schema@@Base+0x1953>
  425151:	mov    rcx,r10
  425154:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42515e:	xchg   ax,ax
  425160:	mov    QWORD PTR [rcx],rdi
  425163:	mov    rcx,rdi
  425166:	mov    rsi,QWORD PTR [rdi]
  425169:	add    rcx,0x98
  425170:	mov    rdi,rsi
  425173:	test   rsi,rsi
  425176:	jne    425160 <__flatcc_fb_build_schema@@Base+0x1ad0>
  425178:	jmp    424fe3 <__flatcc_fb_build_schema@@Base+0x1953>
  42517d:	mov    QWORD PTR [rsp+0xa0],r9
  425185:	mov    cx,0x8
  425189:	jmp    4251aa <__flatcc_fb_build_schema@@Base+0x1b1a>
  42518b:	nop    DWORD PTR [rax+rax*1+0x0]
  425190:	xor    ecx,ecx
  425192:	movzx  esi,cx
  425195:	mov    rbx,QWORD PTR [rsp+rsi*8+0xc0]
  42519d:	mov    rdi,QWORD PTR [rsp+rdi*8+0x60]
  4251a2:	mov    QWORD PTR [rdi],rbx
  4251a5:	test   si,si
  4251a8:	je     4251cb <__flatcc_fb_build_schema@@Base+0x1b3b>
  4251aa:	movzx  edi,cx
  4251ad:	mov    rcx,rdi
  4251b0:	test   rcx,rcx
  4251b3:	je     425190 <__flatcc_fb_build_schema@@Base+0x1b00>
  4251b5:	lea    esi,[rcx-0x1]
  4251b8:	movzx  esi,si
  4251bb:	dec    rcx
  4251be:	cmp    QWORD PTR [rsp+rsi*8+0xc0],0x0
  4251c7:	je     4251b0 <__flatcc_fb_build_schema@@Base+0x1b20>
  4251c9:	jmp    425192 <__flatcc_fb_build_schema@@Base+0x1b02>
  4251cb:	mov    rsi,QWORD PTR [rsp+0x100]
  4251d3:	jmp    425214 <__flatcc_fb_build_schema@@Base+0x1b84>
  4251d5:	mov    QWORD PTR [rsp+0x28],0x0
  4251de:	mov    rcx,r8
  4251e1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4251eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4251f0:	mov    QWORD PTR [rcx],rdi
  4251f3:	mov    rcx,rdi
  4251f6:	mov    rsi,QWORD PTR [rdi]
  4251f9:	add    rcx,0x98
  425200:	mov    rdi,rsi
  425203:	test   rsi,rsi
  425206:	jne    4251f0 <__flatcc_fb_build_schema@@Base+0x1b60>
  425208:	mov    rsi,QWORD PTR [rsp+0x28]
  42520d:	mov    QWORD PTR [rcx],0x0
  425214:	mov    QWORD PTR [rax+0x30],rsi
  425218:	jmp    425000 <__flatcc_fb_build_schema@@Base+0x1970>
  42521d:	mov    rdx,QWORD PTR [r12+0x248]
  425225:	test   rdx,rdx
  425228:	je     425272 <__flatcc_fb_build_schema@@Base+0x1be2>
  42522a:	mov    rsi,QWORD PTR [r12+0x258]
  425232:	mov    rdi,r12
  425235:	xor    ecx,ecx
  425237:	vzeroupper 
  42523a:	call   426000 <__flatcc_fb_build_schema@@Base+0x2970>
  42523f:	mov    QWORD PTR [r12+0x250],rax
  425247:	test   rax,rax
  42524a:	je     42529b <__flatcc_fb_build_schema@@Base+0x1c0b>
  42524c:	cmp    DWORD PTR [r12+0x11c],0x0
  425255:	movzx  ecx,WORD PTR [rax+0x10]
  425259:	je     4252ac <__flatcc_fb_build_schema@@Base+0x1c1c>
  42525b:	cmp    cx,0x2
  42525f:	jb     4252cc <__flatcc_fb_build_schema@@Base+0x1c3c>
  425261:	mov    rsi,QWORD PTR [r12+0x248]
  425269:	lea    rdx,[rip+0x21898]        # 446b08 <fb_schema_table_deleted@@Base+0x13c0>
  425270:	jmp    4252c0 <__flatcc_fb_build_schema@@Base+0x1c30>
  425272:	cmp    DWORD PTR [r12+0x13c],0x0
  42527b:	je     4252e0 <__flatcc_fb_build_schema@@Base+0x1c50>
  42527d:	lea    rdx,[rip+0x21859]        # 446add <fb_schema_table_deleted@@Base+0x1395>
  425284:	mov    rdi,r12
  425287:	xor    esi,esi
  425289:	xor    ecx,ecx
  42528b:	xor    r8d,r8d
  42528e:	xor    r9d,r9d
  425291:	vzeroupper 
  425294:	call   41b6e0 <__flatcc_error_report@@Base>
  425299:	jmp    4252e0 <__flatcc_fb_build_schema@@Base+0x1c50>
  42529b:	mov    rsi,QWORD PTR [r12+0x248]
  4252a3:	lea    rdx,[rip+0x2184a]        # 446af4 <fb_schema_table_deleted@@Base+0x13ac>
  4252aa:	jmp    4252c0 <__flatcc_fb_build_schema@@Base+0x1c30>
  4252ac:	test   cx,cx
  4252af:	je     4252cc <__flatcc_fb_build_schema@@Base+0x1c3c>
  4252b1:	mov    rsi,QWORD PTR [r12+0x248]
  4252b9:	lea    rdx,[rip+0x2186e]        # 446b2e <fb_schema_table_deleted@@Base+0x13e6>
  4252c0:	mov    rdi,r12
  4252c3:	xor    ecx,ecx
  4252c5:	call   41b910 <error_ref_sym@@Base>
  4252ca:	jmp    4252d4 <__flatcc_fb_build_schema@@Base+0x1c44>
  4252cc:	mov    QWORD PTR [r12+0x250],rax
  4252d4:	mov    QWORD PTR [r12+0x248],0x0
  4252e0:	mov    eax,DWORD PTR [r12+0xd0]
  4252e8:	xor    ecx,ecx
  4252ea:	test   eax,eax
  4252ec:	sete   cl
  4252ef:	mov    DWORD PTR [r12+0xe4],ecx
  4252f7:	lea    rsp,[rbp-0x28]
  4252fb:	pop    rbx
  4252fc:	pop    r12
  4252fe:	pop    r13
  425300:	pop    r14
  425302:	pop    r15
  425304:	pop    rbp
  425305:	vzeroupper 
  425308:	ret    
  425309:	lea    rdi,[rip+0x22cfd]        # 44800d <fb_schema_table_deleted@@Base+0x28c5>
  425310:	lea    rsi,[rip+0x216cf]        # 4469e6 <fb_schema_table_deleted@@Base+0x129e>
  425317:	lea    rcx,[rip+0x22cf5]        # 448013 <fb_schema_table_deleted@@Base+0x28cb>
  42531e:	mov    edx,0x5f1
  425323:	vzeroupper 
  425326:	call   4060f0 <__assert_fail@plt>
  42532b:	mov    rax,QWORD PTR [rip+0x2acc6]        # 44fff8 <stderr@GLIBC_2.2.5>
  425332:	mov    rcx,QWORD PTR [rax]
  425335:	lea    rdi,[rip+0x8ceb]        # 42e027 <_IO_stdin_used@@Base+0x1027>
  42533c:	mov    esi,0x22
  425341:	mov    edx,0x1
  425346:	call   406220 <fwrite@plt>
  42534b:	mov    edi,0x1
  425350:	call   406210 <exit@plt>
  425355:	lea    rdi,[rip+0x21654]        # 4469b0 <fb_schema_table_deleted@@Base+0x1268>
  42535c:	lea    rsi,[rip+0x21683]        # 4469e6 <fb_schema_table_deleted@@Base+0x129e>
  425363:	lea    rcx,[rip+0x216df]        # 446a49 <fb_schema_table_deleted@@Base+0x1301>
  42536a:	mov    edx,0x616
  42536f:	call   4060f0 <__assert_fail@plt>
  425374:	lea    rdi,[rip+0x221c6]        # 447541 <fb_schema_table_deleted@@Base+0x1df9>
  42537b:	lea    rsi,[rip+0x21664]        # 4469e6 <fb_schema_table_deleted@@Base+0x129e>
  425382:	lea    rcx,[rip+0x22181]        # 44750a <fb_schema_table_deleted@@Base+0x1dc2>
  425389:	mov    edx,0x302
  42538e:	call   4060f0 <__assert_fail@plt>
  425393:	lea    rdi,[rip+0x221a7]        # 447541 <fb_schema_table_deleted@@Base+0x1df9>
  42539a:	lea    rsi,[rip+0x21645]        # 4469e6 <fb_schema_table_deleted@@Base+0x129e>
  4253a1:	lea    rcx,[rip+0x22a95]        # 447e3d <fb_schema_table_deleted@@Base+0x26f5>
  4253a8:	mov    edx,0x469
  4253ad:	call   4060f0 <__assert_fail@plt>
  4253b2:	lea    rdi,[rip+0x22a1e]        # 447dd7 <fb_schema_table_deleted@@Base+0x268f>
  4253b9:	lea    rsi,[rip+0x21626]        # 4469e6 <fb_schema_table_deleted@@Base+0x129e>
  4253c0:	lea    rcx,[rip+0x22a14]        # 447ddb <fb_schema_table_deleted@@Base+0x2693>
  4253c7:	mov    edx,0x15b
  4253cc:	call   4060f0 <__assert_fail@plt>
  4253d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4253db:	nop    DWORD PTR [rax+rax*1+0x0]
  4253e0:	push   rbp
  4253e1:	push   r15
  4253e3:	push   r14
  4253e5:	push   r13
  4253e7:	push   r12
  4253e9:	push   rbx
  4253ea:	sub    rsp,0xb8
  4253f1:	mov    r15,rsi
  4253f4:	mov    r14,rdi
  4253f7:	movzx  r12d,WORD PTR [rsi+0x10]
  4253fc:	cmp    r12w,0x4
  425401:	jne    42541b <__flatcc_fb_build_schema@@Base+0x1d8b>
  425403:	cmp    WORD PTR [r15+0x58],0x0
  425409:	je     425451 <__flatcc_fb_build_schema@@Base+0x1dc1>
  42540b:	mov    rsi,QWORD PTR [r15+0x8]
  42540f:	lea    rdx,[rip+0x21817]        # 446c2d <fb_schema_table_deleted@@Base+0x14e5>
  425416:	jmp    42594e <__flatcc_fb_build_schema@@Base+0x22be>
  42541b:	cmp    r12w,0x3
  425420:	jne    425a26 <__flatcc_fb_build_schema@@Base+0x2396>
  425426:	movzx  eax,WORD PTR [r15+0x58]
  42542b:	cmp    ax,0x8
  42542f:	je     425471 <__flatcc_fb_build_schema@@Base+0x1de1>
  425431:	test   ax,ax
  425434:	jne    425943 <__flatcc_fb_build_schema@@Base+0x22b3>
  42543a:	mov    WORD PTR [r15+0x58],0x1
  425441:	mov    rsi,QWORD PTR [r15+0x8]
  425445:	lea    rdx,[rip+0x2179a]        # 446be6 <fb_schema_table_deleted@@Base+0x149e>
  42544c:	jmp    42594e <__flatcc_fb_build_schema@@Base+0x22be>
  425451:	mov    WORD PTR [r15+0x58],0x8
  425458:	mov    DWORD PTR [r15+0x48],0x4
  425460:	mov    QWORD PTR [r15+0xb8],0x1
  42546b:	mov    ax,0x1
  42546f:	jmp    4254ae <__flatcc_fb_build_schema@@Base+0x1e1e>
  425471:	mov    rax,QWORD PTR [r15+0x48]
  425475:	mov    rcx,QWORD PTR [rax+0x20]
  425479:	lea    rdx,[rcx+0x3e7]
  425480:	xor    eax,eax
  425482:	cmp    rdx,0x1b
  425486:	ja     425496 <__flatcc_fb_build_schema@@Base+0x1e06>
  425488:	lea    rax,[rip+0x21441]        # 4468d0 <fb_schema_table_deleted@@Base+0x1188>
  42548f:	mov    eax,DWORD PTR [rax+rcx*4+0xf9c]
  425496:	mov    DWORD PTR [r15+0x48],eax
  42549a:	mov    eax,eax
  42549c:	lea    rcx,[rip+0x213fd]        # 4468a0 <fb_schema_table_deleted@@Base+0x1158>
  4254a3:	movsxd rax,DWORD PTR [rcx+rax*4]
  4254a7:	mov    QWORD PTR [r15+0xb8],rax
  4254ae:	mov    WORD PTR [r15+0xb0],ax
  4254b6:	mov    rsi,QWORD PTR [r15+0x38]
  4254ba:	lea    rcx,[rsp+0x50]
  4254bf:	mov    rdi,r14
  4254c2:	mov    edx,0x20
  4254c7:	call   425e70 <__flatcc_fb_build_schema@@Base+0x27e0>
  4254cc:	mov    WORD PTR [r15+0xa4],ax
  4254d4:	mov    DWORD PTR [rsp+0x34],0x0
  4254dc:	test   al,0x20
  4254de:	je     4254f8 <__flatcc_fb_build_schema@@Base+0x1e68>
  4254e0:	mov    WORD PTR [rsp+0x20],0x5
  4254e7:	mov    QWORD PTR [rsp+0x10],0x0
  4254f0:	mov    DWORD PTR [rsp+0x34],0x1
  4254f8:	mov    edx,DWORD PTR [r15+0x48]
  4254fc:	cmp    edx,0x5
  4254ff:	jne    42550f <__flatcc_fb_build_schema@@Base+0x1e7f>
  425501:	mov    BYTE PTR [rsp+0x10],0x0
  425506:	mov    WORD PTR [rsp+0x20],0x6
  42550d:	jmp    425544 <__flatcc_fb_build_schema@@Base+0x1eb4>
  42550f:	mov    QWORD PTR [rsp+0x10],0x0
  425518:	mov    WORD PTR [rsp+0x20],0x4
  42551f:	lea    rcx,[rsp+0x10]
  425524:	mov    rdi,r14
  425527:	mov    rsi,r15
  42552a:	call   4261f0 <__flatcc_fb_coerce_scalar_type@@Base>
  42552f:	test   eax,eax
  425531:	je     425544 <__flatcc_fb_build_schema@@Base+0x1eb4>
  425533:	lea    rdx,[rip+0x21732]        # 446c6c <fb_schema_table_deleted@@Base+0x1524>
  42553a:	mov    rdi,r14
  42553d:	xor    esi,esi
  42553f:	jmp    425951 <__flatcc_fb_build_schema@@Base+0x22c1>
  425544:	mov    rbx,QWORD PTR [r15+0x28]
  425548:	test   rbx,rbx
  42554b:	je     425977 <__flatcc_fb_build_schema@@Base+0x22e7>
  425551:	mov    rcx,QWORD PTR [rsp+0x10]
  425556:	mov    rax,rcx
  425559:	mov    QWORD PTR [rsp+0x28],rcx
  42555e:	shr    rcx,0x8
  425562:	mov    QWORD PTR [rsp+0x38],rcx
  425567:	lea    r13,[r15+0x60]
  42556b:	lea    rax,[r14+0x80]
  425572:	mov    QWORD PTR [rsp+0x40],rax
  425577:	lea    rax,[r15+0x80]
  42557e:	mov    QWORD PTR [rsp+0x48],rax
  425583:	mov    ebp,0x1
  425588:	mov    WORD PTR [rsp+0xe],r12w
  42558e:	jmp    4255b9 <__flatcc_fb_build_schema@@Base+0x1f29>
  425590:	mov    rdi,r14
  425593:	lea    rdx,[rip+0x2172d]        # 446cc7 <fb_schema_table_deleted@@Base+0x157f>
  42559a:	xor    r8d,r8d
  42559d:	xor    r9d,r9d
  4255a0:	call   41b6e0 <__flatcc_error_report@@Base>
  4255a5:	mov    WORD PTR [rbx+0x28],0x1
  4255ab:	mov    rbx,QWORD PTR [rbx]
  4255ae:	xor    ebp,ebp
  4255b0:	test   rbx,rbx
  4255b3:	je     425963 <__flatcc_fb_build_schema@@Base+0x22d3>
  4255b9:	mov    rdi,r13
  4255bc:	mov    rsi,rbx
  4255bf:	mov    edx,0x1
  4255c4:	call   419490 <fb_symbol_table_insert_item@@Base>
  4255c9:	test   rax,rax
  4255cc:	je     4255f0 <__flatcc_fb_build_schema@@Base+0x1f60>
  4255ce:	mov    rcx,QWORD PTR [rax+0x8]
  4255d2:	mov    rsi,QWORD PTR [rbx+0x8]
  4255d6:	cmp    rcx,QWORD PTR [rsp+0x40]
  4255db:	jne    425590 <__flatcc_fb_build_schema@@Base+0x1f00>
  4255dd:	mov    rdi,r14
  4255e0:	lea    rdx,[rip+0x216c3]        # 446caa <fb_schema_table_deleted@@Base+0x1562>
  4255e7:	xor    ecx,ecx
  4255e9:	jmp    42559a <__flatcc_fb_build_schema@@Base+0x1f0a>
  4255eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4255f0:	cmp    WORD PTR [rbx+0x10],0x5
  4255f5:	jne    42597b <__flatcc_fb_build_schema@@Base+0x22eb>
  4255fb:	cmp    QWORD PTR [rbx+0x60],0x0
  425600:	jne    425a07 <__flatcc_fb_build_schema@@Base+0x2377>
  425606:	cmp    r12w,0x4
  42560b:	jne    425680 <__flatcc_fb_build_schema@@Base+0x1ff0>
  42560d:	mov    rsi,QWORD PTR [rbx+0x8]
  425611:	cmp    rsi,QWORD PTR [rsp+0x40]
  425616:	je     42563a <__flatcc_fb_build_schema@@Base+0x1faa>
  425618:	movzx  eax,WORD PTR [rbx+0x28]
  42561c:	cmp    ax,0x1
  425620:	je     4255ab <__flatcc_fb_build_schema@@Base+0x1f1b>
  425622:	cmp    ax,0xc
  425626:	je     425642 <__flatcc_fb_build_schema@@Base+0x1fb2>
  425628:	cmp    ax,0xa
  42562c:	je     425672 <__flatcc_fb_build_schema@@Base+0x1fe2>
  42562e:	mov    rdi,r14
  425631:	lea    rdx,[rip+0x216e9]        # 446d21 <fb_schema_table_deleted@@Base+0x15d9>
  425638:	jmp    4255e7 <__flatcc_fb_build_schema@@Base+0x1f57>
  42563a:	mov    WORD PTR [rbx+0x28],0x0
  425640:	jmp    425680 <__flatcc_fb_build_schema@@Base+0x1ff0>
  425642:	mov    rsi,QWORD PTR [r15+0x18]
  425646:	mov    rdx,QWORD PTR [rbx+0x18]
  42564a:	mov    rdi,r14
  42564d:	xor    ecx,ecx
  42564f:	call   426000 <__flatcc_fb_build_schema@@Base+0x2970>
  425654:	test   rax,rax
  425657:	je     425911 <__flatcc_fb_build_schema@@Base+0x2281>
  42565d:	cmp    WORD PTR [rax+0x10],0x2
  425662:	jae    42592c <__flatcc_fb_build_schema@@Base+0x229c>
  425668:	mov    WORD PTR [rbx+0x28],0xe
  42566e:	mov    QWORD PTR [rbx+0x18],rax
  425672:	mov    QWORD PTR [rbx+0x80],0x0
  42567d:	nop    DWORD PTR [rax]
  425680:	movzx  eax,WORD PTR [rbx+0x58]
  425684:	test   ebp,ebp
  425686:	jne    425742 <__flatcc_fb_build_schema@@Base+0x20b2>
  42568c:	test   ax,ax
  42568f:	jne    425742 <__flatcc_fb_build_schema@@Base+0x20b2>
  425695:	movzx  eax,WORD PTR [rsp+0x20]
  42569a:	cmp    ax,0x4
  42569e:	je     4256fb <__flatcc_fb_build_schema@@Base+0x206b>
  4256a0:	cmp    ax,0x6
  4256a4:	je     4256d2 <__flatcc_fb_build_schema@@Base+0x2042>
  4256a6:	cmp    ax,0x5
  4256aa:	jne    42573e <__flatcc_fb_build_schema@@Base+0x20ae>
  4256b0:	cmp    DWORD PTR [r15+0x48],0x6
  4256b5:	mov    rax,QWORD PTR [rsp+0x10]
  4256ba:	jne    425736 <__flatcc_fb_build_schema@@Base+0x20a6>
  4256bc:	cmp    rax,0xffffffffffffffff
  4256c0:	jne    425736 <__flatcc_fb_build_schema@@Base+0x20a6>
  4256c2:	mov    rsi,QWORD PTR [rbx+0x8]
  4256c6:	mov    rdi,r14
  4256c9:	lea    rdx,[rip+0x2170c]        # 446ddc <fb_schema_table_deleted@@Base+0x1694>
  4256d0:	jmp    425724 <__flatcc_fb_build_schema@@Base+0x2094>
  4256d2:	cmp    BYTE PTR [rsp+0x10],0x1
  4256d7:	jne    4256f4 <__flatcc_fb_build_schema@@Base+0x2064>
  4256d9:	mov    rsi,QWORD PTR [rbx+0x8]
  4256dd:	mov    rdi,r14
  4256e0:	lea    rdx,[rip+0x2172d]        # 446e14 <fb_schema_table_deleted@@Base+0x16cc>
  4256e7:	xor    ecx,ecx
  4256e9:	xor    r8d,r8d
  4256ec:	xor    r9d,r9d
  4256ef:	call   41b6e0 <__flatcc_error_report@@Base>
  4256f4:	mov    BYTE PTR [rsp+0x10],0x1
  4256f9:	jmp    42573e <__flatcc_fb_build_schema@@Base+0x20ae>
  4256fb:	cmp    DWORD PTR [r15+0x48],0x6
  425700:	mov    rax,QWORD PTR [rsp+0x10]
  425705:	jne    425736 <__flatcc_fb_build_schema@@Base+0x20a6>
  425707:	movabs rcx,0x7fffffffffffffff
  425711:	cmp    rax,rcx
  425714:	jne    425736 <__flatcc_fb_build_schema@@Base+0x20a6>
  425716:	mov    rsi,QWORD PTR [rbx+0x8]
  42571a:	mov    rdi,r14
  42571d:	lea    rdx,[rip+0x216d5]        # 446df9 <fb_schema_table_deleted@@Base+0x16b1>
  425724:	xor    ecx,ecx
  425726:	xor    r8d,r8d
  425729:	xor    r9d,r9d
  42572c:	call   41b6e0 <__flatcc_error_report@@Base>
  425731:	mov    rax,QWORD PTR [rsp+0x10]
  425736:	inc    rax
  425739:	mov    QWORD PTR [rsp+0x10],rax
  42573e:	movzx  eax,WORD PTR [rbx+0x58]
  425742:	mov    r12,r13
  425745:	lea    r13,[rbx+0x48]
  425749:	cmp    DWORD PTR [rsp+0x34],0x0
  42574e:	je     425819 <__flatcc_fb_build_schema@@Base+0x2189>
  425754:	test   ax,ax
  425757:	je     425778 <__flatcc_fb_build_schema@@Base+0x20e8>
  425759:	cmp    ax,0x5
  42575d:	jne    4259b8 <__flatcc_fb_build_schema@@Base+0x2328>
  425763:	mov    rax,QWORD PTR [r13+0x10]
  425767:	mov    QWORD PTR [rsp+0x20],rax
  42576c:	vmovups xmm0,XMMWORD PTR [r13+0x0]
  425772:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  425778:	mov    rax,QWORD PTR [rsp+0x10]
  42577d:	mov    ecx,DWORD PTR [r15+0x48]
  425781:	lea    rdx,[rip+0x21118]        # 4468a0 <fb_schema_table_deleted@@Base+0x1158>
  425788:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  42578c:	shl    rcx,0x3
  425790:	cmp    rax,rcx
  425793:	jae    425988 <__flatcc_fb_build_schema@@Base+0x22f8>
  425799:	mov    ecx,0x1
  42579e:	shlx   rax,rcx,rax
  4257a3:	mov    QWORD PTR [rbx+0x48],rax
  4257a7:	mov    WORD PTR [rbx+0x58],0x5
  4257ad:	mov    edx,DWORD PTR [r15+0x48]
  4257b1:	mov    rdi,r14
  4257b4:	mov    rsi,rbx
  4257b7:	mov    rcx,r13
  4257ba:	call   4261f0 <__flatcc_fb_coerce_scalar_type@@Base>
  4257bf:	test   eax,eax
  4257c1:	jne    425988 <__flatcc_fb_build_schema@@Base+0x22f8>
  4257c7:	test   ebp,ebp
  4257c9:	jne    42586c <__flatcc_fb_build_schema@@Base+0x21dc>
  4257cf:	cmp    DWORD PTR [r14+0x120],0x0
  4257d7:	je     42586c <__flatcc_fb_build_schema@@Base+0x21dc>
  4257dd:	movzx  eax,WORD PTR [rsp+0x20]
  4257e2:	cmp    ax,0x4
  4257e6:	je     4258dc <__flatcc_fb_build_schema@@Base+0x224c>
  4257ec:	cmp    ax,0x6
  4257f0:	je     4258fd <__flatcc_fb_build_schema@@Base+0x226d>
  4257f6:	cmp    ax,0x5
  4257fa:	jne    42586c <__flatcc_fb_build_schema@@Base+0x21dc>
  4257fc:	mov    rax,QWORD PTR [rsp+0x38]
  425801:	shl    rax,0x8
  425805:	movzx  ecx,BYTE PTR [rsp+0x28]
  42580a:	or     rcx,rax
  42580d:	cmp    QWORD PTR [rsp+0x10],rcx
  425812:	ja     42586c <__flatcc_fb_build_schema@@Base+0x21dc>
  425814:	jmp    4259c5 <__flatcc_fb_build_schema@@Base+0x2335>
  425819:	test   ax,ax
  42581c:	je     42584f <__flatcc_fb_build_schema@@Base+0x21bf>
  42581e:	mov    rax,QWORD PTR [r13+0x10]
  425822:	mov    QWORD PTR [rsp+0x20],rax
  425827:	vmovups xmm0,XMMWORD PTR [r13+0x0]
  42582d:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  425833:	mov    edx,DWORD PTR [r15+0x48]
  425837:	mov    rdi,r14
  42583a:	mov    rsi,rbx
  42583d:	lea    rcx,[rsp+0x10]
  425842:	call   4261f0 <__flatcc_fb_coerce_scalar_type@@Base>
  425847:	test   eax,eax
  425849:	jne    42595e <__flatcc_fb_build_schema@@Base+0x22ce>
  42584f:	mov    rax,QWORD PTR [rsp+0x20]
  425854:	mov    QWORD PTR [r13+0x10],rax
  425858:	vmovaps xmm0,XMMWORD PTR [rsp+0x10]
  42585e:	vmovups XMMWORD PTR [r13+0x0],xmm0
  425864:	test   ebp,ebp
  425866:	je     4257cf <__flatcc_fb_build_schema@@Base+0x213f>
  42586c:	mov    rbp,QWORD PTR [rsp+0x10]
  425871:	mov    rdi,QWORD PTR [rsp+0x48]
  425876:	mov    rsi,r13
  425879:	mov    edx,0x1
  42587e:	call   42c870 <fb_value_set_insert_item@@Base>
  425883:	test   rax,rax
  425886:	mov    r13,r12
  425889:	movzx  r12d,WORD PTR [rsp+0xe]
  42588f:	je     4258a0 <__flatcc_fb_build_schema@@Base+0x2210>
  425891:	cmp    r12w,0x4
  425896:	je     425995 <__flatcc_fb_build_schema@@Base+0x2305>
  42589c:	or     BYTE PTR [rbx+0x12],0x4
  4258a0:	mov    rax,rbp
  4258a3:	shr    rax,0x8
  4258a7:	mov    QWORD PTR [rsp+0x38],rax
  4258ac:	cmp    QWORD PTR [rbx+0x60],0x0
  4258b1:	mov    QWORD PTR [rsp+0x28],rbp
  4258b6:	je     4255ab <__flatcc_fb_build_schema@@Base+0x1f1b>
  4258bc:	mov    rsi,QWORD PTR [rbx+0x8]
  4258c0:	mov    rdi,r14
  4258c3:	lea    rdx,[rip+0x216d7]        # 446fa1 <fb_schema_table_deleted@@Base+0x1859>
  4258ca:	xor    ecx,ecx
  4258cc:	xor    r8d,r8d
  4258cf:	xor    r9d,r9d
  4258d2:	call   41b6e0 <__flatcc_error_report@@Base>
  4258d7:	jmp    4255ab <__flatcc_fb_build_schema@@Base+0x1f1b>
  4258dc:	mov    rax,QWORD PTR [rsp+0x38]
  4258e1:	shl    rax,0x8
  4258e5:	movzx  ecx,BYTE PTR [rsp+0x28]
  4258ea:	or     rcx,rax
  4258ed:	cmp    QWORD PTR [rsp+0x10],rcx
  4258f2:	jg     42586c <__flatcc_fb_build_schema@@Base+0x21dc>
  4258f8:	jmp    4259c5 <__flatcc_fb_build_schema@@Base+0x2335>
  4258fd:	mov    rax,QWORD PTR [rsp+0x28]
  425902:	cmp    BYTE PTR [rsp+0x10],al
  425906:	ja     42586c <__flatcc_fb_build_schema@@Base+0x21dc>
  42590c:	jmp    4259ed <__flatcc_fb_build_schema@@Base+0x235d>
  425911:	mov    rsi,QWORD PTR [rbx+0x18]
  425915:	mov    rdi,r14
  425918:	lea    rdx,[rip+0x21449]        # 446d68 <fb_schema_table_deleted@@Base+0x1620>
  42591f:	mov    rcx,rbx
  425922:	call   41b910 <error_ref_sym@@Base>
  425927:	jmp    4255a5 <__flatcc_fb_build_schema@@Base+0x1f15>
  42592c:	mov    rsi,QWORD PTR [rbx+0x8]
  425930:	mov    rcx,QWORD PTR [rax+0x8]
  425934:	mov    rdi,r14
  425937:	lea    rdx,[rip+0x21458]        # 446d96 <fb_schema_table_deleted@@Base+0x164e>
  42593e:	jmp    42559a <__flatcc_fb_build_schema@@Base+0x1f0a>
  425943:	mov    rsi,QWORD PTR [r15+0x8]
  425947:	lea    rdx,[rip+0x212ae]        # 446bfc <fb_schema_table_deleted@@Base+0x14b4>
  42594e:	mov    rdi,r14
  425951:	xor    ecx,ecx
  425953:	xor    r8d,r8d
  425956:	xor    r9d,r9d
  425959:	call   41b6e0 <__flatcc_error_report@@Base>
  42595e:	mov    ebp,0xffffffff
  425963:	mov    eax,ebp
  425965:	add    rsp,0xb8
  42596c:	pop    rbx
  42596d:	pop    r12
  42596f:	pop    r13
  425971:	pop    r14
  425973:	pop    r15
  425975:	pop    rbp
  425976:	ret    
  425977:	xor    ebp,ebp
  425979:	jmp    425963 <__flatcc_fb_build_schema@@Base+0x22d3>
  42597b:	mov    rsi,QWORD PTR [rbx+0x8]
  42597f:	lea    rdx,[rip+0x2135c]        # 446ce2 <fb_schema_table_deleted@@Base+0x159a>
  425986:	jmp    42594e <__flatcc_fb_build_schema@@Base+0x22be>
  425988:	mov    rsi,QWORD PTR [rbx+0x8]
  42598c:	lea    rdx,[rip+0x214e9]        # 446e7c <fb_schema_table_deleted@@Base+0x1734>
  425993:	jmp    42594e <__flatcc_fb_build_schema@@Base+0x22be>
  425995:	mov    rsi,QWORD PTR [rbx+0x8]
  425999:	lea    rdx,[rip+0x215b7]        # 446f57 <fb_schema_table_deleted@@Base+0x180f>
  4259a0:	mov    rdi,r14
  4259a3:	xor    ecx,ecx
  4259a5:	xor    r8d,r8d
  4259a8:	xor    r9d,r9d
  4259ab:	call   41b6e0 <__flatcc_error_report@@Base>
  4259b0:	mov    WORD PTR [rbx+0x58],0x1
  4259b6:	jmp    42595e <__flatcc_fb_build_schema@@Base+0x22ce>
  4259b8:	mov    rsi,QWORD PTR [rbx+0x8]
  4259bc:	lea    rdx,[rip+0x2147e]        # 446e41 <fb_schema_table_deleted@@Base+0x16f9>
  4259c3:	jmp    42594e <__flatcc_fb_build_schema@@Base+0x22be>
  4259c5:	cmp    WORD PTR [rsp+0xe],0x4
  4259cb:	jne    4259e0 <__flatcc_fb_build_schema@@Base+0x2350>
  4259cd:	mov    rcx,QWORD PTR [rsp+0x38]
  4259d2:	shl    rcx,0x8
  4259d6:	movzx  eax,BYTE PTR [rsp+0x28]
  4259db:	or     rax,rcx
  4259de:	je     4259fa <__flatcc_fb_build_schema@@Base+0x236a>
  4259e0:	mov    rsi,QWORD PTR [rbx+0x8]
  4259e4:	lea    rdx,[rip+0x21505]        # 446ef0 <fb_schema_table_deleted@@Base+0x17a8>
  4259eb:	jmp    4259a0 <__flatcc_fb_build_schema@@Base+0x2310>
  4259ed:	mov    rsi,QWORD PTR [rbx+0x8]
  4259f1:	lea    rdx,[rip+0x2151f]        # 446f17 <fb_schema_table_deleted@@Base+0x17cf>
  4259f8:	jmp    4259a0 <__flatcc_fb_build_schema@@Base+0x2310>
  4259fa:	mov    rsi,QWORD PTR [rbx+0x8]
  4259fe:	lea    rdx,[rip+0x214aa]        # 446eaf <fb_schema_table_deleted@@Base+0x1767>
  425a05:	jmp    4259a0 <__flatcc_fb_build_schema@@Base+0x2310>
  425a07:	lea    rdi,[rip+0x212fd]        # 446d0b <fb_schema_table_deleted@@Base+0x15c3>
  425a0e:	lea    rsi,[rip+0x20fd1]        # 4469e6 <fb_schema_table_deleted@@Base+0x129e>
  425a15:	lea    rcx,[rip+0x21194]        # 446bb0 <fb_schema_table_deleted@@Base+0x1468>
  425a1c:	mov    edx,0x523
  425a21:	call   4060f0 <__assert_fail@plt>
  425a26:	lea    rdi,[rip+0xf624]        # 435051 <_IO_stdin_used@@Base+0x8051>
  425a2d:	lea    rsi,[rip+0x20fb2]        # 4469e6 <fb_schema_table_deleted@@Base+0x129e>
  425a34:	lea    rcx,[rip+0x21175]        # 446bb0 <fb_schema_table_deleted@@Base+0x1468>
  425a3b:	mov    edx,0x4cd
  425a40:	call   4060f0 <__assert_fail@plt>
  425a45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425a4f:	nop
  425a50:	push   rbp
  425a51:	push   r15
  425a53:	push   r14
  425a55:	push   r13
  425a57:	push   r12
  425a59:	push   rbx
  425a5a:	push   rax
  425a5b:	cmp    WORD PTR [rsi+0x10],0x1
  425a60:	jne    425e10 <__flatcc_fb_build_schema@@Base+0x2780>
  425a66:	mov    rbx,rsi
  425a69:	movzx  eax,WORD PTR [rsi+0x12]
  425a6d:	test   al,0x1
  425a6f:	jne    425e2f <__flatcc_fb_build_schema@@Base+0x279f>
  425a75:	xor    r13d,r13d
  425a78:	test   al,0x2
  425a7a:	jne    425de8 <__flatcc_fb_build_schema@@Base+0x2758>
  425a80:	cmp    QWORD PTR [rbx+0xc0],0x0
  425a88:	jne    425e4e <__flatcc_fb_build_schema@@Base+0x27be>
  425a8e:	mov    r14,rdi
  425a91:	or     eax,0x1
  425a94:	mov    WORD PTR [rbx+0x12],ax
  425a98:	mov    r15,QWORD PTR [rbx+0x28]
  425a9c:	mov    r12w,0x1
  425aa1:	test   r15,r15
  425aa4:	je     425caa <__flatcc_fb_build_schema@@Base+0x261a>
  425aaa:	mov    r13d,0xffffffff
  425ab0:	jmp    425afb <__flatcc_fb_build_schema@@Base+0x246b>
  425ab2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425abc:	nop    DWORD PTR [rax+0x0]
  425ac0:	mov    rsi,QWORD PTR [r15+0x8]
  425ac4:	mov    rdi,r14
  425ac7:	lea    rdx,[rip+0x21992]        # 447460 <fb_schema_table_deleted@@Base+0x1d18>
  425ace:	xor    ecx,ecx
  425ad0:	xor    r8d,r8d
  425ad3:	xor    r9d,r9d
  425ad6:	call   41b6e0 <__flatcc_error_report@@Base>
  425adb:	movzx  eax,WORD PTR [r15+0x72]
  425ae0:	mov    QWORD PTR [rbx+0xb8],rbp
  425ae7:	cmp    r12w,ax
  425aeb:	cmovb  r12d,eax
  425aef:	mov    r15,QWORD PTR [r15]
  425af2:	test   r15,r15
  425af5:	je     425caa <__flatcc_fb_build_schema@@Base+0x261a>
  425afb:	mov    eax,DWORD PTR [r14+0xe0]
  425b02:	cmp    eax,0x64
  425b05:	jge    425d81 <__flatcc_fb_build_schema@@Base+0x26f1>
  425b0b:	movzx  ecx,WORD PTR [r15+0x28]
  425b10:	cmp    cx,0x8
  425b14:	je     425b50 <__flatcc_fb_build_schema@@Base+0x24c0>
  425b16:	cmp    cx,0xe
  425b1a:	jne    425da2 <__flatcc_fb_build_schema@@Base+0x2712>
  425b20:	mov    rbp,QWORD PTR [r15+0x18]
  425b24:	movzx  ecx,WORD PTR [rbp+0x10]
  425b28:	cmp    cx,0x1
  425b2c:	je     425ba0 <__flatcc_fb_build_schema@@Base+0x2510>
  425b2e:	cmp    cx,0x3
  425b32:	jne    425dcd <__flatcc_fb_build_schema@@Base+0x273d>
  425b38:	mov    rbp,QWORD PTR [rbp+0xb8]
  425b3f:	jmp    425b94 <__flatcc_fb_build_schema@@Base+0x2504>
  425b41:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425b4b:	nop    DWORD PTR [rax+rax*1+0x0]
  425b50:	mov    rcx,QWORD PTR [r15+0x18]
  425b54:	mov    rax,QWORD PTR [rcx+0x20]
  425b58:	lea    rdx,[rax+0x3e7]
  425b5f:	cmp    rdx,0x1c
  425b63:	jae    425db5 <__flatcc_fb_build_schema@@Base+0x2725>
  425b69:	mov    esi,0x97ed7fb
  425b6e:	bt     esi,edx
  425b71:	jae    425db5 <__flatcc_fb_build_schema@@Base+0x2725>
  425b77:	lea    rcx,[rip+0x20dc2]        # 446940 <fb_schema_table_deleted@@Base+0x11f8>
  425b7e:	mov    eax,DWORD PTR [rcx+rax*4+0xf9c]
  425b85:	mov    DWORD PTR [r15+0x18],eax
  425b89:	lea    rcx,[rip+0x20d10]        # 4468a0 <fb_schema_table_deleted@@Base+0x1158>
  425b90:	movsxd rbp,DWORD PTR [rcx+rax*4]
  425b94:	mov    WORD PTR [r15+0x72],bp
  425b99:	mov    eax,ebp
  425b9b:	jmp    425c16 <__flatcc_fb_build_schema@@Base+0x2586>
  425b9d:	nop    DWORD PTR [rax]
  425ba0:	movzx  ecx,WORD PTR [rbp+0x12]
  425ba4:	test   cl,0x1
  425ba7:	jne    425dfa <__flatcc_fb_build_schema@@Base+0x276a>
  425bad:	test   cl,0x2
  425bb0:	jne    425c03 <__flatcc_fb_build_schema@@Base+0x2573>
  425bb2:	cmp    DWORD PTR [r14+0x128],0x0
  425bba:	je     425be0 <__flatcc_fb_build_schema@@Base+0x2550>
  425bbc:	mov    rsi,QWORD PTR [r15+0x8]
  425bc0:	mov    rcx,QWORD PTR [rbp+0x8]
  425bc4:	mov    rdi,r14
  425bc7:	lea    rdx,[rip+0x21813]        # 4473e1 <fb_schema_table_deleted@@Base+0x1c99>
  425bce:	xor    r8d,r8d
  425bd1:	xor    r9d,r9d
  425bd4:	call   41b6e0 <__flatcc_error_report@@Base>
  425bd9:	mov    eax,DWORD PTR [r14+0xe0]
  425be0:	inc    eax
  425be2:	mov    DWORD PTR [r14+0xe0],eax
  425be9:	mov    rdi,r14
  425bec:	mov    rsi,rbp
  425bef:	call   425a50 <__flatcc_fb_build_schema@@Base+0x23c0>
  425bf4:	dec    DWORD PTR [r14+0xe0]
  425bfb:	test   eax,eax
  425bfd:	jne    425e0b <__flatcc_fb_build_schema@@Base+0x277b>
  425c03:	movzx  eax,WORD PTR [rbp+0xb0]
  425c0a:	mov    WORD PTR [r15+0x72],ax
  425c0f:	mov    rbp,QWORD PTR [rbp+0xb8]
  425c16:	mov    QWORD PTR [r15+0x80],rbp
  425c1d:	test   ax,ax
  425c20:	je     425d1d <__flatcc_fb_build_schema@@Base+0x268d>
  425c26:	movzx  ecx,ax
  425c29:	lea    rsi,[rcx-0x1]
  425c2d:	cmp    rsi,0xff
  425c34:	ja     425d1d <__flatcc_fb_build_schema@@Base+0x268d>
  425c3a:	mov    rdx,QWORD PTR [rbx+0xb8]
  425c41:	mov    edi,0x1
  425c46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425c50:	cmp    rdi,rcx
  425c53:	je     425c70 <__flatcc_fb_build_schema@@Base+0x25e0>
  425c55:	add    rdi,rdi
  425c58:	cmp    rdi,rcx
  425c5b:	jbe    425c50 <__flatcc_fb_build_schema@@Base+0x25c0>
  425c5d:	jmp    425d1d <__flatcc_fb_build_schema@@Base+0x268d>
  425c62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425c6c:	nop    DWORD PTR [rax+0x0]
  425c70:	add    rsi,rdx
  425c73:	neg    rcx
  425c76:	and    rcx,rsi
  425c79:	mov    QWORD PTR [r15+0x78],rcx
  425c7d:	cmp    rcx,rdx
  425c80:	jb     425d74 <__flatcc_fb_build_schema@@Base+0x26e4>
  425c86:	add    rbp,rcx
  425c89:	jb     425d74 <__flatcc_fb_build_schema@@Base+0x26e4>
  425c8f:	cmp    rbp,rdx
  425c92:	jb     425ac0 <__flatcc_fb_build_schema@@Base+0x2430>
  425c98:	cmp    rbp,0x10000
  425c9f:	jb     425ae0 <__flatcc_fb_build_schema@@Base+0x2450>
  425ca5:	jmp    425ac0 <__flatcc_fb_build_schema@@Base+0x2430>
  425caa:	movzx  eax,WORD PTR [rbx+0xb0]
  425cb1:	test   ax,ax
  425cb4:	je     425cd7 <__flatcc_fb_build_schema@@Base+0x2647>
  425cb6:	cmp    r12w,ax
  425cba:	jbe    425ce2 <__flatcc_fb_build_schema@@Base+0x2652>
  425cbc:	mov    rsi,QWORD PTR [rbx+0x8]
  425cc0:	lea    rdx,[rip+0x217cc]        # 447493 <fb_schema_table_deleted@@Base+0x1d4b>
  425cc7:	mov    rdi,r14
  425cca:	xor    ecx,ecx
  425ccc:	xor    r8d,r8d
  425ccf:	xor    r9d,r9d
  425cd2:	call   41b6e0 <__flatcc_error_report@@Base>
  425cd7:	mov    WORD PTR [rbx+0xb0],r12w
  425cdf:	mov    eax,r12d
  425ce2:	test   ax,ax
  425ce5:	je     425d1d <__flatcc_fb_build_schema@@Base+0x268d>
  425ce7:	movzx  eax,ax
  425cea:	lea    rcx,[rax-0x1]
  425cee:	cmp    rcx,0xff
  425cf5:	ja     425d1d <__flatcc_fb_build_schema@@Base+0x268d>
  425cf7:	mov    rdx,QWORD PTR [rbx+0xb8]
  425cfe:	mov    esi,0x1
  425d03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425d0d:	nop    DWORD PTR [rax]
  425d10:	cmp    rsi,rax
  425d13:	je     425d3c <__flatcc_fb_build_schema@@Base+0x26ac>
  425d15:	add    rsi,rsi
  425d18:	cmp    rsi,rax
  425d1b:	jbe    425d10 <__flatcc_fb_build_schema@@Base+0x2680>
  425d1d:	lea    rdi,[rip+0x217aa]        # 4474ce <fb_schema_table_deleted@@Base+0x1d86>
  425d24:	lea    rsi,[rip+0x20cbb]        # 4469e6 <fb_schema_table_deleted@@Base+0x129e>
  425d2b:	lea    rcx,[rip+0x217b2]        # 4474e4 <fb_schema_table_deleted@@Base+0x1d9c>
  425d32:	mov    edx,0x6c
  425d37:	call   4060f0 <__assert_fail@plt>
  425d3c:	add    rcx,rdx
  425d3f:	neg    rax
  425d42:	and    rax,rcx
  425d45:	mov    QWORD PTR [rbx+0xb8],rax
  425d4c:	movzx  eax,WORD PTR [rbx+0x12]
  425d50:	and    eax,0xfffffffc
  425d53:	or     eax,0x2
  425d56:	mov    WORD PTR [rbx+0x12],ax
  425d5a:	mov    rax,QWORD PTR [r14+0x240]
  425d61:	mov    QWORD PTR [rbx+0xc0],rax
  425d68:	mov    QWORD PTR [r14+0x240],rbx
  425d6f:	xor    r13d,r13d
  425d72:	jmp    425de8 <__flatcc_fb_build_schema@@Base+0x2758>
  425d74:	mov    rsi,QWORD PTR [r15+0x8]
  425d78:	lea    rdx,[rip+0x216cc]        # 44744b <fb_schema_table_deleted@@Base+0x1d03>
  425d7f:	jmp    425dd8 <__flatcc_fb_build_schema@@Base+0x2748>
  425d81:	lea    rdx,[rip+0x215e0]        # 447368 <fb_schema_table_deleted@@Base+0x1c20>
  425d88:	mov    rdi,r14
  425d8b:	xor    esi,esi
  425d8d:	xor    ecx,ecx
  425d8f:	xor    r8d,r8d
  425d92:	xor    r9d,r9d
  425d95:	call   41b6e0 <__flatcc_error_report@@Base>
  425d9a:	mov    r13d,0xffffffff
  425da0:	jmp    425de8 <__flatcc_fb_build_schema@@Base+0x2758>
  425da2:	cmp    cx,0x1
  425da6:	je     425de8 <__flatcc_fb_build_schema@@Base+0x2758>
  425da8:	mov    rsi,QWORD PTR [r15+0x8]
  425dac:	lea    rdx,[rip+0x215fe]        # 4473b1 <fb_schema_table_deleted@@Base+0x1c69>
  425db3:	jmp    425dd8 <__flatcc_fb_build_schema@@Base+0x2748>
  425db5:	mov    DWORD PTR [r15+0x18],0x0
  425dbd:	mov    rsi,QWORD PTR [r15+0x8]
  425dc1:	lea    rdx,[rip+0x215e9]        # 4473b1 <fb_schema_table_deleted@@Base+0x1c69>
  425dc8:	mov    rdi,r14
  425dcb:	jmp    425ddd <__flatcc_fb_build_schema@@Base+0x274d>
  425dcd:	mov    rsi,QWORD PTR [r15+0x8]
  425dd1:	lea    rdx,[rip+0x21650]        # 447428 <fb_schema_table_deleted@@Base+0x1ce0>
  425dd8:	mov    rdi,r14
  425ddb:	xor    ecx,ecx
  425ddd:	xor    r8d,r8d
  425de0:	xor    r9d,r9d
  425de3:	call   41b6e0 <__flatcc_error_report@@Base>
  425de8:	mov    eax,r13d
  425deb:	add    rsp,0x8
  425def:	pop    rbx
  425df0:	pop    r12
  425df2:	pop    r13
  425df4:	pop    r14
  425df6:	pop    r15
  425df8:	pop    rbp
  425df9:	ret    
  425dfa:	mov    rsi,QWORD PTR [r15+0x8]
  425dfe:	mov    rcx,QWORD PTR [rbp+0x8]
  425e02:	lea    rdx,[rip+0x215b8]        # 4473c1 <fb_schema_table_deleted@@Base+0x1c79>
  425e09:	jmp    425dc8 <__flatcc_fb_build_schema@@Base+0x2738>
  425e0b:	mov    r13d,eax
  425e0e:	jmp    425de8 <__flatcc_fb_build_schema@@Base+0x2758>
  425e10:	lea    rdi,[rip+0xef57]        # 434d6e <_IO_stdin_used@@Base+0x7d6e>
  425e17:	lea    rsi,[rip+0x20bc8]        # 4469e6 <fb_schema_table_deleted@@Base+0x129e>
  425e1e:	lea    rcx,[rip+0x214d9]        # 4472fe <fb_schema_table_deleted@@Base+0x1bb6>
  425e25:	mov    edx,0x1f6
  425e2a:	call   4060f0 <__assert_fail@plt>
  425e2f:	lea    rdi,[rip+0x21500]        # 447336 <fb_schema_table_deleted@@Base+0x1bee>
  425e36:	lea    rsi,[rip+0x20ba9]        # 4469e6 <fb_schema_table_deleted@@Base+0x129e>
  425e3d:	lea    rcx,[rip+0x214ba]        # 4472fe <fb_schema_table_deleted@@Base+0x1bb6>
  425e44:	mov    edx,0x1f8
  425e49:	call   4060f0 <__assert_fail@plt>
  425e4e:	lea    rdi,[rip+0x21508]        # 44735d <fb_schema_table_deleted@@Base+0x1c15>
  425e55:	lea    rsi,[rip+0x20b8a]        # 4469e6 <fb_schema_table_deleted@@Base+0x129e>
  425e5c:	lea    rcx,[rip+0x2149b]        # 4472fe <fb_schema_table_deleted@@Base+0x1bb6>
  425e63:	mov    edx,0x1fc
  425e68:	call   4060f0 <__assert_fail@plt>
  425e6d:	nop    DWORD PTR [rax]
  425e70:	push   rbp
  425e71:	push   r15
  425e73:	push   r14
  425e75:	push   r13
  425e77:	push   r12
  425e79:	push   rbx
  425e7a:	push   rax
  425e7b:	vxorps xmm0,xmm0,xmm0
  425e7f:	vmovups YMMWORD PTR [rcx+0x40],ymm0
  425e84:	vmovups YMMWORD PTR [rcx+0x20],ymm0
  425e89:	vmovups YMMWORD PTR [rcx],ymm0
  425e8d:	test   rsi,rsi
  425e90:	je     425fe1 <__flatcc_fb_build_schema@@Base+0x2951>
  425e96:	mov    r15,rcx
  425e99:	mov    rbx,rsi
  425e9c:	mov    r12,rdi
  425e9f:	movzx  ebp,dx
  425ea2:	mov    r13d,0xffffff9d
  425ea8:	xor    r14d,r14d
  425eab:	nop    DWORD PTR [rax+rax*1+0x0]
  425eb0:	mov    rdi,QWORD PTR [r12+0x260]
  425eb8:	add    rdi,0x20
  425ebc:	mov    rax,QWORD PTR [rbx+0x8]
  425ec0:	mov    rsi,QWORD PTR [rax]
  425ec3:	mov    rdx,QWORD PTR [rax+0x8]
  425ec7:	vzeroupper 
  425eca:	call   42c170 <fb_name_table_find@@Base>
  425ecf:	test   rax,rax
  425ed2:	je     425f10 <__flatcc_fb_build_schema@@Base+0x2880>
  425ed4:	movsxd rax,DWORD PTR [rax+0x20]
  425ed8:	test   rax,rax
  425edb:	je     425f3b <__flatcc_fb_build_schema@@Base+0x28ab>
  425edd:	bt     ebp,eax
  425ee0:	jae    425f20 <__flatcc_fb_build_schema@@Base+0x2890>
  425ee2:	mov    ecx,0x1
  425ee7:	shlx   ecx,ecx,eax
  425eec:	or     r14d,ecx
  425eef:	cmp    QWORD PTR [r15+rax*8],0x0
  425ef4:	je     425f51 <__flatcc_fb_build_schema@@Base+0x28c1>
  425ef6:	mov    rsi,QWORD PTR [rbx+0x8]
  425efa:	mov    rdi,r12
  425efd:	lea    rdx,[rip+0x2110c]        # 447010 <fb_schema_table_deleted@@Base+0x18c8>
  425f04:	jmp    425f2e <__flatcc_fb_build_schema@@Base+0x289e>
  425f06:	nop    WORD PTR cs:[rax+rax*1+0x0]
  425f10:	mov    rsi,QWORD PTR [rbx+0x8]
  425f14:	mov    rdi,r12
  425f17:	lea    rdx,[rip+0x210a6]        # 446fc4 <fb_schema_table_deleted@@Base+0x187c>
  425f1e:	jmp    425f2e <__flatcc_fb_build_schema@@Base+0x289e>
  425f20:	mov    rsi,QWORD PTR [rbx+0x8]
  425f24:	mov    rdi,r12
  425f27:	lea    rdx,[rip+0x210b5]        # 446fe3 <fb_schema_table_deleted@@Base+0x189b>
  425f2e:	xor    ecx,ecx
  425f30:	xor    r8d,r8d
  425f33:	xor    r9d,r9d
  425f36:	call   41b6e0 <__flatcc_error_report@@Base>
  425f3b:	mov    rbx,QWORD PTR [rbx]
  425f3e:	test   r13d,r13d
  425f41:	je     425fbf <__flatcc_fb_build_schema@@Base+0x292f>
  425f43:	inc    r13d
  425f46:	test   rbx,rbx
  425f49:	jne    425eb0 <__flatcc_fb_build_schema@@Base+0x2820>
  425f4f:	jmp    425fbf <__flatcc_fb_build_schema@@Base+0x292f>
  425f51:	mov    QWORD PTR [r15+rax*8],rbx
  425f55:	mov    ecx,0xdac
  425f5a:	bt     rcx,rax
  425f5e:	jae    425f77 <__flatcc_fb_build_schema@@Base+0x28e7>
  425f60:	cmp    WORD PTR [rbx+0x20],0x0
  425f65:	je     425f77 <__flatcc_fb_build_schema@@Base+0x28e7>
  425f67:	mov    rsi,QWORD PTR [rbx+0x8]
  425f6b:	mov    rdi,r12
  425f6e:	lea    rdx,[rip+0x210c1]        # 447036 <fb_schema_table_deleted@@Base+0x18ee>
  425f75:	jmp    425f2e <__flatcc_fb_build_schema@@Base+0x289e>
  425f77:	dec    eax
  425f79:	cmp    eax,0x8
  425f7c:	ja     425f3b <__flatcc_fb_build_schema@@Base+0x28ab>
  425f7e:	lea    rcx,[rip+0x208eb]        # 446870 <fb_schema_table_deleted@@Base+0x1128>
  425f85:	movsxd rax,DWORD PTR [rcx+rax*4]
  425f89:	add    rax,rcx
  425f8c:	jmp    rax
  425f8e:	cmp    WORD PTR [rbx+0x20],0x5
  425f93:	je     425f3b <__flatcc_fb_build_schema@@Base+0x28ab>
  425f95:	mov    rsi,QWORD PTR [rbx+0x8]
  425f99:	mov    rdi,r12
  425f9c:	lea    rdx,[rip+0x210dc]        # 44707f <fb_schema_table_deleted@@Base+0x1937>
  425fa3:	jmp    425f2e <__flatcc_fb_build_schema@@Base+0x289e>
  425fa5:	cmp    WORD PTR [rbx+0x20],0x2
  425faa:	je     425f3b <__flatcc_fb_build_schema@@Base+0x28ab>
  425fac:	mov    rsi,QWORD PTR [rbx+0x8]
  425fb0:	mov    rdi,r12
  425fb3:	lea    rdx,[rip+0x210a4]        # 44705e <fb_schema_table_deleted@@Base+0x1916>
  425fba:	jmp    425f2e <__flatcc_fb_build_schema@@Base+0x289e>
  425fbf:	test   rbx,rbx
  425fc2:	je     425fe4 <__flatcc_fb_build_schema@@Base+0x2954>
  425fc4:	mov    rsi,QWORD PTR [rbx+0x8]
  425fc8:	lea    rdx,[rip+0x210dc]        # 4470ab <fb_schema_table_deleted@@Base+0x1963>
  425fcf:	mov    rdi,r12
  425fd2:	xor    ecx,ecx
  425fd4:	xor    r8d,r8d
  425fd7:	xor    r9d,r9d
  425fda:	call   41b6e0 <__flatcc_error_report@@Base>
  425fdf:	jmp    425fe4 <__flatcc_fb_build_schema@@Base+0x2954>
  425fe1:	xor    r14d,r14d
  425fe4:	mov    eax,r14d
  425fe7:	add    rsp,0x8
  425feb:	pop    rbx
  425fec:	pop    r12
  425fee:	pop    r13
  425ff0:	pop    r14
  425ff2:	pop    r15
  425ff4:	pop    rbp
  425ff5:	vzeroupper 
  425ff8:	ret    
  425ff9:	nop    DWORD PTR [rax+0x0]
  426000:	push   rbp
  426001:	push   r15
  426003:	push   r14
  426005:	push   r13
  426007:	push   r12
  426009:	push   rbx
  42600a:	push   rax
  42600b:	mov    r13,rsi
  42600e:	mov    r14,rdi
  426011:	test   rdx,rdx
  426014:	je     426153 <__flatcc_fb_build_schema@@Base+0x2ac3>
  42601a:	xor    eax,eax
  42601c:	mov    rdi,rdx
  42601f:	xor    esi,esi
  426021:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42602b:	nop    DWORD PTR [rax+rax*1+0x0]
  426030:	mov    r12,rsi
  426033:	mov    rsi,rdi
  426036:	mov    rdi,QWORD PTR [rdi]
  426039:	inc    eax
  42603b:	test   rdi,rdi
  42603e:	jne    426030 <__flatcc_fb_build_schema@@Base+0x29a0>
  426040:	test   rcx,rcx
  426043:	je     426163 <__flatcc_fb_build_schema@@Base+0x2ad3>
  426049:	dec    eax
  42604b:	mov    QWORD PTR [rcx],rsi
  42604e:	test   r12,r12
  426051:	je     4261d8 <__flatcc_fb_build_schema@@Base+0x2b48>
  426057:	test   r13,r13
  42605a:	je     426171 <__flatcc_fb_build_schema@@Base+0x2ae1>
  426060:	cmp    eax,0x1
  426063:	jne    426171 <__flatcc_fb_build_schema@@Base+0x2ae1>
  426069:	lea    rax,[r14+0x320]
  426070:	mov    QWORD PTR [rsp],rax
  426074:	movabs rbp,0xffffffff00000000
  42607e:	jmp    42609e <__flatcc_fb_build_schema@@Base+0x2a0e>
  426080:	test   rdi,rdi
  426083:	je     4261d8 <__flatcc_fb_build_schema@@Base+0x2b48>
  426089:	xor    esi,esi
  42608b:	xor    edx,edx
  42608d:	call   419e20 <fb_scope_table_find@@Base>
  426092:	mov    r13,rax
  426095:	test   rax,rax
  426098:	je     4261d8 <__flatcc_fb_build_schema@@Base+0x2b48>
  42609e:	lea    rdi,[r13+0x8]
  4260a2:	mov    rax,QWORD PTR [r12+0x8]
  4260a7:	mov    rsi,QWORD PTR [rax]
  4260aa:	mov    rdx,QWORD PTR [rax+0x8]
  4260ae:	call   4194b0 <fb_symbol_table_find@@Base>
  4260b3:	test   rax,rax
  4260b6:	je     4260d8 <__flatcc_fb_build_schema@@Base+0x2a48>
  4260b8:	mov    rbx,rax
  4260bb:	cmp    WORD PTR [rax+0x10],0x4
  4260c0:	ja     4260d8 <__flatcc_fb_build_schema@@Base+0x2a48>
  4260c2:	mov    rsi,QWORD PTR [rbx+0x20]
  4260c6:	mov    rdi,QWORD PTR [rsp]
  4260ca:	call   418e70 <ptr_set_find_item@@Base>
  4260cf:	test   rax,rax
  4260d2:	jne    4261da <__flatcc_fb_build_schema@@Base+0x2b4a>
  4260d8:	mov    rax,QWORD PTR [r13+0x0]
  4260dc:	test   rax,rax
  4260df:	je     4261d8 <__flatcc_fb_build_schema@@Base+0x2b48>
  4260e5:	mov    edx,0x2
  4260ea:	xor    esi,esi
  4260ec:	xor    ecx,ecx
  4260ee:	xchg   ax,ax
  4260f0:	mov    rbx,rsi
  4260f3:	mov    r15,rdx
  4260f6:	mov    rax,QWORD PTR [rax]
  4260f9:	inc    rcx
  4260fc:	add    rsi,rbp
  4260ff:	inc    rdx
  426102:	test   rax,rax
  426105:	jne    4260f0 <__flatcc_fb_build_schema@@Base+0x2a60>
  426107:	jmp    426136 <__flatcc_fb_build_schema@@Base+0x2aa6>
  426109:	nop    DWORD PTR [rax+0x0]
  426110:	mov    rsi,QWORD PTR [r13+0x0]
  426114:	mov    rdx,rbx
  426117:	sar    rdx,0x20
  42611b:	call   419e20 <fb_scope_table_find@@Base>
  426120:	movabs rcx,0x100000000
  42612a:	add    rbx,rcx
  42612d:	test   rax,rax
  426130:	jne    426092 <__flatcc_fb_build_schema@@Base+0x2a02>
  426136:	mov    rdi,QWORD PTR [r14+0x260]
  42613d:	dec    r15
  426140:	cmp    r15,0x2
  426144:	jl     426080 <__flatcc_fb_build_schema@@Base+0x29f0>
  42614a:	test   rdi,rdi
  42614d:	jne    426110 <__flatcc_fb_build_schema@@Base+0x2a80>
  42614f:	xor    eax,eax
  426151:	jmp    426120 <__flatcc_fb_build_schema@@Base+0x2a90>
  426153:	xor    r12d,r12d
  426156:	xor    esi,esi
  426158:	xor    eax,eax
  42615a:	test   rcx,rcx
  42615d:	jne    426049 <__flatcc_fb_build_schema@@Base+0x29b9>
  426163:	mov    r12,rsi
  426166:	test   r12,r12
  426169:	jne    426057 <__flatcc_fb_build_schema@@Base+0x29c7>
  42616f:	jmp    4261d8 <__flatcc_fb_build_schema@@Base+0x2b48>
  426171:	mov    rdi,QWORD PTR [r14+0x260]
  426178:	test   rdi,rdi
  42617b:	je     4261d8 <__flatcc_fb_build_schema@@Base+0x2b48>
  42617d:	xor    ebx,ebx
  42617f:	dec    eax
  426181:	cmove  rdx,rbx
  426185:	neg    eax
  426187:	cdqe   
  426189:	mov    rsi,rdx
  42618c:	mov    rdx,rax
  42618f:	call   419e20 <fb_scope_table_find@@Base>
  426194:	test   rax,rax
  426197:	je     4261da <__flatcc_fb_build_schema@@Base+0x2b4a>
  426199:	add    rax,0x8
  42619d:	mov    rcx,QWORD PTR [r12+0x8]
  4261a2:	mov    rsi,QWORD PTR [rcx]
  4261a5:	mov    rdx,QWORD PTR [rcx+0x8]
  4261a9:	mov    rdi,rax
  4261ac:	call   4194b0 <fb_symbol_table_find@@Base>
  4261b1:	test   rax,rax
  4261b4:	je     4261d8 <__flatcc_fb_build_schema@@Base+0x2b48>
  4261b6:	mov    rbx,rax
  4261b9:	cmp    WORD PTR [rax+0x10],0x4
  4261be:	ja     4261d8 <__flatcc_fb_build_schema@@Base+0x2b48>
  4261c0:	add    r14,0x320
  4261c7:	mov    rsi,QWORD PTR [rbx+0x20]
  4261cb:	mov    rdi,r14
  4261ce:	call   418e70 <ptr_set_find_item@@Base>
  4261d3:	test   rax,rax
  4261d6:	jne    4261da <__flatcc_fb_build_schema@@Base+0x2b4a>
  4261d8:	xor    ebx,ebx
  4261da:	mov    rax,rbx
  4261dd:	add    rsp,0x8
  4261e1:	pop    rbx
  4261e2:	pop    r12
  4261e4:	pop    r13
  4261e6:	pop    r14
  4261e8:	pop    r15
  4261ea:	pop    rbp
  4261eb:	ret    
  4261ec:	nop    DWORD PTR [rax+0x0]

00000000004261f0 <__flatcc_fb_coerce_scalar_type@@Base>:
  4261f0:	push   r14
  4261f2:	push   rbx
  4261f3:	push   rax
  4261f4:	movzx  ebx,WORD PTR [rcx+0x10]
  4261f8:	xor    eax,eax
  4261fa:	cmp    bx,0x2
  4261fe:	jb     42661d <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  426204:	lea    r14,[rcx+0x10]
  426208:	cmp    bx,0x4
  42620c:	jne    426220 <__flatcc_fb_coerce_scalar_type@@Base+0x30>
  42620e:	cmp    QWORD PTR [rcx],0x0
  426212:	js     42626a <__flatcc_fb_coerce_scalar_type@@Base+0x7a>
  426214:	mov    WORD PTR [r14],0x5
  42621a:	mov    bx,0x5
  42621e:	jmp    426274 <__flatcc_fb_coerce_scalar_type@@Base+0x84>
  426220:	cmp    edx,0x5
  426223:	je     426274 <__flatcc_fb_coerce_scalar_type@@Base+0x84>
  426225:	cmp    bx,0x6
  426229:	jne    426274 <__flatcc_fb_coerce_scalar_type@@Base+0x84>
  42622b:	cmp    DWORD PTR [rdi+0xfc],0x0
  426232:	je     426270 <__flatcc_fb_coerce_scalar_type@@Base+0x80>
  426234:	mov    WORD PTR [rcx+0x10],0x5
  42623a:	movzx  r8d,BYTE PTR [rcx]
  42623e:	mov    QWORD PTR [rcx],r8
  426241:	mov    bx,0x5
  426245:	cmp    r8,0x2
  426249:	jb     426274 <__flatcc_fb_coerce_scalar_type@@Base+0x84>
  42624b:	lea    rdi,[rip+0x21e62]        # 4480b4 <fb_schema_table_deleted@@Base+0x296c>
  426252:	lea    rsi,[rip+0x21e7a]        # 4480d3 <fb_schema_table_deleted@@Base+0x298b>
  426259:	lea    rcx,[rip+0x21ed3]        # 448133 <fb_schema_table_deleted@@Base+0x29eb>
  426260:	mov    edx,0x34
  426265:	call   4060f0 <__assert_fail@plt>
  42626a:	mov    bx,0x4
  42626e:	jmp    426274 <__flatcc_fb_coerce_scalar_type@@Base+0x84>
  426270:	mov    bx,0x6
  426274:	dec    edx
  426276:	cmp    edx,0xa
  426279:	ja     42649a <__flatcc_fb_coerce_scalar_type@@Base+0x2aa>
  42627f:	lea    r8,[rip+0x21e02]        # 448088 <fb_schema_table_deleted@@Base+0x2940>
  426286:	movsxd rdx,DWORD PTR [r8+rdx*4]
  42628a:	add    rdx,r8
  42628d:	jmp    rdx
  42628f:	cmp    bx,0x5
  426293:	je     42661d <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  426299:	mov    rsi,QWORD PTR [rsi+0x8]
  42629d:	lea    rdx,[rip+0x21ef0]        # 448194 <fb_schema_table_deleted@@Base+0x2a4c>
  4262a4:	jmp    426605 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  4262a9:	cmp    bx,0x6
  4262ad:	je     42661d <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  4262b3:	cmp    bx,0x5
  4262b7:	jne    4264da <__flatcc_fb_coerce_scalar_type@@Base+0x2ea>
  4262bd:	cmp    DWORD PTR [rdi+0xfc],0x0
  4262c4:	je     4264da <__flatcc_fb_coerce_scalar_type@@Base+0x2ea>
  4262ca:	cmp    QWORD PTR [rcx],0x2
  4262ce:	jb     42661d <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  4262d4:	mov    rsi,QWORD PTR [rsi+0x8]
  4262d8:	lea    rdx,[rip+0x22167]        # 448446 <fb_schema_table_deleted@@Base+0x2cfe>
  4262df:	jmp    426605 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  4262e4:	cmp    bx,0x3
  4262e8:	je     42661d <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  4262ee:	cmp    bx,0x5
  4262f2:	je     426581 <__flatcc_fb_coerce_scalar_type@@Base+0x391>
  4262f8:	cmp    bx,0x4
  4262fc:	jne    4265de <__flatcc_fb_coerce_scalar_type@@Base+0x3ee>
  426302:	mov    rdx,QWORD PTR [rcx]
  426305:	vcvtsi2sd xmm0,xmm0,rdx
  42630a:	vcvttsd2si rbx,xmm0
  42630f:	cmp    rdx,rbx
  426312:	jne    4265d1 <__flatcc_fb_coerce_scalar_type@@Base+0x3e1>
  426318:	jmp    426675 <__flatcc_fb_coerce_scalar_type@@Base+0x485>
  42631d:	cmp    bx,0x5
  426321:	jne    4264aa <__flatcc_fb_coerce_scalar_type@@Base+0x2ba>
  426327:	cmp    QWORD PTR [rcx],0x10000
  42632e:	jb     42661d <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  426334:	mov    rsi,QWORD PTR [rsi+0x8]
  426338:	lea    rdx,[rip+0x21f18]        # 448257 <fb_schema_table_deleted@@Base+0x2b0f>
  42633f:	jmp    426605 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  426344:	cmp    bx,0x5
  426348:	jne    4264ba <__flatcc_fb_coerce_scalar_type@@Base+0x2ca>
  42634e:	cmp    QWORD PTR [rcx],0x100
  426355:	jb     42661d <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  42635b:	mov    rsi,QWORD PTR [rsi+0x8]
  42635f:	lea    rdx,[rip+0x21f48]        # 4482ae <fb_schema_table_deleted@@Base+0x2b66>
  426366:	jmp    426605 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  42636b:	cmp    bx,0x5
  42636f:	je     4264ea <__flatcc_fb_coerce_scalar_type@@Base+0x2fa>
  426375:	cmp    bx,0x4
  426379:	jne    426541 <__flatcc_fb_coerce_scalar_type@@Base+0x351>
  42637f:	cmp    QWORD PTR [rcx],0xffffffffffff7fff
  426386:	jg     42661d <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  42638c:	mov    rsi,QWORD PTR [rsi+0x8]
  426390:	lea    rdx,[rip+0x21fe1]        # 448378 <fb_schema_table_deleted@@Base+0x2c30>
  426397:	jmp    426605 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  42639c:	cmp    bx,0x5
  4263a0:	jne    4264ca <__flatcc_fb_coerce_scalar_type@@Base+0x2da>
  4263a6:	cmp    DWORD PTR [rcx+0x4],0x0
  4263aa:	je     42661d <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  4263b0:	mov    rsi,QWORD PTR [rsi+0x8]
  4263b4:	lea    rdx,[rip+0x21e45]        # 448200 <fb_schema_table_deleted@@Base+0x2ab8>
  4263bb:	jmp    426605 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  4263c0:	cmp    bx,0x4
  4263c4:	je     42661d <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  4263ca:	cmp    bx,0x5
  4263ce:	jne    426551 <__flatcc_fb_coerce_scalar_type@@Base+0x361>
  4263d4:	cmp    QWORD PTR [rcx],0x0
  4263d8:	jns    426536 <__flatcc_fb_coerce_scalar_type@@Base+0x346>
  4263de:	mov    rsi,QWORD PTR [rsi+0x8]
  4263e2:	lea    rdx,[rip+0x21ee2]        # 4482cb <fb_schema_table_deleted@@Base+0x2b83>
  4263e9:	jmp    426605 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  4263ee:	cmp    bx,0x5
  4263f2:	je     426503 <__flatcc_fb_coerce_scalar_type@@Base+0x313>
  4263f8:	cmp    bx,0x4
  4263fc:	jne    426561 <__flatcc_fb_coerce_scalar_type@@Base+0x371>
  426402:	movabs rdx,0xffffffff7fffffff
  42640c:	cmp    QWORD PTR [rcx],rdx
  42640f:	jg     42661d <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  426415:	mov    rsi,QWORD PTR [rsi+0x8]
  426419:	lea    rdx,[rip+0x21ef4]        # 448314 <fb_schema_table_deleted@@Base+0x2bcc>
  426420:	jmp    426605 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  426425:	cmp    bx,0x5
  426429:	je     42651d <__flatcc_fb_coerce_scalar_type@@Base+0x32d>
  42642f:	cmp    bx,0x4
  426433:	jne    426571 <__flatcc_fb_coerce_scalar_type@@Base+0x381>
  426439:	cmp    QWORD PTR [rcx],0xffffffffffffff7f
  426440:	jg     42661d <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  426446:	mov    rsi,QWORD PTR [rsi+0x8]
  42644a:	lea    rdx,[rip+0x21f91]        # 4483e2 <fb_schema_table_deleted@@Base+0x2c9a>
  426451:	jmp    426605 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  426456:	cmp    bx,0x3
  42645a:	je     42661d <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  426460:	cmp    bx,0x5
  426464:	je     4265eb <__flatcc_fb_coerce_scalar_type@@Base+0x3fb>
  42646a:	cmp    bx,0x4
  42646e:	jne    4265fa <__flatcc_fb_coerce_scalar_type@@Base+0x40a>
  426474:	mov    rdx,QWORD PTR [rcx]
  426477:	vcvtsi2ss xmm0,xmm0,rdx
  42647c:	vcvttss2si rbx,xmm0
  426481:	cmp    rdx,rbx
  426484:	je     426671 <__flatcc_fb_coerce_scalar_type@@Base+0x481>
  42648a:	mov    rsi,QWORD PTR [rsi+0x8]
  42648e:	lea    rdx,[rip+0x2208e]        # 448523 <fb_schema_table_deleted@@Base+0x2ddb>
  426495:	jmp    426605 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  42649a:	mov    rsi,QWORD PTR [rsi+0x8]
  42649e:	lea    rdx,[rip+0x220e5]        # 44858a <fb_schema_table_deleted@@Base+0x2e42>
  4264a5:	jmp    426605 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  4264aa:	mov    rsi,QWORD PTR [rsi+0x8]
  4264ae:	lea    rdx,[rip+0x21d68]        # 44821d <fb_schema_table_deleted@@Base+0x2ad5>
  4264b5:	jmp    426605 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  4264ba:	mov    rsi,QWORD PTR [rsi+0x8]
  4264be:	lea    rdx,[rip+0x21db1]        # 448276 <fb_schema_table_deleted@@Base+0x2b2e>
  4264c5:	jmp    426605 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  4264ca:	mov    rsi,QWORD PTR [rsi+0x8]
  4264ce:	lea    rdx,[rip+0x21cf3]        # 4481c8 <fb_schema_table_deleted@@Base+0x2a80>
  4264d5:	jmp    426605 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  4264da:	mov    rsi,QWORD PTR [rsi+0x8]
  4264de:	lea    rdx,[rip+0x21f9f]        # 448484 <fb_schema_table_deleted@@Base+0x2d3c>
  4264e5:	jmp    426605 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  4264ea:	cmp    QWORD PTR [rcx],0x8000
  4264f1:	jl     426536 <__flatcc_fb_coerce_scalar_type@@Base+0x346>
  4264f3:	mov    rsi,QWORD PTR [rsi+0x8]
  4264f7:	lea    rdx,[rip+0x21e98]        # 448396 <fb_schema_table_deleted@@Base+0x2c4e>
  4264fe:	jmp    426605 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  426503:	mov    edx,0x80000000
  426508:	cmp    QWORD PTR [rcx],rdx
  42650b:	jl     426536 <__flatcc_fb_coerce_scalar_type@@Base+0x346>
  42650d:	mov    rsi,QWORD PTR [rsi+0x8]
  426511:	lea    rdx,[rip+0x21e18]        # 448330 <fb_schema_table_deleted@@Base+0x2be8>
  426518:	jmp    426605 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  42651d:	cmp    QWORD PTR [rcx],0x80
  426524:	jl     426536 <__flatcc_fb_coerce_scalar_type@@Base+0x346>
  426526:	mov    rsi,QWORD PTR [rsi+0x8]
  42652a:	lea    rdx,[rip+0x21ecd]        # 4483fe <fb_schema_table_deleted@@Base+0x2cb6>
  426531:	jmp    426605 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  426536:	mov    WORD PTR [r14],0x4
  42653c:	jmp    42661d <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  426541:	mov    rsi,QWORD PTR [rsi+0x8]
  426545:	lea    rdx,[rip+0x21e67]        # 4483b3 <fb_schema_table_deleted@@Base+0x2c6b>
  42654c:	jmp    426605 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  426551:	mov    rsi,QWORD PTR [rsi+0x8]
  426555:	lea    rdx,[rip+0x21d8e]        # 4482ea <fb_schema_table_deleted@@Base+0x2ba2>
  42655c:	jmp    426605 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  426561:	mov    rsi,QWORD PTR [rsi+0x8]
  426565:	lea    rdx,[rip+0x21ddf]        # 44834b <fb_schema_table_deleted@@Base+0x2c03>
  42656c:	jmp    426605 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  426571:	mov    rsi,QWORD PTR [rsi+0x8]
  426575:	lea    rdx,[rip+0x21e9d]        # 448419 <fb_schema_table_deleted@@Base+0x2cd1>
  42657c:	jmp    426605 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  426581:	mov    r9,QWORD PTR [rcx]
  426584:	vmovq  xmm0,r9
  426589:	vpunpckldq xmm0,xmm0,XMMWORD PTR [rip+0x21acf]        # 448060 <fb_schema_table_deleted@@Base+0x2918>
  426591:	vsubpd xmm0,xmm0,XMMWORD PTR [rip+0x21ad7]        # 448070 <fb_schema_table_deleted@@Base+0x2928>
  426599:	vhaddpd xmm0,xmm0,xmm0
  42659d:	vmovsd xmm1,QWORD PTR [rip+0x21adb]        # 448080 <fb_schema_table_deleted@@Base+0x2938>
  4265a5:	vsubsd xmm2,xmm0,xmm1
  4265a9:	vcvttsd2si r8,xmm2
  4265ae:	movabs rbx,0x8000000000000000
  4265b8:	xor    rbx,r8
  4265bb:	vcvttsd2si rdx,xmm0
  4265c0:	vucomisd xmm0,xmm1
  4265c4:	cmovae rdx,rbx
  4265c8:	cmp    r9,rdx
  4265cb:	je     426675 <__flatcc_fb_coerce_scalar_type@@Base+0x485>
  4265d1:	mov    rsi,QWORD PTR [rsi+0x8]
  4265d5:	lea    rdx,[rip+0x21ede]        # 4484ba <fb_schema_table_deleted@@Base+0x2d72>
  4265dc:	jmp    426605 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  4265de:	mov    rsi,QWORD PTR [rsi+0x8]
  4265e2:	lea    rdx,[rip+0x21f01]        # 4484ea <fb_schema_table_deleted@@Base+0x2da2>
  4265e9:	jmp    426605 <__flatcc_fb_coerce_scalar_type@@Base+0x415>
  4265eb:	mov    r9,QWORD PTR [rcx]
  4265ee:	test   r9,r9
  4265f1:	js     426625 <__flatcc_fb_coerce_scalar_type@@Base+0x435>
  4265f3:	vcvtsi2ss xmm0,xmm0,r9
  4265f8:	jmp    42663d <__flatcc_fb_coerce_scalar_type@@Base+0x44d>
  4265fa:	mov    rsi,QWORD PTR [rsi+0x8]
  4265fe:	lea    rdx,[rip+0x21f4d]        # 448552 <fb_schema_table_deleted@@Base+0x2e0a>
  426605:	xor    ecx,ecx
  426607:	xor    r8d,r8d
  42660a:	xor    r9d,r9d
  42660d:	call   41b6e0 <__flatcc_error_report@@Base>
  426612:	mov    WORD PTR [r14],0x1
  426618:	mov    eax,0xffffffff
  42661d:	add    rsp,0x8
  426621:	pop    rbx
  426622:	pop    r14
  426624:	ret    
  426625:	mov    r8,r9
  426628:	shr    r8,1
  42662b:	mov    edx,r9d
  42662e:	and    edx,0x1
  426631:	or     rdx,r8
  426634:	vcvtsi2ss xmm0,xmm0,rdx
  426639:	vaddss xmm0,xmm0,xmm0
  42663d:	vmovss xmm1,DWORD PTR [rip+0x21a0f]        # 448054 <fb_schema_table_deleted@@Base+0x290c>
  426645:	vsubss xmm2,xmm0,xmm1
  426649:	vcvttss2si r8,xmm2
  42664e:	movabs rdx,0x8000000000000000
  426658:	xor    rdx,r8
  42665b:	vcvttss2si rbx,xmm0
  426660:	vucomiss xmm0,xmm1
  426664:	cmovae rbx,rdx
  426668:	cmp    r9,rbx
  42666b:	jne    42648a <__flatcc_fb_coerce_scalar_type@@Base+0x29a>
  426671:	vcvtss2sd xmm0,xmm0,xmm0
  426675:	vmovsd QWORD PTR [rcx],xmm0
  426679:	mov    WORD PTR [rcx+0x10],0x3
  42667f:	jmp    42661d <__flatcc_fb_coerce_scalar_type@@Base+0x42d>
  426681:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42668b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000426690 <flatcc_builder_default_alloc@@Base>:
  426690:	push   rbp
  426691:	push   r15
  426693:	push   r14
  426695:	push   r12
  426697:	push   rbx
  426698:	mov    rbx,rsi
  42669b:	test   rdx,rdx
  42669e:	je     4266c8 <flatcc_builder_default_alloc@@Base+0x38>
  4266a0:	mov    r14d,ecx
  4266a3:	dec    r8d
  4266a6:	cmp    r8d,0x6
  4266aa:	ja     4266e6 <flatcc_builder_default_alloc@@Base+0x56>
  4266ac:	mov    eax,0x100
  4266b1:	lea    rcx,[rip+0x21ee8]        # 4485a0 <fb_schema_table_deleted@@Base+0x2e58>
  4266b8:	movsxd rsi,DWORD PTR [rcx+r8*4]
  4266bc:	add    rsi,rcx
  4266bf:	jmp    rsi
  4266c1:	mov    eax,0x120
  4266c6:	jmp    426700 <flatcc_builder_default_alloc@@Base+0x70>
  4266c8:	mov    rdi,QWORD PTR [rbx]
  4266cb:	xor    r15d,r15d
  4266ce:	test   rdi,rdi
  4266d1:	je     42675f <flatcc_builder_default_alloc@@Base+0xcf>
  4266d7:	call   406040 <free@plt>
  4266dc:	vxorps xmm0,xmm0,xmm0
  4266e0:	vmovups XMMWORD PTR [rbx],xmm0
  4266e4:	jmp    42675f <flatcc_builder_default_alloc@@Base+0xcf>
  4266e6:	mov    eax,0x20
  4266eb:	jmp    426700 <flatcc_builder_default_alloc@@Base+0x70>
  4266ed:	mov    rax,rdx
  4266f0:	jmp    426700 <flatcc_builder_default_alloc@@Base+0x70>
  4266f2:	mov    eax,0x40
  4266f7:	nop    WORD PTR [rax+rax*1+0x0]
  426700:	mov    rbp,rax
  426703:	add    rax,rax
  426706:	cmp    rbp,rdx
  426709:	jb     426700 <flatcc_builder_default_alloc@@Base+0x70>
  42670b:	mov    rax,QWORD PTR [rbx+0x8]
  42670f:	xor    r15d,r15d
  426712:	cmp    rax,rdx
  426715:	jb     42671f <flatcc_builder_default_alloc@@Base+0x8f>
  426717:	shr    rax,1
  42671a:	cmp    rax,rbp
  42671d:	jae    42675f <flatcc_builder_default_alloc@@Base+0xcf>
  42671f:	mov    rdi,QWORD PTR [rbx]
  426722:	mov    rsi,rbp
  426725:	call   4061d0 <realloc@plt>
  42672a:	test   rax,rax
  42672d:	je     426759 <flatcc_builder_default_alloc@@Base+0xc9>
  42672f:	mov    r12,rax
  426732:	test   r14d,r14d
  426735:	je     426750 <flatcc_builder_default_alloc@@Base+0xc0>
  426737:	mov    rax,QWORD PTR [rbx+0x8]
  42673b:	mov    rdx,rbp
  42673e:	sub    rdx,rax
  426741:	jbe    426750 <flatcc_builder_default_alloc@@Base+0xc0>
  426743:	mov    rdi,r12
  426746:	add    rdi,rax
  426749:	xor    esi,esi
  42674b:	call   406100 <memset@plt>
  426750:	mov    QWORD PTR [rbx],r12
  426753:	mov    QWORD PTR [rbx+0x8],rbp
  426757:	jmp    42675f <flatcc_builder_default_alloc@@Base+0xcf>
  426759:	mov    r15d,0xffffffff
  42675f:	mov    eax,r15d
  426762:	pop    rbx
  426763:	pop    r12
  426765:	pop    r14
  426767:	pop    r15
  426769:	pop    rbp
  42676a:	ret    
  42676b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000426770 <flatcc_builder_flush_vtable_cache@@Base>:
  426770:	push   rbx
  426771:	cmp    QWORD PTR [rdi+0xd8],0x0
  426779:	je     4267a4 <flatcc_builder_flush_vtable_cache@@Base+0x34>
  42677b:	mov    rbx,rdi
  42677e:	mov    rdi,QWORD PTR [rdi+0xa8]
  426785:	mov    rdx,QWORD PTR [rbx+0xb0]
  42678c:	xor    esi,esi
  42678e:	call   406100 <memset@plt>
  426793:	movabs rax,0x1000000000
  42679d:	mov    QWORD PTR [rbx+0xe0],rax
  4267a4:	pop    rbx
  4267a5:	ret    
  4267a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004267b0 <flatcc_builder_custom_init@@Base>:
  4267b0:	vxorps xmm0,xmm0,xmm0
  4267b4:	vmovups YMMWORD PTR [rdi+0x160],ymm0
  4267bc:	vmovups YMMWORD PTR [rdi+0x140],ymm0
  4267c4:	vmovups YMMWORD PTR [rdi+0x120],ymm0
  4267cc:	vmovups YMMWORD PTR [rdi+0x100],ymm0
  4267d4:	vmovups YMMWORD PTR [rdi+0xe0],ymm0
  4267dc:	vmovups YMMWORD PTR [rdi+0xc0],ymm0
  4267e4:	vmovups YMMWORD PTR [rdi+0xa0],ymm0
  4267ec:	vmovups YMMWORD PTR [rdi+0x80],ymm0
  4267f4:	vmovups YMMWORD PTR [rdi+0x60],ymm0
  4267f9:	vmovups YMMWORD PTR [rdi+0x40],ymm0
  4267fe:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  426803:	vmovups YMMWORD PTR [rdi],ymm0
  426807:	mov    QWORD PTR [rdi+0x180],0x0
  426812:	test   rsi,rsi
  426815:	je     426839 <flatcc_builder_custom_init@@Base+0x89>
  426817:	test   rcx,rcx
  42681a:	jne    426823 <flatcc_builder_custom_init@@Base+0x73>
  42681c:	lea    rcx,[rip+0xfffffffffffffe6d]        # 426690 <flatcc_builder_default_alloc@@Base>
  426823:	mov    QWORD PTR [rdi+0x40],r8
  426827:	mov    QWORD PTR [rdi+0x50],rcx
  42682b:	mov    QWORD PTR [rdi+0x38],rdx
  42682f:	mov    QWORD PTR [rdi+0x48],rsi
  426833:	xor    eax,eax
  426835:	vzeroupper 
  426838:	ret    
  426839:	mov    DWORD PTR [rdi+0x128],0x1
  426843:	lea    rdx,[rdi+0x130]
  42684a:	lea    rsi,[rip+0x4a6f]        # 42b2c0 <flatcc_emitter@@Base>
  426851:	test   rcx,rcx
  426854:	je     42681c <flatcc_builder_custom_init@@Base+0x6c>
  426856:	jmp    426823 <flatcc_builder_custom_init@@Base+0x73>
  426858:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000426860 <flatcc_builder_init@@Base>:
  426860:	vxorps xmm0,xmm0,xmm0
  426864:	vmovups YMMWORD PTR [rdi+0x120],ymm0
  42686c:	vmovups YMMWORD PTR [rdi+0x40],ymm0
  426871:	vmovups YMMWORD PTR [rdi+0x20],ymm0
  426876:	vmovups YMMWORD PTR [rdi+0x160],ymm0
  42687e:	vmovups YMMWORD PTR [rdi+0x140],ymm0
  426886:	vmovups YMMWORD PTR [rdi+0x100],ymm0
  42688e:	vmovups YMMWORD PTR [rdi+0xe0],ymm0
  426896:	vmovups YMMWORD PTR [rdi+0xc0],ymm0
  42689e:	vmovups YMMWORD PTR [rdi+0xa0],ymm0
  4268a6:	vmovups YMMWORD PTR [rdi+0x80],ymm0
  4268ae:	vmovups YMMWORD PTR [rdi+0x60],ymm0
  4268b3:	vmovups YMMWORD PTR [rdi],ymm0
  4268b7:	mov    QWORD PTR [rdi+0x180],0x0
  4268c2:	mov    DWORD PTR [rdi+0x128],0x1
  4268cc:	lea    rax,[rdi+0x130]
  4268d3:	mov    QWORD PTR [rdi+0x40],0x0
  4268db:	lea    rcx,[rip+0xfffffffffffffdae]        # 426690 <flatcc_builder_default_alloc@@Base>
  4268e2:	mov    QWORD PTR [rdi+0x50],rcx
  4268e6:	mov    QWORD PTR [rdi+0x38],rax
  4268ea:	lea    rax,[rip+0x49cf]        # 42b2c0 <flatcc_emitter@@Base>
  4268f1:	mov    QWORD PTR [rdi+0x48],rax
  4268f5:	xor    eax,eax
  4268f7:	vzeroupper 
  4268fa:	ret    
  4268fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000426900 <flatcc_builder_custom_reset@@Base>:
  426900:	push   rbp
  426901:	push   r15
  426903:	push   r14
  426905:	push   r12
  426907:	push   rbx
  426908:	mov    r15d,edx
  42690b:	mov    r14d,esi
  42690e:	mov    r12,rdi
  426911:	lea    rbp,[rdi+0x58]
  426915:	xor    ebx,ebx
  426917:	jmp    426938 <flatcc_builder_custom_reset@@Base+0x38>
  426919:	nop    DWORD PTR [rax+0x0]
  426920:	cmp    QWORD PTR [rbp+0x8],0x0
  426925:	jne    426a36 <flatcc_builder_custom_reset@@Base+0x136>
  42692b:	inc    rbx
  42692e:	add    rbp,0x10
  426932:	cmp    rbx,0x8
  426936:	je     42697f <flatcc_builder_custom_reset@@Base+0x7f>
  426938:	mov    rdi,QWORD PTR [rbp+0x0]
  42693c:	test   rdi,rdi
  42693f:	je     426920 <flatcc_builder_custom_reset@@Base+0x20>
  426941:	test   r15d,r15d
  426944:	je     426972 <flatcc_builder_custom_reset@@Base+0x72>
  426946:	cmp    rbx,0x5
  42694a:	je     426972 <flatcc_builder_custom_reset@@Base+0x72>
  42694c:	mov    rdi,QWORD PTR [r12+0x40]
  426951:	mov    edx,0x1
  426956:	mov    rsi,rbp
  426959:	mov    ecx,0x1
  42695e:	mov    r8d,ebx
  426961:	call   QWORD PTR [r12+0x50]
  426966:	test   eax,eax
  426968:	jne    426a26 <flatcc_builder_custom_reset@@Base+0x126>
  42696e:	mov    rdi,QWORD PTR [rbp+0x0]
  426972:	mov    rdx,QWORD PTR [rbp+0x8]
  426976:	xor    esi,esi
  426978:	call   406100 <memset@plt>
  42697d:	jmp    42692b <flatcc_builder_custom_reset@@Base+0x2b>
  42697f:	mov    DWORD PTR [r12+0xe0],0x0
  42698b:	cmp    DWORD PTR [r12+0xe4],0x0
  426994:	je     4269a2 <flatcc_builder_custom_reset@@Base+0xa2>
  426996:	mov    DWORD PTR [r12+0xe4],0x10
  4269a2:	mov    WORD PTR [r12+0xe8],0x0
  4269ad:	mov    QWORD PTR [r12+0xf0],0x0
  4269b9:	mov    QWORD PTR [r12+0x20],0x0
  4269c2:	vxorps xmm0,xmm0,xmm0
  4269c6:	vmovups XMMWORD PTR [r12+0xfc],xmm0
  4269d0:	mov    rax,QWORD PTR [r12+0x58]
  4269d5:	mov    rcx,QWORD PTR [r12+0x68]
  4269da:	mov    QWORD PTR [r12+0x18],rcx
  4269df:	mov    rcx,QWORD PTR [r12+0x88]
  4269e7:	mov    QWORD PTR [r12],rcx
  4269eb:	mov    QWORD PTR [r12+0x8],rax
  4269f0:	mov    QWORD PTR [r12+0x30],0x0
  4269f9:	test   r14d,r14d
  4269fc:	je     426a08 <flatcc_builder_custom_reset@@Base+0x108>
  4269fe:	vmovups XMMWORD PTR [r12+0x118],xmm0
  426a08:	xor    ebx,ebx
  426a0a:	cmp    DWORD PTR [r12+0x128],0x0
  426a13:	je     426a2b <flatcc_builder_custom_reset@@Base+0x12b>
  426a15:	add    r12,0x130
  426a1c:	mov    rdi,r12
  426a1f:	call   42b140 <flatcc_emitter_reset@@Base>
  426a24:	jmp    426a2b <flatcc_builder_custom_reset@@Base+0x12b>
  426a26:	mov    ebx,0xffffffff
  426a2b:	mov    eax,ebx
  426a2d:	pop    rbx
  426a2e:	pop    r12
  426a30:	pop    r14
  426a32:	pop    r15
  426a34:	pop    rbp
  426a35:	ret    
  426a36:	lea    rdi,[rip+0x21db3]        # 4487f0 <flatcc_builder_padding_base@@Base+0x230>
  426a3d:	lea    rsi,[rip+0x21dbe]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  426a44:	lea    rcx,[rip+0x21e17]        # 448862 <flatcc_builder_padding_base@@Base+0x2a2>
  426a4b:	mov    edx,0x1b2
  426a50:	call   4060f0 <__assert_fail@plt>
  426a55:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426a5f:	nop

0000000000426a60 <flatcc_builder_reset@@Base>:
  426a60:	push   rbx
  426a61:	mov    rbx,rdi
  426a64:	mov    rdi,QWORD PTR [rdi+0x58]
  426a68:	mov    rdx,QWORD PTR [rbx+0x60]
  426a6c:	test   rdi,rdi
  426a6f:	je     426a7a <flatcc_builder_reset@@Base+0x1a>
  426a71:	xor    esi,esi
  426a73:	call   406100 <memset@plt>
  426a78:	jmp    426a83 <flatcc_builder_reset@@Base+0x23>
  426a7a:	test   rdx,rdx
  426a7d:	jne    426c00 <flatcc_builder_reset@@Base+0x1a0>
  426a83:	mov    rdi,QWORD PTR [rbx+0x68]
  426a87:	mov    rdx,QWORD PTR [rbx+0x70]
  426a8b:	test   rdi,rdi
  426a8e:	je     426a99 <flatcc_builder_reset@@Base+0x39>
  426a90:	xor    esi,esi
  426a92:	call   406100 <memset@plt>
  426a97:	jmp    426aa2 <flatcc_builder_reset@@Base+0x42>
  426a99:	test   rdx,rdx
  426a9c:	jne    426c00 <flatcc_builder_reset@@Base+0x1a0>
  426aa2:	mov    rdi,QWORD PTR [rbx+0x78]
  426aa6:	mov    rdx,QWORD PTR [rbx+0x80]
  426aad:	test   rdi,rdi
  426ab0:	je     426abb <flatcc_builder_reset@@Base+0x5b>
  426ab2:	xor    esi,esi
  426ab4:	call   406100 <memset@plt>
  426ab9:	jmp    426ac4 <flatcc_builder_reset@@Base+0x64>
  426abb:	test   rdx,rdx
  426abe:	jne    426c00 <flatcc_builder_reset@@Base+0x1a0>
  426ac4:	mov    rdi,QWORD PTR [rbx+0x88]
  426acb:	mov    rdx,QWORD PTR [rbx+0x90]
  426ad2:	test   rdi,rdi
  426ad5:	je     426ae0 <flatcc_builder_reset@@Base+0x80>
  426ad7:	xor    esi,esi
  426ad9:	call   406100 <memset@plt>
  426ade:	jmp    426ae9 <flatcc_builder_reset@@Base+0x89>
  426ae0:	test   rdx,rdx
  426ae3:	jne    426c00 <flatcc_builder_reset@@Base+0x1a0>
  426ae9:	mov    rdi,QWORD PTR [rbx+0x98]
  426af0:	mov    rdx,QWORD PTR [rbx+0xa0]
  426af7:	test   rdi,rdi
  426afa:	je     426b05 <flatcc_builder_reset@@Base+0xa5>
  426afc:	xor    esi,esi
  426afe:	call   406100 <memset@plt>
  426b03:	jmp    426b0e <flatcc_builder_reset@@Base+0xae>
  426b05:	test   rdx,rdx
  426b08:	jne    426c00 <flatcc_builder_reset@@Base+0x1a0>
  426b0e:	mov    rdi,QWORD PTR [rbx+0xa8]
  426b15:	mov    rdx,QWORD PTR [rbx+0xb0]
  426b1c:	test   rdi,rdi
  426b1f:	je     426b2a <flatcc_builder_reset@@Base+0xca>
  426b21:	xor    esi,esi
  426b23:	call   406100 <memset@plt>
  426b28:	jmp    426b33 <flatcc_builder_reset@@Base+0xd3>
  426b2a:	test   rdx,rdx
  426b2d:	jne    426c00 <flatcc_builder_reset@@Base+0x1a0>
  426b33:	mov    rdi,QWORD PTR [rbx+0xb8]
  426b3a:	mov    rdx,QWORD PTR [rbx+0xc0]
  426b41:	test   rdi,rdi
  426b44:	je     426b4f <flatcc_builder_reset@@Base+0xef>
  426b46:	xor    esi,esi
  426b48:	call   406100 <memset@plt>
  426b4d:	jmp    426b58 <flatcc_builder_reset@@Base+0xf8>
  426b4f:	test   rdx,rdx
  426b52:	jne    426c00 <flatcc_builder_reset@@Base+0x1a0>
  426b58:	mov    rdi,QWORD PTR [rbx+0xc8]
  426b5f:	mov    rdx,QWORD PTR [rbx+0xd0]
  426b66:	test   rdi,rdi
  426b69:	je     426b74 <flatcc_builder_reset@@Base+0x114>
  426b6b:	xor    esi,esi
  426b6d:	call   406100 <memset@plt>
  426b72:	jmp    426b7d <flatcc_builder_reset@@Base+0x11d>
  426b74:	test   rdx,rdx
  426b77:	jne    426c00 <flatcc_builder_reset@@Base+0x1a0>
  426b7d:	mov    DWORD PTR [rbx+0xe0],0x0
  426b87:	cmp    DWORD PTR [rbx+0xe4],0x0
  426b8e:	je     426b9a <flatcc_builder_reset@@Base+0x13a>
  426b90:	mov    DWORD PTR [rbx+0xe4],0x10
  426b9a:	mov    WORD PTR [rbx+0xe8],0x0
  426ba3:	mov    QWORD PTR [rbx+0xf0],0x0
  426bae:	mov    QWORD PTR [rbx+0x20],0x0
  426bb6:	vxorps xmm0,xmm0,xmm0
  426bba:	vmovups XMMWORD PTR [rbx+0xfc],xmm0
  426bc2:	mov    rax,QWORD PTR [rbx+0x58]
  426bc6:	mov    rcx,QWORD PTR [rbx+0x68]
  426bca:	mov    QWORD PTR [rbx+0x18],rcx
  426bce:	mov    rcx,QWORD PTR [rbx+0x88]
  426bd5:	mov    QWORD PTR [rbx],rcx
  426bd8:	mov    QWORD PTR [rbx+0x8],rax
  426bdc:	mov    QWORD PTR [rbx+0x30],0x0
  426be4:	cmp    DWORD PTR [rbx+0x128],0x0
  426beb:	je     426bfc <flatcc_builder_reset@@Base+0x19c>
  426bed:	add    rbx,0x130
  426bf4:	mov    rdi,rbx
  426bf7:	call   42b140 <flatcc_emitter_reset@@Base>
  426bfc:	xor    eax,eax
  426bfe:	pop    rbx
  426bff:	ret    
  426c00:	lea    rdi,[rip+0x21be9]        # 4487f0 <flatcc_builder_padding_base@@Base+0x230>
  426c07:	lea    rsi,[rip+0x21bf4]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  426c0e:	lea    rcx,[rip+0x21c4d]        # 448862 <flatcc_builder_padding_base@@Base+0x2a2>
  426c15:	mov    edx,0x1b2
  426c1a:	call   4060f0 <__assert_fail@plt>
  426c1f:	nop

0000000000426c20 <flatcc_builder_clear@@Base>:
  426c20:	push   rbx
  426c21:	mov    rbx,rdi
  426c24:	lea    rsi,[rdi+0x58]
  426c28:	mov    rdi,QWORD PTR [rdi+0x40]
  426c2c:	xor    edx,edx
  426c2e:	xor    ecx,ecx
  426c30:	xor    r8d,r8d
  426c33:	call   QWORD PTR [rbx+0x50]
  426c36:	lea    rsi,[rbx+0x68]
  426c3a:	mov    rdi,QWORD PTR [rbx+0x40]
  426c3e:	xor    edx,edx
  426c40:	xor    ecx,ecx
  426c42:	mov    r8d,0x1
  426c48:	call   QWORD PTR [rbx+0x50]
  426c4b:	lea    rsi,[rbx+0x78]
  426c4f:	mov    rdi,QWORD PTR [rbx+0x40]
  426c53:	xor    edx,edx
  426c55:	xor    ecx,ecx
  426c57:	mov    r8d,0x2
  426c5d:	call   QWORD PTR [rbx+0x50]
  426c60:	lea    rsi,[rbx+0x88]
  426c67:	mov    rdi,QWORD PTR [rbx+0x40]
  426c6b:	xor    edx,edx
  426c6d:	xor    ecx,ecx
  426c6f:	mov    r8d,0x3
  426c75:	call   QWORD PTR [rbx+0x50]
  426c78:	lea    rsi,[rbx+0x98]
  426c7f:	mov    rdi,QWORD PTR [rbx+0x40]
  426c83:	xor    edx,edx
  426c85:	xor    ecx,ecx
  426c87:	mov    r8d,0x4
  426c8d:	call   QWORD PTR [rbx+0x50]
  426c90:	lea    rsi,[rbx+0xa8]
  426c97:	mov    rdi,QWORD PTR [rbx+0x40]
  426c9b:	xor    edx,edx
  426c9d:	xor    ecx,ecx
  426c9f:	mov    r8d,0x5
  426ca5:	call   QWORD PTR [rbx+0x50]
  426ca8:	lea    rsi,[rbx+0xb8]
  426caf:	mov    rdi,QWORD PTR [rbx+0x40]
  426cb3:	xor    edx,edx
  426cb5:	xor    ecx,ecx
  426cb7:	mov    r8d,0x6
  426cbd:	call   QWORD PTR [rbx+0x50]
  426cc0:	lea    rsi,[rbx+0xc8]
  426cc7:	mov    rdi,QWORD PTR [rbx+0x40]
  426ccb:	xor    edx,edx
  426ccd:	xor    ecx,ecx
  426ccf:	mov    r8d,0x7
  426cd5:	call   QWORD PTR [rbx+0x50]
  426cd8:	cmp    DWORD PTR [rbx+0x128],0x0
  426cdf:	je     426ced <flatcc_builder_clear@@Base+0xcd>
  426ce1:	lea    rdi,[rbx+0x130]
  426ce8:	call   42b240 <flatcc_emitter_clear@@Base>
  426ced:	vxorps xmm0,xmm0,xmm0
  426cf1:	vmovups YMMWORD PTR [rbx+0x160],ymm0
  426cf9:	vmovups YMMWORD PTR [rbx+0x140],ymm0
  426d01:	vmovups YMMWORD PTR [rbx+0x120],ymm0
  426d09:	vmovups YMMWORD PTR [rbx+0x100],ymm0
  426d11:	vmovups YMMWORD PTR [rbx+0xe0],ymm0
  426d19:	vmovups YMMWORD PTR [rbx+0xc0],ymm0
  426d21:	vmovups YMMWORD PTR [rbx+0xa0],ymm0
  426d29:	vmovups YMMWORD PTR [rbx+0x80],ymm0
  426d31:	vmovups YMMWORD PTR [rbx+0x60],ymm0
  426d36:	vmovups YMMWORD PTR [rbx+0x40],ymm0
  426d3b:	vmovups YMMWORD PTR [rbx+0x20],ymm0
  426d40:	vmovups YMMWORD PTR [rbx],ymm0
  426d44:	mov    QWORD PTR [rbx+0x180],0x0
  426d4f:	pop    rbx
  426d50:	vzeroupper 
  426d53:	ret    
  426d54:	nop    WORD PTR cs:[rax+rax*1+0x0]
  426d5e:	xchg   ax,ax

0000000000426d60 <flatcc_builder_enter_user_frame_ptr@@Base>:
  426d60:	push   r15
  426d62:	push   r14
  426d64:	push   r12
  426d66:	push   rbx
  426d67:	push   rax
  426d68:	mov    r14,rsi
  426d6b:	mov    r15,rdi
  426d6e:	add    r14,0xf
  426d72:	and    r14,0xfffffffffffffff8
  426d76:	mov    rbx,QWORD PTR [rdi+0x180]
  426d7d:	lea    r12,[rdi+0xc8]
  426d84:	lea    rdx,[rbx+r14*1]
  426d88:	cmp    rdx,QWORD PTR [rdi+0xd0]
  426d8f:	jbe    426da8 <flatcc_builder_enter_user_frame_ptr@@Base+0x48>
  426d91:	mov    rdi,QWORD PTR [r15+0x40]
  426d95:	mov    rsi,r12
  426d98:	xor    ecx,ecx
  426d9a:	mov    r8d,0x7
  426da0:	call   QWORD PTR [r15+0x50]
  426da4:	test   eax,eax
  426da6:	jne    426df8 <flatcc_builder_enter_user_frame_ptr@@Base+0x98>
  426da8:	add    rbx,QWORD PTR [r12]
  426dac:	je     426de7 <flatcc_builder_enter_user_frame_ptr@@Base+0x87>
  426dae:	mov    rdi,rbx
  426db1:	xor    esi,esi
  426db3:	mov    rdx,r14
  426db6:	call   406100 <memset@plt>
  426dbb:	mov    rax,QWORD PTR [r15+0x178]
  426dc2:	mov    QWORD PTR [rbx],rax
  426dc5:	add    rbx,0x8
  426dc9:	mov    rax,QWORD PTR [r15+0x180]
  426dd0:	lea    rcx,[rax+0x8]
  426dd4:	mov    QWORD PTR [r15+0x178],rcx
  426ddb:	add    rax,r14
  426dde:	mov    QWORD PTR [r15+0x180],rax
  426de5:	jmp    426de9 <flatcc_builder_enter_user_frame_ptr@@Base+0x89>
  426de7:	xor    ebx,ebx
  426de9:	mov    rax,rbx
  426dec:	add    rsp,0x8
  426df0:	pop    rbx
  426df1:	pop    r12
  426df3:	pop    r14
  426df5:	pop    r15
  426df7:	ret    
  426df8:	lea    rdi,[rip+0x1859c]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  426dff:	lea    rsi,[rip+0x219fc]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  426e06:	lea    rcx,[rip+0x229ef]        # 4497fc <flatcc_builder_padding_base@@Base+0x123c>
  426e0d:	mov    edx,0x134
  426e12:	call   4060f0 <__assert_fail@plt>
  426e17:	nop    WORD PTR [rax+rax*1+0x0]

0000000000426e20 <flatcc_builder_enter_user_frame@@Base>:
  426e20:	push   r15
  426e22:	push   r14
  426e24:	push   r12
  426e26:	push   rbx
  426e27:	push   rax
  426e28:	mov    r14,rsi
  426e2b:	mov    rbx,rdi
  426e2e:	add    r14,0xf
  426e32:	and    r14,0xfffffffffffffff8
  426e36:	mov    r15,QWORD PTR [rdi+0x180]
  426e3d:	lea    r12,[rdi+0xc8]
  426e44:	lea    rdx,[r15+r14*1]
  426e48:	cmp    rdx,QWORD PTR [rdi+0xd0]
  426e4f:	jbe    426e67 <flatcc_builder_enter_user_frame@@Base+0x47>
  426e51:	mov    rdi,QWORD PTR [rbx+0x40]
  426e55:	mov    rsi,r12
  426e58:	xor    ecx,ecx
  426e5a:	mov    r8d,0x7
  426e60:	call   QWORD PTR [rbx+0x50]
  426e63:	test   eax,eax
  426e65:	jne    426eb0 <flatcc_builder_enter_user_frame@@Base+0x90>
  426e67:	add    r15,QWORD PTR [r12]
  426e6b:	je     426ea2 <flatcc_builder_enter_user_frame@@Base+0x82>
  426e6d:	mov    rdi,r15
  426e70:	xor    esi,esi
  426e72:	mov    rdx,r14
  426e75:	call   406100 <memset@plt>
  426e7a:	mov    rax,QWORD PTR [rbx+0x178]
  426e81:	mov    QWORD PTR [r15],rax
  426e84:	mov    rcx,QWORD PTR [rbx+0x180]
  426e8b:	lea    rax,[rcx+0x8]
  426e8f:	mov    QWORD PTR [rbx+0x178],rax
  426e96:	add    rcx,r14
  426e99:	mov    QWORD PTR [rbx+0x180],rcx
  426ea0:	jmp    426ea4 <flatcc_builder_enter_user_frame@@Base+0x84>
  426ea2:	xor    eax,eax
  426ea4:	add    rsp,0x8
  426ea8:	pop    rbx
  426ea9:	pop    r12
  426eab:	pop    r14
  426ead:	pop    r15
  426eaf:	ret    
  426eb0:	lea    rdi,[rip+0x184e4]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  426eb7:	lea    rsi,[rip+0x21944]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  426ebe:	lea    rcx,[rip+0x22937]        # 4497fc <flatcc_builder_padding_base@@Base+0x123c>
  426ec5:	mov    edx,0x134
  426eca:	call   4060f0 <__assert_fail@plt>
  426ecf:	nop

0000000000426ed0 <flatcc_builder_exit_user_frame@@Base>:
  426ed0:	push   rax
  426ed1:	mov    rax,QWORD PTR [rdi+0x178]
  426ed8:	test   rax,rax
  426edb:	je     426eff <flatcc_builder_exit_user_frame@@Base+0x2f>
  426edd:	mov    rcx,QWORD PTR [rdi+0xc8]
  426ee4:	mov    edx,eax
  426ee6:	add    rax,0xfffffffffffffff8
  426eea:	mov    QWORD PTR [rdi+0x180],rax
  426ef1:	mov    rax,QWORD PTR [rcx+rdx*1-0x8]
  426ef6:	mov    QWORD PTR [rdi+0x178],rax
  426efd:	pop    rcx
  426efe:	ret    
  426eff:	lea    rdi,[rip+0x2199a]        # 4488a0 <flatcc_builder_padding_base@@Base+0x2e0>
  426f06:	lea    rsi,[rip+0x218f5]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  426f0d:	lea    rcx,[rip+0x219a5]        # 4488b9 <flatcc_builder_padding_base@@Base+0x2f9>
  426f14:	mov    edx,0x21e
  426f19:	call   4060f0 <__assert_fail@plt>
  426f1e:	xchg   ax,ax

0000000000426f20 <flatcc_builder_exit_user_frame_at@@Base>:
  426f20:	push   rax
  426f21:	cmp    QWORD PTR [rdi+0x178],rsi
  426f28:	jb     426f58 <flatcc_builder_exit_user_frame_at@@Base+0x38>
  426f2a:	mov    QWORD PTR [rdi+0x178],rsi
  426f31:	test   rsi,rsi
  426f34:	je     426f77 <flatcc_builder_exit_user_frame_at@@Base+0x57>
  426f36:	mov    rax,QWORD PTR [rdi+0xc8]
  426f3d:	mov    ecx,esi
  426f3f:	add    rsi,0xfffffffffffffff8
  426f43:	mov    QWORD PTR [rdi+0x180],rsi
  426f4a:	mov    rax,QWORD PTR [rax+rcx*1-0x8]
  426f4f:	mov    QWORD PTR [rdi+0x178],rax
  426f56:	pop    rcx
  426f57:	ret    
  426f58:	lea    rdi,[rip+0x21994]        # 4488f3 <flatcc_builder_padding_base@@Base+0x333>
  426f5f:	lea    rsi,[rip+0x2189c]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  426f66:	lea    rcx,[rip+0x219a5]        # 448912 <flatcc_builder_padding_base@@Base+0x352>
  426f6d:	mov    edx,0x227
  426f72:	call   4060f0 <__assert_fail@plt>
  426f77:	lea    rdi,[rip+0x21922]        # 4488a0 <flatcc_builder_padding_base@@Base+0x2e0>
  426f7e:	lea    rsi,[rip+0x2187d]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  426f85:	lea    rcx,[rip+0x2192d]        # 4488b9 <flatcc_builder_padding_base@@Base+0x2f9>
  426f8c:	mov    edx,0x21e
  426f91:	call   4060f0 <__assert_fail@plt>
  426f96:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000426fa0 <flatcc_builder_get_current_user_frame@@Base>:
  426fa0:	mov    rax,QWORD PTR [rdi+0x178]
  426fa7:	ret    
  426fa8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000426fb0 <flatcc_builder_get_user_frame_ptr@@Base>:
  426fb0:	mov    eax,esi
  426fb2:	add    rax,QWORD PTR [rdi+0xc8]
  426fb9:	ret    
  426fba:	nop    WORD PTR [rax+rax*1+0x0]

0000000000426fc0 <flatcc_builder_embed_buffer@@Base>:
  426fc0:	push   rbp
  426fc1:	push   r15
  426fc3:	push   r14
  426fc5:	push   r12
  426fc7:	push   rbx
  426fc8:	sub    rsp,0xa0
  426fcf:	mov    ebx,r9d
  426fd2:	mov    rbp,rcx
  426fd5:	mov    r15,rdx
  426fd8:	mov    edx,esi
  426fda:	mov    r12,rdi
  426fdd:	mov    WORD PTR [rsp+0xa],r8w
  426fe3:	xor    ecx,ecx
  426fe5:	cmp    DWORD PTR [rdi+0x100],0x0
  426fec:	setne  cl
  426fef:	lea    rsi,[rsp+0xa]
  426ff4:	call   427160 <flatcc_builder_embed_buffer@@Base+0x1a0>
  426ff9:	and    ebx,0x2
  426ffc:	movzx  eax,WORD PTR [rsp+0xa]
  427001:	mov    r14d,DWORD PTR [r12+0xf0]
  427009:	lea    ecx,[rbp+rbx*2+0x0]
  42700d:	mov    edx,r14d
  427010:	sub    edx,ecx
  427012:	dec    eax
  427014:	and    eax,edx
  427016:	lea    ecx,[rax+rbp*1]
  427019:	mov    DWORD PTR [rsp+0xc],ecx
  42701d:	mov    QWORD PTR [rsp+0x10],0x0
  427026:	mov    DWORD PTR [rsp+0x18],0x0
  42702e:	cmp    DWORD PTR [r12+0x100],0x0
  427037:	je     427109 <flatcc_builder_embed_buffer@@Base+0x149>
  42703d:	mov    QWORD PTR [rsp+0x10],0x4
  427046:	lea    rcx,[rsp+0xc]
  42704b:	mov    QWORD PTR [rsp+0x20],rcx
  427050:	mov    QWORD PTR [rsp+0x28],0x4
  427059:	mov    DWORD PTR [rsp+0x18],0x1
  427061:	mov    r8d,0x4
  427067:	mov    edx,0x1
  42706c:	test   rbp,rbp
  42706f:	je     42708f <flatcc_builder_embed_buffer@@Base+0xcf>
  427071:	add    r8,rbp
  427074:	mov    QWORD PTR [rsp+0x10],r8
  427079:	mov    ecx,edx
  42707b:	shl    rcx,0x4
  42707f:	mov    QWORD PTR [rsp+rcx*1+0x20],r15
  427084:	mov    QWORD PTR [rsp+rcx*1+0x28],rbp
  427089:	inc    edx
  42708b:	mov    DWORD PTR [rsp+0x18],edx
  42708f:	test   eax,eax
  427091:	je     4270ba <flatcc_builder_embed_buffer@@Base+0xfa>
  427093:	mov    eax,eax
  427095:	add    r8,rax
  427098:	mov    QWORD PTR [rsp+0x10],r8
  42709d:	mov    ecx,edx
  42709f:	shl    rcx,0x4
  4270a3:	lea    rsi,[rip+0x21516]        # 4485c0 <flatcc_builder_padding_base@@Base>
  4270aa:	mov    QWORD PTR [rsp+rcx*1+0x20],rsi
  4270af:	mov    QWORD PTR [rsp+rcx*1+0x28],rax
  4270b4:	inc    edx
  4270b6:	mov    DWORD PTR [rsp+0x18],edx
  4270ba:	cmp    r8,0x11
  4270be:	setb   al
  4270c1:	lea    rcx,[r8-0x10]
  4270c5:	shr    rcx,0x20
  4270c9:	sete   cl
  4270cc:	test   r8d,r8d
  4270cf:	jle    42711c <flatcc_builder_embed_buffer@@Base+0x15c>
  4270d1:	or     al,cl
  4270d3:	je     42711c <flatcc_builder_embed_buffer@@Base+0x15c>
  4270d5:	sub    r14d,r8d
  4270d8:	mov    rdi,QWORD PTR [r12+0x38]
  4270dd:	lea    rsi,[rsp+0x20]
  4270e2:	mov    ecx,r14d
  4270e5:	call   QWORD PTR [r12+0x48]
  4270ea:	test   eax,eax
  4270ec:	jne    42713b <flatcc_builder_embed_buffer@@Base+0x17b>
  4270ee:	mov    DWORD PTR [r12+0xf0],r14d
  4270f6:	mov    eax,r14d
  4270f9:	add    rsp,0xa0
  427100:	pop    rbx
  427101:	pop    r12
  427103:	pop    r14
  427105:	pop    r15
  427107:	pop    rbp
  427108:	ret    
  427109:	xor    edx,edx
  42710b:	xor    r8d,r8d
  42710e:	test   rbp,rbp
  427111:	jne    427071 <flatcc_builder_embed_buffer@@Base+0xb1>
  427117:	jmp    42708f <flatcc_builder_embed_buffer@@Base+0xcf>
  42711c:	lea    rdi,[rip+0x18278]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  427123:	lea    rsi,[rip+0x216d8]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  42712a:	lea    rcx,[rip+0x22750]        # 449881 <flatcc_builder_padding_base@@Base+0x12c1>
  427131:	mov    edx,0x287
  427136:	call   4060f0 <__assert_fail@plt>
  42713b:	lea    rdi,[rip+0x18259]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  427142:	lea    rsi,[rip+0x216b9]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  427149:	lea    rcx,[rip+0x22731]        # 449881 <flatcc_builder_padding_base@@Base+0x12c1>
  427150:	mov    edx,0x28b
  427155:	call   4060f0 <__assert_fail@plt>
  42715a:	nop    WORD PTR [rax+rax*1+0x0]
  427160:	push   rbx
  427161:	sub    rsp,0x90
  427168:	mov    rax,rdi
  42716b:	test   dx,dx
  42716e:	jne    427181 <flatcc_builder_embed_buffer@@Base+0x1c1>
  427170:	mov    edi,DWORD PTR [rax+0xec]
  427176:	test   di,di
  427179:	mov    edx,0x1
  42717e:	cmovne edx,edi
  427181:	movzx  ebx,WORD PTR [rsi]
  427184:	mov    edi,0x4
  427189:	cmp    bx,0x4
  42718d:	cmovae edi,ebx
  427190:	jb     42719d <flatcc_builder_embed_buffer@@Base+0x1dd>
  427192:	cmp    di,dx
  427195:	jb     42719d <flatcc_builder_embed_buffer@@Base+0x1dd>
  427197:	test   ecx,ecx
  427199:	jne    427204 <flatcc_builder_embed_buffer@@Base+0x244>
  42719b:	jmp    4271aa <flatcc_builder_embed_buffer@@Base+0x1ea>
  42719d:	cmp    di,dx
  4271a0:	cmovb  edi,edx
  4271a3:	mov    WORD PTR [rsi],di
  4271a6:	test   ecx,ecx
  4271a8:	jne    427204 <flatcc_builder_embed_buffer@@Base+0x244>
  4271aa:	mov    ebx,DWORD PTR [rax+0xf4]
  4271b0:	movzx  r8d,dx
  4271b4:	dec    r8d
  4271b7:	and    r8d,ebx
  4271ba:	je     427204 <flatcc_builder_embed_buffer@@Base+0x244>
  4271bc:	mov    QWORD PTR [rsp],r8
  4271c0:	lea    rcx,[rip+0x213f9]        # 4485c0 <flatcc_builder_padding_base@@Base>
  4271c7:	mov    QWORD PTR [rsp+0x10],rcx
  4271cc:	mov    QWORD PTR [rsp+0x18],r8
  4271d1:	mov    DWORD PTR [rsp+0x8],0x1
  4271d9:	lea    ecx,[r8+rbx*1]
  4271dd:	mov    DWORD PTR [rax+0xf4],ecx
  4271e3:	test   r8d,r8d
  4271e6:	js     42720d <flatcc_builder_embed_buffer@@Base+0x24d>
  4271e8:	mov    rdi,QWORD PTR [rax+0x38]
  4271ec:	lea    rsi,[rsp+0x10]
  4271f1:	mov    edx,0x1
  4271f6:	mov    ecx,ebx
  4271f8:	call   QWORD PTR [rax+0x48]
  4271fb:	test   eax,eax
  4271fd:	jne    42722c <flatcc_builder_embed_buffer@@Base+0x26c>
  4271ff:	cmp    ebx,0xffffffff
  427202:	je     42724b <flatcc_builder_embed_buffer@@Base+0x28b>
  427204:	add    rsp,0x90
  42720b:	pop    rbx
  42720c:	ret    
  42720d:	lea    rdi,[rip+0x18187]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  427214:	lea    rsi,[rip+0x215e7]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  42721b:	lea    rcx,[rip+0x2271b]        # 44993d <flatcc_builder_padding_base@@Base+0x137d>
  427222:	mov    edx,0x2a1
  427227:	call   4060f0 <__assert_fail@plt>
  42722c:	lea    rdi,[rip+0x18168]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  427233:	lea    rsi,[rip+0x215c8]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  42723a:	lea    rcx,[rip+0x226fc]        # 44993d <flatcc_builder_padding_base@@Base+0x137d>
  427241:	mov    edx,0x2a5
  427246:	call   4060f0 <__assert_fail@plt>
  42724b:	lea    rdi,[rip+0x18149]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  427252:	lea    rsi,[rip+0x215a9]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  427259:	lea    rcx,[rip+0x225df]        # 44983f <flatcc_builder_padding_base@@Base+0x127f>
  427260:	mov    edx,0x2be
  427265:	call   4060f0 <__assert_fail@plt>
  42726a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000427270 <flatcc_builder_create_buffer@@Base>:
  427270:	push   rbp
  427271:	push   r15
  427273:	push   r14
  427275:	push   r13
  427277:	push   r12
  427279:	push   rbx
  42727a:	sub    rsp,0xa8
  427281:	mov    r12d,r9d
  427284:	mov    r14d,ecx
  427287:	mov    rbp,rsi
  42728a:	mov    r13,rdi
  42728d:	mov    WORD PTR [rsp+0xa],r8w
  427293:	mov    DWORD PTR [rsp+0xc],0x0
  42729b:	mov    r15d,r9d
  42729e:	and    r15d,0x1
  4272a2:	lea    rsi,[rsp+0xa]
  4272a7:	mov    ecx,r15d
  4272aa:	call   427160 <flatcc_builder_embed_buffer@@Base+0x1a0>
  4272af:	movzx  eax,WORD PTR [rsp+0xa]
  4272b4:	cmp    WORD PTR [r13+0xe8],ax
  4272bc:	jae    4272c6 <flatcc_builder_create_buffer@@Base+0x56>
  4272be:	mov    WORD PTR [r13+0xe8],ax
  4272c6:	movzx  edx,ax
  4272c9:	xor    eax,eax
  4272cb:	test   rbp,rbp
  4272ce:	je     4272e8 <flatcc_builder_create_buffer@@Base+0x78>
  4272d0:	mov    ecx,DWORD PTR [rbp+0x0]
  4272d3:	mov    DWORD PTR [rsp+0xc],ecx
  4272d7:	xor    edi,edi
  4272d9:	test   ecx,ecx
  4272db:	setne  dil
  4272df:	mov    rsi,rdi
  4272e2:	shl    rsi,0x2
  4272e6:	jmp    4272ec <flatcc_builder_create_buffer@@Base+0x7c>
  4272e8:	xor    edi,edi
  4272ea:	xor    esi,esi
  4272ec:	lea    ebx,[r12+r12*1]
  4272f0:	and    ebx,0x4
  4272f3:	mov    ebp,DWORD PTR [r13+0xf0]
  4272fa:	mov    ecx,ebp
  4272fc:	sub    ecx,ebx
  4272fe:	sub    ecx,esi
  427300:	add    ecx,0xfffffffc
  427303:	dec    edx
  427305:	mov    QWORD PTR [rsp+0x18],0x0
  42730e:	mov    DWORD PTR [rsp+0x20],0x0
  427316:	test   r12b,0x3
  42731a:	je     42734d <flatcc_builder_create_buffer@@Base+0xdd>
  42731c:	mov    QWORD PTR [rsp+0x18],0x4
  427325:	lea    rax,[rsp+0x10]
  42732a:	mov    QWORD PTR [rsp+0x28],rax
  42732f:	mov    QWORD PTR [rsp+0x30],0x4
  427338:	mov    DWORD PTR [rsp+0x20],0x1
  427340:	mov    r8d,0x8
  427346:	mov    eax,0x1
  42734b:	jmp    427353 <flatcc_builder_create_buffer@@Base+0xe3>
  42734d:	mov    r8d,0x4
  427353:	and    ecx,edx
  427355:	mov    QWORD PTR [rsp+0x18],r8
  42735a:	mov    edx,eax
  42735c:	shl    rdx,0x4
  427360:	lea    rbx,[rsp+0x14]
  427365:	mov    QWORD PTR [rsp+rdx*1+0x28],rbx
  42736a:	mov    QWORD PTR [rsp+rdx*1+0x30],0x4
  427373:	lea    edx,[rax+0x1]
  427376:	mov    DWORD PTR [rsp+0x20],edx
  42737a:	test   dil,dil
  42737d:	je     4273a5 <flatcc_builder_create_buffer@@Base+0x135>
  42737f:	add    r8,rsi
  427382:	mov    QWORD PTR [rsp+0x18],r8
  427387:	mov    edx,edx
  427389:	shl    rdx,0x4
  42738d:	lea    rdi,[rsp+0xc]
  427392:	mov    QWORD PTR [rsp+rdx*1+0x28],rdi
  427397:	mov    QWORD PTR [rsp+rdx*1+0x30],rsi
  42739c:	or     eax,0x2
  42739f:	mov    DWORD PTR [rsp+0x20],eax
  4273a3:	mov    edx,eax
  4273a5:	test   ecx,ecx
  4273a7:	je     4273d0 <flatcc_builder_create_buffer@@Base+0x160>
  4273a9:	mov    eax,ecx
  4273ab:	add    r8,rax
  4273ae:	mov    QWORD PTR [rsp+0x18],r8
  4273b3:	mov    ecx,edx
  4273b5:	shl    rcx,0x4
  4273b9:	lea    rsi,[rip+0x21200]        # 4485c0 <flatcc_builder_padding_base@@Base>
  4273c0:	mov    QWORD PTR [rsp+rcx*1+0x28],rsi
  4273c5:	mov    QWORD PTR [rsp+rcx*1+0x30],rax
  4273ca:	inc    edx
  4273cc:	mov    DWORD PTR [rsp+0x20],edx
  4273d0:	xor    eax,eax
  4273d2:	test   r12b,0x3
  4273d6:	setne  al
  4273d9:	sub    ebp,r8d
  4273dc:	lea    eax,[rbp+rax*4+0x0]
  4273e0:	mov    ecx,r15d
  4273e3:	mov    ecx,DWORD PTR [r13+rcx*4+0xf4]
  4273eb:	sub    ecx,eax
  4273ed:	mov    DWORD PTR [rsp+0x10],ecx
  4273f1:	sub    r14d,eax
  4273f4:	mov    DWORD PTR [rsp+0x14],r14d
  4273f9:	cmp    r8,0x11
  4273fd:	setb   al
  427400:	lea    rcx,[r8-0x10]
  427404:	shr    rcx,0x20
  427408:	sete   cl
  42740b:	test   r8d,r8d
  42740e:	jle    427446 <flatcc_builder_create_buffer@@Base+0x1d6>
  427410:	or     al,cl
  427412:	je     427446 <flatcc_builder_create_buffer@@Base+0x1d6>
  427414:	mov    rdi,QWORD PTR [r13+0x38]
  427418:	lea    rsi,[rsp+0x28]
  42741d:	mov    ecx,ebp
  42741f:	call   QWORD PTR [r13+0x48]
  427423:	test   eax,eax
  427425:	jne    427465 <flatcc_builder_create_buffer@@Base+0x1f5>
  427427:	mov    DWORD PTR [r13+0xf0],ebp
  42742e:	test   ebp,ebp
  427430:	je     427484 <flatcc_builder_create_buffer@@Base+0x214>
  427432:	mov    eax,ebp
  427434:	add    rsp,0xa8
  42743b:	pop    rbx
  42743c:	pop    r12
  42743e:	pop    r13
  427440:	pop    r14
  427442:	pop    r15
  427444:	pop    rbp
  427445:	ret    
  427446:	lea    rdi,[rip+0x17f4e]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  42744d:	lea    rsi,[rip+0x213ae]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  427454:	lea    rcx,[rip+0x22426]        # 449881 <flatcc_builder_padding_base@@Base+0x12c1>
  42745b:	mov    edx,0x287
  427460:	call   4060f0 <__assert_fail@plt>
  427465:	lea    rdi,[rip+0x17f2f]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  42746c:	lea    rsi,[rip+0x2138f]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  427473:	lea    rcx,[rip+0x22407]        # 449881 <flatcc_builder_padding_base@@Base+0x12c1>
  42747a:	mov    edx,0x28b
  42747f:	call   4060f0 <__assert_fail@plt>
  427484:	lea    rdi,[rip+0x17f10]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  42748b:	lea    rsi,[rip+0x21370]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  427492:	lea    rcx,[rip+0x214be]        # 448957 <flatcc_builder_padding_base@@Base+0x397>
  427499:	mov    edx,0x304
  42749e:	call   4060f0 <__assert_fail@plt>
  4274a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4274ad:	nop    DWORD PTR [rax]

00000000004274b0 <flatcc_builder_create_struct@@Base>:
  4274b0:	push   rbp
  4274b1:	push   rbx
  4274b2:	sub    rsp,0x98
  4274b9:	test   cx,cx
  4274bc:	je     4275b2 <flatcc_builder_create_struct@@Base+0x102>
  4274c2:	mov    r8,rdx
  4274c5:	mov    rbx,rdi
  4274c8:	cmp    WORD PTR [rdi+0xe8],cx
  4274cf:	jae    4274d8 <flatcc_builder_create_struct@@Base+0x28>
  4274d1:	mov    WORD PTR [rbx+0xe8],cx
  4274d8:	mov    ebp,DWORD PTR [rbx+0xf0]
  4274de:	mov    edx,ebp
  4274e0:	sub    edx,r8d
  4274e3:	movzx  eax,cx
  4274e6:	dec    eax
  4274e8:	and    eax,edx
  4274ea:	mov    QWORD PTR [rsp+0x8],0x0
  4274f3:	mov    DWORD PTR [rsp+0x10],0x0
  4274fb:	test   r8,r8
  4274fe:	je     42758b <flatcc_builder_create_struct@@Base+0xdb>
  427504:	mov    QWORD PTR [rsp+0x8],r8
  427509:	mov    QWORD PTR [rsp+0x18],rsi
  42750e:	mov    QWORD PTR [rsp+0x20],r8
  427513:	mov    DWORD PTR [rsp+0x10],0x1
  42751b:	mov    edx,0x1
  427520:	test   eax,eax
  427522:	je     427549 <flatcc_builder_create_struct@@Base+0x99>
  427524:	add    r8,rax
  427527:	mov    QWORD PTR [rsp+0x8],r8
  42752c:	mov    ecx,edx
  42752e:	shl    rcx,0x4
  427532:	lea    rsi,[rip+0x21087]        # 4485c0 <flatcc_builder_padding_base@@Base>
  427539:	mov    QWORD PTR [rsp+rcx*1+0x18],rsi
  42753e:	mov    QWORD PTR [rsp+rcx*1+0x20],rax
  427543:	inc    edx
  427545:	mov    DWORD PTR [rsp+0x10],edx
  427549:	cmp    r8,0x11
  42754d:	setb   al
  427550:	lea    rcx,[r8-0x10]
  427554:	shr    rcx,0x20
  427558:	sete   cl
  42755b:	test   r8d,r8d
  42755e:	jle    427593 <flatcc_builder_create_struct@@Base+0xe3>
  427560:	or     al,cl
  427562:	je     427593 <flatcc_builder_create_struct@@Base+0xe3>
  427564:	sub    ebp,r8d
  427567:	mov    rdi,QWORD PTR [rbx+0x38]
  42756b:	lea    rsi,[rsp+0x18]
  427570:	mov    ecx,ebp
  427572:	call   QWORD PTR [rbx+0x48]
  427575:	test   eax,eax
  427577:	jne    4275d1 <flatcc_builder_create_struct@@Base+0x121>
  427579:	mov    DWORD PTR [rbx+0xf0],ebp
  42757f:	mov    eax,ebp
  427581:	add    rsp,0x98
  427588:	pop    rbx
  427589:	pop    rbp
  42758a:	ret    
  42758b:	xor    edx,edx
  42758d:	test   eax,eax
  42758f:	jne    427524 <flatcc_builder_create_struct@@Base+0x74>
  427591:	jmp    427549 <flatcc_builder_create_struct@@Base+0x99>
  427593:	lea    rdi,[rip+0x17e01]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  42759a:	lea    rsi,[rip+0x21261]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  4275a1:	lea    rcx,[rip+0x222d9]        # 449881 <flatcc_builder_padding_base@@Base+0x12c1>
  4275a8:	mov    edx,0x287
  4275ad:	call   4060f0 <__assert_fail@plt>
  4275b2:	lea    rdi,[rip+0x21421]        # 4489da <flatcc_builder_padding_base@@Base+0x41a>
  4275b9:	lea    rsi,[rip+0x21242]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  4275c0:	lea    rcx,[rip+0x2141e]        # 4489e5 <flatcc_builder_padding_base@@Base+0x425>
  4275c7:	mov    edx,0x30f
  4275cc:	call   4060f0 <__assert_fail@plt>
  4275d1:	lea    rdi,[rip+0x17dc3]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  4275d8:	lea    rsi,[rip+0x21223]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  4275df:	lea    rcx,[rip+0x2229b]        # 449881 <flatcc_builder_padding_base@@Base+0x12c1>
  4275e6:	mov    edx,0x28b
  4275eb:	call   4060f0 <__assert_fail@plt>

00000000004275f0 <flatcc_builder_start_buffer@@Base>:
  4275f0:	push   rbp
  4275f1:	push   r15
  4275f3:	push   r14
  4275f5:	push   rbx
  4275f6:	push   rax
  4275f7:	mov    r15d,ecx
  4275fa:	mov    ebp,edx
  4275fc:	mov    r14,rsi
  4275ff:	mov    rbx,rdi
  427602:	movzx  esi,WORD PTR [rdi+0xe8]
  427609:	call   4276d0 <flatcc_builder_start_buffer@@Base+0xe0>
  42760e:	mov    ecx,eax
  427610:	mov    eax,0xffffffff
  427615:	test   ecx,ecx
  427617:	jne    4276bc <flatcc_builder_start_buffer@@Base+0xcc>
  42761d:	mov    WORD PTR [rbx+0xe8],0x1
  427626:	movzx  eax,WORD PTR [rbx+0xec]
  42762d:	mov    rcx,QWORD PTR [rbx+0x30]
  427631:	mov    WORD PTR [rcx+0x22],ax
  427635:	mov    WORD PTR [rbx+0xec],bp
  42763c:	movzx  eax,WORD PTR [rbx+0x10c]
  427643:	mov    rcx,QWORD PTR [rbx+0x30]
  427647:	mov    WORD PTR [rcx+0x20],ax
  42764b:	mov    WORD PTR [rbx+0x10c],r15w
  427653:	mov    eax,DWORD PTR [rbx+0xf8]
  427659:	mov    rcx,QWORD PTR [rbx+0x30]
  42765d:	mov    DWORD PTR [rcx+0x14],eax
  427660:	mov    eax,DWORD PTR [rbx+0x100]
  427666:	mov    rcx,QWORD PTR [rbx+0x30]
  42766a:	mov    DWORD PTR [rcx+0x1c],eax
  42766d:	mov    eax,DWORD PTR [rbx+0xf0]
  427673:	mov    DWORD PTR [rbx+0xf8],eax
  427679:	mov    eax,DWORD PTR [rbx+0xfc]
  42767f:	lea    ecx,[rax+0x1]
  427682:	mov    DWORD PTR [rbx+0xfc],ecx
  427688:	mov    DWORD PTR [rbx+0x100],eax
  42768e:	mov    eax,DWORD PTR [rbx+0x110]
  427694:	mov    rcx,QWORD PTR [rbx+0x30]
  427698:	mov    DWORD PTR [rcx+0x10],eax
  42769b:	test   r14,r14
  42769e:	jne    4276a7 <flatcc_builder_start_buffer@@Base+0xb7>
  4276a0:	lea    r14,[rip+0x20f19]        # 4485c0 <flatcc_builder_padding_base@@Base>
  4276a7:	mov    eax,DWORD PTR [r14]
  4276aa:	mov    DWORD PTR [rbx+0x110],eax
  4276b0:	mov    rax,QWORD PTR [rbx+0x30]
  4276b4:	mov    WORD PTR [rax+0xe],0x1
  4276ba:	xor    eax,eax
  4276bc:	add    rsp,0x8
  4276c0:	pop    rbx
  4276c1:	pop    r14
  4276c3:	pop    r15
  4276c5:	pop    rbp
  4276c6:	ret    
  4276c7:	nop    WORD PTR [rax+rax*1+0x0]
  4276d0:	push   rbp
  4276d1:	push   r15
  4276d3:	push   r14
  4276d5:	push   rbx
  4276d6:	push   rax
  4276d7:	mov    r14d,esi
  4276da:	mov    rbx,rdi
  4276dd:	movsxd rbp,DWORD PTR [rdi+0x104]
  4276e4:	lea    eax,[rbp+0x1]
  4276e7:	mov    DWORD PTR [rdi+0x104],eax
  4276ed:	cmp    ebp,DWORD PTR [rdi+0x108]
  4276f3:	jge    427706 <flatcc_builder_start_buffer@@Base+0x116>
  4276f5:	mov    rcx,QWORD PTR [rbx+0x30]
  4276f9:	add    rcx,0x24
  4276fd:	mov    QWORD PTR [rbx+0x30],rcx
  427701:	jmp    427799 <flatcc_builder_start_buffer@@Base+0x1a9>
  427706:	mov    eax,DWORD PTR [rbx+0x120]
  42770c:	mov    r15d,0xffffffff
  427712:	test   eax,eax
  427714:	jle    42771e <flatcc_builder_start_buffer@@Base+0x12e>
  427716:	cmp    ebp,eax
  427718:	jge    4277d4 <flatcc_builder_start_buffer@@Base+0x1e4>
  42771e:	shl    rbp,0x2
  427722:	lea    rdx,[rbp*8+0x24]
  42772a:	add    rdx,rbp
  42772d:	cmp    rdx,QWORD PTR [rbx+0xa0]
  427734:	jbe    427754 <flatcc_builder_start_buffer@@Base+0x164>
  427736:	lea    rsi,[rbx+0x98]
  42773d:	mov    rdi,QWORD PTR [rbx+0x40]
  427741:	xor    ecx,ecx
  427743:	mov    r8d,0x4
  427749:	call   QWORD PTR [rbx+0x50]
  42774c:	test   eax,eax
  42774e:	jne    4277e2 <flatcc_builder_start_buffer@@Base+0x1f2>
  427754:	lea    rcx,[rbp*8+0x0]
  42775c:	add    rcx,rbp
  42775f:	add    rcx,QWORD PTR [rbx+0x98]
  427766:	mov    QWORD PTR [rbx+0x30],rcx
  42776a:	je     4277d4 <flatcc_builder_start_buffer@@Base+0x1e4>
  42776c:	movabs rax,0xe38e38e38e38e38f
  427776:	mul    QWORD PTR [rbx+0xa0]
  42777d:	shr    rdx,0x5
  427781:	mov    eax,DWORD PTR [rbx+0x120]
  427787:	cmp    eax,edx
  427789:	mov    esi,edx
  42778b:	cmovle esi,eax
  42778e:	test   eax,eax
  427790:	cmovle esi,edx
  427793:	mov    DWORD PTR [rbx+0x108],esi
  427799:	mov    eax,DWORD PTR [rbx+0x20]
  42779c:	mov    DWORD PTR [rcx+0x8],eax
  42779f:	movzx  edx,WORD PTR [rbx+0xea]
  4277a6:	mov    WORD PTR [rcx+0xc],dx
  4277aa:	mov    WORD PTR [rbx+0xea],r14w
  4277b2:	mov    edx,DWORD PTR [rbx+0x28]
  4277b5:	mov    DWORD PTR [rcx],edx
  4277b7:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  4277be:	lea    eax,[rax+rdx*1]
  4277c1:	add    eax,0x7
  4277c4:	and    eax,0xfffffff8
  4277c7:	mov    DWORD PTR [rbx+0x28],eax
  4277ca:	mov    DWORD PTR [rbx+0x20],0x0
  4277d1:	xor    r15d,r15d
  4277d4:	mov    eax,r15d
  4277d7:	add    rsp,0x8
  4277db:	pop    rbx
  4277dc:	pop    r14
  4277de:	pop    r15
  4277e0:	pop    rbp
  4277e1:	ret    
  4277e2:	lea    rdi,[rip+0x17bb2]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  4277e9:	lea    rsi,[rip+0x21012]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  4277f0:	lea    rcx,[rip+0x22005]        # 4497fc <flatcc_builder_padding_base@@Base+0x123c>
  4277f7:	mov    edx,0x134
  4277fc:	call   4060f0 <__assert_fail@plt>
  427801:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42780b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000427810 <flatcc_builder_end_buffer@@Base>:
  427810:	push   rbp
  427811:	push   rbx
  427812:	push   rax
  427813:	mov    rax,QWORD PTR [rdi+0x30]
  427817:	cmp    WORD PTR [rax+0xe],0x1
  42781c:	jne    427919 <flatcc_builder_end_buffer@@Base+0x109>
  427822:	mov    ecx,esi
  427824:	mov    rbx,rdi
  427827:	movzx  eax,WORD PTR [rdi+0x10c]
  42782e:	and    eax,0x2
  427831:	xor    r9d,r9d
  427834:	cmp    DWORD PTR [rdi+0x100],0x0
  42783b:	setne  r9b
  42783f:	or     r9d,eax
  427842:	movzx  edi,WORD PTR [rdi+0xe8]
  427849:	movzx  eax,WORD PTR [rbx+0xec]
  427850:	cmp    di,ax
  427853:	jae    42785e <flatcc_builder_end_buffer@@Base+0x4e>
  427855:	mov    WORD PTR [rbx+0xe8],ax
  42785c:	mov    edi,eax
  42785e:	lea    rsi,[rbx+0x110]
  427865:	movzx  edx,ax
  427868:	movzx  r8d,di
  42786c:	mov    rdi,rbx
  42786f:	call   427270 <flatcc_builder_create_buffer@@Base>
  427874:	mov    ebp,eax
  427876:	test   eax,eax
  427878:	je     427910 <flatcc_builder_end_buffer@@Base+0x100>
  42787e:	mov    rax,QWORD PTR [rbx+0x30]
  427882:	mov    ecx,DWORD PTR [rax+0x14]
  427885:	mov    DWORD PTR [rbx+0xf8],ecx
  42788b:	mov    ecx,DWORD PTR [rax+0x1c]
  42788e:	mov    DWORD PTR [rbx+0x100],ecx
  427894:	mov    ecx,DWORD PTR [rax+0x10]
  427897:	mov    DWORD PTR [rbx+0x110],ecx
  42789d:	movzx  eax,WORD PTR [rax+0x20]
  4278a1:	mov    WORD PTR [rbx+0x10c],ax
  4278a8:	mov    rdi,QWORD PTR [rbx+0x18]
  4278ac:	mov    edx,DWORD PTR [rbx+0x20]
  4278af:	xor    esi,esi
  4278b1:	call   406100 <memset@plt>
  4278b6:	mov    rax,QWORD PTR [rbx+0x30]
  4278ba:	mov    ecx,DWORD PTR [rax+0x8]
  4278bd:	mov    DWORD PTR [rbx+0x20],ecx
  4278c0:	mov    ecx,DWORD PTR [rax]
  4278c2:	mov    DWORD PTR [rbx+0x28],ecx
  4278c5:	mov    edx,DWORD PTR [rax+0x4]
  4278c8:	mov    rsi,rcx
  4278cb:	add    rsi,QWORD PTR [rbx+0x68]
  4278cf:	mov    QWORD PTR [rbx+0x18],rsi
  4278d3:	mov    esi,DWORD PTR [rbx+0x70]
  4278d6:	sub    esi,ecx
  4278d8:	cmp    esi,edx
  4278da:	cmova  esi,edx
  4278dd:	mov    DWORD PTR [rbx+0x24],esi
  4278e0:	movzx  ecx,WORD PTR [rbx+0xea]
  4278e7:	cmp    WORD PTR [rbx+0xe8],cx
  4278ee:	jae    4278f7 <flatcc_builder_end_buffer@@Base+0xe7>
  4278f0:	mov    WORD PTR [rbx+0xe8],cx
  4278f7:	movzx  ecx,WORD PTR [rax+0xc]
  4278fb:	mov    WORD PTR [rbx+0xea],cx
  427902:	add    rax,0xffffffffffffffdc
  427906:	mov    QWORD PTR [rbx+0x30],rax
  42790a:	dec    DWORD PTR [rbx+0x104]
  427910:	mov    eax,ebp
  427912:	add    rsp,0x8
  427916:	pop    rbx
  427917:	pop    rbp
  427918:	ret    
  427919:	lea    rdi,[rip+0x2112b]        # 448a4b <flatcc_builder_padding_base@@Base+0x48b>
  427920:	lea    rsi,[rip+0x20edb]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  427927:	lea    rcx,[rip+0x21149]        # 448a77 <flatcc_builder_padding_base@@Base+0x4b7>
  42792e:	mov    edx,0x346
  427933:	call   4060f0 <__assert_fail@plt>
  427938:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000427940 <flatcc_builder_start_struct@@Base>:
  427940:	push   r15
  427942:	push   r14
  427944:	push   rbx
  427945:	mov    r14,rsi
  427948:	mov    rbx,rdi
  42794b:	mov    esi,edx
  42794d:	call   4276d0 <flatcc_builder_start_buffer@@Base+0xe0>
  427952:	test   eax,eax
  427954:	je     42795d <flatcc_builder_start_struct@@Base+0x1d>
  427956:	xor    eax,eax
  427958:	jmp    4279f1 <flatcc_builder_start_struct@@Base+0xb1>
  42795d:	mov    rdx,QWORD PTR [rbx+0x30]
  427961:	mov    WORD PTR [rdx+0xe],0x2
  427967:	mov    ecx,DWORD PTR [rbx+0x28]
  42796a:	mov    esi,DWORD PTR [rbx+0x70]
  42796d:	mov    rax,QWORD PTR [rbx+0x68]
  427971:	add    rax,rcx
  427974:	mov    QWORD PTR [rbx+0x18],rax
  427978:	sub    esi,ecx
  42797a:	cmp    esi,0xfffffffc
  42797d:	mov    edi,0xfffffffc
  427982:	cmovb  edi,esi
  427985:	mov    DWORD PTR [rbx+0x24],edi
  427988:	mov    DWORD PTR [rdx+0x4],0xfffffffc
  42798f:	mov    r15d,DWORD PTR [rbx+0x20]
  427993:	add    r14d,r15d
  427996:	mov    DWORD PTR [rbx+0x20],r14d
  42799a:	cmp    r14d,edi
  42799d:	jb     4279ee <flatcc_builder_start_struct@@Base+0xae>
  42799f:	inc    r14d
  4279a2:	lea    rsi,[rbx+0x68]
  4279a6:	mov    rdi,QWORD PTR [rbx+0x40]
  4279aa:	add    r14,rcx
  4279ad:	mov    rdx,r14
  4279b0:	mov    ecx,0x1
  4279b5:	mov    r8d,0x1
  4279bb:	call   QWORD PTR [rbx+0x50]
  4279be:	test   eax,eax
  4279c0:	jne    427956 <flatcc_builder_start_struct@@Base+0x16>
  4279c2:	mov    ecx,DWORD PTR [rbx+0x28]
  4279c5:	mov    rax,rcx
  4279c8:	add    rax,QWORD PTR [rbx+0x68]
  4279cc:	mov    QWORD PTR [rbx+0x18],rax
  4279d0:	mov    edx,DWORD PTR [rbx+0x70]
  4279d3:	sub    edx,ecx
  4279d5:	cmp    edx,0xfffffffc
  4279d8:	mov    ecx,0xfffffffc
  4279dd:	cmovb  ecx,edx
  4279e0:	mov    DWORD PTR [rbx+0x24],ecx
  4279e3:	mov    rcx,QWORD PTR [rbx+0x30]
  4279e7:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  4279ee:	add    rax,r15
  4279f1:	pop    rbx
  4279f2:	pop    r14
  4279f4:	pop    r15
  4279f6:	ret    
  4279f7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000427a00 <flatcc_builder_struct_edit@@Base>:
  427a00:	mov    rax,QWORD PTR [rdi+0x18]
  427a04:	ret    
  427a05:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427a0f:	nop

0000000000427a10 <flatcc_builder_end_struct@@Base>:
  427a10:	push   rbp
  427a11:	push   rbx
  427a12:	push   rax
  427a13:	mov    rax,QWORD PTR [rdi+0x30]
  427a17:	cmp    WORD PTR [rax+0xe],0x2
  427a1c:	jne    427aaf <flatcc_builder_end_struct@@Base+0x9f>
  427a22:	mov    rbx,rdi
  427a25:	mov    rsi,QWORD PTR [rdi+0x18]
  427a29:	mov    edx,DWORD PTR [rdi+0x20]
  427a2c:	movzx  ecx,WORD PTR [rdi+0xea]
  427a33:	call   4274b0 <flatcc_builder_create_struct@@Base>
  427a38:	mov    ebp,eax
  427a3a:	test   eax,eax
  427a3c:	je     427aa6 <flatcc_builder_end_struct@@Base+0x96>
  427a3e:	mov    rdi,QWORD PTR [rbx+0x18]
  427a42:	mov    edx,DWORD PTR [rbx+0x20]
  427a45:	xor    esi,esi
  427a47:	call   406100 <memset@plt>
  427a4c:	mov    rax,QWORD PTR [rbx+0x30]
  427a50:	mov    ecx,DWORD PTR [rax+0x8]
  427a53:	mov    DWORD PTR [rbx+0x20],ecx
  427a56:	mov    ecx,DWORD PTR [rax]
  427a58:	mov    DWORD PTR [rbx+0x28],ecx
  427a5b:	mov    edx,DWORD PTR [rax+0x4]
  427a5e:	mov    rsi,rcx
  427a61:	add    rsi,QWORD PTR [rbx+0x68]
  427a65:	mov    QWORD PTR [rbx+0x18],rsi
  427a69:	mov    esi,DWORD PTR [rbx+0x70]
  427a6c:	sub    esi,ecx
  427a6e:	cmp    esi,edx
  427a70:	cmova  esi,edx
  427a73:	mov    DWORD PTR [rbx+0x24],esi
  427a76:	movzx  ecx,WORD PTR [rbx+0xea]
  427a7d:	cmp    WORD PTR [rbx+0xe8],cx
  427a84:	jae    427a8d <flatcc_builder_end_struct@@Base+0x7d>
  427a86:	mov    WORD PTR [rbx+0xe8],cx
  427a8d:	movzx  ecx,WORD PTR [rax+0xc]
  427a91:	mov    WORD PTR [rbx+0xea],cx
  427a98:	add    rax,0xffffffffffffffdc
  427a9c:	mov    QWORD PTR [rbx+0x30],rax
  427aa0:	dec    DWORD PTR [rbx+0x104]
  427aa6:	mov    eax,ebp
  427aa8:	add    rsp,0x8
  427aac:	pop    rbx
  427aad:	pop    rbp
  427aae:	ret    
  427aaf:	lea    rdi,[rip+0x2101a]        # 448ad0 <flatcc_builder_padding_base@@Base+0x510>
  427ab6:	lea    rsi,[rip+0x20d45]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  427abd:	lea    rcx,[rip+0x21038]        # 448afc <flatcc_builder_padding_base@@Base+0x53c>
  427ac4:	mov    edx,0x368
  427ac9:	call   4060f0 <__assert_fail@plt>
  427ace:	xchg   ax,ax

0000000000427ad0 <flatcc_builder_extend_vector@@Base>:
  427ad0:	push   r14
  427ad2:	push   rbx
  427ad3:	push   rax
  427ad4:	mov    rax,QWORD PTR [rdi+0x30]
  427ad8:	mov    ecx,DWORD PTR [rax+0x14]
  427adb:	add    ecx,esi
  427add:	jb     427b6f <flatcc_builder_extend_vector@@Base+0x9f>
  427ae3:	cmp    ecx,DWORD PTR [rax+0x18]
  427ae6:	ja     427b6f <flatcc_builder_extend_vector@@Base+0x9f>
  427aec:	mov    rbx,rdi
  427aef:	mov    DWORD PTR [rax+0x14],ecx
  427af2:	mov    rax,QWORD PTR [rdi+0x30]
  427af6:	imul   esi,DWORD PTR [rax+0x10]
  427afa:	mov    r14d,DWORD PTR [rdi+0x20]
  427afe:	add    esi,r14d
  427b01:	mov    DWORD PTR [rdi+0x20],esi
  427b04:	cmp    esi,DWORD PTR [rdi+0x24]
  427b07:	jae    427b0f <flatcc_builder_extend_vector@@Base+0x3f>
  427b09:	mov    rax,QWORD PTR [rbx+0x18]
  427b0d:	jmp    427b64 <flatcc_builder_extend_vector@@Base+0x94>
  427b0f:	inc    esi
  427b11:	lea    rax,[rbx+0x68]
  427b15:	mov    rdi,QWORD PTR [rbx+0x40]
  427b19:	mov    edx,DWORD PTR [rbx+0x28]
  427b1c:	add    rdx,rsi
  427b1f:	mov    rsi,rax
  427b22:	mov    ecx,0x1
  427b27:	mov    r8d,0x1
  427b2d:	call   QWORD PTR [rbx+0x50]
  427b30:	test   eax,eax
  427b32:	je     427b38 <flatcc_builder_extend_vector@@Base+0x68>
  427b34:	xor    eax,eax
  427b36:	jmp    427b67 <flatcc_builder_extend_vector@@Base+0x97>
  427b38:	mov    ecx,DWORD PTR [rbx+0x28]
  427b3b:	mov    rax,rcx
  427b3e:	add    rax,QWORD PTR [rbx+0x68]
  427b42:	mov    QWORD PTR [rbx+0x18],rax
  427b46:	mov    edx,DWORD PTR [rbx+0x70]
  427b49:	sub    edx,ecx
  427b4b:	cmp    edx,0xfffffffc
  427b4e:	mov    ecx,0xfffffffc
  427b53:	cmovb  ecx,edx
  427b56:	mov    DWORD PTR [rbx+0x24],ecx
  427b59:	mov    rcx,QWORD PTR [rbx+0x30]
  427b5d:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  427b64:	add    rax,r14
  427b67:	add    rsp,0x8
  427b6b:	pop    rbx
  427b6c:	pop    r14
  427b6e:	ret    
  427b6f:	lea    rdi,[rip+0x21d55]        # 4498cb <flatcc_builder_padding_base@@Base+0x130b>
  427b76:	lea    rsi,[rip+0x20c85]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  427b7d:	lea    rcx,[rip+0x21d62]        # 4498e6 <flatcc_builder_padding_base@@Base+0x1326>
  427b84:	mov    edx,0x37c
  427b89:	call   4060f0 <__assert_fail@plt>
  427b8e:	xchg   ax,ax

0000000000427b90 <flatcc_builder_vector_push@@Base>:
  427b90:	push   r15
  427b92:	push   r14
  427b94:	push   r13
  427b96:	push   r12
  427b98:	push   rbx
  427b99:	mov    rax,QWORD PTR [rdi+0x30]
  427b9d:	cmp    WORD PTR [rax+0xe],0x4
  427ba2:	jne    427c55 <flatcc_builder_vector_push@@Base+0xc5>
  427ba8:	mov    ecx,DWORD PTR [rax+0x14]
  427bab:	cmp    ecx,DWORD PTR [rax+0x18]
  427bae:	ja     427c74 <flatcc_builder_vector_push@@Base+0xe4>
  427bb4:	mov    r14,rsi
  427bb7:	mov    rbx,rdi
  427bba:	inc    ecx
  427bbc:	mov    DWORD PTR [rax+0x14],ecx
  427bbf:	mov    rax,QWORD PTR [rdi+0x30]
  427bc3:	mov    r15d,DWORD PTR [rax+0x10]
  427bc7:	mov    r13d,DWORD PTR [rdi+0x20]
  427bcb:	lea    eax,[r15+r13*1]
  427bcf:	mov    DWORD PTR [rdi+0x20],eax
  427bd2:	cmp    eax,DWORD PTR [rdi+0x24]
  427bd5:	jae    427be2 <flatcc_builder_vector_push@@Base+0x52>
  427bd7:	mov    r12,QWORD PTR [rbx+0x18]
  427bdb:	add    r12,r13
  427bde:	jne    427c3a <flatcc_builder_vector_push@@Base+0xaa>
  427be0:	jmp    427c04 <flatcc_builder_vector_push@@Base+0x74>
  427be2:	inc    eax
  427be4:	lea    rsi,[rbx+0x68]
  427be8:	mov    rdi,QWORD PTR [rbx+0x40]
  427bec:	mov    edx,DWORD PTR [rbx+0x28]
  427bef:	add    rdx,rax
  427bf2:	mov    ecx,0x1
  427bf7:	mov    r8d,0x1
  427bfd:	call   QWORD PTR [rbx+0x50]
  427c00:	test   eax,eax
  427c02:	je     427c09 <flatcc_builder_vector_push@@Base+0x79>
  427c04:	xor    r12d,r12d
  427c07:	jmp    427c48 <flatcc_builder_vector_push@@Base+0xb8>
  427c09:	mov    eax,DWORD PTR [rbx+0x28]
  427c0c:	mov    r12,rax
  427c0f:	add    r12,QWORD PTR [rbx+0x68]
  427c13:	mov    QWORD PTR [rbx+0x18],r12
  427c17:	mov    ecx,DWORD PTR [rbx+0x70]
  427c1a:	sub    ecx,eax
  427c1c:	cmp    ecx,0xfffffffc
  427c1f:	mov    eax,0xfffffffc
  427c24:	cmovb  eax,ecx
  427c27:	mov    DWORD PTR [rbx+0x24],eax
  427c2a:	mov    rax,QWORD PTR [rbx+0x30]
  427c2e:	mov    DWORD PTR [rax+0x4],0xfffffffc
  427c35:	add    r12,r13
  427c38:	je     427c04 <flatcc_builder_vector_push@@Base+0x74>
  427c3a:	mov    rdi,r12
  427c3d:	mov    rsi,r14
  427c40:	mov    rdx,r15
  427c43:	call   406190 <memcpy@plt>
  427c48:	mov    rax,r12
  427c4b:	pop    rbx
  427c4c:	pop    r12
  427c4e:	pop    r13
  427c50:	pop    r14
  427c52:	pop    r15
  427c54:	ret    
  427c55:	lea    rdi,[rip+0x20ee3]        # 448b3f <flatcc_builder_padding_base@@Base+0x57f>
  427c5c:	lea    rsi,[rip+0x20b9f]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  427c63:	lea    rcx,[rip+0x20f01]        # 448b6b <flatcc_builder_padding_base@@Base+0x5ab>
  427c6a:	mov    edx,0x38b
  427c6f:	call   4060f0 <__assert_fail@plt>
  427c74:	lea    rdi,[rip+0x20f33]        # 448bae <flatcc_builder_padding_base@@Base+0x5ee>
  427c7b:	lea    rsi,[rip+0x20b80]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  427c82:	lea    rcx,[rip+0x20ee2]        # 448b6b <flatcc_builder_padding_base@@Base+0x5ab>
  427c89:	mov    edx,0x38c
  427c8e:	call   4060f0 <__assert_fail@plt>
  427c93:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427c9d:	nop    DWORD PTR [rax]

0000000000427ca0 <flatcc_builder_append_vector@@Base>:
  427ca0:	push   r15
  427ca2:	push   r14
  427ca4:	push   r13
  427ca6:	push   r12
  427ca8:	push   rbx
  427ca9:	mov    rax,QWORD PTR [rdi+0x30]
  427cad:	cmp    WORD PTR [rax+0xe],0x4
  427cb2:	jne    427d8f <flatcc_builder_append_vector@@Base+0xef>
  427cb8:	mov    r15,rdx
  427cbb:	mov    ecx,DWORD PTR [rax+0x14]
  427cbe:	add    ecx,r15d
  427cc1:	jb     427d70 <flatcc_builder_append_vector@@Base+0xd0>
  427cc7:	cmp    ecx,DWORD PTR [rax+0x18]
  427cca:	ja     427d70 <flatcc_builder_append_vector@@Base+0xd0>
  427cd0:	mov    r14,rsi
  427cd3:	mov    rbx,rdi
  427cd6:	mov    DWORD PTR [rax+0x14],ecx
  427cd9:	mov    rax,QWORD PTR [rdi+0x30]
  427cdd:	imul   r15d,DWORD PTR [rax+0x10]
  427ce2:	mov    r13d,DWORD PTR [rdi+0x20]
  427ce6:	lea    eax,[r15+r13*1]
  427cea:	mov    DWORD PTR [rdi+0x20],eax
  427ced:	cmp    eax,DWORD PTR [rdi+0x24]
  427cf0:	jae    427cfd <flatcc_builder_append_vector@@Base+0x5d>
  427cf2:	mov    r12,QWORD PTR [rbx+0x18]
  427cf6:	add    r12,r13
  427cf9:	jne    427d55 <flatcc_builder_append_vector@@Base+0xb5>
  427cfb:	jmp    427d1f <flatcc_builder_append_vector@@Base+0x7f>
  427cfd:	inc    eax
  427cff:	lea    rsi,[rbx+0x68]
  427d03:	mov    rdi,QWORD PTR [rbx+0x40]
  427d07:	mov    edx,DWORD PTR [rbx+0x28]
  427d0a:	add    rdx,rax
  427d0d:	mov    ecx,0x1
  427d12:	mov    r8d,0x1
  427d18:	call   QWORD PTR [rbx+0x50]
  427d1b:	test   eax,eax
  427d1d:	je     427d24 <flatcc_builder_append_vector@@Base+0x84>
  427d1f:	xor    r12d,r12d
  427d22:	jmp    427d63 <flatcc_builder_append_vector@@Base+0xc3>
  427d24:	mov    eax,DWORD PTR [rbx+0x28]
  427d27:	mov    r12,rax
  427d2a:	add    r12,QWORD PTR [rbx+0x68]
  427d2e:	mov    QWORD PTR [rbx+0x18],r12
  427d32:	mov    ecx,DWORD PTR [rbx+0x70]
  427d35:	sub    ecx,eax
  427d37:	cmp    ecx,0xfffffffc
  427d3a:	mov    eax,0xfffffffc
  427d3f:	cmovb  eax,ecx
  427d42:	mov    DWORD PTR [rbx+0x24],eax
  427d45:	mov    rax,QWORD PTR [rbx+0x30]
  427d49:	mov    DWORD PTR [rax+0x4],0xfffffffc
  427d50:	add    r12,r13
  427d53:	je     427d1f <flatcc_builder_append_vector@@Base+0x7f>
  427d55:	mov    edx,r15d
  427d58:	mov    rdi,r12
  427d5b:	mov    rsi,r14
  427d5e:	call   406190 <memcpy@plt>
  427d63:	mov    rax,r12
  427d66:	pop    rbx
  427d67:	pop    r12
  427d69:	pop    r13
  427d6b:	pop    r14
  427d6d:	pop    r15
  427d6f:	ret    
  427d70:	lea    rdi,[rip+0x21b54]        # 4498cb <flatcc_builder_padding_base@@Base+0x130b>
  427d77:	lea    rsi,[rip+0x20a84]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  427d7e:	lea    rcx,[rip+0x21b61]        # 4498e6 <flatcc_builder_padding_base@@Base+0x1326>
  427d85:	mov    edx,0x37c
  427d8a:	call   4060f0 <__assert_fail@plt>
  427d8f:	lea    rdi,[rip+0x20da9]        # 448b3f <flatcc_builder_padding_base@@Base+0x57f>
  427d96:	lea    rsi,[rip+0x20a65]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  427d9d:	lea    rcx,[rip+0x20e47]        # 448beb <flatcc_builder_padding_base@@Base+0x62b>
  427da4:	mov    edx,0x393
  427da9:	call   4060f0 <__assert_fail@plt>
  427dae:	xchg   ax,ax

0000000000427db0 <flatcc_builder_extend_offset_vector@@Base>:
  427db0:	push   r14
  427db2:	push   rbx
  427db3:	push   rax
  427db4:	mov    rax,QWORD PTR [rdi+0x30]
  427db8:	mov    ecx,DWORD PTR [rax+0x14]
  427dbb:	add    ecx,esi
  427dbd:	jb     427e44 <flatcc_builder_extend_offset_vector@@Base+0x94>
  427dc3:	cmp    ecx,0x40000000
  427dc9:	jae    427e44 <flatcc_builder_extend_offset_vector@@Base+0x94>
  427dcb:	mov    rbx,rdi
  427dce:	mov    DWORD PTR [rax+0x14],ecx
  427dd1:	mov    r14d,DWORD PTR [rdi+0x20]
  427dd5:	lea    eax,[r14+rsi*4]
  427dd9:	mov    DWORD PTR [rdi+0x20],eax
  427ddc:	cmp    eax,DWORD PTR [rdi+0x24]
  427ddf:	jae    427de7 <flatcc_builder_extend_offset_vector@@Base+0x37>
  427de1:	mov    rax,QWORD PTR [rbx+0x18]
  427de5:	jmp    427e39 <flatcc_builder_extend_offset_vector@@Base+0x89>
  427de7:	inc    eax
  427de9:	lea    rsi,[rbx+0x68]
  427ded:	mov    rdi,QWORD PTR [rbx+0x40]
  427df1:	mov    edx,DWORD PTR [rbx+0x28]
  427df4:	add    rdx,rax
  427df7:	mov    ecx,0x1
  427dfc:	mov    r8d,0x1
  427e02:	call   QWORD PTR [rbx+0x50]
  427e05:	test   eax,eax
  427e07:	je     427e0d <flatcc_builder_extend_offset_vector@@Base+0x5d>
  427e09:	xor    eax,eax
  427e0b:	jmp    427e3c <flatcc_builder_extend_offset_vector@@Base+0x8c>
  427e0d:	mov    ecx,DWORD PTR [rbx+0x28]
  427e10:	mov    rax,rcx
  427e13:	add    rax,QWORD PTR [rbx+0x68]
  427e17:	mov    QWORD PTR [rbx+0x18],rax
  427e1b:	mov    edx,DWORD PTR [rbx+0x70]
  427e1e:	sub    edx,ecx
  427e20:	cmp    edx,0xfffffffc
  427e23:	mov    ecx,0xfffffffc
  427e28:	cmovb  ecx,edx
  427e2b:	mov    DWORD PTR [rbx+0x24],ecx
  427e2e:	mov    rcx,QWORD PTR [rbx+0x30]
  427e32:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  427e39:	add    rax,r14
  427e3c:	add    rsp,0x8
  427e40:	pop    rbx
  427e41:	pop    r14
  427e43:	ret    
  427e44:	lea    rdi,[rip+0x21a80]        # 4498cb <flatcc_builder_padding_base@@Base+0x130b>
  427e4b:	lea    rsi,[rip+0x209b0]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  427e52:	lea    rcx,[rip+0x21a8d]        # 4498e6 <flatcc_builder_padding_base@@Base+0x1326>
  427e59:	mov    edx,0x37c
  427e5e:	call   4060f0 <__assert_fail@plt>
  427e63:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427e6d:	nop    DWORD PTR [rax]

0000000000427e70 <flatcc_builder_offset_vector_push@@Base>:
  427e70:	push   rbp
  427e71:	push   r14
  427e73:	push   rbx
  427e74:	mov    rax,QWORD PTR [rdi+0x30]
  427e78:	cmp    WORD PTR [rax+0xe],0x5
  427e7d:	jne    427f12 <flatcc_builder_offset_vector_push@@Base+0xa2>
  427e83:	mov    ecx,DWORD PTR [rax+0x14]
  427e86:	cmp    ecx,0x3fffffff
  427e8c:	je     427ed5 <flatcc_builder_offset_vector_push@@Base+0x65>
  427e8e:	mov    r14d,esi
  427e91:	mov    rbx,rdi
  427e94:	inc    ecx
  427e96:	mov    DWORD PTR [rax+0x14],ecx
  427e99:	mov    ebp,DWORD PTR [rdi+0x20]
  427e9c:	lea    eax,[rbp+0x4]
  427e9f:	mov    DWORD PTR [rdi+0x20],eax
  427ea2:	cmp    eax,DWORD PTR [rdi+0x24]
  427ea5:	jae    427eb2 <flatcc_builder_offset_vector_push@@Base+0x42>
  427ea7:	mov    rax,QWORD PTR [rbx+0x18]
  427eab:	add    rax,rbp
  427eae:	jne    427f0a <flatcc_builder_offset_vector_push@@Base+0x9a>
  427eb0:	jmp    427ed5 <flatcc_builder_offset_vector_push@@Base+0x65>
  427eb2:	lea    eax,[rbp+0x5]
  427eb5:	lea    rsi,[rbx+0x68]
  427eb9:	mov    rdi,QWORD PTR [rbx+0x40]
  427ebd:	mov    edx,DWORD PTR [rbx+0x28]
  427ec0:	add    rdx,rax
  427ec3:	mov    ecx,0x1
  427ec8:	mov    r8d,0x1
  427ece:	call   QWORD PTR [rbx+0x50]
  427ed1:	test   eax,eax
  427ed3:	je     427ed9 <flatcc_builder_offset_vector_push@@Base+0x69>
  427ed5:	xor    eax,eax
  427ed7:	jmp    427f0d <flatcc_builder_offset_vector_push@@Base+0x9d>
  427ed9:	mov    ecx,DWORD PTR [rbx+0x28]
  427edc:	mov    rax,rcx
  427edf:	add    rax,QWORD PTR [rbx+0x68]
  427ee3:	mov    QWORD PTR [rbx+0x18],rax
  427ee7:	mov    edx,DWORD PTR [rbx+0x70]
  427eea:	sub    edx,ecx
  427eec:	cmp    edx,0xfffffffc
  427eef:	mov    ecx,0xfffffffc
  427ef4:	cmovb  ecx,edx
  427ef7:	mov    DWORD PTR [rbx+0x24],ecx
  427efa:	mov    rcx,QWORD PTR [rbx+0x30]
  427efe:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  427f05:	add    rax,rbp
  427f08:	je     427ed5 <flatcc_builder_offset_vector_push@@Base+0x65>
  427f0a:	mov    DWORD PTR [rax],r14d
  427f0d:	pop    rbx
  427f0e:	pop    r14
  427f10:	pop    rbp
  427f11:	ret    
  427f12:	lea    rdi,[rip+0x20d1f]        # 448c38 <flatcc_builder_padding_base@@Base+0x678>
  427f19:	lea    rsi,[rip+0x208e2]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  427f20:	lea    rcx,[rip+0x20d44]        # 448c6b <flatcc_builder_padding_base@@Base+0x6ab>
  427f27:	mov    edx,0x3a6
  427f2c:	call   4060f0 <__assert_fail@plt>
  427f31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  427f3b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000427f40 <flatcc_builder_append_offset_vector@@Base>:
  427f40:	push   r15
  427f42:	push   r14
  427f44:	push   r13
  427f46:	push   r12
  427f48:	push   rbx
  427f49:	mov    rax,QWORD PTR [rdi+0x30]
  427f4d:	cmp    WORD PTR [rax+0xe],0x5
  427f52:	jne    42802e <flatcc_builder_append_offset_vector@@Base+0xee>
  427f58:	mov    r15,rdx
  427f5b:	mov    ecx,DWORD PTR [rax+0x14]
  427f5e:	add    ecx,r15d
  427f61:	jb     42800f <flatcc_builder_append_offset_vector@@Base+0xcf>
  427f67:	cmp    ecx,0x40000000
  427f6d:	jae    42800f <flatcc_builder_append_offset_vector@@Base+0xcf>
  427f73:	mov    r14,rsi
  427f76:	mov    rbx,rdi
  427f79:	mov    DWORD PTR [rax+0x14],ecx
  427f7c:	mov    r13d,DWORD PTR [rdi+0x20]
  427f80:	lea    eax,[r13+r15*4+0x0]
  427f85:	mov    DWORD PTR [rdi+0x20],eax
  427f88:	cmp    eax,DWORD PTR [rdi+0x24]
  427f8b:	jae    427f98 <flatcc_builder_append_offset_vector@@Base+0x58>
  427f8d:	mov    r12,QWORD PTR [rbx+0x18]
  427f91:	add    r12,r13
  427f94:	jne    427ff0 <flatcc_builder_append_offset_vector@@Base+0xb0>
  427f96:	jmp    427fba <flatcc_builder_append_offset_vector@@Base+0x7a>
  427f98:	inc    eax
  427f9a:	lea    rsi,[rbx+0x68]
  427f9e:	mov    rdi,QWORD PTR [rbx+0x40]
  427fa2:	mov    edx,DWORD PTR [rbx+0x28]
  427fa5:	add    rdx,rax
  427fa8:	mov    ecx,0x1
  427fad:	mov    r8d,0x1
  427fb3:	call   QWORD PTR [rbx+0x50]
  427fb6:	test   eax,eax
  427fb8:	je     427fbf <flatcc_builder_append_offset_vector@@Base+0x7f>
  427fba:	xor    r12d,r12d
  427fbd:	jmp    428002 <flatcc_builder_append_offset_vector@@Base+0xc2>
  427fbf:	mov    eax,DWORD PTR [rbx+0x28]
  427fc2:	mov    r12,rax
  427fc5:	add    r12,QWORD PTR [rbx+0x68]
  427fc9:	mov    QWORD PTR [rbx+0x18],r12
  427fcd:	mov    ecx,DWORD PTR [rbx+0x70]
  427fd0:	sub    ecx,eax
  427fd2:	cmp    ecx,0xfffffffc
  427fd5:	mov    eax,0xfffffffc
  427fda:	cmovb  eax,ecx
  427fdd:	mov    DWORD PTR [rbx+0x24],eax
  427fe0:	mov    rax,QWORD PTR [rbx+0x30]
  427fe4:	mov    DWORD PTR [rax+0x4],0xfffffffc
  427feb:	add    r12,r13
  427fee:	je     427fba <flatcc_builder_append_offset_vector@@Base+0x7a>
  427ff0:	shl    r15d,0x2
  427ff4:	mov    edx,r15d
  427ff7:	mov    rdi,r12
  427ffa:	mov    rsi,r14
  427ffd:	call   406190 <memcpy@plt>
  428002:	mov    rax,r12
  428005:	pop    rbx
  428006:	pop    r12
  428008:	pop    r13
  42800a:	pop    r14
  42800c:	pop    r15
  42800e:	ret    
  42800f:	lea    rdi,[rip+0x218b5]        # 4498cb <flatcc_builder_padding_base@@Base+0x130b>
  428016:	lea    rsi,[rip+0x207e5]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  42801d:	lea    rcx,[rip+0x218c2]        # 4498e6 <flatcc_builder_padding_base@@Base+0x1326>
  428024:	mov    edx,0x37c
  428029:	call   4060f0 <__assert_fail@plt>
  42802e:	lea    rdi,[rip+0x20c03]        # 448c38 <flatcc_builder_padding_base@@Base+0x678>
  428035:	lea    rsi,[rip+0x207c6]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  42803c:	lea    rcx,[rip+0x20c8a]        # 448ccd <flatcc_builder_padding_base@@Base+0x70d>
  428043:	mov    edx,0x3b4
  428048:	call   4060f0 <__assert_fail@plt>
  42804d:	nop    DWORD PTR [rax]

0000000000428050 <flatcc_builder_extend_string@@Base>:
  428050:	push   r14
  428052:	push   rbx
  428053:	push   rax
  428054:	mov    rax,QWORD PTR [rdi+0x30]
  428058:	cmp    WORD PTR [rax+0xe],0x6
  42805d:	jne    4280e9 <flatcc_builder_extend_string@@Base+0x99>
  428063:	mov    ecx,DWORD PTR [rax+0x14]
  428066:	add    ecx,esi
  428068:	jb     428108 <flatcc_builder_extend_string@@Base+0xb8>
  42806e:	mov    rbx,rdi
  428071:	mov    DWORD PTR [rax+0x14],ecx
  428074:	mov    r14d,DWORD PTR [rdi+0x20]
  428078:	add    esi,r14d
  42807b:	mov    DWORD PTR [rdi+0x20],esi
  42807e:	cmp    esi,DWORD PTR [rdi+0x24]
  428081:	jae    428089 <flatcc_builder_extend_string@@Base+0x39>
  428083:	mov    rax,QWORD PTR [rbx+0x18]
  428087:	jmp    4280de <flatcc_builder_extend_string@@Base+0x8e>
  428089:	inc    esi
  42808b:	lea    rax,[rbx+0x68]
  42808f:	mov    rdi,QWORD PTR [rbx+0x40]
  428093:	mov    edx,DWORD PTR [rbx+0x28]
  428096:	add    rdx,rsi
  428099:	mov    rsi,rax
  42809c:	mov    ecx,0x1
  4280a1:	mov    r8d,0x1
  4280a7:	call   QWORD PTR [rbx+0x50]
  4280aa:	test   eax,eax
  4280ac:	je     4280b2 <flatcc_builder_extend_string@@Base+0x62>
  4280ae:	xor    eax,eax
  4280b0:	jmp    4280e1 <flatcc_builder_extend_string@@Base+0x91>
  4280b2:	mov    ecx,DWORD PTR [rbx+0x28]
  4280b5:	mov    rax,rcx
  4280b8:	add    rax,QWORD PTR [rbx+0x68]
  4280bc:	mov    QWORD PTR [rbx+0x18],rax
  4280c0:	mov    edx,DWORD PTR [rbx+0x70]
  4280c3:	sub    edx,ecx
  4280c5:	cmp    edx,0xfffffffc
  4280c8:	mov    ecx,0xfffffffc
  4280cd:	cmovb  ecx,edx
  4280d0:	mov    DWORD PTR [rbx+0x24],ecx
  4280d3:	mov    rcx,QWORD PTR [rbx+0x30]
  4280d7:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  4280de:	add    rax,r14
  4280e1:	add    rsp,0x8
  4280e5:	pop    rbx
  4280e6:	pop    r14
  4280e8:	ret    
  4280e9:	lea    rdi,[rip+0x20c51]        # 448d41 <flatcc_builder_padding_base@@Base+0x781>
  4280f0:	lea    rsi,[rip+0x2070b]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  4280f7:	lea    rcx,[rip+0x20c6f]        # 448d6d <flatcc_builder_padding_base@@Base+0x7ad>
  4280fe:	mov    edx,0x3bd
  428103:	call   4060f0 <__assert_fail@plt>
  428108:	lea    rdi,[rip+0x217bc]        # 4498cb <flatcc_builder_padding_base@@Base+0x130b>
  42810f:	lea    rsi,[rip+0x206ec]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  428116:	lea    rcx,[rip+0x217c9]        # 4498e6 <flatcc_builder_padding_base@@Base+0x1326>
  42811d:	mov    edx,0x37c
  428122:	call   4060f0 <__assert_fail@plt>
  428127:	nop    WORD PTR [rax+rax*1+0x0]

0000000000428130 <flatcc_builder_append_string@@Base>:
  428130:	push   r15
  428132:	push   r14
  428134:	push   r13
  428136:	push   r12
  428138:	push   rbx
  428139:	mov    rax,QWORD PTR [rdi+0x30]
  42813d:	cmp    WORD PTR [rax+0xe],0x6
  428142:	jne    4281ee <flatcc_builder_append_string@@Base+0xbe>
  428148:	mov    r15,rdx
  42814b:	mov    ecx,DWORD PTR [rax+0x14]
  42814e:	add    ecx,r15d
  428151:	jb     42820d <flatcc_builder_append_string@@Base+0xdd>
  428157:	mov    r14,rsi
  42815a:	mov    rbx,rdi
  42815d:	mov    DWORD PTR [rax+0x14],ecx
  428160:	mov    r13d,DWORD PTR [rdi+0x20]
  428164:	lea    eax,[r15+r13*1]
  428168:	mov    DWORD PTR [rdi+0x20],eax
  42816b:	cmp    eax,DWORD PTR [rdi+0x24]
  42816e:	jae    42817b <flatcc_builder_append_string@@Base+0x4b>
  428170:	mov    r12,QWORD PTR [rbx+0x18]
  428174:	add    r12,r13
  428177:	jne    4281d3 <flatcc_builder_append_string@@Base+0xa3>
  428179:	jmp    42819d <flatcc_builder_append_string@@Base+0x6d>
  42817b:	inc    eax
  42817d:	lea    rsi,[rbx+0x68]
  428181:	mov    rdi,QWORD PTR [rbx+0x40]
  428185:	mov    edx,DWORD PTR [rbx+0x28]
  428188:	add    rdx,rax
  42818b:	mov    ecx,0x1
  428190:	mov    r8d,0x1
  428196:	call   QWORD PTR [rbx+0x50]
  428199:	test   eax,eax
  42819b:	je     4281a2 <flatcc_builder_append_string@@Base+0x72>
  42819d:	xor    r12d,r12d
  4281a0:	jmp    4281e1 <flatcc_builder_append_string@@Base+0xb1>
  4281a2:	mov    eax,DWORD PTR [rbx+0x28]
  4281a5:	mov    r12,rax
  4281a8:	add    r12,QWORD PTR [rbx+0x68]
  4281ac:	mov    QWORD PTR [rbx+0x18],r12
  4281b0:	mov    ecx,DWORD PTR [rbx+0x70]
  4281b3:	sub    ecx,eax
  4281b5:	cmp    ecx,0xfffffffc
  4281b8:	mov    eax,0xfffffffc
  4281bd:	cmovb  eax,ecx
  4281c0:	mov    DWORD PTR [rbx+0x24],eax
  4281c3:	mov    rax,QWORD PTR [rbx+0x30]
  4281c7:	mov    DWORD PTR [rax+0x4],0xfffffffc
  4281ce:	add    r12,r13
  4281d1:	je     42819d <flatcc_builder_append_string@@Base+0x6d>
  4281d3:	mov    edx,r15d
  4281d6:	mov    rdi,r12
  4281d9:	mov    rsi,r14
  4281dc:	call   406190 <memcpy@plt>
  4281e1:	mov    rax,r12
  4281e4:	pop    rbx
  4281e5:	pop    r12
  4281e7:	pop    r13
  4281e9:	pop    r14
  4281eb:	pop    r15
  4281ed:	ret    
  4281ee:	lea    rdi,[rip+0x20b4c]        # 448d41 <flatcc_builder_padding_base@@Base+0x781>
  4281f5:	lea    rsi,[rip+0x20606]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  4281fc:	lea    rcx,[rip+0x20ba9]        # 448dac <flatcc_builder_padding_base@@Base+0x7ec>
  428203:	mov    edx,0x3c6
  428208:	call   4060f0 <__assert_fail@plt>
  42820d:	lea    rdi,[rip+0x216b7]        # 4498cb <flatcc_builder_padding_base@@Base+0x130b>
  428214:	lea    rsi,[rip+0x205e7]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  42821b:	lea    rcx,[rip+0x216c4]        # 4498e6 <flatcc_builder_padding_base@@Base+0x1326>
  428222:	mov    edx,0x37c
  428227:	call   4060f0 <__assert_fail@plt>
  42822c:	nop    DWORD PTR [rax+0x0]

0000000000428230 <flatcc_builder_append_string_str@@Base>:
  428230:	push   r14
  428232:	push   rbx
  428233:	push   rax
  428234:	mov    rbx,rsi
  428237:	mov    r14,rdi
  42823a:	mov    rdi,rsi
  42823d:	call   4060d0 <strlen@plt>
  428242:	mov    rdi,r14
  428245:	mov    rsi,rbx
  428248:	mov    rdx,rax
  42824b:	add    rsp,0x8
  42824f:	pop    rbx
  428250:	pop    r14
  428252:	jmp    428130 <flatcc_builder_append_string@@Base>
  428257:	nop    WORD PTR [rax+rax*1+0x0]

0000000000428260 <flatcc_builder_append_string_strn@@Base>:
  428260:	push   r15
  428262:	push   r14
  428264:	push   rbx
  428265:	mov    rbx,rdx
  428268:	mov    r14,rsi
  42826b:	mov    r15,rdi
  42826e:	mov    rdi,rsi
  428271:	xor    esi,esi
  428273:	call   406120 <memchr@plt>
  428278:	mov    rcx,rax
  42827b:	sub    rcx,r14
  42827e:	test   rax,rax
  428281:	cmovne rbx,rcx
  428285:	mov    rdi,r15
  428288:	mov    rsi,r14
  42828b:	mov    rdx,rbx
  42828e:	pop    rbx
  42828f:	pop    r14
  428291:	pop    r15
  428293:	jmp    428130 <flatcc_builder_append_string@@Base>
  428298:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004282a0 <flatcc_builder_truncate_vector@@Base>:
  4282a0:	push   rax
  4282a1:	mov    rax,QWORD PTR [rdi+0x30]
  4282a5:	cmp    WORD PTR [rax+0xe],0x4
  4282aa:	jne    4282de <flatcc_builder_truncate_vector@@Base+0x3e>
  4282ac:	mov    rdx,rsi
  4282af:	mov    ecx,DWORD PTR [rax+0x14]
  4282b2:	cmp    rcx,rsi
  4282b5:	jb     4282fd <flatcc_builder_truncate_vector@@Base+0x5d>
  4282b7:	sub    ecx,edx
  4282b9:	mov    DWORD PTR [rax+0x14],ecx
  4282bc:	mov    rax,QWORD PTR [rdi+0x30]
  4282c0:	imul   edx,DWORD PTR [rax+0x10]
  4282c4:	mov    eax,DWORD PTR [rdi+0x20]
  4282c7:	sub    eax,edx
  4282c9:	mov    DWORD PTR [rdi+0x20],eax
  4282cc:	add    rax,QWORD PTR [rdi+0x18]
  4282d0:	mov    rdi,rax
  4282d3:	xor    esi,esi
  4282d5:	call   406100 <memset@plt>
  4282da:	xor    eax,eax
  4282dc:	pop    rcx
  4282dd:	ret    
  4282de:	lea    rdi,[rip+0x2085a]        # 448b3f <flatcc_builder_padding_base@@Base+0x57f>
  4282e5:	lea    rsi,[rip+0x20516]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  4282ec:	lea    rcx,[rip+0x20b06]        # 448df9 <flatcc_builder_padding_base@@Base+0x839>
  4282f3:	mov    edx,0x3d9
  4282f8:	call   4060f0 <__assert_fail@plt>
  4282fd:	lea    rdi,[rip+0x20b34]        # 448e38 <flatcc_builder_padding_base@@Base+0x878>
  428304:	lea    rsi,[rip+0x204f7]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  42830b:	lea    rcx,[rip+0x20ae7]        # 448df9 <flatcc_builder_padding_base@@Base+0x839>
  428312:	mov    edx,0x3da
  428317:	call   4060f0 <__assert_fail@plt>
  42831c:	nop    DWORD PTR [rax+0x0]

0000000000428320 <flatcc_builder_truncate_offset_vector@@Base>:
  428320:	push   rax
  428321:	mov    rax,QWORD PTR [rdi+0x30]
  428325:	cmp    WORD PTR [rax+0xe],0x5
  42832a:	jne    42835b <flatcc_builder_truncate_offset_vector@@Base+0x3b>
  42832c:	mov    rdx,rsi
  42832f:	mov    ecx,DWORD PTR [rax+0x14]
  428332:	sub    ecx,edx
  428334:	jb     42837a <flatcc_builder_truncate_offset_vector@@Base+0x5a>
  428336:	mov    DWORD PTR [rax+0x14],ecx
  428339:	mov    rax,QWORD PTR [rdi+0x30]
  42833d:	imul   edx,DWORD PTR [rax+0x10]
  428341:	mov    eax,DWORD PTR [rdi+0x20]
  428344:	sub    eax,edx
  428346:	mov    DWORD PTR [rdi+0x20],eax
  428349:	add    rax,QWORD PTR [rdi+0x18]
  42834d:	mov    rdi,rax
  428350:	xor    esi,esi
  428352:	call   406100 <memset@plt>
  428357:	xor    eax,eax
  428359:	pop    rcx
  42835a:	ret    
  42835b:	lea    rdi,[rip+0x208d6]        # 448c38 <flatcc_builder_padding_base@@Base+0x678>
  428362:	lea    rsi,[rip+0x20499]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  428369:	lea    rcx,[rip+0x20aec]        # 448e5c <flatcc_builder_padding_base@@Base+0x89c>
  428370:	mov    edx,0x3e2
  428375:	call   4060f0 <__assert_fail@plt>
  42837a:	lea    rdi,[rip+0x20b21]        # 448ea2 <flatcc_builder_padding_base@@Base+0x8e2>
  428381:	lea    rsi,[rip+0x2047a]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  428388:	lea    rcx,[rip+0x20acd]        # 448e5c <flatcc_builder_padding_base@@Base+0x89c>
  42838f:	mov    edx,0x3e3
  428394:	call   4060f0 <__assert_fail@plt>
  428399:	nop    DWORD PTR [rax+0x0]

00000000004283a0 <flatcc_builder_truncate_string@@Base>:
  4283a0:	push   rax
  4283a1:	mov    rax,QWORD PTR [rdi+0x30]
  4283a5:	cmp    WORD PTR [rax+0xe],0x6
  4283aa:	jne    4283d5 <flatcc_builder_truncate_string@@Base+0x35>
  4283ac:	mov    ecx,DWORD PTR [rax+0x14]
  4283af:	cmp    rcx,rsi
  4283b2:	jb     4283f4 <flatcc_builder_truncate_string@@Base+0x54>
  4283b4:	sub    ecx,esi
  4283b6:	mov    DWORD PTR [rax+0x14],ecx
  4283b9:	mov    eax,DWORD PTR [rdi+0x20]
  4283bc:	sub    eax,esi
  4283be:	mov    DWORD PTR [rdi+0x20],eax
  4283c1:	add    rax,QWORD PTR [rdi+0x18]
  4283c5:	mov    edx,esi
  4283c7:	mov    rdi,rax
  4283ca:	xor    esi,esi
  4283cc:	call   406100 <memset@plt>
  4283d1:	xor    eax,eax
  4283d3:	pop    rcx
  4283d4:	ret    
  4283d5:	lea    rdi,[rip+0x20965]        # 448d41 <flatcc_builder_padding_base@@Base+0x781>
  4283dc:	lea    rsi,[rip+0x2041f]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  4283e3:	lea    rcx,[rip+0x20af3]        # 448edd <flatcc_builder_padding_base@@Base+0x91d>
  4283ea:	mov    edx,0x3eb
  4283ef:	call   4060f0 <__assert_fail@plt>
  4283f4:	lea    rdi,[rip+0x20b21]        # 448f1c <flatcc_builder_padding_base@@Base+0x95c>
  4283fb:	lea    rsi,[rip+0x20400]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  428402:	lea    rcx,[rip+0x20ad4]        # 448edd <flatcc_builder_padding_base@@Base+0x91d>
  428409:	mov    edx,0x3ec
  42840e:	call   4060f0 <__assert_fail@plt>
  428413:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42841d:	nop    DWORD PTR [rax]

0000000000428420 <flatcc_builder_start_vector@@Base>:
  428420:	push   r15
  428422:	push   r14
  428424:	push   rbx
  428425:	mov    r14,rcx
  428428:	mov    r15,rsi
  42842b:	mov    rbx,rdi
  42842e:	cmp    dx,0x4
  428432:	mov    esi,0x4
  428437:	cmova  esi,edx
  42843a:	call   4276d0 <flatcc_builder_start_buffer@@Base+0xe0>
  42843f:	mov    ecx,eax
  428441:	mov    eax,0xffffffff
  428446:	test   ecx,ecx
  428448:	jne    428496 <flatcc_builder_start_vector@@Base+0x76>
  42844a:	mov    rax,QWORD PTR [rbx+0x30]
  42844e:	mov    DWORD PTR [rax+0x10],r15d
  428452:	mov    rax,QWORD PTR [rbx+0x30]
  428456:	mov    DWORD PTR [rax+0x14],0x0
  42845d:	mov    rax,QWORD PTR [rbx+0x30]
  428461:	mov    DWORD PTR [rax+0x18],r14d
  428465:	mov    rax,QWORD PTR [rbx+0x30]
  428469:	mov    WORD PTR [rax+0xe],0x4
  42846f:	mov    ecx,DWORD PTR [rbx+0x28]
  428472:	mov    edx,DWORD PTR [rbx+0x70]
  428475:	sub    edx,ecx
  428477:	add    rcx,QWORD PTR [rbx+0x68]
  42847b:	mov    QWORD PTR [rbx+0x18],rcx
  42847f:	cmp    edx,0xfffffffc
  428482:	mov    ecx,0xfffffffc
  428487:	cmovb  ecx,edx
  42848a:	mov    DWORD PTR [rbx+0x24],ecx
  42848d:	mov    DWORD PTR [rax+0x4],0xfffffffc
  428494:	xor    eax,eax
  428496:	pop    rbx
  428497:	pop    r14
  428499:	pop    r15
  42849b:	ret    
  42849c:	nop    DWORD PTR [rax+0x0]

00000000004284a0 <flatcc_builder_start_offset_vector@@Base>:
  4284a0:	push   rbx
  4284a1:	mov    rbx,rdi
  4284a4:	mov    esi,0x4
  4284a9:	call   4276d0 <flatcc_builder_start_buffer@@Base+0xe0>
  4284ae:	mov    ecx,eax
  4284b0:	mov    eax,0xffffffff
  4284b5:	test   ecx,ecx
  4284b7:	je     4284bb <flatcc_builder_start_offset_vector@@Base+0x1b>
  4284b9:	pop    rbx
  4284ba:	ret    
  4284bb:	mov    rax,QWORD PTR [rbx+0x30]
  4284bf:	mov    DWORD PTR [rax+0x10],0x4
  4284c6:	mov    rax,QWORD PTR [rbx+0x30]
  4284ca:	mov    DWORD PTR [rax+0x14],0x0
  4284d1:	mov    rax,QWORD PTR [rbx+0x30]
  4284d5:	mov    WORD PTR [rax+0xe],0x5
  4284db:	mov    ecx,DWORD PTR [rbx+0x28]
  4284de:	mov    edx,DWORD PTR [rbx+0x70]
  4284e1:	sub    edx,ecx
  4284e3:	add    rcx,QWORD PTR [rbx+0x68]
  4284e7:	mov    QWORD PTR [rbx+0x18],rcx
  4284eb:	cmp    edx,0xfffffffc
  4284ee:	mov    ecx,0xfffffffc
  4284f3:	cmovb  ecx,edx
  4284f6:	mov    DWORD PTR [rbx+0x24],ecx
  4284f9:	mov    DWORD PTR [rax+0x4],0xfffffffc
  428500:	xor    eax,eax
  428502:	pop    rbx
  428503:	ret    
  428504:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42850e:	xchg   ax,ax

0000000000428510 <flatcc_builder_create_offset_vector@@Base>:
  428510:	push   r15
  428512:	push   r14
  428514:	push   r12
  428516:	push   rbx
  428517:	push   rax
  428518:	mov    r14,rdx
  42851b:	mov    r15,rsi
  42851e:	mov    rbx,rdi
  428521:	mov    esi,0x4
  428526:	call   4276d0 <flatcc_builder_start_buffer@@Base+0xe0>
  42852b:	test   eax,eax
  42852d:	je     42853d <flatcc_builder_create_offset_vector@@Base+0x2d>
  42852f:	xor    eax,eax
  428531:	add    rsp,0x8
  428535:	pop    rbx
  428536:	pop    r12
  428538:	pop    r14
  42853a:	pop    r15
  42853c:	ret    
  42853d:	mov    rax,QWORD PTR [rbx+0x30]
  428541:	mov    DWORD PTR [rax+0x10],0x4
  428548:	mov    rax,QWORD PTR [rbx+0x30]
  42854c:	mov    DWORD PTR [rax+0x14],0x0
  428553:	mov    rax,QWORD PTR [rbx+0x30]
  428557:	mov    WORD PTR [rax+0xe],0x5
  42855d:	mov    ecx,DWORD PTR [rbx+0x28]
  428560:	mov    edx,DWORD PTR [rbx+0x70]
  428563:	sub    edx,ecx
  428565:	add    rcx,QWORD PTR [rbx+0x68]
  428569:	mov    QWORD PTR [rbx+0x18],rcx
  42856d:	cmp    edx,0xfffffffc
  428570:	mov    ecx,0xfffffffc
  428575:	cmovb  ecx,edx
  428578:	mov    DWORD PTR [rbx+0x24],ecx
  42857b:	mov    DWORD PTR [rax+0x4],0xfffffffc
  428582:	mov    ecx,DWORD PTR [rax+0x14]
  428585:	add    ecx,r14d
  428588:	jb     428638 <flatcc_builder_create_offset_vector@@Base+0x128>
  42858e:	cmp    ecx,0x40000000
  428594:	jae    428638 <flatcc_builder_create_offset_vector@@Base+0x128>
  42859a:	mov    DWORD PTR [rax+0x14],ecx
  42859d:	mov    r12d,DWORD PTR [rbx+0x20]
  4285a1:	lea    eax,[r12+r14*4]
  4285a5:	mov    DWORD PTR [rbx+0x20],eax
  4285a8:	cmp    eax,DWORD PTR [rbx+0x24]
  4285ab:	jae    4285bb <flatcc_builder_create_offset_vector@@Base+0xab>
  4285ad:	mov    rdi,QWORD PTR [rbx+0x18]
  4285b1:	add    rdi,r12
  4285b4:	jne    428616 <flatcc_builder_create_offset_vector@@Base+0x106>
  4285b6:	jmp    42852f <flatcc_builder_create_offset_vector@@Base+0x1f>
  4285bb:	inc    eax
  4285bd:	lea    rsi,[rbx+0x68]
  4285c1:	mov    rdi,QWORD PTR [rbx+0x40]
  4285c5:	mov    edx,DWORD PTR [rbx+0x28]
  4285c8:	add    rdx,rax
  4285cb:	mov    ecx,0x1
  4285d0:	mov    r8d,0x1
  4285d6:	call   QWORD PTR [rbx+0x50]
  4285d9:	test   eax,eax
  4285db:	jne    42852f <flatcc_builder_create_offset_vector@@Base+0x1f>
  4285e1:	mov    eax,DWORD PTR [rbx+0x28]
  4285e4:	mov    rdi,rax
  4285e7:	add    rdi,QWORD PTR [rbx+0x68]
  4285eb:	mov    QWORD PTR [rbx+0x18],rdi
  4285ef:	mov    ecx,DWORD PTR [rbx+0x70]
  4285f2:	sub    ecx,eax
  4285f4:	cmp    ecx,0xfffffffc
  4285f7:	mov    eax,0xfffffffc
  4285fc:	cmovb  eax,ecx
  4285ff:	mov    DWORD PTR [rbx+0x24],eax
  428602:	mov    rax,QWORD PTR [rbx+0x30]
  428606:	mov    DWORD PTR [rax+0x4],0xfffffffc
  42860d:	add    rdi,r12
  428610:	je     42852f <flatcc_builder_create_offset_vector@@Base+0x1f>
  428616:	shl    r14,0x2
  42861a:	mov    rsi,r15
  42861d:	mov    rdx,r14
  428620:	call   406190 <memcpy@plt>
  428625:	mov    rdi,rbx
  428628:	add    rsp,0x8
  42862c:	pop    rbx
  42862d:	pop    r12
  42862f:	pop    r14
  428631:	pop    r15
  428633:	jmp    428660 <flatcc_builder_end_offset_vector@@Base>
  428638:	lea    rdi,[rip+0x2128c]        # 4498cb <flatcc_builder_padding_base@@Base+0x130b>
  42863f:	lea    rsi,[rip+0x201bc]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  428646:	lea    rcx,[rip+0x21299]        # 4498e6 <flatcc_builder_padding_base@@Base+0x1326>
  42864d:	mov    edx,0x37c
  428652:	call   4060f0 <__assert_fail@plt>
  428657:	nop    WORD PTR [rax+rax*1+0x0]

0000000000428660 <flatcc_builder_end_offset_vector@@Base>:
  428660:	push   rbp
  428661:	push   rbx
  428662:	push   rax
  428663:	mov    rax,QWORD PTR [rdi+0x30]
  428667:	cmp    WORD PTR [rax+0xe],0x5
  42866c:	jne    4286fa <flatcc_builder_end_offset_vector@@Base+0x9a>
  428672:	mov    rbx,rdi
  428675:	mov    rsi,QWORD PTR [rdi+0x18]
  428679:	mov    edx,DWORD PTR [rax+0x14]
  42867c:	xor    ecx,ecx
  42867e:	call   4296b0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  428683:	mov    ebp,eax
  428685:	test   eax,eax
  428687:	je     4286f1 <flatcc_builder_end_offset_vector@@Base+0x91>
  428689:	mov    rdi,QWORD PTR [rbx+0x18]
  42868d:	mov    edx,DWORD PTR [rbx+0x20]
  428690:	xor    esi,esi
  428692:	call   406100 <memset@plt>
  428697:	mov    rax,QWORD PTR [rbx+0x30]
  42869b:	mov    ecx,DWORD PTR [rax+0x8]
  42869e:	mov    DWORD PTR [rbx+0x20],ecx
  4286a1:	mov    ecx,DWORD PTR [rax]
  4286a3:	mov    DWORD PTR [rbx+0x28],ecx
  4286a6:	mov    edx,DWORD PTR [rax+0x4]
  4286a9:	mov    rsi,rcx
  4286ac:	add    rsi,QWORD PTR [rbx+0x68]
  4286b0:	mov    QWORD PTR [rbx+0x18],rsi
  4286b4:	mov    esi,DWORD PTR [rbx+0x70]
  4286b7:	sub    esi,ecx
  4286b9:	cmp    esi,edx
  4286bb:	cmova  esi,edx
  4286be:	mov    DWORD PTR [rbx+0x24],esi
  4286c1:	movzx  ecx,WORD PTR [rbx+0xea]
  4286c8:	cmp    WORD PTR [rbx+0xe8],cx
  4286cf:	jae    4286d8 <flatcc_builder_end_offset_vector@@Base+0x78>
  4286d1:	mov    WORD PTR [rbx+0xe8],cx
  4286d8:	movzx  ecx,WORD PTR [rax+0xc]
  4286dc:	mov    WORD PTR [rbx+0xea],cx
  4286e3:	add    rax,0xffffffffffffffdc
  4286e7:	mov    QWORD PTR [rbx+0x30],rax
  4286eb:	dec    DWORD PTR [rbx+0x104]
  4286f1:	mov    eax,ebp
  4286f3:	add    rsp,0x8
  4286f7:	pop    rbx
  4286f8:	pop    rbp
  4286f9:	ret    
  4286fa:	lea    rdi,[rip+0x20537]        # 448c38 <flatcc_builder_padding_base@@Base+0x678>
  428701:	lea    rsi,[rip+0x200fa]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  428708:	lea    rcx,[rip+0x20b58]        # 449267 <flatcc_builder_padding_base@@Base+0xca7>
  42870f:	mov    edx,0x5c8
  428714:	call   4060f0 <__assert_fail@plt>
  428719:	nop    DWORD PTR [rax+0x0]

0000000000428720 <flatcc_builder_start_string@@Base>:
  428720:	push   rbx
  428721:	mov    rbx,rdi
  428724:	mov    esi,0x1
  428729:	call   4276d0 <flatcc_builder_start_buffer@@Base+0xe0>
  42872e:	mov    ecx,eax
  428730:	mov    eax,0xffffffff
  428735:	test   ecx,ecx
  428737:	je     42873b <flatcc_builder_start_string@@Base+0x1b>
  428739:	pop    rbx
  42873a:	ret    
  42873b:	mov    rax,QWORD PTR [rbx+0x30]
  42873f:	mov    DWORD PTR [rax+0x10],0x1
  428746:	mov    rax,QWORD PTR [rbx+0x30]
  42874a:	mov    DWORD PTR [rax+0x14],0x0
  428751:	mov    rax,QWORD PTR [rbx+0x30]
  428755:	mov    WORD PTR [rax+0xe],0x6
  42875b:	mov    ecx,DWORD PTR [rbx+0x28]
  42875e:	mov    edx,DWORD PTR [rbx+0x70]
  428761:	sub    edx,ecx
  428763:	add    rcx,QWORD PTR [rbx+0x68]
  428767:	mov    QWORD PTR [rbx+0x18],rcx
  42876b:	cmp    edx,0xfffffffc
  42876e:	mov    ecx,0xfffffffc
  428773:	cmovb  ecx,edx
  428776:	mov    DWORD PTR [rbx+0x24],ecx
  428779:	mov    DWORD PTR [rax+0x4],0xfffffffc
  428780:	xor    eax,eax
  428782:	pop    rbx
  428783:	ret    
  428784:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42878e:	xchg   ax,ax

0000000000428790 <flatcc_builder_reserve_table@@Base>:
  428790:	push   r15
  428792:	push   r14
  428794:	push   rbx
  428795:	test   esi,esi
  428797:	js     428844 <flatcc_builder_reserve_table@@Base+0xb4>
  42879d:	mov    r14d,esi
  4287a0:	mov    r15,rdi
  4287a3:	mov    rax,QWORD PTR [rdi+0x30]
  4287a7:	movzx  ebx,WORD PTR [rax+0x1c]
  4287ab:	add    ebx,ebx
  4287ad:	add    ebx,DWORD PTR [rax+0x10]
  4287b0:	lea    edx,[r14+r14*1]
  4287b4:	add    edx,0x4
  4287b7:	add    rdx,rbx
  4287ba:	cmp    rdx,QWORD PTR [rdi+0x60]
  4287be:	jbe    4287dc <flatcc_builder_reserve_table@@Base+0x4c>
  4287c0:	lea    rsi,[r15+0x58]
  4287c4:	mov    rdi,QWORD PTR [r15+0x40]
  4287c8:	mov    ecx,0x1
  4287cd:	xor    r8d,r8d
  4287d0:	call   QWORD PTR [r15+0x50]
  4287d4:	test   eax,eax
  4287d6:	jne    428863 <flatcc_builder_reserve_table@@Base+0xd3>
  4287dc:	add    rbx,QWORD PTR [r15+0x58]
  4287e0:	mov    QWORD PTR [r15+0x8],rbx
  4287e4:	je     428839 <flatcc_builder_reserve_table@@Base+0xa9>
  4287e6:	add    r14d,r14d
  4287e9:	add    rbx,0x4
  4287ed:	mov    QWORD PTR [r15+0x8],rbx
  4287f1:	mov    rax,QWORD PTR [r15+0x30]
  4287f5:	mov    ebx,DWORD PTR [rax+0x14]
  4287f8:	or     r14d,0x1
  4287fc:	add    r14,rbx
  4287ff:	cmp    r14,QWORD PTR [r15+0x90]
  428806:	jbe    428826 <flatcc_builder_reserve_table@@Base+0x96>
  428808:	lea    rsi,[r15+0x88]
  42880f:	mov    rdi,QWORD PTR [r15+0x40]
  428813:	mov    rdx,r14
  428816:	xor    ecx,ecx
  428818:	mov    r8d,0x3
  42881e:	call   QWORD PTR [r15+0x50]
  428822:	test   eax,eax
  428824:	jne    428863 <flatcc_builder_reserve_table@@Base+0xd3>
  428826:	xor    eax,eax
  428828:	add    rbx,QWORD PTR [r15+0x88]
  42882f:	mov    QWORD PTR [r15],rbx
  428832:	sete   al
  428835:	neg    eax
  428837:	jmp    42883e <flatcc_builder_reserve_table@@Base+0xae>
  428839:	mov    eax,0xffffffff
  42883e:	pop    rbx
  42883f:	pop    r14
  428841:	pop    r15
  428843:	ret    
  428844:	lea    rdi,[rip+0x20734]        # 448f7f <flatcc_builder_padding_base@@Base+0x9bf>
  42884b:	lea    rsi,[rip+0x1ffb0]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  428852:	lea    rcx,[rip+0x206e5]        # 448f3e <flatcc_builder_padding_base@@Base+0x97e>
  428859:	mov    edx,0x429
  42885e:	call   4060f0 <__assert_fail@plt>
  428863:	lea    rdi,[rip+0x16b31]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  42886a:	lea    rsi,[rip+0x1ff91]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  428871:	lea    rcx,[rip+0x20f84]        # 4497fc <flatcc_builder_padding_base@@Base+0x123c>
  428878:	mov    edx,0x134
  42887d:	call   4060f0 <__assert_fail@plt>
  428882:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42888c:	nop    DWORD PTR [rax+0x0]

0000000000428890 <flatcc_builder_start_table@@Base>:
  428890:	push   rbp
  428891:	push   r15
  428893:	push   r14
  428895:	push   rbx
  428896:	push   rax
  428897:	mov    r15d,esi
  42889a:	mov    rbx,rdi
  42889d:	mov    esi,0x4
  4288a2:	call   4276d0 <flatcc_builder_start_buffer@@Base+0xe0>
  4288a7:	mov    r14d,0xffffffff
  4288ad:	test   eax,eax
  4288af:	je     4288bf <flatcc_builder_start_table@@Base+0x2f>
  4288b1:	mov    eax,r14d
  4288b4:	add    rsp,0x8
  4288b8:	pop    rbx
  4288b9:	pop    r14
  4288bb:	pop    r15
  4288bd:	pop    rbp
  4288be:	ret    
  4288bf:	mov    eax,DWORD PTR [rbx+0x8]
  4288c2:	sub    eax,DWORD PTR [rbx+0x58]
  4288c5:	mov    rcx,QWORD PTR [rbx+0x30]
  4288c9:	mov    DWORD PTR [rcx+0x10],eax
  4288cc:	mov    eax,DWORD PTR [rbx]
  4288ce:	sub    eax,DWORD PTR [rbx+0x88]
  4288d4:	mov    rcx,QWORD PTR [rbx+0x30]
  4288d8:	mov    DWORD PTR [rcx+0x14],eax
  4288db:	mov    eax,DWORD PTR [rbx+0x14]
  4288de:	mov    rcx,QWORD PTR [rbx+0x30]
  4288e2:	mov    DWORD PTR [rcx+0x18],eax
  4288e5:	movzx  eax,WORD PTR [rbx+0x10]
  4288e9:	mov    rcx,QWORD PTR [rbx+0x30]
  4288ed:	mov    WORD PTR [rcx+0x1c],ax
  4288f1:	mov    DWORD PTR [rbx+0x14],0x2f693b52
  4288f8:	mov    WORD PTR [rbx+0x10],0x0
  4288fe:	mov    rax,QWORD PTR [rbx+0x30]
  428902:	mov    WORD PTR [rax+0xe],0x3
  428908:	movzx  ebp,WORD PTR [rax+0x1c]
  42890c:	add    ebp,ebp
  42890e:	add    ebp,DWORD PTR [rax+0x10]
  428911:	lea    edx,[r15+r15*1]
  428915:	add    edx,0x4
  428918:	add    rdx,rbp
  42891b:	cmp    rdx,QWORD PTR [rbx+0x60]
  42891f:	jbe    42893c <flatcc_builder_start_table@@Base+0xac>
  428921:	lea    rsi,[rbx+0x58]
  428925:	mov    rdi,QWORD PTR [rbx+0x40]
  428929:	mov    ecx,0x1
  42892e:	xor    r8d,r8d
  428931:	call   QWORD PTR [rbx+0x50]
  428934:	test   eax,eax
  428936:	jne    4289d0 <flatcc_builder_start_table@@Base+0x140>
  42893c:	add    rbp,QWORD PTR [rbx+0x58]
  428940:	mov    QWORD PTR [rbx+0x8],rbp
  428944:	je     4288b1 <flatcc_builder_start_table@@Base+0x21>
  42894a:	add    r15d,r15d
  42894d:	add    rbp,0x4
  428951:	mov    QWORD PTR [rbx+0x8],rbp
  428955:	mov    rax,QWORD PTR [rbx+0x30]
  428959:	mov    ebp,DWORD PTR [rax+0x14]
  42895c:	or     r15d,0x1
  428960:	add    r15,rbp
  428963:	cmp    r15,QWORD PTR [rbx+0x90]
  42896a:	jbe    428989 <flatcc_builder_start_table@@Base+0xf9>
  42896c:	lea    rsi,[rbx+0x88]
  428973:	mov    rdi,QWORD PTR [rbx+0x40]
  428977:	mov    rdx,r15
  42897a:	xor    ecx,ecx
  42897c:	mov    r8d,0x3
  428982:	call   QWORD PTR [rbx+0x50]
  428985:	test   eax,eax
  428987:	jne    4289d0 <flatcc_builder_start_table@@Base+0x140>
  428989:	add    rbp,QWORD PTR [rbx+0x88]
  428990:	mov    QWORD PTR [rbx],rbp
  428993:	je     4288b1 <flatcc_builder_start_table@@Base+0x21>
  428999:	mov    eax,DWORD PTR [rbx+0x28]
  42899c:	mov    rcx,rax
  42899f:	add    rcx,QWORD PTR [rbx+0x68]
  4289a3:	mov    QWORD PTR [rbx+0x18],rcx
  4289a7:	mov    ecx,DWORD PTR [rbx+0x70]
  4289aa:	sub    ecx,eax
  4289ac:	cmp    ecx,0xfffc
  4289b2:	mov    eax,0xfffc
  4289b7:	cmovb  eax,ecx
  4289ba:	mov    DWORD PTR [rbx+0x24],eax
  4289bd:	mov    rax,QWORD PTR [rbx+0x30]
  4289c1:	mov    DWORD PTR [rax+0x4],0xfffc
  4289c8:	xor    r14d,r14d
  4289cb:	jmp    4288b1 <flatcc_builder_start_table@@Base+0x21>
  4289d0:	lea    rdi,[rip+0x169c4]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  4289d7:	lea    rsi,[rip+0x1fe24]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  4289de:	lea    rcx,[rip+0x20e17]        # 4497fc <flatcc_builder_padding_base@@Base+0x123c>
  4289e5:	mov    edx,0x134
  4289ea:	call   4060f0 <__assert_fail@plt>
  4289ef:	nop

00000000004289f0 <flatcc_builder_create_vtable@@Base>:
  4289f0:	push   r14
  4289f2:	push   rbx
  4289f3:	sub    rsp,0x98
  4289fa:	mov    r14,rdi
  4289fd:	mov    QWORD PTR [rsp+0x8],0x0
  428a06:	mov    DWORD PTR [rsp+0x10],0x0
  428a0e:	test   dx,dx
  428a11:	je     428a78 <flatcc_builder_create_vtable@@Base+0x88>
  428a13:	movzx  r8d,dx
  428a17:	mov    QWORD PTR [rsp+0x8],r8
  428a1c:	mov    QWORD PTR [rsp+0x18],rsi
  428a21:	mov    QWORD PTR [rsp+0x20],r8
  428a26:	mov    DWORD PTR [rsp+0x10],0x1
  428a2e:	mov    edx,0x1
  428a33:	cmp    DWORD PTR [r14+0x100],0x0
  428a3b:	jne    428a87 <flatcc_builder_create_vtable@@Base+0x97>
  428a3d:	cmp    DWORD PTR [r14+0x124],0x0
  428a45:	jne    428a87 <flatcc_builder_create_vtable@@Base+0x97>
  428a47:	mov    ebx,DWORD PTR [r14+0xf4]
  428a4e:	lea    eax,[r8+rbx*1]
  428a52:	mov    DWORD PTR [r14+0xf4],eax
  428a59:	mov    rdi,QWORD PTR [r14+0x38]
  428a5d:	lea    rsi,[rsp+0x18]
  428a62:	mov    ecx,ebx
  428a64:	call   QWORD PTR [r14+0x48]
  428a68:	test   eax,eax
  428a6a:	jne    428b1b <flatcc_builder_create_vtable@@Base+0x12b>
  428a70:	xor    eax,eax
  428a72:	inc    ebx
  428a74:	jne    428acc <flatcc_builder_create_vtable@@Base+0xdc>
  428a76:	jmp    428ad2 <flatcc_builder_create_vtable@@Base+0xe2>
  428a78:	xor    edx,edx
  428a7a:	xor    r8d,r8d
  428a7d:	cmp    DWORD PTR [r14+0x100],0x0
  428a85:	je     428a3d <flatcc_builder_create_vtable@@Base+0x4d>
  428a87:	cmp    r8,0x11
  428a8b:	setb   al
  428a8e:	lea    rcx,[r8-0x10]
  428a92:	shr    rcx,0x20
  428a96:	sete   cl
  428a99:	test   r8d,r8d
  428a9c:	je     428add <flatcc_builder_create_vtable@@Base+0xed>
  428a9e:	or     al,cl
  428aa0:	je     428add <flatcc_builder_create_vtable@@Base+0xed>
  428aa2:	mov    ebx,DWORD PTR [r14+0xf0]
  428aa9:	sub    ebx,r8d
  428aac:	mov    rdi,QWORD PTR [r14+0x38]
  428ab0:	lea    rsi,[rsp+0x18]
  428ab5:	mov    ecx,ebx
  428ab7:	call   QWORD PTR [r14+0x48]
  428abb:	test   eax,eax
  428abd:	jne    428afc <flatcc_builder_create_vtable@@Base+0x10c>
  428abf:	mov    DWORD PTR [r14+0xf0],ebx
  428ac6:	test   ebx,ebx
  428ac8:	je     428ad0 <flatcc_builder_create_vtable@@Base+0xe0>
  428aca:	inc    ebx
  428acc:	mov    eax,ebx
  428ace:	jmp    428ad2 <flatcc_builder_create_vtable@@Base+0xe2>
  428ad0:	xor    eax,eax
  428ad2:	add    rsp,0x98
  428ad9:	pop    rbx
  428ada:	pop    r14
  428adc:	ret    
  428add:	lea    rdi,[rip+0x168b7]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  428ae4:	lea    rsi,[rip+0x1fd17]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  428aeb:	lea    rcx,[rip+0x20d8f]        # 449881 <flatcc_builder_padding_base@@Base+0x12c1>
  428af2:	mov    edx,0x287
  428af7:	call   4060f0 <__assert_fail@plt>
  428afc:	lea    rdi,[rip+0x16898]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  428b03:	lea    rsi,[rip+0x1fcf8]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  428b0a:	lea    rcx,[rip+0x20d70]        # 449881 <flatcc_builder_padding_base@@Base+0x12c1>
  428b11:	mov    edx,0x28b
  428b16:	call   4060f0 <__assert_fail@plt>
  428b1b:	lea    rdi,[rip+0x16879]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  428b22:	lea    rsi,[rip+0x1fcd9]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  428b29:	lea    rcx,[rip+0x20e0d]        # 44993d <flatcc_builder_padding_base@@Base+0x137d>
  428b30:	mov    edx,0x2a5
  428b35:	call   4060f0 <__assert_fail@plt>
  428b3a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000428b40 <flatcc_builder_create_cached_vtable@@Base>:
  428b40:	push   rbp
  428b41:	push   r15
  428b43:	push   r14
  428b45:	push   r13
  428b47:	push   r12
  428b49:	push   rbx
  428b4a:	sub    rsp,0x28
  428b4e:	mov    r15d,ecx
  428b51:	mov    r12d,edx
  428b54:	mov    QWORD PTR [rsp+0x18],rsi
  428b59:	mov    r14,rdi
  428b5c:	mov    rax,QWORD PTR [rdi+0xd8]
  428b63:	test   rax,rax
  428b66:	je     428c36 <flatcc_builder_create_cached_vtable@@Base+0xf6>
  428b6c:	neg    al
  428b6e:	shrx   r13d,r15d,eax
  428b73:	shl    r13,0x2
  428b77:	add    r13,QWORD PTR [r14+0xa8]
  428b7e:	je     428d0a <flatcc_builder_create_cached_vtable@@Base+0x1ca>
  428b84:	mov    ebx,DWORD PTR [r13+0x0]
  428b88:	movzx  eax,r12w
  428b8c:	mov    QWORD PTR [rsp],rax
  428b90:	test   ebx,ebx
  428b92:	je     428d11 <flatcc_builder_create_cached_vtable@@Base+0x1d1>
  428b98:	mov    rbp,QWORD PTR [r14+0x78]
  428b9c:	mov    QWORD PTR [rsp+0x10],r14
  428ba1:	mov    r15,QWORD PTR [r14+0xb8]
  428ba8:	xor    eax,eax
  428baa:	mov    QWORD PTR [rsp+0x20],rax
  428baf:	mov    QWORD PTR [rsp+0x8],r13
  428bb4:	jmp    428bd3 <flatcc_builder_create_cached_vtable@@Base+0x93>
  428bb6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428bc0:	mov    ebx,DWORD PTR [r14+0xc]
  428bc4:	add    r14,0xc
  428bc8:	mov    r13,r14
  428bcb:	test   ebx,ebx
  428bcd:	je     428cf9 <flatcc_builder_create_cached_vtable@@Base+0x1b9>
  428bd3:	mov    eax,ebx
  428bd5:	lea    r14,[r15+rax*1]
  428bd9:	mov    esi,DWORD PTR [r15+rax*1+0x8]
  428bde:	cmp    WORD PTR [rbp+rsi*1+0x0],r12w
  428be4:	jne    428bc0 <flatcc_builder_create_cached_vtable@@Base+0x80>
  428be6:	add    rsi,rbp
  428be9:	mov    rdi,QWORD PTR [rsp+0x18]
  428bee:	mov    rdx,QWORD PTR [rsp]
  428bf2:	call   4061b0 <bcmp@plt>
  428bf7:	test   eax,eax
  428bf9:	jne    428bc0 <flatcc_builder_create_cached_vtable@@Base+0x80>
  428bfb:	mov    eax,DWORD PTR [r14+0x4]
  428bff:	mov    rcx,QWORD PTR [rsp+0x10]
  428c04:	cmp    eax,DWORD PTR [rcx+0x100]
  428c0a:	je     428e7a <flatcc_builder_create_cached_vtable@@Base+0x33a>
  428c10:	lea    r13,[r14+0xc]
  428c14:	mov    ebx,DWORD PTR [r14+0xc]
  428c18:	mov    rax,r14
  428c1b:	mov    QWORD PTR [rsp+0x20],r14
  428c20:	test   ebx,ebx
  428c22:	jne    428bd3 <flatcc_builder_create_cached_vtable@@Base+0x93>
  428c24:	mov    r15,r14
  428c27:	mov    r14,QWORD PTR [rsp+0x10]
  428c2c:	mov    r13,QWORD PTR [rsp+0x8]
  428c31:	jmp    428d14 <flatcc_builder_create_cached_vtable@@Base+0x1d4>
  428c36:	cmp    DWORD PTR [r14+0xe4],0x0
  428c3e:	jne    428eb8 <flatcc_builder_create_cached_vtable@@Base+0x378>
  428c44:	lea    r13,[r14+0xb8]
  428c4b:	cmp    QWORD PTR [r14+0xc0],0xf
  428c53:	ja     428c75 <flatcc_builder_create_cached_vtable@@Base+0x135>
  428c55:	mov    rdi,QWORD PTR [r14+0x40]
  428c59:	mov    edx,0x10
  428c5e:	mov    rsi,r13
  428c61:	xor    ecx,ecx
  428c63:	mov    r8d,0x6
  428c69:	call   QWORD PTR [r14+0x50]
  428c6d:	test   eax,eax
  428c6f:	jne    428e99 <flatcc_builder_create_cached_vtable@@Base+0x359>
  428c75:	xor    ebx,ebx
  428c77:	cmp    QWORD PTR [r13+0x0],0x0
  428c7c:	je     428e62 <flatcc_builder_create_cached_vtable@@Base+0x322>
  428c82:	lea    rsi,[r14+0xa8]
  428c89:	mov    DWORD PTR [r14+0xe4],0x10
  428c94:	mov    rdi,QWORD PTR [r14+0x40]
  428c98:	mov    ebp,0x100
  428c9d:	mov    edx,0x100
  428ca2:	mov    ecx,0x1
  428ca7:	mov    r8d,0x5
  428cad:	call   QWORD PTR [r14+0x50]
  428cb1:	test   eax,eax
  428cb3:	jne    428e62 <flatcc_builder_create_cached_vtable@@Base+0x322>
  428cb9:	mov    rax,QWORD PTR [r14+0xb0]
  428cc0:	mov    rcx,rbp
  428cc3:	add    rbp,rbp
  428cc6:	cmp    rbp,rax
  428cc9:	jbe    428cc0 <flatcc_builder_create_cached_vtable@@Base+0x180>
  428ccb:	shr    rcx,0x2
  428ccf:	mov    rax,0xffffffffffffffff
  428cd6:	mov    edx,0x1
  428cdb:	nop    DWORD PTR [rax+rax*1+0x0]
  428ce0:	inc    rax
  428ce3:	shlx   rsi,rdx,rax
  428ce8:	cmp    rsi,rcx
  428ceb:	jb     428ce0 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
  428ced:	mov    QWORD PTR [r14+0xd8],rax
  428cf4:	jmp    428b6c <flatcc_builder_create_cached_vtable@@Base+0x2c>
  428cf9:	mov    r14,QWORD PTR [rsp+0x10]
  428cfe:	mov    r13,QWORD PTR [rsp+0x8]
  428d03:	mov    r15,QWORD PTR [rsp+0x20]
  428d08:	jmp    428d14 <flatcc_builder_create_cached_vtable@@Base+0x1d4>
  428d0a:	xor    ebx,ebx
  428d0c:	jmp    428e62 <flatcc_builder_create_cached_vtable@@Base+0x322>
  428d11:	xor    r15d,r15d
  428d14:	mov    r12d,DWORD PTR [r14+0xe4]
  428d1b:	lea    rbp,[r14+0xb8]
  428d22:	lea    rdx,[r12+0x10]
  428d27:	cmp    rdx,QWORD PTR [r14+0xc0]
  428d2e:	jbe    428d4b <flatcc_builder_create_cached_vtable@@Base+0x20b>
  428d30:	mov    rdi,QWORD PTR [r14+0x40]
  428d34:	mov    rsi,rbp
  428d37:	xor    ecx,ecx
  428d39:	mov    r8d,0x6
  428d3f:	call   QWORD PTR [r14+0x50]
  428d43:	test   eax,eax
  428d45:	jne    428e99 <flatcc_builder_create_cached_vtable@@Base+0x359>
  428d4b:	xor    ebx,ebx
  428d4d:	add    r12,QWORD PTR [rbp+0x0]
  428d51:	je     428e62 <flatcc_builder_create_cached_vtable@@Base+0x322>
  428d57:	mov    eax,DWORD PTR [r14+0xe4]
  428d5e:	mov    ecx,DWORD PTR [r14+0x100]
  428d65:	lea    edx,[rax+0x10]
  428d68:	mov    DWORD PTR [r14+0xe4],edx
  428d6f:	mov    DWORD PTR [r12+0x4],ecx
  428d74:	mov    ecx,DWORD PTR [r13+0x0]
  428d78:	mov    DWORD PTR [r12+0xc],ecx
  428d7d:	mov    DWORD PTR [r13+0x0],eax
  428d81:	mov    rdi,r14
  428d84:	mov    rsi,QWORD PTR [rsp+0x18]
  428d89:	mov    rdx,QWORD PTR [rsp]
  428d8d:	call   4289f0 <flatcc_builder_create_vtable@@Base>
  428d92:	mov    DWORD PTR [r12],eax
  428d96:	test   eax,eax
  428d98:	je     428e62 <flatcc_builder_create_cached_vtable@@Base+0x322>
  428d9e:	test   r15,r15
  428da1:	je     428db1 <flatcc_builder_create_cached_vtable@@Base+0x271>
  428da3:	mov    eax,DWORD PTR [r15+0x8]
  428da7:	mov    DWORD PTR [r12+0x8],eax
  428dac:	jmp    428e5e <flatcc_builder_create_cached_vtable@@Base+0x31e>
  428db1:	mov    rax,QWORD PTR [r14+0x118]
  428db8:	mov    ebp,DWORD PTR [r14+0xe0]
  428dbf:	test   rax,rax
  428dc2:	je     428e05 <flatcc_builder_create_cached_vtable@@Base+0x2c5>
  428dc4:	mov    rcx,QWORD PTR [rsp]
  428dc8:	add    ecx,ebp
  428dca:	cmp    rax,rcx
  428dcd:	jae    428e05 <flatcc_builder_create_cached_vtable@@Base+0x2c5>
  428dcf:	cmp    QWORD PTR [r14+0xd8],0x0
  428dd7:	je     428e5e <flatcc_builder_create_cached_vtable@@Base+0x31e>
  428ddd:	mov    rdi,QWORD PTR [r14+0xa8]
  428de4:	mov    rdx,QWORD PTR [r14+0xb0]
  428deb:	xor    esi,esi
  428ded:	call   406100 <memset@plt>
  428df2:	movabs rax,0x1000000000
  428dfc:	mov    QWORD PTR [r14+0xe0],rax
  428e03:	jmp    428e5e <flatcc_builder_create_cached_vtable@@Base+0x31e>
  428e05:	lea    rbx,[r14+0x78]
  428e09:	mov    rax,QWORD PTR [rsp]
  428e0d:	lea    rdx,[rax+rbp*1]
  428e11:	cmp    rdx,QWORD PTR [r14+0x80]
  428e18:	jbe    428e31 <flatcc_builder_create_cached_vtable@@Base+0x2f1>
  428e1a:	mov    rdi,QWORD PTR [r14+0x40]
  428e1e:	mov    rsi,rbx
  428e21:	xor    ecx,ecx
  428e23:	mov    r8d,0x2
  428e29:	call   QWORD PTR [r14+0x50]
  428e2d:	test   eax,eax
  428e2f:	jne    428e99 <flatcc_builder_create_cached_vtable@@Base+0x359>
  428e31:	add    rbp,QWORD PTR [rbx]
  428e34:	je     428e73 <flatcc_builder_create_cached_vtable@@Base+0x333>
  428e36:	mov    eax,DWORD PTR [r14+0xe0]
  428e3d:	mov    DWORD PTR [r12+0x8],eax
  428e42:	mov    rdx,QWORD PTR [rsp]
  428e46:	mov    ecx,edx
  428e48:	add    ecx,eax
  428e4a:	mov    DWORD PTR [r14+0xe0],ecx
  428e51:	mov    rdi,rbp
  428e54:	mov    rsi,QWORD PTR [rsp+0x18]
  428e59:	call   406190 <memcpy@plt>
  428e5e:	mov    ebx,DWORD PTR [r12]
  428e62:	mov    eax,ebx
  428e64:	add    rsp,0x28
  428e68:	pop    rbx
  428e69:	pop    r12
  428e6b:	pop    r13
  428e6d:	pop    r14
  428e6f:	pop    r15
  428e71:	pop    rbp
  428e72:	ret    
  428e73:	mov    ebx,0xffffffff
  428e78:	jmp    428e62 <flatcc_builder_create_cached_vtable@@Base+0x322>
  428e7a:	mov    rcx,QWORD PTR [rsp+0x8]
  428e7f:	cmp    r13,rcx
  428e82:	je     428e94 <flatcc_builder_create_cached_vtable@@Base+0x354>
  428e84:	mov    eax,DWORD PTR [r14+0xc]
  428e88:	mov    DWORD PTR [r13+0x0],eax
  428e8c:	mov    eax,DWORD PTR [rcx]
  428e8e:	mov    DWORD PTR [r14+0xc],eax
  428e92:	mov    DWORD PTR [rcx],ebx
  428e94:	mov    ebx,DWORD PTR [r14]
  428e97:	jmp    428e62 <flatcc_builder_create_cached_vtable@@Base+0x322>
  428e99:	lea    rdi,[rip+0x164fb]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  428ea0:	lea    rsi,[rip+0x1f95b]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  428ea7:	lea    rcx,[rip+0x2094e]        # 4497fc <flatcc_builder_padding_base@@Base+0x123c>
  428eae:	mov    edx,0x134
  428eb3:	call   4060f0 <__assert_fail@plt>
  428eb8:	lea    rdi,[rip+0x20ac7]        # 449986 <flatcc_builder_padding_base@@Base+0x13c6>
  428ebf:	lea    rsi,[rip+0x1f93c]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  428ec6:	lea    rcx,[rip+0x20ac8]        # 449995 <flatcc_builder_padding_base@@Base+0x13d5>
  428ecd:	mov    edx,0x156
  428ed2:	call   4060f0 <__assert_fail@plt>
  428ed7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000428ee0 <flatcc_builder_create_table@@Base>:
  428ee0:	push   rbp
  428ee1:	push   r14
  428ee3:	push   rbx
  428ee4:	sub    rsp,0xa0
  428eeb:	test   r9d,r9d
  428eee:	js     429103 <flatcc_builder_create_table@@Base+0x223>
  428ef4:	mov    r14,rdi
  428ef7:	mov    edi,DWORD PTR [rsp+0xc0]
  428efe:	test   dil,0x1
  428f02:	je     429122 <flatcc_builder_create_table@@Base+0x242>
  428f08:	cmp    cx,0x4
  428f0c:	mov    eax,0x4
  428f11:	cmova  eax,ecx
  428f14:	cmp    WORD PTR [r14+0xe8],ax
  428f1c:	jae    428f26 <flatcc_builder_create_table@@Base+0x46>
  428f1e:	mov    WORD PTR [r14+0xe8],ax
  428f26:	mov    ebp,DWORD PTR [r14+0xf0]
  428f2d:	sub    ebp,edx
  428f2f:	movzx  r10d,ax
  428f33:	dec    r10d
  428f36:	and    r10d,ebp
  428f39:	add    edi,r10d
  428f3c:	neg    edi
  428f3e:	lea    ecx,[rdi+rbp*1]
  428f41:	add    ecx,0xfffffffd
  428f44:	mov    DWORD PTR [rsp+0xc],ecx
  428f48:	test   r9d,r9d
  428f4b:	jle    429006 <flatcc_builder_create_table@@Base+0x126>
  428f51:	add    ebp,0xfffffffc
  428f54:	sub    ebp,r10d
  428f57:	mov    ecx,0xfffffffc
  428f5c:	sub    ecx,ebp
  428f5e:	mov    edi,r9d
  428f61:	lea    rbx,[rdi-0x1]
  428f65:	mov    r9d,edi
  428f68:	and    r9d,0x3
  428f6c:	cmp    rbx,0x3
  428f70:	jae    428f7e <flatcc_builder_create_table@@Base+0x9e>
  428f72:	xor    ebx,ebx
  428f74:	test   r9,r9
  428f77:	jne    428fdd <flatcc_builder_create_table@@Base+0xfd>
  428f79:	jmp    429006 <flatcc_builder_create_table@@Base+0x126>
  428f7e:	sub    rdi,r9
  428f81:	xor    ebx,ebx
  428f83:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428f8d:	nop    DWORD PTR [rax]
  428f90:	movzx  eax,WORD PTR [r8+rbx*2]
  428f95:	mov    ebp,DWORD PTR [rax+rsi*1]
  428f98:	add    ebp,ecx
  428f9a:	sub    ebp,eax
  428f9c:	mov    DWORD PTR [rax+rsi*1],ebp
  428f9f:	movzx  eax,WORD PTR [r8+rbx*2+0x2]
  428fa5:	mov    ebp,DWORD PTR [rax+rsi*1]
  428fa8:	add    ebp,ecx
  428faa:	sub    ebp,eax
  428fac:	mov    DWORD PTR [rax+rsi*1],ebp
  428faf:	movzx  eax,WORD PTR [r8+rbx*2+0x4]
  428fb5:	mov    ebp,DWORD PTR [rax+rsi*1]
  428fb8:	add    ebp,ecx
  428fba:	sub    ebp,eax
  428fbc:	mov    DWORD PTR [rax+rsi*1],ebp
  428fbf:	movzx  eax,WORD PTR [r8+rbx*2+0x6]
  428fc5:	mov    ebp,DWORD PTR [rax+rsi*1]
  428fc8:	add    ebp,ecx
  428fca:	sub    ebp,eax
  428fcc:	mov    DWORD PTR [rax+rsi*1],ebp
  428fcf:	add    rbx,0x4
  428fd3:	cmp    rdi,rbx
  428fd6:	jne    428f90 <flatcc_builder_create_table@@Base+0xb0>
  428fd8:	test   r9,r9
  428fdb:	je     429006 <flatcc_builder_create_table@@Base+0x126>
  428fdd:	lea    rdi,[r8+rbx*2]
  428fe1:	xor    ebx,ebx
  428fe3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  428fed:	nop    DWORD PTR [rax]
  428ff0:	movzx  eax,WORD PTR [rdi+rbx*2]
  428ff4:	mov    ebp,DWORD PTR [rax+rsi*1]
  428ff7:	add    ebp,ecx
  428ff9:	sub    ebp,eax
  428ffb:	mov    DWORD PTR [rax+rsi*1],ebp
  428ffe:	inc    rbx
  429001:	cmp    r9,rbx
  429004:	jne    428ff0 <flatcc_builder_create_table@@Base+0x110>
  429006:	mov    QWORD PTR [rsp+0x10],0x4
  42900f:	lea    rax,[rsp+0xc]
  429014:	mov    QWORD PTR [rsp+0x20],rax
  429019:	mov    QWORD PTR [rsp+0x28],0x4
  429022:	mov    DWORD PTR [rsp+0x18],0x1
  42902a:	test   rdx,rdx
  42902d:	je     4290ce <flatcc_builder_create_table@@Base+0x1ee>
  429033:	lea    r8,[rdx+0x4]
  429037:	mov    QWORD PTR [rsp+0x10],r8
  42903c:	mov    QWORD PTR [rsp+0x30],rsi
  429041:	mov    QWORD PTR [rsp+0x38],rdx
  429046:	mov    DWORD PTR [rsp+0x18],0x2
  42904e:	mov    edx,0x2
  429053:	test   r10d,r10d
  429056:	je     42907d <flatcc_builder_create_table@@Base+0x19d>
  429058:	add    r8,r10
  42905b:	mov    QWORD PTR [rsp+0x10],r8
  429060:	mov    eax,edx
  429062:	shl    rax,0x4
  429066:	lea    rcx,[rip+0x1f553]        # 4485c0 <flatcc_builder_padding_base@@Base>
  42906d:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
  429072:	mov    QWORD PTR [rsp+rax*1+0x28],r10
  429077:	inc    edx
  429079:	mov    DWORD PTR [rsp+0x18],edx
  42907d:	cmp    r8,0x11
  429081:	setb   al
  429084:	lea    rcx,[r8-0x10]
  429088:	shr    rcx,0x20
  42908c:	sete   cl
  42908f:	test   r8d,r8d
  429092:	jle    4290e4 <flatcc_builder_create_table@@Base+0x204>
  429094:	or     al,cl
  429096:	je     4290e4 <flatcc_builder_create_table@@Base+0x204>
  429098:	mov    ebp,DWORD PTR [r14+0xf0]
  42909f:	sub    ebp,r8d
  4290a2:	mov    rdi,QWORD PTR [r14+0x38]
  4290a6:	lea    rsi,[rsp+0x20]
  4290ab:	mov    ecx,ebp
  4290ad:	call   QWORD PTR [r14+0x48]
  4290b1:	test   eax,eax
  4290b3:	jne    429141 <flatcc_builder_create_table@@Base+0x261>
  4290b9:	mov    DWORD PTR [r14+0xf0],ebp
  4290c0:	mov    eax,ebp
  4290c2:	add    rsp,0xa0
  4290c9:	pop    rbx
  4290ca:	pop    r14
  4290cc:	pop    rbp
  4290cd:	ret    
  4290ce:	mov    r8d,0x4
  4290d4:	mov    edx,0x1
  4290d9:	test   r10d,r10d
  4290dc:	jne    429058 <flatcc_builder_create_table@@Base+0x178>
  4290e2:	jmp    42907d <flatcc_builder_create_table@@Base+0x19d>
  4290e4:	lea    rdi,[rip+0x162b0]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  4290eb:	lea    rsi,[rip+0x1f710]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  4290f2:	lea    rcx,[rip+0x20788]        # 449881 <flatcc_builder_padding_base@@Base+0x12c1>
  4290f9:	mov    edx,0x287
  4290fe:	call   4060f0 <__assert_fail@plt>
  429103:	lea    rdi,[rip+0x1fe6e]        # 448f78 <flatcc_builder_padding_base@@Base+0x9b8>
  42910a:	lea    rsi,[rip+0x1f6f1]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  429111:	lea    rcx,[rip+0x1fe72]        # 448f8a <flatcc_builder_padding_base@@Base+0x9ca>
  429118:	mov    edx,0x4d5
  42911d:	call   4060f0 <__assert_fail@plt>
  429122:	lea    rdi,[rip+0x1fefd]        # 449026 <flatcc_builder_padding_base@@Base+0xa66>
  429129:	lea    rsi,[rip+0x1f6d2]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  429130:	lea    rcx,[rip+0x1fe53]        # 448f8a <flatcc_builder_padding_base@@Base+0x9ca>
  429137:	mov    edx,0x4db
  42913c:	call   4060f0 <__assert_fail@plt>
  429141:	lea    rdi,[rip+0x16253]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  429148:	lea    rsi,[rip+0x1f6b3]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  42914f:	lea    rcx,[rip+0x2072b]        # 449881 <flatcc_builder_padding_base@@Base+0x12c1>
  429156:	mov    edx,0x28b
  42915b:	call   4060f0 <__assert_fail@plt>

0000000000429160 <flatcc_builder_check_required_field@@Base>:
  429160:	push   rax
  429161:	mov    rax,QWORD PTR [rdi+0x30]
  429165:	cmp    WORD PTR [rax+0xe],0x3
  42916a:	jne    429187 <flatcc_builder_check_required_field@@Base+0x27>
  42916c:	xor    eax,eax
  42916e:	cmp    WORD PTR [rdi+0x10],si
  429172:	jbe    429185 <flatcc_builder_check_required_field@@Base+0x25>
  429174:	mov    rcx,QWORD PTR [rdi+0x8]
  429178:	movzx  edx,si
  42917b:	xor    eax,eax
  42917d:	cmp    WORD PTR [rcx+rdx*2],0x0
  429182:	setne  al
  429185:	pop    rcx
  429186:	ret    
  429187:	lea    rdi,[rip+0x1fea3]        # 449031 <flatcc_builder_padding_base@@Base+0xa71>
  42918e:	lea    rsi,[rip+0x1f66d]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  429195:	lea    rcx,[rip+0x1fec0]        # 44905c <flatcc_builder_padding_base@@Base+0xa9c>
  42919c:	mov    edx,0x4f8
  4291a1:	call   4060f0 <__assert_fail@plt>
  4291a6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004291b0 <flatcc_builder_check_union_field@@Base>:
  4291b0:	push   rax
  4291b1:	mov    rax,QWORD PTR [rdi+0x30]
  4291b5:	cmp    WORD PTR [rax+0xe],0x3
  4291ba:	jne    429204 <flatcc_builder_check_union_field@@Base+0x54>
  4291bc:	test   si,si
  4291bf:	je     4291ee <flatcc_builder_check_union_field@@Base+0x3e>
  4291c1:	cmp    WORD PTR [rdi+0x10],si
  4291c5:	jbe    4291ee <flatcc_builder_check_union_field@@Base+0x3e>
  4291c7:	movzx  eax,si
  4291ca:	mov    rcx,QWORD PTR [rdi+0x8]
  4291ce:	movzx  edx,WORD PTR [rcx+rax*2-0x2]
  4291d3:	test   rdx,rdx
  4291d6:	je     4291f2 <flatcc_builder_check_union_field@@Base+0x42>
  4291d8:	mov    rsi,QWORD PTR [rdi+0x18]
  4291dc:	cmp    BYTE PTR [rsi+rdx*1],0x0
  4291e0:	movzx  eax,WORD PTR [rcx+rax*2]
  4291e4:	je     4291f9 <flatcc_builder_check_union_field@@Base+0x49>
  4291e6:	test   ax,ax
  4291e9:	setne  al
  4291ec:	jmp    4291ff <flatcc_builder_check_union_field@@Base+0x4f>
  4291ee:	xor    eax,eax
  4291f0:	jmp    4291ff <flatcc_builder_check_union_field@@Base+0x4f>
  4291f2:	cmp    WORD PTR [rcx+rax*2],0x0
  4291f7:	jmp    4291fc <flatcc_builder_check_union_field@@Base+0x4c>
  4291f9:	test   ax,ax
  4291fc:	sete   al
  4291ff:	movzx  eax,al
  429202:	pop    rcx
  429203:	ret    
  429204:	lea    rdi,[rip+0x1fe26]        # 449031 <flatcc_builder_padding_base@@Base+0xa71>
  42920b:	lea    rsi,[rip+0x1f5f0]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  429212:	lea    rcx,[rip+0x1fe96]        # 4490af <flatcc_builder_padding_base@@Base+0xaef>
  429219:	mov    edx,0x4ff
  42921e:	call   4060f0 <__assert_fail@plt>
  429223:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42922d:	nop    DWORD PTR [rax]

0000000000429230 <flatcc_builder_check_required@@Base>:
  429230:	push   rax
  429231:	mov    rax,QWORD PTR [rdi+0x30]
  429235:	cmp    WORD PTR [rax+0xe],0x3
  42923a:	jne    429279 <flatcc_builder_check_required@@Base+0x49>
  42923c:	movzx  ecx,WORD PTR [rdi+0x10]
  429240:	xor    eax,eax
  429242:	cmp    ecx,edx
  429244:	jl     429273 <flatcc_builder_check_required@@Base+0x43>
  429246:	mov    eax,0x1
  42924b:	test   edx,edx
  42924d:	jle    429273 <flatcc_builder_check_required@@Base+0x43>
  42924f:	mov    rcx,QWORD PTR [rdi+0x8]
  429253:	mov    r8d,edx
  429256:	xor    edi,edi
  429258:	nop    DWORD PTR [rax+rax*1+0x0]
  429260:	movzx  edx,WORD PTR [rsi+rdi*2]
  429264:	cmp    WORD PTR [rcx+rdx*2],0x0
  429269:	je     429275 <flatcc_builder_check_required@@Base+0x45>
  42926b:	inc    rdi
  42926e:	cmp    r8,rdi
  429271:	jne    429260 <flatcc_builder_check_required@@Base+0x30>
  429273:	pop    rcx
  429274:	ret    
  429275:	xor    eax,eax
  429277:	pop    rcx
  429278:	ret    
  429279:	lea    rdi,[rip+0x1fdb1]        # 449031 <flatcc_builder_padding_base@@Base+0xa71>
  429280:	lea    rsi,[rip+0x1f57b]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  429287:	lea    rcx,[rip+0x1fe71]        # 4490ff <flatcc_builder_padding_base@@Base+0xb3f>
  42928e:	mov    edx,0x511
  429293:	call   4060f0 <__assert_fail@plt>
  429298:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004292a0 <flatcc_builder_end_table@@Base>:
  4292a0:	push   rbp
  4292a1:	push   r15
  4292a3:	push   r14
  4292a5:	push   r12
  4292a7:	push   rbx
  4292a8:	sub    rsp,0x10
  4292ac:	mov    rax,QWORD PTR [rdi+0x30]
  4292b0:	cmp    WORD PTR [rax+0xe],0x3
  4292b5:	jne    429405 <flatcc_builder_end_table@@Base+0x165>
  4292bb:	mov    rbx,rdi
  4292be:	mov    rax,QWORD PTR [rdi+0x8]
  4292c2:	mov    ecx,DWORD PTR [rdi+0x10]
  4292c5:	lea    ecx,[rcx+rcx*1]
  4292c8:	add    ecx,0x4
  4292cb:	mov    WORD PTR [rax-0x4],cx
  4292cf:	mov    edx,DWORD PTR [rdi+0x20]
  4292d2:	add    edx,0x4
  4292d5:	mov    WORD PTR [rax-0x2],dx
  4292d9:	lea    r12,[rax-0x4]
  4292dd:	movzx  ebp,cx
  4292e0:	mov    eax,DWORD PTR [rdi+0x14]
  4292e3:	xor    eax,ebp
  4292e5:	imul   eax,eax,0x9e3779b1
  4292eb:	movzx  ecx,dx
  4292ee:	xor    ecx,eax
  4292f0:	imul   ecx,ecx,0x9e3779b1
  4292f6:	mov    DWORD PTR [rdi+0x14],ecx
  4292f9:	mov    rsi,r12
  4292fc:	mov    edx,ebp
  4292fe:	call   428b40 <flatcc_builder_create_cached_vtable@@Base>
  429303:	test   eax,eax
  429305:	je     4293f2 <flatcc_builder_end_table@@Base+0x152>
  42930b:	mov    r14d,eax
  42930e:	xor    r15d,r15d
  429311:	mov    rdi,r12
  429314:	xor    esi,esi
  429316:	mov    rdx,rbp
  429319:	call   406100 <memset@plt>
  42931e:	mov    rax,QWORD PTR [rbx+0x30]
  429322:	mov    r8d,DWORD PTR [rax+0x14]
  429326:	add    r8,QWORD PTR [rbx+0x88]
  42932d:	mov    r9,QWORD PTR [rbx]
  429330:	mov    rsi,QWORD PTR [rbx+0x18]
  429334:	sub    r9,r8
  429337:	shr    r9,1
  42933a:	mov    edx,DWORD PTR [rbx+0x20]
  42933d:	movzx  ecx,WORD PTR [rbx+0xea]
  429344:	mov    DWORD PTR [rsp],r14d
  429348:	mov    rdi,rbx
  42934b:	call   428ee0 <flatcc_builder_create_table@@Base>
  429350:	test   eax,eax
  429352:	je     4293f5 <flatcc_builder_end_table@@Base+0x155>
  429358:	mov    r14d,eax
  42935b:	mov    rax,QWORD PTR [rbx+0x30]
  42935f:	mov    ecx,DWORD PTR [rax+0x18]
  429362:	mov    DWORD PTR [rbx+0x14],ecx
  429365:	movzx  ecx,WORD PTR [rax+0x1c]
  429369:	mov    WORD PTR [rbx+0x10],cx
  42936d:	mov    ecx,DWORD PTR [rax+0x10]
  429370:	add    rcx,QWORD PTR [rbx+0x58]
  429374:	mov    QWORD PTR [rbx+0x8],rcx
  429378:	mov    eax,DWORD PTR [rax+0x14]
  42937b:	add    rax,QWORD PTR [rbx+0x88]
  429382:	mov    QWORD PTR [rbx],rax
  429385:	mov    rdi,QWORD PTR [rbx+0x18]
  429389:	mov    edx,DWORD PTR [rbx+0x20]
  42938c:	xor    esi,esi
  42938e:	call   406100 <memset@plt>
  429393:	mov    rax,QWORD PTR [rbx+0x30]
  429397:	mov    ecx,DWORD PTR [rax+0x8]
  42939a:	mov    DWORD PTR [rbx+0x20],ecx
  42939d:	mov    ecx,DWORD PTR [rax]
  42939f:	mov    DWORD PTR [rbx+0x28],ecx
  4293a2:	mov    edx,DWORD PTR [rax+0x4]
  4293a5:	mov    rsi,rcx
  4293a8:	add    rsi,QWORD PTR [rbx+0x68]
  4293ac:	mov    QWORD PTR [rbx+0x18],rsi
  4293b0:	mov    esi,DWORD PTR [rbx+0x70]
  4293b3:	sub    esi,ecx
  4293b5:	cmp    esi,edx
  4293b7:	cmova  esi,edx
  4293ba:	mov    DWORD PTR [rbx+0x24],esi
  4293bd:	movzx  ecx,WORD PTR [rbx+0xea]
  4293c4:	cmp    WORD PTR [rbx+0xe8],cx
  4293cb:	jae    4293d4 <flatcc_builder_end_table@@Base+0x134>
  4293cd:	mov    WORD PTR [rbx+0xe8],cx
  4293d4:	movzx  ecx,WORD PTR [rax+0xc]
  4293d8:	mov    WORD PTR [rbx+0xea],cx
  4293df:	add    rax,0xffffffffffffffdc
  4293e3:	mov    QWORD PTR [rbx+0x30],rax
  4293e7:	dec    DWORD PTR [rbx+0x104]
  4293ed:	mov    r15d,r14d
  4293f0:	jmp    4293f5 <flatcc_builder_end_table@@Base+0x155>
  4293f2:	xor    r15d,r15d
  4293f5:	mov    eax,r15d
  4293f8:	add    rsp,0x10
  4293fc:	pop    rbx
  4293fd:	pop    r12
  4293ff:	pop    r14
  429401:	pop    r15
  429403:	pop    rbp
  429404:	ret    
  429405:	lea    rdi,[rip+0x1fc25]        # 449031 <flatcc_builder_padding_base@@Base+0xa71>
  42940c:	lea    rsi,[rip+0x1f3ef]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  429413:	lea    rcx,[rip+0x1fd3f]        # 449159 <flatcc_builder_padding_base@@Base+0xb99>
  42941a:	mov    edx,0x525
  42941f:	call   4060f0 <__assert_fail@plt>
  429424:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42942e:	xchg   ax,ax

0000000000429430 <flatcc_builder_create_vector@@Base>:
  429430:	push   rbp
  429431:	push   rbx
  429432:	sub    rsp,0x98
  429439:	cmp    rdx,r9
  42943c:	ja     429566 <flatcc_builder_create_vector@@Base+0x136>
  429442:	mov    rbx,rdi
  429445:	cmp    r8w,0x4
  42944a:	mov    eax,0x4
  42944f:	cmova  eax,r8d
  429453:	cmp    WORD PTR [rdi+0xe8],ax
  42945a:	jae    429463 <flatcc_builder_create_vector@@Base+0x33>
  42945c:	mov    WORD PTR [rbx+0xe8],ax
  429463:	imul   ecx,edx
  429466:	mov    DWORD PTR [rsp+0x4],edx
  42946a:	mov    ebp,DWORD PTR [rbx+0xf0]
  429470:	mov    edx,ebp
  429472:	sub    edx,ecx
  429474:	movzx  eax,ax
  429477:	dec    eax
  429479:	and    eax,edx
  42947b:	mov    QWORD PTR [rsp+0x8],0x4
  429484:	lea    rdx,[rsp+0x4]
  429489:	mov    QWORD PTR [rsp+0x18],rdx
  42948e:	mov    QWORD PTR [rsp+0x20],0x4
  429497:	mov    DWORD PTR [rsp+0x10],0x1
  42949f:	test   ecx,ecx
  4294a1:	je     429536 <flatcc_builder_create_vector@@Base+0x106>
  4294a7:	mov    ecx,ecx
  4294a9:	lea    r8,[rcx+0x4]
  4294ad:	mov    QWORD PTR [rsp+0x8],r8
  4294b2:	mov    QWORD PTR [rsp+0x28],rsi
  4294b7:	mov    QWORD PTR [rsp+0x30],rcx
  4294bc:	mov    DWORD PTR [rsp+0x10],0x2
  4294c4:	mov    edx,0x2
  4294c9:	test   eax,eax
  4294cb:	je     4294f4 <flatcc_builder_create_vector@@Base+0xc4>
  4294cd:	mov    eax,eax
  4294cf:	add    r8,rax
  4294d2:	mov    QWORD PTR [rsp+0x8],r8
  4294d7:	mov    ecx,edx
  4294d9:	shl    rcx,0x4
  4294dd:	lea    rsi,[rip+0x1f0dc]        # 4485c0 <flatcc_builder_padding_base@@Base>
  4294e4:	mov    QWORD PTR [rsp+rcx*1+0x18],rsi
  4294e9:	mov    QWORD PTR [rsp+rcx*1+0x20],rax
  4294ee:	inc    edx
  4294f0:	mov    DWORD PTR [rsp+0x10],edx
  4294f4:	cmp    r8,0x11
  4294f8:	setb   al
  4294fb:	lea    rcx,[r8-0x10]
  4294ff:	shr    rcx,0x20
  429503:	sete   cl
  429506:	test   r8d,r8d
  429509:	jle    429547 <flatcc_builder_create_vector@@Base+0x117>
  42950b:	or     al,cl
  42950d:	je     429547 <flatcc_builder_create_vector@@Base+0x117>
  42950f:	sub    ebp,r8d
  429512:	mov    rdi,QWORD PTR [rbx+0x38]
  429516:	lea    rsi,[rsp+0x18]
  42951b:	mov    ecx,ebp
  42951d:	call   QWORD PTR [rbx+0x48]
  429520:	test   eax,eax
  429522:	jne    429585 <flatcc_builder_create_vector@@Base+0x155>
  429524:	mov    DWORD PTR [rbx+0xf0],ebp
  42952a:	mov    eax,ebp
  42952c:	add    rsp,0x98
  429533:	pop    rbx
  429534:	pop    rbp
  429535:	ret    
  429536:	mov    r8d,0x4
  42953c:	mov    edx,0x1
  429541:	test   eax,eax
  429543:	jne    4294cd <flatcc_builder_create_vector@@Base+0x9d>
  429545:	jmp    4294f4 <flatcc_builder_create_vector@@Base+0xc4>
  429547:	lea    rdi,[rip+0x15e4d]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  42954e:	lea    rsi,[rip+0x1f2ad]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  429555:	lea    rcx,[rip+0x20325]        # 449881 <flatcc_builder_padding_base@@Base+0x12c1>
  42955c:	mov    edx,0x287
  429561:	call   4060f0 <__assert_fail@plt>
  429566:	lea    rdi,[rip+0x1fc2e]        # 44919b <flatcc_builder_padding_base@@Base+0xbdb>
  42956d:	lea    rsi,[rip+0x1f28e]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  429574:	lea    rcx,[rip+0x1fc33]        # 4491ae <flatcc_builder_padding_base@@Base+0xbee>
  42957b:	mov    edx,0x555
  429580:	call   4060f0 <__assert_fail@plt>
  429585:	lea    rdi,[rip+0x15e0f]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  42958c:	lea    rsi,[rip+0x1f26f]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  429593:	lea    rcx,[rip+0x202e7]        # 449881 <flatcc_builder_padding_base@@Base+0x12c1>
  42959a:	mov    edx,0x28b
  42959f:	call   4060f0 <__assert_fail@plt>
  4295a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4295ae:	xchg   ax,ax

00000000004295b0 <flatcc_builder_end_vector@@Base>:
  4295b0:	push   rbp
  4295b1:	push   rbx
  4295b2:	push   rax
  4295b3:	mov    rax,QWORD PTR [rdi+0x30]
  4295b7:	cmp    WORD PTR [rax+0xe],0x4
  4295bc:	jne    429657 <flatcc_builder_end_vector@@Base+0xa7>
  4295c2:	mov    rbx,rdi
  4295c5:	mov    rsi,QWORD PTR [rdi+0x18]
  4295c9:	mov    ecx,DWORD PTR [rax+0x10]
  4295cc:	mov    edx,DWORD PTR [rax+0x14]
  4295cf:	movzx  r8d,WORD PTR [rdi+0xea]
  4295d7:	mov    r9d,DWORD PTR [rax+0x18]
  4295db:	call   429430 <flatcc_builder_create_vector@@Base>
  4295e0:	mov    ebp,eax
  4295e2:	test   eax,eax
  4295e4:	je     42964e <flatcc_builder_end_vector@@Base+0x9e>
  4295e6:	mov    rdi,QWORD PTR [rbx+0x18]
  4295ea:	mov    edx,DWORD PTR [rbx+0x20]
  4295ed:	xor    esi,esi
  4295ef:	call   406100 <memset@plt>
  4295f4:	mov    rax,QWORD PTR [rbx+0x30]
  4295f8:	mov    ecx,DWORD PTR [rax+0x8]
  4295fb:	mov    DWORD PTR [rbx+0x20],ecx
  4295fe:	mov    ecx,DWORD PTR [rax]
  429600:	mov    DWORD PTR [rbx+0x28],ecx
  429603:	mov    edx,DWORD PTR [rax+0x4]
  429606:	mov    rsi,rcx
  429609:	add    rsi,QWORD PTR [rbx+0x68]
  42960d:	mov    QWORD PTR [rbx+0x18],rsi
  429611:	mov    esi,DWORD PTR [rbx+0x70]
  429614:	sub    esi,ecx
  429616:	cmp    esi,edx
  429618:	cmova  esi,edx
  42961b:	mov    DWORD PTR [rbx+0x24],esi
  42961e:	movzx  ecx,WORD PTR [rbx+0xea]
  429625:	cmp    WORD PTR [rbx+0xe8],cx
  42962c:	jae    429635 <flatcc_builder_end_vector@@Base+0x85>
  42962e:	mov    WORD PTR [rbx+0xe8],cx
  429635:	movzx  ecx,WORD PTR [rax+0xc]
  429639:	mov    WORD PTR [rbx+0xea],cx
  429640:	add    rax,0xffffffffffffffdc
  429644:	mov    QWORD PTR [rbx+0x30],rax
  429648:	dec    DWORD PTR [rbx+0x104]
  42964e:	mov    eax,ebp
  429650:	add    rsp,0x8
  429654:	pop    rbx
  429655:	pop    rbp
  429656:	ret    
  429657:	lea    rdi,[rip+0x1f4e1]        # 448b3f <flatcc_builder_padding_base@@Base+0x57f>
  42965e:	lea    rsi,[rip+0x1f19d]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  429665:	lea    rcx,[rip+0x1fbb8]        # 449224 <flatcc_builder_padding_base@@Base+0xc64>
  42966c:	mov    edx,0x578
  429671:	call   4060f0 <__assert_fail@plt>
  429676:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000429680 <flatcc_builder_vector_count@@Base>:
  429680:	mov    rax,QWORD PTR [rdi+0x30]
  429684:	mov    eax,DWORD PTR [rax+0x14]
  429687:	ret    
  429688:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000429690 <flatcc_builder_vector_edit@@Base>:
  429690:	mov    rax,QWORD PTR [rdi+0x18]
  429694:	ret    
  429695:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42969f:	nop

00000000004296a0 <flatcc_builder_create_offset_vector_direct@@Base>:
  4296a0:	xor    ecx,ecx
  4296a2:	jmp    4296b0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  4296a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4296ae:	xchg   ax,ax
  4296b0:	push   r14
  4296b2:	push   rbx
  4296b3:	sub    rsp,0x98
  4296ba:	mov    r10,rdx
  4296bd:	xor    ebx,ebx
  4296bf:	test   r10d,0xc0000000
  4296c6:	jne    429839 <flatcc_builder_create_offset_vector_direct@@Base+0x199>
  4296cc:	mov    r14,rdi
  4296cf:	cmp    WORD PTR [rdi+0xe8],0x3
  4296d7:	ja     4296e3 <flatcc_builder_create_offset_vector_direct@@Base+0x43>
  4296d9:	mov    WORD PTR [r14+0xe8],0x4
  4296e3:	lea    r8d,[r10*4+0x0]
  4296eb:	mov    DWORD PTR [rsp+0x4],r10d
  4296f0:	mov    ebx,DWORD PTR [r14+0xf0]
  4296f7:	mov    r9d,ebx
  4296fa:	and    r9d,0x3
  4296fe:	mov    QWORD PTR [rsp+0x8],0x4
  429707:	lea    rdx,[rsp+0x4]
  42970c:	mov    QWORD PTR [rsp+0x18],rdx
  429711:	mov    QWORD PTR [rsp+0x20],0x4
  42971a:	mov    DWORD PTR [rsp+0x10],0x1
  429722:	test   r8d,r8d
  429725:	je     429846 <flatcc_builder_create_offset_vector_direct@@Base+0x1a6>
  42972b:	mov    edx,r8d
  42972e:	lea    r8,[rdx+0x4]
  429732:	mov    QWORD PTR [rsp+0x8],r8
  429737:	mov    QWORD PTR [rsp+0x28],rsi
  42973c:	mov    QWORD PTR [rsp+0x30],rdx
  429741:	mov    DWORD PTR [rsp+0x10],0x2
  429749:	mov    edx,0x2
  42974e:	test   r9d,r9d
  429751:	je     429778 <flatcc_builder_create_offset_vector_direct@@Base+0xd8>
  429753:	add    r8,r9
  429756:	mov    QWORD PTR [rsp+0x8],r8
  42975b:	mov    edi,edx
  42975d:	shl    rdi,0x4
  429761:	lea    rax,[rip+0x1ee58]        # 4485c0 <flatcc_builder_padding_base@@Base>
  429768:	mov    QWORD PTR [rsp+rdi*1+0x18],rax
  42976d:	mov    QWORD PTR [rsp+rdi*1+0x20],r9
  429772:	inc    edx
  429774:	mov    DWORD PTR [rsp+0x10],edx
  429778:	test   r10d,r10d
  42977b:	je     4297f5 <flatcc_builder_create_offset_vector_direct@@Base+0x155>
  42977d:	mov    edi,r8d
  429780:	sub    edi,ebx
  429782:	add    edi,0xfffffffc
  429785:	mov    r9d,r10d
  429788:	xor    ebx,ebx
  42978a:	jmp    42979b <flatcc_builder_create_offset_vector_direct@@Base+0xfb>
  42978c:	nop    DWORD PTR [rax+0x0]
  429790:	inc    rbx
  429793:	add    edi,0xfffffffc
  429796:	cmp    r9,rbx
  429799:	je     4297ee <flatcc_builder_create_offset_vector_direct@@Base+0x14e>
  42979b:	mov    eax,DWORD PTR [rsi+rbx*4]
  42979e:	test   eax,eax
  4297a0:	je     4297c0 <flatcc_builder_create_offset_vector_direct@@Base+0x120>
  4297a2:	add    eax,edi
  4297a4:	mov    DWORD PTR [rsi+rbx*4],eax
  4297a7:	test   rcx,rcx
  4297aa:	je     429790 <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
  4297ac:	cmp    BYTE PTR [rcx+rbx*1],0x0
  4297b0:	jne    429790 <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
  4297b2:	jmp    42985f <flatcc_builder_create_offset_vector_direct@@Base+0x1bf>
  4297b7:	nop    WORD PTR [rax+rax*1+0x0]
  4297c0:	test   rcx,rcx
  4297c3:	je     42987e <flatcc_builder_create_offset_vector_direct@@Base+0x1de>
  4297c9:	cmp    BYTE PTR [rcx+rbx*1],0x0
  4297cd:	je     429790 <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
  4297cf:	lea    rdi,[rip+0x20271]        # 449a47 <flatcc_builder_padding_base@@Base+0x1487>
  4297d6:	lea    rsi,[rip+0x1f025]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  4297dd:	lea    rcx,[rip+0x201e0]        # 4499c4 <flatcc_builder_padding_base@@Base+0x1404>
  4297e4:	mov    edx,0x5b5
  4297e9:	call   4060f0 <__assert_fail@plt>
  4297ee:	mov    ebx,DWORD PTR [r14+0xf0]
  4297f5:	cmp    r8,0x11
  4297f9:	setb   al
  4297fc:	lea    rcx,[r8-0x10]
  429800:	shr    rcx,0x20
  429804:	sete   cl
  429807:	test   r8d,r8d
  42980a:	jle    42989d <flatcc_builder_create_offset_vector_direct@@Base+0x1fd>
  429810:	or     al,cl
  429812:	je     42989d <flatcc_builder_create_offset_vector_direct@@Base+0x1fd>
  429818:	sub    ebx,r8d
  42981b:	mov    rdi,QWORD PTR [r14+0x38]
  42981f:	lea    rsi,[rsp+0x18]
  429824:	mov    ecx,ebx
  429826:	call   QWORD PTR [r14+0x48]
  42982a:	test   eax,eax
  42982c:	jne    4298bc <flatcc_builder_create_offset_vector_direct@@Base+0x21c>
  429832:	mov    DWORD PTR [r14+0xf0],ebx
  429839:	mov    eax,ebx
  42983b:	add    rsp,0x98
  429842:	pop    rbx
  429843:	pop    r14
  429845:	ret    
  429846:	mov    r8d,0x4
  42984c:	mov    edx,0x1
  429851:	test   r9d,r9d
  429854:	jne    429753 <flatcc_builder_create_offset_vector_direct@@Base+0xb3>
  42985a:	jmp    429778 <flatcc_builder_create_offset_vector_direct@@Base+0xd8>
  42985f:	lea    rdi,[rip+0x20150]        # 4499b6 <flatcc_builder_padding_base@@Base+0x13f6>
  429866:	lea    rsi,[rip+0x1ef95]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  42986d:	lea    rcx,[rip+0x20150]        # 4499c4 <flatcc_builder_padding_base@@Base+0x1404>
  429874:	mov    edx,0x5b1
  429879:	call   4060f0 <__assert_fail@plt>
  42987e:	lea    rdi,[rip+0x15b16]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  429885:	lea    rsi,[rip+0x1ef76]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  42988c:	lea    rcx,[rip+0x20131]        # 4499c4 <flatcc_builder_padding_base@@Base+0x1404>
  429893:	mov    edx,0x5b7
  429898:	call   4060f0 <__assert_fail@plt>
  42989d:	lea    rdi,[rip+0x15af7]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  4298a4:	lea    rsi,[rip+0x1ef57]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  4298ab:	lea    rcx,[rip+0x1ffcf]        # 449881 <flatcc_builder_padding_base@@Base+0x12c1>
  4298b2:	mov    edx,0x287
  4298b7:	call   4060f0 <__assert_fail@plt>
  4298bc:	lea    rdi,[rip+0x15ad8]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  4298c3:	lea    rsi,[rip+0x1ef38]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  4298ca:	lea    rcx,[rip+0x1ffb0]        # 449881 <flatcc_builder_padding_base@@Base+0x12c1>
  4298d1:	mov    edx,0x28b
  4298d6:	call   4060f0 <__assert_fail@plt>
  4298db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004298e0 <flatcc_builder_end_offset_vector_for_unions@@Base>:
  4298e0:	push   rbp
  4298e1:	push   rbx
  4298e2:	push   rax
  4298e3:	mov    rax,QWORD PTR [rdi+0x30]
  4298e7:	cmp    WORD PTR [rax+0xe],0x5
  4298ec:	jne    42997b <flatcc_builder_end_offset_vector_for_unions@@Base+0x9b>
  4298f2:	mov    rcx,rsi
  4298f5:	mov    rbx,rdi
  4298f8:	mov    rsi,QWORD PTR [rdi+0x18]
  4298fc:	mov    edx,DWORD PTR [rax+0x14]
  4298ff:	call   4296b0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  429904:	mov    ebp,eax
  429906:	test   eax,eax
  429908:	je     429972 <flatcc_builder_end_offset_vector_for_unions@@Base+0x92>
  42990a:	mov    rdi,QWORD PTR [rbx+0x18]
  42990e:	mov    edx,DWORD PTR [rbx+0x20]
  429911:	xor    esi,esi
  429913:	call   406100 <memset@plt>
  429918:	mov    rax,QWORD PTR [rbx+0x30]
  42991c:	mov    ecx,DWORD PTR [rax+0x8]
  42991f:	mov    DWORD PTR [rbx+0x20],ecx
  429922:	mov    ecx,DWORD PTR [rax]
  429924:	mov    DWORD PTR [rbx+0x28],ecx
  429927:	mov    edx,DWORD PTR [rax+0x4]
  42992a:	mov    rsi,rcx
  42992d:	add    rsi,QWORD PTR [rbx+0x68]
  429931:	mov    QWORD PTR [rbx+0x18],rsi
  429935:	mov    esi,DWORD PTR [rbx+0x70]
  429938:	sub    esi,ecx
  42993a:	cmp    esi,edx
  42993c:	cmova  esi,edx
  42993f:	mov    DWORD PTR [rbx+0x24],esi
  429942:	movzx  ecx,WORD PTR [rbx+0xea]
  429949:	cmp    WORD PTR [rbx+0xe8],cx
  429950:	jae    429959 <flatcc_builder_end_offset_vector_for_unions@@Base+0x79>
  429952:	mov    WORD PTR [rbx+0xe8],cx
  429959:	movzx  ecx,WORD PTR [rax+0xc]
  42995d:	mov    WORD PTR [rbx+0xea],cx
  429964:	add    rax,0xffffffffffffffdc
  429968:	mov    QWORD PTR [rbx+0x30],rax
  42996c:	dec    DWORD PTR [rbx+0x104]
  429972:	mov    eax,ebp
  429974:	add    rsp,0x8
  429978:	pop    rbx
  429979:	pop    rbp
  42997a:	ret    
  42997b:	lea    rdi,[rip+0x1f2b6]        # 448c38 <flatcc_builder_padding_base@@Base+0x678>
  429982:	lea    rsi,[rip+0x1ee79]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  429989:	lea    rcx,[rip+0x1f921]        # 4492b1 <flatcc_builder_padding_base@@Base+0xcf1>
  429990:	mov    edx,0x5d5
  429995:	call   4060f0 <__assert_fail@plt>
  42999a:	nop    WORD PTR [rax+rax*1+0x0]

00000000004299a0 <flatcc_builder_offset_vector_edit@@Base>:
  4299a0:	mov    rax,QWORD PTR [rdi+0x18]
  4299a4:	ret    
  4299a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4299af:	nop

00000000004299b0 <flatcc_builder_offset_vector_count@@Base>:
  4299b0:	mov    rax,QWORD PTR [rdi+0x30]
  4299b4:	mov    eax,DWORD PTR [rax+0x14]
  4299b7:	ret    
  4299b8:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004299c0 <flatcc_builder_table_add_union@@Base>:
  4299c0:	push   rbp
  4299c1:	push   r15
  4299c3:	push   r14
  4299c5:	push   rbx
  4299c6:	push   rax
  4299c7:	mov    rax,QWORD PTR [rdi+0x30]
  4299cb:	cmp    WORD PTR [rax+0xe],0x3
  4299d0:	jne    429a2e <flatcc_builder_table_add_union@@Base+0x6e>
  4299d2:	mov    r14,rdx
  4299d5:	mov    ebp,esi
  4299d7:	mov    r15,rdi
  4299da:	mov    rbx,rdx
  4299dd:	shr    rbx,0x20
  4299e1:	test   r14b,r14b
  4299e4:	jne    4299ea <flatcc_builder_table_add_union@@Base+0x2a>
  4299e6:	test   ebx,ebx
  4299e8:	jne    429a4d <flatcc_builder_table_add_union@@Base+0x8d>
  4299ea:	test   ebx,ebx
  4299ec:	je     429a03 <flatcc_builder_table_add_union@@Base+0x43>
  4299ee:	mov    rdi,r15
  4299f1:	mov    esi,ebp
  4299f3:	call   429ab0 <flatcc_builder_table_add_offset@@Base>
  4299f8:	test   rax,rax
  4299fb:	je     429a8b <flatcc_builder_table_add_union@@Base+0xcb>
  429a01:	mov    DWORD PTR [rax],ebx
  429a03:	dec    ebp
  429a05:	mov    edx,0x1
  429a0a:	mov    rdi,r15
  429a0d:	mov    esi,ebp
  429a0f:	mov    ecx,0x1
  429a14:	call   429c10 <flatcc_builder_table_add@@Base>
  429a19:	test   rax,rax
  429a1c:	je     429a6c <flatcc_builder_table_add_union@@Base+0xac>
  429a1e:	mov    BYTE PTR [rax],r14b
  429a21:	xor    eax,eax
  429a23:	add    rsp,0x8
  429a27:	pop    rbx
  429a28:	pop    r14
  429a2a:	pop    r15
  429a2c:	pop    rbp
  429a2d:	ret    
  429a2e:	lea    rdi,[rip+0x1f5fc]        # 449031 <flatcc_builder_padding_base@@Base+0xa71>
  429a35:	lea    rsi,[rip+0x1edc6]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  429a3c:	lea    rcx,[rip+0x1f8e0]        # 449323 <flatcc_builder_padding_base@@Base+0xd63>
  429a43:	mov    edx,0x5ee
  429a48:	call   4060f0 <__assert_fail@plt>
  429a4d:	lea    rdi,[rip+0x1f927]        # 44937b <flatcc_builder_padding_base@@Base+0xdbb>
  429a54:	lea    rsi,[rip+0x1eda7]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  429a5b:	lea    rcx,[rip+0x1f8c1]        # 449323 <flatcc_builder_padding_base@@Base+0xd63>
  429a62:	mov    edx,0x5ef
  429a67:	call   4060f0 <__assert_fail@plt>
  429a6c:	lea    rdi,[rip+0x1f934]        # 4493a7 <flatcc_builder_padding_base@@Base+0xde7>
  429a73:	lea    rsi,[rip+0x1ed88]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  429a7a:	lea    rcx,[rip+0x1f8a2]        # 449323 <flatcc_builder_padding_base@@Base+0xd63>
  429a81:	mov    edx,0x5f6
  429a86:	call   4060f0 <__assert_fail@plt>
  429a8b:	lea    rdi,[rip+0x1f90b]        # 44939d <flatcc_builder_padding_base@@Base+0xddd>
  429a92:	lea    rsi,[rip+0x1ed69]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  429a99:	lea    rcx,[rip+0x1f883]        # 449323 <flatcc_builder_padding_base@@Base+0xd63>
  429aa0:	mov    edx,0x5f2
  429aa5:	call   4060f0 <__assert_fail@plt>
  429aaa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000429ab0 <flatcc_builder_table_add_offset@@Base>:
  429ab0:	push   rbp
  429ab1:	push   r15
  429ab3:	push   r14
  429ab5:	push   rbx
  429ab6:	push   rax
  429ab7:	mov    rax,QWORD PTR [rdi+0x30]
  429abb:	cmp    WORD PTR [rax+0xe],0x3
  429ac0:	jne    429bae <flatcc_builder_table_add_offset@@Base+0xfe>
  429ac6:	mov    r14d,esi
  429ac9:	cmp    esi,0x7ffd
  429acf:	jae    429bcd <flatcc_builder_table_add_offset@@Base+0x11d>
  429ad5:	mov    rbx,rdi
  429ad8:	mov    rax,QWORD PTR [rdi+0x8]
  429adc:	movsxd rcx,r14d
  429adf:	cmp    WORD PTR [rax+rcx*2],0x0
  429ae4:	jne    429bec <flatcc_builder_table_add_offset@@Base+0x13c>
  429aea:	mov    ecx,DWORD PTR [rbx+0x14]
  429aed:	xor    ecx,r14d
  429af0:	imul   ecx,ecx,0x9e3779b1
  429af6:	xor    ecx,0x4
  429af9:	imul   ecx,ecx,0x9e3779b1
  429aff:	mov    DWORD PTR [rbx+0x14],ecx
  429b02:	mov    ebp,DWORD PTR [rbx+0x20]
  429b05:	mov    ecx,DWORD PTR [rbx+0x24]
  429b08:	add    ebp,0x3
  429b0b:	and    ebp,0xfffffffc
  429b0e:	lea    r15,[rbp+0x4]
  429b12:	mov    DWORD PTR [rbx+0x20],r15d
  429b16:	cmp    ecx,r15d
  429b19:	jae    429b78 <flatcc_builder_table_add_offset@@Base+0xc8>
  429b1b:	mov    eax,r15d
  429b1e:	and    eax,0xfffffffc
  429b21:	lea    rsi,[rbx+0x68]
  429b25:	mov    rdi,QWORD PTR [rbx+0x40]
  429b29:	mov    edx,DWORD PTR [rbx+0x28]
  429b2c:	add    rdx,rax
  429b2f:	mov    ecx,0x1
  429b34:	mov    r8d,0x1
  429b3a:	call   QWORD PTR [rbx+0x50]
  429b3d:	test   eax,eax
  429b3f:	je     429b45 <flatcc_builder_table_add_offset@@Base+0x95>
  429b41:	xor    ebp,ebp
  429b43:	jmp    429ba0 <flatcc_builder_table_add_offset@@Base+0xf0>
  429b45:	mov    eax,DWORD PTR [rbx+0x28]
  429b48:	mov    rcx,rax
  429b4b:	add    rcx,QWORD PTR [rbx+0x68]
  429b4f:	mov    QWORD PTR [rbx+0x18],rcx
  429b53:	mov    ecx,DWORD PTR [rbx+0x70]
  429b56:	sub    ecx,eax
  429b58:	cmp    ecx,0xfffc
  429b5e:	mov    eax,0xfffc
  429b63:	cmovb  eax,ecx
  429b66:	mov    DWORD PTR [rbx+0x24],eax
  429b69:	mov    rax,QWORD PTR [rbx+0x30]
  429b6d:	mov    DWORD PTR [rax+0x4],0xfffc
  429b74:	mov    rax,QWORD PTR [rbx+0x8]
  429b78:	movzx  ecx,r14w
  429b7c:	mov    WORD PTR [rax+rcx*2],r15w
  429b81:	cmp    WORD PTR [rbx+0x10],cx
  429b85:	ja     429b8f <flatcc_builder_table_add_offset@@Base+0xdf>
  429b87:	inc    r14d
  429b8a:	mov    WORD PTR [rbx+0x10],r14w
  429b8f:	mov    rax,QWORD PTR [rbx]
  429b92:	lea    rcx,[rax+0x2]
  429b96:	mov    QWORD PTR [rbx],rcx
  429b99:	mov    WORD PTR [rax],bp
  429b9c:	add    rbp,QWORD PTR [rbx+0x18]
  429ba0:	mov    rax,rbp
  429ba3:	add    rsp,0x8
  429ba7:	pop    rbx
  429ba8:	pop    r14
  429baa:	pop    r15
  429bac:	pop    rbp
  429bad:	ret    
  429bae:	lea    rdi,[rip+0x1f47c]        # 449031 <flatcc_builder_padding_base@@Base+0xa71>
  429bb5:	lea    rsi,[rip+0x1ec46]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  429bbc:	lea    rcx,[rip+0x1fb62]        # 449725 <flatcc_builder_padding_base@@Base+0x1165>
  429bc3:	mov    edx,0x713
  429bc8:	call   4060f0 <__assert_fail@plt>
  429bcd:	lea    rdi,[rip+0x1fad1]        # 4496a5 <flatcc_builder_padding_base@@Base+0x10e5>
  429bd4:	lea    rsi,[rip+0x1ec27]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  429bdb:	lea    rcx,[rip+0x1fb43]        # 449725 <flatcc_builder_padding_base@@Base+0x1165>
  429be2:	mov    edx,0x714
  429be7:	call   4060f0 <__assert_fail@plt>
  429bec:	lea    rdi,[rip+0x157a8]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  429bf3:	lea    rsi,[rip+0x1ec08]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  429bfa:	lea    rcx,[rip+0x1fb24]        # 449725 <flatcc_builder_padding_base@@Base+0x1165>
  429c01:	mov    edx,0x71b
  429c06:	call   4060f0 <__assert_fail@plt>
  429c0b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000429c10 <flatcc_builder_table_add@@Base>:
  429c10:	push   rbp
  429c11:	push   r14
  429c13:	push   rbx
  429c14:	mov    rax,QWORD PTR [rdi+0x30]
  429c18:	cmp    WORD PTR [rax+0xe],0x3
  429c1d:	jne    429d08 <flatcc_builder_table_add@@Base+0xf8>
  429c23:	mov    r14d,esi
  429c26:	cmp    esi,0x7ffd
  429c2c:	jae    429d27 <flatcc_builder_table_add@@Base+0x117>
  429c32:	mov    rbx,rdi
  429c35:	cmp    WORD PTR [rdi+0xea],cx
  429c3c:	jae    429c45 <flatcc_builder_table_add@@Base+0x35>
  429c3e:	mov    WORD PTR [rbx+0xea],cx
  429c45:	mov    rsi,QWORD PTR [rbx+0x8]
  429c49:	movsxd rax,r14d
  429c4c:	cmp    WORD PTR [rsi+rax*2],0x0
  429c51:	jne    429d46 <flatcc_builder_table_add@@Base+0x136>
  429c57:	mov    eax,DWORD PTR [rbx+0x14]
  429c5a:	xor    eax,r14d
  429c5d:	imul   eax,eax,0x9e3779b1
  429c63:	xor    eax,edx
  429c65:	imul   eax,eax,0x9e3779b1
  429c6b:	mov    DWORD PTR [rbx+0x14],eax
  429c6e:	mov    eax,DWORD PTR [rbx+0x20]
  429c71:	movzx  ebp,cx
  429c74:	lea    eax,[rax+rbp*1]
  429c77:	add    eax,0xffffffff
  429c7a:	neg    ebp
  429c7c:	and    ebp,eax
  429c7e:	add    edx,ebp
  429c80:	mov    DWORD PTR [rbx+0x20],edx
  429c83:	cmp    edx,DWORD PTR [rbx+0x24]
  429c86:	jb     429ce4 <flatcc_builder_table_add@@Base+0xd4>
  429c88:	inc    edx
  429c8a:	lea    rsi,[rbx+0x68]
  429c8e:	mov    rdi,QWORD PTR [rbx+0x40]
  429c92:	mov    eax,DWORD PTR [rbx+0x28]
  429c95:	add    rax,rdx
  429c98:	mov    rdx,rax
  429c9b:	mov    ecx,0x1
  429ca0:	mov    r8d,0x1
  429ca6:	call   QWORD PTR [rbx+0x50]
  429ca9:	test   eax,eax
  429cab:	je     429cb1 <flatcc_builder_table_add@@Base+0xa1>
  429cad:	xor    eax,eax
  429caf:	jmp    429d03 <flatcc_builder_table_add@@Base+0xf3>
  429cb1:	mov    eax,DWORD PTR [rbx+0x28]
  429cb4:	mov    rcx,rax
  429cb7:	add    rcx,QWORD PTR [rbx+0x68]
  429cbb:	mov    QWORD PTR [rbx+0x18],rcx
  429cbf:	mov    ecx,DWORD PTR [rbx+0x70]
  429cc2:	sub    ecx,eax
  429cc4:	cmp    ecx,0xfffc
  429cca:	mov    eax,0xfffc
  429ccf:	cmovb  eax,ecx
  429cd2:	mov    DWORD PTR [rbx+0x24],eax
  429cd5:	mov    rax,QWORD PTR [rbx+0x30]
  429cd9:	mov    DWORD PTR [rax+0x4],0xfffc
  429ce0:	mov    rsi,QWORD PTR [rbx+0x8]
  429ce4:	mov    eax,ebp
  429ce6:	add    ebp,0x4
  429ce9:	movzx  ecx,r14w
  429ced:	mov    WORD PTR [rsi+rcx*2],bp
  429cf1:	cmp    WORD PTR [rbx+0x10],cx
  429cf5:	ja     429cff <flatcc_builder_table_add@@Base+0xef>
  429cf7:	inc    r14d
  429cfa:	mov    WORD PTR [rbx+0x10],r14w
  429cff:	add    rax,QWORD PTR [rbx+0x18]
  429d03:	pop    rbx
  429d04:	pop    r14
  429d06:	pop    rbp
  429d07:	ret    
  429d08:	lea    rdi,[rip+0x1f322]        # 449031 <flatcc_builder_padding_base@@Base+0xa71>
  429d0f:	lea    rsi,[rip+0x1eaec]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  429d16:	lea    rcx,[rip+0x1f93e]        # 44965b <flatcc_builder_padding_base@@Base+0x109b>
  429d1d:	mov    edx,0x6ed
  429d22:	call   4060f0 <__assert_fail@plt>
  429d27:	lea    rdi,[rip+0x1f977]        # 4496a5 <flatcc_builder_padding_base@@Base+0x10e5>
  429d2e:	lea    rsi,[rip+0x1eacd]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  429d35:	lea    rcx,[rip+0x1f91f]        # 44965b <flatcc_builder_padding_base@@Base+0x109b>
  429d3c:	mov    edx,0x6ee
  429d41:	call   4060f0 <__assert_fail@plt>
  429d46:	lea    rdi,[rip+0x1564e]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  429d4d:	lea    rsi,[rip+0x1eaae]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  429d54:	lea    rcx,[rip+0x1f900]        # 44965b <flatcc_builder_padding_base@@Base+0x109b>
  429d5b:	mov    edx,0x6f8
  429d60:	call   4060f0 <__assert_fail@plt>
  429d65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429d6f:	nop

0000000000429d70 <flatcc_builder_table_add_union_vector@@Base>:
  429d70:	push   r15
  429d72:	push   r14
  429d74:	push   r12
  429d76:	push   rbx
  429d77:	push   rax
  429d78:	mov    rax,QWORD PTR [rdi+0x30]
  429d7c:	cmp    WORD PTR [rax+0xe],0x3
  429d81:	jne    429dd7 <flatcc_builder_table_add_union_vector@@Base+0x67>
  429d83:	mov    rbx,rdx
  429d86:	mov    r12,rdx
  429d89:	shr    r12,0x20
  429d8d:	test   ebx,ebx
  429d8f:	setne  al
  429d92:	test   r12d,r12d
  429d95:	sete   cl
  429d98:	xor    cl,al
  429d9a:	je     429df6 <flatcc_builder_table_add_union_vector@@Base+0x86>
  429d9c:	test   ebx,ebx
  429d9e:	je     429dc9 <flatcc_builder_table_add_union_vector@@Base+0x59>
  429da0:	mov    r14d,esi
  429da3:	mov    r15,rdi
  429da6:	lea    esi,[r14-0x1]
  429daa:	call   429ab0 <flatcc_builder_table_add_offset@@Base>
  429daf:	test   rax,rax
  429db2:	je     429e15 <flatcc_builder_table_add_union_vector@@Base+0xa5>
  429db4:	mov    DWORD PTR [rax],ebx
  429db6:	mov    rdi,r15
  429db9:	mov    esi,r14d
  429dbc:	call   429ab0 <flatcc_builder_table_add_offset@@Base>
  429dc1:	test   rax,rax
  429dc4:	je     429e34 <flatcc_builder_table_add_union_vector@@Base+0xc4>
  429dc6:	mov    DWORD PTR [rax],r12d
  429dc9:	xor    eax,eax
  429dcb:	add    rsp,0x8
  429dcf:	pop    rbx
  429dd0:	pop    r12
  429dd2:	pop    r14
  429dd4:	pop    r15
  429dd6:	ret    
  429dd7:	lea    rdi,[rip+0x1f253]        # 449031 <flatcc_builder_padding_base@@Base+0xa71>
  429dde:	lea    rsi,[rip+0x1ea1d]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  429de5:	lea    rcx,[rip+0x1f5c7]        # 4493b3 <flatcc_builder_padding_base@@Base+0xdf3>
  429dec:	mov    edx,0x600
  429df1:	call   4060f0 <__assert_fail@plt>
  429df6:	lea    rdi,[rip+0x1f619]        # 449416 <flatcc_builder_padding_base@@Base+0xe56>
  429dfd:	lea    rsi,[rip+0x1e9fe]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  429e04:	lea    rcx,[rip+0x1f5a8]        # 4493b3 <flatcc_builder_padding_base@@Base+0xdf3>
  429e0b:	mov    edx,0x601
  429e10:	call   4060f0 <__assert_fail@plt>
  429e15:	lea    rdi,[rip+0x1f581]        # 44939d <flatcc_builder_padding_base@@Base+0xddd>
  429e1c:	lea    rsi,[rip+0x1e9df]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  429e23:	lea    rcx,[rip+0x1f589]        # 4493b3 <flatcc_builder_padding_base@@Base+0xdf3>
  429e2a:	mov    edx,0x604
  429e2f:	call   4060f0 <__assert_fail@plt>
  429e34:	lea    rdi,[rip+0x1f562]        # 44939d <flatcc_builder_padding_base@@Base+0xddd>
  429e3b:	lea    rsi,[rip+0x1e9c0]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  429e42:	lea    rcx,[rip+0x1f56a]        # 4493b3 <flatcc_builder_padding_base@@Base+0xdf3>
  429e49:	mov    edx,0x608
  429e4e:	call   4060f0 <__assert_fail@plt>
  429e53:	nop    WORD PTR cs:[rax+rax*1+0x0]
  429e5d:	nop    DWORD PTR [rax]

0000000000429e60 <flatcc_builder_create_union_vector@@Base>:
  429e60:	push   r15
  429e62:	push   r14
  429e64:	push   r13
  429e66:	push   r12
  429e68:	push   rbx
  429e69:	mov    r14,rdx
  429e6c:	mov    r15,rsi
  429e6f:	mov    rbx,rdi
  429e72:	mov    esi,0x4
  429e77:	call   4276d0 <flatcc_builder_start_buffer@@Base+0xe0>
  429e7c:	test   eax,eax
  429e7e:	je     429e90 <flatcc_builder_create_union_vector@@Base+0x30>
  429e80:	xor    r14d,r14d
  429e83:	mov    rax,r14
  429e86:	pop    rbx
  429e87:	pop    r12
  429e89:	pop    r13
  429e8b:	pop    r14
  429e8d:	pop    r15
  429e8f:	ret    
  429e90:	mov    rax,QWORD PTR [rbx+0x30]
  429e94:	mov    DWORD PTR [rax+0x10],0x4
  429e9b:	mov    rax,QWORD PTR [rbx+0x30]
  429e9f:	mov    DWORD PTR [rax+0x14],0x0
  429ea6:	mov    rax,QWORD PTR [rbx+0x30]
  429eaa:	mov    WORD PTR [rax+0xe],0x5
  429eb0:	mov    ecx,DWORD PTR [rbx+0x28]
  429eb3:	mov    edx,DWORD PTR [rbx+0x70]
  429eb6:	sub    edx,ecx
  429eb8:	add    rcx,QWORD PTR [rbx+0x68]
  429ebc:	mov    QWORD PTR [rbx+0x18],rcx
  429ec0:	cmp    edx,0xfffffffc
  429ec3:	mov    ecx,0xfffffffc
  429ec8:	cmovb  ecx,edx
  429ecb:	mov    DWORD PTR [rbx+0x24],ecx
  429ece:	mov    DWORD PTR [rax+0x4],0xfffffffc
  429ed5:	mov    ecx,DWORD PTR [rax+0x14]
  429ed8:	add    ecx,r14d
  429edb:	jb     42a148 <flatcc_builder_create_union_vector@@Base+0x2e8>
  429ee1:	cmp    ecx,0x40000000
  429ee7:	jae    42a148 <flatcc_builder_create_union_vector@@Base+0x2e8>
  429eed:	mov    DWORD PTR [rax+0x14],ecx
  429ef0:	mov    r12d,DWORD PTR [rbx+0x20]
  429ef4:	mov    eax,DWORD PTR [rbx+0x24]
  429ef7:	lea    ecx,[r12+r14*4]
  429efb:	mov    DWORD PTR [rbx+0x20],ecx
  429efe:	cmp    ecx,eax
  429f00:	jae    429f10 <flatcc_builder_create_union_vector@@Base+0xb0>
  429f02:	mov    rsi,QWORD PTR [rbx+0x18]
  429f06:	add    r12,rsi
  429f09:	jne    429f6b <flatcc_builder_create_union_vector@@Base+0x10b>
  429f0b:	jmp    429e80 <flatcc_builder_create_union_vector@@Base+0x20>
  429f10:	inc    ecx
  429f12:	lea    rsi,[rbx+0x68]
  429f16:	mov    rdi,QWORD PTR [rbx+0x40]
  429f1a:	mov    edx,DWORD PTR [rbx+0x28]
  429f1d:	add    rdx,rcx
  429f20:	mov    ecx,0x1
  429f25:	mov    r8d,0x1
  429f2b:	call   QWORD PTR [rbx+0x50]
  429f2e:	test   eax,eax
  429f30:	jne    429e80 <flatcc_builder_create_union_vector@@Base+0x20>
  429f36:	mov    eax,DWORD PTR [rbx+0x28]
  429f39:	mov    rsi,rax
  429f3c:	add    rsi,QWORD PTR [rbx+0x68]
  429f40:	mov    QWORD PTR [rbx+0x18],rsi
  429f44:	mov    ecx,DWORD PTR [rbx+0x70]
  429f47:	sub    ecx,eax
  429f49:	cmp    ecx,0xfffffffc
  429f4c:	mov    eax,0xfffffffc
  429f51:	cmovb  eax,ecx
  429f54:	mov    DWORD PTR [rbx+0x24],eax
  429f57:	mov    rcx,QWORD PTR [rbx+0x30]
  429f5b:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  429f62:	add    r12,rsi
  429f65:	je     429e80 <flatcc_builder_create_union_vector@@Base+0x20>
  429f6b:	mov    r13d,DWORD PTR [rbx+0x20]
  429f6f:	lea    ecx,[r14+r13*1]
  429f73:	mov    DWORD PTR [rbx+0x20],ecx
  429f76:	cmp    ecx,eax
  429f78:	jb     429fcc <flatcc_builder_create_union_vector@@Base+0x16c>
  429f7a:	inc    ecx
  429f7c:	lea    rsi,[rbx+0x68]
  429f80:	mov    rdi,QWORD PTR [rbx+0x40]
  429f84:	mov    edx,DWORD PTR [rbx+0x28]
  429f87:	add    rdx,rcx
  429f8a:	mov    ecx,0x1
  429f8f:	mov    r8d,0x1
  429f95:	call   QWORD PTR [rbx+0x50]
  429f98:	test   eax,eax
  429f9a:	jne    429e80 <flatcc_builder_create_union_vector@@Base+0x20>
  429fa0:	mov    eax,DWORD PTR [rbx+0x28]
  429fa3:	mov    rsi,rax
  429fa6:	add    rsi,QWORD PTR [rbx+0x68]
  429faa:	mov    QWORD PTR [rbx+0x18],rsi
  429fae:	mov    ecx,DWORD PTR [rbx+0x70]
  429fb1:	sub    ecx,eax
  429fb3:	cmp    ecx,0xfffffffc
  429fb6:	mov    eax,0xfffffffc
  429fbb:	cmovb  eax,ecx
  429fbe:	mov    DWORD PTR [rbx+0x24],eax
  429fc1:	mov    rax,QWORD PTR [rbx+0x30]
  429fc5:	mov    DWORD PTR [rax+0x4],0xfffffffc
  429fcc:	mov    r12,rsi
  429fcf:	add    r12,r13
  429fd2:	je     429e80 <flatcc_builder_create_union_vector@@Base+0x20>
  429fd8:	test   r14,r14
  429fdb:	je     42a098 <flatcc_builder_create_union_vector@@Base+0x238>
  429fe1:	lea    rcx,[r14-0x1]
  429fe5:	mov    r8d,r14d
  429fe8:	and    r8d,0x3
  429fec:	cmp    rcx,0x3
  429ff0:	jae    429ffe <flatcc_builder_create_union_vector@@Base+0x19e>
  429ff2:	xor    ecx,ecx
  429ff4:	test   r8,r8
  429ff7:	jne    42a067 <flatcc_builder_create_union_vector@@Base+0x207>
  429ff9:	jmp    42a098 <flatcc_builder_create_union_vector@@Base+0x238>
  429ffe:	mov    rdx,r14
  42a001:	sub    rdx,r8
  42a004:	lea    rdi,[rsi+r13*1]
  42a008:	add    rdi,0x3
  42a00c:	xor    ecx,ecx
  42a00e:	xchg   ax,ax
  42a010:	movzx  eax,BYTE PTR [r15+rcx*8]
  42a015:	mov    BYTE PTR [rdi+rcx*1-0x3],al
  42a019:	mov    eax,DWORD PTR [r15+rcx*8+0x4]
  42a01e:	mov    DWORD PTR [rsi+rcx*4],eax
  42a021:	movzx  eax,BYTE PTR [r15+rcx*8+0x8]
  42a027:	mov    BYTE PTR [rdi+rcx*1-0x2],al
  42a02b:	mov    eax,DWORD PTR [r15+rcx*8+0xc]
  42a030:	mov    DWORD PTR [rsi+rcx*4+0x4],eax
  42a034:	movzx  eax,BYTE PTR [r15+rcx*8+0x10]
  42a03a:	mov    BYTE PTR [rdi+rcx*1-0x1],al
  42a03e:	mov    eax,DWORD PTR [r15+rcx*8+0x14]
  42a043:	mov    DWORD PTR [rsi+rcx*4+0x8],eax
  42a047:	movzx  eax,BYTE PTR [r15+rcx*8+0x18]
  42a04d:	mov    BYTE PTR [rdi+rcx*1],al
  42a050:	mov    eax,DWORD PTR [r15+rcx*8+0x1c]
  42a055:	mov    DWORD PTR [rsi+rcx*4+0xc],eax
  42a059:	add    rcx,0x4
  42a05d:	cmp    rdx,rcx
  42a060:	jne    42a010 <flatcc_builder_create_union_vector@@Base+0x1b0>
  42a062:	test   r8,r8
  42a065:	je     42a098 <flatcc_builder_create_union_vector@@Base+0x238>
  42a067:	lea    rdx,[rsi+rcx*4]
  42a06b:	lea    rdi,[r15+rcx*8]
  42a06f:	add    rdi,0x4
  42a073:	add    r13,rcx
  42a076:	add    r13,rsi
  42a079:	xor    ecx,ecx
  42a07b:	nop    DWORD PTR [rax+rax*1+0x0]
  42a080:	movzx  eax,BYTE PTR [rdi+rcx*8-0x4]
  42a085:	mov    BYTE PTR [r13+rcx*1+0x0],al
  42a08a:	mov    eax,DWORD PTR [rdi+rcx*8]
  42a08d:	mov    DWORD PTR [rdx+rcx*4],eax
  42a090:	inc    rcx
  42a093:	cmp    r8,rcx
  42a096:	jne    42a080 <flatcc_builder_create_union_vector@@Base+0x220>
  42a098:	mov    rdi,rbx
  42a09b:	mov    rdx,r14
  42a09e:	mov    rcx,r12
  42a0a1:	call   4296b0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  42a0a6:	mov    r15d,eax
  42a0a9:	test   eax,eax
  42a0ab:	je     42a0d1 <flatcc_builder_create_union_vector@@Base+0x271>
  42a0ad:	mov    ecx,0x1
  42a0b2:	mov    r9d,0xffffffff
  42a0b8:	mov    rdi,rbx
  42a0bb:	mov    rsi,r12
  42a0be:	mov    rdx,r14
  42a0c1:	mov    r8d,0x1
  42a0c7:	call   429430 <flatcc_builder_create_vector@@Base>
  42a0cc:	mov    r14d,eax
  42a0cf:	jmp    42a0d4 <flatcc_builder_create_union_vector@@Base+0x274>
  42a0d1:	xor    r14d,r14d
  42a0d4:	shl    r15,0x20
  42a0d8:	mov    rdi,QWORD PTR [rbx+0x18]
  42a0dc:	mov    edx,DWORD PTR [rbx+0x20]
  42a0df:	xor    esi,esi
  42a0e1:	call   406100 <memset@plt>
  42a0e6:	mov    rax,QWORD PTR [rbx+0x30]
  42a0ea:	mov    ecx,DWORD PTR [rax+0x8]
  42a0ed:	mov    DWORD PTR [rbx+0x20],ecx
  42a0f0:	mov    ecx,DWORD PTR [rax]
  42a0f2:	mov    DWORD PTR [rbx+0x28],ecx
  42a0f5:	mov    edx,DWORD PTR [rax+0x4]
  42a0f8:	mov    rsi,rcx
  42a0fb:	add    rsi,QWORD PTR [rbx+0x68]
  42a0ff:	mov    QWORD PTR [rbx+0x18],rsi
  42a103:	mov    esi,DWORD PTR [rbx+0x70]
  42a106:	sub    esi,ecx
  42a108:	cmp    esi,edx
  42a10a:	cmova  esi,edx
  42a10d:	mov    DWORD PTR [rbx+0x24],esi
  42a110:	movzx  ecx,WORD PTR [rbx+0xea]
  42a117:	cmp    WORD PTR [rbx+0xe8],cx
  42a11e:	jae    42a127 <flatcc_builder_create_union_vector@@Base+0x2c7>
  42a120:	mov    WORD PTR [rbx+0xe8],cx
  42a127:	or     r14,r15
  42a12a:	movzx  ecx,WORD PTR [rax+0xc]
  42a12e:	mov    WORD PTR [rbx+0xea],cx
  42a135:	add    rax,0xffffffffffffffdc
  42a139:	mov    QWORD PTR [rbx+0x30],rax
  42a13d:	dec    DWORD PTR [rbx+0x104]
  42a143:	jmp    429e83 <flatcc_builder_create_union_vector@@Base+0x23>
  42a148:	lea    rdi,[rip+0x1f77c]        # 4498cb <flatcc_builder_padding_base@@Base+0x130b>
  42a14f:	lea    rsi,[rip+0x1e6ac]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  42a156:	lea    rcx,[rip+0x1f789]        # 4498e6 <flatcc_builder_padding_base@@Base+0x1326>
  42a15d:	mov    edx,0x37c
  42a162:	call   4060f0 <__assert_fail@plt>
  42a167:	nop    WORD PTR [rax+rax*1+0x0]

000000000042a170 <flatcc_builder_create_union_vector_direct@@Base>:
  42a170:	push   r15
  42a172:	push   r14
  42a174:	push   r12
  42a176:	push   rbx
  42a177:	push   rax
  42a178:	mov    r14,rcx
  42a17b:	mov    r15,rsi
  42a17e:	mov    r12,rdi
  42a181:	mov    rsi,rdx
  42a184:	mov    rdx,rcx
  42a187:	mov    rcx,r15
  42a18a:	call   4296b0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  42a18f:	mov    ebx,eax
  42a191:	test   eax,eax
  42a193:	je     42a1b8 <flatcc_builder_create_union_vector_direct@@Base+0x48>
  42a195:	mov    ecx,0x1
  42a19a:	mov    r9d,0xffffffff
  42a1a0:	mov    rdi,r12
  42a1a3:	mov    rsi,r15
  42a1a6:	mov    rdx,r14
  42a1a9:	mov    r8d,0x1
  42a1af:	call   429430 <flatcc_builder_create_vector@@Base>
  42a1b4:	mov    eax,eax
  42a1b6:	jmp    42a1ba <flatcc_builder_create_union_vector_direct@@Base+0x4a>
  42a1b8:	xor    eax,eax
  42a1ba:	shl    rbx,0x20
  42a1be:	or     rbx,rax
  42a1c1:	mov    rax,rbx
  42a1c4:	add    rsp,0x8
  42a1c8:	pop    rbx
  42a1c9:	pop    r12
  42a1cb:	pop    r14
  42a1cd:	pop    r15
  42a1cf:	ret    

000000000042a1d0 <flatcc_builder_start_union_vector@@Base>:
  42a1d0:	push   rbx
  42a1d1:	mov    rbx,rdi
  42a1d4:	mov    esi,0x4
  42a1d9:	call   4276d0 <flatcc_builder_start_buffer@@Base+0xe0>
  42a1de:	mov    ecx,eax
  42a1e0:	mov    eax,0xffffffff
  42a1e5:	test   ecx,ecx
  42a1e7:	je     42a1eb <flatcc_builder_start_union_vector@@Base+0x1b>
  42a1e9:	pop    rbx
  42a1ea:	ret    
  42a1eb:	mov    rax,QWORD PTR [rbx+0x30]
  42a1ef:	mov    DWORD PTR [rax+0x10],0x8
  42a1f6:	mov    rax,QWORD PTR [rbx+0x30]
  42a1fa:	mov    DWORD PTR [rax+0x14],0x0
  42a201:	mov    rax,QWORD PTR [rbx+0x30]
  42a205:	mov    WORD PTR [rax+0xe],0x7
  42a20b:	mov    ecx,DWORD PTR [rbx+0x28]
  42a20e:	mov    edx,DWORD PTR [rbx+0x70]
  42a211:	sub    edx,ecx
  42a213:	add    rcx,QWORD PTR [rbx+0x68]
  42a217:	mov    QWORD PTR [rbx+0x18],rcx
  42a21b:	cmp    edx,0xfffffffc
  42a21e:	mov    ecx,0xfffffffc
  42a223:	cmovb  ecx,edx
  42a226:	mov    DWORD PTR [rbx+0x24],ecx
  42a229:	mov    DWORD PTR [rax+0x4],0xfffffffc
  42a230:	xor    eax,eax
  42a232:	pop    rbx
  42a233:	ret    
  42a234:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a23e:	xchg   ax,ax

000000000042a240 <flatcc_builder_end_union_vector@@Base>:
  42a240:	push   rbp
  42a241:	push   r15
  42a243:	push   r14
  42a245:	push   r13
  42a247:	push   r12
  42a249:	push   rbx
  42a24a:	push   rax
  42a24b:	mov    rax,QWORD PTR [rdi+0x30]
  42a24f:	cmp    WORD PTR [rax+0xe],0x7
  42a254:	jne    42a644 <flatcc_builder_end_union_vector@@Base+0x404>
  42a25a:	mov    r13,rdi
  42a25d:	mov    r14d,DWORD PTR [rax+0x14]
  42a261:	lea    eax,[r14+r14*4]
  42a265:	mov    r12d,DWORD PTR [rdi+0x20]
  42a269:	add    eax,r12d
  42a26c:	mov    DWORD PTR [rdi+0x20],eax
  42a26f:	cmp    eax,DWORD PTR [rdi+0x24]
  42a272:	jae    42a27a <flatcc_builder_end_union_vector@@Base+0x3a>
  42a274:	mov    r8,QWORD PTR [r13+0x18]
  42a278:	jmp    42a2d1 <flatcc_builder_end_union_vector@@Base+0x91>
  42a27a:	inc    eax
  42a27c:	lea    rsi,[r13+0x68]
  42a280:	mov    rdi,QWORD PTR [r13+0x40]
  42a284:	mov    edx,DWORD PTR [r13+0x28]
  42a288:	add    rdx,rax
  42a28b:	mov    ecx,0x1
  42a290:	mov    r8d,0x1
  42a296:	call   QWORD PTR [r13+0x50]
  42a29a:	test   eax,eax
  42a29c:	jne    42a406 <flatcc_builder_end_union_vector@@Base+0x1c6>
  42a2a2:	mov    eax,DWORD PTR [r13+0x28]
  42a2a6:	mov    r8,rax
  42a2a9:	add    r8,QWORD PTR [r13+0x68]
  42a2ad:	mov    QWORD PTR [r13+0x18],r8
  42a2b1:	mov    ecx,DWORD PTR [r13+0x70]
  42a2b5:	sub    ecx,eax
  42a2b7:	cmp    ecx,0xfffffffc
  42a2ba:	mov    eax,0xfffffffc
  42a2bf:	cmovb  eax,ecx
  42a2c2:	mov    DWORD PTR [r13+0x24],eax
  42a2c6:	mov    rax,QWORD PTR [r13+0x30]
  42a2ca:	mov    DWORD PTR [rax+0x4],0xfffffffc
  42a2d1:	mov    rsi,r8
  42a2d4:	add    rsi,r12
  42a2d7:	je     42a406 <flatcc_builder_end_union_vector@@Base+0x1c6>
  42a2dd:	lea    r15,[rsi+r14*4]
  42a2e1:	test   r14d,r14d
  42a2e4:	je     42a3ca <flatcc_builder_end_union_vector@@Base+0x18a>
  42a2ea:	cmp    r14d,0x9
  42a2ee:	jae    42a499 <flatcc_builder_end_union_vector@@Base+0x259>
  42a2f4:	xor    r9d,r9d
  42a2f7:	mov    r11d,r14d
  42a2fa:	sub    r11d,r9d
  42a2fd:	mov    r10,r9
  42a300:	not    r10
  42a303:	add    r10,r14
  42a306:	and    r11,0x3
  42a30a:	je     42a350 <flatcc_builder_end_union_vector@@Base+0x110>
  42a30c:	mov    rdx,r9
  42a30f:	neg    rdx
  42a312:	lea    rbp,[r12+r9*4]
  42a316:	add    rbp,r8
  42a319:	lea    rbx,[r8+r9*8]
  42a31d:	add    rbx,0x4
  42a321:	lea    rax,[r9+r14*4]
  42a325:	add    rax,r12
  42a328:	add    rax,r8
  42a32b:	xor    edi,edi
  42a32d:	nop    DWORD PTR [rax]
  42a330:	movzx  ecx,BYTE PTR [rbx+rdi*8-0x4]
  42a335:	mov    BYTE PTR [rax+rdi*1],cl
  42a338:	mov    ecx,DWORD PTR [rbx+rdi*8]
  42a33b:	mov    DWORD PTR [rbp+rdi*4+0x0],ecx
  42a33f:	dec    rdx
  42a342:	inc    rdi
  42a345:	cmp    r11,rdi
  42a348:	jne    42a330 <flatcc_builder_end_union_vector@@Base+0xf0>
  42a34a:	neg    rdx
  42a34d:	mov    r9,rdx
  42a350:	cmp    r10,0x3
  42a354:	jb     42a3ca <flatcc_builder_end_union_vector@@Base+0x18a>
  42a356:	mov    rbp,r14
  42a359:	sub    rbp,r9
  42a35c:	lea    rcx,[r12+r9*4]
  42a360:	lea    rdx,[r8+rcx*1]
  42a364:	add    rdx,0xc
  42a368:	lea    rdi,[r8+r9*8]
  42a36c:	add    rdi,0x1c
  42a370:	lea    rcx,[r9+r14*4]
  42a374:	add    rcx,r12
  42a377:	add    rcx,r8
  42a37a:	add    rcx,0x3
  42a37e:	xor    ebx,ebx
  42a380:	movzx  eax,BYTE PTR [rdi+rbx*8-0x1c]
  42a385:	mov    BYTE PTR [rcx+rbx*1-0x3],al
  42a389:	mov    eax,DWORD PTR [rdi+rbx*8-0x18]
  42a38d:	mov    DWORD PTR [rdx+rbx*4-0xc],eax
  42a391:	movzx  eax,BYTE PTR [rdi+rbx*8-0x14]
  42a396:	mov    BYTE PTR [rcx+rbx*1-0x2],al
  42a39a:	mov    eax,DWORD PTR [rdi+rbx*8-0x10]
  42a39e:	mov    DWORD PTR [rdx+rbx*4-0x8],eax
  42a3a2:	movzx  eax,BYTE PTR [rdi+rbx*8-0xc]
  42a3a7:	mov    BYTE PTR [rcx+rbx*1-0x1],al
  42a3ab:	mov    eax,DWORD PTR [rdi+rbx*8-0x8]
  42a3af:	mov    DWORD PTR [rdx+rbx*4-0x4],eax
  42a3b3:	movzx  eax,BYTE PTR [rdi+rbx*8-0x4]
  42a3b8:	mov    BYTE PTR [rcx+rbx*1],al
  42a3bb:	mov    eax,DWORD PTR [rdi+rbx*8]
  42a3be:	mov    DWORD PTR [rdx+rbx*4],eax
  42a3c1:	add    rbx,0x4
  42a3c5:	cmp    rbp,rbx
  42a3c8:	jne    42a380 <flatcc_builder_end_union_vector@@Base+0x140>
  42a3ca:	mov    rdi,r13
  42a3cd:	mov    rdx,r14
  42a3d0:	mov    rcx,r15
  42a3d3:	vzeroupper 
  42a3d6:	call   4296b0 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
  42a3db:	mov    r12d,eax
  42a3de:	test   eax,eax
  42a3e0:	je     42a40b <flatcc_builder_end_union_vector@@Base+0x1cb>
  42a3e2:	mov    ecx,0x1
  42a3e7:	mov    r9d,0xffffffff
  42a3ed:	mov    rdi,r13
  42a3f0:	mov    rsi,r15
  42a3f3:	mov    rdx,r14
  42a3f6:	mov    r8d,0x1
  42a3fc:	call   429430 <flatcc_builder_create_vector@@Base>
  42a401:	mov    r14d,eax
  42a404:	jmp    42a40e <flatcc_builder_end_union_vector@@Base+0x1ce>
  42a406:	xor    r14d,r14d
  42a409:	jmp    42a487 <flatcc_builder_end_union_vector@@Base+0x247>
  42a40b:	xor    r14d,r14d
  42a40e:	shl    r12,0x20
  42a412:	mov    rdi,QWORD PTR [r13+0x18]
  42a416:	mov    edx,DWORD PTR [r13+0x20]
  42a41a:	xor    esi,esi
  42a41c:	call   406100 <memset@plt>
  42a421:	mov    rax,QWORD PTR [r13+0x30]
  42a425:	mov    ecx,DWORD PTR [rax+0x8]
  42a428:	mov    DWORD PTR [r13+0x20],ecx
  42a42c:	mov    ecx,DWORD PTR [rax]
  42a42e:	mov    DWORD PTR [r13+0x28],ecx
  42a432:	mov    edx,DWORD PTR [rax+0x4]
  42a435:	mov    rsi,rcx
  42a438:	add    rsi,QWORD PTR [r13+0x68]
  42a43c:	mov    QWORD PTR [r13+0x18],rsi
  42a440:	mov    esi,DWORD PTR [r13+0x70]
  42a444:	sub    esi,ecx
  42a446:	cmp    esi,edx
  42a448:	cmova  esi,edx
  42a44b:	mov    DWORD PTR [r13+0x24],esi
  42a44f:	movzx  ecx,WORD PTR [r13+0xea]
  42a457:	cmp    WORD PTR [r13+0xe8],cx
  42a45f:	jae    42a469 <flatcc_builder_end_union_vector@@Base+0x229>
  42a461:	mov    WORD PTR [r13+0xe8],cx
  42a469:	or     r14,r12
  42a46c:	movzx  ecx,WORD PTR [rax+0xc]
  42a470:	mov    WORD PTR [r13+0xea],cx
  42a478:	add    rax,0xffffffffffffffdc
  42a47c:	mov    QWORD PTR [r13+0x30],rax
  42a480:	dec    DWORD PTR [r13+0x104]
  42a487:	mov    rax,r14
  42a48a:	add    rsp,0x8
  42a48e:	pop    rbx
  42a48f:	pop    r12
  42a491:	pop    r13
  42a493:	pop    r14
  42a495:	pop    r15
  42a497:	pop    rbp
  42a498:	ret    
  42a499:	lea    rax,[r14-0x1]
  42a49d:	mov    ecx,0x8
  42a4a2:	mul    rcx
  42a4a5:	seto   cl
  42a4a8:	mov    rdx,r8
  42a4ab:	not    rdx
  42a4ae:	xor    r9d,r9d
  42a4b1:	cmp    rax,rdx
  42a4b4:	ja     42a2f7 <flatcc_builder_end_union_vector@@Base+0xb7>
  42a4ba:	test   cl,cl
  42a4bc:	jne    42a2f7 <flatcc_builder_end_union_vector@@Base+0xb7>
  42a4c2:	lea    rdx,[r8+0x4]
  42a4c6:	mov    rdi,rdx
  42a4c9:	not    rdi
  42a4cc:	cmp    rax,rdi
  42a4cf:	ja     42a2f7 <flatcc_builder_end_union_vector@@Base+0xb7>
  42a4d5:	test   cl,cl
  42a4d7:	jne    42a2f7 <flatcc_builder_end_union_vector@@Base+0xb7>
  42a4dd:	lea    rcx,[r14+r14*4]
  42a4e1:	add    rcx,r12
  42a4e4:	add    rcx,r8
  42a4e7:	lea    rbx,[r8+r14*8]
  42a4eb:	add    rbx,0xfffffffffffffff9
  42a4ef:	cmp    rbx,r15
  42a4f2:	seta   r11b
  42a4f6:	lea    rdi,[r8+r14*8]
  42a4fa:	cmp    r8,rcx
  42a4fd:	setb   r10b
  42a501:	cmp    rdi,r15
  42a504:	seta   al
  42a507:	cmp    rdx,rcx
  42a50a:	setb   bpl
  42a50e:	cmp    rsi,rbx
  42a511:	setb   cl
  42a514:	cmp    r8,r15
  42a517:	setb   BYTE PTR [rsp+0x7]
  42a51c:	cmp    rsi,rdi
  42a51f:	setb   bl
  42a522:	cmp    rdx,r15
  42a525:	setb   dl
  42a528:	xor    r9d,r9d
  42a52b:	test   r11b,r10b
  42a52e:	jne    42a2f7 <flatcc_builder_end_union_vector@@Base+0xb7>
  42a534:	and    al,bpl
  42a537:	jne    42a2f7 <flatcc_builder_end_union_vector@@Base+0xb7>
  42a53d:	and    cl,BYTE PTR [rsp+0x7]
  42a541:	jne    42a2f7 <flatcc_builder_end_union_vector@@Base+0xb7>
  42a547:	and    bl,dl
  42a549:	jne    42a2f7 <flatcc_builder_end_union_vector@@Base+0xb7>
  42a54f:	mov    eax,r14d
  42a552:	and    eax,0x7
  42a555:	test   rax,rax
  42a558:	mov    ecx,0x8
  42a55d:	cmovne rcx,rax
  42a561:	mov    r9,r14
  42a564:	sub    r9,rcx
  42a567:	vmovdqa ymm0,YMMWORD PTR [rip+0x16711]        # 440c80 <_IO_stdin_used@@Base+0x13c80>
  42a56f:	vmovdqa ymm1,YMMWORD PTR [rip+0x16729]        # 440ca0 <_IO_stdin_used@@Base+0x13ca0>
  42a577:	xor    eax,eax
  42a579:	vmovdqa xmm8,XMMWORD PTR [rip+0x1e23f]        # 4487c0 <flatcc_builder_padding_base@@Base+0x200>
  42a581:	vmovdqa xmm9,XMMWORD PTR [rip+0x1e247]        # 4487d0 <flatcc_builder_padding_base@@Base+0x210>
  42a589:	vpbroadcastq ymm4,QWORD PTR [rip+0x1e24e]        # 4487e0 <flatcc_builder_padding_base@@Base+0x220>
  42a592:	vpbroadcastq ymm5,QWORD PTR [rip+0x1e24d]        # 4487e8 <flatcc_builder_padding_base@@Base+0x228>
  42a59b:	mov    rdi,r8
  42a59e:	xchg   ax,ax
  42a5a0:	vmovdqu xmm6,XMMWORD PTR [rdi]
  42a5a4:	vmovdqu xmm7,XMMWORD PTR [rdi+0x10]
  42a5a9:	vmovdqu xmm2,XMMWORD PTR [rdi+0x20]
  42a5ae:	vmovdqu xmm3,XMMWORD PTR [rdi+0x30]
  42a5b3:	vpshufb xmm3,xmm3,xmm8
  42a5b8:	vpshufb xmm2,xmm2,xmm8
  42a5bd:	vpunpcklwd xmm2,xmm2,xmm3
  42a5c1:	vpshufb xmm3,xmm7,xmm9
  42a5c6:	vpshufb xmm6,xmm6,xmm9
  42a5cb:	vpunpcklwd xmm3,xmm6,xmm3
  42a5cf:	vpblendd xmm2,xmm3,xmm2,0x2
  42a5d5:	vmovq  QWORD PTR [r15+rax*1],xmm2
  42a5db:	vpsllq ymm2,ymm0,0x3
  42a5e0:	vmovq  xmm3,r8
  42a5e5:	vpbroadcastq ymm3,xmm3
  42a5ea:	vpaddq ymm2,ymm3,ymm2
  42a5ee:	vpaddq ymm2,ymm2,ymm4
  42a5f2:	vpsllq ymm6,ymm1,0x3
  42a5f7:	vpaddq ymm3,ymm3,ymm6
  42a5fb:	vpaddq ymm3,ymm3,ymm4
  42a5ff:	vpcmpeqd xmm6,xmm6,xmm6
  42a603:	vpgatherqd xmm7,DWORD PTR [ymm3*1+0x0],xmm6
  42a60d:	vpcmpeqd xmm3,xmm3,xmm3
  42a611:	vpgatherqd xmm6,DWORD PTR [ymm2*1+0x0],xmm3
  42a61b:	vmovdqu XMMWORD PTR [rsi+rax*4+0x10],xmm6
  42a621:	vmovdqu XMMWORD PTR [rsi+rax*4],xmm7
  42a626:	add    rax,0x8
  42a62a:	vpaddq ymm1,ymm1,ymm5
  42a62e:	vpaddq ymm0,ymm0,ymm5
  42a632:	add    rdi,0x40
  42a636:	cmp    r9,rax
  42a639:	jne    42a5a0 <flatcc_builder_end_union_vector@@Base+0x360>
  42a63f:	jmp    42a2f7 <flatcc_builder_end_union_vector@@Base+0xb7>
  42a644:	lea    rdi,[rip+0x1edf3]        # 44943e <flatcc_builder_padding_base@@Base+0xe7e>
  42a64b:	lea    rsi,[rip+0x1e1b0]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  42a652:	lea    rcx,[rip+0x1ee17]        # 449470 <flatcc_builder_padding_base@@Base+0xeb0>
  42a659:	mov    edx,0x651
  42a65e:	call   4060f0 <__assert_fail@plt>
  42a663:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a66d:	nop    DWORD PTR [rax]

000000000042a670 <flatcc_builder_union_vector_count@@Base>:
  42a670:	mov    rax,QWORD PTR [rdi+0x30]
  42a674:	mov    eax,DWORD PTR [rax+0x14]
  42a677:	ret    
  42a678:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042a680 <flatcc_builder_union_vector_edit@@Base>:
  42a680:	mov    rax,QWORD PTR [rdi+0x18]
  42a684:	ret    
  42a685:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a68f:	nop

000000000042a690 <flatcc_builder_extend_union_vector@@Base>:
  42a690:	push   r14
  42a692:	push   rbx
  42a693:	push   rax
  42a694:	mov    rax,QWORD PTR [rdi+0x30]
  42a698:	mov    ecx,DWORD PTR [rax+0x14]
  42a69b:	add    ecx,esi
  42a69d:	jb     42a724 <flatcc_builder_extend_union_vector@@Base+0x94>
  42a6a3:	cmp    ecx,0x20000000
  42a6a9:	jae    42a724 <flatcc_builder_extend_union_vector@@Base+0x94>
  42a6ab:	mov    rbx,rdi
  42a6ae:	mov    DWORD PTR [rax+0x14],ecx
  42a6b1:	mov    r14d,DWORD PTR [rdi+0x20]
  42a6b5:	lea    eax,[r14+rsi*8]
  42a6b9:	mov    DWORD PTR [rdi+0x20],eax
  42a6bc:	cmp    eax,DWORD PTR [rdi+0x24]
  42a6bf:	jae    42a6c7 <flatcc_builder_extend_union_vector@@Base+0x37>
  42a6c1:	mov    rax,QWORD PTR [rbx+0x18]
  42a6c5:	jmp    42a719 <flatcc_builder_extend_union_vector@@Base+0x89>
  42a6c7:	inc    eax
  42a6c9:	lea    rsi,[rbx+0x68]
  42a6cd:	mov    rdi,QWORD PTR [rbx+0x40]
  42a6d1:	mov    edx,DWORD PTR [rbx+0x28]
  42a6d4:	add    rdx,rax
  42a6d7:	mov    ecx,0x1
  42a6dc:	mov    r8d,0x1
  42a6e2:	call   QWORD PTR [rbx+0x50]
  42a6e5:	test   eax,eax
  42a6e7:	je     42a6ed <flatcc_builder_extend_union_vector@@Base+0x5d>
  42a6e9:	xor    eax,eax
  42a6eb:	jmp    42a71c <flatcc_builder_extend_union_vector@@Base+0x8c>
  42a6ed:	mov    ecx,DWORD PTR [rbx+0x28]
  42a6f0:	mov    rax,rcx
  42a6f3:	add    rax,QWORD PTR [rbx+0x68]
  42a6f7:	mov    QWORD PTR [rbx+0x18],rax
  42a6fb:	mov    edx,DWORD PTR [rbx+0x70]
  42a6fe:	sub    edx,ecx
  42a700:	cmp    edx,0xfffffffc
  42a703:	mov    ecx,0xfffffffc
  42a708:	cmovb  ecx,edx
  42a70b:	mov    DWORD PTR [rbx+0x24],ecx
  42a70e:	mov    rcx,QWORD PTR [rbx+0x30]
  42a712:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  42a719:	add    rax,r14
  42a71c:	add    rsp,0x8
  42a720:	pop    rbx
  42a721:	pop    r14
  42a723:	ret    
  42a724:	lea    rdi,[rip+0x1f1a0]        # 4498cb <flatcc_builder_padding_base@@Base+0x130b>
  42a72b:	lea    rsi,[rip+0x1e0d0]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  42a732:	lea    rcx,[rip+0x1f1ad]        # 4498e6 <flatcc_builder_padding_base@@Base+0x1326>
  42a739:	mov    edx,0x37c
  42a73e:	call   4060f0 <__assert_fail@plt>
  42a743:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42a74d:	nop    DWORD PTR [rax]

000000000042a750 <flatcc_builder_truncate_union_vector@@Base>:
  42a750:	push   rax
  42a751:	mov    rax,QWORD PTR [rdi+0x30]
  42a755:	cmp    WORD PTR [rax+0xe],0x7
  42a75a:	jne    42a78b <flatcc_builder_truncate_union_vector@@Base+0x3b>
  42a75c:	mov    rdx,rsi
  42a75f:	mov    ecx,DWORD PTR [rax+0x14]
  42a762:	sub    ecx,edx
  42a764:	jb     42a7aa <flatcc_builder_truncate_union_vector@@Base+0x5a>
  42a766:	mov    DWORD PTR [rax+0x14],ecx
  42a769:	mov    rax,QWORD PTR [rdi+0x30]
  42a76d:	imul   edx,DWORD PTR [rax+0x10]
  42a771:	mov    eax,DWORD PTR [rdi+0x20]
  42a774:	sub    eax,edx
  42a776:	mov    DWORD PTR [rdi+0x20],eax
  42a779:	add    rax,QWORD PTR [rdi+0x18]
  42a77d:	mov    rdi,rax
  42a780:	xor    esi,esi
  42a782:	call   406100 <memset@plt>
  42a787:	xor    eax,eax
  42a789:	pop    rcx
  42a78a:	ret    
  42a78b:	lea    rdi,[rip+0x1ecac]        # 44943e <flatcc_builder_padding_base@@Base+0xe7e>
  42a792:	lea    rsi,[rip+0x1e069]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  42a799:	lea    rcx,[rip+0x1ed23]        # 4494c3 <flatcc_builder_padding_base@@Base+0xf03>
  42a7a0:	mov    edx,0x681
  42a7a5:	call   4060f0 <__assert_fail@plt>
  42a7aa:	lea    rdi,[rip+0x1e6f1]        # 448ea2 <flatcc_builder_padding_base@@Base+0x8e2>
  42a7b1:	lea    rsi,[rip+0x1e04a]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  42a7b8:	lea    rcx,[rip+0x1ed04]        # 4494c3 <flatcc_builder_padding_base@@Base+0xf03>
  42a7bf:	mov    edx,0x682
  42a7c4:	call   4060f0 <__assert_fail@plt>
  42a7c9:	nop    DWORD PTR [rax+0x0]

000000000042a7d0 <flatcc_builder_union_vector_push@@Base>:
  42a7d0:	push   r15
  42a7d2:	push   r14
  42a7d4:	push   rbx
  42a7d5:	mov    rax,QWORD PTR [rdi+0x30]
  42a7d9:	cmp    WORD PTR [rax+0xe],0x7
  42a7de:	jne    42a877 <flatcc_builder_union_vector_push@@Base+0xa7>
  42a7e4:	mov    ecx,DWORD PTR [rax+0x14]
  42a7e7:	cmp    ecx,0x1fffffff
  42a7ed:	je     42a839 <flatcc_builder_union_vector_push@@Base+0x69>
  42a7ef:	mov    r14,rsi
  42a7f2:	mov    rbx,rdi
  42a7f5:	inc    ecx
  42a7f7:	mov    DWORD PTR [rax+0x14],ecx
  42a7fa:	mov    r15d,DWORD PTR [rdi+0x20]
  42a7fe:	lea    eax,[r15+0x8]
  42a802:	mov    DWORD PTR [rdi+0x20],eax
  42a805:	cmp    eax,DWORD PTR [rdi+0x24]
  42a808:	jae    42a815 <flatcc_builder_union_vector_push@@Base+0x45>
  42a80a:	mov    rax,QWORD PTR [rbx+0x18]
  42a80e:	add    rax,r15
  42a811:	jne    42a86e <flatcc_builder_union_vector_push@@Base+0x9e>
  42a813:	jmp    42a839 <flatcc_builder_union_vector_push@@Base+0x69>
  42a815:	lea    eax,[r15+0x9]
  42a819:	lea    rsi,[rbx+0x68]
  42a81d:	mov    rdi,QWORD PTR [rbx+0x40]
  42a821:	mov    edx,DWORD PTR [rbx+0x28]
  42a824:	add    rdx,rax
  42a827:	mov    ecx,0x1
  42a82c:	mov    r8d,0x1
  42a832:	call   QWORD PTR [rbx+0x50]
  42a835:	test   eax,eax
  42a837:	je     42a83d <flatcc_builder_union_vector_push@@Base+0x6d>
  42a839:	xor    eax,eax
  42a83b:	jmp    42a871 <flatcc_builder_union_vector_push@@Base+0xa1>
  42a83d:	mov    ecx,DWORD PTR [rbx+0x28]
  42a840:	mov    rax,rcx
  42a843:	add    rax,QWORD PTR [rbx+0x68]
  42a847:	mov    QWORD PTR [rbx+0x18],rax
  42a84b:	mov    edx,DWORD PTR [rbx+0x70]
  42a84e:	sub    edx,ecx
  42a850:	cmp    edx,0xfffffffc
  42a853:	mov    ecx,0xfffffffc
  42a858:	cmovb  ecx,edx
  42a85b:	mov    DWORD PTR [rbx+0x24],ecx
  42a85e:	mov    rcx,QWORD PTR [rbx+0x30]
  42a862:	mov    DWORD PTR [rcx+0x4],0xfffffffc
  42a869:	add    rax,r15
  42a86c:	je     42a839 <flatcc_builder_union_vector_push@@Base+0x69>
  42a86e:	mov    QWORD PTR [rax],r14
  42a871:	pop    rbx
  42a872:	pop    r14
  42a874:	pop    r15
  42a876:	ret    
  42a877:	lea    rdi,[rip+0x1ebc0]        # 44943e <flatcc_builder_padding_base@@Base+0xe7e>
  42a87e:	lea    rsi,[rip+0x1df7d]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  42a885:	lea    rcx,[rip+0x1ec7c]        # 449508 <flatcc_builder_padding_base@@Base+0xf48>
  42a88c:	mov    edx,0x68d
  42a891:	call   4060f0 <__assert_fail@plt>
  42a896:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000042a8a0 <flatcc_builder_append_union_vector@@Base>:
  42a8a0:	push   r15
  42a8a2:	push   r14
  42a8a4:	push   r13
  42a8a6:	push   r12
  42a8a8:	push   rbx
  42a8a9:	mov    rax,QWORD PTR [rdi+0x30]
  42a8ad:	cmp    WORD PTR [rax+0xe],0x7
  42a8b2:	jne    42a98e <flatcc_builder_append_union_vector@@Base+0xee>
  42a8b8:	mov    r15,rdx
  42a8bb:	mov    ecx,DWORD PTR [rax+0x14]
  42a8be:	add    ecx,r15d
  42a8c1:	jb     42a96f <flatcc_builder_append_union_vector@@Base+0xcf>
  42a8c7:	cmp    ecx,0x20000000
  42a8cd:	jae    42a96f <flatcc_builder_append_union_vector@@Base+0xcf>
  42a8d3:	mov    r14,rsi
  42a8d6:	mov    rbx,rdi
  42a8d9:	mov    DWORD PTR [rax+0x14],ecx
  42a8dc:	mov    r13d,DWORD PTR [rdi+0x20]
  42a8e0:	lea    eax,[r13+r15*8+0x0]
  42a8e5:	mov    DWORD PTR [rdi+0x20],eax
  42a8e8:	cmp    eax,DWORD PTR [rdi+0x24]
  42a8eb:	jae    42a8f8 <flatcc_builder_append_union_vector@@Base+0x58>
  42a8ed:	mov    r12,QWORD PTR [rbx+0x18]
  42a8f1:	add    r12,r13
  42a8f4:	jne    42a950 <flatcc_builder_append_union_vector@@Base+0xb0>
  42a8f6:	jmp    42a91a <flatcc_builder_append_union_vector@@Base+0x7a>
  42a8f8:	inc    eax
  42a8fa:	lea    rsi,[rbx+0x68]
  42a8fe:	mov    rdi,QWORD PTR [rbx+0x40]
  42a902:	mov    edx,DWORD PTR [rbx+0x28]
  42a905:	add    rdx,rax
  42a908:	mov    ecx,0x1
  42a90d:	mov    r8d,0x1
  42a913:	call   QWORD PTR [rbx+0x50]
  42a916:	test   eax,eax
  42a918:	je     42a91f <flatcc_builder_append_union_vector@@Base+0x7f>
  42a91a:	xor    r12d,r12d
  42a91d:	jmp    42a962 <flatcc_builder_append_union_vector@@Base+0xc2>
  42a91f:	mov    eax,DWORD PTR [rbx+0x28]
  42a922:	mov    r12,rax
  42a925:	add    r12,QWORD PTR [rbx+0x68]
  42a929:	mov    QWORD PTR [rbx+0x18],r12
  42a92d:	mov    ecx,DWORD PTR [rbx+0x70]
  42a930:	sub    ecx,eax
  42a932:	cmp    ecx,0xfffffffc
  42a935:	mov    eax,0xfffffffc
  42a93a:	cmovb  eax,ecx
  42a93d:	mov    DWORD PTR [rbx+0x24],eax
  42a940:	mov    rax,QWORD PTR [rbx+0x30]
  42a944:	mov    DWORD PTR [rax+0x4],0xfffffffc
  42a94b:	add    r12,r13
  42a94e:	je     42a91a <flatcc_builder_append_union_vector@@Base+0x7a>
  42a950:	shl    r15d,0x3
  42a954:	mov    edx,r15d
  42a957:	mov    rdi,r12
  42a95a:	mov    rsi,r14
  42a95d:	call   406190 <memcpy@plt>
  42a962:	mov    rax,r12
  42a965:	pop    rbx
  42a966:	pop    r12
  42a968:	pop    r13
  42a96a:	pop    r14
  42a96c:	pop    r15
  42a96e:	ret    
  42a96f:	lea    rdi,[rip+0x1ef55]        # 4498cb <flatcc_builder_padding_base@@Base+0x130b>
  42a976:	lea    rsi,[rip+0x1de85]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  42a97d:	lea    rcx,[rip+0x1ef62]        # 4498e6 <flatcc_builder_padding_base@@Base+0x1326>
  42a984:	mov    edx,0x37c
  42a989:	call   4060f0 <__assert_fail@plt>
  42a98e:	lea    rdi,[rip+0x1eaa9]        # 44943e <flatcc_builder_padding_base@@Base+0xe7e>
  42a995:	lea    rsi,[rip+0x1de66]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  42a99c:	lea    rcx,[rip+0x1ebd2]        # 449575 <flatcc_builder_padding_base@@Base+0xfb5>
  42a9a3:	mov    edx,0x69c
  42a9a8:	call   4060f0 <__assert_fail@plt>
  42a9ad:	nop    DWORD PTR [rax]

000000000042a9b0 <flatcc_builder_create_string@@Base>:
  42a9b0:	push   rbp
  42a9b1:	push   rbx
  42a9b2:	sub    rsp,0x98
  42a9b9:	xor    ebp,ebp
  42a9bb:	mov    rax,rdx
  42a9be:	shr    rax,0x20
  42a9c2:	jne    42aa96 <flatcc_builder_create_string@@Base+0xe6>
  42a9c8:	mov    rbx,rdi
  42a9cb:	mov    DWORD PTR [rsp+0x4],edx
  42a9cf:	mov    ebp,DWORD PTR [rdi+0xf0]
  42a9d5:	mov    eax,edx
  42a9d7:	not    eax
  42a9d9:	add    eax,ebp
  42a9db:	and    eax,0x3
  42a9de:	inc    eax
  42a9e0:	mov    QWORD PTR [rsp+0x8],0x4
  42a9e9:	lea    rcx,[rsp+0x4]
  42a9ee:	mov    QWORD PTR [rsp+0x18],rcx
  42a9f3:	mov    QWORD PTR [rsp+0x20],0x4
  42a9fc:	mov    DWORD PTR [rsp+0x10],0x1
  42aa04:	test   rdx,rdx
  42aa07:	je     42aa2b <flatcc_builder_create_string@@Base+0x7b>
  42aa09:	lea    rcx,[rdx+0x4]
  42aa0d:	mov    QWORD PTR [rsp+0x8],rcx
  42aa12:	mov    QWORD PTR [rsp+0x28],rsi
  42aa17:	mov    QWORD PTR [rsp+0x30],rdx
  42aa1c:	mov    DWORD PTR [rsp+0x10],0x2
  42aa24:	mov    edx,0x2
  42aa29:	jmp    42aa35 <flatcc_builder_create_string@@Base+0x85>
  42aa2b:	mov    ecx,0x4
  42aa30:	mov    edx,0x1
  42aa35:	mov    esi,eax
  42aa37:	lea    r8,[rcx+rsi*1]
  42aa3b:	mov    QWORD PTR [rsp+0x8],r8
  42aa40:	mov    eax,edx
  42aa42:	shl    rax,0x4
  42aa46:	lea    rdi,[rip+0x1db73]        # 4485c0 <flatcc_builder_padding_base@@Base>
  42aa4d:	mov    QWORD PTR [rsp+rax*1+0x18],rdi
  42aa52:	mov    QWORD PTR [rsp+rax*1+0x20],rsi
  42aa57:	inc    edx
  42aa59:	mov    DWORD PTR [rsp+0x10],edx
  42aa5d:	cmp    r8,0x11
  42aa61:	setb   al
  42aa64:	add    rcx,rsi
  42aa67:	add    rcx,0xfffffffffffffff0
  42aa6b:	shr    rcx,0x20
  42aa6f:	sete   cl
  42aa72:	test   r8d,r8d
  42aa75:	jle    42aaa2 <flatcc_builder_create_string@@Base+0xf2>
  42aa77:	or     al,cl
  42aa79:	je     42aaa2 <flatcc_builder_create_string@@Base+0xf2>
  42aa7b:	sub    ebp,r8d
  42aa7e:	mov    rdi,QWORD PTR [rbx+0x38]
  42aa82:	lea    rsi,[rsp+0x18]
  42aa87:	mov    ecx,ebp
  42aa89:	call   QWORD PTR [rbx+0x48]
  42aa8c:	test   eax,eax
  42aa8e:	jne    42aac1 <flatcc_builder_create_string@@Base+0x111>
  42aa90:	mov    DWORD PTR [rbx+0xf0],ebp
  42aa96:	mov    eax,ebp
  42aa98:	add    rsp,0x98
  42aa9f:	pop    rbx
  42aaa0:	pop    rbp
  42aaa1:	ret    
  42aaa2:	lea    rdi,[rip+0x148f2]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  42aaa9:	lea    rsi,[rip+0x1dd52]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  42aab0:	lea    rcx,[rip+0x1edca]        # 449881 <flatcc_builder_padding_base@@Base+0x12c1>
  42aab7:	mov    edx,0x287
  42aabc:	call   4060f0 <__assert_fail@plt>
  42aac1:	lea    rdi,[rip+0x148d3]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  42aac8:	lea    rsi,[rip+0x1dd33]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  42aacf:	lea    rcx,[rip+0x1edab]        # 449881 <flatcc_builder_padding_base@@Base+0x12c1>
  42aad6:	mov    edx,0x28b
  42aadb:	call   4060f0 <__assert_fail@plt>

000000000042aae0 <flatcc_builder_create_string_str@@Base>:
  42aae0:	push   r14
  42aae2:	push   rbx
  42aae3:	push   rax
  42aae4:	mov    rbx,rsi
  42aae7:	mov    r14,rdi
  42aaea:	mov    rdi,rsi
  42aaed:	call   4060d0 <strlen@plt>
  42aaf2:	mov    rdi,r14
  42aaf5:	mov    rsi,rbx
  42aaf8:	mov    rdx,rax
  42aafb:	add    rsp,0x8
  42aaff:	pop    rbx
  42ab00:	pop    r14
  42ab02:	jmp    42a9b0 <flatcc_builder_create_string@@Base>
  42ab07:	nop    WORD PTR [rax+rax*1+0x0]

000000000042ab10 <flatcc_builder_create_string_strn@@Base>:
  42ab10:	push   r15
  42ab12:	push   r14
  42ab14:	push   rbx
  42ab15:	mov    rbx,rdx
  42ab18:	mov    r14,rsi
  42ab1b:	mov    r15,rdi
  42ab1e:	mov    rdi,rsi
  42ab21:	xor    esi,esi
  42ab23:	call   406120 <memchr@plt>
  42ab28:	mov    rcx,rax
  42ab2b:	sub    rcx,r14
  42ab2e:	test   rax,rax
  42ab31:	cmovne rbx,rcx
  42ab35:	mov    rdi,r15
  42ab38:	mov    rsi,r14
  42ab3b:	mov    rdx,rbx
  42ab3e:	pop    rbx
  42ab3f:	pop    r14
  42ab41:	pop    r15
  42ab43:	jmp    42a9b0 <flatcc_builder_create_string@@Base>
  42ab48:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042ab50 <flatcc_builder_end_string@@Base>:
  42ab50:	push   rbp
  42ab51:	push   rbx
  42ab52:	push   rax
  42ab53:	mov    rax,QWORD PTR [rdi+0x30]
  42ab57:	cmp    WORD PTR [rax+0xe],0x6
  42ab5c:	jne    42abf4 <flatcc_builder_end_string@@Base+0xa4>
  42ab62:	mov    rbx,rdi
  42ab65:	mov    edx,DWORD PTR [rax+0x14]
  42ab68:	cmp    edx,DWORD PTR [rdi+0x20]
  42ab6b:	jne    42ac13 <flatcc_builder_end_string@@Base+0xc3>
  42ab71:	mov    rsi,QWORD PTR [rbx+0x18]
  42ab75:	mov    rdi,rbx
  42ab78:	call   42a9b0 <flatcc_builder_create_string@@Base>
  42ab7d:	mov    ebp,eax
  42ab7f:	test   eax,eax
  42ab81:	je     42abeb <flatcc_builder_end_string@@Base+0x9b>
  42ab83:	mov    rdi,QWORD PTR [rbx+0x18]
  42ab87:	mov    edx,DWORD PTR [rbx+0x20]
  42ab8a:	xor    esi,esi
  42ab8c:	call   406100 <memset@plt>
  42ab91:	mov    rax,QWORD PTR [rbx+0x30]
  42ab95:	mov    ecx,DWORD PTR [rax+0x8]
  42ab98:	mov    DWORD PTR [rbx+0x20],ecx
  42ab9b:	mov    ecx,DWORD PTR [rax]
  42ab9d:	mov    DWORD PTR [rbx+0x28],ecx
  42aba0:	mov    edx,DWORD PTR [rax+0x4]
  42aba3:	mov    rsi,rcx
  42aba6:	add    rsi,QWORD PTR [rbx+0x68]
  42abaa:	mov    QWORD PTR [rbx+0x18],rsi
  42abae:	mov    esi,DWORD PTR [rbx+0x70]
  42abb1:	sub    esi,ecx
  42abb3:	cmp    esi,edx
  42abb5:	cmova  esi,edx
  42abb8:	mov    DWORD PTR [rbx+0x24],esi
  42abbb:	movzx  ecx,WORD PTR [rbx+0xea]
  42abc2:	cmp    WORD PTR [rbx+0xe8],cx
  42abc9:	jae    42abd2 <flatcc_builder_end_string@@Base+0x82>
  42abcb:	mov    WORD PTR [rbx+0xe8],cx
  42abd2:	movzx  ecx,WORD PTR [rax+0xc]
  42abd6:	mov    WORD PTR [rbx+0xea],cx
  42abdd:	add    rax,0xffffffffffffffdc
  42abe1:	mov    QWORD PTR [rbx+0x30],rax
  42abe5:	dec    DWORD PTR [rbx+0x104]
  42abeb:	mov    eax,ebp
  42abed:	add    rsp,0x8
  42abf1:	pop    rbx
  42abf2:	pop    rbp
  42abf3:	ret    
  42abf4:	lea    rdi,[rip+0x1e146]        # 448d41 <flatcc_builder_padding_base@@Base+0x781>
  42abfb:	lea    rsi,[rip+0x1dc00]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  42ac02:	lea    rcx,[rip+0x1e9eb]        # 4495f4 <flatcc_builder_padding_base@@Base+0x1034>
  42ac09:	mov    edx,0x6c4
  42ac0e:	call   4060f0 <__assert_fail@plt>
  42ac13:	lea    rdi,[rip+0x1ea1d]        # 449637 <flatcc_builder_padding_base@@Base+0x1077>
  42ac1a:	lea    rsi,[rip+0x1dbe1]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  42ac21:	lea    rcx,[rip+0x1e9cc]        # 4495f4 <flatcc_builder_padding_base@@Base+0x1034>
  42ac28:	mov    edx,0x6c5
  42ac2d:	call   4060f0 <__assert_fail@plt>
  42ac32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ac3c:	nop    DWORD PTR [rax+0x0]

000000000042ac40 <flatcc_builder_string_edit@@Base>:
  42ac40:	mov    rax,QWORD PTR [rdi+0x18]
  42ac44:	ret    
  42ac45:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ac4f:	nop

000000000042ac50 <flatcc_builder_string_len@@Base>:
  42ac50:	mov    rax,QWORD PTR [rdi+0x30]
  42ac54:	mov    eax,DWORD PTR [rax+0x14]
  42ac57:	ret    
  42ac58:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042ac60 <flatcc_builder_table_edit@@Base>:
  42ac60:	push   rax
  42ac61:	mov    rax,QWORD PTR [rdi+0x30]
  42ac65:	cmp    WORD PTR [rax+0xe],0x3
  42ac6a:	jne    42ac78 <flatcc_builder_table_edit@@Base+0x18>
  42ac6c:	mov    eax,DWORD PTR [rdi+0x20]
  42ac6f:	add    rax,QWORD PTR [rdi+0x18]
  42ac73:	sub    rax,rsi
  42ac76:	pop    rcx
  42ac77:	ret    
  42ac78:	lea    rdi,[rip+0x1e3b2]        # 449031 <flatcc_builder_padding_base@@Base+0xa71>
  42ac7f:	lea    rsi,[rip+0x1db7c]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  42ac86:	lea    rcx,[rip+0x1ea5c]        # 4496e9 <flatcc_builder_padding_base@@Base+0x1129>
  42ac8d:	mov    edx,0x702
  42ac92:	call   4060f0 <__assert_fail@plt>
  42ac97:	nop    WORD PTR [rax+rax*1+0x0]

000000000042aca0 <flatcc_builder_table_add_copy@@Base>:
  42aca0:	push   r15
  42aca2:	push   r14
  42aca4:	push   rbx
  42aca5:	mov    r15,rcx
  42aca8:	mov    r14,rdx
  42acab:	mov    rdx,rcx
  42acae:	mov    ecx,r8d
  42acb1:	call   429c10 <flatcc_builder_table_add@@Base>
  42acb6:	mov    rbx,rax
  42acb9:	test   rax,rax
  42acbc:	je     42accc <flatcc_builder_table_add_copy@@Base+0x2c>
  42acbe:	mov    rdi,rbx
  42acc1:	mov    rsi,r14
  42acc4:	mov    rdx,r15
  42acc7:	call   406190 <memcpy@plt>
  42accc:	mov    rax,rbx
  42accf:	pop    rbx
  42acd0:	pop    r14
  42acd2:	pop    r15
  42acd4:	ret    
  42acd5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42acdf:	nop

000000000042ace0 <flatcc_builder_push_buffer_alignment@@Base>:
  42ace0:	movzx  eax,WORD PTR [rdi+0xe8]
  42ace7:	mov    WORD PTR [rdi+0xe8],0x4
  42acf0:	ret    
  42acf1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42acfb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042ad00 <flatcc_builder_pop_buffer_alignment@@Base>:
  42ad00:	cmp    WORD PTR [rdi+0xe8],si
  42ad07:	jae    42ad10 <flatcc_builder_pop_buffer_alignment@@Base+0x10>
  42ad09:	mov    WORD PTR [rdi+0xe8],si
  42ad10:	ret    
  42ad11:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ad1b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042ad20 <flatcc_builder_get_buffer_alignment@@Base>:
  42ad20:	movzx  eax,WORD PTR [rdi+0xe8]
  42ad27:	ret    
  42ad28:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042ad30 <flatcc_builder_set_vtable_clustering@@Base>:
  42ad30:	xor    eax,eax
  42ad32:	test   esi,esi
  42ad34:	sete   al
  42ad37:	mov    DWORD PTR [rdi+0x124],eax
  42ad3d:	ret    
  42ad3e:	xchg   ax,ax

000000000042ad40 <flatcc_builder_set_block_align@@Base>:
  42ad40:	mov    WORD PTR [rdi+0xec],si
  42ad47:	ret    
  42ad48:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042ad50 <flatcc_builder_get_level@@Base>:
  42ad50:	mov    eax,DWORD PTR [rdi+0x104]
  42ad56:	ret    
  42ad57:	nop    WORD PTR [rax+rax*1+0x0]

000000000042ad60 <flatcc_builder_set_max_level@@Base>:
  42ad60:	mov    DWORD PTR [rdi+0x120],esi
  42ad66:	cmp    DWORD PTR [rdi+0x108],esi
  42ad6c:	jge    42ad74 <flatcc_builder_set_max_level@@Base+0x14>
  42ad6e:	mov    DWORD PTR [rdi+0x108],esi
  42ad74:	ret    
  42ad75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ad7f:	nop

000000000042ad80 <flatcc_builder_get_buffer_size@@Base>:
  42ad80:	movsxd rax,DWORD PTR [rdi+0xf4]
  42ad87:	movsxd rcx,DWORD PTR [rdi+0xf0]
  42ad8e:	sub    rax,rcx
  42ad91:	ret    
  42ad92:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ad9c:	nop    DWORD PTR [rax+0x0]

000000000042ada0 <flatcc_builder_get_buffer_start@@Base>:
  42ada0:	mov    eax,DWORD PTR [rdi+0xf0]
  42ada6:	ret    
  42ada7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042adb0 <flatcc_builder_get_buffer_end@@Base>:
  42adb0:	mov    eax,DWORD PTR [rdi+0xf4]
  42adb6:	ret    
  42adb7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042adc0 <flatcc_builder_set_vtable_cache_limit@@Base>:
  42adc0:	mov    QWORD PTR [rdi+0x118],rsi
  42adc7:	ret    
  42adc8:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042add0 <flatcc_builder_set_identifier@@Base>:
  42add0:	test   rsi,rsi
  42add3:	jne    42addc <flatcc_builder_set_identifier@@Base+0xc>
  42add5:	lea    rsi,[rip+0x1d7e4]        # 4485c0 <flatcc_builder_padding_base@@Base>
  42addc:	mov    eax,DWORD PTR [rsi]
  42adde:	mov    DWORD PTR [rdi+0x110],eax
  42ade4:	ret    
  42ade5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42adef:	nop

000000000042adf0 <flatcc_builder_get_type@@Base>:
  42adf0:	mov    rax,QWORD PTR [rdi+0x30]
  42adf4:	test   rax,rax
  42adf7:	je     42adfe <flatcc_builder_get_type@@Base+0xe>
  42adf9:	movzx  eax,WORD PTR [rax+0xe]
  42adfd:	ret    
  42adfe:	xor    eax,eax
  42ae00:	ret    
  42ae01:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ae0b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042ae10 <flatcc_builder_get_type_at@@Base>:
  42ae10:	xor    eax,eax
  42ae12:	test   esi,esi
  42ae14:	jle    42ae32 <flatcc_builder_get_type_at@@Base+0x22>
  42ae16:	mov    ecx,DWORD PTR [rdi+0x104]
  42ae1c:	cmp    ecx,esi
  42ae1e:	jl     42ae32 <flatcc_builder_get_type_at@@Base+0x22>
  42ae20:	mov    rax,QWORD PTR [rdi+0x30]
  42ae24:	sub    esi,ecx
  42ae26:	movsxd rcx,esi
  42ae29:	lea    rcx,[rcx+rcx*8]
  42ae2d:	movzx  eax,WORD PTR [rax+rcx*4+0xe]
  42ae32:	ret    
  42ae33:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ae3d:	nop    DWORD PTR [rax]

000000000042ae40 <flatcc_builder_get_direct_buffer@@Base>:
  42ae40:	cmp    DWORD PTR [rdi+0x128],0x0
  42ae47:	je     42ae59 <flatcc_builder_get_direct_buffer@@Base+0x19>
  42ae49:	mov    rax,QWORD PTR [rdi+0x130]
  42ae50:	cmp    rax,QWORD PTR [rdi+0x138]
  42ae57:	je     42ae68 <flatcc_builder_get_direct_buffer@@Base+0x28>
  42ae59:	test   rsi,rsi
  42ae5c:	je     42ae65 <flatcc_builder_get_direct_buffer@@Base+0x25>
  42ae5e:	mov    QWORD PTR [rsi],0x0
  42ae65:	xor    eax,eax
  42ae67:	ret    
  42ae68:	test   rsi,rsi
  42ae6b:	je     42ae77 <flatcc_builder_get_direct_buffer@@Base+0x37>
  42ae6d:	mov    rax,QWORD PTR [rdi+0x160]
  42ae74:	mov    QWORD PTR [rsi],rax
  42ae77:	mov    rax,QWORD PTR [rdi+0x140]
  42ae7e:	ret    
  42ae7f:	nop

000000000042ae80 <flatcc_builder_copy_buffer@@Base>:
  42ae80:	push   rax
  42ae81:	cmp    DWORD PTR [rdi+0x128],0x0
  42ae88:	je     42ae9d <flatcc_builder_copy_buffer@@Base+0x1d>
  42ae8a:	add    rdi,0x130
  42ae91:	call   42b700 <flatcc_emitter_copy_buffer@@Base>
  42ae96:	test   rax,rax
  42ae99:	je     42aea1 <flatcc_builder_copy_buffer@@Base+0x21>
  42ae9b:	pop    rcx
  42ae9c:	ret    
  42ae9d:	xor    eax,eax
  42ae9f:	pop    rcx
  42aea0:	ret    
  42aea1:	lea    rdi,[rip+0x1dbc8]        # 448a70 <flatcc_builder_padding_base@@Base+0x4b0>
  42aea8:	lea    rsi,[rip+0x1d953]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  42aeaf:	lea    rcx,[rip+0x1e8be]        # 449774 <flatcc_builder_padding_base@@Base+0x11b4>
  42aeb6:	mov    edx,0x786
  42aebb:	call   4060f0 <__assert_fail@plt>

000000000042aec0 <flatcc_builder_finalize_buffer@@Base>:
  42aec0:	push   r15
  42aec2:	push   r14
  42aec4:	push   rbx
  42aec5:	mov    rbx,rdi
  42aec8:	movsxd r14,DWORD PTR [rdi+0xf4]
  42aecf:	movsxd rax,DWORD PTR [rdi+0xf0]
  42aed6:	sub    r14,rax
  42aed9:	test   rsi,rsi
  42aedc:	je     42aee1 <flatcc_builder_finalize_buffer@@Base+0x21>
  42aede:	mov    QWORD PTR [rsi],r14
  42aee1:	mov    rdi,r14
  42aee4:	call   4061a0 <malloc@plt>
  42aee9:	test   rax,rax
  42aeec:	je     42af1d <flatcc_builder_finalize_buffer@@Base+0x5d>
  42aeee:	cmp    DWORD PTR [rbx+0x128],0x0
  42aef5:	je     42af3c <flatcc_builder_finalize_buffer@@Base+0x7c>
  42aef7:	mov    r15,rax
  42aefa:	add    rbx,0x130
  42af01:	mov    rdi,rbx
  42af04:	mov    rsi,rax
  42af07:	mov    rdx,r14
  42af0a:	call   42b700 <flatcc_emitter_copy_buffer@@Base>
  42af0f:	test   rax,rax
  42af12:	je     42af5b <flatcc_builder_finalize_buffer@@Base+0x9b>
  42af14:	mov    rax,r15
  42af17:	pop    rbx
  42af18:	pop    r14
  42af1a:	pop    r15
  42af1c:	ret    
  42af1d:	lea    rdi,[rip+0x14477]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  42af24:	lea    rsi,[rip+0x1d8d7]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  42af2b:	lea    rcx,[rip+0x1e887]        # 4497b9 <flatcc_builder_padding_base@@Base+0x11f9>
  42af32:	mov    edx,0x798
  42af37:	call   4060f0 <__assert_fail@plt>
  42af3c:	lea    rdi,[rip+0x14458]        # 43f39b <_IO_stdin_used@@Base+0x1239b>
  42af43:	lea    rsi,[rip+0x1d8b8]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  42af4a:	lea    rcx,[rip+0x1e868]        # 4497b9 <flatcc_builder_padding_base@@Base+0x11f9>
  42af51:	mov    edx,0x79c
  42af56:	call   4060f0 <__assert_fail@plt>
  42af5b:	lea    rdi,[rip+0x1db0e]        # 448a70 <flatcc_builder_padding_base@@Base+0x4b0>
  42af62:	lea    rsi,[rip+0x1d899]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  42af69:	lea    rcx,[rip+0x1e804]        # 449774 <flatcc_builder_padding_base@@Base+0x11b4>
  42af70:	mov    edx,0x786
  42af75:	call   4060f0 <__assert_fail@plt>
  42af7a:	nop    WORD PTR [rax+rax*1+0x0]

000000000042af80 <flatcc_builder_finalize_aligned_buffer@@Base>:
  42af80:	push   r15
  42af82:	push   r14
  42af84:	push   r12
  42af86:	push   rbx
  42af87:	push   rax
  42af88:	mov    r14,rsi
  42af8b:	mov    r15,rdi
  42af8e:	movsxd rax,DWORD PTR [rdi+0xf4]
  42af95:	movsxd rcx,DWORD PTR [rdi+0xf0]
  42af9c:	sub    rax,rcx
  42af9f:	test   rsi,rsi
  42afa2:	je     42afa7 <flatcc_builder_finalize_aligned_buffer@@Base+0x27>
  42afa4:	mov    QWORD PTR [r14],rax
  42afa7:	movzx  ecx,WORD PTR [r15+0xe8]
  42afaf:	add    rax,rcx
  42afb2:	add    rax,0xffffffffffffffff
  42afb6:	mov    rbx,rcx
  42afb9:	neg    rbx
  42afbc:	and    rbx,rax
  42afbf:	cmp    rcx,0x8
  42afc3:	mov    QWORD PTR [rsp],0x0
  42afcb:	mov    esi,0x8
  42afd0:	cmova  rsi,rcx
  42afd4:	mov    rdi,rsp
  42afd7:	mov    rdx,rbx
  42afda:	call   406230 <posix_memalign@plt>
  42afdf:	mov    r12,QWORD PTR [rsp]
  42afe3:	test   eax,eax
  42afe5:	je     42aff6 <flatcc_builder_finalize_aligned_buffer@@Base+0x76>
  42afe7:	test   r12,r12
  42afea:	je     42aff6 <flatcc_builder_finalize_aligned_buffer@@Base+0x76>
  42afec:	mov    rdi,r12
  42afef:	call   406040 <free@plt>
  42aff4:	jmp    42b03e <flatcc_builder_finalize_aligned_buffer@@Base+0xbe>
  42aff6:	test   r12,r12
  42aff9:	je     42b03e <flatcc_builder_finalize_aligned_buffer@@Base+0xbe>
  42affb:	cmp    DWORD PTR [r15+0x128],0x0
  42b003:	je     42afec <flatcc_builder_finalize_aligned_buffer@@Base+0x6c>
  42b005:	add    r15,0x130
  42b00c:	mov    rdi,r15
  42b00f:	mov    rsi,r12
  42b012:	mov    rdx,rbx
  42b015:	call   42b700 <flatcc_emitter_copy_buffer@@Base>
  42b01a:	test   rax,rax
  42b01d:	jne    42b04d <flatcc_builder_finalize_aligned_buffer@@Base+0xcd>
  42b01f:	lea    rdi,[rip+0x1da4a]        # 448a70 <flatcc_builder_padding_base@@Base+0x4b0>
  42b026:	lea    rsi,[rip+0x1d7d5]        # 448802 <flatcc_builder_padding_base@@Base+0x242>
  42b02d:	lea    rcx,[rip+0x1e740]        # 449774 <flatcc_builder_padding_base@@Base+0x11b4>
  42b034:	mov    edx,0x786
  42b039:	call   4060f0 <__assert_fail@plt>
  42b03e:	test   r14,r14
  42b041:	je     42b04a <flatcc_builder_finalize_aligned_buffer@@Base+0xca>
  42b043:	mov    QWORD PTR [r14],0x0
  42b04a:	xor    r12d,r12d
  42b04d:	mov    rax,r12
  42b050:	add    rsp,0x8
  42b054:	pop    rbx
  42b055:	pop    r12
  42b057:	pop    r14
  42b059:	pop    r15
  42b05b:	ret    
  42b05c:	nop    DWORD PTR [rax+0x0]

000000000042b060 <flatcc_builder_aligned_alloc@@Base>:
  42b060:	push   rax
  42b061:	mov    rdx,rsi
  42b064:	mov    QWORD PTR [rsp],0x0
  42b06c:	cmp    rdi,0x8
  42b070:	mov    esi,0x8
  42b075:	cmova  rsi,rdi
  42b079:	mov    rdi,rsp
  42b07c:	call   406230 <posix_memalign@plt>
  42b081:	mov    ecx,eax
  42b083:	mov    rax,QWORD PTR [rsp]
  42b087:	test   ecx,ecx
  42b089:	je     42b0a2 <flatcc_builder_aligned_alloc@@Base+0x42>
  42b08b:	test   rax,rax
  42b08e:	je     42b0a2 <flatcc_builder_aligned_alloc@@Base+0x42>
  42b090:	mov    rdi,rax
  42b093:	call   406040 <free@plt>
  42b098:	mov    QWORD PTR [rsp],0x0
  42b0a0:	xor    eax,eax
  42b0a2:	pop    rcx
  42b0a3:	ret    
  42b0a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b0ae:	xchg   ax,ax

000000000042b0b0 <flatcc_builder_aligned_free@@Base>:
  42b0b0:	jmp    406040 <free@plt>
  42b0b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b0bf:	nop

000000000042b0c0 <flatcc_builder_get_emit_context@@Base>:
  42b0c0:	mov    rax,QWORD PTR [rdi+0x38]
  42b0c4:	ret    
  42b0c5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b0cf:	nop

000000000042b0d0 <flatcc_emitter_recycle_page@@Base>:
  42b0d0:	mov    rcx,QWORD PTR [rdi]
  42b0d3:	mov    eax,0xffffffff
  42b0d8:	cmp    rcx,rsi
  42b0db:	je     42b132 <flatcc_emitter_recycle_page@@Base+0x62>
  42b0dd:	cmp    QWORD PTR [rdi+0x8],rsi
  42b0e1:	je     42b132 <flatcc_emitter_recycle_page@@Base+0x62>
  42b0e3:	mov    rax,QWORD PTR [rsi+0xb80]
  42b0ea:	mov    rdx,QWORD PTR [rsi+0xb88]
  42b0f1:	mov    QWORD PTR [rax+0xb88],rdx
  42b0f8:	mov    rdx,QWORD PTR [rsi+0xb88]
  42b0ff:	mov    QWORD PTR [rdx+0xb80],rax
  42b106:	mov    rax,QWORD PTR [rcx+0xb88]
  42b10d:	mov    QWORD PTR [rsi+0xb88],rax
  42b114:	mov    QWORD PTR [rsi+0xb80],rcx
  42b11b:	mov    QWORD PTR [rax+0xb80],rsi
  42b122:	mov    rax,QWORD PTR [rsi+0xb80]
  42b129:	mov    QWORD PTR [rax+0xb88],rsi
  42b130:	xor    eax,eax
  42b132:	ret    
  42b133:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b13d:	nop    DWORD PTR [rax]

000000000042b140 <flatcc_emitter_reset@@Base>:
  42b140:	push   r14
  42b142:	push   rbx
  42b143:	push   rax
  42b144:	mov    rax,QWORD PTR [rdi]
  42b147:	test   rax,rax
  42b14a:	je     42b22b <flatcc_emitter_reset@@Base+0xeb>
  42b150:	mov    rbx,rdi
  42b153:	mov    QWORD PTR [rdi+0x8],rax
  42b157:	lea    rcx,[rax+0x5c0]
  42b15e:	mov    QWORD PTR [rdi+0x10],rcx
  42b162:	mov    QWORD PTR [rdi+0x20],rcx
  42b166:	mov    QWORD PTR [rdi+0x18],0x5c0
  42b16e:	mov    QWORD PTR [rdi+0x28],0x5c0
  42b176:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  42b180:	mov    rcx,QWORD PTR [rdi+0x30]
  42b184:	mov    rdx,QWORD PTR [rdi+0x40]
  42b188:	test   rdx,rdx
  42b18b:	jne    42b194 <flatcc_emitter_reset@@Base+0x54>
  42b18d:	mov    QWORD PTR [rbx+0x40],rcx
  42b191:	mov    rdx,rcx
  42b194:	lea    rdx,[rdx+rdx*2]
  42b198:	shr    rdx,0x2
  42b19c:	shr    rcx,0x2
  42b1a0:	add    rcx,rdx
  42b1a3:	mov    QWORD PTR [rbx+0x40],rcx
  42b1a7:	mov    QWORD PTR [rbx+0x30],0x0
  42b1af:	add    rcx,rcx
  42b1b2:	cmp    rcx,QWORD PTR [rbx+0x38]
  42b1b6:	jae    42b22b <flatcc_emitter_reset@@Base+0xeb>
  42b1b8:	mov    rdi,QWORD PTR [rax+0xb80]
  42b1bf:	cmp    rdi,rax
  42b1c2:	je     42b22b <flatcc_emitter_reset@@Base+0xeb>
  42b1c4:	lea    rcx,[rax+0xb80]
  42b1cb:	mov    r14,0xfffffffffffff480
  42b1d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b1dc:	nop    DWORD PTR [rax+0x0]
  42b1e0:	mov    rdx,QWORD PTR [rdi+0xb80]
  42b1e7:	mov    QWORD PTR [rcx],rdx
  42b1ea:	mov    rcx,QWORD PTR [rdi+0xb80]
  42b1f1:	mov    QWORD PTR [rcx+0xb88],rax
  42b1f8:	call   406040 <free@plt>
  42b1fd:	mov    rax,QWORD PTR [rbx+0x38]
  42b201:	add    rax,r14
  42b204:	mov    QWORD PTR [rbx+0x38],rax
  42b208:	mov    rcx,QWORD PTR [rbx+0x40]
  42b20c:	add    rcx,rcx
  42b20f:	cmp    rcx,rax
  42b212:	jae    42b22b <flatcc_emitter_reset@@Base+0xeb>
  42b214:	mov    rax,QWORD PTR [rbx+0x8]
  42b218:	lea    rcx,[rax+0xb80]
  42b21f:	mov    rdi,QWORD PTR [rax+0xb80]
  42b226:	cmp    rdi,QWORD PTR [rbx]
  42b229:	jne    42b1e0 <flatcc_emitter_reset@@Base+0xa0>
  42b22b:	add    rsp,0x8
  42b22f:	pop    rbx
  42b230:	pop    r14
  42b232:	ret    
  42b233:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b23d:	nop    DWORD PTR [rax]

000000000042b240 <flatcc_emitter_clear@@Base>:
  42b240:	push   r14
  42b242:	push   rbx
  42b243:	push   rax
  42b244:	mov    rbx,QWORD PTR [rdi]
  42b247:	test   rbx,rbx
  42b24a:	je     42b2ac <flatcc_emitter_clear@@Base+0x6c>
  42b24c:	mov    r14,rdi
  42b24f:	mov    rax,QWORD PTR [rbx+0xb88]
  42b256:	mov    QWORD PTR [rax+0xb80],0x0
  42b261:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b26b:	nop    DWORD PTR [rax+rax*1+0x0]
  42b270:	mov    rax,QWORD PTR [rbx+0xb80]
  42b277:	test   rax,rax
  42b27a:	je     42b28d <flatcc_emitter_clear@@Base+0x4d>
  42b27c:	mov    rbx,rax
  42b27f:	mov    rdi,QWORD PTR [rax+0xb88]
  42b286:	call   406040 <free@plt>
  42b28b:	jmp    42b270 <flatcc_emitter_clear@@Base+0x30>
  42b28d:	mov    rdi,rbx
  42b290:	call   406040 <free@plt>
  42b295:	vxorps xmm0,xmm0,xmm0
  42b299:	vmovups YMMWORD PTR [r14+0x20],ymm0
  42b29f:	vmovups YMMWORD PTR [r14],ymm0
  42b2a4:	mov    QWORD PTR [r14+0x40],0x0
  42b2ac:	add    rsp,0x8
  42b2b0:	pop    rbx
  42b2b1:	pop    r14
  42b2b3:	vzeroupper 
  42b2b6:	ret    
  42b2b7:	nop    WORD PTR [rax+rax*1+0x0]

000000000042b2c0 <flatcc_emitter@@Base>:
  42b2c0:	push   rbp
  42b2c1:	push   r15
  42b2c3:	push   r14
  42b2c5:	push   r13
  42b2c7:	push   r12
  42b2c9:	push   rbx
  42b2ca:	push   rax
  42b2cb:	mov    r14d,edx
  42b2ce:	mov    r12,rsi
  42b2d1:	mov    rbp,rdi
  42b2d4:	add    QWORD PTR [rdi+0x30],r8
  42b2d8:	test   ecx,ecx
  42b2da:	js     42b455 <flatcc_emitter@@Base+0x195>
  42b2e0:	mov    rdx,QWORD PTR [rbp+0x28]
  42b2e4:	cmp    rdx,r8
  42b2e7:	jae    42b608 <flatcc_emitter@@Base+0x348>
  42b2ed:	xor    eax,eax
  42b2ef:	test   r14d,r14d
  42b2f2:	je     42b6e7 <flatcc_emitter@@Base+0x427>
  42b2f8:	mov    r15,QWORD PTR [r12+0x8]
  42b2fd:	test   r15,r15
  42b300:	je     42b440 <flatcc_emitter@@Base+0x180>
  42b306:	mov    r13,QWORD PTR [r12]
  42b30a:	jmp    42b339 <flatcc_emitter@@Base+0x79>
  42b30c:	mov    rbx,r15
  42b30f:	mov    rdi,QWORD PTR [rbp+0x20]
  42b313:	mov    rsi,r13
  42b316:	mov    rdx,rbx
  42b319:	call   406190 <memcpy@plt>
  42b31e:	add    QWORD PTR [rbp+0x20],rbx
  42b322:	add    r13,rbx
  42b325:	mov    rdx,QWORD PTR [rbp+0x28]
  42b329:	sub    rdx,rbx
  42b32c:	mov    QWORD PTR [rbp+0x28],rdx
  42b330:	sub    r15,rbx
  42b333:	je     42b440 <flatcc_emitter@@Base+0x180>
  42b339:	mov    rbx,r15
  42b33c:	cmp    r15,rdx
  42b33f:	jbe    42b30f <flatcc_emitter@@Base+0x4f>
  42b341:	mov    rbx,rdx
  42b344:	test   rbx,rbx
  42b347:	je     42b3b1 <flatcc_emitter@@Base+0xf1>
  42b349:	jmp    42b30f <flatcc_emitter@@Base+0x4f>
  42b34b:	nop    DWORD PTR [rax+rax*1+0x0]
  42b350:	mov    QWORD PTR [rax+0xb88],rbx
  42b357:	mov    rcx,QWORD PTR [rbp+0x0]
  42b35b:	mov    QWORD PTR [rax+0xb80],rcx
  42b362:	mov    QWORD PTR [rcx+0xb88],rax
  42b369:	mov    QWORD PTR [rbx+0xb80],rax
  42b370:	mov    QWORD PTR [rbp+0x8],rax
  42b374:	mov    QWORD PTR [rbp+0x20],rax
  42b378:	mov    QWORD PTR [rbp+0x28],0xb80
  42b380:	mov    rcx,QWORD PTR [rax+0xb88]
  42b387:	mov    ecx,DWORD PTR [rcx+0xb90]
  42b38d:	mov    edx,0xb80
  42b392:	add    ecx,edx
  42b394:	mov    DWORD PTR [rax+0xb90],ecx
  42b39a:	mov    ebx,0xb80
  42b39f:	cmp    r15,rbx
  42b3a2:	jbe    42b30c <flatcc_emitter@@Base+0x4c>
  42b3a8:	test   rbx,rbx
  42b3ab:	jne    42b30f <flatcc_emitter@@Base+0x4f>
  42b3b1:	mov    rbx,QWORD PTR [rbp+0x8]
  42b3b5:	test   rbx,rbx
  42b3b8:	je     42b3c7 <flatcc_emitter@@Base+0x107>
  42b3ba:	mov    rax,QWORD PTR [rbx+0xb80]
  42b3c1:	cmp    rax,QWORD PTR [rbp+0x0]
  42b3c5:	jne    42b370 <flatcc_emitter@@Base+0xb0>
  42b3c7:	mov    edi,0xb98
  42b3cc:	call   4061a0 <malloc@plt>
  42b3d1:	test   rax,rax
  42b3d4:	je     42b61a <flatcc_emitter@@Base+0x35a>
  42b3da:	add    QWORD PTR [rbp+0x38],0xb80
  42b3e2:	test   rbx,rbx
  42b3e5:	jne    42b350 <flatcc_emitter@@Base+0x90>
  42b3eb:	mov    QWORD PTR [rbp+0x0],rax
  42b3ef:	mov    QWORD PTR [rbp+0x8],rax
  42b3f3:	mov    QWORD PTR [rax+0xb80],rax
  42b3fa:	mov    QWORD PTR [rax+0xb88],rax
  42b401:	mov    rcx,rax
  42b404:	add    rcx,0x5c0
  42b40b:	mov    QWORD PTR [rbp+0x10],rcx
  42b40f:	mov    QWORD PTR [rbp+0x20],rcx
  42b413:	mov    QWORD PTR [rbp+0x18],0x5c0
  42b41b:	mov    QWORD PTR [rbp+0x28],0x5c0
  42b423:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  42b42d:	mov    ebx,0x5c0
  42b432:	cmp    r15,rbx
  42b435:	ja     42b3a8 <flatcc_emitter@@Base+0xe8>
  42b43b:	jmp    42b30c <flatcc_emitter@@Base+0x4c>
  42b440:	dec    r14d
  42b443:	add    r12,0x10
  42b447:	test   r14d,r14d
  42b44a:	jne    42b2f8 <flatcc_emitter@@Base+0x38>
  42b450:	jmp    42b6e5 <flatcc_emitter@@Base+0x425>
  42b455:	lea    rsi,[rbp+0x18]
  42b459:	mov    rdx,QWORD PTR [rbp+0x18]
  42b45d:	cmp    rdx,r8
  42b460:	jae    42b624 <flatcc_emitter@@Base+0x364>
  42b466:	xor    eax,eax
  42b468:	test   r14d,r14d
  42b46b:	je     42b6e7 <flatcc_emitter@@Base+0x427>
  42b471:	mov    QWORD PTR [rsp],rsi
  42b475:	movsxd rax,r14d
  42b478:	shl    rax,0x4
  42b47c:	add    r12,rax
  42b47f:	mov    edx,0xfffff480
  42b484:	mov    r15,QWORD PTR [r12-0x8]
  42b489:	add    r12,0xfffffffffffffff0
  42b48d:	test   r15,r15
  42b490:	je     42b5fa <flatcc_emitter@@Base+0x33a>
  42b496:	mov    r13,QWORD PTR [r12]
  42b49a:	add    r13,r15
  42b49d:	jmp    42b4d1 <flatcc_emitter@@Base+0x211>
  42b49f:	nop
  42b4a0:	mov    rbx,r15
  42b4a3:	mov    rdi,QWORD PTR [rbp+0x10]
  42b4a7:	sub    rdi,rbx
  42b4aa:	mov    QWORD PTR [rbp+0x10],rdi
  42b4ae:	sub    rax,rbx
  42b4b1:	mov    QWORD PTR [rbp+0x18],rax
  42b4b5:	sub    r13,rbx
  42b4b8:	mov    rsi,r13
  42b4bb:	mov    rdx,rbx
  42b4be:	call   406190 <memcpy@plt>
  42b4c3:	mov    edx,0xfffff480
  42b4c8:	sub    r15,rbx
  42b4cb:	je     42b5fa <flatcc_emitter@@Base+0x33a>
  42b4d1:	mov    rax,QWORD PTR [rsp]
  42b4d5:	mov    rax,QWORD PTR [rax]
  42b4d8:	cmp    r15,rax
  42b4db:	ja     42b528 <flatcc_emitter@@Base+0x268>
  42b4dd:	jmp    42b4a0 <flatcc_emitter@@Base+0x1e0>
  42b4df:	nop
  42b4e0:	mov    ecx,DWORD PTR [rbx+0xb90]
  42b4e6:	add    ecx,edx
  42b4e8:	mov    DWORD PTR [rax+0xb90],ecx
  42b4ee:	mov    QWORD PTR [rbp+0x0],rax
  42b4f2:	lea    rcx,[rax+0xb80]
  42b4f9:	mov    QWORD PTR [rbp+0x10],rcx
  42b4fd:	mov    QWORD PTR [rbp+0x18],0xb80
  42b505:	mov    rcx,QWORD PTR [rax+0xb80]
  42b50c:	mov    ecx,DWORD PTR [rcx+0xb90]
  42b512:	add    ecx,edx
  42b514:	mov    DWORD PTR [rax+0xb90],ecx
  42b51a:	mov    eax,0xb80
  42b51f:	cmp    r15,rax
  42b522:	jbe    42b4a0 <flatcc_emitter@@Base+0x1e0>
  42b528:	mov    rbx,rax
  42b52b:	test   rax,rax
  42b52e:	jne    42b4a3 <flatcc_emitter@@Base+0x1e3>
  42b534:	mov    rbx,QWORD PTR [rbp+0x0]
  42b538:	test   rbx,rbx
  42b53b:	je     42b54a <flatcc_emitter@@Base+0x28a>
  42b53d:	mov    rax,QWORD PTR [rbx+0xb88]
  42b544:	cmp    rax,QWORD PTR [rbp+0x8]
  42b548:	jne    42b4e0 <flatcc_emitter@@Base+0x220>
  42b54a:	mov    edi,0xb98
  42b54f:	call   4061a0 <malloc@plt>
  42b554:	test   rax,rax
  42b557:	je     42b61a <flatcc_emitter@@Base+0x35a>
  42b55d:	add    QWORD PTR [rbp+0x38],0xb80
  42b565:	test   rbx,rbx
  42b568:	je     42b5a0 <flatcc_emitter@@Base+0x2e0>
  42b56a:	mov    rcx,QWORD PTR [rbp+0x8]
  42b56e:	mov    QWORD PTR [rax+0xb88],rcx
  42b575:	mov    QWORD PTR [rax+0xb80],rbx
  42b57c:	mov    QWORD PTR [rbx+0xb88],rax
  42b583:	mov    QWORD PTR [rcx+0xb80],rax
  42b58a:	mov    QWORD PTR [rbp+0x0],rax
  42b58e:	mov    edx,0xfffff480
  42b593:	jmp    42b4f2 <flatcc_emitter@@Base+0x232>
  42b598:	nop    DWORD PTR [rax+rax*1+0x0]
  42b5a0:	mov    QWORD PTR [rbp+0x0],rax
  42b5a4:	mov    QWORD PTR [rbp+0x8],rax
  42b5a8:	mov    QWORD PTR [rax+0xb80],rax
  42b5af:	mov    QWORD PTR [rax+0xb88],rax
  42b5b6:	mov    rcx,rax
  42b5b9:	add    rcx,0x5c0
  42b5c0:	mov    QWORD PTR [rbp+0x10],rcx
  42b5c4:	mov    QWORD PTR [rbp+0x20],rcx
  42b5c8:	mov    QWORD PTR [rbp+0x18],0x5c0
  42b5d0:	mov    QWORD PTR [rbp+0x28],0x5c0
  42b5d8:	mov    DWORD PTR [rax+0xb90],0xfffffa40
  42b5e2:	mov    eax,0x5c0
  42b5e7:	mov    edx,0xfffff480
  42b5ec:	cmp    r15,rax
  42b5ef:	ja     42b528 <flatcc_emitter@@Base+0x268>
  42b5f5:	jmp    42b4a0 <flatcc_emitter@@Base+0x1e0>
  42b5fa:	dec    r14d
  42b5fd:	jne    42b484 <flatcc_emitter@@Base+0x1c4>
  42b603:	jmp    42b6e5 <flatcc_emitter@@Base+0x425>
  42b608:	lea    rsi,[rbp+0x28]
  42b60c:	mov    rbx,QWORD PTR [rbp+0x20]
  42b610:	lea    rcx,[rbx+r8*1]
  42b614:	mov    QWORD PTR [rbp+0x20],rcx
  42b618:	jmp    42b62f <flatcc_emitter@@Base+0x36f>
  42b61a:	mov    eax,0xffffffff
  42b61f:	jmp    42b6e7 <flatcc_emitter@@Base+0x427>
  42b624:	mov    rbx,QWORD PTR [rbp+0x10]
  42b628:	sub    rbx,r8
  42b62b:	mov    QWORD PTR [rbp+0x10],rbx
  42b62f:	sub    rdx,r8
  42b632:	mov    QWORD PTR [rsi],rdx
  42b635:	xor    eax,eax
  42b637:	test   r14d,r14d
  42b63a:	je     42b6e7 <flatcc_emitter@@Base+0x427>
  42b640:	lea    r15d,[r14-0x1]
  42b644:	mov    r13d,r14d
  42b647:	and    r13d,0x3
  42b64b:	je     42b674 <flatcc_emitter@@Base+0x3b4>
  42b64d:	xor    ebp,ebp
  42b64f:	nop
  42b650:	mov    rsi,QWORD PTR [r12]
  42b654:	mov    rdx,QWORD PTR [r12+0x8]
  42b659:	mov    rdi,rbx
  42b65c:	call   406190 <memcpy@plt>
  42b661:	add    rbx,QWORD PTR [r12+0x8]
  42b666:	add    r12,0x10
  42b66a:	inc    ebp
  42b66c:	cmp    r13d,ebp
  42b66f:	jne    42b650 <flatcc_emitter@@Base+0x390>
  42b671:	sub    r14d,ebp
  42b674:	cmp    r15d,0x3
  42b678:	jb     42b6e5 <flatcc_emitter@@Base+0x425>
  42b67a:	nop    WORD PTR [rax+rax*1+0x0]
  42b680:	mov    rsi,QWORD PTR [r12]
  42b684:	mov    rdx,QWORD PTR [r12+0x8]
  42b689:	mov    rdi,rbx
  42b68c:	call   406190 <memcpy@plt>
  42b691:	add    rbx,QWORD PTR [r12+0x8]
  42b696:	mov    rsi,QWORD PTR [r12+0x10]
  42b69b:	mov    rdx,QWORD PTR [r12+0x18]
  42b6a0:	mov    rdi,rbx
  42b6a3:	call   406190 <memcpy@plt>
  42b6a8:	add    rbx,QWORD PTR [r12+0x18]
  42b6ad:	mov    rsi,QWORD PTR [r12+0x20]
  42b6b2:	mov    rdx,QWORD PTR [r12+0x28]
  42b6b7:	mov    rdi,rbx
  42b6ba:	call   406190 <memcpy@plt>
  42b6bf:	add    rbx,QWORD PTR [r12+0x28]
  42b6c4:	mov    rsi,QWORD PTR [r12+0x30]
  42b6c9:	mov    rdx,QWORD PTR [r12+0x38]
  42b6ce:	mov    rdi,rbx
  42b6d1:	call   406190 <memcpy@plt>
  42b6d6:	add    rbx,QWORD PTR [r12+0x38]
  42b6db:	add    r12,0x40
  42b6df:	add    r14d,0xfffffffc
  42b6e3:	jne    42b680 <flatcc_emitter@@Base+0x3c0>
  42b6e5:	xor    eax,eax
  42b6e7:	add    rsp,0x8
  42b6eb:	pop    rbx
  42b6ec:	pop    r12
  42b6ee:	pop    r13
  42b6f0:	pop    r14
  42b6f2:	pop    r15
  42b6f4:	pop    rbp
  42b6f5:	ret    
  42b6f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000042b700 <flatcc_emitter_copy_buffer@@Base>:
  42b700:	push   r15
  42b702:	push   r14
  42b704:	push   r13
  42b706:	push   r12
  42b708:	push   rbx
  42b709:	mov    rax,rdx
  42b70c:	mov    rdx,QWORD PTR [rdi+0x30]
  42b710:	cmp    rdx,rax
  42b713:	ja     42b7ab <flatcc_emitter_copy_buffer@@Base+0xab>
  42b719:	mov    r14,rdi
  42b71c:	mov    rax,QWORD PTR [rdi]
  42b71f:	test   rax,rax
  42b722:	je     42b7ab <flatcc_emitter_copy_buffer@@Base+0xab>
  42b728:	mov    r12,rsi
  42b72b:	cmp    rax,QWORD PTR [r14+0x8]
  42b72f:	je     42b7bb <flatcc_emitter_copy_buffer@@Base+0xbb>
  42b735:	mov    r15d,0xb80
  42b73b:	mov    r13d,0xb80
  42b741:	sub    r13,QWORD PTR [r14+0x18]
  42b745:	mov    rsi,QWORD PTR [r14+0x10]
  42b749:	mov    rdi,r12
  42b74c:	mov    rdx,r13
  42b74f:	call   406190 <memcpy@plt>
  42b754:	add    r13,r12
  42b757:	mov    rax,QWORD PTR [r14]
  42b75a:	mov    rbx,QWORD PTR [rax+0xb80]
  42b761:	cmp    rbx,QWORD PTR [r14+0x8]
  42b765:	je     42b794 <flatcc_emitter_copy_buffer@@Base+0x94>
  42b767:	nop    WORD PTR [rax+rax*1+0x0]
  42b770:	mov    edx,0xb80
  42b775:	mov    rdi,r13
  42b778:	mov    rsi,rbx
  42b77b:	call   406190 <memcpy@plt>
  42b780:	add    r13,0xb80
  42b787:	mov    rbx,QWORD PTR [rbx+0xb80]
  42b78e:	cmp    rbx,QWORD PTR [r14+0x8]
  42b792:	jne    42b770 <flatcc_emitter_copy_buffer@@Base+0x70>
  42b794:	sub    r15,QWORD PTR [r14+0x28]
  42b798:	mov    rdi,r13
  42b79b:	mov    rsi,rbx
  42b79e:	mov    rdx,r15
  42b7a1:	call   406190 <memcpy@plt>
  42b7a6:	mov    r12,r13
  42b7a9:	jmp    42b7ae <flatcc_emitter_copy_buffer@@Base+0xae>
  42b7ab:	xor    r12d,r12d
  42b7ae:	mov    rax,r12
  42b7b1:	pop    rbx
  42b7b2:	pop    r12
  42b7b4:	pop    r13
  42b7b6:	pop    r14
  42b7b8:	pop    r15
  42b7ba:	ret    
  42b7bb:	mov    rsi,QWORD PTR [r14+0x10]
  42b7bf:	mov    rdi,r12
  42b7c2:	call   406190 <memcpy@plt>
  42b7c7:	jmp    42b7ae <flatcc_emitter_copy_buffer@@Base+0xae>
  42b7c9:	nop    DWORD PTR [rax+0x0]

000000000042b7d0 <cmetrohash64_1@@Base>:
  42b7d0:	push   r15
  42b7d2:	push   r14
  42b7d4:	push   rbx
  42b7d5:	mov    r8d,0x8648dbdb
  42b7db:	lea    r9,[rdi+rsi*1]
  42b7df:	mov    eax,edx
  42b7e1:	lea    r11,[r8+0x41f1b606]
  42b7e8:	imul   rax,r11
  42b7ec:	add    rax,rsi
  42b7ef:	movabs r10,0x60e25d3baf065edb
  42b7f9:	add    r10,rax
  42b7fc:	cmp    rsi,0x20
  42b800:	jb     42b8dd <cmetrohash64_1@@Base+0x10d>
  42b806:	lea    r14,[r9-0x20]
  42b80a:	mov    rax,r10
  42b80d:	mov    rbx,r10
  42b810:	mov    r15,r10
  42b813:	mov    rdx,r10
  42b816:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42b820:	mov    rsi,QWORD PTR [rdi]
  42b823:	imul   rsi,r11
  42b827:	add    rsi,rdx
  42b82a:	rorx   rdx,rsi,0x1d
  42b830:	add    rdx,rbx
  42b833:	mov    rsi,QWORD PTR [rdi+0x8]
  42b837:	imul   rsi,r8
  42b83b:	add    rsi,r15
  42b83e:	rorx   r15,rsi,0x1d
  42b844:	add    r15,rax
  42b847:	imul   rsi,QWORD PTR [rdi+0x10],0x7bdec03b
  42b84f:	add    rsi,rbx
  42b852:	rorx   rbx,rsi,0x1d
  42b858:	imul   rsi,QWORD PTR [rdi+0x18],0x2f5870a5
  42b860:	add    rbx,rdx
  42b863:	add    rsi,rax
  42b866:	add    rdi,0x20
  42b86a:	rorx   rax,rsi,0x1d
  42b870:	add    rax,r15
  42b873:	cmp    rdi,r14
  42b876:	jbe    42b820 <cmetrohash64_1@@Base+0x50>
  42b878:	lea    rsi,[rax+rdx*1]
  42b87c:	imul   rsi,r11
  42b880:	add    rsi,r15
  42b883:	rorx   rsi,rsi,0x21
  42b889:	imul   rsi,r8
  42b88d:	xor    rsi,rbx
  42b890:	lea    rbx,[rsi+r15*1]
  42b894:	imul   rbx,r8
  42b898:	add    rbx,rdx
  42b89b:	rorx   rbx,rbx,0x21
  42b8a1:	imul   rbx,r11
  42b8a5:	xor    rbx,rax
  42b8a8:	lea    rax,[rsi+rdx*1]
  42b8ac:	imul   rax,r11
  42b8b0:	add    rax,rbx
  42b8b3:	rorx   rax,rax,0x21
  42b8b9:	imul   rax,r8
  42b8bd:	add    rbx,r15
  42b8c0:	imul   rbx,r8
  42b8c4:	add    rbx,rsi
  42b8c7:	rorx   rsi,rbx,0x21
  42b8cd:	imul   rsi,r11
  42b8d1:	xor    r15,rdx
  42b8d4:	xor    r15,rax
  42b8d7:	xor    r15,rsi
  42b8da:	add    r10,r15
  42b8dd:	mov    rax,r9
  42b8e0:	sub    rax,rdi
  42b8e3:	cmp    rax,0x10
  42b8e7:	jge    42b957 <cmetrohash64_1@@Base+0x187>
  42b8e9:	cmp    rax,0x8
  42b8ed:	jge    42b9ec <cmetrohash64_1@@Base+0x21c>
  42b8f3:	cmp    rax,0x4
  42b8f7:	jge    42ba17 <cmetrohash64_1@@Base+0x247>
  42b8fd:	cmp    rax,0x2
  42b901:	jge    42ba44 <cmetrohash64_1@@Base+0x274>
  42b907:	test   rax,rax
  42b90a:	jle    42b926 <cmetrohash64_1@@Base+0x156>
  42b90c:	movzx  eax,BYTE PTR [rdi]
  42b90f:	imul   rax,rax,0x2f5870a5
  42b916:	add    rax,r10
  42b919:	rorx   r10,rax,0x19
  42b91f:	imul   r10,r8
  42b923:	xor    r10,rax
  42b926:	rorx   rax,r10,0x21
  42b92c:	xor    rax,r10
  42b92f:	imul   r11,rax
  42b933:	mov    rdx,r11
  42b936:	shr    rdx,0x21
  42b93a:	movabs rsi,0x641d48f080000000
  42b944:	imul   rsi,rax
  42b948:	or     rsi,rdx
  42b94b:	xor    rsi,r11
  42b94e:	mov    QWORD PTR [rcx],rsi
  42b951:	pop    rbx
  42b952:	pop    r14
  42b954:	pop    r15
  42b956:	ret    
  42b957:	mov    rax,QWORD PTR [rdi]
  42b95a:	imul   rax,r11
  42b95e:	add    rax,r10
  42b961:	rorx   rax,rax,0x21
  42b967:	movabs rdx,0x6907a4ca322e467b
  42b971:	imul   rdx,rax
  42b975:	movabs rsi,0x4645c8cf60000000
  42b97f:	imul   rsi,rax
  42b983:	imul   rax,r8
  42b987:	mov    rbx,QWORD PTR [rdi+0x8]
  42b98b:	imul   rbx,r8
  42b98f:	add    rbx,r10
  42b992:	add    rdi,0x10
  42b996:	rorx   rbx,rbx,0x21
  42b99c:	imul   r14,rbx,0x7bdec03b
  42b9a3:	shr    rdx,0x23
  42b9a7:	or     rsi,rdx
  42b9aa:	add    rsi,r14
  42b9ad:	xor    rsi,rax
  42b9b0:	movabs rax,0x16e8b05e33f3b607
  42b9ba:	imul   rax,rbx
  42b9be:	shr    rax,0x23
  42b9c2:	movabs rdx,0xc67e76c0e0000000
  42b9cc:	imul   rdx,rbx
  42b9d0:	or     rdx,rax
  42b9d3:	add    rdx,rsi
  42b9d6:	xor    rdx,r14
  42b9d9:	add    r10,rdx
  42b9dc:	mov    rax,r9
  42b9df:	sub    rax,rdi
  42b9e2:	cmp    rax,0x8
  42b9e6:	jl     42b8f3 <cmetrohash64_1@@Base+0x123>
  42b9ec:	imul   rax,QWORD PTR [rdi],0x2f5870a5
  42b9f3:	add    rax,r10
  42b9f6:	add    rdi,0x8
  42b9fa:	rorx   r10,rax,0x21
  42ba00:	imul   r10,r8
  42ba04:	xor    r10,rax
  42ba07:	mov    rax,r9
  42ba0a:	sub    rax,rdi
  42ba0d:	cmp    rax,0x4
  42ba11:	jl     42b8fd <cmetrohash64_1@@Base+0x12d>
  42ba17:	mov    eax,DWORD PTR [rdi]
  42ba19:	imul   rax,rax,0x2f5870a5
  42ba20:	add    rax,r10
  42ba23:	add    rdi,0x4
  42ba27:	rorx   r10,rax,0xf
  42ba2d:	imul   r10,r8
  42ba31:	xor    r10,rax
  42ba34:	mov    rax,r9
  42ba37:	sub    rax,rdi
  42ba3a:	cmp    rax,0x2
  42ba3e:	jl     42b907 <cmetrohash64_1@@Base+0x137>
  42ba44:	movzx  eax,WORD PTR [rdi]
  42ba47:	imul   rax,rax,0x2f5870a5
  42ba4e:	add    rax,r10
  42ba51:	add    rdi,0x2
  42ba55:	rorx   r10,rax,0xd
  42ba5b:	imul   r10,r8
  42ba5f:	xor    r10,rax
  42ba62:	sub    r9,rdi
  42ba65:	mov    rax,r9
  42ba68:	test   rax,rax
  42ba6b:	jg     42b90c <cmetrohash64_1@@Base+0x13c>
  42ba71:	jmp    42b926 <cmetrohash64_1@@Base+0x156>
  42ba76:	nop    WORD PTR cs:[rax+rax*1+0x0]

000000000042ba80 <cmetrohash64_2@@Base>:
  42ba80:	push   r15
  42ba82:	push   r14
  42ba84:	push   rbx
  42ba85:	mov    r8d,0xa2aa033b
  42ba8b:	lea    r9,[rdi+rsi*1]
  42ba8f:	mov    eax,edx
  42ba91:	lea    r11,[r8+0x342615ba]
  42ba98:	imul   rax,r11
  42ba9c:	add    rax,rsi
  42ba9f:	movabs r10,0x52bc33fedbe4cbb5
  42baa9:	add    r10,rax
  42baac:	cmp    rsi,0x20
  42bab0:	jb     42bb8d <cmetrohash64_2@@Base+0x10d>
  42bab6:	lea    r14,[r9-0x20]
  42baba:	mov    rax,r10
  42babd:	mov    rbx,r10
  42bac0:	mov    r15,r10
  42bac3:	mov    rdx,r10
  42bac6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bad0:	mov    rsi,QWORD PTR [rdi]
  42bad3:	imul   rsi,r11
  42bad7:	add    rsi,rdx
  42bada:	rorx   rdx,rsi,0x1d
  42bae0:	add    rdx,rbx
  42bae3:	mov    rsi,QWORD PTR [rdi+0x8]
  42bae7:	imul   rsi,r8
  42baeb:	add    rsi,r15
  42baee:	rorx   r15,rsi,0x1d
  42baf4:	add    r15,rax
  42baf7:	imul   rsi,QWORD PTR [rdi+0x10],0x62992fc1
  42baff:	add    rsi,rbx
  42bb02:	rorx   rbx,rsi,0x1d
  42bb08:	imul   rsi,QWORD PTR [rdi+0x18],0x30bc5b29
  42bb10:	add    rbx,rdx
  42bb13:	add    rsi,rax
  42bb16:	add    rdi,0x20
  42bb1a:	rorx   rax,rsi,0x1d
  42bb20:	add    rax,r15
  42bb23:	cmp    rdi,r14
  42bb26:	jbe    42bad0 <cmetrohash64_2@@Base+0x50>
  42bb28:	lea    rsi,[rax+rdx*1]
  42bb2c:	imul   rsi,r11
  42bb30:	add    rsi,r15
  42bb33:	rorx   rsi,rsi,0x1e
  42bb39:	imul   rsi,r8
  42bb3d:	xor    rsi,rbx
  42bb40:	lea    rbx,[rsi+r15*1]
  42bb44:	imul   rbx,r8
  42bb48:	add    rbx,rdx
  42bb4b:	rorx   rbx,rbx,0x1e
  42bb51:	imul   rbx,r11
  42bb55:	xor    rbx,rax
  42bb58:	lea    rax,[rsi+rdx*1]
  42bb5c:	imul   rax,r11
  42bb60:	add    rax,rbx
  42bb63:	rorx   rax,rax,0x1e
  42bb69:	imul   rax,r8
  42bb6d:	add    rbx,r15
  42bb70:	imul   rbx,r8
  42bb74:	add    rbx,rsi
  42bb77:	rorx   rsi,rbx,0x1e
  42bb7d:	imul   rsi,r11
  42bb81:	xor    r15,rdx
  42bb84:	xor    r15,rax
  42bb87:	xor    r15,rsi
  42bb8a:	add    r10,r15
  42bb8d:	mov    rax,r9
  42bb90:	sub    rax,rdi
  42bb93:	cmp    rax,0x10
  42bb97:	jge    42bc07 <cmetrohash64_2@@Base+0x187>
  42bb99:	cmp    rax,0x8
  42bb9d:	jge    42bc9f <cmetrohash64_2@@Base+0x21f>
  42bba3:	cmp    rax,0x4
  42bba7:	jge    42bcca <cmetrohash64_2@@Base+0x24a>
  42bbad:	cmp    rax,0x2
  42bbb1:	jge    42bcf7 <cmetrohash64_2@@Base+0x277>
  42bbb7:	test   rax,rax
  42bbba:	jle    42bbd6 <cmetrohash64_2@@Base+0x156>
  42bbbc:	movzx  eax,BYTE PTR [rdi]
  42bbbf:	imul   rax,rax,0x30bc5b29
  42bbc6:	add    rax,r10
  42bbc9:	rorx   r10,rax,0x17
  42bbcf:	imul   r10,r8
  42bbd3:	xor    r10,rax
  42bbd6:	rorx   rax,r10,0x1c
  42bbdc:	xor    rax,r10
  42bbdf:	imul   r11,rax
  42bbe3:	mov    rdx,r11
  42bbe6:	shr    rdx,0x1d
  42bbea:	movabs rsi,0xb680c7a800000000
  42bbf4:	imul   rsi,rax
  42bbf8:	or     rsi,rdx
  42bbfb:	xor    rsi,r11
  42bbfe:	mov    QWORD PTR [rcx],rsi
  42bc01:	pop    rbx
  42bc02:	pop    r14
  42bc04:	pop    r15
  42bc06:	ret    
  42bc07:	imul   rax,QWORD PTR [rdi],0x62992fc1
  42bc0e:	add    rax,r10
  42bc11:	rorx   rax,rax,0x1d
  42bc17:	imul   r14,rax,0x30bc5b29
  42bc1e:	imul   rsi,QWORD PTR [rdi+0x8],0x62992fc1
  42bc26:	add    rsi,r10
  42bc29:	add    rdi,0x10
  42bc2d:	rorx   rsi,rsi,0x1d
  42bc33:	imul   r15,rsi,0x30bc5b29
  42bc3a:	movabs rdx,0x28e511fea41f163d
  42bc44:	imul   rdx,rax
  42bc48:	shr    rdx,0x22
  42bc4c:	movabs rbx,0xa907c58f40000000
  42bc56:	imul   rbx,rax
  42bc5a:	or     rbx,rdx
  42bc5d:	add    rbx,r15
  42bc60:	xor    rbx,r14
  42bc63:	movabs rax,0x9472cc564ae2c91
  42bc6d:	imul   rax,rsi
  42bc71:	shr    rax,0x22
  42bc75:	movabs rdx,0x592b8b2440000000
  42bc7f:	imul   rdx,rsi
  42bc83:	or     rdx,rax
  42bc86:	add    rdx,rbx
  42bc89:	xor    rdx,r15
  42bc8c:	add    r10,rdx
  42bc8f:	mov    rax,r9
  42bc92:	sub    rax,rdi
  42bc95:	cmp    rax,0x8
  42bc99:	jl     42bba3 <cmetrohash64_2@@Base+0x123>
  42bc9f:	imul   rax,QWORD PTR [rdi],0x30bc5b29
  42bca6:	add    rax,r10
  42bca9:	add    rdi,0x8
  42bcad:	rorx   r10,rax,0x24
  42bcb3:	imul   r10,r8
  42bcb7:	xor    r10,rax
  42bcba:	mov    rax,r9
  42bcbd:	sub    rax,rdi
  42bcc0:	cmp    rax,0x4
  42bcc4:	jl     42bbad <cmetrohash64_2@@Base+0x12d>
  42bcca:	mov    eax,DWORD PTR [rdi]
  42bccc:	imul   rax,rax,0x30bc5b29
  42bcd3:	add    rax,r10
  42bcd6:	add    rdi,0x4
  42bcda:	rorx   r10,rax,0xf
  42bce0:	imul   r10,r8
  42bce4:	xor    r10,rax
  42bce7:	mov    rax,r9
  42bcea:	sub    rax,rdi
  42bced:	cmp    rax,0x2
  42bcf1:	jl     42bbb7 <cmetrohash64_2@@Base+0x137>
  42bcf7:	movzx  eax,WORD PTR [rdi]
  42bcfa:	imul   rax,rax,0x30bc5b29
  42bd01:	add    rax,r10
  42bd04:	add    rdi,0x2
  42bd08:	rorx   r10,rax,0xf
  42bd0e:	imul   r10,r8
  42bd12:	xor    r10,rax
  42bd15:	sub    r9,rdi
  42bd18:	mov    rax,r9
  42bd1b:	test   rax,rax
  42bd1e:	jg     42bbbc <cmetrohash64_2@@Base+0x13c>
  42bd24:	jmp    42bbd6 <cmetrohash64_2@@Base+0x156>
  42bd29:	nop    DWORD PTR [rax+0x0]

000000000042bd30 <fb_name_table_clear@@Base>:
  42bd30:	push   rbx
  42bd31:	mov    rbx,rdi
  42bd34:	mov    rdi,QWORD PTR [rdi]
  42bd37:	test   rdi,rdi
  42bd3a:	je     42bd41 <fb_name_table_clear@@Base+0x11>
  42bd3c:	call   406040 <free@plt>
  42bd41:	vxorps xmm0,xmm0,xmm0
  42bd45:	vmovups YMMWORD PTR [rbx],ymm0
  42bd49:	pop    rbx
  42bd4a:	vzeroupper 
  42bd4d:	ret    
  42bd4e:	xchg   ax,ax

000000000042bd50 <fb_name_table_destroy@@Base>:
  42bd50:	push   r15
  42bd52:	push   r14
  42bd54:	push   r13
  42bd56:	push   r12
  42bd58:	push   rbx
  42bd59:	mov    r12,rdi
  42bd5c:	test   rsi,rsi
  42bd5f:	je     42bda7 <fb_name_table_destroy@@Base+0x57>
  42bd61:	mov    rax,QWORD PTR [r12+0x18]
  42bd66:	test   rax,rax
  42bd69:	je     42bda7 <fb_name_table_destroy@@Base+0x57>
  42bd6b:	mov    r14,rdx
  42bd6e:	mov    r15,rsi
  42bd71:	mov    r13,QWORD PTR [r12]
  42bd75:	xor    ebx,ebx
  42bd77:	jmp    42bd88 <fb_name_table_destroy@@Base+0x38>
  42bd79:	nop    DWORD PTR [rax+0x0]
  42bd80:	inc    rbx
  42bd83:	cmp    rbx,rax
  42bd86:	jae    42bda7 <fb_name_table_destroy@@Base+0x57>
  42bd88:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  42bd8d:	mov    rcx,rsi
  42bd90:	or     rcx,0x2
  42bd94:	cmp    rcx,0x2
  42bd98:	je     42bd80 <fb_name_table_destroy@@Base+0x30>
  42bd9a:	mov    rdi,r14
  42bd9d:	call   r15
  42bda0:	mov    rax,QWORD PTR [r12+0x18]
  42bda5:	jmp    42bd80 <fb_name_table_destroy@@Base+0x30>
  42bda7:	mov    rdi,QWORD PTR [r12]
  42bdab:	test   rdi,rdi
  42bdae:	je     42bdb5 <fb_name_table_destroy@@Base+0x65>
  42bdb0:	call   406040 <free@plt>
  42bdb5:	vxorps xmm0,xmm0,xmm0
  42bdb9:	vmovups YMMWORD PTR [r12],ymm0
  42bdbf:	pop    rbx
  42bdc0:	pop    r12
  42bdc2:	pop    r13
  42bdc4:	pop    r14
  42bdc6:	pop    r15
  42bdc8:	vzeroupper 
  42bdcb:	ret    
  42bdcc:	nop    DWORD PTR [rax+0x0]

000000000042bdd0 <fb_name_table_init@@Base>:
  42bdd0:	push   r14
  42bdd2:	push   rbx
  42bdd3:	push   rax
  42bdd4:	mov    r14,rdi
  42bdd7:	mov    eax,0x4
  42bddc:	nop    DWORD PTR [rax+0x0]
  42bde0:	mov    rbx,rax
  42bde3:	imul   rcx,rax,0xb3
  42bdea:	shr    rcx,0x8
  42bdee:	add    rax,rax
  42bdf1:	cmp    rcx,rsi
  42bdf4:	jb     42bde0 <fb_name_table_init@@Base+0x10>
  42bdf6:	mov    esi,0x8
  42bdfb:	mov    rdi,rbx
  42bdfe:	call   406140 <calloc@plt>
  42be03:	mov    QWORD PTR [r14],rax
  42be06:	test   rax,rax
  42be09:	je     42be1d <fb_name_table_init@@Base+0x4d>
  42be0b:	vxorps xmm0,xmm0,xmm0
  42be0f:	vmovups XMMWORD PTR [r14+0x8],xmm0
  42be15:	mov    QWORD PTR [r14+0x18],rbx
  42be19:	xor    eax,eax
  42be1b:	jmp    42be22 <fb_name_table_init@@Base+0x52>
  42be1d:	mov    eax,0xffffffff
  42be22:	add    rsp,0x8
  42be26:	pop    rbx
  42be27:	pop    r14
  42be29:	ret    
  42be2a:	nop    WORD PTR [rax+rax*1+0x0]

000000000042be30 <fb_name_table_resize@@Base>:
  42be30:	jmp    42be40 <fb_name_table_resize@@Base+0x10>
  42be32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42be3c:	nop    DWORD PTR [rax+0x0]
  42be40:	push   r15
  42be42:	push   r14
  42be44:	push   r12
  42be46:	push   rbx
  42be47:	sub    rsp,0x28
  42be4b:	mov    r14,rdi
  42be4e:	mov    r12,QWORD PTR [rdi]
  42be51:	mov    rax,QWORD PTR [rdi+0x10]
  42be55:	cmp    rax,rsi
  42be58:	cmova  rsi,rax
  42be5c:	mov    eax,0x4
  42be61:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42be6b:	nop    DWORD PTR [rax+rax*1+0x0]
  42be70:	mov    rbx,rax
  42be73:	imul   rcx,rax,0xb3
  42be7a:	shr    rcx,0x8
  42be7e:	add    rax,rax
  42be81:	cmp    rcx,rsi
  42be84:	jb     42be70 <fb_name_table_resize@@Base+0x40>
  42be86:	mov    esi,0x8
  42be8b:	mov    rdi,rbx
  42be8e:	call   406140 <calloc@plt>
  42be93:	mov    QWORD PTR [rsp+0x8],rax
  42be98:	test   rax,rax
  42be9b:	je     42bef5 <fb_name_table_resize@@Base+0xc5>
  42be9d:	vxorps xmm0,xmm0,xmm0
  42bea1:	vmovups XMMWORD PTR [rsp+0x10],xmm0
  42bea7:	mov    QWORD PTR [rsp+0x20],rbx
  42beac:	mov    rax,QWORD PTR [r14+0x18]
  42beb0:	test   rax,rax
  42beb3:	je     42beff <fb_name_table_resize@@Base+0xcf>
  42beb5:	xor    ebx,ebx
  42beb7:	lea    r15,[rsp+0x8]
  42bebc:	jmp    42bec8 <fb_name_table_resize@@Base+0x98>
  42bebe:	xchg   ax,ax
  42bec0:	inc    rbx
  42bec3:	cmp    rbx,rax
  42bec6:	jae    42befc <fb_name_table_resize@@Base+0xcc>
  42bec8:	mov    rcx,QWORD PTR [r12+rbx*8]
  42becc:	mov    rdx,rcx
  42becf:	or     rdx,0x2
  42bed3:	cmp    rdx,0x2
  42bed7:	je     42bec0 <fb_name_table_resize@@Base+0x90>
  42bed9:	mov    rsi,QWORD PTR [rcx+0x8]
  42bedd:	movsxd rdx,DWORD PTR [rcx+0x10]
  42bee1:	mov    rdi,r15
  42bee4:	mov    r8d,0x3
  42beea:	call   42bf40 <fb_name_table_insert@@Base+0x10>
  42beef:	mov    rax,QWORD PTR [r14+0x18]
  42bef3:	jmp    42bec0 <fb_name_table_resize@@Base+0x90>
  42bef5:	mov    eax,0xffffffff
  42befa:	jmp    42bf19 <fb_name_table_resize@@Base+0xe9>
  42befc:	mov    r12,QWORD PTR [r14]
  42beff:	test   r12,r12
  42bf02:	je     42bf0c <fb_name_table_resize@@Base+0xdc>
  42bf04:	mov    rdi,r12
  42bf07:	call   406040 <free@plt>
  42bf0c:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  42bf12:	vmovups YMMWORD PTR [r14],ymm0
  42bf17:	xor    eax,eax
  42bf19:	add    rsp,0x28
  42bf1d:	pop    rbx
  42bf1e:	pop    r12
  42bf20:	pop    r14
  42bf22:	pop    r15
  42bf24:	vzeroupper 
  42bf27:	ret    
  42bf28:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042bf30 <fb_name_table_insert@@Base>:
  42bf30:	jmp    42bf40 <fb_name_table_insert@@Base+0x10>
  42bf32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42bf3c:	nop    DWORD PTR [rax+0x0]
  42bf40:	push   rbp
  42bf41:	push   r15
  42bf43:	push   r14
  42bf45:	push   r13
  42bf47:	push   r12
  42bf49:	push   rbx
  42bf4a:	sub    rsp,0x38
  42bf4e:	mov    QWORD PTR [rsp+0x20],rsi
  42bf53:	cmp    rcx,0x2
  42bf57:	je     42c0bb <fb_name_table_insert@@Base+0x18b>
  42bf5d:	mov    r13,rcx
  42bf60:	cmp    rcx,0x1
  42bf64:	je     42c0da <fb_name_table_insert@@Base+0x1aa>
  42bf6a:	test   r13,r13
  42bf6d:	je     42c0f9 <fb_name_table_insert@@Base+0x1c9>
  42bf73:	mov    ebp,r8d
  42bf76:	mov    rbx,rdi
  42bf79:	mov    rsi,QWORD PTR [rdi+0x10]
  42bf7d:	mov    r15,QWORD PTR [rdi+0x18]
  42bf81:	imul   rax,r15,0xb3
  42bf88:	shr    rax,0x8
  42bf8c:	cmp    rsi,rax
  42bf8f:	mov    QWORD PTR [rsp+0x8],rdx
  42bf94:	jb     42bfb2 <fb_name_table_insert@@Base+0x82>
  42bf96:	add    rsi,rsi
  42bf99:	mov    rdi,rbx
  42bf9c:	call   42be40 <fb_name_table_resize@@Base+0x10>
  42bfa1:	test   eax,eax
  42bfa3:	jne    42c118 <fb_name_table_insert@@Base+0x1e8>
  42bfa9:	mov    r15,QWORD PTR [rbx+0x18]
  42bfad:	mov    rdx,QWORD PTR [rsp+0x8]
  42bfb2:	mov    r14,QWORD PTR [rbx]
  42bfb5:	dec    r15
  42bfb8:	lea    rcx,[rsp+0x30]
  42bfbd:	mov    rdi,QWORD PTR [rsp+0x20]
  42bfc2:	mov    rsi,rdx
  42bfc5:	mov    edx,0x2f693b52
  42bfca:	call   42b7d0 <cmetrohash64_1@@Base>
  42bfcf:	mov    rcx,QWORD PTR [rsp+0x30]
  42bfd4:	mov    r12d,ecx
  42bfd7:	mov    eax,r15d
  42bfda:	and    eax,ecx
  42bfdc:	mov    ecx,ebp
  42bfde:	or     ecx,0x1
  42bfe1:	cmp    ecx,0x3
  42bfe4:	jne    42c00d <fb_name_table_insert@@Base+0xdd>
  42bfe6:	inc    QWORD PTR [rbx+0x10]
  42bfea:	nop    WORD PTR [rax+rax*1+0x0]
  42bff0:	inc    r12
  42bff3:	mov    rcx,QWORD PTR [r14+rax*8]
  42bff7:	or     rcx,0x2
  42bffb:	cmp    rcx,0x2
  42bfff:	je     42c086 <fb_name_table_insert@@Base+0x156>
  42c005:	mov    rax,r12
  42c008:	and    rax,r15
  42c00b:	jmp    42bff0 <fb_name_table_insert@@Base+0xc0>
  42c00d:	mov    DWORD PTR [rsp+0x14],ebp
  42c011:	mov    QWORD PTR [rsp+0x28],rbx
  42c016:	mov    QWORD PTR [rsp+0x18],r13
  42c01b:	inc    r12
  42c01e:	xor    r13d,r13d
  42c021:	mov    rcx,QWORD PTR [rsp+0x8]
  42c026:	jmp    42c040 <fb_name_table_insert@@Base+0x110>
  42c028:	nop    DWORD PTR [rax+rax*1+0x0]
  42c030:	test   r13,r13
  42c033:	cmove  r13,rbp
  42c037:	mov    rax,r12
  42c03a:	and    rax,r15
  42c03d:	inc    r12
  42c040:	lea    rbp,[r14+rax*8]
  42c044:	mov    rbx,QWORD PTR [r14+rax*8]
  42c048:	cmp    rbx,0x2
  42c04c:	je     42c030 <fb_name_table_insert@@Base+0x100>
  42c04e:	test   rbx,rbx
  42c051:	je     42c08e <fb_name_table_insert@@Base+0x15e>
  42c053:	movsxd rax,DWORD PTR [rbx+0x10]
  42c057:	cmp    rax,rcx
  42c05a:	jne    42c037 <fb_name_table_insert@@Base+0x107>
  42c05c:	mov    rsi,QWORD PTR [rbx+0x8]
  42c060:	mov    rdi,QWORD PTR [rsp+0x20]
  42c065:	mov    rdx,QWORD PTR [rsp+0x8]
  42c06a:	call   4061b0 <bcmp@plt>
  42c06f:	mov    rcx,QWORD PTR [rsp+0x8]
  42c074:	test   eax,eax
  42c076:	jne    42c037 <fb_name_table_insert@@Base+0x107>
  42c078:	cmp    DWORD PTR [rsp+0x14],0x0
  42c07d:	mov    r13,QWORD PTR [rsp+0x18]
  42c082:	jne    42c0a9 <fb_name_table_insert@@Base+0x179>
  42c084:	jmp    42c0a5 <fb_name_table_insert@@Base+0x175>
  42c086:	lea    rbp,[r14+rax*8]
  42c08a:	xor    ebx,ebx
  42c08c:	jmp    42c0a5 <fb_name_table_insert@@Base+0x175>
  42c08e:	test   r13,r13
  42c091:	cmovne rbp,r13
  42c095:	mov    rax,QWORD PTR [rsp+0x28]
  42c09a:	inc    QWORD PTR [rax+0x10]
  42c09e:	xor    ebx,ebx
  42c0a0:	mov    r13,QWORD PTR [rsp+0x18]
  42c0a5:	mov    QWORD PTR [rbp+0x0],r13
  42c0a9:	mov    rax,rbx
  42c0ac:	add    rsp,0x38
  42c0b0:	pop    rbx
  42c0b1:	pop    r12
  42c0b3:	pop    r13
  42c0b5:	pop    r14
  42c0b7:	pop    r15
  42c0b9:	pop    rbp
  42c0ba:	ret    
  42c0bb:	lea    rdi,[rip+0x195b1]        # 445673 <str_set_deleted@@Base+0xd3>
  42c0c2:	lea    rsi,[rip+0x194f6]        # 4455bf <str_set_deleted@@Base+0x1f>
  42c0c9:	lea    rcx,[rip+0x19559]        # 445629 <str_set_deleted@@Base+0x89>
  42c0d0:	mov    edx,0x73
  42c0d5:	call   4060f0 <__assert_fail@plt>
  42c0da:	lea    rdi,[rip+0x195a9]        # 44568a <str_set_deleted@@Base+0xea>
  42c0e1:	lea    rsi,[rip+0x194d7]        # 4455bf <str_set_deleted@@Base+0x1f>
  42c0e8:	lea    rcx,[rip+0x1953a]        # 445629 <str_set_deleted@@Base+0x89>
  42c0ef:	mov    edx,0x74
  42c0f4:	call   4060f0 <__assert_fail@plt>
  42c0f9:	lea    rdi,[rip+0x194a8]        # 4455a8 <str_set_deleted@@Base+0x8>
  42c100:	lea    rsi,[rip+0x194b8]        # 4455bf <str_set_deleted@@Base+0x1f>
  42c107:	lea    rcx,[rip+0x1951b]        # 445629 <str_set_deleted@@Base+0x89>
  42c10e:	mov    edx,0x72
  42c113:	call   4060f0 <__assert_fail@plt>
  42c118:	mov    rax,QWORD PTR [rip+0x23ed9]        # 44fff8 <stderr@GLIBC_2.2.5>
  42c11f:	mov    rdi,QWORD PTR [rax]
  42c122:	lea    rsi,[rip+0x19576]        # 44569f <str_set_deleted@@Base+0xff>
  42c129:	lea    rdx,[rip+0x19586]        # 4456b6 <str_set_deleted@@Base+0x116>
  42c130:	xor    eax,eax
  42c132:	call   406170 <fprintf@plt>
  42c137:	mov    edi,0x1
  42c13c:	call   406210 <exit@plt>
  42c141:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c14b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042c150 <fb_name_table_insert_item@@Base>:
  42c150:	mov    r8d,edx
  42c153:	mov    rcx,rsi
  42c156:	mov    rsi,QWORD PTR [rsi+0x8]
  42c15a:	movsxd rdx,DWORD PTR [rcx+0x10]
  42c15e:	jmp    42bf40 <fb_name_table_insert@@Base+0x10>
  42c163:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c16d:	nop    DWORD PTR [rax]

000000000042c170 <fb_name_table_find@@Base>:
  42c170:	push   rbp
  42c171:	push   r15
  42c173:	push   r14
  42c175:	push   r13
  42c177:	push   r12
  42c179:	push   rbx
  42c17a:	push   rax
  42c17b:	mov    r12,QWORD PTR [rdi]
  42c17e:	test   r12,r12
  42c181:	je     42c1e6 <fb_name_table_find@@Base+0x76>
  42c183:	mov    r15,rdx
  42c186:	mov    r14,rsi
  42c189:	mov    r13,QWORD PTR [rdi+0x18]
  42c18d:	dec    r13
  42c190:	mov    rcx,rsp
  42c193:	mov    rdi,rsi
  42c196:	mov    rsi,rdx
  42c199:	mov    edx,0x2f693b52
  42c19e:	call   42b7d0 <cmetrohash64_1@@Base>
  42c1a3:	mov    ebp,DWORD PTR [rsp]
  42c1a6:	jmp    42c1b3 <fb_name_table_find@@Base+0x43>
  42c1a8:	nop    DWORD PTR [rax+rax*1+0x0]
  42c1b0:	inc    rbp
  42c1b3:	mov    rax,rbp
  42c1b6:	and    rax,r13
  42c1b9:	mov    rbx,QWORD PTR [r12+rax*8]
  42c1bd:	cmp    rbx,0x2
  42c1c1:	je     42c1b0 <fb_name_table_find@@Base+0x40>
  42c1c3:	test   rbx,rbx
  42c1c6:	je     42c1e6 <fb_name_table_find@@Base+0x76>
  42c1c8:	movsxd rax,DWORD PTR [rbx+0x10]
  42c1cc:	cmp    rax,r15
  42c1cf:	jne    42c1b0 <fb_name_table_find@@Base+0x40>
  42c1d1:	mov    rsi,QWORD PTR [rbx+0x8]
  42c1d5:	mov    rdi,r14
  42c1d8:	mov    rdx,r15
  42c1db:	call   4061b0 <bcmp@plt>
  42c1e0:	test   eax,eax
  42c1e2:	jne    42c1b0 <fb_name_table_find@@Base+0x40>
  42c1e4:	jmp    42c1e8 <fb_name_table_find@@Base+0x78>
  42c1e6:	xor    ebx,ebx
  42c1e8:	mov    rax,rbx
  42c1eb:	add    rsp,0x8
  42c1ef:	pop    rbx
  42c1f0:	pop    r12
  42c1f2:	pop    r13
  42c1f4:	pop    r14
  42c1f6:	pop    r15
  42c1f8:	pop    rbp
  42c1f9:	ret    
  42c1fa:	nop    WORD PTR [rax+rax*1+0x0]

000000000042c200 <fb_name_table_find_item@@Base>:
  42c200:	push   rbp
  42c201:	push   r15
  42c203:	push   r14
  42c205:	push   r13
  42c207:	push   r12
  42c209:	push   rbx
  42c20a:	push   rax
  42c20b:	mov    r12,QWORD PTR [rdi]
  42c20e:	test   r12,r12
  42c211:	je     42c273 <fb_name_table_find_item@@Base+0x73>
  42c213:	mov    r14,QWORD PTR [rsi+0x8]
  42c217:	movsxd r15,DWORD PTR [rsi+0x10]
  42c21b:	mov    r13,QWORD PTR [rdi+0x18]
  42c21f:	dec    r13
  42c222:	mov    rcx,rsp
  42c225:	mov    rdi,r14
  42c228:	mov    rsi,r15
  42c22b:	mov    edx,0x2f693b52
  42c230:	call   42b7d0 <cmetrohash64_1@@Base>
  42c235:	mov    ebp,DWORD PTR [rsp]
  42c238:	jmp    42c243 <fb_name_table_find_item@@Base+0x43>
  42c23a:	nop    WORD PTR [rax+rax*1+0x0]
  42c240:	inc    rbp
  42c243:	mov    rax,rbp
  42c246:	and    rax,r13
  42c249:	mov    rbx,QWORD PTR [r12+rax*8]
  42c24d:	cmp    rbx,0x2
  42c251:	je     42c240 <fb_name_table_find_item@@Base+0x40>
  42c253:	test   rbx,rbx
  42c256:	je     42c273 <fb_name_table_find_item@@Base+0x73>
  42c258:	cmp    DWORD PTR [rbx+0x10],r15d
  42c25c:	jne    42c240 <fb_name_table_find_item@@Base+0x40>
  42c25e:	mov    rsi,QWORD PTR [rbx+0x8]
  42c262:	mov    rdi,r14
  42c265:	mov    rdx,r15
  42c268:	call   4061b0 <bcmp@plt>
  42c26d:	test   eax,eax
  42c26f:	jne    42c240 <fb_name_table_find_item@@Base+0x40>
  42c271:	jmp    42c275 <fb_name_table_find_item@@Base+0x75>
  42c273:	xor    ebx,ebx
  42c275:	mov    rax,rbx
  42c278:	add    rsp,0x8
  42c27c:	pop    rbx
  42c27d:	pop    r12
  42c27f:	pop    r13
  42c281:	pop    r14
  42c283:	pop    r15
  42c285:	pop    rbp
  42c286:	ret    
  42c287:	nop    WORD PTR [rax+rax*1+0x0]

000000000042c290 <fb_name_table_remove@@Base>:
  42c290:	push   rbp
  42c291:	push   r15
  42c293:	push   r14
  42c295:	push   r13
  42c297:	push   r12
  42c299:	push   rbx
  42c29a:	sub    rsp,0x18
  42c29e:	mov    r13,QWORD PTR [rdi]
  42c2a1:	test   r13,r13
  42c2a4:	je     42c32a <fb_name_table_remove@@Base+0x9a>
  42c2aa:	mov    r12,rdx
  42c2ad:	mov    QWORD PTR [rsp],rdi
  42c2b1:	mov    rbp,QWORD PTR [rdi+0x18]
  42c2b5:	dec    rbp
  42c2b8:	lea    rcx,[rsp+0x10]
  42c2bd:	mov    QWORD PTR [rsp+0x8],rsi
  42c2c2:	mov    rdi,rsi
  42c2c5:	mov    rsi,rdx
  42c2c8:	mov    edx,0x2f693b52
  42c2cd:	call   42b7d0 <cmetrohash64_1@@Base>
  42c2d2:	mov    r15d,DWORD PTR [rsp+0x10]
  42c2d7:	jmp    42c2e3 <fb_name_table_remove@@Base+0x53>
  42c2d9:	nop    DWORD PTR [rax+0x0]
  42c2e0:	inc    r15
  42c2e3:	mov    r14,r15
  42c2e6:	and    r14,rbp
  42c2e9:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  42c2ee:	cmp    rbx,0x2
  42c2f2:	je     42c2e0 <fb_name_table_remove@@Base+0x50>
  42c2f4:	test   rbx,rbx
  42c2f7:	je     42c32a <fb_name_table_remove@@Base+0x9a>
  42c2f9:	movsxd rax,DWORD PTR [rbx+0x10]
  42c2fd:	cmp    rax,r12
  42c300:	jne    42c2e0 <fb_name_table_remove@@Base+0x50>
  42c302:	mov    rsi,QWORD PTR [rbx+0x8]
  42c306:	mov    rdi,QWORD PTR [rsp+0x8]
  42c30b:	mov    rdx,r12
  42c30e:	call   4061b0 <bcmp@plt>
  42c313:	test   eax,eax
  42c315:	jne    42c2e0 <fb_name_table_remove@@Base+0x50>
  42c317:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  42c320:	mov    rax,QWORD PTR [rsp]
  42c324:	dec    QWORD PTR [rax+0x10]
  42c328:	jmp    42c32c <fb_name_table_remove@@Base+0x9c>
  42c32a:	xor    ebx,ebx
  42c32c:	mov    rax,rbx
  42c32f:	add    rsp,0x18
  42c333:	pop    rbx
  42c334:	pop    r12
  42c336:	pop    r13
  42c338:	pop    r14
  42c33a:	pop    r15
  42c33c:	pop    rbp
  42c33d:	ret    
  42c33e:	xchg   ax,ax

000000000042c340 <fb_name_table_remove_item@@Base>:
  42c340:	push   rbp
  42c341:	push   r15
  42c343:	push   r14
  42c345:	push   r13
  42c347:	push   r12
  42c349:	push   rbx
  42c34a:	sub    rsp,0x18
  42c34e:	mov    r13,QWORD PTR [rdi]
  42c351:	test   r13,r13
  42c354:	je     42c3d7 <fb_name_table_remove_item@@Base+0x97>
  42c35a:	mov    rax,QWORD PTR [rsi+0x8]
  42c35e:	movsxd r12,DWORD PTR [rsi+0x10]
  42c362:	mov    QWORD PTR [rsp],rdi
  42c366:	mov    rbp,QWORD PTR [rdi+0x18]
  42c36a:	dec    rbp
  42c36d:	lea    rcx,[rsp+0x10]
  42c372:	mov    QWORD PTR [rsp+0x8],rax
  42c377:	mov    rdi,rax
  42c37a:	mov    rsi,r12
  42c37d:	mov    edx,0x2f693b52
  42c382:	call   42b7d0 <cmetrohash64_1@@Base>
  42c387:	mov    r15d,DWORD PTR [rsp+0x10]
  42c38c:	jmp    42c393 <fb_name_table_remove_item@@Base+0x53>
  42c38e:	xchg   ax,ax
  42c390:	inc    r15
  42c393:	mov    r14,r15
  42c396:	and    r14,rbp
  42c399:	mov    rbx,QWORD PTR [r13+r14*8+0x0]
  42c39e:	cmp    rbx,0x2
  42c3a2:	je     42c390 <fb_name_table_remove_item@@Base+0x50>
  42c3a4:	test   rbx,rbx
  42c3a7:	je     42c3d7 <fb_name_table_remove_item@@Base+0x97>
  42c3a9:	cmp    DWORD PTR [rbx+0x10],r12d
  42c3ad:	jne    42c390 <fb_name_table_remove_item@@Base+0x50>
  42c3af:	mov    rsi,QWORD PTR [rbx+0x8]
  42c3b3:	mov    rdi,QWORD PTR [rsp+0x8]
  42c3b8:	mov    rdx,r12
  42c3bb:	call   4061b0 <bcmp@plt>
  42c3c0:	test   eax,eax
  42c3c2:	jne    42c390 <fb_name_table_remove_item@@Base+0x50>
  42c3c4:	mov    QWORD PTR [r13+r14*8+0x0],0x2
  42c3cd:	mov    rax,QWORD PTR [rsp]
  42c3d1:	dec    QWORD PTR [rax+0x10]
  42c3d5:	jmp    42c3d9 <fb_name_table_remove_item@@Base+0x99>
  42c3d7:	xor    ebx,ebx
  42c3d9:	mov    rax,rbx
  42c3dc:	add    rsp,0x18
  42c3e0:	pop    rbx
  42c3e1:	pop    r12
  42c3e3:	pop    r13
  42c3e5:	pop    r14
  42c3e7:	pop    r15
  42c3e9:	pop    rbp
  42c3ea:	ret    
  42c3eb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042c3f0 <fb_name_table_visit@@Base>:
  42c3f0:	push   r15
  42c3f2:	push   r14
  42c3f4:	push   r13
  42c3f6:	push   r12
  42c3f8:	push   rbx
  42c3f9:	mov    rax,QWORD PTR [rdi+0x18]
  42c3fd:	test   rax,rax
  42c400:	je     42c447 <fb_name_table_visit@@Base+0x57>
  42c402:	mov    r14,rdx
  42c405:	mov    r15,rsi
  42c408:	mov    r12,rdi
  42c40b:	mov    r13,QWORD PTR [rdi]
  42c40e:	xor    ebx,ebx
  42c410:	jmp    42c428 <fb_name_table_visit@@Base+0x38>
  42c412:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c41c:	nop    DWORD PTR [rax+0x0]
  42c420:	inc    rbx
  42c423:	cmp    rbx,rax
  42c426:	jae    42c447 <fb_name_table_visit@@Base+0x57>
  42c428:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  42c42d:	mov    rcx,rsi
  42c430:	or     rcx,0x2
  42c434:	cmp    rcx,0x2
  42c438:	je     42c420 <fb_name_table_visit@@Base+0x30>
  42c43a:	mov    rdi,r14
  42c43d:	call   r15
  42c440:	mov    rax,QWORD PTR [r12+0x18]
  42c445:	jmp    42c420 <fb_name_table_visit@@Base+0x30>
  42c447:	pop    rbx
  42c448:	pop    r12
  42c44a:	pop    r13
  42c44c:	pop    r14
  42c44e:	pop    r15
  42c450:	ret    
  42c451:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c45b:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042c460 <fb_value_set_clear@@Base>:
  42c460:	push   rbx
  42c461:	mov    rbx,rdi
  42c464:	mov    rdi,QWORD PTR [rdi]
  42c467:	test   rdi,rdi
  42c46a:	je     42c471 <fb_value_set_clear@@Base+0x11>
  42c46c:	call   406040 <free@plt>
  42c471:	vxorps xmm0,xmm0,xmm0
  42c475:	vmovups YMMWORD PTR [rbx],ymm0
  42c479:	pop    rbx
  42c47a:	vzeroupper 
  42c47d:	ret    
  42c47e:	xchg   ax,ax

000000000042c480 <fb_value_set_destroy@@Base>:
  42c480:	push   r15
  42c482:	push   r14
  42c484:	push   r13
  42c486:	push   r12
  42c488:	push   rbx
  42c489:	mov    r12,rdi
  42c48c:	test   rsi,rsi
  42c48f:	je     42c4d7 <fb_value_set_destroy@@Base+0x57>
  42c491:	mov    rax,QWORD PTR [r12+0x18]
  42c496:	test   rax,rax
  42c499:	je     42c4d7 <fb_value_set_destroy@@Base+0x57>
  42c49b:	mov    r14,rdx
  42c49e:	mov    r15,rsi
  42c4a1:	mov    r13,QWORD PTR [r12]
  42c4a5:	xor    ebx,ebx
  42c4a7:	jmp    42c4b8 <fb_value_set_destroy@@Base+0x38>
  42c4a9:	nop    DWORD PTR [rax+0x0]
  42c4b0:	inc    rbx
  42c4b3:	cmp    rbx,rax
  42c4b6:	jae    42c4d7 <fb_value_set_destroy@@Base+0x57>
  42c4b8:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  42c4bd:	mov    rcx,rsi
  42c4c0:	or     rcx,0x2
  42c4c4:	cmp    rcx,0x2
  42c4c8:	je     42c4b0 <fb_value_set_destroy@@Base+0x30>
  42c4ca:	mov    rdi,r14
  42c4cd:	call   r15
  42c4d0:	mov    rax,QWORD PTR [r12+0x18]
  42c4d5:	jmp    42c4b0 <fb_value_set_destroy@@Base+0x30>
  42c4d7:	mov    rdi,QWORD PTR [r12]
  42c4db:	test   rdi,rdi
  42c4de:	je     42c4e5 <fb_value_set_destroy@@Base+0x65>
  42c4e0:	call   406040 <free@plt>
  42c4e5:	vxorps xmm0,xmm0,xmm0
  42c4e9:	vmovups YMMWORD PTR [r12],ymm0
  42c4ef:	pop    rbx
  42c4f0:	pop    r12
  42c4f2:	pop    r13
  42c4f4:	pop    r14
  42c4f6:	pop    r15
  42c4f8:	vzeroupper 
  42c4fb:	ret    
  42c4fc:	nop    DWORD PTR [rax+0x0]

000000000042c500 <fb_value_set_init@@Base>:
  42c500:	push   r14
  42c502:	push   rbx
  42c503:	push   rax
  42c504:	mov    r14,rdi
  42c507:	mov    eax,0x4
  42c50c:	nop    DWORD PTR [rax+0x0]
  42c510:	mov    rbx,rax
  42c513:	imul   rcx,rax,0xb3
  42c51a:	shr    rcx,0x8
  42c51e:	add    rax,rax
  42c521:	cmp    rcx,rsi
  42c524:	jb     42c510 <fb_value_set_init@@Base+0x10>
  42c526:	mov    esi,0x8
  42c52b:	mov    rdi,rbx
  42c52e:	call   406140 <calloc@plt>
  42c533:	mov    QWORD PTR [r14],rax
  42c536:	test   rax,rax
  42c539:	je     42c54d <fb_value_set_init@@Base+0x4d>
  42c53b:	vxorps xmm0,xmm0,xmm0
  42c53f:	vmovups XMMWORD PTR [r14+0x8],xmm0
  42c545:	mov    QWORD PTR [r14+0x18],rbx
  42c549:	xor    eax,eax
  42c54b:	jmp    42c552 <fb_value_set_init@@Base+0x52>
  42c54d:	mov    eax,0xffffffff
  42c552:	add    rsp,0x8
  42c556:	pop    rbx
  42c557:	pop    r14
  42c559:	ret    
  42c55a:	nop    WORD PTR [rax+rax*1+0x0]

000000000042c560 <fb_value_set_resize@@Base>:
  42c560:	jmp    42c570 <fb_value_set_resize@@Base+0x10>
  42c562:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c56c:	nop    DWORD PTR [rax+0x0]
  42c570:	push   r15
  42c572:	push   r14
  42c574:	push   r12
  42c576:	push   rbx
  42c577:	sub    rsp,0x28
  42c57b:	mov    r14,rdi
  42c57e:	mov    r12,QWORD PTR [rdi]
  42c581:	mov    rax,QWORD PTR [rdi+0x10]
  42c585:	cmp    rax,rsi
  42c588:	cmova  rsi,rax
  42c58c:	mov    eax,0x4
  42c591:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c59b:	nop    DWORD PTR [rax+rax*1+0x0]
  42c5a0:	mov    rbx,rax
  42c5a3:	imul   rcx,rax,0xb3
  42c5aa:	shr    rcx,0x8
  42c5ae:	add    rax,rax
  42c5b1:	cmp    rcx,rsi
  42c5b4:	jb     42c5a0 <fb_value_set_resize@@Base+0x40>
  42c5b6:	mov    esi,0x8
  42c5bb:	mov    rdi,rbx
  42c5be:	call   406140 <calloc@plt>
  42c5c3:	mov    QWORD PTR [rsp+0x8],rax
  42c5c8:	test   rax,rax
  42c5cb:	je     42c61f <fb_value_set_resize@@Base+0xbf>
  42c5cd:	vxorps xmm0,xmm0,xmm0
  42c5d1:	vmovups XMMWORD PTR [rsp+0x10],xmm0
  42c5d7:	mov    QWORD PTR [rsp+0x20],rbx
  42c5dc:	mov    rax,QWORD PTR [r14+0x18]
  42c5e0:	test   rax,rax
  42c5e3:	je     42c629 <fb_value_set_resize@@Base+0xc9>
  42c5e5:	xor    ebx,ebx
  42c5e7:	lea    r15,[rsp+0x8]
  42c5ec:	jmp    42c5f8 <fb_value_set_resize@@Base+0x98>
  42c5ee:	xchg   ax,ax
  42c5f0:	inc    rbx
  42c5f3:	cmp    rbx,rax
  42c5f6:	jae    42c626 <fb_value_set_resize@@Base+0xc6>
  42c5f8:	mov    rdx,QWORD PTR [r12+rbx*8]
  42c5fc:	mov    rcx,rdx
  42c5ff:	or     rcx,0x2
  42c603:	cmp    rcx,0x2
  42c607:	je     42c5f0 <fb_value_set_resize@@Base+0x90>
  42c609:	mov    rdi,r15
  42c60c:	mov    rsi,rdx
  42c60f:	mov    ecx,0x3
  42c614:	call   42c670 <fb_value_set_insert@@Base+0x10>
  42c619:	mov    rax,QWORD PTR [r14+0x18]
  42c61d:	jmp    42c5f0 <fb_value_set_resize@@Base+0x90>
  42c61f:	mov    eax,0xffffffff
  42c624:	jmp    42c643 <fb_value_set_resize@@Base+0xe3>
  42c626:	mov    r12,QWORD PTR [r14]
  42c629:	test   r12,r12
  42c62c:	je     42c636 <fb_value_set_resize@@Base+0xd6>
  42c62e:	mov    rdi,r12
  42c631:	call   406040 <free@plt>
  42c636:	vmovups ymm0,YMMWORD PTR [rsp+0x8]
  42c63c:	vmovups YMMWORD PTR [r14],ymm0
  42c641:	xor    eax,eax
  42c643:	add    rsp,0x28
  42c647:	pop    rbx
  42c648:	pop    r12
  42c64a:	pop    r14
  42c64c:	pop    r15
  42c64e:	vzeroupper 
  42c651:	ret    
  42c652:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c65c:	nop    DWORD PTR [rax+0x0]

000000000042c660 <fb_value_set_insert@@Base>:
  42c660:	mov    rdx,rcx
  42c663:	mov    ecx,r8d
  42c666:	jmp    42c670 <fb_value_set_insert@@Base+0x10>
  42c668:	nop    DWORD PTR [rax+rax*1+0x0]
  42c670:	push   rbp
  42c671:	push   r15
  42c673:	push   r14
  42c675:	push   r13
  42c677:	push   r12
  42c679:	push   rbx
  42c67a:	push   rax
  42c67b:	cmp    rdx,0x2
  42c67f:	je     42c7ea <fb_value_set_insert@@Base+0x18a>
  42c685:	mov    r14,rdx
  42c688:	cmp    rdx,0x1
  42c68c:	je     42c809 <fb_value_set_insert@@Base+0x1a9>
  42c692:	test   r14,r14
  42c695:	je     42c828 <fb_value_set_insert@@Base+0x1c8>
  42c69b:	mov    r15d,ecx
  42c69e:	mov    r12,rsi
  42c6a1:	mov    r13,rdi
  42c6a4:	mov    rsi,QWORD PTR [rdi+0x10]
  42c6a8:	mov    r9,QWORD PTR [rdi+0x18]
  42c6ac:	imul   rax,r9,0xb3
  42c6b3:	shr    rax,0x8
  42c6b7:	cmp    rsi,rax
  42c6ba:	jb     42c6d3 <fb_value_set_insert@@Base+0x73>
  42c6bc:	add    rsi,rsi
  42c6bf:	mov    rdi,r13
  42c6c2:	call   42c570 <fb_value_set_resize@@Base+0x10>
  42c6c7:	test   eax,eax
  42c6c9:	jne    42c847 <fb_value_set_insert@@Base+0x1e7>
  42c6cf:	mov    r9,QWORD PTR [r13+0x18]
  42c6d3:	mov    rdx,QWORD PTR [r13+0x0]
  42c6d7:	dec    r9
  42c6da:	movzx  r8d,WORD PTR [r12+0x10]
  42c6e0:	cmp    r8w,0x6
  42c6e5:	je     42c70b <fb_value_set_insert@@Base+0xab>
  42c6e7:	cmp    r8w,0x5
  42c6ec:	je     42c700 <fb_value_set_insert@@Base+0xa0>
  42c6ee:	cmp    r8w,0x4
  42c6f3:	jne    42c721 <fb_value_set_insert@@Base+0xc1>
  42c6f5:	mov    eax,0x2f693b56
  42c6fa:	xor    rax,QWORD PTR [r12]
  42c6fe:	jmp    42c716 <fb_value_set_insert@@Base+0xb6>
  42c700:	mov    eax,0x2f693b57
  42c705:	xor    rax,QWORD PTR [r12]
  42c709:	jmp    42c716 <fb_value_set_insert@@Base+0xb6>
  42c70b:	movzx  eax,BYTE PTR [r12]
  42c710:	xor    rax,0x2f693b54
  42c716:	mov    edi,0x9e3779b1
  42c71b:	imul   rdi,rax
  42c71f:	jmp    42c723 <fb_value_set_insert@@Base+0xc3>
  42c721:	xor    edi,edi
  42c723:	mov    rax,rdi
  42c726:	and    rax,r9
  42c729:	mov    ebp,r15d
  42c72c:	or     ebp,0x1
  42c72f:	cmp    ebp,0x3
  42c732:	jne    42c759 <fb_value_set_insert@@Base+0xf9>
  42c734:	inc    QWORD PTR [r13+0x10]
  42c738:	nop    DWORD PTR [rax+rax*1+0x0]
  42c740:	inc    rdi
  42c743:	mov    rsi,QWORD PTR [rdx+rax*8]
  42c747:	or     rsi,0x2
  42c74b:	cmp    rsi,0x2
  42c74f:	je     42c7c5 <fb_value_set_insert@@Base+0x165>
  42c751:	mov    rax,rdi
  42c754:	and    rax,r9
  42c757:	jmp    42c740 <fb_value_set_insert@@Base+0xe0>
  42c759:	inc    rdi
  42c75c:	xor    ebp,ebp
  42c75e:	jmp    42c770 <fb_value_set_insert@@Base+0x110>
  42c760:	test   rbp,rbp
  42c763:	cmove  rbp,rbx
  42c767:	mov    rax,rdi
  42c76a:	and    rax,r9
  42c76d:	inc    rdi
  42c770:	lea    rbx,[rdx+rax*8]
  42c774:	mov    rax,QWORD PTR [rdx+rax*8]
  42c778:	cmp    rax,0x2
  42c77c:	je     42c760 <fb_value_set_insert@@Base+0x100>
  42c77e:	test   rax,rax
  42c781:	je     42c7cb <fb_value_set_insert@@Base+0x16b>
  42c783:	cmp    r8w,WORD PTR [rax+0x10]
  42c788:	jne    42c767 <fb_value_set_insert@@Base+0x107>
  42c78a:	cmp    r8w,0x4
  42c78f:	je     42c7b5 <fb_value_set_insert@@Base+0x155>
  42c791:	cmp    r8w,0x6
  42c796:	je     42c7aa <fb_value_set_insert@@Base+0x14a>
  42c798:	cmp    r8w,0x5
  42c79d:	jne    42c767 <fb_value_set_insert@@Base+0x107>
  42c79f:	mov    rsi,QWORD PTR [r12]
  42c7a3:	cmp    rsi,QWORD PTR [rax]
  42c7a6:	jne    42c767 <fb_value_set_insert@@Base+0x107>
  42c7a8:	jmp    42c7be <fb_value_set_insert@@Base+0x15e>
  42c7aa:	movzx  ecx,BYTE PTR [r12]
  42c7af:	cmp    cl,BYTE PTR [rax]
  42c7b1:	jne    42c767 <fb_value_set_insert@@Base+0x107>
  42c7b3:	jmp    42c7be <fb_value_set_insert@@Base+0x15e>
  42c7b5:	mov    rcx,QWORD PTR [r12]
  42c7b9:	cmp    rcx,QWORD PTR [rax]
  42c7bc:	jne    42c767 <fb_value_set_insert@@Base+0x107>
  42c7be:	test   r15d,r15d
  42c7c1:	jne    42c7db <fb_value_set_insert@@Base+0x17b>
  42c7c3:	jmp    42c7d8 <fb_value_set_insert@@Base+0x178>
  42c7c5:	lea    rbx,[rdx+rax*8]
  42c7c9:	jmp    42c7d6 <fb_value_set_insert@@Base+0x176>
  42c7cb:	test   rbp,rbp
  42c7ce:	cmovne rbx,rbp
  42c7d2:	inc    QWORD PTR [r13+0x10]
  42c7d6:	xor    eax,eax
  42c7d8:	mov    QWORD PTR [rbx],r14
  42c7db:	add    rsp,0x8
  42c7df:	pop    rbx
  42c7e0:	pop    r12
  42c7e2:	pop    r13
  42c7e4:	pop    r14
  42c7e6:	pop    r15
  42c7e8:	pop    rbp
  42c7e9:	ret    
  42c7ea:	lea    rdi,[rip+0x18e82]        # 445673 <str_set_deleted@@Base+0xd3>
  42c7f1:	lea    rsi,[rip+0x18dc7]        # 4455bf <str_set_deleted@@Base+0x1f>
  42c7f8:	lea    rcx,[rip+0x18e2a]        # 445629 <str_set_deleted@@Base+0x89>
  42c7ff:	mov    edx,0x73
  42c804:	call   4060f0 <__assert_fail@plt>
  42c809:	lea    rdi,[rip+0x18e7a]        # 44568a <str_set_deleted@@Base+0xea>
  42c810:	lea    rsi,[rip+0x18da8]        # 4455bf <str_set_deleted@@Base+0x1f>
  42c817:	lea    rcx,[rip+0x18e0b]        # 445629 <str_set_deleted@@Base+0x89>
  42c81e:	mov    edx,0x74
  42c823:	call   4060f0 <__assert_fail@plt>
  42c828:	lea    rdi,[rip+0x18d79]        # 4455a8 <str_set_deleted@@Base+0x8>
  42c82f:	lea    rsi,[rip+0x18d89]        # 4455bf <str_set_deleted@@Base+0x1f>
  42c836:	lea    rcx,[rip+0x18dec]        # 445629 <str_set_deleted@@Base+0x89>
  42c83d:	mov    edx,0x72
  42c842:	call   4060f0 <__assert_fail@plt>
  42c847:	mov    rax,QWORD PTR [rip+0x237aa]        # 44fff8 <stderr@GLIBC_2.2.5>
  42c84e:	mov    rdi,QWORD PTR [rax]
  42c851:	lea    rsi,[rip+0x18e47]        # 44569f <str_set_deleted@@Base+0xff>
  42c858:	lea    rdx,[rip+0x18e57]        # 4456b6 <str_set_deleted@@Base+0x116>
  42c85f:	xor    eax,eax
  42c861:	call   406170 <fprintf@plt>
  42c866:	mov    edi,0x1
  42c86b:	call   406210 <exit@plt>

000000000042c870 <fb_value_set_insert_item@@Base>:
  42c870:	mov    ecx,edx
  42c872:	mov    rdx,rsi
  42c875:	jmp    42c670 <fb_value_set_insert@@Base+0x10>
  42c87a:	nop    WORD PTR [rax+rax*1+0x0]

000000000042c880 <fb_value_set_find@@Base>:
  42c880:	mov    r8,QWORD PTR [rdi]
  42c883:	test   r8,r8
  42c886:	je     42c91a <fb_value_set_find@@Base+0x9a>
  42c88c:	mov    r9,QWORD PTR [rdi+0x18]
  42c890:	movzx  edi,WORD PTR [rsi+0x10]
  42c894:	cmp    di,0x6
  42c898:	je     42c8ad <fb_value_set_find@@Base+0x2d>
  42c89a:	cmp    di,0x5
  42c89e:	je     42c8b8 <fb_value_set_find@@Base+0x38>
  42c8a0:	cmp    di,0x4
  42c8a4:	jne    42c8cb <fb_value_set_find@@Base+0x4b>
  42c8a6:	mov    eax,0x2f693b56
  42c8ab:	jmp    42c8bd <fb_value_set_find@@Base+0x3d>
  42c8ad:	movzx  eax,BYTE PTR [rsi]
  42c8b0:	xor    rax,0x2f693b54
  42c8b6:	jmp    42c8c0 <fb_value_set_find@@Base+0x40>
  42c8b8:	mov    eax,0x2f693b57
  42c8bd:	xor    rax,QWORD PTR [rsi]
  42c8c0:	mov    ecx,0x9e3779b1
  42c8c5:	imul   rcx,rax
  42c8c9:	jmp    42c8cd <fb_value_set_find@@Base+0x4d>
  42c8cb:	xor    ecx,ecx
  42c8cd:	dec    r9
  42c8d0:	jmp    42c8e3 <fb_value_set_find@@Base+0x63>
  42c8d2:	mov    rdx,QWORD PTR [rsi]
  42c8d5:	cmp    rdx,QWORD PTR [rax]
  42c8d8:	je     42c919 <fb_value_set_find@@Base+0x99>
  42c8da:	nop    WORD PTR [rax+rax*1+0x0]
  42c8e0:	inc    rcx
  42c8e3:	mov    rax,rcx
  42c8e6:	and    rax,r9
  42c8e9:	mov    rax,QWORD PTR [r8+rax*8]
  42c8ed:	cmp    rax,0x2
  42c8f1:	je     42c8e0 <fb_value_set_find@@Base+0x60>
  42c8f3:	test   rax,rax
  42c8f6:	je     42c91a <fb_value_set_find@@Base+0x9a>
  42c8f8:	cmp    di,WORD PTR [rax+0x10]
  42c8fc:	jne    42c8e0 <fb_value_set_find@@Base+0x60>
  42c8fe:	cmp    di,0x4
  42c902:	je     42c8d2 <fb_value_set_find@@Base+0x52>
  42c904:	cmp    di,0x6
  42c908:	je     42c912 <fb_value_set_find@@Base+0x92>
  42c90a:	cmp    di,0x5
  42c90e:	je     42c8d2 <fb_value_set_find@@Base+0x52>
  42c910:	jmp    42c8e0 <fb_value_set_find@@Base+0x60>
  42c912:	movzx  edx,BYTE PTR [rsi]
  42c915:	cmp    dl,BYTE PTR [rax]
  42c917:	jne    42c8e0 <fb_value_set_find@@Base+0x60>
  42c919:	ret    
  42c91a:	xor    eax,eax
  42c91c:	ret    
  42c91d:	nop    DWORD PTR [rax]

000000000042c920 <fb_value_set_find_item@@Base>:
  42c920:	mov    r8,QWORD PTR [rdi]
  42c923:	test   r8,r8
  42c926:	je     42c9ba <fb_value_set_find_item@@Base+0x9a>
  42c92c:	mov    r9,QWORD PTR [rdi+0x18]
  42c930:	movzx  edi,WORD PTR [rsi+0x10]
  42c934:	cmp    di,0x6
  42c938:	je     42c94d <fb_value_set_find_item@@Base+0x2d>
  42c93a:	cmp    di,0x5
  42c93e:	je     42c958 <fb_value_set_find_item@@Base+0x38>
  42c940:	cmp    di,0x4
  42c944:	jne    42c96b <fb_value_set_find_item@@Base+0x4b>
  42c946:	mov    eax,0x2f693b56
  42c94b:	jmp    42c95d <fb_value_set_find_item@@Base+0x3d>
  42c94d:	movzx  eax,BYTE PTR [rsi]
  42c950:	xor    rax,0x2f693b54
  42c956:	jmp    42c960 <fb_value_set_find_item@@Base+0x40>
  42c958:	mov    eax,0x2f693b57
  42c95d:	xor    rax,QWORD PTR [rsi]
  42c960:	mov    ecx,0x9e3779b1
  42c965:	imul   rcx,rax
  42c969:	jmp    42c96d <fb_value_set_find_item@@Base+0x4d>
  42c96b:	xor    ecx,ecx
  42c96d:	dec    r9
  42c970:	jmp    42c983 <fb_value_set_find_item@@Base+0x63>
  42c972:	mov    rdx,QWORD PTR [rsi]
  42c975:	cmp    rdx,QWORD PTR [rax]
  42c978:	je     42c9b9 <fb_value_set_find_item@@Base+0x99>
  42c97a:	nop    WORD PTR [rax+rax*1+0x0]
  42c980:	inc    rcx
  42c983:	mov    rax,rcx
  42c986:	and    rax,r9
  42c989:	mov    rax,QWORD PTR [r8+rax*8]
  42c98d:	cmp    rax,0x2
  42c991:	je     42c980 <fb_value_set_find_item@@Base+0x60>
  42c993:	test   rax,rax
  42c996:	je     42c9ba <fb_value_set_find_item@@Base+0x9a>
  42c998:	cmp    di,WORD PTR [rax+0x10]
  42c99c:	jne    42c980 <fb_value_set_find_item@@Base+0x60>
  42c99e:	cmp    di,0x4
  42c9a2:	je     42c972 <fb_value_set_find_item@@Base+0x52>
  42c9a4:	cmp    di,0x6
  42c9a8:	je     42c9b2 <fb_value_set_find_item@@Base+0x92>
  42c9aa:	cmp    di,0x5
  42c9ae:	je     42c972 <fb_value_set_find_item@@Base+0x52>
  42c9b0:	jmp    42c980 <fb_value_set_find_item@@Base+0x60>
  42c9b2:	movzx  edx,BYTE PTR [rsi]
  42c9b5:	cmp    dl,BYTE PTR [rax]
  42c9b7:	jne    42c980 <fb_value_set_find_item@@Base+0x60>
  42c9b9:	ret    
  42c9ba:	xor    eax,eax
  42c9bc:	ret    
  42c9bd:	nop    DWORD PTR [rax]

000000000042c9c0 <fb_value_set_remove@@Base>:
  42c9c0:	jmp    42c9d0 <fb_value_set_remove@@Base+0x10>
  42c9c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42c9cc:	nop    DWORD PTR [rax+0x0]
  42c9d0:	mov    r8,QWORD PTR [rdi]
  42c9d3:	test   r8,r8
  42c9d6:	je     42ca7a <fb_value_set_remove@@Base+0xba>
  42c9dc:	mov    r9,QWORD PTR [rdi+0x18]
  42c9e0:	movzx  r10d,WORD PTR [rsi+0x10]
  42c9e5:	cmp    r10w,0x6
  42c9ea:	je     42ca01 <fb_value_set_remove@@Base+0x41>
  42c9ec:	cmp    r10w,0x5
  42c9f1:	je     42ca0c <fb_value_set_remove@@Base+0x4c>
  42c9f3:	cmp    r10w,0x4
  42c9f8:	jne    42ca20 <fb_value_set_remove@@Base+0x60>
  42c9fa:	mov    eax,0x2f693b56
  42c9ff:	jmp    42ca11 <fb_value_set_remove@@Base+0x51>
  42ca01:	movzx  eax,BYTE PTR [rsi]
  42ca04:	xor    rax,0x2f693b54
  42ca0a:	jmp    42ca14 <fb_value_set_remove@@Base+0x54>
  42ca0c:	mov    eax,0x2f693b57
  42ca11:	xor    rax,QWORD PTR [rsi]
  42ca14:	mov    r11d,0x9e3779b1
  42ca1a:	imul   r11,rax
  42ca1e:	jmp    42ca23 <fb_value_set_remove@@Base+0x63>
  42ca20:	xor    r11d,r11d
  42ca23:	dec    r9
  42ca26:	jmp    42ca33 <fb_value_set_remove@@Base+0x73>
  42ca28:	mov    rcx,QWORD PTR [rsi]
  42ca2b:	cmp    rcx,QWORD PTR [rax]
  42ca2e:	je     42ca6d <fb_value_set_remove@@Base+0xad>
  42ca30:	inc    r11
  42ca33:	mov    rdx,r11
  42ca36:	and    rdx,r9
  42ca39:	mov    rax,QWORD PTR [r8+rdx*8]
  42ca3d:	cmp    rax,0x2
  42ca41:	je     42ca30 <fb_value_set_remove@@Base+0x70>
  42ca43:	test   rax,rax
  42ca46:	je     42ca7a <fb_value_set_remove@@Base+0xba>
  42ca48:	cmp    r10w,WORD PTR [rax+0x10]
  42ca4d:	jne    42ca30 <fb_value_set_remove@@Base+0x70>
  42ca4f:	cmp    r10w,0x4
  42ca54:	je     42ca28 <fb_value_set_remove@@Base+0x68>
  42ca56:	cmp    r10w,0x6
  42ca5b:	je     42ca66 <fb_value_set_remove@@Base+0xa6>
  42ca5d:	cmp    r10w,0x5
  42ca62:	je     42ca28 <fb_value_set_remove@@Base+0x68>
  42ca64:	jmp    42ca30 <fb_value_set_remove@@Base+0x70>
  42ca66:	movzx  ecx,BYTE PTR [rsi]
  42ca69:	cmp    cl,BYTE PTR [rax]
  42ca6b:	jne    42ca30 <fb_value_set_remove@@Base+0x70>
  42ca6d:	mov    QWORD PTR [r8+rdx*8],0x2
  42ca75:	dec    QWORD PTR [rdi+0x10]
  42ca79:	ret    
  42ca7a:	xor    eax,eax
  42ca7c:	ret    
  42ca7d:	nop    DWORD PTR [rax]

000000000042ca80 <fb_value_set_remove_item@@Base>:
  42ca80:	jmp    42c9d0 <fb_value_set_remove@@Base+0x10>
  42ca85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42ca8f:	nop

000000000042ca90 <fb_value_set_visit@@Base>:
  42ca90:	push   r15
  42ca92:	push   r14
  42ca94:	push   r13
  42ca96:	push   r12
  42ca98:	push   rbx
  42ca99:	mov    rax,QWORD PTR [rdi+0x18]
  42ca9d:	test   rax,rax
  42caa0:	je     42cae7 <fb_value_set_visit@@Base+0x57>
  42caa2:	mov    r14,rdx
  42caa5:	mov    r15,rsi
  42caa8:	mov    r12,rdi
  42caab:	mov    r13,QWORD PTR [rdi]
  42caae:	xor    ebx,ebx
  42cab0:	jmp    42cac8 <fb_value_set_visit@@Base+0x38>
  42cab2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cabc:	nop    DWORD PTR [rax+0x0]
  42cac0:	inc    rbx
  42cac3:	cmp    rbx,rax
  42cac6:	jae    42cae7 <fb_value_set_visit@@Base+0x57>
  42cac8:	mov    rsi,QWORD PTR [r13+rbx*8+0x0]
  42cacd:	mov    rcx,rsi
  42cad0:	or     rcx,0x2
  42cad4:	cmp    rcx,0x2
  42cad8:	je     42cac0 <fb_value_set_visit@@Base+0x30>
  42cada:	mov    rdi,r14
  42cadd:	call   r15
  42cae0:	mov    rax,QWORD PTR [r12+0x18]
  42cae5:	jmp    42cac0 <fb_value_set_visit@@Base+0x30>
  42cae7:	pop    rbx
  42cae8:	pop    r12
  42caea:	pop    r13
  42caec:	pop    r14
  42caee:	pop    r15
  42caf0:	ret    
  42caf1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  42cafb:	nop    DWORD PTR [rax+rax*1+0x0]

000000000042cb00 <__libc_csu_init@@Base>:
  42cb00:	endbr64 
  42cb04:	push   r15
  42cb06:	lea    r15,[rip+0x22f43]        # 44fa50 <fb_value_set_deleted@@Base+0x5fd0>
  42cb0d:	push   r14
  42cb0f:	mov    r14,rdx
  42cb12:	push   r13
  42cb14:	mov    r13,rsi
  42cb17:	push   r12
  42cb19:	mov    r12d,edi
  42cb1c:	push   rbp
  42cb1d:	lea    rbp,[rip+0x22f34]        # 44fa58 <fb_value_set_deleted@@Base+0x5fd8>
  42cb24:	push   rbx
  42cb25:	sub    rbp,r15
  42cb28:	sub    rsp,0x8
  42cb2c:	call   406000 <__ctype_toupper_loc@plt-0x30>
  42cb31:	sar    rbp,0x3
  42cb35:	je     42cb56 <__libc_csu_init@@Base+0x56>
  42cb37:	xor    ebx,ebx
  42cb39:	nop    DWORD PTR [rax+0x0]
  42cb40:	mov    rdx,r14
  42cb43:	mov    rsi,r13
  42cb46:	mov    edi,r12d
  42cb49:	call   QWORD PTR [r15+rbx*8]
  42cb4d:	add    rbx,0x1
  42cb51:	cmp    rbp,rbx
  42cb54:	jne    42cb40 <__libc_csu_init@@Base+0x40>
  42cb56:	add    rsp,0x8
  42cb5a:	pop    rbx
  42cb5b:	pop    rbp
  42cb5c:	pop    r12
  42cb5e:	pop    r13
  42cb60:	pop    r14
  42cb62:	pop    r15
  42cb64:	ret    
  42cb65:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

000000000042cb70 <__libc_csu_fini@@Base>:
  42cb70:	endbr64 
  42cb74:	ret    

Disassembly of section .fini:

000000000042cb78 <.fini>:
  42cb78:	endbr64 
  42cb7c:	sub    rsp,0x8
  42cb80:	add    rsp,0x8
  42cb84:	ret    
