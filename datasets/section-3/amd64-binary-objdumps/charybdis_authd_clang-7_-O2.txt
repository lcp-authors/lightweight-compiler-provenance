
../repos/charybdis/authd/.libs/authd:     file format elf64-x86-64


Disassembly of section .init:

0000000000402000 <.init>:
  402000:	endbr64 
  402004:	sub    rsp,0x8
  402008:	mov    rax,QWORD PTR [rip+0xbfb9]        # 40dfc8 <rb_strcasecmp@plt+0xbaa8>
  40200f:	test   rax,rax
  402012:	je     402016 <rb_helper_loop@plt-0x1a>
  402014:	call   rax
  402016:	add    rsp,0x8
  40201a:	ret    

Disassembly of section .plt:

0000000000402020 <rb_helper_loop@plt-0x10>:
  402020:	push   QWORD PTR [rip+0xbfe2]        # 40e008 <rb_strcasecmp@plt+0xbae8>
  402026:	jmp    QWORD PTR [rip+0xbfe4]        # 40e010 <rb_strcasecmp@plt+0xbaf0>
  40202c:	nop    DWORD PTR [rax+0x0]

0000000000402030 <rb_helper_loop@plt>:
  402030:	jmp    QWORD PTR [rip+0xbfe2]        # 40e018 <rb_strcasecmp@plt+0xbaf8>
  402036:	push   0x0
  40203b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402040 <memset@plt>:
  402040:	jmp    QWORD PTR [rip+0xbfda]        # 40e020 <rb_strcasecmp@plt+0xbb00>
  402046:	push   0x1
  40204b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402050 <rb_event_addish@plt>:
  402050:	jmp    QWORD PTR [rip+0xbfd2]        # 40e028 <rb_strcasecmp@plt+0xbb08>
  402056:	push   0x2
  40205b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402060 <rb_ignore_errno@plt>:
  402060:	jmp    QWORD PTR [rip+0xbfca]        # 40e030 <rb_strcasecmp@plt+0xbb10>
  402066:	push   0x3
  40206b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402070 <rb_connect_tcp_ssl@plt>:
  402070:	jmp    QWORD PTR [rip+0xbfc2]        # 40e038 <rb_strcasecmp@plt+0xbb18>
  402076:	push   0x4
  40207b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402080 <snprintf@plt>:
  402080:	jmp    QWORD PTR [rip+0xbfba]        # 40e040 <rb_strcasecmp@plt+0xbb20>
  402086:	push   0x5
  40208b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402090 <rb_connect_tcp@plt>:
  402090:	jmp    QWORD PTR [rip+0xbfb2]        # 40e048 <rb_strcasecmp@plt+0xbb28>
  402096:	push   0x6
  40209b:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020a0 <rb_event_delete@plt>:
  4020a0:	jmp    QWORD PTR [rip+0xbfaa]        # 40e050 <rb_strcasecmp@plt+0xbb30>
  4020a6:	push   0x7
  4020ab:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020b0 <rb_setselect@plt>:
  4020b0:	jmp    QWORD PTR [rip+0xbfa2]        # 40e058 <rb_strcasecmp@plt+0xbb38>
  4020b6:	push   0x8
  4020bb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020c0 <memchr@plt>:
  4020c0:	jmp    QWORD PTR [rip+0xbf9a]        # 40e060 <rb_strcasecmp@plt+0xbb40>
  4020c6:	push   0x9
  4020cb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020d0 <rb_get_fd@plt>:
  4020d0:	jmp    QWORD PTR [rip+0xbf92]        # 40e068 <rb_strcasecmp@plt+0xbb48>
  4020d6:	push   0xa
  4020db:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020e0 <exit@plt>:
  4020e0:	jmp    QWORD PTR [rip+0xbf8a]        # 40e070 <rb_strcasecmp@plt+0xbb50>
  4020e6:	push   0xb
  4020eb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004020f0 <__assert_fail@plt>:
  4020f0:	jmp    QWORD PTR [rip+0xbf82]        # 40e078 <rb_strcasecmp@plt+0xbb58>
  4020f6:	push   0xc
  4020fb:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402100 <getaddrinfo@plt>:
  402100:	jmp    QWORD PTR [rip+0xbf7a]        # 40e080 <rb_strcasecmp@plt+0xbb60>
  402106:	push   0xd
  40210b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402110 <rb_socket@plt>:
  402110:	jmp    QWORD PTR [rip+0xbf72]        # 40e088 <rb_strcasecmp@plt+0xbb68>
  402116:	push   0xe
  40211b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402120 <strcasecmp@plt>:
  402120:	jmp    QWORD PTR [rip+0xbf6a]        # 40e090 <rb_strcasecmp@plt+0xbb70>
  402126:	push   0xf
  40212b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402130 <rb_strtok_r@plt>:
  402130:	jmp    QWORD PTR [rip+0xbf62]        # 40e098 <rb_strcasecmp@plt+0xbb78>
  402136:	push   0x10
  40213b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402140 <rb_dictionary_foreach_cur@plt>:
  402140:	jmp    QWORD PTR [rip+0xbf5a]        # 40e0a0 <rb_strcasecmp@plt+0xbb80>
  402146:	push   0x11
  40214b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402150 <strpbrk@plt>:
  402150:	jmp    QWORD PTR [rip+0xbf52]        # 40e0a8 <rb_strcasecmp@plt+0xbb88>
  402156:	push   0x12
  40215b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402160 <rb_helper_child@plt>:
  402160:	jmp    QWORD PTR [rip+0xbf4a]        # 40e0b0 <rb_strcasecmp@plt+0xbb90>
  402166:	push   0x13
  40216b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402170 <strncmp@plt>:
  402170:	jmp    QWORD PTR [rip+0xbf42]        # 40e0b8 <rb_strcasecmp@plt+0xbb98>
  402176:	push   0x14
  40217b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402180 <malloc@plt>:
  402180:	jmp    QWORD PTR [rip+0xbf3a]        # 40e0c0 <rb_strcasecmp@plt+0xbba0>
  402186:	push   0x15
  40218b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402190 <fopen@plt>:
  402190:	jmp    QWORD PTR [rip+0xbf32]        # 40e0c8 <rb_strcasecmp@plt+0xbba8>
  402196:	push   0x16
  40219b:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021a0 <rb_write@plt>:
  4021a0:	jmp    QWORD PTR [rip+0xbf2a]        # 40e0d0 <rb_strcasecmp@plt+0xbbb0>
  4021a6:	push   0x17
  4021ab:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021b0 <setsockopt@plt>:
  4021b0:	jmp    QWORD PTR [rip+0xbf22]        # 40e0d8 <rb_strcasecmp@plt+0xbbb8>
  4021b6:	push   0x18
  4021bb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021c0 <rb_strlcpy@plt>:
  4021c0:	jmp    QWORD PTR [rip+0xbf1a]        # 40e0e0 <rb_strcasecmp@plt+0xbbc0>
  4021c6:	push   0x19
  4021cb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021d0 <rb_dictionary_foreach_next@plt>:
  4021d0:	jmp    QWORD PTR [rip+0xbf12]        # 40e0e8 <rb_strcasecmp@plt+0xbbc8>
  4021d6:	push   0x1a
  4021db:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021e0 <freeaddrinfo@plt>:
  4021e0:	jmp    QWORD PTR [rip+0xbf0a]        # 40e0f0 <rb_strcasecmp@plt+0xbbd0>
  4021e6:	push   0x1b
  4021eb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004021f0 <free@plt>:
  4021f0:	jmp    QWORD PTR [rip+0xbf02]        # 40e0f8 <rb_strcasecmp@plt+0xbbd8>
  4021f6:	push   0x1c
  4021fb:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402200 <strlen@plt>:
  402200:	jmp    QWORD PTR [rip+0xbefa]        # 40e100 <rb_strcasecmp@plt+0xbbe0>
  402206:	push   0x1d
  40220b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402210 <rb_string_to_array@plt>:
  402210:	jmp    QWORD PTR [rip+0xbef2]        # 40e108 <rb_strcasecmp@plt+0xbbe8>
  402216:	push   0x1e
  40221b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402220 <rb_read@plt>:
  402220:	jmp    QWORD PTR [rip+0xbeea]        # 40e110 <rb_strcasecmp@plt+0xbbf0>
  402226:	push   0x1f
  40222b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402230 <__ctype_b_loc@plt>:
  402230:	jmp    QWORD PTR [rip+0xbee2]        # 40e118 <rb_strcasecmp@plt+0xbbf8>
  402236:	push   0x20
  40223b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402240 <rb_dictionary_foreach_start@plt>:
  402240:	jmp    QWORD PTR [rip+0xbeda]        # 40e120 <rb_strcasecmp@plt+0xbc00>
  402246:	push   0x21
  40224b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402250 <sprintf@plt>:
  402250:	jmp    QWORD PTR [rip+0xbed2]        # 40e128 <rb_strcasecmp@plt+0xbc08>
  402256:	push   0x22
  40225b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402260 <rb_inet_pton_sock@plt>:
  402260:	jmp    QWORD PTR [rip+0xbeca]        # 40e130 <rb_strcasecmp@plt+0xbc10>
  402266:	push   0x23
  40226b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402270 <strrchr@plt>:
  402270:	jmp    QWORD PTR [rip+0xbec2]        # 40e138 <rb_strcasecmp@plt+0xbc18>
  402276:	push   0x24
  40227b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402280 <rb_current_time@plt>:
  402280:	jmp    QWORD PTR [rip+0xbeba]        # 40e140 <rb_strcasecmp@plt+0xbc20>
  402286:	push   0x25
  40228b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402290 <rb_dictionary_delete@plt>:
  402290:	jmp    QWORD PTR [rip+0xbeb2]        # 40e148 <rb_strcasecmp@plt+0xbc28>
  402296:	push   0x26
  40229b:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022a0 <strerror@plt>:
  4022a0:	jmp    QWORD PTR [rip+0xbeaa]        # 40e150 <rb_strcasecmp@plt+0xbc30>
  4022a6:	push   0x27
  4022ab:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022b0 <strstr@plt>:
  4022b0:	jmp    QWORD PTR [rip+0xbea2]        # 40e158 <rb_strcasecmp@plt+0xbc38>
  4022b6:	push   0x28
  4022bb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022c0 <rb_free_rb_dlink_node@plt>:
  4022c0:	jmp    QWORD PTR [rip+0xbe9a]        # 40e160 <rb_strcasecmp@plt+0xbc40>
  4022c6:	push   0x29
  4022cb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022d0 <sigaction@plt>:
  4022d0:	jmp    QWORD PTR [rip+0xbe92]        # 40e168 <rb_strcasecmp@plt+0xbc48>
  4022d6:	push   0x2a
  4022db:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022e0 <rb_close@plt>:
  4022e0:	jmp    QWORD PTR [rip+0xbe8a]        # 40e170 <rb_strcasecmp@plt+0xbc50>
  4022e6:	push   0x2b
  4022eb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004022f0 <strtol@plt>:
  4022f0:	jmp    QWORD PTR [rip+0xbe82]        # 40e178 <rb_strcasecmp@plt+0xbc58>
  4022f6:	push   0x2c
  4022fb:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402300 <getsockname@plt>:
  402300:	jmp    QWORD PTR [rip+0xbe7a]        # 40e180 <rb_strcasecmp@plt+0xbc60>
  402306:	push   0x2d
  40230b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402310 <rb_dictionary_destroy@plt>:
  402310:	jmp    QWORD PTR [rip+0xbe72]        # 40e188 <rb_strcasecmp@plt+0xbc68>
  402316:	push   0x2e
  40231b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402320 <memmove@plt>:
  402320:	jmp    QWORD PTR [rip+0xbe6a]        # 40e190 <rb_strcasecmp@plt+0xbc70>
  402326:	push   0x2f
  40232b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402330 <strchr@plt>:
  402330:	jmp    QWORD PTR [rip+0xbe62]        # 40e198 <rb_strcasecmp@plt+0xbc78>
  402336:	push   0x30
  40233b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402340 <fgets_unlocked@plt>:
  402340:	jmp    QWORD PTR [rip+0xbe5a]        # 40e1a0 <rb_strcasecmp@plt+0xbc80>
  402346:	push   0x31
  40234b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402350 <vsnprintf@plt>:
  402350:	jmp    QWORD PTR [rip+0xbe52]        # 40e1a8 <rb_strcasecmp@plt+0xbc88>
  402356:	push   0x32
  40235b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402360 <rb_init_prng@plt>:
  402360:	jmp    QWORD PTR [rip+0xbe4a]        # 40e1b0 <rb_strcasecmp@plt+0xbc90>
  402366:	push   0x33
  40236b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402370 <rb_dictionary_retrieve@plt>:
  402370:	jmp    QWORD PTR [rip+0xbe42]        # 40e1b8 <rb_strcasecmp@plt+0xbc98>
  402376:	push   0x34
  40237b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402380 <rb_outofmemory@plt>:
  402380:	jmp    QWORD PTR [rip+0xbe3a]        # 40e1c0 <rb_strcasecmp@plt+0xbca0>
  402386:	push   0x35
  40238b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402390 <__errno_location@plt>:
  402390:	jmp    QWORD PTR [rip+0xbe32]        # 40e1c8 <rb_strcasecmp@plt+0xbca8>
  402396:	push   0x36
  40239b:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023a0 <rb_dictionary_add@plt>:
  4023a0:	jmp    QWORD PTR [rip+0xbe2a]        # 40e1d0 <rb_strcasecmp@plt+0xbcb0>
  4023a6:	push   0x37
  4023ab:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023b0 <rb_set_time@plt>:
  4023b0:	jmp    QWORD PTR [rip+0xbe22]        # 40e1d8 <rb_strcasecmp@plt+0xbcb8>
  4023b6:	push   0x38
  4023bb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023c0 <sigaddset@plt>:
  4023c0:	jmp    QWORD PTR [rip+0xbe1a]        # 40e1e0 <rb_strcasecmp@plt+0xbcc0>
  4023c6:	push   0x39
  4023cb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023d0 <rb_helper_read@plt>:
  4023d0:	jmp    QWORD PTR [rip+0xbe12]        # 40e1e8 <rb_strcasecmp@plt+0xbcc8>
  4023d6:	push   0x3a
  4023db:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023e0 <strcmp@plt>:
  4023e0:	jmp    QWORD PTR [rip+0xbe0a]        # 40e1f0 <rb_strcasecmp@plt+0xbcd0>
  4023e6:	push   0x3b
  4023eb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004023f0 <rb_inet_ntop_sock@plt>:
  4023f0:	jmp    QWORD PTR [rip+0xbe02]        # 40e1f8 <rb_strcasecmp@plt+0xbcd8>
  4023f6:	push   0x3c
  4023fb:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402400 <rb_dictionary_find@plt>:
  402400:	jmp    QWORD PTR [rip+0xbdfa]        # 40e200 <rb_strcasecmp@plt+0xbce0>
  402406:	push   0x3d
  40240b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402410 <strcpy@plt>:
  402410:	jmp    QWORD PTR [rip+0xbdf2]        # 40e208 <rb_strcasecmp@plt+0xbce8>
  402416:	push   0x3e
  40241b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402420 <rb_dictionary_create@plt>:
  402420:	jmp    QWORD PTR [rip+0xbdea]        # 40e210 <rb_strcasecmp@plt+0xbcf0>
  402426:	push   0x3f
  40242b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402430 <rb_accept_tcp@plt>:
  402430:	jmp    QWORD PTR [rip+0xbde2]        # 40e218 <rb_strcasecmp@plt+0xbcf8>
  402436:	push   0x40
  40243b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402440 <calloc@plt>:
  402440:	jmp    QWORD PTR [rip+0xbdda]        # 40e220 <rb_strcasecmp@plt+0xbd00>
  402446:	push   0x41
  40244b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402450 <rb_helper_write@plt>:
  402450:	jmp    QWORD PTR [rip+0xbdd2]        # 40e228 <rb_strcasecmp@plt+0xbd08>
  402456:	push   0x42
  40245b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402460 <fclose@plt>:
  402460:	jmp    QWORD PTR [rip+0xbdca]        # 40e230 <rb_strcasecmp@plt+0xbd10>
  402466:	push   0x43
  40246b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402470 <recvfrom@plt>:
  402470:	jmp    QWORD PTR [rip+0xbdc2]        # 40e238 <rb_strcasecmp@plt+0xbd18>
  402476:	push   0x44
  40247b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402480 <rb_event_add@plt>:
  402480:	jmp    QWORD PTR [rip+0xbdba]        # 40e240 <rb_strcasecmp@plt+0xbd20>
  402486:	push   0x45
  40248b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402490 <strtoull@plt>:
  402490:	jmp    QWORD PTR [rip+0xbdb2]        # 40e248 <rb_strcasecmp@plt+0xbd28>
  402496:	push   0x46
  40249b:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024a0 <rb_get_random@plt>:
  4024a0:	jmp    QWORD PTR [rip+0xbdaa]        # 40e250 <rb_strcasecmp@plt+0xbd30>
  4024a6:	push   0x47
  4024ab:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024b0 <rb_make_rb_dlink_node@plt>:
  4024b0:	jmp    QWORD PTR [rip+0xbda2]        # 40e258 <rb_strcasecmp@plt+0xbd38>
  4024b6:	push   0x48
  4024bb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024c0 <sigemptyset@plt>:
  4024c0:	jmp    QWORD PTR [rip+0xbd9a]        # 40e260 <rb_strcasecmp@plt+0xbd40>
  4024c6:	push   0x49
  4024cb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024d0 <sendto@plt>:
  4024d0:	jmp    QWORD PTR [rip+0xbd92]        # 40e268 <rb_strcasecmp@plt+0xbd48>
  4024d6:	push   0x4a
  4024db:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024e0 <bind@plt>:
  4024e0:	jmp    QWORD PTR [rip+0xbd8a]        # 40e270 <rb_strcasecmp@plt+0xbd50>
  4024e6:	push   0x4b
  4024eb:	jmp    402020 <rb_helper_loop@plt-0x10>

00000000004024f0 <fwrite@plt>:
  4024f0:	jmp    QWORD PTR [rip+0xbd82]        # 40e278 <rb_strcasecmp@plt+0xbd58>
  4024f6:	push   0x4c
  4024fb:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402500 <rb_listen@plt>:
  402500:	jmp    QWORD PTR [rip+0xbd7a]        # 40e280 <rb_strcasecmp@plt+0xbd60>
  402506:	push   0x4d
  40250b:	jmp    402020 <rb_helper_loop@plt-0x10>

0000000000402510 <memcpy@plt>:
  402510:	jmp    QWORD PTR [rip+0xbd72]        # 40e288 <rb_strcasecmp@plt+0xbd68>
  402516:	push   0x4e
  40251b:	jmp    402020 <rb_helper_loop@plt-0x10>

Disassembly of section .plt.got:

0000000000402520 <rb_strcasecmp@plt>:
  402520:	jmp    QWORD PTR [rip+0xbaba]        # 40dfe0 <rb_strcasecmp@plt+0xbac0>
  402526:	xchg   ax,ax

Disassembly of section .text:

0000000000402530 <.text>:
  402530:	endbr64 
  402534:	xor    ebp,ebp
  402536:	mov    r9,rdx
  402539:	pop    rsi
  40253a:	mov    rdx,rsp
  40253d:	and    rsp,0xfffffffffffffff0
  402541:	push   rax
  402542:	push   rsp
  402543:	mov    r8,0x409800
  40254a:	mov    rcx,0x409790
  402551:	mov    rdi,0x4027b0
  402558:	call   QWORD PTR [rip+0xba72]        # 40dfd0 <rb_strcasecmp@plt+0xbab0>
  40255e:	hlt    
  40255f:	nop
  402560:	endbr64 
  402564:	ret    
  402565:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40256f:	nop
  402570:	mov    eax,0x40fe60
  402575:	cmp    rax,0x40fe60
  40257b:	je     402590 <rb_strcasecmp@plt+0x70>
  40257d:	mov    eax,0x0
  402582:	test   rax,rax
  402585:	je     402590 <rb_strcasecmp@plt+0x70>
  402587:	mov    edi,0x40fe60
  40258c:	jmp    rax
  40258e:	xchg   ax,ax
  402590:	ret    
  402591:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40259c:	nop    DWORD PTR [rax+0x0]
  4025a0:	mov    esi,0x40fe60
  4025a5:	sub    rsi,0x40fe60
  4025ac:	mov    rax,rsi
  4025af:	shr    rsi,0x3f
  4025b3:	sar    rax,0x3
  4025b7:	add    rsi,rax
  4025ba:	sar    rsi,1
  4025bd:	je     4025d0 <rb_strcasecmp@plt+0xb0>
  4025bf:	mov    eax,0x0
  4025c4:	test   rax,rax
  4025c7:	je     4025d0 <rb_strcasecmp@plt+0xb0>
  4025c9:	mov    edi,0x40fe60
  4025ce:	jmp    rax
  4025d0:	ret    
  4025d1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4025dc:	nop    DWORD PTR [rax+0x0]
  4025e0:	endbr64 
  4025e4:	cmp    BYTE PTR [rip+0xd875],0x0        # 40fe60 <rb_strcasecmp@plt+0xd940>
  4025eb:	jne    402600 <rb_strcasecmp@plt+0xe0>
  4025ed:	push   rbp
  4025ee:	mov    rbp,rsp
  4025f1:	call   402570 <rb_strcasecmp@plt+0x50>
  4025f6:	mov    BYTE PTR [rip+0xd863],0x1        # 40fe60 <rb_strcasecmp@plt+0xd940>
  4025fd:	pop    rbp
  4025fe:	ret    
  4025ff:	nop
  402600:	ret    
  402601:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40260c:	nop    DWORD PTR [rax+0x0]
  402610:	endbr64 
  402614:	jmp    4025a0 <rb_strcasecmp@plt+0x80>
  402616:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402620:	push   r14
  402622:	push   rbx
  402623:	push   rax
  402624:	mov    ebx,edi
  402626:	cmp    edi,0x1
  402629:	jg     402647 <rb_strcasecmp@plt+0x127>
  40262b:	lea    rsi,[rip+0x7a95]        # 40a0c7 <rb_strcasecmp@plt+0x7ba7>
  402632:	mov    edi,0x43
  402637:	xor    eax,eax
  402639:	mov    edx,ebx
  40263b:	add    rsp,0x8
  40263f:	pop    rbx
  402640:	pop    r14
  402642:	jmp    403150 <rb_strcasecmp@plt+0xc30>
  402647:	mov    r14,rsi
  40264a:	lea    rax,[rip+0x11acf]        # 414120 <rb_strcasecmp@plt+0x11c00>
  402651:	mov    rdi,QWORD PTR [rax]
  402654:	mov    rsi,QWORD PTR [rsi+0x8]
  402658:	call   402370 <rb_dictionary_retrieve@plt>
  40265d:	test   rax,rax
  402660:	je     402688 <rb_strcasecmp@plt+0x168>
  402662:	lea    esi,[rbx-0x2]
  402665:	mov    edx,DWORD PTR [rax+0x8]
  402668:	cmp    esi,edx
  40266a:	jge    4026a6 <rb_strcasecmp@plt+0x186>
  40266c:	lea    rsi,[rip+0x7acf]        # 40a142 <rb_strcasecmp@plt+0x7c22>
  402673:	mov    edi,0x43
  402678:	xor    eax,eax
  40267a:	mov    ecx,ebx
  40267c:	add    rsp,0x8
  402680:	pop    rbx
  402681:	pop    r14
  402683:	jmp    403150 <rb_strcasecmp@plt+0xc30>
  402688:	mov    rdx,QWORD PTR [r14+0x8]
  40268c:	lea    rsi,[rip+0x7a82]        # 40a115 <rb_strcasecmp@plt+0x7bf5>
  402693:	mov    edi,0x43
  402698:	xor    eax,eax
  40269a:	add    rsp,0x8
  40269e:	pop    rbx
  40269f:	pop    r14
  4026a1:	jmp    403150 <rb_strcasecmp@plt+0xc30>
  4026a6:	mov    rax,QWORD PTR [rax+0x10]
  4026aa:	mov    rdi,QWORD PTR [r14+0x8]
  4026ae:	add    r14,0x10
  4026b2:	mov    rdx,r14
  4026b5:	add    rsp,0x8
  4026b9:	pop    rbx
  4026ba:	pop    r14
  4026bc:	jmp    rax
  4026be:	xchg   ax,ax
  4026c0:	push   r14
  4026c2:	push   rbx
  4026c3:	push   rax
  4026c4:	cmp    edi,0x2
  4026c7:	jg     4026fc <rb_strcasecmp@plt+0x1dc>
  4026c9:	xor    ebx,ebx
  4026cb:	lea    r14,[rip+0xcbce]        # 40f2a0 <rb_strcasecmp@plt+0xcd80>
  4026d2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4026dc:	nop    DWORD PTR [rax+0x0]
  4026e0:	mov    rax,QWORD PTR [r14+rbx*8]
  4026e4:	test   rax,rax
  4026e7:	je     4026ed <rb_strcasecmp@plt+0x1cd>
  4026e9:	xor    edi,edi
  4026eb:	call   rax
  4026ed:	add    rbx,0x1
  4026f1:	cmp    rbx,0x100
  4026f8:	jne    4026e0 <rb_strcasecmp@plt+0x1c0>
  4026fa:	jmp    40271f <rb_strcasecmp@plt+0x1ff>
  4026fc:	mov    rax,QWORD PTR [rsi+0x8]
  402700:	movzx  eax,BYTE PTR [rax]
  402703:	lea    rcx,[rip+0xcb96]        # 40f2a0 <rb_strcasecmp@plt+0xcd80>
  40270a:	mov    rcx,QWORD PTR [rcx+rax*8]
  40270e:	test   rcx,rcx
  402711:	je     40271f <rb_strcasecmp@plt+0x1ff>
  402713:	movsx  edi,al
  402716:	add    rsp,0x8
  40271a:	pop    rbx
  40271b:	pop    r14
  40271d:	jmp    rcx
  40271f:	add    rsp,0x8
  402723:	pop    rbx
  402724:	pop    r14
  402726:	ret    
  402727:	nop    WORD PTR [rax+rax*1+0x0]
  402730:	push   rbx
  402731:	cmp    edi,0x2
  402734:	jg     40274e <rb_strcasecmp@plt+0x22e>
  402736:	mov    ecx,edi
  402738:	lea    rsi,[rip+0x790b]        # 40a04a <rb_strcasecmp@plt+0x7b2a>
  40273f:	mov    edi,0x43
  402744:	xor    eax,eax
  402746:	mov    edx,ecx
  402748:	pop    rbx
  402749:	jmp    403150 <rb_strcasecmp@plt+0xc30>
  40274e:	mov    rbx,rsi
  402751:	mov    rdi,QWORD PTR [rsi+0x8]
  402755:	xor    esi,esi
  402757:	mov    edx,0x10
  40275c:	call   402490 <strtoull@plt>
  402761:	mov    rcx,rax
  402764:	shr    rcx,0x20
  402768:	je     402782 <rb_strcasecmp@plt+0x262>
  40276a:	mov    rdx,QWORD PTR [rbx+0x8]
  40276e:	lea    rsi,[rip+0x7920]        # 40a095 <rb_strcasecmp@plt+0x7b75>
  402775:	mov    edi,0x43
  40277a:	xor    eax,eax
  40277c:	pop    rbx
  40277d:	jmp    403150 <rb_strcasecmp@plt+0xc30>
  402782:	mov    rcx,QWORD PTR [rbx+0x10]
  402786:	movzx  edx,BYTE PTR [rcx]
  402789:	lea    rcx,[rip+0xc310]        # 40eaa0 <rb_strcasecmp@plt+0xc580>
  402790:	mov    rcx,QWORD PTR [rcx+rdx*8]
  402794:	test   rcx,rcx
  402797:	je     4027a1 <rb_strcasecmp@plt+0x281>
  402799:	movsx  esi,dl
  40279c:	mov    edi,eax
  40279e:	pop    rbx
  40279f:	jmp    rcx
  4027a1:	pop    rbx
  4027a2:	ret    
  4027a3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4027ad:	nop    DWORD PTR [rax]
  4027b0:	push   rbx
  4027b1:	call   402870 <rb_strcasecmp@plt+0x350>
  4027b6:	lea    rdi,[rip+0x173]        # 402930 <rb_strcasecmp@plt+0x410>
  4027bd:	lea    rsi,[rip+0x1fc]        # 4029c0 <rb_strcasecmp@plt+0x4a0>
  4027c4:	mov    edx,0x0
  4027c9:	mov    ecx,0x0
  4027ce:	mov    r8d,0x0
  4027d4:	mov    r9d,0x100
  4027da:	push   0x100
  4027df:	push   0x100
  4027e4:	call   402160 <rb_helper_child@plt>
  4027e9:	add    rsp,0x10
  4027ed:	lea    rbx,[rip+0xd67c]        # 40fe70 <rb_strcasecmp@plt+0xd950>
  4027f4:	mov    QWORD PTR [rbx],rax
  4027f7:	test   rax,rax
  4027fa:	jne    402826 <rb_strcasecmp@plt+0x306>
  4027fc:	mov    rax,QWORD PTR [rip+0xb7ed]        # 40dff0 <rb_strcasecmp@plt+0xbad0>
  402803:	mov    rcx,QWORD PTR [rax]
  402806:	lea    rdi,[rip+0x77f7]        # 40a004 <rb_strcasecmp@plt+0x7ae4>
  40280d:	mov    esi,0x2e
  402812:	mov    edx,0x1
  402817:	call   4024f0 <fwrite@plt>
  40281c:	mov    edi,0x1
  402821:	call   4020e0 <exit@plt>
  402826:	call   4023b0 <rb_set_time@plt>
  40282b:	call   402870 <rb_strcasecmp@plt+0x350>
  402830:	lea    rdi,[rip+0x77fc]        # 40a033 <rb_strcasecmp@plt+0x7b13>
  402837:	mov    rsi,QWORD PTR [rip+0xb7a2]        # 40dfe0 <rb_strcasecmp@plt+0xbac0>
  40283e:	call   402420 <rb_dictionary_create@plt>
  402843:	lea    rcx,[rip+0x118d6]        # 414120 <rb_strcasecmp@plt+0x11c00>
  40284a:	mov    QWORD PTR [rcx],rax
  40284d:	call   404290 <rb_strcasecmp@plt+0x1d70>
  402852:	call   4033f0 <rb_strcasecmp@plt+0xed0>
  402857:	xor    edi,edi
  402859:	mov    esi,0x1
  40285e:	call   402360 <rb_init_prng@plt>
  402863:	mov    rdi,QWORD PTR [rbx]
  402866:	xor    esi,esi
  402868:	call   402030 <rb_helper_loop@plt>
  40286d:	nop    DWORD PTR [rax]
  402870:	push   rbx
  402871:	sub    rsp,0xa0
  402878:	mov    DWORD PTR [rsp+0x90],0x0
  402883:	mov    QWORD PTR [rsp+0x8],0x1
  40288c:	lea    rbx,[rsp+0x10]
  402891:	mov    rdi,rbx
  402894:	call   4024c0 <sigemptyset@plt>
  402899:	mov    esi,0xd
  40289e:	mov    rdi,rbx
  4028a1:	call   4023c0 <sigaddset@plt>
  4028a6:	mov    esi,0xe
  4028ab:	mov    rdi,rbx
  4028ae:	call   4023c0 <sigaddset@plt>
  4028b3:	mov    esi,0x5
  4028b8:	mov    rdi,rbx
  4028bb:	call   4023c0 <sigaddset@plt>
  4028c0:	mov    esi,0x1c
  4028c5:	mov    rdi,rbx
  4028c8:	call   4023c0 <sigaddset@plt>
  4028cd:	lea    rbx,[rsp+0x8]
  4028d2:	mov    edi,0x1c
  4028d7:	xor    edx,edx
  4028d9:	mov    rsi,rbx
  4028dc:	call   4022d0 <sigaction@plt>
  4028e1:	mov    edi,0xd
  4028e6:	xor    edx,edx
  4028e8:	mov    rsi,rbx
  4028eb:	call   4022d0 <sigaction@plt>
  4028f0:	mov    edi,0x5
  4028f5:	xor    edx,edx
  4028f7:	mov    rsi,rbx
  4028fa:	call   4022d0 <sigaction@plt>
  4028ff:	lea    rax,[rip+0xca]        # 4029d0 <rb_strcasecmp@plt+0x4b0>
  402906:	mov    QWORD PTR [rsp+0x8],rax
  40290b:	mov    edi,0xe
  402910:	xor    edx,edx
  402912:	mov    rsi,rbx
  402915:	call   4022d0 <sigaction@plt>
  40291a:	add    rsp,0xa0
  402921:	pop    rbx
  402922:	ret    
  402923:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40292d:	nop    DWORD PTR [rax]
  402930:	push   r15
  402932:	push   r14
  402934:	push   r12
  402936:	push   rbx
  402937:	push   rax
  402938:	mov    r14,rdi
  40293b:	lea    rsi,[rip+0xd59e]        # 40fee0 <rb_strcasecmp@plt+0xd9c0>
  402942:	mov    edx,0x4000
  402947:	call   4023d0 <rb_helper_read@plt>
  40294c:	test   eax,eax
  40294e:	jle    4029b2 <rb_strcasecmp@plt+0x492>
  402950:	lea    rbx,[rip+0xd589]        # 40fee0 <rb_strcasecmp@plt+0xd9c0>
  402957:	lea    r15,[rip+0xd522]        # 40fe80 <rb_strcasecmp@plt+0xd960>
  40295e:	lea    r12,[rip+0xb93b]        # 40e2a0 <rb_strcasecmp@plt+0xbd80>
  402965:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40296f:	nop
  402970:	mov    edx,0xa
  402975:	mov    rdi,rbx
  402978:	mov    rsi,r15
  40297b:	call   402210 <rb_string_to_array@plt>
  402980:	test   eax,eax
  402982:	jle    40299e <rb_strcasecmp@plt+0x47e>
  402984:	mov    rcx,QWORD PTR [rip+0xd4f5]        # 40fe80 <rb_strcasecmp@plt+0xd960>
  40298b:	movzx  ecx,BYTE PTR [rcx]
  40298e:	mov    rcx,QWORD PTR [r12+rcx*8]
  402992:	test   rcx,rcx
  402995:	je     40299e <rb_strcasecmp@plt+0x47e>
  402997:	mov    edi,eax
  402999:	mov    rsi,r15
  40299c:	call   rcx
  40299e:	mov    edx,0x4000
  4029a3:	mov    rdi,r14
  4029a6:	mov    rsi,rbx
  4029a9:	call   4023d0 <rb_helper_read@plt>
  4029ae:	test   eax,eax
  4029b0:	jg     402970 <rb_strcasecmp@plt+0x450>
  4029b2:	add    rsp,0x8
  4029b6:	pop    rbx
  4029b7:	pop    r12
  4029b9:	pop    r14
  4029bb:	pop    r15
  4029bd:	ret    
  4029be:	xchg   ax,ax
  4029c0:	push   rax
  4029c1:	mov    edi,0x1
  4029c6:	call   4020e0 <exit@plt>
  4029cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4029d0:	ret    
  4029d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4029db:	nop    DWORD PTR [rax+rax*1+0x0]
  4029e0:	push   rbp
  4029e1:	push   r15
  4029e3:	push   r14
  4029e5:	push   r12
  4029e7:	push   rbx
  4029e8:	mov    r15,rcx
  4029eb:	mov    r12,rdx
  4029ee:	mov    ebp,esi
  4029f0:	mov    r14,rdi
  4029f3:	mov    edi,0x1
  4029f8:	mov    esi,0xb0
  4029fd:	call   402440 <calloc@plt>
  402a02:	test   rax,rax
  402a05:	je     402a84 <rb_strcasecmp@plt+0x564>
  402a07:	mov    rbx,rax
  402a0a:	cmp    ebp,0x2
  402a0d:	je     402a20 <rb_strcasecmp@plt+0x500>
  402a0f:	cmp    ebp,0xa
  402a12:	jne    402a6e <rb_strcasecmp@plt+0x54e>
  402a14:	mov    edx,0x1c
  402a19:	mov    eax,0x36
  402a1e:	jmp    402a2a <rb_strcasecmp@plt+0x50a>
  402a20:	mov    edx,0x1
  402a25:	mov    eax,0x34
  402a2a:	mov    DWORD PTR [rbx+0x10],eax
  402a2d:	lea    rax,[rip+0x114ac]        # 413ee0 <rb_strcasecmp@plt+0x119c0>
  402a34:	mov    rcx,QWORD PTR [rax]
  402a37:	lea    rsi,[rcx+0x1]
  402a3b:	mov    QWORD PTR [rax],rsi
  402a3e:	mov    QWORD PTR [rbx+0x98],rcx
  402a45:	mov    QWORD PTR [rbx+0xa0],r12
  402a4c:	mov    QWORD PTR [rbx+0xa8],r15
  402a53:	mov    QWORD PTR [rbx],rbx
  402a56:	lea    rax,[rip+0x33]        # 402a90 <rb_strcasecmp@plt+0x570>
  402a5d:	mov    QWORD PTR [rbx+0x8],rax
  402a61:	mov    rdi,r14
  402a64:	mov    rsi,rbx
  402a67:	call   4043f0 <rb_strcasecmp@plt+0x1ed0>
  402a6c:	jmp    402a78 <rb_strcasecmp@plt+0x558>
  402a6e:	mov    rdi,rbx
  402a71:	call   4021f0 <free@plt>
  402a76:	xor    ebx,ebx
  402a78:	mov    rax,rbx
  402a7b:	pop    rbx
  402a7c:	pop    r12
  402a7e:	pop    r14
  402a80:	pop    r15
  402a82:	pop    rbp
  402a83:	ret    
  402a84:	call   402380 <rb_outofmemory@plt>
  402a89:	nop    DWORD PTR [rax+0x0]
  402a90:	push   rbp
  402a91:	mov    rbp,rsp
  402a94:	push   r15
  402a96:	push   r14
  402a98:	push   rbx
  402a99:	and    rsp,0xffffffffffffffe0
  402a9d:	sub    rsp,0x40
  402aa1:	vxorps xmm0,xmm0,xmm0
  402aa5:	vmovaps YMMWORD PTR [rsp],ymm0
  402aaa:	vmovups YMMWORD PTR [rsp+0x15],ymm0
  402ab0:	mov    BYTE PTR [rsp],0x2a
  402ab4:	test   rdi,rdi
  402ab7:	je     402b88 <rb_strcasecmp@plt+0x668>
  402abd:	mov    rbx,rdi
  402ac0:	test   rsi,rsi
  402ac3:	je     402b4a <rb_strcasecmp@plt+0x62a>
  402ac9:	mov    edx,DWORD PTR [rbx+0x10]
  402acc:	cmp    edx,0x36
  402acf:	je     402aff <rb_strcasecmp@plt+0x5df>
  402ad1:	cmp    edx,0x34
  402ad4:	jne    402ba8 <rb_strcasecmp@plt+0x688>
  402ada:	movzx  eax,WORD PTR [rsi+0x8]
  402ade:	cmp    eax,0x2
  402ae1:	jne    402b4a <rb_strcasecmp@plt+0x62a>
  402ae3:	add    rsi,0x8
  402ae7:	mov    rax,rsp
  402aea:	mov    edx,0x35
  402aef:	mov    rdi,rsi
  402af2:	mov    rsi,rax
  402af5:	vzeroupper 
  402af8:	call   4023f0 <rb_inet_ntop_sock@plt>
  402afd:	jmp    402b4a <rb_strcasecmp@plt+0x62a>
  402aff:	movzx  eax,WORD PTR [rsi+0x8]
  402b03:	cmp    eax,0xa
  402b06:	jne    402b4a <rb_strcasecmp@plt+0x62a>
  402b08:	add    rsi,0x8
  402b0c:	mov    rax,rsp
  402b0f:	mov    edx,0x35
  402b14:	mov    rdi,rsi
  402b17:	mov    rsi,rax
  402b1a:	vzeroupper 
  402b1d:	call   4023f0 <rb_inet_ntop_sock@plt>
  402b22:	cmp    BYTE PTR [rsp],0x3a
  402b26:	jne    402b4a <rb_strcasecmp@plt+0x62a>
  402b28:	lea    r14,[rsp+0x1]
  402b2d:	mov    r15,rsp
  402b30:	mov    rdi,r15
  402b33:	call   402200 <strlen@plt>
  402b38:	mov    rdi,r14
  402b3b:	mov    rsi,r15
  402b3e:	mov    rdx,rax
  402b41:	call   402320 <memmove@plt>
  402b46:	mov    BYTE PTR [rsp],0x30
  402b4a:	mov    rax,QWORD PTR [rbx+0xa0]
  402b51:	test   rax,rax
  402b54:	je     402b72 <rb_strcasecmp@plt+0x652>
  402b56:	xor    esi,esi
  402b58:	cmp    BYTE PTR [rsp],0x2a
  402b5c:	setne  sil
  402b60:	mov    edx,DWORD PTR [rbx+0x10]
  402b63:	mov    rcx,QWORD PTR [rbx+0xa8]
  402b6a:	mov    rdi,rsp
  402b6d:	vzeroupper 
  402b70:	call   rax
  402b72:	mov    rdi,rbx
  402b75:	vzeroupper 
  402b78:	call   4021f0 <free@plt>
  402b7d:	lea    rsp,[rbp-0x18]
  402b81:	pop    rbx
  402b82:	pop    r14
  402b84:	pop    r15
  402b86:	pop    rbp
  402b87:	ret    
  402b88:	lea    rsi,[rip+0x7682]        # 40a211 <rb_strcasecmp@plt+0x7cf1>
  402b8f:	mov    edi,0x43
  402b94:	xor    eax,eax
  402b96:	vzeroupper 
  402b99:	call   403150 <rb_strcasecmp@plt+0xc30>
  402b9e:	mov    edi,0x2
  402ba3:	call   4020e0 <exit@plt>
  402ba8:	lea    rsi,[rip+0x768e]        # 40a23d <rb_strcasecmp@plt+0x7d1d>
  402baf:	mov    edi,0x43
  402bb4:	xor    eax,eax
  402bb6:	vzeroupper 
  402bb9:	call   403150 <rb_strcasecmp@plt+0xc30>
  402bbe:	mov    edi,0x2
  402bc3:	call   4020e0 <exit@plt>
  402bc8:	nop    DWORD PTR [rax+rax*1+0x0]
  402bd0:	push   r15
  402bd2:	push   r14
  402bd4:	push   r13
  402bd6:	push   r12
  402bd8:	push   rbx
  402bd9:	mov    r14,rdx
  402bdc:	mov    r15,rsi
  402bdf:	mov    r13,rdi
  402be2:	mov    edi,0x1
  402be7:	mov    esi,0xb0
  402bec:	call   402440 <calloc@plt>
  402bf1:	test   rax,rax
  402bf4:	je     402c8c <rb_strcasecmp@plt+0x76c>
  402bfa:	mov    rbx,rax
  402bfd:	mov    r12,rax
  402c00:	add    r12,0x18
  402c04:	mov    rdi,r13
  402c07:	mov    rsi,r12
  402c0a:	call   402260 <rb_inet_pton_sock@plt>
  402c0f:	test   eax,eax
  402c11:	je     402c2c <rb_strcasecmp@plt+0x70c>
  402c13:	movzx  eax,WORD PTR [r12]
  402c18:	cmp    eax,0x2
  402c1b:	je     402c38 <rb_strcasecmp@plt+0x718>
  402c1d:	movzx  eax,ax
  402c20:	cmp    eax,0xa
  402c23:	jne    402c2c <rb_strcasecmp@plt+0x70c>
  402c25:	mov    eax,0x53
  402c2a:	jmp    402c3d <rb_strcasecmp@plt+0x71d>
  402c2c:	mov    rdi,rbx
  402c2f:	call   4021f0 <free@plt>
  402c34:	xor    ebx,ebx
  402c36:	jmp    402c7f <rb_strcasecmp@plt+0x75f>
  402c38:	mov    eax,0x52
  402c3d:	mov    DWORD PTR [rbx+0x10],eax
  402c40:	lea    rax,[rip+0x11299]        # 413ee0 <rb_strcasecmp@plt+0x119c0>
  402c47:	mov    rcx,QWORD PTR [rax]
  402c4a:	lea    rdx,[rcx+0x1]
  402c4e:	mov    QWORD PTR [rax],rdx
  402c51:	mov    QWORD PTR [rbx+0x98],rcx
  402c58:	mov    QWORD PTR [rbx+0xa0],r15
  402c5f:	mov    QWORD PTR [rbx+0xa8],r14
  402c66:	mov    QWORD PTR [rbx],rbx
  402c69:	lea    rax,[rip+0x30]        # 402ca0 <rb_strcasecmp@plt+0x780>
  402c70:	mov    QWORD PTR [rbx+0x8],rax
  402c74:	mov    rdi,r12
  402c77:	mov    rsi,rbx
  402c7a:	call   4044c0 <rb_strcasecmp@plt+0x1fa0>
  402c7f:	mov    rax,rbx
  402c82:	pop    rbx
  402c83:	pop    r12
  402c85:	pop    r13
  402c87:	pop    r14
  402c89:	pop    r15
  402c8b:	ret    
  402c8c:	call   402380 <rb_outofmemory@plt>
  402c91:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402c9b:	nop    DWORD PTR [rax+rax*1+0x0]
  402ca0:	push   rbx
  402ca1:	test   rdi,rdi
  402ca4:	je     402d09 <rb_strcasecmp@plt+0x7e9>
  402ca6:	mov    rbx,rdi
  402ca9:	test   rsi,rsi
  402cac:	je     402cdd <rb_strcasecmp@plt+0x7bd>
  402cae:	mov    edx,DWORD PTR [rbx+0x10]
  402cb1:	cmp    edx,0x53
  402cb4:	je     402cc8 <rb_strcasecmp@plt+0x7a8>
  402cb6:	cmp    edx,0x52
  402cb9:	jne    402d26 <rb_strcasecmp@plt+0x806>
  402cbb:	mov    eax,DWORD PTR [rbx+0x1c]
  402cbe:	cmp    eax,DWORD PTR [rsi+0xc]
  402cc1:	jne    402cdd <rb_strcasecmp@plt+0x7bd>
  402cc3:	mov    rdi,QWORD PTR [rsi]
  402cc6:	jmp    402cdf <rb_strcasecmp@plt+0x7bf>
  402cc8:	vmovdqu xmm0,XMMWORD PTR [rbx+0x20]
  402ccd:	vpcmpeqb xmm0,xmm0,XMMWORD PTR [rsi+0x10]
  402cd2:	vpmovmskb eax,xmm0
  402cd6:	cmp    eax,0xffff
  402cdb:	je     402cc3 <rb_strcasecmp@plt+0x7a3>
  402cdd:	xor    edi,edi
  402cdf:	mov    rax,QWORD PTR [rbx+0xa0]
  402ce6:	test   rax,rax
  402ce9:	je     402d00 <rb_strcasecmp@plt+0x7e0>
  402ceb:	xor    esi,esi
  402ced:	test   rdi,rdi
  402cf0:	setne  sil
  402cf4:	mov    edx,DWORD PTR [rbx+0x10]
  402cf7:	mov    rcx,QWORD PTR [rbx+0xa8]
  402cfe:	call   rax
  402d00:	mov    rdi,rbx
  402d03:	pop    rbx
  402d04:	jmp    4021f0 <free@plt>
  402d09:	lea    rsi,[rip+0x7560]        # 40a270 <rb_strcasecmp@plt+0x7d50>
  402d10:	mov    edi,0x43
  402d15:	xor    eax,eax
  402d17:	call   403150 <rb_strcasecmp@plt+0xc30>
  402d1c:	mov    edi,0x2
  402d21:	call   4020e0 <exit@plt>
  402d26:	lea    rsi,[rip+0x7575]        # 40a2a2 <rb_strcasecmp@plt+0x7d82>
  402d2d:	mov    edi,0x43
  402d32:	xor    eax,eax
  402d34:	call   403150 <rb_strcasecmp@plt+0xc30>
  402d39:	mov    edi,0x2
  402d3e:	call   4020e0 <exit@plt>
  402d43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  402d4d:	nop    DWORD PTR [rax]
  402d50:	vxorps xmm0,xmm0,xmm0
  402d54:	vmovups XMMWORD PTR [rdi+0xa0],xmm0
  402d5c:	ret    
  402d5d:	nop    DWORD PTR [rax]
  402d60:	push   r15
  402d62:	push   r14
  402d64:	push   rbx
  402d65:	mov    rbx,rsi
  402d68:	mov    r14,QWORD PTR [rsi+0x8]
  402d6c:	mov    rdi,r14
  402d6f:	call   402200 <strlen@plt>
  402d74:	lea    rdi,[rax+0x1]
  402d78:	call   402180 <malloc@plt>
  402d7d:	test   rax,rax
  402d80:	je     402e5b <rb_strcasecmp@plt+0x93b>
  402d86:	mov    r15,rax
  402d89:	mov    rdi,rax
  402d8c:	mov    rsi,r14
  402d8f:	call   402410 <strcpy@plt>
  402d94:	mov    rax,QWORD PTR [rbx+0x10]
  402d98:	mov    r14,QWORD PTR [rbx+0x18]
  402d9c:	movsx  edx,BYTE PTR [rax]
  402d9f:	lea    eax,[rdx-0x52]
  402da2:	cmp    eax,0x2
  402da5:	jb     402e3e <rb_strcasecmp@plt+0x91e>
  402dab:	xor    ebx,ebx
  402dad:	cmp    edx,0x34
  402db0:	je     402dc0 <rb_strcasecmp@plt+0x8a0>
  402db2:	cmp    edx,0x36
  402db5:	jne    402e60 <rb_strcasecmp@plt+0x940>
  402dbb:	mov    ebx,0x8
  402dc0:	mov    edi,0x1
  402dc5:	mov    esi,0xb0
  402dca:	call   402440 <calloc@plt>
  402dcf:	test   rax,rax
  402dd2:	je     402e5b <rb_strcasecmp@plt+0x93b>
  402dd8:	xor    ecx,ecx
  402dda:	test   ebx,ebx
  402ddc:	setne  cl
  402ddf:	lea    ecx,[rcx+rcx*1+0x34]
  402de3:	mov    esi,0x1
  402de8:	mov    edx,0x1c
  402ded:	cmove  edx,esi
  402df0:	mov    DWORD PTR [rax+0x10],ecx
  402df3:	lea    rcx,[rip+0x110e6]        # 413ee0 <rb_strcasecmp@plt+0x119c0>
  402dfa:	mov    rsi,QWORD PTR [rcx]
  402dfd:	lea    rdi,[rsi+0x1]
  402e01:	mov    QWORD PTR [rcx],rdi
  402e04:	mov    QWORD PTR [rax+0x98],rsi
  402e0b:	lea    rcx,[rip+0x8e]        # 402ea0 <rb_strcasecmp@plt+0x980>
  402e12:	mov    QWORD PTR [rax+0xa0],rcx
  402e19:	mov    QWORD PTR [rax+0xa8],r15
  402e20:	mov    QWORD PTR [rax],rax
  402e23:	lea    rcx,[rip+0xfffffffffffffc66]        # 402a90 <rb_strcasecmp@plt+0x570>
  402e2a:	mov    QWORD PTR [rax+0x8],rcx
  402e2e:	mov    rdi,r14
  402e31:	mov    rsi,rax
  402e34:	pop    rbx
  402e35:	pop    r14
  402e37:	pop    r15
  402e39:	jmp    4043f0 <rb_strcasecmp@plt+0x1ed0>
  402e3e:	lea    rsi,[rip+0x5b]        # 402ea0 <rb_strcasecmp@plt+0x980>
  402e45:	mov    rdi,r14
  402e48:	mov    rdx,r15
  402e4b:	call   402bd0 <rb_strcasecmp@plt+0x6b0>
  402e50:	test   rax,rax
  402e53:	je     402e7d <rb_strcasecmp@plt+0x95d>
  402e55:	pop    rbx
  402e56:	pop    r14
  402e58:	pop    r15
  402e5a:	ret    
  402e5b:	call   402380 <rb_outofmemory@plt>
  402e60:	lea    rsi,[rip+0x732a]        # 40a191 <rb_strcasecmp@plt+0x7c71>
  402e67:	mov    edi,0x43
  402e6c:	xor    eax,eax
  402e6e:	call   403150 <rb_strcasecmp@plt+0xc30>
  402e73:	mov    edi,0x2
  402e78:	call   4020e0 <exit@plt>
  402e7d:	lea    rsi,[rip+0x7457]        # 40a2db <rb_strcasecmp@plt+0x7dbb>
  402e84:	mov    edi,0x43
  402e89:	xor    eax,eax
  402e8b:	call   403150 <rb_strcasecmp@plt+0xc30>
  402e90:	mov    edi,0x2
  402e95:	call   4020e0 <exit@plt>
  402e9a:	nop    WORD PTR [rax+rax*1+0x0]
  402ea0:	push   rbx
  402ea1:	test   edx,edx
  402ea3:	je     402ef3 <rb_strcasecmp@plt+0x9d3>
  402ea5:	mov    rbx,rcx
  402ea8:	test   rcx,rcx
  402eab:	je     402ef3 <rb_strcasecmp@plt+0x9d3>
  402ead:	mov    ecx,edx
  402eaf:	mov    r8,rdi
  402eb2:	lea    rax,[rip+0xcfb7]        # 40fe70 <rb_strcasecmp@plt+0xd950>
  402eb9:	mov    rdi,QWORD PTR [rax]
  402ebc:	test   r8,r8
  402ebf:	je     402ed9 <rb_strcasecmp@plt+0x9b9>
  402ec1:	test   sil,sil
  402ec4:	je     402ed9 <rb_strcasecmp@plt+0x9b9>
  402ec6:	lea    rsi,[rip+0x7445]        # 40a312 <rb_strcasecmp@plt+0x7df2>
  402ecd:	xor    eax,eax
  402ecf:	mov    rdx,rbx
  402ed2:	call   402450 <rb_helper_write@plt>
  402ed7:	jmp    402eea <rb_strcasecmp@plt+0x9ca>
  402ed9:	lea    rsi,[rip+0x7426]        # 40a306 <rb_strcasecmp@plt+0x7de6>
  402ee0:	xor    eax,eax
  402ee2:	mov    rdx,rbx
  402ee5:	call   402450 <rb_helper_write@plt>
  402eea:	mov    rdi,rbx
  402eed:	pop    rbx
  402eee:	jmp    4021f0 <free@plt>
  402ef3:	lea    rsi,[rip+0x73e1]        # 40a2db <rb_strcasecmp@plt+0x7dbb>
  402efa:	mov    edi,0x43
  402eff:	xor    eax,eax
  402f01:	call   403150 <rb_strcasecmp@plt+0xc30>
  402f06:	mov    edi,0x2
  402f0b:	call   4020e0 <exit@plt>
  402f10:	push   rbp
  402f11:	push   r15
  402f13:	push   r14
  402f15:	push   r13
  402f17:	push   r12
  402f19:	push   rbx
  402f1a:	sub    rsp,0x278
  402f21:	mov    ebx,esi
  402f23:	mov    r14d,edi
  402f26:	lea    rax,[rip+0x11037]        # 413f64 <rb_strcasecmp@plt+0x11a44>
  402f2d:	mov    eax,DWORD PTR [rax]
  402f2f:	test   eax,eax
  402f31:	je     40303b <rb_strcasecmp@plt+0xb1b>
  402f37:	jle    402fdc <rb_strcasecmp@plt+0xabc>
  402f3d:	mov    DWORD PTR [rsp+0x8],ebx
  402f41:	mov    DWORD PTR [rsp+0xc],r14d
  402f46:	lea    rbx,[rip+0x11313]        # 414260 <rb_strcasecmp@plt+0x11d40>
  402f4d:	lea    r13,[rsp+0x10]
  402f52:	lea    r12,[rip+0x72b4]        # 40a20d <rb_strcasecmp@plt+0x7ced>
  402f59:	xor    r14d,r14d
  402f5c:	xor    eax,eax
  402f5e:	xchg   ax,ax
  402f60:	mov    r15,rax
  402f63:	mov    edx,0x35
  402f68:	mov    rdi,rbx
  402f6b:	mov    rsi,r13
  402f6e:	call   4023f0 <rb_inet_ntop_sock@plt>
  402f73:	cmp    BYTE PTR [rsp+0x10],0x0
  402f78:	je     403007 <rb_strcasecmp@plt+0xae7>
  402f7e:	mov    rdi,r13
  402f81:	call   402200 <strlen@plt>
  402f86:	mov    rbp,rax
  402f89:	lea    rdi,[rsp+r15*1]
  402f8d:	add    rdi,0x50
  402f91:	mov    esi,0x21c
  402f96:	sub    rsi,r15
  402f99:	xor    eax,eax
  402f9b:	mov    rdx,r12
  402f9e:	mov    rcx,r13
  402fa1:	call   402080 <snprintf@plt>
  402fa6:	lea    rax,[r15+rbp*1]
  402faa:	add    rax,0x1
  402fae:	add    r14,0x1
  402fb2:	lea    rcx,[rip+0x10fab]        # 413f64 <rb_strcasecmp@plt+0x11a44>
  402fb9:	movsxd rcx,DWORD PTR [rcx]
  402fbc:	sub    rbx,0xffffffffffffff80
  402fc0:	cmp    r14,rcx
  402fc3:	jl     402f60 <rb_strcasecmp@plt+0xa40>
  402fc5:	test   rax,rax
  402fc8:	mov    r14d,DWORD PTR [rsp+0xc]
  402fcd:	mov    ebx,DWORD PTR [rsp+0x8]
  402fd1:	je     402fdc <rb_strcasecmp@plt+0xabc>
  402fd3:	add    r15,rbp
  402fd6:	mov    BYTE PTR [rsp+r15*1+0x50],0x0
  402fdc:	movsx  esi,bl
  402fdf:	lea    rdx,[rip+0x805e]        # 40b044 <rb_strcasecmp@plt+0x8b24>
  402fe6:	lea    rcx,[rsp+0x50]
  402feb:	xor    eax,eax
  402fed:	mov    edi,r14d
  402ff0:	call   403230 <rb_strcasecmp@plt+0xd10>
  402ff5:	add    rsp,0x278
  402ffc:	pop    rbx
  402ffd:	pop    r12
  402fff:	pop    r13
  403001:	pop    r14
  403003:	pop    r15
  403005:	pop    rbp
  403006:	ret    
  403007:	lea    rsi,[rip+0x71d8]        # 40a1e6 <rb_strcasecmp@plt+0x7cc6>
  40300e:	mov    edi,0x43
  403013:	xor    eax,eax
  403015:	call   403150 <rb_strcasecmp@plt+0xc30>
  40301a:	movsx  esi,BYTE PTR [rsp+0x8]
  40301f:	lea    rdx,[rip+0x71d5]        # 40a1fb <rb_strcasecmp@plt+0x7cdb>
  403026:	xor    eax,eax
  403028:	mov    edi,DWORD PTR [rsp+0xc]
  40302c:	call   403300 <rb_strcasecmp@plt+0xde0>
  403031:	mov    edi,0x2
  403036:	call   4020e0 <exit@plt>
  40303b:	lea    rsi,[rip+0x7180]        # 40a1c2 <rb_strcasecmp@plt+0x7ca2>
  403042:	mov    edi,0x43
  403047:	xor    eax,eax
  403049:	call   403150 <rb_strcasecmp@plt+0xc30>
  40304e:	movsx  esi,bl
  403051:	lea    rdx,[rip+0x7180]        # 40a1d8 <rb_strcasecmp@plt+0x7cb8>
  403058:	xor    eax,eax
  40305a:	mov    edi,r14d
  40305d:	jmp    40302c <rb_strcasecmp@plt+0xb0c>
  40305f:	nop
  403060:	jmp    404330 <rb_strcasecmp@plt+0x1e10>
  403065:	nop    DWORD PTR [rax]
  403068:	nop    DWORD PTR [rax+rax*1+0x0]
  403070:	push   rbp
  403071:	push   r14
  403073:	push   rbx
  403074:	sub    rsp,0x2d0
  40307b:	mov    rbx,rsi
  40307e:	mov    r14d,edi
  403081:	test   al,al
  403083:	je     4030c4 <rb_strcasecmp@plt+0xba4>
  403085:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  40308b:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  403091:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  403097:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  4030a0:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  4030a9:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  4030b2:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  4030bb:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  4030c4:	mov    QWORD PTR [rsp+0x48],r9
  4030c9:	mov    QWORD PTR [rsp+0x40],r8
  4030ce:	mov    QWORD PTR [rsp+0x38],rcx
  4030d3:	mov    QWORD PTR [rsp+0x30],rdx
  4030d8:	lea    rax,[rsp+0x20]
  4030dd:	mov    QWORD PTR [rsp+0x10],rax
  4030e2:	lea    rax,[rsp+0x2f0]
  4030ea:	mov    QWORD PTR [rsp+0x8],rax
  4030ef:	movabs rax,0x3000000010
  4030f9:	mov    QWORD PTR [rsp],rax
  4030fd:	lea    rbp,[rsp+0xd0]
  403105:	mov    rcx,rsp
  403108:	mov    esi,0x200
  40310d:	mov    rdi,rbp
  403110:	mov    rdx,rbx
  403113:	call   402350 <vsnprintf@plt>
  403118:	lea    rax,[rip+0xcd51]        # 40fe70 <rb_strcasecmp@plt+0xd950>
  40311f:	mov    rdi,QWORD PTR [rax]
  403122:	lea    rsi,[rip+0x71f6]        # 40a31f <rb_strcasecmp@plt+0x7dff>
  403129:	xor    eax,eax
  40312b:	mov    edx,r14d
  40312e:	mov    rcx,rbp
  403131:	call   402450 <rb_helper_write@plt>
  403136:	add    rsp,0x2d0
  40313d:	pop    rbx
  40313e:	pop    r14
  403140:	pop    rbp
  403141:	ret    
  403142:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40314c:	nop    DWORD PTR [rax+0x0]
  403150:	push   rbp
  403151:	push   r14
  403153:	push   rbx
  403154:	sub    rsp,0x2d0
  40315b:	mov    rbx,rsi
  40315e:	mov    r14d,edi
  403161:	test   al,al
  403163:	je     4031a4 <rb_strcasecmp@plt+0xc84>
  403165:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  40316b:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  403171:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  403177:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  403180:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  403189:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  403192:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  40319b:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  4031a4:	mov    QWORD PTR [rsp+0x48],r9
  4031a9:	mov    QWORD PTR [rsp+0x40],r8
  4031ae:	mov    QWORD PTR [rsp+0x38],rcx
  4031b3:	mov    QWORD PTR [rsp+0x30],rdx
  4031b8:	lea    rax,[rsp+0x20]
  4031bd:	mov    QWORD PTR [rsp+0x10],rax
  4031c2:	lea    rax,[rsp+0x2f0]
  4031ca:	mov    QWORD PTR [rsp+0x8],rax
  4031cf:	movabs rax,0x3000000010
  4031d9:	mov    QWORD PTR [rsp],rax
  4031dd:	lea    rbp,[rsp+0xd0]
  4031e5:	mov    rcx,rsp
  4031e8:	mov    esi,0x200
  4031ed:	mov    rdi,rbp
  4031f0:	mov    rdx,rbx
  4031f3:	call   402350 <vsnprintf@plt>
  4031f8:	lea    rax,[rip+0xcc71]        # 40fe70 <rb_strcasecmp@plt+0xd950>
  4031ff:	mov    rdi,QWORD PTR [rax]
  403202:	lea    rsi,[rip+0x711f]        # 40a328 <rb_strcasecmp@plt+0x7e08>
  403209:	xor    eax,eax
  40320b:	mov    edx,r14d
  40320e:	mov    rcx,rbp
  403211:	call   402450 <rb_helper_write@plt>
  403216:	add    rsp,0x2d0
  40321d:	pop    rbx
  40321e:	pop    r14
  403220:	pop    rbp
  403221:	ret    
  403222:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40322c:	nop    DWORD PTR [rax+0x0]
  403230:	push   rbp
  403231:	push   r14
  403233:	push   rbx
  403234:	sub    rsp,0x2d0
  40323b:	mov    r14d,esi
  40323e:	mov    ebp,edi
  403240:	test   al,al
  403242:	je     403283 <rb_strcasecmp@plt+0xd63>
  403244:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  40324a:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  403250:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  403256:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  40325f:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  403268:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  403271:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  40327a:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  403283:	mov    QWORD PTR [rsp+0x48],r9
  403288:	mov    QWORD PTR [rsp+0x40],r8
  40328d:	mov    QWORD PTR [rsp+0x38],rcx
  403292:	lea    rax,[rsp+0x20]
  403297:	mov    QWORD PTR [rsp+0x10],rax
  40329c:	lea    rax,[rsp+0x2f0]
  4032a4:	mov    QWORD PTR [rsp+0x8],rax
  4032a9:	movabs rax,0x3000000018
  4032b3:	mov    QWORD PTR [rsp],rax
  4032b7:	lea    rbx,[rsp+0xd0]
  4032bf:	mov    rcx,rsp
  4032c2:	mov    esi,0x200
  4032c7:	mov    rdi,rbx
  4032ca:	call   402350 <vsnprintf@plt>
  4032cf:	lea    rax,[rip+0xcb9a]        # 40fe70 <rb_strcasecmp@plt+0xd950>
  4032d6:	mov    rdi,QWORD PTR [rax]
  4032d9:	lea    rsi,[rip+0x7051]        # 40a331 <rb_strcasecmp@plt+0x7e11>
  4032e0:	xor    eax,eax
  4032e2:	mov    edx,ebp
  4032e4:	mov    ecx,r14d
  4032e7:	mov    r8,rbx
  4032ea:	call   402450 <rb_helper_write@plt>
  4032ef:	add    rsp,0x2d0
  4032f6:	pop    rbx
  4032f7:	pop    r14
  4032f9:	pop    rbp
  4032fa:	ret    
  4032fb:	nop    DWORD PTR [rax+rax*1+0x0]
  403300:	push   rbp
  403301:	push   r14
  403303:	push   rbx
  403304:	sub    rsp,0x2d0
  40330b:	mov    r14d,esi
  40330e:	mov    ebp,edi
  403310:	test   al,al
  403312:	je     403353 <rb_strcasecmp@plt+0xe33>
  403314:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  40331a:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  403320:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  403326:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  40332f:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  403338:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  403341:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  40334a:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  403353:	mov    QWORD PTR [rsp+0x48],r9
  403358:	mov    QWORD PTR [rsp+0x40],r8
  40335d:	mov    QWORD PTR [rsp+0x38],rcx
  403362:	lea    rax,[rsp+0x20]
  403367:	mov    QWORD PTR [rsp+0x10],rax
  40336c:	lea    rax,[rsp+0x2f0]
  403374:	mov    QWORD PTR [rsp+0x8],rax
  403379:	movabs rax,0x3000000018
  403383:	mov    QWORD PTR [rsp],rax
  403387:	lea    rbx,[rsp+0xd0]
  40338f:	mov    rcx,rsp
  403392:	mov    esi,0x200
  403397:	mov    rdi,rbx
  40339a:	call   402350 <vsnprintf@plt>
  40339f:	lea    rax,[rip+0xcaca]        # 40fe70 <rb_strcasecmp@plt+0xd950>
  4033a6:	mov    rdi,QWORD PTR [rax]
  4033a9:	lea    rsi,[rip+0x6f8c]        # 40a33c <rb_strcasecmp@plt+0x7e1c>
  4033b0:	xor    eax,eax
  4033b2:	mov    edx,ebp
  4033b4:	mov    ecx,r14d
  4033b7:	mov    r8,rbx
  4033ba:	call   402450 <rb_helper_write@plt>
  4033bf:	add    rsp,0x2d0
  4033c6:	pop    rbx
  4033c7:	pop    r14
  4033c9:	pop    rbp
  4033ca:	ret    
  4033cb:	nop    DWORD PTR [rax+rax*1+0x0]
  4033d0:	mov    ecx,esi
  4033d2:	mov    edx,edi
  4033d4:	lea    rax,[rip+0xca95]        # 40fe70 <rb_strcasecmp@plt+0xd950>
  4033db:	mov    rdi,QWORD PTR [rax]
  4033de:	lea    rsi,[rip+0x6f62]        # 40a347 <rb_strcasecmp@plt+0x7e27>
  4033e5:	xor    eax,eax
  4033e7:	jmp    402450 <rb_helper_write@plt>
  4033ec:	nop    DWORD PTR [rax+0x0]
  4033f0:	push   rax
  4033f1:	lea    rdi,[rip+0x6f68]        # 40a360 <rb_strcasecmp@plt+0x7e40>
  4033f8:	lea    rsi,[rip+0x61]        # 403460 <rb_strcasecmp@plt+0xf40>
  4033ff:	call   402420 <rb_dictionary_create@plt>
  403404:	lea    rcx,[rip+0x10d1d]        # 414128 <rb_strcasecmp@plt+0x11c08>
  40340b:	mov    QWORD PTR [rcx],rax
  40340e:	lea    rdi,[rip+0x6f60]        # 40a375 <rb_strcasecmp@plt+0x7e55>
  403415:	lea    rsi,[rip+0x54]        # 403470 <rb_strcasecmp@plt+0xf50>
  40341c:	xor    edx,edx
  40341e:	mov    ecx,0x1
  403423:	call   402050 <rb_event_addish@plt>
  403428:	mov    QWORD PTR [rip+0x10ab9],rax        # 413ee8 <rb_strcasecmp@plt+0x119c8>
  40342f:	lea    rdi,[rip+0xc6e2]        # 40fb18 <rb_strcasecmp@plt+0xd5f8>
  403436:	call   4035a0 <rb_strcasecmp@plt+0x1080>
  40343b:	lea    rdi,[rip+0xc99e]        # 40fde0 <rb_strcasecmp@plt+0xd8c0>
  403442:	call   4035a0 <rb_strcasecmp@plt+0x1080>
  403447:	lea    rdi,[rip+0xc852]        # 40fca0 <rb_strcasecmp@plt+0xd780>
  40344e:	call   4035a0 <rb_strcasecmp@plt+0x1080>
  403453:	lea    rdi,[rip+0xc78e]        # 40fbe8 <rb_strcasecmp@plt+0xd6c8>
  40345a:	pop    rax
  40345b:	jmp    4035a0 <rb_strcasecmp@plt+0x1080>
  403460:	sub    esi,edi
  403462:	mov    eax,esi
  403464:	ret    
  403465:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40346f:	nop
  403470:	push   rbp
  403471:	push   r15
  403473:	push   r14
  403475:	push   r13
  403477:	push   r12
  403479:	push   rbx
  40347a:	sub    rsp,0x18
  40347e:	call   402280 <rb_current_time@plt>
  403483:	mov    r15,rax
  403486:	lea    r12,[rip+0x10c9b]        # 414128 <rb_strcasecmp@plt+0x11c08>
  40348d:	mov    rdi,QWORD PTR [r12]
  403491:	lea    rbx,[rsp+0x8]
  403496:	mov    rsi,rbx
  403499:	call   402240 <rb_dictionary_foreach_start@plt>
  40349e:	mov    rdi,QWORD PTR [r12]
  4034a2:	mov    rsi,rbx
  4034a5:	call   402140 <rb_dictionary_foreach_cur@plt>
  4034aa:	test   rax,rax
  4034ad:	je     403588 <rb_strcasecmp@plt+0x1068>
  4034b3:	mov    rbx,rax
  4034b6:	lea    r13,[rip+0x10c73]        # 414130 <rb_strcasecmp@plt+0x11c10>
  4034bd:	lea    r14,[rsp+0x8]
  4034c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4034cc:	nop    DWORD PTR [rax+0x0]
  4034d0:	mov    eax,DWORD PTR [rbx+0x1cc]
  4034d6:	add    eax,0x1
  4034d9:	mov    DWORD PTR [rbx+0x1cc],eax
  4034df:	mov    rbp,QWORD PTR [r13+0x0]
  4034e3:	test   rbp,rbp
  4034e6:	je     403535 <rb_strcasecmp@plt+0x1015>
  4034e8:	nop    DWORD PTR [rax+rax*1+0x0]
  4034f0:	mov    rax,QWORD PTR [rbp+0x0]
  4034f4:	mov    ecx,DWORD PTR [rax+0x18]
  4034f7:	mov    rdx,QWORD PTR [rbx+0x1d0]
  4034fe:	shl    rcx,0x5
  403502:	cmp    DWORD PTR [rdx+rcx*1+0x18],0x1
  403507:	jne    403526 <rb_strcasecmp@plt+0x1006>
  403509:	mov    rcx,QWORD PTR [rdx+rcx*1+0x8]
  40350e:	cmp    rcx,r15
  403511:	jge    403526 <rb_strcasecmp@plt+0x1006>
  403513:	test   rcx,rcx
  403516:	jle    403526 <rb_strcasecmp@plt+0x1006>
  403518:	mov    rax,QWORD PTR [rax+0x50]
  40351c:	test   rax,rax
  40351f:	je     403526 <rb_strcasecmp@plt+0x1006>
  403521:	mov    rdi,rbx
  403524:	call   rax
  403526:	mov    rbp,QWORD PTR [rbp+0x10]
  40352a:	test   rbp,rbp
  40352d:	jne    4034f0 <rb_strcasecmp@plt+0xfd0>
  40352f:	mov    eax,DWORD PTR [rbx+0x1cc]
  403535:	add    eax,0xffffffff
  403538:	mov    DWORD PTR [rbx+0x1cc],eax
  40353e:	jne    403564 <rb_strcasecmp@plt+0x1044>
  403540:	mov    rdi,QWORD PTR [r12]
  403544:	mov    esi,DWORD PTR [rbx]
  403546:	call   402290 <rb_dictionary_delete@plt>
  40354b:	mov    rdi,QWORD PTR [rbx+0x1d0]
  403552:	test   rdi,rdi
  403555:	je     40355c <rb_strcasecmp@plt+0x103c>
  403557:	call   4021f0 <free@plt>
  40355c:	mov    rdi,rbx
  40355f:	call   4021f0 <free@plt>
  403564:	mov    rdi,QWORD PTR [r12]
  403568:	mov    rsi,r14
  40356b:	call   4021d0 <rb_dictionary_foreach_next@plt>
  403570:	mov    rdi,QWORD PTR [r12]
  403574:	mov    rsi,r14
  403577:	call   402140 <rb_dictionary_foreach_cur@plt>
  40357c:	mov    rbx,rax
  40357f:	test   rax,rax
  403582:	jne    4034d0 <rb_strcasecmp@plt+0xfb0>
  403588:	add    rsp,0x18
  40358c:	pop    rbx
  40358d:	pop    r12
  40358f:	pop    r13
  403591:	pop    r14
  403593:	pop    r15
  403595:	pop    rbp
  403596:	ret    
  403597:	nop    WORD PTR [rax+rax*1+0x0]
  4035a0:	push   r15
  4035a2:	push   r14
  4035a4:	push   rbx
  4035a5:	mov    r14,rdi
  4035a8:	cmp    QWORD PTR [rip+0x10950],0x0        # 413f00 <rb_strcasecmp@plt+0x119e0>
  4035b0:	je     4035e2 <rb_strcasecmp@plt+0x10c2>
  4035b2:	mov    rdi,QWORD PTR [rip+0x10937]        # 413ef0 <rb_strcasecmp@plt+0x119d0>
  4035b9:	mov    eax,DWORD PTR [rdi]
  4035bb:	mov    DWORD PTR [r14+0x18],eax
  4035bf:	test   rdi,rdi
  4035c2:	je     4036f0 <rb_strcasecmp@plt+0x11d0>
  4035c8:	mov    rdx,QWORD PTR [rdi+0x8]
  4035cc:	mov    rcx,QWORD PTR [rdi+0x10]
  4035d0:	lea    rax,[rdi+0x8]
  4035d4:	test   rcx,rcx
  4035d7:	je     40360e <rb_strcasecmp@plt+0x10ee>
  4035d9:	mov    QWORD PTR [rcx+0x8],rdx
  4035dd:	mov    rdx,QWORD PTR [rax]
  4035e0:	jmp    403615 <rb_strcasecmp@plt+0x10f5>
  4035e2:	mov    eax,DWORD PTR [rip+0x10920]        # 413f08 <rb_strcasecmp@plt+0x119e8>
  4035e8:	cmp    eax,0x20
  4035eb:	je     4035f6 <rb_strcasecmp@plt+0x10d6>
  4035ed:	cmp    eax,0xffffffff
  4035f0:	jne    4036d8 <rb_strcasecmp@plt+0x11b8>
  4035f6:	lea    rsi,[rip+0x6dda]        # 40a3d7 <rb_strcasecmp@plt+0x7eb7>
  4035fd:	mov    edi,0x57
  403602:	xor    eax,eax
  403604:	pop    rbx
  403605:	pop    r14
  403607:	pop    r15
  403609:	jmp    403150 <rb_strcasecmp@plt+0xc30>
  40360e:	mov    QWORD PTR [rip+0x108e3],rdx        # 413ef8 <rb_strcasecmp@plt+0x119d8>
  403615:	test   rdx,rdx
  403618:	lea    rdx,[rdx+0x10]
  40361c:	lea    rsi,[rip+0x108cd]        # 413ef0 <rb_strcasecmp@plt+0x119d0>
  403623:	cmove  rdx,rsi
  403627:	cmove  rdi,rcx
  40362b:	mov    QWORD PTR [rdx],rcx
  40362e:	vxorps xmm0,xmm0,xmm0
  403632:	vmovups XMMWORD PTR [rax],xmm0
  403636:	add    QWORD PTR [rip+0x108c2],0xffffffffffffffff        # 413f00 <rb_strcasecmp@plt+0x119e0>
  40363e:	call   4022c0 <rb_free_rb_dlink_node@plt>
  403643:	mov    rbx,QWORD PTR [r14+0x70]
  403647:	test   rbx,rbx
  40364a:	je     403678 <rb_strcasecmp@plt+0x1158>
  40364c:	mov    rsi,QWORD PTR [rbx]
  40364f:	test   rsi,rsi
  403652:	je     403678 <rb_strcasecmp@plt+0x1158>
  403654:	lea    r15,[rip+0x10ac5]        # 414120 <rb_strcasecmp@plt+0x11c00>
  40365b:	nop    DWORD PTR [rax+rax*1+0x0]
  403660:	mov    rdi,QWORD PTR [r15]
  403663:	mov    rdx,rbx
  403666:	call   4023a0 <rb_dictionary_add@plt>
  40366b:	mov    rsi,QWORD PTR [rbx+0x18]
  40366f:	add    rbx,0x18
  403673:	test   rsi,rsi
  403676:	jne    403660 <rb_strcasecmp@plt+0x1140>
  403678:	movzx  eax,BYTE PTR [r14+0x60]
  40367d:	test   rax,rax
  403680:	je     403691 <rb_strcasecmp@plt+0x1171>
  403682:	mov    rcx,QWORD PTR [r14+0x68]
  403686:	lea    rdx,[rip+0xb413]        # 40eaa0 <rb_strcasecmp@plt+0xc580>
  40368d:	mov    QWORD PTR [rdx+rax*8],rcx
  403691:	mov    rax,QWORD PTR [r14+0x30]
  403695:	test   rax,rax
  403698:	je     40369c <rb_strcasecmp@plt+0x117c>
  40369a:	call   rax
  40369c:	mov    QWORD PTR [r14],r14
  40369f:	mov    QWORD PTR [r14+0x8],0x0
  4036a7:	lea    rax,[rip+0x10a82]        # 414130 <rb_strcasecmp@plt+0x11c10>
  4036ae:	mov    rcx,QWORD PTR [rax]
  4036b1:	mov    QWORD PTR [r14+0x10],rcx
  4036b5:	test   rcx,rcx
  4036b8:	je     4036c3 <rb_strcasecmp@plt+0x11a3>
  4036ba:	add    rcx,0x8
  4036be:	mov    QWORD PTR [rcx],r14
  4036c1:	jmp    4036ca <rb_strcasecmp@plt+0x11aa>
  4036c3:	cmp    QWORD PTR [rax+0x8],0x0
  4036c8:	je     4036ea <rb_strcasecmp@plt+0x11ca>
  4036ca:	mov    QWORD PTR [rax],r14
  4036cd:	add    QWORD PTR [rax+0x10],0x1
  4036d2:	pop    rbx
  4036d3:	pop    r14
  4036d5:	pop    r15
  4036d7:	ret    
  4036d8:	lea    ecx,[rax+0x1]
  4036db:	mov    DWORD PTR [rip+0x10827],ecx        # 413f08 <rb_strcasecmp@plt+0x119e8>
  4036e1:	mov    DWORD PTR [r14+0x18],eax
  4036e5:	jmp    403643 <rb_strcasecmp@plt+0x1123>
  4036ea:	lea    rcx,[rax+0x8]
  4036ee:	jmp    4036be <rb_strcasecmp@plt+0x119e>
  4036f0:	lea    rdi,[rip+0x6e06]        # 40a4fd <rb_strcasecmp@plt+0x7fdd>
  4036f7:	lea    rsi,[rip+0x6e09]        # 40a507 <rb_strcasecmp@plt+0x7fe7>
  4036fe:	lea    rcx,[rip+0x6e1e]        # 40a523 <rb_strcasecmp@plt+0x8003>
  403705:	mov    edx,0xeb
  40370a:	call   4020f0 <__assert_fail@plt>
  40370f:	nop
  403710:	push   r15
  403712:	push   r14
  403714:	push   r13
  403716:	push   r12
  403718:	push   rbx
  403719:	sub    rsp,0x10
  40371d:	lea    r13,[rip+0x10a04]        # 414128 <rb_strcasecmp@plt+0x11c08>
  403724:	mov    rdi,QWORD PTR [r13+0x0]
  403728:	mov    rbx,rsp
  40372b:	mov    rsi,rbx
  40372e:	call   402240 <rb_dictionary_foreach_start@plt>
  403733:	mov    rdi,QWORD PTR [r13+0x0]
  403737:	mov    rsi,rbx
  40373a:	call   402140 <rb_dictionary_foreach_cur@plt>
  40373f:	test   rax,rax
  403742:	je     4037c9 <rb_strcasecmp@plt+0x12a9>
  403748:	mov    rbx,rax
  40374b:	lea    r14,[rip+0x6c3a]        # 40a38c <rb_strcasecmp@plt+0x7e6c>
  403752:	lea    r15,[rip+0x6c3b]        # 40a394 <rb_strcasecmp@plt+0x7e74>
  403759:	mov    r12,rsp
  40375c:	nop    DWORD PTR [rax+0x0]
  403760:	add    DWORD PTR [rbx+0x1cc],0x1
  403767:	mov    esi,0xffffffff
  40376c:	xor    eax,eax
  40376e:	mov    rdi,rbx
  403771:	mov    rdx,r14
  403774:	mov    rcx,r15
  403777:	call   403860 <rb_strcasecmp@plt+0x1340>
  40377c:	add    DWORD PTR [rbx+0x1cc],0xffffffff
  403783:	jne    4037a9 <rb_strcasecmp@plt+0x1289>
  403785:	mov    rdi,QWORD PTR [r13+0x0]
  403789:	mov    esi,DWORD PTR [rbx]
  40378b:	call   402290 <rb_dictionary_delete@plt>
  403790:	mov    rdi,QWORD PTR [rbx+0x1d0]
  403797:	test   rdi,rdi
  40379a:	je     4037a1 <rb_strcasecmp@plt+0x1281>
  40379c:	call   4021f0 <free@plt>
  4037a1:	mov    rdi,rbx
  4037a4:	call   4021f0 <free@plt>
  4037a9:	mov    rdi,QWORD PTR [r13+0x0]
  4037ad:	mov    rsi,r12
  4037b0:	call   4021d0 <rb_dictionary_foreach_next@plt>
  4037b5:	mov    rdi,QWORD PTR [r13+0x0]
  4037b9:	mov    rsi,r12
  4037bc:	call   402140 <rb_dictionary_foreach_cur@plt>
  4037c1:	mov    rbx,rax
  4037c4:	test   rax,rax
  4037c7:	jne    403760 <rb_strcasecmp@plt+0x1240>
  4037c9:	lea    r14,[rip+0x10960]        # 414130 <rb_strcasecmp@plt+0x11c10>
  4037d0:	mov    rbx,QWORD PTR [r14]
  4037d3:	test   rbx,rbx
  4037d6:	je     403837 <rb_strcasecmp@plt+0x1317>
  4037d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4037e0:	mov    rax,QWORD PTR [rbx]
  4037e3:	mov    r15,QWORD PTR [rbx+0x10]
  4037e7:	mov    rax,QWORD PTR [rax+0x38]
  4037eb:	test   rax,rax
  4037ee:	je     4037f2 <rb_strcasecmp@plt+0x12d2>
  4037f0:	call   rax
  4037f2:	mov    rcx,QWORD PTR [rbx+0x8]
  4037f6:	mov    rax,QWORD PTR [rbx+0x10]
  4037fa:	add    rbx,0x8
  4037fe:	test   rax,rax
  403801:	je     403810 <rb_strcasecmp@plt+0x12f0>
  403803:	mov    QWORD PTR [rax+0x8],rcx
  403807:	mov    rcx,QWORD PTR [rbx]
  40380a:	jmp    403814 <rb_strcasecmp@plt+0x12f4>
  40380c:	nop    DWORD PTR [rax+0x0]
  403810:	mov    QWORD PTR [r14+0x8],rcx
  403814:	test   rcx,rcx
  403817:	lea    rcx,[rcx+0x10]
  40381b:	cmove  rcx,r14
  40381f:	mov    QWORD PTR [rcx],rax
  403822:	vxorps xmm0,xmm0,xmm0
  403826:	vmovups XMMWORD PTR [rbx],xmm0
  40382a:	add    QWORD PTR [r14+0x10],0xffffffffffffffff
  40382f:	mov    rbx,r15
  403832:	test   r15,r15
  403835:	jne    4037e0 <rb_strcasecmp@plt+0x12c0>
  403837:	mov    rdi,QWORD PTR [r13+0x0]
  40383b:	xor    esi,esi
  40383d:	xor    edx,edx
  40383f:	call   402310 <rb_dictionary_destroy@plt>
  403844:	mov    rdi,QWORD PTR [rip+0x1069d]        # 413ee8 <rb_strcasecmp@plt+0x119c8>
  40384b:	call   4020a0 <rb_event_delete@plt>
  403850:	add    rsp,0x10
  403854:	pop    rbx
  403855:	pop    r12
  403857:	pop    r13
  403859:	pop    r14
  40385b:	pop    r15
  40385d:	ret    
  40385e:	xchg   ax,ax
  403860:	push   rbp
  403861:	push   r15
  403863:	push   r14
  403865:	push   r12
  403867:	push   rbx
  403868:	sub    rsp,0x2d0
  40386f:	mov    r15,rdx
  403872:	mov    ebp,esi
  403874:	mov    rbx,rdi
  403877:	test   al,al
  403879:	je     4038ba <rb_strcasecmp@plt+0x139a>
  40387b:	vmovaps XMMWORD PTR [rsp+0x50],xmm0
  403881:	vmovaps XMMWORD PTR [rsp+0x60],xmm1
  403887:	vmovaps XMMWORD PTR [rsp+0x70],xmm2
  40388d:	vmovaps XMMWORD PTR [rsp+0x80],xmm3
  403896:	vmovaps XMMWORD PTR [rsp+0x90],xmm4
  40389f:	vmovaps XMMWORD PTR [rsp+0xa0],xmm5
  4038a8:	vmovaps XMMWORD PTR [rsp+0xb0],xmm6
  4038b1:	vmovaps XMMWORD PTR [rsp+0xc0],xmm7
  4038ba:	mov    QWORD PTR [rsp+0x48],r9
  4038bf:	mov    QWORD PTR [rsp+0x40],r8
  4038c4:	lea    rax,[rsp+0x20]
  4038c9:	mov    QWORD PTR [rsp+0x10],rax
  4038ce:	lea    rax,[rsp+0x300]
  4038d6:	mov    QWORD PTR [rsp+0x8],rax
  4038db:	movabs rax,0x3000000020
  4038e5:	mov    QWORD PTR [rsp],rax
  4038e9:	lea    r14,[rsp+0xd0]
  4038f1:	mov    rax,rsp
  4038f4:	mov    esi,0x200
  4038f9:	mov    rdi,r14
  4038fc:	mov    rdx,rcx
  4038ff:	mov    rcx,rax
  403902:	call   402350 <vsnprintf@plt>
  403907:	lea    rax,[rip+0xc562]        # 40fe70 <rb_strcasecmp@plt+0xd950>
  40390e:	mov    rdi,QWORD PTR [rax]
  403911:	mov    edx,DWORD PTR [rbx]
  403913:	cmp    ebp,0xffffffff
  403916:	je     403988 <rb_strcasecmp@plt+0x1468>
  403918:	mov    rax,QWORD PTR [rbx+0x1d0]
  40391f:	mov    r12d,ebp
  403922:	shl    r12,0x5
  403926:	mov    rax,QWORD PTR [rax+r12*1]
  40392a:	movsx  ecx,BYTE PTR [rax+0x28]
  40392e:	lea    r8,[rbx+0x1b8]
  403935:	lea    r9,[rbx+0x178]
  40393c:	test   r15,r15
  40393f:	lea    rbp,[rip+0x69ca]        # 40a310 <rb_strcasecmp@plt+0x7df0>
  403946:	cmovne rbp,r15
  40394a:	lea    rsi,[rip+0x6ab4]        # 40a405 <rb_strcasecmp@plt+0x7ee5>
  403951:	mov    eax,0x0
  403956:	push   r14
  403958:	push   rbp
  403959:	call   402450 <rb_helper_write@plt>
  40395e:	add    rsp,0x10
  403962:	mov    rax,QWORD PTR [rbx+0x1d0]
  403969:	mov    DWORD PTR [rax+r12*1+0x18],0x2
  403972:	add    DWORD PTR [rbx+0x1c8],0xffffffff
  403979:	cmp    BYTE PTR [rbx+0x1c4],0x0
  403980:	jne    403a22 <rb_strcasecmp@plt+0x1502>
  403986:	jmp    4039ca <rb_strcasecmp@plt+0x14aa>
  403988:	lea    r8,[rbx+0x1b8]
  40398f:	lea    r9,[rbx+0x178]
  403996:	test   r15,r15
  403999:	lea    rbp,[rip+0x6970]        # 40a310 <rb_strcasecmp@plt+0x7df0>
  4039a0:	cmovne rbp,r15
  4039a4:	lea    rsi,[rip+0x6a5a]        # 40a405 <rb_strcasecmp@plt+0x7ee5>
  4039ab:	mov    ecx,0x2a
  4039b0:	mov    eax,0x0
  4039b5:	push   r14
  4039b7:	push   rbp
  4039b8:	call   402450 <rb_helper_write@plt>
  4039bd:	add    rsp,0x10
  4039c1:	cmp    BYTE PTR [rbx+0x1c4],0x0
  4039c8:	jne    403a22 <rb_strcasecmp@plt+0x1502>
  4039ca:	mov    BYTE PTR [rbx+0x1c4],0x1
  4039d1:	cmp    DWORD PTR [rbx+0x1c8],0x0
  4039d8:	je     403a22 <rb_strcasecmp@plt+0x1502>
  4039da:	lea    rax,[rip+0x1074f]        # 414130 <rb_strcasecmp@plt+0x11c10>
  4039e1:	mov    rbp,QWORD PTR [rax]
  4039e4:	test   rbp,rbp
  4039e7:	jne    4039f9 <rb_strcasecmp@plt+0x14d9>
  4039e9:	jmp    403a22 <rb_strcasecmp@plt+0x1502>
  4039eb:	nop    DWORD PTR [rax+rax*1+0x0]
  4039f0:	mov    rbp,QWORD PTR [rbp+0x10]
  4039f4:	test   rbp,rbp
  4039f7:	je     403a22 <rb_strcasecmp@plt+0x1502>
  4039f9:	mov    rcx,QWORD PTR [rbp+0x0]
  4039fd:	mov    rax,QWORD PTR [rcx+0x48]
  403a01:	test   rax,rax
  403a04:	je     4039f0 <rb_strcasecmp@plt+0x14d0>
  403a06:	mov    ecx,DWORD PTR [rcx+0x18]
  403a09:	mov    rdx,QWORD PTR [rbx+0x1d0]
  403a10:	shl    rcx,0x5
  403a14:	cmp    DWORD PTR [rdx+rcx*1+0x18],0x1
  403a19:	jne    4039f0 <rb_strcasecmp@plt+0x14d0>
  403a1b:	mov    rdi,rbx
  403a1e:	call   rax
  403a20:	jmp    4039f0 <rb_strcasecmp@plt+0x14d0>
  403a22:	add    rsp,0x2d0
  403a29:	pop    rbx
  403a2a:	pop    r12
  403a2c:	pop    r14
  403a2e:	pop    r15
  403a30:	pop    rbp
  403a31:	ret    
  403a32:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a3c:	nop    DWORD PTR [rax+0x0]
  403a40:	push   r15
  403a42:	push   r14
  403a44:	push   rbx
  403a45:	mov    r14,rdi
  403a48:	mov    rbx,QWORD PTR [rdi+0x70]
  403a4c:	test   rbx,rbx
  403a4f:	je     403a84 <rb_strcasecmp@plt+0x1564>
  403a51:	mov    rsi,QWORD PTR [rbx]
  403a54:	test   rsi,rsi
  403a57:	je     403a84 <rb_strcasecmp@plt+0x1564>
  403a59:	add    rbx,0x18
  403a5d:	lea    r15,[rip+0x106bc]        # 414120 <rb_strcasecmp@plt+0x11c00>
  403a64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403a6e:	xchg   ax,ax
  403a70:	mov    rdi,QWORD PTR [r15]
  403a73:	call   402290 <rb_dictionary_delete@plt>
  403a78:	mov    rsi,QWORD PTR [rbx]
  403a7b:	add    rbx,0x18
  403a7f:	test   rsi,rsi
  403a82:	jne    403a70 <rb_strcasecmp@plt+0x1550>
  403a84:	movzx  eax,BYTE PTR [r14+0x60]
  403a89:	test   rax,rax
  403a8c:	je     403a9d <rb_strcasecmp@plt+0x157d>
  403a8e:	lea    rcx,[rip+0xb00b]        # 40eaa0 <rb_strcasecmp@plt+0xc580>
  403a95:	mov    QWORD PTR [rcx+rax*8],0x0
  403a9d:	mov    rax,QWORD PTR [r14+0x38]
  403aa1:	test   rax,rax
  403aa4:	je     403aa8 <rb_strcasecmp@plt+0x1588>
  403aa6:	call   rax
  403aa8:	mov    rdx,QWORD PTR [r14+0x8]
  403aac:	mov    rcx,QWORD PTR [r14+0x10]
  403ab0:	lea    rax,[r14+0x8]
  403ab4:	test   rcx,rcx
  403ab7:	je     403ac2 <rb_strcasecmp@plt+0x15a2>
  403ab9:	mov    QWORD PTR [rcx+0x8],rdx
  403abd:	mov    rdx,QWORD PTR [rax]
  403ac0:	jmp    403acd <rb_strcasecmp@plt+0x15ad>
  403ac2:	lea    rsi,[rip+0x10667]        # 414130 <rb_strcasecmp@plt+0x11c10>
  403ac9:	mov    QWORD PTR [rsi+0x8],rdx
  403acd:	test   rdx,rdx
  403ad0:	lea    rdx,[rdx+0x10]
  403ad4:	lea    rsi,[rip+0x10655]        # 414130 <rb_strcasecmp@plt+0x11c10>
  403adb:	cmove  rdx,rsi
  403adf:	mov    QWORD PTR [rdx],rcx
  403ae2:	vxorps xmm0,xmm0,xmm0
  403ae6:	vmovups XMMWORD PTR [rax],xmm0
  403aea:	add    QWORD PTR [rsi+0x10],0xffffffffffffffff
  403aef:	mov    ebx,DWORD PTR [r14+0x18]
  403af3:	call   4024b0 <rb_make_rb_dlink_node@plt>
  403af8:	test   rbx,rbx
  403afb:	je     403b4e <rb_strcasecmp@plt+0x162e>
  403afd:	test   rax,rax
  403b00:	je     403b6d <rb_strcasecmp@plt+0x164d>
  403b02:	mov    QWORD PTR [rax],rbx
  403b05:	mov    QWORD PTR [rax+0x8],0x0
  403b0d:	mov    rcx,QWORD PTR [rip+0x103dc]        # 413ef0 <rb_strcasecmp@plt+0x119d0>
  403b14:	mov    QWORD PTR [rax+0x10],rcx
  403b18:	test   rcx,rcx
  403b1b:	je     403b26 <rb_strcasecmp@plt+0x1606>
  403b1d:	add    rcx,0x8
  403b21:	mov    QWORD PTR [rcx],rax
  403b24:	jmp    403b30 <rb_strcasecmp@plt+0x1610>
  403b26:	cmp    QWORD PTR [rip+0x103ca],0x0        # 413ef8 <rb_strcasecmp@plt+0x119d8>
  403b2e:	je     403b45 <rb_strcasecmp@plt+0x1625>
  403b30:	mov    QWORD PTR [rip+0x103b9],rax        # 413ef0 <rb_strcasecmp@plt+0x119d0>
  403b37:	add    QWORD PTR [rip+0x103c1],0x1        # 413f00 <rb_strcasecmp@plt+0x119e0>
  403b3f:	pop    rbx
  403b40:	pop    r14
  403b42:	pop    r15
  403b44:	ret    
  403b45:	lea    rcx,[rip+0x103ac]        # 413ef8 <rb_strcasecmp@plt+0x119d8>
  403b4c:	jmp    403b21 <rb_strcasecmp@plt+0x1601>
  403b4e:	lea    rdi,[rip+0x6a04]        # 40a559 <rb_strcasecmp@plt+0x8039>
  403b55:	lea    rsi,[rip+0x69ab]        # 40a507 <rb_strcasecmp@plt+0x7fe7>
  403b5c:	lea    rcx,[rip+0x6a03]        # 40a566 <rb_strcasecmp@plt+0x8046>
  403b63:	mov    edx,0x8f
  403b68:	call   4020f0 <__assert_fail@plt>
  403b6d:	lea    rdi,[rip+0x6989]        # 40a4fd <rb_strcasecmp@plt+0x7fdd>
  403b74:	lea    rsi,[rip+0x698c]        # 40a507 <rb_strcasecmp@plt+0x7fe7>
  403b7b:	lea    rcx,[rip+0x69e4]        # 40a566 <rb_strcasecmp@plt+0x8046>
  403b82:	mov    edx,0x90
  403b87:	call   4020f0 <__assert_fail@plt>
  403b8c:	nop    DWORD PTR [rax+0x0]
  403b90:	push   rbx
  403b91:	mov    rbx,rdi
  403b94:	lea    rax,[rip+0x1058d]        # 414128 <rb_strcasecmp@plt+0x11c08>
  403b9b:	mov    rdi,QWORD PTR [rax]
  403b9e:	mov    esi,DWORD PTR [rbx]
  403ba0:	call   402290 <rb_dictionary_delete@plt>
  403ba5:	mov    rdi,QWORD PTR [rbx+0x1d0]
  403bac:	test   rdi,rdi
  403baf:	je     403bb6 <rb_strcasecmp@plt+0x1696>
  403bb1:	call   4021f0 <free@plt>
  403bb6:	mov    rdi,rbx
  403bb9:	pop    rbx
  403bba:	jmp    4021f0 <free@plt>
  403bbf:	nop
  403bc0:	push   r14
  403bc2:	push   rbx
  403bc3:	push   rax
  403bc4:	cmp    BYTE PTR [rdi+0x1c4],0x0
  403bcb:	jne    403c31 <rb_strcasecmp@plt+0x1711>
  403bcd:	mov    r14,rdi
  403bd0:	mov    BYTE PTR [rdi+0x1c4],0x1
  403bd7:	cmp    DWORD PTR [rdi+0x1c8],0x0
  403bde:	je     403c31 <rb_strcasecmp@plt+0x1711>
  403be0:	lea    rax,[rip+0x10549]        # 414130 <rb_strcasecmp@plt+0x11c10>
  403be7:	mov    rbx,QWORD PTR [rax]
  403bea:	test   rbx,rbx
  403bed:	jne    403c09 <rb_strcasecmp@plt+0x16e9>
  403bef:	jmp    403c31 <rb_strcasecmp@plt+0x1711>
  403bf1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403bfb:	nop    DWORD PTR [rax+rax*1+0x0]
  403c00:	mov    rbx,QWORD PTR [rbx+0x10]
  403c04:	test   rbx,rbx
  403c07:	je     403c31 <rb_strcasecmp@plt+0x1711>
  403c09:	mov    rcx,QWORD PTR [rbx]
  403c0c:	mov    rax,QWORD PTR [rcx+0x48]
  403c10:	test   rax,rax
  403c13:	je     403c00 <rb_strcasecmp@plt+0x16e0>
  403c15:	mov    ecx,DWORD PTR [rcx+0x18]
  403c18:	mov    rdx,QWORD PTR [r14+0x1d0]
  403c1f:	shl    rcx,0x5
  403c23:	cmp    DWORD PTR [rdx+rcx*1+0x18],0x1
  403c28:	jne    403c00 <rb_strcasecmp@plt+0x16e0>
  403c2a:	mov    rdi,r14
  403c2d:	call   rax
  403c2f:	jmp    403c00 <rb_strcasecmp@plt+0x16e0>
  403c31:	add    rsp,0x8
  403c35:	pop    rbx
  403c36:	pop    r14
  403c38:	ret    
  403c39:	nop    DWORD PTR [rax+0x0]
  403c40:	push   rbp
  403c41:	push   r14
  403c43:	push   rbx
  403c44:	mov    r14d,esi
  403c47:	mov    rbx,rdi
  403c4a:	mov    rax,QWORD PTR [rdi+0x1d0]
  403c51:	mov    ecx,esi
  403c53:	shl    rcx,0x5
  403c57:	mov    DWORD PTR [rax+rcx*1+0x18],0x2
  403c5f:	add    DWORD PTR [rdi+0x1c8],0xffffffff
  403c66:	jne    403c71 <rb_strcasecmp@plt+0x1751>
  403c68:	cmp    BYTE PTR [rbx+0x1c3],0x0
  403c6f:	je     403cc9 <rb_strcasecmp@plt+0x17a9>
  403c71:	lea    rax,[rip+0x104b8]        # 414130 <rb_strcasecmp@plt+0x11c10>
  403c78:	mov    rbp,QWORD PTR [rax]
  403c7b:	test   rbp,rbp
  403c7e:	jne    403c9d <rb_strcasecmp@plt+0x177d>
  403c80:	jmp    403d52 <rb_strcasecmp@plt+0x1832>
  403c85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c8f:	nop
  403c90:	mov    rbp,QWORD PTR [rbp+0x10]
  403c94:	test   rbp,rbp
  403c97:	je     403d52 <rb_strcasecmp@plt+0x1832>
  403c9d:	mov    rcx,QWORD PTR [rbp+0x0]
  403ca1:	mov    rax,QWORD PTR [rcx+0x58]
  403ca5:	test   rax,rax
  403ca8:	je     403c90 <rb_strcasecmp@plt+0x1770>
  403caa:	mov    ecx,DWORD PTR [rcx+0x18]
  403cad:	mov    rdx,QWORD PTR [rbx+0x1d0]
  403cb4:	shl    rcx,0x5
  403cb8:	cmp    DWORD PTR [rdx+rcx*1+0x18],0x1
  403cbd:	jne    403c90 <rb_strcasecmp@plt+0x1770>
  403cbf:	mov    rdi,rbx
  403cc2:	mov    esi,r14d
  403cc5:	call   rax
  403cc7:	jmp    403c90 <rb_strcasecmp@plt+0x1770>
  403cc9:	lea    rax,[rip+0xc1a0]        # 40fe70 <rb_strcasecmp@plt+0xd950>
  403cd0:	mov    rdi,QWORD PTR [rax]
  403cd3:	mov    edx,DWORD PTR [rbx]
  403cd5:	lea    rcx,[rbx+0x1b8]
  403cdc:	lea    r8,[rbx+0x178]
  403ce3:	lea    rsi,[rip+0x6730]        # 40a41a <rb_strcasecmp@plt+0x7efa>
  403cea:	xor    eax,eax
  403cec:	call   402450 <rb_helper_write@plt>
  403cf1:	cmp    BYTE PTR [rbx+0x1c4],0x0
  403cf8:	jne    403d52 <rb_strcasecmp@plt+0x1832>
  403cfa:	mov    BYTE PTR [rbx+0x1c4],0x1
  403d01:	cmp    DWORD PTR [rbx+0x1c8],0x0
  403d08:	je     403d52 <rb_strcasecmp@plt+0x1832>
  403d0a:	lea    rax,[rip+0x1041f]        # 414130 <rb_strcasecmp@plt+0x11c10>
  403d11:	mov    rbp,QWORD PTR [rax]
  403d14:	test   rbp,rbp
  403d17:	jne    403d29 <rb_strcasecmp@plt+0x1809>
  403d19:	jmp    403d52 <rb_strcasecmp@plt+0x1832>
  403d1b:	nop    DWORD PTR [rax+rax*1+0x0]
  403d20:	mov    rbp,QWORD PTR [rbp+0x10]
  403d24:	test   rbp,rbp
  403d27:	je     403d52 <rb_strcasecmp@plt+0x1832>
  403d29:	mov    rcx,QWORD PTR [rbp+0x0]
  403d2d:	mov    rax,QWORD PTR [rcx+0x48]
  403d31:	test   rax,rax
  403d34:	je     403d20 <rb_strcasecmp@plt+0x1800>
  403d36:	mov    ecx,DWORD PTR [rcx+0x18]
  403d39:	mov    rdx,QWORD PTR [rbx+0x1d0]
  403d40:	shl    rcx,0x5
  403d44:	cmp    DWORD PTR [rdx+rcx*1+0x18],0x1
  403d49:	jne    403d20 <rb_strcasecmp@plt+0x1800>
  403d4b:	mov    rdi,rbx
  403d4e:	call   rax
  403d50:	jmp    403d20 <rb_strcasecmp@plt+0x1800>
  403d52:	pop    rbx
  403d53:	pop    r14
  403d55:	pop    rbp
  403d56:	ret    
  403d57:	nop    WORD PTR [rax+rax*1+0x0]
  403d60:	push   r14
  403d62:	push   rbx
  403d63:	push   rax
  403d64:	mov    r14,rdi
  403d67:	lea    rax,[rip+0xc102]        # 40fe70 <rb_strcasecmp@plt+0xd950>
  403d6e:	mov    rdi,QWORD PTR [rax]
  403d71:	mov    edx,DWORD PTR [r14]
  403d74:	lea    rcx,[r14+0x1b8]
  403d7b:	lea    r8,[r14+0x178]
  403d82:	lea    rsi,[rip+0x6691]        # 40a41a <rb_strcasecmp@plt+0x7efa>
  403d89:	xor    eax,eax
  403d8b:	call   402450 <rb_helper_write@plt>
  403d90:	cmp    BYTE PTR [r14+0x1c4],0x0
  403d98:	jne    403df1 <rb_strcasecmp@plt+0x18d1>
  403d9a:	mov    BYTE PTR [r14+0x1c4],0x1
  403da2:	cmp    DWORD PTR [r14+0x1c8],0x0
  403daa:	je     403df1 <rb_strcasecmp@plt+0x18d1>
  403dac:	lea    rax,[rip+0x1037d]        # 414130 <rb_strcasecmp@plt+0x11c10>
  403db3:	mov    rbx,QWORD PTR [rax]
  403db6:	test   rbx,rbx
  403db9:	jne    403dc9 <rb_strcasecmp@plt+0x18a9>
  403dbb:	jmp    403df1 <rb_strcasecmp@plt+0x18d1>
  403dbd:	nop    DWORD PTR [rax]
  403dc0:	mov    rbx,QWORD PTR [rbx+0x10]
  403dc4:	test   rbx,rbx
  403dc7:	je     403df1 <rb_strcasecmp@plt+0x18d1>
  403dc9:	mov    rcx,QWORD PTR [rbx]
  403dcc:	mov    rax,QWORD PTR [rcx+0x48]
  403dd0:	test   rax,rax
  403dd3:	je     403dc0 <rb_strcasecmp@plt+0x18a0>
  403dd5:	mov    ecx,DWORD PTR [rcx+0x18]
  403dd8:	mov    rdx,QWORD PTR [r14+0x1d0]
  403ddf:	shl    rcx,0x5
  403de3:	cmp    DWORD PTR [rdx+rcx*1+0x18],0x1
  403de8:	jne    403dc0 <rb_strcasecmp@plt+0x18a0>
  403dea:	mov    rdi,r14
  403ded:	call   rax
  403def:	jmp    403dc0 <rb_strcasecmp@plt+0x18a0>
  403df1:	add    rsp,0x8
  403df5:	pop    rbx
  403df6:	pop    r14
  403df8:	ret    
  403df9:	nop    DWORD PTR [rax+0x0]
  403e00:	push   rbp
  403e01:	push   r15
  403e03:	push   r14
  403e05:	push   r13
  403e07:	push   r12
  403e09:	push   rbx
  403e0a:	sub    rsp,0x18
  403e0e:	mov    ecx,edi
  403e10:	cmp    edi,0x5
  403e13:	jle    4040fc <rb_strcasecmp@plt+0x1bdc>
  403e19:	mov    r14,QWORD PTR [rsi+0x8]
  403e1d:	mov    r12,QWORD PTR [rsi+0x10]
  403e21:	mov    rax,QWORD PTR [rsi+0x18]
  403e25:	mov    QWORD PTR [rsp+0x10],rax
  403e2a:	mov    rbp,QWORD PTR [rsi+0x20]
  403e2e:	mov    rbx,QWORD PTR [rsi+0x28]
  403e32:	cmp    ecx,0x6
  403e35:	jne    403e40 <rb_strcasecmp@plt+0x1920>
  403e37:	lea    r15,[rip+0x679f]        # 40a5dd <rb_strcasecmp@plt+0x80bd>
  403e3e:	jmp    403e44 <rb_strcasecmp@plt+0x1924>
  403e40:	mov    r15,QWORD PTR [rsi+0x30]
  403e44:	xor    esi,esi
  403e46:	mov    edx,0x10
  403e4b:	mov    rdi,r14
  403e4e:	call   402490 <strtoull@plt>
  403e53:	mov    r13,rax
  403e56:	lea    rax,[rax-0x1]
  403e5a:	mov    ecx,0xfffffffe
  403e5f:	cmp    rax,rcx
  403e62:	ja     4040bb <rb_strcasecmp@plt+0x1b9b>
  403e68:	mov    QWORD PTR [rsp],rbp
  403e6c:	mov    QWORD PTR [rsp+0x8],rbx
  403e71:	mov    edi,0x1
  403e76:	mov    esi,0x1d8
  403e7b:	call   402440 <calloc@plt>
  403e80:	test   rax,rax
  403e83:	je     40411b <rb_strcasecmp@plt+0x1bfb>
  403e89:	mov    rbx,rax
  403e8c:	mov    DWORD PTR [rax+0x1cc],0x1
  403e96:	mov    DWORD PTR [rax],r13d
  403e99:	lea    rax,[rip+0x10288]        # 414128 <rb_strcasecmp@plt+0x11c08>
  403ea0:	mov    rbp,rax
  403ea3:	mov    rdi,QWORD PTR [rax]
  403ea6:	mov    esi,r13d
  403ea9:	call   402400 <rb_dictionary_find@plt>
  403eae:	test   rax,rax
  403eb1:	jne    404120 <rb_strcasecmp@plt+0x1c00>
  403eb7:	mov    r13,rbp
  403eba:	mov    rdi,QWORD PTR [rbp+0x0]
  403ebe:	mov    esi,DWORD PTR [rbx]
  403ec0:	mov    rdx,rbx
  403ec3:	call   4023a0 <rb_dictionary_add@plt>
  403ec8:	xor    esi,esi
  403eca:	mov    edx,0x10
  403ecf:	mov    rdi,r15
  403ed2:	call   402490 <strtoull@plt>
  403ed7:	mov    DWORD PTR [rbx+0x4],eax
  403eda:	lea    rdi,[rbx+0x8]
  403ede:	mov    edx,0x36
  403ee3:	mov    rsi,r12
  403ee6:	call   4021c0 <rb_strlcpy@plt>
  403eeb:	xor    esi,esi
  403eed:	mov    edx,0xa
  403ef2:	mov    rdi,QWORD PTR [rsp+0x10]
  403ef7:	call   4022f0 <strtol@plt>
  403efc:	mov    WORD PTR [rbx+0x3e],ax
  403f00:	lea    rsi,[rbx+0x40]
  403f04:	mov    rdi,r12
  403f07:	call   402260 <rb_inet_pton_sock@plt>
  403f0c:	movzx  eax,WORD PTR [rbx+0x3e]
  403f10:	movbe  WORD PTR [rbx+0x42],ax
  403f16:	lea    rdi,[rbx+0xc0]
  403f1d:	mov    edx,0x36
  403f22:	mov    rbp,QWORD PTR [rsp]
  403f26:	mov    rsi,rbp
  403f29:	call   4021c0 <rb_strlcpy@plt>
  403f2e:	xor    esi,esi
  403f30:	mov    edx,0xa
  403f35:	mov    rdi,QWORD PTR [rsp+0x8]
  403f3a:	call   4022f0 <strtol@plt>
  403f3f:	mov    WORD PTR [rbx+0xf6],ax
  403f46:	lea    rsi,[rbx+0xf8]
  403f4d:	mov    rdi,rbp
  403f50:	call   402260 <rb_inet_pton_sock@plt>
  403f55:	movzx  eax,WORD PTR [rbx+0xf6]
  403f5c:	movbe  WORD PTR [rbx+0xfa],ax
  403f65:	lea    r14,[rbx+0x178]
  403f6c:	lea    rbp,[rip+0x639d]        # 40a310 <rb_strcasecmp@plt+0x7df0>
  403f73:	mov    edx,0x40
  403f78:	mov    rdi,r14
  403f7b:	mov    rsi,rbp
  403f7e:	call   4021c0 <rb_strlcpy@plt>
  403f83:	mov    r15,rbx
  403f86:	add    r15,0x1b8
  403f8d:	mov    edx,0xb
  403f92:	mov    rdi,r15
  403f95:	mov    rsi,rbp
  403f98:	call   4021c0 <rb_strlcpy@plt>
  403f9d:	mov    esi,DWORD PTR [rip+0xff65]        # 413f08 <rb_strcasecmp@plt+0x119e8>
  403fa3:	shl    rsi,0x5
  403fa7:	mov    edi,0x1
  403fac:	call   402440 <calloc@plt>
  403fb1:	test   rax,rax
  403fb4:	je     40411b <rb_strcasecmp@plt+0x1bfb>
  403fba:	mov    QWORD PTR [rbx+0x1d0],rax
  403fc1:	mov    BYTE PTR [rbx+0x1c3],0x1
  403fc8:	lea    r12,[rip+0x10161]        # 414130 <rb_strcasecmp@plt+0x11c10>
  403fcf:	mov    rbp,QWORD PTR [r12]
  403fd3:	test   rbp,rbp
  403fd6:	jne    403fe7 <rb_strcasecmp@plt+0x1ac7>
  403fd8:	jmp    404025 <rb_strcasecmp@plt+0x1b05>
  403fda:	nop    WORD PTR [rax+rax*1+0x0]
  403fe0:	mov    rax,QWORD PTR [rbx+0x1d0]
  403fe7:	mov    rcx,QWORD PTR [rbp+0x0]
  403feb:	mov    edx,DWORD PTR [rcx+0x18]
  403fee:	shl    rdx,0x5
  403ff2:	mov    QWORD PTR [rax+rdx*1],rcx
  403ff6:	add    DWORD PTR [rbx+0x1c8],0x1
  403ffd:	mov    DWORD PTR [rax+rdx*1+0x18],0x1
  404005:	mov    rdi,rbx
  404008:	call   QWORD PTR [rcx+0x40]
  40400b:	test   al,al
  40400d:	je     4040b2 <rb_strcasecmp@plt+0x1b92>
  404013:	cmp    BYTE PTR [rbx+0x1c4],0x0
  40401a:	jne    404025 <rb_strcasecmp@plt+0x1b05>
  40401c:	mov    rbp,QWORD PTR [rbp+0x10]
  404020:	test   rbp,rbp
  404023:	jne    403fe0 <rb_strcasecmp@plt+0x1ac0>
  404025:	mov    BYTE PTR [rbx+0x1c3],0x0
  40402c:	cmp    DWORD PTR [rbx+0x1c8],0x0
  404033:	jne    4040b2 <rb_strcasecmp@plt+0x1b92>
  404039:	lea    rax,[rip+0xbe30]        # 40fe70 <rb_strcasecmp@plt+0xd950>
  404040:	mov    rdi,QWORD PTR [rax]
  404043:	mov    edx,DWORD PTR [rbx]
  404045:	lea    rsi,[rip+0x63ce]        # 40a41a <rb_strcasecmp@plt+0x7efa>
  40404c:	xor    eax,eax
  40404e:	mov    rcx,r15
  404051:	mov    r8,r14
  404054:	call   402450 <rb_helper_write@plt>
  404059:	cmp    BYTE PTR [rbx+0x1c4],0x0
  404060:	jne    4040b2 <rb_strcasecmp@plt+0x1b92>
  404062:	mov    BYTE PTR [rbx+0x1c4],0x1
  404069:	cmp    DWORD PTR [rbx+0x1c8],0x0
  404070:	je     4040b2 <rb_strcasecmp@plt+0x1b92>
  404072:	mov    rbp,QWORD PTR [r12]
  404076:	test   rbp,rbp
  404079:	jne    404089 <rb_strcasecmp@plt+0x1b69>
  40407b:	jmp    4040b2 <rb_strcasecmp@plt+0x1b92>
  40407d:	nop    DWORD PTR [rax]
  404080:	mov    rbp,QWORD PTR [rbp+0x10]
  404084:	test   rbp,rbp
  404087:	je     4040b2 <rb_strcasecmp@plt+0x1b92>
  404089:	mov    rcx,QWORD PTR [rbp+0x0]
  40408d:	mov    rax,QWORD PTR [rcx+0x48]
  404091:	test   rax,rax
  404094:	je     404080 <rb_strcasecmp@plt+0x1b60>
  404096:	mov    ecx,DWORD PTR [rcx+0x18]
  404099:	mov    rdx,QWORD PTR [rbx+0x1d0]
  4040a0:	shl    rcx,0x5
  4040a4:	cmp    DWORD PTR [rdx+rcx*1+0x18],0x1
  4040a9:	jne    404080 <rb_strcasecmp@plt+0x1b60>
  4040ab:	mov    rdi,rbx
  4040ae:	call   rax
  4040b0:	jmp    404080 <rb_strcasecmp@plt+0x1b60>
  4040b2:	add    DWORD PTR [rbx+0x1cc],0xffffffff
  4040b9:	je     4040ca <rb_strcasecmp@plt+0x1baa>
  4040bb:	add    rsp,0x18
  4040bf:	pop    rbx
  4040c0:	pop    r12
  4040c2:	pop    r13
  4040c4:	pop    r14
  4040c6:	pop    r15
  4040c8:	pop    rbp
  4040c9:	ret    
  4040ca:	mov    rdi,QWORD PTR [r13+0x0]
  4040ce:	mov    esi,DWORD PTR [rbx]
  4040d0:	call   402290 <rb_dictionary_delete@plt>
  4040d5:	mov    rdi,QWORD PTR [rbx+0x1d0]
  4040dc:	test   rdi,rdi
  4040df:	je     4040e6 <rb_strcasecmp@plt+0x1bc6>
  4040e1:	call   4021f0 <free@plt>
  4040e6:	mov    rdi,rbx
  4040e9:	add    rsp,0x18
  4040ed:	pop    rbx
  4040ee:	pop    r12
  4040f0:	pop    r13
  4040f2:	pop    r14
  4040f4:	pop    r15
  4040f6:	pop    rbp
  4040f7:	jmp    4021f0 <free@plt>
  4040fc:	lea    rsi,[rip+0x6322]        # 40a425 <rb_strcasecmp@plt+0x7f05>
  404103:	mov    edi,0x43
  404108:	xor    eax,eax
  40410a:	mov    edx,ecx
  40410c:	call   403150 <rb_strcasecmp@plt+0xc30>
  404111:	mov    edi,0x3
  404116:	call   4020e0 <exit@plt>
  40411b:	call   402380 <rb_outofmemory@plt>
  404120:	lea    rsi,[rip+0x647a]        # 40a5a1 <rb_strcasecmp@plt+0x8081>
  404127:	mov    edi,0x43
  40412c:	xor    eax,eax
  40412e:	mov    rdx,r14
  404131:	call   403150 <rb_strcasecmp@plt+0xc30>
  404136:	mov    edi,0x3
  40413b:	call   4020e0 <exit@plt>
  404140:	push   r15
  404142:	push   r14
  404144:	push   rbx
  404145:	cmp    edi,0x1
  404148:	jle    404241 <rb_strcasecmp@plt+0x1d21>
  40414e:	mov    rbx,rsi
  404151:	mov    rdi,QWORD PTR [rsi+0x8]
  404155:	xor    esi,esi
  404157:	mov    edx,0x10
  40415c:	call   402490 <strtoull@plt>
  404161:	lea    rcx,[rax-0x1]
  404165:	mov    edx,0xffffffff
  40416a:	cmp    rcx,rdx
  40416d:	jae    404262 <rb_strcasecmp@plt+0x1d42>
  404173:	lea    r14,[rip+0xffae]        # 414128 <rb_strcasecmp@plt+0x11c08>
  40417a:	mov    rdi,QWORD PTR [r14]
  40417d:	mov    esi,eax
  40417f:	call   402370 <rb_dictionary_retrieve@plt>
  404184:	test   rax,rax
  404187:	je     4041b2 <rb_strcasecmp@plt+0x1c92>
  404189:	mov    r15,rax
  40418c:	mov    eax,DWORD PTR [rax+0x1cc]
  404192:	add    eax,0x1
  404195:	mov    DWORD PTR [r15+0x1cc],eax
  40419c:	cmp    BYTE PTR [r15+0x1c4],0x0
  4041a4:	je     4041b8 <rb_strcasecmp@plt+0x1c98>
  4041a6:	add    eax,0xffffffff
  4041a9:	mov    DWORD PTR [r15+0x1cc],eax
  4041b0:	je     404218 <rb_strcasecmp@plt+0x1cf8>
  4041b2:	pop    rbx
  4041b3:	pop    r14
  4041b5:	pop    r15
  4041b7:	ret    
  4041b8:	mov    BYTE PTR [r15+0x1c4],0x1
  4041c0:	cmp    DWORD PTR [r15+0x1c8],0x0
  4041c8:	je     4041a6 <rb_strcasecmp@plt+0x1c86>
  4041ca:	lea    rcx,[rip+0xff5f]        # 414130 <rb_strcasecmp@plt+0x11c10>
  4041d1:	mov    rbx,QWORD PTR [rcx]
  4041d4:	test   rbx,rbx
  4041d7:	je     4041a6 <rb_strcasecmp@plt+0x1c86>
  4041d9:	nop    DWORD PTR [rax+0x0]
  4041e0:	mov    rcx,QWORD PTR [rbx]
  4041e3:	mov    rax,QWORD PTR [rcx+0x48]
  4041e7:	test   rax,rax
  4041ea:	je     404206 <rb_strcasecmp@plt+0x1ce6>
  4041ec:	mov    ecx,DWORD PTR [rcx+0x18]
  4041ef:	mov    rdx,QWORD PTR [r15+0x1d0]
  4041f6:	shl    rcx,0x5
  4041fa:	cmp    DWORD PTR [rdx+rcx*1+0x18],0x1
  4041ff:	jne    404206 <rb_strcasecmp@plt+0x1ce6>
  404201:	mov    rdi,r15
  404204:	call   rax
  404206:	mov    rbx,QWORD PTR [rbx+0x10]
  40420a:	test   rbx,rbx
  40420d:	jne    4041e0 <rb_strcasecmp@plt+0x1cc0>
  40420f:	mov    eax,DWORD PTR [r15+0x1cc]
  404216:	jmp    4041a6 <rb_strcasecmp@plt+0x1c86>
  404218:	mov    rdi,QWORD PTR [r14]
  40421b:	mov    esi,DWORD PTR [r15]
  40421e:	call   402290 <rb_dictionary_delete@plt>
  404223:	mov    rdi,QWORD PTR [r15+0x1d0]
  40422a:	test   rdi,rdi
  40422d:	je     404234 <rb_strcasecmp@plt+0x1d14>
  40422f:	call   4021f0 <free@plt>
  404234:	mov    rdi,r15
  404237:	pop    rbx
  404238:	pop    r14
  40423a:	pop    r15
  40423c:	jmp    4021f0 <free@plt>
  404241:	mov    ecx,edi
  404243:	lea    rsi,[rip+0x6225]        # 40a46f <rb_strcasecmp@plt+0x7f4f>
  40424a:	mov    edi,0x43
  40424f:	xor    eax,eax
  404251:	mov    edx,ecx
  404253:	call   403150 <rb_strcasecmp@plt+0xc30>
  404258:	mov    edi,0x3
  40425d:	call   4020e0 <exit@plt>
  404262:	mov    rdx,QWORD PTR [rbx+0x8]
  404266:	lea    rsi,[rip+0x624c]        # 40a4b9 <rb_strcasecmp@plt+0x7f99>
  40426d:	mov    edi,0x43
  404272:	xor    eax,eax
  404274:	call   403150 <rb_strcasecmp@plt+0xc30>
  404279:	mov    edi,0x3
  40427e:	call   4020e0 <exit@plt>
  404283:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40428d:	nop    DWORD PTR [rax]
  404290:	push   rax
  404291:	call   405360 <rb_strcasecmp@plt+0x2e40>
  404296:	lea    rax,[rip+0xfcc7]        # 413f64 <rb_strcasecmp@plt+0x11a44>
  40429d:	mov    edx,DWORD PTR [rax]
  40429f:	test   edx,edx
  4042a1:	jle    4042b5 <rb_strcasecmp@plt+0x1d95>
  4042a3:	shl    rdx,0x2
  4042a7:	lea    rdi,[rip+0xfc72]        # 413f20 <rb_strcasecmp@plt+0x11a00>
  4042ae:	xor    esi,esi
  4042b0:	call   402040 <memset@plt>
  4042b5:	cmp    QWORD PTR [rip+0xfc53],0x0        # 413f10 <rb_strcasecmp@plt+0x119f0>
  4042bd:	jne    40431f <rb_strcasecmp@plt+0x1dff>
  4042bf:	lea    rax,[rip+0xff9a]        # 414260 <rb_strcasecmp@plt+0x11d40>
  4042c6:	movzx  edi,WORD PTR [rax]
  4042c9:	lea    rcx,[rip+0x63dc]        # 40a6ac <rb_strcasecmp@plt+0x818c>
  4042d0:	mov    esi,0x2
  4042d5:	xor    edx,edx
  4042d7:	call   402110 <rb_socket@plt>
  4042dc:	mov    QWORD PTR [rip+0xfc2d],rax        # 413f10 <rb_strcasecmp@plt+0x119f0>
  4042e3:	test   rax,rax
  4042e6:	je     40431f <rb_strcasecmp@plt+0x1dff>
  4042e8:	lea    rdx,[rip+0x511]        # 404800 <rb_strcasecmp@plt+0x22e0>
  4042ef:	mov    esi,0x1
  4042f4:	xor    ecx,ecx
  4042f6:	mov    rdi,rax
  4042f9:	call   4020b0 <rb_setselect@plt>
  4042fe:	lea    rdi,[rip+0x63bb]        # 40a6c0 <rb_strcasecmp@plt+0x81a0>
  404305:	lea    rsi,[rip+0x534]        # 404840 <rb_strcasecmp@plt+0x2320>
  40430c:	xor    edx,edx
  40430e:	mov    ecx,0x1
  404313:	call   402480 <rb_event_add@plt>
  404318:	mov    QWORD PTR [rip+0xfbf9],rax        # 413f18 <rb_strcasecmp@plt+0x119f8>
  40431f:	pop    rax
  404320:	ret    
  404321:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40432b:	nop    DWORD PTR [rax+rax*1+0x0]
  404330:	push   rax
  404331:	mov    rdi,QWORD PTR [rip+0xfbd8]        # 413f10 <rb_strcasecmp@plt+0x119f0>
  404338:	call   4022e0 <rb_close@plt>
  40433d:	mov    QWORD PTR [rip+0xfbc8],0x0        # 413f10 <rb_strcasecmp@plt+0x119f0>
  404348:	mov    rdi,QWORD PTR [rip+0xfbc9]        # 413f18 <rb_strcasecmp@plt+0x119f8>
  40434f:	call   4020a0 <rb_event_delete@plt>
  404354:	call   405360 <rb_strcasecmp@plt+0x2e40>
  404359:	lea    rax,[rip+0xfc04]        # 413f64 <rb_strcasecmp@plt+0x11a44>
  404360:	mov    edx,DWORD PTR [rax]
  404362:	test   edx,edx
  404364:	jle    404378 <rb_strcasecmp@plt+0x1e58>
  404366:	shl    rdx,0x2
  40436a:	lea    rdi,[rip+0xfbaf]        # 413f20 <rb_strcasecmp@plt+0x11a00>
  404371:	xor    esi,esi
  404373:	call   402040 <memset@plt>
  404378:	cmp    QWORD PTR [rip+0xfb90],0x0        # 413f10 <rb_strcasecmp@plt+0x119f0>
  404380:	jne    4043e2 <rb_strcasecmp@plt+0x1ec2>
  404382:	lea    rax,[rip+0xfed7]        # 414260 <rb_strcasecmp@plt+0x11d40>
  404389:	movzx  edi,WORD PTR [rax]
  40438c:	lea    rcx,[rip+0x6319]        # 40a6ac <rb_strcasecmp@plt+0x818c>
  404393:	mov    esi,0x2
  404398:	xor    edx,edx
  40439a:	call   402110 <rb_socket@plt>
  40439f:	mov    QWORD PTR [rip+0xfb6a],rax        # 413f10 <rb_strcasecmp@plt+0x119f0>
  4043a6:	test   rax,rax
  4043a9:	je     4043e2 <rb_strcasecmp@plt+0x1ec2>
  4043ab:	lea    rdx,[rip+0x44e]        # 404800 <rb_strcasecmp@plt+0x22e0>
  4043b2:	mov    esi,0x1
  4043b7:	xor    ecx,ecx
  4043b9:	mov    rdi,rax
  4043bc:	call   4020b0 <rb_setselect@plt>
  4043c1:	lea    rdi,[rip+0x62f8]        # 40a6c0 <rb_strcasecmp@plt+0x81a0>
  4043c8:	lea    rsi,[rip+0x471]        # 404840 <rb_strcasecmp@plt+0x2320>
  4043cf:	xor    edx,edx
  4043d1:	mov    ecx,0x1
  4043d6:	call   402480 <rb_event_add@plt>
  4043db:	mov    QWORD PTR [rip+0xfb36],rax        # 413f18 <rb_strcasecmp@plt+0x119f8>
  4043e2:	pop    rax
  4043e3:	ret    
  4043e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4043ee:	xchg   ax,ax
  4043f0:	push   rbp
  4043f1:	push   r14
  4043f3:	push   rbx
  4043f4:	sub    rsp,0x100
  4043fb:	test   rdi,rdi
  4043fe:	je     404499 <rb_strcasecmp@plt+0x1f79>
  404404:	mov    r14d,edx
  404407:	mov    rbx,rsi
  40440a:	mov    rax,rdi
  40440d:	mov    rbp,rsp
  404410:	mov    edx,0x100
  404415:	mov    rdi,rbp
  404418:	mov    rsi,rax
  40441b:	call   4021c0 <rb_strlcpy@plt>
  404420:	mov    esi,0x2e
  404425:	mov    rdi,rbp
  404428:	call   402330 <strchr@plt>
  40442d:	test   rax,rax
  404430:	jne    40447d <rb_strcasecmp@plt+0x1f5d>
  404432:	lea    rax,[rip+0xfd27]        # 414160 <rb_strcasecmp@plt+0x11c40>
  404439:	mov    al,BYTE PTR [rax]
  40443b:	test   al,al
  40443d:	je     40447d <rb_strcasecmp@plt+0x1f5d>
  40443f:	mov    rdi,rsp
  404442:	call   402200 <strlen@plt>
  404447:	mov    rbp,rax
  40444a:	lea    rdi,[rip+0xfd0f]        # 414160 <rb_strcasecmp@plt+0x11c40>
  404451:	call   402200 <strlen@plt>
  404456:	add    rax,rbp
  404459:	add    rax,0x2
  40445d:	cmp    rax,0xfe
  404463:	ja     40447d <rb_strcasecmp@plt+0x1f5d>
  404465:	mov    BYTE PTR [rsp+rbp*1],0x2e
  404469:	lea    rdi,[rsp+rbp*1]
  40446d:	add    rdi,0x1
  404471:	lea    rsi,[rip+0xfce8]        # 414160 <rb_strcasecmp@plt+0x11c40>
  404478:	call   402410 <strcpy@plt>
  40447d:	mov    rsi,rsp
  404480:	xor    edx,edx
  404482:	mov    rdi,rbx
  404485:	mov    ecx,r14d
  404488:	call   405010 <rb_strcasecmp@plt+0x2af0>
  40448d:	add    rsp,0x100
  404494:	pop    rbx
  404495:	pop    r14
  404497:	pop    rbp
  404498:	ret    
  404499:	lea    rdi,[rip+0x6135]        # 40a5d5 <rb_strcasecmp@plt+0x80b5>
  4044a0:	lea    rsi,[rip+0x6138]        # 40a5df <rb_strcasecmp@plt+0x80bf>
  4044a7:	lea    rcx,[rip+0x6137]        # 40a5e5 <rb_strcasecmp@plt+0x80c5>
  4044ae:	mov    edx,0x19c
  4044b3:	call   4020f0 <__assert_fail@plt>
  4044b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4044c0:	push   r14
  4044c2:	push   rbx
  4044c3:	push   rax
  4044c4:	mov    r14,rdi
  4044c7:	mov    rdi,rsi
  4044ca:	call   405090 <rb_strcasecmp@plt+0x2b70>
  4044cf:	mov    rbx,rax
  4044d2:	vmovups ymm0,YMMWORD PTR [r14]
  4044d7:	vmovups ymm1,YMMWORD PTR [r14+0x20]
  4044dd:	vmovups ymm2,YMMWORD PTR [r14+0x40]
  4044e3:	vmovups ymm3,YMMWORD PTR [r14+0x60]
  4044e9:	vmovups YMMWORD PTR [rax+0x148],ymm0
  4044f1:	vmovups YMMWORD PTR [rax+0x168],ymm1
  4044f9:	vmovups YMMWORD PTR [rax+0x188],ymm2
  404501:	vmovups YMMWORD PTR [rax+0x1a8],ymm3
  404509:	mov    edi,0x1
  40450e:	mov    esi,0x100
  404513:	vzeroupper 
  404516:	call   402440 <calloc@plt>
  40451b:	test   rax,rax
  40451e:	je     404550 <rb_strcasecmp@plt+0x2030>
  404520:	mov    QWORD PTR [rbx+0x1c8],rax
  404527:	mov    rdi,rbx
  40452a:	add    rdi,0x29
  40452e:	mov    esi,0x100
  404533:	xor    ecx,ecx
  404535:	mov    rdx,r14
  404538:	call   404560 <rb_strcasecmp@plt+0x2040>
  40453d:	mov    BYTE PTR [rbx+0x28],0xc
  404541:	mov    rdi,rbx
  404544:	add    rsp,0x8
  404548:	pop    rbx
  404549:	pop    r14
  40454b:	jmp    405180 <rb_strcasecmp@plt+0x2c60>
  404550:	call   402380 <rb_outofmemory@plt>
  404555:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40455f:	nop
  404560:	push   rbp
  404561:	push   r15
  404563:	push   r14
  404565:	push   r13
  404567:	push   r12
  404569:	push   rbx
  40456a:	sub    rsp,0xb8
  404571:	movzx  eax,WORD PTR [rdx]
  404574:	cmp    eax,0xa
  404577:	je     4045c8 <rb_strcasecmp@plt+0x20a8>
  404579:	movzx  eax,ax
  40457c:	cmp    eax,0x2
  40457f:	jne    4047e7 <rb_strcasecmp@plt+0x22c7>
  404585:	movzx  r10d,BYTE PTR [rdx+0x7]
  40458a:	movzx  r8d,BYTE PTR [rdx+0x6]
  40458f:	movzx  r9d,BYTE PTR [rdx+0x5]
  404594:	movzx  ebp,BYTE PTR [rdx+0x4]
  404598:	test   rcx,rcx
  40459b:	lea    rbx,[rip+0x6091]        # 40a633 <rb_strcasecmp@plt+0x8113>
  4045a2:	cmovne rbx,rcx
  4045a6:	lea    rdx,[rip+0x6077]        # 40a624 <rb_strcasecmp@plt+0x8104>
  4045ad:	mov    eax,0x0
  4045b2:	mov    ecx,r10d
  4045b5:	push   rbx
  4045b6:	push   rbp
  4045b7:	call   402080 <snprintf@plt>
  4045bc:	add    rsp,0xc8
  4045c3:	jmp    4047ee <rb_strcasecmp@plt+0x22ce>
  4045c8:	movzx  r8d,BYTE PTR [rdx+0x17]
  4045cd:	mov    eax,r8d
  4045d0:	and    eax,0xf
  4045d3:	mov    DWORD PTR [rsp+0x4],eax
  4045d7:	shr    r8d,0x4
  4045db:	movzx  eax,BYTE PTR [rdx+0x16]
  4045df:	mov    r9d,eax
  4045e2:	and    r9d,0xf
  4045e6:	shr    eax,0x4
  4045e9:	mov    QWORD PTR [rsp+0xb0],rax
  4045f1:	movzx  ebp,BYTE PTR [rdx+0x15]
  4045f5:	mov    eax,ebp
  4045f7:	and    eax,0xf
  4045fa:	mov    QWORD PTR [rsp+0xa8],rax
  404602:	shr    ebp,0x4
  404605:	mov    QWORD PTR [rsp+0xa0],rbp
  40460d:	movzx  ebp,BYTE PTR [rdx+0x14]
  404611:	mov    eax,ebp
  404613:	and    eax,0xf
  404616:	mov    QWORD PTR [rsp+0x98],rax
  40461e:	shr    ebp,0x4
  404621:	mov    QWORD PTR [rsp+0x90],rbp
  404629:	movzx  ebp,BYTE PTR [rdx+0x13]
  40462d:	mov    eax,ebp
  40462f:	and    eax,0xf
  404632:	mov    QWORD PTR [rsp+0x88],rax
  40463a:	shr    ebp,0x4
  40463d:	mov    QWORD PTR [rsp+0x80],rbp
  404645:	movzx  ebp,BYTE PTR [rdx+0x12]
  404649:	mov    eax,ebp
  40464b:	and    eax,0xf
  40464e:	mov    QWORD PTR [rsp+0x78],rax
  404653:	shr    ebp,0x4
  404656:	mov    QWORD PTR [rsp+0x70],rbp
  40465b:	movzx  ebp,BYTE PTR [rdx+0x11]
  40465f:	mov    eax,ebp
  404661:	and    eax,0xf
  404664:	mov    QWORD PTR [rsp+0x68],rax
  404669:	shr    ebp,0x4
  40466c:	mov    QWORD PTR [rsp+0x60],rbp
  404671:	movzx  ebp,BYTE PTR [rdx+0x10]
  404675:	mov    eax,ebp
  404677:	and    eax,0xf
  40467a:	mov    QWORD PTR [rsp+0x58],rax
  40467f:	shr    ebp,0x4
  404682:	mov    QWORD PTR [rsp+0x50],rbp
  404687:	movzx  ebp,BYTE PTR [rdx+0xf]
  40468b:	mov    eax,ebp
  40468d:	and    eax,0xf
  404690:	mov    QWORD PTR [rsp+0x48],rax
  404695:	shr    ebp,0x4
  404698:	mov    QWORD PTR [rsp+0x40],rbp
  40469d:	movzx  ebp,BYTE PTR [rdx+0xe]
  4046a1:	mov    eax,ebp
  4046a3:	and    eax,0xf
  4046a6:	mov    QWORD PTR [rsp+0x38],rax
  4046ab:	shr    ebp,0x4
  4046ae:	mov    QWORD PTR [rsp+0x30],rbp
  4046b3:	movzx  ebp,BYTE PTR [rdx+0xd]
  4046b7:	mov    eax,ebp
  4046b9:	and    eax,0xf
  4046bc:	mov    QWORD PTR [rsp+0x28],rax
  4046c1:	shr    ebp,0x4
  4046c4:	mov    QWORD PTR [rsp+0x20],rbp
  4046c9:	movzx  ebp,BYTE PTR [rdx+0xc]
  4046cd:	mov    eax,ebp
  4046cf:	and    eax,0xf
  4046d2:	mov    QWORD PTR [rsp+0x18],rax
  4046d7:	shr    ebp,0x4
  4046da:	mov    QWORD PTR [rsp+0x10],rbp
  4046df:	movzx  ebp,BYTE PTR [rdx+0xb]
  4046e3:	mov    eax,ebp
  4046e5:	and    eax,0xf
  4046e8:	mov    QWORD PTR [rsp+0x8],rax
  4046ed:	shr    ebp,0x4
  4046f0:	movzx  r14d,BYTE PTR [rdx+0xa]
  4046f5:	mov    r11d,r14d
  4046f8:	and    r11d,0xf
  4046fc:	shr    r14d,0x4
  404700:	movzx  r13d,BYTE PTR [rdx+0x9]
  404705:	mov    r12d,r13d
  404708:	and    r12d,0xf
  40470c:	shr    r13d,0x4
  404710:	movzx  r15d,BYTE PTR [rdx+0x8]
  404715:	mov    ebx,r15d
  404718:	and    ebx,0xf
  40471b:	shr    r15d,0x4
  40471f:	test   rcx,rcx
  404722:	lea    r10,[rip+0x5f7a]        # 40a6a3 <rb_strcasecmp@plt+0x8183>
  404729:	cmovne r10,rcx
  40472d:	lea    rdx,[rip+0x5f0c]        # 40a640 <rb_strcasecmp@plt+0x8120>
  404734:	mov    eax,0x0
  404739:	mov    ecx,DWORD PTR [rsp+0x4]
  40473d:	push   r10
  40473f:	push   r15
  404741:	push   rbx
  404742:	push   r13
  404744:	push   r12
  404746:	push   r14
  404748:	push   r11
  40474a:	push   rbp
  40474b:	push   QWORD PTR [rsp+0x48]
  40474f:	push   QWORD PTR [rsp+0x58]
  404753:	push   QWORD PTR [rsp+0x68]
  404757:	push   QWORD PTR [rsp+0x78]
  40475b:	push   QWORD PTR [rsp+0x88]
  404762:	push   QWORD PTR [rsp+0x98]
  404769:	push   QWORD PTR [rsp+0xa8]
  404770:	push   QWORD PTR [rsp+0xb8]
  404777:	push   QWORD PTR [rsp+0xc8]
  40477e:	push   QWORD PTR [rsp+0xd8]
  404785:	push   QWORD PTR [rsp+0xe8]
  40478c:	push   QWORD PTR [rsp+0xf8]
  404793:	push   QWORD PTR [rsp+0x108]
  40479a:	push   QWORD PTR [rsp+0x118]
  4047a1:	push   QWORD PTR [rsp+0x128]
  4047a8:	push   QWORD PTR [rsp+0x138]
  4047af:	push   QWORD PTR [rsp+0x148]
  4047b6:	push   QWORD PTR [rsp+0x158]
  4047bd:	push   QWORD PTR [rsp+0x168]
  4047c4:	push   QWORD PTR [rsp+0x178]
  4047cb:	push   QWORD PTR [rsp+0x188]
  4047d2:	push   QWORD PTR [rsp+0x198]
  4047d9:	call   402080 <snprintf@plt>
  4047de:	add    rsp,0x1a8
  4047e5:	jmp    4047ee <rb_strcasecmp@plt+0x22ce>
  4047e7:	add    rsp,0xb8
  4047ee:	pop    rbx
  4047ef:	pop    r12
  4047f1:	pop    r13
  4047f3:	pop    r14
  4047f5:	pop    r15
  4047f7:	pop    rbp
  4047f8:	ret    
  4047f9:	nop    DWORD PTR [rax+0x0]
  404800:	push   rbx
  404801:	mov    rbx,rdi
  404804:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40480e:	xchg   ax,ax
  404810:	mov    rdi,rbx
  404813:	call   4048b0 <rb_strcasecmp@plt+0x2390>
  404818:	test   eax,eax
  40481a:	jne    404810 <rb_strcasecmp@plt+0x22f0>
  40481c:	lea    rdx,[rip+0xffffffffffffffdd]        # 404800 <rb_strcasecmp@plt+0x22e0>
  404823:	mov    esi,0x1
  404828:	xor    ecx,ecx
  40482a:	mov    rdi,rbx
  40482d:	pop    rbx
  40482e:	jmp    4020b0 <rb_setselect@plt>
  404833:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40483d:	nop    DWORD PTR [rax]
  404840:	push   r15
  404842:	push   r14
  404844:	push   rbx
  404845:	call   402280 <rb_current_time@plt>
  40484a:	mov    rbx,QWORD PTR [rip+0xf6f7]        # 413f48 <rb_strcasecmp@plt+0x11a28>
  404851:	test   rbx,rbx
  404854:	je     4048a4 <rb_strcasecmp@plt+0x2384>
  404856:	mov    r14,rax
  404859:	lea    r15,[rip+0xf6c0]        # 413f20 <rb_strcasecmp@plt+0x11a00>
  404860:	mov    rdi,QWORD PTR [rbx]
  404863:	mov    rbx,QWORD PTR [rbx+0x10]
  404867:	mov    rax,QWORD PTR [rdi+0x138]
  40486e:	mov    rcx,QWORD PTR [rdi+0x130]
  404875:	add    rcx,rax
  404878:	cmp    rcx,r14
  40487b:	jg     40489f <rb_strcasecmp@plt+0x237f>
  40487d:	movsxd rcx,DWORD PTR [rdi+0x140]
  404884:	add    DWORD PTR [r15+rcx*4],0x1
  404889:	mov    QWORD PTR [rdi+0x130],r14
  404890:	add    rax,rax
  404893:	mov    QWORD PTR [rdi+0x138],rax
  40489a:	call   404f40 <rb_strcasecmp@plt+0x2a20>
  40489f:	test   rbx,rbx
  4048a2:	jne    404860 <rb_strcasecmp@plt+0x2340>
  4048a4:	pop    rbx
  4048a5:	pop    r14
  4048a7:	pop    r15
  4048a9:	ret    
  4048aa:	nop    WORD PTR [rax+rax*1+0x0]
  4048b0:	push   rbp
  4048b1:	push   r15
  4048b3:	push   r14
  4048b5:	push   r13
  4048b7:	push   r12
  4048b9:	push   rbx
  4048ba:	sub    rsp,0x608
  4048c1:	mov    DWORD PTR [rsp+0xc],0x80
  4048c9:	call   4020d0 <rb_get_fd@plt>
  4048ce:	lea    rsi,[rsp+0x90]
  4048d6:	xor    r15d,r15d
  4048d9:	lea    r8,[rsp+0x10]
  4048de:	lea    r9,[rsp+0xc]
  4048e3:	mov    edx,0x40c
  4048e8:	xor    ecx,ecx
  4048ea:	mov    edi,eax
  4048ec:	call   402470 <recvfrom@plt>
  4048f1:	lea    ecx,[rax+0x1]
  4048f4:	cmp    ecx,0x2
  4048f7:	jb     404f22 <rb_strcasecmp@plt+0x2a02>
  4048fd:	mov    r15d,0x1
  404903:	cmp    eax,0xd
  404906:	jl     404f22 <rb_strcasecmp@plt+0x2a02>
  40490c:	mov    esi,DWORD PTR [rsp+0x98]
  404913:	mov    rdx,QWORD PTR [rsp+0x90]
  40491b:	mov    rcx,rdx
  40491e:	shr    rcx,0x30
  404922:	rol    cx,0x8
  404926:	movzx  ecx,cx
  404929:	shl    rcx,0x30
  40492d:	mov    edi,edx
  40492f:	or     rdi,rcx
  404932:	mov    r11,rdx
  404935:	shr    r11,0x20
  404939:	mov    ecx,r11d
  40493c:	rol    cx,0x8
  404940:	movzx  ecx,cx
  404943:	shl    rcx,0x20
  404947:	or     rcx,rdi
  40494a:	mov    edi,esi
  40494c:	rol    di,0x8
  404950:	shr    rsi,0x10
  404954:	rol    si,0x8
  404958:	shl    esi,0x10
  40495b:	movzx  edi,di
  40495e:	or     edi,esi
  404960:	mov    DWORD PTR [rsp+0x98],edi
  404967:	mov    QWORD PTR [rsp+0x90],rcx
  40496f:	mov    rsi,QWORD PTR [rip+0xf5d2]        # 413f48 <rb_strcasecmp@plt+0x11a28>
  404976:	test   rsi,rsi
  404979:	je     404f22 <rb_strcasecmp@plt+0x2a02>
  40497f:	movzx  edx,dx
  404982:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40498c:	nop    DWORD PTR [rax+0x0]
  404990:	mov    rbx,QWORD PTR [rsi]
  404993:	cmp    DWORD PTR [rbx+0x18],edx
  404996:	je     4049a6 <rb_strcasecmp@plt+0x2486>
  404998:	mov    rsi,QWORD PTR [rsi+0x10]
  40499c:	test   rsi,rsi
  40499f:	jne    404990 <rb_strcasecmp@plt+0x2470>
  4049a1:	jmp    404f22 <rb_strcasecmp@plt+0x2a02>
  4049a6:	test   rbx,rbx
  4049a9:	je     404f22 <rb_strcasecmp@plt+0x2a02>
  4049af:	lea    rcx,[rip+0xf5ae]        # 413f64 <rb_strcasecmp@plt+0x11a44>
  4049b6:	movsxd rdx,DWORD PTR [rcx]
  4049b9:	test   rdx,rdx
  4049bc:	jle    404a6d <rb_strcasecmp@plt+0x254d>
  4049c2:	movzx  r9d,WORD PTR [rsp+0x12]
  4049c8:	lea    rdi,[rip+0xf891]        # 414260 <rb_strcasecmp@plt+0x11d40>
  4049cf:	add    rdi,0x8
  4049d3:	mov    r8d,DWORD PTR [rsp+0x14]
  4049d8:	xor    esi,esi
  4049da:	movzx  ebp,WORD PTR [rsp+0x10]
  4049df:	mov    r10,QWORD PTR [rip+0x9602]        # 40dfe8 <rb_strcasecmp@plt+0xbac8>
  4049e6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4049f0:	movzx  ecx,WORD PTR [rdi-0x8]
  4049f4:	cmp    ecx,0x2
  4049f7:	je     404a40 <rb_strcasecmp@plt+0x2520>
  4049f9:	movzx  ecx,cx
  4049fc:	cmp    ecx,0xa
  4049ff:	jne    404a60 <rb_strcasecmp@plt+0x2540>
  404a01:	cmp    ebp,0xa
  404a04:	jne    404a60 <rb_strcasecmp@plt+0x2540>
  404a06:	cmp    WORD PTR [rdi-0x6],r9w
  404a0b:	jne    404a60 <rb_strcasecmp@plt+0x2540>
  404a0d:	vmovdqu xmm0,XMMWORD PTR [rdi]
  404a11:	vpcmpeqb xmm0,xmm0,XMMWORD PTR [rsp+0x18]
  404a17:	vpmovmskb ecx,xmm0
  404a1b:	mov    r13d,0x1
  404a21:	cmp    ecx,0xffff
  404a27:	je     404a70 <rb_strcasecmp@plt+0x2550>
  404a29:	vmovdqu xmm0,XMMWORD PTR [rdi]
  404a2d:	vpcmpeqb xmm0,xmm0,XMMWORD PTR [r10]
  404a32:	vpmovmskb ecx,xmm0
  404a36:	cmp    ecx,0xffff
  404a3c:	jne    404a60 <rb_strcasecmp@plt+0x2540>
  404a3e:	jmp    404a70 <rb_strcasecmp@plt+0x2550>
  404a40:	cmp    ebp,0x2
  404a43:	jne    404a60 <rb_strcasecmp@plt+0x2540>
  404a45:	cmp    WORD PTR [rdi-0x6],r9w
  404a4a:	jne    404a60 <rb_strcasecmp@plt+0x2540>
  404a4c:	mov    ecx,DWORD PTR [rdi-0x4]
  404a4f:	mov    r13d,0x1
  404a55:	test   ecx,ecx
  404a57:	je     404a70 <rb_strcasecmp@plt+0x2550>
  404a59:	cmp    ecx,r8d
  404a5c:	je     404a70 <rb_strcasecmp@plt+0x2550>
  404a5e:	xchg   ax,ax
  404a60:	add    rsi,0x1
  404a64:	sub    rdi,0xffffffffffffff80
  404a68:	cmp    rsi,rdx
  404a6b:	jl     4049f0 <rb_strcasecmp@plt+0x24d0>
  404a6d:	xor    r13d,r13d
  404a70:	cmp    r13d,DWORD PTR [rbx+0x140]
  404a77:	je     404a87 <rb_strcasecmp@plt+0x2567>
  404a79:	mov    ecx,r13d
  404a7c:	lea    rdx,[rip+0xf49d]        # 413f20 <rb_strcasecmp@plt+0x11a00>
  404a83:	add    DWORD PTR [rdx+rcx*4],0x3
  404a87:	movzx  ecx,r11w
  404a8b:	cmp    ecx,0x100
  404a91:	jne    404f22 <rb_strcasecmp@plt+0x2a02>
  404a97:	cdqe   
  404a99:	lea    rbp,[rsp+rax*1]
  404a9d:	add    rbp,0x90
  404aa4:	lea    r14,[rsp+0x9c]
  404aac:	lea    rdi,[rsp+0x90]
  404ab4:	lea    rcx,[rsp+0x4a0]
  404abc:	mov    r8d,0x100
  404ac2:	mov    rsi,rbp
  404ac5:	mov    rdx,r14
  404ac8:	call   405630 <rb_strcasecmp@plt+0x3110>
  404acd:	test   eax,eax
  404acf:	jle    404f22 <rb_strcasecmp@plt+0x2a02>
  404ad5:	lea    rsi,[rbx+0x29]
  404ad9:	lea    rdi,[rsp+0x4a0]
  404ae1:	call   402520 <rb_strcasecmp@plt>
  404ae6:	test   eax,eax
  404ae8:	jne    404f22 <rb_strcasecmp@plt+0x2a02>
  404aee:	mov    rax,QWORD PTR [rsp+0x90]
  404af6:	test   eax,0xf000000
  404afb:	jne    404b7c <rb_strcasecmp@plt+0x265c>
  404afd:	movabs rcx,0xffff000000000000
  404b07:	and    rcx,rax
  404b0a:	je     404b7c <rb_strcasecmp@plt+0x265c>
  404b0c:	movabs rcx,0xffff00000000
  404b16:	test   rax,rcx
  404b19:	je     404ba5 <rb_strcasecmp@plt+0x2685>
  404b1f:	movabs r12,0xffff0000ffffffff
  404b29:	mov    rdi,r14
  404b2c:	mov    rsi,rbp
  404b2f:	call   405ba0 <rb_strcasecmp@plt+0x3680>
  404b34:	test   eax,eax
  404b36:	js     404e07 <rb_strcasecmp@plt+0x28e7>
  404b3c:	cdqe   
  404b3e:	add    r14,rax
  404b41:	add    r14,0x4
  404b45:	mov    ecx,DWORD PTR [rsp+0x98]
  404b4c:	mov    rax,QWORD PTR [rsp+0x90]
  404b54:	mov    rdx,rax
  404b57:	shr    rdx,0x20
  404b5b:	add    edx,0xffffffff
  404b5e:	movzx  edx,dx
  404b61:	mov    rsi,rdx
  404b64:	shl    rsi,0x20
  404b68:	and    rax,r12
  404b6b:	or     rax,rsi
  404b6e:	mov    QWORD PTR [rsp+0x90],rax
  404b76:	test   edx,edx
  404b78:	jne    404b29 <rb_strcasecmp@plt+0x2609>
  404b7a:	jmp    404bac <rb_strcasecmp@plt+0x268c>
  404b7c:	shr    rax,0x18
  404b80:	and    al,0xf
  404b82:	mov    ecx,eax
  404b84:	add    cl,0xfc
  404b87:	cmp    cl,0x2
  404b8a:	jb     404e07 <rb_strcasecmp@plt+0x28e7>
  404b90:	cmp    al,0x3
  404b92:	je     404ca5 <rb_strcasecmp@plt+0x2785>
  404b98:	cmp    al,0x2
  404b9a:	je     404e07 <rb_strcasecmp@plt+0x28e7>
  404ba0:	jmp    404cc2 <rb_strcasecmp@plt+0x27a2>
  404ba5:	mov    ecx,DWORD PTR [rsp+0x98]
  404bac:	cmp    r14,rbp
  404baf:	jb     404bc5 <rb_strcasecmp@plt+0x26a5>
  404bb1:	jmp    404dd2 <rb_strcasecmp@plt+0x28b2>
  404bb6:	mov    ecx,DWORD PTR [rsp+0x98]
  404bbd:	mov    rax,QWORD PTR [rsp+0x90]
  404bc5:	mov    rsi,rax
  404bc8:	shr    rsi,0x30
  404bcc:	mov    edx,ecx
  404bce:	shl    edx,0x10
  404bd1:	or     edx,esi
  404bd3:	movzx  esi,dx
  404bd6:	test   esi,esi
  404bd8:	je     404dd2 <rb_strcasecmp@plt+0x28b2>
  404bde:	add    edx,0xffffffff
  404be1:	shl    rdx,0x30
  404be5:	mov    sil,0x30
  404be8:	bzhi   rax,rax,rsi
  404bed:	or     rax,rdx
  404bf0:	mov    DWORD PTR [rsp+0x98],ecx
  404bf7:	mov    QWORD PTR [rsp+0x90],rax
  404bff:	mov    r8d,0x163
  404c05:	lea    rdi,[rsp+0x90]
  404c0d:	mov    rsi,rbp
  404c10:	mov    rdx,r14
  404c13:	lea    rcx,[rsp+0x4a0]
  404c1b:	call   405630 <rb_strcasecmp@plt+0x3110>
  404c20:	test   eax,eax
  404c22:	jle    404e07 <rb_strcasecmp@plt+0x28e7>
  404c28:	mov    BYTE PTR [rsp+0x59f],0x0
  404c30:	cdqe   
  404c32:	lea    rcx,[r14+rax*1]
  404c36:	add    rcx,0xa
  404c3a:	cmp    rcx,rbp
  404c3d:	jae    404dd2 <rb_strcasecmp@plt+0x28b2>
  404c43:	add    r14,rax
  404c46:	mov    rdi,r14
  404c49:	call   405c30 <rb_strcasecmp@plt+0x3710>
  404c4e:	mov    r12d,eax
  404c51:	lea    rdi,[r14+0x2]
  404c55:	call   405c30 <rb_strcasecmp@plt+0x3710>
  404c5a:	lea    rdi,[r14+0x4]
  404c5e:	call   405c40 <rb_strcasecmp@plt+0x3720>
  404c63:	mov    QWORD PTR [rbx+0x20],rax
  404c67:	lea    rdi,[r14+0x8]
  404c6b:	call   405c30 <rb_strcasecmp@plt+0x3710>
  404c70:	add    r14,0xa
  404c74:	cmp    r12d,0x1c
  404c78:	je     404d8c <rb_strcasecmp@plt+0x286c>
  404c7e:	cmp    r12d,0xc
  404c82:	je     404d35 <rb_strcasecmp@plt+0x2815>
  404c88:	cmp    r12d,0x1
  404c8c:	je     404db5 <rb_strcasecmp@plt+0x2895>
  404c92:	cdqe   
  404c94:	add    r14,rax
  404c97:	cmp    r14,rbp
  404c9a:	jb     404bb6 <rb_strcasecmp@plt+0x2696>
  404ca0:	jmp    404dd2 <rb_strcasecmp@plt+0x28b2>
  404ca5:	mov    eax,r13d
  404ca8:	lea    rcx,[rip+0xf271]        # 413f20 <rb_strcasecmp@plt+0x11a00>
  404caf:	mov    edx,DWORD PTR [rcx+rax*4]
  404cb2:	mov    esi,edx
  404cb4:	sar    esi,0x1f
  404cb7:	shr    esi,0x1e
  404cba:	add    esi,edx
  404cbc:	sar    esi,0x2
  404cbf:	mov    DWORD PTR [rcx+rax*4],esi
  404cc2:	mov    rax,QWORD PTR [rbx+0x1d0]
  404cc9:	mov    rdi,QWORD PTR [rax]
  404ccc:	xor    esi,esi
  404cce:	call   QWORD PTR [rax+0x8]
  404cd1:	mov    rdx,QWORD PTR [rbx+0x8]
  404cd5:	mov    rcx,QWORD PTR [rbx+0x10]
  404cd9:	lea    rax,[rbx+0x8]
  404cdd:	test   rcx,rcx
  404ce0:	je     404ceb <rb_strcasecmp@plt+0x27cb>
  404ce2:	mov    QWORD PTR [rcx+0x8],rdx
  404ce6:	mov    rdx,QWORD PTR [rax]
  404ce9:	jmp    404cf2 <rb_strcasecmp@plt+0x27d2>
  404ceb:	mov    QWORD PTR [rip+0xf25e],rdx        # 413f50 <rb_strcasecmp@plt+0x11a30>
  404cf2:	test   rdx,rdx
  404cf5:	lea    rdx,[rdx+0x10]
  404cf9:	lea    rsi,[rip+0xf248]        # 413f48 <rb_strcasecmp@plt+0x11a28>
  404d00:	cmove  rdx,rsi
  404d04:	mov    QWORD PTR [rdx],rcx
  404d07:	vpxor  xmm0,xmm0,xmm0
  404d0b:	vmovdqu XMMWORD PTR [rax],xmm0
  404d0f:	add    QWORD PTR [rip+0xf241],0xffffffffffffffff        # 413f58 <rb_strcasecmp@plt+0x11a38>
  404d17:	mov    rdi,QWORD PTR [rbx+0x1c8]
  404d1e:	test   rdi,rdi
  404d21:	je     404d28 <rb_strcasecmp@plt+0x2808>
  404d23:	call   4021f0 <free@plt>
  404d28:	mov    rdi,rbx
  404d2b:	call   4021f0 <free@plt>
  404d30:	jmp    404f22 <rb_strcasecmp@plt+0x2a02>
  404d35:	cmp    BYTE PTR [rbx+0x28],0xc
  404d39:	jne    404e07 <rb_strcasecmp@plt+0x28e7>
  404d3f:	lea    rdi,[rsp+0x90]
  404d47:	lea    rcx,[rsp+0x4a0]
  404d4f:	mov    r8d,0x163
  404d55:	mov    rsi,rbp
  404d58:	mov    rdx,r14
  404d5b:	call   405630 <rb_strcasecmp@plt+0x3110>
  404d60:	test   eax,eax
  404d62:	jle    404e07 <rb_strcasecmp@plt+0x28e7>
  404d68:	mov    rdi,QWORD PTR [rbx+0x1c8]
  404d6f:	lea    rsi,[rsp+0x4a0]
  404d77:	mov    edx,0x100
  404d7c:	call   4021c0 <rb_strlcpy@plt>
  404d81:	cmp    BYTE PTR [rbx+0x28],0xc
  404d85:	je     404dd8 <rb_strcasecmp@plt+0x28b8>
  404d87:	jmp    404e22 <rb_strcasecmp@plt+0x2902>
  404d8c:	cmp    eax,0x10
  404d8f:	jne    404e07 <rb_strcasecmp@plt+0x28e7>
  404d91:	cmp    BYTE PTR [rbx+0x28],0x1c
  404d95:	jne    404e07 <rb_strcasecmp@plt+0x28e7>
  404d97:	mov    WORD PTR [rbx+0x148],0xa
  404da0:	vmovdqu xmm0,XMMWORD PTR [r14]
  404da5:	vmovdqu XMMWORD PTR [rbx+0x150],xmm0
  404dad:	cmp    BYTE PTR [rbx+0x28],0xc
  404db1:	je     404dd8 <rb_strcasecmp@plt+0x28b8>
  404db3:	jmp    404e22 <rb_strcasecmp@plt+0x2902>
  404db5:	cmp    eax,0x4
  404db8:	jne    404e07 <rb_strcasecmp@plt+0x28e7>
  404dba:	cmp    BYTE PTR [rbx+0x28],0x1
  404dbe:	jne    404e07 <rb_strcasecmp@plt+0x28e7>
  404dc0:	mov    WORD PTR [rbx+0x148],0x2
  404dc9:	mov    eax,DWORD PTR [r14]
  404dcc:	mov    DWORD PTR [rbx+0x14c],eax
  404dd2:	cmp    BYTE PTR [rbx+0x28],0xc
  404dd6:	jne    404e22 <rb_strcasecmp@plt+0x2902>
  404dd8:	mov    rsi,QWORD PTR [rbx+0x1c8]
  404ddf:	test   rsi,rsi
  404de2:	je     404e07 <rb_strcasecmp@plt+0x28e7>
  404de4:	movzx  eax,WORD PTR [rbx+0x148]
  404deb:	mov    rdi,QWORD PTR [rbx+0x1d0]
  404df2:	xor    edx,edx
  404df4:	cmp    eax,0xa
  404df7:	jne    404e9c <rb_strcasecmp@plt+0x297c>
  404dfd:	mov    ecx,0x1c
  404e02:	jmp    404ea1 <rb_strcasecmp@plt+0x2981>
  404e07:	mov    eax,r13d
  404e0a:	lea    rcx,[rip+0xf10f]        # 413f20 <rb_strcasecmp@plt+0x11a00>
  404e11:	add    DWORD PTR [rcx+rax*4],0x1
  404e15:	mov    rdi,rbx
  404e18:	call   404f40 <rb_strcasecmp@plt+0x2a20>
  404e1d:	jmp    404f22 <rb_strcasecmp@plt+0x2a02>
  404e22:	mov    edi,0x1
  404e27:	mov    esi,0x88
  404e2c:	call   402440 <calloc@plt>
  404e31:	test   rax,rax
  404e34:	je     404f37 <rb_strcasecmp@plt+0x2a17>
  404e3a:	mov    r14,rax
  404e3d:	mov    rax,QWORD PTR [rbx+0x1c8]
  404e44:	mov    QWORD PTR [r14],rax
  404e47:	vmovdqu ymm0,YMMWORD PTR [rbx+0x148]
  404e4f:	vmovups ymm1,YMMWORD PTR [rbx+0x168]
  404e57:	vmovups ymm2,YMMWORD PTR [rbx+0x188]
  404e5f:	vmovups ymm3,YMMWORD PTR [rbx+0x1a8]
  404e67:	vmovups YMMWORD PTR [r14+0x68],ymm3
  404e6d:	vmovups YMMWORD PTR [r14+0x48],ymm2
  404e73:	vmovups YMMWORD PTR [r14+0x28],ymm1
  404e79:	vmovdqu YMMWORD PTR [r14+0x8],ymm0
  404e7f:	mov    rax,QWORD PTR [rbx+0x1d0]
  404e86:	mov    rdi,QWORD PTR [rax]
  404e89:	mov    rsi,r14
  404e8c:	vzeroupper 
  404e8f:	call   QWORD PTR [rax+0x8]
  404e92:	mov    rdi,r14
  404e95:	call   4021f0 <free@plt>
  404e9a:	jmp    404ea6 <rb_strcasecmp@plt+0x2986>
  404e9c:	mov    ecx,0x1
  404ea1:	call   405010 <rb_strcasecmp@plt+0x2af0>
  404ea6:	mov    rdx,QWORD PTR [rbx+0x8]
  404eaa:	mov    rcx,QWORD PTR [rbx+0x10]
  404eae:	lea    rax,[rbx+0x8]
  404eb2:	test   rcx,rcx
  404eb5:	je     404ec0 <rb_strcasecmp@plt+0x29a0>
  404eb7:	mov    QWORD PTR [rcx+0x8],rdx
  404ebb:	mov    rdx,QWORD PTR [rax]
  404ebe:	jmp    404ec7 <rb_strcasecmp@plt+0x29a7>
  404ec0:	mov    QWORD PTR [rip+0xf089],rdx        # 413f50 <rb_strcasecmp@plt+0x11a30>
  404ec7:	test   rdx,rdx
  404eca:	lea    rdx,[rdx+0x10]
  404ece:	lea    rsi,[rip+0xf073]        # 413f48 <rb_strcasecmp@plt+0x11a28>
  404ed5:	cmove  rdx,rsi
  404ed9:	mov    QWORD PTR [rdx],rcx
  404edc:	vpxor  xmm0,xmm0,xmm0
  404ee0:	vmovdqu XMMWORD PTR [rax],xmm0
  404ee4:	add    QWORD PTR [rip+0xf06c],0xffffffffffffffff        # 413f58 <rb_strcasecmp@plt+0x11a38>
  404eec:	mov    rdi,QWORD PTR [rbx+0x1c8]
  404ef3:	test   rdi,rdi
  404ef6:	je     404efd <rb_strcasecmp@plt+0x29dd>
  404ef8:	call   4021f0 <free@plt>
  404efd:	mov    rdi,rbx
  404f00:	call   4021f0 <free@plt>
  404f05:	mov    eax,r13d
  404f08:	lea    rcx,[rip+0xf011]        # 413f20 <rb_strcasecmp@plt+0x11a00>
  404f0f:	mov    edx,DWORD PTR [rcx+rax*4]
  404f12:	mov    esi,edx
  404f14:	sar    esi,0x1f
  404f17:	shr    esi,0x1e
  404f1a:	add    esi,edx
  404f1c:	sar    esi,0x2
  404f1f:	mov    DWORD PTR [rcx+rax*4],esi
  404f22:	mov    eax,r15d
  404f25:	add    rsp,0x608
  404f2c:	pop    rbx
  404f2d:	pop    r12
  404f2f:	pop    r13
  404f31:	pop    r14
  404f33:	pop    r15
  404f35:	pop    rbp
  404f36:	ret    
  404f37:	call   402380 <rb_outofmemory@plt>
  404f3c:	nop    DWORD PTR [rax+0x0]
  404f40:	push   rbx
  404f41:	mov    rbx,rdi
  404f44:	mov    al,BYTE PTR [rdi+0x129]
  404f4a:	add    al,0xff
  404f4c:	mov    BYTE PTR [rdi+0x129],al
  404f52:	test   al,al
  404f54:	jle    404f8d <rb_strcasecmp@plt+0x2a6d>
  404f56:	movsx  ecx,BYTE PTR [rbx+0x28]
  404f5a:	cmp    ecx,0x1
  404f5d:	je     404fb6 <rb_strcasecmp@plt+0x2a96>
  404f5f:	cmp    ecx,0x1c
  404f62:	je     404fb6 <rb_strcasecmp@plt+0x2a96>
  404f64:	cmp    ecx,0xc
  404f67:	jne    404fc5 <rb_strcasecmp@plt+0x2aa5>
  404f69:	lea    rdx,[rbx+0x148]
  404f70:	lea    rdi,[rbx+0x29]
  404f74:	mov    esi,0x100
  404f79:	xor    ecx,ecx
  404f7b:	call   404560 <rb_strcasecmp@plt+0x2040>
  404f80:	mov    BYTE PTR [rbx+0x28],0xc
  404f84:	mov    rdi,rbx
  404f87:	pop    rbx
  404f88:	jmp    405180 <rb_strcasecmp@plt+0x2c60>
  404f8d:	mov    rax,QWORD PTR [rbx+0x1d0]
  404f94:	mov    rdi,QWORD PTR [rax]
  404f97:	xor    esi,esi
  404f99:	call   QWORD PTR [rax+0x8]
  404f9c:	mov    rdx,QWORD PTR [rbx+0x8]
  404fa0:	mov    rcx,QWORD PTR [rbx+0x10]
  404fa4:	lea    rax,[rbx+0x8]
  404fa8:	test   rcx,rcx
  404fab:	je     404fc7 <rb_strcasecmp@plt+0x2aa7>
  404fad:	mov    QWORD PTR [rcx+0x8],rdx
  404fb1:	mov    rdx,QWORD PTR [rax]
  404fb4:	jmp    404fce <rb_strcasecmp@plt+0x2aae>
  404fb6:	mov    rsi,QWORD PTR [rbx+0x1c8]
  404fbd:	xor    edi,edi
  404fbf:	mov    rdx,rbx
  404fc2:	pop    rbx
  404fc3:	jmp    405010 <rb_strcasecmp@plt+0x2af0>
  404fc5:	pop    rbx
  404fc6:	ret    
  404fc7:	mov    QWORD PTR [rip+0xef82],rdx        # 413f50 <rb_strcasecmp@plt+0x11a30>
  404fce:	test   rdx,rdx
  404fd1:	lea    rdx,[rdx+0x10]
  404fd5:	lea    rsi,[rip+0xef6c]        # 413f48 <rb_strcasecmp@plt+0x11a28>
  404fdc:	cmove  rdx,rsi
  404fe0:	mov    QWORD PTR [rdx],rcx
  404fe3:	vxorps xmm0,xmm0,xmm0
  404fe7:	vmovups XMMWORD PTR [rax],xmm0
  404feb:	add    QWORD PTR [rip+0xef65],0xffffffffffffffff        # 413f58 <rb_strcasecmp@plt+0x11a38>
  404ff3:	mov    rdi,QWORD PTR [rbx+0x1c8]
  404ffa:	test   rdi,rdi
  404ffd:	je     405004 <rb_strcasecmp@plt+0x2ae4>
  404fff:	call   4021f0 <free@plt>
  405004:	mov    rdi,rbx
  405007:	pop    rbx
  405008:	jmp    4021f0 <free@plt>
  40500d:	nop    DWORD PTR [rax]
  405010:	push   rbp
  405011:	push   r15
  405013:	push   r14
  405015:	push   rbx
  405016:	push   rax
  405017:	mov    r14d,ecx
  40501a:	mov    rbx,rdx
  40501d:	mov    r15,rsi
  405020:	test   rdx,rdx
  405023:	jne    405058 <rb_strcasecmp@plt+0x2b38>
  405025:	call   405090 <rb_strcasecmp@plt+0x2b70>
  40502a:	mov    rbx,rax
  40502d:	mov    rdi,r15
  405030:	call   402200 <strlen@plt>
  405035:	lea    rdi,[rax+0x1]
  405039:	call   402180 <malloc@plt>
  40503e:	test   rax,rax
  405041:	je     40507f <rb_strcasecmp@plt+0x2b5f>
  405043:	mov    rbp,rax
  405046:	mov    rdi,rax
  405049:	mov    rsi,r15
  40504c:	call   402410 <strcpy@plt>
  405051:	mov    QWORD PTR [rbx+0x1c8],rbp
  405058:	lea    rdi,[rbx+0x29]
  40505c:	mov    edx,0x100
  405061:	mov    rsi,r15
  405064:	call   4021c0 <rb_strlcpy@plt>
  405069:	mov    BYTE PTR [rbx+0x28],r14b
  40506d:	mov    rdi,rbx
  405070:	add    rsp,0x8
  405074:	pop    rbx
  405075:	pop    r14
  405077:	pop    r15
  405079:	pop    rbp
  40507a:	jmp    405180 <rb_strcasecmp@plt+0x2c60>
  40507f:	call   402380 <rb_outofmemory@plt>
  405084:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40508e:	xchg   ax,ax
  405090:	push   r14
  405092:	push   rbx
  405093:	push   rax
  405094:	mov    r14,rdi
  405097:	mov    edi,0x1
  40509c:	mov    esi,0x1d8
  4050a1:	call   402440 <calloc@plt>
  4050a6:	test   rax,rax
  4050a9:	je     405172 <rb_strcasecmp@plt+0x2c52>
  4050af:	mov    rbx,rax
  4050b2:	call   402280 <rb_current_time@plt>
  4050b7:	mov    QWORD PTR [rbx+0x130],rax
  4050be:	mov    BYTE PTR [rbx+0x129],0x3
  4050c5:	mov    QWORD PTR [rbx+0x138],0x4
  4050d0:	mov    QWORD PTR [rbx+0x1d0],r14
  4050d7:	lea    r14,[rsp+0x6]
  4050dc:	mov    esi,0x2
  4050e1:	mov    rdi,r14
  4050e4:	call   4024a0 <rb_get_random@plt>
  4050e9:	movzx  ecx,WORD PTR [rsp+0x6]
  4050ee:	mov    rax,QWORD PTR [rip+0xee53]        # 413f48 <rb_strcasecmp@plt+0x11a28>
  4050f5:	mov    rdx,rax
  4050f8:	test   rax,rax
  4050fb:	je     405125 <rb_strcasecmp@plt+0x2c05>
  4050fd:	nop    DWORD PTR [rax]
  405100:	mov    rsi,QWORD PTR [rdx]
  405103:	cmp    DWORD PTR [rsi+0x18],ecx
  405106:	je     405120 <rb_strcasecmp@plt+0x2c00>
  405108:	mov    rdx,QWORD PTR [rdx+0x10]
  40510c:	test   rdx,rdx
  40510f:	jne    405100 <rb_strcasecmp@plt+0x2be0>
  405111:	jmp    405125 <rb_strcasecmp@plt+0x2c05>
  405113:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40511d:	nop    DWORD PTR [rax]
  405120:	test   rsi,rsi
  405123:	jne    4050dc <rb_strcasecmp@plt+0x2bbc>
  405125:	mov    DWORD PTR [rbx+0x18],ecx
  405128:	mov    QWORD PTR [rbx],rbx
  40512b:	mov    QWORD PTR [rbx+0x8],0x0
  405133:	mov    QWORD PTR [rbx+0x10],rax
  405137:	test   rax,rax
  40513a:	je     405145 <rb_strcasecmp@plt+0x2c25>
  40513c:	add    rax,0x8
  405140:	mov    QWORD PTR [rax],rbx
  405143:	jmp    40514f <rb_strcasecmp@plt+0x2c2f>
  405145:	cmp    QWORD PTR [rip+0xee03],0x0        # 413f50 <rb_strcasecmp@plt+0x11a30>
  40514d:	je     405169 <rb_strcasecmp@plt+0x2c49>
  40514f:	mov    QWORD PTR [rip+0xedf2],rbx        # 413f48 <rb_strcasecmp@plt+0x11a28>
  405156:	add    QWORD PTR [rip+0xedfa],0x1        # 413f58 <rb_strcasecmp@plt+0x11a38>
  40515e:	mov    rax,rbx
  405161:	add    rsp,0x8
  405165:	pop    rbx
  405166:	pop    r14
  405168:	ret    
  405169:	lea    rax,[rip+0xede0]        # 413f50 <rb_strcasecmp@plt+0x11a30>
  405170:	jmp    405140 <rb_strcasecmp@plt+0x2c20>
  405172:	call   402380 <rb_outofmemory@plt>
  405177:	nop    WORD PTR [rax+rax*1+0x0]
  405180:	push   rbp
  405181:	push   r15
  405183:	push   r14
  405185:	push   r13
  405187:	push   r12
  405189:	push   rbx
  40518a:	sub    rsp,0x408
  405191:	mov    rbp,rdi
  405194:	mov    rbx,rsp
  405197:	xor    esi,esi
  405199:	mov    edx,0x400
  40519e:	mov    rdi,rbx
  4051a1:	call   402040 <memset@plt>
  4051a6:	lea    rdi,[rbp+0x29]
  4051aa:	movsx  edx,BYTE PTR [rbp+0x28]
  4051ae:	mov    esi,0x1
  4051b3:	mov    r8d,0x400
  4051b9:	mov    rcx,rbx
  4051bc:	call   405ca0 <rb_strcasecmp@plt+0x3780>
  4051c1:	test   eax,eax
  4051c3:	jle    405342 <rb_strcasecmp@plt+0x2e22>
  4051c9:	movzx  ecx,WORD PTR [rbp+0x18]
  4051cd:	mov    WORD PTR [rsp],cx
  4051d1:	mov    dl,BYTE PTR [rbp+0x12a]
  4051d7:	add    dl,0x1
  4051da:	mov    BYTE PTR [rbp+0x12a],dl
  4051e0:	add    DWORD PTR [rip+0xed79],0x1        # 413f60 <rb_strcasecmp@plt+0x11a40>
  4051e7:	lea    rcx,[rip+0xed76]        # 413f64 <rb_strcasecmp@plt+0x11a44>
  4051ee:	mov    ecx,DWORD PTR [rcx]
  4051f0:	test   ecx,ecx
  4051f2:	jle    405342 <rb_strcasecmp@plt+0x2e22>
  4051f8:	mov    rbx,rbp
  4051fb:	movsx  r13d,dl
  4051ff:	add    r13d,0xffffffff
  405203:	movsxd r14,eax
  405206:	xor    r15d,r15d
  405209:	nop    DWORD PTR [rax+0x0]
  405210:	lea    eax,[r15+r13*1]
  405214:	cdq    
  405215:	idiv   ecx
  405217:	mov    ebp,edx
  405219:	movsxd r12,edx
  40521c:	lea    rax,[rip+0xecfd]        # 413f20 <rb_strcasecmp@plt+0x11a00>
  405223:	mov    edx,DWORD PTR [rax+r12*4]
  405227:	test   edx,edx
  405229:	je     405252 <rb_strcasecmp@plt+0x2d32>
  40522b:	mov    eax,DWORD PTR [rip+0xed2f]        # 413f60 <rb_strcasecmp@plt+0x11a40>
  405231:	add    edx,0xffffffff
  405234:	mov    esi,0xf3
  405239:	cmp    edx,0x3
  40523c:	ja     40524b <rb_strcasecmp@plt+0x2d2b>
  40523e:	movsxd rdx,edx
  405241:	lea    rsi,[rip+0x548c]        # 40a6d4 <rb_strcasecmp@plt+0x81b4>
  405248:	mov    esi,DWORD PTR [rsi+rdx*4]
  40524b:	cdq    
  40524c:	idiv   esi
  40524e:	test   edx,edx
  405250:	jne    4052a5 <rb_strcasecmp@plt+0x2d85>
  405252:	mov    rdi,QWORD PTR [rip+0xecb7]        # 413f10 <rb_strcasecmp@plt+0x119f0>
  405259:	call   4020d0 <rb_get_fd@plt>
  40525e:	shl    r12,0x7
  405262:	lea    rcx,[rip+0xeff7]        # 414260 <rb_strcasecmp@plt+0x11d40>
  405269:	lea    r8,[rcx+r12*1]
  40526d:	movzx  ecx,WORD PTR [rcx+r12*1]
  405272:	cmp    ecx,0x2
  405275:	mov    r9d,0x1c
  40527b:	mov    ecx,0x10
  405280:	cmove  r9d,ecx
  405284:	xor    ecx,ecx
  405286:	mov    edi,eax
  405288:	mov    rsi,rsp
  40528b:	mov    rdx,r14
  40528e:	call   4024d0 <sendto@plt>
  405293:	cmp    rax,r14
  405296:	je     405332 <rb_strcasecmp@plt+0x2e12>
  40529c:	lea    rax,[rip+0xecc1]        # 413f64 <rb_strcasecmp@plt+0x11a44>
  4052a3:	mov    ecx,DWORD PTR [rax]
  4052a5:	add    r15d,0x1
  4052a9:	cmp    r15d,ecx
  4052ac:	jl     405210 <rb_strcasecmp@plt+0x2cf0>
  4052b2:	test   ecx,ecx
  4052b4:	jle    405342 <rb_strcasecmp@plt+0x2e22>
  4052ba:	mov    r12,rbx
  4052bd:	xor    r15d,r15d
  4052c0:	lea    eax,[r15+r13*1]
  4052c4:	cdq    
  4052c5:	idiv   ecx
  4052c7:	movsxd rbx,edx
  4052ca:	lea    rax,[rip+0xec4f]        # 413f20 <rb_strcasecmp@plt+0x11a00>
  4052d1:	cmp    DWORD PTR [rax+rbx*4],0x0
  4052d5:	je     405327 <rb_strcasecmp@plt+0x2e07>
  4052d7:	mov    ebp,edx
  4052d9:	mov    rdi,QWORD PTR [rip+0xec30]        # 413f10 <rb_strcasecmp@plt+0x119f0>
  4052e0:	call   4020d0 <rb_get_fd@plt>
  4052e5:	shl    rbx,0x7
  4052e9:	lea    rcx,[rip+0xef70]        # 414260 <rb_strcasecmp@plt+0x11d40>
  4052f0:	lea    r8,[rcx+rbx*1]
  4052f4:	movzx  ecx,WORD PTR [rcx+rbx*1]
  4052f8:	cmp    ecx,0x2
  4052fb:	mov    r9d,0x1c
  405301:	mov    ecx,0x10
  405306:	cmove  r9d,ecx
  40530a:	xor    ecx,ecx
  40530c:	mov    edi,eax
  40530e:	mov    rsi,rsp
  405311:	mov    rdx,r14
  405314:	call   4024d0 <sendto@plt>
  405319:	cmp    rax,r14
  40531c:	je     405335 <rb_strcasecmp@plt+0x2e15>
  40531e:	lea    rax,[rip+0xec3f]        # 413f64 <rb_strcasecmp@plt+0x11a44>
  405325:	mov    ecx,DWORD PTR [rax]
  405327:	add    r15d,0x1
  40532b:	cmp    r15d,ecx
  40532e:	jl     4052c0 <rb_strcasecmp@plt+0x2da0>
  405330:	jmp    405342 <rb_strcasecmp@plt+0x2e22>
  405332:	mov    r12,rbx
  405335:	cmp    ebp,0xffffffff
  405338:	je     405342 <rb_strcasecmp@plt+0x2e22>
  40533a:	mov    DWORD PTR [r12+0x140],ebp
  405342:	add    rsp,0x408
  405349:	pop    rbx
  40534a:	pop    r12
  40534c:	pop    r13
  40534e:	pop    r14
  405350:	pop    r15
  405352:	pop    rbp
  405353:	ret    
  405354:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40535e:	xchg   ax,ax
  405360:	push   rbp
  405361:	mov    rbp,rsp
  405364:	push   r15
  405366:	push   r14
  405368:	push   r13
  40536a:	push   r12
  40536c:	push   rbx
  40536d:	and    rsp,0xffffffffffffffe0
  405371:	sub    rsp,0x100
  405378:	lea    r15,[rip+0xebe5]        # 413f64 <rb_strcasecmp@plt+0x11a44>
  40537f:	mov    DWORD PTR [r15],0x0
  405386:	lea    rdi,[rip+0x539d]        # 40a72a <rb_strcasecmp@plt+0x820a>
  40538d:	lea    rsi,[rip+0x5943]        # 40acd7 <rb_strcasecmp@plt+0x87b7>
  405394:	call   402190 <fopen@plt>
  405399:	test   rax,rax
  40539c:	je     40559a <rb_strcasecmp@plt+0x307a>
  4053a2:	mov    rbx,rax
  4053a5:	lea    rdi,[rsp+0x60]
  4053aa:	mov    esi,0x80
  4053af:	mov    rdx,rax
  4053b2:	call   402340 <fgets_unlocked@plt>
  4053b7:	test   rax,rax
  4053ba:	je     40558b <rb_strcasecmp@plt+0x306b>
  4053c0:	lea    r14,[rip+0x5b8a]        # 40af51 <rb_strcasecmp@plt+0x8a31>
  4053c7:	lea    r15,[rsp+0x60]
  4053cc:	jmp    405520 <rb_strcasecmp@plt+0x3000>
  4053d1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4053db:	nop    DWORD PTR [rax+rax*1+0x0]
  4053e0:	movsx  rdx,BYTE PTR [r12+0x1]
  4053e6:	add    r12,0x1
  4053ea:	test   rdx,rdx
  4053ed:	je     4053fe <rb_strcasecmp@plt+0x2ede>
  4053ef:	movzx  esi,WORD PTR [rcx+rdx*2]
  4053f3:	and    esi,0x2000
  4053f9:	test   si,si
  4053fc:	je     4053e0 <rb_strcasecmp@plt+0x2ec0>
  4053fe:	test   dl,dl
  405400:	je     405576 <rb_strcasecmp@plt+0x3056>
  405406:	mov    BYTE PTR [r12],0x0
  40540b:	mov    rax,QWORD PTR [rax]
  40540e:	xchg   ax,ax
  405410:	movsx  rcx,BYTE PTR [r12+0x1]
  405416:	add    r12,0x1
  40541a:	test   BYTE PTR [rax+rcx*2+0x1],0x20
  40541f:	jne    405410 <rb_strcasecmp@plt+0x2ef0>
  405421:	mov    rdi,r12
  405424:	lea    rsi,[rip+0x5310]        # 40a73b <rb_strcasecmp@plt+0x821b>
  40542b:	call   402150 <strpbrk@plt>
  405430:	test   rax,rax
  405433:	je     405438 <rb_strcasecmp@plt+0x2f18>
  405435:	mov    BYTE PTR [rax],0x0
  405438:	mov    rdi,r13
  40543b:	lea    rsi,[rip+0x52fc]        # 40a73e <rb_strcasecmp@plt+0x821e>
  405442:	call   402520 <rb_strcasecmp@plt>
  405447:	test   eax,eax
  405449:	je     405506 <rb_strcasecmp@plt+0x2fe6>
  40544f:	mov    rdi,r13
  405452:	lea    rsi,[rip+0x52ec]        # 40a745 <rb_strcasecmp@plt+0x8225>
  405459:	call   402520 <rb_strcasecmp@plt>
  40545e:	test   eax,eax
  405460:	jne    405576 <rb_strcasecmp@plt+0x3056>
  405466:	lea    rax,[rip+0xeaf7]        # 413f64 <rb_strcasecmp@plt+0x11a44>
  40546d:	cmp    DWORD PTR [rax],0x9
  405470:	jg     405576 <rb_strcasecmp@plt+0x3056>
  405476:	vxorps xmm0,xmm0,xmm0
  40547a:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  405480:	vmovups YMMWORD PTR [rsp+0x30],ymm0
  405486:	mov    DWORD PTR [rsp+0x28],0x2
  40548e:	mov    DWORD PTR [rsp+0x20],0x5
  405496:	mov    rdi,r12
  405499:	lea    rsi,[rip+0x529e]        # 40a73e <rb_strcasecmp@plt+0x821e>
  4054a0:	lea    rdx,[rsp+0x20]
  4054a5:	lea    rcx,[rsp+0x18]
  4054aa:	vzeroupper 
  4054ad:	call   402100 <getaddrinfo@plt>
  4054b2:	test   eax,eax
  4054b4:	jne    405576 <rb_strcasecmp@plt+0x3056>
  4054ba:	mov    r12,QWORD PTR [rsp+0x18]
  4054bf:	test   r12,r12
  4054c2:	je     405576 <rb_strcasecmp@plt+0x3056>
  4054c8:	lea    rax,[rip+0xea95]        # 413f64 <rb_strcasecmp@plt+0x11a44>
  4054cf:	movsxd r13,DWORD PTR [rax]
  4054d2:	mov    rdi,r13
  4054d5:	shl    rdi,0x7
  4054d9:	add    rdi,QWORD PTR [rip+0x8af8]        # 40dfd8 <rb_strcasecmp@plt+0xbab8>
  4054e0:	mov    rsi,QWORD PTR [r12+0x18]
  4054e5:	mov    edx,DWORD PTR [r12+0x10]
  4054ea:	call   402510 <memcpy@plt>
  4054ef:	lea    eax,[r13+0x1]
  4054f3:	lea    rcx,[rip+0xea6a]        # 413f64 <rb_strcasecmp@plt+0x11a44>
  4054fa:	mov    DWORD PTR [rcx],eax
  4054fc:	mov    rdi,r12
  4054ff:	call   4021e0 <freeaddrinfo@plt>
  405504:	jmp    405576 <rb_strcasecmp@plt+0x3056>
  405506:	mov    edx,0x100
  40550b:	lea    rdi,[rip+0xec4e]        # 414160 <rb_strcasecmp@plt+0x11c40>
  405512:	mov    rsi,r12
  405515:	call   4021c0 <rb_strlcpy@plt>
  40551a:	jmp    405576 <rb_strcasecmp@plt+0x3056>
  40551c:	nop    DWORD PTR [rax+0x0]
  405520:	mov    rdi,r15
  405523:	mov    rsi,r14
  405526:	call   402150 <strpbrk@plt>
  40552b:	test   rax,rax
  40552e:	je     405533 <rb_strcasecmp@plt+0x3013>
  405530:	mov    BYTE PTR [rax],0x0
  405533:	call   402230 <__ctype_b_loc@plt>
  405538:	mov    rcx,QWORD PTR [rax]
  40553b:	lea    r13,[rsp+0x5f]
  405540:	movsx  rdx,BYTE PTR [r13+0x1]
  405545:	add    r13,0x1
  405549:	test   BYTE PTR [rcx+rdx*2+0x1],0x20
  40554e:	jne    405540 <rb_strcasecmp@plt+0x3020>
  405550:	mov    r12,r13
  405553:	cmp    dl,0x3b
  405556:	ja     4053e0 <rb_strcasecmp@plt+0x2ec0>
  40555c:	movzx  edx,dl
  40555f:	movabs rsi,0x800000800000001
  405569:	bt     rsi,rdx
  40556d:	mov    r12,r13
  405570:	jae    4053e0 <rb_strcasecmp@plt+0x2ec0>
  405576:	mov    esi,0x80
  40557b:	mov    rdi,r15
  40557e:	mov    rdx,rbx
  405581:	call   402340 <fgets_unlocked@plt>
  405586:	test   rax,rax
  405589:	jne    405520 <rb_strcasecmp@plt+0x3000>
  40558b:	mov    rdi,rbx
  40558e:	call   402460 <fclose@plt>
  405593:	lea    r15,[rip+0xe9ca]        # 413f64 <rb_strcasecmp@plt+0x11a44>
  40559a:	cmp    DWORD PTR [r15],0x0
  40559e:	jne    40561a <rb_strcasecmp@plt+0x30fa>
  4055a0:	vxorps xmm0,xmm0,xmm0
  4055a4:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  4055aa:	vmovups YMMWORD PTR [rsp+0x70],ymm0
  4055b0:	mov    DWORD PTR [rsp+0x68],0x2
  4055b8:	mov    DWORD PTR [rsp+0x60],0x5
  4055c0:	lea    rdi,[rip+0x5159]        # 40a720 <rb_strcasecmp@plt+0x8200>
  4055c7:	lea    rsi,[rip+0x5170]        # 40a73e <rb_strcasecmp@plt+0x821e>
  4055ce:	lea    rdx,[rsp+0x60]
  4055d3:	lea    rcx,[rsp+0x20]
  4055d8:	vzeroupper 
  4055db:	call   402100 <getaddrinfo@plt>
  4055e0:	test   eax,eax
  4055e2:	jne    40561a <rb_strcasecmp@plt+0x30fa>
  4055e4:	mov    rbx,QWORD PTR [rsp+0x20]
  4055e9:	test   rbx,rbx
  4055ec:	je     40561a <rb_strcasecmp@plt+0x30fa>
  4055ee:	movsxd r14,DWORD PTR [r15]
  4055f1:	mov    rdi,r14
  4055f4:	shl    rdi,0x7
  4055f8:	add    rdi,QWORD PTR [rip+0x89d9]        # 40dfd8 <rb_strcasecmp@plt+0xbab8>
  4055ff:	mov    rsi,QWORD PTR [rbx+0x18]
  405603:	mov    edx,DWORD PTR [rbx+0x10]
  405606:	call   402510 <memcpy@plt>
  40560b:	lea    eax,[r14+0x1]
  40560f:	mov    DWORD PTR [r15],eax
  405612:	mov    rdi,rbx
  405615:	call   4021e0 <freeaddrinfo@plt>
  40561a:	xor    eax,eax
  40561c:	lea    rsp,[rbp-0x28]
  405620:	pop    rbx
  405621:	pop    r12
  405623:	pop    r13
  405625:	pop    r14
  405627:	pop    r15
  405629:	pop    rbp
  40562a:	ret    
  40562b:	nop    DWORD PTR [rax+rax*1+0x0]
  405630:	push   rbp
  405631:	push   r15
  405633:	push   r14
  405635:	push   r13
  405637:	push   r12
  405639:	push   rbx
  40563a:	sub    rsp,0x148
  405641:	cmp    rdx,rdi
  405644:	jb     405b58 <rb_strcasecmp@plt+0x3638>
  40564a:	mov    r12,rsi
  40564d:	cmp    rdx,rsi
  405650:	jae    405b58 <rb_strcasecmp@plt+0x3638>
  405656:	movsxd r9,r8d
  405659:	mov    bl,BYTE PTR [rdx]
  40565b:	test   bl,bl
  40565d:	je     405b11 <rb_strcasecmp@plt+0x35f1>
  405663:	mov    DWORD PTR [rsp+0x1c],r8d
  405668:	mov    QWORD PTR [rsp+0x10],r9
  40566d:	mov    QWORD PTR [rsp+0x38],rcx
  405672:	lea    rbp,[rsp+0x40]
  405677:	mov    rax,rdx
  40567a:	mov    QWORD PTR [rsp+0x20],rdx
  40567f:	lea    rsi,[rdx+0x1]
  405683:	mov    rax,r12
  405686:	mov    QWORD PTR [rsp+0x30],rdi
  40568b:	sub    rax,rdi
  40568e:	mov    QWORD PTR [rsp+0x28],rax
  405693:	mov    DWORD PTR [rsp+0xc],0xffffffff
  40569b:	xor    r13d,r13d
  40569e:	xor    eax,eax
  4056a0:	mov    edx,ebx
  4056a2:	and    dl,0xc0
  4056a5:	cmp    dl,0xc0
  4056a8:	je     4056e0 <rb_strcasecmp@plt+0x31c0>
  4056aa:	test   dl,dl
  4056ac:	je     405740 <rb_strcasecmp@plt+0x3220>
  4056b2:	cmp    dl,0x40
  4056b5:	jne    405b58 <rb_strcasecmp@plt+0x3638>
  4056bb:	cmp    bl,0x41
  4056be:	jne    405b58 <rb_strcasecmp@plt+0x3638>
  4056c4:	movzx  edi,BYTE PTR [rsi]
  4056c7:	lea    edx,[rdi+0x7]
  4056ca:	shr    edx,0x3
  4056cd:	add    edx,0x1
  4056d0:	test   edi,edi
  4056d2:	mov    ecx,0x21
  4056d7:	cmove  edx,ecx
  4056da:	jmp    405743 <rb_strcasecmp@plt+0x3223>
  4056dc:	nop    DWORD PTR [rax+0x0]
  4056e0:	cmp    rsi,r12
  4056e3:	jae    405b58 <rb_strcasecmp@plt+0x3638>
  4056e9:	and    bl,0x3f
  4056ec:	movzx  ecx,bl
  4056ef:	shl    rcx,0x8
  4056f3:	movzx  r14d,BYTE PTR [rsi]
  4056f7:	or     r14,rcx
  4056fa:	add    r14,QWORD PTR [rsp+0x30]
  4056ff:	cmp    r14,r12
  405702:	jae    405b58 <rb_strcasecmp@plt+0x3638>
  405708:	sub    esi,DWORD PTR [rsp+0x20]
  40570c:	add    esi,0x1
  40570f:	mov    ecx,DWORD PTR [rsp+0xc]
  405713:	test   ecx,ecx
  405715:	cmovns esi,ecx
  405718:	add    r13d,0x2
  40571c:	movsxd rcx,r13d
  40571f:	mov    edx,esi
  405721:	mov    DWORD PTR [rsp+0xc],esi
  405725:	cmp    QWORD PTR [rsp+0x28],rcx
  40572a:	jg     405786 <rb_strcasecmp@plt+0x3266>
  40572c:	jmp    405b58 <rb_strcasecmp@plt+0x3638>
  405731:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40573b:	nop    DWORD PTR [rax+rax*1+0x0]
  405740:	movzx  edx,bl
  405743:	mov    edx,edx
  405745:	lea    r15,[rax+rdx*1]
  405749:	add    r15,0x1
  40574d:	cmp    r15,0xfe
  405754:	jg     405b58 <rb_strcasecmp@plt+0x3638>
  40575a:	lea    r14,[rsi+rdx*1]
  40575e:	cmp    r14,r12
  405761:	jae    405b58 <rb_strcasecmp@plt+0x3638>
  405767:	add    rax,0x1
  40576b:	lea    r13d,[rdx+r13*1]
  40576f:	add    r13d,0x1
  405773:	lea    rdi,[rsp+rax*1]
  405777:	add    rdi,0x40
  40577b:	mov    BYTE PTR [rbp+0x0],bl
  40577e:	call   402510 <memcpy@plt>
  405783:	mov    rax,r15
  405786:	lea    rbp,[rsp+rax*1]
  40578a:	add    rbp,0x40
  40578e:	movzx  ebx,BYTE PTR [r14]
  405792:	mov    rsi,r14
  405795:	add    rsi,0x1
  405799:	test   bl,bl
  40579b:	jne    4056a0 <rb_strcasecmp@plt+0x3180>
  4057a1:	mov    BYTE PTR [rbp+0x0],0x0
  4057a5:	mov    eax,DWORD PTR [rsp+0xc]
  4057a9:	test   eax,eax
  4057ab:	mov    rcx,QWORD PTR [rsp+0x38]
  4057b0:	jns    4057c1 <rb_strcasecmp@plt+0x32a1>
  4057b2:	sub    esi,DWORD PTR [rsp+0x20]
  4057b6:	mov    eax,esi
  4057b8:	cmp    esi,0xffffffff
  4057bb:	je     405b63 <rb_strcasecmp@plt+0x3643>
  4057c1:	mov    bl,BYTE PTR [rsp+0x40]
  4057c5:	mov    r9,QWORD PTR [rsp+0x10]
  4057ca:	add    r9,rcx
  4057cd:	test   bl,bl
  4057cf:	je     405b4e <rb_strcasecmp@plt+0x362e>
  4057d5:	mov    DWORD PTR [rsp+0xc],eax
  4057d9:	lea    r13,[rsp+0x40]
  4057de:	mov    r15d,0x21
  4057e4:	mov    r11d,0x100
  4057ea:	lea    rsi,[rip+0x4f5f]        # 40a750 <rb_strcasecmp@plt+0x8230>
  4057f1:	movabs r10,0x4000000420010c5
  4057fb:	mov    r12,rcx
  4057fe:	mov    QWORD PTR [rsp+0x10],r9
  405803:	cmp    bl,0xc0
  405806:	jae    405b58 <rb_strcasecmp@plt+0x3638>
  40580c:	mov    eax,ebx
  40580e:	mov    rdi,rcx
  405811:	cmp    r12,rcx
  405814:	je     40582f <rb_strcasecmp@plt+0x330f>
  405816:	cmp    r12,r9
  405819:	jae    405b58 <rb_strcasecmp@plt+0x3638>
  40581f:	mov    BYTE PTR [r12],0x2e
  405824:	add    r12,0x1
  405828:	mov    al,BYTE PTR [r13+0x0]
  40582c:	mov    rdi,r12
  40582f:	lea    r14,[r13+0x1]
  405833:	mov    edx,eax
  405835:	and    dl,0xc0
  405838:	cmp    dl,0x40
  40583b:	je     40584b <rb_strcasecmp@plt+0x332b>
  40583d:	cmp    dl,0xc0
  405840:	je     405b58 <rb_strcasecmp@plt+0x3638>
  405846:	movzx  edx,al
  405849:	jmp    405866 <rb_strcasecmp@plt+0x3346>
  40584b:	cmp    al,0x41
  40584d:	jne    405b58 <rb_strcasecmp@plt+0x3638>
  405853:	movzx  eax,BYTE PTR [r14]
  405857:	lea    edx,[rax+0x7]
  40585a:	shr    edx,0x3
  40585d:	add    edx,0x1
  405860:	test   eax,eax
  405862:	cmove  edx,r15d
  405866:	mov    eax,edx
  405868:	add    rax,rdi
  40586b:	cmp    rax,r9
  40586e:	jae    405b58 <rb_strcasecmp@plt+0x3638>
  405874:	mov    eax,ebx
  405876:	and    al,0xc0
  405878:	cmp    al,0x40
  40587a:	jne    40595d <rb_strcasecmp@plt+0x343d>
  405880:	cmp    bl,0x41
  405883:	jne    405b8a <rb_strcasecmp@plt+0x366a>
  405889:	movzx  ebx,BYTE PTR [r14]
  40588d:	test   ebx,ebx
  40588f:	cmove  ebx,r11d
  405893:	lea    eax,[rbx+0x3]
  405896:	shr    eax,0x2
  405899:	xor    ecx,ecx
  40589b:	cmp    ebx,0x9
  40589e:	seta   cl
  4058a1:	add    ecx,0x7
  4058a4:	cmp    ebx,0x63
  4058a7:	mov    edx,0x9
  4058ac:	cmova  ecx,edx
  4058af:	add    ecx,eax
  4058b1:	add    rcx,rdi
  4058b4:	cmp    rcx,r9
  4058b7:	jae    405b58 <rb_strcasecmp@plt+0x3638>
  4058bd:	mov    DWORD PTR [rdi],0x785b5c
  4058c3:	lea    rbp,[rdi+0x3]
  4058c7:	add    r13,0x2
  4058cb:	cmp    ebx,0x8
  4058ce:	jb     405a5a <rb_strcasecmp@plt+0x353a>
  4058d4:	mov    QWORD PTR [rsp+0x20],rdi
  4058d9:	mov    eax,ebx
  4058db:	not    eax
  4058dd:	cmp    eax,0xfffffff0
  4058e0:	mov    ecx,0xfffffff0
  4058e5:	cmovbe eax,ecx
  4058e8:	lea    r12d,[rbx+0x8]
  4058ec:	lea    eax,[rbx+rax*1]
  4058ef:	add    eax,0x8
  4058f2:	mov    DWORD PTR [rsp+0x30],eax
  4058f6:	shr    eax,0x3
  4058f9:	mov    QWORD PTR [rsp+0x28],rax
  4058fe:	xchg   ax,ax
  405900:	mov    r15,rbp
  405903:	movzx  edx,BYTE PTR [r13+0x0]
  405908:	xor    eax,eax
  40590a:	mov    rdi,rbp
  40590d:	call   402250 <sprintf@plt>
  405912:	lea    rsi,[rip+0x4e37]        # 40a750 <rb_strcasecmp@plt+0x8230>
  405919:	movsxd rbp,eax
  40591c:	add    rbp,r15
  40591f:	add    r13,0x1
  405923:	add    r12d,0xfffffff8
  405927:	cmp    r12d,0xf
  40592b:	jg     405900 <rb_strcasecmp@plt+0x33e0>
  40592d:	mov    ecx,DWORD PTR [rsp+0x30]
  405931:	and    ecx,0xfffffff8
  405934:	mov    rax,QWORD PTR [rsp+0x28]
  405939:	lea    r13,[r14+rax*1]
  40593d:	add    r13,0x2
  405941:	add    r14,rax
  405944:	add    r14,0x1
  405948:	lea    eax,[rbx-0x8]
  40594b:	sub    eax,ecx
  40594d:	mov    r15d,0x21
  405953:	mov    rdi,QWORD PTR [rsp+0x20]
  405958:	jmp    405a5c <rb_strcasecmp@plt+0x353c>
  40595d:	test   edx,edx
  40595f:	jle    405af9 <rb_strcasecmp@plt+0x35d9>
  405965:	add    edx,0x1
  405968:	mov    r12,rdi
  40596b:	jmp    405a10 <rb_strcasecmp@plt+0x34f0>
  405970:	movzx  r8d,dil
  405974:	lea    eax,[r8-0x21]
  405978:	cmp    eax,0x5e
  40597b:	jb     4059f8 <rb_strcasecmp@plt+0x34d8>
  40597d:	lea    rax,[r12+0x3]
  405982:	cmp    rax,QWORD PTR [rsp+0x10]
  405987:	jae    405b58 <rb_strcasecmp@plt+0x3638>
  40598d:	mov    BYTE PTR [r12],0x5c
  405992:	lea    eax,[r8+r8*4]
  405996:	lea    eax,[r8+rax*8]
  40599a:	shr    eax,0xc
  40599d:	lea    rbx,[rip+0x4dbc]        # 40a760 <rb_strcasecmp@plt+0x8240>
  4059a4:	mov    r9,rbx
  4059a7:	movzx  ebx,BYTE PTR [rax+rbx*1]
  4059ab:	mov    BYTE PTR [r12+0x1],bl
  4059b0:	mov    bl,0x64
  4059b2:	mul    bl
  4059b4:	mov    ebx,edi
  4059b6:	sub    bl,al
  4059b8:	movzx  eax,bl
  4059bb:	imul   eax,eax,0xcd
  4059c1:	shr    eax,0xb
  4059c4:	movzx  eax,BYTE PTR [rax+r9*1]
  4059c9:	mov    BYTE PTR [r12+0x2],al
  4059ce:	imul   eax,r8d,0xcd
  4059d5:	shr    eax,0xb
  4059d8:	mov    bl,0xa
  4059da:	mul    bl
  4059dc:	sub    dil,al
  4059df:	movzx  eax,dil
  4059e3:	movzx  eax,BYTE PTR [rax+r9*1]
  4059e8:	mov    BYTE PTR [r12+0x3],al
  4059ed:	add    r12,0x4
  4059f1:	mov    r9,QWORD PTR [rsp+0x10]
  4059f6:	jmp    405a49 <rb_strcasecmp@plt+0x3529>
  4059f8:	mov    r9,QWORD PTR [rsp+0x10]
  4059fd:	cmp    r12,r9
  405a00:	jae    405b58 <rb_strcasecmp@plt+0x3638>
  405a06:	mov    BYTE PTR [r12],dil
  405a0a:	add    r12,0x1
  405a0e:	jmp    405a49 <rb_strcasecmp@plt+0x3529>
  405a10:	movzx  edi,BYTE PTR [r14]
  405a14:	mov    eax,edi
  405a16:	add    al,0xde
  405a18:	cmp    al,0x3a
  405a1a:	ja     405970 <rb_strcasecmp@plt+0x3450>
  405a20:	movzx  eax,al
  405a23:	bt     r10,rax
  405a27:	jae    405970 <rb_strcasecmp@plt+0x3450>
  405a2d:	lea    rax,[r12+0x1]
  405a32:	cmp    rax,r9
  405a35:	jae    405b58 <rb_strcasecmp@plt+0x3638>
  405a3b:	mov    BYTE PTR [r12],0x5c
  405a40:	mov    BYTE PTR [r12+0x1],dil
  405a45:	add    r12,0x2
  405a49:	add    r14,0x1
  405a4d:	add    edx,0xffffffff
  405a50:	cmp    edx,0x1
  405a53:	jg     405a10 <rb_strcasecmp@plt+0x34f0>
  405a55:	jmp    405afc <rb_strcasecmp@plt+0x35dc>
  405a5a:	mov    eax,ebx
  405a5c:	mov    r12,rdi
  405a5f:	cmp    eax,0x5
  405a62:	jl     405a75 <rb_strcasecmp@plt+0x3555>
  405a64:	movsx  ecx,BYTE PTR [r13+0x0]
  405a69:	mov    edx,0xff
  405a6e:	mov    edi,0x8
  405a73:	jmp    405a96 <rb_strcasecmp@plt+0x3576>
  405a75:	test   eax,eax
  405a77:	jle    405b0c <rb_strcasecmp@plt+0x35ec>
  405a7d:	movzx  ecx,BYTE PTR [r13+0x0]
  405a82:	shr    ecx,0x4
  405a85:	mov    edx,0xf
  405a8a:	mov    edi,0x4
  405a8f:	lea    rsi,[rip+0x4cbf]        # 40a755 <rb_strcasecmp@plt+0x8235>
  405a96:	add    r14,0x2
  405a9a:	sub    edi,eax
  405a9c:	shlx   edx,edx,edi
  405aa1:	and    edx,ecx
  405aa3:	xor    eax,eax
  405aa5:	mov    rdi,rbp
  405aa8:	call   402250 <sprintf@plt>
  405aad:	cdqe   
  405aaf:	add    rbp,rax
  405ab2:	xor    eax,eax
  405ab4:	mov    rdi,rbp
  405ab7:	lea    rsi,[rip+0x4c9b]        # 40a759 <rb_strcasecmp@plt+0x8239>
  405abe:	mov    edx,ebx
  405ac0:	call   402250 <sprintf@plt>
  405ac5:	cdqe   
  405ac7:	add    rax,rbp
  405aca:	sub    rax,r12
  405acd:	test   eax,eax
  405acf:	mov    rcx,QWORD PTR [rsp+0x38]
  405ad4:	mov    r9,QWORD PTR [rsp+0x10]
  405ad9:	lea    rsi,[rip+0x4c70]        # 40a750 <rb_strcasecmp@plt+0x8230>
  405ae0:	movabs r10,0x4000000420010c5
  405aea:	mov    r11d,0x100
  405af0:	js     405b58 <rb_strcasecmp@plt+0x3638>
  405af2:	cdqe   
  405af4:	add    r12,rax
  405af7:	jmp    405afc <rb_strcasecmp@plt+0x35dc>
  405af9:	mov    r12,rdi
  405afc:	mov    bl,BYTE PTR [r14]
  405aff:	mov    r13,r14
  405b02:	test   bl,bl
  405b04:	jne    405803 <rb_strcasecmp@plt+0x32e3>
  405b0a:	jmp    405b7a <rb_strcasecmp@plt+0x365a>
  405b0c:	mov    r14,r13
  405b0f:	jmp    405ab2 <rb_strcasecmp@plt+0x3592>
  405b11:	mov    BYTE PTR [rsp+0x40],0x0
  405b16:	add    r9,rcx
  405b19:	mov    eax,0x1
  405b1e:	test   r8d,r8d
  405b21:	jle    405b58 <rb_strcasecmp@plt+0x3638>
  405b23:	lea    r12,[rcx+0x1]
  405b27:	mov    BYTE PTR [rcx],0x2e
  405b2a:	cmp    r12,r9
  405b2d:	jae    405b58 <rb_strcasecmp@plt+0x3638>
  405b2f:	lea    edx,[r12+0x1]
  405b34:	mov    BYTE PTR [r12],0x0
  405b39:	sub    edx,ecx
  405b3b:	cmp    edx,0xffffffff
  405b3e:	je     405b63 <rb_strcasecmp@plt+0x3643>
  405b40:	test   eax,eax
  405b42:	jle    405b68 <rb_strcasecmp@plt+0x3648>
  405b44:	cmp    BYTE PTR [rcx],0x2e
  405b47:	jne    405b68 <rb_strcasecmp@plt+0x3648>
  405b49:	mov    BYTE PTR [rcx],0x0
  405b4c:	jmp    405b68 <rb_strcasecmp@plt+0x3648>
  405b4e:	mov    r8d,DWORD PTR [rsp+0x1c]
  405b53:	test   r8d,r8d
  405b56:	jg     405b23 <rb_strcasecmp@plt+0x3603>
  405b58:	call   402390 <__errno_location@plt>
  405b5d:	mov    DWORD PTR [rax],0x5a
  405b63:	mov    eax,0xffffffff
  405b68:	add    rsp,0x148
  405b6f:	pop    rbx
  405b70:	pop    r12
  405b72:	pop    r13
  405b74:	pop    r14
  405b76:	pop    r15
  405b78:	pop    rbp
  405b79:	ret    
  405b7a:	cmp    r12,rcx
  405b7d:	mov    eax,DWORD PTR [rsp+0xc]
  405b81:	mov    r8d,DWORD PTR [rsp+0x1c]
  405b86:	jne    405b2a <rb_strcasecmp@plt+0x360a>
  405b88:	jmp    405b1e <rb_strcasecmp@plt+0x35fe>
  405b8a:	call   402390 <__errno_location@plt>
  405b8f:	mov    DWORD PTR [rax],0x16
  405b95:	jmp    405b63 <rb_strcasecmp@plt+0x3643>
  405b97:	nop    WORD PTR [rax+rax*1+0x0]
  405ba0:	push   rax
  405ba1:	mov    rax,rdi
  405ba4:	cmp    rdi,rsi
  405ba7:	jae    405bff <rb_strcasecmp@plt+0x36df>
  405ba9:	mov    r8d,0x21
  405baf:	mov    r9,rdi
  405bb2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405bbc:	nop    DWORD PTR [rax+0x0]
  405bc0:	lea    rax,[r9+0x1]
  405bc4:	movzx  edx,BYTE PTR [r9]
  405bc8:	test   rdx,rdx
  405bcb:	je     405bff <rb_strcasecmp@plt+0x36df>
  405bcd:	mov    ecx,edx
  405bcf:	and    cl,0xc0
  405bd2:	je     405bf4 <rb_strcasecmp@plt+0x36d4>
  405bd4:	cmp    cl,0x40
  405bd7:	jne    405c16 <rb_strcasecmp@plt+0x36f6>
  405bd9:	cmp    dl,0x41
  405bdc:	jne    405c04 <rb_strcasecmp@plt+0x36e4>
  405bde:	movzx  ecx,BYTE PTR [rax]
  405be1:	lea    rdx,[rcx+0x7]
  405be5:	shr    rdx,0x3
  405be9:	add    rdx,0x1
  405bed:	test   rcx,rcx
  405bf0:	cmove  rdx,r8
  405bf4:	add    rax,rdx
  405bf7:	mov    r9,rax
  405bfa:	cmp    rax,rsi
  405bfd:	jb     405bc0 <rb_strcasecmp@plt+0x36a0>
  405bff:	cmp    rax,rsi
  405c02:	jbe    405c27 <rb_strcasecmp@plt+0x3707>
  405c04:	call   402390 <__errno_location@plt>
  405c09:	mov    DWORD PTR [rax],0x5a
  405c0f:	mov    eax,0xffffffff
  405c14:	pop    rcx
  405c15:	ret    
  405c16:	cmp    cl,0xc0
  405c19:	jne    405c04 <rb_strcasecmp@plt+0x36e4>
  405c1b:	add    r9,0x2
  405c1f:	mov    rax,r9
  405c22:	cmp    rax,rsi
  405c25:	ja     405c04 <rb_strcasecmp@plt+0x36e4>
  405c27:	sub    eax,edi
  405c29:	pop    rcx
  405c2a:	ret    
  405c2b:	nop    DWORD PTR [rax+rax*1+0x0]
  405c30:	movzx  ecx,BYTE PTR [rdi]
  405c33:	shl    ecx,0x8
  405c36:	movzx  eax,BYTE PTR [rdi+0x1]
  405c3a:	or     eax,ecx
  405c3c:	ret    
  405c3d:	nop    DWORD PTR [rax]
  405c40:	movzx  eax,BYTE PTR [rdi]
  405c43:	shl    rax,0x18
  405c47:	movzx  ecx,BYTE PTR [rdi+0x1]
  405c4b:	shl    rcx,0x10
  405c4f:	or     rcx,rax
  405c52:	movzx  edx,BYTE PTR [rdi+0x2]
  405c56:	shl    rdx,0x8
  405c5a:	or     rdx,rcx
  405c5d:	movzx  eax,BYTE PTR [rdi+0x3]
  405c61:	or     rax,rdx
  405c64:	ret    
  405c65:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405c6f:	nop
  405c70:	mov    eax,edi
  405c72:	mov    BYTE PTR [rsi],ah
  405c74:	mov    BYTE PTR [rsi+0x1],al
  405c77:	ret    
  405c78:	nop    DWORD PTR [rax+rax*1+0x0]
  405c80:	mov    rax,rdi
  405c83:	mov    ecx,eax
  405c85:	shr    ecx,0x18
  405c88:	mov    BYTE PTR [rsi],cl
  405c8a:	mov    ecx,eax
  405c8c:	shr    ecx,0x10
  405c8f:	mov    BYTE PTR [rsi+0x1],cl
  405c92:	mov    BYTE PTR [rsi+0x2],ah
  405c95:	mov    BYTE PTR [rsi+0x3],al
  405c98:	ret    
  405c99:	nop    DWORD PTR [rax+0x0]
  405ca0:	push   rbp
  405ca1:	push   r15
  405ca3:	push   r14
  405ca5:	push   r13
  405ca7:	push   r12
  405ca9:	push   rbx
  405caa:	sub    rsp,0x1f8
  405cb1:	mov    eax,0xffffffff
  405cb6:	test   rcx,rcx
  405cb9:	je     406218 <rb_strcasecmp@plt+0x3cf8>
  405cbf:	cmp    r8d,0xc
  405cc3:	jl     406218 <rb_strcasecmp@plt+0x3cf8>
  405cc9:	mov    DWORD PTR [rcx+0x8],0x0
  405cd0:	mov    QWORD PTR [rcx],0x10000
  405cd7:	mov    QWORD PTR [rsp+0x150],rcx
  405cdf:	mov    QWORD PTR [rsp+0x158],0x0
  405ceb:	cmp    r8d,0x10
  405cef:	jl     406218 <rb_strcasecmp@plt+0x3cf8>
  405cf5:	mov    rbp,rdi
  405cf8:	mov    DWORD PTR [rsp+0x34],edx
  405cfc:	mov    DWORD PTR [rsp+0x24],esi
  405d00:	lea    rax,[rsp+0x51]
  405d05:	mov    QWORD PTR [rsp+0x8],rax
  405d0a:	mov    dl,BYTE PTR [rdi]
  405d0c:	test   dl,dl
  405d0e:	mov    QWORD PTR [rsp+0x38],rcx
  405d13:	mov    DWORD PTR [rsp+0x14],r8d
  405d18:	lea    rcx,[rsp+0x50]
  405d1d:	je     406169 <rb_strcasecmp@plt+0x3c49>
  405d23:	lea    r14,[rip+0x4a36]        # 40a760 <rb_strcasecmp@plt+0x8240>
  405d2a:	jmp    405d3c <rb_strcasecmp@plt+0x381c>
  405d2c:	xor    ecx,ecx
  405d2e:	test   r14d,r14d
  405d31:	jne    4060ac <rb_strcasecmp@plt+0x3b8c>
  405d37:	jmp    4060b9 <rb_strcasecmp@plt+0x3b99>
  405d3c:	mov    QWORD PTR [rsp+0x18],rcx
  405d41:	xor    eax,eax
  405d43:	mov    r12,rbp
  405d46:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405d50:	lea    rbp,[r12+0x1]
  405d55:	movsx  ebx,dl
  405d58:	test   eax,eax
  405d5a:	je     405e40 <rb_strcasecmp@plt+0x3920>
  405d60:	cmp    dl,0x5b
  405d63:	je     405e8a <rb_strcasecmp@plt+0x396a>
  405d69:	mov    edx,0xb
  405d6e:	mov    rdi,r14
  405d71:	mov    esi,ebx
  405d73:	call   4020c0 <memchr@plt>
  405d78:	test   rax,rax
  405d7b:	je     405e53 <rb_strcasecmp@plt+0x3933>
  405d81:	movsx  esi,BYTE PTR [r12+0x1]
  405d87:	mov    r14d,0x5a
  405d8d:	test   esi,esi
  405d8f:	je     40620b <rb_strcasecmp@plt+0x3ceb>
  405d95:	mov    r15,rax
  405d98:	mov    edx,0xb
  405d9d:	lea    rdi,[rip+0x49bc]        # 40a760 <rb_strcasecmp@plt+0x8240>
  405da4:	call   4020c0 <memchr@plt>
  405da9:	test   rax,rax
  405dac:	je     40620b <rb_strcasecmp@plt+0x3ceb>
  405db2:	movsx  esi,BYTE PTR [r12+0x2]
  405db8:	test   esi,esi
  405dba:	je     40620b <rb_strcasecmp@plt+0x3ceb>
  405dc0:	mov    rbp,rax
  405dc3:	mov    edx,0xb
  405dc8:	lea    r13,[rip+0x4991]        # 40a760 <rb_strcasecmp@plt+0x8240>
  405dcf:	mov    rdi,r13
  405dd2:	call   4020c0 <memchr@plt>
  405dd7:	test   rax,rax
  405dda:	je     40620b <rb_strcasecmp@plt+0x3ceb>
  405de0:	mov    rbx,rax
  405de3:	movsxd rax,r13d
  405de6:	sub    r15,rax
  405de9:	movabs rax,0x6400000000
  405df3:	imul   r15,rax
  405df7:	sub    rbp,r13
  405dfa:	lea    rax,[rbp*4+0x0]
  405e02:	add    rax,rbp
  405e05:	shl    rax,0x21
  405e09:	add    rax,r15
  405e0c:	shr    rax,0x20
  405e10:	sub    eax,r13d
  405e13:	add    ebx,eax
  405e15:	cmp    ebx,0xff
  405e1b:	jg     40620b <rb_strcasecmp@plt+0x3ceb>
  405e21:	add    r12,0x3
  405e25:	mov    rbp,r12
  405e28:	lea    r14,[rip+0x4931]        # 40a760 <rb_strcasecmp@plt+0x8240>
  405e2f:	jmp    405e53 <rb_strcasecmp@plt+0x3933>
  405e31:	nop    WORD PTR cs:[rax+rax*1+0x0]
  405e3b:	nop    DWORD PTR [rax+rax*1+0x0]
  405e40:	mov    eax,0x1
  405e45:	cmp    dl,0x5c
  405e48:	je     405e76 <rb_strcasecmp@plt+0x3956>
  405e4a:	cmp    dl,0x2e
  405e4d:	je     405ff3 <rb_strcasecmp@plt+0x3ad3>
  405e53:	mov    rax,QWORD PTR [rsp+0x8]
  405e58:	lea    rcx,[rsp+0x14f]
  405e60:	cmp    rax,rcx
  405e63:	jae    406205 <rb_strcasecmp@plt+0x3ce5>
  405e69:	lea    rcx,[rax+0x1]
  405e6d:	mov    QWORD PTR [rsp+0x8],rcx
  405e72:	mov    BYTE PTR [rax],bl
  405e74:	xor    eax,eax
  405e76:	movzx  edx,BYTE PTR [rbp+0x0]
  405e7a:	mov    r12,rbp
  405e7d:	test   dl,dl
  405e7f:	jne    405d50 <rb_strcasecmp@plt+0x3830>
  405e85:	jmp    40615f <rb_strcasecmp@plt+0x3c3f>
  405e8a:	mov    esi,0x5d
  405e8f:	mov    rdi,rbp
  405e92:	call   402330 <strchr@plt>
  405e97:	test   rax,rax
  405e9a:	je     40622a <rb_strcasecmp@plt+0x3d0a>
  405ea0:	mov    rbx,rax
  405ea3:	lea    r13,[rax+0x2]
  405ea7:	mov    QWORD PTR [rsp+0x40],0x0
  405eb0:	mov    rax,r13
  405eb3:	sub    rax,rbp
  405eb6:	cmp    rax,0x2
  405eba:	jl     40622a <rb_strcasecmp@plt+0x3d0a>
  405ec0:	cmp    BYTE PTR [r12+0x1],0x78
  405ec6:	jne    40622a <rb_strcasecmp@plt+0x3d0a>
  405ecc:	lea    rbp,[r12+0x2]
  405ed1:	call   402230 <__ctype_b_loc@plt>
  405ed6:	mov    rcx,QWORD PTR [rax]
  405ed9:	movzx  esi,BYTE PTR [rbp+0x0]
  405edd:	test   BYTE PTR [rcx+rsi*2+0x1],0x10
  405ee2:	je     40622a <rb_strcasecmp@plt+0x3d0a>
  405ee8:	xor    r9d,r9d
  405eeb:	lea    rcx,[rsp+0x14f]
  405ef3:	lea    rdx,[rsp+0x10]
  405ef8:	cmp    rcx,rdx
  405efb:	jbe    40605f <rb_strcasecmp@plt+0x3b3f>
  405f01:	mov    r10d,0x0
  405f07:	mov    r15,rdx
  405f0a:	mov    ecx,0x0
  405f0f:	cmp    r12,rbx
  405f12:	jae    4060b9 <rb_strcasecmp@plt+0x3b99>
  405f18:	add    r12,0x3
  405f1c:	xor    r10d,r10d
  405f1f:	mov    rbp,r12
  405f22:	xor    r14d,r14d
  405f25:	xor    r9d,r9d
  405f28:	xor    edi,edi
  405f2a:	xor    r8d,r8d
  405f2d:	lea    r15,[rsp+0x10]
  405f32:	jmp    405f3c <rb_strcasecmp@plt+0x3a1c>
  405f34:	movzx  esi,BYTE PTR [rbp+0x0]
  405f38:	add    rbp,0x1
  405f3c:	movsx  ecx,sil
  405f40:	cmp    ecx,0x2f
  405f43:	je     405f7f <rb_strcasecmp@plt+0x3a5f>
  405f45:	cmp    ecx,0x5d
  405f48:	je     406069 <rb_strcasecmp@plt+0x3b49>
  405f4e:	mov    rbx,QWORD PTR [rax]
  405f51:	movzx  edx,sil
  405f55:	movzx  ebx,WORD PTR [rbx+rdx*2]
  405f59:	test   r8d,r8d
  405f5c:	je     405fa2 <rb_strcasecmp@plt+0x3a82>
  405f5e:	test   ebx,0x800
  405f64:	je     40622a <rb_strcasecmp@plt+0x3d0a>
  405f6a:	test   rdi,rdi
  405f6d:	jne    405f85 <rb_strcasecmp@plt+0x3a65>
  405f6f:	cmp    sil,0x30
  405f73:	je     40622a <rb_strcasecmp@plt+0x3d0a>
  405f79:	lea    rdi,[rbp-0x1]
  405f7d:	jmp    405f85 <rb_strcasecmp@plt+0x3a65>
  405f7f:	mov    r8d,0x1
  405f85:	xor    ecx,ecx
  405f87:	cmp    rbp,r13
  405f8a:	jae    4060b9 <rb_strcasecmp@plt+0x3b99>
  405f90:	lea    rdx,[rsp+0x14f]
  405f98:	cmp    r15,rdx
  405f9b:	jb     405f34 <rb_strcasecmp@plt+0x3a14>
  405f9d:	jmp    4060b9 <rb_strcasecmp@plt+0x3b99>
  405fa2:	test   ebx,0x1000
  405fa8:	je     40622a <rb_strcasecmp@plt+0x3d0a>
  405fae:	cmp    r10d,0xfc
  405fb5:	jg     40622a <rb_strcasecmp@plt+0x3d0a>
  405fbb:	mov    edx,r9d
  405fbe:	shl    edx,0x4
  405fc1:	movsxd rcx,ecx
  405fc4:	lea    rsi,[rip+0x47a5]        # 40a770 <rb_strcasecmp@plt+0x8250>
  405fcb:	movsx  r9d,BYTE PTR [rcx+rsi*1]
  405fd0:	add    r9d,edx
  405fd3:	add    r14d,0x4
  405fd7:	add    r10d,0x4
  405fdb:	xor    r8d,r8d
  405fde:	cmp    r14d,0x8
  405fe2:	jne    405f85 <rb_strcasecmp@plt+0x3a65>
  405fe4:	mov    BYTE PTR [r15],r9b
  405fe7:	add    r15,0x1
  405feb:	xor    r8d,r8d
  405fee:	xor    r14d,r14d
  405ff1:	jmp    405f85 <rb_strcasecmp@plt+0x3a65>
  405ff3:	mov    rdx,QWORD PTR [rsp+0x18]
  405ff8:	mov    rax,rdx
  405ffb:	mov    ecx,0xffffffff
  406000:	xor    rax,rcx
  406003:	add    rax,QWORD PTR [rsp+0x8]
  406008:	mov    r14d,0x5a
  40600e:	test   al,0xc0
  406010:	jne    40620b <rb_strcasecmp@plt+0x3ceb>
  406016:	lea    rcx,[rsp+0x14f]
  40601e:	cmp    rcx,rdx
  406021:	jbe    40620b <rb_strcasecmp@plt+0x3ceb>
  406027:	mov    BYTE PTR [rdx],al
  406029:	mov    cl,BYTE PTR [rbp+0x0]
  40602c:	test   cl,cl
  40602e:	je     406585 <rb_strcasecmp@plt+0x4065>
  406034:	test   eax,eax
  406036:	je     40620b <rb_strcasecmp@plt+0x3ceb>
  40603c:	cmp    cl,0x2e
  40603f:	je     40620b <rb_strcasecmp@plt+0x3ceb>
  406045:	mov    r15,QWORD PTR [rsp+0x8]
  40604a:	lea    rax,[r15+0x1]
  40604e:	mov    QWORD PTR [rsp+0x8],rax
  406053:	lea    r14,[rip+0x4706]        # 40a760 <rb_strcasecmp@plt+0x8240>
  40605a:	jmp    40614c <rb_strcasecmp@plt+0x3c2c>
  40605f:	xor    r10d,r10d
  406062:	mov    r15,rdx
  406065:	xor    ecx,ecx
  406067:	jmp    4060b9 <rb_strcasecmp@plt+0x3b99>
  406069:	test   r8d,r8d
  40606c:	je     405d2c <rb_strcasecmp@plt+0x380c>
  406072:	test   rdi,rdi
  406075:	je     40622a <rb_strcasecmp@plt+0x3d0a>
  40607b:	mov    r12,r10
  40607e:	mov    ebx,r9d
  406081:	mov    edx,0xa
  406086:	lea    rsi,[rsp+0x40]
  40608b:	call   4022f0 <strtol@plt>
  406090:	mov    rcx,rax
  406093:	mov    rax,QWORD PTR [rsp+0x40]
  406098:	cmp    BYTE PTR [rax],0x5d
  40609b:	jne    40622a <rb_strcasecmp@plt+0x3d0a>
  4060a1:	mov    r9d,ebx
  4060a4:	mov    r10,r12
  4060a7:	test   r14d,r14d
  4060aa:	je     4060b9 <rb_strcasecmp@plt+0x3b99>
  4060ac:	mov    eax,r9d
  4060af:	shl    al,0x4
  4060b2:	mov    BYTE PTR [r15],al
  4060b5:	add    r15,0x1
  4060b9:	mov    r14d,0x5a
  4060bf:	cmp    rbp,r13
  4060c2:	jae    40620b <rb_strcasecmp@plt+0x3ceb>
  4060c8:	lea    rax,[rsp+0x14f]
  4060d0:	cmp    r15,rax
  4060d3:	mov    rsi,QWORD PTR [rsp+0x18]
  4060d8:	jae    40620b <rb_strcasecmp@plt+0x3ceb>
  4060de:	test   ecx,ecx
  4060e0:	jle    406115 <rb_strcasecmp@plt+0x3bf5>
  4060e2:	lea    eax,[rcx+0x3]
  4060e5:	and    eax,0xfffffffc
  4060e8:	cmp    eax,r10d
  4060eb:	jne    40622a <rb_strcasecmp@plt+0x3d0a>
  4060f1:	mov    eax,0x8
  4060f6:	sub    eax,r10d
  4060f9:	add    eax,ecx
  4060fb:	mov    edx,0xff
  406100:	shrx   eax,edx,eax
  406105:	mov    r14d,0x16
  40610b:	test   eax,r9d
  40610e:	je     406118 <rb_strcasecmp@plt+0x3bf8>
  406110:	jmp    40620b <rb_strcasecmp@plt+0x3ceb>
  406115:	mov    ecx,r10d
  406118:	mov    BYTE PTR [rsi],0x41
  40611b:	cmp    ecx,0x100
  406121:	jne    406125 <rb_strcasecmp@plt+0x3c05>
  406123:	xor    ecx,ecx
  406125:	lea    r14,[rip+0x4634]        # 40a760 <rb_strcasecmp@plt+0x8240>
  40612c:	mov    rax,QWORD PTR [rsp+0x8]
  406131:	mov    BYTE PTR [rax],cl
  406133:	lea    rax,[r15+0x1]
  406137:	mov    QWORD PTR [rsp+0x8],rax
  40613c:	mov    cl,BYTE PTR [rbp+0x0]
  40613f:	cmp    cl,0x2e
  406142:	jne    406548 <rb_strcasecmp@plt+0x4028>
  406148:	add    rbp,0x1
  40614c:	mov    dl,BYTE PTR [rbp+0x0]
  40614f:	mov    rcx,r15
  406152:	test   dl,dl
  406154:	jne    405d3c <rb_strcasecmp@plt+0x381c>
  40615a:	mov    rcx,r15
  40615d:	jmp    406169 <rb_strcasecmp@plt+0x3c49>
  40615f:	mov    rax,QWORD PTR [rsp+0x8]
  406164:	mov    rcx,QWORD PTR [rsp+0x18]
  406169:	mov    rdx,rcx
  40616c:	not    ecx
  40616e:	add    eax,ecx
  406170:	mov    r14d,0x5a
  406176:	test   al,0xc0
  406178:	jne    40620b <rb_strcasecmp@plt+0x3ceb>
  40617e:	mov    r15,rdx
  406181:	mov    r14d,0x5a
  406187:	lea    rcx,[rsp+0x14f]
  40618f:	cmp    r15,rcx
  406192:	jae    40620b <rb_strcasecmp@plt+0x3ceb>
  406194:	mov    BYTE PTR [r15],al
  406197:	test   eax,eax
  406199:	je     4061b9 <rb_strcasecmp@plt+0x3c99>
  40619b:	mov    rax,QWORD PTR [rsp+0x8]
  4061a0:	lea    rcx,[rsp+0x14f]
  4061a8:	cmp    rax,rcx
  4061ab:	jae    40620b <rb_strcasecmp@plt+0x3ceb>
  4061ad:	lea    rcx,[rax+0x1]
  4061b1:	mov    QWORD PTR [rsp+0x8],rcx
  4061b6:	mov    BYTE PTR [rax],0x0
  4061b9:	mov    rax,QWORD PTR [rsp+0x8]
  4061be:	lea    rcx,[rsp+0x50]
  4061c3:	sub    rax,rcx
  4061c6:	cmp    rax,0x100
  4061cc:	jge    40620b <rb_strcasecmp@plt+0x3ceb>
  4061ce:	mov    rdi,QWORD PTR [rsp+0x38]
  4061d3:	lea    r12,[rdi+0xc]
  4061d7:	mov    eax,DWORD PTR [rsp+0x14]
  4061db:	add    eax,0xfffffff0
  4061de:	movsxd rdx,eax
  4061e1:	mov    r15,QWORD PTR [rsp+0x150]
  4061e9:	xor    eax,eax
  4061eb:	test   r15,r15
  4061ee:	je     406232 <rb_strcasecmp@plt+0x3d12>
  4061f0:	lea    rbp,[rsp+0x150]
  4061f8:	cmp    QWORD PTR [rbp+0x8],0x0
  4061fd:	lea    rbp,[rbp+0x8]
  406201:	jne    4061f8 <rb_strcasecmp@plt+0x3cd8>
  406203:	jmp    406234 <rb_strcasecmp@plt+0x3d14>
  406205:	mov    r14d,0x5a
  40620b:	call   402390 <__errno_location@plt>
  406210:	mov    DWORD PTR [rax],r14d
  406213:	mov    eax,0xffffffff
  406218:	add    rsp,0x1f8
  40621f:	pop    rbx
  406220:	pop    r12
  406222:	pop    r13
  406224:	pop    r14
  406226:	pop    r15
  406228:	pop    rbp
  406229:	ret    
  40622a:	mov    r14d,0x16
  406230:	jmp    40620b <rb_strcasecmp@plt+0x3ceb>
  406232:	xor    ebp,ebp
  406234:	add    rdx,r12
  406237:	lea    rcx,[rsp+0x50]
  40623c:	mov    r9d,0x21
  406242:	movzx  esi,BYTE PTR [rcx]
  406245:	cmp    esi,0xc0
  40624b:	jae    406575 <rb_strcasecmp@plt+0x4055>
  406251:	mov    ebx,esi
  406253:	and    bl,0xc0
  406256:	cmp    bl,0x40
  406259:	je     406267 <rb_strcasecmp@plt+0x3d47>
  40625b:	mov    edi,esi
  40625d:	cmp    bl,0xc0
  406260:	jne    406284 <rb_strcasecmp@plt+0x3d64>
  406262:	jmp    406538 <rb_strcasecmp@plt+0x4018>
  406267:	cmp    sil,0x41
  40626b:	jne    406538 <rb_strcasecmp@plt+0x4018>
  406271:	movzx  ebx,BYTE PTR [rcx+0x1]
  406275:	lea    edi,[rbx+0x7]
  406278:	shr    edi,0x3
  40627b:	add    edi,0x1
  40627e:	test   ebx,ebx
  406280:	cmove  edi,r9d
  406284:	lea    eax,[rdi+rax*1]
  406287:	add    eax,0x1
  40628a:	cmp    eax,0x100
  40628f:	jge    406575 <rb_strcasecmp@plt+0x4055>
  406295:	add    edi,0x1
  406298:	mov    edi,edi
  40629a:	add    rcx,rdi
  40629d:	test   sil,sil
  4062a0:	jne    406242 <rb_strcasecmp@plt+0x3d22>
  4062a2:	mov    QWORD PTR [rsp+0x18],rdx
  4062a7:	lea    r13,[rsp+0x50]
  4062ac:	mov    eax,0x1
  4062b1:	vmovdqa xmm3,XMMWORD PTR [rip+0x4437]        # 40a6f0 <rb_strcasecmp@plt+0x81d0>
  4062b9:	vpxor  xmm4,xmm4,xmm4
  4062bd:	vmovdqa xmm5,XMMWORD PTR [rip+0x443b]        # 40a700 <rb_strcasecmp@plt+0x81e0>
  4062c5:	vmovdqa xmm6,XMMWORD PTR [rip+0x4443]        # 40a710 <rb_strcasecmp@plt+0x81f0>
  4062cd:	mov    QWORD PTR [rsp+0x48],r12
  4062d2:	mov    QWORD PTR [rsp+0x28],rbp
  4062d7:	mov    DWORD PTR [rsp+0x14],eax
  4062db:	mov    r14b,BYTE PTR [r13+0x0]
  4062df:	test   r15,r15
  4062e2:	je     406467 <rb_strcasecmp@plt+0x3f47>
  4062e8:	test   r14b,r14b
  4062eb:	je     406467 <rb_strcasecmp@plt+0x3f47>
  4062f1:	lea    rax,[rsp+0x158]
  4062f9:	cmp    rax,rbp
  4062fc:	jae    40640f <rb_strcasecmp@plt+0x3eef>
  406302:	mov    r8,rax
  406305:	mov    r10,QWORD PTR [r8]
  406308:	mov    r9b,BYTE PTR [r10]
  40630b:	mov    eax,r9d
  40630e:	add    al,0xff
  406310:	cmp    al,0x3e
  406312:	ja     406402 <rb_strcasecmp@plt+0x3ee2>
  406318:	mov    rsi,r10
  40631b:	sub    rsi,r15
  40631e:	cmp    rsi,0x3fff
  406325:	jg     406402 <rb_strcasecmp@plt+0x3ee2>
  40632b:	mov    ecx,r9d
  40632e:	mov    rdi,r13
  406331:	mov    rdx,r10
  406334:	test   cl,cl
  406336:	jne    406360 <rb_strcasecmp@plt+0x3e40>
  406338:	jmp    4063e5 <rb_strcasecmp@plt+0x3ec5>
  40633d:	nop    DWORD PTR [rax]
  406340:	and    cl,0x3f
  406343:	movzx  eax,cl
  406346:	shl    rax,0x8
  40634a:	movzx  ecx,BYTE PTR [rdx]
  40634d:	or     rcx,rax
  406350:	lea    rdx,[r15+rcx*1]
  406354:	mov    cl,BYTE PTR [r15+rcx*1]
  406358:	test   cl,cl
  40635a:	je     4063e5 <rb_strcasecmp@plt+0x3ec5>
  406360:	add    rdx,0x1
  406364:	mov    eax,ecx
  406366:	and    al,0xc0
  406368:	cmp    al,0xc0
  40636a:	je     406340 <rb_strcasecmp@plt+0x3e20>
  40636c:	test   al,al
  40636e:	jne    406416 <rb_strcasecmp@plt+0x3ef6>
  406374:	cmp    cl,BYTE PTR [rdi]
  406376:	jne    4063e5 <rb_strcasecmp@plt+0x3ec5>
  406378:	mov    al,BYTE PTR [rdi+0x1]
  40637b:	add    rdi,0x1
  40637f:	movzx  ecx,cl
  406382:	neg    ecx
  406384:	movzx  eax,al
  406387:	vmovd  xmm0,eax
  40638b:	vpinsrb xmm0,xmm0,BYTE PTR [rdx],0x1
  406391:	vpmovzxbd xmm0,xmm0
  406396:	vpmovzxdq xmm0,xmm0
  40639b:	vpaddq xmm1,xmm0,xmm3
  40639f:	vpblendd xmm1,xmm1,xmm4,0xa
  4063a5:	vpcmpgtq xmm1,xmm5,xmm1
  4063aa:	vpaddq xmm2,xmm0,xmm6
  4063ae:	vblendvpd xmm0,xmm0,xmm2,xmm1
  4063b4:	vmovd  eax,xmm0
  4063b8:	vpextrd ebx,xmm0,0x2
  4063be:	cmp    eax,ebx
  4063c0:	jne    4063e5 <rb_strcasecmp@plt+0x3ec5>
  4063c2:	add    rdx,0x1
  4063c6:	movzx  eax,BYTE PTR [rdi+0x1]
  4063ca:	add    rdi,0x1
  4063ce:	add    ecx,0x1
  4063d1:	jne    406384 <rb_strcasecmp@plt+0x3e64>
  4063d3:	mov    cl,BYTE PTR [rdx]
  4063d5:	test   al,al
  4063d7:	jne    406358 <rb_strcasecmp@plt+0x3e38>
  4063dd:	test   cl,cl
  4063df:	je     406504 <rb_strcasecmp@plt+0x3fe4>
  4063e5:	movzx  eax,r9b
  4063e9:	mov    r9b,BYTE PTR [r10+rax*1+0x1]
  4063ee:	add    r10,rax
  4063f1:	add    r10,0x1
  4063f5:	mov    eax,r9d
  4063f8:	add    al,0xff
  4063fa:	cmp    al,0x3f
  4063fc:	jb     406318 <rb_strcasecmp@plt+0x3df8>
  406402:	add    r8,0x8
  406406:	cmp    r8,rbp
  406409:	jb     406305 <rb_strcasecmp@plt+0x3de5>
  40640f:	mov    ebx,0x2
  406414:	jmp    40641b <rb_strcasecmp@plt+0x3efb>
  406416:	mov    ebx,0x5a
  40641b:	call   402390 <__errno_location@plt>
  406420:	mov    DWORD PTR [rax],ebx
  406422:	lea    rax,[rsp+0x1e8]
  40642a:	cmp    QWORD PTR [rsp+0x28],rax
  40642f:	jae    406467 <rb_strcasecmp@plt+0x3f47>
  406431:	mov    rax,r12
  406434:	sub    rax,r15
  406437:	cmp    rax,0x3fff
  40643d:	jg     406467 <rb_strcasecmp@plt+0x3f47>
  40643f:	cmp    DWORD PTR [rsp+0x14],0x0
  406444:	je     406467 <rb_strcasecmp@plt+0x3f47>
  406446:	mov    rax,QWORD PTR [rsp+0x28]
  40644b:	mov    QWORD PTR [rax],r12
  40644e:	mov    QWORD PTR [rax+0x8],0x0
  406456:	lea    rax,[rax+0x8]
  40645a:	mov    QWORD PTR [rsp+0x28],rax
  40645f:	mov    DWORD PTR [rsp+0x14],0x0
  406467:	cmp    r14b,0xbf
  40646b:	ja     406568 <rb_strcasecmp@plt+0x4048>
  406471:	movzx  ecx,BYTE PTR [r13+0x0]
  406476:	mov    edx,ecx
  406478:	and    dl,0xc0
  40647b:	mov    eax,0xffffffff
  406480:	cmp    dl,0xc0
  406483:	je     4064ab <rb_strcasecmp@plt+0x3f8b>
  406485:	cmp    dl,0x40
  406488:	jne    4064a9 <rb_strcasecmp@plt+0x3f89>
  40648a:	cmp    cl,0x41
  40648d:	jne    4064ab <rb_strcasecmp@plt+0x3f8b>
  40648f:	movzx  ecx,BYTE PTR [r13+0x1]
  406494:	lea    eax,[rcx+0x7]
  406497:	shr    eax,0x3
  40649a:	add    eax,0x1
  40649d:	test   ecx,ecx
  40649f:	mov    ecx,0x21
  4064a4:	cmove  eax,ecx
  4064a7:	jmp    4064ab <rb_strcasecmp@plt+0x3f8b>
  4064a9:	mov    eax,ecx
  4064ab:	movsxd rbx,eax
  4064ae:	lea    r14,[r12+rbx*1]
  4064b2:	add    r14,0x1
  4064b6:	cmp    r14,QWORD PTR [rsp+0x18]
  4064bb:	jae    406568 <rb_strcasecmp@plt+0x4048>
  4064c1:	lea    rdx,[rbx+0x1]
  4064c5:	mov    rdi,r12
  4064c8:	mov    rsi,r13
  4064cb:	call   402510 <memcpy@plt>
  4064d0:	vmovdqa xmm6,XMMWORD PTR [rip+0x4238]        # 40a710 <rb_strcasecmp@plt+0x81f0>
  4064d8:	vmovdqa xmm5,XMMWORD PTR [rip+0x4220]        # 40a700 <rb_strcasecmp@plt+0x81e0>
  4064e0:	vpxor  xmm4,xmm4,xmm4
  4064e4:	vmovdqa xmm3,XMMWORD PTR [rip+0x4204]        # 40a6f0 <rb_strcasecmp@plt+0x81d0>
  4064ec:	add    r13,rbx
  4064ef:	add    r13,0x1
  4064f3:	mov    r12,r14
  4064f6:	test   ebx,ebx
  4064f8:	mov    eax,DWORD PTR [rsp+0x14]
  4064fc:	jne    4062d7 <rb_strcasecmp@plt+0x3db7>
  406502:	jmp    40655d <rb_strcasecmp@plt+0x403d>
  406504:	test   esi,esi
  406506:	js     406422 <rb_strcasecmp@plt+0x3f02>
  40650c:	lea    rax,[r12+0x1]
  406511:	cmp    rax,QWORD PTR [rsp+0x18]
  406516:	mov    edx,DWORD PTR [rsp+0x24]
  40651a:	jae    406568 <rb_strcasecmp@plt+0x4048>
  40651c:	mov    eax,esi
  40651e:	shr    eax,0x8
  406521:	or     al,0xc0
  406523:	mov    BYTE PTR [r12],al
  406527:	mov    BYTE PTR [r12+0x1],sil
  40652c:	add    r12,0x2
  406530:	mov    r14,r12
  406533:	jmp    4065c9 <rb_strcasecmp@plt+0x40a9>
  406538:	call   402390 <__errno_location@plt>
  40653d:	mov    DWORD PTR [rax],0x16
  406543:	jmp    406213 <rb_strcasecmp@plt+0x3cf3>
  406548:	mov    r14d,0x16
  40654e:	test   cl,cl
  406550:	jne    40620b <rb_strcasecmp@plt+0x3ceb>
  406556:	xor    eax,eax
  406558:	jmp    406181 <rb_strcasecmp@plt+0x3c61>
  40655d:	cmp    r14,QWORD PTR [rsp+0x18]
  406562:	mov    edx,DWORD PTR [rsp+0x24]
  406566:	jbe    4065c9 <rb_strcasecmp@plt+0x40a9>
  406568:	test   r15,r15
  40656b:	je     406575 <rb_strcasecmp@plt+0x4055>
  40656d:	mov    QWORD PTR [rbp+0x0],0x0
  406575:	call   402390 <__errno_location@plt>
  40657a:	mov    DWORD PTR [rax],0x5a
  406580:	jmp    406213 <rb_strcasecmp@plt+0x3cf3>
  406585:	test   eax,eax
  406587:	je     4065ab <rb_strcasecmp@plt+0x408b>
  406589:	mov    rax,QWORD PTR [rsp+0x8]
  40658e:	lea    rcx,[rsp+0x14f]
  406596:	cmp    rax,rcx
  406599:	jae    40620b <rb_strcasecmp@plt+0x3ceb>
  40659f:	lea    rcx,[rax+0x1]
  4065a3:	mov    QWORD PTR [rsp+0x8],rcx
  4065a8:	mov    BYTE PTR [rax],0x0
  4065ab:	mov    rax,QWORD PTR [rsp+0x8]
  4065b0:	lea    rcx,[rsp+0x50]
  4065b5:	sub    rax,rcx
  4065b8:	cmp    rax,0xff
  4065be:	jle    4061ce <rb_strcasecmp@plt+0x3cae>
  4065c4:	jmp    40620b <rb_strcasecmp@plt+0x3ceb>
  4065c9:	mov    rsi,QWORD PTR [rsp+0x48]
  4065ce:	sub    r14,rsi
  4065d1:	test   r14d,r14d
  4065d4:	mov    eax,0xffffffff
  4065d9:	js     406218 <rb_strcasecmp@plt+0x3cf8>
  4065df:	movsxd rax,r14d
  4065e2:	mov    rcx,QWORD PTR [rsp+0x38]
  4065e7:	mov    ebx,DWORD PTR [rsp+0x34]
  4065eb:	mov    BYTE PTR [rcx+rax*1+0xc],bh
  4065ef:	mov    BYTE PTR [rcx+rax*1+0xd],bl
  4065f3:	mov    BYTE PTR [rcx+rax*1+0xe],dh
  4065f7:	mov    BYTE PTR [rcx+rax*1+0xf],dl
  4065fb:	lea    eax,[rsi+rax*1]
  4065fe:	add    eax,0x4
  406601:	mov    WORD PTR [rcx+0x4],0x100
  406607:	sub    eax,ecx
  406609:	jmp    406218 <rb_strcasecmp@plt+0x3cf8>
  40660e:	xchg   ax,ax
  406610:	push   rbp
  406611:	push   r15
  406613:	push   r14
  406615:	push   r13
  406617:	push   r12
  406619:	push   rbx
  40661a:	sub    rsp,0x38
  40661e:	mov    r14,rdx
  406621:	mov    rbx,QWORD PTR [rdx+0x10]
  406625:	mov    rdi,rbx
  406628:	call   402200 <strlen@plt>
  40662d:	lea    rdi,[rax+0x1]
  406631:	call   402180 <malloc@plt>
  406636:	test   rax,rax
  406639:	je     4069b6 <rb_strcasecmp@plt+0x4496>
  40663f:	mov    rbp,rax
  406642:	mov    rdi,rax
  406645:	mov    rsi,rbx
  406648:	call   402410 <strcpy@plt>
  40664d:	cmp    BYTE PTR [rbp+0x0],0x2a
  406651:	mov    QWORD PTR [rsp+0x18],r14
  406656:	mov    QWORD PTR [rsp+0x10],rbp
  40665b:	je     4067c9 <rb_strcasecmp@plt+0x42a9>
  406661:	lea    rsi,[rip+0x422c]        # 40a894 <rb_strcasecmp@plt+0x8374>
  406668:	lea    rdx,[rsp+0x30]
  40666d:	mov    rdi,rbp
  406670:	call   402130 <rb_strtok_r@plt>
  406675:	test   rax,rax
  406678:	je     4067c9 <rb_strcasecmp@plt+0x42a9>
  40667e:	mov    rbx,rax
  406681:	xor    eax,eax
  406683:	mov    QWORD PTR [rsp+0x8],rax
  406688:	xor    eax,eax
  40668a:	mov    QWORD PTR [rsp],rax
  40668e:	xor    r13d,r13d
  406691:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40669b:	nop    DWORD PTR [rax+rax*1+0x0]
  4066a0:	mov    QWORD PTR [rsp+0x28],r13
  4066a5:	mov    edi,0x1
  4066aa:	mov    esi,0x58
  4066af:	call   402440 <calloc@plt>
  4066b4:	test   rax,rax
  4066b7:	je     4069b6 <rb_strcasecmp@plt+0x4496>
  4066bd:	mov    rbp,rax
  4066c0:	mov    r12,rax
  4066c3:	mov    r15d,0x2
  4066c9:	xor    r13d,r13d
  4066cc:	mov    QWORD PTR [rsp+0x20],rbx
  4066d1:	jmp    4066e4 <rb_strcasecmp@plt+0x41c4>
  4066d3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4066dd:	nop    DWORD PTR [rax]
  4066e0:	add    rbx,0x1
  4066e4:	movsx  r14,BYTE PTR [rbx]
  4066e8:	cmp    r14,0x2e
  4066ec:	je     406710 <rb_strcasecmp@plt+0x41f0>
  4066ee:	test   r14b,r14b
  4066f1:	je     406730 <rb_strcasecmp@plt+0x4210>
  4066f3:	call   402230 <__ctype_b_loc@plt>
  4066f8:	mov    rax,QWORD PTR [rax]
  4066fb:	test   BYTE PTR [rax+r14*2+0x1],0x8
  406701:	jne    4066e0 <rb_strcasecmp@plt+0x41c0>
  406703:	jmp    406979 <rb_strcasecmp@plt+0x4459>
  406708:	nop    DWORD PTR [rax+rax*1+0x0]
  406710:	cmp    r13d,0x3
  406714:	jge    406999 <rb_strcasecmp@plt+0x4479>
  40671a:	add    r13d,0x1
  40671e:	mov    r15d,0x1
  406724:	jmp    4066e0 <rb_strcasecmp@plt+0x41c0>
  406726:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406730:	add    r13d,0xffffffff
  406734:	cmp    r13d,0x2
  406738:	jb     4069bb <rb_strcasecmp@plt+0x449b>
  40673e:	mov    DWORD PTR [r12],r15d
  406742:	lea    rdi,[rbp+0x4]
  406746:	mov    edx,0x35
  40674b:	mov    rsi,QWORD PTR [rsp+0x20]
  406750:	call   4021c0 <rb_strlcpy@plt>
  406755:	add    rbp,0x40
  406759:	mov    QWORD PTR [r12+0x40],r12
  40675e:	mov    QWORD PTR [r12+0x48],0x0
  406767:	mov    rax,QWORD PTR [rsp+0x8]
  40676c:	mov    QWORD PTR [r12+0x50],rax
  406771:	test   rax,rax
  406774:	mov    r13,QWORD PTR [rsp+0x28]
  406779:	je     406790 <rb_strcasecmp@plt+0x4270>
  40677b:	mov    QWORD PTR [rax+0x8],rbp
  40677f:	jmp    40679f <rb_strcasecmp@plt+0x427f>
  406781:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40678b:	nop    DWORD PTR [rax+rax*1+0x0]
  406790:	mov    rax,QWORD PTR [rsp]
  406794:	test   rax,rax
  406797:	cmove  rax,rbp
  40679b:	mov    QWORD PTR [rsp],rax
  40679f:	mov    QWORD PTR [rsp+0x8],rbp
  4067a4:	add    r13,0x1
  4067a8:	xor    edi,edi
  4067aa:	lea    rsi,[rip+0x40e3]        # 40a894 <rb_strcasecmp@plt+0x8374>
  4067b1:	lea    rdx,[rsp+0x30]
  4067b6:	call   402130 <rb_strtok_r@plt>
  4067bb:	mov    rbx,rax
  4067be:	test   rax,rax
  4067c1:	jne    4066a0 <rb_strcasecmp@plt+0x4180>
  4067c7:	jmp    4067d9 <rb_strcasecmp@plt+0x42b9>
  4067c9:	xor    r13d,r13d
  4067cc:	xor    eax,eax
  4067ce:	mov    QWORD PTR [rsp],rax
  4067d2:	xor    eax,eax
  4067d4:	mov    QWORD PTR [rsp+0x8],rax
  4067d9:	mov    rdi,QWORD PTR [rsp+0x10]
  4067de:	call   4021f0 <free@plt>
  4067e3:	mov    rbx,QWORD PTR [rsp+0x18]
  4067e8:	mov    rdi,QWORD PTR [rbx+0x8]
  4067ec:	xor    esi,esi
  4067ee:	mov    edx,0xa
  4067f3:	call   4022f0 <strtol@plt>
  4067f8:	mov    r15,rax
  4067fb:	and    r15b,0x3
  4067ff:	je     406931 <rb_strcasecmp@plt+0x4411>
  406805:	mov    r12,QWORD PTR [rbx]
  406808:	test   r12,r12
  40680b:	je     406931 <rb_strcasecmp@plt+0x4411>
  406811:	mov    r14,QWORD PTR [rbx+0x18]
  406815:	test   r14,r14
  406818:	je     406931 <rb_strcasecmp@plt+0x4411>
  40681e:	mov    rbp,QWORD PTR [rip+0xd743]        # 413f68 <rb_strcasecmp@plt+0x11a48>
  406825:	test   rbp,rbp
  406828:	jne    406839 <rb_strcasecmp@plt+0x4319>
  40682a:	jmp    40685a <rb_strcasecmp@plt+0x433a>
  40682c:	nop    DWORD PTR [rax+0x0]
  406830:	mov    rbp,QWORD PTR [rbp+0x10]
  406834:	test   rbp,rbp
  406837:	je     40685a <rb_strcasecmp@plt+0x433a>
  406839:	mov    rbx,QWORD PTR [rbp+0x0]
  40683d:	mov    rdi,rbx
  406840:	mov    rsi,r12
  406843:	call   402120 <strcasecmp@plt>
  406848:	test   eax,eax
  40684a:	jne    406830 <rb_strcasecmp@plt+0x4310>
  40684c:	test   rbx,rbx
  40684f:	je     40685a <rb_strcasecmp@plt+0x433a>
  406851:	mov    BYTE PTR [rbx+0x320],0x0
  406858:	jmp    4068c4 <rb_strcasecmp@plt+0x43a4>
  40685a:	mov    edi,0x1
  40685f:	mov    esi,0x338
  406864:	call   402440 <calloc@plt>
  406869:	test   rax,rax
  40686c:	je     4069b6 <rb_strcasecmp@plt+0x4496>
  406872:	mov    rbx,rax
  406875:	call   4024b0 <rb_make_rb_dlink_node@plt>
  40687a:	test   rax,rax
  40687d:	je     4069c4 <rb_strcasecmp@plt+0x44a4>
  406883:	mov    QWORD PTR [rax],rbx
  406886:	mov    QWORD PTR [rax+0x8],0x0
  40688e:	mov    rcx,QWORD PTR [rip+0xd6d3]        # 413f68 <rb_strcasecmp@plt+0x11a48>
  406895:	mov    QWORD PTR [rax+0x10],rcx
  406899:	test   rcx,rcx
  40689c:	je     4068a7 <rb_strcasecmp@plt+0x4387>
  40689e:	add    rcx,0x8
  4068a2:	mov    QWORD PTR [rcx],rax
  4068a5:	jmp    4068b5 <rb_strcasecmp@plt+0x4395>
  4068a7:	cmp    QWORD PTR [rip+0xd6c1],0x0        # 413f70 <rb_strcasecmp@plt+0x11a50>
  4068af:	je     40696d <rb_strcasecmp@plt+0x444d>
  4068b5:	mov    QWORD PTR [rip+0xd6ac],rax        # 413f68 <rb_strcasecmp@plt+0x11a48>
  4068bc:	add    QWORD PTR [rip+0xd6b4],0x1        # 413f78 <rb_strcasecmp@plt+0x11a58>
  4068c4:	mov    edx,0x100
  4068c9:	mov    rdi,rbx
  4068cc:	mov    rsi,r12
  4068cf:	call   4021c0 <rb_strlcpy@plt>
  4068d4:	lea    rdi,[rbx+0x100]
  4068db:	mov    edx,0x200
  4068e0:	mov    rsi,r14
  4068e3:	call   4021c0 <rb_strlcpy@plt>
  4068e8:	mov    BYTE PTR [rbx+0x300],r15b
  4068ef:	mov    rcx,QWORD PTR [rsp+0x8]
  4068f4:	test   rcx,rcx
  4068f7:	je     406921 <rb_strcasecmp@plt+0x4401>
  4068f9:	mov    rax,QWORD PTR [rbx+0x308]
  406900:	test   rax,rax
  406903:	je     40693a <rb_strcasecmp@plt+0x441a>
  406905:	mov    rdx,QWORD PTR [rsp]
  406909:	mov    QWORD PTR [rdx+0x10],rax
  40690d:	mov    QWORD PTR [rax+0x8],rdx
  406911:	mov    QWORD PTR [rbx+0x308],rcx
  406918:	add    QWORD PTR [rbx+0x318],r13
  40691f:	jmp    406953 <rb_strcasecmp@plt+0x4433>
  406921:	mov    QWORD PTR [rbx+0x330],0x0
  40692c:	test   rbx,rbx
  40692f:	jne    40695e <rb_strcasecmp@plt+0x443e>
  406931:	lea    rsi,[rip+0x4026]        # 40a95e <rb_strcasecmp@plt+0x843e>
  406938:	jmp    4069a0 <rb_strcasecmp@plt+0x4480>
  40693a:	mov    QWORD PTR [rbx+0x308],rcx
  406941:	mov    rax,QWORD PTR [rsp]
  406945:	mov    QWORD PTR [rbx+0x310],rax
  40694c:	mov    QWORD PTR [rbx+0x318],r13
  406953:	mov    QWORD PTR [rbx+0x330],0x0
  40695e:	add    rsp,0x38
  406962:	pop    rbx
  406963:	pop    r12
  406965:	pop    r13
  406967:	pop    r14
  406969:	pop    r15
  40696b:	pop    rbp
  40696c:	ret    
  40696d:	lea    rcx,[rip+0xd5fc]        # 413f70 <rb_strcasecmp@plt+0x11a50>
  406974:	jmp    4068a2 <rb_strcasecmp@plt+0x4382>
  406979:	lea    rsi,[rip+0x3f50]        # 40a8d0 <rb_strcasecmp@plt+0x83b0>
  406980:	mov    edi,0x43
  406985:	xor    eax,eax
  406987:	mov    edx,r14d
  40698a:	call   403150 <rb_strcasecmp@plt+0xc30>
  40698f:	mov    edi,0x3
  406994:	call   4020e0 <exit@plt>
  406999:	lea    rsi,[rip+0x3ef6]        # 40a896 <rb_strcasecmp@plt+0x8376>
  4069a0:	mov    edi,0x43
  4069a5:	xor    eax,eax
  4069a7:	call   403150 <rb_strcasecmp@plt+0xc30>
  4069ac:	mov    edi,0x3
  4069b1:	call   4020e0 <exit@plt>
  4069b6:	call   402380 <rb_outofmemory@plt>
  4069bb:	lea    rsi,[rip+0x3f5e]        # 40a920 <rb_strcasecmp@plt+0x8400>
  4069c2:	jmp    4069a0 <rb_strcasecmp@plt+0x4480>
  4069c4:	lea    rdi,[rip+0x3b32]        # 40a4fd <rb_strcasecmp@plt+0x7fdd>
  4069cb:	lea    rsi,[rip+0x3b35]        # 40a507 <rb_strcasecmp@plt+0x7fe7>
  4069d2:	lea    rcx,[rip+0x3b8d]        # 40a566 <rb_strcasecmp@plt+0x8046>
  4069d9:	mov    edx,0x90
  4069de:	call   4020f0 <__assert_fail@plt>
  4069e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4069ed:	nop    DWORD PTR [rax]
  4069f0:	push   r15
  4069f2:	push   r14
  4069f4:	push   r12
  4069f6:	push   rbx
  4069f7:	push   rax
  4069f8:	mov    r14,QWORD PTR [rdx]
  4069fb:	mov    r15,QWORD PTR [rip+0xd566]        # 413f68 <rb_strcasecmp@plt+0x11a48>
  406a02:	test   r15,r15
  406a05:	je     406a87 <rb_strcasecmp@plt+0x4567>
  406a0b:	mov    rbx,r15
  406a0e:	xchg   ax,ax
  406a10:	mov    r12,QWORD PTR [rbx]
  406a13:	mov    rdi,r12
  406a16:	mov    rsi,r14
  406a19:	call   402120 <strcasecmp@plt>
  406a1e:	test   eax,eax
  406a20:	je     406a2d <rb_strcasecmp@plt+0x450d>
  406a22:	mov    rbx,QWORD PTR [rbx+0x10]
  406a26:	test   rbx,rbx
  406a29:	jne    406a10 <rb_strcasecmp@plt+0x44f0>
  406a2b:	jmp    406a87 <rb_strcasecmp@plt+0x4567>
  406a2d:	test   r12,r12
  406a30:	je     406a87 <rb_strcasecmp@plt+0x4567>
  406a32:	cmp    DWORD PTR [r12+0x324],0x0
  406a3b:	jle    406a60 <rb_strcasecmp@plt+0x4540>
  406a3d:	mov    BYTE PTR [r12+0x320],0x1
  406a46:	add    rsp,0x8
  406a4a:	pop    rbx
  406a4b:	pop    r12
  406a4d:	pop    r14
  406a4f:	pop    r15
  406a51:	ret    
  406a52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406a5c:	nop    DWORD PTR [rax+0x0]
  406a60:	test   r15,r15
  406a63:	je     406ad9 <rb_strcasecmp@plt+0x45b9>
  406a65:	mov    rdi,r15
  406a68:	mov    r15,QWORD PTR [r15+0x10]
  406a6c:	cmp    QWORD PTR [rdi],r12
  406a6f:	jne    406a60 <rb_strcasecmp@plt+0x4540>
  406a71:	lea    rax,[rdi+0x8]
  406a75:	mov    rcx,QWORD PTR [rdi+0x8]
  406a79:	test   r15,r15
  406a7c:	je     406aa8 <rb_strcasecmp@plt+0x4588>
  406a7e:	mov    QWORD PTR [r15+0x8],rcx
  406a82:	mov    rcx,QWORD PTR [rax]
  406a85:	jmp    406aaf <rb_strcasecmp@plt+0x458f>
  406a87:	lea    rsi,[rip+0x3efd]        # 40a98b <rb_strcasecmp@plt+0x846b>
  406a8e:	mov    edi,0x57
  406a93:	xor    eax,eax
  406a95:	mov    rdx,r14
  406a98:	add    rsp,0x8
  406a9c:	pop    rbx
  406a9d:	pop    r12
  406a9f:	pop    r14
  406aa1:	pop    r15
  406aa3:	jmp    403150 <rb_strcasecmp@plt+0xc30>
  406aa8:	mov    QWORD PTR [rip+0xd4c1],rcx        # 413f70 <rb_strcasecmp@plt+0x11a50>
  406aaf:	test   rcx,rcx
  406ab2:	lea    rcx,[rcx+0x10]
  406ab6:	lea    rdx,[rip+0xd4ab]        # 413f68 <rb_strcasecmp@plt+0x11a48>
  406abd:	cmove  rcx,rdx
  406ac1:	mov    QWORD PTR [rcx],r15
  406ac4:	vxorps xmm0,xmm0,xmm0
  406ac8:	vmovups XMMWORD PTR [rax],xmm0
  406acc:	add    QWORD PTR [rip+0xd4a4],0xffffffffffffffff        # 413f78 <rb_strcasecmp@plt+0x11a58>
  406ad4:	call   4022c0 <rb_free_rb_dlink_node@plt>
  406ad9:	mov    rdi,r12
  406adc:	add    rsp,0x8
  406ae0:	pop    rbx
  406ae1:	pop    r12
  406ae3:	pop    r14
  406ae5:	pop    r15
  406ae7:	jmp    4021f0 <free@plt>
  406aec:	nop    DWORD PTR [rax+0x0]
  406af0:	push   r15
  406af2:	push   r14
  406af4:	push   rbx
  406af5:	mov    r14,QWORD PTR [rip+0xd46c]        # 413f68 <rb_strcasecmp@plt+0x11a48>
  406afc:	test   r14,r14
  406aff:	je     406ba2 <rb_strcasecmp@plt+0x4682>
  406b05:	lea    r15,[rip+0xd45c]        # 413f68 <rb_strcasecmp@plt+0x11a48>
  406b0c:	nop    DWORD PTR [rax+0x0]
  406b10:	mov    rbx,QWORD PTR [r14]
  406b13:	mov    r14,QWORD PTR [r14+0x10]
  406b17:	cmp    DWORD PTR [rbx+0x324],0x0
  406b1e:	jle    406b30 <rb_strcasecmp@plt+0x4610>
  406b20:	mov    BYTE PTR [rbx+0x320],0x1
  406b27:	test   r14,r14
  406b2a:	jne    406b10 <rb_strcasecmp@plt+0x45f0>
  406b2c:	jmp    406ba2 <rb_strcasecmp@plt+0x4682>
  406b2e:	xchg   ax,ax
  406b30:	mov    rax,QWORD PTR [rip+0xd431]        # 413f68 <rb_strcasecmp@plt+0x11a48>
  406b37:	nop    WORD PTR [rax+rax*1+0x0]
  406b40:	test   rax,rax
  406b43:	je     406b91 <rb_strcasecmp@plt+0x4671>
  406b45:	mov    rdi,rax
  406b48:	mov    rax,QWORD PTR [rax+0x10]
  406b4c:	cmp    QWORD PTR [rdi],rbx
  406b4f:	jne    406b40 <rb_strcasecmp@plt+0x4620>
  406b51:	lea    rcx,[rdi+0x8]
  406b55:	mov    rdx,QWORD PTR [rdi+0x8]
  406b59:	test   rax,rax
  406b5c:	je     406b67 <rb_strcasecmp@plt+0x4647>
  406b5e:	mov    QWORD PTR [rax+0x8],rdx
  406b62:	mov    rdx,QWORD PTR [rcx]
  406b65:	jmp    406b6e <rb_strcasecmp@plt+0x464e>
  406b67:	mov    QWORD PTR [rip+0xd402],rdx        # 413f70 <rb_strcasecmp@plt+0x11a50>
  406b6e:	test   rdx,rdx
  406b71:	lea    rdx,[rdx+0x10]
  406b75:	cmove  rdx,r15
  406b79:	mov    QWORD PTR [rdx],rax
  406b7c:	vxorps xmm0,xmm0,xmm0
  406b80:	vmovups XMMWORD PTR [rcx],xmm0
  406b84:	add    QWORD PTR [rip+0xd3ec],0xffffffffffffffff        # 413f78 <rb_strcasecmp@plt+0x11a58>
  406b8c:	call   4022c0 <rb_free_rb_dlink_node@plt>
  406b91:	mov    rdi,rbx
  406b94:	call   4021f0 <free@plt>
  406b99:	test   r14,r14
  406b9c:	jne    406b10 <rb_strcasecmp@plt+0x45f0>
  406ba2:	pop    rbx
  406ba3:	pop    r14
  406ba5:	pop    r15
  406ba7:	ret    
  406ba8:	nop    DWORD PTR [rax+rax*1+0x0]
  406bb0:	push   rax
  406bb1:	mov    rdi,QWORD PTR [rdx]
  406bb4:	xor    esi,esi
  406bb6:	mov    edx,0xa
  406bbb:	call   4022f0 <strtol@plt>
  406bc0:	mov    rcx,rax
  406bc3:	test   ecx,ecx
  406bc5:	js     406bcf <rb_strcasecmp@plt+0x46af>
  406bc7:	mov    DWORD PTR [rip+0x8fc3],ecx        # 40fb90 <rb_strcasecmp@plt+0xd670>
  406bcd:	pop    rax
  406bce:	ret    
  406bcf:	lea    rsi,[rip+0x3de1]        # 40a9b7 <rb_strcasecmp@plt+0x8497>
  406bd6:	mov    edi,0x43
  406bdb:	xor    eax,eax
  406bdd:	mov    edx,ecx
  406bdf:	call   403150 <rb_strcasecmp@plt+0xc30>
  406be4:	mov    edi,0x3
  406be9:	call   4020e0 <exit@plt>
  406bee:	xchg   ax,ax
  406bf0:	push   r15
  406bf2:	push   r14
  406bf4:	push   rbx
  406bf5:	sub    rsp,0x10
  406bf9:	lea    r15,[rip+0xd528]        # 414128 <rb_strcasecmp@plt+0x11c08>
  406c00:	mov    rdi,QWORD PTR [r15]
  406c03:	mov    rbx,rsp
  406c06:	mov    rsi,rbx
  406c09:	call   402240 <rb_dictionary_foreach_start@plt>
  406c0e:	mov    rdi,QWORD PTR [r15]
  406c11:	mov    rsi,rbx
  406c14:	call   402140 <rb_dictionary_foreach_cur@plt>
  406c19:	test   rax,rax
  406c1c:	je     406c56 <rb_strcasecmp@plt+0x4736>
  406c1e:	lea    r14,[rip+0x3e8e]        # 40aab3 <rb_strcasecmp@plt+0x8593>
  406c25:	mov    rbx,rsp
  406c28:	nop    DWORD PTR [rax+rax*1+0x0]
  406c30:	mov    rdi,rax
  406c33:	mov    rsi,r14
  406c36:	call   407500 <rb_strcasecmp@plt+0x4fe0>
  406c3b:	mov    rdi,QWORD PTR [r15]
  406c3e:	mov    rsi,rbx
  406c41:	call   4021d0 <rb_dictionary_foreach_next@plt>
  406c46:	mov    rdi,QWORD PTR [r15]
  406c49:	mov    rsi,rbx
  406c4c:	call   402140 <rb_dictionary_foreach_cur@plt>
  406c51:	test   rax,rax
  406c54:	jne    406c30 <rb_strcasecmp@plt+0x4710>
  406c56:	mov    r14,QWORD PTR [rip+0xd30b]        # 413f68 <rb_strcasecmp@plt+0x11a48>
  406c5d:	test   r14,r14
  406c60:	je     406d02 <rb_strcasecmp@plt+0x47e2>
  406c66:	lea    r15,[rip+0xd2fb]        # 413f68 <rb_strcasecmp@plt+0x11a48>
  406c6d:	nop    DWORD PTR [rax]
  406c70:	mov    rbx,QWORD PTR [r14]
  406c73:	mov    r14,QWORD PTR [r14+0x10]
  406c77:	cmp    DWORD PTR [rbx+0x324],0x0
  406c7e:	jle    406c90 <rb_strcasecmp@plt+0x4770>
  406c80:	mov    BYTE PTR [rbx+0x320],0x1
  406c87:	test   r14,r14
  406c8a:	jne    406c70 <rb_strcasecmp@plt+0x4750>
  406c8c:	jmp    406d02 <rb_strcasecmp@plt+0x47e2>
  406c8e:	xchg   ax,ax
  406c90:	mov    rax,QWORD PTR [rip+0xd2d1]        # 413f68 <rb_strcasecmp@plt+0x11a48>
  406c97:	nop    WORD PTR [rax+rax*1+0x0]
  406ca0:	test   rax,rax
  406ca3:	je     406cf1 <rb_strcasecmp@plt+0x47d1>
  406ca5:	mov    rdi,rax
  406ca8:	mov    rax,QWORD PTR [rax+0x10]
  406cac:	cmp    QWORD PTR [rdi],rbx
  406caf:	jne    406ca0 <rb_strcasecmp@plt+0x4780>
  406cb1:	lea    rcx,[rdi+0x8]
  406cb5:	mov    rdx,QWORD PTR [rdi+0x8]
  406cb9:	test   rax,rax
  406cbc:	je     406cc7 <rb_strcasecmp@plt+0x47a7>
  406cbe:	mov    QWORD PTR [rax+0x8],rdx
  406cc2:	mov    rdx,QWORD PTR [rcx]
  406cc5:	jmp    406cce <rb_strcasecmp@plt+0x47ae>
  406cc7:	mov    QWORD PTR [rip+0xd2a2],rdx        # 413f70 <rb_strcasecmp@plt+0x11a50>
  406cce:	test   rdx,rdx
  406cd1:	lea    rdx,[rdx+0x10]
  406cd5:	cmove  rdx,r15
  406cd9:	mov    QWORD PTR [rdx],rax
  406cdc:	vxorps xmm0,xmm0,xmm0
  406ce0:	vmovups XMMWORD PTR [rcx],xmm0
  406ce4:	add    QWORD PTR [rip+0xd28c],0xffffffffffffffff        # 413f78 <rb_strcasecmp@plt+0x11a58>
  406cec:	call   4022c0 <rb_free_rb_dlink_node@plt>
  406cf1:	mov    rdi,rbx
  406cf4:	call   4021f0 <free@plt>
  406cf9:	test   r14,r14
  406cfc:	jne    406c70 <rb_strcasecmp@plt+0x4750>
  406d02:	add    rsp,0x10
  406d06:	pop    rbx
  406d07:	pop    r14
  406d09:	pop    r15
  406d0b:	ret    
  406d0c:	nop    DWORD PTR [rax+0x0]
  406d10:	push   rbp
  406d11:	push   r15
  406d13:	push   r14
  406d15:	push   r13
  406d17:	push   r12
  406d19:	push   rbx
  406d1a:	push   rax
  406d1b:	mov    r14,rdi
  406d1e:	cmp    QWORD PTR [rip+0xd252],0x0        # 413f78 <rb_strcasecmp@plt+0x11a58>
  406d26:	je     406d9e <rb_strcasecmp@plt+0x487e>
  406d28:	add    DWORD PTR [r14+0x1cc],0x1
  406d30:	lea    rax,[rip+0x8de1]        # 40fb18 <rb_strcasecmp@plt+0xd5f8>
  406d37:	mov    ebx,DWORD PTR [rax+0x18]
  406d3a:	mov    edi,0x1
  406d3f:	mov    esi,0x20
  406d44:	call   402440 <calloc@plt>
  406d49:	test   rax,rax
  406d4c:	je     406e33 <rb_strcasecmp@plt+0x4913>
  406d52:	mov    r15,QWORD PTR [r14+0x1d0]
  406d59:	shl    rbx,0x5
  406d5d:	mov    QWORD PTR [r15+rbx*1+0x10],rax
  406d62:	lea    rax,[rip+0xd3c7]        # 414130 <rb_strcasecmp@plt+0x11c10>
  406d69:	mov    r13,QWORD PTR [rax]
  406d6c:	test   r13,r13
  406d6f:	je     406e07 <rb_strcasecmp@plt+0x48e7>
  406d75:	lea    r12,[rip+0x3c60]        # 40a9dc <rb_strcasecmp@plt+0x84bc>
  406d7c:	mov    rbx,r13
  406d7f:	nop
  406d80:	mov    rbp,QWORD PTR [rbx]
  406d83:	mov    rdi,QWORD PTR [rbp+0x20]
  406d87:	mov    rsi,r12
  406d8a:	call   402120 <strcasecmp@plt>
  406d8f:	test   eax,eax
  406d91:	je     406db2 <rb_strcasecmp@plt+0x4892>
  406d93:	mov    rbx,QWORD PTR [rbx+0x10]
  406d97:	test   rbx,rbx
  406d9a:	jne    406d80 <rb_strcasecmp@plt+0x4860>
  406d9c:	jmp    406dd0 <rb_strcasecmp@plt+0x48b0>
  406d9e:	lea    rax,[rip+0x8d73]        # 40fb18 <rb_strcasecmp@plt+0xd5f8>
  406da5:	mov    esi,DWORD PTR [rax+0x18]
  406da8:	mov    rdi,r14
  406dab:	call   403c40 <rb_strcasecmp@plt+0x1720>
  406db0:	jmp    406e22 <rb_strcasecmp@plt+0x4902>
  406db2:	test   rbp,rbp
  406db5:	je     406dd0 <rb_strcasecmp@plt+0x48b0>
  406db7:	mov    eax,DWORD PTR [rbp+0x18]
  406dba:	shl    rax,0x5
  406dbe:	cmp    DWORD PTR [r15+rax*1+0x18],0x2
  406dc4:	jne    406e22 <rb_strcasecmp@plt+0x4902>
  406dc6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406dd0:	mov    rbx,QWORD PTR [r13+0x0]
  406dd4:	mov    rdi,QWORD PTR [rbx+0x20]
  406dd8:	lea    rsi,[rip+0x3ddd]        # 40abbc <rb_strcasecmp@plt+0x869c>
  406ddf:	call   402120 <strcasecmp@plt>
  406de4:	test   eax,eax
  406de6:	je     406df3 <rb_strcasecmp@plt+0x48d3>
  406de8:	mov    r13,QWORD PTR [r13+0x10]
  406dec:	test   r13,r13
  406def:	jne    406dd0 <rb_strcasecmp@plt+0x48b0>
  406df1:	jmp    406e07 <rb_strcasecmp@plt+0x48e7>
  406df3:	test   rbx,rbx
  406df6:	je     406e07 <rb_strcasecmp@plt+0x48e7>
  406df8:	mov    eax,DWORD PTR [rbx+0x18]
  406dfb:	shl    rax,0x5
  406dff:	cmp    DWORD PTR [r15+rax*1+0x18],0x2
  406e05:	jne    406e22 <rb_strcasecmp@plt+0x4902>
  406e07:	mov    rdi,r14
  406e0a:	call   406f70 <rb_strcasecmp@plt+0x4a50>
  406e0f:	test   al,al
  406e11:	jne    406e22 <rb_strcasecmp@plt+0x4902>
  406e13:	lea    rsi,[rip+0x3c7e]        # 40aa98 <rb_strcasecmp@plt+0x8578>
  406e1a:	mov    rdi,r14
  406e1d:	call   407500 <rb_strcasecmp@plt+0x4fe0>
  406e22:	mov    al,0x1
  406e24:	add    rsp,0x8
  406e28:	pop    rbx
  406e29:	pop    r12
  406e2b:	pop    r13
  406e2d:	pop    r14
  406e2f:	pop    r15
  406e31:	pop    rbp
  406e32:	ret    
  406e33:	call   402380 <rb_outofmemory@plt>
  406e38:	nop    DWORD PTR [rax+rax*1+0x0]
  406e40:	lea    rsi,[rip+0x3c6c]        # 40aab3 <rb_strcasecmp@plt+0x8593>
  406e47:	jmp    407500 <rb_strcasecmp@plt+0x4fe0>
  406e4c:	nop    DWORD PTR [rax+0x0]
  406e50:	lea    rsi,[rip+0x3c76]        # 40aacd <rb_strcasecmp@plt+0x85ad>
  406e57:	jmp    407500 <rb_strcasecmp@plt+0x4fe0>
  406e5c:	nop    DWORD PTR [rax+0x0]
  406e60:	push   rbp
  406e61:	push   r15
  406e63:	push   r14
  406e65:	push   r13
  406e67:	push   r12
  406e69:	push   rbx
  406e6a:	push   rax
  406e6b:	lea    rax,[rip+0x8ca6]        # 40fb18 <rb_strcasecmp@plt+0xd5f8>
  406e72:	mov    eax,DWORD PTR [rax+0x18]
  406e75:	mov    r15,QWORD PTR [rdi+0x1d0]
  406e7c:	shl    rax,0x5
  406e80:	mov    rax,QWORD PTR [r15+rax*1+0x10]
  406e85:	test   rax,rax
  406e88:	je     406f43 <rb_strcasecmp@plt+0x4a23>
  406e8e:	cmp    BYTE PTR [rax],0x0
  406e91:	jne    406f43 <rb_strcasecmp@plt+0x4a23>
  406e97:	mov    r14,rdi
  406e9a:	lea    rax,[rip+0xd28f]        # 414130 <rb_strcasecmp@plt+0x11c10>
  406ea1:	mov    r13,QWORD PTR [rax]
  406ea4:	test   r13,r13
  406ea7:	je     406f37 <rb_strcasecmp@plt+0x4a17>
  406ead:	lea    r12,[rip+0x3b28]        # 40a9dc <rb_strcasecmp@plt+0x84bc>
  406eb4:	mov    rbx,r13
  406eb7:	nop    WORD PTR [rax+rax*1+0x0]
  406ec0:	mov    rbp,QWORD PTR [rbx]
  406ec3:	mov    rdi,QWORD PTR [rbp+0x20]
  406ec7:	mov    rsi,r12
  406eca:	call   402120 <strcasecmp@plt>
  406ecf:	test   eax,eax
  406ed1:	je     406ede <rb_strcasecmp@plt+0x49be>
  406ed3:	mov    rbx,QWORD PTR [rbx+0x10]
  406ed7:	test   rbx,rbx
  406eda:	jne    406ec0 <rb_strcasecmp@plt+0x49a0>
  406edc:	jmp    406f00 <rb_strcasecmp@plt+0x49e0>
  406ede:	test   rbp,rbp
  406ee1:	je     406f00 <rb_strcasecmp@plt+0x49e0>
  406ee3:	mov    eax,DWORD PTR [rbp+0x18]
  406ee6:	shl    rax,0x5
  406eea:	cmp    DWORD PTR [r15+rax*1+0x18],0x2
  406ef0:	jne    406f43 <rb_strcasecmp@plt+0x4a23>
  406ef2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406efc:	nop    DWORD PTR [rax+0x0]
  406f00:	mov    rbx,QWORD PTR [r13+0x0]
  406f04:	mov    rdi,QWORD PTR [rbx+0x20]
  406f08:	lea    rsi,[rip+0x3cad]        # 40abbc <rb_strcasecmp@plt+0x869c>
  406f0f:	call   402120 <strcasecmp@plt>
  406f14:	test   eax,eax
  406f16:	je     406f23 <rb_strcasecmp@plt+0x4a03>
  406f18:	mov    r13,QWORD PTR [r13+0x10]
  406f1c:	test   r13,r13
  406f1f:	jne    406f00 <rb_strcasecmp@plt+0x49e0>
  406f21:	jmp    406f37 <rb_strcasecmp@plt+0x4a17>
  406f23:	test   rbx,rbx
  406f26:	je     406f37 <rb_strcasecmp@plt+0x4a17>
  406f28:	mov    eax,DWORD PTR [rbx+0x18]
  406f2b:	shl    rax,0x5
  406f2f:	cmp    DWORD PTR [r15+rax*1+0x18],0x2
  406f35:	jne    406f43 <rb_strcasecmp@plt+0x4a23>
  406f37:	mov    rdi,r14
  406f3a:	call   406f70 <rb_strcasecmp@plt+0x4a50>
  406f3f:	test   al,al
  406f41:	je     406f52 <rb_strcasecmp@plt+0x4a32>
  406f43:	add    rsp,0x8
  406f47:	pop    rbx
  406f48:	pop    r12
  406f4a:	pop    r13
  406f4c:	pop    r14
  406f4e:	pop    r15
  406f50:	pop    rbp
  406f51:	ret    
  406f52:	lea    rsi,[rip+0x3b3f]        # 40aa98 <rb_strcasecmp@plt+0x8578>
  406f59:	mov    rdi,r14
  406f5c:	add    rsp,0x8
  406f60:	pop    rbx
  406f61:	pop    r12
  406f63:	pop    r13
  406f65:	pop    r14
  406f67:	pop    r15
  406f69:	pop    rbp
  406f6a:	jmp    407500 <rb_strcasecmp@plt+0x4fe0>
  406f6f:	nop
  406f70:	push   rbp
  406f71:	push   r15
  406f73:	push   r14
  406f75:	push   r13
  406f77:	push   r12
  406f79:	push   rbx
  406f7a:	sub    rsp,0x128
  406f81:	mov    r13,rdi
  406f84:	lea    rax,[rip+0x8b8d]        # 40fb18 <rb_strcasecmp@plt+0xd5f8>
  406f8b:	mov    eax,DWORD PTR [rax+0x18]
  406f8e:	mov    rcx,QWORD PTR [rdi+0x1d0]
  406f95:	shl    rax,0x5
  406f99:	mov    rcx,QWORD PTR [rcx+rax*1+0x10]
  406f9e:	movzx  eax,WORD PTR [rdi+0xf8]
  406fa5:	cmp    eax,0x2
  406fa8:	je     406fc0 <rb_strcasecmp@plt+0x4aa0>
  406faa:	movzx  eax,ax
  406fad:	cmp    eax,0xa
  406fb0:	jne    407172 <rb_strcasecmp@plt+0x4c52>
  406fb6:	mov    DWORD PTR [rsp+0x4],0x2
  406fbe:	jmp    406fc8 <rb_strcasecmp@plt+0x4aa8>
  406fc0:	mov    DWORD PTR [rsp+0x4],0x1
  406fc8:	mov    QWORD PTR [rsp+0x10],rcx
  406fcd:	mov    BYTE PTR [rcx],0x1
  406fd0:	mov    edi,DWORD PTR [r13+0x0]
  406fd4:	lea    rsi,[rip+0x3a06]        # 40a9e1 <rb_strcasecmp@plt+0x84c1>
  406fdb:	xor    eax,eax
  406fdd:	call   403070 <rb_strcasecmp@plt+0xb50>
  406fe2:	mov    r14,QWORD PTR [rip+0xcf7f]        # 413f68 <rb_strcasecmp@plt+0x11a48>
  406fe9:	test   r14,r14
  406fec:	je     407139 <rb_strcasecmp@plt+0x4c19>
  406ff2:	lea    rax,[r13+0xf8]
  406ff9:	mov    QWORD PTR [rsp+0x18],rax
  406ffe:	mov    QWORD PTR [rsp+0x8],r13
  407003:	jmp    407120 <rb_strcasecmp@plt+0x4c00>
  407008:	nop    DWORD PTR [rax+rax*1+0x0]
  407010:	movzx  eax,BYTE PTR [rbx+0x300]
  407017:	test   DWORD PTR [rsp+0x4],eax
  40701b:	je     407130 <rb_strcasecmp@plt+0x4c10>
  407021:	mov    edi,0x1
  407026:	mov    esi,0x30
  40702b:	call   402440 <calloc@plt>
  407030:	test   rax,rax
  407033:	je     407186 <rb_strcasecmp@plt+0x4c66>
  407039:	mov    rbp,rax
  40703c:	mov    r12,rax
  40703f:	lea    rax,[rip+0x8ad2]        # 40fb18 <rb_strcasecmp@plt+0xd5f8>
  407046:	mov    eax,DWORD PTR [rax+0x18]
  407049:	mov    rcx,QWORD PTR [r13+0x1d0]
  407050:	shl    rax,0x5
  407054:	mov    r15,QWORD PTR [rcx+rax*1+0x10]
  407059:	mov    QWORD PTR [rbp+0x0],rbx
  40705d:	mov    QWORD PTR [rbp+0x8],r13
  407061:	movzx  eax,WORD PTR [r13+0xf8]
  407069:	cmp    eax,0xa
  40706c:	je     40708c <rb_strcasecmp@plt+0x4b6c>
  40706e:	movzx  eax,ax
  407071:	cmp    eax,0x2
  407074:	jne    407095 <rb_strcasecmp@plt+0x4b75>
  407076:	test   BYTE PTR [rbx+0x300],0x1
  40707d:	jne    407095 <rb_strcasecmp@plt+0x4b75>
  40707f:	mov    rdi,r12
  407082:	call   4021f0 <free@plt>
  407087:	jmp    407130 <rb_strcasecmp@plt+0x4c10>
  40708c:	test   BYTE PTR [rbx+0x300],0x2
  407093:	je     40707f <rb_strcasecmp@plt+0x4b5f>
  407095:	mov    esi,0x100
  40709a:	lea    r13,[rsp+0x20]
  40709f:	mov    rdi,r13
  4070a2:	mov    rdx,QWORD PTR [rsp+0x18]
  4070a7:	mov    rcx,rbx
  4070aa:	call   404560 <rb_strcasecmp@plt+0x2040>
  4070af:	mov    esi,0x2
  4070b4:	mov    rdi,r13
  4070b7:	lea    rdx,[rip+0xd2]        # 407190 <rb_strcasecmp@plt+0x4c70>
  4070be:	mov    rcx,r12
  4070c1:	call   4029e0 <rb_strcasecmp@plt+0x4c0>
  4070c6:	mov    QWORD PTR [r12+0x10],rax
  4070cb:	add    rbp,0x18
  4070cf:	mov    QWORD PTR [r12+0x18],r12
  4070d4:	mov    QWORD PTR [r12+0x20],0x0
  4070dd:	mov    rax,QWORD PTR [r15+0x8]
  4070e1:	mov    QWORD PTR [r12+0x28],rax
  4070e6:	test   rax,rax
  4070e9:	je     4070f9 <rb_strcasecmp@plt+0x4bd9>
  4070eb:	add    rax,0x8
  4070ef:	mov    r13,QWORD PTR [rsp+0x8]
  4070f4:	mov    QWORD PTR [rax],rbp
  4070f7:	jmp    407105 <rb_strcasecmp@plt+0x4be5>
  4070f9:	cmp    QWORD PTR [r15+0x10],0x0
  4070fe:	mov    r13,QWORD PTR [rsp+0x8]
  407103:	je     407117 <rb_strcasecmp@plt+0x4bf7>
  407105:	mov    QWORD PTR [r15+0x8],rbp
  407109:	add    QWORD PTR [r15+0x18],0x1
  40710e:	add    DWORD PTR [rbx+0x324],0x1
  407115:	jmp    407130 <rb_strcasecmp@plt+0x4c10>
  407117:	lea    rax,[r15+0x10]
  40711b:	jmp    4070f4 <rb_strcasecmp@plt+0x4bd4>
  40711d:	nop    DWORD PTR [rax]
  407120:	mov    rbx,QWORD PTR [r14]
  407123:	cmp    BYTE PTR [rbx+0x320],0x0
  40712a:	je     407010 <rb_strcasecmp@plt+0x4af0>
  407130:	mov    r14,QWORD PTR [r14+0x10]
  407134:	test   r14,r14
  407137:	jne    407120 <rb_strcasecmp@plt+0x4c00>
  407139:	mov    rax,QWORD PTR [rsp+0x10]
  40713e:	cmp    QWORD PTR [rax+0x18],0x0
  407143:	je     407172 <rb_strcasecmp@plt+0x4c52>
  407145:	lea    rax,[rip+0x89cc]        # 40fb18 <rb_strcasecmp@plt+0xd5f8>
  40714c:	mov    ebx,DWORD PTR [rax+0x18]
  40714f:	movsxd rbp,DWORD PTR [rip+0x8a3a]        # 40fb90 <rb_strcasecmp@plt+0xd670>
  407156:	call   402280 <rb_current_time@plt>
  40715b:	add    rax,rbp
  40715e:	mov    rcx,QWORD PTR [r13+0x1d0]
  407165:	shl    rbx,0x5
  407169:	mov    QWORD PTR [rcx+rbx*1+0x8],rax
  40716e:	mov    al,0x1
  407170:	jmp    407174 <rb_strcasecmp@plt+0x4c54>
  407172:	xor    eax,eax
  407174:	add    rsp,0x128
  40717b:	pop    rbx
  40717c:	pop    r12
  40717e:	pop    r13
  407180:	pop    r14
  407182:	pop    r15
  407184:	pop    rbp
  407185:	ret    
  407186:	call   402380 <rb_outofmemory@plt>
  40718b:	nop    DWORD PTR [rax+rax*1+0x0]
  407190:	push   rbp
  407191:	push   r15
  407193:	push   r14
  407195:	push   r13
  407197:	push   r12
  407199:	push   rbx
  40719a:	sub    rsp,0x18
  40719e:	mov    rbx,rcx
  4071a1:	mov    rdx,QWORD PTR [rcx+0x8]
  4071a5:	lea    rax,[rip+0x896c]        # 40fb18 <rb_strcasecmp@plt+0xd5f8>
  4071ac:	mov    ebp,DWORD PTR [rax+0x18]
  4071af:	mov    rax,QWORD PTR [rdx+0x1d0]
  4071b6:	mov    rcx,rbp
  4071b9:	shl    rcx,0x5
  4071bd:	mov    r15,QWORD PTR [rax+rcx*1+0x10]
  4071c2:	test   r15,r15
  4071c5:	je     407391 <rb_strcasecmp@plt+0x4e71>
  4071cb:	mov    r13,rdi
  4071ce:	mov    QWORD PTR [rsp+0x8],rdx
  4071d3:	mov    r12,QWORD PTR [rbx]
  4071d6:	test   rdi,rdi
  4071d9:	je     4072e2 <rb_strcasecmp@plt+0x4dc2>
  4071df:	test   sil,sil
  4071e2:	je     4072e2 <rb_strcasecmp@plt+0x4dc2>
  4071e8:	cmp    QWORD PTR [r12+0x318],0x0
  4071f1:	je     407263 <rb_strcasecmp@plt+0x4d43>
  4071f3:	mov    esi,0x2e
  4071f8:	mov    rdi,r13
  4071fb:	call   402270 <strrchr@plt>
  407200:	test   rax,rax
  407203:	je     4072a5 <rb_strcasecmp@plt+0x4d85>
  407209:	cmp    BYTE PTR [rax+0x1],0x0
  40720d:	je     4072a5 <rb_strcasecmp@plt+0x4d85>
  407213:	mov    QWORD PTR [rsp+0x10],rax
  407218:	mov    r14,QWORD PTR [r12+0x308]
  407220:	test   r14,r14
  407223:	je     4072e2 <rb_strcasecmp@plt+0x4dc2>
  407229:	add    QWORD PTR [rsp+0x10],0x1
  40722f:	nop
  407230:	mov    rsi,QWORD PTR [r14]
  407233:	mov    ecx,DWORD PTR [rsi]
  407235:	mov    rdi,r13
  407238:	cmp    ecx,0x1
  40723b:	je     40724b <rb_strcasecmp@plt+0x4d2b>
  40723d:	mov    rdi,QWORD PTR [rsp+0x10]
  407242:	cmp    ecx,0x2
  407245:	jne    4073b6 <rb_strcasecmp@plt+0x4e96>
  40724b:	add    rsi,0x4
  40724f:	call   4023e0 <strcmp@plt>
  407254:	test   eax,eax
  407256:	je     407263 <rb_strcasecmp@plt+0x4d43>
  407258:	mov    r14,QWORD PTR [r14+0x10]
  40725c:	test   r14,r14
  40725f:	jne    407230 <rb_strcasecmp@plt+0x4d10>
  407261:	jmp    4072e2 <rb_strcasecmp@plt+0x4dc2>
  407263:	add    DWORD PTR [r12+0x328],0x1
  40726c:	lea    rcx,[r12+0x100]
  407274:	xor    eax,eax
  407276:	mov    rbx,QWORD PTR [rsp+0x8]
  40727b:	mov    rdi,rbx
  40727e:	mov    esi,ebp
  407280:	mov    rdx,r12
  407283:	call   403860 <rb_strcasecmp@plt+0x1340>
  407288:	lea    rsi,[rip+0x3824]        # 40aab3 <rb_strcasecmp@plt+0x8593>
  40728f:	mov    rdi,rbx
  407292:	add    rsp,0x18
  407296:	pop    rbx
  407297:	pop    r12
  407299:	pop    r13
  40729b:	pop    r14
  40729d:	pop    r15
  40729f:	pop    rbp
  4072a0:	jmp    407500 <rb_strcasecmp@plt+0x4fe0>
  4072a5:	mov    ebp,0xe10
  4072aa:	add    rbp,QWORD PTR [r12+0x330]
  4072b2:	call   402280 <rb_current_time@plt>
  4072b7:	cmp    rbp,rax
  4072ba:	jge    4072e2 <rb_strcasecmp@plt+0x4dc2>
  4072bc:	lea    rsi,[rip+0x3796]        # 40aa59 <rb_strcasecmp@plt+0x8539>
  4072c3:	mov    edi,0x57
  4072c8:	xor    eax,eax
  4072ca:	mov    rdx,r12
  4072cd:	mov    rcx,r13
  4072d0:	call   403150 <rb_strcasecmp@plt+0xc30>
  4072d5:	call   402280 <rb_current_time@plt>
  4072da:	mov    QWORD PTR [r12+0x330],rax
  4072e2:	mov    rdi,r12
  4072e5:	call   4073e0 <rb_strcasecmp@plt+0x4ec0>
  4072ea:	mov    rdi,QWORD PTR [rbx+0x10]
  4072ee:	call   402d50 <rb_strcasecmp@plt+0x830>
  4072f3:	lea    rax,[r15+0x8]
  4072f7:	mov    rsi,QWORD PTR [rbx+0x20]
  4072fb:	mov    rdx,QWORD PTR [rbx+0x28]
  4072ff:	lea    rcx,[rbx+0x20]
  407303:	test   rdx,rdx
  407306:	je     407311 <rb_strcasecmp@plt+0x4df1>
  407308:	mov    QWORD PTR [rdx+0x8],rsi
  40730c:	mov    rsi,QWORD PTR [rcx]
  40730f:	jmp    407315 <rb_strcasecmp@plt+0x4df5>
  407311:	mov    QWORD PTR [r15+0x10],rsi
  407315:	mov    rbp,QWORD PTR [rsp+0x8]
  40731a:	lea    r14,[rip+0x87f7]        # 40fb18 <rb_strcasecmp@plt+0xd5f8>
  407321:	test   rsi,rsi
  407324:	lea    rsi,[rsi+0x10]
  407328:	cmove  rsi,rax
  40732c:	mov    QWORD PTR [rsi],rdx
  40732f:	vxorps xmm0,xmm0,xmm0
  407333:	vmovups XMMWORD PTR [rcx],xmm0
  407337:	add    QWORD PTR [r15+0x18],0xffffffffffffffff
  40733c:	mov    rdi,rbx
  40733f:	call   4021f0 <free@plt>
  407344:	cmp    QWORD PTR [r15+0x18],0x0
  407349:	jne    407391 <rb_strcasecmp@plt+0x4e71>
  40734b:	mov    edi,DWORD PTR [rbp+0x0]
  40734e:	lea    rsi,[rip+0x36b0]        # 40aa05 <rb_strcasecmp@plt+0x84e5>
  407355:	xor    eax,eax
  407357:	call   403070 <rb_strcasecmp@plt+0xb50>
  40735c:	mov    rdi,r15
  40735f:	call   4021f0 <free@plt>
  407364:	mov    esi,DWORD PTR [r14+0x18]
  407368:	mov    rax,QWORD PTR [rbp+0x1d0]
  40736f:	mov    rcx,rsi
  407372:	shl    rcx,0x5
  407376:	vxorps xmm0,xmm0,xmm0
  40737a:	vmovups XMMWORD PTR [rax+rcx*1+0x8],xmm0
  407380:	mov    rdi,rbp
  407383:	call   403c40 <rb_strcasecmp@plt+0x1720>
  407388:	add    DWORD PTR [rbp+0x1cc],0xffffffff
  40738f:	je     4073a0 <rb_strcasecmp@plt+0x4e80>
  407391:	add    rsp,0x18
  407395:	pop    rbx
  407396:	pop    r12
  407398:	pop    r13
  40739a:	pop    r14
  40739c:	pop    r15
  40739e:	pop    rbp
  40739f:	ret    
  4073a0:	mov    rdi,rbp
  4073a3:	add    rsp,0x18
  4073a7:	pop    rbx
  4073a8:	pop    r12
  4073aa:	pop    r13
  4073ac:	pop    r14
  4073ae:	pop    r15
  4073b0:	pop    rbp
  4073b1:	jmp    403b90 <rb_strcasecmp@plt+0x1670>
  4073b6:	lea    rsi,[rip+0x366d]        # 40aa2a <rb_strcasecmp@plt+0x850a>
  4073bd:	mov    edi,0x43
  4073c2:	xor    eax,eax
  4073c4:	mov    rdx,r12
  4073c7:	call   403150 <rb_strcasecmp@plt+0xc30>
  4073cc:	mov    edi,0x3
  4073d1:	call   4020e0 <exit@plt>
  4073d6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4073e0:	push   r15
  4073e2:	push   r14
  4073e4:	push   rbx
  4073e5:	mov    eax,DWORD PTR [rdi+0x324]
  4073eb:	lea    ecx,[rax-0x1]
  4073ee:	mov    DWORD PTR [rdi+0x324],ecx
  4073f4:	cmp    eax,0x1
  4073f7:	jg     4074b7 <rb_strcasecmp@plt+0x4f97>
  4073fd:	mov    r15,rdi
  407400:	mov    al,BYTE PTR [rdi+0x320]
  407406:	test   al,al
  407408:	je     4074b7 <rb_strcasecmp@plt+0x4f97>
  40740e:	mov    rdi,QWORD PTR [r15+0x308]
  407415:	test   rdi,rdi
  407418:	je     407482 <rb_strcasecmp@plt+0x4f62>
  40741a:	lea    r14,[r15+0x308]
  407421:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40742b:	nop    DWORD PTR [rax+rax*1+0x0]
  407430:	mov    rcx,QWORD PTR [rdi+0x8]
  407434:	mov    rbx,QWORD PTR [rdi+0x10]
  407438:	lea    rax,[rdi+0x8]
  40743c:	test   rbx,rbx
  40743f:	je     407450 <rb_strcasecmp@plt+0x4f30>
  407441:	mov    QWORD PTR [rbx+0x8],rcx
  407445:	mov    rcx,QWORD PTR [rax]
  407448:	jmp    407457 <rb_strcasecmp@plt+0x4f37>
  40744a:	nop    WORD PTR [rax+rax*1+0x0]
  407450:	mov    QWORD PTR [r15+0x310],rcx
  407457:	test   rcx,rcx
  40745a:	lea    rcx,[rcx+0x10]
  40745e:	cmove  rcx,r14
  407462:	mov    QWORD PTR [rcx],rbx
  407465:	vxorps xmm0,xmm0,xmm0
  407469:	vmovups XMMWORD PTR [rax],xmm0
  40746d:	add    QWORD PTR [r15+0x318],0xffffffffffffffff
  407475:	call   4021f0 <free@plt>
  40747a:	mov    rdi,rbx
  40747d:	test   rbx,rbx
  407480:	jne    407430 <rb_strcasecmp@plt+0x4f10>
  407482:	mov    rax,QWORD PTR [rip+0xcadf]        # 413f68 <rb_strcasecmp@plt+0x11a48>
  407489:	nop    DWORD PTR [rax+0x0]
  407490:	test   rax,rax
  407493:	je     4074ee <rb_strcasecmp@plt+0x4fce>
  407495:	mov    rdi,rax
  407498:	mov    rax,QWORD PTR [rax+0x10]
  40749c:	cmp    QWORD PTR [rdi],r15
  40749f:	jne    407490 <rb_strcasecmp@plt+0x4f70>
  4074a1:	lea    rcx,[rdi+0x8]
  4074a5:	mov    rdx,QWORD PTR [rdi+0x8]
  4074a9:	test   rax,rax
  4074ac:	je     4074bd <rb_strcasecmp@plt+0x4f9d>
  4074ae:	mov    QWORD PTR [rax+0x8],rdx
  4074b2:	mov    rdx,QWORD PTR [rcx]
  4074b5:	jmp    4074c4 <rb_strcasecmp@plt+0x4fa4>
  4074b7:	pop    rbx
  4074b8:	pop    r14
  4074ba:	pop    r15
  4074bc:	ret    
  4074bd:	mov    QWORD PTR [rip+0xcaac],rdx        # 413f70 <rb_strcasecmp@plt+0x11a50>
  4074c4:	test   rdx,rdx
  4074c7:	lea    rdx,[rdx+0x10]
  4074cb:	lea    rsi,[rip+0xca96]        # 413f68 <rb_strcasecmp@plt+0x11a48>
  4074d2:	cmove  rdx,rsi
  4074d6:	mov    QWORD PTR [rdx],rax
  4074d9:	vxorps xmm0,xmm0,xmm0
  4074dd:	vmovups XMMWORD PTR [rcx],xmm0
  4074e1:	add    QWORD PTR [rip+0xca8f],0xffffffffffffffff        # 413f78 <rb_strcasecmp@plt+0x11a58>
  4074e9:	call   4022c0 <rb_free_rb_dlink_node@plt>
  4074ee:	mov    rdi,r15
  4074f1:	pop    rbx
  4074f2:	pop    r14
  4074f4:	pop    r15
  4074f6:	jmp    4021f0 <free@plt>
  4074fb:	nop    DWORD PTR [rax+rax*1+0x0]
  407500:	push   rbp
  407501:	push   r15
  407503:	push   r14
  407505:	push   r13
  407507:	push   r12
  407509:	push   rbx
  40750a:	push   rax
  40750b:	lea    r12,[rip+0x8606]        # 40fb18 <rb_strcasecmp@plt+0xd5f8>
  407512:	mov    eax,DWORD PTR [r12+0x18]
  407517:	mov    rcx,QWORD PTR [rdi+0x1d0]
  40751e:	shl    rax,0x5
  407522:	mov    r15,QWORD PTR [rcx+rax*1+0x10]
  407527:	test   r15,r15
  40752a:	je     4075fd <rb_strcasecmp@plt+0x50dd>
  407530:	mov    r14,rdi
  407533:	cmp    QWORD PTR [r15+0x18],0x0
  407538:	je     4075c6 <rb_strcasecmp@plt+0x50a6>
  40753e:	lea    r13,[r15+0x8]
  407542:	mov    edi,DWORD PTR [r14]
  407545:	xor    eax,eax
  407547:	call   403070 <rb_strcasecmp@plt+0xb50>
  40754c:	mov    rbp,QWORD PTR [r13+0x0]
  407550:	test   rbp,rbp
  407553:	jne    40756d <rb_strcasecmp@plt+0x504d>
  407555:	jmp    4075c6 <rb_strcasecmp@plt+0x50a6>
  407557:	nop    WORD PTR [rax+rax*1+0x0]
  407560:	mov    rdi,rbx
  407563:	call   4021f0 <free@plt>
  407568:	test   rbp,rbp
  40756b:	je     4075c6 <rb_strcasecmp@plt+0x50a6>
  40756d:	mov    rbx,QWORD PTR [rbp+0x0]
  407571:	mov    rbp,QWORD PTR [rbp+0x10]
  407575:	mov    rdi,QWORD PTR [rbx+0x10]
  407579:	call   402d50 <rb_strcasecmp@plt+0x830>
  40757e:	mov    rdi,QWORD PTR [rbx]
  407581:	call   4073e0 <rb_strcasecmp@plt+0x4ec0>
  407586:	mov    rdx,QWORD PTR [rbx+0x20]
  40758a:	mov    rax,QWORD PTR [rbx+0x28]
  40758e:	lea    rcx,[rbx+0x20]
  407592:	test   rax,rax
  407595:	je     4075a0 <rb_strcasecmp@plt+0x5080>
  407597:	mov    QWORD PTR [rax+0x8],rdx
  40759b:	mov    rdx,QWORD PTR [rcx]
  40759e:	jmp    4075a4 <rb_strcasecmp@plt+0x5084>
  4075a0:	mov    QWORD PTR [r15+0x10],rdx
  4075a4:	test   rdx,rdx
  4075a7:	lea    rdx,[rdx+0x10]
  4075ab:	cmove  rdx,r13
  4075af:	mov    QWORD PTR [rdx],rax
  4075b2:	vxorps xmm0,xmm0,xmm0
  4075b6:	vmovups XMMWORD PTR [rcx],xmm0
  4075ba:	add    QWORD PTR [r15+0x18],0xffffffffffffffff
  4075bf:	test   rbx,rbx
  4075c2:	jne    407560 <rb_strcasecmp@plt+0x5040>
  4075c4:	jmp    407568 <rb_strcasecmp@plt+0x5048>
  4075c6:	mov    rdi,r15
  4075c9:	call   4021f0 <free@plt>
  4075ce:	mov    esi,DWORD PTR [r12+0x18]
  4075d3:	mov    rax,QWORD PTR [r14+0x1d0]
  4075da:	mov    rcx,rsi
  4075dd:	shl    rcx,0x5
  4075e1:	vxorps xmm0,xmm0,xmm0
  4075e5:	vmovups XMMWORD PTR [rax+rcx*1+0x8],xmm0
  4075eb:	mov    rdi,r14
  4075ee:	call   403c40 <rb_strcasecmp@plt+0x1720>
  4075f3:	add    DWORD PTR [r14+0x1cc],0xffffffff
  4075fb:	je     40760c <rb_strcasecmp@plt+0x50ec>
  4075fd:	add    rsp,0x8
  407601:	pop    rbx
  407602:	pop    r12
  407604:	pop    r13
  407606:	pop    r14
  407608:	pop    r15
  40760a:	pop    rbp
  40760b:	ret    
  40760c:	mov    rdi,r14
  40760f:	add    rsp,0x8
  407613:	pop    rbx
  407614:	pop    r12
  407616:	pop    r13
  407618:	pop    r14
  40761a:	pop    r15
  40761c:	pop    rbp
  40761d:	jmp    403b90 <rb_strcasecmp@plt+0x1670>
  407622:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40762c:	nop    DWORD PTR [rax+0x0]
  407630:	push   rax
  407631:	mov    rdi,QWORD PTR [rdx]
  407634:	xor    esi,esi
  407636:	mov    edx,0xa
  40763b:	call   4022f0 <strtol@plt>
  407640:	mov    rcx,rax
  407643:	test   ecx,ecx
  407645:	js     40764f <rb_strcasecmp@plt+0x512f>
  407647:	mov    DWORD PTR [rip+0x8613],ecx        # 40fc60 <rb_strcasecmp@plt+0xd740>
  40764d:	pop    rax
  40764e:	ret    
  40764f:	lea    rsi,[rip+0x34af]        # 40ab05 <rb_strcasecmp@plt+0x85e5>
  407656:	mov    edi,0x43
  40765b:	xor    eax,eax
  40765d:	mov    edx,ecx
  40765f:	call   403150 <rb_strcasecmp@plt+0xc30>
  407664:	mov    edi,0x3
  407669:	call   4020e0 <exit@plt>
  40766e:	xchg   ax,ax
  407670:	mov    rax,QWORD PTR [rdx]
  407673:	cmp    BYTE PTR [rax],0x31
  407676:	sete   BYTE PTR [rip+0x85e7]        # 40fc64 <rb_strcasecmp@plt+0xd744>
  40767d:	ret    
  40767e:	xchg   ax,ax
  407680:	push   r15
  407682:	push   r14
  407684:	push   rbx
  407685:	sub    rsp,0x10
  407689:	lea    r14,[rip+0xca98]        # 414128 <rb_strcasecmp@plt+0x11c08>
  407690:	mov    rdi,QWORD PTR [r14]
  407693:	mov    rbx,rsp
  407696:	mov    rsi,rbx
  407699:	call   402240 <rb_dictionary_foreach_start@plt>
  40769e:	mov    rdi,QWORD PTR [r14]
  4076a1:	mov    rsi,rbx
  4076a4:	call   402140 <rb_dictionary_foreach_cur@plt>
  4076a9:	test   rax,rax
  4076ac:	je     4076ff <rb_strcasecmp@plt+0x51df>
  4076ae:	lea    r15,[rip+0x8533]        # 40fbe8 <rb_strcasecmp@plt+0xd6c8>
  4076b5:	mov    rbx,rsp
  4076b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4076c0:	mov    ecx,DWORD PTR [r15+0x18]
  4076c4:	mov    rdx,QWORD PTR [rax+0x1d0]
  4076cb:	shl    rcx,0x5
  4076cf:	cmp    QWORD PTR [rdx+rcx*1+0x10],0x0
  4076d5:	je     4076e4 <rb_strcasecmp@plt+0x51c4>
  4076d7:	mov    esi,0x2
  4076dc:	mov    rdi,rax
  4076df:	call   407910 <rb_strcasecmp@plt+0x53f0>
  4076e4:	mov    rdi,QWORD PTR [r14]
  4076e7:	mov    rsi,rbx
  4076ea:	call   4021d0 <rb_dictionary_foreach_next@plt>
  4076ef:	mov    rdi,QWORD PTR [r14]
  4076f2:	mov    rsi,rbx
  4076f5:	call   402140 <rb_dictionary_foreach_cur@plt>
  4076fa:	test   rax,rax
  4076fd:	jne    4076c0 <rb_strcasecmp@plt+0x51a0>
  4076ff:	add    rsp,0x10
  407703:	pop    rbx
  407704:	pop    r14
  407706:	pop    r15
  407708:	ret    
  407709:	nop    DWORD PTR [rax+0x0]
  407710:	push   rbp
  407711:	push   r15
  407713:	push   r14
  407715:	push   r12
  407717:	push   rbx
  407718:	sub    rsp,0x100
  40771f:	mov    rbx,rdi
  407722:	mov    edi,0x1
  407727:	mov    esi,0x8
  40772c:	call   402440 <calloc@plt>
  407731:	test   rax,rax
  407734:	je     4078da <rb_strcasecmp@plt+0x53ba>
  40773a:	mov    r14,rax
  40773d:	cmp    BYTE PTR [rip+0x8520],0x0        # 40fc64 <rb_strcasecmp@plt+0xd744>
  407744:	je     40786a <rb_strcasecmp@plt+0x534a>
  40774a:	movzx  r15d,WORD PTR [rbx+0xf8]
  407752:	add    DWORD PTR [rbx+0x1cc],0x1
  407759:	mov    edi,DWORD PTR [rbx]
  40775b:	lea    rsi,[rip+0x33c8]        # 40ab2a <rb_strcasecmp@plt+0x860a>
  407762:	xor    eax,eax
  407764:	call   403070 <rb_strcasecmp@plt+0xb50>
  407769:	lea    rax,[rip+0x8478]        # 40fbe8 <rb_strcasecmp@plt+0xd6c8>
  407770:	mov    ebp,DWORD PTR [rax+0x18]
  407773:	mov    rax,QWORD PTR [rbx+0x1d0]
  40777a:	shl    rbp,0x5
  40777e:	mov    QWORD PTR [rax+rbp*1+0x10],r14
  407783:	movsxd r12,DWORD PTR [rip+0x84d6]        # 40fc60 <rb_strcasecmp@plt+0xd740>
  40778a:	call   402280 <rb_current_time@plt>
  40778f:	add    rax,r12
  407792:	mov    rcx,QWORD PTR [rbx+0x1d0]
  407799:	mov    QWORD PTR [rcx+rbp*1+0x8],rax
  40779e:	mov    edx,DWORD PTR [rbx+0x4]
  4077a1:	lea    rcx,[rip+0x3414]        # 40abbc <rb_strcasecmp@plt+0x869c>
  4077a8:	mov    esi,0x1
  4077ad:	mov    edi,r15d
  4077b0:	call   402110 <rb_socket@plt>
  4077b5:	mov    QWORD PTR [r14],rax
  4077b8:	test   rax,rax
  4077bb:	je     407896 <rb_strcasecmp@plt+0x5376>
  4077c1:	lea    rcx,[rbx+0xf8]
  4077c8:	vmovups ymm0,YMMWORD PTR [rbx+0x40]
  4077cd:	vmovups ymm1,YMMWORD PTR [rbx+0x60]
  4077d2:	vmovups ymm2,YMMWORD PTR [rbx+0x80]
  4077da:	vmovups ymm3,YMMWORD PTR [rbx+0xa0]
  4077e2:	vmovups YMMWORD PTR [rsp+0xe0],ymm3
  4077eb:	vmovups YMMWORD PTR [rsp+0xc0],ymm2
  4077f4:	vmovups YMMWORD PTR [rsp+0xa0],ymm1
  4077fd:	vmovups YMMWORD PTR [rsp+0x80],ymm0
  407806:	vmovups ymm0,YMMWORD PTR [rcx]
  40780a:	vmovups ymm1,YMMWORD PTR [rcx+0x20]
  40780f:	vmovups ymm2,YMMWORD PTR [rcx+0x40]
  407814:	vmovups ymm3,YMMWORD PTR [rcx+0x60]
  407819:	vmovups YMMWORD PTR [rsp],ymm0
  40781e:	vmovups YMMWORD PTR [rsp+0x60],ymm3
  407824:	vmovups YMMWORD PTR [rsp+0x40],ymm2
  40782a:	vmovups YMMWORD PTR [rsp+0x20],ymm1
  407830:	mov    WORD PTR [rsp+0x82],0x0
  40783a:	mov    WORD PTR [rsp+0x2],0x7100
  407841:	mov    r9d,DWORD PTR [rip+0x8418]        # 40fc60 <rb_strcasecmp@plt+0xd740>
  407848:	lea    rcx,[rip+0x181]        # 4079d0 <rb_strcasecmp@plt+0x54b0>
  40784f:	mov    rsi,rsp
  407852:	lea    rdx,[rsp+0x80]
  40785a:	mov    rdi,rax
  40785d:	mov    r8,rbx
  407860:	vzeroupper 
  407863:	call   402090 <rb_connect_tcp@plt>
  407868:	jmp    4078c8 <rb_strcasecmp@plt+0x53a8>
  40786a:	mov    rdi,r14
  40786d:	call   4021f0 <free@plt>
  407872:	mov    edi,DWORD PTR [rbx]
  407874:	lea    rsi,[rip+0x3320]        # 40ab9b <rb_strcasecmp@plt+0x867b>
  40787b:	xor    eax,eax
  40787d:	call   403070 <rb_strcasecmp@plt+0xb50>
  407882:	lea    rax,[rip+0x835f]        # 40fbe8 <rb_strcasecmp@plt+0xd6c8>
  407889:	mov    esi,DWORD PTR [rax+0x18]
  40788c:	mov    rdi,rbx
  40788f:	call   403c40 <rb_strcasecmp@plt+0x1720>
  407894:	jmp    4078c8 <rb_strcasecmp@plt+0x53a8>
  407896:	call   402390 <__errno_location@plt>
  40789b:	mov    edi,DWORD PTR [rax]
  40789d:	call   4022a0 <strerror@plt>
  4078a2:	mov    rcx,rax
  4078a5:	lea    rsi,[rip+0x3316]        # 40abc2 <rb_strcasecmp@plt+0x86a2>
  4078ac:	mov    edi,0x44
  4078b1:	xor    eax,eax
  4078b3:	mov    rdx,rcx
  4078b6:	call   403150 <rb_strcasecmp@plt+0xc30>
  4078bb:	mov    esi,0x2
  4078c0:	mov    rdi,rbx
  4078c3:	call   407910 <rb_strcasecmp@plt+0x53f0>
  4078c8:	mov    al,0x1
  4078ca:	add    rsp,0x100
  4078d1:	pop    rbx
  4078d2:	pop    r12
  4078d4:	pop    r14
  4078d6:	pop    r15
  4078d8:	pop    rbp
  4078d9:	ret    
  4078da:	call   402380 <rb_outofmemory@plt>
  4078df:	nop
  4078e0:	lea    rax,[rip+0x8301]        # 40fbe8 <rb_strcasecmp@plt+0xd6c8>
  4078e7:	mov    eax,DWORD PTR [rax+0x18]
  4078ea:	mov    rcx,QWORD PTR [rdi+0x1d0]
  4078f1:	shl    rax,0x5
  4078f5:	cmp    QWORD PTR [rcx+rax*1+0x10],0x0
  4078fb:	je     407904 <rb_strcasecmp@plt+0x53e4>
  4078fd:	mov    esi,0x2
  407902:	jmp    407910 <rb_strcasecmp@plt+0x53f0>
  407904:	ret    
  407905:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40790f:	nop
  407910:	push   rbp
  407911:	push   r15
  407913:	push   r14
  407915:	push   rbx
  407916:	push   rax
  407917:	mov    r14d,esi
  40791a:	mov    rbx,rdi
  40791d:	lea    r15,[rip+0x82c4]        # 40fbe8 <rb_strcasecmp@plt+0xd6c8>
  407924:	mov    eax,DWORD PTR [r15+0x18]
  407928:	mov    rcx,QWORD PTR [rdi+0x1d0]
  40792f:	shl    rax,0x5
  407933:	mov    rbp,QWORD PTR [rcx+rax*1+0x10]
  407938:	lea    rdi,[rdi+0x1b8]
  40793f:	lea    rsi,[rip+0x29ca]        # 40a310 <rb_strcasecmp@plt+0x7df0>
  407946:	mov    edx,0xb
  40794b:	call   4021c0 <rb_strlcpy@plt>
  407950:	mov    rdi,QWORD PTR [rbp+0x0]
  407954:	test   rdi,rdi
  407957:	je     40795e <rb_strcasecmp@plt+0x543e>
  407959:	call   4022e0 <rb_close@plt>
  40795e:	test   rbp,rbp
  407961:	je     40796b <rb_strcasecmp@plt+0x544b>
  407963:	mov    rdi,rbp
  407966:	call   4021f0 <free@plt>
  40796b:	mov    eax,DWORD PTR [r15+0x18]
  40796f:	mov    rcx,QWORD PTR [rbx+0x1d0]
  407976:	shl    rax,0x5
  40797a:	vxorps xmm0,xmm0,xmm0
  40797e:	vmovups XMMWORD PTR [rcx+rax*1+0x8],xmm0
  407984:	mov    edi,DWORD PTR [rbx]
  407986:	mov    eax,r14d
  407989:	lea    rcx,[rip+0x63e0]        # 40dd70 <rb_strcasecmp@plt+0xb850>
  407990:	mov    rsi,QWORD PTR [rcx+rax*8]
  407994:	xor    eax,eax
  407996:	call   403070 <rb_strcasecmp@plt+0xb50>
  40799b:	mov    esi,DWORD PTR [r15+0x18]
  40799f:	mov    rdi,rbx
  4079a2:	call   403c40 <rb_strcasecmp@plt+0x1720>
  4079a7:	add    DWORD PTR [rbx+0x1cc],0xffffffff
  4079ae:	je     4079bb <rb_strcasecmp@plt+0x549b>
  4079b0:	add    rsp,0x8
  4079b4:	pop    rbx
  4079b5:	pop    r14
  4079b7:	pop    r15
  4079b9:	pop    rbp
  4079ba:	ret    
  4079bb:	mov    rdi,rbx
  4079be:	add    rsp,0x8
  4079c2:	pop    rbx
  4079c3:	pop    r14
  4079c5:	pop    r15
  4079c7:	pop    rbp
  4079c8:	jmp    403b90 <rb_strcasecmp@plt+0x1670>
  4079cd:	nop    DWORD PTR [rax]
  4079d0:	push   r15
  4079d2:	push   r14
  4079d4:	push   r12
  4079d6:	push   rbx
  4079d7:	sub    rsp,0x28
  4079db:	mov    rbx,rdx
  4079de:	test   esi,esi
  4079e0:	jne    407a51 <rb_strcasecmp@plt+0x5531>
  4079e2:	mov    rax,QWORD PTR [rbx+0x1d0]
  4079e9:	lea    rcx,[rip+0x81f8]        # 40fbe8 <rb_strcasecmp@plt+0xd6c8>
  4079f0:	mov    ecx,DWORD PTR [rcx+0x18]
  4079f3:	shl    rcx,0x5
  4079f7:	mov    r12,QWORD PTR [rax+rcx*1+0x10]
  4079fc:	movzx  ecx,WORD PTR [rbx+0xf6]
  407a03:	movzx  r8d,WORD PTR [rbx+0x3e]
  407a08:	lea    rdx,[rip+0x31d5]        # 40abe4 <rb_strcasecmp@plt+0x86c4>
  407a0f:	mov    r14,rsp
  407a12:	mov    esi,0x20
  407a17:	xor    eax,eax
  407a19:	mov    rdi,r14
  407a1c:	call   402080 <snprintf@plt>
  407a21:	mov    rdi,r14
  407a24:	call   402200 <strlen@plt>
  407a29:	mov    r15,rax
  407a2c:	mov    rdi,QWORD PTR [r12]
  407a30:	mov    rsi,r14
  407a33:	mov    edx,r15d
  407a36:	call   4021a0 <rb_write@plt>
  407a3b:	movsxd rcx,r15d
  407a3e:	cmp    rax,rcx
  407a41:	jne    407a51 <rb_strcasecmp@plt+0x5531>
  407a43:	mov    rdi,QWORD PTR [r12]
  407a47:	mov    rsi,rbx
  407a4a:	call   407a70 <rb_strcasecmp@plt+0x5550>
  407a4f:	jmp    407a5e <rb_strcasecmp@plt+0x553e>
  407a51:	mov    esi,0x2
  407a56:	mov    rdi,rbx
  407a59:	call   407910 <rb_strcasecmp@plt+0x53f0>
  407a5e:	add    rsp,0x28
  407a62:	pop    rbx
  407a63:	pop    r12
  407a65:	pop    r14
  407a67:	pop    r15
  407a69:	ret    
  407a6a:	nop    WORD PTR [rax+rax*1+0x0]
  407a70:	push   rbp
  407a71:	mov    rbp,rsp
  407a74:	push   r15
  407a76:	push   r14
  407a78:	push   r13
  407a7a:	push   r12
  407a7c:	push   rbx
  407a7d:	and    rsp,0xffffffffffffffe0
  407a81:	sub    rsp,0xa0
  407a88:	vxorps xmm0,xmm0,xmm0
  407a8c:	vmovaps YMMWORD PTR [rsp+0x60],ymm0
  407a92:	vmovaps YMMWORD PTR [rsp+0x40],ymm0
  407a98:	mov    r14,rsi
  407a9b:	mov    rbx,rdi
  407a9e:	vmovaps YMMWORD PTR [rsp+0x20],ymm0
  407aa4:	vmovaps YMMWORD PTR [rsp],ymm0
  407aa9:	mov    BYTE PTR [rsp+0x80],0x0
  407ab1:	mov    rsi,rsp
  407ab4:	mov    edx,0x80
  407ab9:	vzeroupper 
  407abc:	call   402220 <rb_read@plt>
  407ac1:	test   rax,rax
  407ac4:	js     407c8e <rb_strcasecmp@plt+0x576e>
  407aca:	je     407cb7 <rb_strcasecmp@plt+0x5797>
  407ad0:	mov    rdi,rsp
  407ad3:	mov    esi,0x3a
  407ad8:	call   402330 <strchr@plt>
  407add:	mov    r15d,0x3
  407ae3:	test   rax,rax
  407ae6:	je     407cbd <rb_strcasecmp@plt+0x579d>
  407aec:	mov    rbx,rax
  407aef:	mov    BYTE PTR [rax],0x0
  407af2:	add    rbx,0x1
  407af6:	mov    esi,0x3a
  407afb:	mov    rdi,rbx
  407afe:	call   402330 <strchr@plt>
  407b03:	test   rax,rax
  407b06:	je     407cbd <rb_strcasecmp@plt+0x579d>
  407b0c:	mov    r12,rax
  407b0f:	mov    BYTE PTR [rax],0x0
  407b12:	mov    rdi,rsp
  407b15:	mov    esi,0x2c
  407b1a:	call   402330 <strchr@plt>
  407b1f:	test   rax,rax
  407b22:	je     407cbd <rb_strcasecmp@plt+0x579d>
  407b28:	mov    r13,rax
  407b2b:	mov    BYTE PTR [rax],0x0
  407b2e:	mov    rdi,rsp
  407b31:	xor    esi,esi
  407b33:	mov    edx,0xa
  407b38:	call   4022f0 <strtol@plt>
  407b3d:	test   eax,eax
  407b3f:	je     407cbd <rb_strcasecmp@plt+0x579d>
  407b45:	add    r13,0x1
  407b49:	xor    esi,esi
  407b4b:	mov    edx,0xa
  407b50:	mov    rdi,r13
  407b53:	call   4022f0 <strtol@plt>
  407b58:	test   eax,eax
  407b5a:	je     407cbd <rb_strcasecmp@plt+0x579d>
  407b60:	lea    rsi,[rip+0x3087]        # 40abee <rb_strcasecmp@plt+0x86ce>
  407b67:	mov    rdi,rbx
  407b6a:	call   4022b0 <strstr@plt>
  407b6f:	test   rax,rax
  407b72:	je     407cbd <rb_strcasecmp@plt+0x579d>
  407b78:	add    r12,0x1
  407b7c:	mov    esi,0x3a
  407b81:	mov    rdi,r12
  407b84:	call   402330 <strchr@plt>
  407b89:	test   rax,rax
  407b8c:	je     407cbd <rb_strcasecmp@plt+0x579d>
  407b92:	mov    BYTE PTR [rax],0x0
  407b95:	add    rax,0x2
  407b99:	jmp    407ba4 <rb_strcasecmp@plt+0x5684>
  407b9b:	nop    DWORD PTR [rax+rax*1+0x0]
  407ba0:	add    rax,0x1
  407ba4:	movzx  ebx,BYTE PTR [rax-0x1]
  407ba8:	mov    ecx,ebx
  407baa:	or     cl,0x20
  407bad:	cmp    cl,0x7e
  407bb0:	je     407ba0 <rb_strcasecmp@plt+0x5680>
  407bb2:	lea    rdi,[r14+0x1b8]
  407bb9:	test   bl,bl
  407bbb:	je     407c0c <rb_strcasecmp@plt+0x56ec>
  407bbd:	mov    edx,0xa
  407bc2:	movabs rsi,0x1000000400000
  407bcc:	movabs r8,0x40000000000009
  407bd6:	mov    ecx,ebx
  407bd8:	add    cl,0xf6
  407bdb:	cmp    cl,0x36
  407bde:	ja     407bef <rb_strcasecmp@plt+0x56cf>
  407be0:	movzx  ecx,cl
  407be3:	bt     rsi,rcx
  407be7:	jb     407bfd <rb_strcasecmp@plt+0x56dd>
  407be9:	bt     r8,rcx
  407bed:	jb     407c0c <rb_strcasecmp@plt+0x56ec>
  407bef:	cmp    bl,0x5b
  407bf2:	je     407bfd <rb_strcasecmp@plt+0x56dd>
  407bf4:	mov    BYTE PTR [rdi],bl
  407bf6:	add    rdi,0x1
  407bfa:	add    edx,0xffffffff
  407bfd:	movzx  ebx,BYTE PTR [rax]
  407c00:	test   bl,bl
  407c02:	je     407c0c <rb_strcasecmp@plt+0x56ec>
  407c04:	add    rax,0x1
  407c08:	test   edx,edx
  407c0a:	jne    407bd6 <rb_strcasecmp@plt+0x56b6>
  407c0c:	mov    BYTE PTR [rdi],0x0
  407c0f:	lea    r15,[rip+0x7fd2]        # 40fbe8 <rb_strcasecmp@plt+0xd6c8>
  407c16:	mov    eax,DWORD PTR [r15+0x18]
  407c1a:	mov    rcx,QWORD PTR [r14+0x1d0]
  407c21:	shl    rax,0x5
  407c25:	mov    rbx,QWORD PTR [rcx+rax*1+0x10]
  407c2a:	mov    rdi,QWORD PTR [rbx]
  407c2d:	test   rdi,rdi
  407c30:	je     407c37 <rb_strcasecmp@plt+0x5717>
  407c32:	call   4022e0 <rb_close@plt>
  407c37:	test   rbx,rbx
  407c3a:	je     407c44 <rb_strcasecmp@plt+0x5724>
  407c3c:	mov    rdi,rbx
  407c3f:	call   4021f0 <free@plt>
  407c44:	mov    eax,DWORD PTR [r15+0x18]
  407c48:	mov    rcx,QWORD PTR [r14+0x1d0]
  407c4f:	shl    rax,0x5
  407c53:	vxorps xmm0,xmm0,xmm0
  407c57:	vmovups XMMWORD PTR [rcx+rax*1+0x8],xmm0
  407c5d:	mov    edi,DWORD PTR [r14]
  407c60:	lea    rsi,[rip+0x2ed6]        # 40ab3d <rb_strcasecmp@plt+0x861d>
  407c67:	xor    eax,eax
  407c69:	call   403070 <rb_strcasecmp@plt+0xb50>
  407c6e:	mov    esi,DWORD PTR [r15+0x18]
  407c72:	mov    rdi,r14
  407c75:	call   403c40 <rb_strcasecmp@plt+0x1720>
  407c7a:	add    DWORD PTR [r14+0x1cc],0xffffffff
  407c82:	jne    407cc8 <rb_strcasecmp@plt+0x57a8>
  407c84:	mov    rdi,r14
  407c87:	call   403b90 <rb_strcasecmp@plt+0x1670>
  407c8c:	jmp    407cc8 <rb_strcasecmp@plt+0x57a8>
  407c8e:	call   402390 <__errno_location@plt>
  407c93:	mov    edi,DWORD PTR [rax]
  407c95:	call   402060 <rb_ignore_errno@plt>
  407c9a:	test   eax,eax
  407c9c:	je     407cb7 <rb_strcasecmp@plt+0x5797>
  407c9e:	lea    rdx,[rip+0xfffffffffffffdcb]        # 407a70 <rb_strcasecmp@plt+0x5550>
  407ca5:	mov    esi,0x1
  407caa:	mov    rdi,rbx
  407cad:	mov    rcx,r14
  407cb0:	call   4020b0 <rb_setselect@plt>
  407cb5:	jmp    407cc8 <rb_strcasecmp@plt+0x57a8>
  407cb7:	mov    r15d,0x2
  407cbd:	mov    rdi,r14
  407cc0:	mov    esi,r15d
  407cc3:	call   407910 <rb_strcasecmp@plt+0x53f0>
  407cc8:	lea    rsp,[rbp-0x28]
  407ccc:	pop    rbx
  407ccd:	pop    r12
  407ccf:	pop    r13
  407cd1:	pop    r14
  407cd3:	pop    r15
  407cd5:	pop    rbp
  407cd6:	ret    
  407cd7:	nop    WORD PTR [rax+rax*1+0x0]
  407ce0:	push   rax
  407ce1:	mov    rdi,QWORD PTR [rdx]
  407ce4:	xor    esi,esi
  407ce6:	mov    edx,0xa
  407ceb:	call   4022f0 <strtol@plt>
  407cf0:	mov    rcx,rax
  407cf3:	test   ecx,ecx
  407cf5:	js     407cff <rb_strcasecmp@plt+0x57df>
  407cf7:	mov    DWORD PTR [rip+0x801b],ecx        # 40fd18 <rb_strcasecmp@plt+0xd7f8>
  407cfd:	pop    rax
  407cfe:	ret    
  407cff:	lea    rsi,[rip+0x2efc]        # 40ac02 <rb_strcasecmp@plt+0x86e2>
  407d06:	mov    edi,0x43
  407d0b:	xor    eax,eax
  407d0d:	mov    edx,ecx
  407d0f:	call   403150 <rb_strcasecmp@plt+0xc30>
  407d14:	mov    edi,0x3
  407d19:	call   4020e0 <exit@plt>
  407d1e:	xchg   ax,ax
  407d20:	push   r15
  407d22:	push   r14
  407d24:	push   rbx
  407d25:	sub    rsp,0x10
  407d29:	lea    r14,[rip+0xc3f8]        # 414128 <rb_strcasecmp@plt+0x11c08>
  407d30:	mov    rdi,QWORD PTR [r14]
  407d33:	mov    rbx,rsp
  407d36:	mov    rsi,rbx
  407d39:	call   402240 <rb_dictionary_foreach_start@plt>
  407d3e:	mov    rdi,QWORD PTR [r14]
  407d41:	mov    rsi,rbx
  407d44:	call   402140 <rb_dictionary_foreach_cur@plt>
  407d49:	test   rax,rax
  407d4c:	je     407d9f <rb_strcasecmp@plt+0x587f>
  407d4e:	lea    r15,[rip+0x7f4b]        # 40fca0 <rb_strcasecmp@plt+0xd780>
  407d55:	mov    rbx,rsp
  407d58:	nop    DWORD PTR [rax+rax*1+0x0]
  407d60:	mov    ecx,DWORD PTR [r15+0x18]
  407d64:	mov    rdx,QWORD PTR [rax+0x1d0]
  407d6b:	shl    rcx,0x5
  407d6f:	cmp    QWORD PTR [rdx+rcx*1+0x10],0x0
  407d75:	je     407d84 <rb_strcasecmp@plt+0x5864>
  407d77:	mov    esi,0x1
  407d7c:	mov    rdi,rax
  407d7f:	call   407e80 <rb_strcasecmp@plt+0x5960>
  407d84:	mov    rdi,QWORD PTR [r14]
  407d87:	mov    rsi,rbx
  407d8a:	call   4021d0 <rb_dictionary_foreach_next@plt>
  407d8f:	mov    rdi,QWORD PTR [r14]
  407d92:	mov    rsi,rbx
  407d95:	call   402140 <rb_dictionary_foreach_cur@plt>
  407d9a:	test   rax,rax
  407d9d:	jne    407d60 <rb_strcasecmp@plt+0x5840>
  407d9f:	add    rsp,0x10
  407da3:	pop    rbx
  407da4:	pop    r14
  407da6:	pop    r15
  407da8:	ret    
  407da9:	nop    DWORD PTR [rax+0x0]
  407db0:	push   r15
  407db2:	push   r14
  407db4:	push   r12
  407db6:	push   rbx
  407db7:	push   rax
  407db8:	mov    r15,rdi
  407dbb:	mov    edi,0x1
  407dc0:	mov    esi,0x8
  407dc5:	call   402440 <calloc@plt>
  407dca:	test   rax,rax
  407dcd:	je     407e47 <rb_strcasecmp@plt+0x5927>
  407dcf:	mov    r14,rax
  407dd2:	add    DWORD PTR [r15+0x1cc],0x1
  407dda:	lea    rax,[rip+0x7ebf]        # 40fca0 <rb_strcasecmp@plt+0xd780>
  407de1:	mov    ebx,DWORD PTR [rax+0x18]
  407de4:	mov    rax,QWORD PTR [r15+0x1d0]
  407deb:	shl    rbx,0x5
  407def:	mov    QWORD PTR [rax+rbx*1+0x10],r14
  407df4:	movsxd r12,DWORD PTR [rip+0x7f1d]        # 40fd18 <rb_strcasecmp@plt+0xd7f8>
  407dfb:	call   402280 <rb_current_time@plt>
  407e00:	add    rax,r12
  407e03:	mov    rcx,QWORD PTR [r15+0x1d0]
  407e0a:	mov    QWORD PTR [rcx+rbx*1+0x8],rax
  407e0f:	lea    rdi,[r15+0xc0]
  407e16:	lea    rsi,[rip+0x123]        # 407f40 <rb_strcasecmp@plt+0x5a20>
  407e1d:	mov    rdx,r15
  407e20:	call   402bd0 <rb_strcasecmp@plt+0x6b0>
  407e25:	mov    QWORD PTR [r14],rax
  407e28:	mov    edi,DWORD PTR [r15]
  407e2b:	lea    rsi,[rip+0x2df2]        # 40ac24 <rb_strcasecmp@plt+0x8704>
  407e32:	xor    eax,eax
  407e34:	call   403070 <rb_strcasecmp@plt+0xb50>
  407e39:	mov    al,0x1
  407e3b:	add    rsp,0x8
  407e3f:	pop    rbx
  407e40:	pop    r12
  407e42:	pop    r14
  407e44:	pop    r15
  407e46:	ret    
  407e47:	call   402380 <rb_outofmemory@plt>
  407e4c:	nop    DWORD PTR [rax+0x0]
  407e50:	lea    rax,[rip+0x7e49]        # 40fca0 <rb_strcasecmp@plt+0xd780>
  407e57:	mov    eax,DWORD PTR [rax+0x18]
  407e5a:	mov    rcx,QWORD PTR [rdi+0x1d0]
  407e61:	shl    rax,0x5
  407e65:	cmp    QWORD PTR [rcx+rax*1+0x10],0x0
  407e6b:	je     407e74 <rb_strcasecmp@plt+0x5954>
  407e6d:	mov    esi,0x1
  407e72:	jmp    407e80 <rb_strcasecmp@plt+0x5960>
  407e74:	ret    
  407e75:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407e7f:	nop
  407e80:	push   rbp
  407e81:	push   r15
  407e83:	push   r14
  407e85:	push   rbx
  407e86:	push   rax
  407e87:	mov    ebp,esi
  407e89:	mov    rbx,rdi
  407e8c:	lea    r15,[rip+0x7e0d]        # 40fca0 <rb_strcasecmp@plt+0xd780>
  407e93:	mov    eax,DWORD PTR [r15+0x18]
  407e97:	mov    rcx,QWORD PTR [rdi+0x1d0]
  407e9e:	shl    rax,0x5
  407ea2:	mov    r14,QWORD PTR [rcx+rax*1+0x10]
  407ea7:	lea    rdi,[rdi+0x178]
  407eae:	lea    rsi,[rip+0x245b]        # 40a310 <rb_strcasecmp@plt+0x7df0>
  407eb5:	mov    edx,0x40
  407eba:	call   4021c0 <rb_strlcpy@plt>
  407ebf:	mov    edi,DWORD PTR [rbx]
  407ec1:	mov    eax,ebp
  407ec3:	lea    rcx,[rip+0x5ed6]        # 40dda0 <rb_strcasecmp@plt+0xb880>
  407eca:	mov    rsi,QWORD PTR [rcx+rax*8]
  407ece:	xor    eax,eax
  407ed0:	call   403070 <rb_strcasecmp@plt+0xb50>
  407ed5:	mov    rdi,QWORD PTR [r14]
  407ed8:	call   402d50 <rb_strcasecmp@plt+0x830>
  407edd:	test   r14,r14
  407ee0:	je     407eea <rb_strcasecmp@plt+0x59ca>
  407ee2:	mov    rdi,r14
  407ee5:	call   4021f0 <free@plt>
  407eea:	mov    esi,DWORD PTR [r15+0x18]
  407eee:	mov    rax,QWORD PTR [rbx+0x1d0]
  407ef5:	mov    rcx,rsi
  407ef8:	shl    rcx,0x5
  407efc:	vxorps xmm0,xmm0,xmm0
  407f00:	vmovups XMMWORD PTR [rax+rcx*1+0x8],xmm0
  407f06:	mov    rdi,rbx
  407f09:	call   403c40 <rb_strcasecmp@plt+0x1720>
  407f0e:	add    DWORD PTR [rbx+0x1cc],0xffffffff
  407f15:	je     407f22 <rb_strcasecmp@plt+0x5a02>
  407f17:	add    rsp,0x8
  407f1b:	pop    rbx
  407f1c:	pop    r14
  407f1e:	pop    r15
  407f20:	pop    rbp
  407f21:	ret    
  407f22:	mov    rdi,rbx
  407f25:	add    rsp,0x8
  407f29:	pop    rbx
  407f2a:	pop    r14
  407f2c:	pop    r15
  407f2e:	pop    rbp
  407f2f:	jmp    403b90 <rb_strcasecmp@plt+0x1670>
  407f34:	nop    WORD PTR cs:[rax+rax*1+0x0]
  407f3e:	xchg   ax,ax
  407f40:	push   r15
  407f42:	push   r14
  407f44:	push   r12
  407f46:	push   rbx
  407f47:	push   rax
  407f48:	mov    r14,rcx
  407f4b:	test   rdi,rdi
  407f4e:	je     407f6a <rb_strcasecmp@plt+0x5a4a>
  407f50:	test   sil,sil
  407f53:	je     407f6a <rb_strcasecmp@plt+0x5a4a>
  407f55:	mov    rbx,rdi
  407f58:	call   402200 <strlen@plt>
  407f5d:	cmp    rax,0x40
  407f61:	jb     407f82 <rb_strcasecmp@plt+0x5a62>
  407f63:	mov    esi,0x2
  407f68:	jmp    407f6f <rb_strcasecmp@plt+0x5a4f>
  407f6a:	mov    esi,0x1
  407f6f:	mov    rdi,r14
  407f72:	add    rsp,0x8
  407f76:	pop    rbx
  407f77:	pop    r12
  407f79:	pop    r14
  407f7b:	pop    r15
  407f7d:	jmp    407e80 <rb_strcasecmp@plt+0x5960>
  407f82:	lea    r15,[r14+0x178]
  407f89:	mov    edx,0x40
  407f8e:	mov    rdi,r15
  407f91:	mov    rsi,rbx
  407f94:	call   4021c0 <rb_strlcpy@plt>
  407f99:	lea    r12,[rip+0x7d00]        # 40fca0 <rb_strcasecmp@plt+0xd780>
  407fa0:	mov    eax,DWORD PTR [r12+0x18]
  407fa5:	mov    rcx,QWORD PTR [r14+0x1d0]
  407fac:	shl    rax,0x5
  407fb0:	mov    rbx,QWORD PTR [rcx+rax*1+0x10]
  407fb5:	mov    edi,DWORD PTR [r14]
  407fb8:	lea    rsi,[rip+0x2cd9]        # 40ac98 <rb_strcasecmp@plt+0x8778>
  407fbf:	xor    eax,eax
  407fc1:	mov    rdx,r15
  407fc4:	call   403070 <rb_strcasecmp@plt+0xb50>
  407fc9:	mov    rdi,QWORD PTR [rbx]
  407fcc:	call   402d50 <rb_strcasecmp@plt+0x830>
  407fd1:	test   rbx,rbx
  407fd4:	je     407fde <rb_strcasecmp@plt+0x5abe>
  407fd6:	mov    rdi,rbx
  407fd9:	call   4021f0 <free@plt>
  407fde:	mov    esi,DWORD PTR [r12+0x18]
  407fe3:	mov    rax,QWORD PTR [r14+0x1d0]
  407fea:	mov    rcx,rsi
  407fed:	shl    rcx,0x5
  407ff1:	vxorps xmm0,xmm0,xmm0
  407ff5:	vmovups XMMWORD PTR [rax+rcx*1+0x8],xmm0
  407ffb:	mov    rdi,r14
  407ffe:	call   403c40 <rb_strcasecmp@plt+0x1720>
  408003:	add    DWORD PTR [r14+0x1cc],0xffffffff
  40800b:	je     408019 <rb_strcasecmp@plt+0x5af9>
  40800d:	add    rsp,0x8
  408011:	pop    rbx
  408012:	pop    r12
  408014:	pop    r14
  408016:	pop    r15
  408018:	ret    
  408019:	mov    rdi,r14
  40801c:	add    rsp,0x8
  408020:	pop    rbx
  408021:	pop    r12
  408023:	pop    r14
  408025:	pop    r15
  408027:	jmp    403b90 <rb_strcasecmp@plt+0x1670>
  40802c:	nop    DWORD PTR [rax+0x0]
  408030:	push   rax
  408031:	mov    rdi,QWORD PTR [rdx]
  408034:	xor    esi,esi
  408036:	mov    edx,0xa
  40803b:	call   4022f0 <strtol@plt>
  408040:	mov    rcx,rax
  408043:	test   ecx,ecx
  408045:	js     40804f <rb_strcasecmp@plt+0x5b2f>
  408047:	mov    DWORD PTR [rip+0x7e0b],ecx        # 40fe58 <rb_strcasecmp@plt+0xd938>
  40804d:	pop    rax
  40804e:	ret    
  40804f:	lea    rsi,[rip+0x2ccc]        # 40ad22 <rb_strcasecmp@plt+0x8802>
  408056:	mov    edi,0x43
  40805b:	xor    eax,eax
  40805d:	mov    edx,ecx
  40805f:	pop    rcx
  408060:	jmp    403150 <rb_strcasecmp@plt+0xc30>
  408065:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40806f:	nop
  408070:	push   rbp
  408071:	push   r14
  408073:	push   rbx
  408074:	sub    rsp,0x10
  408078:	mov    rax,QWORD PTR [rdx]
  40807b:	cmp    BYTE PTR [rax],0x31
  40807e:	sete   r14b
  408082:	jne    4080f5 <rb_strcasecmp@plt+0x5bd5>
  408084:	cmp    BYTE PTR [rip+0xbef5],0x0        # 413f80 <rb_strcasecmp@plt+0x11a60>
  40808b:	je     4080b4 <rb_strcasecmp@plt+0x5b94>
  40808d:	movzx  eax,WORD PTR [rip+0xbf22]        # 413fb6 <rb_strcasecmp@plt+0x11a96>
  408094:	test   ax,ax
  408097:	je     4080b4 <rb_strcasecmp@plt+0x5b94>
  408099:	mov    rcx,QWORD PTR [rip+0xbf98]        # 414038 <rb_strcasecmp@plt+0x11b18>
  4080a0:	test   rcx,rcx
  4080a3:	jne    4080b4 <rb_strcasecmp@plt+0x5b94>
  4080a5:	movzx  esi,ax
  4080a8:	lea    rdi,[rip+0xbed1]        # 413f80 <rb_strcasecmp@plt+0x11a60>
  4080af:	call   408c60 <rb_strcasecmp@plt+0x6740>
  4080b4:	cmp    BYTE PTR [rip+0xbf85],0x0        # 414040 <rb_strcasecmp@plt+0x11b20>
  4080bb:	je     408195 <rb_strcasecmp@plt+0x5c75>
  4080c1:	movzx  eax,WORD PTR [rip+0xbfae]        # 414076 <rb_strcasecmp@plt+0x11b56>
  4080c8:	test   ax,ax
  4080cb:	je     408195 <rb_strcasecmp@plt+0x5c75>
  4080d1:	mov    rcx,QWORD PTR [rip+0xc020]        # 4140f8 <rb_strcasecmp@plt+0x11bd8>
  4080d8:	test   rcx,rcx
  4080db:	jne    408195 <rb_strcasecmp@plt+0x5c75>
  4080e1:	movzx  esi,ax
  4080e4:	lea    rdi,[rip+0xbf55]        # 414040 <rb_strcasecmp@plt+0x11b20>
  4080eb:	call   408c60 <rb_strcasecmp@plt+0x6740>
  4080f0:	jmp    408195 <rb_strcasecmp@plt+0x5c75>
  4080f5:	mov    rax,QWORD PTR [rip+0xbf3c]        # 414038 <rb_strcasecmp@plt+0x11b18>
  4080fc:	mov    rdi,QWORD PTR [rip+0xbff5]        # 4140f8 <rb_strcasecmp@plt+0x11bd8>
  408103:	mov    rcx,rax
  408106:	or     rcx,rdi
  408109:	je     408195 <rb_strcasecmp@plt+0x5c75>
  40810f:	test   rax,rax
  408112:	je     408123 <rb_strcasecmp@plt+0x5c03>
  408114:	mov    rdi,rax
  408117:	call   4022e0 <rb_close@plt>
  40811c:	mov    rdi,QWORD PTR [rip+0xbfd5]        # 4140f8 <rb_strcasecmp@plt+0x11bd8>
  408123:	test   rdi,rdi
  408126:	je     40812d <rb_strcasecmp@plt+0x5c0d>
  408128:	call   4022e0 <rb_close@plt>
  40812d:	mov    QWORD PTR [rip+0xbfc0],0x0        # 4140f8 <rb_strcasecmp@plt+0x11bd8>
  408138:	mov    QWORD PTR [rip+0xbef5],0x0        # 414038 <rb_strcasecmp@plt+0x11b18>
  408143:	lea    rbp,[rip+0xbfde]        # 414128 <rb_strcasecmp@plt+0x11c08>
  40814a:	mov    rdi,QWORD PTR [rbp+0x0]
  40814e:	mov    rbx,rsp
  408151:	mov    rsi,rbx
  408154:	call   402240 <rb_dictionary_foreach_start@plt>
  408159:	mov    rdi,QWORD PTR [rbp+0x0]
  40815d:	mov    rsi,rbx
  408160:	call   402140 <rb_dictionary_foreach_cur@plt>
  408165:	test   rax,rax
  408168:	je     408195 <rb_strcasecmp@plt+0x5c75>
  40816a:	mov    rbx,rsp
  40816d:	nop    DWORD PTR [rax]
  408170:	mov    rdi,rax
  408173:	call   408a90 <rb_strcasecmp@plt+0x6570>
  408178:	mov    rdi,QWORD PTR [rbp+0x0]
  40817c:	mov    rsi,rbx
  40817f:	call   4021d0 <rb_dictionary_foreach_next@plt>
  408184:	mov    rdi,QWORD PTR [rbp+0x0]
  408188:	mov    rsi,rbx
  40818b:	call   402140 <rb_dictionary_foreach_cur@plt>
  408190:	test   rax,rax
  408193:	jne    408170 <rb_strcasecmp@plt+0x5c50>
  408195:	mov    BYTE PTR [rip+0xbf64],r14b        # 414100 <rb_strcasecmp@plt+0x11be0>
  40819c:	add    rsp,0x10
  4081a0:	pop    rbx
  4081a1:	pop    r14
  4081a3:	pop    rbp
  4081a4:	ret    
  4081a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4081af:	nop
  4081b0:	push   r14
  4081b2:	push   rbx
  4081b3:	push   rax
  4081b4:	mov    r14,QWORD PTR [rdx]
  4081b7:	mov    rbx,QWORD PTR [rdx+0x8]
  4081bb:	xor    esi,esi
  4081bd:	mov    edx,0xa
  4081c2:	mov    rdi,rbx
  4081c5:	call   4022f0 <strtol@plt>
  4081ca:	lea    ecx,[rax-0x1]
  4081cd:	cmp    ecx,0xffff
  4081d3:	jae    4081e7 <rb_strcasecmp@plt+0x5cc7>
  4081d5:	movzx  esi,ax
  4081d8:	mov    rdi,r14
  4081db:	add    rsp,0x8
  4081df:	pop    rbx
  4081e0:	pop    r14
  4081e2:	jmp    408c60 <rb_strcasecmp@plt+0x6740>
  4081e7:	lea    rsi,[rip+0x2c4e]        # 40ae3c <rb_strcasecmp@plt+0x891c>
  4081ee:	mov    edi,0x43
  4081f3:	xor    eax,eax
  4081f5:	mov    rdx,r14
  4081f8:	mov    rcx,rbx
  4081fb:	call   403150 <rb_strcasecmp@plt+0xc30>
  408200:	mov    edi,0x3
  408205:	call   4020e0 <exit@plt>
  40820a:	nop    WORD PTR [rax+rax*1+0x0]
  408210:	push   rax
  408211:	mov    rdi,QWORD PTR [rip+0xbe20]        # 414038 <rb_strcasecmp@plt+0x11b18>
  408218:	test   rdi,rdi
  40821b:	je     408222 <rb_strcasecmp@plt+0x5d02>
  40821d:	call   4022e0 <rb_close@plt>
  408222:	mov    rdi,QWORD PTR [rip+0xbecf]        # 4140f8 <rb_strcasecmp@plt+0x11bd8>
  408229:	test   rdi,rdi
  40822c:	je     408233 <rb_strcasecmp@plt+0x5d13>
  40822e:	call   4022e0 <rb_close@plt>
  408233:	vxorps xmm0,xmm0,xmm0
  408237:	vmovups YMMWORD PTR [rip+0xbea1],ymm0        # 4140e0 <rb_strcasecmp@plt+0x11bc0>
  40823f:	vmovups YMMWORD PTR [rip+0xbe79],ymm0        # 4140c0 <rb_strcasecmp@plt+0x11ba0>
  408247:	vmovups YMMWORD PTR [rip+0xbe51],ymm0        # 4140a0 <rb_strcasecmp@plt+0x11b80>
  40824f:	vmovups YMMWORD PTR [rip+0xbe29],ymm0        # 414080 <rb_strcasecmp@plt+0x11b60>
  408257:	vmovups YMMWORD PTR [rip+0xbe01],ymm0        # 414060 <rb_strcasecmp@plt+0x11b40>
  40825f:	vmovups YMMWORD PTR [rip+0xbdd9],ymm0        # 414040 <rb_strcasecmp@plt+0x11b20>
  408267:	vmovups YMMWORD PTR [rip+0xbdb1],ymm0        # 414020 <rb_strcasecmp@plt+0x11b00>
  40826f:	vmovups YMMWORD PTR [rip+0xbd89],ymm0        # 414000 <rb_strcasecmp@plt+0x11ae0>
  408277:	vmovups YMMWORD PTR [rip+0xbd61],ymm0        # 413fe0 <rb_strcasecmp@plt+0x11ac0>
  40827f:	vmovups YMMWORD PTR [rip+0xbd39],ymm0        # 413fc0 <rb_strcasecmp@plt+0x11aa0>
  408287:	vmovups YMMWORD PTR [rip+0xbd11],ymm0        # 413fa0 <rb_strcasecmp@plt+0x11a80>
  40828f:	vmovups YMMWORD PTR [rip+0xbce9],ymm0        # 413f80 <rb_strcasecmp@plt+0x11a60>
  408297:	pop    rax
  408298:	vzeroupper 
  40829b:	ret    
  40829c:	nop    DWORD PTR [rax+0x0]
  4082a0:	push   r15
  4082a2:	push   r14
  4082a4:	push   r13
  4082a6:	push   r12
  4082a8:	push   rbx
  4082a9:	mov    r14,rdx
  4082ac:	mov    rdi,QWORD PTR [rdx+0x8]
  4082b0:	xor    esi,esi
  4082b2:	mov    edx,0xa
  4082b7:	call   4022f0 <strtol@plt>
  4082bc:	mov    r12,rax
  4082bf:	mov    edi,0x1
  4082c4:	mov    esi,0x38
  4082c9:	call   402440 <calloc@plt>
  4082ce:	test   rax,rax
  4082d1:	je     4084bc <rb_strcasecmp@plt+0x5f9c>
  4082d7:	mov    r15,rax
  4082da:	lea    eax,[r12-0x1]
  4082df:	cmp    eax,0xffff
  4082e4:	jae    4084c1 <rb_strcasecmp@plt+0x5fa1>
  4082ea:	mov    rbx,r15
  4082ed:	mov    WORD PTR [r15+0x14],r12w
  4082f2:	mov    r13,QWORD PTR [r14]
  4082f5:	lea    rsi,[rip+0x2c15]        # 40af11 <rb_strcasecmp@plt+0x89f1>
  4082fc:	mov    rdi,r13
  4082ff:	call   402120 <strcasecmp@plt>
  408304:	test   eax,eax
  408306:	je     40838c <rb_strcasecmp@plt+0x5e6c>
  40830c:	lea    rsi,[rip+0x2c05]        # 40af18 <rb_strcasecmp@plt+0x89f8>
  408313:	mov    rdi,r13
  408316:	call   402120 <strcasecmp@plt>
  40831b:	test   eax,eax
  40831d:	je     4083ba <rb_strcasecmp@plt+0x5e9a>
  408323:	lea    rsi,[rip+0x2bf5]        # 40af1f <rb_strcasecmp@plt+0x89ff>
  40832a:	mov    rdi,r13
  40832d:	call   402120 <strcasecmp@plt>
  408332:	test   eax,eax
  408334:	je     4083e8 <rb_strcasecmp@plt+0x5ec8>
  40833a:	lea    rsi,[rip+0x2bea]        # 40af2b <rb_strcasecmp@plt+0x8a0b>
  408341:	mov    rdi,r13
  408344:	call   402120 <strcasecmp@plt>
  408349:	xor    ecx,ecx
  40834b:	test   eax,eax
  40834d:	sete   cl
  408350:	shl    ecx,0x2
  408353:	mov    DWORD PTR [rbx+0x10],ecx
  408356:	movzx  ecx,r12w
  40835a:	test   eax,eax
  40835c:	jne    4084e5 <rb_strcasecmp@plt+0x5fc5>
  408362:	lea    rdx,[rip+0x2b3d]        # 40aea6 <rb_strcasecmp@plt+0x8986>
  408369:	mov    esi,0x10
  40836e:	xor    eax,eax
  408370:	mov    rdi,rbx
  408373:	call   402080 <snprintf@plt>
  408378:	lea    rax,[rip+0xf81]        # 409300 <rb_strcasecmp@plt+0x6de0>
  40837f:	mov    QWORD PTR [rbx+0x18],rax
  408383:	mov    BYTE PTR [rbx+0x16],0x1
  408387:	jmp    408418 <rb_strcasecmp@plt+0x5ef8>
  40838c:	mov    DWORD PTR [rbx+0x10],0x1
  408393:	movzx  ecx,r12w
  408397:	lea    rdx,[rip+0x2ae2]        # 40ae80 <rb_strcasecmp@plt+0x8960>
  40839e:	mov    esi,0x10
  4083a3:	xor    eax,eax
  4083a5:	mov    rdi,rbx
  4083a8:	call   402080 <snprintf@plt>
  4083ad:	mov    BYTE PTR [rbx+0x16],0x0
  4083b1:	lea    rax,[rip+0xe28]        # 4091e0 <rb_strcasecmp@plt+0x6cc0>
  4083b8:	jmp    408414 <rb_strcasecmp@plt+0x5ef4>
  4083ba:	mov    DWORD PTR [rbx+0x10],0x2
  4083c1:	movzx  ecx,r12w
  4083c5:	lea    rdx,[rip+0x2abf]        # 40ae8b <rb_strcasecmp@plt+0x896b>
  4083cc:	mov    esi,0x10
  4083d1:	xor    eax,eax
  4083d3:	mov    rdi,rbx
  4083d6:	call   402080 <snprintf@plt>
  4083db:	mov    BYTE PTR [rbx+0x16],0x0
  4083df:	lea    rax,[rip+0xe6a]        # 409250 <rb_strcasecmp@plt+0x6d30>
  4083e6:	jmp    408414 <rb_strcasecmp@plt+0x5ef4>
  4083e8:	mov    DWORD PTR [rbx+0x10],0x3
  4083ef:	movzx  ecx,r12w
  4083f3:	lea    rdx,[rip+0x2a9c]        # 40ae96 <rb_strcasecmp@plt+0x8976>
  4083fa:	mov    esi,0x10
  4083ff:	xor    eax,eax
  408401:	mov    rdi,rbx
  408404:	call   402080 <snprintf@plt>
  408409:	mov    BYTE PTR [rbx+0x16],0x0
  40840d:	lea    rax,[rip+0xeec]        # 409300 <rb_strcasecmp@plt+0x6de0>
  408414:	mov    QWORD PTR [rbx+0x18],rax
  408418:	mov    rax,QWORD PTR [rip+0xbce9]        # 414108 <rb_strcasecmp@plt+0x11be8>
  40841f:	test   rax,rax
  408422:	je     408447 <rb_strcasecmp@plt+0x5f27>
  408424:	mov    edx,DWORD PTR [rbx+0x10]
  408427:	movzx  ecx,WORD PTR [rbx+0x14]
  40842b:	mov    rsi,rax
  40842e:	xchg   ax,ax
  408430:	mov    rdi,QWORD PTR [rsi]
  408433:	cmp    DWORD PTR [rdi+0x10],edx
  408436:	jne    40843e <rb_strcasecmp@plt+0x5f1e>
  408438:	cmp    WORD PTR [rdi+0x14],cx
  40843c:	je     40848c <rb_strcasecmp@plt+0x5f6c>
  40843e:	mov    rsi,QWORD PTR [rsi+0x10]
  408442:	test   rsi,rsi
  408445:	jne    408430 <rb_strcasecmp@plt+0x5f10>
  408447:	add    r15,0x20
  40844b:	mov    QWORD PTR [rbx+0x20],rbx
  40844f:	mov    QWORD PTR [rbx+0x28],0x0
  408457:	mov    QWORD PTR [rbx+0x30],rax
  40845b:	test   rax,rax
  40845e:	je     408469 <rb_strcasecmp@plt+0x5f49>
  408460:	add    rax,0x8
  408464:	mov    QWORD PTR [rax],r15
  408467:	jmp    408473 <rb_strcasecmp@plt+0x5f53>
  408469:	cmp    QWORD PTR [rip+0xbc9f],0x0        # 414110 <rb_strcasecmp@plt+0x11bf0>
  408471:	je     4084b3 <rb_strcasecmp@plt+0x5f93>
  408473:	mov    QWORD PTR [rip+0xbc8e],r15        # 414108 <rb_strcasecmp@plt+0x11be8>
  40847a:	add    QWORD PTR [rip+0xbc96],0x1        # 414118 <rb_strcasecmp@plt+0x11bf8>
  408482:	pop    rbx
  408483:	pop    r12
  408485:	pop    r13
  408487:	pop    r14
  408489:	pop    r15
  40848b:	ret    
  40848c:	mov    rdx,QWORD PTR [r14]
  40848f:	lea    rsi,[rip+0x2a4f]        # 40aee5 <rb_strcasecmp@plt+0x89c5>
  408496:	mov    edi,0x43
  40849b:	xor    eax,eax
  40849d:	call   403150 <rb_strcasecmp@plt+0xc30>
  4084a2:	mov    rdi,rbx
  4084a5:	pop    rbx
  4084a6:	pop    r12
  4084a8:	pop    r13
  4084aa:	pop    r14
  4084ac:	pop    r15
  4084ae:	jmp    4021f0 <free@plt>
  4084b3:	lea    rax,[rip+0xbc56]        # 414110 <rb_strcasecmp@plt+0x11bf0>
  4084ba:	jmp    408464 <rb_strcasecmp@plt+0x5f44>
  4084bc:	call   402380 <rb_outofmemory@plt>
  4084c1:	mov    rdx,QWORD PTR [r14]
  4084c4:	mov    rcx,QWORD PTR [r14+0x8]
  4084c8:	lea    rsi,[rip+0x298c]        # 40ae5b <rb_strcasecmp@plt+0x893b>
  4084cf:	mov    edi,0x43
  4084d4:	xor    eax,eax
  4084d6:	call   403150 <rb_strcasecmp@plt+0xc30>
  4084db:	mov    edi,0x3
  4084e0:	call   4020e0 <exit@plt>
  4084e5:	lea    rsi,[rip+0x29cb]        # 40aeb7 <rb_strcasecmp@plt+0x8997>
  4084ec:	mov    edi,0x43
  4084f1:	xor    eax,eax
  4084f3:	mov    rdx,r13
  4084f6:	call   403150 <rb_strcasecmp@plt+0xc30>
  4084fb:	mov    edi,0x3
  408500:	call   4020e0 <exit@plt>
  408505:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40850f:	nop
  408510:	push   rbp
  408511:	push   r15
  408513:	push   r14
  408515:	push   r13
  408517:	push   r12
  408519:	push   rbx
  40851a:	sub    rsp,0x18
  40851e:	mov    r14,rdx
  408521:	mov    rbx,QWORD PTR [rdx]
  408524:	lea    rsi,[rip+0x29e6]        # 40af11 <rb_strcasecmp@plt+0x89f1>
  40852b:	mov    rdi,rbx
  40852e:	call   402120 <strcasecmp@plt>
  408533:	test   eax,eax
  408535:	je     408579 <rb_strcasecmp@plt+0x6059>
  408537:	lea    rsi,[rip+0x29da]        # 40af18 <rb_strcasecmp@plt+0x89f8>
  40853e:	mov    rdi,rbx
  408541:	call   402120 <strcasecmp@plt>
  408546:	test   eax,eax
  408548:	je     408580 <rb_strcasecmp@plt+0x6060>
  40854a:	lea    rsi,[rip+0x29ce]        # 40af1f <rb_strcasecmp@plt+0x89ff>
  408551:	mov    rdi,rbx
  408554:	call   402120 <strcasecmp@plt>
  408559:	test   eax,eax
  40855b:	je     408587 <rb_strcasecmp@plt+0x6067>
  40855d:	lea    rsi,[rip+0x29c7]        # 40af2b <rb_strcasecmp@plt+0x8a0b>
  408564:	mov    rdi,rbx
  408567:	call   402120 <strcasecmp@plt>
  40856c:	xor    ebp,ebp
  40856e:	test   eax,eax
  408570:	sete   bpl
  408574:	shl    ebp,0x2
  408577:	jmp    40858c <rb_strcasecmp@plt+0x606c>
  408579:	mov    ebp,0x1
  40857e:	jmp    40858c <rb_strcasecmp@plt+0x606c>
  408580:	mov    ebp,0x2
  408585:	jmp    40858c <rb_strcasecmp@plt+0x606c>
  408587:	mov    ebp,0x3
  40858c:	mov    rdi,QWORD PTR [r14+0x8]
  408590:	xor    esi,esi
  408592:	mov    edx,0xa
  408597:	call   4022f0 <strtol@plt>
  40859c:	mov    rcx,rax
  40859f:	lea    eax,[rax-0x1]
  4085a2:	cmp    eax,0xffff
  4085a7:	jae    4087c4 <rb_strcasecmp@plt+0x62a4>
  4085ad:	test   ebp,ebp
  4085af:	je     4087e8 <rb_strcasecmp@plt+0x62c8>
  4085b5:	mov    rax,QWORD PTR [rip+0xbb4c]        # 414108 <rb_strcasecmp@plt+0x11be8>
  4085bc:	test   rax,rax
  4085bf:	jne    4085dd <rb_strcasecmp@plt+0x60bd>
  4085c1:	jmp    4087a4 <rb_strcasecmp@plt+0x6284>
  4085c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4085d0:	mov    rax,QWORD PTR [rax+0x10]
  4085d4:	test   rax,rax
  4085d7:	je     4087a4 <rb_strcasecmp@plt+0x6284>
  4085dd:	mov    rbx,QWORD PTR [rax]
  4085e0:	cmp    DWORD PTR [rbx+0x10],ebp
  4085e3:	jne    4085d0 <rb_strcasecmp@plt+0x60b0>
  4085e5:	cmp    WORD PTR [rbx+0x14],cx
  4085e9:	jne    4085d0 <rb_strcasecmp@plt+0x60b0>
  4085eb:	lea    r12,[rip+0xbb36]        # 414128 <rb_strcasecmp@plt+0x11c08>
  4085f2:	mov    rdi,QWORD PTR [r12]
  4085f6:	lea    r14,[rsp+0x8]
  4085fb:	mov    rsi,r14
  4085fe:	call   402240 <rb_dictionary_foreach_start@plt>
  408603:	mov    rdi,QWORD PTR [r12]
  408607:	mov    rsi,r14
  40860a:	call   402140 <rb_dictionary_foreach_cur@plt>
  40860f:	test   rax,rax
  408612:	je     408736 <rb_strcasecmp@plt+0x6216>
  408618:	mov    r15,rax
  40861b:	lea    r13,[rip+0x77be]        # 40fde0 <rb_strcasecmp@plt+0xd8c0>
  408622:	lea    r14,[rsp+0x8]
  408627:	jmp    408650 <rb_strcasecmp@plt+0x6130>
  408629:	mov    rdi,r15
  40862c:	call   408a90 <rb_strcasecmp@plt+0x6570>
  408631:	add    DWORD PTR [r15+0x1cc],0xffffffff
  408639:	jne    408712 <rb_strcasecmp@plt+0x61f2>
  40863f:	jmp    40870a <rb_strcasecmp@plt+0x61ea>
  408644:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40864e:	xchg   ax,ax
  408650:	mov    eax,DWORD PTR [r13+0x18]
  408654:	mov    rcx,QWORD PTR [r15+0x1d0]
  40865b:	shl    rax,0x5
  40865f:	mov    rbp,QWORD PTR [rcx+rax*1+0x10]
  408664:	test   rbp,rbp
  408667:	je     408712 <rb_strcasecmp@plt+0x61f2>
  40866d:	add    DWORD PTR [r15+0x1cc],0x1
  408675:	mov    rax,QWORD PTR [rbp+0x0]
  408679:	test   rax,rax
  40867c:	je     408700 <rb_strcasecmp@plt+0x61e0>
  408682:	movzx  ecx,WORD PTR [rbx+0x14]
  408686:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408690:	mov    rdi,QWORD PTR [rax]
  408693:	mov    rdx,QWORD PTR [rdi+0x10]
  408697:	cmp    WORD PTR [rdx+0x14],cx
  40869b:	jne    4086a5 <rb_strcasecmp@plt+0x6185>
  40869d:	mov    edx,DWORD PTR [rdx+0x10]
  4086a0:	cmp    edx,DWORD PTR [rbx+0x10]
  4086a3:	je     4086b0 <rb_strcasecmp@plt+0x6190>
  4086a5:	mov    rax,QWORD PTR [rax+0x10]
  4086a9:	test   rax,rax
  4086ac:	jne    408690 <rb_strcasecmp@plt+0x6170>
  4086ae:	jmp    408700 <rb_strcasecmp@plt+0x61e0>
  4086b0:	mov    rdx,QWORD PTR [rdi+0x28]
  4086b4:	mov    rax,QWORD PTR [rdi+0x30]
  4086b8:	lea    rcx,[rdi+0x28]
  4086bc:	test   rax,rax
  4086bf:	je     4086ca <rb_strcasecmp@plt+0x61aa>
  4086c1:	mov    QWORD PTR [rax+0x8],rdx
  4086c5:	mov    rdx,QWORD PTR [rcx]
  4086c8:	jmp    4086ce <rb_strcasecmp@plt+0x61ae>
  4086ca:	mov    QWORD PTR [rbp+0x8],rdx
  4086ce:	test   rdx,rdx
  4086d1:	lea    rdx,[rdx+0x10]
  4086d5:	cmove  rdx,rbp
  4086d9:	mov    QWORD PTR [rdx],rax
  4086dc:	vxorps xmm0,xmm0,xmm0
  4086e0:	vmovups XMMWORD PTR [rcx],xmm0
  4086e4:	add    QWORD PTR [rbp+0x10],0xffffffffffffffff
  4086e9:	call   4021f0 <free@plt>
  4086ee:	cmp    QWORD PTR [rbp+0x10],0x0
  4086f3:	je     408629 <rb_strcasecmp@plt+0x6109>
  4086f9:	nop    DWORD PTR [rax+0x0]
  408700:	add    DWORD PTR [r15+0x1cc],0xffffffff
  408708:	jne    408712 <rb_strcasecmp@plt+0x61f2>
  40870a:	mov    rdi,r15
  40870d:	call   403b90 <rb_strcasecmp@plt+0x1670>
  408712:	mov    rdi,QWORD PTR [r12]
  408716:	mov    rsi,r14
  408719:	call   4021d0 <rb_dictionary_foreach_next@plt>
  40871e:	mov    rdi,QWORD PTR [r12]
  408722:	mov    rsi,r14
  408725:	call   402140 <rb_dictionary_foreach_cur@plt>
  40872a:	mov    r15,rax
  40872d:	test   rax,rax
  408730:	jne    408650 <rb_strcasecmp@plt+0x6130>
  408736:	mov    rdx,QWORD PTR [rbx+0x28]
  40873a:	mov    rcx,QWORD PTR [rbx+0x30]
  40873e:	lea    rax,[rbx+0x28]
  408742:	test   rcx,rcx
  408745:	je     408750 <rb_strcasecmp@plt+0x6230>
  408747:	mov    QWORD PTR [rcx+0x8],rdx
  40874b:	mov    rdx,QWORD PTR [rax]
  40874e:	jmp    408757 <rb_strcasecmp@plt+0x6237>
  408750:	mov    QWORD PTR [rip+0xb9b9],rdx        # 414110 <rb_strcasecmp@plt+0x11bf0>
  408757:	test   rdx,rdx
  40875a:	lea    rdx,[rdx+0x10]
  40875e:	lea    rsi,[rip+0xb9a3]        # 414108 <rb_strcasecmp@plt+0x11be8>
  408765:	cmove  rdx,rsi
  408769:	mov    QWORD PTR [rdx],rcx
  40876c:	vxorps xmm0,xmm0,xmm0
  408770:	vmovups XMMWORD PTR [rax],xmm0
  408774:	add    QWORD PTR [rip+0xb99c],0xffffffffffffffff        # 414118 <rb_strcasecmp@plt+0x11bf8>
  40877c:	mov    rdi,rbx
  40877f:	call   4021f0 <free@plt>
  408784:	cmp    QWORD PTR [rip+0xb98c],0x0        # 414118 <rb_strcasecmp@plt+0x11bf8>
  40878c:	jne    408795 <rb_strcasecmp@plt+0x6275>
  40878e:	mov    BYTE PTR [rip+0xb96b],0x0        # 414100 <rb_strcasecmp@plt+0x11be0>
  408795:	add    rsp,0x18
  408799:	pop    rbx
  40879a:	pop    r12
  40879c:	pop    r13
  40879e:	pop    r14
  4087a0:	pop    r15
  4087a2:	pop    rbp
  4087a3:	ret    
  4087a4:	mov    rdx,QWORD PTR [r14]
  4087a7:	lea    rsi,[rip+0x2819]        # 40afc7 <rb_strcasecmp@plt+0x8aa7>
  4087ae:	mov    edi,0x43
  4087b3:	xor    eax,eax
  4087b5:	call   403150 <rb_strcasecmp@plt+0xc30>
  4087ba:	mov    edi,0x3
  4087bf:	call   4020e0 <exit@plt>
  4087c4:	mov    rdx,QWORD PTR [r14]
  4087c7:	mov    rcx,QWORD PTR [r14+0x8]
  4087cb:	lea    rsi,[rip+0x278f]        # 40af61 <rb_strcasecmp@plt+0x8a41>
  4087d2:	mov    edi,0x43
  4087d7:	xor    eax,eax
  4087d9:	call   403150 <rb_strcasecmp@plt+0xc30>
  4087de:	mov    edi,0x3
  4087e3:	call   4020e0 <exit@plt>
  4087e8:	mov    rdx,QWORD PTR [r14]
  4087eb:	lea    rsi,[rip+0x279e]        # 40af90 <rb_strcasecmp@plt+0x8a70>
  4087f2:	jmp    4087ae <rb_strcasecmp@plt+0x628e>
  4087f4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4087fe:	xchg   ax,ax
  408800:	push   r15
  408802:	push   r14
  408804:	push   rbx
  408805:	sub    rsp,0x10
  408809:	mov    rbx,QWORD PTR [rip+0xb8f8]        # 414108 <rb_strcasecmp@plt+0x11be8>
  408810:	test   rbx,rbx
  408813:	je     40887d <rb_strcasecmp@plt+0x635d>
  408815:	lea    r14,[rip+0xb8ec]        # 414108 <rb_strcasecmp@plt+0x11be8>
  40881c:	nop    DWORD PTR [rax+0x0]
  408820:	mov    rdi,QWORD PTR [rbx]
  408823:	mov    r15,QWORD PTR [rbx+0x10]
  408827:	test   rdi,rdi
  40882a:	je     408831 <rb_strcasecmp@plt+0x6311>
  40882c:	call   4021f0 <free@plt>
  408831:	mov    rcx,QWORD PTR [rbx+0x8]
  408835:	mov    rax,QWORD PTR [rbx+0x10]
  408839:	add    rbx,0x8
  40883d:	test   rax,rax
  408840:	je     408850 <rb_strcasecmp@plt+0x6330>
  408842:	mov    QWORD PTR [rax+0x8],rcx
  408846:	mov    rcx,QWORD PTR [rbx]
  408849:	jmp    408857 <rb_strcasecmp@plt+0x6337>
  40884b:	nop    DWORD PTR [rax+rax*1+0x0]
  408850:	mov    QWORD PTR [rip+0xb8b9],rcx        # 414110 <rb_strcasecmp@plt+0x11bf0>
  408857:	test   rcx,rcx
  40885a:	lea    rcx,[rcx+0x10]
  40885e:	cmove  rcx,r14
  408862:	mov    QWORD PTR [rcx],rax
  408865:	vxorps xmm0,xmm0,xmm0
  408869:	vmovups XMMWORD PTR [rbx],xmm0
  40886d:	add    QWORD PTR [rip+0xb8a3],0xffffffffffffffff        # 414118 <rb_strcasecmp@plt+0x11bf8>
  408875:	mov    rbx,r15
  408878:	test   r15,r15
  40887b:	jne    408820 <rb_strcasecmp@plt+0x6300>
  40887d:	lea    r14,[rip+0xb8a4]        # 414128 <rb_strcasecmp@plt+0x11c08>
  408884:	mov    rdi,QWORD PTR [r14]
  408887:	mov    rbx,rsp
  40888a:	mov    rsi,rbx
  40888d:	call   402240 <rb_dictionary_foreach_start@plt>
  408892:	mov    rdi,QWORD PTR [r14]
  408895:	mov    rsi,rbx
  408898:	call   402140 <rb_dictionary_foreach_cur@plt>
  40889d:	test   rax,rax
  4088a0:	je     4088d3 <rb_strcasecmp@plt+0x63b3>
  4088a2:	mov    rbx,rsp
  4088a5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4088af:	nop
  4088b0:	mov    rdi,rax
  4088b3:	call   408a90 <rb_strcasecmp@plt+0x6570>
  4088b8:	mov    rdi,QWORD PTR [r14]
  4088bb:	mov    rsi,rbx
  4088be:	call   4021d0 <rb_dictionary_foreach_next@plt>
  4088c3:	mov    rdi,QWORD PTR [r14]
  4088c6:	mov    rsi,rbx
  4088c9:	call   402140 <rb_dictionary_foreach_cur@plt>
  4088ce:	test   rax,rax
  4088d1:	jne    4088b0 <rb_strcasecmp@plt+0x6390>
  4088d3:	mov    BYTE PTR [rip+0xb826],0x0        # 414100 <rb_strcasecmp@plt+0x11be0>
  4088da:	add    rsp,0x10
  4088de:	pop    rbx
  4088df:	pop    r14
  4088e1:	pop    r15
  4088e3:	ret    
  4088e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4088ee:	xchg   ax,ax
  4088f0:	push   r14
  4088f2:	push   rbx
  4088f3:	sub    rsp,0x18
  4088f7:	lea    r14,[rip+0xb82a]        # 414128 <rb_strcasecmp@plt+0x11c08>
  4088fe:	mov    rdi,QWORD PTR [r14]
  408901:	lea    rbx,[rsp+0x8]
  408906:	mov    rsi,rbx
  408909:	call   402240 <rb_dictionary_foreach_start@plt>
  40890e:	mov    rdi,QWORD PTR [r14]
  408911:	mov    rsi,rbx
  408914:	call   402140 <rb_dictionary_foreach_cur@plt>
  408919:	test   rax,rax
  40891c:	je     408953 <rb_strcasecmp@plt+0x6433>
  40891e:	lea    rbx,[rsp+0x8]
  408923:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40892d:	nop    DWORD PTR [rax]
  408930:	mov    rdi,rax
  408933:	call   408a90 <rb_strcasecmp@plt+0x6570>
  408938:	mov    rdi,QWORD PTR [r14]
  40893b:	mov    rsi,rbx
  40893e:	call   4021d0 <rb_dictionary_foreach_next@plt>
  408943:	mov    rdi,QWORD PTR [r14]
  408946:	mov    rsi,rbx
  408949:	call   402140 <rb_dictionary_foreach_cur@plt>
  40894e:	test   rax,rax
  408951:	jne    408930 <rb_strcasecmp@plt+0x6410>
  408953:	add    rsp,0x18
  408957:	pop    rbx
  408958:	pop    r14
  40895a:	ret    
  40895b:	nop    DWORD PTR [rax+rax*1+0x0]
  408960:	push   rbp
  408961:	push   r15
  408963:	push   r14
  408965:	push   r13
  408967:	push   r12
  408969:	push   rbx
  40896a:	push   rax
  40896b:	mov    r14,rdi
  40896e:	cmp    BYTE PTR [rip+0xb78b],0x0        # 414100 <rb_strcasecmp@plt+0x11be0>
  408975:	je     4089fe <rb_strcasecmp@plt+0x64de>
  40897b:	mov    rax,QWORD PTR [rip+0xb796]        # 414118 <rb_strcasecmp@plt+0x11bf8>
  408982:	test   rax,rax
  408985:	je     4089fe <rb_strcasecmp@plt+0x64de>
  408987:	add    DWORD PTR [r14+0x1cc],0x1
  40898f:	lea    rax,[rip+0x744a]        # 40fde0 <rb_strcasecmp@plt+0xd8c0>
  408996:	mov    ebx,DWORD PTR [rax+0x18]
  408999:	mov    edi,0x1
  40899e:	mov    esi,0x20
  4089a3:	call   402440 <calloc@plt>
  4089a8:	test   rax,rax
  4089ab:	je     408a80 <rb_strcasecmp@plt+0x6560>
  4089b1:	mov    r15,QWORD PTR [r14+0x1d0]
  4089b8:	shl    rbx,0x5
  4089bc:	mov    QWORD PTR [r15+rbx*1+0x10],rax
  4089c1:	lea    rax,[rip+0xb768]        # 414130 <rb_strcasecmp@plt+0x11c10>
  4089c8:	mov    r13,QWORD PTR [rax]
  4089cb:	test   r13,r13
  4089ce:	je     408a67 <rb_strcasecmp@plt+0x6547>
  4089d4:	lea    r12,[rip+0x2001]        # 40a9dc <rb_strcasecmp@plt+0x84bc>
  4089db:	mov    rbx,r13
  4089de:	xchg   ax,ax
  4089e0:	mov    rbp,QWORD PTR [rbx]
  4089e3:	mov    rdi,QWORD PTR [rbp+0x20]
  4089e7:	mov    rsi,r12
  4089ea:	call   402120 <strcasecmp@plt>
  4089ef:	test   eax,eax
  4089f1:	je     408a12 <rb_strcasecmp@plt+0x64f2>
  4089f3:	mov    rbx,QWORD PTR [rbx+0x10]
  4089f7:	test   rbx,rbx
  4089fa:	jne    4089e0 <rb_strcasecmp@plt+0x64c0>
  4089fc:	jmp    408a30 <rb_strcasecmp@plt+0x6510>
  4089fe:	lea    rax,[rip+0x73db]        # 40fde0 <rb_strcasecmp@plt+0xd8c0>
  408a05:	mov    esi,DWORD PTR [rax+0x18]
  408a08:	mov    rdi,r14
  408a0b:	call   403c40 <rb_strcasecmp@plt+0x1720>
  408a10:	jmp    408a6f <rb_strcasecmp@plt+0x654f>
  408a12:	test   rbp,rbp
  408a15:	je     408a30 <rb_strcasecmp@plt+0x6510>
  408a17:	mov    eax,DWORD PTR [rbp+0x18]
  408a1a:	shl    rax,0x5
  408a1e:	cmp    DWORD PTR [r15+rax*1+0x18],0x2
  408a24:	jne    408a6f <rb_strcasecmp@plt+0x654f>
  408a26:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408a30:	mov    rbx,QWORD PTR [r13+0x0]
  408a34:	mov    rdi,QWORD PTR [rbx+0x20]
  408a38:	lea    rsi,[rip+0x217d]        # 40abbc <rb_strcasecmp@plt+0x869c>
  408a3f:	call   402120 <strcasecmp@plt>
  408a44:	test   eax,eax
  408a46:	je     408a53 <rb_strcasecmp@plt+0x6533>
  408a48:	mov    r13,QWORD PTR [r13+0x10]
  408a4c:	test   r13,r13
  408a4f:	jne    408a30 <rb_strcasecmp@plt+0x6510>
  408a51:	jmp    408a67 <rb_strcasecmp@plt+0x6547>
  408a53:	test   rbx,rbx
  408a56:	je     408a67 <rb_strcasecmp@plt+0x6547>
  408a58:	mov    eax,DWORD PTR [rbx+0x18]
  408a5b:	shl    rax,0x5
  408a5f:	cmp    DWORD PTR [r15+rax*1+0x18],0x2
  408a65:	jne    408a6f <rb_strcasecmp@plt+0x654f>
  408a67:	mov    rdi,r14
  408a6a:	call   4093a0 <rb_strcasecmp@plt+0x6e80>
  408a6f:	mov    al,0x1
  408a71:	add    rsp,0x8
  408a75:	pop    rbx
  408a76:	pop    r12
  408a78:	pop    r13
  408a7a:	pop    r14
  408a7c:	pop    r15
  408a7e:	pop    rbp
  408a7f:	ret    
  408a80:	call   402380 <rb_outofmemory@plt>
  408a85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408a8f:	nop
  408a90:	push   r15
  408a92:	push   r14
  408a94:	push   r13
  408a96:	push   r12
  408a98:	push   rbx
  408a99:	lea    r12,[rip+0x7340]        # 40fde0 <rb_strcasecmp@plt+0xd8c0>
  408aa0:	mov    eax,DWORD PTR [r12+0x18]
  408aa5:	mov    rcx,QWORD PTR [rdi+0x1d0]
  408aac:	shl    rax,0x5
  408ab0:	mov    r14,QWORD PTR [rcx+rax*1+0x10]
  408ab5:	test   r14,r14
  408ab8:	je     408b3c <rb_strcasecmp@plt+0x661c>
  408abe:	mov    r15,rdi
  408ac1:	mov    edi,DWORD PTR [rdi]
  408ac3:	lea    rsi,[rip+0x257d]        # 40b047 <rb_strcasecmp@plt+0x8b27>
  408aca:	xor    eax,eax
  408acc:	call   403070 <rb_strcasecmp@plt+0xb50>
  408ad1:	mov    r13,QWORD PTR [r14]
  408ad4:	test   r13,r13
  408ad7:	jne    408aed <rb_strcasecmp@plt+0x65cd>
  408ad9:	jmp    408b05 <rb_strcasecmp@plt+0x65e5>
  408adb:	nop    DWORD PTR [rax+rax*1+0x0]
  408ae0:	mov    rdi,rbx
  408ae3:	call   4021f0 <free@plt>
  408ae8:	test   r13,r13
  408aeb:	je     408b05 <rb_strcasecmp@plt+0x65e5>
  408aed:	mov    rbx,QWORD PTR [r13+0x0]
  408af1:	mov    r13,QWORD PTR [r13+0x10]
  408af5:	mov    rdi,QWORD PTR [rbx+0x8]
  408af9:	call   4022e0 <rb_close@plt>
  408afe:	test   rbx,rbx
  408b01:	jne    408ae0 <rb_strcasecmp@plt+0x65c0>
  408b03:	jmp    408ae8 <rb_strcasecmp@plt+0x65c8>
  408b05:	mov    rdi,r14
  408b08:	call   4021f0 <free@plt>
  408b0d:	mov    esi,DWORD PTR [r12+0x18]
  408b12:	mov    rax,QWORD PTR [r15+0x1d0]
  408b19:	mov    rcx,rsi
  408b1c:	shl    rcx,0x5
  408b20:	vxorps xmm0,xmm0,xmm0
  408b24:	vmovups XMMWORD PTR [rax+rcx*1+0x8],xmm0
  408b2a:	mov    rdi,r15
  408b2d:	call   403c40 <rb_strcasecmp@plt+0x1720>
  408b32:	add    DWORD PTR [r15+0x1cc],0xffffffff
  408b3a:	je     408b46 <rb_strcasecmp@plt+0x6626>
  408b3c:	pop    rbx
  408b3d:	pop    r12
  408b3f:	pop    r13
  408b41:	pop    r14
  408b43:	pop    r15
  408b45:	ret    
  408b46:	mov    rdi,r15
  408b49:	pop    rbx
  408b4a:	pop    r12
  408b4c:	pop    r13
  408b4e:	pop    r14
  408b50:	pop    r15
  408b52:	jmp    403b90 <rb_strcasecmp@plt+0x1670>
  408b57:	nop    WORD PTR [rax+rax*1+0x0]
  408b60:	push   rbp
  408b61:	push   r15
  408b63:	push   r14
  408b65:	push   r13
  408b67:	push   r12
  408b69:	push   rbx
  408b6a:	push   rax
  408b6b:	lea    rax,[rip+0x726e]        # 40fde0 <rb_strcasecmp@plt+0xd8c0>
  408b72:	mov    eax,DWORD PTR [rax+0x18]
  408b75:	mov    r15,QWORD PTR [rdi+0x1d0]
  408b7c:	shl    rax,0x5
  408b80:	mov    rax,QWORD PTR [r15+rax*1+0x10]
  408b85:	test   rax,rax
  408b88:	je     408b90 <rb_strcasecmp@plt+0x6670>
  408b8a:	cmp    BYTE PTR [rax+0x18],0x0
  408b8e:	je     408b9f <rb_strcasecmp@plt+0x667f>
  408b90:	add    rsp,0x8
  408b94:	pop    rbx
  408b95:	pop    r12
  408b97:	pop    r13
  408b99:	pop    r14
  408b9b:	pop    r15
  408b9d:	pop    rbp
  408b9e:	ret    
  408b9f:	mov    r14,rdi
  408ba2:	lea    rax,[rip+0xb587]        # 414130 <rb_strcasecmp@plt+0x11c10>
  408ba9:	mov    r13,QWORD PTR [rax]
  408bac:	test   r13,r13
  408baf:	je     408c3b <rb_strcasecmp@plt+0x671b>
  408bb5:	lea    r12,[rip+0x1e20]        # 40a9dc <rb_strcasecmp@plt+0x84bc>
  408bbc:	mov    rbx,r13
  408bbf:	nop
  408bc0:	mov    rbp,QWORD PTR [rbx]
  408bc3:	mov    rdi,QWORD PTR [rbp+0x20]
  408bc7:	mov    rsi,r12
  408bca:	call   402120 <strcasecmp@plt>
  408bcf:	test   eax,eax
  408bd1:	je     408bde <rb_strcasecmp@plt+0x66be>
  408bd3:	mov    rbx,QWORD PTR [rbx+0x10]
  408bd7:	test   rbx,rbx
  408bda:	jne    408bc0 <rb_strcasecmp@plt+0x66a0>
  408bdc:	jmp    408c00 <rb_strcasecmp@plt+0x66e0>
  408bde:	test   rbp,rbp
  408be1:	je     408c00 <rb_strcasecmp@plt+0x66e0>
  408be3:	mov    eax,DWORD PTR [rbp+0x18]
  408be6:	shl    rax,0x5
  408bea:	cmp    DWORD PTR [r15+rax*1+0x18],0x2
  408bf0:	jne    408b90 <rb_strcasecmp@plt+0x6670>
  408bf2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408bfc:	nop    DWORD PTR [rax+0x0]
  408c00:	mov    rbx,QWORD PTR [r13+0x0]
  408c04:	mov    rdi,QWORD PTR [rbx+0x20]
  408c08:	lea    rsi,[rip+0x1fad]        # 40abbc <rb_strcasecmp@plt+0x869c>
  408c0f:	call   402120 <strcasecmp@plt>
  408c14:	test   eax,eax
  408c16:	je     408c23 <rb_strcasecmp@plt+0x6703>
  408c18:	mov    r13,QWORD PTR [r13+0x10]
  408c1c:	test   r13,r13
  408c1f:	jne    408c00 <rb_strcasecmp@plt+0x66e0>
  408c21:	jmp    408c3b <rb_strcasecmp@plt+0x671b>
  408c23:	test   rbx,rbx
  408c26:	je     408c3b <rb_strcasecmp@plt+0x671b>
  408c28:	mov    eax,DWORD PTR [rbx+0x18]
  408c2b:	shl    rax,0x5
  408c2f:	cmp    DWORD PTR [r15+rax*1+0x18],0x2
  408c35:	jne    408b90 <rb_strcasecmp@plt+0x6670>
  408c3b:	mov    rdi,r14
  408c3e:	add    rsp,0x8
  408c42:	pop    rbx
  408c43:	pop    r12
  408c45:	pop    r13
  408c47:	pop    r14
  408c49:	pop    r15
  408c4b:	pop    rbp
  408c4c:	jmp    4093a0 <rb_strcasecmp@plt+0x6e80>
  408c51:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408c5b:	nop    DWORD PTR [rax+rax*1+0x0]
  408c60:	push   rbp
  408c61:	push   r15
  408c63:	push   r14
  408c65:	push   r12
  408c67:	push   rbx
  408c68:	sub    rsp,0xa0
  408c6f:	mov    r12d,esi
  408c72:	mov    r14,rdi
  408c75:	mov    DWORD PTR [rsp+0xc],0x1
  408c7d:	lea    rsi,[rsp+0x20]
  408c82:	call   402260 <rb_inet_pton_sock@plt>
  408c87:	test   eax,eax
  408c89:	je     408ee7 <rb_strcasecmp@plt+0x69c7>
  408c8f:	mov    eax,r12d
  408c92:	rol    ax,0x8
  408c96:	movbe  WORD PTR [rsp+0x22],r12w
  408c9e:	movzx  edi,WORD PTR [rsp+0x20]
  408ca3:	cmp    edi,0xa
  408ca6:	jne    408cfa <rb_strcasecmp@plt+0x67da>
  408ca8:	mov    ecx,DWORD PTR [rsp+0x28]
  408cac:	lea    r15,[rip+0xb38d]        # 414040 <rb_strcasecmp@plt+0x11b20>
  408cb3:	cmp    ecx,DWORD PTR [rip+0xb3c7]        # 414080 <rb_strcasecmp@plt+0x11b60>
  408cb9:	jne    408d26 <rb_strcasecmp@plt+0x6806>
  408cbb:	mov    ecx,DWORD PTR [rsp+0x2c]
  408cbf:	cmp    ecx,DWORD PTR [rip+0xb3bf]        # 414084 <rb_strcasecmp@plt+0x11b64>
  408cc5:	jne    408d26 <rb_strcasecmp@plt+0x6806>
  408cc7:	mov    ecx,DWORD PTR [rsp+0x30]
  408ccb:	cmp    ecx,DWORD PTR [rip+0xb3b7]        # 414088 <rb_strcasecmp@plt+0x11b68>
  408cd1:	jne    408d26 <rb_strcasecmp@plt+0x6806>
  408cd3:	mov    ecx,DWORD PTR [rsp+0x34]
  408cd7:	cmp    ecx,DWORD PTR [rip+0xb3af]        # 41408c <rb_strcasecmp@plt+0x11b6c>
  408cdd:	jne    408d26 <rb_strcasecmp@plt+0x6806>
  408cdf:	cmp    ax,WORD PTR [rip+0xb394]        # 41407a <rb_strcasecmp@plt+0x11b5a>
  408ce6:	jne    408d26 <rb_strcasecmp@plt+0x6806>
  408ce8:	mov    rax,QWORD PTR [rip+0xb409]        # 4140f8 <rb_strcasecmp@plt+0x11bd8>
  408cef:	test   rax,rax
  408cf2:	jne    408df6 <rb_strcasecmp@plt+0x68d6>
  408cf8:	jmp    408d26 <rb_strcasecmp@plt+0x6806>
  408cfa:	mov    ecx,DWORD PTR [rsp+0x24]
  408cfe:	lea    r15,[rip+0xb27b]        # 413f80 <rb_strcasecmp@plt+0x11a60>
  408d05:	cmp    ecx,DWORD PTR [rip+0xb2b1]        # 413fbc <rb_strcasecmp@plt+0x11a9c>
  408d0b:	jne    408d26 <rb_strcasecmp@plt+0x6806>
  408d0d:	cmp    ax,WORD PTR [rip+0xb2a6]        # 413fba <rb_strcasecmp@plt+0x11a9a>
  408d14:	jne    408d26 <rb_strcasecmp@plt+0x6806>
  408d16:	mov    rax,QWORD PTR [rip+0xb31b]        # 414038 <rb_strcasecmp@plt+0x11b18>
  408d1d:	test   rax,rax
  408d20:	jne    408df6 <rb_strcasecmp@plt+0x68d6>
  408d26:	lea    rcx,[rip+0x2036]        # 40ad63 <rb_strcasecmp@plt+0x8843>
  408d2d:	mov    esi,0x1
  408d32:	xor    edx,edx
  408d34:	call   402110 <rb_socket@plt>
  408d39:	test   rax,rax
  408d3c:	je     408f0b <rb_strcasecmp@plt+0x69eb>
  408d42:	mov    rbx,rax
  408d45:	mov    rdi,rax
  408d48:	call   4020d0 <rb_get_fd@plt>
  408d4d:	lea    rcx,[rsp+0xc]
  408d52:	mov    esi,0x1
  408d57:	mov    edx,0x2
  408d5c:	mov    r8d,0x4
  408d62:	mov    edi,eax
  408d64:	call   4021b0 <setsockopt@plt>
  408d69:	test   eax,eax
  408d6b:	jne    408f23 <rb_strcasecmp@plt+0x6a03>
  408d71:	mov    rdi,rbx
  408d74:	call   4020d0 <rb_get_fd@plt>
  408d79:	movzx  ecx,WORD PTR [rsp+0x20]
  408d7e:	cmp    ecx,0x2
  408d81:	mov    ecx,0x10
  408d86:	mov    edx,0x1c
  408d8b:	cmove  edx,ecx
  408d8e:	lea    rsi,[rsp+0x20]
  408d93:	mov    edi,eax
  408d95:	call   4024e0 <bind@plt>
  408d9a:	test   eax,eax
  408d9c:	je     408db6 <rb_strcasecmp@plt+0x6896>
  408d9e:	call   402390 <__errno_location@plt>
  408da3:	mov    edi,DWORD PTR [rax]
  408da5:	call   4022a0 <strerror@plt>
  408daa:	mov    rcx,rax
  408dad:	lea    rsi,[rip+0x2007]        # 40adbb <rb_strcasecmp@plt+0x889b>
  408db4:	jmp    408ddf <rb_strcasecmp@plt+0x68bf>
  408db6:	mov    esi,0x1000
  408dbb:	xor    edx,edx
  408dbd:	mov    rdi,rbx
  408dc0:	call   402500 <rb_listen@plt>
  408dc5:	test   eax,eax
  408dc7:	je     408e06 <rb_strcasecmp@plt+0x68e6>
  408dc9:	call   402390 <__errno_location@plt>
  408dce:	mov    edi,DWORD PTR [rax]
  408dd0:	call   4022a0 <strerror@plt>
  408dd5:	mov    rcx,rax
  408dd8:	lea    rsi,[rip+0x1ffb]        # 40adda <rb_strcasecmp@plt+0x88ba>
  408ddf:	mov    edi,0x57
  408de4:	xor    eax,eax
  408de6:	mov    rdx,rcx
  408de9:	call   403150 <rb_strcasecmp@plt+0xc30>
  408dee:	mov    rdi,rbx
  408df1:	call   4022e0 <rb_close@plt>
  408df6:	add    rsp,0xa0
  408dfd:	pop    rbx
  408dfe:	pop    r12
  408e00:	pop    r14
  408e02:	pop    r15
  408e04:	pop    rbp
  408e05:	ret    
  408e06:	mov    rdi,QWORD PTR [r15+0xb8]
  408e0d:	test   rdi,rdi
  408e10:	je     408e17 <rb_strcasecmp@plt+0x68f7>
  408e12:	call   4022e0 <rb_close@plt>
  408e17:	mov    QWORD PTR [r15+0xb8],rbx
  408e1e:	lea    rbp,[rip+0xb303]        # 414128 <rb_strcasecmp@plt+0x11c08>
  408e25:	mov    rdi,QWORD PTR [rbp+0x0]
  408e29:	lea    rbx,[rsp+0x10]
  408e2e:	mov    rsi,rbx
  408e31:	call   402240 <rb_dictionary_foreach_start@plt>
  408e36:	mov    rdi,QWORD PTR [rbp+0x0]
  408e3a:	mov    rsi,rbx
  408e3d:	call   402140 <rb_dictionary_foreach_cur@plt>
  408e42:	test   rax,rax
  408e45:	je     408e75 <rb_strcasecmp@plt+0x6955>
  408e47:	lea    rbx,[rsp+0x10]
  408e4c:	nop    DWORD PTR [rax+0x0]
  408e50:	mov    rdi,rax
  408e53:	call   408a90 <rb_strcasecmp@plt+0x6570>
  408e58:	mov    rdi,QWORD PTR [rbp+0x0]
  408e5c:	mov    rsi,rbx
  408e5f:	call   4021d0 <rb_dictionary_foreach_next@plt>
  408e64:	mov    rdi,QWORD PTR [rbp+0x0]
  408e68:	mov    rsi,rbx
  408e6b:	call   402140 <rb_dictionary_foreach_cur@plt>
  408e70:	test   rax,rax
  408e73:	jne    408e50 <rb_strcasecmp@plt+0x6930>
  408e75:	mov    edx,0x35
  408e7a:	mov    rdi,r15
  408e7d:	mov    rsi,r14
  408e80:	call   4021c0 <rb_strlcpy@plt>
  408e85:	mov    WORD PTR [r15+0x36],r12w
  408e8a:	vmovups ymm0,YMMWORD PTR [rsp+0x20]
  408e90:	vmovups ymm1,YMMWORD PTR [rsp+0x40]
  408e96:	vmovups ymm2,YMMWORD PTR [rsp+0x60]
  408e9c:	vmovups ymm3,YMMWORD PTR [rsp+0x80]
  408ea5:	vmovups YMMWORD PTR [r15+0x98],ymm3
  408eae:	vmovups YMMWORD PTR [r15+0x78],ymm2
  408eb4:	vmovups YMMWORD PTR [r15+0x58],ymm1
  408eba:	vmovups YMMWORD PTR [r15+0x38],ymm0
  408ec0:	mov    BYTE PTR [rip+0xb239],0x1        # 414100 <rb_strcasecmp@plt+0x11be0>
  408ec7:	mov    rdi,QWORD PTR [r15+0xb8]
  408ece:	lea    rdx,[rip+0x8b]        # 408f60 <rb_strcasecmp@plt+0x6a40>
  408ed5:	xor    esi,esi
  408ed7:	mov    rcx,r15
  408eda:	vzeroupper 
  408edd:	call   402430 <rb_accept_tcp@plt>
  408ee2:	jmp    408df6 <rb_strcasecmp@plt+0x68d6>
  408ee7:	movzx  ecx,r12w
  408eeb:	lea    rsi,[rip+0x1e51]        # 40ad43 <rb_strcasecmp@plt+0x8823>
  408ef2:	mov    edi,0x43
  408ef7:	xor    eax,eax
  408ef9:	mov    rdx,r14
  408efc:	call   403150 <rb_strcasecmp@plt+0xc30>
  408f01:	mov    edi,0x3
  408f06:	call   4020e0 <exit@plt>
  408f0b:	call   402390 <__errno_location@plt>
  408f10:	mov    edi,DWORD PTR [rax]
  408f12:	call   4022a0 <strerror@plt>
  408f17:	mov    rcx,rax
  408f1a:	lea    rsi,[rip+0x1e56]        # 40ad77 <rb_strcasecmp@plt+0x8857>
  408f21:	jmp    408f39 <rb_strcasecmp@plt+0x6a19>
  408f23:	call   402390 <__errno_location@plt>
  408f28:	mov    edi,DWORD PTR [rax]
  408f2a:	call   4022a0 <strerror@plt>
  408f2f:	mov    rcx,rax
  408f32:	lea    rsi,[rip+0x1e5c]        # 40ad95 <rb_strcasecmp@plt+0x8875>
  408f39:	mov    edi,0x43
  408f3e:	xor    eax,eax
  408f40:	mov    rdx,rcx
  408f43:	call   403150 <rb_strcasecmp@plt+0xc30>
  408f48:	mov    edi,0x3
  408f4d:	call   4020e0 <exit@plt>
  408f52:	nop    WORD PTR cs:[rax+rax*1+0x0]
  408f5c:	nop    DWORD PTR [rax+0x0]
  408f60:	push   r15
  408f62:	push   r14
  408f64:	push   rbx
  408f65:	sub    rsp,0xa0
  408f6c:	mov    r14,rdi
  408f6f:	mov    DWORD PTR [rsp+0xc],0x80
  408f77:	test   esi,esi
  408f79:	jne    40905b <rb_strcasecmp@plt+0x6b3b>
  408f7f:	test   r8,r8
  408f82:	je     40905b <rb_strcasecmp@plt+0x6b3b>
  408f88:	mov    rdi,r14
  408f8b:	call   4020d0 <rb_get_fd@plt>
  408f90:	lea    rsi,[rsp+0x20]
  408f95:	lea    rdx,[rsp+0xc]
  408f9a:	mov    edi,eax
  408f9c:	call   402300 <getsockname@plt>
  408fa1:	test   eax,eax
  408fa3:	jne    40905b <rb_strcasecmp@plt+0x6b3b>
  408fa9:	lea    r15,[rip+0xb178]        # 414128 <rb_strcasecmp@plt+0x11c08>
  408fb0:	mov    rdi,QWORD PTR [r15]
  408fb3:	lea    rbx,[rsp+0x10]
  408fb8:	mov    rsi,rbx
  408fbb:	call   402240 <rb_dictionary_foreach_start@plt>
  408fc0:	mov    rdi,QWORD PTR [r15]
  408fc3:	mov    rsi,rbx
  408fc6:	call   402140 <rb_dictionary_foreach_cur@plt>
  408fcb:	test   rax,rax
  408fce:	je     40905b <rb_strcasecmp@plt+0x6b3b>
  408fd4:	lea    rbx,[rsp+0x10]
  408fd9:	nop    DWORD PTR [rax+0x0]
  408fe0:	movzx  ecx,WORD PTR [rax+0xf8]
  408fe7:	cmp    cx,WORD PTR [rsp+0x20]
  408fec:	jne    409040 <rb_strcasecmp@plt+0x6b20>
  408fee:	movzx  ecx,cx
  408ff1:	cmp    ecx,0xa
  408ff4:	je     409010 <rb_strcasecmp@plt+0x6af0>
  408ff6:	cmp    ecx,0x2
  408ff9:	jne    409089 <rb_strcasecmp@plt+0x6b69>
  408fff:	mov    ecx,DWORD PTR [rsp+0x24]
  409003:	cmp    ecx,DWORD PTR [rax+0xfc]
  409009:	jne    409040 <rb_strcasecmp@plt+0x6b20>
  40900b:	jmp    409070 <rb_strcasecmp@plt+0x6b50>
  40900d:	nop    DWORD PTR [rax]
  409010:	mov    ecx,DWORD PTR [rsp+0x28]
  409014:	cmp    ecx,DWORD PTR [rax+0x100]
  40901a:	jne    409040 <rb_strcasecmp@plt+0x6b20>
  40901c:	mov    ecx,DWORD PTR [rsp+0x2c]
  409020:	cmp    ecx,DWORD PTR [rax+0x104]
  409026:	jne    409040 <rb_strcasecmp@plt+0x6b20>
  409028:	mov    ecx,DWORD PTR [rsp+0x30]
  40902c:	cmp    ecx,DWORD PTR [rax+0x108]
  409032:	jne    409040 <rb_strcasecmp@plt+0x6b20>
  409034:	mov    ecx,DWORD PTR [rsp+0x34]
  409038:	cmp    ecx,DWORD PTR [rax+0x10c]
  40903e:	je     409070 <rb_strcasecmp@plt+0x6b50>
  409040:	mov    rdi,QWORD PTR [r15]
  409043:	mov    rsi,rbx
  409046:	call   4021d0 <rb_dictionary_foreach_next@plt>
  40904b:	mov    rdi,QWORD PTR [r15]
  40904e:	mov    rsi,rbx
  409051:	call   402140 <rb_dictionary_foreach_cur@plt>
  409056:	test   rax,rax
  409059:	jne    408fe0 <rb_strcasecmp@plt+0x6ac0>
  40905b:	mov    rdi,r14
  40905e:	call   4022e0 <rb_close@plt>
  409063:	add    rsp,0xa0
  40906a:	pop    rbx
  40906b:	pop    r14
  40906d:	pop    r15
  40906f:	ret    
  409070:	lea    rdx,[rip+0x39]        # 4090b0 <rb_strcasecmp@plt+0x6b90>
  409077:	mov    esi,0x1
  40907c:	mov    rdi,r14
  40907f:	mov    rcx,rax
  409082:	call   4020b0 <rb_setselect@plt>
  409087:	jmp    409063 <rb_strcasecmp@plt+0x6b43>
  409089:	lea    rsi,[rip+0x1d6b]        # 40adfb <rb_strcasecmp@plt+0x88db>
  409090:	mov    edi,0x43
  409095:	xor    eax,eax
  409097:	call   403150 <rb_strcasecmp@plt+0xc30>
  40909c:	mov    edi,0x3
  4090a1:	call   4020e0 <exit@plt>
  4090a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4090b0:	push   rbp
  4090b1:	push   r15
  4090b3:	push   r14
  4090b5:	push   r13
  4090b7:	push   r12
  4090b9:	push   rbx
  4090ba:	sub    rsp,0x88
  4090c1:	mov    r14,rsi
  4090c4:	mov    r12,rdi
  4090c7:	lea    rax,[rip+0x6d12]        # 40fde0 <rb_strcasecmp@plt+0xd8c0>
  4090ce:	mov    eax,DWORD PTR [rax+0x18]
  4090d1:	mov    rcx,QWORD PTR [rsi+0x1d0]
  4090d8:	shl    rax,0x5
  4090dc:	mov    r15,QWORD PTR [rcx+rax*1+0x10]
  4090e1:	mov    rsi,rsp
  4090e4:	mov    edx,0x80
  4090e9:	call   402220 <rb_read@plt>
  4090ee:	test   rax,rax
  4090f1:	js     40913c <rb_strcasecmp@plt+0x6c1c>
  4090f3:	je     4091be <rb_strcasecmp@plt+0x6c9e>
  4090f9:	mov    rbp,QWORD PTR [rip+0xb008]        # 414108 <rb_strcasecmp@plt+0x11be8>
  409100:	test   rbp,rbp
  409103:	je     4091be <rb_strcasecmp@plt+0x6c9e>
  409109:	mov    r13,rsp
  40910c:	nop    DWORD PTR [rax+0x0]
  409110:	mov    rbx,QWORD PTR [rbp+0x0]
  409114:	mov    rdi,rbx
  409117:	call   402200 <strlen@plt>
  40911c:	mov    rdi,rbx
  40911f:	mov    rsi,r13
  409122:	mov    rdx,rax
  409125:	call   402170 <strncmp@plt>
  40912a:	test   eax,eax
  40912c:	je     409165 <rb_strcasecmp@plt+0x6c45>
  40912e:	mov    rbp,QWORD PTR [rbp+0x10]
  409132:	test   rbp,rbp
  409135:	jne    409110 <rb_strcasecmp@plt+0x6bf0>
  409137:	jmp    4091be <rb_strcasecmp@plt+0x6c9e>
  40913c:	call   402390 <__errno_location@plt>
  409141:	mov    edi,DWORD PTR [rax]
  409143:	call   402060 <rb_ignore_errno@plt>
  409148:	test   eax,eax
  40914a:	je     4091be <rb_strcasecmp@plt+0x6c9e>
  40914c:	lea    rdx,[rip+0xffffffffffffff5d]        # 4090b0 <rb_strcasecmp@plt+0x6b90>
  409153:	mov    esi,0x1
  409158:	mov    rdi,r12
  40915b:	mov    rcx,r14
  40915e:	call   4020b0 <rb_setselect@plt>
  409163:	jmp    4091c6 <rb_strcasecmp@plt+0x6ca6>
  409165:	mov    rbp,QWORD PTR [r15]
  409168:	test   rbp,rbp
  40916b:	je     409198 <rb_strcasecmp@plt+0x6c78>
  40916d:	nop    DWORD PTR [rax]
  409170:	mov    rbx,QWORD PTR [rbp+0x0]
  409174:	mov    rbp,QWORD PTR [rbp+0x10]
  409178:	mov    rdi,QWORD PTR [rbx+0x8]
  40917c:	call   4022e0 <rb_close@plt>
  409181:	test   rbx,rbx
  409184:	je     40918e <rb_strcasecmp@plt+0x6c6e>
  409186:	mov    rdi,rbx
  409189:	call   4021f0 <free@plt>
  40918e:	test   rbp,rbp
  409191:	jne    409170 <rb_strcasecmp@plt+0x6c50>
  409193:	test   r15,r15
  409196:	je     4091a0 <rb_strcasecmp@plt+0x6c80>
  409198:	mov    rdi,r15
  40919b:	call   4021f0 <free@plt>
  4091a0:	lea    rax,[rip+0x6c39]        # 40fde0 <rb_strcasecmp@plt+0xd8c0>
  4091a7:	mov    esi,DWORD PTR [rax+0x18]
  4091aa:	lea    rcx,[rip+0x1c77]        # 40ae28 <rb_strcasecmp@plt+0x8908>
  4091b1:	mov    rdx,rsp
  4091b4:	xor    eax,eax
  4091b6:	mov    rdi,r14
  4091b9:	call   403860 <rb_strcasecmp@plt+0x1340>
  4091be:	mov    rdi,r12
  4091c1:	call   4022e0 <rb_close@plt>
  4091c6:	add    rsp,0x88
  4091cd:	pop    rbx
  4091ce:	pop    r12
  4091d0:	pop    r13
  4091d2:	pop    r14
  4091d4:	pop    r15
  4091d6:	pop    rbp
  4091d7:	ret    
  4091d8:	nop    DWORD PTR [rax+rax*1+0x0]
  4091e0:	push   r14
  4091e2:	push   rbx
  4091e3:	sub    rsp,0x18
  4091e7:	mov    rbx,rdi
  4091ea:	mov    WORD PTR [rsp+0xe],0x104
  4091f1:	mov    rax,QWORD PTR [rdi+0x18]
  4091f5:	movzx  ecx,WORD PTR [rax+0x3a]
  4091f9:	mov    WORD PTR [rsp+0x10],cx
  4091fe:	mov    eax,DWORD PTR [rax+0x3c]
  409201:	mov    DWORD PTR [rsp+0x12],eax
  409205:	mov    BYTE PTR [rsp+0x16],0x0
  40920a:	mov    rdi,QWORD PTR [rdi+0x8]
  40920e:	lea    rsi,[rsp+0xe]
  409213:	mov    edx,0x9
  409218:	call   4021a0 <rb_write@plt>
  40921d:	test   rax,rax
  409220:	js     409240 <rb_strcasecmp@plt+0x6d20>
  409222:	mov    r14,QWORD PTR [rbx+0x8]
  409226:	mov    rbx,QWORD PTR [rbx+0x10]
  40922a:	mov    rdi,rbx
  40922d:	call   402200 <strlen@plt>
  409232:	lea    edx,[rax+0x1]
  409235:	mov    rdi,r14
  409238:	mov    rsi,rbx
  40923b:	call   4021a0 <rb_write@plt>
  409240:	add    rsp,0x18
  409244:	pop    rbx
  409245:	pop    r14
  409247:	ret    
  409248:	nop    DWORD PTR [rax+rax*1+0x0]
  409250:	push   r14
  409252:	push   rbx
  409253:	sub    rsp,0x28
  409257:	mov    rbx,rdi
  40925a:	mov    rax,QWORD PTR [rdi]
  40925d:	mov    WORD PTR [rsp+0x4],0x1
  409264:	mov    DWORD PTR [rsp],0x5000105
  40926b:	movzx  eax,WORD PTR [rax+0xf8]
  409272:	cmp    eax,0xa
  409275:	je     40929b <rb_strcasecmp@plt+0x6d7b>
  409277:	movzx  eax,ax
  40927a:	cmp    eax,0x2
  40927d:	jne    4092f0 <rb_strcasecmp@plt+0x6dd0>
  40927f:	mov    BYTE PTR [rsp+0x6],0x1
  409284:	mov    rax,QWORD PTR [rbx+0x18]
  409288:	mov    ecx,DWORD PTR [rax+0x3c]
  40928b:	mov    DWORD PTR [rsp+0x7],ecx
  40928f:	mov    edx,0xfffffff3
  409294:	mov    ecx,0xb
  409299:	jmp    4092b9 <rb_strcasecmp@plt+0x6d99>
  40929b:	mov    BYTE PTR [rsp+0x6],0x4
  4092a0:	mov    rax,QWORD PTR [rbx+0x18]
  4092a4:	vmovups xmm0,XMMWORD PTR [rax+0x40]
  4092a9:	vmovups XMMWORD PTR [rsp+0x7],xmm0
  4092af:	mov    edx,0xffffffe7
  4092b4:	mov    ecx,0x17
  4092b9:	movzx  eax,WORD PTR [rax+0x3a]
  4092bd:	mov    WORD PTR [rsp+rcx*1],ax
  4092c1:	mov    rdi,QWORD PTR [rbx+0x8]
  4092c5:	mov    rsi,rsp
  4092c8:	call   4021a0 <rb_write@plt>
  4092cd:	test   rax,rax
  4092d0:	jle    4092f0 <rb_strcasecmp@plt+0x6dd0>
  4092d2:	mov    r14,QWORD PTR [rbx+0x8]
  4092d6:	mov    rbx,QWORD PTR [rbx+0x10]
  4092da:	mov    rdi,rbx
  4092dd:	call   402200 <strlen@plt>
  4092e2:	lea    edx,[rax+0x1]
  4092e5:	mov    rdi,r14
  4092e8:	mov    rsi,rbx
  4092eb:	call   4021a0 <rb_write@plt>
  4092f0:	add    rsp,0x28
  4092f4:	pop    rbx
  4092f5:	pop    r14
  4092f7:	ret    
  4092f8:	nop    DWORD PTR [rax+rax*1+0x0]
  409300:	push   r15
  409302:	push   r14
  409304:	push   rbx
  409305:	sub    rsp,0x80
  40930c:	mov    r15,rdi
  40930f:	mov    rcx,QWORD PTR [rdi+0x18]
  409313:	movzx  r8d,WORD PTR [rcx+0x36]
  409318:	lea    rdx,[rip+0x1c19]        # 40af38 <rb_strcasecmp@plt+0x8a18>
  40931f:	mov    r14,rsp
  409322:	mov    esi,0x80
  409327:	xor    eax,eax
  409329:	mov    rdi,r14
  40932c:	call   402080 <snprintf@plt>
  409331:	mov    rbx,QWORD PTR [r15+0x8]
  409335:	mov    rdi,r14
  409338:	call   402200 <strlen@plt>
  40933d:	mov    rdi,rbx
  409340:	mov    rsi,r14
  409343:	mov    edx,eax
  409345:	call   4021a0 <rb_write@plt>
  40934a:	test   rax,rax
  40934d:	jle    409387 <rb_strcasecmp@plt+0x6e67>
  40934f:	mov    r14,QWORD PTR [r15+0x8]
  409353:	mov    rbx,QWORD PTR [r15+0x10]
  409357:	mov    rdi,rbx
  40935a:	call   402200 <strlen@plt>
  40935f:	lea    edx,[rax+0x1]
  409362:	mov    rdi,r14
  409365:	mov    rsi,rbx
  409368:	call   4021a0 <rb_write@plt>
  40936d:	test   rax,rax
  409370:	jle    409387 <rb_strcasecmp@plt+0x6e67>
  409372:	mov    rdi,QWORD PTR [r15+0x8]
  409376:	lea    rsi,[rip+0x1bd4]        # 40af51 <rb_strcasecmp@plt+0x8a31>
  40937d:	mov    edx,0x2
  409382:	call   4021a0 <rb_write@plt>
  409387:	add    rsp,0x80
  40938e:	pop    rbx
  40938f:	pop    r14
  409391:	pop    r15
  409393:	ret    
  409394:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40939e:	xchg   ax,ax
  4093a0:	push   rbp
  4093a1:	push   r15
  4093a3:	push   r14
  4093a5:	push   r13
  4093a7:	push   r12
  4093a9:	push   rbx
  4093aa:	sub    rsp,0x118
  4093b1:	mov    r12,rdi
  4093b4:	lea    rax,[rip+0x6a25]        # 40fde0 <rb_strcasecmp@plt+0xd8c0>
  4093bb:	mov    ebx,DWORD PTR [rax+0x18]
  4093be:	mov    rax,QWORD PTR [rdi+0x1d0]
  4093c5:	shl    rbx,0x5
  4093c9:	mov    r14,QWORD PTR [rax+rbx*1+0x10]
  4093ce:	movsxd rbp,DWORD PTR [rip+0x6a83]        # 40fe58 <rb_strcasecmp@plt+0xd938>
  4093d5:	call   402280 <rb_current_time@plt>
  4093da:	add    rax,rbp
  4093dd:	mov    rcx,QWORD PTR [r12+0x1d0]
  4093e5:	mov    QWORD PTR [rcx+rbx*1+0x8],rax
  4093ea:	mov    BYTE PTR [r14+0x18],0x1
  4093ef:	mov    rbp,QWORD PTR [rip+0xad12]        # 414108 <rb_strcasecmp@plt+0x11be8>
  4093f6:	test   rbp,rbp
  4093f9:	je     409652 <rb_strcasecmp@plt+0x7132>
  4093ff:	mov    r14,QWORD PTR [rbp+0x0]
  409403:	lea    rax,[rip+0x69d6]        # 40fde0 <rb_strcasecmp@plt+0xd8c0>
  40940a:	mov    eax,DWORD PTR [rax+0x18]
  40940d:	shl    rax,0x5
  409411:	mov    rbx,QWORD PTR [rcx+rax*1+0x10]
  409416:	mov    edi,0x1
  40941b:	mov    esi,0x38
  409420:	call   402440 <calloc@plt>
  409425:	test   rax,rax
  409428:	je     409676 <rb_strcasecmp@plt+0x7156>
  40942e:	mov    r15,rax
  409431:	lea    r13,[r12+0xf8]
  409439:	mov    QWORD PTR [rsp],r12
  40943d:	nop    DWORD PTR [rax]
  409440:	mov    DWORD PTR [rsp+0xc],0x1
  409448:	movzx  edi,WORD PTR [r13+0x0]
  40944d:	lea    rax,[rip+0xab2c]        # 413f80 <rb_strcasecmp@plt+0x11a60>
  409454:	cmp    edi,0xa
  409457:	jne    40946b <rb_strcasecmp@plt+0x6f4b>
  409459:	cmp    DWORD PTR [r14+0x10],0x1
  40945e:	lea    rax,[rip+0xabdb]        # 414040 <rb_strcasecmp@plt+0x11b20>
  409465:	je     409580 <rb_strcasecmp@plt+0x7060>
  40946b:	cmp    QWORD PTR [rax+0xb8],0x0
  409473:	je     409580 <rb_strcasecmp@plt+0x7060>
  409479:	vmovups ymm0,YMMWORD PTR [r13+0x0]
  40947f:	vmovups ymm1,YMMWORD PTR [r13+0x20]
  409485:	vmovups ymm2,YMMWORD PTR [r13+0x40]
  40948b:	vmovups ymm3,YMMWORD PTR [r13+0x60]
  409491:	vmovups YMMWORD PTR [rsp+0xf0],ymm3
  40949a:	vmovups YMMWORD PTR [rsp+0xd0],ymm2
  4094a3:	vmovups YMMWORD PTR [rsp+0xb0],ymm1
  4094ac:	vmovups YMMWORD PTR [rsp+0x90],ymm0
  4094b5:	vmovups ymm0,YMMWORD PTR [rax+0x38]
  4094ba:	vmovups ymm1,YMMWORD PTR [rax+0x58]
  4094bf:	vmovups ymm2,YMMWORD PTR [rax+0x78]
  4094c4:	vmovups YMMWORD PTR [rsp+0x10],ymm0
  4094ca:	vmovups YMMWORD PTR [rsp+0x30],ymm1
  4094d0:	vmovups YMMWORD PTR [rsp+0x50],ymm2
  4094d6:	vmovups ymm0,YMMWORD PTR [rax+0x98]
  4094de:	vmovups YMMWORD PTR [rsp+0x70],ymm0
  4094e4:	mov    QWORD PTR [r15],r12
  4094e7:	mov    QWORD PTR [r15+0x10],r14
  4094eb:	mov    QWORD PTR [r15+0x18],rax
  4094ef:	mov    esi,0x1
  4094f4:	xor    edx,edx
  4094f6:	mov    rcx,r14
  4094f9:	vzeroupper 
  4094fc:	call   402110 <rb_socket@plt>
  409501:	mov    QWORD PTR [r15+0x8],rax
  409505:	test   rax,rax
  409508:	je     40958a <rb_strcasecmp@plt+0x706a>
  40950e:	mov    r12,rax
  409511:	mov    rdi,rax
  409514:	call   4020d0 <rb_get_fd@plt>
  409519:	mov    esi,0x6
  40951e:	mov    edx,0x1
  409523:	mov    r8d,0x4
  409529:	mov    edi,eax
  40952b:	lea    rcx,[rsp+0xc]
  409530:	call   4021b0 <setsockopt@plt>
  409535:	mov    WORD PTR [rsp+0x12],0x0
  40953c:	movzx  eax,WORD PTR [r14+0x14]
  409541:	movbe  WORD PTR [rsp+0x92],ax
  40954b:	test   rbx,rbx
  40954e:	je     40967b <rb_strcasecmp@plt+0x715b>
  409554:	lea    rax,[r15+0x20]
  409558:	mov    QWORD PTR [r15+0x20],r15
  40955c:	mov    QWORD PTR [r15+0x28],0x0
  409564:	mov    rcx,QWORD PTR [rbx]
  409567:	mov    QWORD PTR [r15+0x30],rcx
  40956b:	test   rcx,rcx
  40956e:	je     4095b9 <rb_strcasecmp@plt+0x7099>
  409570:	add    rcx,0x8
  409574:	mov    QWORD PTR [rcx],rax
  409577:	jmp    4095c4 <rb_strcasecmp@plt+0x70a4>
  409579:	nop    DWORD PTR [rax+0x0]
  409580:	mov    rdi,r15
  409583:	call   4021f0 <free@plt>
  409588:	jmp    409604 <rb_strcasecmp@plt+0x70e4>
  40958a:	call   402390 <__errno_location@plt>
  40958f:	mov    edi,DWORD PTR [rax]
  409591:	call   4022a0 <strerror@plt>
  409596:	mov    rcx,rax
  409599:	mov    edi,0x57
  40959e:	xor    eax,eax
  4095a0:	lea    rsi,[rip+0x1a70]        # 40b017 <rb_strcasecmp@plt+0x8af7>
  4095a7:	mov    rdx,r14
  4095aa:	call   403150 <rb_strcasecmp@plt+0xc30>
  4095af:	mov    rdi,r15
  4095b2:	call   4021f0 <free@plt>
  4095b7:	jmp    409600 <rb_strcasecmp@plt+0x70e0>
  4095b9:	cmp    QWORD PTR [rbx+0x8],0x0
  4095be:	je     409649 <rb_strcasecmp@plt+0x7129>
  4095c4:	mov    QWORD PTR [rbx],rax
  4095c7:	add    QWORD PTR [rbx+0x10],0x1
  4095cc:	cmp    BYTE PTR [r14+0x16],0x0
  4095d1:	mov    r9d,DWORD PTR [rip+0x6880]        # 40fe58 <rb_strcasecmp@plt+0xd938>
  4095d8:	mov    rdi,r12
  4095db:	lea    rsi,[rsp+0x90]
  4095e3:	lea    rdx,[rsp+0x10]
  4095e8:	lea    rcx,[rip+0xb1]        # 4096a0 <rb_strcasecmp@plt+0x7180>
  4095ef:	mov    r8,r15
  4095f2:	je     4095fb <rb_strcasecmp@plt+0x70db>
  4095f4:	call   402070 <rb_connect_tcp_ssl@plt>
  4095f9:	jmp    409600 <rb_strcasecmp@plt+0x70e0>
  4095fb:	call   402090 <rb_connect_tcp@plt>
  409600:	mov    r12,QWORD PTR [rsp]
  409604:	mov    rbp,QWORD PTR [rbp+0x10]
  409608:	test   rbp,rbp
  40960b:	je     409652 <rb_strcasecmp@plt+0x7132>
  40960d:	mov    rax,QWORD PTR [r12+0x1d0]
  409615:	mov    r14,QWORD PTR [rbp+0x0]
  409619:	lea    rcx,[rip+0x67c0]        # 40fde0 <rb_strcasecmp@plt+0xd8c0>
  409620:	mov    ecx,DWORD PTR [rcx+0x18]
  409623:	shl    rcx,0x5
  409627:	mov    rbx,QWORD PTR [rax+rcx*1+0x10]
  40962c:	mov    edi,0x1
  409631:	mov    esi,0x38
  409636:	call   402440 <calloc@plt>
  40963b:	mov    r15,rax
  40963e:	test   rax,rax
  409641:	jne    409440 <rb_strcasecmp@plt+0x6f20>
  409647:	jmp    409676 <rb_strcasecmp@plt+0x7156>
  409649:	lea    rcx,[rbx+0x8]
  40964d:	jmp    409574 <rb_strcasecmp@plt+0x7054>
  409652:	mov    edi,DWORD PTR [r12]
  409656:	lea    rsi,[rip+0x1999]        # 40aff6 <rb_strcasecmp@plt+0x8ad6>
  40965d:	xor    eax,eax
  40965f:	call   403070 <rb_strcasecmp@plt+0xb50>
  409664:	add    rsp,0x118
  40966b:	pop    rbx
  40966c:	pop    r12
  40966e:	pop    r13
  409670:	pop    r14
  409672:	pop    r15
  409674:	pop    rbp
  409675:	ret    
  409676:	call   402380 <rb_outofmemory@plt>
  40967b:	lea    rdi,[rip+0x18d2]        # 40af54 <rb_strcasecmp@plt+0x8a34>
  409682:	lea    rsi,[rip+0xe7e]        # 40a507 <rb_strcasecmp@plt+0x7fe7>
  409689:	lea    rcx,[rip+0xed6]        # 40a566 <rb_strcasecmp@plt+0x8046>
  409690:	mov    edx,0x91
  409695:	call   4020f0 <__assert_fail@plt>
  40969a:	nop    WORD PTR [rax+rax*1+0x0]
  4096a0:	push   r14
  4096a2:	push   rbx
  4096a3:	push   rax
  4096a4:	mov    rbx,rdx
  4096a7:	mov    rcx,QWORD PTR [rdx]
  4096aa:	lea    rax,[rip+0x672f]        # 40fde0 <rb_strcasecmp@plt+0xd8c0>
  4096b1:	mov    eax,DWORD PTR [rax+0x18]
  4096b4:	mov    rdx,QWORD PTR [rcx+0x1d0]
  4096bb:	shl    rax,0x5
  4096bf:	mov    r14,QWORD PTR [rdx+rax*1+0x10]
  4096c4:	test   esi,esi
  4096c6:	jne    40970e <rb_strcasecmp@plt+0x71ee>
  4096c8:	mov    al,BYTE PTR [rip+0xaa32]        # 414100 <rb_strcasecmp@plt+0x11be0>
  4096ce:	test   al,al
  4096d0:	je     40970e <rb_strcasecmp@plt+0x71ee>
  4096d2:	mov    rax,QWORD PTR [rbx+0x10]
  4096d6:	movzx  ecx,WORD PTR [rcx+0xf8]
  4096dd:	cmp    ecx,0xa
  4096e0:	je     4096f6 <rb_strcasecmp@plt+0x71d6>
  4096e2:	movzx  ecx,cx
  4096e5:	cmp    ecx,0x2
  4096e8:	jne    40970e <rb_strcasecmp@plt+0x71ee>
  4096ea:	cmp    QWORD PTR [rip+0xa946],0x0        # 414038 <rb_strcasecmp@plt+0x11b18>
  4096f2:	jne    409708 <rb_strcasecmp@plt+0x71e8>
  4096f4:	jmp    40970e <rb_strcasecmp@plt+0x71ee>
  4096f6:	cmp    BYTE PTR [rax+0x17],0x0
  4096fa:	je     40970e <rb_strcasecmp@plt+0x71ee>
  4096fc:	mov    rcx,QWORD PTR [rip+0xa9f5]        # 4140f8 <rb_strcasecmp@plt+0x11bd8>
  409703:	test   rcx,rcx
  409706:	je     40970e <rb_strcasecmp@plt+0x71ee>
  409708:	mov    rdi,rbx
  40970b:	call   QWORD PTR [rax+0x18]
  40970e:	mov    rdi,QWORD PTR [rbx+0x8]
  409712:	call   4022e0 <rb_close@plt>
  409717:	test   r14,r14
  40971a:	je     409764 <rb_strcasecmp@plt+0x7244>
  40971c:	mov    rdx,QWORD PTR [rbx+0x28]
  409720:	mov    rcx,QWORD PTR [rbx+0x30]
  409724:	lea    rax,[rbx+0x28]
  409728:	test   rcx,rcx
  40972b:	je     409736 <rb_strcasecmp@plt+0x7216>
  40972d:	mov    QWORD PTR [rcx+0x8],rdx
  409731:	mov    rdx,QWORD PTR [rax]
  409734:	jmp    40973a <rb_strcasecmp@plt+0x721a>
  409736:	mov    QWORD PTR [r14+0x8],rdx
  40973a:	test   rdx,rdx
  40973d:	lea    rdx,[rdx+0x10]
  409741:	cmove  rdx,r14
  409745:	mov    QWORD PTR [rdx],rcx
  409748:	vxorps xmm0,xmm0,xmm0
  40974c:	vmovups XMMWORD PTR [rax],xmm0
  409750:	add    QWORD PTR [r14+0x10],0xffffffffffffffff
  409755:	mov    rdi,rbx
  409758:	add    rsp,0x8
  40975c:	pop    rbx
  40975d:	pop    r14
  40975f:	jmp    4021f0 <free@plt>
  409764:	lea    rdi,[rip+0x17e9]        # 40af54 <rb_strcasecmp@plt+0x8a34>
  40976b:	lea    rsi,[rip+0xd95]        # 40a507 <rb_strcasecmp@plt+0x7fe7>
  409772:	lea    rcx,[rip+0xdaa]        # 40a523 <rb_strcasecmp@plt+0x8003>
  409779:	mov    edx,0xec
  40977e:	call   4020f0 <__assert_fail@plt>
  409783:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40978d:	nop    DWORD PTR [rax]
  409790:	endbr64 
  409794:	push   r15
  409796:	lea    r15,[rip+0x45c3]        # 40dd60 <rb_strcasecmp@plt+0xb840>
  40979d:	push   r14
  40979f:	mov    r14,rdx
  4097a2:	push   r13
  4097a4:	mov    r13,rsi
  4097a7:	push   r12
  4097a9:	mov    r12d,edi
  4097ac:	push   rbp
  4097ad:	lea    rbp,[rip+0x45b4]        # 40dd68 <rb_strcasecmp@plt+0xb848>
  4097b4:	push   rbx
  4097b5:	sub    rbp,r15
  4097b8:	sub    rsp,0x8
  4097bc:	call   402000 <rb_helper_loop@plt-0x30>
  4097c1:	sar    rbp,0x3
  4097c5:	je     4097e6 <rb_strcasecmp@plt+0x72c6>
  4097c7:	xor    ebx,ebx
  4097c9:	nop    DWORD PTR [rax+0x0]
  4097d0:	mov    rdx,r14
  4097d3:	mov    rsi,r13
  4097d6:	mov    edi,r12d
  4097d9:	call   QWORD PTR [r15+rbx*8]
  4097dd:	add    rbx,0x1
  4097e1:	cmp    rbp,rbx
  4097e4:	jne    4097d0 <rb_strcasecmp@plt+0x72b0>
  4097e6:	add    rsp,0x8
  4097ea:	pop    rbx
  4097eb:	pop    rbp
  4097ec:	pop    r12
  4097ee:	pop    r13
  4097f0:	pop    r14
  4097f2:	pop    r15
  4097f4:	ret    
  4097f5:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  409800:	endbr64 
  409804:	ret    

Disassembly of section .fini:

0000000000409808 <.fini>:
  409808:	endbr64 
  40980c:	sub    rsp,0x8
  409810:	add    rsp,0x8
  409814:	ret    
