
../repos/prog2/0.11.2:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <strcpy@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <strcpy@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x2fe4]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <strcpy@plt>:
  401030:	jmp    QWORD PTR [rip+0x2fe2]        # 404018 <strcpy@GLIBC_2.2.5>
  401036:	push   0x0
  40103b:	jmp    401020 <strcpy@plt-0x10>

0000000000401040 <puts@plt>:
  401040:	jmp    QWORD PTR [rip+0x2fda]        # 404020 <puts@GLIBC_2.2.5>
  401046:	push   0x1
  40104b:	jmp    401020 <strcpy@plt-0x10>

0000000000401050 <strlen@plt>:
  401050:	jmp    QWORD PTR [rip+0x2fd2]        # 404028 <strlen@GLIBC_2.2.5>
  401056:	push   0x2
  40105b:	jmp    401020 <strcpy@plt-0x10>

0000000000401060 <strcmp@plt>:
  401060:	jmp    QWORD PTR [rip+0x2fca]        # 404030 <strcmp@GLIBC_2.2.5>
  401066:	push   0x3
  40106b:	jmp    401020 <strcpy@plt-0x10>

0000000000401070 <memcpy@plt>:
  401070:	jmp    QWORD PTR [rip+0x2fc2]        # 404038 <memcpy@GLIBC_2.14>
  401076:	push   0x4
  40107b:	jmp    401020 <strcpy@plt-0x10>

0000000000401080 <__isoc99_scanf@plt>:
  401080:	jmp    QWORD PTR [rip+0x2fba]        # 404040 <__isoc99_scanf@GLIBC_2.7>
  401086:	push   0x5
  40108b:	jmp    401020 <strcpy@plt-0x10>

0000000000401090 <strcat@plt>:
  401090:	jmp    QWORD PTR [rip+0x2fb2]        # 404048 <strcat@GLIBC_2.2.5>
  401096:	push   0x6
  40109b:	jmp    401020 <strcpy@plt-0x10>

Disassembly of section .text:

00000000004010a0 <_start@@Base>:
  4010a0:	endbr64 
  4010a4:	xor    ebp,ebp
  4010a6:	mov    r9,rdx
  4010a9:	pop    rsi
  4010aa:	mov    rdx,rsp
  4010ad:	and    rsp,0xfffffffffffffff0
  4010b1:	push   rax
  4010b2:	push   rsp
  4010b3:	mov    r8,0x401480
  4010ba:	mov    rcx,0x401410
  4010c1:	mov    rdi,0x401190
  4010c8:	call   QWORD PTR [rip+0x2f22]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  4010ce:	hlt    
  4010cf:	nop
  4010d0:	endbr64 
  4010d4:	ret    
  4010d5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4010df:	nop
  4010e0:	mov    eax,0x404060
  4010e5:	cmp    rax,0x404060
  4010eb:	je     401100 <_start@@Base+0x60>
  4010ed:	mov    eax,0x0
  4010f2:	test   rax,rax
  4010f5:	je     401100 <_start@@Base+0x60>
  4010f7:	mov    edi,0x404060
  4010fc:	jmp    rax
  4010fe:	xchg   ax,ax
  401100:	ret    
  401101:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40110c:	nop    DWORD PTR [rax+0x0]
  401110:	mov    esi,0x404060
  401115:	sub    rsi,0x404060
  40111c:	mov    rax,rsi
  40111f:	shr    rsi,0x3f
  401123:	sar    rax,0x3
  401127:	add    rsi,rax
  40112a:	sar    rsi,1
  40112d:	je     401140 <_start@@Base+0xa0>
  40112f:	mov    eax,0x0
  401134:	test   rax,rax
  401137:	je     401140 <_start@@Base+0xa0>
  401139:	mov    edi,0x404060
  40113e:	jmp    rax
  401140:	ret    
  401141:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40114c:	nop    DWORD PTR [rax+0x0]
  401150:	endbr64 
  401154:	cmp    BYTE PTR [rip+0x2f05],0x0        # 404060 <__bss_start@@Base>
  40115b:	jne    401170 <_start@@Base+0xd0>
  40115d:	push   rbp
  40115e:	mov    rbp,rsp
  401161:	call   4010e0 <_start@@Base+0x40>
  401166:	mov    BYTE PTR [rip+0x2ef3],0x1        # 404060 <__bss_start@@Base>
  40116d:	pop    rbp
  40116e:	ret    
  40116f:	nop
  401170:	ret    
  401171:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40117c:	nop    DWORD PTR [rax+0x0]
  401180:	endbr64 
  401184:	jmp    401110 <_start@@Base+0x70>
  401186:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401190 <main@@Base>:
  401190:	push   rbp
  401191:	push   r15
  401193:	push   r14
  401195:	push   r13
  401197:	push   r12
  401199:	push   rbx
  40119a:	sub    rsp,0x78
  40119e:	vxorps xmm0,xmm0,xmm0
  4011a2:	vmovups XMMWORD PTR [rsp+0x1a],xmm0
  4011a8:	vmovaps XMMWORD PTR [rsp+0x10],xmm0
  4011ae:	lea    rdi,[rip+0xe4f]        # 402004 <_IO_stdin_used@@Base+0x4>
  4011b5:	lea    rsi,[rsp+0x6]
  4011ba:	xor    eax,eax
  4011bc:	call   401080 <__isoc99_scanf@plt>
  4011c1:	cmp    BYTE PTR [rsp+0x6],0x2e
  4011c6:	je     4012f0 <main@@Base+0x160>
  4011cc:	lea    rbx,[rsp+0x10]
  4011d1:	lea    r14,[rsp+0x6]
  4011d6:	lea    r15,[rsp+0x30]
  4011db:	lea    r12,[rsp+0x50]
  4011e0:	xor    eax,eax
  4011e2:	lea    rdi,[rip+0xe1e]        # 402007 <_IO_stdin_used@@Base+0x7>
  4011e9:	mov    rsi,rsp
  4011ec:	call   401080 <__isoc99_scanf@plt>
  4011f1:	mov    ebp,DWORD PTR [rsp]
  4011f4:	mov    BYTE PTR [rsp+0x10],0x0
  4011f9:	test   ebp,ebp
  4011fb:	jle    401210 <main@@Base+0x80>
  4011fd:	nop    DWORD PTR [rax]
  401200:	mov    rdi,rbx
  401203:	mov    rsi,r14
  401206:	call   401090 <strcat@plt>
  40120b:	add    ebp,0xffffffff
  40120e:	jne    401200 <main@@Base+0x70>
  401210:	mov    rdi,rbx
  401213:	call   401050 <strlen@plt>
  401218:	mov    al,BYTE PTR [rsp+rax*1+0xf]
  40121c:	mov    BYTE PTR [rsp+0x30],al
  401220:	mov    rdi,rbx
  401223:	call   401050 <strlen@plt>
  401228:	mov    rbp,rax
  40122b:	lea    rax,[rsp+0x31]
  401230:	cmp    rbp,0x2
  401234:	jb     401253 <main@@Base+0xc3>
  401236:	mov    rdx,rbp
  401239:	add    rdx,0xffffffffffffffff
  40123d:	lea    rdi,[rsp+0x31]
  401242:	mov    rsi,rbx
  401245:	call   401070 <memcpy@plt>
  40124a:	mov    eax,ebp
  40124c:	add    rax,rsp
  40124f:	add    rax,0x30
  401253:	mov    BYTE PTR [rax],0x0
  401256:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401260:	mov    rdi,rbx
  401263:	mov    rsi,r15
  401266:	call   401060 <strcmp@plt>
  40126b:	mov    r14d,eax
  40126e:	mov    rdi,rbx
  401271:	call   401040 <puts@plt>
  401276:	mov    rdi,r12
  401279:	mov    rsi,rbx
  40127c:	call   401030 <strcpy@plt>
  401281:	movzx  r13d,BYTE PTR [rsp+0x50]
  401287:	mov    rdi,r12
  40128a:	call   401050 <strlen@plt>
  40128f:	mov    BYTE PTR [rsp+rax*1+0xf],r13b
  401294:	cmp    rax,0x2
  401298:	jb     4012c0 <main@@Base+0x130>
  40129a:	mov    rbp,rax
  40129d:	mov    rdx,rax
  4012a0:	add    rdx,0xffffffffffffffff
  4012a4:	mov    rdi,rbx
  4012a7:	lea    rsi,[rsp+0x51]
  4012ac:	call   401070 <memcpy@plt>
  4012b1:	mov    eax,ebp
  4012b3:	jmp    4012c5 <main@@Base+0x135>
  4012b5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4012bf:	nop
  4012c0:	mov    eax,0x1
  4012c5:	mov    BYTE PTR [rsp+rax*1+0x10],0x0
  4012ca:	test   r14d,r14d
  4012cd:	jne    401260 <main@@Base+0xd0>
  4012cf:	xor    eax,eax
  4012d1:	lea    rdi,[rip+0xd2c]        # 402004 <_IO_stdin_used@@Base+0x4>
  4012d8:	lea    r14,[rsp+0x6]
  4012dd:	mov    rsi,r14
  4012e0:	call   401080 <__isoc99_scanf@plt>
  4012e5:	cmp    BYTE PTR [rsp+0x6],0x2e
  4012ea:	jne    4011e0 <main@@Base+0x50>
  4012f0:	xor    eax,eax
  4012f2:	add    rsp,0x78
  4012f6:	pop    rbx
  4012f7:	pop    r12
  4012f9:	pop    r13
  4012fb:	pop    r14
  4012fd:	pop    r15
  4012ff:	pop    rbp
  401300:	ret    
  401301:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40130b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401310 <StringSet@@Base>:
  401310:	push   r15
  401312:	push   r14
  401314:	push   rbx
  401315:	mov    BYTE PTR [rsi],0x0
  401318:	test   edx,edx
  40131a:	jle    401340 <StringSet@@Base+0x30>
  40131c:	mov    ebx,edx
  40131e:	mov    r14,rsi
  401321:	mov    r15,rdi
  401324:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40132e:	xchg   ax,ax
  401330:	mov    rdi,r14
  401333:	mov    rsi,r15
  401336:	call   401090 <strcat@plt>
  40133b:	add    ebx,0xffffffff
  40133e:	jne    401330 <StringSet@@Base+0x20>
  401340:	pop    rbx
  401341:	pop    r14
  401343:	pop    r15
  401345:	ret    
  401346:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401350 <R_ShiftString@@Base>:
  401350:	push   r15
  401352:	push   r14
  401354:	push   rbx
  401355:	mov    r14,rsi
  401358:	mov    r15,rdi
  40135b:	call   401050 <strlen@plt>
  401360:	mov    al,BYTE PTR [r15+rax*1-0x1]
  401365:	mov    BYTE PTR [r14],al
  401368:	mov    rdi,r15
  40136b:	call   401050 <strlen@plt>
  401370:	cmp    rax,0x2
  401374:	jb     40139f <R_ShiftString@@Base+0x4f>
  401376:	mov    ebx,0x1
  40137b:	nop    DWORD PTR [rax+rax*1+0x0]
  401380:	movzx  eax,BYTE PTR [r15+rbx*1-0x1]
  401386:	mov    BYTE PTR [r14+rbx*1],al
  40138a:	add    rbx,0x1
  40138e:	mov    rdi,r15
  401391:	call   401050 <strlen@plt>
  401396:	cmp    rax,rbx
  401399:	ja     401380 <R_ShiftString@@Base+0x30>
  40139b:	mov    eax,ebx
  40139d:	jmp    4013a4 <R_ShiftString@@Base+0x54>
  40139f:	mov    eax,0x1
  4013a4:	mov    BYTE PTR [r14+rax*1],0x0
  4013a9:	pop    rbx
  4013aa:	pop    r14
  4013ac:	pop    r15
  4013ae:	ret    
  4013af:	nop

00000000004013b0 <L_ShiftString@@Base>:
  4013b0:	push   r15
  4013b2:	push   r14
  4013b4:	push   rbx
  4013b5:	mov    r14,rsi
  4013b8:	mov    r15,rdi
  4013bb:	mov    bl,BYTE PTR [rdi]
  4013bd:	call   401050 <strlen@plt>
  4013c2:	mov    BYTE PTR [r14+rax*1-0x1],bl
  4013c7:	mov    rdi,r15
  4013ca:	call   401050 <strlen@plt>
  4013cf:	cmp    rax,0x2
  4013d3:	jb     4013ff <L_ShiftString@@Base+0x4f>
  4013d5:	mov    ebx,0x1
  4013da:	nop    WORD PTR [rax+rax*1+0x0]
  4013e0:	movzx  eax,BYTE PTR [r15+rbx*1]
  4013e5:	mov    BYTE PTR [r14+rbx*1-0x1],al
  4013ea:	add    rbx,0x1
  4013ee:	mov    rdi,r15
  4013f1:	call   401050 <strlen@plt>
  4013f6:	cmp    rax,rbx
  4013f9:	ja     4013e0 <L_ShiftString@@Base+0x30>
  4013fb:	mov    eax,ebx
  4013fd:	jmp    401404 <L_ShiftString@@Base+0x54>
  4013ff:	mov    eax,0x1
  401404:	mov    BYTE PTR [r14+rax*1],0x0
  401409:	pop    rbx
  40140a:	pop    r14
  40140c:	pop    r15
  40140e:	ret    
  40140f:	nop

0000000000401410 <__libc_csu_init@@Base>:
  401410:	endbr64 
  401414:	push   r15
  401416:	lea    r15,[rip+0x29e3]        # 403e00 <_IO_stdin_used@@Base+0x1e00>
  40141d:	push   r14
  40141f:	mov    r14,rdx
  401422:	push   r13
  401424:	mov    r13,rsi
  401427:	push   r12
  401429:	mov    r12d,edi
  40142c:	push   rbp
  40142d:	lea    rbp,[rip+0x29d4]        # 403e08 <_IO_stdin_used@@Base+0x1e08>
  401434:	push   rbx
  401435:	sub    rbp,r15
  401438:	sub    rsp,0x8
  40143c:	call   401000 <strcpy@plt-0x30>
  401441:	sar    rbp,0x3
  401445:	je     401466 <__libc_csu_init@@Base+0x56>
  401447:	xor    ebx,ebx
  401449:	nop    DWORD PTR [rax+0x0]
  401450:	mov    rdx,r14
  401453:	mov    rsi,r13
  401456:	mov    edi,r12d
  401459:	call   QWORD PTR [r15+rbx*8]
  40145d:	add    rbx,0x1
  401461:	cmp    rbp,rbx
  401464:	jne    401450 <__libc_csu_init@@Base+0x40>
  401466:	add    rsp,0x8
  40146a:	pop    rbx
  40146b:	pop    rbp
  40146c:	pop    r12
  40146e:	pop    r13
  401470:	pop    r14
  401472:	pop    r15
  401474:	ret    
  401475:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401480 <__libc_csu_fini@@Base>:
  401480:	endbr64 
  401484:	ret    

Disassembly of section .fini:

0000000000401488 <.fini>:
  401488:	endbr64 
  40148c:	sub    rsp,0x8
  401490:	add    rsp,0x8
  401494:	ret    
