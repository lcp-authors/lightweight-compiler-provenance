
../repos/prog2/MT1E1-1.1:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x3fe9]        # 404ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <free@plt-0x1a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <free@plt-0x10>:
  401020:	push   QWORD PTR [rip+0x3fe2]        # 405008 <_IO_stdin_used@@Base+0x2008>
  401026:	jmp    QWORD PTR [rip+0x3fe4]        # 405010 <_IO_stdin_used@@Base+0x2010>
  40102c:	nop    DWORD PTR [rax+0x0]

0000000000401030 <free@plt>:
  401030:	jmp    QWORD PTR [rip+0x3fe2]        # 405018 <free@GLIBC_2.2.5>
  401036:	push   0x0
  40103b:	jmp    401020 <free@plt-0x10>

0000000000401040 <strcpy@plt>:
  401040:	jmp    QWORD PTR [rip+0x3fda]        # 405020 <strcpy@GLIBC_2.2.5>
  401046:	push   0x1
  40104b:	jmp    401020 <free@plt-0x10>

0000000000401050 <puts@plt>:
  401050:	jmp    QWORD PTR [rip+0x3fd2]        # 405028 <puts@GLIBC_2.2.5>
  401056:	push   0x2
  40105b:	jmp    401020 <free@plt-0x10>

0000000000401060 <fclose@plt>:
  401060:	jmp    QWORD PTR [rip+0x3fca]        # 405030 <fclose@GLIBC_2.2.5>
  401066:	push   0x3
  40106b:	jmp    401020 <free@plt-0x10>

0000000000401070 <strlen@plt>:
  401070:	jmp    QWORD PTR [rip+0x3fc2]        # 405038 <strlen@GLIBC_2.2.5>
  401076:	push   0x4
  40107b:	jmp    401020 <free@plt-0x10>

0000000000401080 <strchr@plt>:
  401080:	jmp    QWORD PTR [rip+0x3fba]        # 405040 <strchr@GLIBC_2.2.5>
  401086:	push   0x5
  40108b:	jmp    401020 <free@plt-0x10>

0000000000401090 <printf@plt>:
  401090:	jmp    QWORD PTR [rip+0x3fb2]        # 405048 <printf@GLIBC_2.2.5>
  401096:	push   0x6
  40109b:	jmp    401020 <free@plt-0x10>

00000000004010a0 <fgets@plt>:
  4010a0:	jmp    QWORD PTR [rip+0x3faa]        # 405050 <fgets@GLIBC_2.2.5>
  4010a6:	push   0x7
  4010ab:	jmp    401020 <free@plt-0x10>

00000000004010b0 <calloc@plt>:
  4010b0:	jmp    QWORD PTR [rip+0x3fa2]        # 405058 <calloc@GLIBC_2.2.5>
  4010b6:	push   0x8
  4010bb:	jmp    401020 <free@plt-0x10>

00000000004010c0 <strcmp@plt>:
  4010c0:	jmp    QWORD PTR [rip+0x3f9a]        # 405060 <strcmp@GLIBC_2.2.5>
  4010c6:	push   0x9
  4010cb:	jmp    401020 <free@plt-0x10>

00000000004010d0 <feof@plt>:
  4010d0:	jmp    QWORD PTR [rip+0x3f92]        # 405068 <feof@GLIBC_2.2.5>
  4010d6:	push   0xa
  4010db:	jmp    401020 <free@plt-0x10>

00000000004010e0 <strtol@plt>:
  4010e0:	jmp    QWORD PTR [rip+0x3f8a]        # 405070 <strtol@GLIBC_2.2.5>
  4010e6:	push   0xb
  4010eb:	jmp    401020 <free@plt-0x10>

00000000004010f0 <malloc@plt>:
  4010f0:	jmp    QWORD PTR [rip+0x3f82]        # 405078 <malloc@GLIBC_2.2.5>
  4010f6:	push   0xc
  4010fb:	jmp    401020 <free@plt-0x10>

0000000000401100 <realloc@plt>:
  401100:	jmp    QWORD PTR [rip+0x3f7a]        # 405080 <realloc@GLIBC_2.2.5>
  401106:	push   0xd
  40110b:	jmp    401020 <free@plt-0x10>

0000000000401110 <fopen@plt>:
  401110:	jmp    QWORD PTR [rip+0x3f72]        # 405088 <fopen@GLIBC_2.2.5>
  401116:	push   0xe
  40111b:	jmp    401020 <free@plt-0x10>

Disassembly of section .text:

0000000000401120 <_start@@Base>:
  401120:	endbr64 
  401124:	xor    ebp,ebp
  401126:	mov    r9,rdx
  401129:	pop    rsi
  40112a:	mov    rdx,rsp
  40112d:	and    rsp,0xfffffffffffffff0
  401131:	push   rax
  401132:	push   rsp
  401133:	mov    r8,0x402040
  40113a:	mov    rcx,0x401fd0
  401141:	mov    rdi,0x401500
  401148:	call   QWORD PTR [rip+0x3ea2]        # 404ff0 <__libc_start_main@GLIBC_2.2.5>
  40114e:	hlt    
  40114f:	nop
  401150:	endbr64 
  401154:	ret    
  401155:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40115f:	nop
  401160:	mov    eax,0x4050a0
  401165:	cmp    rax,0x4050a0
  40116b:	je     401180 <_start@@Base+0x60>
  40116d:	mov    eax,0x0
  401172:	test   rax,rax
  401175:	je     401180 <_start@@Base+0x60>
  401177:	mov    edi,0x4050a0
  40117c:	jmp    rax
  40117e:	xchg   ax,ax
  401180:	ret    
  401181:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40118c:	nop    DWORD PTR [rax+0x0]
  401190:	mov    esi,0x4050a0
  401195:	sub    rsi,0x4050a0
  40119c:	mov    rax,rsi
  40119f:	shr    rsi,0x3f
  4011a3:	sar    rax,0x3
  4011a7:	add    rsi,rax
  4011aa:	sar    rsi,1
  4011ad:	je     4011c0 <_start@@Base+0xa0>
  4011af:	mov    eax,0x0
  4011b4:	test   rax,rax
  4011b7:	je     4011c0 <_start@@Base+0xa0>
  4011b9:	mov    edi,0x4050a0
  4011be:	jmp    rax
  4011c0:	ret    
  4011c1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4011cc:	nop    DWORD PTR [rax+0x0]
  4011d0:	endbr64 
  4011d4:	cmp    BYTE PTR [rip+0x3ec5],0x0        # 4050a0 <__bss_start@@Base>
  4011db:	jne    4011f0 <_start@@Base+0xd0>
  4011dd:	push   rbp
  4011de:	mov    rbp,rsp
  4011e1:	call   401160 <_start@@Base+0x40>
  4011e6:	mov    BYTE PTR [rip+0x3eb3],0x1        # 4050a0 <__bss_start@@Base>
  4011ed:	pop    rbp
  4011ee:	ret    
  4011ef:	nop
  4011f0:	ret    
  4011f1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4011fc:	nop    DWORD PTR [rax+0x0]
  401200:	endbr64 
  401204:	jmp    401190 <_start@@Base+0x70>
  401206:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401210 <retira_duplicados@@Base>:
  401210:	push   rbp
  401211:	push   r15
  401213:	push   r14
  401215:	push   r12
  401217:	push   rbx
  401218:	mov    r15,rdi
  40121b:	call   4017f0 <vetor_tamanho@@Base>
  401220:	cmp    eax,0x2
  401223:	jl     4012a3 <retira_duplicados@@Base+0x93>
  401225:	xor    r12d,r12d
  401228:	jmp    40123f <retira_duplicados@@Base+0x2f>
  40122a:	nop    WORD PTR [rax+rax*1+0x0]
  401230:	mov    rdi,r15
  401233:	call   4017f0 <vetor_tamanho@@Base>
  401238:	dec    eax
  40123a:	cmp    r12d,eax
  40123d:	jge    4012a3 <retira_duplicados@@Base+0x93>
  40123f:	mov    r14d,r12d
  401242:	lea    r12d,[r14+0x1]
  401246:	mov    rdi,r15
  401249:	call   4017f0 <vetor_tamanho@@Base>
  40124e:	cmp    r12d,eax
  401251:	jge    401230 <retira_duplicados@@Base+0x20>
  401253:	mov    ebp,r12d
  401256:	jmp    40126e <retira_duplicados@@Base+0x5e>
  401258:	nop    DWORD PTR [rax+rax*1+0x0]
  401260:	inc    ebp
  401262:	mov    rdi,r15
  401265:	call   4017f0 <vetor_tamanho@@Base>
  40126a:	cmp    ebp,eax
  40126c:	jge    401230 <retira_duplicados@@Base+0x20>
  40126e:	mov    rdi,r15
  401271:	mov    esi,r14d
  401274:	call   401800 <vetor_elemento@@Base>
  401279:	mov    rbx,rax
  40127c:	mov    rdi,r15
  40127f:	mov    esi,ebp
  401281:	call   401800 <vetor_elemento@@Base>
  401286:	mov    rdi,rbx
  401289:	mov    rsi,rax
  40128c:	call   4010c0 <strcmp@plt>
  401291:	test   eax,eax
  401293:	jne    401260 <retira_duplicados@@Base+0x50>
  401295:	mov    rdi,r15
  401298:	mov    esi,ebp
  40129a:	call   401990 <vetor_remove@@Base>
  40129f:	dec    ebp
  4012a1:	jmp    401260 <retira_duplicados@@Base+0x50>
  4012a3:	pop    rbx
  4012a4:	pop    r12
  4012a6:	pop    r14
  4012a8:	pop    r15
  4012aa:	pop    rbp
  4012ab:	ret    
  4012ac:	nop    DWORD PTR [rax+0x0]

00000000004012b0 <interseta@@Base>:
  4012b0:	push   rbp
  4012b1:	push   r15
  4012b3:	push   r14
  4012b5:	push   r13
  4012b7:	push   r12
  4012b9:	push   rbx
  4012ba:	push   rax
  4012bb:	mov    r13,rsi
  4012be:	mov    r14,rdi
  4012c1:	xor    r12d,r12d
  4012c4:	xor    eax,eax
  4012c6:	call   4016e0 <vetor_novo@@Base>
  4012cb:	mov    QWORD PTR [rsp],rax
  4012cf:	mov    rbx,QWORD PTR [r14]
  4012d2:	test   rbx,rbx
  4012d5:	jne    4012de <interseta@@Base+0x2e>
  4012d7:	cmp    DWORD PTR [r14+0x10],0x0
  4012dc:	jle    40134c <interseta@@Base+0x9c>
  4012de:	mov    eax,0x1
  4012e3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4012ed:	nop    DWORD PTR [rax]
  4012f0:	mov    r15d,eax
  4012f3:	mov    rsi,QWORD PTR [rbx]
  4012f6:	mov    rdi,r13
  4012f9:	xor    edx,edx
  4012fb:	call   401d60 <lista_pesquisa@@Base>
  401300:	test   rax,rax
  401303:	je     401336 <interseta@@Base+0x86>
  401305:	mov    rbp,QWORD PTR [rbx]
  401308:	mov    rdi,r13
  40130b:	mov    rsi,rbp
  40130e:	xor    edx,edx
  401310:	call   401d60 <lista_pesquisa@@Base>
  401315:	mov    rsi,QWORD PTR [rax]
  401318:	mov    rdi,rbp
  40131b:	call   4010c0 <strcmp@plt>
  401320:	test   eax,eax
  401322:	jne    401336 <interseta@@Base+0x86>
  401324:	mov    rsi,QWORD PTR [rbx]
  401327:	mov    rdi,QWORD PTR [rsp]
  40132b:	mov    edx,r12d
  40132e:	call   401820 <vetor_insere@@Base>
  401333:	inc    r12d
  401336:	mov    rbx,QWORD PTR [rbx+0x8]
  40133a:	mov    ecx,DWORD PTR [r14+0x10]
  40133e:	lea    eax,[r15+0x1]
  401342:	test   rbx,rbx
  401345:	jne    4012f0 <interseta@@Base+0x40>
  401347:	cmp    r15d,ecx
  40134a:	jl     4012f0 <interseta@@Base+0x40>
  40134c:	mov    rax,QWORD PTR [rsp]
  401350:	add    rsp,0x8
  401354:	pop    rbx
  401355:	pop    r12
  401357:	pop    r13
  401359:	pop    r14
  40135b:	pop    r15
  40135d:	pop    rbp
  40135e:	ret    
  40135f:	nop

0000000000401360 <anteriores@@Base>:
  401360:	push   rbp
  401361:	push   r15
  401363:	push   r14
  401365:	push   rbx
  401366:	push   rax
  401367:	mov    r14d,esi
  40136a:	mov    rbp,rdi
  40136d:	xor    eax,eax
  40136f:	call   4016e0 <vetor_novo@@Base>
  401374:	mov    r15,rax
  401377:	mov    rbx,QWORD PTR [rbp+0x0]
  40137b:	test   rbx,rbx
  40137e:	jne    401399 <anteriores@@Base+0x39>
  401380:	jmp    4013cd <anteriores@@Base+0x6d>
  401382:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40138c:	nop    DWORD PTR [rax+0x0]
  401390:	mov    rbx,QWORD PTR [rbx+0x8]
  401394:	test   rbx,rbx
  401397:	je     4013cd <anteriores@@Base+0x6d>
  401399:	mov    rbp,QWORD PTR [rbx]
  40139c:	mov    rdi,rbp
  40139f:	call   401070 <strlen@plt>
  4013a4:	lea    rdi,[rax+rbp*1]
  4013a8:	add    rdi,0xfffffffffffffffb
  4013ac:	xor    esi,esi
  4013ae:	mov    edx,0xa
  4013b3:	call   4010e0 <strtol@plt>
  4013b8:	cmp    eax,r14d
  4013bb:	jge    401390 <anteriores@@Base+0x30>
  4013bd:	mov    edx,DWORD PTR [r15]
  4013c0:	mov    rdi,r15
  4013c3:	mov    rsi,rbp
  4013c6:	call   401820 <vetor_insere@@Base>
  4013cb:	jmp    401390 <anteriores@@Base+0x30>
  4013cd:	mov    rax,r15
  4013d0:	add    rsp,0x8
  4013d4:	pop    rbx
  4013d5:	pop    r14
  4013d7:	pop    r15
  4013d9:	pop    rbp
  4013da:	ret    
  4013db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004013e0 <lerAtores@@Base>:
  4013e0:	push   r15
  4013e2:	push   r14
  4013e4:	push   rbx
  4013e5:	sub    rsp,0x100
  4013ec:	test   rdi,rdi
  4013ef:	je     401451 <lerAtores@@Base+0x71>
  4013f1:	mov    rbx,rdi
  4013f4:	xor    eax,eax
  4013f6:	call   4016e0 <vetor_novo@@Base>
  4013fb:	mov    r14,rax
  4013fe:	mov    rdi,rbx
  401401:	call   4010d0 <feof@plt>
  401406:	test   eax,eax
  401408:	jne    401454 <lerAtores@@Base+0x74>
  40140a:	mov    r15,rsp
  40140d:	jmp    40142a <lerAtores@@Base+0x4a>
  40140f:	nop
  401410:	mov    edx,DWORD PTR [r14]
  401413:	mov    rdi,r14
  401416:	mov    rsi,r15
  401419:	call   401820 <vetor_insere@@Base>
  40141e:	mov    rdi,rbx
  401421:	call   4010d0 <feof@plt>
  401426:	test   eax,eax
  401428:	jne    401454 <lerAtores@@Base+0x74>
  40142a:	mov    rdi,r15
  40142d:	mov    esi,0xff
  401432:	mov    rdx,rbx
  401435:	call   4010a0 <fgets@plt>
  40143a:	mov    rdi,r15
  40143d:	mov    esi,0xa
  401442:	call   401080 <strchr@plt>
  401447:	test   rax,rax
  40144a:	je     401410 <lerAtores@@Base+0x30>
  40144c:	mov    BYTE PTR [rax],0x0
  40144f:	jmp    401410 <lerAtores@@Base+0x30>
  401451:	xor    r14d,r14d
  401454:	mov    rax,r14
  401457:	add    rsp,0x100
  40145e:	pop    rbx
  40145f:	pop    r14
  401461:	pop    r15
  401463:	ret    
  401464:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40146e:	xchg   ax,ax

0000000000401470 <lerFilmes@@Base>:
  401470:	push   r15
  401472:	push   r14
  401474:	push   rbx
  401475:	sub    rsp,0x100
  40147c:	test   rdi,rdi
  40147f:	je     4014e0 <lerFilmes@@Base+0x70>
  401481:	mov    rbx,rdi
  401484:	xor    eax,eax
  401486:	call   401b70 <lista_nova@@Base>
  40148b:	mov    r14,rax
  40148e:	mov    rdi,rbx
  401491:	call   4010d0 <feof@plt>
  401496:	test   eax,eax
  401498:	jne    4014e3 <lerFilmes@@Base+0x73>
  40149a:	mov    r15,rsp
  40149d:	jmp    4014b9 <lerFilmes@@Base+0x49>
  40149f:	nop
  4014a0:	mov    rdi,r14
  4014a3:	mov    rsi,r15
  4014a6:	xor    edx,edx
  4014a8:	call   401c20 <lista_insere@@Base>
  4014ad:	mov    rdi,rbx
  4014b0:	call   4010d0 <feof@plt>
  4014b5:	test   eax,eax
  4014b7:	jne    4014e3 <lerFilmes@@Base+0x73>
  4014b9:	mov    rdi,r15
  4014bc:	mov    esi,0xff
  4014c1:	mov    rdx,rbx
  4014c4:	call   4010a0 <fgets@plt>
  4014c9:	mov    rdi,r15
  4014cc:	mov    esi,0xa
  4014d1:	call   401080 <strchr@plt>
  4014d6:	test   rax,rax
  4014d9:	je     4014a0 <lerFilmes@@Base+0x30>
  4014db:	mov    BYTE PTR [rax],0x0
  4014de:	jmp    4014a0 <lerFilmes@@Base+0x30>
  4014e0:	xor    r14d,r14d
  4014e3:	mov    rax,r14
  4014e6:	add    rsp,0x100
  4014ed:	pop    rbx
  4014ee:	pop    r14
  4014f0:	pop    r15
  4014f2:	ret    
  4014f3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4014fd:	nop    DWORD PTR [rax]

0000000000401500 <main@@Base>:
  401500:	push   rbp
  401501:	push   r15
  401503:	push   r14
  401505:	push   r13
  401507:	push   r12
  401509:	push   rbx
  40150a:	sub    rsp,0x28
  40150e:	lea    rdi,[rip+0x1aef]        # 403004 <_IO_stdin_used@@Base+0x4>
  401515:	lea    r14,[rip+0x1af4]        # 403010 <_IO_stdin_used@@Base+0x10>
  40151c:	mov    rsi,r14
  40151f:	call   401110 <fopen@plt>
  401524:	mov    r15,rax
  401527:	lea    rdi,[rip+0x1ae4]        # 403012 <_IO_stdin_used@@Base+0x12>
  40152e:	mov    rsi,r14
  401531:	call   401110 <fopen@plt>
  401536:	mov    rbx,rax
  401539:	lea    rdi,[rip+0x1add]        # 40301d <_IO_stdin_used@@Base+0x1d>
  401540:	mov    rsi,r14
  401543:	call   401110 <fopen@plt>
  401548:	mov    rbp,rax
  40154b:	mov    QWORD PTR [rsp+0x20],r15
  401550:	mov    rdi,r15
  401553:	call   4013e0 <lerAtores@@Base>
  401558:	mov    r14,rax
  40155b:	mov    QWORD PTR [rsp+0x18],rbx
  401560:	mov    rdi,rbx
  401563:	call   401470 <lerFilmes@@Base>
  401568:	mov    rbx,rax
  40156b:	mov    QWORD PTR [rsp+0x10],rbp
  401570:	mov    rdi,rbp
  401573:	call   401470 <lerFilmes@@Base>
  401578:	mov    rbp,rax
  40157b:	mov    rdi,r14
  40157e:	call   4017f0 <vetor_tamanho@@Base>
  401583:	lea    rdi,[rip+0x1a9f]        # 403029 <_IO_stdin_used@@Base+0x29>
  40158a:	mov    esi,eax
  40158c:	xor    eax,eax
  40158e:	call   401090 <printf@plt>
  401593:	mov    rdi,r14
  401596:	call   401210 <retira_duplicados@@Base>
  40159b:	mov    rdi,r14
  40159e:	call   4017f0 <vetor_tamanho@@Base>
  4015a3:	lea    rdi,[rip+0x1a92]        # 40303c <_IO_stdin_used@@Base+0x3c>
  4015aa:	mov    esi,eax
  4015ac:	xor    eax,eax
  4015ae:	call   401090 <printf@plt>
  4015b3:	mov    rdi,rbx
  4015b6:	mov    QWORD PTR [rsp+0x8],rbp
  4015bb:	mov    rsi,rbp
  4015be:	call   4012b0 <interseta@@Base>
  4015c3:	mov    rbp,rax
  4015c6:	test   rax,rax
  4015c9:	je     4015e5 <main@@Base+0xe5>
  4015cb:	mov    rdi,rbp
  4015ce:	call   4017f0 <vetor_tamanho@@Base>
  4015d3:	lea    rdi,[rip+0x1a7e]        # 403058 <_IO_stdin_used@@Base+0x58>
  4015da:	mov    esi,eax
  4015dc:	xor    eax,eax
  4015de:	call   401090 <printf@plt>
  4015e3:	jmp    4015f1 <main@@Base+0xf1>
  4015e5:	lea    rdi,[rip+0x1aac]        # 403098 <_IO_stdin_used@@Base+0x98>
  4015ec:	call   401050 <puts@plt>
  4015f1:	xor    eax,eax
  4015f3:	call   4016e0 <vetor_novo@@Base>
  4015f8:	mov    r15,rax
  4015fb:	mov    r13,QWORD PTR [rbx]
  4015fe:	test   r13,r13
  401601:	jne    401619 <main@@Base+0x119>
  401603:	jmp    401650 <main@@Base+0x150>
  401605:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40160f:	nop
  401610:	mov    r13,QWORD PTR [r13+0x8]
  401614:	test   r13,r13
  401617:	je     401650 <main@@Base+0x150>
  401619:	mov    r12,QWORD PTR [r13+0x0]
  40161d:	mov    rdi,r12
  401620:	call   401070 <strlen@plt>
  401625:	lea    rdi,[r12+rax*1]
  401629:	add    rdi,0xfffffffffffffffb
  40162d:	xor    esi,esi
  40162f:	mov    edx,0xa
  401634:	call   4010e0 <strtol@plt>
  401639:	cmp    eax,0x7cf
  40163e:	jg     401610 <main@@Base+0x110>
  401640:	mov    edx,DWORD PTR [r15]
  401643:	mov    rdi,r15
  401646:	mov    rsi,r12
  401649:	call   401820 <vetor_insere@@Base>
  40164e:	jmp    401610 <main@@Base+0x110>
  401650:	test   r15,r15
  401653:	je     40166f <main@@Base+0x16f>
  401655:	mov    rdi,r15
  401658:	call   4017f0 <vetor_tamanho@@Base>
  40165d:	lea    rdi,[rip+0x1a13]        # 403077 <_IO_stdin_used@@Base+0x77>
  401664:	mov    esi,eax
  401666:	xor    eax,eax
  401668:	call   401090 <printf@plt>
  40166d:	jmp    40167b <main@@Base+0x17b>
  40166f:	lea    rdi,[rip+0x1a39]        # 4030af <_IO_stdin_used@@Base+0xaf>
  401676:	call   401050 <puts@plt>
  40167b:	mov    rdi,r14
  40167e:	call   401700 <vetor_apaga@@Base>
  401683:	mov    rdi,rbp
  401686:	call   401700 <vetor_apaga@@Base>
  40168b:	mov    rdi,r15
  40168e:	call   401700 <vetor_apaga@@Base>
  401693:	mov    rdi,rbx
  401696:	call   401ba0 <lista_apaga@@Base>
  40169b:	mov    rdi,QWORD PTR [rsp+0x8]
  4016a0:	call   401ba0 <lista_apaga@@Base>
  4016a5:	mov    rdi,QWORD PTR [rsp+0x20]
  4016aa:	call   401060 <fclose@plt>
  4016af:	mov    rdi,QWORD PTR [rsp+0x18]
  4016b4:	call   401060 <fclose@plt>
  4016b9:	mov    rdi,QWORD PTR [rsp+0x10]
  4016be:	call   401060 <fclose@plt>
  4016c3:	xor    eax,eax
  4016c5:	add    rsp,0x28
  4016c9:	pop    rbx
  4016ca:	pop    r12
  4016cc:	pop    r13
  4016ce:	pop    r14
  4016d0:	pop    r15
  4016d2:	pop    rbp
  4016d3:	ret    
  4016d4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4016de:	xchg   ax,ax

00000000004016e0 <vetor_novo@@Base>:
  4016e0:	push   rax
  4016e1:	mov    edi,0x10
  4016e6:	call   4010f0 <malloc@plt>
  4016eb:	test   rax,rax
  4016ee:	je     4016fa <vetor_novo@@Base+0x1a>
  4016f0:	vxorps xmm0,xmm0,xmm0
  4016f4:	vmovups XMMWORD PTR [rax],xmm0
  4016f8:	pop    rcx
  4016f9:	ret    
  4016fa:	xor    eax,eax
  4016fc:	pop    rcx
  4016fd:	ret    
  4016fe:	xchg   ax,ax

0000000000401700 <vetor_apaga@@Base>:
  401700:	test   rdi,rdi
  401703:	je     40174c <vetor_apaga@@Base+0x4c>
  401705:	push   r14
  401707:	push   rbx
  401708:	push   rax
  401709:	mov    r14,rdi
  40170c:	cmp    DWORD PTR [rdi],0x0
  40170f:	mov    rdi,QWORD PTR [rdi+0x8]
  401713:	jle    401738 <vetor_apaga@@Base+0x38>
  401715:	xor    ebx,ebx
  401717:	nop    WORD PTR [rax+rax*1+0x0]
  401720:	mov    rdi,QWORD PTR [rdi+rbx*8]
  401724:	call   401030 <free@plt>
  401729:	inc    rbx
  40172c:	movsxd rax,DWORD PTR [r14]
  40172f:	mov    rdi,QWORD PTR [r14+0x8]
  401733:	cmp    rbx,rax
  401736:	jl     401720 <vetor_apaga@@Base+0x20>
  401738:	call   401030 <free@plt>
  40173d:	mov    rdi,r14
  401740:	add    rsp,0x8
  401744:	pop    rbx
  401745:	pop    r14
  401747:	jmp    401030 <free@plt>
  40174c:	ret    
  40174d:	nop    DWORD PTR [rax]

0000000000401750 <vetor_atribui@@Base>:
  401750:	push   rbp
  401751:	push   r15
  401753:	push   r14
  401755:	push   r13
  401757:	push   r12
  401759:	push   rbx
  40175a:	sub    rsp,0x18
  40175e:	mov    r15d,0xffffffff
  401764:	test   rdi,rdi
  401767:	je     4017dc <vetor_atribui@@Base+0x8c>
  401769:	mov    ebx,esi
  40176b:	test   esi,esi
  40176d:	js     4017dc <vetor_atribui@@Base+0x8c>
  40176f:	mov    rbp,rdi
  401772:	cmp    DWORD PTR [rdi],ebx
  401774:	jle    4017dc <vetor_atribui@@Base+0x8c>
  401776:	mov    r14,rdx
  401779:	mov    rdi,rdx
  40177c:	call   401070 <strlen@plt>
  401781:	mov    r13,rax
  401784:	mov    eax,r13d
  401787:	mov    QWORD PTR [rsp+0x10],rax
  40178c:	mov    rax,QWORD PTR [rbp+0x8]
  401790:	movsxd rcx,ebx
  401793:	mov    QWORD PTR [rsp+0x8],rcx
  401798:	mov    r12,QWORD PTR [rax+rcx*8]
  40179c:	mov    rdi,r12
  40179f:	call   401070 <strlen@plt>
  4017a4:	cmp    QWORD PTR [rsp+0x10],rax
  4017a9:	jbe    4017ce <vetor_atribui@@Base+0x7e>
  4017ab:	inc    r13d
  4017ae:	mov    rdi,r12
  4017b1:	mov    rsi,r13
  4017b4:	call   401100 <realloc@plt>
  4017b9:	mov    r12,rax
  4017bc:	mov    rax,QWORD PTR [rbp+0x8]
  4017c0:	mov    rcx,QWORD PTR [rsp+0x8]
  4017c5:	mov    QWORD PTR [rax+rcx*8],r12
  4017c9:	test   r12,r12
  4017cc:	je     4017dc <vetor_atribui@@Base+0x8c>
  4017ce:	mov    rdi,r12
  4017d1:	mov    rsi,r14
  4017d4:	call   401040 <strcpy@plt>
  4017d9:	mov    r15d,ebx
  4017dc:	mov    eax,r15d
  4017df:	add    rsp,0x18
  4017e3:	pop    rbx
  4017e4:	pop    r12
  4017e6:	pop    r13
  4017e8:	pop    r14
  4017ea:	pop    r15
  4017ec:	pop    rbp
  4017ed:	ret    
  4017ee:	xchg   ax,ax

00000000004017f0 <vetor_tamanho@@Base>:
  4017f0:	test   rdi,rdi
  4017f3:	je     4017f8 <vetor_tamanho@@Base+0x8>
  4017f5:	mov    eax,DWORD PTR [rdi]
  4017f7:	ret    
  4017f8:	mov    eax,0xffffffff
  4017fd:	ret    
  4017fe:	xchg   ax,ax

0000000000401800 <vetor_elemento@@Base>:
  401800:	xor    eax,eax
  401802:	test   rdi,rdi
  401805:	je     40181a <vetor_elemento@@Base+0x1a>
  401807:	test   esi,esi
  401809:	js     40181a <vetor_elemento@@Base+0x1a>
  40180b:	cmp    DWORD PTR [rdi],esi
  40180d:	jle    40181b <vetor_elemento@@Base+0x1b>
  40180f:	mov    rax,QWORD PTR [rdi+0x8]
  401813:	movsxd rcx,esi
  401816:	mov    rax,QWORD PTR [rax+rcx*8]
  40181a:	ret    
  40181b:	xor    eax,eax
  40181d:	ret    
  40181e:	xchg   ax,ax

0000000000401820 <vetor_insere@@Base>:
  401820:	push   rbp
  401821:	push   r15
  401823:	push   r14
  401825:	push   r12
  401827:	push   rbx
  401828:	mov    r14d,0xffffffff
  40182e:	test   rdi,rdi
  401831:	je     401980 <vetor_insere@@Base+0x160>
  401837:	mov    r12d,edx
  40183a:	test   edx,edx
  40183c:	js     401980 <vetor_insere@@Base+0x160>
  401842:	mov    rbx,rdi
  401845:	mov    eax,DWORD PTR [rdi]
  401847:	cmp    eax,r12d
  40184a:	jl     401980 <vetor_insere@@Base+0x160>
  401850:	mov    r15,rsi
  401853:	cmp    eax,DWORD PTR [rbx+0x4]
  401856:	jne    401887 <vetor_insere@@Base+0x67>
  401858:	lea    ecx,[rax+rax*1]
  40185b:	test   eax,eax
  40185d:	mov    eax,0x1
  401862:	cmovne eax,ecx
  401865:	mov    DWORD PTR [rbx+0x4],eax
  401868:	mov    rdi,QWORD PTR [rbx+0x8]
  40186c:	movsxd rsi,eax
  40186f:	shl    rsi,0x3
  401873:	call   401100 <realloc@plt>
  401878:	mov    QWORD PTR [rbx+0x8],rax
  40187c:	test   rax,rax
  40187f:	je     401980 <vetor_insere@@Base+0x160>
  401885:	mov    eax,DWORD PTR [rbx]
  401887:	mov    ecx,eax
  401889:	sub    ecx,r12d
  40188c:	jle    40194a <vetor_insere@@Base+0x12a>
  401892:	cdqe   
  401894:	movsxd rbp,r12d
  401897:	mov    rdx,rbp
  40189a:	not    rdx
  40189d:	add    rdx,rax
  4018a0:	and    rcx,0x7
  4018a4:	je     4018c5 <vetor_insere@@Base+0xa5>
  4018a6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4018b0:	mov    rsi,QWORD PTR [rbx+0x8]
  4018b4:	mov    rdi,QWORD PTR [rsi+rax*8-0x8]
  4018b9:	mov    QWORD PTR [rsi+rax*8],rdi
  4018bd:	dec    rax
  4018c0:	dec    rcx
  4018c3:	jne    4018b0 <vetor_insere@@Base+0x90>
  4018c5:	cmp    rdx,0x7
  4018c9:	jb     40194d <vetor_insere@@Base+0x12d>
  4018cf:	nop
  4018d0:	mov    rcx,QWORD PTR [rbx+0x8]
  4018d4:	mov    rdx,QWORD PTR [rcx+rax*8-0x8]
  4018d9:	mov    QWORD PTR [rcx+rax*8],rdx
  4018dd:	mov    rcx,QWORD PTR [rbx+0x8]
  4018e1:	mov    rdx,QWORD PTR [rcx+rax*8-0x10]
  4018e6:	mov    QWORD PTR [rcx+rax*8-0x8],rdx
  4018eb:	mov    rcx,QWORD PTR [rbx+0x8]
  4018ef:	mov    rdx,QWORD PTR [rcx+rax*8-0x18]
  4018f4:	mov    QWORD PTR [rcx+rax*8-0x10],rdx
  4018f9:	mov    rcx,QWORD PTR [rbx+0x8]
  4018fd:	mov    rdx,QWORD PTR [rcx+rax*8-0x20]
  401902:	mov    QWORD PTR [rcx+rax*8-0x18],rdx
  401907:	mov    rcx,QWORD PTR [rbx+0x8]
  40190b:	mov    rdx,QWORD PTR [rcx+rax*8-0x28]
  401910:	mov    QWORD PTR [rcx+rax*8-0x20],rdx
  401915:	mov    rcx,QWORD PTR [rbx+0x8]
  401919:	mov    rdx,QWORD PTR [rcx+rax*8-0x30]
  40191e:	mov    QWORD PTR [rcx+rax*8-0x28],rdx
  401923:	mov    rcx,QWORD PTR [rbx+0x8]
  401927:	mov    rdx,QWORD PTR [rcx+rax*8-0x38]
  40192c:	mov    QWORD PTR [rcx+rax*8-0x30],rdx
  401931:	mov    rcx,QWORD PTR [rbx+0x8]
  401935:	mov    rdx,QWORD PTR [rcx+rax*8-0x40]
  40193a:	mov    QWORD PTR [rcx+rax*8-0x38],rdx
  40193f:	add    rax,0xfffffffffffffff8
  401943:	cmp    rax,rbp
  401946:	jg     4018d0 <vetor_insere@@Base+0xb0>
  401948:	jmp    40194d <vetor_insere@@Base+0x12d>
  40194a:	movsxd rbp,r12d
  40194d:	mov    rdi,r15
  401950:	call   401070 <strlen@plt>
  401955:	lea    rdi,[rax+0x1]
  401959:	mov    esi,0x1
  40195e:	call   4010b0 <calloc@plt>
  401963:	mov    rcx,QWORD PTR [rbx+0x8]
  401967:	mov    QWORD PTR [rcx+rbp*8],rax
  40196b:	test   rax,rax
  40196e:	je     401980 <vetor_insere@@Base+0x160>
  401970:	mov    rdi,rax
  401973:	mov    rsi,r15
  401976:	call   401040 <strcpy@plt>
  40197b:	inc    DWORD PTR [rbx]
  40197d:	mov    r14d,r12d
  401980:	mov    eax,r14d
  401983:	pop    rbx
  401984:	pop    r12
  401986:	pop    r14
  401988:	pop    r15
  40198a:	pop    rbp
  40198b:	ret    
  40198c:	nop    DWORD PTR [rax+0x0]

0000000000401990 <vetor_remove@@Base>:
  401990:	push   r15
  401992:	push   r14
  401994:	push   rbx
  401995:	mov    eax,0xffffffff
  40199a:	test   rdi,rdi
  40199d:	je     4019f0 <vetor_remove@@Base+0x60>
  40199f:	mov    ebx,esi
  4019a1:	test   esi,esi
  4019a3:	js     4019f0 <vetor_remove@@Base+0x60>
  4019a5:	mov    r14,rdi
  4019a8:	cmp    DWORD PTR [rdi],ebx
  4019aa:	jle    4019f0 <vetor_remove@@Base+0x60>
  4019ac:	mov    rax,QWORD PTR [r14+0x8]
  4019b0:	movsxd r15,ebx
  4019b3:	mov    rdi,QWORD PTR [rax+r15*8]
  4019b7:	call   401030 <free@plt>
  4019bc:	lea    ecx,[rbx+0x1]
  4019bf:	movsxd rax,DWORD PTR [r14]
  4019c2:	cmp    ecx,eax
  4019c4:	jge    4019e9 <vetor_remove@@Base+0x59>
  4019c6:	inc    r15
  4019c9:	nop    DWORD PTR [rax+0x0]
  4019d0:	mov    rcx,QWORD PTR [r14+0x8]
  4019d4:	movsxd rbx,ebx
  4019d7:	mov    rdx,QWORD PTR [rcx+r15*8]
  4019db:	mov    QWORD PTR [rcx+rbx*8],rdx
  4019df:	inc    r15
  4019e2:	inc    ebx
  4019e4:	cmp    r15,rax
  4019e7:	jl     4019d0 <vetor_remove@@Base+0x40>
  4019e9:	dec    eax
  4019eb:	mov    DWORD PTR [r14],eax
  4019ee:	xor    eax,eax
  4019f0:	pop    rbx
  4019f1:	pop    r14
  4019f3:	pop    r15
  4019f5:	ret    
  4019f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000401a00 <vetor_pesquisa@@Base>:
  401a00:	push   rbp
  401a01:	push   r15
  401a03:	push   r14
  401a05:	push   r12
  401a07:	push   rbx
  401a08:	mov    r14d,0xffffffff
  401a0e:	test   rdi,rdi
  401a11:	je     401a4d <vetor_pesquisa@@Base+0x4d>
  401a13:	movsxd rbp,DWORD PTR [rdi]
  401a16:	test   rbp,rbp
  401a19:	jle    401a4d <vetor_pesquisa@@Base+0x4d>
  401a1b:	mov    r15,rsi
  401a1e:	mov    r12,QWORD PTR [rdi+0x8]
  401a22:	xor    ebx,ebx
  401a24:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401a2e:	xchg   ax,ax
  401a30:	mov    rdi,QWORD PTR [r12+rbx*8]
  401a34:	mov    rsi,r15
  401a37:	call   4010c0 <strcmp@plt>
  401a3c:	test   eax,eax
  401a3e:	je     401a4a <vetor_pesquisa@@Base+0x4a>
  401a40:	inc    rbx
  401a43:	cmp    rbx,rbp
  401a46:	jl     401a30 <vetor_pesquisa@@Base+0x30>
  401a48:	jmp    401a4d <vetor_pesquisa@@Base+0x4d>
  401a4a:	mov    r14d,ebx
  401a4d:	mov    eax,r14d
  401a50:	pop    rbx
  401a51:	pop    r12
  401a53:	pop    r14
  401a55:	pop    r15
  401a57:	pop    rbp
  401a58:	ret    
  401a59:	nop    DWORD PTR [rax+0x0]

0000000000401a60 <vetor_ordena@@Base>:
  401a60:	push   rbp
  401a61:	push   r15
  401a63:	push   r14
  401a65:	push   r13
  401a67:	push   r12
  401a69:	push   rbx
  401a6a:	push   rax
  401a6b:	test   rdi,rdi
  401a6e:	je     401aea <vetor_ordena@@Base+0x8a>
  401a70:	mov    r15,rdi
  401a73:	movsxd rcx,DWORD PTR [rdi]
  401a76:	xor    eax,eax
  401a78:	mov    QWORD PTR [rsp],rcx
  401a7c:	cmp    rcx,0x2
  401a80:	jl     401af3 <vetor_ordena@@Base+0x93>
  401a82:	mov    r14,QWORD PTR [r15+0x8]
  401a86:	mov    r12d,0x1
  401a8c:	jmp    401aa3 <vetor_ordena@@Base+0x43>
  401a8e:	xchg   ax,ax
  401a90:	mov    r13,r12
  401a93:	movsxd rax,r13d
  401a96:	mov    QWORD PTR [r14+rax*8],rbp
  401a9a:	inc    r12
  401a9d:	cmp    r12,QWORD PTR [rsp]
  401aa1:	jge    401af1 <vetor_ordena@@Base+0x91>
  401aa3:	mov    rbx,QWORD PTR [r14+r12*8-0x8]
  401aa8:	mov    rbp,QWORD PTR [r14+r12*8]
  401aac:	mov    rdi,rbp
  401aaf:	mov    rsi,rbx
  401ab2:	call   4010c0 <strcmp@plt>
  401ab7:	test   eax,eax
  401ab9:	jns    401a90 <vetor_ordena@@Base+0x30>
  401abb:	lea    r13,[r12-0x1]
  401ac0:	mov    QWORD PTR [r14+r13*8+0x8],rbx
  401ac5:	mov    r14,QWORD PTR [r15+0x8]
  401ac9:	test   r13,r13
  401acc:	jle    401a93 <vetor_ordena@@Base+0x33>
  401ace:	mov    rbx,QWORD PTR [r14+r13*8-0x8]
  401ad3:	dec    r13
  401ad6:	mov    rdi,rbp
  401ad9:	mov    rsi,rbx
  401adc:	call   4010c0 <strcmp@plt>
  401ae1:	test   eax,eax
  401ae3:	js     401ac0 <vetor_ordena@@Base+0x60>
  401ae5:	inc    r13
  401ae8:	jmp    401a93 <vetor_ordena@@Base+0x33>
  401aea:	mov    eax,0xffffffff
  401aef:	jmp    401af3 <vetor_ordena@@Base+0x93>
  401af1:	xor    eax,eax
  401af3:	add    rsp,0x8
  401af7:	pop    rbx
  401af8:	pop    r12
  401afa:	pop    r13
  401afc:	pop    r14
  401afe:	pop    r15
  401b00:	pop    rbp
  401b01:	ret    
  401b02:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b0c:	nop    DWORD PTR [rax+0x0]

0000000000401b10 <novo_str@@Base>:
  401b10:	push   r14
  401b12:	push   rbx
  401b13:	push   rax
  401b14:	mov    r14,rdi
  401b17:	mov    edi,0x18
  401b1c:	call   4010f0 <malloc@plt>
  401b21:	test   rax,rax
  401b24:	je     401b60 <novo_str@@Base+0x50>
  401b26:	mov    rbx,rax
  401b29:	mov    rdi,r14
  401b2c:	call   401070 <strlen@plt>
  401b31:	lea    rdi,[rax+0x1]
  401b35:	call   4010f0 <malloc@plt>
  401b3a:	mov    QWORD PTR [rbx],rax
  401b3d:	test   rax,rax
  401b40:	je     401b58 <novo_str@@Base+0x48>
  401b42:	mov    rdi,rax
  401b45:	mov    rsi,r14
  401b48:	call   401040 <strcpy@plt>
  401b4d:	vxorps xmm0,xmm0,xmm0
  401b51:	vmovups XMMWORD PTR [rbx+0x8],xmm0
  401b56:	jmp    401b62 <novo_str@@Base+0x52>
  401b58:	mov    rdi,rbx
  401b5b:	call   401030 <free@plt>
  401b60:	xor    ebx,ebx
  401b62:	mov    rax,rbx
  401b65:	add    rsp,0x8
  401b69:	pop    rbx
  401b6a:	pop    r14
  401b6c:	ret    
  401b6d:	nop    DWORD PTR [rax]

0000000000401b70 <lista_nova@@Base>:
  401b70:	push   rax
  401b71:	mov    edi,0x18
  401b76:	call   4010f0 <malloc@plt>
  401b7b:	test   rax,rax
  401b7e:	je     401b91 <lista_nova@@Base+0x21>
  401b80:	vxorps xmm0,xmm0,xmm0
  401b84:	vmovups XMMWORD PTR [rax],xmm0
  401b88:	mov    DWORD PTR [rax+0x10],0x0
  401b8f:	pop    rcx
  401b90:	ret    
  401b91:	xor    eax,eax
  401b93:	pop    rcx
  401b94:	ret    
  401b95:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401b9f:	nop

0000000000401ba0 <lista_apaga@@Base>:
  401ba0:	test   rdi,rdi
  401ba3:	je     401be0 <lista_apaga@@Base+0x40>
  401ba5:	push   r14
  401ba7:	push   rbx
  401ba8:	push   rax
  401ba9:	mov    r14,rdi
  401bac:	nop    DWORD PTR [rax+0x0]
  401bb0:	mov    rbx,QWORD PTR [r14]
  401bb3:	test   rbx,rbx
  401bb6:	je     401bd1 <lista_apaga@@Base+0x31>
  401bb8:	mov    rax,QWORD PTR [rbx+0x8]
  401bbc:	mov    QWORD PTR [r14],rax
  401bbf:	mov    rdi,QWORD PTR [rbx]
  401bc2:	call   401030 <free@plt>
  401bc7:	mov    rdi,rbx
  401bca:	call   401030 <free@plt>
  401bcf:	jmp    401bb0 <lista_apaga@@Base+0x10>
  401bd1:	mov    rdi,r14
  401bd4:	add    rsp,0x8
  401bd8:	pop    rbx
  401bd9:	pop    r14
  401bdb:	jmp    401030 <free@plt>
  401be0:	ret    
  401be1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401beb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000401bf0 <lista_tamanho@@Base>:
  401bf0:	test   rdi,rdi
  401bf3:	je     401bf9 <lista_tamanho@@Base+0x9>
  401bf5:	mov    eax,DWORD PTR [rdi+0x10]
  401bf8:	ret    
  401bf9:	mov    eax,0xffffffff
  401bfe:	ret    
  401bff:	nop

0000000000401c00 <lista_inicio@@Base>:
  401c00:	test   rdi,rdi
  401c03:	je     401c09 <lista_inicio@@Base+0x9>
  401c05:	mov    rax,QWORD PTR [rdi]
  401c08:	ret    
  401c09:	xor    eax,eax
  401c0b:	ret    
  401c0c:	nop    DWORD PTR [rax+0x0]

0000000000401c10 <lista_fim@@Base>:
  401c10:	test   rdi,rdi
  401c13:	je     401c1a <lista_fim@@Base+0xa>
  401c15:	mov    rax,QWORD PTR [rdi+0x8]
  401c19:	ret    
  401c1a:	xor    eax,eax
  401c1c:	ret    
  401c1d:	nop    DWORD PTR [rax]

0000000000401c20 <lista_insere@@Base>:
  401c20:	push   r15
  401c22:	push   r14
  401c24:	push   r12
  401c26:	push   rbx
  401c27:	push   rax
  401c28:	xor    ebx,ebx
  401c2a:	test   rdi,rdi
  401c2d:	je     401ce3 <lista_insere@@Base+0xc3>
  401c33:	mov    r12,rsi
  401c36:	test   rsi,rsi
  401c39:	je     401ce3 <lista_insere@@Base+0xc3>
  401c3f:	mov    r15,rdx
  401c42:	mov    r14,rdi
  401c45:	mov    edi,0x18
  401c4a:	call   4010f0 <malloc@plt>
  401c4f:	test   rax,rax
  401c52:	je     401cab <lista_insere@@Base+0x8b>
  401c54:	mov    rbx,rax
  401c57:	mov    rdi,r12
  401c5a:	call   401070 <strlen@plt>
  401c5f:	lea    rdi,[rax+0x1]
  401c63:	call   4010f0 <malloc@plt>
  401c68:	mov    QWORD PTR [rbx],rax
  401c6b:	test   rax,rax
  401c6e:	je     401caf <lista_insere@@Base+0x8f>
  401c70:	mov    rdi,rax
  401c73:	mov    rsi,r12
  401c76:	call   401040 <strcpy@plt>
  401c7b:	vxorps xmm0,xmm0,xmm0
  401c7f:	vmovups XMMWORD PTR [rbx+0x8],xmm0
  401c84:	inc    DWORD PTR [r14+0x10]
  401c88:	mov    rax,QWORD PTR [r14]
  401c8b:	test   r15,r15
  401c8e:	je     401cbb <lista_insere@@Base+0x9b>
  401c90:	cmp    rax,r15
  401c93:	je     401cd2 <lista_insere@@Base+0xb2>
  401c95:	mov    rax,QWORD PTR [r15+0x10]
  401c99:	mov    QWORD PTR [rbx+0x10],rax
  401c9d:	mov    QWORD PTR [rbx+0x8],r15
  401ca1:	mov    QWORD PTR [rax+0x8],rbx
  401ca5:	mov    QWORD PTR [r15+0x10],rbx
  401ca9:	jmp    401ce3 <lista_insere@@Base+0xc3>
  401cab:	xor    ebx,ebx
  401cad:	jmp    401ce3 <lista_insere@@Base+0xc3>
  401caf:	mov    rdi,rbx
  401cb2:	call   401030 <free@plt>
  401cb7:	xor    ebx,ebx
  401cb9:	jmp    401ce3 <lista_insere@@Base+0xc3>
  401cbb:	test   rax,rax
  401cbe:	je     401cdc <lista_insere@@Base+0xbc>
  401cc0:	mov    rax,QWORD PTR [r14+0x8]
  401cc4:	mov    QWORD PTR [rbx+0x10],rax
  401cc8:	mov    QWORD PTR [rax+0x8],rbx
  401ccc:	mov    QWORD PTR [r14+0x8],rbx
  401cd0:	jmp    401ce3 <lista_insere@@Base+0xc3>
  401cd2:	mov    QWORD PTR [rbx+0x8],r15
  401cd6:	mov    QWORD PTR [r15+0x10],rbx
  401cda:	jmp    401ce0 <lista_insere@@Base+0xc0>
  401cdc:	mov    QWORD PTR [r14+0x8],rbx
  401ce0:	mov    QWORD PTR [r14],rbx
  401ce3:	mov    rax,rbx
  401ce6:	add    rsp,0x8
  401cea:	pop    rbx
  401ceb:	pop    r12
  401ced:	pop    r14
  401cef:	pop    r15
  401cf1:	ret    
  401cf2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401cfc:	nop    DWORD PTR [rax+0x0]

0000000000401d00 <lista_remove@@Base>:
  401d00:	push   r14
  401d02:	push   rbx
  401d03:	push   rax
  401d04:	xor    r14d,r14d
  401d07:	test   rdi,rdi
  401d0a:	je     401d53 <lista_remove@@Base+0x53>
  401d0c:	mov    rbx,rsi
  401d0f:	test   rsi,rsi
  401d12:	je     401d53 <lista_remove@@Base+0x53>
  401d14:	dec    DWORD PTR [rdi+0x10]
  401d17:	mov    r14,QWORD PTR [rbx+0x8]
  401d1b:	mov    rax,QWORD PTR [rbx+0x10]
  401d1f:	test   rax,rax
  401d22:	je     401d2e <lista_remove@@Base+0x2e>
  401d24:	mov    QWORD PTR [rax+0x8],r14
  401d28:	mov    r14,QWORD PTR [rbx+0x8]
  401d2c:	jmp    401d31 <lista_remove@@Base+0x31>
  401d2e:	mov    QWORD PTR [rdi],r14
  401d31:	add    rdi,0x8
  401d35:	lea    rcx,[r14+0x10]
  401d39:	test   r14,r14
  401d3c:	cmove  rcx,rdi
  401d40:	mov    QWORD PTR [rcx],rax
  401d43:	mov    rdi,QWORD PTR [rbx]
  401d46:	call   401030 <free@plt>
  401d4b:	mov    rdi,rbx
  401d4e:	call   401030 <free@plt>
  401d53:	mov    rax,r14
  401d56:	add    rsp,0x8
  401d5a:	pop    rbx
  401d5b:	pop    r14
  401d5d:	ret    
  401d5e:	xchg   ax,ax

0000000000401d60 <lista_pesquisa@@Base>:
  401d60:	push   r14
  401d62:	push   rbx
  401d63:	push   rax
  401d64:	xor    ebx,ebx
  401d66:	test   rdi,rdi
  401d69:	je     401dda <lista_pesquisa@@Base+0x7a>
  401d6b:	mov    r14,rsi
  401d6e:	test   rsi,rsi
  401d71:	je     401dda <lista_pesquisa@@Base+0x7a>
  401d73:	cmp    edx,0x1
  401d76:	ja     401dda <lista_pesquisa@@Base+0x7a>
  401d78:	test   edx,edx
  401d7a:	je     401daa <lista_pesquisa@@Base+0x4a>
  401d7c:	mov    rbx,QWORD PTR [rdi+0x8]
  401d80:	test   rbx,rbx
  401d83:	je     401dd8 <lista_pesquisa@@Base+0x78>
  401d85:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401d8f:	nop
  401d90:	mov    rdi,QWORD PTR [rbx]
  401d93:	mov    rsi,r14
  401d96:	call   4010c0 <strcmp@plt>
  401d9b:	test   eax,eax
  401d9d:	je     401dda <lista_pesquisa@@Base+0x7a>
  401d9f:	mov    rbx,QWORD PTR [rbx+0x10]
  401da3:	test   rbx,rbx
  401da6:	jne    401d90 <lista_pesquisa@@Base+0x30>
  401da8:	jmp    401dd8 <lista_pesquisa@@Base+0x78>
  401daa:	mov    rbx,QWORD PTR [rdi]
  401dad:	test   rbx,rbx
  401db0:	je     401dd8 <lista_pesquisa@@Base+0x78>
  401db2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401dbc:	nop    DWORD PTR [rax+0x0]
  401dc0:	mov    rdi,QWORD PTR [rbx]
  401dc3:	mov    rsi,r14
  401dc6:	call   4010c0 <strcmp@plt>
  401dcb:	test   eax,eax
  401dcd:	je     401dda <lista_pesquisa@@Base+0x7a>
  401dcf:	mov    rbx,QWORD PTR [rbx+0x8]
  401dd3:	test   rbx,rbx
  401dd6:	jne    401dc0 <lista_pesquisa@@Base+0x60>
  401dd8:	xor    ebx,ebx
  401dda:	mov    rax,rbx
  401ddd:	add    rsp,0x8
  401de1:	pop    rbx
  401de2:	pop    r14
  401de4:	ret    
  401de5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401def:	nop

0000000000401df0 <lista_ordena@@Base>:
  401df0:	push   rbp
  401df1:	push   r15
  401df3:	push   r14
  401df5:	push   r13
  401df7:	push   r12
  401df9:	push   rbx
  401dfa:	push   rax
  401dfb:	test   rdi,rdi
  401dfe:	je     401e88 <lista_ordena@@Base+0x98>
  401e04:	mov    r13,QWORD PTR [rdi]
  401e07:	mov    r12,QWORD PTR [r13+0x8]
  401e0b:	xor    r14d,r14d
  401e0e:	test   r12,r12
  401e11:	je     401e8e <lista_ordena@@Base+0x9e>
  401e13:	lea    r15,[r13+0x8]
  401e17:	jmp    401e32 <lista_ordena@@Base+0x42>
  401e19:	nop    DWORD PTR [rax+0x0]
  401e20:	mov    r13,r12
  401e23:	lea    r15,[r12+0x8]
  401e28:	mov    r12,QWORD PTR [r12+0x8]
  401e2d:	test   r12,r12
  401e30:	je     401e8e <lista_ordena@@Base+0x9e>
  401e32:	mov    rbx,r13
  401e35:	mov    rbp,r12
  401e38:	jmp    401e4c <lista_ordena@@Base+0x5c>
  401e3a:	nop    WORD PTR [rax+rax*1+0x0]
  401e40:	mov    rbp,QWORD PTR [rbp+0x8]
  401e44:	mov    rbx,rcx
  401e47:	test   rbp,rbp
  401e4a:	je     401e70 <lista_ordena@@Base+0x80>
  401e4c:	mov    rdi,QWORD PTR [rbp+0x0]
  401e50:	mov    rsi,QWORD PTR [rbx]
  401e53:	call   4010c0 <strcmp@plt>
  401e58:	mov    rcx,rbp
  401e5b:	test   eax,eax
  401e5d:	js     401e40 <lista_ordena@@Base+0x50>
  401e5f:	mov    rcx,rbx
  401e62:	jmp    401e40 <lista_ordena@@Base+0x50>
  401e64:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401e6e:	xchg   ax,ax
  401e70:	cmp    rcx,r13
  401e73:	je     401e20 <lista_ordena@@Base+0x30>
  401e75:	mov    rax,QWORD PTR [r13+0x0]
  401e79:	mov    rdx,QWORD PTR [rcx]
  401e7c:	mov    QWORD PTR [r13+0x0],rdx
  401e80:	mov    QWORD PTR [rcx],rax
  401e83:	mov    r12,QWORD PTR [r15]
  401e86:	jmp    401e20 <lista_ordena@@Base+0x30>
  401e88:	mov    r14d,0xffffffff
  401e8e:	mov    eax,r14d
  401e91:	add    rsp,0x8
  401e95:	pop    rbx
  401e96:	pop    r12
  401e98:	pop    r13
  401e9a:	pop    r14
  401e9c:	pop    r15
  401e9e:	pop    rbp
  401e9f:	ret    

0000000000401ea0 <lista_inverte@@Base>:
  401ea0:	push   rbx
  401ea1:	test   rdi,rdi
  401ea4:	je     401ec0 <lista_inverte@@Base+0x20>
  401ea6:	mov    r9d,DWORD PTR [rdi+0x10]
  401eaa:	xor    eax,eax
  401eac:	cmp    r9d,0x2
  401eb0:	jl     401fc1 <lista_inverte@@Base+0x121>
  401eb6:	jne    401ec7 <lista_inverte@@Base+0x27>
  401eb8:	mov    rcx,QWORD PTR [rdi]
  401ebb:	jmp    401f9a <lista_inverte@@Base+0xfa>
  401ec0:	mov    eax,0xffffffff
  401ec5:	pop    rbx
  401ec6:	ret    
  401ec7:	mov    rbx,QWORD PTR [rdi]
  401eca:	mov    rsi,QWORD PTR [rbx+0x8]
  401ece:	lea    r8d,[r9-0x2]
  401ed2:	lea    ecx,[r9-0x3]
  401ed6:	and    r8d,0x3
  401eda:	cmp    ecx,0x3
  401edd:	jb     401f66 <lista_inverte@@Base+0xc6>
  401ee3:	mov    r10d,r8d
  401ee6:	sub    r10d,r9d
  401ee9:	add    r10d,0x2
  401eed:	nop    DWORD PTR [rax]
  401ef0:	mov    r9,QWORD PTR [rsi+0x8]
  401ef4:	mov    r11,QWORD PTR [rsi+0x10]
  401ef8:	mov    QWORD PTR [r11+0x8],r9
  401efc:	mov    rcx,QWORD PTR [rsi+0x8]
  401f00:	mov    QWORD PTR [rcx+0x10],r11
  401f04:	mov    QWORD PTR [rsi+0x8],rbx
  401f08:	mov    QWORD PTR [rbx+0x10],rsi
  401f0c:	mov    r9,QWORD PTR [rcx+0x8]
  401f10:	mov    rbx,QWORD PTR [rcx+0x10]
  401f14:	mov    QWORD PTR [rbx+0x8],r9
  401f18:	mov    rdx,QWORD PTR [rcx+0x8]
  401f1c:	mov    QWORD PTR [rdx+0x10],rbx
  401f20:	mov    QWORD PTR [rcx+0x8],rsi
  401f24:	mov    QWORD PTR [rsi+0x10],rcx
  401f28:	mov    rbx,QWORD PTR [rdx+0x8]
  401f2c:	mov    rsi,QWORD PTR [rdx+0x10]
  401f30:	mov    QWORD PTR [rsi+0x8],rbx
  401f34:	mov    rbx,QWORD PTR [rdx+0x8]
  401f38:	mov    QWORD PTR [rbx+0x10],rsi
  401f3c:	mov    QWORD PTR [rdx+0x8],rcx
  401f40:	mov    QWORD PTR [rcx+0x10],rdx
  401f44:	mov    rsi,QWORD PTR [rbx+0x8]
  401f48:	mov    rcx,QWORD PTR [rbx+0x10]
  401f4c:	mov    QWORD PTR [rcx+0x8],rsi
  401f50:	mov    rsi,QWORD PTR [rbx+0x8]
  401f54:	mov    QWORD PTR [rsi+0x10],rcx
  401f58:	mov    QWORD PTR [rbx+0x8],rdx
  401f5c:	mov    QWORD PTR [rdx+0x10],rbx
  401f60:	add    r10d,0x4
  401f64:	jne    401ef0 <lista_inverte@@Base+0x50>
  401f66:	mov    rcx,rbx
  401f69:	test   r8d,r8d
  401f6c:	je     401f97 <lista_inverte@@Base+0xf7>
  401f6e:	xchg   ax,ax
  401f70:	mov    rcx,rsi
  401f73:	mov    rsi,QWORD PTR [rsi+0x8]
  401f77:	mov    rdx,QWORD PTR [rcx+0x10]
  401f7b:	mov    QWORD PTR [rdx+0x8],rsi
  401f7f:	mov    rsi,QWORD PTR [rcx+0x8]
  401f83:	mov    QWORD PTR [rsi+0x10],rdx
  401f87:	mov    QWORD PTR [rcx+0x8],rbx
  401f8b:	mov    QWORD PTR [rbx+0x10],rcx
  401f8f:	mov    rbx,rcx
  401f92:	dec    r8d
  401f95:	jne    401f70 <lista_inverte@@Base+0xd0>
  401f97:	mov    QWORD PTR [rdi],rcx
  401f9a:	mov    rdx,QWORD PTR [rdi+0x8]
  401f9e:	mov    rsi,QWORD PTR [rdx+0x10]
  401fa2:	mov    QWORD PTR [rdi+0x8],rsi
  401fa6:	mov    QWORD PTR [rsi+0x8],0x0
  401fae:	mov    QWORD PTR [rdx+0x10],0x0
  401fb6:	mov    QWORD PTR [rdx+0x8],rcx
  401fba:	mov    QWORD PTR [rcx+0x10],rdx
  401fbe:	mov    QWORD PTR [rdi],rdx
  401fc1:	pop    rbx
  401fc2:	ret    
  401fc3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  401fcd:	nop    DWORD PTR [rax]

0000000000401fd0 <__libc_csu_init@@Base>:
  401fd0:	endbr64 
  401fd4:	push   r15
  401fd6:	lea    r15,[rip+0x2e23]        # 404e00 <_IO_stdin_used@@Base+0x1e00>
  401fdd:	push   r14
  401fdf:	mov    r14,rdx
  401fe2:	push   r13
  401fe4:	mov    r13,rsi
  401fe7:	push   r12
  401fe9:	mov    r12d,edi
  401fec:	push   rbp
  401fed:	lea    rbp,[rip+0x2e14]        # 404e08 <_IO_stdin_used@@Base+0x1e08>
  401ff4:	push   rbx
  401ff5:	sub    rbp,r15
  401ff8:	sub    rsp,0x8
  401ffc:	call   401000 <free@plt-0x30>
  402001:	sar    rbp,0x3
  402005:	je     402026 <__libc_csu_init@@Base+0x56>
  402007:	xor    ebx,ebx
  402009:	nop    DWORD PTR [rax+0x0]
  402010:	mov    rdx,r14
  402013:	mov    rsi,r13
  402016:	mov    edi,r12d
  402019:	call   QWORD PTR [r15+rbx*8]
  40201d:	add    rbx,0x1
  402021:	cmp    rbp,rbx
  402024:	jne    402010 <__libc_csu_init@@Base+0x40>
  402026:	add    rsp,0x8
  40202a:	pop    rbx
  40202b:	pop    rbp
  40202c:	pop    r12
  40202e:	pop    r13
  402030:	pop    r14
  402032:	pop    r15
  402034:	ret    
  402035:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000402040 <__libc_csu_fini@@Base>:
  402040:	endbr64 
  402044:	ret    

Disassembly of section .fini:

0000000000402048 <.fini>:
  402048:	endbr64 
  40204c:	sub    rsp,0x8
  402050:	add    rsp,0x8
  402054:	ret    
