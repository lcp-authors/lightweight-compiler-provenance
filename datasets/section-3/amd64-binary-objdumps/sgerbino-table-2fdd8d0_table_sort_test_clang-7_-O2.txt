
../repos/sgerbino-table-2fdd8d0/bin/table_sort_test:     file format elf64-x86-64


Disassembly of section .init:

0000000000403000 <.init>:
  403000:	endbr64 
  403004:	sub    rsp,0x8
  403008:	mov    rax,QWORD PTR [rip+0x6fe9]        # 409ff8 <__gmon_start__>
  40300f:	test   rax,rax
  403012:	je     403016 <free@plt-0x1a>
  403014:	call   rax
  403016:	add    rsp,0x8
  40301a:	ret    

Disassembly of section .plt:

0000000000403020 <free@plt-0x10>:
  403020:	push   QWORD PTR [rip+0x6fe2]        # 40a008 <_IO_stdin_used@@Base+0x3008>
  403026:	jmp    QWORD PTR [rip+0x6fe4]        # 40a010 <_IO_stdin_used@@Base+0x3010>
  40302c:	nop    DWORD PTR [rax+0x0]

0000000000403030 <free@plt>:
  403030:	jmp    QWORD PTR [rip+0x6fe2]        # 40a018 <free@GLIBC_2.2.5>
  403036:	push   0x0
  40303b:	jmp    403020 <free@plt-0x10>

0000000000403040 <strcpy@plt>:
  403040:	jmp    QWORD PTR [rip+0x6fda]        # 40a020 <strcpy@GLIBC_2.2.5>
  403046:	push   0x1
  40304b:	jmp    403020 <free@plt-0x10>

0000000000403050 <puts@plt>:
  403050:	jmp    QWORD PTR [rip+0x6fd2]        # 40a028 <puts@GLIBC_2.2.5>
  403056:	push   0x2
  40305b:	jmp    403020 <free@plt-0x10>

0000000000403060 <strlen@plt>:
  403060:	jmp    QWORD PTR [rip+0x6fca]        # 40a030 <strlen@GLIBC_2.2.5>
  403066:	push   0x3
  40306b:	jmp    403020 <free@plt-0x10>

0000000000403070 <printf@plt>:
  403070:	jmp    QWORD PTR [rip+0x6fc2]        # 40a038 <printf@GLIBC_2.2.5>
  403076:	push   0x4
  40307b:	jmp    403020 <free@plt-0x10>

0000000000403080 <snprintf@plt>:
  403080:	jmp    QWORD PTR [rip+0x6fba]        # 40a040 <snprintf@GLIBC_2.2.5>
  403086:	push   0x5
  40308b:	jmp    403020 <free@plt-0x10>

0000000000403090 <srand@plt>:
  403090:	jmp    QWORD PTR [rip+0x6fb2]        # 40a048 <srand@GLIBC_2.2.5>
  403096:	push   0x6
  40309b:	jmp    403020 <free@plt-0x10>

00000000004030a0 <calloc@plt>:
  4030a0:	jmp    QWORD PTR [rip+0x6faa]        # 40a050 <calloc@GLIBC_2.2.5>
  4030a6:	push   0x7
  4030ab:	jmp    403020 <free@plt-0x10>

00000000004030b0 <strcmp@plt>:
  4030b0:	jmp    QWORD PTR [rip+0x6fa2]        # 40a058 <strcmp@GLIBC_2.2.5>
  4030b6:	push   0x8
  4030bb:	jmp    403020 <free@plt-0x10>

00000000004030c0 <time@plt>:
  4030c0:	jmp    QWORD PTR [rip+0x6f9a]        # 40a060 <time@GLIBC_2.2.5>
  4030c6:	push   0x9
  4030cb:	jmp    403020 <free@plt-0x10>

00000000004030d0 <malloc@plt>:
  4030d0:	jmp    QWORD PTR [rip+0x6f92]        # 40a068 <malloc@GLIBC_2.2.5>
  4030d6:	push   0xa
  4030db:	jmp    403020 <free@plt-0x10>

00000000004030e0 <__isoc99_sscanf@plt>:
  4030e0:	jmp    QWORD PTR [rip+0x6f8a]        # 40a070 <__isoc99_sscanf@GLIBC_2.7>
  4030e6:	push   0xb
  4030eb:	jmp    403020 <free@plt-0x10>

00000000004030f0 <realloc@plt>:
  4030f0:	jmp    QWORD PTR [rip+0x6f82]        # 40a078 <realloc@GLIBC_2.2.5>
  4030f6:	push   0xc
  4030fb:	jmp    403020 <free@plt-0x10>

0000000000403100 <rand@plt>:
  403100:	jmp    QWORD PTR [rip+0x6f7a]        # 40a080 <rand@GLIBC_2.2.5>
  403106:	push   0xd
  40310b:	jmp    403020 <free@plt-0x10>

Disassembly of section .text:

0000000000403110 <_start@@Base>:
  403110:	endbr64 
  403114:	xor    ebp,ebp
  403116:	mov    r9,rdx
  403119:	pop    rsi
  40311a:	mov    rdx,rsp
  40311d:	and    rsp,0xfffffffffffffff0
  403121:	push   rax
  403122:	push   rsp
  403123:	mov    r8,0x406c20
  40312a:	mov    rcx,0x406bb0
  403131:	mov    rdi,0x403200
  403138:	call   QWORD PTR [rip+0x6eb2]        # 409ff0 <__libc_start_main@GLIBC_2.2.5>
  40313e:	hlt    
  40313f:	nop
  403140:	endbr64 
  403144:	ret    
  403145:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40314f:	nop
  403150:	mov    eax,0x40a098
  403155:	cmp    rax,0x40a098
  40315b:	je     403170 <_start@@Base+0x60>
  40315d:	mov    eax,0x0
  403162:	test   rax,rax
  403165:	je     403170 <_start@@Base+0x60>
  403167:	mov    edi,0x40a098
  40316c:	jmp    rax
  40316e:	xchg   ax,ax
  403170:	ret    
  403171:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40317c:	nop    DWORD PTR [rax+0x0]
  403180:	mov    esi,0x40a098
  403185:	sub    rsi,0x40a098
  40318c:	mov    rax,rsi
  40318f:	shr    rsi,0x3f
  403193:	sar    rax,0x3
  403197:	add    rsi,rax
  40319a:	sar    rsi,1
  40319d:	je     4031b0 <_start@@Base+0xa0>
  40319f:	mov    eax,0x0
  4031a4:	test   rax,rax
  4031a7:	je     4031b0 <_start@@Base+0xa0>
  4031a9:	mov    edi,0x40a098
  4031ae:	jmp    rax
  4031b0:	ret    
  4031b1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4031bc:	nop    DWORD PTR [rax+0x0]
  4031c0:	endbr64 
  4031c4:	cmp    BYTE PTR [rip+0x6ecd],0x0        # 40a098 <__bss_start@@Base>
  4031cb:	jne    4031e0 <_start@@Base+0xd0>
  4031cd:	push   rbp
  4031ce:	mov    rbp,rsp
  4031d1:	call   403150 <_start@@Base+0x40>
  4031d6:	mov    BYTE PTR [rip+0x6ebb],0x1        # 40a098 <__bss_start@@Base>
  4031dd:	pop    rbp
  4031de:	ret    
  4031df:	nop
  4031e0:	ret    
  4031e1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4031ec:	nop    DWORD PTR [rax+0x0]
  4031f0:	endbr64 
  4031f4:	jmp    403180 <_start@@Base+0x70>
  4031f6:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000403200 <main@@Base>:
  403200:	push   rbp
  403201:	push   r15
  403203:	push   r14
  403205:	push   r13
  403207:	push   r12
  403209:	push   rbx
  40320a:	sub    rsp,0x1b8
  403211:	lea    rdi,[rsp+0x38]
  403216:	call   4030c0 <time@plt>
  40321b:	mov    edi,eax
  40321d:	call   403090 <srand@plt>
  403222:	call   403100 <rand@plt>
  403227:	movsxd rdx,eax
  40322a:	shr    rdx,0x2
  40322e:	movabs rcx,0x28f5c28f5c28f5c3
  403238:	mulx   rdx,rcx,rcx
  40323d:	shr    rdx,0x2
  403241:	imul   ecx,edx,0x64
  403244:	neg    ecx
  403246:	lea    ebp,[rax+rcx*1]
  403249:	add    ebp,0x64
  40324c:	lea    r14,[rsp+0x40]
  403251:	mov    rdi,r14
  403254:	call   4036b0 <table_init@@Base>
  403259:	xor    ebx,ebx
  40325b:	nop    DWORD PTR [rax+rax*1+0x0]
  403260:	mov    rdi,r14
  403263:	call   4056d0 <table_add_row@@Base>
  403268:	add    ebx,0x1
  40326b:	cmp    ebx,ebp
  40326d:	jb     403260 <main@@Base+0x60>
  40326f:	lea    r14,[rsp+0x40]
  403274:	mov    rdi,r14
  403277:	call   4056c0 <table_get_row_length@@Base>
  40327c:	mov    r13d,eax
  40327f:	call   403100 <rand@plt>
  403284:	movsxd rdx,eax
  403287:	movabs rcx,0xcccccccccccccccd
  403291:	mulx   rdx,rcx,rcx
  403296:	shr    rdx,0x2
  40329a:	lea    ecx,[rdx+rdx*4]
  40329d:	neg    ecx
  40329f:	lea    r12d,[rax+rcx*1]
  4032a3:	add    r12d,0x2
  4032a7:	lea    r15,[rip+0x3d56]        # 407004 <_IO_stdin_used@@Base+0x4>
  4032ae:	lea    rbx,[rsp+0xb0]
  4032b6:	xor    ebp,ebp
  4032b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4032c0:	mov    esi,0xff
  4032c5:	xor    eax,eax
  4032c7:	mov    rdi,rbx
  4032ca:	mov    rdx,r15
  4032cd:	mov    ecx,ebp
  4032cf:	call   403080 <snprintf@plt>
  4032d4:	xor    edx,edx
  4032d6:	mov    rdi,r14
  4032d9:	mov    rsi,rbx
  4032dc:	call   404a40 <table_add_column@@Base>
  4032e1:	add    ebp,0x1
  4032e4:	cmp    ebp,r12d
  4032e7:	jb     4032c0 <main@@Base+0xc0>
  4032e9:	lea    rdi,[rsp+0x40]
  4032ee:	call   4049b0 <table_get_column_length@@Base>
  4032f3:	mov    r14d,eax
  4032f6:	test   eax,eax
  4032f8:	jle    403360 <main@@Base+0x160>
  4032fa:	xor    ebx,ebx
  4032fc:	lea    r15,[rsp+0x40]
  403301:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40330b:	nop    DWORD PTR [rax+rax*1+0x0]
  403310:	test   r13d,r13d
  403313:	jle    403358 <main@@Base+0x158>
  403315:	xor    ebp,ebp
  403317:	nop    WORD PTR [rax+rax*1+0x0]
  403320:	call   403100 <rand@plt>
  403325:	movsxd rcx,eax
  403328:	imul   rax,rcx,0x66666667
  40332f:	mov    rdx,rax
  403332:	shr    rdx,0x3f
  403336:	sar    rax,0x23
  40333a:	add    eax,edx
  40333c:	shl    eax,0x2
  40333f:	lea    eax,[rax+rax*4]
  403342:	sub    ecx,eax
  403344:	mov    rdi,r15
  403347:	mov    esi,ebp
  403349:	mov    edx,ebx
  40334b:	call   405c80 <table_set_int@@Base>
  403350:	add    ebp,0x1
  403353:	cmp    r13d,ebp
  403356:	jne    403320 <main@@Base+0x120>
  403358:	add    ebx,0x1
  40335b:	cmp    ebx,r14d
  40335e:	jne    403310 <main@@Base+0x110>
  403360:	movsxd rbx,r14d
  403363:	mov    esi,0x4
  403368:	mov    rdi,rbx
  40336b:	call   4030a0 <calloc@plt>
  403370:	mov    r15,rax
  403373:	mov    esi,0x4
  403378:	mov    QWORD PTR [rsp+0x30],rbx
  40337d:	mov    rdi,rbx
  403380:	call   4030a0 <calloc@plt>
  403385:	mov    r12,rax
  403388:	test   r14d,r14d
  40338b:	jle    4033c2 <main@@Base+0x1c2>
  40338d:	mov    ebx,r14d
  403390:	xor    ebp,ebp
  403392:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40339c:	nop    DWORD PTR [rax+0x0]
  4033a0:	mov    DWORD PTR [r15+rbp*4],ebp
  4033a4:	call   403100 <rand@plt>
  4033a9:	mov    ecx,eax
  4033ab:	shr    ecx,0x1f
  4033ae:	add    ecx,eax
  4033b0:	and    ecx,0xfffffffe
  4033b3:	sub    eax,ecx
  4033b5:	mov    DWORD PTR [r12+rbp*4],eax
  4033b9:	add    rbp,0x1
  4033bd:	cmp    rbx,rbp
  4033c0:	jne    4033a0 <main@@Base+0x1a0>
  4033c2:	lea    rdi,[rsp+0x40]
  4033c7:	mov    rsi,r15
  4033ca:	mov    rdx,r12
  4033cd:	mov    ecx,r14d
  4033d0:	call   4067b0 <table_column_sort@@Base>
  4033d5:	test   r13d,r13d
  4033d8:	jle    40360b <main@@Base+0x40b>
  4033de:	mov    QWORD PTR [rsp+0x18],r12
  4033e3:	mov    QWORD PTR [rsp+0x28],r15
  4033e8:	test   r14d,r14d
  4033eb:	setle  BYTE PTR [rsp+0x7]
  4033f0:	mov    DWORD PTR [rsp+0x14],0xffffffff
  4033f8:	lea    r12,[rsp+0x40]
  4033fd:	xor    r15d,r15d
  403400:	mov    DWORD PTR [rsp+0xc],0x0
  403408:	mov    DWORD PTR [rsp+0x8],0xffffffff
  403410:	mov    DWORD PTR [rsp+0x24],r13d
  403415:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40341f:	nop
  403420:	test   r15d,r15d
  403423:	sete   al
  403426:	or     al,BYTE PTR [rsp+0x7]
  40342a:	jne    403500 <main@@Base+0x300>
  403430:	lea    r14d,[r15-0x1]
  403434:	xor    r13d,r13d
  403437:	test   r13,r13
  40343a:	je     403470 <main@@Base+0x270>
  40343c:	mov    ebp,r13d
  40343f:	nop
  403440:	test   ebp,ebp
  403442:	jle    403480 <main@@Base+0x280>
  403444:	add    ebp,0xffffffff
  403447:	mov    rdi,r12
  40344a:	mov    esi,r15d
  40344d:	mov    edx,ebp
  40344f:	call   4054a0 <table_get_int@@Base>
  403454:	mov    ebx,eax
  403456:	mov    rdi,r12
  403459:	mov    esi,r14d
  40345c:	mov    edx,ebp
  40345e:	call   4054a0 <table_get_int@@Base>
  403463:	cmp    ebx,eax
  403465:	je     403440 <main@@Base+0x240>
  403467:	jmp    403500 <main@@Base+0x300>
  40346c:	nop    DWORD PTR [rax+0x0]
  403470:	xor    ebp,ebp
  403472:	jmp    403483 <main@@Base+0x283>
  403474:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40347e:	xchg   ax,ax
  403480:	mov    ebp,r13d
  403483:	mov    rax,QWORD PTR [rsp+0x18]
  403488:	mov    ebx,DWORD PTR [rax+r13*4]
  40348c:	mov    rdi,r12
  40348f:	mov    esi,r14d
  403492:	mov    edx,ebp
  403494:	call   4054a0 <table_get_int@@Base>
  403499:	mov    edx,ebp
  40349b:	mov    ebp,eax
  40349d:	mov    rdi,r12
  4034a0:	mov    esi,r15d
  4034a3:	mov    DWORD PTR [rsp+0x10],edx
  4034a7:	call   4054a0 <table_get_int@@Base>
  4034ac:	test   ebx,ebx
  4034ae:	je     4034c0 <main@@Base+0x2c0>
  4034b0:	cmp    ebp,eax
  4034b2:	jge    4034ef <main@@Base+0x2ef>
  4034b4:	xor    eax,eax
  4034b6:	lea    rdi,[rip+0x3b96]        # 407053 <_IO_stdin_used@@Base+0x53>
  4034bd:	jmp    4034cd <main@@Base+0x2cd>
  4034bf:	nop
  4034c0:	cmp    ebp,eax
  4034c2:	jle    4034ef <main@@Base+0x2ef>
  4034c4:	xor    eax,eax
  4034c6:	lea    rdi,[rip+0x3b3e]        # 40700b <_IO_stdin_used@@Base+0xb>
  4034cd:	mov    esi,r15d
  4034d0:	mov    ebx,DWORD PTR [rsp+0x10]
  4034d4:	mov    edx,ebx
  4034d6:	call   403070 <printf@plt>
  4034db:	mov    DWORD PTR [rsp+0xc],0xffffffff
  4034e3:	mov    eax,r15d
  4034e6:	mov    DWORD PTR [rsp+0x8],r15d
  4034eb:	mov    DWORD PTR [rsp+0x14],ebx
  4034ef:	add    r13,0x1
  4034f3:	cmp    r13,QWORD PTR [rsp+0x30]
  4034f8:	jl     403437 <main@@Base+0x237>
  4034fe:	xchg   ax,ax
  403500:	add    r15d,0x1
  403504:	mov    r13d,DWORD PTR [rsp+0x24]
  403509:	cmp    r15d,r13d
  40350c:	jne    403420 <main@@Base+0x220>
  403512:	cmp    DWORD PTR [rsp+0x8],0xffffffff
  403517:	je     4035fb <main@@Base+0x3fb>
  40351d:	lea    rbx,[rsp+0x40]
  403522:	mov    rdi,rbx
  403525:	call   4056c0 <table_get_row_length@@Base>
  40352a:	mov    rdi,rbx
  40352d:	call   4056c0 <table_get_row_length@@Base>
  403532:	mov    ebx,eax
  403534:	lea    rdi,[rip+0x3b6b]        # 4070a6 <_IO_stdin_used@@Base+0xa6>
  40353b:	call   403050 <puts@plt>
  403540:	mov    DWORD PTR [rsp+0x10],ebx
  403544:	test   ebx,ebx
  403546:	jle    4035fb <main@@Base+0x3fb>
  40354c:	lea    r13,[rsp+0x40]
  403551:	lea    rbx,[rsp+0xb0]
  403559:	lea    r15,[rip+0x3b3c]        # 40709c <_IO_stdin_used@@Base+0x9c>
  403560:	lea    r12,[rip+0x3b3a]        # 4070a1 <_IO_stdin_used@@Base+0xa1>
  403567:	xor    r14d,r14d
  40356a:	nop    WORD PTR [rax+rax*1+0x0]
  403570:	mov    rdi,r13
  403573:	call   4049b0 <table_get_column_length@@Base>
  403578:	test   eax,eax
  40357a:	jle    4035cc <main@@Base+0x3cc>
  40357c:	xor    ebp,ebp
  40357e:	xchg   ax,ax
  403580:	mov    r8d,0xff
  403586:	mov    rdi,r13
  403589:	mov    esi,r14d
  40358c:	mov    edx,ebp
  40358e:	mov    rcx,rbx
  403591:	call   404020 <table_cell_to_buffer@@Base>
  403596:	cmp    DWORD PTR [rsp+0x8],r14d
  40359b:	jne    4035b0 <main@@Base+0x3b0>
  40359d:	cmp    DWORD PTR [rsp+0x14],ebp
  4035a1:	jne    4035b0 <main@@Base+0x3b0>
  4035a3:	xor    eax,eax
  4035a5:	mov    rdi,r15
  4035a8:	jmp    4035b5 <main@@Base+0x3b5>
  4035aa:	nop    WORD PTR [rax+rax*1+0x0]
  4035b0:	xor    eax,eax
  4035b2:	mov    rdi,r12
  4035b5:	mov    rsi,rbx
  4035b8:	call   403070 <printf@plt>
  4035bd:	add    ebp,0x1
  4035c0:	mov    rdi,r13
  4035c3:	call   4049b0 <table_get_column_length@@Base>
  4035c8:	cmp    ebp,eax
  4035ca:	jl     403580 <main@@Base+0x380>
  4035cc:	cmp    DWORD PTR [rsp+0x8],r14d
  4035d1:	jne    4035e0 <main@@Base+0x3e0>
  4035d3:	lea    rdi,[rip+0x3acb]        # 4070a5 <_IO_stdin_used@@Base+0xa5>
  4035da:	jmp    4035e7 <main@@Base+0x3e7>
  4035dc:	nop    DWORD PTR [rax+0x0]
  4035e0:	lea    rdi,[rip+0x3abf]        # 4070a6 <_IO_stdin_used@@Base+0xa6>
  4035e7:	call   403050 <puts@plt>
  4035ec:	add    r14d,0x1
  4035f0:	cmp    r14d,DWORD PTR [rsp+0x10]
  4035f5:	jne    403570 <main@@Base+0x370>
  4035fb:	mov    r15,QWORD PTR [rsp+0x28]
  403600:	mov    r12,QWORD PTR [rsp+0x18]
  403605:	mov    ebx,DWORD PTR [rsp+0xc]
  403609:	jmp    40360d <main@@Base+0x40d>
  40360b:	xor    ebx,ebx
  40360d:	lea    rdi,[rsp+0x40]
  403612:	call   403740 <table_destroy@@Base>
  403617:	mov    rdi,r15
  40361a:	call   403030 <free@plt>
  40361f:	mov    rdi,r12
  403622:	call   403030 <free@plt>
  403627:	mov    eax,ebx
  403629:	add    rsp,0x1b8
  403630:	pop    rbx
  403631:	pop    r12
  403633:	pop    r13
  403635:	pop    r14
  403637:	pop    r15
  403639:	pop    rbp
  40363a:	ret    
  40363b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403640 <table_new@@Base>:
  403640:	push   rax
  403641:	mov    edi,0x70
  403646:	call   4030d0 <malloc@plt>
  40364b:	mov    QWORD PTR [rax],0x0
  403652:	mov    DWORD PTR [rax+0x8],0x0
  403659:	mov    ecx,0xa
  40365e:	vmovq  xmm0,rcx
  403663:	vmovdqu XMMWORD PTR [rax+0x10],xmm0
  403668:	mov    QWORD PTR [rax+0x20],0x0
  403670:	mov    DWORD PTR [rax+0x28],0x0
  403677:	mov    ecx,0x14
  40367c:	vmovq  xmm0,rcx
  403681:	vmovdqu XMMWORD PTR [rax+0x30],xmm0
  403686:	mov    DWORD PTR [rax+0x40],0x0
  40368d:	mov    QWORD PTR [rax+0x68],0x0
  403695:	vpxor  xmm0,xmm0,xmm0
  403699:	vmovdqu XMMWORD PTR [rax+0x48],xmm0
  40369e:	mov    QWORD PTR [rax+0x58],0x0
  4036a6:	mov    QWORD PTR [rax+0x60],0xa
  4036ae:	pop    rcx
  4036af:	ret    

00000000004036b0 <table_init@@Base>:
  4036b0:	mov    QWORD PTR [rdi],0x0
  4036b7:	mov    DWORD PTR [rdi+0x8],0x0
  4036be:	mov    eax,0xa
  4036c3:	vmovq  xmm0,rax
  4036c8:	vmovdqu XMMWORD PTR [rdi+0x10],xmm0
  4036cd:	mov    QWORD PTR [rdi+0x20],0x0
  4036d5:	mov    DWORD PTR [rdi+0x28],0x0
  4036dc:	mov    eax,0x14
  4036e1:	vmovq  xmm0,rax
  4036e6:	vmovdqu XMMWORD PTR [rdi+0x30],xmm0
  4036eb:	mov    DWORD PTR [rdi+0x40],0x0
  4036f2:	mov    QWORD PTR [rdi+0x68],0x0
  4036fa:	vpxor  xmm0,xmm0,xmm0
  4036fe:	vmovdqu XMMWORD PTR [rdi+0x48],xmm0
  403703:	mov    QWORD PTR [rdi+0x58],0x0
  40370b:	mov    QWORD PTR [rdi+0x60],0xa
  403713:	ret    
  403714:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40371e:	xchg   ax,ax

0000000000403720 <table_delete@@Base>:
  403720:	push   rbx
  403721:	mov    rbx,rdi
  403724:	call   403740 <table_destroy@@Base>
  403729:	mov    rdi,rbx
  40372c:	pop    rbx
  40372d:	jmp    403030 <free@plt>
  403732:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40373c:	nop    DWORD PTR [rax+0x0]

0000000000403740 <table_destroy@@Base>:
  403740:	test   rdi,rdi
  403743:	je     4037fc <table_destroy@@Base+0xbc>
  403749:	push   rbp
  40374a:	push   r14
  40374c:	push   rbx
  40374d:	mov    r14,rdi
  403750:	mov    esi,0xffffffff
  403755:	mov    edx,0xffffffff
  40375a:	mov    ecx,0x40
  40375f:	call   403f40 <table_notify@@Base>
  403764:	mov    rdi,r14
  403767:	call   4056c0 <table_get_row_length@@Base>
  40376c:	test   eax,eax
  40376e:	jle    403791 <table_destroy@@Base+0x51>
  403770:	mov    ebp,eax
  403772:	xor    ebx,ebx
  403774:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40377e:	xchg   ax,ax
  403780:	mov    rdi,r14
  403783:	mov    esi,ebx
  403785:	call   405650 <table_row_destroy@@Base>
  40378a:	add    ebx,0x1
  40378d:	cmp    ebp,ebx
  40378f:	jne    403780 <table_destroy@@Base+0x40>
  403791:	mov    rdi,QWORD PTR [r14+0x20]
  403795:	test   rdi,rdi
  403798:	je     40379f <table_destroy@@Base+0x5f>
  40379a:	call   403030 <free@plt>
  40379f:	mov    rdi,r14
  4037a2:	call   4049b0 <table_get_column_length@@Base>
  4037a7:	test   eax,eax
  4037a9:	jle    4037c1 <table_destroy@@Base+0x81>
  4037ab:	mov    ebp,eax
  4037ad:	xor    ebx,ebx
  4037af:	nop
  4037b0:	mov    rdi,r14
  4037b3:	mov    esi,ebx
  4037b5:	call   404990 <table_column_destroy@@Base>
  4037ba:	add    ebx,0x1
  4037bd:	cmp    ebp,ebx
  4037bf:	jne    4037b0 <table_destroy@@Base+0x70>
  4037c1:	mov    rdi,QWORD PTR [r14]
  4037c4:	test   rdi,rdi
  4037c7:	je     4037ce <table_destroy@@Base+0x8e>
  4037c9:	call   403030 <free@plt>
  4037ce:	mov    rdi,QWORD PTR [r14+0x48]
  4037d2:	test   rdi,rdi
  4037d5:	je     4037dc <table_destroy@@Base+0x9c>
  4037d7:	call   403030 <free@plt>
  4037dc:	mov    rdi,QWORD PTR [r14+0x50]
  4037e0:	test   rdi,rdi
  4037e3:	je     4037ea <table_destroy@@Base+0xaa>
  4037e5:	call   403030 <free@plt>
  4037ea:	mov    rdi,QWORD PTR [r14+0x58]
  4037ee:	test   rdi,rdi
  4037f1:	pop    rbx
  4037f2:	pop    r14
  4037f4:	pop    rbp
  4037f5:	je     4037fc <table_destroy@@Base+0xbc>
  4037f7:	jmp    403030 <free@plt>
  4037fc:	ret    
  4037fd:	nop    DWORD PTR [rax]

0000000000403800 <table_dupe@@Base>:
  403800:	push   rbp
  403801:	push   r15
  403803:	push   r14
  403805:	push   r13
  403807:	push   r12
  403809:	push   rbx
  40380a:	sub    rsp,0x28
  40380e:	mov    rbx,rdi
  403811:	call   4056c0 <table_get_row_length@@Base>
  403816:	mov    DWORD PTR [rsp+0x1c],eax
  40381a:	mov    rdi,rbx
  40381d:	call   4049b0 <table_get_column_length@@Base>
  403822:	mov    r12d,eax
  403825:	mov    edi,0x70
  40382a:	call   4030d0 <malloc@plt>
  40382f:	mov    r15,rax
  403832:	mov    QWORD PTR [rax],0x0
  403839:	mov    DWORD PTR [rax+0x8],0x0
  403840:	mov    eax,0xa
  403845:	vmovq  xmm0,rax
  40384a:	vmovdqu XMMWORD PTR [r15+0x10],xmm0
  403850:	mov    QWORD PTR [r15+0x20],0x0
  403858:	mov    DWORD PTR [r15+0x28],0x0
  403860:	mov    eax,0x14
  403865:	vmovq  xmm0,rax
  40386a:	vmovdqu XMMWORD PTR [r15+0x30],xmm0
  403870:	mov    DWORD PTR [r15+0x40],0x0
  403878:	mov    QWORD PTR [r15+0x68],0x0
  403880:	vpxor  xmm0,xmm0,xmm0
  403884:	vmovdqu XMMWORD PTR [r15+0x48],xmm0
  40388a:	mov    QWORD PTR [r15+0x58],0x0
  403892:	mov    QWORD PTR [r15+0x60],0xa
  40389a:	test   r12d,r12d
  40389d:	jle    4038dc <table_dupe@@Base+0xdc>
  40389f:	xor    ebp,ebp
  4038a1:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4038ab:	nop    DWORD PTR [rax+rax*1+0x0]
  4038b0:	mov    rdi,rbx
  4038b3:	mov    esi,ebp
  4038b5:	call   404a20 <table_get_column_name@@Base>
  4038ba:	mov    r13,rax
  4038bd:	mov    rdi,rbx
  4038c0:	mov    esi,ebp
  4038c2:	call   404a30 <table_get_column_data_type@@Base>
  4038c7:	mov    rdi,r15
  4038ca:	mov    rsi,r13
  4038cd:	mov    edx,eax
  4038cf:	call   404a40 <table_add_column@@Base>
  4038d4:	add    ebp,0x1
  4038d7:	cmp    r12d,ebp
  4038da:	jne    4038b0 <table_dupe@@Base+0xb0>
  4038dc:	cmp    DWORD PTR [rsp+0x1c],0x0
  4038e1:	jle    403c6a <table_dupe@@Base+0x46a>
  4038e7:	xor    ebp,ebp
  4038e9:	lea    r14,[rip+0x37b8]        # 4070a8 <_IO_stdin_used@@Base+0xa8>
  4038f0:	mov    rdi,r15
  4038f3:	call   4056d0 <table_add_row@@Base>
  4038f8:	test   r12d,r12d
  4038fb:	jle    403c5d <table_dupe@@Base+0x45d>
  403901:	xor    r13d,r13d
  403904:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40390e:	xchg   ax,ax
  403910:	mov    rdi,rbx
  403913:	mov    esi,r13d
  403916:	call   404a30 <table_get_column_data_type@@Base>
  40391b:	cmp    eax,0x17
  40391e:	ja     403c50 <table_dupe@@Base+0x450>
  403924:	mov    eax,eax
  403926:	movsxd rax,DWORD PTR [r14+rax*4]
  40392a:	add    rax,r14
  40392d:	jmp    rax
  40392f:	mov    rdi,rbx
  403932:	mov    esi,ebp
  403934:	mov    edx,r13d
  403937:	call   4054a0 <table_get_int@@Base>
  40393c:	mov    rdi,r15
  40393f:	mov    esi,ebp
  403941:	mov    edx,r13d
  403944:	mov    ecx,eax
  403946:	call   405c80 <table_set_int@@Base>
  40394b:	jmp    403c50 <table_dupe@@Base+0x450>
  403950:	mov    rdi,rbx
  403953:	mov    esi,ebp
  403955:	mov    edx,r13d
  403958:	call   4054b0 <table_get_uint@@Base>
  40395d:	mov    rdi,r15
  403960:	mov    esi,ebp
  403962:	mov    edx,r13d
  403965:	mov    ecx,eax
  403967:	call   405d00 <table_set_uint@@Base>
  40396c:	jmp    403c50 <table_dupe@@Base+0x450>
  403971:	mov    rdi,rbx
  403974:	mov    esi,ebp
  403976:	mov    edx,r13d
  403979:	call   4054c0 <table_get_int8@@Base>
  40397e:	movsx  ecx,al
  403981:	mov    rdi,r15
  403984:	mov    esi,ebp
  403986:	mov    edx,r13d
  403989:	call   405d80 <table_set_int8@@Base>
  40398e:	jmp    403c50 <table_dupe@@Base+0x450>
  403993:	mov    rdi,rbx
  403996:	mov    esi,ebp
  403998:	mov    edx,r13d
  40399b:	call   4054d0 <table_get_uint8@@Base>
  4039a0:	movzx  ecx,al
  4039a3:	mov    rdi,r15
  4039a6:	mov    esi,ebp
  4039a8:	mov    edx,r13d
  4039ab:	call   405e00 <table_set_uint8@@Base>
  4039b0:	jmp    403c50 <table_dupe@@Base+0x450>
  4039b5:	mov    rdi,rbx
  4039b8:	mov    esi,ebp
  4039ba:	mov    edx,r13d
  4039bd:	call   4054e0 <table_get_int16@@Base>
  4039c2:	movsx  ecx,ax
  4039c5:	mov    rdi,r15
  4039c8:	mov    esi,ebp
  4039ca:	mov    edx,r13d
  4039cd:	call   405e80 <table_set_int16@@Base>
  4039d2:	jmp    403c50 <table_dupe@@Base+0x450>
  4039d7:	mov    rdi,rbx
  4039da:	mov    esi,ebp
  4039dc:	mov    edx,r13d
  4039df:	call   4054f0 <table_get_uint16@@Base>
  4039e4:	movzx  ecx,ax
  4039e7:	mov    rdi,r15
  4039ea:	mov    esi,ebp
  4039ec:	mov    edx,r13d
  4039ef:	call   405f00 <table_set_uint16@@Base>
  4039f4:	jmp    403c50 <table_dupe@@Base+0x450>
  4039f9:	mov    rdi,rbx
  4039fc:	mov    esi,ebp
  4039fe:	mov    edx,r13d
  403a01:	call   405500 <table_get_int32@@Base>
  403a06:	mov    rdi,r15
  403a09:	mov    esi,ebp
  403a0b:	mov    edx,r13d
  403a0e:	mov    ecx,eax
  403a10:	call   405f80 <table_set_int32@@Base>
  403a15:	jmp    403c50 <table_dupe@@Base+0x450>
  403a1a:	mov    rdi,rbx
  403a1d:	mov    esi,ebp
  403a1f:	mov    edx,r13d
  403a22:	call   405510 <table_get_uint32@@Base>
  403a27:	mov    rdi,r15
  403a2a:	mov    esi,ebp
  403a2c:	mov    edx,r13d
  403a2f:	mov    ecx,eax
  403a31:	call   406000 <table_set_uint32@@Base>
  403a36:	jmp    403c50 <table_dupe@@Base+0x450>
  403a3b:	mov    rdi,rbx
  403a3e:	mov    esi,ebp
  403a40:	mov    edx,r13d
  403a43:	call   405520 <table_get_int64@@Base>
  403a48:	mov    rdi,r15
  403a4b:	mov    esi,ebp
  403a4d:	mov    edx,r13d
  403a50:	mov    rcx,rax
  403a53:	call   406080 <table_set_int64@@Base>
  403a58:	jmp    403c50 <table_dupe@@Base+0x450>
  403a5d:	mov    rdi,rbx
  403a60:	mov    esi,ebp
  403a62:	mov    edx,r13d
  403a65:	call   405530 <table_get_uint64@@Base>
  403a6a:	mov    rdi,r15
  403a6d:	mov    esi,ebp
  403a6f:	mov    edx,r13d
  403a72:	mov    rcx,rax
  403a75:	call   406100 <table_set_uint64@@Base>
  403a7a:	jmp    403c50 <table_dupe@@Base+0x450>
  403a7f:	mov    rdi,rbx
  403a82:	mov    esi,ebp
  403a84:	mov    edx,r13d
  403a87:	call   405540 <table_get_short@@Base>
  403a8c:	movsx  ecx,ax
  403a8f:	mov    rdi,r15
  403a92:	mov    esi,ebp
  403a94:	mov    edx,r13d
  403a97:	call   406180 <table_set_short@@Base>
  403a9c:	jmp    403c50 <table_dupe@@Base+0x450>
  403aa1:	mov    rdi,rbx
  403aa4:	mov    esi,ebp
  403aa6:	mov    edx,r13d
  403aa9:	call   405550 <table_get_ushort@@Base>
  403aae:	movzx  ecx,ax
  403ab1:	mov    rdi,r15
  403ab4:	mov    esi,ebp
  403ab6:	mov    edx,r13d
  403ab9:	call   406200 <table_set_ushort@@Base>
  403abe:	jmp    403c50 <table_dupe@@Base+0x450>
  403ac3:	mov    rdi,rbx
  403ac6:	mov    esi,ebp
  403ac8:	mov    edx,r13d
  403acb:	call   405560 <table_get_long@@Base>
  403ad0:	mov    rdi,r15
  403ad3:	mov    esi,ebp
  403ad5:	mov    edx,r13d
  403ad8:	mov    rcx,rax
  403adb:	call   406280 <table_set_long@@Base>
  403ae0:	jmp    403c50 <table_dupe@@Base+0x450>
  403ae5:	mov    rdi,rbx
  403ae8:	mov    esi,ebp
  403aea:	mov    edx,r13d
  403aed:	call   405570 <table_get_ulong@@Base>
  403af2:	mov    rdi,r15
  403af5:	mov    esi,ebp
  403af7:	mov    edx,r13d
  403afa:	mov    rcx,rax
  403afd:	call   406300 <table_set_ulong@@Base>
  403b02:	jmp    403c50 <table_dupe@@Base+0x450>
  403b07:	mov    rdi,rbx
  403b0a:	mov    esi,ebp
  403b0c:	mov    edx,r13d
  403b0f:	call   405580 <table_get_llong@@Base>
  403b14:	mov    rdi,r15
  403b17:	mov    esi,ebp
  403b19:	mov    edx,r13d
  403b1c:	mov    rcx,rax
  403b1f:	call   406380 <table_set_llong@@Base>
  403b24:	jmp    403c50 <table_dupe@@Base+0x450>
  403b29:	mov    rdi,rbx
  403b2c:	mov    esi,ebp
  403b2e:	mov    edx,r13d
  403b31:	call   405590 <table_get_ullong@@Base>
  403b36:	mov    rdi,r15
  403b39:	mov    esi,ebp
  403b3b:	mov    edx,r13d
  403b3e:	mov    rcx,rax
  403b41:	call   406400 <table_set_ullong@@Base>
  403b46:	jmp    403c50 <table_dupe@@Base+0x450>
  403b4b:	mov    rdi,rbx
  403b4e:	mov    esi,ebp
  403b50:	mov    edx,r13d
  403b53:	call   4055a0 <table_get_float@@Base>
  403b58:	mov    rdi,r15
  403b5b:	mov    esi,ebp
  403b5d:	mov    edx,r13d
  403b60:	call   406480 <table_set_float@@Base>
  403b65:	jmp    403c50 <table_dupe@@Base+0x450>
  403b6a:	mov    rdi,rbx
  403b6d:	mov    esi,ebp
  403b6f:	mov    edx,r13d
  403b72:	call   4055b0 <table_get_double@@Base>
  403b77:	mov    rdi,r15
  403b7a:	mov    esi,ebp
  403b7c:	mov    edx,r13d
  403b7f:	call   406510 <table_set_double@@Base>
  403b84:	jmp    403c50 <table_dupe@@Base+0x450>
  403b89:	mov    rdi,rbx
  403b8c:	mov    esi,ebp
  403b8e:	mov    edx,r13d
  403b91:	call   4055c0 <table_get_ldouble@@Base>
  403b96:	fstp   TBYTE PTR [rsp]
  403b99:	mov    rdi,r15
  403b9c:	mov    esi,ebp
  403b9e:	mov    edx,r13d
  403ba1:	call   4065a0 <table_set_ldouble@@Base>
  403ba6:	jmp    403c50 <table_dupe@@Base+0x450>
  403bab:	mov    rdi,rbx
  403bae:	mov    esi,ebp
  403bb0:	mov    edx,r13d
  403bb3:	call   4055d0 <table_get_char@@Base>
  403bb8:	movsx  ecx,al
  403bbb:	mov    rdi,r15
  403bbe:	mov    esi,ebp
  403bc0:	mov    edx,r13d
  403bc3:	call   406650 <table_set_char@@Base>
  403bc8:	jmp    403c50 <table_dupe@@Base+0x450>
  403bcd:	mov    rdi,rbx
  403bd0:	mov    esi,ebp
  403bd2:	mov    edx,r13d
  403bd5:	call   4055e0 <table_get_uchar@@Base>
  403bda:	movzx  ecx,al
  403bdd:	mov    rdi,r15
  403be0:	mov    esi,ebp
  403be2:	mov    edx,r13d
  403be5:	call   4066d0 <table_set_uchar@@Base>
  403bea:	jmp    403c50 <table_dupe@@Base+0x450>
  403bec:	mov    rdi,rbx
  403bef:	mov    esi,ebp
  403bf1:	mov    edx,r13d
  403bf4:	call   4055f0 <table_get_string@@Base>
  403bf9:	mov    rdi,r15
  403bfc:	mov    esi,ebp
  403bfe:	mov    edx,r13d
  403c01:	mov    rcx,rax
  403c04:	call   406640 <table_set_string@@Base>
  403c09:	jmp    403c50 <table_dupe@@Base+0x450>
  403c0b:	mov    rdi,rbx
  403c0e:	mov    esi,ebp
  403c10:	mov    edx,r13d
  403c13:	call   405490 <table_get_bool@@Base>
  403c18:	movzx  ecx,al
  403c1b:	mov    rdi,r15
  403c1e:	mov    esi,ebp
  403c20:	mov    edx,r13d
  403c23:	call   405c00 <table_set_bool@@Base>
  403c28:	jmp    403c50 <table_dupe@@Base+0x450>
  403c2a:	mov    rdi,rbx
  403c2d:	mov    esi,ebp
  403c2f:	mov    edx,r13d
  403c32:	call   405600 <table_get_ptr@@Base>
  403c37:	mov    QWORD PTR [rsp+0x20],rax
  403c3c:	mov    rdi,r15
  403c3f:	mov    esi,ebp
  403c41:	mov    edx,r13d
  403c44:	lea    rcx,[rsp+0x20]
  403c49:	call   406750 <table_set_ptr@@Base>
  403c4e:	xchg   ax,ax
  403c50:	add    r13d,0x1
  403c54:	cmp    r12d,r13d
  403c57:	jne    403910 <table_dupe@@Base+0x110>
  403c5d:	add    ebp,0x1
  403c60:	cmp    ebp,DWORD PTR [rsp+0x1c]
  403c64:	jne    4038f0 <table_dupe@@Base+0xf0>
  403c6a:	mov    rax,r15
  403c6d:	add    rsp,0x28
  403c71:	pop    rbx
  403c72:	pop    r12
  403c74:	pop    r13
  403c76:	pop    r14
  403c78:	pop    r15
  403c7a:	pop    rbp
  403c7b:	ret    
  403c7c:	nop    DWORD PTR [rax+0x0]

0000000000403c80 <table_get_major_version@@Base>:
  403c80:	xor    eax,eax
  403c82:	ret    
  403c83:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c8d:	nop    DWORD PTR [rax]

0000000000403c90 <table_get_minor_version@@Base>:
  403c90:	xor    eax,eax
  403c92:	ret    
  403c93:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403c9d:	nop    DWORD PTR [rax]

0000000000403ca0 <table_get_patch_version@@Base>:
  403ca0:	xor    eax,eax
  403ca2:	ret    
  403ca3:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403cad:	nop    DWORD PTR [rax]

0000000000403cb0 <table_get_version@@Base>:
  403cb0:	lea    rax,[rip+0x33e9]        # 4070a0 <_IO_stdin_used@@Base+0xa0>
  403cb7:	ret    
  403cb8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403cc0 <table_get_callback_length@@Base>:
  403cc0:	mov    eax,DWORD PTR [rdi+0x40]
  403cc3:	ret    
  403cc4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403cce:	xchg   ax,ax

0000000000403cd0 <table_register_callback@@Base>:
  403cd0:	push   rbp
  403cd1:	push   r15
  403cd3:	push   r14
  403cd5:	push   rbx
  403cd6:	push   rax
  403cd7:	mov    r14d,ecx
  403cda:	mov    r15,rdx
  403cdd:	mov    rbp,rsi
  403ce0:	mov    rbx,rdi
  403ce3:	movsxd rcx,DWORD PTR [rdi+0x40]
  403ce7:	test   rcx,rcx
  403cea:	jle    403d1d <table_register_callback@@Base+0x4d>
  403cec:	mov    rdx,QWORD PTR [rbx+0x48]
  403cf0:	xor    eax,eax
  403cf2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  403cfc:	nop    DWORD PTR [rax+0x0]
  403d00:	cmp    QWORD PTR [rdx+rax*8],rbp
  403d04:	jne    403d14 <table_register_callback@@Base+0x44>
  403d06:	mov    rsi,QWORD PTR [rbx+0x50]
  403d0a:	cmp    QWORD PTR [rsi+rax*8],r15
  403d0e:	je     403db5 <table_register_callback@@Base+0xe5>
  403d14:	add    rax,0x1
  403d18:	cmp    rax,rcx
  403d1b:	jl     403d00 <table_register_callback@@Base+0x30>
  403d1d:	mov    rsi,QWORD PTR [rbx+0x60]
  403d21:	mov    rax,rcx
  403d24:	or     rax,rsi
  403d27:	shr    rax,0x20
  403d2b:	je     403da8 <table_register_callback@@Base+0xd8>
  403d2d:	xor    edx,edx
  403d2f:	mov    rax,rcx
  403d32:	div    rsi
  403d35:	test   rdx,rdx
  403d38:	jne    403d81 <table_register_callback@@Base+0xb1>
  403d3a:	add    rsi,QWORD PTR [rbx+0x68]
  403d3e:	mov    QWORD PTR [rbx+0x68],rsi
  403d42:	mov    rdi,QWORD PTR [rbx+0x48]
  403d46:	shl    rsi,0x3
  403d4a:	call   4030f0 <realloc@plt>
  403d4f:	mov    QWORD PTR [rbx+0x48],rax
  403d53:	mov    rdi,QWORD PTR [rbx+0x50]
  403d57:	mov    rsi,QWORD PTR [rbx+0x68]
  403d5b:	shl    rsi,0x3
  403d5f:	call   4030f0 <realloc@plt>
  403d64:	mov    QWORD PTR [rbx+0x50],rax
  403d68:	mov    rdi,QWORD PTR [rbx+0x58]
  403d6c:	mov    rsi,QWORD PTR [rbx+0x68]
  403d70:	shl    rsi,0x2
  403d74:	call   4030f0 <realloc@plt>
  403d79:	mov    QWORD PTR [rbx+0x58],rax
  403d7d:	movsxd rcx,DWORD PTR [rbx+0x40]
  403d81:	mov    rax,QWORD PTR [rbx+0x48]
  403d85:	mov    QWORD PTR [rax+rcx*8],rbp
  403d89:	mov    rax,QWORD PTR [rbx+0x50]
  403d8d:	mov    QWORD PTR [rax+rcx*8],r15
  403d91:	mov    rax,QWORD PTR [rbx+0x58]
  403d95:	mov    DWORD PTR [rax+rcx*4],r14d
  403d99:	add    DWORD PTR [rbx+0x40],0x1
  403d9d:	add    rsp,0x8
  403da1:	pop    rbx
  403da2:	pop    r14
  403da4:	pop    r15
  403da6:	pop    rbp
  403da7:	ret    
  403da8:	xor    edx,edx
  403daa:	mov    eax,ecx
  403dac:	div    esi
  403dae:	test   rdx,rdx
  403db1:	jne    403d81 <table_register_callback@@Base+0xb1>
  403db3:	jmp    403d3a <table_register_callback@@Base+0x6a>
  403db5:	test   eax,eax
  403db7:	jle    403d1d <table_register_callback@@Base+0x4d>
  403dbd:	mov    rcx,QWORD PTR [rbx+0x58]
  403dc1:	or     DWORD PTR [rcx+rax*4],r14d
  403dc5:	jmp    403d9d <table_register_callback@@Base+0xcd>
  403dc7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403dd0 <table_unregister_callback@@Base>:
  403dd0:	push   r15
  403dd2:	push   r14
  403dd4:	push   rbx
  403dd5:	movsxd rcx,DWORD PTR [rdi+0x40]
  403dd9:	test   rcx,rcx
  403ddc:	jle    403e09 <table_unregister_callback@@Base+0x39>
  403dde:	mov    r15,rdi
  403de1:	lea    r14,[rdi+0x48]
  403de5:	mov    rdi,QWORD PTR [rdi+0x48]
  403de9:	xor    eax,eax
  403deb:	nop    DWORD PTR [rax+rax*1+0x0]
  403df0:	cmp    QWORD PTR [rdi+rax*8],rsi
  403df4:	jne    403e00 <table_unregister_callback@@Base+0x30>
  403df6:	mov    rbx,QWORD PTR [r15+0x50]
  403dfa:	cmp    QWORD PTR [rbx+rax*8],rdx
  403dfe:	je     403e0f <table_unregister_callback@@Base+0x3f>
  403e00:	add    rax,0x1
  403e04:	cmp    rax,rcx
  403e07:	jl     403df0 <table_unregister_callback@@Base+0x20>
  403e09:	pop    rbx
  403e0a:	pop    r14
  403e0c:	pop    r15
  403e0e:	ret    
  403e0f:	cmp    eax,0xffffffff
  403e12:	je     403e09 <table_unregister_callback@@Base+0x39>
  403e14:	add    ecx,0xffffffff
  403e17:	cmp    ecx,eax
  403e19:	jle    403e8a <table_unregister_callback@@Base+0xba>
  403e1b:	mov    rcx,QWORD PTR [rdi+rax*8+0x8]
  403e20:	mov    QWORD PTR [rdi+rax*8],rcx
  403e24:	mov    rcx,QWORD PTR [r15+0x50]
  403e28:	mov    rdx,QWORD PTR [rcx+rax*8+0x8]
  403e2d:	mov    QWORD PTR [rcx+rax*8],rdx
  403e31:	mov    rcx,QWORD PTR [r15+0x58]
  403e35:	mov    edx,DWORD PTR [rcx+rax*4+0x4]
  403e39:	mov    DWORD PTR [rcx+rax*4],edx
  403e3c:	lea    rdx,[rax+0x1]
  403e40:	movsxd rax,DWORD PTR [r15+0x40]
  403e44:	add    rax,0xffffffffffffffff
  403e48:	mov    ecx,eax
  403e4a:	cmp    rdx,rax
  403e4d:	jge    403e8d <table_unregister_callback@@Base+0xbd>
  403e4f:	nop
  403e50:	mov    rax,QWORD PTR [r15+0x48]
  403e54:	mov    rcx,QWORD PTR [rax+rdx*8+0x8]
  403e59:	mov    QWORD PTR [rax+rdx*8],rcx
  403e5d:	mov    rax,QWORD PTR [r15+0x50]
  403e61:	mov    rcx,QWORD PTR [rax+rdx*8+0x8]
  403e66:	mov    QWORD PTR [rax+rdx*8],rcx
  403e6a:	mov    rax,QWORD PTR [r15+0x58]
  403e6e:	mov    ecx,DWORD PTR [rax+rdx*4+0x4]
  403e72:	mov    DWORD PTR [rax+rdx*4],ecx
  403e75:	lea    rdx,[rdx+0x1]
  403e79:	movsxd rax,DWORD PTR [r15+0x40]
  403e7d:	add    rax,0xffffffffffffffff
  403e81:	cmp    rdx,rax
  403e84:	jl     403e50 <table_unregister_callback@@Base+0x80>
  403e86:	mov    ecx,eax
  403e88:	jmp    403e8d <table_unregister_callback@@Base+0xbd>
  403e8a:	movsxd rax,ecx
  403e8d:	mov    DWORD PTR [r15+0x40],ecx
  403e91:	mov    rcx,QWORD PTR [r15+0x60]
  403e95:	mov    rdx,rax
  403e98:	or     rdx,rcx
  403e9b:	shr    rdx,0x20
  403e9f:	je     403eb1 <table_unregister_callback@@Base+0xe1>
  403ea1:	xor    edx,edx
  403ea3:	div    rcx
  403ea6:	test   rdx,rdx
  403ea9:	jne    403e09 <table_unregister_callback@@Base+0x39>
  403eaf:	jmp    403ebe <table_unregister_callback@@Base+0xee>
  403eb1:	xor    edx,edx
  403eb3:	div    ecx
  403eb5:	test   rdx,rdx
  403eb8:	jne    403e09 <table_unregister_callback@@Base+0x39>
  403ebe:	mov    rdi,QWORD PTR [r15+0x48]
  403ec2:	mov    rsi,QWORD PTR [r15+0x68]
  403ec6:	sub    rsi,rcx
  403ec9:	mov    QWORD PTR [r15+0x68],rsi
  403ecd:	je     403f0b <table_unregister_callback@@Base+0x13b>
  403ecf:	shl    rsi,0x3
  403ed3:	call   4030f0 <realloc@plt>
  403ed8:	mov    QWORD PTR [r15+0x48],rax
  403edc:	mov    rdi,QWORD PTR [r15+0x50]
  403ee0:	mov    rsi,QWORD PTR [r15+0x68]
  403ee4:	shl    rsi,0x3
  403ee8:	call   4030f0 <realloc@plt>
  403eed:	mov    QWORD PTR [r15+0x50],rax
  403ef1:	mov    rdi,QWORD PTR [r15+0x58]
  403ef5:	mov    rsi,QWORD PTR [r15+0x68]
  403ef9:	shl    rsi,0x2
  403efd:	call   4030f0 <realloc@plt>
  403f02:	mov    QWORD PTR [r15+0x58],rax
  403f06:	jmp    403e09 <table_unregister_callback@@Base+0x39>
  403f0b:	call   403030 <free@plt>
  403f10:	mov    rdi,QWORD PTR [r15+0x50]
  403f14:	call   403030 <free@plt>
  403f19:	mov    rdi,QWORD PTR [r15+0x58]
  403f1d:	call   403030 <free@plt>
  403f22:	vxorps xmm0,xmm0,xmm0
  403f26:	vmovups XMMWORD PTR [r14],xmm0
  403f2b:	mov    QWORD PTR [r14+0x10],0x0
  403f33:	jmp    403e09 <table_unregister_callback@@Base+0x39>
  403f38:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403f40 <table_notify@@Base>:
  403f40:	push   rbp
  403f41:	push   r15
  403f43:	push   r14
  403f45:	push   r12
  403f47:	push   rbx
  403f48:	mov    eax,DWORD PTR [rdi+0x40]
  403f4b:	test   eax,eax
  403f4d:	jle    403f94 <table_notify@@Base+0x54>
  403f4f:	mov    r12d,ecx
  403f52:	mov    r14d,edx
  403f55:	mov    r15d,esi
  403f58:	mov    rbp,rdi
  403f5b:	xor    ebx,ebx
  403f5d:	nop    DWORD PTR [rax]
  403f60:	mov    rcx,QWORD PTR [rbp+0x58]
  403f64:	test   DWORD PTR [rcx+rbx*4],r12d
  403f68:	je     403f88 <table_notify@@Base+0x48>
  403f6a:	mov    rax,QWORD PTR [rbp+0x48]
  403f6e:	mov    rcx,QWORD PTR [rbp+0x50]
  403f72:	mov    r8,QWORD PTR [rcx+rbx*8]
  403f76:	mov    rdi,rbp
  403f79:	mov    esi,r15d
  403f7c:	mov    edx,r14d
  403f7f:	mov    ecx,r12d
  403f82:	call   QWORD PTR [rax+rbx*8]
  403f85:	mov    eax,DWORD PTR [rbp+0x40]
  403f88:	add    rbx,0x1
  403f8c:	movsxd rcx,eax
  403f8f:	cmp    rbx,rcx
  403f92:	jl     403f60 <table_notify@@Base+0x20>
  403f94:	pop    rbx
  403f95:	pop    r12
  403f97:	pop    r14
  403f99:	pop    r15
  403f9b:	pop    rbp
  403f9c:	ret    
  403f9d:	nop    DWORD PTR [rax]

0000000000403fa0 <table_cell_init@@Base>:
  403fa0:	push   rbx
  403fa1:	mov    ebx,edx
  403fa3:	call   405640 <table_get_row_ptr@@Base>
  403fa8:	mov    rax,QWORD PTR [rax]
  403fab:	movsxd rcx,ebx
  403fae:	mov    QWORD PTR [rax+rcx*8],0x0
  403fb6:	pop    rbx
  403fb7:	ret    
  403fb8:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000403fc0 <table_get_cell_ptr@@Base>:
  403fc0:	push   rbx
  403fc1:	mov    ebx,edx
  403fc3:	call   405640 <table_get_row_ptr@@Base>
  403fc8:	movsxd rcx,ebx
  403fcb:	shl    rcx,0x3
  403fcf:	add    rcx,QWORD PTR [rax]
  403fd2:	mov    rax,rcx
  403fd5:	pop    rbx
  403fd6:	ret    
  403fd7:	nop    WORD PTR [rax+rax*1+0x0]

0000000000403fe0 <table_cell_destroy@@Base>:
  403fe0:	push   rbp
  403fe1:	push   r14
  403fe3:	push   rbx
  403fe4:	mov    ebx,edx
  403fe6:	mov    r14d,esi
  403fe9:	mov    rbp,rdi
  403fec:	mov    esi,edx
  403fee:	call   404a30 <table_get_column_data_type@@Base>
  403ff3:	cmp    eax,0x17
  403ff6:	je     40401b <table_cell_destroy@@Base+0x3b>
  403ff8:	mov    rdi,rbp
  403ffb:	mov    esi,r14d
  403ffe:	call   405640 <table_get_row_ptr@@Base>
  404003:	mov    rax,QWORD PTR [rax]
  404006:	movsxd rcx,ebx
  404009:	mov    rdi,QWORD PTR [rax+rcx*8]
  40400d:	test   rdi,rdi
  404010:	je     40401b <table_cell_destroy@@Base+0x3b>
  404012:	pop    rbx
  404013:	pop    r14
  404015:	pop    rbp
  404016:	jmp    403030 <free@plt>
  40401b:	pop    rbx
  40401c:	pop    r14
  40401e:	pop    rbp
  40401f:	ret    

0000000000404020 <table_cell_to_buffer@@Base>:
  404020:	push   rbp
  404021:	push   r15
  404023:	push   r14
  404025:	push   r12
  404027:	push   rbx
  404028:	sub    rsp,0x10
  40402c:	mov    r14,r8
  40402f:	mov    r15,rcx
  404032:	mov    ebp,edx
  404034:	mov    r12d,esi
  404037:	mov    rbx,rdi
  40403a:	mov    esi,edx
  40403c:	call   404a30 <table_get_column_data_type@@Base>
  404041:	cmp    eax,0x17
  404044:	ja     4042d5 <table_cell_to_buffer@@Base+0x2b5>
  40404a:	mov    eax,eax
  40404c:	lea    rcx,[rip+0x30b5]        # 407108 <_IO_stdin_used@@Base+0x108>
  404053:	movsxd rax,DWORD PTR [rcx+rax*4]
  404057:	add    rax,rcx
  40405a:	jmp    rax
  40405c:	mov    rdi,rbx
  40405f:	mov    esi,r12d
  404062:	mov    edx,ebp
  404064:	call   4054a0 <table_get_int@@Base>
  404069:	jmp    4040ef <table_cell_to_buffer@@Base+0xcf>
  40406e:	mov    rdi,rbx
  404071:	mov    esi,r12d
  404074:	mov    edx,ebp
  404076:	call   4054b0 <table_get_uint@@Base>
  40407b:	jmp    404103 <table_cell_to_buffer@@Base+0xe3>
  404080:	mov    rdi,rbx
  404083:	mov    esi,r12d
  404086:	mov    edx,ebp
  404088:	call   4054c0 <table_get_int8@@Base>
  40408d:	movsx  ecx,al
  404090:	jmp    40429b <table_cell_to_buffer@@Base+0x27b>
  404095:	mov    rdi,rbx
  404098:	mov    esi,r12d
  40409b:	mov    edx,ebp
  40409d:	call   4054d0 <table_get_uint8@@Base>
  4040a2:	movzx  ecx,al
  4040a5:	lea    rdx,[rip+0x311c]        # 4071c8 <_IO_stdin_used@@Base+0x1c8>
  4040ac:	jmp    4042a2 <table_cell_to_buffer@@Base+0x282>
  4040b1:	mov    rdi,rbx
  4040b4:	mov    esi,r12d
  4040b7:	mov    edx,ebp
  4040b9:	call   4054e0 <table_get_int16@@Base>
  4040be:	movsx  ecx,ax
  4040c1:	jmp    40429b <table_cell_to_buffer@@Base+0x27b>
  4040c6:	mov    rdi,rbx
  4040c9:	mov    esi,r12d
  4040cc:	mov    edx,ebp
  4040ce:	call   4054f0 <table_get_uint16@@Base>
  4040d3:	movzx  ecx,ax
  4040d6:	lea    rdx,[rip+0x30eb]        # 4071c8 <_IO_stdin_used@@Base+0x1c8>
  4040dd:	jmp    4042a2 <table_cell_to_buffer@@Base+0x282>
  4040e2:	mov    rdi,rbx
  4040e5:	mov    esi,r12d
  4040e8:	mov    edx,ebp
  4040ea:	call   405500 <table_get_int32@@Base>
  4040ef:	mov    ecx,eax
  4040f1:	jmp    40429b <table_cell_to_buffer@@Base+0x27b>
  4040f6:	mov    rdi,rbx
  4040f9:	mov    esi,r12d
  4040fc:	mov    edx,ebp
  4040fe:	call   405510 <table_get_uint32@@Base>
  404103:	mov    ecx,eax
  404105:	lea    rdx,[rip+0x30bc]        # 4071c8 <_IO_stdin_used@@Base+0x1c8>
  40410c:	jmp    4042a2 <table_cell_to_buffer@@Base+0x282>
  404111:	mov    rdi,rbx
  404114:	mov    esi,r12d
  404117:	mov    edx,ebp
  404119:	call   405520 <table_get_int64@@Base>
  40411e:	jmp    404174 <table_cell_to_buffer@@Base+0x154>
  404120:	mov    rdi,rbx
  404123:	mov    esi,r12d
  404126:	mov    edx,ebp
  404128:	call   405530 <table_get_uint64@@Base>
  40412d:	jmp    404190 <table_cell_to_buffer@@Base+0x170>
  40412f:	mov    rdi,rbx
  404132:	mov    esi,r12d
  404135:	mov    edx,ebp
  404137:	call   405540 <table_get_short@@Base>
  40413c:	movsx  ecx,ax
  40413f:	lea    rdx,[rip+0x308d]        # 4071d3 <_IO_stdin_used@@Base+0x1d3>
  404146:	jmp    4042a2 <table_cell_to_buffer@@Base+0x282>
  40414b:	mov    rdi,rbx
  40414e:	mov    esi,r12d
  404151:	mov    edx,ebp
  404153:	call   405550 <table_get_ushort@@Base>
  404158:	movzx  ecx,ax
  40415b:	lea    rdx,[rip+0x3075]        # 4071d7 <_IO_stdin_used@@Base+0x1d7>
  404162:	jmp    4042a2 <table_cell_to_buffer@@Base+0x282>
  404167:	mov    rdi,rbx
  40416a:	mov    esi,r12d
  40416d:	mov    edx,ebp
  40416f:	call   405560 <table_get_long@@Base>
  404174:	mov    rcx,rax
  404177:	lea    rdx,[rip+0x304d]        # 4071cb <_IO_stdin_used@@Base+0x1cb>
  40417e:	jmp    4042c8 <table_cell_to_buffer@@Base+0x2a8>
  404183:	mov    rdi,rbx
  404186:	mov    esi,r12d
  404189:	mov    edx,ebp
  40418b:	call   405570 <table_get_ulong@@Base>
  404190:	mov    rcx,rax
  404193:	lea    rdx,[rip+0x3035]        # 4071cf <_IO_stdin_used@@Base+0x1cf>
  40419a:	jmp    4042c8 <table_cell_to_buffer@@Base+0x2a8>
  40419f:	mov    rdi,rbx
  4041a2:	mov    esi,r12d
  4041a5:	mov    edx,ebp
  4041a7:	call   405580 <table_get_llong@@Base>
  4041ac:	mov    rcx,rax
  4041af:	lea    rdx,[rip+0x3025]        # 4071db <_IO_stdin_used@@Base+0x1db>
  4041b6:	jmp    4042c8 <table_cell_to_buffer@@Base+0x2a8>
  4041bb:	mov    rdi,rbx
  4041be:	mov    esi,r12d
  4041c1:	mov    edx,ebp
  4041c3:	call   405590 <table_get_ullong@@Base>
  4041c8:	mov    rcx,rax
  4041cb:	lea    rdx,[rip+0x300e]        # 4071e0 <_IO_stdin_used@@Base+0x1e0>
  4041d2:	jmp    4042c8 <table_cell_to_buffer@@Base+0x2a8>
  4041d7:	mov    rdi,rbx
  4041da:	mov    esi,r12d
  4041dd:	mov    edx,ebp
  4041df:	call   4055a0 <table_get_float@@Base>
  4041e4:	vcvtss2sd xmm0,xmm0,xmm0
  4041e8:	lea    rdx,[rip+0x2ff9]        # 4071e8 <_IO_stdin_used@@Base+0x1e8>
  4041ef:	jmp    404205 <table_cell_to_buffer@@Base+0x1e5>
  4041f1:	mov    rdi,rbx
  4041f4:	mov    esi,r12d
  4041f7:	mov    edx,ebp
  4041f9:	call   4055b0 <table_get_double@@Base>
  4041fe:	lea    rdx,[rip+0x2fe6]        # 4071eb <_IO_stdin_used@@Base+0x1eb>
  404205:	mov    al,0x1
  404207:	mov    rdi,r15
  40420a:	mov    rsi,r14
  40420d:	call   403080 <snprintf@plt>
  404212:	jmp    4042d5 <table_cell_to_buffer@@Base+0x2b5>
  404217:	mov    rdi,rbx
  40421a:	mov    esi,r12d
  40421d:	mov    edx,ebp
  40421f:	call   4055c0 <table_get_ldouble@@Base>
  404224:	fstp   TBYTE PTR [rsp]
  404227:	lea    rdx,[rip+0x2fc1]        # 4071ef <_IO_stdin_used@@Base+0x1ef>
  40422e:	xor    eax,eax
  404230:	mov    rdi,r15
  404233:	mov    rsi,r14
  404236:	call   403080 <snprintf@plt>
  40423b:	jmp    4042d5 <table_cell_to_buffer@@Base+0x2b5>
  404240:	mov    rdi,rbx
  404243:	mov    esi,r12d
  404246:	mov    edx,ebp
  404248:	call   4055d0 <table_get_char@@Base>
  40424d:	movsx  ecx,al
  404250:	lea    rdx,[rip+0x2f9c]        # 4071f3 <_IO_stdin_used@@Base+0x1f3>
  404257:	jmp    4042a2 <table_cell_to_buffer@@Base+0x282>
  404259:	mov    rdi,rbx
  40425c:	mov    esi,r12d
  40425f:	mov    edx,ebp
  404261:	call   4055e0 <table_get_uchar@@Base>
  404266:	movzx  ecx,al
  404269:	lea    rdx,[rip+0x2f83]        # 4071f3 <_IO_stdin_used@@Base+0x1f3>
  404270:	jmp    4042a2 <table_cell_to_buffer@@Base+0x282>
  404272:	mov    rdi,rbx
  404275:	mov    esi,r12d
  404278:	mov    edx,ebp
  40427a:	call   4055f0 <table_get_string@@Base>
  40427f:	mov    rcx,rax
  404282:	lea    rdx,[rip+0x2f5c]        # 4071e5 <_IO_stdin_used@@Base+0x1e5>
  404289:	jmp    4042c8 <table_cell_to_buffer@@Base+0x2a8>
  40428b:	mov    rdi,rbx
  40428e:	mov    esi,r12d
  404291:	mov    edx,ebp
  404293:	call   405490 <table_get_bool@@Base>
  404298:	movzx  ecx,al
  40429b:	lea    rdx,[rip+0x2d66]        # 407008 <_IO_stdin_used@@Base+0x8>
  4042a2:	xor    eax,eax
  4042a4:	mov    rdi,r15
  4042a7:	mov    rsi,r14
  4042aa:	call   403080 <snprintf@plt>
  4042af:	jmp    4042d5 <table_cell_to_buffer@@Base+0x2b5>
  4042b1:	mov    rdi,rbx
  4042b4:	mov    esi,r12d
  4042b7:	mov    edx,ebp
  4042b9:	call   405600 <table_get_ptr@@Base>
  4042be:	mov    rcx,rax
  4042c1:	lea    rdx,[rip+0x2f2e]        # 4071f6 <_IO_stdin_used@@Base+0x1f6>
  4042c8:	xor    eax,eax
  4042ca:	mov    rdi,r15
  4042cd:	mov    rsi,r14
  4042d0:	call   403080 <snprintf@plt>
  4042d5:	xor    eax,eax
  4042d7:	add    rsp,0x10
  4042db:	pop    rbx
  4042dc:	pop    r12
  4042de:	pop    r14
  4042e0:	pop    r15
  4042e2:	pop    rbp
  4042e3:	ret    
  4042e4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4042ee:	xchg   ax,ax

00000000004042f0 <table_cell_from_buffer@@Base>:
  4042f0:	push   rbp
  4042f1:	push   r15
  4042f3:	push   r14
  4042f5:	push   rbx
  4042f6:	sub    rsp,0x118
  4042fd:	mov    rbx,rcx
  404300:	mov    r15d,edx
  404303:	mov    r14d,esi
  404306:	mov    rbp,rdi
  404309:	mov    esi,edx
  40430b:	call   404a30 <table_get_column_data_type@@Base>
  404310:	cmp    eax,0x17
  404313:	ja     4048bf <table_cell_from_buffer@@Base+0x5cf>
  404319:	mov    eax,eax
  40431b:	lea    rcx,[rip+0x2e46]        # 407168 <_IO_stdin_used@@Base+0x168>
  404322:	movsxd rax,DWORD PTR [rcx+rax*4]
  404326:	add    rax,rcx
  404329:	jmp    rax
  40432b:	lea    rsi,[rip+0x2cd6]        # 407008 <_IO_stdin_used@@Base+0x8>
  404332:	lea    rdx,[rsp+0x10]
  404337:	xor    eax,eax
  404339:	mov    rdi,rbx
  40433c:	call   4030e0 <__isoc99_sscanf@plt>
  404341:	mov    ebx,0xffffffff
  404346:	cmp    eax,0x1
  404349:	jne    4048c1 <table_cell_from_buffer@@Base+0x5d1>
  40434f:	mov    ecx,DWORD PTR [rsp+0x10]
  404353:	mov    rdi,rbp
  404356:	mov    esi,r14d
  404359:	mov    edx,r15d
  40435c:	call   405c80 <table_set_int@@Base>
  404361:	jmp    4048bf <table_cell_from_buffer@@Base+0x5cf>
  404366:	lea    rsi,[rip+0x2e5b]        # 4071c8 <_IO_stdin_used@@Base+0x1c8>
  40436d:	lea    rdx,[rsp+0x10]
  404372:	xor    eax,eax
  404374:	mov    rdi,rbx
  404377:	call   4030e0 <__isoc99_sscanf@plt>
  40437c:	mov    ebx,0xffffffff
  404381:	cmp    eax,0x1
  404384:	jne    4048c1 <table_cell_from_buffer@@Base+0x5d1>
  40438a:	mov    ecx,DWORD PTR [rsp+0x10]
  40438e:	mov    rdi,rbp
  404391:	mov    esi,r14d
  404394:	mov    edx,r15d
  404397:	call   405d00 <table_set_uint@@Base>
  40439c:	jmp    4048bf <table_cell_from_buffer@@Base+0x5cf>
  4043a1:	lea    rsi,[rip+0x2e51]        # 4071f9 <_IO_stdin_used@@Base+0x1f9>
  4043a8:	lea    rdx,[rsp+0x10]
  4043ad:	xor    eax,eax
  4043af:	mov    rdi,rbx
  4043b2:	call   4030e0 <__isoc99_sscanf@plt>
  4043b7:	mov    ebx,0xffffffff
  4043bc:	cmp    eax,0x1
  4043bf:	jne    4048c1 <table_cell_from_buffer@@Base+0x5d1>
  4043c5:	movsx  ecx,BYTE PTR [rsp+0x10]
  4043ca:	mov    rdi,rbp
  4043cd:	mov    esi,r14d
  4043d0:	mov    edx,r15d
  4043d3:	call   405d80 <table_set_int8@@Base>
  4043d8:	jmp    4048bf <table_cell_from_buffer@@Base+0x5cf>
  4043dd:	lea    rsi,[rip+0x2e1a]        # 4071fe <_IO_stdin_used@@Base+0x1fe>
  4043e4:	lea    rdx,[rsp+0x10]
  4043e9:	xor    eax,eax
  4043eb:	mov    rdi,rbx
  4043ee:	call   4030e0 <__isoc99_sscanf@plt>
  4043f3:	mov    ebx,0xffffffff
  4043f8:	cmp    eax,0x1
  4043fb:	jne    4048c1 <table_cell_from_buffer@@Base+0x5d1>
  404401:	movzx  ecx,BYTE PTR [rsp+0x10]
  404406:	mov    rdi,rbp
  404409:	mov    esi,r14d
  40440c:	mov    edx,r15d
  40440f:	call   405e00 <table_set_uint8@@Base>
  404414:	jmp    4048bf <table_cell_from_buffer@@Base+0x5cf>
  404419:	lea    rsi,[rip+0x2db3]        # 4071d3 <_IO_stdin_used@@Base+0x1d3>
  404420:	lea    rdx,[rsp+0x10]
  404425:	xor    eax,eax
  404427:	mov    rdi,rbx
  40442a:	call   4030e0 <__isoc99_sscanf@plt>
  40442f:	mov    ebx,0xffffffff
  404434:	cmp    eax,0x1
  404437:	jne    4048c1 <table_cell_from_buffer@@Base+0x5d1>
  40443d:	movsx  ecx,WORD PTR [rsp+0x10]
  404442:	mov    rdi,rbp
  404445:	mov    esi,r14d
  404448:	mov    edx,r15d
  40444b:	call   405e80 <table_set_int16@@Base>
  404450:	jmp    4048bf <table_cell_from_buffer@@Base+0x5cf>
  404455:	lea    rsi,[rip+0x2d7b]        # 4071d7 <_IO_stdin_used@@Base+0x1d7>
  40445c:	lea    rdx,[rsp+0x10]
  404461:	xor    eax,eax
  404463:	mov    rdi,rbx
  404466:	call   4030e0 <__isoc99_sscanf@plt>
  40446b:	mov    ebx,0xffffffff
  404470:	cmp    eax,0x1
  404473:	jne    4048c1 <table_cell_from_buffer@@Base+0x5d1>
  404479:	movzx  ecx,WORD PTR [rsp+0x10]
  40447e:	mov    rdi,rbp
  404481:	mov    esi,r14d
  404484:	mov    edx,r15d
  404487:	call   405f00 <table_set_uint16@@Base>
  40448c:	jmp    4048bf <table_cell_from_buffer@@Base+0x5cf>
  404491:	lea    rsi,[rip+0x2b70]        # 407008 <_IO_stdin_used@@Base+0x8>
  404498:	lea    rdx,[rsp+0x10]
  40449d:	xor    eax,eax
  40449f:	mov    rdi,rbx
  4044a2:	call   4030e0 <__isoc99_sscanf@plt>
  4044a7:	mov    ebx,0xffffffff
  4044ac:	cmp    eax,0x1
  4044af:	jne    4048c1 <table_cell_from_buffer@@Base+0x5d1>
  4044b5:	mov    ecx,DWORD PTR [rsp+0x10]
  4044b9:	mov    rdi,rbp
  4044bc:	mov    esi,r14d
  4044bf:	mov    edx,r15d
  4044c2:	call   405f80 <table_set_int32@@Base>
  4044c7:	jmp    4048bf <table_cell_from_buffer@@Base+0x5cf>
  4044cc:	lea    rsi,[rip+0x2cf5]        # 4071c8 <_IO_stdin_used@@Base+0x1c8>
  4044d3:	lea    rdx,[rsp+0x10]
  4044d8:	xor    eax,eax
  4044da:	mov    rdi,rbx
  4044dd:	call   4030e0 <__isoc99_sscanf@plt>
  4044e2:	mov    ebx,0xffffffff
  4044e7:	cmp    eax,0x1
  4044ea:	jne    4048c1 <table_cell_from_buffer@@Base+0x5d1>
  4044f0:	mov    ecx,DWORD PTR [rsp+0x10]
  4044f4:	mov    rdi,rbp
  4044f7:	mov    esi,r14d
  4044fa:	mov    edx,r15d
  4044fd:	call   406000 <table_set_uint32@@Base>
  404502:	jmp    4048bf <table_cell_from_buffer@@Base+0x5cf>
  404507:	lea    rsi,[rip+0x2cbd]        # 4071cb <_IO_stdin_used@@Base+0x1cb>
  40450e:	lea    rdx,[rsp+0x10]
  404513:	xor    eax,eax
  404515:	mov    rdi,rbx
  404518:	call   4030e0 <__isoc99_sscanf@plt>
  40451d:	mov    ebx,0xffffffff
  404522:	cmp    eax,0x1
  404525:	jne    4048c1 <table_cell_from_buffer@@Base+0x5d1>
  40452b:	mov    rcx,QWORD PTR [rsp+0x10]
  404530:	mov    rdi,rbp
  404533:	mov    esi,r14d
  404536:	mov    edx,r15d
  404539:	call   406080 <table_set_int64@@Base>
  40453e:	jmp    4048bf <table_cell_from_buffer@@Base+0x5cf>
  404543:	lea    rsi,[rip+0x2c85]        # 4071cf <_IO_stdin_used@@Base+0x1cf>
  40454a:	lea    rdx,[rsp+0x10]
  40454f:	xor    eax,eax
  404551:	mov    rdi,rbx
  404554:	call   4030e0 <__isoc99_sscanf@plt>
  404559:	mov    ebx,0xffffffff
  40455e:	cmp    eax,0x1
  404561:	jne    4048c1 <table_cell_from_buffer@@Base+0x5d1>
  404567:	mov    rcx,QWORD PTR [rsp+0x10]
  40456c:	mov    rdi,rbp
  40456f:	mov    esi,r14d
  404572:	mov    edx,r15d
  404575:	call   406100 <table_set_uint64@@Base>
  40457a:	jmp    4048bf <table_cell_from_buffer@@Base+0x5cf>
  40457f:	lea    rsi,[rip+0x2c4d]        # 4071d3 <_IO_stdin_used@@Base+0x1d3>
  404586:	lea    rdx,[rsp+0x10]
  40458b:	xor    eax,eax
  40458d:	mov    rdi,rbx
  404590:	call   4030e0 <__isoc99_sscanf@plt>
  404595:	mov    ebx,0xffffffff
  40459a:	cmp    eax,0x1
  40459d:	jne    4048c1 <table_cell_from_buffer@@Base+0x5d1>
  4045a3:	movsx  ecx,WORD PTR [rsp+0x10]
  4045a8:	mov    rdi,rbp
  4045ab:	mov    esi,r14d
  4045ae:	mov    edx,r15d
  4045b1:	call   406180 <table_set_short@@Base>
  4045b6:	jmp    4048bf <table_cell_from_buffer@@Base+0x5cf>
  4045bb:	lea    rsi,[rip+0x2c15]        # 4071d7 <_IO_stdin_used@@Base+0x1d7>
  4045c2:	lea    rdx,[rsp+0x10]
  4045c7:	xor    eax,eax
  4045c9:	mov    rdi,rbx
  4045cc:	call   4030e0 <__isoc99_sscanf@plt>
  4045d1:	mov    ebx,0xffffffff
  4045d6:	cmp    eax,0x1
  4045d9:	jne    4048c1 <table_cell_from_buffer@@Base+0x5d1>
  4045df:	movzx  ecx,WORD PTR [rsp+0x10]
  4045e4:	mov    rdi,rbp
  4045e7:	mov    esi,r14d
  4045ea:	mov    edx,r15d
  4045ed:	call   406200 <table_set_ushort@@Base>
  4045f2:	jmp    4048bf <table_cell_from_buffer@@Base+0x5cf>
  4045f7:	lea    rsi,[rip+0x2bcd]        # 4071cb <_IO_stdin_used@@Base+0x1cb>
  4045fe:	lea    rdx,[rsp+0x10]
  404603:	xor    eax,eax
  404605:	mov    rdi,rbx
  404608:	call   4030e0 <__isoc99_sscanf@plt>
  40460d:	mov    ebx,0xffffffff
  404612:	cmp    eax,0x1
  404615:	jne    4048c1 <table_cell_from_buffer@@Base+0x5d1>
  40461b:	mov    rcx,QWORD PTR [rsp+0x10]
  404620:	mov    rdi,rbp
  404623:	mov    esi,r14d
  404626:	mov    edx,r15d
  404629:	call   406280 <table_set_long@@Base>
  40462e:	jmp    4048bf <table_cell_from_buffer@@Base+0x5cf>
  404633:	lea    rsi,[rip+0x2b95]        # 4071cf <_IO_stdin_used@@Base+0x1cf>
  40463a:	lea    rdx,[rsp+0x10]
  40463f:	xor    eax,eax
  404641:	mov    rdi,rbx
  404644:	call   4030e0 <__isoc99_sscanf@plt>
  404649:	mov    ebx,0xffffffff
  40464e:	cmp    eax,0x1
  404651:	jne    4048c1 <table_cell_from_buffer@@Base+0x5d1>
  404657:	mov    rcx,QWORD PTR [rsp+0x10]
  40465c:	mov    rdi,rbp
  40465f:	mov    esi,r14d
  404662:	mov    edx,r15d
  404665:	call   406300 <table_set_ulong@@Base>
  40466a:	jmp    4048bf <table_cell_from_buffer@@Base+0x5cf>
  40466f:	lea    rsi,[rip+0x2b65]        # 4071db <_IO_stdin_used@@Base+0x1db>
  404676:	lea    rdx,[rsp+0x10]
  40467b:	xor    eax,eax
  40467d:	mov    rdi,rbx
  404680:	call   4030e0 <__isoc99_sscanf@plt>
  404685:	mov    ebx,0xffffffff
  40468a:	cmp    eax,0x1
  40468d:	jne    4048c1 <table_cell_from_buffer@@Base+0x5d1>
  404693:	mov    rcx,QWORD PTR [rsp+0x10]
  404698:	mov    rdi,rbp
  40469b:	mov    esi,r14d
  40469e:	mov    edx,r15d
  4046a1:	call   406380 <table_set_llong@@Base>
  4046a6:	jmp    4048bf <table_cell_from_buffer@@Base+0x5cf>
  4046ab:	lea    rsi,[rip+0x2b2e]        # 4071e0 <_IO_stdin_used@@Base+0x1e0>
  4046b2:	lea    rdx,[rsp+0x10]
  4046b7:	xor    eax,eax
  4046b9:	mov    rdi,rbx
  4046bc:	call   4030e0 <__isoc99_sscanf@plt>
  4046c1:	mov    ebx,0xffffffff
  4046c6:	cmp    eax,0x1
  4046c9:	jne    4048c1 <table_cell_from_buffer@@Base+0x5d1>
  4046cf:	mov    rcx,QWORD PTR [rsp+0x10]
  4046d4:	mov    rdi,rbp
  4046d7:	mov    esi,r14d
  4046da:	mov    edx,r15d
  4046dd:	call   406400 <table_set_ullong@@Base>
  4046e2:	jmp    4048bf <table_cell_from_buffer@@Base+0x5cf>
  4046e7:	lea    rsi,[rip+0x2afa]        # 4071e8 <_IO_stdin_used@@Base+0x1e8>
  4046ee:	lea    rdx,[rsp+0x10]
  4046f3:	xor    eax,eax
  4046f5:	mov    rdi,rbx
  4046f8:	call   4030e0 <__isoc99_sscanf@plt>
  4046fd:	mov    ebx,0xffffffff
  404702:	cmp    eax,0x1
  404705:	jne    4048c1 <table_cell_from_buffer@@Base+0x5d1>
  40470b:	vmovss xmm0,DWORD PTR [rsp+0x10]
  404711:	mov    rdi,rbp
  404714:	mov    esi,r14d
  404717:	mov    edx,r15d
  40471a:	call   406480 <table_set_float@@Base>
  40471f:	jmp    4048bf <table_cell_from_buffer@@Base+0x5cf>
  404724:	lea    rsi,[rip+0x2ac0]        # 4071eb <_IO_stdin_used@@Base+0x1eb>
  40472b:	lea    rdx,[rsp+0x10]
  404730:	xor    eax,eax
  404732:	mov    rdi,rbx
  404735:	call   4030e0 <__isoc99_sscanf@plt>
  40473a:	mov    ebx,0xffffffff
  40473f:	cmp    eax,0x1
  404742:	jne    4048c1 <table_cell_from_buffer@@Base+0x5d1>
  404748:	vmovsd xmm0,QWORD PTR [rsp+0x10]
  40474e:	mov    rdi,rbp
  404751:	mov    esi,r14d
  404754:	mov    edx,r15d
  404757:	call   406510 <table_set_double@@Base>
  40475c:	jmp    4048bf <table_cell_from_buffer@@Base+0x5cf>
  404761:	lea    rsi,[rip+0x2a87]        # 4071ef <_IO_stdin_used@@Base+0x1ef>
  404768:	lea    rdx,[rsp+0x10]
  40476d:	xor    eax,eax
  40476f:	mov    rdi,rbx
  404772:	call   4030e0 <__isoc99_sscanf@plt>
  404777:	mov    ebx,0xffffffff
  40477c:	cmp    eax,0x1
  40477f:	jne    4048c1 <table_cell_from_buffer@@Base+0x5d1>
  404785:	fld    TBYTE PTR [rsp+0x10]
  404789:	fstp   TBYTE PTR [rsp]
  40478c:	mov    rdi,rbp
  40478f:	mov    esi,r14d
  404792:	mov    edx,r15d
  404795:	call   4065a0 <table_set_ldouble@@Base>
  40479a:	jmp    4048bf <table_cell_from_buffer@@Base+0x5cf>
  40479f:	lea    rsi,[rip+0x2a4d]        # 4071f3 <_IO_stdin_used@@Base+0x1f3>
  4047a6:	lea    rdx,[rsp+0x10]
  4047ab:	xor    eax,eax
  4047ad:	mov    rdi,rbx
  4047b0:	call   4030e0 <__isoc99_sscanf@plt>
  4047b5:	mov    ebx,0xffffffff
  4047ba:	cmp    eax,0x1
  4047bd:	jne    4048c1 <table_cell_from_buffer@@Base+0x5d1>
  4047c3:	movsx  ecx,BYTE PTR [rsp+0x10]
  4047c8:	mov    rdi,rbp
  4047cb:	mov    esi,r14d
  4047ce:	mov    edx,r15d
  4047d1:	call   406650 <table_set_char@@Base>
  4047d6:	jmp    4048bf <table_cell_from_buffer@@Base+0x5cf>
  4047db:	lea    rsi,[rip+0x2a11]        # 4071f3 <_IO_stdin_used@@Base+0x1f3>
  4047e2:	lea    rdx,[rsp+0x10]
  4047e7:	xor    eax,eax
  4047e9:	mov    rdi,rbx
  4047ec:	call   4030e0 <__isoc99_sscanf@plt>
  4047f1:	mov    ebx,0xffffffff
  4047f6:	cmp    eax,0x1
  4047f9:	jne    4048c1 <table_cell_from_buffer@@Base+0x5d1>
  4047ff:	movzx  ecx,BYTE PTR [rsp+0x10]
  404804:	mov    rdi,rbp
  404807:	mov    esi,r14d
  40480a:	mov    edx,r15d
  40480d:	call   4066d0 <table_set_uchar@@Base>
  404812:	jmp    4048bf <table_cell_from_buffer@@Base+0x5cf>
  404817:	lea    rsi,[rip+0x29c7]        # 4071e5 <_IO_stdin_used@@Base+0x1e5>
  40481e:	lea    rdx,[rsp+0x10]
  404823:	xor    eax,eax
  404825:	mov    rdi,rbx
  404828:	call   4030e0 <__isoc99_sscanf@plt>
  40482d:	mov    ebx,0xffffffff
  404832:	cmp    eax,0x1
  404835:	jne    4048c1 <table_cell_from_buffer@@Base+0x5d1>
  40483b:	lea    rcx,[rsp+0x10]
  404840:	mov    rdi,rbp
  404843:	mov    esi,r14d
  404846:	mov    edx,r15d
  404849:	call   406640 <table_set_string@@Base>
  40484e:	jmp    4048bf <table_cell_from_buffer@@Base+0x5cf>
  404850:	lea    rsi,[rip+0x27b1]        # 407008 <_IO_stdin_used@@Base+0x8>
  404857:	lea    rdx,[rsp+0x10]
  40485c:	xor    eax,eax
  40485e:	mov    rdi,rbx
  404861:	call   4030e0 <__isoc99_sscanf@plt>
  404866:	mov    ebx,0xffffffff
  40486b:	cmp    eax,0x1
  40486e:	jne    4048c1 <table_cell_from_buffer@@Base+0x5d1>
  404870:	cmp    DWORD PTR [rsp+0x10],0x0
  404875:	je     4048d1 <table_cell_from_buffer@@Base+0x5e1>
  404877:	mov    ecx,0x1
  40487c:	mov    rdi,rbp
  40487f:	mov    esi,r14d
  404882:	mov    edx,r15d
  404885:	call   405c00 <table_set_bool@@Base>
  40488a:	jmp    4048bf <table_cell_from_buffer@@Base+0x5cf>
  40488c:	lea    rsi,[rip+0x2963]        # 4071f6 <_IO_stdin_used@@Base+0x1f6>
  404893:	lea    rdx,[rsp+0x10]
  404898:	xor    eax,eax
  40489a:	mov    rdi,rbx
  40489d:	call   4030e0 <__isoc99_sscanf@plt>
  4048a2:	mov    ebx,0xffffffff
  4048a7:	cmp    eax,0x1
  4048aa:	jne    4048c1 <table_cell_from_buffer@@Base+0x5d1>
  4048ac:	mov    rcx,QWORD PTR [rsp+0x10]
  4048b1:	mov    rdi,rbp
  4048b4:	mov    esi,r14d
  4048b7:	mov    edx,r15d
  4048ba:	call   406750 <table_set_ptr@@Base>
  4048bf:	xor    ebx,ebx
  4048c1:	mov    eax,ebx
  4048c3:	add    rsp,0x118
  4048ca:	pop    rbx
  4048cb:	pop    r14
  4048cd:	pop    r15
  4048cf:	pop    rbp
  4048d0:	ret    
  4048d1:	xor    ebx,ebx
  4048d3:	xor    ecx,ecx
  4048d5:	mov    rdi,rbp
  4048d8:	mov    esi,r14d
  4048db:	mov    edx,r15d
  4048de:	call   405c00 <table_set_bool@@Base>
  4048e3:	jmp    4048c1 <table_cell_from_buffer@@Base+0x5d1>
  4048e5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4048ef:	nop

00000000004048f0 <table_cell_nullify@@Base>:
  4048f0:	push   rbp
  4048f1:	push   rbx
  4048f2:	push   rax
  4048f3:	mov    ebp,edx
  4048f5:	call   405640 <table_get_row_ptr@@Base>
  4048fa:	mov    rbx,QWORD PTR [rax]
  4048fd:	movsxd rbp,ebp
  404900:	mov    rdi,QWORD PTR [rbx+rbp*8]
  404904:	test   rdi,rdi
  404907:	je     404916 <table_cell_nullify@@Base+0x26>
  404909:	call   403030 <free@plt>
  40490e:	mov    QWORD PTR [rbx+rbp*8],0x0
  404916:	xor    eax,eax
  404918:	add    rsp,0x8
  40491c:	pop    rbx
  40491d:	pop    rbp
  40491e:	ret    
  40491f:	nop

0000000000404920 <table_column_init@@Base>:
  404920:	push   rbp
  404921:	push   r15
  404923:	push   r14
  404925:	push   r12
  404927:	push   rbx
  404928:	mov    r14,r8
  40492b:	mov    r15d,ecx
  40492e:	mov    r12,rdx
  404931:	mov    rbp,QWORD PTR [rdi]
  404934:	movsxd rbx,esi
  404937:	mov    rdi,rdx
  40493a:	call   403060 <strlen@plt>
  40493f:	lea    rdi,[rax+0x1]
  404943:	call   4030d0 <malloc@plt>
  404948:	lea    rbx,[rbx+rbx*2]
  40494c:	mov    QWORD PTR [rbp+rbx*8+0x0],rax
  404951:	test   rax,rax
  404954:	je     404961 <table_column_init@@Base+0x41>
  404956:	mov    rdi,rax
  404959:	mov    rsi,r12
  40495c:	call   403040 <strcpy@plt>
  404961:	mov    DWORD PTR [rbp+rbx*8+0x8],r15d
  404966:	mov    QWORD PTR [rbp+rbx*8+0x10],r14
  40496b:	pop    rbx
  40496c:	pop    r12
  40496e:	pop    r14
  404970:	pop    r15
  404972:	pop    rbp
  404973:	ret    
  404974:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40497e:	xchg   ax,ax

0000000000404980 <table_get_col_ptr@@Base>:
  404980:	movsxd rax,esi
  404983:	lea    rax,[rax+rax*2]
  404987:	shl    rax,0x3
  40498b:	add    rax,QWORD PTR [rdi]
  40498e:	ret    
  40498f:	nop

0000000000404990 <table_column_destroy@@Base>:
  404990:	mov    rax,QWORD PTR [rdi]
  404993:	movsxd rcx,esi
  404996:	lea    rcx,[rcx+rcx*2]
  40499a:	mov    rdi,QWORD PTR [rax+rcx*8]
  40499e:	test   rdi,rdi
  4049a1:	je     4049a8 <table_column_destroy@@Base+0x18>
  4049a3:	jmp    403030 <free@plt>
  4049a8:	ret    
  4049a9:	nop    DWORD PTR [rax+0x0]

00000000004049b0 <table_get_column_length@@Base>:
  4049b0:	mov    eax,DWORD PTR [rdi+0x8]
  4049b3:	ret    
  4049b4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4049be:	xchg   ax,ax

00000000004049c0 <table_get_column@@Base>:
  4049c0:	push   r15
  4049c2:	push   r14
  4049c4:	push   r12
  4049c6:	push   rbx
  4049c7:	push   rax
  4049c8:	movsxd r14,DWORD PTR [rdi+0x8]
  4049cc:	test   r14,r14
  4049cf:	jle    4049fe <table_get_column@@Base+0x3e>
  4049d1:	mov    r15,rsi
  4049d4:	mov    rbx,QWORD PTR [rdi]
  4049d7:	xor    r12d,r12d
  4049da:	nop    WORD PTR [rax+rax*1+0x0]
  4049e0:	mov    rdi,QWORD PTR [rbx]
  4049e3:	mov    rsi,r15
  4049e6:	call   4030b0 <strcmp@plt>
  4049eb:	test   eax,eax
  4049ed:	je     404a01 <table_get_column@@Base+0x41>
  4049ef:	add    r12,0x1
  4049f3:	add    rbx,0x18
  4049f7:	cmp    r12,r14
  4049fa:	jl     4049e0 <table_get_column@@Base+0x20>
  4049fc:	jmp    404a01 <table_get_column@@Base+0x41>
  4049fe:	xor    r12d,r12d
  404a01:	cmp    r12d,r14d
  404a04:	mov    eax,0xffffffff
  404a09:	cmovne eax,r12d
  404a0d:	add    rsp,0x8
  404a11:	pop    rbx
  404a12:	pop    r12
  404a14:	pop    r14
  404a16:	pop    r15
  404a18:	ret    
  404a19:	nop    DWORD PTR [rax+0x0]

0000000000404a20 <table_get_column_name@@Base>:
  404a20:	mov    rax,QWORD PTR [rdi]
  404a23:	movsxd rcx,esi
  404a26:	lea    rcx,[rcx+rcx*2]
  404a2a:	mov    rax,QWORD PTR [rax+rcx*8]
  404a2e:	ret    
  404a2f:	nop

0000000000404a30 <table_get_column_data_type@@Base>:
  404a30:	mov    rax,QWORD PTR [rdi]
  404a33:	movsxd rcx,esi
  404a36:	lea    rcx,[rcx+rcx*2]
  404a3a:	mov    eax,DWORD PTR [rax+rcx*8+0x8]
  404a3e:	ret    
  404a3f:	nop

0000000000404a40 <table_add_column@@Base>:
  404a40:	push   rbp
  404a41:	push   r15
  404a43:	push   r14
  404a45:	push   r13
  404a47:	push   r12
  404a49:	push   rbx
  404a4a:	sub    rsp,0x18
  404a4e:	mov    r15d,edx
  404a51:	mov    r13,rsi
  404a54:	mov    r12,rdi
  404a57:	movsxd rax,DWORD PTR [rdi+0x8]
  404a5b:	mov    rcx,QWORD PTR [rdi+0x10]
  404a5f:	mov    rdx,rax
  404a62:	or     rdx,rcx
  404a65:	shr    rdx,0x20
  404a69:	je     404a77 <table_add_column@@Base+0x37>
  404a6b:	xor    edx,edx
  404a6d:	div    rcx
  404a70:	test   rdx,rdx
  404a73:	jne    404ad9 <table_add_column@@Base+0x99>
  404a75:	jmp    404a80 <table_add_column@@Base+0x40>
  404a77:	xor    edx,edx
  404a79:	div    ecx
  404a7b:	test   rdx,rdx
  404a7e:	jne    404ad9 <table_add_column@@Base+0x99>
  404a80:	add    rcx,QWORD PTR [r12+0x18]
  404a85:	mov    QWORD PTR [r12+0x18],rcx
  404a8a:	mov    rdi,QWORD PTR [r12]
  404a8e:	shl    rcx,0x3
  404a92:	lea    rsi,[rcx+rcx*2]
  404a96:	call   4030f0 <realloc@plt>
  404a9b:	mov    QWORD PTR [r12],rax
  404a9f:	mov    rdi,r12
  404aa2:	call   4056c0 <table_get_row_length@@Base>
  404aa7:	test   eax,eax
  404aa9:	jle    404ad9 <table_add_column@@Base+0x99>
  404aab:	mov    r14d,eax
  404aae:	xor    ebp,ebp
  404ab0:	mov    rdi,r12
  404ab3:	mov    esi,ebp
  404ab5:	call   405640 <table_get_row_ptr@@Base>
  404aba:	mov    rbx,rax
  404abd:	mov    rdi,QWORD PTR [rax]
  404ac0:	mov    rsi,QWORD PTR [r12+0x18]
  404ac5:	shl    rsi,0x3
  404ac9:	call   4030f0 <realloc@plt>
  404ace:	mov    QWORD PTR [rbx],rax
  404ad1:	add    ebp,0x1
  404ad4:	cmp    r14d,ebp
  404ad7:	jne    404ab0 <table_add_column@@Base+0x70>
  404ad9:	mov    rdi,r12
  404adc:	call   4056c0 <table_get_row_length@@Base>
  404ae1:	mov    r14d,eax
  404ae4:	movsxd rbx,DWORD PTR [r12+0x8]
  404ae9:	mov    DWORD PTR [rsp+0xc],r15d
  404aee:	mov    edi,r15d
  404af1:	call   405460 <table_get_default_compare_function_for_data_type@@Base>
  404af6:	mov    QWORD PTR [rsp+0x10],rax
  404afb:	mov    rbp,QWORD PTR [r12]
  404aff:	mov    rdi,r13
  404b02:	call   403060 <strlen@plt>
  404b07:	lea    rdi,[rax+0x1]
  404b0b:	call   4030d0 <malloc@plt>
  404b10:	lea    r15,[rbx+rbx*2]
  404b14:	mov    QWORD PTR [rbp+r15*8+0x0],rax
  404b19:	test   rax,rax
  404b1c:	je     404b29 <table_add_column@@Base+0xe9>
  404b1e:	mov    rdi,rax
  404b21:	mov    rsi,r13
  404b24:	call   403040 <strcpy@plt>
  404b29:	mov    eax,DWORD PTR [rsp+0xc]
  404b2d:	mov    DWORD PTR [rbp+r15*8+0x8],eax
  404b32:	mov    rax,QWORD PTR [rsp+0x10]
  404b37:	mov    QWORD PTR [rbp+r15*8+0x10],rax
  404b3c:	test   r14d,r14d
  404b3f:	jle    404b64 <table_add_column@@Base+0x124>
  404b41:	xor    ebp,ebp
  404b43:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404b4d:	nop    DWORD PTR [rax]
  404b50:	mov    rdi,r12
  404b53:	mov    esi,ebp
  404b55:	mov    edx,ebx
  404b57:	call   403fa0 <table_cell_init@@Base>
  404b5c:	add    ebp,0x1
  404b5f:	cmp    r14d,ebp
  404b62:	jne    404b50 <table_add_column@@Base+0x110>
  404b64:	mov    edx,DWORD PTR [r12+0x8]
  404b69:	mov    esi,0xffffffff
  404b6e:	mov    ecx,0x8
  404b73:	mov    rdi,r12
  404b76:	call   403f40 <table_notify@@Base>
  404b7b:	mov    eax,DWORD PTR [r12+0x8]
  404b80:	lea    ecx,[rax+0x1]
  404b83:	mov    DWORD PTR [r12+0x8],ecx
  404b88:	add    rsp,0x18
  404b8c:	pop    rbx
  404b8d:	pop    r12
  404b8f:	pop    r13
  404b91:	pop    r14
  404b93:	pop    r15
  404b95:	pop    rbp
  404b96:	ret    
  404b97:	nop    WORD PTR [rax+rax*1+0x0]

0000000000404ba0 <table_remove_column@@Base>:
  404ba0:	push   rbp
  404ba1:	push   r15
  404ba3:	push   r14
  404ba5:	push   r13
  404ba7:	push   r12
  404ba9:	push   rbx
  404baa:	sub    rsp,0x28
  404bae:	mov    r14d,esi
  404bb1:	mov    r12,rdi
  404bb4:	mov    rax,QWORD PTR [rdi]
  404bb7:	movsxd r15,esi
  404bba:	lea    rcx,[r15+r15*2]
  404bbe:	mov    rdi,QWORD PTR [rax+rcx*8]
  404bc2:	test   rdi,rdi
  404bc5:	je     404bcc <table_remove_column@@Base+0x2c>
  404bc7:	call   403030 <free@plt>
  404bcc:	mov    eax,DWORD PTR [r12+0x8]
  404bd1:	add    eax,0xffffffff
  404bd4:	mov    DWORD PTR [rsp+0xc],eax
  404bd8:	sub    eax,r14d
  404bdb:	mov    QWORD PTR [rsp+0x10],rax
  404be0:	jle    404d74 <table_remove_column@@Base+0x1d4>
  404be6:	movsxd rax,DWORD PTR [rsp+0xc]
  404beb:	mov    rcx,r15
  404bee:	not    rcx
  404bf1:	add    rcx,rax
  404bf4:	mov    rdx,QWORD PTR [rsp+0x10]
  404bf9:	mov    rsi,r15
  404bfc:	and    rdx,0x7
  404c00:	je     404c4d <table_remove_column@@Base+0xad>
  404c02:	lea    rsi,[r15*8+0x0]
  404c0a:	lea    rsi,[rsi+rsi*2]
  404c0e:	neg    rdx
  404c11:	xor    edi,edi
  404c13:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404c1d:	nop    DWORD PTR [rax]
  404c20:	mov    rbp,QWORD PTR [r12]
  404c24:	mov    rbx,QWORD PTR [rbp+rsi*1+0x28]
  404c29:	mov    QWORD PTR [rbp+rsi*1+0x10],rbx
  404c2e:	vmovups xmm0,XMMWORD PTR [rbp+rsi*1+0x18]
  404c34:	vmovups XMMWORD PTR [rbp+rsi*1+0x0],xmm0
  404c3a:	add    rdi,0xffffffffffffffff
  404c3e:	add    rsi,0x18
  404c42:	cmp    rdx,rdi
  404c45:	jne    404c20 <table_remove_column@@Base+0x80>
  404c47:	mov    rsi,r15
  404c4a:	sub    rsi,rdi
  404c4d:	cmp    rcx,0x7
  404c51:	jb     404d74 <table_remove_column@@Base+0x1d4>
  404c57:	sub    rax,rsi
  404c5a:	shl    rsi,0x3
  404c5e:	lea    rcx,[rsi+rsi*2]
  404c62:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404c6c:	nop    DWORD PTR [rax+0x0]
  404c70:	mov    rdx,QWORD PTR [r12]
  404c74:	mov    rsi,QWORD PTR [rdx+rcx*1+0x28]
  404c79:	mov    QWORD PTR [rdx+rcx*1+0x10],rsi
  404c7e:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x18]
  404c84:	vmovups XMMWORD PTR [rdx+rcx*1],xmm0
  404c89:	mov    rdx,QWORD PTR [r12]
  404c8d:	mov    rsi,QWORD PTR [rdx+rcx*1+0x40]
  404c92:	mov    QWORD PTR [rdx+rcx*1+0x28],rsi
  404c97:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x30]
  404c9d:	vmovups XMMWORD PTR [rdx+rcx*1+0x18],xmm0
  404ca3:	mov    rdx,QWORD PTR [r12]
  404ca7:	mov    rsi,QWORD PTR [rdx+rcx*1+0x58]
  404cac:	mov    QWORD PTR [rdx+rcx*1+0x40],rsi
  404cb1:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x48]
  404cb7:	vmovups XMMWORD PTR [rdx+rcx*1+0x30],xmm0
  404cbd:	mov    rdx,QWORD PTR [r12]
  404cc1:	mov    rsi,QWORD PTR [rdx+rcx*1+0x70]
  404cc6:	mov    QWORD PTR [rdx+rcx*1+0x58],rsi
  404ccb:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x60]
  404cd1:	vmovups XMMWORD PTR [rdx+rcx*1+0x48],xmm0
  404cd7:	mov    rdx,QWORD PTR [r12]
  404cdb:	mov    rsi,QWORD PTR [rdx+rcx*1+0x88]
  404ce3:	mov    QWORD PTR [rdx+rcx*1+0x70],rsi
  404ce8:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x78]
  404cee:	vmovups XMMWORD PTR [rdx+rcx*1+0x60],xmm0
  404cf4:	mov    rdx,QWORD PTR [r12]
  404cf8:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0x90]
  404d01:	vmovups XMMWORD PTR [rdx+rcx*1+0x78],xmm0
  404d07:	mov    rsi,QWORD PTR [rdx+rcx*1+0xa0]
  404d0f:	mov    QWORD PTR [rdx+rcx*1+0x88],rsi
  404d17:	mov    rdx,QWORD PTR [r12]
  404d1b:	mov    rsi,QWORD PTR [rdx+rcx*1+0xb8]
  404d23:	mov    QWORD PTR [rdx+rcx*1+0xa0],rsi
  404d2b:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0xa8]
  404d34:	vmovups XMMWORD PTR [rdx+rcx*1+0x90],xmm0
  404d3d:	mov    rdx,QWORD PTR [r12]
  404d41:	mov    rsi,QWORD PTR [rdx+rcx*1+0xd0]
  404d49:	mov    QWORD PTR [rdx+rcx*1+0xb8],rsi
  404d51:	vmovups xmm0,XMMWORD PTR [rdx+rcx*1+0xc0]
  404d5a:	vmovups XMMWORD PTR [rdx+rcx*1+0xa8],xmm0
  404d63:	add    rcx,0xc0
  404d6a:	add    rax,0xfffffffffffffff8
  404d6e:	jne    404c70 <table_remove_column@@Base+0xd0>
  404d74:	mov    rbx,r15
  404d77:	mov    rdi,r12
  404d7a:	call   4056c0 <table_get_row_length@@Base>
  404d7f:	test   eax,eax
  404d81:	jle    404e9c <table_remove_column@@Base+0x2fc>
  404d87:	mov    r15d,eax
  404d8a:	movsxd r13,DWORD PTR [rsp+0xc]
  404d8f:	mov    rax,rbx
  404d92:	not    rax
  404d95:	add    rax,r13
  404d98:	mov    QWORD PTR [rsp+0x20],rax
  404d9d:	mov    rax,QWORD PTR [rsp+0x10]
  404da2:	and    eax,0x7
  404da5:	mov    QWORD PTR [rsp+0x10],rax
  404daa:	neg    rax
  404dad:	mov    QWORD PTR [rsp+0x18],rax
  404db2:	xor    ebp,ebp
  404db4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404dbe:	xchg   ax,ax
  404dc0:	mov    rdi,r12
  404dc3:	mov    esi,ebp
  404dc5:	mov    edx,r14d
  404dc8:	call   403fe0 <table_cell_destroy@@Base>
  404dcd:	mov    rdi,r12
  404dd0:	mov    esi,ebp
  404dd2:	call   405640 <table_get_row_ptr@@Base>
  404dd7:	cmp    DWORD PTR [rsp+0xc],r14d
  404ddc:	jle    404e90 <table_remove_column@@Base+0x2f0>
  404de2:	mov    rcx,rbx
  404de5:	cmp    QWORD PTR [rsp+0x10],0x0
  404deb:	je     404e16 <table_remove_column@@Base+0x276>
  404ded:	mov    rdx,QWORD PTR [rsp+0x18]
  404df2:	mov    rcx,rbx
  404df5:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404dff:	nop
  404e00:	mov    rsi,QWORD PTR [rax]
  404e03:	mov    rdi,QWORD PTR [rsi+rcx*8+0x8]
  404e08:	mov    QWORD PTR [rsi+rcx*8],rdi
  404e0c:	add    rcx,0x1
  404e10:	add    rdx,0x1
  404e14:	jne    404e00 <table_remove_column@@Base+0x260>
  404e16:	cmp    QWORD PTR [rsp+0x20],0x7
  404e1c:	jb     404e90 <table_remove_column@@Base+0x2f0>
  404e1e:	xchg   ax,ax
  404e20:	mov    rdx,QWORD PTR [rax]
  404e23:	mov    rsi,QWORD PTR [rdx+rcx*8+0x8]
  404e28:	mov    QWORD PTR [rdx+rcx*8],rsi
  404e2c:	mov    rdx,QWORD PTR [rax]
  404e2f:	mov    rsi,QWORD PTR [rdx+rcx*8+0x10]
  404e34:	mov    QWORD PTR [rdx+rcx*8+0x8],rsi
  404e39:	mov    rdx,QWORD PTR [rax]
  404e3c:	mov    rsi,QWORD PTR [rdx+rcx*8+0x18]
  404e41:	mov    QWORD PTR [rdx+rcx*8+0x10],rsi
  404e46:	mov    rdx,QWORD PTR [rax]
  404e49:	mov    rsi,QWORD PTR [rdx+rcx*8+0x20]
  404e4e:	mov    QWORD PTR [rdx+rcx*8+0x18],rsi
  404e53:	mov    rdx,QWORD PTR [rax]
  404e56:	mov    rsi,QWORD PTR [rdx+rcx*8+0x28]
  404e5b:	mov    QWORD PTR [rdx+rcx*8+0x20],rsi
  404e60:	mov    rdx,QWORD PTR [rax]
  404e63:	mov    rsi,QWORD PTR [rdx+rcx*8+0x30]
  404e68:	mov    QWORD PTR [rdx+rcx*8+0x28],rsi
  404e6d:	mov    rdx,QWORD PTR [rax]
  404e70:	mov    rsi,QWORD PTR [rdx+rcx*8+0x38]
  404e75:	mov    QWORD PTR [rdx+rcx*8+0x30],rsi
  404e7a:	mov    rdx,QWORD PTR [rax]
  404e7d:	mov    rsi,QWORD PTR [rdx+rcx*8+0x40]
  404e82:	mov    QWORD PTR [rdx+rcx*8+0x38],rsi
  404e87:	add    rcx,0x8
  404e8b:	cmp    r13,rcx
  404e8e:	jne    404e20 <table_remove_column@@Base+0x280>
  404e90:	add    ebp,0x1
  404e93:	cmp    ebp,r15d
  404e96:	jne    404dc0 <table_remove_column@@Base+0x220>
  404e9c:	movsxd rax,DWORD PTR [r12+0x8]
  404ea1:	add    rax,0xffffffffffffffff
  404ea5:	mov    DWORD PTR [r12+0x8],eax
  404eaa:	mov    rcx,QWORD PTR [r12+0x10]
  404eaf:	mov    rdx,rax
  404eb2:	or     rdx,rcx
  404eb5:	shr    rdx,0x20
  404eb9:	je     404ec7 <table_remove_column@@Base+0x327>
  404ebb:	xor    edx,edx
  404ebd:	div    rcx
  404ec0:	test   rdx,rdx
  404ec3:	jne    404f39 <table_remove_column@@Base+0x399>
  404ec5:	jmp    404ed0 <table_remove_column@@Base+0x330>
  404ec7:	xor    edx,edx
  404ec9:	div    ecx
  404ecb:	test   rdx,rdx
  404ece:	jne    404f39 <table_remove_column@@Base+0x399>
  404ed0:	mov    rdi,QWORD PTR [r12]
  404ed4:	mov    rax,QWORD PTR [r12+0x18]
  404ed9:	sub    rax,rcx
  404edc:	mov    QWORD PTR [r12+0x18],rax
  404ee1:	shl    rax,0x3
  404ee5:	lea    rsi,[rax+rax*2]
  404ee9:	call   4030f0 <realloc@plt>
  404eee:	mov    QWORD PTR [r12],rax
  404ef2:	mov    rdi,r12
  404ef5:	call   4056c0 <table_get_row_length@@Base>
  404efa:	test   eax,eax
  404efc:	jle    404f39 <table_remove_column@@Base+0x399>
  404efe:	mov    r15d,eax
  404f01:	xor    ebp,ebp
  404f03:	nop    WORD PTR cs:[rax+rax*1+0x0]
  404f0d:	nop    DWORD PTR [rax]
  404f10:	mov    rdi,r12
  404f13:	mov    esi,ebp
  404f15:	call   405640 <table_get_row_ptr@@Base>
  404f1a:	mov    rbx,rax
  404f1d:	mov    rdi,QWORD PTR [rax]
  404f20:	mov    rsi,QWORD PTR [r12+0x18]
  404f25:	shl    rsi,0x3
  404f29:	call   4030f0 <realloc@plt>
  404f2e:	mov    QWORD PTR [rbx],rax
  404f31:	add    ebp,0x1
  404f34:	cmp    r15d,ebp
  404f37:	jne    404f10 <table_remove_column@@Base+0x370>
  404f39:	mov    esi,0xffffffff
  404f3e:	mov    ecx,0x10
  404f43:	mov    rdi,r12
  404f46:	mov    edx,r14d
  404f49:	call   403f40 <table_notify@@Base>
  404f4e:	xor    eax,eax
  404f50:	add    rsp,0x28
  404f54:	pop    rbx
  404f55:	pop    r12
  404f57:	pop    r13
  404f59:	pop    r14
  404f5b:	pop    r15
  404f5d:	pop    rbp
  404f5e:	ret    
  404f5f:	nop

0000000000404f60 <table_get_column_compare_function@@Base>:
  404f60:	mov    rax,QWORD PTR [rdi]
  404f63:	movsxd rcx,esi
  404f66:	lea    rcx,[rcx+rcx*2]
  404f6a:	mov    rax,QWORD PTR [rax+rcx*8+0x10]
  404f6f:	ret    

0000000000404f70 <table_set_column_compare_function@@Base>:
  404f70:	mov    rax,QWORD PTR [rdi]
  404f73:	movsxd rcx,esi
  404f76:	lea    rcx,[rcx+rcx*2]
  404f7a:	mov    QWORD PTR [rax+rcx*8+0x10],rdx
  404f7f:	ret    

0000000000404f80 <table_compare_bool@@Base>:
  404f80:	test   rdi,rdi
  404f83:	je     404f9d <table_compare_bool@@Base+0x1d>
  404f85:	test   rsi,rsi
  404f88:	je     404fa3 <table_compare_bool@@Base+0x23>
  404f8a:	mov    al,BYTE PTR [rdi]
  404f8c:	mov    cl,BYTE PTR [rsi]
  404f8e:	cmp    al,cl
  404f90:	sbb    edx,edx
  404f92:	cmp    al,cl
  404f94:	mov    eax,0x1
  404f99:	cmovbe eax,edx
  404f9c:	ret    
  404f9d:	neg    rsi
  404fa0:	sbb    eax,eax
  404fa2:	ret    
  404fa3:	mov    eax,0x1
  404fa8:	ret    
  404fa9:	nop    DWORD PTR [rax+0x0]

0000000000404fb0 <table_compare_int@@Base>:
  404fb0:	test   rdi,rdi
  404fb3:	je     404fd2 <table_compare_int@@Base+0x22>
  404fb5:	test   rsi,rsi
  404fb8:	je     404fd8 <table_compare_int@@Base+0x28>
  404fba:	mov    eax,DWORD PTR [rdi]
  404fbc:	mov    ecx,DWORD PTR [rsi]
  404fbe:	xor    edx,edx
  404fc0:	cmp    eax,ecx
  404fc2:	setl   dl
  404fc5:	neg    edx
  404fc7:	cmp    eax,ecx
  404fc9:	mov    eax,0x1
  404fce:	cmovle eax,edx
  404fd1:	ret    
  404fd2:	neg    rsi
  404fd5:	sbb    eax,eax
  404fd7:	ret    
  404fd8:	mov    eax,0x1
  404fdd:	ret    
  404fde:	xchg   ax,ax

0000000000404fe0 <table_compare_uint@@Base>:
  404fe0:	test   rdi,rdi
  404fe3:	je     404ffd <table_compare_uint@@Base+0x1d>
  404fe5:	test   rsi,rsi
  404fe8:	je     405003 <table_compare_uint@@Base+0x23>
  404fea:	mov    eax,DWORD PTR [rdi]
  404fec:	mov    ecx,DWORD PTR [rsi]
  404fee:	cmp    eax,ecx
  404ff0:	sbb    edx,edx
  404ff2:	cmp    eax,ecx
  404ff4:	mov    eax,0x1
  404ff9:	cmovbe eax,edx
  404ffc:	ret    
  404ffd:	neg    rsi
  405000:	sbb    eax,eax
  405002:	ret    
  405003:	mov    eax,0x1
  405008:	ret    
  405009:	nop    DWORD PTR [rax+0x0]

0000000000405010 <table_compare_int8@@Base>:
  405010:	test   rdi,rdi
  405013:	je     405032 <table_compare_int8@@Base+0x22>
  405015:	test   rsi,rsi
  405018:	je     405038 <table_compare_int8@@Base+0x28>
  40501a:	mov    al,BYTE PTR [rdi]
  40501c:	mov    cl,BYTE PTR [rsi]
  40501e:	xor    edx,edx
  405020:	cmp    al,cl
  405022:	setl   dl
  405025:	neg    edx
  405027:	cmp    al,cl
  405029:	mov    eax,0x1
  40502e:	cmovle eax,edx
  405031:	ret    
  405032:	neg    rsi
  405035:	sbb    eax,eax
  405037:	ret    
  405038:	mov    eax,0x1
  40503d:	ret    
  40503e:	xchg   ax,ax

0000000000405040 <table_compare_uint8@@Base>:
  405040:	test   rdi,rdi
  405043:	je     40505d <table_compare_uint8@@Base+0x1d>
  405045:	test   rsi,rsi
  405048:	je     405063 <table_compare_uint8@@Base+0x23>
  40504a:	mov    al,BYTE PTR [rdi]
  40504c:	mov    cl,BYTE PTR [rsi]
  40504e:	cmp    al,cl
  405050:	sbb    edx,edx
  405052:	cmp    al,cl
  405054:	mov    eax,0x1
  405059:	cmovbe eax,edx
  40505c:	ret    
  40505d:	neg    rsi
  405060:	sbb    eax,eax
  405062:	ret    
  405063:	mov    eax,0x1
  405068:	ret    
  405069:	nop    DWORD PTR [rax+0x0]

0000000000405070 <table_compare_int16@@Base>:
  405070:	test   rdi,rdi
  405073:	je     405096 <table_compare_int16@@Base+0x26>
  405075:	test   rsi,rsi
  405078:	je     40509c <table_compare_int16@@Base+0x2c>
  40507a:	movzx  eax,WORD PTR [rdi]
  40507d:	movzx  ecx,WORD PTR [rsi]
  405080:	xor    edx,edx
  405082:	cmp    ax,cx
  405085:	setl   dl
  405088:	neg    edx
  40508a:	cmp    ax,cx
  40508d:	mov    eax,0x1
  405092:	cmovle eax,edx
  405095:	ret    
  405096:	neg    rsi
  405099:	sbb    eax,eax
  40509b:	ret    
  40509c:	mov    eax,0x1
  4050a1:	ret    
  4050a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4050ac:	nop    DWORD PTR [rax+0x0]

00000000004050b0 <table_compare_uint16@@Base>:
  4050b0:	test   rdi,rdi
  4050b3:	je     4050d1 <table_compare_uint16@@Base+0x21>
  4050b5:	test   rsi,rsi
  4050b8:	je     4050d7 <table_compare_uint16@@Base+0x27>
  4050ba:	movzx  eax,WORD PTR [rdi]
  4050bd:	movzx  ecx,WORD PTR [rsi]
  4050c0:	cmp    ax,cx
  4050c3:	sbb    edx,edx
  4050c5:	cmp    ax,cx
  4050c8:	mov    eax,0x1
  4050cd:	cmovbe eax,edx
  4050d0:	ret    
  4050d1:	neg    rsi
  4050d4:	sbb    eax,eax
  4050d6:	ret    
  4050d7:	mov    eax,0x1
  4050dc:	ret    
  4050dd:	nop    DWORD PTR [rax]

00000000004050e0 <table_compare_int32@@Base>:
  4050e0:	test   rdi,rdi
  4050e3:	je     405102 <table_compare_int32@@Base+0x22>
  4050e5:	test   rsi,rsi
  4050e8:	je     405108 <table_compare_int32@@Base+0x28>
  4050ea:	mov    eax,DWORD PTR [rdi]
  4050ec:	mov    ecx,DWORD PTR [rsi]
  4050ee:	xor    edx,edx
  4050f0:	cmp    eax,ecx
  4050f2:	setl   dl
  4050f5:	neg    edx
  4050f7:	cmp    eax,ecx
  4050f9:	mov    eax,0x1
  4050fe:	cmovle eax,edx
  405101:	ret    
  405102:	neg    rsi
  405105:	sbb    eax,eax
  405107:	ret    
  405108:	mov    eax,0x1
  40510d:	ret    
  40510e:	xchg   ax,ax

0000000000405110 <table_compare_uint32@@Base>:
  405110:	test   rdi,rdi
  405113:	je     40512d <table_compare_uint32@@Base+0x1d>
  405115:	test   rsi,rsi
  405118:	je     405133 <table_compare_uint32@@Base+0x23>
  40511a:	mov    eax,DWORD PTR [rdi]
  40511c:	mov    ecx,DWORD PTR [rsi]
  40511e:	cmp    eax,ecx
  405120:	sbb    edx,edx
  405122:	cmp    eax,ecx
  405124:	mov    eax,0x1
  405129:	cmovbe eax,edx
  40512c:	ret    
  40512d:	neg    rsi
  405130:	sbb    eax,eax
  405132:	ret    
  405133:	mov    eax,0x1
  405138:	ret    
  405139:	nop    DWORD PTR [rax+0x0]

0000000000405140 <table_compare_int64@@Base>:
  405140:	test   rdi,rdi
  405143:	je     405166 <table_compare_int64@@Base+0x26>
  405145:	test   rsi,rsi
  405148:	je     40516c <table_compare_int64@@Base+0x2c>
  40514a:	mov    rax,QWORD PTR [rdi]
  40514d:	mov    rcx,QWORD PTR [rsi]
  405150:	xor    edx,edx
  405152:	cmp    rax,rcx
  405155:	setl   dl
  405158:	neg    edx
  40515a:	cmp    rax,rcx
  40515d:	mov    eax,0x1
  405162:	cmovle eax,edx
  405165:	ret    
  405166:	neg    rsi
  405169:	sbb    eax,eax
  40516b:	ret    
  40516c:	mov    eax,0x1
  405171:	ret    
  405172:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40517c:	nop    DWORD PTR [rax+0x0]

0000000000405180 <table_compare_uint64@@Base>:
  405180:	test   rdi,rdi
  405183:	je     4051a1 <table_compare_uint64@@Base+0x21>
  405185:	test   rsi,rsi
  405188:	je     4051a7 <table_compare_uint64@@Base+0x27>
  40518a:	mov    rax,QWORD PTR [rdi]
  40518d:	mov    rcx,QWORD PTR [rsi]
  405190:	cmp    rax,rcx
  405193:	sbb    edx,edx
  405195:	cmp    rax,rcx
  405198:	mov    eax,0x1
  40519d:	cmovbe eax,edx
  4051a0:	ret    
  4051a1:	neg    rsi
  4051a4:	sbb    eax,eax
  4051a6:	ret    
  4051a7:	mov    eax,0x1
  4051ac:	ret    
  4051ad:	nop    DWORD PTR [rax]

00000000004051b0 <table_compare_short@@Base>:
  4051b0:	test   rdi,rdi
  4051b3:	je     4051d6 <table_compare_short@@Base+0x26>
  4051b5:	test   rsi,rsi
  4051b8:	je     4051dc <table_compare_short@@Base+0x2c>
  4051ba:	movzx  eax,WORD PTR [rdi]
  4051bd:	movzx  ecx,WORD PTR [rsi]
  4051c0:	xor    edx,edx
  4051c2:	cmp    ax,cx
  4051c5:	setl   dl
  4051c8:	neg    edx
  4051ca:	cmp    ax,cx
  4051cd:	mov    eax,0x1
  4051d2:	cmovle eax,edx
  4051d5:	ret    
  4051d6:	neg    rsi
  4051d9:	sbb    eax,eax
  4051db:	ret    
  4051dc:	mov    eax,0x1
  4051e1:	ret    
  4051e2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4051ec:	nop    DWORD PTR [rax+0x0]

00000000004051f0 <table_compare_ushort@@Base>:
  4051f0:	test   rdi,rdi
  4051f3:	je     405211 <table_compare_ushort@@Base+0x21>
  4051f5:	test   rsi,rsi
  4051f8:	je     405217 <table_compare_ushort@@Base+0x27>
  4051fa:	movzx  eax,WORD PTR [rdi]
  4051fd:	movzx  ecx,WORD PTR [rsi]
  405200:	cmp    ax,cx
  405203:	sbb    edx,edx
  405205:	cmp    ax,cx
  405208:	mov    eax,0x1
  40520d:	cmovbe eax,edx
  405210:	ret    
  405211:	neg    rsi
  405214:	sbb    eax,eax
  405216:	ret    
  405217:	mov    eax,0x1
  40521c:	ret    
  40521d:	nop    DWORD PTR [rax]

0000000000405220 <table_compare_long@@Base>:
  405220:	test   rdi,rdi
  405223:	je     405246 <table_compare_long@@Base+0x26>
  405225:	test   rsi,rsi
  405228:	je     40524c <table_compare_long@@Base+0x2c>
  40522a:	mov    rax,QWORD PTR [rdi]
  40522d:	mov    rcx,QWORD PTR [rsi]
  405230:	xor    edx,edx
  405232:	cmp    rax,rcx
  405235:	setl   dl
  405238:	neg    edx
  40523a:	cmp    rax,rcx
  40523d:	mov    eax,0x1
  405242:	cmovle eax,edx
  405245:	ret    
  405246:	neg    rsi
  405249:	sbb    eax,eax
  40524b:	ret    
  40524c:	mov    eax,0x1
  405251:	ret    
  405252:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40525c:	nop    DWORD PTR [rax+0x0]

0000000000405260 <table_compare_ulong@@Base>:
  405260:	test   rdi,rdi
  405263:	je     405281 <table_compare_ulong@@Base+0x21>
  405265:	test   rsi,rsi
  405268:	je     405287 <table_compare_ulong@@Base+0x27>
  40526a:	mov    rax,QWORD PTR [rdi]
  40526d:	mov    rcx,QWORD PTR [rsi]
  405270:	cmp    rax,rcx
  405273:	sbb    edx,edx
  405275:	cmp    rax,rcx
  405278:	mov    eax,0x1
  40527d:	cmovbe eax,edx
  405280:	ret    
  405281:	neg    rsi
  405284:	sbb    eax,eax
  405286:	ret    
  405287:	mov    eax,0x1
  40528c:	ret    
  40528d:	nop    DWORD PTR [rax]

0000000000405290 <table_compare_llong@@Base>:
  405290:	test   rdi,rdi
  405293:	je     4052b6 <table_compare_llong@@Base+0x26>
  405295:	test   rsi,rsi
  405298:	je     4052bc <table_compare_llong@@Base+0x2c>
  40529a:	mov    rax,QWORD PTR [rdi]
  40529d:	mov    rcx,QWORD PTR [rsi]
  4052a0:	xor    edx,edx
  4052a2:	cmp    rax,rcx
  4052a5:	setl   dl
  4052a8:	neg    edx
  4052aa:	cmp    rax,rcx
  4052ad:	mov    eax,0x1
  4052b2:	cmovle eax,edx
  4052b5:	ret    
  4052b6:	neg    rsi
  4052b9:	sbb    eax,eax
  4052bb:	ret    
  4052bc:	mov    eax,0x1
  4052c1:	ret    
  4052c2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4052cc:	nop    DWORD PTR [rax+0x0]

00000000004052d0 <table_compare_ullong@@Base>:
  4052d0:	test   rdi,rdi
  4052d3:	je     4052f1 <table_compare_ullong@@Base+0x21>
  4052d5:	test   rsi,rsi
  4052d8:	je     4052f7 <table_compare_ullong@@Base+0x27>
  4052da:	mov    rax,QWORD PTR [rdi]
  4052dd:	mov    rcx,QWORD PTR [rsi]
  4052e0:	cmp    rax,rcx
  4052e3:	sbb    edx,edx
  4052e5:	cmp    rax,rcx
  4052e8:	mov    eax,0x1
  4052ed:	cmovbe eax,edx
  4052f0:	ret    
  4052f1:	neg    rsi
  4052f4:	sbb    eax,eax
  4052f6:	ret    
  4052f7:	mov    eax,0x1
  4052fc:	ret    
  4052fd:	nop    DWORD PTR [rax]

0000000000405300 <table_compare_float@@Base>:
  405300:	test   rdi,rdi
  405303:	je     40532a <table_compare_float@@Base+0x2a>
  405305:	test   rsi,rsi
  405308:	je     405330 <table_compare_float@@Base+0x30>
  40530a:	vmovss xmm0,DWORD PTR [rdi]
  40530e:	vmovss xmm1,DWORD PTR [rsi]
  405312:	xor    ecx,ecx
  405314:	vucomiss xmm1,xmm0
  405318:	seta   cl
  40531b:	neg    ecx
  40531d:	vucomiss xmm0,xmm1
  405321:	mov    eax,0x1
  405326:	cmovbe eax,ecx
  405329:	ret    
  40532a:	neg    rsi
  40532d:	sbb    eax,eax
  40532f:	ret    
  405330:	mov    eax,0x1
  405335:	ret    
  405336:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000405340 <table_compare_double@@Base>:
  405340:	test   rdi,rdi
  405343:	je     40536a <table_compare_double@@Base+0x2a>
  405345:	test   rsi,rsi
  405348:	je     405370 <table_compare_double@@Base+0x30>
  40534a:	vmovsd xmm0,QWORD PTR [rdi]
  40534e:	vmovsd xmm1,QWORD PTR [rsi]
  405352:	xor    ecx,ecx
  405354:	vucomisd xmm1,xmm0
  405358:	seta   cl
  40535b:	neg    ecx
  40535d:	vucomisd xmm0,xmm1
  405361:	mov    eax,0x1
  405366:	cmovbe eax,ecx
  405369:	ret    
  40536a:	neg    rsi
  40536d:	sbb    eax,eax
  40536f:	ret    
  405370:	mov    eax,0x1
  405375:	ret    
  405376:	nop    WORD PTR cs:[rax+rax*1+0x0]

0000000000405380 <table_compare_ldouble@@Base>:
  405380:	test   rdi,rdi
  405383:	je     4053a6 <table_compare_ldouble@@Base+0x26>
  405385:	test   rsi,rsi
  405388:	je     4053ac <table_compare_ldouble@@Base+0x2c>
  40538a:	fld    TBYTE PTR [rdi]
  40538c:	fld    TBYTE PTR [rsi]
  40538e:	xor    ecx,ecx
  405390:	fucomi st,st(1)
  405392:	seta   cl
  405395:	neg    ecx
  405397:	fxch   st(1)
  405399:	fucomip st,st(1)
  40539b:	fstp   st(0)
  40539d:	mov    eax,0x1
  4053a2:	cmovbe eax,ecx
  4053a5:	ret    
  4053a6:	neg    rsi
  4053a9:	sbb    eax,eax
  4053ab:	ret    
  4053ac:	mov    eax,0x1
  4053b1:	ret    
  4053b2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4053bc:	nop    DWORD PTR [rax+0x0]

00000000004053c0 <table_compare_char@@Base>:
  4053c0:	test   rdi,rdi
  4053c3:	je     4053e2 <table_compare_char@@Base+0x22>
  4053c5:	test   rsi,rsi
  4053c8:	je     4053e8 <table_compare_char@@Base+0x28>
  4053ca:	mov    al,BYTE PTR [rdi]
  4053cc:	mov    cl,BYTE PTR [rsi]
  4053ce:	xor    edx,edx
  4053d0:	cmp    al,cl
  4053d2:	setl   dl
  4053d5:	neg    edx
  4053d7:	cmp    al,cl
  4053d9:	mov    eax,0x1
  4053de:	cmovle eax,edx
  4053e1:	ret    
  4053e2:	neg    rsi
  4053e5:	sbb    eax,eax
  4053e7:	ret    
  4053e8:	mov    eax,0x1
  4053ed:	ret    
  4053ee:	xchg   ax,ax

00000000004053f0 <table_compare_uchar@@Base>:
  4053f0:	test   rdi,rdi
  4053f3:	je     40540d <table_compare_uchar@@Base+0x1d>
  4053f5:	test   rsi,rsi
  4053f8:	je     405413 <table_compare_uchar@@Base+0x23>
  4053fa:	mov    al,BYTE PTR [rdi]
  4053fc:	mov    cl,BYTE PTR [rsi]
  4053fe:	cmp    al,cl
  405400:	sbb    edx,edx
  405402:	cmp    al,cl
  405404:	mov    eax,0x1
  405409:	cmovbe eax,edx
  40540c:	ret    
  40540d:	neg    rsi
  405410:	sbb    eax,eax
  405412:	ret    
  405413:	mov    eax,0x1
  405418:	ret    
  405419:	nop    DWORD PTR [rax+0x0]

0000000000405420 <table_compare_string@@Base>:
  405420:	test   rdi,rdi
  405423:	je     40542f <table_compare_string@@Base+0xf>
  405425:	test   rsi,rsi
  405428:	je     405435 <table_compare_string@@Base+0x15>
  40542a:	jmp    4030b0 <strcmp@plt>
  40542f:	neg    rsi
  405432:	sbb    eax,eax
  405434:	ret    
  405435:	mov    eax,0x1
  40543a:	ret    
  40543b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405440 <table_compare_ptr@@Base>:
  405440:	cmp    rdi,rsi
  405443:	sbb    ecx,ecx
  405445:	cmp    rdi,rsi
  405448:	mov    eax,0x1
  40544d:	cmovbe eax,ecx
  405450:	ret    
  405451:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40545b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405460 <table_get_default_compare_function_for_data_type@@Base>:
  405460:	cmp    edi,0x17
  405463:	ja     405474 <table_get_default_compare_function_for_data_type@@Base+0x14>
  405465:	movsxd rax,edi
  405468:	lea    rcx,[rip+0x48e1]        # 409d50 <_IO_stdin_used@@Base+0x2d50>
  40546f:	mov    rax,QWORD PTR [rcx+rax*8]
  405473:	ret    
  405474:	xor    eax,eax
  405476:	ret    
  405477:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405480 <table_get@@Base>:
  405480:	push   rax
  405481:	call   403fc0 <table_get_cell_ptr@@Base>
  405486:	mov    rax,QWORD PTR [rax]
  405489:	pop    rcx
  40548a:	ret    
  40548b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405490 <table_get_bool@@Base>:
  405490:	push   rax
  405491:	call   403fc0 <table_get_cell_ptr@@Base>
  405496:	mov    rax,QWORD PTR [rax]
  405499:	mov    al,BYTE PTR [rax]
  40549b:	pop    rcx
  40549c:	ret    
  40549d:	nop    DWORD PTR [rax]

00000000004054a0 <table_get_int@@Base>:
  4054a0:	push   rax
  4054a1:	call   403fc0 <table_get_cell_ptr@@Base>
  4054a6:	mov    rax,QWORD PTR [rax]
  4054a9:	mov    eax,DWORD PTR [rax]
  4054ab:	pop    rcx
  4054ac:	ret    
  4054ad:	nop    DWORD PTR [rax]

00000000004054b0 <table_get_uint@@Base>:
  4054b0:	push   rax
  4054b1:	call   403fc0 <table_get_cell_ptr@@Base>
  4054b6:	mov    rax,QWORD PTR [rax]
  4054b9:	mov    eax,DWORD PTR [rax]
  4054bb:	pop    rcx
  4054bc:	ret    
  4054bd:	nop    DWORD PTR [rax]

00000000004054c0 <table_get_int8@@Base>:
  4054c0:	push   rax
  4054c1:	call   403fc0 <table_get_cell_ptr@@Base>
  4054c6:	mov    rax,QWORD PTR [rax]
  4054c9:	mov    al,BYTE PTR [rax]
  4054cb:	pop    rcx
  4054cc:	ret    
  4054cd:	nop    DWORD PTR [rax]

00000000004054d0 <table_get_uint8@@Base>:
  4054d0:	push   rax
  4054d1:	call   403fc0 <table_get_cell_ptr@@Base>
  4054d6:	mov    rax,QWORD PTR [rax]
  4054d9:	mov    al,BYTE PTR [rax]
  4054db:	pop    rcx
  4054dc:	ret    
  4054dd:	nop    DWORD PTR [rax]

00000000004054e0 <table_get_int16@@Base>:
  4054e0:	push   rax
  4054e1:	call   403fc0 <table_get_cell_ptr@@Base>
  4054e6:	mov    rax,QWORD PTR [rax]
  4054e9:	movzx  eax,WORD PTR [rax]
  4054ec:	pop    rcx
  4054ed:	ret    
  4054ee:	xchg   ax,ax

00000000004054f0 <table_get_uint16@@Base>:
  4054f0:	push   rax
  4054f1:	call   403fc0 <table_get_cell_ptr@@Base>
  4054f6:	mov    rax,QWORD PTR [rax]
  4054f9:	movzx  eax,WORD PTR [rax]
  4054fc:	pop    rcx
  4054fd:	ret    
  4054fe:	xchg   ax,ax

0000000000405500 <table_get_int32@@Base>:
  405500:	push   rax
  405501:	call   403fc0 <table_get_cell_ptr@@Base>
  405506:	mov    rax,QWORD PTR [rax]
  405509:	mov    eax,DWORD PTR [rax]
  40550b:	pop    rcx
  40550c:	ret    
  40550d:	nop    DWORD PTR [rax]

0000000000405510 <table_get_uint32@@Base>:
  405510:	push   rax
  405511:	call   403fc0 <table_get_cell_ptr@@Base>
  405516:	mov    rax,QWORD PTR [rax]
  405519:	mov    eax,DWORD PTR [rax]
  40551b:	pop    rcx
  40551c:	ret    
  40551d:	nop    DWORD PTR [rax]

0000000000405520 <table_get_int64@@Base>:
  405520:	push   rax
  405521:	call   403fc0 <table_get_cell_ptr@@Base>
  405526:	mov    rax,QWORD PTR [rax]
  405529:	mov    rax,QWORD PTR [rax]
  40552c:	pop    rcx
  40552d:	ret    
  40552e:	xchg   ax,ax

0000000000405530 <table_get_uint64@@Base>:
  405530:	push   rax
  405531:	call   403fc0 <table_get_cell_ptr@@Base>
  405536:	mov    rax,QWORD PTR [rax]
  405539:	mov    rax,QWORD PTR [rax]
  40553c:	pop    rcx
  40553d:	ret    
  40553e:	xchg   ax,ax

0000000000405540 <table_get_short@@Base>:
  405540:	push   rax
  405541:	call   403fc0 <table_get_cell_ptr@@Base>
  405546:	mov    rax,QWORD PTR [rax]
  405549:	movzx  eax,WORD PTR [rax]
  40554c:	pop    rcx
  40554d:	ret    
  40554e:	xchg   ax,ax

0000000000405550 <table_get_ushort@@Base>:
  405550:	push   rax
  405551:	call   403fc0 <table_get_cell_ptr@@Base>
  405556:	mov    rax,QWORD PTR [rax]
  405559:	movzx  eax,WORD PTR [rax]
  40555c:	pop    rcx
  40555d:	ret    
  40555e:	xchg   ax,ax

0000000000405560 <table_get_long@@Base>:
  405560:	push   rax
  405561:	call   403fc0 <table_get_cell_ptr@@Base>
  405566:	mov    rax,QWORD PTR [rax]
  405569:	mov    rax,QWORD PTR [rax]
  40556c:	pop    rcx
  40556d:	ret    
  40556e:	xchg   ax,ax

0000000000405570 <table_get_ulong@@Base>:
  405570:	push   rax
  405571:	call   403fc0 <table_get_cell_ptr@@Base>
  405576:	mov    rax,QWORD PTR [rax]
  405579:	mov    rax,QWORD PTR [rax]
  40557c:	pop    rcx
  40557d:	ret    
  40557e:	xchg   ax,ax

0000000000405580 <table_get_llong@@Base>:
  405580:	push   rax
  405581:	call   403fc0 <table_get_cell_ptr@@Base>
  405586:	mov    rax,QWORD PTR [rax]
  405589:	mov    rax,QWORD PTR [rax]
  40558c:	pop    rcx
  40558d:	ret    
  40558e:	xchg   ax,ax

0000000000405590 <table_get_ullong@@Base>:
  405590:	push   rax
  405591:	call   403fc0 <table_get_cell_ptr@@Base>
  405596:	mov    rax,QWORD PTR [rax]
  405599:	mov    rax,QWORD PTR [rax]
  40559c:	pop    rcx
  40559d:	ret    
  40559e:	xchg   ax,ax

00000000004055a0 <table_get_float@@Base>:
  4055a0:	push   rax
  4055a1:	call   403fc0 <table_get_cell_ptr@@Base>
  4055a6:	mov    rax,QWORD PTR [rax]
  4055a9:	vmovss xmm0,DWORD PTR [rax]
  4055ad:	pop    rax
  4055ae:	ret    
  4055af:	nop

00000000004055b0 <table_get_double@@Base>:
  4055b0:	push   rax
  4055b1:	call   403fc0 <table_get_cell_ptr@@Base>
  4055b6:	mov    rax,QWORD PTR [rax]
  4055b9:	vmovsd xmm0,QWORD PTR [rax]
  4055bd:	pop    rax
  4055be:	ret    
  4055bf:	nop

00000000004055c0 <table_get_ldouble@@Base>:
  4055c0:	push   rax
  4055c1:	call   403fc0 <table_get_cell_ptr@@Base>
  4055c6:	mov    rax,QWORD PTR [rax]
  4055c9:	fld    TBYTE PTR [rax]
  4055cb:	pop    rax
  4055cc:	ret    
  4055cd:	nop    DWORD PTR [rax]

00000000004055d0 <table_get_char@@Base>:
  4055d0:	push   rax
  4055d1:	call   403fc0 <table_get_cell_ptr@@Base>
  4055d6:	mov    rax,QWORD PTR [rax]
  4055d9:	mov    al,BYTE PTR [rax]
  4055db:	pop    rcx
  4055dc:	ret    
  4055dd:	nop    DWORD PTR [rax]

00000000004055e0 <table_get_uchar@@Base>:
  4055e0:	push   rax
  4055e1:	call   403fc0 <table_get_cell_ptr@@Base>
  4055e6:	mov    rax,QWORD PTR [rax]
  4055e9:	mov    al,BYTE PTR [rax]
  4055eb:	pop    rcx
  4055ec:	ret    
  4055ed:	nop    DWORD PTR [rax]

00000000004055f0 <table_get_string@@Base>:
  4055f0:	push   rax
  4055f1:	call   403fc0 <table_get_cell_ptr@@Base>
  4055f6:	mov    rax,QWORD PTR [rax]
  4055f9:	pop    rcx
  4055fa:	ret    
  4055fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405600 <table_get_ptr@@Base>:
  405600:	push   rax
  405601:	call   403fc0 <table_get_cell_ptr@@Base>
  405606:	mov    rax,QWORD PTR [rax]
  405609:	pop    rcx
  40560a:	ret    
  40560b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405610 <table_row_init@@Base>:
  405610:	push   r14
  405612:	push   rbx
  405613:	push   rax
  405614:	mov    rax,QWORD PTR [rdi+0x18]
  405618:	mov    r14,QWORD PTR [rdi+0x20]
  40561c:	movsxd rbx,esi
  40561f:	shl    rax,0x3
  405623:	mov    rdi,rax
  405626:	call   4030d0 <malloc@plt>
  40562b:	mov    QWORD PTR [r14+rbx*8],rax
  40562f:	add    rsp,0x8
  405633:	pop    rbx
  405634:	pop    r14
  405636:	ret    
  405637:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405640 <table_get_row_ptr@@Base>:
  405640:	movsxd rax,esi
  405643:	shl    rax,0x3
  405647:	add    rax,QWORD PTR [rdi+0x20]
  40564b:	ret    
  40564c:	nop    DWORD PTR [rax+0x0]

0000000000405650 <table_row_destroy@@Base>:
  405650:	push   rbp
  405651:	push   r15
  405653:	push   r14
  405655:	push   r13
  405657:	push   r12
  405659:	push   rbx
  40565a:	push   rax
  40565b:	mov    r14d,esi
  40565e:	mov    r15,rdi
  405661:	call   4049b0 <table_get_column_length@@Base>
  405666:	mov    r12,QWORD PTR [r15+0x20]
  40566a:	movsxd r13,r14d
  40566d:	test   eax,eax
  40566f:	jle    405694 <table_row_destroy@@Base+0x44>
  405671:	mov    ebp,eax
  405673:	xor    ebx,ebx
  405675:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40567f:	nop
  405680:	mov    rdi,r15
  405683:	mov    esi,r14d
  405686:	mov    edx,ebx
  405688:	call   403fe0 <table_cell_destroy@@Base>
  40568d:	add    ebx,0x1
  405690:	cmp    ebp,ebx
  405692:	jne    405680 <table_row_destroy@@Base+0x30>
  405694:	mov    rdi,QWORD PTR [r12+r13*8]
  405698:	add    rsp,0x8
  40569c:	test   rdi,rdi
  40569f:	je     4056b0 <table_row_destroy@@Base+0x60>
  4056a1:	pop    rbx
  4056a2:	pop    r12
  4056a4:	pop    r13
  4056a6:	pop    r14
  4056a8:	pop    r15
  4056aa:	pop    rbp
  4056ab:	jmp    403030 <free@plt>
  4056b0:	pop    rbx
  4056b1:	pop    r12
  4056b3:	pop    r13
  4056b5:	pop    r14
  4056b7:	pop    r15
  4056b9:	pop    rbp
  4056ba:	ret    
  4056bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004056c0 <table_get_row_length@@Base>:
  4056c0:	mov    eax,DWORD PTR [rdi+0x28]
  4056c3:	ret    
  4056c4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4056ce:	xchg   ax,ax

00000000004056d0 <table_add_row@@Base>:
  4056d0:	push   rbp
  4056d1:	push   r15
  4056d3:	push   r14
  4056d5:	push   r12
  4056d7:	push   rbx
  4056d8:	mov    r12,rdi
  4056db:	mov    r15d,DWORD PTR [rdi+0x28]
  4056df:	movsxd r14,r15d
  4056e2:	mov    rsi,QWORD PTR [rdi+0x30]
  4056e6:	mov    rax,r14
  4056e9:	or     rax,rsi
  4056ec:	shr    rax,0x20
  4056f0:	je     405791 <table_add_row@@Base+0xc1>
  4056f6:	xor    edx,edx
  4056f8:	mov    rax,r14
  4056fb:	div    rsi
  4056fe:	test   rdx,rdx
  405701:	jne    405728 <table_add_row@@Base+0x58>
  405703:	add    rsi,QWORD PTR [r12+0x38]
  405708:	mov    QWORD PTR [r12+0x38],rsi
  40570d:	mov    rdi,QWORD PTR [r12+0x20]
  405712:	shl    rsi,0x3
  405716:	call   4030f0 <realloc@plt>
  40571b:	mov    QWORD PTR [r12+0x20],rax
  405720:	mov    r15d,DWORD PTR [r12+0x28]
  405725:	movsxd r14,r15d
  405728:	mov    rdi,r12
  40572b:	call   4049b0 <table_get_column_length@@Base>
  405730:	mov    ebp,eax
  405732:	mov    rdi,QWORD PTR [r12+0x18]
  405737:	mov    rbx,QWORD PTR [r12+0x20]
  40573c:	shl    rdi,0x3
  405740:	call   4030d0 <malloc@plt>
  405745:	mov    QWORD PTR [rbx+r14*8],rax
  405749:	test   ebp,ebp
  40574b:	jle    405764 <table_add_row@@Base+0x94>
  40574d:	xor    ebx,ebx
  40574f:	nop
  405750:	mov    rdi,r12
  405753:	mov    esi,r15d
  405756:	mov    edx,ebx
  405758:	call   403fa0 <table_cell_init@@Base>
  40575d:	add    ebx,0x1
  405760:	cmp    ebp,ebx
  405762:	jne    405750 <table_add_row@@Base+0x80>
  405764:	mov    esi,DWORD PTR [r12+0x28]
  405769:	mov    edx,0xffffffff
  40576e:	mov    ecx,0x2
  405773:	mov    rdi,r12
  405776:	call   403f40 <table_notify@@Base>
  40577b:	mov    eax,DWORD PTR [r12+0x28]
  405780:	lea    ecx,[rax+0x1]
  405783:	mov    DWORD PTR [r12+0x28],ecx
  405788:	pop    rbx
  405789:	pop    r12
  40578b:	pop    r14
  40578d:	pop    r15
  40578f:	pop    rbp
  405790:	ret    
  405791:	xor    edx,edx
  405793:	mov    eax,r15d
  405796:	div    esi
  405798:	test   rdx,rdx
  40579b:	jne    405728 <table_add_row@@Base+0x58>
  40579d:	jmp    405703 <table_add_row@@Base+0x33>
  4057a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4057ac:	nop    DWORD PTR [rax+0x0]

00000000004057b0 <table_remove_row@@Base>:
  4057b0:	push   rbp
  4057b1:	push   r15
  4057b3:	push   r14
  4057b5:	push   r12
  4057b7:	push   rbx
  4057b8:	mov    r14d,esi
  4057bb:	mov    rbx,rdi
  4057be:	mov    r12d,DWORD PTR [rdi+0x28]
  4057c2:	call   4049b0 <table_get_column_length@@Base>
  4057c7:	test   eax,eax
  4057c9:	jle    405801 <table_remove_row@@Base+0x51>
  4057cb:	mov    r15d,eax
  4057ce:	xor    ebp,ebp
  4057d0:	mov    rdi,rbx
  4057d3:	mov    esi,ebp
  4057d5:	call   404a30 <table_get_column_data_type@@Base>
  4057da:	cmp    eax,0x17
  4057dd:	je     4057f9 <table_remove_row@@Base+0x49>
  4057df:	mov    rdi,rbx
  4057e2:	mov    esi,r14d
  4057e5:	mov    edx,ebp
  4057e7:	call   403fc0 <table_get_cell_ptr@@Base>
  4057ec:	mov    rdi,QWORD PTR [rax]
  4057ef:	test   rdi,rdi
  4057f2:	je     4057f9 <table_remove_row@@Base+0x49>
  4057f4:	call   403030 <free@plt>
  4057f9:	add    ebp,0x1
  4057fc:	cmp    r15d,ebp
  4057ff:	jne    4057d0 <table_remove_row@@Base+0x20>
  405801:	mov    rax,QWORD PTR [rbx+0x20]
  405805:	movsxd rbp,r14d
  405808:	mov    rdi,QWORD PTR [rax+rbp*8]
  40580c:	test   rdi,rdi
  40580f:	je     405816 <table_remove_row@@Base+0x66>
  405811:	call   403030 <free@plt>
  405816:	add    r12d,0xffffffff
  40581a:	mov    ecx,r12d
  40581d:	sub    ecx,r14d
  405820:	jle    4058d8 <table_remove_row@@Base+0x128>
  405826:	movsxd rax,r12d
  405829:	mov    rdx,rbp
  40582c:	not    rdx
  40582f:	add    rdx,rax
  405832:	and    rcx,0x7
  405836:	je     405857 <table_remove_row@@Base+0xa7>
  405838:	neg    rcx
  40583b:	nop    DWORD PTR [rax+rax*1+0x0]
  405840:	mov    rsi,QWORD PTR [rbx+0x20]
  405844:	mov    rdi,QWORD PTR [rsi+rbp*8+0x8]
  405849:	mov    QWORD PTR [rsi+rbp*8],rdi
  40584d:	add    rbp,0x1
  405851:	add    rcx,0x1
  405855:	jne    405840 <table_remove_row@@Base+0x90>
  405857:	cmp    rdx,0x7
  40585b:	jb     4058d8 <table_remove_row@@Base+0x128>
  40585d:	nop    DWORD PTR [rax]
  405860:	mov    rcx,QWORD PTR [rbx+0x20]
  405864:	mov    rdx,QWORD PTR [rcx+rbp*8+0x8]
  405869:	mov    QWORD PTR [rcx+rbp*8],rdx
  40586d:	mov    rcx,QWORD PTR [rbx+0x20]
  405871:	mov    rdx,QWORD PTR [rcx+rbp*8+0x10]
  405876:	mov    QWORD PTR [rcx+rbp*8+0x8],rdx
  40587b:	mov    rcx,QWORD PTR [rbx+0x20]
  40587f:	mov    rdx,QWORD PTR [rcx+rbp*8+0x18]
  405884:	mov    QWORD PTR [rcx+rbp*8+0x10],rdx
  405889:	mov    rcx,QWORD PTR [rbx+0x20]
  40588d:	mov    rdx,QWORD PTR [rcx+rbp*8+0x20]
  405892:	mov    QWORD PTR [rcx+rbp*8+0x18],rdx
  405897:	mov    rcx,QWORD PTR [rbx+0x20]
  40589b:	mov    rdx,QWORD PTR [rcx+rbp*8+0x28]
  4058a0:	mov    QWORD PTR [rcx+rbp*8+0x20],rdx
  4058a5:	mov    rcx,QWORD PTR [rbx+0x20]
  4058a9:	mov    rdx,QWORD PTR [rcx+rbp*8+0x30]
  4058ae:	mov    QWORD PTR [rcx+rbp*8+0x28],rdx
  4058b3:	mov    rcx,QWORD PTR [rbx+0x20]
  4058b7:	mov    rdx,QWORD PTR [rcx+rbp*8+0x38]
  4058bc:	mov    QWORD PTR [rcx+rbp*8+0x30],rdx
  4058c1:	mov    rcx,QWORD PTR [rbx+0x20]
  4058c5:	mov    rdx,QWORD PTR [rcx+rbp*8+0x40]
  4058ca:	mov    QWORD PTR [rcx+rbp*8+0x38],rdx
  4058cf:	add    rbp,0x8
  4058d3:	cmp    rax,rbp
  4058d6:	jne    405860 <table_remove_row@@Base+0xb0>
  4058d8:	movsxd rax,DWORD PTR [rbx+0x28]
  4058dc:	add    rax,0xffffffffffffffff
  4058e0:	mov    DWORD PTR [rbx+0x28],eax
  4058e3:	mov    rcx,QWORD PTR [rbx+0x30]
  4058e7:	mov    rdx,rax
  4058ea:	or     rdx,rcx
  4058ed:	shr    rdx,0x20
  4058f1:	je     405939 <table_remove_row@@Base+0x189>
  4058f3:	xor    edx,edx
  4058f5:	div    rcx
  4058f8:	test   rdx,rdx
  4058fb:	jne    405919 <table_remove_row@@Base+0x169>
  4058fd:	mov    rdi,QWORD PTR [rbx+0x20]
  405901:	mov    rsi,QWORD PTR [rbx+0x38]
  405905:	sub    rsi,rcx
  405908:	mov    QWORD PTR [rbx+0x38],rsi
  40590c:	shl    rsi,0x3
  405910:	call   4030f0 <realloc@plt>
  405915:	mov    QWORD PTR [rbx+0x20],rax
  405919:	mov    edx,0xffffffff
  40591e:	mov    ecx,0x4
  405923:	mov    rdi,rbx
  405926:	mov    esi,r14d
  405929:	call   403f40 <table_notify@@Base>
  40592e:	xor    eax,eax
  405930:	pop    rbx
  405931:	pop    r12
  405933:	pop    r14
  405935:	pop    r15
  405937:	pop    rbp
  405938:	ret    
  405939:	xor    edx,edx
  40593b:	div    ecx
  40593d:	test   rdx,rdx
  405940:	jne    405919 <table_remove_row@@Base+0x169>
  405942:	jmp    4058fd <table_remove_row@@Base+0x14d>
  405944:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40594e:	xchg   ax,ax

0000000000405950 <table_set_row_ptr@@Base>:
  405950:	mov    rax,QWORD PTR [rdi+0x20]
  405954:	movsxd rcx,esi
  405957:	mov    rdx,QWORD PTR [rdx]
  40595a:	mov    QWORD PTR [rax+rcx*8],rdx
  40595e:	ret    
  40595f:	nop

0000000000405960 <table_set@@Base>:
  405960:	push   rbp
  405961:	push   r15
  405963:	push   r14
  405965:	push   r13
  405967:	push   r12
  405969:	push   rbx
  40596a:	push   rax
  40596b:	mov    r12d,r8d
  40596e:	mov    QWORD PTR [rsp],rcx
  405972:	mov    ebx,edx
  405974:	mov    r14d,esi
  405977:	mov    rbp,rdi
  40597a:	call   403fc0 <table_get_cell_ptr@@Base>
  40597f:	mov    r13,rax
  405982:	mov    rdi,rbp
  405985:	mov    esi,ebx
  405987:	call   404980 <table_get_col_ptr@@Base>
  40598c:	mov    r15d,0xffffffff
  405992:	cmp    r12d,0x17
  405996:	ja     405bd7 <table_set@@Base+0x277>
  40599c:	mov    ecx,r12d
  40599f:	lea    rdx,[rip+0x185e]        # 407204 <_IO_stdin_used@@Base+0x204>
  4059a6:	movsxd rcx,DWORD PTR [rdx+rcx*4]
  4059aa:	add    rcx,rdx
  4059ad:	jmp    rcx
  4059af:	cmp    DWORD PTR [rax+0x8],0x0
  4059b3:	jne    405bd7 <table_set@@Base+0x277>
  4059b9:	jmp    405ab7 <table_set@@Base+0x157>
  4059be:	cmp    DWORD PTR [rax+0x8],0x1
  4059c2:	je     405ab7 <table_set@@Base+0x157>
  4059c8:	jmp    405bd7 <table_set@@Base+0x277>
  4059cd:	cmp    DWORD PTR [rax+0x8],0x2
  4059d1:	je     405b9e <table_set@@Base+0x23e>
  4059d7:	jmp    405bd7 <table_set@@Base+0x277>
  4059dc:	cmp    DWORD PTR [rax+0x8],0x3
  4059e0:	je     405b9e <table_set@@Base+0x23e>
  4059e6:	jmp    405bd7 <table_set@@Base+0x277>
  4059eb:	cmp    DWORD PTR [rax+0x8],0x4
  4059ef:	je     405a52 <table_set@@Base+0xf2>
  4059f1:	jmp    405bd7 <table_set@@Base+0x277>
  4059f6:	cmp    DWORD PTR [rax+0x8],0x5
  4059fa:	je     405a52 <table_set@@Base+0xf2>
  4059fc:	jmp    405bd7 <table_set@@Base+0x277>
  405a01:	cmp    DWORD PTR [rax+0x8],0x6
  405a05:	je     405ab7 <table_set@@Base+0x157>
  405a0b:	jmp    405bd7 <table_set@@Base+0x277>
  405a10:	cmp    DWORD PTR [rax+0x8],0x7
  405a14:	je     405ab7 <table_set@@Base+0x157>
  405a1a:	jmp    405bd7 <table_set@@Base+0x277>
  405a1f:	cmp    DWORD PTR [rax+0x8],0x8
  405a23:	je     405aee <table_set@@Base+0x18e>
  405a29:	jmp    405bd7 <table_set@@Base+0x277>
  405a2e:	cmp    DWORD PTR [rax+0x8],0x9
  405a32:	je     405aee <table_set@@Base+0x18e>
  405a38:	jmp    405bd7 <table_set@@Base+0x277>
  405a3d:	cmp    DWORD PTR [rax+0x8],0xa
  405a41:	je     405a52 <table_set@@Base+0xf2>
  405a43:	jmp    405bd7 <table_set@@Base+0x277>
  405a48:	cmp    DWORD PTR [rax+0x8],0xb
  405a4c:	jne    405bd7 <table_set@@Base+0x277>
  405a52:	mov    rax,QWORD PTR [r13+0x0]
  405a56:	test   rax,rax
  405a59:	jne    405a72 <table_set@@Base+0x112>
  405a5b:	mov    edi,0x2
  405a60:	call   4030d0 <malloc@plt>
  405a65:	mov    QWORD PTR [r13+0x0],rax
  405a69:	test   rax,rax
  405a6c:	je     405bd7 <table_set@@Base+0x277>
  405a72:	mov    rcx,QWORD PTR [rsp]
  405a76:	movzx  ecx,WORD PTR [rcx]
  405a79:	mov    WORD PTR [rax],cx
  405a7c:	jmp    405bc2 <table_set@@Base+0x262>
  405a81:	cmp    DWORD PTR [rax+0x8],0xc
  405a85:	je     405aee <table_set@@Base+0x18e>
  405a87:	jmp    405bd7 <table_set@@Base+0x277>
  405a8c:	cmp    DWORD PTR [rax+0x8],0xd
  405a90:	je     405aee <table_set@@Base+0x18e>
  405a92:	jmp    405bd7 <table_set@@Base+0x277>
  405a97:	cmp    DWORD PTR [rax+0x8],0xe
  405a9b:	je     405aee <table_set@@Base+0x18e>
  405a9d:	jmp    405bd7 <table_set@@Base+0x277>
  405aa2:	cmp    DWORD PTR [rax+0x8],0xf
  405aa6:	je     405aee <table_set@@Base+0x18e>
  405aa8:	jmp    405bd7 <table_set@@Base+0x277>
  405aad:	cmp    DWORD PTR [rax+0x8],0x10
  405ab1:	jne    405bd7 <table_set@@Base+0x277>
  405ab7:	mov    rax,QWORD PTR [r13+0x0]
  405abb:	test   rax,rax
  405abe:	jne    405ad7 <table_set@@Base+0x177>
  405ac0:	mov    edi,0x4
  405ac5:	call   4030d0 <malloc@plt>
  405aca:	mov    QWORD PTR [r13+0x0],rax
  405ace:	test   rax,rax
  405ad1:	je     405bd7 <table_set@@Base+0x277>
  405ad7:	mov    rcx,QWORD PTR [rsp]
  405adb:	mov    ecx,DWORD PTR [rcx]
  405add:	mov    DWORD PTR [rax],ecx
  405adf:	jmp    405bc2 <table_set@@Base+0x262>
  405ae4:	cmp    DWORD PTR [rax+0x8],0x11
  405ae8:	jne    405bd7 <table_set@@Base+0x277>
  405aee:	mov    rax,QWORD PTR [r13+0x0]
  405af2:	test   rax,rax
  405af5:	jne    405b0e <table_set@@Base+0x1ae>
  405af7:	mov    edi,0x8
  405afc:	call   4030d0 <malloc@plt>
  405b01:	mov    QWORD PTR [r13+0x0],rax
  405b05:	test   rax,rax
  405b08:	je     405bd7 <table_set@@Base+0x277>
  405b0e:	mov    rcx,QWORD PTR [rsp]
  405b12:	mov    rcx,QWORD PTR [rcx]
  405b15:	mov    QWORD PTR [rax],rcx
  405b18:	jmp    405bc2 <table_set@@Base+0x262>
  405b1d:	cmp    DWORD PTR [rax+0x8],0x12
  405b21:	jne    405bd7 <table_set@@Base+0x277>
  405b27:	mov    rax,QWORD PTR [r13+0x0]
  405b2b:	test   rax,rax
  405b2e:	jne    405b47 <table_set@@Base+0x1e7>
  405b30:	mov    edi,0x10
  405b35:	call   4030d0 <malloc@plt>
  405b3a:	mov    QWORD PTR [r13+0x0],rax
  405b3e:	test   rax,rax
  405b41:	je     405bd7 <table_set@@Base+0x277>
  405b47:	mov    rcx,QWORD PTR [rsp]
  405b4b:	vmovups xmm0,XMMWORD PTR [rcx]
  405b4f:	vmovups XMMWORD PTR [rax],xmm0
  405b53:	jmp    405bc2 <table_set@@Base+0x262>
  405b55:	cmp    DWORD PTR [rax+0x8],0x13
  405b59:	je     405b9e <table_set@@Base+0x23e>
  405b5b:	jmp    405bd7 <table_set@@Base+0x277>
  405b5d:	cmp    DWORD PTR [rax+0x8],0x14
  405b61:	je     405b9e <table_set@@Base+0x23e>
  405b63:	jmp    405bd7 <table_set@@Base+0x277>
  405b65:	cmp    DWORD PTR [rax+0x8],0x15
  405b69:	jne    405bd7 <table_set@@Base+0x277>
  405b6b:	mov    rdi,QWORD PTR [rsp]
  405b6f:	call   403060 <strlen@plt>
  405b74:	mov    rdi,QWORD PTR [r13+0x0]
  405b78:	lea    rsi,[rax+0x1]
  405b7c:	call   4030f0 <realloc@plt>
  405b81:	mov    QWORD PTR [r13+0x0],rax
  405b85:	test   rax,rax
  405b88:	je     405bd7 <table_set@@Base+0x277>
  405b8a:	mov    rdi,rax
  405b8d:	mov    rsi,QWORD PTR [rsp]
  405b91:	call   403040 <strcpy@plt>
  405b96:	jmp    405bc2 <table_set@@Base+0x262>
  405b98:	cmp    DWORD PTR [rax+0x8],0x16
  405b9c:	jne    405bd7 <table_set@@Base+0x277>
  405b9e:	mov    rax,QWORD PTR [r13+0x0]
  405ba2:	test   rax,rax
  405ba5:	jne    405bba <table_set@@Base+0x25a>
  405ba7:	mov    edi,0x1
  405bac:	call   4030d0 <malloc@plt>
  405bb1:	mov    QWORD PTR [r13+0x0],rax
  405bb5:	test   rax,rax
  405bb8:	je     405bd7 <table_set@@Base+0x277>
  405bba:	mov    rcx,QWORD PTR [rsp]
  405bbe:	mov    cl,BYTE PTR [rcx]
  405bc0:	mov    BYTE PTR [rax],cl
  405bc2:	mov    ecx,0x1
  405bc7:	mov    rdi,rbp
  405bca:	mov    esi,r14d
  405bcd:	mov    edx,ebx
  405bcf:	call   403f40 <table_notify@@Base>
  405bd4:	xor    r15d,r15d
  405bd7:	mov    eax,r15d
  405bda:	add    rsp,0x8
  405bde:	pop    rbx
  405bdf:	pop    r12
  405be1:	pop    r13
  405be3:	pop    r14
  405be5:	pop    r15
  405be7:	pop    rbp
  405be8:	ret    
  405be9:	cmp    DWORD PTR [rax+0x8],0x17
  405bed:	jne    405bd7 <table_set@@Base+0x277>
  405bef:	mov    rax,QWORD PTR [rsp]
  405bf3:	mov    QWORD PTR [r13+0x0],rax
  405bf7:	jmp    405bc2 <table_set@@Base+0x262>
  405bf9:	nop    DWORD PTR [rax+0x0]

0000000000405c00 <table_set_bool@@Base>:
  405c00:	push   rbp
  405c01:	push   r15
  405c03:	push   r14
  405c05:	push   r13
  405c07:	push   r12
  405c09:	push   rbx
  405c0a:	push   rax
  405c0b:	mov    r15d,ecx
  405c0e:	mov    ebx,edx
  405c10:	mov    r14d,esi
  405c13:	mov    rbp,rdi
  405c16:	call   403fc0 <table_get_cell_ptr@@Base>
  405c1b:	mov    r13,rax
  405c1e:	mov    rdi,rbp
  405c21:	mov    esi,ebx
  405c23:	call   404980 <table_get_col_ptr@@Base>
  405c28:	mov    r12d,0xffffffff
  405c2e:	cmp    DWORD PTR [rax+0x8],0x16
  405c32:	jne    405c68 <table_set_bool@@Base+0x68>
  405c34:	mov    rax,QWORD PTR [r13+0x0]
  405c38:	test   rax,rax
  405c3b:	jne    405c50 <table_set_bool@@Base+0x50>
  405c3d:	mov    edi,0x1
  405c42:	call   4030d0 <malloc@plt>
  405c47:	mov    QWORD PTR [r13+0x0],rax
  405c4b:	test   rax,rax
  405c4e:	je     405c68 <table_set_bool@@Base+0x68>
  405c50:	mov    BYTE PTR [rax],r15b
  405c53:	mov    ecx,0x1
  405c58:	mov    rdi,rbp
  405c5b:	mov    esi,r14d
  405c5e:	mov    edx,ebx
  405c60:	call   403f40 <table_notify@@Base>
  405c65:	xor    r12d,r12d
  405c68:	mov    eax,r12d
  405c6b:	add    rsp,0x8
  405c6f:	pop    rbx
  405c70:	pop    r12
  405c72:	pop    r13
  405c74:	pop    r14
  405c76:	pop    r15
  405c78:	pop    rbp
  405c79:	ret    
  405c7a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405c80 <table_set_int@@Base>:
  405c80:	push   rbp
  405c81:	push   r15
  405c83:	push   r14
  405c85:	push   r13
  405c87:	push   r12
  405c89:	push   rbx
  405c8a:	push   rax
  405c8b:	mov    r15d,ecx
  405c8e:	mov    ebx,edx
  405c90:	mov    r14d,esi
  405c93:	mov    rbp,rdi
  405c96:	call   403fc0 <table_get_cell_ptr@@Base>
  405c9b:	mov    r13,rax
  405c9e:	mov    rdi,rbp
  405ca1:	mov    esi,ebx
  405ca3:	call   404980 <table_get_col_ptr@@Base>
  405ca8:	mov    r12d,0xffffffff
  405cae:	cmp    DWORD PTR [rax+0x8],0x0
  405cb2:	jne    405ce8 <table_set_int@@Base+0x68>
  405cb4:	mov    rax,QWORD PTR [r13+0x0]
  405cb8:	test   rax,rax
  405cbb:	jne    405cd0 <table_set_int@@Base+0x50>
  405cbd:	mov    edi,0x4
  405cc2:	call   4030d0 <malloc@plt>
  405cc7:	mov    QWORD PTR [r13+0x0],rax
  405ccb:	test   rax,rax
  405cce:	je     405ce8 <table_set_int@@Base+0x68>
  405cd0:	mov    DWORD PTR [rax],r15d
  405cd3:	mov    ecx,0x1
  405cd8:	mov    rdi,rbp
  405cdb:	mov    esi,r14d
  405cde:	mov    edx,ebx
  405ce0:	call   403f40 <table_notify@@Base>
  405ce5:	xor    r12d,r12d
  405ce8:	mov    eax,r12d
  405ceb:	add    rsp,0x8
  405cef:	pop    rbx
  405cf0:	pop    r12
  405cf2:	pop    r13
  405cf4:	pop    r14
  405cf6:	pop    r15
  405cf8:	pop    rbp
  405cf9:	ret    
  405cfa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405d00 <table_set_uint@@Base>:
  405d00:	push   rbp
  405d01:	push   r15
  405d03:	push   r14
  405d05:	push   r13
  405d07:	push   r12
  405d09:	push   rbx
  405d0a:	push   rax
  405d0b:	mov    r15d,ecx
  405d0e:	mov    ebx,edx
  405d10:	mov    r14d,esi
  405d13:	mov    rbp,rdi
  405d16:	call   403fc0 <table_get_cell_ptr@@Base>
  405d1b:	mov    r13,rax
  405d1e:	mov    rdi,rbp
  405d21:	mov    esi,ebx
  405d23:	call   404980 <table_get_col_ptr@@Base>
  405d28:	mov    r12d,0xffffffff
  405d2e:	cmp    DWORD PTR [rax+0x8],0x1
  405d32:	jne    405d68 <table_set_uint@@Base+0x68>
  405d34:	mov    rax,QWORD PTR [r13+0x0]
  405d38:	test   rax,rax
  405d3b:	jne    405d50 <table_set_uint@@Base+0x50>
  405d3d:	mov    edi,0x4
  405d42:	call   4030d0 <malloc@plt>
  405d47:	mov    QWORD PTR [r13+0x0],rax
  405d4b:	test   rax,rax
  405d4e:	je     405d68 <table_set_uint@@Base+0x68>
  405d50:	mov    DWORD PTR [rax],r15d
  405d53:	mov    ecx,0x1
  405d58:	mov    rdi,rbp
  405d5b:	mov    esi,r14d
  405d5e:	mov    edx,ebx
  405d60:	call   403f40 <table_notify@@Base>
  405d65:	xor    r12d,r12d
  405d68:	mov    eax,r12d
  405d6b:	add    rsp,0x8
  405d6f:	pop    rbx
  405d70:	pop    r12
  405d72:	pop    r13
  405d74:	pop    r14
  405d76:	pop    r15
  405d78:	pop    rbp
  405d79:	ret    
  405d7a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405d80 <table_set_int8@@Base>:
  405d80:	push   rbp
  405d81:	push   r15
  405d83:	push   r14
  405d85:	push   r13
  405d87:	push   r12
  405d89:	push   rbx
  405d8a:	push   rax
  405d8b:	mov    r15d,ecx
  405d8e:	mov    ebx,edx
  405d90:	mov    r14d,esi
  405d93:	mov    rbp,rdi
  405d96:	call   403fc0 <table_get_cell_ptr@@Base>
  405d9b:	mov    r13,rax
  405d9e:	mov    rdi,rbp
  405da1:	mov    esi,ebx
  405da3:	call   404980 <table_get_col_ptr@@Base>
  405da8:	mov    r12d,0xffffffff
  405dae:	cmp    DWORD PTR [rax+0x8],0x2
  405db2:	jne    405de8 <table_set_int8@@Base+0x68>
  405db4:	mov    rax,QWORD PTR [r13+0x0]
  405db8:	test   rax,rax
  405dbb:	jne    405dd0 <table_set_int8@@Base+0x50>
  405dbd:	mov    edi,0x1
  405dc2:	call   4030d0 <malloc@plt>
  405dc7:	mov    QWORD PTR [r13+0x0],rax
  405dcb:	test   rax,rax
  405dce:	je     405de8 <table_set_int8@@Base+0x68>
  405dd0:	mov    BYTE PTR [rax],r15b
  405dd3:	mov    ecx,0x1
  405dd8:	mov    rdi,rbp
  405ddb:	mov    esi,r14d
  405dde:	mov    edx,ebx
  405de0:	call   403f40 <table_notify@@Base>
  405de5:	xor    r12d,r12d
  405de8:	mov    eax,r12d
  405deb:	add    rsp,0x8
  405def:	pop    rbx
  405df0:	pop    r12
  405df2:	pop    r13
  405df4:	pop    r14
  405df6:	pop    r15
  405df8:	pop    rbp
  405df9:	ret    
  405dfa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405e00 <table_set_uint8@@Base>:
  405e00:	push   rbp
  405e01:	push   r15
  405e03:	push   r14
  405e05:	push   r13
  405e07:	push   r12
  405e09:	push   rbx
  405e0a:	push   rax
  405e0b:	mov    r15d,ecx
  405e0e:	mov    ebx,edx
  405e10:	mov    r14d,esi
  405e13:	mov    rbp,rdi
  405e16:	call   403fc0 <table_get_cell_ptr@@Base>
  405e1b:	mov    r13,rax
  405e1e:	mov    rdi,rbp
  405e21:	mov    esi,ebx
  405e23:	call   404980 <table_get_col_ptr@@Base>
  405e28:	mov    r12d,0xffffffff
  405e2e:	cmp    DWORD PTR [rax+0x8],0x3
  405e32:	jne    405e68 <table_set_uint8@@Base+0x68>
  405e34:	mov    rax,QWORD PTR [r13+0x0]
  405e38:	test   rax,rax
  405e3b:	jne    405e50 <table_set_uint8@@Base+0x50>
  405e3d:	mov    edi,0x1
  405e42:	call   4030d0 <malloc@plt>
  405e47:	mov    QWORD PTR [r13+0x0],rax
  405e4b:	test   rax,rax
  405e4e:	je     405e68 <table_set_uint8@@Base+0x68>
  405e50:	mov    BYTE PTR [rax],r15b
  405e53:	mov    ecx,0x1
  405e58:	mov    rdi,rbp
  405e5b:	mov    esi,r14d
  405e5e:	mov    edx,ebx
  405e60:	call   403f40 <table_notify@@Base>
  405e65:	xor    r12d,r12d
  405e68:	mov    eax,r12d
  405e6b:	add    rsp,0x8
  405e6f:	pop    rbx
  405e70:	pop    r12
  405e72:	pop    r13
  405e74:	pop    r14
  405e76:	pop    r15
  405e78:	pop    rbp
  405e79:	ret    
  405e7a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000405e80 <table_set_int16@@Base>:
  405e80:	push   rbp
  405e81:	push   r15
  405e83:	push   r14
  405e85:	push   r13
  405e87:	push   r12
  405e89:	push   rbx
  405e8a:	push   rax
  405e8b:	mov    r15d,ecx
  405e8e:	mov    ebx,edx
  405e90:	mov    r14d,esi
  405e93:	mov    rbp,rdi
  405e96:	call   403fc0 <table_get_cell_ptr@@Base>
  405e9b:	mov    r13,rax
  405e9e:	mov    rdi,rbp
  405ea1:	mov    esi,ebx
  405ea3:	call   404980 <table_get_col_ptr@@Base>
  405ea8:	mov    r12d,0xffffffff
  405eae:	cmp    DWORD PTR [rax+0x8],0x4
  405eb2:	jne    405ee9 <table_set_int16@@Base+0x69>
  405eb4:	mov    rax,QWORD PTR [r13+0x0]
  405eb8:	test   rax,rax
  405ebb:	jne    405ed0 <table_set_int16@@Base+0x50>
  405ebd:	mov    edi,0x2
  405ec2:	call   4030d0 <malloc@plt>
  405ec7:	mov    QWORD PTR [r13+0x0],rax
  405ecb:	test   rax,rax
  405ece:	je     405ee9 <table_set_int16@@Base+0x69>
  405ed0:	mov    WORD PTR [rax],r15w
  405ed4:	mov    ecx,0x1
  405ed9:	mov    rdi,rbp
  405edc:	mov    esi,r14d
  405edf:	mov    edx,ebx
  405ee1:	call   403f40 <table_notify@@Base>
  405ee6:	xor    r12d,r12d
  405ee9:	mov    eax,r12d
  405eec:	add    rsp,0x8
  405ef0:	pop    rbx
  405ef1:	pop    r12
  405ef3:	pop    r13
  405ef5:	pop    r14
  405ef7:	pop    r15
  405ef9:	pop    rbp
  405efa:	ret    
  405efb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405f00 <table_set_uint16@@Base>:
  405f00:	push   rbp
  405f01:	push   r15
  405f03:	push   r14
  405f05:	push   r13
  405f07:	push   r12
  405f09:	push   rbx
  405f0a:	push   rax
  405f0b:	mov    r15d,ecx
  405f0e:	mov    ebx,edx
  405f10:	mov    r14d,esi
  405f13:	mov    rbp,rdi
  405f16:	call   403fc0 <table_get_cell_ptr@@Base>
  405f1b:	mov    r13,rax
  405f1e:	mov    rdi,rbp
  405f21:	mov    esi,ebx
  405f23:	call   404980 <table_get_col_ptr@@Base>
  405f28:	mov    r12d,0xffffffff
  405f2e:	cmp    DWORD PTR [rax+0x8],0x5
  405f32:	jne    405f69 <table_set_uint16@@Base+0x69>
  405f34:	mov    rax,QWORD PTR [r13+0x0]
  405f38:	test   rax,rax
  405f3b:	jne    405f50 <table_set_uint16@@Base+0x50>
  405f3d:	mov    edi,0x2
  405f42:	call   4030d0 <malloc@plt>
  405f47:	mov    QWORD PTR [r13+0x0],rax
  405f4b:	test   rax,rax
  405f4e:	je     405f69 <table_set_uint16@@Base+0x69>
  405f50:	mov    WORD PTR [rax],r15w
  405f54:	mov    ecx,0x1
  405f59:	mov    rdi,rbp
  405f5c:	mov    esi,r14d
  405f5f:	mov    edx,ebx
  405f61:	call   403f40 <table_notify@@Base>
  405f66:	xor    r12d,r12d
  405f69:	mov    eax,r12d
  405f6c:	add    rsp,0x8
  405f70:	pop    rbx
  405f71:	pop    r12
  405f73:	pop    r13
  405f75:	pop    r14
  405f77:	pop    r15
  405f79:	pop    rbp
  405f7a:	ret    
  405f7b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000405f80 <table_set_int32@@Base>:
  405f80:	push   rbp
  405f81:	push   r15
  405f83:	push   r14
  405f85:	push   r13
  405f87:	push   r12
  405f89:	push   rbx
  405f8a:	push   rax
  405f8b:	mov    r15d,ecx
  405f8e:	mov    ebx,edx
  405f90:	mov    r14d,esi
  405f93:	mov    rbp,rdi
  405f96:	call   403fc0 <table_get_cell_ptr@@Base>
  405f9b:	mov    r13,rax
  405f9e:	mov    rdi,rbp
  405fa1:	mov    esi,ebx
  405fa3:	call   404980 <table_get_col_ptr@@Base>
  405fa8:	mov    r12d,0xffffffff
  405fae:	cmp    DWORD PTR [rax+0x8],0x6
  405fb2:	jne    405fe8 <table_set_int32@@Base+0x68>
  405fb4:	mov    rax,QWORD PTR [r13+0x0]
  405fb8:	test   rax,rax
  405fbb:	jne    405fd0 <table_set_int32@@Base+0x50>
  405fbd:	mov    edi,0x4
  405fc2:	call   4030d0 <malloc@plt>
  405fc7:	mov    QWORD PTR [r13+0x0],rax
  405fcb:	test   rax,rax
  405fce:	je     405fe8 <table_set_int32@@Base+0x68>
  405fd0:	mov    DWORD PTR [rax],r15d
  405fd3:	mov    ecx,0x1
  405fd8:	mov    rdi,rbp
  405fdb:	mov    esi,r14d
  405fde:	mov    edx,ebx
  405fe0:	call   403f40 <table_notify@@Base>
  405fe5:	xor    r12d,r12d
  405fe8:	mov    eax,r12d
  405feb:	add    rsp,0x8
  405fef:	pop    rbx
  405ff0:	pop    r12
  405ff2:	pop    r13
  405ff4:	pop    r14
  405ff6:	pop    r15
  405ff8:	pop    rbp
  405ff9:	ret    
  405ffa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406000 <table_set_uint32@@Base>:
  406000:	push   rbp
  406001:	push   r15
  406003:	push   r14
  406005:	push   r13
  406007:	push   r12
  406009:	push   rbx
  40600a:	push   rax
  40600b:	mov    r15d,ecx
  40600e:	mov    ebx,edx
  406010:	mov    r14d,esi
  406013:	mov    rbp,rdi
  406016:	call   403fc0 <table_get_cell_ptr@@Base>
  40601b:	mov    r13,rax
  40601e:	mov    rdi,rbp
  406021:	mov    esi,ebx
  406023:	call   404980 <table_get_col_ptr@@Base>
  406028:	mov    r12d,0xffffffff
  40602e:	cmp    DWORD PTR [rax+0x8],0x7
  406032:	jne    406068 <table_set_uint32@@Base+0x68>
  406034:	mov    rax,QWORD PTR [r13+0x0]
  406038:	test   rax,rax
  40603b:	jne    406050 <table_set_uint32@@Base+0x50>
  40603d:	mov    edi,0x4
  406042:	call   4030d0 <malloc@plt>
  406047:	mov    QWORD PTR [r13+0x0],rax
  40604b:	test   rax,rax
  40604e:	je     406068 <table_set_uint32@@Base+0x68>
  406050:	mov    DWORD PTR [rax],r15d
  406053:	mov    ecx,0x1
  406058:	mov    rdi,rbp
  40605b:	mov    esi,r14d
  40605e:	mov    edx,ebx
  406060:	call   403f40 <table_notify@@Base>
  406065:	xor    r12d,r12d
  406068:	mov    eax,r12d
  40606b:	add    rsp,0x8
  40606f:	pop    rbx
  406070:	pop    r12
  406072:	pop    r13
  406074:	pop    r14
  406076:	pop    r15
  406078:	pop    rbp
  406079:	ret    
  40607a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406080 <table_set_int64@@Base>:
  406080:	push   rbp
  406081:	push   r15
  406083:	push   r14
  406085:	push   r13
  406087:	push   r12
  406089:	push   rbx
  40608a:	push   rax
  40608b:	mov    r15,rcx
  40608e:	mov    ebx,edx
  406090:	mov    r14d,esi
  406093:	mov    rbp,rdi
  406096:	call   403fc0 <table_get_cell_ptr@@Base>
  40609b:	mov    r13,rax
  40609e:	mov    rdi,rbp
  4060a1:	mov    esi,ebx
  4060a3:	call   404980 <table_get_col_ptr@@Base>
  4060a8:	mov    r12d,0xffffffff
  4060ae:	cmp    DWORD PTR [rax+0x8],0x8
  4060b2:	jne    4060e8 <table_set_int64@@Base+0x68>
  4060b4:	mov    rax,QWORD PTR [r13+0x0]
  4060b8:	test   rax,rax
  4060bb:	jne    4060d0 <table_set_int64@@Base+0x50>
  4060bd:	mov    edi,0x8
  4060c2:	call   4030d0 <malloc@plt>
  4060c7:	mov    QWORD PTR [r13+0x0],rax
  4060cb:	test   rax,rax
  4060ce:	je     4060e8 <table_set_int64@@Base+0x68>
  4060d0:	mov    QWORD PTR [rax],r15
  4060d3:	mov    ecx,0x1
  4060d8:	mov    rdi,rbp
  4060db:	mov    esi,r14d
  4060de:	mov    edx,ebx
  4060e0:	call   403f40 <table_notify@@Base>
  4060e5:	xor    r12d,r12d
  4060e8:	mov    eax,r12d
  4060eb:	add    rsp,0x8
  4060ef:	pop    rbx
  4060f0:	pop    r12
  4060f2:	pop    r13
  4060f4:	pop    r14
  4060f6:	pop    r15
  4060f8:	pop    rbp
  4060f9:	ret    
  4060fa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406100 <table_set_uint64@@Base>:
  406100:	push   rbp
  406101:	push   r15
  406103:	push   r14
  406105:	push   r13
  406107:	push   r12
  406109:	push   rbx
  40610a:	push   rax
  40610b:	mov    r15,rcx
  40610e:	mov    ebx,edx
  406110:	mov    r14d,esi
  406113:	mov    rbp,rdi
  406116:	call   403fc0 <table_get_cell_ptr@@Base>
  40611b:	mov    r13,rax
  40611e:	mov    rdi,rbp
  406121:	mov    esi,ebx
  406123:	call   404980 <table_get_col_ptr@@Base>
  406128:	mov    r12d,0xffffffff
  40612e:	cmp    DWORD PTR [rax+0x8],0x9
  406132:	jne    406168 <table_set_uint64@@Base+0x68>
  406134:	mov    rax,QWORD PTR [r13+0x0]
  406138:	test   rax,rax
  40613b:	jne    406150 <table_set_uint64@@Base+0x50>
  40613d:	mov    edi,0x8
  406142:	call   4030d0 <malloc@plt>
  406147:	mov    QWORD PTR [r13+0x0],rax
  40614b:	test   rax,rax
  40614e:	je     406168 <table_set_uint64@@Base+0x68>
  406150:	mov    QWORD PTR [rax],r15
  406153:	mov    ecx,0x1
  406158:	mov    rdi,rbp
  40615b:	mov    esi,r14d
  40615e:	mov    edx,ebx
  406160:	call   403f40 <table_notify@@Base>
  406165:	xor    r12d,r12d
  406168:	mov    eax,r12d
  40616b:	add    rsp,0x8
  40616f:	pop    rbx
  406170:	pop    r12
  406172:	pop    r13
  406174:	pop    r14
  406176:	pop    r15
  406178:	pop    rbp
  406179:	ret    
  40617a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406180 <table_set_short@@Base>:
  406180:	push   rbp
  406181:	push   r15
  406183:	push   r14
  406185:	push   r13
  406187:	push   r12
  406189:	push   rbx
  40618a:	push   rax
  40618b:	mov    r15d,ecx
  40618e:	mov    ebx,edx
  406190:	mov    r14d,esi
  406193:	mov    rbp,rdi
  406196:	call   403fc0 <table_get_cell_ptr@@Base>
  40619b:	mov    r13,rax
  40619e:	mov    rdi,rbp
  4061a1:	mov    esi,ebx
  4061a3:	call   404980 <table_get_col_ptr@@Base>
  4061a8:	mov    r12d,0xffffffff
  4061ae:	cmp    DWORD PTR [rax+0x8],0xa
  4061b2:	jne    4061e9 <table_set_short@@Base+0x69>
  4061b4:	mov    rax,QWORD PTR [r13+0x0]
  4061b8:	test   rax,rax
  4061bb:	jne    4061d0 <table_set_short@@Base+0x50>
  4061bd:	mov    edi,0x2
  4061c2:	call   4030d0 <malloc@plt>
  4061c7:	mov    QWORD PTR [r13+0x0],rax
  4061cb:	test   rax,rax
  4061ce:	je     4061e9 <table_set_short@@Base+0x69>
  4061d0:	mov    WORD PTR [rax],r15w
  4061d4:	mov    ecx,0x1
  4061d9:	mov    rdi,rbp
  4061dc:	mov    esi,r14d
  4061df:	mov    edx,ebx
  4061e1:	call   403f40 <table_notify@@Base>
  4061e6:	xor    r12d,r12d
  4061e9:	mov    eax,r12d
  4061ec:	add    rsp,0x8
  4061f0:	pop    rbx
  4061f1:	pop    r12
  4061f3:	pop    r13
  4061f5:	pop    r14
  4061f7:	pop    r15
  4061f9:	pop    rbp
  4061fa:	ret    
  4061fb:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406200 <table_set_ushort@@Base>:
  406200:	push   rbp
  406201:	push   r15
  406203:	push   r14
  406205:	push   r13
  406207:	push   r12
  406209:	push   rbx
  40620a:	push   rax
  40620b:	mov    r15d,ecx
  40620e:	mov    ebx,edx
  406210:	mov    r14d,esi
  406213:	mov    rbp,rdi
  406216:	call   403fc0 <table_get_cell_ptr@@Base>
  40621b:	mov    r13,rax
  40621e:	mov    rdi,rbp
  406221:	mov    esi,ebx
  406223:	call   404980 <table_get_col_ptr@@Base>
  406228:	mov    r12d,0xffffffff
  40622e:	cmp    DWORD PTR [rax+0x8],0xb
  406232:	jne    406269 <table_set_ushort@@Base+0x69>
  406234:	mov    rax,QWORD PTR [r13+0x0]
  406238:	test   rax,rax
  40623b:	jne    406250 <table_set_ushort@@Base+0x50>
  40623d:	mov    edi,0x2
  406242:	call   4030d0 <malloc@plt>
  406247:	mov    QWORD PTR [r13+0x0],rax
  40624b:	test   rax,rax
  40624e:	je     406269 <table_set_ushort@@Base+0x69>
  406250:	mov    WORD PTR [rax],r15w
  406254:	mov    ecx,0x1
  406259:	mov    rdi,rbp
  40625c:	mov    esi,r14d
  40625f:	mov    edx,ebx
  406261:	call   403f40 <table_notify@@Base>
  406266:	xor    r12d,r12d
  406269:	mov    eax,r12d
  40626c:	add    rsp,0x8
  406270:	pop    rbx
  406271:	pop    r12
  406273:	pop    r13
  406275:	pop    r14
  406277:	pop    r15
  406279:	pop    rbp
  40627a:	ret    
  40627b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406280 <table_set_long@@Base>:
  406280:	push   rbp
  406281:	push   r15
  406283:	push   r14
  406285:	push   r13
  406287:	push   r12
  406289:	push   rbx
  40628a:	push   rax
  40628b:	mov    r15,rcx
  40628e:	mov    ebx,edx
  406290:	mov    r14d,esi
  406293:	mov    rbp,rdi
  406296:	call   403fc0 <table_get_cell_ptr@@Base>
  40629b:	mov    r13,rax
  40629e:	mov    rdi,rbp
  4062a1:	mov    esi,ebx
  4062a3:	call   404980 <table_get_col_ptr@@Base>
  4062a8:	mov    r12d,0xffffffff
  4062ae:	cmp    DWORD PTR [rax+0x8],0xc
  4062b2:	jne    4062e8 <table_set_long@@Base+0x68>
  4062b4:	mov    rax,QWORD PTR [r13+0x0]
  4062b8:	test   rax,rax
  4062bb:	jne    4062d0 <table_set_long@@Base+0x50>
  4062bd:	mov    edi,0x8
  4062c2:	call   4030d0 <malloc@plt>
  4062c7:	mov    QWORD PTR [r13+0x0],rax
  4062cb:	test   rax,rax
  4062ce:	je     4062e8 <table_set_long@@Base+0x68>
  4062d0:	mov    QWORD PTR [rax],r15
  4062d3:	mov    ecx,0x1
  4062d8:	mov    rdi,rbp
  4062db:	mov    esi,r14d
  4062de:	mov    edx,ebx
  4062e0:	call   403f40 <table_notify@@Base>
  4062e5:	xor    r12d,r12d
  4062e8:	mov    eax,r12d
  4062eb:	add    rsp,0x8
  4062ef:	pop    rbx
  4062f0:	pop    r12
  4062f2:	pop    r13
  4062f4:	pop    r14
  4062f6:	pop    r15
  4062f8:	pop    rbp
  4062f9:	ret    
  4062fa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406300 <table_set_ulong@@Base>:
  406300:	push   rbp
  406301:	push   r15
  406303:	push   r14
  406305:	push   r13
  406307:	push   r12
  406309:	push   rbx
  40630a:	push   rax
  40630b:	mov    r15,rcx
  40630e:	mov    ebx,edx
  406310:	mov    r14d,esi
  406313:	mov    rbp,rdi
  406316:	call   403fc0 <table_get_cell_ptr@@Base>
  40631b:	mov    r13,rax
  40631e:	mov    rdi,rbp
  406321:	mov    esi,ebx
  406323:	call   404980 <table_get_col_ptr@@Base>
  406328:	mov    r12d,0xffffffff
  40632e:	cmp    DWORD PTR [rax+0x8],0xd
  406332:	jne    406368 <table_set_ulong@@Base+0x68>
  406334:	mov    rax,QWORD PTR [r13+0x0]
  406338:	test   rax,rax
  40633b:	jne    406350 <table_set_ulong@@Base+0x50>
  40633d:	mov    edi,0x8
  406342:	call   4030d0 <malloc@plt>
  406347:	mov    QWORD PTR [r13+0x0],rax
  40634b:	test   rax,rax
  40634e:	je     406368 <table_set_ulong@@Base+0x68>
  406350:	mov    QWORD PTR [rax],r15
  406353:	mov    ecx,0x1
  406358:	mov    rdi,rbp
  40635b:	mov    esi,r14d
  40635e:	mov    edx,ebx
  406360:	call   403f40 <table_notify@@Base>
  406365:	xor    r12d,r12d
  406368:	mov    eax,r12d
  40636b:	add    rsp,0x8
  40636f:	pop    rbx
  406370:	pop    r12
  406372:	pop    r13
  406374:	pop    r14
  406376:	pop    r15
  406378:	pop    rbp
  406379:	ret    
  40637a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406380 <table_set_llong@@Base>:
  406380:	push   rbp
  406381:	push   r15
  406383:	push   r14
  406385:	push   r13
  406387:	push   r12
  406389:	push   rbx
  40638a:	push   rax
  40638b:	mov    r15,rcx
  40638e:	mov    ebx,edx
  406390:	mov    r14d,esi
  406393:	mov    rbp,rdi
  406396:	call   403fc0 <table_get_cell_ptr@@Base>
  40639b:	mov    r13,rax
  40639e:	mov    rdi,rbp
  4063a1:	mov    esi,ebx
  4063a3:	call   404980 <table_get_col_ptr@@Base>
  4063a8:	mov    r12d,0xffffffff
  4063ae:	cmp    DWORD PTR [rax+0x8],0xe
  4063b2:	jne    4063e8 <table_set_llong@@Base+0x68>
  4063b4:	mov    rax,QWORD PTR [r13+0x0]
  4063b8:	test   rax,rax
  4063bb:	jne    4063d0 <table_set_llong@@Base+0x50>
  4063bd:	mov    edi,0x8
  4063c2:	call   4030d0 <malloc@plt>
  4063c7:	mov    QWORD PTR [r13+0x0],rax
  4063cb:	test   rax,rax
  4063ce:	je     4063e8 <table_set_llong@@Base+0x68>
  4063d0:	mov    QWORD PTR [rax],r15
  4063d3:	mov    ecx,0x1
  4063d8:	mov    rdi,rbp
  4063db:	mov    esi,r14d
  4063de:	mov    edx,ebx
  4063e0:	call   403f40 <table_notify@@Base>
  4063e5:	xor    r12d,r12d
  4063e8:	mov    eax,r12d
  4063eb:	add    rsp,0x8
  4063ef:	pop    rbx
  4063f0:	pop    r12
  4063f2:	pop    r13
  4063f4:	pop    r14
  4063f6:	pop    r15
  4063f8:	pop    rbp
  4063f9:	ret    
  4063fa:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406400 <table_set_ullong@@Base>:
  406400:	push   rbp
  406401:	push   r15
  406403:	push   r14
  406405:	push   r13
  406407:	push   r12
  406409:	push   rbx
  40640a:	push   rax
  40640b:	mov    r15,rcx
  40640e:	mov    ebx,edx
  406410:	mov    r14d,esi
  406413:	mov    rbp,rdi
  406416:	call   403fc0 <table_get_cell_ptr@@Base>
  40641b:	mov    r13,rax
  40641e:	mov    rdi,rbp
  406421:	mov    esi,ebx
  406423:	call   404980 <table_get_col_ptr@@Base>
  406428:	mov    r12d,0xffffffff
  40642e:	cmp    DWORD PTR [rax+0x8],0xf
  406432:	jne    406468 <table_set_ullong@@Base+0x68>
  406434:	mov    rax,QWORD PTR [r13+0x0]
  406438:	test   rax,rax
  40643b:	jne    406450 <table_set_ullong@@Base+0x50>
  40643d:	mov    edi,0x8
  406442:	call   4030d0 <malloc@plt>
  406447:	mov    QWORD PTR [r13+0x0],rax
  40644b:	test   rax,rax
  40644e:	je     406468 <table_set_ullong@@Base+0x68>
  406450:	mov    QWORD PTR [rax],r15
  406453:	mov    ecx,0x1
  406458:	mov    rdi,rbp
  40645b:	mov    esi,r14d
  40645e:	mov    edx,ebx
  406460:	call   403f40 <table_notify@@Base>
  406465:	xor    r12d,r12d
  406468:	mov    eax,r12d
  40646b:	add    rsp,0x8
  40646f:	pop    rbx
  406470:	pop    r12
  406472:	pop    r13
  406474:	pop    r14
  406476:	pop    r15
  406478:	pop    rbp
  406479:	ret    
  40647a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406480 <table_set_float@@Base>:
  406480:	push   rbp
  406481:	push   r15
  406483:	push   r14
  406485:	push   r12
  406487:	push   rbx
  406488:	sub    rsp,0x10
  40648c:	vmovss DWORD PTR [rsp+0xc],xmm0
  406492:	mov    ebx,edx
  406494:	mov    r14d,esi
  406497:	mov    rbp,rdi
  40649a:	call   403fc0 <table_get_cell_ptr@@Base>
  40649f:	mov    r12,rax
  4064a2:	mov    rdi,rbp
  4064a5:	mov    esi,ebx
  4064a7:	call   404980 <table_get_col_ptr@@Base>
  4064ac:	mov    r15d,0xffffffff
  4064b2:	cmp    DWORD PTR [rax+0x8],0x10
  4064b6:	jne    4064f3 <table_set_float@@Base+0x73>
  4064b8:	mov    rax,QWORD PTR [r12]
  4064bc:	test   rax,rax
  4064bf:	jne    4064d4 <table_set_float@@Base+0x54>
  4064c1:	mov    edi,0x4
  4064c6:	call   4030d0 <malloc@plt>
  4064cb:	mov    QWORD PTR [r12],rax
  4064cf:	test   rax,rax
  4064d2:	je     4064f3 <table_set_float@@Base+0x73>
  4064d4:	vmovss xmm0,DWORD PTR [rsp+0xc]
  4064da:	vmovss DWORD PTR [rax],xmm0
  4064de:	mov    ecx,0x1
  4064e3:	mov    rdi,rbp
  4064e6:	mov    esi,r14d
  4064e9:	mov    edx,ebx
  4064eb:	call   403f40 <table_notify@@Base>
  4064f0:	xor    r15d,r15d
  4064f3:	mov    eax,r15d
  4064f6:	add    rsp,0x10
  4064fa:	pop    rbx
  4064fb:	pop    r12
  4064fd:	pop    r14
  4064ff:	pop    r15
  406501:	pop    rbp
  406502:	ret    
  406503:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40650d:	nop    DWORD PTR [rax]

0000000000406510 <table_set_double@@Base>:
  406510:	push   rbp
  406511:	push   r15
  406513:	push   r14
  406515:	push   r12
  406517:	push   rbx
  406518:	sub    rsp,0x10
  40651c:	vmovsd QWORD PTR [rsp+0x8],xmm0
  406522:	mov    ebx,edx
  406524:	mov    r14d,esi
  406527:	mov    rbp,rdi
  40652a:	call   403fc0 <table_get_cell_ptr@@Base>
  40652f:	mov    r12,rax
  406532:	mov    rdi,rbp
  406535:	mov    esi,ebx
  406537:	call   404980 <table_get_col_ptr@@Base>
  40653c:	mov    r15d,0xffffffff
  406542:	cmp    DWORD PTR [rax+0x8],0x11
  406546:	jne    406583 <table_set_double@@Base+0x73>
  406548:	mov    rax,QWORD PTR [r12]
  40654c:	test   rax,rax
  40654f:	jne    406564 <table_set_double@@Base+0x54>
  406551:	mov    edi,0x8
  406556:	call   4030d0 <malloc@plt>
  40655b:	mov    QWORD PTR [r12],rax
  40655f:	test   rax,rax
  406562:	je     406583 <table_set_double@@Base+0x73>
  406564:	vmovsd xmm0,QWORD PTR [rsp+0x8]
  40656a:	vmovsd QWORD PTR [rax],xmm0
  40656e:	mov    ecx,0x1
  406573:	mov    rdi,rbp
  406576:	mov    esi,r14d
  406579:	mov    edx,ebx
  40657b:	call   403f40 <table_notify@@Base>
  406580:	xor    r15d,r15d
  406583:	mov    eax,r15d
  406586:	add    rsp,0x10
  40658a:	pop    rbx
  40658b:	pop    r12
  40658d:	pop    r14
  40658f:	pop    r15
  406591:	pop    rbp
  406592:	ret    
  406593:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40659d:	nop    DWORD PTR [rax]

00000000004065a0 <table_set_ldouble@@Base>:
  4065a0:	push   rbp
  4065a1:	push   r15
  4065a3:	push   r14
  4065a5:	push   r12
  4065a7:	push   rbx
  4065a8:	sub    rsp,0x20
  4065ac:	mov    r15d,edx
  4065af:	mov    r14d,esi
  4065b2:	mov    rbp,rdi
  4065b5:	fld    TBYTE PTR [rsp+0x50]
  4065b9:	fstp   TBYTE PTR [rsp+0x14]
  4065bd:	call   403fc0 <table_get_cell_ptr@@Base>
  4065c2:	mov    r12,rax
  4065c5:	mov    rdi,rbp
  4065c8:	mov    esi,r15d
  4065cb:	call   404980 <table_get_col_ptr@@Base>
  4065d0:	mov    ebx,0xffffffff
  4065d5:	cmp    DWORD PTR [rax+0x8],0x12
  4065d9:	jne    406622 <table_set_ldouble@@Base+0x82>
  4065db:	mov    rax,QWORD PTR [r12]
  4065df:	test   rax,rax
  4065e2:	jne    4065f7 <table_set_ldouble@@Base+0x57>
  4065e4:	mov    edi,0x10
  4065e9:	call   4030d0 <malloc@plt>
  4065ee:	mov    QWORD PTR [r12],rax
  4065f2:	test   rax,rax
  4065f5:	je     406622 <table_set_ldouble@@Base+0x82>
  4065f7:	fld    TBYTE PTR [rsp+0x14]
  4065fb:	fstp   TBYTE PTR [rax]
  4065fd:	movzx  ecx,WORD PTR [rsp+0x12]
  406602:	mov    WORD PTR [rax+0xe],cx
  406606:	mov    ecx,DWORD PTR [rsp+0xe]
  40660a:	mov    DWORD PTR [rax+0xa],ecx
  40660d:	mov    ecx,0x1
  406612:	mov    rdi,rbp
  406615:	mov    esi,r14d
  406618:	mov    edx,r15d
  40661b:	call   403f40 <table_notify@@Base>
  406620:	xor    ebx,ebx
  406622:	mov    eax,ebx
  406624:	add    rsp,0x20
  406628:	pop    rbx
  406629:	pop    r12
  40662b:	pop    r14
  40662d:	pop    r15
  40662f:	pop    rbp
  406630:	ret    
  406631:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40663b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406640 <table_set_string@@Base>:
  406640:	mov    r8d,0x15
  406646:	jmp    405960 <table_set@@Base>
  40664b:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406650 <table_set_char@@Base>:
  406650:	push   rbp
  406651:	push   r15
  406653:	push   r14
  406655:	push   r13
  406657:	push   r12
  406659:	push   rbx
  40665a:	push   rax
  40665b:	mov    r15d,ecx
  40665e:	mov    ebx,edx
  406660:	mov    r14d,esi
  406663:	mov    rbp,rdi
  406666:	call   403fc0 <table_get_cell_ptr@@Base>
  40666b:	mov    r13,rax
  40666e:	mov    rdi,rbp
  406671:	mov    esi,ebx
  406673:	call   404980 <table_get_col_ptr@@Base>
  406678:	mov    r12d,0xffffffff
  40667e:	cmp    DWORD PTR [rax+0x8],0x13
  406682:	jne    4066b8 <table_set_char@@Base+0x68>
  406684:	mov    rax,QWORD PTR [r13+0x0]
  406688:	test   rax,rax
  40668b:	jne    4066a0 <table_set_char@@Base+0x50>
  40668d:	mov    edi,0x1
  406692:	call   4030d0 <malloc@plt>
  406697:	mov    QWORD PTR [r13+0x0],rax
  40669b:	test   rax,rax
  40669e:	je     4066b8 <table_set_char@@Base+0x68>
  4066a0:	mov    BYTE PTR [rax],r15b
  4066a3:	mov    ecx,0x1
  4066a8:	mov    rdi,rbp
  4066ab:	mov    esi,r14d
  4066ae:	mov    edx,ebx
  4066b0:	call   403f40 <table_notify@@Base>
  4066b5:	xor    r12d,r12d
  4066b8:	mov    eax,r12d
  4066bb:	add    rsp,0x8
  4066bf:	pop    rbx
  4066c0:	pop    r12
  4066c2:	pop    r13
  4066c4:	pop    r14
  4066c6:	pop    r15
  4066c8:	pop    rbp
  4066c9:	ret    
  4066ca:	nop    WORD PTR [rax+rax*1+0x0]

00000000004066d0 <table_set_uchar@@Base>:
  4066d0:	push   rbp
  4066d1:	push   r15
  4066d3:	push   r14
  4066d5:	push   r13
  4066d7:	push   r12
  4066d9:	push   rbx
  4066da:	push   rax
  4066db:	mov    r15d,ecx
  4066de:	mov    ebx,edx
  4066e0:	mov    r14d,esi
  4066e3:	mov    rbp,rdi
  4066e6:	call   403fc0 <table_get_cell_ptr@@Base>
  4066eb:	mov    r13,rax
  4066ee:	mov    rdi,rbp
  4066f1:	mov    esi,ebx
  4066f3:	call   404980 <table_get_col_ptr@@Base>
  4066f8:	mov    r12d,0xffffffff
  4066fe:	cmp    DWORD PTR [rax+0x8],0x14
  406702:	jne    406738 <table_set_uchar@@Base+0x68>
  406704:	mov    rax,QWORD PTR [r13+0x0]
  406708:	test   rax,rax
  40670b:	jne    406720 <table_set_uchar@@Base+0x50>
  40670d:	mov    edi,0x1
  406712:	call   4030d0 <malloc@plt>
  406717:	mov    QWORD PTR [r13+0x0],rax
  40671b:	test   rax,rax
  40671e:	je     406738 <table_set_uchar@@Base+0x68>
  406720:	mov    BYTE PTR [rax],r15b
  406723:	mov    ecx,0x1
  406728:	mov    rdi,rbp
  40672b:	mov    esi,r14d
  40672e:	mov    edx,ebx
  406730:	call   403f40 <table_notify@@Base>
  406735:	xor    r12d,r12d
  406738:	mov    eax,r12d
  40673b:	add    rsp,0x8
  40673f:	pop    rbx
  406740:	pop    r12
  406742:	pop    r13
  406744:	pop    r14
  406746:	pop    r15
  406748:	pop    rbp
  406749:	ret    
  40674a:	nop    WORD PTR [rax+rax*1+0x0]

0000000000406750 <table_set_ptr@@Base>:
  406750:	push   rbp
  406751:	push   r15
  406753:	push   r14
  406755:	push   r12
  406757:	push   rbx
  406758:	mov    r15,rcx
  40675b:	mov    ebx,edx
  40675d:	mov    r14d,esi
  406760:	mov    rbp,rdi
  406763:	call   403fc0 <table_get_cell_ptr@@Base>
  406768:	mov    r12,rax
  40676b:	mov    rdi,rbp
  40676e:	mov    esi,ebx
  406770:	call   404980 <table_get_col_ptr@@Base>
  406775:	mov    rcx,rax
  406778:	mov    eax,0xffffffff
  40677d:	cmp    DWORD PTR [rcx+0x8],0x17
  406781:	jne    40679b <table_set_ptr@@Base+0x4b>
  406783:	mov    QWORD PTR [r12],r15
  406787:	mov    ecx,0x1
  40678c:	mov    rdi,rbp
  40678f:	mov    esi,r14d
  406792:	mov    edx,ebx
  406794:	call   403f40 <table_notify@@Base>
  406799:	xor    eax,eax
  40679b:	pop    rbx
  40679c:	pop    r12
  40679e:	pop    r14
  4067a0:	pop    r15
  4067a2:	pop    rbp
  4067a3:	ret    
  4067a4:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4067ae:	xchg   ax,ax

00000000004067b0 <table_column_sort@@Base>:
  4067b0:	push   rbp
  4067b1:	push   r15
  4067b3:	push   r14
  4067b5:	push   r13
  4067b7:	push   r12
  4067b9:	push   rbx
  4067ba:	sub    rsp,0x38
  4067be:	mov    QWORD PTR [rsp+0x28],rdx
  4067c3:	mov    r15,rdi
  4067c6:	test   ecx,ecx
  4067c8:	jle    4069a1 <table_column_sort@@Base+0x1f1>
  4067ce:	mov    rbx,rsi
  4067d1:	mov    eax,ecx
  4067d3:	mov    QWORD PTR [rsp+0x30],rax
  4067d8:	xor    r13d,r13d
  4067db:	nop    DWORD PTR [rax+rax*1+0x0]
  4067e0:	mov    rdi,r15
  4067e3:	call   4056c0 <table_get_row_length@@Base>
  4067e8:	mov    r14d,eax
  4067eb:	test   r13,r13
  4067ee:	je     406950 <table_column_sort@@Base+0x1a0>
  4067f4:	mov    esi,DWORD PTR [rbx+r13*4-0x4]
  4067f9:	mov    rdi,r15
  4067fc:	call   404f60 <table_get_column_compare_function@@Base>
  406801:	mov    QWORD PTR [rsp+0x18],rax
  406806:	test   r14d,r14d
  406809:	jle    406992 <table_column_sort@@Base+0x1e2>
  40680f:	lea    eax,[r14-0x1]
  406813:	mov    DWORD PTR [rsp+0x24],eax
  406817:	xor    ebp,ebp
  406819:	mov    edx,0xffffffff
  40681e:	mov    ecx,0xffffffff
  406823:	mov    QWORD PTR [rsp+0x8],r14
  406828:	mov    QWORD PTR [rsp+0x10],r13
  40682d:	nop    DWORD PTR [rax]
  406830:	test   ebp,ebp
  406832:	je     40688c <table_column_sort@@Base+0xdc>
  406834:	mov    DWORD PTR [rsp+0x4],edx
  406838:	mov    DWORD PTR [rsp],ecx
  40683b:	lea    r12d,[rbp-0x1]
  40683f:	nop
  406840:	mov    edx,DWORD PTR [rbx+r13*4-0x4]
  406845:	mov    rdi,r15
  406848:	mov    esi,ebp
  40684a:	call   405480 <table_get@@Base>
  40684f:	mov    r14,rax
  406852:	mov    edx,DWORD PTR [rbx+r13*4-0x4]
  406857:	mov    rdi,r15
  40685a:	mov    esi,r12d
  40685d:	call   405480 <table_get@@Base>
  406862:	mov    rdi,r14
  406865:	mov    rsi,rax
  406868:	call   QWORD PTR [rsp+0x18]
  40686c:	test   eax,eax
  40686e:	jne    4068b0 <table_column_sort@@Base+0x100>
  406870:	add    r13,0xffffffffffffffff
  406874:	jg     406840 <table_column_sort@@Base+0x90>
  406876:	mov    ecx,DWORD PTR [rsp]
  406879:	cmp    ecx,0xffffffff
  40687c:	cmove  ecx,r12d
  406880:	mov    edx,ebp
  406882:	mov    r13,QWORD PTR [rsp+0x10]
  406887:	mov    r14,QWORD PTR [rsp+0x8]
  40688c:	cmp    ecx,0xffffffff
  40688f:	je     4068c6 <table_column_sort@@Base+0x116>
  406891:	cmp    edx,ebp
  406893:	jne    4068d0 <table_column_sort@@Base+0x120>
  406895:	cmp    edx,DWORD PTR [rsp+0x24]
  406899:	je     4068d0 <table_column_sort@@Base+0x120>
  40689b:	mov    edx,ebp
  40689d:	jmp    406936 <table_column_sort@@Base+0x186>
  4068a2:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4068ac:	nop    DWORD PTR [rax+0x0]
  4068b0:	mov    r13,QWORD PTR [rsp+0x10]
  4068b5:	mov    r14,QWORD PTR [rsp+0x8]
  4068ba:	mov    ecx,DWORD PTR [rsp]
  4068bd:	mov    edx,DWORD PTR [rsp+0x4]
  4068c1:	cmp    ecx,0xffffffff
  4068c4:	jne    406891 <table_column_sort@@Base+0xe1>
  4068c6:	mov    ecx,0xffffffff
  4068cb:	jmp    406936 <table_column_sort@@Base+0x186>
  4068cd:	nop    DWORD PTR [rax]
  4068d0:	mov    r14d,DWORD PTR [rbx+r13*4]
  4068d4:	mov    rax,QWORD PTR [rsp+0x28]
  4068d9:	mov    eax,DWORD PTR [rax+r13*4]
  4068dd:	mov    DWORD PTR [rsp],eax
  4068e0:	mov    eax,0x1
  4068e5:	sub    eax,ecx
  4068e7:	add    eax,edx
  4068e9:	movsxd rdi,eax
  4068ec:	mov    esi,0x8
  4068f1:	mov    r13d,ecx
  4068f4:	mov    DWORD PTR [rsp+0x4],edx
  4068f8:	call   4030a0 <calloc@plt>
  4068fd:	mov    r12,rax
  406900:	mov    rdi,r15
  406903:	mov    rsi,rax
  406906:	mov    edx,r14d
  406909:	mov    r14,QWORD PTR [rsp+0x8]
  40690e:	mov    ecx,r13d
  406911:	mov    r13,QWORD PTR [rsp+0x10]
  406916:	mov    r8d,DWORD PTR [rsp+0x4]
  40691b:	mov    r9d,DWORD PTR [rsp]
  40691f:	call   4069d0 <table_column_sort@@Base+0x220>
  406924:	mov    rdi,r12
  406927:	call   403030 <free@plt>
  40692c:	mov    ecx,0xffffffff
  406931:	mov    edx,0xffffffff
  406936:	add    ebp,0x1
  406939:	cmp    ebp,r14d
  40693c:	jne    406830 <table_column_sort@@Base+0x80>
  406942:	jmp    406992 <table_column_sort@@Base+0x1e2>
  406944:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40694e:	xchg   ax,ax
  406950:	mov    r12d,DWORD PTR [rbx]
  406953:	mov    rax,QWORD PTR [rsp+0x28]
  406958:	mov    eax,DWORD PTR [rax]
  40695a:	mov    DWORD PTR [rsp+0x18],eax
  40695e:	movsxd rdi,r14d
  406961:	add    r14d,0xffffffff
  406965:	mov    esi,0x8
  40696a:	call   4030a0 <calloc@plt>
  40696f:	mov    rbp,rax
  406972:	xor    ecx,ecx
  406974:	mov    rdi,r15
  406977:	mov    rsi,rax
  40697a:	mov    edx,r12d
  40697d:	mov    r8d,r14d
  406980:	mov    r9d,DWORD PTR [rsp+0x18]
  406985:	call   4069d0 <table_column_sort@@Base+0x220>
  40698a:	mov    rdi,rbp
  40698d:	call   403030 <free@plt>
  406992:	add    r13,0x1
  406996:	cmp    r13,QWORD PTR [rsp+0x30]
  40699b:	jne    4067e0 <table_column_sort@@Base+0x30>
  4069a1:	mov    esi,0xffffffff
  4069a6:	mov    edx,0xffffffff
  4069ab:	mov    ecx,0x20
  4069b0:	mov    rdi,r15
  4069b3:	add    rsp,0x38
  4069b7:	pop    rbx
  4069b8:	pop    r12
  4069ba:	pop    r13
  4069bc:	pop    r14
  4069be:	pop    r15
  4069c0:	pop    rbp
  4069c1:	jmp    403f40 <table_notify@@Base>
  4069c6:	nop    WORD PTR cs:[rax+rax*1+0x0]
  4069d0:	push   rbp
  4069d1:	push   r15
  4069d3:	push   r14
  4069d5:	push   r13
  4069d7:	push   r12
  4069d9:	push   rbx
  4069da:	sub    rsp,0x48
  4069de:	mov    QWORD PTR [rsp+0x20],r8
  4069e3:	cmp    r8d,ecx
  4069e6:	jle    406b9c <table_column_sort@@Base+0x3ec>
  4069ec:	mov    r14d,ecx
  4069ef:	mov    rbx,rsi
  4069f2:	mov    r12,QWORD PTR [rsp+0x20]
  4069f7:	lea    eax,[r12+r14*1]
  4069fb:	mov    r12d,eax
  4069fe:	shr    r12d,0x1f
  406a02:	add    r12d,eax
  406a05:	sar    r12d,1
  406a08:	mov    r13,rdi
  406a0b:	mov    r15d,edx
  406a0e:	mov    r8d,r12d
  406a11:	mov    DWORD PTR [rsp+0x2c],r9d
  406a16:	call   4069d0 <table_column_sort@@Base+0x220>
  406a1b:	mov    QWORD PTR [rsp+0x40],r12
  406a20:	lea    ebp,[r12+0x1]
  406a25:	mov    rdi,r13
  406a28:	mov    rsi,rbx
  406a2b:	mov    edx,r15d
  406a2e:	mov    ecx,ebp
  406a30:	mov    r12,QWORD PTR [rsp+0x20]
  406a35:	mov    r8d,r12d
  406a38:	mov    r9d,DWORD PTR [rsp+0x2c]
  406a3d:	call   4069d0 <table_column_sort@@Base+0x220>
  406a42:	mov    QWORD PTR [rsp+0x10],r13
  406a47:	mov    rdi,r13
  406a4a:	mov    DWORD PTR [rsp+0x1c],r15d
  406a4f:	mov    esi,r15d
  406a52:	call   404f60 <table_get_column_compare_function@@Base>
  406a57:	mov    QWORD PTR [rsp+0x38],rax
  406a5c:	lea    r15d,[r12+0x1]
  406a61:	sub    r15d,r14d
  406a64:	xor    r13d,r13d
  406a67:	mov    r12d,r14d
  406a6a:	nop    WORD PTR [rax+rax*1+0x0]
  406a70:	cmp    DWORD PTR [rsp+0x2c],0x0
  406a75:	je     406ad0 <table_column_sort@@Base+0x320>
  406a77:	cmp    r12d,DWORD PTR [rsp+0x40]
  406a7c:	jg     406b20 <table_column_sort@@Base+0x370>
  406a82:	cmp    ebp,DWORD PTR [rsp+0x20]
  406a86:	jg     406b40 <table_column_sort@@Base+0x390>
  406a8c:	mov    DWORD PTR [rsp+0xc],ebp
  406a90:	mov    rbp,QWORD PTR [rsp+0x10]
  406a95:	mov    rdi,rbp
  406a98:	mov    esi,r12d
  406a9b:	mov    edx,DWORD PTR [rsp+0x1c]
  406a9f:	call   405480 <table_get@@Base>
  406aa4:	mov    QWORD PTR [rsp+0x30],rax
  406aa9:	mov    rdi,rbp
  406aac:	mov    ebp,DWORD PTR [rsp+0xc]
  406ab0:	mov    esi,ebp
  406ab2:	mov    edx,DWORD PTR [rsp+0x1c]
  406ab6:	call   405480 <table_get@@Base>
  406abb:	mov    rdi,QWORD PTR [rsp+0x30]
  406ac0:	mov    rsi,rax
  406ac3:	call   QWORD PTR [rsp+0x38]
  406ac7:	test   eax,eax
  406ac9:	jg     406b40 <table_column_sort@@Base+0x390>
  406acb:	jmp    406b20 <table_column_sort@@Base+0x370>
  406acd:	nop    DWORD PTR [rax]
  406ad0:	cmp    r12d,DWORD PTR [rsp+0x40]
  406ad5:	jg     406b20 <table_column_sort@@Base+0x370>
  406ad7:	cmp    ebp,DWORD PTR [rsp+0x20]
  406adb:	jg     406b40 <table_column_sort@@Base+0x390>
  406add:	mov    rdi,QWORD PTR [rsp+0x10]
  406ae2:	mov    esi,r12d
  406ae5:	mov    DWORD PTR [rsp+0xc],ebp
  406ae9:	mov    ebp,DWORD PTR [rsp+0x1c]
  406aed:	mov    edx,ebp
  406aef:	call   405480 <table_get@@Base>
  406af4:	mov    QWORD PTR [rsp+0x30],rax
  406af9:	mov    rdi,QWORD PTR [rsp+0x10]
  406afe:	mov    esi,DWORD PTR [rsp+0xc]
  406b02:	mov    edx,ebp
  406b04:	mov    ebp,DWORD PTR [rsp+0xc]
  406b08:	call   405480 <table_get@@Base>
  406b0d:	mov    rdi,QWORD PTR [rsp+0x30]
  406b12:	mov    rsi,rax
  406b15:	call   QWORD PTR [rsp+0x38]
  406b19:	test   eax,eax
  406b1b:	js     406b40 <table_column_sort@@Base+0x390>
  406b1d:	nop    DWORD PTR [rax]
  406b20:	mov    rdi,QWORD PTR [rsp+0x10]
  406b25:	mov    esi,ebp
  406b27:	call   405640 <table_get_row_ptr@@Base>
  406b2c:	mov    rax,QWORD PTR [rax]
  406b2f:	mov    QWORD PTR [rbx+r13*8],rax
  406b33:	add    ebp,0x1
  406b36:	jmp    406b58 <table_column_sort@@Base+0x3a8>
  406b38:	nop    DWORD PTR [rax+rax*1+0x0]
  406b40:	mov    rdi,QWORD PTR [rsp+0x10]
  406b45:	mov    esi,r12d
  406b48:	call   405640 <table_get_row_ptr@@Base>
  406b4d:	mov    rax,QWORD PTR [rax]
  406b50:	mov    QWORD PTR [rbx+r13*8],rax
  406b54:	add    r12d,0x1
  406b58:	add    r13,0x1
  406b5c:	cmp    r15,r13
  406b5f:	jne    406a70 <table_column_sort@@Base+0x2c0>
  406b65:	cmp    DWORD PTR [rsp+0x20],r14d
  406b6a:	mov    rbp,QWORD PTR [rsp+0x10]
  406b6f:	jl     406b9c <table_column_sort@@Base+0x3ec>
  406b71:	nop    WORD PTR cs:[rax+rax*1+0x0]
  406b7b:	nop    DWORD PTR [rax+rax*1+0x0]
  406b80:	mov    rdi,rbp
  406b83:	mov    esi,r14d
  406b86:	mov    rdx,rbx
  406b89:	call   405950 <table_set_row_ptr@@Base>
  406b8e:	add    rbx,0x8
  406b92:	add    r14d,0x1
  406b96:	add    r15,0xffffffffffffffff
  406b9a:	jne    406b80 <table_column_sort@@Base+0x3d0>
  406b9c:	add    rsp,0x48
  406ba0:	pop    rbx
  406ba1:	pop    r12
  406ba3:	pop    r13
  406ba5:	pop    r14
  406ba7:	pop    r15
  406ba9:	pop    rbp
  406baa:	ret    
  406bab:	nop    DWORD PTR [rax+rax*1+0x0]

0000000000406bb0 <__libc_csu_init@@Base>:
  406bb0:	endbr64 
  406bb4:	push   r15
  406bb6:	lea    r15,[rip+0x3183]        # 409d40 <_IO_stdin_used@@Base+0x2d40>
  406bbd:	push   r14
  406bbf:	mov    r14,rdx
  406bc2:	push   r13
  406bc4:	mov    r13,rsi
  406bc7:	push   r12
  406bc9:	mov    r12d,edi
  406bcc:	push   rbp
  406bcd:	lea    rbp,[rip+0x3174]        # 409d48 <_IO_stdin_used@@Base+0x2d48>
  406bd4:	push   rbx
  406bd5:	sub    rbp,r15
  406bd8:	sub    rsp,0x8
  406bdc:	call   403000 <free@plt-0x30>
  406be1:	sar    rbp,0x3
  406be5:	je     406c06 <__libc_csu_init@@Base+0x56>
  406be7:	xor    ebx,ebx
  406be9:	nop    DWORD PTR [rax+0x0]
  406bf0:	mov    rdx,r14
  406bf3:	mov    rsi,r13
  406bf6:	mov    edi,r12d
  406bf9:	call   QWORD PTR [r15+rbx*8]
  406bfd:	add    rbx,0x1
  406c01:	cmp    rbp,rbx
  406c04:	jne    406bf0 <__libc_csu_init@@Base+0x40>
  406c06:	add    rsp,0x8
  406c0a:	pop    rbx
  406c0b:	pop    rbp
  406c0c:	pop    r12
  406c0e:	pop    r13
  406c10:	pop    r14
  406c12:	pop    r15
  406c14:	ret    
  406c15:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000406c20 <__libc_csu_fini@@Base>:
  406c20:	endbr64 
  406c24:	ret    

Disassembly of section .fini:

0000000000406c28 <.fini>:
  406c28:	endbr64 
  406c2c:	sub    rsp,0x8
  406c30:	add    rsp,0x8
  406c34:	ret    
