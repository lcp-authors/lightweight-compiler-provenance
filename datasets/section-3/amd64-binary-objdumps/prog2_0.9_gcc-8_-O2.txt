
../repos/prog2/0.9:     file format elf64-x86-64


Disassembly of section .init:

0000000000401000 <.init>:
  401000:	endbr64 
  401004:	sub    rsp,0x8
  401008:	mov    rax,QWORD PTR [rip+0x2fe9]        # 403ff8 <__gmon_start__>
  40100f:	test   rax,rax
  401012:	je     401016 <strlen@plt-0x7a>
  401014:	call   rax
  401016:	add    rsp,0x8
  40101a:	ret    

Disassembly of section .plt:

0000000000401020 <.plt>:
  401020:	push   QWORD PTR [rip+0x2fe2]        # 404008 <_IO_stdin_used@@Base+0x2008>
  401026:	bnd jmp QWORD PTR [rip+0x2fe3]        # 404010 <_IO_stdin_used@@Base+0x2010>
  40102d:	nop    DWORD PTR [rax]
  401030:	endbr64 
  401034:	push   0x0
  401039:	bnd jmp 401020 <strlen@plt-0x70>
  40103f:	nop
  401040:	endbr64 
  401044:	push   0x1
  401049:	bnd jmp 401020 <strlen@plt-0x70>
  40104f:	nop
  401050:	endbr64 
  401054:	push   0x2
  401059:	bnd jmp 401020 <strlen@plt-0x70>
  40105f:	nop
  401060:	endbr64 
  401064:	push   0x3
  401069:	bnd jmp 401020 <strlen@plt-0x70>
  40106f:	nop
  401070:	endbr64 
  401074:	push   0x4
  401079:	bnd jmp 401020 <strlen@plt-0x70>
  40107f:	nop
  401080:	endbr64 
  401084:	push   0x5
  401089:	bnd jmp 401020 <strlen@plt-0x70>
  40108f:	nop

Disassembly of section .plt.sec:

0000000000401090 <strlen@plt>:
  401090:	endbr64 
  401094:	bnd jmp QWORD PTR [rip+0x2f7d]        # 404018 <strlen@GLIBC_2.2.5>
  40109b:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010a0 <__stack_chk_fail@plt>:
  4010a0:	endbr64 
  4010a4:	bnd jmp QWORD PTR [rip+0x2f75]        # 404020 <__stack_chk_fail@GLIBC_2.4>
  4010ab:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010b0 <strcmp@plt>:
  4010b0:	endbr64 
  4010b4:	bnd jmp QWORD PTR [rip+0x2f6d]        # 404028 <strcmp@GLIBC_2.2.5>
  4010bb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010c0 <__strcpy_chk@plt>:
  4010c0:	endbr64 
  4010c4:	bnd jmp QWORD PTR [rip+0x2f65]        # 404030 <__strcpy_chk@GLIBC_2.3.4>
  4010cb:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010d0 <__printf_chk@plt>:
  4010d0:	endbr64 
  4010d4:	bnd jmp QWORD PTR [rip+0x2f5d]        # 404038 <__printf_chk@GLIBC_2.3.4>
  4010db:	nop    DWORD PTR [rax+rax*1+0x0]

00000000004010e0 <__isoc99_scanf@plt>:
  4010e0:	endbr64 
  4010e4:	bnd jmp QWORD PTR [rip+0x2f55]        # 404040 <__isoc99_scanf@GLIBC_2.7>
  4010eb:	nop    DWORD PTR [rax+rax*1+0x0]

Disassembly of section .text:

00000000004010f0 <main@@Base>:
  4010f0:	endbr64 
  4010f4:	push   rbp
  4010f5:	push   rbx
  4010f6:	lea    r11,[rsp-0x5000]
  4010fe:	sub    rsp,0x1000
  401105:	or     QWORD PTR [rsp],0x0
  40110a:	cmp    rsp,r11
  40110d:	jne    4010fe <main@@Base+0xe>
  40110f:	sub    rsp,0x158
  401116:	mov    rbx,rsp
  401119:	mov    rdi,rbx
  40111c:	mov    rax,QWORD PTR fs:0x28
  401125:	mov    QWORD PTR [rsp+0x5148],rax
  40112d:	xor    eax,eax
  40112f:	call   4012c0 <ler_albuns@@Base>
  401134:	mov    ebp,eax
  401136:	mov    esi,eax
  401138:	mov    rdi,rbx
  40113b:	call   401390 <lista_albuns@@Base>
  401140:	mov    edx,ebp
  401142:	lea    rsi,[rip+0xee7]        # 402030 <_IO_stdin_used@@Base+0x30>
  401149:	mov    edi,0x1
  40114e:	xor    eax,eax
  401150:	call   4010d0 <__printf_chk@plt>
  401155:	mov    ecx,0x1
  40115a:	lea    rdx,[rip+0xebf]        # 402020 <_IO_stdin_used@@Base+0x20>
  401161:	mov    esi,ebp
  401163:	mov    rdi,rbx
  401166:	call   401400 <albuns_artista@@Base>
  40116b:	mov    edx,eax
  40116d:	lea    rsi,[rip+0xedc]        # 402050 <_IO_stdin_used@@Base+0x50>
  401174:	mov    edi,0x1
  401179:	xor    eax,eax
  40117b:	call   4010d0 <__printf_chk@plt>
  401180:	xor    ecx,ecx
  401182:	lea    rdx,[rip+0xe97]        # 402020 <_IO_stdin_used@@Base+0x20>
  401189:	mov    esi,ebp
  40118b:	mov    rdi,rbx
  40118e:	call   401400 <albuns_artista@@Base>
  401193:	mov    edx,eax
  401195:	lea    rsi,[rip+0xeec]        # 402088 <_IO_stdin_used@@Base+0x88>
  40119c:	xor    eax,eax
  40119e:	mov    edi,0x1
  4011a3:	call   4010d0 <__printf_chk@plt>
  4011a8:	mov    rcx,QWORD PTR [rsp+0x5148]
  4011b0:	xor    rcx,QWORD PTR fs:0x28
  4011b9:	jne    4011c7 <main@@Base+0xd7>
  4011bb:	add    rsp,0x5158
  4011c2:	pop    rbx
  4011c3:	xor    eax,eax
  4011c5:	pop    rbp
  4011c6:	ret    
  4011c7:	call   4010a0 <__stack_chk_fail@plt>
  4011cc:	nop    DWORD PTR [rax+0x0]

00000000004011d0 <_start@@Base>:
  4011d0:	endbr64 
  4011d4:	xor    ebp,ebp
  4011d6:	mov    r9,rdx
  4011d9:	pop    rsi
  4011da:	mov    rdx,rsp
  4011dd:	and    rsp,0xfffffffffffffff0
  4011e1:	push   rax
  4011e2:	push   rsp
  4011e3:	mov    r8,0x401540
  4011ea:	mov    rcx,0x4014d0
  4011f1:	mov    rdi,0x4010f0
  4011f8:	call   QWORD PTR [rip+0x2df2]        # 403ff0 <__libc_start_main@GLIBC_2.2.5>
  4011fe:	hlt    
  4011ff:	nop
  401200:	endbr64 
  401204:	ret    
  401205:	nop    WORD PTR cs:[rax+rax*1+0x0]
  40120f:	nop
  401210:	mov    eax,0x404058
  401215:	cmp    rax,0x404058
  40121b:	je     401230 <_start@@Base+0x60>
  40121d:	mov    eax,0x0
  401222:	test   rax,rax
  401225:	je     401230 <_start@@Base+0x60>
  401227:	mov    edi,0x404058
  40122c:	jmp    rax
  40122e:	xchg   ax,ax
  401230:	ret    
  401231:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40123c:	nop    DWORD PTR [rax+0x0]
  401240:	mov    esi,0x404058
  401245:	sub    rsi,0x404058
  40124c:	sar    rsi,0x3
  401250:	mov    rax,rsi
  401253:	shr    rax,0x3f
  401257:	add    rsi,rax
  40125a:	sar    rsi,1
  40125d:	je     401270 <_start@@Base+0xa0>
  40125f:	mov    eax,0x0
  401264:	test   rax,rax
  401267:	je     401270 <_start@@Base+0xa0>
  401269:	mov    edi,0x404058
  40126e:	jmp    rax
  401270:	ret    
  401271:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  40127c:	nop    DWORD PTR [rax+0x0]
  401280:	endbr64 
  401284:	cmp    BYTE PTR [rip+0x2dcd],0x0        # 404058 <__bss_start@@Base>
  40128b:	jne    4012a0 <_start@@Base+0xd0>
  40128d:	push   rbp
  40128e:	mov    rbp,rsp
  401291:	call   401210 <_start@@Base+0x40>
  401296:	mov    BYTE PTR [rip+0x2dbb],0x1        # 404058 <__bss_start@@Base>
  40129d:	pop    rbp
  40129e:	ret    
  40129f:	nop
  4012a0:	ret    
  4012a1:	data16 nop WORD PTR cs:[rax+rax*1+0x0]
  4012ac:	nop    DWORD PTR [rax+0x0]
  4012b0:	endbr64 
  4012b4:	jmp    401240 <_start@@Base+0x70>
  4012b6:	nop    WORD PTR cs:[rax+rax*1+0x0]

00000000004012c0 <ler_albuns@@Base>:
  4012c0:	endbr64 
  4012c4:	push   r14
  4012c6:	xor    edx,edx
  4012c8:	push   r13
  4012ca:	lea    r13,[rip+0xd33]        # 402004 <_IO_stdin_used@@Base+0x4>
  4012d1:	push   r12
  4012d3:	push   rbp
  4012d4:	xor    ebp,ebp
  4012d6:	push   rbx
  4012d7:	mov    rbx,rdi
  4012da:	sub    rsp,0x20
  4012de:	mov    rax,QWORD PTR fs:0x28
  4012e7:	mov    QWORD PTR [rsp+0x18],rax
  4012ec:	xor    eax,eax
  4012ee:	lea    r12,[rsp+0x9]
  4012f3:	mov    QWORD PTR [rsp+0x9],0x0
  4012fc:	mov    DWORD PTR [rsp+0x11],0x0
  401304:	mov    WORD PTR [rsp+0x15],dx
  401309:	mov    BYTE PTR [rsp+0x17],0x0
  40130e:	jmp    401342 <ler_albuns@@Base+0x82>
  401310:	add    rbx,0xd0
  401317:	cmp    ebp,0x64
  40131a:	je     40136c <ler_albuns@@Base+0xac>
  40131c:	mov    rdi,r14
  40131f:	call   401090 <strlen@plt>
  401324:	lea    rdi,[r14+rax*1]
  401328:	mov    eax,0x20
  40132d:	mov    WORD PTR [rdi],ax
  401330:	mov    edx,0x64
  401335:	inc    rdi
  401338:	mov    rsi,r12
  40133b:	call   4010c0 <__strcpy_chk@plt>
  401340:	inc    ebp
  401342:	xor    eax,eax
  401344:	lea    rcx,[rbx+0x64]
  401348:	lea    r9,[rbx+0xcc]
  40134f:	lea    r8,[rbx+0xc8]
  401356:	mov    rdx,r12
  401359:	mov    rsi,rbx
  40135c:	mov    rdi,r13
  40135f:	mov    r14,rbx
  401362:	call   4010e0 <__isoc99_scanf@plt>
  401367:	cmp    eax,0x5
  40136a:	je     401310 <ler_albuns@@Base+0x50>
  40136c:	mov    rdx,QWORD PTR [rsp+0x18]
  401371:	xor    rdx,QWORD PTR fs:0x28
  40137a:	mov    eax,ebp
  40137c:	jne    40138b <ler_albuns@@Base+0xcb>
  40137e:	add    rsp,0x20
  401382:	pop    rbx
  401383:	pop    rbp
  401384:	pop    r12
  401386:	pop    r13
  401388:	pop    r14
  40138a:	ret    
  40138b:	call   4010a0 <__stack_chk_fail@plt>

0000000000401390 <lista_albuns@@Base>:
  401390:	endbr64 
  401394:	test   esi,esi
  401396:	jle    4013f8 <lista_albuns@@Base+0x68>
  401398:	push   r12
  40139a:	lea    eax,[rsi-0x1]
  40139d:	imul   rax,rax,0xd0
  4013a4:	push   rbp
  4013a5:	lea    rbp,[rip+0xc67]        # 402013 <_IO_stdin_used@@Base+0x13>
  4013ac:	lea    r12,[rdi+rax*1+0xd0]
  4013b4:	push   rbx
  4013b5:	mov    rbx,rdi
  4013b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4013c0:	mov    r9d,DWORD PTR [rbx+0xcc]
  4013c7:	mov    r8d,DWORD PTR [rbx+0xc8]
  4013ce:	lea    rcx,[rbx+0x64]
  4013d2:	mov    rdx,rbx
  4013d5:	mov    rsi,rbp
  4013d8:	mov    edi,0x1
  4013dd:	xor    eax,eax
  4013df:	add    rbx,0xd0
  4013e6:	call   4010d0 <__printf_chk@plt>
  4013eb:	cmp    rbx,r12
  4013ee:	jne    4013c0 <lista_albuns@@Base+0x30>
  4013f0:	pop    rbx
  4013f1:	pop    rbp
  4013f2:	pop    r12
  4013f4:	ret    
  4013f5:	nop    DWORD PTR [rax]
  4013f8:	ret    
  4013f9:	nop    DWORD PTR [rax+0x0]

0000000000401400 <albuns_artista@@Base>:
  401400:	endbr64 
  401404:	push   r14
  401406:	push   r13
  401408:	push   r12
  40140a:	mov    r12,rdx
  40140d:	push   rbp
  40140e:	push   rbx
  40140f:	test   ecx,ecx
  401411:	je     401470 <albuns_artista@@Base+0x70>
  401413:	test   esi,esi
  401415:	jle    4014c0 <albuns_artista@@Base+0xc0>
  40141b:	lea    eax,[rsi-0x1]
  40141e:	imul   rax,rax,0xd0
  401425:	mov    r13d,ecx
  401428:	mov    rbx,rdi
  40142b:	lea    r14,[rdi+rax*1+0xd0]
  401433:	xor    ebp,ebp
  401435:	nop    DWORD PTR [rax]
  401438:	mov    rsi,rbx
  40143b:	mov    rdi,r12
  40143e:	call   4010b0 <strcmp@plt>
  401443:	test   eax,eax
  401445:	jne    401455 <albuns_artista@@Base+0x55>
  401447:	xor    eax,eax
  401449:	cmp    r13d,DWORD PTR [rbx+0xcc]
  401450:	sete   al
  401453:	add    ebp,eax
  401455:	add    rbx,0xd0
  40145c:	cmp    rbx,r14
  40145f:	jne    401438 <albuns_artista@@Base+0x38>
  401461:	pop    rbx
  401462:	mov    eax,ebp
  401464:	pop    rbp
  401465:	pop    r12
  401467:	pop    r13
  401469:	pop    r14
  40146b:	ret    
  40146c:	nop    DWORD PTR [rax+0x0]
  401470:	test   esi,esi
  401472:	jle    4014c0 <albuns_artista@@Base+0xc0>
  401474:	lea    eax,[rsi-0x1]
  401477:	imul   rax,rax,0xd0
  40147e:	mov    rbx,rdi
  401481:	xor    ebp,ebp
  401483:	lea    r13,[rdi+rax*1+0xd0]
  40148b:	nop    DWORD PTR [rax+rax*1+0x0]
  401490:	mov    rsi,rbx
  401493:	mov    rdi,r12
  401496:	call   4010b0 <strcmp@plt>
  40149b:	cmp    eax,0x1
  40149e:	adc    ebp,0x0
  4014a1:	add    rbx,0xd0
  4014a8:	cmp    rbx,r13
  4014ab:	jne    401490 <albuns_artista@@Base+0x90>
  4014ad:	pop    rbx
  4014ae:	mov    eax,ebp
  4014b0:	pop    rbp
  4014b1:	pop    r12
  4014b3:	pop    r13
  4014b5:	pop    r14
  4014b7:	ret    
  4014b8:	nop    DWORD PTR [rax+rax*1+0x0]
  4014c0:	pop    rbx
  4014c1:	xor    ebp,ebp
  4014c3:	mov    eax,ebp
  4014c5:	pop    rbp
  4014c6:	pop    r12
  4014c8:	pop    r13
  4014ca:	pop    r14
  4014cc:	ret    
  4014cd:	nop    DWORD PTR [rax]

00000000004014d0 <__libc_csu_init@@Base>:
  4014d0:	endbr64 
  4014d4:	push   r15
  4014d6:	lea    r15,[rip+0x2933]        # 403e10 <_IO_stdin_used@@Base+0x1e10>
  4014dd:	push   r14
  4014df:	mov    r14,rdx
  4014e2:	push   r13
  4014e4:	mov    r13,rsi
  4014e7:	push   r12
  4014e9:	mov    r12d,edi
  4014ec:	push   rbp
  4014ed:	lea    rbp,[rip+0x2924]        # 403e18 <_IO_stdin_used@@Base+0x1e18>
  4014f4:	push   rbx
  4014f5:	sub    rbp,r15
  4014f8:	sub    rsp,0x8
  4014fc:	call   401000 <strlen@plt-0x90>
  401501:	sar    rbp,0x3
  401505:	je     401526 <__libc_csu_init@@Base+0x56>
  401507:	xor    ebx,ebx
  401509:	nop    DWORD PTR [rax+0x0]
  401510:	mov    rdx,r14
  401513:	mov    rsi,r13
  401516:	mov    edi,r12d
  401519:	call   QWORD PTR [r15+rbx*8]
  40151d:	add    rbx,0x1
  401521:	cmp    rbp,rbx
  401524:	jne    401510 <__libc_csu_init@@Base+0x40>
  401526:	add    rsp,0x8
  40152a:	pop    rbx
  40152b:	pop    rbp
  40152c:	pop    r12
  40152e:	pop    r13
  401530:	pop    r14
  401532:	pop    r15
  401534:	ret    
  401535:	data16 nop WORD PTR cs:[rax+rax*1+0x0]

0000000000401540 <__libc_csu_fini@@Base>:
  401540:	endbr64 
  401544:	ret    

Disassembly of section .fini:

0000000000401548 <.fini>:
  401548:	endbr64 
  40154c:	sub    rsp,0x8
  401550:	add    rsp,0x8
  401554:	ret    
