
../repos/eddieantonio-ocreval-3ab279a/accdist/accdist:     file format elf32-littlearm


Disassembly of section .init:

000109c4 <.init>:
   109c4:	push	{r3, lr}
   109c8:	bl	10b94 <getc@plt+0x48>
   109cc:	pop	{r3, pc}

Disassembly of section .plt:

000109d0 <calloc@plt-0x14>:
   109d0:	push	{lr}		; (str lr, [sp, #-4]!)
   109d4:	ldr	lr, [pc, #4]	; 109e0 <calloc@plt-0x4>
   109d8:	add	lr, pc, lr
   109dc:	ldr	pc, [lr, #8]!
   109e0:	andeq	r4, r1, r0, lsr #12

000109e4 <calloc@plt>:
   109e4:	add	ip, pc, #0, 12
   109e8:	add	ip, ip, #20, 20	; 0x14000
   109ec:	ldr	pc, [ip, #1568]!	; 0x620

000109f0 <strcmp@plt>:
   109f0:	add	ip, pc, #0, 12
   109f4:	add	ip, ip, #20, 20	; 0x14000
   109f8:	ldr	pc, [ip, #1560]!	; 0x618

000109fc <fopen@plt>:
   109fc:	add	ip, pc, #0, 12
   10a00:	add	ip, ip, #20, 20	; 0x14000
   10a04:	ldr	pc, [ip, #1552]!	; 0x610

00010a08 <free@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #20, 20	; 0x14000
   10a10:	ldr	pc, [ip, #1544]!	; 0x608

00010a14 <utf8proc_get_property@plt>:
   10a14:	add	ip, pc, #0, 12
   10a18:	add	ip, ip, #20, 20	; 0x14000
   10a1c:	ldr	pc, [ip, #1536]!	; 0x600

00010a20 <fgets@plt>:
   10a20:	add	ip, pc, #0, 12
   10a24:	add	ip, ip, #20, 20	; 0x14000
   10a28:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a2c <utf8proc_encode_char@plt>:
   10a2c:	add	ip, pc, #0, 12
   10a30:	add	ip, ip, #20, 20	; 0x14000
   10a34:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a38 <strdup@plt>:
   10a38:	add	ip, pc, #0, 12
   10a3c:	add	ip, ip, #20, 20	; 0x14000
   10a40:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a44 <rewind@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #20, 20	; 0x14000
   10a4c:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a50 <unlink@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #20, 20	; 0x14000
   10a58:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a5c <utf8proc_tolower@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #20, 20	; 0x14000
   10a64:	ldr	pc, [ip, #1488]!	; 0x5d0

00010a68 <__xstat@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #20, 20	; 0x14000
   10a70:	ldr	pc, [ip, #1480]!	; 0x5c8

00010a74 <fwrite@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #20, 20	; 0x14000
   10a7c:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a80 <fread@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #20, 20	; 0x14000
   10a88:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a8c <utf8proc_iterate@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #20, 20	; 0x14000
   10a94:	ldr	pc, [ip, #1456]!	; 0x5b0

00010a98 <__libc_start_main@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #20, 20	; 0x14000
   10aa0:	ldr	pc, [ip, #1448]!	; 0x5a8

00010aa4 <__sysv_signal@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #20, 20	; 0x14000
   10aac:	ldr	pc, [ip, #1440]!	; 0x5a0

00010ab0 <__gmon_start__@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #20, 20	; 0x14000
   10ab8:	ldr	pc, [ip, #1432]!	; 0x598

00010abc <getpid@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #20, 20	; 0x14000
   10ac4:	ldr	pc, [ip, #1424]!	; 0x590

00010ac8 <exit@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #20, 20	; 0x14000
   10ad0:	ldr	pc, [ip, #1416]!	; 0x588

00010ad4 <utf8proc_category@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #20, 20	; 0x14000
   10adc:	ldr	pc, [ip, #1408]!	; 0x580

00010ae0 <strlen@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #20, 20	; 0x14000
   10ae8:	ldr	pc, [ip, #1400]!	; 0x578

00010aec <fprintf@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #20, 20	; 0x14000
   10af4:	ldr	pc, [ip, #1392]!	; 0x570

00010af8 <__isoc99_sscanf@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #20, 20	; 0x14000
   10b00:	ldr	pc, [ip, #1384]!	; 0x568

00010b04 <fclose@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #20, 20	; 0x14000
   10b0c:	ldr	pc, [ip, #1376]!	; 0x560

00010b10 <sprintf@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #20, 20	; 0x14000
   10b18:	ldr	pc, [ip, #1368]!	; 0x558

00010b1c <utf8proc_errmsg@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #20, 20	; 0x14000
   10b24:	ldr	pc, [ip, #1360]!	; 0x550

00010b28 <fputs@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #20, 20	; 0x14000
   10b30:	ldr	pc, [ip, #1352]!	; 0x548

00010b34 <strncmp@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #20, 20	; 0x14000
   10b3c:	ldr	pc, [ip, #1344]!	; 0x540

00010b40 <abort@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #20, 20	; 0x14000
   10b48:	ldr	pc, [ip, #1336]!	; 0x538

00010b4c <getc@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #20, 20	; 0x14000
   10b54:	ldr	pc, [ip, #1328]!	; 0x530

Disassembly of section .text:

00010b58 <error@@Base-0x1e70>:
   10b58:	mov	fp, #0
   10b5c:	mov	lr, #0
   10b60:	pop	{r1}		; (ldr r1, [sp], #4)
   10b64:	mov	r2, sp
   10b68:	push	{r2}		; (str r2, [sp, #-4]!)
   10b6c:	push	{r0}		; (str r0, [sp, #-4]!)
   10b70:	ldr	ip, [pc, #16]	; 10b88 <getc@plt+0x3c>
   10b74:	push	{ip}		; (str ip, [sp, #-4]!)
   10b78:	ldr	r0, [pc, #12]	; 10b8c <getc@plt+0x40>
   10b7c:	ldr	r3, [pc, #12]	; 10b90 <getc@plt+0x44>
   10b80:	bl	10a98 <__libc_start_main@plt>
   10b84:	bl	10b40 <abort@plt>
   10b88:	andeq	r3, r1, ip, ror r5
   10b8c:	andeq	r0, r1, ip, lsl #25
   10b90:	andeq	r3, r1, ip, lsl r5
   10b94:	ldr	r3, [pc, #20]	; 10bb0 <getc@plt+0x64>
   10b98:	ldr	r2, [pc, #20]	; 10bb4 <getc@plt+0x68>
   10b9c:	add	r3, pc, r3
   10ba0:	ldr	r2, [r3, r2]
   10ba4:	cmp	r2, #0
   10ba8:	bxeq	lr
   10bac:	b	10ab0 <__gmon_start__@plt>
   10bb0:	andeq	r4, r1, ip, asr r4
   10bb4:	muleq	r0, r8, r0
   10bb8:	ldr	r0, [pc, #24]	; 10bd8 <getc@plt+0x8c>
   10bbc:	ldr	r3, [pc, #24]	; 10bdc <getc@plt+0x90>
   10bc0:	cmp	r3, r0
   10bc4:	bxeq	lr
   10bc8:	ldr	r3, [pc, #16]	; 10be0 <getc@plt+0x94>
   10bcc:	cmp	r3, #0
   10bd0:	bxeq	lr
   10bd4:	bx	r3
   10bd8:	andeq	r5, r2, r8, asr #1
   10bdc:	andeq	r5, r2, r8, asr #1
   10be0:	andeq	r0, r0, r0
   10be4:	ldr	r0, [pc, #36]	; 10c10 <getc@plt+0xc4>
   10be8:	ldr	r1, [pc, #36]	; 10c14 <getc@plt+0xc8>
   10bec:	sub	r1, r1, r0
   10bf0:	asr	r1, r1, #2
   10bf4:	add	r1, r1, r1, lsr #31
   10bf8:	asrs	r1, r1, #1
   10bfc:	bxeq	lr
   10c00:	ldr	r3, [pc, #16]	; 10c18 <getc@plt+0xcc>
   10c04:	cmp	r3, #0
   10c08:	bxeq	lr
   10c0c:	bx	r3
   10c10:	andeq	r5, r2, r8, asr #1
   10c14:	andeq	r5, r2, r8, asr #1
   10c18:	andeq	r0, r0, r0
   10c1c:	push	{r4, lr}
   10c20:	ldr	r4, [pc, #24]	; 10c40 <getc@plt+0xf4>
   10c24:	ldrb	r3, [r4]
   10c28:	cmp	r3, #0
   10c2c:	popne	{r4, pc}
   10c30:	bl	10bb8 <getc@plt+0x6c>
   10c34:	mov	r3, #1
   10c38:	strb	r3, [r4]
   10c3c:	pop	{r4, pc}
   10c40:	andeq	r5, r2, r8, asr #1
   10c44:	b	10be4 <getc@plt+0x98>
   10c48:	push	{r4, r5, r6, sl, fp, lr}
   10c4c:	add	fp, sp, #16
   10c50:	ldr	r4, [pc, #44]	; 10c84 <getc@plt+0x138>
   10c54:	mov	r1, r0
   10c58:	ldr	r4, [pc, r4]
   10c5c:	ldm	r4, {r5, r6}
   10c60:	mov	r0, r4
   10c64:	bl	10e24 <getc@plt+0x2d8>
   10c68:	ldm	r4, {r0, r2}
   10c6c:	sub	r1, r0, r5
   10c70:	ldr	r0, [pc, #16]	; 10c88 <getc@plt+0x13c>
   10c74:	sub	r2, r2, r6
   10c78:	ldr	r0, [pc, r0]
   10c7c:	pop	{r4, r5, r6, sl, fp, lr}
   10c80:	b	11dd8 <getc@plt+0x128c>
   10c84:	andeq	r4, r1, ip, lsr #8
   10c88:	andeq	r4, r1, ip, lsr #8
   10c8c:	push	{fp, lr}
   10c90:	mov	fp, sp
   10c94:	sub	sp, sp, #8
   10c98:	str	r0, [sp, #4]
   10c9c:	add	r0, sp, #4
   10ca0:	mov	r3, #0
   10ca4:	mov	r9, r1
   10ca8:	mov	r7, #0
   10cac:	ldr	r2, [pc, #108]	; 10d20 <getc@plt+0x1d4>
   10cb0:	add	r2, pc, r2
   10cb4:	bl	12740 <getc@plt+0x1bf4>
   10cb8:	ldr	r0, [sp, #4]
   10cbc:	cmp	r0, #1
   10cc0:	blt	10d0c <getc@plt+0x1c0>
   10cc4:	ldr	r5, [pc, #88]	; 10d24 <getc@plt+0x1d8>
   10cc8:	ldr	r5, [pc, r5]
   10ccc:	ldr	r8, [pc, #84]	; 10d28 <getc@plt+0x1dc>
   10cd0:	ldr	r8, [pc, r8]
   10cd4:	ldr	r1, [r9, r7, lsl #2]
   10cd8:	ldr	r6, [r5]
   10cdc:	ldr	r4, [r5, #4]
   10ce0:	mov	r0, r5
   10ce4:	bl	10e24 <getc@plt+0x2d8>
   10ce8:	ldm	r5, {r0, r2}
   10cec:	sub	r1, r0, r6
   10cf0:	sub	r2, r2, r4
   10cf4:	mov	r0, r8
   10cf8:	bl	11dd8 <getc@plt+0x128c>
   10cfc:	ldr	r0, [sp, #4]
   10d00:	add	r7, r7, #1
   10d04:	cmp	r7, r0
   10d08:	blt	10cd4 <getc@plt+0x188>
   10d0c:	ldr	r0, [pc, #24]	; 10d2c <getc@plt+0x1e0>
   10d10:	mov	r1, #0
   10d14:	ldr	r0, [pc, r0]
   10d18:	bl	11e60 <getc@plt+0x1314>
   10d1c:	bl	12984 <getc@plt+0x1e38>
   10d20:	ldrdeq	r2, [r0], -r4
   10d24:			; <UNDEFINED> instruction: 0x000143bc
   10d28:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   10d2c:	muleq	r1, r0, r3
   10d30:	push	{r4, r5, r6, r7, fp, lr}
   10d34:	add	fp, sp, #16
   10d38:	mov	r7, r0
   10d3c:	mov	r0, r1
   10d40:	mov	r4, r3
   10d44:	mov	r5, r2
   10d48:	mov	r6, r1
   10d4c:	bl	121dc <getc@plt+0x1690>
   10d50:	add	r0, r7, r0, lsl #3
   10d54:	ldr	r1, [r0, #68]	; 0x44
   10d58:	ldr	r2, [r0, #72]	; 0x48
   10d5c:	add	r1, r1, r5
   10d60:	add	r2, r2, r4
   10d64:	str	r1, [r0, #68]	; 0x44
   10d68:	str	r2, [r0, #72]	; 0x48
   10d6c:	ldr	r0, [r7, #2116]	; 0x844
   10d70:	ldr	r1, [r7, #2120]	; 0x848
   10d74:	add	r0, r0, r5
   10d78:	add	r1, r1, r4
   10d7c:	str	r0, [r7, #2116]	; 0x844
   10d80:	str	r1, [r7, #2120]	; 0x848
   10d84:	add	r0, r7, r6, lsl #3
   10d88:	movw	r1, #10180	; 0x27c4
   10d8c:	ldr	r1, [r0, r1]!
   10d90:	add	r1, r1, r5
   10d94:	str	r1, [r0]
   10d98:	ldr	r1, [r0, #4]
   10d9c:	add	r1, r1, r4
   10da0:	str	r1, [r0, #4]
   10da4:	pop	{r4, r5, r6, r7, fp, pc}
   10da8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10dac:	add	fp, sp, #24
   10db0:	mov	r7, r1
   10db4:	movw	r1, #2124	; 0x84c
   10db8:	mov	r8, r3
   10dbc:	mov	r5, r2
   10dc0:	add	r6, r0, r1
   10dc4:	mov	r1, r7
   10dc8:	mov	r0, r6
   10dcc:	bl	11f50 <getc@plt+0x1404>
   10dd0:	cmp	r0, #0
   10dd4:	beq	10df4 <getc@plt+0x2a8>
   10dd8:	ldr	r1, [r0, #12]
   10ddc:	ldr	r2, [r0, #16]
   10de0:	add	r1, r1, r5
   10de4:	add	r2, r2, r8
   10de8:	str	r1, [r0, #12]
   10dec:	str	r2, [r0, #16]
   10df0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   10df4:	mov	r0, #1
   10df8:	mov	r1, #20
   10dfc:	bl	12508 <getc@plt+0x19bc>
   10e00:	mov	r4, r0
   10e04:	mov	r0, r7
   10e08:	bl	10a38 <strdup@plt>
   10e0c:	add	r1, r4, #8
   10e10:	stm	r1, {r0, r5, r8}
   10e14:	mov	r0, r6
   10e18:	mov	r1, r4
   10e1c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   10e20:	b	11fe0 <getc@plt+0x1494>
   10e24:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e28:	add	fp, sp, #28
   10e2c:	sub	sp, sp, #76	; 0x4c
   10e30:	bfc	sp, #0, #4
   10e34:	mov	r8, r1
   10e38:	ldr	r1, [pc, #1664]	; 114c0 <getc@plt+0x974>
   10e3c:	mov	r4, r0
   10e40:	mov	r0, r8
   10e44:	add	r1, pc, r1
   10e48:	bl	125a8 <getc@plt+0x1a5c>
   10e4c:	mov	r7, r0
   10e50:	ldr	r0, [pc, #1644]	; 114c4 <getc@plt+0x978>
   10e54:	mov	r1, #99	; 0x63
   10e58:	mov	r2, r7
   10e5c:	add	r0, pc, r0
   10e60:	bl	10a20 <fgets@plt>
   10e64:	cmp	r0, #0
   10e68:	beq	114a4 <getc@plt+0x958>
   10e6c:	ldr	r0, [pc, #1620]	; 114c8 <getc@plt+0x97c>
   10e70:	ldr	r1, [pc, #1620]	; 114cc <getc@plt+0x980>
   10e74:	mov	r2, #40	; 0x28
   10e78:	add	r0, pc, r0
   10e7c:	add	r1, pc, r1
   10e80:	bl	10b34 <strncmp@plt>
   10e84:	cmp	r0, #0
   10e88:	bne	114a4 <getc@plt+0x958>
   10e8c:	ldr	r0, [pc, #1596]	; 114d0 <getc@plt+0x984>
   10e90:	mov	r1, #99	; 0x63
   10e94:	mov	r2, r7
   10e98:	add	r0, pc, r0
   10e9c:	bl	10a20 <fgets@plt>
   10ea0:	cmp	r0, #0
   10ea4:	beq	114a4 <getc@plt+0x958>
   10ea8:	ldr	r0, [pc, #1572]	; 114d4 <getc@plt+0x988>
   10eac:	ldr	r1, [pc, #1572]	; 114d8 <getc@plt+0x98c>
   10eb0:	add	r0, pc, r0
   10eb4:	add	r1, pc, r1
   10eb8:	bl	109f0 <strcmp@plt>
   10ebc:	cmp	r0, #0
   10ec0:	bne	114a4 <getc@plt+0x958>
   10ec4:	ldr	r0, [pc, #1552]	; 114dc <getc@plt+0x990>
   10ec8:	mov	r1, #99	; 0x63
   10ecc:	mov	r2, r7
   10ed0:	add	r0, pc, r0
   10ed4:	bl	10a20 <fgets@plt>
   10ed8:	cmp	r0, #0
   10edc:	beq	114a4 <getc@plt+0x958>
   10ee0:	ldr	r0, [pc, #1528]	; 114e0 <getc@plt+0x994>
   10ee4:	ldr	r1, [pc, #1528]	; 114e4 <getc@plt+0x998>
   10ee8:	add	r2, sp, #44	; 0x2c
   10eec:	add	r0, pc, r0
   10ef0:	add	r1, pc, r1
   10ef4:	bl	10af8 <__isoc99_sscanf@plt>
   10ef8:	cmp	r0, #1
   10efc:	bne	114a4 <getc@plt+0x958>
   10f00:	ldr	r0, [r4]
   10f04:	ldr	r1, [sp, #44]	; 0x2c
   10f08:	mov	r2, r7
   10f0c:	add	r0, r0, r1
   10f10:	mov	r1, #99	; 0x63
   10f14:	str	r0, [r4]
   10f18:	ldr	r0, [pc, #1480]	; 114e8 <getc@plt+0x99c>
   10f1c:	add	r0, pc, r0
   10f20:	bl	10a20 <fgets@plt>
   10f24:	cmp	r0, #0
   10f28:	beq	114a4 <getc@plt+0x958>
   10f2c:	ldr	r0, [pc, #1464]	; 114ec <getc@plt+0x9a0>
   10f30:	ldr	r1, [pc, #1464]	; 114f0 <getc@plt+0x9a4>
   10f34:	add	r2, sp, #40	; 0x28
   10f38:	add	r0, pc, r0
   10f3c:	add	r1, pc, r1
   10f40:	bl	10af8 <__isoc99_sscanf@plt>
   10f44:	cmp	r0, #1
   10f48:	bne	114a4 <getc@plt+0x958>
   10f4c:	ldr	r0, [r4, #4]
   10f50:	ldr	r1, [sp, #40]	; 0x28
   10f54:	mov	r2, r7
   10f58:	add	r0, r0, r1
   10f5c:	mov	r1, #99	; 0x63
   10f60:	str	r0, [r4, #4]
   10f64:	ldr	r0, [pc, #1416]	; 114f4 <getc@plt+0x9a8>
   10f68:	add	r0, pc, r0
   10f6c:	bl	10a20 <fgets@plt>
   10f70:	cmp	r0, #0
   10f74:	beq	114a4 <getc@plt+0x958>
   10f78:	ldr	r0, [pc, #1400]	; 114f8 <getc@plt+0x9ac>
   10f7c:	mov	r1, #99	; 0x63
   10f80:	mov	r2, r7
   10f84:	add	r0, pc, r0
   10f88:	bl	10a20 <fgets@plt>
   10f8c:	cmp	r0, #0
   10f90:	beq	114a4 <getc@plt+0x958>
   10f94:	ldr	r0, [pc, #1376]	; 114fc <getc@plt+0x9b0>
   10f98:	mov	r1, #99	; 0x63
   10f9c:	mov	r2, r7
   10fa0:	add	r0, pc, r0
   10fa4:	bl	10a20 <fgets@plt>
   10fa8:	cmp	r0, #0
   10fac:	beq	114a4 <getc@plt+0x958>
   10fb0:	ldr	r0, [pc, #1352]	; 11500 <getc@plt+0x9b4>
   10fb4:	ldr	r1, [pc, #1352]	; 11504 <getc@plt+0x9b8>
   10fb8:	add	r2, sp, #36	; 0x24
   10fbc:	add	r0, pc, r0
   10fc0:	add	r1, pc, r1
   10fc4:	bl	10af8 <__isoc99_sscanf@plt>
   10fc8:	cmp	r0, #1
   10fcc:	bne	114a4 <getc@plt+0x958>
   10fd0:	ldr	r0, [r4, #8]
   10fd4:	ldr	r1, [sp, #36]	; 0x24
   10fd8:	mov	r2, r7
   10fdc:	add	r0, r0, r1
   10fe0:	mov	r1, #99	; 0x63
   10fe4:	str	r0, [r4, #8]
   10fe8:	ldr	r0, [pc, #1304]	; 11508 <getc@plt+0x9bc>
   10fec:	add	r0, pc, r0
   10ff0:	bl	10a20 <fgets@plt>
   10ff4:	cmp	r0, #0
   10ff8:	beq	114a4 <getc@plt+0x958>
   10ffc:	ldr	r0, [pc, #1288]	; 1150c <getc@plt+0x9c0>
   11000:	ldr	r1, [pc, #1288]	; 11510 <getc@plt+0x9c4>
   11004:	add	r2, sp, #36	; 0x24
   11008:	add	r0, pc, r0
   1100c:	add	r1, pc, r1
   11010:	bl	10af8 <__isoc99_sscanf@plt>
   11014:	cmp	r0, #1
   11018:	bne	114a4 <getc@plt+0x958>
   1101c:	ldr	r0, [r4, #12]
   11020:	ldr	r1, [sp, #36]	; 0x24
   11024:	mov	r2, r7
   11028:	add	r0, r0, r1
   1102c:	mov	r1, #99	; 0x63
   11030:	str	r0, [r4, #12]
   11034:	ldr	r0, [pc, #1240]	; 11514 <getc@plt+0x9c8>
   11038:	add	r0, pc, r0
   1103c:	bl	10a20 <fgets@plt>
   11040:	cmp	r0, #0
   11044:	beq	114a4 <getc@plt+0x958>
   11048:	ldr	r0, [pc, #1224]	; 11518 <getc@plt+0x9cc>
   1104c:	ldr	r1, [pc, #1224]	; 1151c <getc@plt+0x9d0>
   11050:	add	r2, sp, #36	; 0x24
   11054:	add	r0, pc, r0
   11058:	add	r1, pc, r1
   1105c:	bl	10af8 <__isoc99_sscanf@plt>
   11060:	cmp	r0, #1
   11064:	bne	114a4 <getc@plt+0x958>
   11068:	ldr	r0, [r4, #16]
   1106c:	ldr	r1, [sp, #36]	; 0x24
   11070:	mov	r2, r7
   11074:	add	r0, r0, r1
   11078:	mov	r1, #99	; 0x63
   1107c:	str	r0, [r4, #16]
   11080:	ldr	r0, [pc, #1176]	; 11520 <getc@plt+0x9d4>
   11084:	add	r0, pc, r0
   11088:	bl	10a20 <fgets@plt>
   1108c:	cmp	r0, #0
   11090:	beq	114a4 <getc@plt+0x958>
   11094:	ldr	r0, [pc, #1160]	; 11524 <getc@plt+0x9d8>
   11098:	mov	r1, #99	; 0x63
   1109c:	mov	r2, r7
   110a0:	add	r0, pc, r0
   110a4:	bl	10a20 <fgets@plt>
   110a8:	cmp	r0, #0
   110ac:	beq	114a4 <getc@plt+0x958>
   110b0:	ldr	r0, [pc, #1136]	; 11528 <getc@plt+0x9dc>
   110b4:	mov	r1, #99	; 0x63
   110b8:	mov	r2, r7
   110bc:	add	r0, pc, r0
   110c0:	bl	10a20 <fgets@plt>
   110c4:	cmp	r0, #0
   110c8:	beq	114a4 <getc@plt+0x958>
   110cc:	ldr	r0, [pc, #1112]	; 1152c <getc@plt+0x9e0>
   110d0:	mov	r1, #99	; 0x63
   110d4:	mov	r2, r7
   110d8:	add	r0, pc, r0
   110dc:	bl	10a20 <fgets@plt>
   110e0:	cmp	r0, #0
   110e4:	beq	114a4 <getc@plt+0x958>
   110e8:	ldr	r0, [pc, #1088]	; 11530 <getc@plt+0x9e4>
   110ec:	mov	r1, #99	; 0x63
   110f0:	mov	r2, r7
   110f4:	add	r0, pc, r0
   110f8:	bl	10a20 <fgets@plt>
   110fc:	cmp	r0, #0
   11100:	beq	114a4 <getc@plt+0x958>
   11104:	add	r5, sp, #48	; 0x30
   11108:	orr	r9, r5, #12
   1110c:	orr	r6, r5, #8
   11110:	orr	sl, r5, #4
   11114:	mov	r2, r5
   11118:	stm	sp, {r6, r9}
   1111c:	mov	r3, sl
   11120:	ldr	r0, [pc, #1036]	; 11534 <getc@plt+0x9e8>
   11124:	ldr	r1, [pc, #1036]	; 11538 <getc@plt+0x9ec>
   11128:	add	r0, pc, r0
   1112c:	add	r1, pc, r1
   11130:	bl	10af8 <__isoc99_sscanf@plt>
   11134:	cmp	r0, #4
   11138:	bne	114a4 <getc@plt+0x958>
   1113c:	add	r0, r4, #20
   11140:	vld1.64	{d16-d17}, [r5 :128]
   11144:	mov	r1, #99	; 0x63
   11148:	mov	r2, r7
   1114c:	vld1.32	{d18-d19}, [r0]
   11150:	vadd.i32	q8, q9, q8
   11154:	vst1.32	{d16-d17}, [r0]
   11158:	ldr	r0, [pc, #988]	; 1153c <getc@plt+0x9f0>
   1115c:	add	r0, pc, r0
   11160:	bl	10a20 <fgets@plt>
   11164:	cmp	r0, #0
   11168:	beq	114a4 <getc@plt+0x958>
   1116c:	stm	sp, {r6, r9}
   11170:	mov	r2, r5
   11174:	mov	r3, sl
   11178:	ldr	r0, [pc, #960]	; 11540 <getc@plt+0x9f4>
   1117c:	ldr	r1, [pc, #960]	; 11544 <getc@plt+0x9f8>
   11180:	add	r0, pc, r0
   11184:	add	r1, pc, r1
   11188:	bl	10af8 <__isoc99_sscanf@plt>
   1118c:	cmp	r0, #4
   11190:	bne	114a4 <getc@plt+0x958>
   11194:	add	r0, r4, #36	; 0x24
   11198:	vld1.64	{d16-d17}, [r5 :128]
   1119c:	mov	r1, #99	; 0x63
   111a0:	mov	r2, r7
   111a4:	vld1.32	{d18-d19}, [r0]
   111a8:	vadd.i32	q8, q9, q8
   111ac:	vst1.32	{d16-d17}, [r0]
   111b0:	ldr	r0, [pc, #912]	; 11548 <getc@plt+0x9fc>
   111b4:	add	r0, pc, r0
   111b8:	bl	10a20 <fgets@plt>
   111bc:	cmp	r0, #0
   111c0:	beq	114a4 <getc@plt+0x958>
   111c4:	stm	sp, {r6, r9}
   111c8:	mov	r2, r5
   111cc:	mov	r3, sl
   111d0:	ldr	r0, [pc, #884]	; 1154c <getc@plt+0xa00>
   111d4:	ldr	r1, [pc, #884]	; 11550 <getc@plt+0xa04>
   111d8:	add	r0, pc, r0
   111dc:	add	r1, pc, r1
   111e0:	bl	10af8 <__isoc99_sscanf@plt>
   111e4:	cmp	r0, #4
   111e8:	bne	114a4 <getc@plt+0x958>
   111ec:	add	r0, r4, #52	; 0x34
   111f0:	vld1.64	{d16-d17}, [r5 :128]
   111f4:	mov	r1, #99	; 0x63
   111f8:	mov	r2, r7
   111fc:	vld1.32	{d18-d19}, [r0]
   11200:	vadd.i32	q8, q9, q8
   11204:	vst1.32	{d16-d17}, [r0]
   11208:	ldr	r6, [pc, #836]	; 11554 <getc@plt+0xa08>
   1120c:	add	r6, pc, r6
   11210:	mov	r0, r6
   11214:	bl	10a20 <fgets@plt>
   11218:	cmp	r0, #0
   1121c:	beq	114a4 <getc@plt+0x958>
   11220:	str	r4, [sp, #20]
   11224:	mov	r0, r6
   11228:	mov	r1, #99	; 0x63
   1122c:	mov	r2, r7
   11230:	bl	10a20 <fgets@plt>
   11234:	cmp	r0, #0
   11238:	ldrbne	r0, [r6]
   1123c:	cmpne	r0, #10
   11240:	bne	11224 <getc@plt+0x6d8>
   11244:	ldr	r0, [sp, #40]	; 0x28
   11248:	cmp	r0, #1
   1124c:	blt	1135c <getc@plt+0x810>
   11250:	ldr	r0, [pc, #768]	; 11558 <getc@plt+0xa0c>
   11254:	mov	r1, #99	; 0x63
   11258:	mov	r2, r7
   1125c:	add	r0, pc, r0
   11260:	bl	10a20 <fgets@plt>
   11264:	cmp	r0, #0
   11268:	beq	1135c <getc@plt+0x810>
   1126c:	ldr	r4, [pc, #744]	; 1155c <getc@plt+0xa10>
   11270:	mov	r1, #99	; 0x63
   11274:	mov	r2, r7
   11278:	add	r4, pc, r4
   1127c:	mov	r0, r4
   11280:	bl	10a20 <fgets@plt>
   11284:	cmp	r0, #0
   11288:	beq	1135c <getc@plt+0x810>
   1128c:	ldr	r1, [sp, #20]
   11290:	movw	r0, #2124	; 0x84c
   11294:	add	r8, sp, #36	; 0x24
   11298:	add	r0, r1, r0
   1129c:	str	r0, [sp, #28]
   112a0:	add	r0, r4, #20
   112a4:	ldr	r9, [pc, #692]	; 11560 <getc@plt+0xa14>
   112a8:	str	r0, [sp, #24]
   112ac:	ldr	r5, [sp, #24]
   112b0:	add	r9, pc, r9
   112b4:	mov	r0, r4
   112b8:	mov	r1, r9
   112bc:	mov	r2, r8
   112c0:	add	r3, sp, #48	; 0x30
   112c4:	bl	10af8 <__isoc99_sscanf@plt>
   112c8:	cmp	r0, #2
   112cc:	bne	1135c <getc@plt+0x810>
   112d0:	ldr	r0, [sp, #28]
   112d4:	ldr	sl, [sp, #48]	; 0x30
   112d8:	ldr	r6, [sp, #36]	; 0x24
   112dc:	mov	r1, r5
   112e0:	bl	11f50 <getc@plt+0x1404>
   112e4:	cmp	r0, #0
   112e8:	beq	11308 <getc@plt+0x7bc>
   112ec:	ldr	r1, [r0, #12]
   112f0:	ldr	r2, [r0, #16]
   112f4:	add	r1, r1, r6
   112f8:	add	r2, r2, sl
   112fc:	str	r1, [r0, #12]
   11300:	str	r2, [r0, #16]
   11304:	b	11344 <getc@plt+0x7f8>
   11308:	mov	r0, #1
   1130c:	mov	r1, #20
   11310:	bl	12508 <getc@plt+0x19bc>
   11314:	mov	r4, r9
   11318:	mov	r9, r0
   1131c:	mov	r0, r5
   11320:	bl	10a38 <strdup@plt>
   11324:	add	r1, r9, #8
   11328:	stm	r1, {r0, r6, sl}
   1132c:	mov	r1, r9
   11330:	mov	r9, r4
   11334:	ldr	r0, [sp, #28]
   11338:	ldr	r4, [pc, #548]	; 11564 <getc@plt+0xa18>
   1133c:	add	r4, pc, r4
   11340:	bl	11fe0 <getc@plt+0x1494>
   11344:	mov	r0, r4
   11348:	mov	r1, #99	; 0x63
   1134c:	mov	r2, r7
   11350:	bl	10a20 <fgets@plt>
   11354:	cmp	r0, #0
   11358:	bne	112b4 <getc@plt+0x768>
   1135c:	ldr	r0, [sp, #44]	; 0x2c
   11360:	ldr	r4, [sp, #20]
   11364:	cmp	r0, #1
   11368:	blt	11494 <getc@plt+0x948>
   1136c:	ldr	r0, [pc, #500]	; 11568 <getc@plt+0xa1c>
   11370:	mov	r1, #99	; 0x63
   11374:	mov	r2, r7
   11378:	add	r0, pc, r0
   1137c:	bl	10a20 <fgets@plt>
   11380:	cmp	r0, #0
   11384:	beq	11494 <getc@plt+0x948>
   11388:	ldr	r6, [pc, #476]	; 1156c <getc@plt+0xa20>
   1138c:	mov	r1, #99	; 0x63
   11390:	mov	r2, r7
   11394:	add	r6, pc, r6
   11398:	mov	r0, r6
   1139c:	bl	10a20 <fgets@plt>
   113a0:	cmp	r0, #0
   113a4:	beq	11494 <getc@plt+0x948>
   113a8:	add	r5, sp, #48	; 0x30
   113ac:	add	r0, r6, #31
   113b0:	str	r0, [sp, #28]
   113b4:	ldr	r1, [pc, #436]	; 11570 <getc@plt+0xa24>
   113b8:	mov	r0, r6
   113bc:	add	r2, sp, #36	; 0x24
   113c0:	mov	r3, r5
   113c4:	add	r1, pc, r1
   113c8:	bl	10af8 <__isoc99_sscanf@plt>
   113cc:	cmp	r0, #2
   113d0:	bne	11494 <getc@plt+0x948>
   113d4:	ldrb	r0, [r6, #31]
   113d8:	cmp	r0, #92	; 0x5c
   113dc:	beq	113f4 <getc@plt+0x8a8>
   113e0:	cmp	r0, #125	; 0x7d
   113e4:	bne	11400 <getc@plt+0x8b4>
   113e8:	ldrb	sl, [r6, #30]
   113ec:	str	sl, [sp, #32]
   113f0:	b	11418 <getc@plt+0x8cc>
   113f4:	mov	sl, #10
   113f8:	str	sl, [sp, #32]
   113fc:	b	11418 <getc@plt+0x8cc>
   11400:	ldr	r0, [sp, #28]
   11404:	ldr	r1, [pc, #360]	; 11574 <getc@plt+0xa28>
   11408:	add	r2, sp, #32
   1140c:	add	r1, pc, r1
   11410:	bl	10af8 <__isoc99_sscanf@plt>
   11414:	ldr	sl, [sp, #32]
   11418:	ldr	r8, [sp, #48]	; 0x30
   1141c:	ldr	r9, [sp, #36]	; 0x24
   11420:	mov	r0, sl
   11424:	bl	121dc <getc@plt+0x1690>
   11428:	add	r0, r4, r0, lsl #3
   1142c:	ldr	r1, [r0, #68]	; 0x44
   11430:	ldr	r2, [r0, #72]	; 0x48
   11434:	add	r1, r1, r9
   11438:	add	r2, r2, r8
   1143c:	str	r1, [r0, #68]	; 0x44
   11440:	str	r2, [r0, #72]	; 0x48
   11444:	mov	r2, r7
   11448:	ldr	r0, [r4, #2116]	; 0x844
   1144c:	ldr	r1, [r4, #2120]	; 0x848
   11450:	add	r0, r0, r9
   11454:	add	r1, r1, r8
   11458:	str	r0, [r4, #2116]	; 0x844
   1145c:	str	r1, [r4, #2120]	; 0x848
   11460:	add	r0, r4, sl, lsl #3
   11464:	movw	r1, #10180	; 0x27c4
   11468:	ldr	r1, [r0, r1]!
   1146c:	add	r1, r1, r9
   11470:	str	r1, [r0]
   11474:	ldr	r1, [r0, #4]
   11478:	add	r1, r1, r8
   1147c:	str	r1, [r0, #4]
   11480:	mov	r0, r6
   11484:	mov	r1, #99	; 0x63
   11488:	bl	10a20 <fgets@plt>
   1148c:	cmp	r0, #0
   11490:	bne	113b4 <getc@plt+0x868>
   11494:	mov	r0, r7
   11498:	bl	12630 <getc@plt+0x1ae4>
   1149c:	sub	sp, fp, #28
   114a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   114a4:	ldr	r1, [pc, #204]	; 11578 <getc@plt+0xa2c>
   114a8:	ldr	r0, [pc, #204]	; 1157c <getc@plt+0xa30>
   114ac:	cmp	r8, #0
   114b0:	add	r1, pc, r1
   114b4:	add	r0, pc, r0
   114b8:	movne	r1, r8
   114bc:	bl	12a18 <error@@Base+0x50>
   114c0:	andeq	r3, r0, r8, ror r0
   114c4:	andeq	r4, r1, r5, ror #4
   114c8:	andeq	r4, r1, r9, asr #4
   114cc:	andeq	r2, r0, r6, lsr r7
   114d0:	andeq	r4, r1, r9, lsr #4
   114d4:	andeq	r4, r1, r1, lsl r2
   114d8:	andeq	r2, r0, r7, asr #31
   114dc:	strdeq	r4, [r1], -r1
   114e0:	ldrdeq	r4, [r1], -r5
   114e4:	andeq	r2, r0, r6, lsl r8
   114e8:	andeq	r4, r1, r5, lsr #3
   114ec:	andeq	r4, r1, r9, lsl #3
   114f0:	andeq	r2, r0, sl, asr #15
   114f4:	andeq	r4, r1, r9, asr r1
   114f8:	andeq	r4, r1, sp, lsr r1
   114fc:	andeq	r4, r1, r1, lsr #2
   11500:	andeq	r4, r1, r5, lsl #2
   11504:	andeq	r2, r0, r6, asr #14
   11508:	ldrdeq	r4, [r1], -r5
   1150c:	strheq	r4, [r1], -r9
   11510:	strdeq	r2, [r0], -sl
   11514:	andeq	r4, r1, r9, lsl #1
   11518:	andeq	r4, r1, sp, rrx
   1151c:	andeq	r2, r0, lr, lsr #13
   11520:	andeq	r4, r1, sp, lsr r0
   11524:	andeq	r4, r1, r1, lsr #32
   11528:	andeq	r4, r1, r5
   1152c:	andeq	r3, r1, r9, ror #31
   11530:	andeq	r3, r1, sp, asr #31
   11534:	muleq	r1, r9, pc	; <UNPREDICTABLE>
   11538:	andeq	r2, r0, lr, asr #11
   1153c:	andeq	r3, r1, r5, ror #30
   11540:	andeq	r3, r1, r1, asr #30
   11544:	andeq	r2, r0, r6, ror r5
   11548:	andeq	r3, r1, sp, lsl #30
   1154c:	andeq	r3, r1, r9, ror #29
   11550:	andeq	r2, r0, lr, lsl r5
   11554:			; <UNDEFINED> instruction: 0x00013eb5
   11558:	andeq	r3, r1, r5, ror #28
   1155c:	andeq	r3, r1, r9, asr #28
   11560:	andeq	r2, r0, r2, asr r4
   11564:	andeq	r3, r1, r5, lsl #27
   11568:	andeq	r3, r1, r9, asr #26
   1156c:	andeq	r3, r1, sp, lsr #26
   11570:	andeq	r2, r0, lr, lsr r3
   11574:	ldrdeq	r2, [r0], -r1
   11578:	andeq	r2, r0, r3, asr #2
   1157c:	andeq	r2, r0, sp, lsr #2
   11580:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11584:	add	fp, sp, #28
   11588:	sub	sp, sp, #4
   1158c:	vpush	{d8}
   11590:	sub	sp, sp, #24
   11594:	mov	r2, r1
   11598:	ldr	r1, [pc, #1512]	; 11b88 <getc@plt+0x103c>
   1159c:	mov	sl, r0
   115a0:	mov	r0, r2
   115a4:	add	r1, pc, r1
   115a8:	bl	125a8 <getc@plt+0x1a5c>
   115ac:	ldr	r1, [pc, #1496]	; 11b8c <getc@plt+0x1040>
   115b0:	ldr	r2, [pc, #1496]	; 11b90 <getc@plt+0x1044>
   115b4:	ldr	r3, [pc, #1496]	; 11b94 <getc@plt+0x1048>
   115b8:	mov	r4, r0
   115bc:	add	r1, pc, r1
   115c0:	add	r2, pc, r2
   115c4:	add	r3, pc, r3
   115c8:	bl	10aec <fprintf@plt>
   115cc:	ldr	r2, [sl]
   115d0:	ldr	r6, [pc, #1472]	; 11b98 <getc@plt+0x104c>
   115d4:	ldr	r3, [pc, #1472]	; 11b9c <getc@plt+0x1050>
   115d8:	mov	r0, r4
   115dc:	add	r6, pc, r6
   115e0:	add	r3, pc, r3
   115e4:	mov	r1, r6
   115e8:	bl	10aec <fprintf@plt>
   115ec:	ldr	r2, [sl, #4]
   115f0:	ldr	r3, [pc, #1448]	; 11ba0 <getc@plt+0x1054>
   115f4:	mov	r0, r4
   115f8:	mov	r1, r6
   115fc:	add	r3, pc, r3
   11600:	bl	10aec <fprintf@plt>
   11604:	ldr	r0, [sl]
   11608:	cmp	r0, #0
   1160c:	beq	1164c <getc@plt+0xb00>
   11610:	ldr	r1, [sl, #4]
   11614:	vldr	d16, [pc, #900]	; 119a0 <getc@plt+0xe54>
   11618:	vmov	s2, r0
   1161c:	sub	r1, r0, r1
   11620:	mov	r0, r4
   11624:	vmov	s0, r1
   11628:	vcvt.f64.s32	d17, s0
   1162c:	vcvt.f64.s32	d18, s2
   11630:	ldr	r1, [pc, #1392]	; 11ba8 <getc@plt+0x105c>
   11634:	vmul.f64	d16, d17, d16
   11638:	vdiv.f64	d16, d16, d18
   1163c:	vmov	r2, r3, d16
   11640:	add	r1, pc, r1
   11644:	bl	10aec <fprintf@plt>
   11648:	b	11664 <getc@plt+0xb18>
   1164c:	ldr	r0, [pc, #1360]	; 11ba4 <getc@plt+0x1058>
   11650:	mov	r1, #8
   11654:	mov	r2, #1
   11658:	mov	r3, r4
   1165c:	add	r0, pc, r0
   11660:	bl	10a74 <fwrite@plt>
   11664:	ldr	r1, [pc, #1344]	; 11bac <getc@plt+0x1060>
   11668:	mov	r0, r4
   1166c:	add	r1, pc, r1
   11670:	bl	10aec <fprintf@plt>
   11674:	ldr	r2, [sl, #8]
   11678:	ldr	r6, [pc, #1328]	; 11bb0 <getc@plt+0x1064>
   1167c:	ldr	r3, [pc, #1328]	; 11bb4 <getc@plt+0x1068>
   11680:	mov	r0, r4
   11684:	add	r6, pc, r6
   11688:	add	r3, pc, r3
   1168c:	mov	r1, r6
   11690:	bl	10aec <fprintf@plt>
   11694:	ldr	r2, [sl, #12]
   11698:	ldr	r3, [pc, #1304]	; 11bb8 <getc@plt+0x106c>
   1169c:	mov	r0, r4
   116a0:	mov	r1, r6
   116a4:	add	r3, pc, r3
   116a8:	bl	10aec <fprintf@plt>
   116ac:	ldr	r2, [sl, #16]
   116b0:	ldr	r3, [pc, #1284]	; 11bbc <getc@plt+0x1070>
   116b4:	mov	r0, r4
   116b8:	mov	r1, r6
   116bc:	add	r3, pc, r3
   116c0:	bl	10aec <fprintf@plt>
   116c4:	ldr	r0, [sl]
   116c8:	cmp	r0, #0
   116cc:	beq	11710 <getc@plt+0xbc4>
   116d0:	ldr	r1, [sl, #8]
   116d4:	ldr	r2, [sl, #12]
   116d8:	vldr	d16, [pc, #704]	; 119a0 <getc@plt+0xe54>
   116dc:	vmov	s2, r0
   116e0:	mov	r0, r4
   116e4:	add	r1, r2, r1
   116e8:	vmov	s0, r1
   116ec:	vcvt.f64.s32	d17, s0
   116f0:	vcvt.f64.s32	d18, s2
   116f4:	ldr	r1, [pc, #1224]	; 11bc4 <getc@plt+0x1078>
   116f8:	vmul.f64	d16, d17, d16
   116fc:	vdiv.f64	d16, d16, d18
   11700:	vmov	r2, r3, d16
   11704:	add	r1, pc, r1
   11708:	bl	10aec <fprintf@plt>
   1170c:	b	11728 <getc@plt+0xbdc>
   11710:	ldr	r0, [pc, #1192]	; 11bc0 <getc@plt+0x1074>
   11714:	mov	r1, #8
   11718:	mov	r2, #1
   1171c:	mov	r3, r4
   11720:	add	r0, pc, r0
   11724:	bl	10a74 <fwrite@plt>
   11728:	ldr	r1, [pc, #1176]	; 11bc8 <getc@plt+0x107c>
   1172c:	mov	r0, r4
   11730:	add	r1, pc, r1
   11734:	bl	10aec <fprintf@plt>
   11738:	ldr	r0, [sl]
   1173c:	cmp	r0, #0
   11740:	beq	11780 <getc@plt+0xc34>
   11744:	ldr	r1, [sl, #48]	; 0x30
   11748:	vldr	d16, [pc, #592]	; 119a0 <getc@plt+0xe54>
   1174c:	vmov	s2, r0
   11750:	sub	r1, r0, r1
   11754:	mov	r0, r4
   11758:	vmov	s0, r1
   1175c:	vcvt.f64.s32	d17, s0
   11760:	vcvt.f64.s32	d18, s2
   11764:	ldr	r1, [pc, #1124]	; 11bd0 <getc@plt+0x1084>
   11768:	vmul.f64	d16, d17, d16
   1176c:	vdiv.f64	d16, d16, d18
   11770:	vmov	r2, r3, d16
   11774:	add	r1, pc, r1
   11778:	bl	10aec <fprintf@plt>
   1177c:	b	11798 <getc@plt+0xc4c>
   11780:	ldr	r0, [pc, #1092]	; 11bcc <getc@plt+0x1080>
   11784:	mov	r1, #8
   11788:	mov	r2, #1
   1178c:	mov	r3, r4
   11790:	add	r0, pc, r0
   11794:	bl	10a74 <fwrite@plt>
   11798:	ldr	r1, [pc, #1076]	; 11bd4 <getc@plt+0x1088>
   1179c:	mov	r0, r4
   117a0:	add	r1, pc, r1
   117a4:	bl	10aec <fprintf@plt>
   117a8:	ldr	r0, [pc, #1064]	; 11bd8 <getc@plt+0x108c>
   117ac:	mov	r1, #37	; 0x25
   117b0:	mov	r2, #1
   117b4:	mov	r3, r4
   117b8:	add	r0, pc, r0
   117bc:	bl	10a74 <fwrite@plt>
   117c0:	ldr	r2, [sl, #20]
   117c4:	ldr	r3, [sl, #24]
   117c8:	ldr	r0, [sl, #28]
   117cc:	ldr	r1, [sl, #32]
   117d0:	ldr	r7, [pc, #1028]	; 11bdc <getc@plt+0x1090>
   117d4:	add	r7, pc, r7
   117d8:	stm	sp, {r0, r1, r7}
   117dc:	mov	r0, r4
   117e0:	ldr	r6, [pc, #1016]	; 11be0 <getc@plt+0x1094>
   117e4:	add	r6, pc, r6
   117e8:	mov	r1, r6
   117ec:	bl	10aec <fprintf@plt>
   117f0:	ldr	r2, [sl, #36]	; 0x24
   117f4:	ldr	r3, [sl, #40]	; 0x28
   117f8:	ldr	r0, [sl, #44]	; 0x2c
   117fc:	ldr	r1, [sl, #48]	; 0x30
   11800:	ldr	r7, [pc, #988]	; 11be4 <getc@plt+0x1098>
   11804:	add	r7, pc, r7
   11808:	stm	sp, {r0, r1, r7}
   1180c:	mov	r0, r4
   11810:	mov	r1, r6
   11814:	bl	10aec <fprintf@plt>
   11818:	ldr	r2, [sl, #52]	; 0x34
   1181c:	ldr	r3, [sl, #56]	; 0x38
   11820:	ldr	r0, [sl, #60]	; 0x3c
   11824:	ldr	r1, [sl, #64]	; 0x40
   11828:	ldr	r7, [pc, #952]	; 11be8 <getc@plt+0x109c>
   1182c:	add	r7, pc, r7
   11830:	stm	sp, {r0, r1, r7}
   11834:	mov	r0, r4
   11838:	mov	r1, r6
   1183c:	bl	10aec <fprintf@plt>
   11840:	ldr	r1, [pc, #932]	; 11bec <getc@plt+0x10a0>
   11844:	mov	r0, r4
   11848:	add	r1, pc, r1
   1184c:	bl	10aec <fprintf@plt>
   11850:	ldr	r7, [pc, #920]	; 11bf0 <getc@plt+0x10a4>
   11854:	vldr	d8, [pc, #804]	; 11b80 <getc@plt+0x1034>
   11858:	mov	r6, #0
   1185c:	add	r9, sp, #15
   11860:	add	r7, pc, r7
   11864:	add	r5, sl, r6, lsl #3
   11868:	ldr	r0, [r5, #68]	; 0x44
   1186c:	cmp	r0, #1
   11870:	blt	11938 <getc@plt+0xdec>
   11874:	mov	r0, r6
   11878:	bl	12364 <getc@plt+0x1818>
   1187c:	ldr	r2, [r5, #68]	; 0x44
   11880:	ldr	r3, [r5, #72]	; 0x48
   11884:	mov	r8, r0
   11888:	mov	r0, r4
   1188c:	mov	r1, r7
   11890:	bl	10aec <fprintf@plt>
   11894:	ldr	r0, [r5, #68]	; 0x44
   11898:	cmp	r0, #0
   1189c:	beq	118f0 <getc@plt+0xda4>
   118a0:	ldr	r1, [r5, #72]	; 0x48
   118a4:	vmov	s2, r0
   118a8:	sub	r1, r0, r1
   118ac:	mov	r0, r4
   118b0:	vmov	s0, r1
   118b4:	vcvt.f64.s32	d16, s0
   118b8:	vcvt.f64.s32	d17, s2
   118bc:	ldr	r1, [pc, #820]	; 11bf8 <getc@plt+0x10ac>
   118c0:	vmul.f64	d16, d16, d8
   118c4:	vdiv.f64	d16, d16, d17
   118c8:	vmov	r2, r3, d16
   118cc:	add	r1, pc, r1
   118d0:	bl	10aec <fprintf@plt>
   118d4:	cmp	r8, #0
   118d8:	beq	11910 <getc@plt+0xdc4>
   118dc:	ldr	r1, [pc, #792]	; 11bfc <getc@plt+0x10b0>
   118e0:	mov	r0, r4
   118e4:	mov	r2, r8
   118e8:	add	r1, pc, r1
   118ec:	b	11934 <getc@plt+0xde8>
   118f0:	ldr	r0, [pc, #764]	; 11bf4 <getc@plt+0x10a8>
   118f4:	mov	r1, #8
   118f8:	mov	r2, #1
   118fc:	mov	r3, r4
   11900:	add	r0, pc, r0
   11904:	bl	10a74 <fwrite@plt>
   11908:	cmp	r8, #0
   1190c:	bne	118dc <getc@plt+0xd90>
   11910:	mov	r0, #0
   11914:	mov	r1, #0
   11918:	mov	r2, r9
   1191c:	mov	r3, #1
   11920:	bl	12fdc <error@@Base+0x614>
   11924:	ldr	r1, [pc, #724]	; 11c00 <getc@plt+0x10b4>
   11928:	mov	r0, r4
   1192c:	mov	r2, r9
   11930:	add	r1, pc, r1
   11934:	bl	10aec <fprintf@plt>
   11938:	add	r6, r6, #1
   1193c:	cmp	r6, #256	; 0x100
   11940:	bne	11864 <getc@plt+0xd18>
   11944:	ldr	r2, [sl, #2116]	; 0x844
   11948:	ldr	r3, [sl, #2120]	; 0x848
   1194c:	ldr	r1, [pc, #688]	; 11c04 <getc@plt+0x10b8>
   11950:	mov	r0, r4
   11954:	add	r1, pc, r1
   11958:	bl	10aec <fprintf@plt>
   1195c:	ldr	r0, [sl, #2116]	; 0x844
   11960:	cmp	r0, #0
   11964:	beq	119a8 <getc@plt+0xe5c>
   11968:	ldr	r1, [sl, #2120]	; 0x848
   1196c:	vmov	s2, r0
   11970:	sub	r1, r0, r1
   11974:	mov	r0, r4
   11978:	vmov	s0, r1
   1197c:	vcvt.f64.s32	d16, s0
   11980:	vcvt.f64.s32	d17, s2
   11984:	ldr	r1, [pc, #640]	; 11c0c <getc@plt+0x10c0>
   11988:	vmul.f64	d16, d16, d8
   1198c:	vdiv.f64	d16, d16, d17
   11990:	vmov	r2, r3, d16
   11994:	add	r1, pc, r1
   11998:	bl	10aec <fprintf@plt>
   1199c:	b	119c0 <getc@plt+0xe74>
   119a0:	andeq	r0, r0, r0
   119a4:	subsmi	r0, r9, r0
   119a8:	ldr	r0, [pc, #600]	; 11c08 <getc@plt+0x10bc>
   119ac:	mov	r1, #8
   119b0:	mov	r2, #1
   119b4:	mov	r3, r4
   119b8:	add	r0, pc, r0
   119bc:	bl	10a74 <fwrite@plt>
   119c0:	ldr	r1, [pc, #584]	; 11c10 <getc@plt+0x10c4>
   119c4:	ldr	r2, [pc, #584]	; 11c14 <getc@plt+0x10c8>
   119c8:	mov	r0, r4
   119cc:	add	r1, pc, r1
   119d0:	add	r2, pc, r2
   119d4:	bl	10aec <fprintf@plt>
   119d8:	ldr	r0, [sl, #4]
   119dc:	cmp	r0, #1
   119e0:	blt	11a70 <getc@plt+0xf24>
   119e4:	movw	r0, #2124	; 0x84c
   119e8:	add	r0, sl, r0
   119ec:	bl	12100 <getc@plt+0x15b4>
   119f0:	mov	r0, #10176	; 0x27c0
   119f4:	mov	r7, sl
   119f8:	ldr	r0, [r7, r0]!
   119fc:	mov	r5, r7
   11a00:	ldr	r1, [r5, #-4]!
   11a04:	ldr	r2, [pc, #524]	; 11c18 <getc@plt+0x10cc>
   11a08:	add	r2, pc, r2
   11a0c:	bl	11c6c <getc@plt+0x1120>
   11a10:	ldr	r0, [pc, #516]	; 11c1c <getc@plt+0x10d0>
   11a14:	mov	r1, #39	; 0x27
   11a18:	mov	r2, #1
   11a1c:	mov	r3, r4
   11a20:	add	r0, pc, r0
   11a24:	bl	10a74 <fwrite@plt>
   11a28:	ldr	r0, [r7]
   11a2c:	cmp	r0, #1
   11a30:	blt	11a70 <getc@plt+0xf24>
   11a34:	ldr	r8, [pc, #484]	; 11c20 <getc@plt+0x10d4>
   11a38:	mov	r6, #0
   11a3c:	add	r8, pc, r8
   11a40:	ldr	r0, [r5]
   11a44:	ldr	r0, [r0, r6, lsl #2]
   11a48:	add	r3, r0, #8
   11a4c:	mov	r0, r4
   11a50:	ldm	r3, {r1, r2, r3}
   11a54:	str	r1, [sp]
   11a58:	mov	r1, r8
   11a5c:	bl	10aec <fprintf@plt>
   11a60:	ldr	r0, [r7]
   11a64:	add	r6, r6, #1
   11a68:	cmp	r6, r0
   11a6c:	blt	11a40 <getc@plt+0xef4>
   11a70:	ldr	r0, [sl]
   11a74:	cmp	r0, #1
   11a78:	blt	11b64 <getc@plt+0x1018>
   11a7c:	ldr	r1, [pc, #416]	; 11c24 <getc@plt+0x10d8>
   11a80:	mov	r0, r4
   11a84:	add	r1, pc, r1
   11a88:	bl	10aec <fprintf@plt>
   11a8c:	ldr	r6, [pc, #404]	; 11c28 <getc@plt+0x10dc>
   11a90:	movw	r0, #10180	; 0x27c4
   11a94:	movw	r9, #65535	; 0xffff
   11a98:	mov	r5, #0
   11a9c:	add	r7, sp, #15
   11aa0:	add	r8, sl, r0
   11aa4:	movw	r0, #10184	; 0x27c8
   11aa8:	movt	r9, #16
   11aac:	add	sl, sl, r0
   11ab0:	add	r6, pc, r6
   11ab4:	ldr	r2, [r8, r5, lsl #3]
   11ab8:	cmp	r2, #1
   11abc:	blt	11b58 <getc@plt+0x100c>
   11ac0:	ldr	r3, [sl, r5, lsl #3]
   11ac4:	ldr	r1, [pc, #352]	; 11c2c <getc@plt+0x10e0>
   11ac8:	mov	r0, r4
   11acc:	add	r1, pc, r1
   11ad0:	bl	10aec <fprintf@plt>
   11ad4:	ldr	r0, [r8, r5, lsl #3]
   11ad8:	cmp	r0, #0
   11adc:	beq	11b1c <getc@plt+0xfd0>
   11ae0:	lsl	r1, r5, #1
   11ae4:	vmov	s2, r0
   11ae8:	ldr	r1, [sl, r1, lsl #2]
   11aec:	sub	r1, r0, r1
   11af0:	mov	r0, r4
   11af4:	vmov	s0, r1
   11af8:	vcvt.f64.s32	d16, s0
   11afc:	vcvt.f64.s32	d17, s2
   11b00:	ldr	r1, [pc, #300]	; 11c34 <getc@plt+0x10e8>
   11b04:	vmul.f64	d16, d16, d8
   11b08:	vdiv.f64	d16, d16, d17
   11b0c:	vmov	r2, r3, d16
   11b10:	add	r1, pc, r1
   11b14:	bl	10aec <fprintf@plt>
   11b18:	b	11b34 <getc@plt+0xfe8>
   11b1c:	ldr	r0, [pc, #268]	; 11c30 <getc@plt+0x10e4>
   11b20:	mov	r1, #8
   11b24:	mov	r2, #1
   11b28:	mov	r3, r4
   11b2c:	add	r0, pc, r0
   11b30:	bl	10a74 <fwrite@plt>
   11b34:	mov	r0, #0
   11b38:	mov	r1, r5
   11b3c:	mov	r2, r7
   11b40:	mov	r3, #1
   11b44:	bl	12fdc <error@@Base+0x614>
   11b48:	mov	r0, r4
   11b4c:	mov	r1, r6
   11b50:	mov	r2, r7
   11b54:	bl	10aec <fprintf@plt>
   11b58:	add	r5, r5, #1
   11b5c:	cmp	r5, r9
   11b60:	bne	11ab4 <getc@plt+0xf68>
   11b64:	mov	r0, r4
   11b68:	bl	12630 <getc@plt+0x1ae4>
   11b6c:	sub	sp, fp, #40	; 0x28
   11b70:	vpop	{d8}
   11b74:	add	sp, sp, #4
   11b78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b7c:	nop	{0}
   11b80:	andeq	r0, r0, r0
   11b84:	subsmi	r0, r9, r0
   11b88:	andeq	r2, r0, sp, lsr #7
   11b8c:	andeq	r2, r0, sp, lsr r0
   11b90:	strdeq	r1, [r0], -r2
   11b94:			; <UNDEFINED> instruction: 0x000028b7
   11b98:	andeq	r2, r0, ip, asr #2
   11b9c:	andeq	r2, r0, r3, ror #4
   11ba0:	andeq	r2, r0, r2
   11ba4:	andeq	r2, r0, lr, lsr #1
   11ba8:	ldrdeq	r2, [r0], -r3
   11bac:	muleq	r0, r9, pc	; <UNPREDICTABLE>
   11bb0:	andeq	r2, r0, r4, lsr #1
   11bb4:	andeq	r1, r0, ip, lsl #31
   11bb8:	andeq	r1, r0, r2, lsl #31
   11bbc:	andeq	r1, r0, sl, ror pc
   11bc0:	andeq	r1, r0, sl, ror #31
   11bc4:	andeq	r2, r0, pc
   11bc8:	andeq	r1, r0, r2, lsl pc
   11bcc:	andeq	r1, r0, sl, ror pc
   11bd0:	muleq	r0, pc, pc	; <UNPREDICTABLE>
   11bd4:			; <UNDEFINED> instruction: 0x00001eb9
   11bd8:	andeq	r1, r0, r0, asr #29
   11bdc:	andeq	r1, r0, sl, asr #29
   11be0:	andeq	r1, r0, r5, lsr pc
   11be4:	andeq	r1, r0, r1, lsr #29
   11be8:	andeq	r1, r0, r2, lsl #29
   11bec:	andeq	r1, r0, ip, ror #28
   11bf0:	ldrdeq	r1, [r0], -r3
   11bf4:	andeq	r1, r0, sl, lsl #28
   11bf8:	andeq	r1, r0, r7, asr #28
   11bfc:	andeq	r1, r0, r4, asr #28
   11c00:	andeq	r1, r0, lr, lsl #28
   11c04:	ldrdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   11c08:	andeq	r1, r0, r2, asr sp
   11c0c:	andeq	r1, r0, pc, ror sp
   11c10:	andeq	r1, r0, r0, ror #26
   11c14:	ldrdeq	r1, [r0], -lr
   11c18:	andeq	r0, r0, r8, lsr #4
   11c1c:			; <UNDEFINED> instruction: 0x00001cb2
   11c20:	andeq	r1, r0, fp, lsl #26
   11c24:	andeq	r1, r0, r0, lsr ip
   11c28:	andeq	r1, r0, lr, lsl #25
   11c2c:	andeq	r1, r0, r7, ror #24
   11c30:	ldrdeq	r1, [r0], -lr
   11c34:	andeq	r1, r0, r3, lsl #24
   11c38:	ldr	r2, [r1, #12]
   11c3c:	ldr	r3, [r0, #12]
   11c40:	cmp	r2, r3
   11c44:	bne	11c64 <getc@plt+0x1118>
   11c48:	ldr	r2, [r1, #16]
   11c4c:	ldr	r3, [r0, #16]
   11c50:	cmp	r2, r3
   11c54:	bne	11c64 <getc@plt+0x1118>
   11c58:	ldr	r1, [r1, #8]
   11c5c:	ldr	r0, [r0, #8]
   11c60:	b	1252c <getc@plt+0x19e0>
   11c64:	sub	r0, r2, r3
   11c68:	bx	lr
   11c6c:	cmp	r0, #2
   11c70:	bxlt	lr
   11c74:	ldr	r3, [pc, #28]	; 11c98 <getc@plt+0x114c>
   11c78:	add	r3, pc, r3
   11c7c:	str	r2, [r3]
   11c80:	ldr	r2, [pc, #20]	; 11c9c <getc@plt+0x1150>
   11c84:	add	r2, pc, r2
   11c88:	str	r1, [r2]
   11c8c:	sub	r1, r0, #1
   11c90:	mov	r0, #0
   11c94:	b	11ca0 <getc@plt+0x1154>
   11c98:			; <UNDEFINED> instruction: 0x000134b4
   11c9c:	andeq	r3, r1, r4, lsr #9
   11ca0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11ca4:	add	fp, sp, #24
   11ca8:	mov	r8, r1
   11cac:	mov	r5, r0
   11cb0:	b	11cd4 <getc@plt+0x1188>
   11cb4:	sub	r1, r4, #1
   11cb8:	str	r6, [r0, r4, lsl #2]
   11cbc:	cmp	r1, r5
   11cc0:	movgt	r0, r5
   11cc4:	blgt	11ca0 <getc@plt+0x1154>
   11cc8:	add	r5, r7, #1
   11ccc:	cmp	r5, r8
   11cd0:	popge	{r4, r5, r6, r7, r8, sl, fp, pc}
   11cd4:	ldr	r0, [pc, #220]	; 11db8 <getc@plt+0x126c>
   11cd8:	cmp	r5, r8
   11cdc:	mov	r4, r8
   11ce0:	mov	r7, r5
   11ce4:	ldr	r0, [pc, r0]
   11ce8:	ldr	r6, [r0, r5, lsl #2]
   11cec:	bge	11cb4 <getc@plt+0x1168>
   11cf0:	mov	r7, r5
   11cf4:	mov	r4, r8
   11cf8:	cmp	r7, r4
   11cfc:	blt	11d10 <getc@plt+0x11c4>
   11d00:	b	11d34 <getc@plt+0x11e8>
   11d04:	sub	r4, r4, #1
   11d08:	cmp	r7, r4
   11d0c:	bge	11d34 <getc@plt+0x11e8>
   11d10:	ldr	r0, [pc, #164]	; 11dbc <getc@plt+0x1270>
   11d14:	ldr	r0, [pc, r0]
   11d18:	ldr	r1, [r0, r4, lsl #2]
   11d1c:	ldr	r2, [pc, #156]	; 11dc0 <getc@plt+0x1274>
   11d20:	mov	r0, r6
   11d24:	ldr	r2, [pc, r2]
   11d28:	blx	r2
   11d2c:	cmn	r0, #1
   11d30:	ble	11d04 <getc@plt+0x11b8>
   11d34:	cmp	r7, r4
   11d38:	beq	11d50 <getc@plt+0x1204>
   11d3c:	ldr	r0, [pc, #128]	; 11dc4 <getc@plt+0x1278>
   11d40:	ldr	r0, [pc, r0]
   11d44:	ldr	r1, [r0, r4, lsl #2]
   11d48:	str	r1, [r0, r7, lsl #2]
   11d4c:	add	r7, r7, #1
   11d50:	cmp	r7, r4
   11d54:	bge	11d7c <getc@plt+0x1230>
   11d58:	ldr	r0, [pc, #104]	; 11dc8 <getc@plt+0x127c>
   11d5c:	ldr	r0, [pc, r0]
   11d60:	ldr	r1, [r0, r7, lsl #2]
   11d64:	ldr	r2, [pc, #96]	; 11dcc <getc@plt+0x1280>
   11d68:	mov	r0, r6
   11d6c:	ldr	r2, [pc, r2]
   11d70:	blx	r2
   11d74:	cmp	r0, #1
   11d78:	bge	11d4c <getc@plt+0x1200>
   11d7c:	cmp	r7, r4
   11d80:	bne	11d90 <getc@plt+0x1244>
   11d84:	cmp	r7, r4
   11d88:	blt	11d08 <getc@plt+0x11bc>
   11d8c:	b	11dac <getc@plt+0x1260>
   11d90:	ldr	r0, [pc, #56]	; 11dd0 <getc@plt+0x1284>
   11d94:	ldr	r0, [pc, r0]
   11d98:	ldr	r1, [r0, r7, lsl #2]
   11d9c:	str	r1, [r0, r4, lsl #2]
   11da0:	sub	r4, r4, #1
   11da4:	cmp	r7, r4
   11da8:	blt	11d08 <getc@plt+0x11bc>
   11dac:	ldr	r0, [pc, #32]	; 11dd4 <getc@plt+0x1288>
   11db0:	ldr	r0, [pc, r0]
   11db4:	b	11cb4 <getc@plt+0x1168>
   11db8:	andeq	r3, r1, r4, asr #8
   11dbc:	andeq	r3, r1, r4, lsl r4
   11dc0:	andeq	r3, r1, r8, lsl #8
   11dc4:	andeq	r3, r1, r8, ror #7
   11dc8:	andeq	r3, r1, ip, asr #7
   11dcc:	andeq	r3, r1, r0, asr #7
   11dd0:	muleq	r1, r4, r3
   11dd4:	andeq	r3, r1, r8, ror r3
   11dd8:	cmp	r1, #0
   11ddc:	bxeq	lr
   11de0:	push	{fp, lr}
   11de4:	mov	fp, sp
   11de8:	vldr	d16, [pc, #104]	; 11e58 <getc@plt+0x130c>
   11dec:	sub	r2, r1, r2
   11df0:	vmov	s2, r1
   11df4:	vmov	s0, r2
   11df8:	vcvt.f64.s32	d17, s0
   11dfc:	vcvt.f64.s32	d18, s2
   11e00:	vmul.f64	d16, d17, d16
   11e04:	vdiv.f64	d16, d16, d18
   11e08:	vcmpe.f64	d16, #0.0
   11e0c:	vmrs	APSR_nzcv, fpscr
   11e10:	blt	11e44 <getc@plt+0x12f8>
   11e14:	mov	r2, #0
   11e18:	sxth	ip, r2
   11e1c:	add	r2, r2, #1
   11e20:	ldr	r3, [r0, ip, lsl #2]
   11e24:	add	lr, r3, r1
   11e28:	sxth	r3, r2
   11e2c:	vmov	s0, r3
   11e30:	str	lr, [r0, ip, lsl #2]
   11e34:	vcvt.f64.s32	d17, s0
   11e38:	vcmpe.f64	d16, d17
   11e3c:	vmrs	APSR_nzcv, fpscr
   11e40:	bge	11e18 <getc@plt+0x12cc>
   11e44:	ldr	r2, [r0, #404]	; 0x194
   11e48:	add	r1, r2, r1
   11e4c:	str	r1, [r0, #404]	; 0x194
   11e50:	pop	{fp, lr}
   11e54:	bx	lr
   11e58:	andeq	r0, r0, r0
   11e5c:	subsmi	r0, r9, r0
   11e60:	push	{r4, r5, r6, r7, fp, lr}
   11e64:	add	fp, sp, #16
   11e68:	vpush	{d8}
   11e6c:	sub	sp, sp, #8
   11e70:	mov	r4, r0
   11e74:	ldr	r0, [r0, #404]	; 0x194
   11e78:	cmp	r0, #0
   11e7c:	subeq	sp, fp, #24
   11e80:	vpopeq	{d8}
   11e84:	popeq	{r4, r5, r6, r7, fp, pc}
   11e88:	ldr	r2, [pc, #120]	; 11f08 <getc@plt+0x13bc>
   11e8c:	mov	r0, r1
   11e90:	add	r2, pc, r2
   11e94:	mov	r1, r2
   11e98:	bl	125a8 <getc@plt+0x1a5c>
   11e9c:	ldr	r7, [pc, #104]	; 11f0c <getc@plt+0x13c0>
   11ea0:	vldr	d8, [pc, #88]	; 11f00 <getc@plt+0x13b4>
   11ea4:	mov	r5, r0
   11ea8:	mov	r6, #0
   11eac:	add	r7, pc, r7
   11eb0:	add	r0, r4, r6, lsl #2
   11eb4:	vldr	s2, [r4, #404]	; 0x194
   11eb8:	mov	r1, r7
   11ebc:	mov	r2, r6
   11ec0:	vldr	s0, [r0]
   11ec4:	mov	r0, r5
   11ec8:	vcvt.f64.s32	d16, s0
   11ecc:	vcvt.f64.s32	d17, s2
   11ed0:	vmul.f64	d16, d16, d8
   11ed4:	vdiv.f64	d16, d16, d17
   11ed8:	vstr	d16, [sp]
   11edc:	bl	10aec <fprintf@plt>
   11ee0:	add	r6, r6, #1
   11ee4:	cmp	r6, #101	; 0x65
   11ee8:	bne	11eb0 <getc@plt+0x1364>
   11eec:	mov	r0, r5
   11ef0:	sub	sp, fp, #24
   11ef4:	vpop	{d8}
   11ef8:	pop	{r4, r5, r6, r7, fp, lr}
   11efc:	b	12630 <getc@plt+0x1ae4>
   11f00:	andeq	r0, r0, r0
   11f04:	subsmi	r0, r9, r0
   11f08:	andeq	r1, r0, r1, asr #21
   11f0c:	andeq	r1, r0, sl, lsr #17
   11f10:	push	{r4, r5, r6, sl, fp, lr}
   11f14:	add	fp, sp, #16
   11f18:	mov	r4, r0
   11f1c:	movw	r6, #503	; 0x1f7
   11f20:	mov	r5, r0
   11f24:	mov	r0, r5
   11f28:	bl	1327c <error@@Base+0x8b4>
   11f2c:	subs	r6, r6, #1
   11f30:	add	r5, r5, #16
   11f34:	bne	11f24 <getc@plt+0x13d8>
   11f38:	movw	r0, #8052	; 0x1f74
   11f3c:	mov	r1, #0
   11f40:	str	r1, [r4, r0]
   11f44:	movw	r0, #8048	; 0x1f70
   11f48:	str	r1, [r4, r0]
   11f4c:	pop	{r4, r5, r6, sl, fp, pc}
   11f50:	push	{r4, r5, r6, sl, fp, lr}
   11f54:	add	fp, sp, #16
   11f58:	mov	r5, r1
   11f5c:	ldrb	r1, [r1]
   11f60:	mov	r4, #0
   11f64:	mov	r2, #0
   11f68:	cmp	r1, #0
   11f6c:	beq	11fa0 <getc@plt+0x1454>
   11f70:	add	r3, r5, #1
   11f74:	mov	r2, #0
   11f78:	uxtab	r2, r2, r1
   11f7c:	ldrb	r1, [r3], #1
   11f80:	cmp	r1, #0
   11f84:	bne	11f78 <getc@plt+0x142c>
   11f88:	movw	r1, #20065	; 0x4e61
   11f8c:	movt	r1, #33354	; 0x824a
   11f90:	umull	r1, r3, r2, r1
   11f94:	lsr	r1, r3, #8
   11f98:	movw	r3, #503	; 0x1f7
   11f9c:	mls	r2, r1, r3, r2
   11fa0:	ldr	r6, [r0, r2, lsl #4]
   11fa4:	cmp	r6, #0
   11fa8:	bne	11fc0 <getc@plt+0x1474>
   11fac:	mov	r0, r4
   11fb0:	pop	{r4, r5, r6, sl, fp, pc}
   11fb4:	ldr	r6, [r6, #4]
   11fb8:	cmp	r6, #0
   11fbc:	beq	11fac <getc@plt+0x1460>
   11fc0:	ldr	r1, [r6, #8]
   11fc4:	mov	r0, r5
   11fc8:	bl	109f0 <strcmp@plt>
   11fcc:	cmp	r0, #0
   11fd0:	bne	11fb4 <getc@plt+0x1468>
   11fd4:	mov	r4, r6
   11fd8:	mov	r0, r4
   11fdc:	pop	{r4, r5, r6, sl, fp, pc}
   11fe0:	push	{r4, r5, fp, lr}
   11fe4:	add	fp, sp, #8
   11fe8:	mov	r4, r0
   11fec:	ldr	r0, [r1, #8]
   11ff0:	ldrb	r2, [r0]
   11ff4:	cmp	r2, #0
   11ff8:	beq	12030 <getc@plt+0x14e4>
   11ffc:	add	r3, r0, #1
   12000:	mov	r0, #0
   12004:	uxtab	r0, r0, r2
   12008:	ldrb	r2, [r3], #1
   1200c:	cmp	r2, #0
   12010:	bne	12004 <getc@plt+0x14b8>
   12014:	movw	r2, #20065	; 0x4e61
   12018:	movt	r2, #33354	; 0x824a
   1201c:	umull	r2, r3, r0, r2
   12020:	lsr	r2, r3, #8
   12024:	movw	r3, #503	; 0x1f7
   12028:	mls	r0, r2, r3, r0
   1202c:	b	12034 <getc@plt+0x14e8>
   12030:	mov	r0, #0
   12034:	add	r0, r4, r0, lsl #4
   12038:	bl	13288 <error@@Base+0x8c0>
   1203c:	movw	r0, #8048	; 0x1f70
   12040:	mov	r5, r4
   12044:	ldr	r0, [r5, r0]!
   12048:	cmp	r0, #0
   1204c:	beq	1205c <getc@plt+0x1510>
   12050:	bl	10a08 <free@plt>
   12054:	mov	r0, #0
   12058:	str	r0, [r5]
   1205c:	movw	r0, #8052	; 0x1f74
   12060:	ldr	r0, [r4, r0]!
   12064:	add	r0, r0, #1
   12068:	str	r0, [r4]
   1206c:	pop	{r4, r5, fp, pc}
   12070:	push	{r4, r5, fp, lr}
   12074:	add	fp, sp, #8
   12078:	mov	r4, r0
   1207c:	ldr	r0, [r1, #8]
   12080:	ldrb	r2, [r0]
   12084:	cmp	r2, #0
   12088:	beq	120c0 <getc@plt+0x1574>
   1208c:	add	r3, r0, #1
   12090:	mov	r0, #0
   12094:	uxtab	r0, r0, r2
   12098:	ldrb	r2, [r3], #1
   1209c:	cmp	r2, #0
   120a0:	bne	12094 <getc@plt+0x1548>
   120a4:	movw	r2, #20065	; 0x4e61
   120a8:	movt	r2, #33354	; 0x824a
   120ac:	umull	r2, r3, r0, r2
   120b0:	lsr	r2, r3, #8
   120b4:	movw	r3, #503	; 0x1f7
   120b8:	mls	r0, r2, r3, r0
   120bc:	b	120c4 <getc@plt+0x1578>
   120c0:	mov	r0, #0
   120c4:	add	r0, r4, r0, lsl #4
   120c8:	bl	133d0 <error@@Base+0xa08>
   120cc:	movw	r0, #8048	; 0x1f70
   120d0:	mov	r5, r4
   120d4:	ldr	r0, [r5, r0]!
   120d8:	cmp	r0, #0
   120dc:	beq	120ec <getc@plt+0x15a0>
   120e0:	bl	10a08 <free@plt>
   120e4:	mov	r0, #0
   120e8:	str	r0, [r5]
   120ec:	movw	r0, #8052	; 0x1f74
   120f0:	ldr	r0, [r4, r0]!
   120f4:	sub	r0, r0, #1
   120f8:	str	r0, [r4]
   120fc:	pop	{r4, r5, fp, pc}
   12100:	push	{r4, r5, fp, lr}
   12104:	add	fp, sp, #8
   12108:	mov	r4, r0
   1210c:	movw	r0, #8048	; 0x1f70
   12110:	mov	r5, r4
   12114:	ldr	r0, [r5, r0]!
   12118:	cmp	r0, #0
   1211c:	bne	12178 <getc@plt+0x162c>
   12120:	movw	r0, #8052	; 0x1f74
   12124:	ldr	r0, [r4, r0]
   12128:	cmp	r0, #0
   1212c:	popeq	{r4, r5, fp, pc}
   12130:	mov	r1, #4
   12134:	bl	12508 <getc@plt+0x19bc>
   12138:	str	r0, [r5]
   1213c:	mov	r0, #0
   12140:	movw	ip, #503	; 0x1f7
   12144:	mov	r2, #0
   12148:	ldr	r3, [r4, r2, lsl #4]
   1214c:	cmp	r3, #0
   12150:	beq	1216c <getc@plt+0x1620>
   12154:	ldr	r1, [r5]
   12158:	str	r3, [r1, r0, lsl #2]
   1215c:	add	r0, r0, #1
   12160:	ldr	r3, [r3, #4]
   12164:	cmp	r3, #0
   12168:	bne	12154 <getc@plt+0x1608>
   1216c:	add	r2, r2, #1
   12170:	cmp	r2, ip
   12174:	bne	12148 <getc@plt+0x15fc>
   12178:	pop	{r4, r5, fp, pc}
   1217c:	push	{r4, r5, r6, r7, fp, lr}
   12180:	add	fp, sp, #16
   12184:	mov	r5, r1
   12188:	mov	r4, r0
   1218c:	movw	r7, #503	; 0x1f7
   12190:	mov	r6, r0
   12194:	mov	r0, r6
   12198:	mov	r1, r5
   1219c:	bl	1349c <error@@Base+0xad4>
   121a0:	subs	r7, r7, #1
   121a4:	add	r6, r6, #16
   121a8:	bne	12194 <getc@plt+0x1648>
   121ac:	movw	r0, #8048	; 0x1f70
   121b0:	mov	r5, r4
   121b4:	ldr	r0, [r5, r0]!
   121b8:	cmp	r0, #0
   121bc:	beq	121cc <getc@plt+0x1680>
   121c0:	bl	10a08 <free@plt>
   121c4:	mov	r0, #0
   121c8:	str	r0, [r5]
   121cc:	movw	r0, #8052	; 0x1f74
   121d0:	mov	r1, #0
   121d4:	str	r1, [r4, r0]
   121d8:	pop	{r4, r5, r6, r7, fp, pc}
   121dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121e0:	add	fp, sp, #28
   121e4:	push	{r0}		; (str r0, [sp, #-4]!)
   121e8:	ldr	r0, [pc, #332]	; 1233c <getc@plt+0x17f0>
   121ec:	add	r0, pc, r0
   121f0:	ldrh	r0, [r0]
   121f4:	cmp	r0, #0
   121f8:	bne	12318 <getc@plt+0x17cc>
   121fc:	ldr	r3, [pc, #316]	; 12340 <getc@plt+0x17f4>
   12200:	ldr	r6, [pc, #316]	; 12344 <getc@plt+0x17f8>
   12204:	mov	r4, #0
   12208:	mov	r7, #0
   1220c:	mov	r8, #0
   12210:	add	r3, pc, r3
   12214:	add	r6, pc, r6
   12218:	sxth	sl, r7
   1221c:	cmp	sl, #1
   12220:	blt	12290 <getc@plt+0x1744>
   12224:	ldr	r1, [pc, #284]	; 12348 <getc@plt+0x17fc>
   12228:	add	r0, r8, r8, lsl #1
   1222c:	add	r0, r3, r0, lsl #2
   12230:	ldr	r5, [r0, #8]
   12234:	ldr	r1, [pc, r1]
   12238:	mov	r0, r5
   1223c:	bl	109f0 <strcmp@plt>
   12240:	cmp	r0, #0
   12244:	mov	r0, r4
   12248:	mov	r9, #0
   1224c:	beq	12298 <getc@plt+0x174c>
   12250:	ldr	r7, [pc, #244]	; 1234c <getc@plt+0x1800>
   12254:	sxth	sl, r4
   12258:	mov	r1, #1
   1225c:	add	r7, pc, r7
   12260:	mov	r9, r1
   12264:	cmp	r1, sl
   12268:	bge	12284 <getc@plt+0x1738>
   1226c:	ldr	r1, [r7, r9, lsl #2]
   12270:	mov	r0, r5
   12274:	bl	109f0 <strcmp@plt>
   12278:	add	r1, r9, #1
   1227c:	cmp	r0, #0
   12280:	bne	12260 <getc@plt+0x1714>
   12284:	mov	r0, r4
   12288:	mov	r7, r4
   1228c:	b	12298 <getc@plt+0x174c>
   12290:	mov	r0, r7
   12294:	mov	r9, #0
   12298:	ldr	r3, [pc, #176]	; 12350 <getc@plt+0x1804>
   1229c:	cmp	r9, sl
   122a0:	add	r3, pc, r3
   122a4:	bne	122e0 <getc@plt+0x1794>
   122a8:	uxth	r0, r7
   122ac:	cmp	r0, #256	; 0x100
   122b0:	beq	12330 <getc@plt+0x17e4>
   122b4:	ldr	r0, [pc, #152]	; 12354 <getc@plt+0x1808>
   122b8:	add	r4, r7, #1
   122bc:	add	r0, pc, r0
   122c0:	strh	r4, [r0]
   122c4:	add	r0, r8, r8, lsl #1
   122c8:	add	r0, r3, r0, lsl #2
   122cc:	ldr	r1, [pc, #132]	; 12358 <getc@plt+0x180c>
   122d0:	ldr	r0, [r0, #8]
   122d4:	add	r1, pc, r1
   122d8:	str	r0, [r1, r9, lsl #2]
   122dc:	mov	r0, r4
   122e0:	add	r1, r8, r8, lsl #1
   122e4:	mov	r2, r3
   122e8:	ldr	r1, [r2, r1, lsl #2]!
   122ec:	ldr	r2, [r2, #4]
   122f0:	cmp	r1, r2
   122f4:	bhi	12308 <getc@plt+0x17bc>
   122f8:	strb	r9, [r6, r1]
   122fc:	add	r1, r1, #1
   12300:	cmp	r1, r2
   12304:	bls	122f8 <getc@plt+0x17ac>
   12308:	add	r8, r8, #1
   1230c:	mov	r7, r0
   12310:	cmp	r8, #91	; 0x5b
   12314:	bcc	12218 <getc@plt+0x16cc>
   12318:	ldr	r0, [pc, #60]	; 1235c <getc@plt+0x1810>
   1231c:	ldr	r1, [sp]
   12320:	add	r0, pc, r0
   12324:	ldrb	r0, [r0, r1]
   12328:	sub	sp, fp, #28
   1232c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12330:	ldr	r0, [pc, #40]	; 12360 <getc@plt+0x1814>
   12334:	add	r0, pc, r0
   12338:	bl	129c8 <error@@Base>
   1233c:	andeq	r2, r1, r4, asr #30
   12340:	andeq	r2, r1, r4, lsr #17
   12344:	andeq	r2, r1, lr, lsl pc
   12348:	andseq	r2, r2, r0, lsl #30
   1234c:			; <UNDEFINED> instruction: 0x00122ed8
   12350:	andeq	r2, r1, r4, lsl r8
   12354:	andeq	r2, r1, r4, ror lr
   12358:	andseq	r2, r2, r0, ror #28
   1235c:	andeq	r2, r1, r2, lsl lr
   12360:	andeq	r1, r0, r5, asr #8
   12364:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12368:	add	fp, sp, #28
   1236c:	push	{r0}		; (str r0, [sp, #-4]!)
   12370:	ldr	r0, [pc, #356]	; 124dc <getc@plt+0x1990>
   12374:	add	r0, pc, r0
   12378:	ldrh	r6, [r0]
   1237c:	cmp	r6, #0
   12380:	bne	124a0 <getc@plt+0x1954>
   12384:	ldr	r3, [pc, #340]	; 124e0 <getc@plt+0x1994>
   12388:	ldr	r4, [pc, #340]	; 124e4 <getc@plt+0x1998>
   1238c:	mov	r6, #0
   12390:	mov	r7, #0
   12394:	mov	r8, #0
   12398:	add	r3, pc, r3
   1239c:	add	r4, pc, r4
   123a0:	sxth	sl, r7
   123a4:	cmp	sl, #1
   123a8:	blt	12418 <getc@plt+0x18cc>
   123ac:	ldr	r1, [pc, #308]	; 124e8 <getc@plt+0x199c>
   123b0:	add	r0, r8, r8, lsl #1
   123b4:	add	r0, r3, r0, lsl #2
   123b8:	ldr	r5, [r0, #8]
   123bc:	ldr	r1, [pc, r1]
   123c0:	mov	r0, r5
   123c4:	bl	109f0 <strcmp@plt>
   123c8:	cmp	r0, #0
   123cc:	mov	r0, r6
   123d0:	mov	r9, #0
   123d4:	beq	12420 <getc@plt+0x18d4>
   123d8:	ldr	r7, [pc, #268]	; 124ec <getc@plt+0x19a0>
   123dc:	sxth	sl, r6
   123e0:	mov	r1, #1
   123e4:	add	r7, pc, r7
   123e8:	mov	r9, r1
   123ec:	cmp	r1, sl
   123f0:	bge	1240c <getc@plt+0x18c0>
   123f4:	ldr	r1, [r7, r9, lsl #2]
   123f8:	mov	r0, r5
   123fc:	bl	109f0 <strcmp@plt>
   12400:	add	r1, r9, #1
   12404:	cmp	r0, #0
   12408:	bne	123e8 <getc@plt+0x189c>
   1240c:	mov	r0, r6
   12410:	mov	r7, r6
   12414:	b	12420 <getc@plt+0x18d4>
   12418:	mov	r0, r7
   1241c:	mov	r9, #0
   12420:	ldr	r3, [pc, #200]	; 124f0 <getc@plt+0x19a4>
   12424:	cmp	r9, sl
   12428:	add	r3, pc, r3
   1242c:	bne	12468 <getc@plt+0x191c>
   12430:	uxth	r0, r7
   12434:	cmp	r0, #256	; 0x100
   12438:	beq	124d0 <getc@plt+0x1984>
   1243c:	ldr	r0, [pc, #176]	; 124f4 <getc@plt+0x19a8>
   12440:	add	r6, r7, #1
   12444:	add	r0, pc, r0
   12448:	strh	r6, [r0]
   1244c:	add	r0, r8, r8, lsl #1
   12450:	add	r0, r3, r0, lsl #2
   12454:	ldr	r1, [pc, #156]	; 124f8 <getc@plt+0x19ac>
   12458:	ldr	r0, [r0, #8]
   1245c:	add	r1, pc, r1
   12460:	str	r0, [r1, r9, lsl #2]
   12464:	mov	r0, r6
   12468:	add	r1, r8, r8, lsl #1
   1246c:	mov	r2, r3
   12470:	ldr	r1, [r2, r1, lsl #2]!
   12474:	ldr	r2, [r2, #4]
   12478:	cmp	r1, r2
   1247c:	bhi	12490 <getc@plt+0x1944>
   12480:	strb	r9, [r4, r1]
   12484:	add	r1, r1, #1
   12488:	cmp	r1, r2
   1248c:	bls	12480 <getc@plt+0x1934>
   12490:	add	r8, r8, #1
   12494:	mov	r7, r0
   12498:	cmp	r8, #91	; 0x5b
   1249c:	bcc	123a0 <getc@plt+0x1854>
   124a0:	ldr	r0, [sp]
   124a4:	sxth	r1, r6
   124a8:	uxtb	r0, r0
   124ac:	cmp	r0, r1
   124b0:	ldrlt	r1, [pc, #68]	; 124fc <getc@plt+0x19b0>
   124b4:	addlt	r1, pc, r1
   124b8:	ldrlt	r0, [r1, r0, lsl #2]
   124bc:	sublt	sp, fp, #28
   124c0:	poplt	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   124c4:	ldr	r0, [pc, #56]	; 12504 <getc@plt+0x19b8>
   124c8:	add	r0, pc, r0
   124cc:	bl	129c8 <error@@Base>
   124d0:	ldr	r0, [pc, #40]	; 12500 <getc@plt+0x19b4>
   124d4:	add	r0, pc, r0
   124d8:	bl	129c8 <error@@Base>
   124dc:			; <UNDEFINED> instruction: 0x00012dbc
   124e0:	andeq	r2, r1, ip, lsl r7
   124e4:	muleq	r1, r6, sp
   124e8:	andseq	r2, r2, r8, ror sp
   124ec:	andseq	r2, r2, r0, asr sp
   124f0:	andeq	r2, r1, ip, lsl #13
   124f4:	andeq	r2, r1, ip, ror #25
   124f8:			; <UNDEFINED> instruction: 0x00122cd8
   124fc:	andseq	r2, r2, r0, lsl #25
   12500:	andeq	r1, r0, r5, lsr #5
   12504:	muleq	r0, r9, r2
   12508:	push	{fp, lr}
   1250c:	mov	fp, sp
   12510:	bl	109e4 <calloc@plt>
   12514:	cmp	r0, #0
   12518:	popne	{fp, pc}
   1251c:	ldr	r0, [pc, #4]	; 12528 <getc@plt+0x19dc>
   12520:	add	r0, pc, r0
   12524:	bl	129c8 <error@@Base>
   12528:	andeq	r1, r0, r7, lsr #16
   1252c:	push	{r4, r5, r6, sl, fp, lr}
   12530:	add	fp, sp, #16
   12534:	ldrb	r3, [r0]
   12538:	ldrb	ip, [r1]
   1253c:	mov	r2, r0
   12540:	mov	r0, #0
   12544:	cmp	r3, #0
   12548:	beq	12580 <getc@plt+0x1a34>
   1254c:	add	r6, r2, #1
   12550:	add	lr, r1, #1
   12554:	mov	r2, #0
   12558:	uxtb	r4, ip
   1255c:	uxtb	r5, r3
   12560:	cmp	r5, r4
   12564:	bne	12590 <getc@plt+0x1a44>
   12568:	ldrb	r3, [r6, r2]
   1256c:	ldrb	ip, [lr, r2]
   12570:	add	r2, r2, #1
   12574:	cmp	r3, #0
   12578:	bne	12558 <getc@plt+0x1a0c>
   1257c:	b	12584 <getc@plt+0x1a38>
   12580:	mov	r2, #0
   12584:	cmp	ip, #0
   12588:	popeq	{r4, r5, r6, sl, fp, pc}
   1258c:	mov	r3, #0
   12590:	ldrb	r1, [r1, r2]
   12594:	uxtb	r2, r3
   12598:	mov	r0, #1
   1259c:	cmp	r2, r1
   125a0:	mvncc	r0, #0
   125a4:	pop	{r4, r5, r6, sl, fp, pc}
   125a8:	push	{r4, r5, fp, lr}
   125ac:	add	fp, sp, #8
   125b0:	mov	r5, r1
   125b4:	cmp	r0, #0
   125b8:	beq	125ec <getc@plt+0x1aa0>
   125bc:	mov	r1, r5
   125c0:	mov	r4, r0
   125c4:	bl	109fc <fopen@plt>
   125c8:	cmp	r0, #0
   125cc:	popne	{r4, r5, fp, pc}
   125d0:	ldrb	r0, [r5]
   125d4:	cmp	r0, #119	; 0x77
   125d8:	bne	12610 <getc@plt+0x1ac4>
   125dc:	ldr	r0, [pc, #72]	; 1262c <getc@plt+0x1ae0>
   125e0:	mov	r1, r4
   125e4:	add	r0, pc, r0
   125e8:	bl	12a18 <error@@Base+0x50>
   125ec:	ldrb	r0, [r5]
   125f0:	ldr	r1, [pc, #40]	; 12620 <getc@plt+0x1ad4>
   125f4:	ldr	r1, [pc, r1]
   125f8:	ldr	r2, [pc, #36]	; 12624 <getc@plt+0x1ad8>
   125fc:	cmp	r0, #114	; 0x72
   12600:	ldr	r2, [pc, r2]
   12604:	moveq	r2, r1
   12608:	ldr	r0, [r2]
   1260c:	pop	{r4, r5, fp, pc}
   12610:	ldr	r0, [pc, #16]	; 12628 <getc@plt+0x1adc>
   12614:	mov	r1, r4
   12618:	add	r0, pc, r0
   1261c:	bl	12a18 <error@@Base+0x50>
   12620:	andeq	r2, r1, ip, lsr #21
   12624:	andeq	r2, r1, r8, lsr #21
   12628:	andeq	r1, r0, pc, asr r7
   1262c:	andeq	r1, r0, sp, ror r7
   12630:	ldr	r1, [pc, #32]	; 12658 <getc@plt+0x1b0c>
   12634:	ldr	r1, [pc, r1]
   12638:	ldr	r1, [r1]
   1263c:	cmp	r1, r0
   12640:	ldrne	r1, [pc, #20]	; 1265c <getc@plt+0x1b10>
   12644:	ldrne	r1, [pc, r1]
   12648:	ldrne	r1, [r1]
   1264c:	cmpne	r1, r0
   12650:	bxeq	lr
   12654:	b	10b04 <fclose@plt>
   12658:	andeq	r2, r1, ip, ror #20
   1265c:	andeq	r2, r1, r4, ror #20
   12660:	push	{fp, lr}
   12664:	mov	fp, sp
   12668:	sub	sp, sp, #88	; 0x58
   1266c:	mov	r1, r0
   12670:	mov	r2, sp
   12674:	mov	r0, #3
   12678:	bl	10a68 <__xstat@plt>
   1267c:	clz	r0, r0
   12680:	lsr	r0, r0, #5
   12684:	mov	sp, fp
   12688:	pop	{fp, pc}
   1268c:	push	{r4, r5, fp, lr}
   12690:	add	fp, sp, #8
   12694:	sub	sp, sp, #104	; 0x68
   12698:	ldr	r0, [pc, #92]	; 126fc <getc@plt+0x1bb0>
   1269c:	add	r0, pc, r0
   126a0:	ldrh	r1, [r0]
   126a4:	add	r5, r1, #1
   126a8:	strh	r5, [r0]
   126ac:	ldr	r0, [pc, #76]	; 12700 <getc@plt+0x1bb4>
   126b0:	ldr	r0, [pc, r0]
   126b4:	ldr	r4, [r0]
   126b8:	bl	10abc <getpid@plt>
   126bc:	mov	r3, r0
   126c0:	sxth	r0, r5
   126c4:	add	r5, sp, #4
   126c8:	mov	r2, r4
   126cc:	str	r0, [sp]
   126d0:	mov	r0, r5
   126d4:	ldr	r1, [pc, #40]	; 12704 <getc@plt+0x1bb8>
   126d8:	add	r1, pc, r1
   126dc:	bl	10b10 <sprintf@plt>
   126e0:	mov	r0, r5
   126e4:	bl	10a38 <strdup@plt>
   126e8:	mov	r4, r0
   126ec:	bl	10a50 <unlink@plt>
   126f0:	mov	r0, r4
   126f4:	sub	sp, fp, #8
   126f8:	pop	{r4, r5, fp, pc}
   126fc:	mulseq	r2, r8, lr
   12700:	andeq	r2, r1, r4, ror #19
   12704:	andeq	r1, r0, r8, asr #13
   12708:	push	{r4, sl, fp, lr}
   1270c:	add	fp, sp, #8
   12710:	mov	r4, r0
   12714:	bl	10ae0 <strlen@plt>
   12718:	sub	r0, r0, #1
   1271c:	sxth	r0, r0
   12720:	cmp	r0, #0
   12724:	blt	12734 <getc@plt+0x1be8>
   12728:	ldrb	r1, [r4, r0]
   1272c:	cmp	r1, #47	; 0x2f
   12730:	bne	12718 <getc@plt+0x1bcc>
   12734:	add	r0, r4, r0
   12738:	add	r0, r0, #1
   1273c:	pop	{r4, sl, fp, pc}
   12740:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12744:	add	fp, sp, #28
   12748:	sub	sp, sp, #12
   1274c:	str	r2, [sp]
   12750:	stmib	sp, {r0, r1}
   12754:	mov	r6, r3
   12758:	ldr	r4, [r1]
   1275c:	mov	r0, r4
   12760:	bl	10ae0 <strlen@plt>
   12764:	sub	r0, r0, #1
   12768:	sxth	r0, r0
   1276c:	cmp	r0, #0
   12770:	blt	12780 <getc@plt+0x1c34>
   12774:	ldrb	r1, [r4, r0]
   12778:	cmp	r1, #47	; 0x2f
   1277c:	bne	12764 <getc@plt+0x1c18>
   12780:	ldr	r1, [pc, #484]	; 1296c <getc@plt+0x1e20>
   12784:	add	r0, r4, r0
   12788:	add	r0, r0, #1
   1278c:	ldr	r1, [pc, r1]
   12790:	str	r0, [r1]
   12794:	mov	r0, #2
   12798:	ldr	r4, [pc, #464]	; 12970 <getc@plt+0x1e24>
   1279c:	add	r4, pc, r4
   127a0:	mov	r1, r4
   127a4:	bl	10aa4 <__sysv_signal@plt>
   127a8:	mov	r0, #15
   127ac:	mov	r1, r4
   127b0:	bl	10aa4 <__sysv_signal@plt>
   127b4:	ldr	r0, [sp, #4]
   127b8:	ldr	r5, [r0]
   127bc:	cmp	r5, #1
   127c0:	bne	127d8 <getc@plt+0x1c8c>
   127c4:	ldr	r0, [pc, #424]	; 12974 <getc@plt+0x1e28>
   127c8:	ldr	r0, [pc, r0]
   127cc:	ldrb	r0, [r0]
   127d0:	cmp	r0, #0
   127d4:	bne	12954 <getc@plt+0x1e08>
   127d8:	ldr	ip, [sp, #8]
   127dc:	mov	r8, #0
   127e0:	cmp	r5, #2
   127e4:	blt	12930 <getc@plt+0x1de4>
   127e8:	mov	r8, #0
   127ec:	mov	r7, #1
   127f0:	mov	r9, #1
   127f4:	ldr	r4, [ip, r7, lsl #2]
   127f8:	ldrb	r0, [r4]
   127fc:	cmp	r0, #45	; 0x2d
   12800:	bne	128d8 <getc@plt+0x1d8c>
   12804:	ldrb	sl, [r4, #1]
   12808:	cmp	sl, #0
   1280c:	beq	128d8 <getc@plt+0x1d8c>
   12810:	mov	r0, r4
   12814:	bl	10ae0 <strlen@plt>
   12818:	mov	r2, r0
   1281c:	ldr	r0, [pc, #340]	; 12978 <getc@plt+0x1e2c>
   12820:	mov	r1, r4
   12824:	add	r0, pc, r0
   12828:	bl	10b34 <strncmp@plt>
   1282c:	cmp	r0, #0
   12830:	beq	12954 <getc@plt+0x1e08>
   12834:	ldr	ip, [sp, #8]
   12838:	add	r1, r7, #1
   1283c:	mov	r0, #0
   12840:	cmp	r1, r5
   12844:	ldrlt	r0, [ip, r1, lsl #2]
   12848:	cmp	r6, #0
   1284c:	ldrbne	r2, [r6]
   12850:	cmpne	r2, #0
   12854:	beq	12944 <getc@plt+0x1df8>
   12858:	mov	r1, #0
   1285c:	cmp	sl, r2
   12860:	beq	12888 <getc@plt+0x1d3c>
   12864:	mov	r2, #1
   12868:	sxth	r1, r2
   1286c:	add	r3, r1, r1, lsl #1
   12870:	ldrb	r3, [r6, r3, lsl #2]
   12874:	cmp	r3, #0
   12878:	beq	12944 <getc@plt+0x1df8>
   1287c:	add	r2, r2, #1
   12880:	cmp	sl, r3
   12884:	bne	12868 <getc@plt+0x1d1c>
   12888:	add	r1, r1, r1, lsl #1
   1288c:	add	r3, r6, r1, lsl #2
   12890:	ldr	r1, [r3, #4]
   12894:	cmp	r1, #0
   12898:	beq	128f8 <getc@plt+0x1dac>
   1289c:	mov	r2, r4
   128a0:	cmp	r0, #0
   128a4:	ldrb	r7, [r2, #2]!
   128a8:	cmpeq	r7, #0
   128ac:	beq	128f8 <getc@plt+0x1dac>
   128b0:	ldr	r3, [r1]
   128b4:	cmp	r3, #0
   128b8:	bne	1295c <getc@plt+0x1e10>
   128bc:	cmp	r7, #0
   128c0:	movne	r0, r2
   128c4:	str	r0, [r1]
   128c8:	ldrb	r0, [r2]
   128cc:	cmp	r0, #0
   128d0:	addeq	r9, r9, #1
   128d4:	b	128e4 <getc@plt+0x1d98>
   128d8:	sxth	r0, r8
   128dc:	add	r8, r8, #1
   128e0:	str	r4, [ip, r0, lsl #2]
   128e4:	add	r9, r9, #1
   128e8:	sxth	r7, r9
   128ec:	cmp	r5, r7
   128f0:	bgt	127f4 <getc@plt+0x1ca8>
   128f4:	b	12930 <getc@plt+0x1de4>
   128f8:	ldr	r0, [r3, #8]
   128fc:	cmp	r0, #0
   12900:	beq	12944 <getc@plt+0x1df8>
   12904:	ldrb	r1, [r4, #2]
   12908:	cmp	r1, #0
   1290c:	bne	12944 <getc@plt+0x1df8>
   12910:	ldrb	r1, [r0]
   12914:	cmp	r1, #0
   12918:	bne	1295c <getc@plt+0x1e10>
   1291c:	mov	r1, #1
   12920:	strb	r1, [r0]
   12924:	ldr	r0, [sp, #4]
   12928:	ldr	r5, [r0]
   1292c:	b	128e4 <getc@plt+0x1d98>
   12930:	ldr	r1, [sp, #4]
   12934:	sxth	r0, r8
   12938:	str	r0, [r1]
   1293c:	sub	sp, fp, #28
   12940:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12944:	ldr	r0, [pc, #52]	; 12980 <getc@plt+0x1e34>
   12948:	mov	r1, r4
   1294c:	add	r0, pc, r0
   12950:	bl	12a18 <error@@Base+0x50>
   12954:	ldr	r0, [sp]
   12958:	bl	12af4 <error@@Base+0x12c>
   1295c:	ldr	r0, [pc, #24]	; 1297c <getc@plt+0x1e30>
   12960:	mov	r1, r4
   12964:	add	r0, pc, r0
   12968:	bl	12a18 <error@@Base+0x50>
   1296c:	andeq	r2, r1, r8, lsl #18
   12970:	andeq	r0, r0, r8, lsl r3
   12974:			; <UNDEFINED> instruction: 0x000128b8
   12978:	muleq	r0, r9, r5
   1297c:	andeq	r1, r0, sp, ror r4
   12980:	andeq	r1, r0, r6, lsl #9
   12984:	push	{fp, lr}
   12988:	mov	fp, sp
   1298c:	mov	r0, #0
   12990:	bl	12994 <getc@plt+0x1e48>
   12994:	push	{fp, lr}
   12998:	mov	fp, sp
   1299c:	mov	r4, r0
   129a0:	ldr	r0, [pc, #28]	; 129c4 <getc@plt+0x1e78>
   129a4:	ldr	r0, [pc, r0]
   129a8:	ldr	r0, [r0]
   129ac:	cmp	r0, #0
   129b0:	beq	129b8 <getc@plt+0x1e6c>
   129b4:	blx	r0
   129b8:	bl	12b54 <error@@Base+0x18c>
   129bc:	mov	r0, r4
   129c0:	bl	10ac8 <exit@plt>
   129c4:	strdeq	r2, [r1], -r4

000129c8 <error@@Base>:
   129c8:	push	{fp, lr}
   129cc:	mov	fp, sp
   129d0:	mov	r3, r0
   129d4:	ldr	r0, [pc, #44]	; 12a08 <error@@Base+0x40>
   129d8:	ldr	r0, [pc, r0]
   129dc:	ldr	r2, [r0]
   129e0:	ldr	r0, [pc, #36]	; 12a0c <error@@Base+0x44>
   129e4:	ldr	r0, [pc, r0]
   129e8:	ldr	r0, [r0]
   129ec:	ldr	r1, [pc, #28]	; 12a10 <error@@Base+0x48>
   129f0:	add	r1, pc, r1
   129f4:	bl	10aec <fprintf@plt>
   129f8:	ldr	r0, [pc, #20]	; 12a14 <error@@Base+0x4c>
   129fc:	ldr	r0, [pc, r0]
   12a00:	ldr	r0, [r0]
   12a04:	bl	12994 <getc@plt+0x1e48>
   12a08:			; <UNDEFINED> instruction: 0x000126bc
   12a0c:	andeq	r2, r1, r8, lsr #13
   12a10:	muleq	r0, fp, r3
   12a14:			; <UNDEFINED> instruction: 0x000126b0
   12a18:	push	{fp, lr}
   12a1c:	mov	fp, sp
   12a20:	sub	sp, sp, #8
   12a24:	mov	r3, r0
   12a28:	ldr	r0, [pc, #48]	; 12a60 <error@@Base+0x98>
   12a2c:	ldr	r0, [pc, r0]
   12a30:	ldr	r2, [r0]
   12a34:	ldr	r0, [pc, #40]	; 12a64 <error@@Base+0x9c>
   12a38:	ldr	r0, [pc, r0]
   12a3c:	str	r1, [sp]
   12a40:	ldr	r0, [r0]
   12a44:	ldr	r1, [pc, #28]	; 12a68 <error@@Base+0xa0>
   12a48:	add	r1, pc, r1
   12a4c:	bl	10aec <fprintf@plt>
   12a50:	ldr	r0, [pc, #20]	; 12a6c <error@@Base+0xa4>
   12a54:	ldr	r0, [pc, r0]
   12a58:	ldr	r0, [r0]
   12a5c:	bl	12994 <getc@plt+0x1e48>
   12a60:	andeq	r2, r1, r8, ror #12
   12a64:	andeq	r2, r1, r4, asr r6
   12a68:	andeq	r1, r0, fp, asr #6
   12a6c:	andeq	r2, r1, r8, asr r6
   12a70:	push	{fp, lr}
   12a74:	mov	fp, sp
   12a78:	sub	sp, sp, #8
   12a7c:	mov	r3, r0
   12a80:	ldr	r0, [pc, #40]	; 12ab0 <error@@Base+0xe8>
   12a84:	ldr	r0, [pc, r0]
   12a88:	ldr	r2, [r0]
   12a8c:	ldr	r0, [pc, #32]	; 12ab4 <error@@Base+0xec>
   12a90:	ldr	r0, [pc, r0]
   12a94:	str	r1, [sp]
   12a98:	ldr	r0, [r0]
   12a9c:	ldr	r1, [pc, #20]	; 12ab8 <error@@Base+0xf0>
   12aa0:	add	r1, pc, r1
   12aa4:	bl	10aec <fprintf@plt>
   12aa8:	mov	sp, fp
   12aac:	pop	{fp, pc}
   12ab0:	andeq	r2, r1, r0, lsl r6
   12ab4:	strdeq	r2, [r1], -ip
   12ab8:	strdeq	r1, [r0], -r3
   12abc:	ldr	r0, [pc, #40]	; 12aec <error@@Base+0x124>
   12ac0:	add	r0, pc, r0
   12ac4:	ldrb	r1, [r0]
   12ac8:	cmp	r1, #1
   12acc:	bxeq	lr
   12ad0:	push	{fp, lr}
   12ad4:	mov	fp, sp
   12ad8:	mov	r1, #1
   12adc:	strb	r1, [r0]
   12ae0:	ldr	r0, [pc, #8]	; 12af0 <error@@Base+0x128>
   12ae4:	add	r0, pc, r0
   12ae8:	bl	129c8 <error@@Base>
   12aec:	andseq	r2, r2, r6, ror sl
   12af0:	andeq	r1, r0, sl, asr #5
   12af4:	push	{fp, lr}
   12af8:	mov	fp, sp
   12afc:	mov	r3, r0
   12b00:	ldr	r0, [pc, #60]	; 12b44 <error@@Base+0x17c>
   12b04:	ldr	r0, [pc, r0]
   12b08:	ldr	r0, [r0]
   12b0c:	cmp	r0, #0
   12b10:	bne	12b3c <error@@Base+0x174>
   12b14:	ldr	r0, [pc, #44]	; 12b48 <error@@Base+0x180>
   12b18:	ldr	r0, [pc, r0]
   12b1c:	ldr	r2, [r0]
   12b20:	ldr	r0, [pc, #36]	; 12b4c <error@@Base+0x184>
   12b24:	ldr	r0, [pc, r0]
   12b28:	ldr	r0, [r0]
   12b2c:	ldr	r1, [pc, #28]	; 12b50 <error@@Base+0x188>
   12b30:	add	r1, pc, r1
   12b34:	bl	10aec <fprintf@plt>
   12b38:	bl	12984 <getc@plt+0x1e38>
   12b3c:	blx	r0
   12b40:	bl	12984 <getc@plt+0x1e38>
   12b44:	andeq	r2, r1, r4, lsl #11
   12b48:	andeq	r2, r1, ip, ror r5
   12b4c:	andeq	r2, r1, r8, ror #10
   12b50:	muleq	r0, r3, r2
   12b54:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12b58:	add	fp, sp, #24
   12b5c:	sub	sp, sp, #104	; 0x68
   12b60:	ldr	r8, [pc, #124]	; 12be4 <error@@Base+0x21c>
   12b64:	add	r8, pc, r8
   12b68:	ldrsh	r0, [r8]
   12b6c:	cmp	r0, #1
   12b70:	blt	12bdc <error@@Base+0x214>
   12b74:	ldr	r9, [pc, #108]	; 12be8 <error@@Base+0x220>
   12b78:	mov	r7, #1
   12b7c:	add	r4, sp, #4
   12b80:	ldr	r9, [pc, r9]
   12b84:	ldr	r5, [pc, #96]	; 12bec <error@@Base+0x224>
   12b88:	add	r5, pc, r5
   12b8c:	ldr	r6, [r9]
   12b90:	bl	10abc <getpid@plt>
   12b94:	mov	r3, r0
   12b98:	sxth	r0, r7
   12b9c:	mov	r1, r5
   12ba0:	mov	r2, r6
   12ba4:	str	r0, [sp]
   12ba8:	mov	r0, r4
   12bac:	bl	10b10 <sprintf@plt>
   12bb0:	mov	r0, r4
   12bb4:	bl	10a38 <strdup@plt>
   12bb8:	mov	r6, r0
   12bbc:	bl	10a50 <unlink@plt>
   12bc0:	mov	r0, r6
   12bc4:	bl	10a08 <free@plt>
   12bc8:	add	r0, r7, #1
   12bcc:	sxth	r7, r0
   12bd0:	ldrsh	r0, [r8]
   12bd4:	cmp	r7, r0
   12bd8:	ble	12b8c <error@@Base+0x1c4>
   12bdc:	sub	sp, fp, #24
   12be0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12be4:			; <UNDEFINED> instruction: 0x001229d0
   12be8:	andeq	r2, r1, r4, lsl r5
   12bec:	andeq	r1, r0, r8, lsl r2
   12bf0:	push	{r4, r5, r6, sl, fp, lr}
   12bf4:	add	fp, sp, #16
   12bf8:	mov	r5, r1
   12bfc:	mov	r6, r0
   12c00:	mov	r0, #1
   12c04:	mov	r1, #16
   12c08:	mov	r4, r2
   12c0c:	bl	12508 <getc@plt+0x19bc>
   12c10:	strb	r5, [r0, #8]
   12c14:	mov	r1, r0
   12c18:	str	r4, [r0, #12]
   12c1c:	mov	r0, r6
   12c20:	pop	{r4, r5, r6, sl, fp, lr}
   12c24:	b	132d8 <error@@Base+0x910>
   12c28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c2c:	add	fp, sp, #28
   12c30:	sub	sp, sp, #124	; 0x7c
   12c34:	mov	r4, r2
   12c38:	mov	r2, r1
   12c3c:	cmp	r1, #0
   12c40:	str	r0, [sp, #16]
   12c44:	bne	12c54 <error@@Base+0x28c>
   12c48:	ldrb	r0, [r4]
   12c4c:	cmp	r0, #0
   12c50:	bne	12f80 <error@@Base+0x5b8>
   12c54:	ldr	r0, [sp, #16]
   12c58:	ldr	r0, [r0, #4]
   12c5c:	str	r0, [sp, #4]
   12c60:	mov	r0, r2
   12c64:	ldr	r1, [pc, #808]	; 12f94 <error@@Base+0x5cc>
   12c68:	add	r1, pc, r1
   12c6c:	bl	125a8 <getc@plt+0x1a5c>
   12c70:	mov	r6, r0
   12c74:	ldrb	r0, [r4]
   12c78:	cmp	r0, #0
   12c7c:	beq	12cc4 <error@@Base+0x2fc>
   12c80:	add	r0, sp, #20
   12c84:	mov	r1, #99	; 0x63
   12c88:	mov	r2, r6
   12c8c:	bl	10a20 <fgets@plt>
   12c90:	cmp	r0, #0
   12c94:	beq	12cb4 <error@@Base+0x2ec>
   12c98:	ldr	r1, [pc, #760]	; 12f98 <error@@Base+0x5d0>
   12c9c:	add	r0, sp, #20
   12ca0:	mov	r2, #51	; 0x33
   12ca4:	add	r1, pc, r1
   12ca8:	bl	10b34 <strncmp@plt>
   12cac:	cmp	r0, #0
   12cb0:	beq	12f10 <error@@Base+0x548>
   12cb4:	mov	r0, r6
   12cb8:	bl	10a44 <rewind@plt>
   12cbc:	mov	r5, #0
   12cc0:	strb	r5, [r4, #11]
   12cc4:	ldr	r9, [r4, #4]
   12cc8:	ldrb	r8, [r4, #1]
   12ccc:	mov	r0, r6
   12cd0:	str	r4, [sp, #8]
   12cd4:	cmp	r9, #0
   12cd8:	movweq	r9, #94	; 0x5e
   12cdc:	bl	10b4c <getc@plt>
   12ce0:	cmn	r0, #1
   12ce4:	beq	12da8 <error@@Base+0x3e0>
   12ce8:	add	r1, sp, #20
   12cec:	mov	sl, #0
   12cf0:	sub	r4, fp, #32
   12cf4:	add	r1, r1, #1
   12cf8:	str	r1, [sp, #12]
   12cfc:	ldr	r1, [pc, #668]	; 12fa0 <error@@Base+0x5d8>
   12d00:	ldr	r1, [pc, r1]
   12d04:	add	r1, r1, r0
   12d08:	ldrsb	r5, [r1]
   12d0c:	cmp	r5, #0
   12d10:	ble	12f60 <error@@Base+0x598>
   12d14:	cmp	r5, #1
   12d18:	strb	r0, [sp, #20]
   12d1c:	beq	12d40 <error@@Base+0x378>
   12d20:	ldr	r0, [sp, #12]
   12d24:	sub	r7, r5, #1
   12d28:	mov	r1, #1
   12d2c:	mov	r3, r6
   12d30:	mov	r2, r7
   12d34:	bl	10a80 <fread@plt>
   12d38:	cmp	r0, r7
   12d3c:	bne	12f74 <error@@Base+0x5ac>
   12d40:	add	r0, sp, #20
   12d44:	mov	r1, #4
   12d48:	mov	r2, r4
   12d4c:	bl	10a8c <utf8proc_iterate@plt>
   12d50:	cmp	r0, r5
   12d54:	bne	12f6c <error@@Base+0x5a4>
   12d58:	ldr	r5, [fp, #-32]	; 0xffffffe0
   12d5c:	cmp	r8, #0
   12d60:	beq	12d70 <error@@Base+0x3a8>
   12d64:	mov	r7, #1
   12d68:	cmp	r5, r9
   12d6c:	beq	12d94 <error@@Base+0x3cc>
   12d70:	mov	r0, #1
   12d74:	mov	r1, #16
   12d78:	bl	12508 <getc@plt+0x19bc>
   12d7c:	strb	sl, [r0, #8]
   12d80:	mov	r1, r0
   12d84:	str	r5, [r0, #12]
   12d88:	ldr	r0, [sp, #16]
   12d8c:	bl	132d8 <error@@Base+0x910>
   12d90:	mov	r7, #0
   12d94:	mov	r0, r6
   12d98:	bl	10b4c <getc@plt>
   12d9c:	cmn	r0, #1
   12da0:	mov	sl, r7
   12da4:	bne	12cfc <error@@Base+0x334>
   12da8:	mov	r0, r6
   12dac:	bl	12630 <getc@plt+0x1ae4>
   12db0:	ldr	r8, [sp, #8]
   12db4:	ldr	r9, [sp, #4]
   12db8:	ldrb	r0, [r8, #9]
   12dbc:	cmp	r0, #0
   12dc0:	beq	12ecc <error@@Base+0x504>
   12dc4:	ldr	r0, [sp, #16]
   12dc8:	cmp	r9, #0
   12dcc:	addne	r0, r9, #4
   12dd0:	ldr	r6, [r0]
   12dd4:	cmp	r6, #0
   12dd8:	beq	12ecc <error@@Base+0x504>
   12ddc:	mov	r5, #32
   12de0:	mov	r7, r6
   12de4:	ldr	r4, [r7, #12]
   12de8:	mov	r0, r4
   12dec:	bl	10a14 <utf8proc_get_property@plt>
   12df0:	cmp	r4, #10
   12df4:	ble	12e10 <error@@Base+0x448>
   12df8:	sub	r1, r4, #11
   12dfc:	cmp	r1, #3
   12e00:	bcc	12e34 <error@@Base+0x46c>
   12e04:	cmp	r4, #160	; 0xa0
   12e08:	beq	12e34 <error@@Base+0x46c>
   12e0c:	b	12e20 <error@@Base+0x458>
   12e10:	cmp	r4, #9
   12e14:	beq	12e34 <error@@Base+0x46c>
   12e18:	cmp	r4, #10
   12e1c:	beq	12e38 <error@@Base+0x470>
   12e20:	ldrsh	r0, [r0]
   12e24:	sub	r0, r0, #23
   12e28:	cmp	r0, #2
   12e2c:	strls	r5, [r7, #12]
   12e30:	b	12e38 <error@@Base+0x470>
   12e34:	str	r5, [r7, #12]
   12e38:	ldr	r7, [r7, #4]
   12e3c:	cmp	r7, #0
   12e40:	bne	12de4 <error@@Base+0x41c>
   12e44:	mov	r4, #0
   12e48:	ldr	r1, [r6, #12]
   12e4c:	ldr	r5, [r6, #4]
   12e50:	cmp	r1, #32
   12e54:	bne	12e90 <error@@Base+0x4c8>
   12e58:	tst	r4, #255	; 0xff
   12e5c:	beq	12eac <error@@Base+0x4e4>
   12e60:	cmp	r5, #0
   12e64:	ldrne	r1, [r5, #12]
   12e68:	cmpne	r1, #10
   12e6c:	beq	12eac <error@@Base+0x4e4>
   12e70:	mov	r0, #1
   12e74:	cmp	r1, #32
   12e78:	bne	12ea4 <error@@Base+0x4dc>
   12e7c:	ldrb	r0, [r6, #8]
   12e80:	ldrb	r1, [r5, #8]
   12e84:	orr	r0, r1, r0
   12e88:	strb	r0, [r5, #8]
   12e8c:	b	12eac <error@@Base+0x4e4>
   12e90:	subs	r0, r1, #10
   12e94:	movwne	r0, #1
   12e98:	tst	r4, #255	; 0xff
   12e9c:	cmpeq	r1, #10
   12ea0:	beq	12eac <error@@Base+0x4e4>
   12ea4:	mov	r4, r0
   12ea8:	b	12ec0 <error@@Base+0x4f8>
   12eac:	ldr	r0, [sp, #16]
   12eb0:	mov	r1, r6
   12eb4:	bl	133d0 <error@@Base+0xa08>
   12eb8:	mov	r0, r6
   12ebc:	bl	10a08 <free@plt>
   12ec0:	cmp	r5, #0
   12ec4:	mov	r6, r5
   12ec8:	bne	12e48 <error@@Base+0x480>
   12ecc:	ldrb	r0, [r8, #10]
   12ed0:	cmp	r0, #0
   12ed4:	beq	12f08 <error@@Base+0x540>
   12ed8:	ldr	r0, [sp, #16]
   12edc:	cmp	r9, #0
   12ee0:	addne	r0, r9, #4
   12ee4:	ldr	r4, [r0]
   12ee8:	cmp	r4, #0
   12eec:	beq	12f08 <error@@Base+0x540>
   12ef0:	ldr	r0, [r4, #12]
   12ef4:	bl	10a5c <utf8proc_tolower@plt>
   12ef8:	str	r0, [r4, #12]
   12efc:	ldr	r4, [r4, #4]
   12f00:	cmp	r4, #0
   12f04:	bne	12ef0 <error@@Base+0x528>
   12f08:	sub	sp, fp, #28
   12f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12f10:	ldr	r8, [pc, #132]	; 12f9c <error@@Base+0x5d4>
   12f14:	mov	r7, #0
   12f18:	add	r9, sp, #20
   12f1c:	mov	r5, #1
   12f20:	add	r8, pc, r8
   12f24:	mov	r0, r9
   12f28:	mov	r1, #99	; 0x63
   12f2c:	mov	r2, r6
   12f30:	bl	10a20 <fgets@plt>
   12f34:	cmp	r0, #0
   12f38:	beq	12cc0 <error@@Base+0x2f8>
   12f3c:	mov	r0, r9
   12f40:	mov	r1, r8
   12f44:	bl	109f0 <strcmp@plt>
   12f48:	cmp	r0, #0
   12f4c:	addeq	r7, r7, #1
   12f50:	sxth	r7, r7
   12f54:	cmp	r7, #2
   12f58:	blt	12f24 <error@@Base+0x55c>
   12f5c:	b	12cc0 <error@@Base+0x2f8>
   12f60:	ldr	r0, [pc, #68]	; 12fac <error@@Base+0x5e4>
   12f64:	add	r0, pc, r0
   12f68:	bl	129c8 <error@@Base>
   12f6c:	bl	10b1c <utf8proc_errmsg@plt>
   12f70:	bl	129c8 <error@@Base>
   12f74:	ldr	r0, [pc, #52]	; 12fb0 <error@@Base+0x5e8>
   12f78:	add	r0, pc, r0
   12f7c:	bl	129c8 <error@@Base>
   12f80:	ldr	r0, [pc, #28]	; 12fa4 <error@@Base+0x5dc>
   12f84:	ldr	r1, [pc, #28]	; 12fa8 <error@@Base+0x5e0>
   12f88:	add	r0, pc, r0
   12f8c:	add	r1, pc, r1
   12f90:	bl	12a18 <error@@Base+0x50>
   12f94:	andeq	r1, r0, r4, asr r2
   12f98:	muleq	r0, r2, r1
   12f9c:	andeq	r0, r0, lr, asr #30
   12fa0:	muleq	r1, ip, r3
   12fa4:	andeq	r0, r0, sl, ror #28
   12fa8:	andeq	r0, r0, r6, ror lr
   12fac:	andeq	r0, r0, r2, asr #30
   12fb0:	andeq	r0, r0, r6, asr #30
   12fb4:	push	{fp, lr}
   12fb8:	mov	fp, sp
   12fbc:	bl	10a2c <utf8proc_encode_char@plt>
   12fc0:	cmp	r0, #0
   12fc4:	sxtbgt	r0, r0
   12fc8:	popgt	{fp, pc}
   12fcc:	ldr	r0, [pc, #4]	; 12fd8 <error@@Base+0x610>
   12fd0:	add	r0, pc, r0
   12fd4:	bl	129c8 <error@@Base>
   12fd8:	andeq	r0, r0, ip, lsr lr
   12fdc:	push	{r4, r5, r6, r7, fp, lr}
   12fe0:	add	fp, sp, #16
   12fe4:	mov	r6, r3
   12fe8:	mov	r4, r2
   12fec:	mov	r5, r1
   12ff0:	tst	r0, #255	; 0xff
   12ff4:	beq	1303c <error@@Base+0x674>
   12ff8:	mov	r0, #94	; 0x5e
   12ffc:	mov	r1, r4
   13000:	bl	10a2c <utf8proc_encode_char@plt>
   13004:	cmp	r0, #0
   13008:	ble	130b4 <error@@Base+0x6ec>
   1300c:	sxtb	r7, r0
   13010:	cmp	r5, #10
   13014:	bne	13048 <error@@Base+0x680>
   13018:	ldr	r0, [pc, #224]	; 13100 <error@@Base+0x738>
   1301c:	ldr	r1, [pc, #224]	; 13104 <error@@Base+0x73c>
   13020:	tst	r6, #255	; 0xff
   13024:	add	r0, pc, r0
   13028:	add	r1, pc, r1
   1302c:	moveq	r1, r0
   13030:	add	r0, r4, r7
   13034:	pop	{r4, r5, r6, r7, fp, lr}
   13038:	b	10b10 <sprintf@plt>
   1303c:	mov	r7, #0
   13040:	cmp	r5, #10
   13044:	beq	13018 <error@@Base+0x650>
   13048:	mov	r0, r5
   1304c:	bl	10a14 <utf8proc_get_property@plt>
   13050:	cmp	r5, #32
   13054:	beq	13068 <error@@Base+0x6a0>
   13058:	ldrsh	r0, [r0]
   1305c:	sub	r1, r0, #1
   13060:	cmp	r1, #22
   13064:	bcs	130c0 <error@@Base+0x6f8>
   13068:	mov	r0, r5
   1306c:	bl	10ad4 <utf8proc_category@plt>
   13070:	sub	r0, r0, #6
   13074:	cmp	r0, #2
   13078:	bhi	13094 <error@@Base+0x6cc>
   1307c:	add	r1, r4, r7
   13080:	movw	r0, #9676	; 0x25cc
   13084:	bl	10a2c <utf8proc_encode_char@plt>
   13088:	cmp	r0, #0
   1308c:	ble	130b4 <error@@Base+0x6ec>
   13090:	sxtab	r7, r7, r0
   13094:	add	r1, r4, r7
   13098:	mov	r0, r5
   1309c:	bl	10a2c <utf8proc_encode_char@plt>
   130a0:	cmp	r0, #0
   130a4:	sxtabgt	r0, r7, r0
   130a8:	movgt	r1, #0
   130ac:	strbgt	r1, [r4, r0]
   130b0:	popgt	{r4, r5, r6, r7, fp, pc}
   130b4:	ldr	r0, [pc, #64]	; 130fc <error@@Base+0x734>
   130b8:	add	r0, pc, r0
   130bc:	bl	129c8 <error@@Base>
   130c0:	cmp	r0, #29
   130c4:	beq	13068 <error@@Base+0x6a0>
   130c8:	add	r0, r4, r7
   130cc:	cmp	r5, #255	; 0xff
   130d0:	bhi	130e0 <error@@Base+0x718>
   130d4:	ldr	r1, [pc, #24]	; 130f4 <error@@Base+0x72c>
   130d8:	add	r1, pc, r1
   130dc:	b	130e8 <error@@Base+0x720>
   130e0:	ldr	r1, [pc, #16]	; 130f8 <error@@Base+0x730>
   130e4:	add	r1, pc, r1
   130e8:	mov	r2, r5
   130ec:	pop	{r4, r5, r6, r7, fp, lr}
   130f0:	b	10b10 <sprintf@plt>
   130f4:	andeq	r0, r0, r0, asr sp
   130f8:	andeq	r0, r0, fp, asr #26
   130fc:	andeq	r0, r0, r4, asr sp
   13100:	andeq	r0, r0, lr, ror #11
   13104:	strdeq	r0, [r0], -fp
   13108:	push	{r4, r5, r6, r7, fp, lr}
   1310c:	add	fp, sp, #16
   13110:	sub	sp, sp, #16
   13114:	mov	r6, r2
   13118:	mov	r2, r1
   1311c:	ldr	r1, [pc, #180]	; 131d8 <error@@Base+0x810>
   13120:	mov	r5, r0
   13124:	mov	r0, r2
   13128:	add	r1, pc, r1
   1312c:	bl	125a8 <getc@plt+0x1a5c>
   13130:	mov	r4, r0
   13134:	cmp	r6, #0
   13138:	beq	1318c <error@@Base+0x7c4>
   1313c:	ldr	r0, [pc, #152]	; 131dc <error@@Base+0x814>
   13140:	mov	r1, #55	; 0x37
   13144:	mov	r2, #1
   13148:	mov	r3, r4
   1314c:	add	r0, pc, r0
   13150:	bl	10a74 <fwrite@plt>
   13154:	ldr	r7, [pc, #132]	; 131e0 <error@@Base+0x818>
   13158:	mov	r1, #55	; 0x37
   1315c:	mov	r2, #1
   13160:	mov	r3, r4
   13164:	add	r7, pc, r7
   13168:	mov	r0, r7
   1316c:	bl	10a74 <fwrite@plt>
   13170:	mov	r0, r4
   13174:	blx	r6
   13178:	mov	r0, r7
   1317c:	mov	r1, #55	; 0x37
   13180:	mov	r2, #1
   13184:	mov	r3, r4
   13188:	bl	10a74 <fwrite@plt>
   1318c:	ldr	r6, [r5]
   13190:	cmp	r6, #0
   13194:	beq	131c8 <error@@Base+0x800>
   13198:	add	r5, sp, #7
   1319c:	ldr	r1, [r6, #12]
   131a0:	ldrb	r0, [r6, #8]
   131a4:	mov	r2, r5
   131a8:	mov	r3, #0
   131ac:	bl	12fdc <error@@Base+0x614>
   131b0:	mov	r0, r5
   131b4:	mov	r1, r4
   131b8:	bl	10b28 <fputs@plt>
   131bc:	ldr	r6, [r6, #4]
   131c0:	cmp	r6, #0
   131c4:	bne	1319c <error@@Base+0x7d4>
   131c8:	mov	r0, r4
   131cc:	bl	12630 <getc@plt+0x1ae4>
   131d0:	sub	sp, fp, #16
   131d4:	pop	{r4, r5, r6, r7, fp, pc}
   131d8:	andeq	r0, r0, r9, lsr #16
   131dc:	andeq	r0, r0, sl, ror #25
   131e0:	andeq	r0, r0, sl, lsl #26
   131e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   131e8:	add	fp, sp, #28
   131ec:	sub	sp, sp, #4
   131f0:	mov	r9, #0
   131f4:	mov	sl, r0
   131f8:	str	r9, [sp]
   131fc:	ldrb	r0, [r1]
   13200:	cmp	r0, #0
   13204:	beq	13264 <error@@Base+0x89c>
   13208:	mov	r4, r1
   1320c:	mov	r8, sp
   13210:	mov	r7, #1
   13214:	mov	r0, r4
   13218:	mvn	r1, #0
   1321c:	mov	r2, r8
   13220:	bl	10a8c <utf8proc_iterate@plt>
   13224:	cmp	r0, #1
   13228:	blt	1326c <error@@Base+0x8a4>
   1322c:	ldr	r5, [sp]
   13230:	mov	r6, r0
   13234:	mov	r0, #1
   13238:	mov	r1, #16
   1323c:	bl	12508 <getc@plt+0x19bc>
   13240:	strb	r9, [r0, #8]
   13244:	mov	r1, r0
   13248:	str	r5, [r0, #12]
   1324c:	mov	r0, sl
   13250:	bl	132d8 <error@@Base+0x910>
   13254:	ldrb	r0, [r4, r6]!
   13258:	cmp	r0, #0
   1325c:	bne	13214 <error@@Base+0x84c>
   13260:	b	13270 <error@@Base+0x8a8>
   13264:	mov	r7, #1
   13268:	b	13270 <error@@Base+0x8a8>
   1326c:	mov	r7, #0
   13270:	mov	r0, r7
   13274:	sub	sp, fp, #28
   13278:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1327c:	vmov.i32	q8, #0	; 0x00000000
   13280:	vst1.32	{d16-d17}, [r0]
   13284:	bx	lr
   13288:	push	{r4, r5, fp, lr}
   1328c:	add	fp, sp, #8
   13290:	mov	r4, r0
   13294:	ldr	r0, [r0]
   13298:	mov	r5, #0
   1329c:	str	r5, [r1]
   132a0:	cmp	r0, #0
   132a4:	str	r0, [r1, #4]
   132a8:	str	r1, [r4]
   132ac:	addeq	r0, r4, #4
   132b0:	str	r1, [r0]
   132b4:	ldr	r0, [r4, #8]
   132b8:	cmp	r0, #0
   132bc:	beq	132c8 <error@@Base+0x900>
   132c0:	bl	10a08 <free@plt>
   132c4:	str	r5, [r4, #8]
   132c8:	ldr	r0, [r4, #12]
   132cc:	add	r0, r0, #1
   132d0:	str	r0, [r4, #12]
   132d4:	pop	{r4, r5, fp, pc}
   132d8:	push	{r4, r5, fp, lr}
   132dc:	add	fp, sp, #8
   132e0:	mov	r4, r0
   132e4:	ldr	r0, [r0, #4]
   132e8:	mov	r5, #0
   132ec:	mov	r2, r4
   132f0:	cmp	r0, #0
   132f4:	stm	r1, {r0, r5}
   132f8:	addne	r2, r0, #4
   132fc:	str	r1, [r2]
   13300:	str	r1, [r4, #4]
   13304:	ldr	r0, [r4, #8]
   13308:	cmp	r0, #0
   1330c:	beq	13318 <error@@Base+0x950>
   13310:	bl	10a08 <free@plt>
   13314:	str	r5, [r4, #8]
   13318:	ldr	r0, [r4, #12]
   1331c:	add	r0, r0, #1
   13320:	str	r0, [r4, #12]
   13324:	pop	{r4, r5, fp, pc}
   13328:	push	{r4, sl, fp, lr}
   1332c:	add	fp, sp, #8
   13330:	mov	r4, r0
   13334:	ldr	r0, [r2]
   13338:	mov	r3, r4
   1333c:	cmp	r0, #0
   13340:	stm	r1, {r0, r2}
   13344:	addne	r3, r0, #4
   13348:	str	r1, [r3]
   1334c:	str	r1, [r2]
   13350:	ldr	r0, [r4, #8]
   13354:	cmp	r0, #0
   13358:	beq	13368 <error@@Base+0x9a0>
   1335c:	bl	10a08 <free@plt>
   13360:	mov	r0, #0
   13364:	str	r0, [r4, #8]
   13368:	ldr	r0, [r4, #12]
   1336c:	add	r0, r0, #1
   13370:	str	r0, [r4, #12]
   13374:	pop	{r4, sl, fp, pc}
   13378:	push	{r4, sl, fp, lr}
   1337c:	add	fp, sp, #8
   13380:	mov	r4, r0
   13384:	mov	r0, r1
   13388:	cmp	r1, #0
   1338c:	ldr	r3, [r0, #4]!
   13390:	moveq	r0, r4
   13394:	cmp	r3, #0
   13398:	stm	r2, {r1, r3}
   1339c:	addeq	r3, r4, #4
   133a0:	str	r2, [r0]
   133a4:	str	r2, [r3]
   133a8:	ldr	r0, [r4, #8]
   133ac:	cmp	r0, #0
   133b0:	beq	133c0 <error@@Base+0x9f8>
   133b4:	bl	10a08 <free@plt>
   133b8:	mov	r0, #0
   133bc:	str	r0, [r4, #8]
   133c0:	ldr	r0, [r4, #12]
   133c4:	add	r0, r0, #1
   133c8:	str	r0, [r4, #12]
   133cc:	pop	{r4, sl, fp, pc}
   133d0:	push	{r4, r5, fp, lr}
   133d4:	add	fp, sp, #8
   133d8:	mov	r4, r0
   133dc:	ldm	r1, {r0, r2}
   133e0:	mov	r5, #0
   133e4:	cmp	r0, #0
   133e8:	streq	r2, [r4]
   133ec:	strne	r2, [r0, #4]
   133f0:	ldrne	r2, [r1, #4]
   133f4:	cmp	r2, #0
   133f8:	addeq	r2, r4, #4
   133fc:	str	r0, [r2]
   13400:	str	r5, [r1]
   13404:	str	r5, [r1, #4]
   13408:	ldr	r0, [r4, #8]
   1340c:	cmp	r0, #0
   13410:	beq	1341c <error@@Base+0xa54>
   13414:	bl	10a08 <free@plt>
   13418:	str	r5, [r4, #8]
   1341c:	ldr	r0, [r4, #12]
   13420:	sub	r0, r0, #1
   13424:	str	r0, [r4, #12]
   13428:	pop	{r4, r5, fp, pc}
   1342c:	push	{r4, sl, fp, lr}
   13430:	add	fp, sp, #8
   13434:	mov	r4, r0
   13438:	ldr	r0, [r0, #8]
   1343c:	cmp	r0, #0
   13440:	beq	13448 <error@@Base+0xa80>
   13444:	pop	{r4, sl, fp, pc}
   13448:	ldr	r0, [r4, #12]
   1344c:	cmp	r0, #0
   13450:	beq	13444 <error@@Base+0xa7c>
   13454:	mov	r1, #4
   13458:	bl	12508 <getc@plt+0x19bc>
   1345c:	str	r0, [r4, #8]
   13460:	ldr	r1, [r4]
   13464:	cmp	r1, #0
   13468:	beq	13444 <error@@Base+0xa7c>
   1346c:	str	r1, [r0]
   13470:	ldr	r0, [r1, #4]
   13474:	cmp	r0, #0
   13478:	popeq	{r4, sl, fp, pc}
   1347c:	mov	r1, #4
   13480:	ldr	r2, [r4, #8]
   13484:	str	r0, [r2, r1]
   13488:	add	r1, r1, #4
   1348c:	ldr	r0, [r0, #4]
   13490:	cmp	r0, #0
   13494:	bne	13480 <error@@Base+0xab8>
   13498:	b	13444 <error@@Base+0xa7c>
   1349c:	push	{r4, r5, r6, r7, fp, lr}
   134a0:	add	fp, sp, #16
   134a4:	ldr	r6, [r0]
   134a8:	cmp	r6, #0
   134ac:	popeq	{r4, r5, r6, r7, fp, pc}
   134b0:	mov	r4, r1
   134b4:	mov	r5, r0
   134b8:	mov	r7, #0
   134bc:	ldm	r6, {r0, r1}
   134c0:	cmp	r0, #0
   134c4:	streq	r1, [r5]
   134c8:	strne	r1, [r0, #4]
   134cc:	ldrne	r1, [r6, #4]
   134d0:	cmp	r1, #0
   134d4:	addeq	r1, r5, #4
   134d8:	str	r0, [r1]
   134dc:	str	r7, [r6]
   134e0:	str	r7, [r6, #4]
   134e4:	ldr	r0, [r5, #8]
   134e8:	cmp	r0, #0
   134ec:	beq	134f8 <error@@Base+0xb30>
   134f0:	bl	10a08 <free@plt>
   134f4:	str	r7, [r5, #8]
   134f8:	ldr	r0, [r5, #12]
   134fc:	sub	r0, r0, #1
   13500:	str	r0, [r5, #12]
   13504:	mov	r0, r6
   13508:	blx	r4
   1350c:	ldr	r6, [r5]
   13510:	cmp	r6, #0
   13514:	bne	134bc <error@@Base+0xaf4>
   13518:	pop	{r4, r5, r6, r7, fp, pc}
   1351c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13520:	mov	r7, r0
   13524:	ldr	r6, [pc, #72]	; 13574 <error@@Base+0xbac>
   13528:	ldr	r5, [pc, #72]	; 13578 <error@@Base+0xbb0>
   1352c:	add	r6, pc, r6
   13530:	add	r5, pc, r5
   13534:	sub	r6, r6, r5
   13538:	mov	r8, r1
   1353c:	mov	r9, r2
   13540:	bl	109c4 <calloc@plt-0x20>
   13544:	asrs	r6, r6, #2
   13548:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1354c:	mov	r4, #0
   13550:	add	r4, r4, #1
   13554:	ldr	r3, [r5], #4
   13558:	mov	r2, r9
   1355c:	mov	r1, r8
   13560:	mov	r0, r7
   13564:	blx	r3
   13568:	cmp	r6, r4
   1356c:	bne	13550 <error@@Base+0xb88>
   13570:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13574:	andeq	r1, r1, r4, lsl #11
   13578:	andeq	r1, r1, ip, ror r5
   1357c:	bx	lr

Disassembly of section .fini:

00013580 <.fini>:
   13580:	push	{r3, lr}
   13584:	pop	{r3, pc}
