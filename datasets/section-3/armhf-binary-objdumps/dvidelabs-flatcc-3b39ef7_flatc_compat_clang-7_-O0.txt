
../repos/dvidelabs-flatcc-3b39ef7/test/flatc_compat/flatc_compat:     file format elf32-littlearm


Disassembly of section .init:

00010db0 <.init>:
   10db0:	push	{r3, lr}
   10db4:	bl	10ef4 <_start@@Base+0x3c>
   10db8:	pop	{r3, pc}

Disassembly of section .plt:

00010dbc <strcmp@plt-0x14>:
   10dbc:	push	{lr}		; (str lr, [sp, #-4]!)
   10dc0:	ldr	lr, [pc, #4]	; 10dcc <strcmp@plt-0x4>
   10dc4:	add	lr, pc, lr
   10dc8:	ldr	pc, [lr, #8]!
   10dcc:	andeq	r8, r1, r4, lsr r2

00010dd0 <strcmp@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #24, 20	; 0x18000
   10dd8:	ldr	pc, [ip, #564]!	; 0x234

00010ddc <printf@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #24, 20	; 0x18000
   10de4:	ldr	pc, [ip, #556]!	; 0x22c

00010de8 <fopen@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #24, 20	; 0x18000
   10df0:	ldr	pc, [ip, #548]!	; 0x224

00010df4 <free@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #24, 20	; 0x18000
   10dfc:	ldr	pc, [ip, #540]!	; 0x21c

00010e00 <memcpy@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #24, 20	; 0x18000
   10e08:	ldr	pc, [ip, #532]!	; 0x214

00010e0c <ftell@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #24, 20	; 0x18000
   10e14:	ldr	pc, [ip, #524]!	; 0x20c

00010e18 <rewind@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #24, 20	; 0x18000
   10e20:	ldr	pc, [ip, #516]!	; 0x204

00010e24 <fread@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #24, 20	; 0x18000
   10e2c:	ldr	pc, [ip, #508]!	; 0x1fc

00010e30 <malloc@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #24, 20	; 0x18000
   10e38:	ldr	pc, [ip, #500]!	; 0x1f4

00010e3c <__libc_start_main@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #24, 20	; 0x18000
   10e44:	ldr	pc, [ip, #492]!	; 0x1ec

00010e48 <__gmon_start__@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #24, 20	; 0x18000
   10e50:	ldr	pc, [ip, #484]!	; 0x1e4

00010e54 <exit@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #24, 20	; 0x18000
   10e5c:	ldr	pc, [ip, #476]!	; 0x1dc

00010e60 <fprintf@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #24, 20	; 0x18000
   10e68:	ldr	pc, [ip, #468]!	; 0x1d4

00010e6c <posix_memalign@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #24, 20	; 0x18000
   10e74:	ldr	pc, [ip, #460]!	; 0x1cc

00010e78 <strncpy@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #24, 20	; 0x18000
   10e80:	ldr	pc, [ip, #452]!	; 0x1c4

00010e84 <fclose@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #24, 20	; 0x18000
   10e8c:	ldr	pc, [ip, #444]!	; 0x1bc

00010e90 <fseek@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #24, 20	; 0x18000
   10e98:	ldr	pc, [ip, #436]!	; 0x1b4

00010e9c <abort@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #24, 20	; 0x18000
   10ea4:	ldr	pc, [ip, #428]!	; 0x1ac

00010ea8 <__assert_fail@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #24, 20	; 0x18000
   10eb0:	ldr	pc, [ip, #420]!	; 0x1a4

Disassembly of section .text:

00010eb8 <_start@@Base>:
   10eb8:	mov	fp, #0
   10ebc:	mov	lr, #0
   10ec0:	pop	{r1}		; (ldr r1, [sp], #4)
   10ec4:	mov	r2, sp
   10ec8:	push	{r2}		; (str r2, [sp, #-4]!)
   10ecc:	push	{r0}		; (str r0, [sp, #-4]!)
   10ed0:	ldr	ip, [pc, #16]	; 10ee8 <_start@@Base+0x30>
   10ed4:	push	{ip}		; (str ip, [sp, #-4]!)
   10ed8:	ldr	r0, [pc, #12]	; 10eec <_start@@Base+0x34>
   10edc:	ldr	r3, [pc, #12]	; 10ef0 <_start@@Base+0x38>
   10ee0:	bl	10e3c <__libc_start_main@plt>
   10ee4:	bl	10e9c <abort@plt>
   10ee8:	andeq	r7, r1, r0, ror #16
   10eec:	andeq	r2, r1, ip, lsr #28
   10ef0:	andeq	r7, r1, r0, lsl #16
   10ef4:	ldr	r3, [pc, #20]	; 10f10 <_start@@Base+0x58>
   10ef8:	ldr	r2, [pc, #20]	; 10f14 <_start@@Base+0x5c>
   10efc:	add	r3, pc, r3
   10f00:	ldr	r2, [r3, r2]
   10f04:	cmp	r2, #0
   10f08:	bxeq	lr
   10f0c:	b	10e48 <__gmon_start__@plt>
   10f10:	strdeq	r8, [r1], -ip
   10f14:	andeq	r0, r0, ip, asr r0
   10f18:	ldr	r0, [pc, #24]	; 10f38 <_start@@Base+0x80>
   10f1c:	ldr	r3, [pc, #24]	; 10f3c <_start@@Base+0x84>
   10f20:	cmp	r3, r0
   10f24:	bxeq	lr
   10f28:	ldr	r3, [pc, #16]	; 10f40 <_start@@Base+0x88>
   10f2c:	cmp	r3, #0
   10f30:	bxeq	lr
   10f34:	bx	r3
   10f38:	andeq	r9, r2, r0, ror r0
   10f3c:	andeq	r9, r2, r0, ror r0
   10f40:	andeq	r0, r0, r0
   10f44:	ldr	r0, [pc, #36]	; 10f70 <_start@@Base+0xb8>
   10f48:	ldr	r1, [pc, #36]	; 10f74 <_start@@Base+0xbc>
   10f4c:	sub	r1, r1, r0
   10f50:	asr	r1, r1, #2
   10f54:	add	r1, r1, r1, lsr #31
   10f58:	asrs	r1, r1, #1
   10f5c:	bxeq	lr
   10f60:	ldr	r3, [pc, #16]	; 10f78 <_start@@Base+0xc0>
   10f64:	cmp	r3, #0
   10f68:	bxeq	lr
   10f6c:	bx	r3
   10f70:	andeq	r9, r2, r0, ror r0
   10f74:	andeq	r9, r2, r0, ror r0
   10f78:	andeq	r0, r0, r0
   10f7c:	push	{r4, lr}
   10f80:	ldr	r4, [pc, #24]	; 10fa0 <_start@@Base+0xe8>
   10f84:	ldrb	r3, [r4]
   10f88:	cmp	r3, #0
   10f8c:	popne	{r4, pc}
   10f90:	bl	10f18 <_start@@Base+0x60>
   10f94:	mov	r3, #1
   10f98:	strb	r3, [r4]
   10f9c:	pop	{r4, pc}
   10fa0:	andeq	r9, r2, r0, ror r0
   10fa4:	b	10f44 <_start@@Base+0x8c>

00010fa8 <verify_monster@@Base>:
   10fa8:	push	{fp, lr}
   10fac:	mov	fp, sp
   10fb0:	sub	sp, sp, #160	; 0xa0
   10fb4:	str	r0, [fp, #-8]
   10fb8:	ldr	r0, [fp, #-8]
   10fbc:	bl	118cc <verify_monster@@Base+0x924>
   10fc0:	str	r0, [fp, #-12]
   10fc4:	movw	lr, #0
   10fc8:	cmp	r0, lr
   10fcc:	bne	10fec <verify_monster@@Base+0x44>
   10fd0:	ldr	r0, [pc, #2068]	; 117ec <verify_monster@@Base+0x844>
   10fd4:	add	r0, pc, r0
   10fd8:	bl	10ddc <printf@plt>
   10fdc:	mvn	lr, #0
   10fe0:	str	lr, [fp, #-4]
   10fe4:	str	r0, [fp, #-60]	; 0xffffffc4
   10fe8:	b	117e0 <verify_monster@@Base+0x838>
   10fec:	ldr	r0, [fp, #-12]
   10ff0:	bl	11948 <verify_monster@@Base+0x9a0>
   10ff4:	sxth	r0, r0
   10ff8:	cmp	r0, #80	; 0x50
   10ffc:	beq	1101c <verify_monster@@Base+0x74>
   11000:	ldr	r0, [pc, #2224]	; 118b8 <verify_monster@@Base+0x910>
   11004:	add	r0, pc, r0
   11008:	bl	10ddc <printf@plt>
   1100c:	mvn	lr, #0
   11010:	str	lr, [fp, #-4]
   11014:	str	r0, [fp, #-64]	; 0xffffffc0
   11018:	b	117e0 <verify_monster@@Base+0x838>
   1101c:	ldr	r0, [fp, #-12]
   11020:	bl	11a3c <verify_monster@@Base+0xa94>
   11024:	str	r0, [fp, #-20]	; 0xffffffec
   11028:	movw	lr, #0
   1102c:	cmp	r0, lr
   11030:	bne	11050 <verify_monster@@Base+0xa8>
   11034:	ldr	r0, [pc, #1972]	; 117f0 <verify_monster@@Base+0x848>
   11038:	add	r0, pc, r0
   1103c:	bl	10ddc <printf@plt>
   11040:	mvn	lr, #0
   11044:	str	lr, [fp, #-4]
   11048:	str	r0, [fp, #-68]	; 0xffffffbc
   1104c:	b	117e0 <verify_monster@@Base+0x838>
   11050:	ldr	r0, [fp, #-20]	; 0xffffffec
   11054:	ldr	r1, [fp, #-8]
   11058:	sub	r0, r0, r1
   1105c:	str	r0, [fp, #-40]	; 0xffffffd8
   11060:	ldr	r0, [fp, #-40]	; 0xffffffd8
   11064:	and	r0, r0, #15
   11068:	cmp	r0, #0
   1106c:	beq	1108c <verify_monster@@Base+0xe4>
   11070:	ldr	r0, [pc, #2108]	; 118b4 <verify_monster@@Base+0x90c>
   11074:	add	r0, pc, r0
   11078:	bl	10ddc <printf@plt>
   1107c:	mvn	lr, #0
   11080:	str	lr, [fp, #-4]
   11084:	str	r0, [fp, #-72]	; 0xffffffb8
   11088:	b	117e0 <verify_monster@@Base+0x838>
   1108c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11090:	bl	11b20 <verify_monster@@Base+0xb78>
   11094:	vmov.f32	s2, #112	; 0x3f800000  1.0
   11098:	vcmp.f32	s0, s2
   1109c:	vmrs	APSR_nzcv, fpscr
   110a0:	beq	110c0 <verify_monster@@Base+0x118>
   110a4:	ldr	r0, [pc, #2052]	; 118b0 <verify_monster@@Base+0x908>
   110a8:	add	r0, pc, r0
   110ac:	bl	10ddc <printf@plt>
   110b0:	mvn	lr, #0
   110b4:	str	lr, [fp, #-4]
   110b8:	str	r0, [fp, #-76]	; 0xffffffb4
   110bc:	b	117e0 <verify_monster@@Base+0x838>
   110c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   110c4:	bl	11b6c <verify_monster@@Base+0xbc4>
   110c8:	vmov.f32	s2, #0	; 0x40000000  2.0
   110cc:	vcmp.f32	s0, s2
   110d0:	vmrs	APSR_nzcv, fpscr
   110d4:	beq	110f4 <verify_monster@@Base+0x14c>
   110d8:	ldr	r0, [pc, #1996]	; 118ac <verify_monster@@Base+0x904>
   110dc:	add	r0, pc, r0
   110e0:	bl	10ddc <printf@plt>
   110e4:	mvn	lr, #0
   110e8:	str	lr, [fp, #-4]
   110ec:	str	r0, [sp, #80]	; 0x50
   110f0:	b	117e0 <verify_monster@@Base+0x838>
   110f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   110f8:	bl	11bbc <verify_monster@@Base+0xc14>
   110fc:	vmov.f32	s2, #8	; 0x40400000  3.0
   11100:	vcmp.f32	s0, s2
   11104:	vmrs	APSR_nzcv, fpscr
   11108:	beq	11128 <verify_monster@@Base+0x180>
   1110c:	ldr	r0, [pc, #1940]	; 118a8 <verify_monster@@Base+0x900>
   11110:	add	r0, pc, r0
   11114:	bl	10ddc <printf@plt>
   11118:	mvn	lr, #0
   1111c:	str	lr, [fp, #-4]
   11120:	str	r0, [sp, #76]	; 0x4c
   11124:	b	117e0 <verify_monster@@Base+0x838>
   11128:	ldr	r0, [fp, #-20]	; 0xffffffec
   1112c:	bl	11c10 <verify_monster@@Base+0xc68>
   11130:	vmov.f64	d16, #8	; 0x40400000  3.0
   11134:	vcmp.f64	d0, d16
   11138:	vmrs	APSR_nzcv, fpscr
   1113c:	beq	1115c <verify_monster@@Base+0x1b4>
   11140:	ldr	r0, [pc, #1884]	; 118a4 <verify_monster@@Base+0x8fc>
   11144:	add	r0, pc, r0
   11148:	bl	10ddc <printf@plt>
   1114c:	mvn	lr, #0
   11150:	str	lr, [fp, #-4]
   11154:	str	r0, [sp, #72]	; 0x48
   11158:	b	117e0 <verify_monster@@Base+0x838>
   1115c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11160:	bl	11c68 <verify_monster@@Base+0xcc0>
   11164:	sxtb	r0, r0
   11168:	cmp	r0, #2
   1116c:	beq	1118c <verify_monster@@Base+0x1e4>
   11170:	ldr	r0, [pc, #1832]	; 118a0 <verify_monster@@Base+0x8f8>
   11174:	add	r0, pc, r0
   11178:	bl	10ddc <printf@plt>
   1117c:	mvn	lr, #0
   11180:	str	lr, [fp, #-4]
   11184:	str	r0, [sp, #68]	; 0x44
   11188:	b	117e0 <verify_monster@@Base+0x838>
   1118c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11190:	bl	11cbc <verify_monster@@Base+0xd14>
   11194:	str	r0, [fp, #-24]	; 0xffffffe8
   11198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1119c:	bl	11cfc <verify_monster@@Base+0xd54>
   111a0:	sxth	r0, r0
   111a4:	cmp	r0, #5
   111a8:	bne	111c0 <verify_monster@@Base+0x218>
   111ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   111b0:	bl	11d4c <verify_monster@@Base+0xda4>
   111b4:	sxtb	r0, r0
   111b8:	cmp	r0, #6
   111bc:	beq	111dc <verify_monster@@Base+0x234>
   111c0:	ldr	r0, [pc, #1748]	; 1189c <verify_monster@@Base+0x8f4>
   111c4:	add	r0, pc, r0
   111c8:	bl	10ddc <printf@plt>
   111cc:	mvn	lr, #0
   111d0:	str	lr, [fp, #-4]
   111d4:	str	r0, [sp, #64]	; 0x40
   111d8:	b	117e0 <verify_monster@@Base+0x838>
   111dc:	ldr	r0, [fp, #-12]
   111e0:	bl	11da0 <verify_monster@@Base+0xdf8>
   111e4:	str	r0, [fp, #-36]	; 0xffffffdc
   111e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   111ec:	bl	11ec0 <verify_monster@@Base+0xf18>
   111f0:	cmp	r0, #9
   111f4:	beq	11214 <verify_monster@@Base+0x26c>
   111f8:	ldr	r0, [pc, #1688]	; 11898 <verify_monster@@Base+0x8f0>
   111fc:	add	r0, pc, r0
   11200:	bl	10ddc <printf@plt>
   11204:	mvn	lr, #0
   11208:	str	lr, [fp, #-4]
   1120c:	str	r0, [sp, #60]	; 0x3c
   11210:	b	117e0 <verify_monster@@Base+0x838>
   11214:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11218:	movw	r1, #0
   1121c:	cmp	r0, r1
   11220:	beq	1123c <verify_monster@@Base+0x294>
   11224:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11228:	ldr	r1, [pc, #1676]	; 118bc <verify_monster@@Base+0x914>
   1122c:	add	r1, pc, r1
   11230:	bl	10dd0 <strcmp@plt>
   11234:	cmp	r0, #0
   11238:	beq	11258 <verify_monster@@Base+0x2b0>
   1123c:	ldr	r0, [pc, #1616]	; 11894 <verify_monster@@Base+0x8ec>
   11240:	add	r0, pc, r0
   11244:	bl	10ddc <printf@plt>
   11248:	mvn	lr, #0
   1124c:	str	lr, [fp, #-4]
   11250:	str	r0, [sp, #56]	; 0x38
   11254:	b	117e0 <verify_monster@@Base+0x838>
   11258:	ldr	r0, [fp, #-12]
   1125c:	bl	11f10 <verify_monster@@Base+0xf68>
   11260:	str	r0, [fp, #-44]	; 0xffffffd4
   11264:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11268:	bl	12018 <verify_monster@@Base+0x1070>
   1126c:	cmp	r0, #5
   11270:	beq	11290 <verify_monster@@Base+0x2e8>
   11274:	ldr	r0, [pc, #1556]	; 11890 <verify_monster@@Base+0x8e8>
   11278:	add	r0, pc, r0
   1127c:	bl	10ddc <printf@plt>
   11280:	mvn	lr, #0
   11284:	str	lr, [fp, #-4]
   11288:	str	r0, [sp, #52]	; 0x34
   1128c:	b	117e0 <verify_monster@@Base+0x838>
   11290:	movw	r0, #0
   11294:	str	r0, [fp, #-56]	; 0xffffffc8
   11298:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1129c:	cmp	r0, #5
   112a0:	bge	112f4 <verify_monster@@Base+0x34c>
   112a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   112a8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   112ac:	bl	12038 <verify_monster@@Base+0x1090>
   112b0:	and	r0, r0, #255	; 0xff
   112b4:	ldr	r1, [fp, #-56]	; 0xffffffc8
   112b8:	cmp	r0, r1
   112bc:	beq	112e0 <verify_monster@@Base+0x338>
   112c0:	ldr	r0, [pc, #1476]	; 1188c <verify_monster@@Base+0x8e4>
   112c4:	add	r0, pc, r0
   112c8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   112cc:	bl	10ddc <printf@plt>
   112d0:	mvn	r1, #0
   112d4:	str	r1, [fp, #-4]
   112d8:	str	r0, [sp, #48]	; 0x30
   112dc:	b	117e0 <verify_monster@@Base+0x838>
   112e0:	b	112e4 <verify_monster@@Base+0x33c>
   112e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   112e8:	add	r0, r0, #1
   112ec:	str	r0, [fp, #-56]	; 0xffffffc8
   112f0:	b	11298 <verify_monster@@Base+0x2f0>
   112f4:	ldr	r0, [fp, #-12]
   112f8:	bl	120b0 <verify_monster@@Base+0x1108>
   112fc:	str	r0, [fp, #-48]	; 0xffffffd0
   11300:	movw	lr, #0
   11304:	cmp	r0, lr
   11308:	bne	11328 <verify_monster@@Base+0x380>
   1130c:	ldr	r0, [pc, #1248]	; 117f4 <verify_monster@@Base+0x84c>
   11310:	add	r0, pc, r0
   11314:	bl	10ddc <printf@plt>
   11318:	mvn	lr, #0
   1131c:	str	lr, [fp, #-4]
   11320:	str	r0, [sp, #44]	; 0x2c
   11324:	b	117e0 <verify_monster@@Base+0x838>
   11328:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1132c:	bl	121b8 <verify_monster@@Base+0x1210>
   11330:	cmp	r0, #2
   11334:	beq	11354 <verify_monster@@Base+0x3ac>
   11338:	ldr	r0, [pc, #1352]	; 11888 <verify_monster@@Base+0x8e0>
   1133c:	add	r0, pc, r0
   11340:	bl	10ddc <printf@plt>
   11344:	mvn	lr, #0
   11348:	str	lr, [fp, #-4]
   1134c:	str	r0, [sp, #40]	; 0x28
   11350:	b	117e0 <verify_monster@@Base+0x838>
   11354:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11358:	movw	r1, #0
   1135c:	bl	12208 <verify_monster@@Base+0x1260>
   11360:	str	r0, [fp, #-52]	; 0xffffffcc
   11364:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11368:	ldr	r1, [pc, #1360]	; 118c0 <verify_monster@@Base+0x918>
   1136c:	add	r1, pc, r1
   11370:	bl	10dd0 <strcmp@plt>
   11374:	cmp	r0, #0
   11378:	beq	11398 <verify_monster@@Base+0x3f0>
   1137c:	ldr	r0, [pc, #1280]	; 11884 <verify_monster@@Base+0x8dc>
   11380:	add	r0, pc, r0
   11384:	bl	10ddc <printf@plt>
   11388:	mvn	lr, #0
   1138c:	str	lr, [fp, #-4]
   11390:	str	r0, [sp, #36]	; 0x24
   11394:	b	117e0 <verify_monster@@Base+0x838>
   11398:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1139c:	movw	r1, #1
   113a0:	bl	12208 <verify_monster@@Base+0x1260>
   113a4:	str	r0, [fp, #-52]	; 0xffffffcc
   113a8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   113ac:	ldr	r1, [pc, #1296]	; 118c4 <verify_monster@@Base+0x91c>
   113b0:	add	r1, pc, r1
   113b4:	bl	10dd0 <strcmp@plt>
   113b8:	cmp	r0, #0
   113bc:	beq	113dc <verify_monster@@Base+0x434>
   113c0:	ldr	r0, [pc, #1208]	; 11880 <verify_monster@@Base+0x8d8>
   113c4:	add	r0, pc, r0
   113c8:	bl	10ddc <printf@plt>
   113cc:	mvn	lr, #0
   113d0:	str	lr, [fp, #-4]
   113d4:	str	r0, [sp, #32]
   113d8:	b	117e0 <verify_monster@@Base+0x838>
   113dc:	ldr	r0, [fp, #-12]
   113e0:	bl	1229c <verify_monster@@Base+0x12f4>
   113e4:	strb	r0, [fp, #-29]	; 0xffffffe3
   113e8:	ldrb	r0, [fp, #-29]	; 0xffffffe3
   113ec:	cmp	r0, #1
   113f0:	beq	11410 <verify_monster@@Base+0x468>
   113f4:	ldr	r0, [pc, #1152]	; 1187c <verify_monster@@Base+0x8d4>
   113f8:	add	r0, pc, r0
   113fc:	bl	10ddc <printf@plt>
   11400:	mvn	lr, #0
   11404:	str	lr, [fp, #-4]
   11408:	str	r0, [sp, #28]
   1140c:	b	117e0 <verify_monster@@Base+0x838>
   11410:	ldr	r0, [fp, #-12]
   11414:	bl	12390 <verify_monster@@Base+0x13e8>
   11418:	str	r0, [fp, #-16]
   1141c:	ldr	r0, [fp, #-16]
   11420:	movw	lr, #0
   11424:	cmp	r0, lr
   11428:	bne	11448 <verify_monster@@Base+0x4a0>
   1142c:	ldr	r0, [pc, #964]	; 117f8 <verify_monster@@Base+0x850>
   11430:	add	r0, pc, r0
   11434:	bl	10ddc <printf@plt>
   11438:	mvn	lr, #0
   1143c:	str	lr, [fp, #-4]
   11440:	str	r0, [sp, #24]
   11444:	b	117e0 <verify_monster@@Base+0x838>
   11448:	ldr	r0, [fp, #-16]
   1144c:	bl	11da0 <verify_monster@@Base+0xdf8>
   11450:	ldr	r1, [pc, #1136]	; 118c8 <verify_monster@@Base+0x920>
   11454:	add	r1, pc, r1
   11458:	bl	10dd0 <strcmp@plt>
   1145c:	cmp	r0, #0
   11460:	beq	11480 <verify_monster@@Base+0x4d8>
   11464:	ldr	r0, [pc, #1036]	; 11878 <verify_monster@@Base+0x8d0>
   11468:	add	r0, pc, r0
   1146c:	bl	10ddc <printf@plt>
   11470:	mvn	lr, #0
   11474:	str	lr, [fp, #-4]
   11478:	str	r0, [sp, #20]
   1147c:	b	117e0 <verify_monster@@Base+0x838>
   11480:	ldr	r0, [fp, #-12]
   11484:	bl	12494 <verify_monster@@Base+0x14ec>
   11488:	str	r0, [fp, #-28]	; 0xffffffe4
   1148c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11490:	bl	1259c <verify_monster@@Base+0x15f4>
   11494:	cmp	r0, #2
   11498:	beq	114b8 <verify_monster@@Base+0x510>
   1149c:	ldr	r0, [pc, #976]	; 11874 <verify_monster@@Base+0x8cc>
   114a0:	add	r0, pc, r0
   114a4:	bl	10ddc <printf@plt>
   114a8:	mvn	lr, #0
   114ac:	str	lr, [fp, #-4]
   114b0:	str	r0, [sp, #16]
   114b4:	b	117e0 <verify_monster@@Base+0x838>
   114b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   114bc:	movw	r1, #0
   114c0:	bl	125ec <verify_monster@@Base+0x1644>
   114c4:	str	r0, [fp, #-24]	; 0xffffffe8
   114c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   114cc:	bl	11cfc <verify_monster@@Base+0xd54>
   114d0:	sxth	r0, r0
   114d4:	cmp	r0, #10
   114d8:	beq	114f8 <verify_monster@@Base+0x550>
   114dc:	ldr	r0, [pc, #908]	; 11870 <verify_monster@@Base+0x8c8>
   114e0:	add	r0, pc, r0
   114e4:	bl	10ddc <printf@plt>
   114e8:	mvn	lr, #0
   114ec:	str	lr, [fp, #-4]
   114f0:	str	r0, [sp, #12]
   114f4:	b	117e0 <verify_monster@@Base+0x838>
   114f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   114fc:	bl	11d4c <verify_monster@@Base+0xda4>
   11500:	sxtb	r0, r0
   11504:	cmp	r0, #20
   11508:	beq	11528 <verify_monster@@Base+0x580>
   1150c:	ldr	r0, [pc, #856]	; 1186c <verify_monster@@Base+0x8c4>
   11510:	add	r0, pc, r0
   11514:	bl	10ddc <printf@plt>
   11518:	mvn	lr, #0
   1151c:	str	lr, [fp, #-4]
   11520:	str	r0, [sp, #8]
   11524:	b	117e0 <verify_monster@@Base+0x838>
   11528:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1152c:	movw	r1, #1
   11530:	bl	125ec <verify_monster@@Base+0x1644>
   11534:	str	r0, [fp, #-24]	; 0xffffffe8
   11538:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1153c:	bl	11cfc <verify_monster@@Base+0xd54>
   11540:	sxth	r0, r0
   11544:	cmp	r0, #30
   11548:	beq	11568 <verify_monster@@Base+0x5c0>
   1154c:	ldr	r0, [pc, #788]	; 11868 <verify_monster@@Base+0x8c0>
   11550:	add	r0, pc, r0
   11554:	bl	10ddc <printf@plt>
   11558:	mvn	lr, #0
   1155c:	str	lr, [fp, #-4]
   11560:	str	r0, [sp, #4]
   11564:	b	117e0 <verify_monster@@Base+0x838>
   11568:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1156c:	bl	11d4c <verify_monster@@Base+0xda4>
   11570:	sxtb	r0, r0
   11574:	cmp	r0, #40	; 0x28
   11578:	beq	11598 <verify_monster@@Base+0x5f0>
   1157c:	ldr	r0, [pc, #736]	; 11864 <verify_monster@@Base+0x8bc>
   11580:	add	r0, pc, r0
   11584:	bl	10ddc <printf@plt>
   11588:	mvn	lr, #0
   1158c:	str	lr, [fp, #-4]
   11590:	str	r0, [sp]
   11594:	b	117e0 <verify_monster@@Base+0x838>
   11598:	ldr	r0, [fp, #-12]
   1159c:	bl	1265c <verify_monster@@Base+0x16b4>
   115a0:	ldr	lr, [pc, #596]	; 117fc <verify_monster@@Base+0x854>
   115a4:	cmp	r0, lr
   115a8:	bne	115b0 <verify_monster@@Base+0x608>
   115ac:	b	115d0 <verify_monster@@Base+0x628>
   115b0:	ldr	r0, [pc, #584]	; 11800 <verify_monster@@Base+0x858>
   115b4:	add	r0, pc, r0
   115b8:	ldr	r1, [pc, #580]	; 11804 <verify_monster@@Base+0x85c>
   115bc:	add	r1, pc, r1
   115c0:	ldr	r2, [pc, #576]	; 11808 <verify_monster@@Base+0x860>
   115c4:	add	r3, pc, r2
   115c8:	movw	r2, #148	; 0x94
   115cc:	bl	10ea8 <__assert_fail@plt>
   115d0:	ldr	r0, [fp, #-12]
   115d4:	bl	12748 <verify_monster@@Base+0x17a0>
   115d8:	movw	lr, #51521	; 0xc941
   115dc:	movt	lr, #56697	; 0xdd79
   115e0:	cmp	r0, lr
   115e4:	bne	115f0 <verify_monster@@Base+0x648>
   115e8:	b	115ec <verify_monster@@Base+0x644>
   115ec:	b	11610 <verify_monster@@Base+0x668>
   115f0:	ldr	r0, [pc, #532]	; 1180c <verify_monster@@Base+0x864>
   115f4:	add	r0, pc, r0
   115f8:	ldr	r1, [pc, #528]	; 11810 <verify_monster@@Base+0x868>
   115fc:	add	r1, pc, r1
   11600:	ldr	r2, [pc, #524]	; 11814 <verify_monster@@Base+0x86c>
   11604:	add	r3, pc, r2
   11608:	movw	r2, #149	; 0x95
   1160c:	bl	10ea8 <__assert_fail@plt>
   11610:	ldr	r0, [fp, #-12]
   11614:	bl	12834 <verify_monster@@Base+0x188c>
   11618:	movw	lr, #32973	; 0x80cd
   1161c:	movt	lr, #28175	; 0x6e0f
   11620:	eor	r1, r1, lr
   11624:	movw	lr, #37249	; 0x9181
   11628:	movt	lr, #62075	; 0xf27b
   1162c:	eor	r0, r0, lr
   11630:	orr	r0, r0, r1
   11634:	cmp	r0, #0
   11638:	bne	11644 <verify_monster@@Base+0x69c>
   1163c:	b	11640 <verify_monster@@Base+0x698>
   11640:	b	11664 <verify_monster@@Base+0x6bc>
   11644:	ldr	r0, [pc, #460]	; 11818 <verify_monster@@Base+0x870>
   11648:	add	r0, pc, r0
   1164c:	ldr	r1, [pc, #456]	; 1181c <verify_monster@@Base+0x874>
   11650:	add	r1, pc, r1
   11654:	ldr	r2, [pc, #452]	; 11820 <verify_monster@@Base+0x878>
   11658:	add	r3, pc, r2
   1165c:	movw	r2, #150	; 0x96
   11660:	bl	10ea8 <__assert_fail@plt>
   11664:	ldr	r0, [fp, #-12]
   11668:	bl	1293c <verify_monster@@Base+0x1994>
   1166c:	movw	lr, #32973	; 0x80cd
   11670:	movt	lr, #28175	; 0x6e0f
   11674:	eor	r1, r1, lr
   11678:	movw	lr, #37249	; 0x9181
   1167c:	movt	lr, #62075	; 0xf27b
   11680:	eor	r0, r0, lr
   11684:	orr	r0, r0, r1
   11688:	cmp	r0, #0
   1168c:	bne	11698 <verify_monster@@Base+0x6f0>
   11690:	b	11694 <verify_monster@@Base+0x6ec>
   11694:	b	116b8 <verify_monster@@Base+0x710>
   11698:	ldr	r0, [pc, #388]	; 11824 <verify_monster@@Base+0x87c>
   1169c:	add	r0, pc, r0
   116a0:	ldr	r1, [pc, #384]	; 11828 <verify_monster@@Base+0x880>
   116a4:	add	r1, pc, r1
   116a8:	ldr	r2, [pc, #380]	; 1182c <verify_monster@@Base+0x884>
   116ac:	add	r3, pc, r2
   116b0:	movw	r2, #151	; 0x97
   116b4:	bl	10ea8 <__assert_fail@plt>
   116b8:	ldr	r0, [fp, #-12]
   116bc:	bl	12a44 <verify_monster@@Base+0x1a9c>
   116c0:	ldr	lr, [pc, #360]	; 11830 <verify_monster@@Base+0x888>
   116c4:	cmp	r0, lr
   116c8:	bne	116d0 <verify_monster@@Base+0x728>
   116cc:	b	116f0 <verify_monster@@Base+0x748>
   116d0:	ldr	r0, [pc, #348]	; 11834 <verify_monster@@Base+0x88c>
   116d4:	add	r0, pc, r0
   116d8:	ldr	r1, [pc, #344]	; 11838 <verify_monster@@Base+0x890>
   116dc:	add	r1, pc, r1
   116e0:	ldr	r2, [pc, #340]	; 1183c <verify_monster@@Base+0x894>
   116e4:	add	r3, pc, r2
   116e8:	movw	r2, #152	; 0x98
   116ec:	bl	10ea8 <__assert_fail@plt>
   116f0:	ldr	r0, [fp, #-12]
   116f4:	bl	12b30 <verify_monster@@Base+0x1b88>
   116f8:	movw	lr, #42097	; 0xa471
   116fc:	movt	lr, #36481	; 0x8e81
   11700:	cmp	r0, lr
   11704:	bne	11710 <verify_monster@@Base+0x768>
   11708:	b	1170c <verify_monster@@Base+0x764>
   1170c:	b	11730 <verify_monster@@Base+0x788>
   11710:	ldr	r0, [pc, #296]	; 11840 <verify_monster@@Base+0x898>
   11714:	add	r0, pc, r0
   11718:	ldr	r1, [pc, #292]	; 11844 <verify_monster@@Base+0x89c>
   1171c:	add	r1, pc, r1
   11720:	ldr	r2, [pc, #288]	; 11848 <verify_monster@@Base+0x8a0>
   11724:	add	r3, pc, r2
   11728:	movw	r2, #153	; 0x99
   1172c:	bl	10ea8 <__assert_fail@plt>
   11730:	ldr	r0, [fp, #-12]
   11734:	bl	12c1c <verify_monster@@Base+0x1c74>
   11738:	movw	lr, #18652	; 0x48dc
   1173c:	movt	lr, #17401	; 0x43f9
   11740:	eor	r1, r1, lr
   11744:	movw	lr, #56817	; 0xddf1
   11748:	movt	lr, #51047	; 0xc767
   1174c:	eor	r0, r0, lr
   11750:	orr	r0, r0, r1
   11754:	cmp	r0, #0
   11758:	bne	11764 <verify_monster@@Base+0x7bc>
   1175c:	b	11760 <verify_monster@@Base+0x7b8>
   11760:	b	11784 <verify_monster@@Base+0x7dc>
   11764:	ldr	r0, [pc, #224]	; 1184c <verify_monster@@Base+0x8a4>
   11768:	add	r0, pc, r0
   1176c:	ldr	r1, [pc, #220]	; 11850 <verify_monster@@Base+0x8a8>
   11770:	add	r1, pc, r1
   11774:	ldr	r2, [pc, #216]	; 11854 <verify_monster@@Base+0x8ac>
   11778:	add	r3, pc, r2
   1177c:	movw	r2, #154	; 0x9a
   11780:	bl	10ea8 <__assert_fail@plt>
   11784:	ldr	r0, [fp, #-12]
   11788:	bl	12d24 <verify_monster@@Base+0x1d7c>
   1178c:	movw	lr, #18652	; 0x48dc
   11790:	movt	lr, #17401	; 0x43f9
   11794:	eor	r1, r1, lr
   11798:	movw	lr, #56817	; 0xddf1
   1179c:	movt	lr, #51047	; 0xc767
   117a0:	eor	r0, r0, lr
   117a4:	orr	r0, r0, r1
   117a8:	cmp	r0, #0
   117ac:	bne	117b8 <verify_monster@@Base+0x810>
   117b0:	b	117b4 <verify_monster@@Base+0x80c>
   117b4:	b	117d8 <verify_monster@@Base+0x830>
   117b8:	ldr	r0, [pc, #152]	; 11858 <verify_monster@@Base+0x8b0>
   117bc:	add	r0, pc, r0
   117c0:	ldr	r1, [pc, #148]	; 1185c <verify_monster@@Base+0x8b4>
   117c4:	add	r1, pc, r1
   117c8:	ldr	r2, [pc, #144]	; 11860 <verify_monster@@Base+0x8b8>
   117cc:	add	r3, pc, r2
   117d0:	movw	r2, #155	; 0x9b
   117d4:	bl	10ea8 <__assert_fail@plt>
   117d8:	movw	r0, #0
   117dc:	str	r0, [fp, #-4]
   117e0:	ldr	r0, [fp, #-4]
   117e4:	mov	sp, fp
   117e8:	pop	{fp, pc}
   117ec:	andeq	r6, r0, r9, lsr #17
   117f0:	andeq	r6, r0, pc, ror r8
   117f4:	andeq	r6, r0, r1, lsl #14
   117f8:	andeq	r6, r0, pc, lsl #13
   117fc:			; <UNDEFINED> instruction: 0xdd79c941
   11800:	andeq	r6, r0, r2, asr #11
   11804:	andeq	r6, r0, pc, ror #11
   11808:	andeq	r6, r0, pc, asr #12
   1180c:	andeq	r6, r0, sl, lsr r6
   11810:	andeq	r6, r0, pc, lsr #11
   11814:	andeq	r6, r0, pc, lsl #12
   11818:	andeq	r6, r0, fp, lsl r6
   1181c:	andeq	r6, r0, fp, asr r5
   11820:			; <UNDEFINED> instruction: 0x000065bb
   11824:	andeq	r6, r0, r6, lsl #12
   11828:	andeq	r6, r0, r7, lsl #10
   1182c:	andeq	r6, r0, r7, ror #10
   11830:	mcrhi	4, 4, sl, cr1, cr1, {3}
   11834:	andeq	r6, r0, sp, lsl #12
   11838:	andeq	r6, r0, pc, asr #9
   1183c:	andeq	r6, r0, pc, lsr #10
   11840:	andeq	r6, r0, r4, lsl #12
   11844:	andeq	r6, r0, pc, lsl #9
   11848:	andeq	r6, r0, pc, ror #9
   1184c:	andeq	r6, r0, r6, ror #11
   11850:	andeq	r6, r0, fp, lsr r4
   11854:	muleq	r0, fp, r4
   11858:	ldrdeq	r6, [r0], -r2
   1185c:	andeq	r6, r0, r7, ror #7
   11860:	andeq	r6, r0, r7, asr #8
   11864:	ldrdeq	r6, [r0], -pc	; <UNPREDICTABLE>
   11868:	strdeq	r6, [r0], -r8
   1186c:	andeq	r6, r0, r1, lsr #12
   11870:	andeq	r6, r0, sl, lsr r6
   11874:	andeq	r6, r0, r5, asr r6
   11878:	andeq	r6, r0, r4, ror r6
   1187c:			; <UNDEFINED> instruction: 0x000066b6
   11880:	andeq	r6, r0, r4, asr #13
   11884:	ldrdeq	r6, [r0], -sp
   11888:	strdeq	r6, [r0], -r2
   1188c:	andeq	r6, r0, r0, lsr r7
   11890:	andeq	r6, r0, r0, ror #14
   11894:	andeq	r6, r0, r3, lsl #15
   11898:	andeq	r6, r0, r1, lsr #15
   1189c:	andeq	r6, r0, r0, asr #15
   118a0:	strdeq	r6, [r0], -sl
   118a4:	andeq	r6, r0, r5, lsl r8
   118a8:	andeq	r6, r0, r7, lsr #16
   118ac:	andeq	r6, r0, r9, lsr r8
   118b0:	andeq	r6, r0, fp, asr #16
   118b4:	andeq	r6, r0, r7, asr r8
   118b8:	muleq	r0, r0, r8
   118bc:	andeq	r6, r0, sp, lsl #15
   118c0:	andeq	r6, r0, fp, ror #13
   118c4:	ldrdeq	r6, [r0], -r2
   118c8:	andeq	r6, r0, r3, lsl #13
   118cc:	push	{fp, lr}
   118d0:	mov	fp, sp
   118d4:	sub	sp, sp, #16
   118d8:	ldr	r1, [pc, #100]	; 11944 <verify_monster@@Base+0x99c>
   118dc:	add	r1, pc, r1
   118e0:	str	r0, [fp, #-4]
   118e4:	str	r1, [sp, #8]
   118e8:	ldr	r0, [fp, #-4]
   118ec:	movw	r1, #0
   118f0:	cmp	r0, r1
   118f4:	beq	1190c <verify_monster@@Base+0x964>
   118f8:	ldr	r0, [fp, #-4]
   118fc:	ldr	r1, [sp, #8]
   11900:	bl	1355c <main@@Base+0x730>
   11904:	cmp	r0, #0
   11908:	bne	11918 <verify_monster@@Base+0x970>
   1190c:	movw	r0, #0
   11910:	str	r0, [sp, #4]
   11914:	b	11938 <verify_monster@@Base+0x990>
   11918:	ldr	r0, [fp, #-4]
   1191c:	ldr	r1, [fp, #-4]
   11920:	str	r0, [sp]
   11924:	mov	r0, r1
   11928:	bl	13608 <main@@Base+0x7dc>
   1192c:	ldr	r1, [sp]
   11930:	add	r0, r1, r0
   11934:	str	r0, [sp, #4]
   11938:	ldr	r0, [sp, #4]
   1193c:	mov	sp, fp
   11940:	pop	{fp, pc}
   11944:	andeq	r6, r0, r7, asr r5
   11948:	push	{fp, lr}
   1194c:	mov	fp, sp
   11950:	sub	sp, sp, #24
   11954:	str	r0, [fp, #-4]
   11958:	movw	r0, #0
   1195c:	strh	r0, [fp, #-6]
   11960:	ldr	r0, [fp, #-4]
   11964:	movw	r1, #0
   11968:	cmp	r0, r1
   1196c:	beq	11978 <verify_monster@@Base+0x9d0>
   11970:	b	11974 <verify_monster@@Base+0x9cc>
   11974:	b	11998 <verify_monster@@Base+0x9f0>
   11978:	ldr	r0, [pc, #176]	; 11a30 <verify_monster@@Base+0xa88>
   1197c:	add	r0, pc, r0
   11980:	ldr	r1, [pc, #172]	; 11a34 <verify_monster@@Base+0xa8c>
   11984:	add	r1, pc, r1
   11988:	ldr	r2, [pc, #168]	; 11a38 <verify_monster@@Base+0xa90>
   1198c:	add	r3, pc, r2
   11990:	movw	r2, #697	; 0x2b9
   11994:	bl	10ea8 <__assert_fail@plt>
   11998:	mov	r0, #2
   1199c:	strh	r0, [fp, #-8]
   119a0:	ldr	r0, [fp, #-4]
   119a4:	str	r0, [sp, #8]
   119a8:	bl	1368c <main@@Base+0x860>
   119ac:	ldr	lr, [sp, #8]
   119b0:	sub	r0, lr, r0
   119b4:	str	r0, [sp, #12]
   119b8:	ldr	r0, [sp, #12]
   119bc:	bl	136b0 <main@@Base+0x884>
   119c0:	ldrh	lr, [fp, #-8]
   119c4:	add	lr, lr, #3
   119c8:	lsl	lr, lr, #1
   119cc:	cmp	r0, lr
   119d0:	bcc	119ec <verify_monster@@Base+0xa44>
   119d4:	ldr	r0, [sp, #12]
   119d8:	ldrh	r1, [fp, #-8]
   119dc:	add	r0, r0, r1, lsl #1
   119e0:	add	r0, r0, #4
   119e4:	bl	136b0 <main@@Base+0x884>
   119e8:	strh	r0, [fp, #-6]
   119ec:	ldrh	r0, [fp, #-6]
   119f0:	cmp	r0, #0
   119f4:	beq	11a14 <verify_monster@@Base+0xa6c>
   119f8:	ldr	r0, [fp, #-4]
   119fc:	ldrh	r1, [fp, #-6]
   11a00:	add	r0, r0, r1
   11a04:	bl	136d8 <main@@Base+0x8ac>
   11a08:	sxth	r0, r0
   11a0c:	str	r0, [sp, #4]
   11a10:	b	11a20 <verify_monster@@Base+0xa78>
   11a14:	movw	r0, #100	; 0x64
   11a18:	str	r0, [sp, #4]
   11a1c:	b	11a20 <verify_monster@@Base+0xa78>
   11a20:	ldr	r0, [sp, #4]
   11a24:	sxth	r0, r0
   11a28:	mov	sp, fp
   11a2c:	pop	{fp, pc}
   11a30:	andeq	r6, r0, ip, lsr r5
   11a34:	andeq	r6, r0, sl, asr r5
   11a38:	andeq	r6, r0, fp, asr #11
   11a3c:	push	{fp, lr}
   11a40:	mov	fp, sp
   11a44:	sub	sp, sp, #24
   11a48:	str	r0, [fp, #-8]
   11a4c:	movw	r0, #0
   11a50:	strh	r0, [fp, #-10]
   11a54:	ldr	r0, [fp, #-8]
   11a58:	movw	r1, #0
   11a5c:	cmp	r0, r1
   11a60:	beq	11a6c <verify_monster@@Base+0xac4>
   11a64:	b	11a68 <verify_monster@@Base+0xac0>
   11a68:	b	11a8c <verify_monster@@Base+0xae4>
   11a6c:	ldr	r0, [pc, #160]	; 11b14 <verify_monster@@Base+0xb6c>
   11a70:	add	r0, pc, r0
   11a74:	ldr	r1, [pc, #156]	; 11b18 <verify_monster@@Base+0xb70>
   11a78:	add	r1, pc, r1
   11a7c:	ldr	r2, [pc, #152]	; 11b1c <verify_monster@@Base+0xb74>
   11a80:	add	r3, pc, r2
   11a84:	movw	r2, #696	; 0x2b8
   11a88:	bl	10ea8 <__assert_fail@plt>
   11a8c:	mov	r0, #0
   11a90:	strh	r0, [sp, #12]
   11a94:	ldr	r0, [fp, #-8]
   11a98:	str	r0, [sp, #4]
   11a9c:	bl	1368c <main@@Base+0x860>
   11aa0:	ldr	lr, [sp, #4]
   11aa4:	sub	r0, lr, r0
   11aa8:	str	r0, [sp, #8]
   11aac:	ldr	r0, [sp, #8]
   11ab0:	bl	136b0 <main@@Base+0x884>
   11ab4:	ldrh	lr, [sp, #12]
   11ab8:	add	lr, lr, #3
   11abc:	lsl	lr, lr, #1
   11ac0:	cmp	r0, lr
   11ac4:	bcc	11ae0 <verify_monster@@Base+0xb38>
   11ac8:	ldr	r0, [sp, #8]
   11acc:	ldrh	r1, [sp, #12]
   11ad0:	add	r0, r0, r1, lsl #1
   11ad4:	add	r0, r0, #4
   11ad8:	bl	136b0 <main@@Base+0x884>
   11adc:	strh	r0, [fp, #-10]
   11ae0:	ldrsh	r0, [fp, #-10]
   11ae4:	cmp	r0, #0
   11ae8:	beq	11b00 <verify_monster@@Base+0xb58>
   11aec:	ldr	r0, [fp, #-8]
   11af0:	ldrh	r1, [fp, #-10]
   11af4:	add	r0, r0, r1
   11af8:	str	r0, [fp, #-4]
   11afc:	b	11b08 <verify_monster@@Base+0xb60>
   11b00:	movw	r0, #0
   11b04:	str	r0, [fp, #-4]
   11b08:	ldr	r0, [fp, #-4]
   11b0c:	mov	sp, fp
   11b10:	pop	{fp, pc}
   11b14:	andeq	r6, r0, r8, asr #8
   11b18:	andeq	r6, r0, r6, ror #8
   11b1c:	andeq	r6, r0, r9, lsl r5
   11b20:	push	{fp, lr}
   11b24:	mov	fp, sp
   11b28:	sub	sp, sp, #8
   11b2c:	str	r0, [sp, #4]
   11b30:	ldr	r0, [sp, #4]
   11b34:	movw	r1, #0
   11b38:	cmp	r0, r1
   11b3c:	beq	11b50 <verify_monster@@Base+0xba8>
   11b40:	ldr	r0, [sp, #4]
   11b44:	bl	1373c <main@@Base+0x910>
   11b48:	vstr	s0, [sp]
   11b4c:	b	11b5c <verify_monster@@Base+0xbb4>
   11b50:	vldr	s0, [pc, #16]	; 11b68 <verify_monster@@Base+0xbc0>
   11b54:	vstr	s0, [sp]
   11b58:	b	11b5c <verify_monster@@Base+0xbb4>
   11b5c:	vldr	s0, [sp]
   11b60:	mov	sp, fp
   11b64:	pop	{fp, pc}
   11b68:	andeq	r0, r0, r0
   11b6c:	push	{fp, lr}
   11b70:	mov	fp, sp
   11b74:	sub	sp, sp, #8
   11b78:	str	r0, [sp, #4]
   11b7c:	ldr	r0, [sp, #4]
   11b80:	movw	r1, #0
   11b84:	cmp	r0, r1
   11b88:	beq	11ba0 <verify_monster@@Base+0xbf8>
   11b8c:	ldr	r0, [sp, #4]
   11b90:	add	r0, r0, #4
   11b94:	bl	1373c <main@@Base+0x910>
   11b98:	vstr	s0, [sp]
   11b9c:	b	11bac <verify_monster@@Base+0xc04>
   11ba0:	vldr	s0, [pc, #16]	; 11bb8 <verify_monster@@Base+0xc10>
   11ba4:	vstr	s0, [sp]
   11ba8:	b	11bac <verify_monster@@Base+0xc04>
   11bac:	vldr	s0, [sp]
   11bb0:	mov	sp, fp
   11bb4:	pop	{fp, pc}
   11bb8:	andeq	r0, r0, r0
   11bbc:	push	{fp, lr}
   11bc0:	mov	fp, sp
   11bc4:	sub	sp, sp, #8
   11bc8:	str	r0, [sp, #4]
   11bcc:	ldr	r0, [sp, #4]
   11bd0:	movw	r1, #0
   11bd4:	cmp	r0, r1
   11bd8:	beq	11bf0 <verify_monster@@Base+0xc48>
   11bdc:	ldr	r0, [sp, #4]
   11be0:	add	r0, r0, #8
   11be4:	bl	1373c <main@@Base+0x910>
   11be8:	vstr	s0, [sp]
   11bec:	b	11bfc <verify_monster@@Base+0xc54>
   11bf0:	vldr	s0, [pc, #16]	; 11c08 <verify_monster@@Base+0xc60>
   11bf4:	vstr	s0, [sp]
   11bf8:	b	11bfc <verify_monster@@Base+0xc54>
   11bfc:	vldr	s0, [sp]
   11c00:	mov	sp, fp
   11c04:	pop	{fp, pc}
   11c08:	andeq	r0, r0, r0
   11c0c:	nop	{0}
   11c10:	push	{fp, lr}
   11c14:	mov	fp, sp
   11c18:	sub	sp, sp, #16
   11c1c:	str	r0, [fp, #-4]
   11c20:	ldr	r0, [fp, #-4]
   11c24:	movw	r1, #0
   11c28:	cmp	r0, r1
   11c2c:	beq	11c44 <verify_monster@@Base+0xc9c>
   11c30:	ldr	r0, [fp, #-4]
   11c34:	add	r0, r0, #16
   11c38:	bl	13784 <main@@Base+0x958>
   11c3c:	vstr	d0, [sp]
   11c40:	b	11c50 <verify_monster@@Base+0xca8>
   11c44:	vldr	d16, [pc, #20]	; 11c60 <verify_monster@@Base+0xcb8>
   11c48:	vstr	d16, [sp]
   11c4c:	b	11c50 <verify_monster@@Base+0xca8>
   11c50:	vldr	d16, [sp]
   11c54:	vmov.f64	d0, d16
   11c58:	mov	sp, fp
   11c5c:	pop	{fp, pc}
	...
   11c68:	push	{fp, lr}
   11c6c:	mov	fp, sp
   11c70:	sub	sp, sp, #8
   11c74:	str	r0, [sp, #4]
   11c78:	ldr	r0, [sp, #4]
   11c7c:	movw	r1, #0
   11c80:	cmp	r0, r1
   11c84:	beq	11ca0 <verify_monster@@Base+0xcf8>
   11c88:	ldr	r0, [sp, #4]
   11c8c:	add	r0, r0, #24
   11c90:	bl	137c4 <main@@Base+0x998>
   11c94:	sxtb	r0, r0
   11c98:	str	r0, [sp]
   11c9c:	b	11cac <verify_monster@@Base+0xd04>
   11ca0:	movw	r0, #0
   11ca4:	str	r0, [sp]
   11ca8:	b	11cac <verify_monster@@Base+0xd04>
   11cac:	ldr	r0, [sp]
   11cb0:	sxtb	r0, r0
   11cb4:	mov	sp, fp
   11cb8:	pop	{fp, pc}
   11cbc:	sub	sp, sp, #8
   11cc0:	str	r0, [sp, #4]
   11cc4:	ldr	r0, [sp, #4]
   11cc8:	movw	r1, #0
   11ccc:	cmp	r0, r1
   11cd0:	beq	11ce4 <verify_monster@@Base+0xd3c>
   11cd4:	ldr	r0, [sp, #4]
   11cd8:	add	r0, r0, #26
   11cdc:	str	r0, [sp]
   11ce0:	b	11cf0 <verify_monster@@Base+0xd48>
   11ce4:	movw	r0, #0
   11ce8:	str	r0, [sp]
   11cec:	b	11cf0 <verify_monster@@Base+0xd48>
   11cf0:	ldr	r0, [sp]
   11cf4:	add	sp, sp, #8
   11cf8:	bx	lr
   11cfc:	push	{fp, lr}
   11d00:	mov	fp, sp
   11d04:	sub	sp, sp, #8
   11d08:	str	r0, [sp, #4]
   11d0c:	ldr	r0, [sp, #4]
   11d10:	movw	r1, #0
   11d14:	cmp	r0, r1
   11d18:	beq	11d30 <verify_monster@@Base+0xd88>
   11d1c:	ldr	r0, [sp, #4]
   11d20:	bl	136d8 <main@@Base+0x8ac>
   11d24:	sxth	r0, r0
   11d28:	str	r0, [sp]
   11d2c:	b	11d3c <verify_monster@@Base+0xd94>
   11d30:	movw	r0, #0
   11d34:	str	r0, [sp]
   11d38:	b	11d3c <verify_monster@@Base+0xd94>
   11d3c:	ldr	r0, [sp]
   11d40:	sxth	r0, r0
   11d44:	mov	sp, fp
   11d48:	pop	{fp, pc}
   11d4c:	push	{fp, lr}
   11d50:	mov	fp, sp
   11d54:	sub	sp, sp, #8
   11d58:	str	r0, [sp, #4]
   11d5c:	ldr	r0, [sp, #4]
   11d60:	movw	r1, #0
   11d64:	cmp	r0, r1
   11d68:	beq	11d84 <verify_monster@@Base+0xddc>
   11d6c:	ldr	r0, [sp, #4]
   11d70:	add	r0, r0, #2
   11d74:	bl	13800 <main@@Base+0x9d4>
   11d78:	sxtb	r0, r0
   11d7c:	str	r0, [sp]
   11d80:	b	11d90 <verify_monster@@Base+0xde8>
   11d84:	movw	r0, #0
   11d88:	str	r0, [sp]
   11d8c:	b	11d90 <verify_monster@@Base+0xde8>
   11d90:	ldr	r0, [sp]
   11d94:	sxtb	r0, r0
   11d98:	mov	sp, fp
   11d9c:	pop	{fp, pc}
   11da0:	push	{fp, lr}
   11da4:	mov	fp, sp
   11da8:	sub	sp, sp, #24
   11dac:	str	r0, [fp, #-4]
   11db0:	movw	r0, #0
   11db4:	strh	r0, [fp, #-10]
   11db8:	ldr	r0, [fp, #-4]
   11dbc:	movw	r1, #0
   11dc0:	cmp	r0, r1
   11dc4:	beq	11dd0 <verify_monster@@Base+0xe28>
   11dc8:	b	11dcc <verify_monster@@Base+0xe24>
   11dcc:	b	11df0 <verify_monster@@Base+0xe48>
   11dd0:	ldr	r0, [pc, #208]	; 11ea8 <verify_monster@@Base+0xf00>
   11dd4:	add	r0, pc, r0
   11dd8:	ldr	r1, [pc, #204]	; 11eac <verify_monster@@Base+0xf04>
   11ddc:	add	r1, pc, r1
   11de0:	ldr	r2, [pc, #200]	; 11eb0 <verify_monster@@Base+0xf08>
   11de4:	add	r3, pc, r2
   11de8:	movw	r2, #699	; 0x2bb
   11dec:	bl	10ea8 <__assert_fail@plt>
   11df0:	mov	r0, #3
   11df4:	strh	r0, [sp, #12]
   11df8:	ldr	r0, [fp, #-4]
   11dfc:	str	r0, [sp, #4]
   11e00:	bl	1368c <main@@Base+0x860>
   11e04:	ldr	lr, [sp, #4]
   11e08:	sub	r0, lr, r0
   11e0c:	str	r0, [sp, #8]
   11e10:	ldr	r0, [sp, #8]
   11e14:	bl	136b0 <main@@Base+0x884>
   11e18:	ldrh	lr, [sp, #12]
   11e1c:	add	lr, lr, #3
   11e20:	lsl	lr, lr, #1
   11e24:	cmp	r0, lr
   11e28:	bcc	11e44 <verify_monster@@Base+0xe9c>
   11e2c:	ldr	r0, [sp, #8]
   11e30:	ldrh	r1, [sp, #12]
   11e34:	add	r0, r0, r1, lsl #1
   11e38:	add	r0, r0, #4
   11e3c:	bl	136b0 <main@@Base+0x884>
   11e40:	strh	r0, [fp, #-10]
   11e44:	ldrsh	r0, [fp, #-10]
   11e48:	cmp	r0, #0
   11e4c:	beq	11e88 <verify_monster@@Base+0xee0>
   11e50:	ldr	r0, [fp, #-4]
   11e54:	ldrh	r1, [fp, #-10]
   11e58:	add	r0, r0, r1
   11e5c:	str	r0, [fp, #-8]
   11e60:	ldr	r0, [fp, #-8]
   11e64:	add	r0, r0, #4
   11e68:	ldr	r1, [fp, #-8]
   11e6c:	str	r0, [sp]
   11e70:	mov	r0, r1
   11e74:	bl	13608 <main@@Base+0x7dc>
   11e78:	ldr	r1, [sp]
   11e7c:	add	r0, r1, r0
   11e80:	mov	sp, fp
   11e84:	pop	{fp, pc}
   11e88:	ldr	r0, [pc, #36]	; 11eb4 <verify_monster@@Base+0xf0c>
   11e8c:	add	r0, pc, r0
   11e90:	ldr	r1, [pc, #32]	; 11eb8 <verify_monster@@Base+0xf10>
   11e94:	add	r1, pc, r1
   11e98:	ldr	r2, [pc, #28]	; 11ebc <verify_monster@@Base+0xf14>
   11e9c:	add	r3, pc, r2
   11ea0:	movw	r2, #699	; 0x2bb
   11ea4:	bl	10ea8 <__assert_fail@plt>
   11ea8:	andeq	r6, r0, r4, ror #1
   11eac:	andeq	r6, r0, r2, lsl #2
   11eb0:	andeq	r6, r0, sp, lsl #4
   11eb4:			; <UNDEFINED> instruction: 0x000061b6
   11eb8:	andeq	r6, r0, sl, asr #32
   11ebc:	andeq	r6, r0, r5, asr r1
   11ec0:	push	{fp, lr}
   11ec4:	mov	fp, sp
   11ec8:	sub	sp, sp, #8
   11ecc:	str	r0, [sp, #4]
   11ed0:	ldr	r0, [sp, #4]
   11ed4:	movw	r1, #0
   11ed8:	cmp	r0, r1
   11edc:	beq	11ef8 <verify_monster@@Base+0xf50>
   11ee0:	ldr	r0, [sp, #4]
   11ee4:	mvn	r1, #3
   11ee8:	add	r0, r0, r1
   11eec:	bl	13608 <main@@Base+0x7dc>
   11ef0:	str	r0, [sp]
   11ef4:	b	11f04 <verify_monster@@Base+0xf5c>
   11ef8:	movw	r0, #0
   11efc:	str	r0, [sp]
   11f00:	b	11f04 <verify_monster@@Base+0xf5c>
   11f04:	ldr	r0, [sp]
   11f08:	mov	sp, fp
   11f0c:	pop	{fp, pc}
   11f10:	push	{fp, lr}
   11f14:	mov	fp, sp
   11f18:	sub	sp, sp, #32
   11f1c:	str	r0, [fp, #-8]
   11f20:	movw	r0, #0
   11f24:	strh	r0, [fp, #-14]
   11f28:	ldr	r0, [fp, #-8]
   11f2c:	movw	r1, #0
   11f30:	cmp	r0, r1
   11f34:	beq	11f40 <verify_monster@@Base+0xf98>
   11f38:	b	11f3c <verify_monster@@Base+0xf94>
   11f3c:	b	11f60 <verify_monster@@Base+0xfb8>
   11f40:	ldr	r0, [pc, #196]	; 1200c <verify_monster@@Base+0x1064>
   11f44:	add	r0, pc, r0
   11f48:	ldr	r1, [pc, #192]	; 12010 <verify_monster@@Base+0x1068>
   11f4c:	add	r1, pc, r1
   11f50:	ldr	r2, [pc, #188]	; 12014 <verify_monster@@Base+0x106c>
   11f54:	add	r3, pc, r2
   11f58:	movw	r2, #706	; 0x2c2
   11f5c:	bl	10ea8 <__assert_fail@plt>
   11f60:	mov	r0, #5
   11f64:	strh	r0, [sp, #16]
   11f68:	ldr	r0, [fp, #-8]
   11f6c:	str	r0, [sp, #8]
   11f70:	bl	1368c <main@@Base+0x860>
   11f74:	ldr	lr, [sp, #8]
   11f78:	sub	r0, lr, r0
   11f7c:	str	r0, [sp, #12]
   11f80:	ldr	r0, [sp, #12]
   11f84:	bl	136b0 <main@@Base+0x884>
   11f88:	ldrh	lr, [sp, #16]
   11f8c:	add	lr, lr, #3
   11f90:	lsl	lr, lr, #1
   11f94:	cmp	r0, lr
   11f98:	bcc	11fb4 <verify_monster@@Base+0x100c>
   11f9c:	ldr	r0, [sp, #12]
   11fa0:	ldrh	r1, [sp, #16]
   11fa4:	add	r0, r0, r1, lsl #1
   11fa8:	add	r0, r0, #4
   11fac:	bl	136b0 <main@@Base+0x884>
   11fb0:	strh	r0, [fp, #-14]
   11fb4:	ldrsh	r0, [fp, #-14]
   11fb8:	cmp	r0, #0
   11fbc:	beq	11ff8 <verify_monster@@Base+0x1050>
   11fc0:	ldr	r0, [fp, #-8]
   11fc4:	ldrh	r1, [fp, #-14]
   11fc8:	add	r0, r0, r1
   11fcc:	str	r0, [fp, #-12]
   11fd0:	ldr	r0, [fp, #-12]
   11fd4:	add	r0, r0, #4
   11fd8:	ldr	r1, [fp, #-12]
   11fdc:	str	r0, [sp, #4]
   11fe0:	mov	r0, r1
   11fe4:	bl	13608 <main@@Base+0x7dc>
   11fe8:	ldr	r1, [sp, #4]
   11fec:	add	r0, r1, r0
   11ff0:	str	r0, [fp, #-4]
   11ff4:	b	12000 <verify_monster@@Base+0x1058>
   11ff8:	movw	r0, #0
   11ffc:	str	r0, [fp, #-4]
   12000:	ldr	r0, [fp, #-4]
   12004:	mov	sp, fp
   12008:	pop	{fp, pc}
   1200c:	andeq	r5, r0, r4, ror pc
   12010:	muleq	r0, r2, pc	; <UNPREDICTABLE>
   12014:	andeq	r6, r0, pc, lsl #2
   12018:	push	{fp, lr}
   1201c:	mov	fp, sp
   12020:	sub	sp, sp, #8
   12024:	str	r0, [sp, #4]
   12028:	ldr	r0, [sp, #4]
   1202c:	bl	1383c <main@@Base+0xa10>
   12030:	mov	sp, fp
   12034:	pop	{fp, pc}
   12038:	push	{fp, lr}
   1203c:	mov	fp, sp
   12040:	sub	sp, sp, #8
   12044:	str	r0, [sp, #4]
   12048:	str	r1, [sp]
   1204c:	ldr	r0, [sp, #4]
   12050:	bl	1383c <main@@Base+0xa10>
   12054:	ldr	r1, [sp]
   12058:	cmp	r0, r1
   1205c:	bls	12068 <verify_monster@@Base+0x10c0>
   12060:	b	12064 <verify_monster@@Base+0x10bc>
   12064:	b	12088 <verify_monster@@Base+0x10e0>
   12068:	ldr	r0, [pc, #52]	; 120a4 <verify_monster@@Base+0x10fc>
   1206c:	add	r0, pc, r0
   12070:	ldr	r1, [pc, #48]	; 120a8 <verify_monster@@Base+0x1100>
   12074:	add	r1, pc, r1
   12078:	ldr	r2, [pc, #44]	; 120ac <verify_monster@@Base+0x1104>
   1207c:	add	r3, pc, r2
   12080:	movw	r2, #395	; 0x18b
   12084:	bl	10ea8 <__assert_fail@plt>
   12088:	ldr	r0, [sp, #4]
   1208c:	ldr	r1, [sp]
   12090:	add	r0, r0, r1
   12094:	bl	1388c <main@@Base+0xa60>
   12098:	and	r0, r0, #255	; 0xff
   1209c:	mov	sp, fp
   120a0:	pop	{fp, pc}
   120a4:	andeq	r6, r0, r3, rrx
   120a8:	muleq	r0, r2, r0
   120ac:	andeq	r6, r0, r9, lsl #2
   120b0:	push	{fp, lr}
   120b4:	mov	fp, sp
   120b8:	sub	sp, sp, #32
   120bc:	str	r0, [fp, #-8]
   120c0:	movw	r0, #0
   120c4:	strh	r0, [fp, #-14]
   120c8:	ldr	r0, [fp, #-8]
   120cc:	movw	r1, #0
   120d0:	cmp	r0, r1
   120d4:	beq	120e0 <verify_monster@@Base+0x1138>
   120d8:	b	120dc <verify_monster@@Base+0x1134>
   120dc:	b	12100 <verify_monster@@Base+0x1158>
   120e0:	ldr	r0, [pc, #196]	; 121ac <verify_monster@@Base+0x1204>
   120e4:	add	r0, pc, r0
   120e8:	ldr	r1, [pc, #192]	; 121b0 <verify_monster@@Base+0x1208>
   120ec:	add	r1, pc, r1
   120f0:	ldr	r2, [pc, #188]	; 121b4 <verify_monster@@Base+0x120c>
   120f4:	add	r3, pc, r2
   120f8:	movw	r2, #712	; 0x2c8
   120fc:	bl	10ea8 <__assert_fail@plt>
   12100:	mov	r0, #10
   12104:	strh	r0, [sp, #16]
   12108:	ldr	r0, [fp, #-8]
   1210c:	str	r0, [sp, #8]
   12110:	bl	1368c <main@@Base+0x860>
   12114:	ldr	lr, [sp, #8]
   12118:	sub	r0, lr, r0
   1211c:	str	r0, [sp, #12]
   12120:	ldr	r0, [sp, #12]
   12124:	bl	136b0 <main@@Base+0x884>
   12128:	ldrh	lr, [sp, #16]
   1212c:	add	lr, lr, #3
   12130:	lsl	lr, lr, #1
   12134:	cmp	r0, lr
   12138:	bcc	12154 <verify_monster@@Base+0x11ac>
   1213c:	ldr	r0, [sp, #12]
   12140:	ldrh	r1, [sp, #16]
   12144:	add	r0, r0, r1, lsl #1
   12148:	add	r0, r0, #4
   1214c:	bl	136b0 <main@@Base+0x884>
   12150:	strh	r0, [fp, #-14]
   12154:	ldrsh	r0, [fp, #-14]
   12158:	cmp	r0, #0
   1215c:	beq	12198 <verify_monster@@Base+0x11f0>
   12160:	ldr	r0, [fp, #-8]
   12164:	ldrh	r1, [fp, #-14]
   12168:	add	r0, r0, r1
   1216c:	str	r0, [fp, #-12]
   12170:	ldr	r0, [fp, #-12]
   12174:	add	r0, r0, #4
   12178:	ldr	r1, [fp, #-12]
   1217c:	str	r0, [sp, #4]
   12180:	mov	r0, r1
   12184:	bl	13608 <main@@Base+0x7dc>
   12188:	ldr	r1, [sp, #4]
   1218c:	add	r0, r1, r0
   12190:	str	r0, [fp, #-4]
   12194:	b	121a0 <verify_monster@@Base+0x11f8>
   12198:	movw	r0, #0
   1219c:	str	r0, [fp, #-4]
   121a0:	ldr	r0, [fp, #-4]
   121a4:	mov	sp, fp
   121a8:	pop	{fp, pc}
   121ac:	ldrdeq	r5, [r0], -r4
   121b0:	strdeq	r5, [r0], -r2
   121b4:	ldrdeq	r6, [r0], -r3
   121b8:	push	{fp, lr}
   121bc:	mov	fp, sp
   121c0:	sub	sp, sp, #8
   121c4:	str	r0, [sp, #4]
   121c8:	ldr	r0, [sp, #4]
   121cc:	movw	r1, #0
   121d0:	cmp	r0, r1
   121d4:	beq	121f0 <verify_monster@@Base+0x1248>
   121d8:	ldr	r0, [sp, #4]
   121dc:	mvn	r1, #3
   121e0:	add	r0, r0, r1
   121e4:	bl	13608 <main@@Base+0x7dc>
   121e8:	str	r0, [sp]
   121ec:	b	121fc <verify_monster@@Base+0x1254>
   121f0:	movw	r0, #0
   121f4:	str	r0, [sp]
   121f8:	b	121fc <verify_monster@@Base+0x1254>
   121fc:	ldr	r0, [sp]
   12200:	mov	sp, fp
   12204:	pop	{fp, pc}
   12208:	push	{fp, lr}
   1220c:	mov	fp, sp
   12210:	sub	sp, sp, #16
   12214:	str	r0, [fp, #-4]
   12218:	str	r1, [sp, #8]
   1221c:	ldr	r0, [fp, #-4]
   12220:	ldr	r1, [sp, #8]
   12224:	add	r0, r0, r1, lsl #2
   12228:	str	r0, [sp, #4]
   1222c:	ldr	r0, [fp, #-4]
   12230:	bl	1383c <main@@Base+0xa10>
   12234:	ldr	r1, [sp, #8]
   12238:	cmp	r0, r1
   1223c:	bls	12248 <verify_monster@@Base+0x12a0>
   12240:	b	12244 <verify_monster@@Base+0x129c>
   12244:	b	12268 <verify_monster@@Base+0x12c0>
   12248:	ldr	r0, [pc, #64]	; 12290 <verify_monster@@Base+0x12e8>
   1224c:	add	r0, pc, r0
   12250:	ldr	r1, [pc, #60]	; 12294 <verify_monster@@Base+0x12ec>
   12254:	add	r1, pc, r1
   12258:	ldr	r2, [pc, #56]	; 12298 <verify_monster@@Base+0x12f0>
   1225c:	add	r3, pc, r2
   12260:	movw	r2, #108	; 0x6c
   12264:	bl	10ea8 <__assert_fail@plt>
   12268:	ldr	r0, [sp, #4]
   1226c:	ldr	r1, [sp, #4]
   12270:	str	r0, [sp]
   12274:	mov	r0, r1
   12278:	bl	13608 <main@@Base+0x7dc>
   1227c:	ldr	r1, [sp]
   12280:	add	r0, r1, r0
   12284:	add	r0, r0, #4
   12288:	mov	sp, fp
   1228c:	pop	{fp, pc}
   12290:	andeq	r5, r0, r3, lsl #29
   12294:			; <UNDEFINED> instruction: 0x00005eb2
   12298:	andeq	r5, r0, sp, asr #31
   1229c:	push	{fp, lr}
   122a0:	mov	fp, sp
   122a4:	sub	sp, sp, #24
   122a8:	str	r0, [fp, #-4]
   122ac:	movw	r0, #0
   122b0:	strh	r0, [fp, #-6]
   122b4:	ldr	r0, [fp, #-4]
   122b8:	movw	r1, #0
   122bc:	cmp	r0, r1
   122c0:	beq	122cc <verify_monster@@Base+0x1324>
   122c4:	b	122c8 <verify_monster@@Base+0x1320>
   122c8:	b	122ec <verify_monster@@Base+0x1344>
   122cc:	ldr	r0, [pc, #176]	; 12384 <verify_monster@@Base+0x13dc>
   122d0:	add	r0, pc, r0
   122d4:	ldr	r1, [pc, #172]	; 12388 <verify_monster@@Base+0x13e0>
   122d8:	add	r1, pc, r1
   122dc:	ldr	r2, [pc, #168]	; 1238c <verify_monster@@Base+0x13e4>
   122e0:	add	r3, pc, r2
   122e4:	movw	r2, #717	; 0x2cd
   122e8:	bl	10ea8 <__assert_fail@plt>
   122ec:	mov	r0, #7
   122f0:	strh	r0, [fp, #-8]
   122f4:	ldr	r0, [fp, #-4]
   122f8:	str	r0, [sp, #8]
   122fc:	bl	1368c <main@@Base+0x860>
   12300:	ldr	lr, [sp, #8]
   12304:	sub	r0, lr, r0
   12308:	str	r0, [sp, #12]
   1230c:	ldr	r0, [sp, #12]
   12310:	bl	136b0 <main@@Base+0x884>
   12314:	ldrh	lr, [fp, #-8]
   12318:	add	lr, lr, #3
   1231c:	lsl	lr, lr, #1
   12320:	cmp	r0, lr
   12324:	bcc	12340 <verify_monster@@Base+0x1398>
   12328:	ldr	r0, [sp, #12]
   1232c:	ldrh	r1, [fp, #-8]
   12330:	add	r0, r0, r1, lsl #1
   12334:	add	r0, r0, #4
   12338:	bl	136b0 <main@@Base+0x884>
   1233c:	strh	r0, [fp, #-6]
   12340:	ldrh	r0, [fp, #-6]
   12344:	cmp	r0, #0
   12348:	beq	12368 <verify_monster@@Base+0x13c0>
   1234c:	ldr	r0, [fp, #-4]
   12350:	ldrh	r1, [fp, #-6]
   12354:	add	r0, r0, r1
   12358:	bl	138c8 <main@@Base+0xa9c>
   1235c:	and	r0, r0, #255	; 0xff
   12360:	str	r0, [sp, #4]
   12364:	b	12374 <verify_monster@@Base+0x13cc>
   12368:	movw	r0, #0
   1236c:	str	r0, [sp, #4]
   12370:	b	12374 <verify_monster@@Base+0x13cc>
   12374:	ldr	r0, [sp, #4]
   12378:	and	r0, r0, #255	; 0xff
   1237c:	mov	sp, fp
   12380:	pop	{fp, pc}
   12384:	andeq	r5, r0, r8, ror #23
   12388:	andeq	r5, r0, r6, lsl #24
   1238c:	muleq	r0, sl, pc	; <UNPREDICTABLE>
   12390:	push	{fp, lr}
   12394:	mov	fp, sp
   12398:	sub	sp, sp, #32
   1239c:	str	r0, [fp, #-8]
   123a0:	movw	r0, #0
   123a4:	strh	r0, [fp, #-14]
   123a8:	ldr	r0, [fp, #-8]
   123ac:	movw	r1, #0
   123b0:	cmp	r0, r1
   123b4:	beq	123c0 <verify_monster@@Base+0x1418>
   123b8:	b	123bc <verify_monster@@Base+0x1414>
   123bc:	b	123e0 <verify_monster@@Base+0x1438>
   123c0:	ldr	r0, [pc, #192]	; 12488 <verify_monster@@Base+0x14e0>
   123c4:	add	r0, pc, r0
   123c8:	ldr	r1, [pc, #188]	; 1248c <verify_monster@@Base+0x14e4>
   123cc:	add	r1, pc, r1
   123d0:	ldr	r2, [pc, #184]	; 12490 <verify_monster@@Base+0x14e8>
   123d4:	add	r3, pc, r2
   123d8:	movw	r2, #717	; 0x2cd
   123dc:	bl	10ea8 <__assert_fail@plt>
   123e0:	mov	r0, #8
   123e4:	strh	r0, [sp, #16]
   123e8:	ldr	r0, [fp, #-8]
   123ec:	str	r0, [sp, #8]
   123f0:	bl	1368c <main@@Base+0x860>
   123f4:	ldr	lr, [sp, #8]
   123f8:	sub	r0, lr, r0
   123fc:	str	r0, [sp, #12]
   12400:	ldr	r0, [sp, #12]
   12404:	bl	136b0 <main@@Base+0x884>
   12408:	ldrh	lr, [sp, #16]
   1240c:	add	lr, lr, #3
   12410:	lsl	lr, lr, #1
   12414:	cmp	r0, lr
   12418:	bcc	12434 <verify_monster@@Base+0x148c>
   1241c:	ldr	r0, [sp, #12]
   12420:	ldrh	r1, [sp, #16]
   12424:	add	r0, r0, r1, lsl #1
   12428:	add	r0, r0, #4
   1242c:	bl	136b0 <main@@Base+0x884>
   12430:	strh	r0, [fp, #-14]
   12434:	ldrsh	r0, [fp, #-14]
   12438:	cmp	r0, #0
   1243c:	beq	12474 <verify_monster@@Base+0x14cc>
   12440:	ldr	r0, [fp, #-8]
   12444:	ldrh	r1, [fp, #-14]
   12448:	add	r0, r0, r1
   1244c:	str	r0, [fp, #-12]
   12450:	ldr	r0, [fp, #-12]
   12454:	ldr	r1, [fp, #-12]
   12458:	str	r0, [sp, #4]
   1245c:	mov	r0, r1
   12460:	bl	13608 <main@@Base+0x7dc>
   12464:	ldr	r1, [sp, #4]
   12468:	add	r0, r1, r0
   1246c:	str	r0, [fp, #-4]
   12470:	b	1247c <verify_monster@@Base+0x14d4>
   12474:	movw	r0, #0
   12478:	str	r0, [fp, #-4]
   1247c:	ldr	r0, [fp, #-4]
   12480:	mov	sp, fp
   12484:	pop	{fp, pc}
   12488:	strdeq	r5, [r0], -r4
   1248c:	andeq	r5, r0, r2, lsl fp
   12490:	andeq	r5, r0, r7, lsl #30
   12494:	push	{fp, lr}
   12498:	mov	fp, sp
   1249c:	sub	sp, sp, #32
   124a0:	str	r0, [fp, #-8]
   124a4:	movw	r0, #0
   124a8:	strh	r0, [fp, #-14]
   124ac:	ldr	r0, [fp, #-8]
   124b0:	movw	r1, #0
   124b4:	cmp	r0, r1
   124b8:	beq	124c4 <verify_monster@@Base+0x151c>
   124bc:	b	124c0 <verify_monster@@Base+0x1518>
   124c0:	b	124e4 <verify_monster@@Base+0x153c>
   124c4:	ldr	r0, [pc, #196]	; 12590 <verify_monster@@Base+0x15e8>
   124c8:	add	r0, pc, r0
   124cc:	ldr	r1, [pc, #192]	; 12594 <verify_monster@@Base+0x15ec>
   124d0:	add	r1, pc, r1
   124d4:	ldr	r2, [pc, #188]	; 12598 <verify_monster@@Base+0x15f0>
   124d8:	add	r3, pc, r2
   124dc:	movw	r2, #718	; 0x2ce
   124e0:	bl	10ea8 <__assert_fail@plt>
   124e4:	mov	r0, #9
   124e8:	strh	r0, [sp, #16]
   124ec:	ldr	r0, [fp, #-8]
   124f0:	str	r0, [sp, #8]
   124f4:	bl	1368c <main@@Base+0x860>
   124f8:	ldr	lr, [sp, #8]
   124fc:	sub	r0, lr, r0
   12500:	str	r0, [sp, #12]
   12504:	ldr	r0, [sp, #12]
   12508:	bl	136b0 <main@@Base+0x884>
   1250c:	ldrh	lr, [sp, #16]
   12510:	add	lr, lr, #3
   12514:	lsl	lr, lr, #1
   12518:	cmp	r0, lr
   1251c:	bcc	12538 <verify_monster@@Base+0x1590>
   12520:	ldr	r0, [sp, #12]
   12524:	ldrh	r1, [sp, #16]
   12528:	add	r0, r0, r1, lsl #1
   1252c:	add	r0, r0, #4
   12530:	bl	136b0 <main@@Base+0x884>
   12534:	strh	r0, [fp, #-14]
   12538:	ldrsh	r0, [fp, #-14]
   1253c:	cmp	r0, #0
   12540:	beq	1257c <verify_monster@@Base+0x15d4>
   12544:	ldr	r0, [fp, #-8]
   12548:	ldrh	r1, [fp, #-14]
   1254c:	add	r0, r0, r1
   12550:	str	r0, [fp, #-12]
   12554:	ldr	r0, [fp, #-12]
   12558:	add	r0, r0, #4
   1255c:	ldr	r1, [fp, #-12]
   12560:	str	r0, [sp, #4]
   12564:	mov	r0, r1
   12568:	bl	13608 <main@@Base+0x7dc>
   1256c:	ldr	r1, [sp, #4]
   12570:	add	r0, r1, r0
   12574:	str	r0, [fp, #-4]
   12578:	b	12584 <verify_monster@@Base+0x15dc>
   1257c:	movw	r0, #0
   12580:	str	r0, [fp, #-4]
   12584:	ldr	r0, [fp, #-4]
   12588:	mov	sp, fp
   1258c:	pop	{fp, pc}
   12590:	strdeq	r5, [r0], -r0
   12594:	andeq	r5, r0, lr, lsl #20
   12598:	andeq	r5, r0, r5, asr lr
   1259c:	push	{fp, lr}
   125a0:	mov	fp, sp
   125a4:	sub	sp, sp, #8
   125a8:	str	r0, [sp, #4]
   125ac:	ldr	r0, [sp, #4]
   125b0:	movw	r1, #0
   125b4:	cmp	r0, r1
   125b8:	beq	125d4 <verify_monster@@Base+0x162c>
   125bc:	ldr	r0, [sp, #4]
   125c0:	mvn	r1, #3
   125c4:	add	r0, r0, r1
   125c8:	bl	13608 <main@@Base+0x7dc>
   125cc:	str	r0, [sp]
   125d0:	b	125e0 <verify_monster@@Base+0x1638>
   125d4:	movw	r0, #0
   125d8:	str	r0, [sp]
   125dc:	b	125e0 <verify_monster@@Base+0x1638>
   125e0:	ldr	r0, [sp]
   125e4:	mov	sp, fp
   125e8:	pop	{fp, pc}
   125ec:	push	{fp, lr}
   125f0:	mov	fp, sp
   125f4:	sub	sp, sp, #8
   125f8:	str	r0, [sp, #4]
   125fc:	str	r1, [sp]
   12600:	ldr	r0, [sp, #4]
   12604:	bl	1383c <main@@Base+0xa10>
   12608:	ldr	r1, [sp]
   1260c:	cmp	r0, r1
   12610:	bls	1261c <verify_monster@@Base+0x1674>
   12614:	b	12618 <verify_monster@@Base+0x1670>
   12618:	b	1263c <verify_monster@@Base+0x1694>
   1261c:	ldr	r0, [pc, #44]	; 12650 <verify_monster@@Base+0x16a8>
   12620:	add	r0, pc, r0
   12624:	ldr	r1, [pc, #40]	; 12654 <verify_monster@@Base+0x16ac>
   12628:	add	r1, pc, r1
   1262c:	ldr	r2, [pc, #36]	; 12658 <verify_monster@@Base+0x16b0>
   12630:	add	r3, pc, r2
   12634:	movw	r2, #380	; 0x17c
   12638:	bl	10ea8 <__assert_fail@plt>
   1263c:	ldr	r0, [sp, #4]
   12640:	ldr	r1, [sp]
   12644:	add	r0, r0, r1, lsl #2
   12648:	mov	sp, fp
   1264c:	pop	{fp, pc}
   12650:	andeq	r5, r0, pc, lsr #21
   12654:			; <UNDEFINED> instruction: 0x000058b6
   12658:	andeq	r5, r0, r4, asr sp
   1265c:	push	{fp, lr}
   12660:	mov	fp, sp
   12664:	sub	sp, sp, #24
   12668:	str	r0, [fp, #-4]
   1266c:	movw	r0, #0
   12670:	strh	r0, [fp, #-6]
   12674:	ldr	r0, [fp, #-4]
   12678:	movw	r1, #0
   1267c:	cmp	r0, r1
   12680:	beq	1268c <verify_monster@@Base+0x16e4>
   12684:	b	12688 <verify_monster@@Base+0x16e0>
   12688:	b	126ac <verify_monster@@Base+0x1704>
   1268c:	ldr	r0, [pc, #168]	; 1273c <verify_monster@@Base+0x1794>
   12690:	add	r0, pc, r0
   12694:	ldr	r1, [pc, #164]	; 12740 <verify_monster@@Base+0x1798>
   12698:	add	r1, pc, r1
   1269c:	ldr	r2, [pc, #160]	; 12744 <verify_monster@@Base+0x179c>
   126a0:	add	r3, pc, r2
   126a4:	movw	r2, #724	; 0x2d4
   126a8:	bl	10ea8 <__assert_fail@plt>
   126ac:	mov	r0, #16
   126b0:	strh	r0, [fp, #-8]
   126b4:	ldr	r0, [fp, #-4]
   126b8:	str	r0, [sp, #8]
   126bc:	bl	1368c <main@@Base+0x860>
   126c0:	ldr	lr, [sp, #8]
   126c4:	sub	r0, lr, r0
   126c8:	str	r0, [sp, #12]
   126cc:	ldr	r0, [sp, #12]
   126d0:	bl	136b0 <main@@Base+0x884>
   126d4:	ldrh	lr, [fp, #-8]
   126d8:	add	lr, lr, #3
   126dc:	lsl	lr, lr, #1
   126e0:	cmp	r0, lr
   126e4:	bcc	12700 <verify_monster@@Base+0x1758>
   126e8:	ldr	r0, [sp, #12]
   126ec:	ldrh	r1, [fp, #-8]
   126f0:	add	r0, r0, r1, lsl #1
   126f4:	add	r0, r0, #4
   126f8:	bl	136b0 <main@@Base+0x884>
   126fc:	strh	r0, [fp, #-6]
   12700:	ldrh	r0, [fp, #-6]
   12704:	cmp	r0, #0
   12708:	beq	12724 <verify_monster@@Base+0x177c>
   1270c:	ldr	r0, [fp, #-4]
   12710:	ldrh	r1, [fp, #-6]
   12714:	add	r0, r0, r1
   12718:	bl	13904 <main@@Base+0xad8>
   1271c:	str	r0, [sp, #4]
   12720:	b	12730 <verify_monster@@Base+0x1788>
   12724:	movw	r0, #0
   12728:	str	r0, [sp, #4]
   1272c:	b	12730 <verify_monster@@Base+0x1788>
   12730:	ldr	r0, [sp, #4]
   12734:	mov	sp, fp
   12738:	pop	{fp, pc}
   1273c:	andeq	r5, r0, r8, lsr #16
   12740:	andeq	r5, r0, r6, asr #16
   12744:	andeq	r5, r0, pc, lsr sp
   12748:	push	{fp, lr}
   1274c:	mov	fp, sp
   12750:	sub	sp, sp, #24
   12754:	str	r0, [fp, #-4]
   12758:	movw	r0, #0
   1275c:	strh	r0, [fp, #-6]
   12760:	ldr	r0, [fp, #-4]
   12764:	movw	r1, #0
   12768:	cmp	r0, r1
   1276c:	beq	12778 <verify_monster@@Base+0x17d0>
   12770:	b	12774 <verify_monster@@Base+0x17cc>
   12774:	b	12798 <verify_monster@@Base+0x17f0>
   12778:	ldr	r0, [pc, #168]	; 12828 <verify_monster@@Base+0x1880>
   1277c:	add	r0, pc, r0
   12780:	ldr	r1, [pc, #164]	; 1282c <verify_monster@@Base+0x1884>
   12784:	add	r1, pc, r1
   12788:	ldr	r2, [pc, #160]	; 12830 <verify_monster@@Base+0x1888>
   1278c:	add	r3, pc, r2
   12790:	movw	r2, #725	; 0x2d5
   12794:	bl	10ea8 <__assert_fail@plt>
   12798:	mov	r0, #17
   1279c:	strh	r0, [fp, #-8]
   127a0:	ldr	r0, [fp, #-4]
   127a4:	str	r0, [sp, #8]
   127a8:	bl	1368c <main@@Base+0x860>
   127ac:	ldr	lr, [sp, #8]
   127b0:	sub	r0, lr, r0
   127b4:	str	r0, [sp, #12]
   127b8:	ldr	r0, [sp, #12]
   127bc:	bl	136b0 <main@@Base+0x884>
   127c0:	ldrh	lr, [fp, #-8]
   127c4:	add	lr, lr, #3
   127c8:	lsl	lr, lr, #1
   127cc:	cmp	r0, lr
   127d0:	bcc	127ec <verify_monster@@Base+0x1844>
   127d4:	ldr	r0, [sp, #12]
   127d8:	ldrh	r1, [fp, #-8]
   127dc:	add	r0, r0, r1, lsl #1
   127e0:	add	r0, r0, #4
   127e4:	bl	136b0 <main@@Base+0x884>
   127e8:	strh	r0, [fp, #-6]
   127ec:	ldrh	r0, [fp, #-6]
   127f0:	cmp	r0, #0
   127f4:	beq	12810 <verify_monster@@Base+0x1868>
   127f8:	ldr	r0, [fp, #-4]
   127fc:	ldrh	r1, [fp, #-6]
   12800:	add	r0, r0, r1
   12804:	bl	1393c <main@@Base+0xb10>
   12808:	str	r0, [sp, #4]
   1280c:	b	1281c <verify_monster@@Base+0x1874>
   12810:	movw	r0, #0
   12814:	str	r0, [sp, #4]
   12818:	b	1281c <verify_monster@@Base+0x1874>
   1281c:	ldr	r0, [sp, #4]
   12820:	mov	sp, fp
   12824:	pop	{fp, pc}
   12828:	andeq	r5, r0, ip, lsr r7
   1282c:	andeq	r5, r0, sl, asr r7
   12830:	andeq	r5, r0, r3, lsr #25
   12834:	push	{fp, lr}
   12838:	mov	fp, sp
   1283c:	sub	sp, sp, #32
   12840:	str	r0, [fp, #-4]
   12844:	movw	r0, #0
   12848:	strh	r0, [fp, #-6]
   1284c:	ldr	r0, [fp, #-4]
   12850:	movw	r1, #0
   12854:	cmp	r0, r1
   12858:	beq	12864 <verify_monster@@Base+0x18bc>
   1285c:	b	12860 <verify_monster@@Base+0x18b8>
   12860:	b	12884 <verify_monster@@Base+0x18dc>
   12864:	ldr	r0, [pc, #196]	; 12930 <verify_monster@@Base+0x1988>
   12868:	add	r0, pc, r0
   1286c:	ldr	r1, [pc, #192]	; 12934 <verify_monster@@Base+0x198c>
   12870:	add	r1, pc, r1
   12874:	ldr	r2, [pc, #188]	; 12938 <verify_monster@@Base+0x1990>
   12878:	add	r3, pc, r2
   1287c:	movw	r2, #726	; 0x2d6
   12880:	bl	10ea8 <__assert_fail@plt>
   12884:	mov	r0, #18
   12888:	strh	r0, [fp, #-8]
   1288c:	ldr	r0, [fp, #-4]
   12890:	str	r0, [sp, #16]
   12894:	bl	1368c <main@@Base+0x860>
   12898:	ldr	lr, [sp, #16]
   1289c:	sub	r0, lr, r0
   128a0:	str	r0, [fp, #-12]
   128a4:	ldr	r0, [fp, #-12]
   128a8:	bl	136b0 <main@@Base+0x884>
   128ac:	ldrh	lr, [fp, #-8]
   128b0:	add	lr, lr, #3
   128b4:	lsl	lr, lr, #1
   128b8:	cmp	r0, lr
   128bc:	bcc	128d8 <verify_monster@@Base+0x1930>
   128c0:	ldr	r0, [fp, #-12]
   128c4:	ldrh	r1, [fp, #-8]
   128c8:	add	r0, r0, r1, lsl #1
   128cc:	add	r0, r0, #4
   128d0:	bl	136b0 <main@@Base+0x884>
   128d4:	strh	r0, [fp, #-6]
   128d8:	ldrh	r0, [fp, #-6]
   128dc:	cmp	r0, #0
   128e0:	beq	12900 <verify_monster@@Base+0x1958>
   128e4:	ldr	r0, [fp, #-4]
   128e8:	ldrh	r1, [fp, #-6]
   128ec:	add	r0, r0, r1
   128f0:	bl	13974 <main@@Base+0xb48>
   128f4:	str	r0, [sp, #12]
   128f8:	str	r1, [sp, #8]
   128fc:	b	12914 <verify_monster@@Base+0x196c>
   12900:	mov	r0, #0
   12904:	mov	r1, r0
   12908:	str	r1, [sp, #12]
   1290c:	str	r0, [sp, #8]
   12910:	b	12914 <verify_monster@@Base+0x196c>
   12914:	ldr	r0, [sp, #8]
   12918:	ldr	r1, [sp, #12]
   1291c:	str	r0, [sp, #4]
   12920:	mov	r0, r1
   12924:	ldr	r1, [sp, #4]
   12928:	mov	sp, fp
   1292c:	pop	{fp, pc}
   12930:	andeq	r5, r0, r0, asr r6
   12934:	andeq	r5, r0, lr, ror #12
   12938:	andeq	r5, r0, r8, lsl #24
   1293c:	push	{fp, lr}
   12940:	mov	fp, sp
   12944:	sub	sp, sp, #32
   12948:	str	r0, [fp, #-4]
   1294c:	movw	r0, #0
   12950:	strh	r0, [fp, #-6]
   12954:	ldr	r0, [fp, #-4]
   12958:	movw	r1, #0
   1295c:	cmp	r0, r1
   12960:	beq	1296c <verify_monster@@Base+0x19c4>
   12964:	b	12968 <verify_monster@@Base+0x19c0>
   12968:	b	1298c <verify_monster@@Base+0x19e4>
   1296c:	ldr	r0, [pc, #196]	; 12a38 <verify_monster@@Base+0x1a90>
   12970:	add	r0, pc, r0
   12974:	ldr	r1, [pc, #192]	; 12a3c <verify_monster@@Base+0x1a94>
   12978:	add	r1, pc, r1
   1297c:	ldr	r2, [pc, #188]	; 12a40 <verify_monster@@Base+0x1a98>
   12980:	add	r3, pc, r2
   12984:	movw	r2, #727	; 0x2d7
   12988:	bl	10ea8 <__assert_fail@plt>
   1298c:	mov	r0, #19
   12990:	strh	r0, [fp, #-8]
   12994:	ldr	r0, [fp, #-4]
   12998:	str	r0, [sp, #16]
   1299c:	bl	1368c <main@@Base+0x860>
   129a0:	ldr	lr, [sp, #16]
   129a4:	sub	r0, lr, r0
   129a8:	str	r0, [fp, #-12]
   129ac:	ldr	r0, [fp, #-12]
   129b0:	bl	136b0 <main@@Base+0x884>
   129b4:	ldrh	lr, [fp, #-8]
   129b8:	add	lr, lr, #3
   129bc:	lsl	lr, lr, #1
   129c0:	cmp	r0, lr
   129c4:	bcc	129e0 <verify_monster@@Base+0x1a38>
   129c8:	ldr	r0, [fp, #-12]
   129cc:	ldrh	r1, [fp, #-8]
   129d0:	add	r0, r0, r1, lsl #1
   129d4:	add	r0, r0, #4
   129d8:	bl	136b0 <main@@Base+0x884>
   129dc:	strh	r0, [fp, #-6]
   129e0:	ldrh	r0, [fp, #-6]
   129e4:	cmp	r0, #0
   129e8:	beq	12a08 <verify_monster@@Base+0x1a60>
   129ec:	ldr	r0, [fp, #-4]
   129f0:	ldrh	r1, [fp, #-6]
   129f4:	add	r0, r0, r1
   129f8:	bl	139c4 <main@@Base+0xb98>
   129fc:	str	r0, [sp, #12]
   12a00:	str	r1, [sp, #8]
   12a04:	b	12a1c <verify_monster@@Base+0x1a74>
   12a08:	mov	r0, #0
   12a0c:	mov	r1, r0
   12a10:	str	r1, [sp, #12]
   12a14:	str	r0, [sp, #8]
   12a18:	b	12a1c <verify_monster@@Base+0x1a74>
   12a1c:	ldr	r0, [sp, #8]
   12a20:	ldr	r1, [sp, #12]
   12a24:	str	r0, [sp, #4]
   12a28:	mov	r0, r1
   12a2c:	ldr	r1, [sp, #4]
   12a30:	mov	sp, fp
   12a34:	pop	{fp, pc}
   12a38:	andeq	r5, r0, r8, asr #10
   12a3c:	andeq	r5, r0, r6, ror #10
   12a40:	andeq	r5, r0, r0, asr fp
   12a44:	push	{fp, lr}
   12a48:	mov	fp, sp
   12a4c:	sub	sp, sp, #24
   12a50:	str	r0, [fp, #-4]
   12a54:	movw	r0, #0
   12a58:	strh	r0, [fp, #-6]
   12a5c:	ldr	r0, [fp, #-4]
   12a60:	movw	r1, #0
   12a64:	cmp	r0, r1
   12a68:	beq	12a74 <verify_monster@@Base+0x1acc>
   12a6c:	b	12a70 <verify_monster@@Base+0x1ac8>
   12a70:	b	12a94 <verify_monster@@Base+0x1aec>
   12a74:	ldr	r0, [pc, #168]	; 12b24 <verify_monster@@Base+0x1b7c>
   12a78:	add	r0, pc, r0
   12a7c:	ldr	r1, [pc, #164]	; 12b28 <verify_monster@@Base+0x1b80>
   12a80:	add	r1, pc, r1
   12a84:	ldr	r2, [pc, #160]	; 12b2c <verify_monster@@Base+0x1b84>
   12a88:	add	r3, pc, r2
   12a8c:	movw	r2, #728	; 0x2d8
   12a90:	bl	10ea8 <__assert_fail@plt>
   12a94:	mov	r0, #20
   12a98:	strh	r0, [fp, #-8]
   12a9c:	ldr	r0, [fp, #-4]
   12aa0:	str	r0, [sp, #8]
   12aa4:	bl	1368c <main@@Base+0x860>
   12aa8:	ldr	lr, [sp, #8]
   12aac:	sub	r0, lr, r0
   12ab0:	str	r0, [sp, #12]
   12ab4:	ldr	r0, [sp, #12]
   12ab8:	bl	136b0 <main@@Base+0x884>
   12abc:	ldrh	lr, [fp, #-8]
   12ac0:	add	lr, lr, #3
   12ac4:	lsl	lr, lr, #1
   12ac8:	cmp	r0, lr
   12acc:	bcc	12ae8 <verify_monster@@Base+0x1b40>
   12ad0:	ldr	r0, [sp, #12]
   12ad4:	ldrh	r1, [fp, #-8]
   12ad8:	add	r0, r0, r1, lsl #1
   12adc:	add	r0, r0, #4
   12ae0:	bl	136b0 <main@@Base+0x884>
   12ae4:	strh	r0, [fp, #-6]
   12ae8:	ldrh	r0, [fp, #-6]
   12aec:	cmp	r0, #0
   12af0:	beq	12b0c <verify_monster@@Base+0x1b64>
   12af4:	ldr	r0, [fp, #-4]
   12af8:	ldrh	r1, [fp, #-6]
   12afc:	add	r0, r0, r1
   12b00:	bl	13904 <main@@Base+0xad8>
   12b04:	str	r0, [sp, #4]
   12b08:	b	12b18 <verify_monster@@Base+0x1b70>
   12b0c:	movw	r0, #0
   12b10:	str	r0, [sp, #4]
   12b14:	b	12b18 <verify_monster@@Base+0x1b70>
   12b18:	ldr	r0, [sp, #4]
   12b1c:	mov	sp, fp
   12b20:	pop	{fp, pc}
   12b24:	andeq	r5, r0, r0, asr #8
   12b28:	andeq	r5, r0, lr, asr r4
   12b2c:	muleq	r0, r9, sl
   12b30:	push	{fp, lr}
   12b34:	mov	fp, sp
   12b38:	sub	sp, sp, #24
   12b3c:	str	r0, [fp, #-4]
   12b40:	movw	r0, #0
   12b44:	strh	r0, [fp, #-6]
   12b48:	ldr	r0, [fp, #-4]
   12b4c:	movw	r1, #0
   12b50:	cmp	r0, r1
   12b54:	beq	12b60 <verify_monster@@Base+0x1bb8>
   12b58:	b	12b5c <verify_monster@@Base+0x1bb4>
   12b5c:	b	12b80 <verify_monster@@Base+0x1bd8>
   12b60:	ldr	r0, [pc, #168]	; 12c10 <verify_monster@@Base+0x1c68>
   12b64:	add	r0, pc, r0
   12b68:	ldr	r1, [pc, #164]	; 12c14 <verify_monster@@Base+0x1c6c>
   12b6c:	add	r1, pc, r1
   12b70:	ldr	r2, [pc, #160]	; 12c18 <verify_monster@@Base+0x1c70>
   12b74:	add	r3, pc, r2
   12b78:	movw	r2, #729	; 0x2d9
   12b7c:	bl	10ea8 <__assert_fail@plt>
   12b80:	mov	r0, #21
   12b84:	strh	r0, [fp, #-8]
   12b88:	ldr	r0, [fp, #-4]
   12b8c:	str	r0, [sp, #8]
   12b90:	bl	1368c <main@@Base+0x860>
   12b94:	ldr	lr, [sp, #8]
   12b98:	sub	r0, lr, r0
   12b9c:	str	r0, [sp, #12]
   12ba0:	ldr	r0, [sp, #12]
   12ba4:	bl	136b0 <main@@Base+0x884>
   12ba8:	ldrh	lr, [fp, #-8]
   12bac:	add	lr, lr, #3
   12bb0:	lsl	lr, lr, #1
   12bb4:	cmp	r0, lr
   12bb8:	bcc	12bd4 <verify_monster@@Base+0x1c2c>
   12bbc:	ldr	r0, [sp, #12]
   12bc0:	ldrh	r1, [fp, #-8]
   12bc4:	add	r0, r0, r1, lsl #1
   12bc8:	add	r0, r0, #4
   12bcc:	bl	136b0 <main@@Base+0x884>
   12bd0:	strh	r0, [fp, #-6]
   12bd4:	ldrh	r0, [fp, #-6]
   12bd8:	cmp	r0, #0
   12bdc:	beq	12bf8 <verify_monster@@Base+0x1c50>
   12be0:	ldr	r0, [fp, #-4]
   12be4:	ldrh	r1, [fp, #-6]
   12be8:	add	r0, r0, r1
   12bec:	bl	1393c <main@@Base+0xb10>
   12bf0:	str	r0, [sp, #4]
   12bf4:	b	12c04 <verify_monster@@Base+0x1c5c>
   12bf8:	movw	r0, #0
   12bfc:	str	r0, [sp, #4]
   12c00:	b	12c04 <verify_monster@@Base+0x1c5c>
   12c04:	ldr	r0, [sp, #4]
   12c08:	mov	sp, fp
   12c0c:	pop	{fp, pc}
   12c10:	andeq	r5, r0, r4, asr r3
   12c14:	andeq	r5, r0, r2, ror r3
   12c18:	strdeq	r5, [r0], -lr
   12c1c:	push	{fp, lr}
   12c20:	mov	fp, sp
   12c24:	sub	sp, sp, #32
   12c28:	str	r0, [fp, #-4]
   12c2c:	movw	r0, #0
   12c30:	strh	r0, [fp, #-6]
   12c34:	ldr	r0, [fp, #-4]
   12c38:	movw	r1, #0
   12c3c:	cmp	r0, r1
   12c40:	beq	12c4c <verify_monster@@Base+0x1ca4>
   12c44:	b	12c48 <verify_monster@@Base+0x1ca0>
   12c48:	b	12c6c <verify_monster@@Base+0x1cc4>
   12c4c:	ldr	r0, [pc, #196]	; 12d18 <verify_monster@@Base+0x1d70>
   12c50:	add	r0, pc, r0
   12c54:	ldr	r1, [pc, #192]	; 12d1c <verify_monster@@Base+0x1d74>
   12c58:	add	r1, pc, r1
   12c5c:	ldr	r2, [pc, #188]	; 12d20 <verify_monster@@Base+0x1d78>
   12c60:	add	r3, pc, r2
   12c64:	movw	r2, #730	; 0x2da
   12c68:	bl	10ea8 <__assert_fail@plt>
   12c6c:	mov	r0, #22
   12c70:	strh	r0, [fp, #-8]
   12c74:	ldr	r0, [fp, #-4]
   12c78:	str	r0, [sp, #16]
   12c7c:	bl	1368c <main@@Base+0x860>
   12c80:	ldr	lr, [sp, #16]
   12c84:	sub	r0, lr, r0
   12c88:	str	r0, [fp, #-12]
   12c8c:	ldr	r0, [fp, #-12]
   12c90:	bl	136b0 <main@@Base+0x884>
   12c94:	ldrh	lr, [fp, #-8]
   12c98:	add	lr, lr, #3
   12c9c:	lsl	lr, lr, #1
   12ca0:	cmp	r0, lr
   12ca4:	bcc	12cc0 <verify_monster@@Base+0x1d18>
   12ca8:	ldr	r0, [fp, #-12]
   12cac:	ldrh	r1, [fp, #-8]
   12cb0:	add	r0, r0, r1, lsl #1
   12cb4:	add	r0, r0, #4
   12cb8:	bl	136b0 <main@@Base+0x884>
   12cbc:	strh	r0, [fp, #-6]
   12cc0:	ldrh	r0, [fp, #-6]
   12cc4:	cmp	r0, #0
   12cc8:	beq	12ce8 <verify_monster@@Base+0x1d40>
   12ccc:	ldr	r0, [fp, #-4]
   12cd0:	ldrh	r1, [fp, #-6]
   12cd4:	add	r0, r0, r1
   12cd8:	bl	13974 <main@@Base+0xb48>
   12cdc:	str	r0, [sp, #12]
   12ce0:	str	r1, [sp, #8]
   12ce4:	b	12cfc <verify_monster@@Base+0x1d54>
   12ce8:	mov	r0, #0
   12cec:	mov	r1, r0
   12cf0:	str	r1, [sp, #12]
   12cf4:	str	r0, [sp, #8]
   12cf8:	b	12cfc <verify_monster@@Base+0x1d54>
   12cfc:	ldr	r0, [sp, #8]
   12d00:	ldr	r1, [sp, #12]
   12d04:	str	r0, [sp, #4]
   12d08:	mov	r0, r1
   12d0c:	ldr	r1, [sp, #4]
   12d10:	mov	sp, fp
   12d14:	pop	{fp, pc}
   12d18:	andeq	r5, r0, r8, ror #4
   12d1c:	andeq	r5, r0, r6, lsl #5
   12d20:	andeq	r5, r0, r4, ror #18
   12d24:	push	{fp, lr}
   12d28:	mov	fp, sp
   12d2c:	sub	sp, sp, #32
   12d30:	str	r0, [fp, #-4]
   12d34:	movw	r0, #0
   12d38:	strh	r0, [fp, #-6]
   12d3c:	ldr	r0, [fp, #-4]
   12d40:	movw	r1, #0
   12d44:	cmp	r0, r1
   12d48:	beq	12d54 <verify_monster@@Base+0x1dac>
   12d4c:	b	12d50 <verify_monster@@Base+0x1da8>
   12d50:	b	12d74 <verify_monster@@Base+0x1dcc>
   12d54:	ldr	r0, [pc, #196]	; 12e20 <verify_monster@@Base+0x1e78>
   12d58:	add	r0, pc, r0
   12d5c:	ldr	r1, [pc, #192]	; 12e24 <verify_monster@@Base+0x1e7c>
   12d60:	add	r1, pc, r1
   12d64:	ldr	r2, [pc, #188]	; 12e28 <verify_monster@@Base+0x1e80>
   12d68:	add	r3, pc, r2
   12d6c:	movw	r2, #731	; 0x2db
   12d70:	bl	10ea8 <__assert_fail@plt>
   12d74:	mov	r0, #23
   12d78:	strh	r0, [fp, #-8]
   12d7c:	ldr	r0, [fp, #-4]
   12d80:	str	r0, [sp, #16]
   12d84:	bl	1368c <main@@Base+0x860>
   12d88:	ldr	lr, [sp, #16]
   12d8c:	sub	r0, lr, r0
   12d90:	str	r0, [fp, #-12]
   12d94:	ldr	r0, [fp, #-12]
   12d98:	bl	136b0 <main@@Base+0x884>
   12d9c:	ldrh	lr, [fp, #-8]
   12da0:	add	lr, lr, #3
   12da4:	lsl	lr, lr, #1
   12da8:	cmp	r0, lr
   12dac:	bcc	12dc8 <verify_monster@@Base+0x1e20>
   12db0:	ldr	r0, [fp, #-12]
   12db4:	ldrh	r1, [fp, #-8]
   12db8:	add	r0, r0, r1, lsl #1
   12dbc:	add	r0, r0, #4
   12dc0:	bl	136b0 <main@@Base+0x884>
   12dc4:	strh	r0, [fp, #-6]
   12dc8:	ldrh	r0, [fp, #-6]
   12dcc:	cmp	r0, #0
   12dd0:	beq	12df0 <verify_monster@@Base+0x1e48>
   12dd4:	ldr	r0, [fp, #-4]
   12dd8:	ldrh	r1, [fp, #-6]
   12ddc:	add	r0, r0, r1
   12de0:	bl	139c4 <main@@Base+0xb98>
   12de4:	str	r0, [sp, #12]
   12de8:	str	r1, [sp, #8]
   12dec:	b	12e04 <verify_monster@@Base+0x1e5c>
   12df0:	mov	r0, #0
   12df4:	mov	r1, r0
   12df8:	str	r1, [sp, #12]
   12dfc:	str	r0, [sp, #8]
   12e00:	b	12e04 <verify_monster@@Base+0x1e5c>
   12e04:	ldr	r0, [sp, #8]
   12e08:	ldr	r1, [sp, #12]
   12e0c:	str	r0, [sp, #4]
   12e10:	mov	r0, r1
   12e14:	ldr	r1, [sp, #4]
   12e18:	mov	sp, fp
   12e1c:	pop	{fp, pc}
   12e20:	andeq	r5, r0, r0, ror #2
   12e24:	andeq	r5, r0, lr, ror r1
   12e28:	andeq	r5, r0, sp, lsr #17

00012e2c <main@@Base>:
   12e2c:	push	{fp, lr}
   12e30:	mov	fp, sp
   12e34:	sub	sp, sp, #56	; 0x38
   12e38:	movw	r2, #0
   12e3c:	str	r2, [fp, #-4]
   12e40:	str	r0, [fp, #-8]
   12e44:	str	r1, [fp, #-12]
   12e48:	ldr	r0, [fp, #-8]
   12e4c:	cmp	r0, #1
   12e50:	beq	12e88 <main@@Base+0x5c>
   12e54:	ldr	r0, [fp, #-8]
   12e58:	cmp	r0, #2
   12e5c:	beq	12e88 <main@@Base+0x5c>
   12e60:	ldr	r0, [pc, #500]	; 1305c <main@@Base+0x230>
   12e64:	add	r1, pc, r0
   12e68:	ldr	r0, [pc, #496]	; 13060 <main@@Base+0x234>
   12e6c:	ldr	r0, [pc, r0]
   12e70:	ldr	r0, [r0]
   12e74:	bl	10e60 <fprintf@plt>
   12e78:	movw	r1, #1
   12e7c:	str	r0, [sp, #24]
   12e80:	mov	r0, r1
   12e84:	bl	10e54 <exit@plt>
   12e88:	ldr	r0, [fp, #-8]
   12e8c:	cmp	r0, #2
   12e90:	bne	12ea8 <main@@Base+0x7c>
   12e94:	ldr	r0, [pc, #400]	; 1302c <main@@Base+0x200>
   12e98:	ldr	r0, [pc, r0]
   12e9c:	ldr	r1, [fp, #-12]
   12ea0:	ldr	r1, [r1, #4]
   12ea4:	str	r1, [r0]
   12ea8:	ldr	r0, [pc, #384]	; 13030 <main@@Base+0x204>
   12eac:	ldr	r0, [pc, r0]
   12eb0:	ldr	r0, [r0]
   12eb4:	movw	r1, #1024	; 0x400
   12eb8:	sub	r2, fp, #20
   12ebc:	bl	13064 <main@@Base+0x238>
   12ec0:	str	r0, [sp, #28]
   12ec4:	ldr	r0, [fp, #-20]	; 0xffffffec
   12ec8:	add	r0, r0, #256	; 0x100
   12ecc:	sub	r0, r0, #1
   12ed0:	mvn	r1, #255	; 0xff
   12ed4:	and	r1, r0, r1
   12ed8:	movw	r0, #256	; 0x100
   12edc:	bl	13254 <main@@Base+0x428>
   12ee0:	str	r0, [fp, #-24]	; 0xffffffe8
   12ee4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12ee8:	ldr	r1, [sp, #28]
   12eec:	ldr	r2, [fp, #-20]	; 0xffffffec
   12ef0:	bl	10e00 <memcpy@plt>
   12ef4:	ldr	r0, [sp, #28]
   12ef8:	bl	10df4 <free@plt>
   12efc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12f00:	movw	r1, #0
   12f04:	cmp	r0, r1
   12f08:	bne	12f4c <main@@Base+0x120>
   12f0c:	ldr	r0, [pc, #288]	; 13034 <main@@Base+0x208>
   12f10:	add	r1, pc, r0
   12f14:	ldr	r0, [pc, #284]	; 13038 <main@@Base+0x20c>
   12f18:	ldr	r0, [pc, r0]
   12f1c:	ldr	r2, [pc, #280]	; 1303c <main@@Base+0x210>
   12f20:	ldr	r2, [pc, r2]
   12f24:	ldr	r2, [r2]
   12f28:	ldr	r0, [r0]
   12f2c:	str	r0, [sp, #20]
   12f30:	mov	r0, r2
   12f34:	ldr	r2, [sp, #20]
   12f38:	bl	10e60 <fprintf@plt>
   12f3c:	mvn	r1, #0
   12f40:	str	r1, [fp, #-4]
   12f44:	str	r0, [sp, #16]
   12f48:	b	13020 <main@@Base+0x1f4>
   12f4c:	ldr	r0, [pc, #240]	; 13044 <main@@Base+0x218>
   12f50:	add	r0, pc, r0
   12f54:	ldr	r1, [pc, #236]	; 13048 <main@@Base+0x21c>
   12f58:	ldr	r1, [pc, r1]
   12f5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12f60:	ldr	r3, [fp, #-20]	; 0xffffffec
   12f64:	ldr	r1, [r1]
   12f68:	str	r1, [sp, #12]
   12f6c:	mov	r1, r2
   12f70:	mov	r2, r3
   12f74:	ldr	r3, [sp, #12]
   12f78:	bl	132d0 <main@@Base+0x4a4>
   12f7c:	ldr	r0, [pc, #188]	; 13040 <main@@Base+0x214>
   12f80:	add	r2, pc, r0
   12f84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12f88:	ldr	r1, [fp, #-20]	; 0xffffffec
   12f8c:	bl	134e0 <main@@Base+0x6b4>
   12f90:	movw	r1, #0
   12f94:	cmp	r1, r0
   12f98:	beq	12fc4 <main@@Base+0x198>
   12f9c:	ldr	r0, [pc, #176]	; 13054 <main@@Base+0x228>
   12fa0:	add	r1, pc, r0
   12fa4:	ldr	r0, [pc, #172]	; 13058 <main@@Base+0x22c>
   12fa8:	ldr	r0, [pc, r0]
   12fac:	ldr	r0, [r0]
   12fb0:	bl	10e60 <fprintf@plt>
   12fb4:	mvn	r1, #0
   12fb8:	str	r1, [fp, #-16]
   12fbc:	str	r0, [sp, #8]
   12fc0:	b	13010 <main@@Base+0x1e4>
   12fc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12fc8:	ldr	r1, [fp, #-20]	; 0xffffffec
   12fcc:	bl	1351c <main@@Base+0x6f0>
   12fd0:	movw	r1, #0
   12fd4:	cmp	r1, r0
   12fd8:	beq	13004 <main@@Base+0x1d8>
   12fdc:	ldr	r0, [pc, #104]	; 1304c <main@@Base+0x220>
   12fe0:	add	r1, pc, r0
   12fe4:	ldr	r0, [pc, #100]	; 13050 <main@@Base+0x224>
   12fe8:	ldr	r0, [pc, r0]
   12fec:	ldr	r0, [r0]
   12ff0:	bl	10e60 <fprintf@plt>
   12ff4:	mvn	r1, #0
   12ff8:	str	r1, [fp, #-16]
   12ffc:	str	r0, [sp, #4]
   13000:	b	13010 <main@@Base+0x1e4>
   13004:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13008:	bl	10fa8 <verify_monster@@Base>
   1300c:	str	r0, [fp, #-16]
   13010:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13014:	bl	10df4 <free@plt>
   13018:	ldr	r0, [fp, #-16]
   1301c:	str	r0, [fp, #-4]
   13020:	ldr	r0, [fp, #-4]
   13024:	mov	sp, fp
   13028:	pop	{fp, pc}
   1302c:	andeq	r6, r1, r0, asr #3
   13030:	andeq	r6, r1, ip, lsr #3
   13034:	strdeq	r4, [r0], -lr
   13038:	andeq	r6, r1, r0, asr #2
   1303c:	andeq	r6, r1, r0, lsr r1
   13040:			; <UNDEFINED> instruction: 0x00004eb3
   13044:	andeq	r4, r0, r8, lsl r9
   13048:	strdeq	r6, [r1], -r8
   1304c:	andeq	r4, r0, pc, ror lr
   13050:	andeq	r6, r1, r8, rrx
   13054:	muleq	r0, r8, lr
   13058:	andeq	r6, r1, r8, lsr #1
   1305c:	andeq	r4, r0, sl, ror #30
   13060:	andeq	r6, r1, r4, ror #3
   13064:	push	{fp, lr}
   13068:	mov	fp, sp
   1306c:	sub	sp, sp, #64	; 0x40
   13070:	str	r0, [fp, #-8]
   13074:	str	r1, [fp, #-12]
   13078:	str	r2, [fp, #-16]
   1307c:	ldr	r0, [fp, #-16]
   13080:	movw	r1, #0
   13084:	cmp	r0, r1
   13088:	beq	13098 <main@@Base+0x26c>
   1308c:	ldr	r0, [fp, #-16]
   13090:	str	r0, [sp, #20]
   13094:	b	130a4 <main@@Base+0x278>
   13098:	add	r0, sp, #28
   1309c:	str	r0, [sp, #20]
   130a0:	b	130a4 <main@@Base+0x278>
   130a4:	ldr	r0, [sp, #20]
   130a8:	ldr	r1, [pc, #416]	; 13250 <main@@Base+0x424>
   130ac:	add	r1, pc, r1
   130b0:	str	r0, [fp, #-16]
   130b4:	ldr	r0, [fp, #-8]
   130b8:	bl	10de8 <fopen@plt>
   130bc:	str	r0, [fp, #-20]	; 0xffffffec
   130c0:	movw	r0, #0
   130c4:	str	r0, [fp, #-24]	; 0xffffffe8
   130c8:	str	r0, [sp, #24]
   130cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   130d0:	cmp	r1, r0
   130d4:	bne	130dc <main@@Base+0x2b0>
   130d8:	b	131fc <main@@Base+0x3d0>
   130dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   130e0:	movw	r1, #0
   130e4:	movw	r2, #2
   130e8:	bl	10e90 <fseek@plt>
   130ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   130f0:	str	r0, [sp, #16]
   130f4:	mov	r0, r1
   130f8:	bl	10e0c <ftell@plt>
   130fc:	str	r0, [fp, #-24]	; 0xffffffe8
   13100:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13104:	ldr	r1, [fp, #-16]
   13108:	str	r0, [r1]
   1310c:	ldr	r0, [fp, #-12]
   13110:	cmp	r0, #0
   13114:	bls	1312c <main@@Base+0x300>
   13118:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1311c:	ldr	r1, [fp, #-12]
   13120:	cmp	r0, r1
   13124:	bls	1312c <main@@Base+0x300>
   13128:	b	131fc <main@@Base+0x3d0>
   1312c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13130:	bl	10e18 <rewind@plt>
   13134:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13138:	cmp	r0, #0
   1313c:	beq	1314c <main@@Base+0x320>
   13140:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13144:	str	r0, [sp, #12]
   13148:	b	13158 <main@@Base+0x32c>
   1314c:	movw	r0, #1
   13150:	str	r0, [sp, #12]
   13154:	b	13158 <main@@Base+0x32c>
   13158:	ldr	r0, [sp, #12]
   1315c:	bl	10e30 <malloc@plt>
   13160:	str	r0, [sp, #24]
   13164:	ldr	r0, [sp, #24]
   13168:	movw	lr, #0
   1316c:	cmp	r0, lr
   13170:	bne	13178 <main@@Base+0x34c>
   13174:	b	131fc <main@@Base+0x3d0>
   13178:	movw	r0, #0
   1317c:	str	r0, [fp, #-28]	; 0xffffffe4
   13180:	ldr	r0, [sp, #24]
   13184:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13188:	add	r0, r0, r1
   1318c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13190:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13194:	sub	r2, r1, r2
   13198:	ldr	r3, [fp, #-20]	; 0xffffffec
   1319c:	movw	r1, #1
   131a0:	bl	10e24 <fread@plt>
   131a4:	str	r0, [sp, #32]
   131a8:	cmp	r0, #0
   131ac:	beq	131c4 <main@@Base+0x398>
   131b0:	ldr	r0, [sp, #32]
   131b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   131b8:	add	r0, r1, r0
   131bc:	str	r0, [fp, #-28]	; 0xffffffe4
   131c0:	b	13180 <main@@Base+0x354>
   131c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   131c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   131cc:	cmp	r0, r1
   131d0:	beq	131d8 <main@@Base+0x3ac>
   131d4:	b	131fc <main@@Base+0x3d0>
   131d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   131dc:	bl	10e84 <fclose@plt>
   131e0:	ldr	lr, [fp, #-24]	; 0xffffffe8
   131e4:	ldr	r1, [fp, #-16]
   131e8:	str	lr, [r1]
   131ec:	ldr	r1, [sp, #24]
   131f0:	str	r1, [fp, #-4]
   131f4:	str	r0, [sp, #8]
   131f8:	b	13244 <main@@Base+0x418>
   131fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   13200:	movw	r1, #0
   13204:	cmp	r0, r1
   13208:	beq	13218 <main@@Base+0x3ec>
   1320c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13210:	bl	10e84 <fclose@plt>
   13214:	str	r0, [sp, #4]
   13218:	ldr	r0, [sp, #24]
   1321c:	movw	r1, #0
   13220:	cmp	r0, r1
   13224:	beq	13230 <main@@Base+0x404>
   13228:	ldr	r0, [sp, #24]
   1322c:	bl	10df4 <free@plt>
   13230:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13234:	ldr	r1, [fp, #-16]
   13238:	str	r0, [r1]
   1323c:	movw	r0, #0
   13240:	str	r0, [fp, #-4]
   13244:	ldr	r0, [fp, #-4]
   13248:	mov	sp, fp
   1324c:	pop	{fp, pc}
   13250:			; <UNDEFINED> instruction: 0x000055bb
   13254:	push	{fp, lr}
   13258:	mov	fp, sp
   1325c:	sub	sp, sp, #16
   13260:	str	r0, [fp, #-4]
   13264:	str	r1, [sp, #8]
   13268:	movw	r0, #0
   1326c:	str	r0, [sp]
   13270:	ldr	r0, [fp, #-4]
   13274:	cmp	r0, #4
   13278:	bcs	13284 <main@@Base+0x458>
   1327c:	movw	r0, #4
   13280:	str	r0, [fp, #-4]
   13284:	ldr	r1, [fp, #-4]
   13288:	ldr	r2, [sp, #8]
   1328c:	mov	r0, sp
   13290:	bl	10e6c <posix_memalign@plt>
   13294:	str	r0, [sp, #4]
   13298:	ldr	r0, [sp, #4]
   1329c:	cmp	r0, #0
   132a0:	beq	132c4 <main@@Base+0x498>
   132a4:	ldr	r0, [sp]
   132a8:	movw	r1, #0
   132ac:	cmp	r0, r1
   132b0:	beq	132c4 <main@@Base+0x498>
   132b4:	ldr	r0, [sp]
   132b8:	bl	10df4 <free@plt>
   132bc:	movw	r0, #0
   132c0:	str	r0, [sp]
   132c4:	ldr	r0, [sp]
   132c8:	mov	sp, fp
   132cc:	pop	{fp, pc}
   132d0:	push	{fp, lr}
   132d4:	mov	fp, sp
   132d8:	sub	sp, sp, #72	; 0x48
   132dc:	str	r0, [fp, #-4]
   132e0:	str	r1, [fp, #-8]
   132e4:	str	r2, [fp, #-12]
   132e8:	str	r3, [fp, #-16]
   132ec:	ldr	r0, [fp, #-8]
   132f0:	str	r0, [sp, #28]
   132f4:	ldr	r0, [fp, #-4]
   132f8:	movw	r1, #0
   132fc:	cmp	r0, r1
   13300:	beq	1331c <main@@Base+0x4f0>
   13304:	ldr	r0, [pc, #440]	; 134c4 <main@@Base+0x698>
   13308:	add	r1, pc, r0
   1330c:	ldr	r0, [fp, #-16]
   13310:	ldr	r2, [fp, #-4]
   13314:	bl	10e60 <fprintf@plt>
   13318:	str	r0, [sp, #24]
   1331c:	movw	r0, #0
   13320:	str	r0, [fp, #-20]	; 0xffffffec
   13324:	ldr	r0, [fp, #-20]	; 0xffffffec
   13328:	ldr	r1, [fp, #-12]
   1332c:	cmp	r0, r1
   13330:	bcs	1346c <main@@Base+0x640>
   13334:	ldr	r0, [fp, #-20]	; 0xffffffec
   13338:	and	r0, r0, #15
   1333c:	cmp	r0, #0
   13340:	bne	13384 <main@@Base+0x558>
   13344:	ldr	r0, [fp, #-20]	; 0xffffffec
   13348:	cmp	r0, #0
   1334c:	beq	13368 <main@@Base+0x53c>
   13350:	ldr	r0, [pc, #380]	; 134d4 <main@@Base+0x6a8>
   13354:	add	r1, pc, r0
   13358:	add	r2, sp, #35	; 0x23
   1335c:	ldr	r0, [fp, #-16]
   13360:	bl	10e60 <fprintf@plt>
   13364:	str	r0, [sp, #20]
   13368:	ldr	r0, [pc, #360]	; 134d8 <main@@Base+0x6ac>
   1336c:	add	r1, pc, r0
   13370:	ldr	r0, [fp, #-16]
   13374:	ldr	r2, [fp, #-20]	; 0xffffffec
   13378:	bl	10e60 <fprintf@plt>
   1337c:	str	r0, [sp, #16]
   13380:	b	133ac <main@@Base+0x580>
   13384:	ldr	r0, [fp, #-20]	; 0xffffffec
   13388:	and	r0, r0, #7
   1338c:	cmp	r0, #0
   13390:	bne	133a8 <main@@Base+0x57c>
   13394:	ldr	r0, [pc, #308]	; 134d0 <main@@Base+0x6a4>
   13398:	add	r1, pc, r0
   1339c:	ldr	r0, [fp, #-16]
   133a0:	bl	10e60 <fprintf@plt>
   133a4:	str	r0, [sp, #12]
   133a8:	b	133ac <main@@Base+0x580>
   133ac:	ldr	r0, [pc, #296]	; 134dc <main@@Base+0x6b0>
   133b0:	add	r1, pc, r0
   133b4:	ldr	r0, [fp, #-16]
   133b8:	ldr	r2, [sp, #28]
   133bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   133c0:	add	r2, r2, r3
   133c4:	ldrb	r2, [r2]
   133c8:	bl	10e60 <fprintf@plt>
   133cc:	ldr	r1, [sp, #28]
   133d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   133d4:	add	r1, r1, r2
   133d8:	ldrb	r1, [r1]
   133dc:	cmp	r1, #32
   133e0:	str	r0, [sp, #8]
   133e4:	blt	13400 <main@@Base+0x5d4>
   133e8:	ldr	r0, [sp, #28]
   133ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   133f0:	add	r0, r0, r1
   133f4:	ldrb	r0, [r0]
   133f8:	cmp	r0, #126	; 0x7e
   133fc:	ble	1341c <main@@Base+0x5f0>
   13400:	ldr	r0, [fp, #-20]	; 0xffffffec
   13404:	and	r0, r0, #15
   13408:	add	r1, sp, #35	; 0x23
   1340c:	add	r0, r1, r0
   13410:	movw	r1, #46	; 0x2e
   13414:	strb	r1, [r0]
   13418:	b	13440 <main@@Base+0x614>
   1341c:	ldr	r0, [sp, #28]
   13420:	ldr	r1, [fp, #-20]	; 0xffffffec
   13424:	add	r0, r0, r1
   13428:	ldrb	r0, [r0]
   1342c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13430:	and	r1, r1, #15
   13434:	add	r2, sp, #35	; 0x23
   13438:	add	r1, r2, r1
   1343c:	strb	r0, [r1]
   13440:	ldr	r0, [fp, #-20]	; 0xffffffec
   13444:	and	r0, r0, #15
   13448:	add	r0, r0, #1
   1344c:	add	r1, sp, #35	; 0x23
   13450:	add	r0, r1, r0
   13454:	movw	r1, #0
   13458:	strb	r1, [r0]
   1345c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13460:	add	r0, r0, #1
   13464:	str	r0, [fp, #-20]	; 0xffffffec
   13468:	b	13324 <main@@Base+0x4f8>
   1346c:	b	13470 <main@@Base+0x644>
   13470:	ldr	r0, [fp, #-20]	; 0xffffffec
   13474:	and	r0, r0, #15
   13478:	cmp	r0, #0
   1347c:	beq	134a4 <main@@Base+0x678>
   13480:	ldr	r0, [pc, #68]	; 134cc <main@@Base+0x6a0>
   13484:	add	r1, pc, r0
   13488:	ldr	r0, [fp, #-16]
   1348c:	bl	10e60 <fprintf@plt>
   13490:	ldr	r1, [fp, #-20]	; 0xffffffec
   13494:	add	r1, r1, #1
   13498:	str	r1, [fp, #-20]	; 0xffffffec
   1349c:	str	r0, [sp, #4]
   134a0:	b	13470 <main@@Base+0x644>
   134a4:	ldr	r0, [pc, #28]	; 134c8 <main@@Base+0x69c>
   134a8:	add	r1, pc, r0
   134ac:	add	r2, sp, #35	; 0x23
   134b0:	ldr	r0, [fp, #-16]
   134b4:	bl	10e60 <fprintf@plt>
   134b8:	str	r0, [sp]
   134bc:	mov	sp, fp
   134c0:	pop	{fp, pc}
   134c4:	andeq	r5, r0, r2, ror #6
   134c8:	andeq	r5, r0, r7, asr #3
   134cc:	strdeq	r5, [r0], -pc	; <UNPREDICTABLE>
   134d0:	andeq	r5, r0, sp, ror #5
   134d4:	andeq	r5, r0, fp, lsl r3
   134d8:	andeq	r5, r0, r9, lsl #6
   134dc:	andeq	r5, r0, sp, asr #5
   134e0:	push	{fp, lr}
   134e4:	mov	fp, sp
   134e8:	sub	sp, sp, #16
   134ec:	ldr	r3, [pc, #36]	; 13518 <main@@Base+0x6ec>
   134f0:	add	r3, pc, r3
   134f4:	str	r0, [fp, #-4]
   134f8:	str	r1, [sp, #8]
   134fc:	str	r2, [sp, #4]
   13500:	ldr	r0, [fp, #-4]
   13504:	ldr	r1, [sp, #8]
   13508:	ldr	r2, [sp, #4]
   1350c:	bl	168ac <flatcc_verify_table_as_root@@Base>
   13510:	mov	sp, fp
   13514:	pop	{fp, pc}
   13518:	andeq	r0, r0, ip, lsl r5
   1351c:	push	{fp, lr}
   13520:	mov	fp, sp
   13524:	sub	sp, sp, #8
   13528:	ldr	r2, [pc, #36]	; 13554 <main@@Base+0x728>
   1352c:	add	r2, pc, r2
   13530:	ldr	r3, [pc, #32]	; 13558 <main@@Base+0x72c>
   13534:	add	r3, pc, r3
   13538:	str	r0, [sp, #4]
   1353c:	str	r1, [sp]
   13540:	ldr	r0, [sp, #4]
   13544:	ldr	r1, [sp]
   13548:	bl	168ac <flatcc_verify_table_as_root@@Base>
   1354c:	mov	sp, fp
   13550:	pop	{fp, pc}
   13554:	andeq	r4, r0, r7, lsl #18
   13558:	ldrdeq	r0, [r0], -r8
   1355c:	push	{fp, lr}
   13560:	mov	fp, sp
   13564:	sub	sp, sp, #32
   13568:	str	r0, [fp, #-8]
   1356c:	str	r1, [fp, #-12]
   13570:	movw	r0, #0
   13574:	str	r0, [sp, #12]
   13578:	ldr	r1, [fp, #-12]
   1357c:	cmp	r1, r0
   13580:	bne	13590 <main@@Base+0x764>
   13584:	movw	r0, #1
   13588:	str	r0, [fp, #-4]
   1358c:	b	135fc <main@@Base+0x7d0>
   13590:	add	r0, sp, #12
   13594:	ldr	r1, [fp, #-12]
   13598:	movw	r2, #4
   1359c:	bl	10e78 <strncpy@plt>
   135a0:	ldr	r1, [sp, #12]
   135a4:	str	r0, [sp, #8]
   135a8:	mov	r0, r1
   135ac:	bl	1362c <main@@Base+0x800>
   135b0:	str	r0, [sp, #12]
   135b4:	ldr	r0, [fp, #-8]
   135b8:	add	r0, r0, #4
   135bc:	bl	13640 <main@@Base+0x814>
   135c0:	str	r0, [sp, #16]
   135c4:	ldr	r0, [sp, #12]
   135c8:	cmp	r0, #0
   135cc:	movw	r0, #1
   135d0:	str	r0, [sp, #4]
   135d4:	beq	135f0 <main@@Base+0x7c4>
   135d8:	ldr	r0, [sp, #16]
   135dc:	ldr	r1, [sp, #12]
   135e0:	cmp	r0, r1
   135e4:	movw	r0, #0
   135e8:	moveq	r0, #1
   135ec:	str	r0, [sp, #4]
   135f0:	ldr	r0, [sp, #4]
   135f4:	and	r0, r0, #1
   135f8:	str	r0, [fp, #-4]
   135fc:	ldr	r0, [fp, #-4]
   13600:	mov	sp, fp
   13604:	pop	{fp, pc}
   13608:	push	{fp, lr}
   1360c:	mov	fp, sp
   13610:	sub	sp, sp, #8
   13614:	str	r0, [sp, #4]
   13618:	ldr	r0, [sp, #4]
   1361c:	ldr	r0, [r0]
   13620:	bl	13678 <main@@Base+0x84c>
   13624:	mov	sp, fp
   13628:	pop	{fp, pc}
   1362c:	sub	sp, sp, #4
   13630:	str	r0, [sp]
   13634:	ldr	r0, [sp]
   13638:	add	sp, sp, #4
   1363c:	bx	lr
   13640:	push	{fp, lr}
   13644:	mov	fp, sp
   13648:	sub	sp, sp, #8
   1364c:	str	r0, [sp, #4]
   13650:	ldr	r0, [sp, #4]
   13654:	ldr	r0, [r0]
   13658:	bl	13664 <main@@Base+0x838>
   1365c:	mov	sp, fp
   13660:	pop	{fp, pc}
   13664:	sub	sp, sp, #4
   13668:	str	r0, [sp]
   1366c:	ldr	r0, [sp]
   13670:	add	sp, sp, #4
   13674:	bx	lr
   13678:	sub	sp, sp, #4
   1367c:	str	r0, [sp]
   13680:	ldr	r0, [sp]
   13684:	add	sp, sp, #4
   13688:	bx	lr
   1368c:	push	{fp, lr}
   13690:	mov	fp, sp
   13694:	sub	sp, sp, #8
   13698:	str	r0, [sp, #4]
   1369c:	ldr	r0, [sp, #4]
   136a0:	ldr	r0, [r0]
   136a4:	bl	13700 <main@@Base+0x8d4>
   136a8:	mov	sp, fp
   136ac:	pop	{fp, pc}
   136b0:	push	{fp, lr}
   136b4:	mov	fp, sp
   136b8:	sub	sp, sp, #8
   136bc:	str	r0, [sp, #4]
   136c0:	ldr	r0, [sp, #4]
   136c4:	ldrh	r0, [r0]
   136c8:	bl	13714 <main@@Base+0x8e8>
   136cc:	uxth	r0, r0
   136d0:	mov	sp, fp
   136d4:	pop	{fp, pc}
   136d8:	push	{fp, lr}
   136dc:	mov	fp, sp
   136e0:	sub	sp, sp, #8
   136e4:	str	r0, [sp, #4]
   136e8:	ldr	r0, [sp, #4]
   136ec:	ldrsh	r0, [r0]
   136f0:	bl	13728 <main@@Base+0x8fc>
   136f4:	sxth	r0, r0
   136f8:	mov	sp, fp
   136fc:	pop	{fp, pc}
   13700:	sub	sp, sp, #4
   13704:	str	r0, [sp]
   13708:	ldr	r0, [sp]
   1370c:	add	sp, sp, #4
   13710:	bx	lr
   13714:	sub	sp, sp, #4
   13718:	strh	r0, [sp, #2]
   1371c:	ldrh	r0, [sp, #2]
   13720:	add	sp, sp, #4
   13724:	bx	lr
   13728:	sub	sp, sp, #4
   1372c:	strh	r0, [sp, #2]
   13730:	ldrsh	r0, [sp, #2]
   13734:	add	sp, sp, #4
   13738:	bx	lr
   1373c:	push	{fp, lr}
   13740:	mov	fp, sp
   13744:	sub	sp, sp, #8
   13748:	str	r0, [sp, #4]
   1374c:	ldr	r0, [sp, #4]
   13750:	vldr	s0, [r0]
   13754:	bl	13760 <main@@Base+0x934>
   13758:	mov	sp, fp
   1375c:	pop	{fp, pc}
   13760:	sub	sp, sp, #8
   13764:	vstr	s0, [sp, #4]
   13768:	vldr	s0, [sp, #4]
   1376c:	vstr	s0, [sp]
   13770:	ldr	r0, [sp]
   13774:	str	r0, [sp]
   13778:	vldr	s0, [sp]
   1377c:	add	sp, sp, #8
   13780:	bx	lr
   13784:	push	{fp, lr}
   13788:	mov	fp, sp
   1378c:	sub	sp, sp, #8
   13790:	str	r0, [sp, #4]
   13794:	ldr	r0, [sp, #4]
   13798:	vldr	d0, [r0]
   1379c:	bl	137a8 <main@@Base+0x97c>
   137a0:	mov	sp, fp
   137a4:	pop	{fp, pc}
   137a8:	sub	sp, sp, #16
   137ac:	vstr	d0, [sp, #8]
   137b0:	vldr	d0, [sp, #8]
   137b4:	vstr	d0, [sp]
   137b8:	vldr	d0, [sp]
   137bc:	add	sp, sp, #16
   137c0:	bx	lr
   137c4:	push	{fp, lr}
   137c8:	mov	fp, sp
   137cc:	sub	sp, sp, #8
   137d0:	str	r0, [sp, #4]
   137d4:	ldr	r0, [sp, #4]
   137d8:	ldrsb	r0, [r0]
   137dc:	bl	137ec <main@@Base+0x9c0>
   137e0:	sxtb	r0, r0
   137e4:	mov	sp, fp
   137e8:	pop	{fp, pc}
   137ec:	sub	sp, sp, #4
   137f0:	strb	r0, [sp, #3]
   137f4:	ldrsb	r0, [sp, #3]
   137f8:	add	sp, sp, #4
   137fc:	bx	lr
   13800:	push	{fp, lr}
   13804:	mov	fp, sp
   13808:	sub	sp, sp, #8
   1380c:	str	r0, [sp, #4]
   13810:	ldr	r0, [sp, #4]
   13814:	ldrsb	r0, [r0]
   13818:	bl	13828 <main@@Base+0x9fc>
   1381c:	sxtb	r0, r0
   13820:	mov	sp, fp
   13824:	pop	{fp, pc}
   13828:	sub	sp, sp, #4
   1382c:	strb	r0, [sp, #3]
   13830:	ldrsb	r0, [sp, #3]
   13834:	add	sp, sp, #4
   13838:	bx	lr
   1383c:	push	{fp, lr}
   13840:	mov	fp, sp
   13844:	sub	sp, sp, #8
   13848:	str	r0, [sp, #4]
   1384c:	ldr	r0, [sp, #4]
   13850:	movw	r1, #0
   13854:	cmp	r0, r1
   13858:	beq	13874 <main@@Base+0xa48>
   1385c:	ldr	r0, [sp, #4]
   13860:	mvn	r1, #3
   13864:	add	r0, r0, r1
   13868:	bl	13608 <main@@Base+0x7dc>
   1386c:	str	r0, [sp]
   13870:	b	13880 <main@@Base+0xa54>
   13874:	movw	r0, #0
   13878:	str	r0, [sp]
   1387c:	b	13880 <main@@Base+0xa54>
   13880:	ldr	r0, [sp]
   13884:	mov	sp, fp
   13888:	pop	{fp, pc}
   1388c:	push	{fp, lr}
   13890:	mov	fp, sp
   13894:	sub	sp, sp, #8
   13898:	str	r0, [sp, #4]
   1389c:	ldr	r0, [sp, #4]
   138a0:	ldrb	r0, [r0]
   138a4:	bl	138b4 <main@@Base+0xa88>
   138a8:	and	r0, r0, #255	; 0xff
   138ac:	mov	sp, fp
   138b0:	pop	{fp, pc}
   138b4:	sub	sp, sp, #4
   138b8:	strb	r0, [sp, #3]
   138bc:	ldrb	r0, [sp, #3]
   138c0:	add	sp, sp, #4
   138c4:	bx	lr
   138c8:	push	{fp, lr}
   138cc:	mov	fp, sp
   138d0:	sub	sp, sp, #8
   138d4:	str	r0, [sp, #4]
   138d8:	ldr	r0, [sp, #4]
   138dc:	ldrb	r0, [r0]
   138e0:	bl	138f0 <main@@Base+0xac4>
   138e4:	and	r0, r0, #255	; 0xff
   138e8:	mov	sp, fp
   138ec:	pop	{fp, pc}
   138f0:	sub	sp, sp, #4
   138f4:	strb	r0, [sp, #3]
   138f8:	ldrb	r0, [sp, #3]
   138fc:	add	sp, sp, #4
   13900:	bx	lr
   13904:	push	{fp, lr}
   13908:	mov	fp, sp
   1390c:	sub	sp, sp, #8
   13910:	str	r0, [sp, #4]
   13914:	ldr	r0, [sp, #4]
   13918:	ldr	r0, [r0]
   1391c:	bl	13928 <main@@Base+0xafc>
   13920:	mov	sp, fp
   13924:	pop	{fp, pc}
   13928:	sub	sp, sp, #4
   1392c:	str	r0, [sp]
   13930:	ldr	r0, [sp]
   13934:	add	sp, sp, #4
   13938:	bx	lr
   1393c:	push	{fp, lr}
   13940:	mov	fp, sp
   13944:	sub	sp, sp, #8
   13948:	str	r0, [sp, #4]
   1394c:	ldr	r0, [sp, #4]
   13950:	ldr	r0, [r0]
   13954:	bl	13960 <main@@Base+0xb34>
   13958:	mov	sp, fp
   1395c:	pop	{fp, pc}
   13960:	sub	sp, sp, #4
   13964:	str	r0, [sp]
   13968:	ldr	r0, [sp]
   1396c:	add	sp, sp, #4
   13970:	bx	lr
   13974:	push	{fp, lr}
   13978:	mov	fp, sp
   1397c:	sub	sp, sp, #8
   13980:	str	r0, [sp, #4]
   13984:	ldr	r0, [sp, #4]
   13988:	ldr	r1, [r0]
   1398c:	ldr	r0, [r0, #4]
   13990:	str	r0, [sp]
   13994:	mov	r0, r1
   13998:	ldr	r1, [sp]
   1399c:	bl	139a8 <main@@Base+0xb7c>
   139a0:	mov	sp, fp
   139a4:	pop	{fp, pc}
   139a8:	sub	sp, sp, #8
   139ac:	str	r0, [sp]
   139b0:	str	r1, [sp, #4]
   139b4:	ldr	r0, [sp]
   139b8:	ldr	r1, [sp, #4]
   139bc:	add	sp, sp, #8
   139c0:	bx	lr
   139c4:	push	{fp, lr}
   139c8:	mov	fp, sp
   139cc:	sub	sp, sp, #8
   139d0:	str	r0, [sp, #4]
   139d4:	ldr	r0, [sp, #4]
   139d8:	ldr	r1, [r0]
   139dc:	ldr	r0, [r0, #4]
   139e0:	str	r0, [sp]
   139e4:	mov	r0, r1
   139e8:	ldr	r1, [sp]
   139ec:	bl	139f8 <main@@Base+0xbcc>
   139f0:	mov	sp, fp
   139f4:	pop	{fp, pc}
   139f8:	sub	sp, sp, #8
   139fc:	str	r0, [sp]
   13a00:	str	r1, [sp, #4]
   13a04:	ldr	r0, [sp]
   13a08:	ldr	r1, [sp, #4]
   13a0c:	add	sp, sp, #8
   13a10:	bx	lr
   13a14:	push	{fp, lr}
   13a18:	mov	fp, sp
   13a1c:	sub	sp, sp, #56	; 0x38
   13a20:	str	r0, [fp, #-8]
   13a24:	ldr	r0, [fp, #-8]
   13a28:	movw	r1, #0
   13a2c:	uxth	r1, r1
   13a30:	movw	r2, #32
   13a34:	movw	r3, #16
   13a38:	uxth	r3, r3
   13a3c:	bl	150d4 <flatcc_verify_field@@Base>
   13a40:	str	r0, [fp, #-12]
   13a44:	cmp	r0, #0
   13a48:	beq	13a58 <main@@Base+0xc2c>
   13a4c:	ldr	r0, [fp, #-12]
   13a50:	str	r0, [fp, #-4]
   13a54:	b	141e4 <main@@Base+0x13b8>
   13a58:	ldr	r0, [fp, #-8]
   13a5c:	movw	r1, #2
   13a60:	uxth	r2, r1
   13a64:	str	r1, [fp, #-16]
   13a68:	mov	r1, r2
   13a6c:	movw	r2, #2
   13a70:	ldr	r3, [fp, #-16]
   13a74:	uxth	r3, r3
   13a78:	bl	150d4 <flatcc_verify_field@@Base>
   13a7c:	str	r0, [fp, #-12]
   13a80:	cmp	r0, #0
   13a84:	beq	13a94 <main@@Base+0xc68>
   13a88:	ldr	r0, [fp, #-12]
   13a8c:	str	r0, [fp, #-4]
   13a90:	b	141e4 <main@@Base+0x13b8>
   13a94:	ldr	r0, [fp, #-8]
   13a98:	movw	r1, #1
   13a9c:	uxth	r1, r1
   13aa0:	movw	r2, #2
   13aa4:	movw	r3, #2
   13aa8:	uxth	r3, r3
   13aac:	bl	150d4 <flatcc_verify_field@@Base>
   13ab0:	str	r0, [fp, #-12]
   13ab4:	cmp	r0, #0
   13ab8:	beq	13ac8 <main@@Base+0xc9c>
   13abc:	ldr	r0, [fp, #-12]
   13ac0:	str	r0, [fp, #-4]
   13ac4:	b	141e4 <main@@Base+0x13b8>
   13ac8:	ldr	r0, [fp, #-8]
   13acc:	movw	r1, #3
   13ad0:	uxth	r1, r1
   13ad4:	movw	r2, #1
   13ad8:	bl	152e0 <flatcc_verify_string_field@@Base>
   13adc:	str	r0, [fp, #-12]
   13ae0:	cmp	r0, #0
   13ae4:	beq	13af4 <main@@Base+0xcc8>
   13ae8:	ldr	r0, [fp, #-12]
   13aec:	str	r0, [fp, #-4]
   13af0:	b	141e4 <main@@Base+0x13b8>
   13af4:	ldr	r0, [fp, #-8]
   13af8:	movw	r1, #6
   13afc:	uxth	r1, r1
   13b00:	movw	r2, #1
   13b04:	movw	r3, #1
   13b08:	uxth	r3, r3
   13b0c:	bl	150d4 <flatcc_verify_field@@Base>
   13b10:	str	r0, [fp, #-12]
   13b14:	cmp	r0, #0
   13b18:	beq	13b28 <main@@Base+0xcfc>
   13b1c:	ldr	r0, [fp, #-12]
   13b20:	str	r0, [fp, #-4]
   13b24:	b	141e4 <main@@Base+0x13b8>
   13b28:	ldr	r0, [fp, #-8]
   13b2c:	movw	r1, #5
   13b30:	uxth	r1, r1
   13b34:	movw	r2, #0
   13b38:	movw	r3, #1
   13b3c:	movw	ip, #1
   13b40:	uxth	ip, ip
   13b44:	str	ip, [sp]
   13b48:	mvn	ip, #0
   13b4c:	str	ip, [sp, #4]
   13b50:	bl	1563c <flatcc_verify_vector_field@@Base>
   13b54:	str	r0, [fp, #-12]
   13b58:	cmp	r0, #0
   13b5c:	beq	13b6c <main@@Base+0xd40>
   13b60:	ldr	r0, [fp, #-12]
   13b64:	str	r0, [fp, #-4]
   13b68:	b	141e4 <main@@Base+0x13b8>
   13b6c:	ldr	r0, [pc, #1660]	; 141f0 <main@@Base+0x13c4>
   13b70:	add	r3, pc, r0
   13b74:	ldr	r0, [fp, #-8]
   13b78:	movw	r1, #11
   13b7c:	uxth	r1, r1
   13b80:	movw	r2, #0
   13b84:	bl	15ec8 <flatcc_verify_table_vector_field@@Base>
   13b88:	str	r0, [fp, #-12]
   13b8c:	cmp	r0, #0
   13b90:	beq	13ba0 <main@@Base+0xd74>
   13b94:	ldr	r0, [fp, #-12]
   13b98:	str	r0, [fp, #-4]
   13b9c:	b	141e4 <main@@Base+0x13b8>
   13ba0:	ldr	r0, [fp, #-8]
   13ba4:	movw	r1, #10
   13ba8:	uxth	r1, r1
   13bac:	movw	r2, #0
   13bb0:	bl	1587c <flatcc_verify_string_vector_field@@Base>
   13bb4:	str	r0, [fp, #-12]
   13bb8:	cmp	r0, #0
   13bbc:	beq	13bcc <main@@Base+0xda0>
   13bc0:	ldr	r0, [fp, #-12]
   13bc4:	str	r0, [fp, #-4]
   13bc8:	b	141e4 <main@@Base+0x13b8>
   13bcc:	ldr	r0, [fp, #-8]
   13bd0:	movw	r1, #28
   13bd4:	uxth	r1, r1
   13bd8:	movw	r2, #0
   13bdc:	bl	1587c <flatcc_verify_string_vector_field@@Base>
   13be0:	str	r0, [fp, #-12]
   13be4:	cmp	r0, #0
   13be8:	beq	13bf8 <main@@Base+0xdcc>
   13bec:	ldr	r0, [fp, #-12]
   13bf0:	str	r0, [fp, #-4]
   13bf4:	b	141e4 <main@@Base+0x13b8>
   13bf8:	ldr	r0, [fp, #-8]
   13bfc:	movw	r1, #24
   13c00:	uxth	r1, r1
   13c04:	movw	r2, #0
   13c08:	movw	r3, #1
   13c0c:	movw	ip, #1
   13c10:	uxth	ip, ip
   13c14:	str	ip, [sp]
   13c18:	mvn	ip, #0
   13c1c:	str	ip, [sp, #4]
   13c20:	bl	1563c <flatcc_verify_vector_field@@Base>
   13c24:	str	r0, [fp, #-12]
   13c28:	cmp	r0, #0
   13c2c:	beq	13c3c <main@@Base+0xe10>
   13c30:	ldr	r0, [fp, #-12]
   13c34:	str	r0, [fp, #-4]
   13c38:	b	141e4 <main@@Base+0x13b8>
   13c3c:	ldr	r0, [pc, #1456]	; 141f4 <main@@Base+0x13c8>
   13c40:	ldr	r1, [fp, #-8]
   13c44:	str	r0, [fp, #-20]	; 0xffffffec
   13c48:	mov	r0, r1
   13c4c:	movw	r1, #29
   13c50:	uxth	r1, r1
   13c54:	movw	r2, #0
   13c58:	movw	r3, #8
   13c5c:	movw	ip, #4
   13c60:	uxth	ip, ip
   13c64:	str	ip, [sp]
   13c68:	ldr	ip, [fp, #-20]	; 0xffffffec
   13c6c:	str	ip, [sp, #4]
   13c70:	bl	1563c <flatcc_verify_vector_field@@Base>
   13c74:	str	r0, [fp, #-12]
   13c78:	cmp	r0, #0
   13c7c:	beq	13c8c <main@@Base+0xe60>
   13c80:	ldr	r0, [fp, #-12]
   13c84:	str	r0, [fp, #-4]
   13c88:	b	141e4 <main@@Base+0x13b8>
   13c8c:	ldr	r0, [pc, #1380]	; 141f8 <main@@Base+0x13cc>
   13c90:	add	r3, pc, r0
   13c94:	ldr	r0, [fp, #-8]
   13c98:	movw	r1, #12
   13c9c:	uxth	r1, r1
   13ca0:	movw	r2, #0
   13ca4:	bl	15afc <flatcc_verify_table_field@@Base>
   13ca8:	str	r0, [fp, #-12]
   13cac:	cmp	r0, #0
   13cb0:	beq	13cc0 <main@@Base+0xe94>
   13cb4:	ldr	r0, [fp, #-12]
   13cb8:	str	r0, [fp, #-4]
   13cbc:	b	141e4 <main@@Base+0x13b8>
   13cc0:	ldr	r0, [pc, #1332]	; 141fc <main@@Base+0x13d0>
   13cc4:	add	r3, pc, r0
   13cc8:	ldr	r0, [fp, #-8]
   13ccc:	movw	r1, #8
   13cd0:	uxth	r1, r1
   13cd4:	movw	r2, #0
   13cd8:	bl	16d58 <flatcc_verify_union_field@@Base>
   13cdc:	str	r0, [fp, #-12]
   13ce0:	cmp	r0, #0
   13ce4:	beq	13cf4 <main@@Base+0xec8>
   13ce8:	ldr	r0, [fp, #-12]
   13cec:	str	r0, [fp, #-4]
   13cf0:	b	141e4 <main@@Base+0x13b8>
   13cf4:	ldr	r0, [pc, #1284]	; 14200 <main@@Base+0x13d4>
   13cf8:	ldr	r1, [fp, #-8]
   13cfc:	str	r0, [fp, #-24]	; 0xffffffe8
   13d00:	mov	r0, r1
   13d04:	movw	r1, #9
   13d08:	uxth	r1, r1
   13d0c:	movw	r2, #0
   13d10:	movw	r3, #4
   13d14:	movw	ip, #2
   13d18:	uxth	ip, ip
   13d1c:	str	ip, [sp]
   13d20:	ldr	ip, [fp, #-24]	; 0xffffffe8
   13d24:	str	ip, [sp, #4]
   13d28:	bl	1563c <flatcc_verify_vector_field@@Base>
   13d2c:	str	r0, [fp, #-12]
   13d30:	cmp	r0, #0
   13d34:	beq	13d44 <main@@Base+0xf18>
   13d38:	ldr	r0, [fp, #-12]
   13d3c:	str	r0, [fp, #-4]
   13d40:	b	141e4 <main@@Base+0x13b8>
   13d44:	ldr	r0, [pc, #1204]	; 14200 <main@@Base+0x13d4>
   13d48:	ldr	r1, [fp, #-8]
   13d4c:	str	r0, [sp, #28]
   13d50:	mov	r0, r1
   13d54:	movw	r1, #31
   13d58:	uxth	r1, r1
   13d5c:	movw	r2, #0
   13d60:	movw	r3, #4
   13d64:	movw	ip, #2
   13d68:	uxth	ip, ip
   13d6c:	str	ip, [sp]
   13d70:	ldr	ip, [sp, #28]
   13d74:	str	ip, [sp, #4]
   13d78:	bl	1563c <flatcc_verify_vector_field@@Base>
   13d7c:	str	r0, [fp, #-12]
   13d80:	cmp	r0, #0
   13d84:	beq	13d94 <main@@Base+0xf68>
   13d88:	ldr	r0, [fp, #-12]
   13d8c:	str	r0, [fp, #-4]
   13d90:	b	141e4 <main@@Base+0x13b8>
   13d94:	ldr	r0, [pc, #1128]	; 14204 <main@@Base+0x13d8>
   13d98:	add	r0, pc, r0
   13d9c:	ldr	r1, [fp, #-8]
   13da0:	str	r0, [sp, #24]
   13da4:	mov	r0, r1
   13da8:	movw	r1, #13
   13dac:	uxth	r1, r1
   13db0:	movw	r2, #0
   13db4:	str	r2, [sp, #20]
   13db8:	ldr	r3, [sp, #20]
   13dbc:	movw	ip, #1
   13dc0:	uxth	ip, ip
   13dc4:	str	ip, [sp]
   13dc8:	ldr	ip, [sp, #24]
   13dcc:	str	ip, [sp, #4]
   13dd0:	bl	16bb0 <flatcc_verify_table_as_nested_root@@Base>
   13dd4:	str	r0, [fp, #-12]
   13dd8:	cmp	r0, #0
   13ddc:	beq	13dec <main@@Base+0xfc0>
   13de0:	ldr	r0, [fp, #-12]
   13de4:	str	r0, [fp, #-4]
   13de8:	b	141e4 <main@@Base+0x13b8>
   13dec:	ldr	r0, [pc, #1044]	; 14208 <main@@Base+0x13dc>
   13df0:	add	r3, pc, r0
   13df4:	ldr	r0, [fp, #-8]
   13df8:	movw	r1, #14
   13dfc:	uxth	r1, r1
   13e00:	movw	r2, #0
   13e04:	bl	15afc <flatcc_verify_table_field@@Base>
   13e08:	str	r0, [fp, #-12]
   13e0c:	cmp	r0, #0
   13e10:	beq	13e20 <main@@Base+0xff4>
   13e14:	ldr	r0, [fp, #-12]
   13e18:	str	r0, [fp, #-4]
   13e1c:	b	141e4 <main@@Base+0x13b8>
   13e20:	ldr	r0, [fp, #-8]
   13e24:	movw	r1, #15
   13e28:	uxth	r1, r1
   13e2c:	movw	r2, #1
   13e30:	movw	r3, #1
   13e34:	uxth	r3, r3
   13e38:	bl	150d4 <flatcc_verify_field@@Base>
   13e3c:	str	r0, [fp, #-12]
   13e40:	cmp	r0, #0
   13e44:	beq	13e54 <main@@Base+0x1028>
   13e48:	ldr	r0, [fp, #-12]
   13e4c:	str	r0, [fp, #-4]
   13e50:	b	141e4 <main@@Base+0x13b8>
   13e54:	ldr	r0, [fp, #-8]
   13e58:	movw	r1, #16
   13e5c:	uxth	r1, r1
   13e60:	movw	r2, #4
   13e64:	movw	r3, #4
   13e68:	uxth	r3, r3
   13e6c:	bl	150d4 <flatcc_verify_field@@Base>
   13e70:	str	r0, [fp, #-12]
   13e74:	cmp	r0, #0
   13e78:	beq	13e88 <main@@Base+0x105c>
   13e7c:	ldr	r0, [fp, #-12]
   13e80:	str	r0, [fp, #-4]
   13e84:	b	141e4 <main@@Base+0x13b8>
   13e88:	ldr	r0, [fp, #-8]
   13e8c:	movw	r1, #17
   13e90:	uxth	r1, r1
   13e94:	movw	r2, #4
   13e98:	movw	r3, #4
   13e9c:	uxth	r3, r3
   13ea0:	bl	150d4 <flatcc_verify_field@@Base>
   13ea4:	str	r0, [fp, #-12]
   13ea8:	cmp	r0, #0
   13eac:	beq	13ebc <main@@Base+0x1090>
   13eb0:	ldr	r0, [fp, #-12]
   13eb4:	str	r0, [fp, #-4]
   13eb8:	b	141e4 <main@@Base+0x13b8>
   13ebc:	ldr	r0, [fp, #-8]
   13ec0:	movw	r1, #18
   13ec4:	uxth	r1, r1
   13ec8:	movw	r2, #8
   13ecc:	movw	r3, #8
   13ed0:	uxth	r3, r3
   13ed4:	bl	150d4 <flatcc_verify_field@@Base>
   13ed8:	str	r0, [fp, #-12]
   13edc:	cmp	r0, #0
   13ee0:	beq	13ef0 <main@@Base+0x10c4>
   13ee4:	ldr	r0, [fp, #-12]
   13ee8:	str	r0, [fp, #-4]
   13eec:	b	141e4 <main@@Base+0x13b8>
   13ef0:	ldr	r0, [fp, #-8]
   13ef4:	movw	r1, #19
   13ef8:	uxth	r1, r1
   13efc:	movw	r2, #8
   13f00:	movw	r3, #8
   13f04:	uxth	r3, r3
   13f08:	bl	150d4 <flatcc_verify_field@@Base>
   13f0c:	str	r0, [fp, #-12]
   13f10:	cmp	r0, #0
   13f14:	beq	13f24 <main@@Base+0x10f8>
   13f18:	ldr	r0, [fp, #-12]
   13f1c:	str	r0, [fp, #-4]
   13f20:	b	141e4 <main@@Base+0x13b8>
   13f24:	ldr	r0, [fp, #-8]
   13f28:	movw	r1, #20
   13f2c:	uxth	r1, r1
   13f30:	movw	r2, #4
   13f34:	movw	r3, #4
   13f38:	uxth	r3, r3
   13f3c:	bl	150d4 <flatcc_verify_field@@Base>
   13f40:	str	r0, [fp, #-12]
   13f44:	cmp	r0, #0
   13f48:	beq	13f58 <main@@Base+0x112c>
   13f4c:	ldr	r0, [fp, #-12]
   13f50:	str	r0, [fp, #-4]
   13f54:	b	141e4 <main@@Base+0x13b8>
   13f58:	ldr	r0, [fp, #-8]
   13f5c:	movw	r1, #21
   13f60:	uxth	r1, r1
   13f64:	movw	r2, #4
   13f68:	movw	r3, #4
   13f6c:	uxth	r3, r3
   13f70:	bl	150d4 <flatcc_verify_field@@Base>
   13f74:	str	r0, [fp, #-12]
   13f78:	cmp	r0, #0
   13f7c:	beq	13f8c <main@@Base+0x1160>
   13f80:	ldr	r0, [fp, #-12]
   13f84:	str	r0, [fp, #-4]
   13f88:	b	141e4 <main@@Base+0x13b8>
   13f8c:	ldr	r0, [fp, #-8]
   13f90:	movw	r1, #22
   13f94:	uxth	r1, r1
   13f98:	movw	r2, #8
   13f9c:	movw	r3, #8
   13fa0:	uxth	r3, r3
   13fa4:	bl	150d4 <flatcc_verify_field@@Base>
   13fa8:	str	r0, [fp, #-12]
   13fac:	cmp	r0, #0
   13fb0:	beq	13fc0 <main@@Base+0x1194>
   13fb4:	ldr	r0, [fp, #-12]
   13fb8:	str	r0, [fp, #-4]
   13fbc:	b	141e4 <main@@Base+0x13b8>
   13fc0:	ldr	r0, [fp, #-8]
   13fc4:	movw	r1, #23
   13fc8:	uxth	r1, r1
   13fcc:	movw	r2, #8
   13fd0:	movw	r3, #8
   13fd4:	uxth	r3, r3
   13fd8:	bl	150d4 <flatcc_verify_field@@Base>
   13fdc:	str	r0, [fp, #-12]
   13fe0:	cmp	r0, #0
   13fe4:	beq	13ff4 <main@@Base+0x11c8>
   13fe8:	ldr	r0, [fp, #-12]
   13fec:	str	r0, [fp, #-4]
   13ff0:	b	141e4 <main@@Base+0x13b8>
   13ff4:	ldr	r0, [fp, #-8]
   13ff8:	movw	r1, #25
   13ffc:	uxth	r1, r1
   14000:	movw	r2, #4
   14004:	movw	r3, #4
   14008:	uxth	r3, r3
   1400c:	bl	150d4 <flatcc_verify_field@@Base>
   14010:	str	r0, [fp, #-12]
   14014:	cmp	r0, #0
   14018:	beq	14028 <main@@Base+0x11fc>
   1401c:	ldr	r0, [fp, #-12]
   14020:	str	r0, [fp, #-4]
   14024:	b	141e4 <main@@Base+0x13b8>
   14028:	ldr	r0, [fp, #-8]
   1402c:	movw	r1, #26
   14030:	uxth	r1, r1
   14034:	movw	r2, #4
   14038:	movw	r3, #4
   1403c:	uxth	r3, r3
   14040:	bl	150d4 <flatcc_verify_field@@Base>
   14044:	str	r0, [fp, #-12]
   14048:	cmp	r0, #0
   1404c:	beq	1405c <main@@Base+0x1230>
   14050:	ldr	r0, [fp, #-12]
   14054:	str	r0, [fp, #-4]
   14058:	b	141e4 <main@@Base+0x13b8>
   1405c:	ldr	r0, [fp, #-8]
   14060:	movw	r1, #27
   14064:	uxth	r1, r1
   14068:	movw	r2, #4
   1406c:	movw	r3, #4
   14070:	uxth	r3, r3
   14074:	bl	150d4 <flatcc_verify_field@@Base>
   14078:	str	r0, [fp, #-12]
   1407c:	cmp	r0, #0
   14080:	beq	14090 <main@@Base+0x1264>
   14084:	ldr	r0, [fp, #-12]
   14088:	str	r0, [fp, #-4]
   1408c:	b	141e4 <main@@Base+0x13b8>
   14090:	ldr	r0, [fp, #-8]
   14094:	movw	r1, #30
   14098:	uxth	r1, r1
   1409c:	movw	r2, #0
   140a0:	movw	r3, #1
   140a4:	movw	ip, #1
   140a8:	uxth	ip, ip
   140ac:	str	ip, [sp]
   140b0:	mvn	ip, #0
   140b4:	str	ip, [sp, #4]
   140b8:	bl	1563c <flatcc_verify_vector_field@@Base>
   140bc:	str	r0, [fp, #-12]
   140c0:	cmp	r0, #0
   140c4:	beq	140d4 <main@@Base+0x12a8>
   140c8:	ldr	r0, [fp, #-12]
   140cc:	str	r0, [fp, #-4]
   140d0:	b	141e4 <main@@Base+0x13b8>
   140d4:	ldr	r0, [pc, #280]	; 141f4 <main@@Base+0x13c8>
   140d8:	ldr	r1, [fp, #-8]
   140dc:	str	r0, [sp, #16]
   140e0:	mov	r0, r1
   140e4:	movw	r1, #32
   140e8:	uxth	r1, r1
   140ec:	movw	r2, #0
   140f0:	movw	r3, #8
   140f4:	movw	ip, #8
   140f8:	uxth	ip, ip
   140fc:	str	ip, [sp]
   14100:	ldr	ip, [sp, #16]
   14104:	str	ip, [sp, #4]
   14108:	bl	1563c <flatcc_verify_vector_field@@Base>
   1410c:	str	r0, [fp, #-12]
   14110:	cmp	r0, #0
   14114:	beq	14124 <main@@Base+0x12f8>
   14118:	ldr	r0, [fp, #-12]
   1411c:	str	r0, [fp, #-4]
   14120:	b	141e4 <main@@Base+0x13b8>
   14124:	ldr	r0, [pc, #200]	; 141f4 <main@@Base+0x13c8>
   14128:	ldr	r1, [fp, #-8]
   1412c:	str	r0, [sp, #12]
   14130:	mov	r0, r1
   14134:	movw	r1, #33	; 0x21
   14138:	uxth	r1, r1
   1413c:	movw	r2, #0
   14140:	movw	r3, #8
   14144:	movw	ip, #8
   14148:	uxth	ip, ip
   1414c:	str	ip, [sp]
   14150:	ldr	ip, [sp, #12]
   14154:	str	ip, [sp, #4]
   14158:	bl	1563c <flatcc_verify_vector_field@@Base>
   1415c:	str	r0, [fp, #-12]
   14160:	cmp	r0, #0
   14164:	beq	14174 <main@@Base+0x1348>
   14168:	ldr	r0, [fp, #-12]
   1416c:	str	r0, [fp, #-4]
   14170:	b	141e4 <main@@Base+0x13b8>
   14174:	ldr	r0, [pc, #144]	; 1420c <main@@Base+0x13e0>
   14178:	add	r3, pc, r0
   1417c:	ldr	r0, [fp, #-8]
   14180:	movw	r1, #34	; 0x22
   14184:	uxth	r1, r1
   14188:	movw	r2, #0
   1418c:	bl	15afc <flatcc_verify_table_field@@Base>
   14190:	str	r0, [fp, #-12]
   14194:	cmp	r0, #0
   14198:	beq	141a8 <main@@Base+0x137c>
   1419c:	ldr	r0, [fp, #-12]
   141a0:	str	r0, [fp, #-4]
   141a4:	b	141e4 <main@@Base+0x13b8>
   141a8:	ldr	r0, [pc, #96]	; 14210 <main@@Base+0x13e4>
   141ac:	add	r3, pc, r0
   141b0:	ldr	r0, [fp, #-8]
   141b4:	movw	r1, #35	; 0x23
   141b8:	uxth	r1, r1
   141bc:	movw	r2, #0
   141c0:	bl	15afc <flatcc_verify_table_field@@Base>
   141c4:	str	r0, [fp, #-12]
   141c8:	cmp	r0, #0
   141cc:	beq	141dc <main@@Base+0x13b0>
   141d0:	ldr	r0, [fp, #-12]
   141d4:	str	r0, [fp, #-4]
   141d8:	b	141e4 <main@@Base+0x13b8>
   141dc:	movw	r0, #0
   141e0:	str	r0, [fp, #-4]
   141e4:	ldr	r0, [fp, #-4]
   141e8:	mov	sp, fp
   141ec:	pop	{fp, pc}
   141f0:			; <UNDEFINED> instruction: 0xfffffe9c
   141f4:	svcne	0x00ffffff
   141f8:			; <UNDEFINED> instruction: 0xfffffd7c
   141fc:	andeq	r0, r0, r8, asr #10
   14200:	svccc	0x00ffffff
   14204:			; <UNDEFINED> instruction: 0xfffffc74
   14208:	andeq	r0, r0, r8, ror #9
   1420c:	andeq	r0, r0, r0, lsr #4
   14210:	andeq	r0, r0, r0, lsl #4
   14214:	push	{fp, lr}
   14218:	mov	fp, sp
   1421c:	sub	sp, sp, #16
   14220:	str	r0, [sp, #8]
   14224:	ldr	r0, [sp, #8]
   14228:	ldrb	r0, [r0, #12]
   1422c:	sub	r0, r0, #1
   14230:	cmp	r0, #3
   14234:	str	r0, [sp, #4]
   14238:	bhi	142bc <main@@Base+0x1490>
   1423c:	add	r0, pc, #8
   14240:	ldr	r1, [sp, #4]
   14244:	ldr	r2, [r0, r1, lsl #2]
   14248:	add	pc, r0, r2
   1424c:	andeq	r0, r0, r0, lsl r0
   14250:	andeq	r0, r0, r8, lsr #32
   14254:	andeq	r0, r0, r0, asr #32
   14258:	andeq	r0, r0, r8, asr r0
   1425c:	ldr	r0, [pc, #120]	; 142dc <main@@Base+0x14b0>
   14260:	add	r1, pc, r0
   14264:	ldr	r0, [sp, #8]
   14268:	bl	16230 <flatcc_verify_union_table@@Base>
   1426c:	str	r0, [fp, #-4]
   14270:	b	142c4 <main@@Base+0x1498>
   14274:	ldr	r0, [pc, #92]	; 142d8 <main@@Base+0x14ac>
   14278:	add	r1, pc, r0
   1427c:	ldr	r0, [sp, #8]
   14280:	bl	16230 <flatcc_verify_union_table@@Base>
   14284:	str	r0, [fp, #-4]
   14288:	b	142c4 <main@@Base+0x1498>
   1428c:	ldr	r0, [pc, #64]	; 142d4 <main@@Base+0x14a8>
   14290:	add	r1, pc, r0
   14294:	ldr	r0, [sp, #8]
   14298:	bl	16230 <flatcc_verify_union_table@@Base>
   1429c:	str	r0, [fp, #-4]
   142a0:	b	142c4 <main@@Base+0x1498>
   142a4:	ldr	r0, [pc, #36]	; 142d0 <main@@Base+0x14a4>
   142a8:	add	r1, pc, r0
   142ac:	ldr	r0, [sp, #8]
   142b0:	bl	16230 <flatcc_verify_union_table@@Base>
   142b4:	str	r0, [fp, #-4]
   142b8:	b	142c4 <main@@Base+0x1498>
   142bc:	movw	r0, #0
   142c0:	str	r0, [fp, #-4]
   142c4:	ldr	r0, [fp, #-4]
   142c8:	mov	sp, fp
   142cc:	pop	{fp, pc}
   142d0:	andeq	r0, r0, r4, lsr #6
   142d4:	andeq	r0, r0, r8, lsr #6
   142d8:	andeq	r0, r0, r4, asr #4
   142dc:			; <UNDEFINED> instruction: 0xfffff7ac
   142e0:	push	{fp, lr}
   142e4:	mov	fp, sp
   142e8:	sub	sp, sp, #16
   142ec:	str	r0, [sp, #8]
   142f0:	ldr	r0, [sp, #8]
   142f4:	movw	r1, #0
   142f8:	uxth	r1, r1
   142fc:	movw	r2, #0
   14300:	bl	152e0 <flatcc_verify_string_field@@Base>
   14304:	str	r0, [sp, #4]
   14308:	cmp	r0, #0
   1430c:	beq	1431c <main@@Base+0x14f0>
   14310:	ldr	r0, [sp, #4]
   14314:	str	r0, [fp, #-4]
   14318:	b	14394 <main@@Base+0x1568>
   1431c:	ldr	r0, [sp, #8]
   14320:	movw	r1, #1
   14324:	uxth	r1, r1
   14328:	movw	r2, #8
   1432c:	movw	r3, #8
   14330:	uxth	r3, r3
   14334:	bl	150d4 <flatcc_verify_field@@Base>
   14338:	str	r0, [sp, #4]
   1433c:	cmp	r0, #0
   14340:	beq	14350 <main@@Base+0x1524>
   14344:	ldr	r0, [sp, #4]
   14348:	str	r0, [fp, #-4]
   1434c:	b	14394 <main@@Base+0x1568>
   14350:	ldr	r0, [sp, #8]
   14354:	movw	r1, #2
   14358:	uxth	r2, r1
   1435c:	str	r1, [sp]
   14360:	mov	r1, r2
   14364:	movw	r2, #2
   14368:	ldr	r3, [sp]
   1436c:	uxth	r3, r3
   14370:	bl	150d4 <flatcc_verify_field@@Base>
   14374:	str	r0, [sp, #4]
   14378:	cmp	r0, #0
   1437c:	beq	1438c <main@@Base+0x1560>
   14380:	ldr	r0, [sp, #4]
   14384:	str	r0, [fp, #-4]
   14388:	b	14394 <main@@Base+0x1568>
   1438c:	movw	r0, #0
   14390:	str	r0, [fp, #-4]
   14394:	ldr	r0, [fp, #-4]
   14398:	mov	sp, fp
   1439c:	pop	{fp, pc}
   143a0:	sub	sp, sp, #4
   143a4:	str	r0, [sp]
   143a8:	movw	r0, #0
   143ac:	add	sp, sp, #4
   143b0:	bx	lr
   143b4:	push	{fp, lr}
   143b8:	mov	fp, sp
   143bc:	sub	sp, sp, #32
   143c0:	str	r0, [fp, #-8]
   143c4:	ldr	r0, [fp, #-8]
   143c8:	movw	r1, #0
   143cc:	uxth	r1, r1
   143d0:	movw	r2, #0
   143d4:	movw	r3, #1
   143d8:	movw	ip, #1
   143dc:	uxth	ip, ip
   143e0:	str	ip, [sp]
   143e4:	mvn	ip, #0
   143e8:	str	ip, [sp, #4]
   143ec:	bl	1563c <flatcc_verify_vector_field@@Base>
   143f0:	str	r0, [fp, #-12]
   143f4:	cmp	r0, #0
   143f8:	beq	14408 <main@@Base+0x15dc>
   143fc:	ldr	r0, [fp, #-12]
   14400:	str	r0, [fp, #-4]
   14404:	b	144b4 <main@@Base+0x1688>
   14408:	ldr	r0, [fp, #-8]
   1440c:	movw	r1, #1
   14410:	uxth	r2, r1
   14414:	str	r1, [sp, #16]
   14418:	mov	r1, r2
   1441c:	movw	r2, #0
   14420:	movw	r3, #1
   14424:	ldr	ip, [sp, #16]
   14428:	uxth	lr, ip
   1442c:	str	lr, [sp]
   14430:	mvn	lr, #0
   14434:	str	lr, [sp, #4]
   14438:	bl	1563c <flatcc_verify_vector_field@@Base>
   1443c:	str	r0, [fp, #-12]
   14440:	cmp	r0, #0
   14444:	beq	14454 <main@@Base+0x1628>
   14448:	ldr	r0, [fp, #-12]
   1444c:	str	r0, [fp, #-4]
   14450:	b	144b4 <main@@Base+0x1688>
   14454:	ldr	r0, [pc, #100]	; 144c0 <main@@Base+0x1694>
   14458:	add	r0, pc, r0
   1445c:	ldr	r1, [fp, #-8]
   14460:	str	r0, [sp, #12]
   14464:	mov	r0, r1
   14468:	movw	r1, #2
   1446c:	uxth	r1, r1
   14470:	movw	r2, #0
   14474:	str	r2, [sp, #8]
   14478:	ldr	r3, [sp, #8]
   1447c:	movw	ip, #1
   14480:	uxth	ip, ip
   14484:	str	ip, [sp]
   14488:	ldr	ip, [sp, #12]
   1448c:	str	ip, [sp, #4]
   14490:	bl	16bb0 <flatcc_verify_table_as_nested_root@@Base>
   14494:	str	r0, [fp, #-12]
   14498:	cmp	r0, #0
   1449c:	beq	144ac <main@@Base+0x1680>
   144a0:	ldr	r0, [fp, #-12]
   144a4:	str	r0, [fp, #-4]
   144a8:	b	144b4 <main@@Base+0x1688>
   144ac:	movw	r0, #0
   144b0:	str	r0, [fp, #-4]
   144b4:	ldr	r0, [fp, #-4]
   144b8:	mov	sp, fp
   144bc:	pop	{fp, pc}
   144c0:			; <UNDEFINED> instruction: 0xfffff5b4
   144c4:	push	{fp, lr}
   144c8:	mov	fp, sp
   144cc:	sub	sp, sp, #16
   144d0:	str	r0, [sp, #8]
   144d4:	ldr	r0, [sp, #8]
   144d8:	movw	r1, #0
   144dc:	uxth	r1, r1
   144e0:	movw	r2, #1
   144e4:	movw	r3, #1
   144e8:	uxth	r3, r3
   144ec:	bl	150d4 <flatcc_verify_field@@Base>
   144f0:	str	r0, [sp, #4]
   144f4:	cmp	r0, #0
   144f8:	beq	14508 <main@@Base+0x16dc>
   144fc:	ldr	r0, [sp, #4]
   14500:	str	r0, [fp, #-4]
   14504:	b	145b4 <main@@Base+0x1788>
   14508:	ldr	r0, [sp, #8]
   1450c:	movw	r1, #1
   14510:	uxth	r2, r1
   14514:	str	r1, [sp]
   14518:	mov	r1, r2
   1451c:	movw	r2, #1
   14520:	ldr	r3, [sp]
   14524:	uxth	r3, r3
   14528:	bl	150d4 <flatcc_verify_field@@Base>
   1452c:	str	r0, [sp, #4]
   14530:	cmp	r0, #0
   14534:	beq	14544 <main@@Base+0x1718>
   14538:	ldr	r0, [sp, #4]
   1453c:	str	r0, [fp, #-4]
   14540:	b	145b4 <main@@Base+0x1788>
   14544:	ldr	r0, [sp, #8]
   14548:	movw	r1, #2
   1454c:	uxth	r1, r1
   14550:	movw	r2, #1
   14554:	movw	r3, #1
   14558:	uxth	r3, r3
   1455c:	bl	150d4 <flatcc_verify_field@@Base>
   14560:	str	r0, [sp, #4]
   14564:	cmp	r0, #0
   14568:	beq	14578 <main@@Base+0x174c>
   1456c:	ldr	r0, [sp, #4]
   14570:	str	r0, [fp, #-4]
   14574:	b	145b4 <main@@Base+0x1788>
   14578:	ldr	r0, [sp, #8]
   1457c:	movw	r1, #3
   14580:	uxth	r1, r1
   14584:	movw	r2, #1
   14588:	movw	r3, #1
   1458c:	uxth	r3, r3
   14590:	bl	150d4 <flatcc_verify_field@@Base>
   14594:	str	r0, [sp, #4]
   14598:	cmp	r0, #0
   1459c:	beq	145ac <main@@Base+0x1780>
   145a0:	ldr	r0, [sp, #4]
   145a4:	str	r0, [fp, #-4]
   145a8:	b	145b4 <main@@Base+0x1788>
   145ac:	movw	r0, #0
   145b0:	str	r0, [fp, #-4]
   145b4:	ldr	r0, [fp, #-4]
   145b8:	mov	sp, fp
   145bc:	pop	{fp, pc}
   145c0:	sub	sp, sp, #4
   145c4:	str	r0, [sp]
   145c8:	movw	r0, #0
   145cc:	add	sp, sp, #4
   145d0:	bx	lr
   145d4:	push	{fp, lr}
   145d8:	mov	fp, sp
   145dc:	sub	sp, sp, #16
   145e0:	ldr	r1, [pc, #172]	; 14694 <main@@Base+0x1868>
   145e4:	add	r3, pc, r1
   145e8:	str	r0, [sp, #8]
   145ec:	ldr	r0, [sp, #8]
   145f0:	movw	r1, #0
   145f4:	uxth	r1, r1
   145f8:	movw	r2, #0
   145fc:	bl	15afc <flatcc_verify_table_field@@Base>
   14600:	str	r0, [sp, #4]
   14604:	cmp	r0, #0
   14608:	beq	14618 <main@@Base+0x17ec>
   1460c:	ldr	r0, [sp, #4]
   14610:	str	r0, [fp, #-4]
   14614:	b	14688 <main@@Base+0x185c>
   14618:	ldr	r0, [pc, #120]	; 14698 <main@@Base+0x186c>
   1461c:	add	r3, pc, r0
   14620:	ldr	r0, [sp, #8]
   14624:	movw	r1, #1
   14628:	uxth	r1, r1
   1462c:	movw	r2, #0
   14630:	bl	15afc <flatcc_verify_table_field@@Base>
   14634:	str	r0, [sp, #4]
   14638:	cmp	r0, #0
   1463c:	beq	1464c <main@@Base+0x1820>
   14640:	ldr	r0, [sp, #4]
   14644:	str	r0, [fp, #-4]
   14648:	b	14688 <main@@Base+0x185c>
   1464c:	ldr	r0, [pc, #72]	; 1469c <main@@Base+0x1870>
   14650:	add	r3, pc, r0
   14654:	ldr	r0, [sp, #8]
   14658:	movw	r1, #3
   1465c:	uxth	r1, r1
   14660:	movw	r2, #0
   14664:	bl	17050 <flatcc_verify_union_vector_field@@Base>
   14668:	str	r0, [sp, #4]
   1466c:	cmp	r0, #0
   14670:	beq	14680 <main@@Base+0x1854>
   14674:	ldr	r0, [sp, #4]
   14678:	str	r0, [fp, #-4]
   1467c:	b	14688 <main@@Base+0x185c>
   14680:	movw	r0, #0
   14684:	str	r0, [fp, #-4]
   14688:	ldr	r0, [fp, #-4]
   1468c:	mov	sp, fp
   14690:	pop	{fp, pc}
   14694:	strheq	r0, [r0], -r4
   14698:	andeq	r0, r0, r8, asr #2
   1469c:			; <UNDEFINED> instruction: 0xfffffbbc
   146a0:	push	{fp, lr}
   146a4:	mov	fp, sp
   146a8:	sub	sp, sp, #16
   146ac:	ldr	r1, [pc, #172]	; 14760 <main@@Base+0x1934>
   146b0:	add	r3, pc, r1
   146b4:	str	r0, [sp, #8]
   146b8:	ldr	r0, [sp, #8]
   146bc:	movw	r1, #0
   146c0:	uxth	r1, r1
   146c4:	movw	r2, #0
   146c8:	bl	15afc <flatcc_verify_table_field@@Base>
   146cc:	str	r0, [sp, #4]
   146d0:	cmp	r0, #0
   146d4:	beq	146e4 <main@@Base+0x18b8>
   146d8:	ldr	r0, [sp, #4]
   146dc:	str	r0, [fp, #-4]
   146e0:	b	14754 <main@@Base+0x1928>
   146e4:	ldr	r0, [pc, #120]	; 14764 <main@@Base+0x1938>
   146e8:	add	r3, pc, r0
   146ec:	ldr	r0, [sp, #8]
   146f0:	movw	r1, #1
   146f4:	uxth	r1, r1
   146f8:	movw	r2, #0
   146fc:	bl	15afc <flatcc_verify_table_field@@Base>
   14700:	str	r0, [sp, #4]
   14704:	cmp	r0, #0
   14708:	beq	14718 <main@@Base+0x18ec>
   1470c:	ldr	r0, [sp, #4]
   14710:	str	r0, [fp, #-4]
   14714:	b	14754 <main@@Base+0x1928>
   14718:	ldr	r0, [pc, #72]	; 14768 <main@@Base+0x193c>
   1471c:	add	r3, pc, r0
   14720:	ldr	r0, [sp, #8]
   14724:	movw	r1, #2
   14728:	uxth	r1, r1
   1472c:	movw	r2, #0
   14730:	bl	15afc <flatcc_verify_table_field@@Base>
   14734:	str	r0, [sp, #4]
   14738:	cmp	r0, #0
   1473c:	beq	1474c <main@@Base+0x1920>
   14740:	ldr	r0, [sp, #4]
   14744:	str	r0, [fp, #-4]
   14748:	b	14754 <main@@Base+0x1928>
   1474c:	movw	r0, #0
   14750:	str	r0, [fp, #-4]
   14754:	ldr	r0, [fp, #-4]
   14758:	mov	sp, fp
   1475c:	pop	{fp, pc}
   14760:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   14764:	muleq	r0, r8, r3
   14768:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1476c:	push	{fp, lr}
   14770:	mov	fp, sp
   14774:	sub	sp, sp, #16
   14778:	ldr	r1, [pc, #276]	; 14894 <main@@Base+0x1a68>
   1477c:	add	r3, pc, r1
   14780:	str	r0, [sp, #8]
   14784:	ldr	r0, [sp, #8]
   14788:	movw	r1, #1
   1478c:	uxth	r1, r1
   14790:	movw	r2, #0
   14794:	bl	16d58 <flatcc_verify_union_field@@Base>
   14798:	str	r0, [sp, #4]
   1479c:	cmp	r0, #0
   147a0:	beq	147b0 <main@@Base+0x1984>
   147a4:	ldr	r0, [sp, #4]
   147a8:	str	r0, [fp, #-4]
   147ac:	b	14888 <main@@Base+0x1a5c>
   147b0:	ldr	r0, [pc, #224]	; 14898 <main@@Base+0x1a6c>
   147b4:	add	r3, pc, r0
   147b8:	ldr	r0, [sp, #8]
   147bc:	movw	r1, #3
   147c0:	uxth	r1, r1
   147c4:	movw	r2, #0
   147c8:	bl	16d58 <flatcc_verify_union_field@@Base>
   147cc:	str	r0, [sp, #4]
   147d0:	cmp	r0, #0
   147d4:	beq	147e4 <main@@Base+0x19b8>
   147d8:	ldr	r0, [sp, #4]
   147dc:	str	r0, [fp, #-4]
   147e0:	b	14888 <main@@Base+0x1a5c>
   147e4:	ldr	r0, [pc, #176]	; 1489c <main@@Base+0x1a70>
   147e8:	add	r3, pc, r0
   147ec:	ldr	r0, [sp, #8]
   147f0:	movw	r1, #5
   147f4:	uxth	r1, r1
   147f8:	movw	r2, #0
   147fc:	bl	16d58 <flatcc_verify_union_field@@Base>
   14800:	str	r0, [sp, #4]
   14804:	cmp	r0, #0
   14808:	beq	14818 <main@@Base+0x19ec>
   1480c:	ldr	r0, [sp, #4]
   14810:	str	r0, [fp, #-4]
   14814:	b	14888 <main@@Base+0x1a5c>
   14818:	ldr	r0, [pc, #128]	; 148a0 <main@@Base+0x1a74>
   1481c:	add	r3, pc, r0
   14820:	ldr	r0, [sp, #8]
   14824:	movw	r1, #7
   14828:	uxth	r1, r1
   1482c:	movw	r2, #0
   14830:	bl	16d58 <flatcc_verify_union_field@@Base>
   14834:	str	r0, [sp, #4]
   14838:	cmp	r0, #0
   1483c:	beq	1484c <main@@Base+0x1a20>
   14840:	ldr	r0, [sp, #4]
   14844:	str	r0, [fp, #-4]
   14848:	b	14888 <main@@Base+0x1a5c>
   1484c:	ldr	r0, [pc, #80]	; 148a4 <main@@Base+0x1a78>
   14850:	add	r3, pc, r0
   14854:	ldr	r0, [sp, #8]
   14858:	movw	r1, #9
   1485c:	uxth	r1, r1
   14860:	movw	r2, #0
   14864:	bl	17050 <flatcc_verify_union_vector_field@@Base>
   14868:	str	r0, [sp, #4]
   1486c:	cmp	r0, #0
   14870:	beq	14880 <main@@Base+0x1a54>
   14874:	ldr	r0, [sp, #4]
   14878:	str	r0, [fp, #-4]
   1487c:	b	14888 <main@@Base+0x1a5c>
   14880:	movw	r0, #0
   14884:	str	r0, [fp, #-4]
   14888:	ldr	r0, [fp, #-4]
   1488c:	mov	sp, fp
   14890:	pop	{fp, pc}
   14894:	andeq	r0, r0, ip, lsl r4
   14898:	andeq	r0, r0, r4, ror #7
   1489c:			; <UNDEFINED> instruction: 0x000003b0
   148a0:	andeq	r0, r0, ip, ror r3
   148a4:	andeq	r0, r0, r8, asr #6
   148a8:	push	{fp, lr}
   148ac:	mov	fp, sp
   148b0:	sub	sp, sp, #16
   148b4:	str	r0, [sp, #8]
   148b8:	ldr	r0, [sp, #8]
   148bc:	movw	r1, #0
   148c0:	uxth	r1, r1
   148c4:	movw	r2, #0
   148c8:	bl	152e0 <flatcc_verify_string_field@@Base>
   148cc:	str	r0, [sp, #4]
   148d0:	cmp	r0, #0
   148d4:	beq	148e4 <main@@Base+0x1ab8>
   148d8:	ldr	r0, [sp, #4]
   148dc:	str	r0, [fp, #-4]
   148e0:	b	14a7c <main@@Base+0x1c50>
   148e4:	ldr	r0, [sp, #8]
   148e8:	movw	r1, #1
   148ec:	uxth	r1, r1
   148f0:	movw	r2, #4
   148f4:	movw	r3, #4
   148f8:	uxth	r3, r3
   148fc:	bl	150d4 <flatcc_verify_field@@Base>
   14900:	str	r0, [sp, #4]
   14904:	cmp	r0, #0
   14908:	beq	14918 <main@@Base+0x1aec>
   1490c:	ldr	r0, [sp, #4]
   14910:	str	r0, [fp, #-4]
   14914:	b	14a7c <main@@Base+0x1c50>
   14918:	ldr	r0, [sp, #8]
   1491c:	movw	r1, #2
   14920:	uxth	r1, r1
   14924:	movw	r2, #0
   14928:	bl	152e0 <flatcc_verify_string_field@@Base>
   1492c:	str	r0, [sp, #4]
   14930:	cmp	r0, #0
   14934:	beq	14944 <main@@Base+0x1b18>
   14938:	ldr	r0, [sp, #4]
   1493c:	str	r0, [fp, #-4]
   14940:	b	14a7c <main@@Base+0x1c50>
   14944:	ldr	r0, [sp, #8]
   14948:	movw	r1, #3
   1494c:	uxth	r1, r1
   14950:	movw	r2, #8
   14954:	movw	r3, #8
   14958:	uxth	r3, r3
   1495c:	bl	150d4 <flatcc_verify_field@@Base>
   14960:	str	r0, [sp, #4]
   14964:	cmp	r0, #0
   14968:	beq	14978 <main@@Base+0x1b4c>
   1496c:	ldr	r0, [sp, #4]
   14970:	str	r0, [fp, #-4]
   14974:	b	14a7c <main@@Base+0x1c50>
   14978:	ldr	r0, [sp, #8]
   1497c:	movw	r1, #4
   14980:	uxth	r1, r1
   14984:	movw	r2, #0
   14988:	bl	152e0 <flatcc_verify_string_field@@Base>
   1498c:	str	r0, [sp, #4]
   14990:	cmp	r0, #0
   14994:	beq	149a4 <main@@Base+0x1b78>
   14998:	ldr	r0, [sp, #4]
   1499c:	str	r0, [fp, #-4]
   149a0:	b	14a7c <main@@Base+0x1c50>
   149a4:	ldr	r0, [sp, #8]
   149a8:	movw	r1, #5
   149ac:	uxth	r1, r1
   149b0:	movw	r2, #8
   149b4:	movw	r3, #8
   149b8:	uxth	r3, r3
   149bc:	bl	150d4 <flatcc_verify_field@@Base>
   149c0:	str	r0, [sp, #4]
   149c4:	cmp	r0, #0
   149c8:	beq	149d8 <main@@Base+0x1bac>
   149cc:	ldr	r0, [sp, #4]
   149d0:	str	r0, [fp, #-4]
   149d4:	b	14a7c <main@@Base+0x1c50>
   149d8:	ldr	r0, [sp, #8]
   149dc:	movw	r1, #6
   149e0:	uxth	r1, r1
   149e4:	movw	r2, #4
   149e8:	movw	r3, #4
   149ec:	uxth	r3, r3
   149f0:	bl	150d4 <flatcc_verify_field@@Base>
   149f4:	str	r0, [sp, #4]
   149f8:	cmp	r0, #0
   149fc:	beq	14a0c <main@@Base+0x1be0>
   14a00:	ldr	r0, [sp, #4]
   14a04:	str	r0, [fp, #-4]
   14a08:	b	14a7c <main@@Base+0x1c50>
   14a0c:	ldr	r0, [sp, #8]
   14a10:	movw	r1, #7
   14a14:	uxth	r1, r1
   14a18:	movw	r2, #8
   14a1c:	movw	r3, #8
   14a20:	uxth	r3, r3
   14a24:	bl	150d4 <flatcc_verify_field@@Base>
   14a28:	str	r0, [sp, #4]
   14a2c:	cmp	r0, #0
   14a30:	beq	14a40 <main@@Base+0x1c14>
   14a34:	ldr	r0, [sp, #4]
   14a38:	str	r0, [fp, #-4]
   14a3c:	b	14a7c <main@@Base+0x1c50>
   14a40:	ldr	r0, [sp, #8]
   14a44:	movw	r1, #8
   14a48:	uxth	r1, r1
   14a4c:	movw	r2, #4
   14a50:	movw	r3, #4
   14a54:	uxth	r3, r3
   14a58:	bl	150d4 <flatcc_verify_field@@Base>
   14a5c:	str	r0, [sp, #4]
   14a60:	cmp	r0, #0
   14a64:	beq	14a74 <main@@Base+0x1c48>
   14a68:	ldr	r0, [sp, #4]
   14a6c:	str	r0, [fp, #-4]
   14a70:	b	14a7c <main@@Base+0x1c50>
   14a74:	movw	r0, #0
   14a78:	str	r0, [fp, #-4]
   14a7c:	ldr	r0, [fp, #-4]
   14a80:	mov	sp, fp
   14a84:	pop	{fp, pc}
   14a88:	push	{fp, lr}
   14a8c:	mov	fp, sp
   14a90:	sub	sp, sp, #16
   14a94:	str	r0, [sp, #8]
   14a98:	ldr	r0, [sp, #8]
   14a9c:	movw	r1, #0
   14aa0:	uxth	r1, r1
   14aa4:	movw	r2, #8
   14aa8:	movw	r3, #8
   14aac:	uxth	r3, r3
   14ab0:	bl	150d4 <flatcc_verify_field@@Base>
   14ab4:	str	r0, [sp, #4]
   14ab8:	cmp	r0, #0
   14abc:	beq	14acc <main@@Base+0x1ca0>
   14ac0:	ldr	r0, [sp, #4]
   14ac4:	str	r0, [fp, #-4]
   14ac8:	b	14b08 <main@@Base+0x1cdc>
   14acc:	ldr	r0, [sp, #8]
   14ad0:	movw	r1, #1
   14ad4:	uxth	r1, r1
   14ad8:	movw	r2, #4
   14adc:	movw	r3, #4
   14ae0:	uxth	r3, r3
   14ae4:	bl	150d4 <flatcc_verify_field@@Base>
   14ae8:	str	r0, [sp, #4]
   14aec:	cmp	r0, #0
   14af0:	beq	14b00 <main@@Base+0x1cd4>
   14af4:	ldr	r0, [sp, #4]
   14af8:	str	r0, [fp, #-4]
   14afc:	b	14b08 <main@@Base+0x1cdc>
   14b00:	movw	r0, #0
   14b04:	str	r0, [fp, #-4]
   14b08:	ldr	r0, [fp, #-4]
   14b0c:	mov	sp, fp
   14b10:	pop	{fp, pc}
   14b14:	push	{fp, lr}
   14b18:	mov	fp, sp
   14b1c:	sub	sp, sp, #16
   14b20:	str	r0, [sp, #8]
   14b24:	ldr	r0, [sp, #8]
   14b28:	movw	r1, #0
   14b2c:	uxth	r1, r1
   14b30:	movw	r2, #8
   14b34:	movw	r3, #8
   14b38:	uxth	r3, r3
   14b3c:	bl	150d4 <flatcc_verify_field@@Base>
   14b40:	str	r0, [sp, #4]
   14b44:	cmp	r0, #0
   14b48:	beq	14b58 <main@@Base+0x1d2c>
   14b4c:	ldr	r0, [sp, #4]
   14b50:	str	r0, [fp, #-4]
   14b54:	b	14b94 <main@@Base+0x1d68>
   14b58:	ldr	r0, [sp, #8]
   14b5c:	movw	r1, #1
   14b60:	uxth	r1, r1
   14b64:	movw	r2, #4
   14b68:	movw	r3, #4
   14b6c:	uxth	r3, r3
   14b70:	bl	150d4 <flatcc_verify_field@@Base>
   14b74:	str	r0, [sp, #4]
   14b78:	cmp	r0, #0
   14b7c:	beq	14b8c <main@@Base+0x1d60>
   14b80:	ldr	r0, [sp, #4]
   14b84:	str	r0, [fp, #-4]
   14b88:	b	14b94 <main@@Base+0x1d68>
   14b8c:	movw	r0, #0
   14b90:	str	r0, [fp, #-4]
   14b94:	ldr	r0, [fp, #-4]
   14b98:	mov	sp, fp
   14b9c:	pop	{fp, pc}
   14ba0:	push	{fp, lr}
   14ba4:	mov	fp, sp
   14ba8:	sub	sp, sp, #16
   14bac:	str	r0, [sp, #8]
   14bb0:	ldr	r0, [sp, #8]
   14bb4:	ldrb	r0, [r0, #12]
   14bb8:	mov	r1, r0
   14bbc:	cmp	r0, #2
   14bc0:	str	r1, [sp, #4]
   14bc4:	beq	14c1c <main@@Base+0x1df0>
   14bc8:	b	14bcc <main@@Base+0x1da0>
   14bcc:	ldr	r0, [sp, #4]
   14bd0:	cmp	r0, #8
   14bd4:	beq	14c34 <main@@Base+0x1e08>
   14bd8:	b	14bdc <main@@Base+0x1db0>
   14bdc:	ldr	r0, [sp, #4]
   14be0:	cmp	r0, #9
   14be4:	beq	14c50 <main@@Base+0x1e24>
   14be8:	b	14bec <main@@Base+0x1dc0>
   14bec:	ldr	r0, [sp, #4]
   14bf0:	cmp	r0, #10
   14bf4:	beq	14c6c <main@@Base+0x1e40>
   14bf8:	b	14bfc <main@@Base+0x1dd0>
   14bfc:	ldr	r0, [sp, #4]
   14c00:	cmp	r0, #11
   14c04:	beq	14c88 <main@@Base+0x1e5c>
   14c08:	b	14c0c <main@@Base+0x1de0>
   14c0c:	ldr	r0, [sp, #4]
   14c10:	cmp	r0, #255	; 0xff
   14c14:	beq	14c98 <main@@Base+0x1e6c>
   14c18:	b	14ca8 <main@@Base+0x1e7c>
   14c1c:	ldr	r0, [pc, #152]	; 14cbc <main@@Base+0x1e90>
   14c20:	add	r1, pc, r0
   14c24:	ldr	r0, [sp, #8]
   14c28:	bl	16230 <flatcc_verify_union_table@@Base>
   14c2c:	str	r0, [fp, #-4]
   14c30:	b	14cb0 <main@@Base+0x1e84>
   14c34:	ldr	r0, [sp, #8]
   14c38:	movw	r1, #2
   14c3c:	movw	r2, #2
   14c40:	uxth	r2, r2
   14c44:	bl	16284 <flatcc_verify_union_struct@@Base>
   14c48:	str	r0, [fp, #-4]
   14c4c:	b	14cb0 <main@@Base+0x1e84>
   14c50:	ldr	r0, [sp, #8]
   14c54:	movw	r1, #4
   14c58:	movw	r2, #4
   14c5c:	uxth	r2, r2
   14c60:	bl	16284 <flatcc_verify_union_struct@@Base>
   14c64:	str	r0, [fp, #-4]
   14c68:	b	14cb0 <main@@Base+0x1e84>
   14c6c:	ldr	r0, [sp, #8]
   14c70:	movw	r1, #4
   14c74:	movw	r2, #4
   14c78:	uxth	r2, r2
   14c7c:	bl	16284 <flatcc_verify_union_struct@@Base>
   14c80:	str	r0, [fp, #-4]
   14c84:	b	14cb0 <main@@Base+0x1e84>
   14c88:	ldr	r0, [sp, #8]
   14c8c:	bl	1640c <flatcc_verify_union_string@@Base>
   14c90:	str	r0, [fp, #-4]
   14c94:	b	14cb0 <main@@Base+0x1e84>
   14c98:	ldr	r0, [sp, #8]
   14c9c:	bl	1640c <flatcc_verify_union_string@@Base>
   14ca0:	str	r0, [fp, #-4]
   14ca4:	b	14cb0 <main@@Base+0x1e84>
   14ca8:	movw	r0, #0
   14cac:	str	r0, [fp, #-4]
   14cb0:	ldr	r0, [fp, #-4]
   14cb4:	mov	sp, fp
   14cb8:	pop	{fp, pc}
   14cbc:	muleq	r0, r8, r0
   14cc0:	push	{fp, lr}
   14cc4:	mov	fp, sp
   14cc8:	sub	sp, sp, #16
   14ccc:	str	r0, [sp, #8]
   14cd0:	ldr	r0, [sp, #8]
   14cd4:	movw	r1, #0
   14cd8:	uxth	r1, r1
   14cdc:	movw	r2, #4
   14ce0:	movw	r3, #4
   14ce4:	uxth	r3, r3
   14ce8:	bl	150d4 <flatcc_verify_field@@Base>
   14cec:	str	r0, [sp, #4]
   14cf0:	cmp	r0, #0
   14cf4:	beq	14d04 <main@@Base+0x1ed8>
   14cf8:	ldr	r0, [sp, #4]
   14cfc:	str	r0, [fp, #-4]
   14d00:	b	14d0c <main@@Base+0x1ee0>
   14d04:	movw	r0, #0
   14d08:	str	r0, [fp, #-4]
   14d0c:	ldr	r0, [fp, #-4]
   14d10:	mov	sp, fp
   14d14:	pop	{fp, pc}

00014d18 <flatcc_verify_error_string@@Base>:
   14d18:	sub	sp, sp, #12
   14d1c:	str	r0, [sp, #4]
   14d20:	ldr	r0, [sp, #4]
   14d24:	cmp	r0, #36	; 0x24
   14d28:	str	r0, [sp]
   14d2c:	bhi	15024 <flatcc_verify_error_string@@Base+0x30c>
   14d30:	add	r0, pc, #8
   14d34:	ldr	r1, [sp]
   14d38:	ldr	r2, [r0, r1, lsl #2]
   14d3c:	add	pc, r0, r2
   14d40:	muleq	r0, r4, r0
   14d44:	andeq	r0, r0, r4, lsr #1
   14d48:	strheq	r0, [r0], -r4
   14d4c:	andeq	r0, r0, r4, asr #1
   14d50:	ldrdeq	r0, [r0], -r4
   14d54:	andeq	r0, r0, r4, ror #1
   14d58:	strdeq	r0, [r0], -r4
   14d5c:	andeq	r0, r0, r4, lsl #2
   14d60:	andeq	r0, r0, r4, lsl r1
   14d64:	andeq	r0, r0, r4, lsr #2
   14d68:	andeq	r0, r0, r4, lsr r1
   14d6c:	andeq	r0, r0, r4, asr #2
   14d70:	andeq	r0, r0, r4, asr r1
   14d74:	andeq	r0, r0, r4, ror #2
   14d78:	andeq	r0, r0, r4, ror r1
   14d7c:	andeq	r0, r0, r4, lsl #3
   14d80:	muleq	r0, r4, r1
   14d84:	andeq	r0, r0, r4, lsr #3
   14d88:			; <UNDEFINED> instruction: 0x000001b4
   14d8c:	andeq	r0, r0, r4, asr #3
   14d90:	ldrdeq	r0, [r0], -r4
   14d94:	andeq	r0, r0, r4, ror #3
   14d98:	strdeq	r0, [r0], -r4
   14d9c:	andeq	r0, r0, r4, lsl #4
   14da0:	andeq	r0, r0, r4, lsl r2
   14da4:	andeq	r0, r0, r4, lsr #4
   14da8:	andeq	r0, r0, r4, lsr r2
   14dac:	andeq	r0, r0, r4, asr #4
   14db0:	andeq	r0, r0, r4, asr r2
   14db4:	andeq	r0, r0, r4, ror #4
   14db8:	andeq	r0, r0, r4, ror r2
   14dbc:	andeq	r0, r0, r4, lsl #5
   14dc0:	muleq	r0, r4, r2
   14dc4:	andeq	r0, r0, r4, lsr #5
   14dc8:			; <UNDEFINED> instruction: 0x000002b4
   14dcc:	andeq	r0, r0, r4, asr #5
   14dd0:	ldrdeq	r0, [r0], -r4
   14dd4:	ldr	r0, [pc, #752]	; 150cc <flatcc_verify_error_string@@Base+0x3b4>
   14dd8:	add	r0, pc, r0
   14ddc:	str	r0, [sp, #8]
   14de0:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14de4:	ldr	r0, [pc, #732]	; 150c8 <flatcc_verify_error_string@@Base+0x3b0>
   14de8:	add	r0, pc, r0
   14dec:	str	r0, [sp, #8]
   14df0:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14df4:	ldr	r0, [pc, #712]	; 150c4 <flatcc_verify_error_string@@Base+0x3ac>
   14df8:	add	r0, pc, r0
   14dfc:	str	r0, [sp, #8]
   14e00:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14e04:	ldr	r0, [pc, #692]	; 150c0 <flatcc_verify_error_string@@Base+0x3a8>
   14e08:	add	r0, pc, r0
   14e0c:	str	r0, [sp, #8]
   14e10:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14e14:	ldr	r0, [pc, #672]	; 150bc <flatcc_verify_error_string@@Base+0x3a4>
   14e18:	add	r0, pc, r0
   14e1c:	str	r0, [sp, #8]
   14e20:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14e24:	ldr	r0, [pc, #652]	; 150b8 <flatcc_verify_error_string@@Base+0x3a0>
   14e28:	add	r0, pc, r0
   14e2c:	str	r0, [sp, #8]
   14e30:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14e34:	ldr	r0, [pc, #632]	; 150b4 <flatcc_verify_error_string@@Base+0x39c>
   14e38:	add	r0, pc, r0
   14e3c:	str	r0, [sp, #8]
   14e40:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14e44:	ldr	r0, [pc, #612]	; 150b0 <flatcc_verify_error_string@@Base+0x398>
   14e48:	add	r0, pc, r0
   14e4c:	str	r0, [sp, #8]
   14e50:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14e54:	ldr	r0, [pc, #592]	; 150ac <flatcc_verify_error_string@@Base+0x394>
   14e58:	add	r0, pc, r0
   14e5c:	str	r0, [sp, #8]
   14e60:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14e64:	ldr	r0, [pc, #572]	; 150a8 <flatcc_verify_error_string@@Base+0x390>
   14e68:	add	r0, pc, r0
   14e6c:	str	r0, [sp, #8]
   14e70:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14e74:	ldr	r0, [pc, #552]	; 150a4 <flatcc_verify_error_string@@Base+0x38c>
   14e78:	add	r0, pc, r0
   14e7c:	str	r0, [sp, #8]
   14e80:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14e84:	ldr	r0, [pc, #532]	; 150a0 <flatcc_verify_error_string@@Base+0x388>
   14e88:	add	r0, pc, r0
   14e8c:	str	r0, [sp, #8]
   14e90:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14e94:	ldr	r0, [pc, #512]	; 1509c <flatcc_verify_error_string@@Base+0x384>
   14e98:	add	r0, pc, r0
   14e9c:	str	r0, [sp, #8]
   14ea0:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14ea4:	ldr	r0, [pc, #492]	; 15098 <flatcc_verify_error_string@@Base+0x380>
   14ea8:	add	r0, pc, r0
   14eac:	str	r0, [sp, #8]
   14eb0:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14eb4:	ldr	r0, [pc, #472]	; 15094 <flatcc_verify_error_string@@Base+0x37c>
   14eb8:	add	r0, pc, r0
   14ebc:	str	r0, [sp, #8]
   14ec0:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14ec4:	ldr	r0, [pc, #452]	; 15090 <flatcc_verify_error_string@@Base+0x378>
   14ec8:	add	r0, pc, r0
   14ecc:	str	r0, [sp, #8]
   14ed0:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14ed4:	ldr	r0, [pc, #432]	; 1508c <flatcc_verify_error_string@@Base+0x374>
   14ed8:	add	r0, pc, r0
   14edc:	str	r0, [sp, #8]
   14ee0:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14ee4:	ldr	r0, [pc, #412]	; 15088 <flatcc_verify_error_string@@Base+0x370>
   14ee8:	add	r0, pc, r0
   14eec:	str	r0, [sp, #8]
   14ef0:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14ef4:	ldr	r0, [pc, #392]	; 15084 <flatcc_verify_error_string@@Base+0x36c>
   14ef8:	add	r0, pc, r0
   14efc:	str	r0, [sp, #8]
   14f00:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14f04:	ldr	r0, [pc, #372]	; 15080 <flatcc_verify_error_string@@Base+0x368>
   14f08:	add	r0, pc, r0
   14f0c:	str	r0, [sp, #8]
   14f10:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14f14:	ldr	r0, [pc, #352]	; 1507c <flatcc_verify_error_string@@Base+0x364>
   14f18:	add	r0, pc, r0
   14f1c:	str	r0, [sp, #8]
   14f20:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14f24:	ldr	r0, [pc, #332]	; 15078 <flatcc_verify_error_string@@Base+0x360>
   14f28:	add	r0, pc, r0
   14f2c:	str	r0, [sp, #8]
   14f30:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14f34:	ldr	r0, [pc, #312]	; 15074 <flatcc_verify_error_string@@Base+0x35c>
   14f38:	add	r0, pc, r0
   14f3c:	str	r0, [sp, #8]
   14f40:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14f44:	ldr	r0, [pc, #292]	; 15070 <flatcc_verify_error_string@@Base+0x358>
   14f48:	add	r0, pc, r0
   14f4c:	str	r0, [sp, #8]
   14f50:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14f54:	ldr	r0, [pc, #272]	; 1506c <flatcc_verify_error_string@@Base+0x354>
   14f58:	add	r0, pc, r0
   14f5c:	str	r0, [sp, #8]
   14f60:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14f64:	ldr	r0, [pc, #252]	; 15068 <flatcc_verify_error_string@@Base+0x350>
   14f68:	add	r0, pc, r0
   14f6c:	str	r0, [sp, #8]
   14f70:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14f74:	ldr	r0, [pc, #232]	; 15064 <flatcc_verify_error_string@@Base+0x34c>
   14f78:	add	r0, pc, r0
   14f7c:	str	r0, [sp, #8]
   14f80:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14f84:	ldr	r0, [pc, #212]	; 15060 <flatcc_verify_error_string@@Base+0x348>
   14f88:	add	r0, pc, r0
   14f8c:	str	r0, [sp, #8]
   14f90:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14f94:	ldr	r0, [pc, #192]	; 1505c <flatcc_verify_error_string@@Base+0x344>
   14f98:	add	r0, pc, r0
   14f9c:	str	r0, [sp, #8]
   14fa0:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14fa4:	ldr	r0, [pc, #172]	; 15058 <flatcc_verify_error_string@@Base+0x340>
   14fa8:	add	r0, pc, r0
   14fac:	str	r0, [sp, #8]
   14fb0:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14fb4:	ldr	r0, [pc, #152]	; 15054 <flatcc_verify_error_string@@Base+0x33c>
   14fb8:	add	r0, pc, r0
   14fbc:	str	r0, [sp, #8]
   14fc0:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14fc4:	ldr	r0, [pc, #132]	; 15050 <flatcc_verify_error_string@@Base+0x338>
   14fc8:	add	r0, pc, r0
   14fcc:	str	r0, [sp, #8]
   14fd0:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14fd4:	ldr	r0, [pc, #112]	; 1504c <flatcc_verify_error_string@@Base+0x334>
   14fd8:	add	r0, pc, r0
   14fdc:	str	r0, [sp, #8]
   14fe0:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14fe4:	ldr	r0, [pc, #92]	; 15048 <flatcc_verify_error_string@@Base+0x330>
   14fe8:	add	r0, pc, r0
   14fec:	str	r0, [sp, #8]
   14ff0:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   14ff4:	ldr	r0, [pc, #72]	; 15044 <flatcc_verify_error_string@@Base+0x32c>
   14ff8:	add	r0, pc, r0
   14ffc:	str	r0, [sp, #8]
   15000:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   15004:	ldr	r0, [pc, #52]	; 15040 <flatcc_verify_error_string@@Base+0x328>
   15008:	add	r0, pc, r0
   1500c:	str	r0, [sp, #8]
   15010:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   15014:	ldr	r0, [pc, #32]	; 1503c <flatcc_verify_error_string@@Base+0x324>
   15018:	add	r0, pc, r0
   1501c:	str	r0, [sp, #8]
   15020:	b	15030 <flatcc_verify_error_string@@Base+0x318>
   15024:	ldr	r0, [pc, #164]	; 150d0 <flatcc_verify_error_string@@Base+0x3b8>
   15028:	add	r0, pc, r0
   1502c:	str	r0, [sp, #8]
   15030:	ldr	r0, [sp, #8]
   15034:	add	sp, sp, #12
   15038:	bx	lr
   1503c:	andeq	r3, r0, ip, lsl #21
   15040:	andeq	r3, r0, r2, lsl #21
   15044:	andeq	r3, r0, lr, asr sl
   15048:	andeq	r3, r0, r9, asr #20
   1504c:	andeq	r3, r0, r2, lsr sl
   15050:	andeq	r3, r0, sp, lsr #20
   15054:	andeq	r3, r0, r7, lsl sl
   15058:	strdeq	r3, [r0], -pc	; <UNPREDICTABLE>
   1505c:	strdeq	r3, [r0], -r7
   15060:	andeq	r3, r0, ip, ror #19
   15064:	andeq	r3, r0, r8, ror #19
   15068:	andeq	r3, r0, r9, asr #19
   1506c:			; <UNDEFINED> instruction: 0x000039b0
   15070:	muleq	r0, r7, r9
   15074:	andeq	r3, r0, r4, ror r9
   15078:	andeq	r3, r0, r8, asr r9
   1507c:	andeq	r3, r0, r0, asr r9
   15080:	andeq	r3, r0, r0, lsr #21
   15084:	andeq	r3, r0, ip, asr r9
   15088:	andeq	r3, r0, r4, asr #18
   1508c:	andeq	r3, r0, ip, lsr #18
   15090:	andeq	r3, r0, r5, lsl r9
   15094:	andeq	r3, r0, fp, lsl #18
   15098:	andeq	r3, r0, r2, lsl #18
   1509c:	strdeq	r3, [r0], -sl
   150a0:	strdeq	r3, [r0], -r9
   150a4:	strdeq	r3, [r0], -r4
   150a8:	strdeq	r3, [r0], -r0
   150ac:	andeq	r3, r0, ip, ror #17
   150b0:	andeq	r3, r0, r1, ror #17
   150b4:	ldrdeq	r3, [r0], -r2
   150b8:			; <UNDEFINED> instruction: 0x000038bf
   150bc:			; <UNDEFINED> instruction: 0x000038b8
   150c0:	andeq	r3, r0, lr, lsr #17
   150c4:	andeq	r3, r0, sl, lsr #17
   150c8:	andeq	r3, r0, r2, lsr #17
   150cc:	andeq	r3, r0, pc, lsr #17
   150d0:	andeq	r3, r0, sl, lsl #21

000150d4 <flatcc_verify_field@@Base>:
   150d4:	push	{fp, lr}
   150d8:	mov	fp, sp
   150dc:	sub	sp, sp, #24
   150e0:	str	r0, [fp, #-8]
   150e4:	strh	r1, [fp, #-10]
   150e8:	str	r2, [sp, #8]
   150ec:	strh	r3, [sp, #6]
   150f0:	ldr	r0, [fp, #-8]
   150f4:	ldrh	r1, [fp, #-10]
   150f8:	ldr	r3, [sp, #8]
   150fc:	uxth	r1, r1
   15100:	movw	r2, #0
   15104:	ldrh	ip, [sp, #6]
   15108:	str	ip, [sp]
   1510c:	bl	15154 <flatcc_verify_field@@Base+0x80>
   15110:	cmp	r0, #0
   15114:	beq	15140 <flatcc_verify_field@@Base+0x6c>
   15118:	ldr	r0, [fp, #-8]
   1511c:	ldrh	r1, [fp, #-10]
   15120:	ldr	r3, [sp, #8]
   15124:	uxth	r1, r1
   15128:	movw	r2, #0
   1512c:	ldrh	ip, [sp, #6]
   15130:	str	ip, [sp]
   15134:	bl	15154 <flatcc_verify_field@@Base+0x80>
   15138:	str	r0, [fp, #-4]
   1513c:	b	15148 <flatcc_verify_field@@Base+0x74>
   15140:	movw	r0, #0
   15144:	str	r0, [fp, #-4]
   15148:	ldr	r0, [fp, #-4]
   1514c:	mov	sp, fp
   15150:	pop	{fp, pc}
   15154:	push	{fp, lr}
   15158:	mov	fp, sp
   1515c:	sub	sp, sp, #56	; 0x38
   15160:	ldr	ip, [fp, #8]
   15164:	str	r0, [fp, #-8]
   15168:	strh	r1, [fp, #-10]
   1516c:	str	r2, [fp, #-16]
   15170:	str	r3, [fp, #-20]	; 0xffffffec
   15174:	strh	ip, [fp, #-22]	; 0xffffffea
   15178:	ldr	r0, [fp, #-8]
   1517c:	ldr	r0, [r0]
   15180:	str	r0, [sp, #16]
   15184:	ldr	r0, [fp, #-8]
   15188:	ldrh	r1, [fp, #-10]
   1518c:	bl	16fe8 <flatcc_verify_union_field@@Base+0x290>
   15190:	strh	r0, [sp, #22]
   15194:	ldrsh	r0, [sp, #22]
   15198:	cmp	r0, #0
   1519c:	bne	151ec <flatcc_verify_field@@Base+0x118>
   151a0:	b	151a4 <flatcc_verify_field@@Base+0xd0>
   151a4:	ldr	r0, [fp, #-16]
   151a8:	cmp	r0, #0
   151ac:	movw	r0, #0
   151b0:	movne	r0, #1
   151b4:	mvn	r1, #0
   151b8:	eor	r0, r0, r1
   151bc:	and	r0, r0, #1
   151c0:	str	r0, [sp, #12]
   151c4:	ldr	r0, [sp, #12]
   151c8:	cmp	r0, #0
   151cc:	bne	151dc <flatcc_verify_field@@Base+0x108>
   151d0:	movw	r0, #4
   151d4:	str	r0, [fp, #-4]
   151d8:	b	152d4 <flatcc_verify_field@@Base+0x200>
   151dc:	b	151e0 <flatcc_verify_field@@Base+0x10c>
   151e0:	movw	r0, #0
   151e4:	str	r0, [fp, #-4]
   151e8:	b	152d4 <flatcc_verify_field@@Base+0x200>
   151ec:	ldrh	r0, [sp, #22]
   151f0:	str	r0, [sp, #28]
   151f4:	ldr	r0, [sp, #28]
   151f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   151fc:	add	r0, r0, r1
   15200:	str	r0, [sp, #24]
   15204:	ldr	r0, [sp, #24]
   15208:	ldr	r1, [fp, #-8]
   1520c:	ldrh	r1, [r1, #20]
   15210:	cmp	r0, r1
   15214:	movw	r0, #0
   15218:	movls	r0, #1
   1521c:	and	r0, r0, #1
   15220:	str	r0, [sp, #8]
   15224:	ldr	r0, [sp, #8]
   15228:	cmp	r0, #0
   1522c:	bne	1523c <flatcc_verify_field@@Base+0x168>
   15230:	movw	r0, #13
   15234:	str	r0, [fp, #-4]
   15238:	b	152d4 <flatcc_verify_field@@Base+0x200>
   1523c:	b	15240 <flatcc_verify_field@@Base+0x16c>
   15240:	b	15244 <flatcc_verify_field@@Base+0x170>
   15244:	movw	r0, #1
   15248:	str	r0, [sp, #4]
   1524c:	ldr	r0, [sp, #4]
   15250:	cmp	r0, #0
   15254:	bne	15264 <flatcc_verify_field@@Base+0x190>
   15258:	movw	r0, #14
   1525c:	str	r0, [fp, #-4]
   15260:	b	152d4 <flatcc_verify_field@@Base+0x200>
   15264:	b	15268 <flatcc_verify_field@@Base+0x194>
   15268:	ldr	r0, [fp, #-8]
   1526c:	ldr	r0, [r0, #16]
   15270:	ldr	r1, [sp, #16]
   15274:	add	r0, r0, r1
   15278:	ldr	r1, [sp, #28]
   1527c:	add	r0, r1, r0
   15280:	str	r0, [sp, #28]
   15284:	ldr	r0, [sp, #28]
   15288:	ldrh	r1, [fp, #-22]	; 0xffffffea
   1528c:	sub	r1, r1, #1
   15290:	and	r0, r0, r1
   15294:	cmp	r0, #0
   15298:	movw	r0, #0
   1529c:	movne	r0, #1
   152a0:	mvn	r1, #0
   152a4:	eor	r0, r0, r1
   152a8:	and	r0, r0, #1
   152ac:	str	r0, [sp]
   152b0:	ldr	r0, [sp]
   152b4:	cmp	r0, #0
   152b8:	bne	152c8 <flatcc_verify_field@@Base+0x1f4>
   152bc:	movw	r0, #12
   152c0:	str	r0, [fp, #-4]
   152c4:	b	152d4 <flatcc_verify_field@@Base+0x200>
   152c8:	b	152cc <flatcc_verify_field@@Base+0x1f8>
   152cc:	movw	r0, #0
   152d0:	str	r0, [fp, #-4]
   152d4:	ldr	r0, [fp, #-4]
   152d8:	mov	sp, fp
   152dc:	pop	{fp, pc}

000152e0 <flatcc_verify_string_field@@Base>:
   152e0:	push	{fp, lr}
   152e4:	mov	fp, sp
   152e8:	sub	sp, sp, #40	; 0x28
   152ec:	str	r0, [fp, #-8]
   152f0:	strh	r1, [fp, #-10]
   152f4:	str	r2, [fp, #-16]
   152f8:	ldr	r0, [fp, #-8]
   152fc:	ldrh	r1, [fp, #-10]
   15300:	ldr	r2, [fp, #-16]
   15304:	uxth	r1, r1
   15308:	add	r3, sp, #20
   1530c:	bl	153a0 <flatcc_verify_string_field@@Base+0xc0>
   15310:	str	r0, [sp, #16]
   15314:	ldr	r0, [sp, #16]
   15318:	cmp	r0, #0
   1531c:	bne	1532c <flatcc_verify_string_field@@Base+0x4c>
   15320:	ldr	r0, [sp, #20]
   15324:	cmp	r0, #0
   15328:	bne	15338 <flatcc_verify_string_field@@Base+0x58>
   1532c:	ldr	r0, [sp, #16]
   15330:	str	r0, [fp, #-4]
   15334:	b	15394 <flatcc_verify_string_field@@Base+0xb4>
   15338:	b	1533c <flatcc_verify_string_field@@Base+0x5c>
   1533c:	ldr	r0, [fp, #-8]
   15340:	ldr	r0, [r0]
   15344:	ldr	r1, [fp, #-8]
   15348:	ldr	r1, [r1, #4]
   1534c:	ldr	r2, [sp, #20]
   15350:	ldr	r3, [fp, #-8]
   15354:	ldr	r3, [r3]
   15358:	ldr	ip, [sp, #20]
   1535c:	str	r0, [sp, #12]
   15360:	mov	r0, r3
   15364:	str	r1, [sp, #8]
   15368:	mov	r1, ip
   1536c:	str	r2, [sp, #4]
   15370:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   15374:	ldr	r1, [sp, #12]
   15378:	str	r0, [sp]
   1537c:	mov	r0, r1
   15380:	ldr	r1, [sp, #8]
   15384:	ldr	r2, [sp, #4]
   15388:	ldr	r3, [sp]
   1538c:	bl	154f4 <flatcc_verify_string_field@@Base+0x214>
   15390:	str	r0, [fp, #-4]
   15394:	ldr	r0, [fp, #-4]
   15398:	mov	sp, fp
   1539c:	pop	{fp, pc}
   153a0:	push	{fp, lr}
   153a4:	mov	fp, sp
   153a8:	sub	sp, sp, #48	; 0x30
   153ac:	str	r0, [fp, #-8]
   153b0:	strh	r1, [fp, #-10]
   153b4:	str	r2, [fp, #-16]
   153b8:	str	r3, [fp, #-20]	; 0xffffffec
   153bc:	ldr	r0, [fp, #-8]
   153c0:	ldrh	r1, [fp, #-10]
   153c4:	bl	16fe8 <flatcc_verify_union_field@@Base+0x290>
   153c8:	strh	r0, [sp, #18]
   153cc:	ldrsh	r0, [sp, #18]
   153d0:	cmp	r0, #0
   153d4:	bne	15408 <flatcc_verify_string_field@@Base+0x128>
   153d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   153dc:	movw	r1, #0
   153e0:	str	r1, [r0]
   153e4:	ldr	r0, [fp, #-16]
   153e8:	cmp	r0, #0
   153ec:	beq	153fc <flatcc_verify_string_field@@Base+0x11c>
   153f0:	movw	r0, #4
   153f4:	str	r0, [fp, #-4]
   153f8:	b	154e8 <flatcc_verify_string_field@@Base+0x208>
   153fc:	movw	r0, #0
   15400:	str	r0, [fp, #-4]
   15404:	b	154e8 <flatcc_verify_string_field@@Base+0x208>
   15408:	ldrh	r0, [sp, #18]
   1540c:	str	r0, [sp, #24]
   15410:	ldr	r0, [sp, #24]
   15414:	add	r0, r0, #4
   15418:	str	r0, [sp, #20]
   1541c:	ldr	r0, [sp, #20]
   15420:	ldr	r1, [fp, #-8]
   15424:	ldrh	r1, [r1, #20]
   15428:	cmp	r0, r1
   1542c:	movw	r0, #0
   15430:	movls	r0, #1
   15434:	and	r0, r0, #1
   15438:	str	r0, [sp, #12]
   1543c:	ldr	r0, [sp, #12]
   15440:	cmp	r0, #0
   15444:	bne	15454 <flatcc_verify_string_field@@Base+0x174>
   15448:	movw	r0, #13
   1544c:	str	r0, [fp, #-4]
   15450:	b	154e8 <flatcc_verify_string_field@@Base+0x208>
   15454:	b	15458 <flatcc_verify_string_field@@Base+0x178>
   15458:	b	1545c <flatcc_verify_string_field@@Base+0x17c>
   1545c:	movw	r0, #1
   15460:	str	r0, [sp, #8]
   15464:	ldr	r0, [sp, #8]
   15468:	cmp	r0, #0
   1546c:	bne	1547c <flatcc_verify_string_field@@Base+0x19c>
   15470:	movw	r0, #14
   15474:	str	r0, [fp, #-4]
   15478:	b	154e8 <flatcc_verify_string_field@@Base+0x208>
   1547c:	b	15480 <flatcc_verify_string_field@@Base+0x1a0>
   15480:	ldr	r0, [fp, #-8]
   15484:	ldr	r0, [r0, #16]
   15488:	ldr	r1, [sp, #24]
   1548c:	add	r0, r1, r0
   15490:	str	r0, [sp, #24]
   15494:	ldr	r0, [sp, #24]
   15498:	and	r0, r0, #3
   1549c:	cmp	r0, #0
   154a0:	movw	r0, #0
   154a4:	movne	r0, #1
   154a8:	mvn	r1, #0
   154ac:	eor	r0, r0, r1
   154b0:	and	r0, r0, #1
   154b4:	str	r0, [sp, #4]
   154b8:	ldr	r0, [sp, #4]
   154bc:	cmp	r0, #0
   154c0:	bne	154d0 <flatcc_verify_string_field@@Base+0x1f0>
   154c4:	movw	r0, #12
   154c8:	str	r0, [fp, #-4]
   154cc:	b	154e8 <flatcc_verify_string_field@@Base+0x208>
   154d0:	b	154d4 <flatcc_verify_string_field@@Base+0x1f4>
   154d4:	ldr	r0, [sp, #24]
   154d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   154dc:	str	r0, [r1]
   154e0:	movw	r0, #0
   154e4:	str	r0, [fp, #-4]
   154e8:	ldr	r0, [fp, #-4]
   154ec:	mov	sp, fp
   154f0:	pop	{fp, pc}
   154f4:	push	{fp, lr}
   154f8:	mov	fp, sp
   154fc:	sub	sp, sp, #40	; 0x28
   15500:	str	r0, [fp, #-8]
   15504:	str	r1, [fp, #-12]
   15508:	str	r2, [fp, #-16]
   1550c:	str	r3, [sp, #20]
   15510:	ldr	r0, [fp, #-12]
   15514:	ldr	r1, [fp, #-16]
   15518:	ldr	r2, [sp, #20]
   1551c:	bl	175cc <flatcc_verify_union_vector_field@@Base+0x57c>
   15520:	str	r0, [sp, #12]
   15524:	ldr	r0, [sp, #12]
   15528:	cmp	r0, #0
   1552c:	bne	1553c <flatcc_verify_string_field@@Base+0x25c>
   15530:	movw	r0, #17
   15534:	str	r0, [fp, #-4]
   15538:	b	15604 <flatcc_verify_string_field@@Base+0x324>
   1553c:	b	15540 <flatcc_verify_string_field@@Base+0x260>
   15540:	ldr	r0, [sp, #20]
   15544:	ldr	r1, [fp, #-16]
   15548:	add	r0, r1, r0
   1554c:	str	r0, [fp, #-16]
   15550:	ldr	r0, [fp, #-8]
   15554:	ldr	r1, [fp, #-16]
   15558:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   1555c:	str	r0, [sp, #16]
   15560:	ldr	r0, [fp, #-16]
   15564:	add	r0, r0, #4
   15568:	str	r0, [fp, #-16]
   1556c:	ldr	r0, [fp, #-12]
   15570:	ldr	r1, [fp, #-16]
   15574:	sub	r0, r0, r1
   15578:	ldr	r1, [sp, #16]
   1557c:	add	r1, r1, #1
   15580:	cmp	r0, r1
   15584:	movw	r0, #0
   15588:	movcs	r0, #1
   1558c:	and	r0, r0, #1
   15590:	str	r0, [sp, #8]
   15594:	ldr	r0, [sp, #8]
   15598:	cmp	r0, #0
   1559c:	bne	155ac <flatcc_verify_string_field@@Base+0x2cc>
   155a0:	movw	r0, #8
   155a4:	str	r0, [fp, #-4]
   155a8:	b	15604 <flatcc_verify_string_field@@Base+0x324>
   155ac:	b	155b0 <flatcc_verify_string_field@@Base+0x2d0>
   155b0:	b	155b4 <flatcc_verify_string_field@@Base+0x2d4>
   155b4:	ldr	r0, [fp, #-8]
   155b8:	ldr	r1, [fp, #-16]
   155bc:	add	r0, r0, r1
   155c0:	ldr	r1, [sp, #16]
   155c4:	add	r0, r0, r1
   155c8:	ldrb	r0, [r0]
   155cc:	cmp	r0, #0
   155d0:	movw	r0, #0
   155d4:	moveq	r0, #1
   155d8:	and	r0, r0, #1
   155dc:	str	r0, [sp, #4]
   155e0:	ldr	r0, [sp, #4]
   155e4:	cmp	r0, #0
   155e8:	bne	155f8 <flatcc_verify_string_field@@Base+0x318>
   155ec:	movw	r0, #7
   155f0:	str	r0, [fp, #-4]
   155f4:	b	15604 <flatcc_verify_string_field@@Base+0x324>
   155f8:	b	155fc <flatcc_verify_string_field@@Base+0x31c>
   155fc:	movw	r0, #0
   15600:	str	r0, [fp, #-4]
   15604:	ldr	r0, [fp, #-4]
   15608:	mov	sp, fp
   1560c:	pop	{fp, pc}
   15610:	push	{fp, lr}
   15614:	mov	fp, sp
   15618:	sub	sp, sp, #8
   1561c:	str	r0, [sp, #4]
   15620:	str	r1, [sp]
   15624:	ldr	r0, [sp, #4]
   15628:	ldr	r1, [sp]
   1562c:	add	r0, r0, r1
   15630:	bl	17650 <flatcc_verify_union_vector_field@@Base+0x600>
   15634:	mov	sp, fp
   15638:	pop	{fp, pc}

0001563c <flatcc_verify_vector_field@@Base>:
   1563c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15640:	add	fp, sp, #24
   15644:	sub	sp, sp, #80	; 0x50
   15648:	ldr	ip, [fp, #12]
   1564c:	ldr	lr, [fp, #8]
   15650:	str	r0, [fp, #-32]	; 0xffffffe0
   15654:	strh	r1, [fp, #-34]	; 0xffffffde
   15658:	str	r2, [fp, #-40]	; 0xffffffd8
   1565c:	str	r3, [fp, #-44]	; 0xffffffd4
   15660:	strh	lr, [fp, #-46]	; 0xffffffd2
   15664:	str	ip, [sp, #44]	; 0x2c
   15668:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1566c:	ldrh	r1, [fp, #-34]	; 0xffffffde
   15670:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15674:	uxth	r1, r1
   15678:	add	r3, sp, #52	; 0x34
   1567c:	bl	153a0 <flatcc_verify_string_field@@Base+0xc0>
   15680:	str	r0, [sp, #48]	; 0x30
   15684:	ldr	r0, [sp, #48]	; 0x30
   15688:	cmp	r0, #0
   1568c:	bne	1569c <flatcc_verify_vector_field@@Base+0x60>
   15690:	ldr	r0, [sp, #52]	; 0x34
   15694:	cmp	r0, #0
   15698:	bne	156a8 <flatcc_verify_vector_field@@Base+0x6c>
   1569c:	ldr	r0, [sp, #48]	; 0x30
   156a0:	str	r0, [fp, #-28]	; 0xffffffe4
   156a4:	b	15744 <flatcc_verify_vector_field@@Base+0x108>
   156a8:	b	156ac <flatcc_verify_vector_field@@Base+0x70>
   156ac:	ldr	r0, [fp, #-32]	; 0xffffffe0
   156b0:	ldr	r0, [r0]
   156b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   156b8:	ldr	r1, [r1, #4]
   156bc:	ldr	r2, [sp, #52]	; 0x34
   156c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   156c4:	ldr	r3, [r3]
   156c8:	ldr	ip, [sp, #52]	; 0x34
   156cc:	str	r0, [sp, #40]	; 0x28
   156d0:	mov	r0, r3
   156d4:	str	r1, [sp, #36]	; 0x24
   156d8:	mov	r1, ip
   156dc:	str	r2, [sp, #32]
   156e0:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   156e4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   156e8:	ldrh	r2, [fp, #-46]	; 0xffffffd2
   156ec:	ldr	r3, [fp, #12]
   156f0:	ldr	ip, [sp, #40]	; 0x28
   156f4:	str	r0, [sp, #28]
   156f8:	mov	r0, ip
   156fc:	ldr	lr, [sp, #36]	; 0x24
   15700:	str	r1, [sp, #24]
   15704:	mov	r1, lr
   15708:	ldr	r4, [sp, #32]
   1570c:	str	r2, [sp, #20]
   15710:	mov	r2, r4
   15714:	ldr	r5, [sp, #28]
   15718:	str	r3, [sp, #16]
   1571c:	mov	r3, r5
   15720:	ldr	r6, [sp, #24]
   15724:	str	r6, [sp]
   15728:	ldr	r7, [sp, #20]
   1572c:	uxth	r8, r7
   15730:	str	r8, [sp, #4]
   15734:	ldr	r8, [sp, #16]
   15738:	str	r8, [sp, #8]
   1573c:	bl	15750 <flatcc_verify_vector_field@@Base+0x114>
   15740:	str	r0, [fp, #-28]	; 0xffffffe4
   15744:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15748:	sub	sp, fp, #24
   1574c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   15750:	push	{r4, sl, fp, lr}
   15754:	add	fp, sp, #8
   15758:	sub	sp, sp, #48	; 0x30
   1575c:	ldr	ip, [fp, #16]
   15760:	ldr	lr, [fp, #12]
   15764:	ldr	r4, [fp, #8]
   15768:	str	r0, [fp, #-16]
   1576c:	str	r1, [fp, #-20]	; 0xffffffec
   15770:	str	r2, [fp, #-24]	; 0xffffffe8
   15774:	str	r3, [sp, #28]
   15778:	strh	lr, [sp, #26]
   1577c:	str	r4, [sp, #4]
   15780:	str	ip, [sp]
   15784:	ldr	r0, [fp, #-20]	; 0xffffffec
   15788:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1578c:	ldr	r2, [sp, #28]
   15790:	ldrh	r3, [sp, #26]
   15794:	bl	17688 <flatcc_verify_union_vector_field@@Base+0x638>
   15798:	str	r0, [sp, #16]
   1579c:	ldr	r0, [sp, #16]
   157a0:	cmp	r0, #0
   157a4:	bne	157b4 <flatcc_verify_vector_field@@Base+0x178>
   157a8:	movw	r0, #16
   157ac:	str	r0, [fp, #-12]
   157b0:	b	15870 <flatcc_verify_vector_field@@Base+0x234>
   157b4:	b	157b8 <flatcc_verify_vector_field@@Base+0x17c>
   157b8:	ldr	r0, [sp, #28]
   157bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   157c0:	add	r0, r1, r0
   157c4:	str	r0, [fp, #-24]	; 0xffffffe8
   157c8:	ldr	r0, [fp, #-16]
   157cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   157d0:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   157d4:	str	r0, [sp, #20]
   157d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   157dc:	add	r0, r0, #4
   157e0:	str	r0, [fp, #-24]	; 0xffffffe8
   157e4:	ldr	r0, [sp, #20]
   157e8:	ldr	r1, [fp, #16]
   157ec:	cmp	r0, r1
   157f0:	movw	r0, #0
   157f4:	movls	r0, #1
   157f8:	and	r0, r0, #1
   157fc:	str	r0, [sp, #12]
   15800:	ldr	r0, [sp, #12]
   15804:	cmp	r0, #0
   15808:	bne	15818 <flatcc_verify_vector_field@@Base+0x1dc>
   1580c:	movw	r0, #25
   15810:	str	r0, [fp, #-12]
   15814:	b	15870 <flatcc_verify_vector_field@@Base+0x234>
   15818:	b	1581c <flatcc_verify_vector_field@@Base+0x1e0>
   1581c:	b	15820 <flatcc_verify_vector_field@@Base+0x1e4>
   15820:	ldr	r0, [fp, #-20]	; 0xffffffec
   15824:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15828:	sub	r0, r0, r1
   1582c:	ldr	r1, [sp, #20]
   15830:	ldr	r2, [fp, #8]
   15834:	mul	r1, r1, r2
   15838:	cmp	r0, r1
   1583c:	movw	r0, #0
   15840:	movcs	r0, #1
   15844:	and	r0, r0, #1
   15848:	str	r0, [sp, #8]
   1584c:	ldr	r0, [sp, #8]
   15850:	cmp	r0, #0
   15854:	bne	15864 <flatcc_verify_vector_field@@Base+0x228>
   15858:	movw	r0, #26
   1585c:	str	r0, [fp, #-12]
   15860:	b	15870 <flatcc_verify_vector_field@@Base+0x234>
   15864:	b	15868 <flatcc_verify_vector_field@@Base+0x22c>
   15868:	movw	r0, #0
   1586c:	str	r0, [fp, #-12]
   15870:	ldr	r0, [fp, #-12]
   15874:	sub	sp, fp, #8
   15878:	pop	{r4, sl, fp, pc}

0001587c <flatcc_verify_string_vector_field@@Base>:
   1587c:	push	{fp, lr}
   15880:	mov	fp, sp
   15884:	sub	sp, sp, #40	; 0x28
   15888:	str	r0, [fp, #-8]
   1588c:	strh	r1, [fp, #-10]
   15890:	str	r2, [fp, #-16]
   15894:	ldr	r0, [fp, #-8]
   15898:	ldrh	r1, [fp, #-10]
   1589c:	ldr	r2, [fp, #-16]
   158a0:	uxth	r1, r1
   158a4:	add	r3, sp, #20
   158a8:	bl	153a0 <flatcc_verify_string_field@@Base+0xc0>
   158ac:	str	r0, [sp, #16]
   158b0:	ldr	r0, [sp, #16]
   158b4:	cmp	r0, #0
   158b8:	bne	158c8 <flatcc_verify_string_vector_field@@Base+0x4c>
   158bc:	ldr	r0, [sp, #20]
   158c0:	cmp	r0, #0
   158c4:	bne	158d4 <flatcc_verify_string_vector_field@@Base+0x58>
   158c8:	ldr	r0, [sp, #16]
   158cc:	str	r0, [fp, #-4]
   158d0:	b	15930 <flatcc_verify_string_vector_field@@Base+0xb4>
   158d4:	b	158d8 <flatcc_verify_string_vector_field@@Base+0x5c>
   158d8:	ldr	r0, [fp, #-8]
   158dc:	ldr	r0, [r0]
   158e0:	ldr	r1, [fp, #-8]
   158e4:	ldr	r1, [r1, #4]
   158e8:	ldr	r2, [sp, #20]
   158ec:	ldr	r3, [fp, #-8]
   158f0:	ldr	r3, [r3]
   158f4:	ldr	ip, [sp, #20]
   158f8:	str	r0, [sp, #12]
   158fc:	mov	r0, r3
   15900:	str	r1, [sp, #8]
   15904:	mov	r1, ip
   15908:	str	r2, [sp, #4]
   1590c:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   15910:	ldr	r1, [sp, #12]
   15914:	str	r0, [sp]
   15918:	mov	r0, r1
   1591c:	ldr	r1, [sp, #8]
   15920:	ldr	r2, [sp, #4]
   15924:	ldr	r3, [sp]
   15928:	bl	1593c <flatcc_verify_string_vector_field@@Base+0xc0>
   1592c:	str	r0, [fp, #-4]
   15930:	ldr	r0, [fp, #-4]
   15934:	mov	sp, fp
   15938:	pop	{fp, pc}
   1593c:	push	{fp, lr}
   15940:	mov	fp, sp
   15944:	sub	sp, sp, #80	; 0x50
   15948:	ldr	ip, [pc, #424]	; 15af8 <flatcc_verify_string_vector_field@@Base+0x27c>
   1594c:	str	r0, [fp, #-8]
   15950:	str	r1, [fp, #-12]
   15954:	str	r2, [fp, #-16]
   15958:	str	r3, [fp, #-20]	; 0xffffffec
   1595c:	ldr	r0, [fp, #-8]
   15960:	ldr	r1, [fp, #-12]
   15964:	ldr	r2, [fp, #-16]
   15968:	ldr	r3, [fp, #-20]	; 0xffffffec
   1596c:	movw	lr, #4
   15970:	str	lr, [sp]
   15974:	movw	lr, #4
   15978:	uxth	lr, lr
   1597c:	str	lr, [sp, #4]
   15980:	str	ip, [sp, #8]
   15984:	bl	15750 <flatcc_verify_vector_field@@Base+0x114>
   15988:	cmp	r0, #0
   1598c:	beq	159e0 <flatcc_verify_string_vector_field@@Base+0x164>
   15990:	ldr	r0, [pc, #352]	; 15af8 <flatcc_verify_string_vector_field@@Base+0x27c>
   15994:	ldr	r1, [fp, #-8]
   15998:	ldr	r2, [fp, #-12]
   1599c:	ldr	r3, [fp, #-16]
   159a0:	ldr	ip, [fp, #-20]	; 0xffffffec
   159a4:	str	r0, [fp, #-32]	; 0xffffffe0
   159a8:	mov	r0, r1
   159ac:	mov	r1, r2
   159b0:	mov	r2, r3
   159b4:	mov	r3, ip
   159b8:	movw	ip, #4
   159bc:	str	ip, [sp]
   159c0:	movw	ip, #4
   159c4:	uxth	ip, ip
   159c8:	str	ip, [sp, #4]
   159cc:	ldr	ip, [fp, #-32]	; 0xffffffe0
   159d0:	str	ip, [sp, #8]
   159d4:	bl	15750 <flatcc_verify_vector_field@@Base+0x114>
   159d8:	str	r0, [fp, #-4]
   159dc:	b	15aec <flatcc_verify_string_vector_field@@Base+0x270>
   159e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   159e4:	ldr	r1, [fp, #-16]
   159e8:	add	r0, r1, r0
   159ec:	str	r0, [fp, #-16]
   159f0:	ldr	r0, [fp, #-8]
   159f4:	ldr	r1, [fp, #-16]
   159f8:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   159fc:	str	r0, [fp, #-28]	; 0xffffffe4
   15a00:	ldr	r0, [fp, #-16]
   15a04:	add	r0, r0, #4
   15a08:	str	r0, [fp, #-16]
   15a0c:	movw	r0, #0
   15a10:	str	r0, [fp, #-24]	; 0xffffffe8
   15a14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15a1c:	cmp	r0, r1
   15a20:	bcs	15ae4 <flatcc_verify_string_vector_field@@Base+0x268>
   15a24:	ldr	r0, [fp, #-8]
   15a28:	ldr	r1, [fp, #-12]
   15a2c:	ldr	r2, [fp, #-16]
   15a30:	ldr	r3, [fp, #-8]
   15a34:	ldr	ip, [fp, #-16]
   15a38:	str	r0, [fp, #-36]	; 0xffffffdc
   15a3c:	mov	r0, r3
   15a40:	str	r1, [sp, #40]	; 0x28
   15a44:	mov	r1, ip
   15a48:	str	r2, [sp, #36]	; 0x24
   15a4c:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   15a50:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15a54:	str	r0, [sp, #32]
   15a58:	mov	r0, r1
   15a5c:	ldr	r1, [sp, #40]	; 0x28
   15a60:	ldr	r2, [sp, #36]	; 0x24
   15a64:	ldr	r3, [sp, #32]
   15a68:	bl	154f4 <flatcc_verify_string_field@@Base+0x214>
   15a6c:	cmp	r0, #0
   15a70:	beq	15ac4 <flatcc_verify_string_vector_field@@Base+0x248>
   15a74:	ldr	r0, [fp, #-8]
   15a78:	ldr	r1, [fp, #-12]
   15a7c:	ldr	r2, [fp, #-16]
   15a80:	ldr	r3, [fp, #-8]
   15a84:	ldr	ip, [fp, #-16]
   15a88:	str	r0, [sp, #28]
   15a8c:	mov	r0, r3
   15a90:	str	r1, [sp, #24]
   15a94:	mov	r1, ip
   15a98:	str	r2, [sp, #20]
   15a9c:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   15aa0:	ldr	r1, [sp, #28]
   15aa4:	str	r0, [sp, #16]
   15aa8:	mov	r0, r1
   15aac:	ldr	r1, [sp, #24]
   15ab0:	ldr	r2, [sp, #20]
   15ab4:	ldr	r3, [sp, #16]
   15ab8:	bl	154f4 <flatcc_verify_string_field@@Base+0x214>
   15abc:	str	r0, [fp, #-4]
   15ac0:	b	15aec <flatcc_verify_string_vector_field@@Base+0x270>
   15ac4:	b	15ac8 <flatcc_verify_string_vector_field@@Base+0x24c>
   15ac8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15acc:	add	r0, r0, #1
   15ad0:	str	r0, [fp, #-24]	; 0xffffffe8
   15ad4:	ldr	r0, [fp, #-16]
   15ad8:	add	r0, r0, #4
   15adc:	str	r0, [fp, #-16]
   15ae0:	b	15a14 <flatcc_verify_string_vector_field@@Base+0x198>
   15ae4:	movw	r0, #0
   15ae8:	str	r0, [fp, #-4]
   15aec:	ldr	r0, [fp, #-4]
   15af0:	mov	sp, fp
   15af4:	pop	{fp, pc}
   15af8:	svccc	0x00ffffff

00015afc <flatcc_verify_table_field@@Base>:
   15afc:	push	{r4, r5, fp, lr}
   15b00:	add	fp, sp, #8
   15b04:	sub	sp, sp, #64	; 0x40
   15b08:	str	r0, [fp, #-16]
   15b0c:	strh	r1, [fp, #-18]	; 0xffffffee
   15b10:	str	r2, [fp, #-24]	; 0xffffffe8
   15b14:	str	r3, [fp, #-28]	; 0xffffffe4
   15b18:	ldr	r0, [fp, #-16]
   15b1c:	ldrh	r1, [fp, #-18]	; 0xffffffee
   15b20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15b24:	uxth	r1, r1
   15b28:	sub	r3, fp, #32
   15b2c:	bl	153a0 <flatcc_verify_string_field@@Base+0xc0>
   15b30:	str	r0, [sp, #36]	; 0x24
   15b34:	ldr	r0, [sp, #36]	; 0x24
   15b38:	cmp	r0, #0
   15b3c:	bne	15b4c <flatcc_verify_table_field@@Base+0x50>
   15b40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15b44:	cmp	r0, #0
   15b48:	bne	15b58 <flatcc_verify_table_field@@Base+0x5c>
   15b4c:	ldr	r0, [sp, #36]	; 0x24
   15b50:	str	r0, [fp, #-12]
   15b54:	b	15be0 <flatcc_verify_table_field@@Base+0xe4>
   15b58:	b	15b5c <flatcc_verify_table_field@@Base+0x60>
   15b5c:	ldr	r0, [fp, #-16]
   15b60:	ldr	r0, [r0]
   15b64:	ldr	r1, [fp, #-16]
   15b68:	ldr	r1, [r1, #4]
   15b6c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15b70:	ldr	r3, [fp, #-16]
   15b74:	ldr	r3, [r3]
   15b78:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15b7c:	str	r0, [sp, #32]
   15b80:	mov	r0, r3
   15b84:	str	r1, [sp, #28]
   15b88:	mov	r1, ip
   15b8c:	str	r2, [sp, #24]
   15b90:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   15b94:	ldr	r1, [fp, #-16]
   15b98:	ldr	r1, [r1, #8]
   15b9c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15ba0:	ldr	r3, [sp, #32]
   15ba4:	str	r0, [sp, #20]
   15ba8:	mov	r0, r3
   15bac:	ldr	ip, [sp, #28]
   15bb0:	str	r1, [sp, #16]
   15bb4:	mov	r1, ip
   15bb8:	ldr	lr, [sp, #24]
   15bbc:	str	r2, [sp, #12]
   15bc0:	mov	r2, lr
   15bc4:	ldr	r3, [sp, #20]
   15bc8:	ldr	r4, [sp, #16]
   15bcc:	str	r4, [sp]
   15bd0:	ldr	r5, [sp, #12]
   15bd4:	str	r5, [sp, #4]
   15bd8:	bl	15bec <flatcc_verify_table_field@@Base+0xf0>
   15bdc:	str	r0, [fp, #-12]
   15be0:	ldr	r0, [fp, #-12]
   15be4:	sub	sp, fp, #8
   15be8:	pop	{r4, r5, fp, pc}
   15bec:	push	{fp, lr}
   15bf0:	mov	fp, sp
   15bf4:	sub	sp, sp, #112	; 0x70
   15bf8:	ldr	ip, [fp, #12]
   15bfc:	ldr	lr, [fp, #8]
   15c00:	str	r0, [fp, #-8]
   15c04:	str	r1, [fp, #-12]
   15c08:	str	r2, [fp, #-16]
   15c0c:	str	r3, [fp, #-20]	; 0xffffffec
   15c10:	str	lr, [sp, #24]
   15c14:	str	ip, [sp, #20]
   15c18:	ldr	r0, [fp, #8]
   15c1c:	sub	r0, r0, #1
   15c20:	str	r0, [fp, #-44]	; 0xffffffd4
   15c24:	str	r0, [sp, #56]	; 0x38
   15c28:	ldr	r0, [sp, #56]	; 0x38
   15c2c:	cmp	r0, #0
   15c30:	bne	15c40 <flatcc_verify_table_field@@Base+0x144>
   15c34:	movw	r0, #3
   15c38:	str	r0, [fp, #-4]
   15c3c:	b	15ebc <flatcc_verify_table_field@@Base+0x3c0>
   15c40:	b	15c44 <flatcc_verify_table_field@@Base+0x148>
   15c44:	b	15c48 <flatcc_verify_table_field@@Base+0x14c>
   15c48:	ldr	r0, [fp, #-12]
   15c4c:	ldr	r1, [fp, #-16]
   15c50:	ldr	r2, [fp, #-20]	; 0xffffffec
   15c54:	bl	175cc <flatcc_verify_union_vector_field@@Base+0x57c>
   15c58:	str	r0, [sp, #52]	; 0x34
   15c5c:	ldr	r0, [sp, #52]	; 0x34
   15c60:	cmp	r0, #0
   15c64:	bne	15c74 <flatcc_verify_table_field@@Base+0x178>
   15c68:	movw	r0, #15
   15c6c:	str	r0, [fp, #-4]
   15c70:	b	15ebc <flatcc_verify_table_field@@Base+0x3c0>
   15c74:	b	15c78 <flatcc_verify_table_field@@Base+0x17c>
   15c78:	ldr	r0, [fp, #-16]
   15c7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15c80:	add	r0, r0, r1
   15c84:	str	r0, [fp, #-36]	; 0xffffffdc
   15c88:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15c8c:	ldr	r1, [fp, #-8]
   15c90:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15c94:	str	r0, [sp, #16]
   15c98:	mov	r0, r1
   15c9c:	mov	r1, r2
   15ca0:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   15ca4:	ldr	r1, [sp, #16]
   15ca8:	sub	r0, r1, r0
   15cac:	str	r0, [fp, #-24]	; 0xffffffe8
   15cb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15cb4:	cmp	r0, #0
   15cb8:	movw	r0, #0
   15cbc:	str	r0, [sp, #12]
   15cc0:	blt	15ce4 <flatcc_verify_table_field@@Base+0x1e8>
   15cc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15cc8:	and	r0, r0, #1
   15ccc:	cmp	r0, #0
   15cd0:	movw	r0, #0
   15cd4:	movne	r0, #1
   15cd8:	mvn	r1, #0
   15cdc:	eor	r0, r0, r1
   15ce0:	str	r0, [sp, #12]
   15ce4:	ldr	r0, [sp, #12]
   15ce8:	and	r0, r0, #1
   15cec:	str	r0, [sp, #48]	; 0x30
   15cf0:	ldr	r0, [sp, #48]	; 0x30
   15cf4:	cmp	r0, #0
   15cf8:	bne	15d08 <flatcc_verify_table_field@@Base+0x20c>
   15cfc:	movw	r0, #29
   15d00:	str	r0, [fp, #-4]
   15d04:	b	15ebc <flatcc_verify_table_field@@Base+0x3c0>
   15d08:	b	15d0c <flatcc_verify_table_field@@Base+0x210>
   15d0c:	b	15d10 <flatcc_verify_table_field@@Base+0x214>
   15d10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d14:	add	r0, r0, #2
   15d18:	ldr	r1, [fp, #-12]
   15d1c:	cmp	r0, r1
   15d20:	movw	r0, #0
   15d24:	movls	r0, #1
   15d28:	and	r0, r0, #1
   15d2c:	str	r0, [sp, #44]	; 0x2c
   15d30:	ldr	r0, [sp, #44]	; 0x2c
   15d34:	cmp	r0, #0
   15d38:	bne	15d48 <flatcc_verify_table_field@@Base+0x24c>
   15d3c:	movw	r0, #27
   15d40:	str	r0, [fp, #-4]
   15d44:	b	15ebc <flatcc_verify_table_field@@Base+0x3c0>
   15d48:	b	15d4c <flatcc_verify_table_field@@Base+0x250>
   15d4c:	ldr	r0, [fp, #-8]
   15d50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15d54:	bl	17748 <flatcc_verify_union_vector_field@@Base+0x6f8>
   15d58:	strh	r0, [fp, #-30]	; 0xffffffe2
   15d5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d60:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   15d64:	add	r0, r0, r1
   15d68:	str	r0, [fp, #-28]	; 0xffffffe4
   15d6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15d70:	ldr	r1, [fp, #-12]
   15d74:	cmp	r0, r1
   15d78:	movw	r0, #0
   15d7c:	str	r0, [sp, #8]
   15d80:	bhi	15da4 <flatcc_verify_table_field@@Base+0x2a8>
   15d84:	ldrh	r0, [fp, #-30]	; 0xffffffe2
   15d88:	and	r0, r0, #1
   15d8c:	cmp	r0, #0
   15d90:	movw	r0, #0
   15d94:	movne	r0, #1
   15d98:	mvn	r1, #0
   15d9c:	eor	r0, r0, r1
   15da0:	str	r0, [sp, #8]
   15da4:	ldr	r0, [sp, #8]
   15da8:	and	r0, r0, #1
   15dac:	str	r0, [sp, #40]	; 0x28
   15db0:	ldr	r0, [sp, #40]	; 0x28
   15db4:	cmp	r0, #0
   15db8:	bne	15dc8 <flatcc_verify_table_field@@Base+0x2cc>
   15dbc:	movw	r0, #30
   15dc0:	str	r0, [fp, #-4]
   15dc4:	b	15ebc <flatcc_verify_table_field@@Base+0x3c0>
   15dc8:	b	15dcc <flatcc_verify_table_field@@Base+0x2d0>
   15dcc:	b	15dd0 <flatcc_verify_table_field@@Base+0x2d4>
   15dd0:	movw	r0, #1
   15dd4:	str	r0, [sp, #36]	; 0x24
   15dd8:	ldr	r0, [sp, #36]	; 0x24
   15ddc:	cmp	r0, #0
   15de0:	bne	15df0 <flatcc_verify_table_field@@Base+0x2f4>
   15de4:	movw	r0, #31
   15de8:	str	r0, [fp, #-4]
   15dec:	b	15ebc <flatcc_verify_table_field@@Base+0x3c0>
   15df0:	b	15df4 <flatcc_verify_table_field@@Base+0x2f8>
   15df4:	b	15df8 <flatcc_verify_table_field@@Base+0x2fc>
   15df8:	ldrh	r0, [fp, #-30]	; 0xffffffe2
   15dfc:	cmp	r0, #4
   15e00:	movw	r0, #0
   15e04:	movcs	r0, #1
   15e08:	and	r0, r0, #1
   15e0c:	str	r0, [sp, #32]
   15e10:	ldr	r0, [sp, #32]
   15e14:	cmp	r0, #0
   15e18:	bne	15e28 <flatcc_verify_table_field@@Base+0x32c>
   15e1c:	movw	r0, #28
   15e20:	str	r0, [fp, #-4]
   15e24:	b	15ebc <flatcc_verify_table_field@@Base+0x3c0>
   15e28:	b	15e2c <flatcc_verify_table_field@@Base+0x330>
   15e2c:	ldr	r0, [fp, #-8]
   15e30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15e34:	add	r1, r1, #2
   15e38:	bl	17748 <flatcc_verify_union_vector_field@@Base+0x6f8>
   15e3c:	strh	r0, [fp, #-32]	; 0xffffffe0
   15e40:	ldr	r0, [fp, #-12]
   15e44:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15e48:	sub	r0, r0, r1
   15e4c:	ldrh	r1, [fp, #-32]	; 0xffffffe0
   15e50:	cmp	r0, r1
   15e54:	movw	r0, #0
   15e58:	movcs	r0, #1
   15e5c:	and	r0, r0, #1
   15e60:	str	r0, [sp, #28]
   15e64:	ldr	r0, [sp, #28]
   15e68:	cmp	r0, #0
   15e6c:	bne	15e7c <flatcc_verify_table_field@@Base+0x380>
   15e70:	movw	r0, #20
   15e74:	str	r0, [fp, #-4]
   15e78:	b	15ebc <flatcc_verify_table_field@@Base+0x3c0>
   15e7c:	b	15e80 <flatcc_verify_table_field@@Base+0x384>
   15e80:	ldr	r0, [fp, #-8]
   15e84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15e88:	add	r0, r0, r1
   15e8c:	str	r0, [fp, #-40]	; 0xffffffd8
   15e90:	ldr	r0, [fp, #-8]
   15e94:	str	r0, [fp, #-52]	; 0xffffffcc
   15e98:	ldr	r0, [fp, #-12]
   15e9c:	str	r0, [fp, #-48]	; 0xffffffd0
   15ea0:	ldr	r0, [fp, #12]
   15ea4:	sub	r1, fp, #52	; 0x34
   15ea8:	str	r0, [sp, #4]
   15eac:	mov	r0, r1
   15eb0:	ldr	r1, [sp, #4]
   15eb4:	blx	r1
   15eb8:	str	r0, [fp, #-4]
   15ebc:	ldr	r0, [fp, #-4]
   15ec0:	mov	sp, fp
   15ec4:	pop	{fp, pc}

00015ec8 <flatcc_verify_table_vector_field@@Base>:
   15ec8:	push	{r4, r5, fp, lr}
   15ecc:	add	fp, sp, #8
   15ed0:	sub	sp, sp, #64	; 0x40
   15ed4:	str	r0, [fp, #-16]
   15ed8:	strh	r1, [fp, #-18]	; 0xffffffee
   15edc:	str	r2, [fp, #-24]	; 0xffffffe8
   15ee0:	str	r3, [fp, #-28]	; 0xffffffe4
   15ee4:	ldr	r0, [fp, #-16]
   15ee8:	ldrh	r1, [fp, #-18]	; 0xffffffee
   15eec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15ef0:	uxth	r1, r1
   15ef4:	sub	r3, fp, #32
   15ef8:	bl	153a0 <flatcc_verify_string_field@@Base+0xc0>
   15efc:	str	r0, [sp, #36]	; 0x24
   15f00:	ldr	r0, [sp, #36]	; 0x24
   15f04:	cmp	r0, #0
   15f08:	bne	15f18 <flatcc_verify_table_vector_field@@Base+0x50>
   15f0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15f10:	cmp	r0, #0
   15f14:	bne	15f24 <flatcc_verify_table_vector_field@@Base+0x5c>
   15f18:	ldr	r0, [sp, #36]	; 0x24
   15f1c:	str	r0, [fp, #-12]
   15f20:	b	15fac <flatcc_verify_table_vector_field@@Base+0xe4>
   15f24:	b	15f28 <flatcc_verify_table_vector_field@@Base+0x60>
   15f28:	ldr	r0, [fp, #-16]
   15f2c:	ldr	r0, [r0]
   15f30:	ldr	r1, [fp, #-16]
   15f34:	ldr	r1, [r1, #4]
   15f38:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15f3c:	ldr	r3, [fp, #-16]
   15f40:	ldr	r3, [r3]
   15f44:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15f48:	str	r0, [sp, #32]
   15f4c:	mov	r0, r3
   15f50:	str	r1, [sp, #28]
   15f54:	mov	r1, ip
   15f58:	str	r2, [sp, #24]
   15f5c:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   15f60:	ldr	r1, [fp, #-16]
   15f64:	ldr	r1, [r1, #8]
   15f68:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15f6c:	ldr	r3, [sp, #32]
   15f70:	str	r0, [sp, #20]
   15f74:	mov	r0, r3
   15f78:	ldr	ip, [sp, #28]
   15f7c:	str	r1, [sp, #16]
   15f80:	mov	r1, ip
   15f84:	ldr	lr, [sp, #24]
   15f88:	str	r2, [sp, #12]
   15f8c:	mov	r2, lr
   15f90:	ldr	r3, [sp, #20]
   15f94:	ldr	r4, [sp, #16]
   15f98:	str	r4, [sp]
   15f9c:	ldr	r5, [sp, #12]
   15fa0:	str	r5, [sp, #4]
   15fa4:	bl	15fb8 <flatcc_verify_table_vector_field@@Base+0xf0>
   15fa8:	str	r0, [fp, #-12]
   15fac:	ldr	r0, [fp, #-12]
   15fb0:	sub	sp, fp, #8
   15fb4:	pop	{r4, r5, fp, pc}
   15fb8:	push	{r4, r5, fp, lr}
   15fbc:	add	fp, sp, #8
   15fc0:	sub	sp, sp, #112	; 0x70
   15fc4:	ldr	ip, [fp, #12]
   15fc8:	ldr	lr, [fp, #8]
   15fcc:	str	r0, [fp, #-16]
   15fd0:	str	r1, [fp, #-20]	; 0xffffffec
   15fd4:	str	r2, [fp, #-24]	; 0xffffffe8
   15fd8:	str	r3, [fp, #-28]	; 0xffffffe4
   15fdc:	str	lr, [fp, #-44]	; 0xffffffd4
   15fe0:	str	ip, [fp, #-48]	; 0xffffffd0
   15fe4:	ldr	r0, [fp, #8]
   15fe8:	mvn	r1, #0
   15fec:	add	r1, r0, r1
   15ff0:	str	r1, [fp, #8]
   15ff4:	cmp	r0, #0
   15ff8:	movw	r0, #0
   15ffc:	movgt	r0, #1
   16000:	and	r0, r0, #1
   16004:	str	r0, [fp, #-40]	; 0xffffffd8
   16008:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1600c:	cmp	r0, #0
   16010:	bne	16020 <flatcc_verify_table_vector_field@@Base+0x158>
   16014:	movw	r0, #3
   16018:	str	r0, [fp, #-12]
   1601c:	b	16220 <flatcc_verify_table_vector_field@@Base+0x358>
   16020:	b	16024 <flatcc_verify_table_vector_field@@Base+0x15c>
   16024:	ldr	r0, [pc, #512]	; 1622c <flatcc_verify_table_vector_field@@Base+0x364>
   16028:	ldr	r1, [fp, #-16]
   1602c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16030:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16034:	ldr	ip, [fp, #-28]	; 0xffffffe4
   16038:	str	r0, [fp, #-52]	; 0xffffffcc
   1603c:	mov	r0, r1
   16040:	mov	r1, r2
   16044:	mov	r2, r3
   16048:	mov	r3, ip
   1604c:	movw	ip, #4
   16050:	str	ip, [sp]
   16054:	movw	ip, #4
   16058:	uxth	ip, ip
   1605c:	str	ip, [sp, #4]
   16060:	ldr	ip, [fp, #-52]	; 0xffffffcc
   16064:	str	ip, [sp, #8]
   16068:	bl	15750 <flatcc_verify_vector_field@@Base+0x114>
   1606c:	cmp	r0, #0
   16070:	beq	160c4 <flatcc_verify_table_vector_field@@Base+0x1fc>
   16074:	ldr	r0, [pc, #432]	; 1622c <flatcc_verify_table_vector_field@@Base+0x364>
   16078:	ldr	r1, [fp, #-16]
   1607c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16080:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16084:	ldr	ip, [fp, #-28]	; 0xffffffe4
   16088:	str	r0, [fp, #-56]	; 0xffffffc8
   1608c:	mov	r0, r1
   16090:	mov	r1, r2
   16094:	mov	r2, r3
   16098:	mov	r3, ip
   1609c:	movw	ip, #4
   160a0:	str	ip, [sp]
   160a4:	movw	ip, #4
   160a8:	uxth	ip, ip
   160ac:	str	ip, [sp, #4]
   160b0:	ldr	ip, [fp, #-56]	; 0xffffffc8
   160b4:	str	ip, [sp, #8]
   160b8:	bl	15750 <flatcc_verify_vector_field@@Base+0x114>
   160bc:	str	r0, [fp, #-12]
   160c0:	b	16220 <flatcc_verify_table_vector_field@@Base+0x358>
   160c4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   160c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   160cc:	add	r0, r1, r0
   160d0:	str	r0, [fp, #-24]	; 0xffffffe8
   160d4:	ldr	r0, [fp, #-16]
   160d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   160dc:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   160e0:	str	r0, [fp, #-36]	; 0xffffffdc
   160e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   160e8:	add	r0, r0, #4
   160ec:	str	r0, [fp, #-24]	; 0xffffffe8
   160f0:	movw	r0, #0
   160f4:	str	r0, [fp, #-32]	; 0xffffffe0
   160f8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   160fc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16100:	cmp	r0, r1
   16104:	bcs	16218 <flatcc_verify_table_vector_field@@Base+0x350>
   16108:	ldr	r0, [fp, #-16]
   1610c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16110:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16114:	ldr	r3, [fp, #-16]
   16118:	ldr	ip, [fp, #-24]	; 0xffffffe8
   1611c:	str	r0, [sp, #60]	; 0x3c
   16120:	mov	r0, r3
   16124:	str	r1, [sp, #56]	; 0x38
   16128:	mov	r1, ip
   1612c:	str	r2, [sp, #52]	; 0x34
   16130:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   16134:	ldr	r1, [fp, #8]
   16138:	ldr	r2, [fp, #12]
   1613c:	ldr	r3, [sp, #60]	; 0x3c
   16140:	str	r0, [sp, #48]	; 0x30
   16144:	mov	r0, r3
   16148:	ldr	ip, [sp, #56]	; 0x38
   1614c:	str	r1, [sp, #44]	; 0x2c
   16150:	mov	r1, ip
   16154:	ldr	lr, [sp, #52]	; 0x34
   16158:	str	r2, [sp, #40]	; 0x28
   1615c:	mov	r2, lr
   16160:	ldr	r3, [sp, #48]	; 0x30
   16164:	ldr	r4, [sp, #44]	; 0x2c
   16168:	str	r4, [sp]
   1616c:	ldr	r5, [sp, #40]	; 0x28
   16170:	str	r5, [sp, #4]
   16174:	bl	15bec <flatcc_verify_table_field@@Base+0xf0>
   16178:	cmp	r0, #0
   1617c:	beq	161f8 <flatcc_verify_table_vector_field@@Base+0x330>
   16180:	ldr	r0, [fp, #-16]
   16184:	ldr	r1, [fp, #-20]	; 0xffffffec
   16188:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1618c:	ldr	r3, [fp, #-16]
   16190:	ldr	ip, [fp, #-24]	; 0xffffffe8
   16194:	str	r0, [sp, #36]	; 0x24
   16198:	mov	r0, r3
   1619c:	str	r1, [sp, #32]
   161a0:	mov	r1, ip
   161a4:	str	r2, [sp, #28]
   161a8:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   161ac:	ldr	r1, [fp, #8]
   161b0:	ldr	r2, [fp, #12]
   161b4:	ldr	r3, [sp, #36]	; 0x24
   161b8:	str	r0, [sp, #24]
   161bc:	mov	r0, r3
   161c0:	ldr	ip, [sp, #32]
   161c4:	str	r1, [sp, #20]
   161c8:	mov	r1, ip
   161cc:	ldr	lr, [sp, #28]
   161d0:	str	r2, [sp, #16]
   161d4:	mov	r2, lr
   161d8:	ldr	r3, [sp, #24]
   161dc:	ldr	r4, [sp, #20]
   161e0:	str	r4, [sp]
   161e4:	ldr	r5, [sp, #16]
   161e8:	str	r5, [sp, #4]
   161ec:	bl	15bec <flatcc_verify_table_field@@Base+0xf0>
   161f0:	str	r0, [fp, #-12]
   161f4:	b	16220 <flatcc_verify_table_vector_field@@Base+0x358>
   161f8:	b	161fc <flatcc_verify_table_vector_field@@Base+0x334>
   161fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16200:	add	r0, r0, #1
   16204:	str	r0, [fp, #-32]	; 0xffffffe0
   16208:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1620c:	add	r0, r0, #4
   16210:	str	r0, [fp, #-24]	; 0xffffffe8
   16214:	b	160f8 <flatcc_verify_table_vector_field@@Base+0x230>
   16218:	movw	r0, #0
   1621c:	str	r0, [fp, #-12]
   16220:	ldr	r0, [fp, #-12]
   16224:	sub	sp, fp, #8
   16228:	pop	{r4, r5, fp, pc}
   1622c:	svccc	0x00ffffff

00016230 <flatcc_verify_union_table@@Base>:
   16230:	push	{fp, lr}
   16234:	mov	fp, sp
   16238:	sub	sp, sp, #16
   1623c:	str	r0, [fp, #-4]
   16240:	str	r1, [sp, #8]
   16244:	ldr	r0, [fp, #-4]
   16248:	ldr	r0, [r0]
   1624c:	ldr	r1, [fp, #-4]
   16250:	ldr	r1, [r1, #4]
   16254:	ldr	r2, [fp, #-4]
   16258:	ldr	r2, [r2, #16]
   1625c:	ldr	r3, [fp, #-4]
   16260:	ldr	r3, [r3, #20]
   16264:	ldr	ip, [fp, #-4]
   16268:	ldr	ip, [ip, #8]
   1626c:	ldr	lr, [sp, #8]
   16270:	str	ip, [sp]
   16274:	str	lr, [sp, #4]
   16278:	bl	15bec <flatcc_verify_table_field@@Base+0xf0>
   1627c:	mov	sp, fp
   16280:	pop	{fp, pc}

00016284 <flatcc_verify_union_struct@@Base>:
   16284:	push	{fp, lr}
   16288:	mov	fp, sp
   1628c:	sub	sp, sp, #16
   16290:	str	r0, [fp, #-4]
   16294:	str	r1, [sp, #8]
   16298:	strh	r2, [sp, #6]
   1629c:	ldr	r0, [fp, #-4]
   162a0:	ldr	r0, [r0, #4]
   162a4:	ldr	r1, [fp, #-4]
   162a8:	ldr	r1, [r1, #16]
   162ac:	ldr	r2, [fp, #-4]
   162b0:	ldr	r2, [r2, #20]
   162b4:	ldr	r3, [sp, #8]
   162b8:	ldrh	ip, [sp, #6]
   162bc:	str	ip, [sp]
   162c0:	bl	162cc <flatcc_verify_union_struct@@Base+0x48>
   162c4:	mov	sp, fp
   162c8:	pop	{fp, pc}
   162cc:	sub	sp, sp, #36	; 0x24
   162d0:	ldr	ip, [sp, #36]	; 0x24
   162d4:	str	r0, [sp, #28]
   162d8:	str	r1, [sp, #24]
   162dc:	str	r2, [sp, #20]
   162e0:	str	r3, [sp, #16]
   162e4:	strh	ip, [sp, #14]
   162e8:	ldr	r0, [sp, #20]
   162ec:	cmp	r0, #0
   162f0:	beq	1630c <flatcc_verify_union_struct@@Base+0x88>
   162f4:	ldr	r0, [sp, #24]
   162f8:	ldr	r1, [sp, #20]
   162fc:	add	r0, r0, r1
   16300:	ldr	r1, [sp, #28]
   16304:	cmp	r0, r1
   16308:	bls	16318 <flatcc_verify_union_struct@@Base+0x94>
   1630c:	movw	r0, #18
   16310:	str	r0, [sp, #32]
   16314:	b	16400 <flatcc_verify_union_struct@@Base+0x17c>
   16318:	ldr	r0, [sp, #20]
   1631c:	ldr	r1, [sp, #24]
   16320:	add	r0, r1, r0
   16324:	str	r0, [sp, #24]
   16328:	ldr	r0, [sp, #24]
   1632c:	ldr	r1, [sp, #16]
   16330:	add	r0, r0, r1
   16334:	ldr	r1, [sp, #24]
   16338:	cmp	r0, r1
   1633c:	movw	r0, #0
   16340:	movcs	r0, #1
   16344:	and	r0, r0, #1
   16348:	str	r0, [sp, #8]
   1634c:	ldr	r0, [sp, #8]
   16350:	cmp	r0, #0
   16354:	bne	16364 <flatcc_verify_union_struct@@Base+0xe0>
   16358:	movw	r0, #10
   1635c:	str	r0, [sp, #32]
   16360:	b	16400 <flatcc_verify_union_struct@@Base+0x17c>
   16364:	b	16368 <flatcc_verify_union_struct@@Base+0xe4>
   16368:	b	1636c <flatcc_verify_union_struct@@Base+0xe8>
   1636c:	ldr	r0, [sp, #24]
   16370:	ldr	r1, [sp, #16]
   16374:	add	r0, r0, r1
   16378:	ldr	r1, [sp, #28]
   1637c:	cmp	r0, r1
   16380:	movw	r0, #0
   16384:	movls	r0, #1
   16388:	and	r0, r0, #1
   1638c:	str	r0, [sp, #4]
   16390:	ldr	r0, [sp, #4]
   16394:	cmp	r0, #0
   16398:	bne	163a8 <flatcc_verify_union_struct@@Base+0x124>
   1639c:	movw	r0, #9
   163a0:	str	r0, [sp, #32]
   163a4:	b	16400 <flatcc_verify_union_struct@@Base+0x17c>
   163a8:	b	163ac <flatcc_verify_union_struct@@Base+0x128>
   163ac:	b	163b0 <flatcc_verify_union_struct@@Base+0x12c>
   163b0:	ldr	r0, [sp, #24]
   163b4:	ldrh	r1, [sp, #14]
   163b8:	sub	r1, r1, #1
   163bc:	and	r0, r0, r1
   163c0:	cmp	r0, #0
   163c4:	movw	r0, #0
   163c8:	movne	r0, #1
   163cc:	mvn	r1, #0
   163d0:	eor	r0, r0, r1
   163d4:	and	r0, r0, #1
   163d8:	str	r0, [sp]
   163dc:	ldr	r0, [sp]
   163e0:	cmp	r0, #0
   163e4:	bne	163f4 <flatcc_verify_union_struct@@Base+0x170>
   163e8:	movw	r0, #11
   163ec:	str	r0, [sp, #32]
   163f0:	b	16400 <flatcc_verify_union_struct@@Base+0x17c>
   163f4:	b	163f8 <flatcc_verify_union_struct@@Base+0x174>
   163f8:	movw	r0, #0
   163fc:	str	r0, [sp, #32]
   16400:	ldr	r0, [sp, #32]
   16404:	add	sp, sp, #36	; 0x24
   16408:	bx	lr

0001640c <flatcc_verify_union_string@@Base>:
   1640c:	push	{fp, lr}
   16410:	mov	fp, sp
   16414:	sub	sp, sp, #8
   16418:	str	r0, [sp, #4]
   1641c:	ldr	r0, [sp, #4]
   16420:	ldr	r0, [r0]
   16424:	ldr	r1, [sp, #4]
   16428:	ldr	r1, [r1, #4]
   1642c:	ldr	r2, [sp, #4]
   16430:	ldr	r2, [r2, #16]
   16434:	ldr	r3, [sp, #4]
   16438:	ldr	r3, [r3, #20]
   1643c:	bl	154f4 <flatcc_verify_string_field@@Base+0x214>
   16440:	mov	sp, fp
   16444:	pop	{fp, pc}

00016448 <flatcc_verify_buffer_header@@Base>:
   16448:	push	{fp, lr}
   1644c:	mov	fp, sp
   16450:	sub	sp, sp, #48	; 0x30
   16454:	str	r0, [fp, #-8]
   16458:	str	r1, [fp, #-12]
   1645c:	str	r2, [fp, #-16]
   16460:	ldr	r0, [fp, #-8]
   16464:	and	r0, r0, #3
   16468:	cmp	r0, #0
   1646c:	movw	r0, #0
   16470:	movne	r0, #1
   16474:	mvn	r1, #0
   16478:	eor	r0, r0, r1
   1647c:	and	r0, r0, #1
   16480:	str	r0, [sp, #20]
   16484:	ldr	r0, [sp, #20]
   16488:	cmp	r0, #0
   1648c:	bne	1649c <flatcc_verify_buffer_header@@Base+0x54>
   16490:	movw	r0, #5
   16494:	str	r0, [fp, #-4]
   16498:	b	1659c <flatcc_verify_buffer_header@@Base+0x154>
   1649c:	b	164a0 <flatcc_verify_buffer_header@@Base+0x58>
   164a0:	b	164a4 <flatcc_verify_buffer_header@@Base+0x5c>
   164a4:	ldr	r0, [fp, #-12]
   164a8:	cmn	r0, #9
   164ac:	movw	r0, #0
   164b0:	movls	r0, #1
   164b4:	and	r0, r0, #1
   164b8:	str	r0, [sp, #16]
   164bc:	ldr	r0, [sp, #16]
   164c0:	cmp	r0, #0
   164c4:	bne	164d4 <flatcc_verify_buffer_header@@Base+0x8c>
   164c8:	movw	r0, #6
   164cc:	str	r0, [fp, #-4]
   164d0:	b	1659c <flatcc_verify_buffer_header@@Base+0x154>
   164d4:	b	164d8 <flatcc_verify_buffer_header@@Base+0x90>
   164d8:	b	164dc <flatcc_verify_buffer_header@@Base+0x94>
   164dc:	ldr	r0, [fp, #-12]
   164e0:	cmp	r0, #8
   164e4:	movw	r0, #0
   164e8:	movcs	r0, #1
   164ec:	and	r0, r0, #1
   164f0:	str	r0, [sp, #12]
   164f4:	ldr	r0, [sp, #12]
   164f8:	cmp	r0, #0
   164fc:	bne	1650c <flatcc_verify_buffer_header@@Base+0xc4>
   16500:	movw	r0, #1
   16504:	str	r0, [fp, #-4]
   16508:	b	1659c <flatcc_verify_buffer_header@@Base+0x154>
   1650c:	b	16510 <flatcc_verify_buffer_header@@Base+0xc8>
   16510:	ldr	r0, [fp, #-16]
   16514:	movw	r1, #0
   16518:	cmp	r0, r1
   1651c:	beq	16594 <flatcc_verify_buffer_header@@Base+0x14c>
   16520:	ldr	r0, [fp, #-16]
   16524:	bl	165a8 <flatcc_verify_buffer_header@@Base+0x160>
   16528:	str	r0, [sp, #24]
   1652c:	ldr	r0, [fp, #-8]
   16530:	movw	r1, #4
   16534:	bl	165e8 <flatcc_verify_buffer_header@@Base+0x1a0>
   16538:	str	r0, [fp, #-20]	; 0xffffffec
   1653c:	ldr	r0, [sp, #24]
   16540:	cmp	r0, #0
   16544:	movw	r0, #1
   16548:	str	r0, [sp, #4]
   1654c:	beq	16568 <flatcc_verify_buffer_header@@Base+0x120>
   16550:	ldr	r0, [fp, #-20]	; 0xffffffec
   16554:	ldr	r1, [sp, #24]
   16558:	cmp	r0, r1
   1655c:	movw	r0, #0
   16560:	moveq	r0, #1
   16564:	str	r0, [sp, #4]
   16568:	ldr	r0, [sp, #4]
   1656c:	and	r0, r0, #1
   16570:	str	r0, [sp, #8]
   16574:	ldr	r0, [sp, #8]
   16578:	cmp	r0, #0
   1657c:	bne	1658c <flatcc_verify_buffer_header@@Base+0x144>
   16580:	movw	r0, #2
   16584:	str	r0, [fp, #-4]
   16588:	b	1659c <flatcc_verify_buffer_header@@Base+0x154>
   1658c:	b	16590 <flatcc_verify_buffer_header@@Base+0x148>
   16590:	b	16594 <flatcc_verify_buffer_header@@Base+0x14c>
   16594:	movw	r0, #0
   16598:	str	r0, [fp, #-4]
   1659c:	ldr	r0, [fp, #-4]
   165a0:	mov	sp, fp
   165a4:	pop	{fp, pc}
   165a8:	push	{fp, lr}
   165ac:	mov	fp, sp
   165b0:	sub	sp, sp, #16
   165b4:	str	r0, [fp, #-4]
   165b8:	movw	r0, #0
   165bc:	str	r0, [sp, #8]
   165c0:	add	r0, sp, #8
   165c4:	ldr	r1, [fp, #-4]
   165c8:	movw	r2, #4
   165cc:	bl	10e78 <strncpy@plt>
   165d0:	ldr	r1, [sp, #8]
   165d4:	str	r0, [sp, #4]
   165d8:	mov	r0, r1
   165dc:	bl	177b4 <flatcc_verify_union_vector_field@@Base+0x764>
   165e0:	mov	sp, fp
   165e4:	pop	{fp, pc}
   165e8:	push	{fp, lr}
   165ec:	mov	fp, sp
   165f0:	sub	sp, sp, #8
   165f4:	str	r0, [sp, #4]
   165f8:	str	r1, [sp]
   165fc:	ldr	r0, [sp, #4]
   16600:	ldr	r1, [sp]
   16604:	add	r0, r0, r1
   16608:	bl	177c8 <flatcc_verify_union_vector_field@@Base+0x778>
   1660c:	mov	sp, fp
   16610:	pop	{fp, pc}

00016614 <flatcc_verify_typed_buffer_header@@Base>:
   16614:	push	{fp, lr}
   16618:	mov	fp, sp
   1661c:	sub	sp, sp, #48	; 0x30
   16620:	str	r0, [fp, #-8]
   16624:	str	r1, [fp, #-12]
   16628:	str	r2, [fp, #-16]
   1662c:	ldr	r0, [fp, #-8]
   16630:	and	r0, r0, #3
   16634:	cmp	r0, #0
   16638:	movw	r0, #0
   1663c:	movne	r0, #1
   16640:	mvn	r1, #0
   16644:	eor	r0, r0, r1
   16648:	and	r0, r0, #1
   1664c:	str	r0, [sp, #20]
   16650:	ldr	r0, [sp, #20]
   16654:	cmp	r0, #0
   16658:	bne	16668 <flatcc_verify_typed_buffer_header@@Base+0x54>
   1665c:	movw	r0, #5
   16660:	str	r0, [fp, #-4]
   16664:	b	16760 <flatcc_verify_typed_buffer_header@@Base+0x14c>
   16668:	b	1666c <flatcc_verify_typed_buffer_header@@Base+0x58>
   1666c:	b	16670 <flatcc_verify_typed_buffer_header@@Base+0x5c>
   16670:	ldr	r0, [fp, #-12]
   16674:	cmn	r0, #9
   16678:	movw	r0, #0
   1667c:	movls	r0, #1
   16680:	and	r0, r0, #1
   16684:	str	r0, [sp, #16]
   16688:	ldr	r0, [sp, #16]
   1668c:	cmp	r0, #0
   16690:	bne	166a0 <flatcc_verify_typed_buffer_header@@Base+0x8c>
   16694:	movw	r0, #6
   16698:	str	r0, [fp, #-4]
   1669c:	b	16760 <flatcc_verify_typed_buffer_header@@Base+0x14c>
   166a0:	b	166a4 <flatcc_verify_typed_buffer_header@@Base+0x90>
   166a4:	b	166a8 <flatcc_verify_typed_buffer_header@@Base+0x94>
   166a8:	ldr	r0, [fp, #-12]
   166ac:	cmp	r0, #8
   166b0:	movw	r0, #0
   166b4:	movcs	r0, #1
   166b8:	and	r0, r0, #1
   166bc:	str	r0, [sp, #12]
   166c0:	ldr	r0, [sp, #12]
   166c4:	cmp	r0, #0
   166c8:	bne	166d8 <flatcc_verify_typed_buffer_header@@Base+0xc4>
   166cc:	movw	r0, #1
   166d0:	str	r0, [fp, #-4]
   166d4:	b	16760 <flatcc_verify_typed_buffer_header@@Base+0x14c>
   166d8:	b	166dc <flatcc_verify_typed_buffer_header@@Base+0xc8>
   166dc:	ldr	r0, [fp, #-16]
   166e0:	cmp	r0, #0
   166e4:	beq	16758 <flatcc_verify_typed_buffer_header@@Base+0x144>
   166e8:	ldr	r0, [fp, #-16]
   166ec:	str	r0, [sp, #24]
   166f0:	ldr	r0, [fp, #-8]
   166f4:	movw	r1, #4
   166f8:	bl	165e8 <flatcc_verify_buffer_header@@Base+0x1a0>
   166fc:	str	r0, [fp, #-20]	; 0xffffffec
   16700:	ldr	r0, [sp, #24]
   16704:	cmp	r0, #0
   16708:	movw	r0, #1
   1670c:	str	r0, [sp, #4]
   16710:	beq	1672c <flatcc_verify_typed_buffer_header@@Base+0x118>
   16714:	ldr	r0, [fp, #-20]	; 0xffffffec
   16718:	ldr	r1, [sp, #24]
   1671c:	cmp	r0, r1
   16720:	movw	r0, #0
   16724:	moveq	r0, #1
   16728:	str	r0, [sp, #4]
   1672c:	ldr	r0, [sp, #4]
   16730:	and	r0, r0, #1
   16734:	str	r0, [sp, #8]
   16738:	ldr	r0, [sp, #8]
   1673c:	cmp	r0, #0
   16740:	bne	16750 <flatcc_verify_typed_buffer_header@@Base+0x13c>
   16744:	movw	r0, #2
   16748:	str	r0, [fp, #-4]
   1674c:	b	16760 <flatcc_verify_typed_buffer_header@@Base+0x14c>
   16750:	b	16754 <flatcc_verify_typed_buffer_header@@Base+0x140>
   16754:	b	16758 <flatcc_verify_typed_buffer_header@@Base+0x144>
   16758:	movw	r0, #0
   1675c:	str	r0, [fp, #-4]
   16760:	ldr	r0, [fp, #-4]
   16764:	mov	sp, fp
   16768:	pop	{fp, pc}

0001676c <flatcc_verify_struct_as_root@@Base>:
   1676c:	push	{fp, lr}
   16770:	mov	fp, sp
   16774:	sub	sp, sp, #40	; 0x28
   16778:	ldr	ip, [fp, #8]
   1677c:	str	r0, [fp, #-8]
   16780:	str	r1, [fp, #-12]
   16784:	str	r2, [fp, #-16]
   16788:	str	r3, [sp, #20]
   1678c:	strh	ip, [sp, #18]
   16790:	ldr	r0, [fp, #-8]
   16794:	ldr	r1, [fp, #-12]
   16798:	ldr	r2, [fp, #-16]
   1679c:	bl	16448 <flatcc_verify_buffer_header@@Base>
   167a0:	cmp	r0, #0
   167a4:	beq	167c0 <flatcc_verify_struct_as_root@@Base+0x54>
   167a8:	ldr	r0, [fp, #-8]
   167ac:	ldr	r1, [fp, #-12]
   167b0:	ldr	r2, [fp, #-16]
   167b4:	bl	16448 <flatcc_verify_buffer_header@@Base>
   167b8:	str	r0, [fp, #-4]
   167bc:	b	16800 <flatcc_verify_struct_as_root@@Base+0x94>
   167c0:	ldr	r0, [fp, #-12]
   167c4:	ldr	r1, [fp, #-8]
   167c8:	str	r0, [sp, #12]
   167cc:	mov	r0, r1
   167d0:	movw	r1, #0
   167d4:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   167d8:	ldr	r3, [sp, #20]
   167dc:	ldr	r1, [sp, #12]
   167e0:	str	r0, [sp, #8]
   167e4:	mov	r0, r1
   167e8:	movw	r1, #0
   167ec:	ldr	r2, [sp, #8]
   167f0:	ldrh	lr, [sp, #18]
   167f4:	str	lr, [sp]
   167f8:	bl	162cc <flatcc_verify_union_struct@@Base+0x48>
   167fc:	str	r0, [fp, #-4]
   16800:	ldr	r0, [fp, #-4]
   16804:	mov	sp, fp
   16808:	pop	{fp, pc}

0001680c <flatcc_verify_struct_as_typed_root@@Base>:
   1680c:	push	{fp, lr}
   16810:	mov	fp, sp
   16814:	sub	sp, sp, #40	; 0x28
   16818:	ldr	ip, [fp, #8]
   1681c:	str	r0, [fp, #-8]
   16820:	str	r1, [fp, #-12]
   16824:	str	r2, [fp, #-16]
   16828:	str	r3, [sp, #20]
   1682c:	strh	ip, [sp, #18]
   16830:	ldr	r0, [fp, #-8]
   16834:	ldr	r1, [fp, #-12]
   16838:	ldr	r2, [fp, #-16]
   1683c:	bl	16614 <flatcc_verify_typed_buffer_header@@Base>
   16840:	cmp	r0, #0
   16844:	beq	16860 <flatcc_verify_struct_as_typed_root@@Base+0x54>
   16848:	ldr	r0, [fp, #-8]
   1684c:	ldr	r1, [fp, #-12]
   16850:	ldr	r2, [fp, #-16]
   16854:	bl	16614 <flatcc_verify_typed_buffer_header@@Base>
   16858:	str	r0, [fp, #-4]
   1685c:	b	168a0 <flatcc_verify_struct_as_typed_root@@Base+0x94>
   16860:	ldr	r0, [fp, #-12]
   16864:	ldr	r1, [fp, #-8]
   16868:	str	r0, [sp, #12]
   1686c:	mov	r0, r1
   16870:	movw	r1, #0
   16874:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   16878:	ldr	r3, [sp, #20]
   1687c:	ldr	r1, [sp, #12]
   16880:	str	r0, [sp, #8]
   16884:	mov	r0, r1
   16888:	movw	r1, #0
   1688c:	ldr	r2, [sp, #8]
   16890:	ldrh	lr, [sp, #18]
   16894:	str	lr, [sp]
   16898:	bl	162cc <flatcc_verify_union_struct@@Base+0x48>
   1689c:	str	r0, [fp, #-4]
   168a0:	ldr	r0, [fp, #-4]
   168a4:	mov	sp, fp
   168a8:	pop	{fp, pc}

000168ac <flatcc_verify_table_as_root@@Base>:
   168ac:	push	{fp, lr}
   168b0:	mov	fp, sp
   168b4:	sub	sp, sp, #48	; 0x30
   168b8:	str	r0, [fp, #-8]
   168bc:	str	r1, [fp, #-12]
   168c0:	str	r2, [fp, #-16]
   168c4:	str	r3, [fp, #-20]	; 0xffffffec
   168c8:	ldr	r0, [fp, #-8]
   168cc:	ldr	r1, [fp, #-12]
   168d0:	ldr	r2, [fp, #-16]
   168d4:	bl	16448 <flatcc_verify_buffer_header@@Base>
   168d8:	cmp	r0, #0
   168dc:	beq	168f8 <flatcc_verify_table_as_root@@Base+0x4c>
   168e0:	ldr	r0, [fp, #-8]
   168e4:	ldr	r1, [fp, #-12]
   168e8:	ldr	r2, [fp, #-16]
   168ec:	bl	16448 <flatcc_verify_buffer_header@@Base>
   168f0:	str	r0, [fp, #-4]
   168f4:	b	16958 <flatcc_verify_table_as_root@@Base+0xac>
   168f8:	ldr	r0, [fp, #-8]
   168fc:	ldr	r1, [fp, #-12]
   16900:	ldr	r2, [fp, #-8]
   16904:	str	r0, [sp, #24]
   16908:	mov	r0, r2
   1690c:	movw	r2, #0
   16910:	str	r1, [sp, #20]
   16914:	mov	r1, r2
   16918:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   1691c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16920:	ldr	r2, [sp, #24]
   16924:	str	r0, [sp, #16]
   16928:	mov	r0, r2
   1692c:	ldr	lr, [sp, #20]
   16930:	str	r1, [sp, #12]
   16934:	mov	r1, lr
   16938:	movw	r2, #0
   1693c:	ldr	r3, [sp, #16]
   16940:	movw	ip, #100	; 0x64
   16944:	str	ip, [sp]
   16948:	ldr	ip, [sp, #12]
   1694c:	str	ip, [sp, #4]
   16950:	bl	15bec <flatcc_verify_table_field@@Base+0xf0>
   16954:	str	r0, [fp, #-4]
   16958:	ldr	r0, [fp, #-4]
   1695c:	mov	sp, fp
   16960:	pop	{fp, pc}

00016964 <flatcc_verify_table_as_typed_root@@Base>:
   16964:	push	{fp, lr}
   16968:	mov	fp, sp
   1696c:	sub	sp, sp, #48	; 0x30
   16970:	str	r0, [fp, #-8]
   16974:	str	r1, [fp, #-12]
   16978:	str	r2, [fp, #-16]
   1697c:	str	r3, [fp, #-20]	; 0xffffffec
   16980:	ldr	r0, [fp, #-8]
   16984:	ldr	r1, [fp, #-12]
   16988:	ldr	r2, [fp, #-16]
   1698c:	bl	16614 <flatcc_verify_typed_buffer_header@@Base>
   16990:	cmp	r0, #0
   16994:	beq	169b0 <flatcc_verify_table_as_typed_root@@Base+0x4c>
   16998:	ldr	r0, [fp, #-8]
   1699c:	ldr	r1, [fp, #-12]
   169a0:	ldr	r2, [fp, #-16]
   169a4:	bl	16614 <flatcc_verify_typed_buffer_header@@Base>
   169a8:	str	r0, [fp, #-4]
   169ac:	b	16a10 <flatcc_verify_table_as_typed_root@@Base+0xac>
   169b0:	ldr	r0, [fp, #-8]
   169b4:	ldr	r1, [fp, #-12]
   169b8:	ldr	r2, [fp, #-8]
   169bc:	str	r0, [sp, #24]
   169c0:	mov	r0, r2
   169c4:	movw	r2, #0
   169c8:	str	r1, [sp, #20]
   169cc:	mov	r1, r2
   169d0:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   169d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   169d8:	ldr	r2, [sp, #24]
   169dc:	str	r0, [sp, #16]
   169e0:	mov	r0, r2
   169e4:	ldr	lr, [sp, #20]
   169e8:	str	r1, [sp, #12]
   169ec:	mov	r1, lr
   169f0:	movw	r2, #0
   169f4:	ldr	r3, [sp, #16]
   169f8:	movw	ip, #100	; 0x64
   169fc:	str	ip, [sp]
   16a00:	ldr	ip, [sp, #12]
   16a04:	str	ip, [sp, #4]
   16a08:	bl	15bec <flatcc_verify_table_field@@Base+0xf0>
   16a0c:	str	r0, [fp, #-4]
   16a10:	ldr	r0, [fp, #-4]
   16a14:	mov	sp, fp
   16a18:	pop	{fp, pc}

00016a1c <flatcc_verify_struct_as_nested_root@@Base>:
   16a1c:	push	{fp, lr}
   16a20:	mov	fp, sp
   16a24:	sub	sp, sp, #48	; 0x30
   16a28:	ldr	ip, [fp, #12]
   16a2c:	ldr	lr, [fp, #8]
   16a30:	str	r0, [fp, #-8]
   16a34:	strh	r1, [fp, #-10]
   16a38:	str	r2, [fp, #-16]
   16a3c:	str	r3, [fp, #-20]	; 0xffffffec
   16a40:	strh	ip, [fp, #-22]	; 0xffffffea
   16a44:	ldr	r0, [fp, #-8]
   16a48:	ldrh	r1, [fp, #-10]
   16a4c:	ldr	r2, [fp, #-16]
   16a50:	ldrh	r3, [fp, #-22]	; 0xffffffea
   16a54:	uxth	r1, r1
   16a58:	movw	ip, #1
   16a5c:	uxth	ip, ip
   16a60:	str	ip, [sp]
   16a64:	mvn	ip, #0
   16a68:	str	ip, [sp, #4]
   16a6c:	str	lr, [sp, #12]
   16a70:	bl	1563c <flatcc_verify_vector_field@@Base>
   16a74:	cmp	r0, #0
   16a78:	beq	16ab0 <flatcc_verify_struct_as_nested_root@@Base+0x94>
   16a7c:	ldr	r0, [fp, #-8]
   16a80:	ldrh	r1, [fp, #-10]
   16a84:	ldr	r2, [fp, #-16]
   16a88:	ldrh	r3, [fp, #-22]	; 0xffffffea
   16a8c:	uxth	r1, r1
   16a90:	movw	ip, #1
   16a94:	uxth	ip, ip
   16a98:	str	ip, [sp]
   16a9c:	mvn	ip, #0
   16aa0:	str	ip, [sp, #4]
   16aa4:	bl	1563c <flatcc_verify_vector_field@@Base>
   16aa8:	str	r0, [fp, #-4]
   16aac:	b	16b38 <flatcc_verify_struct_as_nested_root@@Base+0x11c>
   16ab0:	ldr	r0, [fp, #-8]
   16ab4:	ldrh	r1, [fp, #-10]
   16ab8:	bl	16b44 <flatcc_verify_struct_as_nested_root@@Base+0x128>
   16abc:	str	r0, [sp, #20]
   16ac0:	movw	r1, #0
   16ac4:	cmp	r1, r0
   16ac8:	bne	16ad8 <flatcc_verify_struct_as_nested_root@@Base+0xbc>
   16acc:	movw	r0, #0
   16ad0:	str	r0, [fp, #-4]
   16ad4:	b	16b38 <flatcc_verify_struct_as_nested_root@@Base+0x11c>
   16ad8:	ldr	r0, [sp, #20]
   16adc:	ldr	r1, [sp, #20]
   16ae0:	str	r0, [sp, #8]
   16ae4:	mov	r0, r1
   16ae8:	movw	r1, #0
   16aec:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   16af0:	ldr	r1, [sp, #8]
   16af4:	add	r0, r1, r0
   16af8:	str	r0, [sp, #20]
   16afc:	ldr	r0, [sp, #20]
   16b00:	movw	r1, #0
   16b04:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   16b08:	str	r0, [sp, #16]
   16b0c:	ldr	r0, [sp, #20]
   16b10:	add	r0, r0, #4
   16b14:	str	r0, [sp, #20]
   16b18:	ldr	r0, [sp, #20]
   16b1c:	ldr	r1, [sp, #16]
   16b20:	ldr	r2, [fp, #-20]	; 0xffffffec
   16b24:	ldr	r3, [fp, #8]
   16b28:	ldrh	lr, [fp, #-22]	; 0xffffffea
   16b2c:	str	lr, [sp]
   16b30:	bl	1676c <flatcc_verify_struct_as_root@@Base>
   16b34:	str	r0, [fp, #-4]
   16b38:	ldr	r0, [fp, #-4]
   16b3c:	mov	sp, fp
   16b40:	pop	{fp, pc}
   16b44:	push	{fp, lr}
   16b48:	mov	fp, sp
   16b4c:	sub	sp, sp, #16
   16b50:	str	r0, [fp, #-4]
   16b54:	strh	r1, [fp, #-6]
   16b58:	ldr	r0, [fp, #-4]
   16b5c:	ldrh	r1, [fp, #-6]
   16b60:	bl	16fe8 <flatcc_verify_union_field@@Base+0x290>
   16b64:	strh	r0, [sp, #8]
   16b68:	ldrh	r0, [sp, #8]
   16b6c:	cmp	r0, #0
   16b70:	beq	16b98 <flatcc_verify_struct_as_nested_root@@Base+0x17c>
   16b74:	ldr	r0, [fp, #-4]
   16b78:	ldr	r0, [r0]
   16b7c:	ldr	r1, [fp, #-4]
   16b80:	ldr	r1, [r1, #16]
   16b84:	add	r0, r0, r1
   16b88:	ldrh	r1, [sp, #8]
   16b8c:	add	r0, r0, r1
   16b90:	str	r0, [sp, #4]
   16b94:	b	16ba4 <flatcc_verify_struct_as_nested_root@@Base+0x188>
   16b98:	movw	r0, #0
   16b9c:	str	r0, [sp, #4]
   16ba0:	b	16ba4 <flatcc_verify_struct_as_nested_root@@Base+0x188>
   16ba4:	ldr	r0, [sp, #4]
   16ba8:	mov	sp, fp
   16bac:	pop	{fp, pc}

00016bb0 <flatcc_verify_table_as_nested_root@@Base>:
   16bb0:	push	{r4, sl, fp, lr}
   16bb4:	add	fp, sp, #8
   16bb8:	sub	sp, sp, #72	; 0x48
   16bbc:	ldr	ip, [fp, #12]
   16bc0:	ldr	lr, [fp, #8]
   16bc4:	str	r0, [fp, #-16]
   16bc8:	strh	r1, [fp, #-18]	; 0xffffffee
   16bcc:	str	r2, [fp, #-24]	; 0xffffffe8
   16bd0:	str	r3, [fp, #-28]	; 0xffffffe4
   16bd4:	strh	lr, [fp, #-30]	; 0xffffffe2
   16bd8:	ldr	r0, [fp, #-16]
   16bdc:	ldrh	r1, [fp, #-18]	; 0xffffffee
   16be0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16be4:	ldrh	r3, [fp, #-30]	; 0xffffffe2
   16be8:	uxth	r1, r1
   16bec:	movw	lr, #1
   16bf0:	uxth	lr, lr
   16bf4:	str	lr, [sp]
   16bf8:	mvn	lr, #0
   16bfc:	str	lr, [sp, #4]
   16c00:	str	ip, [sp, #36]	; 0x24
   16c04:	bl	1563c <flatcc_verify_vector_field@@Base>
   16c08:	cmp	r0, #0
   16c0c:	beq	16c44 <flatcc_verify_table_as_nested_root@@Base+0x94>
   16c10:	ldr	r0, [fp, #-16]
   16c14:	ldrh	r1, [fp, #-18]	; 0xffffffee
   16c18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16c1c:	ldrh	r3, [fp, #-30]	; 0xffffffe2
   16c20:	uxth	r1, r1
   16c24:	movw	ip, #1
   16c28:	uxth	ip, ip
   16c2c:	str	ip, [sp]
   16c30:	mvn	ip, #0
   16c34:	str	ip, [sp, #4]
   16c38:	bl	1563c <flatcc_verify_vector_field@@Base>
   16c3c:	str	r0, [fp, #-12]
   16c40:	b	16d4c <flatcc_verify_table_as_nested_root@@Base+0x19c>
   16c44:	ldr	r0, [fp, #-16]
   16c48:	ldrh	r1, [fp, #-18]	; 0xffffffee
   16c4c:	bl	16b44 <flatcc_verify_struct_as_nested_root@@Base+0x128>
   16c50:	str	r0, [fp, #-36]	; 0xffffffdc
   16c54:	movw	r1, #0
   16c58:	cmp	r1, r0
   16c5c:	bne	16c6c <flatcc_verify_table_as_nested_root@@Base+0xbc>
   16c60:	movw	r0, #0
   16c64:	str	r0, [fp, #-12]
   16c68:	b	16d4c <flatcc_verify_table_as_nested_root@@Base+0x19c>
   16c6c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16c70:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16c74:	str	r0, [sp, #32]
   16c78:	mov	r0, r1
   16c7c:	movw	r1, #0
   16c80:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   16c84:	ldr	r1, [sp, #32]
   16c88:	add	r0, r1, r0
   16c8c:	str	r0, [fp, #-36]	; 0xffffffdc
   16c90:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16c94:	movw	r1, #0
   16c98:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   16c9c:	str	r0, [sp, #40]	; 0x28
   16ca0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16ca4:	add	r0, r0, #4
   16ca8:	str	r0, [fp, #-36]	; 0xffffffdc
   16cac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16cb0:	ldr	r1, [sp, #40]	; 0x28
   16cb4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16cb8:	bl	16448 <flatcc_verify_buffer_header@@Base>
   16cbc:	cmp	r0, #0
   16cc0:	beq	16cdc <flatcc_verify_table_as_nested_root@@Base+0x12c>
   16cc4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16cc8:	ldr	r1, [sp, #40]	; 0x28
   16ccc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16cd0:	bl	16448 <flatcc_verify_buffer_header@@Base>
   16cd4:	str	r0, [fp, #-12]
   16cd8:	b	16d4c <flatcc_verify_table_as_nested_root@@Base+0x19c>
   16cdc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16ce0:	ldr	r1, [sp, #40]	; 0x28
   16ce4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16ce8:	str	r0, [sp, #28]
   16cec:	mov	r0, r2
   16cf0:	movw	r2, #0
   16cf4:	str	r1, [sp, #24]
   16cf8:	mov	r1, r2
   16cfc:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   16d00:	ldr	r1, [fp, #-16]
   16d04:	ldr	r1, [r1, #8]
   16d08:	ldr	r2, [fp, #12]
   16d0c:	ldr	lr, [sp, #28]
   16d10:	str	r0, [sp, #20]
   16d14:	mov	r0, lr
   16d18:	ldr	r3, [sp, #24]
   16d1c:	str	r1, [sp, #16]
   16d20:	mov	r1, r3
   16d24:	movw	ip, #0
   16d28:	str	r2, [sp, #12]
   16d2c:	mov	r2, ip
   16d30:	ldr	r3, [sp, #20]
   16d34:	ldr	ip, [sp, #16]
   16d38:	str	ip, [sp]
   16d3c:	ldr	r4, [sp, #12]
   16d40:	str	r4, [sp, #4]
   16d44:	bl	15bec <flatcc_verify_table_field@@Base+0xf0>
   16d48:	str	r0, [fp, #-12]
   16d4c:	ldr	r0, [fp, #-12]
   16d50:	sub	sp, fp, #8
   16d54:	pop	{r4, sl, fp, pc}

00016d58 <flatcc_verify_union_field@@Base>:
   16d58:	push	{fp, lr}
   16d5c:	mov	fp, sp
   16d60:	sub	sp, sp, #88	; 0x58
   16d64:	str	r0, [fp, #-8]
   16d68:	strh	r1, [fp, #-10]
   16d6c:	str	r2, [fp, #-16]
   16d70:	str	r3, [fp, #-20]	; 0xffffffec
   16d74:	ldr	r0, [fp, #-8]
   16d78:	ldrh	r1, [fp, #-10]
   16d7c:	sub	r1, r1, #1
   16d80:	uxth	r1, r1
   16d84:	bl	16fe8 <flatcc_verify_union_field@@Base+0x290>
   16d88:	strh	r0, [fp, #-22]	; 0xffffffea
   16d8c:	uxth	r0, r0
   16d90:	movw	r1, #0
   16d94:	cmp	r1, r0
   16d98:	bne	16e2c <flatcc_verify_union_field@@Base+0xd4>
   16d9c:	ldr	r0, [fp, #-8]
   16da0:	ldrh	r1, [fp, #-10]
   16da4:	bl	16fe8 <flatcc_verify_union_field@@Base+0x290>
   16da8:	strh	r0, [fp, #-24]	; 0xffffffe8
   16dac:	ldrh	r0, [fp, #-24]	; 0xffffffe8
   16db0:	cmp	r0, #0
   16db4:	movw	r0, #0
   16db8:	moveq	r0, #1
   16dbc:	and	r0, r0, #1
   16dc0:	str	r0, [sp, #28]
   16dc4:	ldr	r0, [sp, #28]
   16dc8:	cmp	r0, #0
   16dcc:	bne	16ddc <flatcc_verify_union_field@@Base+0x84>
   16dd0:	movw	r0, #23
   16dd4:	str	r0, [fp, #-4]
   16dd8:	b	16fdc <flatcc_verify_union_field@@Base+0x284>
   16ddc:	b	16de0 <flatcc_verify_union_field@@Base+0x88>
   16de0:	b	16de4 <flatcc_verify_union_field@@Base+0x8c>
   16de4:	ldr	r0, [fp, #-16]
   16de8:	cmp	r0, #0
   16dec:	movw	r0, #0
   16df0:	movne	r0, #1
   16df4:	mvn	r1, #0
   16df8:	eor	r0, r0, r1
   16dfc:	and	r0, r0, #1
   16e00:	str	r0, [sp, #24]
   16e04:	ldr	r0, [sp, #24]
   16e08:	cmp	r0, #0
   16e0c:	bne	16e1c <flatcc_verify_union_field@@Base+0xc4>
   16e10:	movw	r0, #21
   16e14:	str	r0, [fp, #-4]
   16e18:	b	16fdc <flatcc_verify_union_field@@Base+0x284>
   16e1c:	b	16e20 <flatcc_verify_union_field@@Base+0xc8>
   16e20:	movw	r0, #0
   16e24:	str	r0, [fp, #-4]
   16e28:	b	16fdc <flatcc_verify_union_field@@Base+0x284>
   16e2c:	ldr	r0, [fp, #-8]
   16e30:	ldrh	r1, [fp, #-10]
   16e34:	sub	r1, r1, #1
   16e38:	uxth	r1, r1
   16e3c:	movw	r2, #0
   16e40:	movw	r3, #1
   16e44:	movw	ip, #1
   16e48:	uxth	ip, ip
   16e4c:	str	ip, [sp]
   16e50:	bl	15154 <flatcc_verify_field@@Base+0x80>
   16e54:	cmp	r0, #0
   16e58:	beq	16e8c <flatcc_verify_union_field@@Base+0x134>
   16e5c:	ldr	r0, [fp, #-8]
   16e60:	ldrh	r1, [fp, #-10]
   16e64:	sub	r1, r1, #1
   16e68:	uxth	r1, r1
   16e6c:	movw	r2, #0
   16e70:	movw	r3, #1
   16e74:	movw	ip, #1
   16e78:	uxth	ip, ip
   16e7c:	str	ip, [sp]
   16e80:	bl	15154 <flatcc_verify_field@@Base+0x80>
   16e84:	str	r0, [fp, #-4]
   16e88:	b	16fdc <flatcc_verify_union_field@@Base+0x284>
   16e8c:	ldr	r0, [fp, #-8]
   16e90:	ldrh	r1, [fp, #-10]
   16e94:	bl	16fe8 <flatcc_verify_union_field@@Base+0x290>
   16e98:	strh	r0, [fp, #-24]	; 0xffffffe8
   16e9c:	ldr	r0, [fp, #-8]
   16ea0:	ldr	r0, [r0]
   16ea4:	ldr	r1, [fp, #-8]
   16ea8:	ldr	r1, [r1, #16]
   16eac:	add	r0, r0, r1
   16eb0:	ldrh	r1, [fp, #-22]	; 0xffffffea
   16eb4:	add	r0, r0, r1
   16eb8:	str	r0, [fp, #-28]	; 0xffffffe4
   16ebc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16ec0:	ldrb	r0, [r0]
   16ec4:	cmp	r0, #0
   16ec8:	movw	r0, #1
   16ecc:	str	r0, [sp, #12]
   16ed0:	bne	16ee8 <flatcc_verify_union_field@@Base+0x190>
   16ed4:	ldrh	r0, [fp, #-24]	; 0xffffffe8
   16ed8:	cmp	r0, #0
   16edc:	movw	r0, #0
   16ee0:	moveq	r0, #1
   16ee4:	str	r0, [sp, #12]
   16ee8:	ldr	r0, [sp, #12]
   16eec:	and	r0, r0, #1
   16ef0:	str	r0, [sp, #20]
   16ef4:	ldr	r0, [sp, #20]
   16ef8:	cmp	r0, #0
   16efc:	bne	16f0c <flatcc_verify_union_field@@Base+0x1b4>
   16f00:	movw	r0, #24
   16f04:	str	r0, [fp, #-4]
   16f08:	b	16fdc <flatcc_verify_union_field@@Base+0x284>
   16f0c:	b	16f10 <flatcc_verify_union_field@@Base+0x1b8>
   16f10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16f14:	ldrb	r0, [r0]
   16f18:	cmp	r0, #0
   16f1c:	bne	16f2c <flatcc_verify_union_field@@Base+0x1d4>
   16f20:	movw	r0, #0
   16f24:	str	r0, [fp, #-4]
   16f28:	b	16fdc <flatcc_verify_union_field@@Base+0x284>
   16f2c:	b	16f30 <flatcc_verify_union_field@@Base+0x1d8>
   16f30:	ldr	r0, [fp, #-8]
   16f34:	ldrh	r1, [fp, #-10]
   16f38:	ldr	r2, [fp, #-16]
   16f3c:	uxth	r1, r1
   16f40:	sub	r3, fp, #32
   16f44:	bl	153a0 <flatcc_verify_string_field@@Base+0xc0>
   16f48:	str	r0, [sp, #16]
   16f4c:	ldr	r0, [sp, #16]
   16f50:	cmp	r0, #0
   16f54:	bne	16f64 <flatcc_verify_union_field@@Base+0x20c>
   16f58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16f5c:	cmp	r0, #0
   16f60:	bne	16f70 <flatcc_verify_union_field@@Base+0x218>
   16f64:	ldr	r0, [sp, #16]
   16f68:	str	r0, [fp, #-4]
   16f6c:	b	16fdc <flatcc_verify_union_field@@Base+0x284>
   16f70:	b	16f74 <flatcc_verify_union_field@@Base+0x21c>
   16f74:	ldr	r0, [fp, #-8]
   16f78:	ldr	r0, [r0]
   16f7c:	str	r0, [sp, #32]
   16f80:	ldr	r0, [fp, #-8]
   16f84:	ldr	r0, [r0, #4]
   16f88:	str	r0, [sp, #36]	; 0x24
   16f8c:	ldr	r0, [fp, #-8]
   16f90:	ldr	r0, [r0, #8]
   16f94:	str	r0, [sp, #40]	; 0x28
   16f98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16f9c:	str	r0, [sp, #48]	; 0x30
   16fa0:	ldr	r0, [fp, #-8]
   16fa4:	ldr	r0, [r0]
   16fa8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16fac:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   16fb0:	str	r0, [sp, #52]	; 0x34
   16fb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16fb8:	ldrb	r0, [r0]
   16fbc:	strb	r0, [sp, #44]	; 0x2c
   16fc0:	ldr	r0, [fp, #-20]	; 0xffffffec
   16fc4:	add	r1, sp, #32
   16fc8:	str	r0, [sp, #8]
   16fcc:	mov	r0, r1
   16fd0:	ldr	r1, [sp, #8]
   16fd4:	blx	r1
   16fd8:	str	r0, [fp, #-4]
   16fdc:	ldr	r0, [fp, #-4]
   16fe0:	mov	sp, fp
   16fe4:	pop	{fp, pc}
   16fe8:	push	{fp, lr}
   16fec:	mov	fp, sp
   16ff0:	sub	sp, sp, #16
   16ff4:	str	r0, [sp, #8]
   16ff8:	strh	r1, [sp, #6]
   16ffc:	ldrh	r0, [sp, #6]
   17000:	add	r0, r0, #2
   17004:	lsl	r0, r0, #1
   17008:	strh	r0, [sp, #4]
   1700c:	ldrh	r0, [sp, #4]
   17010:	ldr	r1, [sp, #8]
   17014:	ldrh	r1, [r1, #22]
   17018:	cmp	r0, r1
   1701c:	blt	1702c <flatcc_verify_union_field@@Base+0x2d4>
   17020:	movw	r0, #0
   17024:	str	r0, [fp, #-4]
   17028:	b	17044 <flatcc_verify_union_field@@Base+0x2ec>
   1702c:	ldr	r0, [sp, #8]
   17030:	ldr	r0, [r0, #12]
   17034:	ldrh	r1, [sp, #4]
   17038:	bl	17748 <flatcc_verify_union_vector_field@@Base+0x6f8>
   1703c:	uxth	r0, r0
   17040:	str	r0, [fp, #-4]
   17044:	ldr	r0, [fp, #-4]
   17048:	mov	sp, fp
   1704c:	pop	{fp, pc}

00017050 <flatcc_verify_union_vector_field@@Base>:
   17050:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   17054:	add	fp, sp, #24
   17058:	sub	sp, sp, #96	; 0x60
   1705c:	str	r0, [fp, #-32]	; 0xffffffe0
   17060:	strh	r1, [fp, #-34]	; 0xffffffde
   17064:	str	r2, [fp, #-40]	; 0xffffffd8
   17068:	str	r3, [fp, #-44]	; 0xffffffd4
   1706c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17070:	ldrh	r1, [fp, #-34]	; 0xffffffde
   17074:	sub	r1, r1, #1
   17078:	uxth	r1, r1
   1707c:	bl	16fe8 <flatcc_verify_union_field@@Base+0x290>
   17080:	strh	r0, [fp, #-46]	; 0xffffffd2
   17084:	uxth	r0, r0
   17088:	movw	r1, #0
   1708c:	cmp	r1, r0
   17090:	bne	170fc <flatcc_verify_union_vector_field@@Base+0xac>
   17094:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17098:	ldrh	r1, [fp, #-34]	; 0xffffffde
   1709c:	bl	16fe8 <flatcc_verify_union_field@@Base+0x290>
   170a0:	strh	r0, [fp, #-48]	; 0xffffffd0
   170a4:	uxth	r0, r0
   170a8:	movw	r1, #0
   170ac:	cmp	r1, r0
   170b0:	bne	170f8 <flatcc_verify_union_vector_field@@Base+0xa8>
   170b4:	b	170b8 <flatcc_verify_union_vector_field@@Base+0x68>
   170b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   170bc:	cmp	r0, #0
   170c0:	movw	r0, #0
   170c4:	movne	r0, #1
   170c8:	mvn	r1, #0
   170cc:	eor	r0, r0, r1
   170d0:	and	r0, r0, #1
   170d4:	str	r0, [sp, #52]	; 0x34
   170d8:	ldr	r0, [sp, #52]	; 0x34
   170dc:	cmp	r0, #0
   170e0:	bne	170f0 <flatcc_verify_union_vector_field@@Base+0xa0>
   170e4:	movw	r0, #22
   170e8:	str	r0, [fp, #-28]	; 0xffffffe4
   170ec:	b	172c8 <flatcc_verify_union_vector_field@@Base+0x278>
   170f0:	b	170f4 <flatcc_verify_union_vector_field@@Base+0xa4>
   170f4:	b	170f8 <flatcc_verify_union_vector_field@@Base+0xa8>
   170f8:	b	170fc <flatcc_verify_union_vector_field@@Base+0xac>
   170fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17100:	ldrh	r1, [fp, #-34]	; 0xffffffde
   17104:	sub	r1, r1, #1
   17108:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1710c:	uxth	r1, r1
   17110:	movw	r3, #1
   17114:	movw	ip, #1
   17118:	uxth	ip, ip
   1711c:	str	ip, [sp]
   17120:	mvn	ip, #0
   17124:	str	ip, [sp, #4]
   17128:	bl	1563c <flatcc_verify_vector_field@@Base>
   1712c:	cmp	r0, #0
   17130:	beq	1716c <flatcc_verify_union_vector_field@@Base+0x11c>
   17134:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17138:	ldrh	r1, [fp, #-34]	; 0xffffffde
   1713c:	sub	r1, r1, #1
   17140:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17144:	uxth	r1, r1
   17148:	movw	r3, #1
   1714c:	movw	ip, #1
   17150:	uxth	ip, ip
   17154:	str	ip, [sp]
   17158:	mvn	ip, #0
   1715c:	str	ip, [sp, #4]
   17160:	bl	1563c <flatcc_verify_vector_field@@Base>
   17164:	str	r0, [fp, #-28]	; 0xffffffe4
   17168:	b	172c8 <flatcc_verify_union_vector_field@@Base+0x278>
   1716c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17170:	ldrh	r1, [fp, #-34]	; 0xffffffde
   17174:	sub	r1, r1, #1
   17178:	uxth	r1, r1
   1717c:	bl	16b44 <flatcc_verify_struct_as_nested_root@@Base+0x128>
   17180:	str	r0, [fp, #-52]	; 0xffffffcc
   17184:	movw	r1, #0
   17188:	cmp	r1, r0
   1718c:	bne	1719c <flatcc_verify_union_vector_field@@Base+0x14c>
   17190:	movw	r0, #0
   17194:	str	r0, [fp, #-28]	; 0xffffffe4
   17198:	b	172c8 <flatcc_verify_union_vector_field@@Base+0x278>
   1719c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   171a0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   171a4:	str	r0, [sp, #44]	; 0x2c
   171a8:	mov	r0, r1
   171ac:	movw	r1, #0
   171b0:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   171b4:	ldr	r1, [sp, #44]	; 0x2c
   171b8:	add	r0, r1, r0
   171bc:	str	r0, [fp, #-52]	; 0xffffffcc
   171c0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   171c4:	movw	r1, #0
   171c8:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   171cc:	str	r0, [sp, #60]	; 0x3c
   171d0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   171d4:	add	r0, r0, #4
   171d8:	str	r0, [fp, #-52]	; 0xffffffcc
   171dc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   171e0:	str	r0, [fp, #-56]	; 0xffffffc8
   171e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   171e8:	ldrh	r1, [fp, #-34]	; 0xffffffde
   171ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   171f0:	uxth	r1, r1
   171f4:	add	r3, sp, #56	; 0x38
   171f8:	bl	153a0 <flatcc_verify_string_field@@Base+0xc0>
   171fc:	str	r0, [sp, #48]	; 0x30
   17200:	ldr	r0, [sp, #48]	; 0x30
   17204:	cmp	r0, #0
   17208:	bne	17218 <flatcc_verify_union_vector_field@@Base+0x1c8>
   1720c:	ldr	r0, [sp, #56]	; 0x38
   17210:	cmp	r0, #0
   17214:	bne	17224 <flatcc_verify_union_vector_field@@Base+0x1d4>
   17218:	ldr	r0, [sp, #48]	; 0x30
   1721c:	str	r0, [fp, #-28]	; 0xffffffe4
   17220:	b	172c8 <flatcc_verify_union_vector_field@@Base+0x278>
   17224:	b	17228 <flatcc_verify_union_vector_field@@Base+0x1d8>
   17228:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1722c:	ldr	r0, [r0]
   17230:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17234:	ldr	r1, [r1, #4]
   17238:	ldr	r2, [sp, #56]	; 0x38
   1723c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17240:	ldr	r3, [r3]
   17244:	ldr	ip, [sp, #56]	; 0x38
   17248:	str	r0, [sp, #40]	; 0x28
   1724c:	mov	r0, r3
   17250:	str	r1, [sp, #36]	; 0x24
   17254:	mov	r1, ip
   17258:	str	r2, [sp, #32]
   1725c:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   17260:	ldr	r1, [sp, #60]	; 0x3c
   17264:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17268:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1726c:	ldr	r3, [r3, #8]
   17270:	ldr	ip, [fp, #-44]	; 0xffffffd4
   17274:	ldr	lr, [sp, #40]	; 0x28
   17278:	str	r0, [sp, #28]
   1727c:	mov	r0, lr
   17280:	ldr	r4, [sp, #36]	; 0x24
   17284:	str	r1, [sp, #24]
   17288:	mov	r1, r4
   1728c:	ldr	r5, [sp, #32]
   17290:	str	r2, [sp, #20]
   17294:	mov	r2, r5
   17298:	ldr	r6, [sp, #28]
   1729c:	str	r3, [sp, #16]
   172a0:	mov	r3, r6
   172a4:	ldr	r7, [sp, #24]
   172a8:	str	r7, [sp]
   172ac:	ldr	r8, [sp, #20]
   172b0:	str	r8, [sp, #4]
   172b4:	ldr	r9, [sp, #16]
   172b8:	str	r9, [sp, #8]
   172bc:	str	ip, [sp, #12]
   172c0:	bl	172d4 <flatcc_verify_union_vector_field@@Base+0x284>
   172c4:	str	r0, [fp, #-28]	; 0xffffffe4
   172c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   172cc:	sub	sp, fp, #24
   172d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   172d4:	push	{r4, r5, fp, lr}
   172d8:	add	fp, sp, #8
   172dc:	sub	sp, sp, #120	; 0x78
   172e0:	ldr	ip, [fp, #20]
   172e4:	ldr	lr, [fp, #16]
   172e8:	ldr	r4, [fp, #12]
   172ec:	ldr	r5, [fp, #8]
   172f0:	str	r0, [fp, #-16]
   172f4:	str	r1, [fp, #-20]	; 0xffffffec
   172f8:	str	r2, [fp, #-24]	; 0xffffffe8
   172fc:	str	r3, [fp, #-28]	; 0xffffffe4
   17300:	str	r5, [sp, #44]	; 0x2c
   17304:	str	ip, [sp, #40]	; 0x28
   17308:	str	lr, [sp, #36]	; 0x24
   1730c:	str	r4, [sp, #32]
   17310:	ldr	r0, [fp, #16]
   17314:	mvn	r1, #0
   17318:	add	r1, r0, r1
   1731c:	str	r1, [fp, #16]
   17320:	cmp	r0, #0
   17324:	movw	r0, #0
   17328:	movgt	r0, #1
   1732c:	and	r0, r0, #1
   17330:	str	r0, [sp, #60]	; 0x3c
   17334:	ldr	r0, [sp, #60]	; 0x3c
   17338:	cmp	r0, #0
   1733c:	bne	1734c <flatcc_verify_union_vector_field@@Base+0x2fc>
   17340:	movw	r0, #3
   17344:	str	r0, [fp, #-12]
   17348:	b	175bc <flatcc_verify_union_vector_field@@Base+0x56c>
   1734c:	b	17350 <flatcc_verify_union_vector_field@@Base+0x300>
   17350:	ldr	r0, [pc, #624]	; 175c8 <flatcc_verify_union_vector_field@@Base+0x578>
   17354:	ldr	r1, [fp, #-16]
   17358:	ldr	r2, [fp, #-20]	; 0xffffffec
   1735c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17360:	ldr	ip, [fp, #-28]	; 0xffffffe4
   17364:	str	r0, [sp, #28]
   17368:	mov	r0, r1
   1736c:	mov	r1, r2
   17370:	mov	r2, r3
   17374:	mov	r3, ip
   17378:	movw	ip, #4
   1737c:	str	ip, [sp]
   17380:	movw	ip, #4
   17384:	uxth	ip, ip
   17388:	str	ip, [sp, #4]
   1738c:	ldr	ip, [sp, #28]
   17390:	str	ip, [sp, #8]
   17394:	bl	15750 <flatcc_verify_vector_field@@Base+0x114>
   17398:	cmp	r0, #0
   1739c:	beq	173f0 <flatcc_verify_union_vector_field@@Base+0x3a0>
   173a0:	ldr	r0, [pc, #544]	; 175c8 <flatcc_verify_union_vector_field@@Base+0x578>
   173a4:	ldr	r1, [fp, #-16]
   173a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   173ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   173b0:	ldr	ip, [fp, #-28]	; 0xffffffe4
   173b4:	str	r0, [sp, #24]
   173b8:	mov	r0, r1
   173bc:	mov	r1, r2
   173c0:	mov	r2, r3
   173c4:	mov	r3, ip
   173c8:	movw	ip, #4
   173cc:	str	ip, [sp]
   173d0:	movw	ip, #4
   173d4:	uxth	ip, ip
   173d8:	str	ip, [sp, #4]
   173dc:	ldr	ip, [sp, #24]
   173e0:	str	ip, [sp, #8]
   173e4:	bl	15750 <flatcc_verify_vector_field@@Base+0x114>
   173e8:	str	r0, [fp, #-12]
   173ec:	b	175bc <flatcc_verify_union_vector_field@@Base+0x56c>
   173f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   173f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   173f8:	add	r0, r1, r0
   173fc:	str	r0, [fp, #-24]	; 0xffffffe8
   17400:	ldr	r0, [fp, #-16]
   17404:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17408:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   1740c:	str	r0, [fp, #-36]	; 0xffffffdc
   17410:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17414:	ldr	r1, [fp, #8]
   17418:	cmp	r0, r1
   1741c:	movw	r0, #0
   17420:	moveq	r0, #1
   17424:	and	r0, r0, #1
   17428:	str	r0, [sp, #56]	; 0x38
   1742c:	ldr	r0, [sp, #56]	; 0x38
   17430:	cmp	r0, #0
   17434:	bne	17444 <flatcc_verify_union_vector_field@@Base+0x3f4>
   17438:	movw	r0, #34	; 0x22
   1743c:	str	r0, [fp, #-12]
   17440:	b	175bc <flatcc_verify_union_vector_field@@Base+0x56c>
   17444:	b	17448 <flatcc_verify_union_vector_field@@Base+0x3f8>
   17448:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1744c:	add	r0, r0, #4
   17450:	str	r0, [fp, #-24]	; 0xffffffe8
   17454:	ldr	r0, [fp, #-16]
   17458:	str	r0, [sp, #64]	; 0x40
   1745c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17460:	str	r0, [sp, #68]	; 0x44
   17464:	ldr	r0, [fp, #16]
   17468:	str	r0, [sp, #72]	; 0x48
   1746c:	movw	r0, #0
   17470:	str	r0, [fp, #-32]	; 0xffffffe0
   17474:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17478:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1747c:	cmp	r0, r1
   17480:	bcs	175b4 <flatcc_verify_union_vector_field@@Base+0x564>
   17484:	ldr	r0, [fp, #-16]
   17488:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1748c:	bl	15610 <flatcc_verify_string_field@@Base+0x330>
   17490:	str	r0, [fp, #-40]	; 0xffffffd8
   17494:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17498:	cmp	r0, #0
   1749c:	bne	174e8 <flatcc_verify_union_vector_field@@Base+0x498>
   174a0:	b	174a4 <flatcc_verify_union_vector_field@@Base+0x454>
   174a4:	ldr	r0, [fp, #12]
   174a8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   174ac:	add	r0, r0, r1
   174b0:	ldrb	r0, [r0]
   174b4:	cmp	r0, #0
   174b8:	movw	r0, #0
   174bc:	moveq	r0, #1
   174c0:	and	r0, r0, #1
   174c4:	str	r0, [sp, #52]	; 0x34
   174c8:	ldr	r0, [sp, #52]	; 0x34
   174cc:	cmp	r0, #0
   174d0:	bne	174e0 <flatcc_verify_union_vector_field@@Base+0x490>
   174d4:	movw	r0, #32
   174d8:	str	r0, [fp, #-12]
   174dc:	b	175bc <flatcc_verify_union_vector_field@@Base+0x56c>
   174e0:	b	174e4 <flatcc_verify_union_vector_field@@Base+0x494>
   174e4:	b	17594 <flatcc_verify_union_vector_field@@Base+0x544>
   174e8:	b	174ec <flatcc_verify_union_vector_field@@Base+0x49c>
   174ec:	ldr	r0, [fp, #12]
   174f0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   174f4:	add	r0, r0, r1
   174f8:	ldrb	r0, [r0]
   174fc:	cmp	r0, #0
   17500:	movw	r0, #0
   17504:	movne	r0, #1
   17508:	and	r0, r0, #1
   1750c:	str	r0, [sp, #48]	; 0x30
   17510:	ldr	r0, [sp, #48]	; 0x30
   17514:	cmp	r0, #0
   17518:	bne	17528 <flatcc_verify_union_vector_field@@Base+0x4d8>
   1751c:	movw	r0, #33	; 0x21
   17520:	str	r0, [fp, #-12]
   17524:	b	175bc <flatcc_verify_union_vector_field@@Base+0x56c>
   17528:	b	1752c <flatcc_verify_union_vector_field@@Base+0x4dc>
   1752c:	ldr	r0, [fp, #12]
   17530:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17534:	add	r0, r0, r1
   17538:	ldrb	r0, [r0]
   1753c:	strb	r0, [sp, #76]	; 0x4c
   17540:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17544:	str	r0, [sp, #80]	; 0x50
   17548:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1754c:	str	r0, [sp, #84]	; 0x54
   17550:	ldr	r0, [fp, #20]
   17554:	add	r1, sp, #64	; 0x40
   17558:	str	r0, [sp, #20]
   1755c:	mov	r0, r1
   17560:	ldr	r1, [sp, #20]
   17564:	blx	r1
   17568:	cmp	r0, #0
   1756c:	beq	17590 <flatcc_verify_union_vector_field@@Base+0x540>
   17570:	ldr	r0, [fp, #20]
   17574:	add	r1, sp, #64	; 0x40
   17578:	str	r0, [sp, #16]
   1757c:	mov	r0, r1
   17580:	ldr	r1, [sp, #16]
   17584:	blx	r1
   17588:	str	r0, [fp, #-12]
   1758c:	b	175bc <flatcc_verify_union_vector_field@@Base+0x56c>
   17590:	b	17594 <flatcc_verify_union_vector_field@@Base+0x544>
   17594:	b	17598 <flatcc_verify_union_vector_field@@Base+0x548>
   17598:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1759c:	add	r0, r0, #1
   175a0:	str	r0, [fp, #-32]	; 0xffffffe0
   175a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175a8:	add	r0, r0, #4
   175ac:	str	r0, [fp, #-24]	; 0xffffffe8
   175b0:	b	17474 <flatcc_verify_union_vector_field@@Base+0x424>
   175b4:	movw	r0, #0
   175b8:	str	r0, [fp, #-12]
   175bc:	ldr	r0, [fp, #-12]
   175c0:	sub	sp, fp, #8
   175c4:	pop	{r4, r5, fp, pc}
   175c8:	svccc	0x00ffffff
   175cc:	sub	sp, sp, #20
   175d0:	str	r0, [sp, #16]
   175d4:	str	r1, [sp, #12]
   175d8:	str	r2, [sp, #8]
   175dc:	ldr	r0, [sp, #12]
   175e0:	ldr	r1, [sp, #8]
   175e4:	add	r0, r0, r1
   175e8:	str	r0, [sp, #4]
   175ec:	ldr	r0, [sp, #4]
   175f0:	ldr	r1, [sp, #12]
   175f4:	cmp	r0, r1
   175f8:	movw	r0, #0
   175fc:	str	r0, [sp]
   17600:	bls	17640 <flatcc_verify_union_vector_field@@Base+0x5f0>
   17604:	ldr	r0, [sp, #4]
   17608:	add	r0, r0, #4
   1760c:	ldr	r1, [sp, #16]
   17610:	cmp	r0, r1
   17614:	movw	r0, #0
   17618:	str	r0, [sp]
   1761c:	bhi	17640 <flatcc_verify_union_vector_field@@Base+0x5f0>
   17620:	ldr	r0, [sp, #4]
   17624:	and	r0, r0, #3
   17628:	cmp	r0, #0
   1762c:	movw	r0, #0
   17630:	movne	r0, #1
   17634:	mvn	r1, #0
   17638:	eor	r0, r0, r1
   1763c:	str	r0, [sp]
   17640:	ldr	r0, [sp]
   17644:	and	r0, r0, #1
   17648:	add	sp, sp, #20
   1764c:	bx	lr
   17650:	push	{fp, lr}
   17654:	mov	fp, sp
   17658:	sub	sp, sp, #8
   1765c:	str	r0, [sp, #4]
   17660:	ldr	r0, [sp, #4]
   17664:	ldr	r0, [r0]
   17668:	bl	17674 <flatcc_verify_union_vector_field@@Base+0x624>
   1766c:	mov	sp, fp
   17670:	pop	{fp, pc}
   17674:	sub	sp, sp, #4
   17678:	str	r0, [sp]
   1767c:	ldr	r0, [sp]
   17680:	add	sp, sp, #4
   17684:	bx	lr
   17688:	sub	sp, sp, #28
   1768c:	str	r0, [sp, #24]
   17690:	str	r1, [sp, #20]
   17694:	str	r2, [sp, #16]
   17698:	strh	r3, [sp, #14]
   1769c:	ldr	r0, [sp, #20]
   176a0:	ldr	r1, [sp, #16]
   176a4:	add	r0, r0, r1
   176a8:	str	r0, [sp, #8]
   176ac:	ldrh	r0, [sp, #14]
   176b0:	cmp	r0, #4
   176b4:	bcs	176c4 <flatcc_verify_union_vector_field@@Base+0x674>
   176b8:	movw	r0, #4
   176bc:	str	r0, [sp, #4]
   176c0:	b	176cc <flatcc_verify_union_vector_field@@Base+0x67c>
   176c4:	ldrh	r0, [sp, #14]
   176c8:	str	r0, [sp, #4]
   176cc:	ldr	r0, [sp, #4]
   176d0:	strh	r0, [sp, #14]
   176d4:	ldr	r0, [sp, #8]
   176d8:	ldr	r1, [sp, #20]
   176dc:	cmp	r0, r1
   176e0:	movw	r0, #0
   176e4:	str	r0, [sp]
   176e8:	bls	17738 <flatcc_verify_union_vector_field@@Base+0x6e8>
   176ec:	ldr	r0, [sp, #8]
   176f0:	add	r0, r0, #4
   176f4:	ldr	r1, [sp, #24]
   176f8:	cmp	r0, r1
   176fc:	movw	r0, #0
   17700:	str	r0, [sp]
   17704:	bhi	17738 <flatcc_verify_union_vector_field@@Base+0x6e8>
   17708:	ldr	r0, [sp, #8]
   1770c:	add	r0, r0, #4
   17710:	ldrh	r1, [sp, #14]
   17714:	sub	r1, r1, #1
   17718:	orr	r1, r1, #3
   1771c:	and	r0, r0, r1
   17720:	cmp	r0, #0
   17724:	movw	r0, #0
   17728:	movne	r0, #1
   1772c:	mvn	r1, #0
   17730:	eor	r0, r0, r1
   17734:	str	r0, [sp]
   17738:	ldr	r0, [sp]
   1773c:	and	r0, r0, #1
   17740:	add	sp, sp, #28
   17744:	bx	lr
   17748:	push	{fp, lr}
   1774c:	mov	fp, sp
   17750:	sub	sp, sp, #8
   17754:	str	r0, [sp, #4]
   17758:	str	r1, [sp]
   1775c:	ldr	r0, [sp, #4]
   17760:	ldr	r1, [sp]
   17764:	add	r0, r0, r1
   17768:	bl	17778 <flatcc_verify_union_vector_field@@Base+0x728>
   1776c:	uxth	r0, r0
   17770:	mov	sp, fp
   17774:	pop	{fp, pc}
   17778:	push	{fp, lr}
   1777c:	mov	fp, sp
   17780:	sub	sp, sp, #8
   17784:	str	r0, [sp, #4]
   17788:	ldr	r0, [sp, #4]
   1778c:	ldrh	r0, [r0]
   17790:	bl	177a0 <flatcc_verify_union_vector_field@@Base+0x750>
   17794:	uxth	r0, r0
   17798:	mov	sp, fp
   1779c:	pop	{fp, pc}
   177a0:	sub	sp, sp, #4
   177a4:	strh	r0, [sp, #2]
   177a8:	ldrh	r0, [sp, #2]
   177ac:	add	sp, sp, #4
   177b0:	bx	lr
   177b4:	sub	sp, sp, #4
   177b8:	str	r0, [sp]
   177bc:	ldr	r0, [sp]
   177c0:	add	sp, sp, #4
   177c4:	bx	lr
   177c8:	push	{fp, lr}
   177cc:	mov	fp, sp
   177d0:	sub	sp, sp, #8
   177d4:	str	r0, [sp, #4]
   177d8:	ldr	r0, [sp, #4]
   177dc:	ldr	r0, [r0]
   177e0:	bl	177ec <flatcc_verify_union_vector_field@@Base+0x79c>
   177e4:	mov	sp, fp
   177e8:	pop	{fp, pc}
   177ec:	sub	sp, sp, #4
   177f0:	str	r0, [sp]
   177f4:	ldr	r0, [sp]
   177f8:	add	sp, sp, #4
   177fc:	bx	lr

00017800 <__libc_csu_init@@Base>:
   17800:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17804:	mov	r7, r0
   17808:	ldr	r6, [pc, #72]	; 17858 <__libc_csu_init@@Base+0x58>
   1780c:	ldr	r5, [pc, #72]	; 1785c <__libc_csu_init@@Base+0x5c>
   17810:	add	r6, pc, r6
   17814:	add	r5, pc, r5
   17818:	sub	r6, r6, r5
   1781c:	mov	r8, r1
   17820:	mov	r9, r2
   17824:	bl	10db0 <strcmp@plt-0x20>
   17828:	asrs	r6, r6, #2
   1782c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   17830:	mov	r4, #0
   17834:	add	r4, r4, #1
   17838:	ldr	r3, [r5], #4
   1783c:	mov	r2, r9
   17840:	mov	r1, r8
   17844:	mov	r0, r7
   17848:	blx	r3
   1784c:	cmp	r6, r4
   17850:	bne	17834 <__libc_csu_init@@Base+0x34>
   17854:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17858:	strdeq	r1, [r1], -r4
   1785c:	andeq	r1, r1, ip, ror #13

00017860 <__libc_csu_fini@@Base>:
   17860:	bx	lr

Disassembly of section .fini:

00017864 <.fini>:
   17864:	push	{r3, lr}
   17868:	pop	{r3, pc}
