
../repos/prog2/2.3.2:     file format elf32-littlearm


Disassembly of section .init:

00010aac <.init>:
   10aac:	push	{r3, lr}
   10ab0:	bl	10bd4 <_start@@Base+0x3c>
   10ab4:	pop	{r3, pc}

Disassembly of section .plt:

00010ab8 <calloc@plt-0x14>:
   10ab8:	push	{lr}		; (str lr, [sp, #-4]!)
   10abc:	ldr	lr, [pc, #4]	; 10ac8 <calloc@plt-0x4>
   10ac0:	add	lr, pc, lr
   10ac4:	ldr	pc, [lr, #8]!
   10ac8:	andeq	r1, r1, r8, lsr r5

00010acc <calloc@plt>:
   10acc:	add	ip, pc, #0, 12
   10ad0:	add	ip, ip, #69632	; 0x11000
   10ad4:	ldr	pc, [ip, #1336]!	; 0x538

00010ad8 <strcmp@plt>:
   10ad8:	add	ip, pc, #0, 12
   10adc:	add	ip, ip, #69632	; 0x11000
   10ae0:	ldr	pc, [ip, #1328]!	; 0x530

00010ae4 <printf@plt>:
   10ae4:	add	ip, pc, #0, 12
   10ae8:	add	ip, ip, #69632	; 0x11000
   10aec:	ldr	pc, [ip, #1320]!	; 0x528

00010af0 <free@plt>:
   10af0:	add	ip, pc, #0, 12
   10af4:	add	ip, ip, #69632	; 0x11000
   10af8:	ldr	pc, [ip, #1312]!	; 0x520

00010afc <fgets@plt>:
   10afc:	add	ip, pc, #0, 12
   10b00:	add	ip, ip, #69632	; 0x11000
   10b04:	ldr	pc, [ip, #1304]!	; 0x518

00010b08 <time@plt>:
   10b08:	add	ip, pc, #0, 12
   10b0c:	add	ip, ip, #69632	; 0x11000
   10b10:	ldr	pc, [ip, #1296]!	; 0x510

00010b14 <realloc@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #69632	; 0x11000
   10b1c:	ldr	pc, [ip, #1288]!	; 0x508

00010b20 <strcat@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #69632	; 0x11000
   10b28:	ldr	pc, [ip, #1280]!	; 0x500

00010b2c <strcpy@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #69632	; 0x11000
   10b34:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b38 <malloc@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #69632	; 0x11000
   10b40:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b44 <__libc_start_main@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #69632	; 0x11000
   10b4c:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b50 <__gmon_start__@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #69632	; 0x11000
   10b58:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b5c <strlen@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #69632	; 0x11000
   10b64:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b68 <srand@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #69632	; 0x11000
   10b70:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b74 <rand@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #69632	; 0x11000
   10b7c:	ldr	pc, [ip, #1224]!	; 0x4c8

00010b80 <__isoc99_scanf@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #69632	; 0x11000
   10b88:	ldr	pc, [ip, #1216]!	; 0x4c0

00010b8c <abort@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #69632	; 0x11000
   10b94:	ldr	pc, [ip, #1208]!	; 0x4b8

Disassembly of section .text:

00010b98 <_start@@Base>:
   10b98:	mov	fp, #0
   10b9c:	mov	lr, #0
   10ba0:	pop	{r1}		; (ldr r1, [sp], #4)
   10ba4:	mov	r2, sp
   10ba8:	push	{r2}		; (str r2, [sp, #-4]!)
   10bac:	push	{r0}		; (str r0, [sp, #-4]!)
   10bb0:	ldr	ip, [pc, #16]	; 10bc8 <_start@@Base+0x30>
   10bb4:	push	{ip}		; (str ip, [sp, #-4]!)
   10bb8:	ldr	r0, [pc, #12]	; 10bcc <_start@@Base+0x34>
   10bbc:	ldr	r3, [pc, #12]	; 10bd0 <_start@@Base+0x38>
   10bc0:	bl	10b44 <__libc_start_main@plt>
   10bc4:	bl	10b8c <abort@plt>
   10bc8:	muleq	r1, r8, r8
   10bcc:	andeq	r0, r1, r0, lsl #26
   10bd0:	andeq	r1, r1, r8, lsr r8
   10bd4:	ldr	r3, [pc, #20]	; 10bf0 <_start@@Base+0x58>
   10bd8:	ldr	r2, [pc, #20]	; 10bf4 <_start@@Base+0x5c>
   10bdc:	add	r3, pc, r3
   10be0:	ldr	r2, [r3, r2]
   10be4:	cmp	r2, #0
   10be8:	bxeq	lr
   10bec:	b	10b50 <__gmon_start__@plt>
   10bf0:	andeq	r1, r1, ip, lsl r4
   10bf4:	andeq	r0, r0, r4, asr r0
   10bf8:	ldr	r0, [pc, #24]	; 10c18 <_start@@Base+0x80>
   10bfc:	ldr	r3, [pc, #24]	; 10c1c <_start@@Base+0x84>
   10c00:	cmp	r3, r0
   10c04:	bxeq	lr
   10c08:	ldr	r3, [pc, #16]	; 10c20 <_start@@Base+0x88>
   10c0c:	cmp	r3, #0
   10c10:	bxeq	lr
   10c14:	bx	r3
   10c18:	andeq	r2, r2, r4, rrx
   10c1c:	andeq	r2, r2, r4, rrx
   10c20:	andeq	r0, r0, r0
   10c24:	ldr	r0, [pc, #36]	; 10c50 <_start@@Base+0xb8>
   10c28:	ldr	r1, [pc, #36]	; 10c54 <_start@@Base+0xbc>
   10c2c:	sub	r1, r1, r0
   10c30:	asr	r1, r1, #2
   10c34:	add	r1, r1, r1, lsr #31
   10c38:	asrs	r1, r1, #1
   10c3c:	bxeq	lr
   10c40:	ldr	r3, [pc, #16]	; 10c58 <_start@@Base+0xc0>
   10c44:	cmp	r3, #0
   10c48:	bxeq	lr
   10c4c:	bx	r3
   10c50:	andeq	r2, r2, r4, rrx
   10c54:	andeq	r2, r2, r4, rrx
   10c58:	andeq	r0, r0, r0
   10c5c:	push	{r4, lr}
   10c60:	ldr	r4, [pc, #24]	; 10c80 <_start@@Base+0xe8>
   10c64:	ldrb	r3, [r4]
   10c68:	cmp	r3, #0
   10c6c:	popne	{r4, pc}
   10c70:	bl	10bf8 <_start@@Base+0x60>
   10c74:	mov	r3, #1
   10c78:	strb	r3, [r4]
   10c7c:	pop	{r4, pc}
   10c80:	andeq	r2, r2, r4, rrx
   10c84:	b	10c24 <_start@@Base+0x8c>

00010c88 <imprime@@Base>:
   10c88:	push	{fp, lr}
   10c8c:	mov	fp, sp
   10c90:	sub	sp, sp, #16
   10c94:	str	r0, [fp, #-4]
   10c98:	movw	r0, #0
   10c9c:	str	r0, [sp, #8]
   10ca0:	ldr	r0, [sp, #8]
   10ca4:	cmp	r0, #5
   10ca8:	bge	10cf4 <imprime@@Base+0x6c>
   10cac:	ldr	r0, [sp, #8]
   10cb0:	add	r1, r0, #1
   10cb4:	ldr	r0, [fp, #-4]
   10cb8:	ldr	r2, [sp, #8]
   10cbc:	str	r1, [sp, #4]
   10cc0:	mov	r1, r2
   10cc4:	bl	110e8 <vetor_elemento@@Base>
   10cc8:	ldr	r1, [pc, #44]	; 10cfc <imprime@@Base+0x74>
   10ccc:	add	r1, pc, r1
   10cd0:	str	r0, [sp]
   10cd4:	mov	r0, r1
   10cd8:	ldr	r1, [sp, #4]
   10cdc:	ldr	r2, [sp]
   10ce0:	bl	10ae4 <printf@plt>
   10ce4:	ldr	r0, [sp, #8]
   10ce8:	add	r0, r0, #1
   10cec:	str	r0, [sp, #8]
   10cf0:	b	10ca0 <imprime@@Base+0x18>
   10cf4:	mov	sp, fp
   10cf8:	pop	{fp, pc}
   10cfc:	ldrdeq	r0, [r0], -r4

00010d00 <main@@Base>:
   10d00:	push	{fp, lr}
   10d04:	mov	fp, sp
   10d08:	sub	sp, sp, #152	; 0x98
   10d0c:	ldr	r0, [pc, #372]	; 10e88 <main@@Base+0x188>
   10d10:	ldr	r0, [pc, r0]
   10d14:	movw	r1, #0
   10d18:	str	r1, [fp, #-4]
   10d1c:	blx	r0
   10d20:	str	r0, [sp, #40]	; 0x28
   10d24:	movw	r0, #0
   10d28:	str	r0, [fp, #-8]
   10d2c:	ldr	r0, [fp, #-8]
   10d30:	cmp	r0, #5
   10d34:	bge	10dbc <main@@Base+0xbc>
   10d38:	ldr	r0, [pc, #356]	; 10ea4 <main@@Base+0x1a4>
   10d3c:	add	r0, pc, r0
   10d40:	ldr	r1, [fp, #-8]
   10d44:	add	r1, r1, #1
   10d48:	bl	10ae4 <printf@plt>
   10d4c:	ldr	r1, [pc, #332]	; 10ea0 <main@@Base+0x1a0>
   10d50:	ldr	r1, [pc, r1]
   10d54:	add	r2, sp, #44	; 0x2c
   10d58:	ldr	r1, [r1]
   10d5c:	str	r0, [sp, #36]	; 0x24
   10d60:	mov	r0, r2
   10d64:	movw	r2, #100	; 0x64
   10d68:	str	r1, [sp, #32]
   10d6c:	mov	r1, r2
   10d70:	ldr	r2, [sp, #32]
   10d74:	bl	10afc <fgets@plt>
   10d78:	add	r1, sp, #44	; 0x2c
   10d7c:	str	r0, [sp, #28]
   10d80:	mov	r0, r1
   10d84:	str	r1, [sp, #24]
   10d88:	bl	10b5c <strlen@plt>
   10d8c:	sub	r0, r0, #1
   10d90:	ldr	r1, [sp, #24]
   10d94:	add	r0, r1, r0
   10d98:	movw	r2, #0
   10d9c:	strb	r2, [r0]
   10da0:	ldr	r0, [sp, #40]	; 0x28
   10da4:	ldr	r2, [fp, #-8]
   10da8:	bl	11154 <vetor_insere@@Base>
   10dac:	ldr	r0, [fp, #-8]
   10db0:	add	r0, r0, #1
   10db4:	str	r0, [fp, #-8]
   10db8:	b	10d2c <main@@Base+0x2c>
   10dbc:	ldr	r0, [sp, #40]	; 0x28
   10dc0:	bl	10c88 <imprime@@Base>
   10dc4:	ldr	r0, [pc, #196]	; 10e90 <main@@Base+0x190>
   10dc8:	add	r0, pc, r0
   10dcc:	bl	10ae4 <printf@plt>
   10dd0:	ldr	r1, [pc, #180]	; 10e8c <main@@Base+0x18c>
   10dd4:	add	r1, pc, r1
   10dd8:	add	r2, sp, #44	; 0x2c
   10ddc:	str	r0, [sp, #20]
   10de0:	mov	r0, r1
   10de4:	mov	r1, r2
   10de8:	bl	10b80 <__isoc99_scanf@plt>
   10dec:	add	r1, sp, #44	; 0x2c
   10df0:	ldr	r2, [sp, #40]	; 0x28
   10df4:	ldr	r3, [sp, #40]	; 0x28
   10df8:	str	r0, [sp, #16]
   10dfc:	mov	r0, r3
   10e00:	str	r2, [sp, #12]
   10e04:	bl	113ec <vetor_pesquisa@@Base>
   10e08:	ldr	r1, [sp, #12]
   10e0c:	str	r0, [sp, #8]
   10e10:	mov	r0, r1
   10e14:	ldr	r1, [sp, #8]
   10e18:	bl	11310 <vetor_remove@@Base>
   10e1c:	cmp	r0, #0
   10e20:	beq	10e34 <main@@Base+0x134>
   10e24:	ldr	r0, [pc, #104]	; 10e94 <main@@Base+0x194>
   10e28:	add	r0, pc, r0
   10e2c:	bl	10ae4 <printf@plt>
   10e30:	b	10e3c <main@@Base+0x13c>
   10e34:	ldr	r0, [sp, #40]	; 0x28
   10e38:	bl	10c88 <imprime@@Base>
   10e3c:	ldr	r0, [sp, #40]	; 0x28
   10e40:	bl	11490 <vetor_ordena@@Base>
   10e44:	cmp	r0, #0
   10e48:	beq	10e58 <main@@Base+0x158>
   10e4c:	ldr	r0, [pc, #68]	; 10e98 <main@@Base+0x198>
   10e50:	add	r0, pc, r0
   10e54:	bl	10ae4 <printf@plt>
   10e58:	ldr	r0, [pc, #60]	; 10e9c <main@@Base+0x19c>
   10e5c:	add	r0, pc, r0
   10e60:	bl	10ae4 <printf@plt>
   10e64:	ldr	r1, [sp, #40]	; 0x28
   10e68:	str	r0, [sp, #4]
   10e6c:	mov	r0, r1
   10e70:	bl	10c88 <imprime@@Base>
   10e74:	ldr	r0, [sp, #40]	; 0x28
   10e78:	bl	10f0c <vetor_apaga@@Base>
   10e7c:	movw	r0, #0
   10e80:	mov	sp, fp
   10e84:	pop	{fp, pc}
   10e88:	andeq	r1, r1, r8, lsr r3
   10e8c:	andeq	r0, r0, ip, lsl fp
   10e90:	andeq	r0, r0, r8, lsl #22
   10e94:	andeq	r0, r0, fp, asr #21
   10e98:			; <UNDEFINED> instruction: 0x00000aba
   10e9c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10ea0:	andeq	r1, r1, r0, lsl #6
   10ea4:	andeq	r0, r0, r1, lsl #23

00010ea8 <vetor_novo@@Base>:
   10ea8:	push	{fp, lr}
   10eac:	mov	fp, sp
   10eb0:	sub	sp, sp, #8
   10eb4:	movw	r0, #12
   10eb8:	bl	10b38 <malloc@plt>
   10ebc:	str	r0, [sp]
   10ec0:	ldr	r0, [sp]
   10ec4:	movw	r1, #0
   10ec8:	cmp	r0, r1
   10ecc:	bne	10edc <vetor_novo@@Base+0x34>
   10ed0:	movw	r0, #0
   10ed4:	str	r0, [sp, #4]
   10ed8:	b	10f00 <vetor_novo@@Base+0x58>
   10edc:	ldr	r0, [sp]
   10ee0:	movw	r1, #0
   10ee4:	str	r1, [r0]
   10ee8:	ldr	r0, [sp]
   10eec:	str	r1, [r0, #4]
   10ef0:	ldr	r0, [sp]
   10ef4:	str	r1, [r0, #8]
   10ef8:	ldr	r0, [sp]
   10efc:	str	r0, [sp, #4]
   10f00:	ldr	r0, [sp, #4]
   10f04:	mov	sp, fp
   10f08:	pop	{fp, pc}

00010f0c <vetor_apaga@@Base>:
   10f0c:	push	{fp, lr}
   10f10:	mov	fp, sp
   10f14:	sub	sp, sp, #8
   10f18:	str	r0, [sp, #4]
   10f1c:	ldr	r0, [sp, #4]
   10f20:	movw	r1, #0
   10f24:	cmp	r0, r1
   10f28:	bne	10f30 <vetor_apaga@@Base+0x24>
   10f2c:	b	10f88 <vetor_apaga@@Base+0x7c>
   10f30:	movw	r0, #0
   10f34:	str	r0, [sp]
   10f38:	ldr	r0, [sp]
   10f3c:	ldr	r1, [sp, #4]
   10f40:	ldr	r1, [r1]
   10f44:	cmp	r0, r1
   10f48:	bge	10f74 <vetor_apaga@@Base+0x68>
   10f4c:	ldr	r0, [sp, #4]
   10f50:	ldr	r0, [r0, #8]
   10f54:	ldr	r1, [sp]
   10f58:	add	r0, r0, r1, lsl #2
   10f5c:	ldr	r0, [r0]
   10f60:	bl	10af0 <free@plt>
   10f64:	ldr	r0, [sp]
   10f68:	add	r0, r0, #1
   10f6c:	str	r0, [sp]
   10f70:	b	10f38 <vetor_apaga@@Base+0x2c>
   10f74:	ldr	r0, [sp, #4]
   10f78:	ldr	r0, [r0, #8]
   10f7c:	bl	10af0 <free@plt>
   10f80:	ldr	r0, [sp, #4]
   10f84:	bl	10af0 <free@plt>
   10f88:	mov	sp, fp
   10f8c:	pop	{fp, pc}

00010f90 <vetor_atribui@@Base>:
   10f90:	push	{fp, lr}
   10f94:	mov	fp, sp
   10f98:	sub	sp, sp, #24
   10f9c:	str	r0, [fp, #-8]
   10fa0:	str	r1, [sp, #12]
   10fa4:	str	r2, [sp, #8]
   10fa8:	ldr	r0, [fp, #-8]
   10fac:	movw	r1, #0
   10fb0:	cmp	r0, r1
   10fb4:	beq	10fd8 <vetor_atribui@@Base+0x48>
   10fb8:	ldr	r0, [sp, #12]
   10fbc:	cmp	r0, #0
   10fc0:	blt	10fd8 <vetor_atribui@@Base+0x48>
   10fc4:	ldr	r0, [sp, #12]
   10fc8:	ldr	r1, [fp, #-8]
   10fcc:	ldr	r1, [r1]
   10fd0:	cmp	r0, r1
   10fd4:	blt	10fe4 <vetor_atribui@@Base+0x54>
   10fd8:	mvn	r0, #0
   10fdc:	str	r0, [fp, #-4]
   10fe0:	b	110a0 <vetor_atribui@@Base+0x110>
   10fe4:	ldr	r0, [sp, #8]
   10fe8:	bl	10b5c <strlen@plt>
   10fec:	str	r0, [sp, #4]
   10ff0:	ldr	r0, [sp, #4]
   10ff4:	ldr	r1, [fp, #-8]
   10ff8:	ldr	r1, [r1, #8]
   10ffc:	ldr	r2, [sp, #12]
   11000:	add	r1, r1, r2, lsl #2
   11004:	ldr	r1, [r1]
   11008:	str	r0, [sp]
   1100c:	mov	r0, r1
   11010:	bl	10b5c <strlen@plt>
   11014:	ldr	r1, [sp]
   11018:	cmp	r1, r0
   1101c:	bls	1107c <vetor_atribui@@Base+0xec>
   11020:	ldr	r0, [fp, #-8]
   11024:	ldr	r0, [r0, #8]
   11028:	ldr	r1, [sp, #12]
   1102c:	ldr	r0, [r0, r1, lsl #2]
   11030:	ldr	r1, [sp, #4]
   11034:	add	r1, r1, #1
   11038:	bl	10b14 <realloc@plt>
   1103c:	ldr	r1, [fp, #-8]
   11040:	ldr	r1, [r1, #8]
   11044:	ldr	r2, [sp, #12]
   11048:	str	r0, [r1, r2, lsl #2]
   1104c:	ldr	r0, [fp, #-8]
   11050:	ldr	r0, [r0, #8]
   11054:	ldr	r1, [sp, #12]
   11058:	add	r0, r0, r1, lsl #2
   1105c:	ldr	r0, [r0]
   11060:	movw	r1, #0
   11064:	cmp	r0, r1
   11068:	bne	11078 <vetor_atribui@@Base+0xe8>
   1106c:	mvn	r0, #0
   11070:	str	r0, [fp, #-4]
   11074:	b	110a0 <vetor_atribui@@Base+0x110>
   11078:	b	1107c <vetor_atribui@@Base+0xec>
   1107c:	ldr	r0, [fp, #-8]
   11080:	ldr	r0, [r0, #8]
   11084:	ldr	r1, [sp, #12]
   11088:	add	r0, r0, r1, lsl #2
   1108c:	ldr	r0, [r0]
   11090:	ldr	r1, [sp, #8]
   11094:	bl	10b2c <strcpy@plt>
   11098:	ldr	r1, [sp, #12]
   1109c:	str	r1, [fp, #-4]
   110a0:	ldr	r0, [fp, #-4]
   110a4:	mov	sp, fp
   110a8:	pop	{fp, pc}

000110ac <vetor_tamanho@@Base>:
   110ac:	sub	sp, sp, #8
   110b0:	str	r0, [sp]
   110b4:	ldr	r0, [sp]
   110b8:	movw	r1, #0
   110bc:	cmp	r0, r1
   110c0:	bne	110d0 <vetor_tamanho@@Base+0x24>
   110c4:	mvn	r0, #0
   110c8:	str	r0, [sp, #4]
   110cc:	b	110dc <vetor_tamanho@@Base+0x30>
   110d0:	ldr	r0, [sp]
   110d4:	ldr	r0, [r0]
   110d8:	str	r0, [sp, #4]
   110dc:	ldr	r0, [sp, #4]
   110e0:	add	sp, sp, #8
   110e4:	bx	lr

000110e8 <vetor_elemento@@Base>:
   110e8:	sub	sp, sp, #12
   110ec:	str	r0, [sp, #4]
   110f0:	str	r1, [sp]
   110f4:	ldr	r0, [sp, #4]
   110f8:	movw	r1, #0
   110fc:	cmp	r0, r1
   11100:	beq	11124 <vetor_elemento@@Base+0x3c>
   11104:	ldr	r0, [sp]
   11108:	cmp	r0, #0
   1110c:	blt	11124 <vetor_elemento@@Base+0x3c>
   11110:	ldr	r0, [sp]
   11114:	ldr	r1, [sp, #4]
   11118:	ldr	r1, [r1]
   1111c:	cmp	r0, r1
   11120:	blt	11130 <vetor_elemento@@Base+0x48>
   11124:	movw	r0, #0
   11128:	str	r0, [sp, #8]
   1112c:	b	11148 <vetor_elemento@@Base+0x60>
   11130:	ldr	r0, [sp, #4]
   11134:	ldr	r0, [r0, #8]
   11138:	ldr	r1, [sp]
   1113c:	add	r0, r0, r1, lsl #2
   11140:	ldr	r0, [r0]
   11144:	str	r0, [sp, #8]
   11148:	ldr	r0, [sp, #8]
   1114c:	add	sp, sp, #12
   11150:	bx	lr

00011154 <vetor_insere@@Base>:
   11154:	push	{fp, lr}
   11158:	mov	fp, sp
   1115c:	sub	sp, sp, #24
   11160:	str	r0, [fp, #-8]
   11164:	str	r1, [sp, #12]
   11168:	str	r2, [sp, #8]
   1116c:	ldr	r0, [fp, #-8]
   11170:	movw	r1, #0
   11174:	cmp	r0, r1
   11178:	beq	1119c <vetor_insere@@Base+0x48>
   1117c:	ldr	r0, [sp, #8]
   11180:	cmp	r0, #0
   11184:	blt	1119c <vetor_insere@@Base+0x48>
   11188:	ldr	r0, [sp, #8]
   1118c:	ldr	r1, [fp, #-8]
   11190:	ldr	r1, [r1]
   11194:	cmp	r0, r1
   11198:	ble	111a8 <vetor_insere@@Base+0x54>
   1119c:	mvn	r0, #0
   111a0:	str	r0, [fp, #-4]
   111a4:	b	11304 <vetor_insere@@Base+0x1b0>
   111a8:	ldr	r0, [fp, #-8]
   111ac:	ldr	r0, [r0]
   111b0:	ldr	r1, [fp, #-8]
   111b4:	ldr	r1, [r1, #4]
   111b8:	cmp	r0, r1
   111bc:	bne	11230 <vetor_insere@@Base+0xdc>
   111c0:	ldr	r0, [fp, #-8]
   111c4:	ldr	r0, [r0, #4]
   111c8:	cmp	r0, #0
   111cc:	bne	111e0 <vetor_insere@@Base+0x8c>
   111d0:	ldr	r0, [fp, #-8]
   111d4:	movw	r1, #1
   111d8:	str	r1, [r0, #4]
   111dc:	b	111f0 <vetor_insere@@Base+0x9c>
   111e0:	ldr	r0, [fp, #-8]
   111e4:	ldr	r1, [r0, #4]
   111e8:	lsl	r1, r1, #1
   111ec:	str	r1, [r0, #4]
   111f0:	ldr	r0, [fp, #-8]
   111f4:	ldr	r1, [r0, #4]
   111f8:	ldr	r0, [r0, #8]
   111fc:	lsl	r1, r1, #2
   11200:	bl	10b14 <realloc@plt>
   11204:	ldr	r1, [fp, #-8]
   11208:	str	r0, [r1, #8]
   1120c:	ldr	r0, [fp, #-8]
   11210:	ldr	r0, [r0, #8]
   11214:	movw	r1, #0
   11218:	cmp	r0, r1
   1121c:	bne	1122c <vetor_insere@@Base+0xd8>
   11220:	mvn	r0, #0
   11224:	str	r0, [fp, #-4]
   11228:	b	11304 <vetor_insere@@Base+0x1b0>
   1122c:	b	11230 <vetor_insere@@Base+0xdc>
   11230:	ldr	r0, [fp, #-8]
   11234:	ldr	r0, [r0]
   11238:	sub	r0, r0, #1
   1123c:	str	r0, [sp, #4]
   11240:	ldr	r0, [sp, #4]
   11244:	ldr	r1, [sp, #8]
   11248:	cmp	r0, r1
   1124c:	blt	11280 <vetor_insere@@Base+0x12c>
   11250:	ldr	r0, [fp, #-8]
   11254:	ldr	r0, [r0, #8]
   11258:	ldr	r1, [sp, #4]
   1125c:	add	r0, r0, r1, lsl #2
   11260:	add	r1, r0, #4
   11264:	ldr	r0, [r0]
   11268:	str	r0, [r1]
   1126c:	ldr	r0, [sp, #4]
   11270:	mvn	r1, #0
   11274:	add	r0, r0, r1
   11278:	str	r0, [sp, #4]
   1127c:	b	11240 <vetor_insere@@Base+0xec>
   11280:	ldr	r0, [sp, #12]
   11284:	bl	10b5c <strlen@plt>
   11288:	add	r0, r0, #1
   1128c:	mov	r1, #1
   11290:	bl	10acc <calloc@plt>
   11294:	ldr	r1, [fp, #-8]
   11298:	ldr	r1, [r1, #8]
   1129c:	ldr	r2, [sp, #8]
   112a0:	str	r0, [r1, r2, lsl #2]
   112a4:	ldr	r0, [fp, #-8]
   112a8:	ldr	r0, [r0, #8]
   112ac:	ldr	r1, [sp, #8]
   112b0:	add	r0, r0, r1, lsl #2
   112b4:	ldr	r0, [r0]
   112b8:	movw	r1, #0
   112bc:	cmp	r0, r1
   112c0:	bne	112d0 <vetor_insere@@Base+0x17c>
   112c4:	mvn	r0, #0
   112c8:	str	r0, [fp, #-4]
   112cc:	b	11304 <vetor_insere@@Base+0x1b0>
   112d0:	ldr	r0, [fp, #-8]
   112d4:	ldr	r0, [r0, #8]
   112d8:	ldr	r1, [sp, #8]
   112dc:	add	r0, r0, r1, lsl #2
   112e0:	ldr	r0, [r0]
   112e4:	ldr	r1, [sp, #12]
   112e8:	bl	10b2c <strcpy@plt>
   112ec:	ldr	r1, [fp, #-8]
   112f0:	ldr	r2, [r1]
   112f4:	add	r2, r2, #1
   112f8:	str	r2, [r1]
   112fc:	ldr	r1, [sp, #8]
   11300:	str	r1, [fp, #-4]
   11304:	ldr	r0, [fp, #-4]
   11308:	mov	sp, fp
   1130c:	pop	{fp, pc}

00011310 <vetor_remove@@Base>:
   11310:	push	{fp, lr}
   11314:	mov	fp, sp
   11318:	sub	sp, sp, #16
   1131c:	str	r0, [sp, #8]
   11320:	str	r1, [sp, #4]
   11324:	ldr	r0, [sp, #8]
   11328:	movw	r1, #0
   1132c:	cmp	r0, r1
   11330:	beq	11354 <vetor_remove@@Base+0x44>
   11334:	ldr	r0, [sp, #4]
   11338:	cmp	r0, #0
   1133c:	blt	11354 <vetor_remove@@Base+0x44>
   11340:	ldr	r0, [sp, #4]
   11344:	ldr	r1, [sp, #8]
   11348:	ldr	r1, [r1]
   1134c:	cmp	r0, r1
   11350:	blt	11360 <vetor_remove@@Base+0x50>
   11354:	mvn	r0, #0
   11358:	str	r0, [fp, #-4]
   1135c:	b	113e0 <vetor_remove@@Base+0xd0>
   11360:	ldr	r0, [sp, #8]
   11364:	ldr	r0, [r0, #8]
   11368:	ldr	r1, [sp, #4]
   1136c:	add	r0, r0, r1, lsl #2
   11370:	ldr	r0, [r0]
   11374:	bl	10af0 <free@plt>
   11378:	ldr	r0, [sp, #4]
   1137c:	add	r0, r0, #1
   11380:	str	r0, [sp]
   11384:	ldr	r0, [sp]
   11388:	ldr	r1, [sp, #8]
   1138c:	ldr	r1, [r1]
   11390:	cmp	r0, r1
   11394:	bge	113c4 <vetor_remove@@Base+0xb4>
   11398:	ldr	r0, [sp, #8]
   1139c:	ldr	r0, [r0, #8]
   113a0:	ldr	r1, [sp]
   113a4:	add	r0, r0, r1, lsl #2
   113a8:	sub	r1, r0, #4
   113ac:	ldr	r0, [r0]
   113b0:	str	r0, [r1]
   113b4:	ldr	r0, [sp]
   113b8:	add	r0, r0, #1
   113bc:	str	r0, [sp]
   113c0:	b	11384 <vetor_remove@@Base+0x74>
   113c4:	ldr	r0, [sp, #8]
   113c8:	ldr	r1, [r0]
   113cc:	mvn	r2, #0
   113d0:	add	r1, r1, r2
   113d4:	str	r1, [r0]
   113d8:	movw	r0, #0
   113dc:	str	r0, [fp, #-4]
   113e0:	ldr	r0, [fp, #-4]
   113e4:	mov	sp, fp
   113e8:	pop	{fp, pc}

000113ec <vetor_pesquisa@@Base>:
   113ec:	push	{fp, lr}
   113f0:	mov	fp, sp
   113f4:	sub	sp, sp, #16
   113f8:	str	r0, [sp, #8]
   113fc:	str	r1, [sp, #4]
   11400:	ldr	r0, [sp, #8]
   11404:	movw	r1, #0
   11408:	cmp	r0, r1
   1140c:	bne	1141c <vetor_pesquisa@@Base+0x30>
   11410:	mvn	r0, #0
   11414:	str	r0, [fp, #-4]
   11418:	b	11484 <vetor_pesquisa@@Base+0x98>
   1141c:	movw	r0, #0
   11420:	str	r0, [sp]
   11424:	ldr	r0, [sp]
   11428:	ldr	r1, [sp, #8]
   1142c:	ldr	r1, [r1]
   11430:	cmp	r0, r1
   11434:	bge	1147c <vetor_pesquisa@@Base+0x90>
   11438:	ldr	r0, [sp, #8]
   1143c:	ldr	r0, [r0, #8]
   11440:	ldr	r1, [sp]
   11444:	add	r0, r0, r1, lsl #2
   11448:	ldr	r0, [r0]
   1144c:	ldr	r1, [sp, #4]
   11450:	bl	10ad8 <strcmp@plt>
   11454:	cmp	r0, #0
   11458:	bne	11468 <vetor_pesquisa@@Base+0x7c>
   1145c:	ldr	r0, [sp]
   11460:	str	r0, [fp, #-4]
   11464:	b	11484 <vetor_pesquisa@@Base+0x98>
   11468:	b	1146c <vetor_pesquisa@@Base+0x80>
   1146c:	ldr	r0, [sp]
   11470:	add	r0, r0, #1
   11474:	str	r0, [sp]
   11478:	b	11424 <vetor_pesquisa@@Base+0x38>
   1147c:	mvn	r0, #0
   11480:	str	r0, [fp, #-4]
   11484:	ldr	r0, [fp, #-4]
   11488:	mov	sp, fp
   1148c:	pop	{fp, pc}

00011490 <vetor_ordena@@Base>:
   11490:	push	{fp, lr}
   11494:	mov	fp, sp
   11498:	sub	sp, sp, #24
   1149c:	str	r0, [fp, #-8]
   114a0:	ldr	r0, [fp, #-8]
   114a4:	movw	r1, #0
   114a8:	cmp	r0, r1
   114ac:	bne	114bc <vetor_ordena@@Base+0x2c>
   114b0:	mvn	r0, #0
   114b4:	str	r0, [fp, #-4]
   114b8:	b	115ac <vetor_ordena@@Base+0x11c>
   114bc:	movw	r0, #1
   114c0:	str	r0, [sp, #12]
   114c4:	ldr	r0, [sp, #12]
   114c8:	ldr	r1, [fp, #-8]
   114cc:	ldr	r1, [r1]
   114d0:	cmp	r0, r1
   114d4:	bge	115a4 <vetor_ordena@@Base+0x114>
   114d8:	ldr	r0, [fp, #-8]
   114dc:	ldr	r0, [r0, #8]
   114e0:	ldr	r1, [sp, #12]
   114e4:	add	r0, r0, r1, lsl #2
   114e8:	ldr	r0, [r0]
   114ec:	str	r0, [sp, #4]
   114f0:	ldr	r0, [sp, #12]
   114f4:	str	r0, [sp, #8]
   114f8:	ldr	r0, [sp, #8]
   114fc:	cmp	r0, #0
   11500:	movw	r0, #0
   11504:	str	r0, [sp]
   11508:	ble	1153c <vetor_ordena@@Base+0xac>
   1150c:	ldr	r0, [sp, #4]
   11510:	ldr	r1, [fp, #-8]
   11514:	ldr	r1, [r1, #8]
   11518:	ldr	r2, [sp, #8]
   1151c:	sub	r2, r2, #1
   11520:	add	r1, r1, r2, lsl #2
   11524:	ldr	r1, [r1]
   11528:	bl	10ad8 <strcmp@plt>
   1152c:	cmp	r0, #0
   11530:	movw	r0, #0
   11534:	movlt	r0, #1
   11538:	str	r0, [sp]
   1153c:	ldr	r0, [sp]
   11540:	tst	r0, #1
   11544:	beq	1157c <vetor_ordena@@Base+0xec>
   11548:	ldr	r0, [fp, #-8]
   1154c:	ldr	r0, [r0, #8]
   11550:	ldr	r1, [sp, #8]
   11554:	add	r2, r0, r1, lsl #2
   11558:	sub	r1, r1, #1
   1155c:	add	r0, r0, r1, lsl #2
   11560:	ldr	r0, [r0]
   11564:	str	r0, [r2]
   11568:	ldr	r0, [sp, #8]
   1156c:	mvn	r1, #0
   11570:	add	r0, r0, r1
   11574:	str	r0, [sp, #8]
   11578:	b	114f8 <vetor_ordena@@Base+0x68>
   1157c:	ldr	r0, [sp, #4]
   11580:	ldr	r1, [fp, #-8]
   11584:	ldr	r1, [r1, #8]
   11588:	ldr	r2, [sp, #8]
   1158c:	add	r1, r1, r2, lsl #2
   11590:	str	r0, [r1]
   11594:	ldr	r0, [sp, #12]
   11598:	add	r0, r0, #1
   1159c:	str	r0, [sp, #12]
   115a0:	b	114c4 <vetor_ordena@@Base+0x34>
   115a4:	movw	r0, #0
   115a8:	str	r0, [fp, #-4]
   115ac:	ldr	r0, [fp, #-4]
   115b0:	mov	sp, fp
   115b4:	pop	{fp, pc}

000115b8 <vetor_concatena@@Base>:
   115b8:	push	{fp, lr}
   115bc:	mov	fp, sp
   115c0:	sub	sp, sp, #24
   115c4:	str	r0, [fp, #-8]
   115c8:	str	r1, [sp, #12]
   115cc:	ldr	r0, [fp, #-8]
   115d0:	movw	r1, #0
   115d4:	cmp	r0, r1
   115d8:	beq	115ec <vetor_concatena@@Base+0x34>
   115dc:	ldr	r0, [sp, #12]
   115e0:	movw	r1, #0
   115e4:	cmp	r0, r1
   115e8:	bne	115f8 <vetor_concatena@@Base+0x40>
   115ec:	movw	r0, #0
   115f0:	str	r0, [fp, #-4]
   115f4:	b	11684 <vetor_concatena@@Base+0xcc>
   115f8:	bl	10ea8 <vetor_novo@@Base>
   115fc:	str	r0, [sp, #8]
   11600:	ldr	r0, [fp, #-8]
   11604:	ldr	r0, [r0]
   11608:	ldr	r1, [sp, #12]
   1160c:	ldr	r1, [r1]
   11610:	add	r0, r0, r1, lsl #2
   11614:	ldr	r1, [sp, #8]
   11618:	str	r0, [r1, #8]
   1161c:	ldr	r0, [fp, #-8]
   11620:	ldr	r0, [r0, #4]
   11624:	ldr	r1, [sp, #12]
   11628:	ldr	r1, [r1, #4]
   1162c:	add	r0, r0, r1
   11630:	ldr	r1, [sp, #8]
   11634:	str	r0, [r1, #4]
   11638:	ldr	r0, [sp, #8]
   1163c:	ldr	r0, [r0, #8]
   11640:	ldr	r0, [r0]
   11644:	ldr	r1, [fp, #-8]
   11648:	ldr	r1, [r1, #8]
   1164c:	ldr	r1, [r1]
   11650:	bl	10b2c <strcpy@plt>
   11654:	ldr	r1, [sp, #8]
   11658:	ldr	r1, [r1, #8]
   1165c:	ldr	r1, [r1]
   11660:	ldr	r2, [sp, #12]
   11664:	ldr	r2, [r2, #8]
   11668:	ldr	r2, [r2]
   1166c:	str	r0, [sp, #4]
   11670:	mov	r0, r1
   11674:	mov	r1, r2
   11678:	bl	10b20 <strcat@plt>
   1167c:	ldr	r1, [sp, #8]
   11680:	str	r1, [fp, #-4]
   11684:	ldr	r0, [fp, #-4]
   11688:	mov	sp, fp
   1168c:	pop	{fp, pc}

00011690 <vetor_inverte@@Base>:
   11690:	push	{fp, lr}
   11694:	mov	fp, sp
   11698:	sub	sp, sp, #24
   1169c:	str	r0, [fp, #-4]
   116a0:	ldr	r0, [fp, #-4]
   116a4:	bl	110ac <vetor_tamanho@@Base>
   116a8:	str	r0, [fp, #-8]
   116ac:	ldr	r0, [fp, #-8]
   116b0:	str	r0, [sp, #8]
   116b4:	ldr	r0, [fp, #-8]
   116b8:	cmp	r0, #0
   116bc:	ble	1176c <vetor_inverte@@Base+0xdc>
   116c0:	movw	r0, #0
   116c4:	str	r0, [sp, #12]
   116c8:	ldr	r0, [sp, #12]
   116cc:	ldr	r1, [fp, #-8]
   116d0:	cmp	r0, r1
   116d4:	movw	r0, #0
   116d8:	str	r0, [sp]
   116dc:	bge	116f8 <vetor_inverte@@Base+0x68>
   116e0:	ldr	r0, [sp, #12]
   116e4:	ldr	r1, [sp, #8]
   116e8:	cmp	r0, r1
   116ec:	movw	r0, #0
   116f0:	movlt	r0, #1
   116f4:	str	r0, [sp]
   116f8:	ldr	r0, [sp]
   116fc:	tst	r0, #1
   11700:	beq	11768 <vetor_inverte@@Base+0xd8>
   11704:	ldr	r0, [fp, #-4]
   11708:	ldr	r0, [r0, #8]
   1170c:	ldr	r1, [sp, #12]
   11710:	ldr	r0, [r0, r1, lsl #2]
   11714:	str	r0, [sp, #4]
   11718:	ldr	r0, [fp, #-4]
   1171c:	ldr	r0, [r0, #8]
   11720:	ldr	r1, [sp, #12]
   11724:	ldr	r2, [sp, #8]
   11728:	ldr	r2, [r0, r2, lsl #2]
   1172c:	str	r2, [r0, r1, lsl #2]
   11730:	ldr	r0, [fp, #-4]
   11734:	ldr	r0, [r0, #8]
   11738:	ldr	r1, [sp, #8]
   1173c:	add	r0, r0, r1, lsl #2
   11740:	ldr	r1, [sp, #4]
   11744:	str	r1, [r0]
   11748:	ldr	r0, [sp, #8]
   1174c:	mvn	r1, #0
   11750:	add	r0, r0, r1
   11754:	str	r0, [sp, #8]
   11758:	ldr	r0, [sp, #12]
   1175c:	add	r0, r0, #1
   11760:	str	r0, [sp, #12]
   11764:	b	116c8 <vetor_inverte@@Base+0x38>
   11768:	b	1176c <vetor_inverte@@Base+0xdc>
   1176c:	movw	r0, #0
   11770:	mov	sp, fp
   11774:	pop	{fp, pc}

00011778 <vetor_baralha@@Base>:
   11778:	push	{fp, lr}
   1177c:	mov	fp, sp
   11780:	sub	sp, sp, #32
   11784:	str	r0, [fp, #-4]
   11788:	ldr	r0, [fp, #-4]
   1178c:	ldr	r0, [r0]
   11790:	str	r0, [fp, #-12]
   11794:	bl	10ea8 <vetor_novo@@Base>
   11798:	str	r0, [sp, #8]
   1179c:	add	r0, sp, #16
   117a0:	bl	10b08 <time@plt>
   117a4:	bl	10b68 <srand@plt>
   117a8:	movw	r0, #0
   117ac:	str	r0, [fp, #-8]
   117b0:	ldr	r0, [fp, #-8]
   117b4:	ldr	r1, [fp, #-12]
   117b8:	cmp	r0, r1
   117bc:	bge	1182c <vetor_baralha@@Base+0xb4>
   117c0:	bl	10b74 <rand@plt>
   117c4:	ldr	r1, [fp, #-12]
   117c8:	add	r1, r1, #1
   117cc:	sdiv	r2, r0, r1
   117d0:	mls	r0, r2, r1, r0
   117d4:	str	r0, [sp, #4]
   117d8:	ldr	r0, [sp, #8]
   117dc:	ldr	r0, [r0, #8]
   117e0:	ldr	r1, [fp, #-8]
   117e4:	ldr	r0, [r0, r1, lsl #2]
   117e8:	str	r0, [sp, #12]
   117ec:	ldr	r0, [sp, #8]
   117f0:	ldr	r0, [r0, #8]
   117f4:	ldr	r1, [fp, #-8]
   117f8:	ldr	r2, [sp, #4]
   117fc:	ldr	r2, [r0, r2, lsl #2]
   11800:	str	r2, [r0, r1, lsl #2]
   11804:	ldr	r0, [sp, #8]
   11808:	ldr	r0, [r0, #8]
   1180c:	ldr	r1, [sp, #4]
   11810:	add	r0, r0, r1, lsl #2
   11814:	ldr	r1, [sp, #12]
   11818:	str	r1, [r0]
   1181c:	ldr	r0, [fp, #-8]
   11820:	add	r0, r0, #1
   11824:	str	r0, [fp, #-8]
   11828:	b	117b0 <vetor_baralha@@Base+0x38>
   1182c:	ldr	r0, [sp, #8]
   11830:	mov	sp, fp
   11834:	pop	{fp, pc}

00011838 <__libc_csu_init@@Base>:
   11838:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1183c:	mov	r7, r0
   11840:	ldr	r6, [pc, #72]	; 11890 <__libc_csu_init@@Base+0x58>
   11844:	ldr	r5, [pc, #72]	; 11894 <__libc_csu_init@@Base+0x5c>
   11848:	add	r6, pc, r6
   1184c:	add	r5, pc, r5
   11850:	sub	r6, r6, r5
   11854:	mov	r8, r1
   11858:	mov	r9, r2
   1185c:	bl	10aac <calloc@plt-0x20>
   11860:	asrs	r6, r6, #2
   11864:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11868:	mov	r4, #0
   1186c:	add	r4, r4, #1
   11870:	ldr	r3, [r5], #4
   11874:	mov	r2, r9
   11878:	mov	r1, r8
   1187c:	mov	r0, r7
   11880:	blx	r3
   11884:	cmp	r6, r4
   11888:	bne	1186c <__libc_csu_init@@Base+0x34>
   1188c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11890:			; <UNDEFINED> instruction: 0x000106bc
   11894:			; <UNDEFINED> instruction: 0x000106b4

00011898 <__libc_csu_fini@@Base>:
   11898:	bx	lr

Disassembly of section .fini:

0001189c <.fini>:
   1189c:	push	{r3, lr}
   118a0:	pop	{r3, pc}
