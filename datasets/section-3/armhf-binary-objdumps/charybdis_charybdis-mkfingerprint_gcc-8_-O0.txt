
../repos/charybdis/tools/.libs/charybdis-mkfingerprint:     file format elf32-littlearm


Disassembly of section .init:

00010480 <.init>:
   10480:	push	{r3, lr}
   10484:	bl	10560 <strcmp@plt+0x48>
   10488:	pop	{r3, pc}

Disassembly of section .plt:

0001048c <abort@plt-0x14>:
   1048c:	push	{lr}		; (str lr, [sp, #-4]!)
   10490:	ldr	lr, [pc, #4]	; 1049c <abort@plt-0x4>
   10494:	add	lr, pc, lr
   10498:	ldr	pc, [lr, #8]!
   1049c:	andeq	r0, r1, r4, ror #22

000104a0 <abort@plt>:
   104a0:	add	ip, pc, #0, 12
   104a4:	add	ip, ip, #16, 20	; 0x10000
   104a8:	ldr	pc, [ip, #2916]!	; 0xb64

000104ac <__libc_start_main@plt>:
   104ac:	add	ip, pc, #0, 12
   104b0:	add	ip, ip, #16, 20	; 0x10000
   104b4:	ldr	pc, [ip, #2908]!	; 0xb5c

000104b8 <__gmon_start__@plt>:
   104b8:	add	ip, pc, #0, 12
   104bc:	add	ip, ip, #16, 20	; 0x10000
   104c0:	ldr	pc, [ip, #2900]!	; 0xb54

000104c4 <putchar@plt>:
   104c4:	add	ip, pc, #0, 12
   104c8:	add	ip, ip, #16, 20	; 0x10000
   104cc:	ldr	pc, [ip, #2892]!	; 0xb4c

000104d0 <memset@plt>:
   104d0:	add	ip, pc, #0, 12
   104d4:	add	ip, ip, #16, 20	; 0x10000
   104d8:	ldr	pc, [ip, #2884]!	; 0xb44

000104dc <perror@plt>:
   104dc:	add	ip, pc, #0, 12
   104e0:	add	ip, ip, #16, 20	; 0x10000
   104e4:	ldr	pc, [ip, #2876]!	; 0xb3c

000104e8 <printf@plt>:
   104e8:	add	ip, pc, #0, 12
   104ec:	add	ip, ip, #16, 20	; 0x10000
   104f0:	ldr	pc, [ip, #2868]!	; 0xb34

000104f4 <fwrite@plt>:
   104f4:	add	ip, pc, #0, 12
   104f8:	add	ip, ip, #16, 20	; 0x10000
   104fc:	ldr	pc, [ip, #2860]!	; 0xb2c

00010500 <puts@plt>:
   10500:	add	ip, pc, #0, 12
   10504:	add	ip, ip, #16, 20	; 0x10000
   10508:	ldr	pc, [ip, #2852]!	; 0xb24

0001050c <rb_get_ssl_certfp_file@plt>:
   1050c:	add	ip, pc, #0, 12
   10510:	add	ip, ip, #16, 20	; 0x10000
   10514:	ldr	pc, [ip, #2844]!	; 0xb1c

00010518 <strcmp@plt>:
   10518:	add	ip, pc, #0, 12
   1051c:	add	ip, ip, #16, 20	; 0x10000
   10520:	ldr	pc, [ip, #2836]!	; 0xb14

Disassembly of section .text:

00010524 <.text>:
   10524:	mov	fp, #0
   10528:	mov	lr, #0
   1052c:	pop	{r1}		; (ldr r1, [sp], #4)
   10530:	mov	r2, sp
   10534:	push	{r2}		; (str r2, [sp, #-4]!)
   10538:	push	{r0}		; (str r0, [sp, #-4]!)
   1053c:	ldr	ip, [pc, #16]	; 10554 <strcmp@plt+0x3c>
   10540:	push	{ip}		; (str ip, [sp, #-4]!)
   10544:	ldr	r0, [pc, #12]	; 10558 <strcmp@plt+0x40>
   10548:	ldr	r3, [pc, #12]	; 1055c <strcmp@plt+0x44>
   1054c:	bl	104ac <__libc_start_main@plt>
   10550:	bl	104a0 <abort@plt>
   10554:	andeq	r0, r1, r0, ror #18
   10558:	andeq	r0, r1, r4, lsl r6
   1055c:	andeq	r0, r1, r0, lsl #18
   10560:	ldr	r3, [pc, #20]	; 1057c <strcmp@plt+0x64>
   10564:	ldr	r2, [pc, #20]	; 10580 <strcmp@plt+0x68>
   10568:	add	r3, pc, r3
   1056c:	ldr	r2, [r3, r2]
   10570:	cmp	r2, #0
   10574:	bxeq	lr
   10578:	b	104b8 <__gmon_start__@plt>
   1057c:	muleq	r1, r0, sl
   10580:	andeq	r0, r0, r8, lsr r0
   10584:	ldr	r0, [pc, #24]	; 105a4 <strcmp@plt+0x8c>
   10588:	ldr	r3, [pc, #24]	; 105a8 <strcmp@plt+0x90>
   1058c:	cmp	r3, r0
   10590:	bxeq	lr
   10594:	ldr	r3, [pc, #16]	; 105ac <strcmp@plt+0x94>
   10598:	cmp	r3, #0
   1059c:	bxeq	lr
   105a0:	bx	r3
   105a4:	andeq	r1, r2, r8, asr #32
   105a8:	andeq	r1, r2, r8, asr #32
   105ac:	andeq	r0, r0, r0
   105b0:	ldr	r0, [pc, #36]	; 105dc <strcmp@plt+0xc4>
   105b4:	ldr	r1, [pc, #36]	; 105e0 <strcmp@plt+0xc8>
   105b8:	sub	r1, r1, r0
   105bc:	asr	r1, r1, #2
   105c0:	add	r1, r1, r1, lsr #31
   105c4:	asrs	r1, r1, #1
   105c8:	bxeq	lr
   105cc:	ldr	r3, [pc, #16]	; 105e4 <strcmp@plt+0xcc>
   105d0:	cmp	r3, #0
   105d4:	bxeq	lr
   105d8:	bx	r3
   105dc:	andeq	r1, r2, r8, asr #32
   105e0:	andeq	r1, r2, r8, asr #32
   105e4:	andeq	r0, r0, r0
   105e8:	push	{r4, lr}
   105ec:	ldr	r4, [pc, #24]	; 1060c <strcmp@plt+0xf4>
   105f0:	ldrb	r3, [r4]
   105f4:	cmp	r3, #0
   105f8:	popne	{r4, pc}
   105fc:	bl	10584 <strcmp@plt+0x6c>
   10600:	mov	r3, #1
   10604:	strb	r3, [r4]
   10608:	pop	{r4, pc}
   1060c:	andeq	r1, r2, r8, asr #32
   10610:	b	105b0 <strcmp@plt+0x98>
   10614:	str	r4, [sp, #-12]!
   10618:	str	fp, [sp, #4]
   1061c:	str	lr, [sp, #8]
   10620:	add	fp, sp, #8
   10624:	sub	sp, sp, #108	; 0x6c
   10628:	str	r0, [fp, #-112]	; 0xffffff90
   1062c:	str	r1, [fp, #-116]	; 0xffffff8c
   10630:	ldr	r4, [pc, #640]	; 108b8 <strcmp@plt+0x3a0>
   10634:	add	r4, pc, r4
   10638:	sub	r3, fp, #104	; 0x68
   1063c:	mov	r2, #65	; 0x41
   10640:	mov	r1, #0
   10644:	mov	r0, r3
   10648:	bl	104d0 <memset@plt>
   1064c:	ldr	r3, [fp, #-112]	; 0xffffff90
   10650:	cmp	r3, #3
   10654:	beq	10680 <strcmp@plt+0x168>
   10658:	ldr	r3, [pc, #604]	; 108bc <strcmp@plt+0x3a4>
   1065c:	add	r3, pc, r3
   10660:	mov	r0, r3
   10664:	bl	10500 <puts@plt>
   10668:	ldr	r3, [pc, #592]	; 108c0 <strcmp@plt+0x3a8>
   1066c:	add	r3, pc, r3
   10670:	mov	r0, r3
   10674:	bl	10500 <puts@plt>
   10678:	mov	r3, #1
   1067c:	b	108a0 <strcmp@plt+0x388>
   10680:	ldr	r3, [fp, #-116]	; 0xffffff8c
   10684:	ldr	r3, [r3, #4]
   10688:	str	r3, [fp, #-28]	; 0xffffffe4
   1068c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   10690:	ldr	r3, [r3, #8]
   10694:	str	r3, [fp, #-32]	; 0xffffffe0
   10698:	ldr	r3, [pc, #548]	; 108c4 <strcmp@plt+0x3ac>
   1069c:	add	r3, pc, r3
   106a0:	mov	r1, r3
   106a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   106a8:	bl	10518 <strcmp@plt>
   106ac:	mov	r3, r0
   106b0:	cmp	r3, #0
   106b4:	bne	106d0 <strcmp@plt+0x1b8>
   106b8:	mov	r3, #0
   106bc:	str	r3, [fp, #-16]
   106c0:	ldr	r3, [pc, #512]	; 108c8 <strcmp@plt+0x3b0>
   106c4:	add	r3, pc, r3
   106c8:	str	r3, [fp, #-20]	; 0xffffffec
   106cc:	b	107cc <strcmp@plt+0x2b4>
   106d0:	ldr	r3, [pc, #500]	; 108cc <strcmp@plt+0x3b4>
   106d4:	add	r3, pc, r3
   106d8:	mov	r1, r3
   106dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   106e0:	bl	10518 <strcmp@plt>
   106e4:	mov	r3, r0
   106e8:	cmp	r3, #0
   106ec:	bne	10708 <strcmp@plt+0x1f0>
   106f0:	mov	r3, #1
   106f4:	str	r3, [fp, #-16]
   106f8:	ldr	r3, [pc, #464]	; 108d0 <strcmp@plt+0x3b8>
   106fc:	add	r3, pc, r3
   10700:	str	r3, [fp, #-20]	; 0xffffffec
   10704:	b	107cc <strcmp@plt+0x2b4>
   10708:	ldr	r3, [pc, #452]	; 108d4 <strcmp@plt+0x3bc>
   1070c:	add	r3, pc, r3
   10710:	mov	r1, r3
   10714:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10718:	bl	10518 <strcmp@plt>
   1071c:	mov	r3, r0
   10720:	cmp	r3, #0
   10724:	bne	10740 <strcmp@plt+0x228>
   10728:	mov	r3, #2
   1072c:	str	r3, [fp, #-16]
   10730:	ldr	r3, [pc, #416]	; 108d8 <strcmp@plt+0x3c0>
   10734:	add	r3, pc, r3
   10738:	str	r3, [fp, #-20]	; 0xffffffec
   1073c:	b	107cc <strcmp@plt+0x2b4>
   10740:	ldr	r3, [pc, #404]	; 108dc <strcmp@plt+0x3c4>
   10744:	add	r3, pc, r3
   10748:	mov	r1, r3
   1074c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10750:	bl	10518 <strcmp@plt>
   10754:	mov	r3, r0
   10758:	cmp	r3, #0
   1075c:	bne	10778 <strcmp@plt+0x260>
   10760:	movw	r3, #4097	; 0x1001
   10764:	str	r3, [fp, #-16]
   10768:	ldr	r3, [pc, #368]	; 108e0 <strcmp@plt+0x3c8>
   1076c:	add	r3, pc, r3
   10770:	str	r3, [fp, #-20]	; 0xffffffec
   10774:	b	107cc <strcmp@plt+0x2b4>
   10778:	ldr	r3, [pc, #356]	; 108e4 <strcmp@plt+0x3cc>
   1077c:	add	r3, pc, r3
   10780:	mov	r1, r3
   10784:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10788:	bl	10518 <strcmp@plt>
   1078c:	mov	r3, r0
   10790:	cmp	r3, #0
   10794:	bne	107b0 <strcmp@plt+0x298>
   10798:	movw	r3, #4098	; 0x1002
   1079c:	str	r3, [fp, #-16]
   107a0:	ldr	r3, [pc, #320]	; 108e8 <strcmp@plt+0x3d0>
   107a4:	add	r3, pc, r3
   107a8:	str	r3, [fp, #-20]	; 0xffffffec
   107ac:	b	107cc <strcmp@plt+0x2b4>
   107b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   107b4:	ldr	r3, [pc, #304]	; 108ec <strcmp@plt+0x3d4>
   107b8:	add	r3, pc, r3
   107bc:	mov	r0, r3
   107c0:	bl	104e8 <printf@plt>
   107c4:	mov	r3, #1
   107c8:	b	108a0 <strcmp@plt+0x388>
   107cc:	sub	r3, fp, #104	; 0x68
   107d0:	ldr	r2, [fp, #-16]
   107d4:	mov	r1, r3
   107d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   107dc:	bl	1050c <rb_get_ssl_certfp_file@plt>
   107e0:	str	r0, [fp, #-36]	; 0xffffffdc
   107e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   107e8:	cmp	r3, #0
   107ec:	bge	10800 <strcmp@plt+0x2e8>
   107f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   107f4:	bl	104dc <perror@plt>
   107f8:	mov	r3, #1
   107fc:	b	108a0 <strcmp@plt+0x388>
   10800:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10804:	cmp	r3, #0
   10808:	bne	10834 <strcmp@plt+0x31c>
   1080c:	ldr	r3, [pc, #220]	; 108f0 <strcmp@plt+0x3d8>
   10810:	ldr	r3, [r4, r3]
   10814:	ldr	r3, [r3]
   10818:	mov	r2, #14
   1081c:	mov	r1, #1
   10820:	ldr	r0, [pc, #204]	; 108f4 <strcmp@plt+0x3dc>
   10824:	add	r0, pc, r0
   10828:	bl	104f4 <fwrite@plt>
   1082c:	mov	r3, #1
   10830:	b	108a0 <strcmp@plt+0x388>
   10834:	ldr	r1, [fp, #-20]	; 0xffffffec
   10838:	ldr	r3, [pc, #184]	; 108f8 <strcmp@plt+0x3e0>
   1083c:	add	r3, pc, r3
   10840:	mov	r0, r3
   10844:	bl	104e8 <printf@plt>
   10848:	mov	r3, #0
   1084c:	str	r3, [fp, #-24]	; 0xffffffe8
   10850:	b	10884 <strcmp@plt+0x36c>
   10854:	sub	r2, fp, #104	; 0x68
   10858:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1085c:	add	r3, r2, r3
   10860:	ldrb	r3, [r3]
   10864:	mov	r1, r3
   10868:	ldr	r3, [pc, #140]	; 108fc <strcmp@plt+0x3e4>
   1086c:	add	r3, pc, r3
   10870:	mov	r0, r3
   10874:	bl	104e8 <printf@plt>
   10878:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1087c:	add	r3, r3, #1
   10880:	str	r3, [fp, #-24]	; 0xffffffe8
   10884:	ldr	r2, [fp, #-24]	; 0xffffffe8
   10888:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1088c:	cmp	r2, r3
   10890:	blt	10854 <strcmp@plt+0x33c>
   10894:	mov	r0, #10
   10898:	bl	104c4 <putchar@plt>
   1089c:	mov	r3, #0
   108a0:	mov	r0, r3
   108a4:	sub	sp, fp, #8
   108a8:	ldr	r4, [sp]
   108ac:	ldr	fp, [sp, #4]
   108b0:	add	sp, sp, #8
   108b4:	pop	{pc}		; (ldr pc, [sp], #4)
   108b8:	andeq	r0, r1, r4, asr #19
   108bc:	andeq	r0, r0, ip, lsl #6
   108c0:	andeq	r0, r0, r0, lsr #6
   108c4:	andeq	r0, r0, r0, lsr r3
   108c8:	andeq	r0, r0, r0, lsl r3
   108cc:	andeq	r0, r0, r4, lsl #6
   108d0:	ldrdeq	r0, [r0], -r8
   108d4:	ldrdeq	r0, [r0], -r4
   108d8:	andeq	r0, r0, r0, lsr #5
   108dc:	andeq	r0, r0, r4, lsr #5
   108e0:	andeq	r0, r0, r8, lsl #5
   108e4:	andeq	r0, r0, r8, lsl #5
   108e8:	andeq	r0, r0, ip, ror #4
   108ec:	andeq	r0, r0, r8, ror #4
   108f0:	andeq	r0, r0, ip, lsr r0
   108f4:	andeq	r0, r0, r0, lsl r2
   108f8:	andeq	r0, r0, r8, lsl #4
   108fc:	ldrdeq	r0, [r0], -ip
   10900:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10904:	mov	r7, r0
   10908:	ldr	r6, [pc, #72]	; 10958 <strcmp@plt+0x440>
   1090c:	ldr	r5, [pc, #72]	; 1095c <strcmp@plt+0x444>
   10910:	add	r6, pc, r6
   10914:	add	r5, pc, r5
   10918:	sub	r6, r6, r5
   1091c:	mov	r8, r1
   10920:	mov	r9, r2
   10924:	bl	10480 <abort@plt-0x20>
   10928:	asrs	r6, r6, #2
   1092c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10930:	mov	r4, #0
   10934:	add	r4, r4, #1
   10938:	ldr	r3, [r5], #4
   1093c:	mov	r2, r9
   10940:	mov	r1, r8
   10944:	mov	r0, r7
   10948:	blx	r3
   1094c:	cmp	r6, r4
   10950:	bne	10934 <strcmp@plt+0x41c>
   10954:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10958:	andeq	r0, r1, r4, ror #11
   1095c:	ldrdeq	r0, [r1], -ip
   10960:	bx	lr

Disassembly of section .fini:

00010964 <.fini>:
   10964:	push	{r3, lr}
   10968:	pop	{r3, pc}
