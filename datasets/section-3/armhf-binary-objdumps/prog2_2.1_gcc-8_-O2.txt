
../repos/prog2/2.1:     file format elf32-littlearm


Disassembly of section .init:

0001063c <.init>:
   1063c:	push	{r3, lr}
   10640:	bl	108b8 <_start@@Base+0x3c>
   10644:	pop	{r3, pc}

Disassembly of section .plt:

00010648 <printf@plt-0x14>:
   10648:	push	{lr}		; (str lr, [sp, #-4]!)
   1064c:	ldr	lr, [pc, #4]	; 10658 <printf@plt-0x4>
   10650:	add	lr, pc, lr
   10654:	ldr	pc, [lr, #8]!
   10658:	andeq	r0, r1, r8, lsr #19

0001065c <printf@plt>:
   1065c:	add	ip, pc, #0, 12
   10660:	add	ip, ip, #16, 20	; 0x10000
   10664:	ldr	pc, [ip, #2472]!	; 0x9a8

00010668 <free@plt>:
   10668:	add	ip, pc, #0, 12
   1066c:	add	ip, ip, #16, 20	; 0x10000
   10670:	ldr	pc, [ip, #2464]!	; 0x9a0

00010674 <realloc@plt>:
   10674:	add	ip, pc, #0, 12
   10678:	add	ip, ip, #16, 20	; 0x10000
   1067c:	ldr	pc, [ip, #2456]!	; 0x998

00010680 <puts@plt>:
   10680:	add	ip, pc, #0, 12
   10684:	add	ip, ip, #16, 20	; 0x10000
   10688:	ldr	pc, [ip, #2448]!	; 0x990

0001068c <malloc@plt>:
   1068c:	add	ip, pc, #0, 12
   10690:	add	ip, ip, #16, 20	; 0x10000
   10694:	ldr	pc, [ip, #2440]!	; 0x988

00010698 <__libc_start_main@plt>:
   10698:	add	ip, pc, #0, 12
   1069c:	add	ip, ip, #16, 20	; 0x10000
   106a0:	ldr	pc, [ip, #2432]!	; 0x980

000106a4 <__gmon_start__@plt>:
   106a4:	add	ip, pc, #0, 12
   106a8:	add	ip, ip, #16, 20	; 0x10000
   106ac:	ldr	pc, [ip, #2424]!	; 0x978

000106b0 <putchar@plt>:
   106b0:	add	ip, pc, #0, 12
   106b4:	add	ip, ip, #16, 20	; 0x10000
   106b8:	ldr	pc, [ip, #2416]!	; 0x970

000106bc <__isoc99_scanf@plt>:
   106bc:	add	ip, pc, #0, 12
   106c0:	add	ip, ip, #16, 20	; 0x10000
   106c4:	ldr	pc, [ip, #2408]!	; 0x968

000106c8 <abort@plt>:
   106c8:	add	ip, pc, #0, 12
   106cc:	add	ip, ip, #16, 20	; 0x10000
   106d0:	ldr	pc, [ip, #2400]!	; 0x960

Disassembly of section .text:

000106d4 <main@@Base>:
   106d4:	ldr	r0, [pc, #388]	; 10860 <main@@Base+0x18c>
   106d8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   106dc:	strd	r6, [sp, #8]
   106e0:	strd	r8, [sp, #16]
   106e4:	strd	sl, [sp, #24]
   106e8:	mov	fp, #0
   106ec:	add	r0, pc, r0
   106f0:	str	lr, [sp, #32]
   106f4:	sub	sp, sp, #28
   106f8:	bl	1065c <printf@plt>
   106fc:	ldr	r0, [pc, #352]	; 10864 <main@@Base+0x190>
   10700:	add	r1, sp, #20
   10704:	mov	r5, fp
   10708:	mov	r6, fp
   1070c:	mov	r7, fp
   10710:	ldr	r9, [pc, #336]	; 10868 <main@@Base+0x194>
   10714:	mov	r8, fp
   10718:	ldr	sl, [pc, #332]	; 1086c <main@@Base+0x198>
   1071c:	add	r0, pc, r0
   10720:	bl	106bc <__isoc99_scanf@plt>
   10724:	ldr	r0, [sp, #20]
   10728:	add	r9, pc, r9
   1072c:	add	sl, pc, sl
   10730:	lsl	r0, r0, #2
   10734:	bl	1068c <malloc@plt>
   10738:	mov	r4, r0
   1073c:	str	r0, [sp, #12]
   10740:	ldr	r0, [sp, #20]
   10744:	lsl	r0, r0, #2
   10748:	bl	1068c <malloc@plt>
   1074c:	str	r0, [sp, #4]
   10750:	ldr	r0, [sp, #20]
   10754:	lsl	r0, r0, #2
   10758:	bl	1068c <malloc@plt>
   1075c:	str	r0, [sp, #8]
   10760:	ldr	r3, [sp, #20]
   10764:	mov	r0, r9
   10768:	cmp	r3, fp
   1076c:	add	fp, fp, #1
   10770:	mov	r1, fp
   10774:	ble	107bc <main@@Base+0xe8>
   10778:	bl	1065c <printf@plt>
   1077c:	mov	r1, r4
   10780:	mov	r0, sl
   10784:	bl	106bc <__isoc99_scanf@plt>
   10788:	ldr	r3, [r4], #4
   1078c:	tst	r3, #1
   10790:	beq	107a8 <main@@Base+0xd4>
   10794:	ldr	r2, [sp, #8]
   10798:	add	r5, r5, #1
   1079c:	str	r3, [r2, r7]
   107a0:	lsl	r7, r5, #2
   107a4:	b	10760 <main@@Base+0x8c>
   107a8:	ldr	r2, [sp, #4]
   107ac:	add	r6, r6, #1
   107b0:	str	r3, [r2, r8]
   107b4:	lsl	r8, r6, #2
   107b8:	b	10760 <main@@Base+0x8c>
   107bc:	mov	r1, r8
   107c0:	ldr	r0, [sp, #4]
   107c4:	bl	10674 <realloc@plt>
   107c8:	mov	r8, r0
   107cc:	mov	r1, r7
   107d0:	ldr	r0, [sp, #8]
   107d4:	bl	10674 <realloc@plt>
   107d8:	mov	r4, r0
   107dc:	ldr	r0, [pc, #140]	; 10870 <main@@Base+0x19c>
   107e0:	add	r0, pc, r0
   107e4:	bl	1065c <printf@plt>
   107e8:	ldr	r7, [sp, #12]
   107ec:	ldr	r1, [sp, #20]
   107f0:	mov	r0, r7
   107f4:	bl	1096c <PrintArray@@Base>
   107f8:	ldr	r0, [pc, #116]	; 10874 <main@@Base+0x1a0>
   107fc:	add	r0, pc, r0
   10800:	bl	1065c <printf@plt>
   10804:	mov	r1, r6
   10808:	mov	r0, r8
   1080c:	bl	1096c <PrintArray@@Base>
   10810:	ldr	r0, [pc, #96]	; 10878 <main@@Base+0x1a4>
   10814:	add	r0, pc, r0
   10818:	bl	1065c <printf@plt>
   1081c:	mov	r1, r5
   10820:	mov	r0, r4
   10824:	bl	1096c <PrintArray@@Base>
   10828:	mov	r0, r7
   1082c:	bl	10668 <free@plt>
   10830:	mov	r0, r8
   10834:	bl	10668 <free@plt>
   10838:	mov	r0, r4
   1083c:	bl	10668 <free@plt>
   10840:	mov	r0, #0
   10844:	add	sp, sp, #28
   10848:	ldrd	r4, [sp]
   1084c:	ldrd	r6, [sp, #8]
   10850:	ldrd	r8, [sp, #16]
   10854:	ldrd	sl, [sp, #24]
   10858:	add	sp, sp, #32
   1085c:	pop	{pc}		; (ldr pc, [sp], #4)
   10860:	andeq	r0, r0, r8, asr r3
   10864:	andeq	r0, r0, r0, asr #6
   10868:	andeq	r0, r0, r8, lsr r3
   1086c:	andeq	r0, r0, r0, lsr r3
   10870:	muleq	r0, ip, r2
   10874:	muleq	r0, r4, r2
   10878:	andeq	r0, r0, ip, lsl #5

0001087c <_start@@Base>:
   1087c:	mov	fp, #0
   10880:	mov	lr, #0
   10884:	pop	{r1}		; (ldr r1, [sp], #4)
   10888:	mov	r2, sp
   1088c:	push	{r2}		; (str r2, [sp, #-4]!)
   10890:	push	{r0}		; (str r0, [sp, #-4]!)
   10894:	ldr	ip, [pc, #16]	; 108ac <_start@@Base+0x30>
   10898:	push	{ip}		; (str ip, [sp, #-4]!)
   1089c:	ldr	r0, [pc, #12]	; 108b0 <_start@@Base+0x34>
   108a0:	ldr	r3, [pc, #12]	; 108b4 <_start@@Base+0x38>
   108a4:	bl	10698 <__libc_start_main@plt>
   108a8:	bl	106c8 <abort@plt>
   108ac:	andeq	r0, r1, r4, lsr sl
   108b0:	ldrdeq	r0, [r1], -r4
   108b4:	ldrdeq	r0, [r1], -r4
   108b8:	ldr	r3, [pc, #20]	; 108d4 <_start@@Base+0x58>
   108bc:	ldr	r2, [pc, #20]	; 108d8 <_start@@Base+0x5c>
   108c0:	add	r3, pc, r3
   108c4:	ldr	r2, [r3, r2]
   108c8:	cmp	r2, #0
   108cc:	bxeq	lr
   108d0:	b	106a4 <__gmon_start__@plt>
   108d4:	andeq	r0, r1, r8, lsr r7
   108d8:	andeq	r0, r0, r4, lsr r0
   108dc:	ldr	r0, [pc, #24]	; 108fc <_start@@Base+0x80>
   108e0:	ldr	r3, [pc, #24]	; 10900 <_start@@Base+0x84>
   108e4:	cmp	r3, r0
   108e8:	bxeq	lr
   108ec:	ldr	r3, [pc, #16]	; 10904 <_start@@Base+0x88>
   108f0:	cmp	r3, #0
   108f4:	bxeq	lr
   108f8:	bx	r3
   108fc:	andeq	r1, r2, r0, asr #32
   10900:	andeq	r1, r2, r0, asr #32
   10904:	andeq	r0, r0, r0
   10908:	ldr	r0, [pc, #36]	; 10934 <_start@@Base+0xb8>
   1090c:	ldr	r1, [pc, #36]	; 10938 <_start@@Base+0xbc>
   10910:	sub	r1, r1, r0
   10914:	asr	r1, r1, #2
   10918:	add	r1, r1, r1, lsr #31
   1091c:	asrs	r1, r1, #1
   10920:	bxeq	lr
   10924:	ldr	r3, [pc, #16]	; 1093c <_start@@Base+0xc0>
   10928:	cmp	r3, #0
   1092c:	bxeq	lr
   10930:	bx	r3
   10934:	andeq	r1, r2, r0, asr #32
   10938:	andeq	r1, r2, r0, asr #32
   1093c:	andeq	r0, r0, r0
   10940:	push	{r4, lr}
   10944:	ldr	r4, [pc, #24]	; 10964 <_start@@Base+0xe8>
   10948:	ldrb	r3, [r4]
   1094c:	cmp	r3, #0
   10950:	popne	{r4, pc}
   10954:	bl	108dc <_start@@Base+0x60>
   10958:	mov	r3, #1
   1095c:	strb	r3, [r4]
   10960:	pop	{r4, pc}
   10964:	andeq	r1, r2, r0, asr #32
   10968:	b	10908 <_start@@Base+0x8c>

0001096c <PrintArray@@Base>:
   1096c:	strd	r4, [sp, #-16]!
   10970:	mov	r5, r1
   10974:	mov	r4, r0
   10978:	mov	r0, #91	; 0x5b
   1097c:	str	r6, [sp, #8]
   10980:	str	lr, [sp, #12]
   10984:	bl	106b0 <putchar@plt>
   10988:	cmp	r5, #0
   1098c:	ble	109b0 <PrintArray@@Base+0x44>
   10990:	ldr	r6, [pc, #52]	; 109cc <PrintArray@@Base+0x60>
   10994:	add	r5, r4, r5, lsl #2
   10998:	add	r6, pc, r6
   1099c:	ldr	r1, [r4], #4
   109a0:	mov	r0, r6
   109a4:	bl	1065c <printf@plt>
   109a8:	cmp	r4, r5
   109ac:	bne	1099c <PrintArray@@Base+0x30>
   109b0:	ldr	r0, [pc, #24]	; 109d0 <PrintArray@@Base+0x64>
   109b4:	ldrd	r4, [sp]
   109b8:	ldr	r6, [sp, #8]
   109bc:	add	r0, pc, r0
   109c0:	ldr	lr, [sp, #12]
   109c4:	add	sp, sp, #16
   109c8:	b	10680 <puts@plt>
   109cc:	andeq	r0, r0, r4, lsr #1
   109d0:	andeq	r0, r0, r4, lsl #1

000109d4 <__libc_csu_init@@Base>:
   109d4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   109d8:	mov	r7, r0
   109dc:	ldr	r6, [pc, #72]	; 10a2c <__libc_csu_init@@Base+0x58>
   109e0:	ldr	r5, [pc, #72]	; 10a30 <__libc_csu_init@@Base+0x5c>
   109e4:	add	r6, pc, r6
   109e8:	add	r5, pc, r5
   109ec:	sub	r6, r6, r5
   109f0:	mov	r8, r1
   109f4:	mov	r9, r2
   109f8:	bl	1063c <printf@plt-0x20>
   109fc:	asrs	r6, r6, #2
   10a00:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a04:	mov	r4, #0
   10a08:	add	r4, r4, #1
   10a0c:	ldr	r3, [r5], #4
   10a10:	mov	r2, r9
   10a14:	mov	r1, r8
   10a18:	mov	r0, r7
   10a1c:	blx	r3
   10a20:	cmp	r6, r4
   10a24:	bne	10a08 <__libc_csu_init@@Base+0x34>
   10a28:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10a2c:	andeq	r0, r1, r8, lsr #10
   10a30:	andeq	r0, r1, r0, lsr #10

00010a34 <__libc_csu_fini@@Base>:
   10a34:	bx	lr

Disassembly of section .fini:

00010a38 <.fini>:
   10a38:	push	{r3, lr}
   10a3c:	pop	{r3, pc}
