
../repos/prog2/MT2E1-1:     file format elf32-littlearm


Disassembly of section .init:

00010c84 <.init>:
   10c84:	push	{r3, lr}
   10c88:	bl	10f88 <_start@@Base+0x3c>
   10c8c:	pop	{r3, pc}

Disassembly of section .plt:

00010c90 <calloc@plt-0x14>:
   10c90:	push	{lr}		; (str lr, [sp, #-4]!)
   10c94:	ldr	lr, [pc, #4]	; 10ca0 <calloc@plt-0x4>
   10c98:	add	lr, pc, lr
   10c9c:	ldr	pc, [lr, #8]!
   10ca0:	andeq	r2, r1, r0, ror #6

00010ca4 <calloc@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #73728	; 0x12000
   10cac:	ldr	pc, [ip, #864]!	; 0x360

00010cb0 <strcmp@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #73728	; 0x12000
   10cb8:	ldr	pc, [ip, #856]!	; 0x358

00010cbc <printf@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #73728	; 0x12000
   10cc4:	ldr	pc, [ip, #848]!	; 0x350

00010cc8 <__isoc99_fscanf@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #73728	; 0x12000
   10cd0:	ldr	pc, [ip, #840]!	; 0x348

00010cd4 <fopen@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #73728	; 0x12000
   10cdc:	ldr	pc, [ip, #832]!	; 0x340

00010ce0 <free@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #73728	; 0x12000
   10ce8:	ldr	pc, [ip, #824]!	; 0x338

00010cec <memcpy@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #73728	; 0x12000
   10cf4:	ldr	pc, [ip, #816]!	; 0x330

00010cf8 <realloc@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #73728	; 0x12000
   10d00:	ldr	pc, [ip, #808]!	; 0x328

00010d04 <strcpy@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #73728	; 0x12000
   10d0c:	ldr	pc, [ip, #800]!	; 0x320

00010d10 <puts@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #73728	; 0x12000
   10d18:	ldr	pc, [ip, #792]!	; 0x318

00010d1c <malloc@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #73728	; 0x12000
   10d24:	ldr	pc, [ip, #784]!	; 0x310

00010d28 <__libc_start_main@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #73728	; 0x12000
   10d30:	ldr	pc, [ip, #776]!	; 0x308

00010d34 <__gmon_start__@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #73728	; 0x12000
   10d3c:	ldr	pc, [ip, #768]!	; 0x300

00010d40 <strlen@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #73728	; 0x12000
   10d48:	ldr	pc, [ip, #760]!	; 0x2f8

00010d4c <setvbuf@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #73728	; 0x12000
   10d54:	ldr	pc, [ip, #752]!	; 0x2f0

00010d58 <putchar@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #73728	; 0x12000
   10d60:	ldr	pc, [ip, #744]!	; 0x2e8

00010d64 <fclose@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #73728	; 0x12000
   10d6c:	ldr	pc, [ip, #736]!	; 0x2e0

00010d70 <abort@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #73728	; 0x12000
   10d78:	ldr	pc, [ip, #728]!	; 0x2d8

Disassembly of section .text:

00010d7c <main@@Base>:
   10d7c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   10d80:	mov	r3, #0
   10d84:	mov	r2, #2
   10d88:	ldr	r0, [pc, #392]	; 10f18 <main@@Base+0x19c>
   10d8c:	mov	r1, r3
   10d90:	str	sl, [sp, #24]
   10d94:	ldr	sl, [pc, #384]	; 10f1c <main@@Base+0x1a0>
   10d98:	strd	r6, [sp, #8]
   10d9c:	strd	r8, [sp, #16]
   10da0:	str	lr, [sp, #28]
   10da4:	sub	sp, sp, #504	; 0x1f8
   10da8:	ldr	r5, [pc, #368]	; 10f20 <main@@Base+0x1a4>
   10dac:	add	r4, sp, #4
   10db0:	add	sl, pc, sl
   10db4:	ldr	r0, [sl, r0]
   10db8:	ldr	r6, [pc, #356]	; 10f24 <main@@Base+0x1a8>
   10dbc:	add	r5, pc, r5
   10dc0:	ldr	r0, [r0]
   10dc4:	bl	10d4c <setvbuf@plt>
   10dc8:	ldr	r0, [pc, #344]	; 10f28 <main@@Base+0x1ac>
   10dcc:	mov	r1, r5
   10dd0:	add	r6, pc, r6
   10dd4:	add	r0, pc, r0
   10dd8:	bl	10cd4 <fopen@plt>
   10ddc:	mov	r8, r0
   10de0:	ldr	r0, [pc, #324]	; 10f2c <main@@Base+0x1b0>
   10de4:	mov	r1, r5
   10de8:	add	r0, pc, r0
   10dec:	bl	10cd4 <fopen@plt>
   10df0:	mov	r7, r0
   10df4:	ldr	r0, [pc, #308]	; 10f30 <main@@Base+0x1b4>
   10df8:	add	r0, pc, r0
   10dfc:	bl	10d10 <puts@plt>
   10e00:	bl	11128 <avl_nova@@Base>
   10e04:	mov	r5, r0
   10e08:	b	10e10 <main@@Base+0x94>
   10e0c:	bl	114c8 <avl_insere@@Base>
   10e10:	mov	r1, r6
   10e14:	mov	r2, r4
   10e18:	mov	r0, r8
   10e1c:	bl	10cc8 <__isoc99_fscanf@plt>
   10e20:	cmp	r0, #1
   10e24:	mov	r1, r4
   10e28:	mov	r0, r5
   10e2c:	beq	10e0c <main@@Base+0x90>
   10e30:	ldr	r0, [pc, #252]	; 10f34 <main@@Base+0x1b8>
   10e34:	ldr	r9, [pc, #252]	; 10f38 <main@@Base+0x1bc>
   10e38:	add	r0, pc, r0
   10e3c:	bl	10cbc <printf@plt>
   10e40:	mov	r0, r5
   10e44:	add	r9, pc, r9
   10e48:	bl	11880 <avl_imprime@@Base>
   10e4c:	ldr	r0, [pc, #232]	; 10f3c <main@@Base+0x1c0>
   10e50:	add	r0, pc, r0
   10e54:	bl	10cbc <printf@plt>
   10e58:	ldr	r1, [pc, #224]	; 10f40 <main@@Base+0x1c4>
   10e5c:	mov	r0, r5
   10e60:	add	r1, pc, r1
   10e64:	bl	1103c <avl_max_subarvore@@Base>
   10e68:	mov	r0, r5
   10e6c:	bl	11784 <avl_apaga@@Base>
   10e70:	ldr	r0, [pc, #204]	; 10f44 <main@@Base+0x1c8>
   10e74:	add	r0, pc, r0
   10e78:	bl	10d10 <puts@plt>
   10e7c:	ldr	r3, [pc, #196]	; 10f48 <main@@Base+0x1cc>
   10e80:	movw	r0, #601	; 0x259
   10e84:	ldr	r1, [sl, r3]
   10e88:	bl	118ac <tabela_nova@@Base>
   10e8c:	mov	r5, r0
   10e90:	b	10e98 <main@@Base+0x11c>
   10e94:	bl	119c8 <tabela_adiciona@@Base>
   10e98:	mov	r2, r4
   10e9c:	mov	r1, r6
   10ea0:	mov	r0, r7
   10ea4:	bl	10cc8 <__isoc99_fscanf@plt>
   10ea8:	cmp	r0, #1
   10eac:	mov	r2, r9
   10eb0:	mov	r1, r4
   10eb4:	mov	r0, r5
   10eb8:	beq	10e94 <main@@Base+0x118>
   10ebc:	bl	11e68 <mostraTabela@@Base>
   10ec0:	movw	r1, #619	; 0x26b
   10ec4:	mov	r0, r5
   10ec8:	bl	1109c <tabela_copia@@Base>
   10ecc:	subs	r4, r0, #0
   10ed0:	beq	10ed8 <main@@Base+0x15c>
   10ed4:	bl	11e68 <mostraTabela@@Base>
   10ed8:	mov	r0, r5
   10edc:	bl	11938 <tabela_apaga@@Base>
   10ee0:	mov	r0, r4
   10ee4:	bl	11938 <tabela_apaga@@Base>
   10ee8:	mov	r0, r8
   10eec:	bl	10d64 <fclose@plt>
   10ef0:	mov	r0, r7
   10ef4:	bl	10d64 <fclose@plt>
   10ef8:	mov	r0, #0
   10efc:	add	sp, sp, #504	; 0x1f8
   10f00:	ldrd	r4, [sp]
   10f04:	ldrd	r6, [sp, #8]
   10f08:	ldrd	r8, [sp, #16]
   10f0c:	ldr	sl, [sp, #24]
   10f10:	add	sp, sp, #28
   10f14:	pop	{pc}		; (ldr pc, [sp], #4)
   10f18:	andeq	r0, r0, ip, asr r0
   10f1c:	andeq	r2, r1, r8, asr #4
   10f20:	strdeq	r1, [r0], -r8
   10f24:	andeq	r1, r0, r0, ror #3
   10f28:	andeq	r1, r0, r4, ror #3
   10f2c:	ldrdeq	r1, [r0], -ip
   10f30:	ldrdeq	r1, [r0], -r8
   10f34:	andeq	r1, r0, ip, lsr #3
   10f38:	muleq	r0, ip, r1
   10f3c:	andeq	r1, r0, r8, lsr #3
   10f40:			; <UNDEFINED> instruction: 0x000011b0
   10f44:	andeq	r1, r0, r0, lsr #3
   10f48:	andeq	r0, r0, r4, asr r0

00010f4c <_start@@Base>:
   10f4c:	mov	fp, #0
   10f50:	mov	lr, #0
   10f54:	pop	{r1}		; (ldr r1, [sp], #4)
   10f58:	mov	r2, sp
   10f5c:	push	{r2}		; (str r2, [sp, #-4]!)
   10f60:	push	{r0}		; (str r0, [sp, #-4]!)
   10f64:	ldr	ip, [pc, #16]	; 10f7c <_start@@Base+0x30>
   10f68:	push	{ip}		; (str ip, [sp, #-4]!)
   10f6c:	ldr	r0, [pc, #12]	; 10f80 <_start@@Base+0x34>
   10f70:	ldr	r3, [pc, #12]	; 10f84 <_start@@Base+0x38>
   10f74:	bl	10d28 <__libc_start_main@plt>
   10f78:	bl	10d70 <abort@plt>
   10f7c:	andeq	r1, r1, r8, lsr #31
   10f80:	andeq	r0, r1, ip, ror sp
   10f84:	andeq	r1, r1, r8, asr #30
   10f88:	ldr	r3, [pc, #20]	; 10fa4 <_start@@Base+0x58>
   10f8c:	ldr	r2, [pc, #20]	; 10fa8 <_start@@Base+0x5c>
   10f90:	add	r3, pc, r3
   10f94:	ldr	r2, [r3, r2]
   10f98:	cmp	r2, #0
   10f9c:	bxeq	lr
   10fa0:	b	10d34 <__gmon_start__@plt>
   10fa4:	andeq	r2, r1, r8, rrx
   10fa8:	andeq	r0, r0, r8, asr r0
   10fac:	ldr	r0, [pc, #24]	; 10fcc <_start@@Base+0x80>
   10fb0:	ldr	r3, [pc, #24]	; 10fd0 <_start@@Base+0x84>
   10fb4:	cmp	r3, r0
   10fb8:	bxeq	lr
   10fbc:	ldr	r3, [pc, #16]	; 10fd4 <_start@@Base+0x88>
   10fc0:	cmp	r3, #0
   10fc4:	bxeq	lr
   10fc8:	bx	r3
   10fcc:	andeq	r3, r2, r8, rrx
   10fd0:	andeq	r3, r2, r8, rrx
   10fd4:	andeq	r0, r0, r0
   10fd8:	ldr	r0, [pc, #36]	; 11004 <_start@@Base+0xb8>
   10fdc:	ldr	r1, [pc, #36]	; 11008 <_start@@Base+0xbc>
   10fe0:	sub	r1, r1, r0
   10fe4:	asr	r1, r1, #2
   10fe8:	add	r1, r1, r1, lsr #31
   10fec:	asrs	r1, r1, #1
   10ff0:	bxeq	lr
   10ff4:	ldr	r3, [pc, #16]	; 1100c <_start@@Base+0xc0>
   10ff8:	cmp	r3, #0
   10ffc:	bxeq	lr
   11000:	bx	r3
   11004:	andeq	r3, r2, r8, rrx
   11008:	andeq	r3, r2, r8, rrx
   1100c:	andeq	r0, r0, r0
   11010:	push	{r4, lr}
   11014:	ldr	r4, [pc, #24]	; 11034 <_start@@Base+0xe8>
   11018:	ldrb	r3, [r4]
   1101c:	cmp	r3, #0
   11020:	popne	{r4, pc}
   11024:	bl	10fac <_start@@Base+0x60>
   11028:	mov	r3, #1
   1102c:	strb	r3, [r4]
   11030:	pop	{r4, pc}
   11034:	andeq	r3, r2, r8, rrx
   11038:	b	10fd8 <_start@@Base+0x8c>

0001103c <avl_max_subarvore@@Base>:
   1103c:	strd	r4, [sp, #-16]!
   11040:	mov	r5, r0
   11044:	str	r6, [sp, #8]
   11048:	mov	r6, r1
   1104c:	str	lr, [sp, #12]
   11050:	bl	11128 <avl_nova@@Base>
   11054:	mov	r4, r0
   11058:	mov	r1, r6
   1105c:	mov	r0, r5
   11060:	bl	11378 <avl_pesquisa@@Base>
   11064:	str	r0, [r4]
   11068:	mov	r0, r4
   1106c:	bl	11574 <avl_max@@Base>
   11070:	mov	r1, r0
   11074:	ldr	r0, [pc, #28]	; 11098 <avl_max_subarvore@@Base+0x5c>
   11078:	add	r0, pc, r0
   1107c:	bl	10cbc <printf@plt>
   11080:	mov	r0, r4
   11084:	ldrd	r4, [sp]
   11088:	ldr	r6, [sp, #8]
   1108c:	ldr	lr, [sp, #12]
   11090:	add	sp, sp, #16
   11094:	b	10ce0 <free@plt>
   11098:	andeq	r0, r0, r8, lsr pc

0001109c <tabela_copia@@Base>:
   1109c:	strd	r4, [sp, #-20]!	; 0xffffffec
   110a0:	mov	r4, r0
   110a4:	mov	r0, r1
   110a8:	ldr	r1, [r4]
   110ac:	strd	r6, [sp, #8]
   110b0:	str	lr, [sp, #16]
   110b4:	sub	sp, sp, #12
   110b8:	bl	118ac <tabela_nova@@Base>
   110bc:	mov	r6, r0
   110c0:	add	r1, sp, #4
   110c4:	mov	r0, r4
   110c8:	bl	11d48 <tabela_elementos@@Base>
   110cc:	ldr	r3, [sp, #4]
   110d0:	mov	r7, r0
   110d4:	cmp	r3, #0
   110d8:	ble	11108 <tabela_copia@@Base+0x6c>
   110dc:	mov	r4, r0
   110e0:	mov	r5, #0
   110e4:	add	r2, r4, #50	; 0x32
   110e8:	mov	r1, r4
   110ec:	mov	r0, r6
   110f0:	add	r5, r5, #1
   110f4:	bl	119c8 <tabela_adiciona@@Base>
   110f8:	ldr	r3, [sp, #4]
   110fc:	add	r4, r4, #150	; 0x96
   11100:	cmp	r3, r5
   11104:	bgt	110e4 <tabela_copia@@Base+0x48>
   11108:	mov	r0, r7
   1110c:	bl	10ce0 <free@plt>
   11110:	mov	r0, r6
   11114:	add	sp, sp, #12
   11118:	ldrd	r4, [sp]
   1111c:	ldrd	r6, [sp, #8]
   11120:	add	sp, sp, #16
   11124:	pop	{pc}		; (ldr pc, [sp], #4)

00011128 <avl_nova@@Base>:
   11128:	mov	r0, #4
   1112c:	str	r4, [sp, #-8]!
   11130:	str	lr, [sp, #4]
   11134:	bl	10d1c <malloc@plt>
   11138:	cmp	r0, #0
   1113c:	ldr	r4, [sp]
   11140:	add	sp, sp, #4
   11144:	movne	r3, #0
   11148:	strne	r3, [r0]
   1114c:	pop	{pc}		; (ldr pc, [sp], #4)

00011150 <avl_altura@@Base>:
   11150:	cmp	r0, #0
   11154:	ldrne	r0, [r0, #12]
   11158:	mvneq	r0, #0
   1115c:	bx	lr

00011160 <max@@Base>:
   11160:	cmp	r1, r0
   11164:	movge	r0, r1
   11168:	bx	lr

0001116c <avl_novo_no@@Base>:
   1116c:	strd	r4, [sp, #-16]!
   11170:	mov	r5, r0
   11174:	mov	r0, #16
   11178:	str	r6, [sp, #8]
   1117c:	str	lr, [sp, #12]
   11180:	bl	10d1c <malloc@plt>
   11184:	mov	r4, r0
   11188:	mov	r0, r5
   1118c:	bl	10d40 <strlen@plt>
   11190:	add	r6, r0, #1
   11194:	mov	r0, r6
   11198:	bl	10d1c <malloc@plt>
   1119c:	mov	r2, r6
   111a0:	mov	r1, r5
   111a4:	str	r0, [r4]
   111a8:	bl	10cec <memcpy@plt>
   111ac:	mov	r3, #0
   111b0:	mov	r0, r4
   111b4:	ldr	r6, [sp, #8]
   111b8:	str	r3, [r4, #4]
   111bc:	str	r3, [r4, #8]
   111c0:	str	r3, [r4, #12]
   111c4:	ldrd	r4, [sp]
   111c8:	add	sp, sp, #12
   111cc:	pop	{pc}		; (ldr pc, [sp], #4)

000111d0 <roda_direita@@Base>:
   111d0:	strd	r4, [sp, #-16]!
   111d4:	mov	r5, r0
   111d8:	ldr	r4, [r0, #4]
   111dc:	ldr	r3, [r4, #8]
   111e0:	str	r6, [sp, #8]
   111e4:	str	lr, [sp, #12]
   111e8:	str	r5, [r4, #8]
   111ec:	mov	r0, r3
   111f0:	str	r3, [r5, #4]
   111f4:	bl	11150 <avl_altura@@Base>
   111f8:	mov	r6, r0
   111fc:	ldr	r0, [r5, #8]
   11200:	bl	11150 <avl_altura@@Base>
   11204:	mov	r1, r0
   11208:	mov	r0, r6
   1120c:	bl	11160 <max@@Base>
   11210:	add	r3, r0, #1
   11214:	ldr	r0, [r4, #4]
   11218:	str	r3, [r5, #12]
   1121c:	bl	11150 <avl_altura@@Base>
   11220:	mov	r5, r0
   11224:	ldr	r0, [r4, #8]
   11228:	bl	11150 <avl_altura@@Base>
   1122c:	mov	r1, r0
   11230:	mov	r0, r5
   11234:	bl	11160 <max@@Base>
   11238:	add	r3, r0, #1
   1123c:	mov	r0, r4
   11240:	ldr	r6, [sp, #8]
   11244:	str	r3, [r4, #12]
   11248:	ldrd	r4, [sp]
   1124c:	add	sp, sp, #12
   11250:	pop	{pc}		; (ldr pc, [sp], #4)

00011254 <roda_esquerda@@Base>:
   11254:	strd	r4, [sp, #-16]!
   11258:	mov	r5, r0
   1125c:	ldr	r4, [r0, #8]
   11260:	ldr	r3, [r4, #4]
   11264:	str	r6, [sp, #8]
   11268:	str	lr, [sp, #12]
   1126c:	str	r0, [r4, #4]
   11270:	str	r3, [r0, #8]
   11274:	ldr	r0, [r0, #4]
   11278:	bl	11150 <avl_altura@@Base>
   1127c:	mov	r6, r0
   11280:	ldr	r0, [r5, #8]
   11284:	bl	11150 <avl_altura@@Base>
   11288:	mov	r1, r0
   1128c:	mov	r0, r6
   11290:	bl	11160 <max@@Base>
   11294:	add	r3, r0, #1
   11298:	ldr	r0, [r4, #4]
   1129c:	str	r3, [r5, #12]
   112a0:	bl	11150 <avl_altura@@Base>
   112a4:	mov	r5, r0
   112a8:	ldr	r0, [r4, #8]
   112ac:	bl	11150 <avl_altura@@Base>
   112b0:	mov	r1, r0
   112b4:	mov	r0, r5
   112b8:	bl	11160 <max@@Base>
   112bc:	add	r3, r0, #1
   112c0:	mov	r0, r4
   112c4:	ldr	r6, [sp, #8]
   112c8:	str	r3, [r4, #12]
   112cc:	ldrd	r4, [sp]
   112d0:	add	sp, sp, #12
   112d4:	pop	{pc}		; (ldr pc, [sp], #4)

000112d8 <calc_balanceamento@@Base>:
   112d8:	strd	r4, [sp, #-16]!
   112dc:	subs	r4, r0, #0
   112e0:	moveq	r0, r4
   112e4:	str	r6, [sp, #8]
   112e8:	str	lr, [sp, #12]
   112ec:	beq	11308 <calc_balanceamento@@Base+0x30>
   112f0:	ldr	r0, [r4, #8]
   112f4:	bl	11150 <avl_altura@@Base>
   112f8:	mov	r5, r0
   112fc:	ldr	r0, [r4, #4]
   11300:	bl	11150 <avl_altura@@Base>
   11304:	sub	r0, r5, r0
   11308:	ldrd	r4, [sp]
   1130c:	ldr	r6, [sp, #8]
   11310:	add	sp, sp, #12
   11314:	pop	{pc}		; (ldr pc, [sp], #4)

00011318 <avl_pesquisa_impl@@Base>:
   11318:	strd	r4, [sp, #-16]!
   1131c:	subs	r4, r0, #0
   11320:	movne	r5, r1
   11324:	str	r6, [sp, #8]
   11328:	str	lr, [sp, #12]
   1132c:	bne	11344 <avl_pesquisa_impl@@Base+0x2c>
   11330:	b	11364 <avl_pesquisa_impl@@Base+0x4c>
   11334:	beq	11364 <avl_pesquisa_impl@@Base+0x4c>
   11338:	ldr	r4, [r4, #8]
   1133c:	cmp	r4, #0
   11340:	beq	11364 <avl_pesquisa_impl@@Base+0x4c>
   11344:	mov	r0, r5
   11348:	ldr	r1, [r4]
   1134c:	bl	10cb0 <strcmp@plt>
   11350:	cmp	r0, #0
   11354:	bge	11334 <avl_pesquisa_impl@@Base+0x1c>
   11358:	ldr	r4, [r4, #4]
   1135c:	cmp	r4, #0
   11360:	bne	11344 <avl_pesquisa_impl@@Base+0x2c>
   11364:	mov	r0, r4
   11368:	ldrd	r4, [sp]
   1136c:	ldr	r6, [sp, #8]
   11370:	add	sp, sp, #12
   11374:	pop	{pc}		; (ldr pc, [sp], #4)

00011378 <avl_pesquisa@@Base>:
   11378:	cmp	r1, #0
   1137c:	cmpne	r0, #0
   11380:	beq	1138c <avl_pesquisa@@Base+0x14>
   11384:	ldr	r0, [r0]
   11388:	b	11318 <avl_pesquisa_impl@@Base>
   1138c:	mov	r0, #0
   11390:	bx	lr

00011394 <avl_insere_impl@@Base>:
   11394:	strd	r4, [sp, #-16]!
   11398:	subs	r4, r0, #0
   1139c:	str	r6, [sp, #8]
   113a0:	str	lr, [sp, #12]
   113a4:	beq	114b0 <avl_insere_impl@@Base+0x11c>
   113a8:	mov	r0, r1
   113ac:	mov	r5, r1
   113b0:	ldr	r1, [r4]
   113b4:	bl	10cb0 <strcmp@plt>
   113b8:	cmp	r0, #0
   113bc:	blt	11454 <avl_insere_impl@@Base+0xc0>
   113c0:	beq	11418 <avl_insere_impl@@Base+0x84>
   113c4:	mov	r1, r5
   113c8:	ldr	r0, [r4, #8]
   113cc:	bl	11394 <avl_insere_impl@@Base>
   113d0:	ldr	r3, [r4, #4]
   113d4:	str	r0, [r4, #8]
   113d8:	mov	r0, r3
   113dc:	bl	11150 <avl_altura@@Base>
   113e0:	mov	r5, r0
   113e4:	ldr	r0, [r4, #8]
   113e8:	bl	11150 <avl_altura@@Base>
   113ec:	mov	r1, r0
   113f0:	mov	r0, r5
   113f4:	bl	11160 <max@@Base>
   113f8:	add	r3, r0, #1
   113fc:	mov	r0, r4
   11400:	str	r3, [r4, #12]
   11404:	bl	112d8 <calc_balanceamento@@Base>
   11408:	cmp	r0, #1
   1140c:	bgt	1142c <avl_insere_impl@@Base+0x98>
   11410:	cmn	r0, #1
   11414:	blt	1147c <avl_insere_impl@@Base+0xe8>
   11418:	mov	r0, r4
   1141c:	ldrd	r4, [sp]
   11420:	ldr	r6, [sp, #8]
   11424:	add	sp, sp, #12
   11428:	pop	{pc}		; (ldr pc, [sp], #4)
   1142c:	ldr	r0, [r4, #8]
   11430:	bl	112d8 <calc_balanceamento@@Base>
   11434:	cmp	r0, #0
   11438:	blt	1146c <avl_insere_impl@@Base+0xd8>
   1143c:	mov	r0, r4
   11440:	ldrd	r4, [sp]
   11444:	ldr	r6, [sp, #8]
   11448:	ldr	lr, [sp, #12]
   1144c:	add	sp, sp, #16
   11450:	b	11254 <roda_esquerda@@Base>
   11454:	mov	r1, r5
   11458:	ldr	r0, [r4, #4]
   1145c:	bl	11394 <avl_insere_impl@@Base>
   11460:	mov	r3, r0
   11464:	str	r0, [r4, #4]
   11468:	b	113d8 <avl_insere_impl@@Base+0x44>
   1146c:	ldr	r0, [r4, #8]
   11470:	bl	111d0 <roda_direita@@Base>
   11474:	str	r0, [r4, #8]
   11478:	b	1143c <avl_insere_impl@@Base+0xa8>
   1147c:	ldr	r0, [r4, #4]
   11480:	bl	112d8 <calc_balanceamento@@Base>
   11484:	cmp	r0, #0
   11488:	ble	11498 <avl_insere_impl@@Base+0x104>
   1148c:	ldr	r0, [r4, #4]
   11490:	bl	11254 <roda_esquerda@@Base>
   11494:	str	r0, [r4, #4]
   11498:	mov	r0, r4
   1149c:	ldrd	r4, [sp]
   114a0:	ldr	r6, [sp, #8]
   114a4:	ldr	lr, [sp, #12]
   114a8:	add	sp, sp, #16
   114ac:	b	111d0 <roda_direita@@Base>
   114b0:	mov	r0, r1
   114b4:	ldrd	r4, [sp]
   114b8:	ldr	r6, [sp, #8]
   114bc:	ldr	lr, [sp, #12]
   114c0:	add	sp, sp, #16
   114c4:	b	1116c <avl_novo_no@@Base>

000114c8 <avl_insere@@Base>:
   114c8:	clz	r3, r1
   114cc:	cmp	r0, #0
   114d0:	strd	r4, [sp, #-16]!
   114d4:	lsr	r3, r3, #5
   114d8:	moveq	r4, #1
   114dc:	str	r6, [sp, #8]
   114e0:	str	lr, [sp, #12]
   114e4:	movne	r4, r3
   114e8:	cmp	r4, #0
   114ec:	bne	11514 <avl_insere@@Base+0x4c>
   114f0:	mov	r5, r0
   114f4:	ldr	r0, [r0]
   114f8:	bl	11394 <avl_insere_impl@@Base>
   114fc:	str	r0, [r5]
   11500:	mov	r0, r4
   11504:	ldrd	r4, [sp]
   11508:	ldr	r6, [sp, #8]
   1150c:	add	sp, sp, #12
   11510:	pop	{pc}		; (ldr pc, [sp], #4)
   11514:	mvn	r4, #0
   11518:	b	11500 <avl_insere@@Base+0x38>

0001151c <avl_no_valormin@@Base>:
   1151c:	b	11524 <avl_no_valormin@@Base+0x8>
   11520:	mov	r0, r3
   11524:	ldr	r3, [r0, #4]
   11528:	cmp	r3, #0
   1152c:	bne	11520 <avl_no_valormin@@Base+0x4>
   11530:	bx	lr

00011534 <avl_min@@Base>:
   11534:	cmp	r0, #0
   11538:	bxeq	lr
   1153c:	str	r4, [sp, #-8]!
   11540:	ldr	r0, [r0]
   11544:	str	lr, [sp, #4]
   11548:	bl	1151c <avl_no_valormin@@Base>
   1154c:	ldr	r4, [sp]
   11550:	add	sp, sp, #4
   11554:	ldr	r0, [r0]
   11558:	pop	{pc}		; (ldr pc, [sp], #4)

0001155c <avl_no_valormax@@Base>:
   1155c:	b	11564 <avl_no_valormax@@Base+0x8>
   11560:	mov	r0, r3
   11564:	ldr	r3, [r0, #8]
   11568:	cmp	r3, #0
   1156c:	bne	11560 <avl_no_valormax@@Base+0x4>
   11570:	bx	lr

00011574 <avl_max@@Base>:
   11574:	cmp	r0, #0
   11578:	bxeq	lr
   1157c:	str	r4, [sp, #-8]!
   11580:	ldr	r0, [r0]
   11584:	str	lr, [sp, #4]
   11588:	bl	1155c <avl_no_valormax@@Base>
   1158c:	ldr	r4, [sp]
   11590:	add	sp, sp, #4
   11594:	ldr	r0, [r0]
   11598:	pop	{pc}		; (ldr pc, [sp], #4)

0001159c <avl_remove_impl@@Base>:
   1159c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   115a0:	subs	r4, r0, #0
   115a4:	strd	r6, [sp, #8]
   115a8:	str	r8, [sp, #16]
   115ac:	str	lr, [sp, #20]
   115b0:	beq	11680 <avl_remove_impl@@Base+0xe4>
   115b4:	ldr	r7, [r4]
   115b8:	mov	r0, r1
   115bc:	mov	r6, r1
   115c0:	mov	r1, r7
   115c4:	bl	10cb0 <strcmp@plt>
   115c8:	cmp	r0, #0
   115cc:	blt	116c8 <avl_remove_impl@@Base+0x12c>
   115d0:	ldr	r5, [r4, #8]
   115d4:	bne	11630 <avl_remove_impl@@Base+0x94>
   115d8:	ldr	r6, [r4, #4]
   115dc:	cmp	r6, #0
   115e0:	beq	11730 <avl_remove_impl@@Base+0x194>
   115e4:	cmp	r5, #0
   115e8:	beq	116f0 <avl_remove_impl@@Base+0x154>
   115ec:	mov	r0, r5
   115f0:	bl	1151c <avl_no_valormin@@Base>
   115f4:	mov	r5, r0
   115f8:	ldr	r0, [r0]
   115fc:	bl	10d40 <strlen@plt>
   11600:	add	r1, r0, #1
   11604:	ldr	r0, [r4]
   11608:	bl	10cf8 <realloc@plt>
   1160c:	str	r0, [r4]
   11610:	ldr	r1, [r5]
   11614:	bl	10d04 <strcpy@plt>
   11618:	ldr	r1, [r5]
   1161c:	ldr	r0, [r4, #8]
   11620:	bl	1159c <avl_remove_impl@@Base>
   11624:	str	r0, [r4, #8]
   11628:	ldr	r0, [r4, #4]
   1162c:	b	11644 <avl_remove_impl@@Base+0xa8>
   11630:	mov	r1, r6
   11634:	mov	r0, r5
   11638:	bl	1159c <avl_remove_impl@@Base>
   1163c:	str	r0, [r4, #8]
   11640:	ldr	r0, [r4, #4]
   11644:	bl	11150 <avl_altura@@Base>
   11648:	mov	r5, r0
   1164c:	ldr	r0, [r4, #8]
   11650:	bl	11150 <avl_altura@@Base>
   11654:	mov	r1, r0
   11658:	mov	r0, r5
   1165c:	bl	11160 <max@@Base>
   11660:	add	r3, r0, #1
   11664:	mov	r0, r4
   11668:	str	r3, [r4, #12]
   1166c:	bl	112d8 <calc_balanceamento@@Base>
   11670:	cmp	r0, #1
   11674:	bgt	1169c <avl_remove_impl@@Base+0x100>
   11678:	cmn	r0, #1
   1167c:	blt	1174c <avl_remove_impl@@Base+0x1b0>
   11680:	mov	r5, r4
   11684:	mov	r0, r5
   11688:	ldrd	r4, [sp]
   1168c:	ldrd	r6, [sp, #8]
   11690:	ldr	r8, [sp, #16]
   11694:	add	sp, sp, #20
   11698:	pop	{pc}		; (ldr pc, [sp], #4)
   1169c:	ldr	r0, [r4, #8]
   116a0:	bl	112d8 <calc_balanceamento@@Base>
   116a4:	cmp	r0, #0
   116a8:	blt	116dc <avl_remove_impl@@Base+0x140>
   116ac:	mov	r0, r4
   116b0:	ldrd	r4, [sp]
   116b4:	ldrd	r6, [sp, #8]
   116b8:	ldr	r8, [sp, #16]
   116bc:	ldr	lr, [sp, #20]
   116c0:	add	sp, sp, #24
   116c4:	b	11254 <roda_esquerda@@Base>
   116c8:	mov	r1, r6
   116cc:	ldr	r0, [r4, #4]
   116d0:	bl	1159c <avl_remove_impl@@Base>
   116d4:	str	r0, [r4, #4]
   116d8:	b	11644 <avl_remove_impl@@Base+0xa8>
   116dc:	ldr	r0, [r4, #8]
   116e0:	bl	111d0 <roda_direita@@Base>
   116e4:	str	r0, [r4, #8]
   116e8:	b	116ac <avl_remove_impl@@Base+0x110>
   116ec:	mov	r6, r5
   116f0:	ldr	r0, [r6]
   116f4:	bl	10d40 <strlen@plt>
   116f8:	add	r1, r0, #1
   116fc:	mov	r0, r7
   11700:	bl	10cf8 <realloc@plt>
   11704:	str	r0, [r4]
   11708:	ldr	r1, [r6]
   1170c:	bl	10d04 <strcpy@plt>
   11710:	ldrd	r0, [r6]
   11714:	ldrd	r2, [r6, #8]
   11718:	stmib	r4, {r1, r2, r3}
   1171c:	bl	10ce0 <free@plt>
   11720:	mov	r0, r6
   11724:	bl	10ce0 <free@plt>
   11728:	ldr	r0, [r4, #4]
   1172c:	b	11644 <avl_remove_impl@@Base+0xa8>
   11730:	cmp	r5, #0
   11734:	bne	116ec <avl_remove_impl@@Base+0x150>
   11738:	mov	r0, r7
   1173c:	bl	10ce0 <free@plt>
   11740:	mov	r0, r4
   11744:	bl	10ce0 <free@plt>
   11748:	b	11684 <avl_remove_impl@@Base+0xe8>
   1174c:	ldr	r0, [r4, #4]
   11750:	bl	112d8 <calc_balanceamento@@Base>
   11754:	cmp	r0, #0
   11758:	ble	11768 <avl_remove_impl@@Base+0x1cc>
   1175c:	ldr	r0, [r4, #4]
   11760:	bl	11254 <roda_esquerda@@Base>
   11764:	str	r0, [r4, #4]
   11768:	mov	r0, r4
   1176c:	ldrd	r4, [sp]
   11770:	ldrd	r6, [sp, #8]
   11774:	ldr	r8, [sp, #16]
   11778:	ldr	lr, [sp, #20]
   1177c:	add	sp, sp, #24
   11780:	b	111d0 <roda_direita@@Base>

00011784 <avl_apaga@@Base>:
   11784:	str	r4, [sp, #-8]!
   11788:	subs	r4, r0, #0
   1178c:	str	lr, [sp, #4]
   11790:	beq	117d0 <avl_apaga@@Base+0x4c>
   11794:	ldr	r3, [r4]
   11798:	cmp	r3, #0
   1179c:	beq	117bc <avl_apaga@@Base+0x38>
   117a0:	mov	r0, r3
   117a4:	ldr	r1, [r3]
   117a8:	bl	1159c <avl_remove_impl@@Base>
   117ac:	cmp	r0, #0
   117b0:	mov	r3, r0
   117b4:	str	r0, [r4]
   117b8:	bne	117a0 <avl_apaga@@Base+0x1c>
   117bc:	mov	r0, r4
   117c0:	ldr	r4, [sp]
   117c4:	ldr	lr, [sp, #4]
   117c8:	add	sp, sp, #8
   117cc:	b	10ce0 <free@plt>
   117d0:	ldr	r4, [sp]
   117d4:	add	sp, sp, #4
   117d8:	pop	{pc}		; (ldr pc, [sp], #4)

000117dc <avl_remove@@Base>:
   117dc:	clz	r3, r1
   117e0:	cmp	r0, #0
   117e4:	strd	r4, [sp, #-16]!
   117e8:	lsr	r3, r3, #5
   117ec:	moveq	r4, #1
   117f0:	str	r6, [sp, #8]
   117f4:	str	lr, [sp, #12]
   117f8:	movne	r4, r3
   117fc:	cmp	r4, #0
   11800:	bne	11828 <avl_remove@@Base+0x4c>
   11804:	mov	r5, r0
   11808:	ldr	r0, [r0]
   1180c:	bl	1159c <avl_remove_impl@@Base>
   11810:	str	r0, [r5]
   11814:	mov	r0, r4
   11818:	ldrd	r4, [sp]
   1181c:	ldr	r6, [sp, #8]
   11820:	add	sp, sp, #12
   11824:	pop	{pc}		; (ldr pc, [sp], #4)
   11828:	mvn	r4, #0
   1182c:	b	11814 <avl_remove@@Base+0x38>

00011830 <avl_preordem_impl@@Base>:
   11830:	strd	r4, [sp, #-16]!
   11834:	subs	r4, r0, #0
   11838:	str	r6, [sp, #8]
   1183c:	str	lr, [sp, #12]
   11840:	beq	1186c <avl_preordem_impl@@Base+0x3c>
   11844:	ldr	r5, [pc, #48]	; 1187c <avl_preordem_impl@@Base+0x4c>
   11848:	add	r5, pc, r5
   1184c:	mov	r0, r5
   11850:	ldr	r1, [r4]
   11854:	bl	10cbc <printf@plt>
   11858:	ldr	r0, [r4, #4]
   1185c:	bl	11830 <avl_preordem_impl@@Base>
   11860:	ldr	r4, [r4, #8]
   11864:	cmp	r4, #0
   11868:	bne	1184c <avl_preordem_impl@@Base+0x1c>
   1186c:	ldrd	r4, [sp]
   11870:	ldr	r6, [sp, #8]
   11874:	add	sp, sp, #12
   11878:	pop	{pc}		; (ldr pc, [sp], #4)
   1187c:	andeq	r0, r0, r0, ror #15

00011880 <avl_imprime@@Base>:
   11880:	cmp	r0, #0
   11884:	bxeq	lr
   11888:	str	r4, [sp, #-8]!
   1188c:	ldr	r0, [r0]
   11890:	str	lr, [sp, #4]
   11894:	bl	11830 <avl_preordem_impl@@Base>
   11898:	mov	r0, #10
   1189c:	ldr	r4, [sp]
   118a0:	ldr	lr, [sp, #4]
   118a4:	add	sp, sp, #8
   118a8:	b	10d58 <putchar@plt>

000118ac <tabela_nova@@Base>:
   118ac:	strd	r4, [sp, #-16]!
   118b0:	str	r6, [sp, #8]
   118b4:	subs	r6, r0, #0
   118b8:	movle	r3, #1
   118bc:	movgt	r3, #0
   118c0:	str	lr, [sp, #12]
   118c4:	cmp	r1, #0
   118c8:	moveq	r3, #1
   118cc:	cmp	r3, #0
   118d0:	bne	11920 <tabela_nova@@Base+0x74>
   118d4:	mov	r0, #12
   118d8:	mov	r4, r1
   118dc:	bl	10d1c <malloc@plt>
   118e0:	subs	r5, r0, #0
   118e4:	beq	11920 <tabela_nova@@Base+0x74>
   118e8:	mov	r1, #4
   118ec:	mov	r0, r6
   118f0:	bl	10ca4 <calloc@plt>
   118f4:	cmp	r0, #0
   118f8:	mov	r3, r0
   118fc:	str	r0, [r5, #4]
   11900:	strne	r4, [r5]
   11904:	strne	r6, [r5, #8]
   11908:	beq	11928 <tabela_nova@@Base+0x7c>
   1190c:	mov	r0, r5
   11910:	ldrd	r4, [sp]
   11914:	ldr	r6, [sp, #8]
   11918:	add	sp, sp, #12
   1191c:	pop	{pc}		; (ldr pc, [sp], #4)
   11920:	mov	r5, #0
   11924:	b	1190c <tabela_nova@@Base+0x60>
   11928:	mov	r0, r5
   1192c:	mov	r5, r3
   11930:	bl	10ce0 <free@plt>
   11934:	b	1190c <tabela_nova@@Base+0x60>

00011938 <tabela_apaga@@Base>:
   11938:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1193c:	strd	r6, [sp, #8]
   11940:	subs	r7, r0, #0
   11944:	str	r8, [sp, #16]
   11948:	str	lr, [sp, #20]
   1194c:	beq	119b4 <tabela_apaga@@Base+0x7c>
   11950:	ldmib	r7, {r0, r3}
   11954:	cmp	r3, #0
   11958:	ble	11994 <tabela_apaga@@Base+0x5c>
   1195c:	mov	r6, #0
   11960:	ldr	r4, [r0, r6, lsl #2]
   11964:	cmp	r4, #0
   11968:	beq	11988 <tabela_apaga@@Base+0x50>
   1196c:	ldm	r4, {r0, r5}
   11970:	bl	10ce0 <free@plt>
   11974:	mov	r0, r4
   11978:	bl	10ce0 <free@plt>
   1197c:	subs	r4, r5, #0
   11980:	bne	1196c <tabela_apaga@@Base+0x34>
   11984:	ldmib	r7, {r0, r3}
   11988:	add	r6, r6, #1
   1198c:	cmp	r3, r6
   11990:	bgt	11960 <tabela_apaga@@Base+0x28>
   11994:	bl	10ce0 <free@plt>
   11998:	mov	r0, r7
   1199c:	ldrd	r4, [sp]
   119a0:	ldrd	r6, [sp, #8]
   119a4:	ldr	r8, [sp, #16]
   119a8:	ldr	lr, [sp, #20]
   119ac:	add	sp, sp, #24
   119b0:	b	10ce0 <free@plt>
   119b4:	ldrd	r4, [sp]
   119b8:	ldrd	r6, [sp, #8]
   119bc:	ldr	r8, [sp, #16]
   119c0:	add	sp, sp, #20
   119c4:	pop	{pc}		; (ldr pc, [sp], #4)

000119c8 <tabela_adiciona@@Base>:
   119c8:	cmp	r1, #0
   119cc:	clz	r3, r2
   119d0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   119d4:	lsr	r3, r3, #5
   119d8:	moveq	r3, #1
   119dc:	cmp	r0, #0
   119e0:	moveq	r3, #1
   119e4:	strd	r6, [sp, #8]
   119e8:	cmp	r3, #0
   119ec:	strd	r8, [sp, #16]
   119f0:	str	sl, [sp, #24]
   119f4:	str	lr, [sp, #28]
   119f8:	bne	11acc <tabela_adiciona@@Base+0x104>
   119fc:	mov	r4, r0
   11a00:	mov	r6, r1
   11a04:	mov	r0, r1
   11a08:	ldr	r3, [r4]
   11a0c:	mov	r8, r2
   11a10:	ldr	r1, [r4, #8]
   11a14:	blx	r3
   11a18:	ldr	sl, [r4, #4]
   11a1c:	mov	r9, r0
   11a20:	ldr	r4, [sl, r0, lsl #2]
   11a24:	cmp	r4, #0
   11a28:	bne	11a3c <tabela_adiciona@@Base+0x74>
   11a2c:	b	11a7c <tabela_adiciona@@Base+0xb4>
   11a30:	ldr	r4, [r4, #4]
   11a34:	cmp	r4, #0
   11a38:	beq	11a7c <tabela_adiciona@@Base+0xb4>
   11a3c:	ldr	r5, [r4]
   11a40:	mov	r1, r6
   11a44:	mov	r0, r5
   11a48:	bl	10cb0 <strcmp@plt>
   11a4c:	subs	r7, r0, #0
   11a50:	bne	11a30 <tabela_adiciona@@Base+0x68>
   11a54:	mov	r1, r8
   11a58:	add	r0, r5, #50	; 0x32
   11a5c:	bl	10d04 <strcpy@plt>
   11a60:	mov	r0, r7
   11a64:	ldrd	r4, [sp]
   11a68:	ldrd	r6, [sp, #8]
   11a6c:	ldrd	r8, [sp, #16]
   11a70:	ldr	sl, [sp, #24]
   11a74:	add	sp, sp, #28
   11a78:	pop	{pc}		; (ldr pc, [sp], #4)
   11a7c:	mov	r0, #8
   11a80:	bl	10d1c <malloc@plt>
   11a84:	subs	r4, r0, #0
   11a88:	beq	11acc <tabela_adiciona@@Base+0x104>
   11a8c:	mov	r0, #150	; 0x96
   11a90:	bl	10d1c <malloc@plt>
   11a94:	cmp	r0, #0
   11a98:	mov	r5, r0
   11a9c:	str	r0, [r4]
   11aa0:	beq	11acc <tabela_adiciona@@Base+0x104>
   11aa4:	mov	r1, r6
   11aa8:	mov	r7, #0
   11aac:	bl	10d04 <strcpy@plt>
   11ab0:	mov	r1, r8
   11ab4:	add	r0, r5, #50	; 0x32
   11ab8:	bl	10d04 <strcpy@plt>
   11abc:	ldr	r3, [sl, r9, lsl #2]
   11ac0:	str	r3, [r4, #4]
   11ac4:	str	r4, [sl, r9, lsl #2]
   11ac8:	b	11a60 <tabela_adiciona@@Base+0x98>
   11acc:	mvn	r7, #1
   11ad0:	b	11a60 <tabela_adiciona@@Base+0x98>

00011ad4 <tabela_remove@@Base>:
   11ad4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11ad8:	subs	r4, r0, #0
   11adc:	strd	r6, [sp, #8]
   11ae0:	strd	r8, [sp, #16]
   11ae4:	str	sl, [sp, #24]
   11ae8:	str	lr, [sp, #28]
   11aec:	beq	11b88 <tabela_remove@@Base+0xb4>
   11af0:	mov	r0, r1
   11af4:	mov	r6, r1
   11af8:	ldr	r3, [r4]
   11afc:	ldr	r1, [r4, #8]
   11b00:	blx	r3
   11b04:	ldr	sl, [r4, #4]
   11b08:	mov	r9, r0
   11b0c:	ldr	r4, [sl, r0, lsl #2]
   11b10:	cmp	r4, #0
   11b14:	beq	11b68 <tabela_remove@@Base+0x94>
   11b18:	mov	r8, #0
   11b1c:	b	11b2c <tabela_remove@@Base+0x58>
   11b20:	mov	r8, r4
   11b24:	subs	r4, r3, #0
   11b28:	beq	11b68 <tabela_remove@@Base+0x94>
   11b2c:	ldr	r5, [r4]
   11b30:	mov	r1, r6
   11b34:	mov	r0, r5
   11b38:	bl	10cb0 <strcmp@plt>
   11b3c:	subs	r7, r0, #0
   11b40:	ldr	r3, [r4, #4]
   11b44:	bne	11b20 <tabela_remove@@Base+0x4c>
   11b48:	cmp	r8, #0
   11b4c:	mov	r0, r5
   11b50:	strne	r3, [r8, #4]
   11b54:	streq	r3, [sl, r9, lsl #2]
   11b58:	bl	10ce0 <free@plt>
   11b5c:	mov	r0, r4
   11b60:	bl	10ce0 <free@plt>
   11b64:	b	11b6c <tabela_remove@@Base+0x98>
   11b68:	mvn	r7, #2
   11b6c:	mov	r0, r7
   11b70:	ldrd	r4, [sp]
   11b74:	ldrd	r6, [sp, #8]
   11b78:	ldrd	r8, [sp, #16]
   11b7c:	ldr	sl, [sp, #24]
   11b80:	add	sp, sp, #28
   11b84:	pop	{pc}		; (ldr pc, [sp], #4)
   11b88:	mvn	r7, #1
   11b8c:	b	11b6c <tabela_remove@@Base+0x98>

00011b90 <tabela_valor@@Base>:
   11b90:	strd	r4, [sp, #-16]!
   11b94:	subs	r4, r0, #0
   11b98:	str	r6, [sp, #8]
   11b9c:	str	lr, [sp, #12]
   11ba0:	beq	11c04 <tabela_valor@@Base+0x74>
   11ba4:	mov	r0, r1
   11ba8:	mov	r6, r1
   11bac:	ldr	r3, [r4]
   11bb0:	ldr	r1, [r4, #8]
   11bb4:	blx	r3
   11bb8:	ldr	r3, [r4, #4]
   11bbc:	ldr	r4, [r3, r0, lsl #2]
   11bc0:	cmp	r4, #0
   11bc4:	bne	11bd8 <tabela_valor@@Base+0x48>
   11bc8:	b	11c04 <tabela_valor@@Base+0x74>
   11bcc:	ldr	r4, [r4, #4]
   11bd0:	cmp	r4, #0
   11bd4:	beq	11c04 <tabela_valor@@Base+0x74>
   11bd8:	ldr	r5, [r4]
   11bdc:	mov	r1, r6
   11be0:	mov	r0, r5
   11be4:	bl	10cb0 <strcmp@plt>
   11be8:	cmp	r0, #0
   11bec:	bne	11bcc <tabela_valor@@Base+0x3c>
   11bf0:	add	r0, r5, #50	; 0x32
   11bf4:	ldrd	r4, [sp]
   11bf8:	ldr	r6, [sp, #8]
   11bfc:	add	sp, sp, #12
   11c00:	pop	{pc}		; (ldr pc, [sp], #4)
   11c04:	ldrd	r4, [sp]
   11c08:	mov	r0, #0
   11c0c:	ldr	r6, [sp, #8]
   11c10:	add	sp, sp, #12
   11c14:	pop	{pc}		; (ldr pc, [sp], #4)

00011c18 <tabela_existe@@Base>:
   11c18:	cmp	r0, #0
   11c1c:	cmpne	r1, #0
   11c20:	beq	11c48 <tabela_existe@@Base+0x30>
   11c24:	str	r4, [sp, #-8]!
   11c28:	str	lr, [sp, #4]
   11c2c:	bl	11b90 <tabela_valor@@Base>
   11c30:	cmp	r0, #0
   11c34:	ldr	r4, [sp]
   11c38:	add	sp, sp, #4
   11c3c:	movne	r0, #1
   11c40:	mvneq	r0, #2
   11c44:	pop	{pc}		; (ldr pc, [sp], #4)
   11c48:	mvn	r0, #1
   11c4c:	bx	lr

00011c50 <tabela_esvazia@@Base>:
   11c50:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11c54:	strd	r6, [sp, #8]
   11c58:	strd	r8, [sp, #16]
   11c5c:	subs	r8, r0, #0
   11c60:	str	sl, [sp, #24]
   11c64:	str	lr, [sp, #28]
   11c68:	beq	11ce8 <tabela_esvazia@@Base+0x98>
   11c6c:	ldr	r1, [r8, #8]
   11c70:	cmp	r1, #0
   11c74:	ble	11ccc <tabela_esvazia@@Base+0x7c>
   11c78:	ldr	r3, [r8, #4]
   11c7c:	mov	r6, #0
   11c80:	mov	r9, r6
   11c84:	ldr	r4, [r3, r6, lsl #2]
   11c88:	lsl	r7, r6, #2
   11c8c:	add	r2, r3, r7
   11c90:	cmp	r4, #0
   11c94:	beq	11cbc <tabela_esvazia@@Base+0x6c>
   11c98:	ldm	r4, {r0, r5}
   11c9c:	bl	10ce0 <free@plt>
   11ca0:	mov	r0, r4
   11ca4:	bl	10ce0 <free@plt>
   11ca8:	subs	r4, r5, #0
   11cac:	bne	11c98 <tabela_esvazia@@Base+0x48>
   11cb0:	ldr	r3, [r8, #4]
   11cb4:	ldr	r1, [r8, #8]
   11cb8:	add	r2, r3, r7
   11cbc:	add	r6, r6, #1
   11cc0:	str	r9, [r2]
   11cc4:	cmp	r1, r6
   11cc8:	bgt	11c84 <tabela_esvazia@@Base+0x34>
   11ccc:	mov	r0, #0
   11cd0:	ldrd	r4, [sp]
   11cd4:	ldrd	r6, [sp, #8]
   11cd8:	ldrd	r8, [sp, #16]
   11cdc:	ldr	sl, [sp, #24]
   11ce0:	add	sp, sp, #28
   11ce4:	pop	{pc}		; (ldr pc, [sp], #4)
   11ce8:	mvn	r0, #1
   11cec:	b	11cd0 <tabela_esvazia@@Base+0x80>

00011cf0 <tabela_numelementos@@Base>:
   11cf0:	cmp	r0, #0
   11cf4:	beq	11d40 <tabela_numelementos@@Base+0x50>
   11cf8:	ldr	r1, [r0, #8]
   11cfc:	cmp	r1, #0
   11d00:	ble	11d38 <tabela_numelementos@@Base+0x48>
   11d04:	ldr	r2, [r0, #4]
   11d08:	mov	r0, #0
   11d0c:	add	r1, r2, r1, lsl #2
   11d10:	ldr	r3, [r2], #4
   11d14:	cmp	r3, #0
   11d18:	beq	11d2c <tabela_numelementos@@Base+0x3c>
   11d1c:	ldr	r3, [r3, #4]
   11d20:	add	r0, r0, #1
   11d24:	cmp	r3, #0
   11d28:	bne	11d1c <tabela_numelementos@@Base+0x2c>
   11d2c:	cmp	r2, r1
   11d30:	bne	11d10 <tabela_numelementos@@Base+0x20>
   11d34:	bx	lr
   11d38:	mov	r0, #0
   11d3c:	bx	lr
   11d40:	mvn	r0, #1
   11d44:	bx	lr

00011d48 <tabela_elementos@@Base>:
   11d48:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11d4c:	mov	r5, r1
   11d50:	mov	r4, r0
   11d54:	strd	r6, [sp, #8]
   11d58:	strd	r8, [sp, #16]
   11d5c:	str	sl, [sp, #24]
   11d60:	str	lr, [sp, #28]
   11d64:	bl	11cf0 <tabela_numelementos@@Base>
   11d68:	cmp	r0, #0
   11d6c:	str	r0, [r5]
   11d70:	ble	11e04 <tabela_elementos@@Base+0xbc>
   11d74:	mov	r8, #150	; 0x96
   11d78:	mul	r0, r8, r0
   11d7c:	bl	10d1c <malloc@plt>
   11d80:	subs	r9, r0, #0
   11d84:	beq	11e04 <tabela_elementos@@Base+0xbc>
   11d88:	ldr	r7, [r4, #8]
   11d8c:	cmp	r7, #0
   11d90:	ble	11de8 <tabela_elementos@@Base+0xa0>
   11d94:	ldr	r6, [r4, #4]
   11d98:	mov	r5, #0
   11d9c:	add	r7, r6, r7, lsl #2
   11da0:	b	11dac <tabela_elementos@@Base+0x64>
   11da4:	cmp	r6, r7
   11da8:	beq	11de8 <tabela_elementos@@Base+0xa0>
   11dac:	ldr	r4, [r6], #4
   11db0:	cmp	r4, #0
   11db4:	beq	11da4 <tabela_elementos@@Base+0x5c>
   11db8:	mla	r3, r8, r5, r9
   11dbc:	mov	r0, r3
   11dc0:	mov	r2, #150	; 0x96
   11dc4:	ldr	r1, [r4]
   11dc8:	bl	10cec <memcpy@plt>
   11dcc:	ldr	r4, [r4, #4]
   11dd0:	add	r5, r5, #1
   11dd4:	add	r3, r0, #150	; 0x96
   11dd8:	cmp	r4, #0
   11ddc:	bne	11dbc <tabela_elementos@@Base+0x74>
   11de0:	cmp	r6, r7
   11de4:	bne	11dac <tabela_elementos@@Base+0x64>
   11de8:	mov	r0, r9
   11dec:	ldrd	r4, [sp]
   11df0:	ldrd	r6, [sp, #8]
   11df4:	ldrd	r8, [sp, #16]
   11df8:	ldr	sl, [sp, #24]
   11dfc:	add	sp, sp, #28
   11e00:	pop	{pc}		; (ldr pc, [sp], #4)
   11e04:	mov	r9, #0
   11e08:	b	11de8 <tabela_elementos@@Base+0xa0>

00011e0c <hash_krm@@Base>:
   11e0c:	ldrb	r3, [r0]
   11e10:	mov	r2, #7
   11e14:	cmp	r3, #0
   11e18:	beq	11e2c <hash_krm@@Base+0x20>
   11e1c:	add	r2, r2, r3
   11e20:	ldrb	r3, [r0, #1]!
   11e24:	cmp	r3, #0
   11e28:	bne	11e1c <hash_krm@@Base+0x10>
   11e2c:	udiv	r0, r2, r1
   11e30:	mls	r0, r1, r0, r2
   11e34:	bx	lr

00011e38 <hash_djbm@@Base>:
   11e38:	ldrb	r2, [r0]
   11e3c:	movw	r3, #5347	; 0x14e3
   11e40:	cmp	r2, #0
   11e44:	beq	11e5c <hash_djbm@@Base+0x24>
   11e48:	rsb	r3, r3, r3, lsl #5
   11e4c:	eor	r3, r3, r2
   11e50:	ldrb	r2, [r0, #1]!
   11e54:	cmp	r2, #0
   11e58:	bne	11e48 <hash_djbm@@Base+0x10>
   11e5c:	udiv	r0, r3, r1
   11e60:	mls	r0, r1, r0, r3
   11e64:	bx	lr

00011e68 <mostraTabela@@Base>:
   11e68:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11e6c:	strd	r6, [sp, #8]
   11e70:	mov	r7, r0
   11e74:	str	r8, [sp, #16]
   11e78:	str	lr, [sp, #20]
   11e7c:	bl	11cf0 <tabela_numelementos@@Base>
   11e80:	mov	r1, r0
   11e84:	ldr	r0, [pc, #176]	; 11f3c <mostraTabela@@Base+0xd4>
   11e88:	add	r0, pc, r0
   11e8c:	bl	10cbc <printf@plt>
   11e90:	ldr	r2, [r7, #8]
   11e94:	cmp	r2, #0
   11e98:	ble	11f20 <mostraTabela@@Base+0xb8>
   11e9c:	ldr	r8, [pc, #156]	; 11f40 <mostraTabela@@Base+0xd8>
   11ea0:	mov	r5, #0
   11ea4:	ldr	r6, [pc, #152]	; 11f44 <mostraTabela@@Base+0xdc>
   11ea8:	add	r8, pc, r8
   11eac:	add	r6, pc, r6
   11eb0:	b	11ec0 <mostraTabela@@Base+0x58>
   11eb4:	add	r5, r5, #1
   11eb8:	cmp	r2, r5
   11ebc:	ble	11f20 <mostraTabela@@Base+0xb8>
   11ec0:	ldr	r3, [r7, #4]
   11ec4:	ldr	r3, [r3, r5, lsl #2]
   11ec8:	cmp	r3, #0
   11ecc:	beq	11eb4 <mostraTabela@@Base+0x4c>
   11ed0:	mov	r1, r5
   11ed4:	mov	r0, r8
   11ed8:	bl	10cbc <printf@plt>
   11edc:	ldr	r3, [r7, #4]
   11ee0:	ldr	r4, [r3, r5, lsl #2]
   11ee4:	cmp	r4, #0
   11ee8:	beq	11f08 <mostraTabela@@Base+0xa0>
   11eec:	ldr	r1, [r4]
   11ef0:	mov	r0, r6
   11ef4:	add	r2, r1, #50	; 0x32
   11ef8:	bl	10cbc <printf@plt>
   11efc:	ldr	r4, [r4, #4]
   11f00:	cmp	r4, #0
   11f04:	bne	11eec <mostraTabela@@Base+0x84>
   11f08:	mov	r0, #10
   11f0c:	add	r5, r5, #1
   11f10:	bl	10d58 <putchar@plt>
   11f14:	ldr	r2, [r7, #8]
   11f18:	cmp	r2, r5
   11f1c:	bgt	11ec0 <mostraTabela@@Base+0x58>
   11f20:	mov	r0, #10
   11f24:	ldrd	r4, [sp]
   11f28:	ldrd	r6, [sp, #8]
   11f2c:	ldr	r8, [sp, #16]
   11f30:	ldr	lr, [sp, #20]
   11f34:	add	sp, sp, #24
   11f38:	b	10d58 <putchar@plt>
   11f3c:	andeq	r0, r0, r4, lsr #3
   11f40:	andeq	r0, r0, r8, lsr #3
   11f44:	andeq	r0, r0, ip, lsr #3

00011f48 <__libc_csu_init@@Base>:
   11f48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11f4c:	mov	r7, r0
   11f50:	ldr	r6, [pc, #72]	; 11fa0 <__libc_csu_init@@Base+0x58>
   11f54:	ldr	r5, [pc, #72]	; 11fa4 <__libc_csu_init@@Base+0x5c>
   11f58:	add	r6, pc, r6
   11f5c:	add	r5, pc, r5
   11f60:	sub	r6, r6, r5
   11f64:	mov	r8, r1
   11f68:	mov	r9, r2
   11f6c:	bl	10c84 <calloc@plt-0x20>
   11f70:	asrs	r6, r6, #2
   11f74:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11f78:	mov	r4, #0
   11f7c:	add	r4, r4, #1
   11f80:	ldr	r3, [r5], #4
   11f84:	mov	r2, r9
   11f88:	mov	r1, r8
   11f8c:	mov	r0, r7
   11f90:	blx	r3
   11f94:	cmp	r6, r4
   11f98:	bne	11f7c <__libc_csu_init@@Base+0x34>
   11f9c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11fa0:			; <UNDEFINED> instruction: 0x00010fb4
   11fa4:	andeq	r0, r1, ip, lsr #31

00011fa8 <__libc_csu_fini@@Base>:
   11fa8:	bx	lr

Disassembly of section .fini:

00011fac <.fini>:
   11fac:	push	{r3, lr}
   11fb0:	pop	{r3, pc}
