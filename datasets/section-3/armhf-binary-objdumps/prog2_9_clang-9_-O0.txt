
../repos/prog2/9:     file format elf32-littlearm


Disassembly of section .init:

00010ab0 <.init>:
   10ab0:	push	{r3, lr}
   10ab4:	bl	10bcc <_start@@Base+0x3c>
   10ab8:	pop	{r3, pc}

Disassembly of section .plt:

00010abc <calloc@plt-0x14>:
   10abc:	push	{lr}		; (str lr, [sp, #-4]!)
   10ac0:	ldr	lr, [pc, #4]	; 10acc <calloc@plt-0x4>
   10ac4:	add	lr, pc, lr
   10ac8:	ldr	pc, [lr, #8]!
   10acc:	andeq	r2, r1, r4, lsr r5

00010ad0 <calloc@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #73728	; 0x12000
   10ad8:	ldr	pc, [ip, #1332]!	; 0x534

00010adc <strcmp@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #73728	; 0x12000
   10ae4:	ldr	pc, [ip, #1324]!	; 0x52c

00010ae8 <printf@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #73728	; 0x12000
   10af0:	ldr	pc, [ip, #1316]!	; 0x524

00010af4 <__isoc99_fscanf@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #73728	; 0x12000
   10afc:	ldr	pc, [ip, #1308]!	; 0x51c

00010b00 <fopen@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #73728	; 0x12000
   10b08:	ldr	pc, [ip, #1300]!	; 0x514

00010b0c <fflush@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #73728	; 0x12000
   10b14:	ldr	pc, [ip, #1292]!	; 0x50c

00010b18 <free@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #73728	; 0x12000
   10b20:	ldr	pc, [ip, #1284]!	; 0x504

00010b24 <fgets@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #73728	; 0x12000
   10b2c:	ldr	pc, [ip, #1276]!	; 0x4fc

00010b30 <strdup@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #73728	; 0x12000
   10b38:	ldr	pc, [ip, #1268]!	; 0x4f4

00010b3c <malloc@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #73728	; 0x12000
   10b44:	ldr	pc, [ip, #1260]!	; 0x4ec

00010b48 <__libc_start_main@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #73728	; 0x12000
   10b50:	ldr	pc, [ip, #1252]!	; 0x4e4

00010b54 <__gmon_start__@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #73728	; 0x12000
   10b5c:	ldr	pc, [ip, #1244]!	; 0x4dc

00010b60 <feof@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #73728	; 0x12000
   10b68:	ldr	pc, [ip, #1236]!	; 0x4d4

00010b6c <strlen@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #73728	; 0x12000
   10b74:	ldr	pc, [ip, #1228]!	; 0x4cc

00010b78 <fclose@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #73728	; 0x12000
   10b80:	ldr	pc, [ip, #1220]!	; 0x4c4

00010b84 <abort@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #73728	; 0x12000
   10b8c:	ldr	pc, [ip, #1212]!	; 0x4bc

Disassembly of section .text:

00010b90 <_start@@Base>:
   10b90:	mov	fp, #0
   10b94:	mov	lr, #0
   10b98:	pop	{r1}		; (ldr r1, [sp], #4)
   10b9c:	mov	r2, sp
   10ba0:	push	{r2}		; (str r2, [sp, #-4]!)
   10ba4:	push	{r0}		; (str r0, [sp, #-4]!)
   10ba8:	ldr	ip, [pc, #16]	; 10bc0 <_start@@Base+0x30>
   10bac:	push	{ip}		; (str ip, [sp, #-4]!)
   10bb0:	ldr	r0, [pc, #12]	; 10bc4 <_start@@Base+0x34>
   10bb4:	ldr	r3, [pc, #12]	; 10bc8 <_start@@Base+0x38>
   10bb8:	bl	10b48 <__libc_start_main@plt>
   10bbc:	bl	10b84 <abort@plt>
   10bc0:	andeq	r1, r1, r8, lsl #26
   10bc4:	ldrdeq	r1, [r1], -ip
   10bc8:	andeq	r1, r1, r8, lsr #25
   10bcc:	ldr	r3, [pc, #20]	; 10be8 <_start@@Base+0x58>
   10bd0:	ldr	r2, [pc, #20]	; 10bec <_start@@Base+0x5c>
   10bd4:	add	r3, pc, r3
   10bd8:	ldr	r2, [r3, r2]
   10bdc:	cmp	r2, #0
   10be0:	bxeq	lr
   10be4:	b	10b54 <__gmon_start__@plt>
   10be8:	andeq	r2, r1, r4, lsr #8
   10bec:	andeq	r0, r0, r4, asr r0
   10bf0:	ldr	r0, [pc, #24]	; 10c10 <_start@@Base+0x80>
   10bf4:	ldr	r3, [pc, #24]	; 10c14 <_start@@Base+0x84>
   10bf8:	cmp	r3, r0
   10bfc:	bxeq	lr
   10c00:	ldr	r3, [pc, #16]	; 10c18 <_start@@Base+0x88>
   10c04:	cmp	r3, #0
   10c08:	bxeq	lr
   10c0c:	bx	r3
   10c10:	andeq	r3, r2, r8, rrx
   10c14:	andeq	r3, r2, r8, rrx
   10c18:	andeq	r0, r0, r0
   10c1c:	ldr	r0, [pc, #36]	; 10c48 <_start@@Base+0xb8>
   10c20:	ldr	r1, [pc, #36]	; 10c4c <_start@@Base+0xbc>
   10c24:	sub	r1, r1, r0
   10c28:	asr	r1, r1, #2
   10c2c:	add	r1, r1, r1, lsr #31
   10c30:	asrs	r1, r1, #1
   10c34:	bxeq	lr
   10c38:	ldr	r3, [pc, #16]	; 10c50 <_start@@Base+0xc0>
   10c3c:	cmp	r3, #0
   10c40:	bxeq	lr
   10c44:	bx	r3
   10c48:	andeq	r3, r2, r8, rrx
   10c4c:	andeq	r3, r2, r8, rrx
   10c50:	andeq	r0, r0, r0
   10c54:	push	{r4, lr}
   10c58:	ldr	r4, [pc, #24]	; 10c78 <_start@@Base+0xe8>
   10c5c:	ldrb	r3, [r4]
   10c60:	cmp	r3, #0
   10c64:	popne	{r4, pc}
   10c68:	bl	10bf0 <_start@@Base+0x60>
   10c6c:	mov	r3, #1
   10c70:	strb	r3, [r4]
   10c74:	pop	{r4, pc}
   10c78:	andeq	r3, r2, r8, rrx
   10c7c:	b	10c1c <_start@@Base+0x8c>

00010c80 <fp_insere@@Base>:
   10c80:	push	{fp, lr}
   10c84:	mov	fp, sp
   10c88:	sub	sp, sp, #32
   10c8c:	str	r0, [fp, #-8]
   10c90:	str	r1, [fp, #-12]
   10c94:	str	r2, [sp, #16]
   10c98:	ldr	r0, [fp, #-8]
   10c9c:	movw	r1, #0
   10ca0:	cmp	r0, r1
   10ca4:	bne	10cb4 <fp_insere@@Base+0x34>
   10ca8:	mvn	r0, #0
   10cac:	str	r0, [fp, #-4]
   10cb0:	b	10dbc <fp_insere@@Base+0x13c>
   10cb4:	ldr	r0, [fp, #-8]
   10cb8:	ldr	r0, [r0]
   10cbc:	ldr	r1, [fp, #-8]
   10cc0:	ldr	r1, [r1, #4]
   10cc4:	cmp	r0, r1
   10cc8:	bne	10cd8 <fp_insere@@Base+0x58>
   10ccc:	movw	r0, #0
   10cd0:	str	r0, [fp, #-4]
   10cd4:	b	10dbc <fp_insere@@Base+0x13c>
   10cd8:	ldr	r0, [sp, #16]
   10cdc:	ldr	r1, [fp, #-12]
   10ce0:	bl	1190c <elemento_cria@@Base>
   10ce4:	str	r0, [sp, #12]
   10ce8:	movw	r0, #0
   10cec:	str	r0, [sp, #8]
   10cf0:	ldr	r0, [sp, #8]
   10cf4:	ldr	r1, [fp, #-8]
   10cf8:	ldr	r1, [r1]
   10cfc:	cmp	r0, r1
   10d00:	bge	10d40 <fp_insere@@Base+0xc0>
   10d04:	ldr	r0, [fp, #-8]
   10d08:	ldr	r0, [r0, #8]
   10d0c:	ldr	r1, [sp, #8]
   10d10:	add	r0, r0, r1, lsl #2
   10d14:	ldr	r0, [r0]
   10d18:	ldr	r1, [sp, #12]
   10d1c:	bl	11978 <maior_que@@Base>
   10d20:	cmp	r0, #0
   10d24:	bne	10d2c <fp_insere@@Base+0xac>
   10d28:	b	10d40 <fp_insere@@Base+0xc0>
   10d2c:	b	10d30 <fp_insere@@Base+0xb0>
   10d30:	ldr	r0, [sp, #8]
   10d34:	add	r0, r0, #1
   10d38:	str	r0, [sp, #8]
   10d3c:	b	10cf0 <fp_insere@@Base+0x70>
   10d40:	ldr	r0, [fp, #-8]
   10d44:	ldr	r0, [r0]
   10d48:	str	r0, [sp, #4]
   10d4c:	ldr	r0, [sp, #4]
   10d50:	ldr	r1, [sp, #8]
   10d54:	cmp	r0, r1
   10d58:	blt	10d8c <fp_insere@@Base+0x10c>
   10d5c:	ldr	r0, [fp, #-8]
   10d60:	ldr	r0, [r0, #8]
   10d64:	ldr	r1, [sp, #4]
   10d68:	ldr	r2, [r0, r1, lsl #2]
   10d6c:	add	r1, r1, #1
   10d70:	add	r0, r0, r1, lsl #2
   10d74:	str	r2, [r0]
   10d78:	ldr	r0, [sp, #4]
   10d7c:	mvn	r1, #0
   10d80:	add	r0, r0, r1
   10d84:	str	r0, [sp, #4]
   10d88:	b	10d4c <fp_insere@@Base+0xcc>
   10d8c:	ldr	r0, [sp, #12]
   10d90:	ldr	r1, [fp, #-8]
   10d94:	ldr	r1, [r1, #8]
   10d98:	ldr	r2, [sp, #8]
   10d9c:	add	r1, r1, r2, lsl #2
   10da0:	str	r0, [r1]
   10da4:	ldr	r0, [fp, #-8]
   10da8:	ldr	r1, [r0]
   10dac:	add	r1, r1, #1
   10db0:	str	r1, [r0]
   10db4:	movw	r0, #1
   10db8:	str	r0, [fp, #-4]
   10dbc:	ldr	r0, [fp, #-4]
   10dc0:	mov	sp, fp
   10dc4:	pop	{fp, pc}

00010dc8 <fp_remove@@Base>:
   10dc8:	sub	sp, sp, #16
   10dcc:	str	r0, [sp, #8]
   10dd0:	ldr	r0, [sp, #8]
   10dd4:	movw	r1, #0
   10dd8:	cmp	r0, r1
   10ddc:	beq	10df0 <fp_remove@@Base+0x28>
   10de0:	ldr	r0, [sp, #8]
   10de4:	ldr	r0, [r0]
   10de8:	cmp	r0, #0
   10dec:	bne	10dfc <fp_remove@@Base+0x34>
   10df0:	movw	r0, #0
   10df4:	str	r0, [sp, #12]
   10df8:	b	10e70 <fp_remove@@Base+0xa8>
   10dfc:	ldr	r0, [sp, #8]
   10e00:	ldr	r0, [r0, #8]
   10e04:	ldr	r0, [r0]
   10e08:	str	r0, [sp, #4]
   10e0c:	movw	r0, #0
   10e10:	str	r0, [sp]
   10e14:	ldr	r0, [sp]
   10e18:	ldr	r1, [sp, #8]
   10e1c:	ldr	r1, [r1]
   10e20:	cmp	r0, r1
   10e24:	bge	10e50 <fp_remove@@Base+0x88>
   10e28:	ldr	r0, [sp, #8]
   10e2c:	ldr	r0, [r0, #8]
   10e30:	ldr	r1, [sp]
   10e34:	add	r0, r0, r1, lsl #2
   10e38:	ldr	r1, [r0, #4]
   10e3c:	str	r1, [r0]
   10e40:	ldr	r0, [sp]
   10e44:	add	r0, r0, #1
   10e48:	str	r0, [sp]
   10e4c:	b	10e14 <fp_remove@@Base+0x4c>
   10e50:	ldr	r0, [sp, #8]
   10e54:	ldr	r1, [r0]
   10e58:	mvn	r2, #0
   10e5c:	add	r1, r1, r2
   10e60:	str	r1, [r0]
   10e64:	ldr	r0, [sp, #4]
   10e68:	ldr	r0, [r0, #4]
   10e6c:	str	r0, [sp, #12]
   10e70:	ldr	r0, [sp, #12]
   10e74:	add	sp, sp, #16
   10e78:	bx	lr

00010e7c <fp_carrega@@Base>:
   10e7c:	push	{r4, r5, fp, lr}
   10e80:	add	fp, sp, #8
   10e84:	sub	sp, sp, #288	; 0x120
   10e88:	ldr	r2, [pc, #212]	; 10f64 <fp_carrega@@Base+0xe8>
   10e8c:	add	r2, pc, r2
   10e90:	str	r0, [fp, #-12]
   10e94:	str	r1, [fp, #-16]
   10e98:	ldr	r0, [fp, #-16]
   10e9c:	mov	r1, r2
   10ea0:	bl	10b00 <fopen@plt>
   10ea4:	str	r0, [sp, #16]
   10ea8:	ldr	r0, [sp, #16]
   10eac:	movw	r1, #0
   10eb0:	cmp	r0, r1
   10eb4:	bne	10ec8 <fp_carrega@@Base+0x4c>
   10eb8:	ldr	r0, [pc, #168]	; 10f68 <fp_carrega@@Base+0xec>
   10ebc:	add	r0, pc, r0
   10ec0:	bl	10ae8 <printf@plt>
   10ec4:	b	10f5c <fp_carrega@@Base+0xe0>
   10ec8:	b	10ecc <fp_carrega@@Base+0x50>
   10ecc:	ldr	r0, [sp, #16]
   10ed0:	bl	10b60 <feof@plt>
   10ed4:	cmp	r0, #0
   10ed8:	movw	r0, #0
   10edc:	movne	r0, #1
   10ee0:	mvn	r1, #0
   10ee4:	eor	r0, r0, r1
   10ee8:	tst	r0, #1
   10eec:	beq	10f54 <fp_carrega@@Base+0xd8>
   10ef0:	ldr	r0, [pc, #116]	; 10f6c <fp_carrega@@Base+0xf0>
   10ef4:	add	r1, pc, r0
   10ef8:	ldr	r0, [sp, #16]
   10efc:	add	r2, sp, #20
   10f00:	bl	10af4 <__isoc99_fscanf@plt>
   10f04:	add	r1, sp, #24
   10f08:	ldr	r2, [sp, #16]
   10f0c:	str	r0, [sp, #12]
   10f10:	mov	r0, r1
   10f14:	movw	r1, #256	; 0x100
   10f18:	bl	10b24 <fgets@plt>
   10f1c:	add	r1, sp, #24
   10f20:	str	r0, [sp, #8]
   10f24:	mov	r0, r1
   10f28:	str	r1, [sp, #4]
   10f2c:	bl	10b6c <strlen@plt>
   10f30:	sub	r0, r0, #1
   10f34:	ldr	r1, [sp, #4]
   10f38:	add	r0, r1, r0
   10f3c:	movw	r2, #0
   10f40:	strb	r2, [r0]
   10f44:	ldr	r0, [fp, #-12]
   10f48:	ldr	r2, [sp, #20]
   10f4c:	bl	10c80 <fp_insere@@Base>
   10f50:	b	10ecc <fp_carrega@@Base+0x50>
   10f54:	ldr	r0, [sp, #16]
   10f58:	bl	10b78 <fclose@plt>
   10f5c:	sub	sp, fp, #8
   10f60:	pop	{r4, r5, fp, pc}
   10f64:	andeq	r0, r0, r4, lsl #29
   10f68:	andeq	r0, r0, r6, asr lr
   10f6c:	andeq	r0, r0, r0, asr #28

00010f70 <heap_insere@@Base>:
   10f70:	push	{fp, lr}
   10f74:	mov	fp, sp
   10f78:	sub	sp, sp, #40	; 0x28
   10f7c:	str	r0, [fp, #-8]
   10f80:	str	r1, [fp, #-12]
   10f84:	str	r2, [fp, #-16]
   10f88:	str	r3, [sp, #20]
   10f8c:	ldr	r0, [fp, #-8]
   10f90:	ldr	r0, [r0]
   10f94:	ldr	r1, [fp, #-8]
   10f98:	ldr	r1, [r1, #4]
   10f9c:	cmp	r0, r1
   10fa0:	bne	10fb0 <heap_insere@@Base+0x40>
   10fa4:	movw	r0, #0
   10fa8:	str	r0, [fp, #-4]
   10fac:	b	110b8 <heap_insere@@Base+0x148>
   10fb0:	ldr	r0, [sp, #20]
   10fb4:	ldr	r1, [fp, #-16]
   10fb8:	bl	1190c <elemento_cria@@Base>
   10fbc:	str	r0, [sp, #8]
   10fc0:	movw	r0, #0
   10fc4:	str	r0, [sp, #16]
   10fc8:	ldr	r0, [sp, #16]
   10fcc:	ldr	r1, [fp, #-8]
   10fd0:	ldr	r1, [r1]
   10fd4:	cmp	r0, r1
   10fd8:	movw	r0, #0
   10fdc:	str	r0, [sp, #4]
   10fe0:	bge	11024 <heap_insere@@Base+0xb4>
   10fe4:	ldr	r0, [fp, #-12]
   10fe8:	ldr	r1, [fp, #-8]
   10fec:	ldr	r1, [r1, #8]
   10ff0:	ldr	r2, [sp, #16]
   10ff4:	add	r1, r1, r2, lsl #2
   10ff8:	ldr	r1, [r1]
   10ffc:	ldr	r2, [sp, #8]
   11000:	str	r0, [sp]
   11004:	mov	r0, r1
   11008:	mov	r1, r2
   1100c:	ldr	r2, [sp]
   11010:	blx	r2
   11014:	cmp	r0, #1
   11018:	movw	r0, #0
   1101c:	movne	r0, #1
   11020:	str	r0, [sp, #4]
   11024:	ldr	r0, [sp, #4]
   11028:	tst	r0, #1
   1102c:	beq	11044 <heap_insere@@Base+0xd4>
   11030:	b	11034 <heap_insere@@Base+0xc4>
   11034:	ldr	r0, [sp, #16]
   11038:	add	r0, r0, #1
   1103c:	str	r0, [sp, #16]
   11040:	b	10fc8 <heap_insere@@Base+0x58>
   11044:	ldr	r0, [sp, #16]
   11048:	str	r0, [sp, #12]
   1104c:	ldr	r0, [sp, #12]
   11050:	cmp	r0, #0
   11054:	ble	11088 <heap_insere@@Base+0x118>
   11058:	ldr	r0, [fp, #-8]
   1105c:	ldr	r0, [r0, #8]
   11060:	ldr	r1, [sp, #12]
   11064:	ldr	r2, [r0, r1, lsl #2]
   11068:	add	r1, r1, #1
   1106c:	add	r0, r0, r1, lsl #2
   11070:	str	r2, [r0]
   11074:	ldr	r0, [sp, #12]
   11078:	mvn	r1, #0
   1107c:	add	r0, r0, r1
   11080:	str	r0, [sp, #12]
   11084:	b	1104c <heap_insere@@Base+0xdc>
   11088:	ldr	r0, [sp, #8]
   1108c:	ldr	r1, [fp, #-8]
   11090:	ldr	r1, [r1, #8]
   11094:	ldr	r2, [sp, #16]
   11098:	add	r1, r1, r2, lsl #2
   1109c:	str	r0, [r1]
   110a0:	ldr	r0, [fp, #-8]
   110a4:	ldr	r1, [r0]
   110a8:	add	r1, r1, #1
   110ac:	str	r1, [r0]
   110b0:	ldr	r0, [sp, #16]
   110b4:	str	r0, [fp, #-4]
   110b8:	ldr	r0, [fp, #-4]
   110bc:	mov	sp, fp
   110c0:	pop	{fp, pc}

000110c4 <heap_remove@@Base>:
   110c4:	sub	sp, sp, #8
   110c8:	str	r0, [sp, #4]
   110cc:	str	r1, [sp]
   110d0:	movw	r0, #0
   110d4:	add	sp, sp, #8
   110d8:	bx	lr

000110dc <heap_carrega@@Base>:
   110dc:	push	{r4, r5, fp, lr}
   110e0:	add	fp, sp, #8
   110e4:	sub	sp, sp, #288	; 0x120
   110e8:	ldr	r3, [pc, #224]	; 111d0 <heap_carrega@@Base+0xf4>
   110ec:	add	r3, pc, r3
   110f0:	str	r0, [fp, #-12]
   110f4:	str	r1, [fp, #-16]
   110f8:	str	r2, [fp, #-20]	; 0xffffffec
   110fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   11100:	mov	r1, r3
   11104:	bl	10b00 <fopen@plt>
   11108:	str	r0, [sp, #12]
   1110c:	ldr	r0, [sp, #12]
   11110:	movw	r1, #0
   11114:	cmp	r0, r1
   11118:	bne	1112c <heap_carrega@@Base+0x50>
   1111c:	ldr	r0, [pc, #176]	; 111d4 <heap_carrega@@Base+0xf8>
   11120:	add	r0, pc, r0
   11124:	bl	10ae8 <printf@plt>
   11128:	b	111c8 <heap_carrega@@Base+0xec>
   1112c:	b	11130 <heap_carrega@@Base+0x54>
   11130:	ldr	r0, [sp, #12]
   11134:	bl	10b60 <feof@plt>
   11138:	cmp	r0, #0
   1113c:	movw	r0, #0
   11140:	movne	r0, #1
   11144:	mvn	r1, #0
   11148:	eor	r0, r0, r1
   1114c:	tst	r0, #1
   11150:	beq	111c0 <heap_carrega@@Base+0xe4>
   11154:	ldr	r0, [pc, #124]	; 111d8 <heap_carrega@@Base+0xfc>
   11158:	add	r1, pc, r0
   1115c:	ldr	r0, [sp, #12]
   11160:	add	r2, sp, #16
   11164:	bl	10af4 <__isoc99_fscanf@plt>
   11168:	add	r1, sp, #20
   1116c:	ldr	r2, [sp, #12]
   11170:	str	r0, [sp, #8]
   11174:	mov	r0, r1
   11178:	movw	r1, #256	; 0x100
   1117c:	bl	10b24 <fgets@plt>
   11180:	add	r1, sp, #20
   11184:	str	r0, [sp, #4]
   11188:	mov	r0, r1
   1118c:	str	r1, [sp]
   11190:	bl	10b6c <strlen@plt>
   11194:	sub	r0, r0, #1
   11198:	ldr	r1, [sp]
   1119c:	add	r0, r1, r0
   111a0:	movw	r2, #0
   111a4:	strb	r2, [r0]
   111a8:	ldr	r0, [fp, #-12]
   111ac:	ldr	r1, [fp, #-16]
   111b0:	ldr	r3, [sp, #16]
   111b4:	ldr	r2, [sp]
   111b8:	bl	10f70 <heap_insere@@Base>
   111bc:	b	11130 <heap_carrega@@Base+0x54>
   111c0:	ldr	r0, [sp, #12]
   111c4:	bl	10b78 <fclose@plt>
   111c8:	sub	sp, fp, #8
   111cc:	pop	{r4, r5, fp, pc}
   111d0:	andeq	r0, r0, r4, lsr #24
   111d4:	strdeq	r0, [r0], -r2
   111d8:	ldrdeq	r0, [r0], -ip

000111dc <main@@Base>:
   111dc:	push	{fp, lr}
   111e0:	mov	fp, sp
   111e4:	sub	sp, sp, #312	; 0x138
   111e8:	movw	r2, #0
   111ec:	str	r2, [fp, #-4]
   111f0:	str	r0, [fp, #-8]
   111f4:	str	r1, [fp, #-12]
   111f8:	movw	r0, #42	; 0x2a
   111fc:	bl	117c8 <vetor_cria@@Base>
   11200:	ldr	r1, [pc, #1284]	; 1170c <main@@Base+0x530>
   11204:	add	r1, pc, r1
   11208:	str	r0, [fp, #-16]
   1120c:	mov	r0, r1
   11210:	bl	10ae8 <printf@plt>
   11214:	ldr	r1, [pc, #1260]	; 11708 <main@@Base+0x52c>
   11218:	add	r1, pc, r1
   1121c:	ldr	r2, [fp, #-16]
   11220:	str	r0, [sp, #108]	; 0x6c
   11224:	mov	r0, r2
   11228:	bl	10e7c <fp_carrega@@Base>
   1122c:	ldr	r0, [pc, #1228]	; 11700 <main@@Base+0x524>
   11230:	add	r0, pc, r0
   11234:	ldr	r1, [pc, #1224]	; 11704 <main@@Base+0x528>
   11238:	ldr	r1, [pc, r1]
   1123c:	ldr	r1, [r1]
   11240:	bl	10ae8 <printf@plt>
   11244:	ldr	r1, [fp, #-16]
   11248:	str	r0, [sp, #104]	; 0x68
   1124c:	mov	r0, r1
   11250:	bl	11ae0 <vetor_imprime@@Base>
   11254:	ldr	r0, [fp, #-16]
   11258:	ldr	r0, [r0]
   1125c:	cmp	r0, #42	; 0x2a
   11260:	beq	1127c <main@@Base+0xa0>
   11264:	ldr	r0, [pc, #1360]	; 117bc <main@@Base+0x5e0>
   11268:	add	r0, pc, r0
   1126c:	bl	10ae8 <printf@plt>
   11270:	movw	r1, #1
   11274:	str	r1, [fp, #-4]
   11278:	b	116f4 <main@@Base+0x518>
   1127c:	ldr	r0, [fp, #-16]
   11280:	bl	10dc8 <fp_remove@@Base>
   11284:	ldr	r1, [pc, #1332]	; 117c0 <main@@Base+0x5e4>
   11288:	add	r1, pc, r1
   1128c:	str	r0, [sp, #100]	; 0x64
   11290:	mov	r0, r1
   11294:	ldr	r1, [sp, #100]	; 0x64
   11298:	bl	10adc <strcmp@plt>
   1129c:	cmp	r0, #0
   112a0:	beq	112bc <main@@Base+0xe0>
   112a4:	ldr	r0, [pc, #1292]	; 117b8 <main@@Base+0x5dc>
   112a8:	add	r0, pc, r0
   112ac:	bl	10ae8 <printf@plt>
   112b0:	movw	r1, #1
   112b4:	str	r1, [fp, #-4]
   112b8:	b	116f4 <main@@Base+0x518>
   112bc:	ldr	r0, [pc, #1176]	; 1175c <main@@Base+0x580>
   112c0:	ldr	r0, [pc, r0]
   112c4:	movw	r1, #0
   112c8:	str	r1, [r0]
   112cc:	ldr	r0, [fp, #-16]
   112d0:	bl	10dc8 <fp_remove@@Base>
   112d4:	ldr	r1, [pc, #1144]	; 11754 <main@@Base+0x578>
   112d8:	add	r1, pc, r1
   112dc:	ldr	r2, [pc, #1140]	; 11758 <main@@Base+0x57c>
   112e0:	ldr	r2, [pc, r2]
   112e4:	ldr	r2, [r2]
   112e8:	str	r0, [sp, #96]	; 0x60
   112ec:	mov	r0, r1
   112f0:	mov	r1, r2
   112f4:	bl	10ae8 <printf@plt>
   112f8:	ldr	r1, [pc, #1100]	; 1174c <main@@Base+0x570>
   112fc:	add	r1, pc, r1
   11300:	ldr	r2, [pc, #1096]	; 11750 <main@@Base+0x574>
   11304:	ldr	r2, [pc, r2]
   11308:	movw	r3, #0
   1130c:	str	r3, [r2]
   11310:	ldr	r2, [fp, #-16]
   11314:	str	r0, [sp, #92]	; 0x5c
   11318:	mov	r0, r2
   1131c:	movw	r2, #99	; 0x63
   11320:	bl	10c80 <fp_insere@@Base>
   11324:	ldr	r1, [pc, #1048]	; 11744 <main@@Base+0x568>
   11328:	add	r1, pc, r1
   1132c:	ldr	r2, [pc, #1044]	; 11748 <main@@Base+0x56c>
   11330:	ldr	r2, [pc, r2]
   11334:	ldr	r2, [r2]
   11338:	str	r0, [sp, #88]	; 0x58
   1133c:	mov	r0, r1
   11340:	mov	r1, r2
   11344:	bl	10ae8 <printf@plt>
   11348:	ldr	r1, [fp, #-16]
   1134c:	str	r0, [sp, #84]	; 0x54
   11350:	mov	r0, r1
   11354:	bl	10dc8 <fp_remove@@Base>
   11358:	ldr	r1, [pc, #988]	; 1173c <main@@Base+0x560>
   1135c:	add	r1, pc, r1
   11360:	ldr	r2, [pc, #984]	; 11740 <main@@Base+0x564>
   11364:	ldr	r2, [pc, r2]
   11368:	movw	r3, #0
   1136c:	str	r3, [r2]
   11370:	ldr	r2, [fp, #-16]
   11374:	str	r0, [sp, #80]	; 0x50
   11378:	mov	r0, r2
   1137c:	mov	r2, r3
   11380:	bl	10c80 <fp_insere@@Base>
   11384:	ldr	r1, [pc, #936]	; 11734 <main@@Base+0x558>
   11388:	add	r1, pc, r1
   1138c:	ldr	r2, [pc, #932]	; 11738 <main@@Base+0x55c>
   11390:	ldr	r2, [pc, r2]
   11394:	ldr	r2, [r2]
   11398:	str	r0, [sp, #76]	; 0x4c
   1139c:	mov	r0, r1
   113a0:	mov	r1, r2
   113a4:	bl	10ae8 <printf@plt>
   113a8:	ldr	r1, [fp, #-16]
   113ac:	str	r0, [sp, #72]	; 0x48
   113b0:	mov	r0, r1
   113b4:	bl	10dc8 <fp_remove@@Base>
   113b8:	ldr	r1, [pc, #876]	; 1172c <main@@Base+0x550>
   113bc:	add	r1, pc, r1
   113c0:	ldr	r2, [pc, #872]	; 11730 <main@@Base+0x554>
   113c4:	ldr	r2, [pc, r2]
   113c8:	movw	r3, #0
   113cc:	str	r3, [r2]
   113d0:	ldr	r2, [fp, #-16]
   113d4:	str	r0, [sp, #68]	; 0x44
   113d8:	mov	r0, r2
   113dc:	movw	r2, #42	; 0x2a
   113e0:	bl	10c80 <fp_insere@@Base>
   113e4:	ldr	r1, [pc, #824]	; 11724 <main@@Base+0x548>
   113e8:	add	r1, pc, r1
   113ec:	ldr	r2, [pc, #820]	; 11728 <main@@Base+0x54c>
   113f0:	ldr	r2, [pc, r2]
   113f4:	ldr	r2, [r2]
   113f8:	str	r0, [sp, #64]	; 0x40
   113fc:	mov	r0, r1
   11400:	mov	r1, r2
   11404:	bl	10ae8 <printf@plt>
   11408:	ldr	r1, [pc, #784]	; 11720 <main@@Base+0x544>
   1140c:	add	r1, pc, r1
   11410:	str	r0, [sp, #60]	; 0x3c
   11414:	mov	r0, r1
   11418:	bl	10ae8 <printf@plt>
   1141c:	movw	r1, #42	; 0x2a
   11420:	str	r0, [sp, #56]	; 0x38
   11424:	mov	r0, r1
   11428:	bl	11868 <vetor_criaHeap@@Base>
   1142c:	ldr	r1, [pc, #740]	; 11718 <main@@Base+0x53c>
   11430:	add	r2, pc, r1
   11434:	ldr	r1, [pc, #736]	; 1171c <main@@Base+0x540>
   11438:	ldr	r1, [pc, r1]
   1143c:	str	r0, [fp, #-24]	; 0xffffffe8
   11440:	str	r1, [fp, #-28]	; 0xffffffe4
   11444:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11448:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1144c:	bl	110dc <heap_carrega@@Base>
   11450:	ldr	r0, [pc, #696]	; 11710 <main@@Base+0x534>
   11454:	add	r0, pc, r0
   11458:	ldr	r1, [pc, #692]	; 11714 <main@@Base+0x538>
   1145c:	ldr	r1, [pc, r1]
   11460:	ldr	r1, [r1]
   11464:	bl	10ae8 <printf@plt>
   11468:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1146c:	str	r0, [sp, #52]	; 0x34
   11470:	mov	r0, r1
   11474:	bl	11bc4 <vetor_imprimeHeap@@Base>
   11478:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1147c:	ldr	r0, [r0]
   11480:	cmp	r0, #42	; 0x2a
   11484:	beq	114a0 <main@@Base+0x2c4>
   11488:	ldr	r0, [pc, #804]	; 117b4 <main@@Base+0x5d8>
   1148c:	add	r0, pc, r0
   11490:	bl	10ae8 <printf@plt>
   11494:	movw	r1, #1
   11498:	str	r1, [fp, #-4]
   1149c:	b	116f4 <main@@Base+0x518>
   114a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   114a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   114a8:	bl	110c4 <heap_remove@@Base>
   114ac:	ldr	r1, [pc, #784]	; 117c4 <main@@Base+0x5e8>
   114b0:	add	r1, pc, r1
   114b4:	str	r0, [sp, #48]	; 0x30
   114b8:	mov	r0, r1
   114bc:	ldr	r1, [sp, #48]	; 0x30
   114c0:	bl	10adc <strcmp@plt>
   114c4:	cmp	r0, #0
   114c8:	beq	114e4 <main@@Base+0x308>
   114cc:	ldr	r0, [pc, #732]	; 117b0 <main@@Base+0x5d4>
   114d0:	add	r0, pc, r0
   114d4:	bl	10ae8 <printf@plt>
   114d8:	movw	r1, #1
   114dc:	str	r1, [fp, #-4]
   114e0:	b	116f4 <main@@Base+0x518>
   114e4:	ldr	r0, [pc, #700]	; 117a8 <main@@Base+0x5cc>
   114e8:	ldr	r0, [pc, r0]
   114ec:	movw	r1, #0
   114f0:	str	r1, [r0]
   114f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   114f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   114fc:	bl	110c4 <heap_remove@@Base>
   11500:	ldr	r1, [pc, #664]	; 117a0 <main@@Base+0x5c4>
   11504:	add	r1, pc, r1
   11508:	ldr	r2, [pc, #660]	; 117a4 <main@@Base+0x5c8>
   1150c:	ldr	r2, [pc, r2]
   11510:	ldr	r2, [r2]
   11514:	str	r0, [sp, #44]	; 0x2c
   11518:	mov	r0, r1
   1151c:	mov	r1, r2
   11520:	bl	10ae8 <printf@plt>
   11524:	ldr	r1, [pc, #620]	; 11798 <main@@Base+0x5bc>
   11528:	add	r2, pc, r1
   1152c:	ldr	r1, [pc, #616]	; 1179c <main@@Base+0x5c0>
   11530:	ldr	r1, [pc, r1]
   11534:	movw	r3, #0
   11538:	str	r3, [r1]
   1153c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11540:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11544:	str	r0, [sp, #40]	; 0x28
   11548:	mov	r0, r1
   1154c:	mov	r1, r3
   11550:	movw	r3, #99	; 0x63
   11554:	bl	10f70 <heap_insere@@Base>
   11558:	ldr	r1, [pc, #560]	; 11790 <main@@Base+0x5b4>
   1155c:	add	r1, pc, r1
   11560:	ldr	r2, [pc, #556]	; 11794 <main@@Base+0x5b8>
   11564:	ldr	r2, [pc, r2]
   11568:	ldr	r2, [r2]
   1156c:	str	r0, [sp, #36]	; 0x24
   11570:	mov	r0, r1
   11574:	mov	r1, r2
   11578:	bl	10ae8 <printf@plt>
   1157c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11580:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11584:	str	r0, [sp, #32]
   11588:	mov	r0, r1
   1158c:	mov	r1, r2
   11590:	bl	110c4 <heap_remove@@Base>
   11594:	ldr	r1, [pc, #492]	; 11788 <main@@Base+0x5ac>
   11598:	add	r2, pc, r1
   1159c:	ldr	r1, [pc, #488]	; 1178c <main@@Base+0x5b0>
   115a0:	ldr	r1, [pc, r1]
   115a4:	movw	r3, #0
   115a8:	str	r3, [r1]
   115ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   115b0:	ldr	ip, [fp, #-28]	; 0xffffffe4
   115b4:	str	r0, [sp, #28]
   115b8:	mov	r0, r1
   115bc:	mov	r1, ip
   115c0:	bl	10f70 <heap_insere@@Base>
   115c4:	ldr	r1, [pc, #436]	; 11780 <main@@Base+0x5a4>
   115c8:	add	r1, pc, r1
   115cc:	ldr	r2, [pc, #432]	; 11784 <main@@Base+0x5a8>
   115d0:	ldr	r2, [pc, r2]
   115d4:	ldr	r2, [r2]
   115d8:	str	r0, [sp, #24]
   115dc:	mov	r0, r1
   115e0:	mov	r1, r2
   115e4:	bl	10ae8 <printf@plt>
   115e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   115ec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   115f0:	str	r0, [sp, #20]
   115f4:	mov	r0, r1
   115f8:	mov	r1, r2
   115fc:	bl	110c4 <heap_remove@@Base>
   11600:	ldr	r1, [pc, #368]	; 11778 <main@@Base+0x59c>
   11604:	add	r2, pc, r1
   11608:	ldr	r1, [pc, #364]	; 1177c <main@@Base+0x5a0>
   1160c:	ldr	r1, [pc, r1]
   11610:	movw	r3, #0
   11614:	str	r3, [r1]
   11618:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1161c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11620:	str	r0, [sp, #16]
   11624:	mov	r0, r1
   11628:	mov	r1, r3
   1162c:	movw	r3, #42	; 0x2a
   11630:	bl	10f70 <heap_insere@@Base>
   11634:	ldr	r1, [pc, #308]	; 11770 <main@@Base+0x594>
   11638:	add	r1, pc, r1
   1163c:	ldr	r2, [pc, #304]	; 11774 <main@@Base+0x598>
   11640:	ldr	r2, [pc, r2]
   11644:	ldr	r2, [r2]
   11648:	str	r0, [sp, #12]
   1164c:	mov	r0, r1
   11650:	mov	r1, r2
   11654:	bl	10ae8 <printf@plt>
   11658:	movw	r1, #42	; 0x2a
   1165c:	str	r0, [sp, #8]
   11660:	mov	r0, r1
   11664:	bl	11868 <vetor_criaHeap@@Base>
   11668:	ldr	r1, [pc, #248]	; 11768 <main@@Base+0x58c>
   1166c:	add	r2, pc, r1
   11670:	ldr	r1, [pc, #244]	; 1176c <main@@Base+0x590>
   11674:	ldr	r1, [pc, r1]
   11678:	str	r0, [fp, #-24]	; 0xffffffe8
   1167c:	str	r1, [fp, #-32]	; 0xffffffe0
   11680:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11684:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11688:	bl	110dc <heap_carrega@@Base>
   1168c:	ldr	r0, [pc, #204]	; 11760 <main@@Base+0x584>
   11690:	add	r0, pc, r0
   11694:	ldr	r1, [pc, #200]	; 11764 <main@@Base+0x588>
   11698:	ldr	r1, [pc, r1]
   1169c:	ldr	r1, [r1]
   116a0:	bl	10ae8 <printf@plt>
   116a4:	movw	r1, #0
   116a8:	str	r1, [fp, #-20]	; 0xffffffec
   116ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   116b0:	cmp	r0, #42	; 0x2a
   116b4:	bge	116ec <main@@Base+0x510>
   116b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   116bc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   116c0:	bl	110c4 <heap_remove@@Base>
   116c4:	ldr	r1, [pc, #224]	; 117ac <main@@Base+0x5d0>
   116c8:	add	r1, pc, r1
   116cc:	str	r0, [sp, #4]
   116d0:	mov	r0, r1
   116d4:	ldr	r1, [sp, #4]
   116d8:	bl	10ae8 <printf@plt>
   116dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   116e0:	add	r0, r0, #1
   116e4:	str	r0, [fp, #-20]	; 0xffffffec
   116e8:	b	116ac <main@@Base+0x4d0>
   116ec:	movw	r0, #0
   116f0:	str	r0, [fp, #-4]
   116f4:	ldr	r0, [fp, #-4]
   116f8:	mov	sp, fp
   116fc:	pop	{fp, pc}
   11700:	andeq	r0, r0, sl, asr #22
   11704:	andeq	r1, r1, r0, lsl lr
   11708:	andeq	r0, r0, r8, asr fp
   1170c:	andeq	r0, r0, r4, lsr fp
   11710:	andeq	r0, r0, sl, lsr #22
   11714:	andeq	r1, r1, ip, ror #23
   11718:	andeq	r0, r0, r0, asr #18
   1171c:	andeq	r1, r1, ip, lsl #24
   11720:	andeq	r0, r0, r9, lsr fp
   11724:	andeq	r0, r0, r7, lsl fp
   11728:	andeq	r1, r1, r8, asr ip
   1172c:	andeq	r0, r0, r7, lsr #21
   11730:	andeq	r1, r1, r4, lsl #25
   11734:	andeq	r0, r0, r0, lsr fp
   11738:			; <UNDEFINED> instruction: 0x00011cb8
   1173c:	andeq	r0, r0, r7, lsl #22
   11740:	andeq	r1, r1, r4, ror #25
   11744:	andeq	r0, r0, r9, asr #22
   11748:	andeq	r1, r1, r8, lsl sp
   1174c:	andeq	r0, r0, r7, ror #22
   11750:	andeq	r1, r1, r4, asr #26
   11754:	andeq	r0, r0, r7, asr fp
   11758:	andeq	r1, r1, r8, ror #26
   1175c:	andeq	r1, r1, r8, lsl #27
   11760:	andeq	r0, r0, lr, ror #17
   11764:			; <UNDEFINED> instruction: 0x000119b0
   11768:	andeq	r0, r0, r4, lsl #14
   1176c:	ldrdeq	r1, [r1], -ip
   11770:	andeq	r0, r0, r7, asr #17
   11774:	andeq	r1, r1, r8, lsl #20
   11778:	andeq	r0, r0, pc, asr r8
   1177c:	andeq	r1, r1, ip, lsr sl
   11780:	muleq	r0, r0, sl
   11784:	andeq	r1, r1, r8, ror sl
   11788:	andeq	r0, r0, fp, asr #17
   1178c:	andeq	r1, r1, r8, lsr #21
   11790:			; <UNDEFINED> instruction: 0x00000ab5
   11794:	andeq	r1, r1, r4, ror #21
   11798:	andeq	r0, r0, fp, lsr r9
   1179c:	andeq	r1, r1, r8, lsl fp
   117a0:	ldrdeq	r0, [r0], -r9
   117a4:	andeq	r1, r1, ip, lsr fp
   117a8:	andeq	r1, r1, r0, ror #22
   117ac:	ldrdeq	r0, [r0], -r7
   117b0:	andeq	r0, r0, sl, lsl r9
   117b4:	andeq	r0, r0, r9, lsr #22
   117b8:	andeq	r0, r0, r2, asr #22
   117bc:	andeq	r0, r0, r9, asr #22
   117c0:	andeq	r0, r0, r0, asr fp
   117c4:	andeq	r0, r0, r8, lsr #18

000117c8 <vetor_cria@@Base>:
   117c8:	push	{fp, lr}
   117cc:	mov	fp, sp
   117d0:	sub	sp, sp, #16
   117d4:	str	r0, [sp, #8]
   117d8:	movw	r0, #12
   117dc:	bl	10b3c <malloc@plt>
   117e0:	str	r0, [sp, #4]
   117e4:	ldr	r0, [sp, #4]
   117e8:	movw	r1, #0
   117ec:	cmp	r0, r1
   117f0:	bne	11800 <vetor_cria@@Base+0x38>
   117f4:	movw	r0, #0
   117f8:	str	r0, [fp, #-4]
   117fc:	b	1185c <vetor_cria@@Base+0x94>
   11800:	ldr	r0, [sp, #4]
   11804:	movw	r1, #0
   11808:	str	r1, [r0]
   1180c:	ldr	r0, [sp, #8]
   11810:	ldr	r1, [sp, #4]
   11814:	str	r0, [r1, #4]
   11818:	ldr	r0, [sp, #8]
   1181c:	movw	r1, #4
   11820:	bl	10ad0 <calloc@plt>
   11824:	ldr	r1, [sp, #4]
   11828:	str	r0, [r1, #8]
   1182c:	ldr	r0, [sp, #4]
   11830:	ldr	r0, [r0, #8]
   11834:	movw	r1, #0
   11838:	cmp	r0, r1
   1183c:	bne	11854 <vetor_cria@@Base+0x8c>
   11840:	ldr	r0, [sp, #4]
   11844:	bl	10b18 <free@plt>
   11848:	movw	r0, #0
   1184c:	str	r0, [fp, #-4]
   11850:	b	1185c <vetor_cria@@Base+0x94>
   11854:	ldr	r0, [sp, #4]
   11858:	str	r0, [fp, #-4]
   1185c:	ldr	r0, [fp, #-4]
   11860:	mov	sp, fp
   11864:	pop	{fp, pc}

00011868 <vetor_criaHeap@@Base>:
   11868:	push	{fp, lr}
   1186c:	mov	fp, sp
   11870:	sub	sp, sp, #16
   11874:	str	r0, [sp, #8]
   11878:	movw	r0, #12
   1187c:	bl	10b3c <malloc@plt>
   11880:	str	r0, [sp, #4]
   11884:	ldr	r0, [sp, #4]
   11888:	movw	r1, #0
   1188c:	cmp	r0, r1
   11890:	bne	118a0 <vetor_criaHeap@@Base+0x38>
   11894:	movw	r0, #0
   11898:	str	r0, [fp, #-4]
   1189c:	b	11900 <vetor_criaHeap@@Base+0x98>
   118a0:	ldr	r0, [sp, #4]
   118a4:	movw	r1, #0
   118a8:	str	r1, [r0]
   118ac:	ldr	r0, [sp, #8]
   118b0:	ldr	r1, [sp, #4]
   118b4:	str	r0, [r1, #4]
   118b8:	ldr	r0, [sp, #8]
   118bc:	add	r0, r0, #1
   118c0:	movw	r1, #4
   118c4:	bl	10ad0 <calloc@plt>
   118c8:	ldr	r1, [sp, #4]
   118cc:	str	r0, [r1, #8]
   118d0:	ldr	r0, [sp, #4]
   118d4:	ldr	r0, [r0, #8]
   118d8:	movw	r1, #0
   118dc:	cmp	r0, r1
   118e0:	bne	118f8 <vetor_criaHeap@@Base+0x90>
   118e4:	ldr	r0, [sp, #4]
   118e8:	bl	10b18 <free@plt>
   118ec:	movw	r0, #0
   118f0:	str	r0, [fp, #-4]
   118f4:	b	11900 <vetor_criaHeap@@Base+0x98>
   118f8:	ldr	r0, [sp, #4]
   118fc:	str	r0, [fp, #-4]
   11900:	ldr	r0, [fp, #-4]
   11904:	mov	sp, fp
   11908:	pop	{fp, pc}

0001190c <elemento_cria@@Base>:
   1190c:	push	{fp, lr}
   11910:	mov	fp, sp
   11914:	sub	sp, sp, #16
   11918:	str	r0, [sp, #8]
   1191c:	str	r1, [sp, #4]
   11920:	movw	r0, #8
   11924:	bl	10b3c <malloc@plt>
   11928:	str	r0, [sp]
   1192c:	ldr	r0, [sp]
   11930:	movw	r1, #0
   11934:	cmp	r0, r1
   11938:	bne	11948 <elemento_cria@@Base+0x3c>
   1193c:	movw	r0, #0
   11940:	str	r0, [fp, #-4]
   11944:	b	1196c <elemento_cria@@Base+0x60>
   11948:	ldr	r0, [sp, #4]
   1194c:	bl	10b30 <strdup@plt>
   11950:	ldr	r1, [sp]
   11954:	str	r0, [r1, #4]
   11958:	ldr	r0, [sp, #8]
   1195c:	ldr	r1, [sp]
   11960:	str	r0, [r1]
   11964:	ldr	r0, [sp]
   11968:	str	r0, [fp, #-4]
   1196c:	ldr	r0, [fp, #-4]
   11970:	mov	sp, fp
   11974:	pop	{fp, pc}

00011978 <maior_que@@Base>:
   11978:	push	{fp, lr}
   1197c:	mov	fp, sp
   11980:	sub	sp, sp, #16
   11984:	str	r0, [sp, #8]
   11988:	str	r1, [sp, #4]
   1198c:	ldr	r0, [sp, #8]
   11990:	movw	r1, #0
   11994:	cmp	r0, r1
   11998:	beq	119ac <maior_que@@Base+0x34>
   1199c:	ldr	r0, [sp, #4]
   119a0:	movw	r1, #0
   119a4:	cmp	r0, r1
   119a8:	bne	119c4 <maior_que@@Base+0x4c>
   119ac:	ldr	r0, [pc, #108]	; 11a20 <maior_que@@Base+0xa8>
   119b0:	add	r0, pc, r0
   119b4:	bl	10ae8 <printf@plt>
   119b8:	movw	r1, #0
   119bc:	str	r1, [fp, #-4]
   119c0:	b	11a0c <maior_que@@Base+0x94>
   119c4:	ldr	r0, [pc, #80]	; 11a1c <maior_que@@Base+0xa4>
   119c8:	ldr	r0, [pc, r0]
   119cc:	ldr	r0, [r0]
   119d0:	bl	10b0c <fflush@plt>
   119d4:	ldr	r1, [pc, #60]	; 11a18 <maior_que@@Base+0xa0>
   119d8:	ldr	r1, [pc, r1]
   119dc:	ldr	r2, [r1]
   119e0:	add	r2, r2, #1
   119e4:	str	r2, [r1]
   119e8:	ldr	r1, [sp, #8]
   119ec:	ldr	r1, [r1]
   119f0:	ldr	r2, [sp, #4]
   119f4:	ldr	r2, [r2]
   119f8:	cmp	r1, r2
   119fc:	movw	r1, #0
   11a00:	movgt	r1, #1
   11a04:	and	r1, r1, #1
   11a08:	str	r1, [fp, #-4]
   11a0c:	ldr	r0, [fp, #-4]
   11a10:	mov	sp, fp
   11a14:	pop	{fp, pc}
   11a18:	andeq	r1, r1, r0, ror r6
   11a1c:	andeq	r1, r1, ip, lsl #13
   11a20:	strdeq	r0, [r0], -r3

00011a24 <maior_que_HeapSort@@Base>:
   11a24:	push	{fp, lr}
   11a28:	mov	fp, sp
   11a2c:	sub	sp, sp, #16
   11a30:	str	r0, [sp, #8]
   11a34:	str	r1, [sp, #4]
   11a38:	ldr	r0, [sp, #8]
   11a3c:	movw	r1, #0
   11a40:	cmp	r0, r1
   11a44:	beq	11a58 <maior_que_HeapSort@@Base+0x34>
   11a48:	ldr	r0, [sp, #4]
   11a4c:	movw	r1, #0
   11a50:	cmp	r0, r1
   11a54:	bne	11a70 <maior_que_HeapSort@@Base+0x4c>
   11a58:	ldr	r0, [pc, #124]	; 11adc <maior_que_HeapSort@@Base+0xb8>
   11a5c:	add	r0, pc, r0
   11a60:	bl	10ae8 <printf@plt>
   11a64:	movw	r1, #0
   11a68:	str	r1, [fp, #-4]
   11a6c:	b	11ac8 <maior_que_HeapSort@@Base+0xa4>
   11a70:	ldr	r0, [pc, #96]	; 11ad8 <maior_que_HeapSort@@Base+0xb4>
   11a74:	ldr	r0, [pc, r0]
   11a78:	ldr	r0, [r0]
   11a7c:	bl	10b0c <fflush@plt>
   11a80:	ldr	r1, [pc, #76]	; 11ad4 <maior_que_HeapSort@@Base+0xb0>
   11a84:	ldr	r1, [pc, r1]
   11a88:	ldr	r2, [r1]
   11a8c:	add	r2, r2, #1
   11a90:	str	r2, [r1]
   11a94:	ldr	r1, [sp, #8]
   11a98:	ldr	r1, [r1, #4]
   11a9c:	ldr	r2, [sp, #4]
   11aa0:	ldr	r2, [r2, #4]
   11aa4:	str	r0, [sp]
   11aa8:	mov	r0, r1
   11aac:	mov	r1, r2
   11ab0:	bl	10adc <strcmp@plt>
   11ab4:	cmp	r0, #0
   11ab8:	movw	r0, #0
   11abc:	movlt	r0, #1
   11ac0:	and	r0, r0, #1
   11ac4:	str	r0, [fp, #-4]
   11ac8:	ldr	r0, [fp, #-4]
   11acc:	mov	sp, fp
   11ad0:	pop	{fp, pc}
   11ad4:	andeq	r1, r1, r4, asr #11
   11ad8:	andeq	r1, r1, r0, ror #11
   11adc:	andeq	r0, r0, r7, asr #12

00011ae0 <vetor_imprime@@Base>:
   11ae0:	push	{fp, lr}
   11ae4:	mov	fp, sp
   11ae8:	sub	sp, sp, #16
   11aec:	str	r0, [fp, #-4]
   11af0:	ldr	r0, [fp, #-4]
   11af4:	ldr	r0, [r0]
   11af8:	cmp	r0, #0
   11afc:	ble	11b30 <vetor_imprime@@Base+0x50>
   11b00:	ldr	r0, [pc, #176]	; 11bb8 <vetor_imprime@@Base+0xd8>
   11b04:	add	r0, pc, r0
   11b08:	ldr	r1, [fp, #-4]
   11b0c:	ldr	r1, [r1, #8]
   11b10:	ldr	r1, [r1]
   11b14:	ldr	r1, [r1, #4]
   11b18:	ldr	r2, [fp, #-4]
   11b1c:	ldr	r2, [r2, #8]
   11b20:	ldr	r2, [r2]
   11b24:	ldr	r2, [r2]
   11b28:	bl	10ae8 <printf@plt>
   11b2c:	b	11b40 <vetor_imprime@@Base+0x60>
   11b30:	ldr	r0, [pc, #124]	; 11bb4 <vetor_imprime@@Base+0xd4>
   11b34:	add	r0, pc, r0
   11b38:	bl	10ae8 <printf@plt>
   11b3c:	b	11bac <vetor_imprime@@Base+0xcc>
   11b40:	movw	r0, #1
   11b44:	str	r0, [sp, #8]
   11b48:	ldr	r0, [sp, #8]
   11b4c:	ldr	r1, [fp, #-4]
   11b50:	ldr	r1, [r1]
   11b54:	cmp	r0, r1
   11b58:	bge	11ba0 <vetor_imprime@@Base+0xc0>
   11b5c:	ldr	r0, [pc, #92]	; 11bc0 <vetor_imprime@@Base+0xe0>
   11b60:	add	r0, pc, r0
   11b64:	ldr	r1, [fp, #-4]
   11b68:	ldr	r1, [r1, #8]
   11b6c:	ldr	r2, [sp, #8]
   11b70:	ldr	r2, [r1, r2, lsl #2]!
   11b74:	ldr	r2, [r2, #4]
   11b78:	ldr	r1, [r1]
   11b7c:	ldr	r1, [r1]
   11b80:	str	r1, [sp, #4]
   11b84:	mov	r1, r2
   11b88:	ldr	r2, [sp, #4]
   11b8c:	bl	10ae8 <printf@plt>
   11b90:	ldr	r0, [sp, #8]
   11b94:	add	r0, r0, #1
   11b98:	str	r0, [sp, #8]
   11b9c:	b	11b48 <vetor_imprime@@Base+0x68>
   11ba0:	ldr	r0, [pc, #20]	; 11bbc <vetor_imprime@@Base+0xdc>
   11ba4:	add	r0, pc, r0
   11ba8:	bl	10ae8 <printf@plt>
   11bac:	mov	sp, fp
   11bb0:	pop	{fp, pc}
   11bb4:	muleq	r0, r8, r5
   11bb8:	andeq	r0, r0, fp, lsr #11
   11bbc:	andeq	r0, r0, r2, lsr r2
   11bc0:	andeq	r0, r0, r4, lsl #11

00011bc4 <vetor_imprimeHeap@@Base>:
   11bc4:	push	{fp, lr}
   11bc8:	mov	fp, sp
   11bcc:	sub	sp, sp, #16
   11bd0:	str	r0, [fp, #-4]
   11bd4:	ldr	r0, [fp, #-4]
   11bd8:	ldr	r0, [r0]
   11bdc:	cmp	r0, #0
   11be0:	ble	11c14 <vetor_imprimeHeap@@Base+0x50>
   11be4:	ldr	r0, [pc, #176]	; 11c9c <vetor_imprimeHeap@@Base+0xd8>
   11be8:	add	r0, pc, r0
   11bec:	ldr	r1, [fp, #-4]
   11bf0:	ldr	r1, [r1, #8]
   11bf4:	ldr	r1, [r1, #4]
   11bf8:	ldr	r1, [r1, #4]
   11bfc:	ldr	r2, [fp, #-4]
   11c00:	ldr	r2, [r2, #8]
   11c04:	ldr	r2, [r2, #4]
   11c08:	ldr	r2, [r2]
   11c0c:	bl	10ae8 <printf@plt>
   11c10:	b	11c24 <vetor_imprimeHeap@@Base+0x60>
   11c14:	ldr	r0, [pc, #124]	; 11c98 <vetor_imprimeHeap@@Base+0xd4>
   11c18:	add	r0, pc, r0
   11c1c:	bl	10ae8 <printf@plt>
   11c20:	b	11c90 <vetor_imprimeHeap@@Base+0xcc>
   11c24:	movw	r0, #2
   11c28:	str	r0, [sp, #8]
   11c2c:	ldr	r0, [sp, #8]
   11c30:	ldr	r1, [fp, #-4]
   11c34:	ldr	r1, [r1]
   11c38:	cmp	r0, r1
   11c3c:	bge	11c84 <vetor_imprimeHeap@@Base+0xc0>
   11c40:	ldr	r0, [pc, #92]	; 11ca4 <vetor_imprimeHeap@@Base+0xe0>
   11c44:	add	r0, pc, r0
   11c48:	ldr	r1, [fp, #-4]
   11c4c:	ldr	r1, [r1, #8]
   11c50:	ldr	r2, [sp, #8]
   11c54:	ldr	r2, [r1, r2, lsl #2]!
   11c58:	ldr	r2, [r2, #4]
   11c5c:	ldr	r1, [r1]
   11c60:	ldr	r1, [r1]
   11c64:	str	r1, [sp, #4]
   11c68:	mov	r1, r2
   11c6c:	ldr	r2, [sp, #4]
   11c70:	bl	10ae8 <printf@plt>
   11c74:	ldr	r0, [sp, #8]
   11c78:	add	r0, r0, #1
   11c7c:	str	r0, [sp, #8]
   11c80:	b	11c2c <vetor_imprimeHeap@@Base+0x68>
   11c84:	ldr	r0, [pc, #20]	; 11ca0 <vetor_imprimeHeap@@Base+0xdc>
   11c88:	add	r0, pc, r0
   11c8c:	bl	10ae8 <printf@plt>
   11c90:	mov	sp, fp
   11c94:	pop	{fp, pc}
   11c98:			; <UNDEFINED> instruction: 0x000004b4
   11c9c:	andeq	r0, r0, r7, asr #9
   11ca0:	andeq	r0, r0, lr, asr #2
   11ca4:	andeq	r0, r0, r0, lsr #9

00011ca8 <__libc_csu_init@@Base>:
   11ca8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11cac:	mov	r7, r0
   11cb0:	ldr	r6, [pc, #72]	; 11d00 <__libc_csu_init@@Base+0x58>
   11cb4:	ldr	r5, [pc, #72]	; 11d04 <__libc_csu_init@@Base+0x5c>
   11cb8:	add	r6, pc, r6
   11cbc:	add	r5, pc, r5
   11cc0:	sub	r6, r6, r5
   11cc4:	mov	r8, r1
   11cc8:	mov	r9, r2
   11ccc:	bl	10ab0 <calloc@plt-0x20>
   11cd0:	asrs	r6, r6, #2
   11cd4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11cd8:	mov	r4, #0
   11cdc:	add	r4, r4, #1
   11ce0:	ldr	r3, [r5], #4
   11ce4:	mov	r2, r9
   11ce8:	mov	r1, r8
   11cec:	mov	r0, r7
   11cf0:	blx	r3
   11cf4:	cmp	r6, r4
   11cf8:	bne	11cdc <__libc_csu_init@@Base+0x34>
   11cfc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d00:	andeq	r1, r1, ip, asr #4
   11d04:	andeq	r1, r1, r4, asr #4

00011d08 <__libc_csu_fini@@Base>:
   11d08:	bx	lr

Disassembly of section .fini:

00011d0c <.fini>:
   11d0c:	push	{r3, lr}
   11d10:	pop	{r3, pc}
