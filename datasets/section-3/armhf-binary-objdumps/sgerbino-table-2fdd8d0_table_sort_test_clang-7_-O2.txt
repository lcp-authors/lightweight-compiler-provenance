
../repos/sgerbino-table-2fdd8d0/bin/table_sort_test:     file format elf32-littlearm


Disassembly of section .init:

00011f5c <.init>:
   11f5c:	push	{r3, lr}
   11f60:	bl	12084 <_start@@Base+0x3c>
   11f64:	pop	{r3, pc}

Disassembly of section .plt:

00011f68 <calloc@plt-0x14>:
   11f68:	push	{lr}		; (str lr, [sp, #-4]!)
   11f6c:	ldr	lr, [pc, #4]	; 11f78 <calloc@plt-0x4>
   11f70:	add	lr, pc, lr
   11f74:	ldr	pc, [lr, #8]!
   11f78:	andeq	r4, r1, r8, lsl #1

00011f7c <calloc@plt>:
   11f7c:	add	ip, pc, #0, 12
   11f80:	add	ip, ip, #20, 20	; 0x14000
   11f84:	ldr	pc, [ip, #136]!	; 0x88

00011f88 <strcmp@plt>:
   11f88:	add	ip, pc, #0, 12
   11f8c:	add	ip, ip, #20, 20	; 0x14000
   11f90:	ldr	pc, [ip, #128]!	; 0x80

00011f94 <printf@plt>:
   11f94:	add	ip, pc, #0, 12
   11f98:	add	ip, ip, #20, 20	; 0x14000
   11f9c:	ldr	pc, [ip, #120]!	; 0x78

00011fa0 <free@plt>:
   11fa0:	add	ip, pc, #0, 12
   11fa4:	add	ip, ip, #20, 20	; 0x14000
   11fa8:	ldr	pc, [ip, #112]!	; 0x70

00011fac <time@plt>:
   11fac:	add	ip, pc, #0, 12
   11fb0:	add	ip, ip, #20, 20	; 0x14000
   11fb4:	ldr	pc, [ip, #104]!	; 0x68

00011fb8 <realloc@plt>:
   11fb8:	add	ip, pc, #0, 12
   11fbc:	add	ip, ip, #20, 20	; 0x14000
   11fc0:	ldr	pc, [ip, #96]!	; 0x60

00011fc4 <strcpy@plt>:
   11fc4:	add	ip, pc, #0, 12
   11fc8:	add	ip, ip, #20, 20	; 0x14000
   11fcc:	ldr	pc, [ip, #88]!	; 0x58

00011fd0 <puts@plt>:
   11fd0:	add	ip, pc, #0, 12
   11fd4:	add	ip, ip, #20, 20	; 0x14000
   11fd8:	ldr	pc, [ip, #80]!	; 0x50

00011fdc <malloc@plt>:
   11fdc:	add	ip, pc, #0, 12
   11fe0:	add	ip, ip, #20, 20	; 0x14000
   11fe4:	ldr	pc, [ip, #72]!	; 0x48

00011fe8 <__libc_start_main@plt>:
   11fe8:	add	ip, pc, #0, 12
   11fec:	add	ip, ip, #20, 20	; 0x14000
   11ff0:	ldr	pc, [ip, #64]!	; 0x40

00011ff4 <__gmon_start__@plt>:
   11ff4:	add	ip, pc, #0, 12
   11ff8:	add	ip, ip, #20, 20	; 0x14000
   11ffc:	ldr	pc, [ip, #56]!	; 0x38

00012000 <strlen@plt>:
   12000:	add	ip, pc, #0, 12
   12004:	add	ip, ip, #20, 20	; 0x14000
   12008:	ldr	pc, [ip, #48]!	; 0x30

0001200c <srand@plt>:
   1200c:	add	ip, pc, #0, 12
   12010:	add	ip, ip, #20, 20	; 0x14000
   12014:	ldr	pc, [ip, #40]!	; 0x28

00012018 <snprintf@plt>:
   12018:	add	ip, pc, #0, 12
   1201c:	add	ip, ip, #20, 20	; 0x14000
   12020:	ldr	pc, [ip, #32]!

00012024 <__isoc99_sscanf@plt>:
   12024:	add	ip, pc, #0, 12
   12028:	add	ip, ip, #20, 20	; 0x14000
   1202c:	ldr	pc, [ip, #24]!

00012030 <rand@plt>:
   12030:	add	ip, pc, #0, 12
   12034:	add	ip, ip, #20, 20	; 0x14000
   12038:	ldr	pc, [ip, #16]!

0001203c <abort@plt>:
   1203c:	add	ip, pc, #0, 12
   12040:	add	ip, ip, #20, 20	; 0x14000
   12044:	ldr	pc, [ip, #8]!

Disassembly of section .text:

00012048 <_start@@Base>:
   12048:	mov	fp, #0
   1204c:	mov	lr, #0
   12050:	pop	{r1}		; (ldr r1, [sp], #4)
   12054:	mov	r2, sp
   12058:	push	{r2}		; (str r2, [sp, #-4]!)
   1205c:	push	{r0}		; (str r0, [sp, #-4]!)
   12060:	ldr	ip, [pc, #16]	; 12078 <_start@@Base+0x30>
   12064:	push	{ip}		; (str ip, [sp, #-4]!)
   12068:	ldr	r0, [pc, #12]	; 1207c <_start@@Base+0x34>
   1206c:	ldr	r3, [pc, #12]	; 12080 <_start@@Base+0x38>
   12070:	bl	11fe8 <__libc_start_main@plt>
   12074:	bl	1203c <abort@plt>
   12078:	andeq	r5, r1, ip, lsl #25
   1207c:	andeq	r2, r1, r8, lsr r1
   12080:	andeq	r5, r1, ip, lsr #24
   12084:	ldr	r3, [pc, #20]	; 120a0 <_start@@Base+0x58>
   12088:	ldr	r2, [pc, #20]	; 120a4 <_start@@Base+0x5c>
   1208c:	add	r3, pc, r3
   12090:	ldr	r2, [r3, r2]
   12094:	cmp	r2, #0
   12098:	bxeq	lr
   1209c:	b	11ff4 <__gmon_start__@plt>
   120a0:	andeq	r3, r1, ip, ror #30
   120a4:	andeq	r0, r0, r0, asr r0
   120a8:	ldr	r0, [pc, #24]	; 120c8 <_start@@Base+0x80>
   120ac:	ldr	r3, [pc, #24]	; 120cc <_start@@Base+0x84>
   120b0:	cmp	r3, r0
   120b4:	bxeq	lr
   120b8:	ldr	r3, [pc, #16]	; 120d0 <_start@@Base+0x88>
   120bc:	cmp	r3, #0
   120c0:	bxeq	lr
   120c4:	bx	r3
   120c8:	andeq	r6, r2, ip, asr r0
   120cc:	andeq	r6, r2, ip, asr r0
   120d0:	andeq	r0, r0, r0
   120d4:	ldr	r0, [pc, #36]	; 12100 <_start@@Base+0xb8>
   120d8:	ldr	r1, [pc, #36]	; 12104 <_start@@Base+0xbc>
   120dc:	sub	r1, r1, r0
   120e0:	asr	r1, r1, #2
   120e4:	add	r1, r1, r1, lsr #31
   120e8:	asrs	r1, r1, #1
   120ec:	bxeq	lr
   120f0:	ldr	r3, [pc, #16]	; 12108 <_start@@Base+0xc0>
   120f4:	cmp	r3, #0
   120f8:	bxeq	lr
   120fc:	bx	r3
   12100:	andeq	r6, r2, ip, asr r0
   12104:	andeq	r6, r2, ip, asr r0
   12108:	andeq	r0, r0, r0
   1210c:	push	{r4, lr}
   12110:	ldr	r4, [pc, #24]	; 12130 <_start@@Base+0xe8>
   12114:	ldrb	r3, [r4]
   12118:	cmp	r3, #0
   1211c:	popne	{r4, pc}
   12120:	bl	120a8 <_start@@Base+0x60>
   12124:	mov	r3, #1
   12128:	strb	r3, [r4]
   1212c:	pop	{r4, pc}
   12130:	andeq	r6, r2, ip, asr r0
   12134:	b	120d4 <_start@@Base+0x8c>

00012138 <main@@Base>:
   12138:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1213c:	add	fp, sp, #28
   12140:	sub	sp, sp, #356	; 0x164
   12144:	sub	r0, fp, #92	; 0x5c
   12148:	bl	11fac <time@plt>
   1214c:	bl	1200c <srand@plt>
   12150:	bl	12030 <rand@plt>
   12154:	sub	r4, fp, #88	; 0x58
   12158:	mov	r5, r0
   1215c:	mov	r0, r4
   12160:	bl	125c8 <table_init@@Base>
   12164:	movw	r0, #34079	; 0x851f
   12168:	mov	r6, #0
   1216c:	movt	r0, #20971	; 0x51eb
   12170:	umull	r0, r1, r5, r0
   12174:	lsr	r0, r1, #5
   12178:	mov	r1, #100	; 0x64
   1217c:	mls	r0, r0, r1, r5
   12180:	add	r5, r0, #100	; 0x64
   12184:	mov	r0, r4
   12188:	bl	147a8 <table_add_row@@Base>
   1218c:	add	r6, r6, #1
   12190:	cmp	r6, r5
   12194:	bcc	12184 <main@@Base+0x4c>
   12198:	sub	r8, fp, #88	; 0x58
   1219c:	mov	r0, r8
   121a0:	bl	147a0 <table_get_row_length@@Base>
   121a4:	mov	r9, r0
   121a8:	bl	12030 <rand@plt>
   121ac:	movw	r1, #52429	; 0xcccd
   121b0:	ldr	r4, [pc, #928]	; 12558 <main@@Base+0x420>
   121b4:	mov	r5, #0
   121b8:	add	r7, sp, #37	; 0x25
   121bc:	movt	r1, #52428	; 0xcccc
   121c0:	umull	r1, r2, r0, r1
   121c4:	lsr	r1, r2, #2
   121c8:	add	r1, r1, r1, lsl #2
   121cc:	add	r4, pc, r4
   121d0:	sub	r0, r0, r1
   121d4:	add	r6, r0, #2
   121d8:	mov	r0, r7
   121dc:	mov	r1, #255	; 0xff
   121e0:	mov	r2, r4
   121e4:	mov	r3, r5
   121e8:	bl	12018 <snprintf@plt>
   121ec:	mov	r0, r8
   121f0:	mov	r1, r7
   121f4:	mov	r2, #0
   121f8:	bl	13b04 <table_add_column@@Base>
   121fc:	add	r5, r5, #1
   12200:	cmp	r5, r6
   12204:	bcc	121d8 <main@@Base+0xa0>
   12208:	sub	r0, fp, #88	; 0x58
   1220c:	bl	13a7c <table_get_column_length@@Base>
   12210:	mov	r8, r0
   12214:	cmp	r0, #1
   12218:	blt	12278 <main@@Base+0x140>
   1221c:	movw	r6, #26215	; 0x6667
   12220:	mov	r4, #0
   12224:	sub	r5, fp, #88	; 0x58
   12228:	movt	r6, #26214	; 0x6666
   1222c:	cmp	r9, #1
   12230:	blt	1226c <main@@Base+0x134>
   12234:	mov	r7, #0
   12238:	bl	12030 <rand@plt>
   1223c:	smmul	r1, r0, r6
   12240:	asr	r2, r1, #3
   12244:	add	r1, r2, r1, lsr #31
   12248:	mov	r2, r4
   1224c:	add	r1, r1, r1, lsl #2
   12250:	sub	r3, r0, r1, lsl #2
   12254:	mov	r0, r5
   12258:	mov	r1, r7
   1225c:	bl	14d04 <table_set_int@@Base>
   12260:	add	r7, r7, #1
   12264:	cmp	r9, r7
   12268:	bne	12238 <main@@Base+0x100>
   1226c:	add	r4, r4, #1
   12270:	cmp	r4, r8
   12274:	bne	1222c <main@@Base+0xf4>
   12278:	mov	r0, r8
   1227c:	mov	r1, #4
   12280:	bl	11f7c <calloc@plt>
   12284:	mov	r5, r0
   12288:	mov	r0, r8
   1228c:	mov	r1, #4
   12290:	bl	11f7c <calloc@plt>
   12294:	mov	r6, r0
   12298:	cmp	r8, #1
   1229c:	blt	122c8 <main@@Base+0x190>
   122a0:	mov	r4, #0
   122a4:	str	r4, [r5, r4, lsl #2]
   122a8:	bl	12030 <rand@plt>
   122ac:	add	r1, r0, r0, lsr #31
   122b0:	bic	r1, r1, #1
   122b4:	sub	r0, r0, r1
   122b8:	str	r0, [r6, r4, lsl #2]
   122bc:	add	r4, r4, #1
   122c0:	cmp	r8, r4
   122c4:	bne	122a4 <main@@Base+0x16c>
   122c8:	sub	r0, fp, #88	; 0x58
   122cc:	mov	r1, r5
   122d0:	mov	r2, r6
   122d4:	mov	r3, r8
   122d8:	bl	1583c <table_column_sort@@Base>
   122dc:	cmp	r9, #1
   122e0:	blt	12524 <main@@Base+0x3ec>
   122e4:	cmp	r8, #1
   122e8:	mov	r0, #0
   122ec:	str	r5, [sp, #8]
   122f0:	mov	r4, #0
   122f4:	sub	r5, fp, #88	; 0x58
   122f8:	str	r8, [sp, #24]
   122fc:	str	r9, [sp, #20]
   12300:	movwlt	r0, #1
   12304:	str	r0, [sp, #16]
   12308:	mvn	r0, #0
   1230c:	str	r0, [sp, #28]
   12310:	mov	r0, #0
   12314:	str	r0, [sp, #12]
   12318:	mvn	r0, #0
   1231c:	str	r0, [sp, #32]
   12320:	ldr	r1, [sp, #16]
   12324:	clz	r0, r4
   12328:	lsr	r0, r0, #5
   1232c:	orrs	r0, r0, r1
   12330:	bne	1240c <main@@Base+0x2d4>
   12334:	sub	r8, r4, #1
   12338:	mov	r9, #0
   1233c:	cmp	r9, #0
   12340:	beq	12380 <main@@Base+0x248>
   12344:	mov	r7, r9
   12348:	subs	r7, r7, #1
   1234c:	blt	12380 <main@@Base+0x248>
   12350:	mov	r0, r5
   12354:	mov	r1, r4
   12358:	mov	r2, r7
   1235c:	bl	144f8 <table_get_int@@Base>
   12360:	mov	sl, r0
   12364:	mov	r0, r5
   12368:	mov	r1, r8
   1236c:	mov	r2, r7
   12370:	bl	144f8 <table_get_int@@Base>
   12374:	cmp	sl, r0
   12378:	beq	12348 <main@@Base+0x210>
   1237c:	b	1240c <main@@Base+0x2d4>
   12380:	mov	sl, r6
   12384:	ldr	r6, [r6, r9, lsl #2]
   12388:	mov	r0, r5
   1238c:	mov	r1, r8
   12390:	mov	r2, r9
   12394:	bl	144f8 <table_get_int@@Base>
   12398:	mov	r7, r0
   1239c:	mov	r0, r5
   123a0:	mov	r1, r4
   123a4:	mov	r2, r9
   123a8:	bl	144f8 <table_get_int@@Base>
   123ac:	cmp	r6, #0
   123b0:	beq	123cc <main@@Base+0x294>
   123b4:	cmp	r7, r0
   123b8:	mov	r6, sl
   123bc:	bge	123fc <main@@Base+0x2c4>
   123c0:	ldr	r0, [pc, #408]	; 12560 <main@@Base+0x428>
   123c4:	add	r0, pc, r0
   123c8:	b	123e0 <main@@Base+0x2a8>
   123cc:	cmp	r7, r0
   123d0:	mov	r6, sl
   123d4:	ble	123fc <main@@Base+0x2c4>
   123d8:	ldr	r0, [pc, #380]	; 1255c <main@@Base+0x424>
   123dc:	add	r0, pc, r0
   123e0:	mov	r1, r4
   123e4:	mov	r2, r9
   123e8:	bl	11f94 <printf@plt>
   123ec:	mvn	r0, #0
   123f0:	str	r4, [sp, #32]
   123f4:	str	r9, [sp, #28]
   123f8:	str	r0, [sp, #12]
   123fc:	ldr	r0, [sp, #24]
   12400:	add	r9, r9, #1
   12404:	cmp	r9, r0
   12408:	blt	1233c <main@@Base+0x204>
   1240c:	ldr	r9, [sp, #20]
   12410:	add	r4, r4, #1
   12414:	cmp	r4, r9
   12418:	bne	12320 <main@@Base+0x1e8>
   1241c:	ldr	r0, [sp, #32]
   12420:	cmn	r0, #1
   12424:	beq	1252c <main@@Base+0x3f4>
   12428:	sub	r4, fp, #88	; 0x58
   1242c:	str	r6, [sp, #20]
   12430:	mov	r0, r4
   12434:	bl	147a0 <table_get_row_length@@Base>
   12438:	mov	r0, r4
   1243c:	bl	147a0 <table_get_row_length@@Base>
   12440:	mov	r4, r0
   12444:	ldr	r0, [pc, #280]	; 12564 <main@@Base+0x42c>
   12448:	add	r0, pc, r0
   1244c:	bl	11fd0 <puts@plt>
   12450:	cmp	r4, #1
   12454:	str	r4, [sp, #24]
   12458:	blt	12518 <main@@Base+0x3e0>
   1245c:	ldr	r9, [pc, #260]	; 12568 <main@@Base+0x430>
   12460:	ldr	sl, [pc, #260]	; 1256c <main@@Base+0x434>
   12464:	mov	r5, #0
   12468:	sub	r6, fp, #88	; 0x58
   1246c:	mov	r4, #255	; 0xff
   12470:	add	r7, sp, #37	; 0x25
   12474:	add	r9, pc, r9
   12478:	add	sl, pc, sl
   1247c:	mov	r0, r6
   12480:	bl	13a7c <table_get_column_length@@Base>
   12484:	cmp	r0, #1
   12488:	blt	124e4 <main@@Base+0x3ac>
   1248c:	mov	r8, #0
   12490:	mov	r0, r6
   12494:	mov	r1, r5
   12498:	mov	r2, r8
   1249c:	mov	r3, r7
   124a0:	str	r4, [sp]
   124a4:	bl	12fc4 <table_cell_to_buffer@@Base>
   124a8:	ldr	r0, [sp, #32]
   124ac:	cmp	r0, r5
   124b0:	ldreq	r0, [sp, #28]
   124b4:	cmpeq	r0, r8
   124b8:	beq	124c4 <main@@Base+0x38c>
   124bc:	mov	r0, sl
   124c0:	b	124c8 <main@@Base+0x390>
   124c4:	mov	r0, r9
   124c8:	mov	r1, r7
   124cc:	bl	11f94 <printf@plt>
   124d0:	mov	r0, r6
   124d4:	add	r8, r8, #1
   124d8:	bl	13a7c <table_get_column_length@@Base>
   124dc:	cmp	r8, r0
   124e0:	blt	12490 <main@@Base+0x358>
   124e4:	ldr	r0, [sp, #32]
   124e8:	cmp	r0, r5
   124ec:	bne	124fc <main@@Base+0x3c4>
   124f0:	ldr	r0, [pc, #120]	; 12570 <main@@Base+0x438>
   124f4:	add	r0, pc, r0
   124f8:	b	12504 <main@@Base+0x3cc>
   124fc:	ldr	r0, [pc, #112]	; 12574 <main@@Base+0x43c>
   12500:	add	r0, pc, r0
   12504:	bl	11fd0 <puts@plt>
   12508:	ldr	r0, [sp, #24]
   1250c:	add	r5, r5, #1
   12510:	cmp	r5, r0
   12514:	bne	1247c <main@@Base+0x344>
   12518:	ldr	r5, [sp, #8]
   1251c:	ldr	r6, [sp, #20]
   12520:	b	12530 <main@@Base+0x3f8>
   12524:	mov	r4, #0
   12528:	b	12534 <main@@Base+0x3fc>
   1252c:	ldr	r5, [sp, #8]
   12530:	ldr	r4, [sp, #12]
   12534:	sub	r0, fp, #88	; 0x58
   12538:	bl	12624 <table_destroy@@Base>
   1253c:	mov	r0, r5
   12540:	bl	11fa0 <free@plt>
   12544:	mov	r0, r6
   12548:	bl	11fa0 <free@plt>
   1254c:	mov	r0, r4
   12550:	sub	sp, fp, #28
   12554:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12558:	andeq	r3, r0, r8, asr #21
   1255c:			; <UNDEFINED> instruction: 0x000038bf
   12560:	andeq	r3, r0, pc, lsl r9
   12564:	andeq	r3, r0, lr, ror #17
   12568:			; <UNDEFINED> instruction: 0x000038b8
   1256c:			; <UNDEFINED> instruction: 0x000038b9
   12570:	andeq	r3, r0, r1, asr #16
   12574:	andeq	r3, r0, r6, lsr r8

00012578 <table_new@@Base>:
   12578:	push	{fp, lr}
   1257c:	mov	fp, sp
   12580:	mov	r0, #56	; 0x38
   12584:	bl	11fdc <malloc@plt>
   12588:	mov	r1, #0
   1258c:	mov	r2, #10
   12590:	mov	r3, #20
   12594:	vmov.i32	q8, #0	; 0x00000000
   12598:	str	r1, [r0]
   1259c:	stmib	r0, {r1, r2}
   125a0:	str	r1, [r0, #12]
   125a4:	str	r1, [r0, #16]
   125a8:	str	r1, [r0, #20]
   125ac:	str	r3, [r0, #24]
   125b0:	str	r1, [r0, #28]
   125b4:	str	r2, [r0, #48]	; 0x30
   125b8:	str	r1, [r0, #52]	; 0x34
   125bc:	add	r1, r0, #32
   125c0:	vst1.32	{d16-d17}, [r1]
   125c4:	pop	{fp, pc}

000125c8 <table_init@@Base>:
   125c8:	mov	r1, #0
   125cc:	mov	r2, #10
   125d0:	mov	r3, #20
   125d4:	vmov.i32	q8, #0	; 0x00000000
   125d8:	str	r1, [r0]
   125dc:	stmib	r0, {r1, r2}
   125e0:	str	r1, [r0, #12]
   125e4:	str	r1, [r0, #16]
   125e8:	str	r1, [r0, #20]
   125ec:	str	r3, [r0, #24]
   125f0:	str	r1, [r0, #28]
   125f4:	str	r2, [r0, #48]	; 0x30
   125f8:	str	r1, [r0, #52]	; 0x34
   125fc:	add	r0, r0, #32
   12600:	vst1.32	{d16-d17}, [r0]
   12604:	bx	lr

00012608 <table_delete@@Base>:
   12608:	push	{r4, sl, fp, lr}
   1260c:	add	fp, sp, #8
   12610:	mov	r4, r0
   12614:	bl	12624 <table_destroy@@Base>
   12618:	mov	r0, r4
   1261c:	pop	{r4, sl, fp, lr}
   12620:	b	11fa0 <free@plt>

00012624 <table_destroy@@Base>:
   12624:	cmp	r0, #0
   12628:	bxeq	lr
   1262c:	push	{r4, r5, r6, sl, fp, lr}
   12630:	add	fp, sp, #16
   12634:	mvn	r1, #0
   12638:	mvn	r2, #0
   1263c:	mov	r3, #64	; 0x40
   12640:	mov	r4, r0
   12644:	bl	12ec0 <table_notify@@Base>
   12648:	mov	r0, r4
   1264c:	bl	147a0 <table_get_row_length@@Base>
   12650:	cmp	r0, #1
   12654:	blt	12678 <table_destroy@@Base+0x54>
   12658:	mov	r5, r0
   1265c:	mov	r6, #0
   12660:	mov	r0, r4
   12664:	mov	r1, r6
   12668:	bl	14748 <table_row_destroy@@Base>
   1266c:	add	r6, r6, #1
   12670:	cmp	r5, r6
   12674:	bne	12660 <table_destroy@@Base+0x3c>
   12678:	ldr	r0, [r4, #16]
   1267c:	cmp	r0, #0
   12680:	beq	12688 <table_destroy@@Base+0x64>
   12684:	bl	11fa0 <free@plt>
   12688:	mov	r0, r4
   1268c:	bl	13a7c <table_get_column_length@@Base>
   12690:	cmp	r0, #1
   12694:	blt	126b8 <table_destroy@@Base+0x94>
   12698:	mov	r5, r0
   1269c:	mov	r6, #0
   126a0:	mov	r0, r4
   126a4:	mov	r1, r6
   126a8:	bl	13a64 <table_column_destroy@@Base>
   126ac:	add	r6, r6, #1
   126b0:	cmp	r5, r6
   126b4:	bne	126a0 <table_destroy@@Base+0x7c>
   126b8:	ldr	r0, [r4]
   126bc:	cmp	r0, #0
   126c0:	beq	126c8 <table_destroy@@Base+0xa4>
   126c4:	bl	11fa0 <free@plt>
   126c8:	ldr	r0, [r4, #36]	; 0x24
   126cc:	cmp	r0, #0
   126d0:	beq	126d8 <table_destroy@@Base+0xb4>
   126d4:	bl	11fa0 <free@plt>
   126d8:	ldr	r0, [r4, #40]	; 0x28
   126dc:	cmp	r0, #0
   126e0:	beq	126e8 <table_destroy@@Base+0xc4>
   126e4:	bl	11fa0 <free@plt>
   126e8:	ldr	r0, [r4, #44]	; 0x2c
   126ec:	cmp	r0, #0
   126f0:	pop	{r4, r5, r6, sl, fp, lr}
   126f4:	beq	126fc <table_destroy@@Base+0xd8>
   126f8:	b	11fa0 <free@plt>
   126fc:	bx	lr

00012700 <table_dupe@@Base>:
   12700:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12704:	add	fp, sp, #28
   12708:	sub	sp, sp, #12
   1270c:	mov	r4, r0
   12710:	bl	147a0 <table_get_row_length@@Base>
   12714:	mov	r8, r0
   12718:	mov	r0, r4
   1271c:	bl	13a7c <table_get_column_length@@Base>
   12720:	mov	r6, r0
   12724:	mov	r0, #56	; 0x38
   12728:	bl	11fdc <malloc@plt>
   1272c:	mov	sl, r0
   12730:	mov	r5, #0
   12734:	mov	r0, #10
   12738:	mov	r1, #20
   1273c:	cmp	r6, #1
   12740:	vmov.i32	q8, #0	; 0x00000000
   12744:	str	r5, [sl]
   12748:	str	r5, [sl, #4]
   1274c:	str	r0, [sl, #8]
   12750:	str	r5, [sl, #12]
   12754:	str	r5, [sl, #16]
   12758:	str	r5, [sl, #20]
   1275c:	str	r1, [sl, #24]
   12760:	str	r5, [sl, #28]
   12764:	str	r0, [sl, #48]	; 0x30
   12768:	add	r0, sl, #32
   1276c:	str	r5, [sl, #52]	; 0x34
   12770:	vst1.32	{d16-d17}, [r0]
   12774:	blt	127b0 <table_dupe@@Base+0xb0>
   12778:	mov	r0, r4
   1277c:	mov	r1, r5
   12780:	bl	13ae0 <table_get_column_name@@Base>
   12784:	mov	r7, r0
   12788:	mov	r0, r4
   1278c:	mov	r1, r5
   12790:	bl	13af0 <table_get_column_data_type@@Base>
   12794:	mov	r2, r0
   12798:	mov	r0, sl
   1279c:	mov	r1, r7
   127a0:	bl	13b04 <table_add_column@@Base>
   127a4:	add	r5, r5, #1
   127a8:	cmp	r6, r5
   127ac:	bne	12778 <table_dupe@@Base+0x78>
   127b0:	cmp	r8, #1
   127b4:	blt	12c20 <table_dupe@@Base+0x520>
   127b8:	mov	r5, #0
   127bc:	add	r9, sp, #8
   127c0:	mov	r0, sl
   127c4:	bl	147a8 <table_add_row@@Base>
   127c8:	cmp	r6, #1
   127cc:	blt	12c14 <table_dupe@@Base+0x514>
   127d0:	mov	r7, #0
   127d4:	mov	r0, r4
   127d8:	mov	r1, r7
   127dc:	bl	13af0 <table_get_column_data_type@@Base>
   127e0:	cmp	r0, #23
   127e4:	bhi	12c08 <table_dupe@@Base+0x508>
   127e8:	add	r1, pc, #4
   127ec:	ldr	r0, [r1, r0, lsl #2]
   127f0:	add	pc, r1, r0
   127f4:	andeq	r0, r0, r0, rrx
   127f8:	andeq	r0, r0, r8, lsl #1
   127fc:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   12800:	ldrdeq	r0, [r0], -r8
   12804:	andeq	r0, r0, r0, lsl #2
   12808:	andeq	r0, r0, r8, lsr #2
   1280c:	andeq	r0, r0, r0, asr r1
   12810:	andeq	r0, r0, r8, ror r1
   12814:	andeq	r0, r0, r0, lsr #3
   12818:	andeq	r0, r0, r8, asr #3
   1281c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   12820:	andeq	r0, r0, r8, lsl r2
   12824:	andeq	r0, r0, r0, asr #4
   12828:	andeq	r0, r0, r8, ror #4
   1282c:	muleq	r0, r0, r2
   12830:			; <UNDEFINED> instruction: 0x000002b8
   12834:	andeq	r0, r0, r0, ror #5
   12838:	andeq	r0, r0, r4, lsl #6
   1283c:	andeq	r0, r0, r8, lsr #6
   12840:	andeq	r0, r0, ip, asr #6
   12844:	andeq	r0, r0, r4, ror r3
   12848:	muleq	r0, ip, r3
   1284c:	andeq	r0, r0, r4, asr #7
   12850:	andeq	r0, r0, ip, ror #7
   12854:	mov	r0, r4
   12858:	mov	r1, r5
   1285c:	mov	r2, r7
   12860:	bl	144f8 <table_get_int@@Base>
   12864:	mov	r3, r0
   12868:	mov	r0, sl
   1286c:	mov	r1, r5
   12870:	mov	r2, r7
   12874:	bl	14d04 <table_set_int@@Base>
   12878:	b	12c08 <table_dupe@@Base+0x508>
   1287c:	mov	r0, r4
   12880:	mov	r1, r5
   12884:	mov	r2, r7
   12888:	bl	14510 <table_get_uint@@Base>
   1288c:	mov	r3, r0
   12890:	mov	r0, sl
   12894:	mov	r1, r5
   12898:	mov	r2, r7
   1289c:	bl	14d84 <table_set_uint@@Base>
   128a0:	b	12c08 <table_dupe@@Base+0x508>
   128a4:	mov	r0, r4
   128a8:	mov	r1, r5
   128ac:	mov	r2, r7
   128b0:	bl	14528 <table_get_int8@@Base>
   128b4:	mov	r3, r0
   128b8:	mov	r0, sl
   128bc:	mov	r1, r5
   128c0:	mov	r2, r7
   128c4:	bl	14e04 <table_set_int8@@Base>
   128c8:	b	12c08 <table_dupe@@Base+0x508>
   128cc:	mov	r0, r4
   128d0:	mov	r1, r5
   128d4:	mov	r2, r7
   128d8:	bl	14540 <table_get_uint8@@Base>
   128dc:	mov	r3, r0
   128e0:	mov	r0, sl
   128e4:	mov	r1, r5
   128e8:	mov	r2, r7
   128ec:	bl	14e84 <table_set_uint8@@Base>
   128f0:	b	12c08 <table_dupe@@Base+0x508>
   128f4:	mov	r0, r4
   128f8:	mov	r1, r5
   128fc:	mov	r2, r7
   12900:	bl	14558 <table_get_int16@@Base>
   12904:	mov	r3, r0
   12908:	mov	r0, sl
   1290c:	mov	r1, r5
   12910:	mov	r2, r7
   12914:	bl	14f04 <table_set_int16@@Base>
   12918:	b	12c08 <table_dupe@@Base+0x508>
   1291c:	mov	r0, r4
   12920:	mov	r1, r5
   12924:	mov	r2, r7
   12928:	bl	14570 <table_get_uint16@@Base>
   1292c:	mov	r3, r0
   12930:	mov	r0, sl
   12934:	mov	r1, r5
   12938:	mov	r2, r7
   1293c:	bl	14f84 <table_set_uint16@@Base>
   12940:	b	12c08 <table_dupe@@Base+0x508>
   12944:	mov	r0, r4
   12948:	mov	r1, r5
   1294c:	mov	r2, r7
   12950:	bl	14588 <table_get_int32@@Base>
   12954:	mov	r3, r0
   12958:	mov	r0, sl
   1295c:	mov	r1, r5
   12960:	mov	r2, r7
   12964:	bl	15004 <table_set_int32@@Base>
   12968:	b	12c08 <table_dupe@@Base+0x508>
   1296c:	mov	r0, r4
   12970:	mov	r1, r5
   12974:	mov	r2, r7
   12978:	bl	145a0 <table_get_uint32@@Base>
   1297c:	mov	r3, r0
   12980:	mov	r0, sl
   12984:	mov	r1, r5
   12988:	mov	r2, r7
   1298c:	bl	15084 <table_set_uint32@@Base>
   12990:	b	12c08 <table_dupe@@Base+0x508>
   12994:	mov	r0, r4
   12998:	mov	r1, r5
   1299c:	mov	r2, r7
   129a0:	bl	145b8 <table_get_int64@@Base>
   129a4:	stm	sp, {r0, r1}
   129a8:	mov	r0, sl
   129ac:	mov	r1, r5
   129b0:	mov	r2, r7
   129b4:	bl	15104 <table_set_int64@@Base>
   129b8:	b	12c08 <table_dupe@@Base+0x508>
   129bc:	mov	r0, r4
   129c0:	mov	r1, r5
   129c4:	mov	r2, r7
   129c8:	bl	145d0 <table_get_uint64@@Base>
   129cc:	stm	sp, {r0, r1}
   129d0:	mov	r0, sl
   129d4:	mov	r1, r5
   129d8:	mov	r2, r7
   129dc:	bl	1518c <table_set_uint64@@Base>
   129e0:	b	12c08 <table_dupe@@Base+0x508>
   129e4:	mov	r0, r4
   129e8:	mov	r1, r5
   129ec:	mov	r2, r7
   129f0:	bl	145e8 <table_get_short@@Base>
   129f4:	mov	r3, r0
   129f8:	mov	r0, sl
   129fc:	mov	r1, r5
   12a00:	mov	r2, r7
   12a04:	bl	15214 <table_set_short@@Base>
   12a08:	b	12c08 <table_dupe@@Base+0x508>
   12a0c:	mov	r0, r4
   12a10:	mov	r1, r5
   12a14:	mov	r2, r7
   12a18:	bl	14600 <table_get_ushort@@Base>
   12a1c:	mov	r3, r0
   12a20:	mov	r0, sl
   12a24:	mov	r1, r5
   12a28:	mov	r2, r7
   12a2c:	bl	15294 <table_set_ushort@@Base>
   12a30:	b	12c08 <table_dupe@@Base+0x508>
   12a34:	mov	r0, r4
   12a38:	mov	r1, r5
   12a3c:	mov	r2, r7
   12a40:	bl	14618 <table_get_long@@Base>
   12a44:	mov	r3, r0
   12a48:	mov	r0, sl
   12a4c:	mov	r1, r5
   12a50:	mov	r2, r7
   12a54:	bl	15314 <table_set_long@@Base>
   12a58:	b	12c08 <table_dupe@@Base+0x508>
   12a5c:	mov	r0, r4
   12a60:	mov	r1, r5
   12a64:	mov	r2, r7
   12a68:	bl	14630 <table_get_ulong@@Base>
   12a6c:	mov	r3, r0
   12a70:	mov	r0, sl
   12a74:	mov	r1, r5
   12a78:	mov	r2, r7
   12a7c:	bl	15394 <table_set_ulong@@Base>
   12a80:	b	12c08 <table_dupe@@Base+0x508>
   12a84:	mov	r0, r4
   12a88:	mov	r1, r5
   12a8c:	mov	r2, r7
   12a90:	bl	14648 <table_get_llong@@Base>
   12a94:	stm	sp, {r0, r1}
   12a98:	mov	r0, sl
   12a9c:	mov	r1, r5
   12aa0:	mov	r2, r7
   12aa4:	bl	15414 <table_set_llong@@Base>
   12aa8:	b	12c08 <table_dupe@@Base+0x508>
   12aac:	mov	r0, r4
   12ab0:	mov	r1, r5
   12ab4:	mov	r2, r7
   12ab8:	bl	14660 <table_get_ullong@@Base>
   12abc:	stm	sp, {r0, r1}
   12ac0:	mov	r0, sl
   12ac4:	mov	r1, r5
   12ac8:	mov	r2, r7
   12acc:	bl	1549c <table_set_ullong@@Base>
   12ad0:	b	12c08 <table_dupe@@Base+0x508>
   12ad4:	mov	r0, r4
   12ad8:	mov	r1, r5
   12adc:	mov	r2, r7
   12ae0:	bl	14678 <table_get_float@@Base>
   12ae4:	mov	r0, sl
   12ae8:	mov	r1, r5
   12aec:	mov	r2, r7
   12af0:	bl	15524 <table_set_float@@Base>
   12af4:	b	12c08 <table_dupe@@Base+0x508>
   12af8:	mov	r0, r4
   12afc:	mov	r1, r5
   12b00:	mov	r2, r7
   12b04:	bl	14690 <table_get_double@@Base>
   12b08:	mov	r0, sl
   12b0c:	mov	r1, r5
   12b10:	mov	r2, r7
   12b14:	bl	155b0 <table_set_double@@Base>
   12b18:	b	12c08 <table_dupe@@Base+0x508>
   12b1c:	mov	r0, r4
   12b20:	mov	r1, r5
   12b24:	mov	r2, r7
   12b28:	bl	146a8 <table_get_ldouble@@Base>
   12b2c:	mov	r0, sl
   12b30:	mov	r1, r5
   12b34:	mov	r2, r7
   12b38:	bl	15638 <table_set_ldouble@@Base>
   12b3c:	b	12c08 <table_dupe@@Base+0x508>
   12b40:	mov	r0, r4
   12b44:	mov	r1, r5
   12b48:	mov	r2, r7
   12b4c:	bl	146c0 <table_get_char@@Base>
   12b50:	mov	r3, r0
   12b54:	mov	r0, sl
   12b58:	mov	r1, r5
   12b5c:	mov	r2, r7
   12b60:	bl	156e0 <table_set_char@@Base>
   12b64:	b	12c08 <table_dupe@@Base+0x508>
   12b68:	mov	r0, r4
   12b6c:	mov	r1, r5
   12b70:	mov	r2, r7
   12b74:	bl	146d8 <table_get_uchar@@Base>
   12b78:	mov	r3, r0
   12b7c:	mov	r0, sl
   12b80:	mov	r1, r5
   12b84:	mov	r2, r7
   12b88:	bl	15760 <table_set_uchar@@Base>
   12b8c:	b	12c08 <table_dupe@@Base+0x508>
   12b90:	mov	r0, r4
   12b94:	mov	r1, r5
   12b98:	mov	r2, r7
   12b9c:	bl	146f0 <table_get_string@@Base>
   12ba0:	mov	r3, r0
   12ba4:	mov	r0, sl
   12ba8:	mov	r1, r5
   12bac:	mov	r2, r7
   12bb0:	bl	156c0 <table_set_string@@Base>
   12bb4:	b	12c08 <table_dupe@@Base+0x508>
   12bb8:	mov	r0, r4
   12bbc:	mov	r1, r5
   12bc0:	mov	r2, r7
   12bc4:	bl	144e0 <table_get_bool@@Base>
   12bc8:	mov	r3, r0
   12bcc:	mov	r0, sl
   12bd0:	mov	r1, r5
   12bd4:	mov	r2, r7
   12bd8:	bl	14c84 <table_set_bool@@Base>
   12bdc:	b	12c08 <table_dupe@@Base+0x508>
   12be0:	mov	r0, r4
   12be4:	mov	r1, r5
   12be8:	mov	r2, r7
   12bec:	bl	14704 <table_get_ptr@@Base>
   12bf0:	str	r0, [sp, #8]
   12bf4:	mov	r0, sl
   12bf8:	mov	r1, r5
   12bfc:	mov	r2, r7
   12c00:	mov	r3, r9
   12c04:	bl	157e0 <table_set_ptr@@Base>
   12c08:	add	r7, r7, #1
   12c0c:	cmp	r6, r7
   12c10:	bne	127d4 <table_dupe@@Base+0xd4>
   12c14:	add	r5, r5, #1
   12c18:	cmp	r5, r8
   12c1c:	bne	127c0 <table_dupe@@Base+0xc0>
   12c20:	mov	r0, sl
   12c24:	sub	sp, fp, #28
   12c28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012c2c <table_get_major_version@@Base>:
   12c2c:	mov	r0, #0
   12c30:	bx	lr

00012c34 <table_get_minor_version@@Base>:
   12c34:	mov	r0, #0
   12c38:	bx	lr

00012c3c <table_get_patch_version@@Base>:
   12c3c:	mov	r0, #0
   12c40:	bx	lr

00012c44 <table_get_version@@Base>:
   12c44:	ldr	r0, [pc, #4]	; 12c50 <table_get_version@@Base+0xc>
   12c48:	add	r0, pc, r0
   12c4c:	bx	lr
   12c50:	andeq	r3, r0, r8, ror #1

00012c54 <table_get_callback_length@@Base>:
   12c54:	ldr	r0, [r0, #32]
   12c58:	bx	lr

00012c5c <table_register_callback@@Base>:
   12c5c:	push	{r4, r5, r6, r7, fp, lr}
   12c60:	add	fp, sp, #16
   12c64:	mov	r5, r0
   12c68:	ldr	r0, [r0, #32]
   12c6c:	mov	r4, r3
   12c70:	mov	r6, r2
   12c74:	mov	r7, r1
   12c78:	cmp	r0, #1
   12c7c:	blt	12cb0 <table_register_callback@@Base+0x54>
   12c80:	ldr	r2, [r5, #36]	; 0x24
   12c84:	mov	r1, #0
   12c88:	ldr	r3, [r2, r1, lsl #2]
   12c8c:	cmp	r3, r7
   12c90:	bne	12ca4 <table_register_callback@@Base+0x48>
   12c94:	ldr	r3, [r5, #40]	; 0x28
   12c98:	ldr	r3, [r3, r1, lsl #2]
   12c9c:	cmp	r3, r6
   12ca0:	beq	12d34 <table_register_callback@@Base+0xd8>
   12ca4:	add	r1, r1, #1
   12ca8:	cmp	r1, r0
   12cac:	blt	12c88 <table_register_callback@@Base+0x2c>
   12cb0:	ldr	r1, [r5, #48]	; 0x30
   12cb4:	udiv	r2, r0, r1
   12cb8:	mls	r2, r2, r1, r0
   12cbc:	cmp	r2, #0
   12cc0:	bne	12d0c <table_register_callback@@Base+0xb0>
   12cc4:	ldr	r2, [r5, #52]	; 0x34
   12cc8:	ldr	r0, [r5, #36]	; 0x24
   12ccc:	add	r1, r2, r1
   12cd0:	str	r1, [r5, #52]	; 0x34
   12cd4:	lsl	r1, r1, #2
   12cd8:	bl	11fb8 <realloc@plt>
   12cdc:	str	r0, [r5, #36]	; 0x24
   12ce0:	ldr	r1, [r5, #52]	; 0x34
   12ce4:	ldr	r0, [r5, #40]	; 0x28
   12ce8:	lsl	r1, r1, #2
   12cec:	bl	11fb8 <realloc@plt>
   12cf0:	str	r0, [r5, #40]	; 0x28
   12cf4:	ldr	r1, [r5, #52]	; 0x34
   12cf8:	ldr	r0, [r5, #44]	; 0x2c
   12cfc:	lsl	r1, r1, #2
   12d00:	bl	11fb8 <realloc@plt>
   12d04:	str	r0, [r5, #44]	; 0x2c
   12d08:	ldr	r0, [r5, #32]
   12d0c:	ldr	r1, [r5, #36]	; 0x24
   12d10:	str	r7, [r1, r0, lsl #2]
   12d14:	ldr	r1, [r5, #40]	; 0x28
   12d18:	str	r6, [r1, r0, lsl #2]
   12d1c:	ldr	r1, [r5, #44]	; 0x2c
   12d20:	str	r4, [r1, r0, lsl #2]
   12d24:	ldr	r0, [r5, #32]
   12d28:	add	r0, r0, #1
   12d2c:	str	r0, [r5, #32]
   12d30:	pop	{r4, r5, r6, r7, fp, pc}
   12d34:	cmp	r1, #0
   12d38:	ldrne	r0, [r5, #44]	; 0x2c
   12d3c:	ldrne	r2, [r0, r1, lsl #2]
   12d40:	orrne	r2, r2, r4
   12d44:	strne	r2, [r0, r1, lsl #2]
   12d48:	popne	{r4, r5, r6, r7, fp, pc}
   12d4c:	b	12cb0 <table_register_callback@@Base+0x54>

00012d50 <table_unregister_callback@@Base>:
   12d50:	push	{r4, r5, r6, sl, fp, lr}
   12d54:	add	fp, sp, #16
   12d58:	ldr	r4, [r0, #32]
   12d5c:	cmp	r4, #1
   12d60:	blt	12d98 <table_unregister_callback@@Base+0x48>
   12d64:	ldr	r3, [r0, #36]	; 0x24
   12d68:	mov	r6, r0
   12d6c:	mov	r0, #0
   12d70:	ldr	r5, [r3, r0, lsl #2]
   12d74:	cmp	r5, r1
   12d78:	bne	12d8c <table_unregister_callback@@Base+0x3c>
   12d7c:	ldr	r5, [r6, #40]	; 0x28
   12d80:	ldr	r5, [r5, r0, lsl #2]
   12d84:	cmp	r5, r2
   12d88:	beq	12d9c <table_unregister_callback@@Base+0x4c>
   12d8c:	add	r0, r0, #1
   12d90:	cmp	r0, r4
   12d94:	blt	12d70 <table_unregister_callback@@Base+0x20>
   12d98:	pop	{r4, r5, r6, sl, fp, pc}
   12d9c:	sub	r1, r4, #1
   12da0:	cmp	r0, r1
   12da4:	bge	12e34 <table_unregister_callback@@Base+0xe4>
   12da8:	add	r1, r3, r0, lsl #2
   12dac:	ldr	r1, [r1, #4]
   12db0:	str	r1, [r3, r0, lsl #2]
   12db4:	ldr	r1, [r6, #40]	; 0x28
   12db8:	add	r2, r1, r0, lsl #2
   12dbc:	ldr	r2, [r2, #4]
   12dc0:	str	r2, [r1, r0, lsl #2]
   12dc4:	ldr	r1, [r6, #44]	; 0x2c
   12dc8:	add	r2, r1, r0, lsl #2
   12dcc:	ldr	r2, [r2, #4]
   12dd0:	str	r2, [r1, r0, lsl #2]
   12dd4:	add	r2, r0, #1
   12dd8:	ldr	r1, [r6, #32]
   12ddc:	sub	r1, r1, #1
   12de0:	cmp	r2, r1
   12de4:	bge	12e34 <table_unregister_callback@@Base+0xe4>
   12de8:	ldr	r1, [r6, #36]	; 0x24
   12dec:	add	r1, r1, r0, lsl #2
   12df0:	ldr	r2, [r1, #8]
   12df4:	str	r2, [r1, #4]
   12df8:	ldr	r1, [r6, #40]	; 0x28
   12dfc:	add	r1, r1, r0, lsl #2
   12e00:	ldr	r2, [r1, #8]
   12e04:	str	r2, [r1, #4]
   12e08:	ldr	r1, [r6, #44]	; 0x2c
   12e0c:	add	r1, r1, r0, lsl #2
   12e10:	ldr	r2, [r1, #8]
   12e14:	str	r2, [r1, #4]
   12e18:	add	r2, r0, #1
   12e1c:	add	r0, r0, #2
   12e20:	ldr	r1, [r6, #32]
   12e24:	sub	r1, r1, #1
   12e28:	cmp	r0, r1
   12e2c:	mov	r0, r2
   12e30:	blt	12de8 <table_unregister_callback@@Base+0x98>
   12e34:	str	r1, [r6, #32]
   12e38:	ldr	r2, [r6, #48]	; 0x30
   12e3c:	udiv	r0, r1, r2
   12e40:	mls	r0, r0, r2, r1
   12e44:	cmp	r0, #0
   12e48:	popne	{r4, r5, r6, sl, fp, pc}
   12e4c:	ldr	r1, [r6, #52]	; 0x34
   12e50:	ldr	r0, [r6, #36]	; 0x24
   12e54:	subs	r1, r1, r2
   12e58:	str	r1, [r6, #52]	; 0x34
   12e5c:	beq	12e98 <table_unregister_callback@@Base+0x148>
   12e60:	lsl	r1, r1, #2
   12e64:	bl	11fb8 <realloc@plt>
   12e68:	str	r0, [r6, #36]	; 0x24
   12e6c:	ldr	r1, [r6, #52]	; 0x34
   12e70:	ldr	r0, [r6, #40]	; 0x28
   12e74:	lsl	r1, r1, #2
   12e78:	bl	11fb8 <realloc@plt>
   12e7c:	str	r0, [r6, #40]	; 0x28
   12e80:	ldr	r1, [r6, #52]	; 0x34
   12e84:	ldr	r0, [r6, #44]	; 0x2c
   12e88:	lsl	r1, r1, #2
   12e8c:	bl	11fb8 <realloc@plt>
   12e90:	str	r0, [r6, #44]	; 0x2c
   12e94:	pop	{r4, r5, r6, sl, fp, pc}
   12e98:	bl	11fa0 <free@plt>
   12e9c:	ldr	r0, [r6, #40]	; 0x28
   12ea0:	bl	11fa0 <free@plt>
   12ea4:	ldr	r0, [r6, #44]	; 0x2c
   12ea8:	bl	11fa0 <free@plt>
   12eac:	mov	r0, #0
   12eb0:	str	r0, [r6, #36]	; 0x24
   12eb4:	str	r0, [r6, #40]	; 0x28
   12eb8:	str	r0, [r6, #44]	; 0x2c
   12ebc:	pop	{r4, r5, r6, sl, fp, pc}

00012ec0 <table_notify@@Base>:
   12ec0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12ec4:	add	fp, sp, #24
   12ec8:	sub	sp, sp, #8
   12ecc:	mov	r7, r0
   12ed0:	ldr	r0, [r0, #32]
   12ed4:	cmp	r0, #1
   12ed8:	blt	12f34 <table_notify@@Base+0x74>
   12edc:	mov	r4, r3
   12ee0:	mov	r8, r2
   12ee4:	mov	r9, r1
   12ee8:	mov	r5, #0
   12eec:	ldr	r1, [r7, #44]	; 0x2c
   12ef0:	ldr	r1, [r1, r5, lsl #2]
   12ef4:	tst	r1, r4
   12ef8:	beq	12f28 <table_notify@@Base+0x68>
   12efc:	ldr	r0, [r7, #36]	; 0x24
   12f00:	ldr	r1, [r7, #40]	; 0x28
   12f04:	mov	r2, r8
   12f08:	mov	r3, r4
   12f0c:	ldr	r6, [r0, r5, lsl #2]
   12f10:	ldr	r0, [r1, r5, lsl #2]
   12f14:	mov	r1, r9
   12f18:	str	r0, [sp]
   12f1c:	mov	r0, r7
   12f20:	blx	r6
   12f24:	ldr	r0, [r7, #32]
   12f28:	add	r5, r5, #1
   12f2c:	cmp	r5, r0
   12f30:	blt	12eec <table_notify@@Base+0x2c>
   12f34:	sub	sp, fp, #24
   12f38:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012f3c <table_cell_init@@Base>:
   12f3c:	push	{r4, sl, fp, lr}
   12f40:	add	fp, sp, #8
   12f44:	mov	r4, r2
   12f48:	bl	1473c <table_get_row_ptr@@Base>
   12f4c:	ldr	r0, [r0]
   12f50:	mov	r1, #0
   12f54:	str	r1, [r0, r4, lsl #2]
   12f58:	pop	{r4, sl, fp, pc}

00012f5c <table_get_cell_ptr@@Base>:
   12f5c:	push	{r4, sl, fp, lr}
   12f60:	add	fp, sp, #8
   12f64:	mov	r4, r2
   12f68:	bl	1473c <table_get_row_ptr@@Base>
   12f6c:	ldr	r0, [r0]
   12f70:	add	r0, r0, r4, lsl #2
   12f74:	pop	{r4, sl, fp, pc}

00012f78 <table_cell_destroy@@Base>:
   12f78:	push	{r4, r5, r6, sl, fp, lr}
   12f7c:	add	fp, sp, #16
   12f80:	mov	r5, r1
   12f84:	mov	r1, r2
   12f88:	mov	r4, r2
   12f8c:	mov	r6, r0
   12f90:	bl	13af0 <table_get_column_data_type@@Base>
   12f94:	cmp	r0, #23
   12f98:	popeq	{r4, r5, r6, sl, fp, pc}
   12f9c:	mov	r0, r6
   12fa0:	mov	r1, r5
   12fa4:	bl	1473c <table_get_row_ptr@@Base>
   12fa8:	ldr	r0, [r0]
   12fac:	ldr	r0, [r0, r4, lsl #2]
   12fb0:	cmp	r0, #0
   12fb4:	beq	12fc0 <table_cell_destroy@@Base+0x48>
   12fb8:	pop	{r4, r5, r6, sl, fp, lr}
   12fbc:	b	11fa0 <free@plt>
   12fc0:	pop	{r4, r5, r6, sl, fp, pc}

00012fc4 <table_cell_to_buffer@@Base>:
   12fc4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12fc8:	add	fp, sp, #24
   12fcc:	sub	sp, sp, #8
   12fd0:	mov	r7, r1
   12fd4:	mov	r1, r2
   12fd8:	mov	r5, r3
   12fdc:	mov	r6, r2
   12fe0:	mov	r4, r0
   12fe4:	bl	13af0 <table_get_column_data_type@@Base>
   12fe8:	cmp	r0, #23
   12fec:	bhi	132e0 <table_cell_to_buffer@@Base+0x31c>
   12ff0:	add	r1, pc, #8
   12ff4:	ldr	r8, [fp, #8]
   12ff8:	ldr	r0, [r1, r0, lsl #2]
   12ffc:	add	pc, r1, r0
   13000:	andeq	r0, r0, r0, rrx
   13004:	andeq	r0, r0, r4, ror r0
   13008:	andeq	r0, r0, r8, lsl #1
   1300c:	muleq	r0, ip, r0
   13010:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   13014:	andeq	r0, r0, r4, asr #1
   13018:	ldrdeq	r0, [r0], -r8
   1301c:	andeq	r0, r0, ip, ror #1
   13020:	andeq	r0, r0, ip, lsl #2
   13024:	andeq	r0, r0, r0, lsr #2
   13028:	andeq	r0, r0, r4, lsr r1
   1302c:	andeq	r0, r0, r4, asr r1
   13030:	andeq	r0, r0, r4, ror r1
   13034:	muleq	r0, r4, r1
   13038:			; <UNDEFINED> instruction: 0x000001b4
   1303c:	ldrdeq	r0, [r0], -r4
   13040:	strdeq	r0, [r0], -r4
   13044:	andeq	r0, r0, r8, lsl r2
   13048:	andeq	r0, r0, r8, lsr r2
   1304c:	andeq	r0, r0, r4, ror #4
   13050:	andeq	r0, r0, r8, ror r2
   13054:	muleq	r0, r8, r2
   13058:			; <UNDEFINED> instruction: 0x000002b8
   1305c:	andeq	r0, r0, ip, ror #5
   13060:	mov	r0, r4
   13064:	mov	r1, r7
   13068:	mov	r2, r6
   1306c:	bl	144f8 <table_get_int@@Base>
   13070:	b	132c8 <table_cell_to_buffer@@Base+0x304>
   13074:	mov	r0, r4
   13078:	mov	r1, r7
   1307c:	mov	r2, r6
   13080:	bl	14510 <table_get_uint@@Base>
   13084:	b	130fc <table_cell_to_buffer@@Base+0x138>
   13088:	mov	r0, r4
   1308c:	mov	r1, r7
   13090:	mov	r2, r6
   13094:	bl	14528 <table_get_int8@@Base>
   13098:	b	132c8 <table_cell_to_buffer@@Base+0x304>
   1309c:	mov	r0, r4
   130a0:	mov	r1, r7
   130a4:	mov	r2, r6
   130a8:	bl	14540 <table_get_uint8@@Base>
   130ac:	b	130fc <table_cell_to_buffer@@Base+0x138>
   130b0:	mov	r0, r4
   130b4:	mov	r1, r7
   130b8:	mov	r2, r6
   130bc:	bl	14558 <table_get_int16@@Base>
   130c0:	b	132c8 <table_cell_to_buffer@@Base+0x304>
   130c4:	mov	r0, r4
   130c8:	mov	r1, r7
   130cc:	mov	r2, r6
   130d0:	bl	14570 <table_get_uint16@@Base>
   130d4:	b	130fc <table_cell_to_buffer@@Base+0x138>
   130d8:	mov	r0, r4
   130dc:	mov	r1, r7
   130e0:	mov	r2, r6
   130e4:	bl	14588 <table_get_int32@@Base>
   130e8:	b	132c8 <table_cell_to_buffer@@Base+0x304>
   130ec:	mov	r0, r4
   130f0:	mov	r1, r7
   130f4:	mov	r2, r6
   130f8:	bl	145a0 <table_get_uint32@@Base>
   130fc:	ldr	r2, [pc, #524]	; 13310 <table_cell_to_buffer@@Base+0x34c>
   13100:	mov	r3, r0
   13104:	add	r2, pc, r2
   13108:	b	132d4 <table_cell_to_buffer@@Base+0x310>
   1310c:	mov	r0, r4
   13110:	mov	r1, r7
   13114:	mov	r2, r6
   13118:	bl	145b8 <table_get_int64@@Base>
   1311c:	b	131c4 <table_cell_to_buffer@@Base+0x200>
   13120:	mov	r0, r4
   13124:	mov	r1, r7
   13128:	mov	r2, r6
   1312c:	bl	145d0 <table_get_uint64@@Base>
   13130:	b	131e4 <table_cell_to_buffer@@Base+0x220>
   13134:	mov	r0, r4
   13138:	mov	r1, r7
   1313c:	mov	r2, r6
   13140:	bl	145e8 <table_get_short@@Base>
   13144:	ldr	r2, [pc, #464]	; 1331c <table_cell_to_buffer@@Base+0x358>
   13148:	mov	r3, r0
   1314c:	add	r2, pc, r2
   13150:	b	132d4 <table_cell_to_buffer@@Base+0x310>
   13154:	mov	r0, r4
   13158:	mov	r1, r7
   1315c:	mov	r2, r6
   13160:	bl	14600 <table_get_ushort@@Base>
   13164:	ldr	r2, [pc, #436]	; 13320 <table_cell_to_buffer@@Base+0x35c>
   13168:	mov	r3, r0
   1316c:	add	r2, pc, r2
   13170:	b	132d4 <table_cell_to_buffer@@Base+0x310>
   13174:	mov	r0, r4
   13178:	mov	r1, r7
   1317c:	mov	r2, r6
   13180:	bl	14618 <table_get_long@@Base>
   13184:	ldr	r2, [pc, #408]	; 13324 <table_cell_to_buffer@@Base+0x360>
   13188:	mov	r3, r0
   1318c:	add	r2, pc, r2
   13190:	b	132d4 <table_cell_to_buffer@@Base+0x310>
   13194:	mov	r0, r4
   13198:	mov	r1, r7
   1319c:	mov	r2, r6
   131a0:	bl	14630 <table_get_ulong@@Base>
   131a4:	ldr	r2, [pc, #380]	; 13328 <table_cell_to_buffer@@Base+0x364>
   131a8:	mov	r3, r0
   131ac:	add	r2, pc, r2
   131b0:	b	132d4 <table_cell_to_buffer@@Base+0x310>
   131b4:	mov	r0, r4
   131b8:	mov	r1, r7
   131bc:	mov	r2, r6
   131c0:	bl	14648 <table_get_llong@@Base>
   131c4:	stm	sp, {r0, r1}
   131c8:	ldr	r2, [pc, #324]	; 13314 <table_cell_to_buffer@@Base+0x350>
   131cc:	add	r2, pc, r2
   131d0:	b	13254 <table_cell_to_buffer@@Base+0x290>
   131d4:	mov	r0, r4
   131d8:	mov	r1, r7
   131dc:	mov	r2, r6
   131e0:	bl	14660 <table_get_ullong@@Base>
   131e4:	stm	sp, {r0, r1}
   131e8:	ldr	r2, [pc, #296]	; 13318 <table_cell_to_buffer@@Base+0x354>
   131ec:	add	r2, pc, r2
   131f0:	b	13254 <table_cell_to_buffer@@Base+0x290>
   131f4:	mov	r0, r4
   131f8:	mov	r1, r7
   131fc:	mov	r2, r6
   13200:	bl	14678 <table_get_float@@Base>
   13204:	vcvt.f64.f32	d16, s0
   13208:	vstr	d16, [sp]
   1320c:	ldr	r2, [pc, #284]	; 13330 <table_cell_to_buffer@@Base+0x36c>
   13210:	add	r2, pc, r2
   13214:	b	13254 <table_cell_to_buffer@@Base+0x290>
   13218:	mov	r0, r4
   1321c:	mov	r1, r7
   13220:	mov	r2, r6
   13224:	bl	14690 <table_get_double@@Base>
   13228:	vstr	d0, [sp]
   1322c:	ldr	r2, [pc, #256]	; 13334 <table_cell_to_buffer@@Base+0x370>
   13230:	add	r2, pc, r2
   13234:	b	13254 <table_cell_to_buffer@@Base+0x290>
   13238:	mov	r0, r4
   1323c:	mov	r1, r7
   13240:	mov	r2, r6
   13244:	bl	146a8 <table_get_ldouble@@Base>
   13248:	vstr	d0, [sp]
   1324c:	ldr	r2, [pc, #228]	; 13338 <table_cell_to_buffer@@Base+0x374>
   13250:	add	r2, pc, r2
   13254:	mov	r0, r5
   13258:	mov	r1, r8
   1325c:	bl	12018 <snprintf@plt>
   13260:	b	132e0 <table_cell_to_buffer@@Base+0x31c>
   13264:	mov	r0, r4
   13268:	mov	r1, r7
   1326c:	mov	r2, r6
   13270:	bl	146c0 <table_get_char@@Base>
   13274:	b	13288 <table_cell_to_buffer@@Base+0x2c4>
   13278:	mov	r0, r4
   1327c:	mov	r1, r7
   13280:	mov	r2, r6
   13284:	bl	146d8 <table_get_uchar@@Base>
   13288:	ldr	r2, [pc, #172]	; 1333c <table_cell_to_buffer@@Base+0x378>
   1328c:	mov	r3, r0
   13290:	add	r2, pc, r2
   13294:	b	132d4 <table_cell_to_buffer@@Base+0x310>
   13298:	mov	r0, r4
   1329c:	mov	r1, r7
   132a0:	mov	r2, r6
   132a4:	bl	146f0 <table_get_string@@Base>
   132a8:	ldr	r2, [pc, #124]	; 1332c <table_cell_to_buffer@@Base+0x368>
   132ac:	mov	r3, r0
   132b0:	add	r2, pc, r2
   132b4:	b	132d4 <table_cell_to_buffer@@Base+0x310>
   132b8:	mov	r0, r4
   132bc:	mov	r1, r7
   132c0:	mov	r2, r6
   132c4:	bl	144e0 <table_get_bool@@Base>
   132c8:	ldr	r2, [pc, #60]	; 1330c <table_cell_to_buffer@@Base+0x348>
   132cc:	mov	r3, r0
   132d0:	add	r2, pc, r2
   132d4:	mov	r0, r5
   132d8:	mov	r1, r8
   132dc:	bl	12018 <snprintf@plt>
   132e0:	mov	r0, #0
   132e4:	sub	sp, fp, #24
   132e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   132ec:	mov	r0, r4
   132f0:	mov	r1, r7
   132f4:	mov	r2, r6
   132f8:	bl	14704 <table_get_ptr@@Base>
   132fc:	ldr	r2, [pc, #60]	; 13340 <table_cell_to_buffer@@Base+0x37c>
   13300:	mov	r3, r0
   13304:	add	r2, pc, r2
   13308:	b	132d4 <table_cell_to_buffer@@Base+0x310>
   1330c:	andeq	r2, r0, r8, asr #19
   13310:	andeq	r2, r0, r4, lsr ip
   13314:	andeq	r2, r0, pc, ror #22
   13318:	andeq	r2, r0, r4, asr fp
   1331c:	strdeq	r2, [r0], -r9
   13320:	ldrdeq	r2, [r0], -sp
   13324:	andeq	r2, r0, r1, asr #23
   13328:	andeq	r2, r0, r5, lsr #23
   1332c:	andeq	r2, r0, r5, lsr #21
   13330:	andeq	r2, r0, r8, asr #22
   13334:	andeq	r2, r0, fp, lsr #22
   13338:	andeq	r2, r0, pc, lsl #22
   1333c:	ldrdeq	r2, [r0], -r3
   13340:	andeq	r2, r0, r2, ror #20

00013344 <table_cell_from_buffer@@Base>:
   13344:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13348:	add	fp, sp, #24
   1334c:	sub	sp, sp, #264	; 0x108
   13350:	mov	r5, r1
   13354:	mov	r1, r2
   13358:	mov	r7, r3
   1335c:	mov	r4, r2
   13360:	mov	r6, r0
   13364:	bl	13af0 <table_get_column_data_type@@Base>
   13368:	cmp	r0, #23
   1336c:	bhi	13944 <table_cell_from_buffer@@Base+0x600>
   13370:	add	r1, pc, #4
   13374:	ldr	r0, [r1, r0, lsl #2]
   13378:	add	pc, r1, r0
   1337c:	andeq	r0, r0, r0, rrx
   13380:	muleq	r0, r8, r0
   13384:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13388:	andeq	r0, r0, r8, lsl #2
   1338c:	andeq	r0, r0, r0, asr #2
   13390:	andeq	r0, r0, r8, ror r1
   13394:			; <UNDEFINED> instruction: 0x000001b0
   13398:	andeq	r0, r0, r8, ror #3
   1339c:	andeq	r0, r0, r0, lsr #4
   133a0:	andeq	r0, r0, r0, ror #4
   133a4:	andeq	r0, r0, r0, lsr #5
   133a8:	ldrdeq	r0, [r0], -r8
   133ac:	andeq	r0, r0, r0, lsl r3
   133b0:	andeq	r0, r0, r8, asr #6
   133b4:	andeq	r0, r0, r0, lsl #7
   133b8:	andeq	r0, r0, r0, asr #7
   133bc:	andeq	r0, r0, r0, lsl #8
   133c0:	andeq	r0, r0, r8, lsr r4
   133c4:	andeq	r0, r0, r0, ror r4
   133c8:	andeq	r0, r0, r8, lsr #9
   133cc:	andeq	r0, r0, r0, ror #9
   133d0:	andeq	r0, r0, r8, lsl r5
   133d4:	andeq	r0, r0, r0, asr r5
   133d8:	muleq	r0, r4, r5
   133dc:	ldr	r1, [pc, #1420]	; 13970 <table_cell_from_buffer@@Base+0x62c>
   133e0:	add	r2, sp, #8
   133e4:	mov	r0, r7
   133e8:	add	r1, pc, r1
   133ec:	bl	12024 <__isoc99_sscanf@plt>
   133f0:	mvn	r7, #0
   133f4:	cmp	r0, #1
   133f8:	bne	13948 <table_cell_from_buffer@@Base+0x604>
   133fc:	ldr	r3, [sp, #8]
   13400:	mov	r0, r6
   13404:	mov	r1, r5
   13408:	mov	r2, r4
   1340c:	bl	14d04 <table_set_int@@Base>
   13410:	b	13944 <table_cell_from_buffer@@Base+0x600>
   13414:	ldr	r1, [pc, #1368]	; 13974 <table_cell_from_buffer@@Base+0x630>
   13418:	add	r2, sp, #8
   1341c:	mov	r0, r7
   13420:	add	r1, pc, r1
   13424:	bl	12024 <__isoc99_sscanf@plt>
   13428:	mvn	r7, #0
   1342c:	cmp	r0, #1
   13430:	bne	13948 <table_cell_from_buffer@@Base+0x604>
   13434:	ldr	r3, [sp, #8]
   13438:	mov	r0, r6
   1343c:	mov	r1, r5
   13440:	mov	r2, r4
   13444:	bl	14d84 <table_set_uint@@Base>
   13448:	b	13944 <table_cell_from_buffer@@Base+0x600>
   1344c:	ldr	r1, [pc, #1316]	; 13978 <table_cell_from_buffer@@Base+0x634>
   13450:	add	r2, sp, #8
   13454:	mov	r0, r7
   13458:	add	r1, pc, r1
   1345c:	bl	12024 <__isoc99_sscanf@plt>
   13460:	mvn	r7, #0
   13464:	cmp	r0, #1
   13468:	bne	13948 <table_cell_from_buffer@@Base+0x604>
   1346c:	ldrsb	r3, [sp, #8]
   13470:	mov	r0, r6
   13474:	mov	r1, r5
   13478:	mov	r2, r4
   1347c:	bl	14e04 <table_set_int8@@Base>
   13480:	b	13944 <table_cell_from_buffer@@Base+0x600>
   13484:	ldr	r1, [pc, #1264]	; 1397c <table_cell_from_buffer@@Base+0x638>
   13488:	add	r2, sp, #8
   1348c:	mov	r0, r7
   13490:	add	r1, pc, r1
   13494:	bl	12024 <__isoc99_sscanf@plt>
   13498:	mvn	r7, #0
   1349c:	cmp	r0, #1
   134a0:	bne	13948 <table_cell_from_buffer@@Base+0x604>
   134a4:	ldrb	r3, [sp, #8]
   134a8:	mov	r0, r6
   134ac:	mov	r1, r5
   134b0:	mov	r2, r4
   134b4:	bl	14e84 <table_set_uint8@@Base>
   134b8:	b	13944 <table_cell_from_buffer@@Base+0x600>
   134bc:	ldr	r1, [pc, #1212]	; 13980 <table_cell_from_buffer@@Base+0x63c>
   134c0:	add	r2, sp, #8
   134c4:	mov	r0, r7
   134c8:	add	r1, pc, r1
   134cc:	bl	12024 <__isoc99_sscanf@plt>
   134d0:	mvn	r7, #0
   134d4:	cmp	r0, #1
   134d8:	bne	13948 <table_cell_from_buffer@@Base+0x604>
   134dc:	ldrsh	r3, [sp, #8]
   134e0:	mov	r0, r6
   134e4:	mov	r1, r5
   134e8:	mov	r2, r4
   134ec:	bl	14f04 <table_set_int16@@Base>
   134f0:	b	13944 <table_cell_from_buffer@@Base+0x600>
   134f4:	ldr	r1, [pc, #1160]	; 13984 <table_cell_from_buffer@@Base+0x640>
   134f8:	add	r2, sp, #8
   134fc:	mov	r0, r7
   13500:	add	r1, pc, r1
   13504:	bl	12024 <__isoc99_sscanf@plt>
   13508:	mvn	r7, #0
   1350c:	cmp	r0, #1
   13510:	bne	13948 <table_cell_from_buffer@@Base+0x604>
   13514:	ldrh	r3, [sp, #8]
   13518:	mov	r0, r6
   1351c:	mov	r1, r5
   13520:	mov	r2, r4
   13524:	bl	14f84 <table_set_uint16@@Base>
   13528:	b	13944 <table_cell_from_buffer@@Base+0x600>
   1352c:	ldr	r1, [pc, #1108]	; 13988 <table_cell_from_buffer@@Base+0x644>
   13530:	add	r2, sp, #8
   13534:	mov	r0, r7
   13538:	add	r1, pc, r1
   1353c:	bl	12024 <__isoc99_sscanf@plt>
   13540:	mvn	r7, #0
   13544:	cmp	r0, #1
   13548:	bne	13948 <table_cell_from_buffer@@Base+0x604>
   1354c:	ldr	r3, [sp, #8]
   13550:	mov	r0, r6
   13554:	mov	r1, r5
   13558:	mov	r2, r4
   1355c:	bl	15004 <table_set_int32@@Base>
   13560:	b	13944 <table_cell_from_buffer@@Base+0x600>
   13564:	ldr	r1, [pc, #1056]	; 1398c <table_cell_from_buffer@@Base+0x648>
   13568:	add	r2, sp, #8
   1356c:	mov	r0, r7
   13570:	add	r1, pc, r1
   13574:	bl	12024 <__isoc99_sscanf@plt>
   13578:	mvn	r7, #0
   1357c:	cmp	r0, #1
   13580:	bne	13948 <table_cell_from_buffer@@Base+0x604>
   13584:	ldr	r3, [sp, #8]
   13588:	mov	r0, r6
   1358c:	mov	r1, r5
   13590:	mov	r2, r4
   13594:	bl	15084 <table_set_uint32@@Base>
   13598:	b	13944 <table_cell_from_buffer@@Base+0x600>
   1359c:	ldr	r1, [pc, #1004]	; 13990 <table_cell_from_buffer@@Base+0x64c>
   135a0:	add	r2, sp, #8
   135a4:	mov	r0, r7
   135a8:	add	r1, pc, r1
   135ac:	bl	12024 <__isoc99_sscanf@plt>
   135b0:	mvn	r7, #0
   135b4:	cmp	r0, #1
   135b8:	bne	13948 <table_cell_from_buffer@@Base+0x604>
   135bc:	ldr	r0, [sp, #8]
   135c0:	ldr	r1, [sp, #12]
   135c4:	mov	r2, r4
   135c8:	stm	sp, {r0, r1}
   135cc:	mov	r0, r6
   135d0:	mov	r1, r5
   135d4:	bl	15104 <table_set_int64@@Base>
   135d8:	b	13944 <table_cell_from_buffer@@Base+0x600>
   135dc:	ldr	r1, [pc, #944]	; 13994 <table_cell_from_buffer@@Base+0x650>
   135e0:	add	r2, sp, #8
   135e4:	mov	r0, r7
   135e8:	add	r1, pc, r1
   135ec:	bl	12024 <__isoc99_sscanf@plt>
   135f0:	mvn	r7, #0
   135f4:	cmp	r0, #1
   135f8:	bne	13948 <table_cell_from_buffer@@Base+0x604>
   135fc:	ldr	r0, [sp, #8]
   13600:	ldr	r1, [sp, #12]
   13604:	mov	r2, r4
   13608:	stm	sp, {r0, r1}
   1360c:	mov	r0, r6
   13610:	mov	r1, r5
   13614:	bl	1518c <table_set_uint64@@Base>
   13618:	b	13944 <table_cell_from_buffer@@Base+0x600>
   1361c:	ldr	r1, [pc, #884]	; 13998 <table_cell_from_buffer@@Base+0x654>
   13620:	add	r2, sp, #8
   13624:	mov	r0, r7
   13628:	add	r1, pc, r1
   1362c:	bl	12024 <__isoc99_sscanf@plt>
   13630:	mvn	r7, #0
   13634:	cmp	r0, #1
   13638:	bne	13948 <table_cell_from_buffer@@Base+0x604>
   1363c:	ldrsh	r3, [sp, #8]
   13640:	mov	r0, r6
   13644:	mov	r1, r5
   13648:	mov	r2, r4
   1364c:	bl	15214 <table_set_short@@Base>
   13650:	b	13944 <table_cell_from_buffer@@Base+0x600>
   13654:	ldr	r1, [pc, #832]	; 1399c <table_cell_from_buffer@@Base+0x658>
   13658:	add	r2, sp, #8
   1365c:	mov	r0, r7
   13660:	add	r1, pc, r1
   13664:	bl	12024 <__isoc99_sscanf@plt>
   13668:	mvn	r7, #0
   1366c:	cmp	r0, #1
   13670:	bne	13948 <table_cell_from_buffer@@Base+0x604>
   13674:	ldrh	r3, [sp, #8]
   13678:	mov	r0, r6
   1367c:	mov	r1, r5
   13680:	mov	r2, r4
   13684:	bl	15294 <table_set_ushort@@Base>
   13688:	b	13944 <table_cell_from_buffer@@Base+0x600>
   1368c:	ldr	r1, [pc, #780]	; 139a0 <table_cell_from_buffer@@Base+0x65c>
   13690:	add	r2, sp, #8
   13694:	mov	r0, r7
   13698:	add	r1, pc, r1
   1369c:	bl	12024 <__isoc99_sscanf@plt>
   136a0:	mvn	r7, #0
   136a4:	cmp	r0, #1
   136a8:	bne	13948 <table_cell_from_buffer@@Base+0x604>
   136ac:	ldr	r3, [sp, #8]
   136b0:	mov	r0, r6
   136b4:	mov	r1, r5
   136b8:	mov	r2, r4
   136bc:	bl	15314 <table_set_long@@Base>
   136c0:	b	13944 <table_cell_from_buffer@@Base+0x600>
   136c4:	ldr	r1, [pc, #728]	; 139a4 <table_cell_from_buffer@@Base+0x660>
   136c8:	add	r2, sp, #8
   136cc:	mov	r0, r7
   136d0:	add	r1, pc, r1
   136d4:	bl	12024 <__isoc99_sscanf@plt>
   136d8:	mvn	r7, #0
   136dc:	cmp	r0, #1
   136e0:	bne	13948 <table_cell_from_buffer@@Base+0x604>
   136e4:	ldr	r3, [sp, #8]
   136e8:	mov	r0, r6
   136ec:	mov	r1, r5
   136f0:	mov	r2, r4
   136f4:	bl	15394 <table_set_ulong@@Base>
   136f8:	b	13944 <table_cell_from_buffer@@Base+0x600>
   136fc:	ldr	r1, [pc, #676]	; 139a8 <table_cell_from_buffer@@Base+0x664>
   13700:	add	r2, sp, #8
   13704:	mov	r0, r7
   13708:	add	r1, pc, r1
   1370c:	bl	12024 <__isoc99_sscanf@plt>
   13710:	mvn	r7, #0
   13714:	cmp	r0, #1
   13718:	bne	13948 <table_cell_from_buffer@@Base+0x604>
   1371c:	ldr	r0, [sp, #8]
   13720:	ldr	r1, [sp, #12]
   13724:	mov	r2, r4
   13728:	stm	sp, {r0, r1}
   1372c:	mov	r0, r6
   13730:	mov	r1, r5
   13734:	bl	15414 <table_set_llong@@Base>
   13738:	b	13944 <table_cell_from_buffer@@Base+0x600>
   1373c:	ldr	r1, [pc, #616]	; 139ac <table_cell_from_buffer@@Base+0x668>
   13740:	add	r2, sp, #8
   13744:	mov	r0, r7
   13748:	add	r1, pc, r1
   1374c:	bl	12024 <__isoc99_sscanf@plt>
   13750:	mvn	r7, #0
   13754:	cmp	r0, #1
   13758:	bne	13948 <table_cell_from_buffer@@Base+0x604>
   1375c:	ldr	r0, [sp, #8]
   13760:	ldr	r1, [sp, #12]
   13764:	mov	r2, r4
   13768:	stm	sp, {r0, r1}
   1376c:	mov	r0, r6
   13770:	mov	r1, r5
   13774:	bl	1549c <table_set_ullong@@Base>
   13778:	b	13944 <table_cell_from_buffer@@Base+0x600>
   1377c:	ldr	r1, [pc, #560]	; 139b4 <table_cell_from_buffer@@Base+0x670>
   13780:	add	r2, sp, #8
   13784:	mov	r0, r7
   13788:	add	r1, pc, r1
   1378c:	bl	12024 <__isoc99_sscanf@plt>
   13790:	mvn	r7, #0
   13794:	cmp	r0, #1
   13798:	bne	13948 <table_cell_from_buffer@@Base+0x604>
   1379c:	vldr	s0, [sp, #8]
   137a0:	mov	r0, r6
   137a4:	mov	r1, r5
   137a8:	mov	r2, r4
   137ac:	bl	15524 <table_set_float@@Base>
   137b0:	b	13944 <table_cell_from_buffer@@Base+0x600>
   137b4:	ldr	r1, [pc, #508]	; 139b8 <table_cell_from_buffer@@Base+0x674>
   137b8:	add	r2, sp, #8
   137bc:	mov	r0, r7
   137c0:	add	r1, pc, r1
   137c4:	bl	12024 <__isoc99_sscanf@plt>
   137c8:	mvn	r7, #0
   137cc:	cmp	r0, #1
   137d0:	bne	13948 <table_cell_from_buffer@@Base+0x604>
   137d4:	vldr	d0, [sp, #8]
   137d8:	mov	r0, r6
   137dc:	mov	r1, r5
   137e0:	mov	r2, r4
   137e4:	bl	155b0 <table_set_double@@Base>
   137e8:	b	13944 <table_cell_from_buffer@@Base+0x600>
   137ec:	ldr	r1, [pc, #456]	; 139bc <table_cell_from_buffer@@Base+0x678>
   137f0:	add	r2, sp, #8
   137f4:	mov	r0, r7
   137f8:	add	r1, pc, r1
   137fc:	bl	12024 <__isoc99_sscanf@plt>
   13800:	mvn	r7, #0
   13804:	cmp	r0, #1
   13808:	bne	13948 <table_cell_from_buffer@@Base+0x604>
   1380c:	vldr	d0, [sp, #8]
   13810:	mov	r0, r6
   13814:	mov	r1, r5
   13818:	mov	r2, r4
   1381c:	bl	15638 <table_set_ldouble@@Base>
   13820:	b	13944 <table_cell_from_buffer@@Base+0x600>
   13824:	ldr	r1, [pc, #408]	; 139c4 <table_cell_from_buffer@@Base+0x680>
   13828:	add	r2, sp, #8
   1382c:	mov	r0, r7
   13830:	add	r1, pc, r1
   13834:	bl	12024 <__isoc99_sscanf@plt>
   13838:	mvn	r7, #0
   1383c:	cmp	r0, #1
   13840:	bne	13948 <table_cell_from_buffer@@Base+0x604>
   13844:	ldrb	r3, [sp, #8]
   13848:	mov	r0, r6
   1384c:	mov	r1, r5
   13850:	mov	r2, r4
   13854:	bl	156e0 <table_set_char@@Base>
   13858:	b	13944 <table_cell_from_buffer@@Base+0x600>
   1385c:	ldr	r1, [pc, #356]	; 139c8 <table_cell_from_buffer@@Base+0x684>
   13860:	add	r2, sp, #8
   13864:	mov	r0, r7
   13868:	add	r1, pc, r1
   1386c:	bl	12024 <__isoc99_sscanf@plt>
   13870:	mvn	r7, #0
   13874:	cmp	r0, #1
   13878:	bne	13948 <table_cell_from_buffer@@Base+0x604>
   1387c:	ldrb	r3, [sp, #8]
   13880:	mov	r0, r6
   13884:	mov	r1, r5
   13888:	mov	r2, r4
   1388c:	bl	15760 <table_set_uchar@@Base>
   13890:	b	13944 <table_cell_from_buffer@@Base+0x600>
   13894:	ldr	r1, [pc, #276]	; 139b0 <table_cell_from_buffer@@Base+0x66c>
   13898:	add	r2, sp, #8
   1389c:	mov	r0, r7
   138a0:	add	r1, pc, r1
   138a4:	bl	12024 <__isoc99_sscanf@plt>
   138a8:	mvn	r7, #0
   138ac:	cmp	r0, #1
   138b0:	bne	13948 <table_cell_from_buffer@@Base+0x604>
   138b4:	add	r3, sp, #8
   138b8:	mov	r0, r6
   138bc:	mov	r1, r5
   138c0:	mov	r2, r4
   138c4:	bl	156c0 <table_set_string@@Base>
   138c8:	b	13944 <table_cell_from_buffer@@Base+0x600>
   138cc:	ldr	r1, [pc, #236]	; 139c0 <table_cell_from_buffer@@Base+0x67c>
   138d0:	add	r2, sp, #8
   138d4:	mov	r0, r7
   138d8:	add	r1, pc, r1
   138dc:	bl	12024 <__isoc99_sscanf@plt>
   138e0:	mvn	r7, #0
   138e4:	cmp	r0, #1
   138e8:	bne	13948 <table_cell_from_buffer@@Base+0x604>
   138ec:	ldr	r0, [sp, #8]
   138f0:	cmp	r0, #0
   138f4:	beq	13954 <table_cell_from_buffer@@Base+0x610>
   138f8:	mov	r0, r6
   138fc:	mov	r1, r5
   13900:	mov	r2, r4
   13904:	mov	r3, #1
   13908:	bl	14c84 <table_set_bool@@Base>
   1390c:	b	13944 <table_cell_from_buffer@@Base+0x600>
   13910:	ldr	r1, [pc, #180]	; 139cc <table_cell_from_buffer@@Base+0x688>
   13914:	add	r2, sp, #8
   13918:	mov	r0, r7
   1391c:	add	r1, pc, r1
   13920:	bl	12024 <__isoc99_sscanf@plt>
   13924:	mvn	r7, #0
   13928:	cmp	r0, #1
   1392c:	bne	13948 <table_cell_from_buffer@@Base+0x604>
   13930:	ldr	r3, [sp, #8]
   13934:	mov	r0, r6
   13938:	mov	r1, r5
   1393c:	mov	r2, r4
   13940:	bl	157e0 <table_set_ptr@@Base>
   13944:	mov	r7, #0
   13948:	mov	r0, r7
   1394c:	sub	sp, fp, #24
   13950:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13954:	mov	r0, r6
   13958:	mov	r1, r5
   1395c:	mov	r2, r4
   13960:	mov	r3, #0
   13964:	mov	r7, #0
   13968:	bl	14c84 <table_set_bool@@Base>
   1396c:	b	13948 <table_cell_from_buffer@@Base+0x604>
   13970:			; <UNDEFINED> instruction: 0x000028b0
   13974:	andeq	r2, r0, r8, lsl r9
   13978:	andeq	r2, r0, r1, lsl r9
   1397c:	ldrdeq	r2, [r0], -lr
   13980:	andeq	r2, r0, sp, ror r8
   13984:	andeq	r2, r0, r9, asr #16
   13988:	andeq	r2, r0, r0, ror #14
   1398c:	andeq	r2, r0, r8, asr #15
   13990:	muleq	r0, r3, r7
   13994:	andeq	r2, r0, r8, asr r7
   13998:	andeq	r2, r0, sp, lsl r7
   1399c:	andeq	r2, r0, r9, ror #13
   139a0:			; <UNDEFINED> instruction: 0x000026b5
   139a4:	andeq	r2, r0, r1, lsl #13
   139a8:	andeq	r2, r0, r3, lsr r6
   139ac:	strdeq	r2, [r0], -r8
   139b0:			; <UNDEFINED> instruction: 0x000024b5
   139b4:	ldrdeq	r2, [r0], -r0
   139b8:	muleq	r0, fp, r5
   139bc:	andeq	r2, r0, r7, ror #10
   139c0:	andeq	r2, r0, r0, asr #7
   139c4:	andeq	r2, r0, r3, lsr r5
   139c8:	strdeq	r2, [r0], -fp
   139cc:	andeq	r2, r0, sl, asr #8

000139d0 <table_cell_nullify@@Base>:
   139d0:	push	{r4, r5, fp, lr}
   139d4:	add	fp, sp, #8
   139d8:	mov	r4, r2
   139dc:	bl	1473c <table_get_row_ptr@@Base>
   139e0:	ldr	r5, [r0]
   139e4:	ldr	r0, [r5, r4, lsl #2]
   139e8:	cmp	r0, #0
   139ec:	beq	139fc <table_cell_nullify@@Base+0x2c>
   139f0:	bl	11fa0 <free@plt>
   139f4:	mov	r0, #0
   139f8:	str	r0, [r5, r4, lsl #2]
   139fc:	mov	r0, #0
   13a00:	pop	{r4, r5, fp, pc}

00013a04 <table_column_init@@Base>:
   13a04:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13a08:	add	fp, sp, #24
   13a0c:	ldr	r7, [r0]
   13a10:	mov	r0, r2
   13a14:	mov	r4, r3
   13a18:	mov	r5, r2
   13a1c:	mov	r6, r1
   13a20:	bl	12000 <strlen@plt>
   13a24:	add	r0, r0, #1
   13a28:	bl	11fdc <malloc@plt>
   13a2c:	ldr	r8, [fp, #8]
   13a30:	add	r6, r6, r6, lsl #1
   13a34:	cmp	r0, #0
   13a38:	str	r0, [r7, r6, lsl #2]
   13a3c:	beq	13a48 <table_column_init@@Base+0x44>
   13a40:	mov	r1, r5
   13a44:	bl	11fc4 <strcpy@plt>
   13a48:	add	r0, r7, r6, lsl #2
   13a4c:	stmib	r0, {r4, r8}
   13a50:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013a54 <table_get_col_ptr@@Base>:
   13a54:	ldr	r0, [r0]
   13a58:	add	r1, r1, r1, lsl #1
   13a5c:	add	r0, r0, r1, lsl #2
   13a60:	bx	lr

00013a64 <table_column_destroy@@Base>:
   13a64:	ldr	r0, [r0]
   13a68:	add	r1, r1, r1, lsl #1
   13a6c:	ldr	r0, [r0, r1, lsl #2]
   13a70:	cmp	r0, #0
   13a74:	bxeq	lr
   13a78:	b	11fa0 <free@plt>

00013a7c <table_get_column_length@@Base>:
   13a7c:	ldr	r0, [r0, #4]
   13a80:	bx	lr

00013a84 <table_get_column@@Base>:
   13a84:	push	{r4, r5, r6, r7, fp, lr}
   13a88:	add	fp, sp, #16
   13a8c:	ldr	r6, [r0, #4]
   13a90:	cmp	r6, #1
   13a94:	blt	13acc <table_get_column@@Base+0x48>
   13a98:	ldr	r7, [r0]
   13a9c:	mov	r5, r1
   13aa0:	mov	r4, #0
   13aa4:	ldr	r0, [r7]
   13aa8:	mov	r1, r5
   13aac:	bl	11f88 <strcmp@plt>
   13ab0:	cmp	r0, #0
   13ab4:	beq	13ad0 <table_get_column@@Base+0x4c>
   13ab8:	add	r4, r4, #1
   13abc:	add	r7, r7, #12
   13ac0:	cmp	r4, r6
   13ac4:	blt	13aa4 <table_get_column@@Base+0x20>
   13ac8:	b	13ad0 <table_get_column@@Base+0x4c>
   13acc:	mov	r4, #0
   13ad0:	cmp	r4, r6
   13ad4:	mvneq	r4, #0
   13ad8:	mov	r0, r4
   13adc:	pop	{r4, r5, r6, r7, fp, pc}

00013ae0 <table_get_column_name@@Base>:
   13ae0:	ldr	r0, [r0]
   13ae4:	add	r1, r1, r1, lsl #1
   13ae8:	ldr	r0, [r0, r1, lsl #2]
   13aec:	bx	lr

00013af0 <table_get_column_data_type@@Base>:
   13af0:	ldr	r0, [r0]
   13af4:	add	r1, r1, r1, lsl #1
   13af8:	add	r0, r0, r1, lsl #2
   13afc:	ldr	r0, [r0, #4]
   13b00:	bx	lr

00013b04 <table_add_column@@Base>:
   13b04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13b08:	add	fp, sp, #28
   13b0c:	sub	sp, sp, #4
   13b10:	mov	r4, r0
   13b14:	mov	r8, r1
   13b18:	ldr	r0, [r0, #4]
   13b1c:	mov	r9, r2
   13b20:	ldr	r1, [r4, #8]
   13b24:	udiv	r2, r0, r1
   13b28:	mls	r0, r2, r1, r0
   13b2c:	cmp	r0, #0
   13b30:	bne	13b9c <table_add_column@@Base+0x98>
   13b34:	ldr	r2, [r4, #12]
   13b38:	ldr	r0, [r4]
   13b3c:	add	r1, r2, r1
   13b40:	str	r1, [r4, #12]
   13b44:	add	r1, r1, r1, lsl #1
   13b48:	lsl	r1, r1, #2
   13b4c:	bl	11fb8 <realloc@plt>
   13b50:	str	r0, [r4]
   13b54:	mov	r0, r4
   13b58:	bl	147a0 <table_get_row_length@@Base>
   13b5c:	cmp	r0, #1
   13b60:	blt	13b9c <table_add_column@@Base+0x98>
   13b64:	mov	r6, r0
   13b68:	mov	r5, #0
   13b6c:	mov	r0, r4
   13b70:	mov	r1, r5
   13b74:	bl	1473c <table_get_row_ptr@@Base>
   13b78:	ldr	r1, [r4, #12]
   13b7c:	mov	r7, r0
   13b80:	ldr	r0, [r0]
   13b84:	lsl	r1, r1, #2
   13b88:	bl	11fb8 <realloc@plt>
   13b8c:	add	r5, r5, #1
   13b90:	str	r0, [r7]
   13b94:	cmp	r6, r5
   13b98:	bne	13b6c <table_add_column@@Base+0x68>
   13b9c:	mov	r0, r4
   13ba0:	bl	147a0 <table_get_row_length@@Base>
   13ba4:	ldr	r6, [r4, #4]
   13ba8:	mov	r7, r0
   13bac:	mov	r0, r9
   13bb0:	bl	144b0 <table_get_default_compare_function_for_data_type@@Base>
   13bb4:	ldr	r5, [r4]
   13bb8:	mov	sl, r0
   13bbc:	mov	r0, r8
   13bc0:	bl	12000 <strlen@plt>
   13bc4:	add	r0, r0, #1
   13bc8:	bl	11fdc <malloc@plt>
   13bcc:	mov	r1, r8
   13bd0:	add	r8, r6, r6, lsl #1
   13bd4:	cmp	r0, #0
   13bd8:	str	r0, [r5, r8, lsl #2]
   13bdc:	beq	13be4 <table_add_column@@Base+0xe0>
   13be0:	bl	11fc4 <strcpy@plt>
   13be4:	add	r0, r5, r8, lsl #2
   13be8:	cmp	r7, #1
   13bec:	stmib	r0, {r9, sl}
   13bf0:	blt	13c14 <table_add_column@@Base+0x110>
   13bf4:	mov	r5, #0
   13bf8:	mov	r0, r4
   13bfc:	mov	r1, r5
   13c00:	mov	r2, r6
   13c04:	bl	12f3c <table_cell_init@@Base>
   13c08:	add	r5, r5, #1
   13c0c:	cmp	r7, r5
   13c10:	bne	13bf8 <table_add_column@@Base+0xf4>
   13c14:	ldr	r2, [r4, #4]
   13c18:	mov	r0, r4
   13c1c:	mvn	r1, #0
   13c20:	mov	r3, #8
   13c24:	bl	12ec0 <table_notify@@Base>
   13c28:	ldr	r0, [r4, #4]
   13c2c:	add	r1, r0, #1
   13c30:	str	r1, [r4, #4]
   13c34:	sub	sp, fp, #28
   13c38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00013c3c <table_remove_column@@Base>:
   13c3c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13c40:	add	fp, sp, #24
   13c44:	mov	r5, r0
   13c48:	ldr	r0, [r0]
   13c4c:	add	r6, r1, r1, lsl #1
   13c50:	mov	r9, r1
   13c54:	ldr	r0, [r0, r6, lsl #2]
   13c58:	cmp	r0, #0
   13c5c:	beq	13c64 <table_remove_column@@Base+0x28>
   13c60:	bl	11fa0 <free@plt>
   13c64:	ldr	r0, [r5, #4]
   13c68:	sub	r4, r0, #1
   13c6c:	cmp	r4, r9
   13c70:	ble	13ca0 <table_remove_column@@Base+0x64>
   13c74:	sub	r0, r4, r9
   13c78:	lsl	r1, r6, #2
   13c7c:	ldr	r2, [r5]
   13c80:	subs	r0, r0, #1
   13c84:	add	r2, r2, r1
   13c88:	add	r1, r1, #12
   13c8c:	vldr	d16, [r2, #12]
   13c90:	ldr	r3, [r2, #20]
   13c94:	str	r3, [r2, #8]
   13c98:	vstr	d16, [r2]
   13c9c:	bne	13c7c <table_remove_column@@Base+0x40>
   13ca0:	mov	r0, r5
   13ca4:	bl	147a0 <table_get_row_length@@Base>
   13ca8:	cmp	r0, #1
   13cac:	blt	13d08 <table_remove_column@@Base+0xcc>
   13cb0:	mov	r6, r0
   13cb4:	mov	r7, #0
   13cb8:	mov	r0, r5
   13cbc:	mov	r1, r7
   13cc0:	mov	r2, r9
   13cc4:	bl	12f78 <table_cell_destroy@@Base>
   13cc8:	mov	r0, r5
   13ccc:	mov	r1, r7
   13cd0:	bl	1473c <table_get_row_ptr@@Base>
   13cd4:	cmp	r4, r9
   13cd8:	ble	13cfc <table_remove_column@@Base+0xc0>
   13cdc:	mov	r1, r9
   13ce0:	ldr	r2, [r0]
   13ce4:	add	r3, r2, r1, lsl #2
   13ce8:	ldr	r3, [r3, #4]
   13cec:	str	r3, [r2, r1, lsl #2]
   13cf0:	add	r1, r1, #1
   13cf4:	cmp	r4, r1
   13cf8:	bne	13ce0 <table_remove_column@@Base+0xa4>
   13cfc:	add	r7, r7, #1
   13d00:	cmp	r7, r6
   13d04:	bne	13cb8 <table_remove_column@@Base+0x7c>
   13d08:	ldmib	r5, {r0, r1}
   13d0c:	sub	r0, r0, #1
   13d10:	udiv	r2, r0, r1
   13d14:	str	r0, [r5, #4]
   13d18:	mls	r0, r2, r1, r0
   13d1c:	cmp	r0, #0
   13d20:	bne	13d8c <table_remove_column@@Base+0x150>
   13d24:	ldr	r2, [r5, #12]
   13d28:	ldr	r0, [r5]
   13d2c:	sub	r1, r2, r1
   13d30:	str	r1, [r5, #12]
   13d34:	add	r1, r1, r1, lsl #1
   13d38:	lsl	r1, r1, #2
   13d3c:	bl	11fb8 <realloc@plt>
   13d40:	str	r0, [r5]
   13d44:	mov	r0, r5
   13d48:	bl	147a0 <table_get_row_length@@Base>
   13d4c:	cmp	r0, #1
   13d50:	blt	13d8c <table_remove_column@@Base+0x150>
   13d54:	mov	r8, r0
   13d58:	mov	r7, #0
   13d5c:	mov	r0, r5
   13d60:	mov	r1, r7
   13d64:	bl	1473c <table_get_row_ptr@@Base>
   13d68:	ldr	r1, [r5, #12]
   13d6c:	mov	r6, r0
   13d70:	ldr	r0, [r0]
   13d74:	lsl	r1, r1, #2
   13d78:	bl	11fb8 <realloc@plt>
   13d7c:	add	r7, r7, #1
   13d80:	str	r0, [r6]
   13d84:	cmp	r8, r7
   13d88:	bne	13d5c <table_remove_column@@Base+0x120>
   13d8c:	mov	r0, r5
   13d90:	mvn	r1, #0
   13d94:	mov	r2, r9
   13d98:	mov	r3, #16
   13d9c:	bl	12ec0 <table_notify@@Base>
   13da0:	mov	r0, #0
   13da4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013da8 <table_get_column_compare_function@@Base>:
   13da8:	ldr	r0, [r0]
   13dac:	add	r1, r1, r1, lsl #1
   13db0:	add	r0, r0, r1, lsl #2
   13db4:	ldr	r0, [r0, #8]
   13db8:	bx	lr

00013dbc <table_set_column_compare_function@@Base>:
   13dbc:	ldr	r0, [r0]
   13dc0:	add	r1, r1, r1, lsl #1
   13dc4:	add	r0, r0, r1, lsl #2
   13dc8:	str	r2, [r0, #8]
   13dcc:	bx	lr

00013dd0 <table_compare_bool@@Base>:
   13dd0:	cmp	r0, #0
   13dd4:	beq	13e08 <table_compare_bool@@Base+0x38>
   13dd8:	cmp	r1, #0
   13ddc:	moveq	r1, #1
   13de0:	moveq	r0, r1
   13de4:	bxeq	lr
   13de8:	ldrb	r2, [r1]
   13dec:	ldrb	r0, [r0]
   13df0:	mov	r1, #0
   13df4:	cmp	r0, r2
   13df8:	mvncc	r1, #0
   13dfc:	movwhi	r1, #1
   13e00:	mov	r0, r1
   13e04:	bx	lr
   13e08:	cmp	r1, #0
   13e0c:	mvnne	r1, #0
   13e10:	mov	r0, r1
   13e14:	bx	lr

00013e18 <table_compare_int@@Base>:
   13e18:	cmp	r0, #0
   13e1c:	beq	13e50 <table_compare_int@@Base+0x38>
   13e20:	cmp	r1, #0
   13e24:	moveq	r1, #1
   13e28:	moveq	r0, r1
   13e2c:	bxeq	lr
   13e30:	ldr	r2, [r1]
   13e34:	ldr	r0, [r0]
   13e38:	mov	r1, #0
   13e3c:	cmp	r0, r2
   13e40:	mvnlt	r1, #0
   13e44:	movwgt	r1, #1
   13e48:	mov	r0, r1
   13e4c:	bx	lr
   13e50:	cmp	r1, #0
   13e54:	mvnne	r1, #0
   13e58:	mov	r0, r1
   13e5c:	bx	lr

00013e60 <table_compare_uint@@Base>:
   13e60:	cmp	r0, #0
   13e64:	beq	13e98 <table_compare_uint@@Base+0x38>
   13e68:	cmp	r1, #0
   13e6c:	moveq	r1, #1
   13e70:	moveq	r0, r1
   13e74:	bxeq	lr
   13e78:	ldr	r2, [r1]
   13e7c:	ldr	r0, [r0]
   13e80:	mov	r1, #0
   13e84:	cmp	r0, r2
   13e88:	mvncc	r1, #0
   13e8c:	movwhi	r1, #1
   13e90:	mov	r0, r1
   13e94:	bx	lr
   13e98:	cmp	r1, #0
   13e9c:	mvnne	r1, #0
   13ea0:	mov	r0, r1
   13ea4:	bx	lr

00013ea8 <table_compare_int8@@Base>:
   13ea8:	cmp	r0, #0
   13eac:	beq	13ee0 <table_compare_int8@@Base+0x38>
   13eb0:	cmp	r1, #0
   13eb4:	moveq	r1, #1
   13eb8:	moveq	r0, r1
   13ebc:	bxeq	lr
   13ec0:	ldrsb	r2, [r1]
   13ec4:	ldrsb	r0, [r0]
   13ec8:	mov	r1, #0
   13ecc:	cmp	r0, r2
   13ed0:	mvnlt	r1, #0
   13ed4:	movwgt	r1, #1
   13ed8:	mov	r0, r1
   13edc:	bx	lr
   13ee0:	cmp	r1, #0
   13ee4:	mvnne	r1, #0
   13ee8:	mov	r0, r1
   13eec:	bx	lr

00013ef0 <table_compare_uint8@@Base>:
   13ef0:	cmp	r0, #0
   13ef4:	beq	13f28 <table_compare_uint8@@Base+0x38>
   13ef8:	cmp	r1, #0
   13efc:	moveq	r1, #1
   13f00:	moveq	r0, r1
   13f04:	bxeq	lr
   13f08:	ldrb	r2, [r1]
   13f0c:	ldrb	r0, [r0]
   13f10:	mov	r1, #0
   13f14:	cmp	r0, r2
   13f18:	mvncc	r1, #0
   13f1c:	movwhi	r1, #1
   13f20:	mov	r0, r1
   13f24:	bx	lr
   13f28:	cmp	r1, #0
   13f2c:	mvnne	r1, #0
   13f30:	mov	r0, r1
   13f34:	bx	lr

00013f38 <table_compare_int16@@Base>:
   13f38:	cmp	r0, #0
   13f3c:	beq	13f70 <table_compare_int16@@Base+0x38>
   13f40:	cmp	r1, #0
   13f44:	moveq	r1, #1
   13f48:	moveq	r0, r1
   13f4c:	bxeq	lr
   13f50:	ldrsh	r2, [r1]
   13f54:	ldrsh	r0, [r0]
   13f58:	mov	r1, #0
   13f5c:	cmp	r0, r2
   13f60:	mvnlt	r1, #0
   13f64:	movwgt	r1, #1
   13f68:	mov	r0, r1
   13f6c:	bx	lr
   13f70:	cmp	r1, #0
   13f74:	mvnne	r1, #0
   13f78:	mov	r0, r1
   13f7c:	bx	lr

00013f80 <table_compare_uint16@@Base>:
   13f80:	cmp	r0, #0
   13f84:	beq	13fb8 <table_compare_uint16@@Base+0x38>
   13f88:	cmp	r1, #0
   13f8c:	moveq	r1, #1
   13f90:	moveq	r0, r1
   13f94:	bxeq	lr
   13f98:	ldrh	r2, [r1]
   13f9c:	ldrh	r0, [r0]
   13fa0:	mov	r1, #0
   13fa4:	cmp	r0, r2
   13fa8:	mvncc	r1, #0
   13fac:	movwhi	r1, #1
   13fb0:	mov	r0, r1
   13fb4:	bx	lr
   13fb8:	cmp	r1, #0
   13fbc:	mvnne	r1, #0
   13fc0:	mov	r0, r1
   13fc4:	bx	lr

00013fc8 <table_compare_int32@@Base>:
   13fc8:	cmp	r0, #0
   13fcc:	beq	14000 <table_compare_int32@@Base+0x38>
   13fd0:	cmp	r1, #0
   13fd4:	moveq	r1, #1
   13fd8:	moveq	r0, r1
   13fdc:	bxeq	lr
   13fe0:	ldr	r2, [r1]
   13fe4:	ldr	r0, [r0]
   13fe8:	mov	r1, #0
   13fec:	cmp	r0, r2
   13ff0:	mvnlt	r1, #0
   13ff4:	movwgt	r1, #1
   13ff8:	mov	r0, r1
   13ffc:	bx	lr
   14000:	cmp	r1, #0
   14004:	mvnne	r1, #0
   14008:	mov	r0, r1
   1400c:	bx	lr

00014010 <table_compare_uint32@@Base>:
   14010:	cmp	r0, #0
   14014:	beq	14048 <table_compare_uint32@@Base+0x38>
   14018:	cmp	r1, #0
   1401c:	moveq	r1, #1
   14020:	moveq	r0, r1
   14024:	bxeq	lr
   14028:	ldr	r2, [r1]
   1402c:	ldr	r0, [r0]
   14030:	mov	r1, #0
   14034:	cmp	r0, r2
   14038:	mvncc	r1, #0
   1403c:	movwhi	r1, #1
   14040:	mov	r0, r1
   14044:	bx	lr
   14048:	cmp	r1, #0
   1404c:	mvnne	r1, #0
   14050:	mov	r0, r1
   14054:	bx	lr

00014058 <table_compare_int64@@Base>:
   14058:	cmp	r0, #0
   1405c:	beq	140b0 <table_compare_int64@@Base+0x58>
   14060:	cmp	r1, #0
   14064:	moveq	r1, #1
   14068:	moveq	r0, r1
   1406c:	bxeq	lr
   14070:	push	{r5, r7, fp, lr}
   14074:	add	fp, sp, #8
   14078:	ldm	r1, {r2, r7}
   1407c:	ldm	r0, {r0, r5}
   14080:	mov	r1, #0
   14084:	subs	r3, r0, r2
   14088:	sbcs	r3, r5, r7
   1408c:	movwlt	r1, #1
   14090:	cmp	r1, #0
   14094:	mvnne	r1, #0
   14098:	subs	r0, r2, r0
   1409c:	sbcs	r0, r7, r5
   140a0:	movwlt	r1, #1
   140a4:	pop	{r5, r7, fp, lr}
   140a8:	mov	r0, r1
   140ac:	bx	lr
   140b0:	cmp	r1, #0
   140b4:	mvnne	r1, #0
   140b8:	mov	r0, r1
   140bc:	bx	lr

000140c0 <table_compare_uint64@@Base>:
   140c0:	cmp	r0, #0
   140c4:	beq	14118 <table_compare_uint64@@Base+0x58>
   140c8:	cmp	r1, #0
   140cc:	moveq	r1, #1
   140d0:	moveq	r0, r1
   140d4:	bxeq	lr
   140d8:	push	{r5, r7, fp, lr}
   140dc:	add	fp, sp, #8
   140e0:	ldm	r1, {r2, r7}
   140e4:	ldm	r0, {r0, r5}
   140e8:	mov	r1, #0
   140ec:	subs	r3, r0, r2
   140f0:	sbcs	r3, r5, r7
   140f4:	movwcc	r1, #1
   140f8:	cmp	r1, #0
   140fc:	mvnne	r1, #0
   14100:	subs	r0, r2, r0
   14104:	sbcs	r0, r7, r5
   14108:	movwcc	r1, #1
   1410c:	pop	{r5, r7, fp, lr}
   14110:	mov	r0, r1
   14114:	bx	lr
   14118:	cmp	r1, #0
   1411c:	mvnne	r1, #0
   14120:	mov	r0, r1
   14124:	bx	lr

00014128 <table_compare_short@@Base>:
   14128:	cmp	r0, #0
   1412c:	beq	14160 <table_compare_short@@Base+0x38>
   14130:	cmp	r1, #0
   14134:	moveq	r1, #1
   14138:	moveq	r0, r1
   1413c:	bxeq	lr
   14140:	ldrsh	r2, [r1]
   14144:	ldrsh	r0, [r0]
   14148:	mov	r1, #0
   1414c:	cmp	r0, r2
   14150:	mvnlt	r1, #0
   14154:	movwgt	r1, #1
   14158:	mov	r0, r1
   1415c:	bx	lr
   14160:	cmp	r1, #0
   14164:	mvnne	r1, #0
   14168:	mov	r0, r1
   1416c:	bx	lr

00014170 <table_compare_ushort@@Base>:
   14170:	cmp	r0, #0
   14174:	beq	141a8 <table_compare_ushort@@Base+0x38>
   14178:	cmp	r1, #0
   1417c:	moveq	r1, #1
   14180:	moveq	r0, r1
   14184:	bxeq	lr
   14188:	ldrh	r2, [r1]
   1418c:	ldrh	r0, [r0]
   14190:	mov	r1, #0
   14194:	cmp	r0, r2
   14198:	mvncc	r1, #0
   1419c:	movwhi	r1, #1
   141a0:	mov	r0, r1
   141a4:	bx	lr
   141a8:	cmp	r1, #0
   141ac:	mvnne	r1, #0
   141b0:	mov	r0, r1
   141b4:	bx	lr

000141b8 <table_compare_long@@Base>:
   141b8:	cmp	r0, #0
   141bc:	beq	141f0 <table_compare_long@@Base+0x38>
   141c0:	cmp	r1, #0
   141c4:	moveq	r1, #1
   141c8:	moveq	r0, r1
   141cc:	bxeq	lr
   141d0:	ldr	r2, [r1]
   141d4:	ldr	r0, [r0]
   141d8:	mov	r1, #0
   141dc:	cmp	r0, r2
   141e0:	mvnlt	r1, #0
   141e4:	movwgt	r1, #1
   141e8:	mov	r0, r1
   141ec:	bx	lr
   141f0:	cmp	r1, #0
   141f4:	mvnne	r1, #0
   141f8:	mov	r0, r1
   141fc:	bx	lr

00014200 <table_compare_ulong@@Base>:
   14200:	cmp	r0, #0
   14204:	beq	14238 <table_compare_ulong@@Base+0x38>
   14208:	cmp	r1, #0
   1420c:	moveq	r1, #1
   14210:	moveq	r0, r1
   14214:	bxeq	lr
   14218:	ldr	r2, [r1]
   1421c:	ldr	r0, [r0]
   14220:	mov	r1, #0
   14224:	cmp	r0, r2
   14228:	mvncc	r1, #0
   1422c:	movwhi	r1, #1
   14230:	mov	r0, r1
   14234:	bx	lr
   14238:	cmp	r1, #0
   1423c:	mvnne	r1, #0
   14240:	mov	r0, r1
   14244:	bx	lr

00014248 <table_compare_llong@@Base>:
   14248:	cmp	r0, #0
   1424c:	beq	142a0 <table_compare_llong@@Base+0x58>
   14250:	cmp	r1, #0
   14254:	moveq	r1, #1
   14258:	moveq	r0, r1
   1425c:	bxeq	lr
   14260:	push	{r5, r7, fp, lr}
   14264:	add	fp, sp, #8
   14268:	ldm	r1, {r2, r7}
   1426c:	ldm	r0, {r0, r5}
   14270:	mov	r1, #0
   14274:	subs	r3, r0, r2
   14278:	sbcs	r3, r5, r7
   1427c:	movwlt	r1, #1
   14280:	cmp	r1, #0
   14284:	mvnne	r1, #0
   14288:	subs	r0, r2, r0
   1428c:	sbcs	r0, r7, r5
   14290:	movwlt	r1, #1
   14294:	pop	{r5, r7, fp, lr}
   14298:	mov	r0, r1
   1429c:	bx	lr
   142a0:	cmp	r1, #0
   142a4:	mvnne	r1, #0
   142a8:	mov	r0, r1
   142ac:	bx	lr

000142b0 <table_compare_ullong@@Base>:
   142b0:	cmp	r0, #0
   142b4:	beq	142e8 <table_compare_ullong@@Base+0x38>
   142b8:	cmp	r1, #0
   142bc:	moveq	r1, #1
   142c0:	moveq	r0, r1
   142c4:	bxeq	lr
   142c8:	ldr	r2, [r1]
   142cc:	ldr	r0, [r0]
   142d0:	mov	r1, #0
   142d4:	cmp	r0, r2
   142d8:	mvncc	r1, #0
   142dc:	movwhi	r1, #1
   142e0:	mov	r0, r1
   142e4:	bx	lr
   142e8:	cmp	r1, #0
   142ec:	mvnne	r1, #0
   142f0:	mov	r0, r1
   142f4:	bx	lr

000142f8 <table_compare_float@@Base>:
   142f8:	cmp	r0, #0
   142fc:	beq	14334 <table_compare_float@@Base+0x3c>
   14300:	cmp	r1, #0
   14304:	moveq	r1, #1
   14308:	moveq	r0, r1
   1430c:	bxeq	lr
   14310:	vldr	s0, [r1]
   14314:	vldr	s2, [r0]
   14318:	mov	r1, #0
   1431c:	vcmpe.f32	s2, s0
   14320:	vmrs	APSR_nzcv, fpscr
   14324:	mvnmi	r1, #0
   14328:	movwgt	r1, #1
   1432c:	mov	r0, r1
   14330:	bx	lr
   14334:	cmp	r1, #0
   14338:	mvnne	r1, #0
   1433c:	mov	r0, r1
   14340:	bx	lr

00014344 <table_compare_double@@Base>:
   14344:	cmp	r0, #0
   14348:	beq	14380 <table_compare_double@@Base+0x3c>
   1434c:	cmp	r1, #0
   14350:	moveq	r1, #1
   14354:	moveq	r0, r1
   14358:	bxeq	lr
   1435c:	vldr	d16, [r1]
   14360:	vldr	d17, [r0]
   14364:	mov	r1, #0
   14368:	vcmpe.f64	d17, d16
   1436c:	vmrs	APSR_nzcv, fpscr
   14370:	mvnmi	r1, #0
   14374:	movwgt	r1, #1
   14378:	mov	r0, r1
   1437c:	bx	lr
   14380:	cmp	r1, #0
   14384:	mvnne	r1, #0
   14388:	mov	r0, r1
   1438c:	bx	lr

00014390 <table_compare_ldouble@@Base>:
   14390:	cmp	r0, #0
   14394:	beq	143cc <table_compare_ldouble@@Base+0x3c>
   14398:	cmp	r1, #0
   1439c:	moveq	r1, #1
   143a0:	moveq	r0, r1
   143a4:	bxeq	lr
   143a8:	vldr	d16, [r1]
   143ac:	vldr	d17, [r0]
   143b0:	mov	r1, #0
   143b4:	vcmpe.f64	d17, d16
   143b8:	vmrs	APSR_nzcv, fpscr
   143bc:	mvnmi	r1, #0
   143c0:	movwgt	r1, #1
   143c4:	mov	r0, r1
   143c8:	bx	lr
   143cc:	cmp	r1, #0
   143d0:	mvnne	r1, #0
   143d4:	mov	r0, r1
   143d8:	bx	lr

000143dc <table_compare_char@@Base>:
   143dc:	cmp	r0, #0
   143e0:	beq	14414 <table_compare_char@@Base+0x38>
   143e4:	cmp	r1, #0
   143e8:	moveq	r1, #1
   143ec:	moveq	r0, r1
   143f0:	bxeq	lr
   143f4:	ldrb	r2, [r1]
   143f8:	ldrb	r0, [r0]
   143fc:	mov	r1, #0
   14400:	cmp	r0, r2
   14404:	mvncc	r1, #0
   14408:	movwhi	r1, #1
   1440c:	mov	r0, r1
   14410:	bx	lr
   14414:	cmp	r1, #0
   14418:	mvnne	r1, #0
   1441c:	mov	r0, r1
   14420:	bx	lr

00014424 <table_compare_uchar@@Base>:
   14424:	cmp	r0, #0
   14428:	beq	1445c <table_compare_uchar@@Base+0x38>
   1442c:	cmp	r1, #0
   14430:	moveq	r1, #1
   14434:	moveq	r0, r1
   14438:	bxeq	lr
   1443c:	ldrb	r2, [r1]
   14440:	ldrb	r0, [r0]
   14444:	mov	r1, #0
   14448:	cmp	r0, r2
   1444c:	mvncc	r1, #0
   14450:	movwhi	r1, #1
   14454:	mov	r0, r1
   14458:	bx	lr
   1445c:	cmp	r1, #0
   14460:	mvnne	r1, #0
   14464:	mov	r0, r1
   14468:	bx	lr

0001446c <table_compare_string@@Base>:
   1446c:	cmp	r0, #0
   14470:	beq	14488 <table_compare_string@@Base+0x1c>
   14474:	cmp	r1, #0
   14478:	moveq	r1, #1
   1447c:	moveq	r0, r1
   14480:	bxeq	lr
   14484:	b	11f88 <strcmp@plt>
   14488:	cmp	r1, #0
   1448c:	mvnne	r1, #0
   14490:	mov	r0, r1
   14494:	bx	lr

00014498 <table_compare_ptr@@Base>:
   14498:	mov	r2, #0
   1449c:	cmp	r0, r1
   144a0:	mvncc	r2, #0
   144a4:	movwhi	r2, #1
   144a8:	mov	r0, r2
   144ac:	bx	lr

000144b0 <table_get_default_compare_function_for_data_type@@Base>:
   144b0:	cmp	r0, #23
   144b4:	ldrls	r1, [pc, #12]	; 144c8 <table_get_default_compare_function_for_data_type@@Base+0x18>
   144b8:	movhi	r0, #0
   144bc:	addls	r1, pc, r1
   144c0:	ldrls	r0, [r1, r0, lsl #2]
   144c4:	bx	lr
   144c8:	andeq	r1, r1, ip, ror #19

000144cc <table_get@@Base>:
   144cc:	push	{fp, lr}
   144d0:	mov	fp, sp
   144d4:	bl	12f5c <table_get_cell_ptr@@Base>
   144d8:	ldr	r0, [r0]
   144dc:	pop	{fp, pc}

000144e0 <table_get_bool@@Base>:
   144e0:	push	{fp, lr}
   144e4:	mov	fp, sp
   144e8:	bl	12f5c <table_get_cell_ptr@@Base>
   144ec:	ldr	r0, [r0]
   144f0:	ldrb	r0, [r0]
   144f4:	pop	{fp, pc}

000144f8 <table_get_int@@Base>:
   144f8:	push	{fp, lr}
   144fc:	mov	fp, sp
   14500:	bl	12f5c <table_get_cell_ptr@@Base>
   14504:	ldr	r0, [r0]
   14508:	ldr	r0, [r0]
   1450c:	pop	{fp, pc}

00014510 <table_get_uint@@Base>:
   14510:	push	{fp, lr}
   14514:	mov	fp, sp
   14518:	bl	12f5c <table_get_cell_ptr@@Base>
   1451c:	ldr	r0, [r0]
   14520:	ldr	r0, [r0]
   14524:	pop	{fp, pc}

00014528 <table_get_int8@@Base>:
   14528:	push	{fp, lr}
   1452c:	mov	fp, sp
   14530:	bl	12f5c <table_get_cell_ptr@@Base>
   14534:	ldr	r0, [r0]
   14538:	ldrsb	r0, [r0]
   1453c:	pop	{fp, pc}

00014540 <table_get_uint8@@Base>:
   14540:	push	{fp, lr}
   14544:	mov	fp, sp
   14548:	bl	12f5c <table_get_cell_ptr@@Base>
   1454c:	ldr	r0, [r0]
   14550:	ldrb	r0, [r0]
   14554:	pop	{fp, pc}

00014558 <table_get_int16@@Base>:
   14558:	push	{fp, lr}
   1455c:	mov	fp, sp
   14560:	bl	12f5c <table_get_cell_ptr@@Base>
   14564:	ldr	r0, [r0]
   14568:	ldrsh	r0, [r0]
   1456c:	pop	{fp, pc}

00014570 <table_get_uint16@@Base>:
   14570:	push	{fp, lr}
   14574:	mov	fp, sp
   14578:	bl	12f5c <table_get_cell_ptr@@Base>
   1457c:	ldr	r0, [r0]
   14580:	ldrh	r0, [r0]
   14584:	pop	{fp, pc}

00014588 <table_get_int32@@Base>:
   14588:	push	{fp, lr}
   1458c:	mov	fp, sp
   14590:	bl	12f5c <table_get_cell_ptr@@Base>
   14594:	ldr	r0, [r0]
   14598:	ldr	r0, [r0]
   1459c:	pop	{fp, pc}

000145a0 <table_get_uint32@@Base>:
   145a0:	push	{fp, lr}
   145a4:	mov	fp, sp
   145a8:	bl	12f5c <table_get_cell_ptr@@Base>
   145ac:	ldr	r0, [r0]
   145b0:	ldr	r0, [r0]
   145b4:	pop	{fp, pc}

000145b8 <table_get_int64@@Base>:
   145b8:	push	{fp, lr}
   145bc:	mov	fp, sp
   145c0:	bl	12f5c <table_get_cell_ptr@@Base>
   145c4:	ldr	r0, [r0]
   145c8:	ldrd	r0, [r0]
   145cc:	pop	{fp, pc}

000145d0 <table_get_uint64@@Base>:
   145d0:	push	{fp, lr}
   145d4:	mov	fp, sp
   145d8:	bl	12f5c <table_get_cell_ptr@@Base>
   145dc:	ldr	r0, [r0]
   145e0:	ldrd	r0, [r0]
   145e4:	pop	{fp, pc}

000145e8 <table_get_short@@Base>:
   145e8:	push	{fp, lr}
   145ec:	mov	fp, sp
   145f0:	bl	12f5c <table_get_cell_ptr@@Base>
   145f4:	ldr	r0, [r0]
   145f8:	ldrsh	r0, [r0]
   145fc:	pop	{fp, pc}

00014600 <table_get_ushort@@Base>:
   14600:	push	{fp, lr}
   14604:	mov	fp, sp
   14608:	bl	12f5c <table_get_cell_ptr@@Base>
   1460c:	ldr	r0, [r0]
   14610:	ldrh	r0, [r0]
   14614:	pop	{fp, pc}

00014618 <table_get_long@@Base>:
   14618:	push	{fp, lr}
   1461c:	mov	fp, sp
   14620:	bl	12f5c <table_get_cell_ptr@@Base>
   14624:	ldr	r0, [r0]
   14628:	ldr	r0, [r0]
   1462c:	pop	{fp, pc}

00014630 <table_get_ulong@@Base>:
   14630:	push	{fp, lr}
   14634:	mov	fp, sp
   14638:	bl	12f5c <table_get_cell_ptr@@Base>
   1463c:	ldr	r0, [r0]
   14640:	ldr	r0, [r0]
   14644:	pop	{fp, pc}

00014648 <table_get_llong@@Base>:
   14648:	push	{fp, lr}
   1464c:	mov	fp, sp
   14650:	bl	12f5c <table_get_cell_ptr@@Base>
   14654:	ldr	r0, [r0]
   14658:	ldrd	r0, [r0]
   1465c:	pop	{fp, pc}

00014660 <table_get_ullong@@Base>:
   14660:	push	{fp, lr}
   14664:	mov	fp, sp
   14668:	bl	12f5c <table_get_cell_ptr@@Base>
   1466c:	ldr	r0, [r0]
   14670:	ldrd	r0, [r0]
   14674:	pop	{fp, pc}

00014678 <table_get_float@@Base>:
   14678:	push	{fp, lr}
   1467c:	mov	fp, sp
   14680:	bl	12f5c <table_get_cell_ptr@@Base>
   14684:	ldr	r0, [r0]
   14688:	vldr	s0, [r0]
   1468c:	pop	{fp, pc}

00014690 <table_get_double@@Base>:
   14690:	push	{fp, lr}
   14694:	mov	fp, sp
   14698:	bl	12f5c <table_get_cell_ptr@@Base>
   1469c:	ldr	r0, [r0]
   146a0:	vldr	d0, [r0]
   146a4:	pop	{fp, pc}

000146a8 <table_get_ldouble@@Base>:
   146a8:	push	{fp, lr}
   146ac:	mov	fp, sp
   146b0:	bl	12f5c <table_get_cell_ptr@@Base>
   146b4:	ldr	r0, [r0]
   146b8:	vldr	d0, [r0]
   146bc:	pop	{fp, pc}

000146c0 <table_get_char@@Base>:
   146c0:	push	{fp, lr}
   146c4:	mov	fp, sp
   146c8:	bl	12f5c <table_get_cell_ptr@@Base>
   146cc:	ldr	r0, [r0]
   146d0:	ldrb	r0, [r0]
   146d4:	pop	{fp, pc}

000146d8 <table_get_uchar@@Base>:
   146d8:	push	{fp, lr}
   146dc:	mov	fp, sp
   146e0:	bl	12f5c <table_get_cell_ptr@@Base>
   146e4:	ldr	r0, [r0]
   146e8:	ldrb	r0, [r0]
   146ec:	pop	{fp, pc}

000146f0 <table_get_string@@Base>:
   146f0:	push	{fp, lr}
   146f4:	mov	fp, sp
   146f8:	bl	12f5c <table_get_cell_ptr@@Base>
   146fc:	ldr	r0, [r0]
   14700:	pop	{fp, pc}

00014704 <table_get_ptr@@Base>:
   14704:	push	{fp, lr}
   14708:	mov	fp, sp
   1470c:	bl	12f5c <table_get_cell_ptr@@Base>
   14710:	ldr	r0, [r0]
   14714:	pop	{fp, pc}

00014718 <table_row_init@@Base>:
   14718:	push	{r4, r5, fp, lr}
   1471c:	add	fp, sp, #8
   14720:	mov	r4, r1
   14724:	ldr	r1, [r0, #12]
   14728:	ldr	r5, [r0, #16]
   1472c:	lsl	r0, r1, #2
   14730:	bl	11fdc <malloc@plt>
   14734:	str	r0, [r5, r4, lsl #2]
   14738:	pop	{r4, r5, fp, pc}

0001473c <table_get_row_ptr@@Base>:
   1473c:	ldr	r0, [r0, #16]
   14740:	add	r0, r0, r1, lsl #2
   14744:	bx	lr

00014748 <table_row_destroy@@Base>:
   14748:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1474c:	add	fp, sp, #24
   14750:	mov	r4, r1
   14754:	mov	r5, r0
   14758:	bl	13a7c <table_get_column_length@@Base>
   1475c:	ldr	r8, [r5, #16]
   14760:	cmp	r0, #1
   14764:	blt	1478c <table_row_destroy@@Base+0x44>
   14768:	mov	r6, r0
   1476c:	mov	r7, #0
   14770:	mov	r0, r5
   14774:	mov	r1, r4
   14778:	mov	r2, r7
   1477c:	bl	12f78 <table_cell_destroy@@Base>
   14780:	add	r7, r7, #1
   14784:	cmp	r6, r7
   14788:	bne	14770 <table_row_destroy@@Base+0x28>
   1478c:	ldr	r0, [r8, r4, lsl #2]
   14790:	cmp	r0, #0
   14794:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   14798:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1479c:	b	11fa0 <free@plt>

000147a0 <table_get_row_length@@Base>:
   147a0:	ldr	r0, [r0, #20]
   147a4:	bx	lr

000147a8 <table_add_row@@Base>:
   147a8:	push	{r4, r5, r6, r7, fp, lr}
   147ac:	add	fp, sp, #16
   147b0:	ldr	r5, [r0, #20]
   147b4:	ldr	r1, [r0, #24]
   147b8:	mov	r4, r0
   147bc:	udiv	r0, r5, r1
   147c0:	mls	r0, r0, r1, r5
   147c4:	cmp	r0, #0
   147c8:	bne	147ec <table_add_row@@Base+0x44>
   147cc:	ldr	r2, [r4, #28]
   147d0:	ldr	r0, [r4, #16]
   147d4:	add	r1, r2, r1
   147d8:	str	r1, [r4, #28]
   147dc:	lsl	r1, r1, #2
   147e0:	bl	11fb8 <realloc@plt>
   147e4:	str	r0, [r4, #16]
   147e8:	ldr	r5, [r4, #20]
   147ec:	mov	r0, r4
   147f0:	bl	13a7c <table_get_column_length@@Base>
   147f4:	mov	r6, r0
   147f8:	ldr	r0, [r4, #12]
   147fc:	ldr	r7, [r4, #16]
   14800:	lsl	r0, r0, #2
   14804:	bl	11fdc <malloc@plt>
   14808:	cmp	r6, #1
   1480c:	str	r0, [r7, r5, lsl #2]
   14810:	blt	14834 <table_add_row@@Base+0x8c>
   14814:	mov	r7, #0
   14818:	mov	r0, r4
   1481c:	mov	r1, r5
   14820:	mov	r2, r7
   14824:	bl	12f3c <table_cell_init@@Base>
   14828:	add	r7, r7, #1
   1482c:	cmp	r6, r7
   14830:	bne	14818 <table_add_row@@Base+0x70>
   14834:	ldr	r1, [r4, #20]
   14838:	mov	r0, r4
   1483c:	mvn	r2, #0
   14840:	mov	r3, #2
   14844:	bl	12ec0 <table_notify@@Base>
   14848:	ldr	r0, [r4, #20]
   1484c:	add	r1, r0, #1
   14850:	str	r1, [r4, #20]
   14854:	pop	{r4, r5, r6, r7, fp, pc}

00014858 <table_remove_row@@Base>:
   14858:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1485c:	add	fp, sp, #24
   14860:	ldr	r8, [r0, #20]
   14864:	mov	r4, r1
   14868:	mov	r5, r0
   1486c:	bl	13a7c <table_get_column_length@@Base>
   14870:	cmp	r0, #1
   14874:	blt	148c0 <table_remove_row@@Base+0x68>
   14878:	mov	r6, r0
   1487c:	mov	r7, #0
   14880:	mov	r0, r5
   14884:	mov	r1, r7
   14888:	bl	13af0 <table_get_column_data_type@@Base>
   1488c:	cmp	r0, #23
   14890:	beq	148b4 <table_remove_row@@Base+0x5c>
   14894:	mov	r0, r5
   14898:	mov	r1, r4
   1489c:	mov	r2, r7
   148a0:	bl	12f5c <table_get_cell_ptr@@Base>
   148a4:	ldr	r0, [r0]
   148a8:	cmp	r0, #0
   148ac:	beq	148b4 <table_remove_row@@Base+0x5c>
   148b0:	bl	11fa0 <free@plt>
   148b4:	add	r7, r7, #1
   148b8:	cmp	r6, r7
   148bc:	bne	14880 <table_remove_row@@Base+0x28>
   148c0:	ldr	r0, [r5, #16]
   148c4:	ldr	r0, [r0, r4, lsl #2]
   148c8:	cmp	r0, #0
   148cc:	beq	148d4 <table_remove_row@@Base+0x7c>
   148d0:	bl	11fa0 <free@plt>
   148d4:	sub	r0, r8, #1
   148d8:	cmp	r0, r4
   148dc:	ble	14900 <table_remove_row@@Base+0xa8>
   148e0:	mov	r1, r4
   148e4:	ldr	r2, [r5, #16]
   148e8:	add	r3, r2, r1, lsl #2
   148ec:	ldr	r3, [r3, #4]
   148f0:	str	r3, [r2, r1, lsl #2]
   148f4:	add	r1, r1, #1
   148f8:	cmp	r0, r1
   148fc:	bne	148e4 <table_remove_row@@Base+0x8c>
   14900:	ldr	r0, [r5, #20]
   14904:	ldr	r1, [r5, #24]
   14908:	sub	r0, r0, #1
   1490c:	udiv	r2, r0, r1
   14910:	str	r0, [r5, #20]
   14914:	mls	r0, r2, r1, r0
   14918:	cmp	r0, #0
   1491c:	bne	1493c <table_remove_row@@Base+0xe4>
   14920:	ldr	r2, [r5, #28]
   14924:	ldr	r0, [r5, #16]
   14928:	sub	r1, r2, r1
   1492c:	str	r1, [r5, #28]
   14930:	lsl	r1, r1, #2
   14934:	bl	11fb8 <realloc@plt>
   14938:	str	r0, [r5, #16]
   1493c:	mov	r0, r5
   14940:	mov	r1, r4
   14944:	mvn	r2, #0
   14948:	mov	r3, #4
   1494c:	bl	12ec0 <table_notify@@Base>
   14950:	mov	r0, #0
   14954:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014958 <table_set_row_ptr@@Base>:
   14958:	ldr	r2, [r2]
   1495c:	ldr	r0, [r0, #16]
   14960:	str	r2, [r0, r1, lsl #2]
   14964:	bx	lr

00014968 <table_set@@Base>:
   14968:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1496c:	add	fp, sp, #24
   14970:	mov	r8, r3
   14974:	mov	r4, r2
   14978:	mov	r9, r1
   1497c:	mov	r6, r0
   14980:	bl	12f5c <table_get_cell_ptr@@Base>
   14984:	mov	r5, r0
   14988:	mov	r0, r6
   1498c:	mov	r1, r4
   14990:	bl	13a54 <table_get_col_ptr@@Base>
   14994:	ldr	r1, [fp, #8]
   14998:	mvn	r7, #0
   1499c:	cmp	r1, #23
   149a0:	bhi	14c68 <table_set@@Base+0x300>
   149a4:	add	r2, pc, #4
   149a8:	ldr	r1, [r2, r1, lsl #2]
   149ac:	add	pc, r2, r1
   149b0:	andeq	r0, r0, r0, rrx
   149b4:	andeq	r0, r0, r0, ror r0
   149b8:	andeq	r0, r0, r0, lsl #1
   149bc:	muleq	r0, r0, r0
   149c0:	andeq	r0, r0, r0, lsr #1
   149c4:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   149c8:	andeq	r0, r0, r0, asr #1
   149cc:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   149d0:	andeq	r0, r0, r0, ror #1
   149d4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   149d8:	andeq	r0, r0, r0, lsl #2
   149dc:	andeq	r0, r0, r0, lsl r1
   149e0:	andeq	r0, r0, r8, asr #2
   149e4:	andeq	r0, r0, r8, asr r1
   149e8:	andeq	r0, r0, r8, ror #2
   149ec:	andeq	r0, r0, r8, ror r1
   149f0:	andeq	r0, r0, r8, lsl #3
   149f4:	andeq	r0, r0, r0, asr #3
   149f8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   149fc:	andeq	r0, r0, r0, lsl r2
   14a00:	andeq	r0, r0, r0, lsr #4
   14a04:	andeq	r0, r0, r0, lsr r2
   14a08:	andeq	r0, r0, ip, ror #4
   14a0c:	andeq	r0, r0, r0, asr #5
   14a10:	ldr	r0, [r0, #4]
   14a14:	cmp	r0, #0
   14a18:	bne	14c68 <table_set@@Base+0x300>
   14a1c:	b	14b44 <table_set@@Base+0x1dc>
   14a20:	ldr	r0, [r0, #4]
   14a24:	cmp	r0, #1
   14a28:	beq	14b44 <table_set@@Base+0x1dc>
   14a2c:	b	14c68 <table_set@@Base+0x300>
   14a30:	ldr	r0, [r0, #4]
   14a34:	cmp	r0, #2
   14a38:	beq	14c28 <table_set@@Base+0x2c0>
   14a3c:	b	14c68 <table_set@@Base+0x300>
   14a40:	ldr	r0, [r0, #4]
   14a44:	cmp	r0, #3
   14a48:	beq	14c28 <table_set@@Base+0x2c0>
   14a4c:	b	14c68 <table_set@@Base+0x300>
   14a50:	ldr	r0, [r0, #4]
   14a54:	cmp	r0, #4
   14a58:	beq	14acc <table_set@@Base+0x164>
   14a5c:	b	14c68 <table_set@@Base+0x300>
   14a60:	ldr	r0, [r0, #4]
   14a64:	cmp	r0, #5
   14a68:	beq	14acc <table_set@@Base+0x164>
   14a6c:	b	14c68 <table_set@@Base+0x300>
   14a70:	ldr	r0, [r0, #4]
   14a74:	cmp	r0, #6
   14a78:	beq	14b44 <table_set@@Base+0x1dc>
   14a7c:	b	14c68 <table_set@@Base+0x300>
   14a80:	ldr	r0, [r0, #4]
   14a84:	cmp	r0, #7
   14a88:	beq	14b44 <table_set@@Base+0x1dc>
   14a8c:	b	14c68 <table_set@@Base+0x300>
   14a90:	ldr	r0, [r0, #4]
   14a94:	cmp	r0, #8
   14a98:	beq	14b8c <table_set@@Base+0x224>
   14a9c:	b	14c68 <table_set@@Base+0x300>
   14aa0:	ldr	r0, [r0, #4]
   14aa4:	cmp	r0, #9
   14aa8:	beq	14b8c <table_set@@Base+0x224>
   14aac:	b	14c68 <table_set@@Base+0x300>
   14ab0:	ldr	r0, [r0, #4]
   14ab4:	cmp	r0, #10
   14ab8:	beq	14acc <table_set@@Base+0x164>
   14abc:	b	14c68 <table_set@@Base+0x300>
   14ac0:	ldr	r0, [r0, #4]
   14ac4:	cmp	r0, #11
   14ac8:	bne	14c68 <table_set@@Base+0x300>
   14acc:	ldr	r0, [r5]
   14ad0:	cmp	r0, #0
   14ad4:	bne	14aec <table_set@@Base+0x184>
   14ad8:	mov	r0, #2
   14adc:	bl	11fdc <malloc@plt>
   14ae0:	cmp	r0, #0
   14ae4:	str	r0, [r5]
   14ae8:	beq	14c68 <table_set@@Base+0x300>
   14aec:	ldrh	r1, [r8]
   14af0:	strh	r1, [r0]
   14af4:	b	14c50 <table_set@@Base+0x2e8>
   14af8:	ldr	r0, [r0, #4]
   14afc:	cmp	r0, #12
   14b00:	beq	14b44 <table_set@@Base+0x1dc>
   14b04:	b	14c68 <table_set@@Base+0x300>
   14b08:	ldr	r0, [r0, #4]
   14b0c:	cmp	r0, #13
   14b10:	beq	14b44 <table_set@@Base+0x1dc>
   14b14:	b	14c68 <table_set@@Base+0x300>
   14b18:	ldr	r0, [r0, #4]
   14b1c:	cmp	r0, #14
   14b20:	beq	14b8c <table_set@@Base+0x224>
   14b24:	b	14c68 <table_set@@Base+0x300>
   14b28:	ldr	r0, [r0, #4]
   14b2c:	cmp	r0, #15
   14b30:	beq	14b8c <table_set@@Base+0x224>
   14b34:	b	14c68 <table_set@@Base+0x300>
   14b38:	ldr	r0, [r0, #4]
   14b3c:	cmp	r0, #16
   14b40:	bne	14c68 <table_set@@Base+0x300>
   14b44:	ldr	r0, [r5]
   14b48:	cmp	r0, #0
   14b4c:	bne	14b64 <table_set@@Base+0x1fc>
   14b50:	mov	r0, #4
   14b54:	bl	11fdc <malloc@plt>
   14b58:	cmp	r0, #0
   14b5c:	str	r0, [r5]
   14b60:	beq	14c68 <table_set@@Base+0x300>
   14b64:	ldr	r1, [r8]
   14b68:	str	r1, [r0]
   14b6c:	b	14c50 <table_set@@Base+0x2e8>
   14b70:	ldr	r0, [r0, #4]
   14b74:	cmp	r0, #17
   14b78:	beq	14b8c <table_set@@Base+0x224>
   14b7c:	b	14c68 <table_set@@Base+0x300>
   14b80:	ldr	r0, [r0, #4]
   14b84:	cmp	r0, #18
   14b88:	bne	14c68 <table_set@@Base+0x300>
   14b8c:	ldr	r0, [r5]
   14b90:	cmp	r0, #0
   14b94:	bne	14bac <table_set@@Base+0x244>
   14b98:	mov	r0, #8
   14b9c:	bl	11fdc <malloc@plt>
   14ba0:	cmp	r0, #0
   14ba4:	str	r0, [r5]
   14ba8:	beq	14c68 <table_set@@Base+0x300>
   14bac:	ldr	r1, [r8]
   14bb0:	ldr	r2, [r8, #4]
   14bb4:	str	r2, [r0, #4]
   14bb8:	str	r1, [r0]
   14bbc:	b	14c50 <table_set@@Base+0x2e8>
   14bc0:	ldr	r0, [r0, #4]
   14bc4:	cmp	r0, #19
   14bc8:	beq	14c28 <table_set@@Base+0x2c0>
   14bcc:	b	14c68 <table_set@@Base+0x300>
   14bd0:	ldr	r0, [r0, #4]
   14bd4:	cmp	r0, #20
   14bd8:	beq	14c28 <table_set@@Base+0x2c0>
   14bdc:	b	14c68 <table_set@@Base+0x300>
   14be0:	ldr	r0, [r0, #4]
   14be4:	cmp	r0, #21
   14be8:	bne	14c68 <table_set@@Base+0x300>
   14bec:	mov	r0, r8
   14bf0:	bl	12000 <strlen@plt>
   14bf4:	ldr	r2, [r5]
   14bf8:	add	r1, r0, #1
   14bfc:	mov	r0, r2
   14c00:	bl	11fb8 <realloc@plt>
   14c04:	cmp	r0, #0
   14c08:	str	r0, [r5]
   14c0c:	beq	14c68 <table_set@@Base+0x300>
   14c10:	mov	r1, r8
   14c14:	bl	11fc4 <strcpy@plt>
   14c18:	b	14c50 <table_set@@Base+0x2e8>
   14c1c:	ldr	r0, [r0, #4]
   14c20:	cmp	r0, #22
   14c24:	bne	14c68 <table_set@@Base+0x300>
   14c28:	ldr	r0, [r5]
   14c2c:	cmp	r0, #0
   14c30:	bne	14c48 <table_set@@Base+0x2e0>
   14c34:	mov	r0, #1
   14c38:	bl	11fdc <malloc@plt>
   14c3c:	cmp	r0, #0
   14c40:	str	r0, [r5]
   14c44:	beq	14c68 <table_set@@Base+0x300>
   14c48:	ldrb	r1, [r8]
   14c4c:	strb	r1, [r0]
   14c50:	mov	r0, r6
   14c54:	mov	r1, r9
   14c58:	mov	r2, r4
   14c5c:	mov	r3, #1
   14c60:	bl	12ec0 <table_notify@@Base>
   14c64:	mov	r7, #0
   14c68:	mov	r0, r7
   14c6c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   14c70:	ldr	r0, [r0, #4]
   14c74:	cmp	r0, #23
   14c78:	bne	14c68 <table_set@@Base+0x300>
   14c7c:	str	r8, [r5]
   14c80:	b	14c50 <table_set@@Base+0x2e8>

00014c84 <table_set_bool@@Base>:
   14c84:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14c88:	add	fp, sp, #24
   14c8c:	mov	r8, r3
   14c90:	mov	r4, r2
   14c94:	mov	r9, r1
   14c98:	mov	r6, r0
   14c9c:	bl	12f5c <table_get_cell_ptr@@Base>
   14ca0:	mov	r5, r0
   14ca4:	mov	r0, r6
   14ca8:	mov	r1, r4
   14cac:	bl	13a54 <table_get_col_ptr@@Base>
   14cb0:	ldr	r0, [r0, #4]
   14cb4:	mvn	r7, #0
   14cb8:	cmp	r0, #22
   14cbc:	bne	14cfc <table_set_bool@@Base+0x78>
   14cc0:	ldr	r0, [r5]
   14cc4:	cmp	r0, #0
   14cc8:	bne	14ce0 <table_set_bool@@Base+0x5c>
   14ccc:	mov	r0, #1
   14cd0:	bl	11fdc <malloc@plt>
   14cd4:	cmp	r0, #0
   14cd8:	str	r0, [r5]
   14cdc:	beq	14cfc <table_set_bool@@Base+0x78>
   14ce0:	strb	r8, [r0]
   14ce4:	mov	r0, r6
   14ce8:	mov	r1, r9
   14cec:	mov	r2, r4
   14cf0:	mov	r3, #1
   14cf4:	bl	12ec0 <table_notify@@Base>
   14cf8:	mov	r7, #0
   14cfc:	mov	r0, r7
   14d00:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014d04 <table_set_int@@Base>:
   14d04:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14d08:	add	fp, sp, #24
   14d0c:	mov	r8, r3
   14d10:	mov	r4, r2
   14d14:	mov	r5, r1
   14d18:	mov	r6, r0
   14d1c:	bl	12f5c <table_get_cell_ptr@@Base>
   14d20:	mov	r9, r0
   14d24:	mov	r0, r6
   14d28:	mov	r1, r4
   14d2c:	bl	13a54 <table_get_col_ptr@@Base>
   14d30:	ldr	r0, [r0, #4]
   14d34:	mvn	r7, #0
   14d38:	cmp	r0, #0
   14d3c:	bne	14d7c <table_set_int@@Base+0x78>
   14d40:	ldr	r0, [r9]
   14d44:	cmp	r0, #0
   14d48:	bne	14d60 <table_set_int@@Base+0x5c>
   14d4c:	mov	r0, #4
   14d50:	bl	11fdc <malloc@plt>
   14d54:	cmp	r0, #0
   14d58:	str	r0, [r9]
   14d5c:	beq	14d7c <table_set_int@@Base+0x78>
   14d60:	str	r8, [r0]
   14d64:	mov	r0, r6
   14d68:	mov	r1, r5
   14d6c:	mov	r2, r4
   14d70:	mov	r3, #1
   14d74:	bl	12ec0 <table_notify@@Base>
   14d78:	mov	r7, #0
   14d7c:	mov	r0, r7
   14d80:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014d84 <table_set_uint@@Base>:
   14d84:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14d88:	add	fp, sp, #24
   14d8c:	mov	r8, r3
   14d90:	mov	r4, r2
   14d94:	mov	r5, r1
   14d98:	mov	r6, r0
   14d9c:	bl	12f5c <table_get_cell_ptr@@Base>
   14da0:	mov	r9, r0
   14da4:	mov	r0, r6
   14da8:	mov	r1, r4
   14dac:	bl	13a54 <table_get_col_ptr@@Base>
   14db0:	ldr	r0, [r0, #4]
   14db4:	mvn	r7, #0
   14db8:	cmp	r0, #1
   14dbc:	bne	14dfc <table_set_uint@@Base+0x78>
   14dc0:	ldr	r0, [r9]
   14dc4:	cmp	r0, #0
   14dc8:	bne	14de0 <table_set_uint@@Base+0x5c>
   14dcc:	mov	r0, #4
   14dd0:	bl	11fdc <malloc@plt>
   14dd4:	cmp	r0, #0
   14dd8:	str	r0, [r9]
   14ddc:	beq	14dfc <table_set_uint@@Base+0x78>
   14de0:	str	r8, [r0]
   14de4:	mov	r0, r6
   14de8:	mov	r1, r5
   14dec:	mov	r2, r4
   14df0:	mov	r3, #1
   14df4:	bl	12ec0 <table_notify@@Base>
   14df8:	mov	r7, #0
   14dfc:	mov	r0, r7
   14e00:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014e04 <table_set_int8@@Base>:
   14e04:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14e08:	add	fp, sp, #24
   14e0c:	mov	r8, r3
   14e10:	mov	r4, r2
   14e14:	mov	r9, r1
   14e18:	mov	r6, r0
   14e1c:	bl	12f5c <table_get_cell_ptr@@Base>
   14e20:	mov	r5, r0
   14e24:	mov	r0, r6
   14e28:	mov	r1, r4
   14e2c:	bl	13a54 <table_get_col_ptr@@Base>
   14e30:	ldr	r0, [r0, #4]
   14e34:	mvn	r7, #0
   14e38:	cmp	r0, #2
   14e3c:	bne	14e7c <table_set_int8@@Base+0x78>
   14e40:	ldr	r0, [r5]
   14e44:	cmp	r0, #0
   14e48:	bne	14e60 <table_set_int8@@Base+0x5c>
   14e4c:	mov	r0, #1
   14e50:	bl	11fdc <malloc@plt>
   14e54:	cmp	r0, #0
   14e58:	str	r0, [r5]
   14e5c:	beq	14e7c <table_set_int8@@Base+0x78>
   14e60:	strb	r8, [r0]
   14e64:	mov	r0, r6
   14e68:	mov	r1, r9
   14e6c:	mov	r2, r4
   14e70:	mov	r3, #1
   14e74:	bl	12ec0 <table_notify@@Base>
   14e78:	mov	r7, #0
   14e7c:	mov	r0, r7
   14e80:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014e84 <table_set_uint8@@Base>:
   14e84:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14e88:	add	fp, sp, #24
   14e8c:	mov	r8, r3
   14e90:	mov	r4, r2
   14e94:	mov	r9, r1
   14e98:	mov	r6, r0
   14e9c:	bl	12f5c <table_get_cell_ptr@@Base>
   14ea0:	mov	r5, r0
   14ea4:	mov	r0, r6
   14ea8:	mov	r1, r4
   14eac:	bl	13a54 <table_get_col_ptr@@Base>
   14eb0:	ldr	r0, [r0, #4]
   14eb4:	mvn	r7, #0
   14eb8:	cmp	r0, #3
   14ebc:	bne	14efc <table_set_uint8@@Base+0x78>
   14ec0:	ldr	r0, [r5]
   14ec4:	cmp	r0, #0
   14ec8:	bne	14ee0 <table_set_uint8@@Base+0x5c>
   14ecc:	mov	r0, #1
   14ed0:	bl	11fdc <malloc@plt>
   14ed4:	cmp	r0, #0
   14ed8:	str	r0, [r5]
   14edc:	beq	14efc <table_set_uint8@@Base+0x78>
   14ee0:	strb	r8, [r0]
   14ee4:	mov	r0, r6
   14ee8:	mov	r1, r9
   14eec:	mov	r2, r4
   14ef0:	mov	r3, #1
   14ef4:	bl	12ec0 <table_notify@@Base>
   14ef8:	mov	r7, #0
   14efc:	mov	r0, r7
   14f00:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014f04 <table_set_int16@@Base>:
   14f04:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14f08:	add	fp, sp, #24
   14f0c:	mov	r8, r3
   14f10:	mov	r4, r2
   14f14:	mov	r9, r1
   14f18:	mov	r6, r0
   14f1c:	bl	12f5c <table_get_cell_ptr@@Base>
   14f20:	mov	r5, r0
   14f24:	mov	r0, r6
   14f28:	mov	r1, r4
   14f2c:	bl	13a54 <table_get_col_ptr@@Base>
   14f30:	ldr	r0, [r0, #4]
   14f34:	mvn	r7, #0
   14f38:	cmp	r0, #4
   14f3c:	bne	14f7c <table_set_int16@@Base+0x78>
   14f40:	ldr	r0, [r5]
   14f44:	cmp	r0, #0
   14f48:	bne	14f60 <table_set_int16@@Base+0x5c>
   14f4c:	mov	r0, #2
   14f50:	bl	11fdc <malloc@plt>
   14f54:	cmp	r0, #0
   14f58:	str	r0, [r5]
   14f5c:	beq	14f7c <table_set_int16@@Base+0x78>
   14f60:	strh	r8, [r0]
   14f64:	mov	r0, r6
   14f68:	mov	r1, r9
   14f6c:	mov	r2, r4
   14f70:	mov	r3, #1
   14f74:	bl	12ec0 <table_notify@@Base>
   14f78:	mov	r7, #0
   14f7c:	mov	r0, r7
   14f80:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014f84 <table_set_uint16@@Base>:
   14f84:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14f88:	add	fp, sp, #24
   14f8c:	mov	r8, r3
   14f90:	mov	r4, r2
   14f94:	mov	r9, r1
   14f98:	mov	r6, r0
   14f9c:	bl	12f5c <table_get_cell_ptr@@Base>
   14fa0:	mov	r5, r0
   14fa4:	mov	r0, r6
   14fa8:	mov	r1, r4
   14fac:	bl	13a54 <table_get_col_ptr@@Base>
   14fb0:	ldr	r0, [r0, #4]
   14fb4:	mvn	r7, #0
   14fb8:	cmp	r0, #5
   14fbc:	bne	14ffc <table_set_uint16@@Base+0x78>
   14fc0:	ldr	r0, [r5]
   14fc4:	cmp	r0, #0
   14fc8:	bne	14fe0 <table_set_uint16@@Base+0x5c>
   14fcc:	mov	r0, #2
   14fd0:	bl	11fdc <malloc@plt>
   14fd4:	cmp	r0, #0
   14fd8:	str	r0, [r5]
   14fdc:	beq	14ffc <table_set_uint16@@Base+0x78>
   14fe0:	strh	r8, [r0]
   14fe4:	mov	r0, r6
   14fe8:	mov	r1, r9
   14fec:	mov	r2, r4
   14ff0:	mov	r3, #1
   14ff4:	bl	12ec0 <table_notify@@Base>
   14ff8:	mov	r7, #0
   14ffc:	mov	r0, r7
   15000:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015004 <table_set_int32@@Base>:
   15004:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15008:	add	fp, sp, #24
   1500c:	mov	r8, r3
   15010:	mov	r4, r2
   15014:	mov	r5, r1
   15018:	mov	r6, r0
   1501c:	bl	12f5c <table_get_cell_ptr@@Base>
   15020:	mov	r9, r0
   15024:	mov	r0, r6
   15028:	mov	r1, r4
   1502c:	bl	13a54 <table_get_col_ptr@@Base>
   15030:	ldr	r0, [r0, #4]
   15034:	mvn	r7, #0
   15038:	cmp	r0, #6
   1503c:	bne	1507c <table_set_int32@@Base+0x78>
   15040:	ldr	r0, [r9]
   15044:	cmp	r0, #0
   15048:	bne	15060 <table_set_int32@@Base+0x5c>
   1504c:	mov	r0, #4
   15050:	bl	11fdc <malloc@plt>
   15054:	cmp	r0, #0
   15058:	str	r0, [r9]
   1505c:	beq	1507c <table_set_int32@@Base+0x78>
   15060:	str	r8, [r0]
   15064:	mov	r0, r6
   15068:	mov	r1, r5
   1506c:	mov	r2, r4
   15070:	mov	r3, #1
   15074:	bl	12ec0 <table_notify@@Base>
   15078:	mov	r7, #0
   1507c:	mov	r0, r7
   15080:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015084 <table_set_uint32@@Base>:
   15084:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15088:	add	fp, sp, #24
   1508c:	mov	r8, r3
   15090:	mov	r4, r2
   15094:	mov	r5, r1
   15098:	mov	r6, r0
   1509c:	bl	12f5c <table_get_cell_ptr@@Base>
   150a0:	mov	r9, r0
   150a4:	mov	r0, r6
   150a8:	mov	r1, r4
   150ac:	bl	13a54 <table_get_col_ptr@@Base>
   150b0:	ldr	r0, [r0, #4]
   150b4:	mvn	r7, #0
   150b8:	cmp	r0, #7
   150bc:	bne	150fc <table_set_uint32@@Base+0x78>
   150c0:	ldr	r0, [r9]
   150c4:	cmp	r0, #0
   150c8:	bne	150e0 <table_set_uint32@@Base+0x5c>
   150cc:	mov	r0, #4
   150d0:	bl	11fdc <malloc@plt>
   150d4:	cmp	r0, #0
   150d8:	str	r0, [r9]
   150dc:	beq	150fc <table_set_uint32@@Base+0x78>
   150e0:	str	r8, [r0]
   150e4:	mov	r0, r6
   150e8:	mov	r1, r5
   150ec:	mov	r2, r4
   150f0:	mov	r3, #1
   150f4:	bl	12ec0 <table_notify@@Base>
   150f8:	mov	r7, #0
   150fc:	mov	r0, r7
   15100:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015104 <table_set_int64@@Base>:
   15104:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15108:	add	fp, sp, #24
   1510c:	mov	r4, r2
   15110:	mov	r8, r1
   15114:	mov	r6, r0
   15118:	bl	12f5c <table_get_cell_ptr@@Base>
   1511c:	mov	r5, r0
   15120:	mov	r0, r6
   15124:	mov	r1, r4
   15128:	bl	13a54 <table_get_col_ptr@@Base>
   1512c:	ldr	r0, [r0, #4]
   15130:	mvn	r7, #0
   15134:	cmp	r0, #8
   15138:	bne	15184 <table_set_int64@@Base+0x80>
   1513c:	ldr	r0, [r5]
   15140:	cmp	r0, #0
   15144:	bne	1515c <table_set_int64@@Base+0x58>
   15148:	mov	r0, #8
   1514c:	bl	11fdc <malloc@plt>
   15150:	cmp	r0, #0
   15154:	str	r0, [r5]
   15158:	beq	15184 <table_set_int64@@Base+0x80>
   1515c:	ldr	r1, [fp, #12]
   15160:	ldr	r2, [fp, #8]
   15164:	mov	r3, #1
   15168:	str	r2, [r0]
   1516c:	str	r1, [r0, #4]
   15170:	mov	r0, r6
   15174:	mov	r1, r8
   15178:	mov	r2, r4
   1517c:	bl	12ec0 <table_notify@@Base>
   15180:	mov	r7, #0
   15184:	mov	r0, r7
   15188:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001518c <table_set_uint64@@Base>:
   1518c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15190:	add	fp, sp, #24
   15194:	mov	r4, r2
   15198:	mov	r8, r1
   1519c:	mov	r6, r0
   151a0:	bl	12f5c <table_get_cell_ptr@@Base>
   151a4:	mov	r5, r0
   151a8:	mov	r0, r6
   151ac:	mov	r1, r4
   151b0:	bl	13a54 <table_get_col_ptr@@Base>
   151b4:	ldr	r0, [r0, #4]
   151b8:	mvn	r7, #0
   151bc:	cmp	r0, #9
   151c0:	bne	1520c <table_set_uint64@@Base+0x80>
   151c4:	ldr	r0, [r5]
   151c8:	cmp	r0, #0
   151cc:	bne	151e4 <table_set_uint64@@Base+0x58>
   151d0:	mov	r0, #8
   151d4:	bl	11fdc <malloc@plt>
   151d8:	cmp	r0, #0
   151dc:	str	r0, [r5]
   151e0:	beq	1520c <table_set_uint64@@Base+0x80>
   151e4:	ldr	r1, [fp, #12]
   151e8:	ldr	r2, [fp, #8]
   151ec:	mov	r3, #1
   151f0:	str	r2, [r0]
   151f4:	str	r1, [r0, #4]
   151f8:	mov	r0, r6
   151fc:	mov	r1, r8
   15200:	mov	r2, r4
   15204:	bl	12ec0 <table_notify@@Base>
   15208:	mov	r7, #0
   1520c:	mov	r0, r7
   15210:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015214 <table_set_short@@Base>:
   15214:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15218:	add	fp, sp, #24
   1521c:	mov	r8, r3
   15220:	mov	r4, r2
   15224:	mov	r9, r1
   15228:	mov	r6, r0
   1522c:	bl	12f5c <table_get_cell_ptr@@Base>
   15230:	mov	r5, r0
   15234:	mov	r0, r6
   15238:	mov	r1, r4
   1523c:	bl	13a54 <table_get_col_ptr@@Base>
   15240:	ldr	r0, [r0, #4]
   15244:	mvn	r7, #0
   15248:	cmp	r0, #10
   1524c:	bne	1528c <table_set_short@@Base+0x78>
   15250:	ldr	r0, [r5]
   15254:	cmp	r0, #0
   15258:	bne	15270 <table_set_short@@Base+0x5c>
   1525c:	mov	r0, #2
   15260:	bl	11fdc <malloc@plt>
   15264:	cmp	r0, #0
   15268:	str	r0, [r5]
   1526c:	beq	1528c <table_set_short@@Base+0x78>
   15270:	strh	r8, [r0]
   15274:	mov	r0, r6
   15278:	mov	r1, r9
   1527c:	mov	r2, r4
   15280:	mov	r3, #1
   15284:	bl	12ec0 <table_notify@@Base>
   15288:	mov	r7, #0
   1528c:	mov	r0, r7
   15290:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015294 <table_set_ushort@@Base>:
   15294:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15298:	add	fp, sp, #24
   1529c:	mov	r8, r3
   152a0:	mov	r4, r2
   152a4:	mov	r9, r1
   152a8:	mov	r6, r0
   152ac:	bl	12f5c <table_get_cell_ptr@@Base>
   152b0:	mov	r5, r0
   152b4:	mov	r0, r6
   152b8:	mov	r1, r4
   152bc:	bl	13a54 <table_get_col_ptr@@Base>
   152c0:	ldr	r0, [r0, #4]
   152c4:	mvn	r7, #0
   152c8:	cmp	r0, #11
   152cc:	bne	1530c <table_set_ushort@@Base+0x78>
   152d0:	ldr	r0, [r5]
   152d4:	cmp	r0, #0
   152d8:	bne	152f0 <table_set_ushort@@Base+0x5c>
   152dc:	mov	r0, #2
   152e0:	bl	11fdc <malloc@plt>
   152e4:	cmp	r0, #0
   152e8:	str	r0, [r5]
   152ec:	beq	1530c <table_set_ushort@@Base+0x78>
   152f0:	strh	r8, [r0]
   152f4:	mov	r0, r6
   152f8:	mov	r1, r9
   152fc:	mov	r2, r4
   15300:	mov	r3, #1
   15304:	bl	12ec0 <table_notify@@Base>
   15308:	mov	r7, #0
   1530c:	mov	r0, r7
   15310:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015314 <table_set_long@@Base>:
   15314:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15318:	add	fp, sp, #24
   1531c:	mov	r8, r3
   15320:	mov	r4, r2
   15324:	mov	r5, r1
   15328:	mov	r6, r0
   1532c:	bl	12f5c <table_get_cell_ptr@@Base>
   15330:	mov	r9, r0
   15334:	mov	r0, r6
   15338:	mov	r1, r4
   1533c:	bl	13a54 <table_get_col_ptr@@Base>
   15340:	ldr	r0, [r0, #4]
   15344:	mvn	r7, #0
   15348:	cmp	r0, #12
   1534c:	bne	1538c <table_set_long@@Base+0x78>
   15350:	ldr	r0, [r9]
   15354:	cmp	r0, #0
   15358:	bne	15370 <table_set_long@@Base+0x5c>
   1535c:	mov	r0, #4
   15360:	bl	11fdc <malloc@plt>
   15364:	cmp	r0, #0
   15368:	str	r0, [r9]
   1536c:	beq	1538c <table_set_long@@Base+0x78>
   15370:	str	r8, [r0]
   15374:	mov	r0, r6
   15378:	mov	r1, r5
   1537c:	mov	r2, r4
   15380:	mov	r3, #1
   15384:	bl	12ec0 <table_notify@@Base>
   15388:	mov	r7, #0
   1538c:	mov	r0, r7
   15390:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015394 <table_set_ulong@@Base>:
   15394:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15398:	add	fp, sp, #24
   1539c:	mov	r8, r3
   153a0:	mov	r4, r2
   153a4:	mov	r5, r1
   153a8:	mov	r6, r0
   153ac:	bl	12f5c <table_get_cell_ptr@@Base>
   153b0:	mov	r9, r0
   153b4:	mov	r0, r6
   153b8:	mov	r1, r4
   153bc:	bl	13a54 <table_get_col_ptr@@Base>
   153c0:	ldr	r0, [r0, #4]
   153c4:	mvn	r7, #0
   153c8:	cmp	r0, #13
   153cc:	bne	1540c <table_set_ulong@@Base+0x78>
   153d0:	ldr	r0, [r9]
   153d4:	cmp	r0, #0
   153d8:	bne	153f0 <table_set_ulong@@Base+0x5c>
   153dc:	mov	r0, #4
   153e0:	bl	11fdc <malloc@plt>
   153e4:	cmp	r0, #0
   153e8:	str	r0, [r9]
   153ec:	beq	1540c <table_set_ulong@@Base+0x78>
   153f0:	str	r8, [r0]
   153f4:	mov	r0, r6
   153f8:	mov	r1, r5
   153fc:	mov	r2, r4
   15400:	mov	r3, #1
   15404:	bl	12ec0 <table_notify@@Base>
   15408:	mov	r7, #0
   1540c:	mov	r0, r7
   15410:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015414 <table_set_llong@@Base>:
   15414:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15418:	add	fp, sp, #24
   1541c:	mov	r4, r2
   15420:	mov	r8, r1
   15424:	mov	r6, r0
   15428:	bl	12f5c <table_get_cell_ptr@@Base>
   1542c:	mov	r5, r0
   15430:	mov	r0, r6
   15434:	mov	r1, r4
   15438:	bl	13a54 <table_get_col_ptr@@Base>
   1543c:	ldr	r0, [r0, #4]
   15440:	mvn	r7, #0
   15444:	cmp	r0, #14
   15448:	bne	15494 <table_set_llong@@Base+0x80>
   1544c:	ldr	r0, [r5]
   15450:	cmp	r0, #0
   15454:	bne	1546c <table_set_llong@@Base+0x58>
   15458:	mov	r0, #8
   1545c:	bl	11fdc <malloc@plt>
   15460:	cmp	r0, #0
   15464:	str	r0, [r5]
   15468:	beq	15494 <table_set_llong@@Base+0x80>
   1546c:	ldr	r1, [fp, #12]
   15470:	ldr	r2, [fp, #8]
   15474:	mov	r3, #1
   15478:	str	r2, [r0]
   1547c:	str	r1, [r0, #4]
   15480:	mov	r0, r6
   15484:	mov	r1, r8
   15488:	mov	r2, r4
   1548c:	bl	12ec0 <table_notify@@Base>
   15490:	mov	r7, #0
   15494:	mov	r0, r7
   15498:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001549c <table_set_ullong@@Base>:
   1549c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   154a0:	add	fp, sp, #24
   154a4:	mov	r4, r2
   154a8:	mov	r8, r1
   154ac:	mov	r6, r0
   154b0:	bl	12f5c <table_get_cell_ptr@@Base>
   154b4:	mov	r5, r0
   154b8:	mov	r0, r6
   154bc:	mov	r1, r4
   154c0:	bl	13a54 <table_get_col_ptr@@Base>
   154c4:	ldr	r0, [r0, #4]
   154c8:	mvn	r7, #0
   154cc:	cmp	r0, #15
   154d0:	bne	1551c <table_set_ullong@@Base+0x80>
   154d4:	ldr	r0, [r5]
   154d8:	cmp	r0, #0
   154dc:	bne	154f4 <table_set_ullong@@Base+0x58>
   154e0:	mov	r0, #8
   154e4:	bl	11fdc <malloc@plt>
   154e8:	cmp	r0, #0
   154ec:	str	r0, [r5]
   154f0:	beq	1551c <table_set_ullong@@Base+0x80>
   154f4:	ldr	r1, [fp, #12]
   154f8:	ldr	r2, [fp, #8]
   154fc:	mov	r3, #1
   15500:	str	r2, [r0]
   15504:	str	r1, [r0, #4]
   15508:	mov	r0, r6
   1550c:	mov	r1, r8
   15510:	mov	r2, r4
   15514:	bl	12ec0 <table_notify@@Base>
   15518:	mov	r7, #0
   1551c:	mov	r0, r7
   15520:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015524 <table_set_float@@Base>:
   15524:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   15528:	add	fp, sp, #24
   1552c:	vpush	{d8}
   15530:	vmov.f32	s16, s0
   15534:	mov	r4, r2
   15538:	mov	r8, r1
   1553c:	mov	r6, r0
   15540:	bl	12f5c <table_get_cell_ptr@@Base>
   15544:	mov	r5, r0
   15548:	mov	r0, r6
   1554c:	mov	r1, r4
   15550:	bl	13a54 <table_get_col_ptr@@Base>
   15554:	ldr	r0, [r0, #4]
   15558:	mvn	r7, #0
   1555c:	cmp	r0, #16
   15560:	bne	155a4 <table_set_float@@Base+0x80>
   15564:	ldr	r0, [r5]
   15568:	cmp	r0, #0
   1556c:	bne	15584 <table_set_float@@Base+0x60>
   15570:	mov	r0, #4
   15574:	bl	11fdc <malloc@plt>
   15578:	cmp	r0, #0
   1557c:	str	r0, [r5]
   15580:	beq	155a4 <table_set_float@@Base+0x80>
   15584:	vmov	r1, s16
   15588:	mov	r2, r4
   1558c:	mov	r3, #1
   15590:	str	r1, [r0]
   15594:	mov	r0, r6
   15598:	mov	r1, r8
   1559c:	bl	12ec0 <table_notify@@Base>
   155a0:	mov	r7, #0
   155a4:	mov	r0, r7
   155a8:	vpop	{d8}
   155ac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000155b0 <table_set_double@@Base>:
   155b0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   155b4:	add	fp, sp, #24
   155b8:	vpush	{d8}
   155bc:	vorr	d8, d0, d0
   155c0:	mov	r4, r2
   155c4:	mov	r5, r1
   155c8:	mov	r6, r0
   155cc:	bl	12f5c <table_get_cell_ptr@@Base>
   155d0:	mov	r8, r0
   155d4:	mov	r0, r6
   155d8:	mov	r1, r4
   155dc:	bl	13a54 <table_get_col_ptr@@Base>
   155e0:	ldr	r0, [r0, #4]
   155e4:	mvn	r7, #0
   155e8:	cmp	r0, #17
   155ec:	bne	1562c <table_set_double@@Base+0x7c>
   155f0:	ldr	r0, [r8]
   155f4:	cmp	r0, #0
   155f8:	bne	15610 <table_set_double@@Base+0x60>
   155fc:	mov	r0, #8
   15600:	bl	11fdc <malloc@plt>
   15604:	cmp	r0, #0
   15608:	str	r0, [r8]
   1560c:	beq	1562c <table_set_double@@Base+0x7c>
   15610:	vst1.8	{d8}, [r0]
   15614:	mov	r0, r6
   15618:	mov	r1, r5
   1561c:	mov	r2, r4
   15620:	mov	r3, #1
   15624:	bl	12ec0 <table_notify@@Base>
   15628:	mov	r7, #0
   1562c:	mov	r0, r7
   15630:	vpop	{d8}
   15634:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00015638 <table_set_ldouble@@Base>:
   15638:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1563c:	add	fp, sp, #24
   15640:	vpush	{d8}
   15644:	vorr	d8, d0, d0
   15648:	mov	r4, r2
   1564c:	mov	r5, r1
   15650:	mov	r6, r0
   15654:	bl	12f5c <table_get_cell_ptr@@Base>
   15658:	mov	r8, r0
   1565c:	mov	r0, r6
   15660:	mov	r1, r4
   15664:	bl	13a54 <table_get_col_ptr@@Base>
   15668:	ldr	r0, [r0, #4]
   1566c:	mvn	r7, #0
   15670:	cmp	r0, #18
   15674:	bne	156b4 <table_set_ldouble@@Base+0x7c>
   15678:	ldr	r0, [r8]
   1567c:	cmp	r0, #0
   15680:	bne	15698 <table_set_ldouble@@Base+0x60>
   15684:	mov	r0, #8
   15688:	bl	11fdc <malloc@plt>
   1568c:	cmp	r0, #0
   15690:	str	r0, [r8]
   15694:	beq	156b4 <table_set_ldouble@@Base+0x7c>
   15698:	vst1.8	{d8}, [r0]
   1569c:	mov	r0, r6
   156a0:	mov	r1, r5
   156a4:	mov	r2, r4
   156a8:	mov	r3, #1
   156ac:	bl	12ec0 <table_notify@@Base>
   156b0:	mov	r7, #0
   156b4:	mov	r0, r7
   156b8:	vpop	{d8}
   156bc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000156c0 <table_set_string@@Base>:
   156c0:	push	{fp, lr}
   156c4:	mov	fp, sp
   156c8:	sub	sp, sp, #8
   156cc:	mov	ip, #21
   156d0:	str	ip, [sp]
   156d4:	bl	14968 <table_set@@Base>
   156d8:	mov	sp, fp
   156dc:	pop	{fp, pc}

000156e0 <table_set_char@@Base>:
   156e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   156e4:	add	fp, sp, #24
   156e8:	mov	r8, r3
   156ec:	mov	r4, r2
   156f0:	mov	r9, r1
   156f4:	mov	r6, r0
   156f8:	bl	12f5c <table_get_cell_ptr@@Base>
   156fc:	mov	r5, r0
   15700:	mov	r0, r6
   15704:	mov	r1, r4
   15708:	bl	13a54 <table_get_col_ptr@@Base>
   1570c:	ldr	r0, [r0, #4]
   15710:	mvn	r7, #0
   15714:	cmp	r0, #19
   15718:	bne	15758 <table_set_char@@Base+0x78>
   1571c:	ldr	r0, [r5]
   15720:	cmp	r0, #0
   15724:	bne	1573c <table_set_char@@Base+0x5c>
   15728:	mov	r0, #1
   1572c:	bl	11fdc <malloc@plt>
   15730:	cmp	r0, #0
   15734:	str	r0, [r5]
   15738:	beq	15758 <table_set_char@@Base+0x78>
   1573c:	strb	r8, [r0]
   15740:	mov	r0, r6
   15744:	mov	r1, r9
   15748:	mov	r2, r4
   1574c:	mov	r3, #1
   15750:	bl	12ec0 <table_notify@@Base>
   15754:	mov	r7, #0
   15758:	mov	r0, r7
   1575c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00015760 <table_set_uchar@@Base>:
   15760:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   15764:	add	fp, sp, #24
   15768:	mov	r8, r3
   1576c:	mov	r4, r2
   15770:	mov	r9, r1
   15774:	mov	r6, r0
   15778:	bl	12f5c <table_get_cell_ptr@@Base>
   1577c:	mov	r5, r0
   15780:	mov	r0, r6
   15784:	mov	r1, r4
   15788:	bl	13a54 <table_get_col_ptr@@Base>
   1578c:	ldr	r0, [r0, #4]
   15790:	mvn	r7, #0
   15794:	cmp	r0, #20
   15798:	bne	157d8 <table_set_uchar@@Base+0x78>
   1579c:	ldr	r0, [r5]
   157a0:	cmp	r0, #0
   157a4:	bne	157bc <table_set_uchar@@Base+0x5c>
   157a8:	mov	r0, #1
   157ac:	bl	11fdc <malloc@plt>
   157b0:	cmp	r0, #0
   157b4:	str	r0, [r5]
   157b8:	beq	157d8 <table_set_uchar@@Base+0x78>
   157bc:	strb	r8, [r0]
   157c0:	mov	r0, r6
   157c4:	mov	r1, r9
   157c8:	mov	r2, r4
   157cc:	mov	r3, #1
   157d0:	bl	12ec0 <table_notify@@Base>
   157d4:	mov	r7, #0
   157d8:	mov	r0, r7
   157dc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000157e0 <table_set_ptr@@Base>:
   157e0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   157e4:	add	fp, sp, #24
   157e8:	mov	r8, r3
   157ec:	mov	r4, r2
   157f0:	mov	r5, r1
   157f4:	mov	r6, r0
   157f8:	bl	12f5c <table_get_cell_ptr@@Base>
   157fc:	mov	r7, r0
   15800:	mov	r0, r6
   15804:	mov	r1, r4
   15808:	bl	13a54 <table_get_col_ptr@@Base>
   1580c:	ldr	r1, [r0, #4]
   15810:	mvn	r0, #0
   15814:	cmp	r1, #23
   15818:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   1581c:	mov	r0, r6
   15820:	mov	r1, r5
   15824:	mov	r2, r4
   15828:	mov	r3, #1
   1582c:	str	r8, [r7]
   15830:	bl	12ec0 <table_notify@@Base>
   15834:	mov	r0, #0
   15838:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0001583c <table_column_sort@@Base>:
   1583c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15840:	add	fp, sp, #28
   15844:	sub	sp, sp, #44	; 0x2c
   15848:	mov	r4, r0
   1584c:	cmp	r3, #1
   15850:	str	r2, [sp, #16]
   15854:	str	r1, [sp, #20]
   15858:	str	r3, [sp, #12]
   1585c:	blt	15a44 <table_column_sort@@Base+0x208>
   15860:	ldr	r0, [sp, #20]
   15864:	mov	r9, #0
   15868:	sub	sl, r0, #4
   1586c:	mov	r0, r4
   15870:	bl	147a0 <table_get_row_length@@Base>
   15874:	mov	r5, r0
   15878:	cmp	r9, #0
   1587c:	beq	159f0 <table_column_sort@@Base+0x1b4>
   15880:	ldr	r0, [sp, #20]
   15884:	add	r0, r0, r9, lsl #2
   15888:	ldr	r1, [r0, #-4]
   1588c:	mov	r0, r4
   15890:	bl	13da8 <table_get_column_compare_function@@Base>
   15894:	cmp	r5, #1
   15898:	blt	15a34 <table_column_sort@@Base+0x1f8>
   1589c:	mov	r6, r0
   158a0:	sub	r0, r5, #1
   158a4:	mov	r7, #0
   158a8:	mvn	r2, #0
   158ac:	mvn	r8, #0
   158b0:	str	r0, [sp, #24]
   158b4:	str	r9, [fp, #-32]	; 0xffffffe0
   158b8:	str	r5, [sp, #32]
   158bc:	cmp	r7, #0
   158c0:	beq	15930 <table_column_sort@@Base+0xf4>
   158c4:	str	r8, [sp, #36]	; 0x24
   158c8:	str	r2, [sp, #28]
   158cc:	sub	r8, r7, #1
   158d0:	mov	r5, r9
   158d4:	ldr	r2, [sl, r5, lsl #2]
   158d8:	mov	r0, r4
   158dc:	mov	r1, r7
   158e0:	bl	144cc <table_get@@Base>
   158e4:	ldr	r2, [sl, r5, lsl #2]
   158e8:	mov	r9, r0
   158ec:	mov	r0, r4
   158f0:	mov	r1, r8
   158f4:	bl	144cc <table_get@@Base>
   158f8:	mov	r1, r0
   158fc:	mov	r0, r9
   15900:	blx	r6
   15904:	cmp	r0, #0
   15908:	bne	15954 <table_column_sort@@Base+0x118>
   1590c:	sub	r5, r5, #1
   15910:	cmp	r5, #1
   15914:	bge	158d4 <table_column_sort@@Base+0x98>
   15918:	ldr	r0, [sp, #36]	; 0x24
   1591c:	ldr	r9, [fp, #-32]	; 0xffffffe0
   15920:	ldr	r5, [sp, #32]
   15924:	mov	r2, r7
   15928:	cmn	r0, #1
   1592c:	movne	r8, r0
   15930:	cmn	r8, #1
   15934:	beq	1596c <table_column_sort@@Base+0x130>
   15938:	cmp	r2, r7
   1593c:	bne	15974 <table_column_sort@@Base+0x138>
   15940:	ldr	r0, [sp, #24]
   15944:	cmp	r2, r0
   15948:	beq	15974 <table_column_sort@@Base+0x138>
   1594c:	mov	r2, r7
   15950:	b	159e0 <table_column_sort@@Base+0x1a4>
   15954:	ldr	r8, [sp, #36]	; 0x24
   15958:	ldr	r9, [fp, #-32]	; 0xffffffe0
   1595c:	ldr	r5, [sp, #32]
   15960:	ldr	r2, [sp, #28]
   15964:	cmn	r8, #1
   15968:	bne	15938 <table_column_sort@@Base+0xfc>
   1596c:	mvn	r8, #0
   15970:	b	159e0 <table_column_sort@@Base+0x1a4>
   15974:	ldr	r0, [sp, #20]
   15978:	ldr	r0, [r0, r9, lsl #2]
   1597c:	mov	r9, r2
   15980:	str	r0, [sp, #36]	; 0x24
   15984:	ldr	r0, [sp, #16]
   15988:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1598c:	ldr	r0, [r0, r1, lsl #2]
   15990:	mov	r1, #4
   15994:	str	r0, [sp, #28]
   15998:	rsb	r0, r8, #1
   1599c:	add	r0, r0, r2
   159a0:	bl	11f7c <calloc@plt>
   159a4:	str	r9, [sp]
   159a8:	mov	r5, r0
   159ac:	mov	r3, r8
   159b0:	ldr	r0, [sp, #28]
   159b4:	mov	r1, r5
   159b8:	str	r0, [sp, #4]
   159bc:	mov	r0, r4
   159c0:	ldr	r2, [sp, #36]	; 0x24
   159c4:	ldr	r9, [fp, #-32]	; 0xffffffe0
   159c8:	bl	15a60 <table_column_sort@@Base+0x224>
   159cc:	mov	r0, r5
   159d0:	ldr	r5, [sp, #32]
   159d4:	bl	11fa0 <free@plt>
   159d8:	mvn	r8, #0
   159dc:	mvn	r2, #0
   159e0:	add	r7, r7, #1
   159e4:	cmp	r7, r5
   159e8:	bne	158bc <table_column_sort@@Base+0x80>
   159ec:	b	15a34 <table_column_sort@@Base+0x1f8>
   159f0:	ldr	r0, [sp, #20]
   159f4:	mov	r1, #4
   159f8:	ldr	r8, [r0]
   159fc:	ldr	r0, [sp, #16]
   15a00:	ldr	r6, [r0]
   15a04:	mov	r0, r5
   15a08:	bl	11f7c <calloc@plt>
   15a0c:	mov	r7, r0
   15a10:	sub	r0, r5, #1
   15a14:	mov	r2, r8
   15a18:	mov	r3, #0
   15a1c:	stm	sp, {r0, r6}
   15a20:	mov	r0, r4
   15a24:	mov	r1, r7
   15a28:	bl	15a60 <table_column_sort@@Base+0x224>
   15a2c:	mov	r0, r7
   15a30:	bl	11fa0 <free@plt>
   15a34:	ldr	r0, [sp, #12]
   15a38:	add	r9, r9, #1
   15a3c:	cmp	r9, r0
   15a40:	bne	1586c <table_column_sort@@Base+0x30>
   15a44:	mov	r0, r4
   15a48:	mvn	r1, #0
   15a4c:	mvn	r2, #0
   15a50:	mov	r3, #32
   15a54:	sub	sp, fp, #28
   15a58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a5c:	b	12ec0 <table_notify@@Base>
   15a60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15a64:	add	fp, sp, #28
   15a68:	sub	sp, sp, #36	; 0x24
   15a6c:	ldr	r8, [fp, #8]
   15a70:	cmp	r8, r3
   15a74:	ble	15c24 <table_column_sort@@Base+0x3e8>
   15a78:	ldr	r7, [fp, #12]
   15a7c:	mov	sl, r0
   15a80:	add	r0, r8, r3
   15a84:	mov	r4, r3
   15a88:	mov	r6, r2
   15a8c:	mov	r9, r1
   15a90:	add	r5, r0, r0, lsr #31
   15a94:	asr	r0, r5, #1
   15a98:	str	r0, [sp, #32]
   15a9c:	stm	sp, {r0, r7}
   15aa0:	mov	r0, sl
   15aa4:	bl	15a60 <table_column_sort@@Base+0x224>
   15aa8:	mov	r0, #1
   15aac:	str	r7, [sp, #4]
   15ab0:	mov	r1, r9
   15ab4:	mov	r2, r6
   15ab8:	str	r8, [sp]
   15abc:	add	r7, r0, r5, asr #1
   15ac0:	mov	r0, sl
   15ac4:	mov	r3, r7
   15ac8:	bl	15a60 <table_column_sort@@Base+0x224>
   15acc:	mov	r0, sl
   15ad0:	mov	r1, r6
   15ad4:	str	r6, [sp, #28]
   15ad8:	bl	13da8 <table_get_column_compare_function@@Base>
   15adc:	str	r0, [sp, #16]
   15ae0:	add	r0, r8, #1
   15ae4:	mov	r5, r9
   15ae8:	mov	r6, r4
   15aec:	str	sl, [sp, #24]
   15af0:	sub	r8, r0, r4
   15af4:	str	r0, [sp, #12]
   15af8:	ldr	r0, [fp, #12]
   15afc:	cmp	r0, #0
   15b00:	beq	15b64 <table_column_sort@@Base+0x328>
   15b04:	ldr	r0, [sp, #32]
   15b08:	cmp	r6, r0
   15b0c:	bgt	15bb8 <table_column_sort@@Base+0x37c>
   15b10:	ldr	r0, [fp, #8]
   15b14:	cmp	r7, r0
   15b18:	bgt	15bd0 <table_column_sort@@Base+0x394>
   15b1c:	mov	r0, sl
   15b20:	ldr	sl, [sp, #28]
   15b24:	mov	r1, r6
   15b28:	mov	r2, sl
   15b2c:	bl	144cc <table_get@@Base>
   15b30:	str	r0, [sp, #20]
   15b34:	ldr	r0, [sp, #24]
   15b38:	mov	r2, sl
   15b3c:	ldr	sl, [sp, #24]
   15b40:	mov	r1, r7
   15b44:	bl	144cc <table_get@@Base>
   15b48:	mov	r1, r0
   15b4c:	ldr	r0, [sp, #20]
   15b50:	ldr	r2, [sp, #16]
   15b54:	blx	r2
   15b58:	cmp	r0, #1
   15b5c:	bge	15bd0 <table_column_sort@@Base+0x394>
   15b60:	b	15bb8 <table_column_sort@@Base+0x37c>
   15b64:	ldr	r0, [sp, #32]
   15b68:	cmp	r6, r0
   15b6c:	bgt	15bb8 <table_column_sort@@Base+0x37c>
   15b70:	ldr	r0, [fp, #8]
   15b74:	cmp	r7, r0
   15b78:	bgt	15bd0 <table_column_sort@@Base+0x394>
   15b7c:	ldr	r2, [sp, #28]
   15b80:	mov	r0, sl
   15b84:	mov	r1, r6
   15b88:	bl	144cc <table_get@@Base>
   15b8c:	ldr	r2, [sp, #28]
   15b90:	str	r0, [sp, #20]
   15b94:	mov	r0, sl
   15b98:	mov	r1, r7
   15b9c:	bl	144cc <table_get@@Base>
   15ba0:	mov	r1, r0
   15ba4:	ldr	r0, [sp, #20]
   15ba8:	ldr	r2, [sp, #16]
   15bac:	blx	r2
   15bb0:	cmn	r0, #1
   15bb4:	ble	15bd0 <table_column_sort@@Base+0x394>
   15bb8:	mov	r0, sl
   15bbc:	mov	r1, r7
   15bc0:	bl	1473c <table_get_row_ptr@@Base>
   15bc4:	ldr	r0, [r0]
   15bc8:	add	r7, r7, #1
   15bcc:	b	15be4 <table_column_sort@@Base+0x3a8>
   15bd0:	mov	r0, sl
   15bd4:	mov	r1, r6
   15bd8:	bl	1473c <table_get_row_ptr@@Base>
   15bdc:	ldr	r0, [r0]
   15be0:	add	r6, r6, #1
   15be4:	str	r0, [r5]
   15be8:	subs	r8, r8, #1
   15bec:	add	r5, r5, #4
   15bf0:	bne	15af8 <table_column_sort@@Base+0x2bc>
   15bf4:	ldr	r0, [fp, #8]
   15bf8:	ldr	r5, [sp, #12]
   15bfc:	cmp	r0, r4
   15c00:	blt	15c24 <table_column_sort@@Base+0x3e8>
   15c04:	mov	r0, sl
   15c08:	mov	r1, r4
   15c0c:	mov	r2, r9
   15c10:	bl	14958 <table_set_row_ptr@@Base>
   15c14:	add	r4, r4, #1
   15c18:	add	r9, r9, #4
   15c1c:	cmp	r5, r4
   15c20:	bne	15c04 <table_column_sort@@Base+0x3c8>
   15c24:	sub	sp, fp, #28
   15c28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015c2c <__libc_csu_init@@Base>:
   15c2c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15c30:	mov	r7, r0
   15c34:	ldr	r6, [pc, #72]	; 15c84 <__libc_csu_init@@Base+0x58>
   15c38:	ldr	r5, [pc, #72]	; 15c88 <__libc_csu_init@@Base+0x5c>
   15c3c:	add	r6, pc, r6
   15c40:	add	r5, pc, r5
   15c44:	sub	r6, r6, r5
   15c48:	mov	r8, r1
   15c4c:	mov	r9, r2
   15c50:	bl	11f5c <calloc@plt-0x20>
   15c54:	asrs	r6, r6, #2
   15c58:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15c5c:	mov	r4, #0
   15c60:	add	r4, r4, #1
   15c64:	ldr	r3, [r5], #4
   15c68:	mov	r2, r9
   15c6c:	mov	r1, r8
   15c70:	mov	r0, r7
   15c74:	blx	r3
   15c78:	cmp	r6, r4
   15c7c:	bne	15c60 <__libc_csu_init@@Base+0x34>
   15c80:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15c84:	andeq	r0, r1, r8, ror #4
   15c88:	andeq	r0, r1, r0, ror #4

00015c8c <__libc_csu_fini@@Base>:
   15c8c:	bx	lr

Disassembly of section .fini:

00015c90 <.fini>:
   15c90:	push	{r3, lr}
   15c94:	pop	{r3, pc}
