
../repos/eddieantonio-ocreval-3ab279a/nonstopacc/nonstopacc:     file format elf32-littlearm


Disassembly of section .init:

000109bc <.init>:
   109bc:	push	{r3, lr}
   109c0:	bl	10c7c <__assert_fail@plt+0xf0>
   109c4:	pop	{r3, pc}

Disassembly of section .plt:

000109c8 <calloc@plt-0x14>:
   109c8:	push	{lr}		; (str lr, [sp, #-4]!)
   109cc:	ldr	lr, [pc, #4]	; 109d8 <calloc@plt-0x4>
   109d0:	add	lr, pc, lr
   109d4:	ldr	pc, [lr, #8]!
   109d8:	andeq	r6, r1, r8, lsr #12

000109dc <calloc@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #90112	; 0x16000
   109e4:	ldr	pc, [ip, #1576]!	; 0x628

000109e8 <strcmp@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #90112	; 0x16000
   109f0:	ldr	pc, [ip, #1568]!	; 0x620

000109f4 <strtol@plt>:
   109f4:	add	ip, pc, #0, 12
   109f8:	add	ip, ip, #90112	; 0x16000
   109fc:	ldr	pc, [ip, #1560]!	; 0x618

00010a00 <printf@plt>:
   10a00:	add	ip, pc, #0, 12
   10a04:	add	ip, ip, #90112	; 0x16000
   10a08:	ldr	pc, [ip, #1552]!	; 0x610

00010a0c <fopen@plt>:
   10a0c:	add	ip, pc, #0, 12
   10a10:	add	ip, ip, #90112	; 0x16000
   10a14:	ldr	pc, [ip, #1544]!	; 0x608

00010a18 <free@plt>:
   10a18:	add	ip, pc, #0, 12
   10a1c:	add	ip, ip, #90112	; 0x16000
   10a20:	ldr	pc, [ip, #1536]!	; 0x600

00010a24 <utf8proc_get_property@plt>:
   10a24:	add	ip, pc, #0, 12
   10a28:	add	ip, ip, #90112	; 0x16000
   10a2c:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a30 <fgets@plt>:
   10a30:	add	ip, pc, #0, 12
   10a34:	add	ip, ip, #90112	; 0x16000
   10a38:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a3c <utf8proc_encode_char@plt>:
   10a3c:	add	ip, pc, #0, 12
   10a40:	add	ip, ip, #90112	; 0x16000
   10a44:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a48 <strdup@plt>:
   10a48:	add	ip, pc, #0, 12
   10a4c:	add	ip, ip, #90112	; 0x16000
   10a50:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a54 <rewind@plt>:
   10a54:	add	ip, pc, #0, 12
   10a58:	add	ip, ip, #90112	; 0x16000
   10a5c:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a60 <unlink@plt>:
   10a60:	add	ip, pc, #0, 12
   10a64:	add	ip, ip, #90112	; 0x16000
   10a68:	ldr	pc, [ip, #1488]!	; 0x5d0

00010a6c <utf8proc_tolower@plt>:
   10a6c:	add	ip, pc, #0, 12
   10a70:	add	ip, ip, #90112	; 0x16000
   10a74:	ldr	pc, [ip, #1480]!	; 0x5c8

00010a78 <__xstat@plt>:
   10a78:	add	ip, pc, #0, 12
   10a7c:	add	ip, ip, #90112	; 0x16000
   10a80:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a84 <fwrite@plt>:
   10a84:	add	ip, pc, #0, 12
   10a88:	add	ip, ip, #90112	; 0x16000
   10a8c:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a90 <fread@plt>:
   10a90:	add	ip, pc, #0, 12
   10a94:	add	ip, ip, #90112	; 0x16000
   10a98:	ldr	pc, [ip, #1456]!	; 0x5b0

00010a9c <utf8proc_iterate@plt>:
   10a9c:	add	ip, pc, #0, 12
   10aa0:	add	ip, ip, #90112	; 0x16000
   10aa4:	ldr	pc, [ip, #1448]!	; 0x5a8

00010aa8 <malloc@plt>:
   10aa8:	add	ip, pc, #0, 12
   10aac:	add	ip, ip, #90112	; 0x16000
   10ab0:	ldr	pc, [ip, #1440]!	; 0x5a0

00010ab4 <__libc_start_main@plt>:
   10ab4:	add	ip, pc, #0, 12
   10ab8:	add	ip, ip, #90112	; 0x16000
   10abc:	ldr	pc, [ip, #1432]!	; 0x598

00010ac0 <__sysv_signal@plt>:
   10ac0:	add	ip, pc, #0, 12
   10ac4:	add	ip, ip, #90112	; 0x16000
   10ac8:	ldr	pc, [ip, #1424]!	; 0x590

00010acc <__gmon_start__@plt>:
   10acc:	add	ip, pc, #0, 12
   10ad0:	add	ip, ip, #90112	; 0x16000
   10ad4:	ldr	pc, [ip, #1416]!	; 0x588

00010ad8 <getpid@plt>:
   10ad8:	add	ip, pc, #0, 12
   10adc:	add	ip, ip, #90112	; 0x16000
   10ae0:	ldr	pc, [ip, #1408]!	; 0x580

00010ae4 <exit@plt>:
   10ae4:	add	ip, pc, #0, 12
   10ae8:	add	ip, ip, #90112	; 0x16000
   10aec:	ldr	pc, [ip, #1400]!	; 0x578

00010af0 <utf8proc_category@plt>:
   10af0:	add	ip, pc, #0, 12
   10af4:	add	ip, ip, #90112	; 0x16000
   10af8:	ldr	pc, [ip, #1392]!	; 0x570

00010afc <strlen@plt>:
   10afc:	add	ip, pc, #0, 12
   10b00:	add	ip, ip, #90112	; 0x16000
   10b04:	ldr	pc, [ip, #1384]!	; 0x568

00010b08 <fprintf@plt>:
   10b08:	add	ip, pc, #0, 12
   10b0c:	add	ip, ip, #90112	; 0x16000
   10b10:	ldr	pc, [ip, #1376]!	; 0x560

00010b14 <__isoc99_sscanf@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #90112	; 0x16000
   10b1c:	ldr	pc, [ip, #1368]!	; 0x558

00010b20 <fclose@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #90112	; 0x16000
   10b28:	ldr	pc, [ip, #1360]!	; 0x550

00010b2c <utf8proc_NFC@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #90112	; 0x16000
   10b34:	ldr	pc, [ip, #1352]!	; 0x548

00010b38 <fputc@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #90112	; 0x16000
   10b40:	ldr	pc, [ip, #1344]!	; 0x540

00010b44 <sprintf@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #90112	; 0x16000
   10b4c:	ldr	pc, [ip, #1336]!	; 0x538

00010b50 <utf8proc_errmsg@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #90112	; 0x16000
   10b58:	ldr	pc, [ip, #1328]!	; 0x530

00010b5c <fputs@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #90112	; 0x16000
   10b64:	ldr	pc, [ip, #1320]!	; 0x528

00010b68 <strncmp@plt>:
   10b68:	add	ip, pc, #0, 12
   10b6c:	add	ip, ip, #90112	; 0x16000
   10b70:	ldr	pc, [ip, #1312]!	; 0x520

00010b74 <abort@plt>:
   10b74:	add	ip, pc, #0, 12
   10b78:	add	ip, ip, #90112	; 0x16000
   10b7c:	ldr	pc, [ip, #1304]!	; 0x518

00010b80 <getc@plt>:
   10b80:	add	ip, pc, #0, 12
   10b84:	add	ip, ip, #90112	; 0x16000
   10b88:	ldr	pc, [ip, #1296]!	; 0x510

00010b8c <__assert_fail@plt>:
   10b8c:	add	ip, pc, #0, 12
   10b90:	add	ip, ip, #90112	; 0x16000
   10b94:	ldr	pc, [ip, #1288]!	; 0x508

Disassembly of section .text:

00010b98 <error@@Base-0x8c8>:
   10b98:	push	{r4, r5, r6, lr}
   10b9c:	sub	sp, sp, #8
   10ba0:	add	ip, sp, #8
   10ba4:	ldr	r2, [pc, #120]	; 10c24 <__assert_fail@plt+0x98>
   10ba8:	mov	r3, #0
   10bac:	str	r0, [ip, #-4]!
   10bb0:	add	r2, pc, r2
   10bb4:	mov	r0, ip
   10bb8:	mov	r5, r1
   10bbc:	bl	11600 <error@@Base+0x1a0>
   10bc0:	ldr	r3, [sp, #4]
   10bc4:	ldr	r4, [pc, #92]	; 10c28 <__assert_fail@plt+0x9c>
   10bc8:	cmp	r3, #2
   10bcc:	add	r4, pc, r4
   10bd0:	beq	10be0 <__assert_fail@plt+0x54>
   10bd4:	ldr	r0, [pc, #80]	; 10c2c <__assert_fail@plt+0xa0>
   10bd8:	add	r0, pc, r0
   10bdc:	bl	11460 <error@@Base>
   10be0:	ldr	r3, [pc, #72]	; 10c30 <__assert_fail@plt+0xa4>
   10be4:	ldr	r2, [pc, #72]	; 10c34 <__assert_fail@plt+0xa8>
   10be8:	ldr	r1, [r5]
   10bec:	ldr	r6, [r4, r3]
   10bf0:	ldr	r2, [r4, r2]
   10bf4:	mov	r0, r6
   10bf8:	bl	12bb0 <error@@Base+0x1750>
   10bfc:	ldr	r3, [pc, #52]	; 10c38 <__assert_fail@plt+0xac>
   10c00:	mov	r1, r6
   10c04:	ldr	r0, [r4, r3]
   10c08:	bl	122d8 <error@@Base+0xe78>
   10c0c:	ldr	r3, [pc, #40]	; 10c3c <__assert_fail@plt+0xb0>
   10c10:	ldr	r1, [r5, #4]
   10c14:	ldr	r0, [r4, r3]
   10c18:	bl	11e5c <error@@Base+0x9fc>
   10c1c:	bl	10e4c <__assert_fail@plt+0x2c0>
   10c20:	bl	113ec <__assert_fail@plt+0x860>
   10c24:	andeq	r2, r0, r4, lsl fp
   10c28:	andeq	r6, r1, ip, lsr #8
   10c2c:	andeq	r2, r0, r0, lsl fp
   10c30:	andeq	r0, r0, r4, lsr #1
   10c34:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   10c38:	strheq	r0, [r0], -r4
   10c3c:	andeq	r0, r0, r4, asr #1
   10c40:	mov	fp, #0
   10c44:	mov	lr, #0
   10c48:	pop	{r1}		; (ldr r1, [sp], #4)
   10c4c:	mov	r2, sp
   10c50:	push	{r2}		; (str r2, [sp, #-4]!)
   10c54:	push	{r0}		; (str r0, [sp, #-4]!)
   10c58:	ldr	ip, [pc, #16]	; 10c70 <__assert_fail@plt+0xe4>
   10c5c:	push	{ip}		; (str ip, [sp, #-4]!)
   10c60:	ldr	r0, [pc, #12]	; 10c74 <__assert_fail@plt+0xe8>
   10c64:	ldr	r3, [pc, #12]	; 10c78 <__assert_fail@plt+0xec>
   10c68:	bl	10ab4 <__libc_start_main@plt>
   10c6c:	bl	10b74 <abort@plt>
   10c70:			; <UNDEFINED> instruction: 0x000136b0
   10c74:	muleq	r1, r8, fp
   10c78:	andeq	r3, r1, r0, asr r6
   10c7c:	ldr	r3, [pc, #20]	; 10c98 <__assert_fail@plt+0x10c>
   10c80:	ldr	r2, [pc, #20]	; 10c9c <__assert_fail@plt+0x110>
   10c84:	add	r3, pc, r3
   10c88:	ldr	r2, [r3, r2]
   10c8c:	cmp	r2, #0
   10c90:	bxeq	lr
   10c94:	b	10acc <__gmon_start__@plt>
   10c98:	andeq	r6, r1, r4, ror r3
   10c9c:	strheq	r0, [r0], -ip
   10ca0:	ldr	r3, [pc, #28]	; 10cc4 <__assert_fail@plt+0x138>
   10ca4:	ldr	r0, [pc, #28]	; 10cc8 <__assert_fail@plt+0x13c>
   10ca8:	sub	r3, r3, r0
   10cac:	cmp	r3, #6
   10cb0:	bxls	lr
   10cb4:	ldr	r3, [pc, #16]	; 10ccc <__assert_fail@plt+0x140>
   10cb8:	cmp	r3, #0
   10cbc:	bxeq	lr
   10cc0:	bx	r3
   10cc4:	strdeq	r7, [r2], -pc	; <UNPREDICTABLE>
   10cc8:	strdeq	r7, [r2], -ip
   10ccc:	andeq	r0, r0, r0
   10cd0:	ldr	r1, [pc, #36]	; 10cfc <__assert_fail@plt+0x170>
   10cd4:	ldr	r0, [pc, #36]	; 10d00 <__assert_fail@plt+0x174>
   10cd8:	sub	r1, r1, r0
   10cdc:	asr	r1, r1, #2
   10ce0:	add	r1, r1, r1, lsr #31
   10ce4:	asrs	r1, r1, #1
   10ce8:	bxeq	lr
   10cec:	ldr	r3, [pc, #16]	; 10d04 <__assert_fail@plt+0x178>
   10cf0:	cmp	r3, #0
   10cf4:	bxeq	lr
   10cf8:	bx	r3
   10cfc:	strdeq	r7, [r2], -ip
   10d00:	strdeq	r7, [r2], -ip
   10d04:	andeq	r0, r0, r0
   10d08:	push	{r4, lr}
   10d0c:	ldr	r4, [pc, #24]	; 10d2c <__assert_fail@plt+0x1a0>
   10d10:	ldrb	r3, [r4]
   10d14:	cmp	r3, #0
   10d18:	popne	{r4, pc}
   10d1c:	bl	10ca0 <__assert_fail@plt+0x114>
   10d20:	mov	r3, #1
   10d24:	strb	r3, [r4]
   10d28:	pop	{r4, pc}
   10d2c:	strdeq	r7, [r2], -ip
   10d30:	ldr	r0, [pc, #40]	; 10d60 <__assert_fail@plt+0x1d4>
   10d34:	ldr	r3, [r0]
   10d38:	cmp	r3, #0
   10d3c:	bne	10d44 <__assert_fail@plt+0x1b8>
   10d40:	b	10cd0 <__assert_fail@plt+0x144>
   10d44:	ldr	r3, [pc, #24]	; 10d64 <__assert_fail@plt+0x1d8>
   10d48:	cmp	r3, #0
   10d4c:	beq	10d40 <__assert_fail@plt+0x1b4>
   10d50:	push	{r4, lr}
   10d54:	blx	r3
   10d58:	pop	{r4, lr}
   10d5c:	b	10cd0 <__assert_fail@plt+0x144>
   10d60:	andeq	r6, r2, r4, lsl #30
   10d64:	andeq	r0, r0, r0
   10d68:	push	{r4, lr}
   10d6c:	bl	10f34 <__assert_fail@plt+0x3a8>
   10d70:	ldr	r3, [pc, #60]	; 10db4 <__assert_fail@plt+0x228>
   10d74:	add	r3, pc, r3
   10d78:	cmp	r0, #0
   10d7c:	popeq	{r4, pc}
   10d80:	ldr	ip, [pc, #48]	; 10db8 <__assert_fail@plt+0x22c>
   10d84:	ldr	lr, [r0, #12]
   10d88:	ldr	r2, [pc, #44]	; 10dbc <__assert_fail@plt+0x230>
   10d8c:	ldr	ip, [r3, ip]
   10d90:	ldr	r0, [r0, #16]
   10d94:	ldr	r1, [ip]
   10d98:	sub	r1, r1, lr
   10d9c:	str	r1, [ip]
   10da0:	ldr	r2, [r3, r2]
   10da4:	ldr	r3, [r2]
   10da8:	sub	r3, r3, r0
   10dac:	str	r3, [r2]
   10db0:	pop	{r4, pc}
   10db4:	andeq	r6, r1, r4, lsl #5
   10db8:	andeq	r0, r0, r0, lsr #1
   10dbc:	ldrdeq	r0, [r0], -r8
   10dc0:	ldr	ip, [pc, #112]	; 10e38 <__assert_fail@plt+0x2ac>
   10dc4:	ldr	r2, [pc, #112]	; 10e3c <__assert_fail@plt+0x2b0>
   10dc8:	add	ip, pc, ip
   10dcc:	ldr	r0, [pc, #108]	; 10e40 <__assert_fail@plt+0x2b4>
   10dd0:	ldr	r1, [ip]
   10dd4:	ldr	r3, [pc, #104]	; 10e44 <__assert_fail@plt+0x2b8>
   10dd8:	add	r2, pc, r2
   10ddc:	push	{lr}		; (str lr, [sp, #-4]!)
   10de0:	add	lr, r1, #1
   10de4:	str	lr, [ip]
   10de8:	ldr	r0, [r2, r0]
   10dec:	ldr	r3, [r2, r3]
   10df0:	vldr	d5, [pc, #56]	; 10e30 <__assert_fail@plt+0x2a4>
   10df4:	ldr	r0, [r0]
   10df8:	ldr	r3, [r3]
   10dfc:	pop	{lr}		; (ldr lr, [sp], #4)
   10e00:	sub	r3, r0, r3
   10e04:	vmov	s15, r0
   10e08:	vmov	s14, r3
   10e0c:	ldr	r0, [pc, #52]	; 10e48 <__assert_fail@plt+0x2bc>
   10e10:	vcvt.f64.s32	d6, s15
   10e14:	vcvt.f64.s32	d7, s14
   10e18:	add	r0, pc, r0
   10e1c:	vmul.f64	d7, d7, d5
   10e20:	vdiv.f64	d5, d7, d6
   10e24:	vmov	r2, r3, d5
   10e28:	b	10a00 <printf@plt>
   10e2c:	nop			; (mov r0, r0)
   10e30:	andeq	r0, r0, r0
   10e34:	subsmi	r0, r9, r0
   10e38:	andeq	r6, r1, r0, lsr r3
   10e3c:	andeq	r6, r1, r0, lsr #4
   10e40:	andeq	r0, r0, r0, lsr #1
   10e44:	ldrdeq	r0, [r0], -r8
   10e48:	andeq	r2, r0, r0, lsr #17
   10e4c:	push	{r4, r5, r6, r7, r8, lr}
   10e50:	ldr	r4, [pc, #140]	; 10ee4 <__assert_fail@plt+0x358>
   10e54:	ldr	r1, [pc, #140]	; 10ee8 <__assert_fail@plt+0x35c>
   10e58:	add	r4, pc, r4
   10e5c:	ldr	r2, [pc, #136]	; 10eec <__assert_fail@plt+0x360>
   10e60:	ldr	r5, [r4, r1]
   10e64:	ldr	r3, [pc, #132]	; 10ef0 <__assert_fail@plt+0x364>
   10e68:	ldr	r6, [r4, r2]
   10e6c:	ldr	r2, [r5]
   10e70:	ldr	r1, [r5, #4]
   10e74:	str	r2, [r6]
   10e78:	ldr	r3, [r4, r3]
   10e7c:	cmp	r2, #0
   10e80:	str	r1, [r3]
   10e84:	popeq	{r4, r5, r6, r7, r8, pc}
   10e88:	bl	10dc0 <__assert_fail@plt+0x234>
   10e8c:	ldr	r3, [pc, #96]	; 10ef4 <__assert_fail@plt+0x368>
   10e90:	ldr	r3, [r4, r3]
   10e94:	ldr	r4, [r3]
   10e98:	cmp	r4, #0
   10e9c:	popeq	{r4, r5, r6, r7, r8, pc}
   10ea0:	add	r7, r5, #9024	; 0x2340
   10ea4:	add	r7, r7, #24
   10ea8:	add	r5, r5, #992	; 0x3e0
   10eac:	ldr	r1, [r4, #8]
   10eb0:	mov	r0, r5
   10eb4:	bl	10d68 <__assert_fail@plt+0x1dc>
   10eb8:	ldr	r1, [r4, #8]
   10ebc:	mov	r0, r7
   10ec0:	bl	10d68 <__assert_fail@plt+0x1dc>
   10ec4:	ldr	r3, [r6]
   10ec8:	cmp	r3, #0
   10ecc:	popeq	{r4, r5, r6, r7, r8, pc}
   10ed0:	bl	10dc0 <__assert_fail@plt+0x234>
   10ed4:	ldr	r4, [r4, #4]
   10ed8:	cmp	r4, #0
   10edc:	bne	10eac <__assert_fail@plt+0x320>
   10ee0:	pop	{r4, r5, r6, r7, r8, pc}
   10ee4:	andeq	r6, r1, r0, lsr #3
   10ee8:	andeq	r0, r0, r4, asr #1
   10eec:	andeq	r0, r0, r0, lsr #1
   10ef0:	ldrdeq	r0, [r0], -r8
   10ef4:	strheq	r0, [r0], -r4
   10ef8:	push	{r4, r5, r6, lr}
   10efc:	add	r5, r0, #8000	; 0x1f40
   10f00:	mov	r6, r0
   10f04:	add	r5, r5, #48	; 0x30
   10f08:	mov	r4, r0
   10f0c:	mov	r0, r4
   10f10:	add	r4, r4, #16
   10f14:	bl	13234 <error@@Base+0x1dd4>
   10f18:	cmp	r4, r5
   10f1c:	bne	10f0c <__assert_fail@plt+0x380>
   10f20:	add	r6, r6, #4096	; 0x1000
   10f24:	mov	r3, #0
   10f28:	str	r3, [r6, #3952]	; 0xf70
   10f2c:	str	r3, [r6, #3956]	; 0xf74
   10f30:	pop	{r4, r5, r6, pc}
   10f34:	push	{r4, r5, r6, lr}
   10f38:	mov	r5, r1
   10f3c:	ldrb	r3, [r1]
   10f40:	cmp	r3, #0
   10f44:	beq	10f7c <__assert_fail@plt+0x3f0>
   10f48:	mov	r2, #0
   10f4c:	add	r2, r2, r3
   10f50:	ldrb	r3, [r1, #1]!
   10f54:	cmp	r3, #0
   10f58:	bne	10f4c <__assert_fail@plt+0x3c0>
   10f5c:	ldr	r1, [pc, #80]	; 10fb4 <__assert_fail@plt+0x428>
   10f60:	asr	r3, r2, #31
   10f64:	smull	ip, r1, r1, r2
   10f68:	add	r1, r1, r2
   10f6c:	rsb	r3, r3, r1, asr #8
   10f70:	rsb	r1, r3, r3, lsl #6
   10f74:	rsb	r3, r3, r1, lsl #3
   10f78:	sub	r3, r2, r3
   10f7c:	ldr	r4, [r0, r3, lsl #4]
   10f80:	cmp	r4, #0
   10f84:	bne	10f98 <__assert_fail@plt+0x40c>
   10f88:	b	10fac <__assert_fail@plt+0x420>
   10f8c:	ldr	r4, [r4, #4]
   10f90:	cmp	r4, #0
   10f94:	beq	10fac <__assert_fail@plt+0x420>
   10f98:	ldr	r1, [r4, #8]
   10f9c:	mov	r0, r5
   10fa0:	bl	109e8 <strcmp@plt>
   10fa4:	cmp	r0, #0
   10fa8:	bne	10f8c <__assert_fail@plt+0x400>
   10fac:	mov	r0, r4
   10fb0:	pop	{r4, r5, r6, pc}
   10fb4:	subhi	r4, sl, #1552	; 0x610
   10fb8:	ldr	ip, [r1, #8]
   10fbc:	push	{r4, lr}
   10fc0:	ldrb	r3, [ip]
   10fc4:	cmp	r3, #0
   10fc8:	beq	11004 <__assert_fail@plt+0x478>
   10fcc:	mov	r2, #0
   10fd0:	add	r2, r2, r3
   10fd4:	ldrb	r3, [ip, #1]!
   10fd8:	cmp	r3, #0
   10fdc:	bne	10fd0 <__assert_fail@plt+0x444>
   10fe0:	ldr	ip, [pc, #80]	; 11038 <__assert_fail@plt+0x4ac>
   10fe4:	asr	r3, r2, #31
   10fe8:	smull	lr, ip, ip, r2
   10fec:	add	ip, ip, r2
   10ff0:	rsb	r3, r3, ip, asr #8
   10ff4:	rsb	ip, r3, r3, lsl #6
   10ff8:	rsb	r3, r3, ip, lsl #3
   10ffc:	sub	r3, r2, r3
   11000:	lsl	r3, r3, #4
   11004:	add	r4, r0, #4096	; 0x1000
   11008:	add	r0, r0, r3
   1100c:	bl	1324c <error@@Base+0x1dec>
   11010:	ldr	r0, [r4, #3952]	; 0xf70
   11014:	cmp	r0, #0
   11018:	beq	11028 <__assert_fail@plt+0x49c>
   1101c:	bl	10a18 <free@plt>
   11020:	mov	r3, #0
   11024:	str	r3, [r4, #3952]	; 0xf70
   11028:	ldr	r3, [r4, #3956]	; 0xf74
   1102c:	add	r3, r3, #1
   11030:	str	r3, [r4, #3956]	; 0xf74
   11034:	pop	{r4, pc}
   11038:	subhi	r4, sl, #1552	; 0x610
   1103c:	ldr	ip, [r1, #8]
   11040:	push	{r4, lr}
   11044:	ldrb	r3, [ip]
   11048:	cmp	r3, #0
   1104c:	beq	11088 <__assert_fail@plt+0x4fc>
   11050:	mov	r2, #0
   11054:	add	r2, r2, r3
   11058:	ldrb	r3, [ip, #1]!
   1105c:	cmp	r3, #0
   11060:	bne	11054 <__assert_fail@plt+0x4c8>
   11064:	ldr	ip, [pc, #80]	; 110bc <__assert_fail@plt+0x530>
   11068:	asr	r3, r2, #31
   1106c:	smull	lr, ip, ip, r2
   11070:	add	ip, ip, r2
   11074:	rsb	r3, r3, ip, asr #8
   11078:	rsb	ip, r3, r3, lsl #6
   1107c:	rsb	r3, r3, ip, lsl #3
   11080:	sub	r3, r2, r3
   11084:	lsl	r3, r3, #4
   11088:	add	r4, r0, #4096	; 0x1000
   1108c:	add	r0, r0, r3
   11090:	bl	1337c <error@@Base+0x1f1c>
   11094:	ldr	r0, [r4, #3952]	; 0xf70
   11098:	cmp	r0, #0
   1109c:	beq	110ac <__assert_fail@plt+0x520>
   110a0:	bl	10a18 <free@plt>
   110a4:	mov	r3, #0
   110a8:	str	r3, [r4, #3952]	; 0xf70
   110ac:	ldr	r3, [r4, #3956]	; 0xf74
   110b0:	sub	r3, r3, #1
   110b4:	str	r3, [r4, #3956]	; 0xf74
   110b8:	pop	{r4, pc}
   110bc:	subhi	r4, sl, #1552	; 0x610
   110c0:	push	{r4, r5, r6, lr}
   110c4:	add	r6, r0, #4096	; 0x1000
   110c8:	ldr	r4, [r6, #3952]	; 0xf70
   110cc:	cmp	r4, #0
   110d0:	popne	{r4, r5, r6, pc}
   110d4:	ldr	r3, [r6, #3956]	; 0xf74
   110d8:	cmp	r3, #0
   110dc:	popeq	{r4, r5, r6, pc}
   110e0:	mov	r5, r0
   110e4:	mov	r1, #4
   110e8:	mov	r0, r3
   110ec:	bl	114b8 <error@@Base+0x58>
   110f0:	ldr	lr, [pc, #60]	; 11134 <__assert_fail@plt+0x5a8>
   110f4:	mov	r2, r4
   110f8:	mov	ip, r4
   110fc:	str	r0, [r6, #3952]	; 0xf70
   11100:	ldr	r3, [r5, ip, lsl #4]
   11104:	cmp	r3, #0
   11108:	beq	11124 <__assert_fail@plt+0x598>
   1110c:	add	r1, r0, r2, lsl #2
   11110:	str	r3, [r1], #4
   11114:	ldr	r3, [r3, #4]
   11118:	add	r2, r2, #1
   1111c:	cmp	r3, #0
   11120:	bne	11110 <__assert_fail@plt+0x584>
   11124:	add	ip, ip, #1
   11128:	cmp	ip, lr
   1112c:	bne	11100 <__assert_fail@plt+0x574>
   11130:	pop	{r4, r5, r6, pc}
   11134:	strdeq	r0, [r0], -r7
   11138:	push	{r4, r5, r6, r7, r8, lr}
   1113c:	add	r5, r0, #8000	; 0x1f40
   11140:	mov	r7, r0
   11144:	mov	r6, r1
   11148:	add	r5, r5, #48	; 0x30
   1114c:	mov	r4, r0
   11150:	mov	r0, r4
   11154:	mov	r1, r6
   11158:	add	r4, r4, #16
   1115c:	bl	1342c <error@@Base+0x1fcc>
   11160:	cmp	r4, r5
   11164:	bne	11150 <__assert_fail@plt+0x5c4>
   11168:	add	r7, r7, #4096	; 0x1000
   1116c:	ldr	r0, [r7, #3952]	; 0xf70
   11170:	cmp	r0, #0
   11174:	beq	11184 <__assert_fail@plt+0x5f8>
   11178:	bl	10a18 <free@plt>
   1117c:	mov	r3, #0
   11180:	str	r3, [r7, #3952]	; 0xf70
   11184:	mov	r3, #0
   11188:	str	r3, [r7, #3956]	; 0xf74
   1118c:	pop	{r4, r5, r6, r7, r8, pc}
   11190:	ldr	r3, [pc, #76]	; 111e4 <__assert_fail@plt+0x658>
   11194:	ldr	r2, [pc, #76]	; 111e8 <__assert_fail@plt+0x65c>
   11198:	add	r3, pc, r3
   1119c:	push	{r4, r5, lr}
   111a0:	sub	sp, sp, #116	; 0x74
   111a4:	ldr	r3, [r3, r2]
   111a8:	mov	r5, r0
   111ac:	ldr	r4, [r3]
   111b0:	bl	10ad8 <getpid@plt>
   111b4:	ldr	r1, [pc, #48]	; 111ec <__assert_fail@plt+0x660>
   111b8:	mov	r2, r4
   111bc:	add	r4, sp, #12
   111c0:	add	r1, pc, r1
   111c4:	str	r5, [sp]
   111c8:	mov	r3, r0
   111cc:	mov	r0, r4
   111d0:	bl	10b44 <sprintf@plt>
   111d4:	mov	r0, r4
   111d8:	bl	10a48 <strdup@plt>
   111dc:	add	sp, sp, #116	; 0x74
   111e0:	pop	{r4, r5, pc}
   111e4:	andeq	r5, r1, r0, ror #28
   111e8:	andeq	r0, r0, r0, asr #1
   111ec:	andeq	r2, r0, r0, asr #10
   111f0:	ldr	r3, [pc, #108]	; 11264 <__assert_fail@plt+0x6d8>
   111f4:	ldr	r2, [pc, #108]	; 11268 <__assert_fail@plt+0x6dc>
   111f8:	add	r3, pc, r3
   111fc:	push	{r7, lr}
   11200:	mov	r7, r0
   11204:	ldr	r3, [r3, r2]
   11208:	ldr	r3, [r3]
   1120c:	cmp	r3, #0
   11210:	beq	11218 <__assert_fail@plt+0x68c>
   11214:	blx	r3
   11218:	ldr	r6, [pc, #76]	; 1126c <__assert_fail@plt+0x6e0>
   1121c:	add	r6, pc, r6
   11220:	ldrsh	r3, [r6]
   11224:	cmp	r3, #0
   11228:	movgt	r4, #1
   1122c:	ble	1125c <__assert_fail@plt+0x6d0>
   11230:	mov	r0, r4
   11234:	bl	11190 <__assert_fail@plt+0x604>
   11238:	add	r4, r4, #1
   1123c:	sxth	r4, r4
   11240:	mov	r5, r0
   11244:	bl	10a60 <unlink@plt>
   11248:	mov	r0, r5
   1124c:	bl	10a18 <free@plt>
   11250:	ldrsh	r3, [r6]
   11254:	cmp	r3, r4
   11258:	bge	11230 <__assert_fail@plt+0x6a4>
   1125c:	mov	r0, r7
   11260:	bl	10ae4 <exit@plt>
   11264:	andeq	r5, r1, r0, lsl #28
   11268:	andeq	r0, r0, r8, asr #1
   1126c:	andeq	r5, r1, r0, ror #29
   11270:	ldrb	r3, [r0]
   11274:	cmp	r3, #0
   11278:	beq	112dc <__assert_fail@plt+0x750>
   1127c:	ldrb	ip, [r1]
   11280:	cmp	ip, r3
   11284:	bne	112ec <__assert_fail@plt+0x760>
   11288:	push	{lr}		; (str lr, [sp, #-4]!)
   1128c:	mov	r2, #0
   11290:	mov	lr, r1
   11294:	b	112a4 <__assert_fail@plt+0x718>
   11298:	ldrb	ip, [lr, #1]!
   1129c:	cmp	r3, ip
   112a0:	bne	112c4 <__assert_fail@plt+0x738>
   112a4:	ldrb	r3, [r0, #1]!
   112a8:	add	r2, r2, #1
   112ac:	cmp	r3, #0
   112b0:	bne	11298 <__assert_fail@plt+0x70c>
   112b4:	ldrb	ip, [r1, r2]
   112b8:	cmp	ip, #0
   112bc:	movne	r3, #0
   112c0:	beq	112d4 <__assert_fail@plt+0x748>
   112c4:	cmp	r3, ip
   112c8:	movcs	r0, #1
   112cc:	mvncc	r0, #0
   112d0:	pop	{pc}		; (ldr pc, [sp], #4)
   112d4:	mov	r0, ip
   112d8:	pop	{pc}		; (ldr pc, [sp], #4)
   112dc:	ldrb	ip, [r1, r3]
   112e0:	cmp	ip, #0
   112e4:	movne	r3, #0
   112e8:	beq	112fc <__assert_fail@plt+0x770>
   112ec:	cmp	r3, ip
   112f0:	movcs	r0, #1
   112f4:	mvncc	r0, #0
   112f8:	bx	lr
   112fc:	mov	r0, ip
   11300:	bx	lr
   11304:	ldr	r2, [pc, #44]	; 11338 <__assert_fail@plt+0x7ac>
   11308:	ldr	r3, [pc, #44]	; 1133c <__assert_fail@plt+0x7b0>
   1130c:	add	r2, pc, r2
   11310:	ldr	r3, [r2, r3]
   11314:	ldr	r3, [r3]
   11318:	cmp	r3, r0
   1131c:	bxeq	lr
   11320:	ldr	r3, [pc, #24]	; 11340 <__assert_fail@plt+0x7b4>
   11324:	ldr	r3, [r2, r3]
   11328:	ldr	r3, [r3]
   1132c:	cmp	r0, r3
   11330:	bxeq	lr
   11334:	b	10b20 <fclose@plt>
   11338:	andeq	r5, r1, ip, ror #25
   1133c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11340:	ldrdeq	r0, [r0], -r4
   11344:	push	{lr}		; (str lr, [sp, #-4]!)
   11348:	sub	sp, sp, #92	; 0x5c
   1134c:	mov	r1, r0
   11350:	mov	r2, sp
   11354:	mov	r0, #3
   11358:	bl	10a78 <__xstat@plt>
   1135c:	clz	r0, r0
   11360:	lsr	r0, r0, #5
   11364:	add	sp, sp, #92	; 0x5c
   11368:	pop	{pc}		; (ldr pc, [sp], #4)
   1136c:	ldr	r2, [pc, #44]	; 113a0 <__assert_fail@plt+0x814>
   11370:	push	{r4, lr}
   11374:	add	r2, pc, r2
   11378:	ldrh	r3, [r2]
   1137c:	add	r3, r3, #1
   11380:	sxth	r3, r3
   11384:	mov	r0, r3
   11388:	strh	r3, [r2]
   1138c:	bl	11190 <__assert_fail@plt+0x604>
   11390:	mov	r4, r0
   11394:	bl	10a60 <unlink@plt>
   11398:	mov	r0, r4
   1139c:	pop	{r4, pc}
   113a0:	andeq	r5, r1, r8, lsl #27
   113a4:	push	{r4, lr}
   113a8:	mov	r4, r0
   113ac:	bl	10afc <strlen@plt>
   113b0:	sub	r0, r0, #1
   113b4:	sxth	r0, r0
   113b8:	cmp	r0, #0
   113bc:	bge	113d4 <__assert_fail@plt+0x848>
   113c0:	b	113e0 <__assert_fail@plt+0x854>
   113c4:	sub	r0, r0, #1
   113c8:	sxth	r0, r0
   113cc:	cmn	r0, #1
   113d0:	beq	113e0 <__assert_fail@plt+0x854>
   113d4:	ldrb	r3, [r4, r0]
   113d8:	cmp	r3, #47	; 0x2f
   113dc:	bne	113c4 <__assert_fail@plt+0x838>
   113e0:	add	r0, r0, #1
   113e4:	add	r0, r4, r0
   113e8:	pop	{r4, pc}
   113ec:	push	{r4, lr}
   113f0:	mov	r0, #0
   113f4:	bl	111f0 <__assert_fail@plt+0x664>
   113f8:	ldr	r1, [pc, #76]	; 1144c <__assert_fail@plt+0x8c0>
   113fc:	ldr	r2, [pc, #76]	; 11450 <__assert_fail@plt+0x8c4>
   11400:	add	r1, pc, r1
   11404:	push	{r4, lr}
   11408:	ldr	r2, [r1, r2]
   1140c:	ldr	r2, [r2]
   11410:	cmp	r2, #0
   11414:	beq	11420 <__assert_fail@plt+0x894>
   11418:	blx	r2
   1141c:	bl	113ec <__assert_fail@plt+0x860>
   11420:	ldr	r2, [pc, #44]	; 11454 <__assert_fail@plt+0x8c8>
   11424:	ldr	ip, [pc, #44]	; 11458 <__assert_fail@plt+0x8cc>
   11428:	mov	r3, r0
   1142c:	ldr	r0, [r1, r2]
   11430:	ldr	ip, [r1, ip]
   11434:	ldr	r1, [pc, #32]	; 1145c <__assert_fail@plt+0x8d0>
   11438:	ldr	r0, [r0]
   1143c:	add	r1, pc, r1
   11440:	ldr	r2, [ip]
   11444:	bl	10b08 <fprintf@plt>
   11448:	b	1141c <__assert_fail@plt+0x890>
   1144c:	strdeq	r5, [r1], -r8
   11450:	andeq	r0, r0, ip, lsr #1
   11454:	strheq	r0, [r0], -r8
   11458:	andeq	r0, r0, r0, asr #1
   1145c:	ldrdeq	r2, [r0], -r4

00011460 <error@@Base>:
   11460:	push	{r4, lr}
   11464:	mov	r3, r0
   11468:	ldr	r4, [pc, #52]	; 114a4 <error@@Base+0x44>
   1146c:	ldr	r1, [pc, #52]	; 114a8 <error@@Base+0x48>
   11470:	ldr	r2, [pc, #52]	; 114ac <error@@Base+0x4c>
   11474:	add	r4, pc, r4
   11478:	ldr	ip, [r4, r1]
   1147c:	ldr	r0, [r4, r2]
   11480:	ldr	r1, [pc, #40]	; 114b0 <error@@Base+0x50>
   11484:	ldr	r2, [ip]
   11488:	add	r1, pc, r1
   1148c:	ldr	r0, [r0]
   11490:	bl	10b08 <fprintf@plt>
   11494:	ldr	r3, [pc, #24]	; 114b4 <error@@Base+0x54>
   11498:	ldr	r3, [r4, r3]
   1149c:	ldr	r0, [r3]
   114a0:	bl	111f0 <__assert_fail@plt+0x664>
   114a4:	andeq	r5, r1, r4, lsl #23
   114a8:	andeq	r0, r0, r0, asr #1
   114ac:	strheq	r0, [r0], -r8
   114b0:	muleq	r0, r8, r2
   114b4:	ldrdeq	r0, [r0], -ip
   114b8:	push	{r4, lr}
   114bc:	bl	109dc <calloc@plt>
   114c0:	cmp	r0, #0
   114c4:	popne	{r4, pc}
   114c8:	ldr	r0, [pc, #4]	; 114d4 <error@@Base+0x74>
   114cc:	add	r0, pc, r0
   114d0:	bl	11460 <error@@Base>
   114d4:	andeq	r2, r0, ip, asr r2
   114d8:	ldr	r3, [pc, #40]	; 11508 <error@@Base+0xa8>
   114dc:	add	r3, pc, r3
   114e0:	ldrb	r2, [r3, #2]
   114e4:	cmp	r2, #0
   114e8:	beq	114f0 <error@@Base+0x90>
   114ec:	bx	lr
   114f0:	ldr	r0, [pc, #20]	; 1150c <error@@Base+0xac>
   114f4:	push	{r4, lr}
   114f8:	mov	r2, #1
   114fc:	add	r0, pc, r0
   11500:	strb	r2, [r3, #2]
   11504:	bl	11460 <error@@Base>
   11508:	andeq	r5, r1, r0, lsr #24
   1150c:	andeq	r2, r0, r8, asr #4
   11510:	ldr	r4, [pc, #68]	; 1155c <error@@Base+0xfc>
   11514:	ldr	r2, [pc, #68]	; 11560 <error@@Base+0x100>
   11518:	ldr	ip, [pc, #68]	; 11564 <error@@Base+0x104>
   1151c:	add	r4, pc, r4
   11520:	push	{lr}		; (str lr, [sp, #-4]!)
   11524:	sub	sp, sp, #12
   11528:	mov	r3, r0
   1152c:	ldr	ip, [r4, ip]
   11530:	ldr	r0, [r4, r2]
   11534:	str	r1, [sp]
   11538:	ldr	r1, [pc, #40]	; 11568 <error@@Base+0x108>
   1153c:	ldr	r2, [ip]
   11540:	ldr	r0, [r0]
   11544:	add	r1, pc, r1
   11548:	bl	10b08 <fprintf@plt>
   1154c:	ldr	r3, [pc, #24]	; 1156c <error@@Base+0x10c>
   11550:	ldr	r3, [r4, r3]
   11554:	ldr	r0, [r3]
   11558:	bl	111f0 <__assert_fail@plt+0x664>
   1155c:	ldrdeq	r5, [r1], -ip
   11560:	strheq	r0, [r0], -r8
   11564:	andeq	r0, r0, r0, asr #1
   11568:	andeq	r2, r0, r0, lsl r2
   1156c:	ldrdeq	r0, [r0], -ip
   11570:	ldr	ip, [pc, #116]	; 115ec <error@@Base+0x18c>
   11574:	subs	r2, r0, #0
   11578:	push	{r4, r5, r6, lr}
   1157c:	add	ip, pc, ip
   11580:	mov	r4, r1
   11584:	beq	115b4 <error@@Base+0x154>
   11588:	mov	r5, r2
   1158c:	bl	10a0c <fopen@plt>
   11590:	cmp	r0, #0
   11594:	popne	{r4, r5, r6, pc}
   11598:	ldrb	r3, [r4]
   1159c:	mov	r1, r5
   115a0:	cmp	r3, #119	; 0x77
   115a4:	beq	115e0 <error@@Base+0x180>
   115a8:	ldr	r0, [pc, #64]	; 115f0 <error@@Base+0x190>
   115ac:	add	r0, pc, r0
   115b0:	bl	11510 <error@@Base+0xb0>
   115b4:	ldrb	r3, [r1]
   115b8:	cmp	r3, #114	; 0x72
   115bc:	beq	115d0 <error@@Base+0x170>
   115c0:	ldr	r3, [pc, #44]	; 115f4 <error@@Base+0x194>
   115c4:	ldr	r3, [ip, r3]
   115c8:	ldr	r0, [r3]
   115cc:	pop	{r4, r5, r6, pc}
   115d0:	ldr	r3, [pc, #32]	; 115f8 <error@@Base+0x198>
   115d4:	ldr	r3, [ip, r3]
   115d8:	ldr	r0, [r3]
   115dc:	pop	{r4, r5, r6, pc}
   115e0:	ldr	r0, [pc, #20]	; 115fc <error@@Base+0x19c>
   115e4:	add	r0, pc, r0
   115e8:	bl	11510 <error@@Base+0xb0>
   115ec:	andeq	r5, r1, ip, ror sl
   115f0:	ldrdeq	r2, [r0], -r0
   115f4:	ldrdeq	r0, [r0], -r4
   115f8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   115fc:	andeq	r2, r0, r0, lsl #3
   11600:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11604:	sub	sp, sp, #20
   11608:	mov	r7, r0
   1160c:	str	r0, [sp, #8]
   11610:	ldr	r0, [r1]
   11614:	str	r2, [sp, #12]
   11618:	mov	r9, r1
   1161c:	mov	r6, r3
   11620:	bl	113a4 <__assert_fail@plt+0x818>
   11624:	ldr	r5, [pc, #496]	; 1181c <error@@Base+0x3bc>
   11628:	ldr	r3, [pc, #496]	; 11820 <error@@Base+0x3c0>
   1162c:	add	r5, pc, r5
   11630:	ldr	r4, [pc, #492]	; 11824 <error@@Base+0x3c4>
   11634:	ldr	r3, [r5, r3]
   11638:	add	r4, pc, r4
   1163c:	mov	r1, r4
   11640:	str	r0, [r3]
   11644:	mov	r0, #2
   11648:	bl	10ac0 <__sysv_signal@plt>
   1164c:	mov	r1, r4
   11650:	mov	r0, #15
   11654:	bl	10ac0 <__sysv_signal@plt>
   11658:	ldr	fp, [r7]
   1165c:	cmp	fp, #1
   11660:	beq	117a8 <error@@Base+0x348>
   11664:	mov	r7, #0
   11668:	ble	117bc <error@@Base+0x35c>
   1166c:	ldr	r3, [pc, #436]	; 11828 <error@@Base+0x3c8>
   11670:	mov	sl, #1
   11674:	add	r3, pc, r3
   11678:	str	r3, [sp, #4]
   1167c:	mov	r4, sl
   11680:	mov	r3, fp
   11684:	b	116a8 <error@@Base+0x248>
   11688:	add	r2, r7, #1
   1168c:	str	r5, [r9, r7, lsl #2]
   11690:	sxth	r7, r2
   11694:	add	r4, r4, #1
   11698:	sxth	r4, r4
   1169c:	cmp	r4, r3
   116a0:	mov	sl, r4
   116a4:	bge	117bc <error@@Base+0x35c>
   116a8:	ldr	r5, [r9, r4, lsl #2]
   116ac:	lsl	fp, r4, #2
   116b0:	ldrb	r2, [r5]
   116b4:	cmp	r2, #45	; 0x2d
   116b8:	bne	11688 <error@@Base+0x228>
   116bc:	ldrb	r8, [r5, #1]
   116c0:	cmp	r8, #0
   116c4:	beq	11688 <error@@Base+0x228>
   116c8:	mov	r0, r5
   116cc:	str	r3, [sp]
   116d0:	bl	10afc <strlen@plt>
   116d4:	mov	r1, r5
   116d8:	mov	r2, r0
   116dc:	ldr	r0, [sp, #4]
   116e0:	bl	10b68 <strncmp@plt>
   116e4:	cmp	r0, #0
   116e8:	beq	11804 <error@@Base+0x3a4>
   116ec:	ldr	r3, [sp]
   116f0:	add	sl, sl, #1
   116f4:	cmp	sl, r3
   116f8:	addlt	fp, r9, fp
   116fc:	movge	ip, #0
   11700:	ldrlt	ip, [fp, #4]
   11704:	cmp	r6, #0
   11708:	beq	1174c <error@@Base+0x2ec>
   1170c:	ldrb	r2, [r6]
   11710:	cmp	r2, #0
   11714:	beq	1174c <error@@Base+0x2ec>
   11718:	cmp	r2, r8
   1171c:	beq	1175c <error@@Base+0x2fc>
   11720:	mov	r2, #0
   11724:	b	11730 <error@@Base+0x2d0>
   11728:	cmp	r8, r0
   1172c:	beq	11760 <error@@Base+0x300>
   11730:	add	r2, r2, #1
   11734:	sxth	r2, r2
   11738:	add	r1, r2, r2, lsl #1
   1173c:	ldrb	r0, [r6, r1, lsl #2]
   11740:	add	r1, r6, r1, lsl #2
   11744:	cmp	r0, #0
   11748:	bne	11728 <error@@Base+0x2c8>
   1174c:	ldr	r0, [pc, #216]	; 1182c <error@@Base+0x3cc>
   11750:	mov	r1, r5
   11754:	add	r0, pc, r0
   11758:	bl	11510 <error@@Base+0xb0>
   1175c:	mov	r1, r6
   11760:	ldr	r2, [r1, #4]
   11764:	cmp	r2, #0
   11768:	beq	117cc <error@@Base+0x36c>
   1176c:	ldrb	r0, [r5, #2]
   11770:	cmp	r0, #0
   11774:	cmpeq	ip, #0
   11778:	beq	117cc <error@@Base+0x36c>
   1177c:	ldr	r1, [r2]
   11780:	cmp	r1, #0
   11784:	bne	1180c <error@@Base+0x3ac>
   11788:	cmp	r0, #0
   1178c:	addne	ip, r5, #2
   11790:	str	ip, [r2]
   11794:	ldrb	r2, [r5, #2]
   11798:	cmp	r2, #0
   1179c:	addeq	r4, r4, #1
   117a0:	sxtheq	r4, r4
   117a4:	b	11694 <error@@Base+0x234>
   117a8:	ldr	r3, [pc, #128]	; 11830 <error@@Base+0x3d0>
   117ac:	ldr	r3, [r5, r3]
   117b0:	ldrb	r7, [r3]
   117b4:	cmp	r7, #0
   117b8:	bne	11804 <error@@Base+0x3a4>
   117bc:	ldr	r3, [sp, #8]
   117c0:	str	r7, [r3]
   117c4:	add	sp, sp, #20
   117c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   117cc:	ldr	r3, [r1, #8]
   117d0:	cmp	r3, #0
   117d4:	beq	1174c <error@@Base+0x2ec>
   117d8:	ldrb	r2, [r5, #2]
   117dc:	cmp	r2, #0
   117e0:	bne	1174c <error@@Base+0x2ec>
   117e4:	ldrb	r2, [r3]
   117e8:	cmp	r2, #0
   117ec:	bne	1180c <error@@Base+0x3ac>
   117f0:	mov	r2, #1
   117f4:	strb	r2, [r3]
   117f8:	ldr	r3, [sp, #8]
   117fc:	ldr	r3, [r3]
   11800:	b	11694 <error@@Base+0x234>
   11804:	ldr	r0, [sp, #12]
   11808:	bl	113f8 <__assert_fail@plt+0x86c>
   1180c:	ldr	r0, [pc, #32]	; 11834 <error@@Base+0x3d4>
   11810:	mov	r1, r5
   11814:	add	r0, pc, r0
   11818:	bl	11510 <error@@Base+0xb0>
   1181c:	andeq	r5, r1, ip, asr #19
   11820:	andeq	r0, r0, r0, asr #1
   11824:			; <UNDEFINED> instruction: 0xfffffe98
   11828:	andeq	r2, r0, ip, lsl r1
   1182c:	andeq	r2, r0, r4, asr #32
   11830:	andeq	r0, r0, r8, lsr #1
   11834:	muleq	r0, r4, pc	; <UNPREDICTABLE>
   11838:	ldr	ip, [pc, #60]	; 1187c <error@@Base+0x41c>
   1183c:	push	{lr}		; (str lr, [sp, #-4]!)
   11840:	add	ip, pc, ip
   11844:	ldr	r2, [pc, #52]	; 11880 <error@@Base+0x420>
   11848:	ldr	lr, [pc, #52]	; 11884 <error@@Base+0x424>
   1184c:	sub	sp, sp, #12
   11850:	mov	r3, r0
   11854:	ldr	lr, [ip, lr]
   11858:	ldr	r0, [ip, r2]
   1185c:	str	r1, [sp]
   11860:	ldr	r1, [pc, #32]	; 11888 <error@@Base+0x428>
   11864:	ldr	r2, [lr]
   11868:	add	r1, pc, r1
   1186c:	ldr	r0, [r0]
   11870:	bl	10b08 <fprintf@plt>
   11874:	add	sp, sp, #12
   11878:	pop	{pc}		; (ldr pc, [sp], #4)
   1187c:			; <UNDEFINED> instruction: 0x000157b8
   11880:	strheq	r0, [r0], -r8
   11884:	andeq	r0, r0, r0, asr #1
   11888:	andeq	r1, r0, ip, ror #29
   1188c:	andeq	r0, r0, r0
   11890:	push	{r4, r5, r6, lr}
   11894:	mov	r2, r0
   11898:	ldr	r4, [pc, #60]	; 118dc <error@@Base+0x47c>
   1189c:	mov	r5, r1
   118a0:	add	r4, pc, r4
   118a4:	mov	r1, #99	; 0x63
   118a8:	mov	r0, r4
   118ac:	bl	10a30 <fgets@plt>
   118b0:	cmp	r0, #0
   118b4:	popeq	{r4, r5, r6, pc}
   118b8:	ldr	r1, [pc, #32]	; 118e0 <error@@Base+0x480>
   118bc:	mov	r2, r5
   118c0:	mov	r0, r4
   118c4:	add	r1, pc, r1
   118c8:	bl	10b14 <__isoc99_sscanf@plt>
   118cc:	sub	r0, r0, #1
   118d0:	clz	r0, r0
   118d4:	lsr	r0, r0, #5
   118d8:	pop	{r4, r5, r6, pc}
   118dc:	andeq	r5, r1, r0, ror #16
   118e0:	strdeq	r1, [r0], -ip
   118e4:	push	{r4, r5, r6, lr}
   118e8:	mov	r6, r2
   118ec:	ldr	r4, [pc, #68]	; 11938 <error@@Base+0x4d8>
   118f0:	mov	r2, r0
   118f4:	add	r4, pc, r4
   118f8:	mov	r5, r1
   118fc:	mov	r0, r4
   11900:	mov	r1, #99	; 0x63
   11904:	bl	10a30 <fgets@plt>
   11908:	cmp	r0, #0
   1190c:	popeq	{r4, r5, r6, pc}
   11910:	ldr	r1, [pc, #36]	; 1193c <error@@Base+0x4dc>
   11914:	mov	r3, r6
   11918:	mov	r2, r5
   1191c:	mov	r0, r4
   11920:	add	r1, pc, r1
   11924:	bl	10b14 <__isoc99_sscanf@plt>
   11928:	sub	r0, r0, #2
   1192c:	clz	r0, r0
   11930:	lsr	r0, r0, #5
   11934:	pop	{r4, r5, r6, pc}
   11938:	andeq	r5, r1, ip, lsl #16
   1193c:	muleq	r0, ip, lr
   11940:	ldr	r1, [r1, #8]
   11944:	ldr	r0, [r0, #8]
   11948:	b	11270 <__assert_fail@plt+0x6e4>
   1194c:	ldr	r2, [r1]
   11950:	mov	r3, r0
   11954:	cmp	r2, #0
   11958:	beq	11990 <error@@Base+0x530>
   1195c:	ldr	r3, [r1, #4]
   11960:	vmov	s15, r2
   11964:	sub	r3, r2, r3
   11968:	vldr	d5, [pc, #56]	; 119a8 <error@@Base+0x548>
   1196c:	vmov	s14, r3
   11970:	vcvt.f64.s32	d6, s15
   11974:	ldr	r1, [pc, #52]	; 119b0 <error@@Base+0x550>
   11978:	vcvt.f64.s32	d7, s14
   1197c:	add	r1, pc, r1
   11980:	vmul.f64	d7, d7, d5
   11984:	vdiv.f64	d5, d7, d6
   11988:	vmov	r2, r3, d5
   1198c:	b	10b08 <fprintf@plt>
   11990:	ldr	r0, [pc, #28]	; 119b4 <error@@Base+0x554>
   11994:	mov	r2, #8
   11998:	mov	r1, #1
   1199c:	add	r0, pc, r0
   119a0:	b	10a84 <fwrite@plt>
   119a4:	nop			; (mov r0, r0)
   119a8:	andeq	r0, r0, r0
   119ac:	subsmi	r0, r9, r0
   119b0:	andeq	r1, r0, r4, asr lr
   119b4:	andeq	r1, r0, r8, lsr #28
   119b8:	push	{r4, r5, r6, lr}
   119bc:	subs	r4, r1, #0
   119c0:	mov	r5, r0
   119c4:	beq	11a00 <error@@Base+0x5a0>
   119c8:	ldr	r1, [pc, #76]	; 11a1c <error@@Base+0x5bc>
   119cc:	ldm	r4, {r2, r3}
   119d0:	add	r1, pc, r1
   119d4:	bl	10b08 <fprintf@plt>
   119d8:	mov	r1, r4
   119dc:	mov	r0, r5
   119e0:	bl	1194c <error@@Base+0x4ec>
   119e4:	ldr	r0, [pc, #52]	; 11a20 <error@@Base+0x5c0>
   119e8:	mov	r3, r5
   119ec:	mov	r2, #3
   119f0:	mov	r1, #1
   119f4:	add	r0, pc, r0
   119f8:	pop	{r4, r5, r6, lr}
   119fc:	b	10a84 <fwrite@plt>
   11a00:	mov	r3, r0
   11a04:	ldr	r0, [pc, #24]	; 11a24 <error@@Base+0x5c4>
   11a08:	mov	r2, #26
   11a0c:	mov	r1, #1
   11a10:	add	r0, pc, r0
   11a14:	bl	10a84 <fwrite@plt>
   11a18:	b	119e4 <error@@Base+0x584>
   11a1c:	andeq	r1, r0, r8, lsl #28
   11a20:	andeq	r1, r0, ip, lsl #28
   11a24:	ldrdeq	r1, [r0], -r4
   11a28:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11a2c:	mov	r5, r1
   11a30:	ldr	r1, [pc, #284]	; 11b54 <error@@Base+0x6f4>
   11a34:	ldrb	r9, [sp, #32]
   11a38:	mov	r6, r0
   11a3c:	add	r1, pc, r1
   11a40:	mov	r7, r2
   11a44:	mov	r2, r3
   11a48:	ldrb	sl, [sp, #36]	; 0x24
   11a4c:	bl	10b08 <fprintf@plt>
   11a50:	mov	r0, r6
   11a54:	mov	r1, #0
   11a58:	bl	119b8 <error@@Base+0x558>
   11a5c:	cmp	r9, #0
   11a60:	beq	11b30 <error@@Base+0x6d0>
   11a64:	ldr	r2, [pc, #236]	; 11b58 <error@@Base+0x6f8>
   11a68:	ldr	r1, [pc, #236]	; 11b5c <error@@Base+0x6fc>
   11a6c:	add	r2, pc, r2
   11a70:	add	r1, pc, r1
   11a74:	mov	r0, r6
   11a78:	bl	10b08 <fprintf@plt>
   11a7c:	cmp	r7, #0
   11a80:	ble	11ad0 <error@@Base+0x670>
   11a84:	ldr	r8, [pc, #212]	; 11b60 <error@@Base+0x700>
   11a88:	mov	r4, #1
   11a8c:	add	r8, pc, r8
   11a90:	ldr	r3, [r5, r4, lsl #3]
   11a94:	mov	r0, r6
   11a98:	cmp	r3, #0
   11a9c:	add	r1, r5, r4, lsl #3
   11aa0:	ble	11ab8 <error@@Base+0x658>
   11aa4:	bl	119b8 <error@@Base+0x558>
   11aa8:	mov	r2, r4
   11aac:	mov	r1, r8
   11ab0:	mov	r0, r6
   11ab4:	bl	10b08 <fprintf@plt>
   11ab8:	add	r4, r4, #1
   11abc:	sxth	r4, r4
   11ac0:	cmp	r7, r4
   11ac4:	bge	11a90 <error@@Base+0x630>
   11ac8:	cmp	r9, #0
   11acc:	beq	11b00 <error@@Base+0x6a0>
   11ad0:	add	r1, r7, #1
   11ad4:	ldr	r3, [r5, r1, lsl #3]
   11ad8:	add	r1, r5, r1, lsl #3
   11adc:	cmp	r3, #0
   11ae0:	ble	11b00 <error@@Base+0x6a0>
   11ae4:	mov	r0, r6
   11ae8:	bl	119b8 <error@@Base+0x558>
   11aec:	ldr	r1, [pc, #112]	; 11b64 <error@@Base+0x704>
   11af0:	mov	r2, r7
   11af4:	add	r1, pc, r1
   11af8:	mov	r0, r6
   11afc:	bl	10b08 <fprintf@plt>
   11b00:	cmp	sl, #0
   11b04:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b08:	mov	r1, r5
   11b0c:	mov	r0, r6
   11b10:	bl	119b8 <error@@Base+0x558>
   11b14:	ldr	r0, [pc, #76]	; 11b68 <error@@Base+0x708>
   11b18:	mov	r3, r6
   11b1c:	mov	r2, #7
   11b20:	mov	r1, #1
   11b24:	add	r0, pc, r0
   11b28:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   11b2c:	b	10a84 <fwrite@plt>
   11b30:	ldr	r2, [pc, #52]	; 11b6c <error@@Base+0x70c>
   11b34:	ldr	r1, [pc, #52]	; 11b70 <error@@Base+0x710>
   11b38:	add	r2, pc, r2
   11b3c:	add	r1, pc, r1
   11b40:	mov	r0, r6
   11b44:	bl	10b08 <fprintf@plt>
   11b48:	cmp	r7, #0
   11b4c:	bgt	11a84 <error@@Base+0x624>
   11b50:	b	11b00 <error@@Base+0x6a0>
   11b54:	andeq	r1, r0, r8, asr #27
   11b58:	andeq	r1, r0, r0, asr #27
   11b5c:			; <UNDEFINED> instruction: 0x00001cb4
   11b60:	andeq	r1, r0, r0, lsl #27
   11b64:	andeq	r1, r0, r4, lsr #26
   11b68:	andeq	r1, r0, r0, lsl #26
   11b6c:	strdeq	r1, [r0], -ip
   11b70:	andeq	r1, r0, r8, ror #23
   11b74:	push	{r4, r5, r6, r7, r8, lr}
   11b78:	mov	r6, r0
   11b7c:	mov	r0, r1
   11b80:	add	r5, r1, #4096	; 0x1000
   11b84:	mov	r4, r2
   11b88:	bl	110c0 <__assert_fail@plt+0x534>
   11b8c:	ldr	r2, [pc, #144]	; 11c24 <error@@Base+0x7c4>
   11b90:	ldr	r1, [r5, #3952]	; 0xf70
   11b94:	ldr	r0, [r5, #3956]	; 0xf74
   11b98:	add	r2, pc, r2
   11b9c:	bl	13624 <error@@Base+0x21c4>
   11ba0:	ldr	r1, [pc, #128]	; 11c28 <error@@Base+0x7c8>
   11ba4:	mov	r2, r4
   11ba8:	add	r1, pc, r1
   11bac:	mov	r0, r6
   11bb0:	bl	10b08 <fprintf@plt>
   11bb4:	mov	r0, r6
   11bb8:	mov	r1, #0
   11bbc:	bl	119b8 <error@@Base+0x558>
   11bc0:	mov	r1, r6
   11bc4:	mov	r0, #10
   11bc8:	bl	10b38 <fputc@plt>
   11bcc:	ldr	r3, [r5, #3956]	; 0xf74
   11bd0:	cmp	r3, #0
   11bd4:	pople	{r4, r5, r6, r7, r8, pc}
   11bd8:	ldr	r7, [pc, #76]	; 11c2c <error@@Base+0x7cc>
   11bdc:	mov	r4, #0
   11be0:	add	r7, pc, r7
   11be4:	ldr	r3, [r5, #3952]	; 0xf70
   11be8:	mov	r0, r6
   11bec:	ldr	r1, [r3, r4, lsl #2]
   11bf0:	add	r1, r1, #12
   11bf4:	bl	119b8 <error@@Base+0x558>
   11bf8:	ldr	r3, [r5, #3952]	; 0xf70
   11bfc:	mov	r1, r7
   11c00:	mov	r0, r6
   11c04:	ldr	r3, [r3, r4, lsl #2]
   11c08:	add	r4, r4, #1
   11c0c:	ldr	r2, [r3, #8]
   11c10:	bl	10b08 <fprintf@plt>
   11c14:	ldr	r3, [r5, #3956]	; 0xf74
   11c18:	cmp	r3, r4
   11c1c:	bgt	11be4 <error@@Base+0x784>
   11c20:	pop	{r4, r5, r6, r7, r8, pc}
   11c24:			; <UNDEFINED> instruction: 0xfffffda0
   11c28:	andeq	r1, r0, ip, asr ip
   11c2c:	andeq	r1, r0, r4, asr #22
   11c30:	ldr	ip, [r0]
   11c34:	ldr	r3, [r0, #4]
   11c38:	add	r1, ip, r1
   11c3c:	add	r2, r3, r2
   11c40:	stm	r0, {r1, r2}
   11c44:	bx	lr
   11c48:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c4c:	mov	r2, r0
   11c50:	ldr	r4, [pc, #236]	; 11d44 <error@@Base+0x8e4>
   11c54:	sub	sp, sp, #20
   11c58:	add	r4, pc, r4
   11c5c:	mov	r6, r0
   11c60:	mov	sl, r1
   11c64:	mov	r0, r4
   11c68:	mov	r1, #99	; 0x63
   11c6c:	bl	10a30 <fgets@plt>
   11c70:	cmp	r0, #0
   11c74:	beq	11d30 <error@@Base+0x8d0>
   11c78:	mov	r0, r4
   11c7c:	mov	r2, r6
   11c80:	mov	r1, #99	; 0x63
   11c84:	bl	10a30 <fgets@plt>
   11c88:	cmp	r0, #0
   11c8c:	beq	11d30 <error@@Base+0x8d0>
   11c90:	ldr	r4, [pc, #176]	; 11d48 <error@@Base+0x8e8>
   11c94:	ldr	fp, [pc, #176]	; 11d4c <error@@Base+0x8ec>
   11c98:	mov	r3, #0
   11c9c:	add	r4, pc, r4
   11ca0:	str	r3, [sp, #4]
   11ca4:	add	r4, r4, #29
   11ca8:	mov	r5, r3
   11cac:	add	r9, sp, #12
   11cb0:	add	r8, sp, #8
   11cb4:	mov	r7, #10
   11cb8:	add	fp, pc, fp
   11cbc:	b	11cd4 <error@@Base+0x874>
   11cc0:	ldr	r1, [sp, #8]
   11cc4:	lsl	r3, r3, #3
   11cc8:	add	r0, sl, r3
   11ccc:	ldr	r2, [sp, #12]
   11cd0:	bl	11c30 <error@@Base+0x7d0>
   11cd4:	mov	r2, r9
   11cd8:	mov	r1, r8
   11cdc:	mov	r0, r6
   11ce0:	bl	118e4 <error@@Base+0x484>
   11ce4:	mov	r2, r7
   11ce8:	mov	r1, r5
   11cec:	cmp	r0, #0
   11cf0:	mov	r0, r4
   11cf4:	beq	11d38 <error@@Base+0x8d8>
   11cf8:	bl	109f4 <strtol@plt>
   11cfc:	mov	r1, fp
   11d00:	subs	r3, r0, #0
   11d04:	mov	r0, r4
   11d08:	bne	11cc0 <error@@Base+0x860>
   11d0c:	bl	109e8 <strcmp@plt>
   11d10:	mov	r3, r5
   11d14:	cmp	r0, #0
   11d18:	movne	r3, #88	; 0x58
   11d1c:	ldreq	r2, [sp, #8]
   11d20:	ldrne	r1, [sp, #8]
   11d24:	streq	r2, [sp, #4]
   11d28:	moveq	r1, r2
   11d2c:	b	11cc8 <error@@Base+0x868>
   11d30:	mov	r3, #0
   11d34:	str	r3, [sp, #4]
   11d38:	ldr	r0, [sp, #4]
   11d3c:	add	sp, sp, #20
   11d40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d44:	andeq	r5, r1, r8, lsr #9
   11d48:	andeq	r5, r1, r4, ror #8
   11d4c:	andeq	r1, r0, ip, ror #22
   11d50:	push	{r4, r5, r6, r7, r8, lr}
   11d54:	mov	r5, r2
   11d58:	mov	r6, r3
   11d5c:	mov	r7, r0
   11d60:	mov	r8, r1
   11d64:	bl	10f34 <__assert_fail@plt+0x3a8>
   11d68:	subs	r4, r0, #0
   11d6c:	beq	11d84 <error@@Base+0x924>
   11d70:	mov	r2, r6
   11d74:	mov	r1, r5
   11d78:	add	r0, r4, #12
   11d7c:	pop	{r4, r5, r6, r7, r8, lr}
   11d80:	b	11c30 <error@@Base+0x7d0>
   11d84:	mov	r1, #20
   11d88:	mov	r0, #1
   11d8c:	bl	114b8 <error@@Base+0x58>
   11d90:	mov	r4, r0
   11d94:	mov	r0, r8
   11d98:	bl	10a48 <strdup@plt>
   11d9c:	mov	r1, r4
   11da0:	str	r0, [r4, #8]
   11da4:	mov	r0, r7
   11da8:	bl	10fb8 <__assert_fail@plt+0x42c>
   11dac:	b	11d70 <error@@Base+0x910>
   11db0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11db4:	mov	r2, r0
   11db8:	ldr	r4, [pc, #148]	; 11e54 <error@@Base+0x9f4>
   11dbc:	sub	sp, sp, #8
   11dc0:	add	r4, pc, r4
   11dc4:	mov	r5, r0
   11dc8:	mov	r8, r1
   11dcc:	mov	r0, r4
   11dd0:	mov	r1, #99	; 0x63
   11dd4:	bl	10a30 <fgets@plt>
   11dd8:	cmp	r0, #0
   11ddc:	beq	11e4c <error@@Base+0x9ec>
   11de0:	mov	r0, r4
   11de4:	mov	r2, r5
   11de8:	mov	r1, #99	; 0x63
   11dec:	bl	10a30 <fgets@plt>
   11df0:	cmp	r0, #0
   11df4:	beq	11e4c <error@@Base+0x9ec>
   11df8:	ldr	r4, [pc, #88]	; 11e58 <error@@Base+0x9f8>
   11dfc:	add	r7, sp, #4
   11e00:	add	r4, pc, r4
   11e04:	add	sl, r4, #29
   11e08:	mov	r6, sp
   11e0c:	mov	r9, #0
   11e10:	b	11e30 <error@@Base+0x9d0>
   11e14:	bl	10afc <strlen@plt>
   11e18:	ldm	sp, {r2, r3}
   11e1c:	mov	r1, sl
   11e20:	add	ip, r4, r0
   11e24:	mov	r0, r8
   11e28:	strb	r9, [ip, #-1]
   11e2c:	bl	11d50 <error@@Base+0x8f0>
   11e30:	mov	r2, r7
   11e34:	mov	r1, r6
   11e38:	mov	r0, r5
   11e3c:	bl	118e4 <error@@Base+0x484>
   11e40:	cmp	r0, #0
   11e44:	mov	r0, r4
   11e48:	bne	11e14 <error@@Base+0x9b4>
   11e4c:	add	sp, sp, #8
   11e50:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11e54:	andeq	r5, r1, r0, asr #6
   11e58:	andeq	r5, r1, r0, lsl #6
   11e5c:	push	{r4, r5, r6, r7, lr}
   11e60:	mov	r7, r1
   11e64:	ldr	r1, [pc, #392]	; 11ff4 <error@@Base+0xb94>
   11e68:	sub	sp, sp, #12
   11e6c:	add	r1, pc, r1
   11e70:	mov	r6, r0
   11e74:	mov	r0, r7
   11e78:	bl	11570 <error@@Base+0x110>
   11e7c:	ldr	r5, [pc, #372]	; 11ff8 <error@@Base+0xb98>
   11e80:	mov	r1, #99	; 0x63
   11e84:	add	r5, pc, r5
   11e88:	mov	r2, r0
   11e8c:	mov	r4, r0
   11e90:	mov	r0, r5
   11e94:	bl	10a30 <fgets@plt>
   11e98:	cmp	r0, #0
   11e9c:	beq	11fd0 <error@@Base+0xb70>
   11ea0:	ldr	r1, [pc, #340]	; 11ffc <error@@Base+0xb9c>
   11ea4:	mov	r2, #45	; 0x2d
   11ea8:	add	r1, pc, r1
   11eac:	mov	r0, r5
   11eb0:	bl	10b68 <strncmp@plt>
   11eb4:	cmp	r0, #0
   11eb8:	bne	11fd0 <error@@Base+0xb70>
   11ebc:	mov	r2, r4
   11ec0:	mov	r1, #99	; 0x63
   11ec4:	mov	r0, r5
   11ec8:	bl	10a30 <fgets@plt>
   11ecc:	cmp	r0, #0
   11ed0:	beq	11fd0 <error@@Base+0xb70>
   11ed4:	ldr	r1, [pc, #292]	; 12000 <error@@Base+0xba0>
   11ed8:	mov	r0, r5
   11edc:	add	r1, pc, r1
   11ee0:	bl	109e8 <strcmp@plt>
   11ee4:	cmp	r0, #0
   11ee8:	bne	11fd0 <error@@Base+0xb70>
   11eec:	mov	r1, sp
   11ef0:	mov	r0, r4
   11ef4:	bl	11890 <error@@Base+0x430>
   11ef8:	cmp	r0, #0
   11efc:	beq	11fd0 <error@@Base+0xb70>
   11f00:	add	r1, sp, #4
   11f04:	mov	r0, r4
   11f08:	bl	11890 <error@@Base+0x430>
   11f0c:	cmp	r0, #0
   11f10:	beq	11fd0 <error@@Base+0xb70>
   11f14:	mov	r2, r4
   11f18:	mov	r1, #99	; 0x63
   11f1c:	mov	r0, r5
   11f20:	bl	10a30 <fgets@plt>
   11f24:	cmp	r0, #0
   11f28:	beq	11fd0 <error@@Base+0xb70>
   11f2c:	mov	r0, r5
   11f30:	mov	r2, r4
   11f34:	mov	r1, #99	; 0x63
   11f38:	bl	10a30 <fgets@plt>
   11f3c:	cmp	r0, #0
   11f40:	beq	11fd0 <error@@Base+0xb70>
   11f44:	ldm	sp, {r1, r2}
   11f48:	mov	r0, r6
   11f4c:	bl	11c30 <error@@Base+0x7d0>
   11f50:	add	r1, r6, #8
   11f54:	mov	r0, r4
   11f58:	bl	11c48 <error@@Base+0x7e8>
   11f5c:	add	r1, r6, #416	; 0x1a0
   11f60:	mov	r7, r0
   11f64:	mov	r0, r4
   11f68:	bl	11c48 <error@@Base+0x7e8>
   11f6c:	add	r1, r6, #824	; 0x338
   11f70:	mov	r5, r0
   11f74:	mov	r0, r4
   11f78:	bl	11c48 <error@@Base+0x7e8>
   11f7c:	ldr	r3, [sp]
   11f80:	cmp	r3, #0
   11f84:	ble	11fc0 <error@@Base+0xb60>
   11f88:	add	r1, r6, #920	; 0x398
   11f8c:	mov	r0, r4
   11f90:	bl	11c48 <error@@Base+0x7e8>
   11f94:	cmp	r7, #0
   11f98:	ble	11fa8 <error@@Base+0xb48>
   11f9c:	add	r1, r6, #992	; 0x3e0
   11fa0:	mov	r0, r4
   11fa4:	bl	11db0 <error@@Base+0x950>
   11fa8:	cmp	r5, #0
   11fac:	ble	11fc0 <error@@Base+0xb60>
   11fb0:	add	r1, r6, #9024	; 0x2340
   11fb4:	add	r1, r1, #24
   11fb8:	mov	r0, r4
   11fbc:	bl	11db0 <error@@Base+0x950>
   11fc0:	mov	r0, r4
   11fc4:	bl	11304 <__assert_fail@plt+0x778>
   11fc8:	add	sp, sp, #12
   11fcc:	pop	{r4, r5, r6, r7, pc}
   11fd0:	cmp	r7, #0
   11fd4:	beq	11fe8 <error@@Base+0xb88>
   11fd8:	ldr	r0, [pc, #36]	; 12004 <error@@Base+0xba4>
   11fdc:	mov	r1, r7
   11fe0:	add	r0, pc, r0
   11fe4:	bl	11510 <error@@Base+0xb0>
   11fe8:	ldr	r7, [pc, #24]	; 12008 <error@@Base+0xba8>
   11fec:	add	r7, pc, r7
   11ff0:	b	11fd8 <error@@Base+0xb78>
   11ff4:	ldrdeq	r1, [r0], -r8
   11ff8:	andeq	r5, r1, ip, ror r2
   11ffc:	andeq	r1, r0, r0, lsr #19
   12000:	andeq	r4, r0, ip, lsl lr
   12004:	muleq	r0, r8, r8
   12008:	andeq	r1, r0, r0, asr r8
   1200c:	mov	r3, r1
   12010:	ldr	r1, [pc, #360]	; 12180 <error@@Base+0xd20>
   12014:	push	{r4, r5, r6, r7, r8, lr}
   12018:	add	r1, pc, r1
   1201c:	sub	sp, sp, #8
   12020:	mov	r4, r0
   12024:	mov	r0, r3
   12028:	bl	11570 <error@@Base+0x110>
   1202c:	ldr	r3, [pc, #336]	; 12184 <error@@Base+0xd24>
   12030:	ldr	r2, [pc, #336]	; 12188 <error@@Base+0xd28>
   12034:	ldr	r1, [pc, #336]	; 1218c <error@@Base+0xd2c>
   12038:	add	r3, pc, r3
   1203c:	add	r2, pc, r2
   12040:	add	r1, pc, r1
   12044:	ldr	r8, [pc, #324]	; 12190 <error@@Base+0xd30>
   12048:	mov	r7, #0
   1204c:	add	r8, pc, r8
   12050:	mov	r5, r0
   12054:	bl	10b08 <fprintf@plt>
   12058:	ldr	r1, [pc, #308]	; 12194 <error@@Base+0xd34>
   1205c:	ldr	r2, [r4]
   12060:	add	r1, pc, r1
   12064:	mov	r0, r5
   12068:	bl	10b08 <fprintf@plt>
   1206c:	ldr	r1, [pc, #292]	; 12198 <error@@Base+0xd38>
   12070:	ldr	r2, [r4, #4]
   12074:	add	r1, pc, r1
   12078:	mov	r0, r5
   1207c:	bl	10b08 <fprintf@plt>
   12080:	mov	r1, r4
   12084:	mov	r0, r5
   12088:	bl	1194c <error@@Base+0x4ec>
   1208c:	ldr	r0, [pc, #264]	; 1219c <error@@Base+0xd3c>
   12090:	mov	r1, #1
   12094:	mov	r6, r1
   12098:	mov	r3, r5
   1209c:	mov	r2, #12
   120a0:	add	r0, pc, r0
   120a4:	bl	10a84 <fwrite@plt>
   120a8:	add	r1, r4, #8
   120ac:	mov	r0, r5
   120b0:	mov	r3, r8
   120b4:	mov	r2, #50	; 0x32
   120b8:	str	r6, [sp, #4]
   120bc:	str	r7, [sp]
   120c0:	bl	11a28 <error@@Base+0x5c8>
   120c4:	ldr	r3, [pc, #212]	; 121a0 <error@@Base+0xd40>
   120c8:	add	r1, r4, #416	; 0x1a0
   120cc:	mov	r0, r5
   120d0:	add	r3, pc, r3
   120d4:	mov	r2, #50	; 0x32
   120d8:	str	r6, [sp, #4]
   120dc:	str	r7, [sp]
   120e0:	bl	11a28 <error@@Base+0x5c8>
   120e4:	ldr	r3, [pc, #184]	; 121a4 <error@@Base+0xd44>
   120e8:	str	r6, [sp, #4]
   120ec:	add	r3, pc, r3
   120f0:	str	r6, [sp]
   120f4:	add	r1, r4, #824	; 0x338
   120f8:	mov	r0, r5
   120fc:	mov	r2, #10
   12100:	bl	11a28 <error@@Base+0x5c8>
   12104:	ldr	r3, [r4]
   12108:	cmp	r3, r7
   1210c:	ble	12170 <error@@Base+0xd10>
   12110:	ldr	r3, [pc, #144]	; 121a8 <error@@Base+0xd48>
   12114:	str	r7, [sp, #4]
   12118:	add	r3, pc, r3
   1211c:	str	r7, [sp]
   12120:	mov	r2, #8
   12124:	add	r1, r4, #920	; 0x398
   12128:	mov	r0, r5
   1212c:	bl	11a28 <error@@Base+0x5c8>
   12130:	ldr	r3, [r4, #8]
   12134:	cmp	r3, r7
   12138:	ble	1214c <error@@Base+0xcec>
   1213c:	mov	r2, r8
   12140:	add	r1, r4, #992	; 0x3e0
   12144:	mov	r0, r5
   12148:	bl	11b74 <error@@Base+0x714>
   1214c:	ldr	r3, [r4, #416]	; 0x1a0
   12150:	cmp	r3, #0
   12154:	ble	12170 <error@@Base+0xd10>
   12158:	ldr	r2, [pc, #76]	; 121ac <error@@Base+0xd4c>
   1215c:	add	r1, r4, #9024	; 0x2340
   12160:	add	r1, r1, #24
   12164:	add	r2, pc, r2
   12168:	mov	r0, r5
   1216c:	bl	11b74 <error@@Base+0x714>
   12170:	mov	r0, r5
   12174:	add	sp, sp, #8
   12178:	pop	{r4, r5, r6, r7, r8, lr}
   1217c:	b	11304 <__assert_fail@plt+0x778>
   12180:	andeq	r1, r0, r4, ror r8
   12184:	andeq	r4, r0, r0, asr #25
   12188:	andeq	r1, r0, ip, lsl #16
   1218c:	andeq	r1, r0, r0, asr r8
   12190:	andeq	r1, r0, r4, lsl #17
   12194:	andeq	r1, r0, r8, lsr r8
   12198:	andeq	r1, r0, r4, lsr r8
   1219c:	andeq	r1, r0, r0, lsr #16
   121a0:	andeq	r1, r0, ip, lsl #16
   121a4:	andeq	r1, r0, r0, lsl #16
   121a8:	andeq	r1, r0, ip, ror #15
   121ac:	andeq	r1, r0, r8, ror r7
   121b0:	cmp	r0, #0
   121b4:	bxeq	lr
   121b8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   121bc:	mov	r8, #0
   121c0:	ldr	r5, [pc, #248]	; 122c0 <error@@Base+0xe60>
   121c4:	ldr	lr, [pc, #248]	; 122c4 <error@@Base+0xe64>
   121c8:	ldr	r6, [pc, #248]	; 122c8 <error@@Base+0xe68>
   121cc:	ldr	r4, [pc, #248]	; 122cc <error@@Base+0xe6c>
   121d0:	ldr	r9, [pc, #248]	; 122d0 <error@@Base+0xe70>
   121d4:	ldr	r7, [pc, #248]	; 122d4 <error@@Base+0xe74>
   121d8:	add	r5, pc, r5
   121dc:	add	lr, pc, lr
   121e0:	add	r6, pc, r6
   121e4:	add	r4, pc, r4
   121e8:	ldr	r0, [r0, #4]
   121ec:	cmp	r0, #0
   121f0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   121f4:	ldr	ip, [r0, #12]
   121f8:	mov	r2, r9
   121fc:	mov	r1, r8
   12200:	mov	sl, r7
   12204:	ldr	r3, [pc, #200]	; 122d4 <error@@Base+0xe74>
   12208:	b	12214 <error@@Base+0xdb4>
   1220c:	add	r2, r2, r2, lsl #1
   12210:	ldr	r2, [lr, r2, lsl #2]
   12214:	cmp	ip, r2
   12218:	add	r3, r1, r3, lsr #1
   1221c:	subcc	sl, r3, #1
   12220:	bcc	1223c <error@@Base+0xddc>
   12224:	add	r2, r3, r3, lsl #1
   12228:	add	r1, r3, #1
   1222c:	add	r3, r5, r2, lsl #2
   12230:	ldr	r2, [r3, #4]
   12234:	cmp	ip, r2
   12238:	bls	122b0 <error@@Base+0xe50>
   1223c:	sub	r3, sl, r1
   12240:	cmp	r1, sl
   12244:	add	r2, r1, r3, lsr #1
   12248:	bls	1220c <error@@Base+0xdac>
   1224c:	mov	r2, r9
   12250:	mov	r1, r8
   12254:	mov	sl, r7
   12258:	mov	r3, r7
   1225c:	b	12278 <error@@Base+0xe18>
   12260:	sub	r3, sl, r1
   12264:	cmp	r1, sl
   12268:	add	r2, r1, r3, lsr #1
   1226c:	pophi	{r4, r5, r6, r7, r8, r9, sl, pc}
   12270:	add	r2, r2, r2, lsl #1
   12274:	ldr	r2, [r4, r2, lsl #2]
   12278:	cmp	ip, r2
   1227c:	add	r3, r1, r3, lsr #1
   12280:	subcc	sl, r3, #1
   12284:	bcc	12260 <error@@Base+0xe00>
   12288:	add	r2, r3, r3, lsl #1
   1228c:	add	r1, r3, #1
   12290:	add	r3, r6, r2, lsl #2
   12294:	ldr	r2, [r3, #4]
   12298:	cmp	ip, r2
   1229c:	bhi	12260 <error@@Base+0xe00>
   122a0:	ldr	r3, [r3, #8]
   122a4:	cmp	r3, #6
   122a8:	beq	121e8 <error@@Base+0xd88>
   122ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   122b0:	ldr	r3, [r3, #8]
   122b4:	cmp	r3, #4
   122b8:	beq	121e8 <error@@Base+0xd88>
   122bc:	b	1224c <error@@Base+0xdec>
   122c0:	andeq	r1, r0, r4, lsr r7
   122c4:	andeq	r1, r0, r0, lsr r7
   122c8:	andeq	r1, r0, ip, lsr #14
   122cc:	andeq	r1, r0, r8, lsr #14
   122d0:	andeq	r2, r0, r6, rrx
   122d4:	andeq	r0, r0, r4, asr #8
   122d8:	ldr	r3, [r1]
   122dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122e0:	sub	sp, sp, #60	; 0x3c
   122e4:	cmp	r3, #0
   122e8:	str	r3, [sp, #16]
   122ec:	str	r3, [sp, #44]	; 0x2c
   122f0:	beq	12514 <error@@Base+0x10b4>
   122f4:	ldr	r3, [pc, #2056]	; 12b04 <error@@Base+0x16a4>
   122f8:	ldr	r7, [pc, #2056]	; 12b08 <error@@Base+0x16a8>
   122fc:	add	r3, pc, r3
   12300:	str	r3, [sp, #24]
   12304:	ldr	r8, [pc, #2048]	; 12b0c <error@@Base+0x16ac>
   12308:	ldr	r3, [pc, #2048]	; 12b10 <error@@Base+0x16b0>
   1230c:	ldr	sl, [pc, #2048]	; 12b14 <error@@Base+0x16b4>
   12310:	ldr	r9, [pc, #2048]	; 12b18 <error@@Base+0x16b8>
   12314:	add	r3, pc, r3
   12318:	add	r7, pc, r7
   1231c:	add	r8, pc, r8
   12320:	add	sl, pc, sl
   12324:	str	r3, [sp, #28]
   12328:	add	r9, pc, r9
   1232c:	add	r3, sp, #40	; 0x28
   12330:	str	r0, [sp, #36]	; 0x24
   12334:	str	r3, [sp, #20]
   12338:	str	r9, [sp, #32]
   1233c:	add	r4, sp, #24
   12340:	ldr	fp, [sp, #20]
   12344:	ldm	r4, {r4, r5, r6}
   12348:	mov	r9, #0
   1234c:	mov	r3, #17
   12350:	str	r3, [sp, #8]
   12354:	mov	r0, fp
   12358:	bl	121b0 <error@@Base+0xd50>
   1235c:	subs	fp, r0, #0
   12360:	beq	126b0 <error@@Base+0x1250>
   12364:	ldr	r0, [pc, #1968]	; 12b1c <error@@Base+0x16bc>
   12368:	ldr	ip, [fp, #12]
   1236c:	ldr	r2, [pc, #1964]	; 12b20 <error@@Base+0x16c0>
   12370:	mov	r1, r9
   12374:	mov	r3, r0
   12378:	b	1238c <error@@Base+0xf2c>
   1237c:	sub	r3, r0, r1
   12380:	add	r2, r1, r3, lsr #1
   12384:	add	r2, r2, r2, lsl #1
   12388:	ldr	r2, [r7, r2, lsl #2]
   1238c:	cmp	ip, r2
   12390:	add	r3, r1, r3, lsr #1
   12394:	subcc	r0, r3, #1
   12398:	bcc	123b4 <error@@Base+0xf54>
   1239c:	add	r2, r3, r3, lsl #1
   123a0:	add	r2, r4, r2, lsl #2
   123a4:	ldr	r1, [r2, #4]
   123a8:	cmp	ip, r1
   123ac:	bls	12594 <error@@Base+0x1134>
   123b0:	add	r1, r3, #1
   123b4:	cmp	r1, r0
   123b8:	bls	1237c <error@@Base+0xf1c>
   123bc:	mov	r3, #0
   123c0:	str	r9, [sp, #4]
   123c4:	str	r3, [sp]
   123c8:	mov	r0, fp
   123cc:	bl	121b0 <error@@Base+0xd50>
   123d0:	cmp	r0, #0
   123d4:	beq	125bc <error@@Base+0x115c>
   123d8:	ldr	ip, [pc, #1852]	; 12b1c <error@@Base+0x16bc>
   123dc:	ldr	lr, [r0, #12]
   123e0:	ldr	r2, [pc, #1848]	; 12b20 <error@@Base+0x16c0>
   123e4:	mov	r1, r9
   123e8:	mov	r3, ip
   123ec:	b	12400 <error@@Base+0xfa0>
   123f0:	sub	r3, ip, r1
   123f4:	add	r2, r1, r3, lsr #1
   123f8:	add	r2, r2, r2, lsl #1
   123fc:	ldr	r2, [sl, r2, lsl #2]
   12400:	cmp	lr, r2
   12404:	add	r3, r1, r3, lsr #1
   12408:	subcc	ip, r3, #1
   1240c:	bcc	12428 <error@@Base+0xfc8>
   12410:	add	r2, r3, r3, lsl #1
   12414:	add	r2, r6, r2, lsl #2
   12418:	ldr	r1, [r2, #4]
   1241c:	cmp	lr, r1
   12420:	bls	125cc <error@@Base+0x116c>
   12424:	add	r1, r3, #1
   12428:	cmp	ip, r1
   1242c:	bcs	123f0 <error@@Base+0xf90>
   12430:	mov	r1, r9
   12434:	str	r1, [sp, #12]
   12438:	bl	121b0 <error@@Base+0xd50>
   1243c:	ldr	r1, [sp, #12]
   12440:	cmp	r0, #0
   12444:	beq	1251c <error@@Base+0x10bc>
   12448:	ldr	ip, [pc, #1740]	; 12b1c <error@@Base+0x16bc>
   1244c:	ldr	lr, [r0, #12]
   12450:	ldr	r2, [pc, #1736]	; 12b20 <error@@Base+0x16c0>
   12454:	mov	r0, r9
   12458:	mov	r3, ip
   1245c:	b	12470 <error@@Base+0x1010>
   12460:	sub	r3, ip, r0
   12464:	add	r2, r0, r3, lsr #1
   12468:	add	r2, r2, r2, lsl #1
   1246c:	ldr	r2, [r8, r2, lsl #2]
   12470:	cmp	lr, r2
   12474:	add	r3, r0, r3, lsr #1
   12478:	subcc	ip, r3, #1
   1247c:	bcc	12498 <error@@Base+0x1038>
   12480:	add	r2, r3, r3, lsl #1
   12484:	add	r2, r5, r2, lsl #2
   12488:	ldr	r0, [r2, #4]
   1248c:	cmp	lr, r0
   12490:	bls	125c4 <error@@Base+0x1164>
   12494:	add	r0, r3, #1
   12498:	cmp	r0, ip
   1249c:	bls	12460 <error@@Base+0x1000>
   124a0:	mov	r3, r9
   124a4:	ldr	r2, [sp, #4]
   124a8:	cmp	r1, #2
   124ac:	movne	r2, #0
   124b0:	andeq	r2, r2, #1
   124b4:	cmp	r2, #0
   124b8:	movne	r3, #1
   124bc:	strne	r3, [sp, #8]
   124c0:	beq	12520 <error@@Base+0x10c0>
   124c4:	ldr	r3, [fp, #4]
   124c8:	cmp	r3, #0
   124cc:	bne	12354 <error@@Base+0xef4>
   124d0:	ldr	r3, [sp, #16]
   124d4:	ldr	r0, [r3, #12]
   124d8:	bl	10a24 <utf8proc_get_property@plt>
   124dc:	ldrh	r3, [r0]
   124e0:	sub	r3, r3, #1
   124e4:	uxth	r3, r3
   124e8:	cmp	r3, #28
   124ec:	bhi	12500 <error@@Base+0x10a0>
   124f0:	mov	r0, #1
   124f4:	ldr	r2, [pc, #1576]	; 12b24 <error@@Base+0x16c4>
   124f8:	ands	r3, r2, r0, lsl r3
   124fc:	bne	12974 <error@@Base+0x1514>
   12500:	ldr	r3, [fp, #4]
   12504:	cmp	r3, #0
   12508:	str	r3, [sp, #16]
   1250c:	str	r3, [sp, #44]	; 0x2c
   12510:	bne	1233c <error@@Base+0xedc>
   12514:	add	sp, sp, #60	; 0x3c
   12518:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1251c:	mov	r3, #18
   12520:	ldr	ip, [sp]
   12524:	ldr	r0, [sp, #4]
   12528:	sub	r2, ip, #2
   1252c:	cmp	r2, #1
   12530:	orrls	r0, r0, #1
   12534:	cmp	r0, #0
   12538:	bne	12750 <error@@Base+0x12f0>
   1253c:	sub	r2, r1, #1
   12540:	cmp	r2, #2
   12544:	bls	12750 <error@@Base+0x12f0>
   12548:	sub	lr, ip, #8
   1254c:	cmp	lr, #1
   12550:	bls	126c0 <error@@Base+0x1260>
   12554:	ldr	r2, [sp, #8]
   12558:	sub	r2, r2, #8
   1255c:	cmp	r2, #1
   12560:	bls	126f4 <error@@Base+0x1294>
   12564:	ldr	r2, [sp]
   12568:	sub	r0, r1, #10
   1256c:	sub	r2, r2, #8
   12570:	clz	r0, r0
   12574:	clz	r2, r2
   12578:	lsr	r0, r0, #5
   1257c:	lsr	r2, r2, #5
   12580:	tst	r2, r0
   12584:	beq	125ec <error@@Base+0x118c>
   12588:	mov	r3, #8
   1258c:	str	r3, [sp, #8]
   12590:	b	124c4 <error@@Base+0x1064>
   12594:	ldr	r3, [r2, #8]
   12598:	mov	r0, fp
   1259c:	str	r3, [sp]
   125a0:	sub	r3, r3, #1
   125a4:	clz	r3, r3
   125a8:	lsr	r3, r3, #5
   125ac:	str	r3, [sp, #4]
   125b0:	bl	121b0 <error@@Base+0xd50>
   125b4:	cmp	r0, #0
   125b8:	bne	123d8 <error@@Base+0xf78>
   125bc:	mov	r1, #18
   125c0:	b	12434 <error@@Base+0xfd4>
   125c4:	ldr	r3, [r2, #8]
   125c8:	b	124a4 <error@@Base+0x1044>
   125cc:	ldr	r1, [r2, #8]
   125d0:	str	r1, [sp, #12]
   125d4:	bl	121b0 <error@@Base+0xd50>
   125d8:	ldr	r1, [sp, #12]
   125dc:	cmp	r0, #0
   125e0:	moveq	r3, #18
   125e4:	bne	12448 <error@@Base+0xfe8>
   125e8:	b	124a4 <error@@Base+0x1044>
   125ec:	cmp	r1, #11
   125f0:	cmpeq	r3, #8
   125f4:	moveq	ip, #1
   125f8:	movne	ip, #0
   125fc:	tst	r2, ip
   12600:	bne	12588 <error@@Base+0x1128>
   12604:	ldr	r2, [sp]
   12608:	ldr	ip, [sp, #8]
   1260c:	cmp	ip, #8
   12610:	cmpeq	r2, #11
   12614:	moveq	r2, #1
   12618:	movne	r2, #0
   1261c:	cmp	r1, #8
   12620:	movne	r2, #0
   12624:	andeq	r2, r2, #1
   12628:	cmp	r2, #0
   1262c:	bne	12858 <error@@Base+0x13f8>
   12630:	ldr	r2, [sp]
   12634:	sub	ip, r2, #15
   12638:	sub	r2, r1, #15
   1263c:	clz	ip, ip
   12640:	clz	r2, r2
   12644:	lsr	ip, ip, #5
   12648:	lsr	r2, r2, #5
   1264c:	str	r2, [sp, #12]
   12650:	ands	r2, ip, r2
   12654:	str	r2, [sp, #4]
   12658:	bne	12724 <error@@Base+0x12c4>
   1265c:	cmp	lr, #1
   12660:	bls	12900 <error@@Base+0x14a0>
   12664:	ldr	r2, [sp]
   12668:	cmp	r2, #15
   1266c:	beq	12880 <error@@Base+0x1420>
   12670:	ldr	r2, [sp, #8]
   12674:	cmp	r2, #15
   12678:	beq	12a5c <error@@Base+0x15fc>
   1267c:	ldr	r3, [sp]
   12680:	sub	r2, r3, #7
   12684:	sub	r3, r1, #7
   12688:	clz	r2, r2
   1268c:	clz	r3, r3
   12690:	lsr	r2, r2, #5
   12694:	lsr	r3, r3, #5
   12698:	tst	r3, r2
   1269c:	str	r2, [sp, #4]
   126a0:	beq	12958 <error@@Base+0x14f8>
   126a4:	mov	r3, #7
   126a8:	str	r3, [sp, #8]
   126ac:	b	124c4 <error@@Base+0x1064>
   126b0:	mov	r3, #18
   126b4:	str	r9, [sp, #4]
   126b8:	str	r3, [sp]
   126bc:	b	123c8 <error@@Base+0xf68>
   126c0:	sub	r2, r1, #8
   126c4:	cmp	r2, #1
   126c8:	bls	126e8 <error@@Base+0x1288>
   126cc:	sub	r2, r1, #12
   126d0:	cmp	r1, #10
   126d4:	cmpne	r2, #1
   126d8:	bhi	12554 <error@@Base+0x10f4>
   126dc:	sub	r2, r3, #8
   126e0:	cmp	r2, #1
   126e4:	bhi	12554 <error@@Base+0x10f4>
   126e8:	ldr	r3, [sp]
   126ec:	str	r3, [sp, #8]
   126f0:	b	124c4 <error@@Base+0x1064>
   126f4:	ldr	r2, [sp]
   126f8:	cmp	r2, #13
   126fc:	beq	12864 <error@@Base+0x1404>
   12700:	sub	r2, r2, #10
   12704:	bics	r2, r2, #2
   12708:	bne	12564 <error@@Base+0x1104>
   1270c:	sub	r2, r1, #8
   12710:	cmp	r2, #1
   12714:	bhi	12564 <error@@Base+0x1104>
   12718:	ldr	r3, [sp]
   1271c:	str	r3, [sp, #8]
   12720:	b	124c4 <error@@Base+0x1064>
   12724:	mov	r3, #15
   12728:	str	r3, [sp, #8]
   1272c:	b	124c4 <error@@Base+0x1064>
   12730:	ldr	r2, [sp, #12]
   12734:	sub	r1, r1, #8
   12738:	cmp	r1, #1
   1273c:	orrls	r2, r2, #1
   12740:	cmp	r2, #0
   12744:	bne	126e8 <error@@Base+0x1288>
   12748:	cmp	r3, #0
   1274c:	bne	126e8 <error@@Base+0x1288>
   12750:	cmp	fp, #0
   12754:	beq	12514 <error@@Base+0x10b4>
   12758:	ldr	r5, [pc, #968]	; 12b28 <error@@Base+0x16c8>
   1275c:	ldr	lr, [pc, #968]	; 12b2c <error@@Base+0x16cc>
   12760:	ldr	r6, [pc, #968]	; 12b30 <error@@Base+0x16d0>
   12764:	ldr	r4, [pc, #968]	; 12b34 <error@@Base+0x16d4>
   12768:	add	r5, pc, r5
   1276c:	add	lr, pc, lr
   12770:	add	r6, pc, r6
   12774:	add	r4, pc, r4
   12778:	ldr	r9, [fp, #4]
   1277c:	cmp	r9, #0
   12780:	beq	124d0 <error@@Base+0x1070>
   12784:	ldr	ip, [pc, #912]	; 12b1c <error@@Base+0x16bc>
   12788:	ldr	r0, [r9, #12]
   1278c:	ldr	r2, [pc, #908]	; 12b20 <error@@Base+0x16c0>
   12790:	mov	r1, #0
   12794:	mov	r3, ip
   12798:	b	127ac <error@@Base+0x134c>
   1279c:	sub	r3, ip, r1
   127a0:	add	r2, r1, r3, lsr #1
   127a4:	add	r2, r2, r2, lsl #1
   127a8:	ldr	r2, [lr, r2, lsl #2]
   127ac:	cmp	r0, r2
   127b0:	add	r3, r1, r3, lsr #1
   127b4:	subcc	ip, r3, #1
   127b8:	bcc	127d4 <error@@Base+0x1374>
   127bc:	add	r2, r3, r3, lsl #1
   127c0:	add	r2, r5, r2, lsl #2
   127c4:	ldr	r1, [r2, #4]
   127c8:	cmp	r0, r1
   127cc:	bls	12834 <error@@Base+0x13d4>
   127d0:	add	r1, r3, #1
   127d4:	cmp	r1, ip
   127d8:	bls	1279c <error@@Base+0x133c>
   127dc:	ldr	r2, [pc, #828]	; 12b20 <error@@Base+0x16c0>
   127e0:	mov	r1, #0
   127e4:	ldr	ip, [pc, #816]	; 12b1c <error@@Base+0x16bc>
   127e8:	ldr	r3, [pc, #812]	; 12b1c <error@@Base+0x16bc>
   127ec:	b	12800 <error@@Base+0x13a0>
   127f0:	sub	r3, ip, r1
   127f4:	add	r2, r1, r3, lsr #1
   127f8:	add	r2, r2, r2, lsl #1
   127fc:	ldr	r2, [r4, r2, lsl #2]
   12800:	cmp	r0, r2
   12804:	add	r3, r1, r3, lsr #1
   12808:	subcc	ip, r3, #1
   1280c:	bcc	12828 <error@@Base+0x13c8>
   12810:	add	r2, r3, r3, lsl #1
   12814:	add	r2, r6, r2, lsl #2
   12818:	ldr	r1, [r2, #4]
   1281c:	cmp	r0, r1
   12820:	bls	12848 <error@@Base+0x13e8>
   12824:	add	r1, r3, #1
   12828:	cmp	r1, ip
   1282c:	bls	127f0 <error@@Base+0x1390>
   12830:	b	124d0 <error@@Base+0x1070>
   12834:	ldr	r3, [r2, #8]
   12838:	cmp	r3, #4
   1283c:	bne	127dc <error@@Base+0x137c>
   12840:	mov	fp, r9
   12844:	b	12778 <error@@Base+0x1318>
   12848:	ldr	r3, [r2, #8]
   1284c:	cmp	r3, #6
   12850:	beq	12840 <error@@Base+0x13e0>
   12854:	b	124d0 <error@@Base+0x1070>
   12858:	mov	r3, #11
   1285c:	str	r3, [sp, #8]
   12860:	b	124c4 <error@@Base+0x1064>
   12864:	sub	r2, r1, #8
   12868:	cmp	r2, #1
   1286c:	bls	126e8 <error@@Base+0x1288>
   12870:	sub	r0, r1, #10
   12874:	clz	r0, r0
   12878:	lsr	r0, r0, #5
   1287c:	b	12604 <error@@Base+0x11a4>
   12880:	sub	r2, r1, #8
   12884:	cmp	r2, #1
   12888:	bls	12724 <error@@Base+0x12c4>
   1288c:	ldr	r2, [sp, #8]
   12890:	cmp	r2, #15
   12894:	beq	12a38 <error@@Base+0x15d8>
   12898:	bic	r2, r1, #2
   1289c:	cmp	r2, #12
   128a0:	orreq	r0, r0, #1
   128a4:	cmp	r0, #0
   128a8:	beq	128b4 <error@@Base+0x1454>
   128ac:	cmp	r3, #15
   128b0:	beq	12724 <error@@Base+0x12c4>
   128b4:	ldr	r2, [sp]
   128b8:	sub	r3, r1, #7
   128bc:	cmp	r2, #7
   128c0:	cmpeq	r1, #7
   128c4:	clz	r3, r3
   128c8:	lsr	r3, r3, #5
   128cc:	beq	126a4 <error@@Base+0x1244>
   128d0:	cmp	r1, #16
   128d4:	beq	126e8 <error@@Base+0x1288>
   128d8:	ldr	r2, [sp]
   128dc:	cmp	r2, #16
   128e0:	beq	12730 <error@@Base+0x12d0>
   128e4:	ldr	r3, [sp]
   128e8:	cmp	r3, #5
   128ec:	cmpeq	r1, #5
   128f0:	bne	12750 <error@@Base+0x12f0>
   128f4:	mov	r3, #5
   128f8:	str	r3, [sp, #8]
   128fc:	b	124c4 <error@@Base+0x1064>
   12900:	cmp	r1, #15
   12904:	beq	126e8 <error@@Base+0x1288>
   12908:	ldr	r2, [sp, #8]
   1290c:	cmp	r2, #15
   12910:	beq	12a38 <error@@Base+0x15d8>
   12914:	ldr	r2, [sp]
   12918:	cmp	r2, #15
   1291c:	beq	12898 <error@@Base+0x1438>
   12920:	ldr	r3, [sp]
   12924:	sub	r2, r3, #7
   12928:	sub	r3, r1, #7
   1292c:	clz	r2, r2
   12930:	clz	r3, r3
   12934:	lsr	r2, r2, #5
   12938:	lsr	r3, r3, #5
   1293c:	tst	r2, r3
   12940:	str	r2, [sp, #4]
   12944:	bne	126a4 <error@@Base+0x1244>
   12948:	cmp	lr, #1
   1294c:	orrls	ip, ip, #1
   12950:	cmp	ip, #0
   12954:	bne	128d0 <error@@Base+0x1470>
   12958:	ldr	r2, [sp]
   1295c:	ldr	r0, [sp, #4]
   12960:	cmp	r2, #16
   12964:	orreq	r0, r0, #1
   12968:	cmp	r0, #0
   1296c:	beq	128e4 <error@@Base+0x1484>
   12970:	b	128d0 <error@@Base+0x1470>
   12974:	ldr	r4, [fp, #4]
   12978:	ldr	r3, [sp, #16]
   1297c:	cmp	r4, r3
   12980:	beq	12a80 <error@@Base+0x1620>
   12984:	ldr	r5, [sp, #16]
   12988:	mov	r6, #0
   1298c:	ldr	r9, [sp, #20]
   12990:	b	1299c <error@@Base+0x153c>
   12994:	cmp	r5, #0
   12998:	beq	12ab8 <error@@Base+0x1658>
   1299c:	mov	r1, r9
   129a0:	ldr	r0, [r5, #12]
   129a4:	bl	10a3c <utf8proc_encode_char@plt>
   129a8:	cmp	r0, #0
   129ac:	beq	12a90 <error@@Base+0x1630>
   129b0:	ldr	r5, [r5, #4]
   129b4:	add	r6, r6, r0
   129b8:	cmp	r4, r5
   129bc:	bne	12994 <error@@Base+0x1534>
   129c0:	add	r0, r6, #1
   129c4:	bl	10aa8 <malloc@plt>
   129c8:	mov	r6, #0
   129cc:	ldr	r9, [sp, #16]
   129d0:	mov	r4, r0
   129d4:	b	129e0 <error@@Base+0x1580>
   129d8:	cmp	r9, #0
   129dc:	beq	12ae0 <error@@Base+0x1680>
   129e0:	add	r1, r4, r6
   129e4:	ldr	r0, [r9, #12]
   129e8:	bl	10a3c <utf8proc_encode_char@plt>
   129ec:	ldr	r9, [r9, #4]
   129f0:	cmp	r9, r5
   129f4:	add	r6, r6, r0
   129f8:	bne	129d8 <error@@Base+0x1578>
   129fc:	mov	r3, #0
   12a00:	strb	r3, [r4, r6]
   12a04:	mov	r1, #12
   12a08:	mov	r0, #1
   12a0c:	bl	114b8 <error@@Base+0x58>
   12a10:	mov	r5, r0
   12a14:	mov	r0, r4
   12a18:	bl	10b2c <utf8proc_NFC@plt>
   12a1c:	mov	r1, r5
   12a20:	str	r0, [r5, #8]
   12a24:	ldr	r0, [sp, #36]	; 0x24
   12a28:	bl	13298 <error@@Base+0x1e38>
   12a2c:	mov	r0, r4
   12a30:	bl	10a18 <free@plt>
   12a34:	b	12500 <error@@Base+0x10a0>
   12a38:	ldr	r2, [sp]
   12a3c:	sub	r2, r2, #10
   12a40:	bics	r2, r2, #2
   12a44:	bne	12914 <error@@Base+0x14b4>
   12a48:	cmp	r1, #15
   12a4c:	bne	12914 <error@@Base+0x14b4>
   12a50:	ldr	r3, [sp]
   12a54:	str	r3, [sp, #8]
   12a58:	b	124c4 <error@@Base+0x1064>
   12a5c:	ldr	r2, [sp]
   12a60:	cmp	r2, #14
   12a64:	bne	12a38 <error@@Base+0x15d8>
   12a68:	cmp	r1, #15
   12a6c:	beq	126e8 <error@@Base+0x1288>
   12a70:	sub	r3, r1, #7
   12a74:	clz	r3, r3
   12a78:	lsr	r3, r3, #5
   12a7c:	b	12948 <error@@Base+0x14e8>
   12a80:	bl	10aa8 <malloc@plt>
   12a84:	mov	r6, #0
   12a88:	mov	r4, r0
   12a8c:	b	129fc <error@@Base+0x159c>
   12a90:	ldr	r3, [pc, #160]	; 12b38 <error@@Base+0x16d8>
   12a94:	ldr	r1, [pc, #160]	; 12b3c <error@@Base+0x16dc>
   12a98:	add	r3, pc, r3
   12a9c:	ldr	r0, [pc, #156]	; 12b40 <error@@Base+0x16e0>
   12aa0:	sub	r3, r3, #3248	; 0xcb0
   12aa4:	mov	r2, #253	; 0xfd
   12aa8:	sub	r3, r3, #4
   12aac:	add	r1, pc, r1
   12ab0:	add	r0, pc, r0
   12ab4:	bl	10b8c <__assert_fail@plt>
   12ab8:	ldr	r3, [pc, #132]	; 12b44 <error@@Base+0x16e4>
   12abc:	ldr	r1, [pc, #132]	; 12b48 <error@@Base+0x16e8>
   12ac0:	add	r3, pc, r3
   12ac4:	ldr	r0, [pc, #128]	; 12b4c <error@@Base+0x16ec>
   12ac8:	sub	r3, r3, #3248	; 0xcb0
   12acc:	mov	r2, #249	; 0xf9
   12ad0:	sub	r3, r3, #4
   12ad4:	add	r1, pc, r1
   12ad8:	add	r0, pc, r0
   12adc:	bl	10b8c <__assert_fail@plt>
   12ae0:	ldr	r3, [pc, #104]	; 12b50 <error@@Base+0x16f0>
   12ae4:	ldr	r1, [pc, #104]	; 12b54 <error@@Base+0x16f4>
   12ae8:	ldr	r0, [pc, #104]	; 12b58 <error@@Base+0x16f8>
   12aec:	add	r3, pc, r3
   12af0:	ldr	r2, [pc, #100]	; 12b5c <error@@Base+0x16fc>
   12af4:	sub	r3, r3, #3232	; 0xca0
   12af8:	add	r1, pc, r1
   12afc:	add	r0, pc, r0
   12b00:	bl	10b8c <__assert_fail@plt>
   12b04:	andeq	r1, r0, r0, lsl r6
   12b08:	strdeq	r1, [r0], -r4
   12b0c:	strdeq	r1, [r0], -r0
   12b10:	strdeq	r1, [r0], -r8
   12b14:	andeq	r1, r0, ip, ror #11
   12b18:	andeq	r1, r0, r4, ror #11
   12b1c:	andeq	r0, r0, r4, asr #8
   12b20:	andeq	r2, r0, r6, rrx
   12b24:	strdne	r0, [r0], -pc	; <UNPREDICTABLE>
   12b28:	andeq	r1, r0, r4, lsr #3
   12b2c:	andeq	r1, r0, r0, lsr #3
   12b30:	muleq	r0, ip, r1
   12b34:	muleq	r0, r8, r1
   12b38:	andeq	r4, r0, r4, ror #28
   12b3c:	andeq	r4, r0, r4, asr #3
   12b40:	ldrdeq	r4, [r0], -r8
   12b44:	andeq	r4, r0, ip, lsr lr
   12b48:	muleq	r0, ip, r1
   12b4c:	andeq	r4, r0, r0, lsr #3
   12b50:	andeq	r4, r0, r0, lsl lr
   12b54:	andeq	r4, r0, r8, ror r1
   12b58:	andeq	r4, r0, ip, ror r1
   12b5c:	andeq	r0, r0, sp, lsl #2
   12b60:	push	{r4, lr}
   12b64:	mov	r4, r0
   12b68:	ldr	r0, [r0, #8]
   12b6c:	bl	10a18 <free@plt>
   12b70:	mov	r0, r4
   12b74:	pop	{r4, lr}
   12b78:	b	10a18 <free@plt>
   12b7c:	push	{r4, r5, r6, lr}
   12b80:	mov	r4, r0
   12b84:	uxtb	r6, r1
   12b88:	mov	r0, #1
   12b8c:	mov	r1, #16
   12b90:	mov	r5, r2
   12b94:	bl	114b8 <error@@Base+0x58>
   12b98:	strb	r6, [r0, #8]
   12b9c:	str	r5, [r0, #12]
   12ba0:	mov	r1, r0
   12ba4:	mov	r0, r4
   12ba8:	pop	{r4, r5, r6, lr}
   12bac:	b	13298 <error@@Base+0x1e38>
   12bb0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12bb4:	sub	sp, sp, #132	; 0x84
   12bb8:	ldrb	r3, [r2]
   12bbc:	ldr	r6, [pc, #936]	; 12f6c <error@@Base+0x1b0c>
   12bc0:	str	r2, [sp, #16]
   12bc4:	adds	r3, r3, #0
   12bc8:	movne	r3, #1
   12bcc:	cmp	r1, #0
   12bd0:	movne	r3, #0
   12bd4:	cmp	r3, #0
   12bd8:	str	r0, [sp, #4]
   12bdc:	add	r6, pc, r6
   12be0:	bne	12f58 <error@@Base+0x1af8>
   12be4:	ldr	r3, [sp, #4]
   12be8:	mov	r0, r1
   12bec:	ldr	r1, [pc, #892]	; 12f70 <error@@Base+0x1b10>
   12bf0:	ldr	r3, [r3, #4]
   12bf4:	add	r1, pc, r1
   12bf8:	str	r3, [sp, #20]
   12bfc:	bl	11570 <error@@Base+0x110>
   12c00:	ldr	r3, [sp, #16]
   12c04:	ldrb	r3, [r3]
   12c08:	cmp	r3, #0
   12c0c:	mov	r7, r0
   12c10:	bne	12e98 <error@@Base+0x1a38>
   12c14:	ldr	r2, [sp, #16]
   12c18:	mov	r0, r7
   12c1c:	ldr	r3, [r2, #4]
   12c20:	ldrb	fp, [r2, #1]
   12c24:	mov	r4, r3
   12c28:	bl	10b80 <getc@plt>
   12c2c:	cmp	r4, #0
   12c30:	mov	r2, r4
   12c34:	moveq	r2, #94	; 0x5e
   12c38:	str	r2, [sp, #12]
   12c3c:	cmn	r0, #1
   12c40:	beq	12d08 <error@@Base+0x18a8>
   12c44:	ldr	r3, [pc, #808]	; 12f74 <error@@Base+0x1b14>
   12c48:	ldr	r3, [r6, r3]
   12c4c:	str	r3, [sp]
   12c50:	ldrsb	r4, [r3, r0]
   12c54:	cmp	r4, #0
   12c58:	ble	12f40 <error@@Base+0x1ae0>
   12c5c:	add	r3, sp, #25
   12c60:	mov	r6, #0
   12c64:	str	r3, [sp, #8]
   12c68:	add	sl, sp, #28
   12c6c:	add	r9, sp, #24
   12c70:	mov	r8, #4
   12c74:	b	12c88 <error@@Base+0x1828>
   12c78:	ldr	r3, [sp]
   12c7c:	ldrsb	r4, [r3, r0]
   12c80:	cmp	r4, #0
   12c84:	ble	12f40 <error@@Base+0x1ae0>
   12c88:	cmp	r4, #1
   12c8c:	strb	r0, [sp, #24]
   12c90:	beq	12cb4 <error@@Base+0x1854>
   12c94:	sub	r5, r4, #1
   12c98:	mov	r2, r5
   12c9c:	mov	r3, r7
   12ca0:	mov	r1, #1
   12ca4:	ldr	r0, [sp, #8]
   12ca8:	bl	10a90 <fread@plt>
   12cac:	cmp	r5, r0
   12cb0:	bne	12f4c <error@@Base+0x1aec>
   12cb4:	mov	r2, sl
   12cb8:	mov	r1, r8
   12cbc:	mov	r0, r9
   12cc0:	bl	10a9c <utf8proc_iterate@plt>
   12cc4:	cmp	r0, r4
   12cc8:	bne	12f38 <error@@Base+0x1ad8>
   12ccc:	cmp	fp, #0
   12cd0:	ldr	r2, [sp, #28]
   12cd4:	beq	12ce8 <error@@Base+0x1888>
   12cd8:	ldr	r3, [sp, #12]
   12cdc:	cmp	r2, r3
   12ce0:	moveq	r6, #1
   12ce4:	beq	12cf8 <error@@Base+0x1898>
   12ce8:	mov	r1, r6
   12cec:	ldr	r0, [sp, #4]
   12cf0:	bl	12b7c <error@@Base+0x171c>
   12cf4:	mov	r6, #0
   12cf8:	mov	r0, r7
   12cfc:	bl	10b80 <getc@plt>
   12d00:	cmn	r0, #1
   12d04:	bne	12c78 <error@@Base+0x1818>
   12d08:	mov	r0, r7
   12d0c:	bl	11304 <__assert_fail@plt+0x778>
   12d10:	ldr	r3, [sp, #16]
   12d14:	ldrb	r3, [r3, #9]
   12d18:	cmp	r3, #0
   12d1c:	beq	12e50 <error@@Base+0x19f0>
   12d20:	ldr	r3, [sp, #20]
   12d24:	cmp	r3, #0
   12d28:	ldreq	r3, [sp, #4]
   12d2c:	ldrne	r6, [r3, #4]
   12d30:	ldreq	r6, [r3]
   12d34:	cmp	r6, #0
   12d38:	beq	12e50 <error@@Base+0x19f0>
   12d3c:	mov	r5, r6
   12d40:	mov	r7, #32
   12d44:	b	12d6c <error@@Base+0x190c>
   12d48:	cmp	r4, #11
   12d4c:	bcs	12d98 <error@@Base+0x1938>
   12d50:	cmp	r4, #9
   12d54:	beq	12d98 <error@@Base+0x1938>
   12d58:	cmp	r4, #10
   12d5c:	bne	12d88 <error@@Base+0x1928>
   12d60:	ldr	r5, [r5, #4]
   12d64:	cmp	r5, #0
   12d68:	beq	12da8 <error@@Base+0x1948>
   12d6c:	ldr	r4, [r5, #12]
   12d70:	mov	r0, r4
   12d74:	bl	10a24 <utf8proc_get_property@plt>
   12d78:	cmp	r4, #13
   12d7c:	bls	12d48 <error@@Base+0x18e8>
   12d80:	cmp	r4, #160	; 0xa0
   12d84:	beq	12d98 <error@@Base+0x1938>
   12d88:	ldrsh	r3, [r0]
   12d8c:	sub	r3, r3, #23
   12d90:	cmp	r3, #2
   12d94:	bhi	12d60 <error@@Base+0x1900>
   12d98:	str	r7, [r5, #12]
   12d9c:	ldr	r5, [r5, #4]
   12da0:	cmp	r5, #0
   12da4:	bne	12d6c <error@@Base+0x190c>
   12da8:	ldr	r7, [sp, #4]
   12dac:	b	12e0c <error@@Base+0x19ac>
   12db0:	cmp	r3, #10
   12db4:	movne	r2, #0
   12db8:	andeq	r2, r2, #1
   12dbc:	cmp	r2, #0
   12dc0:	beq	12e40 <error@@Base+0x19e0>
   12dc4:	cmp	r4, #0
   12dc8:	moveq	r3, #0
   12dcc:	andne	r3, r5, #1
   12dd0:	cmp	r3, #0
   12dd4:	beq	12df0 <error@@Base+0x1990>
   12dd8:	ldr	r3, [r4, #12]
   12ddc:	cmp	r3, #32
   12de0:	ldrbeq	r3, [r4, #8]
   12de4:	ldrbeq	r2, [r6, #8]
   12de8:	orreq	r3, r3, r2
   12dec:	strbeq	r3, [r4, #8]
   12df0:	mov	r1, r6
   12df4:	mov	r0, r7
   12df8:	bl	1337c <error@@Base+0x1f1c>
   12dfc:	mov	r0, r6
   12e00:	bl	10a18 <free@plt>
   12e04:	subs	r6, r4, #0
   12e08:	beq	12e50 <error@@Base+0x19f0>
   12e0c:	ldr	r3, [r6, #12]
   12e10:	ldr	r4, [r6, #4]
   12e14:	cmp	r3, #32
   12e18:	eor	r2, r5, #1
   12e1c:	bne	12db0 <error@@Base+0x1950>
   12e20:	cmp	r4, #0
   12e24:	orreq	r2, r2, #1
   12e28:	cmp	r2, #0
   12e2c:	bne	12dc4 <error@@Base+0x1964>
   12e30:	ldr	r2, [r4, #12]
   12e34:	cmp	r2, #10
   12e38:	cmpne	r2, #32
   12e3c:	beq	12dc4 <error@@Base+0x1964>
   12e40:	subs	r5, r3, #10
   12e44:	movne	r5, #1
   12e48:	subs	r6, r4, #0
   12e4c:	bne	12e0c <error@@Base+0x19ac>
   12e50:	ldr	r3, [sp, #16]
   12e54:	ldrb	r3, [r3, #10]
   12e58:	cmp	r3, #0
   12e5c:	beq	12e90 <error@@Base+0x1a30>
   12e60:	ldr	r3, [sp, #20]
   12e64:	cmp	r3, #0
   12e68:	ldreq	r3, [sp, #4]
   12e6c:	ldrne	r4, [r3, #4]
   12e70:	ldreq	r4, [r3]
   12e74:	b	12e88 <error@@Base+0x1a28>
   12e78:	ldr	r0, [r4, #12]
   12e7c:	bl	10a6c <utf8proc_tolower@plt>
   12e80:	str	r0, [r4, #12]
   12e84:	ldr	r4, [r4, #4]
   12e88:	cmp	r4, #0
   12e8c:	bne	12e78 <error@@Base+0x1a18>
   12e90:	add	sp, sp, #132	; 0x84
   12e94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e98:	add	r5, sp, #28
   12e9c:	mov	r0, r5
   12ea0:	mov	r2, r7
   12ea4:	mov	r1, #99	; 0x63
   12ea8:	bl	10a30 <fgets@plt>
   12eac:	cmp	r0, #0
   12eb0:	beq	12f20 <error@@Base+0x1ac0>
   12eb4:	ldr	r1, [pc, #188]	; 12f78 <error@@Base+0x1b18>
   12eb8:	mov	r2, #51	; 0x33
   12ebc:	add	r1, pc, r1
   12ec0:	mov	r0, r5
   12ec4:	bl	10b68 <strncmp@plt>
   12ec8:	subs	r4, r0, #0
   12ecc:	bne	12f20 <error@@Base+0x1ac0>
   12ed0:	ldr	r9, [pc, #164]	; 12f7c <error@@Base+0x1b1c>
   12ed4:	mov	r8, #99	; 0x63
   12ed8:	add	r9, pc, r9
   12edc:	mov	r2, r7
   12ee0:	mov	r1, r8
   12ee4:	mov	r0, r5
   12ee8:	bl	10a30 <fgets@plt>
   12eec:	cmp	r0, #0
   12ef0:	beq	12f18 <error@@Base+0x1ab8>
   12ef4:	mov	r1, r9
   12ef8:	mov	r0, r5
   12efc:	bl	109e8 <strcmp@plt>
   12f00:	cmp	r0, #0
   12f04:	bne	12edc <error@@Base+0x1a7c>
   12f08:	add	r4, r4, #1
   12f0c:	sxth	r4, r4
   12f10:	cmp	r4, #1
   12f14:	ble	12edc <error@@Base+0x1a7c>
   12f18:	mov	r3, #1
   12f1c:	b	12f2c <error@@Base+0x1acc>
   12f20:	mov	r0, r7
   12f24:	bl	10a54 <rewind@plt>
   12f28:	mov	r3, #0
   12f2c:	ldr	r2, [sp, #16]
   12f30:	strb	r3, [r2, #11]
   12f34:	b	12c14 <error@@Base+0x17b4>
   12f38:	bl	10b50 <utf8proc_errmsg@plt>
   12f3c:	bl	11460 <error@@Base>
   12f40:	ldr	r0, [pc, #56]	; 12f80 <error@@Base+0x1b20>
   12f44:	add	r0, pc, r0
   12f48:	bl	11460 <error@@Base>
   12f4c:	ldr	r0, [pc, #48]	; 12f84 <error@@Base+0x1b24>
   12f50:	add	r0, pc, r0
   12f54:	bl	11460 <error@@Base>
   12f58:	ldr	r1, [pc, #40]	; 12f88 <error@@Base+0x1b28>
   12f5c:	ldr	r0, [pc, #40]	; 12f8c <error@@Base+0x1b2c>
   12f60:	add	r1, pc, r1
   12f64:	add	r0, pc, r0
   12f68:	bl	11510 <error@@Base+0xb0>
   12f6c:	andeq	r4, r1, ip, lsl r4
   12f70:	andeq	r0, r0, r0, asr ip
   12f74:	andeq	r0, r0, ip, asr #1
   12f78:	strdeq	r3, [r0], -ip
   12f7c:	andeq	r3, r0, r8, lsl lr
   12f80:	andeq	r3, r0, r4, ror #27
   12f84:	strdeq	r3, [r0], -r0
   12f88:	andeq	r3, r0, ip, lsr sp
   12f8c:	andeq	r3, r0, r4, asr #26
   12f90:	push	{r4, lr}
   12f94:	bl	10a3c <utf8proc_encode_char@plt>
   12f98:	cmp	r0, #0
   12f9c:	ble	12fa8 <error@@Base+0x1b48>
   12fa0:	sxtb	r0, r0
   12fa4:	pop	{r4, pc}
   12fa8:	ldr	r0, [pc, #4]	; 12fb4 <error@@Base+0x1b54>
   12fac:	add	r0, pc, r0
   12fb0:	bl	11460 <error@@Base>
   12fb4:	andeq	r3, r0, ip, lsr #27
   12fb8:	push	{r4, r5, r6, r7, r8, lr}
   12fbc:	uxtb	r4, r0
   12fc0:	cmp	r4, #0
   12fc4:	mov	r6, r1
   12fc8:	mov	r8, r2
   12fcc:	uxtb	r5, r3
   12fd0:	moveq	r7, r4
   12fd4:	bne	1304c <error@@Base+0x1bec>
   12fd8:	cmp	r6, #10
   12fdc:	beq	1302c <error@@Base+0x1bcc>
   12fe0:	mov	r0, r6
   12fe4:	bl	10a24 <utf8proc_get_property@plt>
   12fe8:	cmp	r6, #32
   12fec:	beq	13064 <error@@Base+0x1c04>
   12ff0:	ldrh	r3, [r0]
   12ff4:	cmp	r3, #29
   12ff8:	bhi	1300c <error@@Base+0x1bac>
   12ffc:	mov	r1, #1
   13000:	ldr	r2, [pc, #192]	; 130c8 <error@@Base+0x1c68>
   13004:	ands	r3, r2, r1, lsl r3
   13008:	bne	13064 <error@@Base+0x1c04>
   1300c:	cmp	r6, #255	; 0xff
   13010:	bls	130b0 <error@@Base+0x1c50>
   13014:	ldr	r1, [pc, #176]	; 130cc <error@@Base+0x1c6c>
   13018:	mov	r2, r6
   1301c:	add	r0, r8, r4
   13020:	add	r1, pc, r1
   13024:	pop	{r4, r5, r6, r7, r8, lr}
   13028:	b	10b44 <sprintf@plt>
   1302c:	ldr	r1, [pc, #156]	; 130d0 <error@@Base+0x1c70>
   13030:	cmp	r5, #0
   13034:	add	r1, pc, r1
   13038:	add	r0, r8, r4
   1303c:	ldreq	r1, [pc, #144]	; 130d4 <error@@Base+0x1c74>
   13040:	addeq	r1, pc, r1
   13044:	pop	{r4, r5, r6, r7, r8, lr}
   13048:	b	10b44 <sprintf@plt>
   1304c:	mov	r1, r2
   13050:	mov	r0, #94	; 0x5e
   13054:	bl	12f90 <error@@Base+0x1b30>
   13058:	mov	r4, r0
   1305c:	sxth	r7, r0
   13060:	b	12fd8 <error@@Base+0x1b78>
   13064:	mov	r0, r6
   13068:	bl	10af0 <utf8proc_category@plt>
   1306c:	sub	r0, r0, #6
   13070:	cmp	r0, #2
   13074:	bhi	13090 <error@@Base+0x1c30>
   13078:	add	r1, r8, r4
   1307c:	ldr	r0, [pc, #84]	; 130d8 <error@@Base+0x1c78>
   13080:	bl	12f90 <error@@Base+0x1b30>
   13084:	add	r7, r0, r7
   13088:	sxth	r7, r7
   1308c:	mov	r4, r7
   13090:	add	r1, r8, r4
   13094:	mov	r0, r6
   13098:	bl	12f90 <error@@Base+0x1b30>
   1309c:	mov	r3, #0
   130a0:	add	r0, r0, r7
   130a4:	sxth	r0, r0
   130a8:	strb	r3, [r8, r0]
   130ac:	pop	{r4, r5, r6, r7, r8, pc}
   130b0:	ldr	r1, [pc, #36]	; 130dc <error@@Base+0x1c7c>
   130b4:	mov	r2, r6
   130b8:	add	r0, r8, r4
   130bc:	add	r1, pc, r1
   130c0:	pop	{r4, r5, r6, r7, r8, lr}
   130c4:	b	10b44 <sprintf@plt>
   130c8:	ldrshtcs	pc, [pc], #-254	; <UNPREDICTABLE>
   130cc:	andeq	r3, r0, r0, ror #26
   130d0:	andeq	r3, r0, ip, lsr sp
   130d4:	andeq	r0, r0, ip, ror r8
   130d8:	andeq	r2, r0, ip, asr #11
   130dc:			; <UNDEFINED> instruction: 0x00003cbc
   130e0:	push	{r4, r5, r6, r7, lr}
   130e4:	mov	r7, r0
   130e8:	mov	r0, r1
   130ec:	ldr	r1, [pc, #184]	; 131ac <error@@Base+0x1d4c>
   130f0:	sub	sp, sp, #20
   130f4:	add	r1, pc, r1
   130f8:	mov	r5, r2
   130fc:	bl	11570 <error@@Base+0x110>
   13100:	cmp	r5, #0
   13104:	mov	r6, r0
   13108:	beq	1315c <error@@Base+0x1cfc>
   1310c:	mov	r3, r0
   13110:	ldr	r4, [pc, #152]	; 131b0 <error@@Base+0x1d50>
   13114:	ldr	r0, [pc, #152]	; 131b4 <error@@Base+0x1d54>
   13118:	add	r4, pc, r4
   1311c:	mov	r2, #55	; 0x37
   13120:	mov	r1, #1
   13124:	add	r0, pc, r0
   13128:	bl	10a84 <fwrite@plt>
   1312c:	mov	r3, r6
   13130:	mov	r2, #55	; 0x37
   13134:	mov	r1, #1
   13138:	mov	r0, r4
   1313c:	bl	10a84 <fwrite@plt>
   13140:	mov	r0, r6
   13144:	blx	r5
   13148:	mov	r3, r6
   1314c:	mov	r0, r4
   13150:	mov	r2, #55	; 0x37
   13154:	mov	r1, #1
   13158:	bl	10a84 <fwrite@plt>
   1315c:	ldr	r4, [r7]
   13160:	cmp	r4, #0
   13164:	addne	r5, sp, #4
   13168:	movne	r7, #0
   1316c:	beq	1319c <error@@Base+0x1d3c>
   13170:	ldr	r1, [r4, #12]
   13174:	ldrb	r0, [r4, #8]
   13178:	mov	r3, r7
   1317c:	mov	r2, r5
   13180:	bl	12fb8 <error@@Base+0x1b58>
   13184:	mov	r1, r6
   13188:	mov	r0, r5
   1318c:	bl	10b5c <fputs@plt>
   13190:	ldr	r4, [r4, #4]
   13194:	cmp	r4, #0
   13198:	bne	13170 <error@@Base+0x1d10>
   1319c:	mov	r0, r6
   131a0:	bl	11304 <__assert_fail@plt+0x778>
   131a4:	add	sp, sp, #20
   131a8:	pop	{r4, r5, r6, r7, pc}
   131ac:	muleq	r0, r8, r7
   131b0:	ldrdeq	r3, [r0], -r8
   131b4:	muleq	r0, r4, fp
   131b8:	push	{r4, r5, r6, r7, r8, r9, lr}
   131bc:	mov	r5, #0
   131c0:	ldrb	r3, [r1]
   131c4:	sub	sp, sp, #12
   131c8:	cmp	r3, r5
   131cc:	str	r5, [sp, #4]
   131d0:	movne	r4, r1
   131d4:	movne	r6, r0
   131d8:	addne	r8, sp, #4
   131dc:	mvnne	r7, #0
   131e0:	bne	131fc <error@@Base+0x1d9c>
   131e4:	b	13228 <error@@Base+0x1dc8>
   131e8:	ldr	r2, [sp, #4]
   131ec:	bl	12b7c <error@@Base+0x171c>
   131f0:	ldrb	r3, [r4, r9]!
   131f4:	cmp	r3, #0
   131f8:	beq	13228 <error@@Base+0x1dc8>
   131fc:	mov	r1, r7
   13200:	mov	r2, r8
   13204:	mov	r0, r4
   13208:	bl	10a9c <utf8proc_iterate@plt>
   1320c:	mov	r1, r5
   13210:	subs	r9, r0, #0
   13214:	mov	r0, r6
   13218:	bgt	131e8 <error@@Base+0x1d88>
   1321c:	mov	r0, #0
   13220:	add	sp, sp, #12
   13224:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13228:	mov	r0, #1
   1322c:	add	sp, sp, #12
   13230:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13234:	mov	r3, #0
   13238:	str	r3, [r0, #4]
   1323c:	str	r3, [r0]
   13240:	str	r3, [r0, #8]
   13244:	str	r3, [r0, #12]
   13248:	bx	lr
   1324c:	ldr	r3, [r0]
   13250:	mov	r2, #0
   13254:	cmp	r3, r2
   13258:	push	{r4, lr}
   1325c:	mov	r4, r0
   13260:	stm	r1, {r2, r3}
   13264:	str	r1, [r0]
   13268:	streq	r1, [r0, #4]
   1326c:	ldr	r0, [r0, #8]
   13270:	strne	r1, [r3]
   13274:	cmp	r0, #0
   13278:	beq	13288 <error@@Base+0x1e28>
   1327c:	bl	10a18 <free@plt>
   13280:	mov	r3, #0
   13284:	str	r3, [r4, #8]
   13288:	ldr	r3, [r4, #12]
   1328c:	add	r3, r3, #1
   13290:	str	r3, [r4, #12]
   13294:	pop	{r4, pc}
   13298:	ldr	r3, [r0, #4]
   1329c:	mov	r2, #0
   132a0:	cmp	r3, r2
   132a4:	push	{r4, lr}
   132a8:	mov	r4, r0
   132ac:	str	r3, [r1]
   132b0:	str	r2, [r1, #4]
   132b4:	streq	r1, [r0]
   132b8:	ldr	r0, [r0, #8]
   132bc:	strne	r1, [r3, #4]
   132c0:	cmp	r0, #0
   132c4:	str	r1, [r4, #4]
   132c8:	beq	132d8 <error@@Base+0x1e78>
   132cc:	bl	10a18 <free@plt>
   132d0:	mov	r3, #0
   132d4:	str	r3, [r4, #8]
   132d8:	ldr	r3, [r4, #12]
   132dc:	add	r3, r3, #1
   132e0:	str	r3, [r4, #12]
   132e4:	pop	{r4, pc}
   132e8:	ldr	r3, [r2]
   132ec:	push	{r4, lr}
   132f0:	cmp	r3, #0
   132f4:	str	r3, [r1]
   132f8:	str	r2, [r1, #4]
   132fc:	mov	r4, r0
   13300:	streq	r1, [r0]
   13304:	ldr	r0, [r0, #8]
   13308:	strne	r1, [r3, #4]
   1330c:	cmp	r0, #0
   13310:	str	r1, [r2]
   13314:	beq	13324 <error@@Base+0x1ec4>
   13318:	bl	10a18 <free@plt>
   1331c:	mov	r3, #0
   13320:	str	r3, [r4, #8]
   13324:	ldr	r3, [r4, #12]
   13328:	add	r3, r3, #1
   1332c:	str	r3, [r4, #12]
   13330:	pop	{r4, pc}
   13334:	ldr	r3, [r1, #4]
   13338:	push	{r4, lr}
   1333c:	cmp	r3, #0
   13340:	stm	r2, {r1, r3}
   13344:	mov	r4, r0
   13348:	str	r2, [r1, #4]
   1334c:	streq	r2, [r0, #4]
   13350:	ldr	r0, [r0, #8]
   13354:	strne	r2, [r3]
   13358:	cmp	r0, #0
   1335c:	beq	1336c <error@@Base+0x1f0c>
   13360:	bl	10a18 <free@plt>
   13364:	mov	r3, #0
   13368:	str	r3, [r4, #8]
   1336c:	ldr	r3, [r4, #12]
   13370:	add	r3, r3, #1
   13374:	str	r3, [r4, #12]
   13378:	pop	{r4, pc}
   1337c:	ldr	r3, [r1]
   13380:	ldr	r2, [r1, #4]
   13384:	cmp	r3, #0
   13388:	push	{r4, r5, r6, lr}
   1338c:	mov	r4, r0
   13390:	strne	r2, [r3, #4]
   13394:	ldrne	r2, [r1, #4]
   13398:	streq	r2, [r0]
   1339c:	cmp	r2, #0
   133a0:	streq	r3, [r0, #4]
   133a4:	ldr	r0, [r0, #8]
   133a8:	mov	r5, #0
   133ac:	strne	r3, [r2]
   133b0:	cmp	r0, r5
   133b4:	str	r5, [r1, #4]
   133b8:	str	r5, [r1]
   133bc:	beq	133c8 <error@@Base+0x1f68>
   133c0:	bl	10a18 <free@plt>
   133c4:	str	r5, [r4, #8]
   133c8:	ldr	r3, [r4, #12]
   133cc:	sub	r3, r3, #1
   133d0:	str	r3, [r4, #12]
   133d4:	pop	{r4, r5, r6, pc}
   133d8:	ldr	r3, [r0, #8]
   133dc:	cmp	r3, #0
   133e0:	bxne	lr
   133e4:	ldr	r3, [r0, #12]
   133e8:	cmp	r3, #0
   133ec:	bxeq	lr
   133f0:	push	{r4, lr}
   133f4:	mov	r1, #4
   133f8:	mov	r4, r0
   133fc:	mov	r0, r3
   13400:	bl	114b8 <error@@Base+0x58>
   13404:	ldr	r3, [r4]
   13408:	cmp	r3, #0
   1340c:	str	r0, [r4, #8]
   13410:	popeq	{r4, pc}
   13414:	sub	r0, r0, #4
   13418:	str	r3, [r0, #4]!
   1341c:	ldr	r3, [r3, #4]
   13420:	cmp	r3, #0
   13424:	bne	13418 <error@@Base+0x1fb8>
   13428:	pop	{r4, pc}
   1342c:	push	{r4, r5, r6, lr}
   13430:	ldr	r4, [r0]
   13434:	cmp	r4, #0
   13438:	popeq	{r4, r5, r6, pc}
   1343c:	mov	r5, r0
   13440:	mov	r6, r1
   13444:	mov	r1, r4
   13448:	mov	r0, r5
   1344c:	bl	1337c <error@@Base+0x1f1c>
   13450:	mov	r0, r4
   13454:	blx	r6
   13458:	ldr	r4, [r5]
   1345c:	cmp	r4, #0
   13460:	bne	13444 <error@@Base+0x1fe4>
   13464:	pop	{r4, r5, r6, pc}
   13468:	ldr	r2, [pc, #420]	; 13614 <error@@Base+0x21b4>
   1346c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13470:	sub	sp, sp, #28
   13474:	add	r2, pc, r2
   13478:	ldr	r9, [pc, #408]	; 13618 <error@@Base+0x21b8>
   1347c:	ldr	r8, [pc, #408]	; 1361c <error@@Base+0x21bc>
   13480:	str	r2, [sp, #16]
   13484:	ldr	r2, [pc, #404]	; 13620 <error@@Base+0x21c0>
   13488:	add	r9, pc, r9
   1348c:	add	r8, pc, r8
   13490:	add	r2, pc, r2
   13494:	lsl	r3, r1, #2
   13498:	str	r1, [sp, #12]
   1349c:	str	r2, [sp, #4]
   134a0:	str	r0, [sp, #8]
   134a4:	str	r3, [sp, #20]
   134a8:	ldr	r3, [sp, #16]
   134ac:	ldr	r2, [sp, #12]
   134b0:	ldr	r1, [r3]
   134b4:	ldr	r3, [sp, #8]
   134b8:	cmp	r3, r2
   134bc:	ldr	r7, [r1, r3, lsl #2]
   134c0:	bge	135f8 <error@@Base+0x2198>
   134c4:	ldr	r4, [sp, #8]
   134c8:	ldr	r5, [sp, #12]
   134cc:	lsl	r6, r5, #2
   134d0:	b	134d8 <error@@Base+0x2078>
   134d4:	ldr	r1, [r9]
   134d8:	ldr	r1, [r1, r6]
   134dc:	ldr	r3, [r9, #4]
   134e0:	mov	r0, r7
   134e4:	blx	r3
   134e8:	cmp	r0, #0
   134ec:	bge	13544 <error@@Base+0x20e4>
   134f0:	sub	r5, r5, #1
   134f4:	cmp	r5, r4
   134f8:	sub	r6, r6, #4
   134fc:	bgt	134d4 <error@@Base+0x2074>
   13500:	bne	13540 <error@@Base+0x20e0>
   13504:	ldr	r1, [r9]
   13508:	mov	fp, r5
   1350c:	add	r0, r1, fp, lsl #2
   13510:	ldr	r3, [sp, #8]
   13514:	sub	r1, fp, #1
   13518:	cmp	r3, r1
   1351c:	str	r7, [r0]
   13520:	blt	135dc <error@@Base+0x217c>
   13524:	ldr	r2, [sp, #12]
   13528:	add	r3, r5, #1
   1352c:	cmp	r3, r2
   13530:	str	r3, [sp, #8]
   13534:	blt	134a8 <error@@Base+0x2048>
   13538:	add	sp, sp, #28
   1353c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13540:	lsl	r6, r5, #2
   13544:	ldr	r3, [sp, #4]
   13548:	add	sl, r4, #1
   1354c:	cmp	sl, r5
   13550:	ldr	r1, [r3]
   13554:	add	r0, r1, r6
   13558:	ldr	r2, [r1, r6]
   1355c:	str	r2, [r1, r4, lsl #2]
   13560:	lsl	r4, r4, #2
   13564:	bge	135e8 <error@@Base+0x2188>
   13568:	add	fp, r4, #4
   1356c:	b	13584 <error@@Base+0x2124>
   13570:	add	sl, sl, #1
   13574:	cmp	sl, r5
   13578:	add	fp, fp, #4
   1357c:	beq	135c8 <error@@Base+0x2168>
   13580:	ldr	r1, [r8]
   13584:	ldr	r1, [r1, fp]
   13588:	ldr	r3, [r8, #4]
   1358c:	mov	r0, r7
   13590:	blx	r3
   13594:	cmp	r0, #0
   13598:	bgt	13570 <error@@Base+0x2110>
   1359c:	ldr	r1, [r8]
   135a0:	mov	r4, sl
   135a4:	add	r0, r1, r6
   135a8:	sub	r5, r5, #1
   135ac:	ldr	r2, [r1, fp]
   135b0:	cmp	r5, sl
   135b4:	str	r2, [r0]
   135b8:	bgt	134cc <error@@Base+0x206c>
   135bc:	mov	fp, r5
   135c0:	mov	r5, r4
   135c4:	b	1350c <error@@Base+0x20ac>
   135c8:	ldr	r0, [r8]
   135cc:	mov	fp, sl
   135d0:	add	r0, r0, r6
   135d4:	mov	r5, fp
   135d8:	b	13510 <error@@Base+0x20b0>
   135dc:	mov	r0, r3
   135e0:	bl	13468 <error@@Base+0x2008>
   135e4:	b	13524 <error@@Base+0x20c4>
   135e8:	beq	1360c <error@@Base+0x21ac>
   135ec:	lsl	fp, sl, #2
   135f0:	mov	r4, sl
   135f4:	b	135a8 <error@@Base+0x2148>
   135f8:	ldr	r3, [sp, #20]
   135fc:	mov	fp, r2
   13600:	add	r0, r1, r3
   13604:	ldr	r5, [sp, #8]
   13608:	b	13510 <error@@Base+0x20b0>
   1360c:	mov	fp, sl
   13610:	b	135d4 <error@@Base+0x2174>
   13614:	strdeq	r3, [r1], -r0
   13618:	ldrdeq	r3, [r1], -ip
   1361c:	ldrdeq	r3, [r1], -r8
   13620:	ldrdeq	r3, [r1], -r4
   13624:	cmp	r0, #1
   13628:	mov	ip, r1
   1362c:	bxle	lr
   13630:	ldr	r3, [pc, #20]	; 1364c <error@@Base+0x21ec>
   13634:	sub	r1, r0, #1
   13638:	add	r3, pc, r3
   1363c:	mov	r0, #0
   13640:	str	ip, [r3]
   13644:	str	r2, [r3, #4]
   13648:	b	13468 <error@@Base+0x2008>
   1364c:	andeq	r3, r1, ip, lsr #22
   13650:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13654:	mov	r7, r0
   13658:	ldr	r6, [pc, #72]	; 136a8 <error@@Base+0x2248>
   1365c:	ldr	r5, [pc, #72]	; 136ac <error@@Base+0x224c>
   13660:	add	r6, pc, r6
   13664:	add	r5, pc, r5
   13668:	sub	r6, r6, r5
   1366c:	mov	r8, r1
   13670:	mov	r9, r2
   13674:	bl	109bc <calloc@plt-0x20>
   13678:	asrs	r6, r6, #2
   1367c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13680:	mov	r4, #0
   13684:	add	r4, r4, #1
   13688:	ldr	r3, [r5], #4
   1368c:	mov	r2, r9
   13690:	mov	r1, r8
   13694:	mov	r0, r7
   13698:	blx	r3
   1369c:	cmp	r6, r4
   136a0:	bne	13684 <error@@Base+0x2224>
   136a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   136a8:	muleq	r1, r8, r8
   136ac:	muleq	r1, r0, r8
   136b0:	bx	lr

Disassembly of section .fini:

000136b4 <.fini>:
   136b4:	push	{r3, lr}
   136b8:	pop	{r3, pc}
