
../repos/prog2/0.6:     file format elf32-littlearm


Disassembly of section .init:

000105ec <.init>:
   105ec:	push	{r3, lr}
   105f0:	bl	106b4 <_start@@Base+0x3c>
   105f4:	pop	{r3, pc}

Disassembly of section .plt:

000105f8 <printf@plt-0x14>:
   105f8:	push	{lr}		; (str lr, [sp, #-4]!)
   105fc:	ldr	lr, [pc, #4]	; 10608 <printf@plt-0x4>
   10600:	add	lr, pc, lr
   10604:	ldr	pc, [lr, #8]!
   10608:	strdeq	r0, [r1], -r8

0001060c <printf@plt>:
   1060c:	add	ip, pc, #0, 12
   10610:	add	ip, ip, #16, 20	; 0x10000
   10614:	ldr	pc, [ip, #2552]!	; 0x9f8

00010618 <realloc@plt>:
   10618:	add	ip, pc, #0, 12
   1061c:	add	ip, ip, #16, 20	; 0x10000
   10620:	ldr	pc, [ip, #2544]!	; 0x9f0

00010624 <strcpy@plt>:
   10624:	add	ip, pc, #0, 12
   10628:	add	ip, ip, #16, 20	; 0x10000
   1062c:	ldr	pc, [ip, #2536]!	; 0x9e8

00010630 <malloc@plt>:
   10630:	add	ip, pc, #0, 12
   10634:	add	ip, ip, #16, 20	; 0x10000
   10638:	ldr	pc, [ip, #2528]!	; 0x9e0

0001063c <__libc_start_main@plt>:
   1063c:	add	ip, pc, #0, 12
   10640:	add	ip, ip, #16, 20	; 0x10000
   10644:	ldr	pc, [ip, #2520]!	; 0x9d8

00010648 <__gmon_start__@plt>:
   10648:	add	ip, pc, #0, 12
   1064c:	add	ip, ip, #16, 20	; 0x10000
   10650:	ldr	pc, [ip, #2512]!	; 0x9d0

00010654 <strlen@plt>:
   10654:	add	ip, pc, #0, 12
   10658:	add	ip, ip, #16, 20	; 0x10000
   1065c:	ldr	pc, [ip, #2504]!	; 0x9c8

00010660 <__isoc99_scanf@plt>:
   10660:	add	ip, pc, #0, 12
   10664:	add	ip, ip, #16, 20	; 0x10000
   10668:	ldr	pc, [ip, #2496]!	; 0x9c0

0001066c <abort@plt>:
   1066c:	add	ip, pc, #0, 12
   10670:	add	ip, ip, #16, 20	; 0x10000
   10674:	ldr	pc, [ip, #2488]!	; 0x9b8

Disassembly of section .text:

00010678 <_start@@Base>:
   10678:	mov	fp, #0
   1067c:	mov	lr, #0
   10680:	pop	{r1}		; (ldr r1, [sp], #4)
   10684:	mov	r2, sp
   10688:	push	{r2}		; (str r2, [sp, #-4]!)
   1068c:	push	{r0}		; (str r0, [sp, #-4]!)
   10690:	ldr	ip, [pc, #16]	; 106a8 <_start@@Base+0x30>
   10694:	push	{ip}		; (str ip, [sp, #-4]!)
   10698:	ldr	r0, [pc, #12]	; 106ac <_start@@Base+0x34>
   1069c:	ldr	r3, [pc, #12]	; 106b0 <_start@@Base+0x38>
   106a0:	bl	1063c <__libc_start_main@plt>
   106a4:	bl	1066c <abort@plt>
   106a8:	andeq	r0, r1, r8, lsr #19
   106ac:	andeq	r0, r1, r8, ror #14
   106b0:	andeq	r0, r1, r8, asr #18
   106b4:	ldr	r3, [pc, #20]	; 106d0 <_start@@Base+0x58>
   106b8:	ldr	r2, [pc, #20]	; 106d4 <_start@@Base+0x5c>
   106bc:	add	r3, pc, r3
   106c0:	ldr	r2, [r3, r2]
   106c4:	cmp	r2, #0
   106c8:	bxeq	lr
   106cc:	b	10648 <__gmon_start__@plt>
   106d0:	andeq	r0, r1, ip, lsr r9
   106d4:	andeq	r0, r0, r0, lsr r0
   106d8:	ldr	r0, [pc, #24]	; 106f8 <_start@@Base+0x80>
   106dc:	ldr	r3, [pc, #24]	; 106fc <_start@@Base+0x84>
   106e0:	cmp	r3, r0
   106e4:	bxeq	lr
   106e8:	ldr	r3, [pc, #16]	; 10700 <_start@@Base+0x88>
   106ec:	cmp	r3, #0
   106f0:	bxeq	lr
   106f4:	bx	r3
   106f8:	andeq	r1, r2, ip, lsr r0
   106fc:	andeq	r1, r2, ip, lsr r0
   10700:	andeq	r0, r0, r0
   10704:	ldr	r0, [pc, #36]	; 10730 <_start@@Base+0xb8>
   10708:	ldr	r1, [pc, #36]	; 10734 <_start@@Base+0xbc>
   1070c:	sub	r1, r1, r0
   10710:	asr	r1, r1, #2
   10714:	add	r1, r1, r1, lsr #31
   10718:	asrs	r1, r1, #1
   1071c:	bxeq	lr
   10720:	ldr	r3, [pc, #16]	; 10738 <_start@@Base+0xc0>
   10724:	cmp	r3, #0
   10728:	bxeq	lr
   1072c:	bx	r3
   10730:	andeq	r1, r2, ip, lsr r0
   10734:	andeq	r1, r2, ip, lsr r0
   10738:	andeq	r0, r0, r0
   1073c:	push	{r4, lr}
   10740:	ldr	r4, [pc, #24]	; 10760 <_start@@Base+0xe8>
   10744:	ldrb	r3, [r4]
   10748:	cmp	r3, #0
   1074c:	popne	{r4, pc}
   10750:	bl	106d8 <_start@@Base+0x60>
   10754:	mov	r3, #1
   10758:	strb	r3, [r4]
   1075c:	pop	{r4, pc}
   10760:	andeq	r1, r2, ip, lsr r0
   10764:	b	10704 <_start@@Base+0x8c>

00010768 <main@@Base>:
   10768:	str	r4, [sp, #-12]!
   1076c:	str	fp, [sp, #4]
   10770:	str	lr, [sp, #8]
   10774:	add	fp, sp, #8
   10778:	sub	sp, sp, #28
   1077c:	mov	r3, #0
   10780:	str	r3, [fp, #-24]	; 0xffffffe8
   10784:	mov	r3, #0
   10788:	str	r3, [fp, #-28]	; 0xffffffe4
   1078c:	mov	r3, #0
   10790:	str	r3, [fp, #-32]	; 0xffffffe0
   10794:	ldr	r3, [pc, #408]	; 10934 <main@@Base+0x1cc>
   10798:	add	r3, pc, r3
   1079c:	mov	r0, r3
   107a0:	bl	1060c <printf@plt>
   107a4:	mov	r0, #1
   107a8:	bl	10630 <malloc@plt>
   107ac:	mov	r3, r0
   107b0:	str	r3, [fp, #-16]
   107b4:	mov	r0, #1
   107b8:	bl	10630 <malloc@plt>
   107bc:	mov	r3, r0
   107c0:	str	r3, [fp, #-20]	; 0xffffffec
   107c4:	b	10890 <main@@Base+0x128>
   107c8:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   107cc:	cmp	r3, #32
   107d0:	beq	107e0 <main@@Base+0x78>
   107d4:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   107d8:	cmp	r3, #10
   107dc:	bne	1084c <main@@Base+0xe4>
   107e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   107e4:	bl	10654 <strlen@plt>
   107e8:	mov	r4, r0
   107ec:	ldr	r0, [fp, #-16]
   107f0:	bl	10654 <strlen@plt>
   107f4:	mov	r3, r0
   107f8:	cmp	r4, r3
   107fc:	bls	10828 <main@@Base+0xc0>
   10800:	ldr	r0, [fp, #-20]	; 0xffffffec
   10804:	bl	10654 <strlen@plt>
   10808:	mov	r3, r0
   1080c:	mov	r1, r3
   10810:	ldr	r0, [fp, #-16]
   10814:	bl	10618 <realloc@plt>
   10818:	str	r0, [fp, #-16]
   1081c:	ldr	r1, [fp, #-20]	; 0xffffffec
   10820:	ldr	r0, [fp, #-16]
   10824:	bl	10624 <strcpy@plt>
   10828:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1082c:	add	r3, r3, #1
   10830:	str	r3, [fp, #-24]	; 0xffffffe8
   10834:	mov	r3, #0
   10838:	str	r3, [fp, #-32]	; 0xffffffe0
   1083c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   10840:	cmp	r3, #10
   10844:	beq	108b8 <main@@Base+0x150>
   10848:	b	10890 <main@@Base+0x128>
   1084c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10850:	add	r3, r3, #1
   10854:	mov	r1, r3
   10858:	ldr	r0, [fp, #-20]	; 0xffffffec
   1085c:	bl	10618 <realloc@plt>
   10860:	str	r0, [fp, #-20]	; 0xffffffec
   10864:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10868:	ldr	r2, [fp, #-20]	; 0xffffffec
   1086c:	add	r3, r2, r3
   10870:	ldrb	r2, [fp, #-33]	; 0xffffffdf
   10874:	strb	r2, [r3]
   10878:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1087c:	add	r3, r3, #1
   10880:	str	r3, [fp, #-28]	; 0xffffffe4
   10884:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10888:	add	r3, r3, #1
   1088c:	str	r3, [fp, #-32]	; 0xffffffe0
   10890:	sub	r3, fp, #33	; 0x21
   10894:	mov	r1, r3
   10898:	ldr	r3, [pc, #152]	; 10938 <main@@Base+0x1d0>
   1089c:	add	r3, pc, r3
   108a0:	mov	r0, r3
   108a4:	bl	10660 <__isoc99_scanf@plt>
   108a8:	mov	r3, r0
   108ac:	cmp	r3, #1
   108b0:	beq	107c8 <main@@Base+0x60>
   108b4:	b	108bc <main@@Base+0x154>
   108b8:	nop	{0}
   108bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   108c0:	ldr	r3, [pc, #116]	; 1093c <main@@Base+0x1d4>
   108c4:	add	r3, pc, r3
   108c8:	mov	r0, r3
   108cc:	bl	1060c <printf@plt>
   108d0:	ldr	r1, [fp, #-16]
   108d4:	ldr	r3, [pc, #100]	; 10940 <main@@Base+0x1d8>
   108d8:	add	r3, pc, r3
   108dc:	mov	r0, r3
   108e0:	bl	1060c <printf@plt>
   108e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   108e8:	vmov	s15, r3
   108ec:	vcvt.f32.s32	s13, s15
   108f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   108f4:	vmov	s15, r3
   108f8:	vcvt.f32.s32	s14, s15
   108fc:	vdiv.f32	s15, s13, s14
   10900:	vcvt.f64.f32	d7, s15
   10904:	vmov	r2, r3, d7
   10908:	ldr	r1, [pc, #52]	; 10944 <main@@Base+0x1dc>
   1090c:	add	r1, pc, r1
   10910:	mov	r0, r1
   10914:	bl	1060c <printf@plt>
   10918:	mov	r3, #0
   1091c:	mov	r0, r3
   10920:	sub	sp, fp, #8
   10924:	ldr	r4, [sp]
   10928:	ldr	fp, [sp, #4]
   1092c:	add	sp, sp, #8
   10930:	pop	{pc}		; (ldr pc, [sp], #4)
   10934:	andeq	r0, r0, r8, lsl r2
   10938:	andeq	r0, r0, ip, lsl r1
   1093c:	strdeq	r0, [r0], -r8
   10940:	strdeq	r0, [r0], -ip
   10944:	ldrdeq	r0, [r0], -ip

00010948 <__libc_csu_init@@Base>:
   10948:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1094c:	mov	r7, r0
   10950:	ldr	r6, [pc, #72]	; 109a0 <__libc_csu_init@@Base+0x58>
   10954:	ldr	r5, [pc, #72]	; 109a4 <__libc_csu_init@@Base+0x5c>
   10958:	add	r6, pc, r6
   1095c:	add	r5, pc, r5
   10960:	sub	r6, r6, r5
   10964:	mov	r8, r1
   10968:	mov	r9, r2
   1096c:	bl	105ec <printf@plt-0x20>
   10970:	asrs	r6, r6, #2
   10974:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10978:	mov	r4, #0
   1097c:	add	r4, r4, #1
   10980:	ldr	r3, [r5], #4
   10984:	mov	r2, r9
   10988:	mov	r1, r8
   1098c:	mov	r0, r7
   10990:	blx	r3
   10994:	cmp	r6, r4
   10998:	bne	1097c <__libc_csu_init@@Base+0x34>
   1099c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   109a0:			; <UNDEFINED> instruction: 0x000105b4
   109a4:	andeq	r0, r1, ip, lsr #11

000109a8 <__libc_csu_fini@@Base>:
   109a8:	bx	lr

Disassembly of section .fini:

000109ac <.fini>:
   109ac:	push	{r3, lr}
   109b0:	pop	{r3, pc}
