
../repos/charybdis/tools/.libs/charybdis-mkpasswd:     file format elf32-littlearm


Disassembly of section .init:

00010678 <.init>:
   10678:	push	{r3, lr}
   1067c:	bl	107dc <sprintf@plt+0x48>
   10680:	pop	{r3, pc}

Disassembly of section .plt:

00010684 <open@plt-0x14>:
   10684:	push	{lr}		; (str lr, [sp, #-4]!)
   10688:	ldr	lr, [pc, #4]	; 10694 <open@plt-0x4>
   1068c:	add	lr, pc, lr
   10690:	ldr	pc, [lr, #8]!
   10694:	andeq	r1, r1, ip, ror #18

00010698 <open@plt>:
   10698:	add	ip, pc, #0, 12
   1069c:	add	ip, ip, #69632	; 0x11000
   106a0:	ldr	pc, [ip, #2412]!	; 0x96c

000106a4 <abort@plt>:
   106a4:	add	ip, pc, #0, 12
   106a8:	add	ip, ip, #69632	; 0x11000
   106ac:	ldr	pc, [ip, #2404]!	; 0x964

000106b0 <srand@plt>:
   106b0:	add	ip, pc, #0, 12
   106b4:	add	ip, ip, #69632	; 0x11000
   106b8:	ldr	pc, [ip, #2396]!	; 0x95c

000106bc <__libc_start_main@plt>:
   106bc:	add	ip, pc, #0, 12
   106c0:	add	ip, ip, #69632	; 0x11000
   106c4:	ldr	pc, [ip, #2388]!	; 0x954

000106c8 <__gmon_start__@plt>:
   106c8:	add	ip, pc, #0, 12
   106cc:	add	ip, ip, #69632	; 0x11000
   106d0:	ldr	pc, [ip, #2380]!	; 0x94c

000106d4 <getpass@plt>:
   106d4:	add	ip, pc, #0, 12
   106d8:	add	ip, ip, #69632	; 0x11000
   106dc:	ldr	pc, [ip, #2372]!	; 0x944

000106e0 <calloc@plt>:
   106e0:	add	ip, pc, #0, 12
   106e4:	add	ip, ip, #69632	; 0x11000
   106e8:	ldr	pc, [ip, #2364]!	; 0x93c

000106ec <free@plt>:
   106ec:	add	ip, pc, #0, 12
   106f0:	add	ip, ip, #69632	; 0x11000
   106f4:	ldr	pc, [ip, #2356]!	; 0x934

000106f8 <read@plt>:
   106f8:	add	ip, pc, #0, 12
   106fc:	add	ip, ip, #69632	; 0x11000
   10700:	ldr	pc, [ip, #2348]!	; 0x92c

00010704 <strlen@plt>:
   10704:	add	ip, pc, #0, 12
   10708:	add	ip, ip, #69632	; 0x11000
   1070c:	ldr	pc, [ip, #2340]!	; 0x924

00010710 <getopt@plt>:
   10710:	add	ip, pc, #0, 12
   10714:	add	ip, ip, #69632	; 0x11000
   10718:	ldr	pc, [ip, #2332]!	; 0x91c

0001071c <printf@plt>:
   1071c:	add	ip, pc, #0, 12
   10720:	add	ip, ip, #69632	; 0x11000
   10724:	ldr	pc, [ip, #2324]!	; 0x914

00010728 <atoi@plt>:
   10728:	add	ip, pc, #0, 12
   1072c:	add	ip, ip, #69632	; 0x11000
   10730:	ldr	pc, [ip, #2316]!	; 0x90c

00010734 <fwrite@plt>:
   10734:	add	ip, pc, #0, 12
   10738:	add	ip, ip, #69632	; 0x11000
   1073c:	ldr	pc, [ip, #2308]!	; 0x904

00010740 <time@plt>:
   10740:	add	ip, pc, #0, 12
   10744:	add	ip, ip, #69632	; 0x11000
   10748:	ldr	pc, [ip, #2300]!	; 0x8fc

0001074c <strdup@plt>:
   1074c:	add	ip, pc, #0, 12
   10750:	add	ip, ip, #69632	; 0x11000
   10754:	ldr	pc, [ip, #2292]!	; 0x8f4

00010758 <rb_crypt@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #69632	; 0x11000
   10760:	ldr	pc, [ip, #2284]!	; 0x8ec

00010764 <puts@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #69632	; 0x11000
   1076c:	ldr	pc, [ip, #2276]!	; 0x8e4

00010770 <rand@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #69632	; 0x11000
   10778:	ldr	pc, [ip, #2268]!	; 0x8dc

0001077c <strcmp@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #69632	; 0x11000
   10784:	ldr	pc, [ip, #2260]!	; 0x8d4

00010788 <exit@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #69632	; 0x11000
   10790:	ldr	pc, [ip, #2252]!	; 0x8cc

00010794 <sprintf@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #69632	; 0x11000
   1079c:	ldr	pc, [ip, #2244]!	; 0x8c4

Disassembly of section .text:

000107a0 <.text>:
   107a0:	mov	fp, #0
   107a4:	mov	lr, #0
   107a8:	pop	{r1}		; (ldr r1, [sp], #4)
   107ac:	mov	r2, sp
   107b0:	push	{r2}		; (str r2, [sp, #-4]!)
   107b4:	push	{r0}		; (str r0, [sp, #-4]!)
   107b8:	ldr	ip, [pc, #16]	; 107d0 <sprintf@plt+0x3c>
   107bc:	push	{ip}		; (str ip, [sp, #-4]!)
   107c0:	ldr	r0, [pc, #12]	; 107d4 <sprintf@plt+0x40>
   107c4:	ldr	r3, [pc, #12]	; 107d8 <sprintf@plt+0x44>
   107c8:	bl	106bc <__libc_start_main@plt>
   107cc:	bl	106a4 <abort@plt>
   107d0:	andeq	r1, r1, r4, lsr #15
   107d4:	andeq	r0, r1, r8, asr #17
   107d8:	andeq	r1, r1, r4, asr #14
   107dc:	ldr	r3, [pc, #20]	; 107f8 <sprintf@plt+0x64>
   107e0:	ldr	r2, [pc, #20]	; 107fc <sprintf@plt+0x68>
   107e4:	add	r3, pc, r3
   107e8:	ldr	r2, [r3, r2]
   107ec:	cmp	r2, #0
   107f0:	bxeq	lr
   107f4:	b	106c8 <__gmon_start__@plt>
   107f8:	andeq	r1, r1, r4, lsl r8
   107fc:	andeq	r0, r0, r4, rrx
   10800:	ldr	r3, [pc, #28]	; 10824 <sprintf@plt+0x90>
   10804:	ldr	r0, [pc, #28]	; 10828 <sprintf@plt+0x94>
   10808:	sub	r3, r3, r0
   1080c:	cmp	r3, #6
   10810:	bxls	lr
   10814:	ldr	r3, [pc, #16]	; 1082c <sprintf@plt+0x98>
   10818:	cmp	r3, #0
   1081c:	bxeq	lr
   10820:	bx	r3
   10824:	strheq	r2, [r2], -pc	; <UNPREDICTABLE>
   10828:	strheq	r2, [r2], -ip
   1082c:	andeq	r0, r0, r0
   10830:	ldr	r1, [pc, #36]	; 1085c <sprintf@plt+0xc8>
   10834:	ldr	r0, [pc, #36]	; 10860 <sprintf@plt+0xcc>
   10838:	sub	r1, r1, r0
   1083c:	asr	r1, r1, #2
   10840:	add	r1, r1, r1, lsr #31
   10844:	asrs	r1, r1, #1
   10848:	bxeq	lr
   1084c:	ldr	r3, [pc, #16]	; 10864 <sprintf@plt+0xd0>
   10850:	cmp	r3, #0
   10854:	bxeq	lr
   10858:	bx	r3
   1085c:	strheq	r2, [r2], -ip
   10860:	strheq	r2, [r2], -ip
   10864:	andeq	r0, r0, r0
   10868:	push	{r4, lr}
   1086c:	ldr	r4, [pc, #24]	; 1088c <sprintf@plt+0xf8>
   10870:	ldrb	r3, [r4]
   10874:	cmp	r3, #0
   10878:	popne	{r4, pc}
   1087c:	bl	10800 <sprintf@plt+0x6c>
   10880:	mov	r3, #1
   10884:	strb	r3, [r4]
   10888:	pop	{r4, pc}
   1088c:	strheq	r2, [r2], -ip
   10890:	ldr	r0, [pc, #40]	; 108c0 <sprintf@plt+0x12c>
   10894:	ldr	r3, [r0]
   10898:	cmp	r3, #0
   1089c:	bne	108a4 <sprintf@plt+0x110>
   108a0:	b	10830 <sprintf@plt+0x9c>
   108a4:	ldr	r3, [pc, #24]	; 108c4 <sprintf@plt+0x130>
   108a8:	cmp	r3, #0
   108ac:	beq	108a0 <sprintf@plt+0x10c>
   108b0:	push	{r4, lr}
   108b4:	blx	r3
   108b8:	pop	{r4, lr}
   108bc:	b	10830 <sprintf@plt+0x9c>
   108c0:	strdeq	r1, [r2], -ip
   108c4:	andeq	r0, r0, r0
   108c8:	push	{r4, fp, lr}
   108cc:	add	fp, sp, #8
   108d0:	sub	sp, sp, #52	; 0x34
   108d4:	str	r0, [fp, #-56]	; 0xffffffc8
   108d8:	str	r1, [fp, #-60]	; 0xffffffc4
   108dc:	ldr	r4, [pc, #1280]	; 10de4 <sprintf@plt+0x650>
   108e0:	add	r4, pc, r4
   108e4:	mov	r3, #0
   108e8:	str	r3, [fp, #-16]
   108ec:	mov	r3, #0
   108f0:	str	r3, [fp, #-20]	; 0xffffffec
   108f4:	mov	r3, #0
   108f8:	str	r3, [fp, #-32]	; 0xffffffe0
   108fc:	mov	r3, #0
   10900:	str	r3, [fp, #-36]	; 0xffffffdc
   10904:	mov	r3, #0
   10908:	str	r3, [fp, #-40]	; 0xffffffd8
   1090c:	b	10b08 <sprintf@plt+0x374>
   10910:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10914:	sub	r3, r3, #63	; 0x3f
   10918:	cmp	r3, #58	; 0x3a
   1091c:	addls	pc, pc, r3, lsl #2
   10920:	b	10af0 <sprintf@plt+0x35c>
   10924:	b	10aec <sprintf@plt+0x358>
   10928:	b	10af0 <sprintf@plt+0x35c>
   1092c:	b	10af0 <sprintf@plt+0x35c>
   10930:	b	10af0 <sprintf@plt+0x35c>
   10934:	b	10af0 <sprintf@plt+0x35c>
   10938:	b	10af0 <sprintf@plt+0x35c>
   1093c:	b	10af0 <sprintf@plt+0x35c>
   10940:	b	10af0 <sprintf@plt+0x35c>
   10944:	b	10af0 <sprintf@plt+0x35c>
   10948:	b	10af0 <sprintf@plt+0x35c>
   1094c:	b	10af0 <sprintf@plt+0x35c>
   10950:	b	10af0 <sprintf@plt+0x35c>
   10954:	b	10af0 <sprintf@plt+0x35c>
   10958:	b	10af0 <sprintf@plt+0x35c>
   1095c:	b	10af0 <sprintf@plt+0x35c>
   10960:	b	10af0 <sprintf@plt+0x35c>
   10964:	b	10af0 <sprintf@plt+0x35c>
   10968:	b	10af0 <sprintf@plt+0x35c>
   1096c:	b	10af0 <sprintf@plt+0x35c>
   10970:	b	10af0 <sprintf@plt+0x35c>
   10974:	b	10af0 <sprintf@plt+0x35c>
   10978:	b	10af0 <sprintf@plt+0x35c>
   1097c:	b	10af0 <sprintf@plt+0x35c>
   10980:	b	10af0 <sprintf@plt+0x35c>
   10984:	b	10af0 <sprintf@plt+0x35c>
   10988:	b	10af0 <sprintf@plt+0x35c>
   1098c:	b	10af0 <sprintf@plt+0x35c>
   10990:	b	10af0 <sprintf@plt+0x35c>
   10994:	b	10af0 <sprintf@plt+0x35c>
   10998:	b	10af0 <sprintf@plt+0x35c>
   1099c:	b	10af0 <sprintf@plt+0x35c>
   109a0:	b	10af0 <sprintf@plt+0x35c>
   109a4:	b	10af0 <sprintf@plt+0x35c>
   109a8:	b	10af0 <sprintf@plt+0x35c>
   109ac:	b	10af0 <sprintf@plt+0x35c>
   109b0:	b	10a20 <sprintf@plt+0x28c>
   109b4:	b	10af0 <sprintf@plt+0x35c>
   109b8:	b	10af0 <sprintf@plt+0x35c>
   109bc:	b	10af0 <sprintf@plt+0x35c>
   109c0:	b	10af0 <sprintf@plt+0x35c>
   109c4:	b	10af0 <sprintf@plt+0x35c>
   109c8:	b	10ae8 <sprintf@plt+0x354>
   109cc:	b	10af0 <sprintf@plt+0x35c>
   109d0:	b	10af0 <sprintf@plt+0x35c>
   109d4:	b	10af0 <sprintf@plt+0x35c>
   109d8:	b	10a38 <sprintf@plt+0x2a4>
   109dc:	b	10a10 <sprintf@plt+0x27c>
   109e0:	b	10af0 <sprintf@plt+0x35c>
   109e4:	b	10af0 <sprintf@plt+0x35c>
   109e8:	b	10aa8 <sprintf@plt+0x314>
   109ec:	b	10af0 <sprintf@plt+0x35c>
   109f0:	b	10a60 <sprintf@plt+0x2cc>
   109f4:	b	10a88 <sprintf@plt+0x2f4>
   109f8:	b	10af0 <sprintf@plt+0x35c>
   109fc:	b	10af0 <sprintf@plt+0x35c>
   10a00:	b	10af0 <sprintf@plt+0x35c>
   10a04:	b	10af0 <sprintf@plt+0x35c>
   10a08:	b	10ac8 <sprintf@plt+0x334>
   10a0c:	b	10ad8 <sprintf@plt+0x344>
   10a10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10a14:	orr	r3, r3, #1
   10a18:	str	r3, [fp, #-32]	; 0xffffffe0
   10a1c:	b	10b08 <sprintf@plt+0x374>
   10a20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10a24:	orr	r3, r3, #16
   10a28:	str	r3, [fp, #-32]	; 0xffffffe0
   10a2c:	mov	r3, #4
   10a30:	str	r3, [fp, #-40]	; 0xffffffd8
   10a34:	b	10b08 <sprintf@plt+0x374>
   10a38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10a3c:	orr	r3, r3, #8
   10a40:	str	r3, [fp, #-32]	; 0xffffffe0
   10a44:	ldr	r3, [pc, #924]	; 10de8 <sprintf@plt+0x654>
   10a48:	ldr	r3, [r4, r3]
   10a4c:	ldr	r3, [r3]
   10a50:	mov	r0, r3
   10a54:	bl	10728 <atoi@plt>
   10a58:	str	r0, [fp, #-36]	; 0xffffffdc
   10a5c:	b	10b08 <sprintf@plt+0x374>
   10a60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10a64:	orr	r3, r3, #32
   10a68:	str	r3, [fp, #-32]	; 0xffffffe0
   10a6c:	ldr	r3, [pc, #884]	; 10de8 <sprintf@plt+0x654>
   10a70:	ldr	r3, [r4, r3]
   10a74:	ldr	r3, [r3]
   10a78:	mov	r0, r3
   10a7c:	bl	10728 <atoi@plt>
   10a80:	str	r0, [fp, #-40]	; 0xffffffd8
   10a84:	b	10b08 <sprintf@plt+0x374>
   10a88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10a8c:	orr	r3, r3, #2
   10a90:	str	r3, [fp, #-32]	; 0xffffffe0
   10a94:	ldr	r3, [pc, #844]	; 10de8 <sprintf@plt+0x654>
   10a98:	ldr	r3, [r4, r3]
   10a9c:	ldr	r3, [r3]
   10aa0:	str	r3, [fp, #-20]	; 0xffffffec
   10aa4:	b	10b08 <sprintf@plt+0x374>
   10aa8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10aac:	orr	r3, r3, #4
   10ab0:	str	r3, [fp, #-32]	; 0xffffffe0
   10ab4:	ldr	r3, [pc, #812]	; 10de8 <sprintf@plt+0x654>
   10ab8:	ldr	r3, [r4, r3]
   10abc:	ldr	r3, [r3]
   10ac0:	str	r3, [fp, #-16]
   10ac4:	b	10b08 <sprintf@plt+0x374>
   10ac8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10acc:	orr	r3, r3, #64	; 0x40
   10ad0:	str	r3, [fp, #-32]	; 0xffffffe0
   10ad4:	b	10b08 <sprintf@plt+0x374>
   10ad8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10adc:	orr	r3, r3, #128	; 0x80
   10ae0:	str	r3, [fp, #-32]	; 0xffffffe0
   10ae4:	b	10b08 <sprintf@plt+0x374>
   10ae8:	bl	115a8 <sprintf@plt+0xe14>
   10aec:	bl	116a8 <sprintf@plt+0xf14>
   10af0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   10af4:	ldr	r3, [pc, #752]	; 10dec <sprintf@plt+0x658>
   10af8:	add	r3, pc, r3
   10afc:	mov	r0, r3
   10b00:	bl	1071c <printf@plt>
   10b04:	nop			; (mov r0, r0)
   10b08:	ldr	r3, [pc, #736]	; 10df0 <sprintf@plt+0x65c>
   10b0c:	add	r3, pc, r3
   10b10:	mov	r2, r3
   10b14:	ldr	r1, [fp, #-60]	; 0xffffffc4
   10b18:	ldr	r0, [fp, #-56]	; 0xffffffc8
   10b1c:	bl	10710 <getopt@plt>
   10b20:	str	r0, [fp, #-44]	; 0xffffffd4
   10b24:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10b28:	cmn	r3, #1
   10b2c:	bne	10910 <sprintf@plt+0x17c>
   10b30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10b34:	and	r3, r3, #1
   10b38:	cmp	r3, #0
   10b3c:	beq	10b84 <sprintf@plt+0x3f0>
   10b40:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10b44:	cmp	r3, #0
   10b48:	bne	10b54 <sprintf@plt+0x3c0>
   10b4c:	mov	r3, #8
   10b50:	str	r3, [fp, #-36]	; 0xffffffdc
   10b54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10b58:	and	r3, r3, #2
   10b5c:	cmp	r3, #0
   10b60:	beq	10b74 <sprintf@plt+0x3e0>
   10b64:	ldr	r0, [fp, #-20]	; 0xffffffec
   10b68:	bl	10e10 <sprintf@plt+0x67c>
   10b6c:	str	r0, [fp, #-24]	; 0xffffffe8
   10b70:	b	10c74 <sprintf@plt+0x4e0>
   10b74:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10b78:	bl	10ea0 <sprintf@plt+0x70c>
   10b7c:	str	r0, [fp, #-24]	; 0xffffffe8
   10b80:	b	10c74 <sprintf@plt+0x4e0>
   10b84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10b88:	and	r3, r3, #16
   10b8c:	cmp	r3, #0
   10b90:	beq	10be0 <sprintf@plt+0x44c>
   10b94:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10b98:	cmp	r3, #0
   10b9c:	bne	10ba8 <sprintf@plt+0x414>
   10ba0:	mov	r3, #22
   10ba4:	str	r3, [fp, #-36]	; 0xffffffdc
   10ba8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10bac:	and	r3, r3, #2
   10bb0:	cmp	r3, #0
   10bb4:	beq	10bcc <sprintf@plt+0x438>
   10bb8:	ldr	r1, [fp, #-20]	; 0xffffffec
   10bbc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10bc0:	bl	11254 <sprintf@plt+0xac0>
   10bc4:	str	r0, [fp, #-24]	; 0xffffffe8
   10bc8:	b	10c74 <sprintf@plt+0x4e0>
   10bcc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10bd0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   10bd4:	bl	11300 <sprintf@plt+0xb6c>
   10bd8:	str	r0, [fp, #-24]	; 0xffffffe8
   10bdc:	b	10c74 <sprintf@plt+0x4e0>
   10be0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10be4:	and	r3, r3, #64	; 0x40
   10be8:	cmp	r3, #0
   10bec:	beq	10c34 <sprintf@plt+0x4a0>
   10bf0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10bf4:	cmp	r3, #0
   10bf8:	bne	10c04 <sprintf@plt+0x470>
   10bfc:	mov	r3, #16
   10c00:	str	r3, [fp, #-36]	; 0xffffffdc
   10c04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10c08:	and	r3, r3, #2
   10c0c:	cmp	r3, #0
   10c10:	beq	10c24 <sprintf@plt+0x490>
   10c14:	ldr	r0, [fp, #-20]	; 0xffffffec
   10c18:	bl	10f7c <sprintf@plt+0x7e8>
   10c1c:	str	r0, [fp, #-24]	; 0xffffffe8
   10c20:	b	10c74 <sprintf@plt+0x4e0>
   10c24:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10c28:	bl	1109c <sprintf@plt+0x908>
   10c2c:	str	r0, [fp, #-24]	; 0xffffffe8
   10c30:	b	10c74 <sprintf@plt+0x4e0>
   10c34:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10c38:	cmp	r3, #0
   10c3c:	bne	10c48 <sprintf@plt+0x4b4>
   10c40:	mov	r3, #16
   10c44:	str	r3, [fp, #-36]	; 0xffffffdc
   10c48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10c4c:	and	r3, r3, #2
   10c50:	cmp	r3, #0
   10c54:	beq	10c68 <sprintf@plt+0x4d4>
   10c58:	ldr	r0, [fp, #-20]	; 0xffffffec
   10c5c:	bl	1100c <sprintf@plt+0x878>
   10c60:	str	r0, [fp, #-24]	; 0xffffffe8
   10c64:	b	10c74 <sprintf@plt+0x4e0>
   10c68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   10c6c:	bl	11178 <sprintf@plt+0x9e4>
   10c70:	str	r0, [fp, #-24]	; 0xffffffe8
   10c74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10c78:	and	r3, r3, #4
   10c7c:	cmp	r3, #0
   10c80:	beq	10ccc <sprintf@plt+0x538>
   10c84:	ldr	r3, [fp, #-16]
   10c88:	cmp	r3, #0
   10c8c:	bne	10cb8 <sprintf@plt+0x524>
   10c90:	ldr	r3, [pc, #348]	; 10df4 <sprintf@plt+0x660>
   10c94:	ldr	r3, [r4, r3]
   10c98:	ldr	r3, [r3]
   10c9c:	mov	r2, #30
   10ca0:	mov	r1, #1
   10ca4:	ldr	r0, [pc, #332]	; 10df8 <sprintf@plt+0x664>
   10ca8:	add	r0, pc, r0
   10cac:	bl	10734 <fwrite@plt>
   10cb0:	mov	r3, #1
   10cb4:	b	10dd8 <sprintf@plt+0x644>
   10cb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10cbc:	ldr	r0, [fp, #-16]
   10cc0:	bl	10758 <rb_crypt@plt>
   10cc4:	str	r0, [fp, #-28]	; 0xffffffe4
   10cc8:	b	10dcc <sprintf@plt+0x638>
   10ccc:	ldr	r3, [pc, #296]	; 10dfc <sprintf@plt+0x668>
   10cd0:	add	r3, pc, r3
   10cd4:	mov	r0, r3
   10cd8:	bl	106d4 <getpass@plt>
   10cdc:	str	r0, [fp, #-16]
   10ce0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10ce4:	ldr	r0, [fp, #-16]
   10ce8:	bl	10758 <rb_crypt@plt>
   10cec:	str	r0, [fp, #-28]	; 0xffffffe4
   10cf0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10cf4:	cmp	r3, #0
   10cf8:	bne	10d24 <sprintf@plt+0x590>
   10cfc:	ldr	r3, [pc, #240]	; 10df4 <sprintf@plt+0x660>
   10d00:	ldr	r3, [r4, r3]
   10d04:	ldr	r3, [r3]
   10d08:	mov	r2, #18
   10d0c:	mov	r1, #1
   10d10:	ldr	r0, [pc, #232]	; 10e00 <sprintf@plt+0x66c>
   10d14:	add	r0, pc, r0
   10d18:	bl	10734 <fwrite@plt>
   10d1c:	mov	r3, #1
   10d20:	b	10dd8 <sprintf@plt+0x644>
   10d24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10d28:	bl	1074c <strdup@plt>
   10d2c:	mov	r3, r0
   10d30:	str	r3, [fp, #-28]	; 0xffffffe4
   10d34:	ldr	r3, [pc, #200]	; 10e04 <sprintf@plt+0x670>
   10d38:	add	r3, pc, r3
   10d3c:	mov	r0, r3
   10d40:	bl	106d4 <getpass@plt>
   10d44:	str	r0, [fp, #-16]
   10d48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10d4c:	ldr	r0, [fp, #-16]
   10d50:	bl	10758 <rb_crypt@plt>
   10d54:	str	r0, [fp, #-48]	; 0xffffffd0
   10d58:	ldr	r3, [fp, #-48]	; 0xffffffd0
   10d5c:	cmp	r3, #0
   10d60:	bne	10d8c <sprintf@plt+0x5f8>
   10d64:	ldr	r3, [pc, #136]	; 10df4 <sprintf@plt+0x660>
   10d68:	ldr	r3, [r4, r3]
   10d6c:	ldr	r3, [r3]
   10d70:	mov	r2, #18
   10d74:	mov	r1, #1
   10d78:	ldr	r0, [pc, #136]	; 10e08 <sprintf@plt+0x674>
   10d7c:	add	r0, pc, r0
   10d80:	bl	10734 <fwrite@plt>
   10d84:	mov	r3, #1
   10d88:	b	10dd8 <sprintf@plt+0x644>
   10d8c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   10d90:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10d94:	bl	1077c <strcmp@plt>
   10d98:	mov	r3, r0
   10d9c:	cmp	r3, #0
   10da0:	beq	10dcc <sprintf@plt+0x638>
   10da4:	ldr	r3, [pc, #72]	; 10df4 <sprintf@plt+0x660>
   10da8:	ldr	r3, [r4, r3]
   10dac:	ldr	r3, [r3]
   10db0:	mov	r2, #23
   10db4:	mov	r1, #1
   10db8:	ldr	r0, [pc, #76]	; 10e0c <sprintf@plt+0x678>
   10dbc:	add	r0, pc, r0
   10dc0:	bl	10734 <fwrite@plt>
   10dc4:	mov	r3, #1
   10dc8:	b	10dd8 <sprintf@plt+0x644>
   10dcc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10dd0:	bl	10764 <puts@plt>
   10dd4:	mov	r3, #0
   10dd8:	mov	r0, r3
   10ddc:	sub	sp, fp, #8
   10de0:	pop	{r4, fp, pc}
   10de4:	andeq	r1, r1, r8, lsl r7
   10de8:	andeq	r0, r0, ip, rrx
   10dec:			; <UNDEFINED> instruction: 0x00000cb4
   10df0:			; <UNDEFINED> instruction: 0x00000cb8
   10df4:	andeq	r0, r0, r8, rrx
   10df8:	andeq	r0, r0, ip, lsr #22
   10dfc:	andeq	r0, r0, r4, lsr #22
   10e00:	andeq	r0, r0, ip, ror #21
   10e04:	ldrdeq	r0, [r0], -ip
   10e08:	andeq	r0, r0, r4, lsl #21
   10e0c:	andeq	r0, r0, r0, ror #20
   10e10:	push	{fp, lr}
   10e14:	add	fp, sp, #4
   10e18:	sub	sp, sp, #8
   10e1c:	str	r0, [fp, #-8]
   10e20:	ldr	r3, [fp, #-8]
   10e24:	cmp	r3, #0
   10e28:	beq	10e6c <sprintf@plt+0x6d8>
   10e2c:	ldr	r0, [fp, #-8]
   10e30:	bl	10704 <strlen@plt>
   10e34:	mov	r3, r0
   10e38:	cmp	r3, #16
   10e3c:	bhi	10e6c <sprintf@plt+0x6d8>
   10e40:	ldr	r2, [fp, #-8]
   10e44:	ldr	r3, [pc, #68]	; 10e90 <sprintf@plt+0x6fc>
   10e48:	add	r3, pc, r3
   10e4c:	mov	r1, r3
   10e50:	ldr	r3, [pc, #60]	; 10e94 <sprintf@plt+0x700>
   10e54:	add	r3, pc, r3
   10e58:	mov	r0, r3
   10e5c:	bl	10794 <sprintf@plt>
   10e60:	ldr	r3, [pc, #48]	; 10e98 <sprintf@plt+0x704>
   10e64:	add	r3, pc, r3
   10e68:	b	10e84 <sprintf@plt+0x6f0>
   10e6c:	ldr	r3, [pc, #40]	; 10e9c <sprintf@plt+0x708>
   10e70:	add	r3, pc, r3
   10e74:	mov	r0, r3
   10e78:	bl	10764 <puts@plt>
   10e7c:	mov	r0, #1
   10e80:	bl	10788 <exit@plt>
   10e84:	mov	r0, r3
   10e88:	sub	sp, fp, #4
   10e8c:	pop	{fp, pc}
   10e90:	andeq	r0, r0, ip, ror #19
   10e94:	andeq	r1, r1, r4, ror #4
   10e98:	andeq	r1, r1, r4, asr r2
   10e9c:	andeq	r0, r0, ip, asr #19
   10ea0:	push	{fp, lr}
   10ea4:	add	fp, sp, #4
   10ea8:	sub	sp, sp, #8
   10eac:	str	r0, [fp, #-8]
   10eb0:	ldr	r3, [fp, #-8]
   10eb4:	cmp	r3, #16
   10eb8:	ble	10ed4 <sprintf@plt+0x740>
   10ebc:	ldr	r3, [pc, #152]	; 10f5c <sprintf@plt+0x7c8>
   10ec0:	add	r3, pc, r3
   10ec4:	mov	r0, r3
   10ec8:	bl	10764 <puts@plt>
   10ecc:	mov	r0, #0
   10ed0:	bl	10788 <exit@plt>
   10ed4:	ldr	r3, [pc, #132]	; 10f60 <sprintf@plt+0x7cc>
   10ed8:	add	r3, pc, r3
   10edc:	mov	r2, #36	; 0x24
   10ee0:	strb	r2, [r3]
   10ee4:	ldr	r3, [pc, #120]	; 10f64 <sprintf@plt+0x7d0>
   10ee8:	add	r3, pc, r3
   10eec:	mov	r2, #49	; 0x31
   10ef0:	strb	r2, [r3, #1]
   10ef4:	ldr	r3, [pc, #108]	; 10f68 <sprintf@plt+0x7d4>
   10ef8:	add	r3, pc, r3
   10efc:	mov	r2, #36	; 0x24
   10f00:	strb	r2, [r3, #2]
   10f04:	ldr	r1, [fp, #-8]
   10f08:	ldr	r3, [pc, #92]	; 10f6c <sprintf@plt+0x7d8>
   10f0c:	add	r3, pc, r3
   10f10:	add	r0, r3, #3
   10f14:	bl	1148c <sprintf@plt+0xcf8>
   10f18:	ldr	r3, [fp, #-8]
   10f1c:	add	r3, r3, #3
   10f20:	ldr	r2, [pc, #72]	; 10f70 <sprintf@plt+0x7dc>
   10f24:	add	r2, pc, r2
   10f28:	mov	r1, #36	; 0x24
   10f2c:	strb	r1, [r2, r3]
   10f30:	ldr	r3, [fp, #-8]
   10f34:	add	r3, r3, #4
   10f38:	ldr	r2, [pc, #52]	; 10f74 <sprintf@plt+0x7e0>
   10f3c:	add	r2, pc, r2
   10f40:	mov	r1, #0
   10f44:	strb	r1, [r2, r3]
   10f48:	ldr	r3, [pc, #40]	; 10f78 <sprintf@plt+0x7e4>
   10f4c:	add	r3, pc, r3
   10f50:	mov	r0, r3
   10f54:	sub	sp, fp, #4
   10f58:	pop	{fp, pc}
   10f5c:	andeq	r0, r0, r0, asr #19
   10f60:	strdeq	r1, [r1], -r8
   10f64:	andeq	r1, r1, r8, ror #3
   10f68:	ldrdeq	r1, [r1], -r8
   10f6c:	andeq	r1, r1, r4, asr #3
   10f70:	andeq	r1, r1, ip, lsr #3
   10f74:	muleq	r1, r4, r1
   10f78:	andeq	r1, r1, r4, lsl #3
   10f7c:	push	{fp, lr}
   10f80:	add	fp, sp, #4
   10f84:	sub	sp, sp, #8
   10f88:	str	r0, [fp, #-8]
   10f8c:	ldr	r3, [fp, #-8]
   10f90:	cmp	r3, #0
   10f94:	beq	10fd8 <sprintf@plt+0x844>
   10f98:	ldr	r0, [fp, #-8]
   10f9c:	bl	10704 <strlen@plt>
   10fa0:	mov	r3, r0
   10fa4:	cmp	r3, #16
   10fa8:	bhi	10fd8 <sprintf@plt+0x844>
   10fac:	ldr	r2, [fp, #-8]
   10fb0:	ldr	r3, [pc, #68]	; 10ffc <sprintf@plt+0x868>
   10fb4:	add	r3, pc, r3
   10fb8:	mov	r1, r3
   10fbc:	ldr	r3, [pc, #60]	; 11000 <sprintf@plt+0x86c>
   10fc0:	add	r3, pc, r3
   10fc4:	mov	r0, r3
   10fc8:	bl	10794 <sprintf@plt>
   10fcc:	ldr	r3, [pc, #48]	; 11004 <sprintf@plt+0x870>
   10fd0:	add	r3, pc, r3
   10fd4:	b	10ff0 <sprintf@plt+0x85c>
   10fd8:	ldr	r3, [pc, #40]	; 11008 <sprintf@plt+0x874>
   10fdc:	add	r3, pc, r3
   10fe0:	mov	r0, r3
   10fe4:	bl	10764 <puts@plt>
   10fe8:	mov	r0, #1
   10fec:	bl	10788 <exit@plt>
   10ff0:	mov	r0, r3
   10ff4:	sub	sp, fp, #4
   10ff8:	pop	{fp, pc}
   10ffc:	andeq	r0, r0, r8, ror #17
   11000:	andeq	r1, r1, r8, lsr #2
   11004:	andeq	r1, r1, r8, lsl r1
   11008:	andeq	r0, r0, r0, ror #16
   1100c:	push	{fp, lr}
   11010:	add	fp, sp, #4
   11014:	sub	sp, sp, #8
   11018:	str	r0, [fp, #-8]
   1101c:	ldr	r3, [fp, #-8]
   11020:	cmp	r3, #0
   11024:	beq	11068 <sprintf@plt+0x8d4>
   11028:	ldr	r0, [fp, #-8]
   1102c:	bl	10704 <strlen@plt>
   11030:	mov	r3, r0
   11034:	cmp	r3, #16
   11038:	bhi	11068 <sprintf@plt+0x8d4>
   1103c:	ldr	r2, [fp, #-8]
   11040:	ldr	r3, [pc, #68]	; 1108c <sprintf@plt+0x8f8>
   11044:	add	r3, pc, r3
   11048:	mov	r1, r3
   1104c:	ldr	r3, [pc, #60]	; 11090 <sprintf@plt+0x8fc>
   11050:	add	r3, pc, r3
   11054:	mov	r0, r3
   11058:	bl	10794 <sprintf@plt>
   1105c:	ldr	r3, [pc, #48]	; 11094 <sprintf@plt+0x900>
   11060:	add	r3, pc, r3
   11064:	b	11080 <sprintf@plt+0x8ec>
   11068:	ldr	r3, [pc, #40]	; 11098 <sprintf@plt+0x904>
   1106c:	add	r3, pc, r3
   11070:	mov	r0, r3
   11074:	bl	10764 <puts@plt>
   11078:	mov	r0, #1
   1107c:	bl	10788 <exit@plt>
   11080:	mov	r0, r3
   11084:	sub	sp, fp, #4
   11088:	pop	{fp, pc}
   1108c:	andeq	r0, r0, r0, ror #16
   11090:	strheq	r1, [r1], -r0
   11094:	andeq	r1, r1, r0, lsr #1
   11098:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1109c:	push	{fp, lr}
   110a0:	add	fp, sp, #4
   110a4:	sub	sp, sp, #8
   110a8:	str	r0, [fp, #-8]
   110ac:	ldr	r3, [fp, #-8]
   110b0:	cmp	r3, #16
   110b4:	ble	110d0 <sprintf@plt+0x93c>
   110b8:	ldr	r3, [pc, #152]	; 11158 <sprintf@plt+0x9c4>
   110bc:	add	r3, pc, r3
   110c0:	mov	r0, r3
   110c4:	bl	10764 <puts@plt>
   110c8:	mov	r0, #0
   110cc:	bl	10788 <exit@plt>
   110d0:	ldr	r3, [pc, #132]	; 1115c <sprintf@plt+0x9c8>
   110d4:	add	r3, pc, r3
   110d8:	mov	r2, #36	; 0x24
   110dc:	strb	r2, [r3]
   110e0:	ldr	r3, [pc, #120]	; 11160 <sprintf@plt+0x9cc>
   110e4:	add	r3, pc, r3
   110e8:	mov	r2, #53	; 0x35
   110ec:	strb	r2, [r3, #1]
   110f0:	ldr	r3, [pc, #108]	; 11164 <sprintf@plt+0x9d0>
   110f4:	add	r3, pc, r3
   110f8:	mov	r2, #36	; 0x24
   110fc:	strb	r2, [r3, #2]
   11100:	ldr	r1, [fp, #-8]
   11104:	ldr	r3, [pc, #92]	; 11168 <sprintf@plt+0x9d4>
   11108:	add	r3, pc, r3
   1110c:	add	r0, r3, #3
   11110:	bl	1148c <sprintf@plt+0xcf8>
   11114:	ldr	r3, [fp, #-8]
   11118:	add	r3, r3, #3
   1111c:	ldr	r2, [pc, #72]	; 1116c <sprintf@plt+0x9d8>
   11120:	add	r2, pc, r2
   11124:	mov	r1, #36	; 0x24
   11128:	strb	r1, [r2, r3]
   1112c:	ldr	r3, [fp, #-8]
   11130:	add	r3, r3, #4
   11134:	ldr	r2, [pc, #52]	; 11170 <sprintf@plt+0x9dc>
   11138:	add	r2, pc, r2
   1113c:	mov	r1, #0
   11140:	strb	r1, [r2, r3]
   11144:	ldr	r3, [pc, #40]	; 11174 <sprintf@plt+0x9e0>
   11148:	add	r3, pc, r3
   1114c:	mov	r0, r3
   11150:	sub	sp, fp, #4
   11154:	pop	{fp, pc}
   11158:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1115c:	andeq	r1, r1, r4, asr #32
   11160:	andeq	r1, r1, r4, lsr r0
   11164:	andeq	r1, r1, r4, lsr #32
   11168:	andeq	r1, r1, r0, lsl r0
   1116c:	strdeq	r0, [r1], -r8
   11170:	andeq	r0, r1, r0, ror #31
   11174:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   11178:	push	{fp, lr}
   1117c:	add	fp, sp, #4
   11180:	sub	sp, sp, #8
   11184:	str	r0, [fp, #-8]
   11188:	ldr	r3, [fp, #-8]
   1118c:	cmp	r3, #16
   11190:	ble	111ac <sprintf@plt+0xa18>
   11194:	ldr	r3, [pc, #152]	; 11234 <sprintf@plt+0xaa0>
   11198:	add	r3, pc, r3
   1119c:	mov	r0, r3
   111a0:	bl	10764 <puts@plt>
   111a4:	mov	r0, #0
   111a8:	bl	10788 <exit@plt>
   111ac:	ldr	r3, [pc, #132]	; 11238 <sprintf@plt+0xaa4>
   111b0:	add	r3, pc, r3
   111b4:	mov	r2, #36	; 0x24
   111b8:	strb	r2, [r3]
   111bc:	ldr	r3, [pc, #120]	; 1123c <sprintf@plt+0xaa8>
   111c0:	add	r3, pc, r3
   111c4:	mov	r2, #54	; 0x36
   111c8:	strb	r2, [r3, #1]
   111cc:	ldr	r3, [pc, #108]	; 11240 <sprintf@plt+0xaac>
   111d0:	add	r3, pc, r3
   111d4:	mov	r2, #36	; 0x24
   111d8:	strb	r2, [r3, #2]
   111dc:	ldr	r1, [fp, #-8]
   111e0:	ldr	r3, [pc, #92]	; 11244 <sprintf@plt+0xab0>
   111e4:	add	r3, pc, r3
   111e8:	add	r0, r3, #3
   111ec:	bl	1148c <sprintf@plt+0xcf8>
   111f0:	ldr	r3, [fp, #-8]
   111f4:	add	r3, r3, #3
   111f8:	ldr	r2, [pc, #72]	; 11248 <sprintf@plt+0xab4>
   111fc:	add	r2, pc, r2
   11200:	mov	r1, #36	; 0x24
   11204:	strb	r1, [r2, r3]
   11208:	ldr	r3, [fp, #-8]
   1120c:	add	r3, r3, #4
   11210:	ldr	r2, [pc, #52]	; 1124c <sprintf@plt+0xab8>
   11214:	add	r2, pc, r2
   11218:	mov	r1, #0
   1121c:	strb	r1, [r2, r3]
   11220:	ldr	r3, [pc, #40]	; 11250 <sprintf@plt+0xabc>
   11224:	add	r3, pc, r3
   11228:	mov	r0, r3
   1122c:	sub	sp, fp, #4
   11230:	pop	{fp, pc}
   11234:	andeq	r0, r0, r0, lsr r7
   11238:	andeq	r0, r1, r0, lsl #31
   1123c:	andeq	r0, r1, r0, ror pc
   11240:	andeq	r0, r1, r0, ror #30
   11244:	andeq	r0, r1, ip, asr #30
   11248:	andeq	r0, r1, r4, lsr pc
   1124c:	andeq	r0, r1, ip, lsl pc
   11250:	andeq	r0, r1, ip, lsl #30
   11254:	push	{fp, lr}
   11258:	add	fp, sp, #4
   1125c:	sub	sp, sp, #16
   11260:	str	r0, [fp, #-16]
   11264:	str	r1, [fp, #-20]	; 0xffffffec
   11268:	ldr	r3, [fp, #-20]	; 0xffffffec
   1126c:	cmp	r3, #0
   11270:	beq	112c8 <sprintf@plt+0xb34>
   11274:	ldr	r0, [fp, #-20]	; 0xffffffec
   11278:	bl	10704 <strlen@plt>
   1127c:	mov	r3, r0
   11280:	cmp	r3, #22
   11284:	bhi	112c8 <sprintf@plt+0xb34>
   11288:	sub	r3, fp, #8
   1128c:	ldr	r2, [fp, #-16]
   11290:	ldr	r1, [pc, #84]	; 112ec <sprintf@plt+0xb58>
   11294:	add	r1, pc, r1
   11298:	mov	r0, r3
   1129c:	bl	10794 <sprintf@plt>
   112a0:	sub	r2, fp, #8
   112a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   112a8:	ldr	r1, [pc, #64]	; 112f0 <sprintf@plt+0xb5c>
   112ac:	add	r1, pc, r1
   112b0:	ldr	r0, [pc, #60]	; 112f4 <sprintf@plt+0xb60>
   112b4:	add	r0, pc, r0
   112b8:	bl	10794 <sprintf@plt>
   112bc:	ldr	r3, [pc, #52]	; 112f8 <sprintf@plt+0xb64>
   112c0:	add	r3, pc, r3
   112c4:	b	112e0 <sprintf@plt+0xb4c>
   112c8:	ldr	r3, [pc, #44]	; 112fc <sprintf@plt+0xb68>
   112cc:	add	r3, pc, r3
   112d0:	mov	r0, r3
   112d4:	bl	10764 <puts@plt>
   112d8:	mov	r0, #1
   112dc:	bl	10788 <exit@plt>
   112e0:	mov	r0, r3
   112e4:	sub	sp, fp, #4
   112e8:	pop	{fp, pc}
   112ec:	andeq	r0, r0, r0, asr r6
   112f0:	andeq	r0, r0, r0, asr #12
   112f4:	muleq	r1, r4, lr
   112f8:	andeq	r0, r1, r8, lsl #29
   112fc:	andeq	r0, r0, ip, lsr #12
   11300:	push	{fp, lr}
   11304:	add	fp, sp, #4
   11308:	sub	sp, sp, #16
   1130c:	str	r0, [fp, #-16]
   11310:	str	r1, [fp, #-20]	; 0xffffffec
   11314:	ldr	r3, [fp, #-20]	; 0xffffffec
   11318:	cmp	r3, #22
   1131c:	ble	11338 <sprintf@plt+0xba4>
   11320:	ldr	r3, [pc, #164]	; 113cc <sprintf@plt+0xc38>
   11324:	add	r3, pc, r3
   11328:	mov	r0, r3
   1132c:	bl	10764 <puts@plt>
   11330:	mov	r0, #0
   11334:	bl	10788 <exit@plt>
   11338:	sub	r3, fp, #8
   1133c:	ldr	r2, [fp, #-16]
   11340:	ldr	r1, [pc, #136]	; 113d0 <sprintf@plt+0xc3c>
   11344:	add	r1, pc, r1
   11348:	mov	r0, r3
   1134c:	bl	10794 <sprintf@plt>
   11350:	sub	r3, fp, #8
   11354:	mov	r2, r3
   11358:	ldr	r3, [pc, #116]	; 113d4 <sprintf@plt+0xc40>
   1135c:	add	r3, pc, r3
   11360:	mov	r1, r3
   11364:	ldr	r3, [pc, #108]	; 113d8 <sprintf@plt+0xc44>
   11368:	add	r3, pc, r3
   1136c:	mov	r0, r3
   11370:	bl	10794 <sprintf@plt>
   11374:	ldr	r1, [fp, #-20]	; 0xffffffec
   11378:	ldr	r3, [pc, #92]	; 113dc <sprintf@plt+0xc48>
   1137c:	add	r3, pc, r3
   11380:	add	r0, r3, #7
   11384:	bl	1148c <sprintf@plt+0xcf8>
   11388:	ldr	r3, [fp, #-20]	; 0xffffffec
   1138c:	add	r3, r3, #7
   11390:	ldr	r2, [pc, #72]	; 113e0 <sprintf@plt+0xc4c>
   11394:	add	r2, pc, r2
   11398:	mov	r1, #36	; 0x24
   1139c:	strb	r1, [r2, r3]
   113a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   113a4:	add	r3, r3, #8
   113a8:	ldr	r2, [pc, #52]	; 113e4 <sprintf@plt+0xc50>
   113ac:	add	r2, pc, r2
   113b0:	mov	r1, #0
   113b4:	strb	r1, [r2, r3]
   113b8:	ldr	r3, [pc, #40]	; 113e8 <sprintf@plt+0xc54>
   113bc:	add	r3, pc, r3
   113c0:	mov	r0, r3
   113c4:	sub	sp, fp, #4
   113c8:	pop	{fp, pc}
   113cc:	andeq	r0, r0, r8, lsl r6
   113d0:	andeq	r0, r0, r0, lsr #11
   113d4:	andeq	r0, r0, r0, lsl #12
   113d8:	andeq	r0, r1, r0, lsl #28
   113dc:	andeq	r0, r1, ip, ror #27
   113e0:	ldrdeq	r0, [r1], -r4
   113e4:			; <UNDEFINED> instruction: 0x00010dbc
   113e8:	andeq	r0, r1, ip, lsr #27
   113ec:	push	{r4, fp, lr}
   113f0:	add	fp, sp, #8
   113f4:	sub	sp, sp, #20
   113f8:	str	r0, [fp, #-24]	; 0xffffffe8
   113fc:	str	r1, [fp, #-28]	; 0xffffffe4
   11400:	mov	r0, #0
   11404:	bl	10740 <time@plt>
   11408:	mov	r3, r0
   1140c:	mov	r0, r3
   11410:	bl	106b0 <srand@plt>
   11414:	mov	r3, #0
   11418:	str	r3, [fp, #-16]
   1141c:	b	11468 <sprintf@plt+0xcd4>
   11420:	ldr	r3, [fp, #-16]
   11424:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11428:	add	r4, r2, r3
   1142c:	bl	10770 <rand@plt>
   11430:	mov	r2, r0
   11434:	asr	r3, r2, #31
   11438:	lsr	r3, r3, #26
   1143c:	add	r2, r2, r3
   11440:	and	r2, r2, #63	; 0x3f
   11444:	sub	r3, r2, r3
   11448:	mov	r2, r3
   1144c:	ldr	r3, [pc, #52]	; 11488 <sprintf@plt+0xcf4>
   11450:	add	r3, pc, r3
   11454:	ldrb	r3, [r3, r2]
   11458:	strb	r3, [r4]
   1145c:	ldr	r3, [fp, #-16]
   11460:	add	r3, r3, #1
   11464:	str	r3, [fp, #-16]
   11468:	ldr	r2, [fp, #-16]
   1146c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11470:	cmp	r2, r3
   11474:	blt	11420 <sprintf@plt+0xc8c>
   11478:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1147c:	mov	r0, r3
   11480:	sub	sp, fp, #8
   11484:	pop	{r4, fp, pc}
   11488:	andeq	r0, r1, r0, lsr #24
   1148c:	push	{fp, lr}
   11490:	add	fp, sp, #4
   11494:	sub	sp, sp, #24
   11498:	str	r0, [fp, #-24]	; 0xffffffe8
   1149c:	str	r1, [fp, #-28]	; 0xffffffe4
   114a0:	mov	r1, #0
   114a4:	ldr	r3, [pc, #244]	; 115a0 <sprintf@plt+0xe0c>
   114a8:	add	r3, pc, r3
   114ac:	mov	r0, r3
   114b0:	bl	10698 <open@plt>
   114b4:	str	r0, [fp, #-12]
   114b8:	ldr	r3, [fp, #-12]
   114bc:	cmp	r3, #0
   114c0:	bge	114d8 <sprintf@plt+0xd44>
   114c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   114c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   114cc:	bl	113ec <sprintf@plt+0xc58>
   114d0:	mov	r3, r0
   114d4:	b	11594 <sprintf@plt+0xe00>
   114d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   114dc:	mov	r1, r3
   114e0:	mov	r0, #1
   114e4:	bl	106e0 <calloc@plt>
   114e8:	mov	r3, r0
   114ec:	str	r3, [fp, #-16]
   114f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   114f4:	mov	r2, r3
   114f8:	ldr	r1, [fp, #-16]
   114fc:	ldr	r0, [fp, #-12]
   11500:	bl	106f8 <read@plt>
   11504:	mov	r2, r0
   11508:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1150c:	cmp	r2, r3
   11510:	beq	11530 <sprintf@plt+0xd9c>
   11514:	ldr	r0, [fp, #-16]
   11518:	bl	106ec <free@plt>
   1151c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11520:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11524:	bl	113ec <sprintf@plt+0xc58>
   11528:	mov	r3, r0
   1152c:	b	11594 <sprintf@plt+0xe00>
   11530:	mov	r3, #0
   11534:	str	r3, [fp, #-8]
   11538:	b	11578 <sprintf@plt+0xde4>
   1153c:	ldr	r3, [fp, #-8]
   11540:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11544:	add	r3, r2, r3
   11548:	ldr	r2, [fp, #-8]
   1154c:	ldr	r1, [fp, #-16]
   11550:	add	r2, r1, r2
   11554:	ldrb	r2, [r2]
   11558:	and	r2, r2, #63	; 0x3f
   1155c:	ldr	r1, [pc, #64]	; 115a4 <sprintf@plt+0xe10>
   11560:	add	r1, pc, r1
   11564:	ldrb	r2, [r1, r2]
   11568:	strb	r2, [r3]
   1156c:	ldr	r3, [fp, #-8]
   11570:	add	r3, r3, #1
   11574:	str	r3, [fp, #-8]
   11578:	ldr	r2, [fp, #-8]
   1157c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11580:	cmp	r2, r3
   11584:	blt	1153c <sprintf@plt+0xda8>
   11588:	ldr	r0, [fp, #-16]
   1158c:	bl	106ec <free@plt>
   11590:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11594:	mov	r0, r3
   11598:	sub	sp, fp, #4
   1159c:	pop	{fp, pc}
   115a0:			; <UNDEFINED> instruction: 0x000004bc
   115a4:	andeq	r0, r1, r0, lsl fp
   115a8:	push	{fp, lr}
   115ac:	add	fp, sp, #4
   115b0:	ldr	r3, [pc, #192]	; 11678 <sprintf@plt+0xee4>
   115b4:	add	r3, pc, r3
   115b8:	mov	r0, r3
   115bc:	bl	10764 <puts@plt>
   115c0:	ldr	r3, [pc, #180]	; 1167c <sprintf@plt+0xee8>
   115c4:	add	r3, pc, r3
   115c8:	mov	r0, r3
   115cc:	bl	10764 <puts@plt>
   115d0:	ldr	r3, [pc, #168]	; 11680 <sprintf@plt+0xeec>
   115d4:	add	r3, pc, r3
   115d8:	mov	r0, r3
   115dc:	bl	10764 <puts@plt>
   115e0:	ldr	r3, [pc, #156]	; 11684 <sprintf@plt+0xef0>
   115e4:	add	r3, pc, r3
   115e8:	mov	r0, r3
   115ec:	bl	10764 <puts@plt>
   115f0:	ldr	r3, [pc, #144]	; 11688 <sprintf@plt+0xef4>
   115f4:	add	r3, pc, r3
   115f8:	mov	r0, r3
   115fc:	bl	10764 <puts@plt>
   11600:	ldr	r3, [pc, #132]	; 1168c <sprintf@plt+0xef8>
   11604:	add	r3, pc, r3
   11608:	mov	r0, r3
   1160c:	bl	10764 <puts@plt>
   11610:	ldr	r3, [pc, #120]	; 11690 <sprintf@plt+0xefc>
   11614:	add	r3, pc, r3
   11618:	mov	r0, r3
   1161c:	bl	10764 <puts@plt>
   11620:	ldr	r3, [pc, #108]	; 11694 <sprintf@plt+0xf00>
   11624:	add	r3, pc, r3
   11628:	mov	r0, r3
   1162c:	bl	10764 <puts@plt>
   11630:	ldr	r3, [pc, #96]	; 11698 <sprintf@plt+0xf04>
   11634:	add	r3, pc, r3
   11638:	mov	r0, r3
   1163c:	bl	10764 <puts@plt>
   11640:	ldr	r3, [pc, #84]	; 1169c <sprintf@plt+0xf08>
   11644:	add	r3, pc, r3
   11648:	mov	r0, r3
   1164c:	bl	10764 <puts@plt>
   11650:	ldr	r3, [pc, #72]	; 116a0 <sprintf@plt+0xf0c>
   11654:	add	r3, pc, r3
   11658:	mov	r0, r3
   1165c:	bl	10764 <puts@plt>
   11660:	ldr	r3, [pc, #60]	; 116a4 <sprintf@plt+0xf10>
   11664:	add	r3, pc, r3
   11668:	mov	r0, r3
   1166c:	bl	10764 <puts@plt>
   11670:	mov	r0, #0
   11674:	bl	10788 <exit@plt>
   11678:			; <UNDEFINED> instruction: 0x000003bc
   1167c:	strdeq	r0, [r0], -r8
   11680:	andeq	r0, r0, r8, lsl #8
   11684:	andeq	r0, r0, r8, lsl r4
   11688:	andeq	r0, r0, r4, lsr #8
   1168c:	andeq	r0, r0, r4, lsr r4
   11690:	andeq	r0, r0, ip, asr r4
   11694:	andeq	r0, r0, r4, lsl #9
   11698:	andeq	r0, r0, r0, lsr #9
   1169c:	andeq	r0, r0, r8, asr #9
   116a0:	ldrdeq	r0, [r0], -r4
   116a4:	andeq	r0, r0, ip, ror #9
   116a8:	push	{fp, lr}
   116ac:	add	fp, sp, #4
   116b0:	ldr	r3, [pc, #112]	; 11728 <sprintf@plt+0xf94>
   116b4:	add	r3, pc, r3
   116b8:	mov	r0, r3
   116bc:	bl	10764 <puts@plt>
   116c0:	ldr	r3, [pc, #100]	; 1172c <sprintf@plt+0xf98>
   116c4:	add	r3, pc, r3
   116c8:	mov	r0, r3
   116cc:	bl	10764 <puts@plt>
   116d0:	ldr	r3, [pc, #88]	; 11730 <sprintf@plt+0xf9c>
   116d4:	add	r3, pc, r3
   116d8:	mov	r0, r3
   116dc:	bl	10764 <puts@plt>
   116e0:	ldr	r3, [pc, #76]	; 11734 <sprintf@plt+0xfa0>
   116e4:	add	r3, pc, r3
   116e8:	mov	r0, r3
   116ec:	bl	10764 <puts@plt>
   116f0:	ldr	r3, [pc, #64]	; 11738 <sprintf@plt+0xfa4>
   116f4:	add	r3, pc, r3
   116f8:	mov	r0, r3
   116fc:	bl	10764 <puts@plt>
   11700:	ldr	r3, [pc, #52]	; 1173c <sprintf@plt+0xfa8>
   11704:	add	r3, pc, r3
   11708:	mov	r0, r3
   1170c:	bl	10764 <puts@plt>
   11710:	ldr	r3, [pc, #40]	; 11740 <sprintf@plt+0xfac>
   11714:	add	r3, pc, r3
   11718:	mov	r0, r3
   1171c:	bl	10764 <puts@plt>
   11720:	mov	r0, #0
   11724:	bl	10788 <exit@plt>
   11728:	andeq	r0, r0, r0, asr #9
   1172c:	ldrdeq	r0, [r0], -r4
   11730:	andeq	r0, r0, r8, lsl #10
   11734:	andeq	r0, r0, r8, lsr r5
   11738:	andeq	r0, r0, r8, ror #10
   1173c:	muleq	r0, r8, r5
   11740:			; <UNDEFINED> instruction: 0x000005b0
   11744:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11748:	mov	r7, r0
   1174c:	ldr	r6, [pc, #72]	; 1179c <sprintf@plt+0x1008>
   11750:	ldr	r5, [pc, #72]	; 117a0 <sprintf@plt+0x100c>
   11754:	add	r6, pc, r6
   11758:	add	r5, pc, r5
   1175c:	sub	r6, r6, r5
   11760:	mov	r8, r1
   11764:	mov	r9, r2
   11768:	bl	10678 <open@plt-0x20>
   1176c:	asrs	r6, r6, #2
   11770:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11774:	mov	r4, #0
   11778:	add	r4, r4, #1
   1177c:	ldr	r3, [r5], #4
   11780:	mov	r2, r9
   11784:	mov	r1, r8
   11788:	mov	r0, r7
   1178c:	blx	r3
   11790:	cmp	r6, r4
   11794:	bne	11778 <sprintf@plt+0xfe4>
   11798:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1179c:	muleq	r1, ip, r7
   117a0:	muleq	r1, r4, r7
   117a4:	bx	lr

Disassembly of section .fini:

000117a8 <.fini>:
   117a8:	push	{r3, lr}
   117ac:	pop	{r3, pc}
