
../repos/eddieantonio-ocreval-3ab279a/editopsum/editopsum:     file format elf32-littlearm


Disassembly of section .init:

0001069c <.init>:
   1069c:	push	{r3, lr}
   106a0:	bl	10888 <abort@plt+0xdc>
   106a4:	pop	{r3, pc}

Disassembly of section .plt:

000106a8 <calloc@plt-0x14>:
   106a8:	push	{lr}		; (str lr, [sp, #-4]!)
   106ac:	ldr	lr, [pc, #4]	; 106b8 <calloc@plt-0x4>
   106b0:	add	lr, pc, lr
   106b4:	ldr	pc, [lr, #8]!
   106b8:	andeq	r1, r1, r8, asr #18

000106bc <calloc@plt>:
   106bc:	add	ip, pc, #0, 12
   106c0:	add	ip, ip, #69632	; 0x11000
   106c4:	ldr	pc, [ip, #2376]!	; 0x948

000106c8 <strcmp@plt>:
   106c8:	add	ip, pc, #0, 12
   106cc:	add	ip, ip, #69632	; 0x11000
   106d0:	ldr	pc, [ip, #2368]!	; 0x940

000106d4 <fopen@plt>:
   106d4:	add	ip, pc, #0, 12
   106d8:	add	ip, ip, #69632	; 0x11000
   106dc:	ldr	pc, [ip, #2360]!	; 0x938

000106e0 <free@plt>:
   106e0:	add	ip, pc, #0, 12
   106e4:	add	ip, ip, #69632	; 0x11000
   106e8:	ldr	pc, [ip, #2352]!	; 0x930

000106ec <fgets@plt>:
   106ec:	add	ip, pc, #0, 12
   106f0:	add	ip, ip, #69632	; 0x11000
   106f4:	ldr	pc, [ip, #2344]!	; 0x928

000106f8 <strdup@plt>:
   106f8:	add	ip, pc, #0, 12
   106fc:	add	ip, ip, #69632	; 0x11000
   10700:	ldr	pc, [ip, #2336]!	; 0x920

00010704 <unlink@plt>:
   10704:	add	ip, pc, #0, 12
   10708:	add	ip, ip, #69632	; 0x11000
   1070c:	ldr	pc, [ip, #2328]!	; 0x918

00010710 <__xstat@plt>:
   10710:	add	ip, pc, #0, 12
   10714:	add	ip, ip, #69632	; 0x11000
   10718:	ldr	pc, [ip, #2320]!	; 0x910

0001071c <fwrite@plt>:
   1071c:	add	ip, pc, #0, 12
   10720:	add	ip, ip, #69632	; 0x11000
   10724:	ldr	pc, [ip, #2312]!	; 0x908

00010728 <__libc_start_main@plt>:
   10728:	add	ip, pc, #0, 12
   1072c:	add	ip, ip, #69632	; 0x11000
   10730:	ldr	pc, [ip, #2304]!	; 0x900

00010734 <__sysv_signal@plt>:
   10734:	add	ip, pc, #0, 12
   10738:	add	ip, ip, #69632	; 0x11000
   1073c:	ldr	pc, [ip, #2296]!	; 0x8f8

00010740 <__gmon_start__@plt>:
   10740:	add	ip, pc, #0, 12
   10744:	add	ip, ip, #69632	; 0x11000
   10748:	ldr	pc, [ip, #2288]!	; 0x8f0

0001074c <getpid@plt>:
   1074c:	add	ip, pc, #0, 12
   10750:	add	ip, ip, #69632	; 0x11000
   10754:	ldr	pc, [ip, #2280]!	; 0x8e8

00010758 <exit@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #69632	; 0x11000
   10760:	ldr	pc, [ip, #2272]!	; 0x8e0

00010764 <strlen@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #69632	; 0x11000
   1076c:	ldr	pc, [ip, #2264]!	; 0x8d8

00010770 <fprintf@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #69632	; 0x11000
   10778:	ldr	pc, [ip, #2256]!	; 0x8d0

0001077c <__isoc99_sscanf@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #69632	; 0x11000
   10784:	ldr	pc, [ip, #2248]!	; 0x8c8

00010788 <fclose@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #69632	; 0x11000
   10790:	ldr	pc, [ip, #2240]!	; 0x8c0

00010794 <sprintf@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #69632	; 0x11000
   1079c:	ldr	pc, [ip, #2232]!	; 0x8b8

000107a0 <strncmp@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #69632	; 0x11000
   107a8:	ldr	pc, [ip, #2224]!	; 0x8b0

000107ac <abort@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #69632	; 0x11000
   107b4:	ldr	pc, [ip, #2216]!	; 0x8a8

Disassembly of section .text:

000107b8 <error@@Base-0x800>:
   107b8:	push	{r4, r5, r6, lr}
   107bc:	sub	sp, sp, #8
   107c0:	add	ip, sp, #8
   107c4:	ldr	r2, [pc, #112]	; 1083c <abort@plt+0x90>
   107c8:	mov	r3, #0
   107cc:	str	r0, [ip, #-4]!
   107d0:	add	r2, pc, r2
   107d4:	mov	r0, ip
   107d8:	mov	r5, r1
   107dc:	bl	11158 <error@@Base+0x1a0>
   107e0:	ldr	r3, [sp, #4]
   107e4:	ldr	r2, [pc, #84]	; 10840 <abort@plt+0x94>
   107e8:	cmp	r3, #1
   107ec:	add	r2, pc, r2
   107f0:	ble	10830 <abort@plt+0x84>
   107f4:	ldr	r3, [pc, #72]	; 10844 <abort@plt+0x98>
   107f8:	sub	r5, r5, #4
   107fc:	mov	r4, #0
   10800:	ldr	r6, [r2, r3]
   10804:	ldr	r1, [r5, #4]!
   10808:	mov	r0, r6
   1080c:	bl	109e0 <abort@plt+0x234>
   10810:	ldr	r3, [sp, #4]
   10814:	add	r4, r4, #1
   10818:	cmp	r3, r4
   1081c:	bgt	10804 <abort@plt+0x58>
   10820:	mov	r0, r6
   10824:	mov	r1, #0
   10828:	bl	10bcc <abort@plt+0x420>
   1082c:	bl	10f44 <abort@plt+0x798>
   10830:	ldr	r0, [pc, #16]	; 10848 <abort@plt+0x9c>
   10834:	add	r0, pc, r0
   10838:	bl	10fb8 <error@@Base>
   1083c:	andeq	r0, r0, ip, ror ip
   10840:	andeq	r1, r1, ip, lsl #16
   10844:	andeq	r0, r0, ip, ror r0
   10848:	andeq	r0, r0, ip, asr #24
   1084c:	mov	fp, #0
   10850:	mov	lr, #0
   10854:	pop	{r1}		; (ldr r1, [sp], #4)
   10858:	mov	r2, sp
   1085c:	push	{r2}		; (str r2, [sp, #-4]!)
   10860:	push	{r0}		; (str r0, [sp, #-4]!)
   10864:	ldr	ip, [pc, #16]	; 1087c <abort@plt+0xd0>
   10868:	push	{ip}		; (str ip, [sp, #-4]!)
   1086c:	ldr	r0, [pc, #12]	; 10880 <abort@plt+0xd4>
   10870:	ldr	r3, [pc, #12]	; 10884 <abort@plt+0xd8>
   10874:	bl	10728 <__libc_start_main@plt>
   10878:	bl	107ac <abort@plt>
   1087c:	andeq	r1, r1, r4, asr #8
   10880:			; <UNDEFINED> instruction: 0x000107b8
   10884:	andeq	r1, r1, r4, ror #7
   10888:	ldr	r3, [pc, #20]	; 108a4 <abort@plt+0xf8>
   1088c:	ldr	r2, [pc, #20]	; 108a8 <abort@plt+0xfc>
   10890:	add	r3, pc, r3
   10894:	ldr	r2, [r3, r2]
   10898:	cmp	r2, #0
   1089c:	bxeq	lr
   108a0:	b	10740 <__gmon_start__@plt>
   108a4:	andeq	r1, r1, r8, ror #14
   108a8:	andeq	r0, r0, ip, rrx
   108ac:	ldr	r3, [pc, #28]	; 108d0 <abort@plt+0x124>
   108b0:	ldr	r0, [pc, #28]	; 108d4 <abort@plt+0x128>
   108b4:	sub	r3, r3, r0
   108b8:	cmp	r3, #6
   108bc:	bxls	lr
   108c0:	ldr	r3, [pc, #16]	; 108d8 <abort@plt+0x12c>
   108c4:	cmp	r3, #0
   108c8:	bxeq	lr
   108cc:	bx	r3
   108d0:	muleq	r2, fp, r0
   108d4:	muleq	r2, r8, r0
   108d8:	andeq	r0, r0, r0
   108dc:	ldr	r1, [pc, #36]	; 10908 <abort@plt+0x15c>
   108e0:	ldr	r0, [pc, #36]	; 1090c <abort@plt+0x160>
   108e4:	sub	r1, r1, r0
   108e8:	asr	r1, r1, #2
   108ec:	add	r1, r1, r1, lsr #31
   108f0:	asrs	r1, r1, #1
   108f4:	bxeq	lr
   108f8:	ldr	r3, [pc, #16]	; 10910 <abort@plt+0x164>
   108fc:	cmp	r3, #0
   10900:	bxeq	lr
   10904:	bx	r3
   10908:	muleq	r2, r8, r0
   1090c:	muleq	r2, r8, r0
   10910:	andeq	r0, r0, r0
   10914:	push	{r4, lr}
   10918:	ldr	r4, [pc, #24]	; 10938 <abort@plt+0x18c>
   1091c:	ldrb	r3, [r4]
   10920:	cmp	r3, #0
   10924:	popne	{r4, pc}
   10928:	bl	108ac <abort@plt+0x100>
   1092c:	mov	r3, #1
   10930:	strb	r3, [r4]
   10934:	pop	{r4, pc}
   10938:	muleq	r2, r8, r0
   1093c:	ldr	r0, [pc, #40]	; 1096c <abort@plt+0x1c0>
   10940:	ldr	r3, [r0]
   10944:	cmp	r3, #0
   10948:	bne	10950 <abort@plt+0x1a4>
   1094c:	b	108dc <abort@plt+0x130>
   10950:	ldr	r3, [pc, #24]	; 10970 <abort@plt+0x1c4>
   10954:	cmp	r3, #0
   10958:	beq	1094c <abort@plt+0x1a0>
   1095c:	push	{r4, lr}
   10960:	blx	r3
   10964:	pop	{r4, lr}
   10968:	b	108dc <abort@plt+0x130>
   1096c:	andeq	r1, r2, r4, lsl #30
   10970:	andeq	r0, r0, r0
   10974:	push	{r4, r5, r6, lr}
   10978:	mov	r6, r2
   1097c:	ldr	r4, [pc, #84]	; 109d8 <abort@plt+0x22c>
   10980:	mov	r2, r0
   10984:	add	r4, pc, r4
   10988:	mov	r5, r1
   1098c:	mov	r0, r4
   10990:	mov	r1, #99	; 0x63
   10994:	bl	106ec <fgets@plt>
   10998:	cmp	r0, #0
   1099c:	beq	109bc <abort@plt+0x210>
   109a0:	ldr	r1, [pc, #52]	; 109dc <abort@plt+0x230>
   109a4:	mov	r0, r4
   109a8:	mov	r2, r5
   109ac:	add	r1, pc, r1
   109b0:	bl	1077c <__isoc99_sscanf@plt>
   109b4:	cmp	r0, #1
   109b8:	beq	109c4 <abort@plt+0x218>
   109bc:	mov	r0, #0
   109c0:	pop	{r4, r5, r6, pc}
   109c4:	ldr	r2, [r5]
   109c8:	ldr	r3, [r6]
   109cc:	add	r3, r3, r2
   109d0:	str	r3, [r6]
   109d4:	pop	{r4, r5, r6, pc}
   109d8:	andeq	r1, r1, r0, lsl r7
   109dc:	andeq	r0, r0, ip, asr fp
   109e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   109e4:	mov	r8, r1
   109e8:	ldr	r1, [pc, #444]	; 10bac <abort@plt+0x400>
   109ec:	sub	sp, sp, #16
   109f0:	add	r1, pc, r1
   109f4:	mov	r6, r0
   109f8:	mov	r0, r8
   109fc:	bl	110c8 <error@@Base+0x110>
   10a00:	ldr	r5, [pc, #424]	; 10bb0 <abort@plt+0x404>
   10a04:	mov	r1, #99	; 0x63
   10a08:	add	r5, pc, r5
   10a0c:	mov	r2, r0
   10a10:	mov	r4, r0
   10a14:	mov	r0, r5
   10a18:	bl	106ec <fgets@plt>
   10a1c:	cmp	r0, #0
   10a20:	beq	10b88 <abort@plt+0x3dc>
   10a24:	ldr	r1, [pc, #392]	; 10bb4 <abort@plt+0x408>
   10a28:	mov	r2, #42	; 0x2a
   10a2c:	add	r1, pc, r1
   10a30:	mov	r0, r5
   10a34:	bl	107a0 <strncmp@plt>
   10a38:	cmp	r0, #0
   10a3c:	bne	10b88 <abort@plt+0x3dc>
   10a40:	mov	r2, r4
   10a44:	mov	r1, #99	; 0x63
   10a48:	mov	r0, r5
   10a4c:	bl	106ec <fgets@plt>
   10a50:	cmp	r0, #0
   10a54:	beq	10b88 <abort@plt+0x3dc>
   10a58:	ldr	r1, [pc, #344]	; 10bb8 <abort@plt+0x40c>
   10a5c:	mov	r0, r5
   10a60:	add	r1, pc, r1
   10a64:	bl	106c8 <strcmp@plt>
   10a68:	cmp	r0, #0
   10a6c:	bne	10b88 <abort@plt+0x3dc>
   10a70:	add	r7, sp, #8
   10a74:	mov	r1, r7
   10a78:	mov	r2, r6
   10a7c:	mov	r0, r4
   10a80:	bl	10974 <abort@plt+0x1c8>
   10a84:	cmp	r0, #0
   10a88:	beq	10b88 <abort@plt+0x3dc>
   10a8c:	add	r2, r6, #4
   10a90:	mov	r1, r7
   10a94:	mov	r0, r4
   10a98:	bl	10974 <abort@plt+0x1c8>
   10a9c:	cmp	r0, #0
   10aa0:	beq	10b88 <abort@plt+0x3dc>
   10aa4:	add	r2, r6, #8
   10aa8:	add	r1, sp, #4
   10aac:	mov	r0, r4
   10ab0:	bl	10974 <abort@plt+0x1c8>
   10ab4:	cmp	r0, #0
   10ab8:	beq	10b88 <abort@plt+0x3dc>
   10abc:	ldr	r3, [sp, #4]
   10ac0:	cmp	r3, #0
   10ac4:	ble	10b5c <abort@plt+0x3b0>
   10ac8:	mov	r2, r4
   10acc:	mov	r1, #99	; 0x63
   10ad0:	mov	r0, r5
   10ad4:	bl	106ec <fgets@plt>
   10ad8:	cmp	r0, #0
   10adc:	beq	10b5c <abort@plt+0x3b0>
   10ae0:	mov	r0, r5
   10ae4:	mov	r2, r4
   10ae8:	mov	r1, #99	; 0x63
   10aec:	bl	106ec <fgets@plt>
   10af0:	cmp	r0, #0
   10af4:	beq	10b5c <abort@plt+0x3b0>
   10af8:	ldr	r5, [pc, #188]	; 10bbc <abort@plt+0x410>
   10afc:	mov	r2, r4
   10b00:	add	r5, pc, r5
   10b04:	mov	r0, r5
   10b08:	mov	r1, #99	; 0x63
   10b0c:	bl	106ec <fgets@plt>
   10b10:	cmp	r0, #0
   10b14:	beq	10b5c <abort@plt+0x3b0>
   10b18:	ldr	sl, [pc, #160]	; 10bc0 <abort@plt+0x414>
   10b1c:	mov	r8, #99	; 0x63
   10b20:	add	sl, pc, sl
   10b24:	add	r9, sp, #12
   10b28:	mov	r2, r4
   10b2c:	mov	r1, r8
   10b30:	mov	r0, r5
   10b34:	bl	106ec <fgets@plt>
   10b38:	cmp	r0, #0
   10b3c:	beq	10b5c <abort@plt+0x3b0>
   10b40:	mov	r3, r9
   10b44:	mov	r2, r7
   10b48:	mov	r1, sl
   10b4c:	mov	r0, r5
   10b50:	bl	1077c <__isoc99_sscanf@plt>
   10b54:	cmp	r0, #2
   10b58:	beq	10b6c <abort@plt+0x3c0>
   10b5c:	mov	r0, r4
   10b60:	bl	10e5c <abort@plt+0x6b0>
   10b64:	add	sp, sp, #16
   10b68:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b6c:	ldr	r3, [sp, #12]
   10b70:	ldr	r1, [sp, #8]
   10b74:	add	r3, r6, r3, lsl #2
   10b78:	ldr	r2, [r3, #12]
   10b7c:	add	r2, r2, r1
   10b80:	str	r2, [r3, #12]
   10b84:	b	10b28 <abort@plt+0x37c>
   10b88:	cmp	r8, #0
   10b8c:	beq	10ba0 <abort@plt+0x3f4>
   10b90:	ldr	r0, [pc, #44]	; 10bc4 <abort@plt+0x418>
   10b94:	mov	r1, r8
   10b98:	add	r0, pc, r0
   10b9c:	bl	11068 <error@@Base+0xb0>
   10ba0:	ldr	r8, [pc, #32]	; 10bc8 <abort@plt+0x41c>
   10ba4:	add	r8, pc, r8
   10ba8:	b	10b90 <abort@plt+0x3e4>
   10bac:			; <UNDEFINED> instruction: 0x00000ab0
   10bb0:	andeq	r1, r1, ip, lsl #13
   10bb4:	andeq	r0, r0, r8, ror sl
   10bb8:	andeq	r0, r0, r4, ror sl
   10bbc:	muleq	r1, r4, r5
   10bc0:	andeq	r0, r0, r4, ror #19
   10bc4:	andeq	r0, r0, r4, ror r9
   10bc8:	strdeq	r0, [r0], -r4
   10bcc:	mov	r3, r1
   10bd0:	ldr	r1, [pc, #232]	; 10cc0 <abort@plt+0x514>
   10bd4:	push	{r4, r5, r6, r7, r8, lr}
   10bd8:	add	r1, pc, r1
   10bdc:	mov	r5, r0
   10be0:	mov	r0, r3
   10be4:	bl	110c8 <error@@Base+0x110>
   10be8:	ldr	r3, [pc, #212]	; 10cc4 <abort@plt+0x518>
   10bec:	ldr	r2, [pc, #212]	; 10cc8 <abort@plt+0x51c>
   10bf0:	ldr	r1, [pc, #212]	; 10ccc <abort@plt+0x520>
   10bf4:	add	r3, pc, r3
   10bf8:	add	r2, pc, r2
   10bfc:	add	r1, pc, r1
   10c00:	ldr	r4, [pc, #200]	; 10cd0 <abort@plt+0x524>
   10c04:	add	r4, pc, r4
   10c08:	mov	r6, r0
   10c0c:	bl	10770 <fprintf@plt>
   10c10:	ldr	r3, [pc, #188]	; 10cd4 <abort@plt+0x528>
   10c14:	ldr	r2, [r5]
   10c18:	mov	r1, r4
   10c1c:	add	r3, pc, r3
   10c20:	mov	r0, r6
   10c24:	bl	10770 <fprintf@plt>
   10c28:	ldr	r3, [pc, #168]	; 10cd8 <abort@plt+0x52c>
   10c2c:	ldr	r2, [r5, #4]
   10c30:	mov	r1, r4
   10c34:	add	r3, pc, r3
   10c38:	mov	r0, r6
   10c3c:	bl	10770 <fprintf@plt>
   10c40:	ldr	r3, [pc, #148]	; 10cdc <abort@plt+0x530>
   10c44:	mov	r1, r4
   10c48:	add	r3, pc, r3
   10c4c:	ldr	r2, [r5, #8]
   10c50:	mov	r0, r6
   10c54:	bl	10770 <fprintf@plt>
   10c58:	ldr	r3, [r5, #8]
   10c5c:	cmp	r3, #0
   10c60:	ble	10cb4 <abort@plt+0x508>
   10c64:	ldr	r0, [pc, #116]	; 10ce0 <abort@plt+0x534>
   10c68:	mov	r3, r6
   10c6c:	mov	r2, #25
   10c70:	mov	r1, #1
   10c74:	add	r0, pc, r0
   10c78:	bl	1071c <fwrite@plt>
   10c7c:	ldr	r7, [pc, #96]	; 10ce4 <abort@plt+0x538>
   10c80:	add	r5, r5, #12
   10c84:	add	r7, pc, r7
   10c88:	mov	r4, #1
   10c8c:	ldr	ip, [r5, #4]!
   10c90:	mov	r3, r4
   10c94:	subs	r2, ip, #0
   10c98:	mov	r1, r7
   10c9c:	mov	r0, r6
   10ca0:	add	r4, r4, #1
   10ca4:	ble	10cac <abort@plt+0x500>
   10ca8:	bl	10770 <fprintf@plt>
   10cac:	cmp	r4, #101	; 0x65
   10cb0:	bne	10c8c <abort@plt+0x4e0>
   10cb4:	mov	r0, r6
   10cb8:	pop	{r4, r5, r6, r7, r8, lr}
   10cbc:	b	10e5c <abort@plt+0x6b0>
   10cc0:	andeq	r0, r0, r8, asr #18
   10cc4:	andeq	r0, r0, r0, ror #17
   10cc8:	andeq	r0, r0, ip, lsr #17
   10ccc:	andeq	r0, r0, r8, lsr #18
   10cd0:	andeq	r0, r0, r4, lsr r9
   10cd4:	andeq	r0, r0, r0, lsl r9
   10cd8:	andeq	r0, r0, r0, lsl r9
   10cdc:	andeq	r0, r0, r8, lsl #18
   10ce0:	andeq	r0, r0, r4, ror #17
   10ce4:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10ce8:	ldr	r3, [pc, #76]	; 10d3c <abort@plt+0x590>
   10cec:	ldr	r2, [pc, #76]	; 10d40 <abort@plt+0x594>
   10cf0:	add	r3, pc, r3
   10cf4:	push	{r4, r5, lr}
   10cf8:	sub	sp, sp, #116	; 0x74
   10cfc:	ldr	r3, [r3, r2]
   10d00:	mov	r5, r0
   10d04:	ldr	r4, [r3]
   10d08:	bl	1074c <getpid@plt>
   10d0c:	ldr	r1, [pc, #48]	; 10d44 <abort@plt+0x598>
   10d10:	mov	r2, r4
   10d14:	add	r4, sp, #12
   10d18:	add	r1, pc, r1
   10d1c:	str	r5, [sp]
   10d20:	mov	r3, r0
   10d24:	mov	r0, r4
   10d28:	bl	10794 <sprintf@plt>
   10d2c:	mov	r0, r4
   10d30:	bl	106f8 <strdup@plt>
   10d34:	add	sp, sp, #116	; 0x74
   10d38:	pop	{r4, r5, pc}
   10d3c:	andeq	r1, r1, r8, lsl #6
   10d40:	andeq	r0, r0, r0, ror r0
   10d44:	andeq	r0, r0, r8, ror #16
   10d48:	ldr	r3, [pc, #108]	; 10dbc <abort@plt+0x610>
   10d4c:	ldr	r2, [pc, #108]	; 10dc0 <abort@plt+0x614>
   10d50:	add	r3, pc, r3
   10d54:	push	{r7, lr}
   10d58:	mov	r7, r0
   10d5c:	ldr	r3, [r3, r2]
   10d60:	ldr	r3, [r3]
   10d64:	cmp	r3, #0
   10d68:	beq	10d70 <abort@plt+0x5c4>
   10d6c:	blx	r3
   10d70:	ldr	r6, [pc, #76]	; 10dc4 <abort@plt+0x618>
   10d74:	add	r6, pc, r6
   10d78:	ldrsh	r3, [r6]
   10d7c:	cmp	r3, #0
   10d80:	movgt	r4, #1
   10d84:	ble	10db4 <abort@plt+0x608>
   10d88:	mov	r0, r4
   10d8c:	bl	10ce8 <abort@plt+0x53c>
   10d90:	add	r4, r4, #1
   10d94:	sxth	r4, r4
   10d98:	mov	r5, r0
   10d9c:	bl	10704 <unlink@plt>
   10da0:	mov	r0, r5
   10da4:	bl	106e0 <free@plt>
   10da8:	ldrsh	r3, [r6]
   10dac:	cmp	r3, r4
   10db0:	bge	10d88 <abort@plt+0x5dc>
   10db4:	mov	r0, r7
   10db8:	bl	10758 <exit@plt>
   10dbc:	andeq	r1, r1, r8, lsr #5
   10dc0:	andeq	r0, r0, r4, ror r0
   10dc4:	andeq	r1, r1, r4, lsl #7
   10dc8:	ldrb	r3, [r0]
   10dcc:	cmp	r3, #0
   10dd0:	beq	10e34 <abort@plt+0x688>
   10dd4:	ldrb	ip, [r1]
   10dd8:	cmp	ip, r3
   10ddc:	bne	10e44 <abort@plt+0x698>
   10de0:	push	{lr}		; (str lr, [sp, #-4]!)
   10de4:	mov	r2, #0
   10de8:	mov	lr, r1
   10dec:	b	10dfc <abort@plt+0x650>
   10df0:	ldrb	ip, [lr, #1]!
   10df4:	cmp	r3, ip
   10df8:	bne	10e1c <abort@plt+0x670>
   10dfc:	ldrb	r3, [r0, #1]!
   10e00:	add	r2, r2, #1
   10e04:	cmp	r3, #0
   10e08:	bne	10df0 <abort@plt+0x644>
   10e0c:	ldrb	ip, [r1, r2]
   10e10:	cmp	ip, #0
   10e14:	movne	r3, #0
   10e18:	beq	10e2c <abort@plt+0x680>
   10e1c:	cmp	r3, ip
   10e20:	movcs	r0, #1
   10e24:	mvncc	r0, #0
   10e28:	pop	{pc}		; (ldr pc, [sp], #4)
   10e2c:	mov	r0, ip
   10e30:	pop	{pc}		; (ldr pc, [sp], #4)
   10e34:	ldrb	ip, [r1, r3]
   10e38:	cmp	ip, #0
   10e3c:	movne	r3, #0
   10e40:	beq	10e54 <abort@plt+0x6a8>
   10e44:	cmp	r3, ip
   10e48:	movcs	r0, #1
   10e4c:	mvncc	r0, #0
   10e50:	bx	lr
   10e54:	mov	r0, ip
   10e58:	bx	lr
   10e5c:	ldr	r2, [pc, #44]	; 10e90 <abort@plt+0x6e4>
   10e60:	ldr	r3, [pc, #44]	; 10e94 <abort@plt+0x6e8>
   10e64:	add	r2, pc, r2
   10e68:	ldr	r3, [r2, r3]
   10e6c:	ldr	r3, [r3]
   10e70:	cmp	r3, r0
   10e74:	bxeq	lr
   10e78:	ldr	r3, [pc, #24]	; 10e98 <abort@plt+0x6ec>
   10e7c:	ldr	r3, [r2, r3]
   10e80:	ldr	r3, [r3]
   10e84:	cmp	r0, r3
   10e88:	bxeq	lr
   10e8c:	b	10788 <fclose@plt>
   10e90:	muleq	r1, r4, r1
   10e94:	andeq	r0, r0, r8, ror r0
   10e98:	andeq	r0, r0, r0, lsl #1
   10e9c:	push	{lr}		; (str lr, [sp, #-4]!)
   10ea0:	sub	sp, sp, #92	; 0x5c
   10ea4:	mov	r1, r0
   10ea8:	mov	r2, sp
   10eac:	mov	r0, #3
   10eb0:	bl	10710 <__xstat@plt>
   10eb4:	clz	r0, r0
   10eb8:	lsr	r0, r0, #5
   10ebc:	add	sp, sp, #92	; 0x5c
   10ec0:	pop	{pc}		; (ldr pc, [sp], #4)
   10ec4:	ldr	r2, [pc, #44]	; 10ef8 <abort@plt+0x74c>
   10ec8:	push	{r4, lr}
   10ecc:	add	r2, pc, r2
   10ed0:	ldrh	r3, [r2]
   10ed4:	add	r3, r3, #1
   10ed8:	sxth	r3, r3
   10edc:	mov	r0, r3
   10ee0:	strh	r3, [r2]
   10ee4:	bl	10ce8 <abort@plt+0x53c>
   10ee8:	mov	r4, r0
   10eec:	bl	10704 <unlink@plt>
   10ef0:	mov	r0, r4
   10ef4:	pop	{r4, pc}
   10ef8:	andeq	r1, r1, ip, lsr #4
   10efc:	push	{r4, lr}
   10f00:	mov	r4, r0
   10f04:	bl	10764 <strlen@plt>
   10f08:	sub	r0, r0, #1
   10f0c:	sxth	r0, r0
   10f10:	cmp	r0, #0
   10f14:	bge	10f2c <abort@plt+0x780>
   10f18:	b	10f38 <abort@plt+0x78c>
   10f1c:	sub	r0, r0, #1
   10f20:	sxth	r0, r0
   10f24:	cmn	r0, #1
   10f28:	beq	10f38 <abort@plt+0x78c>
   10f2c:	ldrb	r3, [r4, r0]
   10f30:	cmp	r3, #47	; 0x2f
   10f34:	bne	10f1c <abort@plt+0x770>
   10f38:	add	r0, r0, #1
   10f3c:	add	r0, r4, r0
   10f40:	pop	{r4, pc}
   10f44:	push	{r4, lr}
   10f48:	mov	r0, #0
   10f4c:	bl	10d48 <abort@plt+0x59c>
   10f50:	ldr	r1, [pc, #76]	; 10fa4 <abort@plt+0x7f8>
   10f54:	ldr	r2, [pc, #76]	; 10fa8 <abort@plt+0x7fc>
   10f58:	add	r1, pc, r1
   10f5c:	push	{r4, lr}
   10f60:	ldr	r2, [r1, r2]
   10f64:	ldr	r2, [r2]
   10f68:	cmp	r2, #0
   10f6c:	beq	10f78 <abort@plt+0x7cc>
   10f70:	blx	r2
   10f74:	bl	10f44 <abort@plt+0x798>
   10f78:	ldr	r2, [pc, #44]	; 10fac <abort@plt+0x800>
   10f7c:	ldr	ip, [pc, #44]	; 10fb0 <abort@plt+0x804>
   10f80:	mov	r3, r0
   10f84:	ldr	r0, [r1, r2]
   10f88:	ldr	ip, [r1, ip]
   10f8c:	ldr	r1, [pc, #32]	; 10fb4 <abort@plt+0x808>
   10f90:	ldr	r0, [r0]
   10f94:	add	r1, pc, r1
   10f98:	ldr	r2, [ip]
   10f9c:	bl	10770 <fprintf@plt>
   10fa0:	b	10f74 <abort@plt+0x7c8>
   10fa4:	andeq	r1, r1, r0, lsr #1
   10fa8:	andeq	r0, r0, r4, rrx
   10fac:	andeq	r0, r0, r8, rrx
   10fb0:	andeq	r0, r0, r0, ror r0
   10fb4:	strdeq	r0, [r0], -ip

00010fb8 <error@@Base>:
   10fb8:	push	{r4, lr}
   10fbc:	mov	r3, r0
   10fc0:	ldr	r4, [pc, #52]	; 10ffc <error@@Base+0x44>
   10fc4:	ldr	r1, [pc, #52]	; 11000 <error@@Base+0x48>
   10fc8:	ldr	r2, [pc, #52]	; 11004 <error@@Base+0x4c>
   10fcc:	add	r4, pc, r4
   10fd0:	ldr	ip, [r4, r1]
   10fd4:	ldr	r0, [r4, r2]
   10fd8:	ldr	r1, [pc, #40]	; 11008 <error@@Base+0x50>
   10fdc:	ldr	r2, [ip]
   10fe0:	add	r1, pc, r1
   10fe4:	ldr	r0, [r0]
   10fe8:	bl	10770 <fprintf@plt>
   10fec:	ldr	r3, [pc, #24]	; 1100c <error@@Base+0x54>
   10ff0:	ldr	r3, [r4, r3]
   10ff4:	ldr	r0, [r3]
   10ff8:	bl	10d48 <abort@plt+0x59c>
   10ffc:	andeq	r1, r1, ip, lsr #32
   11000:	andeq	r0, r0, r0, ror r0
   11004:	andeq	r0, r0, r8, rrx
   11008:	andeq	r0, r0, r0, asr #11
   1100c:	andeq	r0, r0, r4, lsl #1
   11010:	push	{r4, lr}
   11014:	bl	106bc <calloc@plt>
   11018:	cmp	r0, #0
   1101c:	popne	{r4, pc}
   11020:	ldr	r0, [pc, #4]	; 1102c <error@@Base+0x74>
   11024:	add	r0, pc, r0
   11028:	bl	10fb8 <error@@Base>
   1102c:	andeq	r0, r0, r4, lsl #11
   11030:	ldr	r3, [pc, #40]	; 11060 <error@@Base+0xa8>
   11034:	add	r3, pc, r3
   11038:	ldrb	r2, [r3, #2]
   1103c:	cmp	r2, #0
   11040:	beq	11048 <error@@Base+0x90>
   11044:	bx	lr
   11048:	ldr	r0, [pc, #20]	; 11064 <error@@Base+0xac>
   1104c:	push	{r4, lr}
   11050:	mov	r2, #1
   11054:	add	r0, pc, r0
   11058:	strb	r2, [r3, #2]
   1105c:	bl	10fb8 <error@@Base>
   11060:	andeq	r1, r1, r4, asr #1
   11064:	andeq	r0, r0, r0, ror r5
   11068:	ldr	r4, [pc, #68]	; 110b4 <error@@Base+0xfc>
   1106c:	ldr	r2, [pc, #68]	; 110b8 <error@@Base+0x100>
   11070:	ldr	ip, [pc, #68]	; 110bc <error@@Base+0x104>
   11074:	add	r4, pc, r4
   11078:	push	{lr}		; (str lr, [sp, #-4]!)
   1107c:	sub	sp, sp, #12
   11080:	mov	r3, r0
   11084:	ldr	ip, [r4, ip]
   11088:	ldr	r0, [r4, r2]
   1108c:	str	r1, [sp]
   11090:	ldr	r1, [pc, #40]	; 110c0 <error@@Base+0x108>
   11094:	ldr	r2, [ip]
   11098:	ldr	r0, [r0]
   1109c:	add	r1, pc, r1
   110a0:	bl	10770 <fprintf@plt>
   110a4:	ldr	r3, [pc, #24]	; 110c4 <error@@Base+0x10c>
   110a8:	ldr	r3, [r4, r3]
   110ac:	ldr	r0, [r3]
   110b0:	bl	10d48 <abort@plt+0x59c>
   110b4:	andeq	r0, r1, r4, lsl #31
   110b8:	andeq	r0, r0, r8, rrx
   110bc:	andeq	r0, r0, r0, ror r0
   110c0:	andeq	r0, r0, r8, lsr r5
   110c4:	andeq	r0, r0, r4, lsl #1
   110c8:	ldr	ip, [pc, #116]	; 11144 <error@@Base+0x18c>
   110cc:	subs	r2, r0, #0
   110d0:	push	{r4, r5, r6, lr}
   110d4:	add	ip, pc, ip
   110d8:	mov	r4, r1
   110dc:	beq	1110c <error@@Base+0x154>
   110e0:	mov	r5, r2
   110e4:	bl	106d4 <fopen@plt>
   110e8:	cmp	r0, #0
   110ec:	popne	{r4, r5, r6, pc}
   110f0:	ldrb	r3, [r4]
   110f4:	mov	r1, r5
   110f8:	cmp	r3, #119	; 0x77
   110fc:	beq	11138 <error@@Base+0x180>
   11100:	ldr	r0, [pc, #64]	; 11148 <error@@Base+0x190>
   11104:	add	r0, pc, r0
   11108:	bl	11068 <error@@Base+0xb0>
   1110c:	ldrb	r3, [r1]
   11110:	cmp	r3, #114	; 0x72
   11114:	beq	11128 <error@@Base+0x170>
   11118:	ldr	r3, [pc, #44]	; 1114c <error@@Base+0x194>
   1111c:	ldr	r3, [ip, r3]
   11120:	ldr	r0, [r3]
   11124:	pop	{r4, r5, r6, pc}
   11128:	ldr	r3, [pc, #32]	; 11150 <error@@Base+0x198>
   1112c:	ldr	r3, [ip, r3]
   11130:	ldr	r0, [r3]
   11134:	pop	{r4, r5, r6, pc}
   11138:	ldr	r0, [pc, #20]	; 11154 <error@@Base+0x19c>
   1113c:	add	r0, pc, r0
   11140:	bl	11068 <error@@Base+0xb0>
   11144:	andeq	r0, r1, r4, lsr #30
   11148:	strdeq	r0, [r0], -r8
   1114c:	andeq	r0, r0, r0, lsl #1
   11150:	andeq	r0, r0, r8, ror r0
   11154:	andeq	r0, r0, r8, lsr #9
   11158:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1115c:	sub	sp, sp, #20
   11160:	mov	r7, r0
   11164:	str	r0, [sp, #8]
   11168:	ldr	r0, [r1]
   1116c:	str	r2, [sp, #12]
   11170:	mov	r9, r1
   11174:	mov	r6, r3
   11178:	bl	10efc <abort@plt+0x750>
   1117c:	ldr	r5, [pc, #496]	; 11374 <error@@Base+0x3bc>
   11180:	ldr	r3, [pc, #496]	; 11378 <error@@Base+0x3c0>
   11184:	add	r5, pc, r5
   11188:	ldr	r4, [pc, #492]	; 1137c <error@@Base+0x3c4>
   1118c:	ldr	r3, [r5, r3]
   11190:	add	r4, pc, r4
   11194:	mov	r1, r4
   11198:	str	r0, [r3]
   1119c:	mov	r0, #2
   111a0:	bl	10734 <__sysv_signal@plt>
   111a4:	mov	r1, r4
   111a8:	mov	r0, #15
   111ac:	bl	10734 <__sysv_signal@plt>
   111b0:	ldr	fp, [r7]
   111b4:	cmp	fp, #1
   111b8:	beq	11300 <error@@Base+0x348>
   111bc:	mov	r7, #0
   111c0:	ble	11314 <error@@Base+0x35c>
   111c4:	ldr	r3, [pc, #436]	; 11380 <error@@Base+0x3c8>
   111c8:	mov	sl, #1
   111cc:	add	r3, pc, r3
   111d0:	str	r3, [sp, #4]
   111d4:	mov	r4, sl
   111d8:	mov	r3, fp
   111dc:	b	11200 <error@@Base+0x248>
   111e0:	add	r2, r7, #1
   111e4:	str	r5, [r9, r7, lsl #2]
   111e8:	sxth	r7, r2
   111ec:	add	r4, r4, #1
   111f0:	sxth	r4, r4
   111f4:	cmp	r4, r3
   111f8:	mov	sl, r4
   111fc:	bge	11314 <error@@Base+0x35c>
   11200:	ldr	r5, [r9, r4, lsl #2]
   11204:	lsl	fp, r4, #2
   11208:	ldrb	r2, [r5]
   1120c:	cmp	r2, #45	; 0x2d
   11210:	bne	111e0 <error@@Base+0x228>
   11214:	ldrb	r8, [r5, #1]
   11218:	cmp	r8, #0
   1121c:	beq	111e0 <error@@Base+0x228>
   11220:	mov	r0, r5
   11224:	str	r3, [sp]
   11228:	bl	10764 <strlen@plt>
   1122c:	mov	r1, r5
   11230:	mov	r2, r0
   11234:	ldr	r0, [sp, #4]
   11238:	bl	107a0 <strncmp@plt>
   1123c:	cmp	r0, #0
   11240:	beq	1135c <error@@Base+0x3a4>
   11244:	ldr	r3, [sp]
   11248:	add	sl, sl, #1
   1124c:	cmp	sl, r3
   11250:	addlt	fp, r9, fp
   11254:	movge	ip, #0
   11258:	ldrlt	ip, [fp, #4]
   1125c:	cmp	r6, #0
   11260:	beq	112a4 <error@@Base+0x2ec>
   11264:	ldrb	r2, [r6]
   11268:	cmp	r2, #0
   1126c:	beq	112a4 <error@@Base+0x2ec>
   11270:	cmp	r2, r8
   11274:	beq	112b4 <error@@Base+0x2fc>
   11278:	mov	r2, #0
   1127c:	b	11288 <error@@Base+0x2d0>
   11280:	cmp	r8, r0
   11284:	beq	112b8 <error@@Base+0x300>
   11288:	add	r2, r2, #1
   1128c:	sxth	r2, r2
   11290:	add	r1, r2, r2, lsl #1
   11294:	ldrb	r0, [r6, r1, lsl #2]
   11298:	add	r1, r6, r1, lsl #2
   1129c:	cmp	r0, #0
   112a0:	bne	11280 <error@@Base+0x2c8>
   112a4:	ldr	r0, [pc, #216]	; 11384 <error@@Base+0x3cc>
   112a8:	mov	r1, r5
   112ac:	add	r0, pc, r0
   112b0:	bl	11068 <error@@Base+0xb0>
   112b4:	mov	r1, r6
   112b8:	ldr	r2, [r1, #4]
   112bc:	cmp	r2, #0
   112c0:	beq	11324 <error@@Base+0x36c>
   112c4:	ldrb	r0, [r5, #2]
   112c8:	cmp	r0, #0
   112cc:	cmpeq	ip, #0
   112d0:	beq	11324 <error@@Base+0x36c>
   112d4:	ldr	r1, [r2]
   112d8:	cmp	r1, #0
   112dc:	bne	11364 <error@@Base+0x3ac>
   112e0:	cmp	r0, #0
   112e4:	addne	ip, r5, #2
   112e8:	str	ip, [r2]
   112ec:	ldrb	r2, [r5, #2]
   112f0:	cmp	r2, #0
   112f4:	addeq	r4, r4, #1
   112f8:	sxtheq	r4, r4
   112fc:	b	111ec <error@@Base+0x234>
   11300:	ldr	r3, [pc, #128]	; 11388 <error@@Base+0x3d0>
   11304:	ldr	r3, [r5, r3]
   11308:	ldrb	r7, [r3]
   1130c:	cmp	r7, #0
   11310:	bne	1135c <error@@Base+0x3a4>
   11314:	ldr	r3, [sp, #8]
   11318:	str	r7, [r3]
   1131c:	add	sp, sp, #20
   11320:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11324:	ldr	r3, [r1, #8]
   11328:	cmp	r3, #0
   1132c:	beq	112a4 <error@@Base+0x2ec>
   11330:	ldrb	r2, [r5, #2]
   11334:	cmp	r2, #0
   11338:	bne	112a4 <error@@Base+0x2ec>
   1133c:	ldrb	r2, [r3]
   11340:	cmp	r2, #0
   11344:	bne	11364 <error@@Base+0x3ac>
   11348:	mov	r2, #1
   1134c:	strb	r2, [r3]
   11350:	ldr	r3, [sp, #8]
   11354:	ldr	r3, [r3]
   11358:	b	111ec <error@@Base+0x234>
   1135c:	ldr	r0, [sp, #12]
   11360:	bl	10f50 <abort@plt+0x7a4>
   11364:	ldr	r0, [pc, #32]	; 1138c <error@@Base+0x3d4>
   11368:	mov	r1, r5
   1136c:	add	r0, pc, r0
   11370:	bl	11068 <error@@Base+0xb0>
   11374:	andeq	r0, r1, r4, ror lr
   11378:	andeq	r0, r0, r0, ror r0
   1137c:			; <UNDEFINED> instruction: 0xfffffe98
   11380:	andeq	r0, r0, r4, asr #8
   11384:	andeq	r0, r0, ip, ror #6
   11388:	andeq	r0, r0, r0, rrx
   1138c:			; <UNDEFINED> instruction: 0x000002bc
   11390:	ldr	ip, [pc, #60]	; 113d4 <error@@Base+0x41c>
   11394:	push	{lr}		; (str lr, [sp, #-4]!)
   11398:	add	ip, pc, ip
   1139c:	ldr	r2, [pc, #52]	; 113d8 <error@@Base+0x420>
   113a0:	ldr	lr, [pc, #52]	; 113dc <error@@Base+0x424>
   113a4:	sub	sp, sp, #12
   113a8:	mov	r3, r0
   113ac:	ldr	lr, [ip, lr]
   113b0:	ldr	r0, [ip, r2]
   113b4:	str	r1, [sp]
   113b8:	ldr	r1, [pc, #32]	; 113e0 <error@@Base+0x428>
   113bc:	ldr	r2, [lr]
   113c0:	add	r1, pc, r1
   113c4:	ldr	r0, [r0]
   113c8:	bl	10770 <fprintf@plt>
   113cc:	add	sp, sp, #12
   113d0:	pop	{pc}		; (ldr pc, [sp], #4)
   113d4:	andeq	r0, r1, r0, ror #24
   113d8:	andeq	r0, r0, r8, rrx
   113dc:	andeq	r0, r0, r0, ror r0
   113e0:	andeq	r0, r0, r4, lsl r2
   113e4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   113e8:	mov	r7, r0
   113ec:	ldr	r6, [pc, #72]	; 1143c <error@@Base+0x484>
   113f0:	ldr	r5, [pc, #72]	; 11440 <error@@Base+0x488>
   113f4:	add	r6, pc, r6
   113f8:	add	r5, pc, r5
   113fc:	sub	r6, r6, r5
   11400:	mov	r8, r1
   11404:	mov	r9, r2
   11408:	bl	1069c <calloc@plt-0x20>
   1140c:	asrs	r6, r6, #2
   11410:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11414:	mov	r4, #0
   11418:	add	r4, r4, #1
   1141c:	ldr	r3, [r5], #4
   11420:	mov	r2, r9
   11424:	mov	r1, r8
   11428:	mov	r0, r7
   1142c:	blx	r3
   11430:	cmp	r6, r4
   11434:	bne	11418 <error@@Base+0x460>
   11438:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1143c:	andeq	r0, r1, r4, lsl #22
   11440:	strdeq	r0, [r1], -ip
   11444:	bx	lr

Disassembly of section .fini:

00011448 <.fini>:
   11448:	push	{r3, lr}
   1144c:	pop	{r3, pc}
