
../repos/sgerbino-table-2fdd8d0/bin/table_memtest:     file format elf32-littlearm


Disassembly of section .init:

00011ec0 <.init>:
   11ec0:	push	{r3, lr}
   11ec4:	bl	11fc4 <_start@@Base+0x3c>
   11ec8:	pop	{r3, pc}

Disassembly of section .plt:

00011ecc <strcmp@plt-0x14>:
   11ecc:	push	{lr}		; (str lr, [sp, #-4]!)
   11ed0:	ldr	lr, [pc, #4]	; 11edc <strcmp@plt-0x4>
   11ed4:	add	lr, pc, lr
   11ed8:	ldr	pc, [lr, #8]!
   11edc:	andeq	r4, r1, r4, lsr #2

00011ee0 <strcmp@plt>:
   11ee0:	add	ip, pc, #0, 12
   11ee4:	add	ip, ip, #20, 20	; 0x14000
   11ee8:	ldr	pc, [ip, #292]!	; 0x124

00011eec <free@plt>:
   11eec:	add	ip, pc, #0, 12
   11ef0:	add	ip, ip, #20, 20	; 0x14000
   11ef4:	ldr	pc, [ip, #284]!	; 0x11c

00011ef8 <time@plt>:
   11ef8:	add	ip, pc, #0, 12
   11efc:	add	ip, ip, #20, 20	; 0x14000
   11f00:	ldr	pc, [ip, #276]!	; 0x114

00011f04 <realloc@plt>:
   11f04:	add	ip, pc, #0, 12
   11f08:	add	ip, ip, #20, 20	; 0x14000
   11f0c:	ldr	pc, [ip, #268]!	; 0x10c

00011f10 <strcpy@plt>:
   11f10:	add	ip, pc, #0, 12
   11f14:	add	ip, ip, #20, 20	; 0x14000
   11f18:	ldr	pc, [ip, #260]!	; 0x104

00011f1c <malloc@plt>:
   11f1c:	add	ip, pc, #0, 12
   11f20:	add	ip, ip, #20, 20	; 0x14000
   11f24:	ldr	pc, [ip, #252]!	; 0xfc

00011f28 <__libc_start_main@plt>:
   11f28:	add	ip, pc, #0, 12
   11f2c:	add	ip, ip, #20, 20	; 0x14000
   11f30:	ldr	pc, [ip, #244]!	; 0xf4

00011f34 <__gmon_start__@plt>:
   11f34:	add	ip, pc, #0, 12
   11f38:	add	ip, ip, #20, 20	; 0x14000
   11f3c:	ldr	pc, [ip, #236]!	; 0xec

00011f40 <strlen@plt>:
   11f40:	add	ip, pc, #0, 12
   11f44:	add	ip, ip, #20, 20	; 0x14000
   11f48:	ldr	pc, [ip, #228]!	; 0xe4

00011f4c <srand@plt>:
   11f4c:	add	ip, pc, #0, 12
   11f50:	add	ip, ip, #20, 20	; 0x14000
   11f54:	ldr	pc, [ip, #220]!	; 0xdc

00011f58 <snprintf@plt>:
   11f58:	add	ip, pc, #0, 12
   11f5c:	add	ip, ip, #20, 20	; 0x14000
   11f60:	ldr	pc, [ip, #212]!	; 0xd4

00011f64 <__isoc99_sscanf@plt>:
   11f64:	add	ip, pc, #0, 12
   11f68:	add	ip, ip, #20, 20	; 0x14000
   11f6c:	ldr	pc, [ip, #204]!	; 0xcc

00011f70 <rand@plt>:
   11f70:	add	ip, pc, #0, 12
   11f74:	add	ip, ip, #20, 20	; 0x14000
   11f78:	ldr	pc, [ip, #196]!	; 0xc4

00011f7c <abort@plt>:
   11f7c:	add	ip, pc, #0, 12
   11f80:	add	ip, ip, #20, 20	; 0x14000
   11f84:	ldr	pc, [ip, #188]!	; 0xbc

Disassembly of section .text:

00011f88 <_start@@Base>:
   11f88:	mov	fp, #0
   11f8c:	mov	lr, #0
   11f90:	pop	{r1}		; (ldr r1, [sp], #4)
   11f94:	mov	r2, sp
   11f98:	push	{r2}		; (str r2, [sp, #-4]!)
   11f9c:	push	{r0}		; (str r0, [sp, #-4]!)
   11fa0:	ldr	ip, [pc, #16]	; 11fb8 <_start@@Base+0x30>
   11fa4:	push	{ip}		; (str ip, [sp, #-4]!)
   11fa8:	ldr	r0, [pc, #12]	; 11fbc <_start@@Base+0x34>
   11fac:	ldr	r3, [pc, #12]	; 11fc0 <_start@@Base+0x38>
   11fb0:	bl	11f28 <__libc_start_main@plt>
   11fb4:	bl	11f7c <abort@plt>
   11fb8:	ldrdeq	r5, [r1], -r8
   11fbc:	andeq	r2, r1, r8, ror r0
   11fc0:	andeq	r5, r1, r8, ror r4
   11fc4:	ldr	r3, [pc, #20]	; 11fe0 <_start@@Base+0x58>
   11fc8:	ldr	r2, [pc, #20]	; 11fe4 <_start@@Base+0x5c>
   11fcc:	add	r3, pc, r3
   11fd0:	ldr	r2, [r3, r2]
   11fd4:	cmp	r2, #0
   11fd8:	bxeq	lr
   11fdc:	b	11f34 <__gmon_start__@plt>
   11fe0:	andeq	r4, r1, ip, lsr #32
   11fe4:	andeq	r0, r0, r4, asr #32
   11fe8:	ldr	r0, [pc, #24]	; 12008 <_start@@Base+0x80>
   11fec:	ldr	r3, [pc, #24]	; 1200c <_start@@Base+0x84>
   11ff0:	cmp	r3, r0
   11ff4:	bxeq	lr
   11ff8:	ldr	r3, [pc, #16]	; 12010 <_start@@Base+0x88>
   11ffc:	cmp	r3, #0
   12000:	bxeq	lr
   12004:	bx	r3
   12008:	andeq	r6, r2, r0, asr r0
   1200c:	andeq	r6, r2, r0, asr r0
   12010:	andeq	r0, r0, r0
   12014:	ldr	r0, [pc, #36]	; 12040 <_start@@Base+0xb8>
   12018:	ldr	r1, [pc, #36]	; 12044 <_start@@Base+0xbc>
   1201c:	sub	r1, r1, r0
   12020:	asr	r1, r1, #2
   12024:	add	r1, r1, r1, lsr #31
   12028:	asrs	r1, r1, #1
   1202c:	bxeq	lr
   12030:	ldr	r3, [pc, #16]	; 12048 <_start@@Base+0xc0>
   12034:	cmp	r3, #0
   12038:	bxeq	lr
   1203c:	bx	r3
   12040:	andeq	r6, r2, r0, asr r0
   12044:	andeq	r6, r2, r0, asr r0
   12048:	andeq	r0, r0, r0
   1204c:	push	{r4, lr}
   12050:	ldr	r4, [pc, #24]	; 12070 <_start@@Base+0xe8>
   12054:	ldrb	r3, [r4]
   12058:	cmp	r3, #0
   1205c:	popne	{r4, pc}
   12060:	bl	11fe8 <_start@@Base+0x60>
   12064:	mov	r3, #1
   12068:	strb	r3, [r4]
   1206c:	pop	{r4, pc}
   12070:	andeq	r6, r2, r0, asr r0
   12074:	b	12014 <_start@@Base+0x8c>

00012078 <main@@Base>:
   12078:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1207c:	add	fp, sp, #24
   12080:	sub	sp, sp, #16
   12084:	mov	r7, #0
   12088:	str	r7, [sp, #12]
   1208c:	bl	121b4 <table_new@@Base>
   12090:	mov	r4, r0
   12094:	add	r0, sp, #8
   12098:	bl	11ef8 <time@plt>
   1209c:	bl	11f4c <srand@plt>
   120a0:	ldr	r1, [pc, #244]	; 1219c <main@@Base+0x124>
   120a4:	add	r2, sp, #12
   120a8:	mov	r0, r4
   120ac:	mvn	r3, #0
   120b0:	add	r1, pc, r1
   120b4:	bl	12898 <table_register_callback@@Base>
   120b8:	add	r5, sp, #6
   120bc:	mov	r6, #0
   120c0:	mov	r0, r4
   120c4:	mov	r1, r5
   120c8:	mov	r2, r6
   120cc:	strh	r7, [sp, #6]
   120d0:	strb	r6, [sp, #6]
   120d4:	bl	12c78 <table_add_column@@Base>
   120d8:	add	r6, r6, #1
   120dc:	cmp	r6, #24
   120e0:	bne	120c0 <main@@Base+0x48>
   120e4:	mov	r0, r4
   120e8:	bl	12bf0 <table_get_column_length@@Base>
   120ec:	mov	r8, r0
   120f0:	mov	r9, #0
   120f4:	mov	r6, #0
   120f8:	mov	r0, #64	; 0x40
   120fc:	bl	11f1c <malloc@plt>
   12100:	mov	r7, r0
   12104:	mov	r5, #0
   12108:	bl	11f70 <rand@plt>
   1210c:	asr	r1, r0, #31
   12110:	add	r1, r0, r1, lsr #25
   12114:	and	r1, r1, #128	; 0x80
   12118:	sub	r0, r0, r1
   1211c:	strb	r0, [r7, r5]
   12120:	add	r5, r5, #1
   12124:	cmp	r5, #63	; 0x3f
   12128:	bne	12108 <main@@Base+0x90>
   1212c:	mov	r0, r4
   12130:	strb	r9, [r7, #63]	; 0x3f
   12134:	bl	1391c <table_add_row@@Base>
   12138:	cmp	r8, #1
   1213c:	blt	12174 <main@@Base+0xfc>
   12140:	mov	r5, #0
   12144:	mov	r0, r4
   12148:	mov	r1, r5
   1214c:	bl	12c64 <table_get_column_data_type@@Base>
   12150:	str	r0, [sp]
   12154:	mov	r0, r4
   12158:	mov	r1, r6
   1215c:	mov	r2, r5
   12160:	mov	r3, r7
   12164:	bl	13adc <table_set@@Base>
   12168:	add	r5, r5, #1
   1216c:	cmp	r8, r5
   12170:	bne	12144 <main@@Base+0xcc>
   12174:	mov	r0, r7
   12178:	bl	11eec <free@plt>
   1217c:	add	r6, r6, #1
   12180:	cmp	r6, #500	; 0x1f4
   12184:	bne	120f8 <main@@Base+0x80>
   12188:	mov	r0, r4
   1218c:	bl	12244 <table_delete@@Base>
   12190:	mov	r0, #0
   12194:	sub	sp, fp, #24
   12198:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1219c:	andeq	r0, r0, r8, ror #1
   121a0:	ldr	r0, [sp]
   121a4:	ldr	r1, [r0]
   121a8:	orr	r1, r1, r3
   121ac:	str	r1, [r0]
   121b0:	bx	lr

000121b4 <table_new@@Base>:
   121b4:	push	{fp, lr}
   121b8:	mov	fp, sp
   121bc:	mov	r0, #56	; 0x38
   121c0:	bl	11f1c <malloc@plt>
   121c4:	mov	r1, #0
   121c8:	mov	r2, #10
   121cc:	mov	r3, #20
   121d0:	vmov.i32	q8, #0	; 0x00000000
   121d4:	str	r1, [r0]
   121d8:	stmib	r0, {r1, r2}
   121dc:	str	r1, [r0, #12]
   121e0:	str	r1, [r0, #16]
   121e4:	str	r1, [r0, #20]
   121e8:	str	r3, [r0, #24]
   121ec:	str	r1, [r0, #28]
   121f0:	str	r2, [r0, #48]	; 0x30
   121f4:	str	r1, [r0, #52]	; 0x34
   121f8:	add	r1, r0, #32
   121fc:	vst1.32	{d16-d17}, [r1]
   12200:	pop	{fp, pc}

00012204 <table_init@@Base>:
   12204:	mov	r1, #0
   12208:	mov	r2, #10
   1220c:	mov	r3, #20
   12210:	vmov.i32	q8, #0	; 0x00000000
   12214:	str	r1, [r0]
   12218:	stmib	r0, {r1, r2}
   1221c:	str	r1, [r0, #12]
   12220:	str	r1, [r0, #16]
   12224:	str	r1, [r0, #20]
   12228:	str	r3, [r0, #24]
   1222c:	str	r1, [r0, #28]
   12230:	str	r2, [r0, #48]	; 0x30
   12234:	str	r1, [r0, #52]	; 0x34
   12238:	add	r0, r0, #32
   1223c:	vst1.32	{d16-d17}, [r0]
   12240:	bx	lr

00012244 <table_delete@@Base>:
   12244:	push	{r4, sl, fp, lr}
   12248:	add	fp, sp, #8
   1224c:	mov	r4, r0
   12250:	bl	12260 <table_destroy@@Base>
   12254:	mov	r0, r4
   12258:	pop	{r4, sl, fp, lr}
   1225c:	b	11eec <free@plt>

00012260 <table_destroy@@Base>:
   12260:	cmp	r0, #0
   12264:	bxeq	lr
   12268:	push	{r4, r5, r6, sl, fp, lr}
   1226c:	add	fp, sp, #16
   12270:	mvn	r1, #0
   12274:	mvn	r2, #0
   12278:	mov	r3, #64	; 0x40
   1227c:	mov	r4, r0
   12280:	bl	12afc <table_notify@@Base>
   12284:	mov	r0, r4
   12288:	bl	13914 <table_get_row_length@@Base>
   1228c:	cmp	r0, #1
   12290:	blt	122b4 <table_destroy@@Base+0x54>
   12294:	mov	r5, r0
   12298:	mov	r6, #0
   1229c:	mov	r0, r4
   122a0:	mov	r1, r6
   122a4:	bl	138bc <table_row_destroy@@Base>
   122a8:	add	r6, r6, #1
   122ac:	cmp	r5, r6
   122b0:	bne	1229c <table_destroy@@Base+0x3c>
   122b4:	ldr	r0, [r4, #16]
   122b8:	cmp	r0, #0
   122bc:	beq	122c4 <table_destroy@@Base+0x64>
   122c0:	bl	11eec <free@plt>
   122c4:	mov	r0, r4
   122c8:	bl	12bf0 <table_get_column_length@@Base>
   122cc:	cmp	r0, #1
   122d0:	blt	122f4 <table_destroy@@Base+0x94>
   122d4:	mov	r5, r0
   122d8:	mov	r6, #0
   122dc:	mov	r0, r4
   122e0:	mov	r1, r6
   122e4:	bl	12bd8 <table_column_destroy@@Base>
   122e8:	add	r6, r6, #1
   122ec:	cmp	r5, r6
   122f0:	bne	122dc <table_destroy@@Base+0x7c>
   122f4:	ldr	r0, [r4]
   122f8:	cmp	r0, #0
   122fc:	beq	12304 <table_destroy@@Base+0xa4>
   12300:	bl	11eec <free@plt>
   12304:	ldr	r0, [r4, #36]	; 0x24
   12308:	cmp	r0, #0
   1230c:	beq	12314 <table_destroy@@Base+0xb4>
   12310:	bl	11eec <free@plt>
   12314:	ldr	r0, [r4, #40]	; 0x28
   12318:	cmp	r0, #0
   1231c:	beq	12324 <table_destroy@@Base+0xc4>
   12320:	bl	11eec <free@plt>
   12324:	ldr	r0, [r4, #44]	; 0x2c
   12328:	cmp	r0, #0
   1232c:	pop	{r4, r5, r6, sl, fp, lr}
   12330:	beq	12338 <table_destroy@@Base+0xd8>
   12334:	b	11eec <free@plt>
   12338:	bx	lr

0001233c <table_dupe@@Base>:
   1233c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12340:	add	fp, sp, #28
   12344:	sub	sp, sp, #12
   12348:	mov	r4, r0
   1234c:	bl	13914 <table_get_row_length@@Base>
   12350:	mov	r8, r0
   12354:	mov	r0, r4
   12358:	bl	12bf0 <table_get_column_length@@Base>
   1235c:	mov	r6, r0
   12360:	mov	r0, #56	; 0x38
   12364:	bl	11f1c <malloc@plt>
   12368:	mov	sl, r0
   1236c:	mov	r5, #0
   12370:	mov	r0, #10
   12374:	mov	r1, #20
   12378:	cmp	r6, #1
   1237c:	vmov.i32	q8, #0	; 0x00000000
   12380:	str	r5, [sl]
   12384:	str	r5, [sl, #4]
   12388:	str	r0, [sl, #8]
   1238c:	str	r5, [sl, #12]
   12390:	str	r5, [sl, #16]
   12394:	str	r5, [sl, #20]
   12398:	str	r1, [sl, #24]
   1239c:	str	r5, [sl, #28]
   123a0:	str	r0, [sl, #48]	; 0x30
   123a4:	add	r0, sl, #32
   123a8:	str	r5, [sl, #52]	; 0x34
   123ac:	vst1.32	{d16-d17}, [r0]
   123b0:	blt	123ec <table_dupe@@Base+0xb0>
   123b4:	mov	r0, r4
   123b8:	mov	r1, r5
   123bc:	bl	12c54 <table_get_column_name@@Base>
   123c0:	mov	r7, r0
   123c4:	mov	r0, r4
   123c8:	mov	r1, r5
   123cc:	bl	12c64 <table_get_column_data_type@@Base>
   123d0:	mov	r2, r0
   123d4:	mov	r0, sl
   123d8:	mov	r1, r7
   123dc:	bl	12c78 <table_add_column@@Base>
   123e0:	add	r5, r5, #1
   123e4:	cmp	r6, r5
   123e8:	bne	123b4 <table_dupe@@Base+0x78>
   123ec:	cmp	r8, #1
   123f0:	blt	1285c <table_dupe@@Base+0x520>
   123f4:	mov	r5, #0
   123f8:	add	r9, sp, #8
   123fc:	mov	r0, sl
   12400:	bl	1391c <table_add_row@@Base>
   12404:	cmp	r6, #1
   12408:	blt	12850 <table_dupe@@Base+0x514>
   1240c:	mov	r7, #0
   12410:	mov	r0, r4
   12414:	mov	r1, r7
   12418:	bl	12c64 <table_get_column_data_type@@Base>
   1241c:	cmp	r0, #23
   12420:	bhi	12844 <table_dupe@@Base+0x508>
   12424:	add	r1, pc, #4
   12428:	ldr	r0, [r1, r0, lsl #2]
   1242c:	add	pc, r1, r0
   12430:	andeq	r0, r0, r0, rrx
   12434:	andeq	r0, r0, r8, lsl #1
   12438:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   1243c:	ldrdeq	r0, [r0], -r8
   12440:	andeq	r0, r0, r0, lsl #2
   12444:	andeq	r0, r0, r8, lsr #2
   12448:	andeq	r0, r0, r0, asr r1
   1244c:	andeq	r0, r0, r8, ror r1
   12450:	andeq	r0, r0, r0, lsr #3
   12454:	andeq	r0, r0, r8, asr #3
   12458:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1245c:	andeq	r0, r0, r8, lsl r2
   12460:	andeq	r0, r0, r0, asr #4
   12464:	andeq	r0, r0, r8, ror #4
   12468:	muleq	r0, r0, r2
   1246c:			; <UNDEFINED> instruction: 0x000002b8
   12470:	andeq	r0, r0, r0, ror #5
   12474:	andeq	r0, r0, r4, lsl #6
   12478:	andeq	r0, r0, r8, lsr #6
   1247c:	andeq	r0, r0, ip, asr #6
   12480:	andeq	r0, r0, r4, ror r3
   12484:	muleq	r0, ip, r3
   12488:	andeq	r0, r0, r4, asr #7
   1248c:	andeq	r0, r0, ip, ror #7
   12490:	mov	r0, r4
   12494:	mov	r1, r5
   12498:	mov	r2, r7
   1249c:	bl	1366c <table_get_int@@Base>
   124a0:	mov	r3, r0
   124a4:	mov	r0, sl
   124a8:	mov	r1, r5
   124ac:	mov	r2, r7
   124b0:	bl	13e78 <table_set_int@@Base>
   124b4:	b	12844 <table_dupe@@Base+0x508>
   124b8:	mov	r0, r4
   124bc:	mov	r1, r5
   124c0:	mov	r2, r7
   124c4:	bl	13684 <table_get_uint@@Base>
   124c8:	mov	r3, r0
   124cc:	mov	r0, sl
   124d0:	mov	r1, r5
   124d4:	mov	r2, r7
   124d8:	bl	13ef8 <table_set_uint@@Base>
   124dc:	b	12844 <table_dupe@@Base+0x508>
   124e0:	mov	r0, r4
   124e4:	mov	r1, r5
   124e8:	mov	r2, r7
   124ec:	bl	1369c <table_get_int8@@Base>
   124f0:	mov	r3, r0
   124f4:	mov	r0, sl
   124f8:	mov	r1, r5
   124fc:	mov	r2, r7
   12500:	bl	13f78 <table_set_int8@@Base>
   12504:	b	12844 <table_dupe@@Base+0x508>
   12508:	mov	r0, r4
   1250c:	mov	r1, r5
   12510:	mov	r2, r7
   12514:	bl	136b4 <table_get_uint8@@Base>
   12518:	mov	r3, r0
   1251c:	mov	r0, sl
   12520:	mov	r1, r5
   12524:	mov	r2, r7
   12528:	bl	13ff8 <table_set_uint8@@Base>
   1252c:	b	12844 <table_dupe@@Base+0x508>
   12530:	mov	r0, r4
   12534:	mov	r1, r5
   12538:	mov	r2, r7
   1253c:	bl	136cc <table_get_int16@@Base>
   12540:	mov	r3, r0
   12544:	mov	r0, sl
   12548:	mov	r1, r5
   1254c:	mov	r2, r7
   12550:	bl	14078 <table_set_int16@@Base>
   12554:	b	12844 <table_dupe@@Base+0x508>
   12558:	mov	r0, r4
   1255c:	mov	r1, r5
   12560:	mov	r2, r7
   12564:	bl	136e4 <table_get_uint16@@Base>
   12568:	mov	r3, r0
   1256c:	mov	r0, sl
   12570:	mov	r1, r5
   12574:	mov	r2, r7
   12578:	bl	140f8 <table_set_uint16@@Base>
   1257c:	b	12844 <table_dupe@@Base+0x508>
   12580:	mov	r0, r4
   12584:	mov	r1, r5
   12588:	mov	r2, r7
   1258c:	bl	136fc <table_get_int32@@Base>
   12590:	mov	r3, r0
   12594:	mov	r0, sl
   12598:	mov	r1, r5
   1259c:	mov	r2, r7
   125a0:	bl	14178 <table_set_int32@@Base>
   125a4:	b	12844 <table_dupe@@Base+0x508>
   125a8:	mov	r0, r4
   125ac:	mov	r1, r5
   125b0:	mov	r2, r7
   125b4:	bl	13714 <table_get_uint32@@Base>
   125b8:	mov	r3, r0
   125bc:	mov	r0, sl
   125c0:	mov	r1, r5
   125c4:	mov	r2, r7
   125c8:	bl	141f8 <table_set_uint32@@Base>
   125cc:	b	12844 <table_dupe@@Base+0x508>
   125d0:	mov	r0, r4
   125d4:	mov	r1, r5
   125d8:	mov	r2, r7
   125dc:	bl	1372c <table_get_int64@@Base>
   125e0:	stm	sp, {r0, r1}
   125e4:	mov	r0, sl
   125e8:	mov	r1, r5
   125ec:	mov	r2, r7
   125f0:	bl	14278 <table_set_int64@@Base>
   125f4:	b	12844 <table_dupe@@Base+0x508>
   125f8:	mov	r0, r4
   125fc:	mov	r1, r5
   12600:	mov	r2, r7
   12604:	bl	13744 <table_get_uint64@@Base>
   12608:	stm	sp, {r0, r1}
   1260c:	mov	r0, sl
   12610:	mov	r1, r5
   12614:	mov	r2, r7
   12618:	bl	14300 <table_set_uint64@@Base>
   1261c:	b	12844 <table_dupe@@Base+0x508>
   12620:	mov	r0, r4
   12624:	mov	r1, r5
   12628:	mov	r2, r7
   1262c:	bl	1375c <table_get_short@@Base>
   12630:	mov	r3, r0
   12634:	mov	r0, sl
   12638:	mov	r1, r5
   1263c:	mov	r2, r7
   12640:	bl	14388 <table_set_short@@Base>
   12644:	b	12844 <table_dupe@@Base+0x508>
   12648:	mov	r0, r4
   1264c:	mov	r1, r5
   12650:	mov	r2, r7
   12654:	bl	13774 <table_get_ushort@@Base>
   12658:	mov	r3, r0
   1265c:	mov	r0, sl
   12660:	mov	r1, r5
   12664:	mov	r2, r7
   12668:	bl	14408 <table_set_ushort@@Base>
   1266c:	b	12844 <table_dupe@@Base+0x508>
   12670:	mov	r0, r4
   12674:	mov	r1, r5
   12678:	mov	r2, r7
   1267c:	bl	1378c <table_get_long@@Base>
   12680:	mov	r3, r0
   12684:	mov	r0, sl
   12688:	mov	r1, r5
   1268c:	mov	r2, r7
   12690:	bl	14488 <table_set_long@@Base>
   12694:	b	12844 <table_dupe@@Base+0x508>
   12698:	mov	r0, r4
   1269c:	mov	r1, r5
   126a0:	mov	r2, r7
   126a4:	bl	137a4 <table_get_ulong@@Base>
   126a8:	mov	r3, r0
   126ac:	mov	r0, sl
   126b0:	mov	r1, r5
   126b4:	mov	r2, r7
   126b8:	bl	14508 <table_set_ulong@@Base>
   126bc:	b	12844 <table_dupe@@Base+0x508>
   126c0:	mov	r0, r4
   126c4:	mov	r1, r5
   126c8:	mov	r2, r7
   126cc:	bl	137bc <table_get_llong@@Base>
   126d0:	stm	sp, {r0, r1}
   126d4:	mov	r0, sl
   126d8:	mov	r1, r5
   126dc:	mov	r2, r7
   126e0:	bl	14588 <table_set_llong@@Base>
   126e4:	b	12844 <table_dupe@@Base+0x508>
   126e8:	mov	r0, r4
   126ec:	mov	r1, r5
   126f0:	mov	r2, r7
   126f4:	bl	137d4 <table_get_ullong@@Base>
   126f8:	stm	sp, {r0, r1}
   126fc:	mov	r0, sl
   12700:	mov	r1, r5
   12704:	mov	r2, r7
   12708:	bl	14610 <table_set_ullong@@Base>
   1270c:	b	12844 <table_dupe@@Base+0x508>
   12710:	mov	r0, r4
   12714:	mov	r1, r5
   12718:	mov	r2, r7
   1271c:	bl	137ec <table_get_float@@Base>
   12720:	mov	r0, sl
   12724:	mov	r1, r5
   12728:	mov	r2, r7
   1272c:	bl	14698 <table_set_float@@Base>
   12730:	b	12844 <table_dupe@@Base+0x508>
   12734:	mov	r0, r4
   12738:	mov	r1, r5
   1273c:	mov	r2, r7
   12740:	bl	13804 <table_get_double@@Base>
   12744:	mov	r0, sl
   12748:	mov	r1, r5
   1274c:	mov	r2, r7
   12750:	bl	14724 <table_set_double@@Base>
   12754:	b	12844 <table_dupe@@Base+0x508>
   12758:	mov	r0, r4
   1275c:	mov	r1, r5
   12760:	mov	r2, r7
   12764:	bl	1381c <table_get_ldouble@@Base>
   12768:	mov	r0, sl
   1276c:	mov	r1, r5
   12770:	mov	r2, r7
   12774:	bl	147ac <table_set_ldouble@@Base>
   12778:	b	12844 <table_dupe@@Base+0x508>
   1277c:	mov	r0, r4
   12780:	mov	r1, r5
   12784:	mov	r2, r7
   12788:	bl	13834 <table_get_char@@Base>
   1278c:	mov	r3, r0
   12790:	mov	r0, sl
   12794:	mov	r1, r5
   12798:	mov	r2, r7
   1279c:	bl	14854 <table_set_char@@Base>
   127a0:	b	12844 <table_dupe@@Base+0x508>
   127a4:	mov	r0, r4
   127a8:	mov	r1, r5
   127ac:	mov	r2, r7
   127b0:	bl	1384c <table_get_uchar@@Base>
   127b4:	mov	r3, r0
   127b8:	mov	r0, sl
   127bc:	mov	r1, r5
   127c0:	mov	r2, r7
   127c4:	bl	148d4 <table_set_uchar@@Base>
   127c8:	b	12844 <table_dupe@@Base+0x508>
   127cc:	mov	r0, r4
   127d0:	mov	r1, r5
   127d4:	mov	r2, r7
   127d8:	bl	13864 <table_get_string@@Base>
   127dc:	mov	r3, r0
   127e0:	mov	r0, sl
   127e4:	mov	r1, r5
   127e8:	mov	r2, r7
   127ec:	bl	14834 <table_set_string@@Base>
   127f0:	b	12844 <table_dupe@@Base+0x508>
   127f4:	mov	r0, r4
   127f8:	mov	r1, r5
   127fc:	mov	r2, r7
   12800:	bl	13654 <table_get_bool@@Base>
   12804:	mov	r3, r0
   12808:	mov	r0, sl
   1280c:	mov	r1, r5
   12810:	mov	r2, r7
   12814:	bl	13df8 <table_set_bool@@Base>
   12818:	b	12844 <table_dupe@@Base+0x508>
   1281c:	mov	r0, r4
   12820:	mov	r1, r5
   12824:	mov	r2, r7
   12828:	bl	13878 <table_get_ptr@@Base>
   1282c:	str	r0, [sp, #8]
   12830:	mov	r0, sl
   12834:	mov	r1, r5
   12838:	mov	r2, r7
   1283c:	mov	r3, r9
   12840:	bl	14954 <table_set_ptr@@Base>
   12844:	add	r7, r7, #1
   12848:	cmp	r6, r7
   1284c:	bne	12410 <table_dupe@@Base+0xd4>
   12850:	add	r5, r5, #1
   12854:	cmp	r5, r8
   12858:	bne	123fc <table_dupe@@Base+0xc0>
   1285c:	mov	r0, sl
   12860:	sub	sp, fp, #28
   12864:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012868 <table_get_major_version@@Base>:
   12868:	mov	r0, #0
   1286c:	bx	lr

00012870 <table_get_minor_version@@Base>:
   12870:	mov	r0, #0
   12874:	bx	lr

00012878 <table_get_patch_version@@Base>:
   12878:	mov	r0, #0
   1287c:	bx	lr

00012880 <table_get_version@@Base>:
   12880:	ldr	r0, [pc, #4]	; 1288c <table_get_version@@Base+0xc>
   12884:	add	r0, pc, r0
   12888:	bx	lr
   1288c:	andeq	r2, r0, ip, lsl #25

00012890 <table_get_callback_length@@Base>:
   12890:	ldr	r0, [r0, #32]
   12894:	bx	lr

00012898 <table_register_callback@@Base>:
   12898:	push	{r4, r5, r6, r7, fp, lr}
   1289c:	add	fp, sp, #16
   128a0:	mov	r5, r0
   128a4:	ldr	r0, [r0, #32]
   128a8:	mov	r4, r3
   128ac:	mov	r6, r2
   128b0:	mov	r7, r1
   128b4:	cmp	r0, #1
   128b8:	blt	128ec <table_register_callback@@Base+0x54>
   128bc:	ldr	r2, [r5, #36]	; 0x24
   128c0:	mov	r1, #0
   128c4:	ldr	r3, [r2, r1, lsl #2]
   128c8:	cmp	r3, r7
   128cc:	bne	128e0 <table_register_callback@@Base+0x48>
   128d0:	ldr	r3, [r5, #40]	; 0x28
   128d4:	ldr	r3, [r3, r1, lsl #2]
   128d8:	cmp	r3, r6
   128dc:	beq	12970 <table_register_callback@@Base+0xd8>
   128e0:	add	r1, r1, #1
   128e4:	cmp	r1, r0
   128e8:	blt	128c4 <table_register_callback@@Base+0x2c>
   128ec:	ldr	r1, [r5, #48]	; 0x30
   128f0:	udiv	r2, r0, r1
   128f4:	mls	r2, r2, r1, r0
   128f8:	cmp	r2, #0
   128fc:	bne	12948 <table_register_callback@@Base+0xb0>
   12900:	ldr	r2, [r5, #52]	; 0x34
   12904:	ldr	r0, [r5, #36]	; 0x24
   12908:	add	r1, r2, r1
   1290c:	str	r1, [r5, #52]	; 0x34
   12910:	lsl	r1, r1, #2
   12914:	bl	11f04 <realloc@plt>
   12918:	str	r0, [r5, #36]	; 0x24
   1291c:	ldr	r1, [r5, #52]	; 0x34
   12920:	ldr	r0, [r5, #40]	; 0x28
   12924:	lsl	r1, r1, #2
   12928:	bl	11f04 <realloc@plt>
   1292c:	str	r0, [r5, #40]	; 0x28
   12930:	ldr	r1, [r5, #52]	; 0x34
   12934:	ldr	r0, [r5, #44]	; 0x2c
   12938:	lsl	r1, r1, #2
   1293c:	bl	11f04 <realloc@plt>
   12940:	str	r0, [r5, #44]	; 0x2c
   12944:	ldr	r0, [r5, #32]
   12948:	ldr	r1, [r5, #36]	; 0x24
   1294c:	str	r7, [r1, r0, lsl #2]
   12950:	ldr	r1, [r5, #40]	; 0x28
   12954:	str	r6, [r1, r0, lsl #2]
   12958:	ldr	r1, [r5, #44]	; 0x2c
   1295c:	str	r4, [r1, r0, lsl #2]
   12960:	ldr	r0, [r5, #32]
   12964:	add	r0, r0, #1
   12968:	str	r0, [r5, #32]
   1296c:	pop	{r4, r5, r6, r7, fp, pc}
   12970:	cmp	r1, #0
   12974:	ldrne	r0, [r5, #44]	; 0x2c
   12978:	ldrne	r2, [r0, r1, lsl #2]
   1297c:	orrne	r2, r2, r4
   12980:	strne	r2, [r0, r1, lsl #2]
   12984:	popne	{r4, r5, r6, r7, fp, pc}
   12988:	b	128ec <table_register_callback@@Base+0x54>

0001298c <table_unregister_callback@@Base>:
   1298c:	push	{r4, r5, r6, sl, fp, lr}
   12990:	add	fp, sp, #16
   12994:	ldr	r4, [r0, #32]
   12998:	cmp	r4, #1
   1299c:	blt	129d4 <table_unregister_callback@@Base+0x48>
   129a0:	ldr	r3, [r0, #36]	; 0x24
   129a4:	mov	r6, r0
   129a8:	mov	r0, #0
   129ac:	ldr	r5, [r3, r0, lsl #2]
   129b0:	cmp	r5, r1
   129b4:	bne	129c8 <table_unregister_callback@@Base+0x3c>
   129b8:	ldr	r5, [r6, #40]	; 0x28
   129bc:	ldr	r5, [r5, r0, lsl #2]
   129c0:	cmp	r5, r2
   129c4:	beq	129d8 <table_unregister_callback@@Base+0x4c>
   129c8:	add	r0, r0, #1
   129cc:	cmp	r0, r4
   129d0:	blt	129ac <table_unregister_callback@@Base+0x20>
   129d4:	pop	{r4, r5, r6, sl, fp, pc}
   129d8:	sub	r1, r4, #1
   129dc:	cmp	r0, r1
   129e0:	bge	12a70 <table_unregister_callback@@Base+0xe4>
   129e4:	add	r1, r3, r0, lsl #2
   129e8:	ldr	r1, [r1, #4]
   129ec:	str	r1, [r3, r0, lsl #2]
   129f0:	ldr	r1, [r6, #40]	; 0x28
   129f4:	add	r2, r1, r0, lsl #2
   129f8:	ldr	r2, [r2, #4]
   129fc:	str	r2, [r1, r0, lsl #2]
   12a00:	ldr	r1, [r6, #44]	; 0x2c
   12a04:	add	r2, r1, r0, lsl #2
   12a08:	ldr	r2, [r2, #4]
   12a0c:	str	r2, [r1, r0, lsl #2]
   12a10:	add	r2, r0, #1
   12a14:	ldr	r1, [r6, #32]
   12a18:	sub	r1, r1, #1
   12a1c:	cmp	r2, r1
   12a20:	bge	12a70 <table_unregister_callback@@Base+0xe4>
   12a24:	ldr	r1, [r6, #36]	; 0x24
   12a28:	add	r1, r1, r0, lsl #2
   12a2c:	ldr	r2, [r1, #8]
   12a30:	str	r2, [r1, #4]
   12a34:	ldr	r1, [r6, #40]	; 0x28
   12a38:	add	r1, r1, r0, lsl #2
   12a3c:	ldr	r2, [r1, #8]
   12a40:	str	r2, [r1, #4]
   12a44:	ldr	r1, [r6, #44]	; 0x2c
   12a48:	add	r1, r1, r0, lsl #2
   12a4c:	ldr	r2, [r1, #8]
   12a50:	str	r2, [r1, #4]
   12a54:	add	r2, r0, #1
   12a58:	add	r0, r0, #2
   12a5c:	ldr	r1, [r6, #32]
   12a60:	sub	r1, r1, #1
   12a64:	cmp	r0, r1
   12a68:	mov	r0, r2
   12a6c:	blt	12a24 <table_unregister_callback@@Base+0x98>
   12a70:	str	r1, [r6, #32]
   12a74:	ldr	r2, [r6, #48]	; 0x30
   12a78:	udiv	r0, r1, r2
   12a7c:	mls	r0, r0, r2, r1
   12a80:	cmp	r0, #0
   12a84:	popne	{r4, r5, r6, sl, fp, pc}
   12a88:	ldr	r1, [r6, #52]	; 0x34
   12a8c:	ldr	r0, [r6, #36]	; 0x24
   12a90:	subs	r1, r1, r2
   12a94:	str	r1, [r6, #52]	; 0x34
   12a98:	beq	12ad4 <table_unregister_callback@@Base+0x148>
   12a9c:	lsl	r1, r1, #2
   12aa0:	bl	11f04 <realloc@plt>
   12aa4:	str	r0, [r6, #36]	; 0x24
   12aa8:	ldr	r1, [r6, #52]	; 0x34
   12aac:	ldr	r0, [r6, #40]	; 0x28
   12ab0:	lsl	r1, r1, #2
   12ab4:	bl	11f04 <realloc@plt>
   12ab8:	str	r0, [r6, #40]	; 0x28
   12abc:	ldr	r1, [r6, #52]	; 0x34
   12ac0:	ldr	r0, [r6, #44]	; 0x2c
   12ac4:	lsl	r1, r1, #2
   12ac8:	bl	11f04 <realloc@plt>
   12acc:	str	r0, [r6, #44]	; 0x2c
   12ad0:	pop	{r4, r5, r6, sl, fp, pc}
   12ad4:	bl	11eec <free@plt>
   12ad8:	ldr	r0, [r6, #40]	; 0x28
   12adc:	bl	11eec <free@plt>
   12ae0:	ldr	r0, [r6, #44]	; 0x2c
   12ae4:	bl	11eec <free@plt>
   12ae8:	mov	r0, #0
   12aec:	str	r0, [r6, #36]	; 0x24
   12af0:	str	r0, [r6, #40]	; 0x28
   12af4:	str	r0, [r6, #44]	; 0x2c
   12af8:	pop	{r4, r5, r6, sl, fp, pc}

00012afc <table_notify@@Base>:
   12afc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12b00:	add	fp, sp, #24
   12b04:	sub	sp, sp, #8
   12b08:	mov	r7, r0
   12b0c:	ldr	r0, [r0, #32]
   12b10:	cmp	r0, #1
   12b14:	blt	12b70 <table_notify@@Base+0x74>
   12b18:	mov	r4, r3
   12b1c:	mov	r8, r2
   12b20:	mov	r9, r1
   12b24:	mov	r5, #0
   12b28:	ldr	r1, [r7, #44]	; 0x2c
   12b2c:	ldr	r1, [r1, r5, lsl #2]
   12b30:	tst	r1, r4
   12b34:	beq	12b64 <table_notify@@Base+0x68>
   12b38:	ldr	r0, [r7, #36]	; 0x24
   12b3c:	ldr	r1, [r7, #40]	; 0x28
   12b40:	mov	r2, r8
   12b44:	mov	r3, r4
   12b48:	ldr	r6, [r0, r5, lsl #2]
   12b4c:	ldr	r0, [r1, r5, lsl #2]
   12b50:	mov	r1, r9
   12b54:	str	r0, [sp]
   12b58:	mov	r0, r7
   12b5c:	blx	r6
   12b60:	ldr	r0, [r7, #32]
   12b64:	add	r5, r5, #1
   12b68:	cmp	r5, r0
   12b6c:	blt	12b28 <table_notify@@Base+0x2c>
   12b70:	sub	sp, fp, #24
   12b74:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012b78 <table_column_init@@Base>:
   12b78:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12b7c:	add	fp, sp, #24
   12b80:	ldr	r7, [r0]
   12b84:	mov	r0, r2
   12b88:	mov	r4, r3
   12b8c:	mov	r5, r2
   12b90:	mov	r6, r1
   12b94:	bl	11f40 <strlen@plt>
   12b98:	add	r0, r0, #1
   12b9c:	bl	11f1c <malloc@plt>
   12ba0:	ldr	r8, [fp, #8]
   12ba4:	add	r6, r6, r6, lsl #1
   12ba8:	cmp	r0, #0
   12bac:	str	r0, [r7, r6, lsl #2]
   12bb0:	beq	12bbc <table_column_init@@Base+0x44>
   12bb4:	mov	r1, r5
   12bb8:	bl	11f10 <strcpy@plt>
   12bbc:	add	r0, r7, r6, lsl #2
   12bc0:	stmib	r0, {r4, r8}
   12bc4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012bc8 <table_get_col_ptr@@Base>:
   12bc8:	ldr	r0, [r0]
   12bcc:	add	r1, r1, r1, lsl #1
   12bd0:	add	r0, r0, r1, lsl #2
   12bd4:	bx	lr

00012bd8 <table_column_destroy@@Base>:
   12bd8:	ldr	r0, [r0]
   12bdc:	add	r1, r1, r1, lsl #1
   12be0:	ldr	r0, [r0, r1, lsl #2]
   12be4:	cmp	r0, #0
   12be8:	bxeq	lr
   12bec:	b	11eec <free@plt>

00012bf0 <table_get_column_length@@Base>:
   12bf0:	ldr	r0, [r0, #4]
   12bf4:	bx	lr

00012bf8 <table_get_column@@Base>:
   12bf8:	push	{r4, r5, r6, r7, fp, lr}
   12bfc:	add	fp, sp, #16
   12c00:	ldr	r6, [r0, #4]
   12c04:	cmp	r6, #1
   12c08:	blt	12c40 <table_get_column@@Base+0x48>
   12c0c:	ldr	r7, [r0]
   12c10:	mov	r5, r1
   12c14:	mov	r4, #0
   12c18:	ldr	r0, [r7]
   12c1c:	mov	r1, r5
   12c20:	bl	11ee0 <strcmp@plt>
   12c24:	cmp	r0, #0
   12c28:	beq	12c44 <table_get_column@@Base+0x4c>
   12c2c:	add	r4, r4, #1
   12c30:	add	r7, r7, #12
   12c34:	cmp	r4, r6
   12c38:	blt	12c18 <table_get_column@@Base+0x20>
   12c3c:	b	12c44 <table_get_column@@Base+0x4c>
   12c40:	mov	r4, #0
   12c44:	cmp	r4, r6
   12c48:	mvneq	r4, #0
   12c4c:	mov	r0, r4
   12c50:	pop	{r4, r5, r6, r7, fp, pc}

00012c54 <table_get_column_name@@Base>:
   12c54:	ldr	r0, [r0]
   12c58:	add	r1, r1, r1, lsl #1
   12c5c:	ldr	r0, [r0, r1, lsl #2]
   12c60:	bx	lr

00012c64 <table_get_column_data_type@@Base>:
   12c64:	ldr	r0, [r0]
   12c68:	add	r1, r1, r1, lsl #1
   12c6c:	add	r0, r0, r1, lsl #2
   12c70:	ldr	r0, [r0, #4]
   12c74:	bx	lr

00012c78 <table_add_column@@Base>:
   12c78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c7c:	add	fp, sp, #28
   12c80:	sub	sp, sp, #4
   12c84:	mov	r4, r0
   12c88:	mov	r8, r1
   12c8c:	ldr	r0, [r0, #4]
   12c90:	mov	r9, r2
   12c94:	ldr	r1, [r4, #8]
   12c98:	udiv	r2, r0, r1
   12c9c:	mls	r0, r2, r1, r0
   12ca0:	cmp	r0, #0
   12ca4:	bne	12d10 <table_add_column@@Base+0x98>
   12ca8:	ldr	r2, [r4, #12]
   12cac:	ldr	r0, [r4]
   12cb0:	add	r1, r2, r1
   12cb4:	str	r1, [r4, #12]
   12cb8:	add	r1, r1, r1, lsl #1
   12cbc:	lsl	r1, r1, #2
   12cc0:	bl	11f04 <realloc@plt>
   12cc4:	str	r0, [r4]
   12cc8:	mov	r0, r4
   12ccc:	bl	13914 <table_get_row_length@@Base>
   12cd0:	cmp	r0, #1
   12cd4:	blt	12d10 <table_add_column@@Base+0x98>
   12cd8:	mov	r6, r0
   12cdc:	mov	r5, #0
   12ce0:	mov	r0, r4
   12ce4:	mov	r1, r5
   12ce8:	bl	138b0 <table_get_row_ptr@@Base>
   12cec:	ldr	r1, [r4, #12]
   12cf0:	mov	r7, r0
   12cf4:	ldr	r0, [r0]
   12cf8:	lsl	r1, r1, #2
   12cfc:	bl	11f04 <realloc@plt>
   12d00:	add	r5, r5, #1
   12d04:	str	r0, [r7]
   12d08:	cmp	r6, r5
   12d0c:	bne	12ce0 <table_add_column@@Base+0x68>
   12d10:	mov	r0, r4
   12d14:	bl	13914 <table_get_row_length@@Base>
   12d18:	ldr	r6, [r4, #4]
   12d1c:	mov	r7, r0
   12d20:	mov	r0, r9
   12d24:	bl	13624 <table_get_default_compare_function_for_data_type@@Base>
   12d28:	ldr	r5, [r4]
   12d2c:	mov	sl, r0
   12d30:	mov	r0, r8
   12d34:	bl	11f40 <strlen@plt>
   12d38:	add	r0, r0, #1
   12d3c:	bl	11f1c <malloc@plt>
   12d40:	mov	r1, r8
   12d44:	add	r8, r6, r6, lsl #1
   12d48:	cmp	r0, #0
   12d4c:	str	r0, [r5, r8, lsl #2]
   12d50:	beq	12d58 <table_add_column@@Base+0xe0>
   12d54:	bl	11f10 <strcpy@plt>
   12d58:	add	r0, r5, r8, lsl #2
   12d5c:	cmp	r7, #1
   12d60:	stmib	r0, {r9, sl}
   12d64:	blt	12d88 <table_add_column@@Base+0x110>
   12d68:	mov	r5, #0
   12d6c:	mov	r0, r4
   12d70:	mov	r1, r5
   12d74:	mov	r2, r6
   12d78:	bl	149b0 <table_cell_init@@Base>
   12d7c:	add	r5, r5, #1
   12d80:	cmp	r7, r5
   12d84:	bne	12d6c <table_add_column@@Base+0xf4>
   12d88:	ldr	r2, [r4, #4]
   12d8c:	mov	r0, r4
   12d90:	mvn	r1, #0
   12d94:	mov	r3, #8
   12d98:	bl	12afc <table_notify@@Base>
   12d9c:	ldr	r0, [r4, #4]
   12da0:	add	r1, r0, #1
   12da4:	str	r1, [r4, #4]
   12da8:	sub	sp, fp, #28
   12dac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012db0 <table_remove_column@@Base>:
   12db0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12db4:	add	fp, sp, #24
   12db8:	mov	r5, r0
   12dbc:	ldr	r0, [r0]
   12dc0:	add	r6, r1, r1, lsl #1
   12dc4:	mov	r9, r1
   12dc8:	ldr	r0, [r0, r6, lsl #2]
   12dcc:	cmp	r0, #0
   12dd0:	beq	12dd8 <table_remove_column@@Base+0x28>
   12dd4:	bl	11eec <free@plt>
   12dd8:	ldr	r0, [r5, #4]
   12ddc:	sub	r4, r0, #1
   12de0:	cmp	r4, r9
   12de4:	ble	12e14 <table_remove_column@@Base+0x64>
   12de8:	sub	r0, r4, r9
   12dec:	lsl	r1, r6, #2
   12df0:	ldr	r2, [r5]
   12df4:	subs	r0, r0, #1
   12df8:	add	r2, r2, r1
   12dfc:	add	r1, r1, #12
   12e00:	vldr	d16, [r2, #12]
   12e04:	ldr	r3, [r2, #20]
   12e08:	str	r3, [r2, #8]
   12e0c:	vstr	d16, [r2]
   12e10:	bne	12df0 <table_remove_column@@Base+0x40>
   12e14:	mov	r0, r5
   12e18:	bl	13914 <table_get_row_length@@Base>
   12e1c:	cmp	r0, #1
   12e20:	blt	12e7c <table_remove_column@@Base+0xcc>
   12e24:	mov	r6, r0
   12e28:	mov	r7, #0
   12e2c:	mov	r0, r5
   12e30:	mov	r1, r7
   12e34:	mov	r2, r9
   12e38:	bl	149ec <table_cell_destroy@@Base>
   12e3c:	mov	r0, r5
   12e40:	mov	r1, r7
   12e44:	bl	138b0 <table_get_row_ptr@@Base>
   12e48:	cmp	r4, r9
   12e4c:	ble	12e70 <table_remove_column@@Base+0xc0>
   12e50:	mov	r1, r9
   12e54:	ldr	r2, [r0]
   12e58:	add	r3, r2, r1, lsl #2
   12e5c:	ldr	r3, [r3, #4]
   12e60:	str	r3, [r2, r1, lsl #2]
   12e64:	add	r1, r1, #1
   12e68:	cmp	r4, r1
   12e6c:	bne	12e54 <table_remove_column@@Base+0xa4>
   12e70:	add	r7, r7, #1
   12e74:	cmp	r7, r6
   12e78:	bne	12e2c <table_remove_column@@Base+0x7c>
   12e7c:	ldmib	r5, {r0, r1}
   12e80:	sub	r0, r0, #1
   12e84:	udiv	r2, r0, r1
   12e88:	str	r0, [r5, #4]
   12e8c:	mls	r0, r2, r1, r0
   12e90:	cmp	r0, #0
   12e94:	bne	12f00 <table_remove_column@@Base+0x150>
   12e98:	ldr	r2, [r5, #12]
   12e9c:	ldr	r0, [r5]
   12ea0:	sub	r1, r2, r1
   12ea4:	str	r1, [r5, #12]
   12ea8:	add	r1, r1, r1, lsl #1
   12eac:	lsl	r1, r1, #2
   12eb0:	bl	11f04 <realloc@plt>
   12eb4:	str	r0, [r5]
   12eb8:	mov	r0, r5
   12ebc:	bl	13914 <table_get_row_length@@Base>
   12ec0:	cmp	r0, #1
   12ec4:	blt	12f00 <table_remove_column@@Base+0x150>
   12ec8:	mov	r8, r0
   12ecc:	mov	r7, #0
   12ed0:	mov	r0, r5
   12ed4:	mov	r1, r7
   12ed8:	bl	138b0 <table_get_row_ptr@@Base>
   12edc:	ldr	r1, [r5, #12]
   12ee0:	mov	r6, r0
   12ee4:	ldr	r0, [r0]
   12ee8:	lsl	r1, r1, #2
   12eec:	bl	11f04 <realloc@plt>
   12ef0:	add	r7, r7, #1
   12ef4:	str	r0, [r6]
   12ef8:	cmp	r8, r7
   12efc:	bne	12ed0 <table_remove_column@@Base+0x120>
   12f00:	mov	r0, r5
   12f04:	mvn	r1, #0
   12f08:	mov	r2, r9
   12f0c:	mov	r3, #16
   12f10:	bl	12afc <table_notify@@Base>
   12f14:	mov	r0, #0
   12f18:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012f1c <table_get_column_compare_function@@Base>:
   12f1c:	ldr	r0, [r0]
   12f20:	add	r1, r1, r1, lsl #1
   12f24:	add	r0, r0, r1, lsl #2
   12f28:	ldr	r0, [r0, #8]
   12f2c:	bx	lr

00012f30 <table_set_column_compare_function@@Base>:
   12f30:	ldr	r0, [r0]
   12f34:	add	r1, r1, r1, lsl #1
   12f38:	add	r0, r0, r1, lsl #2
   12f3c:	str	r2, [r0, #8]
   12f40:	bx	lr

00012f44 <table_compare_bool@@Base>:
   12f44:	cmp	r0, #0
   12f48:	beq	12f7c <table_compare_bool@@Base+0x38>
   12f4c:	cmp	r1, #0
   12f50:	moveq	r1, #1
   12f54:	moveq	r0, r1
   12f58:	bxeq	lr
   12f5c:	ldrb	r2, [r1]
   12f60:	ldrb	r0, [r0]
   12f64:	mov	r1, #0
   12f68:	cmp	r0, r2
   12f6c:	mvncc	r1, #0
   12f70:	movwhi	r1, #1
   12f74:	mov	r0, r1
   12f78:	bx	lr
   12f7c:	cmp	r1, #0
   12f80:	mvnne	r1, #0
   12f84:	mov	r0, r1
   12f88:	bx	lr

00012f8c <table_compare_int@@Base>:
   12f8c:	cmp	r0, #0
   12f90:	beq	12fc4 <table_compare_int@@Base+0x38>
   12f94:	cmp	r1, #0
   12f98:	moveq	r1, #1
   12f9c:	moveq	r0, r1
   12fa0:	bxeq	lr
   12fa4:	ldr	r2, [r1]
   12fa8:	ldr	r0, [r0]
   12fac:	mov	r1, #0
   12fb0:	cmp	r0, r2
   12fb4:	mvnlt	r1, #0
   12fb8:	movwgt	r1, #1
   12fbc:	mov	r0, r1
   12fc0:	bx	lr
   12fc4:	cmp	r1, #0
   12fc8:	mvnne	r1, #0
   12fcc:	mov	r0, r1
   12fd0:	bx	lr

00012fd4 <table_compare_uint@@Base>:
   12fd4:	cmp	r0, #0
   12fd8:	beq	1300c <table_compare_uint@@Base+0x38>
   12fdc:	cmp	r1, #0
   12fe0:	moveq	r1, #1
   12fe4:	moveq	r0, r1
   12fe8:	bxeq	lr
   12fec:	ldr	r2, [r1]
   12ff0:	ldr	r0, [r0]
   12ff4:	mov	r1, #0
   12ff8:	cmp	r0, r2
   12ffc:	mvncc	r1, #0
   13000:	movwhi	r1, #1
   13004:	mov	r0, r1
   13008:	bx	lr
   1300c:	cmp	r1, #0
   13010:	mvnne	r1, #0
   13014:	mov	r0, r1
   13018:	bx	lr

0001301c <table_compare_int8@@Base>:
   1301c:	cmp	r0, #0
   13020:	beq	13054 <table_compare_int8@@Base+0x38>
   13024:	cmp	r1, #0
   13028:	moveq	r1, #1
   1302c:	moveq	r0, r1
   13030:	bxeq	lr
   13034:	ldrsb	r2, [r1]
   13038:	ldrsb	r0, [r0]
   1303c:	mov	r1, #0
   13040:	cmp	r0, r2
   13044:	mvnlt	r1, #0
   13048:	movwgt	r1, #1
   1304c:	mov	r0, r1
   13050:	bx	lr
   13054:	cmp	r1, #0
   13058:	mvnne	r1, #0
   1305c:	mov	r0, r1
   13060:	bx	lr

00013064 <table_compare_uint8@@Base>:
   13064:	cmp	r0, #0
   13068:	beq	1309c <table_compare_uint8@@Base+0x38>
   1306c:	cmp	r1, #0
   13070:	moveq	r1, #1
   13074:	moveq	r0, r1
   13078:	bxeq	lr
   1307c:	ldrb	r2, [r1]
   13080:	ldrb	r0, [r0]
   13084:	mov	r1, #0
   13088:	cmp	r0, r2
   1308c:	mvncc	r1, #0
   13090:	movwhi	r1, #1
   13094:	mov	r0, r1
   13098:	bx	lr
   1309c:	cmp	r1, #0
   130a0:	mvnne	r1, #0
   130a4:	mov	r0, r1
   130a8:	bx	lr

000130ac <table_compare_int16@@Base>:
   130ac:	cmp	r0, #0
   130b0:	beq	130e4 <table_compare_int16@@Base+0x38>
   130b4:	cmp	r1, #0
   130b8:	moveq	r1, #1
   130bc:	moveq	r0, r1
   130c0:	bxeq	lr
   130c4:	ldrsh	r2, [r1]
   130c8:	ldrsh	r0, [r0]
   130cc:	mov	r1, #0
   130d0:	cmp	r0, r2
   130d4:	mvnlt	r1, #0
   130d8:	movwgt	r1, #1
   130dc:	mov	r0, r1
   130e0:	bx	lr
   130e4:	cmp	r1, #0
   130e8:	mvnne	r1, #0
   130ec:	mov	r0, r1
   130f0:	bx	lr

000130f4 <table_compare_uint16@@Base>:
   130f4:	cmp	r0, #0
   130f8:	beq	1312c <table_compare_uint16@@Base+0x38>
   130fc:	cmp	r1, #0
   13100:	moveq	r1, #1
   13104:	moveq	r0, r1
   13108:	bxeq	lr
   1310c:	ldrh	r2, [r1]
   13110:	ldrh	r0, [r0]
   13114:	mov	r1, #0
   13118:	cmp	r0, r2
   1311c:	mvncc	r1, #0
   13120:	movwhi	r1, #1
   13124:	mov	r0, r1
   13128:	bx	lr
   1312c:	cmp	r1, #0
   13130:	mvnne	r1, #0
   13134:	mov	r0, r1
   13138:	bx	lr

0001313c <table_compare_int32@@Base>:
   1313c:	cmp	r0, #0
   13140:	beq	13174 <table_compare_int32@@Base+0x38>
   13144:	cmp	r1, #0
   13148:	moveq	r1, #1
   1314c:	moveq	r0, r1
   13150:	bxeq	lr
   13154:	ldr	r2, [r1]
   13158:	ldr	r0, [r0]
   1315c:	mov	r1, #0
   13160:	cmp	r0, r2
   13164:	mvnlt	r1, #0
   13168:	movwgt	r1, #1
   1316c:	mov	r0, r1
   13170:	bx	lr
   13174:	cmp	r1, #0
   13178:	mvnne	r1, #0
   1317c:	mov	r0, r1
   13180:	bx	lr

00013184 <table_compare_uint32@@Base>:
   13184:	cmp	r0, #0
   13188:	beq	131bc <table_compare_uint32@@Base+0x38>
   1318c:	cmp	r1, #0
   13190:	moveq	r1, #1
   13194:	moveq	r0, r1
   13198:	bxeq	lr
   1319c:	ldr	r2, [r1]
   131a0:	ldr	r0, [r0]
   131a4:	mov	r1, #0
   131a8:	cmp	r0, r2
   131ac:	mvncc	r1, #0
   131b0:	movwhi	r1, #1
   131b4:	mov	r0, r1
   131b8:	bx	lr
   131bc:	cmp	r1, #0
   131c0:	mvnne	r1, #0
   131c4:	mov	r0, r1
   131c8:	bx	lr

000131cc <table_compare_int64@@Base>:
   131cc:	cmp	r0, #0
   131d0:	beq	13224 <table_compare_int64@@Base+0x58>
   131d4:	cmp	r1, #0
   131d8:	moveq	r1, #1
   131dc:	moveq	r0, r1
   131e0:	bxeq	lr
   131e4:	push	{r5, r7, fp, lr}
   131e8:	add	fp, sp, #8
   131ec:	ldm	r1, {r2, r7}
   131f0:	ldm	r0, {r0, r5}
   131f4:	mov	r1, #0
   131f8:	subs	r3, r0, r2
   131fc:	sbcs	r3, r5, r7
   13200:	movwlt	r1, #1
   13204:	cmp	r1, #0
   13208:	mvnne	r1, #0
   1320c:	subs	r0, r2, r0
   13210:	sbcs	r0, r7, r5
   13214:	movwlt	r1, #1
   13218:	pop	{r5, r7, fp, lr}
   1321c:	mov	r0, r1
   13220:	bx	lr
   13224:	cmp	r1, #0
   13228:	mvnne	r1, #0
   1322c:	mov	r0, r1
   13230:	bx	lr

00013234 <table_compare_uint64@@Base>:
   13234:	cmp	r0, #0
   13238:	beq	1328c <table_compare_uint64@@Base+0x58>
   1323c:	cmp	r1, #0
   13240:	moveq	r1, #1
   13244:	moveq	r0, r1
   13248:	bxeq	lr
   1324c:	push	{r5, r7, fp, lr}
   13250:	add	fp, sp, #8
   13254:	ldm	r1, {r2, r7}
   13258:	ldm	r0, {r0, r5}
   1325c:	mov	r1, #0
   13260:	subs	r3, r0, r2
   13264:	sbcs	r3, r5, r7
   13268:	movwcc	r1, #1
   1326c:	cmp	r1, #0
   13270:	mvnne	r1, #0
   13274:	subs	r0, r2, r0
   13278:	sbcs	r0, r7, r5
   1327c:	movwcc	r1, #1
   13280:	pop	{r5, r7, fp, lr}
   13284:	mov	r0, r1
   13288:	bx	lr
   1328c:	cmp	r1, #0
   13290:	mvnne	r1, #0
   13294:	mov	r0, r1
   13298:	bx	lr

0001329c <table_compare_short@@Base>:
   1329c:	cmp	r0, #0
   132a0:	beq	132d4 <table_compare_short@@Base+0x38>
   132a4:	cmp	r1, #0
   132a8:	moveq	r1, #1
   132ac:	moveq	r0, r1
   132b0:	bxeq	lr
   132b4:	ldrsh	r2, [r1]
   132b8:	ldrsh	r0, [r0]
   132bc:	mov	r1, #0
   132c0:	cmp	r0, r2
   132c4:	mvnlt	r1, #0
   132c8:	movwgt	r1, #1
   132cc:	mov	r0, r1
   132d0:	bx	lr
   132d4:	cmp	r1, #0
   132d8:	mvnne	r1, #0
   132dc:	mov	r0, r1
   132e0:	bx	lr

000132e4 <table_compare_ushort@@Base>:
   132e4:	cmp	r0, #0
   132e8:	beq	1331c <table_compare_ushort@@Base+0x38>
   132ec:	cmp	r1, #0
   132f0:	moveq	r1, #1
   132f4:	moveq	r0, r1
   132f8:	bxeq	lr
   132fc:	ldrh	r2, [r1]
   13300:	ldrh	r0, [r0]
   13304:	mov	r1, #0
   13308:	cmp	r0, r2
   1330c:	mvncc	r1, #0
   13310:	movwhi	r1, #1
   13314:	mov	r0, r1
   13318:	bx	lr
   1331c:	cmp	r1, #0
   13320:	mvnne	r1, #0
   13324:	mov	r0, r1
   13328:	bx	lr

0001332c <table_compare_long@@Base>:
   1332c:	cmp	r0, #0
   13330:	beq	13364 <table_compare_long@@Base+0x38>
   13334:	cmp	r1, #0
   13338:	moveq	r1, #1
   1333c:	moveq	r0, r1
   13340:	bxeq	lr
   13344:	ldr	r2, [r1]
   13348:	ldr	r0, [r0]
   1334c:	mov	r1, #0
   13350:	cmp	r0, r2
   13354:	mvnlt	r1, #0
   13358:	movwgt	r1, #1
   1335c:	mov	r0, r1
   13360:	bx	lr
   13364:	cmp	r1, #0
   13368:	mvnne	r1, #0
   1336c:	mov	r0, r1
   13370:	bx	lr

00013374 <table_compare_ulong@@Base>:
   13374:	cmp	r0, #0
   13378:	beq	133ac <table_compare_ulong@@Base+0x38>
   1337c:	cmp	r1, #0
   13380:	moveq	r1, #1
   13384:	moveq	r0, r1
   13388:	bxeq	lr
   1338c:	ldr	r2, [r1]
   13390:	ldr	r0, [r0]
   13394:	mov	r1, #0
   13398:	cmp	r0, r2
   1339c:	mvncc	r1, #0
   133a0:	movwhi	r1, #1
   133a4:	mov	r0, r1
   133a8:	bx	lr
   133ac:	cmp	r1, #0
   133b0:	mvnne	r1, #0
   133b4:	mov	r0, r1
   133b8:	bx	lr

000133bc <table_compare_llong@@Base>:
   133bc:	cmp	r0, #0
   133c0:	beq	13414 <table_compare_llong@@Base+0x58>
   133c4:	cmp	r1, #0
   133c8:	moveq	r1, #1
   133cc:	moveq	r0, r1
   133d0:	bxeq	lr
   133d4:	push	{r5, r7, fp, lr}
   133d8:	add	fp, sp, #8
   133dc:	ldm	r1, {r2, r7}
   133e0:	ldm	r0, {r0, r5}
   133e4:	mov	r1, #0
   133e8:	subs	r3, r0, r2
   133ec:	sbcs	r3, r5, r7
   133f0:	movwlt	r1, #1
   133f4:	cmp	r1, #0
   133f8:	mvnne	r1, #0
   133fc:	subs	r0, r2, r0
   13400:	sbcs	r0, r7, r5
   13404:	movwlt	r1, #1
   13408:	pop	{r5, r7, fp, lr}
   1340c:	mov	r0, r1
   13410:	bx	lr
   13414:	cmp	r1, #0
   13418:	mvnne	r1, #0
   1341c:	mov	r0, r1
   13420:	bx	lr

00013424 <table_compare_ullong@@Base>:
   13424:	cmp	r0, #0
   13428:	beq	1345c <table_compare_ullong@@Base+0x38>
   1342c:	cmp	r1, #0
   13430:	moveq	r1, #1
   13434:	moveq	r0, r1
   13438:	bxeq	lr
   1343c:	ldr	r2, [r1]
   13440:	ldr	r0, [r0]
   13444:	mov	r1, #0
   13448:	cmp	r0, r2
   1344c:	mvncc	r1, #0
   13450:	movwhi	r1, #1
   13454:	mov	r0, r1
   13458:	bx	lr
   1345c:	cmp	r1, #0
   13460:	mvnne	r1, #0
   13464:	mov	r0, r1
   13468:	bx	lr

0001346c <table_compare_float@@Base>:
   1346c:	cmp	r0, #0
   13470:	beq	134a8 <table_compare_float@@Base+0x3c>
   13474:	cmp	r1, #0
   13478:	moveq	r1, #1
   1347c:	moveq	r0, r1
   13480:	bxeq	lr
   13484:	vldr	s0, [r1]
   13488:	vldr	s2, [r0]
   1348c:	mov	r1, #0
   13490:	vcmpe.f32	s2, s0
   13494:	vmrs	APSR_nzcv, fpscr
   13498:	mvnmi	r1, #0
   1349c:	movwgt	r1, #1
   134a0:	mov	r0, r1
   134a4:	bx	lr
   134a8:	cmp	r1, #0
   134ac:	mvnne	r1, #0
   134b0:	mov	r0, r1
   134b4:	bx	lr

000134b8 <table_compare_double@@Base>:
   134b8:	cmp	r0, #0
   134bc:	beq	134f4 <table_compare_double@@Base+0x3c>
   134c0:	cmp	r1, #0
   134c4:	moveq	r1, #1
   134c8:	moveq	r0, r1
   134cc:	bxeq	lr
   134d0:	vldr	d16, [r1]
   134d4:	vldr	d17, [r0]
   134d8:	mov	r1, #0
   134dc:	vcmpe.f64	d17, d16
   134e0:	vmrs	APSR_nzcv, fpscr
   134e4:	mvnmi	r1, #0
   134e8:	movwgt	r1, #1
   134ec:	mov	r0, r1
   134f0:	bx	lr
   134f4:	cmp	r1, #0
   134f8:	mvnne	r1, #0
   134fc:	mov	r0, r1
   13500:	bx	lr

00013504 <table_compare_ldouble@@Base>:
   13504:	cmp	r0, #0
   13508:	beq	13540 <table_compare_ldouble@@Base+0x3c>
   1350c:	cmp	r1, #0
   13510:	moveq	r1, #1
   13514:	moveq	r0, r1
   13518:	bxeq	lr
   1351c:	vldr	d16, [r1]
   13520:	vldr	d17, [r0]
   13524:	mov	r1, #0
   13528:	vcmpe.f64	d17, d16
   1352c:	vmrs	APSR_nzcv, fpscr
   13530:	mvnmi	r1, #0
   13534:	movwgt	r1, #1
   13538:	mov	r0, r1
   1353c:	bx	lr
   13540:	cmp	r1, #0
   13544:	mvnne	r1, #0
   13548:	mov	r0, r1
   1354c:	bx	lr

00013550 <table_compare_char@@Base>:
   13550:	cmp	r0, #0
   13554:	beq	13588 <table_compare_char@@Base+0x38>
   13558:	cmp	r1, #0
   1355c:	moveq	r1, #1
   13560:	moveq	r0, r1
   13564:	bxeq	lr
   13568:	ldrb	r2, [r1]
   1356c:	ldrb	r0, [r0]
   13570:	mov	r1, #0
   13574:	cmp	r0, r2
   13578:	mvncc	r1, #0
   1357c:	movwhi	r1, #1
   13580:	mov	r0, r1
   13584:	bx	lr
   13588:	cmp	r1, #0
   1358c:	mvnne	r1, #0
   13590:	mov	r0, r1
   13594:	bx	lr

00013598 <table_compare_uchar@@Base>:
   13598:	cmp	r0, #0
   1359c:	beq	135d0 <table_compare_uchar@@Base+0x38>
   135a0:	cmp	r1, #0
   135a4:	moveq	r1, #1
   135a8:	moveq	r0, r1
   135ac:	bxeq	lr
   135b0:	ldrb	r2, [r1]
   135b4:	ldrb	r0, [r0]
   135b8:	mov	r1, #0
   135bc:	cmp	r0, r2
   135c0:	mvncc	r1, #0
   135c4:	movwhi	r1, #1
   135c8:	mov	r0, r1
   135cc:	bx	lr
   135d0:	cmp	r1, #0
   135d4:	mvnne	r1, #0
   135d8:	mov	r0, r1
   135dc:	bx	lr

000135e0 <table_compare_string@@Base>:
   135e0:	cmp	r0, #0
   135e4:	beq	135fc <table_compare_string@@Base+0x1c>
   135e8:	cmp	r1, #0
   135ec:	moveq	r1, #1
   135f0:	moveq	r0, r1
   135f4:	bxeq	lr
   135f8:	b	11ee0 <strcmp@plt>
   135fc:	cmp	r1, #0
   13600:	mvnne	r1, #0
   13604:	mov	r0, r1
   13608:	bx	lr

0001360c <table_compare_ptr@@Base>:
   1360c:	mov	r2, #0
   13610:	cmp	r0, r1
   13614:	mvncc	r2, #0
   13618:	movwhi	r2, #1
   1361c:	mov	r0, r2
   13620:	bx	lr

00013624 <table_get_default_compare_function_for_data_type@@Base>:
   13624:	cmp	r0, #23
   13628:	ldrls	r1, [pc, #12]	; 1363c <table_get_default_compare_function_for_data_type@@Base+0x18>
   1362c:	movhi	r0, #0
   13630:	addls	r1, pc, r1
   13634:	ldrls	r0, [r1, r0, lsl #2]
   13638:	bx	lr
   1363c:	andeq	r2, r1, r8, ror r8

00013640 <table_get@@Base>:
   13640:	push	{fp, lr}
   13644:	mov	fp, sp
   13648:	bl	149d0 <table_get_cell_ptr@@Base>
   1364c:	ldr	r0, [r0]
   13650:	pop	{fp, pc}

00013654 <table_get_bool@@Base>:
   13654:	push	{fp, lr}
   13658:	mov	fp, sp
   1365c:	bl	149d0 <table_get_cell_ptr@@Base>
   13660:	ldr	r0, [r0]
   13664:	ldrb	r0, [r0]
   13668:	pop	{fp, pc}

0001366c <table_get_int@@Base>:
   1366c:	push	{fp, lr}
   13670:	mov	fp, sp
   13674:	bl	149d0 <table_get_cell_ptr@@Base>
   13678:	ldr	r0, [r0]
   1367c:	ldr	r0, [r0]
   13680:	pop	{fp, pc}

00013684 <table_get_uint@@Base>:
   13684:	push	{fp, lr}
   13688:	mov	fp, sp
   1368c:	bl	149d0 <table_get_cell_ptr@@Base>
   13690:	ldr	r0, [r0]
   13694:	ldr	r0, [r0]
   13698:	pop	{fp, pc}

0001369c <table_get_int8@@Base>:
   1369c:	push	{fp, lr}
   136a0:	mov	fp, sp
   136a4:	bl	149d0 <table_get_cell_ptr@@Base>
   136a8:	ldr	r0, [r0]
   136ac:	ldrsb	r0, [r0]
   136b0:	pop	{fp, pc}

000136b4 <table_get_uint8@@Base>:
   136b4:	push	{fp, lr}
   136b8:	mov	fp, sp
   136bc:	bl	149d0 <table_get_cell_ptr@@Base>
   136c0:	ldr	r0, [r0]
   136c4:	ldrb	r0, [r0]
   136c8:	pop	{fp, pc}

000136cc <table_get_int16@@Base>:
   136cc:	push	{fp, lr}
   136d0:	mov	fp, sp
   136d4:	bl	149d0 <table_get_cell_ptr@@Base>
   136d8:	ldr	r0, [r0]
   136dc:	ldrsh	r0, [r0]
   136e0:	pop	{fp, pc}

000136e4 <table_get_uint16@@Base>:
   136e4:	push	{fp, lr}
   136e8:	mov	fp, sp
   136ec:	bl	149d0 <table_get_cell_ptr@@Base>
   136f0:	ldr	r0, [r0]
   136f4:	ldrh	r0, [r0]
   136f8:	pop	{fp, pc}

000136fc <table_get_int32@@Base>:
   136fc:	push	{fp, lr}
   13700:	mov	fp, sp
   13704:	bl	149d0 <table_get_cell_ptr@@Base>
   13708:	ldr	r0, [r0]
   1370c:	ldr	r0, [r0]
   13710:	pop	{fp, pc}

00013714 <table_get_uint32@@Base>:
   13714:	push	{fp, lr}
   13718:	mov	fp, sp
   1371c:	bl	149d0 <table_get_cell_ptr@@Base>
   13720:	ldr	r0, [r0]
   13724:	ldr	r0, [r0]
   13728:	pop	{fp, pc}

0001372c <table_get_int64@@Base>:
   1372c:	push	{fp, lr}
   13730:	mov	fp, sp
   13734:	bl	149d0 <table_get_cell_ptr@@Base>
   13738:	ldr	r0, [r0]
   1373c:	ldrd	r0, [r0]
   13740:	pop	{fp, pc}

00013744 <table_get_uint64@@Base>:
   13744:	push	{fp, lr}
   13748:	mov	fp, sp
   1374c:	bl	149d0 <table_get_cell_ptr@@Base>
   13750:	ldr	r0, [r0]
   13754:	ldrd	r0, [r0]
   13758:	pop	{fp, pc}

0001375c <table_get_short@@Base>:
   1375c:	push	{fp, lr}
   13760:	mov	fp, sp
   13764:	bl	149d0 <table_get_cell_ptr@@Base>
   13768:	ldr	r0, [r0]
   1376c:	ldrsh	r0, [r0]
   13770:	pop	{fp, pc}

00013774 <table_get_ushort@@Base>:
   13774:	push	{fp, lr}
   13778:	mov	fp, sp
   1377c:	bl	149d0 <table_get_cell_ptr@@Base>
   13780:	ldr	r0, [r0]
   13784:	ldrh	r0, [r0]
   13788:	pop	{fp, pc}

0001378c <table_get_long@@Base>:
   1378c:	push	{fp, lr}
   13790:	mov	fp, sp
   13794:	bl	149d0 <table_get_cell_ptr@@Base>
   13798:	ldr	r0, [r0]
   1379c:	ldr	r0, [r0]
   137a0:	pop	{fp, pc}

000137a4 <table_get_ulong@@Base>:
   137a4:	push	{fp, lr}
   137a8:	mov	fp, sp
   137ac:	bl	149d0 <table_get_cell_ptr@@Base>
   137b0:	ldr	r0, [r0]
   137b4:	ldr	r0, [r0]
   137b8:	pop	{fp, pc}

000137bc <table_get_llong@@Base>:
   137bc:	push	{fp, lr}
   137c0:	mov	fp, sp
   137c4:	bl	149d0 <table_get_cell_ptr@@Base>
   137c8:	ldr	r0, [r0]
   137cc:	ldrd	r0, [r0]
   137d0:	pop	{fp, pc}

000137d4 <table_get_ullong@@Base>:
   137d4:	push	{fp, lr}
   137d8:	mov	fp, sp
   137dc:	bl	149d0 <table_get_cell_ptr@@Base>
   137e0:	ldr	r0, [r0]
   137e4:	ldrd	r0, [r0]
   137e8:	pop	{fp, pc}

000137ec <table_get_float@@Base>:
   137ec:	push	{fp, lr}
   137f0:	mov	fp, sp
   137f4:	bl	149d0 <table_get_cell_ptr@@Base>
   137f8:	ldr	r0, [r0]
   137fc:	vldr	s0, [r0]
   13800:	pop	{fp, pc}

00013804 <table_get_double@@Base>:
   13804:	push	{fp, lr}
   13808:	mov	fp, sp
   1380c:	bl	149d0 <table_get_cell_ptr@@Base>
   13810:	ldr	r0, [r0]
   13814:	vldr	d0, [r0]
   13818:	pop	{fp, pc}

0001381c <table_get_ldouble@@Base>:
   1381c:	push	{fp, lr}
   13820:	mov	fp, sp
   13824:	bl	149d0 <table_get_cell_ptr@@Base>
   13828:	ldr	r0, [r0]
   1382c:	vldr	d0, [r0]
   13830:	pop	{fp, pc}

00013834 <table_get_char@@Base>:
   13834:	push	{fp, lr}
   13838:	mov	fp, sp
   1383c:	bl	149d0 <table_get_cell_ptr@@Base>
   13840:	ldr	r0, [r0]
   13844:	ldrb	r0, [r0]
   13848:	pop	{fp, pc}

0001384c <table_get_uchar@@Base>:
   1384c:	push	{fp, lr}
   13850:	mov	fp, sp
   13854:	bl	149d0 <table_get_cell_ptr@@Base>
   13858:	ldr	r0, [r0]
   1385c:	ldrb	r0, [r0]
   13860:	pop	{fp, pc}

00013864 <table_get_string@@Base>:
   13864:	push	{fp, lr}
   13868:	mov	fp, sp
   1386c:	bl	149d0 <table_get_cell_ptr@@Base>
   13870:	ldr	r0, [r0]
   13874:	pop	{fp, pc}

00013878 <table_get_ptr@@Base>:
   13878:	push	{fp, lr}
   1387c:	mov	fp, sp
   13880:	bl	149d0 <table_get_cell_ptr@@Base>
   13884:	ldr	r0, [r0]
   13888:	pop	{fp, pc}

0001388c <table_row_init@@Base>:
   1388c:	push	{r4, r5, fp, lr}
   13890:	add	fp, sp, #8
   13894:	mov	r4, r1
   13898:	ldr	r1, [r0, #12]
   1389c:	ldr	r5, [r0, #16]
   138a0:	lsl	r0, r1, #2
   138a4:	bl	11f1c <malloc@plt>
   138a8:	str	r0, [r5, r4, lsl #2]
   138ac:	pop	{r4, r5, fp, pc}

000138b0 <table_get_row_ptr@@Base>:
   138b0:	ldr	r0, [r0, #16]
   138b4:	add	r0, r0, r1, lsl #2
   138b8:	bx	lr

000138bc <table_row_destroy@@Base>:
   138bc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   138c0:	add	fp, sp, #24
   138c4:	mov	r4, r1
   138c8:	mov	r5, r0
   138cc:	bl	12bf0 <table_get_column_length@@Base>
   138d0:	ldr	r8, [r5, #16]
   138d4:	cmp	r0, #1
   138d8:	blt	13900 <table_row_destroy@@Base+0x44>
   138dc:	mov	r6, r0
   138e0:	mov	r7, #0
   138e4:	mov	r0, r5
   138e8:	mov	r1, r4
   138ec:	mov	r2, r7
   138f0:	bl	149ec <table_cell_destroy@@Base>
   138f4:	add	r7, r7, #1
   138f8:	cmp	r6, r7
   138fc:	bne	138e4 <table_row_destroy@@Base+0x28>
   13900:	ldr	r0, [r8, r4, lsl #2]
   13904:	cmp	r0, #0
   13908:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   1390c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   13910:	b	11eec <free@plt>

00013914 <table_get_row_length@@Base>:
   13914:	ldr	r0, [r0, #20]
   13918:	bx	lr

0001391c <table_add_row@@Base>:
   1391c:	push	{r4, r5, r6, r7, fp, lr}
   13920:	add	fp, sp, #16
   13924:	ldr	r5, [r0, #20]
   13928:	ldr	r1, [r0, #24]
   1392c:	mov	r4, r0
   13930:	udiv	r0, r5, r1
   13934:	mls	r0, r0, r1, r5
   13938:	cmp	r0, #0
   1393c:	bne	13960 <table_add_row@@Base+0x44>
   13940:	ldr	r2, [r4, #28]
   13944:	ldr	r0, [r4, #16]
   13948:	add	r1, r2, r1
   1394c:	str	r1, [r4, #28]
   13950:	lsl	r1, r1, #2
   13954:	bl	11f04 <realloc@plt>
   13958:	str	r0, [r4, #16]
   1395c:	ldr	r5, [r4, #20]
   13960:	mov	r0, r4
   13964:	bl	12bf0 <table_get_column_length@@Base>
   13968:	mov	r6, r0
   1396c:	ldr	r0, [r4, #12]
   13970:	ldr	r7, [r4, #16]
   13974:	lsl	r0, r0, #2
   13978:	bl	11f1c <malloc@plt>
   1397c:	cmp	r6, #1
   13980:	str	r0, [r7, r5, lsl #2]
   13984:	blt	139a8 <table_add_row@@Base+0x8c>
   13988:	mov	r7, #0
   1398c:	mov	r0, r4
   13990:	mov	r1, r5
   13994:	mov	r2, r7
   13998:	bl	149b0 <table_cell_init@@Base>
   1399c:	add	r7, r7, #1
   139a0:	cmp	r6, r7
   139a4:	bne	1398c <table_add_row@@Base+0x70>
   139a8:	ldr	r1, [r4, #20]
   139ac:	mov	r0, r4
   139b0:	mvn	r2, #0
   139b4:	mov	r3, #2
   139b8:	bl	12afc <table_notify@@Base>
   139bc:	ldr	r0, [r4, #20]
   139c0:	add	r1, r0, #1
   139c4:	str	r1, [r4, #20]
   139c8:	pop	{r4, r5, r6, r7, fp, pc}

000139cc <table_remove_row@@Base>:
   139cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   139d0:	add	fp, sp, #24
   139d4:	ldr	r8, [r0, #20]
   139d8:	mov	r4, r1
   139dc:	mov	r5, r0
   139e0:	bl	12bf0 <table_get_column_length@@Base>
   139e4:	cmp	r0, #1
   139e8:	blt	13a34 <table_remove_row@@Base+0x68>
   139ec:	mov	r6, r0
   139f0:	mov	r7, #0
   139f4:	mov	r0, r5
   139f8:	mov	r1, r7
   139fc:	bl	12c64 <table_get_column_data_type@@Base>
   13a00:	cmp	r0, #23
   13a04:	beq	13a28 <table_remove_row@@Base+0x5c>
   13a08:	mov	r0, r5
   13a0c:	mov	r1, r4
   13a10:	mov	r2, r7
   13a14:	bl	149d0 <table_get_cell_ptr@@Base>
   13a18:	ldr	r0, [r0]
   13a1c:	cmp	r0, #0
   13a20:	beq	13a28 <table_remove_row@@Base+0x5c>
   13a24:	bl	11eec <free@plt>
   13a28:	add	r7, r7, #1
   13a2c:	cmp	r6, r7
   13a30:	bne	139f4 <table_remove_row@@Base+0x28>
   13a34:	ldr	r0, [r5, #16]
   13a38:	ldr	r0, [r0, r4, lsl #2]
   13a3c:	cmp	r0, #0
   13a40:	beq	13a48 <table_remove_row@@Base+0x7c>
   13a44:	bl	11eec <free@plt>
   13a48:	sub	r0, r8, #1
   13a4c:	cmp	r0, r4
   13a50:	ble	13a74 <table_remove_row@@Base+0xa8>
   13a54:	mov	r1, r4
   13a58:	ldr	r2, [r5, #16]
   13a5c:	add	r3, r2, r1, lsl #2
   13a60:	ldr	r3, [r3, #4]
   13a64:	str	r3, [r2, r1, lsl #2]
   13a68:	add	r1, r1, #1
   13a6c:	cmp	r0, r1
   13a70:	bne	13a58 <table_remove_row@@Base+0x8c>
   13a74:	ldr	r0, [r5, #20]
   13a78:	ldr	r1, [r5, #24]
   13a7c:	sub	r0, r0, #1
   13a80:	udiv	r2, r0, r1
   13a84:	str	r0, [r5, #20]
   13a88:	mls	r0, r2, r1, r0
   13a8c:	cmp	r0, #0
   13a90:	bne	13ab0 <table_remove_row@@Base+0xe4>
   13a94:	ldr	r2, [r5, #28]
   13a98:	ldr	r0, [r5, #16]
   13a9c:	sub	r1, r2, r1
   13aa0:	str	r1, [r5, #28]
   13aa4:	lsl	r1, r1, #2
   13aa8:	bl	11f04 <realloc@plt>
   13aac:	str	r0, [r5, #16]
   13ab0:	mov	r0, r5
   13ab4:	mov	r1, r4
   13ab8:	mvn	r2, #0
   13abc:	mov	r3, #4
   13ac0:	bl	12afc <table_notify@@Base>
   13ac4:	mov	r0, #0
   13ac8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013acc <table_set_row_ptr@@Base>:
   13acc:	ldr	r2, [r2]
   13ad0:	ldr	r0, [r0, #16]
   13ad4:	str	r2, [r0, r1, lsl #2]
   13ad8:	bx	lr

00013adc <table_set@@Base>:
   13adc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13ae0:	add	fp, sp, #24
   13ae4:	mov	r8, r3
   13ae8:	mov	r4, r2
   13aec:	mov	r9, r1
   13af0:	mov	r6, r0
   13af4:	bl	149d0 <table_get_cell_ptr@@Base>
   13af8:	mov	r5, r0
   13afc:	mov	r0, r6
   13b00:	mov	r1, r4
   13b04:	bl	12bc8 <table_get_col_ptr@@Base>
   13b08:	ldr	r1, [fp, #8]
   13b0c:	mvn	r7, #0
   13b10:	cmp	r1, #23
   13b14:	bhi	13ddc <table_set@@Base+0x300>
   13b18:	add	r2, pc, #4
   13b1c:	ldr	r1, [r2, r1, lsl #2]
   13b20:	add	pc, r2, r1
   13b24:	andeq	r0, r0, r0, rrx
   13b28:	andeq	r0, r0, r0, ror r0
   13b2c:	andeq	r0, r0, r0, lsl #1
   13b30:	muleq	r0, r0, r0
   13b34:	andeq	r0, r0, r0, lsr #1
   13b38:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   13b3c:	andeq	r0, r0, r0, asr #1
   13b40:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13b44:	andeq	r0, r0, r0, ror #1
   13b48:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13b4c:	andeq	r0, r0, r0, lsl #2
   13b50:	andeq	r0, r0, r0, lsl r1
   13b54:	andeq	r0, r0, r8, asr #2
   13b58:	andeq	r0, r0, r8, asr r1
   13b5c:	andeq	r0, r0, r8, ror #2
   13b60:	andeq	r0, r0, r8, ror r1
   13b64:	andeq	r0, r0, r8, lsl #3
   13b68:	andeq	r0, r0, r0, asr #3
   13b6c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   13b70:	andeq	r0, r0, r0, lsl r2
   13b74:	andeq	r0, r0, r0, lsr #4
   13b78:	andeq	r0, r0, r0, lsr r2
   13b7c:	andeq	r0, r0, ip, ror #4
   13b80:	andeq	r0, r0, r0, asr #5
   13b84:	ldr	r0, [r0, #4]
   13b88:	cmp	r0, #0
   13b8c:	bne	13ddc <table_set@@Base+0x300>
   13b90:	b	13cb8 <table_set@@Base+0x1dc>
   13b94:	ldr	r0, [r0, #4]
   13b98:	cmp	r0, #1
   13b9c:	beq	13cb8 <table_set@@Base+0x1dc>
   13ba0:	b	13ddc <table_set@@Base+0x300>
   13ba4:	ldr	r0, [r0, #4]
   13ba8:	cmp	r0, #2
   13bac:	beq	13d9c <table_set@@Base+0x2c0>
   13bb0:	b	13ddc <table_set@@Base+0x300>
   13bb4:	ldr	r0, [r0, #4]
   13bb8:	cmp	r0, #3
   13bbc:	beq	13d9c <table_set@@Base+0x2c0>
   13bc0:	b	13ddc <table_set@@Base+0x300>
   13bc4:	ldr	r0, [r0, #4]
   13bc8:	cmp	r0, #4
   13bcc:	beq	13c40 <table_set@@Base+0x164>
   13bd0:	b	13ddc <table_set@@Base+0x300>
   13bd4:	ldr	r0, [r0, #4]
   13bd8:	cmp	r0, #5
   13bdc:	beq	13c40 <table_set@@Base+0x164>
   13be0:	b	13ddc <table_set@@Base+0x300>
   13be4:	ldr	r0, [r0, #4]
   13be8:	cmp	r0, #6
   13bec:	beq	13cb8 <table_set@@Base+0x1dc>
   13bf0:	b	13ddc <table_set@@Base+0x300>
   13bf4:	ldr	r0, [r0, #4]
   13bf8:	cmp	r0, #7
   13bfc:	beq	13cb8 <table_set@@Base+0x1dc>
   13c00:	b	13ddc <table_set@@Base+0x300>
   13c04:	ldr	r0, [r0, #4]
   13c08:	cmp	r0, #8
   13c0c:	beq	13d00 <table_set@@Base+0x224>
   13c10:	b	13ddc <table_set@@Base+0x300>
   13c14:	ldr	r0, [r0, #4]
   13c18:	cmp	r0, #9
   13c1c:	beq	13d00 <table_set@@Base+0x224>
   13c20:	b	13ddc <table_set@@Base+0x300>
   13c24:	ldr	r0, [r0, #4]
   13c28:	cmp	r0, #10
   13c2c:	beq	13c40 <table_set@@Base+0x164>
   13c30:	b	13ddc <table_set@@Base+0x300>
   13c34:	ldr	r0, [r0, #4]
   13c38:	cmp	r0, #11
   13c3c:	bne	13ddc <table_set@@Base+0x300>
   13c40:	ldr	r0, [r5]
   13c44:	cmp	r0, #0
   13c48:	bne	13c60 <table_set@@Base+0x184>
   13c4c:	mov	r0, #2
   13c50:	bl	11f1c <malloc@plt>
   13c54:	cmp	r0, #0
   13c58:	str	r0, [r5]
   13c5c:	beq	13ddc <table_set@@Base+0x300>
   13c60:	ldrh	r1, [r8]
   13c64:	strh	r1, [r0]
   13c68:	b	13dc4 <table_set@@Base+0x2e8>
   13c6c:	ldr	r0, [r0, #4]
   13c70:	cmp	r0, #12
   13c74:	beq	13cb8 <table_set@@Base+0x1dc>
   13c78:	b	13ddc <table_set@@Base+0x300>
   13c7c:	ldr	r0, [r0, #4]
   13c80:	cmp	r0, #13
   13c84:	beq	13cb8 <table_set@@Base+0x1dc>
   13c88:	b	13ddc <table_set@@Base+0x300>
   13c8c:	ldr	r0, [r0, #4]
   13c90:	cmp	r0, #14
   13c94:	beq	13d00 <table_set@@Base+0x224>
   13c98:	b	13ddc <table_set@@Base+0x300>
   13c9c:	ldr	r0, [r0, #4]
   13ca0:	cmp	r0, #15
   13ca4:	beq	13d00 <table_set@@Base+0x224>
   13ca8:	b	13ddc <table_set@@Base+0x300>
   13cac:	ldr	r0, [r0, #4]
   13cb0:	cmp	r0, #16
   13cb4:	bne	13ddc <table_set@@Base+0x300>
   13cb8:	ldr	r0, [r5]
   13cbc:	cmp	r0, #0
   13cc0:	bne	13cd8 <table_set@@Base+0x1fc>
   13cc4:	mov	r0, #4
   13cc8:	bl	11f1c <malloc@plt>
   13ccc:	cmp	r0, #0
   13cd0:	str	r0, [r5]
   13cd4:	beq	13ddc <table_set@@Base+0x300>
   13cd8:	ldr	r1, [r8]
   13cdc:	str	r1, [r0]
   13ce0:	b	13dc4 <table_set@@Base+0x2e8>
   13ce4:	ldr	r0, [r0, #4]
   13ce8:	cmp	r0, #17
   13cec:	beq	13d00 <table_set@@Base+0x224>
   13cf0:	b	13ddc <table_set@@Base+0x300>
   13cf4:	ldr	r0, [r0, #4]
   13cf8:	cmp	r0, #18
   13cfc:	bne	13ddc <table_set@@Base+0x300>
   13d00:	ldr	r0, [r5]
   13d04:	cmp	r0, #0
   13d08:	bne	13d20 <table_set@@Base+0x244>
   13d0c:	mov	r0, #8
   13d10:	bl	11f1c <malloc@plt>
   13d14:	cmp	r0, #0
   13d18:	str	r0, [r5]
   13d1c:	beq	13ddc <table_set@@Base+0x300>
   13d20:	ldr	r1, [r8]
   13d24:	ldr	r2, [r8, #4]
   13d28:	str	r2, [r0, #4]
   13d2c:	str	r1, [r0]
   13d30:	b	13dc4 <table_set@@Base+0x2e8>
   13d34:	ldr	r0, [r0, #4]
   13d38:	cmp	r0, #19
   13d3c:	beq	13d9c <table_set@@Base+0x2c0>
   13d40:	b	13ddc <table_set@@Base+0x300>
   13d44:	ldr	r0, [r0, #4]
   13d48:	cmp	r0, #20
   13d4c:	beq	13d9c <table_set@@Base+0x2c0>
   13d50:	b	13ddc <table_set@@Base+0x300>
   13d54:	ldr	r0, [r0, #4]
   13d58:	cmp	r0, #21
   13d5c:	bne	13ddc <table_set@@Base+0x300>
   13d60:	mov	r0, r8
   13d64:	bl	11f40 <strlen@plt>
   13d68:	ldr	r2, [r5]
   13d6c:	add	r1, r0, #1
   13d70:	mov	r0, r2
   13d74:	bl	11f04 <realloc@plt>
   13d78:	cmp	r0, #0
   13d7c:	str	r0, [r5]
   13d80:	beq	13ddc <table_set@@Base+0x300>
   13d84:	mov	r1, r8
   13d88:	bl	11f10 <strcpy@plt>
   13d8c:	b	13dc4 <table_set@@Base+0x2e8>
   13d90:	ldr	r0, [r0, #4]
   13d94:	cmp	r0, #22
   13d98:	bne	13ddc <table_set@@Base+0x300>
   13d9c:	ldr	r0, [r5]
   13da0:	cmp	r0, #0
   13da4:	bne	13dbc <table_set@@Base+0x2e0>
   13da8:	mov	r0, #1
   13dac:	bl	11f1c <malloc@plt>
   13db0:	cmp	r0, #0
   13db4:	str	r0, [r5]
   13db8:	beq	13ddc <table_set@@Base+0x300>
   13dbc:	ldrb	r1, [r8]
   13dc0:	strb	r1, [r0]
   13dc4:	mov	r0, r6
   13dc8:	mov	r1, r9
   13dcc:	mov	r2, r4
   13dd0:	mov	r3, #1
   13dd4:	bl	12afc <table_notify@@Base>
   13dd8:	mov	r7, #0
   13ddc:	mov	r0, r7
   13de0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13de4:	ldr	r0, [r0, #4]
   13de8:	cmp	r0, #23
   13dec:	bne	13ddc <table_set@@Base+0x300>
   13df0:	str	r8, [r5]
   13df4:	b	13dc4 <table_set@@Base+0x2e8>

00013df8 <table_set_bool@@Base>:
   13df8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13dfc:	add	fp, sp, #24
   13e00:	mov	r8, r3
   13e04:	mov	r4, r2
   13e08:	mov	r9, r1
   13e0c:	mov	r6, r0
   13e10:	bl	149d0 <table_get_cell_ptr@@Base>
   13e14:	mov	r5, r0
   13e18:	mov	r0, r6
   13e1c:	mov	r1, r4
   13e20:	bl	12bc8 <table_get_col_ptr@@Base>
   13e24:	ldr	r0, [r0, #4]
   13e28:	mvn	r7, #0
   13e2c:	cmp	r0, #22
   13e30:	bne	13e70 <table_set_bool@@Base+0x78>
   13e34:	ldr	r0, [r5]
   13e38:	cmp	r0, #0
   13e3c:	bne	13e54 <table_set_bool@@Base+0x5c>
   13e40:	mov	r0, #1
   13e44:	bl	11f1c <malloc@plt>
   13e48:	cmp	r0, #0
   13e4c:	str	r0, [r5]
   13e50:	beq	13e70 <table_set_bool@@Base+0x78>
   13e54:	strb	r8, [r0]
   13e58:	mov	r0, r6
   13e5c:	mov	r1, r9
   13e60:	mov	r2, r4
   13e64:	mov	r3, #1
   13e68:	bl	12afc <table_notify@@Base>
   13e6c:	mov	r7, #0
   13e70:	mov	r0, r7
   13e74:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013e78 <table_set_int@@Base>:
   13e78:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13e7c:	add	fp, sp, #24
   13e80:	mov	r8, r3
   13e84:	mov	r4, r2
   13e88:	mov	r5, r1
   13e8c:	mov	r6, r0
   13e90:	bl	149d0 <table_get_cell_ptr@@Base>
   13e94:	mov	r9, r0
   13e98:	mov	r0, r6
   13e9c:	mov	r1, r4
   13ea0:	bl	12bc8 <table_get_col_ptr@@Base>
   13ea4:	ldr	r0, [r0, #4]
   13ea8:	mvn	r7, #0
   13eac:	cmp	r0, #0
   13eb0:	bne	13ef0 <table_set_int@@Base+0x78>
   13eb4:	ldr	r0, [r9]
   13eb8:	cmp	r0, #0
   13ebc:	bne	13ed4 <table_set_int@@Base+0x5c>
   13ec0:	mov	r0, #4
   13ec4:	bl	11f1c <malloc@plt>
   13ec8:	cmp	r0, #0
   13ecc:	str	r0, [r9]
   13ed0:	beq	13ef0 <table_set_int@@Base+0x78>
   13ed4:	str	r8, [r0]
   13ed8:	mov	r0, r6
   13edc:	mov	r1, r5
   13ee0:	mov	r2, r4
   13ee4:	mov	r3, #1
   13ee8:	bl	12afc <table_notify@@Base>
   13eec:	mov	r7, #0
   13ef0:	mov	r0, r7
   13ef4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013ef8 <table_set_uint@@Base>:
   13ef8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13efc:	add	fp, sp, #24
   13f00:	mov	r8, r3
   13f04:	mov	r4, r2
   13f08:	mov	r5, r1
   13f0c:	mov	r6, r0
   13f10:	bl	149d0 <table_get_cell_ptr@@Base>
   13f14:	mov	r9, r0
   13f18:	mov	r0, r6
   13f1c:	mov	r1, r4
   13f20:	bl	12bc8 <table_get_col_ptr@@Base>
   13f24:	ldr	r0, [r0, #4]
   13f28:	mvn	r7, #0
   13f2c:	cmp	r0, #1
   13f30:	bne	13f70 <table_set_uint@@Base+0x78>
   13f34:	ldr	r0, [r9]
   13f38:	cmp	r0, #0
   13f3c:	bne	13f54 <table_set_uint@@Base+0x5c>
   13f40:	mov	r0, #4
   13f44:	bl	11f1c <malloc@plt>
   13f48:	cmp	r0, #0
   13f4c:	str	r0, [r9]
   13f50:	beq	13f70 <table_set_uint@@Base+0x78>
   13f54:	str	r8, [r0]
   13f58:	mov	r0, r6
   13f5c:	mov	r1, r5
   13f60:	mov	r2, r4
   13f64:	mov	r3, #1
   13f68:	bl	12afc <table_notify@@Base>
   13f6c:	mov	r7, #0
   13f70:	mov	r0, r7
   13f74:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013f78 <table_set_int8@@Base>:
   13f78:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13f7c:	add	fp, sp, #24
   13f80:	mov	r8, r3
   13f84:	mov	r4, r2
   13f88:	mov	r9, r1
   13f8c:	mov	r6, r0
   13f90:	bl	149d0 <table_get_cell_ptr@@Base>
   13f94:	mov	r5, r0
   13f98:	mov	r0, r6
   13f9c:	mov	r1, r4
   13fa0:	bl	12bc8 <table_get_col_ptr@@Base>
   13fa4:	ldr	r0, [r0, #4]
   13fa8:	mvn	r7, #0
   13fac:	cmp	r0, #2
   13fb0:	bne	13ff0 <table_set_int8@@Base+0x78>
   13fb4:	ldr	r0, [r5]
   13fb8:	cmp	r0, #0
   13fbc:	bne	13fd4 <table_set_int8@@Base+0x5c>
   13fc0:	mov	r0, #1
   13fc4:	bl	11f1c <malloc@plt>
   13fc8:	cmp	r0, #0
   13fcc:	str	r0, [r5]
   13fd0:	beq	13ff0 <table_set_int8@@Base+0x78>
   13fd4:	strb	r8, [r0]
   13fd8:	mov	r0, r6
   13fdc:	mov	r1, r9
   13fe0:	mov	r2, r4
   13fe4:	mov	r3, #1
   13fe8:	bl	12afc <table_notify@@Base>
   13fec:	mov	r7, #0
   13ff0:	mov	r0, r7
   13ff4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00013ff8 <table_set_uint8@@Base>:
   13ff8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13ffc:	add	fp, sp, #24
   14000:	mov	r8, r3
   14004:	mov	r4, r2
   14008:	mov	r9, r1
   1400c:	mov	r6, r0
   14010:	bl	149d0 <table_get_cell_ptr@@Base>
   14014:	mov	r5, r0
   14018:	mov	r0, r6
   1401c:	mov	r1, r4
   14020:	bl	12bc8 <table_get_col_ptr@@Base>
   14024:	ldr	r0, [r0, #4]
   14028:	mvn	r7, #0
   1402c:	cmp	r0, #3
   14030:	bne	14070 <table_set_uint8@@Base+0x78>
   14034:	ldr	r0, [r5]
   14038:	cmp	r0, #0
   1403c:	bne	14054 <table_set_uint8@@Base+0x5c>
   14040:	mov	r0, #1
   14044:	bl	11f1c <malloc@plt>
   14048:	cmp	r0, #0
   1404c:	str	r0, [r5]
   14050:	beq	14070 <table_set_uint8@@Base+0x78>
   14054:	strb	r8, [r0]
   14058:	mov	r0, r6
   1405c:	mov	r1, r9
   14060:	mov	r2, r4
   14064:	mov	r3, #1
   14068:	bl	12afc <table_notify@@Base>
   1406c:	mov	r7, #0
   14070:	mov	r0, r7
   14074:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014078 <table_set_int16@@Base>:
   14078:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1407c:	add	fp, sp, #24
   14080:	mov	r8, r3
   14084:	mov	r4, r2
   14088:	mov	r9, r1
   1408c:	mov	r6, r0
   14090:	bl	149d0 <table_get_cell_ptr@@Base>
   14094:	mov	r5, r0
   14098:	mov	r0, r6
   1409c:	mov	r1, r4
   140a0:	bl	12bc8 <table_get_col_ptr@@Base>
   140a4:	ldr	r0, [r0, #4]
   140a8:	mvn	r7, #0
   140ac:	cmp	r0, #4
   140b0:	bne	140f0 <table_set_int16@@Base+0x78>
   140b4:	ldr	r0, [r5]
   140b8:	cmp	r0, #0
   140bc:	bne	140d4 <table_set_int16@@Base+0x5c>
   140c0:	mov	r0, #2
   140c4:	bl	11f1c <malloc@plt>
   140c8:	cmp	r0, #0
   140cc:	str	r0, [r5]
   140d0:	beq	140f0 <table_set_int16@@Base+0x78>
   140d4:	strh	r8, [r0]
   140d8:	mov	r0, r6
   140dc:	mov	r1, r9
   140e0:	mov	r2, r4
   140e4:	mov	r3, #1
   140e8:	bl	12afc <table_notify@@Base>
   140ec:	mov	r7, #0
   140f0:	mov	r0, r7
   140f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000140f8 <table_set_uint16@@Base>:
   140f8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   140fc:	add	fp, sp, #24
   14100:	mov	r8, r3
   14104:	mov	r4, r2
   14108:	mov	r9, r1
   1410c:	mov	r6, r0
   14110:	bl	149d0 <table_get_cell_ptr@@Base>
   14114:	mov	r5, r0
   14118:	mov	r0, r6
   1411c:	mov	r1, r4
   14120:	bl	12bc8 <table_get_col_ptr@@Base>
   14124:	ldr	r0, [r0, #4]
   14128:	mvn	r7, #0
   1412c:	cmp	r0, #5
   14130:	bne	14170 <table_set_uint16@@Base+0x78>
   14134:	ldr	r0, [r5]
   14138:	cmp	r0, #0
   1413c:	bne	14154 <table_set_uint16@@Base+0x5c>
   14140:	mov	r0, #2
   14144:	bl	11f1c <malloc@plt>
   14148:	cmp	r0, #0
   1414c:	str	r0, [r5]
   14150:	beq	14170 <table_set_uint16@@Base+0x78>
   14154:	strh	r8, [r0]
   14158:	mov	r0, r6
   1415c:	mov	r1, r9
   14160:	mov	r2, r4
   14164:	mov	r3, #1
   14168:	bl	12afc <table_notify@@Base>
   1416c:	mov	r7, #0
   14170:	mov	r0, r7
   14174:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014178 <table_set_int32@@Base>:
   14178:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1417c:	add	fp, sp, #24
   14180:	mov	r8, r3
   14184:	mov	r4, r2
   14188:	mov	r5, r1
   1418c:	mov	r6, r0
   14190:	bl	149d0 <table_get_cell_ptr@@Base>
   14194:	mov	r9, r0
   14198:	mov	r0, r6
   1419c:	mov	r1, r4
   141a0:	bl	12bc8 <table_get_col_ptr@@Base>
   141a4:	ldr	r0, [r0, #4]
   141a8:	mvn	r7, #0
   141ac:	cmp	r0, #6
   141b0:	bne	141f0 <table_set_int32@@Base+0x78>
   141b4:	ldr	r0, [r9]
   141b8:	cmp	r0, #0
   141bc:	bne	141d4 <table_set_int32@@Base+0x5c>
   141c0:	mov	r0, #4
   141c4:	bl	11f1c <malloc@plt>
   141c8:	cmp	r0, #0
   141cc:	str	r0, [r9]
   141d0:	beq	141f0 <table_set_int32@@Base+0x78>
   141d4:	str	r8, [r0]
   141d8:	mov	r0, r6
   141dc:	mov	r1, r5
   141e0:	mov	r2, r4
   141e4:	mov	r3, #1
   141e8:	bl	12afc <table_notify@@Base>
   141ec:	mov	r7, #0
   141f0:	mov	r0, r7
   141f4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000141f8 <table_set_uint32@@Base>:
   141f8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   141fc:	add	fp, sp, #24
   14200:	mov	r8, r3
   14204:	mov	r4, r2
   14208:	mov	r5, r1
   1420c:	mov	r6, r0
   14210:	bl	149d0 <table_get_cell_ptr@@Base>
   14214:	mov	r9, r0
   14218:	mov	r0, r6
   1421c:	mov	r1, r4
   14220:	bl	12bc8 <table_get_col_ptr@@Base>
   14224:	ldr	r0, [r0, #4]
   14228:	mvn	r7, #0
   1422c:	cmp	r0, #7
   14230:	bne	14270 <table_set_uint32@@Base+0x78>
   14234:	ldr	r0, [r9]
   14238:	cmp	r0, #0
   1423c:	bne	14254 <table_set_uint32@@Base+0x5c>
   14240:	mov	r0, #4
   14244:	bl	11f1c <malloc@plt>
   14248:	cmp	r0, #0
   1424c:	str	r0, [r9]
   14250:	beq	14270 <table_set_uint32@@Base+0x78>
   14254:	str	r8, [r0]
   14258:	mov	r0, r6
   1425c:	mov	r1, r5
   14260:	mov	r2, r4
   14264:	mov	r3, #1
   14268:	bl	12afc <table_notify@@Base>
   1426c:	mov	r7, #0
   14270:	mov	r0, r7
   14274:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014278 <table_set_int64@@Base>:
   14278:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1427c:	add	fp, sp, #24
   14280:	mov	r4, r2
   14284:	mov	r8, r1
   14288:	mov	r6, r0
   1428c:	bl	149d0 <table_get_cell_ptr@@Base>
   14290:	mov	r5, r0
   14294:	mov	r0, r6
   14298:	mov	r1, r4
   1429c:	bl	12bc8 <table_get_col_ptr@@Base>
   142a0:	ldr	r0, [r0, #4]
   142a4:	mvn	r7, #0
   142a8:	cmp	r0, #8
   142ac:	bne	142f8 <table_set_int64@@Base+0x80>
   142b0:	ldr	r0, [r5]
   142b4:	cmp	r0, #0
   142b8:	bne	142d0 <table_set_int64@@Base+0x58>
   142bc:	mov	r0, #8
   142c0:	bl	11f1c <malloc@plt>
   142c4:	cmp	r0, #0
   142c8:	str	r0, [r5]
   142cc:	beq	142f8 <table_set_int64@@Base+0x80>
   142d0:	ldr	r1, [fp, #12]
   142d4:	ldr	r2, [fp, #8]
   142d8:	mov	r3, #1
   142dc:	str	r2, [r0]
   142e0:	str	r1, [r0, #4]
   142e4:	mov	r0, r6
   142e8:	mov	r1, r8
   142ec:	mov	r2, r4
   142f0:	bl	12afc <table_notify@@Base>
   142f4:	mov	r7, #0
   142f8:	mov	r0, r7
   142fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014300 <table_set_uint64@@Base>:
   14300:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14304:	add	fp, sp, #24
   14308:	mov	r4, r2
   1430c:	mov	r8, r1
   14310:	mov	r6, r0
   14314:	bl	149d0 <table_get_cell_ptr@@Base>
   14318:	mov	r5, r0
   1431c:	mov	r0, r6
   14320:	mov	r1, r4
   14324:	bl	12bc8 <table_get_col_ptr@@Base>
   14328:	ldr	r0, [r0, #4]
   1432c:	mvn	r7, #0
   14330:	cmp	r0, #9
   14334:	bne	14380 <table_set_uint64@@Base+0x80>
   14338:	ldr	r0, [r5]
   1433c:	cmp	r0, #0
   14340:	bne	14358 <table_set_uint64@@Base+0x58>
   14344:	mov	r0, #8
   14348:	bl	11f1c <malloc@plt>
   1434c:	cmp	r0, #0
   14350:	str	r0, [r5]
   14354:	beq	14380 <table_set_uint64@@Base+0x80>
   14358:	ldr	r1, [fp, #12]
   1435c:	ldr	r2, [fp, #8]
   14360:	mov	r3, #1
   14364:	str	r2, [r0]
   14368:	str	r1, [r0, #4]
   1436c:	mov	r0, r6
   14370:	mov	r1, r8
   14374:	mov	r2, r4
   14378:	bl	12afc <table_notify@@Base>
   1437c:	mov	r7, #0
   14380:	mov	r0, r7
   14384:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014388 <table_set_short@@Base>:
   14388:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1438c:	add	fp, sp, #24
   14390:	mov	r8, r3
   14394:	mov	r4, r2
   14398:	mov	r9, r1
   1439c:	mov	r6, r0
   143a0:	bl	149d0 <table_get_cell_ptr@@Base>
   143a4:	mov	r5, r0
   143a8:	mov	r0, r6
   143ac:	mov	r1, r4
   143b0:	bl	12bc8 <table_get_col_ptr@@Base>
   143b4:	ldr	r0, [r0, #4]
   143b8:	mvn	r7, #0
   143bc:	cmp	r0, #10
   143c0:	bne	14400 <table_set_short@@Base+0x78>
   143c4:	ldr	r0, [r5]
   143c8:	cmp	r0, #0
   143cc:	bne	143e4 <table_set_short@@Base+0x5c>
   143d0:	mov	r0, #2
   143d4:	bl	11f1c <malloc@plt>
   143d8:	cmp	r0, #0
   143dc:	str	r0, [r5]
   143e0:	beq	14400 <table_set_short@@Base+0x78>
   143e4:	strh	r8, [r0]
   143e8:	mov	r0, r6
   143ec:	mov	r1, r9
   143f0:	mov	r2, r4
   143f4:	mov	r3, #1
   143f8:	bl	12afc <table_notify@@Base>
   143fc:	mov	r7, #0
   14400:	mov	r0, r7
   14404:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014408 <table_set_ushort@@Base>:
   14408:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1440c:	add	fp, sp, #24
   14410:	mov	r8, r3
   14414:	mov	r4, r2
   14418:	mov	r9, r1
   1441c:	mov	r6, r0
   14420:	bl	149d0 <table_get_cell_ptr@@Base>
   14424:	mov	r5, r0
   14428:	mov	r0, r6
   1442c:	mov	r1, r4
   14430:	bl	12bc8 <table_get_col_ptr@@Base>
   14434:	ldr	r0, [r0, #4]
   14438:	mvn	r7, #0
   1443c:	cmp	r0, #11
   14440:	bne	14480 <table_set_ushort@@Base+0x78>
   14444:	ldr	r0, [r5]
   14448:	cmp	r0, #0
   1444c:	bne	14464 <table_set_ushort@@Base+0x5c>
   14450:	mov	r0, #2
   14454:	bl	11f1c <malloc@plt>
   14458:	cmp	r0, #0
   1445c:	str	r0, [r5]
   14460:	beq	14480 <table_set_ushort@@Base+0x78>
   14464:	strh	r8, [r0]
   14468:	mov	r0, r6
   1446c:	mov	r1, r9
   14470:	mov	r2, r4
   14474:	mov	r3, #1
   14478:	bl	12afc <table_notify@@Base>
   1447c:	mov	r7, #0
   14480:	mov	r0, r7
   14484:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014488 <table_set_long@@Base>:
   14488:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1448c:	add	fp, sp, #24
   14490:	mov	r8, r3
   14494:	mov	r4, r2
   14498:	mov	r5, r1
   1449c:	mov	r6, r0
   144a0:	bl	149d0 <table_get_cell_ptr@@Base>
   144a4:	mov	r9, r0
   144a8:	mov	r0, r6
   144ac:	mov	r1, r4
   144b0:	bl	12bc8 <table_get_col_ptr@@Base>
   144b4:	ldr	r0, [r0, #4]
   144b8:	mvn	r7, #0
   144bc:	cmp	r0, #12
   144c0:	bne	14500 <table_set_long@@Base+0x78>
   144c4:	ldr	r0, [r9]
   144c8:	cmp	r0, #0
   144cc:	bne	144e4 <table_set_long@@Base+0x5c>
   144d0:	mov	r0, #4
   144d4:	bl	11f1c <malloc@plt>
   144d8:	cmp	r0, #0
   144dc:	str	r0, [r9]
   144e0:	beq	14500 <table_set_long@@Base+0x78>
   144e4:	str	r8, [r0]
   144e8:	mov	r0, r6
   144ec:	mov	r1, r5
   144f0:	mov	r2, r4
   144f4:	mov	r3, #1
   144f8:	bl	12afc <table_notify@@Base>
   144fc:	mov	r7, #0
   14500:	mov	r0, r7
   14504:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014508 <table_set_ulong@@Base>:
   14508:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1450c:	add	fp, sp, #24
   14510:	mov	r8, r3
   14514:	mov	r4, r2
   14518:	mov	r5, r1
   1451c:	mov	r6, r0
   14520:	bl	149d0 <table_get_cell_ptr@@Base>
   14524:	mov	r9, r0
   14528:	mov	r0, r6
   1452c:	mov	r1, r4
   14530:	bl	12bc8 <table_get_col_ptr@@Base>
   14534:	ldr	r0, [r0, #4]
   14538:	mvn	r7, #0
   1453c:	cmp	r0, #13
   14540:	bne	14580 <table_set_ulong@@Base+0x78>
   14544:	ldr	r0, [r9]
   14548:	cmp	r0, #0
   1454c:	bne	14564 <table_set_ulong@@Base+0x5c>
   14550:	mov	r0, #4
   14554:	bl	11f1c <malloc@plt>
   14558:	cmp	r0, #0
   1455c:	str	r0, [r9]
   14560:	beq	14580 <table_set_ulong@@Base+0x78>
   14564:	str	r8, [r0]
   14568:	mov	r0, r6
   1456c:	mov	r1, r5
   14570:	mov	r2, r4
   14574:	mov	r3, #1
   14578:	bl	12afc <table_notify@@Base>
   1457c:	mov	r7, #0
   14580:	mov	r0, r7
   14584:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014588 <table_set_llong@@Base>:
   14588:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1458c:	add	fp, sp, #24
   14590:	mov	r4, r2
   14594:	mov	r8, r1
   14598:	mov	r6, r0
   1459c:	bl	149d0 <table_get_cell_ptr@@Base>
   145a0:	mov	r5, r0
   145a4:	mov	r0, r6
   145a8:	mov	r1, r4
   145ac:	bl	12bc8 <table_get_col_ptr@@Base>
   145b0:	ldr	r0, [r0, #4]
   145b4:	mvn	r7, #0
   145b8:	cmp	r0, #14
   145bc:	bne	14608 <table_set_llong@@Base+0x80>
   145c0:	ldr	r0, [r5]
   145c4:	cmp	r0, #0
   145c8:	bne	145e0 <table_set_llong@@Base+0x58>
   145cc:	mov	r0, #8
   145d0:	bl	11f1c <malloc@plt>
   145d4:	cmp	r0, #0
   145d8:	str	r0, [r5]
   145dc:	beq	14608 <table_set_llong@@Base+0x80>
   145e0:	ldr	r1, [fp, #12]
   145e4:	ldr	r2, [fp, #8]
   145e8:	mov	r3, #1
   145ec:	str	r2, [r0]
   145f0:	str	r1, [r0, #4]
   145f4:	mov	r0, r6
   145f8:	mov	r1, r8
   145fc:	mov	r2, r4
   14600:	bl	12afc <table_notify@@Base>
   14604:	mov	r7, #0
   14608:	mov	r0, r7
   1460c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014610 <table_set_ullong@@Base>:
   14610:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14614:	add	fp, sp, #24
   14618:	mov	r4, r2
   1461c:	mov	r8, r1
   14620:	mov	r6, r0
   14624:	bl	149d0 <table_get_cell_ptr@@Base>
   14628:	mov	r5, r0
   1462c:	mov	r0, r6
   14630:	mov	r1, r4
   14634:	bl	12bc8 <table_get_col_ptr@@Base>
   14638:	ldr	r0, [r0, #4]
   1463c:	mvn	r7, #0
   14640:	cmp	r0, #15
   14644:	bne	14690 <table_set_ullong@@Base+0x80>
   14648:	ldr	r0, [r5]
   1464c:	cmp	r0, #0
   14650:	bne	14668 <table_set_ullong@@Base+0x58>
   14654:	mov	r0, #8
   14658:	bl	11f1c <malloc@plt>
   1465c:	cmp	r0, #0
   14660:	str	r0, [r5]
   14664:	beq	14690 <table_set_ullong@@Base+0x80>
   14668:	ldr	r1, [fp, #12]
   1466c:	ldr	r2, [fp, #8]
   14670:	mov	r3, #1
   14674:	str	r2, [r0]
   14678:	str	r1, [r0, #4]
   1467c:	mov	r0, r6
   14680:	mov	r1, r8
   14684:	mov	r2, r4
   14688:	bl	12afc <table_notify@@Base>
   1468c:	mov	r7, #0
   14690:	mov	r0, r7
   14694:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014698 <table_set_float@@Base>:
   14698:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1469c:	add	fp, sp, #24
   146a0:	vpush	{d8}
   146a4:	vmov.f32	s16, s0
   146a8:	mov	r4, r2
   146ac:	mov	r8, r1
   146b0:	mov	r6, r0
   146b4:	bl	149d0 <table_get_cell_ptr@@Base>
   146b8:	mov	r5, r0
   146bc:	mov	r0, r6
   146c0:	mov	r1, r4
   146c4:	bl	12bc8 <table_get_col_ptr@@Base>
   146c8:	ldr	r0, [r0, #4]
   146cc:	mvn	r7, #0
   146d0:	cmp	r0, #16
   146d4:	bne	14718 <table_set_float@@Base+0x80>
   146d8:	ldr	r0, [r5]
   146dc:	cmp	r0, #0
   146e0:	bne	146f8 <table_set_float@@Base+0x60>
   146e4:	mov	r0, #4
   146e8:	bl	11f1c <malloc@plt>
   146ec:	cmp	r0, #0
   146f0:	str	r0, [r5]
   146f4:	beq	14718 <table_set_float@@Base+0x80>
   146f8:	vmov	r1, s16
   146fc:	mov	r2, r4
   14700:	mov	r3, #1
   14704:	str	r1, [r0]
   14708:	mov	r0, r6
   1470c:	mov	r1, r8
   14710:	bl	12afc <table_notify@@Base>
   14714:	mov	r7, #0
   14718:	mov	r0, r7
   1471c:	vpop	{d8}
   14720:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014724 <table_set_double@@Base>:
   14724:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14728:	add	fp, sp, #24
   1472c:	vpush	{d8}
   14730:	vorr	d8, d0, d0
   14734:	mov	r4, r2
   14738:	mov	r5, r1
   1473c:	mov	r6, r0
   14740:	bl	149d0 <table_get_cell_ptr@@Base>
   14744:	mov	r8, r0
   14748:	mov	r0, r6
   1474c:	mov	r1, r4
   14750:	bl	12bc8 <table_get_col_ptr@@Base>
   14754:	ldr	r0, [r0, #4]
   14758:	mvn	r7, #0
   1475c:	cmp	r0, #17
   14760:	bne	147a0 <table_set_double@@Base+0x7c>
   14764:	ldr	r0, [r8]
   14768:	cmp	r0, #0
   1476c:	bne	14784 <table_set_double@@Base+0x60>
   14770:	mov	r0, #8
   14774:	bl	11f1c <malloc@plt>
   14778:	cmp	r0, #0
   1477c:	str	r0, [r8]
   14780:	beq	147a0 <table_set_double@@Base+0x7c>
   14784:	vst1.8	{d8}, [r0]
   14788:	mov	r0, r6
   1478c:	mov	r1, r5
   14790:	mov	r2, r4
   14794:	mov	r3, #1
   14798:	bl	12afc <table_notify@@Base>
   1479c:	mov	r7, #0
   147a0:	mov	r0, r7
   147a4:	vpop	{d8}
   147a8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000147ac <table_set_ldouble@@Base>:
   147ac:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   147b0:	add	fp, sp, #24
   147b4:	vpush	{d8}
   147b8:	vorr	d8, d0, d0
   147bc:	mov	r4, r2
   147c0:	mov	r5, r1
   147c4:	mov	r6, r0
   147c8:	bl	149d0 <table_get_cell_ptr@@Base>
   147cc:	mov	r8, r0
   147d0:	mov	r0, r6
   147d4:	mov	r1, r4
   147d8:	bl	12bc8 <table_get_col_ptr@@Base>
   147dc:	ldr	r0, [r0, #4]
   147e0:	mvn	r7, #0
   147e4:	cmp	r0, #18
   147e8:	bne	14828 <table_set_ldouble@@Base+0x7c>
   147ec:	ldr	r0, [r8]
   147f0:	cmp	r0, #0
   147f4:	bne	1480c <table_set_ldouble@@Base+0x60>
   147f8:	mov	r0, #8
   147fc:	bl	11f1c <malloc@plt>
   14800:	cmp	r0, #0
   14804:	str	r0, [r8]
   14808:	beq	14828 <table_set_ldouble@@Base+0x7c>
   1480c:	vst1.8	{d8}, [r0]
   14810:	mov	r0, r6
   14814:	mov	r1, r5
   14818:	mov	r2, r4
   1481c:	mov	r3, #1
   14820:	bl	12afc <table_notify@@Base>
   14824:	mov	r7, #0
   14828:	mov	r0, r7
   1482c:	vpop	{d8}
   14830:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00014834 <table_set_string@@Base>:
   14834:	push	{fp, lr}
   14838:	mov	fp, sp
   1483c:	sub	sp, sp, #8
   14840:	mov	ip, #21
   14844:	str	ip, [sp]
   14848:	bl	13adc <table_set@@Base>
   1484c:	mov	sp, fp
   14850:	pop	{fp, pc}

00014854 <table_set_char@@Base>:
   14854:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14858:	add	fp, sp, #24
   1485c:	mov	r8, r3
   14860:	mov	r4, r2
   14864:	mov	r9, r1
   14868:	mov	r6, r0
   1486c:	bl	149d0 <table_get_cell_ptr@@Base>
   14870:	mov	r5, r0
   14874:	mov	r0, r6
   14878:	mov	r1, r4
   1487c:	bl	12bc8 <table_get_col_ptr@@Base>
   14880:	ldr	r0, [r0, #4]
   14884:	mvn	r7, #0
   14888:	cmp	r0, #19
   1488c:	bne	148cc <table_set_char@@Base+0x78>
   14890:	ldr	r0, [r5]
   14894:	cmp	r0, #0
   14898:	bne	148b0 <table_set_char@@Base+0x5c>
   1489c:	mov	r0, #1
   148a0:	bl	11f1c <malloc@plt>
   148a4:	cmp	r0, #0
   148a8:	str	r0, [r5]
   148ac:	beq	148cc <table_set_char@@Base+0x78>
   148b0:	strb	r8, [r0]
   148b4:	mov	r0, r6
   148b8:	mov	r1, r9
   148bc:	mov	r2, r4
   148c0:	mov	r3, #1
   148c4:	bl	12afc <table_notify@@Base>
   148c8:	mov	r7, #0
   148cc:	mov	r0, r7
   148d0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

000148d4 <table_set_uchar@@Base>:
   148d4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   148d8:	add	fp, sp, #24
   148dc:	mov	r8, r3
   148e0:	mov	r4, r2
   148e4:	mov	r9, r1
   148e8:	mov	r6, r0
   148ec:	bl	149d0 <table_get_cell_ptr@@Base>
   148f0:	mov	r5, r0
   148f4:	mov	r0, r6
   148f8:	mov	r1, r4
   148fc:	bl	12bc8 <table_get_col_ptr@@Base>
   14900:	ldr	r0, [r0, #4]
   14904:	mvn	r7, #0
   14908:	cmp	r0, #20
   1490c:	bne	1494c <table_set_uchar@@Base+0x78>
   14910:	ldr	r0, [r5]
   14914:	cmp	r0, #0
   14918:	bne	14930 <table_set_uchar@@Base+0x5c>
   1491c:	mov	r0, #1
   14920:	bl	11f1c <malloc@plt>
   14924:	cmp	r0, #0
   14928:	str	r0, [r5]
   1492c:	beq	1494c <table_set_uchar@@Base+0x78>
   14930:	strb	r8, [r0]
   14934:	mov	r0, r6
   14938:	mov	r1, r9
   1493c:	mov	r2, r4
   14940:	mov	r3, #1
   14944:	bl	12afc <table_notify@@Base>
   14948:	mov	r7, #0
   1494c:	mov	r0, r7
   14950:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014954 <table_set_ptr@@Base>:
   14954:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14958:	add	fp, sp, #24
   1495c:	mov	r8, r3
   14960:	mov	r4, r2
   14964:	mov	r5, r1
   14968:	mov	r6, r0
   1496c:	bl	149d0 <table_get_cell_ptr@@Base>
   14970:	mov	r7, r0
   14974:	mov	r0, r6
   14978:	mov	r1, r4
   1497c:	bl	12bc8 <table_get_col_ptr@@Base>
   14980:	ldr	r1, [r0, #4]
   14984:	mvn	r0, #0
   14988:	cmp	r1, #23
   1498c:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   14990:	mov	r0, r6
   14994:	mov	r1, r5
   14998:	mov	r2, r4
   1499c:	mov	r3, #1
   149a0:	str	r8, [r7]
   149a4:	bl	12afc <table_notify@@Base>
   149a8:	mov	r0, #0
   149ac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000149b0 <table_cell_init@@Base>:
   149b0:	push	{r4, sl, fp, lr}
   149b4:	add	fp, sp, #8
   149b8:	mov	r4, r2
   149bc:	bl	138b0 <table_get_row_ptr@@Base>
   149c0:	ldr	r0, [r0]
   149c4:	mov	r1, #0
   149c8:	str	r1, [r0, r4, lsl #2]
   149cc:	pop	{r4, sl, fp, pc}

000149d0 <table_get_cell_ptr@@Base>:
   149d0:	push	{r4, sl, fp, lr}
   149d4:	add	fp, sp, #8
   149d8:	mov	r4, r2
   149dc:	bl	138b0 <table_get_row_ptr@@Base>
   149e0:	ldr	r0, [r0]
   149e4:	add	r0, r0, r4, lsl #2
   149e8:	pop	{r4, sl, fp, pc}

000149ec <table_cell_destroy@@Base>:
   149ec:	push	{r4, r5, r6, sl, fp, lr}
   149f0:	add	fp, sp, #16
   149f4:	mov	r5, r1
   149f8:	mov	r1, r2
   149fc:	mov	r4, r2
   14a00:	mov	r6, r0
   14a04:	bl	12c64 <table_get_column_data_type@@Base>
   14a08:	cmp	r0, #23
   14a0c:	popeq	{r4, r5, r6, sl, fp, pc}
   14a10:	mov	r0, r6
   14a14:	mov	r1, r5
   14a18:	bl	138b0 <table_get_row_ptr@@Base>
   14a1c:	ldr	r0, [r0]
   14a20:	ldr	r0, [r0, r4, lsl #2]
   14a24:	cmp	r0, #0
   14a28:	beq	14a34 <table_cell_destroy@@Base+0x48>
   14a2c:	pop	{r4, r5, r6, sl, fp, lr}
   14a30:	b	11eec <free@plt>
   14a34:	pop	{r4, r5, r6, sl, fp, pc}

00014a38 <table_cell_to_buffer@@Base>:
   14a38:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14a3c:	add	fp, sp, #24
   14a40:	sub	sp, sp, #8
   14a44:	mov	r7, r1
   14a48:	mov	r1, r2
   14a4c:	mov	r5, r3
   14a50:	mov	r6, r2
   14a54:	mov	r4, r0
   14a58:	bl	12c64 <table_get_column_data_type@@Base>
   14a5c:	cmp	r0, #23
   14a60:	bhi	14d54 <table_cell_to_buffer@@Base+0x31c>
   14a64:	add	r1, pc, #8
   14a68:	ldr	r8, [fp, #8]
   14a6c:	ldr	r0, [r1, r0, lsl #2]
   14a70:	add	pc, r1, r0
   14a74:	andeq	r0, r0, r0, rrx
   14a78:	andeq	r0, r0, r4, ror r0
   14a7c:	andeq	r0, r0, r8, lsl #1
   14a80:	muleq	r0, ip, r0
   14a84:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   14a88:	andeq	r0, r0, r4, asr #1
   14a8c:	ldrdeq	r0, [r0], -r8
   14a90:	andeq	r0, r0, ip, ror #1
   14a94:	andeq	r0, r0, ip, lsl #2
   14a98:	andeq	r0, r0, r0, lsr #2
   14a9c:	andeq	r0, r0, r4, lsr r1
   14aa0:	andeq	r0, r0, r4, asr r1
   14aa4:	andeq	r0, r0, r4, ror r1
   14aa8:	muleq	r0, r4, r1
   14aac:			; <UNDEFINED> instruction: 0x000001b4
   14ab0:	ldrdeq	r0, [r0], -r4
   14ab4:	strdeq	r0, [r0], -r4
   14ab8:	andeq	r0, r0, r8, lsl r2
   14abc:	andeq	r0, r0, r8, lsr r2
   14ac0:	andeq	r0, r0, r4, ror #4
   14ac4:	andeq	r0, r0, r8, ror r2
   14ac8:	muleq	r0, r8, r2
   14acc:			; <UNDEFINED> instruction: 0x000002b8
   14ad0:	andeq	r0, r0, ip, ror #5
   14ad4:	mov	r0, r4
   14ad8:	mov	r1, r7
   14adc:	mov	r2, r6
   14ae0:	bl	1366c <table_get_int@@Base>
   14ae4:	b	14d3c <table_cell_to_buffer@@Base+0x304>
   14ae8:	mov	r0, r4
   14aec:	mov	r1, r7
   14af0:	mov	r2, r6
   14af4:	bl	13684 <table_get_uint@@Base>
   14af8:	b	14b70 <table_cell_to_buffer@@Base+0x138>
   14afc:	mov	r0, r4
   14b00:	mov	r1, r7
   14b04:	mov	r2, r6
   14b08:	bl	1369c <table_get_int8@@Base>
   14b0c:	b	14d3c <table_cell_to_buffer@@Base+0x304>
   14b10:	mov	r0, r4
   14b14:	mov	r1, r7
   14b18:	mov	r2, r6
   14b1c:	bl	136b4 <table_get_uint8@@Base>
   14b20:	b	14b70 <table_cell_to_buffer@@Base+0x138>
   14b24:	mov	r0, r4
   14b28:	mov	r1, r7
   14b2c:	mov	r2, r6
   14b30:	bl	136cc <table_get_int16@@Base>
   14b34:	b	14d3c <table_cell_to_buffer@@Base+0x304>
   14b38:	mov	r0, r4
   14b3c:	mov	r1, r7
   14b40:	mov	r2, r6
   14b44:	bl	136e4 <table_get_uint16@@Base>
   14b48:	b	14b70 <table_cell_to_buffer@@Base+0x138>
   14b4c:	mov	r0, r4
   14b50:	mov	r1, r7
   14b54:	mov	r2, r6
   14b58:	bl	136fc <table_get_int32@@Base>
   14b5c:	b	14d3c <table_cell_to_buffer@@Base+0x304>
   14b60:	mov	r0, r4
   14b64:	mov	r1, r7
   14b68:	mov	r2, r6
   14b6c:	bl	13714 <table_get_uint32@@Base>
   14b70:	ldr	r2, [pc, #524]	; 14d84 <table_cell_to_buffer@@Base+0x34c>
   14b74:	mov	r3, r0
   14b78:	add	r2, pc, r2
   14b7c:	b	14d48 <table_cell_to_buffer@@Base+0x310>
   14b80:	mov	r0, r4
   14b84:	mov	r1, r7
   14b88:	mov	r2, r6
   14b8c:	bl	1372c <table_get_int64@@Base>
   14b90:	b	14c38 <table_cell_to_buffer@@Base+0x200>
   14b94:	mov	r0, r4
   14b98:	mov	r1, r7
   14b9c:	mov	r2, r6
   14ba0:	bl	13744 <table_get_uint64@@Base>
   14ba4:	b	14c58 <table_cell_to_buffer@@Base+0x220>
   14ba8:	mov	r0, r4
   14bac:	mov	r1, r7
   14bb0:	mov	r2, r6
   14bb4:	bl	1375c <table_get_short@@Base>
   14bb8:	ldr	r2, [pc, #464]	; 14d90 <table_cell_to_buffer@@Base+0x358>
   14bbc:	mov	r3, r0
   14bc0:	add	r2, pc, r2
   14bc4:	b	14d48 <table_cell_to_buffer@@Base+0x310>
   14bc8:	mov	r0, r4
   14bcc:	mov	r1, r7
   14bd0:	mov	r2, r6
   14bd4:	bl	13774 <table_get_ushort@@Base>
   14bd8:	ldr	r2, [pc, #436]	; 14d94 <table_cell_to_buffer@@Base+0x35c>
   14bdc:	mov	r3, r0
   14be0:	add	r2, pc, r2
   14be4:	b	14d48 <table_cell_to_buffer@@Base+0x310>
   14be8:	mov	r0, r4
   14bec:	mov	r1, r7
   14bf0:	mov	r2, r6
   14bf4:	bl	1378c <table_get_long@@Base>
   14bf8:	ldr	r2, [pc, #408]	; 14d98 <table_cell_to_buffer@@Base+0x360>
   14bfc:	mov	r3, r0
   14c00:	add	r2, pc, r2
   14c04:	b	14d48 <table_cell_to_buffer@@Base+0x310>
   14c08:	mov	r0, r4
   14c0c:	mov	r1, r7
   14c10:	mov	r2, r6
   14c14:	bl	137a4 <table_get_ulong@@Base>
   14c18:	ldr	r2, [pc, #380]	; 14d9c <table_cell_to_buffer@@Base+0x364>
   14c1c:	mov	r3, r0
   14c20:	add	r2, pc, r2
   14c24:	b	14d48 <table_cell_to_buffer@@Base+0x310>
   14c28:	mov	r0, r4
   14c2c:	mov	r1, r7
   14c30:	mov	r2, r6
   14c34:	bl	137bc <table_get_llong@@Base>
   14c38:	stm	sp, {r0, r1}
   14c3c:	ldr	r2, [pc, #324]	; 14d88 <table_cell_to_buffer@@Base+0x350>
   14c40:	add	r2, pc, r2
   14c44:	b	14cc8 <table_cell_to_buffer@@Base+0x290>
   14c48:	mov	r0, r4
   14c4c:	mov	r1, r7
   14c50:	mov	r2, r6
   14c54:	bl	137d4 <table_get_ullong@@Base>
   14c58:	stm	sp, {r0, r1}
   14c5c:	ldr	r2, [pc, #296]	; 14d8c <table_cell_to_buffer@@Base+0x354>
   14c60:	add	r2, pc, r2
   14c64:	b	14cc8 <table_cell_to_buffer@@Base+0x290>
   14c68:	mov	r0, r4
   14c6c:	mov	r1, r7
   14c70:	mov	r2, r6
   14c74:	bl	137ec <table_get_float@@Base>
   14c78:	vcvt.f64.f32	d16, s0
   14c7c:	vstr	d16, [sp]
   14c80:	ldr	r2, [pc, #284]	; 14da4 <table_cell_to_buffer@@Base+0x36c>
   14c84:	add	r2, pc, r2
   14c88:	b	14cc8 <table_cell_to_buffer@@Base+0x290>
   14c8c:	mov	r0, r4
   14c90:	mov	r1, r7
   14c94:	mov	r2, r6
   14c98:	bl	13804 <table_get_double@@Base>
   14c9c:	vstr	d0, [sp]
   14ca0:	ldr	r2, [pc, #256]	; 14da8 <table_cell_to_buffer@@Base+0x370>
   14ca4:	add	r2, pc, r2
   14ca8:	b	14cc8 <table_cell_to_buffer@@Base+0x290>
   14cac:	mov	r0, r4
   14cb0:	mov	r1, r7
   14cb4:	mov	r2, r6
   14cb8:	bl	1381c <table_get_ldouble@@Base>
   14cbc:	vstr	d0, [sp]
   14cc0:	ldr	r2, [pc, #228]	; 14dac <table_cell_to_buffer@@Base+0x374>
   14cc4:	add	r2, pc, r2
   14cc8:	mov	r0, r5
   14ccc:	mov	r1, r8
   14cd0:	bl	11f58 <snprintf@plt>
   14cd4:	b	14d54 <table_cell_to_buffer@@Base+0x31c>
   14cd8:	mov	r0, r4
   14cdc:	mov	r1, r7
   14ce0:	mov	r2, r6
   14ce4:	bl	13834 <table_get_char@@Base>
   14ce8:	b	14cfc <table_cell_to_buffer@@Base+0x2c4>
   14cec:	mov	r0, r4
   14cf0:	mov	r1, r7
   14cf4:	mov	r2, r6
   14cf8:	bl	1384c <table_get_uchar@@Base>
   14cfc:	ldr	r2, [pc, #172]	; 14db0 <table_cell_to_buffer@@Base+0x378>
   14d00:	mov	r3, r0
   14d04:	add	r2, pc, r2
   14d08:	b	14d48 <table_cell_to_buffer@@Base+0x310>
   14d0c:	mov	r0, r4
   14d10:	mov	r1, r7
   14d14:	mov	r2, r6
   14d18:	bl	13864 <table_get_string@@Base>
   14d1c:	ldr	r2, [pc, #124]	; 14da0 <table_cell_to_buffer@@Base+0x368>
   14d20:	mov	r3, r0
   14d24:	add	r2, pc, r2
   14d28:	b	14d48 <table_cell_to_buffer@@Base+0x310>
   14d2c:	mov	r0, r4
   14d30:	mov	r1, r7
   14d34:	mov	r2, r6
   14d38:	bl	13654 <table_get_bool@@Base>
   14d3c:	ldr	r2, [pc, #60]	; 14d80 <table_cell_to_buffer@@Base+0x348>
   14d40:	mov	r3, r0
   14d44:	add	r2, pc, r2
   14d48:	mov	r0, r5
   14d4c:	mov	r1, r8
   14d50:	bl	11f58 <snprintf@plt>
   14d54:	mov	r0, #0
   14d58:	sub	sp, fp, #24
   14d5c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14d60:	mov	r0, r4
   14d64:	mov	r1, r7
   14d68:	mov	r2, r6
   14d6c:	bl	13878 <table_get_ptr@@Base>
   14d70:	ldr	r2, [pc, #60]	; 14db4 <table_cell_to_buffer@@Base+0x37c>
   14d74:	mov	r3, r0
   14d78:	add	r2, pc, r2
   14d7c:	b	14d48 <table_cell_to_buffer@@Base+0x310>
   14d80:	muleq	r0, ip, r7
   14d84:	andeq	r0, r0, fp, ror #18
   14d88:	andeq	r0, r0, r6, lsr #17
   14d8c:	andeq	r0, r0, fp, lsl #17
   14d90:	andeq	r0, r0, r0, lsr r9
   14d94:	andeq	r0, r0, r4, lsl r9
   14d98:	strdeq	r0, [r0], -r8
   14d9c:	ldrdeq	r0, [r0], -ip
   14da0:	ldrdeq	r0, [r0], -ip
   14da4:	andeq	r0, r0, pc, ror r8
   14da8:	andeq	r0, r0, r2, ror #16
   14dac:	andeq	r0, r0, r6, asr #16
   14db0:	andeq	r0, r0, sl, lsl #16
   14db4:	muleq	r0, r9, r7

00014db8 <table_cell_from_buffer@@Base>:
   14db8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14dbc:	add	fp, sp, #24
   14dc0:	sub	sp, sp, #264	; 0x108
   14dc4:	mov	r5, r1
   14dc8:	mov	r1, r2
   14dcc:	mov	r7, r3
   14dd0:	mov	r4, r2
   14dd4:	mov	r6, r0
   14dd8:	bl	12c64 <table_get_column_data_type@@Base>
   14ddc:	cmp	r0, #23
   14de0:	bhi	153b8 <table_cell_from_buffer@@Base+0x600>
   14de4:	add	r1, pc, #4
   14de8:	ldr	r0, [r1, r0, lsl #2]
   14dec:	add	pc, r1, r0
   14df0:	andeq	r0, r0, r0, rrx
   14df4:	muleq	r0, r8, r0
   14df8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   14dfc:	andeq	r0, r0, r8, lsl #2
   14e00:	andeq	r0, r0, r0, asr #2
   14e04:	andeq	r0, r0, r8, ror r1
   14e08:			; <UNDEFINED> instruction: 0x000001b0
   14e0c:	andeq	r0, r0, r8, ror #3
   14e10:	andeq	r0, r0, r0, lsr #4
   14e14:	andeq	r0, r0, r0, ror #4
   14e18:	andeq	r0, r0, r0, lsr #5
   14e1c:	ldrdeq	r0, [r0], -r8
   14e20:	andeq	r0, r0, r0, lsl r3
   14e24:	andeq	r0, r0, r8, asr #6
   14e28:	andeq	r0, r0, r0, lsl #7
   14e2c:	andeq	r0, r0, r0, asr #7
   14e30:	andeq	r0, r0, r0, lsl #8
   14e34:	andeq	r0, r0, r8, lsr r4
   14e38:	andeq	r0, r0, r0, ror r4
   14e3c:	andeq	r0, r0, r8, lsr #9
   14e40:	andeq	r0, r0, r0, ror #9
   14e44:	andeq	r0, r0, r8, lsl r5
   14e48:	andeq	r0, r0, r0, asr r5
   14e4c:	muleq	r0, r4, r5
   14e50:	ldr	r1, [pc, #1420]	; 153e4 <table_cell_from_buffer@@Base+0x62c>
   14e54:	add	r2, sp, #8
   14e58:	mov	r0, r7
   14e5c:	add	r1, pc, r1
   14e60:	bl	11f64 <__isoc99_sscanf@plt>
   14e64:	mvn	r7, #0
   14e68:	cmp	r0, #1
   14e6c:	bne	153bc <table_cell_from_buffer@@Base+0x604>
   14e70:	ldr	r3, [sp, #8]
   14e74:	mov	r0, r6
   14e78:	mov	r1, r5
   14e7c:	mov	r2, r4
   14e80:	bl	13e78 <table_set_int@@Base>
   14e84:	b	153b8 <table_cell_from_buffer@@Base+0x600>
   14e88:	ldr	r1, [pc, #1368]	; 153e8 <table_cell_from_buffer@@Base+0x630>
   14e8c:	add	r2, sp, #8
   14e90:	mov	r0, r7
   14e94:	add	r1, pc, r1
   14e98:	bl	11f64 <__isoc99_sscanf@plt>
   14e9c:	mvn	r7, #0
   14ea0:	cmp	r0, #1
   14ea4:	bne	153bc <table_cell_from_buffer@@Base+0x604>
   14ea8:	ldr	r3, [sp, #8]
   14eac:	mov	r0, r6
   14eb0:	mov	r1, r5
   14eb4:	mov	r2, r4
   14eb8:	bl	13ef8 <table_set_uint@@Base>
   14ebc:	b	153b8 <table_cell_from_buffer@@Base+0x600>
   14ec0:	ldr	r1, [pc, #1316]	; 153ec <table_cell_from_buffer@@Base+0x634>
   14ec4:	add	r2, sp, #8
   14ec8:	mov	r0, r7
   14ecc:	add	r1, pc, r1
   14ed0:	bl	11f64 <__isoc99_sscanf@plt>
   14ed4:	mvn	r7, #0
   14ed8:	cmp	r0, #1
   14edc:	bne	153bc <table_cell_from_buffer@@Base+0x604>
   14ee0:	ldrsb	r3, [sp, #8]
   14ee4:	mov	r0, r6
   14ee8:	mov	r1, r5
   14eec:	mov	r2, r4
   14ef0:	bl	13f78 <table_set_int8@@Base>
   14ef4:	b	153b8 <table_cell_from_buffer@@Base+0x600>
   14ef8:	ldr	r1, [pc, #1264]	; 153f0 <table_cell_from_buffer@@Base+0x638>
   14efc:	add	r2, sp, #8
   14f00:	mov	r0, r7
   14f04:	add	r1, pc, r1
   14f08:	bl	11f64 <__isoc99_sscanf@plt>
   14f0c:	mvn	r7, #0
   14f10:	cmp	r0, #1
   14f14:	bne	153bc <table_cell_from_buffer@@Base+0x604>
   14f18:	ldrb	r3, [sp, #8]
   14f1c:	mov	r0, r6
   14f20:	mov	r1, r5
   14f24:	mov	r2, r4
   14f28:	bl	13ff8 <table_set_uint8@@Base>
   14f2c:	b	153b8 <table_cell_from_buffer@@Base+0x600>
   14f30:	ldr	r1, [pc, #1212]	; 153f4 <table_cell_from_buffer@@Base+0x63c>
   14f34:	add	r2, sp, #8
   14f38:	mov	r0, r7
   14f3c:	add	r1, pc, r1
   14f40:	bl	11f64 <__isoc99_sscanf@plt>
   14f44:	mvn	r7, #0
   14f48:	cmp	r0, #1
   14f4c:	bne	153bc <table_cell_from_buffer@@Base+0x604>
   14f50:	ldrsh	r3, [sp, #8]
   14f54:	mov	r0, r6
   14f58:	mov	r1, r5
   14f5c:	mov	r2, r4
   14f60:	bl	14078 <table_set_int16@@Base>
   14f64:	b	153b8 <table_cell_from_buffer@@Base+0x600>
   14f68:	ldr	r1, [pc, #1160]	; 153f8 <table_cell_from_buffer@@Base+0x640>
   14f6c:	add	r2, sp, #8
   14f70:	mov	r0, r7
   14f74:	add	r1, pc, r1
   14f78:	bl	11f64 <__isoc99_sscanf@plt>
   14f7c:	mvn	r7, #0
   14f80:	cmp	r0, #1
   14f84:	bne	153bc <table_cell_from_buffer@@Base+0x604>
   14f88:	ldrh	r3, [sp, #8]
   14f8c:	mov	r0, r6
   14f90:	mov	r1, r5
   14f94:	mov	r2, r4
   14f98:	bl	140f8 <table_set_uint16@@Base>
   14f9c:	b	153b8 <table_cell_from_buffer@@Base+0x600>
   14fa0:	ldr	r1, [pc, #1108]	; 153fc <table_cell_from_buffer@@Base+0x644>
   14fa4:	add	r2, sp, #8
   14fa8:	mov	r0, r7
   14fac:	add	r1, pc, r1
   14fb0:	bl	11f64 <__isoc99_sscanf@plt>
   14fb4:	mvn	r7, #0
   14fb8:	cmp	r0, #1
   14fbc:	bne	153bc <table_cell_from_buffer@@Base+0x604>
   14fc0:	ldr	r3, [sp, #8]
   14fc4:	mov	r0, r6
   14fc8:	mov	r1, r5
   14fcc:	mov	r2, r4
   14fd0:	bl	14178 <table_set_int32@@Base>
   14fd4:	b	153b8 <table_cell_from_buffer@@Base+0x600>
   14fd8:	ldr	r1, [pc, #1056]	; 15400 <table_cell_from_buffer@@Base+0x648>
   14fdc:	add	r2, sp, #8
   14fe0:	mov	r0, r7
   14fe4:	add	r1, pc, r1
   14fe8:	bl	11f64 <__isoc99_sscanf@plt>
   14fec:	mvn	r7, #0
   14ff0:	cmp	r0, #1
   14ff4:	bne	153bc <table_cell_from_buffer@@Base+0x604>
   14ff8:	ldr	r3, [sp, #8]
   14ffc:	mov	r0, r6
   15000:	mov	r1, r5
   15004:	mov	r2, r4
   15008:	bl	141f8 <table_set_uint32@@Base>
   1500c:	b	153b8 <table_cell_from_buffer@@Base+0x600>
   15010:	ldr	r1, [pc, #1004]	; 15404 <table_cell_from_buffer@@Base+0x64c>
   15014:	add	r2, sp, #8
   15018:	mov	r0, r7
   1501c:	add	r1, pc, r1
   15020:	bl	11f64 <__isoc99_sscanf@plt>
   15024:	mvn	r7, #0
   15028:	cmp	r0, #1
   1502c:	bne	153bc <table_cell_from_buffer@@Base+0x604>
   15030:	ldr	r0, [sp, #8]
   15034:	ldr	r1, [sp, #12]
   15038:	mov	r2, r4
   1503c:	stm	sp, {r0, r1}
   15040:	mov	r0, r6
   15044:	mov	r1, r5
   15048:	bl	14278 <table_set_int64@@Base>
   1504c:	b	153b8 <table_cell_from_buffer@@Base+0x600>
   15050:	ldr	r1, [pc, #944]	; 15408 <table_cell_from_buffer@@Base+0x650>
   15054:	add	r2, sp, #8
   15058:	mov	r0, r7
   1505c:	add	r1, pc, r1
   15060:	bl	11f64 <__isoc99_sscanf@plt>
   15064:	mvn	r7, #0
   15068:	cmp	r0, #1
   1506c:	bne	153bc <table_cell_from_buffer@@Base+0x604>
   15070:	ldr	r0, [sp, #8]
   15074:	ldr	r1, [sp, #12]
   15078:	mov	r2, r4
   1507c:	stm	sp, {r0, r1}
   15080:	mov	r0, r6
   15084:	mov	r1, r5
   15088:	bl	14300 <table_set_uint64@@Base>
   1508c:	b	153b8 <table_cell_from_buffer@@Base+0x600>
   15090:	ldr	r1, [pc, #884]	; 1540c <table_cell_from_buffer@@Base+0x654>
   15094:	add	r2, sp, #8
   15098:	mov	r0, r7
   1509c:	add	r1, pc, r1
   150a0:	bl	11f64 <__isoc99_sscanf@plt>
   150a4:	mvn	r7, #0
   150a8:	cmp	r0, #1
   150ac:	bne	153bc <table_cell_from_buffer@@Base+0x604>
   150b0:	ldrsh	r3, [sp, #8]
   150b4:	mov	r0, r6
   150b8:	mov	r1, r5
   150bc:	mov	r2, r4
   150c0:	bl	14388 <table_set_short@@Base>
   150c4:	b	153b8 <table_cell_from_buffer@@Base+0x600>
   150c8:	ldr	r1, [pc, #832]	; 15410 <table_cell_from_buffer@@Base+0x658>
   150cc:	add	r2, sp, #8
   150d0:	mov	r0, r7
   150d4:	add	r1, pc, r1
   150d8:	bl	11f64 <__isoc99_sscanf@plt>
   150dc:	mvn	r7, #0
   150e0:	cmp	r0, #1
   150e4:	bne	153bc <table_cell_from_buffer@@Base+0x604>
   150e8:	ldrh	r3, [sp, #8]
   150ec:	mov	r0, r6
   150f0:	mov	r1, r5
   150f4:	mov	r2, r4
   150f8:	bl	14408 <table_set_ushort@@Base>
   150fc:	b	153b8 <table_cell_from_buffer@@Base+0x600>
   15100:	ldr	r1, [pc, #780]	; 15414 <table_cell_from_buffer@@Base+0x65c>
   15104:	add	r2, sp, #8
   15108:	mov	r0, r7
   1510c:	add	r1, pc, r1
   15110:	bl	11f64 <__isoc99_sscanf@plt>
   15114:	mvn	r7, #0
   15118:	cmp	r0, #1
   1511c:	bne	153bc <table_cell_from_buffer@@Base+0x604>
   15120:	ldr	r3, [sp, #8]
   15124:	mov	r0, r6
   15128:	mov	r1, r5
   1512c:	mov	r2, r4
   15130:	bl	14488 <table_set_long@@Base>
   15134:	b	153b8 <table_cell_from_buffer@@Base+0x600>
   15138:	ldr	r1, [pc, #728]	; 15418 <table_cell_from_buffer@@Base+0x660>
   1513c:	add	r2, sp, #8
   15140:	mov	r0, r7
   15144:	add	r1, pc, r1
   15148:	bl	11f64 <__isoc99_sscanf@plt>
   1514c:	mvn	r7, #0
   15150:	cmp	r0, #1
   15154:	bne	153bc <table_cell_from_buffer@@Base+0x604>
   15158:	ldr	r3, [sp, #8]
   1515c:	mov	r0, r6
   15160:	mov	r1, r5
   15164:	mov	r2, r4
   15168:	bl	14508 <table_set_ulong@@Base>
   1516c:	b	153b8 <table_cell_from_buffer@@Base+0x600>
   15170:	ldr	r1, [pc, #676]	; 1541c <table_cell_from_buffer@@Base+0x664>
   15174:	add	r2, sp, #8
   15178:	mov	r0, r7
   1517c:	add	r1, pc, r1
   15180:	bl	11f64 <__isoc99_sscanf@plt>
   15184:	mvn	r7, #0
   15188:	cmp	r0, #1
   1518c:	bne	153bc <table_cell_from_buffer@@Base+0x604>
   15190:	ldr	r0, [sp, #8]
   15194:	ldr	r1, [sp, #12]
   15198:	mov	r2, r4
   1519c:	stm	sp, {r0, r1}
   151a0:	mov	r0, r6
   151a4:	mov	r1, r5
   151a8:	bl	14588 <table_set_llong@@Base>
   151ac:	b	153b8 <table_cell_from_buffer@@Base+0x600>
   151b0:	ldr	r1, [pc, #616]	; 15420 <table_cell_from_buffer@@Base+0x668>
   151b4:	add	r2, sp, #8
   151b8:	mov	r0, r7
   151bc:	add	r1, pc, r1
   151c0:	bl	11f64 <__isoc99_sscanf@plt>
   151c4:	mvn	r7, #0
   151c8:	cmp	r0, #1
   151cc:	bne	153bc <table_cell_from_buffer@@Base+0x604>
   151d0:	ldr	r0, [sp, #8]
   151d4:	ldr	r1, [sp, #12]
   151d8:	mov	r2, r4
   151dc:	stm	sp, {r0, r1}
   151e0:	mov	r0, r6
   151e4:	mov	r1, r5
   151e8:	bl	14610 <table_set_ullong@@Base>
   151ec:	b	153b8 <table_cell_from_buffer@@Base+0x600>
   151f0:	ldr	r1, [pc, #560]	; 15428 <table_cell_from_buffer@@Base+0x670>
   151f4:	add	r2, sp, #8
   151f8:	mov	r0, r7
   151fc:	add	r1, pc, r1
   15200:	bl	11f64 <__isoc99_sscanf@plt>
   15204:	mvn	r7, #0
   15208:	cmp	r0, #1
   1520c:	bne	153bc <table_cell_from_buffer@@Base+0x604>
   15210:	vldr	s0, [sp, #8]
   15214:	mov	r0, r6
   15218:	mov	r1, r5
   1521c:	mov	r2, r4
   15220:	bl	14698 <table_set_float@@Base>
   15224:	b	153b8 <table_cell_from_buffer@@Base+0x600>
   15228:	ldr	r1, [pc, #508]	; 1542c <table_cell_from_buffer@@Base+0x674>
   1522c:	add	r2, sp, #8
   15230:	mov	r0, r7
   15234:	add	r1, pc, r1
   15238:	bl	11f64 <__isoc99_sscanf@plt>
   1523c:	mvn	r7, #0
   15240:	cmp	r0, #1
   15244:	bne	153bc <table_cell_from_buffer@@Base+0x604>
   15248:	vldr	d0, [sp, #8]
   1524c:	mov	r0, r6
   15250:	mov	r1, r5
   15254:	mov	r2, r4
   15258:	bl	14724 <table_set_double@@Base>
   1525c:	b	153b8 <table_cell_from_buffer@@Base+0x600>
   15260:	ldr	r1, [pc, #456]	; 15430 <table_cell_from_buffer@@Base+0x678>
   15264:	add	r2, sp, #8
   15268:	mov	r0, r7
   1526c:	add	r1, pc, r1
   15270:	bl	11f64 <__isoc99_sscanf@plt>
   15274:	mvn	r7, #0
   15278:	cmp	r0, #1
   1527c:	bne	153bc <table_cell_from_buffer@@Base+0x604>
   15280:	vldr	d0, [sp, #8]
   15284:	mov	r0, r6
   15288:	mov	r1, r5
   1528c:	mov	r2, r4
   15290:	bl	147ac <table_set_ldouble@@Base>
   15294:	b	153b8 <table_cell_from_buffer@@Base+0x600>
   15298:	ldr	r1, [pc, #408]	; 15438 <table_cell_from_buffer@@Base+0x680>
   1529c:	add	r2, sp, #8
   152a0:	mov	r0, r7
   152a4:	add	r1, pc, r1
   152a8:	bl	11f64 <__isoc99_sscanf@plt>
   152ac:	mvn	r7, #0
   152b0:	cmp	r0, #1
   152b4:	bne	153bc <table_cell_from_buffer@@Base+0x604>
   152b8:	ldrb	r3, [sp, #8]
   152bc:	mov	r0, r6
   152c0:	mov	r1, r5
   152c4:	mov	r2, r4
   152c8:	bl	14854 <table_set_char@@Base>
   152cc:	b	153b8 <table_cell_from_buffer@@Base+0x600>
   152d0:	ldr	r1, [pc, #356]	; 1543c <table_cell_from_buffer@@Base+0x684>
   152d4:	add	r2, sp, #8
   152d8:	mov	r0, r7
   152dc:	add	r1, pc, r1
   152e0:	bl	11f64 <__isoc99_sscanf@plt>
   152e4:	mvn	r7, #0
   152e8:	cmp	r0, #1
   152ec:	bne	153bc <table_cell_from_buffer@@Base+0x604>
   152f0:	ldrb	r3, [sp, #8]
   152f4:	mov	r0, r6
   152f8:	mov	r1, r5
   152fc:	mov	r2, r4
   15300:	bl	148d4 <table_set_uchar@@Base>
   15304:	b	153b8 <table_cell_from_buffer@@Base+0x600>
   15308:	ldr	r1, [pc, #276]	; 15424 <table_cell_from_buffer@@Base+0x66c>
   1530c:	add	r2, sp, #8
   15310:	mov	r0, r7
   15314:	add	r1, pc, r1
   15318:	bl	11f64 <__isoc99_sscanf@plt>
   1531c:	mvn	r7, #0
   15320:	cmp	r0, #1
   15324:	bne	153bc <table_cell_from_buffer@@Base+0x604>
   15328:	add	r3, sp, #8
   1532c:	mov	r0, r6
   15330:	mov	r1, r5
   15334:	mov	r2, r4
   15338:	bl	14834 <table_set_string@@Base>
   1533c:	b	153b8 <table_cell_from_buffer@@Base+0x600>
   15340:	ldr	r1, [pc, #236]	; 15434 <table_cell_from_buffer@@Base+0x67c>
   15344:	add	r2, sp, #8
   15348:	mov	r0, r7
   1534c:	add	r1, pc, r1
   15350:	bl	11f64 <__isoc99_sscanf@plt>
   15354:	mvn	r7, #0
   15358:	cmp	r0, #1
   1535c:	bne	153bc <table_cell_from_buffer@@Base+0x604>
   15360:	ldr	r0, [sp, #8]
   15364:	cmp	r0, #0
   15368:	beq	153c8 <table_cell_from_buffer@@Base+0x610>
   1536c:	mov	r0, r6
   15370:	mov	r1, r5
   15374:	mov	r2, r4
   15378:	mov	r3, #1
   1537c:	bl	13df8 <table_set_bool@@Base>
   15380:	b	153b8 <table_cell_from_buffer@@Base+0x600>
   15384:	ldr	r1, [pc, #180]	; 15440 <table_cell_from_buffer@@Base+0x688>
   15388:	add	r2, sp, #8
   1538c:	mov	r0, r7
   15390:	add	r1, pc, r1
   15394:	bl	11f64 <__isoc99_sscanf@plt>
   15398:	mvn	r7, #0
   1539c:	cmp	r0, #1
   153a0:	bne	153bc <table_cell_from_buffer@@Base+0x604>
   153a4:	ldr	r3, [sp, #8]
   153a8:	mov	r0, r6
   153ac:	mov	r1, r5
   153b0:	mov	r2, r4
   153b4:	bl	14954 <table_set_ptr@@Base>
   153b8:	mov	r7, #0
   153bc:	mov	r0, r7
   153c0:	sub	sp, fp, #24
   153c4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   153c8:	mov	r0, r6
   153cc:	mov	r1, r5
   153d0:	mov	r2, r4
   153d4:	mov	r3, #0
   153d8:	mov	r7, #0
   153dc:	bl	13df8 <table_set_bool@@Base>
   153e0:	b	153bc <table_cell_from_buffer@@Base+0x604>
   153e4:	andeq	r0, r0, r4, lsl #13
   153e8:	andeq	r0, r0, pc, asr #12
   153ec:	andeq	r0, r0, r8, asr #12
   153f0:	andeq	r0, r0, r5, lsl r6
   153f4:			; <UNDEFINED> instruction: 0x000005b4
   153f8:	andeq	r0, r0, r0, lsl #11
   153fc:	andeq	r0, r0, r4, lsr r5
   15400:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   15404:	andeq	r0, r0, sl, asr #9
   15408:	andeq	r0, r0, pc, lsl #9
   1540c:	andeq	r0, r0, r4, asr r4
   15410:	andeq	r0, r0, r0, lsr #8
   15414:	andeq	r0, r0, ip, ror #7
   15418:			; <UNDEFINED> instruction: 0x000003b8
   1541c:	andeq	r0, r0, sl, ror #6
   15420:	andeq	r0, r0, pc, lsr #6
   15424:	andeq	r0, r0, ip, ror #3
   15428:	andeq	r0, r0, r7, lsl #6
   1542c:	ldrdeq	r0, [r0], -r2
   15430:	muleq	r0, lr, r2
   15434:	muleq	r0, r4, r1
   15438:	andeq	r0, r0, sl, ror #4
   1543c:	andeq	r0, r0, r2, lsr r2
   15440:	andeq	r0, r0, r1, lsl #3

00015444 <table_cell_nullify@@Base>:
   15444:	push	{r4, r5, fp, lr}
   15448:	add	fp, sp, #8
   1544c:	mov	r4, r2
   15450:	bl	138b0 <table_get_row_ptr@@Base>
   15454:	ldr	r5, [r0]
   15458:	ldr	r0, [r5, r4, lsl #2]
   1545c:	cmp	r0, #0
   15460:	beq	15470 <table_cell_nullify@@Base+0x2c>
   15464:	bl	11eec <free@plt>
   15468:	mov	r0, #0
   1546c:	str	r0, [r5, r4, lsl #2]
   15470:	mov	r0, #0
   15474:	pop	{r4, r5, fp, pc}

00015478 <__libc_csu_init@@Base>:
   15478:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1547c:	mov	r7, r0
   15480:	ldr	r6, [pc, #72]	; 154d0 <__libc_csu_init@@Base+0x58>
   15484:	ldr	r5, [pc, #72]	; 154d4 <__libc_csu_init@@Base+0x5c>
   15488:	add	r6, pc, r6
   1548c:	add	r5, pc, r5
   15490:	sub	r6, r6, r5
   15494:	mov	r8, r1
   15498:	mov	r9, r2
   1549c:	bl	11ec0 <strcmp@plt-0x20>
   154a0:	asrs	r6, r6, #2
   154a4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   154a8:	mov	r4, #0
   154ac:	add	r4, r4, #1
   154b0:	ldr	r3, [r5], #4
   154b4:	mov	r2, r9
   154b8:	mov	r1, r8
   154bc:	mov	r0, r7
   154c0:	blx	r3
   154c4:	cmp	r6, r4
   154c8:	bne	154ac <__libc_csu_init@@Base+0x34>
   154cc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   154d0:	andeq	r0, r1, ip, lsl sl
   154d4:	andeq	r0, r1, r4, lsl sl

000154d8 <__libc_csu_fini@@Base>:
   154d8:	bx	lr

Disassembly of section .fini:

000154dc <.fini>:
   154dc:	push	{r3, lr}
   154e0:	pop	{r3, pc}
