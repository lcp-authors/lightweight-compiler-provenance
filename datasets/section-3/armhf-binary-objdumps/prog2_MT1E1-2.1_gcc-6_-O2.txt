
../repos/prog2/MT1E1-2.1:     file format elf32-littlearm


Disassembly of section .init:

00010b2c <.init>:
   10b2c:	push	{r3, lr}
   10b30:	bl	10f84 <_start@@Base+0x3c>
   10b34:	pop	{r3, pc}

Disassembly of section .plt:

00010b38 <calloc@plt-0x14>:
   10b38:	push	{lr}		; (str lr, [sp, #-4]!)
   10b3c:	ldr	lr, [pc, #4]	; 10b48 <calloc@plt-0x4>
   10b40:	add	lr, pc, lr
   10b44:	ldr	pc, [lr, #8]!
   10b48:			; <UNDEFINED> instruction: 0x000114b8

00010b4c <calloc@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #69632	; 0x11000
   10b54:	ldr	pc, [ip, #1208]!	; 0x4b8

00010b58 <strcmp@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #69632	; 0x11000
   10b60:	ldr	pc, [ip, #1200]!	; 0x4b0

00010b64 <free@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #69632	; 0x11000
   10b6c:	ldr	pc, [ip, #1192]!	; 0x4a8

00010b70 <memcpy@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #69632	; 0x11000
   10b78:	ldr	pc, [ip, #1184]!	; 0x4a0

00010b7c <realloc@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #69632	; 0x11000
   10b84:	ldr	pc, [ip, #1176]!	; 0x498

00010b88 <fwrite@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #69632	; 0x11000
   10b90:	ldr	pc, [ip, #1168]!	; 0x490

00010b94 <strcpy@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #69632	; 0x11000
   10b9c:	ldr	pc, [ip, #1160]!	; 0x488

00010ba0 <puts@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #69632	; 0x11000
   10ba8:	ldr	pc, [ip, #1152]!	; 0x480

00010bac <malloc@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #69632	; 0x11000
   10bb4:	ldr	pc, [ip, #1144]!	; 0x478

00010bb8 <__libc_start_main@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #69632	; 0x11000
   10bc0:	ldr	pc, [ip, #1136]!	; 0x470

00010bc4 <__gmon_start__@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #69632	; 0x11000
   10bcc:	ldr	pc, [ip, #1128]!	; 0x468

00010bd0 <strlen@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #69632	; 0x11000
   10bd8:	ldr	pc, [ip, #1120]!	; 0x460

00010bdc <fprintf@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #69632	; 0x11000
   10be4:	ldr	pc, [ip, #1112]!	; 0x458

00010be8 <sprintf@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #69632	; 0x11000
   10bf0:	ldr	pc, [ip, #1104]!	; 0x450

00010bf4 <abort@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #69632	; 0x11000
   10bfc:	ldr	pc, [ip, #1096]!	; 0x448

Disassembly of section .text:

00010c00 <main@@Base>:
   10c00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10c04:	sub	sp, sp, #20
   10c08:	bl	11278 <vetor_novo@@Base>
   10c0c:	ldr	r3, [pc, #764]	; 10f10 <main@@Base+0x310>
   10c10:	mov	r4, #0
   10c14:	add	r3, pc, r3
   10c18:	mov	r2, r3
   10c1c:	str	r3, [sp, #8]
   10c20:	ldr	r3, [pc, #748]	; 10f14 <main@@Base+0x314>
   10c24:	ldr	r3, [r2, r3]
   10c28:	mov	r5, r3
   10c2c:	str	r3, [sp, #12]
   10c30:	mov	r6, r0
   10c34:	mov	r2, r4
   10c38:	ldr	r1, [r5, r4, lsl #2]
   10c3c:	mov	r0, r6
   10c40:	add	r4, r4, #1
   10c44:	bl	113c0 <vetor_insere@@Base>
   10c48:	cmp	r4, #4
   10c4c:	bne	10c34 <main@@Base+0x34>
   10c50:	bl	1166c <lista_nova@@Base>
   10c54:	ldr	r3, [pc, #700]	; 10f18 <main@@Base+0x318>
   10c58:	ldr	r2, [sp, #8]
   10c5c:	ldr	r8, [r2, r3]
   10c60:	sub	r5, r8, #4
   10c64:	add	r7, r8, #204	; 0xcc
   10c68:	mov	r4, r0
   10c6c:	ldr	r1, [r5, #4]!
   10c70:	mov	r0, r4
   10c74:	bl	111b0 <insere_carta@@Base>
   10c78:	cmp	r5, r7
   10c7c:	bne	10c6c <main@@Base+0x6c>
   10c80:	bl	1166c <lista_nova@@Base>
   10c84:	ldr	r3, [pc, #656]	; 10f1c <main@@Base+0x31c>
   10c88:	ldr	r2, [sp, #8]
   10c8c:	mov	r9, #0
   10c90:	ldr	r5, [r2, r3]
   10c94:	sub	sl, r5, #4
   10c98:	add	r5, r5, #48	; 0x30
   10c9c:	mov	r7, r0
   10ca0:	ldr	r1, [sl, #4]!
   10ca4:	mov	r2, r9
   10ca8:	mov	r0, r7
   10cac:	bl	116f8 <lista_insere@@Base>
   10cb0:	cmp	sl, r5
   10cb4:	bne	10ca0 <main@@Base+0xa0>
   10cb8:	ldr	r2, [sp, #8]
   10cbc:	ldr	r3, [pc, #604]	; 10f20 <main@@Base+0x320>
   10cc0:	mov	r1, r7
   10cc4:	mov	r0, r4
   10cc8:	ldr	r3, [r2, r3]
   10ccc:	ldr	fp, [pc, #592]	; 10f24 <main@@Base+0x324>
   10cd0:	mov	sl, r3
   10cd4:	ldr	r9, [r3]
   10cd8:	str	r3, [sp, #4]
   10cdc:	bl	11070 <tira_carta@@Base>
   10ce0:	ldr	r1, [pc, #576]	; 10f28 <main@@Base+0x328>
   10ce4:	add	fp, pc, fp
   10ce8:	add	r1, pc, r1
   10cec:	mov	r5, #0
   10cf0:	mov	r2, r0
   10cf4:	mov	r0, r9
   10cf8:	bl	10bdc <fprintf@plt>
   10cfc:	mov	r1, r7
   10d00:	mov	r0, r4
   10d04:	ldr	r9, [sl]
   10d08:	bl	11070 <tira_carta@@Base>
   10d0c:	ldr	r1, [pc, #536]	; 10f2c <main@@Base+0x32c>
   10d10:	add	r1, pc, r1
   10d14:	mov	r2, r0
   10d18:	mov	r0, r9
   10d1c:	bl	10bdc <fprintf@plt>
   10d20:	mov	r1, r7
   10d24:	mov	r0, r4
   10d28:	ldr	r9, [sl]
   10d2c:	bl	11070 <tira_carta@@Base>
   10d30:	ldr	r1, [pc, #504]	; 10f30 <main@@Base+0x330>
   10d34:	mov	sl, #44	; 0x2c
   10d38:	add	r1, pc, r1
   10d3c:	mov	r2, r0
   10d40:	mov	r0, r9
   10d44:	bl	10bdc <fprintf@plt>
   10d48:	ldr	r1, [r8, #196]	; 0xc4
   10d4c:	mov	r0, r4
   10d50:	bl	111b0 <insere_carta@@Base>
   10d54:	ldr	r1, [r8, #200]	; 0xc8
   10d58:	mov	r0, r4
   10d5c:	bl	111b0 <insere_carta@@Base>
   10d60:	ldr	r1, [r8, #204]	; 0xcc
   10d64:	mov	r0, r4
   10d68:	bl	111b0 <insere_carta@@Base>
   10d6c:	bl	11278 <vetor_novo@@Base>
   10d70:	mov	r9, #1
   10d74:	mov	r8, r0
   10d78:	mov	r2, r7
   10d7c:	mov	r1, r4
   10d80:	mov	r0, r6
   10d84:	bl	110c0 <faz_jogada@@Base>
   10d88:	mov	r2, r5
   10d8c:	add	r5, r5, #1
   10d90:	subs	r1, r0, #0
   10d94:	mov	r0, r8
   10d98:	beq	10da0 <main@@Base+0x1a0>
   10d9c:	bl	113c0 <vetor_insere@@Base>
   10da0:	mov	r0, r6
   10da4:	bl	1137c <vetor_tamanho@@Base>
   10da8:	mov	r2, sl
   10dac:	mov	r1, r9
   10db0:	cmp	r0, #4
   10db4:	mov	r0, fp
   10db8:	beq	10dc8 <main@@Base+0x1c8>
   10dbc:	ldr	r3, [sp, #4]
   10dc0:	ldr	r3, [r3]
   10dc4:	bl	10b88 <fwrite@plt>
   10dc8:	cmp	r5, #13
   10dcc:	bne	10d78 <main@@Base+0x178>
   10dd0:	ldr	r0, [pc, #348]	; 10f34 <main@@Base+0x334>
   10dd4:	add	r0, pc, r0
   10dd8:	bl	10ba0 <puts@plt>
   10ddc:	ldr	r3, [r8]
   10de0:	cmp	r3, #0
   10de4:	ble	10e40 <main@@Base+0x240>
   10de8:	ldr	sl, [pc, #328]	; 10f38 <main@@Base+0x338>
   10dec:	ldr	fp, [sp, #4]
   10df0:	add	sl, pc, sl
   10df4:	mov	r1, #0
   10df8:	mov	r0, r8
   10dfc:	add	r5, r1, #1
   10e00:	ldr	r9, [fp]
   10e04:	bl	1138c <vetor_elemento@@Base>
   10e08:	mov	r1, sl
   10e0c:	mov	r2, r5
   10e10:	mov	r3, r0
   10e14:	mov	r0, r9
   10e18:	bl	10bdc <fprintf@plt>
   10e1c:	ldr	r3, [r8]
   10e20:	mov	r1, r5
   10e24:	cmp	r3, r5
   10e28:	movgt	r3, #1
   10e2c:	movle	r3, #0
   10e30:	cmp	r5, #2
   10e34:	movgt	r3, #0
   10e38:	cmp	r3, #0
   10e3c:	bne	10df8 <main@@Base+0x1f8>
   10e40:	mov	r0, r8
   10e44:	bl	1129c <vetor_apaga@@Base>
   10e48:	bl	11278 <vetor_novo@@Base>
   10e4c:	ldr	r3, [pc, #232]	; 10f3c <main@@Base+0x33c>
   10e50:	ldr	r2, [sp, #8]
   10e54:	mov	r5, #0
   10e58:	ldr	r9, [r2, r3]
   10e5c:	sub	r9, r9, #4
   10e60:	mov	r8, r0
   10e64:	mov	r2, r5
   10e68:	ldr	r1, [r9, #4]!
   10e6c:	add	r5, r5, #1
   10e70:	mov	r0, r8
   10e74:	bl	113c0 <vetor_insere@@Base>
   10e78:	cmp	r5, #13
   10e7c:	bne	10e64 <main@@Base+0x264>
   10e80:	ldr	r0, [pc, #184]	; 10f40 <main@@Base+0x340>
   10e84:	ldr	fp, [pc, #184]	; 10f44 <main@@Base+0x344>
   10e88:	add	r0, pc, r0
   10e8c:	bl	10ba0 <puts@plt>
   10e90:	ldr	r5, [sp, #12]
   10e94:	ldr	sl, [sp, #4]
   10e98:	add	r3, r5, #16
   10e9c:	add	fp, pc, fp
   10ea0:	mov	r9, r3
   10ea4:	str	r6, [sp, #8]
   10ea8:	str	r4, [sp, #12]
   10eac:	ldr	r4, [r5], #4
   10eb0:	mov	r0, r8
   10eb4:	mov	r1, r4
   10eb8:	ldr	r6, [sl]
   10ebc:	bl	11164 <numero_vitorias@@Base>
   10ec0:	mov	r2, r4
   10ec4:	mov	r1, fp
   10ec8:	mov	r3, r0
   10ecc:	mov	r0, r6
   10ed0:	bl	10bdc <fprintf@plt>
   10ed4:	cmp	r9, r5
   10ed8:	bne	10eac <main@@Base+0x2ac>
   10edc:	ldr	r6, [sp, #8]
   10ee0:	ldr	r4, [sp, #12]
   10ee4:	mov	r0, r6
   10ee8:	bl	1129c <vetor_apaga@@Base>
   10eec:	mov	r0, r4
   10ef0:	bl	11690 <lista_apaga@@Base>
   10ef4:	mov	r0, r7
   10ef8:	bl	11690 <lista_apaga@@Base>
   10efc:	mov	r0, r8
   10f00:	bl	1129c <vetor_apaga@@Base>
   10f04:	mov	r0, #0
   10f08:	add	sp, sp, #20
   10f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10f10:	andeq	r1, r1, r4, ror #7
   10f14:	andeq	r0, r0, r8, asr #32
   10f18:	andeq	r0, r0, r8, asr r0
   10f1c:	andeq	r0, r0, ip, asr r0
   10f20:	andeq	r0, r0, ip, asr #32
   10f24:			; <UNDEFINED> instruction: 0x00000db0
   10f28:	andeq	r0, r0, r0, asr sp
   10f2c:	andeq	r0, r0, r8, asr #26
   10f30:	andeq	r0, r0, ip, lsr sp
   10f34:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10f38:	strdeq	r0, [r0], -ip
   10f3c:	andeq	r0, r0, r4, asr r0
   10f40:	andeq	r0, r0, r8, lsr ip
   10f44:	andeq	r0, r0, r0, ror #24

00010f48 <_start@@Base>:
   10f48:	mov	fp, #0
   10f4c:	mov	lr, #0
   10f50:	pop	{r1}		; (ldr r1, [sp], #4)
   10f54:	mov	r2, sp
   10f58:	push	{r2}		; (str r2, [sp, #-4]!)
   10f5c:	push	{r0}		; (str r0, [sp, #-4]!)
   10f60:	ldr	ip, [pc, #16]	; 10f78 <_start@@Base+0x30>
   10f64:	push	{ip}		; (str ip, [sp, #-4]!)
   10f68:	ldr	r0, [pc, #12]	; 10f7c <_start@@Base+0x34>
   10f6c:	ldr	r3, [pc, #12]	; 10f80 <_start@@Base+0x38>
   10f70:	bl	10bb8 <__libc_start_main@plt>
   10f74:	bl	10bf4 <abort@plt>
   10f78:	andeq	r1, r1, r8, lsr #20
   10f7c:	andeq	r0, r1, r0, lsl #24
   10f80:	andeq	r1, r1, r8, asr #19
   10f84:	ldr	r3, [pc, #20]	; 10fa0 <_start@@Base+0x58>
   10f88:	ldr	r2, [pc, #20]	; 10fa4 <_start@@Base+0x5c>
   10f8c:	add	r3, pc, r3
   10f90:	ldr	r2, [r3, r2]
   10f94:	cmp	r2, #0
   10f98:	bxeq	lr
   10f9c:	b	10bc4 <__gmon_start__@plt>
   10fa0:	andeq	r1, r1, ip, rrx
   10fa4:	andeq	r0, r0, r0, asr r0
   10fa8:	ldr	r3, [pc, #28]	; 10fcc <_start@@Base+0x84>
   10fac:	ldr	r0, [pc, #28]	; 10fd0 <_start@@Base+0x88>
   10fb0:	sub	r3, r3, r0
   10fb4:	cmp	r3, #6
   10fb8:	bxls	lr
   10fbc:	ldr	r3, [pc, #16]	; 10fd4 <_start@@Base+0x8c>
   10fc0:	cmp	r3, #0
   10fc4:	bxeq	lr
   10fc8:	bx	r3
   10fcc:			; <UNDEFINED> instruction: 0x000221b3
   10fd0:			; <UNDEFINED> instruction: 0x000221b0
   10fd4:	andeq	r0, r0, r0
   10fd8:	ldr	r1, [pc, #36]	; 11004 <_start@@Base+0xbc>
   10fdc:	ldr	r0, [pc, #36]	; 11008 <_start@@Base+0xc0>
   10fe0:	sub	r1, r1, r0
   10fe4:	asr	r1, r1, #2
   10fe8:	add	r1, r1, r1, lsr #31
   10fec:	asrs	r1, r1, #1
   10ff0:	bxeq	lr
   10ff4:	ldr	r3, [pc, #16]	; 1100c <_start@@Base+0xc4>
   10ff8:	cmp	r3, #0
   10ffc:	bxeq	lr
   11000:	bx	r3
   11004:			; <UNDEFINED> instruction: 0x000221b0
   11008:			; <UNDEFINED> instruction: 0x000221b0
   1100c:	andeq	r0, r0, r0
   11010:	push	{r4, lr}
   11014:	ldr	r4, [pc, #24]	; 11034 <_start@@Base+0xec>
   11018:	ldrb	r3, [r4]
   1101c:	cmp	r3, #0
   11020:	popne	{r4, pc}
   11024:	bl	10fa8 <_start@@Base+0x60>
   11028:	mov	r3, #1
   1102c:	strb	r3, [r4]
   11030:	pop	{r4, pc}
   11034:			; <UNDEFINED> instruction: 0x000221b0
   11038:	ldr	r0, [pc, #40]	; 11068 <_start@@Base+0x120>
   1103c:	ldr	r3, [r0]
   11040:	cmp	r3, #0
   11044:	bne	1104c <_start@@Base+0x104>
   11048:	b	10fd8 <_start@@Base+0x90>
   1104c:	ldr	r3, [pc, #24]	; 1106c <_start@@Base+0x124>
   11050:	cmp	r3, #0
   11054:	beq	11048 <_start@@Base+0x100>
   11058:	push	{r4, lr}
   1105c:	blx	r3
   11060:	pop	{r4, lr}
   11064:	b	10fd8 <_start@@Base+0x90>
   11068:	andeq	r1, r2, r4, lsl pc
   1106c:	andeq	r0, r0, r0

00011070 <tira_carta@@Base>:
   11070:	push	{r4, r5, r6, r7, r8, lr}
   11074:	mov	r7, r0
   11078:	ldr	r3, [r1]
   1107c:	ldr	r8, [r0]
   11080:	mov	r5, #0
   11084:	ldr	r0, [r3]
   11088:	ldr	r6, [r8]
   1108c:	ldr	r4, [r3, #4]
   11090:	b	1109c <tira_carta@@Base+0x2c>
   11094:	ldm	r4, {r0, r4}
   11098:	add	r5, r5, #1
   1109c:	mov	r1, r6
   110a0:	bl	10b58 <strcmp@plt>
   110a4:	cmp	r0, #0
   110a8:	bne	11094 <tira_carta@@Base+0x24>
   110ac:	mov	r1, r8
   110b0:	mov	r0, r7
   110b4:	bl	11794 <lista_remove@@Base>
   110b8:	mov	r0, r5
   110bc:	pop	{r4, r5, r6, r7, r8, pc}

000110c0 <faz_jogada@@Base>:
   110c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   110c4:	mov	r5, r0
   110c8:	ldr	r4, [r0]
   110cc:	mov	r9, r1
   110d0:	mov	sl, r2
   110d4:	lsl	r0, r4, #2
   110d8:	bl	10bac <malloc@plt>
   110dc:	cmp	r4, #0
   110e0:	movgt	r4, #0
   110e4:	subgt	r7, r0, #4
   110e8:	mov	r6, r0
   110ec:	movgt	r8, r7
   110f0:	ble	1115c <faz_jogada@@Base+0x9c>
   110f4:	mov	r1, sl
   110f8:	mov	r0, r9
   110fc:	bl	11070 <tira_carta@@Base>
   11100:	ldr	r1, [r5]
   11104:	add	r4, r4, #1
   11108:	cmp	r1, r4
   1110c:	str	r0, [r8, #4]!
   11110:	bgt	110f4 <faz_jogada@@Base+0x34>
   11114:	cmp	r1, #0
   11118:	ble	1115c <faz_jogada@@Base+0x9c>
   1111c:	mvn	ip, #0
   11120:	mov	r2, ip
   11124:	mov	r3, #0
   11128:	ldr	r0, [r7, #4]!
   1112c:	cmp	r0, r2
   11130:	movgt	ip, r3
   11134:	add	r3, r3, #1
   11138:	movgt	r2, r0
   1113c:	cmp	r1, r3
   11140:	bne	11128 <faz_jogada@@Base+0x68>
   11144:	lsl	r4, ip, #2
   11148:	mov	r0, r6
   1114c:	bl	10b64 <free@plt>
   11150:	ldr	r3, [r5, #8]
   11154:	ldr	r0, [r3, r4]
   11158:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1115c:	mvn	r4, #3
   11160:	b	11148 <faz_jogada@@Base+0x88>

00011164 <numero_vitorias@@Base>:
   11164:	push	{r4, r5, r6, r7, r8, lr}
   11168:	ldr	r5, [r0]
   1116c:	cmp	r5, #0
   11170:	ble	111a8 <numero_vitorias@@Base+0x44>
   11174:	ldr	r4, [r0, #8]
   11178:	mov	r6, r1
   1117c:	mov	r7, #0
   11180:	add	r5, r4, r5, lsl #2
   11184:	ldr	r1, [r4], #4
   11188:	mov	r0, r6
   1118c:	bl	10b58 <strcmp@plt>
   11190:	cmp	r0, #0
   11194:	addeq	r7, r7, #1
   11198:	cmp	r4, r5
   1119c:	bne	11184 <numero_vitorias@@Base+0x20>
   111a0:	mov	r0, r7
   111a4:	pop	{r4, r5, r6, r7, r8, pc}
   111a8:	mov	r7, #0
   111ac:	b	111a0 <numero_vitorias@@Base+0x3c>

000111b0 <insere_carta@@Base>:
   111b0:	cmp	r1, #7
   111b4:	push	{r4, r5, lr}
   111b8:	mov	r4, r0
   111bc:	sub	sp, sp, #12
   111c0:	ble	11234 <insere_carta@@Base+0x84>
   111c4:	cmp	r1, #8
   111c8:	beq	11250 <insere_carta@@Base+0xa0>
   111cc:	cmp	r1, #9
   111d0:	addeq	r5, sp, #8
   111d4:	moveq	r3, #74	; 0x4a
   111d8:	strheq	r3, [r5, #-4]!
   111dc:	beq	1121c <insere_carta@@Base+0x6c>
   111e0:	cmp	r1, #10
   111e4:	addeq	r5, sp, #8
   111e8:	moveq	r3, #81	; 0x51
   111ec:	strheq	r3, [r5, #-4]!
   111f0:	beq	1121c <insere_carta@@Base+0x6c>
   111f4:	cmp	r1, #11
   111f8:	addeq	r5, sp, #8
   111fc:	moveq	r3, #75	; 0x4b
   11200:	strheq	r3, [r5, #-4]!
   11204:	beq	1121c <insere_carta@@Base+0x6c>
   11208:	cmp	r1, #12
   1120c:	addeq	r5, sp, #8
   11210:	addne	r5, sp, #4
   11214:	moveq	r3, #65	; 0x41
   11218:	strheq	r3, [r5, #-4]!
   1121c:	mov	r1, r5
   11220:	ldr	r2, [r4]
   11224:	mov	r0, r4
   11228:	bl	116f8 <lista_insere@@Base>
   1122c:	add	sp, sp, #12
   11230:	pop	{r4, r5, pc}
   11234:	add	r2, r1, #50	; 0x32
   11238:	ldr	r1, [pc, #48]	; 11270 <insere_carta@@Base+0xc0>
   1123c:	add	r5, sp, #4
   11240:	mov	r0, r5
   11244:	add	r1, pc, r1
   11248:	bl	10be8 <sprintf@plt>
   1124c:	b	1121c <insere_carta@@Base+0x6c>
   11250:	ldr	r3, [pc, #28]	; 11274 <insere_carta@@Base+0xc4>
   11254:	add	r5, sp, #4
   11258:	add	r3, pc, r3
   1125c:	ldr	r3, [r3]
   11260:	strh	r3, [sp, #4]
   11264:	lsr	r3, r3, #16
   11268:	strb	r3, [sp, #6]
   1126c:	b	1121c <insere_carta@@Base+0x6c>
   11270:	andeq	r0, r0, ip, ror #15
   11274:	ldrdeq	r0, [r0], -ip

00011278 <vetor_novo@@Base>:
   11278:	push	{r4, lr}
   1127c:	mov	r0, #12
   11280:	bl	10bac <malloc@plt>
   11284:	cmp	r0, #0
   11288:	movne	r3, #0
   1128c:	strne	r3, [r0]
   11290:	strne	r3, [r0, #4]
   11294:	strne	r3, [r0, #8]
   11298:	pop	{r4, pc}

0001129c <vetor_apaga@@Base>:
   1129c:	push	{r4, r5, r6, lr}
   112a0:	subs	r5, r0, #0
   112a4:	popeq	{r4, r5, r6, pc}
   112a8:	ldr	r3, [r5]
   112ac:	cmp	r3, #0
   112b0:	movgt	r4, #0
   112b4:	ble	112d4 <vetor_apaga@@Base+0x38>
   112b8:	ldr	r3, [r5, #8]
   112bc:	ldr	r0, [r3, r4, lsl #2]
   112c0:	bl	10b64 <free@plt>
   112c4:	ldr	r3, [r5]
   112c8:	add	r4, r4, #1
   112cc:	cmp	r3, r4
   112d0:	bgt	112b8 <vetor_apaga@@Base+0x1c>
   112d4:	ldr	r0, [r5, #8]
   112d8:	bl	10b64 <free@plt>
   112dc:	mov	r0, r5
   112e0:	pop	{r4, r5, r6, lr}
   112e4:	b	10b64 <free@plt>

000112e8 <vetor_atribui@@Base>:
   112e8:	clz	r3, r0
   112ec:	lsr	r3, r3, #5
   112f0:	orrs	r3, r3, r1, lsr #31
   112f4:	bne	11374 <vetor_atribui@@Base+0x8c>
   112f8:	ldr	r3, [r0]
   112fc:	cmp	r1, r3
   11300:	bge	11374 <vetor_atribui@@Base+0x8c>
   11304:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11308:	mov	r5, r0
   1130c:	mov	r0, r2
   11310:	mov	r4, r1
   11314:	mov	r6, r2
   11318:	bl	10bd0 <strlen@plt>
   1131c:	ldr	r8, [r5, #8]
   11320:	ldr	r7, [r8, r4, lsl #2]
   11324:	mov	r9, r0
   11328:	mov	r0, r7
   1132c:	bl	10bd0 <strlen@plt>
   11330:	cmp	r9, r0
   11334:	bls	11358 <vetor_atribui@@Base+0x70>
   11338:	mov	r0, r7
   1133c:	add	r1, r9, #1
   11340:	bl	10b7c <realloc@plt>
   11344:	ldr	r3, [r5, #8]
   11348:	str	r0, [r8, r4, lsl #2]
   1134c:	ldr	r7, [r3, r4, lsl #2]
   11350:	cmp	r7, #0
   11354:	beq	1136c <vetor_atribui@@Base+0x84>
   11358:	mov	r1, r6
   1135c:	mov	r0, r7
   11360:	bl	10b94 <strcpy@plt>
   11364:	mov	r0, r4
   11368:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1136c:	mvn	r0, #0
   11370:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11374:	mvn	r0, #0
   11378:	bx	lr

0001137c <vetor_tamanho@@Base>:
   1137c:	cmp	r0, #0
   11380:	ldrne	r0, [r0]
   11384:	mvneq	r0, #0
   11388:	bx	lr

0001138c <vetor_elemento@@Base>:
   1138c:	lsr	r3, r1, #31
   11390:	cmp	r0, #0
   11394:	orreq	r3, r3, #1
   11398:	cmp	r3, #0
   1139c:	bne	113b8 <vetor_elemento@@Base+0x2c>
   113a0:	ldr	r2, [r0]
   113a4:	cmp	r1, r2
   113a8:	bge	113b8 <vetor_elemento@@Base+0x2c>
   113ac:	ldr	r3, [r0, #8]
   113b0:	ldr	r0, [r3, r1, lsl #2]
   113b4:	bx	lr
   113b8:	mov	r0, #0
   113bc:	bx	lr

000113c0 <vetor_insere@@Base>:
   113c0:	clz	r3, r0
   113c4:	lsr	r3, r3, #5
   113c8:	orrs	r3, r3, r2, lsr #31
   113cc:	bne	11494 <vetor_insere@@Base+0xd4>
   113d0:	push	{r4, r5, r6, r7, r8, lr}
   113d4:	ldr	r7, [r0]
   113d8:	cmp	r2, r7
   113dc:	bgt	1148c <vetor_insere@@Base+0xcc>
   113e0:	ldr	r3, [r0, #4]
   113e4:	mov	r6, r0
   113e8:	cmp	r7, r3
   113ec:	mov	r8, r1
   113f0:	mov	r4, r2
   113f4:	beq	11454 <vetor_insere@@Base+0x94>
   113f8:	ldr	r5, [r0, #8]
   113fc:	cmp	r4, r7
   11400:	addlt	r3, r5, r7, lsl #2
   11404:	addlt	r2, r5, r4, lsl #2
   11408:	bge	1141c <vetor_insere@@Base+0x5c>
   1140c:	ldr	ip, [r3, #-4]
   11410:	str	ip, [r3], #-4
   11414:	cmp	r2, r3
   11418:	bne	1140c <vetor_insere@@Base+0x4c>
   1141c:	mov	r0, r8
   11420:	bl	10bd0 <strlen@plt>
   11424:	mov	r1, #1
   11428:	add	r0, r0, r1
   1142c:	bl	10b4c <calloc@plt>
   11430:	cmp	r0, #0
   11434:	str	r0, [r5, r4, lsl #2]
   11438:	beq	1148c <vetor_insere@@Base+0xcc>
   1143c:	mov	r1, r8
   11440:	bl	10b94 <strcpy@plt>
   11444:	add	r3, r7, #1
   11448:	mov	r0, r4
   1144c:	str	r3, [r6]
   11450:	pop	{r4, r5, r6, r7, r8, pc}
   11454:	cmp	r7, #0
   11458:	moveq	r3, #1
   1145c:	lslne	r3, r7, #1
   11460:	streq	r3, [r0, #4]
   11464:	strne	r3, [r0, #4]
   11468:	moveq	r1, #4
   1146c:	lslne	r1, r7, #3
   11470:	ldr	r0, [r0, #8]
   11474:	bl	10b7c <realloc@plt>
   11478:	cmp	r0, #0
   1147c:	str	r0, [r6, #8]
   11480:	ldrne	r7, [r6]
   11484:	movne	r5, r0
   11488:	bne	113fc <vetor_insere@@Base+0x3c>
   1148c:	mvn	r0, #0
   11490:	pop	{r4, r5, r6, r7, r8, pc}
   11494:	mvn	r0, #0
   11498:	bx	lr

0001149c <vetor_remove@@Base>:
   1149c:	clz	r3, r0
   114a0:	lsr	r3, r3, #5
   114a4:	orrs	r3, r3, r1, lsr #31
   114a8:	bne	11514 <vetor_remove@@Base+0x78>
   114ac:	ldr	r3, [r0]
   114b0:	cmp	r1, r3
   114b4:	bge	11514 <vetor_remove@@Base+0x78>
   114b8:	ldr	r3, [r0, #8]
   114bc:	push	{r4, r5, r6, lr}
   114c0:	mov	r6, r0
   114c4:	ldr	r0, [r3, r1, lsl #2]
   114c8:	mov	r5, r1
   114cc:	lsl	r4, r1, #2
   114d0:	bl	10b64 <free@plt>
   114d4:	ldr	r0, [r6]
   114d8:	add	r1, r5, #1
   114dc:	cmp	r1, r0
   114e0:	bge	11504 <vetor_remove@@Base+0x68>
   114e4:	ldr	r2, [r6, #8]
   114e8:	sub	r1, r0, #-1073741823	; 0xc0000001
   114ec:	add	r3, r2, r4
   114f0:	add	r1, r2, r1, lsl #2
   114f4:	ldr	r2, [r3, #4]
   114f8:	str	r2, [r3], #4
   114fc:	cmp	r3, r1
   11500:	bne	114f4 <vetor_remove@@Base+0x58>
   11504:	sub	r0, r0, #1
   11508:	str	r0, [r6]
   1150c:	mov	r0, #0
   11510:	pop	{r4, r5, r6, pc}
   11514:	mvn	r0, #0
   11518:	bx	lr

0001151c <vetor_pesquisa@@Base>:
   1151c:	cmp	r0, #0
   11520:	push	{r4, r5, r6, r7, r8, lr}
   11524:	beq	11570 <vetor_pesquisa@@Base+0x54>
   11528:	ldr	r7, [r0]
   1152c:	cmp	r7, #0
   11530:	ble	11570 <vetor_pesquisa@@Base+0x54>
   11534:	ldr	r5, [r0, #8]
   11538:	mov	r6, r1
   1153c:	mov	r4, #0
   11540:	sub	r5, r5, #4
   11544:	b	11554 <vetor_pesquisa@@Base+0x38>
   11548:	add	r4, r4, #1
   1154c:	cmp	r4, r7
   11550:	beq	11570 <vetor_pesquisa@@Base+0x54>
   11554:	mov	r1, r6
   11558:	ldr	r0, [r5, #4]!
   1155c:	bl	10b58 <strcmp@plt>
   11560:	cmp	r0, #0
   11564:	bne	11548 <vetor_pesquisa@@Base+0x2c>
   11568:	mov	r0, r4
   1156c:	pop	{r4, r5, r6, r7, r8, pc}
   11570:	mvn	r4, #0
   11574:	mov	r0, r4
   11578:	pop	{r4, r5, r6, r7, r8, pc}

0001157c <vetor_ordena@@Base>:
   1157c:	cmp	r0, #0
   11580:	beq	115f8 <vetor_ordena@@Base+0x7c>
   11584:	ldr	r3, [r0]
   11588:	cmp	r3, #1
   1158c:	ble	115f0 <vetor_ordena@@Base+0x74>
   11590:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11594:	sub	r3, r3, #-1073741823	; 0xc0000001
   11598:	ldr	sl, [r0, #8]
   1159c:	mov	r8, #1
   115a0:	mov	r7, sl
   115a4:	add	r9, sl, r3, lsl #2
   115a8:	ldr	r6, [r7, #4]!
   115ac:	mov	r5, r8
   115b0:	mov	r4, r7
   115b4:	ldr	r1, [r4, #-4]
   115b8:	mov	r0, r6
   115bc:	bl	10b58 <strcmp@plt>
   115c0:	cmp	r0, #0
   115c4:	bge	115d8 <vetor_ordena@@Base+0x5c>
   115c8:	ldr	r3, [r4, #-4]!
   115cc:	subs	r5, r5, #1
   115d0:	str	r3, [r4, #4]
   115d4:	bne	115b4 <vetor_ordena@@Base+0x38>
   115d8:	cmp	r9, r7
   115dc:	str	r6, [sl, r5, lsl #2]
   115e0:	add	r8, r8, #1
   115e4:	bne	115a8 <vetor_ordena@@Base+0x2c>
   115e8:	mov	r0, #0
   115ec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   115f0:	mov	r0, #0
   115f4:	bx	lr
   115f8:	mvn	r0, #0
   115fc:	bx	lr

00011600 <novo_str@@Base>:
   11600:	push	{r4, r5, r6, r7, r8, lr}
   11604:	mov	r5, r0
   11608:	mov	r0, #12
   1160c:	bl	10bac <malloc@plt>
   11610:	subs	r4, r0, #0
   11614:	beq	11654 <novo_str@@Base+0x54>
   11618:	mov	r0, r5
   1161c:	bl	10bd0 <strlen@plt>
   11620:	add	r7, r0, #1
   11624:	mov	r0, r7
   11628:	bl	10bac <malloc@plt>
   1162c:	cmp	r0, #0
   11630:	mov	r6, r0
   11634:	str	r0, [r4]
   11638:	beq	1165c <novo_str@@Base+0x5c>
   1163c:	mov	r2, r7
   11640:	mov	r1, r5
   11644:	bl	10b70 <memcpy@plt>
   11648:	mov	r3, #0
   1164c:	str	r3, [r4, #4]
   11650:	str	r3, [r4, #8]
   11654:	mov	r0, r4
   11658:	pop	{r4, r5, r6, r7, r8, pc}
   1165c:	mov	r0, r4
   11660:	bl	10b64 <free@plt>
   11664:	mov	r4, r6
   11668:	b	11654 <novo_str@@Base+0x54>

0001166c <lista_nova@@Base>:
   1166c:	push	{r4, lr}
   11670:	mov	r0, #12
   11674:	bl	10bac <malloc@plt>
   11678:	cmp	r0, #0
   1167c:	movne	r3, #0
   11680:	strne	r3, [r0]
   11684:	strne	r3, [r0, #4]
   11688:	strne	r3, [r0, #8]
   1168c:	pop	{r4, pc}

00011690 <lista_apaga@@Base>:
   11690:	push	{r4, r5, r6, lr}
   11694:	subs	r5, r0, #0
   11698:	bne	116b4 <lista_apaga@@Base+0x24>
   1169c:	b	116cc <lista_apaga@@Base+0x3c>
   116a0:	ldm	r4, {r0, r3}
   116a4:	str	r3, [r5]
   116a8:	bl	10b64 <free@plt>
   116ac:	mov	r0, r4
   116b0:	bl	10b64 <free@plt>
   116b4:	ldr	r4, [r5]
   116b8:	cmp	r4, #0
   116bc:	bne	116a0 <lista_apaga@@Base+0x10>
   116c0:	mov	r0, r5
   116c4:	pop	{r4, r5, r6, lr}
   116c8:	b	10b64 <free@plt>
   116cc:	pop	{r4, r5, r6, pc}

000116d0 <lista_tamanho@@Base>:
   116d0:	cmp	r0, #0
   116d4:	ldrne	r0, [r0, #8]
   116d8:	mvneq	r0, #0
   116dc:	bx	lr

000116e0 <lista_inicio@@Base>:
   116e0:	cmp	r0, #0
   116e4:	ldrne	r0, [r0]
   116e8:	bx	lr

000116ec <lista_fim@@Base>:
   116ec:	cmp	r0, #0
   116f0:	ldrne	r0, [r0, #4]
   116f4:	bx	lr

000116f8 <lista_insere@@Base>:
   116f8:	cmp	r1, #0
   116fc:	cmpne	r0, #0
   11700:	beq	1178c <lista_insere@@Base+0x94>
   11704:	push	{r4, r5, r6, lr}
   11708:	mov	r5, r0
   1170c:	mov	r0, r1
   11710:	mov	r4, r2
   11714:	bl	11600 <novo_str@@Base>
   11718:	cmp	r0, #0
   1171c:	beq	11764 <lista_insere@@Base+0x6c>
   11720:	ldr	r3, [r5, #8]
   11724:	cmp	r4, #0
   11728:	add	r3, r3, #1
   1172c:	str	r3, [r5, #8]
   11730:	ldr	r3, [r5]
   11734:	beq	1176c <lista_insere@@Base+0x74>
   11738:	cmp	r4, r3
   1173c:	streq	r4, [r0, #4]
   11740:	ldrne	r3, [r4, #8]
   11744:	streq	r0, [r4, #8]
   11748:	strne	r3, [r0, #8]
   1174c:	ldrne	r3, [r4, #8]
   11750:	strne	r4, [r0, #4]
   11754:	streq	r0, [r5]
   11758:	strne	r0, [r3, #4]
   1175c:	strne	r0, [r4, #8]
   11760:	pop	{r4, r5, r6, pc}
   11764:	mov	r0, #0
   11768:	pop	{r4, r5, r6, pc}
   1176c:	cmp	r3, #0
   11770:	streq	r0, [r5, #4]
   11774:	ldrne	r3, [r5, #4]
   11778:	streq	r0, [r5]
   1177c:	strne	r3, [r0, #8]
   11780:	strne	r0, [r3, #4]
   11784:	strne	r0, [r5, #4]
   11788:	pop	{r4, r5, r6, pc}
   1178c:	mov	r0, #0
   11790:	bx	lr

00011794 <lista_remove@@Base>:
   11794:	cmp	r1, #0
   11798:	cmpne	r0, #0
   1179c:	push	{r4, r5, r6, lr}
   117a0:	beq	117f4 <lista_remove@@Base+0x60>
   117a4:	ldr	r2, [r1, #8]
   117a8:	ldr	r3, [r0, #8]
   117ac:	cmp	r2, #0
   117b0:	sub	r3, r3, #1
   117b4:	str	r3, [r0, #8]
   117b8:	ldrne	r3, [r1, #4]
   117bc:	ldreq	r5, [r1, #4]
   117c0:	strne	r3, [r2, #4]
   117c4:	ldrne	r5, [r1, #4]
   117c8:	streq	r5, [r0]
   117cc:	cmp	r5, #0
   117d0:	streq	r2, [r0, #4]
   117d4:	mov	r4, r1
   117d8:	ldr	r0, [r1]
   117dc:	strne	r2, [r5, #8]
   117e0:	bl	10b64 <free@plt>
   117e4:	mov	r0, r4
   117e8:	bl	10b64 <free@plt>
   117ec:	mov	r0, r5
   117f0:	pop	{r4, r5, r6, pc}
   117f4:	mov	r5, #0
   117f8:	mov	r0, r5
   117fc:	pop	{r4, r5, r6, pc}

00011800 <lista_pesquisa@@Base>:
   11800:	cmp	r1, #0
   11804:	cmpne	r0, #0
   11808:	push	{r4, r5, r6, lr}
   1180c:	moveq	r4, #1
   11810:	movne	r4, #0
   11814:	beq	1189c <lista_pesquisa@@Base+0x9c>
   11818:	cmp	r2, #1
   1181c:	bhi	1185c <lista_pesquisa@@Base+0x5c>
   11820:	cmp	r2, #0
   11824:	mov	r5, r1
   11828:	bne	11864 <lista_pesquisa@@Base+0x64>
   1182c:	ldr	r4, [r0]
   11830:	cmp	r4, #0
   11834:	bne	11848 <lista_pesquisa@@Base+0x48>
   11838:	b	1185c <lista_pesquisa@@Base+0x5c>
   1183c:	ldr	r4, [r4, #4]
   11840:	cmp	r4, #0
   11844:	beq	1185c <lista_pesquisa@@Base+0x5c>
   11848:	mov	r1, r5
   1184c:	ldr	r0, [r4]
   11850:	bl	10b58 <strcmp@plt>
   11854:	cmp	r0, #0
   11858:	bne	1183c <lista_pesquisa@@Base+0x3c>
   1185c:	mov	r0, r4
   11860:	pop	{r4, r5, r6, pc}
   11864:	ldr	r4, [r0, #4]
   11868:	cmp	r4, #0
   1186c:	bne	11880 <lista_pesquisa@@Base+0x80>
   11870:	b	1185c <lista_pesquisa@@Base+0x5c>
   11874:	ldr	r4, [r4, #8]
   11878:	cmp	r4, #0
   1187c:	beq	1185c <lista_pesquisa@@Base+0x5c>
   11880:	mov	r1, r5
   11884:	ldr	r0, [r4]
   11888:	bl	10b58 <strcmp@plt>
   1188c:	cmp	r0, #0
   11890:	bne	11874 <lista_pesquisa@@Base+0x74>
   11894:	mov	r0, r4
   11898:	pop	{r4, r5, r6, pc}
   1189c:	mov	r4, #0
   118a0:	mov	r0, r4
   118a4:	pop	{r4, r5, r6, pc}

000118a8 <lista_ordena@@Base>:
   118a8:	cmp	r0, #0
   118ac:	beq	11918 <lista_ordena@@Base+0x70>
   118b0:	push	{r4, r5, r6, r7, r8, lr}
   118b4:	ldr	r6, [r0]
   118b8:	ldr	r7, [r6, #4]
   118bc:	cmp	r7, #0
   118c0:	beq	11910 <lista_ordena@@Base+0x68>
   118c4:	mov	r5, r6
   118c8:	mov	r4, r7
   118cc:	ldr	r1, [r5]
   118d0:	ldr	r0, [r4]
   118d4:	bl	10b58 <strcmp@plt>
   118d8:	cmp	r0, #0
   118dc:	movlt	r5, r4
   118e0:	ldr	r4, [r4, #4]
   118e4:	cmp	r4, #0
   118e8:	bne	118cc <lista_ordena@@Base+0x24>
   118ec:	cmp	r6, r5
   118f0:	ldrne	r2, [r5]
   118f4:	ldrne	r3, [r6]
   118f8:	strne	r2, [r6]
   118fc:	mov	r6, r7
   11900:	strne	r3, [r5]
   11904:	ldr	r7, [r6, #4]
   11908:	cmp	r7, #0
   1190c:	bne	118c4 <lista_ordena@@Base+0x1c>
   11910:	mov	r0, r7
   11914:	pop	{r4, r5, r6, r7, r8, pc}
   11918:	mvn	r0, #0
   1191c:	bx	lr

00011920 <lista_inverte@@Base>:
   11920:	push	{r4, r5, lr}
   11924:	subs	r5, r0, #0
   11928:	beq	119c0 <lista_inverte@@Base+0xa0>
   1192c:	ldr	r4, [r5, #8]
   11930:	cmp	r4, #1
   11934:	ble	119b0 <lista_inverte@@Base+0x90>
   11938:	ldr	r2, [r5]
   1193c:	cmp	r4, #2
   11940:	ldr	r3, [r2, #4]
   11944:	beq	119b8 <lista_inverte@@Base+0x98>
   11948:	sub	r4, r4, #2
   1194c:	mov	r1, #0
   11950:	b	11958 <lista_inverte@@Base+0x38>
   11954:	mov	r3, lr
   11958:	ldr	ip, [r3, #8]
   1195c:	ldr	lr, [r3, #4]
   11960:	add	r1, r1, #1
   11964:	str	lr, [ip, #4]
   11968:	ldr	lr, [r3, #4]
   1196c:	cmp	r1, r4
   11970:	str	ip, [lr, #8]
   11974:	str	r2, [r3, #4]
   11978:	str	r3, [r2, #8]
   1197c:	mov	r2, r3
   11980:	bne	11954 <lista_inverte@@Base+0x34>
   11984:	ldr	r2, [r5, #4]
   11988:	mov	r1, #0
   1198c:	mov	r0, r1
   11990:	ldr	ip, [r2, #8]
   11994:	str	ip, [r5, #4]
   11998:	str	r1, [ip, #4]
   1199c:	str	r1, [r2, #8]
   119a0:	str	r3, [r2, #4]
   119a4:	str	r2, [r3, #8]
   119a8:	str	r2, [r5]
   119ac:	pop	{r4, r5, pc}
   119b0:	mov	r0, #0
   119b4:	pop	{r4, r5, pc}
   119b8:	mov	r3, r2
   119bc:	b	11984 <lista_inverte@@Base+0x64>
   119c0:	mvn	r0, #0
   119c4:	pop	{r4, r5, pc}

000119c8 <__libc_csu_init@@Base>:
   119c8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   119cc:	mov	r7, r0
   119d0:	ldr	r6, [pc, #72]	; 11a20 <__libc_csu_init@@Base+0x58>
   119d4:	ldr	r5, [pc, #72]	; 11a24 <__libc_csu_init@@Base+0x5c>
   119d8:	add	r6, pc, r6
   119dc:	add	r5, pc, r5
   119e0:	sub	r6, r6, r5
   119e4:	mov	r8, r1
   119e8:	mov	r9, r2
   119ec:	bl	10b2c <calloc@plt-0x20>
   119f0:	asrs	r6, r6, #2
   119f4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   119f8:	mov	r4, #0
   119fc:	add	r4, r4, #1
   11a00:	ldr	r3, [r5], #4
   11a04:	mov	r2, r9
   11a08:	mov	r1, r8
   11a0c:	mov	r0, r7
   11a10:	blx	r3
   11a14:	cmp	r6, r4
   11a18:	bne	119fc <__libc_csu_init@@Base+0x34>
   11a1c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11a20:	andeq	r0, r1, r0, lsr r5
   11a24:	andeq	r0, r1, r8, lsr #10

00011a28 <__libc_csu_fini@@Base>:
   11a28:	bx	lr

Disassembly of section .fini:

00011a2c <.fini>:
   11a2c:	push	{r3, lr}
   11a30:	pop	{r3, pc}
