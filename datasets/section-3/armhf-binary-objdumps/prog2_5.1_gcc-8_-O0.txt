
../repos/prog2/5.1:     file format elf32-littlearm


Disassembly of section .init:

000109e4 <.init>:
   109e4:	push	{r3, lr}
   109e8:	bl	10ac4 <_start@@Base+0x3c>
   109ec:	pop	{r3, pc}

Disassembly of section .plt:

000109f0 <calloc@plt-0x14>:
   109f0:	push	{lr}		; (str lr, [sp, #-4]!)
   109f4:	ldr	lr, [pc, #4]	; 10a00 <calloc@plt-0x4>
   109f8:	add	lr, pc, lr
   109fc:	ldr	pc, [lr, #8]!
   10a00:	andeq	r2, r1, r0, lsl #12

00010a04 <calloc@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #73728	; 0x12000
   10a0c:	ldr	pc, [ip, #1536]!	; 0x600

00010a10 <printf@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #73728	; 0x12000
   10a18:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a1c <free@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #73728	; 0x12000
   10a24:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a28 <strcpy@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #73728	; 0x12000
   10a30:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a34 <puts@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #73728	; 0x12000
   10a3c:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a40 <malloc@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #73728	; 0x12000
   10a48:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a4c <__libc_start_main@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #73728	; 0x12000
   10a54:	ldr	pc, [ip, #1488]!	; 0x5d0

00010a58 <__gmon_start__@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #73728	; 0x12000
   10a60:	ldr	pc, [ip, #1480]!	; 0x5c8

00010a64 <strlen@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #73728	; 0x12000
   10a6c:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a70 <putchar@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #73728	; 0x12000
   10a78:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a7c <abort@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #73728	; 0x12000
   10a84:	ldr	pc, [ip, #1456]!	; 0x5b0

Disassembly of section .text:

00010a88 <_start@@Base>:
   10a88:	mov	fp, #0
   10a8c:	mov	lr, #0
   10a90:	pop	{r1}		; (ldr r1, [sp], #4)
   10a94:	mov	r2, sp
   10a98:	push	{r2}		; (str r2, [sp, #-4]!)
   10a9c:	push	{r0}		; (str r0, [sp, #-4]!)
   10aa0:	ldr	ip, [pc, #16]	; 10ab8 <_start@@Base+0x30>
   10aa4:	push	{ip}		; (str ip, [sp, #-4]!)
   10aa8:	ldr	r0, [pc, #12]	; 10abc <_start@@Base+0x34>
   10aac:	ldr	r3, [pc, #12]	; 10ac0 <_start@@Base+0x38>
   10ab0:	bl	10a4c <__libc_start_main@plt>
   10ab4:	bl	10a7c <abort@plt>
   10ab8:	strheq	r2, [r1], -r8
   10abc:	andeq	r0, r1, r8, ror fp
   10ac0:	andeq	r2, r1, r8, asr r0
   10ac4:	ldr	r3, [pc, #20]	; 10ae0 <_start@@Base+0x58>
   10ac8:	ldr	r2, [pc, #20]	; 10ae4 <_start@@Base+0x5c>
   10acc:	add	r3, pc, r3
   10ad0:	ldr	r2, [r3, r2]
   10ad4:	cmp	r2, #0
   10ad8:	bxeq	lr
   10adc:	b	10a58 <__gmon_start__@plt>
   10ae0:	andeq	r2, r1, ip, lsr #10
   10ae4:	andeq	r0, r0, r8, lsr r0
   10ae8:	ldr	r0, [pc, #24]	; 10b08 <_start@@Base+0x80>
   10aec:	ldr	r3, [pc, #24]	; 10b0c <_start@@Base+0x84>
   10af0:	cmp	r3, r0
   10af4:	bxeq	lr
   10af8:	ldr	r3, [pc, #16]	; 10b10 <_start@@Base+0x88>
   10afc:	cmp	r3, #0
   10b00:	bxeq	lr
   10b04:	bx	r3
   10b08:	andeq	r3, r2, r4, asr #32
   10b0c:	andeq	r3, r2, r4, asr #32
   10b10:	andeq	r0, r0, r0
   10b14:	ldr	r0, [pc, #36]	; 10b40 <_start@@Base+0xb8>
   10b18:	ldr	r1, [pc, #36]	; 10b44 <_start@@Base+0xbc>
   10b1c:	sub	r1, r1, r0
   10b20:	asr	r1, r1, #2
   10b24:	add	r1, r1, r1, lsr #31
   10b28:	asrs	r1, r1, #1
   10b2c:	bxeq	lr
   10b30:	ldr	r3, [pc, #16]	; 10b48 <_start@@Base+0xc0>
   10b34:	cmp	r3, #0
   10b38:	bxeq	lr
   10b3c:	bx	r3
   10b40:	andeq	r3, r2, r4, asr #32
   10b44:	andeq	r3, r2, r4, asr #32
   10b48:	andeq	r0, r0, r0
   10b4c:	push	{r4, lr}
   10b50:	ldr	r4, [pc, #24]	; 10b70 <_start@@Base+0xe8>
   10b54:	ldrb	r3, [r4]
   10b58:	cmp	r3, #0
   10b5c:	popne	{r4, pc}
   10b60:	bl	10ae8 <_start@@Base+0x60>
   10b64:	mov	r3, #1
   10b68:	strb	r3, [r4]
   10b6c:	pop	{r4, pc}
   10b70:	andeq	r3, r2, r4, asr #32
   10b74:	b	10b14 <_start@@Base+0x8c>

00010b78 <main@@Base>:
   10b78:	str	fp, [sp, #-8]!
   10b7c:	str	lr, [sp, #4]
   10b80:	add	fp, sp, #4
   10b84:	sub	sp, sp, #64	; 0x40
   10b88:	mov	r1, #3
   10b8c:	mov	r0, #4
   10b90:	bl	1143c <armazem_novo@@Base>
   10b94:	str	r0, [fp, #-12]
   10b98:	ldr	r3, [pc, #1076]	; 10fd4 <main@@Base+0x45c>
   10b9c:	add	r3, pc, r3
   10ba0:	mov	r0, r3
   10ba4:	bl	10a34 <puts@plt>
   10ba8:	vldr	s0, [pc, #1012]	; 10fa4 <main@@Base+0x42c>
   10bac:	ldr	r3, [pc, #1060]	; 10fd8 <main@@Base+0x460>
   10bb0:	add	r3, pc, r3
   10bb4:	mov	r0, r3
   10bb8:	bl	117bc <contentor_novo@@Base>
   10bbc:	str	r0, [fp, #-16]
   10bc0:	vldr	s0, [pc, #992]	; 10fa8 <main@@Base+0x430>
   10bc4:	ldr	r3, [pc, #1040]	; 10fdc <main@@Base+0x464>
   10bc8:	add	r3, pc, r3
   10bcc:	mov	r0, r3
   10bd0:	bl	117bc <contentor_novo@@Base>
   10bd4:	str	r0, [fp, #-20]	; 0xffffffec
   10bd8:	vldr	s0, [pc, #972]	; 10fac <main@@Base+0x434>
   10bdc:	ldr	r3, [pc, #1020]	; 10fe0 <main@@Base+0x468>
   10be0:	add	r3, pc, r3
   10be4:	mov	r0, r3
   10be8:	bl	117bc <contentor_novo@@Base>
   10bec:	str	r0, [fp, #-24]	; 0xffffffe8
   10bf0:	vldr	s0, [pc, #952]	; 10fb0 <main@@Base+0x438>
   10bf4:	ldr	r3, [pc, #1000]	; 10fe4 <main@@Base+0x46c>
   10bf8:	add	r3, pc, r3
   10bfc:	mov	r0, r3
   10c00:	bl	117bc <contentor_novo@@Base>
   10c04:	str	r0, [fp, #-28]	; 0xffffffe4
   10c08:	vldr	s0, [pc, #932]	; 10fb4 <main@@Base+0x43c>
   10c0c:	ldr	r3, [pc, #980]	; 10fe8 <main@@Base+0x470>
   10c10:	add	r3, pc, r3
   10c14:	mov	r0, r3
   10c18:	bl	117bc <contentor_novo@@Base>
   10c1c:	str	r0, [fp, #-32]	; 0xffffffe0
   10c20:	vldr	s0, [pc, #912]	; 10fb8 <main@@Base+0x440>
   10c24:	ldr	r3, [pc, #960]	; 10fec <main@@Base+0x474>
   10c28:	add	r3, pc, r3
   10c2c:	mov	r0, r3
   10c30:	bl	117bc <contentor_novo@@Base>
   10c34:	str	r0, [fp, #-36]	; 0xffffffdc
   10c38:	vldr	s0, [pc, #892]	; 10fbc <main@@Base+0x444>
   10c3c:	ldr	r3, [pc, #940]	; 10ff0 <main@@Base+0x478>
   10c40:	add	r3, pc, r3
   10c44:	mov	r0, r3
   10c48:	bl	117bc <contentor_novo@@Base>
   10c4c:	str	r0, [fp, #-40]	; 0xffffffd8
   10c50:	vldr	s0, [pc, #872]	; 10fc0 <main@@Base+0x448>
   10c54:	ldr	r3, [pc, #920]	; 10ff4 <main@@Base+0x47c>
   10c58:	add	r3, pc, r3
   10c5c:	mov	r0, r3
   10c60:	bl	117bc <contentor_novo@@Base>
   10c64:	str	r0, [fp, #-44]	; 0xffffffd4
   10c68:	vldr	s0, [pc, #836]	; 10fb4 <main@@Base+0x43c>
   10c6c:	ldr	r3, [pc, #900]	; 10ff8 <main@@Base+0x480>
   10c70:	add	r3, pc, r3
   10c74:	mov	r0, r3
   10c78:	bl	117bc <contentor_novo@@Base>
   10c7c:	str	r0, [fp, #-48]	; 0xffffffd0
   10c80:	vldr	s0, [pc, #828]	; 10fc4 <main@@Base+0x44c>
   10c84:	ldr	r3, [pc, #880]	; 10ffc <main@@Base+0x484>
   10c88:	add	r3, pc, r3
   10c8c:	mov	r0, r3
   10c90:	bl	117bc <contentor_novo@@Base>
   10c94:	str	r0, [fp, #-52]	; 0xffffffcc
   10c98:	vldr	s0, [pc, #808]	; 10fc8 <main@@Base+0x450>
   10c9c:	ldr	r3, [pc, #860]	; 11000 <main@@Base+0x488>
   10ca0:	add	r3, pc, r3
   10ca4:	mov	r0, r3
   10ca8:	bl	117bc <contentor_novo@@Base>
   10cac:	str	r0, [fp, #-56]	; 0xffffffc8
   10cb0:	vldr	s0, [pc, #788]	; 10fcc <main@@Base+0x454>
   10cb4:	ldr	r3, [pc, #840]	; 11004 <main@@Base+0x48c>
   10cb8:	add	r3, pc, r3
   10cbc:	mov	r0, r3
   10cc0:	bl	117bc <contentor_novo@@Base>
   10cc4:	str	r0, [fp, #-60]	; 0xffffffc4
   10cc8:	vldr	s0, [pc, #768]	; 10fd0 <main@@Base+0x458>
   10ccc:	ldr	r3, [pc, #820]	; 11008 <main@@Base+0x490>
   10cd0:	add	r3, pc, r3
   10cd4:	mov	r0, r3
   10cd8:	bl	117bc <contentor_novo@@Base>
   10cdc:	str	r0, [fp, #-64]	; 0xffffffc0
   10ce0:	ldr	r3, [pc, #804]	; 1100c <main@@Base+0x494>
   10ce4:	add	r3, pc, r3
   10ce8:	mov	r0, r3
   10cec:	bl	10a34 <puts@plt>
   10cf0:	ldr	r0, [fp, #-12]
   10cf4:	bl	11230 <imprimeArmazem@@Base>
   10cf8:	ldr	r3, [pc, #784]	; 11010 <main@@Base+0x498>
   10cfc:	add	r3, pc, r3
   10d00:	mov	r0, r3
   10d04:	bl	10a34 <puts@plt>
   10d08:	ldr	r1, [fp, #-16]
   10d0c:	ldr	r0, [fp, #-12]
   10d10:	bl	1159c <armazenar_contentor@@Base>
   10d14:	mov	r3, r0
   10d18:	cmp	r3, #0
   10d1c:	beq	10d3c <main@@Base+0x1c4>
   10d20:	ldr	r3, [fp, #-16]
   10d24:	ldr	r3, [r3]
   10d28:	mov	r1, r3
   10d2c:	ldr	r3, [pc, #736]	; 11014 <main@@Base+0x49c>
   10d30:	add	r3, pc, r3
   10d34:	mov	r0, r3
   10d38:	bl	10a10 <printf@plt>
   10d3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   10d40:	ldr	r0, [fp, #-12]
   10d44:	bl	1159c <armazenar_contentor@@Base>
   10d48:	mov	r3, r0
   10d4c:	cmp	r3, #0
   10d50:	beq	10d70 <main@@Base+0x1f8>
   10d54:	ldr	r3, [fp, #-20]	; 0xffffffec
   10d58:	ldr	r3, [r3]
   10d5c:	mov	r1, r3
   10d60:	ldr	r3, [pc, #688]	; 11018 <main@@Base+0x4a0>
   10d64:	add	r3, pc, r3
   10d68:	mov	r0, r3
   10d6c:	bl	10a10 <printf@plt>
   10d70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10d74:	ldr	r0, [fp, #-12]
   10d78:	bl	1159c <armazenar_contentor@@Base>
   10d7c:	mov	r3, r0
   10d80:	cmp	r3, #0
   10d84:	beq	10da4 <main@@Base+0x22c>
   10d88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10d8c:	ldr	r3, [r3]
   10d90:	mov	r1, r3
   10d94:	ldr	r3, [pc, #640]	; 1101c <main@@Base+0x4a4>
   10d98:	add	r3, pc, r3
   10d9c:	mov	r0, r3
   10da0:	bl	10a10 <printf@plt>
   10da4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   10da8:	ldr	r0, [fp, #-12]
   10dac:	bl	1159c <armazenar_contentor@@Base>
   10db0:	mov	r3, r0
   10db4:	cmp	r3, #0
   10db8:	beq	10dd8 <main@@Base+0x260>
   10dbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10dc0:	ldr	r3, [r3]
   10dc4:	mov	r1, r3
   10dc8:	ldr	r3, [pc, #592]	; 11020 <main@@Base+0x4a8>
   10dcc:	add	r3, pc, r3
   10dd0:	mov	r0, r3
   10dd4:	bl	10a10 <printf@plt>
   10dd8:	ldr	r3, [pc, #580]	; 11024 <main@@Base+0x4ac>
   10ddc:	add	r3, pc, r3
   10de0:	mov	r0, r3
   10de4:	bl	10a34 <puts@plt>
   10de8:	ldr	r0, [fp, #-12]
   10dec:	bl	11230 <imprimeArmazem@@Base>
   10df0:	ldr	r3, [pc, #560]	; 11028 <main@@Base+0x4b0>
   10df4:	add	r3, pc, r3
   10df8:	mov	r0, r3
   10dfc:	bl	10a34 <puts@plt>
   10e00:	ldr	r1, [fp, #-32]	; 0xffffffe0
   10e04:	ldr	r0, [fp, #-12]
   10e08:	bl	1159c <armazenar_contentor@@Base>
   10e0c:	mov	r3, r0
   10e10:	cmp	r3, #0
   10e14:	beq	10e34 <main@@Base+0x2bc>
   10e18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10e1c:	ldr	r3, [r3]
   10e20:	mov	r1, r3
   10e24:	ldr	r3, [pc, #512]	; 1102c <main@@Base+0x4b4>
   10e28:	add	r3, pc, r3
   10e2c:	mov	r0, r3
   10e30:	bl	10a10 <printf@plt>
   10e34:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10e38:	ldr	r0, [fp, #-12]
   10e3c:	bl	1159c <armazenar_contentor@@Base>
   10e40:	mov	r3, r0
   10e44:	cmp	r3, #0
   10e48:	beq	10e68 <main@@Base+0x2f0>
   10e4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10e50:	ldr	r3, [r3]
   10e54:	mov	r1, r3
   10e58:	ldr	r3, [pc, #464]	; 11030 <main@@Base+0x4b8>
   10e5c:	add	r3, pc, r3
   10e60:	mov	r0, r3
   10e64:	bl	10a10 <printf@plt>
   10e68:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10e6c:	ldr	r0, [fp, #-12]
   10e70:	bl	1159c <armazenar_contentor@@Base>
   10e74:	mov	r3, r0
   10e78:	cmp	r3, #0
   10e7c:	beq	10e9c <main@@Base+0x324>
   10e80:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10e84:	ldr	r3, [r3]
   10e88:	mov	r1, r3
   10e8c:	ldr	r3, [pc, #416]	; 11034 <main@@Base+0x4bc>
   10e90:	add	r3, pc, r3
   10e94:	mov	r0, r3
   10e98:	bl	10a10 <printf@plt>
   10e9c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   10ea0:	ldr	r0, [fp, #-12]
   10ea4:	bl	1159c <armazenar_contentor@@Base>
   10ea8:	mov	r3, r0
   10eac:	cmp	r3, #0
   10eb0:	beq	10ed0 <main@@Base+0x358>
   10eb4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10eb8:	ldr	r3, [r3]
   10ebc:	mov	r1, r3
   10ec0:	ldr	r3, [pc, #368]	; 11038 <main@@Base+0x4c0>
   10ec4:	add	r3, pc, r3
   10ec8:	mov	r0, r3
   10ecc:	bl	10a10 <printf@plt>
   10ed0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   10ed4:	ldr	r0, [fp, #-12]
   10ed8:	bl	1159c <armazenar_contentor@@Base>
   10edc:	mov	r3, r0
   10ee0:	cmp	r3, #0
   10ee4:	beq	10f04 <main@@Base+0x38c>
   10ee8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   10eec:	ldr	r3, [r3]
   10ef0:	mov	r1, r3
   10ef4:	ldr	r3, [pc, #320]	; 1103c <main@@Base+0x4c4>
   10ef8:	add	r3, pc, r3
   10efc:	mov	r0, r3
   10f00:	bl	10a10 <printf@plt>
   10f04:	ldr	r1, [fp, #-52]	; 0xffffffcc
   10f08:	ldr	r0, [fp, #-12]
   10f0c:	bl	1159c <armazenar_contentor@@Base>
   10f10:	mov	r3, r0
   10f14:	cmp	r3, #0
   10f18:	beq	10f38 <main@@Base+0x3c0>
   10f1c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   10f20:	ldr	r3, [r3]
   10f24:	mov	r1, r3
   10f28:	ldr	r3, [pc, #272]	; 11040 <main@@Base+0x4c8>
   10f2c:	add	r3, pc, r3
   10f30:	mov	r0, r3
   10f34:	bl	10a10 <printf@plt>
   10f38:	ldr	r1, [fp, #-56]	; 0xffffffc8
   10f3c:	ldr	r0, [fp, #-12]
   10f40:	bl	1159c <armazenar_contentor@@Base>
   10f44:	mov	r3, r0
   10f48:	cmp	r3, #0
   10f4c:	beq	10f6c <main@@Base+0x3f4>
   10f50:	ldr	r3, [fp, #-56]	; 0xffffffc8
   10f54:	ldr	r3, [r3]
   10f58:	mov	r1, r3
   10f5c:	ldr	r3, [pc, #224]	; 11044 <main@@Base+0x4cc>
   10f60:	add	r3, pc, r3
   10f64:	mov	r0, r3
   10f68:	bl	10a10 <printf@plt>
   10f6c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   10f70:	ldr	r0, [fp, #-12]
   10f74:	bl	1159c <armazenar_contentor@@Base>
   10f78:	mov	r3, r0
   10f7c:	cmp	r3, #0
   10f80:	beq	1107c <main@@Base+0x504>
   10f84:	ldr	r3, [fp, #-60]	; 0xffffffc4
   10f88:	ldr	r3, [r3]
   10f8c:	mov	r1, r3
   10f90:	ldr	r3, [pc, #176]	; 11048 <main@@Base+0x4d0>
   10f94:	add	r3, pc, r3
   10f98:	mov	r0, r3
   10f9c:	bl	10a10 <printf@plt>
   10fa0:	b	1107c <main@@Base+0x504>
   10fa4:	cmnmi	r6, #0
   10fa8:	cmnmi	sl, #0
   10fac:	strmi	r8, [r4], #-0
   10fb0:	ldrtmi	r8, [r1], #-0
   10fb4:			; <UNDEFINED> instruction: 0x43be0000
   10fb8:	bicmi	r0, r3, #0
   10fbc:	sbcmi	r0, r8, #0
   10fc0:	adcmi	r0, r0, #0
   10fc4:	tstmi	r6, #0
   10fc8:	orrmi	r0, r7, #0
   10fcc:	bicsmi	r0, r7, #0
   10fd0:	movtmi	r0, #32768	; 0x8000
   10fd4:	andeq	r1, r0, r4, lsr #10
   10fd8:	andeq	r1, r0, r4, lsr #10
   10fdc:	andeq	r1, r0, r4, lsl r5
   10fe0:	andeq	r1, r0, r0, lsl #10
   10fe4:	strdeq	r1, [r0], -r0
   10fe8:	andeq	r1, r0, r0, ror #9
   10fec:	ldrdeq	r1, [r0], -r0
   10ff0:	andeq	r1, r0, r0, asr #9
   10ff4:			; <UNDEFINED> instruction: 0x000014b4
   10ff8:	andeq	r1, r0, r4, lsr #9
   10ffc:	muleq	r0, r8, r4
   11000:	andeq	r1, r0, r8, lsl #9
   11004:	andeq	r1, r0, ip, ror r4
   11008:	andeq	r1, r0, ip, ror #8
   1100c:	andeq	r1, r0, r0, ror #8
   11010:	andeq	r1, r0, r4, ror #8
   11014:	andeq	r1, r0, r4, asr r4
   11018:	andeq	r1, r0, r0, lsr #8
   1101c:	andeq	r1, r0, ip, ror #7
   11020:			; <UNDEFINED> instruction: 0x000013b8
   11024:	ldrdeq	r1, [r0], -r0
   11028:	ldrdeq	r1, [r0], -r4
   1102c:	andeq	r1, r0, ip, asr r3
   11030:	andeq	r1, r0, r8, lsr #6
   11034:	strdeq	r1, [r0], -r4
   11038:	andeq	r1, r0, r0, asr #5
   1103c:	andeq	r1, r0, ip, lsl #5
   11040:	andeq	r1, r0, r8, asr r2
   11044:	andeq	r1, r0, r4, lsr #4
   11048:	strdeq	r1, [r0], -r0
   1104c:	andeq	r1, r0, ip, ror #2
   11050:	andeq	r1, r0, ip, asr r1
   11054:	andeq	r1, r0, r8, asr r1
   11058:	andeq	r1, r0, ip, asr #2
   1105c:	andeq	r1, r0, r8, lsl #3
   11060:	andeq	r1, r0, r4, lsl #3
   11064:	andeq	r1, r0, r4, ror r1
   11068:	andeq	r1, r0, r8, ror r1
   1106c:	andeq	r1, r0, r4, lsl r1
   11070:	andeq	r1, r0, r4, asr #2
   11074:	andeq	r1, r0, r4, lsr r1
   11078:	andeq	r1, r0, r0, lsr r1
   1107c:	ldr	r3, [pc, #-56]	; 1104c <main@@Base+0x4d4>
   11080:	add	r3, pc, r3
   11084:	mov	r0, r3
   11088:	bl	10a34 <puts@plt>
   1108c:	ldr	r0, [fp, #-12]
   11090:	bl	11230 <imprimeArmazem@@Base>
   11094:	ldr	r0, [fp, #-12]
   11098:	bl	11500 <armazem_cheio@@Base>
   1109c:	mov	r3, r0
   110a0:	cmp	r3, #0
   110a4:	beq	110bc <main@@Base+0x544>
   110a8:	ldr	r3, [pc, #-96]	; 11050 <main@@Base+0x4d8>
   110ac:	add	r3, pc, r3
   110b0:	mov	r0, r3
   110b4:	bl	10a34 <puts@plt>
   110b8:	b	110cc <main@@Base+0x554>
   110bc:	ldr	r3, [pc, #-112]	; 11054 <main@@Base+0x4dc>
   110c0:	add	r3, pc, r3
   110c4:	mov	r0, r3
   110c8:	bl	10a34 <puts@plt>
   110cc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   110d0:	ldr	r0, [fp, #-12]
   110d4:	bl	1159c <armazenar_contentor@@Base>
   110d8:	mov	r3, r0
   110dc:	cmp	r3, #0
   110e0:	beq	11100 <main@@Base+0x588>
   110e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   110e8:	ldr	r3, [r3]
   110ec:	mov	r1, r3
   110f0:	ldr	r3, [pc, #-160]	; 11058 <main@@Base+0x4e0>
   110f4:	add	r3, pc, r3
   110f8:	mov	r0, r3
   110fc:	bl	10a10 <printf@plt>
   11100:	ldr	r3, [pc, #-172]	; 1105c <main@@Base+0x4e4>
   11104:	add	r3, pc, r3
   11108:	mov	r0, r3
   1110c:	bl	10a34 <puts@plt>
   11110:	mov	r3, #0
   11114:	str	r3, [fp, #-8]
   11118:	b	1114c <main@@Base+0x5d4>
   1111c:	ldr	r0, [fp, #-12]
   11120:	bl	1169c <expedir_contentor@@Base>
   11124:	str	r0, [fp, #-68]	; 0xffffffbc
   11128:	ldr	r3, [pc, #-208]	; 11060 <main@@Base+0x4e8>
   1112c:	add	r3, pc, r3
   11130:	mov	r0, r3
   11134:	bl	10a34 <puts@plt>
   11138:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1113c:	bl	11884 <contentor_imprime@@Base>
   11140:	ldr	r3, [fp, #-8]
   11144:	add	r3, r3, #1
   11148:	str	r3, [fp, #-8]
   1114c:	ldr	r3, [fp, #-8]
   11150:	cmp	r3, #7
   11154:	ble	1111c <main@@Base+0x5a4>
   11158:	ldr	r3, [pc, #-252]	; 11064 <main@@Base+0x4ec>
   1115c:	add	r3, pc, r3
   11160:	mov	r0, r3
   11164:	bl	10a34 <puts@plt>
   11168:	ldr	r0, [fp, #-12]
   1116c:	bl	11230 <imprimeArmazem@@Base>
   11170:	ldr	r3, [pc, #-272]	; 11068 <main@@Base+0x4f0>
   11174:	add	r3, pc, r3
   11178:	mov	r0, r3
   1117c:	bl	10a34 <puts@plt>
   11180:	mov	r3, #0
   11184:	str	r3, [fp, #-8]
   11188:	b	111bc <main@@Base+0x644>
   1118c:	ldr	r0, [fp, #-12]
   11190:	bl	1169c <expedir_contentor@@Base>
   11194:	str	r0, [fp, #-68]	; 0xffffffbc
   11198:	ldr	r3, [pc, #-308]	; 1106c <main@@Base+0x4f4>
   1119c:	add	r3, pc, r3
   111a0:	mov	r0, r3
   111a4:	bl	10a34 <puts@plt>
   111a8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   111ac:	bl	11884 <contentor_imprime@@Base>
   111b0:	ldr	r3, [fp, #-8]
   111b4:	add	r3, r3, #1
   111b8:	str	r3, [fp, #-8]
   111bc:	ldr	r3, [fp, #-8]
   111c0:	cmp	r3, #3
   111c4:	ble	1118c <main@@Base+0x614>
   111c8:	ldr	r3, [pc, #-352]	; 11070 <main@@Base+0x4f8>
   111cc:	add	r3, pc, r3
   111d0:	mov	r0, r3
   111d4:	bl	10a34 <puts@plt>
   111d8:	ldr	r0, [fp, #-12]
   111dc:	bl	11230 <imprimeArmazem@@Base>
   111e0:	ldr	r0, [fp, #-12]
   111e4:	bl	114a4 <armazem_vazio@@Base>
   111e8:	mov	r3, r0
   111ec:	cmp	r3, #0
   111f0:	beq	11208 <main@@Base+0x690>
   111f4:	ldr	r3, [pc, #-392]	; 11074 <main@@Base+0x4fc>
   111f8:	add	r3, pc, r3
   111fc:	mov	r0, r3
   11200:	bl	10a34 <puts@plt>
   11204:	b	11218 <main@@Base+0x6a0>
   11208:	ldr	r3, [pc, #-408]	; 11078 <main@@Base+0x500>
   1120c:	add	r3, pc, r3
   11210:	mov	r0, r3
   11214:	bl	10a34 <puts@plt>
   11218:	mov	r3, #0
   1121c:	mov	r0, r3
   11220:	sub	sp, fp, #4
   11224:	ldr	fp, [sp]
   11228:	add	sp, sp, #4
   1122c:	pop	{pc}		; (ldr pc, [sp], #4)

00011230 <imprimeArmazem@@Base>:
   11230:	str	fp, [sp, #-8]!
   11234:	str	lr, [sp, #4]
   11238:	add	fp, sp, #4
   1123c:	sub	sp, sp, #32
   11240:	str	r0, [fp, #-32]	; 0xffffffe0
   11244:	mov	r3, #0
   11248:	str	r3, [fp, #-20]	; 0xffffffec
   1124c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11250:	cmp	r3, #0
   11254:	beq	11410 <imprimeArmazem@@Base+0x1e0>
   11258:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1125c:	ldr	r3, [r3, #8]
   11260:	cmp	r3, #0
   11264:	beq	11410 <imprimeArmazem@@Base+0x1e0>
   11268:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1126c:	ldr	r3, [r3, #8]
   11270:	ldr	r3, [r3, #4]
   11274:	mov	r1, #4
   11278:	mov	r0, r3
   1127c:	bl	10a04 <calloc@plt>
   11280:	mov	r3, r0
   11284:	str	r3, [fp, #-24]	; 0xffffffe8
   11288:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1128c:	ldr	r3, [r3, #8]
   11290:	ldr	r3, [r3, #4]
   11294:	str	r3, [fp, #-28]	; 0xffffffe4
   11298:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1129c:	ldr	r3, [r3, #8]
   112a0:	ldr	r3, [r3]
   112a4:	str	r3, [fp, #-16]
   112a8:	mov	r3, #0
   112ac:	str	r3, [fp, #-8]
   112b0:	b	112ec <imprimeArmazem@@Base+0xbc>
   112b4:	ldr	r3, [fp, #-16]
   112b8:	ldr	r2, [r3]
   112bc:	ldr	r3, [fp, #-8]
   112c0:	lsl	r3, r3, #2
   112c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   112c8:	add	r3, r1, r3
   112cc:	ldr	r2, [r2, #4]
   112d0:	str	r2, [r3]
   112d4:	ldr	r3, [fp, #-16]
   112d8:	ldr	r3, [r3, #4]
   112dc:	str	r3, [fp, #-16]
   112e0:	ldr	r3, [fp, #-8]
   112e4:	add	r3, r3, #1
   112e8:	str	r3, [fp, #-8]
   112ec:	ldr	r3, [fp, #-16]
   112f0:	cmp	r3, #0
   112f4:	bne	112b4 <imprimeArmazem@@Base+0x84>
   112f8:	mov	r0, #10
   112fc:	bl	10a70 <putchar@plt>
   11300:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11304:	ldr	r3, [r3, #4]
   11308:	str	r3, [fp, #-12]
   1130c:	b	113a0 <imprimeArmazem@@Base+0x170>
   11310:	ldr	r3, [pc, #268]	; 11424 <imprimeArmazem@@Base+0x1f4>
   11314:	add	r3, pc, r3
   11318:	mov	r0, r3
   1131c:	bl	10a10 <printf@plt>
   11320:	mov	r3, #0
   11324:	str	r3, [fp, #-8]
   11328:	b	1137c <imprimeArmazem@@Base+0x14c>
   1132c:	ldr	r3, [fp, #-8]
   11330:	lsl	r3, r3, #2
   11334:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11338:	add	r3, r2, r3
   1133c:	ldr	r3, [r3]
   11340:	ldr	r2, [fp, #-12]
   11344:	cmp	r2, r3
   11348:	bgt	11360 <imprimeArmazem@@Base+0x130>
   1134c:	ldr	r3, [pc, #212]	; 11428 <imprimeArmazem@@Base+0x1f8>
   11350:	add	r3, pc, r3
   11354:	mov	r0, r3
   11358:	bl	10a10 <printf@plt>
   1135c:	b	11370 <imprimeArmazem@@Base+0x140>
   11360:	ldr	r3, [pc, #196]	; 1142c <imprimeArmazem@@Base+0x1fc>
   11364:	add	r3, pc, r3
   11368:	mov	r0, r3
   1136c:	bl	10a10 <printf@plt>
   11370:	ldr	r3, [fp, #-8]
   11374:	add	r3, r3, #1
   11378:	str	r3, [fp, #-8]
   1137c:	ldr	r2, [fp, #-8]
   11380:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11384:	cmp	r2, r3
   11388:	blt	1132c <imprimeArmazem@@Base+0xfc>
   1138c:	mov	r0, #10
   11390:	bl	10a70 <putchar@plt>
   11394:	ldr	r3, [fp, #-12]
   11398:	sub	r3, r3, #1
   1139c:	str	r3, [fp, #-12]
   113a0:	ldr	r3, [fp, #-12]
   113a4:	cmp	r3, #0
   113a8:	bgt	11310 <imprimeArmazem@@Base+0xe0>
   113ac:	ldr	r3, [pc, #124]	; 11430 <imprimeArmazem@@Base+0x200>
   113b0:	add	r3, pc, r3
   113b4:	mov	r0, r3
   113b8:	bl	10a10 <printf@plt>
   113bc:	mov	r3, #0
   113c0:	str	r3, [fp, #-8]
   113c4:	b	113e4 <imprimeArmazem@@Base+0x1b4>
   113c8:	ldr	r3, [pc, #100]	; 11434 <imprimeArmazem@@Base+0x204>
   113cc:	add	r3, pc, r3
   113d0:	mov	r0, r3
   113d4:	bl	10a10 <printf@plt>
   113d8:	ldr	r3, [fp, #-8]
   113dc:	add	r3, r3, #1
   113e0:	str	r3, [fp, #-8]
   113e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   113e8:	ldr	r3, [r3]
   113ec:	ldr	r2, [fp, #-8]
   113f0:	cmp	r2, r3
   113f4:	blt	113c8 <imprimeArmazem@@Base+0x198>
   113f8:	ldr	r3, [pc, #56]	; 11438 <imprimeArmazem@@Base+0x208>
   113fc:	add	r3, pc, r3
   11400:	mov	r0, r3
   11404:	bl	10a34 <puts@plt>
   11408:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1140c:	bl	10a1c <free@plt>
   11410:	nop	{0}
   11414:	sub	sp, fp, #4
   11418:	ldr	fp, [sp]
   1141c:	add	sp, sp, #4
   11420:	pop	{pc}		; (ldr pc, [sp], #4)
   11424:	andeq	r1, r0, r0, asr r0
   11428:	andeq	r1, r0, r8, lsl r0
   1142c:	andeq	r1, r0, ip
   11430:	andeq	r0, r0, r8, asr #31
   11434:			; <UNDEFINED> instruction: 0x00000fb0
   11438:	andeq	r0, r0, r8, lsl #31

0001143c <armazem_novo@@Base>:
   1143c:	str	fp, [sp, #-8]!
   11440:	str	lr, [sp, #4]
   11444:	add	fp, sp, #4
   11448:	sub	sp, sp, #16
   1144c:	str	r0, [fp, #-16]
   11450:	str	r1, [fp, #-20]	; 0xffffffec
   11454:	mov	r0, #12
   11458:	bl	10a40 <malloc@plt>
   1145c:	mov	r3, r0
   11460:	str	r3, [fp, #-8]
   11464:	ldr	r3, [fp, #-8]
   11468:	ldr	r2, [fp, #-16]
   1146c:	str	r2, [r3]
   11470:	ldr	r3, [fp, #-8]
   11474:	ldr	r2, [fp, #-20]	; 0xffffffec
   11478:	str	r2, [r3, #4]
   1147c:	bl	11980 <fila_nova@@Base>
   11480:	mov	r2, r0
   11484:	ldr	r3, [fp, #-8]
   11488:	str	r2, [r3, #8]
   1148c:	ldr	r3, [fp, #-8]
   11490:	mov	r0, r3
   11494:	sub	sp, fp, #4
   11498:	ldr	fp, [sp]
   1149c:	add	sp, sp, #4
   114a0:	pop	{pc}		; (ldr pc, [sp], #4)

000114a4 <armazem_vazio@@Base>:
   114a4:	str	fp, [sp, #-8]!
   114a8:	str	lr, [sp, #4]
   114ac:	add	fp, sp, #4
   114b0:	sub	sp, sp, #8
   114b4:	str	r0, [fp, #-8]
   114b8:	ldr	r3, [fp, #-8]
   114bc:	cmp	r3, #0
   114c0:	beq	114e0 <armazem_vazio@@Base+0x3c>
   114c4:	ldr	r3, [fp, #-8]
   114c8:	ldr	r3, [r3, #8]
   114cc:	mov	r0, r3
   114d0:	bl	11a74 <fila_tamanho@@Base>
   114d4:	mov	r3, r0
   114d8:	cmp	r3, #0
   114dc:	bne	114e8 <armazem_vazio@@Base+0x44>
   114e0:	mov	r3, #1
   114e4:	b	114ec <armazem_vazio@@Base+0x48>
   114e8:	mov	r3, #0
   114ec:	mov	r0, r3
   114f0:	sub	sp, fp, #4
   114f4:	ldr	fp, [sp]
   114f8:	add	sp, sp, #4
   114fc:	pop	{pc}		; (ldr pc, [sp], #4)

00011500 <armazem_cheio@@Base>:
   11500:	str	fp, [sp, #-8]!
   11504:	str	lr, [sp, #4]
   11508:	add	fp, sp, #4
   1150c:	sub	sp, sp, #8
   11510:	str	r0, [fp, #-8]
   11514:	ldr	r0, [fp, #-8]
   11518:	bl	114a4 <armazem_vazio@@Base>
   1151c:	mov	r3, r0
   11520:	cmp	r3, #0
   11524:	beq	11530 <armazem_cheio@@Base+0x30>
   11528:	mov	r3, #0
   1152c:	b	11588 <armazem_cheio@@Base+0x88>
   11530:	ldr	r3, [fp, #-8]
   11534:	ldr	r3, [r3, #8]
   11538:	mov	r0, r3
   1153c:	bl	11a74 <fila_tamanho@@Base>
   11540:	mov	r2, r0
   11544:	ldr	r3, [fp, #-8]
   11548:	ldr	r3, [r3]
   1154c:	cmp	r2, r3
   11550:	bne	11584 <armazem_cheio@@Base+0x84>
   11554:	ldr	r3, [fp, #-8]
   11558:	ldr	r3, [r3, #8]
   1155c:	mov	r0, r3
   11560:	bl	11b08 <fila_back@@Base>
   11564:	mov	r3, r0
   11568:	ldr	r2, [r3, #4]
   1156c:	ldr	r3, [fp, #-8]
   11570:	ldr	r3, [r3, #4]
   11574:	cmp	r2, r3
   11578:	bne	11584 <armazem_cheio@@Base+0x84>
   1157c:	mov	r3, #1
   11580:	b	11588 <armazem_cheio@@Base+0x88>
   11584:	mov	r3, #0
   11588:	mov	r0, r3
   1158c:	sub	sp, fp, #4
   11590:	ldr	fp, [sp]
   11594:	add	sp, sp, #4
   11598:	pop	{pc}		; (ldr pc, [sp], #4)

0001159c <armazenar_contentor@@Base>:
   1159c:	str	r4, [sp, #-12]!
   115a0:	str	fp, [sp, #4]
   115a4:	str	lr, [sp, #8]
   115a8:	add	fp, sp, #8
   115ac:	sub	sp, sp, #20
   115b0:	str	r0, [fp, #-24]	; 0xffffffe8
   115b4:	str	r1, [fp, #-28]	; 0xffffffe4
   115b8:	bl	11d8c <pilha_nova@@Base>
   115bc:	str	r0, [fp, #-16]
   115c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   115c4:	cmp	r3, #0
   115c8:	beq	115ec <armazenar_contentor@@Base+0x50>
   115cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   115d0:	cmp	r3, #0
   115d4:	beq	115ec <armazenar_contentor@@Base+0x50>
   115d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   115dc:	bl	11500 <armazem_cheio@@Base>
   115e0:	mov	r3, r0
   115e4:	cmp	r3, #0
   115e8:	beq	115f4 <armazenar_contentor@@Base+0x58>
   115ec:	mov	r3, #0
   115f0:	b	11684 <armazenar_contentor@@Base+0xe8>
   115f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   115f8:	bl	114a4 <armazem_vazio@@Base>
   115fc:	mov	r3, r0
   11600:	cmp	r3, #0
   11604:	beq	11624 <armazenar_contentor@@Base+0x88>
   11608:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1160c:	ldr	r4, [r3, #8]
   11610:	bl	11d8c <pilha_nova@@Base>
   11614:	mov	r3, r0
   11618:	mov	r1, r3
   1161c:	mov	r0, r4
   11620:	bl	11b80 <fila_push@@Base>
   11624:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11628:	ldr	r3, [r3, #8]
   1162c:	mov	r0, r3
   11630:	bl	11b08 <fila_back@@Base>
   11634:	mov	r3, r0
   11638:	ldr	r2, [r3, #4]
   1163c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11640:	ldr	r3, [r3, #4]
   11644:	cmp	r2, r3
   11648:	bne	11660 <armazenar_contentor@@Base+0xc4>
   1164c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11650:	ldr	r3, [r3, #8]
   11654:	ldr	r1, [fp, #-16]
   11658:	mov	r0, r3
   1165c:	bl	11b80 <fila_push@@Base>
   11660:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11664:	ldr	r3, [r3, #8]
   11668:	mov	r0, r3
   1166c:	bl	11b08 <fila_back@@Base>
   11670:	mov	r3, r0
   11674:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11678:	mov	r0, r3
   1167c:	bl	11f14 <pilha_push@@Base>
   11680:	mov	r3, #1
   11684:	mov	r0, r3
   11688:	sub	sp, fp, #8
   1168c:	ldr	r4, [sp]
   11690:	ldr	fp, [sp, #4]
   11694:	add	sp, sp, #8
   11698:	pop	{pc}		; (ldr pc, [sp], #4)

0001169c <expedir_contentor@@Base>:
   1169c:	str	r4, [sp, #-12]!
   116a0:	str	fp, [sp, #4]
   116a4:	str	lr, [sp, #8]
   116a8:	add	fp, sp, #8
   116ac:	sub	sp, sp, #20
   116b0:	str	r0, [fp, #-24]	; 0xffffffe8
   116b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   116b8:	bl	114a4 <armazem_vazio@@Base>
   116bc:	mov	r3, r0
   116c0:	cmp	r3, #0
   116c4:	bne	116f0 <expedir_contentor@@Base+0x54>
   116c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   116cc:	ldr	r3, [r3, #8]
   116d0:	mov	r0, r3
   116d4:	bl	11ab0 <fila_front@@Base>
   116d8:	mov	r3, r0
   116dc:	mov	r0, r3
   116e0:	bl	11ebc <pilha_top@@Base>
   116e4:	mov	r3, r0
   116e8:	cmp	r3, #0
   116ec:	bne	116f8 <expedir_contentor@@Base+0x5c>
   116f0:	mov	r3, #0
   116f4:	b	117a4 <expedir_contentor@@Base+0x108>
   116f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   116fc:	ldr	r3, [r3, #8]
   11700:	mov	r0, r3
   11704:	bl	11ab0 <fila_front@@Base>
   11708:	mov	r3, r0
   1170c:	mov	r0, r3
   11710:	bl	11ebc <pilha_top@@Base>
   11714:	mov	r3, r0
   11718:	ldr	r4, [r3]
   1171c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11720:	ldr	r3, [r3, #8]
   11724:	mov	r0, r3
   11728:	bl	11ab0 <fila_front@@Base>
   1172c:	mov	r3, r0
   11730:	mov	r0, r3
   11734:	bl	11ebc <pilha_top@@Base>
   11738:	mov	r3, r0
   1173c:	vldr	s15, [r3, #4]
   11740:	vmov.f32	s0, s15
   11744:	mov	r0, r4
   11748:	bl	117bc <contentor_novo@@Base>
   1174c:	str	r0, [fp, #-16]
   11750:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11754:	ldr	r3, [r3, #8]
   11758:	mov	r0, r3
   1175c:	bl	11ab0 <fila_front@@Base>
   11760:	mov	r3, r0
   11764:	ldr	r3, [r3, #4]
   11768:	cmp	r3, #1
   1176c:	bgt	11784 <expedir_contentor@@Base+0xe8>
   11770:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11774:	ldr	r3, [r3, #8]
   11778:	mov	r0, r3
   1177c:	bl	11c50 <fila_pop@@Base>
   11780:	b	117a0 <expedir_contentor@@Base+0x104>
   11784:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11788:	ldr	r3, [r3, #8]
   1178c:	mov	r0, r3
   11790:	bl	11ab0 <fila_front@@Base>
   11794:	mov	r3, r0
   11798:	mov	r0, r3
   1179c:	bl	11fc8 <pilha_pop@@Base>
   117a0:	ldr	r3, [fp, #-16]
   117a4:	mov	r0, r3
   117a8:	sub	sp, fp, #8
   117ac:	ldr	r4, [sp]
   117b0:	ldr	fp, [sp, #4]
   117b4:	add	sp, sp, #8
   117b8:	pop	{pc}		; (ldr pc, [sp], #4)

000117bc <contentor_novo@@Base>:
   117bc:	str	fp, [sp, #-8]!
   117c0:	str	lr, [sp, #4]
   117c4:	add	fp, sp, #4
   117c8:	sub	sp, sp, #16
   117cc:	str	r0, [fp, #-16]
   117d0:	vstr	s0, [fp, #-20]	; 0xffffffec
   117d4:	mov	r0, #8
   117d8:	bl	10a40 <malloc@plt>
   117dc:	mov	r3, r0
   117e0:	str	r3, [fp, #-8]
   117e4:	ldr	r0, [fp, #-16]
   117e8:	bl	10a64 <strlen@plt>
   117ec:	mov	r3, r0
   117f0:	add	r3, r3, #1
   117f4:	mov	r0, r3
   117f8:	bl	10a40 <malloc@plt>
   117fc:	mov	r3, r0
   11800:	mov	r2, r3
   11804:	ldr	r3, [fp, #-8]
   11808:	str	r2, [r3]
   1180c:	ldr	r3, [fp, #-8]
   11810:	ldr	r3, [r3]
   11814:	ldr	r1, [fp, #-16]
   11818:	mov	r0, r3
   1181c:	bl	10a28 <strcpy@plt>
   11820:	ldr	r3, [fp, #-8]
   11824:	ldr	r2, [fp, #-20]	; 0xffffffec
   11828:	str	r2, [r3, #4]
   1182c:	ldr	r3, [fp, #-8]
   11830:	mov	r0, r3
   11834:	sub	sp, fp, #4
   11838:	ldr	fp, [sp]
   1183c:	add	sp, sp, #4
   11840:	pop	{pc}		; (ldr pc, [sp], #4)

00011844 <contentor_apaga@@Base>:
   11844:	str	fp, [sp, #-8]!
   11848:	str	lr, [sp, #4]
   1184c:	add	fp, sp, #4
   11850:	sub	sp, sp, #8
   11854:	str	r0, [fp, #-8]
   11858:	ldr	r3, [fp, #-8]
   1185c:	ldr	r3, [r3]
   11860:	mov	r0, r3
   11864:	bl	10a1c <free@plt>
   11868:	ldr	r0, [fp, #-8]
   1186c:	bl	10a1c <free@plt>
   11870:	nop	{0}
   11874:	sub	sp, fp, #4
   11878:	ldr	fp, [sp]
   1187c:	add	sp, sp, #4
   11880:	pop	{pc}		; (ldr pc, [sp], #4)

00011884 <contentor_imprime@@Base>:
   11884:	str	fp, [sp, #-8]!
   11888:	str	lr, [sp, #4]
   1188c:	add	fp, sp, #4
   11890:	sub	sp, sp, #8
   11894:	str	r0, [fp, #-8]
   11898:	ldr	r3, [fp, #-8]
   1189c:	cmp	r3, #0
   118a0:	bne	118b8 <contentor_imprime@@Base+0x34>
   118a4:	ldr	r3, [pc, #68]	; 118f0 <contentor_imprime@@Base+0x6c>
   118a8:	add	r3, pc, r3
   118ac:	mov	r0, r3
   118b0:	bl	10a34 <puts@plt>
   118b4:	b	118dc <contentor_imprime@@Base+0x58>
   118b8:	ldr	r3, [fp, #-8]
   118bc:	ldr	r1, [r3]
   118c0:	ldr	r3, [fp, #-8]
   118c4:	vldr	s15, [r3, #4]
   118c8:	vcvt.f64.f32	d7, s15
   118cc:	vmov	r2, r3, d7
   118d0:	ldr	r0, [pc, #28]	; 118f4 <contentor_imprime@@Base+0x70>
   118d4:	add	r0, pc, r0
   118d8:	bl	10a10 <printf@plt>
   118dc:	nop	{0}
   118e0:	sub	sp, fp, #4
   118e4:	ldr	fp, [sp]
   118e8:	add	sp, sp, #4
   118ec:	pop	{pc}		; (ldr pc, [sp], #4)
   118f0:	andeq	r0, r0, r0, ror #21
   118f4:	andeq	r0, r0, r4, asr #21

000118f8 <fila_novo_elemento@@Base>:
   118f8:	str	fp, [sp, #-8]!
   118fc:	str	lr, [sp, #4]
   11900:	add	fp, sp, #4
   11904:	sub	sp, sp, #16
   11908:	str	r0, [fp, #-16]
   1190c:	mov	r0, #8
   11910:	bl	10a40 <malloc@plt>
   11914:	mov	r3, r0
   11918:	str	r3, [fp, #-8]
   1191c:	ldr	r3, [fp, #-8]
   11920:	cmp	r3, #0
   11924:	bne	11930 <fila_novo_elemento@@Base+0x38>
   11928:	mov	r3, #0
   1192c:	b	1196c <fila_novo_elemento@@Base+0x74>
   11930:	ldr	r3, [fp, #-8]
   11934:	ldr	r2, [fp, #-16]
   11938:	str	r2, [r3]
   1193c:	ldr	r3, [fp, #-8]
   11940:	ldr	r3, [r3]
   11944:	cmp	r3, #0
   11948:	bne	1195c <fila_novo_elemento@@Base+0x64>
   1194c:	ldr	r0, [fp, #-8]
   11950:	bl	10a1c <free@plt>
   11954:	mov	r3, #0
   11958:	b	1196c <fila_novo_elemento@@Base+0x74>
   1195c:	ldr	r3, [fp, #-8]
   11960:	mov	r2, #0
   11964:	str	r2, [r3, #4]
   11968:	ldr	r3, [fp, #-8]
   1196c:	mov	r0, r3
   11970:	sub	sp, fp, #4
   11974:	ldr	fp, [sp]
   11978:	add	sp, sp, #4
   1197c:	pop	{pc}		; (ldr pc, [sp], #4)

00011980 <fila_nova@@Base>:
   11980:	str	fp, [sp, #-8]!
   11984:	str	lr, [sp, #4]
   11988:	add	fp, sp, #4
   1198c:	sub	sp, sp, #8
   11990:	mov	r0, #8
   11994:	bl	10a40 <malloc@plt>
   11998:	mov	r3, r0
   1199c:	str	r3, [fp, #-8]
   119a0:	ldr	r3, [fp, #-8]
   119a4:	cmp	r3, #0
   119a8:	bne	119b4 <fila_nova@@Base+0x34>
   119ac:	mov	r3, #0
   119b0:	b	119d0 <fila_nova@@Base+0x50>
   119b4:	ldr	r3, [fp, #-8]
   119b8:	mov	r2, #0
   119bc:	str	r2, [r3]
   119c0:	ldr	r3, [fp, #-8]
   119c4:	mov	r2, #0
   119c8:	str	r2, [r3, #4]
   119cc:	ldr	r3, [fp, #-8]
   119d0:	mov	r0, r3
   119d4:	sub	sp, fp, #4
   119d8:	ldr	fp, [sp]
   119dc:	add	sp, sp, #4
   119e0:	pop	{pc}		; (ldr pc, [sp], #4)

000119e4 <fila_apaga@@Base>:
   119e4:	str	fp, [sp, #-8]!
   119e8:	str	lr, [sp, #4]
   119ec:	add	fp, sp, #4
   119f0:	sub	sp, sp, #16
   119f4:	str	r0, [fp, #-16]
   119f8:	ldr	r3, [fp, #-16]
   119fc:	cmp	r3, #0
   11a00:	beq	11a60 <fila_apaga@@Base+0x7c>
   11a04:	b	11a40 <fila_apaga@@Base+0x5c>
   11a08:	ldr	r3, [fp, #-16]
   11a0c:	ldr	r3, [r3]
   11a10:	str	r3, [fp, #-8]
   11a14:	ldr	r3, [fp, #-16]
   11a18:	ldr	r3, [r3]
   11a1c:	ldr	r2, [r3, #4]
   11a20:	ldr	r3, [fp, #-16]
   11a24:	str	r2, [r3]
   11a28:	ldr	r3, [fp, #-8]
   11a2c:	ldr	r3, [r3]
   11a30:	mov	r0, r3
   11a34:	bl	11df0 <pilha_apaga@@Base>
   11a38:	ldr	r0, [fp, #-8]
   11a3c:	bl	10a1c <free@plt>
   11a40:	ldr	r3, [fp, #-16]
   11a44:	ldr	r3, [r3]
   11a48:	cmp	r3, #0
   11a4c:	bne	11a08 <fila_apaga@@Base+0x24>
   11a50:	ldr	r0, [fp, #-16]
   11a54:	bl	10a1c <free@plt>
   11a58:	nop	{0}
   11a5c:	b	11a64 <fila_apaga@@Base+0x80>
   11a60:	nop	{0}
   11a64:	sub	sp, fp, #4
   11a68:	ldr	fp, [sp]
   11a6c:	add	sp, sp, #4
   11a70:	pop	{pc}		; (ldr pc, [sp], #4)

00011a74 <fila_tamanho@@Base>:
   11a74:	push	{fp}		; (str fp, [sp, #-4]!)
   11a78:	add	fp, sp, #0
   11a7c:	sub	sp, sp, #12
   11a80:	str	r0, [fp, #-8]
   11a84:	ldr	r3, [fp, #-8]
   11a88:	cmp	r3, #0
   11a8c:	bne	11a98 <fila_tamanho@@Base+0x24>
   11a90:	mvn	r3, #0
   11a94:	b	11aa0 <fila_tamanho@@Base+0x2c>
   11a98:	ldr	r3, [fp, #-8]
   11a9c:	ldr	r3, [r3, #4]
   11aa0:	mov	r0, r3
   11aa4:	add	sp, fp, #0
   11aa8:	pop	{fp}		; (ldr fp, [sp], #4)
   11aac:	bx	lr

00011ab0 <fila_front@@Base>:
   11ab0:	push	{fp}		; (str fp, [sp, #-4]!)
   11ab4:	add	fp, sp, #0
   11ab8:	sub	sp, sp, #20
   11abc:	str	r0, [fp, #-16]
   11ac0:	ldr	r3, [fp, #-16]
   11ac4:	cmp	r3, #0
   11ac8:	beq	11adc <fila_front@@Base+0x2c>
   11acc:	ldr	r3, [fp, #-16]
   11ad0:	ldr	r3, [r3, #4]
   11ad4:	cmp	r3, #0
   11ad8:	bne	11ae4 <fila_front@@Base+0x34>
   11adc:	mov	r3, #0
   11ae0:	b	11af8 <fila_front@@Base+0x48>
   11ae4:	ldr	r3, [fp, #-16]
   11ae8:	ldr	r3, [r3]
   11aec:	str	r3, [fp, #-8]
   11af0:	ldr	r3, [fp, #-8]
   11af4:	ldr	r3, [r3]
   11af8:	mov	r0, r3
   11afc:	add	sp, fp, #0
   11b00:	pop	{fp}		; (ldr fp, [sp], #4)
   11b04:	bx	lr

00011b08 <fila_back@@Base>:
   11b08:	push	{fp}		; (str fp, [sp, #-4]!)
   11b0c:	add	fp, sp, #0
   11b10:	sub	sp, sp, #20
   11b14:	str	r0, [fp, #-16]
   11b18:	ldr	r3, [fp, #-16]
   11b1c:	cmp	r3, #0
   11b20:	beq	11b34 <fila_back@@Base+0x2c>
   11b24:	ldr	r3, [fp, #-16]
   11b28:	ldr	r3, [r3, #4]
   11b2c:	cmp	r3, #0
   11b30:	bne	11b3c <fila_back@@Base+0x34>
   11b34:	mov	r3, #0
   11b38:	b	11b70 <fila_back@@Base+0x68>
   11b3c:	ldr	r3, [fp, #-16]
   11b40:	ldr	r3, [r3]
   11b44:	str	r3, [fp, #-8]
   11b48:	b	11b58 <fila_back@@Base+0x50>
   11b4c:	ldr	r3, [fp, #-8]
   11b50:	ldr	r3, [r3, #4]
   11b54:	str	r3, [fp, #-8]
   11b58:	ldr	r3, [fp, #-8]
   11b5c:	ldr	r3, [r3, #4]
   11b60:	cmp	r3, #0
   11b64:	bne	11b4c <fila_back@@Base+0x44>
   11b68:	ldr	r3, [fp, #-8]
   11b6c:	ldr	r3, [r3]
   11b70:	mov	r0, r3
   11b74:	add	sp, fp, #0
   11b78:	pop	{fp}		; (ldr fp, [sp], #4)
   11b7c:	bx	lr

00011b80 <fila_push@@Base>:
   11b80:	str	fp, [sp, #-8]!
   11b84:	str	lr, [sp, #4]
   11b88:	add	fp, sp, #4
   11b8c:	sub	sp, sp, #24
   11b90:	str	r0, [fp, #-24]	; 0xffffffe8
   11b94:	str	r1, [fp, #-28]	; 0xffffffe4
   11b98:	mov	r3, #0
   11b9c:	str	r3, [fp, #-12]
   11ba0:	mov	r3, #0
   11ba4:	str	r3, [fp, #-16]
   11ba8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11bac:	cmp	r3, #0
   11bb0:	beq	11c34 <fila_push@@Base+0xb4>
   11bb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11bb8:	ldr	r3, [r3]
   11bbc:	str	r3, [fp, #-8]
   11bc0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11bc4:	bl	118f8 <fila_novo_elemento@@Base>
   11bc8:	str	r0, [fp, #-16]
   11bcc:	ldr	r3, [fp, #-16]
   11bd0:	cmp	r3, #0
   11bd4:	beq	11c3c <fila_push@@Base+0xbc>
   11bd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11bdc:	ldr	r3, [r3, #4]
   11be0:	add	r2, r3, #1
   11be4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11be8:	str	r2, [r3, #4]
   11bec:	ldr	r3, [fp, #-8]
   11bf0:	cmp	r3, #0
   11bf4:	bne	11c14 <fila_push@@Base+0x94>
   11bf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11bfc:	ldr	r2, [fp, #-16]
   11c00:	str	r2, [r3]
   11c04:	b	11c40 <fila_push@@Base+0xc0>
   11c08:	ldr	r3, [fp, #-8]
   11c0c:	ldr	r3, [r3, #4]
   11c10:	str	r3, [fp, #-8]
   11c14:	ldr	r3, [fp, #-8]
   11c18:	ldr	r3, [r3, #4]
   11c1c:	cmp	r3, #0
   11c20:	bne	11c08 <fila_push@@Base+0x88>
   11c24:	ldr	r3, [fp, #-8]
   11c28:	ldr	r2, [fp, #-16]
   11c2c:	str	r2, [r3, #4]
   11c30:	b	11c40 <fila_push@@Base+0xc0>
   11c34:	nop	{0}
   11c38:	b	11c40 <fila_push@@Base+0xc0>
   11c3c:	nop	{0}
   11c40:	sub	sp, fp, #4
   11c44:	ldr	fp, [sp]
   11c48:	add	sp, sp, #4
   11c4c:	pop	{pc}		; (ldr pc, [sp], #4)

00011c50 <fila_pop@@Base>:
   11c50:	str	fp, [sp, #-8]!
   11c54:	str	lr, [sp, #4]
   11c58:	add	fp, sp, #4
   11c5c:	sub	sp, sp, #16
   11c60:	str	r0, [fp, #-16]
   11c64:	mov	r3, #0
   11c68:	str	r3, [fp, #-8]
   11c6c:	ldr	r3, [fp, #-16]
   11c70:	cmp	r3, #0
   11c74:	beq	11cd4 <fila_pop@@Base+0x84>
   11c78:	ldr	r3, [fp, #-16]
   11c7c:	ldr	r3, [r3, #4]
   11c80:	cmp	r3, #0
   11c84:	beq	11cd4 <fila_pop@@Base+0x84>
   11c88:	ldr	r3, [fp, #-16]
   11c8c:	ldr	r3, [r3]
   11c90:	str	r3, [fp, #-12]
   11c94:	ldr	r3, [fp, #-16]
   11c98:	ldr	r3, [r3, #4]
   11c9c:	sub	r2, r3, #1
   11ca0:	ldr	r3, [fp, #-16]
   11ca4:	str	r2, [r3, #4]
   11ca8:	ldr	r3, [fp, #-12]
   11cac:	ldr	r2, [r3, #4]
   11cb0:	ldr	r3, [fp, #-16]
   11cb4:	str	r2, [r3]
   11cb8:	ldr	r3, [fp, #-12]
   11cbc:	ldr	r3, [r3]
   11cc0:	mov	r0, r3
   11cc4:	bl	11df0 <pilha_apaga@@Base>
   11cc8:	ldr	r0, [fp, #-12]
   11ccc:	bl	10a1c <free@plt>
   11cd0:	b	11cd8 <fila_pop@@Base+0x88>
   11cd4:	nop	{0}
   11cd8:	sub	sp, fp, #4
   11cdc:	ldr	fp, [sp]
   11ce0:	add	sp, sp, #4
   11ce4:	pop	{pc}		; (ldr pc, [sp], #4)

00011ce8 <pilha_novo_elemento@@Base>:
   11ce8:	str	fp, [sp, #-8]!
   11cec:	str	lr, [sp, #4]
   11cf0:	add	fp, sp, #4
   11cf4:	sub	sp, sp, #16
   11cf8:	str	r0, [fp, #-16]
   11cfc:	mov	r0, #8
   11d00:	bl	10a40 <malloc@plt>
   11d04:	mov	r3, r0
   11d08:	str	r3, [fp, #-8]
   11d0c:	ldr	r3, [fp, #-8]
   11d10:	cmp	r3, #0
   11d14:	bne	11d20 <pilha_novo_elemento@@Base+0x38>
   11d18:	mov	r3, #0
   11d1c:	b	11d78 <pilha_novo_elemento@@Base+0x90>
   11d20:	ldr	r3, [fp, #-16]
   11d24:	ldr	r2, [r3]
   11d28:	ldr	r3, [fp, #-16]
   11d2c:	vldr	s15, [r3, #4]
   11d30:	vmov.f32	s0, s15
   11d34:	mov	r0, r2
   11d38:	bl	117bc <contentor_novo@@Base>
   11d3c:	mov	r2, r0
   11d40:	ldr	r3, [fp, #-8]
   11d44:	str	r2, [r3]
   11d48:	ldr	r3, [fp, #-8]
   11d4c:	ldr	r3, [r3]
   11d50:	cmp	r3, #0
   11d54:	bne	11d68 <pilha_novo_elemento@@Base+0x80>
   11d58:	ldr	r0, [fp, #-8]
   11d5c:	bl	10a1c <free@plt>
   11d60:	mov	r3, #0
   11d64:	b	11d78 <pilha_novo_elemento@@Base+0x90>
   11d68:	ldr	r3, [fp, #-8]
   11d6c:	mov	r2, #0
   11d70:	str	r2, [r3, #4]
   11d74:	ldr	r3, [fp, #-8]
   11d78:	mov	r0, r3
   11d7c:	sub	sp, fp, #4
   11d80:	ldr	fp, [sp]
   11d84:	add	sp, sp, #4
   11d88:	pop	{pc}		; (ldr pc, [sp], #4)

00011d8c <pilha_nova@@Base>:
   11d8c:	str	fp, [sp, #-8]!
   11d90:	str	lr, [sp, #4]
   11d94:	add	fp, sp, #4
   11d98:	sub	sp, sp, #8
   11d9c:	mov	r0, #8
   11da0:	bl	10a40 <malloc@plt>
   11da4:	mov	r3, r0
   11da8:	str	r3, [fp, #-8]
   11dac:	ldr	r3, [fp, #-8]
   11db0:	cmp	r3, #0
   11db4:	bne	11dc0 <pilha_nova@@Base+0x34>
   11db8:	mov	r3, #0
   11dbc:	b	11ddc <pilha_nova@@Base+0x50>
   11dc0:	ldr	r3, [fp, #-8]
   11dc4:	mov	r2, #0
   11dc8:	str	r2, [r3]
   11dcc:	ldr	r3, [fp, #-8]
   11dd0:	mov	r2, #0
   11dd4:	str	r2, [r3, #4]
   11dd8:	ldr	r3, [fp, #-8]
   11ddc:	mov	r0, r3
   11de0:	sub	sp, fp, #4
   11de4:	ldr	fp, [sp]
   11de8:	add	sp, sp, #4
   11dec:	pop	{pc}		; (ldr pc, [sp], #4)

00011df0 <pilha_apaga@@Base>:
   11df0:	str	fp, [sp, #-8]!
   11df4:	str	lr, [sp, #4]
   11df8:	add	fp, sp, #4
   11dfc:	sub	sp, sp, #16
   11e00:	str	r0, [fp, #-16]
   11e04:	ldr	r3, [fp, #-16]
   11e08:	cmp	r3, #0
   11e0c:	beq	11e6c <pilha_apaga@@Base+0x7c>
   11e10:	b	11e4c <pilha_apaga@@Base+0x5c>
   11e14:	ldr	r3, [fp, #-16]
   11e18:	ldr	r3, [r3]
   11e1c:	str	r3, [fp, #-8]
   11e20:	ldr	r3, [fp, #-16]
   11e24:	ldr	r3, [r3]
   11e28:	ldr	r2, [r3, #4]
   11e2c:	ldr	r3, [fp, #-16]
   11e30:	str	r2, [r3]
   11e34:	ldr	r3, [fp, #-8]
   11e38:	ldr	r3, [r3]
   11e3c:	mov	r0, r3
   11e40:	bl	11844 <contentor_apaga@@Base>
   11e44:	ldr	r0, [fp, #-8]
   11e48:	bl	10a1c <free@plt>
   11e4c:	ldr	r3, [fp, #-16]
   11e50:	ldr	r3, [r3]
   11e54:	cmp	r3, #0
   11e58:	bne	11e14 <pilha_apaga@@Base+0x24>
   11e5c:	ldr	r0, [fp, #-16]
   11e60:	bl	10a1c <free@plt>
   11e64:	nop	{0}
   11e68:	b	11e70 <pilha_apaga@@Base+0x80>
   11e6c:	nop	{0}
   11e70:	sub	sp, fp, #4
   11e74:	ldr	fp, [sp]
   11e78:	add	sp, sp, #4
   11e7c:	pop	{pc}		; (ldr pc, [sp], #4)

00011e80 <pilha_tamanho@@Base>:
   11e80:	push	{fp}		; (str fp, [sp, #-4]!)
   11e84:	add	fp, sp, #0
   11e88:	sub	sp, sp, #12
   11e8c:	str	r0, [fp, #-8]
   11e90:	ldr	r3, [fp, #-8]
   11e94:	cmp	r3, #0
   11e98:	bne	11ea4 <pilha_tamanho@@Base+0x24>
   11e9c:	mvn	r3, #0
   11ea0:	b	11eac <pilha_tamanho@@Base+0x2c>
   11ea4:	ldr	r3, [fp, #-8]
   11ea8:	ldr	r3, [r3, #4]
   11eac:	mov	r0, r3
   11eb0:	add	sp, fp, #0
   11eb4:	pop	{fp}		; (ldr fp, [sp], #4)
   11eb8:	bx	lr

00011ebc <pilha_top@@Base>:
   11ebc:	push	{fp}		; (str fp, [sp, #-4]!)
   11ec0:	add	fp, sp, #0
   11ec4:	sub	sp, sp, #20
   11ec8:	str	r0, [fp, #-16]
   11ecc:	ldr	r3, [fp, #-16]
   11ed0:	cmp	r3, #0
   11ed4:	beq	11ee8 <pilha_top@@Base+0x2c>
   11ed8:	ldr	r3, [fp, #-16]
   11edc:	ldr	r3, [r3, #4]
   11ee0:	cmp	r3, #0
   11ee4:	bne	11ef0 <pilha_top@@Base+0x34>
   11ee8:	mov	r3, #0
   11eec:	b	11f04 <pilha_top@@Base+0x48>
   11ef0:	ldr	r3, [fp, #-16]
   11ef4:	ldr	r3, [r3]
   11ef8:	str	r3, [fp, #-8]
   11efc:	ldr	r3, [fp, #-8]
   11f00:	ldr	r3, [r3]
   11f04:	mov	r0, r3
   11f08:	add	sp, fp, #0
   11f0c:	pop	{fp}		; (ldr fp, [sp], #4)
   11f10:	bx	lr

00011f14 <pilha_push@@Base>:
   11f14:	str	fp, [sp, #-8]!
   11f18:	str	lr, [sp, #4]
   11f1c:	add	fp, sp, #4
   11f20:	sub	sp, sp, #16
   11f24:	str	r0, [fp, #-16]
   11f28:	str	r1, [fp, #-20]	; 0xffffffec
   11f2c:	mov	r3, #0
   11f30:	str	r3, [fp, #-8]
   11f34:	ldr	r3, [fp, #-16]
   11f38:	cmp	r3, #0
   11f3c:	beq	11fac <pilha_push@@Base+0x98>
   11f40:	ldr	r0, [fp, #-20]	; 0xffffffec
   11f44:	bl	11ce8 <pilha_novo_elemento@@Base>
   11f48:	str	r0, [fp, #-8]
   11f4c:	ldr	r3, [fp, #-8]
   11f50:	cmp	r3, #0
   11f54:	beq	11fb4 <pilha_push@@Base+0xa0>
   11f58:	ldr	r3, [fp, #-16]
   11f5c:	ldr	r3, [r3, #4]
   11f60:	add	r2, r3, #1
   11f64:	ldr	r3, [fp, #-16]
   11f68:	str	r2, [r3, #4]
   11f6c:	ldr	r3, [fp, #-16]
   11f70:	ldr	r3, [r3]
   11f74:	cmp	r3, #0
   11f78:	bne	11f8c <pilha_push@@Base+0x78>
   11f7c:	ldr	r3, [fp, #-16]
   11f80:	ldr	r2, [fp, #-8]
   11f84:	str	r2, [r3]
   11f88:	b	11fb8 <pilha_push@@Base+0xa4>
   11f8c:	ldr	r3, [fp, #-16]
   11f90:	ldr	r2, [r3]
   11f94:	ldr	r3, [fp, #-8]
   11f98:	str	r2, [r3, #4]
   11f9c:	ldr	r3, [fp, #-16]
   11fa0:	ldr	r2, [fp, #-8]
   11fa4:	str	r2, [r3]
   11fa8:	b	11fb8 <pilha_push@@Base+0xa4>
   11fac:	nop	{0}
   11fb0:	b	11fb8 <pilha_push@@Base+0xa4>
   11fb4:	nop	{0}
   11fb8:	sub	sp, fp, #4
   11fbc:	ldr	fp, [sp]
   11fc0:	add	sp, sp, #4
   11fc4:	pop	{pc}		; (ldr pc, [sp], #4)

00011fc8 <pilha_pop@@Base>:
   11fc8:	str	fp, [sp, #-8]!
   11fcc:	str	lr, [sp, #4]
   11fd0:	add	fp, sp, #4
   11fd4:	sub	sp, sp, #16
   11fd8:	str	r0, [fp, #-16]
   11fdc:	ldr	r3, [fp, #-16]
   11fe0:	cmp	r3, #0
   11fe4:	beq	12044 <pilha_pop@@Base+0x7c>
   11fe8:	ldr	r3, [fp, #-16]
   11fec:	ldr	r3, [r3, #4]
   11ff0:	cmp	r3, #0
   11ff4:	beq	12044 <pilha_pop@@Base+0x7c>
   11ff8:	ldr	r3, [fp, #-16]
   11ffc:	ldr	r3, [r3]
   12000:	str	r3, [fp, #-8]
   12004:	ldr	r3, [fp, #-8]
   12008:	ldr	r2, [r3, #4]
   1200c:	ldr	r3, [fp, #-16]
   12010:	str	r2, [r3]
   12014:	ldr	r3, [fp, #-16]
   12018:	ldr	r3, [r3, #4]
   1201c:	sub	r2, r3, #1
   12020:	ldr	r3, [fp, #-16]
   12024:	str	r2, [r3, #4]
   12028:	ldr	r3, [fp, #-8]
   1202c:	ldr	r3, [r3]
   12030:	mov	r0, r3
   12034:	bl	11844 <contentor_apaga@@Base>
   12038:	ldr	r0, [fp, #-8]
   1203c:	bl	10a1c <free@plt>
   12040:	b	12048 <pilha_pop@@Base+0x80>
   12044:	nop	{0}
   12048:	sub	sp, fp, #4
   1204c:	ldr	fp, [sp]
   12050:	add	sp, sp, #4
   12054:	pop	{pc}		; (ldr pc, [sp], #4)

00012058 <__libc_csu_init@@Base>:
   12058:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1205c:	mov	r7, r0
   12060:	ldr	r6, [pc, #72]	; 120b0 <__libc_csu_init@@Base+0x58>
   12064:	ldr	r5, [pc, #72]	; 120b4 <__libc_csu_init@@Base+0x5c>
   12068:	add	r6, pc, r6
   1206c:	add	r5, pc, r5
   12070:	sub	r6, r6, r5
   12074:	mov	r8, r1
   12078:	mov	r9, r2
   1207c:	bl	109e4 <calloc@plt-0x20>
   12080:	asrs	r6, r6, #2
   12084:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12088:	mov	r4, #0
   1208c:	add	r4, r4, #1
   12090:	ldr	r3, [r5], #4
   12094:	mov	r2, r9
   12098:	mov	r1, r8
   1209c:	mov	r0, r7
   120a0:	blx	r3
   120a4:	cmp	r6, r4
   120a8:	bne	1208c <__libc_csu_init@@Base+0x34>
   120ac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   120b0:	andeq	r0, r1, r4, lsr #29
   120b4:	muleq	r1, ip, lr

000120b8 <__libc_csu_fini@@Base>:
   120b8:	bx	lr

Disassembly of section .fini:

000120bc <.fini>:
   120bc:	push	{r3, lr}
   120c0:	pop	{r3, pc}
