
../repos/dvidelabs-flatcc-3b39ef7/samples/reflection/bfbs2json:     file format elf32-littlearm


Disassembly of section .init:

000108e0 <.init>:
   108e0:	push	{r3, lr}
   108e4:	bl	109fc <_start@@Base+0x3c>
   108e8:	pop	{r3, pc}

Disassembly of section .plt:

000108ec <printf@plt-0x14>:
   108ec:	push	{lr}		; (str lr, [sp, #-4]!)
   108f0:	ldr	lr, [pc, #4]	; 108fc <printf@plt-0x4>
   108f4:	add	lr, pc, lr
   108f8:	ldr	pc, [lr, #8]!
   108fc:	andeq	r5, r1, r4, lsl #14

00010900 <printf@plt>:
   10900:	add	ip, pc, #0, 12
   10904:	add	ip, ip, #86016	; 0x15000
   10908:	ldr	pc, [ip, #1796]!	; 0x704

0001090c <fopen@plt>:
   1090c:	add	ip, pc, #0, 12
   10910:	add	ip, ip, #86016	; 0x15000
   10914:	ldr	pc, [ip, #1788]!	; 0x6fc

00010918 <free@plt>:
   10918:	add	ip, pc, #0, 12
   1091c:	add	ip, ip, #86016	; 0x15000
   10920:	ldr	pc, [ip, #1780]!	; 0x6f4

00010924 <ftell@plt>:
   10924:	add	ip, pc, #0, 12
   10928:	add	ip, ip, #86016	; 0x15000
   1092c:	ldr	pc, [ip, #1772]!	; 0x6ec

00010930 <rewind@plt>:
   10930:	add	ip, pc, #0, 12
   10934:	add	ip, ip, #86016	; 0x15000
   10938:	ldr	pc, [ip, #1764]!	; 0x6e4

0001093c <fread@plt>:
   1093c:	add	ip, pc, #0, 12
   10940:	add	ip, ip, #86016	; 0x15000
   10944:	ldr	pc, [ip, #1756]!	; 0x6dc

00010948 <malloc@plt>:
   10948:	add	ip, pc, #0, 12
   1094c:	add	ip, ip, #86016	; 0x15000
   10950:	ldr	pc, [ip, #1748]!	; 0x6d4

00010954 <__libc_start_main@plt>:
   10954:	add	ip, pc, #0, 12
   10958:	add	ip, ip, #86016	; 0x15000
   1095c:	ldr	pc, [ip, #1740]!	; 0x6cc

00010960 <__gmon_start__@plt>:
   10960:	add	ip, pc, #0, 12
   10964:	add	ip, ip, #86016	; 0x15000
   10968:	ldr	pc, [ip, #1732]!	; 0x6c4

0001096c <exit@plt>:
   1096c:	add	ip, pc, #0, 12
   10970:	add	ip, ip, #86016	; 0x15000
   10974:	ldr	pc, [ip, #1724]!	; 0x6bc

00010978 <fprintf@plt>:
   10978:	add	ip, pc, #0, 12
   1097c:	add	ip, ip, #86016	; 0x15000
   10980:	ldr	pc, [ip, #1716]!	; 0x6b4

00010984 <strncpy@plt>:
   10984:	add	ip, pc, #0, 12
   10988:	add	ip, ip, #86016	; 0x15000
   1098c:	ldr	pc, [ip, #1708]!	; 0x6ac

00010990 <fclose@plt>:
   10990:	add	ip, pc, #0, 12
   10994:	add	ip, ip, #86016	; 0x15000
   10998:	ldr	pc, [ip, #1700]!	; 0x6a4

0001099c <fseek@plt>:
   1099c:	add	ip, pc, #0, 12
   109a0:	add	ip, ip, #86016	; 0x15000
   109a4:	ldr	pc, [ip, #1692]!	; 0x69c

000109a8 <abort@plt>:
   109a8:	add	ip, pc, #0, 12
   109ac:	add	ip, ip, #86016	; 0x15000
   109b0:	ldr	pc, [ip, #1684]!	; 0x694

000109b4 <__assert_fail@plt>:
   109b4:	add	ip, pc, #0, 12
   109b8:	add	ip, ip, #86016	; 0x15000
   109bc:	ldr	pc, [ip, #1676]!	; 0x68c

Disassembly of section .text:

000109c0 <_start@@Base>:
   109c0:	mov	fp, #0
   109c4:	mov	lr, #0
   109c8:	pop	{r1}		; (ldr r1, [sp], #4)
   109cc:	mov	r2, sp
   109d0:	push	{r2}		; (str r2, [sp, #-4]!)
   109d4:	push	{r0}		; (str r0, [sp, #-4]!)
   109d8:	ldr	ip, [pc, #16]	; 109f0 <_start@@Base+0x30>
   109dc:	push	{ip}		; (str ip, [sp, #-4]!)
   109e0:	ldr	r0, [pc, #12]	; 109f4 <_start@@Base+0x34>
   109e4:	ldr	r3, [pc, #12]	; 109f8 <_start@@Base+0x38>
   109e8:	bl	10954 <__libc_start_main@plt>
   109ec:	bl	109a8 <abort@plt>
   109f0:	andeq	r4, r1, r8, lsl #19
   109f4:	strdeq	r4, [r1], -ip
   109f8:	andeq	r4, r1, r8, lsr #18
   109fc:	ldr	r3, [pc, #20]	; 10a18 <_start@@Base+0x58>
   10a00:	ldr	r2, [pc, #20]	; 10a1c <_start@@Base+0x5c>
   10a04:	add	r3, pc, r3
   10a08:	ldr	r2, [r3, r2]
   10a0c:	cmp	r2, #0
   10a10:	bxeq	lr
   10a14:	b	10960 <__gmon_start__@plt>
   10a18:	strdeq	r5, [r1], -r4
   10a1c:	andeq	r0, r0, r0, asr r0
   10a20:	ldr	r0, [pc, #24]	; 10a40 <_start@@Base+0x80>
   10a24:	ldr	r3, [pc, #24]	; 10a44 <_start@@Base+0x84>
   10a28:	cmp	r3, r0
   10a2c:	bxeq	lr
   10a30:	ldr	r3, [pc, #16]	; 10a48 <_start@@Base+0x88>
   10a34:	cmp	r3, #0
   10a38:	bxeq	lr
   10a3c:	bx	r3
   10a40:	andeq	r6, r2, ip, asr r0
   10a44:	andeq	r6, r2, ip, asr r0
   10a48:	andeq	r0, r0, r0
   10a4c:	ldr	r0, [pc, #36]	; 10a78 <_start@@Base+0xb8>
   10a50:	ldr	r1, [pc, #36]	; 10a7c <_start@@Base+0xbc>
   10a54:	sub	r1, r1, r0
   10a58:	asr	r1, r1, #2
   10a5c:	add	r1, r1, r1, lsr #31
   10a60:	asrs	r1, r1, #1
   10a64:	bxeq	lr
   10a68:	ldr	r3, [pc, #16]	; 10a80 <_start@@Base+0xc0>
   10a6c:	cmp	r3, #0
   10a70:	bxeq	lr
   10a74:	bx	r3
   10a78:	andeq	r6, r2, ip, asr r0
   10a7c:	andeq	r6, r2, ip, asr r0
   10a80:	andeq	r0, r0, r0
   10a84:	push	{r4, lr}
   10a88:	ldr	r4, [pc, #24]	; 10aa8 <_start@@Base+0xe8>
   10a8c:	ldrb	r3, [r4]
   10a90:	cmp	r3, #0
   10a94:	popne	{r4, pc}
   10a98:	bl	10a20 <_start@@Base+0x60>
   10a9c:	mov	r3, #1
   10aa0:	strb	r3, [r4]
   10aa4:	pop	{r4, pc}
   10aa8:	andeq	r6, r2, ip, asr r0
   10aac:	b	10a4c <_start@@Base+0x8c>

00010ab0 <print_type@@Base>:
   10ab0:	push	{fp, lr}
   10ab4:	mov	fp, sp
   10ab8:	sub	sp, sp, #24
   10abc:	ldr	r1, [pc, #304]	; 10bf4 <print_type@@Base+0x144>
   10ac0:	add	r1, pc, r1
   10ac4:	str	r0, [fp, #-4]
   10ac8:	movw	r0, #1
   10acc:	str	r0, [fp, #-8]
   10ad0:	mov	r0, r1
   10ad4:	bl	10900 <printf@plt>
   10ad8:	ldr	r1, [fp, #-4]
   10adc:	str	r0, [sp, #12]
   10ae0:	mov	r0, r1
   10ae4:	bl	10c14 <print_type@@Base+0x164>
   10ae8:	cmp	r0, #0
   10aec:	beq	10b38 <print_type@@Base+0x88>
   10af0:	ldr	r0, [fp, #-8]
   10af4:	cmp	r0, #0
   10af8:	bne	10b08 <print_type@@Base+0x58>
   10afc:	ldr	r0, [pc, #244]	; 10bf8 <print_type@@Base+0x148>
   10b00:	add	r0, pc, r0
   10b04:	bl	10900 <printf@plt>
   10b08:	ldr	r0, [fp, #-4]
   10b0c:	bl	10ebc <print_type@@Base+0x40c>
   10b10:	sxtb	r0, r0
   10b14:	bl	10ce0 <print_type@@Base+0x230>
   10b18:	ldr	r1, [pc, #220]	; 10bfc <print_type@@Base+0x14c>
   10b1c:	add	r1, pc, r1
   10b20:	str	r0, [sp, #8]
   10b24:	mov	r0, r1
   10b28:	ldr	r1, [sp, #8]
   10b2c:	bl	10900 <printf@plt>
   10b30:	movw	r1, #0
   10b34:	str	r1, [fp, #-8]
   10b38:	ldr	r0, [fp, #-4]
   10b3c:	bl	10fb0 <print_type@@Base+0x500>
   10b40:	cmp	r0, #0
   10b44:	beq	10b90 <print_type@@Base+0xe0>
   10b48:	ldr	r0, [fp, #-8]
   10b4c:	cmp	r0, #0
   10b50:	bne	10b60 <print_type@@Base+0xb0>
   10b54:	ldr	r0, [pc, #164]	; 10c00 <print_type@@Base+0x150>
   10b58:	add	r0, pc, r0
   10b5c:	bl	10900 <printf@plt>
   10b60:	ldr	r0, [fp, #-4]
   10b64:	bl	10ebc <print_type@@Base+0x40c>
   10b68:	sxtb	r0, r0
   10b6c:	bl	10ce0 <print_type@@Base+0x230>
   10b70:	ldr	r1, [pc, #140]	; 10c04 <print_type@@Base+0x154>
   10b74:	add	r1, pc, r1
   10b78:	str	r0, [sp, #4]
   10b7c:	mov	r0, r1
   10b80:	ldr	r1, [sp, #4]
   10b84:	bl	10900 <printf@plt>
   10b88:	movw	r1, #0
   10b8c:	str	r1, [fp, #-8]
   10b90:	ldr	r0, [fp, #-4]
   10b94:	bl	1107c <print_type@@Base+0x5cc>
   10b98:	cmp	r0, #0
   10b9c:	beq	10be0 <print_type@@Base+0x130>
   10ba0:	ldr	r0, [fp, #-8]
   10ba4:	cmp	r0, #0
   10ba8:	bne	10bb8 <print_type@@Base+0x108>
   10bac:	ldr	r0, [pc, #84]	; 10c08 <print_type@@Base+0x158>
   10bb0:	add	r0, pc, r0
   10bb4:	bl	10900 <printf@plt>
   10bb8:	ldr	r0, [fp, #-4]
   10bbc:	bl	11148 <print_type@@Base+0x698>
   10bc0:	ldr	r1, [pc, #68]	; 10c0c <print_type@@Base+0x15c>
   10bc4:	add	r1, pc, r1
   10bc8:	str	r0, [sp]
   10bcc:	mov	r0, r1
   10bd0:	ldr	r1, [sp]
   10bd4:	bl	10900 <printf@plt>
   10bd8:	movw	r1, #0
   10bdc:	str	r1, [fp, #-8]
   10be0:	ldr	r0, [pc, #40]	; 10c10 <print_type@@Base+0x160>
   10be4:	add	r0, pc, r0
   10be8:	bl	10900 <printf@plt>
   10bec:	mov	sp, fp
   10bf0:	pop	{fp, pc}
   10bf4:	ldrdeq	r3, [r0], -r0
   10bf8:	muleq	r0, r2, lr
   10bfc:	andeq	r3, r0, r8, ror lr
   10c00:	andeq	r3, r0, sl, lsr lr
   10c04:	andeq	r3, r0, r1, lsr lr
   10c08:	andeq	r3, r0, r2, ror #27
   10c0c:	strdeq	r3, [r0], -r0
   10c10:	ldrdeq	r3, [r0], -fp
   10c14:	push	{fp, lr}
   10c18:	mov	fp, sp
   10c1c:	sub	sp, sp, #16
   10c20:	str	r0, [fp, #-4]
   10c24:	movw	r0, #0
   10c28:	strh	r0, [fp, #-6]
   10c2c:	ldr	r0, [fp, #-4]
   10c30:	movw	r1, #0
   10c34:	cmp	r0, r1
   10c38:	beq	10c44 <print_type@@Base+0x194>
   10c3c:	b	10c40 <print_type@@Base+0x190>
   10c40:	b	10c64 <print_type@@Base+0x1b4>
   10c44:	ldr	r0, [pc, #136]	; 10cd4 <print_type@@Base+0x224>
   10c48:	add	r0, pc, r0
   10c4c:	ldr	r1, [pc, #132]	; 10cd8 <print_type@@Base+0x228>
   10c50:	add	r1, pc, r1
   10c54:	ldr	r2, [pc, #128]	; 10cdc <print_type@@Base+0x22c>
   10c58:	add	r3, pc, r2
   10c5c:	movw	r2, #147	; 0x93
   10c60:	bl	109b4 <__assert_fail@plt>
   10c64:	mov	r0, #0
   10c68:	strh	r0, [sp, #8]
   10c6c:	ldr	r0, [fp, #-4]
   10c70:	str	r0, [sp]
   10c74:	bl	145b8 <main@@Base+0xbc>
   10c78:	ldr	r1, [sp]
   10c7c:	sub	r0, r1, r0
   10c80:	str	r0, [sp, #4]
   10c84:	ldr	r0, [sp, #4]
   10c88:	bl	145dc <main@@Base+0xe0>
   10c8c:	ldrh	r1, [sp, #8]
   10c90:	add	r1, r1, #3
   10c94:	lsl	r1, r1, #1
   10c98:	cmp	r0, r1
   10c9c:	bcc	10cb8 <print_type@@Base+0x208>
   10ca0:	ldr	r0, [sp, #4]
   10ca4:	ldrh	r1, [sp, #8]
   10ca8:	add	r0, r0, r1, lsl #1
   10cac:	add	r0, r0, #4
   10cb0:	bl	145dc <main@@Base+0xe0>
   10cb4:	strh	r0, [fp, #-6]
   10cb8:	ldrh	r0, [fp, #-6]
   10cbc:	cmp	r0, #0
   10cc0:	movw	r0, #0
   10cc4:	movne	r0, #1
   10cc8:	and	r0, r0, #1
   10ccc:	mov	sp, fp
   10cd0:	pop	{fp, pc}
   10cd4:	andeq	r4, r0, lr, lsl #1
   10cd8:	andeq	r4, r0, ip, lsr #1
   10cdc:	andeq	r4, r0, r9, lsl r1
   10ce0:	sub	sp, sp, #12
   10ce4:	strb	r0, [sp, #7]
   10ce8:	ldrsb	r0, [sp, #7]
   10cec:	cmp	r0, #16
   10cf0:	str	r0, [sp]
   10cf4:	bhi	10e5c <print_type@@Base+0x3ac>
   10cf8:	add	r0, pc, #8
   10cfc:	ldr	r1, [sp]
   10d00:	ldr	r2, [r0, r1, lsl #2]
   10d04:	add	pc, r0, r2
   10d08:	andeq	r0, r0, r4, asr #32
   10d0c:	andeq	r0, r0, r4, asr r0
   10d10:	andeq	r0, r0, r4, rrx
   10d14:	andeq	r0, r0, r4, ror r0
   10d18:	andeq	r0, r0, r4, lsl #1
   10d1c:	muleq	r0, r4, r0
   10d20:	andeq	r0, r0, r4, lsr #1
   10d24:	strheq	r0, [r0], -r4
   10d28:	andeq	r0, r0, r4, asr #1
   10d2c:	ldrdeq	r0, [r0], -r4
   10d30:	andeq	r0, r0, r4, ror #1
   10d34:	strdeq	r0, [r0], -r4
   10d38:	andeq	r0, r0, r4, lsl #2
   10d3c:	andeq	r0, r0, r4, lsl r1
   10d40:	andeq	r0, r0, r4, lsr #2
   10d44:	andeq	r0, r0, r4, lsr r1
   10d48:	andeq	r0, r0, r4, asr #2
   10d4c:	ldr	r0, [pc, #352]	; 10eb4 <print_type@@Base+0x404>
   10d50:	add	r0, pc, r0
   10d54:	str	r0, [sp, #8]
   10d58:	b	10e68 <print_type@@Base+0x3b8>
   10d5c:	ldr	r0, [pc, #332]	; 10eb0 <print_type@@Base+0x400>
   10d60:	add	r0, pc, r0
   10d64:	str	r0, [sp, #8]
   10d68:	b	10e68 <print_type@@Base+0x3b8>
   10d6c:	ldr	r0, [pc, #312]	; 10eac <print_type@@Base+0x3fc>
   10d70:	add	r0, pc, r0
   10d74:	str	r0, [sp, #8]
   10d78:	b	10e68 <print_type@@Base+0x3b8>
   10d7c:	ldr	r0, [pc, #292]	; 10ea8 <print_type@@Base+0x3f8>
   10d80:	add	r0, pc, r0
   10d84:	str	r0, [sp, #8]
   10d88:	b	10e68 <print_type@@Base+0x3b8>
   10d8c:	ldr	r0, [pc, #272]	; 10ea4 <print_type@@Base+0x3f4>
   10d90:	add	r0, pc, r0
   10d94:	str	r0, [sp, #8]
   10d98:	b	10e68 <print_type@@Base+0x3b8>
   10d9c:	ldr	r0, [pc, #252]	; 10ea0 <print_type@@Base+0x3f0>
   10da0:	add	r0, pc, r0
   10da4:	str	r0, [sp, #8]
   10da8:	b	10e68 <print_type@@Base+0x3b8>
   10dac:	ldr	r0, [pc, #232]	; 10e9c <print_type@@Base+0x3ec>
   10db0:	add	r0, pc, r0
   10db4:	str	r0, [sp, #8]
   10db8:	b	10e68 <print_type@@Base+0x3b8>
   10dbc:	ldr	r0, [pc, #212]	; 10e98 <print_type@@Base+0x3e8>
   10dc0:	add	r0, pc, r0
   10dc4:	str	r0, [sp, #8]
   10dc8:	b	10e68 <print_type@@Base+0x3b8>
   10dcc:	ldr	r0, [pc, #192]	; 10e94 <print_type@@Base+0x3e4>
   10dd0:	add	r0, pc, r0
   10dd4:	str	r0, [sp, #8]
   10dd8:	b	10e68 <print_type@@Base+0x3b8>
   10ddc:	ldr	r0, [pc, #172]	; 10e90 <print_type@@Base+0x3e0>
   10de0:	add	r0, pc, r0
   10de4:	str	r0, [sp, #8]
   10de8:	b	10e68 <print_type@@Base+0x3b8>
   10dec:	ldr	r0, [pc, #152]	; 10e8c <print_type@@Base+0x3dc>
   10df0:	add	r0, pc, r0
   10df4:	str	r0, [sp, #8]
   10df8:	b	10e68 <print_type@@Base+0x3b8>
   10dfc:	ldr	r0, [pc, #132]	; 10e88 <print_type@@Base+0x3d8>
   10e00:	add	r0, pc, r0
   10e04:	str	r0, [sp, #8]
   10e08:	b	10e68 <print_type@@Base+0x3b8>
   10e0c:	ldr	r0, [pc, #112]	; 10e84 <print_type@@Base+0x3d4>
   10e10:	add	r0, pc, r0
   10e14:	str	r0, [sp, #8]
   10e18:	b	10e68 <print_type@@Base+0x3b8>
   10e1c:	ldr	r0, [pc, #92]	; 10e80 <print_type@@Base+0x3d0>
   10e20:	add	r0, pc, r0
   10e24:	str	r0, [sp, #8]
   10e28:	b	10e68 <print_type@@Base+0x3b8>
   10e2c:	ldr	r0, [pc, #72]	; 10e7c <print_type@@Base+0x3cc>
   10e30:	add	r0, pc, r0
   10e34:	str	r0, [sp, #8]
   10e38:	b	10e68 <print_type@@Base+0x3b8>
   10e3c:	ldr	r0, [pc, #52]	; 10e78 <print_type@@Base+0x3c8>
   10e40:	add	r0, pc, r0
   10e44:	str	r0, [sp, #8]
   10e48:	b	10e68 <print_type@@Base+0x3b8>
   10e4c:	ldr	r0, [pc, #32]	; 10e74 <print_type@@Base+0x3c4>
   10e50:	add	r0, pc, r0
   10e54:	str	r0, [sp, #8]
   10e58:	b	10e68 <print_type@@Base+0x3b8>
   10e5c:	ldr	r0, [pc, #84]	; 10eb8 <print_type@@Base+0x408>
   10e60:	add	r0, pc, r0
   10e64:	str	r0, [sp, #8]
   10e68:	ldr	r0, [sp, #8]
   10e6c:	add	sp, sp, #12
   10e70:	bx	lr
   10e74:	andeq	r3, r0, sl, lsr #31
   10e78:			; <UNDEFINED> instruction: 0x00003fb6
   10e7c:			; <UNDEFINED> instruction: 0x00003fbf
   10e80:	andeq	r3, r0, r8, asr #31
   10e84:	ldrdeq	r3, [r0], -r1
   10e88:	ldrdeq	r3, [r0], -fp
   10e8c:	andeq	r3, r0, r5, ror #31
   10e90:	strdeq	r3, [r0], -r6
   10e94:	andeq	r4, r0, r0
   10e98:	andeq	r4, r0, r1, lsl r0
   10e9c:	andeq	r4, r0, r9, lsl r0
   10ea0:	andeq	r4, r0, sl, lsr #32
   10ea4:	andeq	r4, r0, r3, lsr r0
   10ea8:	andeq	r4, r0, r4, asr #32
   10eac:	andeq	r4, r0, lr, asr #32
   10eb0:	andeq	r4, r0, r8, asr r0
   10eb4:	andeq	r4, r0, r3, rrx
   10eb8:	andeq	r3, r0, r6, lsr #27
   10ebc:	push	{fp, lr}
   10ec0:	mov	fp, sp
   10ec4:	sub	sp, sp, #24
   10ec8:	str	r0, [fp, #-4]
   10ecc:	movw	r0, #0
   10ed0:	strh	r0, [fp, #-6]
   10ed4:	ldr	r0, [fp, #-4]
   10ed8:	movw	r1, #0
   10edc:	cmp	r0, r1
   10ee0:	beq	10eec <print_type@@Base+0x43c>
   10ee4:	b	10ee8 <print_type@@Base+0x438>
   10ee8:	b	10f0c <print_type@@Base+0x45c>
   10eec:	ldr	r0, [pc, #176]	; 10fa4 <print_type@@Base+0x4f4>
   10ef0:	add	r0, pc, r0
   10ef4:	ldr	r1, [pc, #172]	; 10fa8 <print_type@@Base+0x4f8>
   10ef8:	add	r1, pc, r1
   10efc:	ldr	r2, [pc, #168]	; 10fac <print_type@@Base+0x4fc>
   10f00:	add	r3, pc, r2
   10f04:	movw	r2, #147	; 0x93
   10f08:	bl	109b4 <__assert_fail@plt>
   10f0c:	mov	r0, #0
   10f10:	strh	r0, [fp, #-8]
   10f14:	ldr	r0, [fp, #-4]
   10f18:	str	r0, [sp, #8]
   10f1c:	bl	145b8 <main@@Base+0xbc>
   10f20:	ldr	r1, [sp, #8]
   10f24:	sub	r0, r1, r0
   10f28:	str	r0, [sp, #12]
   10f2c:	ldr	r0, [sp, #12]
   10f30:	bl	145dc <main@@Base+0xe0>
   10f34:	ldrh	r1, [fp, #-8]
   10f38:	add	r1, r1, #3
   10f3c:	lsl	r1, r1, #1
   10f40:	cmp	r0, r1
   10f44:	bcc	10f60 <print_type@@Base+0x4b0>
   10f48:	ldr	r0, [sp, #12]
   10f4c:	ldrh	r1, [fp, #-8]
   10f50:	add	r0, r0, r1, lsl #1
   10f54:	add	r0, r0, #4
   10f58:	bl	145dc <main@@Base+0xe0>
   10f5c:	strh	r0, [fp, #-6]
   10f60:	ldrh	r0, [fp, #-6]
   10f64:	cmp	r0, #0
   10f68:	beq	10f88 <print_type@@Base+0x4d8>
   10f6c:	ldr	r0, [fp, #-4]
   10f70:	ldrh	r1, [fp, #-6]
   10f74:	add	r0, r0, r1
   10f78:	bl	1462c <main@@Base+0x130>
   10f7c:	sxtb	r0, r0
   10f80:	str	r0, [sp, #4]
   10f84:	b	10f94 <print_type@@Base+0x4e4>
   10f88:	movw	r0, #0
   10f8c:	str	r0, [sp, #4]
   10f90:	b	10f94 <print_type@@Base+0x4e4>
   10f94:	ldr	r0, [sp, #4]
   10f98:	sxtb	r0, r0
   10f9c:	mov	sp, fp
   10fa0:	pop	{fp, pc}
   10fa4:	andeq	r3, r0, r6, ror #27
   10fa8:	andeq	r3, r0, r4, lsl #28
   10fac:	andeq	r3, r0, r0, lsl #30
   10fb0:	push	{fp, lr}
   10fb4:	mov	fp, sp
   10fb8:	sub	sp, sp, #16
   10fbc:	str	r0, [fp, #-4]
   10fc0:	movw	r0, #0
   10fc4:	strh	r0, [fp, #-6]
   10fc8:	ldr	r0, [fp, #-4]
   10fcc:	movw	r1, #0
   10fd0:	cmp	r0, r1
   10fd4:	beq	10fe0 <print_type@@Base+0x530>
   10fd8:	b	10fdc <print_type@@Base+0x52c>
   10fdc:	b	11000 <print_type@@Base+0x550>
   10fe0:	ldr	r0, [pc, #136]	; 11070 <print_type@@Base+0x5c0>
   10fe4:	add	r0, pc, r0
   10fe8:	ldr	r1, [pc, #132]	; 11074 <print_type@@Base+0x5c4>
   10fec:	add	r1, pc, r1
   10ff0:	ldr	r2, [pc, #128]	; 11078 <print_type@@Base+0x5c8>
   10ff4:	add	r3, pc, r2
   10ff8:	movw	r2, #148	; 0x94
   10ffc:	bl	109b4 <__assert_fail@plt>
   11000:	mov	r0, #1
   11004:	strh	r0, [sp, #8]
   11008:	ldr	r0, [fp, #-4]
   1100c:	str	r0, [sp]
   11010:	bl	145b8 <main@@Base+0xbc>
   11014:	ldr	r1, [sp]
   11018:	sub	r0, r1, r0
   1101c:	str	r0, [sp, #4]
   11020:	ldr	r0, [sp, #4]
   11024:	bl	145dc <main@@Base+0xe0>
   11028:	ldrh	r1, [sp, #8]
   1102c:	add	r1, r1, #3
   11030:	lsl	r1, r1, #1
   11034:	cmp	r0, r1
   11038:	bcc	11054 <print_type@@Base+0x5a4>
   1103c:	ldr	r0, [sp, #4]
   11040:	ldrh	r1, [sp, #8]
   11044:	add	r0, r0, r1, lsl #1
   11048:	add	r0, r0, #4
   1104c:	bl	145dc <main@@Base+0xe0>
   11050:	strh	r0, [fp, #-6]
   11054:	ldrh	r0, [fp, #-6]
   11058:	cmp	r0, #0
   1105c:	movw	r0, #0
   11060:	movne	r0, #1
   11064:	and	r0, r0, #1
   11068:	mov	sp, fp
   1106c:	pop	{fp, pc}
   11070:	strdeq	r3, [r0], -r2
   11074:	andeq	r3, r0, r0, lsl sp
   11078:	andeq	r3, r0, sl, asr lr
   1107c:	push	{fp, lr}
   11080:	mov	fp, sp
   11084:	sub	sp, sp, #16
   11088:	str	r0, [fp, #-4]
   1108c:	movw	r0, #0
   11090:	strh	r0, [fp, #-6]
   11094:	ldr	r0, [fp, #-4]
   11098:	movw	r1, #0
   1109c:	cmp	r0, r1
   110a0:	beq	110ac <print_type@@Base+0x5fc>
   110a4:	b	110a8 <print_type@@Base+0x5f8>
   110a8:	b	110cc <print_type@@Base+0x61c>
   110ac:	ldr	r0, [pc, #136]	; 1113c <print_type@@Base+0x68c>
   110b0:	add	r0, pc, r0
   110b4:	ldr	r1, [pc, #132]	; 11140 <print_type@@Base+0x690>
   110b8:	add	r1, pc, r1
   110bc:	ldr	r2, [pc, #128]	; 11144 <print_type@@Base+0x694>
   110c0:	add	r3, pc, r2
   110c4:	movw	r2, #149	; 0x95
   110c8:	bl	109b4 <__assert_fail@plt>
   110cc:	mov	r0, #2
   110d0:	strh	r0, [sp, #8]
   110d4:	ldr	r0, [fp, #-4]
   110d8:	str	r0, [sp]
   110dc:	bl	145b8 <main@@Base+0xbc>
   110e0:	ldr	r1, [sp]
   110e4:	sub	r0, r1, r0
   110e8:	str	r0, [sp, #4]
   110ec:	ldr	r0, [sp, #4]
   110f0:	bl	145dc <main@@Base+0xe0>
   110f4:	ldrh	r1, [sp, #8]
   110f8:	add	r1, r1, #3
   110fc:	lsl	r1, r1, #1
   11100:	cmp	r0, r1
   11104:	bcc	11120 <print_type@@Base+0x670>
   11108:	ldr	r0, [sp, #4]
   1110c:	ldrh	r1, [sp, #8]
   11110:	add	r0, r0, r1, lsl #1
   11114:	add	r0, r0, #4
   11118:	bl	145dc <main@@Base+0xe0>
   1111c:	strh	r0, [fp, #-6]
   11120:	ldrh	r0, [fp, #-6]
   11124:	cmp	r0, #0
   11128:	movw	r0, #0
   1112c:	movne	r0, #1
   11130:	and	r0, r0, #1
   11134:	mov	sp, fp
   11138:	pop	{fp, pc}
   1113c:	andeq	r3, r0, r6, lsr #24
   11140:	andeq	r3, r0, r4, asr #24
   11144:	andeq	r3, r0, lr, asr #27
   11148:	push	{fp, lr}
   1114c:	mov	fp, sp
   11150:	sub	sp, sp, #24
   11154:	str	r0, [fp, #-4]
   11158:	movw	r0, #0
   1115c:	strh	r0, [fp, #-6]
   11160:	ldr	r0, [fp, #-4]
   11164:	movw	r1, #0
   11168:	cmp	r0, r1
   1116c:	beq	11178 <print_type@@Base+0x6c8>
   11170:	b	11174 <print_type@@Base+0x6c4>
   11174:	b	11198 <print_type@@Base+0x6e8>
   11178:	ldr	r0, [pc, #168]	; 11228 <print_type@@Base+0x778>
   1117c:	add	r0, pc, r0
   11180:	ldr	r1, [pc, #164]	; 1122c <print_type@@Base+0x77c>
   11184:	add	r1, pc, r1
   11188:	ldr	r2, [pc, #160]	; 11230 <print_type@@Base+0x780>
   1118c:	add	r3, pc, r2
   11190:	movw	r2, #149	; 0x95
   11194:	bl	109b4 <__assert_fail@plt>
   11198:	mov	r0, #2
   1119c:	strh	r0, [fp, #-8]
   111a0:	ldr	r0, [fp, #-4]
   111a4:	str	r0, [sp, #8]
   111a8:	bl	145b8 <main@@Base+0xbc>
   111ac:	ldr	r1, [sp, #8]
   111b0:	sub	r0, r1, r0
   111b4:	str	r0, [sp, #12]
   111b8:	ldr	r0, [sp, #12]
   111bc:	bl	145dc <main@@Base+0xe0>
   111c0:	ldrh	r1, [fp, #-8]
   111c4:	add	r1, r1, #3
   111c8:	lsl	r1, r1, #1
   111cc:	cmp	r0, r1
   111d0:	bcc	111ec <print_type@@Base+0x73c>
   111d4:	ldr	r0, [sp, #12]
   111d8:	ldrh	r1, [fp, #-8]
   111dc:	add	r0, r0, r1, lsl #1
   111e0:	add	r0, r0, #4
   111e4:	bl	145dc <main@@Base+0xe0>
   111e8:	strh	r0, [fp, #-6]
   111ec:	ldrh	r0, [fp, #-6]
   111f0:	cmp	r0, #0
   111f4:	beq	11210 <print_type@@Base+0x760>
   111f8:	ldr	r0, [fp, #-4]
   111fc:	ldrh	r1, [fp, #-6]
   11200:	add	r0, r0, r1
   11204:	bl	14668 <main@@Base+0x16c>
   11208:	str	r0, [sp, #4]
   1120c:	b	1121c <print_type@@Base+0x76c>
   11210:	mvn	r0, #0
   11214:	str	r0, [sp, #4]
   11218:	b	1121c <print_type@@Base+0x76c>
   1121c:	ldr	r0, [sp, #4]
   11220:	mov	sp, fp
   11224:	pop	{fp, pc}
   11228:	andeq	r3, r0, sl, asr fp
   1122c:	andeq	r3, r0, r8, ror fp
   11230:	andeq	r3, r0, r0, asr #26

00011234 <print_object@@Base>:
   11234:	push	{fp, lr}
   11238:	mov	fp, sp
   1123c:	sub	sp, sp, #64	; 0x40
   11240:	str	r0, [fp, #-4]
   11244:	ldr	r0, [fp, #-4]
   11248:	bl	115a0 <print_object@@Base+0x36c>
   1124c:	str	r0, [fp, #-8]
   11250:	ldr	r0, [fp, #-4]
   11254:	bl	116c0 <print_object@@Base+0x48c>
   11258:	ldr	r1, [pc, #748]	; 1154c <print_object@@Base+0x318>
   1125c:	add	r1, pc, r1
   11260:	str	r0, [fp, #-20]	; 0xffffffec
   11264:	mov	r0, r1
   11268:	ldr	r1, [fp, #-20]	; 0xffffffec
   1126c:	bl	10900 <printf@plt>
   11270:	ldr	r1, [pc, #720]	; 11548 <print_object@@Base+0x314>
   11274:	add	r1, pc, r1
   11278:	str	r0, [fp, #-24]	; 0xffffffe8
   1127c:	mov	r0, r1
   11280:	bl	10900 <printf@plt>
   11284:	movw	r1, #0
   11288:	str	r1, [fp, #-16]
   1128c:	ldr	r0, [fp, #-16]
   11290:	ldr	r1, [fp, #-8]
   11294:	str	r0, [fp, #-28]	; 0xffffffe4
   11298:	mov	r0, r1
   1129c:	bl	117e0 <print_object@@Base+0x5ac>
   112a0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   112a4:	cmp	r1, r0
   112a8:	bcs	1146c <print_object@@Base+0x238>
   112ac:	ldr	r0, [fp, #-16]
   112b0:	cmp	r0, #0
   112b4:	bls	112c4 <print_object@@Base+0x90>
   112b8:	ldr	r0, [pc, #684]	; 1156c <print_object@@Base+0x338>
   112bc:	add	r0, pc, r0
   112c0:	bl	10900 <printf@plt>
   112c4:	ldr	r0, [fp, #-8]
   112c8:	ldr	r1, [fp, #-16]
   112cc:	bl	11830 <print_object@@Base+0x5fc>
   112d0:	str	r0, [fp, #-12]
   112d4:	ldr	r0, [fp, #-12]
   112d8:	bl	118c0 <print_object@@Base+0x68c>
   112dc:	ldr	r1, [pc, #652]	; 11570 <print_object@@Base+0x33c>
   112e0:	add	r1, pc, r1
   112e4:	str	r0, [sp, #32]
   112e8:	mov	r0, r1
   112ec:	ldr	r1, [sp, #32]
   112f0:	bl	10900 <printf@plt>
   112f4:	ldr	r1, [fp, #-12]
   112f8:	str	r0, [sp, #28]
   112fc:	mov	r0, r1
   11300:	bl	119e0 <print_object@@Base+0x7ac>
   11304:	bl	10ab0 <print_type@@Base>
   11308:	ldr	r0, [fp, #-12]
   1130c:	bl	11afc <print_object@@Base+0x8c8>
   11310:	cmp	r0, #0
   11314:	beq	1133c <print_object@@Base+0x108>
   11318:	ldr	r0, [fp, #-12]
   1131c:	bl	11bc8 <print_object@@Base+0x994>
   11320:	ldr	r1, [pc, #588]	; 11574 <print_object@@Base+0x340>
   11324:	add	r1, pc, r1
   11328:	uxth	r0, r0
   1132c:	str	r0, [sp, #24]
   11330:	mov	r0, r1
   11334:	ldr	r1, [sp, #24]
   11338:	bl	10900 <printf@plt>
   1133c:	ldr	r0, [fp, #-12]
   11340:	bl	11cbc <print_object@@Base+0xa88>
   11344:	cmp	r0, #0
   11348:	beq	11380 <print_object@@Base+0x14c>
   1134c:	ldr	r0, [fp, #-12]
   11350:	bl	11d88 <print_object@@Base+0xb54>
   11354:	ldr	r2, [pc, #540]	; 11578 <print_object@@Base+0x344>
   11358:	add	r2, pc, r2
   1135c:	ldr	r3, [pc, #568]	; 1159c <print_object@@Base+0x368>
   11360:	add	r3, pc, r3
   11364:	str	r0, [sp, #20]
   11368:	mov	r0, r3
   1136c:	ldr	r3, [sp, #20]
   11370:	str	r2, [sp, #16]
   11374:	mov	r2, r3
   11378:	mov	r3, r1
   1137c:	bl	10900 <printf@plt>
   11380:	ldr	r0, [fp, #-12]
   11384:	bl	11e90 <print_object@@Base+0xc5c>
   11388:	cmp	r0, #0
   1138c:	beq	113a8 <print_object@@Base+0x174>
   11390:	ldr	r0, [fp, #-12]
   11394:	bl	11f60 <print_object@@Base+0xd2c>
   11398:	ldr	r0, [pc, #476]	; 1157c <print_object@@Base+0x348>
   1139c:	add	r0, pc, r0
   113a0:	vmov	r2, r3, d0
   113a4:	bl	10900 <printf@plt>
   113a8:	ldr	r0, [fp, #-12]
   113ac:	bl	1205c <print_object@@Base+0xe28>
   113b0:	cmp	r0, #0
   113b4:	beq	113fc <print_object@@Base+0x1c8>
   113b8:	ldr	r0, [fp, #-12]
   113bc:	bl	12128 <print_object@@Base+0xef4>
   113c0:	ldr	r1, [pc, #440]	; 11580 <print_object@@Base+0x34c>
   113c4:	add	r1, pc, r1
   113c8:	ldr	r2, [pc, #436]	; 11584 <print_object@@Base+0x350>
   113cc:	add	r2, pc, r2
   113d0:	ldr	r3, [pc, #432]	; 11588 <print_object@@Base+0x354>
   113d4:	add	r3, pc, r3
   113d8:	and	r0, r0, #255	; 0xff
   113dc:	cmp	r0, #0
   113e0:	movw	r0, #0
   113e4:	movne	r0, #1
   113e8:	tst	r0, #1
   113ec:	movne	r3, r2
   113f0:	mov	r0, r1
   113f4:	mov	r1, r3
   113f8:	bl	10900 <printf@plt>
   113fc:	ldr	r0, [fp, #-12]
   11400:	bl	1221c <print_object@@Base+0xfe8>
   11404:	cmp	r0, #0
   11408:	beq	11450 <print_object@@Base+0x21c>
   1140c:	ldr	r0, [fp, #-12]
   11410:	bl	122e8 <print_object@@Base+0x10b4>
   11414:	ldr	r1, [pc, #368]	; 1158c <print_object@@Base+0x358>
   11418:	add	r1, pc, r1
   1141c:	ldr	r2, [pc, #364]	; 11590 <print_object@@Base+0x35c>
   11420:	add	r2, pc, r2
   11424:	ldr	r3, [pc, #360]	; 11594 <print_object@@Base+0x360>
   11428:	add	r3, pc, r3
   1142c:	and	r0, r0, #255	; 0xff
   11430:	cmp	r0, #0
   11434:	movw	r0, #0
   11438:	movne	r0, #1
   1143c:	tst	r0, #1
   11440:	movne	r3, r2
   11444:	mov	r0, r1
   11448:	mov	r1, r3
   1144c:	bl	10900 <printf@plt>
   11450:	ldr	r0, [pc, #320]	; 11598 <print_object@@Base+0x364>
   11454:	add	r0, pc, r0
   11458:	bl	10900 <printf@plt>
   1145c:	ldr	r0, [fp, #-16]
   11460:	add	r0, r0, #1
   11464:	str	r0, [fp, #-16]
   11468:	b	1128c <print_object@@Base+0x58>
   1146c:	ldr	r0, [pc, #220]	; 11550 <print_object@@Base+0x31c>
   11470:	add	r0, pc, r0
   11474:	bl	10900 <printf@plt>
   11478:	ldr	r1, [fp, #-4]
   1147c:	str	r0, [sp, #12]
   11480:	mov	r0, r1
   11484:	bl	123dc <print_object@@Base+0x11a8>
   11488:	cmp	r0, #0
   1148c:	beq	114d4 <print_object@@Base+0x2a0>
   11490:	ldr	r0, [fp, #-4]
   11494:	bl	124a8 <print_object@@Base+0x1274>
   11498:	ldr	r1, [pc, #180]	; 11554 <print_object@@Base+0x320>
   1149c:	add	r1, pc, r1
   114a0:	ldr	r2, [pc, #176]	; 11558 <print_object@@Base+0x324>
   114a4:	add	r2, pc, r2
   114a8:	ldr	r3, [pc, #172]	; 1155c <print_object@@Base+0x328>
   114ac:	add	r3, pc, r3
   114b0:	and	r0, r0, #255	; 0xff
   114b4:	cmp	r0, #0
   114b8:	movw	r0, #0
   114bc:	movne	r0, #1
   114c0:	tst	r0, #1
   114c4:	movne	r3, r2
   114c8:	mov	r0, r1
   114cc:	mov	r1, r3
   114d0:	bl	10900 <printf@plt>
   114d4:	ldr	r0, [fp, #-4]
   114d8:	bl	1259c <print_object@@Base+0x1368>
   114dc:	cmp	r0, #0
   114e0:	beq	11504 <print_object@@Base+0x2d0>
   114e4:	ldr	r0, [fp, #-4]
   114e8:	bl	12668 <print_object@@Base+0x1434>
   114ec:	ldr	r1, [pc, #108]	; 11560 <print_object@@Base+0x32c>
   114f0:	add	r1, pc, r1
   114f4:	str	r0, [sp, #8]
   114f8:	mov	r0, r1
   114fc:	ldr	r1, [sp, #8]
   11500:	bl	10900 <printf@plt>
   11504:	ldr	r0, [fp, #-4]
   11508:	bl	12754 <print_object@@Base+0x1520>
   1150c:	cmp	r0, #0
   11510:	beq	11534 <print_object@@Base+0x300>
   11514:	ldr	r0, [fp, #-4]
   11518:	bl	12820 <print_object@@Base+0x15ec>
   1151c:	ldr	r1, [pc, #64]	; 11564 <print_object@@Base+0x330>
   11520:	add	r1, pc, r1
   11524:	str	r0, [sp, #4]
   11528:	mov	r0, r1
   1152c:	ldr	r1, [sp, #4]
   11530:	bl	10900 <printf@plt>
   11534:	ldr	r0, [pc, #44]	; 11568 <print_object@@Base+0x334>
   11538:	add	r0, pc, r0
   1153c:	bl	10900 <printf@plt>
   11540:	mov	sp, fp
   11544:	pop	{fp, pc}
   11548:	andeq	r3, r0, sl, asr r7
   1154c:	andeq	r3, r0, r5, ror #14
   11550:	ldrdeq	r3, [r0], -ip
   11554:			; <UNDEFINED> instruction: 0x000035b2
   11558:	muleq	r0, r3, r5
   1155c:	muleq	r0, r0, r5
   11560:	andeq	r3, r0, lr, ror #10
   11564:	andeq	r3, r0, sp, asr #10
   11568:	andeq	r3, r0, r7, lsl #9
   1156c:	ldrdeq	r3, [r0], -r6
   11570:	strdeq	r3, [r0], -sl
   11574:	andeq	r3, r0, fp, asr #13
   11578:	andeq	r3, r0, r1, lsr #13
   1157c:	andeq	r3, r0, r5, ror r6
   11580:	andeq	r3, r0, r4, ror #12
   11584:	andeq	r3, r0, fp, ror #12
   11588:	andeq	r3, r0, r8, ror #12
   1158c:	andeq	r3, r0, sl, lsr #12
   11590:	andeq	r3, r0, r7, lsl r6
   11594:	andeq	r3, r0, r4, lsl r6
   11598:	andeq	r3, r0, fp, ror #10
   1159c:	muleq	r0, r9, r6
   115a0:	push	{fp, lr}
   115a4:	mov	fp, sp
   115a8:	sub	sp, sp, #24
   115ac:	str	r0, [fp, #-4]
   115b0:	movw	r0, #0
   115b4:	strh	r0, [fp, #-10]
   115b8:	ldr	r0, [fp, #-4]
   115bc:	movw	r1, #0
   115c0:	cmp	r0, r1
   115c4:	beq	115d0 <print_object@@Base+0x39c>
   115c8:	b	115cc <print_object@@Base+0x398>
   115cc:	b	115f0 <print_object@@Base+0x3bc>
   115d0:	ldr	r0, [pc, #208]	; 116a8 <print_object@@Base+0x474>
   115d4:	add	r0, pc, r0
   115d8:	ldr	r1, [pc, #204]	; 116ac <print_object@@Base+0x478>
   115dc:	add	r1, pc, r1
   115e0:	ldr	r2, [pc, #200]	; 116b0 <print_object@@Base+0x47c>
   115e4:	add	r3, pc, r2
   115e8:	movw	r2, #224	; 0xe0
   115ec:	bl	109b4 <__assert_fail@plt>
   115f0:	mov	r0, #1
   115f4:	strh	r0, [sp, #12]
   115f8:	ldr	r0, [fp, #-4]
   115fc:	str	r0, [sp, #4]
   11600:	bl	145b8 <main@@Base+0xbc>
   11604:	ldr	r1, [sp, #4]
   11608:	sub	r0, r1, r0
   1160c:	str	r0, [sp, #8]
   11610:	ldr	r0, [sp, #8]
   11614:	bl	145dc <main@@Base+0xe0>
   11618:	ldrh	r1, [sp, #12]
   1161c:	add	r1, r1, #3
   11620:	lsl	r1, r1, #1
   11624:	cmp	r0, r1
   11628:	bcc	11644 <print_object@@Base+0x410>
   1162c:	ldr	r0, [sp, #8]
   11630:	ldrh	r1, [sp, #12]
   11634:	add	r0, r0, r1, lsl #1
   11638:	add	r0, r0, #4
   1163c:	bl	145dc <main@@Base+0xe0>
   11640:	strh	r0, [fp, #-10]
   11644:	ldrsh	r0, [fp, #-10]
   11648:	cmp	r0, #0
   1164c:	beq	11688 <print_object@@Base+0x454>
   11650:	ldr	r0, [fp, #-4]
   11654:	ldrh	r1, [fp, #-10]
   11658:	add	r0, r0, r1
   1165c:	str	r0, [fp, #-8]
   11660:	ldr	r0, [fp, #-8]
   11664:	add	r0, r0, #4
   11668:	ldr	r1, [fp, #-8]
   1166c:	str	r0, [sp]
   11670:	mov	r0, r1
   11674:	bl	146a0 <main@@Base+0x1a4>
   11678:	ldr	r1, [sp]
   1167c:	add	r0, r1, r0
   11680:	mov	sp, fp
   11684:	pop	{fp, pc}
   11688:	ldr	r0, [pc, #36]	; 116b4 <print_object@@Base+0x480>
   1168c:	add	r0, pc, r0
   11690:	ldr	r1, [pc, #32]	; 116b8 <print_object@@Base+0x484>
   11694:	add	r1, pc, r1
   11698:	ldr	r2, [pc, #28]	; 116bc <print_object@@Base+0x488>
   1169c:	add	r3, pc, r2
   116a0:	movw	r2, #224	; 0xe0
   116a4:	bl	109b4 <__assert_fail@plt>
   116a8:	andeq	r3, r0, r2, lsl #14
   116ac:	andeq	r3, r0, r0, lsr #14
   116b0:	andeq	r3, r0, pc, lsl r9
   116b4:	andeq	r3, r0, r2, asr #17
   116b8:	andeq	r3, r0, r8, ror #12
   116bc:	andeq	r3, r0, r7, ror #16
   116c0:	push	{fp, lr}
   116c4:	mov	fp, sp
   116c8:	sub	sp, sp, #24
   116cc:	str	r0, [fp, #-4]
   116d0:	movw	r0, #0
   116d4:	strh	r0, [fp, #-10]
   116d8:	ldr	r0, [fp, #-4]
   116dc:	movw	r1, #0
   116e0:	cmp	r0, r1
   116e4:	beq	116f0 <print_object@@Base+0x4bc>
   116e8:	b	116ec <print_object@@Base+0x4b8>
   116ec:	b	11710 <print_object@@Base+0x4dc>
   116f0:	ldr	r0, [pc, #208]	; 117c8 <print_object@@Base+0x594>
   116f4:	add	r0, pc, r0
   116f8:	ldr	r1, [pc, #204]	; 117cc <print_object@@Base+0x598>
   116fc:	add	r1, pc, r1
   11700:	ldr	r2, [pc, #200]	; 117d0 <print_object@@Base+0x59c>
   11704:	add	r3, pc, r2
   11708:	movw	r2, #218	; 0xda
   1170c:	bl	109b4 <__assert_fail@plt>
   11710:	mov	r0, #0
   11714:	strh	r0, [sp, #12]
   11718:	ldr	r0, [fp, #-4]
   1171c:	str	r0, [sp, #4]
   11720:	bl	145b8 <main@@Base+0xbc>
   11724:	ldr	r1, [sp, #4]
   11728:	sub	r0, r1, r0
   1172c:	str	r0, [sp, #8]
   11730:	ldr	r0, [sp, #8]
   11734:	bl	145dc <main@@Base+0xe0>
   11738:	ldrh	r1, [sp, #12]
   1173c:	add	r1, r1, #3
   11740:	lsl	r1, r1, #1
   11744:	cmp	r0, r1
   11748:	bcc	11764 <print_object@@Base+0x530>
   1174c:	ldr	r0, [sp, #8]
   11750:	ldrh	r1, [sp, #12]
   11754:	add	r0, r0, r1, lsl #1
   11758:	add	r0, r0, #4
   1175c:	bl	145dc <main@@Base+0xe0>
   11760:	strh	r0, [fp, #-10]
   11764:	ldrsh	r0, [fp, #-10]
   11768:	cmp	r0, #0
   1176c:	beq	117a8 <print_object@@Base+0x574>
   11770:	ldr	r0, [fp, #-4]
   11774:	ldrh	r1, [fp, #-10]
   11778:	add	r0, r0, r1
   1177c:	str	r0, [fp, #-8]
   11780:	ldr	r0, [fp, #-8]
   11784:	add	r0, r0, #4
   11788:	ldr	r1, [fp, #-8]
   1178c:	str	r0, [sp]
   11790:	mov	r0, r1
   11794:	bl	146a0 <main@@Base+0x1a4>
   11798:	ldr	r1, [sp]
   1179c:	add	r0, r1, r0
   117a0:	mov	sp, fp
   117a4:	pop	{fp, pc}
   117a8:	ldr	r0, [pc, #36]	; 117d4 <print_object@@Base+0x5a0>
   117ac:	add	r0, pc, r0
   117b0:	ldr	r1, [pc, #32]	; 117d8 <print_object@@Base+0x5a4>
   117b4:	add	r1, pc, r1
   117b8:	ldr	r2, [pc, #28]	; 117dc <print_object@@Base+0x5a8>
   117bc:	add	r3, pc, r2
   117c0:	movw	r2, #218	; 0xda
   117c4:	bl	109b4 <__assert_fail@plt>
   117c8:	andeq	r3, r0, r2, ror #11
   117cc:	andeq	r3, r0, r0, lsl #12
   117d0:	andeq	r3, r0, fp, ror #16
   117d4:	andeq	r3, r0, r2, lsr #15
   117d8:	andeq	r3, r0, r8, asr #10
   117dc:			; <UNDEFINED> instruction: 0x000037b3
   117e0:	push	{fp, lr}
   117e4:	mov	fp, sp
   117e8:	sub	sp, sp, #8
   117ec:	str	r0, [sp, #4]
   117f0:	ldr	r0, [sp, #4]
   117f4:	movw	r1, #0
   117f8:	cmp	r0, r1
   117fc:	beq	11818 <print_object@@Base+0x5e4>
   11800:	ldr	r0, [sp, #4]
   11804:	mvn	r1, #3
   11808:	add	r0, r0, r1
   1180c:	bl	146a0 <main@@Base+0x1a4>
   11810:	str	r0, [sp]
   11814:	b	11824 <print_object@@Base+0x5f0>
   11818:	movw	r0, #0
   1181c:	str	r0, [sp]
   11820:	b	11824 <print_object@@Base+0x5f0>
   11824:	ldr	r0, [sp]
   11828:	mov	sp, fp
   1182c:	pop	{fp, pc}
   11830:	push	{fp, lr}
   11834:	mov	fp, sp
   11838:	sub	sp, sp, #16
   1183c:	str	r0, [fp, #-4]
   11840:	str	r1, [sp, #8]
   11844:	ldr	r0, [fp, #-4]
   11848:	ldr	r1, [sp, #8]
   1184c:	add	r0, r0, r1, lsl #2
   11850:	str	r0, [sp, #4]
   11854:	ldr	r0, [fp, #-4]
   11858:	bl	146d8 <main@@Base+0x1dc>
   1185c:	ldr	r1, [sp, #8]
   11860:	cmp	r0, r1
   11864:	bls	11870 <print_object@@Base+0x63c>
   11868:	b	1186c <print_object@@Base+0x638>
   1186c:	b	11890 <print_object@@Base+0x65c>
   11870:	ldr	r0, [pc, #60]	; 118b4 <print_object@@Base+0x680>
   11874:	add	r0, pc, r0
   11878:	ldr	r1, [pc, #56]	; 118b8 <print_object@@Base+0x684>
   1187c:	add	r1, pc, r1
   11880:	ldr	r2, [pc, #52]	; 118bc <print_object@@Base+0x688>
   11884:	add	r3, pc, r2
   11888:	movw	r2, #192	; 0xc0
   1188c:	bl	109b4 <__assert_fail@plt>
   11890:	ldr	r0, [sp, #4]
   11894:	ldr	r1, [sp, #4]
   11898:	str	r0, [sp]
   1189c:	mov	r0, r1
   118a0:	bl	146a0 <main@@Base+0x1a4>
   118a4:	ldr	r1, [sp]
   118a8:	add	r0, r1, r0
   118ac:	mov	sp, fp
   118b0:	pop	{fp, pc}
   118b4:	andeq	r3, r0, r5, asr r7
   118b8:	andeq	r3, r0, r0, lsl #9
   118bc:	andeq	r3, r0, ip, ror r7
   118c0:	push	{fp, lr}
   118c4:	mov	fp, sp
   118c8:	sub	sp, sp, #24
   118cc:	str	r0, [fp, #-4]
   118d0:	movw	r0, #0
   118d4:	strh	r0, [fp, #-10]
   118d8:	ldr	r0, [fp, #-4]
   118dc:	movw	r1, #0
   118e0:	cmp	r0, r1
   118e4:	beq	118f0 <print_object@@Base+0x6bc>
   118e8:	b	118ec <print_object@@Base+0x6b8>
   118ec:	b	11910 <print_object@@Base+0x6dc>
   118f0:	ldr	r0, [pc, #208]	; 119c8 <print_object@@Base+0x794>
   118f4:	add	r0, pc, r0
   118f8:	ldr	r1, [pc, #204]	; 119cc <print_object@@Base+0x798>
   118fc:	add	r1, pc, r1
   11900:	ldr	r2, [pc, #200]	; 119d0 <print_object@@Base+0x79c>
   11904:	add	r3, pc, r2
   11908:	movw	r2, #195	; 0xc3
   1190c:	bl	109b4 <__assert_fail@plt>
   11910:	mov	r0, #0
   11914:	strh	r0, [sp, #12]
   11918:	ldr	r0, [fp, #-4]
   1191c:	str	r0, [sp, #4]
   11920:	bl	145b8 <main@@Base+0xbc>
   11924:	ldr	r1, [sp, #4]
   11928:	sub	r0, r1, r0
   1192c:	str	r0, [sp, #8]
   11930:	ldr	r0, [sp, #8]
   11934:	bl	145dc <main@@Base+0xe0>
   11938:	ldrh	r1, [sp, #12]
   1193c:	add	r1, r1, #3
   11940:	lsl	r1, r1, #1
   11944:	cmp	r0, r1
   11948:	bcc	11964 <print_object@@Base+0x730>
   1194c:	ldr	r0, [sp, #8]
   11950:	ldrh	r1, [sp, #12]
   11954:	add	r0, r0, r1, lsl #1
   11958:	add	r0, r0, #4
   1195c:	bl	145dc <main@@Base+0xe0>
   11960:	strh	r0, [fp, #-10]
   11964:	ldrsh	r0, [fp, #-10]
   11968:	cmp	r0, #0
   1196c:	beq	119a8 <print_object@@Base+0x774>
   11970:	ldr	r0, [fp, #-4]
   11974:	ldrh	r1, [fp, #-10]
   11978:	add	r0, r0, r1
   1197c:	str	r0, [fp, #-8]
   11980:	ldr	r0, [fp, #-8]
   11984:	add	r0, r0, #4
   11988:	ldr	r1, [fp, #-8]
   1198c:	str	r0, [sp]
   11990:	mov	r0, r1
   11994:	bl	146a0 <main@@Base+0x1a4>
   11998:	ldr	r1, [sp]
   1199c:	add	r0, r1, r0
   119a0:	mov	sp, fp
   119a4:	pop	{fp, pc}
   119a8:	ldr	r0, [pc, #36]	; 119d4 <print_object@@Base+0x7a0>
   119ac:	add	r0, pc, r0
   119b0:	ldr	r1, [pc, #32]	; 119d8 <print_object@@Base+0x7a4>
   119b4:	add	r1, pc, r1
   119b8:	ldr	r2, [pc, #28]	; 119dc <print_object@@Base+0x7a8>
   119bc:	add	r3, pc, r2
   119c0:	movw	r2, #195	; 0xc3
   119c4:	bl	109b4 <__assert_fail@plt>
   119c8:	andeq	r3, r0, r2, ror #7
   119cc:	andeq	r3, r0, r0, lsl #8
   119d0:	andeq	r3, r0, sp, asr #14
   119d4:	andeq	r3, r0, r2, lsr #11
   119d8:	andeq	r3, r0, r8, asr #6
   119dc:	muleq	r0, r5, r6
   119e0:	push	{fp, lr}
   119e4:	mov	fp, sp
   119e8:	sub	sp, sp, #24
   119ec:	str	r0, [fp, #-4]
   119f0:	movw	r0, #0
   119f4:	strh	r0, [fp, #-10]
   119f8:	ldr	r0, [fp, #-4]
   119fc:	movw	r1, #0
   11a00:	cmp	r0, r1
   11a04:	beq	11a10 <print_object@@Base+0x7dc>
   11a08:	b	11a0c <print_object@@Base+0x7d8>
   11a0c:	b	11a30 <print_object@@Base+0x7fc>
   11a10:	ldr	r0, [pc, #204]	; 11ae4 <print_object@@Base+0x8b0>
   11a14:	add	r0, pc, r0
   11a18:	ldr	r1, [pc, #200]	; 11ae8 <print_object@@Base+0x8b4>
   11a1c:	add	r1, pc, r1
   11a20:	ldr	r2, [pc, #196]	; 11aec <print_object@@Base+0x8b8>
   11a24:	add	r3, pc, r2
   11a28:	movw	r2, #201	; 0xc9
   11a2c:	bl	109b4 <__assert_fail@plt>
   11a30:	mov	r0, #1
   11a34:	strh	r0, [sp, #12]
   11a38:	ldr	r0, [fp, #-4]
   11a3c:	str	r0, [sp, #4]
   11a40:	bl	145b8 <main@@Base+0xbc>
   11a44:	ldr	r1, [sp, #4]
   11a48:	sub	r0, r1, r0
   11a4c:	str	r0, [sp, #8]
   11a50:	ldr	r0, [sp, #8]
   11a54:	bl	145dc <main@@Base+0xe0>
   11a58:	ldrh	r1, [sp, #12]
   11a5c:	add	r1, r1, #3
   11a60:	lsl	r1, r1, #1
   11a64:	cmp	r0, r1
   11a68:	bcc	11a84 <print_object@@Base+0x850>
   11a6c:	ldr	r0, [sp, #8]
   11a70:	ldrh	r1, [sp, #12]
   11a74:	add	r0, r0, r1, lsl #1
   11a78:	add	r0, r0, #4
   11a7c:	bl	145dc <main@@Base+0xe0>
   11a80:	strh	r0, [fp, #-10]
   11a84:	ldrsh	r0, [fp, #-10]
   11a88:	cmp	r0, #0
   11a8c:	beq	11ac4 <print_object@@Base+0x890>
   11a90:	ldr	r0, [fp, #-4]
   11a94:	ldrh	r1, [fp, #-10]
   11a98:	add	r0, r0, r1
   11a9c:	str	r0, [fp, #-8]
   11aa0:	ldr	r0, [fp, #-8]
   11aa4:	ldr	r1, [fp, #-8]
   11aa8:	str	r0, [sp]
   11aac:	mov	r0, r1
   11ab0:	bl	146a0 <main@@Base+0x1a4>
   11ab4:	ldr	r1, [sp]
   11ab8:	add	r0, r1, r0
   11abc:	mov	sp, fp
   11ac0:	pop	{fp, pc}
   11ac4:	ldr	r0, [pc, #36]	; 11af0 <print_object@@Base+0x8bc>
   11ac8:	add	r0, pc, r0
   11acc:	ldr	r1, [pc, #32]	; 11af4 <print_object@@Base+0x8c0>
   11ad0:	add	r1, pc, r1
   11ad4:	ldr	r2, [pc, #28]	; 11af8 <print_object@@Base+0x8c4>
   11ad8:	add	r3, pc, r2
   11adc:	movw	r2, #201	; 0xc9
   11ae0:	bl	109b4 <__assert_fail@plt>
   11ae4:	andeq	r3, r0, r2, asr #5
   11ae8:	andeq	r3, r0, r0, ror #5
   11aec:	andeq	r3, r0, r2, ror r6
   11af0:	andeq	r3, r0, r6, lsl #9
   11af4:	andeq	r3, r0, ip, lsr #4
   11af8:			; <UNDEFINED> instruction: 0x000035be
   11afc:	push	{fp, lr}
   11b00:	mov	fp, sp
   11b04:	sub	sp, sp, #16
   11b08:	str	r0, [fp, #-4]
   11b0c:	movw	r0, #0
   11b10:	strh	r0, [fp, #-6]
   11b14:	ldr	r0, [fp, #-4]
   11b18:	movw	r1, #0
   11b1c:	cmp	r0, r1
   11b20:	beq	11b2c <print_object@@Base+0x8f8>
   11b24:	b	11b28 <print_object@@Base+0x8f4>
   11b28:	b	11b4c <print_object@@Base+0x918>
   11b2c:	ldr	r0, [pc, #136]	; 11bbc <print_object@@Base+0x988>
   11b30:	add	r0, pc, r0
   11b34:	ldr	r1, [pc, #132]	; 11bc0 <print_object@@Base+0x98c>
   11b38:	add	r1, pc, r1
   11b3c:	ldr	r2, [pc, #128]	; 11bc4 <print_object@@Base+0x990>
   11b40:	add	r3, pc, r2
   11b44:	movw	r2, #202	; 0xca
   11b48:	bl	109b4 <__assert_fail@plt>
   11b4c:	mov	r0, #2
   11b50:	strh	r0, [sp, #8]
   11b54:	ldr	r0, [fp, #-4]
   11b58:	str	r0, [sp]
   11b5c:	bl	145b8 <main@@Base+0xbc>
   11b60:	ldr	r1, [sp]
   11b64:	sub	r0, r1, r0
   11b68:	str	r0, [sp, #4]
   11b6c:	ldr	r0, [sp, #4]
   11b70:	bl	145dc <main@@Base+0xe0>
   11b74:	ldrh	r1, [sp, #8]
   11b78:	add	r1, r1, #3
   11b7c:	lsl	r1, r1, #1
   11b80:	cmp	r0, r1
   11b84:	bcc	11ba0 <print_object@@Base+0x96c>
   11b88:	ldr	r0, [sp, #4]
   11b8c:	ldrh	r1, [sp, #8]
   11b90:	add	r0, r0, r1, lsl #1
   11b94:	add	r0, r0, #4
   11b98:	bl	145dc <main@@Base+0xe0>
   11b9c:	strh	r0, [fp, #-6]
   11ba0:	ldrh	r0, [fp, #-6]
   11ba4:	cmp	r0, #0
   11ba8:	movw	r0, #0
   11bac:	movne	r0, #1
   11bb0:	and	r0, r0, #1
   11bb4:	mov	sp, fp
   11bb8:	pop	{fp, pc}
   11bbc:	andeq	r3, r0, r6, lsr #3
   11bc0:	andeq	r3, r0, r4, asr #3
   11bc4:	muleq	r0, lr, r5
   11bc8:	push	{fp, lr}
   11bcc:	mov	fp, sp
   11bd0:	sub	sp, sp, #24
   11bd4:	str	r0, [fp, #-4]
   11bd8:	movw	r0, #0
   11bdc:	strh	r0, [fp, #-6]
   11be0:	ldr	r0, [fp, #-4]
   11be4:	movw	r1, #0
   11be8:	cmp	r0, r1
   11bec:	beq	11bf8 <print_object@@Base+0x9c4>
   11bf0:	b	11bf4 <print_object@@Base+0x9c0>
   11bf4:	b	11c18 <print_object@@Base+0x9e4>
   11bf8:	ldr	r0, [pc, #176]	; 11cb0 <print_object@@Base+0xa7c>
   11bfc:	add	r0, pc, r0
   11c00:	ldr	r1, [pc, #172]	; 11cb4 <print_object@@Base+0xa80>
   11c04:	add	r1, pc, r1
   11c08:	ldr	r2, [pc, #168]	; 11cb8 <print_object@@Base+0xa84>
   11c0c:	add	r3, pc, r2
   11c10:	movw	r2, #202	; 0xca
   11c14:	bl	109b4 <__assert_fail@plt>
   11c18:	mov	r0, #2
   11c1c:	strh	r0, [fp, #-8]
   11c20:	ldr	r0, [fp, #-4]
   11c24:	str	r0, [sp, #8]
   11c28:	bl	145b8 <main@@Base+0xbc>
   11c2c:	ldr	r1, [sp, #8]
   11c30:	sub	r0, r1, r0
   11c34:	str	r0, [sp, #12]
   11c38:	ldr	r0, [sp, #12]
   11c3c:	bl	145dc <main@@Base+0xe0>
   11c40:	ldrh	r1, [fp, #-8]
   11c44:	add	r1, r1, #3
   11c48:	lsl	r1, r1, #1
   11c4c:	cmp	r0, r1
   11c50:	bcc	11c6c <print_object@@Base+0xa38>
   11c54:	ldr	r0, [sp, #12]
   11c58:	ldrh	r1, [fp, #-8]
   11c5c:	add	r0, r0, r1, lsl #1
   11c60:	add	r0, r0, #4
   11c64:	bl	145dc <main@@Base+0xe0>
   11c68:	strh	r0, [fp, #-6]
   11c6c:	ldrh	r0, [fp, #-6]
   11c70:	cmp	r0, #0
   11c74:	beq	11c94 <print_object@@Base+0xa60>
   11c78:	ldr	r0, [fp, #-4]
   11c7c:	ldrh	r1, [fp, #-6]
   11c80:	add	r0, r0, r1
   11c84:	bl	14728 <main@@Base+0x22c>
   11c88:	uxth	r0, r0
   11c8c:	str	r0, [sp, #4]
   11c90:	b	11ca0 <print_object@@Base+0xa6c>
   11c94:	movw	r0, #0
   11c98:	str	r0, [sp, #4]
   11c9c:	b	11ca0 <print_object@@Base+0xa6c>
   11ca0:	ldr	r0, [sp, #4]
   11ca4:	uxth	r0, r0
   11ca8:	mov	sp, fp
   11cac:	pop	{fp, pc}
   11cb0:	ldrdeq	r3, [r0], -sl
   11cb4:	strdeq	r3, [r0], -r8
   11cb8:	andeq	r3, r0, pc, lsl #10
   11cbc:	push	{fp, lr}
   11cc0:	mov	fp, sp
   11cc4:	sub	sp, sp, #16
   11cc8:	str	r0, [fp, #-4]
   11ccc:	movw	r0, #0
   11cd0:	strh	r0, [fp, #-6]
   11cd4:	ldr	r0, [fp, #-4]
   11cd8:	movw	r1, #0
   11cdc:	cmp	r0, r1
   11ce0:	beq	11cec <print_object@@Base+0xab8>
   11ce4:	b	11ce8 <print_object@@Base+0xab4>
   11ce8:	b	11d0c <print_object@@Base+0xad8>
   11cec:	ldr	r0, [pc, #136]	; 11d7c <print_object@@Base+0xb48>
   11cf0:	add	r0, pc, r0
   11cf4:	ldr	r1, [pc, #132]	; 11d80 <print_object@@Base+0xb4c>
   11cf8:	add	r1, pc, r1
   11cfc:	ldr	r2, [pc, #128]	; 11d84 <print_object@@Base+0xb50>
   11d00:	add	r3, pc, r2
   11d04:	movw	r2, #204	; 0xcc
   11d08:	bl	109b4 <__assert_fail@plt>
   11d0c:	mov	r0, #4
   11d10:	strh	r0, [sp, #8]
   11d14:	ldr	r0, [fp, #-4]
   11d18:	str	r0, [sp]
   11d1c:	bl	145b8 <main@@Base+0xbc>
   11d20:	ldr	r1, [sp]
   11d24:	sub	r0, r1, r0
   11d28:	str	r0, [sp, #4]
   11d2c:	ldr	r0, [sp, #4]
   11d30:	bl	145dc <main@@Base+0xe0>
   11d34:	ldrh	r1, [sp, #8]
   11d38:	add	r1, r1, #3
   11d3c:	lsl	r1, r1, #1
   11d40:	cmp	r0, r1
   11d44:	bcc	11d60 <print_object@@Base+0xb2c>
   11d48:	ldr	r0, [sp, #4]
   11d4c:	ldrh	r1, [sp, #8]
   11d50:	add	r0, r0, r1, lsl #1
   11d54:	add	r0, r0, #4
   11d58:	bl	145dc <main@@Base+0xe0>
   11d5c:	strh	r0, [fp, #-6]
   11d60:	ldrh	r0, [fp, #-6]
   11d64:	cmp	r0, #0
   11d68:	movw	r0, #0
   11d6c:	movne	r0, #1
   11d70:	and	r0, r0, #1
   11d74:	mov	sp, fp
   11d78:	pop	{fp, pc}
   11d7c:	andeq	r2, r0, r6, ror #31
   11d80:	andeq	r3, r0, r4
   11d84:	andeq	r3, r0, r2, asr r4
   11d88:	push	{fp, lr}
   11d8c:	mov	fp, sp
   11d90:	sub	sp, sp, #32
   11d94:	str	r0, [fp, #-4]
   11d98:	movw	r0, #0
   11d9c:	strh	r0, [fp, #-6]
   11da0:	ldr	r0, [fp, #-4]
   11da4:	movw	r1, #0
   11da8:	cmp	r0, r1
   11dac:	beq	11db8 <print_object@@Base+0xb84>
   11db0:	b	11db4 <print_object@@Base+0xb80>
   11db4:	b	11dd8 <print_object@@Base+0xba4>
   11db8:	ldr	r0, [pc, #196]	; 11e84 <print_object@@Base+0xc50>
   11dbc:	add	r0, pc, r0
   11dc0:	ldr	r1, [pc, #192]	; 11e88 <print_object@@Base+0xc54>
   11dc4:	add	r1, pc, r1
   11dc8:	ldr	r2, [pc, #188]	; 11e8c <print_object@@Base+0xc58>
   11dcc:	add	r3, pc, r2
   11dd0:	movw	r2, #204	; 0xcc
   11dd4:	bl	109b4 <__assert_fail@plt>
   11dd8:	mov	r0, #4
   11ddc:	strh	r0, [fp, #-8]
   11de0:	ldr	r0, [fp, #-4]
   11de4:	str	r0, [sp, #16]
   11de8:	bl	145b8 <main@@Base+0xbc>
   11dec:	ldr	r1, [sp, #16]
   11df0:	sub	r0, r1, r0
   11df4:	str	r0, [fp, #-12]
   11df8:	ldr	r0, [fp, #-12]
   11dfc:	bl	145dc <main@@Base+0xe0>
   11e00:	ldrh	r1, [fp, #-8]
   11e04:	add	r1, r1, #3
   11e08:	lsl	r1, r1, #1
   11e0c:	cmp	r0, r1
   11e10:	bcc	11e2c <print_object@@Base+0xbf8>
   11e14:	ldr	r0, [fp, #-12]
   11e18:	ldrh	r1, [fp, #-8]
   11e1c:	add	r0, r0, r1, lsl #1
   11e20:	add	r0, r0, #4
   11e24:	bl	145dc <main@@Base+0xe0>
   11e28:	strh	r0, [fp, #-6]
   11e2c:	ldrh	r0, [fp, #-6]
   11e30:	cmp	r0, #0
   11e34:	beq	11e54 <print_object@@Base+0xc20>
   11e38:	ldr	r0, [fp, #-4]
   11e3c:	ldrh	r1, [fp, #-6]
   11e40:	add	r0, r0, r1
   11e44:	bl	14764 <main@@Base+0x268>
   11e48:	str	r0, [sp, #12]
   11e4c:	str	r1, [sp, #8]
   11e50:	b	11e68 <print_object@@Base+0xc34>
   11e54:	mov	r0, #0
   11e58:	mov	r1, r0
   11e5c:	str	r1, [sp, #12]
   11e60:	str	r0, [sp, #8]
   11e64:	b	11e68 <print_object@@Base+0xc34>
   11e68:	ldr	r0, [sp, #8]
   11e6c:	ldr	r1, [sp, #12]
   11e70:	str	r0, [sp, #4]
   11e74:	mov	r0, r1
   11e78:	ldr	r1, [sp, #4]
   11e7c:	mov	sp, fp
   11e80:	pop	{fp, pc}
   11e84:	andeq	r2, r0, sl, lsl pc
   11e88:	andeq	r2, r0, r8, lsr pc
   11e8c:	ldrdeq	r3, [r0], -r0
   11e90:	push	{fp, lr}
   11e94:	mov	fp, sp
   11e98:	sub	sp, sp, #16
   11e9c:	str	r0, [fp, #-4]
   11ea0:	movw	r0, #0
   11ea4:	strh	r0, [fp, #-6]
   11ea8:	ldr	r0, [fp, #-4]
   11eac:	movw	r1, #0
   11eb0:	cmp	r0, r1
   11eb4:	beq	11ec0 <print_object@@Base+0xc8c>
   11eb8:	b	11ebc <print_object@@Base+0xc88>
   11ebc:	b	11ee0 <print_object@@Base+0xcac>
   11ec0:	ldr	r0, [pc, #136]	; 11f50 <print_object@@Base+0xd1c>
   11ec4:	add	r0, pc, r0
   11ec8:	ldr	r1, [pc, #132]	; 11f54 <print_object@@Base+0xd20>
   11ecc:	add	r1, pc, r1
   11ed0:	ldr	r2, [pc, #128]	; 11f58 <print_object@@Base+0xd24>
   11ed4:	add	r3, pc, r2
   11ed8:	movw	r2, #205	; 0xcd
   11edc:	bl	109b4 <__assert_fail@plt>
   11ee0:	mov	r0, #5
   11ee4:	strh	r0, [sp, #8]
   11ee8:	ldr	r0, [fp, #-4]
   11eec:	str	r0, [sp]
   11ef0:	bl	145b8 <main@@Base+0xbc>
   11ef4:	ldr	r1, [sp]
   11ef8:	sub	r0, r1, r0
   11efc:	str	r0, [sp, #4]
   11f00:	ldr	r0, [sp, #4]
   11f04:	bl	145dc <main@@Base+0xe0>
   11f08:	ldrh	r1, [sp, #8]
   11f0c:	add	r1, r1, #3
   11f10:	lsl	r1, r1, #1
   11f14:	cmp	r0, r1
   11f18:	bcc	11f34 <print_object@@Base+0xd00>
   11f1c:	ldr	r0, [sp, #4]
   11f20:	ldrh	r1, [sp, #8]
   11f24:	add	r0, r0, r1, lsl #1
   11f28:	add	r0, r0, #4
   11f2c:	bl	145dc <main@@Base+0xe0>
   11f30:	strh	r0, [fp, #-6]
   11f34:	ldrh	r0, [fp, #-6]
   11f38:	cmp	r0, #0
   11f3c:	movw	r0, #0
   11f40:	movne	r0, #1
   11f44:	and	r0, r0, #1
   11f48:	mov	sp, fp
   11f4c:	pop	{fp, pc}
   11f50:	andeq	r2, r0, r2, lsl lr
   11f54:	andeq	r2, r0, r0, lsr lr
   11f58:	andeq	r3, r0, fp, lsl #6
   11f5c:	nop	{0}
   11f60:	push	{fp, lr}
   11f64:	mov	fp, sp
   11f68:	sub	sp, sp, #24
   11f6c:	str	r0, [fp, #-4]
   11f70:	movw	r0, #0
   11f74:	strh	r0, [fp, #-6]
   11f78:	ldr	r0, [fp, #-4]
   11f7c:	movw	r1, #0
   11f80:	cmp	r0, r1
   11f84:	beq	11f90 <print_object@@Base+0xd5c>
   11f88:	b	11f8c <print_object@@Base+0xd58>
   11f8c:	b	11fb0 <print_object@@Base+0xd7c>
   11f90:	ldr	r0, [pc, #184]	; 12050 <print_object@@Base+0xe1c>
   11f94:	add	r0, pc, r0
   11f98:	ldr	r1, [pc, #180]	; 12054 <print_object@@Base+0xe20>
   11f9c:	add	r1, pc, r1
   11fa0:	ldr	r2, [pc, #176]	; 12058 <print_object@@Base+0xe24>
   11fa4:	add	r3, pc, r2
   11fa8:	movw	r2, #205	; 0xcd
   11fac:	bl	109b4 <__assert_fail@plt>
   11fb0:	mov	r0, #5
   11fb4:	strh	r0, [fp, #-8]
   11fb8:	ldr	r0, [fp, #-4]
   11fbc:	str	r0, [sp, #8]
   11fc0:	bl	145b8 <main@@Base+0xbc>
   11fc4:	ldr	r1, [sp, #8]
   11fc8:	sub	r0, r1, r0
   11fcc:	str	r0, [sp, #12]
   11fd0:	ldr	r0, [sp, #12]
   11fd4:	bl	145dc <main@@Base+0xe0>
   11fd8:	ldrh	r1, [fp, #-8]
   11fdc:	add	r1, r1, #3
   11fe0:	lsl	r1, r1, #1
   11fe4:	cmp	r0, r1
   11fe8:	bcc	12004 <print_object@@Base+0xdd0>
   11fec:	ldr	r0, [sp, #12]
   11ff0:	ldrh	r1, [fp, #-8]
   11ff4:	add	r0, r0, r1, lsl #1
   11ff8:	add	r0, r0, #4
   11ffc:	bl	145dc <main@@Base+0xe0>
   12000:	strh	r0, [fp, #-6]
   12004:	ldrh	r0, [fp, #-6]
   12008:	cmp	r0, #0
   1200c:	beq	12028 <print_object@@Base+0xdf4>
   12010:	ldr	r0, [fp, #-4]
   12014:	ldrh	r1, [fp, #-6]
   12018:	add	r0, r0, r1
   1201c:	bl	147b4 <main@@Base+0x2b8>
   12020:	vstr	d0, [sp]
   12024:	b	12034 <print_object@@Base+0xe00>
   12028:	vldr	d16, [pc, #24]	; 12048 <print_object@@Base+0xe14>
   1202c:	vstr	d16, [sp]
   12030:	b	12034 <print_object@@Base+0xe00>
   12034:	vldr	d16, [sp]
   12038:	vmov.f64	d0, d16
   1203c:	mov	sp, fp
   12040:	pop	{fp, pc}
   12044:	nop	{0}
	...
   12050:	andeq	r2, r0, r2, asr #26
   12054:	andeq	r2, r0, r0, ror #26
   12058:	andeq	r3, r0, r2, lsl #5
   1205c:	push	{fp, lr}
   12060:	mov	fp, sp
   12064:	sub	sp, sp, #16
   12068:	str	r0, [fp, #-4]
   1206c:	movw	r0, #0
   12070:	strh	r0, [fp, #-6]
   12074:	ldr	r0, [fp, #-4]
   12078:	movw	r1, #0
   1207c:	cmp	r0, r1
   12080:	beq	1208c <print_object@@Base+0xe58>
   12084:	b	12088 <print_object@@Base+0xe54>
   12088:	b	120ac <print_object@@Base+0xe78>
   1208c:	ldr	r0, [pc, #136]	; 1211c <print_object@@Base+0xee8>
   12090:	add	r0, pc, r0
   12094:	ldr	r1, [pc, #132]	; 12120 <print_object@@Base+0xeec>
   12098:	add	r1, pc, r1
   1209c:	ldr	r2, [pc, #128]	; 12124 <print_object@@Base+0xef0>
   120a0:	add	r3, pc, r2
   120a4:	movw	r2, #207	; 0xcf
   120a8:	bl	109b4 <__assert_fail@plt>
   120ac:	mov	r0, #7
   120b0:	strh	r0, [sp, #8]
   120b4:	ldr	r0, [fp, #-4]
   120b8:	str	r0, [sp]
   120bc:	bl	145b8 <main@@Base+0xbc>
   120c0:	ldr	r1, [sp]
   120c4:	sub	r0, r1, r0
   120c8:	str	r0, [sp, #4]
   120cc:	ldr	r0, [sp, #4]
   120d0:	bl	145dc <main@@Base+0xe0>
   120d4:	ldrh	r1, [sp, #8]
   120d8:	add	r1, r1, #3
   120dc:	lsl	r1, r1, #1
   120e0:	cmp	r0, r1
   120e4:	bcc	12100 <print_object@@Base+0xecc>
   120e8:	ldr	r0, [sp, #4]
   120ec:	ldrh	r1, [sp, #8]
   120f0:	add	r0, r0, r1, lsl #1
   120f4:	add	r0, r0, #4
   120f8:	bl	145dc <main@@Base+0xe0>
   120fc:	strh	r0, [fp, #-6]
   12100:	ldrh	r0, [fp, #-6]
   12104:	cmp	r0, #0
   12108:	movw	r0, #0
   1210c:	movne	r0, #1
   12110:	and	r0, r0, #1
   12114:	mov	sp, fp
   12118:	pop	{fp, pc}
   1211c:	andeq	r2, r0, r6, asr #24
   12120:	andeq	r2, r0, r4, ror #24
   12124:	andeq	r3, r0, r5, asr #3
   12128:	push	{fp, lr}
   1212c:	mov	fp, sp
   12130:	sub	sp, sp, #24
   12134:	str	r0, [fp, #-4]
   12138:	movw	r0, #0
   1213c:	strh	r0, [fp, #-6]
   12140:	ldr	r0, [fp, #-4]
   12144:	movw	r1, #0
   12148:	cmp	r0, r1
   1214c:	beq	12158 <print_object@@Base+0xf24>
   12150:	b	12154 <print_object@@Base+0xf20>
   12154:	b	12178 <print_object@@Base+0xf44>
   12158:	ldr	r0, [pc, #176]	; 12210 <print_object@@Base+0xfdc>
   1215c:	add	r0, pc, r0
   12160:	ldr	r1, [pc, #172]	; 12214 <print_object@@Base+0xfe0>
   12164:	add	r1, pc, r1
   12168:	ldr	r2, [pc, #168]	; 12218 <print_object@@Base+0xfe4>
   1216c:	add	r3, pc, r2
   12170:	movw	r2, #207	; 0xcf
   12174:	bl	109b4 <__assert_fail@plt>
   12178:	mov	r0, #7
   1217c:	strh	r0, [fp, #-8]
   12180:	ldr	r0, [fp, #-4]
   12184:	str	r0, [sp, #8]
   12188:	bl	145b8 <main@@Base+0xbc>
   1218c:	ldr	r1, [sp, #8]
   12190:	sub	r0, r1, r0
   12194:	str	r0, [sp, #12]
   12198:	ldr	r0, [sp, #12]
   1219c:	bl	145dc <main@@Base+0xe0>
   121a0:	ldrh	r1, [fp, #-8]
   121a4:	add	r1, r1, #3
   121a8:	lsl	r1, r1, #1
   121ac:	cmp	r0, r1
   121b0:	bcc	121cc <print_object@@Base+0xf98>
   121b4:	ldr	r0, [sp, #12]
   121b8:	ldrh	r1, [fp, #-8]
   121bc:	add	r0, r0, r1, lsl #1
   121c0:	add	r0, r0, #4
   121c4:	bl	145dc <main@@Base+0xe0>
   121c8:	strh	r0, [fp, #-6]
   121cc:	ldrh	r0, [fp, #-6]
   121d0:	cmp	r0, #0
   121d4:	beq	121f4 <print_object@@Base+0xfc0>
   121d8:	ldr	r0, [fp, #-4]
   121dc:	ldrh	r1, [fp, #-6]
   121e0:	add	r0, r0, r1
   121e4:	bl	147f4 <main@@Base+0x2f8>
   121e8:	and	r0, r0, #255	; 0xff
   121ec:	str	r0, [sp, #4]
   121f0:	b	12200 <print_object@@Base+0xfcc>
   121f4:	movw	r0, #0
   121f8:	str	r0, [sp, #4]
   121fc:	b	12200 <print_object@@Base+0xfcc>
   12200:	ldr	r0, [sp, #4]
   12204:	and	r0, r0, #255	; 0xff
   12208:	mov	sp, fp
   1220c:	pop	{fp, pc}
   12210:	andeq	r2, r0, sl, ror fp
   12214:	muleq	r0, r8, fp
   12218:	andeq	r3, r0, ip, lsr r1
   1221c:	push	{fp, lr}
   12220:	mov	fp, sp
   12224:	sub	sp, sp, #16
   12228:	str	r0, [fp, #-4]
   1222c:	movw	r0, #0
   12230:	strh	r0, [fp, #-6]
   12234:	ldr	r0, [fp, #-4]
   12238:	movw	r1, #0
   1223c:	cmp	r0, r1
   12240:	beq	1224c <print_object@@Base+0x1018>
   12244:	b	12248 <print_object@@Base+0x1014>
   12248:	b	1226c <print_object@@Base+0x1038>
   1224c:	ldr	r0, [pc, #136]	; 122dc <print_object@@Base+0x10a8>
   12250:	add	r0, pc, r0
   12254:	ldr	r1, [pc, #132]	; 122e0 <print_object@@Base+0x10ac>
   12258:	add	r1, pc, r1
   1225c:	ldr	r2, [pc, #128]	; 122e4 <print_object@@Base+0x10b0>
   12260:	add	r3, pc, r2
   12264:	movw	r2, #208	; 0xd0
   12268:	bl	109b4 <__assert_fail@plt>
   1226c:	mov	r0, #8
   12270:	strh	r0, [sp, #8]
   12274:	ldr	r0, [fp, #-4]
   12278:	str	r0, [sp]
   1227c:	bl	145b8 <main@@Base+0xbc>
   12280:	ldr	r1, [sp]
   12284:	sub	r0, r1, r0
   12288:	str	r0, [sp, #4]
   1228c:	ldr	r0, [sp, #4]
   12290:	bl	145dc <main@@Base+0xe0>
   12294:	ldrh	r1, [sp, #8]
   12298:	add	r1, r1, #3
   1229c:	lsl	r1, r1, #1
   122a0:	cmp	r0, r1
   122a4:	bcc	122c0 <print_object@@Base+0x108c>
   122a8:	ldr	r0, [sp, #4]
   122ac:	ldrh	r1, [sp, #8]
   122b0:	add	r0, r0, r1, lsl #1
   122b4:	add	r0, r0, #4
   122b8:	bl	145dc <main@@Base+0xe0>
   122bc:	strh	r0, [fp, #-6]
   122c0:	ldrh	r0, [fp, #-6]
   122c4:	cmp	r0, #0
   122c8:	movw	r0, #0
   122cc:	movne	r0, #1
   122d0:	and	r0, r0, #1
   122d4:	mov	sp, fp
   122d8:	pop	{fp, pc}
   122dc:	andeq	r2, r0, r6, lsl #21
   122e0:	andeq	r2, r0, r4, lsr #21
   122e4:	andeq	r3, r0, pc, lsl #1
   122e8:	push	{fp, lr}
   122ec:	mov	fp, sp
   122f0:	sub	sp, sp, #24
   122f4:	str	r0, [fp, #-4]
   122f8:	movw	r0, #0
   122fc:	strh	r0, [fp, #-6]
   12300:	ldr	r0, [fp, #-4]
   12304:	movw	r1, #0
   12308:	cmp	r0, r1
   1230c:	beq	12318 <print_object@@Base+0x10e4>
   12310:	b	12314 <print_object@@Base+0x10e0>
   12314:	b	12338 <print_object@@Base+0x1104>
   12318:	ldr	r0, [pc, #176]	; 123d0 <print_object@@Base+0x119c>
   1231c:	add	r0, pc, r0
   12320:	ldr	r1, [pc, #172]	; 123d4 <print_object@@Base+0x11a0>
   12324:	add	r1, pc, r1
   12328:	ldr	r2, [pc, #168]	; 123d8 <print_object@@Base+0x11a4>
   1232c:	add	r3, pc, r2
   12330:	movw	r2, #208	; 0xd0
   12334:	bl	109b4 <__assert_fail@plt>
   12338:	mov	r0, #8
   1233c:	strh	r0, [fp, #-8]
   12340:	ldr	r0, [fp, #-4]
   12344:	str	r0, [sp, #8]
   12348:	bl	145b8 <main@@Base+0xbc>
   1234c:	ldr	r1, [sp, #8]
   12350:	sub	r0, r1, r0
   12354:	str	r0, [sp, #12]
   12358:	ldr	r0, [sp, #12]
   1235c:	bl	145dc <main@@Base+0xe0>
   12360:	ldrh	r1, [fp, #-8]
   12364:	add	r1, r1, #3
   12368:	lsl	r1, r1, #1
   1236c:	cmp	r0, r1
   12370:	bcc	1238c <print_object@@Base+0x1158>
   12374:	ldr	r0, [sp, #12]
   12378:	ldrh	r1, [fp, #-8]
   1237c:	add	r0, r0, r1, lsl #1
   12380:	add	r0, r0, #4
   12384:	bl	145dc <main@@Base+0xe0>
   12388:	strh	r0, [fp, #-6]
   1238c:	ldrh	r0, [fp, #-6]
   12390:	cmp	r0, #0
   12394:	beq	123b4 <print_object@@Base+0x1180>
   12398:	ldr	r0, [fp, #-4]
   1239c:	ldrh	r1, [fp, #-6]
   123a0:	add	r0, r0, r1
   123a4:	bl	147f4 <main@@Base+0x2f8>
   123a8:	and	r0, r0, #255	; 0xff
   123ac:	str	r0, [sp, #4]
   123b0:	b	123c0 <print_object@@Base+0x118c>
   123b4:	movw	r0, #0
   123b8:	str	r0, [sp, #4]
   123bc:	b	123c0 <print_object@@Base+0x118c>
   123c0:	ldr	r0, [sp, #4]
   123c4:	and	r0, r0, #255	; 0xff
   123c8:	mov	sp, fp
   123cc:	pop	{fp, pc}
   123d0:			; <UNDEFINED> instruction: 0x000029ba
   123d4:	ldrdeq	r2, [r0], -r8
   123d8:	andeq	r3, r0, r1
   123dc:	push	{fp, lr}
   123e0:	mov	fp, sp
   123e4:	sub	sp, sp, #16
   123e8:	str	r0, [fp, #-4]
   123ec:	movw	r0, #0
   123f0:	strh	r0, [fp, #-6]
   123f4:	ldr	r0, [fp, #-4]
   123f8:	movw	r1, #0
   123fc:	cmp	r0, r1
   12400:	beq	1240c <print_object@@Base+0x11d8>
   12404:	b	12408 <print_object@@Base+0x11d4>
   12408:	b	1242c <print_object@@Base+0x11f8>
   1240c:	ldr	r0, [pc, #136]	; 1249c <print_object@@Base+0x1268>
   12410:	add	r0, pc, r0
   12414:	ldr	r1, [pc, #132]	; 124a0 <print_object@@Base+0x126c>
   12418:	add	r1, pc, r1
   1241c:	ldr	r2, [pc, #128]	; 124a4 <print_object@@Base+0x1270>
   12420:	add	r3, pc, r2
   12424:	movw	r2, #225	; 0xe1
   12428:	bl	109b4 <__assert_fail@plt>
   1242c:	mov	r0, #2
   12430:	strh	r0, [sp, #8]
   12434:	ldr	r0, [fp, #-4]
   12438:	str	r0, [sp]
   1243c:	bl	145b8 <main@@Base+0xbc>
   12440:	ldr	r1, [sp]
   12444:	sub	r0, r1, r0
   12448:	str	r0, [sp, #4]
   1244c:	ldr	r0, [sp, #4]
   12450:	bl	145dc <main@@Base+0xe0>
   12454:	ldrh	r1, [sp, #8]
   12458:	add	r1, r1, #3
   1245c:	lsl	r1, r1, #1
   12460:	cmp	r0, r1
   12464:	bcc	12480 <print_object@@Base+0x124c>
   12468:	ldr	r0, [sp, #4]
   1246c:	ldrh	r1, [sp, #8]
   12470:	add	r0, r0, r1, lsl #1
   12474:	add	r0, r0, #4
   12478:	bl	145dc <main@@Base+0xe0>
   1247c:	strh	r0, [fp, #-6]
   12480:	ldrh	r0, [fp, #-6]
   12484:	cmp	r0, #0
   12488:	movw	r0, #0
   1248c:	movne	r0, #1
   12490:	and	r0, r0, #1
   12494:	mov	sp, fp
   12498:	pop	{fp, pc}
   1249c:	andeq	r2, r0, r6, asr #17
   124a0:	andeq	r2, r0, r4, ror #17
   124a4:	andeq	r2, r0, pc, asr #30
   124a8:	push	{fp, lr}
   124ac:	mov	fp, sp
   124b0:	sub	sp, sp, #24
   124b4:	str	r0, [fp, #-4]
   124b8:	movw	r0, #0
   124bc:	strh	r0, [fp, #-6]
   124c0:	ldr	r0, [fp, #-4]
   124c4:	movw	r1, #0
   124c8:	cmp	r0, r1
   124cc:	beq	124d8 <print_object@@Base+0x12a4>
   124d0:	b	124d4 <print_object@@Base+0x12a0>
   124d4:	b	124f8 <print_object@@Base+0x12c4>
   124d8:	ldr	r0, [pc, #176]	; 12590 <print_object@@Base+0x135c>
   124dc:	add	r0, pc, r0
   124e0:	ldr	r1, [pc, #172]	; 12594 <print_object@@Base+0x1360>
   124e4:	add	r1, pc, r1
   124e8:	ldr	r2, [pc, #168]	; 12598 <print_object@@Base+0x1364>
   124ec:	add	r3, pc, r2
   124f0:	movw	r2, #225	; 0xe1
   124f4:	bl	109b4 <__assert_fail@plt>
   124f8:	mov	r0, #2
   124fc:	strh	r0, [fp, #-8]
   12500:	ldr	r0, [fp, #-4]
   12504:	str	r0, [sp, #8]
   12508:	bl	145b8 <main@@Base+0xbc>
   1250c:	ldr	r1, [sp, #8]
   12510:	sub	r0, r1, r0
   12514:	str	r0, [sp, #12]
   12518:	ldr	r0, [sp, #12]
   1251c:	bl	145dc <main@@Base+0xe0>
   12520:	ldrh	r1, [fp, #-8]
   12524:	add	r1, r1, #3
   12528:	lsl	r1, r1, #1
   1252c:	cmp	r0, r1
   12530:	bcc	1254c <print_object@@Base+0x1318>
   12534:	ldr	r0, [sp, #12]
   12538:	ldrh	r1, [fp, #-8]
   1253c:	add	r0, r0, r1, lsl #1
   12540:	add	r0, r0, #4
   12544:	bl	145dc <main@@Base+0xe0>
   12548:	strh	r0, [fp, #-6]
   1254c:	ldrh	r0, [fp, #-6]
   12550:	cmp	r0, #0
   12554:	beq	12574 <print_object@@Base+0x1340>
   12558:	ldr	r0, [fp, #-4]
   1255c:	ldrh	r1, [fp, #-6]
   12560:	add	r0, r0, r1
   12564:	bl	147f4 <main@@Base+0x2f8>
   12568:	and	r0, r0, #255	; 0xff
   1256c:	str	r0, [sp, #4]
   12570:	b	12580 <print_object@@Base+0x134c>
   12574:	movw	r0, #0
   12578:	str	r0, [sp, #4]
   1257c:	b	12580 <print_object@@Base+0x134c>
   12580:	ldr	r0, [sp, #4]
   12584:	and	r0, r0, #255	; 0xff
   12588:	mov	sp, fp
   1258c:	pop	{fp, pc}
   12590:	strdeq	r2, [r0], -sl
   12594:	andeq	r2, r0, r8, lsl r8
   12598:	andeq	r2, r0, r9, asr #29
   1259c:	push	{fp, lr}
   125a0:	mov	fp, sp
   125a4:	sub	sp, sp, #16
   125a8:	str	r0, [fp, #-4]
   125ac:	movw	r0, #0
   125b0:	strh	r0, [fp, #-6]
   125b4:	ldr	r0, [fp, #-4]
   125b8:	movw	r1, #0
   125bc:	cmp	r0, r1
   125c0:	beq	125cc <print_object@@Base+0x1398>
   125c4:	b	125c8 <print_object@@Base+0x1394>
   125c8:	b	125ec <print_object@@Base+0x13b8>
   125cc:	ldr	r0, [pc, #136]	; 1265c <print_object@@Base+0x1428>
   125d0:	add	r0, pc, r0
   125d4:	ldr	r1, [pc, #132]	; 12660 <print_object@@Base+0x142c>
   125d8:	add	r1, pc, r1
   125dc:	ldr	r2, [pc, #128]	; 12664 <print_object@@Base+0x1430>
   125e0:	add	r3, pc, r2
   125e4:	movw	r2, #226	; 0xe2
   125e8:	bl	109b4 <__assert_fail@plt>
   125ec:	mov	r0, #3
   125f0:	strh	r0, [sp, #8]
   125f4:	ldr	r0, [fp, #-4]
   125f8:	str	r0, [sp]
   125fc:	bl	145b8 <main@@Base+0xbc>
   12600:	ldr	r1, [sp]
   12604:	sub	r0, r1, r0
   12608:	str	r0, [sp, #4]
   1260c:	ldr	r0, [sp, #4]
   12610:	bl	145dc <main@@Base+0xe0>
   12614:	ldrh	r1, [sp, #8]
   12618:	add	r1, r1, #3
   1261c:	lsl	r1, r1, #1
   12620:	cmp	r0, r1
   12624:	bcc	12640 <print_object@@Base+0x140c>
   12628:	ldr	r0, [sp, #4]
   1262c:	ldrh	r1, [sp, #8]
   12630:	add	r0, r0, r1, lsl #1
   12634:	add	r0, r0, #4
   12638:	bl	145dc <main@@Base+0xe0>
   1263c:	strh	r0, [fp, #-6]
   12640:	ldrh	r0, [fp, #-6]
   12644:	cmp	r0, #0
   12648:	movw	r0, #0
   1264c:	movne	r0, #1
   12650:	and	r0, r0, #1
   12654:	mov	sp, fp
   12658:	pop	{fp, pc}
   1265c:	andeq	r2, r0, r6, lsl #14
   12660:	andeq	r2, r0, r4, lsr #14
   12664:	andeq	r2, r0, pc, lsl lr
   12668:	push	{fp, lr}
   1266c:	mov	fp, sp
   12670:	sub	sp, sp, #24
   12674:	str	r0, [fp, #-4]
   12678:	movw	r0, #0
   1267c:	strh	r0, [fp, #-6]
   12680:	ldr	r0, [fp, #-4]
   12684:	movw	r1, #0
   12688:	cmp	r0, r1
   1268c:	beq	12698 <print_object@@Base+0x1464>
   12690:	b	12694 <print_object@@Base+0x1460>
   12694:	b	126b8 <print_object@@Base+0x1484>
   12698:	ldr	r0, [pc, #168]	; 12748 <print_object@@Base+0x1514>
   1269c:	add	r0, pc, r0
   126a0:	ldr	r1, [pc, #164]	; 1274c <print_object@@Base+0x1518>
   126a4:	add	r1, pc, r1
   126a8:	ldr	r2, [pc, #160]	; 12750 <print_object@@Base+0x151c>
   126ac:	add	r3, pc, r2
   126b0:	movw	r2, #226	; 0xe2
   126b4:	bl	109b4 <__assert_fail@plt>
   126b8:	mov	r0, #3
   126bc:	strh	r0, [fp, #-8]
   126c0:	ldr	r0, [fp, #-4]
   126c4:	str	r0, [sp, #8]
   126c8:	bl	145b8 <main@@Base+0xbc>
   126cc:	ldr	r1, [sp, #8]
   126d0:	sub	r0, r1, r0
   126d4:	str	r0, [sp, #12]
   126d8:	ldr	r0, [sp, #12]
   126dc:	bl	145dc <main@@Base+0xe0>
   126e0:	ldrh	r1, [fp, #-8]
   126e4:	add	r1, r1, #3
   126e8:	lsl	r1, r1, #1
   126ec:	cmp	r0, r1
   126f0:	bcc	1270c <print_object@@Base+0x14d8>
   126f4:	ldr	r0, [sp, #12]
   126f8:	ldrh	r1, [fp, #-8]
   126fc:	add	r0, r0, r1, lsl #1
   12700:	add	r0, r0, #4
   12704:	bl	145dc <main@@Base+0xe0>
   12708:	strh	r0, [fp, #-6]
   1270c:	ldrh	r0, [fp, #-6]
   12710:	cmp	r0, #0
   12714:	beq	12730 <print_object@@Base+0x14fc>
   12718:	ldr	r0, [fp, #-4]
   1271c:	ldrh	r1, [fp, #-6]
   12720:	add	r0, r0, r1
   12724:	bl	14668 <main@@Base+0x16c>
   12728:	str	r0, [sp, #4]
   1272c:	b	1273c <print_object@@Base+0x1508>
   12730:	movw	r0, #0
   12734:	str	r0, [sp, #4]
   12738:	b	1273c <print_object@@Base+0x1508>
   1273c:	ldr	r0, [sp, #4]
   12740:	mov	sp, fp
   12744:	pop	{fp, pc}
   12748:	andeq	r2, r0, sl, lsr r6
   1274c:	andeq	r2, r0, r8, asr r6
   12750:	muleq	r0, r8, sp
   12754:	push	{fp, lr}
   12758:	mov	fp, sp
   1275c:	sub	sp, sp, #16
   12760:	str	r0, [fp, #-4]
   12764:	movw	r0, #0
   12768:	strh	r0, [fp, #-6]
   1276c:	ldr	r0, [fp, #-4]
   12770:	movw	r1, #0
   12774:	cmp	r0, r1
   12778:	beq	12784 <print_object@@Base+0x1550>
   1277c:	b	12780 <print_object@@Base+0x154c>
   12780:	b	127a4 <print_object@@Base+0x1570>
   12784:	ldr	r0, [pc, #136]	; 12814 <print_object@@Base+0x15e0>
   12788:	add	r0, pc, r0
   1278c:	ldr	r1, [pc, #132]	; 12818 <print_object@@Base+0x15e4>
   12790:	add	r1, pc, r1
   12794:	ldr	r2, [pc, #128]	; 1281c <print_object@@Base+0x15e8>
   12798:	add	r3, pc, r2
   1279c:	movw	r2, #227	; 0xe3
   127a0:	bl	109b4 <__assert_fail@plt>
   127a4:	mov	r0, #4
   127a8:	strh	r0, [sp, #8]
   127ac:	ldr	r0, [fp, #-4]
   127b0:	str	r0, [sp]
   127b4:	bl	145b8 <main@@Base+0xbc>
   127b8:	ldr	r1, [sp]
   127bc:	sub	r0, r1, r0
   127c0:	str	r0, [sp, #4]
   127c4:	ldr	r0, [sp, #4]
   127c8:	bl	145dc <main@@Base+0xe0>
   127cc:	ldrh	r1, [sp, #8]
   127d0:	add	r1, r1, #3
   127d4:	lsl	r1, r1, #1
   127d8:	cmp	r0, r1
   127dc:	bcc	127f8 <print_object@@Base+0x15c4>
   127e0:	ldr	r0, [sp, #4]
   127e4:	ldrh	r1, [sp, #8]
   127e8:	add	r0, r0, r1, lsl #1
   127ec:	add	r0, r0, #4
   127f0:	bl	145dc <main@@Base+0xe0>
   127f4:	strh	r0, [fp, #-6]
   127f8:	ldrh	r0, [fp, #-6]
   127fc:	cmp	r0, #0
   12800:	movw	r0, #0
   12804:	movne	r0, #1
   12808:	and	r0, r0, #1
   1280c:	mov	sp, fp
   12810:	pop	{fp, pc}
   12814:	andeq	r2, r0, lr, asr #10
   12818:	andeq	r2, r0, ip, ror #10
   1281c:	andeq	r2, r0, sl, ror #25
   12820:	push	{fp, lr}
   12824:	mov	fp, sp
   12828:	sub	sp, sp, #24
   1282c:	str	r0, [fp, #-4]
   12830:	movw	r0, #0
   12834:	strh	r0, [fp, #-6]
   12838:	ldr	r0, [fp, #-4]
   1283c:	movw	r1, #0
   12840:	cmp	r0, r1
   12844:	beq	12850 <print_object@@Base+0x161c>
   12848:	b	1284c <print_object@@Base+0x1618>
   1284c:	b	12870 <print_object@@Base+0x163c>
   12850:	ldr	r0, [pc, #168]	; 12900 <print_object@@Base+0x16cc>
   12854:	add	r0, pc, r0
   12858:	ldr	r1, [pc, #164]	; 12904 <print_object@@Base+0x16d0>
   1285c:	add	r1, pc, r1
   12860:	ldr	r2, [pc, #160]	; 12908 <print_object@@Base+0x16d4>
   12864:	add	r3, pc, r2
   12868:	movw	r2, #227	; 0xe3
   1286c:	bl	109b4 <__assert_fail@plt>
   12870:	mov	r0, #4
   12874:	strh	r0, [fp, #-8]
   12878:	ldr	r0, [fp, #-4]
   1287c:	str	r0, [sp, #8]
   12880:	bl	145b8 <main@@Base+0xbc>
   12884:	ldr	r1, [sp, #8]
   12888:	sub	r0, r1, r0
   1288c:	str	r0, [sp, #12]
   12890:	ldr	r0, [sp, #12]
   12894:	bl	145dc <main@@Base+0xe0>
   12898:	ldrh	r1, [fp, #-8]
   1289c:	add	r1, r1, #3
   128a0:	lsl	r1, r1, #1
   128a4:	cmp	r0, r1
   128a8:	bcc	128c4 <print_object@@Base+0x1690>
   128ac:	ldr	r0, [sp, #12]
   128b0:	ldrh	r1, [fp, #-8]
   128b4:	add	r0, r0, r1, lsl #1
   128b8:	add	r0, r0, #4
   128bc:	bl	145dc <main@@Base+0xe0>
   128c0:	strh	r0, [fp, #-6]
   128c4:	ldrh	r0, [fp, #-6]
   128c8:	cmp	r0, #0
   128cc:	beq	128e8 <print_object@@Base+0x16b4>
   128d0:	ldr	r0, [fp, #-4]
   128d4:	ldrh	r1, [fp, #-6]
   128d8:	add	r0, r0, r1
   128dc:	bl	14668 <main@@Base+0x16c>
   128e0:	str	r0, [sp, #4]
   128e4:	b	128f4 <print_object@@Base+0x16c0>
   128e8:	movw	r0, #0
   128ec:	str	r0, [sp, #4]
   128f0:	b	128f4 <print_object@@Base+0x16c0>
   128f4:	ldr	r0, [sp, #4]
   128f8:	mov	sp, fp
   128fc:	pop	{fp, pc}
   12900:	andeq	r2, r0, r2, lsl #9
   12904:	andeq	r2, r0, r0, lsr #9
   12908:	andeq	r2, r0, r3, ror #24

0001290c <print_enum@@Base>:
   1290c:	push	{fp, lr}
   12910:	mov	fp, sp
   12914:	sub	sp, sp, #56	; 0x38
   12918:	str	r0, [fp, #-4]
   1291c:	ldr	r0, [fp, #-4]
   12920:	bl	12b3c <print_enum@@Base+0x230>
   12924:	ldr	r1, [pc, #476]	; 12b08 <print_enum@@Base+0x1fc>
   12928:	add	r1, pc, r1
   1292c:	str	r0, [fp, #-20]	; 0xffffffec
   12930:	mov	r0, r1
   12934:	ldr	r1, [fp, #-20]	; 0xffffffec
   12938:	bl	10900 <printf@plt>
   1293c:	ldr	r1, [fp, #-4]
   12940:	str	r0, [fp, #-24]	; 0xffffffe8
   12944:	mov	r0, r1
   12948:	bl	12c5c <print_enum@@Base+0x350>
   1294c:	ldr	r1, [pc, #432]	; 12b04 <print_enum@@Base+0x1f8>
   12950:	add	r1, pc, r1
   12954:	str	r0, [fp, #-8]
   12958:	mov	r0, r1
   1295c:	bl	10900 <printf@plt>
   12960:	movw	r1, #0
   12964:	str	r1, [fp, #-16]
   12968:	ldr	r0, [fp, #-16]
   1296c:	ldr	r1, [fp, #-8]
   12970:	str	r0, [sp, #28]
   12974:	mov	r0, r1
   12978:	bl	12d7c <print_enum@@Base+0x470>
   1297c:	ldr	r1, [sp, #28]
   12980:	cmp	r1, r0
   12984:	bcs	12a68 <print_enum@@Base+0x15c>
   12988:	ldr	r0, [fp, #-8]
   1298c:	ldr	r1, [fp, #-16]
   12990:	bl	12dcc <print_enum@@Base+0x4c0>
   12994:	str	r0, [fp, #-12]
   12998:	ldr	r0, [fp, #-16]
   1299c:	cmp	r0, #0
   129a0:	bls	129b0 <print_enum@@Base+0xa4>
   129a4:	ldr	r0, [pc, #376]	; 12b24 <print_enum@@Base+0x218>
   129a8:	add	r0, pc, r0
   129ac:	bl	10900 <printf@plt>
   129b0:	ldr	r0, [fp, #-12]
   129b4:	bl	12e5c <print_enum@@Base+0x550>
   129b8:	ldr	r1, [pc, #360]	; 12b28 <print_enum@@Base+0x21c>
   129bc:	add	r1, pc, r1
   129c0:	str	r0, [sp, #24]
   129c4:	mov	r0, r1
   129c8:	ldr	r1, [sp, #24]
   129cc:	bl	10900 <printf@plt>
   129d0:	ldr	r1, [fp, #-12]
   129d4:	str	r0, [sp, #20]
   129d8:	mov	r0, r1
   129dc:	bl	12f7c <print_enum@@Base+0x670>
   129e0:	cmp	r0, #0
   129e4:	beq	12a1c <print_enum@@Base+0x110>
   129e8:	ldr	r0, [fp, #-12]
   129ec:	bl	13048 <print_enum@@Base+0x73c>
   129f0:	ldr	r2, [pc, #308]	; 12b2c <print_enum@@Base+0x220>
   129f4:	add	r2, pc, r2
   129f8:	ldr	r3, [pc, #312]	; 12b38 <print_enum@@Base+0x22c>
   129fc:	add	r3, pc, r3
   12a00:	str	r0, [sp, #16]
   12a04:	mov	r0, r3
   12a08:	ldr	r3, [sp, #16]
   12a0c:	str	r2, [sp, #12]
   12a10:	mov	r2, r3
   12a14:	mov	r3, r1
   12a18:	bl	10900 <printf@plt>
   12a1c:	ldr	r0, [fp, #-12]
   12a20:	bl	13150 <print_enum@@Base+0x844>
   12a24:	cmp	r0, #0
   12a28:	beq	12a4c <print_enum@@Base+0x140>
   12a2c:	ldr	r0, [pc, #252]	; 12b30 <print_enum@@Base+0x224>
   12a30:	add	r0, pc, r0
   12a34:	bl	10900 <printf@plt>
   12a38:	ldr	r1, [fp, #-12]
   12a3c:	str	r0, [sp, #8]
   12a40:	mov	r0, r1
   12a44:	bl	1321c <print_enum@@Base+0x910>
   12a48:	bl	11234 <print_object@@Base>
   12a4c:	ldr	r0, [pc, #224]	; 12b34 <print_enum@@Base+0x228>
   12a50:	add	r0, pc, r0
   12a54:	bl	10900 <printf@plt>
   12a58:	ldr	r0, [fp, #-16]
   12a5c:	add	r0, r0, #1
   12a60:	str	r0, [fp, #-16]
   12a64:	b	12968 <print_enum@@Base+0x5c>
   12a68:	ldr	r0, [pc, #156]	; 12b0c <print_enum@@Base+0x200>
   12a6c:	add	r0, pc, r0
   12a70:	bl	10900 <printf@plt>
   12a74:	ldr	r1, [fp, #-4]
   12a78:	str	r0, [sp, #4]
   12a7c:	mov	r0, r1
   12a80:	bl	13320 <print_enum@@Base+0xa14>
   12a84:	cmp	r0, #0
   12a88:	beq	12ad0 <print_enum@@Base+0x1c4>
   12a8c:	ldr	r0, [fp, #-4]
   12a90:	bl	133ec <print_enum@@Base+0xae0>
   12a94:	ldr	r1, [pc, #116]	; 12b10 <print_enum@@Base+0x204>
   12a98:	add	r1, pc, r1
   12a9c:	ldr	r2, [pc, #112]	; 12b14 <print_enum@@Base+0x208>
   12aa0:	add	r2, pc, r2
   12aa4:	ldr	r3, [pc, #108]	; 12b18 <print_enum@@Base+0x20c>
   12aa8:	add	r3, pc, r3
   12aac:	and	r0, r0, #255	; 0xff
   12ab0:	cmp	r0, #0
   12ab4:	movw	r0, #0
   12ab8:	movne	r0, #1
   12abc:	tst	r0, #1
   12ac0:	movne	r3, r2
   12ac4:	mov	r0, r1
   12ac8:	mov	r1, r3
   12acc:	bl	10900 <printf@plt>
   12ad0:	ldr	r0, [pc, #72]	; 12b20 <print_enum@@Base+0x214>
   12ad4:	add	r0, pc, r0
   12ad8:	bl	10900 <printf@plt>
   12adc:	ldr	r1, [fp, #-4]
   12ae0:	str	r0, [sp]
   12ae4:	mov	r0, r1
   12ae8:	bl	134e0 <print_enum@@Base+0xbd4>
   12aec:	bl	10ab0 <print_type@@Base>
   12af0:	ldr	r0, [pc, #36]	; 12b1c <print_enum@@Base+0x210>
   12af4:	add	r0, pc, r0
   12af8:	bl	10900 <printf@plt>
   12afc:	mov	sp, fp
   12b00:	pop	{fp, pc}
   12b04:	andeq	r2, r0, ip, lsr #2
   12b08:	muleq	r0, r9, r0
   12b0c:	andeq	r1, r0, r0, ror #31
   12b10:	andeq	r2, r0, r9
   12b14:	muleq	r0, r7, pc	; <UNPREDICTABLE>
   12b18:	muleq	r0, r4, pc	; <UNPREDICTABLE>
   12b1c:	andeq	r1, r0, fp, asr #29
   12b20:	ldrdeq	r1, [r0], -ip
   12b24:	andeq	r1, r0, sl, ror #31
   12b28:	andeq	r2, r0, r5
   12b2c:	muleq	r0, r4, r0
   12b30:	andeq	r2, r0, r6, rrx
   12b34:	andeq	r1, r0, pc, ror #30
   12b38:	andeq	r2, r0, ip, lsl #1
   12b3c:	push	{fp, lr}
   12b40:	mov	fp, sp
   12b44:	sub	sp, sp, #24
   12b48:	str	r0, [fp, #-4]
   12b4c:	movw	r0, #0
   12b50:	strh	r0, [fp, #-10]
   12b54:	ldr	r0, [fp, #-4]
   12b58:	movw	r1, #0
   12b5c:	cmp	r0, r1
   12b60:	beq	12b6c <print_enum@@Base+0x260>
   12b64:	b	12b68 <print_enum@@Base+0x25c>
   12b68:	b	12b8c <print_enum@@Base+0x280>
   12b6c:	ldr	r0, [pc, #208]	; 12c44 <print_enum@@Base+0x338>
   12b70:	add	r0, pc, r0
   12b74:	ldr	r1, [pc, #204]	; 12c48 <print_enum@@Base+0x33c>
   12b78:	add	r1, pc, r1
   12b7c:	ldr	r2, [pc, #200]	; 12c4c <print_enum@@Base+0x340>
   12b80:	add	r3, pc, r2
   12b84:	movw	r2, #177	; 0xb1
   12b88:	bl	109b4 <__assert_fail@plt>
   12b8c:	mov	r0, #0
   12b90:	strh	r0, [sp, #12]
   12b94:	ldr	r0, [fp, #-4]
   12b98:	str	r0, [sp, #4]
   12b9c:	bl	145b8 <main@@Base+0xbc>
   12ba0:	ldr	r1, [sp, #4]
   12ba4:	sub	r0, r1, r0
   12ba8:	str	r0, [sp, #8]
   12bac:	ldr	r0, [sp, #8]
   12bb0:	bl	145dc <main@@Base+0xe0>
   12bb4:	ldrh	r1, [sp, #12]
   12bb8:	add	r1, r1, #3
   12bbc:	lsl	r1, r1, #1
   12bc0:	cmp	r0, r1
   12bc4:	bcc	12be0 <print_enum@@Base+0x2d4>
   12bc8:	ldr	r0, [sp, #8]
   12bcc:	ldrh	r1, [sp, #12]
   12bd0:	add	r0, r0, r1, lsl #1
   12bd4:	add	r0, r0, #4
   12bd8:	bl	145dc <main@@Base+0xe0>
   12bdc:	strh	r0, [fp, #-10]
   12be0:	ldrsh	r0, [fp, #-10]
   12be4:	cmp	r0, #0
   12be8:	beq	12c24 <print_enum@@Base+0x318>
   12bec:	ldr	r0, [fp, #-4]
   12bf0:	ldrh	r1, [fp, #-10]
   12bf4:	add	r0, r0, r1
   12bf8:	str	r0, [fp, #-8]
   12bfc:	ldr	r0, [fp, #-8]
   12c00:	add	r0, r0, #4
   12c04:	ldr	r1, [fp, #-8]
   12c08:	str	r0, [sp]
   12c0c:	mov	r0, r1
   12c10:	bl	146a0 <main@@Base+0x1a4>
   12c14:	ldr	r1, [sp]
   12c18:	add	r0, r1, r0
   12c1c:	mov	sp, fp
   12c20:	pop	{fp, pc}
   12c24:	ldr	r0, [pc, #36]	; 12c50 <print_enum@@Base+0x344>
   12c28:	add	r0, pc, r0
   12c2c:	ldr	r1, [pc, #32]	; 12c54 <print_enum@@Base+0x348>
   12c30:	add	r1, pc, r1
   12c34:	ldr	r2, [pc, #28]	; 12c58 <print_enum@@Base+0x34c>
   12c38:	add	r3, pc, r2
   12c3c:	movw	r2, #177	; 0xb1
   12c40:	bl	109b4 <__assert_fail@plt>
   12c44:	andeq	r2, r0, r6, ror #2
   12c48:	andeq	r2, r0, r4, lsl #3
   12c4c:	andeq	r2, r0, r5, lsl #19
   12c50:	andeq	r2, r0, r6, lsr #6
   12c54:	andeq	r2, r0, ip, asr #1
   12c58:	andeq	r2, r0, sp, asr #17
   12c5c:	push	{fp, lr}
   12c60:	mov	fp, sp
   12c64:	sub	sp, sp, #24
   12c68:	str	r0, [fp, #-4]
   12c6c:	movw	r0, #0
   12c70:	strh	r0, [fp, #-10]
   12c74:	ldr	r0, [fp, #-4]
   12c78:	movw	r1, #0
   12c7c:	cmp	r0, r1
   12c80:	beq	12c8c <print_enum@@Base+0x380>
   12c84:	b	12c88 <print_enum@@Base+0x37c>
   12c88:	b	12cac <print_enum@@Base+0x3a0>
   12c8c:	ldr	r0, [pc, #208]	; 12d64 <print_enum@@Base+0x458>
   12c90:	add	r0, pc, r0
   12c94:	ldr	r1, [pc, #204]	; 12d68 <print_enum@@Base+0x45c>
   12c98:	add	r1, pc, r1
   12c9c:	ldr	r2, [pc, #200]	; 12d6c <print_enum@@Base+0x460>
   12ca0:	add	r3, pc, r2
   12ca4:	movw	r2, #183	; 0xb7
   12ca8:	bl	109b4 <__assert_fail@plt>
   12cac:	mov	r0, #1
   12cb0:	strh	r0, [sp, #12]
   12cb4:	ldr	r0, [fp, #-4]
   12cb8:	str	r0, [sp, #4]
   12cbc:	bl	145b8 <main@@Base+0xbc>
   12cc0:	ldr	r1, [sp, #4]
   12cc4:	sub	r0, r1, r0
   12cc8:	str	r0, [sp, #8]
   12ccc:	ldr	r0, [sp, #8]
   12cd0:	bl	145dc <main@@Base+0xe0>
   12cd4:	ldrh	r1, [sp, #12]
   12cd8:	add	r1, r1, #3
   12cdc:	lsl	r1, r1, #1
   12ce0:	cmp	r0, r1
   12ce4:	bcc	12d00 <print_enum@@Base+0x3f4>
   12ce8:	ldr	r0, [sp, #8]
   12cec:	ldrh	r1, [sp, #12]
   12cf0:	add	r0, r0, r1, lsl #1
   12cf4:	add	r0, r0, #4
   12cf8:	bl	145dc <main@@Base+0xe0>
   12cfc:	strh	r0, [fp, #-10]
   12d00:	ldrsh	r0, [fp, #-10]
   12d04:	cmp	r0, #0
   12d08:	beq	12d44 <print_enum@@Base+0x438>
   12d0c:	ldr	r0, [fp, #-4]
   12d10:	ldrh	r1, [fp, #-10]
   12d14:	add	r0, r0, r1
   12d18:	str	r0, [fp, #-8]
   12d1c:	ldr	r0, [fp, #-8]
   12d20:	add	r0, r0, #4
   12d24:	ldr	r1, [fp, #-8]
   12d28:	str	r0, [sp]
   12d2c:	mov	r0, r1
   12d30:	bl	146a0 <main@@Base+0x1a4>
   12d34:	ldr	r1, [sp]
   12d38:	add	r0, r1, r0
   12d3c:	mov	sp, fp
   12d40:	pop	{fp, pc}
   12d44:	ldr	r0, [pc, #36]	; 12d70 <print_enum@@Base+0x464>
   12d48:	add	r0, pc, r0
   12d4c:	ldr	r1, [pc, #32]	; 12d74 <print_enum@@Base+0x468>
   12d50:	add	r1, pc, r1
   12d54:	ldr	r2, [pc, #28]	; 12d78 <print_enum@@Base+0x46c>
   12d58:	add	r3, pc, r2
   12d5c:	movw	r2, #183	; 0xb7
   12d60:	bl	109b4 <__assert_fail@plt>
   12d64:	andeq	r2, r0, r6, asr #32
   12d68:	andeq	r2, r0, r4, rrx
   12d6c:	andeq	r2, r0, r8, lsr #17
   12d70:	andeq	r2, r0, r6, lsl #4
   12d74:	andeq	r1, r0, ip, lsr #31
   12d78:	strdeq	r2, [r0], -r0
   12d7c:	push	{fp, lr}
   12d80:	mov	fp, sp
   12d84:	sub	sp, sp, #8
   12d88:	str	r0, [sp, #4]
   12d8c:	ldr	r0, [sp, #4]
   12d90:	movw	r1, #0
   12d94:	cmp	r0, r1
   12d98:	beq	12db4 <print_enum@@Base+0x4a8>
   12d9c:	ldr	r0, [sp, #4]
   12da0:	mvn	r1, #3
   12da4:	add	r0, r0, r1
   12da8:	bl	146a0 <main@@Base+0x1a4>
   12dac:	str	r0, [sp]
   12db0:	b	12dc0 <print_enum@@Base+0x4b4>
   12db4:	movw	r0, #0
   12db8:	str	r0, [sp]
   12dbc:	b	12dc0 <print_enum@@Base+0x4b4>
   12dc0:	ldr	r0, [sp]
   12dc4:	mov	sp, fp
   12dc8:	pop	{fp, pc}
   12dcc:	push	{fp, lr}
   12dd0:	mov	fp, sp
   12dd4:	sub	sp, sp, #16
   12dd8:	str	r0, [fp, #-4]
   12ddc:	str	r1, [sp, #8]
   12de0:	ldr	r0, [fp, #-4]
   12de4:	ldr	r1, [sp, #8]
   12de8:	add	r0, r0, r1, lsl #2
   12dec:	str	r0, [sp, #4]
   12df0:	ldr	r0, [fp, #-4]
   12df4:	bl	146d8 <main@@Base+0x1dc>
   12df8:	ldr	r1, [sp, #8]
   12dfc:	cmp	r0, r1
   12e00:	bls	12e0c <print_enum@@Base+0x500>
   12e04:	b	12e08 <print_enum@@Base+0x4fc>
   12e08:	b	12e2c <print_enum@@Base+0x520>
   12e0c:	ldr	r0, [pc, #60]	; 12e50 <print_enum@@Base+0x544>
   12e10:	add	r0, pc, r0
   12e14:	ldr	r1, [pc, #56]	; 12e54 <print_enum@@Base+0x548>
   12e18:	add	r1, pc, r1
   12e1c:	ldr	r2, [pc, #52]	; 12e58 <print_enum@@Base+0x54c>
   12e20:	add	r3, pc, r2
   12e24:	movw	r2, #156	; 0x9c
   12e28:	bl	109b4 <__assert_fail@plt>
   12e2c:	ldr	r0, [sp, #4]
   12e30:	ldr	r1, [sp, #4]
   12e34:	str	r0, [sp]
   12e38:	mov	r0, r1
   12e3c:	bl	146a0 <main@@Base+0x1a4>
   12e40:	ldr	r1, [sp]
   12e44:	add	r0, r1, r0
   12e48:	mov	sp, fp
   12e4c:	pop	{fp, pc}
   12e50:			; <UNDEFINED> instruction: 0x000021b9
   12e54:	andeq	r1, r0, r4, ror #29
   12e58:	andeq	r2, r0, r1, ror r7
   12e5c:	push	{fp, lr}
   12e60:	mov	fp, sp
   12e64:	sub	sp, sp, #24
   12e68:	str	r0, [fp, #-4]
   12e6c:	movw	r0, #0
   12e70:	strh	r0, [fp, #-10]
   12e74:	ldr	r0, [fp, #-4]
   12e78:	movw	r1, #0
   12e7c:	cmp	r0, r1
   12e80:	beq	12e8c <print_enum@@Base+0x580>
   12e84:	b	12e88 <print_enum@@Base+0x57c>
   12e88:	b	12eac <print_enum@@Base+0x5a0>
   12e8c:	ldr	r0, [pc, #208]	; 12f64 <print_enum@@Base+0x658>
   12e90:	add	r0, pc, r0
   12e94:	ldr	r1, [pc, #204]	; 12f68 <print_enum@@Base+0x65c>
   12e98:	add	r1, pc, r1
   12e9c:	ldr	r2, [pc, #200]	; 12f6c <print_enum@@Base+0x660>
   12ea0:	add	r3, pc, r2
   12ea4:	movw	r2, #159	; 0x9f
   12ea8:	bl	109b4 <__assert_fail@plt>
   12eac:	mov	r0, #0
   12eb0:	strh	r0, [sp, #12]
   12eb4:	ldr	r0, [fp, #-4]
   12eb8:	str	r0, [sp, #4]
   12ebc:	bl	145b8 <main@@Base+0xbc>
   12ec0:	ldr	r1, [sp, #4]
   12ec4:	sub	r0, r1, r0
   12ec8:	str	r0, [sp, #8]
   12ecc:	ldr	r0, [sp, #8]
   12ed0:	bl	145dc <main@@Base+0xe0>
   12ed4:	ldrh	r1, [sp, #12]
   12ed8:	add	r1, r1, #3
   12edc:	lsl	r1, r1, #1
   12ee0:	cmp	r0, r1
   12ee4:	bcc	12f00 <print_enum@@Base+0x5f4>
   12ee8:	ldr	r0, [sp, #8]
   12eec:	ldrh	r1, [sp, #12]
   12ef0:	add	r0, r0, r1, lsl #1
   12ef4:	add	r0, r0, #4
   12ef8:	bl	145dc <main@@Base+0xe0>
   12efc:	strh	r0, [fp, #-10]
   12f00:	ldrsh	r0, [fp, #-10]
   12f04:	cmp	r0, #0
   12f08:	beq	12f44 <print_enum@@Base+0x638>
   12f0c:	ldr	r0, [fp, #-4]
   12f10:	ldrh	r1, [fp, #-10]
   12f14:	add	r0, r0, r1
   12f18:	str	r0, [fp, #-8]
   12f1c:	ldr	r0, [fp, #-8]
   12f20:	add	r0, r0, #4
   12f24:	ldr	r1, [fp, #-8]
   12f28:	str	r0, [sp]
   12f2c:	mov	r0, r1
   12f30:	bl	146a0 <main@@Base+0x1a4>
   12f34:	ldr	r1, [sp]
   12f38:	add	r0, r1, r0
   12f3c:	mov	sp, fp
   12f40:	pop	{fp, pc}
   12f44:	ldr	r0, [pc, #36]	; 12f70 <print_enum@@Base+0x664>
   12f48:	add	r0, pc, r0
   12f4c:	ldr	r1, [pc, #32]	; 12f74 <print_enum@@Base+0x668>
   12f50:	add	r1, pc, r1
   12f54:	ldr	r2, [pc, #28]	; 12f78 <print_enum@@Base+0x66c>
   12f58:	add	r3, pc, r2
   12f5c:	movw	r2, #159	; 0x9f
   12f60:	bl	109b4 <__assert_fail@plt>
   12f64:	andeq	r1, r0, r6, asr #28
   12f68:	andeq	r1, r0, r4, ror #28
   12f6c:	andeq	r2, r0, r8, asr #14
   12f70:	andeq	r2, r0, r6
   12f74:	andeq	r1, r0, ip, lsr #27
   12f78:	muleq	r0, r0, r6
   12f7c:	push	{fp, lr}
   12f80:	mov	fp, sp
   12f84:	sub	sp, sp, #16
   12f88:	str	r0, [fp, #-4]
   12f8c:	movw	r0, #0
   12f90:	strh	r0, [fp, #-6]
   12f94:	ldr	r0, [fp, #-4]
   12f98:	movw	r1, #0
   12f9c:	cmp	r0, r1
   12fa0:	beq	12fac <print_enum@@Base+0x6a0>
   12fa4:	b	12fa8 <print_enum@@Base+0x69c>
   12fa8:	b	12fcc <print_enum@@Base+0x6c0>
   12fac:	ldr	r0, [pc, #136]	; 1303c <print_enum@@Base+0x730>
   12fb0:	add	r0, pc, r0
   12fb4:	ldr	r1, [pc, #132]	; 13040 <print_enum@@Base+0x734>
   12fb8:	add	r1, pc, r1
   12fbc:	ldr	r2, [pc, #128]	; 13044 <print_enum@@Base+0x738>
   12fc0:	add	r3, pc, r2
   12fc4:	movw	r2, #160	; 0xa0
   12fc8:	bl	109b4 <__assert_fail@plt>
   12fcc:	mov	r0, #1
   12fd0:	strh	r0, [sp, #8]
   12fd4:	ldr	r0, [fp, #-4]
   12fd8:	str	r0, [sp]
   12fdc:	bl	145b8 <main@@Base+0xbc>
   12fe0:	ldr	r1, [sp]
   12fe4:	sub	r0, r1, r0
   12fe8:	str	r0, [sp, #4]
   12fec:	ldr	r0, [sp, #4]
   12ff0:	bl	145dc <main@@Base+0xe0>
   12ff4:	ldrh	r1, [sp, #8]
   12ff8:	add	r1, r1, #3
   12ffc:	lsl	r1, r1, #1
   13000:	cmp	r0, r1
   13004:	bcc	13020 <print_enum@@Base+0x714>
   13008:	ldr	r0, [sp, #4]
   1300c:	ldrh	r1, [sp, #8]
   13010:	add	r0, r0, r1, lsl #1
   13014:	add	r0, r0, #4
   13018:	bl	145dc <main@@Base+0xe0>
   1301c:	strh	r0, [fp, #-6]
   13020:	ldrh	r0, [fp, #-6]
   13024:	cmp	r0, #0
   13028:	movw	r0, #0
   1302c:	movne	r0, #1
   13030:	and	r0, r0, #1
   13034:	mov	sp, fp
   13038:	pop	{fp, pc}
   1303c:	andeq	r1, r0, r6, lsr #26
   13040:	andeq	r1, r0, r4, asr #26
   13044:	andeq	r2, r0, r1, ror r6
   13048:	push	{fp, lr}
   1304c:	mov	fp, sp
   13050:	sub	sp, sp, #32
   13054:	str	r0, [fp, #-4]
   13058:	movw	r0, #0
   1305c:	strh	r0, [fp, #-6]
   13060:	ldr	r0, [fp, #-4]
   13064:	movw	r1, #0
   13068:	cmp	r0, r1
   1306c:	beq	13078 <print_enum@@Base+0x76c>
   13070:	b	13074 <print_enum@@Base+0x768>
   13074:	b	13098 <print_enum@@Base+0x78c>
   13078:	ldr	r0, [pc, #196]	; 13144 <print_enum@@Base+0x838>
   1307c:	add	r0, pc, r0
   13080:	ldr	r1, [pc, #192]	; 13148 <print_enum@@Base+0x83c>
   13084:	add	r1, pc, r1
   13088:	ldr	r2, [pc, #188]	; 1314c <print_enum@@Base+0x840>
   1308c:	add	r3, pc, r2
   13090:	movw	r2, #160	; 0xa0
   13094:	bl	109b4 <__assert_fail@plt>
   13098:	mov	r0, #1
   1309c:	strh	r0, [fp, #-8]
   130a0:	ldr	r0, [fp, #-4]
   130a4:	str	r0, [sp, #16]
   130a8:	bl	145b8 <main@@Base+0xbc>
   130ac:	ldr	r1, [sp, #16]
   130b0:	sub	r0, r1, r0
   130b4:	str	r0, [fp, #-12]
   130b8:	ldr	r0, [fp, #-12]
   130bc:	bl	145dc <main@@Base+0xe0>
   130c0:	ldrh	r1, [fp, #-8]
   130c4:	add	r1, r1, #3
   130c8:	lsl	r1, r1, #1
   130cc:	cmp	r0, r1
   130d0:	bcc	130ec <print_enum@@Base+0x7e0>
   130d4:	ldr	r0, [fp, #-12]
   130d8:	ldrh	r1, [fp, #-8]
   130dc:	add	r0, r0, r1, lsl #1
   130e0:	add	r0, r0, #4
   130e4:	bl	145dc <main@@Base+0xe0>
   130e8:	strh	r0, [fp, #-6]
   130ec:	ldrh	r0, [fp, #-6]
   130f0:	cmp	r0, #0
   130f4:	beq	13114 <print_enum@@Base+0x808>
   130f8:	ldr	r0, [fp, #-4]
   130fc:	ldrh	r1, [fp, #-6]
   13100:	add	r0, r0, r1
   13104:	bl	14764 <main@@Base+0x268>
   13108:	str	r0, [sp, #12]
   1310c:	str	r1, [sp, #8]
   13110:	b	13128 <print_enum@@Base+0x81c>
   13114:	mov	r0, #0
   13118:	mov	r1, r0
   1311c:	str	r1, [sp, #12]
   13120:	str	r0, [sp, #8]
   13124:	b	13128 <print_enum@@Base+0x81c>
   13128:	ldr	r0, [sp, #8]
   1312c:	ldr	r1, [sp, #12]
   13130:	str	r0, [sp, #4]
   13134:	mov	r0, r1
   13138:	ldr	r1, [sp, #4]
   1313c:	mov	sp, fp
   13140:	pop	{fp, pc}
   13144:	andeq	r1, r0, sl, asr ip
   13148:	andeq	r1, r0, r8, ror ip
   1314c:	andeq	r2, r0, r9, ror #11
   13150:	push	{fp, lr}
   13154:	mov	fp, sp
   13158:	sub	sp, sp, #16
   1315c:	str	r0, [fp, #-4]
   13160:	movw	r0, #0
   13164:	strh	r0, [fp, #-6]
   13168:	ldr	r0, [fp, #-4]
   1316c:	movw	r1, #0
   13170:	cmp	r0, r1
   13174:	beq	13180 <print_enum@@Base+0x874>
   13178:	b	1317c <print_enum@@Base+0x870>
   1317c:	b	131a0 <print_enum@@Base+0x894>
   13180:	ldr	r0, [pc, #136]	; 13210 <print_enum@@Base+0x904>
   13184:	add	r0, pc, r0
   13188:	ldr	r1, [pc, #132]	; 13214 <print_enum@@Base+0x908>
   1318c:	add	r1, pc, r1
   13190:	ldr	r2, [pc, #128]	; 13218 <print_enum@@Base+0x90c>
   13194:	add	r3, pc, r2
   13198:	movw	r2, #167	; 0xa7
   1319c:	bl	109b4 <__assert_fail@plt>
   131a0:	mov	r0, #2
   131a4:	strh	r0, [sp, #8]
   131a8:	ldr	r0, [fp, #-4]
   131ac:	str	r0, [sp]
   131b0:	bl	145b8 <main@@Base+0xbc>
   131b4:	ldr	r1, [sp]
   131b8:	sub	r0, r1, r0
   131bc:	str	r0, [sp, #4]
   131c0:	ldr	r0, [sp, #4]
   131c4:	bl	145dc <main@@Base+0xe0>
   131c8:	ldrh	r1, [sp, #8]
   131cc:	add	r1, r1, #3
   131d0:	lsl	r1, r1, #1
   131d4:	cmp	r0, r1
   131d8:	bcc	131f4 <print_enum@@Base+0x8e8>
   131dc:	ldr	r0, [sp, #4]
   131e0:	ldrh	r1, [sp, #8]
   131e4:	add	r0, r0, r1, lsl #1
   131e8:	add	r0, r0, #4
   131ec:	bl	145dc <main@@Base+0xe0>
   131f0:	strh	r0, [fp, #-6]
   131f4:	ldrh	r0, [fp, #-6]
   131f8:	cmp	r0, #0
   131fc:	movw	r0, #0
   13200:	movne	r0, #1
   13204:	and	r0, r0, #1
   13208:	mov	sp, fp
   1320c:	pop	{fp, pc}
   13210:	andeq	r1, r0, r2, asr fp
   13214:	andeq	r1, r0, r0, ror fp
   13218:	andeq	r2, r0, lr, lsl r5
   1321c:	push	{fp, lr}
   13220:	mov	fp, sp
   13224:	sub	sp, sp, #32
   13228:	str	r0, [fp, #-8]
   1322c:	movw	r0, #0
   13230:	strh	r0, [fp, #-14]
   13234:	ldr	r0, [fp, #-8]
   13238:	movw	r1, #0
   1323c:	cmp	r0, r1
   13240:	beq	1324c <print_enum@@Base+0x940>
   13244:	b	13248 <print_enum@@Base+0x93c>
   13248:	b	1326c <print_enum@@Base+0x960>
   1324c:	ldr	r0, [pc, #192]	; 13314 <print_enum@@Base+0xa08>
   13250:	add	r0, pc, r0
   13254:	ldr	r1, [pc, #188]	; 13318 <print_enum@@Base+0xa0c>
   13258:	add	r1, pc, r1
   1325c:	ldr	r2, [pc, #184]	; 1331c <print_enum@@Base+0xa10>
   13260:	add	r3, pc, r2
   13264:	movw	r2, #167	; 0xa7
   13268:	bl	109b4 <__assert_fail@plt>
   1326c:	mov	r0, #2
   13270:	strh	r0, [sp, #16]
   13274:	ldr	r0, [fp, #-8]
   13278:	str	r0, [sp, #8]
   1327c:	bl	145b8 <main@@Base+0xbc>
   13280:	ldr	r1, [sp, #8]
   13284:	sub	r0, r1, r0
   13288:	str	r0, [sp, #12]
   1328c:	ldr	r0, [sp, #12]
   13290:	bl	145dc <main@@Base+0xe0>
   13294:	ldrh	r1, [sp, #16]
   13298:	add	r1, r1, #3
   1329c:	lsl	r1, r1, #1
   132a0:	cmp	r0, r1
   132a4:	bcc	132c0 <print_enum@@Base+0x9b4>
   132a8:	ldr	r0, [sp, #12]
   132ac:	ldrh	r1, [sp, #16]
   132b0:	add	r0, r0, r1, lsl #1
   132b4:	add	r0, r0, #4
   132b8:	bl	145dc <main@@Base+0xe0>
   132bc:	strh	r0, [fp, #-14]
   132c0:	ldrsh	r0, [fp, #-14]
   132c4:	cmp	r0, #0
   132c8:	beq	13300 <print_enum@@Base+0x9f4>
   132cc:	ldr	r0, [fp, #-8]
   132d0:	ldrh	r1, [fp, #-14]
   132d4:	add	r0, r0, r1
   132d8:	str	r0, [fp, #-12]
   132dc:	ldr	r0, [fp, #-12]
   132e0:	ldr	r1, [fp, #-12]
   132e4:	str	r0, [sp, #4]
   132e8:	mov	r0, r1
   132ec:	bl	146a0 <main@@Base+0x1a4>
   132f0:	ldr	r1, [sp, #4]
   132f4:	add	r0, r1, r0
   132f8:	str	r0, [fp, #-4]
   132fc:	b	13308 <print_enum@@Base+0x9fc>
   13300:	movw	r0, #0
   13304:	str	r0, [fp, #-4]
   13308:	ldr	r0, [fp, #-4]
   1330c:	mov	sp, fp
   13310:	pop	{fp, pc}
   13314:	andeq	r1, r0, r6, lsl #21
   13318:	andeq	r1, r0, r4, lsr #21
   1331c:	muleq	r0, r7, r4
   13320:	push	{fp, lr}
   13324:	mov	fp, sp
   13328:	sub	sp, sp, #16
   1332c:	str	r0, [fp, #-4]
   13330:	movw	r0, #0
   13334:	strh	r0, [fp, #-6]
   13338:	ldr	r0, [fp, #-4]
   1333c:	movw	r1, #0
   13340:	cmp	r0, r1
   13344:	beq	13350 <print_enum@@Base+0xa44>
   13348:	b	1334c <print_enum@@Base+0xa40>
   1334c:	b	13370 <print_enum@@Base+0xa64>
   13350:	ldr	r0, [pc, #136]	; 133e0 <print_enum@@Base+0xad4>
   13354:	add	r0, pc, r0
   13358:	ldr	r1, [pc, #132]	; 133e4 <print_enum@@Base+0xad8>
   1335c:	add	r1, pc, r1
   13360:	ldr	r2, [pc, #128]	; 133e8 <print_enum@@Base+0xadc>
   13364:	add	r3, pc, r2
   13368:	movw	r2, #184	; 0xb8
   1336c:	bl	109b4 <__assert_fail@plt>
   13370:	mov	r0, #2
   13374:	strh	r0, [sp, #8]
   13378:	ldr	r0, [fp, #-4]
   1337c:	str	r0, [sp]
   13380:	bl	145b8 <main@@Base+0xbc>
   13384:	ldr	r1, [sp]
   13388:	sub	r0, r1, r0
   1338c:	str	r0, [sp, #4]
   13390:	ldr	r0, [sp, #4]
   13394:	bl	145dc <main@@Base+0xe0>
   13398:	ldrh	r1, [sp, #8]
   1339c:	add	r1, r1, #3
   133a0:	lsl	r1, r1, #1
   133a4:	cmp	r0, r1
   133a8:	bcc	133c4 <print_enum@@Base+0xab8>
   133ac:	ldr	r0, [sp, #4]
   133b0:	ldrh	r1, [sp, #8]
   133b4:	add	r0, r0, r1, lsl #1
   133b8:	add	r0, r0, #4
   133bc:	bl	145dc <main@@Base+0xe0>
   133c0:	strh	r0, [fp, #-6]
   133c4:	ldrh	r0, [fp, #-6]
   133c8:	cmp	r0, #0
   133cc:	movw	r0, #0
   133d0:	movne	r0, #1
   133d4:	and	r0, r0, #1
   133d8:	mov	sp, fp
   133dc:	pop	{fp, pc}
   133e0:	andeq	r1, r0, r2, lsl #19
   133e4:	andeq	r1, r0, r0, lsr #19
   133e8:	andeq	r2, r0, r3, ror #7
   133ec:	push	{fp, lr}
   133f0:	mov	fp, sp
   133f4:	sub	sp, sp, #24
   133f8:	str	r0, [fp, #-4]
   133fc:	movw	r0, #0
   13400:	strh	r0, [fp, #-6]
   13404:	ldr	r0, [fp, #-4]
   13408:	movw	r1, #0
   1340c:	cmp	r0, r1
   13410:	beq	1341c <print_enum@@Base+0xb10>
   13414:	b	13418 <print_enum@@Base+0xb0c>
   13418:	b	1343c <print_enum@@Base+0xb30>
   1341c:	ldr	r0, [pc, #176]	; 134d4 <print_enum@@Base+0xbc8>
   13420:	add	r0, pc, r0
   13424:	ldr	r1, [pc, #172]	; 134d8 <print_enum@@Base+0xbcc>
   13428:	add	r1, pc, r1
   1342c:	ldr	r2, [pc, #168]	; 134dc <print_enum@@Base+0xbd0>
   13430:	add	r3, pc, r2
   13434:	movw	r2, #184	; 0xb8
   13438:	bl	109b4 <__assert_fail@plt>
   1343c:	mov	r0, #2
   13440:	strh	r0, [fp, #-8]
   13444:	ldr	r0, [fp, #-4]
   13448:	str	r0, [sp, #8]
   1344c:	bl	145b8 <main@@Base+0xbc>
   13450:	ldr	r1, [sp, #8]
   13454:	sub	r0, r1, r0
   13458:	str	r0, [sp, #12]
   1345c:	ldr	r0, [sp, #12]
   13460:	bl	145dc <main@@Base+0xe0>
   13464:	ldrh	r1, [fp, #-8]
   13468:	add	r1, r1, #3
   1346c:	lsl	r1, r1, #1
   13470:	cmp	r0, r1
   13474:	bcc	13490 <print_enum@@Base+0xb84>
   13478:	ldr	r0, [sp, #12]
   1347c:	ldrh	r1, [fp, #-8]
   13480:	add	r0, r0, r1, lsl #1
   13484:	add	r0, r0, #4
   13488:	bl	145dc <main@@Base+0xe0>
   1348c:	strh	r0, [fp, #-6]
   13490:	ldrh	r0, [fp, #-6]
   13494:	cmp	r0, #0
   13498:	beq	134b8 <print_enum@@Base+0xbac>
   1349c:	ldr	r0, [fp, #-4]
   134a0:	ldrh	r1, [fp, #-6]
   134a4:	add	r0, r0, r1
   134a8:	bl	147f4 <main@@Base+0x2f8>
   134ac:	and	r0, r0, #255	; 0xff
   134b0:	str	r0, [sp, #4]
   134b4:	b	134c4 <print_enum@@Base+0xbb8>
   134b8:	movw	r0, #0
   134bc:	str	r0, [sp, #4]
   134c0:	b	134c4 <print_enum@@Base+0xbb8>
   134c4:	ldr	r0, [sp, #4]
   134c8:	and	r0, r0, #255	; 0xff
   134cc:	mov	sp, fp
   134d0:	pop	{fp, pc}
   134d4:			; <UNDEFINED> instruction: 0x000018b6
   134d8:	ldrdeq	r1, [r0], -r4
   134dc:	andeq	r2, r0, r8, asr r3
   134e0:	push	{fp, lr}
   134e4:	mov	fp, sp
   134e8:	sub	sp, sp, #24
   134ec:	str	r0, [fp, #-4]
   134f0:	movw	r0, #0
   134f4:	strh	r0, [fp, #-10]
   134f8:	ldr	r0, [fp, #-4]
   134fc:	movw	r1, #0
   13500:	cmp	r0, r1
   13504:	beq	13510 <print_enum@@Base+0xc04>
   13508:	b	1350c <print_enum@@Base+0xc00>
   1350c:	b	13530 <print_enum@@Base+0xc24>
   13510:	ldr	r0, [pc, #204]	; 135e4 <print_enum@@Base+0xcd8>
   13514:	add	r0, pc, r0
   13518:	ldr	r1, [pc, #200]	; 135e8 <print_enum@@Base+0xcdc>
   1351c:	add	r1, pc, r1
   13520:	ldr	r2, [pc, #196]	; 135ec <print_enum@@Base+0xce0>
   13524:	add	r3, pc, r2
   13528:	movw	r2, #185	; 0xb9
   1352c:	bl	109b4 <__assert_fail@plt>
   13530:	mov	r0, #3
   13534:	strh	r0, [sp, #12]
   13538:	ldr	r0, [fp, #-4]
   1353c:	str	r0, [sp, #4]
   13540:	bl	145b8 <main@@Base+0xbc>
   13544:	ldr	r1, [sp, #4]
   13548:	sub	r0, r1, r0
   1354c:	str	r0, [sp, #8]
   13550:	ldr	r0, [sp, #8]
   13554:	bl	145dc <main@@Base+0xe0>
   13558:	ldrh	r1, [sp, #12]
   1355c:	add	r1, r1, #3
   13560:	lsl	r1, r1, #1
   13564:	cmp	r0, r1
   13568:	bcc	13584 <print_enum@@Base+0xc78>
   1356c:	ldr	r0, [sp, #8]
   13570:	ldrh	r1, [sp, #12]
   13574:	add	r0, r0, r1, lsl #1
   13578:	add	r0, r0, #4
   1357c:	bl	145dc <main@@Base+0xe0>
   13580:	strh	r0, [fp, #-10]
   13584:	ldrsh	r0, [fp, #-10]
   13588:	cmp	r0, #0
   1358c:	beq	135c4 <print_enum@@Base+0xcb8>
   13590:	ldr	r0, [fp, #-4]
   13594:	ldrh	r1, [fp, #-10]
   13598:	add	r0, r0, r1
   1359c:	str	r0, [fp, #-8]
   135a0:	ldr	r0, [fp, #-8]
   135a4:	ldr	r1, [fp, #-8]
   135a8:	str	r0, [sp]
   135ac:	mov	r0, r1
   135b0:	bl	146a0 <main@@Base+0x1a4>
   135b4:	ldr	r1, [sp]
   135b8:	add	r0, r1, r0
   135bc:	mov	sp, fp
   135c0:	pop	{fp, pc}
   135c4:	ldr	r0, [pc, #36]	; 135f0 <print_enum@@Base+0xce4>
   135c8:	add	r0, pc, r0
   135cc:	ldr	r1, [pc, #32]	; 135f4 <print_enum@@Base+0xce8>
   135d0:	add	r1, pc, r1
   135d4:	ldr	r2, [pc, #28]	; 135f8 <print_enum@@Base+0xcec>
   135d8:	add	r3, pc, r2
   135dc:	movw	r2, #185	; 0xb9
   135e0:	bl	109b4 <__assert_fail@plt>
   135e4:	andeq	r1, r0, r2, asr #15
   135e8:	andeq	r1, r0, r0, ror #15
   135ec:	andeq	r2, r0, r9, lsr #5
   135f0:	andeq	r1, r0, r6, lsl #19
   135f4:	andeq	r1, r0, ip, lsr #14
   135f8:	strdeq	r2, [r0], -r5

000135fc <print_schema@@Base>:
   135fc:	push	{fp, lr}
   13600:	mov	fp, sp
   13604:	sub	sp, sp, #48	; 0x30
   13608:	str	r0, [fp, #-4]
   1360c:	ldr	r0, [fp, #-4]
   13610:	bl	13810 <print_schema@@Base+0x214>
   13614:	ldr	r1, [pc, #460]	; 137e8 <print_schema@@Base+0x1ec>
   13618:	add	r1, pc, r1
   1361c:	str	r0, [fp, #-8]
   13620:	mov	r0, r1
   13624:	bl	10900 <printf@plt>
   13628:	ldr	r1, [pc, #436]	; 137e4 <print_schema@@Base+0x1e8>
   1362c:	add	r1, pc, r1
   13630:	str	r0, [fp, #-20]	; 0xffffffec
   13634:	mov	r0, r1
   13638:	bl	10900 <printf@plt>
   1363c:	movw	r1, #0
   13640:	str	r1, [fp, #-16]
   13644:	ldr	r0, [fp, #-16]
   13648:	ldr	r1, [fp, #-8]
   1364c:	str	r0, [sp, #24]
   13650:	mov	r0, r1
   13654:	bl	13930 <print_schema@@Base+0x334>
   13658:	ldr	r1, [sp, #24]
   1365c:	cmp	r1, r0
   13660:	bcs	1369c <print_schema@@Base+0xa0>
   13664:	ldr	r0, [fp, #-16]
   13668:	cmp	r0, #0
   1366c:	bls	1367c <print_schema@@Base+0x80>
   13670:	ldr	r0, [pc, #404]	; 1380c <print_schema@@Base+0x210>
   13674:	add	r0, pc, r0
   13678:	bl	10900 <printf@plt>
   1367c:	ldr	r0, [fp, #-8]
   13680:	ldr	r1, [fp, #-16]
   13684:	bl	13980 <print_schema@@Base+0x384>
   13688:	bl	11234 <print_object@@Base>
   1368c:	ldr	r0, [fp, #-16]
   13690:	add	r0, r0, #1
   13694:	str	r0, [fp, #-16]
   13698:	b	13644 <print_schema@@Base+0x48>
   1369c:	ldr	r0, [pc, #332]	; 137f0 <print_schema@@Base+0x1f4>
   136a0:	add	r0, pc, r0
   136a4:	bl	10900 <printf@plt>
   136a8:	ldr	r1, [fp, #-4]
   136ac:	str	r0, [sp, #20]
   136b0:	mov	r0, r1
   136b4:	bl	13a10 <print_schema@@Base+0x414>
   136b8:	ldr	r1, [pc, #300]	; 137ec <print_schema@@Base+0x1f0>
   136bc:	add	r1, pc, r1
   136c0:	str	r0, [fp, #-12]
   136c4:	mov	r0, r1
   136c8:	bl	10900 <printf@plt>
   136cc:	movw	r1, #0
   136d0:	str	r1, [fp, #-16]
   136d4:	ldr	r0, [fp, #-16]
   136d8:	ldr	r1, [fp, #-12]
   136dc:	str	r0, [sp, #16]
   136e0:	mov	r0, r1
   136e4:	bl	12d7c <print_enum@@Base+0x470>
   136e8:	ldr	r1, [sp, #16]
   136ec:	cmp	r1, r0
   136f0:	bcs	1372c <print_schema@@Base+0x130>
   136f4:	ldr	r0, [fp, #-16]
   136f8:	cmp	r0, #0
   136fc:	bls	1370c <print_schema@@Base+0x110>
   13700:	ldr	r0, [pc, #256]	; 13808 <print_schema@@Base+0x20c>
   13704:	add	r0, pc, r0
   13708:	bl	10900 <printf@plt>
   1370c:	ldr	r0, [fp, #-12]
   13710:	ldr	r1, [fp, #-16]
   13714:	bl	13b30 <print_schema@@Base+0x534>
   13718:	bl	1290c <print_enum@@Base>
   1371c:	ldr	r0, [fp, #-16]
   13720:	add	r0, r0, #1
   13724:	str	r0, [fp, #-16]
   13728:	b	136d4 <print_schema@@Base+0xd8>
   1372c:	ldr	r0, [pc, #192]	; 137f4 <print_schema@@Base+0x1f8>
   13730:	add	r0, pc, r0
   13734:	bl	10900 <printf@plt>
   13738:	ldr	r1, [fp, #-4]
   1373c:	str	r0, [sp, #12]
   13740:	mov	r0, r1
   13744:	bl	13bc0 <print_schema@@Base+0x5c4>
   13748:	cmp	r0, #0
   1374c:	beq	13770 <print_schema@@Base+0x174>
   13750:	ldr	r0, [fp, #-4]
   13754:	bl	13c8c <print_schema@@Base+0x690>
   13758:	ldr	r1, [pc, #152]	; 137f8 <print_schema@@Base+0x1fc>
   1375c:	add	r1, pc, r1
   13760:	str	r0, [sp, #8]
   13764:	mov	r0, r1
   13768:	ldr	r1, [sp, #8]
   1376c:	bl	10900 <printf@plt>
   13770:	ldr	r0, [fp, #-4]
   13774:	bl	13d94 <print_schema@@Base+0x798>
   13778:	cmp	r0, #0
   1377c:	beq	137a0 <print_schema@@Base+0x1a4>
   13780:	ldr	r0, [fp, #-4]
   13784:	bl	13e60 <print_schema@@Base+0x864>
   13788:	ldr	r1, [pc, #108]	; 137fc <print_schema@@Base+0x200>
   1378c:	add	r1, pc, r1
   13790:	str	r0, [sp, #4]
   13794:	mov	r0, r1
   13798:	ldr	r1, [sp, #4]
   1379c:	bl	10900 <printf@plt>
   137a0:	ldr	r0, [fp, #-4]
   137a4:	bl	13f68 <print_schema@@Base+0x96c>
   137a8:	cmp	r0, #0
   137ac:	beq	137d0 <print_schema@@Base+0x1d4>
   137b0:	ldr	r0, [pc, #72]	; 13800 <print_schema@@Base+0x204>
   137b4:	add	r0, pc, r0
   137b8:	bl	10900 <printf@plt>
   137bc:	ldr	r1, [fp, #-4]
   137c0:	str	r0, [sp]
   137c4:	mov	r0, r1
   137c8:	bl	14034 <print_schema@@Base+0xa38>
   137cc:	bl	11234 <print_object@@Base>
   137d0:	ldr	r0, [pc, #44]	; 13804 <print_schema@@Base+0x208>
   137d4:	add	r0, pc, r0
   137d8:	bl	10900 <printf@plt>
   137dc:	mov	sp, fp
   137e0:	pop	{fp, pc}
   137e4:	muleq	r0, r8, r4
   137e8:	andeq	r1, r0, r8, ror r3
   137ec:	andeq	r1, r0, r4, lsl r4
   137f0:	andeq	r1, r0, ip, lsr #7
   137f4:	andeq	r1, r0, ip, lsl r3
   137f8:	andeq	r1, r0, pc, ror r3
   137fc:	andeq	r1, r0, r2, ror #6
   13800:	andeq	r1, r0, fp, asr #6
   13804:	andeq	r1, r0, sl, lsr r3
   13808:	andeq	r1, r0, lr, lsl #5
   1380c:	andeq	r1, r0, lr, lsl r3
   13810:	push	{fp, lr}
   13814:	mov	fp, sp
   13818:	sub	sp, sp, #24
   1381c:	str	r0, [fp, #-4]
   13820:	movw	r0, #0
   13824:	strh	r0, [fp, #-10]
   13828:	ldr	r0, [fp, #-4]
   1382c:	movw	r1, #0
   13830:	cmp	r0, r1
   13834:	beq	13840 <print_schema@@Base+0x244>
   13838:	b	1383c <print_schema@@Base+0x240>
   1383c:	b	13860 <print_schema@@Base+0x264>
   13840:	ldr	r0, [pc, #208]	; 13918 <print_schema@@Base+0x31c>
   13844:	add	r0, pc, r0
   13848:	ldr	r1, [pc, #204]	; 1391c <print_schema@@Base+0x320>
   1384c:	add	r1, pc, r1
   13850:	ldr	r2, [pc, #200]	; 13920 <print_schema@@Base+0x324>
   13854:	add	r3, pc, r2
   13858:	movw	r2, #237	; 0xed
   1385c:	bl	109b4 <__assert_fail@plt>
   13860:	mov	r0, #0
   13864:	strh	r0, [sp, #12]
   13868:	ldr	r0, [fp, #-4]
   1386c:	str	r0, [sp, #4]
   13870:	bl	145b8 <main@@Base+0xbc>
   13874:	ldr	r1, [sp, #4]
   13878:	sub	r0, r1, r0
   1387c:	str	r0, [sp, #8]
   13880:	ldr	r0, [sp, #8]
   13884:	bl	145dc <main@@Base+0xe0>
   13888:	ldrh	r1, [sp, #12]
   1388c:	add	r1, r1, #3
   13890:	lsl	r1, r1, #1
   13894:	cmp	r0, r1
   13898:	bcc	138b4 <print_schema@@Base+0x2b8>
   1389c:	ldr	r0, [sp, #8]
   138a0:	ldrh	r1, [sp, #12]
   138a4:	add	r0, r0, r1, lsl #1
   138a8:	add	r0, r0, #4
   138ac:	bl	145dc <main@@Base+0xe0>
   138b0:	strh	r0, [fp, #-10]
   138b4:	ldrsh	r0, [fp, #-10]
   138b8:	cmp	r0, #0
   138bc:	beq	138f8 <print_schema@@Base+0x2fc>
   138c0:	ldr	r0, [fp, #-4]
   138c4:	ldrh	r1, [fp, #-10]
   138c8:	add	r0, r0, r1
   138cc:	str	r0, [fp, #-8]
   138d0:	ldr	r0, [fp, #-8]
   138d4:	add	r0, r0, #4
   138d8:	ldr	r1, [fp, #-8]
   138dc:	str	r0, [sp]
   138e0:	mov	r0, r1
   138e4:	bl	146a0 <main@@Base+0x1a4>
   138e8:	ldr	r1, [sp]
   138ec:	add	r0, r1, r0
   138f0:	mov	sp, fp
   138f4:	pop	{fp, pc}
   138f8:	ldr	r0, [pc, #36]	; 13924 <print_schema@@Base+0x328>
   138fc:	add	r0, pc, r0
   13900:	ldr	r1, [pc, #32]	; 13928 <print_schema@@Base+0x32c>
   13904:	add	r1, pc, r1
   13908:	ldr	r2, [pc, #28]	; 1392c <print_schema@@Base+0x330>
   1390c:	add	r3, pc, r2
   13910:	movw	r2, #237	; 0xed
   13914:	bl	109b4 <__assert_fail@plt>
   13918:	muleq	r0, r2, r4
   1391c:			; <UNDEFINED> instruction: 0x000014b0
   13920:	andeq	r1, r0, sl, asr #31
   13924:	andeq	r1, r0, r2, asr r6
   13928:	strdeq	r1, [r0], -r8
   1392c:	andeq	r1, r0, r2, lsl pc
   13930:	push	{fp, lr}
   13934:	mov	fp, sp
   13938:	sub	sp, sp, #8
   1393c:	str	r0, [sp, #4]
   13940:	ldr	r0, [sp, #4]
   13944:	movw	r1, #0
   13948:	cmp	r0, r1
   1394c:	beq	13968 <print_schema@@Base+0x36c>
   13950:	ldr	r0, [sp, #4]
   13954:	mvn	r1, #3
   13958:	add	r0, r0, r1
   1395c:	bl	146a0 <main@@Base+0x1a4>
   13960:	str	r0, [sp]
   13964:	b	13974 <print_schema@@Base+0x378>
   13968:	movw	r0, #0
   1396c:	str	r0, [sp]
   13970:	b	13974 <print_schema@@Base+0x378>
   13974:	ldr	r0, [sp]
   13978:	mov	sp, fp
   1397c:	pop	{fp, pc}
   13980:	push	{fp, lr}
   13984:	mov	fp, sp
   13988:	sub	sp, sp, #16
   1398c:	str	r0, [fp, #-4]
   13990:	str	r1, [sp, #8]
   13994:	ldr	r0, [fp, #-4]
   13998:	ldr	r1, [sp, #8]
   1399c:	add	r0, r0, r1, lsl #2
   139a0:	str	r0, [sp, #4]
   139a4:	ldr	r0, [fp, #-4]
   139a8:	bl	146d8 <main@@Base+0x1dc>
   139ac:	ldr	r1, [sp, #8]
   139b0:	cmp	r0, r1
   139b4:	bls	139c0 <print_schema@@Base+0x3c4>
   139b8:	b	139bc <print_schema@@Base+0x3c0>
   139bc:	b	139e0 <print_schema@@Base+0x3e4>
   139c0:	ldr	r0, [pc, #60]	; 13a04 <print_schema@@Base+0x408>
   139c4:	add	r0, pc, r0
   139c8:	ldr	r1, [pc, #56]	; 13a08 <print_schema@@Base+0x40c>
   139cc:	add	r1, pc, r1
   139d0:	ldr	r2, [pc, #52]	; 13a0c <print_schema@@Base+0x410>
   139d4:	add	r3, pc, r2
   139d8:	movw	r2, #215	; 0xd7
   139dc:	bl	109b4 <__assert_fail@plt>
   139e0:	ldr	r0, [sp, #4]
   139e4:	ldr	r1, [sp, #4]
   139e8:	str	r0, [sp]
   139ec:	mov	r0, r1
   139f0:	bl	146a0 <main@@Base+0x1a4>
   139f4:	ldr	r1, [sp]
   139f8:	add	r0, r1, r0
   139fc:	mov	sp, fp
   13a00:	pop	{fp, pc}
   13a04:	andeq	r1, r0, r5, lsl #12
   13a08:	andeq	r1, r0, r0, lsr r3
   13a0c:	muleq	r0, r7, lr
   13a10:	push	{fp, lr}
   13a14:	mov	fp, sp
   13a18:	sub	sp, sp, #24
   13a1c:	str	r0, [fp, #-4]
   13a20:	movw	r0, #0
   13a24:	strh	r0, [fp, #-10]
   13a28:	ldr	r0, [fp, #-4]
   13a2c:	movw	r1, #0
   13a30:	cmp	r0, r1
   13a34:	beq	13a40 <print_schema@@Base+0x444>
   13a38:	b	13a3c <print_schema@@Base+0x440>
   13a3c:	b	13a60 <print_schema@@Base+0x464>
   13a40:	ldr	r0, [pc, #208]	; 13b18 <print_schema@@Base+0x51c>
   13a44:	add	r0, pc, r0
   13a48:	ldr	r1, [pc, #204]	; 13b1c <print_schema@@Base+0x520>
   13a4c:	add	r1, pc, r1
   13a50:	ldr	r2, [pc, #200]	; 13b20 <print_schema@@Base+0x524>
   13a54:	add	r3, pc, r2
   13a58:	movw	r2, #238	; 0xee
   13a5c:	bl	109b4 <__assert_fail@plt>
   13a60:	mov	r0, #1
   13a64:	strh	r0, [sp, #12]
   13a68:	ldr	r0, [fp, #-4]
   13a6c:	str	r0, [sp, #4]
   13a70:	bl	145b8 <main@@Base+0xbc>
   13a74:	ldr	r1, [sp, #4]
   13a78:	sub	r0, r1, r0
   13a7c:	str	r0, [sp, #8]
   13a80:	ldr	r0, [sp, #8]
   13a84:	bl	145dc <main@@Base+0xe0>
   13a88:	ldrh	r1, [sp, #12]
   13a8c:	add	r1, r1, #3
   13a90:	lsl	r1, r1, #1
   13a94:	cmp	r0, r1
   13a98:	bcc	13ab4 <print_schema@@Base+0x4b8>
   13a9c:	ldr	r0, [sp, #8]
   13aa0:	ldrh	r1, [sp, #12]
   13aa4:	add	r0, r0, r1, lsl #1
   13aa8:	add	r0, r0, #4
   13aac:	bl	145dc <main@@Base+0xe0>
   13ab0:	strh	r0, [fp, #-10]
   13ab4:	ldrsh	r0, [fp, #-10]
   13ab8:	cmp	r0, #0
   13abc:	beq	13af8 <print_schema@@Base+0x4fc>
   13ac0:	ldr	r0, [fp, #-4]
   13ac4:	ldrh	r1, [fp, #-10]
   13ac8:	add	r0, r0, r1
   13acc:	str	r0, [fp, #-8]
   13ad0:	ldr	r0, [fp, #-8]
   13ad4:	add	r0, r0, #4
   13ad8:	ldr	r1, [fp, #-8]
   13adc:	str	r0, [sp]
   13ae0:	mov	r0, r1
   13ae4:	bl	146a0 <main@@Base+0x1a4>
   13ae8:	ldr	r1, [sp]
   13aec:	add	r0, r1, r0
   13af0:	mov	sp, fp
   13af4:	pop	{fp, pc}
   13af8:	ldr	r0, [pc, #36]	; 13b24 <print_schema@@Base+0x528>
   13afc:	add	r0, pc, r0
   13b00:	ldr	r1, [pc, #32]	; 13b28 <print_schema@@Base+0x52c>
   13b04:	add	r1, pc, r1
   13b08:	ldr	r2, [pc, #28]	; 13b2c <print_schema@@Base+0x530>
   13b0c:	add	r3, pc, r2
   13b10:	movw	r2, #238	; 0xee
   13b14:	bl	109b4 <__assert_fail@plt>
   13b18:	muleq	r0, r2, r2
   13b1c:			; <UNDEFINED> instruction: 0x000012b0
   13b20:	andeq	r1, r0, fp, ror #28
   13b24:	andeq	r1, r0, r2, asr r4
   13b28:	strdeq	r1, [r0], -r8
   13b2c:			; <UNDEFINED> instruction: 0x00001db3
   13b30:	push	{fp, lr}
   13b34:	mov	fp, sp
   13b38:	sub	sp, sp, #16
   13b3c:	str	r0, [fp, #-4]
   13b40:	str	r1, [sp, #8]
   13b44:	ldr	r0, [fp, #-4]
   13b48:	ldr	r1, [sp, #8]
   13b4c:	add	r0, r0, r1, lsl #2
   13b50:	str	r0, [sp, #4]
   13b54:	ldr	r0, [fp, #-4]
   13b58:	bl	146d8 <main@@Base+0x1dc>
   13b5c:	ldr	r1, [sp, #8]
   13b60:	cmp	r0, r1
   13b64:	bls	13b70 <print_schema@@Base+0x574>
   13b68:	b	13b6c <print_schema@@Base+0x570>
   13b6c:	b	13b90 <print_schema@@Base+0x594>
   13b70:	ldr	r0, [pc, #60]	; 13bb4 <print_schema@@Base+0x5b8>
   13b74:	add	r0, pc, r0
   13b78:	ldr	r1, [pc, #56]	; 13bb8 <print_schema@@Base+0x5bc>
   13b7c:	add	r1, pc, r1
   13b80:	ldr	r2, [pc, #52]	; 13bbc <print_schema@@Base+0x5c0>
   13b84:	add	r3, pc, r2
   13b88:	movw	r2, #174	; 0xae
   13b8c:	bl	109b4 <__assert_fail@plt>
   13b90:	ldr	r0, [sp, #4]
   13b94:	ldr	r1, [sp, #4]
   13b98:	str	r0, [sp]
   13b9c:	mov	r0, r1
   13ba0:	bl	146a0 <main@@Base+0x1a4>
   13ba4:	ldr	r1, [sp]
   13ba8:	add	r0, r1, r0
   13bac:	mov	sp, fp
   13bb0:	pop	{fp, pc}
   13bb4:	andeq	r1, r0, r5, asr r4
   13bb8:	andeq	r1, r0, r0, lsl #3
   13bbc:	andeq	r1, r0, r4, lsl #27
   13bc0:	push	{fp, lr}
   13bc4:	mov	fp, sp
   13bc8:	sub	sp, sp, #16
   13bcc:	str	r0, [fp, #-4]
   13bd0:	movw	r0, #0
   13bd4:	strh	r0, [fp, #-6]
   13bd8:	ldr	r0, [fp, #-4]
   13bdc:	movw	r1, #0
   13be0:	cmp	r0, r1
   13be4:	beq	13bf0 <print_schema@@Base+0x5f4>
   13be8:	b	13bec <print_schema@@Base+0x5f0>
   13bec:	b	13c10 <print_schema@@Base+0x614>
   13bf0:	ldr	r0, [pc, #136]	; 13c80 <print_schema@@Base+0x684>
   13bf4:	add	r0, pc, r0
   13bf8:	ldr	r1, [pc, #132]	; 13c84 <print_schema@@Base+0x688>
   13bfc:	add	r1, pc, r1
   13c00:	ldr	r2, [pc, #128]	; 13c88 <print_schema@@Base+0x68c>
   13c04:	add	r3, pc, r2
   13c08:	movw	r2, #239	; 0xef
   13c0c:	bl	109b4 <__assert_fail@plt>
   13c10:	mov	r0, #2
   13c14:	strh	r0, [sp, #8]
   13c18:	ldr	r0, [fp, #-4]
   13c1c:	str	r0, [sp]
   13c20:	bl	145b8 <main@@Base+0xbc>
   13c24:	ldr	r1, [sp]
   13c28:	sub	r0, r1, r0
   13c2c:	str	r0, [sp, #4]
   13c30:	ldr	r0, [sp, #4]
   13c34:	bl	145dc <main@@Base+0xe0>
   13c38:	ldrh	r1, [sp, #8]
   13c3c:	add	r1, r1, #3
   13c40:	lsl	r1, r1, #1
   13c44:	cmp	r0, r1
   13c48:	bcc	13c64 <print_schema@@Base+0x668>
   13c4c:	ldr	r0, [sp, #4]
   13c50:	ldrh	r1, [sp, #8]
   13c54:	add	r0, r0, r1, lsl #1
   13c58:	add	r0, r0, #4
   13c5c:	bl	145dc <main@@Base+0xe0>
   13c60:	strh	r0, [fp, #-6]
   13c64:	ldrh	r0, [fp, #-6]
   13c68:	cmp	r0, #0
   13c6c:	movw	r0, #0
   13c70:	movne	r0, #1
   13c74:	and	r0, r0, #1
   13c78:	mov	sp, fp
   13c7c:	pop	{fp, pc}
   13c80:	andeq	r1, r0, r2, ror #1
   13c84:	andeq	r1, r0, r0, lsl #2
   13c88:	andeq	r1, r0, r2, asr sp
   13c8c:	push	{fp, lr}
   13c90:	mov	fp, sp
   13c94:	sub	sp, sp, #32
   13c98:	str	r0, [fp, #-8]
   13c9c:	movw	r0, #0
   13ca0:	strh	r0, [fp, #-14]
   13ca4:	ldr	r0, [fp, #-8]
   13ca8:	movw	r1, #0
   13cac:	cmp	r0, r1
   13cb0:	beq	13cbc <print_schema@@Base+0x6c0>
   13cb4:	b	13cb8 <print_schema@@Base+0x6bc>
   13cb8:	b	13cdc <print_schema@@Base+0x6e0>
   13cbc:	ldr	r0, [pc, #196]	; 13d88 <print_schema@@Base+0x78c>
   13cc0:	add	r0, pc, r0
   13cc4:	ldr	r1, [pc, #192]	; 13d8c <print_schema@@Base+0x790>
   13cc8:	add	r1, pc, r1
   13ccc:	ldr	r2, [pc, #188]	; 13d90 <print_schema@@Base+0x794>
   13cd0:	add	r3, pc, r2
   13cd4:	movw	r2, #239	; 0xef
   13cd8:	bl	109b4 <__assert_fail@plt>
   13cdc:	mov	r0, #2
   13ce0:	strh	r0, [sp, #16]
   13ce4:	ldr	r0, [fp, #-8]
   13ce8:	str	r0, [sp, #8]
   13cec:	bl	145b8 <main@@Base+0xbc>
   13cf0:	ldr	r1, [sp, #8]
   13cf4:	sub	r0, r1, r0
   13cf8:	str	r0, [sp, #12]
   13cfc:	ldr	r0, [sp, #12]
   13d00:	bl	145dc <main@@Base+0xe0>
   13d04:	ldrh	r1, [sp, #16]
   13d08:	add	r1, r1, #3
   13d0c:	lsl	r1, r1, #1
   13d10:	cmp	r0, r1
   13d14:	bcc	13d30 <print_schema@@Base+0x734>
   13d18:	ldr	r0, [sp, #12]
   13d1c:	ldrh	r1, [sp, #16]
   13d20:	add	r0, r0, r1, lsl #1
   13d24:	add	r0, r0, #4
   13d28:	bl	145dc <main@@Base+0xe0>
   13d2c:	strh	r0, [fp, #-14]
   13d30:	ldrsh	r0, [fp, #-14]
   13d34:	cmp	r0, #0
   13d38:	beq	13d74 <print_schema@@Base+0x778>
   13d3c:	ldr	r0, [fp, #-8]
   13d40:	ldrh	r1, [fp, #-14]
   13d44:	add	r0, r0, r1
   13d48:	str	r0, [fp, #-12]
   13d4c:	ldr	r0, [fp, #-12]
   13d50:	add	r0, r0, #4
   13d54:	ldr	r1, [fp, #-12]
   13d58:	str	r0, [sp, #4]
   13d5c:	mov	r0, r1
   13d60:	bl	146a0 <main@@Base+0x1a4>
   13d64:	ldr	r1, [sp, #4]
   13d68:	add	r0, r1, r0
   13d6c:	str	r0, [fp, #-4]
   13d70:	b	13d7c <print_schema@@Base+0x780>
   13d74:	movw	r0, #0
   13d78:	str	r0, [fp, #-4]
   13d7c:	ldr	r0, [fp, #-4]
   13d80:	mov	sp, fp
   13d84:	pop	{fp, pc}
   13d88:	andeq	r1, r0, r6, lsl r0
   13d8c:	andeq	r1, r0, r4, lsr r0
   13d90:	andeq	r1, r0, sp, asr #25
   13d94:	push	{fp, lr}
   13d98:	mov	fp, sp
   13d9c:	sub	sp, sp, #16
   13da0:	str	r0, [fp, #-4]
   13da4:	movw	r0, #0
   13da8:	strh	r0, [fp, #-6]
   13dac:	ldr	r0, [fp, #-4]
   13db0:	movw	r1, #0
   13db4:	cmp	r0, r1
   13db8:	beq	13dc4 <print_schema@@Base+0x7c8>
   13dbc:	b	13dc0 <print_schema@@Base+0x7c4>
   13dc0:	b	13de4 <print_schema@@Base+0x7e8>
   13dc4:	ldr	r0, [pc, #136]	; 13e54 <print_schema@@Base+0x858>
   13dc8:	add	r0, pc, r0
   13dcc:	ldr	r1, [pc, #132]	; 13e58 <print_schema@@Base+0x85c>
   13dd0:	add	r1, pc, r1
   13dd4:	ldr	r2, [pc, #128]	; 13e5c <print_schema@@Base+0x860>
   13dd8:	add	r3, pc, r2
   13ddc:	movw	r2, #240	; 0xf0
   13de0:	bl	109b4 <__assert_fail@plt>
   13de4:	mov	r0, #3
   13de8:	strh	r0, [sp, #8]
   13dec:	ldr	r0, [fp, #-4]
   13df0:	str	r0, [sp]
   13df4:	bl	145b8 <main@@Base+0xbc>
   13df8:	ldr	r1, [sp]
   13dfc:	sub	r0, r1, r0
   13e00:	str	r0, [sp, #4]
   13e04:	ldr	r0, [sp, #4]
   13e08:	bl	145dc <main@@Base+0xe0>
   13e0c:	ldrh	r1, [sp, #8]
   13e10:	add	r1, r1, #3
   13e14:	lsl	r1, r1, #1
   13e18:	cmp	r0, r1
   13e1c:	bcc	13e38 <print_schema@@Base+0x83c>
   13e20:	ldr	r0, [sp, #4]
   13e24:	ldrh	r1, [sp, #8]
   13e28:	add	r0, r0, r1, lsl #1
   13e2c:	add	r0, r0, #4
   13e30:	bl	145dc <main@@Base+0xe0>
   13e34:	strh	r0, [fp, #-6]
   13e38:	ldrh	r0, [fp, #-6]
   13e3c:	cmp	r0, #0
   13e40:	movw	r0, #0
   13e44:	movne	r0, #1
   13e48:	and	r0, r0, #1
   13e4c:	mov	sp, fp
   13e50:	pop	{fp, pc}
   13e54:	andeq	r0, r0, lr, lsl #30
   13e58:	andeq	r0, r0, ip, lsr #30
   13e5c:	andeq	r1, r0, r2, lsl ip
   13e60:	push	{fp, lr}
   13e64:	mov	fp, sp
   13e68:	sub	sp, sp, #32
   13e6c:	str	r0, [fp, #-8]
   13e70:	movw	r0, #0
   13e74:	strh	r0, [fp, #-14]
   13e78:	ldr	r0, [fp, #-8]
   13e7c:	movw	r1, #0
   13e80:	cmp	r0, r1
   13e84:	beq	13e90 <print_schema@@Base+0x894>
   13e88:	b	13e8c <print_schema@@Base+0x890>
   13e8c:	b	13eb0 <print_schema@@Base+0x8b4>
   13e90:	ldr	r0, [pc, #196]	; 13f5c <print_schema@@Base+0x960>
   13e94:	add	r0, pc, r0
   13e98:	ldr	r1, [pc, #192]	; 13f60 <print_schema@@Base+0x964>
   13e9c:	add	r1, pc, r1
   13ea0:	ldr	r2, [pc, #188]	; 13f64 <print_schema@@Base+0x968>
   13ea4:	add	r3, pc, r2
   13ea8:	movw	r2, #240	; 0xf0
   13eac:	bl	109b4 <__assert_fail@plt>
   13eb0:	mov	r0, #3
   13eb4:	strh	r0, [sp, #16]
   13eb8:	ldr	r0, [fp, #-8]
   13ebc:	str	r0, [sp, #8]
   13ec0:	bl	145b8 <main@@Base+0xbc>
   13ec4:	ldr	r1, [sp, #8]
   13ec8:	sub	r0, r1, r0
   13ecc:	str	r0, [sp, #12]
   13ed0:	ldr	r0, [sp, #12]
   13ed4:	bl	145dc <main@@Base+0xe0>
   13ed8:	ldrh	r1, [sp, #16]
   13edc:	add	r1, r1, #3
   13ee0:	lsl	r1, r1, #1
   13ee4:	cmp	r0, r1
   13ee8:	bcc	13f04 <print_schema@@Base+0x908>
   13eec:	ldr	r0, [sp, #12]
   13ef0:	ldrh	r1, [sp, #16]
   13ef4:	add	r0, r0, r1, lsl #1
   13ef8:	add	r0, r0, #4
   13efc:	bl	145dc <main@@Base+0xe0>
   13f00:	strh	r0, [fp, #-14]
   13f04:	ldrsh	r0, [fp, #-14]
   13f08:	cmp	r0, #0
   13f0c:	beq	13f48 <print_schema@@Base+0x94c>
   13f10:	ldr	r0, [fp, #-8]
   13f14:	ldrh	r1, [fp, #-14]
   13f18:	add	r0, r0, r1
   13f1c:	str	r0, [fp, #-12]
   13f20:	ldr	r0, [fp, #-12]
   13f24:	add	r0, r0, #4
   13f28:	ldr	r1, [fp, #-12]
   13f2c:	str	r0, [sp, #4]
   13f30:	mov	r0, r1
   13f34:	bl	146a0 <main@@Base+0x1a4>
   13f38:	ldr	r1, [sp, #4]
   13f3c:	add	r0, r1, r0
   13f40:	str	r0, [fp, #-4]
   13f44:	b	13f50 <print_schema@@Base+0x954>
   13f48:	movw	r0, #0
   13f4c:	str	r0, [fp, #-4]
   13f50:	ldr	r0, [fp, #-4]
   13f54:	mov	sp, fp
   13f58:	pop	{fp, pc}
   13f5c:	andeq	r0, r0, r2, asr #28
   13f60:	andeq	r0, r0, r0, ror #28
   13f64:	andeq	r1, r0, fp, lsl #23
   13f68:	push	{fp, lr}
   13f6c:	mov	fp, sp
   13f70:	sub	sp, sp, #16
   13f74:	str	r0, [fp, #-4]
   13f78:	movw	r0, #0
   13f7c:	strh	r0, [fp, #-6]
   13f80:	ldr	r0, [fp, #-4]
   13f84:	movw	r1, #0
   13f88:	cmp	r0, r1
   13f8c:	beq	13f98 <print_schema@@Base+0x99c>
   13f90:	b	13f94 <print_schema@@Base+0x998>
   13f94:	b	13fb8 <print_schema@@Base+0x9bc>
   13f98:	ldr	r0, [pc, #136]	; 14028 <print_schema@@Base+0xa2c>
   13f9c:	add	r0, pc, r0
   13fa0:	ldr	r1, [pc, #132]	; 1402c <print_schema@@Base+0xa30>
   13fa4:	add	r1, pc, r1
   13fa8:	ldr	r2, [pc, #128]	; 14030 <print_schema@@Base+0xa34>
   13fac:	add	r3, pc, r2
   13fb0:	movw	r2, #241	; 0xf1
   13fb4:	bl	109b4 <__assert_fail@plt>
   13fb8:	mov	r0, #4
   13fbc:	strh	r0, [sp, #8]
   13fc0:	ldr	r0, [fp, #-4]
   13fc4:	str	r0, [sp]
   13fc8:	bl	145b8 <main@@Base+0xbc>
   13fcc:	ldr	r1, [sp]
   13fd0:	sub	r0, r1, r0
   13fd4:	str	r0, [sp, #4]
   13fd8:	ldr	r0, [sp, #4]
   13fdc:	bl	145dc <main@@Base+0xe0>
   13fe0:	ldrh	r1, [sp, #8]
   13fe4:	add	r1, r1, #3
   13fe8:	lsl	r1, r1, #1
   13fec:	cmp	r0, r1
   13ff0:	bcc	1400c <print_schema@@Base+0xa10>
   13ff4:	ldr	r0, [sp, #4]
   13ff8:	ldrh	r1, [sp, #8]
   13ffc:	add	r0, r0, r1, lsl #1
   14000:	add	r0, r0, #4
   14004:	bl	145dc <main@@Base+0xe0>
   14008:	strh	r0, [fp, #-6]
   1400c:	ldrh	r0, [fp, #-6]
   14010:	cmp	r0, #0
   14014:	movw	r0, #0
   14018:	movne	r0, #1
   1401c:	and	r0, r0, #1
   14020:	mov	sp, fp
   14024:	pop	{fp, pc}
   14028:	andeq	r0, r0, sl, lsr sp
   1402c:	andeq	r0, r0, r8, asr sp
   14030:	andeq	r1, r0, lr, asr #21
   14034:	push	{fp, lr}
   14038:	mov	fp, sp
   1403c:	sub	sp, sp, #32
   14040:	str	r0, [fp, #-8]
   14044:	movw	r0, #0
   14048:	strh	r0, [fp, #-14]
   1404c:	ldr	r0, [fp, #-8]
   14050:	movw	r1, #0
   14054:	cmp	r0, r1
   14058:	beq	14064 <print_schema@@Base+0xa68>
   1405c:	b	14060 <print_schema@@Base+0xa64>
   14060:	b	14084 <print_schema@@Base+0xa88>
   14064:	ldr	r0, [pc, #192]	; 1412c <print_schema@@Base+0xb30>
   14068:	add	r0, pc, r0
   1406c:	ldr	r1, [pc, #188]	; 14130 <print_schema@@Base+0xb34>
   14070:	add	r1, pc, r1
   14074:	ldr	r2, [pc, #184]	; 14134 <print_schema@@Base+0xb38>
   14078:	add	r3, pc, r2
   1407c:	movw	r2, #241	; 0xf1
   14080:	bl	109b4 <__assert_fail@plt>
   14084:	mov	r0, #4
   14088:	strh	r0, [sp, #16]
   1408c:	ldr	r0, [fp, #-8]
   14090:	str	r0, [sp, #8]
   14094:	bl	145b8 <main@@Base+0xbc>
   14098:	ldr	r1, [sp, #8]
   1409c:	sub	r0, r1, r0
   140a0:	str	r0, [sp, #12]
   140a4:	ldr	r0, [sp, #12]
   140a8:	bl	145dc <main@@Base+0xe0>
   140ac:	ldrh	r1, [sp, #16]
   140b0:	add	r1, r1, #3
   140b4:	lsl	r1, r1, #1
   140b8:	cmp	r0, r1
   140bc:	bcc	140d8 <print_schema@@Base+0xadc>
   140c0:	ldr	r0, [sp, #12]
   140c4:	ldrh	r1, [sp, #16]
   140c8:	add	r0, r0, r1, lsl #1
   140cc:	add	r0, r0, #4
   140d0:	bl	145dc <main@@Base+0xe0>
   140d4:	strh	r0, [fp, #-14]
   140d8:	ldrsh	r0, [fp, #-14]
   140dc:	cmp	r0, #0
   140e0:	beq	14118 <print_schema@@Base+0xb1c>
   140e4:	ldr	r0, [fp, #-8]
   140e8:	ldrh	r1, [fp, #-14]
   140ec:	add	r0, r0, r1
   140f0:	str	r0, [fp, #-12]
   140f4:	ldr	r0, [fp, #-12]
   140f8:	ldr	r1, [fp, #-12]
   140fc:	str	r0, [sp, #4]
   14100:	mov	r0, r1
   14104:	bl	146a0 <main@@Base+0x1a4>
   14108:	ldr	r1, [sp, #4]
   1410c:	add	r0, r1, r0
   14110:	str	r0, [fp, #-4]
   14114:	b	14120 <print_schema@@Base+0xb24>
   14118:	movw	r0, #0
   1411c:	str	r0, [fp, #-4]
   14120:	ldr	r0, [fp, #-4]
   14124:	mov	sp, fp
   14128:	pop	{fp, pc}
   1412c:	andeq	r0, r0, lr, ror #24
   14130:	andeq	r0, r0, ip, lsl #25
   14134:	andeq	r1, r0, r9, asr #20

00014138 <load_and_dump_schema@@Base>:
   14138:	push	{fp, lr}
   1413c:	mov	fp, sp
   14140:	sub	sp, sp, #24
   14144:	str	r0, [fp, #-4]
   14148:	mvn	r0, #0
   1414c:	str	r0, [sp, #8]
   14150:	ldr	r0, [fp, #-4]
   14154:	movw	r1, #10000	; 0x2710
   14158:	add	r2, sp, #12
   1415c:	bl	14298 <load_and_dump_schema@@Base+0x160>
   14160:	str	r0, [fp, #-8]
   14164:	ldr	r0, [fp, #-8]
   14168:	movw	r1, #0
   1416c:	cmp	r0, r1
   14170:	bne	14194 <load_and_dump_schema@@Base+0x5c>
   14174:	ldr	r0, [pc, #252]	; 14278 <load_and_dump_schema@@Base+0x140>
   14178:	add	r1, pc, r0
   1417c:	ldr	r0, [pc, #248]	; 1427c <load_and_dump_schema@@Base+0x144>
   14180:	ldr	r0, [pc, r0]
   14184:	ldr	r0, [r0]
   14188:	ldr	r2, [fp, #-4]
   1418c:	bl	10978 <fprintf@plt>
   14190:	b	14254 <load_and_dump_schema@@Base+0x11c>
   14194:	ldr	r0, [sp, #12]
   14198:	cmp	r0, #12
   1419c:	bcs	141c0 <load_and_dump_schema@@Base+0x88>
   141a0:	ldr	r0, [pc, #232]	; 14290 <load_and_dump_schema@@Base+0x158>
   141a4:	add	r1, pc, r0
   141a8:	ldr	r0, [pc, #228]	; 14294 <load_and_dump_schema@@Base+0x15c>
   141ac:	ldr	r0, [pc, r0]
   141b0:	ldr	r0, [r0]
   141b4:	ldr	r2, [fp, #-4]
   141b8:	bl	10978 <fprintf@plt>
   141bc:	b	14254 <load_and_dump_schema@@Base+0x11c>
   141c0:	ldr	r0, [fp, #-8]
   141c4:	bl	14480 <load_and_dump_schema@@Base+0x348>
   141c8:	str	r0, [sp, #4]
   141cc:	ldr	r0, [sp, #4]
   141d0:	movw	r1, #0
   141d4:	cmp	r0, r1
   141d8:	bne	14218 <load_and_dump_schema@@Base+0xe0>
   141dc:	ldr	r0, [fp, #-8]
   141e0:	add	r0, r0, #4
   141e4:	bl	14480 <load_and_dump_schema@@Base+0x348>
   141e8:	str	r0, [sp, #4]
   141ec:	ldr	r0, [sp, #4]
   141f0:	movw	r1, #0
   141f4:	cmp	r0, r1
   141f8:	beq	14214 <load_and_dump_schema@@Base+0xdc>
   141fc:	ldr	r0, [pc, #124]	; 14280 <load_and_dump_schema@@Base+0x148>
   14200:	add	r1, pc, r0
   14204:	ldr	r0, [pc, #120]	; 14284 <load_and_dump_schema@@Base+0x14c>
   14208:	ldr	r0, [pc, r0]
   1420c:	ldr	r0, [r0]
   14210:	bl	10978 <fprintf@plt>
   14214:	b	14218 <load_and_dump_schema@@Base+0xe0>
   14218:	ldr	r0, [sp, #4]
   1421c:	movw	r1, #0
   14220:	cmp	r0, r1
   14224:	bne	14244 <load_and_dump_schema@@Base+0x10c>
   14228:	ldr	r0, [pc, #88]	; 14288 <load_and_dump_schema@@Base+0x150>
   1422c:	add	r1, pc, r0
   14230:	ldr	r0, [pc, #84]	; 1428c <load_and_dump_schema@@Base+0x154>
   14234:	ldr	r0, [pc, r0]
   14238:	ldr	r0, [r0]
   1423c:	bl	10978 <fprintf@plt>
   14240:	b	14254 <load_and_dump_schema@@Base+0x11c>
   14244:	ldr	r0, [sp, #4]
   14248:	bl	135fc <print_schema@@Base>
   1424c:	movw	r0, #0
   14250:	str	r0, [sp, #8]
   14254:	ldr	r0, [fp, #-8]
   14258:	movw	r1, #0
   1425c:	cmp	r0, r1
   14260:	beq	1426c <load_and_dump_schema@@Base+0x134>
   14264:	ldr	r0, [fp, #-8]
   14268:	bl	10918 <free@plt>
   1426c:	ldr	r0, [sp, #8]
   14270:	mov	sp, fp
   14274:	pop	{fp, pc}
   14278:	muleq	r0, r9, r9
   1427c:	andeq	r1, r1, r4, asr #29
   14280:	andeq	r0, r0, sl, asr r9
   14284:	andeq	r1, r1, ip, lsr lr
   14288:	andeq	r0, r0, r7, asr r9
   1428c:	andeq	r1, r1, r0, lsl lr
   14290:	muleq	r0, r6, r9
   14294:	muleq	r1, r8, lr
   14298:	push	{fp, lr}
   1429c:	mov	fp, sp
   142a0:	sub	sp, sp, #56	; 0x38
   142a4:	str	r0, [fp, #-8]
   142a8:	str	r1, [fp, #-12]
   142ac:	str	r2, [fp, #-16]
   142b0:	ldr	r0, [fp, #-16]
   142b4:	movw	r1, #0
   142b8:	cmp	r0, r1
   142bc:	beq	142cc <load_and_dump_schema@@Base+0x194>
   142c0:	ldr	r0, [fp, #-16]
   142c4:	str	r0, [sp, #12]
   142c8:	b	142d8 <load_and_dump_schema@@Base+0x1a0>
   142cc:	add	r0, sp, #20
   142d0:	str	r0, [sp, #12]
   142d4:	b	142d8 <load_and_dump_schema@@Base+0x1a0>
   142d8:	ldr	r0, [sp, #12]
   142dc:	ldr	r1, [pc, #408]	; 1447c <load_and_dump_schema@@Base+0x344>
   142e0:	add	r1, pc, r1
   142e4:	str	r0, [fp, #-16]
   142e8:	ldr	r0, [fp, #-8]
   142ec:	bl	1090c <fopen@plt>
   142f0:	str	r0, [fp, #-20]	; 0xffffffec
   142f4:	movw	r0, #0
   142f8:	str	r0, [fp, #-24]	; 0xffffffe8
   142fc:	str	r0, [sp, #16]
   14300:	ldr	r1, [fp, #-20]	; 0xffffffec
   14304:	cmp	r1, r0
   14308:	bne	14310 <load_and_dump_schema@@Base+0x1d8>
   1430c:	b	1442c <load_and_dump_schema@@Base+0x2f4>
   14310:	ldr	r0, [fp, #-20]	; 0xffffffec
   14314:	movw	r1, #0
   14318:	movw	r2, #2
   1431c:	bl	1099c <fseek@plt>
   14320:	ldr	r1, [fp, #-20]	; 0xffffffec
   14324:	str	r0, [sp, #8]
   14328:	mov	r0, r1
   1432c:	bl	10924 <ftell@plt>
   14330:	str	r0, [fp, #-24]	; 0xffffffe8
   14334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14338:	ldr	r1, [fp, #-16]
   1433c:	str	r0, [r1]
   14340:	ldr	r0, [fp, #-12]
   14344:	cmp	r0, #0
   14348:	bls	14360 <load_and_dump_schema@@Base+0x228>
   1434c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14350:	ldr	r1, [fp, #-12]
   14354:	cmp	r0, r1
   14358:	bls	14360 <load_and_dump_schema@@Base+0x228>
   1435c:	b	1442c <load_and_dump_schema@@Base+0x2f4>
   14360:	ldr	r0, [fp, #-20]	; 0xffffffec
   14364:	bl	10930 <rewind@plt>
   14368:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1436c:	cmp	r0, #0
   14370:	beq	14380 <load_and_dump_schema@@Base+0x248>
   14374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14378:	str	r0, [sp, #4]
   1437c:	b	1438c <load_and_dump_schema@@Base+0x254>
   14380:	movw	r0, #1
   14384:	str	r0, [sp, #4]
   14388:	b	1438c <load_and_dump_schema@@Base+0x254>
   1438c:	ldr	r0, [sp, #4]
   14390:	bl	10948 <malloc@plt>
   14394:	str	r0, [sp, #16]
   14398:	ldr	r0, [sp, #16]
   1439c:	movw	r1, #0
   143a0:	cmp	r0, r1
   143a4:	bne	143ac <load_and_dump_schema@@Base+0x274>
   143a8:	b	1442c <load_and_dump_schema@@Base+0x2f4>
   143ac:	movw	r0, #0
   143b0:	str	r0, [sp, #28]
   143b4:	ldr	r0, [sp, #16]
   143b8:	ldr	r1, [sp, #28]
   143bc:	add	r0, r0, r1
   143c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   143c4:	ldr	r2, [sp, #28]
   143c8:	sub	r2, r1, r2
   143cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   143d0:	movw	r1, #1
   143d4:	bl	1093c <fread@plt>
   143d8:	str	r0, [sp, #24]
   143dc:	cmp	r0, #0
   143e0:	beq	143f8 <load_and_dump_schema@@Base+0x2c0>
   143e4:	ldr	r0, [sp, #24]
   143e8:	ldr	r1, [sp, #28]
   143ec:	add	r0, r1, r0
   143f0:	str	r0, [sp, #28]
   143f4:	b	143b4 <load_and_dump_schema@@Base+0x27c>
   143f8:	ldr	r0, [sp, #28]
   143fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14400:	cmp	r0, r1
   14404:	beq	1440c <load_and_dump_schema@@Base+0x2d4>
   14408:	b	1442c <load_and_dump_schema@@Base+0x2f4>
   1440c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14410:	bl	10990 <fclose@plt>
   14414:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14418:	ldr	r2, [fp, #-16]
   1441c:	str	r1, [r2]
   14420:	ldr	r1, [sp, #16]
   14424:	str	r1, [fp, #-4]
   14428:	b	14470 <load_and_dump_schema@@Base+0x338>
   1442c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14430:	movw	r1, #0
   14434:	cmp	r0, r1
   14438:	beq	14444 <load_and_dump_schema@@Base+0x30c>
   1443c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14440:	bl	10990 <fclose@plt>
   14444:	ldr	r0, [sp, #16]
   14448:	movw	r1, #0
   1444c:	cmp	r0, r1
   14450:	beq	1445c <load_and_dump_schema@@Base+0x324>
   14454:	ldr	r0, [sp, #16]
   14458:	bl	10918 <free@plt>
   1445c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14460:	ldr	r1, [fp, #-16]
   14464:	str	r0, [r1]
   14468:	movw	r0, #0
   1446c:	str	r0, [fp, #-4]
   14470:	ldr	r0, [fp, #-4]
   14474:	mov	sp, fp
   14478:	pop	{fp, pc}
   1447c:	andeq	r1, r0, r3, lsr r8
   14480:	push	{fp, lr}
   14484:	mov	fp, sp
   14488:	sub	sp, sp, #16
   1448c:	ldr	r1, [pc, #100]	; 144f8 <load_and_dump_schema@@Base+0x3c0>
   14490:	add	r1, pc, r1
   14494:	str	r0, [fp, #-4]
   14498:	str	r1, [sp, #8]
   1449c:	ldr	r0, [fp, #-4]
   144a0:	movw	r1, #0
   144a4:	cmp	r0, r1
   144a8:	beq	144c0 <load_and_dump_schema@@Base+0x388>
   144ac:	ldr	r0, [fp, #-4]
   144b0:	ldr	r1, [sp, #8]
   144b4:	bl	14830 <main@@Base+0x334>
   144b8:	cmp	r0, #0
   144bc:	bne	144cc <load_and_dump_schema@@Base+0x394>
   144c0:	movw	r0, #0
   144c4:	str	r0, [sp, #4]
   144c8:	b	144ec <load_and_dump_schema@@Base+0x3b4>
   144cc:	ldr	r0, [fp, #-4]
   144d0:	ldr	r1, [fp, #-4]
   144d4:	str	r0, [sp]
   144d8:	mov	r0, r1
   144dc:	bl	146a0 <main@@Base+0x1a4>
   144e0:	ldr	r1, [sp]
   144e4:	add	r0, r1, r0
   144e8:	str	r0, [sp, #4]
   144ec:	ldr	r0, [sp, #4]
   144f0:	mov	sp, fp
   144f4:	pop	{fp, pc}
   144f8:	andeq	r1, r0, r6, lsl #13

000144fc <main@@Base>:
   144fc:	push	{fp, lr}
   14500:	mov	fp, sp
   14504:	sub	sp, sp, #24
   14508:	movw	r2, #0
   1450c:	str	r2, [fp, #-4]
   14510:	str	r0, [fp, #-8]
   14514:	str	r1, [sp, #12]
   14518:	ldr	r0, [fp, #-8]
   1451c:	cmp	r0, #2
   14520:	beq	1458c <main@@Base+0x90>
   14524:	ldr	r0, [pc, #132]	; 145b0 <main@@Base+0xb4>
   14528:	add	r1, pc, r0
   1452c:	ldr	r0, [pc, #128]	; 145b4 <main@@Base+0xb8>
   14530:	ldr	r0, [pc, r0]
   14534:	ldr	r0, [r0]
   14538:	bl	10978 <fprintf@plt>
   1453c:	ldr	r1, [pc, #100]	; 145a8 <main@@Base+0xac>
   14540:	add	r1, pc, r1
   14544:	ldr	r2, [pc, #96]	; 145ac <main@@Base+0xb0>
   14548:	ldr	r2, [pc, r2]
   1454c:	ldr	r2, [r2]
   14550:	str	r0, [sp, #8]
   14554:	mov	r0, r2
   14558:	bl	10978 <fprintf@plt>
   1455c:	ldr	r1, [pc, #60]	; 145a0 <main@@Base+0xa4>
   14560:	add	r1, pc, r1
   14564:	ldr	r2, [pc, #56]	; 145a4 <main@@Base+0xa8>
   14568:	ldr	r2, [pc, r2]
   1456c:	ldr	r2, [r2]
   14570:	str	r0, [sp, #4]
   14574:	mov	r0, r2
   14578:	bl	10978 <fprintf@plt>
   1457c:	mvn	r1, #0
   14580:	str	r0, [sp]
   14584:	mov	r0, r1
   14588:	bl	1096c <exit@plt>
   1458c:	ldr	r0, [sp, #12]
   14590:	ldr	r0, [r0, #4]
   14594:	bl	14138 <load_and_dump_schema@@Base>
   14598:	mov	sp, fp
   1459c:	pop	{fp, pc}
   145a0:	andeq	r0, r0, r7, lsr #13
   145a4:	ldrdeq	r1, [r1], -ip
   145a8:	andeq	r0, r0, ip, ror r6
   145ac:	strdeq	r1, [r1], -ip
   145b0:	andeq	r0, r0, r7, ror r6
   145b4:	andeq	r1, r1, r4, lsl fp
   145b8:	push	{fp, lr}
   145bc:	mov	fp, sp
   145c0:	sub	sp, sp, #8
   145c4:	str	r0, [sp, #4]
   145c8:	ldr	r0, [sp, #4]
   145cc:	ldr	r0, [r0]
   145d0:	bl	14604 <main@@Base+0x108>
   145d4:	mov	sp, fp
   145d8:	pop	{fp, pc}
   145dc:	push	{fp, lr}
   145e0:	mov	fp, sp
   145e4:	sub	sp, sp, #8
   145e8:	str	r0, [sp, #4]
   145ec:	ldr	r0, [sp, #4]
   145f0:	ldrh	r0, [r0]
   145f4:	bl	14618 <main@@Base+0x11c>
   145f8:	uxth	r0, r0
   145fc:	mov	sp, fp
   14600:	pop	{fp, pc}
   14604:	sub	sp, sp, #4
   14608:	str	r0, [sp]
   1460c:	ldr	r0, [sp]
   14610:	add	sp, sp, #4
   14614:	bx	lr
   14618:	sub	sp, sp, #4
   1461c:	strh	r0, [sp, #2]
   14620:	ldrh	r0, [sp, #2]
   14624:	add	sp, sp, #4
   14628:	bx	lr
   1462c:	push	{fp, lr}
   14630:	mov	fp, sp
   14634:	sub	sp, sp, #8
   14638:	str	r0, [sp, #4]
   1463c:	ldr	r0, [sp, #4]
   14640:	ldrsb	r0, [r0]
   14644:	bl	14654 <main@@Base+0x158>
   14648:	sxtb	r0, r0
   1464c:	mov	sp, fp
   14650:	pop	{fp, pc}
   14654:	sub	sp, sp, #4
   14658:	strb	r0, [sp, #3]
   1465c:	ldrsb	r0, [sp, #3]
   14660:	add	sp, sp, #4
   14664:	bx	lr
   14668:	push	{fp, lr}
   1466c:	mov	fp, sp
   14670:	sub	sp, sp, #8
   14674:	str	r0, [sp, #4]
   14678:	ldr	r0, [sp, #4]
   1467c:	ldr	r0, [r0]
   14680:	bl	1468c <main@@Base+0x190>
   14684:	mov	sp, fp
   14688:	pop	{fp, pc}
   1468c:	sub	sp, sp, #4
   14690:	str	r0, [sp]
   14694:	ldr	r0, [sp]
   14698:	add	sp, sp, #4
   1469c:	bx	lr
   146a0:	push	{fp, lr}
   146a4:	mov	fp, sp
   146a8:	sub	sp, sp, #8
   146ac:	str	r0, [sp, #4]
   146b0:	ldr	r0, [sp, #4]
   146b4:	ldr	r0, [r0]
   146b8:	bl	146c4 <main@@Base+0x1c8>
   146bc:	mov	sp, fp
   146c0:	pop	{fp, pc}
   146c4:	sub	sp, sp, #4
   146c8:	str	r0, [sp]
   146cc:	ldr	r0, [sp]
   146d0:	add	sp, sp, #4
   146d4:	bx	lr
   146d8:	push	{fp, lr}
   146dc:	mov	fp, sp
   146e0:	sub	sp, sp, #8
   146e4:	str	r0, [sp, #4]
   146e8:	ldr	r0, [sp, #4]
   146ec:	movw	r1, #0
   146f0:	cmp	r0, r1
   146f4:	beq	14710 <main@@Base+0x214>
   146f8:	ldr	r0, [sp, #4]
   146fc:	mvn	r1, #3
   14700:	add	r0, r0, r1
   14704:	bl	146a0 <main@@Base+0x1a4>
   14708:	str	r0, [sp]
   1470c:	b	1471c <main@@Base+0x220>
   14710:	movw	r0, #0
   14714:	str	r0, [sp]
   14718:	b	1471c <main@@Base+0x220>
   1471c:	ldr	r0, [sp]
   14720:	mov	sp, fp
   14724:	pop	{fp, pc}
   14728:	push	{fp, lr}
   1472c:	mov	fp, sp
   14730:	sub	sp, sp, #8
   14734:	str	r0, [sp, #4]
   14738:	ldr	r0, [sp, #4]
   1473c:	ldrh	r0, [r0]
   14740:	bl	14750 <main@@Base+0x254>
   14744:	uxth	r0, r0
   14748:	mov	sp, fp
   1474c:	pop	{fp, pc}
   14750:	sub	sp, sp, #4
   14754:	strh	r0, [sp, #2]
   14758:	ldrh	r0, [sp, #2]
   1475c:	add	sp, sp, #4
   14760:	bx	lr
   14764:	push	{fp, lr}
   14768:	mov	fp, sp
   1476c:	sub	sp, sp, #8
   14770:	str	r0, [sp, #4]
   14774:	ldr	r0, [sp, #4]
   14778:	ldr	r1, [r0]
   1477c:	ldr	r0, [r0, #4]
   14780:	str	r0, [sp]
   14784:	mov	r0, r1
   14788:	ldr	r1, [sp]
   1478c:	bl	14798 <main@@Base+0x29c>
   14790:	mov	sp, fp
   14794:	pop	{fp, pc}
   14798:	sub	sp, sp, #8
   1479c:	str	r0, [sp]
   147a0:	str	r1, [sp, #4]
   147a4:	ldr	r0, [sp]
   147a8:	ldr	r1, [sp, #4]
   147ac:	add	sp, sp, #8
   147b0:	bx	lr
   147b4:	push	{fp, lr}
   147b8:	mov	fp, sp
   147bc:	sub	sp, sp, #8
   147c0:	str	r0, [sp, #4]
   147c4:	ldr	r0, [sp, #4]
   147c8:	vldr	d0, [r0]
   147cc:	bl	147d8 <main@@Base+0x2dc>
   147d0:	mov	sp, fp
   147d4:	pop	{fp, pc}
   147d8:	sub	sp, sp, #16
   147dc:	vstr	d0, [sp, #8]
   147e0:	vldr	d16, [sp, #8]
   147e4:	vstr	d16, [sp]
   147e8:	vldr	d0, [sp]
   147ec:	add	sp, sp, #16
   147f0:	bx	lr
   147f4:	push	{fp, lr}
   147f8:	mov	fp, sp
   147fc:	sub	sp, sp, #8
   14800:	str	r0, [sp, #4]
   14804:	ldr	r0, [sp, #4]
   14808:	ldrb	r0, [r0]
   1480c:	bl	1481c <main@@Base+0x320>
   14810:	and	r0, r0, #255	; 0xff
   14814:	mov	sp, fp
   14818:	pop	{fp, pc}
   1481c:	sub	sp, sp, #4
   14820:	strb	r0, [sp, #3]
   14824:	ldrb	r0, [sp, #3]
   14828:	add	sp, sp, #4
   1482c:	bx	lr
   14830:	push	{fp, lr}
   14834:	mov	fp, sp
   14838:	sub	sp, sp, #32
   1483c:	str	r0, [fp, #-8]
   14840:	str	r1, [fp, #-12]
   14844:	movw	r0, #0
   14848:	str	r0, [sp, #12]
   1484c:	ldr	r1, [fp, #-12]
   14850:	cmp	r1, r0
   14854:	bne	14864 <main@@Base+0x368>
   14858:	movw	r0, #1
   1485c:	str	r0, [fp, #-4]
   14860:	b	148d0 <main@@Base+0x3d4>
   14864:	add	r0, sp, #12
   14868:	ldr	r1, [fp, #-12]
   1486c:	movw	r2, #4
   14870:	bl	10984 <strncpy@plt>
   14874:	ldr	r1, [sp, #12]
   14878:	str	r0, [sp, #8]
   1487c:	mov	r0, r1
   14880:	bl	148dc <main@@Base+0x3e0>
   14884:	str	r0, [sp, #12]
   14888:	ldr	r0, [fp, #-8]
   1488c:	add	r0, r0, #4
   14890:	bl	148f0 <main@@Base+0x3f4>
   14894:	str	r0, [sp, #16]
   14898:	ldr	r0, [sp, #12]
   1489c:	cmp	r0, #0
   148a0:	movw	r0, #1
   148a4:	str	r0, [sp, #4]
   148a8:	beq	148c4 <main@@Base+0x3c8>
   148ac:	ldr	r0, [sp, #16]
   148b0:	ldr	r1, [sp, #12]
   148b4:	cmp	r0, r1
   148b8:	movw	r0, #0
   148bc:	moveq	r0, #1
   148c0:	str	r0, [sp, #4]
   148c4:	ldr	r0, [sp, #4]
   148c8:	and	r0, r0, #1
   148cc:	str	r0, [fp, #-4]
   148d0:	ldr	r0, [fp, #-4]
   148d4:	mov	sp, fp
   148d8:	pop	{fp, pc}
   148dc:	sub	sp, sp, #4
   148e0:	str	r0, [sp]
   148e4:	ldr	r0, [sp]
   148e8:	add	sp, sp, #4
   148ec:	bx	lr
   148f0:	push	{fp, lr}
   148f4:	mov	fp, sp
   148f8:	sub	sp, sp, #8
   148fc:	str	r0, [sp, #4]
   14900:	ldr	r0, [sp, #4]
   14904:	ldr	r0, [r0]
   14908:	bl	14914 <main@@Base+0x418>
   1490c:	mov	sp, fp
   14910:	pop	{fp, pc}
   14914:	sub	sp, sp, #4
   14918:	str	r0, [sp]
   1491c:	ldr	r0, [sp]
   14920:	add	sp, sp, #4
   14924:	bx	lr

00014928 <__libc_csu_init@@Base>:
   14928:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1492c:	mov	r7, r0
   14930:	ldr	r6, [pc, #72]	; 14980 <__libc_csu_init@@Base+0x58>
   14934:	ldr	r5, [pc, #72]	; 14984 <__libc_csu_init@@Base+0x5c>
   14938:	add	r6, pc, r6
   1493c:	add	r5, pc, r5
   14940:	sub	r6, r6, r5
   14944:	mov	r8, r1
   14948:	mov	r9, r2
   1494c:	bl	108e0 <printf@plt-0x20>
   14950:	asrs	r6, r6, #2
   14954:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14958:	mov	r4, #0
   1495c:	add	r4, r4, #1
   14960:	ldr	r3, [r5], #4
   14964:	mov	r2, r9
   14968:	mov	r1, r8
   1496c:	mov	r0, r7
   14970:	blx	r3
   14974:	cmp	r6, r4
   14978:	bne	1495c <__libc_csu_init@@Base+0x34>
   1497c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14980:	andeq	r1, r1, ip, asr #11
   14984:	andeq	r1, r1, r4, asr #11

00014988 <__libc_csu_fini@@Base>:
   14988:	bx	lr

Disassembly of section .fini:

0001498c <.fini>:
   1498c:	push	{r3, lr}
   14990:	pop	{r3, pc}
