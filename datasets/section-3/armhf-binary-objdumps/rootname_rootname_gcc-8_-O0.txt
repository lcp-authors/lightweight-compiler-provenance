
../repos/rootname/rootname:     file format elf32-littlearm


Disassembly of section .init:

00010918 <.init>:
   10918:	push	{r3, lr}
   1091c:	bl	10a88 <_start@@Base+0x3c>
   10920:	pop	{r3, pc}

Disassembly of section .plt:

00010924 <raise@plt-0x14>:
   10924:	push	{lr}		; (str lr, [sp, #-4]!)
   10928:	ldr	lr, [pc, #4]	; 10934 <raise@plt-0x4>
   1092c:	add	lr, pc, lr
   10930:	ldr	pc, [lr, #8]!
   10934:	andeq	r1, r1, ip, asr #13

00010938 <raise@plt>:
   10938:	add	ip, pc, #0, 12
   1093c:	add	ip, ip, #69632	; 0x11000
   10940:	ldr	pc, [ip, #1740]!	; 0x6cc

00010944 <fopen@plt>:
   10944:	add	ip, pc, #0, 12
   10948:	add	ip, ip, #69632	; 0x11000
   1094c:	ldr	pc, [ip, #1732]!	; 0x6c4

00010950 <time@plt>:
   10950:	add	ip, pc, #0, 12
   10954:	add	ip, ip, #69632	; 0x11000
   10958:	ldr	pc, [ip, #1724]!	; 0x6bc

0001095c <xcb_connect@plt>:
   1095c:	add	ip, pc, #0, 12
   10960:	add	ip, ip, #69632	; 0x11000
   10964:	ldr	pc, [ip, #1716]!	; 0x6b4

00010968 <sleep@plt>:
   10968:	add	ip, pc, #0, 12
   1096c:	add	ip, ip, #69632	; 0x11000
   10970:	ldr	pc, [ip, #1708]!	; 0x6ac

00010974 <xcb_flush@plt>:
   10974:	add	ip, pc, #0, 12
   10978:	add	ip, ip, #69632	; 0x11000
   1097c:	ldr	pc, [ip, #1700]!	; 0x6a4

00010980 <rewind@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #69632	; 0x11000
   10988:	ldr	pc, [ip, #1692]!	; 0x69c

0001098c <xcb_screen_next@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #69632	; 0x11000
   10994:	ldr	pc, [ip, #1684]!	; 0x694

00010998 <fread@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #69632	; 0x11000
   109a0:	ldr	pc, [ip, #1676]!	; 0x68c

000109a4 <xcb_setup_roots_iterator@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #69632	; 0x11000
   109ac:	ldr	pc, [ip, #1668]!	; 0x684

000109b0 <puts@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #69632	; 0x11000
   109b8:	ldr	pc, [ip, #1660]!	; 0x67c

000109bc <__libc_start_main@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #69632	; 0x11000
   109c4:	ldr	pc, [ip, #1652]!	; 0x674

000109c8 <localtime@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #69632	; 0x11000
   109d0:	ldr	pc, [ip, #1644]!	; 0x66c

000109d4 <__gmon_start__@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #69632	; 0x11000
   109dc:	ldr	pc, [ip, #1636]!	; 0x664

000109e0 <exit@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #69632	; 0x11000
   109e8:	ldr	pc, [ip, #1628]!	; 0x65c

000109ec <snprintf@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #69632	; 0x11000
   109f4:	ldr	pc, [ip, #1620]!	; 0x654

000109f8 <__isoc99_sscanf@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #69632	; 0x11000
   10a00:	ldr	pc, [ip, #1612]!	; 0x64c

00010a04 <fclose@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #69632	; 0x11000
   10a0c:	ldr	pc, [ip, #1604]!	; 0x644

00010a10 <xcb_disconnect@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #69632	; 0x11000
   10a18:	ldr	pc, [ip, #1596]!	; 0x63c

00010a1c <xcb_connection_has_error@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #69632	; 0x11000
   10a24:	ldr	pc, [ip, #1588]!	; 0x634

00010a28 <xcb_get_setup@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1580]!	; 0x62c

00010a34 <xcb_change_property@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1572]!	; 0x624

00010a40 <abort@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #69632	; 0x11000
   10a48:	ldr	pc, [ip, #1564]!	; 0x61c

Disassembly of section .text:

00010a4c <_start@@Base>:
   10a4c:	mov	fp, #0
   10a50:	mov	lr, #0
   10a54:	pop	{r1}		; (ldr r1, [sp], #4)
   10a58:	mov	r2, sp
   10a5c:	push	{r2}		; (str r2, [sp, #-4]!)
   10a60:	push	{r0}		; (str r0, [sp, #-4]!)
   10a64:	ldr	ip, [pc, #16]	; 10a7c <_start@@Base+0x30>
   10a68:	push	{ip}		; (str ip, [sp, #-4]!)
   10a6c:	ldr	r0, [pc, #12]	; 10a80 <_start@@Base+0x34>
   10a70:	ldr	r3, [pc, #12]	; 10a84 <_start@@Base+0x38>
   10a74:	bl	109bc <__libc_start_main@plt>
   10a78:	bl	10a40 <abort@plt>
   10a7c:	andeq	r1, r1, r4, lsl #11
   10a80:	strdeq	r0, [r1], -r4
   10a84:	andeq	r1, r1, r4, lsr #10
   10a88:	ldr	r3, [pc, #20]	; 10aa4 <_start@@Base+0x58>
   10a8c:	ldr	r2, [pc, #20]	; 10aa8 <_start@@Base+0x5c>
   10a90:	add	r3, pc, r3
   10a94:	ldr	r2, [r3, r2]
   10a98:	cmp	r2, #0
   10a9c:	bxeq	lr
   10aa0:	b	109d4 <__gmon_start__@plt>
   10aa4:	andeq	r1, r1, r8, ror #10
   10aa8:	andeq	r0, r0, r8, rrx
   10aac:	ldr	r0, [pc, #24]	; 10acc <_start@@Base+0x80>
   10ab0:	ldr	r3, [pc, #24]	; 10ad0 <_start@@Base+0x84>
   10ab4:	cmp	r3, r0
   10ab8:	bxeq	lr
   10abc:	ldr	r3, [pc, #16]	; 10ad4 <_start@@Base+0x88>
   10ac0:	cmp	r3, #0
   10ac4:	bxeq	lr
   10ac8:	bx	r3
   10acc:	andeq	r2, r2, r4, ror r0
   10ad0:	andeq	r2, r2, r4, ror r0
   10ad4:	andeq	r0, r0, r0
   10ad8:	ldr	r0, [pc, #36]	; 10b04 <_start@@Base+0xb8>
   10adc:	ldr	r1, [pc, #36]	; 10b08 <_start@@Base+0xbc>
   10ae0:	sub	r1, r1, r0
   10ae4:	asr	r1, r1, #2
   10ae8:	add	r1, r1, r1, lsr #31
   10aec:	asrs	r1, r1, #1
   10af0:	bxeq	lr
   10af4:	ldr	r3, [pc, #16]	; 10b0c <_start@@Base+0xc0>
   10af8:	cmp	r3, #0
   10afc:	bxeq	lr
   10b00:	bx	r3
   10b04:	andeq	r2, r2, r4, ror r0
   10b08:	andeq	r2, r2, r4, ror r0
   10b0c:	andeq	r0, r0, r0
   10b10:	push	{r4, lr}
   10b14:	ldr	r4, [pc, #24]	; 10b34 <_start@@Base+0xe8>
   10b18:	ldrb	r3, [r4]
   10b1c:	cmp	r3, #0
   10b20:	popne	{r4, pc}
   10b24:	bl	10aac <_start@@Base+0x60>
   10b28:	mov	r3, #1
   10b2c:	strb	r3, [r4]
   10b30:	pop	{r4, pc}
   10b34:	andeq	r2, r2, r4, ror r0
   10b38:	b	10ad8 <_start@@Base+0x8c>
   10b3c:	str	fp, [sp, #-8]!
   10b40:	str	lr, [sp, #4]
   10b44:	add	fp, sp, #4
   10b48:	sub	sp, sp, #32
   10b4c:	str	r0, [fp, #-32]	; 0xffffffe0
   10b50:	sub	r3, fp, #12
   10b54:	mov	r1, r3
   10b58:	mov	r0, #0
   10b5c:	bl	1095c <xcb_connect@plt>
   10b60:	mov	r2, r0
   10b64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10b68:	str	r2, [r3]
   10b6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10b70:	ldr	r3, [r3]
   10b74:	mov	r0, r3
   10b78:	bl	10a1c <xcb_connection_has_error@plt>
   10b7c:	mov	r3, r0
   10b80:	cmp	r3, #0
   10b84:	beq	10bb0 <_start@@Base+0x164>
   10b88:	ldr	r3, [pc, #148]	; 10c24 <_start@@Base+0x1d8>
   10b8c:	add	r3, pc, r3
   10b90:	mov	r0, r3
   10b94:	bl	109b0 <puts@plt>
   10b98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10b9c:	ldr	r3, [r3]
   10ba0:	mov	r0, r3
   10ba4:	bl	10a10 <xcb_disconnect@plt>
   10ba8:	mov	r0, #1
   10bac:	bl	109e0 <exit@plt>
   10bb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10bb4:	ldr	r3, [r3]
   10bb8:	mov	r0, r3
   10bbc:	bl	10a28 <xcb_get_setup@plt>
   10bc0:	mov	r2, r0
   10bc4:	sub	r3, fp, #24
   10bc8:	mov	r1, r2
   10bcc:	mov	r0, r3
   10bd0:	bl	109a4 <xcb_setup_roots_iterator@plt>
   10bd4:	b	10be4 <_start@@Base+0x198>
   10bd8:	sub	r3, fp, #24
   10bdc:	mov	r0, r3
   10be0:	bl	1098c <xcb_screen_next@plt>
   10be4:	ldr	r3, [fp, #-12]
   10be8:	sub	r2, r3, #1
   10bec:	str	r2, [fp, #-12]
   10bf0:	cmp	r3, #0
   10bf4:	bne	10bd8 <_start@@Base+0x18c>
   10bf8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10bfc:	str	r3, [fp, #-8]
   10c00:	ldr	r3, [fp, #-8]
   10c04:	ldr	r2, [r3]
   10c08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10c0c:	str	r2, [r3, #4]
   10c10:	nop	{0}
   10c14:	sub	sp, fp, #4
   10c18:	ldr	fp, [sp]
   10c1c:	add	sp, sp, #4
   10c20:	pop	{pc}		; (ldr pc, [sp], #4)
   10c24:	andeq	r0, r0, r0, lsl #20
   10c28:	str	fp, [sp, #-8]!
   10c2c:	str	lr, [sp, #4]
   10c30:	add	fp, sp, #4
   10c34:	sub	sp, sp, #72	; 0x48
   10c38:	str	r0, [fp, #-56]	; 0xffffffc8
   10c3c:	str	r1, [fp, #-60]	; 0xffffffc4
   10c40:	mov	r0, #0
   10c44:	bl	10950 <time@plt>
   10c48:	mov	r3, r0
   10c4c:	str	r3, [fp, #-8]
   10c50:	sub	r3, fp, #8
   10c54:	mov	r0, r3
   10c58:	bl	109c8 <localtime@plt>
   10c5c:	mov	r2, r0
   10c60:	sub	r3, fp, #52	; 0x34
   10c64:	ldrd	r0, [r2]
   10c68:	strd	r0, [r3]
   10c6c:	ldrd	r0, [r2, #8]
   10c70:	strd	r0, [r3, #8]
   10c74:	ldrd	r0, [r2, #16]
   10c78:	strd	r0, [r3, #16]
   10c7c:	ldrd	r0, [r2, #24]
   10c80:	strd	r0, [r3, #24]
   10c84:	ldrd	r0, [r2, #32]
   10c88:	strd	r0, [r3, #32]
   10c8c:	ldr	r2, [r2, #40]	; 0x28
   10c90:	str	r2, [r3, #40]	; 0x28
   10c94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   10c98:	add	r3, r3, #1888	; 0x760
   10c9c:	add	r3, r3, #12
   10ca0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10ca4:	add	r2, r2, #1
   10ca8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10cac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10cb0:	ldr	ip, [fp, #-48]	; 0xffffffd0
   10cb4:	str	ip, [sp, #12]
   10cb8:	str	r0, [sp, #8]
   10cbc:	str	r1, [sp, #4]
   10cc0:	str	r2, [sp]
   10cc4:	ldr	r2, [pc, #36]	; 10cf0 <_start@@Base+0x2a4>
   10cc8:	add	r2, pc, r2
   10ccc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   10cd0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   10cd4:	bl	109ec <snprintf@plt>
   10cd8:	mov	r3, r0
   10cdc:	mov	r0, r3
   10ce0:	sub	sp, fp, #4
   10ce4:	ldr	fp, [sp]
   10ce8:	add	sp, sp, #4
   10cec:	pop	{pc}		; (ldr pc, [sp], #4)
   10cf0:	ldrdeq	r0, [r0], -ip

00010cf4 <main@@Base>:
   10cf4:	str	fp, [sp, #-8]!
   10cf8:	str	lr, [sp, #4]
   10cfc:	add	fp, sp, #4
   10d00:	sub	sp, sp, #144	; 0x90
   10d04:	sub	r3, fp, #100	; 0x64
   10d08:	mov	r0, r3
   10d0c:	bl	10b3c <_start@@Base+0xf0>
   10d10:	sub	r3, fp, #132	; 0x84
   10d14:	mov	r0, r3
   10d18:	bl	10ef8 <init_bat@@Base>
   10d1c:	mov	r3, #0
   10d20:	strb	r3, [fp, #-12]
   10d24:	mov	r3, #0
   10d28:	str	r3, [fp, #-8]
   10d2c:	ldrb	r3, [fp, #-108]	; 0xffffff94
   10d30:	cmp	r3, #0
   10d34:	beq	10d68 <main@@Base+0x74>
   10d38:	sub	r2, fp, #92	; 0x5c
   10d3c:	ldr	r3, [fp, #-8]
   10d40:	add	r1, r2, r3
   10d44:	ldr	r3, [fp, #-8]
   10d48:	rsb	r2, r3, #80	; 0x50
   10d4c:	sub	r3, fp, #132	; 0x84
   10d50:	mov	r0, r3
   10d54:	bl	1117c <bat@@Base>
   10d58:	mov	r2, r0
   10d5c:	ldr	r3, [fp, #-8]
   10d60:	add	r3, r3, r2
   10d64:	str	r3, [fp, #-8]
   10d68:	sub	r2, fp, #92	; 0x5c
   10d6c:	ldr	r3, [fp, #-8]
   10d70:	add	r2, r2, r3
   10d74:	ldr	r3, [fp, #-8]
   10d78:	rsb	r3, r3, #80	; 0x50
   10d7c:	mov	r1, r3
   10d80:	mov	r0, r2
   10d84:	bl	10c28 <_start@@Base+0x1dc>
   10d88:	mov	r2, r0
   10d8c:	ldr	r3, [fp, #-8]
   10d90:	add	r3, r3, r2
   10d94:	str	r3, [fp, #-8]
   10d98:	ldr	r0, [fp, #-100]	; 0xffffff9c
   10d9c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   10da0:	sub	r3, fp, #92	; 0x5c
   10da4:	str	r3, [sp, #12]
   10da8:	ldr	r3, [fp, #-8]
   10dac:	str	r3, [sp, #8]
   10db0:	mov	r3, #8
   10db4:	str	r3, [sp, #4]
   10db8:	mov	r3, #31
   10dbc:	str	r3, [sp]
   10dc0:	mov	r3, #39	; 0x27
   10dc4:	mov	r1, #0
   10dc8:	bl	10a34 <xcb_change_property@plt>
   10dcc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   10dd0:	mov	r0, r3
   10dd4:	bl	10974 <xcb_flush@plt>
   10dd8:	mov	r3, r0
   10ddc:	cmp	r3, #0
   10de0:	bgt	10e14 <main@@Base+0x120>
   10de4:	ldr	r3, [pc, #112]	; 10e5c <main@@Base+0x168>
   10de8:	add	r3, pc, r3
   10dec:	mov	r0, r3
   10df0:	bl	109b0 <puts@plt>
   10df4:	nop	{0}
   10df8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   10dfc:	mov	r0, r3
   10e00:	bl	10a10 <xcb_disconnect@plt>
   10e04:	ldrb	r3, [fp, #-108]	; 0xffffff94
   10e08:	cmp	r3, #0
   10e0c:	beq	10e44 <main@@Base+0x150>
   10e10:	b	10e20 <main@@Base+0x12c>
   10e14:	mov	r0, #60	; 0x3c
   10e18:	bl	10968 <sleep@plt>
   10e1c:	b	10d1c <main@@Base+0x28>
   10e20:	ldr	r3, [fp, #-132]	; 0xffffff7c
   10e24:	mov	r0, r3
   10e28:	bl	10a04 <fclose@plt>
   10e2c:	ldr	r3, [fp, #-124]	; 0xffffff84
   10e30:	mov	r0, r3
   10e34:	bl	10a04 <fclose@plt>
   10e38:	ldr	r3, [fp, #-128]	; 0xffffff80
   10e3c:	mov	r0, r3
   10e40:	bl	10a04 <fclose@plt>
   10e44:	mov	r3, #2
   10e48:	mov	r0, r3
   10e4c:	sub	sp, fp, #4
   10e50:	ldr	fp, [sp]
   10e54:	add	sp, sp, #4
   10e58:	pop	{pc}		; (ldr pc, [sp], #4)
   10e5c:	ldrdeq	r0, [r0], -r8

00010e60 <read_int@@Base>:
   10e60:	str	fp, [sp, #-8]!
   10e64:	str	lr, [sp, #4]
   10e68:	add	fp, sp, #4
   10e6c:	sub	sp, sp, #64	; 0x40
   10e70:	str	r0, [fp, #-64]	; 0xffffffc0
   10e74:	ldr	r0, [fp, #-64]	; 0xffffffc0
   10e78:	bl	10980 <rewind@plt>
   10e7c:	sub	r0, fp, #60	; 0x3c
   10e80:	ldr	r3, [fp, #-64]	; 0xffffffc0
   10e84:	mov	r2, #40	; 0x28
   10e88:	mov	r1, #1
   10e8c:	bl	10998 <fread@plt>
   10e90:	str	r0, [fp, #-8]
   10e94:	sub	r2, fp, #60	; 0x3c
   10e98:	ldr	r3, [fp, #-8]
   10e9c:	add	r3, r2, r3
   10ea0:	mov	r2, #0
   10ea4:	strb	r2, [r3]
   10ea8:	sub	r2, fp, #20
   10eac:	sub	r3, fp, #60	; 0x3c
   10eb0:	ldr	r1, [pc, #60]	; 10ef4 <read_int@@Base+0x94>
   10eb4:	add	r1, pc, r1
   10eb8:	mov	r0, r3
   10ebc:	bl	109f8 <__isoc99_sscanf@plt>
   10ec0:	mov	r3, r0
   10ec4:	cmp	r3, #1
   10ec8:	bne	10ed4 <read_int@@Base+0x74>
   10ecc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   10ed0:	b	10edc <read_int@@Base+0x7c>
   10ed4:	mvn	r2, #0
   10ed8:	mov	r3, #0
   10edc:	mov	r0, r2
   10ee0:	mov	r1, r3
   10ee4:	sub	sp, fp, #4
   10ee8:	ldr	fp, [sp]
   10eec:	add	sp, sp, #4
   10ef0:	pop	{pc}		; (ldr pc, [sp], #4)
   10ef4:	andeq	r0, r0, ip, lsr #14

00010ef8 <init_bat@@Base>:
   10ef8:	str	fp, [sp, #-8]!
   10efc:	str	lr, [sp, #4]
   10f00:	add	fp, sp, #4
   10f04:	sub	sp, sp, #16
   10f08:	str	r0, [fp, #-16]
   10f0c:	ldr	r3, [pc, #424]	; 110bc <init_bat@@Base+0x1c4>
   10f10:	add	r3, pc, r3
   10f14:	mov	r1, r3
   10f18:	ldr	r3, [pc, #416]	; 110c0 <init_bat@@Base+0x1c8>
   10f1c:	add	r3, pc, r3
   10f20:	mov	r0, r3
   10f24:	bl	10944 <fopen@plt>
   10f28:	str	r0, [fp, #-8]
   10f2c:	ldr	r3, [fp, #-8]
   10f30:	cmp	r3, #0
   10f34:	bne	10f58 <init_bat@@Base+0x60>
   10f38:	ldr	r3, [pc, #388]	; 110c4 <init_bat@@Base+0x1cc>
   10f3c:	add	r3, pc, r3
   10f40:	mov	r1, r3
   10f44:	ldr	r3, [pc, #380]	; 110c8 <init_bat@@Base+0x1d0>
   10f48:	add	r3, pc, r3
   10f4c:	mov	r0, r3
   10f50:	bl	10944 <fopen@plt>
   10f54:	str	r0, [fp, #-8]
   10f58:	ldr	r3, [fp, #-8]
   10f5c:	cmp	r3, #0
   10f60:	bne	10f98 <init_bat@@Base+0xa0>
   10f64:	ldr	r3, [fp, #-16]
   10f68:	mov	r2, #0
   10f6c:	strb	r2, [r3, #24]
   10f70:	ldr	r3, [fp, #-16]
   10f74:	mov	r2, #0
   10f78:	str	r2, [r3]
   10f7c:	ldr	r3, [fp, #-16]
   10f80:	mov	r2, #0
   10f84:	str	r2, [r3, #4]
   10f88:	ldr	r3, [fp, #-16]
   10f8c:	mov	r2, #0
   10f90:	str	r2, [r3, #8]
   10f94:	b	110ac <init_bat@@Base+0x1b4>
   10f98:	ldr	r3, [fp, #-16]
   10f9c:	mov	r2, #1
   10fa0:	strb	r2, [r3, #24]
   10fa4:	ldr	r0, [fp, #-8]
   10fa8:	bl	10e60 <read_int@@Base>
   10fac:	mov	r2, r0
   10fb0:	mov	r3, r1
   10fb4:	ldr	r1, [fp, #-16]
   10fb8:	strd	r2, [r1, #16]
   10fbc:	ldr	r3, [pc, #264]	; 110cc <init_bat@@Base+0x1d4>
   10fc0:	add	r3, pc, r3
   10fc4:	mov	r1, r3
   10fc8:	ldr	r3, [pc, #256]	; 110d0 <init_bat@@Base+0x1d8>
   10fcc:	add	r3, pc, r3
   10fd0:	mov	r0, r3
   10fd4:	bl	10944 <fopen@plt>
   10fd8:	mov	r2, r0
   10fdc:	ldr	r3, [fp, #-16]
   10fe0:	str	r2, [r3]
   10fe4:	ldr	r3, [pc, #232]	; 110d4 <init_bat@@Base+0x1dc>
   10fe8:	add	r3, pc, r3
   10fec:	mov	r1, r3
   10ff0:	ldr	r3, [pc, #224]	; 110d8 <init_bat@@Base+0x1e0>
   10ff4:	add	r3, pc, r3
   10ff8:	mov	r0, r3
   10ffc:	bl	10944 <fopen@plt>
   11000:	mov	r2, r0
   11004:	ldr	r3, [fp, #-16]
   11008:	str	r2, [r3, #4]
   1100c:	ldr	r3, [fp, #-16]
   11010:	ldr	r3, [r3, #4]
   11014:	cmp	r3, #0
   11018:	bne	11044 <init_bat@@Base+0x14c>
   1101c:	ldr	r3, [pc, #184]	; 110dc <init_bat@@Base+0x1e4>
   11020:	add	r3, pc, r3
   11024:	mov	r1, r3
   11028:	ldr	r3, [pc, #176]	; 110e0 <init_bat@@Base+0x1e8>
   1102c:	add	r3, pc, r3
   11030:	mov	r0, r3
   11034:	bl	10944 <fopen@plt>
   11038:	mov	r2, r0
   1103c:	ldr	r3, [fp, #-16]
   11040:	str	r2, [r3, #4]
   11044:	ldr	r3, [pc, #152]	; 110e4 <init_bat@@Base+0x1ec>
   11048:	add	r3, pc, r3
   1104c:	mov	r1, r3
   11050:	ldr	r3, [pc, #144]	; 110e8 <init_bat@@Base+0x1f0>
   11054:	add	r3, pc, r3
   11058:	mov	r0, r3
   1105c:	bl	10944 <fopen@plt>
   11060:	mov	r2, r0
   11064:	ldr	r3, [fp, #-16]
   11068:	str	r2, [r3, #8]
   1106c:	ldr	r3, [fp, #-16]
   11070:	ldr	r3, [r3, #8]
   11074:	cmp	r3, #0
   11078:	bne	110a4 <init_bat@@Base+0x1ac>
   1107c:	ldr	r3, [pc, #104]	; 110ec <init_bat@@Base+0x1f4>
   11080:	add	r3, pc, r3
   11084:	mov	r1, r3
   11088:	ldr	r3, [pc, #96]	; 110f0 <init_bat@@Base+0x1f8>
   1108c:	add	r3, pc, r3
   11090:	mov	r0, r3
   11094:	bl	10944 <fopen@plt>
   11098:	mov	r2, r0
   1109c:	ldr	r3, [fp, #-16]
   110a0:	str	r2, [r3, #8]
   110a4:	ldr	r0, [fp, #-8]
   110a8:	bl	10a04 <fclose@plt>
   110ac:	sub	sp, fp, #4
   110b0:	ldr	fp, [sp]
   110b4:	add	sp, sp, #4
   110b8:	pop	{pc}		; (ldr pc, [sp], #4)
   110bc:	ldrdeq	r0, [r0], -r8
   110c0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   110c4:	andeq	r0, r0, ip, lsr #13
   110c8:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   110cc:	andeq	r0, r0, r8, lsr #12
   110d0:	andeq	r0, r0, r8, ror r6
   110d4:	andeq	r0, r0, r0, lsl #12
   110d8:	andeq	r0, r0, r4, ror r6
   110dc:	andeq	r0, r0, r8, asr #11
   110e0:	andeq	r0, r0, r4, ror #12
   110e4:	andeq	r0, r0, r0, lsr #11
   110e8:	andeq	r0, r0, r4, ror #12
   110ec:	andeq	r0, r0, r8, ror #10
   110f0:	andeq	r0, r0, r4, asr r6

000110f4 <close_bat@@Base>:
   110f4:	str	fp, [sp, #-8]!
   110f8:	str	lr, [sp, #4]
   110fc:	add	fp, sp, #4
   11100:	sub	sp, sp, #8
   11104:	str	r0, [fp, #-8]
   11108:	ldr	r3, [fp, #-8]
   1110c:	ldr	r3, [r3]
   11110:	cmp	r3, #0
   11114:	beq	11128 <close_bat@@Base+0x34>
   11118:	ldr	r3, [fp, #-8]
   1111c:	ldr	r3, [r3]
   11120:	mov	r0, r3
   11124:	bl	10a04 <fclose@plt>
   11128:	ldr	r3, [fp, #-8]
   1112c:	ldr	r3, [r3, #4]
   11130:	cmp	r3, #0
   11134:	beq	11148 <close_bat@@Base+0x54>
   11138:	ldr	r3, [fp, #-8]
   1113c:	ldr	r3, [r3, #4]
   11140:	mov	r0, r3
   11144:	bl	10a04 <fclose@plt>
   11148:	ldr	r3, [fp, #-8]
   1114c:	ldr	r3, [r3, #8]
   11150:	cmp	r3, #0
   11154:	beq	11168 <close_bat@@Base+0x74>
   11158:	ldr	r3, [fp, #-8]
   1115c:	ldr	r3, [r3, #8]
   11160:	mov	r0, r3
   11164:	bl	10a04 <fclose@plt>
   11168:	nop	{0}
   1116c:	sub	sp, fp, #4
   11170:	ldr	fp, [sp]
   11174:	add	sp, sp, #4
   11178:	pop	{pc}		; (ldr pc, [sp], #4)

0001117c <bat@@Base>:
   1117c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11180:	strd	r6, [sp, #8]
   11184:	strd	r8, [sp, #16]
   11188:	str	fp, [sp, #24]
   1118c:	str	lr, [sp, #28]
   11190:	add	fp, sp, #28
   11194:	sub	sp, sp, #64	; 0x40
   11198:	str	r0, [fp, #-72]	; 0xffffffb8
   1119c:	str	r1, [fp, #-76]	; 0xffffffb4
   111a0:	str	r2, [fp, #-80]	; 0xffffffb0
   111a4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   111a8:	ldr	r3, [r3]
   111ac:	mov	r0, r3
   111b0:	bl	10e60 <read_int@@Base>
   111b4:	mov	r2, r0
   111b8:	mov	r3, r1
   111bc:	orr	r3, r2, r3
   111c0:	cmp	r3, #0
   111c4:	movne	r3, #1
   111c8:	moveq	r3, #0
   111cc:	strb	r3, [fp, #-29]	; 0xffffffe3
   111d0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   111d4:	ldr	r3, [r3, #4]
   111d8:	mov	r0, r3
   111dc:	bl	10e60 <read_int@@Base>
   111e0:	strd	r0, [fp, #-44]	; 0xffffffd4
   111e4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   111e8:	ldr	r3, [r3, #8]
   111ec:	mov	r0, r3
   111f0:	bl	10e60 <read_int@@Base>
   111f4:	strd	r0, [fp, #-52]	; 0xffffffcc
   111f8:	ldrd	r4, [fp, #-44]	; 0xffffffd4
   111fc:	mov	r2, r4
   11200:	mov	r3, r5
   11204:	adds	r8, r2, r2
   11208:	adc	r9, r3, r3
   1120c:	mov	r2, r8
   11210:	mov	r3, r9
   11214:	adds	r2, r2, r4
   11218:	adc	r3, r3, r5
   1121c:	mov	r0, #0
   11220:	mov	r1, #0
   11224:	lsl	r1, r3, #5
   11228:	orr	r1, r1, r2, lsr #27
   1122c:	lsl	r0, r2, #5
   11230:	adds	r2, r2, r0
   11234:	adc	r3, r3, r1
   11238:	adds	r6, r2, r4
   1123c:	adc	r7, r3, r5
   11240:	ldr	r3, [fp, #-72]	; 0xffffffb8
   11244:	ldrd	r2, [r3, #16]
   11248:	mov	r0, r6
   1124c:	mov	r1, r7
   11250:	bl	113b0 <bat@@Base+0x234>
   11254:	mov	r2, r0
   11258:	mov	r3, r1
   1125c:	mov	r3, r2
   11260:	str	r3, [fp, #-56]	; 0xffffffc8
   11264:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   11268:	cmp	r3, #0
   1126c:	beq	11290 <bat@@Base+0x114>
   11270:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11274:	ldr	r2, [pc, #296]	; 113a4 <bat@@Base+0x228>
   11278:	add	r2, pc, r2
   1127c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   11280:	ldr	r0, [fp, #-76]	; 0xffffffb4
   11284:	bl	109ec <snprintf@plt>
   11288:	mov	r3, r0
   1128c:	b	11384 <bat@@Base+0x208>
   11290:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   11294:	orrs	r3, r2, r3
   11298:	beq	11368 <bat@@Base+0x1ec>
   1129c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   112a0:	ldrd	r0, [fp, #-44]	; 0xffffffd4
   112a4:	bl	113b0 <bat@@Base+0x234>
   112a8:	mov	r2, r0
   112ac:	mov	r3, r1
   112b0:	mov	r3, r2
   112b4:	str	r3, [fp, #-60]	; 0xffffffc4
   112b8:	ldrd	r4, [fp, #-44]	; 0xffffffd4
   112bc:	mov	r2, r4
   112c0:	mov	r3, r5
   112c4:	mov	r0, #0
   112c8:	mov	r1, #0
   112cc:	lsl	r1, r3, #4
   112d0:	orr	r1, r1, r2, lsr #28
   112d4:	lsl	r0, r2, #4
   112d8:	mov	r2, r0
   112dc:	mov	r3, r1
   112e0:	subs	r2, r2, r4
   112e4:	sbc	r3, r3, r5
   112e8:	mov	r0, #0
   112ec:	mov	r1, #0
   112f0:	lsl	r1, r3, #2
   112f4:	orr	r1, r1, r2, lsr #30
   112f8:	lsl	r0, r2, #2
   112fc:	mov	r2, r0
   11300:	mov	r3, r1
   11304:	mov	r0, r2
   11308:	mov	r1, r3
   1130c:	ldrd	r2, [fp, #-52]	; 0xffffffcc
   11310:	bl	113b0 <bat@@Base+0x234>
   11314:	mov	r2, r0
   11318:	mov	r3, r1
   1131c:	mov	r0, r2
   11320:	mov	r1, r3
   11324:	mov	r2, #60	; 0x3c
   11328:	mov	r3, #0
   1132c:	bl	113b0 <bat@@Base+0x234>
   11330:	mov	r3, r2
   11334:	str	r3, [fp, #-64]	; 0xffffffc0
   11338:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1133c:	str	r3, [sp, #4]
   11340:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11344:	str	r3, [sp]
   11348:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1134c:	ldr	r2, [pc, #84]	; 113a8 <bat@@Base+0x22c>
   11350:	add	r2, pc, r2
   11354:	ldr	r1, [fp, #-80]	; 0xffffffb0
   11358:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1135c:	bl	109ec <snprintf@plt>
   11360:	mov	r3, r0
   11364:	b	11384 <bat@@Base+0x208>
   11368:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1136c:	ldr	r2, [pc, #56]	; 113ac <bat@@Base+0x230>
   11370:	add	r2, pc, r2
   11374:	ldr	r1, [fp, #-80]	; 0xffffffb0
   11378:	ldr	r0, [fp, #-76]	; 0xffffffb4
   1137c:	bl	109ec <snprintf@plt>
   11380:	mov	r3, r0
   11384:	mov	r0, r3
   11388:	sub	sp, fp, #28
   1138c:	ldrd	r4, [sp]
   11390:	ldrd	r6, [sp, #8]
   11394:	ldrd	r8, [sp, #16]
   11398:	ldr	fp, [sp, #24]
   1139c:	add	sp, sp, #28
   113a0:	pop	{pc}		; (ldr pc, [sp], #4)
   113a4:	muleq	r0, r4, r4
   113a8:	andeq	r0, r0, r8, asr #7
   113ac:			; <UNDEFINED> instruction: 0x000003bc
   113b0:	cmp	r3, #0
   113b4:	cmpeq	r2, #0
   113b8:	bne	113d0 <bat@@Base+0x254>
   113bc:	cmp	r1, #0
   113c0:	cmpeq	r0, #0
   113c4:	mvnne	r1, #0
   113c8:	mvnne	r0, #0
   113cc:	b	113ec <bat@@Base+0x270>
   113d0:	sub	sp, sp, #8
   113d4:	push	{sp, lr}
   113d8:	bl	113fc <bat@@Base+0x280>
   113dc:	ldr	lr, [sp, #4]
   113e0:	add	sp, sp, #8
   113e4:	pop	{r2, r3}
   113e8:	bx	lr
   113ec:	push	{r1, lr}
   113f0:	mov	r0, #8
   113f4:	bl	10938 <raise@plt>
   113f8:	pop	{r1, pc}
   113fc:	cmp	r1, r3
   11400:	cmpeq	r0, r2
   11404:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11408:	mov	r4, r0
   1140c:	movcc	r0, #0
   11410:	mov	r5, r1
   11414:	ldr	lr, [sp, #36]	; 0x24
   11418:	movcc	r1, r0
   1141c:	bcc	11518 <bat@@Base+0x39c>
   11420:	cmp	r3, #0
   11424:	clzeq	ip, r2
   11428:	clzne	ip, r3
   1142c:	addeq	ip, ip, #32
   11430:	cmp	r5, #0
   11434:	clzeq	r1, r4
   11438:	addeq	r1, r1, #32
   1143c:	clzne	r1, r5
   11440:	sub	ip, ip, r1
   11444:	sub	sl, ip, #32
   11448:	lsl	r9, r3, ip
   1144c:	rsb	fp, ip, #32
   11450:	orr	r9, r9, r2, lsl sl
   11454:	orr	r9, r9, r2, lsr fp
   11458:	lsl	r8, r2, ip
   1145c:	cmp	r5, r9
   11460:	cmpeq	r4, r8
   11464:	movcc	r0, #0
   11468:	movcc	r1, r0
   1146c:	bcc	11488 <bat@@Base+0x30c>
   11470:	mov	r0, #1
   11474:	subs	r4, r4, r8
   11478:	lsl	r1, r0, sl
   1147c:	orr	r1, r1, r0, lsr fp
   11480:	lsl	r0, r0, ip
   11484:	sbc	r5, r5, r9
   11488:	cmp	ip, #0
   1148c:	beq	11518 <bat@@Base+0x39c>
   11490:	lsr	r6, r8, #1
   11494:	orr	r6, r6, r9, lsl #31
   11498:	lsr	r7, r9, #1
   1149c:	mov	r2, ip
   114a0:	b	114c4 <bat@@Base+0x348>
   114a4:	subs	r3, r4, r6
   114a8:	sbc	r8, r5, r7
   114ac:	adds	r3, r3, r3
   114b0:	adc	r8, r8, r8
   114b4:	adds	r4, r3, #1
   114b8:	adc	r5, r8, #0
   114bc:	subs	r2, r2, #1
   114c0:	beq	114e0 <bat@@Base+0x364>
   114c4:	cmp	r5, r7
   114c8:	cmpeq	r4, r6
   114cc:	bcs	114a4 <bat@@Base+0x328>
   114d0:	adds	r4, r4, r4
   114d4:	adc	r5, r5, r5
   114d8:	subs	r2, r2, #1
   114dc:	bne	114c4 <bat@@Base+0x348>
   114e0:	lsr	r3, r4, ip
   114e4:	orr	r3, r3, r5, lsl fp
   114e8:	lsr	r2, r5, ip
   114ec:	orr	r3, r3, r5, lsr sl
   114f0:	adds	r0, r0, r4
   114f4:	mov	r4, r3
   114f8:	lsl	r3, r2, ip
   114fc:	orr	r3, r3, r4, lsl sl
   11500:	lsl	ip, r4, ip
   11504:	orr	r3, r3, r4, lsr fp
   11508:	adc	r1, r1, r5
   1150c:	subs	r0, r0, ip
   11510:	mov	r5, r2
   11514:	sbc	r1, r1, r3
   11518:	cmp	lr, #0
   1151c:	strdne	r4, [lr]
   11520:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00011524 <__libc_csu_init@@Base>:
   11524:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11528:	mov	r7, r0
   1152c:	ldr	r6, [pc, #72]	; 1157c <__libc_csu_init@@Base+0x58>
   11530:	ldr	r5, [pc, #72]	; 11580 <__libc_csu_init@@Base+0x5c>
   11534:	add	r6, pc, r6
   11538:	add	r5, pc, r5
   1153c:	sub	r6, r6, r5
   11540:	mov	r8, r1
   11544:	mov	r9, r2
   11548:	bl	10918 <raise@plt-0x20>
   1154c:	asrs	r6, r6, #2
   11550:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11554:	mov	r4, #0
   11558:	add	r4, r4, #1
   1155c:	ldr	r3, [r5], #4
   11560:	mov	r2, r9
   11564:	mov	r1, r8
   11568:	mov	r0, r7
   1156c:	blx	r3
   11570:	cmp	r6, r4
   11574:	bne	11558 <__libc_csu_init@@Base+0x34>
   11578:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1157c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   11580:	andeq	r0, r1, r8, asr #19

00011584 <__libc_csu_fini@@Base>:
   11584:	bx	lr

Disassembly of section .fini:

00011588 <.fini>:
   11588:	push	{r3, lr}
   1158c:	pop	{r3, pc}
