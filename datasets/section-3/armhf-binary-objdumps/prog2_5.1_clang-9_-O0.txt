
../repos/prog2/5.1:     file format elf32-littlearm


Disassembly of section .init:

00010adc <.init>:
   10adc:	push	{r3, lr}
   10ae0:	bl	10ba4 <_start@@Base+0x3c>
   10ae4:	pop	{r3, pc}

Disassembly of section .plt:

00010ae8 <calloc@plt-0x14>:
   10ae8:	push	{lr}		; (str lr, [sp, #-4]!)
   10aec:	ldr	lr, [pc, #4]	; 10af8 <calloc@plt-0x4>
   10af0:	add	lr, pc, lr
   10af4:	ldr	pc, [lr, #8]!
   10af8:	andeq	r2, r1, r8, lsl #10

00010afc <calloc@plt>:
   10afc:	add	ip, pc, #0, 12
   10b00:	add	ip, ip, #73728	; 0x12000
   10b04:	ldr	pc, [ip, #1288]!	; 0x508

00010b08 <printf@plt>:
   10b08:	add	ip, pc, #0, 12
   10b0c:	add	ip, ip, #73728	; 0x12000
   10b10:	ldr	pc, [ip, #1280]!	; 0x500

00010b14 <free@plt>:
   10b14:	add	ip, pc, #0, 12
   10b18:	add	ip, ip, #73728	; 0x12000
   10b1c:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b20 <strcpy@plt>:
   10b20:	add	ip, pc, #0, 12
   10b24:	add	ip, ip, #73728	; 0x12000
   10b28:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b2c <malloc@plt>:
   10b2c:	add	ip, pc, #0, 12
   10b30:	add	ip, ip, #73728	; 0x12000
   10b34:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b38 <__libc_start_main@plt>:
   10b38:	add	ip, pc, #0, 12
   10b3c:	add	ip, ip, #73728	; 0x12000
   10b40:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b44 <__gmon_start__@plt>:
   10b44:	add	ip, pc, #0, 12
   10b48:	add	ip, ip, #73728	; 0x12000
   10b4c:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b50 <strlen@plt>:
   10b50:	add	ip, pc, #0, 12
   10b54:	add	ip, ip, #73728	; 0x12000
   10b58:	ldr	pc, [ip, #1232]!	; 0x4d0

00010b5c <abort@plt>:
   10b5c:	add	ip, pc, #0, 12
   10b60:	add	ip, ip, #73728	; 0x12000
   10b64:	ldr	pc, [ip, #1224]!	; 0x4c8

Disassembly of section .text:

00010b68 <_start@@Base>:
   10b68:	mov	fp, #0
   10b6c:	mov	lr, #0
   10b70:	pop	{r1}		; (ldr r1, [sp], #4)
   10b74:	mov	r2, sp
   10b78:	push	{r2}		; (str r2, [sp, #-4]!)
   10b7c:	push	{r0}		; (str r0, [sp, #-4]!)
   10b80:	ldr	ip, [pc, #16]	; 10b98 <_start@@Base+0x30>
   10b84:	push	{ip}		; (str ip, [sp, #-4]!)
   10b88:	ldr	r0, [pc, #12]	; 10b9c <_start@@Base+0x34>
   10b8c:	ldr	r3, [pc, #12]	; 10ba0 <_start@@Base+0x38>
   10b90:	bl	10b38 <__libc_start_main@plt>
   10b94:	bl	10b5c <abort@plt>
   10b98:	andeq	r1, r1, r0, ror #31
   10b9c:	andeq	r0, r1, r8, asr ip
   10ba0:	andeq	r1, r1, r0, lsl #31
   10ba4:	ldr	r3, [pc, #20]	; 10bc0 <_start@@Base+0x58>
   10ba8:	ldr	r2, [pc, #20]	; 10bc4 <_start@@Base+0x5c>
   10bac:	add	r3, pc, r3
   10bb0:	ldr	r2, [r3, r2]
   10bb4:	cmp	r2, #0
   10bb8:	bxeq	lr
   10bbc:	b	10b44 <__gmon_start__@plt>
   10bc0:	andeq	r2, r1, ip, asr #8
   10bc4:	andeq	r0, r0, r0, lsr r0
   10bc8:	ldr	r0, [pc, #24]	; 10be8 <_start@@Base+0x80>
   10bcc:	ldr	r3, [pc, #24]	; 10bec <_start@@Base+0x84>
   10bd0:	cmp	r3, r0
   10bd4:	bxeq	lr
   10bd8:	ldr	r3, [pc, #16]	; 10bf0 <_start@@Base+0x88>
   10bdc:	cmp	r3, #0
   10be0:	bxeq	lr
   10be4:	bx	r3
   10be8:	andeq	r3, r2, r4, asr #32
   10bec:	andeq	r3, r2, r4, asr #32
   10bf0:	andeq	r0, r0, r0
   10bf4:	ldr	r0, [pc, #36]	; 10c20 <_start@@Base+0xb8>
   10bf8:	ldr	r1, [pc, #36]	; 10c24 <_start@@Base+0xbc>
   10bfc:	sub	r1, r1, r0
   10c00:	asr	r1, r1, #2
   10c04:	add	r1, r1, r1, lsr #31
   10c08:	asrs	r1, r1, #1
   10c0c:	bxeq	lr
   10c10:	ldr	r3, [pc, #16]	; 10c28 <_start@@Base+0xc0>
   10c14:	cmp	r3, #0
   10c18:	bxeq	lr
   10c1c:	bx	r3
   10c20:	andeq	r3, r2, r4, asr #32
   10c24:	andeq	r3, r2, r4, asr #32
   10c28:	andeq	r0, r0, r0
   10c2c:	push	{r4, lr}
   10c30:	ldr	r4, [pc, #24]	; 10c50 <_start@@Base+0xe8>
   10c34:	ldrb	r3, [r4]
   10c38:	cmp	r3, #0
   10c3c:	popne	{r4, pc}
   10c40:	bl	10bc8 <_start@@Base+0x60>
   10c44:	mov	r3, #1
   10c48:	strb	r3, [r4]
   10c4c:	pop	{r4, pc}
   10c50:	andeq	r3, r2, r4, asr #32
   10c54:	b	10bf4 <_start@@Base+0x8c>

00010c58 <main@@Base>:
   10c58:	push	{fp, lr}
   10c5c:	mov	fp, sp
   10c60:	sub	sp, sp, #112	; 0x70
   10c64:	movw	r0, #0
   10c68:	str	r0, [fp, #-4]
   10c6c:	movw	r0, #4
   10c70:	movw	r1, #3
   10c74:	bl	11480 <armazem_novo@@Base>
   10c78:	ldr	r1, [pc, #1432]	; 11218 <main@@Base+0x5c0>
   10c7c:	add	r1, pc, r1
   10c80:	str	r0, [sp, #44]	; 0x2c
   10c84:	mov	r0, r1
   10c88:	bl	10b08 <printf@plt>
   10c8c:	ldr	r1, [pc, #1408]	; 11214 <main@@Base+0x5bc>
   10c90:	add	r1, pc, r1
   10c94:	vldr	s0, [pc, #948]	; 11050 <main@@Base+0x3f8>
   10c98:	str	r0, [sp, #40]	; 0x28
   10c9c:	mov	r0, r1
   10ca0:	bl	11784 <contentor_novo@@Base>
   10ca4:	ldr	r1, [pc, #1380]	; 11210 <main@@Base+0x5b8>
   10ca8:	add	r1, pc, r1
   10cac:	vldr	s0, [pc, #928]	; 11054 <main@@Base+0x3fc>
   10cb0:	str	r0, [fp, #-12]
   10cb4:	mov	r0, r1
   10cb8:	bl	11784 <contentor_novo@@Base>
   10cbc:	ldr	r1, [pc, #1352]	; 1120c <main@@Base+0x5b4>
   10cc0:	add	r1, pc, r1
   10cc4:	vldr	s0, [pc, #908]	; 11058 <main@@Base+0x400>
   10cc8:	str	r0, [fp, #-16]
   10ccc:	mov	r0, r1
   10cd0:	bl	11784 <contentor_novo@@Base>
   10cd4:	ldr	r1, [pc, #1324]	; 11208 <main@@Base+0x5b0>
   10cd8:	add	r1, pc, r1
   10cdc:	vldr	s0, [pc, #888]	; 1105c <main@@Base+0x404>
   10ce0:	str	r0, [fp, #-20]	; 0xffffffec
   10ce4:	mov	r0, r1
   10ce8:	bl	11784 <contentor_novo@@Base>
   10cec:	ldr	r1, [pc, #1296]	; 11204 <main@@Base+0x5ac>
   10cf0:	add	r1, pc, r1
   10cf4:	vldr	s0, [pc, #1012]	; 110f0 <main@@Base+0x498>
   10cf8:	str	r0, [fp, #-24]	; 0xffffffe8
   10cfc:	mov	r0, r1
   10d00:	bl	11784 <contentor_novo@@Base>
   10d04:	ldr	r1, [pc, #1268]	; 11200 <main@@Base+0x5a8>
   10d08:	add	r1, pc, r1
   10d0c:	vldr	s0, [pc, #992]	; 110f4 <main@@Base+0x49c>
   10d10:	str	r0, [fp, #-28]	; 0xffffffe4
   10d14:	mov	r0, r1
   10d18:	bl	11784 <contentor_novo@@Base>
   10d1c:	ldr	r1, [pc, #1240]	; 111fc <main@@Base+0x5a4>
   10d20:	add	r1, pc, r1
   10d24:	vldr	s0, [pc, #972]	; 110f8 <main@@Base+0x4a0>
   10d28:	str	r0, [fp, #-32]	; 0xffffffe0
   10d2c:	mov	r0, r1
   10d30:	bl	11784 <contentor_novo@@Base>
   10d34:	ldr	r1, [pc, #1212]	; 111f8 <main@@Base+0x5a0>
   10d38:	add	r1, pc, r1
   10d3c:	vldr	s0, [pc, #952]	; 110fc <main@@Base+0x4a4>
   10d40:	str	r0, [fp, #-36]	; 0xffffffdc
   10d44:	mov	r0, r1
   10d48:	bl	11784 <contentor_novo@@Base>
   10d4c:	ldr	r1, [pc, #1184]	; 111f4 <main@@Base+0x59c>
   10d50:	add	r1, pc, r1
   10d54:	vldr	s0, [pc, #916]	; 110f0 <main@@Base+0x498>
   10d58:	str	r0, [fp, #-40]	; 0xffffffd8
   10d5c:	mov	r0, r1
   10d60:	bl	11784 <contentor_novo@@Base>
   10d64:	ldr	r1, [pc, #1156]	; 111f0 <main@@Base+0x598>
   10d68:	add	r1, pc, r1
   10d6c:	vldr	s0, [pc, #908]	; 11100 <main@@Base+0x4a8>
   10d70:	str	r0, [fp, #-44]	; 0xffffffd4
   10d74:	mov	r0, r1
   10d78:	bl	11784 <contentor_novo@@Base>
   10d7c:	ldr	r1, [pc, #1128]	; 111ec <main@@Base+0x594>
   10d80:	add	r1, pc, r1
   10d84:	vldr	s0, [pc, #1008]	; 1117c <main@@Base+0x524>
   10d88:	str	r0, [fp, #-48]	; 0xffffffd0
   10d8c:	mov	r0, r1
   10d90:	bl	11784 <contentor_novo@@Base>
   10d94:	ldr	r1, [pc, #1100]	; 111e8 <main@@Base+0x590>
   10d98:	add	r1, pc, r1
   10d9c:	vldr	s0, [pc, #988]	; 11180 <main@@Base+0x528>
   10da0:	str	r0, [fp, #-52]	; 0xffffffcc
   10da4:	mov	r0, r1
   10da8:	bl	11784 <contentor_novo@@Base>
   10dac:	ldr	r1, [pc, #1072]	; 111e4 <main@@Base+0x58c>
   10db0:	add	r1, pc, r1
   10db4:	vldr	s0, [pc, #968]	; 11184 <main@@Base+0x52c>
   10db8:	str	r0, [sp, #56]	; 0x38
   10dbc:	mov	r0, r1
   10dc0:	bl	11784 <contentor_novo@@Base>
   10dc4:	ldr	r1, [pc, #1044]	; 111e0 <main@@Base+0x588>
   10dc8:	add	r1, pc, r1
   10dcc:	str	r0, [sp, #52]	; 0x34
   10dd0:	mov	r0, r1
   10dd4:	bl	10b08 <printf@plt>
   10dd8:	ldr	r1, [sp, #44]	; 0x2c
   10ddc:	str	r0, [sp, #36]	; 0x24
   10de0:	mov	r0, r1
   10de4:	bl	11284 <imprimeArmazem@@Base>
   10de8:	ldr	r0, [pc, #1004]	; 111dc <main@@Base+0x584>
   10dec:	add	r0, pc, r0
   10df0:	bl	10b08 <printf@plt>
   10df4:	ldr	r1, [sp, #44]	; 0x2c
   10df8:	ldr	r2, [fp, #-12]
   10dfc:	str	r0, [sp, #32]
   10e00:	mov	r0, r1
   10e04:	mov	r1, r2
   10e08:	bl	115b8 <armazenar_contentor@@Base>
   10e0c:	cmp	r0, #0
   10e10:	beq	10e28 <main@@Base+0x1d0>
   10e14:	ldr	r0, [pc, #1024]	; 1121c <main@@Base+0x5c4>
   10e18:	add	r0, pc, r0
   10e1c:	ldr	r1, [fp, #-12]
   10e20:	ldr	r1, [r1]
   10e24:	bl	10b08 <printf@plt>
   10e28:	ldr	r0, [sp, #44]	; 0x2c
   10e2c:	ldr	r1, [fp, #-16]
   10e30:	bl	115b8 <armazenar_contentor@@Base>
   10e34:	cmp	r0, #0
   10e38:	beq	10e50 <main@@Base+0x1f8>
   10e3c:	ldr	r0, [pc, #988]	; 11220 <main@@Base+0x5c8>
   10e40:	add	r0, pc, r0
   10e44:	ldr	r1, [fp, #-16]
   10e48:	ldr	r1, [r1]
   10e4c:	bl	10b08 <printf@plt>
   10e50:	ldr	r0, [sp, #44]	; 0x2c
   10e54:	ldr	r1, [fp, #-20]	; 0xffffffec
   10e58:	bl	115b8 <armazenar_contentor@@Base>
   10e5c:	cmp	r0, #0
   10e60:	beq	10e78 <main@@Base+0x220>
   10e64:	ldr	r0, [pc, #952]	; 11224 <main@@Base+0x5cc>
   10e68:	add	r0, pc, r0
   10e6c:	ldr	r1, [fp, #-20]	; 0xffffffec
   10e70:	ldr	r1, [r1]
   10e74:	bl	10b08 <printf@plt>
   10e78:	ldr	r0, [sp, #44]	; 0x2c
   10e7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10e80:	bl	115b8 <armazenar_contentor@@Base>
   10e84:	cmp	r0, #0
   10e88:	beq	10ea0 <main@@Base+0x248>
   10e8c:	ldr	r0, [pc, #916]	; 11228 <main@@Base+0x5d0>
   10e90:	add	r0, pc, r0
   10e94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10e98:	ldr	r1, [r1]
   10e9c:	bl	10b08 <printf@plt>
   10ea0:	ldr	r0, [pc, #904]	; 11230 <main@@Base+0x5d8>
   10ea4:	add	r0, pc, r0
   10ea8:	bl	10b08 <printf@plt>
   10eac:	ldr	r1, [sp, #44]	; 0x2c
   10eb0:	str	r0, [sp, #28]
   10eb4:	mov	r0, r1
   10eb8:	bl	11284 <imprimeArmazem@@Base>
   10ebc:	ldr	r0, [pc, #872]	; 1122c <main@@Base+0x5d4>
   10ec0:	add	r0, pc, r0
   10ec4:	bl	10b08 <printf@plt>
   10ec8:	ldr	r1, [sp, #44]	; 0x2c
   10ecc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10ed0:	str	r0, [sp, #24]
   10ed4:	mov	r0, r1
   10ed8:	mov	r1, r2
   10edc:	bl	115b8 <armazenar_contentor@@Base>
   10ee0:	cmp	r0, #0
   10ee4:	beq	10efc <main@@Base+0x2a4>
   10ee8:	ldr	r0, [pc, #836]	; 11234 <main@@Base+0x5dc>
   10eec:	add	r0, pc, r0
   10ef0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   10ef4:	ldr	r1, [r1]
   10ef8:	bl	10b08 <printf@plt>
   10efc:	ldr	r0, [sp, #44]	; 0x2c
   10f00:	ldr	r1, [fp, #-32]	; 0xffffffe0
   10f04:	bl	115b8 <armazenar_contentor@@Base>
   10f08:	cmp	r0, #0
   10f0c:	beq	10f24 <main@@Base+0x2cc>
   10f10:	ldr	r0, [pc, #800]	; 11238 <main@@Base+0x5e0>
   10f14:	add	r0, pc, r0
   10f18:	ldr	r1, [fp, #-32]	; 0xffffffe0
   10f1c:	ldr	r1, [r1]
   10f20:	bl	10b08 <printf@plt>
   10f24:	ldr	r0, [sp, #44]	; 0x2c
   10f28:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10f2c:	bl	115b8 <armazenar_contentor@@Base>
   10f30:	cmp	r0, #0
   10f34:	beq	10f4c <main@@Base+0x2f4>
   10f38:	ldr	r0, [pc, #764]	; 1123c <main@@Base+0x5e4>
   10f3c:	add	r0, pc, r0
   10f40:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10f44:	ldr	r1, [r1]
   10f48:	bl	10b08 <printf@plt>
   10f4c:	ldr	r0, [sp, #44]	; 0x2c
   10f50:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10f54:	bl	115b8 <armazenar_contentor@@Base>
   10f58:	cmp	r0, #0
   10f5c:	beq	10f74 <main@@Base+0x31c>
   10f60:	ldr	r0, [pc, #728]	; 11240 <main@@Base+0x5e8>
   10f64:	add	r0, pc, r0
   10f68:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10f6c:	ldr	r1, [r1]
   10f70:	bl	10b08 <printf@plt>
   10f74:	ldr	r0, [sp, #44]	; 0x2c
   10f78:	ldr	r1, [fp, #-44]	; 0xffffffd4
   10f7c:	bl	115b8 <armazenar_contentor@@Base>
   10f80:	cmp	r0, #0
   10f84:	beq	10f9c <main@@Base+0x344>
   10f88:	ldr	r0, [pc, #692]	; 11244 <main@@Base+0x5ec>
   10f8c:	add	r0, pc, r0
   10f90:	ldr	r1, [fp, #-44]	; 0xffffffd4
   10f94:	ldr	r1, [r1]
   10f98:	bl	10b08 <printf@plt>
   10f9c:	ldr	r0, [sp, #44]	; 0x2c
   10fa0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   10fa4:	bl	115b8 <armazenar_contentor@@Base>
   10fa8:	cmp	r0, #0
   10fac:	beq	10fc4 <main@@Base+0x36c>
   10fb0:	ldr	r0, [pc, #656]	; 11248 <main@@Base+0x5f0>
   10fb4:	add	r0, pc, r0
   10fb8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   10fbc:	ldr	r1, [r1]
   10fc0:	bl	10b08 <printf@plt>
   10fc4:	ldr	r0, [sp, #44]	; 0x2c
   10fc8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   10fcc:	bl	115b8 <armazenar_contentor@@Base>
   10fd0:	cmp	r0, #0
   10fd4:	beq	10fec <main@@Base+0x394>
   10fd8:	ldr	r0, [pc, #620]	; 1124c <main@@Base+0x5f4>
   10fdc:	add	r0, pc, r0
   10fe0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   10fe4:	ldr	r1, [r1]
   10fe8:	bl	10b08 <printf@plt>
   10fec:	ldr	r0, [sp, #44]	; 0x2c
   10ff0:	ldr	r1, [sp, #56]	; 0x38
   10ff4:	bl	115b8 <armazenar_contentor@@Base>
   10ff8:	cmp	r0, #0
   10ffc:	beq	11014 <main@@Base+0x3bc>
   11000:	ldr	r0, [pc, #584]	; 11250 <main@@Base+0x5f8>
   11004:	add	r0, pc, r0
   11008:	ldr	r1, [sp, #56]	; 0x38
   1100c:	ldr	r1, [r1]
   11010:	bl	10b08 <printf@plt>
   11014:	ldr	r0, [pc, #568]	; 11254 <main@@Base+0x5fc>
   11018:	add	r0, pc, r0
   1101c:	bl	10b08 <printf@plt>
   11020:	ldr	r1, [sp, #44]	; 0x2c
   11024:	str	r0, [sp, #20]
   11028:	mov	r0, r1
   1102c:	bl	11284 <imprimeArmazem@@Base>
   11030:	ldr	r0, [sp, #44]	; 0x2c
   11034:	bl	11530 <armazem_cheio@@Base>
   11038:	cmp	r0, #0
   1103c:	beq	11060 <main@@Base+0x408>
   11040:	ldr	r0, [pc, #532]	; 1125c <main@@Base+0x604>
   11044:	add	r0, pc, r0
   11048:	bl	10b08 <printf@plt>
   1104c:	b	1106c <main@@Base+0x414>
   11050:	cmnmi	r6, #0
   11054:	cmnmi	sl, #0
   11058:	strmi	r8, [r4], #-0
   1105c:	ldrtmi	r8, [r1], #-0
   11060:	ldr	r0, [pc, #496]	; 11258 <main@@Base+0x600>
   11064:	add	r0, pc, r0
   11068:	bl	10b08 <printf@plt>
   1106c:	ldr	r0, [sp, #44]	; 0x2c
   11070:	ldr	r1, [sp, #52]	; 0x34
   11074:	bl	115b8 <armazenar_contentor@@Base>
   11078:	cmp	r0, #0
   1107c:	beq	11094 <main@@Base+0x43c>
   11080:	ldr	r0, [pc, #472]	; 11260 <main@@Base+0x608>
   11084:	add	r0, pc, r0
   11088:	ldr	r1, [fp, #-20]	; 0xffffffec
   1108c:	ldr	r1, [r1]
   11090:	bl	10b08 <printf@plt>
   11094:	ldr	r0, [pc, #456]	; 11264 <main@@Base+0x60c>
   11098:	add	r0, pc, r0
   1109c:	bl	10b08 <printf@plt>
   110a0:	movw	r1, #0
   110a4:	str	r1, [fp, #-8]
   110a8:	ldr	r0, [fp, #-8]
   110ac:	cmp	r0, #8
   110b0:	bge	11104 <main@@Base+0x4ac>
   110b4:	ldr	r0, [sp, #44]	; 0x2c
   110b8:	bl	116b4 <expedir_contentor@@Base>
   110bc:	ldr	r1, [pc, #444]	; 11280 <main@@Base+0x628>
   110c0:	add	r1, pc, r1
   110c4:	str	r0, [sp, #48]	; 0x30
   110c8:	mov	r0, r1
   110cc:	bl	10b08 <printf@plt>
   110d0:	ldr	r1, [sp, #48]	; 0x30
   110d4:	str	r0, [sp, #16]
   110d8:	mov	r0, r1
   110dc:	bl	11820 <contentor_imprime@@Base>
   110e0:	ldr	r0, [fp, #-8]
   110e4:	add	r0, r0, #1
   110e8:	str	r0, [fp, #-8]
   110ec:	b	110a8 <main@@Base+0x450>
   110f0:			; <UNDEFINED> instruction: 0x43be0000
   110f4:	bicmi	r0, r3, #0
   110f8:	sbcmi	r0, r8, #0
   110fc:	adcmi	r0, r0, #0
   11100:	tstmi	r6, #0
   11104:	ldr	r0, [pc, #352]	; 1126c <main@@Base+0x614>
   11108:	add	r0, pc, r0
   1110c:	bl	10b08 <printf@plt>
   11110:	ldr	r1, [sp, #44]	; 0x2c
   11114:	str	r0, [sp, #12]
   11118:	mov	r0, r1
   1111c:	bl	11284 <imprimeArmazem@@Base>
   11120:	ldr	r0, [pc, #320]	; 11268 <main@@Base+0x610>
   11124:	add	r0, pc, r0
   11128:	bl	10b08 <printf@plt>
   1112c:	movw	r1, #0
   11130:	str	r1, [fp, #-8]
   11134:	ldr	r0, [fp, #-8]
   11138:	cmp	r0, #4
   1113c:	bge	11188 <main@@Base+0x530>
   11140:	ldr	r0, [sp, #44]	; 0x2c
   11144:	bl	116b4 <expedir_contentor@@Base>
   11148:	ldr	r1, [pc, #300]	; 1127c <main@@Base+0x624>
   1114c:	add	r1, pc, r1
   11150:	str	r0, [sp, #48]	; 0x30
   11154:	mov	r0, r1
   11158:	bl	10b08 <printf@plt>
   1115c:	ldr	r1, [sp, #48]	; 0x30
   11160:	str	r0, [sp, #8]
   11164:	mov	r0, r1
   11168:	bl	11820 <contentor_imprime@@Base>
   1116c:	ldr	r0, [fp, #-8]
   11170:	add	r0, r0, #1
   11174:	str	r0, [fp, #-8]
   11178:	b	11134 <main@@Base+0x4dc>
   1117c:	orrmi	r0, r7, #0
   11180:	bicsmi	r0, r7, #0
   11184:	movtmi	r0, #32768	; 0x8000
   11188:	ldr	r0, [pc, #224]	; 11270 <main@@Base+0x618>
   1118c:	add	r0, pc, r0
   11190:	bl	10b08 <printf@plt>
   11194:	ldr	r1, [sp, #44]	; 0x2c
   11198:	str	r0, [sp, #4]
   1119c:	mov	r0, r1
   111a0:	bl	11284 <imprimeArmazem@@Base>
   111a4:	ldr	r0, [sp, #44]	; 0x2c
   111a8:	bl	114dc <armazem_vazio@@Base>
   111ac:	cmp	r0, #0
   111b0:	beq	111c4 <main@@Base+0x56c>
   111b4:	ldr	r0, [pc, #188]	; 11278 <main@@Base+0x620>
   111b8:	add	r0, pc, r0
   111bc:	bl	10b08 <printf@plt>
   111c0:	b	111d0 <main@@Base+0x578>
   111c4:	ldr	r0, [pc, #168]	; 11274 <main@@Base+0x61c>
   111c8:	add	r0, pc, r0
   111cc:	bl	10b08 <printf@plt>
   111d0:	movw	r0, #0
   111d4:	mov	sp, fp
   111d8:	pop	{fp, pc}
   111dc:	andeq	r1, r0, sp, lsl #5
   111e0:	muleq	r0, r5, r2
   111e4:	andeq	r1, r0, r5, lsr #5
   111e8:			; <UNDEFINED> instruction: 0x000012b7
   111ec:	andeq	r1, r0, r6, asr #5
   111f0:	ldrdeq	r1, [r0], -r6
   111f4:	andeq	r1, r0, r2, ror #5
   111f8:	strdeq	r1, [r0], -r3
   111fc:	andeq	r1, r0, r1, lsl #6
   11200:	andeq	r1, r0, r1, lsl r3
   11204:	andeq	r1, r0, r3, lsr #6
   11208:	andeq	r1, r0, r5, lsr r3
   1120c:	andeq	r1, r0, r6, asr #6
   11210:	andeq	r1, r0, fp, asr r3
   11214:	andeq	r1, r0, ip, ror #6
   11218:	andeq	r1, r0, ip, ror #6
   1121c:	andeq	r1, r0, r3, lsl #5
   11220:	andeq	r1, r0, fp, asr r2
   11224:	andeq	r1, r0, r3, lsr r2
   11228:	andeq	r1, r0, fp, lsl #4
   1122c:	andeq	r1, r0, sp, lsl r2
   11230:	andeq	r1, r0, sp, lsl r2
   11234:	andeq	r1, r0, pc, lsr #3
   11238:	andeq	r1, r0, r7, lsl #3
   1123c:	andeq	r1, r0, pc, asr r1
   11240:	andeq	r1, r0, r7, lsr r1
   11244:	andeq	r1, r0, pc, lsl #2
   11248:	andeq	r1, r0, r7, ror #1
   1124c:	strheq	r1, [r0], -pc	; <UNPREDICTABLE>
   11250:	muleq	r0, r7, r0
   11254:	andeq	r1, r0, r7, ror #1
   11258:	andeq	r1, r0, r6, asr #1
   1125c:	ldrdeq	r1, [r0], -r7
   11260:	andeq	r1, r0, ip, asr #1
   11264:	andeq	r1, r0, r3, lsl #2
   11268:	ldrdeq	r1, [r0], -r4
   1126c:	ldrdeq	r1, [r0], -r4
   11270:	andeq	r1, r0, lr, lsl #1
   11274:	andeq	r1, r0, sp, ror r0
   11278:	andeq	r1, r0, lr, ror r0
   1127c:	andeq	r1, r0, r1, ror r0
   11280:	strdeq	r1, [r0], -sp

00011284 <imprimeArmazem@@Base>:
   11284:	push	{fp, lr}
   11288:	mov	fp, sp
   1128c:	sub	sp, sp, #32
   11290:	str	r0, [fp, #-4]
   11294:	movw	r0, #0
   11298:	str	r0, [sp, #12]
   1129c:	ldr	r1, [fp, #-4]
   112a0:	cmp	r1, r0
   112a4:	beq	11458 <imprimeArmazem@@Base+0x1d4>
   112a8:	ldr	r0, [fp, #-4]
   112ac:	ldr	r0, [r0, #8]
   112b0:	movw	r1, #0
   112b4:	cmp	r0, r1
   112b8:	beq	11458 <imprimeArmazem@@Base+0x1d4>
   112bc:	ldr	r0, [fp, #-4]
   112c0:	ldr	r0, [r0, #8]
   112c4:	ldr	r0, [r0, #4]
   112c8:	movw	r1, #4
   112cc:	bl	10afc <calloc@plt>
   112d0:	str	r0, [sp, #8]
   112d4:	ldr	r0, [fp, #-4]
   112d8:	ldr	r0, [r0, #8]
   112dc:	ldr	r0, [r0, #4]
   112e0:	str	r0, [sp, #16]
   112e4:	ldr	r0, [fp, #-4]
   112e8:	ldr	r0, [r0, #8]
   112ec:	ldr	r0, [r0]
   112f0:	str	r0, [sp, #4]
   112f4:	movw	r0, #0
   112f8:	str	r0, [fp, #-8]
   112fc:	ldr	r0, [sp, #4]
   11300:	movw	r1, #0
   11304:	cmp	r0, r1
   11308:	beq	11344 <imprimeArmazem@@Base+0xc0>
   1130c:	ldr	r0, [sp, #4]
   11310:	ldr	r0, [r0]
   11314:	ldr	r0, [r0, #4]
   11318:	ldr	r1, [sp, #8]
   1131c:	ldr	r2, [fp, #-8]
   11320:	add	r1, r1, r2, lsl #2
   11324:	str	r0, [r1]
   11328:	ldr	r0, [sp, #4]
   1132c:	ldr	r0, [r0, #4]
   11330:	str	r0, [sp, #4]
   11334:	ldr	r0, [fp, #-8]
   11338:	add	r0, r0, #1
   1133c:	str	r0, [fp, #-8]
   11340:	b	112fc <imprimeArmazem@@Base+0x78>
   11344:	ldr	r0, [pc, #276]	; 11460 <imprimeArmazem@@Base+0x1dc>
   11348:	add	r0, pc, r0
   1134c:	bl	10b08 <printf@plt>
   11350:	ldr	r1, [fp, #-4]
   11354:	ldr	r1, [r1, #4]
   11358:	str	r1, [fp, #-12]
   1135c:	ldr	r0, [fp, #-12]
   11360:	cmp	r0, #0
   11364:	ble	113f8 <imprimeArmazem@@Base+0x174>
   11368:	ldr	r0, [pc, #256]	; 11470 <imprimeArmazem@@Base+0x1ec>
   1136c:	add	r0, pc, r0
   11370:	bl	10b08 <printf@plt>
   11374:	movw	r1, #0
   11378:	str	r1, [fp, #-8]
   1137c:	ldr	r0, [fp, #-8]
   11380:	ldr	r1, [sp, #16]
   11384:	cmp	r0, r1
   11388:	bge	113d8 <imprimeArmazem@@Base+0x154>
   1138c:	ldr	r0, [sp, #8]
   11390:	ldr	r1, [fp, #-8]
   11394:	add	r0, r0, r1, lsl #2
   11398:	ldr	r0, [r0]
   1139c:	ldr	r1, [fp, #-12]
   113a0:	cmp	r0, r1
   113a4:	blt	113b8 <imprimeArmazem@@Base+0x134>
   113a8:	ldr	r0, [pc, #204]	; 1147c <imprimeArmazem@@Base+0x1f8>
   113ac:	add	r0, pc, r0
   113b0:	bl	10b08 <printf@plt>
   113b4:	b	113c4 <imprimeArmazem@@Base+0x140>
   113b8:	ldr	r0, [pc, #184]	; 11478 <imprimeArmazem@@Base+0x1f4>
   113bc:	add	r0, pc, r0
   113c0:	bl	10b08 <printf@plt>
   113c4:	b	113c8 <imprimeArmazem@@Base+0x144>
   113c8:	ldr	r0, [fp, #-8]
   113cc:	add	r0, r0, #1
   113d0:	str	r0, [fp, #-8]
   113d4:	b	1137c <imprimeArmazem@@Base+0xf8>
   113d8:	ldr	r0, [pc, #148]	; 11474 <imprimeArmazem@@Base+0x1f0>
   113dc:	add	r0, pc, r0
   113e0:	bl	10b08 <printf@plt>
   113e4:	ldr	r0, [fp, #-12]
   113e8:	mvn	r1, #0
   113ec:	add	r0, r0, r1
   113f0:	str	r0, [fp, #-12]
   113f4:	b	1135c <imprimeArmazem@@Base+0xd8>
   113f8:	ldr	r0, [pc, #100]	; 11464 <imprimeArmazem@@Base+0x1e0>
   113fc:	add	r0, pc, r0
   11400:	bl	10b08 <printf@plt>
   11404:	movw	r1, #0
   11408:	str	r1, [fp, #-8]
   1140c:	ldr	r0, [fp, #-8]
   11410:	ldr	r1, [fp, #-4]
   11414:	ldr	r1, [r1]
   11418:	cmp	r0, r1
   1141c:	bge	1143c <imprimeArmazem@@Base+0x1b8>
   11420:	ldr	r0, [pc, #68]	; 1146c <imprimeArmazem@@Base+0x1e8>
   11424:	add	r0, pc, r0
   11428:	bl	10b08 <printf@plt>
   1142c:	ldr	r0, [fp, #-8]
   11430:	add	r0, r0, #1
   11434:	str	r0, [fp, #-8]
   11438:	b	1140c <imprimeArmazem@@Base+0x188>
   1143c:	ldr	r0, [pc, #36]	; 11468 <imprimeArmazem@@Base+0x1e4>
   11440:	add	r0, pc, r0
   11444:	bl	10b08 <printf@plt>
   11448:	ldr	r1, [sp, #8]
   1144c:	str	r0, [sp]
   11450:	mov	r0, r1
   11454:	bl	10b14 <free@plt>
   11458:	mov	sp, fp
   1145c:	pop	{fp, pc}
   11460:			; <UNDEFINED> instruction: 0x00000cb2
   11464:	andeq	r0, r0, fp, ror lr
   11468:			; <UNDEFINED> instruction: 0x00000bb9
   1146c:	andeq	r0, r0, r1, asr lr
   11470:	andeq	r0, r0, r6, lsl #30
   11474:	andeq	r0, r0, lr, lsl ip
   11478:			; <UNDEFINED> instruction: 0x00000eb4
   1147c:			; <UNDEFINED> instruction: 0x00000ebf

00011480 <armazem_novo@@Base>:
   11480:	push	{fp, lr}
   11484:	mov	fp, sp
   11488:	sub	sp, sp, #16
   1148c:	str	r0, [fp, #-4]
   11490:	str	r1, [sp, #8]
   11494:	movw	r0, #12
   11498:	bl	10b2c <malloc@plt>
   1149c:	ldr	r1, [pc, #52]	; 114d8 <armazem_novo@@Base+0x58>
   114a0:	ldr	r1, [pc, r1]
   114a4:	str	r0, [sp]
   114a8:	ldr	r0, [fp, #-4]
   114ac:	ldr	r2, [sp]
   114b0:	str	r0, [r2]
   114b4:	ldr	r0, [sp, #8]
   114b8:	ldr	r2, [sp]
   114bc:	str	r0, [r2, #4]
   114c0:	blx	r1
   114c4:	ldr	r1, [sp]
   114c8:	str	r0, [r1, #8]
   114cc:	ldr	r0, [sp]
   114d0:	mov	sp, fp
   114d4:	pop	{fp, pc}
   114d8:	muleq	r1, r0, fp

000114dc <armazem_vazio@@Base>:
   114dc:	push	{fp, lr}
   114e0:	mov	fp, sp
   114e4:	sub	sp, sp, #8
   114e8:	str	r0, [sp]
   114ec:	ldr	r0, [sp]
   114f0:	movw	r1, #0
   114f4:	cmp	r0, r1
   114f8:	beq	11510 <armazem_vazio@@Base+0x34>
   114fc:	ldr	r0, [sp]
   11500:	ldr	r0, [r0, #8]
   11504:	bl	119f0 <fila_tamanho@@Base>
   11508:	cmp	r0, #0
   1150c:	bne	1151c <armazem_vazio@@Base+0x40>
   11510:	movw	r0, #1
   11514:	str	r0, [sp, #4]
   11518:	b	11524 <armazem_vazio@@Base+0x48>
   1151c:	movw	r0, #0
   11520:	str	r0, [sp, #4]
   11524:	ldr	r0, [sp, #4]
   11528:	mov	sp, fp
   1152c:	pop	{fp, pc}

00011530 <armazem_cheio@@Base>:
   11530:	push	{fp, lr}
   11534:	mov	fp, sp
   11538:	sub	sp, sp, #8
   1153c:	str	r0, [sp]
   11540:	ldr	r0, [sp]
   11544:	bl	114dc <armazem_vazio@@Base>
   11548:	cmp	r0, #0
   1154c:	beq	1155c <armazem_cheio@@Base+0x2c>
   11550:	movw	r0, #0
   11554:	str	r0, [sp, #4]
   11558:	b	115ac <armazem_cheio@@Base+0x7c>
   1155c:	ldr	r0, [sp]
   11560:	ldr	r0, [r0, #8]
   11564:	bl	119f0 <fila_tamanho@@Base>
   11568:	ldr	r1, [sp]
   1156c:	ldr	r1, [r1]
   11570:	cmp	r0, r1
   11574:	bne	115a4 <armazem_cheio@@Base+0x74>
   11578:	ldr	r0, [sp]
   1157c:	ldr	r0, [r0, #8]
   11580:	bl	11a84 <fila_back@@Base>
   11584:	ldr	r0, [r0, #4]
   11588:	ldr	r1, [sp]
   1158c:	ldr	r1, [r1, #4]
   11590:	cmp	r0, r1
   11594:	bne	115a4 <armazem_cheio@@Base+0x74>
   11598:	movw	r0, #1
   1159c:	str	r0, [sp, #4]
   115a0:	b	115ac <armazem_cheio@@Base+0x7c>
   115a4:	movw	r0, #0
   115a8:	str	r0, [sp, #4]
   115ac:	ldr	r0, [sp, #4]
   115b0:	mov	sp, fp
   115b4:	pop	{fp, pc}

000115b8 <armazenar_contentor@@Base>:
   115b8:	push	{fp, lr}
   115bc:	mov	fp, sp
   115c0:	sub	sp, sp, #24
   115c4:	ldr	r2, [pc, #224]	; 116ac <armazenar_contentor@@Base+0xf4>
   115c8:	ldr	r2, [pc, r2]
   115cc:	str	r0, [fp, #-8]
   115d0:	str	r1, [sp, #12]
   115d4:	blx	r2
   115d8:	str	r0, [sp, #8]
   115dc:	ldr	r0, [fp, #-8]
   115e0:	movw	r1, #0
   115e4:	cmp	r0, r1
   115e8:	beq	1160c <armazenar_contentor@@Base+0x54>
   115ec:	ldr	r0, [sp, #12]
   115f0:	movw	r1, #0
   115f4:	cmp	r0, r1
   115f8:	beq	1160c <armazenar_contentor@@Base+0x54>
   115fc:	ldr	r0, [fp, #-8]
   11600:	bl	11530 <armazem_cheio@@Base>
   11604:	cmp	r0, #0
   11608:	beq	11618 <armazenar_contentor@@Base+0x60>
   1160c:	movw	r0, #0
   11610:	str	r0, [fp, #-4]
   11614:	b	116a0 <armazenar_contentor@@Base+0xe8>
   11618:	ldr	r0, [fp, #-8]
   1161c:	bl	114dc <armazem_vazio@@Base>
   11620:	cmp	r0, #0
   11624:	beq	11654 <armazenar_contentor@@Base+0x9c>
   11628:	ldr	r0, [pc, #128]	; 116b0 <armazenar_contentor@@Base+0xf8>
   1162c:	ldr	r0, [pc, r0]
   11630:	ldr	r1, [fp, #-8]
   11634:	ldr	r1, [r1, #8]
   11638:	str	r1, [sp, #4]
   1163c:	blx	r0
   11640:	ldr	r1, [sp, #4]
   11644:	str	r0, [sp]
   11648:	mov	r0, r1
   1164c:	ldr	r1, [sp]
   11650:	bl	11b00 <fila_push@@Base>
   11654:	ldr	r0, [fp, #-8]
   11658:	ldr	r0, [r0, #8]
   1165c:	bl	11a84 <fila_back@@Base>
   11660:	ldr	r0, [r0, #4]
   11664:	ldr	r1, [fp, #-8]
   11668:	ldr	r1, [r1, #4]
   1166c:	cmp	r0, r1
   11670:	bne	11684 <armazenar_contentor@@Base+0xcc>
   11674:	ldr	r0, [fp, #-8]
   11678:	ldr	r0, [r0, #8]
   1167c:	ldr	r1, [sp, #8]
   11680:	bl	11b00 <fila_push@@Base>
   11684:	ldr	r0, [fp, #-8]
   11688:	ldr	r0, [r0, #8]
   1168c:	bl	11a84 <fila_back@@Base>
   11690:	ldr	r1, [sp, #12]
   11694:	bl	11e5c <pilha_push@@Base>
   11698:	movw	r0, #1
   1169c:	str	r0, [fp, #-4]
   116a0:	ldr	r0, [fp, #-4]
   116a4:	mov	sp, fp
   116a8:	pop	{fp, pc}
   116ac:	andeq	r1, r1, r4, ror #20
   116b0:	andeq	r1, r1, r0, lsl #20

000116b4 <expedir_contentor@@Base>:
   116b4:	push	{fp, lr}
   116b8:	mov	fp, sp
   116bc:	sub	sp, sp, #16
   116c0:	str	r0, [sp, #8]
   116c4:	ldr	r0, [sp, #8]
   116c8:	bl	114dc <armazem_vazio@@Base>
   116cc:	cmp	r0, #0
   116d0:	bne	116f0 <expedir_contentor@@Base+0x3c>
   116d4:	ldr	r0, [sp, #8]
   116d8:	ldr	r0, [r0, #8]
   116dc:	bl	11a2c <fila_front@@Base>
   116e0:	bl	11e04 <pilha_top@@Base>
   116e4:	movw	r1, #0
   116e8:	cmp	r0, r1
   116ec:	bne	116fc <expedir_contentor@@Base+0x48>
   116f0:	movw	r0, #0
   116f4:	str	r0, [fp, #-4]
   116f8:	b	11778 <expedir_contentor@@Base+0xc4>
   116fc:	ldr	r0, [sp, #8]
   11700:	ldr	r0, [r0, #8]
   11704:	bl	11a2c <fila_front@@Base>
   11708:	bl	11e04 <pilha_top@@Base>
   1170c:	ldr	r0, [r0]
   11710:	ldr	r1, [sp, #8]
   11714:	ldr	r1, [r1, #8]
   11718:	str	r0, [sp]
   1171c:	mov	r0, r1
   11720:	bl	11a2c <fila_front@@Base>
   11724:	bl	11e04 <pilha_top@@Base>
   11728:	vldr	s0, [r0, #4]
   1172c:	ldr	r0, [sp]
   11730:	bl	11784 <contentor_novo@@Base>
   11734:	str	r0, [sp, #4]
   11738:	ldr	r0, [sp, #8]
   1173c:	ldr	r0, [r0, #8]
   11740:	bl	11a2c <fila_front@@Base>
   11744:	ldr	r0, [r0, #4]
   11748:	cmp	r0, #1
   1174c:	bgt	11760 <expedir_contentor@@Base+0xac>
   11750:	ldr	r0, [sp, #8]
   11754:	ldr	r0, [r0, #8]
   11758:	bl	11bc8 <fila_pop@@Base>
   1175c:	b	11770 <expedir_contentor@@Base+0xbc>
   11760:	ldr	r0, [sp, #8]
   11764:	ldr	r0, [r0, #8]
   11768:	bl	11a2c <fila_front@@Base>
   1176c:	bl	11f00 <pilha_pop@@Base>
   11770:	ldr	r0, [sp, #4]
   11774:	str	r0, [fp, #-4]
   11778:	ldr	r0, [fp, #-4]
   1177c:	mov	sp, fp
   11780:	pop	{fp, pc}

00011784 <contentor_novo@@Base>:
   11784:	push	{fp, lr}
   11788:	mov	fp, sp
   1178c:	sub	sp, sp, #24
   11790:	str	r0, [fp, #-4]
   11794:	vstr	s0, [fp, #-8]
   11798:	mov	r0, #8
   1179c:	bl	10b2c <malloc@plt>
   117a0:	str	r0, [sp, #12]
   117a4:	ldr	r0, [fp, #-4]
   117a8:	bl	10b50 <strlen@plt>
   117ac:	add	r0, r0, #1
   117b0:	mov	r1, r0
   117b4:	str	r1, [sp, #8]
   117b8:	bl	10b2c <malloc@plt>
   117bc:	ldr	r1, [sp, #12]
   117c0:	str	r0, [r1]
   117c4:	ldr	r0, [sp, #12]
   117c8:	ldr	r0, [r0]
   117cc:	ldr	r1, [fp, #-4]
   117d0:	bl	10b20 <strcpy@plt>
   117d4:	vldr	s0, [fp, #-8]
   117d8:	ldr	r1, [sp, #12]
   117dc:	vstr	s0, [r1, #4]
   117e0:	ldr	r1, [sp, #12]
   117e4:	str	r0, [sp, #4]
   117e8:	mov	r0, r1
   117ec:	mov	sp, fp
   117f0:	pop	{fp, pc}

000117f4 <contentor_apaga@@Base>:
   117f4:	push	{fp, lr}
   117f8:	mov	fp, sp
   117fc:	sub	sp, sp, #8
   11800:	str	r0, [sp, #4]
   11804:	ldr	r0, [sp, #4]
   11808:	ldr	r0, [r0]
   1180c:	bl	10b14 <free@plt>
   11810:	ldr	r0, [sp, #4]
   11814:	bl	10b14 <free@plt>
   11818:	mov	sp, fp
   1181c:	pop	{fp, pc}

00011820 <contentor_imprime@@Base>:
   11820:	push	{fp, lr}
   11824:	mov	fp, sp
   11828:	sub	sp, sp, #8
   1182c:	str	r0, [sp, #4]
   11830:	ldr	r0, [sp, #4]
   11834:	movw	r1, #0
   11838:	cmp	r0, r1
   1183c:	bne	11850 <contentor_imprime@@Base+0x30>
   11840:	ldr	r0, [pc, #56]	; 11880 <contentor_imprime@@Base+0x60>
   11844:	add	r0, pc, r0
   11848:	bl	10b08 <printf@plt>
   1184c:	b	11874 <contentor_imprime@@Base+0x54>
   11850:	ldr	r0, [pc, #36]	; 1187c <contentor_imprime@@Base+0x5c>
   11854:	add	r0, pc, r0
   11858:	ldr	r1, [sp, #4]
   1185c:	ldr	r1, [r1]
   11860:	ldr	r2, [sp, #4]
   11864:	vldr	s0, [r2, #4]
   11868:	vcvt.f64.f32	d16, s0
   1186c:	vmov	r2, r3, d16
   11870:	bl	10b08 <printf@plt>
   11874:	mov	sp, fp
   11878:	pop	{fp, pc}
   1187c:	andeq	r0, r0, r6, lsr sl
   11880:	andeq	r0, r0, r6, lsr sl

00011884 <fila_novo_elemento@@Base>:
   11884:	push	{fp, lr}
   11888:	mov	fp, sp
   1188c:	sub	sp, sp, #16
   11890:	str	r0, [sp, #8]
   11894:	movw	r0, #8
   11898:	bl	10b2c <malloc@plt>
   1189c:	str	r0, [sp, #4]
   118a0:	ldr	r0, [sp, #4]
   118a4:	movw	r1, #0
   118a8:	cmp	r0, r1
   118ac:	bne	118bc <fila_novo_elemento@@Base+0x38>
   118b0:	movw	r0, #0
   118b4:	str	r0, [fp, #-4]
   118b8:	b	11904 <fila_novo_elemento@@Base+0x80>
   118bc:	ldr	r0, [sp, #8]
   118c0:	ldr	r1, [sp, #4]
   118c4:	str	r0, [r1]
   118c8:	ldr	r0, [sp, #4]
   118cc:	ldr	r0, [r0]
   118d0:	movw	r1, #0
   118d4:	cmp	r0, r1
   118d8:	bne	118f0 <fila_novo_elemento@@Base+0x6c>
   118dc:	ldr	r0, [sp, #4]
   118e0:	bl	10b14 <free@plt>
   118e4:	movw	r0, #0
   118e8:	str	r0, [fp, #-4]
   118ec:	b	11904 <fila_novo_elemento@@Base+0x80>
   118f0:	ldr	r0, [sp, #4]
   118f4:	movw	r1, #0
   118f8:	str	r1, [r0, #4]
   118fc:	ldr	r0, [sp, #4]
   11900:	str	r0, [fp, #-4]
   11904:	ldr	r0, [fp, #-4]
   11908:	mov	sp, fp
   1190c:	pop	{fp, pc}

00011910 <fila_nova@@Base>:
   11910:	push	{fp, lr}
   11914:	mov	fp, sp
   11918:	sub	sp, sp, #8
   1191c:	movw	r0, #8
   11920:	bl	10b2c <malloc@plt>
   11924:	str	r0, [sp]
   11928:	ldr	r0, [sp]
   1192c:	movw	r1, #0
   11930:	cmp	r0, r1
   11934:	bne	11944 <fila_nova@@Base+0x34>
   11938:	movw	r0, #0
   1193c:	str	r0, [sp, #4]
   11940:	b	11960 <fila_nova@@Base+0x50>
   11944:	ldr	r0, [sp]
   11948:	movw	r1, #0
   1194c:	str	r1, [r0]
   11950:	ldr	r0, [sp]
   11954:	str	r1, [r0, #4]
   11958:	ldr	r0, [sp]
   1195c:	str	r0, [sp, #4]
   11960:	ldr	r0, [sp, #4]
   11964:	mov	sp, fp
   11968:	pop	{fp, pc}

0001196c <fila_apaga@@Base>:
   1196c:	push	{fp, lr}
   11970:	mov	fp, sp
   11974:	sub	sp, sp, #8
   11978:	str	r0, [sp, #4]
   1197c:	ldr	r0, [sp, #4]
   11980:	movw	r1, #0
   11984:	cmp	r0, r1
   11988:	bne	11990 <fila_apaga@@Base+0x24>
   1198c:	b	119e8 <fila_apaga@@Base+0x7c>
   11990:	b	11994 <fila_apaga@@Base+0x28>
   11994:	ldr	r0, [sp, #4]
   11998:	ldr	r0, [r0]
   1199c:	movw	r1, #0
   119a0:	cmp	r0, r1
   119a4:	beq	119e0 <fila_apaga@@Base+0x74>
   119a8:	ldr	r0, [sp, #4]
   119ac:	ldr	r0, [r0]
   119b0:	str	r0, [sp]
   119b4:	ldr	r0, [sp, #4]
   119b8:	ldr	r0, [r0]
   119bc:	ldr	r0, [r0, #4]
   119c0:	ldr	r1, [sp, #4]
   119c4:	str	r0, [r1]
   119c8:	ldr	r0, [sp]
   119cc:	ldr	r0, [r0]
   119d0:	bl	11d44 <pilha_apaga@@Base>
   119d4:	ldr	r0, [sp]
   119d8:	bl	10b14 <free@plt>
   119dc:	b	11994 <fila_apaga@@Base+0x28>
   119e0:	ldr	r0, [sp, #4]
   119e4:	bl	10b14 <free@plt>
   119e8:	mov	sp, fp
   119ec:	pop	{fp, pc}

000119f0 <fila_tamanho@@Base>:
   119f0:	sub	sp, sp, #8
   119f4:	str	r0, [sp]
   119f8:	ldr	r0, [sp]
   119fc:	movw	r1, #0
   11a00:	cmp	r0, r1
   11a04:	bne	11a14 <fila_tamanho@@Base+0x24>
   11a08:	mvn	r0, #0
   11a0c:	str	r0, [sp, #4]
   11a10:	b	11a20 <fila_tamanho@@Base+0x30>
   11a14:	ldr	r0, [sp]
   11a18:	ldr	r0, [r0, #4]
   11a1c:	str	r0, [sp, #4]
   11a20:	ldr	r0, [sp, #4]
   11a24:	add	sp, sp, #8
   11a28:	bx	lr

00011a2c <fila_front@@Base>:
   11a2c:	sub	sp, sp, #12
   11a30:	str	r0, [sp, #4]
   11a34:	ldr	r0, [sp, #4]
   11a38:	movw	r1, #0
   11a3c:	cmp	r0, r1
   11a40:	beq	11a54 <fila_front@@Base+0x28>
   11a44:	ldr	r0, [sp, #4]
   11a48:	ldr	r0, [r0, #4]
   11a4c:	cmp	r0, #0
   11a50:	bne	11a60 <fila_front@@Base+0x34>
   11a54:	movw	r0, #0
   11a58:	str	r0, [sp, #8]
   11a5c:	b	11a78 <fila_front@@Base+0x4c>
   11a60:	ldr	r0, [sp, #4]
   11a64:	ldr	r0, [r0]
   11a68:	str	r0, [sp]
   11a6c:	ldr	r0, [sp]
   11a70:	ldr	r0, [r0]
   11a74:	str	r0, [sp, #8]
   11a78:	ldr	r0, [sp, #8]
   11a7c:	add	sp, sp, #12
   11a80:	bx	lr

00011a84 <fila_back@@Base>:
   11a84:	sub	sp, sp, #12
   11a88:	str	r0, [sp, #4]
   11a8c:	ldr	r0, [sp, #4]
   11a90:	movw	r1, #0
   11a94:	cmp	r0, r1
   11a98:	beq	11aac <fila_back@@Base+0x28>
   11a9c:	ldr	r0, [sp, #4]
   11aa0:	ldr	r0, [r0, #4]
   11aa4:	cmp	r0, #0
   11aa8:	bne	11ab8 <fila_back@@Base+0x34>
   11aac:	movw	r0, #0
   11ab0:	str	r0, [sp, #8]
   11ab4:	b	11af4 <fila_back@@Base+0x70>
   11ab8:	ldr	r0, [sp, #4]
   11abc:	ldr	r0, [r0]
   11ac0:	str	r0, [sp]
   11ac4:	ldr	r0, [sp]
   11ac8:	ldr	r0, [r0, #4]
   11acc:	movw	r1, #0
   11ad0:	cmp	r0, r1
   11ad4:	beq	11ae8 <fila_back@@Base+0x64>
   11ad8:	ldr	r0, [sp]
   11adc:	ldr	r0, [r0, #4]
   11ae0:	str	r0, [sp]
   11ae4:	b	11ac4 <fila_back@@Base+0x40>
   11ae8:	ldr	r0, [sp]
   11aec:	ldr	r0, [r0]
   11af0:	str	r0, [sp, #8]
   11af4:	ldr	r0, [sp, #8]
   11af8:	add	sp, sp, #12
   11afc:	bx	lr

00011b00 <fila_push@@Base>:
   11b00:	push	{fp, lr}
   11b04:	mov	fp, sp
   11b08:	sub	sp, sp, #24
   11b0c:	str	r0, [fp, #-4]
   11b10:	str	r1, [fp, #-8]
   11b14:	movw	r0, #0
   11b18:	str	r0, [sp, #12]
   11b1c:	str	r0, [sp, #8]
   11b20:	ldr	r1, [fp, #-4]
   11b24:	cmp	r1, r0
   11b28:	bne	11b30 <fila_push@@Base+0x30>
   11b2c:	b	11bc0 <fila_push@@Base+0xc0>
   11b30:	ldr	r0, [fp, #-4]
   11b34:	ldr	r0, [r0]
   11b38:	str	r0, [sp, #4]
   11b3c:	ldr	r0, [fp, #-8]
   11b40:	bl	11884 <fila_novo_elemento@@Base>
   11b44:	str	r0, [sp, #8]
   11b48:	ldr	r0, [sp, #8]
   11b4c:	movw	r1, #0
   11b50:	cmp	r0, r1
   11b54:	bne	11b5c <fila_push@@Base+0x5c>
   11b58:	b	11bc0 <fila_push@@Base+0xc0>
   11b5c:	ldr	r0, [fp, #-4]
   11b60:	ldr	r1, [r0, #4]
   11b64:	add	r1, r1, #1
   11b68:	str	r1, [r0, #4]
   11b6c:	ldr	r0, [sp, #4]
   11b70:	movw	r1, #0
   11b74:	cmp	r0, r1
   11b78:	bne	11b8c <fila_push@@Base+0x8c>
   11b7c:	ldr	r0, [sp, #8]
   11b80:	ldr	r1, [fp, #-4]
   11b84:	str	r0, [r1]
   11b88:	b	11bc0 <fila_push@@Base+0xc0>
   11b8c:	b	11b90 <fila_push@@Base+0x90>
   11b90:	ldr	r0, [sp, #4]
   11b94:	ldr	r0, [r0, #4]
   11b98:	movw	r1, #0
   11b9c:	cmp	r0, r1
   11ba0:	beq	11bb4 <fila_push@@Base+0xb4>
   11ba4:	ldr	r0, [sp, #4]
   11ba8:	ldr	r0, [r0, #4]
   11bac:	str	r0, [sp, #4]
   11bb0:	b	11b90 <fila_push@@Base+0x90>
   11bb4:	ldr	r0, [sp, #8]
   11bb8:	ldr	r1, [sp, #4]
   11bbc:	str	r0, [r1, #4]
   11bc0:	mov	sp, fp
   11bc4:	pop	{fp, pc}

00011bc8 <fila_pop@@Base>:
   11bc8:	push	{fp, lr}
   11bcc:	mov	fp, sp
   11bd0:	sub	sp, sp, #16
   11bd4:	str	r0, [fp, #-4]
   11bd8:	movw	r0, #0
   11bdc:	str	r0, [sp, #8]
   11be0:	ldr	r1, [fp, #-4]
   11be4:	cmp	r1, r0
   11be8:	beq	11bfc <fila_pop@@Base+0x34>
   11bec:	ldr	r0, [fp, #-4]
   11bf0:	ldr	r0, [r0, #4]
   11bf4:	cmp	r0, #0
   11bf8:	bne	11c00 <fila_pop@@Base+0x38>
   11bfc:	b	11c44 <fila_pop@@Base+0x7c>
   11c00:	ldr	r0, [fp, #-4]
   11c04:	ldr	r0, [r0]
   11c08:	str	r0, [sp, #4]
   11c0c:	ldr	r0, [fp, #-4]
   11c10:	ldr	r1, [r0, #4]
   11c14:	mvn	r2, #0
   11c18:	add	r1, r1, r2
   11c1c:	str	r1, [r0, #4]
   11c20:	ldr	r0, [sp, #4]
   11c24:	ldr	r0, [r0, #4]
   11c28:	ldr	r1, [fp, #-4]
   11c2c:	str	r0, [r1]
   11c30:	ldr	r0, [sp, #4]
   11c34:	ldr	r0, [r0]
   11c38:	bl	11d44 <pilha_apaga@@Base>
   11c3c:	ldr	r0, [sp, #4]
   11c40:	bl	10b14 <free@plt>
   11c44:	mov	sp, fp
   11c48:	pop	{fp, pc}

00011c4c <pilha_novo_elemento@@Base>:
   11c4c:	push	{fp, lr}
   11c50:	mov	fp, sp
   11c54:	sub	sp, sp, #16
   11c58:	str	r0, [sp, #8]
   11c5c:	movw	r0, #8
   11c60:	bl	10b2c <malloc@plt>
   11c64:	str	r0, [sp, #4]
   11c68:	ldr	r0, [sp, #4]
   11c6c:	movw	r1, #0
   11c70:	cmp	r0, r1
   11c74:	bne	11c84 <pilha_novo_elemento@@Base+0x38>
   11c78:	movw	r0, #0
   11c7c:	str	r0, [fp, #-4]
   11c80:	b	11cdc <pilha_novo_elemento@@Base+0x90>
   11c84:	ldr	r0, [sp, #8]
   11c88:	ldr	r0, [r0]
   11c8c:	ldr	r1, [sp, #8]
   11c90:	vldr	s0, [r1, #4]
   11c94:	bl	11784 <contentor_novo@@Base>
   11c98:	ldr	r1, [sp, #4]
   11c9c:	str	r0, [r1]
   11ca0:	ldr	r0, [sp, #4]
   11ca4:	ldr	r0, [r0]
   11ca8:	movw	r1, #0
   11cac:	cmp	r0, r1
   11cb0:	bne	11cc8 <pilha_novo_elemento@@Base+0x7c>
   11cb4:	ldr	r0, [sp, #4]
   11cb8:	bl	10b14 <free@plt>
   11cbc:	movw	r0, #0
   11cc0:	str	r0, [fp, #-4]
   11cc4:	b	11cdc <pilha_novo_elemento@@Base+0x90>
   11cc8:	ldr	r0, [sp, #4]
   11ccc:	movw	r1, #0
   11cd0:	str	r1, [r0, #4]
   11cd4:	ldr	r0, [sp, #4]
   11cd8:	str	r0, [fp, #-4]
   11cdc:	ldr	r0, [fp, #-4]
   11ce0:	mov	sp, fp
   11ce4:	pop	{fp, pc}

00011ce8 <pilha_nova@@Base>:
   11ce8:	push	{fp, lr}
   11cec:	mov	fp, sp
   11cf0:	sub	sp, sp, #8
   11cf4:	movw	r0, #8
   11cf8:	bl	10b2c <malloc@plt>
   11cfc:	str	r0, [sp]
   11d00:	ldr	r0, [sp]
   11d04:	movw	r1, #0
   11d08:	cmp	r0, r1
   11d0c:	bne	11d1c <pilha_nova@@Base+0x34>
   11d10:	movw	r0, #0
   11d14:	str	r0, [sp, #4]
   11d18:	b	11d38 <pilha_nova@@Base+0x50>
   11d1c:	ldr	r0, [sp]
   11d20:	movw	r1, #0
   11d24:	str	r1, [r0]
   11d28:	ldr	r0, [sp]
   11d2c:	str	r1, [r0, #4]
   11d30:	ldr	r0, [sp]
   11d34:	str	r0, [sp, #4]
   11d38:	ldr	r0, [sp, #4]
   11d3c:	mov	sp, fp
   11d40:	pop	{fp, pc}

00011d44 <pilha_apaga@@Base>:
   11d44:	push	{fp, lr}
   11d48:	mov	fp, sp
   11d4c:	sub	sp, sp, #8
   11d50:	str	r0, [sp, #4]
   11d54:	ldr	r0, [sp, #4]
   11d58:	movw	r1, #0
   11d5c:	cmp	r0, r1
   11d60:	bne	11d68 <pilha_apaga@@Base+0x24>
   11d64:	b	11dc0 <pilha_apaga@@Base+0x7c>
   11d68:	b	11d6c <pilha_apaga@@Base+0x28>
   11d6c:	ldr	r0, [sp, #4]
   11d70:	ldr	r0, [r0]
   11d74:	movw	r1, #0
   11d78:	cmp	r0, r1
   11d7c:	beq	11db8 <pilha_apaga@@Base+0x74>
   11d80:	ldr	r0, [sp, #4]
   11d84:	ldr	r0, [r0]
   11d88:	str	r0, [sp]
   11d8c:	ldr	r0, [sp, #4]
   11d90:	ldr	r0, [r0]
   11d94:	ldr	r0, [r0, #4]
   11d98:	ldr	r1, [sp, #4]
   11d9c:	str	r0, [r1]
   11da0:	ldr	r0, [sp]
   11da4:	ldr	r0, [r0]
   11da8:	bl	117f4 <contentor_apaga@@Base>
   11dac:	ldr	r0, [sp]
   11db0:	bl	10b14 <free@plt>
   11db4:	b	11d6c <pilha_apaga@@Base+0x28>
   11db8:	ldr	r0, [sp, #4]
   11dbc:	bl	10b14 <free@plt>
   11dc0:	mov	sp, fp
   11dc4:	pop	{fp, pc}

00011dc8 <pilha_tamanho@@Base>:
   11dc8:	sub	sp, sp, #8
   11dcc:	str	r0, [sp]
   11dd0:	ldr	r0, [sp]
   11dd4:	movw	r1, #0
   11dd8:	cmp	r0, r1
   11ddc:	bne	11dec <pilha_tamanho@@Base+0x24>
   11de0:	mvn	r0, #0
   11de4:	str	r0, [sp, #4]
   11de8:	b	11df8 <pilha_tamanho@@Base+0x30>
   11dec:	ldr	r0, [sp]
   11df0:	ldr	r0, [r0, #4]
   11df4:	str	r0, [sp, #4]
   11df8:	ldr	r0, [sp, #4]
   11dfc:	add	sp, sp, #8
   11e00:	bx	lr

00011e04 <pilha_top@@Base>:
   11e04:	sub	sp, sp, #12
   11e08:	str	r0, [sp, #4]
   11e0c:	ldr	r0, [sp, #4]
   11e10:	movw	r1, #0
   11e14:	cmp	r0, r1
   11e18:	beq	11e2c <pilha_top@@Base+0x28>
   11e1c:	ldr	r0, [sp, #4]
   11e20:	ldr	r0, [r0, #4]
   11e24:	cmp	r0, #0
   11e28:	bne	11e38 <pilha_top@@Base+0x34>
   11e2c:	movw	r0, #0
   11e30:	str	r0, [sp, #8]
   11e34:	b	11e50 <pilha_top@@Base+0x4c>
   11e38:	ldr	r0, [sp, #4]
   11e3c:	ldr	r0, [r0]
   11e40:	str	r0, [sp]
   11e44:	ldr	r0, [sp]
   11e48:	ldr	r0, [r0]
   11e4c:	str	r0, [sp, #8]
   11e50:	ldr	r0, [sp, #8]
   11e54:	add	sp, sp, #12
   11e58:	bx	lr

00011e5c <pilha_push@@Base>:
   11e5c:	push	{fp, lr}
   11e60:	mov	fp, sp
   11e64:	sub	sp, sp, #16
   11e68:	str	r0, [fp, #-4]
   11e6c:	str	r1, [sp, #8]
   11e70:	movw	r0, #0
   11e74:	str	r0, [sp, #4]
   11e78:	ldr	r1, [fp, #-4]
   11e7c:	cmp	r1, r0
   11e80:	bne	11e88 <pilha_push@@Base+0x2c>
   11e84:	b	11ef8 <pilha_push@@Base+0x9c>
   11e88:	ldr	r0, [sp, #8]
   11e8c:	bl	11c4c <pilha_novo_elemento@@Base>
   11e90:	str	r0, [sp, #4]
   11e94:	ldr	r0, [sp, #4]
   11e98:	movw	r1, #0
   11e9c:	cmp	r0, r1
   11ea0:	bne	11ea8 <pilha_push@@Base+0x4c>
   11ea4:	b	11ef8 <pilha_push@@Base+0x9c>
   11ea8:	ldr	r0, [fp, #-4]
   11eac:	ldr	r1, [r0, #4]
   11eb0:	add	r1, r1, #1
   11eb4:	str	r1, [r0, #4]
   11eb8:	ldr	r0, [fp, #-4]
   11ebc:	ldr	r0, [r0]
   11ec0:	movw	r1, #0
   11ec4:	cmp	r0, r1
   11ec8:	bne	11edc <pilha_push@@Base+0x80>
   11ecc:	ldr	r0, [sp, #4]
   11ed0:	ldr	r1, [fp, #-4]
   11ed4:	str	r0, [r1]
   11ed8:	b	11ef8 <pilha_push@@Base+0x9c>
   11edc:	ldr	r0, [fp, #-4]
   11ee0:	ldr	r0, [r0]
   11ee4:	ldr	r1, [sp, #4]
   11ee8:	str	r0, [r1, #4]
   11eec:	ldr	r0, [sp, #4]
   11ef0:	ldr	r1, [fp, #-4]
   11ef4:	str	r0, [r1]
   11ef8:	mov	sp, fp
   11efc:	pop	{fp, pc}

00011f00 <pilha_pop@@Base>:
   11f00:	push	{fp, lr}
   11f04:	mov	fp, sp
   11f08:	sub	sp, sp, #8
   11f0c:	str	r0, [sp, #4]
   11f10:	ldr	r0, [sp, #4]
   11f14:	movw	r1, #0
   11f18:	cmp	r0, r1
   11f1c:	beq	11f30 <pilha_pop@@Base+0x30>
   11f20:	ldr	r0, [sp, #4]
   11f24:	ldr	r0, [r0, #4]
   11f28:	cmp	r0, #0
   11f2c:	bne	11f34 <pilha_pop@@Base+0x34>
   11f30:	b	11f78 <pilha_pop@@Base+0x78>
   11f34:	ldr	r0, [sp, #4]
   11f38:	ldr	r0, [r0]
   11f3c:	str	r0, [sp]
   11f40:	ldr	r0, [sp]
   11f44:	ldr	r0, [r0, #4]
   11f48:	ldr	r1, [sp, #4]
   11f4c:	str	r0, [r1]
   11f50:	ldr	r0, [sp, #4]
   11f54:	ldr	r1, [r0, #4]
   11f58:	mvn	r2, #0
   11f5c:	add	r1, r1, r2
   11f60:	str	r1, [r0, #4]
   11f64:	ldr	r0, [sp]
   11f68:	ldr	r0, [r0]
   11f6c:	bl	117f4 <contentor_apaga@@Base>
   11f70:	ldr	r0, [sp]
   11f74:	bl	10b14 <free@plt>
   11f78:	mov	sp, fp
   11f7c:	pop	{fp, pc}

00011f80 <__libc_csu_init@@Base>:
   11f80:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11f84:	mov	r7, r0
   11f88:	ldr	r6, [pc, #72]	; 11fd8 <__libc_csu_init@@Base+0x58>
   11f8c:	ldr	r5, [pc, #72]	; 11fdc <__libc_csu_init@@Base+0x5c>
   11f90:	add	r6, pc, r6
   11f94:	add	r5, pc, r5
   11f98:	sub	r6, r6, r5
   11f9c:	mov	r8, r1
   11fa0:	mov	r9, r2
   11fa4:	bl	10adc <calloc@plt-0x20>
   11fa8:	asrs	r6, r6, #2
   11fac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11fb0:	mov	r4, #0
   11fb4:	add	r4, r4, #1
   11fb8:	ldr	r3, [r5], #4
   11fbc:	mov	r2, r9
   11fc0:	mov	r1, r8
   11fc4:	mov	r0, r7
   11fc8:	blx	r3
   11fcc:	cmp	r6, r4
   11fd0:	bne	11fb4 <__libc_csu_init@@Base+0x34>
   11fd4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11fd8:	andeq	r0, r1, r4, ror pc
   11fdc:	andeq	r0, r1, ip, ror #30

00011fe0 <__libc_csu_fini@@Base>:
   11fe0:	bx	lr

Disassembly of section .fini:

00011fe4 <.fini>:
   11fe4:	push	{r3, lr}
   11fe8:	pop	{r3, pc}
