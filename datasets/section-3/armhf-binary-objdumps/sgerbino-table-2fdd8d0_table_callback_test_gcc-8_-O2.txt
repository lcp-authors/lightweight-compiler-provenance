
../repos/sgerbino-table-2fdd8d0/bin/table_callback_test:     file format elf32-littlearm


Disassembly of section .init:

00011a4c <.init>:
   11a4c:	push	{r3, lr}
   11a50:	bl	11cd0 <_start@@Base+0x3c>
   11a54:	pop	{r3, pc}

Disassembly of section .plt:

00011a58 <strcmp@plt-0x14>:
   11a58:	push	{lr}		; (str lr, [sp, #-4]!)
   11a5c:	ldr	lr, [pc, #4]	; 11a68 <strcmp@plt-0x4>
   11a60:	add	lr, pc, lr
   11a64:	ldr	pc, [lr, #8]!
   11a68:	muleq	r1, r8, r5

00011a6c <strcmp@plt>:
   11a6c:	add	ip, pc, #0, 12
   11a70:	add	ip, ip, #77824	; 0x13000
   11a74:	ldr	pc, [ip, #1432]!	; 0x598

00011a78 <printf@plt>:
   11a78:	add	ip, pc, #0, 12
   11a7c:	add	ip, ip, #77824	; 0x13000
   11a80:	ldr	pc, [ip, #1424]!	; 0x590

00011a84 <free@plt>:
   11a84:	add	ip, pc, #0, 12
   11a88:	add	ip, ip, #77824	; 0x13000
   11a8c:	ldr	pc, [ip, #1416]!	; 0x588

00011a90 <realloc@plt>:
   11a90:	add	ip, pc, #0, 12
   11a94:	add	ip, ip, #77824	; 0x13000
   11a98:	ldr	pc, [ip, #1408]!	; 0x580

00011a9c <strcpy@plt>:
   11a9c:	add	ip, pc, #0, 12
   11aa0:	add	ip, ip, #77824	; 0x13000
   11aa4:	ldr	pc, [ip, #1400]!	; 0x578

00011aa8 <puts@plt>:
   11aa8:	add	ip, pc, #0, 12
   11aac:	add	ip, ip, #77824	; 0x13000
   11ab0:	ldr	pc, [ip, #1392]!	; 0x570

00011ab4 <malloc@plt>:
   11ab4:	add	ip, pc, #0, 12
   11ab8:	add	ip, ip, #77824	; 0x13000
   11abc:	ldr	pc, [ip, #1384]!	; 0x568

00011ac0 <__libc_start_main@plt>:
   11ac0:	add	ip, pc, #0, 12
   11ac4:	add	ip, ip, #77824	; 0x13000
   11ac8:	ldr	pc, [ip, #1376]!	; 0x560

00011acc <__gmon_start__@plt>:
   11acc:	add	ip, pc, #0, 12
   11ad0:	add	ip, ip, #77824	; 0x13000
   11ad4:	ldr	pc, [ip, #1368]!	; 0x558

00011ad8 <strlen@plt>:
   11ad8:	add	ip, pc, #0, 12
   11adc:	add	ip, ip, #77824	; 0x13000
   11ae0:	ldr	pc, [ip, #1360]!	; 0x550

00011ae4 <snprintf@plt>:
   11ae4:	add	ip, pc, #0, 12
   11ae8:	add	ip, ip, #77824	; 0x13000
   11aec:	ldr	pc, [ip, #1352]!	; 0x548

00011af0 <__isoc99_sscanf@plt>:
   11af0:	add	ip, pc, #0, 12
   11af4:	add	ip, ip, #77824	; 0x13000
   11af8:	ldr	pc, [ip, #1344]!	; 0x540

00011afc <abort@plt>:
   11afc:	add	ip, pc, #0, 12
   11b00:	add	ip, ip, #77824	; 0x13000
   11b04:	ldr	pc, [ip, #1336]!	; 0x538

Disassembly of section .text:

00011b08 <main@@Base>:
   11b08:	strd	r4, [sp, #-20]!	; 0xffffffec
   11b0c:	mov	r5, #0
   11b10:	strd	r6, [sp, #8]
   11b14:	str	lr, [sp, #16]
   11b18:	sub	sp, sp, #68	; 0x44
   11b1c:	add	r4, sp, #8
   11b20:	mov	r0, r4
   11b24:	str	r5, [sp, #4]
   11b28:	bl	11d98 <table_init@@Base>
   11b2c:	ldr	r1, [pc, #320]	; 11c74 <main@@Base+0x16c>
   11b30:	mvn	r3, #0
   11b34:	mov	r0, r4
   11b38:	add	r2, sp, #4
   11b3c:	add	r1, pc, r1
   11b40:	bl	12444 <table_register_callback@@Base>
   11b44:	mov	r0, r4
   11b48:	bl	1365c <table_add_row@@Base>
   11b4c:	ldr	r3, [sp, #4]
   11b50:	mov	r7, r0
   11b54:	tst	r3, #2
   11b58:	beq	11bfc <main@@Base+0xf4>
   11b5c:	ldr	r1, [pc, #276]	; 11c78 <main@@Base+0x170>
   11b60:	mov	r2, #0
   11b64:	mov	r0, r4
   11b68:	add	r1, pc, r1
   11b6c:	bl	127c8 <table_add_column@@Base>
   11b70:	ldr	r3, [sp, #4]
   11b74:	mov	r6, r0
   11b78:	tst	r3, #8
   11b7c:	beq	11c4c <main@@Base+0x144>
   11b80:	mov	r3, #42	; 0x2a
   11b84:	mov	r2, r6
   11b88:	mov	r1, r7
   11b8c:	mov	r0, r4
   11b90:	bl	13c9c <table_set_int@@Base>
   11b94:	ldr	r3, [sp, #4]
   11b98:	tst	r3, #1
   11b9c:	beq	11c38 <main@@Base+0x130>
   11ba0:	mov	r1, r7
   11ba4:	mov	r0, r4
   11ba8:	bl	137c0 <table_remove_row@@Base>
   11bac:	ldr	r3, [sp, #4]
   11bb0:	tst	r3, #4
   11bb4:	beq	11c24 <main@@Base+0x11c>
   11bb8:	mov	r1, r6
   11bbc:	mov	r0, r4
   11bc0:	bl	12938 <table_remove_column@@Base>
   11bc4:	ldr	r3, [sp, #4]
   11bc8:	tst	r3, #16
   11bcc:	beq	11c10 <main@@Base+0x108>
   11bd0:	mov	r0, r4
   11bd4:	bl	11e00 <table_destroy@@Base>
   11bd8:	ldr	r3, [sp, #4]
   11bdc:	tst	r3, #64	; 0x40
   11be0:	beq	11c60 <main@@Base+0x158>
   11be4:	mov	r0, r5
   11be8:	add	sp, sp, #68	; 0x44
   11bec:	ldrd	r4, [sp]
   11bf0:	ldrd	r6, [sp, #8]
   11bf4:	add	sp, sp, #16
   11bf8:	pop	{pc}		; (ldr pc, [sp], #4)
   11bfc:	ldr	r0, [pc, #120]	; 11c7c <main@@Base+0x174>
   11c00:	mvn	r5, #0
   11c04:	add	r0, pc, r0
   11c08:	bl	11aa8 <puts@plt>
   11c0c:	b	11b5c <main@@Base+0x54>
   11c10:	ldr	r0, [pc, #104]	; 11c80 <main@@Base+0x178>
   11c14:	mvn	r5, #0
   11c18:	add	r0, pc, r0
   11c1c:	bl	11a78 <printf@plt>
   11c20:	b	11bd0 <main@@Base+0xc8>
   11c24:	ldr	r0, [pc, #88]	; 11c84 <main@@Base+0x17c>
   11c28:	mvn	r5, #0
   11c2c:	add	r0, pc, r0
   11c30:	bl	11a78 <printf@plt>
   11c34:	b	11bb8 <main@@Base+0xb0>
   11c38:	ldr	r0, [pc, #72]	; 11c88 <main@@Base+0x180>
   11c3c:	mvn	r5, #0
   11c40:	add	r0, pc, r0
   11c44:	bl	11a78 <printf@plt>
   11c48:	b	11ba0 <main@@Base+0x98>
   11c4c:	ldr	r0, [pc, #56]	; 11c8c <main@@Base+0x184>
   11c50:	mvn	r5, #0
   11c54:	add	r0, pc, r0
   11c58:	bl	11aa8 <puts@plt>
   11c5c:	b	11b80 <main@@Base+0x78>
   11c60:	ldr	r0, [pc, #40]	; 11c90 <main@@Base+0x188>
   11c64:	mvn	r5, #0
   11c68:	add	r0, pc, r0
   11c6c:	bl	11a78 <printf@plt>
   11c70:	b	11be4 <main@@Base+0xdc>
   11c74:	andeq	r0, r0, r0, asr #4
   11c78:	andeq	r3, r0, ip, lsr #3
   11c7c:	andeq	r3, r0, r8, ror #1
   11c80:	andeq	r3, r0, r4, lsl #3
   11c84:	andeq	r3, r0, r4, asr #2
   11c88:	andeq	r3, r0, r4, lsl #2
   11c8c:	andeq	r3, r0, r4, asr #1
   11c90:	andeq	r3, r0, r4, ror #2

00011c94 <_start@@Base>:
   11c94:	mov	fp, #0
   11c98:	mov	lr, #0
   11c9c:	pop	{r1}		; (ldr r1, [sp], #4)
   11ca0:	mov	r2, sp
   11ca4:	push	{r2}		; (str r2, [sp, #-4]!)
   11ca8:	push	{r0}		; (str r0, [sp, #-4]!)
   11cac:	ldr	ip, [pc, #16]	; 11cc4 <_start@@Base+0x30>
   11cb0:	push	{ip}		; (str ip, [sp, #-4]!)
   11cb4:	ldr	r0, [pc, #12]	; 11cc8 <_start@@Base+0x34>
   11cb8:	ldr	r3, [pc, #12]	; 11ccc <_start@@Base+0x38>
   11cbc:	bl	11ac0 <__libc_start_main@plt>
   11cc0:	bl	11afc <abort@plt>
   11cc4:	andeq	r4, r1, r4, ror #25
   11cc8:	andeq	r1, r1, r8, lsl #22
   11ccc:	andeq	r4, r1, r4, lsl #25
   11cd0:	ldr	r3, [pc, #20]	; 11cec <_start@@Base+0x58>
   11cd4:	ldr	r2, [pc, #20]	; 11cf0 <_start@@Base+0x5c>
   11cd8:	add	r3, pc, r3
   11cdc:	ldr	r2, [r3, r2]
   11ce0:	cmp	r2, #0
   11ce4:	bxeq	lr
   11ce8:	b	11acc <__gmon_start__@plt>
   11cec:	andeq	r3, r1, r0, lsr #6
   11cf0:	andeq	r0, r0, r4, rrx
   11cf4:	ldr	r0, [pc, #24]	; 11d14 <_start@@Base+0x80>
   11cf8:	ldr	r3, [pc, #24]	; 11d18 <_start@@Base+0x84>
   11cfc:	cmp	r3, r0
   11d00:	bxeq	lr
   11d04:	ldr	r3, [pc, #16]	; 11d1c <_start@@Base+0x88>
   11d08:	cmp	r3, #0
   11d0c:	bxeq	lr
   11d10:	bx	r3
   11d14:	andeq	r5, r2, ip, lsr #1
   11d18:	andeq	r5, r2, ip, lsr #1
   11d1c:	andeq	r0, r0, r0
   11d20:	ldr	r0, [pc, #36]	; 11d4c <_start@@Base+0xb8>
   11d24:	ldr	r1, [pc, #36]	; 11d50 <_start@@Base+0xbc>
   11d28:	sub	r1, r1, r0
   11d2c:	asr	r1, r1, #2
   11d30:	add	r1, r1, r1, lsr #31
   11d34:	asrs	r1, r1, #1
   11d38:	bxeq	lr
   11d3c:	ldr	r3, [pc, #16]	; 11d54 <_start@@Base+0xc0>
   11d40:	cmp	r3, #0
   11d44:	bxeq	lr
   11d48:	bx	r3
   11d4c:	andeq	r5, r2, ip, lsr #1
   11d50:	andeq	r5, r2, ip, lsr #1
   11d54:	andeq	r0, r0, r0
   11d58:	push	{r4, lr}
   11d5c:	ldr	r4, [pc, #24]	; 11d7c <_start@@Base+0xe8>
   11d60:	ldrb	r3, [r4]
   11d64:	cmp	r3, #0
   11d68:	popne	{r4, pc}
   11d6c:	bl	11cf4 <_start@@Base+0x60>
   11d70:	mov	r3, #1
   11d74:	strb	r3, [r4]
   11d78:	pop	{r4, pc}
   11d7c:	andeq	r5, r2, ip, lsr #1
   11d80:	b	11d20 <_start@@Base+0x8c>
   11d84:	ldr	r1, [sp]
   11d88:	ldr	r2, [r1]
   11d8c:	orr	r3, r2, r3
   11d90:	str	r3, [r1]
   11d94:	bx	lr

00011d98 <table_init@@Base>:
   11d98:	mov	r3, #0
   11d9c:	mov	r2, #10
   11da0:	mov	r1, #20
   11da4:	str	r3, [r0]
   11da8:	str	r3, [r0, #4]
   11dac:	strd	r2, [r0, #8]
   11db0:	str	r3, [r0, #16]
   11db4:	str	r3, [r0, #20]
   11db8:	str	r1, [r0, #24]
   11dbc:	str	r3, [r0, #28]
   11dc0:	str	r3, [r0, #32]
   11dc4:	str	r3, [r0, #36]	; 0x24
   11dc8:	str	r3, [r0, #40]	; 0x28
   11dcc:	str	r3, [r0, #44]	; 0x2c
   11dd0:	strd	r2, [r0, #48]	; 0x30
   11dd4:	bx	lr

00011dd8 <table_new@@Base>:
   11dd8:	mov	r0, #56	; 0x38
   11ddc:	str	r4, [sp, #-8]!
   11de0:	str	lr, [sp, #4]
   11de4:	bl	11ab4 <malloc@plt>
   11de8:	mov	r4, r0
   11dec:	bl	11d98 <table_init@@Base>
   11df0:	mov	r0, r4
   11df4:	ldr	r4, [sp]
   11df8:	add	sp, sp, #4
   11dfc:	pop	{pc}		; (ldr pc, [sp], #4)

00011e00 <table_destroy@@Base>:
   11e00:	strd	r4, [sp, #-16]!
   11e04:	subs	r4, r0, #0
   11e08:	str	r6, [sp, #8]
   11e0c:	str	lr, [sp, #12]
   11e10:	beq	11edc <table_destroy@@Base+0xdc>
   11e14:	mvn	r2, #0
   11e18:	mov	r3, #64	; 0x40
   11e1c:	mov	r1, r2
   11e20:	bl	126b8 <table_notify@@Base>
   11e24:	mov	r0, r4
   11e28:	bl	13610 <table_get_row_length@@Base>
   11e2c:	subs	r6, r0, #0
   11e30:	ble	11e50 <table_destroy@@Base+0x50>
   11e34:	mov	r5, #0
   11e38:	mov	r1, r5
   11e3c:	mov	r0, r4
   11e40:	add	r5, r5, #1
   11e44:	bl	13730 <table_row_destroy@@Base>
   11e48:	cmp	r6, r5
   11e4c:	bne	11e38 <table_destroy@@Base+0x38>
   11e50:	ldr	r0, [r4, #16]
   11e54:	cmp	r0, #0
   11e58:	beq	11e60 <table_destroy@@Base+0x60>
   11e5c:	bl	11a84 <free@plt>
   11e60:	mov	r0, r4
   11e64:	bl	1274c <table_get_column_length@@Base>
   11e68:	subs	r6, r0, #0
   11e6c:	ble	11e8c <table_destroy@@Base+0x8c>
   11e70:	mov	r5, #0
   11e74:	mov	r1, r5
   11e78:	mov	r0, r4
   11e7c:	add	r5, r5, #1
   11e80:	bl	12904 <table_column_destroy@@Base>
   11e84:	cmp	r6, r5
   11e88:	bne	11e74 <table_destroy@@Base+0x74>
   11e8c:	ldr	r0, [r4]
   11e90:	cmp	r0, #0
   11e94:	beq	11e9c <table_destroy@@Base+0x9c>
   11e98:	bl	11a84 <free@plt>
   11e9c:	ldr	r0, [r4, #36]	; 0x24
   11ea0:	cmp	r0, #0
   11ea4:	beq	11eac <table_destroy@@Base+0xac>
   11ea8:	bl	11a84 <free@plt>
   11eac:	ldr	r0, [r4, #40]	; 0x28
   11eb0:	cmp	r0, #0
   11eb4:	beq	11ebc <table_destroy@@Base+0xbc>
   11eb8:	bl	11a84 <free@plt>
   11ebc:	ldr	r0, [r4, #44]	; 0x2c
   11ec0:	cmp	r0, #0
   11ec4:	beq	11edc <table_destroy@@Base+0xdc>
   11ec8:	ldrd	r4, [sp]
   11ecc:	ldr	r6, [sp, #8]
   11ed0:	ldr	lr, [sp, #12]
   11ed4:	add	sp, sp, #16
   11ed8:	b	11a84 <free@plt>
   11edc:	ldrd	r4, [sp]
   11ee0:	ldr	r6, [sp, #8]
   11ee4:	add	sp, sp, #12
   11ee8:	pop	{pc}		; (ldr pc, [sp], #4)

00011eec <table_delete@@Base>:
   11eec:	str	r4, [sp, #-8]!
   11ef0:	mov	r4, r0
   11ef4:	str	lr, [sp, #4]
   11ef8:	bl	11e00 <table_destroy@@Base>
   11efc:	mov	r0, r4
   11f00:	ldr	r4, [sp]
   11f04:	ldr	lr, [sp, #4]
   11f08:	add	sp, sp, #8
   11f0c:	b	11a84 <free@plt>

00011f10 <table_dupe@@Base>:
   11f10:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11f14:	strd	r6, [sp, #8]
   11f18:	mov	r6, r0
   11f1c:	strd	r8, [sp, #16]
   11f20:	str	sl, [sp, #24]
   11f24:	str	lr, [sp, #28]
   11f28:	sub	sp, sp, #16
   11f2c:	bl	13610 <table_get_row_length@@Base>
   11f30:	mov	r9, r0
   11f34:	mov	r0, r6
   11f38:	bl	1274c <table_get_column_length@@Base>
   11f3c:	mov	r7, r0
   11f40:	bl	11dd8 <table_new@@Base>
   11f44:	cmp	r7, #0
   11f48:	mov	r8, r0
   11f4c:	ble	11f8c <table_dupe@@Base+0x7c>
   11f50:	mov	r4, #0
   11f54:	mov	r1, r4
   11f58:	mov	r0, r6
   11f5c:	bl	12af4 <table_get_column_name@@Base>
   11f60:	mov	r5, r0
   11f64:	mov	r1, r4
   11f68:	mov	r0, r6
   11f6c:	add	r4, r4, #1
   11f70:	bl	12ad8 <table_get_column_data_type@@Base>
   11f74:	mov	r2, r0
   11f78:	mov	r1, r5
   11f7c:	mov	r0, r8
   11f80:	bl	127c8 <table_add_column@@Base>
   11f84:	cmp	r7, r4
   11f88:	bne	11f54 <table_dupe@@Base+0x44>
   11f8c:	cmp	r9, #0
   11f90:	ble	12068 <table_dupe@@Base+0x158>
   11f94:	mov	r5, #0
   11f98:	add	sl, sp, #12
   11f9c:	mov	r0, r8
   11fa0:	bl	1365c <table_add_row@@Base>
   11fa4:	cmp	r7, #0
   11fa8:	ble	1205c <table_dupe@@Base+0x14c>
   11fac:	mov	r4, #0
   11fb0:	mov	r1, r4
   11fb4:	mov	r0, r6
   11fb8:	bl	12ad8 <table_get_column_data_type@@Base>
   11fbc:	cmp	r0, #23
   11fc0:	addls	pc, pc, r0, lsl #2
   11fc4:	b	12050 <table_dupe@@Base+0x140>
   11fc8:	b	120d8 <table_dupe@@Base+0x1c8>
   11fcc:	b	1234c <table_dupe@@Base+0x43c>
   11fd0:	b	12324 <table_dupe@@Base+0x414>
   11fd4:	b	122fc <table_dupe@@Base+0x3ec>
   11fd8:	b	122d4 <table_dupe@@Base+0x3c4>
   11fdc:	b	123ec <table_dupe@@Base+0x4dc>
   11fe0:	b	123c4 <table_dupe@@Base+0x4b4>
   11fe4:	b	1239c <table_dupe@@Base+0x48c>
   11fe8:	b	12374 <table_dupe@@Base+0x464>
   11fec:	b	122ac <table_dupe@@Base+0x39c>
   11ff0:	b	12284 <table_dupe@@Base+0x374>
   11ff4:	b	1225c <table_dupe@@Base+0x34c>
   11ff8:	b	12234 <table_dupe@@Base+0x324>
   11ffc:	b	1220c <table_dupe@@Base+0x2fc>
   12000:	b	121e4 <table_dupe@@Base+0x2d4>
   12004:	b	121bc <table_dupe@@Base+0x2ac>
   12008:	b	12198 <table_dupe@@Base+0x288>
   1200c:	b	12174 <table_dupe@@Base+0x264>
   12010:	b	12150 <table_dupe@@Base+0x240>
   12014:	b	12128 <table_dupe@@Base+0x218>
   12018:	b	12100 <table_dupe@@Base+0x1f0>
   1201c:	b	120b0 <table_dupe@@Base+0x1a0>
   12020:	b	12088 <table_dupe@@Base+0x178>
   12024:	b	12028 <table_dupe@@Base+0x118>
   12028:	mov	r2, r4
   1202c:	mov	r1, r5
   12030:	mov	r0, r6
   12034:	bl	1360c <table_get_ptr@@Base>
   12038:	mov	r3, sl
   1203c:	mov	r2, r4
   12040:	str	r0, [sp, #12]
   12044:	mov	r1, r5
   12048:	mov	r0, r8
   1204c:	bl	13f9c <table_set_ptr@@Base>
   12050:	add	r4, r4, #1
   12054:	cmp	r7, r4
   12058:	bne	11fb0 <table_dupe@@Base+0xa0>
   1205c:	add	r5, r5, #1
   12060:	cmp	r9, r5
   12064:	bne	11f9c <table_dupe@@Base+0x8c>
   12068:	mov	r0, r8
   1206c:	add	sp, sp, #16
   12070:	ldrd	r4, [sp]
   12074:	ldrd	r6, [sp, #8]
   12078:	ldrd	r8, [sp, #16]
   1207c:	ldr	sl, [sp, #24]
   12080:	add	sp, sp, #28
   12084:	pop	{pc}		; (ldr pc, [sp], #4)
   12088:	mov	r2, r4
   1208c:	mov	r1, r5
   12090:	mov	r0, r6
   12094:	bl	13460 <table_get_bool@@Base>
   12098:	mov	r3, r0
   1209c:	mov	r2, r4
   120a0:	mov	r1, r5
   120a4:	mov	r0, r8
   120a8:	bl	13c78 <table_set_bool@@Base>
   120ac:	b	12050 <table_dupe@@Base+0x140>
   120b0:	mov	r2, r4
   120b4:	mov	r1, r5
   120b8:	mov	r0, r6
   120bc:	bl	13608 <table_get_string@@Base>
   120c0:	mov	r3, r0
   120c4:	mov	r2, r4
   120c8:	mov	r1, r5
   120cc:	mov	r0, r8
   120d0:	bl	13f38 <table_set_string@@Base>
   120d4:	b	12050 <table_dupe@@Base+0x140>
   120d8:	mov	r2, r4
   120dc:	mov	r1, r5
   120e0:	mov	r0, r6
   120e4:	bl	1347c <table_get_int@@Base>
   120e8:	mov	r3, r0
   120ec:	mov	r2, r4
   120f0:	mov	r1, r5
   120f4:	mov	r0, r8
   120f8:	bl	13c9c <table_set_int@@Base>
   120fc:	b	12050 <table_dupe@@Base+0x140>
   12100:	mov	r2, r4
   12104:	mov	r1, r5
   12108:	mov	r0, r6
   1210c:	bl	13604 <table_get_uchar@@Base>
   12110:	mov	r3, r0
   12114:	mov	r2, r4
   12118:	mov	r1, r5
   1211c:	mov	r0, r8
   12120:	bl	13f78 <table_set_uchar@@Base>
   12124:	b	12050 <table_dupe@@Base+0x140>
   12128:	mov	r2, r4
   1212c:	mov	r1, r5
   12130:	mov	r0, r6
   12134:	bl	13600 <table_get_char@@Base>
   12138:	mov	r3, r0
   1213c:	mov	r2, r4
   12140:	mov	r1, r5
   12144:	mov	r0, r8
   12148:	bl	13f54 <table_set_char@@Base>
   1214c:	b	12050 <table_dupe@@Base+0x140>
   12150:	mov	r2, r4
   12154:	mov	r1, r5
   12158:	mov	r0, r6
   1215c:	bl	135e4 <table_get_ldouble@@Base>
   12160:	mov	r2, r4
   12164:	mov	r1, r5
   12168:	mov	r0, r8
   1216c:	bl	13f14 <table_set_ldouble@@Base>
   12170:	b	12050 <table_dupe@@Base+0x140>
   12174:	mov	r2, r4
   12178:	mov	r1, r5
   1217c:	mov	r0, r6
   12180:	bl	135c8 <table_get_double@@Base>
   12184:	mov	r2, r4
   12188:	mov	r1, r5
   1218c:	mov	r0, r8
   12190:	bl	13ef0 <table_set_double@@Base>
   12194:	b	12050 <table_dupe@@Base+0x140>
   12198:	mov	r2, r4
   1219c:	mov	r1, r5
   121a0:	mov	r0, r6
   121a4:	bl	135ac <table_get_float@@Base>
   121a8:	mov	r2, r4
   121ac:	mov	r1, r5
   121b0:	mov	r0, r8
   121b4:	bl	13ecc <table_set_float@@Base>
   121b8:	b	12050 <table_dupe@@Base+0x140>
   121bc:	mov	r2, r4
   121c0:	mov	r1, r5
   121c4:	mov	r0, r6
   121c8:	bl	135a8 <table_get_ullong@@Base>
   121cc:	mov	r2, r4
   121d0:	strd	r0, [sp]
   121d4:	mov	r1, r5
   121d8:	mov	r0, r8
   121dc:	bl	13eac <table_set_ullong@@Base>
   121e0:	b	12050 <table_dupe@@Base+0x140>
   121e4:	mov	r2, r4
   121e8:	mov	r1, r5
   121ec:	mov	r0, r6
   121f0:	bl	135a4 <table_get_llong@@Base>
   121f4:	mov	r2, r4
   121f8:	strd	r0, [sp]
   121fc:	mov	r1, r5
   12200:	mov	r0, r8
   12204:	bl	13e8c <table_set_llong@@Base>
   12208:	b	12050 <table_dupe@@Base+0x140>
   1220c:	mov	r2, r4
   12210:	mov	r1, r5
   12214:	mov	r0, r6
   12218:	bl	13588 <table_get_ulong@@Base>
   1221c:	mov	r3, r0
   12220:	mov	r2, r4
   12224:	mov	r1, r5
   12228:	mov	r0, r8
   1222c:	bl	13e68 <table_set_ulong@@Base>
   12230:	b	12050 <table_dupe@@Base+0x140>
   12234:	mov	r2, r4
   12238:	mov	r1, r5
   1223c:	mov	r0, r6
   12240:	bl	1356c <table_get_long@@Base>
   12244:	mov	r3, r0
   12248:	mov	r2, r4
   1224c:	mov	r1, r5
   12250:	mov	r0, r8
   12254:	bl	13e44 <table_set_long@@Base>
   12258:	b	12050 <table_dupe@@Base+0x140>
   1225c:	mov	r2, r4
   12260:	mov	r1, r5
   12264:	mov	r0, r6
   12268:	bl	13568 <table_get_ushort@@Base>
   1226c:	mov	r3, r0
   12270:	mov	r2, r4
   12274:	mov	r1, r5
   12278:	mov	r0, r8
   1227c:	bl	13e20 <table_set_ushort@@Base>
   12280:	b	12050 <table_dupe@@Base+0x140>
   12284:	mov	r2, r4
   12288:	mov	r1, r5
   1228c:	mov	r0, r6
   12290:	bl	13564 <table_get_short@@Base>
   12294:	mov	r3, r0
   12298:	mov	r2, r4
   1229c:	mov	r1, r5
   122a0:	mov	r0, r8
   122a4:	bl	13dfc <table_set_short@@Base>
   122a8:	b	12050 <table_dupe@@Base+0x140>
   122ac:	mov	r2, r4
   122b0:	mov	r1, r5
   122b4:	mov	r0, r6
   122b8:	bl	13548 <table_get_uint64@@Base>
   122bc:	mov	r2, r4
   122c0:	strd	r0, [sp]
   122c4:	mov	r1, r5
   122c8:	mov	r0, r8
   122cc:	bl	13ddc <table_set_uint64@@Base>
   122d0:	b	12050 <table_dupe@@Base+0x140>
   122d4:	mov	r2, r4
   122d8:	mov	r1, r5
   122dc:	mov	r0, r6
   122e0:	bl	134ec <table_get_int16@@Base>
   122e4:	mov	r3, r0
   122e8:	mov	r2, r4
   122ec:	mov	r1, r5
   122f0:	mov	r0, r8
   122f4:	bl	13d2c <table_set_int16@@Base>
   122f8:	b	12050 <table_dupe@@Base+0x140>
   122fc:	mov	r2, r4
   12300:	mov	r1, r5
   12304:	mov	r0, r6
   12308:	bl	134d0 <table_get_uint8@@Base>
   1230c:	mov	r3, r0
   12310:	mov	r2, r4
   12314:	mov	r1, r5
   12318:	mov	r0, r8
   1231c:	bl	13d08 <table_set_uint8@@Base>
   12320:	b	12050 <table_dupe@@Base+0x140>
   12324:	mov	r2, r4
   12328:	mov	r1, r5
   1232c:	mov	r0, r6
   12330:	bl	134b4 <table_get_int8@@Base>
   12334:	mov	r3, r0
   12338:	mov	r2, r4
   1233c:	mov	r1, r5
   12340:	mov	r0, r8
   12344:	bl	13ce4 <table_set_int8@@Base>
   12348:	b	12050 <table_dupe@@Base+0x140>
   1234c:	mov	r2, r4
   12350:	mov	r1, r5
   12354:	mov	r0, r6
   12358:	bl	13498 <table_get_uint@@Base>
   1235c:	mov	r3, r0
   12360:	mov	r2, r4
   12364:	mov	r1, r5
   12368:	mov	r0, r8
   1236c:	bl	13cc0 <table_set_uint@@Base>
   12370:	b	12050 <table_dupe@@Base+0x140>
   12374:	mov	r2, r4
   12378:	mov	r1, r5
   1237c:	mov	r0, r6
   12380:	bl	1352c <table_get_int64@@Base>
   12384:	mov	r2, r4
   12388:	strd	r0, [sp]
   1238c:	mov	r1, r5
   12390:	mov	r0, r8
   12394:	bl	13dbc <table_set_int64@@Base>
   12398:	b	12050 <table_dupe@@Base+0x140>
   1239c:	mov	r2, r4
   123a0:	mov	r1, r5
   123a4:	mov	r0, r6
   123a8:	bl	13528 <table_get_uint32@@Base>
   123ac:	mov	r3, r0
   123b0:	mov	r2, r4
   123b4:	mov	r1, r5
   123b8:	mov	r0, r8
   123bc:	bl	13d98 <table_set_uint32@@Base>
   123c0:	b	12050 <table_dupe@@Base+0x140>
   123c4:	mov	r2, r4
   123c8:	mov	r1, r5
   123cc:	mov	r0, r6
   123d0:	bl	13524 <table_get_int32@@Base>
   123d4:	mov	r3, r0
   123d8:	mov	r2, r4
   123dc:	mov	r1, r5
   123e0:	mov	r0, r8
   123e4:	bl	13d74 <table_set_int32@@Base>
   123e8:	b	12050 <table_dupe@@Base+0x140>
   123ec:	mov	r2, r4
   123f0:	mov	r1, r5
   123f4:	mov	r0, r6
   123f8:	bl	13508 <table_get_uint16@@Base>
   123fc:	mov	r3, r0
   12400:	mov	r2, r4
   12404:	mov	r1, r5
   12408:	mov	r0, r8
   1240c:	bl	13d50 <table_set_uint16@@Base>
   12410:	b	12050 <table_dupe@@Base+0x140>

00012414 <table_get_major_version@@Base>:
   12414:	mov	r0, #0
   12418:	bx	lr

0001241c <table_get_minor_version@@Base>:
   1241c:	mov	r0, #0
   12420:	bx	lr

00012424 <table_get_patch_version@@Base>:
   12424:	mov	r0, #0
   12428:	bx	lr

0001242c <table_get_version@@Base>:
   1242c:	ldr	r0, [pc, #4]	; 12438 <table_get_version@@Base+0xc>
   12430:	add	r0, pc, r0
   12434:	bx	lr
   12438:	andeq	r2, r0, r8, lsl #20

0001243c <table_get_callback_length@@Base>:
   1243c:	ldr	r0, [r0, #32]
   12440:	bx	lr

00012444 <table_register_callback@@Base>:
   12444:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12448:	ldr	r5, [r0, #32]
   1244c:	strd	r6, [sp, #8]
   12450:	str	r8, [sp, #16]
   12454:	str	lr, [sp, #20]
   12458:	cmp	r5, #0
   1245c:	ble	124b8 <table_register_callback@@Base+0x74>
   12460:	ldr	lr, [r0, #36]	; 0x24
   12464:	mov	ip, #0
   12468:	sub	lr, lr, #4
   1246c:	b	1247c <table_register_callback@@Base+0x38>
   12470:	add	ip, ip, #1
   12474:	cmp	ip, r5
   12478:	beq	124b8 <table_register_callback@@Base+0x74>
   1247c:	ldr	r4, [lr, #4]!
   12480:	lsl	r6, ip, #2
   12484:	cmp	r1, r4
   12488:	bne	12470 <table_register_callback@@Base+0x2c>
   1248c:	ldr	r4, [r0, #40]	; 0x28
   12490:	ldr	r4, [r4, ip, lsl #2]
   12494:	cmp	r2, r4
   12498:	bne	12470 <table_register_callback@@Base+0x2c>
   1249c:	cmp	ip, #0
   124a0:	beq	124b8 <table_register_callback@@Base+0x74>
   124a4:	ldr	r2, [r0, #44]	; 0x2c
   124a8:	ldr	r7, [r2, r6]
   124ac:	orr	r7, r7, r3
   124b0:	str	r7, [r2, r6]
   124b4:	b	12508 <table_register_callback@@Base+0xc4>
   124b8:	mov	r7, r3
   124bc:	ldr	r3, [r0, #48]	; 0x30
   124c0:	mov	r6, r2
   124c4:	mov	r8, r1
   124c8:	mov	r4, r0
   124cc:	udiv	r2, r5, r3
   124d0:	mls	r5, r3, r2, r5
   124d4:	cmp	r5, #0
   124d8:	beq	1251c <table_register_callback@@Base+0xd8>
   124dc:	mov	r0, r4
   124e0:	bl	1243c <table_get_callback_length@@Base>
   124e4:	ldr	r3, [r4, #36]	; 0x24
   124e8:	str	r8, [r3, r0, lsl #2]
   124ec:	ldr	r3, [r4, #40]	; 0x28
   124f0:	str	r6, [r3, r0, lsl #2]
   124f4:	ldr	r3, [r4, #44]	; 0x2c
   124f8:	str	r7, [r3, r0, lsl #2]
   124fc:	ldr	r3, [r4, #32]
   12500:	add	r3, r3, #1
   12504:	str	r3, [r4, #32]
   12508:	ldrd	r4, [sp]
   1250c:	ldrd	r6, [sp, #8]
   12510:	ldr	r8, [sp, #16]
   12514:	add	sp, sp, #20
   12518:	pop	{pc}		; (ldr pc, [sp], #4)
   1251c:	ldr	r2, [r4, #52]	; 0x34
   12520:	ldr	r0, [r0, #36]	; 0x24
   12524:	add	r3, r3, r2
   12528:	lsl	r1, r3, #2
   1252c:	str	r3, [r4, #52]	; 0x34
   12530:	bl	11a90 <realloc@plt>
   12534:	ldr	r1, [r4, #52]	; 0x34
   12538:	str	r0, [r4, #36]	; 0x24
   1253c:	ldr	r0, [r4, #40]	; 0x28
   12540:	lsl	r1, r1, #2
   12544:	bl	11a90 <realloc@plt>
   12548:	ldr	r1, [r4, #52]	; 0x34
   1254c:	str	r0, [r4, #40]	; 0x28
   12550:	ldr	r0, [r4, #44]	; 0x2c
   12554:	lsl	r1, r1, #2
   12558:	bl	11a90 <realloc@plt>
   1255c:	str	r0, [r4, #44]	; 0x2c
   12560:	b	124dc <table_register_callback@@Base+0x98>

00012564 <table_unregister_callback@@Base>:
   12564:	ldr	ip, [r0, #32]
   12568:	cmp	ip, #0
   1256c:	bxle	lr
   12570:	strd	r4, [sp, #-16]!
   12574:	mov	r3, #0
   12578:	str	r6, [sp, #8]
   1257c:	ldr	r6, [r0, #36]	; 0x24
   12580:	str	lr, [sp, #12]
   12584:	sub	r4, r6, #4
   12588:	b	12598 <table_unregister_callback@@Base+0x34>
   1258c:	add	r3, r3, #1
   12590:	cmp	r3, ip
   12594:	beq	12678 <table_unregister_callback@@Base+0x114>
   12598:	ldr	r5, [r4, #4]!
   1259c:	lsl	lr, r3, #2
   125a0:	cmp	r1, r5
   125a4:	bne	1258c <table_unregister_callback@@Base+0x28>
   125a8:	ldr	r5, [r0, #40]	; 0x28
   125ac:	ldr	r5, [r5, r3, lsl #2]
   125b0:	cmp	r2, r5
   125b4:	bne	1258c <table_unregister_callback@@Base+0x28>
   125b8:	sub	ip, ip, #1
   125bc:	cmp	ip, r3
   125c0:	ble	12610 <table_unregister_callback@@Base+0xac>
   125c4:	add	r3, r3, #1
   125c8:	lsl	r2, r3, #2
   125cc:	b	125d4 <table_unregister_callback@@Base+0x70>
   125d0:	ldr	r6, [r0, #36]	; 0x24
   125d4:	ldr	r1, [r6, r2]
   125d8:	str	r1, [r6, lr]
   125dc:	ldr	r1, [r0, #40]	; 0x28
   125e0:	ldr	ip, [r1, r2]
   125e4:	str	ip, [r1, lr]
   125e8:	ldr	r1, [r0, #44]	; 0x2c
   125ec:	ldr	ip, [r1, r2]
   125f0:	add	r2, r2, #4
   125f4:	str	ip, [r1, lr]
   125f8:	lsl	lr, r3, #2
   125fc:	ldr	ip, [r0, #32]
   12600:	sub	ip, ip, #1
   12604:	cmp	ip, r3
   12608:	add	r3, r3, #1
   1260c:	bgt	125d0 <table_unregister_callback@@Base+0x6c>
   12610:	ldr	r2, [r0, #48]	; 0x30
   12614:	str	ip, [r0, #32]
   12618:	udiv	r3, ip, r2
   1261c:	mls	ip, r2, r3, ip
   12620:	cmp	ip, #0
   12624:	bne	12678 <table_unregister_callback@@Base+0x114>
   12628:	mov	r4, r0
   1262c:	ldr	r0, [r0, #36]	; 0x24
   12630:	ldr	r5, [r4, #52]	; 0x34
   12634:	sub	r5, r5, r2
   12638:	cmp	r5, #0
   1263c:	str	r5, [r4, #52]	; 0x34
   12640:	beq	12688 <table_unregister_callback@@Base+0x124>
   12644:	lsl	r1, r5, #2
   12648:	bl	11a90 <realloc@plt>
   1264c:	ldr	r1, [r4, #52]	; 0x34
   12650:	str	r0, [r4, #36]	; 0x24
   12654:	ldr	r0, [r4, #40]	; 0x28
   12658:	lsl	r1, r1, #2
   1265c:	bl	11a90 <realloc@plt>
   12660:	ldr	r1, [r4, #52]	; 0x34
   12664:	str	r0, [r4, #40]	; 0x28
   12668:	ldr	r0, [r4, #44]	; 0x2c
   1266c:	lsl	r1, r1, #2
   12670:	bl	11a90 <realloc@plt>
   12674:	str	r0, [r4, #44]	; 0x2c
   12678:	ldrd	r4, [sp]
   1267c:	ldr	r6, [sp, #8]
   12680:	add	sp, sp, #12
   12684:	pop	{pc}		; (ldr pc, [sp], #4)
   12688:	bl	11a84 <free@plt>
   1268c:	ldr	r0, [r4, #40]	; 0x28
   12690:	bl	11a84 <free@plt>
   12694:	ldr	r0, [r4, #44]	; 0x2c
   12698:	bl	11a84 <free@plt>
   1269c:	str	r5, [r4, #36]	; 0x24
   126a0:	str	r5, [r4, #40]	; 0x28
   126a4:	str	r5, [r4, #44]	; 0x2c
   126a8:	ldrd	r4, [sp]
   126ac:	ldr	r6, [sp, #8]
   126b0:	add	sp, sp, #12
   126b4:	pop	{pc}		; (ldr pc, [sp], #4)

000126b8 <table_notify@@Base>:
   126b8:	strd	r4, [sp, #-28]!	; 0xffffffe4
   126bc:	strd	r6, [sp, #8]
   126c0:	str	lr, [sp, #24]
   126c4:	ldr	lr, [r0, #32]
   126c8:	strd	r8, [sp, #16]
   126cc:	sub	sp, sp, #12
   126d0:	cmp	lr, #0
   126d4:	ble	12734 <table_notify@@Base+0x7c>
   126d8:	mov	r6, r3
   126dc:	mov	r8, r2
   126e0:	mov	r7, r1
   126e4:	mov	r5, r0
   126e8:	mov	r4, #0
   126ec:	ldr	ip, [r5, #44]	; 0x2c
   126f0:	mov	r3, r6
   126f4:	mov	r2, r8
   126f8:	mov	r1, r7
   126fc:	mov	r0, r5
   12700:	ldr	ip, [ip, r4, lsl #2]
   12704:	tst	r6, ip
   12708:	beq	12728 <table_notify@@Base+0x70>
   1270c:	ldr	ip, [r5, #36]	; 0x24
   12710:	ldr	lr, [r5, #40]	; 0x28
   12714:	ldr	lr, [lr, r4, lsl #2]
   12718:	str	lr, [sp]
   1271c:	ldr	r9, [ip, r4, lsl #2]
   12720:	blx	r9
   12724:	ldr	lr, [r5, #32]
   12728:	add	r4, r4, #1
   1272c:	cmp	lr, r4
   12730:	bgt	126ec <table_notify@@Base+0x34>
   12734:	add	sp, sp, #12
   12738:	ldrd	r4, [sp]
   1273c:	ldrd	r6, [sp, #8]
   12740:	ldrd	r8, [sp, #16]
   12744:	add	sp, sp, #24
   12748:	pop	{pc}		; (ldr pc, [sp], #4)

0001274c <table_get_column_length@@Base>:
   1274c:	ldr	r0, [r0, #4]
   12750:	bx	lr

00012754 <table_get_col_ptr@@Base>:
   12754:	ldr	r0, [r0]
   12758:	add	r1, r1, r1, lsl #1
   1275c:	add	r0, r0, r1, lsl #2
   12760:	bx	lr

00012764 <table_column_init@@Base>:
   12764:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12768:	mov	r5, r2
   1276c:	strd	r6, [sp, #8]
   12770:	mov	r7, r3
   12774:	str	r8, [sp, #16]
   12778:	str	lr, [sp, #20]
   1277c:	ldr	r6, [sp, #24]
   12780:	bl	12754 <table_get_col_ptr@@Base>
   12784:	mov	r4, r0
   12788:	mov	r0, r5
   1278c:	bl	11ad8 <strlen@plt>
   12790:	add	r0, r0, #1
   12794:	bl	11ab4 <malloc@plt>
   12798:	cmp	r0, #0
   1279c:	str	r0, [r4]
   127a0:	beq	127ac <table_column_init@@Base+0x48>
   127a4:	mov	r1, r5
   127a8:	bl	11a9c <strcpy@plt>
   127ac:	ldr	r8, [sp, #16]
   127b0:	str	r7, [r4, #4]
   127b4:	str	r6, [r4, #8]
   127b8:	ldrd	r4, [sp]
   127bc:	ldrd	r6, [sp, #8]
   127c0:	add	sp, sp, #20
   127c4:	pop	{pc}		; (ldr pc, [sp], #4)

000127c8 <table_add_column@@Base>:
   127c8:	strd	r4, [sp, #-28]!	; 0xffffffe4
   127cc:	mov	r4, r0
   127d0:	strd	r6, [sp, #8]
   127d4:	mov	r7, r1
   127d8:	mov	r6, r2
   127dc:	strd	r8, [sp, #16]
   127e0:	str	lr, [sp, #24]
   127e4:	sub	sp, sp, #12
   127e8:	bl	1274c <table_get_column_length@@Base>
   127ec:	ldr	r3, [r4, #8]
   127f0:	udiv	r5, r0, r3
   127f4:	mls	r5, r5, r3, r0
   127f8:	cmp	r5, #0
   127fc:	beq	128a0 <table_add_column@@Base+0xd8>
   12800:	mov	r0, r4
   12804:	bl	13610 <table_get_row_length@@Base>
   12808:	mov	r8, r0
   1280c:	mov	r0, r4
   12810:	bl	1274c <table_get_column_length@@Base>
   12814:	mov	r9, r0
   12818:	mov	r0, r6
   1281c:	bl	13244 <table_get_default_compare_function_for_data_type@@Base>
   12820:	mov	r3, r6
   12824:	mov	r2, r7
   12828:	str	r0, [sp]
   1282c:	mov	r1, r9
   12830:	mov	r0, r4
   12834:	bl	12764 <table_column_init@@Base>
   12838:	cmp	r8, #0
   1283c:	ble	12860 <table_add_column@@Base+0x98>
   12840:	mov	r5, #0
   12844:	mov	r1, r5
   12848:	mov	r2, r9
   1284c:	mov	r0, r4
   12850:	add	r5, r5, #1
   12854:	bl	14bc4 <table_cell_init@@Base>
   12858:	cmp	r8, r5
   1285c:	bne	12844 <table_add_column@@Base+0x7c>
   12860:	mov	r0, r4
   12864:	bl	1274c <table_get_column_length@@Base>
   12868:	mov	r2, r0
   1286c:	mov	r3, #8
   12870:	mov	r0, r4
   12874:	mvn	r1, #0
   12878:	bl	126b8 <table_notify@@Base>
   1287c:	ldr	r0, [r4, #4]
   12880:	add	r3, r0, #1
   12884:	str	r3, [r4, #4]
   12888:	add	sp, sp, #12
   1288c:	ldrd	r4, [sp]
   12890:	ldrd	r6, [sp, #8]
   12894:	ldrd	r8, [sp, #16]
   12898:	add	sp, sp, #24
   1289c:	pop	{pc}		; (ldr pc, [sp], #4)
   128a0:	ldr	r0, [r4]
   128a4:	ldr	r2, [r4, #12]
   128a8:	add	r3, r3, r2
   128ac:	add	r1, r3, r3, lsl #1
   128b0:	str	r3, [r4, #12]
   128b4:	lsl	r1, r1, #2
   128b8:	bl	11a90 <realloc@plt>
   128bc:	str	r0, [r4]
   128c0:	mov	r0, r4
   128c4:	bl	13610 <table_get_row_length@@Base>
   128c8:	subs	r9, r0, #0
   128cc:	ble	12800 <table_add_column@@Base+0x38>
   128d0:	mov	r1, r5
   128d4:	mov	r0, r4
   128d8:	bl	13618 <table_get_row_ptr@@Base>
   128dc:	ldr	r1, [r4, #12]
   128e0:	mov	r8, r0
   128e4:	add	r5, r5, #1
   128e8:	ldr	r0, [r0]
   128ec:	lsl	r1, r1, #2
   128f0:	bl	11a90 <realloc@plt>
   128f4:	cmp	r9, r5
   128f8:	str	r0, [r8]
   128fc:	bne	128d0 <table_add_column@@Base+0x108>
   12900:	b	12800 <table_add_column@@Base+0x38>

00012904 <table_column_destroy@@Base>:
   12904:	str	r4, [sp, #-8]!
   12908:	str	lr, [sp, #4]
   1290c:	bl	12754 <table_get_col_ptr@@Base>
   12910:	ldr	r0, [r0]
   12914:	cmp	r0, #0
   12918:	beq	1292c <table_column_destroy@@Base+0x28>
   1291c:	ldr	r4, [sp]
   12920:	ldr	lr, [sp, #4]
   12924:	add	sp, sp, #8
   12928:	b	11a84 <free@plt>
   1292c:	ldr	r4, [sp]
   12930:	add	sp, sp, #4
   12934:	pop	{pc}		; (ldr pc, [sp], #4)

00012938 <table_remove_column@@Base>:
   12938:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1293c:	mov	r4, r0
   12940:	mov	r5, r1
   12944:	strd	r6, [sp, #8]
   12948:	strd	r8, [sp, #16]
   1294c:	str	sl, [sp, #24]
   12950:	str	lr, [sp, #28]
   12954:	bl	12904 <table_column_destroy@@Base>
   12958:	mov	r0, r4
   1295c:	bl	1274c <table_get_column_length@@Base>
   12960:	sub	r7, r0, #1
   12964:	cmp	r5, r7
   12968:	bge	129ac <table_remove_column@@Base+0x74>
   1296c:	add	r3, r5, r5, lsl #1
   12970:	mov	r0, r5
   12974:	lsl	r3, r3, #2
   12978:	ldr	r2, [r4]
   1297c:	add	r0, r0, #1
   12980:	cmp	r0, r7
   12984:	add	r1, r2, r3
   12988:	add	r3, r3, #12
   1298c:	add	r2, r2, r3
   12990:	ldr	lr, [r2]
   12994:	ldr	ip, [r2, #4]
   12998:	ldr	r2, [r2, #8]
   1299c:	str	lr, [r1]
   129a0:	str	ip, [r1, #4]
   129a4:	str	r2, [r1, #8]
   129a8:	bne	12978 <table_remove_column@@Base+0x40>
   129ac:	mov	r0, r4
   129b0:	bl	13610 <table_get_row_length@@Base>
   129b4:	subs	r9, r0, #0
   129b8:	ble	12a1c <table_remove_column@@Base+0xe4>
   129bc:	lsl	r8, r5, #2
   129c0:	mov	r6, #0
   129c4:	mov	r2, r5
   129c8:	mov	r1, r6
   129cc:	mov	r0, r4
   129d0:	bl	14be4 <table_cell_destroy@@Base>
   129d4:	mov	r1, r6
   129d8:	mov	r0, r4
   129dc:	bl	13618 <table_get_row_ptr@@Base>
   129e0:	cmp	r5, r7
   129e4:	bge	12a10 <table_remove_column@@Base+0xd8>
   129e8:	mov	r3, r8
   129ec:	mov	r2, r5
   129f0:	ldr	r1, [r0]
   129f4:	add	r2, r2, #1
   129f8:	cmp	r2, r7
   129fc:	add	ip, r1, r3
   12a00:	add	r3, r3, #4
   12a04:	ldr	r1, [r1, r3]
   12a08:	str	r1, [ip]
   12a0c:	bne	129f0 <table_remove_column@@Base+0xb8>
   12a10:	add	r6, r6, #1
   12a14:	cmp	r9, r6
   12a18:	bne	129c4 <table_remove_column@@Base+0x8c>
   12a1c:	ldr	r3, [r4, #4]
   12a20:	mov	r0, r4
   12a24:	sub	r3, r3, #1
   12a28:	str	r3, [r4, #4]
   12a2c:	bl	1274c <table_get_column_length@@Base>
   12a30:	ldr	r3, [r4, #8]
   12a34:	udiv	r6, r0, r3
   12a38:	mls	r6, r6, r3, r0
   12a3c:	cmp	r6, #0
   12a40:	beq	12a74 <table_remove_column@@Base+0x13c>
   12a44:	mov	r0, r4
   12a48:	mov	r2, r5
   12a4c:	mov	r3, #16
   12a50:	mvn	r1, #0
   12a54:	bl	126b8 <table_notify@@Base>
   12a58:	ldrd	r4, [sp]
   12a5c:	mov	r0, #0
   12a60:	ldrd	r6, [sp, #8]
   12a64:	ldrd	r8, [sp, #16]
   12a68:	ldr	sl, [sp, #24]
   12a6c:	add	sp, sp, #28
   12a70:	pop	{pc}		; (ldr pc, [sp], #4)
   12a74:	ldr	r0, [r4]
   12a78:	ldr	r2, [r4, #12]
   12a7c:	sub	r3, r2, r3
   12a80:	add	r1, r3, r3, lsl #1
   12a84:	str	r3, [r4, #12]
   12a88:	lsl	r1, r1, #2
   12a8c:	bl	11a90 <realloc@plt>
   12a90:	str	r0, [r4]
   12a94:	mov	r0, r4
   12a98:	bl	13610 <table_get_row_length@@Base>
   12a9c:	subs	r8, r0, #0
   12aa0:	ble	12a44 <table_remove_column@@Base+0x10c>
   12aa4:	mov	r1, r6
   12aa8:	mov	r0, r4
   12aac:	bl	13618 <table_get_row_ptr@@Base>
   12ab0:	ldr	r1, [r4, #12]
   12ab4:	mov	r7, r0
   12ab8:	add	r6, r6, #1
   12abc:	ldr	r0, [r0]
   12ac0:	lsl	r1, r1, #2
   12ac4:	bl	11a90 <realloc@plt>
   12ac8:	cmp	r8, r6
   12acc:	str	r0, [r7]
   12ad0:	bne	12aa4 <table_remove_column@@Base+0x16c>
   12ad4:	b	12a44 <table_remove_column@@Base+0x10c>

00012ad8 <table_get_column_data_type@@Base>:
   12ad8:	str	r4, [sp, #-8]!
   12adc:	str	lr, [sp, #4]
   12ae0:	bl	12754 <table_get_col_ptr@@Base>
   12ae4:	ldr	r4, [sp]
   12ae8:	add	sp, sp, #4
   12aec:	ldr	r0, [r0, #4]
   12af0:	pop	{pc}		; (ldr pc, [sp], #4)

00012af4 <table_get_column_name@@Base>:
   12af4:	str	r4, [sp, #-8]!
   12af8:	str	lr, [sp, #4]
   12afc:	bl	12754 <table_get_col_ptr@@Base>
   12b00:	ldr	r4, [sp]
   12b04:	add	sp, sp, #4
   12b08:	ldr	r0, [r0]
   12b0c:	pop	{pc}		; (ldr pc, [sp], #4)

00012b10 <table_get_column@@Base>:
   12b10:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12b14:	mov	r5, r0
   12b18:	strd	r6, [sp, #8]
   12b1c:	mov	r6, r1
   12b20:	str	r8, [sp, #16]
   12b24:	str	lr, [sp, #20]
   12b28:	bl	1274c <table_get_column_length@@Base>
   12b2c:	subs	r7, r0, #0
   12b30:	ble	12b7c <table_get_column@@Base+0x6c>
   12b34:	mov	r4, #0
   12b38:	b	12b48 <table_get_column@@Base+0x38>
   12b3c:	add	r4, r4, #1
   12b40:	cmp	r7, r4
   12b44:	beq	12b88 <table_get_column@@Base+0x78>
   12b48:	mov	r1, r4
   12b4c:	mov	r0, r5
   12b50:	bl	12af4 <table_get_column_name@@Base>
   12b54:	mov	r1, r6
   12b58:	bl	11a6c <strcmp@plt>
   12b5c:	cmp	r0, #0
   12b60:	bne	12b3c <table_get_column@@Base+0x2c>
   12b64:	mov	r0, r4
   12b68:	ldrd	r4, [sp]
   12b6c:	ldrd	r6, [sp, #8]
   12b70:	ldr	r8, [sp, #16]
   12b74:	add	sp, sp, #20
   12b78:	pop	{pc}		; (ldr pc, [sp], #4)
   12b7c:	mvneq	r4, #0
   12b80:	movne	r4, #0
   12b84:	b	12b64 <table_get_column@@Base+0x54>
   12b88:	mvn	r4, #0
   12b8c:	b	12b64 <table_get_column@@Base+0x54>

00012b90 <table_get_column_compare_function@@Base>:
   12b90:	str	r4, [sp, #-8]!
   12b94:	str	lr, [sp, #4]
   12b98:	bl	12754 <table_get_col_ptr@@Base>
   12b9c:	ldr	r4, [sp]
   12ba0:	add	sp, sp, #4
   12ba4:	ldr	r0, [r0, #8]
   12ba8:	pop	{pc}		; (ldr pc, [sp], #4)

00012bac <table_set_column_compare_function@@Base>:
   12bac:	str	r4, [sp, #-8]!
   12bb0:	mov	r4, r2
   12bb4:	str	lr, [sp, #4]
   12bb8:	bl	12754 <table_get_col_ptr@@Base>
   12bbc:	str	r4, [r0, #8]
   12bc0:	ldr	r4, [sp]
   12bc4:	add	sp, sp, #4
   12bc8:	pop	{pc}		; (ldr pc, [sp], #4)

00012bcc <table_compare_ptr@@Base>:
   12bcc:	cmp	r0, r1
   12bd0:	bhi	12be0 <table_compare_ptr@@Base+0x14>
   12bd4:	mvncc	r0, #0
   12bd8:	movcs	r0, #0
   12bdc:	bx	lr
   12be0:	mov	r0, #1
   12be4:	bx	lr

00012be8 <table_compare_string@@Base>:
   12be8:	cmp	r0, #0
   12bec:	beq	12bfc <table_compare_string@@Base+0x14>
   12bf0:	cmp	r1, #0
   12bf4:	beq	12c0c <table_compare_string@@Base+0x24>
   12bf8:	b	11a6c <strcmp@plt>
   12bfc:	adds	r0, r1, #0
   12c00:	movne	r0, #1
   12c04:	rsb	r0, r0, #0
   12c08:	bx	lr
   12c0c:	mov	r0, #1
   12c10:	bx	lr

00012c14 <table_compare_bool@@Base>:
   12c14:	cmp	r0, #0
   12c18:	beq	12c48 <table_compare_bool@@Base+0x34>
   12c1c:	cmp	r1, #0
   12c20:	beq	12c40 <table_compare_bool@@Base+0x2c>
   12c24:	ldrb	r2, [r0]
   12c28:	ldrb	r3, [r1]
   12c2c:	cmp	r2, r3
   12c30:	bhi	12c40 <table_compare_bool@@Base+0x2c>
   12c34:	mvncc	r0, #0
   12c38:	movcs	r0, #0
   12c3c:	bx	lr
   12c40:	mov	r0, #1
   12c44:	bx	lr
   12c48:	adds	r1, r1, #0
   12c4c:	movne	r1, #1
   12c50:	rsb	r0, r1, #0
   12c54:	bx	lr

00012c58 <table_compare_int32@@Base>:
   12c58:	cmp	r0, #0
   12c5c:	beq	12c8c <table_compare_int32@@Base+0x34>
   12c60:	cmp	r1, #0
   12c64:	beq	12c84 <table_compare_int32@@Base+0x2c>
   12c68:	ldr	r2, [r0]
   12c6c:	ldr	r3, [r1]
   12c70:	cmp	r2, r3
   12c74:	bgt	12c84 <table_compare_int32@@Base+0x2c>
   12c78:	mvnlt	r0, #0
   12c7c:	movge	r0, #0
   12c80:	bx	lr
   12c84:	mov	r0, #1
   12c88:	bx	lr
   12c8c:	adds	r1, r1, #0
   12c90:	movne	r1, #1
   12c94:	rsb	r0, r1, #0
   12c98:	bx	lr

00012c9c <table_compare_uint32@@Base>:
   12c9c:	cmp	r0, #0
   12ca0:	beq	12cd0 <table_compare_uint32@@Base+0x34>
   12ca4:	cmp	r1, #0
   12ca8:	beq	12cc8 <table_compare_uint32@@Base+0x2c>
   12cac:	ldr	r2, [r0]
   12cb0:	ldr	r3, [r1]
   12cb4:	cmp	r2, r3
   12cb8:	bhi	12cc8 <table_compare_uint32@@Base+0x2c>
   12cbc:	mvncc	r0, #0
   12cc0:	movcs	r0, #0
   12cc4:	bx	lr
   12cc8:	mov	r0, #1
   12ccc:	bx	lr
   12cd0:	adds	r1, r1, #0
   12cd4:	movne	r1, #1
   12cd8:	rsb	r0, r1, #0
   12cdc:	bx	lr

00012ce0 <table_compare_int8@@Base>:
   12ce0:	cmp	r0, #0
   12ce4:	beq	12d14 <table_compare_int8@@Base+0x34>
   12ce8:	cmp	r1, #0
   12cec:	beq	12d0c <table_compare_int8@@Base+0x2c>
   12cf0:	ldrsb	r2, [r0]
   12cf4:	ldrsb	r3, [r1]
   12cf8:	cmp	r2, r3
   12cfc:	bgt	12d0c <table_compare_int8@@Base+0x2c>
   12d00:	mvnlt	r0, #0
   12d04:	movge	r0, #0
   12d08:	bx	lr
   12d0c:	mov	r0, #1
   12d10:	bx	lr
   12d14:	adds	r1, r1, #0
   12d18:	movne	r1, #1
   12d1c:	rsb	r0, r1, #0
   12d20:	bx	lr

00012d24 <table_compare_char@@Base>:
   12d24:	cmp	r0, #0
   12d28:	beq	12d58 <table_compare_char@@Base+0x34>
   12d2c:	cmp	r1, #0
   12d30:	beq	12d50 <table_compare_char@@Base+0x2c>
   12d34:	ldrb	r2, [r0]
   12d38:	ldrb	r3, [r1]
   12d3c:	cmp	r2, r3
   12d40:	bhi	12d50 <table_compare_char@@Base+0x2c>
   12d44:	mvncc	r0, #0
   12d48:	movcs	r0, #0
   12d4c:	bx	lr
   12d50:	mov	r0, #1
   12d54:	bx	lr
   12d58:	adds	r1, r1, #0
   12d5c:	movne	r1, #1
   12d60:	rsb	r0, r1, #0
   12d64:	bx	lr

00012d68 <table_compare_short@@Base>:
   12d68:	cmp	r0, #0
   12d6c:	beq	12d9c <table_compare_short@@Base+0x34>
   12d70:	cmp	r1, #0
   12d74:	beq	12d94 <table_compare_short@@Base+0x2c>
   12d78:	ldrsh	r2, [r0]
   12d7c:	ldrsh	r3, [r1]
   12d80:	cmp	r2, r3
   12d84:	bgt	12d94 <table_compare_short@@Base+0x2c>
   12d88:	mvnlt	r0, #0
   12d8c:	movge	r0, #0
   12d90:	bx	lr
   12d94:	mov	r0, #1
   12d98:	bx	lr
   12d9c:	adds	r1, r1, #0
   12da0:	movne	r1, #1
   12da4:	rsb	r0, r1, #0
   12da8:	bx	lr

00012dac <table_compare_ushort@@Base>:
   12dac:	cmp	r0, #0
   12db0:	beq	12de0 <table_compare_ushort@@Base+0x34>
   12db4:	cmp	r1, #0
   12db8:	beq	12dd8 <table_compare_ushort@@Base+0x2c>
   12dbc:	ldrh	r2, [r0]
   12dc0:	ldrh	r3, [r1]
   12dc4:	cmp	r2, r3
   12dc8:	bhi	12dd8 <table_compare_ushort@@Base+0x2c>
   12dcc:	mvncc	r0, #0
   12dd0:	movcs	r0, #0
   12dd4:	bx	lr
   12dd8:	mov	r0, #1
   12ddc:	bx	lr
   12de0:	adds	r1, r1, #0
   12de4:	movne	r1, #1
   12de8:	rsb	r0, r1, #0
   12dec:	bx	lr

00012df0 <table_compare_llong@@Base>:
   12df0:	cmp	r0, #0
   12df4:	beq	12e38 <table_compare_llong@@Base+0x48>
   12df8:	cmp	r1, #0
   12dfc:	beq	12e48 <table_compare_llong@@Base+0x58>
   12e00:	strd	r4, [sp, #-8]!
   12e04:	ldrd	r2, [r1]
   12e08:	ldrd	r4, [r0]
   12e0c:	cmp	r2, r4
   12e10:	sbcs	r1, r3, r5
   12e14:	movlt	r0, #1
   12e18:	blt	12e2c <table_compare_llong@@Base+0x3c>
   12e1c:	cmp	r4, r2
   12e20:	sbcs	r3, r5, r3
   12e24:	mvnlt	r0, #0
   12e28:	movge	r0, #0
   12e2c:	ldrd	r4, [sp]
   12e30:	add	sp, sp, #8
   12e34:	bx	lr
   12e38:	adds	r1, r1, #0
   12e3c:	movne	r1, #1
   12e40:	rsb	r0, r1, #0
   12e44:	bx	lr
   12e48:	mov	r0, #1
   12e4c:	bx	lr

00012e50 <table_compare_uint64@@Base>:
   12e50:	cmp	r0, #0
   12e54:	beq	12e90 <table_compare_uint64@@Base+0x40>
   12e58:	cmp	r1, #0
   12e5c:	beq	12ea0 <table_compare_uint64@@Base+0x50>
   12e60:	strd	r4, [sp, #-8]!
   12e64:	ldrd	r2, [r1]
   12e68:	ldrd	r4, [r0]
   12e6c:	cmp	r5, r3
   12e70:	cmpeq	r4, r2
   12e74:	movhi	r0, #1
   12e78:	bhi	12e84 <table_compare_uint64@@Base+0x34>
   12e7c:	mvncc	r0, #0
   12e80:	movcs	r0, #0
   12e84:	ldrd	r4, [sp]
   12e88:	add	sp, sp, #8
   12e8c:	bx	lr
   12e90:	adds	r1, r1, #0
   12e94:	movne	r1, #1
   12e98:	rsb	r0, r1, #0
   12e9c:	bx	lr
   12ea0:	mov	r0, #1
   12ea4:	bx	lr

00012ea8 <table_compare_long@@Base>:
   12ea8:	cmp	r0, #0
   12eac:	beq	12edc <table_compare_long@@Base+0x34>
   12eb0:	cmp	r1, #0
   12eb4:	beq	12ed4 <table_compare_long@@Base+0x2c>
   12eb8:	ldr	r2, [r0]
   12ebc:	ldr	r3, [r1]
   12ec0:	cmp	r2, r3
   12ec4:	bgt	12ed4 <table_compare_long@@Base+0x2c>
   12ec8:	mvnlt	r0, #0
   12ecc:	movge	r0, #0
   12ed0:	bx	lr
   12ed4:	mov	r0, #1
   12ed8:	bx	lr
   12edc:	adds	r1, r1, #0
   12ee0:	movne	r1, #1
   12ee4:	rsb	r0, r1, #0
   12ee8:	bx	lr

00012eec <table_compare_ullong@@Base>:
   12eec:	cmp	r0, #0
   12ef0:	beq	12f20 <table_compare_ullong@@Base+0x34>
   12ef4:	cmp	r1, #0
   12ef8:	beq	12f18 <table_compare_ullong@@Base+0x2c>
   12efc:	ldr	r2, [r0]
   12f00:	ldr	r3, [r1]
   12f04:	cmp	r2, r3
   12f08:	bhi	12f18 <table_compare_ullong@@Base+0x2c>
   12f0c:	mvncc	r0, #0
   12f10:	movcs	r0, #0
   12f14:	bx	lr
   12f18:	mov	r0, #1
   12f1c:	bx	lr
   12f20:	adds	r1, r1, #0
   12f24:	movne	r1, #1
   12f28:	rsb	r0, r1, #0
   12f2c:	bx	lr

00012f30 <table_compare_float@@Base>:
   12f30:	cmp	r0, #0
   12f34:	beq	12f68 <table_compare_float@@Base+0x38>
   12f38:	cmp	r1, #0
   12f3c:	beq	12f60 <table_compare_float@@Base+0x30>
   12f40:	vldr	s14, [r0]
   12f44:	vldr	s15, [r1]
   12f48:	vcmpe.f32	s14, s15
   12f4c:	vmrs	APSR_nzcv, fpscr
   12f50:	bgt	12f60 <table_compare_float@@Base+0x30>
   12f54:	mvnmi	r0, #0
   12f58:	movpl	r0, #0
   12f5c:	bx	lr
   12f60:	mov	r0, #1
   12f64:	bx	lr
   12f68:	adds	r1, r1, #0
   12f6c:	movne	r1, #1
   12f70:	rsb	r0, r1, #0
   12f74:	bx	lr

00012f78 <table_compare_double@@Base>:
   12f78:	cmp	r0, #0
   12f7c:	beq	12fb0 <table_compare_double@@Base+0x38>
   12f80:	cmp	r1, #0
   12f84:	beq	12fa8 <table_compare_double@@Base+0x30>
   12f88:	vldr	d6, [r0]
   12f8c:	vldr	d7, [r1]
   12f90:	vcmpe.f64	d6, d7
   12f94:	vmrs	APSR_nzcv, fpscr
   12f98:	bgt	12fa8 <table_compare_double@@Base+0x30>
   12f9c:	mvnmi	r0, #0
   12fa0:	movpl	r0, #0
   12fa4:	bx	lr
   12fa8:	mov	r0, #1
   12fac:	bx	lr
   12fb0:	adds	r1, r1, #0
   12fb4:	movne	r1, #1
   12fb8:	rsb	r0, r1, #0
   12fbc:	bx	lr

00012fc0 <table_compare_ldouble@@Base>:
   12fc0:	cmp	r0, #0
   12fc4:	beq	12ff8 <table_compare_ldouble@@Base+0x38>
   12fc8:	cmp	r1, #0
   12fcc:	beq	12ff0 <table_compare_ldouble@@Base+0x30>
   12fd0:	vldr	d6, [r0]
   12fd4:	vldr	d7, [r1]
   12fd8:	vcmpe.f64	d6, d7
   12fdc:	vmrs	APSR_nzcv, fpscr
   12fe0:	bgt	12ff0 <table_compare_ldouble@@Base+0x30>
   12fe4:	mvnmi	r0, #0
   12fe8:	movpl	r0, #0
   12fec:	bx	lr
   12ff0:	mov	r0, #1
   12ff4:	bx	lr
   12ff8:	adds	r1, r1, #0
   12ffc:	movne	r1, #1
   13000:	rsb	r0, r1, #0
   13004:	bx	lr

00013008 <table_compare_uchar@@Base>:
   13008:	cmp	r0, #0
   1300c:	beq	1303c <table_compare_uchar@@Base+0x34>
   13010:	cmp	r1, #0
   13014:	beq	13034 <table_compare_uchar@@Base+0x2c>
   13018:	ldrb	r2, [r0]
   1301c:	ldrb	r3, [r1]
   13020:	cmp	r2, r3
   13024:	bhi	13034 <table_compare_uchar@@Base+0x2c>
   13028:	mvncc	r0, #0
   1302c:	movcs	r0, #0
   13030:	bx	lr
   13034:	mov	r0, #1
   13038:	bx	lr
   1303c:	adds	r1, r1, #0
   13040:	movne	r1, #1
   13044:	rsb	r0, r1, #0
   13048:	bx	lr

0001304c <table_compare_int@@Base>:
   1304c:	cmp	r0, #0
   13050:	beq	13080 <table_compare_int@@Base+0x34>
   13054:	cmp	r1, #0
   13058:	beq	13078 <table_compare_int@@Base+0x2c>
   1305c:	ldr	r2, [r0]
   13060:	ldr	r3, [r1]
   13064:	cmp	r2, r3
   13068:	bgt	13078 <table_compare_int@@Base+0x2c>
   1306c:	mvnlt	r0, #0
   13070:	movge	r0, #0
   13074:	bx	lr
   13078:	mov	r0, #1
   1307c:	bx	lr
   13080:	adds	r1, r1, #0
   13084:	movne	r1, #1
   13088:	rsb	r0, r1, #0
   1308c:	bx	lr

00013090 <table_compare_uint@@Base>:
   13090:	cmp	r0, #0
   13094:	beq	130c4 <table_compare_uint@@Base+0x34>
   13098:	cmp	r1, #0
   1309c:	beq	130bc <table_compare_uint@@Base+0x2c>
   130a0:	ldr	r2, [r0]
   130a4:	ldr	r3, [r1]
   130a8:	cmp	r2, r3
   130ac:	bhi	130bc <table_compare_uint@@Base+0x2c>
   130b0:	mvncc	r0, #0
   130b4:	movcs	r0, #0
   130b8:	bx	lr
   130bc:	mov	r0, #1
   130c0:	bx	lr
   130c4:	adds	r1, r1, #0
   130c8:	movne	r1, #1
   130cc:	rsb	r0, r1, #0
   130d0:	bx	lr

000130d4 <table_compare_uint8@@Base>:
   130d4:	cmp	r0, #0
   130d8:	beq	13108 <table_compare_uint8@@Base+0x34>
   130dc:	cmp	r1, #0
   130e0:	beq	13100 <table_compare_uint8@@Base+0x2c>
   130e4:	ldrb	r2, [r0]
   130e8:	ldrb	r3, [r1]
   130ec:	cmp	r2, r3
   130f0:	bhi	13100 <table_compare_uint8@@Base+0x2c>
   130f4:	mvncc	r0, #0
   130f8:	movcs	r0, #0
   130fc:	bx	lr
   13100:	mov	r0, #1
   13104:	bx	lr
   13108:	adds	r1, r1, #0
   1310c:	movne	r1, #1
   13110:	rsb	r0, r1, #0
   13114:	bx	lr

00013118 <table_compare_int16@@Base>:
   13118:	cmp	r0, #0
   1311c:	beq	1314c <table_compare_int16@@Base+0x34>
   13120:	cmp	r1, #0
   13124:	beq	13144 <table_compare_int16@@Base+0x2c>
   13128:	ldrsh	r2, [r0]
   1312c:	ldrsh	r3, [r1]
   13130:	cmp	r2, r3
   13134:	bgt	13144 <table_compare_int16@@Base+0x2c>
   13138:	mvnlt	r0, #0
   1313c:	movge	r0, #0
   13140:	bx	lr
   13144:	mov	r0, #1
   13148:	bx	lr
   1314c:	adds	r1, r1, #0
   13150:	movne	r1, #1
   13154:	rsb	r0, r1, #0
   13158:	bx	lr

0001315c <table_compare_uint16@@Base>:
   1315c:	cmp	r0, #0
   13160:	beq	13190 <table_compare_uint16@@Base+0x34>
   13164:	cmp	r1, #0
   13168:	beq	13188 <table_compare_uint16@@Base+0x2c>
   1316c:	ldrh	r2, [r0]
   13170:	ldrh	r3, [r1]
   13174:	cmp	r2, r3
   13178:	bhi	13188 <table_compare_uint16@@Base+0x2c>
   1317c:	mvncc	r0, #0
   13180:	movcs	r0, #0
   13184:	bx	lr
   13188:	mov	r0, #1
   1318c:	bx	lr
   13190:	adds	r1, r1, #0
   13194:	movne	r1, #1
   13198:	rsb	r0, r1, #0
   1319c:	bx	lr

000131a0 <table_compare_ulong@@Base>:
   131a0:	cmp	r0, #0
   131a4:	beq	131d4 <table_compare_ulong@@Base+0x34>
   131a8:	cmp	r1, #0
   131ac:	beq	131cc <table_compare_ulong@@Base+0x2c>
   131b0:	ldr	r2, [r0]
   131b4:	ldr	r3, [r1]
   131b8:	cmp	r2, r3
   131bc:	bhi	131cc <table_compare_ulong@@Base+0x2c>
   131c0:	mvncc	r0, #0
   131c4:	movcs	r0, #0
   131c8:	bx	lr
   131cc:	mov	r0, #1
   131d0:	bx	lr
   131d4:	adds	r1, r1, #0
   131d8:	movne	r1, #1
   131dc:	rsb	r0, r1, #0
   131e0:	bx	lr

000131e4 <table_compare_int64@@Base>:
   131e4:	cmp	r0, #0
   131e8:	beq	1322c <table_compare_int64@@Base+0x48>
   131ec:	cmp	r1, #0
   131f0:	beq	1323c <table_compare_int64@@Base+0x58>
   131f4:	strd	r4, [sp, #-8]!
   131f8:	ldrd	r2, [r1]
   131fc:	ldrd	r4, [r0]
   13200:	cmp	r2, r4
   13204:	sbcs	r1, r3, r5
   13208:	movlt	r0, #1
   1320c:	blt	13220 <table_compare_int64@@Base+0x3c>
   13210:	cmp	r4, r2
   13214:	sbcs	r3, r5, r3
   13218:	mvnlt	r0, #0
   1321c:	movge	r0, #0
   13220:	ldrd	r4, [sp]
   13224:	add	sp, sp, #8
   13228:	bx	lr
   1322c:	adds	r1, r1, #0
   13230:	movne	r1, #1
   13234:	rsb	r0, r1, #0
   13238:	bx	lr
   1323c:	mov	r0, #1
   13240:	bx	lr

00013244 <table_get_default_compare_function_for_data_type@@Base>:
   13244:	ldr	r3, [pc, #404]	; 133e0 <table_get_default_compare_function_for_data_type@@Base+0x19c>
   13248:	add	r3, pc, r3
   1324c:	cmp	r0, #23
   13250:	addls	pc, pc, r0, lsl #2
   13254:	b	133d8 <table_get_default_compare_function_for_data_type@@Base+0x194>
   13258:	b	133cc <table_get_default_compare_function_for_data_type@@Base+0x188>
   1325c:	b	133c0 <table_get_default_compare_function_for_data_type@@Base+0x17c>
   13260:	b	133b4 <table_get_default_compare_function_for_data_type@@Base+0x170>
   13264:	b	133a8 <table_get_default_compare_function_for_data_type@@Base+0x164>
   13268:	b	1339c <table_get_default_compare_function_for_data_type@@Base+0x158>
   1326c:	b	13390 <table_get_default_compare_function_for_data_type@@Base+0x14c>
   13270:	b	13384 <table_get_default_compare_function_for_data_type@@Base+0x140>
   13274:	b	13378 <table_get_default_compare_function_for_data_type@@Base+0x134>
   13278:	b	1336c <table_get_default_compare_function_for_data_type@@Base+0x128>
   1327c:	b	13360 <table_get_default_compare_function_for_data_type@@Base+0x11c>
   13280:	b	13354 <table_get_default_compare_function_for_data_type@@Base+0x110>
   13284:	b	13348 <table_get_default_compare_function_for_data_type@@Base+0x104>
   13288:	b	1333c <table_get_default_compare_function_for_data_type@@Base+0xf8>
   1328c:	b	13330 <table_get_default_compare_function_for_data_type@@Base+0xec>
   13290:	b	13324 <table_get_default_compare_function_for_data_type@@Base+0xe0>
   13294:	b	13318 <table_get_default_compare_function_for_data_type@@Base+0xd4>
   13298:	b	1330c <table_get_default_compare_function_for_data_type@@Base+0xc8>
   1329c:	b	13300 <table_get_default_compare_function_for_data_type@@Base+0xbc>
   132a0:	b	132f4 <table_get_default_compare_function_for_data_type@@Base+0xb0>
   132a4:	b	132e8 <table_get_default_compare_function_for_data_type@@Base+0xa4>
   132a8:	b	132dc <table_get_default_compare_function_for_data_type@@Base+0x98>
   132ac:	b	132d0 <table_get_default_compare_function_for_data_type@@Base+0x8c>
   132b0:	b	132c4 <table_get_default_compare_function_for_data_type@@Base+0x80>
   132b4:	b	132b8 <table_get_default_compare_function_for_data_type@@Base+0x74>
   132b8:	ldr	r2, [pc, #292]	; 133e4 <table_get_default_compare_function_for_data_type@@Base+0x1a0>
   132bc:	ldr	r0, [r3, r2]
   132c0:	bx	lr
   132c4:	ldr	r2, [pc, #284]	; 133e8 <table_get_default_compare_function_for_data_type@@Base+0x1a4>
   132c8:	ldr	r0, [r3, r2]
   132cc:	bx	lr
   132d0:	ldr	r2, [pc, #276]	; 133ec <table_get_default_compare_function_for_data_type@@Base+0x1a8>
   132d4:	ldr	r0, [r3, r2]
   132d8:	bx	lr
   132dc:	ldr	r2, [pc, #268]	; 133f0 <table_get_default_compare_function_for_data_type@@Base+0x1ac>
   132e0:	ldr	r0, [r3, r2]
   132e4:	bx	lr
   132e8:	ldr	r2, [pc, #260]	; 133f4 <table_get_default_compare_function_for_data_type@@Base+0x1b0>
   132ec:	ldr	r0, [r3, r2]
   132f0:	bx	lr
   132f4:	ldr	r2, [pc, #252]	; 133f8 <table_get_default_compare_function_for_data_type@@Base+0x1b4>
   132f8:	ldr	r0, [r3, r2]
   132fc:	bx	lr
   13300:	ldr	r2, [pc, #244]	; 133fc <table_get_default_compare_function_for_data_type@@Base+0x1b8>
   13304:	ldr	r0, [r3, r2]
   13308:	bx	lr
   1330c:	ldr	r2, [pc, #236]	; 13400 <table_get_default_compare_function_for_data_type@@Base+0x1bc>
   13310:	ldr	r0, [r3, r2]
   13314:	bx	lr
   13318:	ldr	r2, [pc, #228]	; 13404 <table_get_default_compare_function_for_data_type@@Base+0x1c0>
   1331c:	ldr	r0, [r3, r2]
   13320:	bx	lr
   13324:	ldr	r2, [pc, #220]	; 13408 <table_get_default_compare_function_for_data_type@@Base+0x1c4>
   13328:	ldr	r0, [r3, r2]
   1332c:	bx	lr
   13330:	ldr	r2, [pc, #212]	; 1340c <table_get_default_compare_function_for_data_type@@Base+0x1c8>
   13334:	ldr	r0, [r3, r2]
   13338:	bx	lr
   1333c:	ldr	r2, [pc, #204]	; 13410 <table_get_default_compare_function_for_data_type@@Base+0x1cc>
   13340:	ldr	r0, [r3, r2]
   13344:	bx	lr
   13348:	ldr	r2, [pc, #196]	; 13414 <table_get_default_compare_function_for_data_type@@Base+0x1d0>
   1334c:	ldr	r0, [r3, r2]
   13350:	bx	lr
   13354:	ldr	r2, [pc, #188]	; 13418 <table_get_default_compare_function_for_data_type@@Base+0x1d4>
   13358:	ldr	r0, [r3, r2]
   1335c:	bx	lr
   13360:	ldr	r2, [pc, #180]	; 1341c <table_get_default_compare_function_for_data_type@@Base+0x1d8>
   13364:	ldr	r0, [r3, r2]
   13368:	bx	lr
   1336c:	ldr	r2, [pc, #172]	; 13420 <table_get_default_compare_function_for_data_type@@Base+0x1dc>
   13370:	ldr	r0, [r3, r2]
   13374:	bx	lr
   13378:	ldr	r2, [pc, #164]	; 13424 <table_get_default_compare_function_for_data_type@@Base+0x1e0>
   1337c:	ldr	r0, [r3, r2]
   13380:	bx	lr
   13384:	ldr	r2, [pc, #156]	; 13428 <table_get_default_compare_function_for_data_type@@Base+0x1e4>
   13388:	ldr	r0, [r3, r2]
   1338c:	bx	lr
   13390:	ldr	r2, [pc, #148]	; 1342c <table_get_default_compare_function_for_data_type@@Base+0x1e8>
   13394:	ldr	r0, [r3, r2]
   13398:	bx	lr
   1339c:	ldr	r2, [pc, #140]	; 13430 <table_get_default_compare_function_for_data_type@@Base+0x1ec>
   133a0:	ldr	r0, [r3, r2]
   133a4:	bx	lr
   133a8:	ldr	r2, [pc, #132]	; 13434 <table_get_default_compare_function_for_data_type@@Base+0x1f0>
   133ac:	ldr	r0, [r3, r2]
   133b0:	bx	lr
   133b4:	ldr	r2, [pc, #124]	; 13438 <table_get_default_compare_function_for_data_type@@Base+0x1f4>
   133b8:	ldr	r0, [r3, r2]
   133bc:	bx	lr
   133c0:	ldr	r2, [pc, #116]	; 1343c <table_get_default_compare_function_for_data_type@@Base+0x1f8>
   133c4:	ldr	r0, [r3, r2]
   133c8:	bx	lr
   133cc:	ldr	r2, [pc, #108]	; 13440 <table_get_default_compare_function_for_data_type@@Base+0x1fc>
   133d0:	ldr	r0, [r3, r2]
   133d4:	bx	lr
   133d8:	mov	r0, #0
   133dc:	bx	lr
   133e0:			; <UNDEFINED> instruction: 0x00011db0
   133e4:	andeq	r0, r0, ip, rrx
   133e8:	andeq	r0, r0, r8, asr #32
   133ec:	muleq	r0, r4, r0
   133f0:	muleq	r0, ip, r0
   133f4:	andeq	r0, r0, ip, asr #32
   133f8:	andeq	r0, r0, r4, asr #32
   133fc:	andeq	r0, r0, r0, asr r0
   13400:	andeq	r0, r0, r4, asr r0
   13404:	andeq	r0, r0, r4, lsl #1
   13408:	andeq	r0, r0, ip, ror r0
   1340c:	andeq	r0, r0, r0, lsl #1
   13410:	andeq	r0, r0, r8, ror r0
   13414:	andeq	r0, r0, r8, asr r0
   13418:	andeq	r0, r0, r0, rrx
   1341c:	andeq	r0, r0, r0, ror r0
   13420:	muleq	r0, r8, r0
   13424:	andeq	r0, r0, ip, lsl #1
   13428:	andeq	r0, r0, r4, ror r0
   1342c:	andeq	r0, r0, ip, asr r0
   13430:	muleq	r0, r0, r0
   13434:	andeq	r0, r0, r8, lsl #1
   13438:	andeq	r0, r0, r0, asr #32
   1343c:	andeq	r0, r0, r0, lsr #1
   13440:	andeq	r0, r0, r8, rrx

00013444 <table_get@@Base>:
   13444:	str	r4, [sp, #-8]!
   13448:	str	lr, [sp, #4]
   1344c:	bl	14ba0 <table_get_cell_ptr@@Base>
   13450:	ldr	r4, [sp]
   13454:	add	sp, sp, #4
   13458:	ldr	r0, [r0]
   1345c:	pop	{pc}		; (ldr pc, [sp], #4)

00013460 <table_get_bool@@Base>:
   13460:	str	r4, [sp, #-8]!
   13464:	str	lr, [sp, #4]
   13468:	bl	13444 <table_get@@Base>
   1346c:	ldr	r4, [sp]
   13470:	add	sp, sp, #4
   13474:	ldrb	r0, [r0]
   13478:	pop	{pc}		; (ldr pc, [sp], #4)

0001347c <table_get_int@@Base>:
   1347c:	str	r4, [sp, #-8]!
   13480:	str	lr, [sp, #4]
   13484:	bl	13444 <table_get@@Base>
   13488:	ldr	r4, [sp]
   1348c:	add	sp, sp, #4
   13490:	ldr	r0, [r0]
   13494:	pop	{pc}		; (ldr pc, [sp], #4)

00013498 <table_get_uint@@Base>:
   13498:	str	r4, [sp, #-8]!
   1349c:	str	lr, [sp, #4]
   134a0:	bl	13444 <table_get@@Base>
   134a4:	ldr	r4, [sp]
   134a8:	add	sp, sp, #4
   134ac:	ldr	r0, [r0]
   134b0:	pop	{pc}		; (ldr pc, [sp], #4)

000134b4 <table_get_int8@@Base>:
   134b4:	str	r4, [sp, #-8]!
   134b8:	str	lr, [sp, #4]
   134bc:	bl	13444 <table_get@@Base>
   134c0:	ldr	r4, [sp]
   134c4:	add	sp, sp, #4
   134c8:	ldrsb	r0, [r0]
   134cc:	pop	{pc}		; (ldr pc, [sp], #4)

000134d0 <table_get_uint8@@Base>:
   134d0:	str	r4, [sp, #-8]!
   134d4:	str	lr, [sp, #4]
   134d8:	bl	13444 <table_get@@Base>
   134dc:	ldr	r4, [sp]
   134e0:	add	sp, sp, #4
   134e4:	ldrb	r0, [r0]
   134e8:	pop	{pc}		; (ldr pc, [sp], #4)

000134ec <table_get_int16@@Base>:
   134ec:	str	r4, [sp, #-8]!
   134f0:	str	lr, [sp, #4]
   134f4:	bl	13444 <table_get@@Base>
   134f8:	ldr	r4, [sp]
   134fc:	add	sp, sp, #4
   13500:	ldrsh	r0, [r0]
   13504:	pop	{pc}		; (ldr pc, [sp], #4)

00013508 <table_get_uint16@@Base>:
   13508:	str	r4, [sp, #-8]!
   1350c:	str	lr, [sp, #4]
   13510:	bl	13444 <table_get@@Base>
   13514:	ldr	r4, [sp]
   13518:	add	sp, sp, #4
   1351c:	ldrh	r0, [r0]
   13520:	pop	{pc}		; (ldr pc, [sp], #4)

00013524 <table_get_int32@@Base>:
   13524:	b	1347c <table_get_int@@Base>

00013528 <table_get_uint32@@Base>:
   13528:	b	13498 <table_get_uint@@Base>

0001352c <table_get_int64@@Base>:
   1352c:	str	r4, [sp, #-8]!
   13530:	str	lr, [sp, #4]
   13534:	bl	13444 <table_get@@Base>
   13538:	ldr	r4, [sp]
   1353c:	add	sp, sp, #4
   13540:	ldrd	r0, [r0]
   13544:	pop	{pc}		; (ldr pc, [sp], #4)

00013548 <table_get_uint64@@Base>:
   13548:	str	r4, [sp, #-8]!
   1354c:	str	lr, [sp, #4]
   13550:	bl	13444 <table_get@@Base>
   13554:	ldr	r4, [sp]
   13558:	add	sp, sp, #4
   1355c:	ldrd	r0, [r0]
   13560:	pop	{pc}		; (ldr pc, [sp], #4)

00013564 <table_get_short@@Base>:
   13564:	b	134ec <table_get_int16@@Base>

00013568 <table_get_ushort@@Base>:
   13568:	b	13508 <table_get_uint16@@Base>

0001356c <table_get_long@@Base>:
   1356c:	str	r4, [sp, #-8]!
   13570:	str	lr, [sp, #4]
   13574:	bl	13444 <table_get@@Base>
   13578:	ldr	r4, [sp]
   1357c:	add	sp, sp, #4
   13580:	ldr	r0, [r0]
   13584:	pop	{pc}		; (ldr pc, [sp], #4)

00013588 <table_get_ulong@@Base>:
   13588:	str	r4, [sp, #-8]!
   1358c:	str	lr, [sp, #4]
   13590:	bl	13444 <table_get@@Base>
   13594:	ldr	r4, [sp]
   13598:	add	sp, sp, #4
   1359c:	ldr	r0, [r0]
   135a0:	pop	{pc}		; (ldr pc, [sp], #4)

000135a4 <table_get_llong@@Base>:
   135a4:	b	1352c <table_get_int64@@Base>

000135a8 <table_get_ullong@@Base>:
   135a8:	b	13548 <table_get_uint64@@Base>

000135ac <table_get_float@@Base>:
   135ac:	str	r4, [sp, #-8]!
   135b0:	str	lr, [sp, #4]
   135b4:	bl	13444 <table_get@@Base>
   135b8:	ldr	r4, [sp]
   135bc:	add	sp, sp, #4
   135c0:	vldr	s0, [r0]
   135c4:	pop	{pc}		; (ldr pc, [sp], #4)

000135c8 <table_get_double@@Base>:
   135c8:	str	r4, [sp, #-8]!
   135cc:	str	lr, [sp, #4]
   135d0:	bl	13444 <table_get@@Base>
   135d4:	ldr	r4, [sp]
   135d8:	add	sp, sp, #4
   135dc:	vldr	d0, [r0]
   135e0:	pop	{pc}		; (ldr pc, [sp], #4)

000135e4 <table_get_ldouble@@Base>:
   135e4:	str	r4, [sp, #-8]!
   135e8:	str	lr, [sp, #4]
   135ec:	bl	13444 <table_get@@Base>
   135f0:	ldr	r4, [sp]
   135f4:	add	sp, sp, #4
   135f8:	vldr	d0, [r0]
   135fc:	pop	{pc}		; (ldr pc, [sp], #4)

00013600 <table_get_char@@Base>:
   13600:	b	134d0 <table_get_uint8@@Base>

00013604 <table_get_uchar@@Base>:
   13604:	b	134d0 <table_get_uint8@@Base>

00013608 <table_get_string@@Base>:
   13608:	b	13444 <table_get@@Base>

0001360c <table_get_ptr@@Base>:
   1360c:	b	13444 <table_get@@Base>

00013610 <table_get_row_length@@Base>:
   13610:	ldr	r0, [r0, #20]
   13614:	bx	lr

00013618 <table_get_row_ptr@@Base>:
   13618:	ldr	r0, [r0, #16]
   1361c:	add	r0, r0, r1, lsl #2
   13620:	bx	lr

00013624 <table_row_init@@Base>:
   13624:	strd	r4, [sp, #-16]!
   13628:	mov	r5, r0
   1362c:	str	r6, [sp, #8]
   13630:	str	lr, [sp, #12]
   13634:	bl	13618 <table_get_row_ptr@@Base>
   13638:	mov	r4, r0
   1363c:	ldr	r0, [r5, #12]
   13640:	lsl	r0, r0, #2
   13644:	bl	11ab4 <malloc@plt>
   13648:	ldr	r6, [sp, #8]
   1364c:	str	r0, [r4]
   13650:	ldrd	r4, [sp]
   13654:	add	sp, sp, #12
   13658:	pop	{pc}		; (ldr pc, [sp], #4)

0001365c <table_add_row@@Base>:
   1365c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13660:	mov	r4, r0
   13664:	strd	r6, [sp, #8]
   13668:	str	r8, [sp, #16]
   1366c:	str	lr, [sp, #20]
   13670:	bl	13610 <table_get_row_length@@Base>
   13674:	ldr	r3, [r4, #24]
   13678:	udiv	r2, r0, r3
   1367c:	mls	r0, r2, r3, r0
   13680:	cmp	r0, #0
   13684:	beq	13710 <table_add_row@@Base+0xb4>
   13688:	mov	r0, r4
   1368c:	bl	13610 <table_get_row_length@@Base>
   13690:	mov	r6, r0
   13694:	mov	r0, r4
   13698:	bl	1274c <table_get_column_length@@Base>
   1369c:	mov	r7, r0
   136a0:	mov	r1, r6
   136a4:	mov	r0, r4
   136a8:	bl	13624 <table_row_init@@Base>
   136ac:	cmp	r7, #0
   136b0:	ble	136d4 <table_add_row@@Base+0x78>
   136b4:	mov	r5, #0
   136b8:	mov	r2, r5
   136bc:	mov	r1, r6
   136c0:	add	r5, r5, #1
   136c4:	mov	r0, r4
   136c8:	bl	14bc4 <table_cell_init@@Base>
   136cc:	cmp	r7, r5
   136d0:	bne	136b8 <table_add_row@@Base+0x5c>
   136d4:	mov	r0, r4
   136d8:	bl	13610 <table_get_row_length@@Base>
   136dc:	mov	r1, r0
   136e0:	mov	r3, #2
   136e4:	mov	r0, r4
   136e8:	mvn	r2, #0
   136ec:	bl	126b8 <table_notify@@Base>
   136f0:	ldr	r0, [r4, #20]
   136f4:	ldrd	r6, [sp, #8]
   136f8:	ldr	r8, [sp, #16]
   136fc:	add	r3, r0, #1
   13700:	str	r3, [r4, #20]
   13704:	ldrd	r4, [sp]
   13708:	add	sp, sp, #20
   1370c:	pop	{pc}		; (ldr pc, [sp], #4)
   13710:	ldr	r0, [r4, #16]
   13714:	ldr	r2, [r4, #28]
   13718:	add	r3, r3, r2
   1371c:	lsl	r1, r3, #2
   13720:	str	r3, [r4, #28]
   13724:	bl	11a90 <realloc@plt>
   13728:	str	r0, [r4, #16]
   1372c:	b	13688 <table_add_row@@Base+0x2c>

00013730 <table_row_destroy@@Base>:
   13730:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13734:	strd	r6, [sp, #8]
   13738:	mov	r7, r1
   1373c:	mov	r6, r0
   13740:	str	r8, [sp, #16]
   13744:	str	lr, [sp, #20]
   13748:	bl	1274c <table_get_column_length@@Base>
   1374c:	mov	r5, r0
   13750:	mov	r1, r7
   13754:	mov	r0, r6
   13758:	bl	13618 <table_get_row_ptr@@Base>
   1375c:	cmp	r5, #0
   13760:	mov	r8, r0
   13764:	ble	13788 <table_row_destroy@@Base+0x58>
   13768:	mov	r4, #0
   1376c:	mov	r2, r4
   13770:	mov	r1, r7
   13774:	add	r4, r4, #1
   13778:	mov	r0, r6
   1377c:	bl	14be4 <table_cell_destroy@@Base>
   13780:	cmp	r5, r4
   13784:	bne	1376c <table_row_destroy@@Base+0x3c>
   13788:	ldr	r0, [r8]
   1378c:	cmp	r0, #0
   13790:	beq	137ac <table_row_destroy@@Base+0x7c>
   13794:	ldrd	r4, [sp]
   13798:	ldrd	r6, [sp, #8]
   1379c:	ldr	r8, [sp, #16]
   137a0:	ldr	lr, [sp, #20]
   137a4:	add	sp, sp, #24
   137a8:	b	11a84 <free@plt>
   137ac:	ldrd	r4, [sp]
   137b0:	ldrd	r6, [sp, #8]
   137b4:	ldr	r8, [sp, #16]
   137b8:	add	sp, sp, #20
   137bc:	pop	{pc}		; (ldr pc, [sp], #4)

000137c0 <table_remove_row@@Base>:
   137c0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   137c4:	mov	r4, r0
   137c8:	mov	r5, r1
   137cc:	strd	r6, [sp, #8]
   137d0:	str	r8, [sp, #16]
   137d4:	str	lr, [sp, #20]
   137d8:	bl	13610 <table_get_row_length@@Base>
   137dc:	mov	r7, r0
   137e0:	mov	r0, r4
   137e4:	bl	1274c <table_get_column_length@@Base>
   137e8:	subs	r8, r0, #0
   137ec:	ble	13834 <table_remove_row@@Base+0x74>
   137f0:	mov	r6, #0
   137f4:	mov	r1, r6
   137f8:	mov	r0, r4
   137fc:	bl	12ad8 <table_get_column_data_type@@Base>
   13800:	cmp	r0, #23
   13804:	mov	r2, r6
   13808:	mov	r1, r5
   1380c:	add	r6, r6, #1
   13810:	mov	r0, r4
   13814:	beq	1382c <table_remove_row@@Base+0x6c>
   13818:	bl	14ba0 <table_get_cell_ptr@@Base>
   1381c:	ldr	r3, [r0]
   13820:	subs	r0, r3, #0
   13824:	beq	1382c <table_remove_row@@Base+0x6c>
   13828:	bl	11a84 <free@plt>
   1382c:	cmp	r8, r6
   13830:	bne	137f4 <table_remove_row@@Base+0x34>
   13834:	mov	r1, r5
   13838:	mov	r0, r4
   1383c:	bl	13618 <table_get_row_ptr@@Base>
   13840:	ldr	r0, [r0]
   13844:	cmp	r0, #0
   13848:	beq	13850 <table_remove_row@@Base+0x90>
   1384c:	bl	11a84 <free@plt>
   13850:	sub	r0, r7, #1
   13854:	cmp	r5, r0
   13858:	bge	13884 <table_remove_row@@Base+0xc4>
   1385c:	lsl	r3, r5, #2
   13860:	mov	r2, r5
   13864:	ldr	r1, [r4, #16]
   13868:	add	r2, r2, #1
   1386c:	cmp	r2, r0
   13870:	add	ip, r1, r3
   13874:	add	r3, r3, #4
   13878:	ldr	r1, [r1, r3]
   1387c:	str	r1, [ip]
   13880:	bne	13864 <table_remove_row@@Base+0xa4>
   13884:	ldr	r3, [r4, #20]
   13888:	mov	r0, r4
   1388c:	sub	r3, r3, #1
   13890:	str	r3, [r4, #20]
   13894:	bl	13610 <table_get_row_length@@Base>
   13898:	ldr	r2, [r4, #24]
   1389c:	udiv	r3, r0, r2
   138a0:	mls	r0, r3, r2, r0
   138a4:	cmp	r0, #0
   138a8:	beq	138d8 <table_remove_row@@Base+0x118>
   138ac:	mov	r0, r4
   138b0:	mov	r1, r5
   138b4:	mov	r3, #4
   138b8:	mvn	r2, #0
   138bc:	bl	126b8 <table_notify@@Base>
   138c0:	ldrd	r4, [sp]
   138c4:	mov	r0, #0
   138c8:	ldrd	r6, [sp, #8]
   138cc:	ldr	r8, [sp, #16]
   138d0:	add	sp, sp, #20
   138d4:	pop	{pc}		; (ldr pc, [sp], #4)
   138d8:	ldr	r0, [r4, #16]
   138dc:	ldr	r3, [r4, #28]
   138e0:	sub	r2, r3, r2
   138e4:	lsl	r1, r2, #2
   138e8:	str	r2, [r4, #28]
   138ec:	bl	11a90 <realloc@plt>
   138f0:	str	r0, [r4, #16]
   138f4:	b	138ac <table_remove_row@@Base+0xec>

000138f8 <table_set_row_ptr@@Base>:
   138f8:	ldr	r2, [r2]
   138fc:	ldr	r3, [r0, #16]
   13900:	str	r2, [r3, r1, lsl #2]
   13904:	bx	lr

00013908 <table_set@@Base>:
   13908:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1390c:	mov	r5, r0
   13910:	ldr	r4, [sp, #32]
   13914:	strd	r6, [sp, #8]
   13918:	mov	r6, r2
   1391c:	mov	r7, r3
   13920:	strd	r8, [sp, #16]
   13924:	mov	r9, r1
   13928:	str	sl, [sp, #24]
   1392c:	str	lr, [sp, #28]
   13930:	bl	14ba0 <table_get_cell_ptr@@Base>
   13934:	mov	r8, r0
   13938:	mov	r1, r6
   1393c:	mov	r0, r5
   13940:	bl	12754 <table_get_col_ptr@@Base>
   13944:	cmp	r4, #23
   13948:	addls	pc, pc, r4, lsl #2
   1394c:	b	139bc <table_set@@Base+0xb4>
   13950:	b	13b74 <table_set@@Base+0x26c>
   13954:	b	13b64 <table_set@@Base+0x25c>
   13958:	b	13b54 <table_set@@Base+0x24c>
   1395c:	b	13b44 <table_set@@Base+0x23c>
   13960:	b	13b34 <table_set@@Base+0x22c>
   13964:	b	13b10 <table_set@@Base+0x208>
   13968:	b	13b00 <table_set@@Base+0x1f8>
   1396c:	b	13af0 <table_set@@Base+0x1e8>
   13970:	b	13bb4 <table_set@@Base+0x2ac>
   13974:	b	13ba4 <table_set@@Base+0x29c>
   13978:	b	13b94 <table_set@@Base+0x28c>
   1397c:	b	13b84 <table_set@@Base+0x27c>
   13980:	b	13bf0 <table_set@@Base+0x2e8>
   13984:	b	13be0 <table_set@@Base+0x2d8>
   13988:	b	139b0 <table_set@@Base+0xa8>
   1398c:	b	13ae0 <table_set@@Base+0x1d8>
   13990:	b	13abc <table_set@@Base+0x1b4>
   13994:	b	13aac <table_set@@Base+0x1a4>
   13998:	b	13a80 <table_set@@Base+0x178>
   1399c:	b	13a70 <table_set@@Base+0x168>
   139a0:	b	13a60 <table_set@@Base+0x158>
   139a4:	b	13a28 <table_set@@Base+0x120>
   139a8:	b	13a04 <table_set@@Base+0xfc>
   139ac:	b	139d8 <table_set@@Base+0xd0>
   139b0:	ldr	r3, [r0, #4]
   139b4:	cmp	r3, #14
   139b8:	beq	13a8c <table_set@@Base+0x184>
   139bc:	mvn	r0, #0
   139c0:	ldrd	r4, [sp]
   139c4:	ldrd	r6, [sp, #8]
   139c8:	ldrd	r8, [sp, #16]
   139cc:	ldr	sl, [sp, #24]
   139d0:	add	sp, sp, #28
   139d4:	pop	{pc}		; (ldr pc, [sp], #4)
   139d8:	ldr	r3, [r0, #4]
   139dc:	cmp	r3, #23
   139e0:	bne	139bc <table_set@@Base+0xb4>
   139e4:	str	r7, [r8]
   139e8:	mov	r0, r5
   139ec:	mov	r2, r6
   139f0:	mov	r1, r9
   139f4:	mov	r3, #1
   139f8:	bl	126b8 <table_notify@@Base>
   139fc:	mov	r0, #0
   13a00:	b	139c0 <table_set@@Base+0xb8>
   13a04:	ldr	r3, [r0, #4]
   13a08:	cmp	r3, #22
   13a0c:	bne	139bc <table_set@@Base+0xb4>
   13a10:	ldr	r0, [r8]
   13a14:	cmp	r0, #0
   13a18:	beq	13c30 <table_set@@Base+0x328>
   13a1c:	ldrb	r3, [r7]
   13a20:	strb	r3, [r0]
   13a24:	b	139e8 <table_set@@Base+0xe0>
   13a28:	ldr	r3, [r0, #4]
   13a2c:	cmp	r3, #21
   13a30:	bne	139bc <table_set@@Base+0xb4>
   13a34:	mov	r0, r7
   13a38:	bl	11ad8 <strlen@plt>
   13a3c:	add	r1, r0, #1
   13a40:	ldr	r0, [r8]
   13a44:	bl	11a90 <realloc@plt>
   13a48:	cmp	r0, #0
   13a4c:	str	r0, [r8]
   13a50:	beq	139bc <table_set@@Base+0xb4>
   13a54:	mov	r1, r7
   13a58:	bl	11a9c <strcpy@plt>
   13a5c:	b	139e8 <table_set@@Base+0xe0>
   13a60:	ldr	r3, [r0, #4]
   13a64:	cmp	r3, #20
   13a68:	bne	139bc <table_set@@Base+0xb4>
   13a6c:	b	13a10 <table_set@@Base+0x108>
   13a70:	ldr	r3, [r0, #4]
   13a74:	cmp	r3, #19
   13a78:	bne	139bc <table_set@@Base+0xb4>
   13a7c:	b	13a10 <table_set@@Base+0x108>
   13a80:	ldr	r3, [r0, #4]
   13a84:	cmp	r3, #18
   13a88:	bne	139bc <table_set@@Base+0xb4>
   13a8c:	ldr	r0, [r8]
   13a90:	cmp	r0, #0
   13a94:	beq	13c48 <table_set@@Base+0x340>
   13a98:	ldr	r2, [r7]
   13a9c:	ldr	r3, [r7, #4]
   13aa0:	str	r2, [r0]
   13aa4:	str	r3, [r0, #4]
   13aa8:	b	139e8 <table_set@@Base+0xe0>
   13aac:	ldr	r3, [r0, #4]
   13ab0:	cmp	r3, #17
   13ab4:	bne	139bc <table_set@@Base+0xb4>
   13ab8:	b	13a8c <table_set@@Base+0x184>
   13abc:	ldr	r3, [r0, #4]
   13ac0:	cmp	r3, #16
   13ac4:	bne	139bc <table_set@@Base+0xb4>
   13ac8:	ldr	r0, [r8]
   13acc:	cmp	r0, #0
   13ad0:	beq	13c00 <table_set@@Base+0x2f8>
   13ad4:	ldr	r3, [r7]
   13ad8:	str	r3, [r0]
   13adc:	b	139e8 <table_set@@Base+0xe0>
   13ae0:	ldr	r3, [r0, #4]
   13ae4:	cmp	r3, #15
   13ae8:	bne	139bc <table_set@@Base+0xb4>
   13aec:	b	13a8c <table_set@@Base+0x184>
   13af0:	ldr	r3, [r0, #4]
   13af4:	cmp	r3, #7
   13af8:	beq	13ac8 <table_set@@Base+0x1c0>
   13afc:	b	139bc <table_set@@Base+0xb4>
   13b00:	ldr	r3, [r0, #4]
   13b04:	cmp	r3, #6
   13b08:	beq	13ac8 <table_set@@Base+0x1c0>
   13b0c:	b	139bc <table_set@@Base+0xb4>
   13b10:	ldr	r3, [r0, #4]
   13b14:	cmp	r3, #5
   13b18:	bne	139bc <table_set@@Base+0xb4>
   13b1c:	ldr	r0, [r8]
   13b20:	cmp	r0, #0
   13b24:	beq	13c18 <table_set@@Base+0x310>
   13b28:	ldrh	r3, [r7]
   13b2c:	strh	r3, [r0]
   13b30:	b	139e8 <table_set@@Base+0xe0>
   13b34:	ldr	r3, [r0, #4]
   13b38:	cmp	r3, #4
   13b3c:	beq	13b1c <table_set@@Base+0x214>
   13b40:	b	139bc <table_set@@Base+0xb4>
   13b44:	ldr	r3, [r0, #4]
   13b48:	cmp	r3, #3
   13b4c:	beq	13a10 <table_set@@Base+0x108>
   13b50:	b	139bc <table_set@@Base+0xb4>
   13b54:	ldr	r3, [r0, #4]
   13b58:	cmp	r3, #2
   13b5c:	beq	13a10 <table_set@@Base+0x108>
   13b60:	b	139bc <table_set@@Base+0xb4>
   13b64:	ldr	r3, [r0, #4]
   13b68:	cmp	r3, #1
   13b6c:	beq	13ac8 <table_set@@Base+0x1c0>
   13b70:	b	139bc <table_set@@Base+0xb4>
   13b74:	ldr	r3, [r0, #4]
   13b78:	cmp	r3, #0
   13b7c:	beq	13ac8 <table_set@@Base+0x1c0>
   13b80:	b	139bc <table_set@@Base+0xb4>
   13b84:	ldr	r3, [r0, #4]
   13b88:	cmp	r3, #11
   13b8c:	beq	13b1c <table_set@@Base+0x214>
   13b90:	b	139bc <table_set@@Base+0xb4>
   13b94:	ldr	r3, [r0, #4]
   13b98:	cmp	r3, #10
   13b9c:	beq	13b1c <table_set@@Base+0x214>
   13ba0:	b	139bc <table_set@@Base+0xb4>
   13ba4:	ldr	r3, [r0, #4]
   13ba8:	cmp	r3, #9
   13bac:	beq	13a8c <table_set@@Base+0x184>
   13bb0:	b	139bc <table_set@@Base+0xb4>
   13bb4:	ldr	r0, [r0, #4]
   13bb8:	cmp	r0, #8
   13bbc:	bne	139bc <table_set@@Base+0xb4>
   13bc0:	ldr	r3, [r8]
   13bc4:	cmp	r3, #0
   13bc8:	beq	13c60 <table_set@@Base+0x358>
   13bcc:	ldr	r1, [r7]
   13bd0:	ldr	r2, [r7, #4]
   13bd4:	str	r1, [r3]
   13bd8:	str	r2, [r3, #4]
   13bdc:	b	139e8 <table_set@@Base+0xe0>
   13be0:	ldr	r3, [r0, #4]
   13be4:	cmp	r3, #13
   13be8:	bne	139bc <table_set@@Base+0xb4>
   13bec:	b	13ac8 <table_set@@Base+0x1c0>
   13bf0:	ldr	r3, [r0, #4]
   13bf4:	cmp	r3, #12
   13bf8:	bne	139bc <table_set@@Base+0xb4>
   13bfc:	b	13ac8 <table_set@@Base+0x1c0>
   13c00:	mov	r0, #4
   13c04:	bl	11ab4 <malloc@plt>
   13c08:	cmp	r0, #0
   13c0c:	str	r0, [r8]
   13c10:	bne	13ad4 <table_set@@Base+0x1cc>
   13c14:	b	139bc <table_set@@Base+0xb4>
   13c18:	mov	r0, #2
   13c1c:	bl	11ab4 <malloc@plt>
   13c20:	cmp	r0, #0
   13c24:	str	r0, [r8]
   13c28:	bne	13b28 <table_set@@Base+0x220>
   13c2c:	b	139bc <table_set@@Base+0xb4>
   13c30:	mov	r0, #1
   13c34:	bl	11ab4 <malloc@plt>
   13c38:	cmp	r0, #0
   13c3c:	str	r0, [r8]
   13c40:	bne	13a1c <table_set@@Base+0x114>
   13c44:	b	139bc <table_set@@Base+0xb4>
   13c48:	mov	r0, #8
   13c4c:	bl	11ab4 <malloc@plt>
   13c50:	cmp	r0, #0
   13c54:	str	r0, [r8]
   13c58:	bne	13a98 <table_set@@Base+0x190>
   13c5c:	b	139bc <table_set@@Base+0xb4>
   13c60:	bl	11ab4 <malloc@plt>
   13c64:	cmp	r0, #0
   13c68:	mov	r3, r0
   13c6c:	str	r0, [r8]
   13c70:	bne	13bcc <table_set@@Base+0x2c4>
   13c74:	b	139bc <table_set@@Base+0xb4>

00013c78 <table_set_bool@@Base>:
   13c78:	mov	ip, #22
   13c7c:	push	{lr}		; (str lr, [sp, #-4]!)
   13c80:	sub	sp, sp, #20
   13c84:	str	ip, [sp]
   13c88:	strb	r3, [sp, #15]
   13c8c:	add	r3, sp, #15
   13c90:	bl	13908 <table_set@@Base>
   13c94:	add	sp, sp, #20
   13c98:	pop	{pc}		; (ldr pc, [sp], #4)

00013c9c <table_set_int@@Base>:
   13c9c:	mov	ip, #0
   13ca0:	push	{lr}		; (str lr, [sp, #-4]!)
   13ca4:	sub	sp, sp, #20
   13ca8:	str	ip, [sp]
   13cac:	str	r3, [sp, #12]
   13cb0:	add	r3, sp, #12
   13cb4:	bl	13908 <table_set@@Base>
   13cb8:	add	sp, sp, #20
   13cbc:	pop	{pc}		; (ldr pc, [sp], #4)

00013cc0 <table_set_uint@@Base>:
   13cc0:	mov	ip, #1
   13cc4:	push	{lr}		; (str lr, [sp, #-4]!)
   13cc8:	sub	sp, sp, #20
   13ccc:	str	ip, [sp]
   13cd0:	str	r3, [sp, #12]
   13cd4:	add	r3, sp, #12
   13cd8:	bl	13908 <table_set@@Base>
   13cdc:	add	sp, sp, #20
   13ce0:	pop	{pc}		; (ldr pc, [sp], #4)

00013ce4 <table_set_int8@@Base>:
   13ce4:	mov	ip, #2
   13ce8:	push	{lr}		; (str lr, [sp, #-4]!)
   13cec:	sub	sp, sp, #20
   13cf0:	str	ip, [sp]
   13cf4:	strb	r3, [sp, #15]
   13cf8:	add	r3, sp, #15
   13cfc:	bl	13908 <table_set@@Base>
   13d00:	add	sp, sp, #20
   13d04:	pop	{pc}		; (ldr pc, [sp], #4)

00013d08 <table_set_uint8@@Base>:
   13d08:	mov	ip, #3
   13d0c:	push	{lr}		; (str lr, [sp, #-4]!)
   13d10:	sub	sp, sp, #20
   13d14:	str	ip, [sp]
   13d18:	strb	r3, [sp, #15]
   13d1c:	add	r3, sp, #15
   13d20:	bl	13908 <table_set@@Base>
   13d24:	add	sp, sp, #20
   13d28:	pop	{pc}		; (ldr pc, [sp], #4)

00013d2c <table_set_int16@@Base>:
   13d2c:	mov	ip, #4
   13d30:	push	{lr}		; (str lr, [sp, #-4]!)
   13d34:	sub	sp, sp, #20
   13d38:	str	ip, [sp]
   13d3c:	strh	r3, [sp, #14]
   13d40:	add	r3, sp, #14
   13d44:	bl	13908 <table_set@@Base>
   13d48:	add	sp, sp, #20
   13d4c:	pop	{pc}		; (ldr pc, [sp], #4)

00013d50 <table_set_uint16@@Base>:
   13d50:	mov	ip, #5
   13d54:	push	{lr}		; (str lr, [sp, #-4]!)
   13d58:	sub	sp, sp, #20
   13d5c:	str	ip, [sp]
   13d60:	strh	r3, [sp, #14]
   13d64:	add	r3, sp, #14
   13d68:	bl	13908 <table_set@@Base>
   13d6c:	add	sp, sp, #20
   13d70:	pop	{pc}		; (ldr pc, [sp], #4)

00013d74 <table_set_int32@@Base>:
   13d74:	mov	ip, #6
   13d78:	push	{lr}		; (str lr, [sp, #-4]!)
   13d7c:	sub	sp, sp, #20
   13d80:	str	ip, [sp]
   13d84:	str	r3, [sp, #12]
   13d88:	add	r3, sp, #12
   13d8c:	bl	13908 <table_set@@Base>
   13d90:	add	sp, sp, #20
   13d94:	pop	{pc}		; (ldr pc, [sp], #4)

00013d98 <table_set_uint32@@Base>:
   13d98:	mov	ip, #7
   13d9c:	push	{lr}		; (str lr, [sp, #-4]!)
   13da0:	sub	sp, sp, #20
   13da4:	str	ip, [sp]
   13da8:	str	r3, [sp, #12]
   13dac:	add	r3, sp, #12
   13db0:	bl	13908 <table_set@@Base>
   13db4:	add	sp, sp, #20
   13db8:	pop	{pc}		; (ldr pc, [sp], #4)

00013dbc <table_set_int64@@Base>:
   13dbc:	mov	ip, #8
   13dc0:	push	{lr}		; (str lr, [sp, #-4]!)
   13dc4:	sub	sp, sp, #12
   13dc8:	add	r3, sp, #16
   13dcc:	str	ip, [sp]
   13dd0:	bl	13908 <table_set@@Base>
   13dd4:	add	sp, sp, #12
   13dd8:	pop	{pc}		; (ldr pc, [sp], #4)

00013ddc <table_set_uint64@@Base>:
   13ddc:	mov	ip, #9
   13de0:	push	{lr}		; (str lr, [sp, #-4]!)
   13de4:	sub	sp, sp, #12
   13de8:	add	r3, sp, #16
   13dec:	str	ip, [sp]
   13df0:	bl	13908 <table_set@@Base>
   13df4:	add	sp, sp, #12
   13df8:	pop	{pc}		; (ldr pc, [sp], #4)

00013dfc <table_set_short@@Base>:
   13dfc:	mov	ip, #10
   13e00:	push	{lr}		; (str lr, [sp, #-4]!)
   13e04:	sub	sp, sp, #20
   13e08:	str	ip, [sp]
   13e0c:	strh	r3, [sp, #14]
   13e10:	add	r3, sp, #14
   13e14:	bl	13908 <table_set@@Base>
   13e18:	add	sp, sp, #20
   13e1c:	pop	{pc}		; (ldr pc, [sp], #4)

00013e20 <table_set_ushort@@Base>:
   13e20:	mov	ip, #11
   13e24:	push	{lr}		; (str lr, [sp, #-4]!)
   13e28:	sub	sp, sp, #20
   13e2c:	str	ip, [sp]
   13e30:	strh	r3, [sp, #14]
   13e34:	add	r3, sp, #14
   13e38:	bl	13908 <table_set@@Base>
   13e3c:	add	sp, sp, #20
   13e40:	pop	{pc}		; (ldr pc, [sp], #4)

00013e44 <table_set_long@@Base>:
   13e44:	mov	ip, #12
   13e48:	push	{lr}		; (str lr, [sp, #-4]!)
   13e4c:	sub	sp, sp, #20
   13e50:	str	ip, [sp]
   13e54:	str	r3, [sp, #12]
   13e58:	add	r3, sp, ip
   13e5c:	bl	13908 <table_set@@Base>
   13e60:	add	sp, sp, #20
   13e64:	pop	{pc}		; (ldr pc, [sp], #4)

00013e68 <table_set_ulong@@Base>:
   13e68:	mov	ip, #13
   13e6c:	push	{lr}		; (str lr, [sp, #-4]!)
   13e70:	sub	sp, sp, #20
   13e74:	str	ip, [sp]
   13e78:	str	r3, [sp, #12]
   13e7c:	add	r3, sp, #12
   13e80:	bl	13908 <table_set@@Base>
   13e84:	add	sp, sp, #20
   13e88:	pop	{pc}		; (ldr pc, [sp], #4)

00013e8c <table_set_llong@@Base>:
   13e8c:	mov	ip, #14
   13e90:	push	{lr}		; (str lr, [sp, #-4]!)
   13e94:	sub	sp, sp, #12
   13e98:	add	r3, sp, #16
   13e9c:	str	ip, [sp]
   13ea0:	bl	13908 <table_set@@Base>
   13ea4:	add	sp, sp, #12
   13ea8:	pop	{pc}		; (ldr pc, [sp], #4)

00013eac <table_set_ullong@@Base>:
   13eac:	mov	ip, #15
   13eb0:	push	{lr}		; (str lr, [sp, #-4]!)
   13eb4:	sub	sp, sp, #12
   13eb8:	add	r3, sp, #16
   13ebc:	str	ip, [sp]
   13ec0:	bl	13908 <table_set@@Base>
   13ec4:	add	sp, sp, #12
   13ec8:	pop	{pc}		; (ldr pc, [sp], #4)

00013ecc <table_set_float@@Base>:
   13ecc:	mov	ip, #16
   13ed0:	push	{lr}		; (str lr, [sp, #-4]!)
   13ed4:	sub	sp, sp, #20
   13ed8:	add	r3, sp, #12
   13edc:	str	ip, [sp]
   13ee0:	vstr	s0, [sp, #12]
   13ee4:	bl	13908 <table_set@@Base>
   13ee8:	add	sp, sp, #20
   13eec:	pop	{pc}		; (ldr pc, [sp], #4)

00013ef0 <table_set_double@@Base>:
   13ef0:	mov	ip, #17
   13ef4:	push	{lr}		; (str lr, [sp, #-4]!)
   13ef8:	sub	sp, sp, #20
   13efc:	add	r3, sp, #8
   13f00:	str	ip, [sp]
   13f04:	vstr	d0, [sp, #8]
   13f08:	bl	13908 <table_set@@Base>
   13f0c:	add	sp, sp, #20
   13f10:	pop	{pc}		; (ldr pc, [sp], #4)

00013f14 <table_set_ldouble@@Base>:
   13f14:	mov	ip, #18
   13f18:	push	{lr}		; (str lr, [sp, #-4]!)
   13f1c:	sub	sp, sp, #20
   13f20:	add	r3, sp, #8
   13f24:	str	ip, [sp]
   13f28:	vstr	d0, [sp, #8]
   13f2c:	bl	13908 <table_set@@Base>
   13f30:	add	sp, sp, #20
   13f34:	pop	{pc}		; (ldr pc, [sp], #4)

00013f38 <table_set_string@@Base>:
   13f38:	mov	ip, #21
   13f3c:	push	{lr}		; (str lr, [sp, #-4]!)
   13f40:	sub	sp, sp, #12
   13f44:	str	ip, [sp]
   13f48:	bl	13908 <table_set@@Base>
   13f4c:	add	sp, sp, #12
   13f50:	pop	{pc}		; (ldr pc, [sp], #4)

00013f54 <table_set_char@@Base>:
   13f54:	mov	ip, #19
   13f58:	push	{lr}		; (str lr, [sp, #-4]!)
   13f5c:	sub	sp, sp, #20
   13f60:	str	ip, [sp]
   13f64:	strb	r3, [sp, #15]
   13f68:	add	r3, sp, #15
   13f6c:	bl	13908 <table_set@@Base>
   13f70:	add	sp, sp, #20
   13f74:	pop	{pc}		; (ldr pc, [sp], #4)

00013f78 <table_set_uchar@@Base>:
   13f78:	mov	ip, #20
   13f7c:	push	{lr}		; (str lr, [sp, #-4]!)
   13f80:	sub	sp, sp, #20
   13f84:	str	ip, [sp]
   13f88:	strb	r3, [sp, #15]
   13f8c:	add	r3, sp, #15
   13f90:	bl	13908 <table_set@@Base>
   13f94:	add	sp, sp, #20
   13f98:	pop	{pc}		; (ldr pc, [sp], #4)

00013f9c <table_set_ptr@@Base>:
   13f9c:	mov	ip, #23
   13fa0:	push	{lr}		; (str lr, [sp, #-4]!)
   13fa4:	sub	sp, sp, #12
   13fa8:	str	ip, [sp]
   13fac:	bl	13908 <table_set@@Base>
   13fb0:	add	sp, sp, #12
   13fb4:	pop	{pc}		; (ldr pc, [sp], #4)

00013fb8 <table_cell_to_buffer@@Base>:
   13fb8:	strd	r4, [sp, #-20]!	; 0xffffffec
   13fbc:	mov	r4, r2
   13fc0:	mov	r5, r3
   13fc4:	strd	r6, [sp, #8]
   13fc8:	mov	r7, r1
   13fcc:	mov	r1, r2
   13fd0:	str	lr, [sp, #16]
   13fd4:	sub	sp, sp, #12
   13fd8:	mov	r6, r0
   13fdc:	bl	12ad8 <table_get_column_data_type@@Base>
   13fe0:	cmp	r0, #23
   13fe4:	addls	pc, pc, r0, lsl #2
   13fe8:	b	14074 <table_cell_to_buffer@@Base+0xbc>
   13fec:	b	14458 <table_cell_to_buffer@@Base+0x4a0>
   13ff0:	b	1442c <table_cell_to_buffer@@Base+0x474>
   13ff4:	b	14400 <table_cell_to_buffer@@Base+0x448>
   13ff8:	b	143d4 <table_cell_to_buffer@@Base+0x41c>
   13ffc:	b	143a8 <table_cell_to_buffer@@Base+0x3f0>
   14000:	b	1437c <table_cell_to_buffer@@Base+0x3c4>
   14004:	b	14350 <table_cell_to_buffer@@Base+0x398>
   14008:	b	14324 <table_cell_to_buffer@@Base+0x36c>
   1400c:	b	142f8 <table_cell_to_buffer@@Base+0x340>
   14010:	b	142cc <table_cell_to_buffer@@Base+0x314>
   14014:	b	142a0 <table_cell_to_buffer@@Base+0x2e8>
   14018:	b	14274 <table_cell_to_buffer@@Base+0x2bc>
   1401c:	b	14248 <table_cell_to_buffer@@Base+0x290>
   14020:	b	1421c <table_cell_to_buffer@@Base+0x264>
   14024:	b	141f0 <table_cell_to_buffer@@Base+0x238>
   14028:	b	141c4 <table_cell_to_buffer@@Base+0x20c>
   1402c:	b	14194 <table_cell_to_buffer@@Base+0x1dc>
   14030:	b	14168 <table_cell_to_buffer@@Base+0x1b0>
   14034:	b	1413c <table_cell_to_buffer@@Base+0x184>
   14038:	b	14110 <table_cell_to_buffer@@Base+0x158>
   1403c:	b	140e4 <table_cell_to_buffer@@Base+0x12c>
   14040:	b	140b8 <table_cell_to_buffer@@Base+0x100>
   14044:	b	1408c <table_cell_to_buffer@@Base+0xd4>
   14048:	b	1404c <table_cell_to_buffer@@Base+0x94>
   1404c:	mov	r2, r4
   14050:	mov	r1, r7
   14054:	mov	r0, r6
   14058:	bl	1360c <table_get_ptr@@Base>
   1405c:	ldr	r2, [pc, #1056]	; 14484 <table_cell_to_buffer@@Base+0x4cc>
   14060:	mov	r3, r0
   14064:	mov	r0, r5
   14068:	ldr	r1, [sp, #32]
   1406c:	add	r2, pc, r2
   14070:	bl	11ae4 <snprintf@plt>
   14074:	mov	r0, #0
   14078:	add	sp, sp, #12
   1407c:	ldrd	r4, [sp]
   14080:	ldrd	r6, [sp, #8]
   14084:	add	sp, sp, #16
   14088:	pop	{pc}		; (ldr pc, [sp], #4)
   1408c:	mov	r2, r4
   14090:	mov	r1, r7
   14094:	mov	r0, r6
   14098:	bl	13460 <table_get_bool@@Base>
   1409c:	ldr	r2, [pc, #996]	; 14488 <table_cell_to_buffer@@Base+0x4d0>
   140a0:	mov	r3, r0
   140a4:	mov	r0, r5
   140a8:	ldr	r1, [sp, #32]
   140ac:	add	r2, pc, r2
   140b0:	bl	11ae4 <snprintf@plt>
   140b4:	b	14074 <table_cell_to_buffer@@Base+0xbc>
   140b8:	mov	r2, r4
   140bc:	mov	r1, r7
   140c0:	mov	r0, r6
   140c4:	bl	13608 <table_get_string@@Base>
   140c8:	ldr	r2, [pc, #956]	; 1448c <table_cell_to_buffer@@Base+0x4d4>
   140cc:	mov	r3, r0
   140d0:	mov	r0, r5
   140d4:	ldr	r1, [sp, #32]
   140d8:	add	r2, pc, r2
   140dc:	bl	11ae4 <snprintf@plt>
   140e0:	b	14074 <table_cell_to_buffer@@Base+0xbc>
   140e4:	mov	r2, r4
   140e8:	mov	r1, r7
   140ec:	mov	r0, r6
   140f0:	bl	13604 <table_get_uchar@@Base>
   140f4:	ldr	r2, [pc, #916]	; 14490 <table_cell_to_buffer@@Base+0x4d8>
   140f8:	mov	r3, r0
   140fc:	mov	r0, r5
   14100:	ldr	r1, [sp, #32]
   14104:	add	r2, pc, r2
   14108:	bl	11ae4 <snprintf@plt>
   1410c:	b	14074 <table_cell_to_buffer@@Base+0xbc>
   14110:	mov	r2, r4
   14114:	mov	r1, r7
   14118:	mov	r0, r6
   1411c:	bl	13600 <table_get_char@@Base>
   14120:	ldr	r2, [pc, #876]	; 14494 <table_cell_to_buffer@@Base+0x4dc>
   14124:	mov	r3, r0
   14128:	mov	r0, r5
   1412c:	ldr	r1, [sp, #32]
   14130:	add	r2, pc, r2
   14134:	bl	11ae4 <snprintf@plt>
   14138:	b	14074 <table_cell_to_buffer@@Base+0xbc>
   1413c:	mov	r2, r4
   14140:	mov	r1, r7
   14144:	mov	r0, r6
   14148:	bl	135e4 <table_get_ldouble@@Base>
   1414c:	ldr	r2, [pc, #836]	; 14498 <table_cell_to_buffer@@Base+0x4e0>
   14150:	mov	r0, r5
   14154:	vstr	d0, [sp]
   14158:	ldr	r1, [sp, #32]
   1415c:	add	r2, pc, r2
   14160:	bl	11ae4 <snprintf@plt>
   14164:	b	14074 <table_cell_to_buffer@@Base+0xbc>
   14168:	mov	r2, r4
   1416c:	mov	r1, r7
   14170:	mov	r0, r6
   14174:	bl	135c8 <table_get_double@@Base>
   14178:	ldr	r2, [pc, #796]	; 1449c <table_cell_to_buffer@@Base+0x4e4>
   1417c:	mov	r0, r5
   14180:	vstr	d0, [sp]
   14184:	ldr	r1, [sp, #32]
   14188:	add	r2, pc, r2
   1418c:	bl	11ae4 <snprintf@plt>
   14190:	b	14074 <table_cell_to_buffer@@Base+0xbc>
   14194:	mov	r2, r4
   14198:	mov	r1, r7
   1419c:	mov	r0, r6
   141a0:	bl	135ac <table_get_float@@Base>
   141a4:	vcvt.f64.f32	d0, s0
   141a8:	ldr	r2, [pc, #752]	; 144a0 <table_cell_to_buffer@@Base+0x4e8>
   141ac:	mov	r0, r5
   141b0:	ldr	r1, [sp, #32]
   141b4:	add	r2, pc, r2
   141b8:	vstr	d0, [sp]
   141bc:	bl	11ae4 <snprintf@plt>
   141c0:	b	14074 <table_cell_to_buffer@@Base+0xbc>
   141c4:	mov	r2, r4
   141c8:	mov	r1, r7
   141cc:	mov	r0, r6
   141d0:	bl	135a8 <table_get_ullong@@Base>
   141d4:	ldr	r2, [pc, #712]	; 144a4 <table_cell_to_buffer@@Base+0x4ec>
   141d8:	strd	r0, [sp]
   141dc:	mov	r0, r5
   141e0:	ldr	r1, [sp, #32]
   141e4:	add	r2, pc, r2
   141e8:	bl	11ae4 <snprintf@plt>
   141ec:	b	14074 <table_cell_to_buffer@@Base+0xbc>
   141f0:	mov	r2, r4
   141f4:	mov	r1, r7
   141f8:	mov	r0, r6
   141fc:	bl	135a4 <table_get_llong@@Base>
   14200:	ldr	r2, [pc, #672]	; 144a8 <table_cell_to_buffer@@Base+0x4f0>
   14204:	strd	r0, [sp]
   14208:	mov	r0, r5
   1420c:	ldr	r1, [sp, #32]
   14210:	add	r2, pc, r2
   14214:	bl	11ae4 <snprintf@plt>
   14218:	b	14074 <table_cell_to_buffer@@Base+0xbc>
   1421c:	mov	r2, r4
   14220:	mov	r1, r7
   14224:	mov	r0, r6
   14228:	bl	13588 <table_get_ulong@@Base>
   1422c:	ldr	r2, [pc, #632]	; 144ac <table_cell_to_buffer@@Base+0x4f4>
   14230:	mov	r3, r0
   14234:	mov	r0, r5
   14238:	ldr	r1, [sp, #32]
   1423c:	add	r2, pc, r2
   14240:	bl	11ae4 <snprintf@plt>
   14244:	b	14074 <table_cell_to_buffer@@Base+0xbc>
   14248:	mov	r2, r4
   1424c:	mov	r1, r7
   14250:	mov	r0, r6
   14254:	bl	1356c <table_get_long@@Base>
   14258:	ldr	r2, [pc, #592]	; 144b0 <table_cell_to_buffer@@Base+0x4f8>
   1425c:	mov	r3, r0
   14260:	mov	r0, r5
   14264:	ldr	r1, [sp, #32]
   14268:	add	r2, pc, r2
   1426c:	bl	11ae4 <snprintf@plt>
   14270:	b	14074 <table_cell_to_buffer@@Base+0xbc>
   14274:	mov	r2, r4
   14278:	mov	r1, r7
   1427c:	mov	r0, r6
   14280:	bl	13568 <table_get_ushort@@Base>
   14284:	ldr	r2, [pc, #552]	; 144b4 <table_cell_to_buffer@@Base+0x4fc>
   14288:	mov	r3, r0
   1428c:	mov	r0, r5
   14290:	ldr	r1, [sp, #32]
   14294:	add	r2, pc, r2
   14298:	bl	11ae4 <snprintf@plt>
   1429c:	b	14074 <table_cell_to_buffer@@Base+0xbc>
   142a0:	mov	r2, r4
   142a4:	mov	r1, r7
   142a8:	mov	r0, r6
   142ac:	bl	13564 <table_get_short@@Base>
   142b0:	ldr	r2, [pc, #512]	; 144b8 <table_cell_to_buffer@@Base+0x500>
   142b4:	mov	r3, r0
   142b8:	mov	r0, r5
   142bc:	ldr	r1, [sp, #32]
   142c0:	add	r2, pc, r2
   142c4:	bl	11ae4 <snprintf@plt>
   142c8:	b	14074 <table_cell_to_buffer@@Base+0xbc>
   142cc:	mov	r2, r4
   142d0:	mov	r1, r7
   142d4:	mov	r0, r6
   142d8:	bl	13548 <table_get_uint64@@Base>
   142dc:	ldr	r2, [pc, #472]	; 144bc <table_cell_to_buffer@@Base+0x504>
   142e0:	strd	r0, [sp]
   142e4:	mov	r0, r5
   142e8:	ldr	r1, [sp, #32]
   142ec:	add	r2, pc, r2
   142f0:	bl	11ae4 <snprintf@plt>
   142f4:	b	14074 <table_cell_to_buffer@@Base+0xbc>
   142f8:	mov	r2, r4
   142fc:	mov	r1, r7
   14300:	mov	r0, r6
   14304:	bl	1352c <table_get_int64@@Base>
   14308:	ldr	r2, [pc, #432]	; 144c0 <table_cell_to_buffer@@Base+0x508>
   1430c:	strd	r0, [sp]
   14310:	mov	r0, r5
   14314:	ldr	r1, [sp, #32]
   14318:	add	r2, pc, r2
   1431c:	bl	11ae4 <snprintf@plt>
   14320:	b	14074 <table_cell_to_buffer@@Base+0xbc>
   14324:	mov	r2, r4
   14328:	mov	r1, r7
   1432c:	mov	r0, r6
   14330:	bl	13528 <table_get_uint32@@Base>
   14334:	ldr	r2, [pc, #392]	; 144c4 <table_cell_to_buffer@@Base+0x50c>
   14338:	mov	r3, r0
   1433c:	mov	r0, r5
   14340:	ldr	r1, [sp, #32]
   14344:	add	r2, pc, r2
   14348:	bl	11ae4 <snprintf@plt>
   1434c:	b	14074 <table_cell_to_buffer@@Base+0xbc>
   14350:	mov	r2, r4
   14354:	mov	r1, r7
   14358:	mov	r0, r6
   1435c:	bl	13524 <table_get_int32@@Base>
   14360:	ldr	r2, [pc, #352]	; 144c8 <table_cell_to_buffer@@Base+0x510>
   14364:	mov	r3, r0
   14368:	mov	r0, r5
   1436c:	ldr	r1, [sp, #32]
   14370:	add	r2, pc, r2
   14374:	bl	11ae4 <snprintf@plt>
   14378:	b	14074 <table_cell_to_buffer@@Base+0xbc>
   1437c:	mov	r2, r4
   14380:	mov	r1, r7
   14384:	mov	r0, r6
   14388:	bl	13508 <table_get_uint16@@Base>
   1438c:	ldr	r2, [pc, #312]	; 144cc <table_cell_to_buffer@@Base+0x514>
   14390:	mov	r3, r0
   14394:	mov	r0, r5
   14398:	ldr	r1, [sp, #32]
   1439c:	add	r2, pc, r2
   143a0:	bl	11ae4 <snprintf@plt>
   143a4:	b	14074 <table_cell_to_buffer@@Base+0xbc>
   143a8:	mov	r2, r4
   143ac:	mov	r1, r7
   143b0:	mov	r0, r6
   143b4:	bl	134ec <table_get_int16@@Base>
   143b8:	ldr	r2, [pc, #272]	; 144d0 <table_cell_to_buffer@@Base+0x518>
   143bc:	mov	r3, r0
   143c0:	mov	r0, r5
   143c4:	ldr	r1, [sp, #32]
   143c8:	add	r2, pc, r2
   143cc:	bl	11ae4 <snprintf@plt>
   143d0:	b	14074 <table_cell_to_buffer@@Base+0xbc>
   143d4:	mov	r2, r4
   143d8:	mov	r1, r7
   143dc:	mov	r0, r6
   143e0:	bl	134d0 <table_get_uint8@@Base>
   143e4:	ldr	r2, [pc, #232]	; 144d4 <table_cell_to_buffer@@Base+0x51c>
   143e8:	mov	r3, r0
   143ec:	mov	r0, r5
   143f0:	ldr	r1, [sp, #32]
   143f4:	add	r2, pc, r2
   143f8:	bl	11ae4 <snprintf@plt>
   143fc:	b	14074 <table_cell_to_buffer@@Base+0xbc>
   14400:	mov	r2, r4
   14404:	mov	r1, r7
   14408:	mov	r0, r6
   1440c:	bl	134b4 <table_get_int8@@Base>
   14410:	ldr	r2, [pc, #192]	; 144d8 <table_cell_to_buffer@@Base+0x520>
   14414:	mov	r3, r0
   14418:	mov	r0, r5
   1441c:	ldr	r1, [sp, #32]
   14420:	add	r2, pc, r2
   14424:	bl	11ae4 <snprintf@plt>
   14428:	b	14074 <table_cell_to_buffer@@Base+0xbc>
   1442c:	mov	r2, r4
   14430:	mov	r1, r7
   14434:	mov	r0, r6
   14438:	bl	13498 <table_get_uint@@Base>
   1443c:	ldr	r2, [pc, #152]	; 144dc <table_cell_to_buffer@@Base+0x524>
   14440:	mov	r3, r0
   14444:	mov	r0, r5
   14448:	ldr	r1, [sp, #32]
   1444c:	add	r2, pc, r2
   14450:	bl	11ae4 <snprintf@plt>
   14454:	b	14074 <table_cell_to_buffer@@Base+0xbc>
   14458:	mov	r2, r4
   1445c:	mov	r1, r7
   14460:	mov	r0, r6
   14464:	bl	1347c <table_get_int@@Base>
   14468:	ldr	r2, [pc, #112]	; 144e0 <table_cell_to_buffer@@Base+0x528>
   1446c:	mov	r3, r0
   14470:	mov	r0, r5
   14474:	ldr	r1, [sp, #32]
   14478:	add	r2, pc, r2
   1447c:	bl	11ae4 <snprintf@plt>
   14480:	b	14074 <table_cell_to_buffer@@Base+0xbc>
   14484:	andeq	r0, r0, r4, asr #27
   14488:	andeq	r0, r0, r8, asr #26
   1448c:	andeq	r0, r0, r4, asr #26
   14490:	andeq	r0, r0, r8, lsr #26
   14494:	strdeq	r0, [r0], -ip
   14498:	andeq	r0, r0, ip, asr #25
   1449c:	muleq	r0, ip, ip
   144a0:	andeq	r0, r0, ip, ror #24
   144a4:	andeq	r0, r0, r0, lsr #24
   144a8:	andeq	r0, r0, ip, ror #23
   144ac:	ldrdeq	r0, [r0], -ip
   144b0:	andeq	r0, r0, ip, lsr #23
   144b4:	andeq	r0, r0, ip, ror fp
   144b8:	andeq	r0, r0, ip, asr #22
   144bc:	andeq	r0, r0, r8, lsl fp
   144c0:	andeq	r0, r0, r4, ror #21
   144c4:			; <UNDEFINED> instruction: 0x00000ab4
   144c8:	andeq	r0, r0, r4, lsl #21
   144cc:	andeq	r0, r0, ip, asr sl
   144d0:	andeq	r0, r0, ip, lsr #20
   144d4:	andeq	r0, r0, r4, lsl #20
   144d8:	ldrdeq	r0, [r0], -r4
   144dc:	andeq	r0, r0, ip, lsr #19
   144e0:	andeq	r0, r0, ip, ror r9

000144e4 <table_cell_from_buffer@@Base>:
   144e4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   144e8:	mov	r4, r2
   144ec:	mov	r5, r3
   144f0:	strd	r6, [sp, #8]
   144f4:	strd	r8, [sp, #16]
   144f8:	mov	r9, r1
   144fc:	mov	r1, r2
   14500:	str	lr, [sp, #24]
   14504:	sub	sp, sp, #268	; 0x10c
   14508:	mov	r8, r0
   1450c:	bl	12ad8 <table_get_column_data_type@@Base>
   14510:	cmp	r0, #23
   14514:	addls	pc, pc, r0, lsl #2
   14518:	b	14b38 <table_cell_from_buffer@@Base+0x654>
   1451c:	b	14acc <table_cell_from_buffer@@Base+0x5e8>
   14520:	b	14a94 <table_cell_from_buffer@@Base+0x5b0>
   14524:	b	14a58 <table_cell_from_buffer@@Base+0x574>
   14528:	b	14a20 <table_cell_from_buffer@@Base+0x53c>
   1452c:	b	149e4 <table_cell_from_buffer@@Base+0x500>
   14530:	b	149a8 <table_cell_from_buffer@@Base+0x4c4>
   14534:	b	14970 <table_cell_from_buffer@@Base+0x48c>
   14538:	b	14938 <table_cell_from_buffer@@Base+0x454>
   1453c:	b	148f8 <table_cell_from_buffer@@Base+0x414>
   14540:	b	148b8 <table_cell_from_buffer@@Base+0x3d4>
   14544:	b	1487c <table_cell_from_buffer@@Base+0x398>
   14548:	b	14840 <table_cell_from_buffer@@Base+0x35c>
   1454c:	b	14808 <table_cell_from_buffer@@Base+0x324>
   14550:	b	147d0 <table_cell_from_buffer@@Base+0x2ec>
   14554:	b	14790 <table_cell_from_buffer@@Base+0x2ac>
   14558:	b	14750 <table_cell_from_buffer@@Base+0x26c>
   1455c:	b	146e0 <table_cell_from_buffer@@Base+0x1fc>
   14560:	b	146a8 <table_cell_from_buffer@@Base+0x1c4>
   14564:	b	14718 <table_cell_from_buffer@@Base+0x234>
   14568:	b	145fc <table_cell_from_buffer@@Base+0x118>
   1456c:	b	14670 <table_cell_from_buffer@@Base+0x18c>
   14570:	b	14634 <table_cell_from_buffer@@Base+0x150>
   14574:	b	145b8 <table_cell_from_buffer@@Base+0xd4>
   14578:	b	1457c <table_cell_from_buffer@@Base+0x98>
   1457c:	ldr	r1, [pc, #1468]	; 14b40 <table_cell_from_buffer@@Base+0x65c>
   14580:	mov	r0, r5
   14584:	add	r2, sp, #8
   14588:	add	r1, pc, r1
   1458c:	bl	11af0 <__isoc99_sscanf@plt>
   14590:	cmp	r0, #1
   14594:	beq	14b04 <table_cell_from_buffer@@Base+0x620>
   14598:	mvn	r5, #0
   1459c:	mov	r0, r5
   145a0:	add	sp, sp, #268	; 0x10c
   145a4:	ldrd	r4, [sp]
   145a8:	ldrd	r6, [sp, #8]
   145ac:	ldrd	r8, [sp, #16]
   145b0:	add	sp, sp, #24
   145b4:	pop	{pc}		; (ldr pc, [sp], #4)
   145b8:	ldr	r1, [pc, #1412]	; 14b44 <table_cell_from_buffer@@Base+0x660>
   145bc:	mov	r0, r5
   145c0:	add	r2, sp, #8
   145c4:	add	r1, pc, r1
   145c8:	bl	11af0 <__isoc99_sscanf@plt>
   145cc:	cmp	r0, #1
   145d0:	bne	14598 <table_cell_from_buffer@@Base+0xb4>
   145d4:	ldr	r5, [sp, #8]
   145d8:	cmp	r5, #0
   145dc:	beq	14b20 <table_cell_from_buffer@@Base+0x63c>
   145e0:	mov	r3, r0
   145e4:	mov	r2, r4
   145e8:	mov	r1, r9
   145ec:	mov	r0, r8
   145f0:	bl	13c78 <table_set_bool@@Base>
   145f4:	mov	r5, #0
   145f8:	b	1459c <table_cell_from_buffer@@Base+0xb8>
   145fc:	ldr	r1, [pc, #1348]	; 14b48 <table_cell_from_buffer@@Base+0x664>
   14600:	mov	r0, r5
   14604:	add	r2, sp, #8
   14608:	add	r1, pc, r1
   1460c:	bl	11af0 <__isoc99_sscanf@plt>
   14610:	cmp	r0, #1
   14614:	bne	14598 <table_cell_from_buffer@@Base+0xb4>
   14618:	mov	r2, r4
   1461c:	mov	r1, r9
   14620:	ldrb	r3, [sp, #8]
   14624:	mov	r0, r8
   14628:	mov	r5, #0
   1462c:	bl	13f54 <table_set_char@@Base>
   14630:	b	1459c <table_cell_from_buffer@@Base+0xb8>
   14634:	ldr	r1, [pc, #1296]	; 14b4c <table_cell_from_buffer@@Base+0x668>
   14638:	add	r6, sp, #8
   1463c:	mov	r0, r5
   14640:	mov	r2, r6
   14644:	add	r1, pc, r1
   14648:	bl	11af0 <__isoc99_sscanf@plt>
   1464c:	cmp	r0, #1
   14650:	bne	14598 <table_cell_from_buffer@@Base+0xb4>
   14654:	mov	r3, r6
   14658:	mov	r2, r4
   1465c:	mov	r1, r9
   14660:	mov	r0, r8
   14664:	bl	13f38 <table_set_string@@Base>
   14668:	mov	r5, #0
   1466c:	b	1459c <table_cell_from_buffer@@Base+0xb8>
   14670:	ldr	r1, [pc, #1240]	; 14b50 <table_cell_from_buffer@@Base+0x66c>
   14674:	mov	r0, r5
   14678:	add	r2, sp, #8
   1467c:	add	r1, pc, r1
   14680:	bl	11af0 <__isoc99_sscanf@plt>
   14684:	cmp	r0, #1
   14688:	bne	14598 <table_cell_from_buffer@@Base+0xb4>
   1468c:	mov	r2, r4
   14690:	mov	r1, r9
   14694:	ldrb	r3, [sp, #8]
   14698:	mov	r0, r8
   1469c:	mov	r5, #0
   146a0:	bl	13f78 <table_set_uchar@@Base>
   146a4:	b	1459c <table_cell_from_buffer@@Base+0xb8>
   146a8:	ldr	r1, [pc, #1188]	; 14b54 <table_cell_from_buffer@@Base+0x670>
   146ac:	mov	r0, r5
   146b0:	add	r2, sp, #8
   146b4:	add	r1, pc, r1
   146b8:	bl	11af0 <__isoc99_sscanf@plt>
   146bc:	cmp	r0, #1
   146c0:	bne	14598 <table_cell_from_buffer@@Base+0xb4>
   146c4:	mov	r2, r4
   146c8:	mov	r1, r9
   146cc:	vldr	d0, [sp, #8]
   146d0:	mov	r0, r8
   146d4:	mov	r5, #0
   146d8:	bl	13ef0 <table_set_double@@Base>
   146dc:	b	1459c <table_cell_from_buffer@@Base+0xb8>
   146e0:	ldr	r1, [pc, #1136]	; 14b58 <table_cell_from_buffer@@Base+0x674>
   146e4:	mov	r0, r5
   146e8:	add	r2, sp, #8
   146ec:	add	r1, pc, r1
   146f0:	bl	11af0 <__isoc99_sscanf@plt>
   146f4:	cmp	r0, #1
   146f8:	bne	14598 <table_cell_from_buffer@@Base+0xb4>
   146fc:	mov	r2, r4
   14700:	mov	r1, r9
   14704:	vldr	s0, [sp, #8]
   14708:	mov	r0, r8
   1470c:	mov	r5, #0
   14710:	bl	13ecc <table_set_float@@Base>
   14714:	b	1459c <table_cell_from_buffer@@Base+0xb8>
   14718:	ldr	r1, [pc, #1084]	; 14b5c <table_cell_from_buffer@@Base+0x678>
   1471c:	mov	r0, r5
   14720:	add	r2, sp, #8
   14724:	add	r1, pc, r1
   14728:	bl	11af0 <__isoc99_sscanf@plt>
   1472c:	cmp	r0, #1
   14730:	bne	14598 <table_cell_from_buffer@@Base+0xb4>
   14734:	mov	r2, r4
   14738:	mov	r1, r9
   1473c:	vldr	d0, [sp, #8]
   14740:	mov	r0, r8
   14744:	mov	r5, #0
   14748:	bl	13f14 <table_set_ldouble@@Base>
   1474c:	b	1459c <table_cell_from_buffer@@Base+0xb8>
   14750:	ldr	r1, [pc, #1032]	; 14b60 <table_cell_from_buffer@@Base+0x67c>
   14754:	add	r6, sp, #8
   14758:	mov	r0, r5
   1475c:	mov	r2, r6
   14760:	add	r1, pc, r1
   14764:	bl	11af0 <__isoc99_sscanf@plt>
   14768:	cmp	r0, #1
   1476c:	bne	14598 <table_cell_from_buffer@@Base+0xb4>
   14770:	ldrd	r6, [r6]
   14774:	mov	r2, r4
   14778:	mov	r1, r9
   1477c:	mov	r0, r8
   14780:	mov	r5, #0
   14784:	strd	r6, [sp]
   14788:	bl	13eac <table_set_ullong@@Base>
   1478c:	b	1459c <table_cell_from_buffer@@Base+0xb8>
   14790:	ldr	r1, [pc, #972]	; 14b64 <table_cell_from_buffer@@Base+0x680>
   14794:	add	r6, sp, #8
   14798:	mov	r0, r5
   1479c:	mov	r2, r6
   147a0:	add	r1, pc, r1
   147a4:	bl	11af0 <__isoc99_sscanf@plt>
   147a8:	cmp	r0, #1
   147ac:	bne	14598 <table_cell_from_buffer@@Base+0xb4>
   147b0:	ldrd	r6, [r6]
   147b4:	mov	r2, r4
   147b8:	mov	r1, r9
   147bc:	mov	r0, r8
   147c0:	mov	r5, #0
   147c4:	strd	r6, [sp]
   147c8:	bl	13e8c <table_set_llong@@Base>
   147cc:	b	1459c <table_cell_from_buffer@@Base+0xb8>
   147d0:	ldr	r1, [pc, #912]	; 14b68 <table_cell_from_buffer@@Base+0x684>
   147d4:	mov	r0, r5
   147d8:	add	r2, sp, #8
   147dc:	add	r1, pc, r1
   147e0:	bl	11af0 <__isoc99_sscanf@plt>
   147e4:	cmp	r0, #1
   147e8:	bne	14598 <table_cell_from_buffer@@Base+0xb4>
   147ec:	mov	r2, r4
   147f0:	mov	r1, r9
   147f4:	ldr	r3, [sp, #8]
   147f8:	mov	r0, r8
   147fc:	mov	r5, #0
   14800:	bl	13e68 <table_set_ulong@@Base>
   14804:	b	1459c <table_cell_from_buffer@@Base+0xb8>
   14808:	ldr	r1, [pc, #860]	; 14b6c <table_cell_from_buffer@@Base+0x688>
   1480c:	mov	r0, r5
   14810:	add	r2, sp, #8
   14814:	add	r1, pc, r1
   14818:	bl	11af0 <__isoc99_sscanf@plt>
   1481c:	cmp	r0, #1
   14820:	bne	14598 <table_cell_from_buffer@@Base+0xb4>
   14824:	mov	r2, r4
   14828:	mov	r1, r9
   1482c:	ldr	r3, [sp, #8]
   14830:	mov	r0, r8
   14834:	mov	r5, #0
   14838:	bl	13e44 <table_set_long@@Base>
   1483c:	b	1459c <table_cell_from_buffer@@Base+0xb8>
   14840:	ldr	r1, [pc, #808]	; 14b70 <table_cell_from_buffer@@Base+0x68c>
   14844:	add	r6, sp, #8
   14848:	mov	r0, r5
   1484c:	mov	r2, r6
   14850:	add	r1, pc, r1
   14854:	bl	11af0 <__isoc99_sscanf@plt>
   14858:	cmp	r0, #1
   1485c:	bne	14598 <table_cell_from_buffer@@Base+0xb4>
   14860:	ldrh	r3, [r6]
   14864:	mov	r2, r4
   14868:	mov	r1, r9
   1486c:	mov	r0, r8
   14870:	mov	r5, #0
   14874:	bl	13e20 <table_set_ushort@@Base>
   14878:	b	1459c <table_cell_from_buffer@@Base+0xb8>
   1487c:	ldr	r1, [pc, #752]	; 14b74 <table_cell_from_buffer@@Base+0x690>
   14880:	add	r6, sp, #8
   14884:	mov	r0, r5
   14888:	mov	r2, r6
   1488c:	add	r1, pc, r1
   14890:	bl	11af0 <__isoc99_sscanf@plt>
   14894:	cmp	r0, #1
   14898:	bne	14598 <table_cell_from_buffer@@Base+0xb4>
   1489c:	ldrsh	r3, [r6]
   148a0:	mov	r2, r4
   148a4:	mov	r1, r9
   148a8:	mov	r0, r8
   148ac:	mov	r5, #0
   148b0:	bl	13dfc <table_set_short@@Base>
   148b4:	b	1459c <table_cell_from_buffer@@Base+0xb8>
   148b8:	ldr	r1, [pc, #696]	; 14b78 <table_cell_from_buffer@@Base+0x694>
   148bc:	add	r6, sp, #8
   148c0:	mov	r0, r5
   148c4:	mov	r2, r6
   148c8:	add	r1, pc, r1
   148cc:	bl	11af0 <__isoc99_sscanf@plt>
   148d0:	cmp	r0, #1
   148d4:	bne	14598 <table_cell_from_buffer@@Base+0xb4>
   148d8:	ldrd	r6, [r6]
   148dc:	mov	r2, r4
   148e0:	mov	r1, r9
   148e4:	mov	r0, r8
   148e8:	mov	r5, #0
   148ec:	strd	r6, [sp]
   148f0:	bl	13ddc <table_set_uint64@@Base>
   148f4:	b	1459c <table_cell_from_buffer@@Base+0xb8>
   148f8:	ldr	r1, [pc, #636]	; 14b7c <table_cell_from_buffer@@Base+0x698>
   148fc:	add	r6, sp, #8
   14900:	mov	r0, r5
   14904:	mov	r2, r6
   14908:	add	r1, pc, r1
   1490c:	bl	11af0 <__isoc99_sscanf@plt>
   14910:	cmp	r0, #1
   14914:	bne	14598 <table_cell_from_buffer@@Base+0xb4>
   14918:	ldrd	r6, [r6]
   1491c:	mov	r2, r4
   14920:	mov	r1, r9
   14924:	mov	r0, r8
   14928:	mov	r5, #0
   1492c:	strd	r6, [sp]
   14930:	bl	13dbc <table_set_int64@@Base>
   14934:	b	1459c <table_cell_from_buffer@@Base+0xb8>
   14938:	ldr	r1, [pc, #576]	; 14b80 <table_cell_from_buffer@@Base+0x69c>
   1493c:	mov	r0, r5
   14940:	add	r2, sp, #8
   14944:	add	r1, pc, r1
   14948:	bl	11af0 <__isoc99_sscanf@plt>
   1494c:	cmp	r0, #1
   14950:	bne	14598 <table_cell_from_buffer@@Base+0xb4>
   14954:	mov	r2, r4
   14958:	mov	r1, r9
   1495c:	ldr	r3, [sp, #8]
   14960:	mov	r0, r8
   14964:	mov	r5, #0
   14968:	bl	13d98 <table_set_uint32@@Base>
   1496c:	b	1459c <table_cell_from_buffer@@Base+0xb8>
   14970:	ldr	r1, [pc, #524]	; 14b84 <table_cell_from_buffer@@Base+0x6a0>
   14974:	mov	r0, r5
   14978:	add	r2, sp, #8
   1497c:	add	r1, pc, r1
   14980:	bl	11af0 <__isoc99_sscanf@plt>
   14984:	cmp	r0, #1
   14988:	bne	14598 <table_cell_from_buffer@@Base+0xb4>
   1498c:	mov	r2, r4
   14990:	mov	r1, r9
   14994:	ldr	r3, [sp, #8]
   14998:	mov	r0, r8
   1499c:	mov	r5, #0
   149a0:	bl	13d74 <table_set_int32@@Base>
   149a4:	b	1459c <table_cell_from_buffer@@Base+0xb8>
   149a8:	ldr	r1, [pc, #472]	; 14b88 <table_cell_from_buffer@@Base+0x6a4>
   149ac:	add	r6, sp, #8
   149b0:	mov	r0, r5
   149b4:	mov	r2, r6
   149b8:	add	r1, pc, r1
   149bc:	bl	11af0 <__isoc99_sscanf@plt>
   149c0:	cmp	r0, #1
   149c4:	bne	14598 <table_cell_from_buffer@@Base+0xb4>
   149c8:	ldrh	r3, [r6]
   149cc:	mov	r2, r4
   149d0:	mov	r1, r9
   149d4:	mov	r0, r8
   149d8:	mov	r5, #0
   149dc:	bl	13d50 <table_set_uint16@@Base>
   149e0:	b	1459c <table_cell_from_buffer@@Base+0xb8>
   149e4:	ldr	r1, [pc, #416]	; 14b8c <table_cell_from_buffer@@Base+0x6a8>
   149e8:	add	r6, sp, #8
   149ec:	mov	r0, r5
   149f0:	mov	r2, r6
   149f4:	add	r1, pc, r1
   149f8:	bl	11af0 <__isoc99_sscanf@plt>
   149fc:	cmp	r0, #1
   14a00:	bne	14598 <table_cell_from_buffer@@Base+0xb4>
   14a04:	ldrsh	r3, [r6]
   14a08:	mov	r2, r4
   14a0c:	mov	r1, r9
   14a10:	mov	r0, r8
   14a14:	mov	r5, #0
   14a18:	bl	13d2c <table_set_int16@@Base>
   14a1c:	b	1459c <table_cell_from_buffer@@Base+0xb8>
   14a20:	ldr	r1, [pc, #360]	; 14b90 <table_cell_from_buffer@@Base+0x6ac>
   14a24:	mov	r0, r5
   14a28:	add	r2, sp, #8
   14a2c:	add	r1, pc, r1
   14a30:	bl	11af0 <__isoc99_sscanf@plt>
   14a34:	cmp	r0, #1
   14a38:	bne	14598 <table_cell_from_buffer@@Base+0xb4>
   14a3c:	mov	r2, r4
   14a40:	mov	r1, r9
   14a44:	ldrb	r3, [sp, #8]
   14a48:	mov	r0, r8
   14a4c:	mov	r5, #0
   14a50:	bl	13d08 <table_set_uint8@@Base>
   14a54:	b	1459c <table_cell_from_buffer@@Base+0xb8>
   14a58:	ldr	r1, [pc, #308]	; 14b94 <table_cell_from_buffer@@Base+0x6b0>
   14a5c:	add	r6, sp, #8
   14a60:	mov	r0, r5
   14a64:	mov	r2, r6
   14a68:	add	r1, pc, r1
   14a6c:	bl	11af0 <__isoc99_sscanf@plt>
   14a70:	cmp	r0, #1
   14a74:	bne	14598 <table_cell_from_buffer@@Base+0xb4>
   14a78:	ldrsb	r3, [r6]
   14a7c:	mov	r2, r4
   14a80:	mov	r1, r9
   14a84:	mov	r0, r8
   14a88:	mov	r5, #0
   14a8c:	bl	13ce4 <table_set_int8@@Base>
   14a90:	b	1459c <table_cell_from_buffer@@Base+0xb8>
   14a94:	ldr	r1, [pc, #252]	; 14b98 <table_cell_from_buffer@@Base+0x6b4>
   14a98:	mov	r0, r5
   14a9c:	add	r2, sp, #8
   14aa0:	add	r1, pc, r1
   14aa4:	bl	11af0 <__isoc99_sscanf@plt>
   14aa8:	cmp	r0, #1
   14aac:	bne	14598 <table_cell_from_buffer@@Base+0xb4>
   14ab0:	mov	r2, r4
   14ab4:	mov	r1, r9
   14ab8:	ldr	r3, [sp, #8]
   14abc:	mov	r0, r8
   14ac0:	mov	r5, #0
   14ac4:	bl	13cc0 <table_set_uint@@Base>
   14ac8:	b	1459c <table_cell_from_buffer@@Base+0xb8>
   14acc:	ldr	r1, [pc, #200]	; 14b9c <table_cell_from_buffer@@Base+0x6b8>
   14ad0:	mov	r0, r5
   14ad4:	add	r2, sp, #8
   14ad8:	add	r1, pc, r1
   14adc:	bl	11af0 <__isoc99_sscanf@plt>
   14ae0:	cmp	r0, #1
   14ae4:	bne	14598 <table_cell_from_buffer@@Base+0xb4>
   14ae8:	mov	r2, r4
   14aec:	mov	r1, r9
   14af0:	ldr	r3, [sp, #8]
   14af4:	mov	r0, r8
   14af8:	mov	r5, #0
   14afc:	bl	13c9c <table_set_int@@Base>
   14b00:	b	1459c <table_cell_from_buffer@@Base+0xb8>
   14b04:	mov	r2, r4
   14b08:	mov	r1, r9
   14b0c:	ldr	r3, [sp, #8]
   14b10:	mov	r0, r8
   14b14:	mov	r5, #0
   14b18:	bl	13f9c <table_set_ptr@@Base>
   14b1c:	b	1459c <table_cell_from_buffer@@Base+0xb8>
   14b20:	mov	r2, r4
   14b24:	mov	r1, r9
   14b28:	mov	r0, r8
   14b2c:	mov	r3, r5
   14b30:	bl	13c78 <table_set_bool@@Base>
   14b34:	b	1459c <table_cell_from_buffer@@Base+0xb8>
   14b38:	mov	r5, #0
   14b3c:	b	1459c <table_cell_from_buffer@@Base+0xb8>
   14b40:	andeq	r0, r0, r8, lsr #17
   14b44:	andeq	r0, r0, r0, lsr r8
   14b48:	andeq	r0, r0, r4, lsr #16
   14b4c:	ldrdeq	r0, [r0], -r8
   14b50:			; <UNDEFINED> instruction: 0x000007b0
   14b54:	andeq	r0, r0, r0, ror r7
   14b58:	andeq	r0, r0, r4, lsr r7
   14b5c:	andeq	r0, r0, r4, lsl #14
   14b60:	andeq	r0, r0, r4, lsr #13
   14b64:	andeq	r0, r0, ip, asr r6
   14b68:	andeq	r0, r0, ip, lsr r6
   14b6c:	andeq	r0, r0, r0, lsl #12
   14b70:	andeq	r0, r0, r0, asr #11
   14b74:	andeq	r0, r0, r0, lsl #11
   14b78:	andeq	r0, r0, ip, lsr r5
   14b7c:	strdeq	r0, [r0], -r4
   14b80:			; <UNDEFINED> instruction: 0x000004b4
   14b84:	andeq	r0, r0, r8, ror r4
   14b88:	andeq	r0, r0, r8, asr r4
   14b8c:	andeq	r0, r0, r8, lsl r4
   14b90:	andeq	r0, r0, r0, lsl r4
   14b94:	andeq	r0, r0, ip, asr #7
   14b98:	andeq	r0, r0, r8, asr r3
   14b9c:	andeq	r0, r0, ip, lsl r3

00014ba0 <table_get_cell_ptr@@Base>:
   14ba0:	str	r4, [sp, #-8]!
   14ba4:	mov	r4, r2
   14ba8:	str	lr, [sp, #4]
   14bac:	bl	13618 <table_get_row_ptr@@Base>
   14bb0:	ldr	r0, [r0]
   14bb4:	add	r0, r0, r4, lsl #2
   14bb8:	ldr	r4, [sp]
   14bbc:	add	sp, sp, #4
   14bc0:	pop	{pc}		; (ldr pc, [sp], #4)

00014bc4 <table_cell_init@@Base>:
   14bc4:	str	r4, [sp, #-8]!
   14bc8:	str	lr, [sp, #4]
   14bcc:	bl	14ba0 <table_get_cell_ptr@@Base>
   14bd0:	mov	r3, #0
   14bd4:	ldr	r4, [sp]
   14bd8:	add	sp, sp, #4
   14bdc:	str	r3, [r0]
   14be0:	pop	{pc}		; (ldr pc, [sp], #4)

00014be4 <table_cell_destroy@@Base>:
   14be4:	strd	r4, [sp, #-16]!
   14be8:	mov	r4, r2
   14bec:	mov	r5, r0
   14bf0:	str	r6, [sp, #8]
   14bf4:	mov	r6, r1
   14bf8:	mov	r1, r2
   14bfc:	str	lr, [sp, #12]
   14c00:	bl	12ad8 <table_get_column_data_type@@Base>
   14c04:	cmp	r0, #23
   14c08:	bne	14c1c <table_cell_destroy@@Base+0x38>
   14c0c:	ldrd	r4, [sp]
   14c10:	ldr	r6, [sp, #8]
   14c14:	add	sp, sp, #12
   14c18:	pop	{pc}		; (ldr pc, [sp], #4)
   14c1c:	mov	r2, r4
   14c20:	mov	r1, r6
   14c24:	mov	r0, r5
   14c28:	bl	14ba0 <table_get_cell_ptr@@Base>
   14c2c:	ldr	r0, [r0]
   14c30:	cmp	r0, #0
   14c34:	beq	14c0c <table_cell_destroy@@Base+0x28>
   14c38:	ldrd	r4, [sp]
   14c3c:	ldr	r6, [sp, #8]
   14c40:	ldr	lr, [sp, #12]
   14c44:	add	sp, sp, #16
   14c48:	b	11a84 <free@plt>

00014c4c <table_cell_nullify@@Base>:
   14c4c:	str	r4, [sp, #-8]!
   14c50:	str	lr, [sp, #4]
   14c54:	bl	14ba0 <table_get_cell_ptr@@Base>
   14c58:	mov	r4, r0
   14c5c:	ldr	r0, [r0]
   14c60:	cmp	r0, #0
   14c64:	beq	14c74 <table_cell_nullify@@Base+0x28>
   14c68:	bl	11a84 <free@plt>
   14c6c:	mov	r3, #0
   14c70:	str	r3, [r4]
   14c74:	ldr	r4, [sp]
   14c78:	add	sp, sp, #4
   14c7c:	mov	r0, #0
   14c80:	pop	{pc}		; (ldr pc, [sp], #4)

00014c84 <__libc_csu_init@@Base>:
   14c84:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14c88:	mov	r7, r0
   14c8c:	ldr	r6, [pc, #72]	; 14cdc <__libc_csu_init@@Base+0x58>
   14c90:	ldr	r5, [pc, #72]	; 14ce0 <__libc_csu_init@@Base+0x5c>
   14c94:	add	r6, pc, r6
   14c98:	add	r5, pc, r5
   14c9c:	sub	r6, r6, r5
   14ca0:	mov	r8, r1
   14ca4:	mov	r9, r2
   14ca8:	bl	11a4c <strcmp@plt-0x20>
   14cac:	asrs	r6, r6, #2
   14cb0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14cb4:	mov	r4, #0
   14cb8:	add	r4, r4, #1
   14cbc:	ldr	r3, [r5], #4
   14cc0:	mov	r2, r9
   14cc4:	mov	r1, r8
   14cc8:	mov	r0, r7
   14ccc:	blx	r3
   14cd0:	cmp	r6, r4
   14cd4:	bne	14cb8 <__libc_csu_init@@Base+0x34>
   14cd8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14cdc:	andeq	r0, r1, r8, ror r2
   14ce0:	andeq	r0, r1, r0, ror r2

00014ce4 <__libc_csu_fini@@Base>:
   14ce4:	bx	lr

Disassembly of section .fini:

00014ce8 <.fini>:
   14ce8:	push	{r3, lr}
   14cec:	pop	{r3, pc}
