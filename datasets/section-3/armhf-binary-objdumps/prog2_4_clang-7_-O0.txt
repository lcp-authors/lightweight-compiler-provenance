
../repos/prog2/4:     file format elf32-littlearm


Disassembly of section .init:

00010a44 <.init>:
   10a44:	push	{r3, lr}
   10a48:	bl	10b24 <_start@@Base+0x3c>
   10a4c:	pop	{r3, pc}

Disassembly of section .plt:

00010a50 <strcmp@plt-0x14>:
   10a50:	push	{lr}		; (str lr, [sp, #-4]!)
   10a54:	ldr	lr, [pc, #4]	; 10a60 <strcmp@plt-0x4>
   10a58:	add	lr, pc, lr
   10a5c:	ldr	pc, [lr, #8]!
   10a60:	andeq	r2, r1, r0, lsr #11

00010a64 <strcmp@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #73728	; 0x12000
   10a6c:	ldr	pc, [ip, #1440]!	; 0x5a0

00010a70 <printf@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #73728	; 0x12000
   10a78:	ldr	pc, [ip, #1432]!	; 0x598

00010a7c <free@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #73728	; 0x12000
   10a84:	ldr	pc, [ip, #1424]!	; 0x590

00010a88 <strdup@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #73728	; 0x12000
   10a90:	ldr	pc, [ip, #1416]!	; 0x588

00010a94 <strcpy@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #73728	; 0x12000
   10a9c:	ldr	pc, [ip, #1408]!	; 0x580

00010aa0 <malloc@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #73728	; 0x12000
   10aa8:	ldr	pc, [ip, #1400]!	; 0x578

00010aac <__libc_start_main@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #73728	; 0x12000
   10ab4:	ldr	pc, [ip, #1392]!	; 0x570

00010ab8 <__gmon_start__@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #73728	; 0x12000
   10ac0:	ldr	pc, [ip, #1384]!	; 0x568

00010ac4 <strlen@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #73728	; 0x12000
   10acc:	ldr	pc, [ip, #1376]!	; 0x560

00010ad0 <setvbuf@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #73728	; 0x12000
   10ad8:	ldr	pc, [ip, #1368]!	; 0x558

00010adc <abort@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #73728	; 0x12000
   10ae4:	ldr	pc, [ip, #1360]!	; 0x550

Disassembly of section .text:

00010ae8 <_start@@Base>:
   10ae8:	mov	fp, #0
   10aec:	mov	lr, #0
   10af0:	pop	{r1}		; (ldr r1, [sp], #4)
   10af4:	mov	r2, sp
   10af8:	push	{r2}		; (str r2, [sp, #-4]!)
   10afc:	push	{r0}		; (str r0, [sp, #-4]!)
   10b00:	ldr	ip, [pc, #16]	; 10b18 <_start@@Base+0x30>
   10b04:	push	{ip}		; (str ip, [sp, #-4]!)
   10b08:	ldr	r0, [pc, #12]	; 10b1c <_start@@Base+0x34>
   10b0c:	ldr	r3, [pc, #12]	; 10b20 <_start@@Base+0x38>
   10b10:	bl	10aac <__libc_start_main@plt>
   10b14:	bl	10adc <abort@plt>
   10b18:			; <UNDEFINED> instruction: 0x000128bc
   10b1c:	andeq	r1, r1, r8, lsl #31
   10b20:	andeq	r2, r1, ip, asr r8
   10b24:	ldr	r3, [pc, #20]	; 10b40 <_start@@Base+0x58>
   10b28:	ldr	r2, [pc, #20]	; 10b44 <_start@@Base+0x5c>
   10b2c:	add	r3, pc, r3
   10b30:	ldr	r2, [r3, r2]
   10b34:	cmp	r2, #0
   10b38:	bxeq	lr
   10b3c:	b	10ab8 <__gmon_start__@plt>
   10b40:	andeq	r2, r1, ip, asr #9
   10b44:	andeq	r0, r0, r0, asr #32
   10b48:	ldr	r0, [pc, #24]	; 10b68 <_start@@Base+0x80>
   10b4c:	ldr	r3, [pc, #24]	; 10b6c <_start@@Base+0x84>
   10b50:	cmp	r3, r0
   10b54:	bxeq	lr
   10b58:	ldr	r3, [pc, #16]	; 10b70 <_start@@Base+0x88>
   10b5c:	cmp	r3, #0
   10b60:	bxeq	lr
   10b64:	bx	r3
   10b68:	andeq	r3, r2, r0, asr r0
   10b6c:	andeq	r3, r2, r0, asr r0
   10b70:	andeq	r0, r0, r0
   10b74:	ldr	r0, [pc, #36]	; 10ba0 <_start@@Base+0xb8>
   10b78:	ldr	r1, [pc, #36]	; 10ba4 <_start@@Base+0xbc>
   10b7c:	sub	r1, r1, r0
   10b80:	asr	r1, r1, #2
   10b84:	add	r1, r1, r1, lsr #31
   10b88:	asrs	r1, r1, #1
   10b8c:	bxeq	lr
   10b90:	ldr	r3, [pc, #16]	; 10ba8 <_start@@Base+0xc0>
   10b94:	cmp	r3, #0
   10b98:	bxeq	lr
   10b9c:	bx	r3
   10ba0:	andeq	r3, r2, r0, asr r0
   10ba4:	andeq	r3, r2, r0, asr r0
   10ba8:	andeq	r0, r0, r0
   10bac:	push	{r4, lr}
   10bb0:	ldr	r4, [pc, #24]	; 10bd0 <_start@@Base+0xe8>
   10bb4:	ldrb	r3, [r4]
   10bb8:	cmp	r3, #0
   10bbc:	popne	{r4, pc}
   10bc0:	bl	10b48 <_start@@Base+0x60>
   10bc4:	mov	r3, #1
   10bc8:	strb	r3, [r4]
   10bcc:	pop	{r4, pc}
   10bd0:	andeq	r3, r2, r0, asr r0
   10bd4:	b	10b74 <_start@@Base+0x8c>

00010bd8 <_l@@Base>:
   10bd8:	sub	sp, sp, #12
   10bdc:	push	{fp, lr}
   10be0:	mov	fp, sp
   10be4:	sub	sp, sp, #36	; 0x24
   10be8:	str	r3, [fp, #16]
   10bec:	str	r2, [fp, #12]
   10bf0:	str	r1, [fp, #8]
   10bf4:	str	r0, [fp, #-4]
   10bf8:	movw	r0, #12
   10bfc:	bl	10aa0 <malloc@plt>
   10c00:	str	r0, [fp, #-12]
   10c04:	ldr	r0, [fp, #-12]
   10c08:	movw	r1, #0
   10c0c:	str	r1, [r0]
   10c10:	ldr	r0, [fp, #-12]
   10c14:	str	r1, [r0, #4]
   10c18:	ldr	r0, [fp, #-4]
   10c1c:	ldr	r2, [fp, #-12]
   10c20:	str	r0, [r2, #8]
   10c24:	sub	r0, fp, #8
   10c28:	add	r2, fp, #8
   10c2c:	str	r2, [r0]
   10c30:	str	r1, [sp, #16]
   10c34:	ldr	r0, [sp, #16]
   10c38:	ldr	r1, [fp, #-4]
   10c3c:	cmp	r0, r1
   10c40:	bge	10cf8 <_l@@Base+0x120>
   10c44:	ldr	r0, [fp, #-8]
   10c48:	add	r1, r0, #4
   10c4c:	str	r1, [fp, #-8]
   10c50:	ldr	r0, [r0]
   10c54:	str	r0, [sp, #12]
   10c58:	ldr	r0, [sp, #16]
   10c5c:	cmp	r0, #0
   10c60:	bne	10c90 <_l@@Base+0xb8>
   10c64:	movw	r0, #12
   10c68:	bl	10aa0 <malloc@plt>
   10c6c:	ldr	lr, [fp, #-12]
   10c70:	str	r0, [lr]
   10c74:	ldr	r0, [fp, #-12]
   10c78:	ldr	r0, [r0]
   10c7c:	str	r0, [fp, #-16]
   10c80:	ldr	r0, [fp, #-16]
   10c84:	movw	lr, #0
   10c88:	str	lr, [r0, #8]
   10c8c:	b	10cbc <_l@@Base+0xe4>
   10c90:	movw	r0, #12
   10c94:	bl	10aa0 <malloc@plt>
   10c98:	ldr	lr, [fp, #-16]
   10c9c:	str	r0, [lr, #4]
   10ca0:	ldr	r0, [fp, #-16]
   10ca4:	ldr	lr, [fp, #-16]
   10ca8:	ldr	lr, [lr, #4]
   10cac:	str	r0, [lr, #8]
   10cb0:	ldr	r0, [fp, #-16]
   10cb4:	ldr	r0, [r0, #4]
   10cb8:	str	r0, [fp, #-16]
   10cbc:	ldr	r0, [sp, #12]
   10cc0:	bl	10ac4 <strlen@plt>
   10cc4:	add	r0, r0, #1
   10cc8:	bl	10aa0 <malloc@plt>
   10ccc:	ldr	lr, [fp, #-16]
   10cd0:	str	r0, [lr]
   10cd4:	ldr	r0, [fp, #-16]
   10cd8:	ldr	r0, [r0]
   10cdc:	ldr	r1, [sp, #12]
   10ce0:	bl	10a94 <strcpy@plt>
   10ce4:	str	r0, [sp, #8]
   10ce8:	ldr	r0, [sp, #16]
   10cec:	add	r0, r0, #1
   10cf0:	str	r0, [sp, #16]
   10cf4:	b	10c34 <_l@@Base+0x5c>
   10cf8:	sub	r0, fp, #8
   10cfc:	ldr	r1, [fp, #-16]
   10d00:	movw	r2, #0
   10d04:	str	r2, [r1, #4]
   10d08:	ldr	r1, [fp, #-16]
   10d0c:	ldr	r2, [fp, #-12]
   10d10:	str	r1, [r2, #4]
   10d14:	ldr	r1, [fp, #-12]
   10d18:	str	r0, [sp, #4]
   10d1c:	mov	r0, r1
   10d20:	mov	sp, fp
   10d24:	pop	{fp, lr}
   10d28:	add	sp, sp, #12
   10d2c:	bx	lr

00010d30 <_f@@Base>:
   10d30:	sub	sp, sp, #24
   10d34:	str	r0, [sp, #16]
   10d38:	str	r1, [sp, #12]
   10d3c:	ldr	r0, [sp, #16]
   10d40:	movw	r1, #0
   10d44:	cmp	r0, r1
   10d48:	bne	10d58 <_f@@Base+0x28>
   10d4c:	movw	r0, #0
   10d50:	str	r0, [sp, #20]
   10d54:	b	10df0 <_f@@Base+0xc0>
   10d58:	ldr	r0, [sp, #16]
   10d5c:	ldr	r0, [r0]
   10d60:	str	r0, [sp, #4]
   10d64:	movw	r0, #0
   10d68:	str	r0, [sp, #8]
   10d6c:	ldr	r0, [sp, #8]
   10d70:	ldr	r1, [sp, #12]
   10d74:	cmp	r0, r1
   10d78:	movw	r0, #0
   10d7c:	str	r0, [sp]
   10d80:	bge	10d9c <_f@@Base+0x6c>
   10d84:	ldr	r0, [sp, #4]
   10d88:	movw	r1, #0
   10d8c:	cmp	r0, r1
   10d90:	movw	r0, #0
   10d94:	movne	r0, #1
   10d98:	str	r0, [sp]
   10d9c:	ldr	r0, [sp]
   10da0:	tst	r0, #1
   10da4:	beq	10dc4 <_f@@Base+0x94>
   10da8:	ldr	r0, [sp, #4]
   10dac:	ldr	r0, [r0, #4]
   10db0:	str	r0, [sp, #4]
   10db4:	ldr	r0, [sp, #8]
   10db8:	add	r0, r0, #1
   10dbc:	str	r0, [sp, #8]
   10dc0:	b	10d6c <_f@@Base+0x3c>
   10dc4:	ldr	r0, [sp, #12]
   10dc8:	ldr	r1, [sp, #8]
   10dcc:	cmp	r0, r1
   10dd0:	bne	10de4 <_f@@Base+0xb4>
   10dd4:	ldr	r0, [sp, #4]
   10dd8:	ldr	r0, [r0]
   10ddc:	str	r0, [sp, #20]
   10de0:	b	10df0 <_f@@Base+0xc0>
   10de4:	ldr	r0, [pc, #16]	; 10dfc <_f@@Base+0xcc>
   10de8:	add	r0, pc, r0
   10dec:	str	r0, [sp, #20]
   10df0:	ldr	r0, [sp, #20]
   10df4:	add	sp, sp, #24
   10df8:	bx	lr
   10dfc:	andeq	r1, r0, r1, asr #31

00010e00 <teste_lista_nova@@Base>:
   10e00:	push	{fp, lr}
   10e04:	mov	fp, sp
   10e08:	sub	sp, sp, #40	; 0x28
   10e0c:	ldr	r0, [pc, #260]	; 10f18 <teste_lista_nova@@Base+0x118>
   10e10:	add	r0, pc, r0
   10e14:	movw	r1, #0
   10e18:	str	r1, [fp, #-8]
   10e1c:	bl	10a70 <printf@plt>
   10e20:	ldr	r1, [pc, #236]	; 10f14 <teste_lista_nova@@Base+0x114>
   10e24:	ldr	r1, [pc, r1]
   10e28:	str	r0, [fp, #-16]
   10e2c:	blx	r1
   10e30:	str	r0, [fp, #-12]
   10e34:	ldr	r0, [fp, #-12]
   10e38:	movw	r1, #0
   10e3c:	cmp	r0, r1
   10e40:	bne	10e9c <teste_lista_nova@@Base+0x9c>
   10e44:	ldr	r0, [pc, #208]	; 10f1c <teste_lista_nova@@Base+0x11c>
   10e48:	add	r0, pc, r0
   10e4c:	bl	10a70 <printf@plt>
   10e50:	ldr	lr, [fp, #-8]
   10e54:	add	lr, lr, #1
   10e58:	str	lr, [fp, #-8]
   10e5c:	ldr	lr, [fp, #-8]
   10e60:	cmp	lr, #0
   10e64:	str	r0, [sp, #20]
   10e68:	bne	10e80 <teste_lista_nova@@Base+0x80>
   10e6c:	ldr	r0, [pc, #172]	; 10f20 <teste_lista_nova@@Base+0x120>
   10e70:	add	r0, pc, r0
   10e74:	bl	10a70 <printf@plt>
   10e78:	str	r0, [sp, #16]
   10e7c:	b	10e90 <teste_lista_nova@@Base+0x90>
   10e80:	ldr	r0, [pc, #156]	; 10f24 <teste_lista_nova@@Base+0x124>
   10e84:	add	r0, pc, r0
   10e88:	bl	10a70 <printf@plt>
   10e8c:	str	r0, [sp, #12]
   10e90:	ldr	r0, [fp, #-8]
   10e94:	str	r0, [fp, #-4]
   10e98:	b	10f08 <teste_lista_nova@@Base+0x108>
   10e9c:	ldr	r0, [fp, #-12]
   10ea0:	ldr	r0, [r0, #8]
   10ea4:	cmp	r0, #0
   10ea8:	beq	10ec8 <teste_lista_nova@@Base+0xc8>
   10eac:	ldr	r0, [pc, #116]	; 10f28 <teste_lista_nova@@Base+0x128>
   10eb0:	add	r0, pc, r0
   10eb4:	bl	10a70 <printf@plt>
   10eb8:	ldr	lr, [fp, #-8]
   10ebc:	add	lr, lr, #1
   10ec0:	str	lr, [fp, #-8]
   10ec4:	str	r0, [sp, #8]
   10ec8:	ldr	r0, [fp, #-12]
   10ecc:	bl	120f0 <lista_apaga@@Base>
   10ed0:	ldr	r0, [fp, #-8]
   10ed4:	cmp	r0, #0
   10ed8:	bne	10ef0 <teste_lista_nova@@Base+0xf0>
   10edc:	ldr	r0, [pc, #72]	; 10f2c <teste_lista_nova@@Base+0x12c>
   10ee0:	add	r0, pc, r0
   10ee4:	bl	10a70 <printf@plt>
   10ee8:	str	r0, [sp, #4]
   10eec:	b	10f00 <teste_lista_nova@@Base+0x100>
   10ef0:	ldr	r0, [pc, #56]	; 10f30 <teste_lista_nova@@Base+0x130>
   10ef4:	add	r0, pc, r0
   10ef8:	bl	10a70 <printf@plt>
   10efc:	str	r0, [sp]
   10f00:	ldr	r0, [fp, #-8]
   10f04:	str	r0, [fp, #-4]
   10f08:	ldr	r0, [fp, #-4]
   10f0c:	mov	sp, fp
   10f10:	pop	{fp, pc}
   10f14:	andeq	r2, r1, ip, lsl #4
   10f18:			; <UNDEFINED> instruction: 0x00001ab4
   10f1c:	andeq	r1, r0, fp, lsl #21
   10f20:	andeq	r1, r0, r9, ror sl
   10f24:	andeq	r1, r0, r4, lsr #30
   10f28:	andeq	r1, r0, sp, lsr sl
   10f2c:	andeq	r1, r0, r9, lsl #20
   10f30:			; <UNDEFINED> instruction: 0x00001eb4

00010f34 <teste_lista_insere@@Base>:
   10f34:	push	{fp, lr}
   10f38:	mov	fp, sp
   10f3c:	sub	sp, sp, #120	; 0x78
   10f40:	ldr	r0, [pc, #1276]	; 11444 <teste_lista_insere@@Base+0x510>
   10f44:	add	r0, pc, r0
   10f48:	ldr	r1, [pc, #1272]	; 11448 <teste_lista_insere@@Base+0x514>
   10f4c:	add	r1, pc, r1
   10f50:	movw	r2, #0
   10f54:	str	r2, [fp, #-8]
   10f58:	str	r1, [fp, #-16]
   10f5c:	str	r0, [fp, #-20]	; 0xffffffec
   10f60:	ldr	r1, [fp, #-16]
   10f64:	ldr	r2, [fp, #-16]
   10f68:	movw	r0, #2
   10f6c:	bl	10bd8 <_l@@Base>
   10f70:	ldr	r1, [pc, #1224]	; 11440 <teste_lista_insere@@Base+0x50c>
   10f74:	add	r1, pc, r1
   10f78:	str	r0, [fp, #-24]	; 0xffffffe8
   10f7c:	mov	r0, r1
   10f80:	bl	10a70 <printf@plt>
   10f84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10f88:	ldr	r2, [fp, #-20]	; 0xffffffec
   10f8c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   10f90:	ldr	lr, [lr]
   10f94:	ldr	lr, [lr, #4]
   10f98:	str	r0, [fp, #-28]	; 0xffffffe4
   10f9c:	mov	r0, r1
   10fa0:	mov	r1, r2
   10fa4:	mov	r2, lr
   10fa8:	bl	1225c <lista_insere@@Base>
   10fac:	str	r0, [fp, #-12]
   10fb0:	ldr	r0, [fp, #-12]
   10fb4:	movw	r1, #0
   10fb8:	cmp	r0, r1
   10fbc:	bne	10fdc <teste_lista_insere@@Base+0xa8>
   10fc0:	ldr	r0, [pc, #1156]	; 1144c <teste_lista_insere@@Base+0x518>
   10fc4:	add	r0, pc, r0
   10fc8:	bl	10a70 <printf@plt>
   10fcc:	ldr	lr, [fp, #-8]
   10fd0:	add	lr, lr, #1
   10fd4:	str	lr, [fp, #-8]
   10fd8:	str	r0, [fp, #-32]	; 0xffffffe0
   10fdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10fe0:	ldr	r0, [r0, #8]
   10fe4:	cmp	r0, #3
   10fe8:	beq	11008 <teste_lista_insere@@Base+0xd4>
   10fec:	ldr	r0, [pc, #1116]	; 11450 <teste_lista_insere@@Base+0x51c>
   10ff0:	add	r0, pc, r0
   10ff4:	bl	10a70 <printf@plt>
   10ff8:	ldr	lr, [fp, #-8]
   10ffc:	add	lr, lr, #1
   11000:	str	lr, [fp, #-8]
   11004:	str	r0, [fp, #-36]	; 0xffffffdc
   11008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1100c:	ldr	r0, [r0, #8]
   11010:	cmp	r0, #3
   11014:	beq	11054 <teste_lista_insere@@Base+0x120>
   11018:	ldr	r0, [fp, #-8]
   1101c:	cmp	r0, #0
   11020:	bne	11038 <teste_lista_insere@@Base+0x104>
   11024:	ldr	r0, [pc, #1140]	; 114a0 <teste_lista_insere@@Base+0x56c>
   11028:	add	r0, pc, r0
   1102c:	bl	10a70 <printf@plt>
   11030:	str	r0, [fp, #-40]	; 0xffffffd8
   11034:	b	11048 <teste_lista_insere@@Base+0x114>
   11038:	ldr	r0, [pc, #1124]	; 114a4 <teste_lista_insere@@Base+0x570>
   1103c:	add	r0, pc, r0
   11040:	bl	10a70 <printf@plt>
   11044:	str	r0, [fp, #-44]	; 0xffffffd4
   11048:	ldr	r0, [fp, #-8]
   1104c:	str	r0, [fp, #-4]
   11050:	b	11434 <teste_lista_insere@@Base+0x500>
   11054:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11058:	ldr	r0, [r0]
   1105c:	ldr	r0, [r0]
   11060:	ldr	r1, [fp, #-16]
   11064:	bl	10a64 <strcmp@plt>
   11068:	cmp	r0, #0
   1106c:	bne	110b4 <teste_lista_insere@@Base+0x180>
   11070:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11074:	ldr	r0, [r0]
   11078:	ldr	r0, [r0, #4]
   1107c:	ldr	r0, [r0]
   11080:	ldr	r1, [fp, #-20]	; 0xffffffec
   11084:	bl	10a64 <strcmp@plt>
   11088:	cmp	r0, #0
   1108c:	bne	110b4 <teste_lista_insere@@Base+0x180>
   11090:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11094:	ldr	r0, [r0]
   11098:	ldr	r0, [r0, #4]
   1109c:	ldr	r0, [r0, #4]
   110a0:	ldr	r0, [r0]
   110a4:	ldr	r1, [fp, #-16]
   110a8:	bl	10a64 <strcmp@plt>
   110ac:	cmp	r0, #0
   110b0:	beq	110d0 <teste_lista_insere@@Base+0x19c>
   110b4:	ldr	r0, [pc, #920]	; 11454 <teste_lista_insere@@Base+0x520>
   110b8:	add	r0, pc, r0
   110bc:	bl	10a70 <printf@plt>
   110c0:	ldr	lr, [fp, #-8]
   110c4:	add	lr, lr, #1
   110c8:	str	lr, [fp, #-8]
   110cc:	str	r0, [fp, #-48]	; 0xffffffd0
   110d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   110d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   110d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   110dc:	ldr	r2, [r2]
   110e0:	bl	1225c <lista_insere@@Base>
   110e4:	str	r0, [fp, #-12]
   110e8:	ldr	r0, [fp, #-12]
   110ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   110f0:	ldr	r1, [r1]
   110f4:	cmp	r0, r1
   110f8:	beq	11118 <teste_lista_insere@@Base+0x1e4>
   110fc:	ldr	r0, [pc, #852]	; 11458 <teste_lista_insere@@Base+0x524>
   11100:	add	r0, pc, r0
   11104:	bl	10a70 <printf@plt>
   11108:	ldr	lr, [fp, #-8]
   1110c:	add	lr, lr, #1
   11110:	str	lr, [fp, #-8]
   11114:	str	r0, [fp, #-52]	; 0xffffffcc
   11118:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1111c:	ldr	r0, [r0, #8]
   11120:	cmp	r0, #4
   11124:	beq	11144 <teste_lista_insere@@Base+0x210>
   11128:	ldr	r0, [pc, #812]	; 1145c <teste_lista_insere@@Base+0x528>
   1112c:	add	r0, pc, r0
   11130:	bl	10a70 <printf@plt>
   11134:	ldr	lr, [fp, #-8]
   11138:	add	lr, lr, #1
   1113c:	str	lr, [fp, #-8]
   11140:	str	r0, [fp, #-56]	; 0xffffffc8
   11144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11148:	ldr	r0, [r0, #8]
   1114c:	cmp	r0, #4
   11150:	beq	11190 <teste_lista_insere@@Base+0x25c>
   11154:	ldr	r0, [fp, #-8]
   11158:	cmp	r0, #0
   1115c:	bne	11174 <teste_lista_insere@@Base+0x240>
   11160:	ldr	r0, [pc, #816]	; 11498 <teste_lista_insere@@Base+0x564>
   11164:	add	r0, pc, r0
   11168:	bl	10a70 <printf@plt>
   1116c:	str	r0, [sp, #60]	; 0x3c
   11170:	b	11184 <teste_lista_insere@@Base+0x250>
   11174:	ldr	r0, [pc, #800]	; 1149c <teste_lista_insere@@Base+0x568>
   11178:	add	r0, pc, r0
   1117c:	bl	10a70 <printf@plt>
   11180:	str	r0, [sp, #56]	; 0x38
   11184:	ldr	r0, [fp, #-8]
   11188:	str	r0, [fp, #-4]
   1118c:	b	11434 <teste_lista_insere@@Base+0x500>
   11190:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11194:	ldr	r0, [r0]
   11198:	ldr	r0, [r0]
   1119c:	ldr	r1, [fp, #-20]	; 0xffffffec
   111a0:	bl	10a64 <strcmp@plt>
   111a4:	cmp	r0, #0
   111a8:	bne	11218 <teste_lista_insere@@Base+0x2e4>
   111ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   111b0:	ldr	r0, [r0]
   111b4:	ldr	r0, [r0, #4]
   111b8:	ldr	r0, [r0]
   111bc:	ldr	r1, [fp, #-16]
   111c0:	bl	10a64 <strcmp@plt>
   111c4:	cmp	r0, #0
   111c8:	bne	11218 <teste_lista_insere@@Base+0x2e4>
   111cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   111d0:	ldr	r0, [r0]
   111d4:	ldr	r0, [r0, #4]
   111d8:	ldr	r0, [r0, #4]
   111dc:	ldr	r0, [r0]
   111e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   111e4:	bl	10a64 <strcmp@plt>
   111e8:	cmp	r0, #0
   111ec:	bne	11218 <teste_lista_insere@@Base+0x2e4>
   111f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   111f4:	ldr	r0, [r0]
   111f8:	ldr	r0, [r0, #4]
   111fc:	ldr	r0, [r0, #4]
   11200:	ldr	r0, [r0, #4]
   11204:	ldr	r0, [r0]
   11208:	ldr	r1, [fp, #-16]
   1120c:	bl	10a64 <strcmp@plt>
   11210:	cmp	r0, #0
   11214:	beq	11234 <teste_lista_insere@@Base+0x300>
   11218:	ldr	r0, [pc, #576]	; 11460 <teste_lista_insere@@Base+0x52c>
   1121c:	add	r0, pc, r0
   11220:	bl	10a70 <printf@plt>
   11224:	ldr	lr, [fp, #-8]
   11228:	add	lr, lr, #1
   1122c:	str	lr, [fp, #-8]
   11230:	str	r0, [sp, #52]	; 0x34
   11234:	ldr	r0, [pc, #552]	; 11464 <teste_lista_insere@@Base+0x530>
   11238:	add	r1, pc, r0
   1123c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11240:	movw	r2, #0
   11244:	bl	1225c <lista_insere@@Base>
   11248:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1124c:	ldr	r1, [r1, #8]
   11250:	cmp	r1, #5
   11254:	str	r0, [sp, #48]	; 0x30
   11258:	beq	11278 <teste_lista_insere@@Base+0x344>
   1125c:	ldr	r0, [pc, #516]	; 11468 <teste_lista_insere@@Base+0x534>
   11260:	add	r0, pc, r0
   11264:	bl	10a70 <printf@plt>
   11268:	ldr	lr, [fp, #-8]
   1126c:	add	lr, lr, #1
   11270:	str	lr, [fp, #-8]
   11274:	str	r0, [sp, #44]	; 0x2c
   11278:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1127c:	ldr	r0, [r0, #8]
   11280:	cmp	r0, #5
   11284:	beq	112c4 <teste_lista_insere@@Base+0x390>
   11288:	ldr	r0, [fp, #-8]
   1128c:	cmp	r0, #0
   11290:	bne	112a8 <teste_lista_insere@@Base+0x374>
   11294:	ldr	r0, [pc, #500]	; 11490 <teste_lista_insere@@Base+0x55c>
   11298:	add	r0, pc, r0
   1129c:	bl	10a70 <printf@plt>
   112a0:	str	r0, [sp, #40]	; 0x28
   112a4:	b	112b8 <teste_lista_insere@@Base+0x384>
   112a8:	ldr	r0, [pc, #484]	; 11494 <teste_lista_insere@@Base+0x560>
   112ac:	add	r0, pc, r0
   112b0:	bl	10a70 <printf@plt>
   112b4:	str	r0, [sp, #36]	; 0x24
   112b8:	ldr	r0, [fp, #-8]
   112bc:	str	r0, [fp, #-4]
   112c0:	b	11434 <teste_lista_insere@@Base+0x500>
   112c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   112c8:	ldr	r0, [r0]
   112cc:	ldr	r0, [r0, #4]
   112d0:	ldr	r0, [r0, #4]
   112d4:	ldr	r0, [r0, #4]
   112d8:	ldr	r0, [r0, #4]
   112dc:	ldr	r0, [r0]
   112e0:	ldr	r1, [pc, #448]	; 114a8 <teste_lista_insere@@Base+0x574>
   112e4:	add	r1, pc, r1
   112e8:	bl	10a64 <strcmp@plt>
   112ec:	cmp	r0, #0
   112f0:	beq	11310 <teste_lista_insere@@Base+0x3dc>
   112f4:	ldr	r0, [pc, #368]	; 1146c <teste_lista_insere@@Base+0x538>
   112f8:	add	r0, pc, r0
   112fc:	bl	10a70 <printf@plt>
   11300:	ldr	lr, [fp, #-8]
   11304:	add	lr, lr, #1
   11308:	str	lr, [fp, #-8]
   1130c:	str	r0, [sp, #32]
   11310:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11314:	bl	120f0 <lista_apaga@@Base>
   11318:	ldr	r0, [pc, #340]	; 11474 <teste_lista_insere@@Base+0x540>
   1131c:	ldr	r0, [pc, r0]
   11320:	blx	r0
   11324:	ldr	lr, [pc, #324]	; 11470 <teste_lista_insere@@Base+0x53c>
   11328:	add	r1, pc, lr
   1132c:	str	r0, [fp, #-24]	; 0xffffffe8
   11330:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11334:	movw	r2, #0
   11338:	bl	1225c <lista_insere@@Base>
   1133c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11340:	ldr	r1, [r1, #8]
   11344:	cmp	r1, #1
   11348:	str	r0, [sp, #28]
   1134c:	beq	1136c <teste_lista_insere@@Base+0x438>
   11350:	ldr	r0, [pc, #288]	; 11478 <teste_lista_insere@@Base+0x544>
   11354:	add	r0, pc, r0
   11358:	bl	10a70 <printf@plt>
   1135c:	ldr	lr, [fp, #-8]
   11360:	add	lr, lr, #1
   11364:	str	lr, [fp, #-8]
   11368:	str	r0, [sp, #24]
   1136c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11370:	bl	121a8 <lista_tamanho@@Base>
   11374:	cmp	r0, #1
   11378:	beq	113b8 <teste_lista_insere@@Base+0x484>
   1137c:	ldr	r0, [fp, #-8]
   11380:	cmp	r0, #0
   11384:	bne	1139c <teste_lista_insere@@Base+0x468>
   11388:	ldr	r0, [pc, #248]	; 11488 <teste_lista_insere@@Base+0x554>
   1138c:	add	r0, pc, r0
   11390:	bl	10a70 <printf@plt>
   11394:	str	r0, [sp, #20]
   11398:	b	113ac <teste_lista_insere@@Base+0x478>
   1139c:	ldr	r0, [pc, #232]	; 1148c <teste_lista_insere@@Base+0x558>
   113a0:	add	r0, pc, r0
   113a4:	bl	10a70 <printf@plt>
   113a8:	str	r0, [sp, #16]
   113ac:	ldr	r0, [fp, #-8]
   113b0:	str	r0, [fp, #-4]
   113b4:	b	11434 <teste_lista_insere@@Base+0x500>
   113b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   113bc:	ldr	r0, [r0]
   113c0:	ldr	r0, [r0]
   113c4:	ldr	r1, [pc, #224]	; 114ac <teste_lista_insere@@Base+0x578>
   113c8:	add	r1, pc, r1
   113cc:	bl	10a64 <strcmp@plt>
   113d0:	cmp	r0, #0
   113d4:	beq	113f4 <teste_lista_insere@@Base+0x4c0>
   113d8:	ldr	r0, [pc, #156]	; 1147c <teste_lista_insere@@Base+0x548>
   113dc:	add	r0, pc, r0
   113e0:	bl	10a70 <printf@plt>
   113e4:	ldr	lr, [fp, #-8]
   113e8:	add	lr, lr, #1
   113ec:	str	lr, [fp, #-8]
   113f0:	str	r0, [sp, #12]
   113f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   113f8:	bl	120f0 <lista_apaga@@Base>
   113fc:	ldr	r0, [fp, #-8]
   11400:	cmp	r0, #0
   11404:	bne	1141c <teste_lista_insere@@Base+0x4e8>
   11408:	ldr	r0, [pc, #112]	; 11480 <teste_lista_insere@@Base+0x54c>
   1140c:	add	r0, pc, r0
   11410:	bl	10a70 <printf@plt>
   11414:	str	r0, [sp, #8]
   11418:	b	1142c <teste_lista_insere@@Base+0x4f8>
   1141c:	ldr	r0, [pc, #96]	; 11484 <teste_lista_insere@@Base+0x550>
   11420:	add	r0, pc, r0
   11424:	bl	10a70 <printf@plt>
   11428:	str	r0, [sp, #4]
   1142c:	ldr	r0, [fp, #-8]
   11430:	str	r0, [fp, #-4]
   11434:	ldr	r0, [fp, #-4]
   11438:	mov	sp, fp
   1143c:	pop	{fp, pc}
   11440:	andeq	r1, r0, r6, lsr #19
   11444:	ldrdeq	r1, [r0], -r0
   11448:	andeq	r1, r0, r4, asr #19
   1144c:	andeq	r1, r0, r7, ror #18
   11450:	andeq	r1, r0, r5, ror #18
   11454:	ldrdeq	r1, [r0], -r9
   11458:	andeq	r1, r0, r7, asr #17
   1145c:	andeq	r1, r0, fp, asr #17
   11460:	andeq	r1, r0, r5, ror r7
   11464:	ldrdeq	r1, [r0], -ip
   11468:	ldrdeq	r1, [r0], -r3
   1146c:	muleq	r0, r9, r6
   11470:	andeq	r1, r0, ip, ror #11
   11474:	andeq	r1, r1, r4, lsl sp
   11478:	andeq	r1, r0, fp, lsl r7
   1147c:			; <UNDEFINED> instruction: 0x000015b5
   11480:	ldrdeq	r1, [r0], -sp
   11484:	andeq	r1, r0, r8, lsl #19
   11488:	andeq	r1, r0, sp, asr r5
   1148c:	andeq	r1, r0, r8, lsl #20
   11490:	andeq	r1, r0, r1, asr r6
   11494:	strdeq	r1, [r0], -ip
   11498:	andeq	r1, r0, r5, lsl #15
   1149c:	andeq	r1, r0, r0, lsr ip
   114a0:	andeq	r1, r0, r1, asr #17
   114a4:	andeq	r1, r0, ip, ror #26
   114a8:	andeq	r1, r0, r0, lsr r6
   114ac:	andeq	r1, r0, ip, asr #10

000114b0 <teste_lista_remove@@Base>:
   114b0:	push	{fp, lr}
   114b4:	mov	fp, sp
   114b8:	sub	sp, sp, #56	; 0x38
   114bc:	ldr	r0, [pc, #536]	; 116dc <teste_lista_remove@@Base+0x22c>
   114c0:	add	r1, pc, r0
   114c4:	ldr	r0, [pc, #532]	; 116e0 <teste_lista_remove@@Base+0x230>
   114c8:	add	r2, pc, r0
   114cc:	ldr	r0, [pc, #528]	; 116e4 <teste_lista_remove@@Base+0x234>
   114d0:	add	r3, pc, r0
   114d4:	ldr	r0, [pc, #524]	; 116e8 <teste_lista_remove@@Base+0x238>
   114d8:	add	r0, pc, r0
   114dc:	ldr	ip, [pc, #520]	; 116ec <teste_lista_remove@@Base+0x23c>
   114e0:	add	ip, pc, ip
   114e4:	movw	lr, #0
   114e8:	str	lr, [fp, #-4]
   114ec:	movw	lr, #5
   114f0:	str	r0, [fp, #-16]
   114f4:	mov	r0, lr
   114f8:	ldr	lr, [fp, #-16]
   114fc:	str	lr, [sp]
   11500:	str	ip, [sp, #4]
   11504:	bl	10bd8 <_l@@Base>
   11508:	ldr	r1, [pc, #456]	; 116d8 <teste_lista_remove@@Base+0x228>
   1150c:	add	r1, pc, r1
   11510:	str	r0, [fp, #-12]
   11514:	mov	r0, r1
   11518:	bl	10a70 <printf@plt>
   1151c:	ldr	r1, [fp, #-12]
   11520:	ldr	r2, [fp, #-12]
   11524:	ldr	r2, [r2]
   11528:	ldr	r2, [r2, #4]
   1152c:	ldr	r2, [r2, #4]
   11530:	ldr	r2, [r2, #4]
   11534:	str	r0, [fp, #-20]	; 0xffffffec
   11538:	mov	r0, r1
   1153c:	mov	r1, r2
   11540:	bl	12410 <lista_remove@@Base>
   11544:	str	r0, [fp, #-8]
   11548:	ldr	r0, [fp, #-8]
   1154c:	ldr	r1, [fp, #-12]
   11550:	ldr	r1, [r1, #4]
   11554:	cmp	r0, r1
   11558:	beq	11578 <teste_lista_remove@@Base+0xc8>
   1155c:	ldr	r0, [pc, #396]	; 116f0 <teste_lista_remove@@Base+0x240>
   11560:	add	r0, pc, r0
   11564:	bl	10a70 <printf@plt>
   11568:	ldr	lr, [fp, #-4]
   1156c:	add	lr, lr, #1
   11570:	str	lr, [fp, #-4]
   11574:	str	r0, [fp, #-24]	; 0xffffffe8
   11578:	ldr	r0, [fp, #-12]
   1157c:	ldr	r0, [r0, #8]
   11580:	cmp	r0, #4
   11584:	beq	115a4 <teste_lista_remove@@Base+0xf4>
   11588:	ldr	r0, [pc, #356]	; 116f4 <teste_lista_remove@@Base+0x244>
   1158c:	add	r0, pc, r0
   11590:	bl	10a70 <printf@plt>
   11594:	ldr	lr, [fp, #-4]
   11598:	add	lr, lr, #1
   1159c:	str	lr, [fp, #-4]
   115a0:	str	r0, [sp, #28]
   115a4:	ldr	r0, [fp, #-12]
   115a8:	ldr	r0, [r0]
   115ac:	ldr	r0, [r0]
   115b0:	ldr	r1, [pc, #336]	; 11708 <teste_lista_remove@@Base+0x258>
   115b4:	add	r1, pc, r1
   115b8:	bl	10a64 <strcmp@plt>
   115bc:	cmp	r0, #0
   115c0:	bne	1163c <teste_lista_remove@@Base+0x18c>
   115c4:	ldr	r0, [fp, #-12]
   115c8:	ldr	r0, [r0]
   115cc:	ldr	r0, [r0, #4]
   115d0:	ldr	r0, [r0]
   115d4:	ldr	r1, [pc, #304]	; 1170c <teste_lista_remove@@Base+0x25c>
   115d8:	add	r1, pc, r1
   115dc:	bl	10a64 <strcmp@plt>
   115e0:	cmp	r0, #0
   115e4:	bne	1163c <teste_lista_remove@@Base+0x18c>
   115e8:	ldr	r0, [fp, #-12]
   115ec:	ldr	r0, [r0]
   115f0:	ldr	r0, [r0, #4]
   115f4:	ldr	r0, [r0, #4]
   115f8:	ldr	r0, [r0]
   115fc:	ldr	r1, [pc, #268]	; 11710 <teste_lista_remove@@Base+0x260>
   11600:	add	r1, pc, r1
   11604:	bl	10a64 <strcmp@plt>
   11608:	cmp	r0, #0
   1160c:	bne	1163c <teste_lista_remove@@Base+0x18c>
   11610:	ldr	r0, [fp, #-12]
   11614:	ldr	r0, [r0]
   11618:	ldr	r0, [r0, #4]
   1161c:	ldr	r0, [r0, #4]
   11620:	ldr	r0, [r0, #4]
   11624:	ldr	r0, [r0]
   11628:	ldr	r1, [pc, #228]	; 11714 <teste_lista_remove@@Base+0x264>
   1162c:	add	r1, pc, r1
   11630:	bl	10a64 <strcmp@plt>
   11634:	cmp	r0, #0
   11638:	beq	11658 <teste_lista_remove@@Base+0x1a8>
   1163c:	ldr	r0, [pc, #180]	; 116f8 <teste_lista_remove@@Base+0x248>
   11640:	add	r0, pc, r0
   11644:	bl	10a70 <printf@plt>
   11648:	ldr	lr, [fp, #-4]
   1164c:	add	lr, lr, #1
   11650:	str	lr, [fp, #-4]
   11654:	str	r0, [sp, #24]
   11658:	ldr	r0, [fp, #-12]
   1165c:	movw	r1, #0
   11660:	bl	12410 <lista_remove@@Base>
   11664:	str	r0, [fp, #-8]
   11668:	ldr	r0, [fp, #-8]
   1166c:	movw	r1, #0
   11670:	cmp	r0, r1
   11674:	beq	11694 <teste_lista_remove@@Base+0x1e4>
   11678:	ldr	r0, [pc, #124]	; 116fc <teste_lista_remove@@Base+0x24c>
   1167c:	add	r0, pc, r0
   11680:	bl	10a70 <printf@plt>
   11684:	ldr	lr, [fp, #-4]
   11688:	add	lr, lr, #1
   1168c:	str	lr, [fp, #-4]
   11690:	str	r0, [sp, #20]
   11694:	ldr	r0, [fp, #-12]
   11698:	bl	120f0 <lista_apaga@@Base>
   1169c:	ldr	r0, [fp, #-4]
   116a0:	cmp	r0, #0
   116a4:	bne	116bc <teste_lista_remove@@Base+0x20c>
   116a8:	ldr	r0, [pc, #80]	; 11700 <teste_lista_remove@@Base+0x250>
   116ac:	add	r0, pc, r0
   116b0:	bl	10a70 <printf@plt>
   116b4:	str	r0, [sp, #16]
   116b8:	b	116cc <teste_lista_remove@@Base+0x21c>
   116bc:	ldr	r0, [pc, #64]	; 11704 <teste_lista_remove@@Base+0x254>
   116c0:	add	r0, pc, r0
   116c4:	bl	10a70 <printf@plt>
   116c8:	str	r0, [sp, #12]
   116cc:	ldr	r0, [fp, #-4]
   116d0:	mov	sp, fp
   116d4:	pop	{fp, pc}
   116d8:	andeq	r1, r0, lr, lsr #11
   116dc:	andeq	r1, r0, fp, ror #11
   116e0:	andeq	r1, r0, r6, ror #11
   116e4:	andeq	r1, r0, r1, ror #11
   116e8:	ldrdeq	r1, [r0], -ip
   116ec:	ldrdeq	r1, [r0], -r7
   116f0:	andeq	r1, r0, fp, ror #10
   116f4:	andeq	r1, r0, r8, ror r5
   116f8:	andeq	r1, r0, r0, lsl #10
   116fc:	strdeq	r1, [r0], -sl
   11700:	andeq	r1, r0, sp, lsr r2
   11704:	andeq	r1, r0, r8, ror #13
   11708:	strdeq	r1, [r0], -r7
   1170c:	ldrdeq	r1, [r0], -r6
   11710:			; <UNDEFINED> instruction: 0x000014b1
   11714:	andeq	r1, r0, fp, lsl #9

00011718 <teste_lista_pesquisa@@Base>:
   11718:	push	{r4, r5, fp, lr}
   1171c:	add	fp, sp, #8
   11720:	sub	sp, sp, #64	; 0x40
   11724:	ldr	r0, [pc, #472]	; 11904 <teste_lista_pesquisa@@Base+0x1ec>
   11728:	add	r0, pc, r0
   1172c:	ldr	r1, [pc, #468]	; 11908 <teste_lista_pesquisa@@Base+0x1f0>
   11730:	add	r1, pc, r1
   11734:	movw	r2, #0
   11738:	str	r2, [fp, #-12]
   1173c:	str	r1, [fp, #-16]
   11740:	str	r0, [fp, #-20]	; 0xffffffec
   11744:	ldr	r1, [fp, #-16]
   11748:	ldr	r2, [fp, #-16]
   1174c:	ldr	r3, [fp, #-16]
   11750:	ldr	r0, [fp, #-16]
   11754:	ldr	ip, [fp, #-20]	; 0xffffffec
   11758:	ldr	lr, [fp, #-16]
   1175c:	ldr	r4, [fp, #-16]
   11760:	movw	r5, #7
   11764:	str	r0, [fp, #-28]	; 0xffffffe4
   11768:	mov	r0, r5
   1176c:	ldr	r5, [fp, #-28]	; 0xffffffe4
   11770:	str	r5, [sp]
   11774:	str	ip, [sp, #4]
   11778:	str	lr, [sp, #8]
   1177c:	str	r4, [sp, #12]
   11780:	bl	10bd8 <_l@@Base>
   11784:	ldr	r1, [pc, #372]	; 11900 <teste_lista_pesquisa@@Base+0x1e8>
   11788:	add	r1, pc, r1
   1178c:	str	r0, [fp, #-24]	; 0xffffffe8
   11790:	mov	r0, r1
   11794:	bl	10a70 <printf@plt>
   11798:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1179c:	ldr	r2, [fp, #-20]	; 0xffffffec
   117a0:	str	r0, [fp, #-32]	; 0xffffffe0
   117a4:	mov	r0, r1
   117a8:	mov	r1, r2
   117ac:	movw	r2, #0
   117b0:	bl	12524 <lista_pesquisa@@Base>
   117b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   117b8:	ldr	r1, [r1]
   117bc:	ldr	r1, [r1, #4]
   117c0:	ldr	r1, [r1, #4]
   117c4:	ldr	r1, [r1, #4]
   117c8:	ldr	r1, [r1, #4]
   117cc:	cmp	r0, r1
   117d0:	beq	117f0 <teste_lista_pesquisa@@Base+0xd8>
   117d4:	ldr	r0, [pc, #304]	; 1190c <teste_lista_pesquisa@@Base+0x1f4>
   117d8:	add	r0, pc, r0
   117dc:	bl	10a70 <printf@plt>
   117e0:	ldr	lr, [fp, #-12]
   117e4:	add	lr, lr, #1
   117e8:	str	lr, [fp, #-12]
   117ec:	str	r0, [sp, #36]	; 0x24
   117f0:	ldr	r0, [pc, #280]	; 11910 <teste_lista_pesquisa@@Base+0x1f8>
   117f4:	add	r1, pc, r0
   117f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   117fc:	movw	r2, #0
   11800:	bl	12524 <lista_pesquisa@@Base>
   11804:	movw	r1, #0
   11808:	cmp	r0, r1
   1180c:	beq	1182c <teste_lista_pesquisa@@Base+0x114>
   11810:	ldr	r0, [pc, #252]	; 11914 <teste_lista_pesquisa@@Base+0x1fc>
   11814:	add	r0, pc, r0
   11818:	bl	10a70 <printf@plt>
   1181c:	ldr	lr, [fp, #-12]
   11820:	add	lr, lr, #1
   11824:	str	lr, [fp, #-12]
   11828:	str	r0, [sp, #32]
   1182c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11830:	ldr	r1, [fp, #-16]
   11834:	movw	r2, #1
   11838:	bl	12524 <lista_pesquisa@@Base>
   1183c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   11840:	ldr	r1, [r1]
   11844:	ldr	r1, [r1, #4]
   11848:	ldr	r1, [r1, #4]
   1184c:	ldr	r1, [r1, #4]
   11850:	ldr	r1, [r1, #4]
   11854:	ldr	r1, [r1, #4]
   11858:	ldr	r1, [r1, #4]
   1185c:	cmp	r0, r1
   11860:	beq	11880 <teste_lista_pesquisa@@Base+0x168>
   11864:	ldr	r0, [pc, #172]	; 11918 <teste_lista_pesquisa@@Base+0x200>
   11868:	add	r0, pc, r0
   1186c:	bl	10a70 <printf@plt>
   11870:	ldr	lr, [fp, #-12]
   11874:	add	lr, lr, #1
   11878:	str	lr, [fp, #-12]
   1187c:	str	r0, [sp, #28]
   11880:	ldr	r0, [pc, #148]	; 1191c <teste_lista_pesquisa@@Base+0x204>
   11884:	add	r1, pc, r0
   11888:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1188c:	movw	r2, #1
   11890:	bl	12524 <lista_pesquisa@@Base>
   11894:	movw	r1, #0
   11898:	cmp	r0, r1
   1189c:	beq	118bc <teste_lista_pesquisa@@Base+0x1a4>
   118a0:	ldr	r0, [pc, #120]	; 11920 <teste_lista_pesquisa@@Base+0x208>
   118a4:	add	r0, pc, r0
   118a8:	bl	10a70 <printf@plt>
   118ac:	ldr	lr, [fp, #-12]
   118b0:	add	lr, lr, #1
   118b4:	str	lr, [fp, #-12]
   118b8:	str	r0, [sp, #24]
   118bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   118c0:	bl	120f0 <lista_apaga@@Base>
   118c4:	ldr	r0, [fp, #-12]
   118c8:	cmp	r0, #0
   118cc:	bne	118e4 <teste_lista_pesquisa@@Base+0x1cc>
   118d0:	ldr	r0, [pc, #76]	; 11924 <teste_lista_pesquisa@@Base+0x20c>
   118d4:	add	r0, pc, r0
   118d8:	bl	10a70 <printf@plt>
   118dc:	str	r0, [sp, #20]
   118e0:	b	118f4 <teste_lista_pesquisa@@Base+0x1dc>
   118e4:	ldr	r0, [pc, #60]	; 11928 <teste_lista_pesquisa@@Base+0x210>
   118e8:	add	r0, pc, r0
   118ec:	bl	10a70 <printf@plt>
   118f0:	str	r0, [sp, #16]
   118f4:	ldr	r0, [fp, #-12]
   118f8:	sub	sp, fp, #8
   118fc:	pop	{r4, r5, fp, pc}
   11900:	andeq	r1, r0, r3, lsr #8
   11904:	andeq	r1, r0, r0, lsl #9
   11908:	andeq	r1, r0, r0, ror #3
   1190c:	andeq	r1, r0, r6, ror #7
   11910:	andeq	r1, r0, r1, lsl r4
   11914:	strdeq	r1, [r0], -r8
   11918:	andeq	r1, r0, r6, asr r3
   1191c:	andeq	r1, r0, r1, lsl #7
   11920:	andeq	r1, r0, r8, ror #6
   11924:	andeq	r1, r0, r5, lsl r0
   11928:	andeq	r1, r0, r0, asr #9

0001192c <teste_lista_ordena@@Base>:
   1192c:	push	{fp, lr}
   11930:	mov	fp, sp
   11934:	sub	sp, sp, #56	; 0x38
   11938:	ldr	r0, [pc, #692]	; 11bf4 <teste_lista_ordena@@Base+0x2c8>
   1193c:	add	r1, pc, r0
   11940:	ldr	r0, [pc, #688]	; 11bf8 <teste_lista_ordena@@Base+0x2cc>
   11944:	add	r2, pc, r0
   11948:	ldr	r0, [pc, #684]	; 11bfc <teste_lista_ordena@@Base+0x2d0>
   1194c:	add	r3, pc, r0
   11950:	ldr	r0, [pc, #680]	; 11c00 <teste_lista_ordena@@Base+0x2d4>
   11954:	add	r0, pc, r0
   11958:	ldr	ip, [pc, #676]	; 11c04 <teste_lista_ordena@@Base+0x2d8>
   1195c:	add	ip, pc, ip
   11960:	movw	lr, #0
   11964:	str	lr, [fp, #-4]
   11968:	movw	lr, #5
   1196c:	str	r0, [fp, #-16]
   11970:	mov	r0, lr
   11974:	ldr	lr, [fp, #-16]
   11978:	str	lr, [sp]
   1197c:	str	ip, [sp, #4]
   11980:	bl	10bd8 <_l@@Base>
   11984:	ldr	r1, [pc, #612]	; 11bf0 <teste_lista_ordena@@Base+0x2c4>
   11988:	add	r1, pc, r1
   1198c:	str	r0, [fp, #-12]
   11990:	mov	r0, r1
   11994:	bl	10a70 <printf@plt>
   11998:	movw	r1, #0
   1199c:	str	r0, [fp, #-20]	; 0xffffffec
   119a0:	mov	r0, r1
   119a4:	bl	12660 <lista_ordena@@Base>
   119a8:	str	r0, [fp, #-8]
   119ac:	ldr	r0, [fp, #-8]
   119b0:	cmn	r0, #1
   119b4:	beq	119d4 <teste_lista_ordena@@Base+0xa8>
   119b8:	ldr	r0, [pc, #584]	; 11c08 <teste_lista_ordena@@Base+0x2dc>
   119bc:	add	r0, pc, r0
   119c0:	bl	10a70 <printf@plt>
   119c4:	ldr	lr, [fp, #-4]
   119c8:	add	lr, lr, #1
   119cc:	str	lr, [fp, #-4]
   119d0:	str	r0, [fp, #-24]	; 0xffffffe8
   119d4:	ldr	r0, [fp, #-12]
   119d8:	bl	12660 <lista_ordena@@Base>
   119dc:	ldr	lr, [fp, #-12]
   119e0:	ldr	lr, [lr]
   119e4:	ldr	lr, [lr]
   119e8:	ldr	r1, [pc, #556]	; 11c1c <teste_lista_ordena@@Base+0x2f0>
   119ec:	add	r1, pc, r1
   119f0:	str	r0, [sp, #28]
   119f4:	mov	r0, lr
   119f8:	bl	10a64 <strcmp@plt>
   119fc:	cmp	r0, #0
   11a00:	bne	11aac <teste_lista_ordena@@Base+0x180>
   11a04:	ldr	r0, [fp, #-12]
   11a08:	ldr	r0, [r0]
   11a0c:	ldr	r0, [r0, #4]
   11a10:	ldr	r0, [r0]
   11a14:	ldr	r1, [pc, #516]	; 11c20 <teste_lista_ordena@@Base+0x2f4>
   11a18:	add	r1, pc, r1
   11a1c:	bl	10a64 <strcmp@plt>
   11a20:	cmp	r0, #0
   11a24:	bne	11aac <teste_lista_ordena@@Base+0x180>
   11a28:	ldr	r0, [fp, #-12]
   11a2c:	ldr	r0, [r0]
   11a30:	ldr	r0, [r0, #4]
   11a34:	ldr	r0, [r0, #4]
   11a38:	ldr	r0, [r0]
   11a3c:	ldr	r1, [pc, #480]	; 11c24 <teste_lista_ordena@@Base+0x2f8>
   11a40:	add	r1, pc, r1
   11a44:	bl	10a64 <strcmp@plt>
   11a48:	cmp	r0, #0
   11a4c:	bne	11aac <teste_lista_ordena@@Base+0x180>
   11a50:	ldr	r0, [fp, #-12]
   11a54:	ldr	r0, [r0]
   11a58:	ldr	r0, [r0, #4]
   11a5c:	ldr	r0, [r0, #4]
   11a60:	ldr	r0, [r0, #4]
   11a64:	ldr	r0, [r0]
   11a68:	ldr	r1, [pc, #440]	; 11c28 <teste_lista_ordena@@Base+0x2fc>
   11a6c:	add	r1, pc, r1
   11a70:	bl	10a64 <strcmp@plt>
   11a74:	cmp	r0, #0
   11a78:	bne	11aac <teste_lista_ordena@@Base+0x180>
   11a7c:	ldr	r0, [fp, #-12]
   11a80:	ldr	r0, [r0]
   11a84:	ldr	r0, [r0, #4]
   11a88:	ldr	r0, [r0, #4]
   11a8c:	ldr	r0, [r0, #4]
   11a90:	ldr	r0, [r0, #4]
   11a94:	ldr	r0, [r0]
   11a98:	ldr	r1, [pc, #396]	; 11c2c <teste_lista_ordena@@Base+0x300>
   11a9c:	add	r1, pc, r1
   11aa0:	bl	10a64 <strcmp@plt>
   11aa4:	cmp	r0, #0
   11aa8:	beq	11ac8 <teste_lista_ordena@@Base+0x19c>
   11aac:	ldr	r0, [pc, #344]	; 11c0c <teste_lista_ordena@@Base+0x2e0>
   11ab0:	add	r0, pc, r0
   11ab4:	bl	10a70 <printf@plt>
   11ab8:	ldr	lr, [fp, #-4]
   11abc:	add	lr, lr, #1
   11ac0:	str	lr, [fp, #-4]
   11ac4:	str	r0, [sp, #24]
   11ac8:	ldr	r0, [fp, #-12]
   11acc:	ldr	r0, [r0, #4]
   11ad0:	ldr	r0, [r0]
   11ad4:	ldr	r1, [pc, #340]	; 11c30 <teste_lista_ordena@@Base+0x304>
   11ad8:	add	r1, pc, r1
   11adc:	bl	10a64 <strcmp@plt>
   11ae0:	cmp	r0, #0
   11ae4:	bne	11b90 <teste_lista_ordena@@Base+0x264>
   11ae8:	ldr	r0, [fp, #-12]
   11aec:	ldr	r0, [r0, #4]
   11af0:	ldr	r0, [r0, #8]
   11af4:	ldr	r0, [r0]
   11af8:	ldr	r1, [pc, #308]	; 11c34 <teste_lista_ordena@@Base+0x308>
   11afc:	add	r1, pc, r1
   11b00:	bl	10a64 <strcmp@plt>
   11b04:	cmp	r0, #0
   11b08:	bne	11b90 <teste_lista_ordena@@Base+0x264>
   11b0c:	ldr	r0, [fp, #-12]
   11b10:	ldr	r0, [r0, #4]
   11b14:	ldr	r0, [r0, #8]
   11b18:	ldr	r0, [r0, #8]
   11b1c:	ldr	r0, [r0]
   11b20:	ldr	r1, [pc, #272]	; 11c38 <teste_lista_ordena@@Base+0x30c>
   11b24:	add	r1, pc, r1
   11b28:	bl	10a64 <strcmp@plt>
   11b2c:	cmp	r0, #0
   11b30:	bne	11b90 <teste_lista_ordena@@Base+0x264>
   11b34:	ldr	r0, [fp, #-12]
   11b38:	ldr	r0, [r0, #4]
   11b3c:	ldr	r0, [r0, #8]
   11b40:	ldr	r0, [r0, #8]
   11b44:	ldr	r0, [r0, #8]
   11b48:	ldr	r0, [r0]
   11b4c:	ldr	r1, [pc, #232]	; 11c3c <teste_lista_ordena@@Base+0x310>
   11b50:	add	r1, pc, r1
   11b54:	bl	10a64 <strcmp@plt>
   11b58:	cmp	r0, #0
   11b5c:	bne	11b90 <teste_lista_ordena@@Base+0x264>
   11b60:	ldr	r0, [fp, #-12]
   11b64:	ldr	r0, [r0, #4]
   11b68:	ldr	r0, [r0, #8]
   11b6c:	ldr	r0, [r0, #8]
   11b70:	ldr	r0, [r0, #8]
   11b74:	ldr	r0, [r0, #8]
   11b78:	ldr	r0, [r0]
   11b7c:	ldr	r1, [pc, #188]	; 11c40 <teste_lista_ordena@@Base+0x314>
   11b80:	add	r1, pc, r1
   11b84:	bl	10a64 <strcmp@plt>
   11b88:	cmp	r0, #0
   11b8c:	beq	11bac <teste_lista_ordena@@Base+0x280>
   11b90:	ldr	r0, [pc, #120]	; 11c10 <teste_lista_ordena@@Base+0x2e4>
   11b94:	add	r0, pc, r0
   11b98:	bl	10a70 <printf@plt>
   11b9c:	ldr	lr, [fp, #-4]
   11ba0:	add	lr, lr, #1
   11ba4:	str	lr, [fp, #-4]
   11ba8:	str	r0, [sp, #20]
   11bac:	ldr	r0, [fp, #-12]
   11bb0:	bl	120f0 <lista_apaga@@Base>
   11bb4:	ldr	r0, [fp, #-4]
   11bb8:	cmp	r0, #0
   11bbc:	bne	11bd4 <teste_lista_ordena@@Base+0x2a8>
   11bc0:	ldr	r0, [pc, #76]	; 11c14 <teste_lista_ordena@@Base+0x2e8>
   11bc4:	add	r0, pc, r0
   11bc8:	bl	10a70 <printf@plt>
   11bcc:	str	r0, [sp, #16]
   11bd0:	b	11be4 <teste_lista_ordena@@Base+0x2b8>
   11bd4:	ldr	r0, [pc, #60]	; 11c18 <teste_lista_ordena@@Base+0x2ec>
   11bd8:	add	r0, pc, r0
   11bdc:	bl	10a70 <printf@plt>
   11be0:	str	r0, [sp, #12]
   11be4:	ldr	r0, [fp, #-4]
   11be8:	mov	sp, fp
   11bec:	pop	{fp, pc}
   11bf0:	ldrdeq	r1, [r0], -r3
   11bf4:	andeq	r1, r0, r0, lsl r3
   11bf8:	andeq	r1, r0, fp, lsl #6
   11bfc:	andeq	r1, r0, r6, lsl #6
   11c00:	andeq	r1, r0, r1, lsl #6
   11c04:	strdeq	r1, [r0], -ip
   11c08:			; <UNDEFINED> instruction: 0x000012b0
   11c0c:	andeq	r1, r0, sl, ror #3
   11c10:	andeq	r1, r0, r3, asr #2
   11c14:	andeq	r0, r0, r5, lsr #26
   11c18:	ldrdeq	r1, [r0], -r0
   11c1c:	andeq	r1, r0, r0, ror #4
   11c20:	andeq	r1, r0, r7, lsr r2
   11c24:	andeq	r1, r0, r5, lsl r2
   11c28:	andeq	r1, r0, ip, ror #3
   11c2c:			; <UNDEFINED> instruction: 0x000011b6
   11c30:	andeq	r1, r0, sl, ror r1
   11c34:	andeq	r1, r0, ip, asr r1
   11c38:	andeq	r1, r0, r1, lsr r1
   11c3c:	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   11c40:	andeq	r1, r0, ip, asr #1

00011c44 <teste_lista_inverte@@Base>:
   11c44:	push	{fp, lr}
   11c48:	mov	fp, sp
   11c4c:	sub	sp, sp, #56	; 0x38
   11c50:	ldr	r0, [pc, #732]	; 11f34 <teste_lista_inverte@@Base+0x2f0>
   11c54:	add	r1, pc, r0
   11c58:	ldr	r0, [pc, #728]	; 11f38 <teste_lista_inverte@@Base+0x2f4>
   11c5c:	add	r2, pc, r0
   11c60:	ldr	r0, [pc, #724]	; 11f3c <teste_lista_inverte@@Base+0x2f8>
   11c64:	add	r3, pc, r0
   11c68:	ldr	r0, [pc, #720]	; 11f40 <teste_lista_inverte@@Base+0x2fc>
   11c6c:	add	r0, pc, r0
   11c70:	ldr	ip, [pc, #716]	; 11f44 <teste_lista_inverte@@Base+0x300>
   11c74:	add	ip, pc, ip
   11c78:	movw	lr, #0
   11c7c:	str	lr, [fp, #-4]
   11c80:	movw	lr, #5
   11c84:	str	r0, [fp, #-16]
   11c88:	mov	r0, lr
   11c8c:	ldr	lr, [fp, #-16]
   11c90:	str	lr, [sp]
   11c94:	str	ip, [sp, #4]
   11c98:	bl	10bd8 <_l@@Base>
   11c9c:	ldr	r1, [pc, #652]	; 11f30 <teste_lista_inverte@@Base+0x2ec>
   11ca0:	add	r1, pc, r1
   11ca4:	str	r0, [fp, #-12]
   11ca8:	mov	r0, r1
   11cac:	bl	10a70 <printf@plt>
   11cb0:	movw	r1, #0
   11cb4:	str	r0, [fp, #-20]	; 0xffffffec
   11cb8:	mov	r0, r1
   11cbc:	bl	12768 <lista_inverte@@Base>
   11cc0:	str	r0, [fp, #-8]
   11cc4:	ldr	r0, [fp, #-8]
   11cc8:	cmn	r0, #1
   11ccc:	beq	11cec <teste_lista_inverte@@Base+0xa8>
   11cd0:	ldr	r0, [pc, #624]	; 11f48 <teste_lista_inverte@@Base+0x304>
   11cd4:	add	r0, pc, r0
   11cd8:	bl	10a70 <printf@plt>
   11cdc:	ldr	lr, [fp, #-4]
   11ce0:	add	lr, lr, #1
   11ce4:	str	lr, [fp, #-4]
   11ce8:	str	r0, [fp, #-24]	; 0xffffffe8
   11cec:	ldr	r0, [fp, #-12]
   11cf0:	bl	12768 <lista_inverte@@Base>
   11cf4:	str	r0, [fp, #-8]
   11cf8:	ldr	r0, [fp, #-12]
   11cfc:	ldr	r0, [r0, #8]
   11d00:	cmp	r0, #5
   11d04:	beq	11d24 <teste_lista_inverte@@Base+0xe0>
   11d08:	ldr	r0, [pc, #572]	; 11f4c <teste_lista_inverte@@Base+0x308>
   11d0c:	add	r0, pc, r0
   11d10:	bl	10a70 <printf@plt>
   11d14:	ldr	lr, [fp, #-4]
   11d18:	add	lr, lr, #1
   11d1c:	str	lr, [fp, #-4]
   11d20:	str	r0, [sp, #28]
   11d24:	ldr	r0, [fp, #-12]
   11d28:	ldr	r0, [r0]
   11d2c:	ldr	r0, [r0]
   11d30:	ldr	r1, [pc, #552]	; 11f60 <teste_lista_inverte@@Base+0x31c>
   11d34:	add	r1, pc, r1
   11d38:	bl	10a64 <strcmp@plt>
   11d3c:	cmp	r0, #0
   11d40:	bne	11dec <teste_lista_inverte@@Base+0x1a8>
   11d44:	ldr	r0, [fp, #-12]
   11d48:	ldr	r0, [r0]
   11d4c:	ldr	r0, [r0, #4]
   11d50:	ldr	r0, [r0]
   11d54:	ldr	r1, [pc, #520]	; 11f64 <teste_lista_inverte@@Base+0x320>
   11d58:	add	r1, pc, r1
   11d5c:	bl	10a64 <strcmp@plt>
   11d60:	cmp	r0, #0
   11d64:	bne	11dec <teste_lista_inverte@@Base+0x1a8>
   11d68:	ldr	r0, [fp, #-12]
   11d6c:	ldr	r0, [r0]
   11d70:	ldr	r0, [r0, #4]
   11d74:	ldr	r0, [r0, #4]
   11d78:	ldr	r0, [r0]
   11d7c:	ldr	r1, [pc, #484]	; 11f68 <teste_lista_inverte@@Base+0x324>
   11d80:	add	r1, pc, r1
   11d84:	bl	10a64 <strcmp@plt>
   11d88:	cmp	r0, #0
   11d8c:	bne	11dec <teste_lista_inverte@@Base+0x1a8>
   11d90:	ldr	r0, [fp, #-12]
   11d94:	ldr	r0, [r0]
   11d98:	ldr	r0, [r0, #4]
   11d9c:	ldr	r0, [r0, #4]
   11da0:	ldr	r0, [r0, #4]
   11da4:	ldr	r0, [r0]
   11da8:	ldr	r1, [pc, #444]	; 11f6c <teste_lista_inverte@@Base+0x328>
   11dac:	add	r1, pc, r1
   11db0:	bl	10a64 <strcmp@plt>
   11db4:	cmp	r0, #0
   11db8:	bne	11dec <teste_lista_inverte@@Base+0x1a8>
   11dbc:	ldr	r0, [fp, #-12]
   11dc0:	ldr	r0, [r0]
   11dc4:	ldr	r0, [r0, #4]
   11dc8:	ldr	r0, [r0, #4]
   11dcc:	ldr	r0, [r0, #4]
   11dd0:	ldr	r0, [r0, #4]
   11dd4:	ldr	r0, [r0]
   11dd8:	ldr	r1, [pc, #400]	; 11f70 <teste_lista_inverte@@Base+0x32c>
   11ddc:	add	r1, pc, r1
   11de0:	bl	10a64 <strcmp@plt>
   11de4:	cmp	r0, #0
   11de8:	beq	11e08 <teste_lista_inverte@@Base+0x1c4>
   11dec:	ldr	r0, [pc, #348]	; 11f50 <teste_lista_inverte@@Base+0x30c>
   11df0:	add	r0, pc, r0
   11df4:	bl	10a70 <printf@plt>
   11df8:	ldr	lr, [fp, #-4]
   11dfc:	add	lr, lr, #1
   11e00:	str	lr, [fp, #-4]
   11e04:	str	r0, [sp, #24]
   11e08:	ldr	r0, [fp, #-12]
   11e0c:	ldr	r0, [r0, #4]
   11e10:	ldr	r0, [r0]
   11e14:	ldr	r1, [pc, #344]	; 11f74 <teste_lista_inverte@@Base+0x330>
   11e18:	add	r1, pc, r1
   11e1c:	bl	10a64 <strcmp@plt>
   11e20:	cmp	r0, #0
   11e24:	bne	11ed0 <teste_lista_inverte@@Base+0x28c>
   11e28:	ldr	r0, [fp, #-12]
   11e2c:	ldr	r0, [r0, #4]
   11e30:	ldr	r0, [r0, #8]
   11e34:	ldr	r0, [r0]
   11e38:	ldr	r1, [pc, #312]	; 11f78 <teste_lista_inverte@@Base+0x334>
   11e3c:	add	r1, pc, r1
   11e40:	bl	10a64 <strcmp@plt>
   11e44:	cmp	r0, #0
   11e48:	bne	11ed0 <teste_lista_inverte@@Base+0x28c>
   11e4c:	ldr	r0, [fp, #-12]
   11e50:	ldr	r0, [r0, #4]
   11e54:	ldr	r0, [r0, #8]
   11e58:	ldr	r0, [r0, #8]
   11e5c:	ldr	r0, [r0]
   11e60:	ldr	r1, [pc, #276]	; 11f7c <teste_lista_inverte@@Base+0x338>
   11e64:	add	r1, pc, r1
   11e68:	bl	10a64 <strcmp@plt>
   11e6c:	cmp	r0, #0
   11e70:	bne	11ed0 <teste_lista_inverte@@Base+0x28c>
   11e74:	ldr	r0, [fp, #-12]
   11e78:	ldr	r0, [r0, #4]
   11e7c:	ldr	r0, [r0, #8]
   11e80:	ldr	r0, [r0, #8]
   11e84:	ldr	r0, [r0, #8]
   11e88:	ldr	r0, [r0]
   11e8c:	ldr	r1, [pc, #236]	; 11f80 <teste_lista_inverte@@Base+0x33c>
   11e90:	add	r1, pc, r1
   11e94:	bl	10a64 <strcmp@plt>
   11e98:	cmp	r0, #0
   11e9c:	bne	11ed0 <teste_lista_inverte@@Base+0x28c>
   11ea0:	ldr	r0, [fp, #-12]
   11ea4:	ldr	r0, [r0, #4]
   11ea8:	ldr	r0, [r0, #8]
   11eac:	ldr	r0, [r0, #8]
   11eb0:	ldr	r0, [r0, #8]
   11eb4:	ldr	r0, [r0, #8]
   11eb8:	ldr	r0, [r0]
   11ebc:	ldr	r1, [pc, #192]	; 11f84 <teste_lista_inverte@@Base+0x340>
   11ec0:	add	r1, pc, r1
   11ec4:	bl	10a64 <strcmp@plt>
   11ec8:	cmp	r0, #0
   11ecc:	beq	11eec <teste_lista_inverte@@Base+0x2a8>
   11ed0:	ldr	r0, [pc, #124]	; 11f54 <teste_lista_inverte@@Base+0x310>
   11ed4:	add	r0, pc, r0
   11ed8:	bl	10a70 <printf@plt>
   11edc:	ldr	lr, [fp, #-4]
   11ee0:	add	lr, lr, #1
   11ee4:	str	lr, [fp, #-4]
   11ee8:	str	r0, [sp, #20]
   11eec:	ldr	r0, [fp, #-12]
   11ef0:	bl	120f0 <lista_apaga@@Base>
   11ef4:	ldr	r0, [fp, #-4]
   11ef8:	cmp	r0, #0
   11efc:	bne	11f14 <teste_lista_inverte@@Base+0x2d0>
   11f00:	ldr	r0, [pc, #80]	; 11f58 <teste_lista_inverte@@Base+0x314>
   11f04:	add	r0, pc, r0
   11f08:	bl	10a70 <printf@plt>
   11f0c:	str	r0, [sp, #16]
   11f10:	b	11f24 <teste_lista_inverte@@Base+0x2e0>
   11f14:	ldr	r0, [pc, #64]	; 11f5c <teste_lista_inverte@@Base+0x318>
   11f18:	add	r0, pc, r0
   11f1c:	bl	10a70 <printf@plt>
   11f20:	str	r0, [sp, #12]
   11f24:	ldr	r0, [fp, #-4]
   11f28:	mov	sp, fp
   11f2c:	pop	{fp, pc}
   11f30:	andeq	r1, r0, r5, ror r0
   11f34:	strdeq	r0, [r0], -r8
   11f38:	strdeq	r0, [r0], -r3
   11f3c:	andeq	r0, r0, lr, ror #31
   11f40:	andeq	r0, r0, r9, ror #31
   11f44:	andeq	r0, r0, r4, ror #31
   11f48:	muleq	r0, r8, pc	; <UNPREDICTABLE>
   11f4c:	andeq	r1, r0, fp, lsl r0
   11f50:	andeq	r0, r0, r3, ror #30
   11f54:	andeq	r0, r0, r3, lsl #28
   11f58:	andeq	r0, r0, r5, ror #19
   11f5c:	muleq	r0, r0, lr
   11f60:	andeq	r0, r0, r4, lsr #30
   11f64:	strdeq	r0, [r0], -sp
   11f68:	ldrdeq	r0, [r0], -r2
   11f6c:	andeq	r0, r0, r3, lsr #29
   11f70:	andeq	r0, r0, r0, ror lr
   11f74:	andeq	r0, r0, r4, lsr lr
   11f78:	andeq	r0, r0, r3, lsl lr
   11f7c:	andeq	r0, r0, lr, ror #27
   11f80:	andeq	r0, r0, r5, asr #27
   11f84:	muleq	r0, r8, sp

00011f88 <main@@Base>:
   11f88:	push	{fp, lr}
   11f8c:	mov	fp, sp
   11f90:	sub	sp, sp, #32
   11f94:	ldr	r0, [pc, #244]	; 12090 <main@@Base+0x108>
   11f98:	ldr	r0, [pc, r0]
   11f9c:	movw	r1, #0
   11fa0:	str	r1, [fp, #-4]
   11fa4:	ldr	r0, [r0]
   11fa8:	str	r1, [fp, #-12]
   11fac:	movw	r2, #2
   11fb0:	ldr	r3, [fp, #-12]
   11fb4:	bl	10ad0 <setvbuf@plt>
   11fb8:	ldr	r1, [pc, #204]	; 1208c <main@@Base+0x104>
   11fbc:	ldr	r1, [pc, r1]
   11fc0:	ldr	r1, [r1]
   11fc4:	str	r0, [sp, #16]
   11fc8:	mov	r0, r1
   11fcc:	movw	r1, #0
   11fd0:	str	r1, [sp, #12]
   11fd4:	movw	r2, #2
   11fd8:	ldr	r3, [sp, #12]
   11fdc:	bl	10ad0 <setvbuf@plt>
   11fe0:	movw	r1, #0
   11fe4:	str	r1, [fp, #-8]
   11fe8:	str	r0, [sp, #8]
   11fec:	bl	10e00 <teste_lista_nova@@Base>
   11ff0:	ldr	r1, [fp, #-8]
   11ff4:	add	r0, r1, r0
   11ff8:	str	r0, [fp, #-8]
   11ffc:	bl	10f34 <teste_lista_insere@@Base>
   12000:	ldr	r1, [fp, #-8]
   12004:	add	r0, r1, r0
   12008:	str	r0, [fp, #-8]
   1200c:	bl	114b0 <teste_lista_remove@@Base>
   12010:	ldr	r1, [fp, #-8]
   12014:	add	r0, r1, r0
   12018:	str	r0, [fp, #-8]
   1201c:	bl	11718 <teste_lista_pesquisa@@Base>
   12020:	ldr	r1, [fp, #-8]
   12024:	add	r0, r1, r0
   12028:	str	r0, [fp, #-8]
   1202c:	bl	1192c <teste_lista_ordena@@Base>
   12030:	ldr	r1, [fp, #-8]
   12034:	add	r0, r1, r0
   12038:	str	r0, [fp, #-8]
   1203c:	bl	11c44 <teste_lista_inverte@@Base>
   12040:	ldr	r1, [fp, #-8]
   12044:	add	r0, r1, r0
   12048:	str	r0, [fp, #-8]
   1204c:	ldr	r0, [fp, #-8]
   12050:	cmp	r0, #0
   12054:	bne	1206c <main@@Base+0xe4>
   12058:	ldr	r0, [pc, #52]	; 12094 <main@@Base+0x10c>
   1205c:	add	r0, pc, r0
   12060:	bl	10a70 <printf@plt>
   12064:	str	r0, [sp, #4]
   12068:	b	12080 <main@@Base+0xf8>
   1206c:	ldr	r0, [pc, #36]	; 12098 <main@@Base+0x110>
   12070:	add	r0, pc, r0
   12074:	ldr	r1, [fp, #-8]
   12078:	bl	10a70 <printf@plt>
   1207c:	str	r0, [sp]
   12080:	movw	r0, #0
   12084:	mov	sp, fp
   12088:	pop	{fp, pc}
   1208c:	andeq	r1, r1, r8, ror r0
   12090:	andeq	r1, r1, r4, lsr #1
   12094:	andeq	r0, r0, r5, lsr sp
   12098:	andeq	r0, r0, sl, lsr sp

0001209c <lista_nova@@Base>:
   1209c:	push	{fp, lr}
   120a0:	mov	fp, sp
   120a4:	sub	sp, sp, #8
   120a8:	movw	r0, #12
   120ac:	bl	10aa0 <malloc@plt>
   120b0:	str	r0, [sp]
   120b4:	ldr	r0, [sp]
   120b8:	movw	lr, #0
   120bc:	cmp	r0, lr
   120c0:	bne	120d0 <lista_nova@@Base+0x34>
   120c4:	movw	r0, #0
   120c8:	str	r0, [sp, #4]
   120cc:	b	120e4 <lista_nova@@Base+0x48>
   120d0:	ldr	r0, [sp]
   120d4:	movw	r1, #0
   120d8:	str	r1, [r0, #8]
   120dc:	ldr	r0, [sp]
   120e0:	str	r0, [sp, #4]
   120e4:	ldr	r0, [sp, #4]
   120e8:	mov	sp, fp
   120ec:	pop	{fp, pc}

000120f0 <lista_apaga@@Base>:
   120f0:	push	{fp, lr}
   120f4:	mov	fp, sp
   120f8:	sub	sp, sp, #16
   120fc:	str	r0, [fp, #-4]
   12100:	ldr	r0, [fp, #-4]
   12104:	movw	r1, #0
   12108:	cmp	r0, r1
   1210c:	bne	12114 <lista_apaga@@Base+0x24>
   12110:	b	121a0 <lista_apaga@@Base+0xb0>
   12114:	ldr	r0, [fp, #-4]
   12118:	bl	121a8 <lista_tamanho@@Base>
   1211c:	cmp	r0, #0
   12120:	bne	12130 <lista_apaga@@Base+0x40>
   12124:	ldr	r0, [fp, #-4]
   12128:	bl	10a7c <free@plt>
   1212c:	b	121a0 <lista_apaga@@Base+0xb0>
   12130:	ldr	r0, [fp, #-4]
   12134:	ldr	r0, [r0]
   12138:	str	r0, [sp, #8]
   1213c:	ldr	r0, [sp, #8]
   12140:	movw	r1, #0
   12144:	cmp	r0, r1
   12148:	beq	12198 <lista_apaga@@Base+0xa8>
   1214c:	ldr	r0, [sp, #8]
   12150:	ldr	r0, [r0, #4]
   12154:	str	r0, [sp, #4]
   12158:	ldr	r0, [sp, #4]
   1215c:	movw	r1, #0
   12160:	cmp	r0, r1
   12164:	beq	12194 <lista_apaga@@Base+0xa4>
   12168:	ldr	r0, [sp, #8]
   1216c:	ldr	r0, [r0, #4]
   12170:	str	r0, [sp, #4]
   12174:	ldr	r0, [sp, #8]
   12178:	ldr	r0, [r0]
   1217c:	bl	10a7c <free@plt>
   12180:	ldr	r0, [sp, #8]
   12184:	bl	10a7c <free@plt>
   12188:	ldr	r0, [sp, #4]
   1218c:	str	r0, [sp, #8]
   12190:	b	12158 <lista_apaga@@Base+0x68>
   12194:	b	12198 <lista_apaga@@Base+0xa8>
   12198:	ldr	r0, [fp, #-4]
   1219c:	bl	10a7c <free@plt>
   121a0:	mov	sp, fp
   121a4:	pop	{fp, pc}

000121a8 <lista_tamanho@@Base>:
   121a8:	sub	sp, sp, #8
   121ac:	str	r0, [sp]
   121b0:	ldr	r0, [sp]
   121b4:	movw	r1, #0
   121b8:	cmp	r0, r1
   121bc:	bne	121cc <lista_tamanho@@Base+0x24>
   121c0:	mvn	r0, #0
   121c4:	str	r0, [sp, #4]
   121c8:	b	121d8 <lista_tamanho@@Base+0x30>
   121cc:	ldr	r0, [sp]
   121d0:	ldr	r0, [r0, #8]
   121d4:	str	r0, [sp, #4]
   121d8:	ldr	r0, [sp, #4]
   121dc:	add	sp, sp, #8
   121e0:	bx	lr

000121e4 <lista_inicio@@Base>:
   121e4:	sub	sp, sp, #8
   121e8:	str	r0, [sp]
   121ec:	ldr	r0, [sp]
   121f0:	movw	r1, #0
   121f4:	cmp	r0, r1
   121f8:	bne	12208 <lista_inicio@@Base+0x24>
   121fc:	movw	r0, #0
   12200:	str	r0, [sp, #4]
   12204:	b	12214 <lista_inicio@@Base+0x30>
   12208:	ldr	r0, [sp]
   1220c:	ldr	r0, [r0]
   12210:	str	r0, [sp, #4]
   12214:	ldr	r0, [sp, #4]
   12218:	add	sp, sp, #8
   1221c:	bx	lr

00012220 <lista_fim@@Base>:
   12220:	sub	sp, sp, #8
   12224:	str	r0, [sp]
   12228:	ldr	r0, [sp]
   1222c:	movw	r1, #0
   12230:	cmp	r0, r1
   12234:	bne	12244 <lista_fim@@Base+0x24>
   12238:	movw	r0, #0
   1223c:	str	r0, [sp, #4]
   12240:	b	12250 <lista_fim@@Base+0x30>
   12244:	ldr	r0, [sp]
   12248:	ldr	r0, [r0, #4]
   1224c:	str	r0, [sp, #4]
   12250:	ldr	r0, [sp, #4]
   12254:	add	sp, sp, #8
   12258:	bx	lr

0001225c <lista_insere@@Base>:
   1225c:	push	{fp, lr}
   12260:	mov	fp, sp
   12264:	sub	sp, sp, #32
   12268:	str	r0, [fp, #-8]
   1226c:	str	r1, [fp, #-12]
   12270:	str	r2, [sp, #16]
   12274:	ldr	r0, [fp, #-8]
   12278:	movw	r1, #0
   1227c:	cmp	r0, r1
   12280:	bne	12290 <lista_insere@@Base+0x34>
   12284:	movw	r0, #0
   12288:	str	r0, [fp, #-4]
   1228c:	b	12404 <lista_insere@@Base+0x1a8>
   12290:	mov	r0, #12
   12294:	bl	10aa0 <malloc@plt>
   12298:	str	r0, [sp, #12]
   1229c:	ldr	r0, [fp, #-12]
   122a0:	bl	10ac4 <strlen@plt>
   122a4:	add	r0, r0, #1
   122a8:	mov	lr, r0
   122ac:	str	lr, [sp, #8]
   122b0:	bl	10aa0 <malloc@plt>
   122b4:	ldr	lr, [sp, #12]
   122b8:	str	r0, [lr]
   122bc:	ldr	r0, [sp, #12]
   122c0:	ldr	r0, [r0]
   122c4:	ldr	r1, [fp, #-12]
   122c8:	bl	10a94 <strcpy@plt>
   122cc:	ldr	r1, [fp, #-8]
   122d0:	ldr	r1, [r1, #8]
   122d4:	cmp	r1, #0
   122d8:	str	r0, [sp, #4]
   122dc:	bne	12310 <lista_insere@@Base+0xb4>
   122e0:	ldr	r0, [sp, #12]
   122e4:	movw	r1, #0
   122e8:	str	r1, [r0, #8]
   122ec:	ldr	r0, [sp, #12]
   122f0:	str	r1, [r0, #4]
   122f4:	ldr	r0, [sp, #12]
   122f8:	ldr	r1, [fp, #-8]
   122fc:	str	r0, [r1]
   12300:	ldr	r0, [sp, #12]
   12304:	ldr	r1, [fp, #-8]
   12308:	str	r0, [r1, #4]
   1230c:	b	123ec <lista_insere@@Base+0x190>
   12310:	ldr	r0, [sp, #16]
   12314:	movw	r1, #0
   12318:	cmp	r0, r1
   1231c:	bne	1235c <lista_insere@@Base+0x100>
   12320:	ldr	r0, [sp, #12]
   12324:	movw	r1, #0
   12328:	str	r1, [r0, #4]
   1232c:	ldr	r0, [fp, #-8]
   12330:	ldr	r0, [r0, #4]
   12334:	ldr	r1, [sp, #12]
   12338:	str	r0, [r1, #8]
   1233c:	ldr	r0, [sp, #12]
   12340:	ldr	r1, [fp, #-8]
   12344:	ldr	r1, [r1, #4]
   12348:	str	r0, [r1, #4]
   1234c:	ldr	r0, [sp, #12]
   12350:	ldr	r1, [fp, #-8]
   12354:	str	r0, [r1, #4]
   12358:	b	123e8 <lista_insere@@Base+0x18c>
   1235c:	ldr	r0, [sp, #16]
   12360:	ldr	r1, [fp, #-8]
   12364:	ldr	r1, [r1]
   12368:	cmp	r0, r1
   1236c:	bne	123ac <lista_insere@@Base+0x150>
   12370:	ldr	r0, [sp, #12]
   12374:	movw	r1, #0
   12378:	str	r1, [r0, #8]
   1237c:	ldr	r0, [fp, #-8]
   12380:	ldr	r0, [r0]
   12384:	ldr	r1, [sp, #12]
   12388:	str	r0, [r1, #4]
   1238c:	ldr	r0, [sp, #12]
   12390:	ldr	r1, [fp, #-8]
   12394:	str	r0, [r1]
   12398:	ldr	r0, [sp, #12]
   1239c:	ldr	r1, [fp, #-8]
   123a0:	ldr	r1, [r1]
   123a4:	str	r0, [r1, #8]
   123a8:	b	123e4 <lista_insere@@Base+0x188>
   123ac:	ldr	r0, [sp, #12]
   123b0:	ldr	r1, [sp, #16]
   123b4:	ldr	r1, [r1, #8]
   123b8:	str	r0, [r1, #4]
   123bc:	ldr	r0, [sp, #16]
   123c0:	ldr	r0, [r0, #8]
   123c4:	ldr	r1, [sp, #12]
   123c8:	str	r0, [r1, #8]
   123cc:	ldr	r0, [sp, #16]
   123d0:	ldr	r1, [sp, #12]
   123d4:	str	r0, [r1, #4]
   123d8:	ldr	r0, [sp, #12]
   123dc:	ldr	r1, [sp, #16]
   123e0:	str	r0, [r1, #8]
   123e4:	b	123e8 <lista_insere@@Base+0x18c>
   123e8:	b	123ec <lista_insere@@Base+0x190>
   123ec:	ldr	r0, [fp, #-8]
   123f0:	ldr	r1, [r0, #8]
   123f4:	add	r1, r1, #1
   123f8:	str	r1, [r0, #8]
   123fc:	ldr	r0, [sp, #12]
   12400:	str	r0, [fp, #-4]
   12404:	ldr	r0, [fp, #-4]
   12408:	mov	sp, fp
   1240c:	pop	{fp, pc}

00012410 <lista_remove@@Base>:
   12410:	push	{fp, lr}
   12414:	mov	fp, sp
   12418:	sub	sp, sp, #16
   1241c:	str	r0, [sp, #8]
   12420:	str	r1, [sp, #4]
   12424:	ldr	r0, [sp, #4]
   12428:	movw	r1, #0
   1242c:	cmp	r0, r1
   12430:	bne	12440 <lista_remove@@Base+0x30>
   12434:	movw	r0, #0
   12438:	str	r0, [fp, #-4]
   1243c:	b	12518 <lista_remove@@Base+0x108>
   12440:	ldr	r0, [sp, #4]
   12444:	ldr	r0, [r0, #4]
   12448:	str	r0, [sp]
   1244c:	ldr	r0, [sp, #4]
   12450:	ldr	r1, [sp, #8]
   12454:	ldr	r1, [r1]
   12458:	cmp	r0, r1
   1245c:	bne	12484 <lista_remove@@Base+0x74>
   12460:	ldr	r0, [sp, #4]
   12464:	ldr	r0, [r0, #4]
   12468:	movw	r1, #0
   1246c:	str	r1, [r0, #8]
   12470:	ldr	r0, [sp, #4]
   12474:	ldr	r0, [r0, #4]
   12478:	ldr	r1, [sp, #8]
   1247c:	str	r0, [r1]
   12480:	b	124e8 <lista_remove@@Base+0xd8>
   12484:	ldr	r0, [sp, #4]
   12488:	ldr	r1, [sp, #8]
   1248c:	ldr	r1, [r1, #4]
   12490:	cmp	r0, r1
   12494:	bne	124bc <lista_remove@@Base+0xac>
   12498:	ldr	r0, [sp, #4]
   1249c:	ldr	r0, [r0, #8]
   124a0:	movw	r1, #0
   124a4:	str	r1, [r0, #4]
   124a8:	ldr	r0, [sp, #4]
   124ac:	ldr	r0, [r0, #8]
   124b0:	ldr	r1, [sp, #8]
   124b4:	str	r0, [r1, #4]
   124b8:	b	124e4 <lista_remove@@Base+0xd4>
   124bc:	ldr	r0, [sp, #4]
   124c0:	ldr	r0, [r0, #4]
   124c4:	ldr	r1, [sp, #4]
   124c8:	ldr	r1, [r1, #8]
   124cc:	str	r0, [r1, #4]
   124d0:	ldr	r0, [sp, #4]
   124d4:	ldr	r0, [r0, #8]
   124d8:	ldr	r1, [sp, #4]
   124dc:	ldr	r1, [r1, #4]
   124e0:	str	r0, [r1, #8]
   124e4:	b	124e8 <lista_remove@@Base+0xd8>
   124e8:	ldr	r0, [sp, #4]
   124ec:	ldr	r0, [r0]
   124f0:	bl	10a7c <free@plt>
   124f4:	ldr	r0, [sp, #4]
   124f8:	bl	10a7c <free@plt>
   124fc:	ldr	r0, [sp, #8]
   12500:	ldr	lr, [r0, #8]
   12504:	mvn	r1, #0
   12508:	add	r1, lr, r1
   1250c:	str	r1, [r0, #8]
   12510:	ldr	r0, [sp]
   12514:	str	r0, [fp, #-4]
   12518:	ldr	r0, [fp, #-4]
   1251c:	mov	sp, fp
   12520:	pop	{fp, pc}

00012524 <lista_pesquisa@@Base>:
   12524:	push	{fp, lr}
   12528:	mov	fp, sp
   1252c:	sub	sp, sp, #24
   12530:	str	r0, [fp, #-8]
   12534:	str	r1, [sp, #12]
   12538:	str	r2, [sp, #8]
   1253c:	ldr	r0, [fp, #-8]
   12540:	movw	r1, #0
   12544:	cmp	r0, r1
   12548:	bne	12558 <lista_pesquisa@@Base+0x34>
   1254c:	movw	r0, #0
   12550:	str	r0, [fp, #-4]
   12554:	b	12654 <lista_pesquisa@@Base+0x130>
   12558:	ldr	r0, [sp, #8]
   1255c:	cmp	r0, #0
   12560:	bne	125d0 <lista_pesquisa@@Base+0xac>
   12564:	ldr	r0, [fp, #-8]
   12568:	ldr	r0, [r0]
   1256c:	str	r0, [sp, #4]
   12570:	movw	r0, #0
   12574:	str	r0, [sp]
   12578:	ldr	r0, [sp]
   1257c:	ldr	r1, [fp, #-8]
   12580:	ldr	r1, [r1, #8]
   12584:	cmp	r0, r1
   12588:	bge	125cc <lista_pesquisa@@Base+0xa8>
   1258c:	ldr	r0, [sp, #4]
   12590:	ldr	r0, [r0]
   12594:	ldr	r1, [sp, #12]
   12598:	bl	10a64 <strcmp@plt>
   1259c:	cmp	r0, #0
   125a0:	bne	125b0 <lista_pesquisa@@Base+0x8c>
   125a4:	ldr	r0, [sp, #4]
   125a8:	str	r0, [fp, #-4]
   125ac:	b	12654 <lista_pesquisa@@Base+0x130>
   125b0:	ldr	r0, [sp, #4]
   125b4:	ldr	r0, [r0, #4]
   125b8:	str	r0, [sp, #4]
   125bc:	ldr	r0, [sp]
   125c0:	add	r0, r0, #1
   125c4:	str	r0, [sp]
   125c8:	b	12578 <lista_pesquisa@@Base+0x54>
   125cc:	b	1264c <lista_pesquisa@@Base+0x128>
   125d0:	ldr	r0, [sp, #8]
   125d4:	cmp	r0, #1
   125d8:	bne	12648 <lista_pesquisa@@Base+0x124>
   125dc:	ldr	r0, [fp, #-8]
   125e0:	ldr	r0, [r0, #4]
   125e4:	str	r0, [sp, #4]
   125e8:	movw	r0, #0
   125ec:	str	r0, [sp]
   125f0:	ldr	r0, [sp]
   125f4:	ldr	r1, [fp, #-8]
   125f8:	ldr	r1, [r1, #8]
   125fc:	cmp	r0, r1
   12600:	bge	12644 <lista_pesquisa@@Base+0x120>
   12604:	ldr	r0, [sp, #4]
   12608:	ldr	r0, [r0]
   1260c:	ldr	r1, [sp, #12]
   12610:	bl	10a64 <strcmp@plt>
   12614:	cmp	r0, #0
   12618:	bne	12628 <lista_pesquisa@@Base+0x104>
   1261c:	ldr	r0, [sp, #4]
   12620:	str	r0, [fp, #-4]
   12624:	b	12654 <lista_pesquisa@@Base+0x130>
   12628:	ldr	r0, [sp, #4]
   1262c:	ldr	r0, [r0, #8]
   12630:	str	r0, [sp, #4]
   12634:	ldr	r0, [sp]
   12638:	add	r0, r0, #1
   1263c:	str	r0, [sp]
   12640:	b	125f0 <lista_pesquisa@@Base+0xcc>
   12644:	b	12648 <lista_pesquisa@@Base+0x124>
   12648:	b	1264c <lista_pesquisa@@Base+0x128>
   1264c:	movw	r0, #0
   12650:	str	r0, [fp, #-4]
   12654:	ldr	r0, [fp, #-4]
   12658:	mov	sp, fp
   1265c:	pop	{fp, pc}

00012660 <lista_ordena@@Base>:
   12660:	push	{fp, lr}
   12664:	mov	fp, sp
   12668:	sub	sp, sp, #24
   1266c:	str	r0, [fp, #-8]
   12670:	ldr	r0, [fp, #-8]
   12674:	movw	r1, #0
   12678:	cmp	r0, r1
   1267c:	bne	1268c <lista_ordena@@Base+0x2c>
   12680:	mvn	r0, #0
   12684:	str	r0, [fp, #-4]
   12688:	b	1275c <lista_ordena@@Base+0xfc>
   1268c:	ldr	r0, [fp, #-8]
   12690:	ldr	r0, [r0, #8]
   12694:	cmp	r0, #0
   12698:	bne	126a8 <lista_ordena@@Base+0x48>
   1269c:	movw	r0, #0
   126a0:	str	r0, [fp, #-4]
   126a4:	b	1275c <lista_ordena@@Base+0xfc>
   126a8:	ldr	r0, [fp, #-8]
   126ac:	ldr	r0, [r0]
   126b0:	str	r0, [sp, #8]
   126b4:	ldr	r0, [sp, #8]
   126b8:	ldr	r1, [fp, #-8]
   126bc:	ldr	r1, [r1, #4]
   126c0:	cmp	r0, r1
   126c4:	beq	12754 <lista_ordena@@Base+0xf4>
   126c8:	ldr	r0, [sp, #8]
   126cc:	str	r0, [sp, #4]
   126d0:	ldr	r0, [sp, #8]
   126d4:	ldr	r0, [r0]
   126d8:	ldr	r1, [sp, #8]
   126dc:	ldr	r1, [r1, #4]
   126e0:	ldr	r1, [r1]
   126e4:	bl	10a64 <strcmp@plt>
   126e8:	cmp	r0, #0
   126ec:	ble	12744 <lista_ordena@@Base+0xe4>
   126f0:	ldr	r0, [sp, #8]
   126f4:	ldr	r0, [r0]
   126f8:	str	r0, [sp, #12]
   126fc:	ldr	r0, [sp, #8]
   12700:	ldr	r0, [r0, #4]
   12704:	ldr	r0, [r0]
   12708:	ldr	r1, [sp, #8]
   1270c:	str	r0, [r1]
   12710:	ldr	r0, [sp, #12]
   12714:	ldr	r1, [sp, #8]
   12718:	ldr	r1, [r1, #4]
   1271c:	str	r0, [r1]
   12720:	ldr	r0, [sp, #8]
   12724:	ldr	r1, [fp, #-8]
   12728:	ldr	r1, [r1]
   1272c:	cmp	r0, r1
   12730:	beq	12740 <lista_ordena@@Base+0xe0>
   12734:	ldr	r0, [sp, #8]
   12738:	ldr	r0, [r0, #8]
   1273c:	str	r0, [sp, #8]
   12740:	b	126d0 <lista_ordena@@Base+0x70>
   12744:	ldr	r0, [sp, #4]
   12748:	ldr	r0, [r0, #4]
   1274c:	str	r0, [sp, #8]
   12750:	b	126b4 <lista_ordena@@Base+0x54>
   12754:	movw	r0, #0
   12758:	str	r0, [fp, #-4]
   1275c:	ldr	r0, [fp, #-4]
   12760:	mov	sp, fp
   12764:	pop	{fp, pc}

00012768 <lista_inverte@@Base>:
   12768:	push	{fp, lr}
   1276c:	mov	fp, sp
   12770:	sub	sp, sp, #24
   12774:	str	r0, [fp, #-8]
   12778:	ldr	r0, [fp, #-8]
   1277c:	movw	r1, #0
   12780:	cmp	r0, r1
   12784:	bne	12794 <lista_inverte@@Base+0x2c>
   12788:	mvn	r0, #0
   1278c:	str	r0, [fp, #-4]
   12790:	b	12850 <lista_inverte@@Base+0xe8>
   12794:	ldr	r0, [fp, #-8]
   12798:	ldr	r0, [r0, #8]
   1279c:	cmp	r0, #0
   127a0:	bne	127b0 <lista_inverte@@Base+0x48>
   127a4:	movw	r0, #0
   127a8:	str	r0, [fp, #-4]
   127ac:	b	12850 <lista_inverte@@Base+0xe8>
   127b0:	ldr	r0, [fp, #-8]
   127b4:	ldr	r0, [r0]
   127b8:	str	r0, [sp, #4]
   127bc:	ldr	r0, [fp, #-8]
   127c0:	ldr	r0, [r0, #4]
   127c4:	str	r0, [sp]
   127c8:	movw	r0, #0
   127cc:	str	r0, [sp, #12]
   127d0:	ldr	r0, [sp, #12]
   127d4:	ldr	r1, [fp, #-8]
   127d8:	ldr	r1, [r1, #8]
   127dc:	movw	r2, #2
   127e0:	sdiv	r1, r1, r2
   127e4:	cmp	r0, r1
   127e8:	bge	12848 <lista_inverte@@Base+0xe0>
   127ec:	ldr	r0, [sp, #4]
   127f0:	ldr	r0, [r0]
   127f4:	bl	10a88 <strdup@plt>
   127f8:	str	r0, [sp, #8]
   127fc:	ldr	r0, [sp]
   12800:	ldr	r0, [r0]
   12804:	bl	10a88 <strdup@plt>
   12808:	ldr	lr, [sp, #4]
   1280c:	str	r0, [lr]
   12810:	ldr	r0, [sp, #8]
   12814:	bl	10a88 <strdup@plt>
   12818:	ldr	lr, [sp]
   1281c:	str	r0, [lr]
   12820:	ldr	r0, [sp, #4]
   12824:	ldr	r0, [r0, #4]
   12828:	str	r0, [sp, #4]
   1282c:	ldr	r0, [sp]
   12830:	ldr	r0, [r0, #8]
   12834:	str	r0, [sp]
   12838:	ldr	r0, [sp, #12]
   1283c:	add	r0, r0, #1
   12840:	str	r0, [sp, #12]
   12844:	b	127d0 <lista_inverte@@Base+0x68>
   12848:	movw	r0, #0
   1284c:	str	r0, [fp, #-4]
   12850:	ldr	r0, [fp, #-4]
   12854:	mov	sp, fp
   12858:	pop	{fp, pc}

0001285c <__libc_csu_init@@Base>:
   1285c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12860:	mov	r7, r0
   12864:	ldr	r6, [pc, #72]	; 128b4 <__libc_csu_init@@Base+0x58>
   12868:	ldr	r5, [pc, #72]	; 128b8 <__libc_csu_init@@Base+0x5c>
   1286c:	add	r6, pc, r6
   12870:	add	r5, pc, r5
   12874:	sub	r6, r6, r5
   12878:	mov	r8, r1
   1287c:	mov	r9, r2
   12880:	bl	10a44 <strcmp@plt-0x20>
   12884:	asrs	r6, r6, #2
   12888:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1288c:	mov	r4, #0
   12890:	add	r4, r4, #1
   12894:	ldr	r3, [r5], #4
   12898:	mov	r2, r9
   1289c:	mov	r1, r8
   128a0:	mov	r0, r7
   128a4:	blx	r3
   128a8:	cmp	r6, r4
   128ac:	bne	12890 <__libc_csu_init@@Base+0x34>
   128b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   128b4:	muleq	r1, r8, r6
   128b8:	muleq	r1, r0, r6

000128bc <__libc_csu_fini@@Base>:
   128bc:	bx	lr

Disassembly of section .fini:

000128c0 <.fini>:
   128c0:	push	{r3, lr}
   128c4:	pop	{r3, pc}
