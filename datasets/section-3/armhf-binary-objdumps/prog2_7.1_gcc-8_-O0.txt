
../repos/prog2/7.1:     file format elf32-littlearm


Disassembly of section .init:

00010c28 <.init>:
   10c28:	push	{r3, lr}
   10c2c:	bl	10d44 <_start@@Base+0x3c>
   10c30:	pop	{r3, pc}

Disassembly of section .plt:

00010c34 <strcmp@plt-0x14>:
   10c34:	push	{lr}		; (str lr, [sp, #-4]!)
   10c38:	ldr	lr, [pc, #4]	; 10c44 <strcmp@plt-0x4>
   10c3c:	add	lr, pc, lr
   10c40:	ldr	pc, [lr, #8]!
   10c44:			; <UNDEFINED> instruction: 0x000123bc

00010c48 <strcmp@plt>:
   10c48:	add	ip, pc, #0, 12
   10c4c:	add	ip, ip, #73728	; 0x12000
   10c50:	ldr	pc, [ip, #956]!	; 0x3bc

00010c54 <printf@plt>:
   10c54:	add	ip, pc, #0, 12
   10c58:	add	ip, ip, #73728	; 0x12000
   10c5c:	ldr	pc, [ip, #948]!	; 0x3b4

00010c60 <fopen@plt>:
   10c60:	add	ip, pc, #0, 12
   10c64:	add	ip, ip, #73728	; 0x12000
   10c68:	ldr	pc, [ip, #940]!	; 0x3ac

00010c6c <free@plt>:
   10c6c:	add	ip, pc, #0, 12
   10c70:	add	ip, ip, #73728	; 0x12000
   10c74:	ldr	pc, [ip, #932]!	; 0x3a4

00010c78 <fgets@plt>:
   10c78:	add	ip, pc, #0, 12
   10c7c:	add	ip, ip, #73728	; 0x12000
   10c80:	ldr	pc, [ip, #924]!	; 0x39c

00010c84 <realloc@plt>:
   10c84:	add	ip, pc, #0, 12
   10c88:	add	ip, ip, #73728	; 0x12000
   10c8c:	ldr	pc, [ip, #916]!	; 0x394

00010c90 <strcpy@plt>:
   10c90:	add	ip, pc, #0, 12
   10c94:	add	ip, ip, #73728	; 0x12000
   10c98:	ldr	pc, [ip, #908]!	; 0x38c

00010c9c <puts@plt>:
   10c9c:	add	ip, pc, #0, 12
   10ca0:	add	ip, ip, #73728	; 0x12000
   10ca4:	ldr	pc, [ip, #900]!	; 0x384

00010ca8 <malloc@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #73728	; 0x12000
   10cb0:	ldr	pc, [ip, #892]!	; 0x37c

00010cb4 <__libc_start_main@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #73728	; 0x12000
   10cbc:	ldr	pc, [ip, #884]!	; 0x374

00010cc0 <__gmon_start__@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #73728	; 0x12000
   10cc8:	ldr	pc, [ip, #876]!	; 0x36c

00010ccc <strlen@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #73728	; 0x12000
   10cd4:	ldr	pc, [ip, #868]!	; 0x364

00010cd8 <putchar@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #73728	; 0x12000
   10ce0:	ldr	pc, [ip, #860]!	; 0x35c

00010ce4 <fclose@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #73728	; 0x12000
   10cec:	ldr	pc, [ip, #852]!	; 0x354

00010cf0 <strtok@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #73728	; 0x12000
   10cf8:	ldr	pc, [ip, #844]!	; 0x34c

00010cfc <abort@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #73728	; 0x12000
   10d04:	ldr	pc, [ip, #836]!	; 0x344

Disassembly of section .text:

00010d08 <_start@@Base>:
   10d08:	mov	fp, #0
   10d0c:	mov	lr, #0
   10d10:	pop	{r1}		; (ldr r1, [sp], #4)
   10d14:	mov	r2, sp
   10d18:	push	{r2}		; (str r2, [sp, #-4]!)
   10d1c:	push	{r0}		; (str r0, [sp, #-4]!)
   10d20:	ldr	ip, [pc, #16]	; 10d38 <_start@@Base+0x30>
   10d24:	push	{ip}		; (str ip, [sp, #-4]!)
   10d28:	ldr	r0, [pc, #12]	; 10d3c <_start@@Base+0x34>
   10d2c:	ldr	r3, [pc, #12]	; 10d40 <_start@@Base+0x38>
   10d30:	bl	10cb4 <__libc_start_main@plt>
   10d34:	bl	10cfc <abort@plt>
   10d38:	ldrdeq	r2, [r1], -r4
   10d3c:	strdeq	r0, [r1], -r8
   10d40:	andeq	r2, r1, r4, ror r8
   10d44:	ldr	r3, [pc, #20]	; 10d60 <_start@@Base+0x58>
   10d48:	ldr	r2, [pc, #20]	; 10d64 <_start@@Base+0x5c>
   10d4c:	add	r3, pc, r3
   10d50:	ldr	r2, [r3, r2]
   10d54:	cmp	r2, #0
   10d58:	bxeq	lr
   10d5c:	b	10cc0 <__gmon_start__@plt>
   10d60:	andeq	r2, r1, ip, lsr #5
   10d64:	andeq	r0, r0, ip, asr #32
   10d68:	ldr	r0, [pc, #24]	; 10d88 <_start@@Base+0x80>
   10d6c:	ldr	r3, [pc, #24]	; 10d8c <_start@@Base+0x84>
   10d70:	cmp	r3, r0
   10d74:	bxeq	lr
   10d78:	ldr	r3, [pc, #16]	; 10d90 <_start@@Base+0x88>
   10d7c:	cmp	r3, #0
   10d80:	bxeq	lr
   10d84:	bx	r3
   10d88:	andeq	r3, r2, r0, lsl #1
   10d8c:	andeq	r3, r2, r0, lsl #1
   10d90:	andeq	r0, r0, r0
   10d94:	ldr	r0, [pc, #36]	; 10dc0 <_start@@Base+0xb8>
   10d98:	ldr	r1, [pc, #36]	; 10dc4 <_start@@Base+0xbc>
   10d9c:	sub	r1, r1, r0
   10da0:	asr	r1, r1, #2
   10da4:	add	r1, r1, r1, lsr #31
   10da8:	asrs	r1, r1, #1
   10dac:	bxeq	lr
   10db0:	ldr	r3, [pc, #16]	; 10dc8 <_start@@Base+0xc0>
   10db4:	cmp	r3, #0
   10db8:	bxeq	lr
   10dbc:	bx	r3
   10dc0:	andeq	r3, r2, r0, lsl #1
   10dc4:	andeq	r3, r2, r0, lsl #1
   10dc8:	andeq	r0, r0, r0
   10dcc:	push	{r4, lr}
   10dd0:	ldr	r4, [pc, #24]	; 10df0 <_start@@Base+0xe8>
   10dd4:	ldrb	r3, [r4]
   10dd8:	cmp	r3, #0
   10ddc:	popne	{r4, pc}
   10de0:	bl	10d68 <_start@@Base+0x60>
   10de4:	mov	r3, #1
   10de8:	strb	r3, [r4]
   10dec:	pop	{r4, pc}
   10df0:	andeq	r3, r2, r0, lsl #1
   10df4:	b	10d94 <_start@@Base+0x8c>

00010df8 <main@@Base>:
   10df8:	str	fp, [sp, #-8]!
   10dfc:	str	lr, [sp, #4]
   10e00:	add	fp, sp, #4
   10e04:	sub	sp, sp, #160	; 0xa0
   10e08:	ldr	r3, [pc, #660]	; 110a4 <main@@Base+0x2ac>
   10e0c:	add	r3, pc, r3
   10e10:	mov	r0, r3
   10e14:	bl	10c9c <puts@plt>
   10e18:	ldr	r2, [pc, #648]	; 110a8 <main@@Base+0x2b0>
   10e1c:	add	r2, pc, r2
   10e20:	sub	r3, fp, #64	; 0x40
   10e24:	ldrd	r0, [r2]
   10e28:	strd	r0, [r3]
   10e2c:	ldrd	r0, [r2, #8]
   10e30:	strd	r0, [r3, #8]
   10e34:	ldrd	r0, [r2, #16]
   10e38:	strd	r0, [r3, #16]
   10e3c:	ldrd	r0, [r2, #24]
   10e40:	strd	r0, [r3, #24]
   10e44:	ldrd	r0, [r2, #32]
   10e48:	strd	r0, [r3, #32]
   10e4c:	bl	11ef0 <bst_nova@@Base>
   10e50:	str	r0, [fp, #-12]
   10e54:	mov	r3, #0
   10e58:	str	r3, [fp, #-8]
   10e5c:	b	10e8c <main@@Base+0x94>
   10e60:	ldr	r3, [fp, #-8]
   10e64:	lsl	r3, r3, #2
   10e68:	sub	r2, fp, #4
   10e6c:	add	r3, r2, r3
   10e70:	ldr	r3, [r3, #-60]	; 0xffffffc4
   10e74:	mov	r1, r3
   10e78:	ldr	r0, [fp, #-12]
   10e7c:	bl	1201c <bst_insere@@Base>
   10e80:	ldr	r3, [fp, #-8]
   10e84:	add	r3, r3, #1
   10e88:	str	r3, [fp, #-8]
   10e8c:	ldr	r3, [fp, #-8]
   10e90:	cmp	r3, #9
   10e94:	ble	10e60 <main@@Base+0x68>
   10e98:	ldr	r3, [fp, #-12]
   10e9c:	ldr	r3, [r3]
   10ea0:	mov	r0, r3
   10ea4:	bl	12718 <bst_altura@@Base>
   10ea8:	mov	r3, r0
   10eac:	mov	r1, r3
   10eb0:	ldr	r3, [pc, #500]	; 110ac <main@@Base+0x2b4>
   10eb4:	add	r3, pc, r3
   10eb8:	mov	r0, r3
   10ebc:	bl	10c54 <printf@plt>
   10ec0:	ldr	r0, [fp, #-12]
   10ec4:	bl	121a4 <bst_imprime@@Base>
   10ec8:	ldr	r3, [pc, #480]	; 110b0 <main@@Base+0x2b8>
   10ecc:	add	r3, pc, r3
   10ed0:	mov	r0, r3
   10ed4:	bl	10c9c <puts@plt>
   10ed8:	bl	110dc <avl_nova@@Base>
   10edc:	str	r0, [fp, #-16]
   10ee0:	ldr	r3, [pc, #460]	; 110b4 <main@@Base+0x2bc>
   10ee4:	add	r3, pc, r3
   10ee8:	mov	r1, r3
   10eec:	ldr	r3, [pc, #452]	; 110b8 <main@@Base+0x2c0>
   10ef0:	add	r3, pc, r3
   10ef4:	mov	r0, r3
   10ef8:	bl	10c60 <fopen@plt>
   10efc:	str	r0, [fp, #-20]	; 0xffffffec
   10f00:	b	10f8c <main@@Base+0x194>
   10f04:	sub	r3, fp, #164	; 0xa4
   10f08:	ldr	r2, [pc, #428]	; 110bc <main@@Base+0x2c4>
   10f0c:	add	r2, pc, r2
   10f10:	mov	r1, r2
   10f14:	mov	r0, r3
   10f18:	bl	10cf0 <strtok@plt>
   10f1c:	mov	r2, r0
   10f20:	sub	r3, fp, #164	; 0xa4
   10f24:	mov	r1, r2
   10f28:	mov	r0, r3
   10f2c:	bl	10c90 <strcpy@plt>
   10f30:	ldr	r3, [pc, #392]	; 110c0 <main@@Base+0x2c8>
   10f34:	add	r3, pc, r3
   10f38:	mov	r1, r3
   10f3c:	mov	r0, #0
   10f40:	bl	10cf0 <strtok@plt>
   10f44:	mov	r2, r0
   10f48:	sub	r3, fp, #164	; 0xa4
   10f4c:	mov	r1, r2
   10f50:	mov	r0, r3
   10f54:	bl	10c90 <strcpy@plt>
   10f58:	sub	r3, fp, #164	; 0xa4
   10f5c:	mov	r0, r3
   10f60:	bl	10ccc <strlen@plt>
   10f64:	mov	r3, r0
   10f68:	sub	r3, r3, #1
   10f6c:	sub	r2, fp, #4
   10f70:	add	r3, r2, r3
   10f74:	mov	r2, #0
   10f78:	strb	r2, [r3, #-160]	; 0xffffff60
   10f7c:	sub	r3, fp, #164	; 0xa4
   10f80:	mov	r1, r3
   10f84:	ldr	r0, [fp, #-16]
   10f88:	bl	11218 <avl_insere@@Base>
   10f8c:	sub	r3, fp, #164	; 0xa4
   10f90:	ldr	r2, [fp, #-20]	; 0xffffffec
   10f94:	mov	r1, #100	; 0x64
   10f98:	mov	r0, r3
   10f9c:	bl	10c78 <fgets@plt>
   10fa0:	mov	r3, r0
   10fa4:	cmp	r3, #0
   10fa8:	bne	10f04 <main@@Base+0x10c>
   10fac:	ldr	r0, [fp, #-20]	; 0xffffffec
   10fb0:	bl	10ce4 <fclose@plt>
   10fb4:	ldr	r3, [pc, #264]	; 110c4 <main@@Base+0x2cc>
   10fb8:	add	r3, pc, r3
   10fbc:	mov	r1, r3
   10fc0:	ldr	r0, [fp, #-16]
   10fc4:	bl	111b4 <avl_pesquisa@@Base>
   10fc8:	str	r0, [fp, #-24]	; 0xffffffe8
   10fcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10fd0:	cmp	r3, #0
   10fd4:	beq	10ffc <main@@Base+0x204>
   10fd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10fdc:	ldr	r1, [r3]
   10fe0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10fe4:	ldr	r3, [r3, #16]
   10fe8:	mov	r2, r3
   10fec:	ldr	r3, [pc, #212]	; 110c8 <main@@Base+0x2d0>
   10ff0:	add	r3, pc, r3
   10ff4:	mov	r0, r3
   10ff8:	bl	10c54 <printf@plt>
   10ffc:	ldr	r3, [pc, #200]	; 110cc <main@@Base+0x2d4>
   11000:	add	r3, pc, r3
   11004:	mov	r1, r3
   11008:	ldr	r0, [fp, #-16]
   1100c:	bl	111b4 <avl_pesquisa@@Base>
   11010:	str	r0, [fp, #-24]	; 0xffffffe8
   11014:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11018:	cmp	r3, #0
   1101c:	beq	11044 <main@@Base+0x24c>
   11020:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11024:	ldr	r1, [r3]
   11028:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1102c:	ldr	r3, [r3, #16]
   11030:	mov	r2, r3
   11034:	ldr	r3, [pc, #148]	; 110d0 <main@@Base+0x2d8>
   11038:	add	r3, pc, r3
   1103c:	mov	r0, r3
   11040:	bl	10c54 <printf@plt>
   11044:	ldr	r3, [pc, #136]	; 110d4 <main@@Base+0x2dc>
   11048:	add	r3, pc, r3
   1104c:	mov	r1, r3
   11050:	ldr	r0, [fp, #-16]
   11054:	bl	111b4 <avl_pesquisa@@Base>
   11058:	str	r0, [fp, #-24]	; 0xffffffe8
   1105c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11060:	cmp	r3, #0
   11064:	beq	1108c <main@@Base+0x294>
   11068:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1106c:	ldr	r1, [r3]
   11070:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11074:	ldr	r3, [r3, #16]
   11078:	mov	r2, r3
   1107c:	ldr	r3, [pc, #84]	; 110d8 <main@@Base+0x2e0>
   11080:	add	r3, pc, r3
   11084:	mov	r0, r3
   11088:	bl	10c54 <printf@plt>
   1108c:	mov	r3, #0
   11090:	mov	r0, r3
   11094:	sub	sp, fp, #4
   11098:	ldr	fp, [sp]
   1109c:	add	sp, sp, #4
   110a0:	pop	{pc}		; (ldr pc, [sp], #4)
   110a4:	ldrdeq	r1, [r0], -r0
   110a8:	andeq	r2, r1, r4, lsr r2
   110ac:	andeq	r1, r0, ip, lsr #20
   110b0:	andeq	r1, r0, r8, lsr #20
   110b4:	andeq	r1, r0, r4, lsl sl
   110b8:	andeq	r1, r0, ip, lsl #20
   110bc:	strdeq	r1, [r0], -ip
   110c0:	ldrdeq	r1, [r0], -r4
   110c4:	andeq	r1, r0, r4, asr r9
   110c8:	andeq	r1, r0, r8, lsr #18
   110cc:	andeq	r1, r0, r4, lsr #18
   110d0:	andeq	r1, r0, r0, ror #17
   110d4:	andeq	r1, r0, r4, ror #17
   110d8:	muleq	r0, r8, r8

000110dc <avl_nova@@Base>:
   110dc:	str	fp, [sp, #-8]!
   110e0:	str	lr, [sp, #4]
   110e4:	add	fp, sp, #4
   110e8:	sub	sp, sp, #8
   110ec:	mov	r0, #4
   110f0:	bl	10ca8 <malloc@plt>
   110f4:	mov	r3, r0
   110f8:	str	r3, [fp, #-8]
   110fc:	ldr	r3, [fp, #-8]
   11100:	cmp	r3, #0
   11104:	bne	11110 <avl_nova@@Base+0x34>
   11108:	mov	r3, #0
   1110c:	b	11120 <avl_nova@@Base+0x44>
   11110:	ldr	r3, [fp, #-8]
   11114:	mov	r2, #0
   11118:	str	r2, [r3]
   1111c:	ldr	r3, [fp, #-8]
   11120:	mov	r0, r3
   11124:	sub	sp, fp, #4
   11128:	ldr	fp, [sp]
   1112c:	add	sp, sp, #4
   11130:	pop	{pc}		; (ldr pc, [sp], #4)

00011134 <avl_apaga@@Base>:
   11134:	str	fp, [sp, #-8]!
   11138:	str	lr, [sp, #4]
   1113c:	add	fp, sp, #4
   11140:	sub	sp, sp, #8
   11144:	str	r0, [fp, #-8]
   11148:	ldr	r3, [fp, #-8]
   1114c:	cmp	r3, #0
   11150:	beq	111a0 <avl_apaga@@Base+0x6c>
   11154:	b	11184 <avl_apaga@@Base+0x50>
   11158:	ldr	r3, [fp, #-8]
   1115c:	ldr	r2, [r3]
   11160:	ldr	r3, [fp, #-8]
   11164:	ldr	r3, [r3]
   11168:	ldr	r3, [r3]
   1116c:	mov	r1, r3
   11170:	mov	r0, r2
   11174:	bl	11ad8 <avl_remove_impl@@Base>
   11178:	mov	r2, r0
   1117c:	ldr	r3, [fp, #-8]
   11180:	str	r2, [r3]
   11184:	ldr	r3, [fp, #-8]
   11188:	ldr	r3, [r3]
   1118c:	cmp	r3, #0
   11190:	bne	11158 <avl_apaga@@Base+0x24>
   11194:	ldr	r0, [fp, #-8]
   11198:	bl	10c6c <free@plt>
   1119c:	b	111a4 <avl_apaga@@Base+0x70>
   111a0:	nop	{0}
   111a4:	sub	sp, fp, #4
   111a8:	ldr	fp, [sp]
   111ac:	add	sp, sp, #4
   111b0:	pop	{pc}		; (ldr pc, [sp], #4)

000111b4 <avl_pesquisa@@Base>:
   111b4:	str	fp, [sp, #-8]!
   111b8:	str	lr, [sp, #4]
   111bc:	add	fp, sp, #4
   111c0:	sub	sp, sp, #8
   111c4:	str	r0, [fp, #-8]
   111c8:	str	r1, [fp, #-12]
   111cc:	ldr	r3, [fp, #-8]
   111d0:	cmp	r3, #0
   111d4:	beq	111e4 <avl_pesquisa@@Base+0x30>
   111d8:	ldr	r3, [fp, #-12]
   111dc:	cmp	r3, #0
   111e0:	bne	111ec <avl_pesquisa@@Base+0x38>
   111e4:	mov	r3, #0
   111e8:	b	11204 <avl_pesquisa@@Base+0x50>
   111ec:	ldr	r3, [fp, #-8]
   111f0:	ldr	r3, [r3]
   111f4:	ldr	r1, [fp, #-12]
   111f8:	mov	r0, r3
   111fc:	bl	11754 <avl_pesquisa_impl@@Base>
   11200:	mov	r3, r0
   11204:	mov	r0, r3
   11208:	sub	sp, fp, #4
   1120c:	ldr	fp, [sp]
   11210:	add	sp, sp, #4
   11214:	pop	{pc}		; (ldr pc, [sp], #4)

00011218 <avl_insere@@Base>:
   11218:	str	fp, [sp, #-8]!
   1121c:	str	lr, [sp, #4]
   11220:	add	fp, sp, #4
   11224:	sub	sp, sp, #8
   11228:	str	r0, [fp, #-8]
   1122c:	str	r1, [fp, #-12]
   11230:	ldr	r3, [fp, #-8]
   11234:	cmp	r3, #0
   11238:	beq	11248 <avl_insere@@Base+0x30>
   1123c:	ldr	r3, [fp, #-12]
   11240:	cmp	r3, #0
   11244:	bne	11250 <avl_insere@@Base+0x38>
   11248:	mvn	r3, #0
   1124c:	b	11274 <avl_insere@@Base+0x5c>
   11250:	ldr	r3, [fp, #-8]
   11254:	ldr	r3, [r3]
   11258:	ldr	r1, [fp, #-12]
   1125c:	mov	r0, r3
   11260:	bl	11810 <avl_insere_impl@@Base>
   11264:	mov	r2, r0
   11268:	ldr	r3, [fp, #-8]
   1126c:	str	r2, [r3]
   11270:	mov	r3, #0
   11274:	mov	r0, r3
   11278:	sub	sp, fp, #4
   1127c:	ldr	fp, [sp]
   11280:	add	sp, sp, #4
   11284:	pop	{pc}		; (ldr pc, [sp], #4)

00011288 <avl_remove@@Base>:
   11288:	str	fp, [sp, #-8]!
   1128c:	str	lr, [sp, #4]
   11290:	add	fp, sp, #4
   11294:	sub	sp, sp, #8
   11298:	str	r0, [fp, #-8]
   1129c:	str	r1, [fp, #-12]
   112a0:	ldr	r3, [fp, #-8]
   112a4:	cmp	r3, #0
   112a8:	beq	112b8 <avl_remove@@Base+0x30>
   112ac:	ldr	r3, [fp, #-12]
   112b0:	cmp	r3, #0
   112b4:	bne	112c0 <avl_remove@@Base+0x38>
   112b8:	mvn	r3, #0
   112bc:	b	112e4 <avl_remove@@Base+0x5c>
   112c0:	ldr	r3, [fp, #-8]
   112c4:	ldr	r3, [r3]
   112c8:	ldr	r1, [fp, #-12]
   112cc:	mov	r0, r3
   112d0:	bl	11ad8 <avl_remove_impl@@Base>
   112d4:	mov	r2, r0
   112d8:	ldr	r3, [fp, #-8]
   112dc:	str	r2, [r3]
   112e0:	mov	r3, #0
   112e4:	mov	r0, r3
   112e8:	sub	sp, fp, #4
   112ec:	ldr	fp, [sp]
   112f0:	add	sp, sp, #4
   112f4:	pop	{pc}		; (ldr pc, [sp], #4)

000112f8 <avl_min@@Base>:
   112f8:	str	fp, [sp, #-8]!
   112fc:	str	lr, [sp, #4]
   11300:	add	fp, sp, #4
   11304:	sub	sp, sp, #8
   11308:	str	r0, [fp, #-8]
   1130c:	ldr	r3, [fp, #-8]
   11310:	cmp	r3, #0
   11314:	bne	11320 <avl_min@@Base+0x28>
   11318:	mov	r3, #0
   1131c:	b	11338 <avl_min@@Base+0x40>
   11320:	ldr	r3, [fp, #-8]
   11324:	ldr	r3, [r3]
   11328:	mov	r0, r3
   1132c:	bl	11a40 <avl_no_valormin@@Base>
   11330:	mov	r3, r0
   11334:	ldr	r3, [r3]
   11338:	mov	r0, r3
   1133c:	sub	sp, fp, #4
   11340:	ldr	fp, [sp]
   11344:	add	sp, sp, #4
   11348:	pop	{pc}		; (ldr pc, [sp], #4)

0001134c <avl_max@@Base>:
   1134c:	str	fp, [sp, #-8]!
   11350:	str	lr, [sp, #4]
   11354:	add	fp, sp, #4
   11358:	sub	sp, sp, #8
   1135c:	str	r0, [fp, #-8]
   11360:	ldr	r3, [fp, #-8]
   11364:	cmp	r3, #0
   11368:	bne	11374 <avl_max@@Base+0x28>
   1136c:	mov	r3, #0
   11370:	b	1138c <avl_max@@Base+0x40>
   11374:	ldr	r3, [fp, #-8]
   11378:	ldr	r3, [r3]
   1137c:	mov	r0, r3
   11380:	bl	11a8c <avl_no_valormax@@Base>
   11384:	mov	r3, r0
   11388:	ldr	r3, [r3]
   1138c:	mov	r0, r3
   11390:	sub	sp, fp, #4
   11394:	ldr	fp, [sp]
   11398:	add	sp, sp, #4
   1139c:	pop	{pc}		; (ldr pc, [sp], #4)

000113a0 <avl_imprime@@Base>:
   113a0:	str	fp, [sp, #-8]!
   113a4:	str	lr, [sp, #4]
   113a8:	add	fp, sp, #4
   113ac:	sub	sp, sp, #8
   113b0:	str	r0, [fp, #-8]
   113b4:	ldr	r3, [fp, #-8]
   113b8:	cmp	r3, #0
   113bc:	beq	113dc <avl_imprime@@Base+0x3c>
   113c0:	ldr	r3, [fp, #-8]
   113c4:	ldr	r3, [r3]
   113c8:	mov	r0, r3
   113cc:	bl	11e70 <avl_preordem_impl@@Base>
   113d0:	mov	r0, #10
   113d4:	bl	10cd8 <putchar@plt>
   113d8:	b	113e0 <avl_imprime@@Base+0x40>
   113dc:	nop	{0}
   113e0:	sub	sp, fp, #4
   113e4:	ldr	fp, [sp]
   113e8:	add	sp, sp, #4
   113ec:	pop	{pc}		; (ldr pc, [sp], #4)

000113f0 <avl_altura@@Base>:
   113f0:	push	{fp}		; (str fp, [sp, #-4]!)
   113f4:	add	fp, sp, #0
   113f8:	sub	sp, sp, #12
   113fc:	str	r0, [fp, #-8]
   11400:	ldr	r3, [fp, #-8]
   11404:	cmp	r3, #0
   11408:	bne	11414 <avl_altura@@Base+0x24>
   1140c:	mvn	r3, #0
   11410:	b	1141c <avl_altura@@Base+0x2c>
   11414:	ldr	r3, [fp, #-8]
   11418:	ldr	r3, [r3, #12]
   1141c:	mov	r0, r3
   11420:	add	sp, fp, #0
   11424:	pop	{fp}		; (ldr fp, [sp], #4)
   11428:	bx	lr

0001142c <max@@Base>:
   1142c:	push	{fp}		; (str fp, [sp, #-4]!)
   11430:	add	fp, sp, #0
   11434:	sub	sp, sp, #12
   11438:	str	r0, [fp, #-8]
   1143c:	str	r1, [fp, #-12]
   11440:	ldr	r2, [fp, #-12]
   11444:	ldr	r3, [fp, #-8]
   11448:	cmp	r2, r3
   1144c:	movge	r3, r2
   11450:	movlt	r3, r3
   11454:	mov	r0, r3
   11458:	add	sp, fp, #0
   1145c:	pop	{fp}		; (ldr fp, [sp], #4)
   11460:	bx	lr

00011464 <avl_novo_no@@Base>:
   11464:	str	fp, [sp, #-8]!
   11468:	str	lr, [sp, #4]
   1146c:	add	fp, sp, #4
   11470:	sub	sp, sp, #16
   11474:	str	r0, [fp, #-16]
   11478:	mov	r0, #20
   1147c:	bl	10ca8 <malloc@plt>
   11480:	mov	r3, r0
   11484:	str	r3, [fp, #-8]
   11488:	ldr	r0, [fp, #-16]
   1148c:	bl	10ccc <strlen@plt>
   11490:	mov	r3, r0
   11494:	add	r3, r3, #1
   11498:	mov	r0, r3
   1149c:	bl	10ca8 <malloc@plt>
   114a0:	mov	r3, r0
   114a4:	mov	r2, r3
   114a8:	ldr	r3, [fp, #-8]
   114ac:	str	r2, [r3]
   114b0:	ldr	r3, [fp, #-8]
   114b4:	ldr	r3, [r3]
   114b8:	ldr	r1, [fp, #-16]
   114bc:	mov	r0, r3
   114c0:	bl	10c90 <strcpy@plt>
   114c4:	ldr	r3, [fp, #-8]
   114c8:	mov	r2, #0
   114cc:	str	r2, [r3, #4]
   114d0:	ldr	r3, [fp, #-8]
   114d4:	mov	r2, #0
   114d8:	str	r2, [r3, #8]
   114dc:	ldr	r3, [fp, #-8]
   114e0:	mov	r2, #0
   114e4:	str	r2, [r3, #12]
   114e8:	ldr	r3, [fp, #-8]
   114ec:	mov	r2, #1
   114f0:	str	r2, [r3, #16]
   114f4:	ldr	r3, [fp, #-8]
   114f8:	mov	r0, r3
   114fc:	sub	sp, fp, #4
   11500:	ldr	fp, [sp]
   11504:	add	sp, sp, #4
   11508:	pop	{pc}		; (ldr pc, [sp], #4)

0001150c <roda_direita@@Base>:
   1150c:	str	r4, [sp, #-12]!
   11510:	str	fp, [sp, #4]
   11514:	str	lr, [sp, #8]
   11518:	add	fp, sp, #8
   1151c:	sub	sp, sp, #20
   11520:	str	r0, [fp, #-24]	; 0xffffffe8
   11524:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11528:	ldr	r3, [r3, #4]
   1152c:	str	r3, [fp, #-16]
   11530:	ldr	r3, [fp, #-16]
   11534:	ldr	r3, [r3, #8]
   11538:	str	r3, [fp, #-20]	; 0xffffffec
   1153c:	ldr	r3, [fp, #-16]
   11540:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11544:	str	r2, [r3, #8]
   11548:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1154c:	ldr	r2, [fp, #-20]	; 0xffffffec
   11550:	str	r2, [r3, #4]
   11554:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11558:	ldr	r3, [r3, #4]
   1155c:	mov	r0, r3
   11560:	bl	113f0 <avl_altura@@Base>
   11564:	mov	r4, r0
   11568:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1156c:	ldr	r3, [r3, #8]
   11570:	mov	r0, r3
   11574:	bl	113f0 <avl_altura@@Base>
   11578:	mov	r3, r0
   1157c:	mov	r1, r3
   11580:	mov	r0, r4
   11584:	bl	1142c <max@@Base>
   11588:	mov	r3, r0
   1158c:	add	r2, r3, #1
   11590:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11594:	str	r2, [r3, #12]
   11598:	ldr	r3, [fp, #-16]
   1159c:	ldr	r3, [r3, #4]
   115a0:	mov	r0, r3
   115a4:	bl	113f0 <avl_altura@@Base>
   115a8:	mov	r4, r0
   115ac:	ldr	r3, [fp, #-16]
   115b0:	ldr	r3, [r3, #8]
   115b4:	mov	r0, r3
   115b8:	bl	113f0 <avl_altura@@Base>
   115bc:	mov	r3, r0
   115c0:	mov	r1, r3
   115c4:	mov	r0, r4
   115c8:	bl	1142c <max@@Base>
   115cc:	mov	r3, r0
   115d0:	add	r2, r3, #1
   115d4:	ldr	r3, [fp, #-16]
   115d8:	str	r2, [r3, #12]
   115dc:	ldr	r3, [fp, #-16]
   115e0:	mov	r0, r3
   115e4:	sub	sp, fp, #8
   115e8:	ldr	r4, [sp]
   115ec:	ldr	fp, [sp, #4]
   115f0:	add	sp, sp, #8
   115f4:	pop	{pc}		; (ldr pc, [sp], #4)

000115f8 <roda_esquerda@@Base>:
   115f8:	str	r4, [sp, #-12]!
   115fc:	str	fp, [sp, #4]
   11600:	str	lr, [sp, #8]
   11604:	add	fp, sp, #8
   11608:	sub	sp, sp, #20
   1160c:	str	r0, [fp, #-24]	; 0xffffffe8
   11610:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11614:	ldr	r3, [r3, #8]
   11618:	str	r3, [fp, #-16]
   1161c:	ldr	r3, [fp, #-16]
   11620:	ldr	r3, [r3, #4]
   11624:	str	r3, [fp, #-20]	; 0xffffffec
   11628:	ldr	r3, [fp, #-16]
   1162c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11630:	str	r2, [r3, #4]
   11634:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11638:	ldr	r2, [fp, #-20]	; 0xffffffec
   1163c:	str	r2, [r3, #8]
   11640:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11644:	ldr	r3, [r3, #4]
   11648:	mov	r0, r3
   1164c:	bl	113f0 <avl_altura@@Base>
   11650:	mov	r4, r0
   11654:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11658:	ldr	r3, [r3, #8]
   1165c:	mov	r0, r3
   11660:	bl	113f0 <avl_altura@@Base>
   11664:	mov	r3, r0
   11668:	mov	r1, r3
   1166c:	mov	r0, r4
   11670:	bl	1142c <max@@Base>
   11674:	mov	r3, r0
   11678:	add	r2, r3, #1
   1167c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11680:	str	r2, [r3, #12]
   11684:	ldr	r3, [fp, #-16]
   11688:	ldr	r3, [r3, #4]
   1168c:	mov	r0, r3
   11690:	bl	113f0 <avl_altura@@Base>
   11694:	mov	r4, r0
   11698:	ldr	r3, [fp, #-16]
   1169c:	ldr	r3, [r3, #8]
   116a0:	mov	r0, r3
   116a4:	bl	113f0 <avl_altura@@Base>
   116a8:	mov	r3, r0
   116ac:	mov	r1, r3
   116b0:	mov	r0, r4
   116b4:	bl	1142c <max@@Base>
   116b8:	mov	r3, r0
   116bc:	add	r2, r3, #1
   116c0:	ldr	r3, [fp, #-16]
   116c4:	str	r2, [r3, #12]
   116c8:	ldr	r3, [fp, #-16]
   116cc:	mov	r0, r3
   116d0:	sub	sp, fp, #8
   116d4:	ldr	r4, [sp]
   116d8:	ldr	fp, [sp, #4]
   116dc:	add	sp, sp, #8
   116e0:	pop	{pc}		; (ldr pc, [sp], #4)

000116e4 <calc_balanceamento@@Base>:
   116e4:	str	r4, [sp, #-12]!
   116e8:	str	fp, [sp, #4]
   116ec:	str	lr, [sp, #8]
   116f0:	add	fp, sp, #8
   116f4:	sub	sp, sp, #12
   116f8:	str	r0, [fp, #-16]
   116fc:	ldr	r3, [fp, #-16]
   11700:	cmp	r3, #0
   11704:	bne	11710 <calc_balanceamento@@Base+0x2c>
   11708:	mov	r3, #0
   1170c:	b	1173c <calc_balanceamento@@Base+0x58>
   11710:	ldr	r3, [fp, #-16]
   11714:	ldr	r3, [r3, #8]
   11718:	mov	r0, r3
   1171c:	bl	113f0 <avl_altura@@Base>
   11720:	mov	r4, r0
   11724:	ldr	r3, [fp, #-16]
   11728:	ldr	r3, [r3, #4]
   1172c:	mov	r0, r3
   11730:	bl	113f0 <avl_altura@@Base>
   11734:	mov	r3, r0
   11738:	sub	r3, r4, r3
   1173c:	mov	r0, r3
   11740:	sub	sp, fp, #8
   11744:	ldr	r4, [sp]
   11748:	ldr	fp, [sp, #4]
   1174c:	add	sp, sp, #8
   11750:	pop	{pc}		; (ldr pc, [sp], #4)

00011754 <avl_pesquisa_impl@@Base>:
   11754:	str	fp, [sp, #-8]!
   11758:	str	lr, [sp, #4]
   1175c:	add	fp, sp, #4
   11760:	sub	sp, sp, #8
   11764:	str	r0, [fp, #-8]
   11768:	str	r1, [fp, #-12]
   1176c:	ldr	r3, [fp, #-8]
   11770:	cmp	r3, #0
   11774:	bne	11780 <avl_pesquisa_impl@@Base+0x2c>
   11778:	mov	r3, #0
   1177c:	b	117fc <avl_pesquisa_impl@@Base+0xa8>
   11780:	ldr	r3, [fp, #-8]
   11784:	ldr	r3, [r3]
   11788:	mov	r1, r3
   1178c:	ldr	r0, [fp, #-12]
   11790:	bl	10c48 <strcmp@plt>
   11794:	mov	r3, r0
   11798:	cmp	r3, #0
   1179c:	bge	117bc <avl_pesquisa_impl@@Base+0x68>
   117a0:	ldr	r3, [fp, #-8]
   117a4:	ldr	r3, [r3, #4]
   117a8:	ldr	r1, [fp, #-12]
   117ac:	mov	r0, r3
   117b0:	bl	11754 <avl_pesquisa_impl@@Base>
   117b4:	mov	r3, r0
   117b8:	b	117fc <avl_pesquisa_impl@@Base+0xa8>
   117bc:	ldr	r3, [fp, #-8]
   117c0:	ldr	r3, [r3]
   117c4:	mov	r1, r3
   117c8:	ldr	r0, [fp, #-12]
   117cc:	bl	10c48 <strcmp@plt>
   117d0:	mov	r3, r0
   117d4:	cmp	r3, #0
   117d8:	ble	117f8 <avl_pesquisa_impl@@Base+0xa4>
   117dc:	ldr	r3, [fp, #-8]
   117e0:	ldr	r3, [r3, #8]
   117e4:	ldr	r1, [fp, #-12]
   117e8:	mov	r0, r3
   117ec:	bl	11754 <avl_pesquisa_impl@@Base>
   117f0:	mov	r3, r0
   117f4:	b	117fc <avl_pesquisa_impl@@Base+0xa8>
   117f8:	ldr	r3, [fp, #-8]
   117fc:	mov	r0, r3
   11800:	sub	sp, fp, #4
   11804:	ldr	fp, [sp]
   11808:	add	sp, sp, #4
   1180c:	pop	{pc}		; (ldr pc, [sp], #4)

00011810 <avl_insere_impl@@Base>:
   11810:	str	r4, [sp, #-12]!
   11814:	str	fp, [sp, #4]
   11818:	str	lr, [sp, #8]
   1181c:	add	fp, sp, #8
   11820:	sub	sp, sp, #20
   11824:	str	r0, [fp, #-24]	; 0xffffffe8
   11828:	str	r1, [fp, #-28]	; 0xffffffe4
   1182c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11830:	cmp	r3, #0
   11834:	bne	11848 <avl_insere_impl@@Base+0x38>
   11838:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1183c:	bl	11464 <avl_novo_no@@Base>
   11840:	mov	r3, r0
   11844:	b	11a28 <avl_insere_impl@@Base+0x218>
   11848:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1184c:	ldr	r3, [r3]
   11850:	mov	r1, r3
   11854:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11858:	bl	10c48 <strcmp@plt>
   1185c:	mov	r3, r0
   11860:	cmp	r3, #0
   11864:	bge	1188c <avl_insere_impl@@Base+0x7c>
   11868:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1186c:	ldr	r3, [r3, #4]
   11870:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11874:	mov	r0, r3
   11878:	bl	11810 <avl_insere_impl@@Base>
   1187c:	mov	r2, r0
   11880:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11884:	str	r2, [r3, #4]
   11888:	b	1190c <avl_insere_impl@@Base+0xfc>
   1188c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11890:	ldr	r3, [r3]
   11894:	mov	r1, r3
   11898:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1189c:	bl	10c48 <strcmp@plt>
   118a0:	mov	r3, r0
   118a4:	cmp	r3, #0
   118a8:	ble	118d0 <avl_insere_impl@@Base+0xc0>
   118ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   118b0:	ldr	r3, [r3, #8]
   118b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   118b8:	mov	r0, r3
   118bc:	bl	11810 <avl_insere_impl@@Base>
   118c0:	mov	r2, r0
   118c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   118c8:	str	r2, [r3, #8]
   118cc:	b	1190c <avl_insere_impl@@Base+0xfc>
   118d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   118d4:	ldr	r3, [r3]
   118d8:	mov	r1, r3
   118dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   118e0:	bl	10c48 <strcmp@plt>
   118e4:	mov	r3, r0
   118e8:	cmp	r3, #0
   118ec:	bne	1190c <avl_insere_impl@@Base+0xfc>
   118f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   118f4:	ldr	r3, [r3, #16]
   118f8:	add	r2, r3, #1
   118fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11900:	str	r2, [r3, #16]
   11904:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11908:	b	11a28 <avl_insere_impl@@Base+0x218>
   1190c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11910:	ldr	r3, [r3, #4]
   11914:	mov	r0, r3
   11918:	bl	113f0 <avl_altura@@Base>
   1191c:	mov	r4, r0
   11920:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11924:	ldr	r3, [r3, #8]
   11928:	mov	r0, r3
   1192c:	bl	113f0 <avl_altura@@Base>
   11930:	mov	r3, r0
   11934:	mov	r1, r3
   11938:	mov	r0, r4
   1193c:	bl	1142c <max@@Base>
   11940:	mov	r3, r0
   11944:	add	r2, r3, #1
   11948:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1194c:	str	r2, [r3, #12]
   11950:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11954:	bl	116e4 <calc_balanceamento@@Base>
   11958:	str	r0, [fp, #-16]
   1195c:	ldr	r3, [fp, #-16]
   11960:	cmp	r3, #1
   11964:	ble	119c0 <avl_insere_impl@@Base+0x1b0>
   11968:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1196c:	ldr	r3, [r3, #8]
   11970:	mov	r0, r3
   11974:	bl	116e4 <calc_balanceamento@@Base>
   11978:	mov	r3, r0
   1197c:	cmp	r3, #0
   11980:	bge	119b0 <avl_insere_impl@@Base+0x1a0>
   11984:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11988:	ldr	r3, [r3, #8]
   1198c:	mov	r0, r3
   11990:	bl	1150c <roda_direita@@Base>
   11994:	mov	r2, r0
   11998:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1199c:	str	r2, [r3, #8]
   119a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   119a4:	bl	115f8 <roda_esquerda@@Base>
   119a8:	mov	r3, r0
   119ac:	b	11a28 <avl_insere_impl@@Base+0x218>
   119b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   119b4:	bl	115f8 <roda_esquerda@@Base>
   119b8:	mov	r3, r0
   119bc:	b	11a28 <avl_insere_impl@@Base+0x218>
   119c0:	ldr	r3, [fp, #-16]
   119c4:	cmn	r3, #1
   119c8:	bge	11a24 <avl_insere_impl@@Base+0x214>
   119cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   119d0:	ldr	r3, [r3, #4]
   119d4:	mov	r0, r3
   119d8:	bl	116e4 <calc_balanceamento@@Base>
   119dc:	mov	r3, r0
   119e0:	cmp	r3, #0
   119e4:	ble	11a14 <avl_insere_impl@@Base+0x204>
   119e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   119ec:	ldr	r3, [r3, #4]
   119f0:	mov	r0, r3
   119f4:	bl	115f8 <roda_esquerda@@Base>
   119f8:	mov	r2, r0
   119fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11a00:	str	r2, [r3, #4]
   11a04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11a08:	bl	1150c <roda_direita@@Base>
   11a0c:	mov	r3, r0
   11a10:	b	11a28 <avl_insere_impl@@Base+0x218>
   11a14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11a18:	bl	1150c <roda_direita@@Base>
   11a1c:	mov	r3, r0
   11a20:	b	11a28 <avl_insere_impl@@Base+0x218>
   11a24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11a28:	mov	r0, r3
   11a2c:	sub	sp, fp, #8
   11a30:	ldr	r4, [sp]
   11a34:	ldr	fp, [sp, #4]
   11a38:	add	sp, sp, #8
   11a3c:	pop	{pc}		; (ldr pc, [sp], #4)

00011a40 <avl_no_valormin@@Base>:
   11a40:	push	{fp}		; (str fp, [sp, #-4]!)
   11a44:	add	fp, sp, #0
   11a48:	sub	sp, sp, #20
   11a4c:	str	r0, [fp, #-16]
   11a50:	ldr	r3, [fp, #-16]
   11a54:	str	r3, [fp, #-8]
   11a58:	b	11a68 <avl_no_valormin@@Base+0x28>
   11a5c:	ldr	r3, [fp, #-8]
   11a60:	ldr	r3, [r3, #4]
   11a64:	str	r3, [fp, #-8]
   11a68:	ldr	r3, [fp, #-8]
   11a6c:	ldr	r3, [r3, #4]
   11a70:	cmp	r3, #0
   11a74:	bne	11a5c <avl_no_valormin@@Base+0x1c>
   11a78:	ldr	r3, [fp, #-8]
   11a7c:	mov	r0, r3
   11a80:	add	sp, fp, #0
   11a84:	pop	{fp}		; (ldr fp, [sp], #4)
   11a88:	bx	lr

00011a8c <avl_no_valormax@@Base>:
   11a8c:	push	{fp}		; (str fp, [sp, #-4]!)
   11a90:	add	fp, sp, #0
   11a94:	sub	sp, sp, #20
   11a98:	str	r0, [fp, #-16]
   11a9c:	ldr	r3, [fp, #-16]
   11aa0:	str	r3, [fp, #-8]
   11aa4:	b	11ab4 <avl_no_valormax@@Base+0x28>
   11aa8:	ldr	r3, [fp, #-8]
   11aac:	ldr	r3, [r3, #8]
   11ab0:	str	r3, [fp, #-8]
   11ab4:	ldr	r3, [fp, #-8]
   11ab8:	ldr	r3, [r3, #8]
   11abc:	cmp	r3, #0
   11ac0:	bne	11aa8 <avl_no_valormax@@Base+0x1c>
   11ac4:	ldr	r3, [fp, #-8]
   11ac8:	mov	r0, r3
   11acc:	add	sp, fp, #0
   11ad0:	pop	{fp}		; (ldr fp, [sp], #4)
   11ad4:	bx	lr

00011ad8 <avl_remove_impl@@Base>:
   11ad8:	str	r4, [sp, #-12]!
   11adc:	str	fp, [sp, #4]
   11ae0:	str	lr, [sp, #8]
   11ae4:	add	fp, sp, #8
   11ae8:	sub	sp, sp, #28
   11aec:	str	r0, [fp, #-32]	; 0xffffffe0
   11af0:	str	r1, [fp, #-36]	; 0xffffffdc
   11af4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11af8:	cmp	r3, #0
   11afc:	bne	11b08 <avl_remove_impl@@Base+0x30>
   11b00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b04:	b	11e58 <avl_remove_impl@@Base+0x380>
   11b08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b0c:	ldr	r3, [r3]
   11b10:	mov	r1, r3
   11b14:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11b18:	bl	10c48 <strcmp@plt>
   11b1c:	mov	r3, r0
   11b20:	cmp	r3, #0
   11b24:	bge	11b4c <avl_remove_impl@@Base+0x74>
   11b28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b2c:	ldr	r3, [r3, #4]
   11b30:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11b34:	mov	r0, r3
   11b38:	bl	11ad8 <avl_remove_impl@@Base>
   11b3c:	mov	r2, r0
   11b40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b44:	str	r2, [r3, #4]
   11b48:	b	11d28 <avl_remove_impl@@Base+0x250>
   11b4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b50:	ldr	r3, [r3]
   11b54:	mov	r1, r3
   11b58:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11b5c:	bl	10c48 <strcmp@plt>
   11b60:	mov	r3, r0
   11b64:	cmp	r3, #0
   11b68:	ble	11b90 <avl_remove_impl@@Base+0xb8>
   11b6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b70:	ldr	r3, [r3, #8]
   11b74:	ldr	r1, [fp, #-36]	; 0xffffffdc
   11b78:	mov	r0, r3
   11b7c:	bl	11ad8 <avl_remove_impl@@Base>
   11b80:	mov	r2, r0
   11b84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b88:	str	r2, [r3, #8]
   11b8c:	b	11d28 <avl_remove_impl@@Base+0x250>
   11b90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11b94:	ldr	r3, [r3, #4]
   11b98:	cmp	r3, #0
   11b9c:	beq	11bb0 <avl_remove_impl@@Base+0xd8>
   11ba0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11ba4:	ldr	r3, [r3, #8]
   11ba8:	cmp	r3, #0
   11bac:	bne	11c98 <avl_remove_impl@@Base+0x1c0>
   11bb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11bb4:	ldr	r3, [r3, #4]
   11bb8:	cmp	r3, #0
   11bbc:	beq	11bcc <avl_remove_impl@@Base+0xf4>
   11bc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11bc4:	ldr	r3, [r3, #4]
   11bc8:	b	11bd4 <avl_remove_impl@@Base+0xfc>
   11bcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11bd0:	ldr	r3, [r3, #8]
   11bd4:	str	r3, [fp, #-16]
   11bd8:	ldr	r3, [fp, #-16]
   11bdc:	cmp	r3, #0
   11be0:	bne	11bf8 <avl_remove_impl@@Base+0x120>
   11be4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11be8:	str	r3, [fp, #-16]
   11bec:	mov	r3, #0
   11bf0:	str	r3, [fp, #-32]	; 0xffffffe0
   11bf4:	b	11c7c <avl_remove_impl@@Base+0x1a4>
   11bf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11bfc:	ldr	r4, [r3]
   11c00:	ldr	r3, [fp, #-16]
   11c04:	ldr	r3, [r3]
   11c08:	mov	r0, r3
   11c0c:	bl	10ccc <strlen@plt>
   11c10:	mov	r3, r0
   11c14:	add	r3, r3, #1
   11c18:	mov	r1, r3
   11c1c:	mov	r0, r4
   11c20:	bl	10c84 <realloc@plt>
   11c24:	mov	r2, r0
   11c28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c2c:	str	r2, [r3]
   11c30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c34:	ldr	r2, [r3]
   11c38:	ldr	r3, [fp, #-16]
   11c3c:	ldr	r3, [r3]
   11c40:	mov	r1, r3
   11c44:	mov	r0, r2
   11c48:	bl	10c90 <strcpy@plt>
   11c4c:	ldr	r3, [fp, #-16]
   11c50:	ldr	r2, [r3, #4]
   11c54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c58:	str	r2, [r3, #4]
   11c5c:	ldr	r3, [fp, #-16]
   11c60:	ldr	r2, [r3, #8]
   11c64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c68:	str	r2, [r3, #8]
   11c6c:	ldr	r3, [fp, #-16]
   11c70:	ldr	r2, [r3, #12]
   11c74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c78:	str	r2, [r3, #12]
   11c7c:	ldr	r3, [fp, #-16]
   11c80:	ldr	r3, [r3]
   11c84:	mov	r0, r3
   11c88:	bl	10c6c <free@plt>
   11c8c:	ldr	r0, [fp, #-16]
   11c90:	bl	10c6c <free@plt>
   11c94:	b	11d28 <avl_remove_impl@@Base+0x250>
   11c98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11c9c:	ldr	r3, [r3, #8]
   11ca0:	mov	r0, r3
   11ca4:	bl	11a40 <avl_no_valormin@@Base>
   11ca8:	str	r0, [fp, #-20]	; 0xffffffec
   11cac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11cb0:	ldr	r4, [r3]
   11cb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   11cb8:	ldr	r3, [r3]
   11cbc:	mov	r0, r3
   11cc0:	bl	10ccc <strlen@plt>
   11cc4:	mov	r3, r0
   11cc8:	add	r3, r3, #1
   11ccc:	mov	r1, r3
   11cd0:	mov	r0, r4
   11cd4:	bl	10c84 <realloc@plt>
   11cd8:	mov	r2, r0
   11cdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11ce0:	str	r2, [r3]
   11ce4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11ce8:	ldr	r2, [r3]
   11cec:	ldr	r3, [fp, #-20]	; 0xffffffec
   11cf0:	ldr	r3, [r3]
   11cf4:	mov	r1, r3
   11cf8:	mov	r0, r2
   11cfc:	bl	10c90 <strcpy@plt>
   11d00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d04:	ldr	r2, [r3, #8]
   11d08:	ldr	r3, [fp, #-20]	; 0xffffffec
   11d0c:	ldr	r3, [r3]
   11d10:	mov	r1, r3
   11d14:	mov	r0, r2
   11d18:	bl	11ad8 <avl_remove_impl@@Base>
   11d1c:	mov	r2, r0
   11d20:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d24:	str	r2, [r3, #8]
   11d28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d2c:	cmp	r3, #0
   11d30:	bne	11d3c <avl_remove_impl@@Base+0x264>
   11d34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d38:	b	11e58 <avl_remove_impl@@Base+0x380>
   11d3c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d40:	ldr	r3, [r3, #4]
   11d44:	mov	r0, r3
   11d48:	bl	113f0 <avl_altura@@Base>
   11d4c:	mov	r4, r0
   11d50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d54:	ldr	r3, [r3, #8]
   11d58:	mov	r0, r3
   11d5c:	bl	113f0 <avl_altura@@Base>
   11d60:	mov	r3, r0
   11d64:	mov	r1, r3
   11d68:	mov	r0, r4
   11d6c:	bl	1142c <max@@Base>
   11d70:	mov	r3, r0
   11d74:	add	r2, r3, #1
   11d78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d7c:	str	r2, [r3, #12]
   11d80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11d84:	bl	116e4 <calc_balanceamento@@Base>
   11d88:	str	r0, [fp, #-24]	; 0xffffffe8
   11d8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11d90:	cmp	r3, #1
   11d94:	ble	11df0 <avl_remove_impl@@Base+0x318>
   11d98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11d9c:	ldr	r3, [r3, #8]
   11da0:	mov	r0, r3
   11da4:	bl	116e4 <calc_balanceamento@@Base>
   11da8:	mov	r3, r0
   11dac:	cmp	r3, #0
   11db0:	bge	11de0 <avl_remove_impl@@Base+0x308>
   11db4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11db8:	ldr	r3, [r3, #8]
   11dbc:	mov	r0, r3
   11dc0:	bl	1150c <roda_direita@@Base>
   11dc4:	mov	r2, r0
   11dc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11dcc:	str	r2, [r3, #8]
   11dd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11dd4:	bl	115f8 <roda_esquerda@@Base>
   11dd8:	mov	r3, r0
   11ddc:	b	11e58 <avl_remove_impl@@Base+0x380>
   11de0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11de4:	bl	115f8 <roda_esquerda@@Base>
   11de8:	mov	r3, r0
   11dec:	b	11e58 <avl_remove_impl@@Base+0x380>
   11df0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11df4:	cmn	r3, #1
   11df8:	bge	11e54 <avl_remove_impl@@Base+0x37c>
   11dfc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11e00:	ldr	r3, [r3, #4]
   11e04:	mov	r0, r3
   11e08:	bl	116e4 <calc_balanceamento@@Base>
   11e0c:	mov	r3, r0
   11e10:	cmp	r3, #0
   11e14:	ble	11e44 <avl_remove_impl@@Base+0x36c>
   11e18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11e1c:	ldr	r3, [r3, #4]
   11e20:	mov	r0, r3
   11e24:	bl	115f8 <roda_esquerda@@Base>
   11e28:	mov	r2, r0
   11e2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11e30:	str	r2, [r3, #4]
   11e34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11e38:	bl	1150c <roda_direita@@Base>
   11e3c:	mov	r3, r0
   11e40:	b	11e58 <avl_remove_impl@@Base+0x380>
   11e44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11e48:	bl	1150c <roda_direita@@Base>
   11e4c:	mov	r3, r0
   11e50:	b	11e58 <avl_remove_impl@@Base+0x380>
   11e54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11e58:	mov	r0, r3
   11e5c:	sub	sp, fp, #8
   11e60:	ldr	r4, [sp]
   11e64:	ldr	fp, [sp, #4]
   11e68:	add	sp, sp, #8
   11e6c:	pop	{pc}		; (ldr pc, [sp], #4)

00011e70 <avl_preordem_impl@@Base>:
   11e70:	str	fp, [sp, #-8]!
   11e74:	str	lr, [sp, #4]
   11e78:	add	fp, sp, #4
   11e7c:	sub	sp, sp, #8
   11e80:	str	r0, [fp, #-8]
   11e84:	ldr	r3, [fp, #-8]
   11e88:	cmp	r3, #0
   11e8c:	beq	11ed8 <avl_preordem_impl@@Base+0x68>
   11e90:	ldr	r3, [fp, #-8]
   11e94:	ldr	r1, [r3]
   11e98:	ldr	r3, [fp, #-8]
   11e9c:	ldr	r3, [r3, #16]
   11ea0:	mov	r2, r3
   11ea4:	ldr	r3, [pc, #64]	; 11eec <avl_preordem_impl@@Base+0x7c>
   11ea8:	add	r3, pc, r3
   11eac:	mov	r0, r3
   11eb0:	bl	10c54 <printf@plt>
   11eb4:	ldr	r3, [fp, #-8]
   11eb8:	ldr	r3, [r3, #4]
   11ebc:	mov	r0, r3
   11ec0:	bl	11e70 <avl_preordem_impl@@Base>
   11ec4:	ldr	r3, [fp, #-8]
   11ec8:	ldr	r3, [r3, #8]
   11ecc:	mov	r0, r3
   11ed0:	bl	11e70 <avl_preordem_impl@@Base>
   11ed4:	b	11edc <avl_preordem_impl@@Base+0x6c>
   11ed8:	nop	{0}
   11edc:	sub	sp, fp, #4
   11ee0:	ldr	fp, [sp]
   11ee4:	add	sp, sp, #4
   11ee8:	pop	{pc}		; (ldr pc, [sp], #4)
   11eec:			; <UNDEFINED> instruction: 0x00000ab4

00011ef0 <bst_nova@@Base>:
   11ef0:	str	fp, [sp, #-8]!
   11ef4:	str	lr, [sp, #4]
   11ef8:	add	fp, sp, #4
   11efc:	sub	sp, sp, #8
   11f00:	mov	r0, #4
   11f04:	bl	10ca8 <malloc@plt>
   11f08:	mov	r3, r0
   11f0c:	str	r3, [fp, #-8]
   11f10:	ldr	r3, [fp, #-8]
   11f14:	cmp	r3, #0
   11f18:	bne	11f24 <bst_nova@@Base+0x34>
   11f1c:	mov	r3, #0
   11f20:	b	11f34 <bst_nova@@Base+0x44>
   11f24:	ldr	r3, [fp, #-8]
   11f28:	mov	r2, #0
   11f2c:	str	r2, [r3]
   11f30:	ldr	r3, [fp, #-8]
   11f34:	mov	r0, r3
   11f38:	sub	sp, fp, #4
   11f3c:	ldr	fp, [sp]
   11f40:	add	sp, sp, #4
   11f44:	pop	{pc}		; (ldr pc, [sp], #4)

00011f48 <bst_apaga@@Base>:
   11f48:	str	fp, [sp, #-8]!
   11f4c:	str	lr, [sp, #4]
   11f50:	add	fp, sp, #4
   11f54:	sub	sp, sp, #8
   11f58:	str	r0, [fp, #-8]
   11f5c:	b	11f8c <bst_apaga@@Base+0x44>
   11f60:	ldr	r3, [fp, #-8]
   11f64:	ldr	r2, [r3]
   11f68:	ldr	r3, [fp, #-8]
   11f6c:	ldr	r3, [r3]
   11f70:	ldr	r3, [r3]
   11f74:	mov	r1, r3
   11f78:	mov	r0, r2
   11f7c:	bl	124bc <bst_remove_impl@@Base>
   11f80:	mov	r2, r0
   11f84:	ldr	r3, [fp, #-8]
   11f88:	str	r2, [r3]
   11f8c:	ldr	r3, [fp, #-8]
   11f90:	ldr	r3, [r3]
   11f94:	cmp	r3, #0
   11f98:	bne	11f60 <bst_apaga@@Base+0x18>
   11f9c:	ldr	r0, [fp, #-8]
   11fa0:	bl	10c6c <free@plt>
   11fa4:	nop	{0}
   11fa8:	sub	sp, fp, #4
   11fac:	ldr	fp, [sp]
   11fb0:	add	sp, sp, #4
   11fb4:	pop	{pc}		; (ldr pc, [sp], #4)

00011fb8 <bst_pesquisa@@Base>:
   11fb8:	str	fp, [sp, #-8]!
   11fbc:	str	lr, [sp, #4]
   11fc0:	add	fp, sp, #4
   11fc4:	sub	sp, sp, #8
   11fc8:	str	r0, [fp, #-8]
   11fcc:	str	r1, [fp, #-12]
   11fd0:	ldr	r3, [fp, #-8]
   11fd4:	cmp	r3, #0
   11fd8:	beq	11fe8 <bst_pesquisa@@Base+0x30>
   11fdc:	ldr	r3, [fp, #-12]
   11fe0:	cmp	r3, #0
   11fe4:	bne	11ff0 <bst_pesquisa@@Base+0x38>
   11fe8:	mov	r3, #0
   11fec:	b	12008 <bst_pesquisa@@Base+0x50>
   11ff0:	ldr	r3, [fp, #-8]
   11ff4:	ldr	r3, [r3]
   11ff8:	ldr	r1, [fp, #-12]
   11ffc:	mov	r0, r3
   12000:	bl	12330 <bst_pesquisa_impl@@Base>
   12004:	mov	r3, r0
   12008:	mov	r0, r3
   1200c:	sub	sp, fp, #4
   12010:	ldr	fp, [sp]
   12014:	add	sp, sp, #4
   12018:	pop	{pc}		; (ldr pc, [sp], #4)

0001201c <bst_insere@@Base>:
   1201c:	str	fp, [sp, #-8]!
   12020:	str	lr, [sp, #4]
   12024:	add	fp, sp, #4
   12028:	sub	sp, sp, #8
   1202c:	str	r0, [fp, #-8]
   12030:	str	r1, [fp, #-12]
   12034:	ldr	r3, [fp, #-8]
   12038:	cmp	r3, #0
   1203c:	beq	1204c <bst_insere@@Base+0x30>
   12040:	ldr	r3, [fp, #-12]
   12044:	cmp	r3, #0
   12048:	bne	12054 <bst_insere@@Base+0x38>
   1204c:	mvn	r3, #0
   12050:	b	12078 <bst_insere@@Base+0x5c>
   12054:	ldr	r3, [fp, #-8]
   12058:	ldr	r3, [r3]
   1205c:	ldr	r1, [fp, #-12]
   12060:	mov	r0, r3
   12064:	bl	123ec <bst_insere_impl@@Base>
   12068:	mov	r2, r0
   1206c:	ldr	r3, [fp, #-8]
   12070:	str	r2, [r3]
   12074:	mov	r3, #0
   12078:	mov	r0, r3
   1207c:	sub	sp, fp, #4
   12080:	ldr	fp, [sp]
   12084:	add	sp, sp, #4
   12088:	pop	{pc}		; (ldr pc, [sp], #4)

0001208c <bst_remove@@Base>:
   1208c:	str	fp, [sp, #-8]!
   12090:	str	lr, [sp, #4]
   12094:	add	fp, sp, #4
   12098:	sub	sp, sp, #8
   1209c:	str	r0, [fp, #-8]
   120a0:	str	r1, [fp, #-12]
   120a4:	ldr	r3, [fp, #-8]
   120a8:	cmp	r3, #0
   120ac:	beq	120bc <bst_remove@@Base+0x30>
   120b0:	ldr	r3, [fp, #-12]
   120b4:	cmp	r3, #0
   120b8:	bne	120c4 <bst_remove@@Base+0x38>
   120bc:	mvn	r3, #0
   120c0:	b	120e8 <bst_remove@@Base+0x5c>
   120c4:	ldr	r3, [fp, #-8]
   120c8:	ldr	r3, [r3]
   120cc:	ldr	r1, [fp, #-12]
   120d0:	mov	r0, r3
   120d4:	bl	124bc <bst_remove_impl@@Base>
   120d8:	mov	r2, r0
   120dc:	ldr	r3, [fp, #-8]
   120e0:	str	r2, [r3]
   120e4:	mov	r3, #0
   120e8:	mov	r0, r3
   120ec:	sub	sp, fp, #4
   120f0:	ldr	fp, [sp]
   120f4:	add	sp, sp, #4
   120f8:	pop	{pc}		; (ldr pc, [sp], #4)

000120fc <bst_min@@Base>:
   120fc:	str	fp, [sp, #-8]!
   12100:	str	lr, [sp, #4]
   12104:	add	fp, sp, #4
   12108:	sub	sp, sp, #8
   1210c:	str	r0, [fp, #-8]
   12110:	ldr	r3, [fp, #-8]
   12114:	cmp	r3, #0
   12118:	bne	12124 <bst_min@@Base+0x28>
   1211c:	mov	r3, #0
   12120:	b	1213c <bst_min@@Base+0x40>
   12124:	ldr	r3, [fp, #-8]
   12128:	ldr	r3, [r3]
   1212c:	mov	r0, r3
   12130:	bl	12298 <bst_no_valormin@@Base>
   12134:	mov	r3, r0
   12138:	ldr	r3, [r3]
   1213c:	mov	r0, r3
   12140:	sub	sp, fp, #4
   12144:	ldr	fp, [sp]
   12148:	add	sp, sp, #4
   1214c:	pop	{pc}		; (ldr pc, [sp], #4)

00012150 <bst_max@@Base>:
   12150:	str	fp, [sp, #-8]!
   12154:	str	lr, [sp, #4]
   12158:	add	fp, sp, #4
   1215c:	sub	sp, sp, #8
   12160:	str	r0, [fp, #-8]
   12164:	ldr	r3, [fp, #-8]
   12168:	cmp	r3, #0
   1216c:	bne	12178 <bst_max@@Base+0x28>
   12170:	mov	r3, #0
   12174:	b	12190 <bst_max@@Base+0x40>
   12178:	ldr	r3, [fp, #-8]
   1217c:	ldr	r3, [r3]
   12180:	mov	r0, r3
   12184:	bl	122e4 <bst_no_valormax@@Base>
   12188:	mov	r3, r0
   1218c:	ldr	r3, [r3]
   12190:	mov	r0, r3
   12194:	sub	sp, fp, #4
   12198:	ldr	fp, [sp]
   1219c:	add	sp, sp, #4
   121a0:	pop	{pc}		; (ldr pc, [sp], #4)

000121a4 <bst_imprime@@Base>:
   121a4:	str	fp, [sp, #-8]!
   121a8:	str	lr, [sp, #4]
   121ac:	add	fp, sp, #4
   121b0:	sub	sp, sp, #8
   121b4:	str	r0, [fp, #-8]
   121b8:	ldr	r3, [fp, #-8]
   121bc:	cmp	r3, #0
   121c0:	beq	121f0 <bst_imprime@@Base+0x4c>
   121c4:	ldr	r3, [pc, #56]	; 12204 <bst_imprime@@Base+0x60>
   121c8:	add	r3, pc, r3
   121cc:	mov	r0, r3
   121d0:	bl	10c54 <printf@plt>
   121d4:	ldr	r3, [fp, #-8]
   121d8:	ldr	r3, [r3]
   121dc:	mov	r0, r3
   121e0:	bl	127f8 <bst_preordem_impl@@Base>
   121e4:	mov	r0, #10
   121e8:	bl	10cd8 <putchar@plt>
   121ec:	b	121f4 <bst_imprime@@Base+0x50>
   121f0:	nop	{0}
   121f4:	sub	sp, fp, #4
   121f8:	ldr	fp, [sp]
   121fc:	add	sp, sp, #4
   12200:	pop	{pc}		; (ldr pc, [sp], #4)
   12204:	muleq	r0, ip, r7

00012208 <bst_novo_no@@Base>:
   12208:	str	fp, [sp, #-8]!
   1220c:	str	lr, [sp, #4]
   12210:	add	fp, sp, #4
   12214:	sub	sp, sp, #16
   12218:	str	r0, [fp, #-16]
   1221c:	mov	r0, #12
   12220:	bl	10ca8 <malloc@plt>
   12224:	mov	r3, r0
   12228:	str	r3, [fp, #-8]
   1222c:	ldr	r0, [fp, #-16]
   12230:	bl	10ccc <strlen@plt>
   12234:	mov	r3, r0
   12238:	add	r3, r3, #1
   1223c:	mov	r0, r3
   12240:	bl	10ca8 <malloc@plt>
   12244:	mov	r3, r0
   12248:	mov	r2, r3
   1224c:	ldr	r3, [fp, #-8]
   12250:	str	r2, [r3]
   12254:	ldr	r3, [fp, #-8]
   12258:	ldr	r3, [r3]
   1225c:	ldr	r1, [fp, #-16]
   12260:	mov	r0, r3
   12264:	bl	10c90 <strcpy@plt>
   12268:	ldr	r3, [fp, #-8]
   1226c:	mov	r2, #0
   12270:	str	r2, [r3, #4]
   12274:	ldr	r3, [fp, #-8]
   12278:	mov	r2, #0
   1227c:	str	r2, [r3, #8]
   12280:	ldr	r3, [fp, #-8]
   12284:	mov	r0, r3
   12288:	sub	sp, fp, #4
   1228c:	ldr	fp, [sp]
   12290:	add	sp, sp, #4
   12294:	pop	{pc}		; (ldr pc, [sp], #4)

00012298 <bst_no_valormin@@Base>:
   12298:	push	{fp}		; (str fp, [sp, #-4]!)
   1229c:	add	fp, sp, #0
   122a0:	sub	sp, sp, #20
   122a4:	str	r0, [fp, #-16]
   122a8:	ldr	r3, [fp, #-16]
   122ac:	str	r3, [fp, #-8]
   122b0:	b	122c0 <bst_no_valormin@@Base+0x28>
   122b4:	ldr	r3, [fp, #-8]
   122b8:	ldr	r3, [r3, #4]
   122bc:	str	r3, [fp, #-8]
   122c0:	ldr	r3, [fp, #-8]
   122c4:	ldr	r3, [r3, #4]
   122c8:	cmp	r3, #0
   122cc:	bne	122b4 <bst_no_valormin@@Base+0x1c>
   122d0:	ldr	r3, [fp, #-8]
   122d4:	mov	r0, r3
   122d8:	add	sp, fp, #0
   122dc:	pop	{fp}		; (ldr fp, [sp], #4)
   122e0:	bx	lr

000122e4 <bst_no_valormax@@Base>:
   122e4:	push	{fp}		; (str fp, [sp, #-4]!)
   122e8:	add	fp, sp, #0
   122ec:	sub	sp, sp, #20
   122f0:	str	r0, [fp, #-16]
   122f4:	ldr	r3, [fp, #-16]
   122f8:	str	r3, [fp, #-8]
   122fc:	b	1230c <bst_no_valormax@@Base+0x28>
   12300:	ldr	r3, [fp, #-8]
   12304:	ldr	r3, [r3, #8]
   12308:	str	r3, [fp, #-8]
   1230c:	ldr	r3, [fp, #-8]
   12310:	ldr	r3, [r3, #8]
   12314:	cmp	r3, #0
   12318:	bne	12300 <bst_no_valormax@@Base+0x1c>
   1231c:	ldr	r3, [fp, #-8]
   12320:	mov	r0, r3
   12324:	add	sp, fp, #0
   12328:	pop	{fp}		; (ldr fp, [sp], #4)
   1232c:	bx	lr

00012330 <bst_pesquisa_impl@@Base>:
   12330:	str	fp, [sp, #-8]!
   12334:	str	lr, [sp, #4]
   12338:	add	fp, sp, #4
   1233c:	sub	sp, sp, #8
   12340:	str	r0, [fp, #-8]
   12344:	str	r1, [fp, #-12]
   12348:	ldr	r3, [fp, #-8]
   1234c:	cmp	r3, #0
   12350:	bne	1235c <bst_pesquisa_impl@@Base+0x2c>
   12354:	mov	r3, #0
   12358:	b	123d8 <bst_pesquisa_impl@@Base+0xa8>
   1235c:	ldr	r3, [fp, #-8]
   12360:	ldr	r3, [r3]
   12364:	mov	r1, r3
   12368:	ldr	r0, [fp, #-12]
   1236c:	bl	10c48 <strcmp@plt>
   12370:	mov	r3, r0
   12374:	cmp	r3, #0
   12378:	bge	12398 <bst_pesquisa_impl@@Base+0x68>
   1237c:	ldr	r3, [fp, #-8]
   12380:	ldr	r3, [r3, #4]
   12384:	ldr	r1, [fp, #-12]
   12388:	mov	r0, r3
   1238c:	bl	12330 <bst_pesquisa_impl@@Base>
   12390:	mov	r3, r0
   12394:	b	123d8 <bst_pesquisa_impl@@Base+0xa8>
   12398:	ldr	r3, [fp, #-8]
   1239c:	ldr	r3, [r3]
   123a0:	mov	r1, r3
   123a4:	ldr	r0, [fp, #-12]
   123a8:	bl	10c48 <strcmp@plt>
   123ac:	mov	r3, r0
   123b0:	cmp	r3, #0
   123b4:	ble	123d4 <bst_pesquisa_impl@@Base+0xa4>
   123b8:	ldr	r3, [fp, #-8]
   123bc:	ldr	r3, [r3, #8]
   123c0:	ldr	r1, [fp, #-12]
   123c4:	mov	r0, r3
   123c8:	bl	12330 <bst_pesquisa_impl@@Base>
   123cc:	mov	r3, r0
   123d0:	b	123d8 <bst_pesquisa_impl@@Base+0xa8>
   123d4:	ldr	r3, [fp, #-8]
   123d8:	mov	r0, r3
   123dc:	sub	sp, fp, #4
   123e0:	ldr	fp, [sp]
   123e4:	add	sp, sp, #4
   123e8:	pop	{pc}		; (ldr pc, [sp], #4)

000123ec <bst_insere_impl@@Base>:
   123ec:	str	fp, [sp, #-8]!
   123f0:	str	lr, [sp, #4]
   123f4:	add	fp, sp, #4
   123f8:	sub	sp, sp, #8
   123fc:	str	r0, [fp, #-8]
   12400:	str	r1, [fp, #-12]
   12404:	ldr	r3, [fp, #-8]
   12408:	cmp	r3, #0
   1240c:	bne	12420 <bst_insere_impl@@Base+0x34>
   12410:	ldr	r0, [fp, #-12]
   12414:	bl	12208 <bst_novo_no@@Base>
   12418:	mov	r3, r0
   1241c:	b	124a8 <bst_insere_impl@@Base+0xbc>
   12420:	ldr	r3, [fp, #-8]
   12424:	ldr	r3, [r3]
   12428:	mov	r1, r3
   1242c:	ldr	r0, [fp, #-12]
   12430:	bl	10c48 <strcmp@plt>
   12434:	mov	r3, r0
   12438:	cmp	r3, #0
   1243c:	bge	12464 <bst_insere_impl@@Base+0x78>
   12440:	ldr	r3, [fp, #-8]
   12444:	ldr	r3, [r3, #4]
   12448:	ldr	r1, [fp, #-12]
   1244c:	mov	r0, r3
   12450:	bl	123ec <bst_insere_impl@@Base>
   12454:	mov	r2, r0
   12458:	ldr	r3, [fp, #-8]
   1245c:	str	r2, [r3, #4]
   12460:	b	124a4 <bst_insere_impl@@Base+0xb8>
   12464:	ldr	r3, [fp, #-8]
   12468:	ldr	r3, [r3]
   1246c:	mov	r1, r3
   12470:	ldr	r0, [fp, #-12]
   12474:	bl	10c48 <strcmp@plt>
   12478:	mov	r3, r0
   1247c:	cmp	r3, #0
   12480:	ble	124a4 <bst_insere_impl@@Base+0xb8>
   12484:	ldr	r3, [fp, #-8]
   12488:	ldr	r3, [r3, #8]
   1248c:	ldr	r1, [fp, #-12]
   12490:	mov	r0, r3
   12494:	bl	123ec <bst_insere_impl@@Base>
   12498:	mov	r2, r0
   1249c:	ldr	r3, [fp, #-8]
   124a0:	str	r2, [r3, #8]
   124a4:	ldr	r3, [fp, #-8]
   124a8:	mov	r0, r3
   124ac:	sub	sp, fp, #4
   124b0:	ldr	fp, [sp]
   124b4:	add	sp, sp, #4
   124b8:	pop	{pc}		; (ldr pc, [sp], #4)

000124bc <bst_remove_impl@@Base>:
   124bc:	str	r4, [sp, #-12]!
   124c0:	str	fp, [sp, #4]
   124c4:	str	lr, [sp, #8]
   124c8:	add	fp, sp, #8
   124cc:	sub	sp, sp, #20
   124d0:	str	r0, [fp, #-24]	; 0xffffffe8
   124d4:	str	r1, [fp, #-28]	; 0xffffffe4
   124d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   124dc:	cmp	r3, #0
   124e0:	bne	124ec <bst_remove_impl@@Base+0x30>
   124e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   124e8:	b	12700 <bst_remove_impl@@Base+0x244>
   124ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   124f0:	ldr	r3, [r3]
   124f4:	mov	r1, r3
   124f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   124fc:	bl	10c48 <strcmp@plt>
   12500:	mov	r3, r0
   12504:	cmp	r3, #0
   12508:	bge	12530 <bst_remove_impl@@Base+0x74>
   1250c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12510:	ldr	r3, [r3, #4]
   12514:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12518:	mov	r0, r3
   1251c:	bl	124bc <bst_remove_impl@@Base>
   12520:	mov	r2, r0
   12524:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12528:	str	r2, [r3, #4]
   1252c:	b	126fc <bst_remove_impl@@Base+0x240>
   12530:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12534:	ldr	r3, [r3]
   12538:	mov	r1, r3
   1253c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12540:	bl	10c48 <strcmp@plt>
   12544:	mov	r3, r0
   12548:	cmp	r3, #0
   1254c:	ble	12574 <bst_remove_impl@@Base+0xb8>
   12550:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12554:	ldr	r3, [r3, #8]
   12558:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1255c:	mov	r0, r3
   12560:	bl	124bc <bst_remove_impl@@Base>
   12564:	mov	r2, r0
   12568:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1256c:	str	r2, [r3, #8]
   12570:	b	126fc <bst_remove_impl@@Base+0x240>
   12574:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12578:	ldr	r3, [r3, #4]
   1257c:	cmp	r3, #0
   12580:	beq	12594 <bst_remove_impl@@Base+0xd8>
   12584:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12588:	ldr	r3, [r3, #8]
   1258c:	cmp	r3, #0
   12590:	bne	1266c <bst_remove_impl@@Base+0x1b0>
   12594:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12598:	ldr	r3, [r3, #4]
   1259c:	cmp	r3, #0
   125a0:	beq	125b0 <bst_remove_impl@@Base+0xf4>
   125a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   125a8:	ldr	r3, [r3, #4]
   125ac:	b	125b8 <bst_remove_impl@@Base+0xfc>
   125b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   125b4:	ldr	r3, [r3, #8]
   125b8:	str	r3, [fp, #-16]
   125bc:	ldr	r3, [fp, #-16]
   125c0:	cmp	r3, #0
   125c4:	bne	125dc <bst_remove_impl@@Base+0x120>
   125c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   125cc:	str	r3, [fp, #-16]
   125d0:	mov	r3, #0
   125d4:	str	r3, [fp, #-24]	; 0xffffffe8
   125d8:	b	12650 <bst_remove_impl@@Base+0x194>
   125dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   125e0:	ldr	r4, [r3]
   125e4:	ldr	r3, [fp, #-16]
   125e8:	ldr	r3, [r3]
   125ec:	mov	r0, r3
   125f0:	bl	10ccc <strlen@plt>
   125f4:	mov	r3, r0
   125f8:	add	r3, r3, #1
   125fc:	mov	r1, r3
   12600:	mov	r0, r4
   12604:	bl	10c84 <realloc@plt>
   12608:	mov	r2, r0
   1260c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12610:	str	r2, [r3]
   12614:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12618:	ldr	r2, [r3]
   1261c:	ldr	r3, [fp, #-16]
   12620:	ldr	r3, [r3]
   12624:	mov	r1, r3
   12628:	mov	r0, r2
   1262c:	bl	10c90 <strcpy@plt>
   12630:	ldr	r3, [fp, #-16]
   12634:	ldr	r2, [r3, #4]
   12638:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1263c:	str	r2, [r3, #4]
   12640:	ldr	r3, [fp, #-16]
   12644:	ldr	r2, [r3, #8]
   12648:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1264c:	str	r2, [r3, #8]
   12650:	ldr	r3, [fp, #-16]
   12654:	ldr	r3, [r3]
   12658:	mov	r0, r3
   1265c:	bl	10c6c <free@plt>
   12660:	ldr	r0, [fp, #-16]
   12664:	bl	10c6c <free@plt>
   12668:	b	126fc <bst_remove_impl@@Base+0x240>
   1266c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12670:	ldr	r3, [r3, #8]
   12674:	mov	r0, r3
   12678:	bl	12298 <bst_no_valormin@@Base>
   1267c:	str	r0, [fp, #-20]	; 0xffffffec
   12680:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12684:	ldr	r4, [r3]
   12688:	ldr	r3, [fp, #-20]	; 0xffffffec
   1268c:	ldr	r3, [r3]
   12690:	mov	r0, r3
   12694:	bl	10ccc <strlen@plt>
   12698:	mov	r3, r0
   1269c:	add	r3, r3, #1
   126a0:	mov	r1, r3
   126a4:	mov	r0, r4
   126a8:	bl	10c84 <realloc@plt>
   126ac:	mov	r2, r0
   126b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   126b4:	str	r2, [r3]
   126b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   126bc:	ldr	r2, [r3]
   126c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   126c4:	ldr	r3, [r3]
   126c8:	mov	r1, r3
   126cc:	mov	r0, r2
   126d0:	bl	10c90 <strcpy@plt>
   126d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   126d8:	ldr	r2, [r3, #8]
   126dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   126e0:	ldr	r3, [r3]
   126e4:	mov	r1, r3
   126e8:	mov	r0, r2
   126ec:	bl	124bc <bst_remove_impl@@Base>
   126f0:	mov	r2, r0
   126f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   126f8:	str	r2, [r3, #8]
   126fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12700:	mov	r0, r3
   12704:	sub	sp, fp, #8
   12708:	ldr	r4, [sp]
   1270c:	ldr	fp, [sp, #4]
   12710:	add	sp, sp, #8
   12714:	pop	{pc}		; (ldr pc, [sp], #4)

00012718 <bst_altura@@Base>:
   12718:	str	fp, [sp, #-8]!
   1271c:	str	lr, [sp, #4]
   12720:	add	fp, sp, #4
   12724:	sub	sp, sp, #16
   12728:	str	r0, [fp, #-16]
   1272c:	mov	r3, #0
   12730:	str	r3, [fp, #-8]
   12734:	mov	r3, #0
   12738:	str	r3, [fp, #-12]
   1273c:	ldr	r3, [fp, #-16]
   12740:	cmp	r3, #0
   12744:	bne	12750 <bst_altura@@Base+0x38>
   12748:	mvn	r3, #0
   1274c:	b	127e4 <bst_altura@@Base+0xcc>
   12750:	ldr	r3, [fp, #-16]
   12754:	ldr	r3, [r3, #8]
   12758:	cmp	r3, #0
   1275c:	bne	12778 <bst_altura@@Base+0x60>
   12760:	ldr	r3, [fp, #-16]
   12764:	ldr	r3, [r3, #4]
   12768:	cmp	r3, #0
   1276c:	bne	12778 <bst_altura@@Base+0x60>
   12770:	mov	r3, #0
   12774:	b	127e4 <bst_altura@@Base+0xcc>
   12778:	ldr	r3, [fp, #-16]
   1277c:	ldr	r3, [r3, #4]
   12780:	mov	r0, r3
   12784:	bl	12718 <bst_altura@@Base>
   12788:	str	r0, [fp, #-8]
   1278c:	ldr	r3, [fp, #-16]
   12790:	ldr	r3, [r3, #8]
   12794:	mov	r0, r3
   12798:	bl	12718 <bst_altura@@Base>
   1279c:	str	r0, [fp, #-12]
   127a0:	ldr	r2, [fp, #-8]
   127a4:	ldr	r3, [fp, #-12]
   127a8:	cmp	r2, r3
   127ac:	ble	127cc <bst_altura@@Base+0xb4>
   127b0:	ldr	r3, [fp, #-16]
   127b4:	ldr	r3, [r3, #4]
   127b8:	mov	r0, r3
   127bc:	bl	12718 <bst_altura@@Base>
   127c0:	mov	r3, r0
   127c4:	add	r3, r3, #1
   127c8:	b	127e4 <bst_altura@@Base+0xcc>
   127cc:	ldr	r3, [fp, #-16]
   127d0:	ldr	r3, [r3, #8]
   127d4:	mov	r0, r3
   127d8:	bl	12718 <bst_altura@@Base>
   127dc:	mov	r3, r0
   127e0:	add	r3, r3, #1
   127e4:	mov	r0, r3
   127e8:	sub	sp, fp, #4
   127ec:	ldr	fp, [sp]
   127f0:	add	sp, sp, #4
   127f4:	pop	{pc}		; (ldr pc, [sp], #4)

000127f8 <bst_preordem_impl@@Base>:
   127f8:	str	fp, [sp, #-8]!
   127fc:	str	lr, [sp, #4]
   12800:	add	fp, sp, #4
   12804:	sub	sp, sp, #8
   12808:	str	r0, [fp, #-8]
   1280c:	ldr	r3, [fp, #-8]
   12810:	cmp	r3, #0
   12814:	beq	1285c <bst_preordem_impl@@Base+0x64>
   12818:	ldr	r3, [fp, #-8]
   1281c:	ldr	r3, [r3]
   12820:	mov	r1, r3
   12824:	ldr	r3, [pc, #68]	; 12870 <bst_preordem_impl@@Base+0x78>
   12828:	add	r3, pc, r3
   1282c:	mov	r0, r3
   12830:	bl	10c54 <printf@plt>
   12834:	ldr	r3, [fp, #-8]
   12838:	ldr	r3, [r3, #4]
   1283c:	mov	r0, r3
   12840:	bl	127f8 <bst_preordem_impl@@Base>
   12844:	ldr	r3, [fp, #-8]
   12848:	ldr	r3, [r3, #8]
   1284c:	mov	r0, r3
   12850:	bl	127f8 <bst_preordem_impl@@Base>
   12854:	nop	{0}
   12858:	b	12860 <bst_preordem_impl@@Base+0x68>
   1285c:	nop	{0}
   12860:	sub	sp, fp, #4
   12864:	ldr	fp, [sp]
   12868:	add	sp, sp, #4
   1286c:	pop	{pc}		; (ldr pc, [sp], #4)
   12870:	andeq	r0, r0, r8, asr #2

00012874 <__libc_csu_init@@Base>:
   12874:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12878:	mov	r7, r0
   1287c:	ldr	r6, [pc, #72]	; 128cc <__libc_csu_init@@Base+0x58>
   12880:	ldr	r5, [pc, #72]	; 128d0 <__libc_csu_init@@Base+0x5c>
   12884:	add	r6, pc, r6
   12888:	add	r5, pc, r5
   1288c:	sub	r6, r6, r5
   12890:	mov	r8, r1
   12894:	mov	r9, r2
   12898:	bl	10c28 <strcmp@plt-0x20>
   1289c:	asrs	r6, r6, #2
   128a0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   128a4:	mov	r4, #0
   128a8:	add	r4, r4, #1
   128ac:	ldr	r3, [r5], #4
   128b0:	mov	r2, r9
   128b4:	mov	r1, r8
   128b8:	mov	r0, r7
   128bc:	blx	r3
   128c0:	cmp	r6, r4
   128c4:	bne	128a8 <__libc_csu_init@@Base+0x34>
   128c8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   128cc:	andeq	r0, r1, r8, lsl #13
   128d0:	andeq	r0, r1, r0, lsl #13

000128d4 <__libc_csu_fini@@Base>:
   128d4:	bx	lr

Disassembly of section .fini:

000128d8 <.fini>:
   128d8:	push	{r3, lr}
   128dc:	pop	{r3, pc}
