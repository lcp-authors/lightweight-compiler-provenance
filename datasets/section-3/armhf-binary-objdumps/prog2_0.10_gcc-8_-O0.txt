
../repos/prog2/0.10:     file format elf32-littlearm


Disassembly of section .init:

00010608 <.init>:
   10608:	push	{r3, lr}
   1060c:	bl	106ac <_start@@Base+0x3c>
   10610:	pop	{r3, pc}

Disassembly of section .plt:

00010614 <printf@plt-0x14>:
   10614:	push	{lr}		; (str lr, [sp, #-4]!)
   10618:	ldr	lr, [pc, #4]	; 10624 <printf@plt-0x4>
   1061c:	add	lr, pc, lr
   10620:	ldr	pc, [lr, #8]!
   10624:	ldrdeq	r0, [r1], -ip

00010628 <printf@plt>:
   10628:	add	ip, pc, #0, 12
   1062c:	add	ip, ip, #16, 20	; 0x10000
   10630:	ldr	pc, [ip, #2524]!	; 0x9dc

00010634 <memcpy@plt>:
   10634:	add	ip, pc, #0, 12
   10638:	add	ip, ip, #16, 20	; 0x10000
   1063c:	ldr	pc, [ip, #2516]!	; 0x9d4

00010640 <__libc_start_main@plt>:
   10640:	add	ip, pc, #0, 12
   10644:	add	ip, ip, #16, 20	; 0x10000
   10648:	ldr	pc, [ip, #2508]!	; 0x9cc

0001064c <__gmon_start__@plt>:
   1064c:	add	ip, pc, #0, 12
   10650:	add	ip, ip, #16, 20	; 0x10000
   10654:	ldr	pc, [ip, #2500]!	; 0x9c4

00010658 <__isoc99_scanf@plt>:
   10658:	add	ip, pc, #0, 12
   1065c:	add	ip, ip, #16, 20	; 0x10000
   10660:	ldr	pc, [ip, #2492]!	; 0x9bc

00010664 <abort@plt>:
   10664:	add	ip, pc, #0, 12
   10668:	add	ip, ip, #16, 20	; 0x10000
   1066c:	ldr	pc, [ip, #2484]!	; 0x9b4

Disassembly of section .text:

00010670 <_start@@Base>:
   10670:	mov	fp, #0
   10674:	mov	lr, #0
   10678:	pop	{r1}		; (ldr r1, [sp], #4)
   1067c:	mov	r2, sp
   10680:	push	{r2}		; (str r2, [sp, #-4]!)
   10684:	push	{r0}		; (str r0, [sp, #-4]!)
   10688:	ldr	ip, [pc, #16]	; 106a0 <_start@@Base+0x30>
   1068c:	push	{ip}		; (str ip, [sp, #-4]!)
   10690:	ldr	r0, [pc, #12]	; 106a4 <_start@@Base+0x34>
   10694:	ldr	r3, [pc, #12]	; 106a8 <_start@@Base+0x38>
   10698:	bl	10640 <__libc_start_main@plt>
   1069c:	bl	10664 <abort@plt>
   106a0:	andeq	r0, r1, r0, ror #23
   106a4:	andeq	r0, r1, r4, lsr #21
   106a8:	andeq	r0, r1, r0, lsl #23
   106ac:	ldr	r3, [pc, #20]	; 106c8 <_start@@Base+0x58>
   106b0:	ldr	r2, [pc, #20]	; 106cc <_start@@Base+0x5c>
   106b4:	add	r3, pc, r3
   106b8:	ldr	r2, [r3, r2]
   106bc:	cmp	r2, #0
   106c0:	bxeq	lr
   106c4:	b	1064c <__gmon_start__@plt>
   106c8:	andeq	r0, r1, r4, asr #18
   106cc:	andeq	r0, r0, r4, lsr #32
   106d0:	ldr	r0, [pc, #24]	; 106f0 <_start@@Base+0x80>
   106d4:	ldr	r3, [pc, #24]	; 106f4 <_start@@Base+0x84>
   106d8:	cmp	r3, r0
   106dc:	bxeq	lr
   106e0:	ldr	r3, [pc, #16]	; 106f8 <_start@@Base+0x88>
   106e4:	cmp	r3, #0
   106e8:	bxeq	lr
   106ec:	bx	r3
   106f0:	andeq	r1, r2, r0, lsr r0
   106f4:	andeq	r1, r2, r0, lsr r0
   106f8:	andeq	r0, r0, r0
   106fc:	ldr	r0, [pc, #36]	; 10728 <_start@@Base+0xb8>
   10700:	ldr	r1, [pc, #36]	; 1072c <_start@@Base+0xbc>
   10704:	sub	r1, r1, r0
   10708:	asr	r1, r1, #2
   1070c:	add	r1, r1, r1, lsr #31
   10710:	asrs	r1, r1, #1
   10714:	bxeq	lr
   10718:	ldr	r3, [pc, #16]	; 10730 <_start@@Base+0xc0>
   1071c:	cmp	r3, #0
   10720:	bxeq	lr
   10724:	bx	r3
   10728:	andeq	r1, r2, r0, lsr r0
   1072c:	andeq	r1, r2, r0, lsr r0
   10730:	andeq	r0, r0, r0
   10734:	push	{r4, lr}
   10738:	ldr	r4, [pc, #24]	; 10758 <_start@@Base+0xe8>
   1073c:	ldrb	r3, [r4]
   10740:	cmp	r3, #0
   10744:	popne	{r4, pc}
   10748:	bl	106d0 <_start@@Base+0x60>
   1074c:	mov	r3, #1
   10750:	strb	r3, [r4]
   10754:	pop	{r4, pc}
   10758:	andeq	r1, r2, r0, lsr r0
   1075c:	b	106fc <_start@@Base+0x8c>

00010760 <nova_tarefa@@Base>:
   10760:	str	fp, [sp, #-8]!
   10764:	str	lr, [sp, #4]
   10768:	add	fp, sp, #4
   1076c:	sub	sp, sp, #16
   10770:	str	r0, [fp, #-8]
   10774:	ldr	r1, [fp, #-8]
   10778:	ldr	r3, [fp, #-8]
   1077c:	add	r2, r3, #30
   10780:	ldr	r3, [fp, #-8]
   10784:	add	r0, r3, #60	; 0x3c
   10788:	ldr	r3, [fp, #-8]
   1078c:	add	r3, r3, #64	; 0x40
   10790:	str	r3, [sp]
   10794:	mov	r3, r0
   10798:	ldr	r0, [pc, #48]	; 107d0 <nova_tarefa@@Base+0x70>
   1079c:	add	r0, pc, r0
   107a0:	bl	10658 <__isoc99_scanf@plt>
   107a4:	mov	r3, r0
   107a8:	cmp	r3, #4
   107ac:	bne	107b8 <nova_tarefa@@Base+0x58>
   107b0:	mov	r3, #1
   107b4:	b	107bc <nova_tarefa@@Base+0x5c>
   107b8:	mov	r3, #0
   107bc:	mov	r0, r3
   107c0:	sub	sp, fp, #4
   107c4:	ldr	fp, [sp]
   107c8:	add	sp, sp, #4
   107cc:	pop	{pc}		; (ldr pc, [sp], #4)
   107d0:	andeq	r0, r0, ip, asr #8

000107d4 <ler_tarefas@@Base>:
   107d4:	str	fp, [sp, #-8]!
   107d8:	str	lr, [sp, #4]
   107dc:	add	fp, sp, #4
   107e0:	sub	sp, sp, #16
   107e4:	str	r0, [fp, #-16]
   107e8:	mov	r3, #0
   107ec:	str	r3, [fp, #-8]
   107f0:	b	10800 <ler_tarefas@@Base+0x2c>
   107f4:	ldr	r3, [fp, #-8]
   107f8:	add	r3, r3, #1
   107fc:	str	r3, [fp, #-8]
   10800:	ldr	r2, [fp, #-8]
   10804:	mov	r3, r2
   10808:	lsl	r3, r3, #4
   1080c:	add	r3, r3, r2
   10810:	lsl	r3, r3, #2
   10814:	mov	r2, r3
   10818:	ldr	r3, [fp, #-16]
   1081c:	add	r3, r3, r2
   10820:	mov	r0, r3
   10824:	bl	10760 <nova_tarefa@@Base>
   10828:	mov	r3, r0
   1082c:	cmp	r3, #0
   10830:	beq	10840 <ler_tarefas@@Base+0x6c>
   10834:	ldr	r3, [fp, #-8]
   10838:	cmp	r3, #99	; 0x63
   1083c:	ble	107f4 <ler_tarefas@@Base+0x20>
   10840:	ldr	r3, [fp, #-8]
   10844:	mov	r0, r3
   10848:	sub	sp, fp, #4
   1084c:	ldr	fp, [sp]
   10850:	add	sp, sp, #4
   10854:	pop	{pc}		; (ldr pc, [sp], #4)

00010858 <lista_tarefas@@Base>:
   10858:	str	fp, [sp, #-8]!
   1085c:	str	lr, [sp, #4]
   10860:	add	fp, sp, #4
   10864:	sub	sp, sp, #24
   10868:	str	r0, [fp, #-16]
   1086c:	str	r1, [fp, #-20]	; 0xffffffec
   10870:	mov	r3, #0
   10874:	str	r3, [fp, #-8]
   10878:	b	10934 <lista_tarefas@@Base+0xdc>
   1087c:	ldr	r2, [fp, #-8]
   10880:	mov	r3, r2
   10884:	lsl	r3, r3, #4
   10888:	add	r3, r3, r2
   1088c:	lsl	r3, r3, #2
   10890:	mov	r2, r3
   10894:	ldr	r3, [fp, #-16]
   10898:	add	r3, r3, r2
   1089c:	mov	ip, r3
   108a0:	ldr	r2, [fp, #-8]
   108a4:	mov	r3, r2
   108a8:	lsl	r3, r3, #4
   108ac:	add	r3, r3, r2
   108b0:	lsl	r3, r3, #2
   108b4:	mov	r2, r3
   108b8:	ldr	r3, [fp, #-16]
   108bc:	add	r3, r3, r2
   108c0:	add	r1, r3, #30
   108c4:	ldr	r2, [fp, #-8]
   108c8:	mov	r3, r2
   108cc:	lsl	r3, r3, #4
   108d0:	add	r3, r3, r2
   108d4:	lsl	r3, r3, #2
   108d8:	mov	r2, r3
   108dc:	ldr	r3, [fp, #-16]
   108e0:	add	r3, r3, r2
   108e4:	ldr	r0, [r3, #60]	; 0x3c
   108e8:	ldr	r2, [fp, #-8]
   108ec:	mov	r3, r2
   108f0:	lsl	r3, r3, #4
   108f4:	add	r3, r3, r2
   108f8:	lsl	r3, r3, #2
   108fc:	mov	r2, r3
   10900:	ldr	r3, [fp, #-16]
   10904:	add	r3, r3, r2
   10908:	ldr	r3, [r3, #64]	; 0x40
   1090c:	str	r3, [sp]
   10910:	mov	r3, r0
   10914:	mov	r2, r1
   10918:	mov	r1, ip
   1091c:	ldr	r0, [pc, #52]	; 10958 <lista_tarefas@@Base+0x100>
   10920:	add	r0, pc, r0
   10924:	bl	10628 <printf@plt>
   10928:	ldr	r3, [fp, #-8]
   1092c:	add	r3, r3, #1
   10930:	str	r3, [fp, #-8]
   10934:	ldr	r2, [fp, #-8]
   10938:	ldr	r3, [fp, #-20]	; 0xffffffec
   1093c:	cmp	r2, r3
   10940:	blt	1087c <lista_tarefas@@Base+0x24>
   10944:	nop	{0}
   10948:	sub	sp, fp, #4
   1094c:	ldr	fp, [sp]
   10950:	add	sp, sp, #4
   10954:	pop	{pc}		; (ldr pc, [sp], #4)
   10958:	ldrdeq	r0, [r0], -r4

0001095c <analisa_tarefas@@Base>:
   1095c:	str	fp, [sp, #-8]!
   10960:	str	lr, [sp, #4]
   10964:	add	fp, sp, #4
   10968:	sub	sp, sp, #32
   1096c:	str	r0, [fp, #-24]	; 0xffffffe8
   10970:	str	r1, [fp, #-28]	; 0xffffffe4
   10974:	str	r2, [fp, #-32]	; 0xffffffe0
   10978:	mov	r3, #0
   1097c:	str	r3, [fp, #-12]
   10980:	mov	r3, #0
   10984:	str	r3, [fp, #-16]
   10988:	mov	r3, #0
   1098c:	str	r3, [fp, #-8]
   10990:	b	10a60 <analisa_tarefas@@Base+0x104>
   10994:	ldr	r2, [fp, #-8]
   10998:	mov	r3, r2
   1099c:	lsl	r3, r3, #4
   109a0:	add	r3, r3, r2
   109a4:	lsl	r3, r3, #2
   109a8:	mov	r2, r3
   109ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   109b0:	add	r3, r3, r2
   109b4:	ldr	r3, [r3, #60]	; 0x3c
   109b8:	ldr	r2, [fp, #-12]
   109bc:	add	r3, r2, r3
   109c0:	str	r3, [fp, #-12]
   109c4:	ldr	r2, [fp, #-8]
   109c8:	mov	r3, r2
   109cc:	lsl	r3, r3, #4
   109d0:	add	r3, r3, r2
   109d4:	lsl	r3, r3, #2
   109d8:	mov	r2, r3
   109dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   109e0:	add	r3, r3, r2
   109e4:	ldr	r3, [r3, #60]	; 0x3c
   109e8:	ldr	r2, [fp, #-16]
   109ec:	cmp	r2, r3
   109f0:	bge	10a54 <analisa_tarefas@@Base+0xf8>
   109f4:	ldr	r2, [fp, #-8]
   109f8:	mov	r3, r2
   109fc:	lsl	r3, r3, #4
   10a00:	add	r3, r3, r2
   10a04:	lsl	r3, r3, #2
   10a08:	mov	r2, r3
   10a0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10a10:	add	r3, r3, r2
   10a14:	ldr	r3, [r3, #60]	; 0x3c
   10a18:	str	r3, [fp, #-16]
   10a1c:	ldr	r2, [fp, #-8]
   10a20:	mov	r3, r2
   10a24:	lsl	r3, r3, #4
   10a28:	add	r3, r3, r2
   10a2c:	lsl	r3, r3, #2
   10a30:	mov	r2, r3
   10a34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10a38:	add	r3, r3, r2
   10a3c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   10a40:	mov	r0, r2
   10a44:	mov	r1, r3
   10a48:	mov	r3, #68	; 0x44
   10a4c:	mov	r2, r3
   10a50:	bl	10634 <memcpy@plt>
   10a54:	ldr	r3, [fp, #-8]
   10a58:	add	r3, r3, #1
   10a5c:	str	r3, [fp, #-8]
   10a60:	ldr	r2, [fp, #-8]
   10a64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10a68:	cmp	r2, r3
   10a6c:	blt	10994 <analisa_tarefas@@Base+0x38>
   10a70:	ldr	r3, [fp, #-12]
   10a74:	vmov	s15, r3
   10a78:	vcvt.f32.s32	s14, s15
   10a7c:	ldr	r3, [fp, #-8]
   10a80:	vmov	s15, r3
   10a84:	vcvt.f32.s32	s15, s15
   10a88:	vdiv.f32	s13, s14, s15
   10a8c:	vmov.f32	s15, s13
   10a90:	vmov.f32	s0, s15
   10a94:	sub	sp, fp, #4
   10a98:	ldr	fp, [sp]
   10a9c:	add	sp, sp, #4
   10aa0:	pop	{pc}		; (ldr pc, [sp], #4)

00010aa4 <main@@Base>:
   10aa4:	str	fp, [sp, #-8]!
   10aa8:	str	lr, [sp, #4]
   10aac:	add	fp, sp, #4
   10ab0:	sub	sp, sp, #6848	; 0x1ac0
   10ab4:	sub	sp, sp, #24
   10ab8:	sub	r3, fp, #6784	; 0x1a80
   10abc:	sub	r3, r3, #4
   10ac0:	sub	r3, r3, #20
   10ac4:	mov	r0, r3
   10ac8:	bl	107d4 <ler_tarefas@@Base>
   10acc:	str	r0, [fp, #-8]
   10ad0:	sub	r3, fp, #6784	; 0x1a80
   10ad4:	sub	r3, r3, #4
   10ad8:	sub	r3, r3, #20
   10adc:	ldr	r1, [fp, #-8]
   10ae0:	mov	r0, r3
   10ae4:	bl	10858 <lista_tarefas@@Base>
   10ae8:	ldr	r1, [fp, #-8]
   10aec:	ldr	r3, [pc, #128]	; 10b74 <main@@Base+0xd0>
   10af0:	add	r3, pc, r3
   10af4:	mov	r0, r3
   10af8:	bl	10628 <printf@plt>
   10afc:	sub	r2, fp, #6848	; 0x1ac0
   10b00:	sub	r2, r2, #4
   10b04:	sub	r2, r2, #24
   10b08:	sub	r3, fp, #6784	; 0x1a80
   10b0c:	sub	r3, r3, #4
   10b10:	sub	r3, r3, #20
   10b14:	ldr	r1, [fp, #-8]
   10b18:	mov	r0, r3
   10b1c:	bl	1095c <analisa_tarefas@@Base>
   10b20:	vmov.f32	s15, s0
   10b24:	vcvt.f64.f32	d7, s15
   10b28:	vmov	r2, r3, d7
   10b2c:	ldr	r1, [pc, #68]	; 10b78 <main@@Base+0xd4>
   10b30:	add	r1, pc, r1
   10b34:	mov	r0, r1
   10b38:	bl	10628 <printf@plt>
   10b3c:	sub	r3, fp, #6848	; 0x1ac0
   10b40:	sub	r3, r3, #4
   10b44:	sub	r3, r3, #24
   10b48:	mov	r1, r3
   10b4c:	ldr	r3, [pc, #40]	; 10b7c <main@@Base+0xd8>
   10b50:	add	r3, pc, r3
   10b54:	mov	r0, r3
   10b58:	bl	10628 <printf@plt>
   10b5c:	mov	r3, #0
   10b60:	mov	r0, r3
   10b64:	sub	sp, fp, #4
   10b68:	ldr	fp, [sp]
   10b6c:	add	sp, sp, #4
   10b70:	pop	{pc}		; (ldr pc, [sp], #4)
   10b74:	andeq	r0, r0, r4, lsl r1
   10b78:	strdeq	r0, [r0], -r4
   10b7c:	strdeq	r0, [r0], -r8

00010b80 <__libc_csu_init@@Base>:
   10b80:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b84:	mov	r7, r0
   10b88:	ldr	r6, [pc, #72]	; 10bd8 <__libc_csu_init@@Base+0x58>
   10b8c:	ldr	r5, [pc, #72]	; 10bdc <__libc_csu_init@@Base+0x5c>
   10b90:	add	r6, pc, r6
   10b94:	add	r5, pc, r5
   10b98:	sub	r6, r6, r5
   10b9c:	mov	r8, r1
   10ba0:	mov	r9, r2
   10ba4:	bl	10608 <printf@plt-0x20>
   10ba8:	asrs	r6, r6, #2
   10bac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bb0:	mov	r4, #0
   10bb4:	add	r4, r4, #1
   10bb8:	ldr	r3, [r5], #4
   10bbc:	mov	r2, r9
   10bc0:	mov	r1, r8
   10bc4:	mov	r0, r7
   10bc8:	blx	r3
   10bcc:	cmp	r6, r4
   10bd0:	bne	10bb4 <__libc_csu_init@@Base+0x34>
   10bd4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bd8:	andeq	r0, r1, ip, ror r3
   10bdc:	andeq	r0, r1, r4, ror r3

00010be0 <__libc_csu_fini@@Base>:
   10be0:	bx	lr

Disassembly of section .fini:

00010be4 <.fini>:
   10be4:	push	{r3, lr}
   10be8:	pop	{r3, pc}
