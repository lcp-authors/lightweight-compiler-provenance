
../repos/prog2/MT2E1-1:     file format elf32-littlearm


Disassembly of section .init:

00010eb0 <.init>:
   10eb0:	push	{r3, lr}
   10eb4:	bl	10fe4 <_start@@Base+0x3c>
   10eb8:	pop	{r3, pc}

Disassembly of section .plt:

00010ebc <calloc@plt-0x14>:
   10ebc:	push	{lr}		; (str lr, [sp, #-4]!)
   10ec0:	ldr	lr, [pc, #4]	; 10ecc <calloc@plt-0x4>
   10ec4:	add	lr, pc, lr
   10ec8:	ldr	pc, [lr, #8]!
   10ecc:	andeq	r2, r1, r4, lsr r1

00010ed0 <calloc@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #73728	; 0x12000
   10ed8:	ldr	pc, [ip, #308]!	; 0x134

00010edc <strcmp@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #73728	; 0x12000
   10ee4:	ldr	pc, [ip, #300]!	; 0x12c

00010ee8 <printf@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #73728	; 0x12000
   10ef0:	ldr	pc, [ip, #292]!	; 0x124

00010ef4 <__isoc99_fscanf@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #73728	; 0x12000
   10efc:	ldr	pc, [ip, #284]!	; 0x11c

00010f00 <fopen@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #73728	; 0x12000
   10f08:	ldr	pc, [ip, #276]!	; 0x114

00010f0c <free@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #73728	; 0x12000
   10f14:	ldr	pc, [ip, #268]!	; 0x10c

00010f18 <memcpy@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #73728	; 0x12000
   10f20:	ldr	pc, [ip, #260]!	; 0x104

00010f24 <realloc@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #73728	; 0x12000
   10f2c:	ldr	pc, [ip, #252]!	; 0xfc

00010f30 <strcpy@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #73728	; 0x12000
   10f38:	ldr	pc, [ip, #244]!	; 0xf4

00010f3c <puts@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #73728	; 0x12000
   10f44:	ldr	pc, [ip, #236]!	; 0xec

00010f48 <malloc@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #73728	; 0x12000
   10f50:	ldr	pc, [ip, #228]!	; 0xe4

00010f54 <__libc_start_main@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #73728	; 0x12000
   10f5c:	ldr	pc, [ip, #220]!	; 0xdc

00010f60 <__gmon_start__@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #73728	; 0x12000
   10f68:	ldr	pc, [ip, #212]!	; 0xd4

00010f6c <strlen@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #73728	; 0x12000
   10f74:	ldr	pc, [ip, #204]!	; 0xcc

00010f78 <setvbuf@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #73728	; 0x12000
   10f80:	ldr	pc, [ip, #196]!	; 0xc4

00010f84 <putchar@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #73728	; 0x12000
   10f8c:	ldr	pc, [ip, #188]!	; 0xbc

00010f90 <fclose@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #73728	; 0x12000
   10f98:	ldr	pc, [ip, #180]!	; 0xb4

00010f9c <abort@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #73728	; 0x12000
   10fa4:	ldr	pc, [ip, #172]!	; 0xac

Disassembly of section .text:

00010fa8 <_start@@Base>:
   10fa8:	mov	fp, #0
   10fac:	mov	lr, #0
   10fb0:	pop	{r1}		; (ldr r1, [sp], #4)
   10fb4:	mov	r2, sp
   10fb8:	push	{r2}		; (str r2, [sp, #-4]!)
   10fbc:	push	{r0}		; (str r0, [sp, #-4]!)
   10fc0:	ldr	ip, [pc, #16]	; 10fd8 <_start@@Base+0x30>
   10fc4:	push	{ip}		; (str ip, [sp, #-4]!)
   10fc8:	ldr	r0, [pc, #12]	; 10fdc <_start@@Base+0x34>
   10fcc:	ldr	r3, [pc, #12]	; 10fe0 <_start@@Base+0x38>
   10fd0:	bl	10f54 <__libc_start_main@plt>
   10fd4:	bl	10f9c <abort@plt>
   10fd8:	andeq	r2, r1, r0, asr #14
   10fdc:	andeq	r1, r1, r8, ror #2
   10fe0:	andeq	r2, r1, r0, ror #13
   10fe4:	ldr	r3, [pc, #20]	; 11000 <_start@@Base+0x58>
   10fe8:	ldr	r2, [pc, #20]	; 11004 <_start@@Base+0x5c>
   10fec:	add	r3, pc, r3
   10ff0:	ldr	r2, [r3, r2]
   10ff4:	cmp	r2, #0
   10ff8:	bxeq	lr
   10ffc:	b	10f60 <__gmon_start__@plt>
   11000:	andeq	r2, r1, ip
   11004:	andeq	r0, r0, r8, asr r0
   11008:	ldr	r0, [pc, #24]	; 11028 <_start@@Base+0x80>
   1100c:	ldr	r3, [pc, #24]	; 1102c <_start@@Base+0x84>
   11010:	cmp	r3, r0
   11014:	bxeq	lr
   11018:	ldr	r3, [pc, #16]	; 11030 <_start@@Base+0x88>
   1101c:	cmp	r3, #0
   11020:	bxeq	lr
   11024:	bx	r3
   11028:	andeq	r3, r2, r8, rrx
   1102c:	andeq	r3, r2, r8, rrx
   11030:	andeq	r0, r0, r0
   11034:	ldr	r0, [pc, #36]	; 11060 <_start@@Base+0xb8>
   11038:	ldr	r1, [pc, #36]	; 11064 <_start@@Base+0xbc>
   1103c:	sub	r1, r1, r0
   11040:	asr	r1, r1, #2
   11044:	add	r1, r1, r1, lsr #31
   11048:	asrs	r1, r1, #1
   1104c:	bxeq	lr
   11050:	ldr	r3, [pc, #16]	; 11068 <_start@@Base+0xc0>
   11054:	cmp	r3, #0
   11058:	bxeq	lr
   1105c:	bx	r3
   11060:	andeq	r3, r2, r8, rrx
   11064:	andeq	r3, r2, r8, rrx
   11068:	andeq	r0, r0, r0
   1106c:	push	{r4, lr}
   11070:	ldr	r4, [pc, #24]	; 11090 <_start@@Base+0xe8>
   11074:	ldrb	r3, [r4]
   11078:	cmp	r3, #0
   1107c:	popne	{r4, pc}
   11080:	bl	11008 <_start@@Base+0x60>
   11084:	mov	r3, #1
   11088:	strb	r3, [r4]
   1108c:	pop	{r4, pc}
   11090:	andeq	r3, r2, r8, rrx
   11094:	b	11034 <_start@@Base+0x8c>

00011098 <avl_max_subarvore@@Base>:
   11098:	push	{r4, r5, r6, sl, fp, lr}
   1109c:	add	fp, sp, #16
   110a0:	mov	r4, r1
   110a4:	mov	r5, r0
   110a8:	bl	113dc <avl_nova@@Base>
   110ac:	mov	r6, r0
   110b0:	mov	r0, r5
   110b4:	mov	r1, r4
   110b8:	bl	11888 <avl_pesquisa@@Base>
   110bc:	str	r0, [r6]
   110c0:	mov	r0, r6
   110c4:	bl	11da4 <avl_max@@Base>
   110c8:	mov	r1, r0
   110cc:	ldr	r0, [pc, #16]	; 110e4 <avl_max_subarvore@@Base+0x4c>
   110d0:	add	r0, pc, r0
   110d4:	bl	10ee8 <printf@plt>
   110d8:	mov	r0, r6
   110dc:	pop	{r4, r5, r6, sl, fp, lr}
   110e0:	b	10f0c <free@plt>
   110e4:	andeq	r1, r0, r8, ror r6

000110e8 <tabela_copia@@Base>:
   110e8:	push	{r4, r5, r6, r7, fp, lr}
   110ec:	add	fp, sp, #16
   110f0:	sub	sp, sp, #8
   110f4:	mov	r2, r1
   110f8:	ldr	r1, [r0]
   110fc:	mov	r5, r0
   11100:	mov	r0, r2
   11104:	bl	11fc8 <tabela_nova@@Base>
   11108:	mov	r4, r0
   1110c:	add	r1, sp, #4
   11110:	mov	r0, r5
   11114:	bl	12444 <tabela_elementos@@Base>
   11118:	mov	r5, r0
   1111c:	ldr	r0, [sp, #4]
   11120:	cmp	r0, #1
   11124:	blt	11154 <tabela_copia@@Base+0x6c>
   11128:	mov	r7, #0
   1112c:	mov	r6, r5
   11130:	add	r2, r6, #50	; 0x32
   11134:	mov	r0, r4
   11138:	mov	r1, r6
   1113c:	bl	120b4 <tabela_adiciona@@Base>
   11140:	ldr	r0, [sp, #4]
   11144:	add	r7, r7, #1
   11148:	add	r6, r6, #150	; 0x96
   1114c:	cmp	r7, r0
   11150:	blt	11130 <tabela_copia@@Base+0x48>
   11154:	mov	r0, r5
   11158:	bl	10f0c <free@plt>
   1115c:	mov	r0, r4
   11160:	sub	sp, fp, #16
   11164:	pop	{r4, r5, r6, r7, fp, pc}

00011168 <main@@Base>:
   11168:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1116c:	add	fp, sp, #28
   11170:	sub	sp, sp, #508	; 0x1fc
   11174:	ldr	r0, [pc, #548]	; 113a0 <main@@Base+0x238>
   11178:	mov	r1, #0
   1117c:	mov	r2, #2
   11180:	mov	r3, #0
   11184:	ldr	r0, [pc, r0]
   11188:	ldr	r0, [r0]
   1118c:	bl	10f78 <setvbuf@plt>
   11190:	ldr	r0, [pc, #524]	; 113a4 <main@@Base+0x23c>
   11194:	ldr	r4, [pc, #524]	; 113a8 <main@@Base+0x240>
   11198:	add	r4, pc, r4
   1119c:	add	r0, pc, r0
   111a0:	mov	r1, r4
   111a4:	bl	10f00 <fopen@plt>
   111a8:	mov	r9, r0
   111ac:	ldr	r0, [pc, #504]	; 113ac <main@@Base+0x244>
   111b0:	mov	r1, r4
   111b4:	add	r0, pc, r0
   111b8:	bl	10f00 <fopen@plt>
   111bc:	mov	sl, r0
   111c0:	ldr	r0, [pc, #488]	; 113b0 <main@@Base+0x248>
   111c4:	add	r0, pc, r0
   111c8:	bl	10f3c <puts@plt>
   111cc:	bl	113dc <avl_nova@@Base>
   111d0:	ldr	r1, [pc, #476]	; 113b4 <main@@Base+0x24c>
   111d4:	mov	r6, r0
   111d8:	mov	r2, sp
   111dc:	mov	r0, r9
   111e0:	add	r1, pc, r1
   111e4:	bl	10ef4 <__isoc99_fscanf@plt>
   111e8:	cmp	r0, #1
   111ec:	bne	11220 <main@@Base+0xb8>
   111f0:	ldr	r5, [pc, #448]	; 113b8 <main@@Base+0x250>
   111f4:	mov	r4, sp
   111f8:	add	r5, pc, r5
   111fc:	mov	r0, r6
   11200:	mov	r1, r4
   11204:	bl	11948 <avl_insere@@Base>
   11208:	mov	r0, r9
   1120c:	mov	r1, r5
   11210:	mov	r2, r4
   11214:	bl	10ef4 <__isoc99_fscanf@plt>
   11218:	cmp	r0, #1
   1121c:	beq	111fc <main@@Base+0x94>
   11220:	ldr	r0, [pc, #404]	; 113bc <main@@Base+0x254>
   11224:	add	r0, pc, r0
   11228:	bl	10ee8 <printf@plt>
   1122c:	mov	r0, r6
   11230:	bl	11de4 <avl_imprime@@Base>
   11234:	ldr	r0, [pc, #388]	; 113c0 <main@@Base+0x258>
   11238:	add	r0, pc, r0
   1123c:	bl	10ee8 <printf@plt>
   11240:	bl	113dc <avl_nova@@Base>
   11244:	ldr	r1, [pc, #376]	; 113c4 <main@@Base+0x25c>
   11248:	mov	r4, r0
   1124c:	mov	r0, r6
   11250:	add	r1, pc, r1
   11254:	bl	11888 <avl_pesquisa@@Base>
   11258:	str	r0, [r4]
   1125c:	mov	r0, r4
   11260:	bl	11da4 <avl_max@@Base>
   11264:	ldr	r5, [pc, #348]	; 113c8 <main@@Base+0x260>
   11268:	mov	r1, r0
   1126c:	add	r5, pc, r5
   11270:	mov	r0, r5
   11274:	bl	10ee8 <printf@plt>
   11278:	mov	r0, r4
   1127c:	bl	10f0c <free@plt>
   11280:	mov	r0, r6
   11284:	bl	11400 <avl_apaga@@Base>
   11288:	ldr	r0, [pc, #316]	; 113cc <main@@Base+0x264>
   1128c:	add	r0, pc, r0
   11290:	bl	10f3c <puts@plt>
   11294:	ldr	r1, [pc, #308]	; 113d0 <main@@Base+0x268>
   11298:	movw	r0, #601	; 0x259
   1129c:	ldr	r1, [pc, r1]
   112a0:	bl	11fc8 <tabela_nova@@Base>
   112a4:	mov	r6, r0
   112a8:	mov	r2, sp
   112ac:	mov	r0, sl
   112b0:	mov	r1, r5
   112b4:	bl	10ef4 <__isoc99_fscanf@plt>
   112b8:	cmp	r0, #1
   112bc:	bne	112fc <main@@Base+0x194>
   112c0:	ldr	r4, [pc, #268]	; 113d4 <main@@Base+0x26c>
   112c4:	ldr	r5, [pc, #268]	; 113d8 <main@@Base+0x270>
   112c8:	mov	r7, sp
   112cc:	add	r4, pc, r4
   112d0:	add	r5, pc, r5
   112d4:	mov	r0, r6
   112d8:	mov	r1, r7
   112dc:	mov	r2, r4
   112e0:	bl	120b4 <tabela_adiciona@@Base>
   112e4:	mov	r0, sl
   112e8:	mov	r1, r5
   112ec:	mov	r2, r7
   112f0:	bl	10ef4 <__isoc99_fscanf@plt>
   112f4:	cmp	r0, #1
   112f8:	beq	112d4 <main@@Base+0x16c>
   112fc:	mov	r0, r6
   11300:	bl	125cc <mostraTabela@@Base>
   11304:	ldr	r1, [r6]
   11308:	movw	r0, #619	; 0x26b
   1130c:	bl	11fc8 <tabela_nova@@Base>
   11310:	mov	r7, r0
   11314:	sub	r1, fp, #36	; 0x24
   11318:	mov	r0, r6
   1131c:	bl	12444 <tabela_elementos@@Base>
   11320:	mov	r8, r0
   11324:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11328:	cmp	r0, #1
   1132c:	blt	1135c <main@@Base+0x1f4>
   11330:	mov	r5, #0
   11334:	mov	r4, r8
   11338:	add	r2, r4, #50	; 0x32
   1133c:	mov	r0, r7
   11340:	mov	r1, r4
   11344:	bl	120b4 <tabela_adiciona@@Base>
   11348:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1134c:	add	r5, r5, #1
   11350:	add	r4, r4, #150	; 0x96
   11354:	cmp	r5, r0
   11358:	blt	11338 <main@@Base+0x1d0>
   1135c:	mov	r0, r8
   11360:	bl	10f0c <free@plt>
   11364:	cmp	r7, #0
   11368:	beq	11374 <main@@Base+0x20c>
   1136c:	mov	r0, r7
   11370:	bl	125cc <mostraTabela@@Base>
   11374:	mov	r0, r6
   11378:	bl	1203c <tabela_apaga@@Base>
   1137c:	mov	r0, r7
   11380:	bl	1203c <tabela_apaga@@Base>
   11384:	mov	r0, r9
   11388:	bl	10f90 <fclose@plt>
   1138c:	mov	r0, sl
   11390:	bl	10f90 <fclose@plt>
   11394:	mov	r0, #0
   11398:	sub	sp, fp, #28
   1139c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   113a0:	ldrdeq	r1, [r1], -r0
   113a4:	andeq	r1, r0, pc, lsr #11
   113a8:			; <UNDEFINED> instruction: 0x000015be
   113ac:	andeq	r1, r0, r4, lsr #11
   113b0:	muleq	r0, lr, r5
   113b4:	andeq	r1, r0, r8, ror #10
   113b8:	andeq	r1, r0, r0, asr r5
   113bc:	andeq	r1, r0, pc, asr #10
   113c0:	andeq	r1, r0, sp, asr #10
   113c4:	andeq	r1, r0, ip, asr #10
   113c8:	ldrdeq	r1, [r0], -ip
   113cc:	andeq	r1, r0, r3, lsl r5
   113d0:			; <UNDEFINED> instruction: 0x00011db0
   113d4:	andeq	r1, r0, sp, lsl #10
   113d8:	andeq	r1, r0, r8, ror r4

000113dc <avl_nova@@Base>:
   113dc:	push	{fp, lr}
   113e0:	mov	fp, sp
   113e4:	mov	r0, #4
   113e8:	bl	10f48 <malloc@plt>
   113ec:	cmp	r0, #0
   113f0:	moveq	r0, #0
   113f4:	movne	r1, #0
   113f8:	strne	r1, [r0]
   113fc:	pop	{fp, pc}

00011400 <avl_apaga@@Base>:
   11400:	cmp	r0, #0
   11404:	bxeq	lr
   11408:	push	{r4, sl, fp, lr}
   1140c:	add	fp, sp, #8
   11410:	mov	r4, r0
   11414:	ldr	r0, [r0]
   11418:	cmp	r0, #0
   1141c:	beq	11434 <avl_apaga@@Base+0x34>
   11420:	ldr	r1, [r0]
   11424:	bl	11440 <avl_remove_impl@@Base>
   11428:	str	r0, [r4]
   1142c:	cmp	r0, #0
   11430:	bne	11420 <avl_apaga@@Base+0x20>
   11434:	mov	r0, r4
   11438:	pop	{r4, sl, fp, lr}
   1143c:	b	10f0c <free@plt>

00011440 <avl_remove_impl@@Base>:
   11440:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11444:	add	fp, sp, #24
   11448:	mov	r8, #0
   1144c:	cmp	r0, #0
   11450:	beq	11880 <avl_remove_impl@@Base+0x440>
   11454:	ldr	r6, [r0]
   11458:	mov	r5, r0
   1145c:	mov	r7, r1
   11460:	mov	r0, r1
   11464:	mov	r1, r6
   11468:	bl	10edc <strcmp@plt>
   1146c:	mov	r4, r5
   11470:	cmn	r0, #1
   11474:	bgt	11480 <avl_remove_impl@@Base+0x40>
   11478:	ldr	r0, [r4, #4]!
   1147c:	b	1148c <avl_remove_impl@@Base+0x4c>
   11480:	cmp	r0, #0
   11484:	beq	116e4 <avl_remove_impl@@Base+0x2a4>
   11488:	ldr	r0, [r4, #8]!
   1148c:	mov	r1, r7
   11490:	bl	11440 <avl_remove_impl@@Base>
   11494:	str	r0, [r4]
   11498:	ldr	r1, [r5, #4]
   1149c:	cmp	r1, #0
   114a0:	beq	114ac <avl_remove_impl@@Base+0x6c>
   114a4:	ldr	r0, [r1, #12]
   114a8:	b	114b0 <avl_remove_impl@@Base+0x70>
   114ac:	mvn	r0, #0
   114b0:	ldr	r2, [r5, #8]
   114b4:	cmp	r2, #0
   114b8:	beq	114e8 <avl_remove_impl@@Base+0xa8>
   114bc:	ldr	r3, [r2, #12]
   114c0:	cmp	r0, r3
   114c4:	movgt	r3, r0
   114c8:	mov	r0, r5
   114cc:	add	r3, r3, #1
   114d0:	str	r3, [r0, #12]!
   114d4:	ldr	r3, [r2, #12]
   114d8:	cmp	r1, #0
   114dc:	beq	11504 <avl_remove_impl@@Base+0xc4>
   114e0:	ldr	r7, [r1, #12]
   114e4:	b	11508 <avl_remove_impl@@Base+0xc8>
   114e8:	orr	r0, r0, r0, asr #31
   114ec:	add	r3, r0, #1
   114f0:	mov	r0, r5
   114f4:	str	r3, [r0, #12]!
   114f8:	mvn	r3, #0
   114fc:	cmp	r1, #0
   11500:	bne	114e0 <avl_remove_impl@@Base+0xa0>
   11504:	mvn	r7, #0
   11508:	sub	r3, r3, r7
   1150c:	cmp	r3, #2
   11510:	blt	115f0 <avl_remove_impl@@Base+0x1b0>
   11514:	cmp	r2, #0
   11518:	beq	11738 <avl_remove_impl@@Base+0x2f8>
   1151c:	ldr	r7, [r2, #8]
   11520:	ldr	r8, [r2, #4]
   11524:	mvn	r3, #0
   11528:	mvn	r1, #0
   1152c:	cmp	r7, #0
   11530:	ldrne	r3, [r7, #12]
   11534:	cmp	r8, #0
   11538:	ldrne	r1, [r8, #12]
   1153c:	cmp	r3, r1
   11540:	bge	11740 <avl_remove_impl@@Base+0x300>
   11544:	ldr	r7, [r8, #8]
   11548:	str	r2, [r8, #8]
   1154c:	mvn	r3, #0
   11550:	mvn	r1, #0
   11554:	str	r7, [r2, #4]
   11558:	cmp	r7, #0
   1155c:	ldrne	r3, [r7, #12]
   11560:	ldr	r7, [r2, #8]
   11564:	cmp	r7, #0
   11568:	ldrne	r1, [r7, #12]
   1156c:	mvn	r7, #0
   11570:	cmp	r3, r1
   11574:	movgt	r1, r3
   11578:	add	r3, r1, #1
   1157c:	mvn	r1, #0
   11580:	str	r3, [r2, #12]
   11584:	ldr	r2, [r8, #4]
   11588:	cmp	r2, #0
   1158c:	ldrne	r7, [r2, #12]
   11590:	str	r5, [r8, #4]
   11594:	cmp	r7, r3
   11598:	movgt	r3, r7
   1159c:	mvn	r7, #0
   115a0:	add	r3, r3, #1
   115a4:	str	r3, [r8, #12]
   115a8:	str	r2, [r5, #8]
   115ac:	ldr	r3, [r5, #4]
   115b0:	cmp	r3, #0
   115b4:	ldrne	r1, [r3, #12]
   115b8:	cmp	r2, #0
   115bc:	mvn	r3, #0
   115c0:	ldrne	r7, [r2, #12]
   115c4:	cmp	r1, r7
   115c8:	movgt	r7, r1
   115cc:	add	r1, r7, #1
   115d0:	str	r1, [r0]
   115d4:	ldr	r0, [r8, #8]
   115d8:	cmp	r0, #0
   115dc:	ldrne	r3, [r0, #12]
   115e0:	cmp	r1, r3
   115e4:	movgt	r3, r1
   115e8:	add	r0, r3, #1
   115ec:	b	116d0 <avl_remove_impl@@Base+0x290>
   115f0:	cmn	r3, #2
   115f4:	bgt	116dc <avl_remove_impl@@Base+0x29c>
   115f8:	cmp	r1, #0
   115fc:	beq	117a4 <avl_remove_impl@@Base+0x364>
   11600:	ldr	r8, [r1, #8]
   11604:	ldr	r7, [r1, #4]
   11608:	mvn	r3, #0
   1160c:	mvn	r2, #0
   11610:	cmp	r8, #0
   11614:	ldrne	r3, [r8, #12]
   11618:	cmp	r7, #0
   1161c:	ldrne	r2, [r7, #12]
   11620:	cmp	r3, r2
   11624:	ble	117ac <avl_remove_impl@@Base+0x36c>
   11628:	ldr	r3, [r8, #4]
   1162c:	str	r1, [r8, #4]
   11630:	mvn	r7, #0
   11634:	mvn	r2, #0
   11638:	str	r3, [r1, #8]
   1163c:	ldr	r6, [r1, #4]
   11640:	cmp	r6, #0
   11644:	ldrne	r7, [r6, #12]
   11648:	cmp	r3, #0
   1164c:	ldrne	r2, [r3, #12]
   11650:	cmp	r7, r2
   11654:	movgt	r2, r7
   11658:	mvn	r7, #0
   1165c:	add	r3, r2, #1
   11660:	str	r3, [r1, #12]
   11664:	mvn	r1, #0
   11668:	ldr	r2, [r8, #8]
   1166c:	cmp	r2, #0
   11670:	ldrne	r7, [r2, #12]
   11674:	str	r5, [r8, #8]
   11678:	cmp	r3, r7
   1167c:	movgt	r7, r3
   11680:	cmp	r2, #0
   11684:	add	r3, r7, #1
   11688:	str	r3, [r8, #12]
   1168c:	str	r2, [r5, #4]
   11690:	mvn	r3, #0
   11694:	ldr	r7, [r5, #8]
   11698:	ldrne	r1, [r2, #12]
   1169c:	mvn	r2, #0
   116a0:	cmp	r7, #0
   116a4:	ldrne	r3, [r7, #12]
   116a8:	cmp	r1, r3
   116ac:	movgt	r3, r1
   116b0:	add	r1, r3, #1
   116b4:	str	r1, [r0]
   116b8:	ldr	r0, [r8, #4]
   116bc:	cmp	r0, #0
   116c0:	ldrne	r2, [r0, #12]
   116c4:	cmp	r2, r1
   116c8:	movgt	r1, r2
   116cc:	add	r0, r1, #1
   116d0:	str	r0, [r8, #12]
   116d4:	mov	r0, r8
   116d8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   116dc:	mov	r0, r5
   116e0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   116e4:	ldr	r0, [r4, #8]!
   116e8:	ldr	r7, [r4, #-4]
   116ec:	cmp	r7, #0
   116f0:	beq	117f4 <avl_remove_impl@@Base+0x3b4>
   116f4:	cmp	r0, #0
   116f8:	beq	11800 <avl_remove_impl@@Base+0x3c0>
   116fc:	mov	r7, r0
   11700:	ldr	r0, [r0, #4]
   11704:	cmp	r0, #0
   11708:	bne	116fc <avl_remove_impl@@Base+0x2bc>
   1170c:	ldr	r0, [r7]
   11710:	bl	10f6c <strlen@plt>
   11714:	add	r1, r0, #1
   11718:	mov	r0, r6
   1171c:	bl	10f24 <realloc@plt>
   11720:	str	r0, [r5]
   11724:	ldr	r1, [r7]
   11728:	bl	10f30 <strcpy@plt>
   1172c:	ldr	r1, [r7]
   11730:	ldr	r0, [r5, #8]
   11734:	b	11490 <avl_remove_impl@@Base+0x50>
   11738:	mov	r1, #4
   1173c:	ldr	r8, [r1]
   11740:	str	r5, [r2, #4]
   11744:	str	r8, [r5, #8]
   11748:	mvn	r3, #0
   1174c:	mvn	r1, #0
   11750:	ldr	r7, [r5, #4]
   11754:	cmp	r7, #0
   11758:	ldrne	r3, [r7, #12]
   1175c:	cmp	r8, #0
   11760:	ldrne	r1, [r8, #12]
   11764:	cmp	r3, r1
   11768:	movgt	r1, r3
   1176c:	add	r1, r1, #1
   11770:	str	r1, [r0]
   11774:	ldr	r0, [r2, #8]
   11778:	cmp	r0, #0
   1177c:	beq	11788 <avl_remove_impl@@Base+0x348>
   11780:	ldr	r0, [r0, #12]
   11784:	b	1178c <avl_remove_impl@@Base+0x34c>
   11788:	mvn	r0, #0
   1178c:	cmp	r1, r0
   11790:	movgt	r0, r1
   11794:	add	r0, r0, #1
   11798:	str	r0, [r2, #12]
   1179c:	mov	r0, r2
   117a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   117a4:	mov	r2, #8
   117a8:	ldr	r8, [r2]
   117ac:	str	r5, [r1, #8]
   117b0:	str	r8, [r5, #4]
   117b4:	cmp	r8, #0
   117b8:	mvn	r3, #0
   117bc:	mvn	r2, #0
   117c0:	ldr	r7, [r5, #8]
   117c4:	ldrne	r3, [r8, #12]
   117c8:	cmp	r7, #0
   117cc:	ldrne	r2, [r7, #12]
   117d0:	cmp	r3, r2
   117d4:	movgt	r2, r3
   117d8:	add	r2, r2, #1
   117dc:	str	r2, [r0]
   117e0:	ldr	r0, [r1, #4]
   117e4:	cmp	r0, #0
   117e8:	beq	11840 <avl_remove_impl@@Base+0x400>
   117ec:	ldr	r0, [r0, #12]
   117f0:	b	11844 <avl_remove_impl@@Base+0x404>
   117f4:	cmp	r0, #0
   117f8:	mov	r7, r0
   117fc:	beq	11860 <avl_remove_impl@@Base+0x420>
   11800:	ldr	r0, [r7]
   11804:	bl	10f6c <strlen@plt>
   11808:	add	r1, r0, #1
   1180c:	mov	r0, r6
   11810:	bl	10f24 <realloc@plt>
   11814:	str	r0, [r5]
   11818:	ldr	r1, [r7]
   1181c:	bl	10f30 <strcpy@plt>
   11820:	ldr	r0, [r7, #4]
   11824:	str	r0, [r5, #4]
   11828:	ldr	r0, [r7, #8]
   1182c:	str	r0, [r5, #8]
   11830:	ldr	r0, [r7, #12]
   11834:	str	r0, [r5, #12]
   11838:	ldr	r6, [r7]
   1183c:	b	11868 <avl_remove_impl@@Base+0x428>
   11840:	mvn	r0, #0
   11844:	cmp	r0, r2
   11848:	mov	r8, r1
   1184c:	movgt	r2, r0
   11850:	add	r0, r2, #1
   11854:	str	r0, [r1, #12]
   11858:	mov	r0, r8
   1185c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11860:	mov	r7, r5
   11864:	mov	r5, #0
   11868:	mov	r0, r6
   1186c:	bl	10f0c <free@plt>
   11870:	mov	r0, r7
   11874:	bl	10f0c <free@plt>
   11878:	cmp	r5, #0
   1187c:	bne	11498 <avl_remove_impl@@Base+0x58>
   11880:	mov	r0, r8
   11884:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00011888 <avl_pesquisa@@Base>:
   11888:	push	{r4, r5, r6, sl, fp, lr}
   1188c:	add	fp, sp, #16
   11890:	cmp	r0, #0
   11894:	mov	r4, #0
   11898:	movne	r5, r1
   1189c:	cmpne	r1, #0
   118a0:	beq	118e0 <avl_pesquisa@@Base+0x58>
   118a4:	b	118ac <avl_pesquisa@@Base+0x24>
   118a8:	add	r0, r6, #4
   118ac:	ldr	r6, [r0]
   118b0:	cmp	r6, #0
   118b4:	beq	118e0 <avl_pesquisa@@Base+0x58>
   118b8:	ldr	r1, [r6]
   118bc:	mov	r0, r5
   118c0:	bl	10edc <strcmp@plt>
   118c4:	cmn	r0, #1
   118c8:	ble	118a8 <avl_pesquisa@@Base+0x20>
   118cc:	cmp	r0, #0
   118d0:	beq	118dc <avl_pesquisa@@Base+0x54>
   118d4:	add	r0, r6, #8
   118d8:	b	118ac <avl_pesquisa@@Base+0x24>
   118dc:	mov	r4, r6
   118e0:	mov	r0, r4
   118e4:	pop	{r4, r5, r6, sl, fp, pc}

000118e8 <avl_pesquisa_impl@@Base>:
   118e8:	push	{r4, r5, r6, sl, fp, lr}
   118ec:	add	fp, sp, #16
   118f0:	mov	r4, #0
   118f4:	cmp	r0, #0
   118f8:	beq	11940 <avl_pesquisa_impl@@Base+0x58>
   118fc:	mov	r5, r1
   11900:	mov	r6, r0
   11904:	b	11918 <avl_pesquisa_impl@@Base+0x30>
   11908:	add	r0, r6, #4
   1190c:	ldr	r6, [r0]
   11910:	cmp	r6, #0
   11914:	beq	11940 <avl_pesquisa_impl@@Base+0x58>
   11918:	ldr	r1, [r6]
   1191c:	mov	r0, r5
   11920:	bl	10edc <strcmp@plt>
   11924:	cmn	r0, #1
   11928:	ble	11908 <avl_pesquisa_impl@@Base+0x20>
   1192c:	cmp	r0, #0
   11930:	beq	1193c <avl_pesquisa_impl@@Base+0x54>
   11934:	add	r0, r6, #8
   11938:	b	1190c <avl_pesquisa_impl@@Base+0x24>
   1193c:	mov	r4, r6
   11940:	mov	r0, r4
   11944:	pop	{r4, r5, r6, sl, fp, pc}

00011948 <avl_insere@@Base>:
   11948:	push	{r4, sl, fp, lr}
   1194c:	add	fp, sp, #8
   11950:	mov	r4, r0
   11954:	mvn	r0, #0
   11958:	cmp	r4, #0
   1195c:	cmpne	r1, #0
   11960:	bne	11968 <avl_insere@@Base+0x20>
   11964:	pop	{r4, sl, fp, pc}
   11968:	ldr	r0, [r4]
   1196c:	bl	1197c <avl_insere_impl@@Base>
   11970:	str	r0, [r4]
   11974:	mov	r0, #0
   11978:	pop	{r4, sl, fp, pc}

0001197c <avl_insere_impl@@Base>:
   1197c:	push	{r4, r5, r6, sl, fp, lr}
   11980:	add	fp, sp, #16
   11984:	mov	r6, r1
   11988:	cmp	r0, #0
   1198c:	beq	119c8 <avl_insere_impl@@Base+0x4c>
   11990:	ldr	r1, [r0]
   11994:	mov	r4, r0
   11998:	mov	r0, r6
   1199c:	bl	10edc <strcmp@plt>
   119a0:	cmn	r0, #1
   119a4:	bgt	11a08 <avl_insere_impl@@Base+0x8c>
   119a8:	ldr	r0, [r4, #4]
   119ac:	mov	r1, r6
   119b0:	bl	1197c <avl_insere_impl@@Base>
   119b4:	str	r0, [r4, #4]
   119b8:	cmp	r0, #0
   119bc:	beq	11a2c <avl_insere_impl@@Base+0xb0>
   119c0:	ldr	r1, [r0, #12]
   119c4:	b	11a30 <avl_insere_impl@@Base+0xb4>
   119c8:	mov	r0, #16
   119cc:	bl	10f48 <malloc@plt>
   119d0:	mov	r5, r0
   119d4:	mov	r0, r6
   119d8:	bl	10f6c <strlen@plt>
   119dc:	add	r0, r0, #1
   119e0:	bl	10f48 <malloc@plt>
   119e4:	mov	r1, r6
   119e8:	str	r0, [r5]
   119ec:	bl	10f30 <strcpy@plt>
   119f0:	mov	r0, #0
   119f4:	str	r0, [r5, #4]
   119f8:	str	r0, [r5, #8]
   119fc:	str	r0, [r5, #12]
   11a00:	mov	r0, r5
   11a04:	pop	{r4, r5, r6, sl, fp, pc}
   11a08:	cmp	r0, #0
   11a0c:	beq	11c54 <avl_insere_impl@@Base+0x2d8>
   11a10:	ldr	r0, [r4, #8]
   11a14:	mov	r1, r6
   11a18:	bl	1197c <avl_insere_impl@@Base>
   11a1c:	str	r0, [r4, #8]
   11a20:	ldr	r0, [r4, #4]
   11a24:	cmp	r0, #0
   11a28:	bne	119c0 <avl_insere_impl@@Base+0x44>
   11a2c:	mvn	r1, #0
   11a30:	ldr	r2, [r4, #8]
   11a34:	cmp	r2, #0
   11a38:	beq	11a68 <avl_insere_impl@@Base+0xec>
   11a3c:	ldr	r3, [r2, #12]
   11a40:	cmp	r1, r3
   11a44:	movgt	r3, r1
   11a48:	mov	r1, r4
   11a4c:	add	r3, r3, #1
   11a50:	str	r3, [r1, #12]!
   11a54:	ldr	r3, [r2, #12]
   11a58:	cmp	r0, #0
   11a5c:	beq	11a84 <avl_insere_impl@@Base+0x108>
   11a60:	ldr	r6, [r0, #12]
   11a64:	b	11a88 <avl_insere_impl@@Base+0x10c>
   11a68:	orr	r1, r1, r1, asr #31
   11a6c:	add	r3, r1, #1
   11a70:	mov	r1, r4
   11a74:	str	r3, [r1, #12]!
   11a78:	mvn	r3, #0
   11a7c:	cmp	r0, #0
   11a80:	bne	11a60 <avl_insere_impl@@Base+0xe4>
   11a84:	mvn	r6, #0
   11a88:	sub	r3, r3, r6
   11a8c:	cmp	r3, #2
   11a90:	blt	11b70 <avl_insere_impl@@Base+0x1f4>
   11a94:	cmp	r2, #0
   11a98:	beq	11c5c <avl_insere_impl@@Base+0x2e0>
   11a9c:	ldr	r6, [r2, #8]
   11aa0:	ldr	r5, [r2, #4]
   11aa4:	mvn	r3, #0
   11aa8:	mvn	r0, #0
   11aac:	cmp	r6, #0
   11ab0:	ldrne	r3, [r6, #12]
   11ab4:	cmp	r5, #0
   11ab8:	ldrne	r0, [r5, #12]
   11abc:	cmp	r3, r0
   11ac0:	bge	11c64 <avl_insere_impl@@Base+0x2e8>
   11ac4:	ldr	r6, [r5, #8]
   11ac8:	str	r2, [r5, #8]
   11acc:	mvn	r3, #0
   11ad0:	mvn	r0, #0
   11ad4:	str	r6, [r2, #4]
   11ad8:	cmp	r6, #0
   11adc:	ldrne	r3, [r6, #12]
   11ae0:	ldr	r6, [r2, #8]
   11ae4:	cmp	r6, #0
   11ae8:	ldrne	r0, [r6, #12]
   11aec:	mvn	r6, #0
   11af0:	cmp	r3, r0
   11af4:	movgt	r0, r3
   11af8:	add	r3, r0, #1
   11afc:	mvn	r0, #0
   11b00:	str	r3, [r2, #12]
   11b04:	ldr	r2, [r5, #4]
   11b08:	cmp	r2, #0
   11b0c:	ldrne	r6, [r2, #12]
   11b10:	str	r4, [r5, #4]
   11b14:	cmp	r6, r3
   11b18:	movgt	r3, r6
   11b1c:	mvn	r6, #0
   11b20:	add	r3, r3, #1
   11b24:	str	r3, [r5, #12]
   11b28:	str	r2, [r4, #8]
   11b2c:	ldr	r3, [r4, #4]
   11b30:	cmp	r3, #0
   11b34:	ldrne	r0, [r3, #12]
   11b38:	cmp	r2, #0
   11b3c:	mvn	r3, #0
   11b40:	ldrne	r6, [r2, #12]
   11b44:	cmp	r0, r6
   11b48:	movgt	r6, r0
   11b4c:	add	r0, r6, #1
   11b50:	str	r0, [r1]
   11b54:	ldr	r1, [r5, #8]
   11b58:	cmp	r1, #0
   11b5c:	ldrne	r3, [r1, #12]
   11b60:	cmp	r0, r3
   11b64:	movgt	r3, r0
   11b68:	add	r0, r3, #1
   11b6c:	b	119fc <avl_insere_impl@@Base+0x80>
   11b70:	cmn	r3, #2
   11b74:	bgt	11c54 <avl_insere_impl@@Base+0x2d8>
   11b78:	cmp	r0, #0
   11b7c:	beq	11cc8 <avl_insere_impl@@Base+0x34c>
   11b80:	ldr	r5, [r0, #8]
   11b84:	ldr	r6, [r0, #4]
   11b88:	mvn	r3, #0
   11b8c:	mvn	r2, #0
   11b90:	cmp	r5, #0
   11b94:	ldrne	r3, [r5, #12]
   11b98:	cmp	r6, #0
   11b9c:	ldrne	r2, [r6, #12]
   11ba0:	cmp	r3, r2
   11ba4:	ble	11cd0 <avl_insere_impl@@Base+0x354>
   11ba8:	ldr	r3, [r5, #4]
   11bac:	str	r0, [r5, #4]
   11bb0:	mvn	r6, #0
   11bb4:	mvn	r2, #0
   11bb8:	str	r3, [r0, #8]
   11bbc:	ldr	ip, [r0, #4]
   11bc0:	cmp	ip, #0
   11bc4:	ldrne	r6, [ip, #12]
   11bc8:	cmp	r3, #0
   11bcc:	ldrne	r2, [r3, #12]
   11bd0:	cmp	r6, r2
   11bd4:	movgt	r2, r6
   11bd8:	mvn	r6, #0
   11bdc:	add	r3, r2, #1
   11be0:	str	r3, [r0, #12]
   11be4:	mvn	r0, #0
   11be8:	ldr	r2, [r5, #8]
   11bec:	cmp	r2, #0
   11bf0:	ldrne	r6, [r2, #12]
   11bf4:	str	r4, [r5, #8]
   11bf8:	cmp	r3, r6
   11bfc:	movgt	r6, r3
   11c00:	cmp	r2, #0
   11c04:	add	r3, r6, #1
   11c08:	str	r3, [r5, #12]
   11c0c:	str	r2, [r4, #4]
   11c10:	mvn	r3, #0
   11c14:	ldr	r6, [r4, #8]
   11c18:	ldrne	r0, [r2, #12]
   11c1c:	mvn	r2, #0
   11c20:	cmp	r6, #0
   11c24:	ldrne	r3, [r6, #12]
   11c28:	cmp	r0, r3
   11c2c:	movgt	r3, r0
   11c30:	add	r0, r3, #1
   11c34:	str	r0, [r1]
   11c38:	ldr	r1, [r5, #4]
   11c3c:	cmp	r1, #0
   11c40:	ldrne	r2, [r1, #12]
   11c44:	cmp	r2, r0
   11c48:	movgt	r0, r2
   11c4c:	add	r0, r0, #1
   11c50:	b	119fc <avl_insere_impl@@Base+0x80>
   11c54:	mov	r0, r4
   11c58:	pop	{r4, r5, r6, sl, fp, pc}
   11c5c:	mov	r0, #4
   11c60:	ldr	r5, [r0]
   11c64:	str	r4, [r2, #4]
   11c68:	str	r5, [r4, #8]
   11c6c:	mvn	r3, #0
   11c70:	mvn	r0, #0
   11c74:	ldr	r6, [r4, #4]
   11c78:	cmp	r6, #0
   11c7c:	ldrne	r3, [r6, #12]
   11c80:	cmp	r5, #0
   11c84:	ldrne	r0, [r5, #12]
   11c88:	cmp	r3, r0
   11c8c:	movgt	r0, r3
   11c90:	add	r0, r0, #1
   11c94:	str	r0, [r1]
   11c98:	ldr	r1, [r2, #8]
   11c9c:	cmp	r1, #0
   11ca0:	beq	11cac <avl_insere_impl@@Base+0x330>
   11ca4:	ldr	r1, [r1, #12]
   11ca8:	b	11cb0 <avl_insere_impl@@Base+0x334>
   11cac:	mvn	r1, #0
   11cb0:	cmp	r0, r1
   11cb4:	movgt	r1, r0
   11cb8:	add	r0, r1, #1
   11cbc:	str	r0, [r2, #12]
   11cc0:	mov	r0, r2
   11cc4:	pop	{r4, r5, r6, sl, fp, pc}
   11cc8:	mov	r2, #8
   11ccc:	ldr	r5, [r2]
   11cd0:	str	r4, [r0, #8]
   11cd4:	str	r5, [r4, #4]
   11cd8:	cmp	r5, #0
   11cdc:	mvn	r3, #0
   11ce0:	mvn	r2, #0
   11ce4:	ldr	r6, [r4, #8]
   11ce8:	ldrne	r3, [r5, #12]
   11cec:	cmp	r6, #0
   11cf0:	ldrne	r2, [r6, #12]
   11cf4:	cmp	r3, r2
   11cf8:	movgt	r2, r3
   11cfc:	add	r2, r2, #1
   11d00:	str	r2, [r1]
   11d04:	ldr	r1, [r0, #4]
   11d08:	cmp	r1, #0
   11d0c:	beq	11d18 <avl_insere_impl@@Base+0x39c>
   11d10:	ldr	r1, [r1, #12]
   11d14:	b	11d1c <avl_insere_impl@@Base+0x3a0>
   11d18:	mvn	r1, #0
   11d1c:	cmp	r1, r2
   11d20:	movgt	r2, r1
   11d24:	add	r1, r2, #1
   11d28:	str	r1, [r0, #12]
   11d2c:	pop	{r4, r5, r6, sl, fp, pc}

00011d30 <avl_remove@@Base>:
   11d30:	push	{r4, sl, fp, lr}
   11d34:	add	fp, sp, #8
   11d38:	mov	r4, r0
   11d3c:	mvn	r0, #0
   11d40:	cmp	r4, #0
   11d44:	cmpne	r1, #0
   11d48:	bne	11d50 <avl_remove@@Base+0x20>
   11d4c:	pop	{r4, sl, fp, pc}
   11d50:	ldr	r0, [r4]
   11d54:	bl	11440 <avl_remove_impl@@Base>
   11d58:	str	r0, [r4]
   11d5c:	mov	r0, #0
   11d60:	pop	{r4, sl, fp, pc}

00011d64 <avl_min@@Base>:
   11d64:	cmp	r0, #0
   11d68:	moveq	r0, #0
   11d6c:	bxeq	lr
   11d70:	ldr	r0, [r0]
   11d74:	mov	r1, r0
   11d78:	ldr	r0, [r0, #4]
   11d7c:	cmp	r0, #0
   11d80:	bne	11d74 <avl_min@@Base+0x10>
   11d84:	ldr	r0, [r1]
   11d88:	bx	lr

00011d8c <avl_no_valormin@@Base>:
   11d8c:	mov	r1, r0
   11d90:	ldr	r0, [r0, #4]
   11d94:	cmp	r0, #0
   11d98:	bne	11d8c <avl_no_valormin@@Base>
   11d9c:	mov	r0, r1
   11da0:	bx	lr

00011da4 <avl_max@@Base>:
   11da4:	cmp	r0, #0
   11da8:	moveq	r0, #0
   11dac:	bxeq	lr
   11db0:	ldr	r0, [r0]
   11db4:	mov	r1, r0
   11db8:	ldr	r0, [r0, #8]
   11dbc:	cmp	r0, #0
   11dc0:	bne	11db4 <avl_max@@Base+0x10>
   11dc4:	ldr	r0, [r1]
   11dc8:	bx	lr

00011dcc <avl_no_valormax@@Base>:
   11dcc:	mov	r1, r0
   11dd0:	ldr	r0, [r0, #8]
   11dd4:	cmp	r0, #0
   11dd8:	bne	11dcc <avl_no_valormax@@Base>
   11ddc:	mov	r0, r1
   11de0:	bx	lr

00011de4 <avl_imprime@@Base>:
   11de4:	cmp	r0, #0
   11de8:	bxeq	lr
   11dec:	push	{fp, lr}
   11df0:	mov	fp, sp
   11df4:	ldr	r0, [r0]
   11df8:	bl	11e08 <avl_preordem_impl@@Base>
   11dfc:	mov	r0, #10
   11e00:	pop	{fp, lr}
   11e04:	b	10f84 <putchar@plt>

00011e08 <avl_preordem_impl@@Base>:
   11e08:	push	{r4, r5, fp, lr}
   11e0c:	add	fp, sp, #8
   11e10:	cmp	r0, #0
   11e14:	popeq	{r4, r5, fp, pc}
   11e18:	ldr	r5, [pc, #40]	; 11e48 <avl_preordem_impl@@Base+0x40>
   11e1c:	mov	r4, r0
   11e20:	add	r5, pc, r5
   11e24:	ldr	r1, [r4]
   11e28:	mov	r0, r5
   11e2c:	bl	10ee8 <printf@plt>
   11e30:	ldr	r0, [r4, #4]
   11e34:	bl	11e08 <avl_preordem_impl@@Base>
   11e38:	ldr	r4, [r4, #8]
   11e3c:	cmp	r4, #0
   11e40:	bne	11e24 <avl_preordem_impl@@Base+0x1c>
   11e44:	pop	{r4, r5, fp, pc}
   11e48:	muleq	r0, r2, r9

00011e4c <avl_altura@@Base>:
   11e4c:	cmp	r0, #0
   11e50:	ldrne	r0, [r0, #12]
   11e54:	mvneq	r0, #0
   11e58:	bx	lr

00011e5c <max@@Base>:
   11e5c:	cmp	r0, r1
   11e60:	movle	r0, r1
   11e64:	bx	lr

00011e68 <avl_novo_no@@Base>:
   11e68:	push	{r4, r5, fp, lr}
   11e6c:	add	fp, sp, #8
   11e70:	mov	r4, r0
   11e74:	mov	r0, #16
   11e78:	bl	10f48 <malloc@plt>
   11e7c:	mov	r5, r0
   11e80:	mov	r0, r4
   11e84:	bl	10f6c <strlen@plt>
   11e88:	add	r0, r0, #1
   11e8c:	bl	10f48 <malloc@plt>
   11e90:	mov	r1, r4
   11e94:	str	r0, [r5]
   11e98:	bl	10f30 <strcpy@plt>
   11e9c:	mov	r0, #0
   11ea0:	str	r0, [r5, #4]
   11ea4:	str	r0, [r5, #8]
   11ea8:	str	r0, [r5, #12]
   11eac:	mov	r0, r5
   11eb0:	pop	{r4, r5, fp, pc}

00011eb4 <roda_direita@@Base>:
   11eb4:	mov	r1, r0
   11eb8:	ldr	r0, [r0, #4]
   11ebc:	mvn	ip, #0
   11ec0:	mvn	r2, #0
   11ec4:	ldr	r3, [r0, #8]
   11ec8:	str	r1, [r0, #8]
   11ecc:	str	r3, [r1, #4]
   11ed0:	cmp	r3, #0
   11ed4:	ldrne	ip, [r3, #12]
   11ed8:	ldr	r3, [r1, #8]
   11edc:	cmp	r3, #0
   11ee0:	ldrne	r2, [r3, #12]
   11ee4:	cmp	ip, r2
   11ee8:	movgt	r2, ip
   11eec:	add	r2, r2, #1
   11ef0:	str	r2, [r1, #12]
   11ef4:	ldr	r1, [r0, #4]
   11ef8:	cmp	r1, #0
   11efc:	beq	11f08 <roda_direita@@Base+0x54>
   11f00:	ldr	r1, [r1, #12]
   11f04:	b	11f0c <roda_direita@@Base+0x58>
   11f08:	mvn	r1, #0
   11f0c:	cmp	r1, r2
   11f10:	movgt	r2, r1
   11f14:	add	r1, r2, #1
   11f18:	str	r1, [r0, #12]
   11f1c:	bx	lr

00011f20 <roda_esquerda@@Base>:
   11f20:	push	{fp, lr}
   11f24:	mov	fp, sp
   11f28:	mov	r1, r0
   11f2c:	ldr	r0, [r0, #8]
   11f30:	mvn	r3, #0
   11f34:	mvn	r2, #0
   11f38:	ldr	ip, [r0, #4]
   11f3c:	str	r1, [r0, #4]
   11f40:	str	ip, [r1, #8]
   11f44:	ldr	lr, [r1, #4]
   11f48:	cmp	lr, #0
   11f4c:	ldrne	r3, [lr, #12]
   11f50:	cmp	ip, #0
   11f54:	ldrne	r2, [ip, #12]
   11f58:	cmp	r3, r2
   11f5c:	movgt	r2, r3
   11f60:	add	r2, r2, #1
   11f64:	str	r2, [r1, #12]
   11f68:	ldr	r1, [r0, #8]
   11f6c:	cmp	r1, #0
   11f70:	beq	11f7c <roda_esquerda@@Base+0x5c>
   11f74:	ldr	r1, [r1, #12]
   11f78:	b	11f80 <roda_esquerda@@Base+0x60>
   11f7c:	mvn	r1, #0
   11f80:	cmp	r2, r1
   11f84:	movgt	r1, r2
   11f88:	add	r1, r1, #1
   11f8c:	str	r1, [r0, #12]
   11f90:	pop	{fp, pc}

00011f94 <calc_balanceamento@@Base>:
   11f94:	cmp	r0, #0
   11f98:	moveq	r0, #0
   11f9c:	bxeq	lr
   11fa0:	ldr	r3, [r0, #8]
   11fa4:	ldr	r0, [r0, #4]
   11fa8:	mvn	r2, #0
   11fac:	mvn	r1, #0
   11fb0:	cmp	r3, #0
   11fb4:	ldrne	r2, [r3, #12]
   11fb8:	cmp	r0, #0
   11fbc:	ldrne	r1, [r0, #12]
   11fc0:	sub	r0, r2, r1
   11fc4:	bx	lr

00011fc8 <tabela_nova@@Base>:
   11fc8:	push	{r4, r5, r6, r7, fp, lr}
   11fcc:	add	fp, sp, #16
   11fd0:	mov	r4, #0
   11fd4:	cmp	r0, #1
   11fd8:	blt	12024 <tabela_nova@@Base+0x5c>
   11fdc:	mov	r6, r1
   11fe0:	cmp	r1, #0
   11fe4:	beq	12024 <tabela_nova@@Base+0x5c>
   11fe8:	mov	r5, r0
   11fec:	mov	r0, #12
   11ff0:	bl	10f48 <malloc@plt>
   11ff4:	cmp	r0, #0
   11ff8:	beq	12024 <tabela_nova@@Base+0x5c>
   11ffc:	mov	r7, r0
   12000:	mov	r0, r5
   12004:	mov	r1, #4
   12008:	bl	10ed0 <calloc@plt>
   1200c:	cmp	r0, #0
   12010:	str	r0, [r7, #4]
   12014:	beq	1202c <tabela_nova@@Base+0x64>
   12018:	mov	r4, r7
   1201c:	str	r6, [r7]
   12020:	str	r5, [r7, #8]
   12024:	mov	r0, r4
   12028:	pop	{r4, r5, r6, r7, fp, pc}
   1202c:	mov	r0, r7
   12030:	bl	10f0c <free@plt>
   12034:	mov	r0, r4
   12038:	pop	{r4, r5, r6, r7, fp, pc}

0001203c <tabela_apaga@@Base>:
   1203c:	cmp	r0, #0
   12040:	bxeq	lr
   12044:	push	{r4, r5, r6, r7, fp, lr}
   12048:	add	fp, sp, #16
   1204c:	mov	r4, r0
   12050:	ldr	r0, [r0, #4]
   12054:	ldr	r1, [r4, #8]
   12058:	cmp	r1, #1
   1205c:	blt	120a4 <tabela_apaga@@Base+0x68>
   12060:	mov	r6, #0
   12064:	b	12074 <tabela_apaga@@Base+0x38>
   12068:	add	r6, r6, #1
   1206c:	cmp	r6, r1
   12070:	bge	120a4 <tabela_apaga@@Base+0x68>
   12074:	ldr	r5, [r0, r6, lsl #2]
   12078:	cmp	r5, #0
   1207c:	beq	12068 <tabela_apaga@@Base+0x2c>
   12080:	ldm	r5, {r0, r7}
   12084:	bl	10f0c <free@plt>
   12088:	mov	r0, r5
   1208c:	bl	10f0c <free@plt>
   12090:	cmp	r7, #0
   12094:	mov	r5, r7
   12098:	bne	12080 <tabela_apaga@@Base+0x44>
   1209c:	ldmib	r4, {r0, r1}
   120a0:	b	12068 <tabela_apaga@@Base+0x2c>
   120a4:	bl	10f0c <free@plt>
   120a8:	mov	r0, r4
   120ac:	pop	{r4, r5, r6, r7, fp, lr}
   120b0:	b	10f0c <free@plt>

000120b4 <tabela_adiciona@@Base>:
   120b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   120b8:	add	fp, sp, #28
   120bc:	sub	sp, sp, #4
   120c0:	mvn	sl, #1
   120c4:	cmp	r0, #0
   120c8:	beq	120e0 <tabela_adiciona@@Base+0x2c>
   120cc:	cmp	r1, #0
   120d0:	mov	r7, r1
   120d4:	movne	r9, r2
   120d8:	cmpne	r2, #0
   120dc:	bne	120ec <tabela_adiciona@@Base+0x38>
   120e0:	mov	r0, sl
   120e4:	sub	sp, fp, #28
   120e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   120ec:	ldr	r2, [r0]
   120f0:	ldr	r1, [r0, #8]
   120f4:	mov	r6, r0
   120f8:	mov	r0, r7
   120fc:	blx	r2
   12100:	mov	r8, r0
   12104:	ldr	r0, [r6, #4]
   12108:	ldr	r4, [r0, r8, lsl #2]
   1210c:	cmp	r4, #0
   12110:	beq	12138 <tabela_adiciona@@Base+0x84>
   12114:	ldr	r5, [r4]
   12118:	mov	r1, r7
   1211c:	mov	r0, r5
   12120:	bl	10edc <strcmp@plt>
   12124:	cmp	r0, #0
   12128:	beq	12188 <tabela_adiciona@@Base+0xd4>
   1212c:	ldr	r4, [r4, #4]
   12130:	cmp	r4, #0
   12134:	bne	12114 <tabela_adiciona@@Base+0x60>
   12138:	mov	r0, #8
   1213c:	bl	10f48 <malloc@plt>
   12140:	cmp	r0, #0
   12144:	beq	120e0 <tabela_adiciona@@Base+0x2c>
   12148:	mov	r5, r0
   1214c:	mov	r0, #150	; 0x96
   12150:	bl	10f48 <malloc@plt>
   12154:	cmp	r0, #0
   12158:	str	r0, [r5]
   1215c:	beq	120e0 <tabela_adiciona@@Base+0x2c>
   12160:	mov	r1, r7
   12164:	bl	10f30 <strcpy@plt>
   12168:	add	r0, r0, #50	; 0x32
   1216c:	mov	r1, r9
   12170:	bl	10f30 <strcpy@plt>
   12174:	ldr	r0, [r6, #4]
   12178:	ldr	r1, [r0, r8, lsl #2]
   1217c:	str	r1, [r5, #4]
   12180:	str	r5, [r0, r8, lsl #2]
   12184:	b	12194 <tabela_adiciona@@Base+0xe0>
   12188:	add	r0, r5, #50	; 0x32
   1218c:	mov	r1, r9
   12190:	bl	10f30 <strcpy@plt>
   12194:	mov	sl, #0
   12198:	b	120e0 <tabela_adiciona@@Base+0x2c>

0001219c <tabela_remove@@Base>:
   1219c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121a0:	add	fp, sp, #28
   121a4:	sub	sp, sp, #4
   121a8:	cmp	r0, #0
   121ac:	beq	1222c <tabela_remove@@Base+0x90>
   121b0:	mov	r6, r1
   121b4:	ldr	r2, [r0]
   121b8:	ldr	r1, [r0, #8]
   121bc:	mov	r4, r0
   121c0:	mov	r0, r6
   121c4:	blx	r2
   121c8:	ldr	r9, [r4, #4]
   121cc:	mvn	sl, #2
   121d0:	ldr	r7, [r9, r0, lsl #2]
   121d4:	cmp	r7, #0
   121d8:	beq	12268 <tabela_remove@@Base+0xcc>
   121dc:	ldr	r5, [r7]
   121e0:	mov	r8, r0
   121e4:	mov	r1, r6
   121e8:	mov	r0, r5
   121ec:	bl	10edc <strcmp@plt>
   121f0:	cmp	r0, #0
   121f4:	beq	12234 <tabela_remove@@Base+0x98>
   121f8:	mov	r4, r7
   121fc:	ldr	r7, [r4, #4]
   12200:	cmp	r7, #0
   12204:	beq	12268 <tabela_remove@@Base+0xcc>
   12208:	ldr	r5, [r7]
   1220c:	mov	r1, r6
   12210:	mov	r0, r5
   12214:	bl	10edc <strcmp@plt>
   12218:	cmp	r0, #0
   1221c:	mov	r0, r4
   12220:	mov	r4, r7
   12224:	bne	121fc <tabela_remove@@Base+0x60>
   12228:	b	12238 <tabela_remove@@Base+0x9c>
   1222c:	mvn	sl, #1
   12230:	b	12268 <tabela_remove@@Base+0xcc>
   12234:	mov	r0, #0
   12238:	ldr	r1, [r7, #4]
   1223c:	cmp	r0, #0
   12240:	beq	1224c <tabela_remove@@Base+0xb0>
   12244:	str	r1, [r0, #4]
   12248:	b	12254 <tabela_remove@@Base+0xb8>
   1224c:	str	r1, [r9, r8, lsl #2]
   12250:	ldr	r5, [r7]
   12254:	mov	r0, r5
   12258:	bl	10f0c <free@plt>
   1225c:	mov	r0, r7
   12260:	bl	10f0c <free@plt>
   12264:	mov	sl, #0
   12268:	mov	r0, sl
   1226c:	sub	sp, fp, #28
   12270:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00012274 <tabela_existe@@Base>:
   12274:	push	{r4, r5, r6, sl, fp, lr}
   12278:	add	fp, sp, #16
   1227c:	cmp	r0, #0
   12280:	mvn	r5, #1
   12284:	movne	r4, r1
   12288:	cmpne	r1, #0
   1228c:	bne	12298 <tabela_existe@@Base+0x24>
   12290:	mov	r0, r5
   12294:	pop	{r4, r5, r6, sl, fp, pc}
   12298:	ldr	r2, [r0]
   1229c:	ldr	r1, [r0, #8]
   122a0:	mov	r6, r0
   122a4:	mov	r0, r4
   122a8:	blx	r2
   122ac:	ldr	r1, [r6, #4]
   122b0:	mvn	r5, #2
   122b4:	ldr	r6, [r1, r0, lsl #2]
   122b8:	cmp	r6, #0
   122bc:	beq	12290 <tabela_existe@@Base+0x1c>
   122c0:	ldr	r0, [r6]
   122c4:	mov	r1, r4
   122c8:	bl	10edc <strcmp@plt>
   122cc:	cmp	r0, #0
   122d0:	beq	122e4 <tabela_existe@@Base+0x70>
   122d4:	ldr	r6, [r6, #4]
   122d8:	cmp	r6, #0
   122dc:	bne	122c0 <tabela_existe@@Base+0x4c>
   122e0:	b	12290 <tabela_existe@@Base+0x1c>
   122e4:	mov	r5, #1
   122e8:	mov	r0, r5
   122ec:	pop	{r4, r5, r6, sl, fp, pc}

000122f0 <tabela_valor@@Base>:
   122f0:	push	{r4, r5, r6, r7, fp, lr}
   122f4:	add	fp, sp, #16
   122f8:	mov	r4, #0
   122fc:	cmp	r0, #0
   12300:	beq	12350 <tabela_valor@@Base+0x60>
   12304:	mov	r5, r1
   12308:	ldr	r2, [r0]
   1230c:	ldr	r1, [r0, #8]
   12310:	mov	r6, r0
   12314:	mov	r0, r5
   12318:	blx	r2
   1231c:	ldr	r1, [r6, #4]
   12320:	ldr	r7, [r1, r0, lsl #2]
   12324:	cmp	r7, #0
   12328:	beq	12350 <tabela_valor@@Base+0x60>
   1232c:	ldr	r6, [r7]
   12330:	mov	r1, r5
   12334:	mov	r0, r6
   12338:	bl	10edc <strcmp@plt>
   1233c:	cmp	r0, #0
   12340:	beq	12358 <tabela_valor@@Base+0x68>
   12344:	ldr	r7, [r7, #4]
   12348:	cmp	r7, #0
   1234c:	bne	1232c <tabela_valor@@Base+0x3c>
   12350:	mov	r0, r4
   12354:	pop	{r4, r5, r6, r7, fp, pc}
   12358:	add	r4, r6, #50	; 0x32
   1235c:	mov	r0, r4
   12360:	pop	{r4, r5, r6, r7, fp, pc}

00012364 <tabela_esvazia@@Base>:
   12364:	push	{r4, r5, r6, r7, fp, lr}
   12368:	add	fp, sp, #16
   1236c:	cmp	r0, #0
   12370:	beq	123dc <tabela_esvazia@@Base+0x78>
   12374:	ldr	r1, [r0, #8]
   12378:	mov	r4, r0
   1237c:	cmp	r1, #1
   12380:	blt	123e4 <tabela_esvazia@@Base+0x80>
   12384:	mov	r6, #0
   12388:	b	123a0 <tabela_esvazia@@Base+0x3c>
   1238c:	mov	r0, #0
   12390:	str	r0, [r2, r6, lsl #2]
   12394:	add	r6, r6, #1
   12398:	cmp	r6, r1
   1239c:	bge	123d8 <tabela_esvazia@@Base+0x74>
   123a0:	ldr	r2, [r4, #4]
   123a4:	ldr	r5, [r2, r6, lsl #2]
   123a8:	cmp	r5, #0
   123ac:	beq	1238c <tabela_esvazia@@Base+0x28>
   123b0:	ldm	r5, {r0, r7}
   123b4:	bl	10f0c <free@plt>
   123b8:	mov	r0, r5
   123bc:	bl	10f0c <free@plt>
   123c0:	cmp	r7, #0
   123c4:	mov	r5, r7
   123c8:	bne	123b0 <tabela_esvazia@@Base+0x4c>
   123cc:	ldr	r2, [r4, #4]
   123d0:	ldr	r1, [r4, #8]
   123d4:	b	1238c <tabela_esvazia@@Base+0x28>
   123d8:	pop	{r4, r5, r6, r7, fp, pc}
   123dc:	mvn	r0, #1
   123e0:	pop	{r4, r5, r6, r7, fp, pc}
   123e4:	mov	r0, #0
   123e8:	pop	{r4, r5, r6, r7, fp, pc}

000123ec <tabela_numelementos@@Base>:
   123ec:	cmp	r0, #0
   123f0:	mvneq	r0, #1
   123f4:	bxeq	lr
   123f8:	ldr	r1, [r0, #8]
   123fc:	cmp	r1, #1
   12400:	movlt	r0, #0
   12404:	bxlt	lr
   12408:	ldr	ip, [r0, #4]
   1240c:	mov	r0, #0
   12410:	mov	r3, #0
   12414:	b	12424 <tabela_numelementos@@Base+0x38>
   12418:	add	r3, r3, #1
   1241c:	cmp	r3, r1
   12420:	bxge	lr
   12424:	ldr	r2, [ip, r3, lsl #2]
   12428:	cmp	r2, #0
   1242c:	beq	12418 <tabela_numelementos@@Base+0x2c>
   12430:	ldr	r2, [r2, #4]
   12434:	add	r0, r0, #1
   12438:	cmp	r2, #0
   1243c:	bne	12430 <tabela_numelementos@@Base+0x44>
   12440:	b	12418 <tabela_numelementos@@Base+0x2c>

00012444 <tabela_elementos@@Base>:
   12444:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12448:	add	fp, sp, #28
   1244c:	sub	sp, sp, #4
   12450:	cmp	r0, #0
   12454:	beq	1252c <tabela_elementos@@Base+0xe8>
   12458:	ldr	r2, [r0, #8]
   1245c:	mov	r5, r0
   12460:	cmp	r2, #1
   12464:	blt	12534 <tabela_elementos@@Base+0xf0>
   12468:	ldr	r7, [r5, #4]
   1246c:	mov	r0, #0
   12470:	mov	r3, #0
   12474:	b	12484 <tabela_elementos@@Base+0x40>
   12478:	add	r3, r3, #1
   1247c:	cmp	r3, r2
   12480:	beq	124a4 <tabela_elementos@@Base+0x60>
   12484:	ldr	r6, [r7, r3, lsl #2]
   12488:	cmp	r6, #0
   1248c:	beq	12478 <tabela_elementos@@Base+0x34>
   12490:	ldr	r6, [r6, #4]
   12494:	add	r0, r0, #1
   12498:	cmp	r6, #0
   1249c:	bne	12490 <tabela_elementos@@Base+0x4c>
   124a0:	b	12478 <tabela_elementos@@Base+0x34>
   124a4:	mov	r6, #0
   124a8:	cmp	r0, #1
   124ac:	str	r0, [r1]
   124b0:	blt	12540 <tabela_elementos@@Base+0xfc>
   124b4:	mov	r1, #150	; 0x96
   124b8:	mul	r0, r0, r1
   124bc:	bl	10f48 <malloc@plt>
   124c0:	cmp	r0, #0
   124c4:	beq	12540 <tabela_elementos@@Base+0xfc>
   124c8:	ldr	sl, [r5, #8]
   124cc:	mov	r8, r0
   124d0:	cmp	sl, #1
   124d4:	blt	1254c <tabela_elementos@@Base+0x108>
   124d8:	mov	r4, #0
   124dc:	mov	r6, #0
   124e0:	b	124f0 <tabela_elementos@@Base+0xac>
   124e4:	add	r6, r6, #1
   124e8:	cmp	r6, sl
   124ec:	bge	1254c <tabela_elementos@@Base+0x108>
   124f0:	ldr	r9, [r7, r6, lsl #2]
   124f4:	cmp	r9, #0
   124f8:	beq	124e4 <tabela_elementos@@Base+0xa0>
   124fc:	mov	r0, #150	; 0x96
   12500:	mla	r5, r4, r0, r8
   12504:	ldr	r1, [r9]
   12508:	mov	r0, r5
   1250c:	mov	r2, #150	; 0x96
   12510:	bl	10f18 <memcpy@plt>
   12514:	ldr	r9, [r9, #4]
   12518:	add	r5, r5, #150	; 0x96
   1251c:	add	r4, r4, #1
   12520:	cmp	r9, #0
   12524:	bne	12504 <tabela_elementos@@Base+0xc0>
   12528:	b	124e4 <tabela_elementos@@Base+0xa0>
   1252c:	mvn	r0, #1
   12530:	b	12538 <tabela_elementos@@Base+0xf4>
   12534:	mov	r0, #0
   12538:	str	r0, [r1]
   1253c:	mov	r6, #0
   12540:	mov	r0, r6
   12544:	sub	sp, fp, #28
   12548:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1254c:	mov	r6, r8
   12550:	b	12540 <tabela_elementos@@Base+0xfc>

00012554 <hash_krm@@Base>:
   12554:	ldrb	r2, [r0]
   12558:	cmp	r2, #0
   1255c:	beq	1257c <hash_krm@@Base+0x28>
   12560:	add	r3, r0, #1
   12564:	mov	r0, #7
   12568:	uxtab	r0, r0, r2
   1256c:	ldrb	r2, [r3], #1
   12570:	cmp	r2, #0
   12574:	bne	12568 <hash_krm@@Base+0x14>
   12578:	b	12580 <hash_krm@@Base+0x2c>
   1257c:	mov	r0, #7
   12580:	udiv	r2, r0, r1
   12584:	mls	r0, r2, r1, r0
   12588:	bx	lr

0001258c <hash_djbm@@Base>:
   1258c:	ldrb	r2, [r0]
   12590:	cmp	r2, #0
   12594:	beq	125bc <hash_djbm@@Base+0x30>
   12598:	add	r3, r0, #1
   1259c:	movw	r0, #5347	; 0x14e3
   125a0:	uxtb	r2, r2
   125a4:	rsb	r0, r0, r0, lsl #5
   125a8:	eor	r0, r0, r2
   125ac:	ldrb	r2, [r3], #1
   125b0:	cmp	r2, #0
   125b4:	bne	125a0 <hash_djbm@@Base+0x14>
   125b8:	b	125c0 <hash_djbm@@Base+0x34>
   125bc:	movw	r0, #5347	; 0x14e3
   125c0:	udiv	r2, r0, r1
   125c4:	mls	r0, r2, r1, r0
   125c8:	bx	lr

000125cc <mostraTabela@@Base>:
   125cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   125d0:	add	fp, sp, #24
   125d4:	mov	r4, r0
   125d8:	cmp	r0, #0
   125dc:	beq	12628 <mostraTabela@@Base+0x5c>
   125e0:	ldr	r0, [r4, #8]
   125e4:	cmp	r0, #1
   125e8:	blt	12630 <mostraTabela@@Base+0x64>
   125ec:	ldr	r2, [r4, #4]
   125f0:	mov	r1, #0
   125f4:	mov	r3, #0
   125f8:	b	12608 <mostraTabela@@Base+0x3c>
   125fc:	add	r3, r3, #1
   12600:	cmp	r3, r0
   12604:	beq	12634 <mostraTabela@@Base+0x68>
   12608:	ldr	r7, [r2, r3, lsl #2]
   1260c:	cmp	r7, #0
   12610:	beq	125fc <mostraTabela@@Base+0x30>
   12614:	ldr	r7, [r7, #4]
   12618:	add	r1, r1, #1
   1261c:	cmp	r7, #0
   12620:	bne	12614 <mostraTabela@@Base+0x48>
   12624:	b	125fc <mostraTabela@@Base+0x30>
   12628:	mvn	r1, #1
   1262c:	b	12634 <mostraTabela@@Base+0x68>
   12630:	mov	r1, #0
   12634:	ldr	r0, [pc, #152]	; 126d4 <mostraTabela@@Base+0x108>
   12638:	add	r0, pc, r0
   1263c:	bl	10ee8 <printf@plt>
   12640:	ldr	r0, [r4, #8]
   12644:	cmp	r0, #1
   12648:	blt	126c8 <mostraTabela@@Base+0xfc>
   1264c:	ldr	r8, [pc, #132]	; 126d8 <mostraTabela@@Base+0x10c>
   12650:	ldr	r7, [pc, #132]	; 126dc <mostraTabela@@Base+0x110>
   12654:	mov	r5, #0
   12658:	add	r8, pc, r8
   1265c:	add	r7, pc, r7
   12660:	b	1267c <mostraTabela@@Base+0xb0>
   12664:	mov	r0, #10
   12668:	bl	10f84 <putchar@plt>
   1266c:	ldr	r0, [r4, #8]
   12670:	add	r5, r5, #1
   12674:	cmp	r5, r0
   12678:	bge	126c8 <mostraTabela@@Base+0xfc>
   1267c:	ldr	r1, [r4, #4]
   12680:	ldr	r1, [r1, r5, lsl #2]
   12684:	cmp	r1, #0
   12688:	beq	12670 <mostraTabela@@Base+0xa4>
   1268c:	mov	r0, r8
   12690:	mov	r1, r5
   12694:	bl	10ee8 <printf@plt>
   12698:	ldr	r0, [r4, #4]
   1269c:	ldr	r6, [r0, r5, lsl #2]
   126a0:	cmp	r6, #0
   126a4:	beq	12664 <mostraTabela@@Base+0x98>
   126a8:	ldr	r1, [r6]
   126ac:	mov	r0, r7
   126b0:	add	r2, r1, #50	; 0x32
   126b4:	bl	10ee8 <printf@plt>
   126b8:	ldr	r6, [r6, #4]
   126bc:	cmp	r6, #0
   126c0:	bne	126a8 <mostraTabela@@Base+0xdc>
   126c4:	b	12664 <mostraTabela@@Base+0x98>
   126c8:	mov	r0, #10
   126cc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   126d0:	b	10f84 <putchar@plt>
   126d4:	andeq	r0, r0, lr, ror r1
   126d8:	andeq	r0, r0, r2, lsl #3
   126dc:	andeq	r0, r0, r5, lsl #3

000126e0 <__libc_csu_init@@Base>:
   126e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   126e4:	mov	r7, r0
   126e8:	ldr	r6, [pc, #72]	; 12738 <__libc_csu_init@@Base+0x58>
   126ec:	ldr	r5, [pc, #72]	; 1273c <__libc_csu_init@@Base+0x5c>
   126f0:	add	r6, pc, r6
   126f4:	add	r5, pc, r5
   126f8:	sub	r6, r6, r5
   126fc:	mov	r8, r1
   12700:	mov	r9, r2
   12704:	bl	10eb0 <calloc@plt-0x20>
   12708:	asrs	r6, r6, #2
   1270c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12710:	mov	r4, #0
   12714:	add	r4, r4, #1
   12718:	ldr	r3, [r5], #4
   1271c:	mov	r2, r9
   12720:	mov	r1, r8
   12724:	mov	r0, r7
   12728:	blx	r3
   1272c:	cmp	r6, r4
   12730:	bne	12714 <__libc_csu_init@@Base+0x34>
   12734:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12738:	andeq	r0, r1, r4, lsl r8
   1273c:	andeq	r0, r1, ip, lsl #16

00012740 <__libc_csu_fini@@Base>:
   12740:	bx	lr

Disassembly of section .fini:

00012744 <.fini>:
   12744:	push	{r3, lr}
   12748:	pop	{r3, pc}
