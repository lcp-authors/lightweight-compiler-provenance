
../repos/stcorp-coda-3a25f25/codafind:     file format elf32-littlearm


Disassembly of section .init:

00010900 <.init>:
   10900:	push	{r3, lr}
   10904:	bl	10a28 <_start@@Base+0x3c>
   10908:	pop	{r3, pc}

Disassembly of section .plt:

0001090c <coda_match_filefilter@plt-0x14>:
   1090c:	push	{lr}		; (str lr, [sp, #-4]!)
   10910:	ldr	lr, [pc, #4]	; 1091c <coda_match_filefilter@plt-0x4>
   10914:	add	lr, pc, lr
   10918:	ldr	pc, [lr, #8]!
   1091c:	andeq	r1, r1, r4, ror #13

00010920 <coda_match_filefilter@plt>:
   10920:	add	ip, pc, #0, 12
   10924:	add	ip, ip, #69632	; 0x11000
   10928:	ldr	pc, [ip, #1764]!	; 0x6e4

0001092c <strcmp@plt>:
   1092c:	add	ip, pc, #0, 12
   10930:	add	ip, ip, #69632	; 0x11000
   10934:	ldr	pc, [ip, #1756]!	; 0x6dc

00010938 <printf@plt>:
   10938:	add	ip, pc, #0, 12
   1093c:	add	ip, ip, #69632	; 0x11000
   10940:	ldr	pc, [ip, #1748]!	; 0x6d4

00010944 <coda_set_definition_path_conditional@plt>:
   10944:	add	ip, pc, #0, 12
   10948:	add	ip, ip, #69632	; 0x11000
   1094c:	ldr	pc, [ip, #1740]!	; 0x6cc

00010950 <coda_set_definition_path@plt>:
   10950:	add	ip, pc, #0, 12
   10954:	add	ip, ip, #69632	; 0x11000
   10958:	ldr	pc, [ip, #1732]!	; 0x6c4

0001095c <coda_done@plt>:
   1095c:	add	ip, pc, #0, 12
   10960:	add	ip, ip, #69632	; 0x11000
   10964:	ldr	pc, [ip, #1724]!	; 0x6bc

00010968 <__libc_start_main@plt>:
   10968:	add	ip, pc, #0, 12
   1096c:	add	ip, ip, #69632	; 0x11000
   10970:	ldr	pc, [ip, #1716]!	; 0x6b4

00010974 <__gmon_start__@plt>:
   10974:	add	ip, pc, #0, 12
   10978:	add	ip, ip, #69632	; 0x11000
   1097c:	ldr	pc, [ip, #1708]!	; 0x6ac

00010980 <exit@plt>:
   10980:	add	ip, pc, #0, 12
   10984:	add	ip, ip, #69632	; 0x11000
   10988:	ldr	pc, [ip, #1700]!	; 0x6a4

0001098c <fprintf@plt>:
   1098c:	add	ip, pc, #0, 12
   10990:	add	ip, ip, #69632	; 0x11000
   10994:	ldr	pc, [ip, #1692]!	; 0x69c

00010998 <coda_init@plt>:
   10998:	add	ip, pc, #0, 12
   1099c:	add	ip, ip, #69632	; 0x11000
   109a0:	ldr	pc, [ip, #1684]!	; 0x694

000109a4 <coda_set_option_perform_conversions@plt>:
   109a4:	add	ip, pc, #0, 12
   109a8:	add	ip, ip, #69632	; 0x11000
   109ac:	ldr	pc, [ip, #1676]!	; 0x68c

000109b0 <coda_errno_to_string@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #69632	; 0x11000
   109b8:	ldr	pc, [ip, #1668]!	; 0x684

000109bc <coda_get_libcoda_version@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #69632	; 0x11000
   109c4:	ldr	pc, [ip, #1660]!	; 0x67c

000109c8 <coda_get_errno@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #69632	; 0x11000
   109d0:	ldr	pc, [ip, #1652]!	; 0x674

000109d4 <abort@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #69632	; 0x11000
   109dc:	ldr	pc, [ip, #1644]!	; 0x66c

000109e0 <__assert_fail@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #69632	; 0x11000
   109e8:	ldr	pc, [ip, #1636]!	; 0x664

Disassembly of section .text:

000109ec <_start@@Base>:
   109ec:	mov	fp, #0
   109f0:	mov	lr, #0
   109f4:	pop	{r1}		; (ldr r1, [sp], #4)
   109f8:	mov	r2, sp
   109fc:	push	{r2}		; (str r2, [sp, #-4]!)
   10a00:	push	{r0}		; (str r0, [sp, #-4]!)
   10a04:	ldr	ip, [pc, #16]	; 10a1c <_start@@Base+0x30>
   10a08:	push	{ip}		; (str ip, [sp, #-4]!)
   10a0c:	ldr	r0, [pc, #12]	; 10a20 <_start@@Base+0x34>
   10a10:	ldr	r3, [pc, #12]	; 10a24 <_start@@Base+0x38>
   10a14:	bl	10968 <__libc_start_main@plt>
   10a18:	bl	109d4 <abort@plt>
   10a1c:	andeq	r1, r1, ip, asr r5
   10a20:	andeq	r0, r1, r4, asr #25
   10a24:	strdeq	r1, [r1], -ip
   10a28:	ldr	r3, [pc, #20]	; 10a44 <_start@@Base+0x58>
   10a2c:	ldr	r2, [pc, #20]	; 10a48 <_start@@Base+0x5c>
   10a30:	add	r3, pc, r3
   10a34:	ldr	r2, [r3, r2]
   10a38:	cmp	r2, #0
   10a3c:	bxeq	lr
   10a40:	b	10974 <__gmon_start__@plt>
   10a44:	andeq	r1, r1, r8, asr #11
   10a48:	andeq	r0, r0, r4, asr r0
   10a4c:	ldr	r0, [pc, #24]	; 10a6c <_start@@Base+0x80>
   10a50:	ldr	r3, [pc, #24]	; 10a70 <_start@@Base+0x84>
   10a54:	cmp	r3, r0
   10a58:	bxeq	lr
   10a5c:	ldr	r3, [pc, #16]	; 10a74 <_start@@Base+0x88>
   10a60:	cmp	r3, #0
   10a64:	bxeq	lr
   10a68:	bx	r3
   10a6c:	andeq	r2, r2, r4, rrx
   10a70:	andeq	r2, r2, r4, rrx
   10a74:	andeq	r0, r0, r0
   10a78:	ldr	r0, [pc, #36]	; 10aa4 <_start@@Base+0xb8>
   10a7c:	ldr	r1, [pc, #36]	; 10aa8 <_start@@Base+0xbc>
   10a80:	sub	r1, r1, r0
   10a84:	asr	r1, r1, #2
   10a88:	add	r1, r1, r1, lsr #31
   10a8c:	asrs	r1, r1, #1
   10a90:	bxeq	lr
   10a94:	ldr	r3, [pc, #16]	; 10aac <_start@@Base+0xc0>
   10a98:	cmp	r3, #0
   10a9c:	bxeq	lr
   10aa0:	bx	r3
   10aa4:	andeq	r2, r2, r4, rrx
   10aa8:	andeq	r2, r2, r4, rrx
   10aac:	andeq	r0, r0, r0
   10ab0:	push	{r4, lr}
   10ab4:	ldr	r4, [pc, #24]	; 10ad4 <_start@@Base+0xe8>
   10ab8:	ldrb	r3, [r4]
   10abc:	cmp	r3, #0
   10ac0:	popne	{r4, pc}
   10ac4:	bl	10a4c <_start@@Base+0x60>
   10ac8:	mov	r3, #1
   10acc:	strb	r3, [r4]
   10ad0:	pop	{r4, pc}
   10ad4:	andeq	r2, r2, r4, rrx
   10ad8:	b	10a78 <_start@@Base+0x8c>

00010adc <callback@@Base>:
   10adc:	push	{fp, lr}
   10ae0:	mov	fp, sp
   10ae4:	sub	sp, sp, #56	; 0x38
   10ae8:	str	r0, [fp, #-4]
   10aec:	str	r1, [fp, #-8]
   10af0:	str	r2, [fp, #-12]
   10af4:	str	r3, [fp, #-16]
   10af8:	ldr	r0, [fp, #-8]
   10afc:	cmp	r0, #0
   10b00:	bne	10b2c <callback@@Base+0x50>
   10b04:	ldr	r0, [pc, #428]	; 10cb8 <callback@@Base+0x1dc>
   10b08:	add	r1, pc, r0
   10b0c:	ldr	r0, [pc, #424]	; 10cbc <callback@@Base+0x1e0>
   10b10:	ldr	r0, [pc, r0]
   10b14:	ldr	r0, [r0]
   10b18:	ldr	r2, [fp, #-4]
   10b1c:	ldr	r3, [fp, #-12]
   10b20:	bl	1098c <fprintf@plt>
   10b24:	str	r0, [fp, #-20]	; 0xffffffec
   10b28:	b	10c7c <callback@@Base+0x1a0>
   10b2c:	ldr	r0, [fp, #-8]
   10b30:	cmp	r0, #2
   10b34:	bne	10b5c <callback@@Base+0x80>
   10b38:	ldr	r0, [pc, #368]	; 10cb0 <callback@@Base+0x1d4>
   10b3c:	add	r1, pc, r0
   10b40:	ldr	r0, [pc, #364]	; 10cb4 <callback@@Base+0x1d8>
   10b44:	ldr	r0, [pc, r0]
   10b48:	ldr	r0, [r0]
   10b4c:	ldr	r2, [fp, #-4]
   10b50:	bl	1098c <fprintf@plt>
   10b54:	str	r0, [fp, #-24]	; 0xffffffe8
   10b58:	b	10c78 <callback@@Base+0x19c>
   10b5c:	ldr	r0, [fp, #-8]
   10b60:	cmp	r0, #1
   10b64:	bne	10b90 <callback@@Base+0xb4>
   10b68:	ldr	r0, [pc, #312]	; 10ca8 <callback@@Base+0x1cc>
   10b6c:	add	r1, pc, r0
   10b70:	ldr	r0, [pc, #308]	; 10cac <callback@@Base+0x1d0>
   10b74:	ldr	r0, [pc, r0]
   10b78:	ldr	r0, [r0]
   10b7c:	ldr	r2, [fp, #-4]
   10b80:	ldr	r3, [fp, #-12]
   10b84:	bl	1098c <fprintf@plt>
   10b88:	str	r0, [sp, #28]
   10b8c:	b	10c74 <callback@@Base+0x198>
   10b90:	ldr	r0, [pc, #240]	; 10c88 <callback@@Base+0x1ac>
   10b94:	add	r0, pc, r0
   10b98:	ldr	r0, [r0]
   10b9c:	cmp	r0, #0
   10ba0:	beq	10c4c <callback@@Base+0x170>
   10ba4:	ldr	r1, [fp, #-4]
   10ba8:	ldr	r0, [pc, #272]	; 10cc0 <callback@@Base+0x1e4>
   10bac:	add	r0, pc, r0
   10bb0:	bl	10938 <printf@plt>
   10bb4:	ldr	r1, [fp, #-8]
   10bb8:	cmp	r1, #5
   10bbc:	str	r0, [sp, #24]
   10bc0:	str	r1, [sp, #20]
   10bc4:	bhi	10c48 <callback@@Base+0x16c>
   10bc8:	add	r0, pc, #8
   10bcc:	ldr	r1, [sp, #20]
   10bd0:	ldr	r2, [r0, r1, lsl #2]
   10bd4:	add	pc, r0, r2
   10bd8:	andeq	r0, r0, r8, lsl r0
   10bdc:	andeq	r0, r0, r8, lsl r0
   10be0:	andeq	r0, r0, r8, lsl r0
   10be4:	andeq	r0, r0, r8, lsr r0
   10be8:	andeq	r0, r0, r0, rrx
   10bec:	andeq	r0, r0, ip, asr #32
   10bf0:	ldr	r0, [pc, #164]	; 10c9c <callback@@Base+0x1c0>
   10bf4:	add	r0, pc, r0
   10bf8:	ldr	r1, [pc, #160]	; 10ca0 <callback@@Base+0x1c4>
   10bfc:	add	r1, pc, r1
   10c00:	ldr	r2, [pc, #156]	; 10ca4 <callback@@Base+0x1c8>
   10c04:	add	r3, pc, r2
   10c08:	movw	r2, #110	; 0x6e
   10c0c:	bl	109e0 <__assert_fail@plt>
   10c10:	ldr	r0, [pc, #128]	; 10c98 <callback@@Base+0x1bc>
   10c14:	add	r0, pc, r0
   10c18:	bl	10938 <printf@plt>
   10c1c:	str	r0, [sp, #16]
   10c20:	b	10c48 <callback@@Base+0x16c>
   10c24:	ldr	r0, [pc, #104]	; 10c94 <callback@@Base+0x1b8>
   10c28:	add	r0, pc, r0
   10c2c:	bl	10938 <printf@plt>
   10c30:	str	r0, [sp, #12]
   10c34:	b	10c48 <callback@@Base+0x16c>
   10c38:	ldr	r0, [pc, #80]	; 10c90 <callback@@Base+0x1b4>
   10c3c:	add	r0, pc, r0
   10c40:	bl	10938 <printf@plt>
   10c44:	str	r0, [sp, #8]
   10c48:	b	10c70 <callback@@Base+0x194>
   10c4c:	ldr	r0, [fp, #-8]
   10c50:	cmp	r0, #4
   10c54:	bne	10c6c <callback@@Base+0x190>
   10c58:	ldr	r0, [pc, #44]	; 10c8c <callback@@Base+0x1b0>
   10c5c:	add	r0, pc, r0
   10c60:	ldr	r1, [fp, #-4]
   10c64:	bl	10938 <printf@plt>
   10c68:	str	r0, [sp, #4]
   10c6c:	b	10c70 <callback@@Base+0x194>
   10c70:	b	10c74 <callback@@Base+0x198>
   10c74:	b	10c78 <callback@@Base+0x19c>
   10c78:	b	10c7c <callback@@Base+0x1a0>
   10c7c:	movw	r0, #0
   10c80:	mov	sp, fp
   10c84:	pop	{fp, pc}
   10c88:	andeq	r1, r1, ip, asr #9
   10c8c:	andeq	r0, r0, r6, asr sl
   10c90:	andeq	r0, r0, r4, lsr sl
   10c94:	andeq	r0, r0, r5, asr #20
   10c98:	andeq	r0, r0, r4, asr #20
   10c9c:			; <UNDEFINED> instruction: 0x000009bd
   10ca0:			; <UNDEFINED> instruction: 0x000009b7
   10ca4:	andeq	r0, r0, fp, lsl #20
   10ca8:	andeq	r0, r0, r0, lsr #20
   10cac:	ldrdeq	r1, [r1], -r4
   10cb0:	andeq	r0, r0, r0, lsr sl
   10cb4:	andeq	r1, r1, r4, lsl #10
   10cb8:	andeq	r0, r0, ip, asr sl
   10cbc:	andeq	r1, r1, r8, lsr r5
   10cc0:	strdeq	r0, [r0], -lr

00010cc4 <main@@Base>:
   10cc4:	push	{fp, lr}
   10cc8:	mov	fp, sp
   10ccc:	sub	sp, sp, #88	; 0x58
   10cd0:	ldr	r2, [pc, #1168]	; 11168 <main@@Base+0x4a4>
   10cd4:	add	r2, pc, r2
   10cd8:	movw	r3, #0
   10cdc:	str	r3, [fp, #-4]
   10ce0:	str	r0, [fp, #-8]
   10ce4:	str	r1, [fp, #-12]
   10ce8:	str	r3, [fp, #-16]
   10cec:	str	r3, [r2]
   10cf0:	movw	r0, #1
   10cf4:	str	r0, [fp, #-20]	; 0xffffffec
   10cf8:	ldr	r0, [fp, #-8]
   10cfc:	cmp	r0, #1
   10d00:	beq	10d3c <main@@Base+0x78>
   10d04:	ldr	r0, [fp, #-12]
   10d08:	ldr	r0, [r0, #4]
   10d0c:	ldr	r1, [pc, #1164]	; 111a0 <main@@Base+0x4dc>
   10d10:	add	r1, pc, r1
   10d14:	bl	1092c <strcmp@plt>
   10d18:	cmp	r0, #0
   10d1c:	beq	10d3c <main@@Base+0x78>
   10d20:	ldr	r0, [fp, #-12]
   10d24:	ldr	r0, [r0, #4]
   10d28:	ldr	r1, [pc, #1140]	; 111a4 <main@@Base+0x4e0>
   10d2c:	add	r1, pc, r1
   10d30:	bl	1092c <strcmp@plt>
   10d34:	cmp	r0, #0
   10d38:	bne	10d48 <main@@Base+0x84>
   10d3c:	bl	111cc <main@@Base+0x508>
   10d40:	movw	r0, #0
   10d44:	bl	10980 <exit@plt>
   10d48:	ldr	r0, [fp, #-12]
   10d4c:	ldr	r0, [r0, #4]
   10d50:	ldr	r1, [pc, #1104]	; 111a8 <main@@Base+0x4e4>
   10d54:	add	r1, pc, r1
   10d58:	bl	1092c <strcmp@plt>
   10d5c:	cmp	r0, #0
   10d60:	beq	10d80 <main@@Base+0xbc>
   10d64:	ldr	r0, [fp, #-12]
   10d68:	ldr	r0, [r0, #4]
   10d6c:	ldr	r1, [pc, #1080]	; 111ac <main@@Base+0x4e8>
   10d70:	add	r1, pc, r1
   10d74:	bl	1092c <strcmp@plt>
   10d78:	cmp	r0, #0
   10d7c:	bne	10d8c <main@@Base+0xc8>
   10d80:	bl	11494 <main@@Base+0x7d0>
   10d84:	movw	r0, #0
   10d88:	bl	10980 <exit@plt>
   10d8c:	movw	r0, #1
   10d90:	str	r0, [fp, #-24]	; 0xffffffe8
   10d94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10d98:	add	r0, r0, #1
   10d9c:	ldr	r1, [fp, #-8]
   10da0:	cmp	r0, r1
   10da4:	bge	10df8 <main@@Base+0x134>
   10da8:	ldr	r0, [fp, #-12]
   10dac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10db0:	add	r0, r0, r1, lsl #2
   10db4:	ldr	r0, [r0]
   10db8:	ldr	r1, [pc, #1008]	; 111b0 <main@@Base+0x4ec>
   10dbc:	add	r1, pc, r1
   10dc0:	bl	1092c <strcmp@plt>
   10dc4:	cmp	r0, #0
   10dc8:	bne	10df8 <main@@Base+0x134>
   10dcc:	ldr	r0, [fp, #-12]
   10dd0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10dd4:	add	r1, r1, #1
   10dd8:	add	r0, r0, r1, lsl #2
   10ddc:	ldr	r0, [r0]
   10de0:	bl	10950 <coda_set_definition_path@plt>
   10de4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10de8:	add	r1, r1, #2
   10dec:	str	r1, [fp, #-24]	; 0xffffffe8
   10df0:	str	r0, [fp, #-32]	; 0xffffffe0
   10df4:	b	10e6c <main@@Base+0x1a8>
   10df8:	ldr	r0, [pc, #876]	; 1116c <main@@Base+0x4a8>
   10dfc:	add	r0, pc, r0
   10e00:	str	r0, [fp, #-28]	; 0xffffffe4
   10e04:	ldr	r0, [fp, #-12]
   10e08:	ldr	r0, [r0]
   10e0c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   10e10:	movw	r1, #0
   10e14:	bl	10944 <coda_set_definition_path_conditional@plt>
   10e18:	cmp	r0, #0
   10e1c:	beq	10e68 <main@@Base+0x1a4>
   10e20:	ldr	r0, [pc, #844]	; 11174 <main@@Base+0x4b0>
   10e24:	ldr	r0, [pc, r0]
   10e28:	ldr	r0, [r0]
   10e2c:	str	r0, [fp, #-36]	; 0xffffffdc
   10e30:	bl	109c8 <coda_get_errno@plt>
   10e34:	ldr	r0, [r0]
   10e38:	bl	109b0 <coda_errno_to_string@plt>
   10e3c:	ldr	lr, [pc, #812]	; 11170 <main@@Base+0x4ac>
   10e40:	add	r1, pc, lr
   10e44:	ldr	lr, [fp, #-36]	; 0xffffffdc
   10e48:	str	r0, [fp, #-40]	; 0xffffffd8
   10e4c:	mov	r0, lr
   10e50:	ldr	r2, [fp, #-40]	; 0xffffffd8
   10e54:	bl	1098c <fprintf@plt>
   10e58:	movw	r1, #1
   10e5c:	str	r0, [sp, #44]	; 0x2c
   10e60:	mov	r0, r1
   10e64:	bl	10980 <exit@plt>
   10e68:	b	10e6c <main@@Base+0x1a8>
   10e6c:	b	10e70 <main@@Base+0x1ac>
   10e70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10e74:	ldr	r1, [fp, #-8]
   10e78:	cmp	r0, r1
   10e7c:	bge	11034 <main@@Base+0x370>
   10e80:	ldr	r0, [fp, #-12]
   10e84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10e88:	add	r0, r0, r1, lsl #2
   10e8c:	ldr	r0, [r0]
   10e90:	ldr	r1, [pc, #796]	; 111b4 <main@@Base+0x4f0>
   10e94:	add	r1, pc, r1
   10e98:	bl	1092c <strcmp@plt>
   10e9c:	cmp	r0, #0
   10ea0:	beq	10ec8 <main@@Base+0x204>
   10ea4:	ldr	r0, [fp, #-12]
   10ea8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10eac:	add	r0, r0, r1, lsl #2
   10eb0:	ldr	r0, [r0]
   10eb4:	ldr	r1, [pc, #764]	; 111b8 <main@@Base+0x4f4>
   10eb8:	add	r1, pc, r1
   10ebc:	bl	1092c <strcmp@plt>
   10ec0:	cmp	r0, #0
   10ec4:	bne	10ed4 <main@@Base+0x210>
   10ec8:	movw	r0, #0
   10ecc:	str	r0, [fp, #-20]	; 0xffffffec
   10ed0:	b	11024 <main@@Base+0x360>
   10ed4:	ldr	r0, [fp, #-12]
   10ed8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10edc:	add	r0, r0, r1, lsl #2
   10ee0:	ldr	r0, [r0]
   10ee4:	ldr	r1, [pc, #720]	; 111bc <main@@Base+0x4f8>
   10ee8:	add	r1, pc, r1
   10eec:	bl	1092c <strcmp@plt>
   10ef0:	cmp	r0, #0
   10ef4:	beq	10f1c <main@@Base+0x258>
   10ef8:	ldr	r0, [fp, #-12]
   10efc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10f00:	add	r0, r0, r1, lsl #2
   10f04:	ldr	r0, [r0]
   10f08:	ldr	r1, [pc, #688]	; 111c0 <main@@Base+0x4fc>
   10f0c:	add	r1, pc, r1
   10f10:	bl	1092c <strcmp@plt>
   10f14:	cmp	r0, #0
   10f18:	bne	10f78 <main@@Base+0x2b4>
   10f1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10f20:	add	r0, r0, #1
   10f24:	ldr	r1, [fp, #-8]
   10f28:	cmp	r0, r1
   10f2c:	bge	10f78 <main@@Base+0x2b4>
   10f30:	ldr	r0, [fp, #-12]
   10f34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10f38:	add	r1, r1, #1
   10f3c:	add	r0, r0, r1, lsl #2
   10f40:	ldr	r0, [r0]
   10f44:	ldrb	r0, [r0]
   10f48:	cmp	r0, #45	; 0x2d
   10f4c:	beq	10f78 <main@@Base+0x2b4>
   10f50:	ldr	r0, [fp, #-12]
   10f54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10f58:	add	r1, r1, #1
   10f5c:	add	r0, r0, r1, lsl #2
   10f60:	ldr	r0, [r0]
   10f64:	str	r0, [fp, #-16]
   10f68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10f6c:	add	r0, r0, #1
   10f70:	str	r0, [fp, #-24]	; 0xffffffe8
   10f74:	b	11020 <main@@Base+0x35c>
   10f78:	ldr	r0, [fp, #-12]
   10f7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10f80:	add	r0, r0, r1, lsl #2
   10f84:	ldr	r0, [r0]
   10f88:	ldr	r1, [pc, #564]	; 111c4 <main@@Base+0x500>
   10f8c:	add	r1, pc, r1
   10f90:	bl	1092c <strcmp@plt>
   10f94:	cmp	r0, #0
   10f98:	beq	10fc0 <main@@Base+0x2fc>
   10f9c:	ldr	r0, [fp, #-12]
   10fa0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10fa4:	add	r0, r0, r1, lsl #2
   10fa8:	ldr	r0, [r0]
   10fac:	ldr	r1, [pc, #532]	; 111c8 <main@@Base+0x504>
   10fb0:	add	r1, pc, r1
   10fb4:	bl	1092c <strcmp@plt>
   10fb8:	cmp	r0, #0
   10fbc:	bne	10fd4 <main@@Base+0x310>
   10fc0:	ldr	r0, [pc, #468]	; 1119c <main@@Base+0x4d8>
   10fc4:	add	r0, pc, r0
   10fc8:	movw	r1, #1
   10fcc:	str	r1, [r0]
   10fd0:	b	1101c <main@@Base+0x358>
   10fd4:	ldr	r0, [fp, #-12]
   10fd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10fdc:	add	r0, r0, r1, lsl #2
   10fe0:	ldr	r0, [r0]
   10fe4:	ldrb	r0, [r0]
   10fe8:	cmp	r0, #45	; 0x2d
   10fec:	beq	10ff4 <main@@Base+0x330>
   10ff0:	b	11034 <main@@Base+0x370>
   10ff4:	ldr	r0, [pc, #380]	; 11178 <main@@Base+0x4b4>
   10ff8:	add	r1, pc, r0
   10ffc:	ldr	r0, [pc, #376]	; 1117c <main@@Base+0x4b8>
   11000:	ldr	r0, [pc, r0]
   11004:	ldr	r0, [r0]
   11008:	bl	1098c <fprintf@plt>
   1100c:	str	r0, [sp, #40]	; 0x28
   11010:	bl	111cc <main@@Base+0x508>
   11014:	movw	r0, #1
   11018:	bl	10980 <exit@plt>
   1101c:	b	11020 <main@@Base+0x35c>
   11020:	b	11024 <main@@Base+0x360>
   11024:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11028:	add	r0, r0, #1
   1102c:	str	r0, [fp, #-24]	; 0xffffffe8
   11030:	b	10e70 <main@@Base+0x1ac>
   11034:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11038:	ldr	r1, [fp, #-8]
   1103c:	cmp	r0, r1
   11040:	bne	1106c <main@@Base+0x3a8>
   11044:	ldr	r0, [pc, #328]	; 11194 <main@@Base+0x4d0>
   11048:	add	r1, pc, r0
   1104c:	ldr	r0, [pc, #324]	; 11198 <main@@Base+0x4d4>
   11050:	ldr	r0, [pc, r0]
   11054:	ldr	r0, [r0]
   11058:	bl	1098c <fprintf@plt>
   1105c:	str	r0, [sp, #36]	; 0x24
   11060:	bl	111cc <main@@Base+0x508>
   11064:	movw	r0, #1
   11068:	bl	10980 <exit@plt>
   1106c:	bl	10998 <coda_init@plt>
   11070:	cmp	r0, #0
   11074:	beq	110c0 <main@@Base+0x3fc>
   11078:	ldr	r0, [pc, #272]	; 11190 <main@@Base+0x4cc>
   1107c:	ldr	r0, [pc, r0]
   11080:	ldr	r0, [r0]
   11084:	str	r0, [sp, #32]
   11088:	bl	109c8 <coda_get_errno@plt>
   1108c:	ldr	r0, [r0]
   11090:	bl	109b0 <coda_errno_to_string@plt>
   11094:	ldr	lr, [pc, #240]	; 1118c <main@@Base+0x4c8>
   11098:	add	r1, pc, lr
   1109c:	ldr	lr, [sp, #32]
   110a0:	str	r0, [sp, #28]
   110a4:	mov	r0, lr
   110a8:	ldr	r2, [sp, #28]
   110ac:	bl	1098c <fprintf@plt>
   110b0:	movw	r1, #1
   110b4:	str	r0, [sp, #24]
   110b8:	mov	r0, r1
   110bc:	bl	10980 <exit@plt>
   110c0:	ldr	r0, [pc, #184]	; 11180 <main@@Base+0x4bc>
   110c4:	ldr	r3, [pc, r0]
   110c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   110cc:	str	r3, [sp, #20]
   110d0:	bl	109a4 <coda_set_option_perform_conversions@plt>
   110d4:	ldr	r3, [fp, #-16]
   110d8:	ldr	lr, [fp, #-8]
   110dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   110e0:	sub	lr, lr, r1
   110e4:	ldr	r2, [fp, #-12]
   110e8:	add	r2, r2, r1, lsl #2
   110ec:	str	r0, [sp, #16]
   110f0:	mov	r0, r3
   110f4:	mov	r1, lr
   110f8:	ldr	r3, [sp, #20]
   110fc:	movw	lr, #0
   11100:	str	lr, [sp]
   11104:	bl	10920 <coda_match_filefilter@plt>
   11108:	cmp	r0, #0
   1110c:	beq	11158 <main@@Base+0x494>
   11110:	ldr	r0, [pc, #112]	; 11188 <main@@Base+0x4c4>
   11114:	ldr	r0, [pc, r0]
   11118:	ldr	r0, [r0]
   1111c:	str	r0, [sp, #12]
   11120:	bl	109c8 <coda_get_errno@plt>
   11124:	ldr	r0, [r0]
   11128:	bl	109b0 <coda_errno_to_string@plt>
   1112c:	ldr	lr, [pc, #80]	; 11184 <main@@Base+0x4c0>
   11130:	add	r1, pc, lr
   11134:	ldr	lr, [sp, #12]
   11138:	str	r0, [sp, #8]
   1113c:	mov	r0, lr
   11140:	ldr	r2, [sp, #8]
   11144:	bl	1098c <fprintf@plt>
   11148:	movw	r1, #1
   1114c:	str	r0, [sp, #4]
   11150:	mov	r0, r1
   11154:	bl	10980 <exit@plt>
   11158:	bl	1095c <coda_done@plt>
   1115c:	movw	r0, #0
   11160:	mov	sp, fp
   11164:	pop	{fp, pc}
   11168:	andeq	r1, r1, ip, lsl #7
   1116c:	muleq	r0, r5, r8
   11170:	andeq	r0, r0, fp, ror #16
   11174:	andeq	r1, r1, r4, lsr #4
   11178:	strdeq	r0, [r0], -r2
   1117c:	andeq	r1, r1, r8, asr #32
   11180:	andeq	r0, r1, ip, lsl #31
   11184:	andeq	r0, r0, fp, ror r5
   11188:	andeq	r0, r1, r4, lsr pc
   1118c:	andeq	r0, r0, r3, lsl r6
   11190:	andeq	r0, r1, ip, asr #31
   11194:	andeq	r0, r0, r2, lsr #13
   11198:	strdeq	r0, [r1], -r8
   1119c:	muleq	r1, ip, r0
   111a0:	andeq	r0, r0, r7, ror #18
   111a4:	andeq	r0, r0, lr, asr #18
   111a8:	andeq	r0, r0, sp, lsr #18
   111ac:	andeq	r0, r0, r4, lsl r9
   111b0:	ldrdeq	r0, [r0], -r2
   111b4:	andeq	r0, r0, r2, lsr #16
   111b8:	andeq	r0, r0, r1, lsl #16
   111bc:	andeq	r0, r0, r7, ror #15
   111c0:	andeq	r0, r0, r6, asr #15
   111c4:	andeq	r0, r0, pc, asr #14
   111c8:	andeq	r0, r0, lr, lsr #14
   111cc:	push	{fp, lr}
   111d0:	mov	fp, sp
   111d4:	sub	sp, sp, #120	; 0x78
   111d8:	ldr	r0, [pc, #688]	; 11490 <main@@Base+0x7cc>
   111dc:	add	r0, pc, r0
   111e0:	bl	10938 <printf@plt>
   111e4:	ldr	lr, [pc, #672]	; 1148c <main@@Base+0x7c8>
   111e8:	add	lr, pc, lr
   111ec:	str	r0, [fp, #-4]
   111f0:	mov	r0, lr
   111f4:	bl	10938 <printf@plt>
   111f8:	ldr	lr, [pc, #648]	; 11488 <main@@Base+0x7c4>
   111fc:	add	lr, pc, lr
   11200:	str	r0, [fp, #-8]
   11204:	mov	r0, lr
   11208:	bl	10938 <printf@plt>
   1120c:	ldr	lr, [pc, #624]	; 11484 <main@@Base+0x7c0>
   11210:	add	lr, pc, lr
   11214:	str	r0, [fp, #-12]
   11218:	mov	r0, lr
   1121c:	bl	10938 <printf@plt>
   11220:	ldr	lr, [pc, #600]	; 11480 <main@@Base+0x7bc>
   11224:	add	lr, pc, lr
   11228:	str	r0, [fp, #-16]
   1122c:	mov	r0, lr
   11230:	bl	10938 <printf@plt>
   11234:	ldr	lr, [pc, #576]	; 1147c <main@@Base+0x7b8>
   11238:	add	lr, pc, lr
   1123c:	str	r0, [fp, #-20]	; 0xffffffec
   11240:	mov	r0, lr
   11244:	bl	10938 <printf@plt>
   11248:	ldr	lr, [pc, #552]	; 11478 <main@@Base+0x7b4>
   1124c:	add	lr, pc, lr
   11250:	str	r0, [fp, #-24]	; 0xffffffe8
   11254:	mov	r0, lr
   11258:	bl	10938 <printf@plt>
   1125c:	ldr	lr, [pc, #528]	; 11474 <main@@Base+0x7b0>
   11260:	add	lr, pc, lr
   11264:	str	r0, [fp, #-28]	; 0xffffffe4
   11268:	mov	r0, lr
   1126c:	bl	10938 <printf@plt>
   11270:	ldr	lr, [pc, #504]	; 11470 <main@@Base+0x7ac>
   11274:	add	lr, pc, lr
   11278:	str	r0, [fp, #-32]	; 0xffffffe0
   1127c:	mov	r0, lr
   11280:	bl	10938 <printf@plt>
   11284:	ldr	lr, [pc, #480]	; 1146c <main@@Base+0x7a8>
   11288:	add	lr, pc, lr
   1128c:	str	r0, [fp, #-36]	; 0xffffffdc
   11290:	mov	r0, lr
   11294:	bl	10938 <printf@plt>
   11298:	ldr	lr, [pc, #456]	; 11468 <main@@Base+0x7a4>
   1129c:	add	lr, pc, lr
   112a0:	str	r0, [fp, #-40]	; 0xffffffd8
   112a4:	mov	r0, lr
   112a8:	bl	10938 <printf@plt>
   112ac:	ldr	lr, [pc, #432]	; 11464 <main@@Base+0x7a0>
   112b0:	add	lr, pc, lr
   112b4:	str	r0, [fp, #-44]	; 0xffffffd4
   112b8:	mov	r0, lr
   112bc:	bl	10938 <printf@plt>
   112c0:	ldr	lr, [pc, #408]	; 11460 <main@@Base+0x79c>
   112c4:	add	lr, pc, lr
   112c8:	str	r0, [fp, #-48]	; 0xffffffd0
   112cc:	mov	r0, lr
   112d0:	bl	10938 <printf@plt>
   112d4:	ldr	lr, [pc, #384]	; 1145c <main@@Base+0x798>
   112d8:	add	lr, pc, lr
   112dc:	str	r0, [fp, #-52]	; 0xffffffcc
   112e0:	mov	r0, lr
   112e4:	bl	10938 <printf@plt>
   112e8:	ldr	lr, [pc, #360]	; 11458 <main@@Base+0x794>
   112ec:	add	lr, pc, lr
   112f0:	str	r0, [fp, #-56]	; 0xffffffc8
   112f4:	mov	r0, lr
   112f8:	bl	10938 <printf@plt>
   112fc:	ldr	lr, [pc, #336]	; 11454 <main@@Base+0x790>
   11300:	add	lr, pc, lr
   11304:	str	r0, [sp, #60]	; 0x3c
   11308:	mov	r0, lr
   1130c:	bl	10938 <printf@plt>
   11310:	ldr	lr, [pc, #312]	; 11450 <main@@Base+0x78c>
   11314:	add	lr, pc, lr
   11318:	str	r0, [sp, #56]	; 0x38
   1131c:	mov	r0, lr
   11320:	bl	10938 <printf@plt>
   11324:	ldr	lr, [pc, #288]	; 1144c <main@@Base+0x788>
   11328:	add	lr, pc, lr
   1132c:	str	r0, [sp, #52]	; 0x34
   11330:	mov	r0, lr
   11334:	bl	10938 <printf@plt>
   11338:	ldr	lr, [pc, #264]	; 11448 <main@@Base+0x784>
   1133c:	add	lr, pc, lr
   11340:	str	r0, [sp, #48]	; 0x30
   11344:	mov	r0, lr
   11348:	bl	10938 <printf@plt>
   1134c:	ldr	lr, [pc, #240]	; 11444 <main@@Base+0x780>
   11350:	add	lr, pc, lr
   11354:	str	r0, [sp, #44]	; 0x2c
   11358:	mov	r0, lr
   1135c:	bl	10938 <printf@plt>
   11360:	ldr	lr, [pc, #216]	; 11440 <main@@Base+0x77c>
   11364:	add	lr, pc, lr
   11368:	str	r0, [sp, #40]	; 0x28
   1136c:	mov	r0, lr
   11370:	bl	10938 <printf@plt>
   11374:	ldr	lr, [pc, #192]	; 1143c <main@@Base+0x778>
   11378:	add	lr, pc, lr
   1137c:	str	r0, [sp, #36]	; 0x24
   11380:	mov	r0, lr
   11384:	bl	10938 <printf@plt>
   11388:	ldr	lr, [pc, #168]	; 11438 <main@@Base+0x774>
   1138c:	add	lr, pc, lr
   11390:	str	r0, [sp, #32]
   11394:	mov	r0, lr
   11398:	bl	10938 <printf@plt>
   1139c:	ldr	lr, [pc, #144]	; 11434 <main@@Base+0x770>
   113a0:	add	lr, pc, lr
   113a4:	str	r0, [sp, #28]
   113a8:	mov	r0, lr
   113ac:	bl	10938 <printf@plt>
   113b0:	ldr	lr, [pc, #120]	; 11430 <main@@Base+0x76c>
   113b4:	add	lr, pc, lr
   113b8:	str	r0, [sp, #24]
   113bc:	mov	r0, lr
   113c0:	bl	10938 <printf@plt>
   113c4:	ldr	lr, [pc, #96]	; 1142c <main@@Base+0x768>
   113c8:	add	lr, pc, lr
   113cc:	str	r0, [sp, #20]
   113d0:	mov	r0, lr
   113d4:	bl	10938 <printf@plt>
   113d8:	ldr	lr, [pc, #72]	; 11428 <main@@Base+0x764>
   113dc:	add	lr, pc, lr
   113e0:	str	r0, [sp, #16]
   113e4:	mov	r0, lr
   113e8:	bl	10938 <printf@plt>
   113ec:	ldr	lr, [pc, #48]	; 11424 <main@@Base+0x760>
   113f0:	add	lr, pc, lr
   113f4:	str	r0, [sp, #12]
   113f8:	mov	r0, lr
   113fc:	bl	10938 <printf@plt>
   11400:	ldr	lr, [pc, #24]	; 11420 <main@@Base+0x75c>
   11404:	add	lr, pc, lr
   11408:	str	r0, [sp, #8]
   1140c:	mov	r0, lr
   11410:	bl	10938 <printf@plt>
   11414:	str	r0, [sp, #4]
   11418:	mov	sp, fp
   1141c:	pop	{fp, pc}
   11420:	andeq	r0, r0, r4, asr #12
   11424:	andeq	r0, r0, r4, lsr #15
   11428:	andeq	r0, r0, r8, ror r7
   1142c:	andeq	r0, r0, r5, asr #14
   11430:	andeq	r0, r0, ip, lsl #14
   11434:	strdeq	r0, [r0], -r4
   11438:			; <UNDEFINED> instruction: 0x000006be
   1143c:	andeq	r0, r0, r3, lsl #13
   11440:	andeq	r0, r0, r4, ror #13
   11444:	andeq	r0, r0, r8, ror r6
   11448:	andeq	r0, r0, r0, ror r6
   1144c:	andeq	r0, r0, r0, lsr #14
   11450:	andeq	r0, r0, r9, ror r6
   11454:	andeq	r0, r0, r4, ror r6
   11458:	andeq	r0, r0, ip, asr r7
   1145c:	andeq	r0, r0, r3, ror #12
   11460:	andeq	r0, r0, ip, asr r6
   11464:	andeq	r0, r0, r3, asr #12
   11468:	andeq	r0, r0, r7, lsl #12
   1146c:	ldrdeq	r0, [r0], -r2
   11470:			; <UNDEFINED> instruction: 0x000005b6
   11474:	andeq	r0, r0, pc, lsl #11
   11478:	andeq	r0, r0, ip, ror r5
   1147c:	andeq	r0, r0, lr, ror r5
   11480:	andeq	r0, r0, r4, lsr #16
   11484:	andeq	r0, r0, lr, lsl #11
   11488:	andeq	r0, r0, r2, asr r5
   1148c:	andeq	r0, r0, r4, lsr #10
   11490:	andeq	r0, r0, r8, lsr #10
   11494:	push	{fp, lr}
   11498:	mov	fp, sp
   1149c:	sub	sp, sp, #16
   114a0:	bl	109bc <coda_get_libcoda_version@plt>
   114a4:	ldr	lr, [pc, #76]	; 114f8 <main@@Base+0x834>
   114a8:	add	lr, pc, lr
   114ac:	str	r0, [fp, #-4]
   114b0:	mov	r0, lr
   114b4:	ldr	r1, [fp, #-4]
   114b8:	bl	10938 <printf@plt>
   114bc:	ldr	r1, [pc, #48]	; 114f4 <main@@Base+0x830>
   114c0:	add	r1, pc, r1
   114c4:	str	r0, [sp, #8]
   114c8:	mov	r0, r1
   114cc:	bl	10938 <printf@plt>
   114d0:	ldr	r1, [pc, #24]	; 114f0 <main@@Base+0x82c>
   114d4:	add	r1, pc, r1
   114d8:	str	r0, [sp, #4]
   114dc:	mov	r0, r1
   114e0:	bl	10938 <printf@plt>
   114e4:	str	r0, [sp]
   114e8:	mov	sp, fp
   114ec:	pop	{fp, pc}
   114f0:	andeq	r0, r0, r4, ror r5
   114f4:	andeq	r0, r0, r2, lsr #14
   114f8:	andeq	r0, r0, sp, lsr #14

000114fc <__libc_csu_init@@Base>:
   114fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11500:	mov	r7, r0
   11504:	ldr	r6, [pc, #72]	; 11554 <__libc_csu_init@@Base+0x58>
   11508:	ldr	r5, [pc, #72]	; 11558 <__libc_csu_init@@Base+0x5c>
   1150c:	add	r6, pc, r6
   11510:	add	r5, pc, r5
   11514:	sub	r6, r6, r5
   11518:	mov	r8, r1
   1151c:	mov	r9, r2
   11520:	bl	10900 <coda_match_filefilter@plt-0x20>
   11524:	asrs	r6, r6, #2
   11528:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1152c:	mov	r4, #0
   11530:	add	r4, r4, #1
   11534:	ldr	r3, [r5], #4
   11538:	mov	r2, r9
   1153c:	mov	r1, r8
   11540:	mov	r0, r7
   11544:	blx	r3
   11548:	cmp	r6, r4
   1154c:	bne	11530 <__libc_csu_init@@Base+0x34>
   11550:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11554:	andeq	r0, r1, r0, ror #19
   11558:	ldrdeq	r0, [r1], -r8

0001155c <__libc_csu_fini@@Base>:
   1155c:	bx	lr

Disassembly of section .fini:

00011560 <.fini>:
   11560:	push	{r3, lr}
   11564:	pop	{r3, pc}
