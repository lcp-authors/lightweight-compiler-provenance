
../repos/dvidelabs-flatcc-3b39ef7/test/flatc_compat/flatc_compat:     file format elf32-littlearm


Disassembly of section .init:

00010db0 <.init>:
   10db0:	push	{r3, lr}
   10db4:	bl	10ef4 <_start@@Base+0x3c>
   10db8:	pop	{r3, pc}

Disassembly of section .plt:

00010dbc <strcmp@plt-0x14>:
   10dbc:	push	{lr}		; (str lr, [sp, #-4]!)
   10dc0:	ldr	lr, [pc, #4]	; 10dcc <strcmp@plt-0x4>
   10dc4:	add	lr, pc, lr
   10dc8:	ldr	pc, [lr, #8]!
   10dcc:	andeq	r8, r1, r4, lsr r2

00010dd0 <strcmp@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #24, 20	; 0x18000
   10dd8:	ldr	pc, [ip, #564]!	; 0x234

00010ddc <printf@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #24, 20	; 0x18000
   10de4:	ldr	pc, [ip, #556]!	; 0x22c

00010de8 <fopen@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #24, 20	; 0x18000
   10df0:	ldr	pc, [ip, #548]!	; 0x224

00010df4 <free@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #24, 20	; 0x18000
   10dfc:	ldr	pc, [ip, #540]!	; 0x21c

00010e00 <memcpy@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #24, 20	; 0x18000
   10e08:	ldr	pc, [ip, #532]!	; 0x214

00010e0c <ftell@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #24, 20	; 0x18000
   10e14:	ldr	pc, [ip, #524]!	; 0x20c

00010e18 <rewind@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #24, 20	; 0x18000
   10e20:	ldr	pc, [ip, #516]!	; 0x204

00010e24 <fread@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #24, 20	; 0x18000
   10e2c:	ldr	pc, [ip, #508]!	; 0x1fc

00010e30 <malloc@plt>:
   10e30:	add	ip, pc, #0, 12
   10e34:	add	ip, ip, #24, 20	; 0x18000
   10e38:	ldr	pc, [ip, #500]!	; 0x1f4

00010e3c <__libc_start_main@plt>:
   10e3c:	add	ip, pc, #0, 12
   10e40:	add	ip, ip, #24, 20	; 0x18000
   10e44:	ldr	pc, [ip, #492]!	; 0x1ec

00010e48 <__gmon_start__@plt>:
   10e48:	add	ip, pc, #0, 12
   10e4c:	add	ip, ip, #24, 20	; 0x18000
   10e50:	ldr	pc, [ip, #484]!	; 0x1e4

00010e54 <exit@plt>:
   10e54:	add	ip, pc, #0, 12
   10e58:	add	ip, ip, #24, 20	; 0x18000
   10e5c:	ldr	pc, [ip, #476]!	; 0x1dc

00010e60 <fprintf@plt>:
   10e60:	add	ip, pc, #0, 12
   10e64:	add	ip, ip, #24, 20	; 0x18000
   10e68:	ldr	pc, [ip, #468]!	; 0x1d4

00010e6c <posix_memalign@plt>:
   10e6c:	add	ip, pc, #0, 12
   10e70:	add	ip, ip, #24, 20	; 0x18000
   10e74:	ldr	pc, [ip, #460]!	; 0x1cc

00010e78 <strncpy@plt>:
   10e78:	add	ip, pc, #0, 12
   10e7c:	add	ip, ip, #24, 20	; 0x18000
   10e80:	ldr	pc, [ip, #452]!	; 0x1c4

00010e84 <fclose@plt>:
   10e84:	add	ip, pc, #0, 12
   10e88:	add	ip, ip, #24, 20	; 0x18000
   10e8c:	ldr	pc, [ip, #444]!	; 0x1bc

00010e90 <fseek@plt>:
   10e90:	add	ip, pc, #0, 12
   10e94:	add	ip, ip, #24, 20	; 0x18000
   10e98:	ldr	pc, [ip, #436]!	; 0x1b4

00010e9c <abort@plt>:
   10e9c:	add	ip, pc, #0, 12
   10ea0:	add	ip, ip, #24, 20	; 0x18000
   10ea4:	ldr	pc, [ip, #428]!	; 0x1ac

00010ea8 <__assert_fail@plt>:
   10ea8:	add	ip, pc, #0, 12
   10eac:	add	ip, ip, #24, 20	; 0x18000
   10eb0:	ldr	pc, [ip, #420]!	; 0x1a4

Disassembly of section .text:

00010eb8 <_start@@Base>:
   10eb8:	mov	fp, #0
   10ebc:	mov	lr, #0
   10ec0:	pop	{r1}		; (ldr r1, [sp], #4)
   10ec4:	mov	r2, sp
   10ec8:	push	{r2}		; (str r2, [sp, #-4]!)
   10ecc:	push	{r0}		; (str r0, [sp, #-4]!)
   10ed0:	ldr	ip, [pc, #16]	; 10ee8 <_start@@Base+0x30>
   10ed4:	push	{ip}		; (str ip, [sp, #-4]!)
   10ed8:	ldr	r0, [pc, #12]	; 10eec <_start@@Base+0x34>
   10edc:	ldr	r3, [pc, #12]	; 10ef0 <_start@@Base+0x38>
   10ee0:	bl	10e3c <__libc_start_main@plt>
   10ee4:	bl	10e9c <abort@plt>
   10ee8:	muleq	r1, ip, r7
   10eec:	andeq	r2, r1, r4, asr #27
   10ef0:	andeq	r7, r1, ip, lsr r7
   10ef4:	ldr	r3, [pc, #20]	; 10f10 <_start@@Base+0x58>
   10ef8:	ldr	r2, [pc, #20]	; 10f14 <_start@@Base+0x5c>
   10efc:	add	r3, pc, r3
   10f00:	ldr	r2, [r3, r2]
   10f04:	cmp	r2, #0
   10f08:	bxeq	lr
   10f0c:	b	10e48 <__gmon_start__@plt>
   10f10:	strdeq	r8, [r1], -ip
   10f14:	andeq	r0, r0, ip, asr r0
   10f18:	ldr	r0, [pc, #24]	; 10f38 <_start@@Base+0x80>
   10f1c:	ldr	r3, [pc, #24]	; 10f3c <_start@@Base+0x84>
   10f20:	cmp	r3, r0
   10f24:	bxeq	lr
   10f28:	ldr	r3, [pc, #16]	; 10f40 <_start@@Base+0x88>
   10f2c:	cmp	r3, #0
   10f30:	bxeq	lr
   10f34:	bx	r3
   10f38:	andeq	r9, r2, r0, ror r0
   10f3c:	andeq	r9, r2, r0, ror r0
   10f40:	andeq	r0, r0, r0
   10f44:	ldr	r0, [pc, #36]	; 10f70 <_start@@Base+0xb8>
   10f48:	ldr	r1, [pc, #36]	; 10f74 <_start@@Base+0xbc>
   10f4c:	sub	r1, r1, r0
   10f50:	asr	r1, r1, #2
   10f54:	add	r1, r1, r1, lsr #31
   10f58:	asrs	r1, r1, #1
   10f5c:	bxeq	lr
   10f60:	ldr	r3, [pc, #16]	; 10f78 <_start@@Base+0xc0>
   10f64:	cmp	r3, #0
   10f68:	bxeq	lr
   10f6c:	bx	r3
   10f70:	andeq	r9, r2, r0, ror r0
   10f74:	andeq	r9, r2, r0, ror r0
   10f78:	andeq	r0, r0, r0
   10f7c:	push	{r4, lr}
   10f80:	ldr	r4, [pc, #24]	; 10fa0 <_start@@Base+0xe8>
   10f84:	ldrb	r3, [r4]
   10f88:	cmp	r3, #0
   10f8c:	popne	{r4, pc}
   10f90:	bl	10f18 <_start@@Base+0x60>
   10f94:	mov	r3, #1
   10f98:	strb	r3, [r4]
   10f9c:	pop	{r4, pc}
   10fa0:	andeq	r9, r2, r0, ror r0
   10fa4:	b	10f44 <_start@@Base+0x8c>

00010fa8 <verify_monster@@Base>:
   10fa8:	push	{fp, lr}
   10fac:	mov	fp, sp
   10fb0:	sub	sp, sp, #56	; 0x38
   10fb4:	str	r0, [fp, #-8]
   10fb8:	ldr	r0, [fp, #-8]
   10fbc:	bl	11864 <verify_monster@@Base+0x8bc>
   10fc0:	str	r0, [fp, #-12]
   10fc4:	movw	r1, #0
   10fc8:	cmp	r0, r1
   10fcc:	bne	10fe8 <verify_monster@@Base+0x40>
   10fd0:	ldr	r0, [pc, #1964]	; 11784 <verify_monster@@Base+0x7dc>
   10fd4:	add	r0, pc, r0
   10fd8:	bl	10ddc <printf@plt>
   10fdc:	mvn	r1, #0
   10fe0:	str	r1, [fp, #-4]
   10fe4:	b	11778 <verify_monster@@Base+0x7d0>
   10fe8:	ldr	r0, [fp, #-12]
   10fec:	bl	118e0 <verify_monster@@Base+0x938>
   10ff0:	sxth	r0, r0
   10ff4:	cmp	r0, #80	; 0x50
   10ff8:	beq	11014 <verify_monster@@Base+0x6c>
   10ffc:	ldr	r0, [pc, #2124]	; 11850 <verify_monster@@Base+0x8a8>
   11000:	add	r0, pc, r0
   11004:	bl	10ddc <printf@plt>
   11008:	mvn	r1, #0
   1100c:	str	r1, [fp, #-4]
   11010:	b	11778 <verify_monster@@Base+0x7d0>
   11014:	ldr	r0, [fp, #-12]
   11018:	bl	119d4 <verify_monster@@Base+0xa2c>
   1101c:	str	r0, [fp, #-20]	; 0xffffffec
   11020:	movw	r1, #0
   11024:	cmp	r0, r1
   11028:	bne	11044 <verify_monster@@Base+0x9c>
   1102c:	ldr	r0, [pc, #1876]	; 11788 <verify_monster@@Base+0x7e0>
   11030:	add	r0, pc, r0
   11034:	bl	10ddc <printf@plt>
   11038:	mvn	r1, #0
   1103c:	str	r1, [fp, #-4]
   11040:	b	11778 <verify_monster@@Base+0x7d0>
   11044:	ldr	r0, [fp, #-20]	; 0xffffffec
   11048:	ldr	r1, [fp, #-8]
   1104c:	sub	r0, r0, r1
   11050:	str	r0, [sp, #16]
   11054:	ldr	r0, [sp, #16]
   11058:	and	r0, r0, #15
   1105c:	cmp	r0, #0
   11060:	beq	1107c <verify_monster@@Base+0xd4>
   11064:	ldr	r0, [pc, #2016]	; 1184c <verify_monster@@Base+0x8a4>
   11068:	add	r0, pc, r0
   1106c:	bl	10ddc <printf@plt>
   11070:	mvn	r1, #0
   11074:	str	r1, [fp, #-4]
   11078:	b	11778 <verify_monster@@Base+0x7d0>
   1107c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11080:	bl	11ab8 <verify_monster@@Base+0xb10>
   11084:	vmov.f32	s2, #112	; 0x3f800000  1.0
   11088:	vcmp.f32	s0, s2
   1108c:	vmrs	APSR_nzcv, fpscr
   11090:	beq	110ac <verify_monster@@Base+0x104>
   11094:	ldr	r0, [pc, #1964]	; 11848 <verify_monster@@Base+0x8a0>
   11098:	add	r0, pc, r0
   1109c:	bl	10ddc <printf@plt>
   110a0:	mvn	r1, #0
   110a4:	str	r1, [fp, #-4]
   110a8:	b	11778 <verify_monster@@Base+0x7d0>
   110ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   110b0:	bl	11b04 <verify_monster@@Base+0xb5c>
   110b4:	vmov.f32	s2, #0	; 0x40000000  2.0
   110b8:	vcmp.f32	s0, s2
   110bc:	vmrs	APSR_nzcv, fpscr
   110c0:	beq	110dc <verify_monster@@Base+0x134>
   110c4:	ldr	r0, [pc, #1912]	; 11844 <verify_monster@@Base+0x89c>
   110c8:	add	r0, pc, r0
   110cc:	bl	10ddc <printf@plt>
   110d0:	mvn	r1, #0
   110d4:	str	r1, [fp, #-4]
   110d8:	b	11778 <verify_monster@@Base+0x7d0>
   110dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   110e0:	bl	11b54 <verify_monster@@Base+0xbac>
   110e4:	vmov.f32	s2, #8	; 0x40400000  3.0
   110e8:	vcmp.f32	s0, s2
   110ec:	vmrs	APSR_nzcv, fpscr
   110f0:	beq	1110c <verify_monster@@Base+0x164>
   110f4:	ldr	r0, [pc, #1860]	; 11840 <verify_monster@@Base+0x898>
   110f8:	add	r0, pc, r0
   110fc:	bl	10ddc <printf@plt>
   11100:	mvn	r1, #0
   11104:	str	r1, [fp, #-4]
   11108:	b	11778 <verify_monster@@Base+0x7d0>
   1110c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11110:	bl	11ba8 <verify_monster@@Base+0xc00>
   11114:	vmov.f64	d16, #8	; 0x40400000  3.0
   11118:	vcmp.f64	d0, d16
   1111c:	vmrs	APSR_nzcv, fpscr
   11120:	beq	1113c <verify_monster@@Base+0x194>
   11124:	ldr	r0, [pc, #1808]	; 1183c <verify_monster@@Base+0x894>
   11128:	add	r0, pc, r0
   1112c:	bl	10ddc <printf@plt>
   11130:	mvn	r1, #0
   11134:	str	r1, [fp, #-4]
   11138:	b	11778 <verify_monster@@Base+0x7d0>
   1113c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11140:	bl	11c00 <verify_monster@@Base+0xc58>
   11144:	sxtb	r0, r0
   11148:	cmp	r0, #2
   1114c:	beq	11168 <verify_monster@@Base+0x1c0>
   11150:	ldr	r0, [pc, #1760]	; 11838 <verify_monster@@Base+0x890>
   11154:	add	r0, pc, r0
   11158:	bl	10ddc <printf@plt>
   1115c:	mvn	r1, #0
   11160:	str	r1, [fp, #-4]
   11164:	b	11778 <verify_monster@@Base+0x7d0>
   11168:	ldr	r0, [fp, #-20]	; 0xffffffec
   1116c:	bl	11c54 <verify_monster@@Base+0xcac>
   11170:	str	r0, [fp, #-24]	; 0xffffffe8
   11174:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11178:	bl	11c94 <verify_monster@@Base+0xcec>
   1117c:	sxth	r0, r0
   11180:	cmp	r0, #5
   11184:	bne	1119c <verify_monster@@Base+0x1f4>
   11188:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1118c:	bl	11ce4 <verify_monster@@Base+0xd3c>
   11190:	sxtb	r0, r0
   11194:	cmp	r0, #6
   11198:	beq	111b4 <verify_monster@@Base+0x20c>
   1119c:	ldr	r0, [pc, #1680]	; 11834 <verify_monster@@Base+0x88c>
   111a0:	add	r0, pc, r0
   111a4:	bl	10ddc <printf@plt>
   111a8:	mvn	r1, #0
   111ac:	str	r1, [fp, #-4]
   111b0:	b	11778 <verify_monster@@Base+0x7d0>
   111b4:	ldr	r0, [fp, #-12]
   111b8:	bl	11d38 <verify_monster@@Base+0xd90>
   111bc:	str	r0, [sp, #20]
   111c0:	ldr	r0, [sp, #20]
   111c4:	bl	11e58 <verify_monster@@Base+0xeb0>
   111c8:	cmp	r0, #9
   111cc:	beq	111e8 <verify_monster@@Base+0x240>
   111d0:	ldr	r0, [pc, #1624]	; 11830 <verify_monster@@Base+0x888>
   111d4:	add	r0, pc, r0
   111d8:	bl	10ddc <printf@plt>
   111dc:	mvn	r1, #0
   111e0:	str	r1, [fp, #-4]
   111e4:	b	11778 <verify_monster@@Base+0x7d0>
   111e8:	ldr	r0, [sp, #20]
   111ec:	movw	r1, #0
   111f0:	cmp	r0, r1
   111f4:	beq	11210 <verify_monster@@Base+0x268>
   111f8:	ldr	r0, [sp, #20]
   111fc:	ldr	r1, [pc, #1616]	; 11854 <verify_monster@@Base+0x8ac>
   11200:	add	r1, pc, r1
   11204:	bl	10dd0 <strcmp@plt>
   11208:	cmp	r0, #0
   1120c:	beq	11228 <verify_monster@@Base+0x280>
   11210:	ldr	r0, [pc, #1556]	; 1182c <verify_monster@@Base+0x884>
   11214:	add	r0, pc, r0
   11218:	bl	10ddc <printf@plt>
   1121c:	mvn	r1, #0
   11220:	str	r1, [fp, #-4]
   11224:	b	11778 <verify_monster@@Base+0x7d0>
   11228:	ldr	r0, [fp, #-12]
   1122c:	bl	11ea8 <verify_monster@@Base+0xf00>
   11230:	str	r0, [sp, #12]
   11234:	ldr	r0, [sp, #12]
   11238:	bl	11fb0 <verify_monster@@Base+0x1008>
   1123c:	cmp	r0, #5
   11240:	beq	1125c <verify_monster@@Base+0x2b4>
   11244:	ldr	r0, [pc, #1500]	; 11828 <verify_monster@@Base+0x880>
   11248:	add	r0, pc, r0
   1124c:	bl	10ddc <printf@plt>
   11250:	mvn	r1, #0
   11254:	str	r1, [fp, #-4]
   11258:	b	11778 <verify_monster@@Base+0x7d0>
   1125c:	movw	r0, #0
   11260:	str	r0, [sp]
   11264:	ldr	r0, [sp]
   11268:	cmp	r0, #5
   1126c:	bge	112bc <verify_monster@@Base+0x314>
   11270:	ldr	r0, [sp, #12]
   11274:	ldr	r1, [sp]
   11278:	bl	11fd0 <verify_monster@@Base+0x1028>
   1127c:	and	r0, r0, #255	; 0xff
   11280:	ldr	r1, [sp]
   11284:	cmp	r0, r1
   11288:	beq	112a8 <verify_monster@@Base+0x300>
   1128c:	ldr	r0, [pc, #1424]	; 11824 <verify_monster@@Base+0x87c>
   11290:	add	r0, pc, r0
   11294:	ldr	r1, [sp]
   11298:	bl	10ddc <printf@plt>
   1129c:	mvn	r1, #0
   112a0:	str	r1, [fp, #-4]
   112a4:	b	11778 <verify_monster@@Base+0x7d0>
   112a8:	b	112ac <verify_monster@@Base+0x304>
   112ac:	ldr	r0, [sp]
   112b0:	add	r0, r0, #1
   112b4:	str	r0, [sp]
   112b8:	b	11264 <verify_monster@@Base+0x2bc>
   112bc:	ldr	r0, [fp, #-12]
   112c0:	bl	12048 <verify_monster@@Base+0x10a0>
   112c4:	str	r0, [sp, #8]
   112c8:	movw	r1, #0
   112cc:	cmp	r0, r1
   112d0:	bne	112ec <verify_monster@@Base+0x344>
   112d4:	ldr	r0, [pc, #1200]	; 1178c <verify_monster@@Base+0x7e4>
   112d8:	add	r0, pc, r0
   112dc:	bl	10ddc <printf@plt>
   112e0:	mvn	r1, #0
   112e4:	str	r1, [fp, #-4]
   112e8:	b	11778 <verify_monster@@Base+0x7d0>
   112ec:	ldr	r0, [sp, #8]
   112f0:	bl	12150 <verify_monster@@Base+0x11a8>
   112f4:	cmp	r0, #2
   112f8:	beq	11314 <verify_monster@@Base+0x36c>
   112fc:	ldr	r0, [pc, #1308]	; 11820 <verify_monster@@Base+0x878>
   11300:	add	r0, pc, r0
   11304:	bl	10ddc <printf@plt>
   11308:	mvn	r1, #0
   1130c:	str	r1, [fp, #-4]
   11310:	b	11778 <verify_monster@@Base+0x7d0>
   11314:	ldr	r0, [sp, #8]
   11318:	movw	r1, #0
   1131c:	bl	121a0 <verify_monster@@Base+0x11f8>
   11320:	str	r0, [sp, #4]
   11324:	ldr	r0, [sp, #4]
   11328:	ldr	r1, [pc, #1320]	; 11858 <verify_monster@@Base+0x8b0>
   1132c:	add	r1, pc, r1
   11330:	bl	10dd0 <strcmp@plt>
   11334:	cmp	r0, #0
   11338:	beq	11354 <verify_monster@@Base+0x3ac>
   1133c:	ldr	r0, [pc, #1240]	; 1181c <verify_monster@@Base+0x874>
   11340:	add	r0, pc, r0
   11344:	bl	10ddc <printf@plt>
   11348:	mvn	r1, #0
   1134c:	str	r1, [fp, #-4]
   11350:	b	11778 <verify_monster@@Base+0x7d0>
   11354:	ldr	r0, [sp, #8]
   11358:	movw	r1, #1
   1135c:	bl	121a0 <verify_monster@@Base+0x11f8>
   11360:	str	r0, [sp, #4]
   11364:	ldr	r0, [sp, #4]
   11368:	ldr	r1, [pc, #1260]	; 1185c <verify_monster@@Base+0x8b4>
   1136c:	add	r1, pc, r1
   11370:	bl	10dd0 <strcmp@plt>
   11374:	cmp	r0, #0
   11378:	beq	11394 <verify_monster@@Base+0x3ec>
   1137c:	ldr	r0, [pc, #1172]	; 11818 <verify_monster@@Base+0x870>
   11380:	add	r0, pc, r0
   11384:	bl	10ddc <printf@plt>
   11388:	mvn	r1, #0
   1138c:	str	r1, [fp, #-4]
   11390:	b	11778 <verify_monster@@Base+0x7d0>
   11394:	ldr	r0, [fp, #-12]
   11398:	bl	12234 <verify_monster@@Base+0x128c>
   1139c:	strb	r0, [sp, #27]
   113a0:	ldrb	r0, [sp, #27]
   113a4:	cmp	r0, #1
   113a8:	beq	113c4 <verify_monster@@Base+0x41c>
   113ac:	ldr	r0, [pc, #1120]	; 11814 <verify_monster@@Base+0x86c>
   113b0:	add	r0, pc, r0
   113b4:	bl	10ddc <printf@plt>
   113b8:	mvn	r1, #0
   113bc:	str	r1, [fp, #-4]
   113c0:	b	11778 <verify_monster@@Base+0x7d0>
   113c4:	ldr	r0, [fp, #-12]
   113c8:	bl	12328 <verify_monster@@Base+0x1380>
   113cc:	str	r0, [fp, #-16]
   113d0:	ldr	r0, [fp, #-16]
   113d4:	movw	r1, #0
   113d8:	cmp	r0, r1
   113dc:	bne	113f8 <verify_monster@@Base+0x450>
   113e0:	ldr	r0, [pc, #936]	; 11790 <verify_monster@@Base+0x7e8>
   113e4:	add	r0, pc, r0
   113e8:	bl	10ddc <printf@plt>
   113ec:	mvn	r1, #0
   113f0:	str	r1, [fp, #-4]
   113f4:	b	11778 <verify_monster@@Base+0x7d0>
   113f8:	ldr	r0, [fp, #-16]
   113fc:	bl	11d38 <verify_monster@@Base+0xd90>
   11400:	ldr	r1, [pc, #1112]	; 11860 <verify_monster@@Base+0x8b8>
   11404:	add	r1, pc, r1
   11408:	bl	10dd0 <strcmp@plt>
   1140c:	cmp	r0, #0
   11410:	beq	1142c <verify_monster@@Base+0x484>
   11414:	ldr	r0, [pc, #1012]	; 11810 <verify_monster@@Base+0x868>
   11418:	add	r0, pc, r0
   1141c:	bl	10ddc <printf@plt>
   11420:	mvn	r1, #0
   11424:	str	r1, [fp, #-4]
   11428:	b	11778 <verify_monster@@Base+0x7d0>
   1142c:	ldr	r0, [fp, #-12]
   11430:	bl	1242c <verify_monster@@Base+0x1484>
   11434:	str	r0, [sp, #28]
   11438:	ldr	r0, [sp, #28]
   1143c:	bl	12534 <verify_monster@@Base+0x158c>
   11440:	cmp	r0, #2
   11444:	beq	11460 <verify_monster@@Base+0x4b8>
   11448:	ldr	r0, [pc, #956]	; 1180c <verify_monster@@Base+0x864>
   1144c:	add	r0, pc, r0
   11450:	bl	10ddc <printf@plt>
   11454:	mvn	r1, #0
   11458:	str	r1, [fp, #-4]
   1145c:	b	11778 <verify_monster@@Base+0x7d0>
   11460:	ldr	r0, [sp, #28]
   11464:	movw	r1, #0
   11468:	bl	12584 <verify_monster@@Base+0x15dc>
   1146c:	str	r0, [fp, #-24]	; 0xffffffe8
   11470:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11474:	bl	11c94 <verify_monster@@Base+0xcec>
   11478:	sxth	r0, r0
   1147c:	cmp	r0, #10
   11480:	beq	1149c <verify_monster@@Base+0x4f4>
   11484:	ldr	r0, [pc, #892]	; 11808 <verify_monster@@Base+0x860>
   11488:	add	r0, pc, r0
   1148c:	bl	10ddc <printf@plt>
   11490:	mvn	r1, #0
   11494:	str	r1, [fp, #-4]
   11498:	b	11778 <verify_monster@@Base+0x7d0>
   1149c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   114a0:	bl	11ce4 <verify_monster@@Base+0xd3c>
   114a4:	sxtb	r0, r0
   114a8:	cmp	r0, #20
   114ac:	beq	114c8 <verify_monster@@Base+0x520>
   114b0:	ldr	r0, [pc, #844]	; 11804 <verify_monster@@Base+0x85c>
   114b4:	add	r0, pc, r0
   114b8:	bl	10ddc <printf@plt>
   114bc:	mvn	r1, #0
   114c0:	str	r1, [fp, #-4]
   114c4:	b	11778 <verify_monster@@Base+0x7d0>
   114c8:	ldr	r0, [sp, #28]
   114cc:	movw	r1, #1
   114d0:	bl	12584 <verify_monster@@Base+0x15dc>
   114d4:	str	r0, [fp, #-24]	; 0xffffffe8
   114d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   114dc:	bl	11c94 <verify_monster@@Base+0xcec>
   114e0:	sxth	r0, r0
   114e4:	cmp	r0, #30
   114e8:	beq	11504 <verify_monster@@Base+0x55c>
   114ec:	ldr	r0, [pc, #780]	; 11800 <verify_monster@@Base+0x858>
   114f0:	add	r0, pc, r0
   114f4:	bl	10ddc <printf@plt>
   114f8:	mvn	r1, #0
   114fc:	str	r1, [fp, #-4]
   11500:	b	11778 <verify_monster@@Base+0x7d0>
   11504:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11508:	bl	11ce4 <verify_monster@@Base+0xd3c>
   1150c:	sxtb	r0, r0
   11510:	cmp	r0, #40	; 0x28
   11514:	beq	11530 <verify_monster@@Base+0x588>
   11518:	ldr	r0, [pc, #732]	; 117fc <verify_monster@@Base+0x854>
   1151c:	add	r0, pc, r0
   11520:	bl	10ddc <printf@plt>
   11524:	mvn	r1, #0
   11528:	str	r1, [fp, #-4]
   1152c:	b	11778 <verify_monster@@Base+0x7d0>
   11530:	ldr	r0, [fp, #-12]
   11534:	bl	125f4 <verify_monster@@Base+0x164c>
   11538:	ldr	r1, [pc, #596]	; 11794 <verify_monster@@Base+0x7ec>
   1153c:	cmp	r0, r1
   11540:	bne	11548 <verify_monster@@Base+0x5a0>
   11544:	b	11568 <verify_monster@@Base+0x5c0>
   11548:	ldr	r0, [pc, #584]	; 11798 <verify_monster@@Base+0x7f0>
   1154c:	add	r0, pc, r0
   11550:	ldr	r1, [pc, #580]	; 1179c <verify_monster@@Base+0x7f4>
   11554:	add	r1, pc, r1
   11558:	ldr	r2, [pc, #576]	; 117a0 <verify_monster@@Base+0x7f8>
   1155c:	add	r3, pc, r2
   11560:	movw	r2, #148	; 0x94
   11564:	bl	10ea8 <__assert_fail@plt>
   11568:	ldr	r0, [fp, #-12]
   1156c:	bl	126e0 <verify_monster@@Base+0x1738>
   11570:	movw	r1, #51521	; 0xc941
   11574:	movt	r1, #56697	; 0xdd79
   11578:	cmp	r0, r1
   1157c:	bne	11588 <verify_monster@@Base+0x5e0>
   11580:	b	11584 <verify_monster@@Base+0x5dc>
   11584:	b	115a8 <verify_monster@@Base+0x600>
   11588:	ldr	r0, [pc, #532]	; 117a4 <verify_monster@@Base+0x7fc>
   1158c:	add	r0, pc, r0
   11590:	ldr	r1, [pc, #528]	; 117a8 <verify_monster@@Base+0x800>
   11594:	add	r1, pc, r1
   11598:	ldr	r2, [pc, #524]	; 117ac <verify_monster@@Base+0x804>
   1159c:	add	r3, pc, r2
   115a0:	movw	r2, #149	; 0x95
   115a4:	bl	10ea8 <__assert_fail@plt>
   115a8:	ldr	r0, [fp, #-12]
   115ac:	bl	127cc <verify_monster@@Base+0x1824>
   115b0:	movw	r2, #32973	; 0x80cd
   115b4:	movt	r2, #28175	; 0x6e0f
   115b8:	eor	r1, r1, r2
   115bc:	movw	r2, #37249	; 0x9181
   115c0:	movt	r2, #62075	; 0xf27b
   115c4:	eor	r0, r0, r2
   115c8:	orr	r0, r0, r1
   115cc:	cmp	r0, #0
   115d0:	bne	115dc <verify_monster@@Base+0x634>
   115d4:	b	115d8 <verify_monster@@Base+0x630>
   115d8:	b	115fc <verify_monster@@Base+0x654>
   115dc:	ldr	r0, [pc, #460]	; 117b0 <verify_monster@@Base+0x808>
   115e0:	add	r0, pc, r0
   115e4:	ldr	r1, [pc, #456]	; 117b4 <verify_monster@@Base+0x80c>
   115e8:	add	r1, pc, r1
   115ec:	ldr	r2, [pc, #452]	; 117b8 <verify_monster@@Base+0x810>
   115f0:	add	r3, pc, r2
   115f4:	movw	r2, #150	; 0x96
   115f8:	bl	10ea8 <__assert_fail@plt>
   115fc:	ldr	r0, [fp, #-12]
   11600:	bl	128d4 <verify_monster@@Base+0x192c>
   11604:	movw	r2, #32973	; 0x80cd
   11608:	movt	r2, #28175	; 0x6e0f
   1160c:	eor	r1, r1, r2
   11610:	movw	r2, #37249	; 0x9181
   11614:	movt	r2, #62075	; 0xf27b
   11618:	eor	r0, r0, r2
   1161c:	orr	r0, r0, r1
   11620:	cmp	r0, #0
   11624:	bne	11630 <verify_monster@@Base+0x688>
   11628:	b	1162c <verify_monster@@Base+0x684>
   1162c:	b	11650 <verify_monster@@Base+0x6a8>
   11630:	ldr	r0, [pc, #388]	; 117bc <verify_monster@@Base+0x814>
   11634:	add	r0, pc, r0
   11638:	ldr	r1, [pc, #384]	; 117c0 <verify_monster@@Base+0x818>
   1163c:	add	r1, pc, r1
   11640:	ldr	r2, [pc, #380]	; 117c4 <verify_monster@@Base+0x81c>
   11644:	add	r3, pc, r2
   11648:	movw	r2, #151	; 0x97
   1164c:	bl	10ea8 <__assert_fail@plt>
   11650:	ldr	r0, [fp, #-12]
   11654:	bl	129dc <verify_monster@@Base+0x1a34>
   11658:	ldr	r1, [pc, #360]	; 117c8 <verify_monster@@Base+0x820>
   1165c:	cmp	r0, r1
   11660:	bne	11668 <verify_monster@@Base+0x6c0>
   11664:	b	11688 <verify_monster@@Base+0x6e0>
   11668:	ldr	r0, [pc, #348]	; 117cc <verify_monster@@Base+0x824>
   1166c:	add	r0, pc, r0
   11670:	ldr	r1, [pc, #344]	; 117d0 <verify_monster@@Base+0x828>
   11674:	add	r1, pc, r1
   11678:	ldr	r2, [pc, #340]	; 117d4 <verify_monster@@Base+0x82c>
   1167c:	add	r3, pc, r2
   11680:	movw	r2, #152	; 0x98
   11684:	bl	10ea8 <__assert_fail@plt>
   11688:	ldr	r0, [fp, #-12]
   1168c:	bl	12ac8 <verify_monster@@Base+0x1b20>
   11690:	movw	r1, #42097	; 0xa471
   11694:	movt	r1, #36481	; 0x8e81
   11698:	cmp	r0, r1
   1169c:	bne	116a8 <verify_monster@@Base+0x700>
   116a0:	b	116a4 <verify_monster@@Base+0x6fc>
   116a4:	b	116c8 <verify_monster@@Base+0x720>
   116a8:	ldr	r0, [pc, #296]	; 117d8 <verify_monster@@Base+0x830>
   116ac:	add	r0, pc, r0
   116b0:	ldr	r1, [pc, #292]	; 117dc <verify_monster@@Base+0x834>
   116b4:	add	r1, pc, r1
   116b8:	ldr	r2, [pc, #288]	; 117e0 <verify_monster@@Base+0x838>
   116bc:	add	r3, pc, r2
   116c0:	movw	r2, #153	; 0x99
   116c4:	bl	10ea8 <__assert_fail@plt>
   116c8:	ldr	r0, [fp, #-12]
   116cc:	bl	12bb4 <verify_monster@@Base+0x1c0c>
   116d0:	movw	r2, #18652	; 0x48dc
   116d4:	movt	r2, #17401	; 0x43f9
   116d8:	eor	r1, r1, r2
   116dc:	movw	r2, #56817	; 0xddf1
   116e0:	movt	r2, #51047	; 0xc767
   116e4:	eor	r0, r0, r2
   116e8:	orr	r0, r0, r1
   116ec:	cmp	r0, #0
   116f0:	bne	116fc <verify_monster@@Base+0x754>
   116f4:	b	116f8 <verify_monster@@Base+0x750>
   116f8:	b	1171c <verify_monster@@Base+0x774>
   116fc:	ldr	r0, [pc, #224]	; 117e4 <verify_monster@@Base+0x83c>
   11700:	add	r0, pc, r0
   11704:	ldr	r1, [pc, #220]	; 117e8 <verify_monster@@Base+0x840>
   11708:	add	r1, pc, r1
   1170c:	ldr	r2, [pc, #216]	; 117ec <verify_monster@@Base+0x844>
   11710:	add	r3, pc, r2
   11714:	movw	r2, #154	; 0x9a
   11718:	bl	10ea8 <__assert_fail@plt>
   1171c:	ldr	r0, [fp, #-12]
   11720:	bl	12cbc <verify_monster@@Base+0x1d14>
   11724:	movw	r2, #18652	; 0x48dc
   11728:	movt	r2, #17401	; 0x43f9
   1172c:	eor	r1, r1, r2
   11730:	movw	r2, #56817	; 0xddf1
   11734:	movt	r2, #51047	; 0xc767
   11738:	eor	r0, r0, r2
   1173c:	orr	r0, r0, r1
   11740:	cmp	r0, #0
   11744:	bne	11750 <verify_monster@@Base+0x7a8>
   11748:	b	1174c <verify_monster@@Base+0x7a4>
   1174c:	b	11770 <verify_monster@@Base+0x7c8>
   11750:	ldr	r0, [pc, #152]	; 117f0 <verify_monster@@Base+0x848>
   11754:	add	r0, pc, r0
   11758:	ldr	r1, [pc, #148]	; 117f4 <verify_monster@@Base+0x84c>
   1175c:	add	r1, pc, r1
   11760:	ldr	r2, [pc, #144]	; 117f8 <verify_monster@@Base+0x850>
   11764:	add	r3, pc, r2
   11768:	movw	r2, #155	; 0x9b
   1176c:	bl	10ea8 <__assert_fail@plt>
   11770:	movw	r0, #0
   11774:	str	r0, [fp, #-4]
   11778:	ldr	r0, [fp, #-4]
   1177c:	mov	sp, fp
   11780:	pop	{fp, pc}
   11784:	andeq	r6, r0, r5, ror #15
   11788:	andeq	r6, r0, r3, asr #15
   1178c:	andeq	r6, r0, r5, ror r6
   11790:	andeq	r6, r0, r7, lsl r6
   11794:			; <UNDEFINED> instruction: 0xdd79c941
   11798:	andeq	r6, r0, r6, ror #10
   1179c:	muleq	r0, r3, r5
   117a0:	strdeq	r6, [r0], -r3
   117a4:	ldrdeq	r6, [r0], -lr
   117a8:	andeq	r6, r0, r3, asr r5
   117ac:			; <UNDEFINED> instruction: 0x000065b3
   117b0:			; <UNDEFINED> instruction: 0x000065bf
   117b4:	strdeq	r6, [r0], -pc	; <UNPREDICTABLE>
   117b8:	andeq	r6, r0, pc, asr r5
   117bc:	andeq	r6, r0, sl, lsr #11
   117c0:	andeq	r6, r0, fp, lsr #9
   117c4:	andeq	r6, r0, fp, lsl #10
   117c8:	mcrhi	4, 4, sl, cr1, cr1, {3}
   117cc:			; <UNDEFINED> instruction: 0x000065b1
   117d0:	andeq	r6, r0, r3, ror r4
   117d4:	ldrdeq	r6, [r0], -r3
   117d8:	andeq	r6, r0, r8, lsr #11
   117dc:	andeq	r6, r0, r3, lsr r4
   117e0:	muleq	r0, r3, r4
   117e4:	andeq	r6, r0, sl, lsl #11
   117e8:	ldrdeq	r6, [r0], -pc	; <UNPREDICTABLE>
   117ec:	andeq	r6, r0, pc, lsr r4
   117f0:	andeq	r6, r0, r6, ror r5
   117f4:	andeq	r6, r0, fp, lsl #7
   117f8:	andeq	r6, r0, fp, ror #7
   117fc:	andeq	r6, r0, pc, ror r5
   11800:	muleq	r0, r4, r5
   11804:			; <UNDEFINED> instruction: 0x000065b9
   11808:	andeq	r6, r0, lr, asr #11
   1180c:	andeq	r6, r0, r5, ror #11
   11810:	andeq	r6, r0, r0, lsl #12
   11814:	andeq	r6, r0, sl, lsr r6
   11818:	andeq	r6, r0, r4, asr #12
   1181c:	andeq	r6, r0, r9, asr r6
   11820:	andeq	r6, r0, sl, ror #12
   11824:	andeq	r6, r0, r0, lsr #13
   11828:	andeq	r6, r0, ip, asr #13
   1182c:	andeq	r6, r0, fp, ror #13
   11830:	andeq	r6, r0, r5, lsl #14
   11834:	andeq	r6, r0, r0, lsr #14
   11838:	andeq	r6, r0, r6, asr r7
   1183c:	andeq	r6, r0, sp, ror #14
   11840:	andeq	r6, r0, fp, ror r7
   11844:	andeq	r6, r0, r9, lsl #15
   11848:	muleq	r0, r7, r7
   1184c:	muleq	r0, pc, r7	; <UNPREDICTABLE>
   11850:	ldrdeq	r6, [r0], -r0
   11854:	strdeq	r6, [r0], -r5
   11858:	andeq	r6, r0, r7, ror #12
   1185c:	andeq	r6, r0, r2, asr r6
   11860:	andeq	r6, r0, pc, lsl #12
   11864:	push	{fp, lr}
   11868:	mov	fp, sp
   1186c:	sub	sp, sp, #16
   11870:	ldr	r1, [pc, #100]	; 118dc <verify_monster@@Base+0x934>
   11874:	add	r1, pc, r1
   11878:	str	r0, [fp, #-4]
   1187c:	str	r1, [sp, #8]
   11880:	ldr	r0, [fp, #-4]
   11884:	movw	r1, #0
   11888:	cmp	r0, r1
   1188c:	beq	118a4 <verify_monster@@Base+0x8fc>
   11890:	ldr	r0, [fp, #-4]
   11894:	ldr	r1, [sp, #8]
   11898:	bl	134c4 <main@@Base+0x700>
   1189c:	cmp	r0, #0
   118a0:	bne	118b0 <verify_monster@@Base+0x908>
   118a4:	movw	r0, #0
   118a8:	str	r0, [sp, #4]
   118ac:	b	118d0 <verify_monster@@Base+0x928>
   118b0:	ldr	r0, [fp, #-4]
   118b4:	ldr	r1, [fp, #-4]
   118b8:	str	r0, [sp]
   118bc:	mov	r0, r1
   118c0:	bl	13570 <main@@Base+0x7ac>
   118c4:	ldr	r1, [sp]
   118c8:	add	r0, r1, r0
   118cc:	str	r0, [sp, #4]
   118d0:	ldr	r0, [sp, #4]
   118d4:	mov	sp, fp
   118d8:	pop	{fp, pc}
   118dc:	strdeq	r6, [r0], -fp
   118e0:	push	{fp, lr}
   118e4:	mov	fp, sp
   118e8:	sub	sp, sp, #24
   118ec:	str	r0, [fp, #-4]
   118f0:	movw	r0, #0
   118f4:	strh	r0, [fp, #-6]
   118f8:	ldr	r0, [fp, #-4]
   118fc:	movw	r1, #0
   11900:	cmp	r0, r1
   11904:	beq	11910 <verify_monster@@Base+0x968>
   11908:	b	1190c <verify_monster@@Base+0x964>
   1190c:	b	11930 <verify_monster@@Base+0x988>
   11910:	ldr	r0, [pc, #176]	; 119c8 <verify_monster@@Base+0xa20>
   11914:	add	r0, pc, r0
   11918:	ldr	r1, [pc, #172]	; 119cc <verify_monster@@Base+0xa24>
   1191c:	add	r1, pc, r1
   11920:	ldr	r2, [pc, #168]	; 119d0 <verify_monster@@Base+0xa28>
   11924:	add	r3, pc, r2
   11928:	movw	r2, #697	; 0x2b9
   1192c:	bl	10ea8 <__assert_fail@plt>
   11930:	mov	r0, #2
   11934:	strh	r0, [fp, #-8]
   11938:	ldr	r0, [fp, #-4]
   1193c:	str	r0, [sp, #8]
   11940:	bl	135f4 <main@@Base+0x830>
   11944:	ldr	r1, [sp, #8]
   11948:	sub	r0, r1, r0
   1194c:	str	r0, [sp, #12]
   11950:	ldr	r0, [sp, #12]
   11954:	bl	13618 <main@@Base+0x854>
   11958:	ldrh	r1, [fp, #-8]
   1195c:	add	r1, r1, #3
   11960:	lsl	r1, r1, #1
   11964:	cmp	r0, r1
   11968:	bcc	11984 <verify_monster@@Base+0x9dc>
   1196c:	ldr	r0, [sp, #12]
   11970:	ldrh	r1, [fp, #-8]
   11974:	add	r0, r0, r1, lsl #1
   11978:	add	r0, r0, #4
   1197c:	bl	13618 <main@@Base+0x854>
   11980:	strh	r0, [fp, #-6]
   11984:	ldrh	r0, [fp, #-6]
   11988:	cmp	r0, #0
   1198c:	beq	119ac <verify_monster@@Base+0xa04>
   11990:	ldr	r0, [fp, #-4]
   11994:	ldrh	r1, [fp, #-6]
   11998:	add	r0, r0, r1
   1199c:	bl	13640 <main@@Base+0x87c>
   119a0:	sxth	r0, r0
   119a4:	str	r0, [sp, #4]
   119a8:	b	119b8 <verify_monster@@Base+0xa10>
   119ac:	movw	r0, #100	; 0x64
   119b0:	str	r0, [sp, #4]
   119b4:	b	119b8 <verify_monster@@Base+0xa10>
   119b8:	ldr	r0, [sp, #4]
   119bc:	sxth	r0, r0
   119c0:	mov	sp, fp
   119c4:	pop	{fp, pc}
   119c8:	andeq	r6, r0, r0, ror #9
   119cc:	strdeq	r6, [r0], -lr
   119d0:	andeq	r6, r0, pc, ror #10
   119d4:	push	{fp, lr}
   119d8:	mov	fp, sp
   119dc:	sub	sp, sp, #24
   119e0:	str	r0, [fp, #-8]
   119e4:	movw	r0, #0
   119e8:	strh	r0, [fp, #-10]
   119ec:	ldr	r0, [fp, #-8]
   119f0:	movw	r1, #0
   119f4:	cmp	r0, r1
   119f8:	beq	11a04 <verify_monster@@Base+0xa5c>
   119fc:	b	11a00 <verify_monster@@Base+0xa58>
   11a00:	b	11a24 <verify_monster@@Base+0xa7c>
   11a04:	ldr	r0, [pc, #160]	; 11aac <verify_monster@@Base+0xb04>
   11a08:	add	r0, pc, r0
   11a0c:	ldr	r1, [pc, #156]	; 11ab0 <verify_monster@@Base+0xb08>
   11a10:	add	r1, pc, r1
   11a14:	ldr	r2, [pc, #152]	; 11ab4 <verify_monster@@Base+0xb0c>
   11a18:	add	r3, pc, r2
   11a1c:	movw	r2, #696	; 0x2b8
   11a20:	bl	10ea8 <__assert_fail@plt>
   11a24:	mov	r0, #0
   11a28:	strh	r0, [sp, #12]
   11a2c:	ldr	r0, [fp, #-8]
   11a30:	str	r0, [sp, #4]
   11a34:	bl	135f4 <main@@Base+0x830>
   11a38:	ldr	r1, [sp, #4]
   11a3c:	sub	r0, r1, r0
   11a40:	str	r0, [sp, #8]
   11a44:	ldr	r0, [sp, #8]
   11a48:	bl	13618 <main@@Base+0x854>
   11a4c:	ldrh	r1, [sp, #12]
   11a50:	add	r1, r1, #3
   11a54:	lsl	r1, r1, #1
   11a58:	cmp	r0, r1
   11a5c:	bcc	11a78 <verify_monster@@Base+0xad0>
   11a60:	ldr	r0, [sp, #8]
   11a64:	ldrh	r1, [sp, #12]
   11a68:	add	r0, r0, r1, lsl #1
   11a6c:	add	r0, r0, #4
   11a70:	bl	13618 <main@@Base+0x854>
   11a74:	strh	r0, [fp, #-10]
   11a78:	ldrsh	r0, [fp, #-10]
   11a7c:	cmp	r0, #0
   11a80:	beq	11a98 <verify_monster@@Base+0xaf0>
   11a84:	ldr	r0, [fp, #-8]
   11a88:	ldrh	r1, [fp, #-10]
   11a8c:	add	r0, r0, r1
   11a90:	str	r0, [fp, #-4]
   11a94:	b	11aa0 <verify_monster@@Base+0xaf8>
   11a98:	movw	r0, #0
   11a9c:	str	r0, [fp, #-4]
   11aa0:	ldr	r0, [fp, #-4]
   11aa4:	mov	sp, fp
   11aa8:	pop	{fp, pc}
   11aac:	andeq	r6, r0, ip, ror #7
   11ab0:	andeq	r6, r0, sl, lsl #8
   11ab4:			; <UNDEFINED> instruction: 0x000064bd
   11ab8:	push	{fp, lr}
   11abc:	mov	fp, sp
   11ac0:	sub	sp, sp, #8
   11ac4:	str	r0, [sp, #4]
   11ac8:	ldr	r0, [sp, #4]
   11acc:	movw	r1, #0
   11ad0:	cmp	r0, r1
   11ad4:	beq	11ae8 <verify_monster@@Base+0xb40>
   11ad8:	ldr	r0, [sp, #4]
   11adc:	bl	136a4 <main@@Base+0x8e0>
   11ae0:	vstr	s0, [sp]
   11ae4:	b	11af4 <verify_monster@@Base+0xb4c>
   11ae8:	vldr	s0, [pc, #16]	; 11b00 <verify_monster@@Base+0xb58>
   11aec:	vstr	s0, [sp]
   11af0:	b	11af4 <verify_monster@@Base+0xb4c>
   11af4:	vldr	s0, [sp]
   11af8:	mov	sp, fp
   11afc:	pop	{fp, pc}
   11b00:	andeq	r0, r0, r0
   11b04:	push	{fp, lr}
   11b08:	mov	fp, sp
   11b0c:	sub	sp, sp, #8
   11b10:	str	r0, [sp, #4]
   11b14:	ldr	r0, [sp, #4]
   11b18:	movw	r1, #0
   11b1c:	cmp	r0, r1
   11b20:	beq	11b38 <verify_monster@@Base+0xb90>
   11b24:	ldr	r0, [sp, #4]
   11b28:	add	r0, r0, #4
   11b2c:	bl	136a4 <main@@Base+0x8e0>
   11b30:	vstr	s0, [sp]
   11b34:	b	11b44 <verify_monster@@Base+0xb9c>
   11b38:	vldr	s0, [pc, #16]	; 11b50 <verify_monster@@Base+0xba8>
   11b3c:	vstr	s0, [sp]
   11b40:	b	11b44 <verify_monster@@Base+0xb9c>
   11b44:	vldr	s0, [sp]
   11b48:	mov	sp, fp
   11b4c:	pop	{fp, pc}
   11b50:	andeq	r0, r0, r0
   11b54:	push	{fp, lr}
   11b58:	mov	fp, sp
   11b5c:	sub	sp, sp, #8
   11b60:	str	r0, [sp, #4]
   11b64:	ldr	r0, [sp, #4]
   11b68:	movw	r1, #0
   11b6c:	cmp	r0, r1
   11b70:	beq	11b88 <verify_monster@@Base+0xbe0>
   11b74:	ldr	r0, [sp, #4]
   11b78:	add	r0, r0, #8
   11b7c:	bl	136a4 <main@@Base+0x8e0>
   11b80:	vstr	s0, [sp]
   11b84:	b	11b94 <verify_monster@@Base+0xbec>
   11b88:	vldr	s0, [pc, #16]	; 11ba0 <verify_monster@@Base+0xbf8>
   11b8c:	vstr	s0, [sp]
   11b90:	b	11b94 <verify_monster@@Base+0xbec>
   11b94:	vldr	s0, [sp]
   11b98:	mov	sp, fp
   11b9c:	pop	{fp, pc}
   11ba0:	andeq	r0, r0, r0
   11ba4:	nop	{0}
   11ba8:	push	{fp, lr}
   11bac:	mov	fp, sp
   11bb0:	sub	sp, sp, #16
   11bb4:	str	r0, [fp, #-4]
   11bb8:	ldr	r0, [fp, #-4]
   11bbc:	movw	r1, #0
   11bc0:	cmp	r0, r1
   11bc4:	beq	11bdc <verify_monster@@Base+0xc34>
   11bc8:	ldr	r0, [fp, #-4]
   11bcc:	add	r0, r0, #16
   11bd0:	bl	136ec <main@@Base+0x928>
   11bd4:	vstr	d0, [sp]
   11bd8:	b	11be8 <verify_monster@@Base+0xc40>
   11bdc:	vldr	d16, [pc, #20]	; 11bf8 <verify_monster@@Base+0xc50>
   11be0:	vstr	d16, [sp]
   11be4:	b	11be8 <verify_monster@@Base+0xc40>
   11be8:	vldr	d16, [sp]
   11bec:	vmov.f64	d0, d16
   11bf0:	mov	sp, fp
   11bf4:	pop	{fp, pc}
	...
   11c00:	push	{fp, lr}
   11c04:	mov	fp, sp
   11c08:	sub	sp, sp, #8
   11c0c:	str	r0, [sp, #4]
   11c10:	ldr	r0, [sp, #4]
   11c14:	movw	r1, #0
   11c18:	cmp	r0, r1
   11c1c:	beq	11c38 <verify_monster@@Base+0xc90>
   11c20:	ldr	r0, [sp, #4]
   11c24:	add	r0, r0, #24
   11c28:	bl	1372c <main@@Base+0x968>
   11c2c:	sxtb	r0, r0
   11c30:	str	r0, [sp]
   11c34:	b	11c44 <verify_monster@@Base+0xc9c>
   11c38:	movw	r0, #0
   11c3c:	str	r0, [sp]
   11c40:	b	11c44 <verify_monster@@Base+0xc9c>
   11c44:	ldr	r0, [sp]
   11c48:	sxtb	r0, r0
   11c4c:	mov	sp, fp
   11c50:	pop	{fp, pc}
   11c54:	sub	sp, sp, #8
   11c58:	str	r0, [sp, #4]
   11c5c:	ldr	r0, [sp, #4]
   11c60:	movw	r1, #0
   11c64:	cmp	r0, r1
   11c68:	beq	11c7c <verify_monster@@Base+0xcd4>
   11c6c:	ldr	r0, [sp, #4]
   11c70:	add	r0, r0, #26
   11c74:	str	r0, [sp]
   11c78:	b	11c88 <verify_monster@@Base+0xce0>
   11c7c:	movw	r0, #0
   11c80:	str	r0, [sp]
   11c84:	b	11c88 <verify_monster@@Base+0xce0>
   11c88:	ldr	r0, [sp]
   11c8c:	add	sp, sp, #8
   11c90:	bx	lr
   11c94:	push	{fp, lr}
   11c98:	mov	fp, sp
   11c9c:	sub	sp, sp, #8
   11ca0:	str	r0, [sp, #4]
   11ca4:	ldr	r0, [sp, #4]
   11ca8:	movw	r1, #0
   11cac:	cmp	r0, r1
   11cb0:	beq	11cc8 <verify_monster@@Base+0xd20>
   11cb4:	ldr	r0, [sp, #4]
   11cb8:	bl	13640 <main@@Base+0x87c>
   11cbc:	sxth	r0, r0
   11cc0:	str	r0, [sp]
   11cc4:	b	11cd4 <verify_monster@@Base+0xd2c>
   11cc8:	movw	r0, #0
   11ccc:	str	r0, [sp]
   11cd0:	b	11cd4 <verify_monster@@Base+0xd2c>
   11cd4:	ldr	r0, [sp]
   11cd8:	sxth	r0, r0
   11cdc:	mov	sp, fp
   11ce0:	pop	{fp, pc}
   11ce4:	push	{fp, lr}
   11ce8:	mov	fp, sp
   11cec:	sub	sp, sp, #8
   11cf0:	str	r0, [sp, #4]
   11cf4:	ldr	r0, [sp, #4]
   11cf8:	movw	r1, #0
   11cfc:	cmp	r0, r1
   11d00:	beq	11d1c <verify_monster@@Base+0xd74>
   11d04:	ldr	r0, [sp, #4]
   11d08:	add	r0, r0, #2
   11d0c:	bl	13768 <main@@Base+0x9a4>
   11d10:	sxtb	r0, r0
   11d14:	str	r0, [sp]
   11d18:	b	11d28 <verify_monster@@Base+0xd80>
   11d1c:	movw	r0, #0
   11d20:	str	r0, [sp]
   11d24:	b	11d28 <verify_monster@@Base+0xd80>
   11d28:	ldr	r0, [sp]
   11d2c:	sxtb	r0, r0
   11d30:	mov	sp, fp
   11d34:	pop	{fp, pc}
   11d38:	push	{fp, lr}
   11d3c:	mov	fp, sp
   11d40:	sub	sp, sp, #24
   11d44:	str	r0, [fp, #-4]
   11d48:	movw	r0, #0
   11d4c:	strh	r0, [fp, #-10]
   11d50:	ldr	r0, [fp, #-4]
   11d54:	movw	r1, #0
   11d58:	cmp	r0, r1
   11d5c:	beq	11d68 <verify_monster@@Base+0xdc0>
   11d60:	b	11d64 <verify_monster@@Base+0xdbc>
   11d64:	b	11d88 <verify_monster@@Base+0xde0>
   11d68:	ldr	r0, [pc, #208]	; 11e40 <verify_monster@@Base+0xe98>
   11d6c:	add	r0, pc, r0
   11d70:	ldr	r1, [pc, #204]	; 11e44 <verify_monster@@Base+0xe9c>
   11d74:	add	r1, pc, r1
   11d78:	ldr	r2, [pc, #200]	; 11e48 <verify_monster@@Base+0xea0>
   11d7c:	add	r3, pc, r2
   11d80:	movw	r2, #699	; 0x2bb
   11d84:	bl	10ea8 <__assert_fail@plt>
   11d88:	mov	r0, #3
   11d8c:	strh	r0, [sp, #12]
   11d90:	ldr	r0, [fp, #-4]
   11d94:	str	r0, [sp, #4]
   11d98:	bl	135f4 <main@@Base+0x830>
   11d9c:	ldr	r1, [sp, #4]
   11da0:	sub	r0, r1, r0
   11da4:	str	r0, [sp, #8]
   11da8:	ldr	r0, [sp, #8]
   11dac:	bl	13618 <main@@Base+0x854>
   11db0:	ldrh	r1, [sp, #12]
   11db4:	add	r1, r1, #3
   11db8:	lsl	r1, r1, #1
   11dbc:	cmp	r0, r1
   11dc0:	bcc	11ddc <verify_monster@@Base+0xe34>
   11dc4:	ldr	r0, [sp, #8]
   11dc8:	ldrh	r1, [sp, #12]
   11dcc:	add	r0, r0, r1, lsl #1
   11dd0:	add	r0, r0, #4
   11dd4:	bl	13618 <main@@Base+0x854>
   11dd8:	strh	r0, [fp, #-10]
   11ddc:	ldrsh	r0, [fp, #-10]
   11de0:	cmp	r0, #0
   11de4:	beq	11e20 <verify_monster@@Base+0xe78>
   11de8:	ldr	r0, [fp, #-4]
   11dec:	ldrh	r1, [fp, #-10]
   11df0:	add	r0, r0, r1
   11df4:	str	r0, [fp, #-8]
   11df8:	ldr	r0, [fp, #-8]
   11dfc:	add	r0, r0, #4
   11e00:	ldr	r1, [fp, #-8]
   11e04:	str	r0, [sp]
   11e08:	mov	r0, r1
   11e0c:	bl	13570 <main@@Base+0x7ac>
   11e10:	ldr	r1, [sp]
   11e14:	add	r0, r1, r0
   11e18:	mov	sp, fp
   11e1c:	pop	{fp, pc}
   11e20:	ldr	r0, [pc, #36]	; 11e4c <verify_monster@@Base+0xea4>
   11e24:	add	r0, pc, r0
   11e28:	ldr	r1, [pc, #32]	; 11e50 <verify_monster@@Base+0xea8>
   11e2c:	add	r1, pc, r1
   11e30:	ldr	r2, [pc, #28]	; 11e54 <verify_monster@@Base+0xeac>
   11e34:	add	r3, pc, r2
   11e38:	movw	r2, #699	; 0x2bb
   11e3c:	bl	10ea8 <__assert_fail@plt>
   11e40:	andeq	r6, r0, r8, lsl #1
   11e44:	andeq	r6, r0, r6, lsr #1
   11e48:			; <UNDEFINED> instruction: 0x000061b1
   11e4c:	andeq	r6, r0, sl, asr r1
   11e50:	andeq	r5, r0, lr, ror #31
   11e54:	strdeq	r6, [r0], -r9
   11e58:	push	{fp, lr}
   11e5c:	mov	fp, sp
   11e60:	sub	sp, sp, #8
   11e64:	str	r0, [sp, #4]
   11e68:	ldr	r0, [sp, #4]
   11e6c:	movw	r1, #0
   11e70:	cmp	r0, r1
   11e74:	beq	11e90 <verify_monster@@Base+0xee8>
   11e78:	ldr	r0, [sp, #4]
   11e7c:	mvn	r1, #3
   11e80:	add	r0, r0, r1
   11e84:	bl	13570 <main@@Base+0x7ac>
   11e88:	str	r0, [sp]
   11e8c:	b	11e9c <verify_monster@@Base+0xef4>
   11e90:	movw	r0, #0
   11e94:	str	r0, [sp]
   11e98:	b	11e9c <verify_monster@@Base+0xef4>
   11e9c:	ldr	r0, [sp]
   11ea0:	mov	sp, fp
   11ea4:	pop	{fp, pc}
   11ea8:	push	{fp, lr}
   11eac:	mov	fp, sp
   11eb0:	sub	sp, sp, #32
   11eb4:	str	r0, [fp, #-8]
   11eb8:	movw	r0, #0
   11ebc:	strh	r0, [fp, #-14]
   11ec0:	ldr	r0, [fp, #-8]
   11ec4:	movw	r1, #0
   11ec8:	cmp	r0, r1
   11ecc:	beq	11ed8 <verify_monster@@Base+0xf30>
   11ed0:	b	11ed4 <verify_monster@@Base+0xf2c>
   11ed4:	b	11ef8 <verify_monster@@Base+0xf50>
   11ed8:	ldr	r0, [pc, #196]	; 11fa4 <verify_monster@@Base+0xffc>
   11edc:	add	r0, pc, r0
   11ee0:	ldr	r1, [pc, #192]	; 11fa8 <verify_monster@@Base+0x1000>
   11ee4:	add	r1, pc, r1
   11ee8:	ldr	r2, [pc, #188]	; 11fac <verify_monster@@Base+0x1004>
   11eec:	add	r3, pc, r2
   11ef0:	movw	r2, #706	; 0x2c2
   11ef4:	bl	10ea8 <__assert_fail@plt>
   11ef8:	mov	r0, #5
   11efc:	strh	r0, [sp, #16]
   11f00:	ldr	r0, [fp, #-8]
   11f04:	str	r0, [sp, #8]
   11f08:	bl	135f4 <main@@Base+0x830>
   11f0c:	ldr	r1, [sp, #8]
   11f10:	sub	r0, r1, r0
   11f14:	str	r0, [sp, #12]
   11f18:	ldr	r0, [sp, #12]
   11f1c:	bl	13618 <main@@Base+0x854>
   11f20:	ldrh	r1, [sp, #16]
   11f24:	add	r1, r1, #3
   11f28:	lsl	r1, r1, #1
   11f2c:	cmp	r0, r1
   11f30:	bcc	11f4c <verify_monster@@Base+0xfa4>
   11f34:	ldr	r0, [sp, #12]
   11f38:	ldrh	r1, [sp, #16]
   11f3c:	add	r0, r0, r1, lsl #1
   11f40:	add	r0, r0, #4
   11f44:	bl	13618 <main@@Base+0x854>
   11f48:	strh	r0, [fp, #-14]
   11f4c:	ldrsh	r0, [fp, #-14]
   11f50:	cmp	r0, #0
   11f54:	beq	11f90 <verify_monster@@Base+0xfe8>
   11f58:	ldr	r0, [fp, #-8]
   11f5c:	ldrh	r1, [fp, #-14]
   11f60:	add	r0, r0, r1
   11f64:	str	r0, [fp, #-12]
   11f68:	ldr	r0, [fp, #-12]
   11f6c:	add	r0, r0, #4
   11f70:	ldr	r1, [fp, #-12]
   11f74:	str	r0, [sp, #4]
   11f78:	mov	r0, r1
   11f7c:	bl	13570 <main@@Base+0x7ac>
   11f80:	ldr	r1, [sp, #4]
   11f84:	add	r0, r1, r0
   11f88:	str	r0, [fp, #-4]
   11f8c:	b	11f98 <verify_monster@@Base+0xff0>
   11f90:	movw	r0, #0
   11f94:	str	r0, [fp, #-4]
   11f98:	ldr	r0, [fp, #-4]
   11f9c:	mov	sp, fp
   11fa0:	pop	{fp, pc}
   11fa4:	andeq	r5, r0, r8, lsl pc
   11fa8:	andeq	r5, r0, r6, lsr pc
   11fac:	strheq	r6, [r0], -r3
   11fb0:	push	{fp, lr}
   11fb4:	mov	fp, sp
   11fb8:	sub	sp, sp, #8
   11fbc:	str	r0, [sp, #4]
   11fc0:	ldr	r0, [sp, #4]
   11fc4:	bl	137a4 <main@@Base+0x9e0>
   11fc8:	mov	sp, fp
   11fcc:	pop	{fp, pc}
   11fd0:	push	{fp, lr}
   11fd4:	mov	fp, sp
   11fd8:	sub	sp, sp, #8
   11fdc:	str	r0, [sp, #4]
   11fe0:	str	r1, [sp]
   11fe4:	ldr	r0, [sp, #4]
   11fe8:	bl	137a4 <main@@Base+0x9e0>
   11fec:	ldr	r1, [sp]
   11ff0:	cmp	r0, r1
   11ff4:	bls	12000 <verify_monster@@Base+0x1058>
   11ff8:	b	11ffc <verify_monster@@Base+0x1054>
   11ffc:	b	12020 <verify_monster@@Base+0x1078>
   12000:	ldr	r0, [pc, #52]	; 1203c <verify_monster@@Base+0x1094>
   12004:	add	r0, pc, r0
   12008:	ldr	r1, [pc, #48]	; 12040 <verify_monster@@Base+0x1098>
   1200c:	add	r1, pc, r1
   12010:	ldr	r2, [pc, #44]	; 12044 <verify_monster@@Base+0x109c>
   12014:	add	r3, pc, r2
   12018:	movw	r2, #395	; 0x18b
   1201c:	bl	10ea8 <__assert_fail@plt>
   12020:	ldr	r0, [sp, #4]
   12024:	ldr	r1, [sp]
   12028:	add	r0, r0, r1
   1202c:	bl	137f4 <main@@Base+0xa30>
   12030:	and	r0, r0, #255	; 0xff
   12034:	mov	sp, fp
   12038:	pop	{fp, pc}
   1203c:	andeq	r6, r0, r7
   12040:	andeq	r6, r0, r6, lsr r0
   12044:	andeq	r6, r0, sp, lsr #1
   12048:	push	{fp, lr}
   1204c:	mov	fp, sp
   12050:	sub	sp, sp, #32
   12054:	str	r0, [fp, #-8]
   12058:	movw	r0, #0
   1205c:	strh	r0, [fp, #-14]
   12060:	ldr	r0, [fp, #-8]
   12064:	movw	r1, #0
   12068:	cmp	r0, r1
   1206c:	beq	12078 <verify_monster@@Base+0x10d0>
   12070:	b	12074 <verify_monster@@Base+0x10cc>
   12074:	b	12098 <verify_monster@@Base+0x10f0>
   12078:	ldr	r0, [pc, #196]	; 12144 <verify_monster@@Base+0x119c>
   1207c:	add	r0, pc, r0
   12080:	ldr	r1, [pc, #192]	; 12148 <verify_monster@@Base+0x11a0>
   12084:	add	r1, pc, r1
   12088:	ldr	r2, [pc, #188]	; 1214c <verify_monster@@Base+0x11a4>
   1208c:	add	r3, pc, r2
   12090:	movw	r2, #712	; 0x2c8
   12094:	bl	10ea8 <__assert_fail@plt>
   12098:	mov	r0, #10
   1209c:	strh	r0, [sp, #16]
   120a0:	ldr	r0, [fp, #-8]
   120a4:	str	r0, [sp, #8]
   120a8:	bl	135f4 <main@@Base+0x830>
   120ac:	ldr	r1, [sp, #8]
   120b0:	sub	r0, r1, r0
   120b4:	str	r0, [sp, #12]
   120b8:	ldr	r0, [sp, #12]
   120bc:	bl	13618 <main@@Base+0x854>
   120c0:	ldrh	r1, [sp, #16]
   120c4:	add	r1, r1, #3
   120c8:	lsl	r1, r1, #1
   120cc:	cmp	r0, r1
   120d0:	bcc	120ec <verify_monster@@Base+0x1144>
   120d4:	ldr	r0, [sp, #12]
   120d8:	ldrh	r1, [sp, #16]
   120dc:	add	r0, r0, r1, lsl #1
   120e0:	add	r0, r0, #4
   120e4:	bl	13618 <main@@Base+0x854>
   120e8:	strh	r0, [fp, #-14]
   120ec:	ldrsh	r0, [fp, #-14]
   120f0:	cmp	r0, #0
   120f4:	beq	12130 <verify_monster@@Base+0x1188>
   120f8:	ldr	r0, [fp, #-8]
   120fc:	ldrh	r1, [fp, #-14]
   12100:	add	r0, r0, r1
   12104:	str	r0, [fp, #-12]
   12108:	ldr	r0, [fp, #-12]
   1210c:	add	r0, r0, #4
   12110:	ldr	r1, [fp, #-12]
   12114:	str	r0, [sp, #4]
   12118:	mov	r0, r1
   1211c:	bl	13570 <main@@Base+0x7ac>
   12120:	ldr	r1, [sp, #4]
   12124:	add	r0, r1, r0
   12128:	str	r0, [fp, #-4]
   1212c:	b	12138 <verify_monster@@Base+0x1190>
   12130:	movw	r0, #0
   12134:	str	r0, [fp, #-4]
   12138:	ldr	r0, [fp, #-4]
   1213c:	mov	sp, fp
   12140:	pop	{fp, pc}
   12144:	andeq	r5, r0, r8, ror sp
   12148:	muleq	r0, r6, sp
   1214c:	andeq	r6, r0, r7, ror r0
   12150:	push	{fp, lr}
   12154:	mov	fp, sp
   12158:	sub	sp, sp, #8
   1215c:	str	r0, [sp, #4]
   12160:	ldr	r0, [sp, #4]
   12164:	movw	r1, #0
   12168:	cmp	r0, r1
   1216c:	beq	12188 <verify_monster@@Base+0x11e0>
   12170:	ldr	r0, [sp, #4]
   12174:	mvn	r1, #3
   12178:	add	r0, r0, r1
   1217c:	bl	13570 <main@@Base+0x7ac>
   12180:	str	r0, [sp]
   12184:	b	12194 <verify_monster@@Base+0x11ec>
   12188:	movw	r0, #0
   1218c:	str	r0, [sp]
   12190:	b	12194 <verify_monster@@Base+0x11ec>
   12194:	ldr	r0, [sp]
   12198:	mov	sp, fp
   1219c:	pop	{fp, pc}
   121a0:	push	{fp, lr}
   121a4:	mov	fp, sp
   121a8:	sub	sp, sp, #16
   121ac:	str	r0, [fp, #-4]
   121b0:	str	r1, [sp, #8]
   121b4:	ldr	r0, [fp, #-4]
   121b8:	ldr	r1, [sp, #8]
   121bc:	add	r0, r0, r1, lsl #2
   121c0:	str	r0, [sp, #4]
   121c4:	ldr	r0, [fp, #-4]
   121c8:	bl	137a4 <main@@Base+0x9e0>
   121cc:	ldr	r1, [sp, #8]
   121d0:	cmp	r0, r1
   121d4:	bls	121e0 <verify_monster@@Base+0x1238>
   121d8:	b	121dc <verify_monster@@Base+0x1234>
   121dc:	b	12200 <verify_monster@@Base+0x1258>
   121e0:	ldr	r0, [pc, #64]	; 12228 <verify_monster@@Base+0x1280>
   121e4:	add	r0, pc, r0
   121e8:	ldr	r1, [pc, #60]	; 1222c <verify_monster@@Base+0x1284>
   121ec:	add	r1, pc, r1
   121f0:	ldr	r2, [pc, #56]	; 12230 <verify_monster@@Base+0x1288>
   121f4:	add	r3, pc, r2
   121f8:	movw	r2, #108	; 0x6c
   121fc:	bl	10ea8 <__assert_fail@plt>
   12200:	ldr	r0, [sp, #4]
   12204:	ldr	r1, [sp, #4]
   12208:	str	r0, [sp]
   1220c:	mov	r0, r1
   12210:	bl	13570 <main@@Base+0x7ac>
   12214:	ldr	r1, [sp]
   12218:	add	r0, r1, r0
   1221c:	add	r0, r0, #4
   12220:	mov	sp, fp
   12224:	pop	{fp, pc}
   12228:	andeq	r5, r0, r7, lsr #28
   1222c:	andeq	r5, r0, r6, asr lr
   12230:	andeq	r5, r0, r1, ror pc
   12234:	push	{fp, lr}
   12238:	mov	fp, sp
   1223c:	sub	sp, sp, #24
   12240:	str	r0, [fp, #-4]
   12244:	movw	r0, #0
   12248:	strh	r0, [fp, #-6]
   1224c:	ldr	r0, [fp, #-4]
   12250:	movw	r1, #0
   12254:	cmp	r0, r1
   12258:	beq	12264 <verify_monster@@Base+0x12bc>
   1225c:	b	12260 <verify_monster@@Base+0x12b8>
   12260:	b	12284 <verify_monster@@Base+0x12dc>
   12264:	ldr	r0, [pc, #176]	; 1231c <verify_monster@@Base+0x1374>
   12268:	add	r0, pc, r0
   1226c:	ldr	r1, [pc, #172]	; 12320 <verify_monster@@Base+0x1378>
   12270:	add	r1, pc, r1
   12274:	ldr	r2, [pc, #168]	; 12324 <verify_monster@@Base+0x137c>
   12278:	add	r3, pc, r2
   1227c:	movw	r2, #717	; 0x2cd
   12280:	bl	10ea8 <__assert_fail@plt>
   12284:	mov	r0, #7
   12288:	strh	r0, [fp, #-8]
   1228c:	ldr	r0, [fp, #-4]
   12290:	str	r0, [sp, #8]
   12294:	bl	135f4 <main@@Base+0x830>
   12298:	ldr	r1, [sp, #8]
   1229c:	sub	r0, r1, r0
   122a0:	str	r0, [sp, #12]
   122a4:	ldr	r0, [sp, #12]
   122a8:	bl	13618 <main@@Base+0x854>
   122ac:	ldrh	r1, [fp, #-8]
   122b0:	add	r1, r1, #3
   122b4:	lsl	r1, r1, #1
   122b8:	cmp	r0, r1
   122bc:	bcc	122d8 <verify_monster@@Base+0x1330>
   122c0:	ldr	r0, [sp, #12]
   122c4:	ldrh	r1, [fp, #-8]
   122c8:	add	r0, r0, r1, lsl #1
   122cc:	add	r0, r0, #4
   122d0:	bl	13618 <main@@Base+0x854>
   122d4:	strh	r0, [fp, #-6]
   122d8:	ldrh	r0, [fp, #-6]
   122dc:	cmp	r0, #0
   122e0:	beq	12300 <verify_monster@@Base+0x1358>
   122e4:	ldr	r0, [fp, #-4]
   122e8:	ldrh	r1, [fp, #-6]
   122ec:	add	r0, r0, r1
   122f0:	bl	13830 <main@@Base+0xa6c>
   122f4:	and	r0, r0, #255	; 0xff
   122f8:	str	r0, [sp, #4]
   122fc:	b	1230c <verify_monster@@Base+0x1364>
   12300:	movw	r0, #0
   12304:	str	r0, [sp, #4]
   12308:	b	1230c <verify_monster@@Base+0x1364>
   1230c:	ldr	r0, [sp, #4]
   12310:	and	r0, r0, #255	; 0xff
   12314:	mov	sp, fp
   12318:	pop	{fp, pc}
   1231c:	andeq	r5, r0, ip, lsl #23
   12320:	andeq	r5, r0, sl, lsr #23
   12324:	andeq	r5, r0, lr, lsr pc
   12328:	push	{fp, lr}
   1232c:	mov	fp, sp
   12330:	sub	sp, sp, #32
   12334:	str	r0, [fp, #-8]
   12338:	movw	r0, #0
   1233c:	strh	r0, [fp, #-14]
   12340:	ldr	r0, [fp, #-8]
   12344:	movw	r1, #0
   12348:	cmp	r0, r1
   1234c:	beq	12358 <verify_monster@@Base+0x13b0>
   12350:	b	12354 <verify_monster@@Base+0x13ac>
   12354:	b	12378 <verify_monster@@Base+0x13d0>
   12358:	ldr	r0, [pc, #192]	; 12420 <verify_monster@@Base+0x1478>
   1235c:	add	r0, pc, r0
   12360:	ldr	r1, [pc, #188]	; 12424 <verify_monster@@Base+0x147c>
   12364:	add	r1, pc, r1
   12368:	ldr	r2, [pc, #184]	; 12428 <verify_monster@@Base+0x1480>
   1236c:	add	r3, pc, r2
   12370:	movw	r2, #717	; 0x2cd
   12374:	bl	10ea8 <__assert_fail@plt>
   12378:	mov	r0, #8
   1237c:	strh	r0, [sp, #16]
   12380:	ldr	r0, [fp, #-8]
   12384:	str	r0, [sp, #8]
   12388:	bl	135f4 <main@@Base+0x830>
   1238c:	ldr	r1, [sp, #8]
   12390:	sub	r0, r1, r0
   12394:	str	r0, [sp, #12]
   12398:	ldr	r0, [sp, #12]
   1239c:	bl	13618 <main@@Base+0x854>
   123a0:	ldrh	r1, [sp, #16]
   123a4:	add	r1, r1, #3
   123a8:	lsl	r1, r1, #1
   123ac:	cmp	r0, r1
   123b0:	bcc	123cc <verify_monster@@Base+0x1424>
   123b4:	ldr	r0, [sp, #12]
   123b8:	ldrh	r1, [sp, #16]
   123bc:	add	r0, r0, r1, lsl #1
   123c0:	add	r0, r0, #4
   123c4:	bl	13618 <main@@Base+0x854>
   123c8:	strh	r0, [fp, #-14]
   123cc:	ldrsh	r0, [fp, #-14]
   123d0:	cmp	r0, #0
   123d4:	beq	1240c <verify_monster@@Base+0x1464>
   123d8:	ldr	r0, [fp, #-8]
   123dc:	ldrh	r1, [fp, #-14]
   123e0:	add	r0, r0, r1
   123e4:	str	r0, [fp, #-12]
   123e8:	ldr	r0, [fp, #-12]
   123ec:	ldr	r1, [fp, #-12]
   123f0:	str	r0, [sp, #4]
   123f4:	mov	r0, r1
   123f8:	bl	13570 <main@@Base+0x7ac>
   123fc:	ldr	r1, [sp, #4]
   12400:	add	r0, r1, r0
   12404:	str	r0, [fp, #-4]
   12408:	b	12414 <verify_monster@@Base+0x146c>
   1240c:	movw	r0, #0
   12410:	str	r0, [fp, #-4]
   12414:	ldr	r0, [fp, #-4]
   12418:	mov	sp, fp
   1241c:	pop	{fp, pc}
   12420:	muleq	r0, r8, sl
   12424:			; <UNDEFINED> instruction: 0x00005ab6
   12428:	andeq	r5, r0, fp, lsr #29
   1242c:	push	{fp, lr}
   12430:	mov	fp, sp
   12434:	sub	sp, sp, #32
   12438:	str	r0, [fp, #-8]
   1243c:	movw	r0, #0
   12440:	strh	r0, [fp, #-14]
   12444:	ldr	r0, [fp, #-8]
   12448:	movw	r1, #0
   1244c:	cmp	r0, r1
   12450:	beq	1245c <verify_monster@@Base+0x14b4>
   12454:	b	12458 <verify_monster@@Base+0x14b0>
   12458:	b	1247c <verify_monster@@Base+0x14d4>
   1245c:	ldr	r0, [pc, #196]	; 12528 <verify_monster@@Base+0x1580>
   12460:	add	r0, pc, r0
   12464:	ldr	r1, [pc, #192]	; 1252c <verify_monster@@Base+0x1584>
   12468:	add	r1, pc, r1
   1246c:	ldr	r2, [pc, #188]	; 12530 <verify_monster@@Base+0x1588>
   12470:	add	r3, pc, r2
   12474:	movw	r2, #718	; 0x2ce
   12478:	bl	10ea8 <__assert_fail@plt>
   1247c:	mov	r0, #9
   12480:	strh	r0, [sp, #16]
   12484:	ldr	r0, [fp, #-8]
   12488:	str	r0, [sp, #8]
   1248c:	bl	135f4 <main@@Base+0x830>
   12490:	ldr	r1, [sp, #8]
   12494:	sub	r0, r1, r0
   12498:	str	r0, [sp, #12]
   1249c:	ldr	r0, [sp, #12]
   124a0:	bl	13618 <main@@Base+0x854>
   124a4:	ldrh	r1, [sp, #16]
   124a8:	add	r1, r1, #3
   124ac:	lsl	r1, r1, #1
   124b0:	cmp	r0, r1
   124b4:	bcc	124d0 <verify_monster@@Base+0x1528>
   124b8:	ldr	r0, [sp, #12]
   124bc:	ldrh	r1, [sp, #16]
   124c0:	add	r0, r0, r1, lsl #1
   124c4:	add	r0, r0, #4
   124c8:	bl	13618 <main@@Base+0x854>
   124cc:	strh	r0, [fp, #-14]
   124d0:	ldrsh	r0, [fp, #-14]
   124d4:	cmp	r0, #0
   124d8:	beq	12514 <verify_monster@@Base+0x156c>
   124dc:	ldr	r0, [fp, #-8]
   124e0:	ldrh	r1, [fp, #-14]
   124e4:	add	r0, r0, r1
   124e8:	str	r0, [fp, #-12]
   124ec:	ldr	r0, [fp, #-12]
   124f0:	add	r0, r0, #4
   124f4:	ldr	r1, [fp, #-12]
   124f8:	str	r0, [sp, #4]
   124fc:	mov	r0, r1
   12500:	bl	13570 <main@@Base+0x7ac>
   12504:	ldr	r1, [sp, #4]
   12508:	add	r0, r1, r0
   1250c:	str	r0, [fp, #-4]
   12510:	b	1251c <verify_monster@@Base+0x1574>
   12514:	movw	r0, #0
   12518:	str	r0, [fp, #-4]
   1251c:	ldr	r0, [fp, #-4]
   12520:	mov	sp, fp
   12524:	pop	{fp, pc}
   12528:	muleq	r0, r4, r9
   1252c:			; <UNDEFINED> instruction: 0x000059b2
   12530:	strdeq	r5, [r0], -r9
   12534:	push	{fp, lr}
   12538:	mov	fp, sp
   1253c:	sub	sp, sp, #8
   12540:	str	r0, [sp, #4]
   12544:	ldr	r0, [sp, #4]
   12548:	movw	r1, #0
   1254c:	cmp	r0, r1
   12550:	beq	1256c <verify_monster@@Base+0x15c4>
   12554:	ldr	r0, [sp, #4]
   12558:	mvn	r1, #3
   1255c:	add	r0, r0, r1
   12560:	bl	13570 <main@@Base+0x7ac>
   12564:	str	r0, [sp]
   12568:	b	12578 <verify_monster@@Base+0x15d0>
   1256c:	movw	r0, #0
   12570:	str	r0, [sp]
   12574:	b	12578 <verify_monster@@Base+0x15d0>
   12578:	ldr	r0, [sp]
   1257c:	mov	sp, fp
   12580:	pop	{fp, pc}
   12584:	push	{fp, lr}
   12588:	mov	fp, sp
   1258c:	sub	sp, sp, #8
   12590:	str	r0, [sp, #4]
   12594:	str	r1, [sp]
   12598:	ldr	r0, [sp, #4]
   1259c:	bl	137a4 <main@@Base+0x9e0>
   125a0:	ldr	r1, [sp]
   125a4:	cmp	r0, r1
   125a8:	bls	125b4 <verify_monster@@Base+0x160c>
   125ac:	b	125b0 <verify_monster@@Base+0x1608>
   125b0:	b	125d4 <verify_monster@@Base+0x162c>
   125b4:	ldr	r0, [pc, #44]	; 125e8 <verify_monster@@Base+0x1640>
   125b8:	add	r0, pc, r0
   125bc:	ldr	r1, [pc, #40]	; 125ec <verify_monster@@Base+0x1644>
   125c0:	add	r1, pc, r1
   125c4:	ldr	r2, [pc, #36]	; 125f0 <verify_monster@@Base+0x1648>
   125c8:	add	r3, pc, r2
   125cc:	movw	r2, #380	; 0x17c
   125d0:	bl	10ea8 <__assert_fail@plt>
   125d4:	ldr	r0, [sp, #4]
   125d8:	ldr	r1, [sp]
   125dc:	add	r0, r0, r1, lsl #2
   125e0:	mov	sp, fp
   125e4:	pop	{fp, pc}
   125e8:	andeq	r5, r0, r3, asr sl
   125ec:	andeq	r5, r0, sl, asr r8
   125f0:	strdeq	r5, [r0], -r8
   125f4:	push	{fp, lr}
   125f8:	mov	fp, sp
   125fc:	sub	sp, sp, #24
   12600:	str	r0, [fp, #-4]
   12604:	movw	r0, #0
   12608:	strh	r0, [fp, #-6]
   1260c:	ldr	r0, [fp, #-4]
   12610:	movw	r1, #0
   12614:	cmp	r0, r1
   12618:	beq	12624 <verify_monster@@Base+0x167c>
   1261c:	b	12620 <verify_monster@@Base+0x1678>
   12620:	b	12644 <verify_monster@@Base+0x169c>
   12624:	ldr	r0, [pc, #168]	; 126d4 <verify_monster@@Base+0x172c>
   12628:	add	r0, pc, r0
   1262c:	ldr	r1, [pc, #164]	; 126d8 <verify_monster@@Base+0x1730>
   12630:	add	r1, pc, r1
   12634:	ldr	r2, [pc, #160]	; 126dc <verify_monster@@Base+0x1734>
   12638:	add	r3, pc, r2
   1263c:	movw	r2, #724	; 0x2d4
   12640:	bl	10ea8 <__assert_fail@plt>
   12644:	mov	r0, #16
   12648:	strh	r0, [fp, #-8]
   1264c:	ldr	r0, [fp, #-4]
   12650:	str	r0, [sp, #8]
   12654:	bl	135f4 <main@@Base+0x830>
   12658:	ldr	r1, [sp, #8]
   1265c:	sub	r0, r1, r0
   12660:	str	r0, [sp, #12]
   12664:	ldr	r0, [sp, #12]
   12668:	bl	13618 <main@@Base+0x854>
   1266c:	ldrh	r1, [fp, #-8]
   12670:	add	r1, r1, #3
   12674:	lsl	r1, r1, #1
   12678:	cmp	r0, r1
   1267c:	bcc	12698 <verify_monster@@Base+0x16f0>
   12680:	ldr	r0, [sp, #12]
   12684:	ldrh	r1, [fp, #-8]
   12688:	add	r0, r0, r1, lsl #1
   1268c:	add	r0, r0, #4
   12690:	bl	13618 <main@@Base+0x854>
   12694:	strh	r0, [fp, #-6]
   12698:	ldrh	r0, [fp, #-6]
   1269c:	cmp	r0, #0
   126a0:	beq	126bc <verify_monster@@Base+0x1714>
   126a4:	ldr	r0, [fp, #-4]
   126a8:	ldrh	r1, [fp, #-6]
   126ac:	add	r0, r0, r1
   126b0:	bl	1386c <main@@Base+0xaa8>
   126b4:	str	r0, [sp, #4]
   126b8:	b	126c8 <verify_monster@@Base+0x1720>
   126bc:	movw	r0, #0
   126c0:	str	r0, [sp, #4]
   126c4:	b	126c8 <verify_monster@@Base+0x1720>
   126c8:	ldr	r0, [sp, #4]
   126cc:	mov	sp, fp
   126d0:	pop	{fp, pc}
   126d4:	andeq	r5, r0, ip, asr #15
   126d8:	andeq	r5, r0, sl, ror #15
   126dc:	andeq	r5, r0, r3, ror #25
   126e0:	push	{fp, lr}
   126e4:	mov	fp, sp
   126e8:	sub	sp, sp, #24
   126ec:	str	r0, [fp, #-4]
   126f0:	movw	r0, #0
   126f4:	strh	r0, [fp, #-6]
   126f8:	ldr	r0, [fp, #-4]
   126fc:	movw	r1, #0
   12700:	cmp	r0, r1
   12704:	beq	12710 <verify_monster@@Base+0x1768>
   12708:	b	1270c <verify_monster@@Base+0x1764>
   1270c:	b	12730 <verify_monster@@Base+0x1788>
   12710:	ldr	r0, [pc, #168]	; 127c0 <verify_monster@@Base+0x1818>
   12714:	add	r0, pc, r0
   12718:	ldr	r1, [pc, #164]	; 127c4 <verify_monster@@Base+0x181c>
   1271c:	add	r1, pc, r1
   12720:	ldr	r2, [pc, #160]	; 127c8 <verify_monster@@Base+0x1820>
   12724:	add	r3, pc, r2
   12728:	movw	r2, #725	; 0x2d5
   1272c:	bl	10ea8 <__assert_fail@plt>
   12730:	mov	r0, #17
   12734:	strh	r0, [fp, #-8]
   12738:	ldr	r0, [fp, #-4]
   1273c:	str	r0, [sp, #8]
   12740:	bl	135f4 <main@@Base+0x830>
   12744:	ldr	r1, [sp, #8]
   12748:	sub	r0, r1, r0
   1274c:	str	r0, [sp, #12]
   12750:	ldr	r0, [sp, #12]
   12754:	bl	13618 <main@@Base+0x854>
   12758:	ldrh	r1, [fp, #-8]
   1275c:	add	r1, r1, #3
   12760:	lsl	r1, r1, #1
   12764:	cmp	r0, r1
   12768:	bcc	12784 <verify_monster@@Base+0x17dc>
   1276c:	ldr	r0, [sp, #12]
   12770:	ldrh	r1, [fp, #-8]
   12774:	add	r0, r0, r1, lsl #1
   12778:	add	r0, r0, #4
   1277c:	bl	13618 <main@@Base+0x854>
   12780:	strh	r0, [fp, #-6]
   12784:	ldrh	r0, [fp, #-6]
   12788:	cmp	r0, #0
   1278c:	beq	127a8 <verify_monster@@Base+0x1800>
   12790:	ldr	r0, [fp, #-4]
   12794:	ldrh	r1, [fp, #-6]
   12798:	add	r0, r0, r1
   1279c:	bl	138a4 <main@@Base+0xae0>
   127a0:	str	r0, [sp, #4]
   127a4:	b	127b4 <verify_monster@@Base+0x180c>
   127a8:	movw	r0, #0
   127ac:	str	r0, [sp, #4]
   127b0:	b	127b4 <verify_monster@@Base+0x180c>
   127b4:	ldr	r0, [sp, #4]
   127b8:	mov	sp, fp
   127bc:	pop	{fp, pc}
   127c0:	andeq	r5, r0, r0, ror #13
   127c4:	strdeq	r5, [r0], -lr
   127c8:	andeq	r5, r0, r7, asr #24
   127cc:	push	{fp, lr}
   127d0:	mov	fp, sp
   127d4:	sub	sp, sp, #32
   127d8:	str	r0, [fp, #-4]
   127dc:	movw	r0, #0
   127e0:	strh	r0, [fp, #-6]
   127e4:	ldr	r0, [fp, #-4]
   127e8:	movw	r1, #0
   127ec:	cmp	r0, r1
   127f0:	beq	127fc <verify_monster@@Base+0x1854>
   127f4:	b	127f8 <verify_monster@@Base+0x1850>
   127f8:	b	1281c <verify_monster@@Base+0x1874>
   127fc:	ldr	r0, [pc, #196]	; 128c8 <verify_monster@@Base+0x1920>
   12800:	add	r0, pc, r0
   12804:	ldr	r1, [pc, #192]	; 128cc <verify_monster@@Base+0x1924>
   12808:	add	r1, pc, r1
   1280c:	ldr	r2, [pc, #188]	; 128d0 <verify_monster@@Base+0x1928>
   12810:	add	r3, pc, r2
   12814:	movw	r2, #726	; 0x2d6
   12818:	bl	10ea8 <__assert_fail@plt>
   1281c:	mov	r0, #18
   12820:	strh	r0, [fp, #-8]
   12824:	ldr	r0, [fp, #-4]
   12828:	str	r0, [sp, #16]
   1282c:	bl	135f4 <main@@Base+0x830>
   12830:	ldr	r1, [sp, #16]
   12834:	sub	r0, r1, r0
   12838:	str	r0, [fp, #-12]
   1283c:	ldr	r0, [fp, #-12]
   12840:	bl	13618 <main@@Base+0x854>
   12844:	ldrh	r1, [fp, #-8]
   12848:	add	r1, r1, #3
   1284c:	lsl	r1, r1, #1
   12850:	cmp	r0, r1
   12854:	bcc	12870 <verify_monster@@Base+0x18c8>
   12858:	ldr	r0, [fp, #-12]
   1285c:	ldrh	r1, [fp, #-8]
   12860:	add	r0, r0, r1, lsl #1
   12864:	add	r0, r0, #4
   12868:	bl	13618 <main@@Base+0x854>
   1286c:	strh	r0, [fp, #-6]
   12870:	ldrh	r0, [fp, #-6]
   12874:	cmp	r0, #0
   12878:	beq	12898 <verify_monster@@Base+0x18f0>
   1287c:	ldr	r0, [fp, #-4]
   12880:	ldrh	r1, [fp, #-6]
   12884:	add	r0, r0, r1
   12888:	bl	138dc <main@@Base+0xb18>
   1288c:	str	r0, [sp, #12]
   12890:	str	r1, [sp, #8]
   12894:	b	128ac <verify_monster@@Base+0x1904>
   12898:	mov	r0, #0
   1289c:	mov	r1, r0
   128a0:	str	r1, [sp, #12]
   128a4:	str	r0, [sp, #8]
   128a8:	b	128ac <verify_monster@@Base+0x1904>
   128ac:	ldr	r0, [sp, #8]
   128b0:	ldr	r1, [sp, #12]
   128b4:	str	r0, [sp, #4]
   128b8:	mov	r0, r1
   128bc:	ldr	r1, [sp, #4]
   128c0:	mov	sp, fp
   128c4:	pop	{fp, pc}
   128c8:	strdeq	r5, [r0], -r4
   128cc:	andeq	r5, r0, r2, lsl r6
   128d0:	andeq	r5, r0, ip, lsr #23
   128d4:	push	{fp, lr}
   128d8:	mov	fp, sp
   128dc:	sub	sp, sp, #32
   128e0:	str	r0, [fp, #-4]
   128e4:	movw	r0, #0
   128e8:	strh	r0, [fp, #-6]
   128ec:	ldr	r0, [fp, #-4]
   128f0:	movw	r1, #0
   128f4:	cmp	r0, r1
   128f8:	beq	12904 <verify_monster@@Base+0x195c>
   128fc:	b	12900 <verify_monster@@Base+0x1958>
   12900:	b	12924 <verify_monster@@Base+0x197c>
   12904:	ldr	r0, [pc, #196]	; 129d0 <verify_monster@@Base+0x1a28>
   12908:	add	r0, pc, r0
   1290c:	ldr	r1, [pc, #192]	; 129d4 <verify_monster@@Base+0x1a2c>
   12910:	add	r1, pc, r1
   12914:	ldr	r2, [pc, #188]	; 129d8 <verify_monster@@Base+0x1a30>
   12918:	add	r3, pc, r2
   1291c:	movw	r2, #727	; 0x2d7
   12920:	bl	10ea8 <__assert_fail@plt>
   12924:	mov	r0, #19
   12928:	strh	r0, [fp, #-8]
   1292c:	ldr	r0, [fp, #-4]
   12930:	str	r0, [sp, #16]
   12934:	bl	135f4 <main@@Base+0x830>
   12938:	ldr	r1, [sp, #16]
   1293c:	sub	r0, r1, r0
   12940:	str	r0, [fp, #-12]
   12944:	ldr	r0, [fp, #-12]
   12948:	bl	13618 <main@@Base+0x854>
   1294c:	ldrh	r1, [fp, #-8]
   12950:	add	r1, r1, #3
   12954:	lsl	r1, r1, #1
   12958:	cmp	r0, r1
   1295c:	bcc	12978 <verify_monster@@Base+0x19d0>
   12960:	ldr	r0, [fp, #-12]
   12964:	ldrh	r1, [fp, #-8]
   12968:	add	r0, r0, r1, lsl #1
   1296c:	add	r0, r0, #4
   12970:	bl	13618 <main@@Base+0x854>
   12974:	strh	r0, [fp, #-6]
   12978:	ldrh	r0, [fp, #-6]
   1297c:	cmp	r0, #0
   12980:	beq	129a0 <verify_monster@@Base+0x19f8>
   12984:	ldr	r0, [fp, #-4]
   12988:	ldrh	r1, [fp, #-6]
   1298c:	add	r0, r0, r1
   12990:	bl	1392c <main@@Base+0xb68>
   12994:	str	r0, [sp, #12]
   12998:	str	r1, [sp, #8]
   1299c:	b	129b4 <verify_monster@@Base+0x1a0c>
   129a0:	mov	r0, #0
   129a4:	mov	r1, r0
   129a8:	str	r1, [sp, #12]
   129ac:	str	r0, [sp, #8]
   129b0:	b	129b4 <verify_monster@@Base+0x1a0c>
   129b4:	ldr	r0, [sp, #8]
   129b8:	ldr	r1, [sp, #12]
   129bc:	str	r0, [sp, #4]
   129c0:	mov	r0, r1
   129c4:	ldr	r1, [sp, #4]
   129c8:	mov	sp, fp
   129cc:	pop	{fp, pc}
   129d0:	andeq	r5, r0, ip, ror #9
   129d4:	andeq	r5, r0, sl, lsl #10
   129d8:	strdeq	r5, [r0], -r4
   129dc:	push	{fp, lr}
   129e0:	mov	fp, sp
   129e4:	sub	sp, sp, #24
   129e8:	str	r0, [fp, #-4]
   129ec:	movw	r0, #0
   129f0:	strh	r0, [fp, #-6]
   129f4:	ldr	r0, [fp, #-4]
   129f8:	movw	r1, #0
   129fc:	cmp	r0, r1
   12a00:	beq	12a0c <verify_monster@@Base+0x1a64>
   12a04:	b	12a08 <verify_monster@@Base+0x1a60>
   12a08:	b	12a2c <verify_monster@@Base+0x1a84>
   12a0c:	ldr	r0, [pc, #168]	; 12abc <verify_monster@@Base+0x1b14>
   12a10:	add	r0, pc, r0
   12a14:	ldr	r1, [pc, #164]	; 12ac0 <verify_monster@@Base+0x1b18>
   12a18:	add	r1, pc, r1
   12a1c:	ldr	r2, [pc, #160]	; 12ac4 <verify_monster@@Base+0x1b1c>
   12a20:	add	r3, pc, r2
   12a24:	movw	r2, #728	; 0x2d8
   12a28:	bl	10ea8 <__assert_fail@plt>
   12a2c:	mov	r0, #20
   12a30:	strh	r0, [fp, #-8]
   12a34:	ldr	r0, [fp, #-4]
   12a38:	str	r0, [sp, #8]
   12a3c:	bl	135f4 <main@@Base+0x830>
   12a40:	ldr	r1, [sp, #8]
   12a44:	sub	r0, r1, r0
   12a48:	str	r0, [sp, #12]
   12a4c:	ldr	r0, [sp, #12]
   12a50:	bl	13618 <main@@Base+0x854>
   12a54:	ldrh	r1, [fp, #-8]
   12a58:	add	r1, r1, #3
   12a5c:	lsl	r1, r1, #1
   12a60:	cmp	r0, r1
   12a64:	bcc	12a80 <verify_monster@@Base+0x1ad8>
   12a68:	ldr	r0, [sp, #12]
   12a6c:	ldrh	r1, [fp, #-8]
   12a70:	add	r0, r0, r1, lsl #1
   12a74:	add	r0, r0, #4
   12a78:	bl	13618 <main@@Base+0x854>
   12a7c:	strh	r0, [fp, #-6]
   12a80:	ldrh	r0, [fp, #-6]
   12a84:	cmp	r0, #0
   12a88:	beq	12aa4 <verify_monster@@Base+0x1afc>
   12a8c:	ldr	r0, [fp, #-4]
   12a90:	ldrh	r1, [fp, #-6]
   12a94:	add	r0, r0, r1
   12a98:	bl	1386c <main@@Base+0xaa8>
   12a9c:	str	r0, [sp, #4]
   12aa0:	b	12ab0 <verify_monster@@Base+0x1b08>
   12aa4:	movw	r0, #0
   12aa8:	str	r0, [sp, #4]
   12aac:	b	12ab0 <verify_monster@@Base+0x1b08>
   12ab0:	ldr	r0, [sp, #4]
   12ab4:	mov	sp, fp
   12ab8:	pop	{fp, pc}
   12abc:	andeq	r5, r0, r4, ror #7
   12ac0:	andeq	r5, r0, r2, lsl #8
   12ac4:	andeq	r5, r0, sp, lsr sl
   12ac8:	push	{fp, lr}
   12acc:	mov	fp, sp
   12ad0:	sub	sp, sp, #24
   12ad4:	str	r0, [fp, #-4]
   12ad8:	movw	r0, #0
   12adc:	strh	r0, [fp, #-6]
   12ae0:	ldr	r0, [fp, #-4]
   12ae4:	movw	r1, #0
   12ae8:	cmp	r0, r1
   12aec:	beq	12af8 <verify_monster@@Base+0x1b50>
   12af0:	b	12af4 <verify_monster@@Base+0x1b4c>
   12af4:	b	12b18 <verify_monster@@Base+0x1b70>
   12af8:	ldr	r0, [pc, #168]	; 12ba8 <verify_monster@@Base+0x1c00>
   12afc:	add	r0, pc, r0
   12b00:	ldr	r1, [pc, #164]	; 12bac <verify_monster@@Base+0x1c04>
   12b04:	add	r1, pc, r1
   12b08:	ldr	r2, [pc, #160]	; 12bb0 <verify_monster@@Base+0x1c08>
   12b0c:	add	r3, pc, r2
   12b10:	movw	r2, #729	; 0x2d9
   12b14:	bl	10ea8 <__assert_fail@plt>
   12b18:	mov	r0, #21
   12b1c:	strh	r0, [fp, #-8]
   12b20:	ldr	r0, [fp, #-4]
   12b24:	str	r0, [sp, #8]
   12b28:	bl	135f4 <main@@Base+0x830>
   12b2c:	ldr	r1, [sp, #8]
   12b30:	sub	r0, r1, r0
   12b34:	str	r0, [sp, #12]
   12b38:	ldr	r0, [sp, #12]
   12b3c:	bl	13618 <main@@Base+0x854>
   12b40:	ldrh	r1, [fp, #-8]
   12b44:	add	r1, r1, #3
   12b48:	lsl	r1, r1, #1
   12b4c:	cmp	r0, r1
   12b50:	bcc	12b6c <verify_monster@@Base+0x1bc4>
   12b54:	ldr	r0, [sp, #12]
   12b58:	ldrh	r1, [fp, #-8]
   12b5c:	add	r0, r0, r1, lsl #1
   12b60:	add	r0, r0, #4
   12b64:	bl	13618 <main@@Base+0x854>
   12b68:	strh	r0, [fp, #-6]
   12b6c:	ldrh	r0, [fp, #-6]
   12b70:	cmp	r0, #0
   12b74:	beq	12b90 <verify_monster@@Base+0x1be8>
   12b78:	ldr	r0, [fp, #-4]
   12b7c:	ldrh	r1, [fp, #-6]
   12b80:	add	r0, r0, r1
   12b84:	bl	138a4 <main@@Base+0xae0>
   12b88:	str	r0, [sp, #4]
   12b8c:	b	12b9c <verify_monster@@Base+0x1bf4>
   12b90:	movw	r0, #0
   12b94:	str	r0, [sp, #4]
   12b98:	b	12b9c <verify_monster@@Base+0x1bf4>
   12b9c:	ldr	r0, [sp, #4]
   12ba0:	mov	sp, fp
   12ba4:	pop	{fp, pc}
   12ba8:	strdeq	r5, [r0], -r8
   12bac:	andeq	r5, r0, r6, lsl r3
   12bb0:	andeq	r5, r0, r2, lsr #19
   12bb4:	push	{fp, lr}
   12bb8:	mov	fp, sp
   12bbc:	sub	sp, sp, #32
   12bc0:	str	r0, [fp, #-4]
   12bc4:	movw	r0, #0
   12bc8:	strh	r0, [fp, #-6]
   12bcc:	ldr	r0, [fp, #-4]
   12bd0:	movw	r1, #0
   12bd4:	cmp	r0, r1
   12bd8:	beq	12be4 <verify_monster@@Base+0x1c3c>
   12bdc:	b	12be0 <verify_monster@@Base+0x1c38>
   12be0:	b	12c04 <verify_monster@@Base+0x1c5c>
   12be4:	ldr	r0, [pc, #196]	; 12cb0 <verify_monster@@Base+0x1d08>
   12be8:	add	r0, pc, r0
   12bec:	ldr	r1, [pc, #192]	; 12cb4 <verify_monster@@Base+0x1d0c>
   12bf0:	add	r1, pc, r1
   12bf4:	ldr	r2, [pc, #188]	; 12cb8 <verify_monster@@Base+0x1d10>
   12bf8:	add	r3, pc, r2
   12bfc:	movw	r2, #730	; 0x2da
   12c00:	bl	10ea8 <__assert_fail@plt>
   12c04:	mov	r0, #22
   12c08:	strh	r0, [fp, #-8]
   12c0c:	ldr	r0, [fp, #-4]
   12c10:	str	r0, [sp, #16]
   12c14:	bl	135f4 <main@@Base+0x830>
   12c18:	ldr	r1, [sp, #16]
   12c1c:	sub	r0, r1, r0
   12c20:	str	r0, [fp, #-12]
   12c24:	ldr	r0, [fp, #-12]
   12c28:	bl	13618 <main@@Base+0x854>
   12c2c:	ldrh	r1, [fp, #-8]
   12c30:	add	r1, r1, #3
   12c34:	lsl	r1, r1, #1
   12c38:	cmp	r0, r1
   12c3c:	bcc	12c58 <verify_monster@@Base+0x1cb0>
   12c40:	ldr	r0, [fp, #-12]
   12c44:	ldrh	r1, [fp, #-8]
   12c48:	add	r0, r0, r1, lsl #1
   12c4c:	add	r0, r0, #4
   12c50:	bl	13618 <main@@Base+0x854>
   12c54:	strh	r0, [fp, #-6]
   12c58:	ldrh	r0, [fp, #-6]
   12c5c:	cmp	r0, #0
   12c60:	beq	12c80 <verify_monster@@Base+0x1cd8>
   12c64:	ldr	r0, [fp, #-4]
   12c68:	ldrh	r1, [fp, #-6]
   12c6c:	add	r0, r0, r1
   12c70:	bl	138dc <main@@Base+0xb18>
   12c74:	str	r0, [sp, #12]
   12c78:	str	r1, [sp, #8]
   12c7c:	b	12c94 <verify_monster@@Base+0x1cec>
   12c80:	mov	r0, #0
   12c84:	mov	r1, r0
   12c88:	str	r1, [sp, #12]
   12c8c:	str	r0, [sp, #8]
   12c90:	b	12c94 <verify_monster@@Base+0x1cec>
   12c94:	ldr	r0, [sp, #8]
   12c98:	ldr	r1, [sp, #12]
   12c9c:	str	r0, [sp, #4]
   12ca0:	mov	r0, r1
   12ca4:	ldr	r1, [sp, #4]
   12ca8:	mov	sp, fp
   12cac:	pop	{fp, pc}
   12cb0:	andeq	r5, r0, ip, lsl #4
   12cb4:	andeq	r5, r0, sl, lsr #4
   12cb8:	andeq	r5, r0, r8, lsl #18
   12cbc:	push	{fp, lr}
   12cc0:	mov	fp, sp
   12cc4:	sub	sp, sp, #32
   12cc8:	str	r0, [fp, #-4]
   12ccc:	movw	r0, #0
   12cd0:	strh	r0, [fp, #-6]
   12cd4:	ldr	r0, [fp, #-4]
   12cd8:	movw	r1, #0
   12cdc:	cmp	r0, r1
   12ce0:	beq	12cec <verify_monster@@Base+0x1d44>
   12ce4:	b	12ce8 <verify_monster@@Base+0x1d40>
   12ce8:	b	12d0c <verify_monster@@Base+0x1d64>
   12cec:	ldr	r0, [pc, #196]	; 12db8 <verify_monster@@Base+0x1e10>
   12cf0:	add	r0, pc, r0
   12cf4:	ldr	r1, [pc, #192]	; 12dbc <verify_monster@@Base+0x1e14>
   12cf8:	add	r1, pc, r1
   12cfc:	ldr	r2, [pc, #188]	; 12dc0 <verify_monster@@Base+0x1e18>
   12d00:	add	r3, pc, r2
   12d04:	movw	r2, #731	; 0x2db
   12d08:	bl	10ea8 <__assert_fail@plt>
   12d0c:	mov	r0, #23
   12d10:	strh	r0, [fp, #-8]
   12d14:	ldr	r0, [fp, #-4]
   12d18:	str	r0, [sp, #16]
   12d1c:	bl	135f4 <main@@Base+0x830>
   12d20:	ldr	r1, [sp, #16]
   12d24:	sub	r0, r1, r0
   12d28:	str	r0, [fp, #-12]
   12d2c:	ldr	r0, [fp, #-12]
   12d30:	bl	13618 <main@@Base+0x854>
   12d34:	ldrh	r1, [fp, #-8]
   12d38:	add	r1, r1, #3
   12d3c:	lsl	r1, r1, #1
   12d40:	cmp	r0, r1
   12d44:	bcc	12d60 <verify_monster@@Base+0x1db8>
   12d48:	ldr	r0, [fp, #-12]
   12d4c:	ldrh	r1, [fp, #-8]
   12d50:	add	r0, r0, r1, lsl #1
   12d54:	add	r0, r0, #4
   12d58:	bl	13618 <main@@Base+0x854>
   12d5c:	strh	r0, [fp, #-6]
   12d60:	ldrh	r0, [fp, #-6]
   12d64:	cmp	r0, #0
   12d68:	beq	12d88 <verify_monster@@Base+0x1de0>
   12d6c:	ldr	r0, [fp, #-4]
   12d70:	ldrh	r1, [fp, #-6]
   12d74:	add	r0, r0, r1
   12d78:	bl	1392c <main@@Base+0xb68>
   12d7c:	str	r0, [sp, #12]
   12d80:	str	r1, [sp, #8]
   12d84:	b	12d9c <verify_monster@@Base+0x1df4>
   12d88:	mov	r0, #0
   12d8c:	mov	r1, r0
   12d90:	str	r1, [sp, #12]
   12d94:	str	r0, [sp, #8]
   12d98:	b	12d9c <verify_monster@@Base+0x1df4>
   12d9c:	ldr	r0, [sp, #8]
   12da0:	ldr	r1, [sp, #12]
   12da4:	str	r0, [sp, #4]
   12da8:	mov	r0, r1
   12dac:	ldr	r1, [sp, #4]
   12db0:	mov	sp, fp
   12db4:	pop	{fp, pc}
   12db8:	andeq	r5, r0, r4, lsl #2
   12dbc:	andeq	r5, r0, r2, lsr #2
   12dc0:	andeq	r5, r0, r1, asr r8

00012dc4 <main@@Base>:
   12dc4:	push	{fp, lr}
   12dc8:	mov	fp, sp
   12dcc:	sub	sp, sp, #40	; 0x28
   12dd0:	movw	r2, #0
   12dd4:	str	r2, [fp, #-4]
   12dd8:	str	r0, [fp, #-8]
   12ddc:	str	r1, [fp, #-12]
   12de0:	ldr	r0, [fp, #-8]
   12de4:	cmp	r0, #1
   12de8:	beq	12e20 <main@@Base+0x5c>
   12dec:	ldr	r0, [fp, #-8]
   12df0:	cmp	r0, #2
   12df4:	beq	12e20 <main@@Base+0x5c>
   12df8:	ldr	r0, [pc, #488]	; 12fe8 <main@@Base+0x224>
   12dfc:	add	r1, pc, r0
   12e00:	ldr	r0, [pc, #484]	; 12fec <main@@Base+0x228>
   12e04:	ldr	r0, [pc, r0]
   12e08:	ldr	r0, [r0]
   12e0c:	bl	10e60 <fprintf@plt>
   12e10:	movw	r1, #1
   12e14:	str	r0, [sp, #8]
   12e18:	mov	r0, r1
   12e1c:	bl	10e54 <exit@plt>
   12e20:	ldr	r0, [fp, #-8]
   12e24:	cmp	r0, #2
   12e28:	bne	12e40 <main@@Base+0x7c>
   12e2c:	ldr	r0, [pc, #388]	; 12fb8 <main@@Base+0x1f4>
   12e30:	ldr	r0, [pc, r0]
   12e34:	ldr	r1, [fp, #-12]
   12e38:	ldr	r1, [r1, #4]
   12e3c:	str	r1, [r0]
   12e40:	ldr	r0, [pc, #372]	; 12fbc <main@@Base+0x1f8>
   12e44:	ldr	r0, [pc, r0]
   12e48:	ldr	r0, [r0]
   12e4c:	movw	r1, #1024	; 0x400
   12e50:	add	r2, sp, #20
   12e54:	bl	12ff0 <main@@Base+0x22c>
   12e58:	str	r0, [sp, #12]
   12e5c:	ldr	r0, [sp, #20]
   12e60:	add	r0, r0, #256	; 0x100
   12e64:	sub	r0, r0, #1
   12e68:	mvn	r1, #255	; 0xff
   12e6c:	and	r1, r0, r1
   12e70:	movw	r0, #256	; 0x100
   12e74:	bl	131d8 <main@@Base+0x414>
   12e78:	str	r0, [sp, #16]
   12e7c:	ldr	r0, [sp, #16]
   12e80:	ldr	r1, [sp, #12]
   12e84:	ldr	r2, [sp, #20]
   12e88:	bl	10e00 <memcpy@plt>
   12e8c:	ldr	r0, [sp, #12]
   12e90:	bl	10df4 <free@plt>
   12e94:	ldr	r0, [sp, #16]
   12e98:	movw	r1, #0
   12e9c:	cmp	r0, r1
   12ea0:	bne	12ee0 <main@@Base+0x11c>
   12ea4:	ldr	r0, [pc, #276]	; 12fc0 <main@@Base+0x1fc>
   12ea8:	add	r1, pc, r0
   12eac:	ldr	r0, [pc, #272]	; 12fc4 <main@@Base+0x200>
   12eb0:	ldr	r0, [pc, r0]
   12eb4:	ldr	r2, [pc, #268]	; 12fc8 <main@@Base+0x204>
   12eb8:	ldr	r2, [pc, r2]
   12ebc:	ldr	r2, [r2]
   12ec0:	ldr	r0, [r0]
   12ec4:	str	r0, [sp, #4]
   12ec8:	mov	r0, r2
   12ecc:	ldr	r2, [sp, #4]
   12ed0:	bl	10e60 <fprintf@plt>
   12ed4:	mvn	r1, #0
   12ed8:	str	r1, [fp, #-4]
   12edc:	b	12fac <main@@Base+0x1e8>
   12ee0:	ldr	r0, [pc, #232]	; 12fd0 <main@@Base+0x20c>
   12ee4:	add	r0, pc, r0
   12ee8:	ldr	r1, [pc, #228]	; 12fd4 <main@@Base+0x210>
   12eec:	ldr	r1, [pc, r1]
   12ef0:	ldr	r2, [sp, #16]
   12ef4:	ldr	r3, [sp, #20]
   12ef8:	ldr	r1, [r1]
   12efc:	str	r1, [sp]
   12f00:	mov	r1, r2
   12f04:	mov	r2, r3
   12f08:	ldr	r3, [sp]
   12f0c:	bl	13254 <main@@Base+0x490>
   12f10:	ldr	r0, [pc, #180]	; 12fcc <main@@Base+0x208>
   12f14:	add	r2, pc, r0
   12f18:	ldr	r0, [sp, #16]
   12f1c:	ldr	r1, [sp, #20]
   12f20:	bl	13448 <main@@Base+0x684>
   12f24:	movw	r1, #0
   12f28:	cmp	r1, r0
   12f2c:	beq	12f54 <main@@Base+0x190>
   12f30:	ldr	r0, [pc, #168]	; 12fe0 <main@@Base+0x21c>
   12f34:	add	r1, pc, r0
   12f38:	ldr	r0, [pc, #164]	; 12fe4 <main@@Base+0x220>
   12f3c:	ldr	r0, [pc, r0]
   12f40:	ldr	r0, [r0]
   12f44:	bl	10e60 <fprintf@plt>
   12f48:	mvn	r1, #0
   12f4c:	str	r1, [fp, #-16]
   12f50:	b	12f9c <main@@Base+0x1d8>
   12f54:	ldr	r0, [sp, #16]
   12f58:	ldr	r1, [sp, #20]
   12f5c:	bl	13484 <main@@Base+0x6c0>
   12f60:	movw	r1, #0
   12f64:	cmp	r1, r0
   12f68:	beq	12f90 <main@@Base+0x1cc>
   12f6c:	ldr	r0, [pc, #100]	; 12fd8 <main@@Base+0x214>
   12f70:	add	r1, pc, r0
   12f74:	ldr	r0, [pc, #96]	; 12fdc <main@@Base+0x218>
   12f78:	ldr	r0, [pc, r0]
   12f7c:	ldr	r0, [r0]
   12f80:	bl	10e60 <fprintf@plt>
   12f84:	mvn	r1, #0
   12f88:	str	r1, [fp, #-16]
   12f8c:	b	12f9c <main@@Base+0x1d8>
   12f90:	ldr	r0, [sp, #16]
   12f94:	bl	10fa8 <verify_monster@@Base>
   12f98:	str	r0, [fp, #-16]
   12f9c:	ldr	r0, [sp, #16]
   12fa0:	bl	10df4 <free@plt>
   12fa4:	ldr	r0, [fp, #-16]
   12fa8:	str	r0, [fp, #-4]
   12fac:	ldr	r0, [fp, #-4]
   12fb0:	mov	sp, fp
   12fb4:	pop	{fp, pc}
   12fb8:	andeq	r6, r1, r8, lsr #4
   12fbc:	andeq	r6, r1, r4, lsl r2
   12fc0:	andeq	r4, r0, r2, lsr #29
   12fc4:	andeq	r6, r1, r8, lsr #3
   12fc8:	muleq	r1, r8, r1
   12fcc:	andeq	r4, r0, fp, asr lr
   12fd0:	andeq	r4, r0, r0, asr #17
   12fd4:	andeq	r6, r1, r4, ror #2
   12fd8:	andeq	r4, r0, fp, lsr #28
   12fdc:	ldrdeq	r6, [r1], -r8
   12fe0:	andeq	r4, r0, r0, asr #28
   12fe4:	andeq	r6, r1, r4, lsl r1
   12fe8:	andeq	r4, r0, lr, lsl #30
   12fec:	andeq	r6, r1, ip, asr #4
   12ff0:	push	{fp, lr}
   12ff4:	mov	fp, sp
   12ff8:	sub	sp, sp, #56	; 0x38
   12ffc:	str	r0, [fp, #-8]
   13000:	str	r1, [fp, #-12]
   13004:	str	r2, [fp, #-16]
   13008:	ldr	r0, [fp, #-16]
   1300c:	movw	r1, #0
   13010:	cmp	r0, r1
   13014:	beq	13024 <main@@Base+0x260>
   13018:	ldr	r0, [fp, #-16]
   1301c:	str	r0, [sp, #12]
   13020:	b	13030 <main@@Base+0x26c>
   13024:	add	r0, sp, #20
   13028:	str	r0, [sp, #12]
   1302c:	b	13030 <main@@Base+0x26c>
   13030:	ldr	r0, [sp, #12]
   13034:	ldr	r1, [pc, #408]	; 131d4 <main@@Base+0x410>
   13038:	add	r1, pc, r1
   1303c:	str	r0, [fp, #-16]
   13040:	ldr	r0, [fp, #-8]
   13044:	bl	10de8 <fopen@plt>
   13048:	str	r0, [fp, #-20]	; 0xffffffec
   1304c:	movw	r0, #0
   13050:	str	r0, [fp, #-24]	; 0xffffffe8
   13054:	str	r0, [sp, #16]
   13058:	ldr	r1, [fp, #-20]	; 0xffffffec
   1305c:	cmp	r1, r0
   13060:	bne	13068 <main@@Base+0x2a4>
   13064:	b	13184 <main@@Base+0x3c0>
   13068:	ldr	r0, [fp, #-20]	; 0xffffffec
   1306c:	movw	r1, #0
   13070:	movw	r2, #2
   13074:	bl	10e90 <fseek@plt>
   13078:	ldr	r1, [fp, #-20]	; 0xffffffec
   1307c:	str	r0, [sp, #8]
   13080:	mov	r0, r1
   13084:	bl	10e0c <ftell@plt>
   13088:	str	r0, [fp, #-24]	; 0xffffffe8
   1308c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13090:	ldr	r1, [fp, #-16]
   13094:	str	r0, [r1]
   13098:	ldr	r0, [fp, #-12]
   1309c:	cmp	r0, #0
   130a0:	bls	130b8 <main@@Base+0x2f4>
   130a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   130a8:	ldr	r1, [fp, #-12]
   130ac:	cmp	r0, r1
   130b0:	bls	130b8 <main@@Base+0x2f4>
   130b4:	b	13184 <main@@Base+0x3c0>
   130b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   130bc:	bl	10e18 <rewind@plt>
   130c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   130c4:	cmp	r0, #0
   130c8:	beq	130d8 <main@@Base+0x314>
   130cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   130d0:	str	r0, [sp, #4]
   130d4:	b	130e4 <main@@Base+0x320>
   130d8:	movw	r0, #1
   130dc:	str	r0, [sp, #4]
   130e0:	b	130e4 <main@@Base+0x320>
   130e4:	ldr	r0, [sp, #4]
   130e8:	bl	10e30 <malloc@plt>
   130ec:	str	r0, [sp, #16]
   130f0:	ldr	r0, [sp, #16]
   130f4:	movw	r1, #0
   130f8:	cmp	r0, r1
   130fc:	bne	13104 <main@@Base+0x340>
   13100:	b	13184 <main@@Base+0x3c0>
   13104:	movw	r0, #0
   13108:	str	r0, [sp, #28]
   1310c:	ldr	r0, [sp, #16]
   13110:	ldr	r1, [sp, #28]
   13114:	add	r0, r0, r1
   13118:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1311c:	ldr	r2, [sp, #28]
   13120:	sub	r2, r1, r2
   13124:	ldr	r3, [fp, #-20]	; 0xffffffec
   13128:	movw	r1, #1
   1312c:	bl	10e24 <fread@plt>
   13130:	str	r0, [sp, #24]
   13134:	cmp	r0, #0
   13138:	beq	13150 <main@@Base+0x38c>
   1313c:	ldr	r0, [sp, #24]
   13140:	ldr	r1, [sp, #28]
   13144:	add	r0, r1, r0
   13148:	str	r0, [sp, #28]
   1314c:	b	1310c <main@@Base+0x348>
   13150:	ldr	r0, [sp, #28]
   13154:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13158:	cmp	r0, r1
   1315c:	beq	13164 <main@@Base+0x3a0>
   13160:	b	13184 <main@@Base+0x3c0>
   13164:	ldr	r0, [fp, #-20]	; 0xffffffec
   13168:	bl	10e84 <fclose@plt>
   1316c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13170:	ldr	r2, [fp, #-16]
   13174:	str	r1, [r2]
   13178:	ldr	r1, [sp, #16]
   1317c:	str	r1, [fp, #-4]
   13180:	b	131c8 <main@@Base+0x404>
   13184:	ldr	r0, [fp, #-20]	; 0xffffffec
   13188:	movw	r1, #0
   1318c:	cmp	r0, r1
   13190:	beq	1319c <main@@Base+0x3d8>
   13194:	ldr	r0, [fp, #-20]	; 0xffffffec
   13198:	bl	10e84 <fclose@plt>
   1319c:	ldr	r0, [sp, #16]
   131a0:	movw	r1, #0
   131a4:	cmp	r0, r1
   131a8:	beq	131b4 <main@@Base+0x3f0>
   131ac:	ldr	r0, [sp, #16]
   131b0:	bl	10df4 <free@plt>
   131b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   131b8:	ldr	r1, [fp, #-16]
   131bc:	str	r0, [r1]
   131c0:	movw	r0, #0
   131c4:	str	r0, [fp, #-4]
   131c8:	ldr	r0, [fp, #-4]
   131cc:	mov	sp, fp
   131d0:	pop	{fp, pc}
   131d4:	andeq	r5, r0, fp, ror #10
   131d8:	push	{fp, lr}
   131dc:	mov	fp, sp
   131e0:	sub	sp, sp, #16
   131e4:	str	r0, [fp, #-4]
   131e8:	str	r1, [sp, #8]
   131ec:	movw	r0, #0
   131f0:	str	r0, [sp]
   131f4:	ldr	r0, [fp, #-4]
   131f8:	cmp	r0, #4
   131fc:	bcs	13208 <main@@Base+0x444>
   13200:	movw	r0, #4
   13204:	str	r0, [fp, #-4]
   13208:	ldr	r1, [fp, #-4]
   1320c:	ldr	r2, [sp, #8]
   13210:	mov	r0, sp
   13214:	bl	10e6c <posix_memalign@plt>
   13218:	str	r0, [sp, #4]
   1321c:	ldr	r0, [sp, #4]
   13220:	cmp	r0, #0
   13224:	beq	13248 <main@@Base+0x484>
   13228:	ldr	r0, [sp]
   1322c:	movw	r1, #0
   13230:	cmp	r0, r1
   13234:	beq	13248 <main@@Base+0x484>
   13238:	ldr	r0, [sp]
   1323c:	bl	10df4 <free@plt>
   13240:	movw	r0, #0
   13244:	str	r0, [sp]
   13248:	ldr	r0, [sp]
   1324c:	mov	sp, fp
   13250:	pop	{fp, pc}
   13254:	push	{fp, lr}
   13258:	mov	fp, sp
   1325c:	sub	sp, sp, #48	; 0x30
   13260:	str	r0, [fp, #-4]
   13264:	str	r1, [fp, #-8]
   13268:	str	r2, [fp, #-12]
   1326c:	str	r3, [fp, #-16]
   13270:	ldr	r0, [fp, #-8]
   13274:	str	r0, [sp, #4]
   13278:	ldr	r0, [fp, #-4]
   1327c:	movw	r1, #0
   13280:	cmp	r0, r1
   13284:	beq	1329c <main@@Base+0x4d8>
   13288:	ldr	r0, [pc, #412]	; 1342c <main@@Base+0x668>
   1328c:	add	r1, pc, r0
   13290:	ldr	r0, [fp, #-16]
   13294:	ldr	r2, [fp, #-4]
   13298:	bl	10e60 <fprintf@plt>
   1329c:	movw	r0, #0
   132a0:	str	r0, [fp, #-20]	; 0xffffffec
   132a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   132a8:	ldr	r1, [fp, #-12]
   132ac:	cmp	r0, r1
   132b0:	bcs	133dc <main@@Base+0x618>
   132b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   132b8:	and	r0, r0, #15
   132bc:	cmp	r0, #0
   132c0:	bne	132fc <main@@Base+0x538>
   132c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   132c8:	cmp	r0, #0
   132cc:	beq	132e4 <main@@Base+0x520>
   132d0:	ldr	r0, [pc, #356]	; 1343c <main@@Base+0x678>
   132d4:	add	r1, pc, r0
   132d8:	add	r2, sp, #11
   132dc:	ldr	r0, [fp, #-16]
   132e0:	bl	10e60 <fprintf@plt>
   132e4:	ldr	r0, [pc, #340]	; 13440 <main@@Base+0x67c>
   132e8:	add	r1, pc, r0
   132ec:	ldr	r0, [fp, #-16]
   132f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   132f4:	bl	10e60 <fprintf@plt>
   132f8:	b	13320 <main@@Base+0x55c>
   132fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   13300:	and	r0, r0, #7
   13304:	cmp	r0, #0
   13308:	bne	1331c <main@@Base+0x558>
   1330c:	ldr	r0, [pc, #292]	; 13438 <main@@Base+0x674>
   13310:	add	r1, pc, r0
   13314:	ldr	r0, [fp, #-16]
   13318:	bl	10e60 <fprintf@plt>
   1331c:	b	13320 <main@@Base+0x55c>
   13320:	ldr	r0, [pc, #284]	; 13444 <main@@Base+0x680>
   13324:	add	r1, pc, r0
   13328:	ldr	r0, [fp, #-16]
   1332c:	ldr	r2, [sp, #4]
   13330:	ldr	r3, [fp, #-20]	; 0xffffffec
   13334:	add	r2, r2, r3
   13338:	ldrb	r2, [r2]
   1333c:	bl	10e60 <fprintf@plt>
   13340:	ldr	r1, [sp, #4]
   13344:	ldr	r2, [fp, #-20]	; 0xffffffec
   13348:	add	r1, r1, r2
   1334c:	ldrb	r1, [r1]
   13350:	cmp	r1, #32
   13354:	blt	13370 <main@@Base+0x5ac>
   13358:	ldr	r0, [sp, #4]
   1335c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13360:	add	r0, r0, r1
   13364:	ldrb	r0, [r0]
   13368:	cmp	r0, #126	; 0x7e
   1336c:	ble	1338c <main@@Base+0x5c8>
   13370:	ldr	r0, [fp, #-20]	; 0xffffffec
   13374:	and	r0, r0, #15
   13378:	add	r1, sp, #11
   1337c:	add	r0, r1, r0
   13380:	movw	r1, #46	; 0x2e
   13384:	strb	r1, [r0]
   13388:	b	133b0 <main@@Base+0x5ec>
   1338c:	ldr	r0, [sp, #4]
   13390:	ldr	r1, [fp, #-20]	; 0xffffffec
   13394:	add	r0, r0, r1
   13398:	ldrb	r0, [r0]
   1339c:	ldr	r1, [fp, #-20]	; 0xffffffec
   133a0:	and	r1, r1, #15
   133a4:	add	r2, sp, #11
   133a8:	add	r1, r2, r1
   133ac:	strb	r0, [r1]
   133b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   133b4:	and	r0, r0, #15
   133b8:	add	r0, r0, #1
   133bc:	add	r1, sp, #11
   133c0:	add	r0, r1, r0
   133c4:	movw	r1, #0
   133c8:	strb	r1, [r0]
   133cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   133d0:	add	r0, r0, #1
   133d4:	str	r0, [fp, #-20]	; 0xffffffec
   133d8:	b	132a4 <main@@Base+0x4e0>
   133dc:	b	133e0 <main@@Base+0x61c>
   133e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   133e4:	and	r0, r0, #15
   133e8:	cmp	r0, #0
   133ec:	beq	13410 <main@@Base+0x64c>
   133f0:	ldr	r0, [pc, #60]	; 13434 <main@@Base+0x670>
   133f4:	add	r1, pc, r0
   133f8:	ldr	r0, [fp, #-16]
   133fc:	bl	10e60 <fprintf@plt>
   13400:	ldr	r1, [fp, #-20]	; 0xffffffec
   13404:	add	r1, r1, #1
   13408:	str	r1, [fp, #-20]	; 0xffffffec
   1340c:	b	133e0 <main@@Base+0x61c>
   13410:	ldr	r0, [pc, #24]	; 13430 <main@@Base+0x66c>
   13414:	add	r1, pc, r0
   13418:	add	r2, sp, #11
   1341c:	ldr	r0, [fp, #-16]
   13420:	bl	10e60 <fprintf@plt>
   13424:	mov	sp, fp
   13428:	pop	{fp, pc}
   1342c:	andeq	r5, r0, sl, lsl r3
   13430:	muleq	r0, r7, r1
   13434:	andeq	r5, r0, fp, asr #3
   13438:			; <UNDEFINED> instruction: 0x000052b1
   1343c:	ldrdeq	r5, [r0], -r7
   13440:	andeq	r5, r0, r9, asr #5
   13444:	muleq	r0, r5, r2
   13448:	push	{fp, lr}
   1344c:	mov	fp, sp
   13450:	sub	sp, sp, #16
   13454:	ldr	r3, [pc, #36]	; 13480 <main@@Base+0x6bc>
   13458:	add	r3, pc, r3
   1345c:	str	r0, [fp, #-4]
   13460:	str	r1, [sp, #8]
   13464:	str	r2, [sp, #4]
   13468:	ldr	r0, [fp, #-4]
   1346c:	ldr	r1, [sp, #8]
   13470:	ldr	r2, [sp, #4]
   13474:	bl	167f8 <flatcc_verify_table_as_root@@Base>
   13478:	mov	sp, fp
   1347c:	pop	{fp, pc}
   13480:	andeq	r0, r0, ip, lsl r5
   13484:	push	{fp, lr}
   13488:	mov	fp, sp
   1348c:	sub	sp, sp, #8
   13490:	ldr	r2, [pc, #36]	; 134bc <main@@Base+0x6f8>
   13494:	add	r2, pc, r2
   13498:	ldr	r3, [pc, #32]	; 134c0 <main@@Base+0x6fc>
   1349c:	add	r3, pc, r3
   134a0:	str	r0, [sp, #4]
   134a4:	str	r1, [sp]
   134a8:	ldr	r0, [sp, #4]
   134ac:	ldr	r1, [sp]
   134b0:	bl	167f8 <flatcc_verify_table_as_root@@Base>
   134b4:	mov	sp, fp
   134b8:	pop	{fp, pc}
   134bc:	ldrdeq	r4, [r0], -fp
   134c0:	ldrdeq	r0, [r0], -r8
   134c4:	push	{fp, lr}
   134c8:	mov	fp, sp
   134cc:	sub	sp, sp, #32
   134d0:	str	r0, [fp, #-8]
   134d4:	str	r1, [fp, #-12]
   134d8:	movw	r0, #0
   134dc:	str	r0, [sp, #12]
   134e0:	ldr	r1, [fp, #-12]
   134e4:	cmp	r1, r0
   134e8:	bne	134f8 <main@@Base+0x734>
   134ec:	movw	r0, #1
   134f0:	str	r0, [fp, #-4]
   134f4:	b	13564 <main@@Base+0x7a0>
   134f8:	add	r0, sp, #12
   134fc:	ldr	r1, [fp, #-12]
   13500:	movw	r2, #4
   13504:	bl	10e78 <strncpy@plt>
   13508:	ldr	r1, [sp, #12]
   1350c:	str	r0, [sp, #8]
   13510:	mov	r0, r1
   13514:	bl	13594 <main@@Base+0x7d0>
   13518:	str	r0, [sp, #12]
   1351c:	ldr	r0, [fp, #-8]
   13520:	add	r0, r0, #4
   13524:	bl	135a8 <main@@Base+0x7e4>
   13528:	str	r0, [sp, #16]
   1352c:	ldr	r0, [sp, #12]
   13530:	cmp	r0, #0
   13534:	movw	r0, #1
   13538:	str	r0, [sp, #4]
   1353c:	beq	13558 <main@@Base+0x794>
   13540:	ldr	r0, [sp, #16]
   13544:	ldr	r1, [sp, #12]
   13548:	cmp	r0, r1
   1354c:	movw	r0, #0
   13550:	moveq	r0, #1
   13554:	str	r0, [sp, #4]
   13558:	ldr	r0, [sp, #4]
   1355c:	and	r0, r0, #1
   13560:	str	r0, [fp, #-4]
   13564:	ldr	r0, [fp, #-4]
   13568:	mov	sp, fp
   1356c:	pop	{fp, pc}
   13570:	push	{fp, lr}
   13574:	mov	fp, sp
   13578:	sub	sp, sp, #8
   1357c:	str	r0, [sp, #4]
   13580:	ldr	r0, [sp, #4]
   13584:	ldr	r0, [r0]
   13588:	bl	135e0 <main@@Base+0x81c>
   1358c:	mov	sp, fp
   13590:	pop	{fp, pc}
   13594:	sub	sp, sp, #4
   13598:	str	r0, [sp]
   1359c:	ldr	r0, [sp]
   135a0:	add	sp, sp, #4
   135a4:	bx	lr
   135a8:	push	{fp, lr}
   135ac:	mov	fp, sp
   135b0:	sub	sp, sp, #8
   135b4:	str	r0, [sp, #4]
   135b8:	ldr	r0, [sp, #4]
   135bc:	ldr	r0, [r0]
   135c0:	bl	135cc <main@@Base+0x808>
   135c4:	mov	sp, fp
   135c8:	pop	{fp, pc}
   135cc:	sub	sp, sp, #4
   135d0:	str	r0, [sp]
   135d4:	ldr	r0, [sp]
   135d8:	add	sp, sp, #4
   135dc:	bx	lr
   135e0:	sub	sp, sp, #4
   135e4:	str	r0, [sp]
   135e8:	ldr	r0, [sp]
   135ec:	add	sp, sp, #4
   135f0:	bx	lr
   135f4:	push	{fp, lr}
   135f8:	mov	fp, sp
   135fc:	sub	sp, sp, #8
   13600:	str	r0, [sp, #4]
   13604:	ldr	r0, [sp, #4]
   13608:	ldr	r0, [r0]
   1360c:	bl	13668 <main@@Base+0x8a4>
   13610:	mov	sp, fp
   13614:	pop	{fp, pc}
   13618:	push	{fp, lr}
   1361c:	mov	fp, sp
   13620:	sub	sp, sp, #8
   13624:	str	r0, [sp, #4]
   13628:	ldr	r0, [sp, #4]
   1362c:	ldrh	r0, [r0]
   13630:	bl	1367c <main@@Base+0x8b8>
   13634:	uxth	r0, r0
   13638:	mov	sp, fp
   1363c:	pop	{fp, pc}
   13640:	push	{fp, lr}
   13644:	mov	fp, sp
   13648:	sub	sp, sp, #8
   1364c:	str	r0, [sp, #4]
   13650:	ldr	r0, [sp, #4]
   13654:	ldrsh	r0, [r0]
   13658:	bl	13690 <main@@Base+0x8cc>
   1365c:	sxth	r0, r0
   13660:	mov	sp, fp
   13664:	pop	{fp, pc}
   13668:	sub	sp, sp, #4
   1366c:	str	r0, [sp]
   13670:	ldr	r0, [sp]
   13674:	add	sp, sp, #4
   13678:	bx	lr
   1367c:	sub	sp, sp, #4
   13680:	strh	r0, [sp, #2]
   13684:	ldrh	r0, [sp, #2]
   13688:	add	sp, sp, #4
   1368c:	bx	lr
   13690:	sub	sp, sp, #4
   13694:	strh	r0, [sp, #2]
   13698:	ldrsh	r0, [sp, #2]
   1369c:	add	sp, sp, #4
   136a0:	bx	lr
   136a4:	push	{fp, lr}
   136a8:	mov	fp, sp
   136ac:	sub	sp, sp, #8
   136b0:	str	r0, [sp, #4]
   136b4:	ldr	r0, [sp, #4]
   136b8:	vldr	s0, [r0]
   136bc:	bl	136c8 <main@@Base+0x904>
   136c0:	mov	sp, fp
   136c4:	pop	{fp, pc}
   136c8:	sub	sp, sp, #8
   136cc:	vstr	s0, [sp, #4]
   136d0:	vldr	s0, [sp, #4]
   136d4:	vstr	s0, [sp]
   136d8:	ldr	r0, [sp]
   136dc:	str	r0, [sp]
   136e0:	vldr	s0, [sp]
   136e4:	add	sp, sp, #8
   136e8:	bx	lr
   136ec:	push	{fp, lr}
   136f0:	mov	fp, sp
   136f4:	sub	sp, sp, #8
   136f8:	str	r0, [sp, #4]
   136fc:	ldr	r0, [sp, #4]
   13700:	vldr	d0, [r0]
   13704:	bl	13710 <main@@Base+0x94c>
   13708:	mov	sp, fp
   1370c:	pop	{fp, pc}
   13710:	sub	sp, sp, #16
   13714:	vstr	d0, [sp, #8]
   13718:	vldr	d16, [sp, #8]
   1371c:	vstr	d16, [sp]
   13720:	vldr	d0, [sp]
   13724:	add	sp, sp, #16
   13728:	bx	lr
   1372c:	push	{fp, lr}
   13730:	mov	fp, sp
   13734:	sub	sp, sp, #8
   13738:	str	r0, [sp, #4]
   1373c:	ldr	r0, [sp, #4]
   13740:	ldrsb	r0, [r0]
   13744:	bl	13754 <main@@Base+0x990>
   13748:	sxtb	r0, r0
   1374c:	mov	sp, fp
   13750:	pop	{fp, pc}
   13754:	sub	sp, sp, #4
   13758:	strb	r0, [sp, #3]
   1375c:	ldrsb	r0, [sp, #3]
   13760:	add	sp, sp, #4
   13764:	bx	lr
   13768:	push	{fp, lr}
   1376c:	mov	fp, sp
   13770:	sub	sp, sp, #8
   13774:	str	r0, [sp, #4]
   13778:	ldr	r0, [sp, #4]
   1377c:	ldrsb	r0, [r0]
   13780:	bl	13790 <main@@Base+0x9cc>
   13784:	sxtb	r0, r0
   13788:	mov	sp, fp
   1378c:	pop	{fp, pc}
   13790:	sub	sp, sp, #4
   13794:	strb	r0, [sp, #3]
   13798:	ldrsb	r0, [sp, #3]
   1379c:	add	sp, sp, #4
   137a0:	bx	lr
   137a4:	push	{fp, lr}
   137a8:	mov	fp, sp
   137ac:	sub	sp, sp, #8
   137b0:	str	r0, [sp, #4]
   137b4:	ldr	r0, [sp, #4]
   137b8:	movw	r1, #0
   137bc:	cmp	r0, r1
   137c0:	beq	137dc <main@@Base+0xa18>
   137c4:	ldr	r0, [sp, #4]
   137c8:	mvn	r1, #3
   137cc:	add	r0, r0, r1
   137d0:	bl	13570 <main@@Base+0x7ac>
   137d4:	str	r0, [sp]
   137d8:	b	137e8 <main@@Base+0xa24>
   137dc:	movw	r0, #0
   137e0:	str	r0, [sp]
   137e4:	b	137e8 <main@@Base+0xa24>
   137e8:	ldr	r0, [sp]
   137ec:	mov	sp, fp
   137f0:	pop	{fp, pc}
   137f4:	push	{fp, lr}
   137f8:	mov	fp, sp
   137fc:	sub	sp, sp, #8
   13800:	str	r0, [sp, #4]
   13804:	ldr	r0, [sp, #4]
   13808:	ldrb	r0, [r0]
   1380c:	bl	1381c <main@@Base+0xa58>
   13810:	and	r0, r0, #255	; 0xff
   13814:	mov	sp, fp
   13818:	pop	{fp, pc}
   1381c:	sub	sp, sp, #4
   13820:	strb	r0, [sp, #3]
   13824:	ldrb	r0, [sp, #3]
   13828:	add	sp, sp, #4
   1382c:	bx	lr
   13830:	push	{fp, lr}
   13834:	mov	fp, sp
   13838:	sub	sp, sp, #8
   1383c:	str	r0, [sp, #4]
   13840:	ldr	r0, [sp, #4]
   13844:	ldrb	r0, [r0]
   13848:	bl	13858 <main@@Base+0xa94>
   1384c:	and	r0, r0, #255	; 0xff
   13850:	mov	sp, fp
   13854:	pop	{fp, pc}
   13858:	sub	sp, sp, #4
   1385c:	strb	r0, [sp, #3]
   13860:	ldrb	r0, [sp, #3]
   13864:	add	sp, sp, #4
   13868:	bx	lr
   1386c:	push	{fp, lr}
   13870:	mov	fp, sp
   13874:	sub	sp, sp, #8
   13878:	str	r0, [sp, #4]
   1387c:	ldr	r0, [sp, #4]
   13880:	ldr	r0, [r0]
   13884:	bl	13890 <main@@Base+0xacc>
   13888:	mov	sp, fp
   1388c:	pop	{fp, pc}
   13890:	sub	sp, sp, #4
   13894:	str	r0, [sp]
   13898:	ldr	r0, [sp]
   1389c:	add	sp, sp, #4
   138a0:	bx	lr
   138a4:	push	{fp, lr}
   138a8:	mov	fp, sp
   138ac:	sub	sp, sp, #8
   138b0:	str	r0, [sp, #4]
   138b4:	ldr	r0, [sp, #4]
   138b8:	ldr	r0, [r0]
   138bc:	bl	138c8 <main@@Base+0xb04>
   138c0:	mov	sp, fp
   138c4:	pop	{fp, pc}
   138c8:	sub	sp, sp, #4
   138cc:	str	r0, [sp]
   138d0:	ldr	r0, [sp]
   138d4:	add	sp, sp, #4
   138d8:	bx	lr
   138dc:	push	{fp, lr}
   138e0:	mov	fp, sp
   138e4:	sub	sp, sp, #8
   138e8:	str	r0, [sp, #4]
   138ec:	ldr	r0, [sp, #4]
   138f0:	ldr	r1, [r0]
   138f4:	ldr	r0, [r0, #4]
   138f8:	str	r0, [sp]
   138fc:	mov	r0, r1
   13900:	ldr	r1, [sp]
   13904:	bl	13910 <main@@Base+0xb4c>
   13908:	mov	sp, fp
   1390c:	pop	{fp, pc}
   13910:	sub	sp, sp, #8
   13914:	str	r0, [sp]
   13918:	str	r1, [sp, #4]
   1391c:	ldr	r0, [sp]
   13920:	ldr	r1, [sp, #4]
   13924:	add	sp, sp, #8
   13928:	bx	lr
   1392c:	push	{fp, lr}
   13930:	mov	fp, sp
   13934:	sub	sp, sp, #8
   13938:	str	r0, [sp, #4]
   1393c:	ldr	r0, [sp, #4]
   13940:	ldr	r1, [r0]
   13944:	ldr	r0, [r0, #4]
   13948:	str	r0, [sp]
   1394c:	mov	r0, r1
   13950:	ldr	r1, [sp]
   13954:	bl	13960 <main@@Base+0xb9c>
   13958:	mov	sp, fp
   1395c:	pop	{fp, pc}
   13960:	sub	sp, sp, #8
   13964:	str	r0, [sp]
   13968:	str	r1, [sp, #4]
   1396c:	ldr	r0, [sp]
   13970:	ldr	r1, [sp, #4]
   13974:	add	sp, sp, #8
   13978:	bx	lr
   1397c:	push	{fp, lr}
   13980:	mov	fp, sp
   13984:	sub	sp, sp, #56	; 0x38
   13988:	str	r0, [fp, #-8]
   1398c:	ldr	r0, [fp, #-8]
   13990:	movw	r1, #0
   13994:	uxth	r1, r1
   13998:	movw	r2, #32
   1399c:	movw	r3, #16
   139a0:	uxth	r3, r3
   139a4:	bl	1503c <flatcc_verify_field@@Base>
   139a8:	str	r0, [fp, #-12]
   139ac:	cmp	r0, #0
   139b0:	beq	139c0 <main@@Base+0xbfc>
   139b4:	ldr	r0, [fp, #-12]
   139b8:	str	r0, [fp, #-4]
   139bc:	b	1414c <main@@Base+0x1388>
   139c0:	ldr	r0, [fp, #-8]
   139c4:	movw	r1, #2
   139c8:	uxth	r2, r1
   139cc:	str	r1, [fp, #-16]
   139d0:	mov	r1, r2
   139d4:	movw	r2, #2
   139d8:	ldr	r3, [fp, #-16]
   139dc:	uxth	r3, r3
   139e0:	bl	1503c <flatcc_verify_field@@Base>
   139e4:	str	r0, [fp, #-12]
   139e8:	cmp	r0, #0
   139ec:	beq	139fc <main@@Base+0xc38>
   139f0:	ldr	r0, [fp, #-12]
   139f4:	str	r0, [fp, #-4]
   139f8:	b	1414c <main@@Base+0x1388>
   139fc:	ldr	r0, [fp, #-8]
   13a00:	movw	r1, #1
   13a04:	uxth	r1, r1
   13a08:	movw	r2, #2
   13a0c:	movw	r3, #2
   13a10:	uxth	r3, r3
   13a14:	bl	1503c <flatcc_verify_field@@Base>
   13a18:	str	r0, [fp, #-12]
   13a1c:	cmp	r0, #0
   13a20:	beq	13a30 <main@@Base+0xc6c>
   13a24:	ldr	r0, [fp, #-12]
   13a28:	str	r0, [fp, #-4]
   13a2c:	b	1414c <main@@Base+0x1388>
   13a30:	ldr	r0, [fp, #-8]
   13a34:	movw	r1, #3
   13a38:	uxth	r1, r1
   13a3c:	movw	r2, #1
   13a40:	bl	15248 <flatcc_verify_string_field@@Base>
   13a44:	str	r0, [fp, #-12]
   13a48:	cmp	r0, #0
   13a4c:	beq	13a5c <main@@Base+0xc98>
   13a50:	ldr	r0, [fp, #-12]
   13a54:	str	r0, [fp, #-4]
   13a58:	b	1414c <main@@Base+0x1388>
   13a5c:	ldr	r0, [fp, #-8]
   13a60:	movw	r1, #6
   13a64:	uxth	r1, r1
   13a68:	movw	r2, #1
   13a6c:	movw	r3, #1
   13a70:	uxth	r3, r3
   13a74:	bl	1503c <flatcc_verify_field@@Base>
   13a78:	str	r0, [fp, #-12]
   13a7c:	cmp	r0, #0
   13a80:	beq	13a90 <main@@Base+0xccc>
   13a84:	ldr	r0, [fp, #-12]
   13a88:	str	r0, [fp, #-4]
   13a8c:	b	1414c <main@@Base+0x1388>
   13a90:	ldr	r0, [fp, #-8]
   13a94:	movw	r1, #5
   13a98:	uxth	r1, r1
   13a9c:	movw	r2, #0
   13aa0:	movw	r3, #1
   13aa4:	movw	ip, #1
   13aa8:	uxth	ip, ip
   13aac:	str	ip, [sp]
   13ab0:	mvn	ip, #0
   13ab4:	str	ip, [sp, #4]
   13ab8:	bl	155a4 <flatcc_verify_vector_field@@Base>
   13abc:	str	r0, [fp, #-12]
   13ac0:	cmp	r0, #0
   13ac4:	beq	13ad4 <main@@Base+0xd10>
   13ac8:	ldr	r0, [fp, #-12]
   13acc:	str	r0, [fp, #-4]
   13ad0:	b	1414c <main@@Base+0x1388>
   13ad4:	ldr	r0, [pc, #1660]	; 14158 <main@@Base+0x1394>
   13ad8:	add	r3, pc, r0
   13adc:	ldr	r0, [fp, #-8]
   13ae0:	movw	r1, #11
   13ae4:	uxth	r1, r1
   13ae8:	movw	r2, #0
   13aec:	bl	15e1c <flatcc_verify_table_vector_field@@Base>
   13af0:	str	r0, [fp, #-12]
   13af4:	cmp	r0, #0
   13af8:	beq	13b08 <main@@Base+0xd44>
   13afc:	ldr	r0, [fp, #-12]
   13b00:	str	r0, [fp, #-4]
   13b04:	b	1414c <main@@Base+0x1388>
   13b08:	ldr	r0, [fp, #-8]
   13b0c:	movw	r1, #10
   13b10:	uxth	r1, r1
   13b14:	movw	r2, #0
   13b18:	bl	157d8 <flatcc_verify_string_vector_field@@Base>
   13b1c:	str	r0, [fp, #-12]
   13b20:	cmp	r0, #0
   13b24:	beq	13b34 <main@@Base+0xd70>
   13b28:	ldr	r0, [fp, #-12]
   13b2c:	str	r0, [fp, #-4]
   13b30:	b	1414c <main@@Base+0x1388>
   13b34:	ldr	r0, [fp, #-8]
   13b38:	movw	r1, #28
   13b3c:	uxth	r1, r1
   13b40:	movw	r2, #0
   13b44:	bl	157d8 <flatcc_verify_string_vector_field@@Base>
   13b48:	str	r0, [fp, #-12]
   13b4c:	cmp	r0, #0
   13b50:	beq	13b60 <main@@Base+0xd9c>
   13b54:	ldr	r0, [fp, #-12]
   13b58:	str	r0, [fp, #-4]
   13b5c:	b	1414c <main@@Base+0x1388>
   13b60:	ldr	r0, [fp, #-8]
   13b64:	movw	r1, #24
   13b68:	uxth	r1, r1
   13b6c:	movw	r2, #0
   13b70:	movw	r3, #1
   13b74:	movw	ip, #1
   13b78:	uxth	ip, ip
   13b7c:	str	ip, [sp]
   13b80:	mvn	ip, #0
   13b84:	str	ip, [sp, #4]
   13b88:	bl	155a4 <flatcc_verify_vector_field@@Base>
   13b8c:	str	r0, [fp, #-12]
   13b90:	cmp	r0, #0
   13b94:	beq	13ba4 <main@@Base+0xde0>
   13b98:	ldr	r0, [fp, #-12]
   13b9c:	str	r0, [fp, #-4]
   13ba0:	b	1414c <main@@Base+0x1388>
   13ba4:	ldr	r0, [pc, #1456]	; 1415c <main@@Base+0x1398>
   13ba8:	ldr	r1, [fp, #-8]
   13bac:	str	r0, [fp, #-20]	; 0xffffffec
   13bb0:	mov	r0, r1
   13bb4:	movw	r1, #29
   13bb8:	uxth	r1, r1
   13bbc:	movw	r2, #0
   13bc0:	movw	r3, #8
   13bc4:	movw	ip, #4
   13bc8:	uxth	ip, ip
   13bcc:	str	ip, [sp]
   13bd0:	ldr	ip, [fp, #-20]	; 0xffffffec
   13bd4:	str	ip, [sp, #4]
   13bd8:	bl	155a4 <flatcc_verify_vector_field@@Base>
   13bdc:	str	r0, [fp, #-12]
   13be0:	cmp	r0, #0
   13be4:	beq	13bf4 <main@@Base+0xe30>
   13be8:	ldr	r0, [fp, #-12]
   13bec:	str	r0, [fp, #-4]
   13bf0:	b	1414c <main@@Base+0x1388>
   13bf4:	ldr	r0, [pc, #1380]	; 14160 <main@@Base+0x139c>
   13bf8:	add	r3, pc, r0
   13bfc:	ldr	r0, [fp, #-8]
   13c00:	movw	r1, #12
   13c04:	uxth	r1, r1
   13c08:	movw	r2, #0
   13c0c:	bl	15a58 <flatcc_verify_table_field@@Base>
   13c10:	str	r0, [fp, #-12]
   13c14:	cmp	r0, #0
   13c18:	beq	13c28 <main@@Base+0xe64>
   13c1c:	ldr	r0, [fp, #-12]
   13c20:	str	r0, [fp, #-4]
   13c24:	b	1414c <main@@Base+0x1388>
   13c28:	ldr	r0, [pc, #1332]	; 14164 <main@@Base+0x13a0>
   13c2c:	add	r3, pc, r0
   13c30:	ldr	r0, [fp, #-8]
   13c34:	movw	r1, #8
   13c38:	uxth	r1, r1
   13c3c:	movw	r2, #0
   13c40:	bl	16ca4 <flatcc_verify_union_field@@Base>
   13c44:	str	r0, [fp, #-12]
   13c48:	cmp	r0, #0
   13c4c:	beq	13c5c <main@@Base+0xe98>
   13c50:	ldr	r0, [fp, #-12]
   13c54:	str	r0, [fp, #-4]
   13c58:	b	1414c <main@@Base+0x1388>
   13c5c:	ldr	r0, [pc, #1284]	; 14168 <main@@Base+0x13a4>
   13c60:	ldr	r1, [fp, #-8]
   13c64:	str	r0, [fp, #-24]	; 0xffffffe8
   13c68:	mov	r0, r1
   13c6c:	movw	r1, #9
   13c70:	uxth	r1, r1
   13c74:	movw	r2, #0
   13c78:	movw	r3, #4
   13c7c:	movw	ip, #2
   13c80:	uxth	ip, ip
   13c84:	str	ip, [sp]
   13c88:	ldr	ip, [fp, #-24]	; 0xffffffe8
   13c8c:	str	ip, [sp, #4]
   13c90:	bl	155a4 <flatcc_verify_vector_field@@Base>
   13c94:	str	r0, [fp, #-12]
   13c98:	cmp	r0, #0
   13c9c:	beq	13cac <main@@Base+0xee8>
   13ca0:	ldr	r0, [fp, #-12]
   13ca4:	str	r0, [fp, #-4]
   13ca8:	b	1414c <main@@Base+0x1388>
   13cac:	ldr	r0, [pc, #1204]	; 14168 <main@@Base+0x13a4>
   13cb0:	ldr	r1, [fp, #-8]
   13cb4:	str	r0, [sp, #28]
   13cb8:	mov	r0, r1
   13cbc:	movw	r1, #31
   13cc0:	uxth	r1, r1
   13cc4:	movw	r2, #0
   13cc8:	movw	r3, #4
   13ccc:	movw	ip, #2
   13cd0:	uxth	ip, ip
   13cd4:	str	ip, [sp]
   13cd8:	ldr	ip, [sp, #28]
   13cdc:	str	ip, [sp, #4]
   13ce0:	bl	155a4 <flatcc_verify_vector_field@@Base>
   13ce4:	str	r0, [fp, #-12]
   13ce8:	cmp	r0, #0
   13cec:	beq	13cfc <main@@Base+0xf38>
   13cf0:	ldr	r0, [fp, #-12]
   13cf4:	str	r0, [fp, #-4]
   13cf8:	b	1414c <main@@Base+0x1388>
   13cfc:	ldr	r0, [pc, #1128]	; 1416c <main@@Base+0x13a8>
   13d00:	add	r0, pc, r0
   13d04:	ldr	r1, [fp, #-8]
   13d08:	str	r0, [sp, #24]
   13d0c:	mov	r0, r1
   13d10:	movw	r1, #13
   13d14:	uxth	r1, r1
   13d18:	movw	r2, #0
   13d1c:	str	r2, [sp, #20]
   13d20:	ldr	r3, [sp, #20]
   13d24:	movw	ip, #1
   13d28:	uxth	ip, ip
   13d2c:	str	ip, [sp]
   13d30:	ldr	ip, [sp, #24]
   13d34:	str	ip, [sp, #4]
   13d38:	bl	16afc <flatcc_verify_table_as_nested_root@@Base>
   13d3c:	str	r0, [fp, #-12]
   13d40:	cmp	r0, #0
   13d44:	beq	13d54 <main@@Base+0xf90>
   13d48:	ldr	r0, [fp, #-12]
   13d4c:	str	r0, [fp, #-4]
   13d50:	b	1414c <main@@Base+0x1388>
   13d54:	ldr	r0, [pc, #1044]	; 14170 <main@@Base+0x13ac>
   13d58:	add	r3, pc, r0
   13d5c:	ldr	r0, [fp, #-8]
   13d60:	movw	r1, #14
   13d64:	uxth	r1, r1
   13d68:	movw	r2, #0
   13d6c:	bl	15a58 <flatcc_verify_table_field@@Base>
   13d70:	str	r0, [fp, #-12]
   13d74:	cmp	r0, #0
   13d78:	beq	13d88 <main@@Base+0xfc4>
   13d7c:	ldr	r0, [fp, #-12]
   13d80:	str	r0, [fp, #-4]
   13d84:	b	1414c <main@@Base+0x1388>
   13d88:	ldr	r0, [fp, #-8]
   13d8c:	movw	r1, #15
   13d90:	uxth	r1, r1
   13d94:	movw	r2, #1
   13d98:	movw	r3, #1
   13d9c:	uxth	r3, r3
   13da0:	bl	1503c <flatcc_verify_field@@Base>
   13da4:	str	r0, [fp, #-12]
   13da8:	cmp	r0, #0
   13dac:	beq	13dbc <main@@Base+0xff8>
   13db0:	ldr	r0, [fp, #-12]
   13db4:	str	r0, [fp, #-4]
   13db8:	b	1414c <main@@Base+0x1388>
   13dbc:	ldr	r0, [fp, #-8]
   13dc0:	movw	r1, #16
   13dc4:	uxth	r1, r1
   13dc8:	movw	r2, #4
   13dcc:	movw	r3, #4
   13dd0:	uxth	r3, r3
   13dd4:	bl	1503c <flatcc_verify_field@@Base>
   13dd8:	str	r0, [fp, #-12]
   13ddc:	cmp	r0, #0
   13de0:	beq	13df0 <main@@Base+0x102c>
   13de4:	ldr	r0, [fp, #-12]
   13de8:	str	r0, [fp, #-4]
   13dec:	b	1414c <main@@Base+0x1388>
   13df0:	ldr	r0, [fp, #-8]
   13df4:	movw	r1, #17
   13df8:	uxth	r1, r1
   13dfc:	movw	r2, #4
   13e00:	movw	r3, #4
   13e04:	uxth	r3, r3
   13e08:	bl	1503c <flatcc_verify_field@@Base>
   13e0c:	str	r0, [fp, #-12]
   13e10:	cmp	r0, #0
   13e14:	beq	13e24 <main@@Base+0x1060>
   13e18:	ldr	r0, [fp, #-12]
   13e1c:	str	r0, [fp, #-4]
   13e20:	b	1414c <main@@Base+0x1388>
   13e24:	ldr	r0, [fp, #-8]
   13e28:	movw	r1, #18
   13e2c:	uxth	r1, r1
   13e30:	movw	r2, #8
   13e34:	movw	r3, #8
   13e38:	uxth	r3, r3
   13e3c:	bl	1503c <flatcc_verify_field@@Base>
   13e40:	str	r0, [fp, #-12]
   13e44:	cmp	r0, #0
   13e48:	beq	13e58 <main@@Base+0x1094>
   13e4c:	ldr	r0, [fp, #-12]
   13e50:	str	r0, [fp, #-4]
   13e54:	b	1414c <main@@Base+0x1388>
   13e58:	ldr	r0, [fp, #-8]
   13e5c:	movw	r1, #19
   13e60:	uxth	r1, r1
   13e64:	movw	r2, #8
   13e68:	movw	r3, #8
   13e6c:	uxth	r3, r3
   13e70:	bl	1503c <flatcc_verify_field@@Base>
   13e74:	str	r0, [fp, #-12]
   13e78:	cmp	r0, #0
   13e7c:	beq	13e8c <main@@Base+0x10c8>
   13e80:	ldr	r0, [fp, #-12]
   13e84:	str	r0, [fp, #-4]
   13e88:	b	1414c <main@@Base+0x1388>
   13e8c:	ldr	r0, [fp, #-8]
   13e90:	movw	r1, #20
   13e94:	uxth	r1, r1
   13e98:	movw	r2, #4
   13e9c:	movw	r3, #4
   13ea0:	uxth	r3, r3
   13ea4:	bl	1503c <flatcc_verify_field@@Base>
   13ea8:	str	r0, [fp, #-12]
   13eac:	cmp	r0, #0
   13eb0:	beq	13ec0 <main@@Base+0x10fc>
   13eb4:	ldr	r0, [fp, #-12]
   13eb8:	str	r0, [fp, #-4]
   13ebc:	b	1414c <main@@Base+0x1388>
   13ec0:	ldr	r0, [fp, #-8]
   13ec4:	movw	r1, #21
   13ec8:	uxth	r1, r1
   13ecc:	movw	r2, #4
   13ed0:	movw	r3, #4
   13ed4:	uxth	r3, r3
   13ed8:	bl	1503c <flatcc_verify_field@@Base>
   13edc:	str	r0, [fp, #-12]
   13ee0:	cmp	r0, #0
   13ee4:	beq	13ef4 <main@@Base+0x1130>
   13ee8:	ldr	r0, [fp, #-12]
   13eec:	str	r0, [fp, #-4]
   13ef0:	b	1414c <main@@Base+0x1388>
   13ef4:	ldr	r0, [fp, #-8]
   13ef8:	movw	r1, #22
   13efc:	uxth	r1, r1
   13f00:	movw	r2, #8
   13f04:	movw	r3, #8
   13f08:	uxth	r3, r3
   13f0c:	bl	1503c <flatcc_verify_field@@Base>
   13f10:	str	r0, [fp, #-12]
   13f14:	cmp	r0, #0
   13f18:	beq	13f28 <main@@Base+0x1164>
   13f1c:	ldr	r0, [fp, #-12]
   13f20:	str	r0, [fp, #-4]
   13f24:	b	1414c <main@@Base+0x1388>
   13f28:	ldr	r0, [fp, #-8]
   13f2c:	movw	r1, #23
   13f30:	uxth	r1, r1
   13f34:	movw	r2, #8
   13f38:	movw	r3, #8
   13f3c:	uxth	r3, r3
   13f40:	bl	1503c <flatcc_verify_field@@Base>
   13f44:	str	r0, [fp, #-12]
   13f48:	cmp	r0, #0
   13f4c:	beq	13f5c <main@@Base+0x1198>
   13f50:	ldr	r0, [fp, #-12]
   13f54:	str	r0, [fp, #-4]
   13f58:	b	1414c <main@@Base+0x1388>
   13f5c:	ldr	r0, [fp, #-8]
   13f60:	movw	r1, #25
   13f64:	uxth	r1, r1
   13f68:	movw	r2, #4
   13f6c:	movw	r3, #4
   13f70:	uxth	r3, r3
   13f74:	bl	1503c <flatcc_verify_field@@Base>
   13f78:	str	r0, [fp, #-12]
   13f7c:	cmp	r0, #0
   13f80:	beq	13f90 <main@@Base+0x11cc>
   13f84:	ldr	r0, [fp, #-12]
   13f88:	str	r0, [fp, #-4]
   13f8c:	b	1414c <main@@Base+0x1388>
   13f90:	ldr	r0, [fp, #-8]
   13f94:	movw	r1, #26
   13f98:	uxth	r1, r1
   13f9c:	movw	r2, #4
   13fa0:	movw	r3, #4
   13fa4:	uxth	r3, r3
   13fa8:	bl	1503c <flatcc_verify_field@@Base>
   13fac:	str	r0, [fp, #-12]
   13fb0:	cmp	r0, #0
   13fb4:	beq	13fc4 <main@@Base+0x1200>
   13fb8:	ldr	r0, [fp, #-12]
   13fbc:	str	r0, [fp, #-4]
   13fc0:	b	1414c <main@@Base+0x1388>
   13fc4:	ldr	r0, [fp, #-8]
   13fc8:	movw	r1, #27
   13fcc:	uxth	r1, r1
   13fd0:	movw	r2, #4
   13fd4:	movw	r3, #4
   13fd8:	uxth	r3, r3
   13fdc:	bl	1503c <flatcc_verify_field@@Base>
   13fe0:	str	r0, [fp, #-12]
   13fe4:	cmp	r0, #0
   13fe8:	beq	13ff8 <main@@Base+0x1234>
   13fec:	ldr	r0, [fp, #-12]
   13ff0:	str	r0, [fp, #-4]
   13ff4:	b	1414c <main@@Base+0x1388>
   13ff8:	ldr	r0, [fp, #-8]
   13ffc:	movw	r1, #30
   14000:	uxth	r1, r1
   14004:	movw	r2, #0
   14008:	movw	r3, #1
   1400c:	movw	ip, #1
   14010:	uxth	ip, ip
   14014:	str	ip, [sp]
   14018:	mvn	ip, #0
   1401c:	str	ip, [sp, #4]
   14020:	bl	155a4 <flatcc_verify_vector_field@@Base>
   14024:	str	r0, [fp, #-12]
   14028:	cmp	r0, #0
   1402c:	beq	1403c <main@@Base+0x1278>
   14030:	ldr	r0, [fp, #-12]
   14034:	str	r0, [fp, #-4]
   14038:	b	1414c <main@@Base+0x1388>
   1403c:	ldr	r0, [pc, #280]	; 1415c <main@@Base+0x1398>
   14040:	ldr	r1, [fp, #-8]
   14044:	str	r0, [sp, #16]
   14048:	mov	r0, r1
   1404c:	movw	r1, #32
   14050:	uxth	r1, r1
   14054:	movw	r2, #0
   14058:	movw	r3, #8
   1405c:	movw	ip, #8
   14060:	uxth	ip, ip
   14064:	str	ip, [sp]
   14068:	ldr	ip, [sp, #16]
   1406c:	str	ip, [sp, #4]
   14070:	bl	155a4 <flatcc_verify_vector_field@@Base>
   14074:	str	r0, [fp, #-12]
   14078:	cmp	r0, #0
   1407c:	beq	1408c <main@@Base+0x12c8>
   14080:	ldr	r0, [fp, #-12]
   14084:	str	r0, [fp, #-4]
   14088:	b	1414c <main@@Base+0x1388>
   1408c:	ldr	r0, [pc, #200]	; 1415c <main@@Base+0x1398>
   14090:	ldr	r1, [fp, #-8]
   14094:	str	r0, [sp, #12]
   14098:	mov	r0, r1
   1409c:	movw	r1, #33	; 0x21
   140a0:	uxth	r1, r1
   140a4:	movw	r2, #0
   140a8:	movw	r3, #8
   140ac:	movw	ip, #8
   140b0:	uxth	ip, ip
   140b4:	str	ip, [sp]
   140b8:	ldr	ip, [sp, #12]
   140bc:	str	ip, [sp, #4]
   140c0:	bl	155a4 <flatcc_verify_vector_field@@Base>
   140c4:	str	r0, [fp, #-12]
   140c8:	cmp	r0, #0
   140cc:	beq	140dc <main@@Base+0x1318>
   140d0:	ldr	r0, [fp, #-12]
   140d4:	str	r0, [fp, #-4]
   140d8:	b	1414c <main@@Base+0x1388>
   140dc:	ldr	r0, [pc, #144]	; 14174 <main@@Base+0x13b0>
   140e0:	add	r3, pc, r0
   140e4:	ldr	r0, [fp, #-8]
   140e8:	movw	r1, #34	; 0x22
   140ec:	uxth	r1, r1
   140f0:	movw	r2, #0
   140f4:	bl	15a58 <flatcc_verify_table_field@@Base>
   140f8:	str	r0, [fp, #-12]
   140fc:	cmp	r0, #0
   14100:	beq	14110 <main@@Base+0x134c>
   14104:	ldr	r0, [fp, #-12]
   14108:	str	r0, [fp, #-4]
   1410c:	b	1414c <main@@Base+0x1388>
   14110:	ldr	r0, [pc, #96]	; 14178 <main@@Base+0x13b4>
   14114:	add	r3, pc, r0
   14118:	ldr	r0, [fp, #-8]
   1411c:	movw	r1, #35	; 0x23
   14120:	uxth	r1, r1
   14124:	movw	r2, #0
   14128:	bl	15a58 <flatcc_verify_table_field@@Base>
   1412c:	str	r0, [fp, #-12]
   14130:	cmp	r0, #0
   14134:	beq	14144 <main@@Base+0x1380>
   14138:	ldr	r0, [fp, #-12]
   1413c:	str	r0, [fp, #-4]
   14140:	b	1414c <main@@Base+0x1388>
   14144:	movw	r0, #0
   14148:	str	r0, [fp, #-4]
   1414c:	ldr	r0, [fp, #-4]
   14150:	mov	sp, fp
   14154:	pop	{fp, pc}
   14158:			; <UNDEFINED> instruction: 0xfffffe9c
   1415c:	svcne	0x00ffffff
   14160:			; <UNDEFINED> instruction: 0xfffffd7c
   14164:	andeq	r0, r0, r8, asr #10
   14168:	svccc	0x00ffffff
   1416c:			; <UNDEFINED> instruction: 0xfffffc74
   14170:	andeq	r0, r0, r8, ror #9
   14174:	andeq	r0, r0, r0, lsr #4
   14178:	andeq	r0, r0, r0, lsl #4
   1417c:	push	{fp, lr}
   14180:	mov	fp, sp
   14184:	sub	sp, sp, #16
   14188:	str	r0, [sp, #8]
   1418c:	ldr	r0, [sp, #8]
   14190:	ldrb	r0, [r0, #12]
   14194:	sub	r0, r0, #1
   14198:	cmp	r0, #3
   1419c:	str	r0, [sp, #4]
   141a0:	bhi	14224 <main@@Base+0x1460>
   141a4:	add	r0, pc, #8
   141a8:	ldr	r1, [sp, #4]
   141ac:	ldr	r2, [r0, r1, lsl #2]
   141b0:	add	pc, r0, r2
   141b4:	andeq	r0, r0, r0, lsl r0
   141b8:	andeq	r0, r0, r8, lsr #32
   141bc:	andeq	r0, r0, r0, asr #32
   141c0:	andeq	r0, r0, r8, asr r0
   141c4:	ldr	r0, [pc, #120]	; 14244 <main@@Base+0x1480>
   141c8:	add	r1, pc, r0
   141cc:	ldr	r0, [sp, #8]
   141d0:	bl	1617c <flatcc_verify_union_table@@Base>
   141d4:	str	r0, [fp, #-4]
   141d8:	b	1422c <main@@Base+0x1468>
   141dc:	ldr	r0, [pc, #92]	; 14240 <main@@Base+0x147c>
   141e0:	add	r1, pc, r0
   141e4:	ldr	r0, [sp, #8]
   141e8:	bl	1617c <flatcc_verify_union_table@@Base>
   141ec:	str	r0, [fp, #-4]
   141f0:	b	1422c <main@@Base+0x1468>
   141f4:	ldr	r0, [pc, #64]	; 1423c <main@@Base+0x1478>
   141f8:	add	r1, pc, r0
   141fc:	ldr	r0, [sp, #8]
   14200:	bl	1617c <flatcc_verify_union_table@@Base>
   14204:	str	r0, [fp, #-4]
   14208:	b	1422c <main@@Base+0x1468>
   1420c:	ldr	r0, [pc, #36]	; 14238 <main@@Base+0x1474>
   14210:	add	r1, pc, r0
   14214:	ldr	r0, [sp, #8]
   14218:	bl	1617c <flatcc_verify_union_table@@Base>
   1421c:	str	r0, [fp, #-4]
   14220:	b	1422c <main@@Base+0x1468>
   14224:	movw	r0, #0
   14228:	str	r0, [fp, #-4]
   1422c:	ldr	r0, [fp, #-4]
   14230:	mov	sp, fp
   14234:	pop	{fp, pc}
   14238:	andeq	r0, r0, r4, lsr #6
   1423c:	andeq	r0, r0, r8, lsr #6
   14240:	andeq	r0, r0, r4, asr #4
   14244:			; <UNDEFINED> instruction: 0xfffff7ac
   14248:	push	{fp, lr}
   1424c:	mov	fp, sp
   14250:	sub	sp, sp, #16
   14254:	str	r0, [sp, #8]
   14258:	ldr	r0, [sp, #8]
   1425c:	movw	r1, #0
   14260:	uxth	r1, r1
   14264:	movw	r2, #0
   14268:	bl	15248 <flatcc_verify_string_field@@Base>
   1426c:	str	r0, [sp, #4]
   14270:	cmp	r0, #0
   14274:	beq	14284 <main@@Base+0x14c0>
   14278:	ldr	r0, [sp, #4]
   1427c:	str	r0, [fp, #-4]
   14280:	b	142fc <main@@Base+0x1538>
   14284:	ldr	r0, [sp, #8]
   14288:	movw	r1, #1
   1428c:	uxth	r1, r1
   14290:	movw	r2, #8
   14294:	movw	r3, #8
   14298:	uxth	r3, r3
   1429c:	bl	1503c <flatcc_verify_field@@Base>
   142a0:	str	r0, [sp, #4]
   142a4:	cmp	r0, #0
   142a8:	beq	142b8 <main@@Base+0x14f4>
   142ac:	ldr	r0, [sp, #4]
   142b0:	str	r0, [fp, #-4]
   142b4:	b	142fc <main@@Base+0x1538>
   142b8:	ldr	r0, [sp, #8]
   142bc:	movw	r1, #2
   142c0:	uxth	r2, r1
   142c4:	str	r1, [sp]
   142c8:	mov	r1, r2
   142cc:	movw	r2, #2
   142d0:	ldr	r3, [sp]
   142d4:	uxth	r3, r3
   142d8:	bl	1503c <flatcc_verify_field@@Base>
   142dc:	str	r0, [sp, #4]
   142e0:	cmp	r0, #0
   142e4:	beq	142f4 <main@@Base+0x1530>
   142e8:	ldr	r0, [sp, #4]
   142ec:	str	r0, [fp, #-4]
   142f0:	b	142fc <main@@Base+0x1538>
   142f4:	movw	r0, #0
   142f8:	str	r0, [fp, #-4]
   142fc:	ldr	r0, [fp, #-4]
   14300:	mov	sp, fp
   14304:	pop	{fp, pc}
   14308:	sub	sp, sp, #4
   1430c:	str	r0, [sp]
   14310:	movw	r0, #0
   14314:	add	sp, sp, #4
   14318:	bx	lr
   1431c:	push	{fp, lr}
   14320:	mov	fp, sp
   14324:	sub	sp, sp, #32
   14328:	str	r0, [fp, #-8]
   1432c:	ldr	r0, [fp, #-8]
   14330:	movw	r1, #0
   14334:	uxth	r1, r1
   14338:	movw	r2, #0
   1433c:	movw	r3, #1
   14340:	movw	ip, #1
   14344:	uxth	ip, ip
   14348:	str	ip, [sp]
   1434c:	mvn	ip, #0
   14350:	str	ip, [sp, #4]
   14354:	bl	155a4 <flatcc_verify_vector_field@@Base>
   14358:	str	r0, [fp, #-12]
   1435c:	cmp	r0, #0
   14360:	beq	14370 <main@@Base+0x15ac>
   14364:	ldr	r0, [fp, #-12]
   14368:	str	r0, [fp, #-4]
   1436c:	b	1441c <main@@Base+0x1658>
   14370:	ldr	r0, [fp, #-8]
   14374:	movw	r1, #1
   14378:	uxth	r2, r1
   1437c:	str	r1, [sp, #16]
   14380:	mov	r1, r2
   14384:	movw	r2, #0
   14388:	movw	r3, #1
   1438c:	ldr	ip, [sp, #16]
   14390:	uxth	lr, ip
   14394:	str	lr, [sp]
   14398:	mvn	lr, #0
   1439c:	str	lr, [sp, #4]
   143a0:	bl	155a4 <flatcc_verify_vector_field@@Base>
   143a4:	str	r0, [fp, #-12]
   143a8:	cmp	r0, #0
   143ac:	beq	143bc <main@@Base+0x15f8>
   143b0:	ldr	r0, [fp, #-12]
   143b4:	str	r0, [fp, #-4]
   143b8:	b	1441c <main@@Base+0x1658>
   143bc:	ldr	r0, [pc, #100]	; 14428 <main@@Base+0x1664>
   143c0:	add	r0, pc, r0
   143c4:	ldr	r1, [fp, #-8]
   143c8:	str	r0, [sp, #12]
   143cc:	mov	r0, r1
   143d0:	movw	r1, #2
   143d4:	uxth	r1, r1
   143d8:	movw	r2, #0
   143dc:	str	r2, [sp, #8]
   143e0:	ldr	r3, [sp, #8]
   143e4:	movw	ip, #1
   143e8:	uxth	ip, ip
   143ec:	str	ip, [sp]
   143f0:	ldr	ip, [sp, #12]
   143f4:	str	ip, [sp, #4]
   143f8:	bl	16afc <flatcc_verify_table_as_nested_root@@Base>
   143fc:	str	r0, [fp, #-12]
   14400:	cmp	r0, #0
   14404:	beq	14414 <main@@Base+0x1650>
   14408:	ldr	r0, [fp, #-12]
   1440c:	str	r0, [fp, #-4]
   14410:	b	1441c <main@@Base+0x1658>
   14414:	movw	r0, #0
   14418:	str	r0, [fp, #-4]
   1441c:	ldr	r0, [fp, #-4]
   14420:	mov	sp, fp
   14424:	pop	{fp, pc}
   14428:			; <UNDEFINED> instruction: 0xfffff5b4
   1442c:	push	{fp, lr}
   14430:	mov	fp, sp
   14434:	sub	sp, sp, #16
   14438:	str	r0, [sp, #8]
   1443c:	ldr	r0, [sp, #8]
   14440:	movw	r1, #0
   14444:	uxth	r1, r1
   14448:	movw	r2, #1
   1444c:	movw	r3, #1
   14450:	uxth	r3, r3
   14454:	bl	1503c <flatcc_verify_field@@Base>
   14458:	str	r0, [sp, #4]
   1445c:	cmp	r0, #0
   14460:	beq	14470 <main@@Base+0x16ac>
   14464:	ldr	r0, [sp, #4]
   14468:	str	r0, [fp, #-4]
   1446c:	b	1451c <main@@Base+0x1758>
   14470:	ldr	r0, [sp, #8]
   14474:	movw	r1, #1
   14478:	uxth	r2, r1
   1447c:	str	r1, [sp]
   14480:	mov	r1, r2
   14484:	movw	r2, #1
   14488:	ldr	r3, [sp]
   1448c:	uxth	r3, r3
   14490:	bl	1503c <flatcc_verify_field@@Base>
   14494:	str	r0, [sp, #4]
   14498:	cmp	r0, #0
   1449c:	beq	144ac <main@@Base+0x16e8>
   144a0:	ldr	r0, [sp, #4]
   144a4:	str	r0, [fp, #-4]
   144a8:	b	1451c <main@@Base+0x1758>
   144ac:	ldr	r0, [sp, #8]
   144b0:	movw	r1, #2
   144b4:	uxth	r1, r1
   144b8:	movw	r2, #1
   144bc:	movw	r3, #1
   144c0:	uxth	r3, r3
   144c4:	bl	1503c <flatcc_verify_field@@Base>
   144c8:	str	r0, [sp, #4]
   144cc:	cmp	r0, #0
   144d0:	beq	144e0 <main@@Base+0x171c>
   144d4:	ldr	r0, [sp, #4]
   144d8:	str	r0, [fp, #-4]
   144dc:	b	1451c <main@@Base+0x1758>
   144e0:	ldr	r0, [sp, #8]
   144e4:	movw	r1, #3
   144e8:	uxth	r1, r1
   144ec:	movw	r2, #1
   144f0:	movw	r3, #1
   144f4:	uxth	r3, r3
   144f8:	bl	1503c <flatcc_verify_field@@Base>
   144fc:	str	r0, [sp, #4]
   14500:	cmp	r0, #0
   14504:	beq	14514 <main@@Base+0x1750>
   14508:	ldr	r0, [sp, #4]
   1450c:	str	r0, [fp, #-4]
   14510:	b	1451c <main@@Base+0x1758>
   14514:	movw	r0, #0
   14518:	str	r0, [fp, #-4]
   1451c:	ldr	r0, [fp, #-4]
   14520:	mov	sp, fp
   14524:	pop	{fp, pc}
   14528:	sub	sp, sp, #4
   1452c:	str	r0, [sp]
   14530:	movw	r0, #0
   14534:	add	sp, sp, #4
   14538:	bx	lr
   1453c:	push	{fp, lr}
   14540:	mov	fp, sp
   14544:	sub	sp, sp, #16
   14548:	ldr	r1, [pc, #172]	; 145fc <main@@Base+0x1838>
   1454c:	add	r3, pc, r1
   14550:	str	r0, [sp, #8]
   14554:	ldr	r0, [sp, #8]
   14558:	movw	r1, #0
   1455c:	uxth	r1, r1
   14560:	movw	r2, #0
   14564:	bl	15a58 <flatcc_verify_table_field@@Base>
   14568:	str	r0, [sp, #4]
   1456c:	cmp	r0, #0
   14570:	beq	14580 <main@@Base+0x17bc>
   14574:	ldr	r0, [sp, #4]
   14578:	str	r0, [fp, #-4]
   1457c:	b	145f0 <main@@Base+0x182c>
   14580:	ldr	r0, [pc, #120]	; 14600 <main@@Base+0x183c>
   14584:	add	r3, pc, r0
   14588:	ldr	r0, [sp, #8]
   1458c:	movw	r1, #1
   14590:	uxth	r1, r1
   14594:	movw	r2, #0
   14598:	bl	15a58 <flatcc_verify_table_field@@Base>
   1459c:	str	r0, [sp, #4]
   145a0:	cmp	r0, #0
   145a4:	beq	145b4 <main@@Base+0x17f0>
   145a8:	ldr	r0, [sp, #4]
   145ac:	str	r0, [fp, #-4]
   145b0:	b	145f0 <main@@Base+0x182c>
   145b4:	ldr	r0, [pc, #72]	; 14604 <main@@Base+0x1840>
   145b8:	add	r3, pc, r0
   145bc:	ldr	r0, [sp, #8]
   145c0:	movw	r1, #3
   145c4:	uxth	r1, r1
   145c8:	movw	r2, #0
   145cc:	bl	16f9c <flatcc_verify_union_vector_field@@Base>
   145d0:	str	r0, [sp, #4]
   145d4:	cmp	r0, #0
   145d8:	beq	145e8 <main@@Base+0x1824>
   145dc:	ldr	r0, [sp, #4]
   145e0:	str	r0, [fp, #-4]
   145e4:	b	145f0 <main@@Base+0x182c>
   145e8:	movw	r0, #0
   145ec:	str	r0, [fp, #-4]
   145f0:	ldr	r0, [fp, #-4]
   145f4:	mov	sp, fp
   145f8:	pop	{fp, pc}
   145fc:	strheq	r0, [r0], -r4
   14600:	andeq	r0, r0, r8, asr #2
   14604:			; <UNDEFINED> instruction: 0xfffffbbc
   14608:	push	{fp, lr}
   1460c:	mov	fp, sp
   14610:	sub	sp, sp, #16
   14614:	ldr	r1, [pc, #172]	; 146c8 <main@@Base+0x1904>
   14618:	add	r3, pc, r1
   1461c:	str	r0, [sp, #8]
   14620:	ldr	r0, [sp, #8]
   14624:	movw	r1, #0
   14628:	uxth	r1, r1
   1462c:	movw	r2, #0
   14630:	bl	15a58 <flatcc_verify_table_field@@Base>
   14634:	str	r0, [sp, #4]
   14638:	cmp	r0, #0
   1463c:	beq	1464c <main@@Base+0x1888>
   14640:	ldr	r0, [sp, #4]
   14644:	str	r0, [fp, #-4]
   14648:	b	146bc <main@@Base+0x18f8>
   1464c:	ldr	r0, [pc, #120]	; 146cc <main@@Base+0x1908>
   14650:	add	r3, pc, r0
   14654:	ldr	r0, [sp, #8]
   14658:	movw	r1, #1
   1465c:	uxth	r1, r1
   14660:	movw	r2, #0
   14664:	bl	15a58 <flatcc_verify_table_field@@Base>
   14668:	str	r0, [sp, #4]
   1466c:	cmp	r0, #0
   14670:	beq	14680 <main@@Base+0x18bc>
   14674:	ldr	r0, [sp, #4]
   14678:	str	r0, [fp, #-4]
   1467c:	b	146bc <main@@Base+0x18f8>
   14680:	ldr	r0, [pc, #72]	; 146d0 <main@@Base+0x190c>
   14684:	add	r3, pc, r0
   14688:	ldr	r0, [sp, #8]
   1468c:	movw	r1, #2
   14690:	uxth	r1, r1
   14694:	movw	r2, #0
   14698:	bl	15a58 <flatcc_verify_table_field@@Base>
   1469c:	str	r0, [sp, #4]
   146a0:	cmp	r0, #0
   146a4:	beq	146b4 <main@@Base+0x18f0>
   146a8:	ldr	r0, [sp, #4]
   146ac:	str	r0, [fp, #-4]
   146b0:	b	146bc <main@@Base+0x18f8>
   146b4:	movw	r0, #0
   146b8:	str	r0, [fp, #-4]
   146bc:	ldr	r0, [fp, #-4]
   146c0:	mov	sp, fp
   146c4:	pop	{fp, pc}
   146c8:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   146cc:	muleq	r0, r8, r3
   146d0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   146d4:	push	{fp, lr}
   146d8:	mov	fp, sp
   146dc:	sub	sp, sp, #16
   146e0:	ldr	r1, [pc, #276]	; 147fc <main@@Base+0x1a38>
   146e4:	add	r3, pc, r1
   146e8:	str	r0, [sp, #8]
   146ec:	ldr	r0, [sp, #8]
   146f0:	movw	r1, #1
   146f4:	uxth	r1, r1
   146f8:	movw	r2, #0
   146fc:	bl	16ca4 <flatcc_verify_union_field@@Base>
   14700:	str	r0, [sp, #4]
   14704:	cmp	r0, #0
   14708:	beq	14718 <main@@Base+0x1954>
   1470c:	ldr	r0, [sp, #4]
   14710:	str	r0, [fp, #-4]
   14714:	b	147f0 <main@@Base+0x1a2c>
   14718:	ldr	r0, [pc, #224]	; 14800 <main@@Base+0x1a3c>
   1471c:	add	r3, pc, r0
   14720:	ldr	r0, [sp, #8]
   14724:	movw	r1, #3
   14728:	uxth	r1, r1
   1472c:	movw	r2, #0
   14730:	bl	16ca4 <flatcc_verify_union_field@@Base>
   14734:	str	r0, [sp, #4]
   14738:	cmp	r0, #0
   1473c:	beq	1474c <main@@Base+0x1988>
   14740:	ldr	r0, [sp, #4]
   14744:	str	r0, [fp, #-4]
   14748:	b	147f0 <main@@Base+0x1a2c>
   1474c:	ldr	r0, [pc, #176]	; 14804 <main@@Base+0x1a40>
   14750:	add	r3, pc, r0
   14754:	ldr	r0, [sp, #8]
   14758:	movw	r1, #5
   1475c:	uxth	r1, r1
   14760:	movw	r2, #0
   14764:	bl	16ca4 <flatcc_verify_union_field@@Base>
   14768:	str	r0, [sp, #4]
   1476c:	cmp	r0, #0
   14770:	beq	14780 <main@@Base+0x19bc>
   14774:	ldr	r0, [sp, #4]
   14778:	str	r0, [fp, #-4]
   1477c:	b	147f0 <main@@Base+0x1a2c>
   14780:	ldr	r0, [pc, #128]	; 14808 <main@@Base+0x1a44>
   14784:	add	r3, pc, r0
   14788:	ldr	r0, [sp, #8]
   1478c:	movw	r1, #7
   14790:	uxth	r1, r1
   14794:	movw	r2, #0
   14798:	bl	16ca4 <flatcc_verify_union_field@@Base>
   1479c:	str	r0, [sp, #4]
   147a0:	cmp	r0, #0
   147a4:	beq	147b4 <main@@Base+0x19f0>
   147a8:	ldr	r0, [sp, #4]
   147ac:	str	r0, [fp, #-4]
   147b0:	b	147f0 <main@@Base+0x1a2c>
   147b4:	ldr	r0, [pc, #80]	; 1480c <main@@Base+0x1a48>
   147b8:	add	r3, pc, r0
   147bc:	ldr	r0, [sp, #8]
   147c0:	movw	r1, #9
   147c4:	uxth	r1, r1
   147c8:	movw	r2, #0
   147cc:	bl	16f9c <flatcc_verify_union_vector_field@@Base>
   147d0:	str	r0, [sp, #4]
   147d4:	cmp	r0, #0
   147d8:	beq	147e8 <main@@Base+0x1a24>
   147dc:	ldr	r0, [sp, #4]
   147e0:	str	r0, [fp, #-4]
   147e4:	b	147f0 <main@@Base+0x1a2c>
   147e8:	movw	r0, #0
   147ec:	str	r0, [fp, #-4]
   147f0:	ldr	r0, [fp, #-4]
   147f4:	mov	sp, fp
   147f8:	pop	{fp, pc}
   147fc:	andeq	r0, r0, ip, lsl r4
   14800:	andeq	r0, r0, r4, ror #7
   14804:			; <UNDEFINED> instruction: 0x000003b0
   14808:	andeq	r0, r0, ip, ror r3
   1480c:	andeq	r0, r0, r8, asr #6
   14810:	push	{fp, lr}
   14814:	mov	fp, sp
   14818:	sub	sp, sp, #16
   1481c:	str	r0, [sp, #8]
   14820:	ldr	r0, [sp, #8]
   14824:	movw	r1, #0
   14828:	uxth	r1, r1
   1482c:	movw	r2, #0
   14830:	bl	15248 <flatcc_verify_string_field@@Base>
   14834:	str	r0, [sp, #4]
   14838:	cmp	r0, #0
   1483c:	beq	1484c <main@@Base+0x1a88>
   14840:	ldr	r0, [sp, #4]
   14844:	str	r0, [fp, #-4]
   14848:	b	149e4 <main@@Base+0x1c20>
   1484c:	ldr	r0, [sp, #8]
   14850:	movw	r1, #1
   14854:	uxth	r1, r1
   14858:	movw	r2, #4
   1485c:	movw	r3, #4
   14860:	uxth	r3, r3
   14864:	bl	1503c <flatcc_verify_field@@Base>
   14868:	str	r0, [sp, #4]
   1486c:	cmp	r0, #0
   14870:	beq	14880 <main@@Base+0x1abc>
   14874:	ldr	r0, [sp, #4]
   14878:	str	r0, [fp, #-4]
   1487c:	b	149e4 <main@@Base+0x1c20>
   14880:	ldr	r0, [sp, #8]
   14884:	movw	r1, #2
   14888:	uxth	r1, r1
   1488c:	movw	r2, #0
   14890:	bl	15248 <flatcc_verify_string_field@@Base>
   14894:	str	r0, [sp, #4]
   14898:	cmp	r0, #0
   1489c:	beq	148ac <main@@Base+0x1ae8>
   148a0:	ldr	r0, [sp, #4]
   148a4:	str	r0, [fp, #-4]
   148a8:	b	149e4 <main@@Base+0x1c20>
   148ac:	ldr	r0, [sp, #8]
   148b0:	movw	r1, #3
   148b4:	uxth	r1, r1
   148b8:	movw	r2, #8
   148bc:	movw	r3, #8
   148c0:	uxth	r3, r3
   148c4:	bl	1503c <flatcc_verify_field@@Base>
   148c8:	str	r0, [sp, #4]
   148cc:	cmp	r0, #0
   148d0:	beq	148e0 <main@@Base+0x1b1c>
   148d4:	ldr	r0, [sp, #4]
   148d8:	str	r0, [fp, #-4]
   148dc:	b	149e4 <main@@Base+0x1c20>
   148e0:	ldr	r0, [sp, #8]
   148e4:	movw	r1, #4
   148e8:	uxth	r1, r1
   148ec:	movw	r2, #0
   148f0:	bl	15248 <flatcc_verify_string_field@@Base>
   148f4:	str	r0, [sp, #4]
   148f8:	cmp	r0, #0
   148fc:	beq	1490c <main@@Base+0x1b48>
   14900:	ldr	r0, [sp, #4]
   14904:	str	r0, [fp, #-4]
   14908:	b	149e4 <main@@Base+0x1c20>
   1490c:	ldr	r0, [sp, #8]
   14910:	movw	r1, #5
   14914:	uxth	r1, r1
   14918:	movw	r2, #8
   1491c:	movw	r3, #8
   14920:	uxth	r3, r3
   14924:	bl	1503c <flatcc_verify_field@@Base>
   14928:	str	r0, [sp, #4]
   1492c:	cmp	r0, #0
   14930:	beq	14940 <main@@Base+0x1b7c>
   14934:	ldr	r0, [sp, #4]
   14938:	str	r0, [fp, #-4]
   1493c:	b	149e4 <main@@Base+0x1c20>
   14940:	ldr	r0, [sp, #8]
   14944:	movw	r1, #6
   14948:	uxth	r1, r1
   1494c:	movw	r2, #4
   14950:	movw	r3, #4
   14954:	uxth	r3, r3
   14958:	bl	1503c <flatcc_verify_field@@Base>
   1495c:	str	r0, [sp, #4]
   14960:	cmp	r0, #0
   14964:	beq	14974 <main@@Base+0x1bb0>
   14968:	ldr	r0, [sp, #4]
   1496c:	str	r0, [fp, #-4]
   14970:	b	149e4 <main@@Base+0x1c20>
   14974:	ldr	r0, [sp, #8]
   14978:	movw	r1, #7
   1497c:	uxth	r1, r1
   14980:	movw	r2, #8
   14984:	movw	r3, #8
   14988:	uxth	r3, r3
   1498c:	bl	1503c <flatcc_verify_field@@Base>
   14990:	str	r0, [sp, #4]
   14994:	cmp	r0, #0
   14998:	beq	149a8 <main@@Base+0x1be4>
   1499c:	ldr	r0, [sp, #4]
   149a0:	str	r0, [fp, #-4]
   149a4:	b	149e4 <main@@Base+0x1c20>
   149a8:	ldr	r0, [sp, #8]
   149ac:	movw	r1, #8
   149b0:	uxth	r1, r1
   149b4:	movw	r2, #4
   149b8:	movw	r3, #4
   149bc:	uxth	r3, r3
   149c0:	bl	1503c <flatcc_verify_field@@Base>
   149c4:	str	r0, [sp, #4]
   149c8:	cmp	r0, #0
   149cc:	beq	149dc <main@@Base+0x1c18>
   149d0:	ldr	r0, [sp, #4]
   149d4:	str	r0, [fp, #-4]
   149d8:	b	149e4 <main@@Base+0x1c20>
   149dc:	movw	r0, #0
   149e0:	str	r0, [fp, #-4]
   149e4:	ldr	r0, [fp, #-4]
   149e8:	mov	sp, fp
   149ec:	pop	{fp, pc}
   149f0:	push	{fp, lr}
   149f4:	mov	fp, sp
   149f8:	sub	sp, sp, #16
   149fc:	str	r0, [sp, #8]
   14a00:	ldr	r0, [sp, #8]
   14a04:	movw	r1, #0
   14a08:	uxth	r1, r1
   14a0c:	movw	r2, #8
   14a10:	movw	r3, #8
   14a14:	uxth	r3, r3
   14a18:	bl	1503c <flatcc_verify_field@@Base>
   14a1c:	str	r0, [sp, #4]
   14a20:	cmp	r0, #0
   14a24:	beq	14a34 <main@@Base+0x1c70>
   14a28:	ldr	r0, [sp, #4]
   14a2c:	str	r0, [fp, #-4]
   14a30:	b	14a70 <main@@Base+0x1cac>
   14a34:	ldr	r0, [sp, #8]
   14a38:	movw	r1, #1
   14a3c:	uxth	r1, r1
   14a40:	movw	r2, #4
   14a44:	movw	r3, #4
   14a48:	uxth	r3, r3
   14a4c:	bl	1503c <flatcc_verify_field@@Base>
   14a50:	str	r0, [sp, #4]
   14a54:	cmp	r0, #0
   14a58:	beq	14a68 <main@@Base+0x1ca4>
   14a5c:	ldr	r0, [sp, #4]
   14a60:	str	r0, [fp, #-4]
   14a64:	b	14a70 <main@@Base+0x1cac>
   14a68:	movw	r0, #0
   14a6c:	str	r0, [fp, #-4]
   14a70:	ldr	r0, [fp, #-4]
   14a74:	mov	sp, fp
   14a78:	pop	{fp, pc}
   14a7c:	push	{fp, lr}
   14a80:	mov	fp, sp
   14a84:	sub	sp, sp, #16
   14a88:	str	r0, [sp, #8]
   14a8c:	ldr	r0, [sp, #8]
   14a90:	movw	r1, #0
   14a94:	uxth	r1, r1
   14a98:	movw	r2, #8
   14a9c:	movw	r3, #8
   14aa0:	uxth	r3, r3
   14aa4:	bl	1503c <flatcc_verify_field@@Base>
   14aa8:	str	r0, [sp, #4]
   14aac:	cmp	r0, #0
   14ab0:	beq	14ac0 <main@@Base+0x1cfc>
   14ab4:	ldr	r0, [sp, #4]
   14ab8:	str	r0, [fp, #-4]
   14abc:	b	14afc <main@@Base+0x1d38>
   14ac0:	ldr	r0, [sp, #8]
   14ac4:	movw	r1, #1
   14ac8:	uxth	r1, r1
   14acc:	movw	r2, #4
   14ad0:	movw	r3, #4
   14ad4:	uxth	r3, r3
   14ad8:	bl	1503c <flatcc_verify_field@@Base>
   14adc:	str	r0, [sp, #4]
   14ae0:	cmp	r0, #0
   14ae4:	beq	14af4 <main@@Base+0x1d30>
   14ae8:	ldr	r0, [sp, #4]
   14aec:	str	r0, [fp, #-4]
   14af0:	b	14afc <main@@Base+0x1d38>
   14af4:	movw	r0, #0
   14af8:	str	r0, [fp, #-4]
   14afc:	ldr	r0, [fp, #-4]
   14b00:	mov	sp, fp
   14b04:	pop	{fp, pc}
   14b08:	push	{fp, lr}
   14b0c:	mov	fp, sp
   14b10:	sub	sp, sp, #16
   14b14:	str	r0, [sp, #8]
   14b18:	ldr	r0, [sp, #8]
   14b1c:	ldrb	r0, [r0, #12]
   14b20:	mov	r1, r0
   14b24:	cmp	r0, #2
   14b28:	str	r1, [sp, #4]
   14b2c:	beq	14b84 <main@@Base+0x1dc0>
   14b30:	b	14b34 <main@@Base+0x1d70>
   14b34:	ldr	r0, [sp, #4]
   14b38:	cmp	r0, #8
   14b3c:	beq	14b9c <main@@Base+0x1dd8>
   14b40:	b	14b44 <main@@Base+0x1d80>
   14b44:	ldr	r0, [sp, #4]
   14b48:	cmp	r0, #9
   14b4c:	beq	14bb8 <main@@Base+0x1df4>
   14b50:	b	14b54 <main@@Base+0x1d90>
   14b54:	ldr	r0, [sp, #4]
   14b58:	cmp	r0, #10
   14b5c:	beq	14bd4 <main@@Base+0x1e10>
   14b60:	b	14b64 <main@@Base+0x1da0>
   14b64:	ldr	r0, [sp, #4]
   14b68:	cmp	r0, #11
   14b6c:	beq	14bf0 <main@@Base+0x1e2c>
   14b70:	b	14b74 <main@@Base+0x1db0>
   14b74:	ldr	r0, [sp, #4]
   14b78:	cmp	r0, #255	; 0xff
   14b7c:	beq	14c00 <main@@Base+0x1e3c>
   14b80:	b	14c10 <main@@Base+0x1e4c>
   14b84:	ldr	r0, [pc, #152]	; 14c24 <main@@Base+0x1e60>
   14b88:	add	r1, pc, r0
   14b8c:	ldr	r0, [sp, #8]
   14b90:	bl	1617c <flatcc_verify_union_table@@Base>
   14b94:	str	r0, [fp, #-4]
   14b98:	b	14c18 <main@@Base+0x1e54>
   14b9c:	ldr	r0, [sp, #8]
   14ba0:	movw	r1, #2
   14ba4:	movw	r2, #2
   14ba8:	uxth	r2, r2
   14bac:	bl	161d0 <flatcc_verify_union_struct@@Base>
   14bb0:	str	r0, [fp, #-4]
   14bb4:	b	14c18 <main@@Base+0x1e54>
   14bb8:	ldr	r0, [sp, #8]
   14bbc:	movw	r1, #4
   14bc0:	movw	r2, #4
   14bc4:	uxth	r2, r2
   14bc8:	bl	161d0 <flatcc_verify_union_struct@@Base>
   14bcc:	str	r0, [fp, #-4]
   14bd0:	b	14c18 <main@@Base+0x1e54>
   14bd4:	ldr	r0, [sp, #8]
   14bd8:	movw	r1, #4
   14bdc:	movw	r2, #4
   14be0:	uxth	r2, r2
   14be4:	bl	161d0 <flatcc_verify_union_struct@@Base>
   14be8:	str	r0, [fp, #-4]
   14bec:	b	14c18 <main@@Base+0x1e54>
   14bf0:	ldr	r0, [sp, #8]
   14bf4:	bl	16358 <flatcc_verify_union_string@@Base>
   14bf8:	str	r0, [fp, #-4]
   14bfc:	b	14c18 <main@@Base+0x1e54>
   14c00:	ldr	r0, [sp, #8]
   14c04:	bl	16358 <flatcc_verify_union_string@@Base>
   14c08:	str	r0, [fp, #-4]
   14c0c:	b	14c18 <main@@Base+0x1e54>
   14c10:	movw	r0, #0
   14c14:	str	r0, [fp, #-4]
   14c18:	ldr	r0, [fp, #-4]
   14c1c:	mov	sp, fp
   14c20:	pop	{fp, pc}
   14c24:	muleq	r0, r8, r0
   14c28:	push	{fp, lr}
   14c2c:	mov	fp, sp
   14c30:	sub	sp, sp, #16
   14c34:	str	r0, [sp, #8]
   14c38:	ldr	r0, [sp, #8]
   14c3c:	movw	r1, #0
   14c40:	uxth	r1, r1
   14c44:	movw	r2, #4
   14c48:	movw	r3, #4
   14c4c:	uxth	r3, r3
   14c50:	bl	1503c <flatcc_verify_field@@Base>
   14c54:	str	r0, [sp, #4]
   14c58:	cmp	r0, #0
   14c5c:	beq	14c6c <main@@Base+0x1ea8>
   14c60:	ldr	r0, [sp, #4]
   14c64:	str	r0, [fp, #-4]
   14c68:	b	14c74 <main@@Base+0x1eb0>
   14c6c:	movw	r0, #0
   14c70:	str	r0, [fp, #-4]
   14c74:	ldr	r0, [fp, #-4]
   14c78:	mov	sp, fp
   14c7c:	pop	{fp, pc}

00014c80 <flatcc_verify_error_string@@Base>:
   14c80:	sub	sp, sp, #12
   14c84:	str	r0, [sp, #4]
   14c88:	ldr	r0, [sp, #4]
   14c8c:	cmp	r0, #36	; 0x24
   14c90:	str	r0, [sp]
   14c94:	bhi	14f8c <flatcc_verify_error_string@@Base+0x30c>
   14c98:	add	r0, pc, #8
   14c9c:	ldr	r1, [sp]
   14ca0:	ldr	r2, [r0, r1, lsl #2]
   14ca4:	add	pc, r0, r2
   14ca8:	muleq	r0, r4, r0
   14cac:	andeq	r0, r0, r4, lsr #1
   14cb0:	strheq	r0, [r0], -r4
   14cb4:	andeq	r0, r0, r4, asr #1
   14cb8:	ldrdeq	r0, [r0], -r4
   14cbc:	andeq	r0, r0, r4, ror #1
   14cc0:	strdeq	r0, [r0], -r4
   14cc4:	andeq	r0, r0, r4, lsl #2
   14cc8:	andeq	r0, r0, r4, lsl r1
   14ccc:	andeq	r0, r0, r4, lsr #2
   14cd0:	andeq	r0, r0, r4, lsr r1
   14cd4:	andeq	r0, r0, r4, asr #2
   14cd8:	andeq	r0, r0, r4, asr r1
   14cdc:	andeq	r0, r0, r4, ror #2
   14ce0:	andeq	r0, r0, r4, ror r1
   14ce4:	andeq	r0, r0, r4, lsl #3
   14ce8:	muleq	r0, r4, r1
   14cec:	andeq	r0, r0, r4, lsr #3
   14cf0:			; <UNDEFINED> instruction: 0x000001b4
   14cf4:	andeq	r0, r0, r4, asr #3
   14cf8:	ldrdeq	r0, [r0], -r4
   14cfc:	andeq	r0, r0, r4, ror #3
   14d00:	strdeq	r0, [r0], -r4
   14d04:	andeq	r0, r0, r4, lsl #4
   14d08:	andeq	r0, r0, r4, lsl r2
   14d0c:	andeq	r0, r0, r4, lsr #4
   14d10:	andeq	r0, r0, r4, lsr r2
   14d14:	andeq	r0, r0, r4, asr #4
   14d18:	andeq	r0, r0, r4, asr r2
   14d1c:	andeq	r0, r0, r4, ror #4
   14d20:	andeq	r0, r0, r4, ror r2
   14d24:	andeq	r0, r0, r4, lsl #5
   14d28:	muleq	r0, r4, r2
   14d2c:	andeq	r0, r0, r4, lsr #5
   14d30:			; <UNDEFINED> instruction: 0x000002b4
   14d34:	andeq	r0, r0, r4, asr #5
   14d38:	ldrdeq	r0, [r0], -r4
   14d3c:	ldr	r0, [pc, #752]	; 15034 <flatcc_verify_error_string@@Base+0x3b4>
   14d40:	add	r0, pc, r0
   14d44:	str	r0, [sp, #8]
   14d48:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14d4c:	ldr	r0, [pc, #732]	; 15030 <flatcc_verify_error_string@@Base+0x3b0>
   14d50:	add	r0, pc, r0
   14d54:	str	r0, [sp, #8]
   14d58:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14d5c:	ldr	r0, [pc, #712]	; 1502c <flatcc_verify_error_string@@Base+0x3ac>
   14d60:	add	r0, pc, r0
   14d64:	str	r0, [sp, #8]
   14d68:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14d6c:	ldr	r0, [pc, #692]	; 15028 <flatcc_verify_error_string@@Base+0x3a8>
   14d70:	add	r0, pc, r0
   14d74:	str	r0, [sp, #8]
   14d78:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14d7c:	ldr	r0, [pc, #672]	; 15024 <flatcc_verify_error_string@@Base+0x3a4>
   14d80:	add	r0, pc, r0
   14d84:	str	r0, [sp, #8]
   14d88:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14d8c:	ldr	r0, [pc, #652]	; 15020 <flatcc_verify_error_string@@Base+0x3a0>
   14d90:	add	r0, pc, r0
   14d94:	str	r0, [sp, #8]
   14d98:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14d9c:	ldr	r0, [pc, #632]	; 1501c <flatcc_verify_error_string@@Base+0x39c>
   14da0:	add	r0, pc, r0
   14da4:	str	r0, [sp, #8]
   14da8:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14dac:	ldr	r0, [pc, #612]	; 15018 <flatcc_verify_error_string@@Base+0x398>
   14db0:	add	r0, pc, r0
   14db4:	str	r0, [sp, #8]
   14db8:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14dbc:	ldr	r0, [pc, #592]	; 15014 <flatcc_verify_error_string@@Base+0x394>
   14dc0:	add	r0, pc, r0
   14dc4:	str	r0, [sp, #8]
   14dc8:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14dcc:	ldr	r0, [pc, #572]	; 15010 <flatcc_verify_error_string@@Base+0x390>
   14dd0:	add	r0, pc, r0
   14dd4:	str	r0, [sp, #8]
   14dd8:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14ddc:	ldr	r0, [pc, #552]	; 1500c <flatcc_verify_error_string@@Base+0x38c>
   14de0:	add	r0, pc, r0
   14de4:	str	r0, [sp, #8]
   14de8:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14dec:	ldr	r0, [pc, #532]	; 15008 <flatcc_verify_error_string@@Base+0x388>
   14df0:	add	r0, pc, r0
   14df4:	str	r0, [sp, #8]
   14df8:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14dfc:	ldr	r0, [pc, #512]	; 15004 <flatcc_verify_error_string@@Base+0x384>
   14e00:	add	r0, pc, r0
   14e04:	str	r0, [sp, #8]
   14e08:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14e0c:	ldr	r0, [pc, #492]	; 15000 <flatcc_verify_error_string@@Base+0x380>
   14e10:	add	r0, pc, r0
   14e14:	str	r0, [sp, #8]
   14e18:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14e1c:	ldr	r0, [pc, #472]	; 14ffc <flatcc_verify_error_string@@Base+0x37c>
   14e20:	add	r0, pc, r0
   14e24:	str	r0, [sp, #8]
   14e28:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14e2c:	ldr	r0, [pc, #452]	; 14ff8 <flatcc_verify_error_string@@Base+0x378>
   14e30:	add	r0, pc, r0
   14e34:	str	r0, [sp, #8]
   14e38:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14e3c:	ldr	r0, [pc, #432]	; 14ff4 <flatcc_verify_error_string@@Base+0x374>
   14e40:	add	r0, pc, r0
   14e44:	str	r0, [sp, #8]
   14e48:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14e4c:	ldr	r0, [pc, #412]	; 14ff0 <flatcc_verify_error_string@@Base+0x370>
   14e50:	add	r0, pc, r0
   14e54:	str	r0, [sp, #8]
   14e58:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14e5c:	ldr	r0, [pc, #392]	; 14fec <flatcc_verify_error_string@@Base+0x36c>
   14e60:	add	r0, pc, r0
   14e64:	str	r0, [sp, #8]
   14e68:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14e6c:	ldr	r0, [pc, #372]	; 14fe8 <flatcc_verify_error_string@@Base+0x368>
   14e70:	add	r0, pc, r0
   14e74:	str	r0, [sp, #8]
   14e78:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14e7c:	ldr	r0, [pc, #352]	; 14fe4 <flatcc_verify_error_string@@Base+0x364>
   14e80:	add	r0, pc, r0
   14e84:	str	r0, [sp, #8]
   14e88:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14e8c:	ldr	r0, [pc, #332]	; 14fe0 <flatcc_verify_error_string@@Base+0x360>
   14e90:	add	r0, pc, r0
   14e94:	str	r0, [sp, #8]
   14e98:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14e9c:	ldr	r0, [pc, #312]	; 14fdc <flatcc_verify_error_string@@Base+0x35c>
   14ea0:	add	r0, pc, r0
   14ea4:	str	r0, [sp, #8]
   14ea8:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14eac:	ldr	r0, [pc, #292]	; 14fd8 <flatcc_verify_error_string@@Base+0x358>
   14eb0:	add	r0, pc, r0
   14eb4:	str	r0, [sp, #8]
   14eb8:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14ebc:	ldr	r0, [pc, #272]	; 14fd4 <flatcc_verify_error_string@@Base+0x354>
   14ec0:	add	r0, pc, r0
   14ec4:	str	r0, [sp, #8]
   14ec8:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14ecc:	ldr	r0, [pc, #252]	; 14fd0 <flatcc_verify_error_string@@Base+0x350>
   14ed0:	add	r0, pc, r0
   14ed4:	str	r0, [sp, #8]
   14ed8:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14edc:	ldr	r0, [pc, #232]	; 14fcc <flatcc_verify_error_string@@Base+0x34c>
   14ee0:	add	r0, pc, r0
   14ee4:	str	r0, [sp, #8]
   14ee8:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14eec:	ldr	r0, [pc, #212]	; 14fc8 <flatcc_verify_error_string@@Base+0x348>
   14ef0:	add	r0, pc, r0
   14ef4:	str	r0, [sp, #8]
   14ef8:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14efc:	ldr	r0, [pc, #192]	; 14fc4 <flatcc_verify_error_string@@Base+0x344>
   14f00:	add	r0, pc, r0
   14f04:	str	r0, [sp, #8]
   14f08:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14f0c:	ldr	r0, [pc, #172]	; 14fc0 <flatcc_verify_error_string@@Base+0x340>
   14f10:	add	r0, pc, r0
   14f14:	str	r0, [sp, #8]
   14f18:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14f1c:	ldr	r0, [pc, #152]	; 14fbc <flatcc_verify_error_string@@Base+0x33c>
   14f20:	add	r0, pc, r0
   14f24:	str	r0, [sp, #8]
   14f28:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14f2c:	ldr	r0, [pc, #132]	; 14fb8 <flatcc_verify_error_string@@Base+0x338>
   14f30:	add	r0, pc, r0
   14f34:	str	r0, [sp, #8]
   14f38:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14f3c:	ldr	r0, [pc, #112]	; 14fb4 <flatcc_verify_error_string@@Base+0x334>
   14f40:	add	r0, pc, r0
   14f44:	str	r0, [sp, #8]
   14f48:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14f4c:	ldr	r0, [pc, #92]	; 14fb0 <flatcc_verify_error_string@@Base+0x330>
   14f50:	add	r0, pc, r0
   14f54:	str	r0, [sp, #8]
   14f58:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14f5c:	ldr	r0, [pc, #72]	; 14fac <flatcc_verify_error_string@@Base+0x32c>
   14f60:	add	r0, pc, r0
   14f64:	str	r0, [sp, #8]
   14f68:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14f6c:	ldr	r0, [pc, #52]	; 14fa8 <flatcc_verify_error_string@@Base+0x328>
   14f70:	add	r0, pc, r0
   14f74:	str	r0, [sp, #8]
   14f78:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14f7c:	ldr	r0, [pc, #32]	; 14fa4 <flatcc_verify_error_string@@Base+0x324>
   14f80:	add	r0, pc, r0
   14f84:	str	r0, [sp, #8]
   14f88:	b	14f98 <flatcc_verify_error_string@@Base+0x318>
   14f8c:	ldr	r0, [pc, #164]	; 15038 <flatcc_verify_error_string@@Base+0x3b8>
   14f90:	add	r0, pc, r0
   14f94:	str	r0, [sp, #8]
   14f98:	ldr	r0, [sp, #8]
   14f9c:	add	sp, sp, #12
   14fa0:	bx	lr
   14fa4:	andeq	r3, r0, r0, ror #20
   14fa8:	andeq	r3, r0, r6, asr sl
   14fac:	andeq	r3, r0, r2, lsr sl
   14fb0:	andeq	r3, r0, sp, lsl sl
   14fb4:	andeq	r3, r0, r6, lsl #20
   14fb8:	andeq	r3, r0, r1, lsl #20
   14fbc:	andeq	r3, r0, fp, ror #19
   14fc0:	ldrdeq	r3, [r0], -r3	; <UNPREDICTABLE>
   14fc4:	andeq	r3, r0, fp, asr #19
   14fc8:	andeq	r3, r0, r0, asr #19
   14fcc:			; <UNDEFINED> instruction: 0x000039bc
   14fd0:	muleq	r0, sp, r9
   14fd4:	andeq	r3, r0, r4, lsl #19
   14fd8:	andeq	r3, r0, fp, ror #18
   14fdc:	andeq	r3, r0, r8, asr #18
   14fe0:	andeq	r3, r0, ip, lsr #18
   14fe4:	andeq	r3, r0, r4, lsr #18
   14fe8:	andeq	r3, r0, r4, ror sl
   14fec:	andeq	r3, r0, r0, lsr r9
   14ff0:	andeq	r3, r0, r8, lsl r9
   14ff4:	andeq	r3, r0, r0, lsl #18
   14ff8:	andeq	r3, r0, r9, ror #17
   14ffc:	ldrdeq	r3, [r0], -pc	; <UNPREDICTABLE>
   15000:	ldrdeq	r3, [r0], -r6
   15004:	andeq	r3, r0, lr, asr #17
   15008:	andeq	r3, r0, sp, asr #17
   1500c:	andeq	r3, r0, r8, asr #17
   15010:	andeq	r3, r0, r4, asr #17
   15014:	andeq	r3, r0, r0, asr #17
   15018:			; <UNDEFINED> instruction: 0x000038b5
   1501c:	andeq	r3, r0, r6, lsr #17
   15020:	muleq	r0, r3, r8
   15024:	andeq	r3, r0, ip, lsl #17
   15028:	andeq	r3, r0, r2, lsl #17
   1502c:	andeq	r3, r0, lr, ror r8
   15030:	andeq	r3, r0, r6, ror r8
   15034:	andeq	r3, r0, r3, lsl #17
   15038:	andeq	r3, r0, lr, asr sl

0001503c <flatcc_verify_field@@Base>:
   1503c:	push	{fp, lr}
   15040:	mov	fp, sp
   15044:	sub	sp, sp, #24
   15048:	str	r0, [fp, #-8]
   1504c:	strh	r1, [fp, #-10]
   15050:	str	r2, [sp, #8]
   15054:	strh	r3, [sp, #6]
   15058:	ldr	r0, [fp, #-8]
   1505c:	ldrh	r1, [fp, #-10]
   15060:	ldr	r3, [sp, #8]
   15064:	uxth	r1, r1
   15068:	movw	r2, #0
   1506c:	ldrh	ip, [sp, #6]
   15070:	str	ip, [sp]
   15074:	bl	150bc <flatcc_verify_field@@Base+0x80>
   15078:	cmp	r0, #0
   1507c:	beq	150a8 <flatcc_verify_field@@Base+0x6c>
   15080:	ldr	r0, [fp, #-8]
   15084:	ldrh	r1, [fp, #-10]
   15088:	ldr	r3, [sp, #8]
   1508c:	uxth	r1, r1
   15090:	movw	r2, #0
   15094:	ldrh	ip, [sp, #6]
   15098:	str	ip, [sp]
   1509c:	bl	150bc <flatcc_verify_field@@Base+0x80>
   150a0:	str	r0, [fp, #-4]
   150a4:	b	150b0 <flatcc_verify_field@@Base+0x74>
   150a8:	movw	r0, #0
   150ac:	str	r0, [fp, #-4]
   150b0:	ldr	r0, [fp, #-4]
   150b4:	mov	sp, fp
   150b8:	pop	{fp, pc}
   150bc:	push	{fp, lr}
   150c0:	mov	fp, sp
   150c4:	sub	sp, sp, #56	; 0x38
   150c8:	ldr	ip, [fp, #8]
   150cc:	str	r0, [fp, #-8]
   150d0:	strh	r1, [fp, #-10]
   150d4:	str	r2, [fp, #-16]
   150d8:	str	r3, [fp, #-20]	; 0xffffffec
   150dc:	strh	ip, [fp, #-22]	; 0xffffffea
   150e0:	ldr	r0, [fp, #-8]
   150e4:	ldr	r0, [r0]
   150e8:	str	r0, [sp, #16]
   150ec:	ldr	r0, [fp, #-8]
   150f0:	ldrh	r1, [fp, #-10]
   150f4:	bl	16f34 <flatcc_verify_union_field@@Base+0x290>
   150f8:	strh	r0, [sp, #22]
   150fc:	ldrsh	r0, [sp, #22]
   15100:	cmp	r0, #0
   15104:	bne	15154 <flatcc_verify_field@@Base+0x118>
   15108:	b	1510c <flatcc_verify_field@@Base+0xd0>
   1510c:	ldr	r0, [fp, #-16]
   15110:	cmp	r0, #0
   15114:	movw	r0, #0
   15118:	movne	r0, #1
   1511c:	mvn	r1, #0
   15120:	eor	r0, r0, r1
   15124:	and	r0, r0, #1
   15128:	str	r0, [sp, #12]
   1512c:	ldr	r0, [sp, #12]
   15130:	cmp	r0, #0
   15134:	bne	15144 <flatcc_verify_field@@Base+0x108>
   15138:	movw	r0, #4
   1513c:	str	r0, [fp, #-4]
   15140:	b	1523c <flatcc_verify_field@@Base+0x200>
   15144:	b	15148 <flatcc_verify_field@@Base+0x10c>
   15148:	movw	r0, #0
   1514c:	str	r0, [fp, #-4]
   15150:	b	1523c <flatcc_verify_field@@Base+0x200>
   15154:	ldrh	r0, [sp, #22]
   15158:	str	r0, [sp, #28]
   1515c:	ldr	r0, [sp, #28]
   15160:	ldr	r1, [fp, #-20]	; 0xffffffec
   15164:	add	r0, r0, r1
   15168:	str	r0, [sp, #24]
   1516c:	ldr	r0, [sp, #24]
   15170:	ldr	r1, [fp, #-8]
   15174:	ldrh	r1, [r1, #20]
   15178:	cmp	r0, r1
   1517c:	movw	r0, #0
   15180:	movls	r0, #1
   15184:	and	r0, r0, #1
   15188:	str	r0, [sp, #8]
   1518c:	ldr	r0, [sp, #8]
   15190:	cmp	r0, #0
   15194:	bne	151a4 <flatcc_verify_field@@Base+0x168>
   15198:	movw	r0, #13
   1519c:	str	r0, [fp, #-4]
   151a0:	b	1523c <flatcc_verify_field@@Base+0x200>
   151a4:	b	151a8 <flatcc_verify_field@@Base+0x16c>
   151a8:	b	151ac <flatcc_verify_field@@Base+0x170>
   151ac:	movw	r0, #1
   151b0:	str	r0, [sp, #4]
   151b4:	ldr	r0, [sp, #4]
   151b8:	cmp	r0, #0
   151bc:	bne	151cc <flatcc_verify_field@@Base+0x190>
   151c0:	movw	r0, #14
   151c4:	str	r0, [fp, #-4]
   151c8:	b	1523c <flatcc_verify_field@@Base+0x200>
   151cc:	b	151d0 <flatcc_verify_field@@Base+0x194>
   151d0:	ldr	r0, [fp, #-8]
   151d4:	ldr	r0, [r0, #16]
   151d8:	ldr	r1, [sp, #16]
   151dc:	add	r0, r0, r1
   151e0:	ldr	r1, [sp, #28]
   151e4:	add	r0, r1, r0
   151e8:	str	r0, [sp, #28]
   151ec:	ldr	r0, [sp, #28]
   151f0:	ldrh	r1, [fp, #-22]	; 0xffffffea
   151f4:	sub	r1, r1, #1
   151f8:	and	r0, r0, r1
   151fc:	cmp	r0, #0
   15200:	movw	r0, #0
   15204:	movne	r0, #1
   15208:	mvn	r1, #0
   1520c:	eor	r0, r0, r1
   15210:	and	r0, r0, #1
   15214:	str	r0, [sp]
   15218:	ldr	r0, [sp]
   1521c:	cmp	r0, #0
   15220:	bne	15230 <flatcc_verify_field@@Base+0x1f4>
   15224:	movw	r0, #12
   15228:	str	r0, [fp, #-4]
   1522c:	b	1523c <flatcc_verify_field@@Base+0x200>
   15230:	b	15234 <flatcc_verify_field@@Base+0x1f8>
   15234:	movw	r0, #0
   15238:	str	r0, [fp, #-4]
   1523c:	ldr	r0, [fp, #-4]
   15240:	mov	sp, fp
   15244:	pop	{fp, pc}

00015248 <flatcc_verify_string_field@@Base>:
   15248:	push	{fp, lr}
   1524c:	mov	fp, sp
   15250:	sub	sp, sp, #40	; 0x28
   15254:	str	r0, [fp, #-8]
   15258:	strh	r1, [fp, #-10]
   1525c:	str	r2, [fp, #-16]
   15260:	ldr	r0, [fp, #-8]
   15264:	ldrh	r1, [fp, #-10]
   15268:	ldr	r2, [fp, #-16]
   1526c:	uxth	r1, r1
   15270:	add	r3, sp, #20
   15274:	bl	15308 <flatcc_verify_string_field@@Base+0xc0>
   15278:	str	r0, [sp, #16]
   1527c:	ldr	r0, [sp, #16]
   15280:	cmp	r0, #0
   15284:	bne	15294 <flatcc_verify_string_field@@Base+0x4c>
   15288:	ldr	r0, [sp, #20]
   1528c:	cmp	r0, #0
   15290:	bne	152a0 <flatcc_verify_string_field@@Base+0x58>
   15294:	ldr	r0, [sp, #16]
   15298:	str	r0, [fp, #-4]
   1529c:	b	152fc <flatcc_verify_string_field@@Base+0xb4>
   152a0:	b	152a4 <flatcc_verify_string_field@@Base+0x5c>
   152a4:	ldr	r0, [fp, #-8]
   152a8:	ldr	r0, [r0]
   152ac:	ldr	r1, [fp, #-8]
   152b0:	ldr	r1, [r1, #4]
   152b4:	ldr	r2, [sp, #20]
   152b8:	ldr	r3, [fp, #-8]
   152bc:	ldr	r3, [r3]
   152c0:	ldr	ip, [sp, #20]
   152c4:	str	r0, [sp, #12]
   152c8:	mov	r0, r3
   152cc:	str	r1, [sp, #8]
   152d0:	mov	r1, ip
   152d4:	str	r2, [sp, #4]
   152d8:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   152dc:	ldr	r1, [sp, #12]
   152e0:	str	r0, [sp]
   152e4:	mov	r0, r1
   152e8:	ldr	r1, [sp, #8]
   152ec:	ldr	r2, [sp, #4]
   152f0:	ldr	r3, [sp]
   152f4:	bl	1545c <flatcc_verify_string_field@@Base+0x214>
   152f8:	str	r0, [fp, #-4]
   152fc:	ldr	r0, [fp, #-4]
   15300:	mov	sp, fp
   15304:	pop	{fp, pc}
   15308:	push	{fp, lr}
   1530c:	mov	fp, sp
   15310:	sub	sp, sp, #48	; 0x30
   15314:	str	r0, [fp, #-8]
   15318:	strh	r1, [fp, #-10]
   1531c:	str	r2, [fp, #-16]
   15320:	str	r3, [fp, #-20]	; 0xffffffec
   15324:	ldr	r0, [fp, #-8]
   15328:	ldrh	r1, [fp, #-10]
   1532c:	bl	16f34 <flatcc_verify_union_field@@Base+0x290>
   15330:	strh	r0, [sp, #18]
   15334:	ldrsh	r0, [sp, #18]
   15338:	cmp	r0, #0
   1533c:	bne	15370 <flatcc_verify_string_field@@Base+0x128>
   15340:	ldr	r0, [fp, #-20]	; 0xffffffec
   15344:	movw	r1, #0
   15348:	str	r1, [r0]
   1534c:	ldr	r0, [fp, #-16]
   15350:	cmp	r0, #0
   15354:	beq	15364 <flatcc_verify_string_field@@Base+0x11c>
   15358:	movw	r0, #4
   1535c:	str	r0, [fp, #-4]
   15360:	b	15450 <flatcc_verify_string_field@@Base+0x208>
   15364:	movw	r0, #0
   15368:	str	r0, [fp, #-4]
   1536c:	b	15450 <flatcc_verify_string_field@@Base+0x208>
   15370:	ldrh	r0, [sp, #18]
   15374:	str	r0, [sp, #24]
   15378:	ldr	r0, [sp, #24]
   1537c:	add	r0, r0, #4
   15380:	str	r0, [sp, #20]
   15384:	ldr	r0, [sp, #20]
   15388:	ldr	r1, [fp, #-8]
   1538c:	ldrh	r1, [r1, #20]
   15390:	cmp	r0, r1
   15394:	movw	r0, #0
   15398:	movls	r0, #1
   1539c:	and	r0, r0, #1
   153a0:	str	r0, [sp, #12]
   153a4:	ldr	r0, [sp, #12]
   153a8:	cmp	r0, #0
   153ac:	bne	153bc <flatcc_verify_string_field@@Base+0x174>
   153b0:	movw	r0, #13
   153b4:	str	r0, [fp, #-4]
   153b8:	b	15450 <flatcc_verify_string_field@@Base+0x208>
   153bc:	b	153c0 <flatcc_verify_string_field@@Base+0x178>
   153c0:	b	153c4 <flatcc_verify_string_field@@Base+0x17c>
   153c4:	movw	r0, #1
   153c8:	str	r0, [sp, #8]
   153cc:	ldr	r0, [sp, #8]
   153d0:	cmp	r0, #0
   153d4:	bne	153e4 <flatcc_verify_string_field@@Base+0x19c>
   153d8:	movw	r0, #14
   153dc:	str	r0, [fp, #-4]
   153e0:	b	15450 <flatcc_verify_string_field@@Base+0x208>
   153e4:	b	153e8 <flatcc_verify_string_field@@Base+0x1a0>
   153e8:	ldr	r0, [fp, #-8]
   153ec:	ldr	r0, [r0, #16]
   153f0:	ldr	r1, [sp, #24]
   153f4:	add	r0, r1, r0
   153f8:	str	r0, [sp, #24]
   153fc:	ldr	r0, [sp, #24]
   15400:	and	r0, r0, #3
   15404:	cmp	r0, #0
   15408:	movw	r0, #0
   1540c:	movne	r0, #1
   15410:	mvn	r1, #0
   15414:	eor	r0, r0, r1
   15418:	and	r0, r0, #1
   1541c:	str	r0, [sp, #4]
   15420:	ldr	r0, [sp, #4]
   15424:	cmp	r0, #0
   15428:	bne	15438 <flatcc_verify_string_field@@Base+0x1f0>
   1542c:	movw	r0, #12
   15430:	str	r0, [fp, #-4]
   15434:	b	15450 <flatcc_verify_string_field@@Base+0x208>
   15438:	b	1543c <flatcc_verify_string_field@@Base+0x1f4>
   1543c:	ldr	r0, [sp, #24]
   15440:	ldr	r1, [fp, #-20]	; 0xffffffec
   15444:	str	r0, [r1]
   15448:	movw	r0, #0
   1544c:	str	r0, [fp, #-4]
   15450:	ldr	r0, [fp, #-4]
   15454:	mov	sp, fp
   15458:	pop	{fp, pc}
   1545c:	push	{fp, lr}
   15460:	mov	fp, sp
   15464:	sub	sp, sp, #40	; 0x28
   15468:	str	r0, [fp, #-8]
   1546c:	str	r1, [fp, #-12]
   15470:	str	r2, [fp, #-16]
   15474:	str	r3, [sp, #20]
   15478:	ldr	r0, [fp, #-12]
   1547c:	ldr	r1, [fp, #-16]
   15480:	ldr	r2, [sp, #20]
   15484:	bl	17508 <flatcc_verify_union_vector_field@@Base+0x56c>
   15488:	str	r0, [sp, #12]
   1548c:	ldr	r0, [sp, #12]
   15490:	cmp	r0, #0
   15494:	bne	154a4 <flatcc_verify_string_field@@Base+0x25c>
   15498:	movw	r0, #17
   1549c:	str	r0, [fp, #-4]
   154a0:	b	1556c <flatcc_verify_string_field@@Base+0x324>
   154a4:	b	154a8 <flatcc_verify_string_field@@Base+0x260>
   154a8:	ldr	r0, [sp, #20]
   154ac:	ldr	r1, [fp, #-16]
   154b0:	add	r0, r1, r0
   154b4:	str	r0, [fp, #-16]
   154b8:	ldr	r0, [fp, #-8]
   154bc:	ldr	r1, [fp, #-16]
   154c0:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   154c4:	str	r0, [sp, #16]
   154c8:	ldr	r0, [fp, #-16]
   154cc:	add	r0, r0, #4
   154d0:	str	r0, [fp, #-16]
   154d4:	ldr	r0, [fp, #-12]
   154d8:	ldr	r1, [fp, #-16]
   154dc:	sub	r0, r0, r1
   154e0:	ldr	r1, [sp, #16]
   154e4:	add	r1, r1, #1
   154e8:	cmp	r0, r1
   154ec:	movw	r0, #0
   154f0:	movcs	r0, #1
   154f4:	and	r0, r0, #1
   154f8:	str	r0, [sp, #8]
   154fc:	ldr	r0, [sp, #8]
   15500:	cmp	r0, #0
   15504:	bne	15514 <flatcc_verify_string_field@@Base+0x2cc>
   15508:	movw	r0, #8
   1550c:	str	r0, [fp, #-4]
   15510:	b	1556c <flatcc_verify_string_field@@Base+0x324>
   15514:	b	15518 <flatcc_verify_string_field@@Base+0x2d0>
   15518:	b	1551c <flatcc_verify_string_field@@Base+0x2d4>
   1551c:	ldr	r0, [fp, #-8]
   15520:	ldr	r1, [fp, #-16]
   15524:	add	r0, r0, r1
   15528:	ldr	r1, [sp, #16]
   1552c:	add	r0, r0, r1
   15530:	ldrb	r0, [r0]
   15534:	cmp	r0, #0
   15538:	movw	r0, #0
   1553c:	moveq	r0, #1
   15540:	and	r0, r0, #1
   15544:	str	r0, [sp, #4]
   15548:	ldr	r0, [sp, #4]
   1554c:	cmp	r0, #0
   15550:	bne	15560 <flatcc_verify_string_field@@Base+0x318>
   15554:	movw	r0, #7
   15558:	str	r0, [fp, #-4]
   1555c:	b	1556c <flatcc_verify_string_field@@Base+0x324>
   15560:	b	15564 <flatcc_verify_string_field@@Base+0x31c>
   15564:	movw	r0, #0
   15568:	str	r0, [fp, #-4]
   1556c:	ldr	r0, [fp, #-4]
   15570:	mov	sp, fp
   15574:	pop	{fp, pc}
   15578:	push	{fp, lr}
   1557c:	mov	fp, sp
   15580:	sub	sp, sp, #8
   15584:	str	r0, [sp, #4]
   15588:	str	r1, [sp]
   1558c:	ldr	r0, [sp, #4]
   15590:	ldr	r1, [sp]
   15594:	add	r0, r0, r1
   15598:	bl	1758c <flatcc_verify_union_vector_field@@Base+0x5f0>
   1559c:	mov	sp, fp
   155a0:	pop	{fp, pc}

000155a4 <flatcc_verify_vector_field@@Base>:
   155a4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   155a8:	add	fp, sp, #24
   155ac:	sub	sp, sp, #72	; 0x48
   155b0:	ldr	ip, [fp, #12]
   155b4:	ldr	lr, [fp, #8]
   155b8:	str	r0, [fp, #-32]	; 0xffffffe0
   155bc:	strh	r1, [fp, #-34]	; 0xffffffde
   155c0:	str	r2, [fp, #-40]	; 0xffffffd8
   155c4:	str	r3, [fp, #-44]	; 0xffffffd4
   155c8:	strh	lr, [fp, #-46]	; 0xffffffd2
   155cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   155d0:	ldrh	r1, [fp, #-34]	; 0xffffffde
   155d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   155d8:	uxth	r1, r1
   155dc:	add	r3, sp, #44	; 0x2c
   155e0:	bl	15308 <flatcc_verify_string_field@@Base+0xc0>
   155e4:	str	r0, [sp, #40]	; 0x28
   155e8:	ldr	r0, [sp, #40]	; 0x28
   155ec:	cmp	r0, #0
   155f0:	bne	15600 <flatcc_verify_vector_field@@Base+0x5c>
   155f4:	ldr	r0, [sp, #44]	; 0x2c
   155f8:	cmp	r0, #0
   155fc:	bne	1560c <flatcc_verify_vector_field@@Base+0x68>
   15600:	ldr	r0, [sp, #40]	; 0x28
   15604:	str	r0, [fp, #-28]	; 0xffffffe4
   15608:	b	156a8 <flatcc_verify_vector_field@@Base+0x104>
   1560c:	b	15610 <flatcc_verify_vector_field@@Base+0x6c>
   15610:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15614:	ldr	r0, [r0]
   15618:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1561c:	ldr	r1, [r1, #4]
   15620:	ldr	r2, [sp, #44]	; 0x2c
   15624:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15628:	ldr	r3, [r3]
   1562c:	ldr	ip, [sp, #44]	; 0x2c
   15630:	str	r0, [sp, #36]	; 0x24
   15634:	mov	r0, r3
   15638:	str	r1, [sp, #32]
   1563c:	mov	r1, ip
   15640:	str	r2, [sp, #28]
   15644:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   15648:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1564c:	ldrh	r2, [fp, #-46]	; 0xffffffd2
   15650:	ldr	r3, [fp, #12]
   15654:	ldr	ip, [sp, #36]	; 0x24
   15658:	str	r0, [sp, #24]
   1565c:	mov	r0, ip
   15660:	ldr	lr, [sp, #32]
   15664:	str	r1, [sp, #20]
   15668:	mov	r1, lr
   1566c:	ldr	r4, [sp, #28]
   15670:	str	r2, [sp, #16]
   15674:	mov	r2, r4
   15678:	ldr	r5, [sp, #24]
   1567c:	str	r3, [sp, #12]
   15680:	mov	r3, r5
   15684:	ldr	r6, [sp, #20]
   15688:	str	r6, [sp]
   1568c:	ldr	r7, [sp, #16]
   15690:	uxth	r8, r7
   15694:	str	r8, [sp, #4]
   15698:	ldr	r8, [sp, #12]
   1569c:	str	r8, [sp, #8]
   156a0:	bl	156b4 <flatcc_verify_vector_field@@Base+0x110>
   156a4:	str	r0, [fp, #-28]	; 0xffffffe4
   156a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   156ac:	sub	sp, fp, #24
   156b0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   156b4:	push	{r4, sl, fp, lr}
   156b8:	add	fp, sp, #8
   156bc:	sub	sp, sp, #40	; 0x28
   156c0:	ldr	ip, [fp, #16]
   156c4:	ldr	lr, [fp, #12]
   156c8:	ldr	r4, [fp, #8]
   156cc:	str	r0, [fp, #-16]
   156d0:	str	r1, [fp, #-20]	; 0xffffffec
   156d4:	str	r2, [sp, #24]
   156d8:	str	r3, [sp, #20]
   156dc:	strh	lr, [sp, #18]
   156e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   156e4:	ldr	r1, [sp, #24]
   156e8:	ldr	r2, [sp, #20]
   156ec:	ldrh	r3, [sp, #18]
   156f0:	bl	175c4 <flatcc_verify_union_vector_field@@Base+0x628>
   156f4:	str	r0, [sp, #8]
   156f8:	ldr	r0, [sp, #8]
   156fc:	cmp	r0, #0
   15700:	bne	15710 <flatcc_verify_vector_field@@Base+0x16c>
   15704:	movw	r0, #16
   15708:	str	r0, [fp, #-12]
   1570c:	b	157cc <flatcc_verify_vector_field@@Base+0x228>
   15710:	b	15714 <flatcc_verify_vector_field@@Base+0x170>
   15714:	ldr	r0, [sp, #20]
   15718:	ldr	r1, [sp, #24]
   1571c:	add	r0, r1, r0
   15720:	str	r0, [sp, #24]
   15724:	ldr	r0, [fp, #-16]
   15728:	ldr	r1, [sp, #24]
   1572c:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   15730:	str	r0, [sp, #12]
   15734:	ldr	r0, [sp, #24]
   15738:	add	r0, r0, #4
   1573c:	str	r0, [sp, #24]
   15740:	ldr	r0, [sp, #12]
   15744:	ldr	r1, [fp, #16]
   15748:	cmp	r0, r1
   1574c:	movw	r0, #0
   15750:	movls	r0, #1
   15754:	and	r0, r0, #1
   15758:	str	r0, [sp, #4]
   1575c:	ldr	r0, [sp, #4]
   15760:	cmp	r0, #0
   15764:	bne	15774 <flatcc_verify_vector_field@@Base+0x1d0>
   15768:	movw	r0, #25
   1576c:	str	r0, [fp, #-12]
   15770:	b	157cc <flatcc_verify_vector_field@@Base+0x228>
   15774:	b	15778 <flatcc_verify_vector_field@@Base+0x1d4>
   15778:	b	1577c <flatcc_verify_vector_field@@Base+0x1d8>
   1577c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15780:	ldr	r1, [sp, #24]
   15784:	sub	r0, r0, r1
   15788:	ldr	r1, [sp, #12]
   1578c:	ldr	r2, [fp, #8]
   15790:	mul	r1, r1, r2
   15794:	cmp	r0, r1
   15798:	movw	r0, #0
   1579c:	movcs	r0, #1
   157a0:	and	r0, r0, #1
   157a4:	str	r0, [sp]
   157a8:	ldr	r0, [sp]
   157ac:	cmp	r0, #0
   157b0:	bne	157c0 <flatcc_verify_vector_field@@Base+0x21c>
   157b4:	movw	r0, #26
   157b8:	str	r0, [fp, #-12]
   157bc:	b	157cc <flatcc_verify_vector_field@@Base+0x228>
   157c0:	b	157c4 <flatcc_verify_vector_field@@Base+0x220>
   157c4:	movw	r0, #0
   157c8:	str	r0, [fp, #-12]
   157cc:	ldr	r0, [fp, #-12]
   157d0:	sub	sp, fp, #8
   157d4:	pop	{r4, sl, fp, pc}

000157d8 <flatcc_verify_string_vector_field@@Base>:
   157d8:	push	{fp, lr}
   157dc:	mov	fp, sp
   157e0:	sub	sp, sp, #40	; 0x28
   157e4:	str	r0, [fp, #-8]
   157e8:	strh	r1, [fp, #-10]
   157ec:	str	r2, [fp, #-16]
   157f0:	ldr	r0, [fp, #-8]
   157f4:	ldrh	r1, [fp, #-10]
   157f8:	ldr	r2, [fp, #-16]
   157fc:	uxth	r1, r1
   15800:	add	r3, sp, #20
   15804:	bl	15308 <flatcc_verify_string_field@@Base+0xc0>
   15808:	str	r0, [sp, #16]
   1580c:	ldr	r0, [sp, #16]
   15810:	cmp	r0, #0
   15814:	bne	15824 <flatcc_verify_string_vector_field@@Base+0x4c>
   15818:	ldr	r0, [sp, #20]
   1581c:	cmp	r0, #0
   15820:	bne	15830 <flatcc_verify_string_vector_field@@Base+0x58>
   15824:	ldr	r0, [sp, #16]
   15828:	str	r0, [fp, #-4]
   1582c:	b	1588c <flatcc_verify_string_vector_field@@Base+0xb4>
   15830:	b	15834 <flatcc_verify_string_vector_field@@Base+0x5c>
   15834:	ldr	r0, [fp, #-8]
   15838:	ldr	r0, [r0]
   1583c:	ldr	r1, [fp, #-8]
   15840:	ldr	r1, [r1, #4]
   15844:	ldr	r2, [sp, #20]
   15848:	ldr	r3, [fp, #-8]
   1584c:	ldr	r3, [r3]
   15850:	ldr	ip, [sp, #20]
   15854:	str	r0, [sp, #12]
   15858:	mov	r0, r3
   1585c:	str	r1, [sp, #8]
   15860:	mov	r1, ip
   15864:	str	r2, [sp, #4]
   15868:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   1586c:	ldr	r1, [sp, #12]
   15870:	str	r0, [sp]
   15874:	mov	r0, r1
   15878:	ldr	r1, [sp, #8]
   1587c:	ldr	r2, [sp, #4]
   15880:	ldr	r3, [sp]
   15884:	bl	15898 <flatcc_verify_string_vector_field@@Base+0xc0>
   15888:	str	r0, [fp, #-4]
   1588c:	ldr	r0, [fp, #-4]
   15890:	mov	sp, fp
   15894:	pop	{fp, pc}
   15898:	push	{fp, lr}
   1589c:	mov	fp, sp
   158a0:	sub	sp, sp, #80	; 0x50
   158a4:	ldr	ip, [pc, #424]	; 15a54 <flatcc_verify_string_vector_field@@Base+0x27c>
   158a8:	str	r0, [fp, #-8]
   158ac:	str	r1, [fp, #-12]
   158b0:	str	r2, [fp, #-16]
   158b4:	str	r3, [fp, #-20]	; 0xffffffec
   158b8:	ldr	r0, [fp, #-8]
   158bc:	ldr	r1, [fp, #-12]
   158c0:	ldr	r2, [fp, #-16]
   158c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   158c8:	movw	lr, #4
   158cc:	str	lr, [sp]
   158d0:	movw	lr, #4
   158d4:	uxth	lr, lr
   158d8:	str	lr, [sp, #4]
   158dc:	str	ip, [sp, #8]
   158e0:	bl	156b4 <flatcc_verify_vector_field@@Base+0x110>
   158e4:	cmp	r0, #0
   158e8:	beq	1593c <flatcc_verify_string_vector_field@@Base+0x164>
   158ec:	ldr	r0, [pc, #352]	; 15a54 <flatcc_verify_string_vector_field@@Base+0x27c>
   158f0:	ldr	r1, [fp, #-8]
   158f4:	ldr	r2, [fp, #-12]
   158f8:	ldr	r3, [fp, #-16]
   158fc:	ldr	ip, [fp, #-20]	; 0xffffffec
   15900:	str	r0, [fp, #-32]	; 0xffffffe0
   15904:	mov	r0, r1
   15908:	mov	r1, r2
   1590c:	mov	r2, r3
   15910:	mov	r3, ip
   15914:	movw	ip, #4
   15918:	str	ip, [sp]
   1591c:	movw	ip, #4
   15920:	uxth	ip, ip
   15924:	str	ip, [sp, #4]
   15928:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1592c:	str	ip, [sp, #8]
   15930:	bl	156b4 <flatcc_verify_vector_field@@Base+0x110>
   15934:	str	r0, [fp, #-4]
   15938:	b	15a48 <flatcc_verify_string_vector_field@@Base+0x270>
   1593c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15940:	ldr	r1, [fp, #-16]
   15944:	add	r0, r1, r0
   15948:	str	r0, [fp, #-16]
   1594c:	ldr	r0, [fp, #-8]
   15950:	ldr	r1, [fp, #-16]
   15954:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   15958:	str	r0, [fp, #-28]	; 0xffffffe4
   1595c:	ldr	r0, [fp, #-16]
   15960:	add	r0, r0, #4
   15964:	str	r0, [fp, #-16]
   15968:	movw	r0, #0
   1596c:	str	r0, [fp, #-24]	; 0xffffffe8
   15970:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15974:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15978:	cmp	r0, r1
   1597c:	bcs	15a40 <flatcc_verify_string_vector_field@@Base+0x268>
   15980:	ldr	r0, [fp, #-8]
   15984:	ldr	r1, [fp, #-12]
   15988:	ldr	r2, [fp, #-16]
   1598c:	ldr	r3, [fp, #-8]
   15990:	ldr	ip, [fp, #-16]
   15994:	str	r0, [fp, #-36]	; 0xffffffdc
   15998:	mov	r0, r3
   1599c:	str	r1, [sp, #40]	; 0x28
   159a0:	mov	r1, ip
   159a4:	str	r2, [sp, #36]	; 0x24
   159a8:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   159ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   159b0:	str	r0, [sp, #32]
   159b4:	mov	r0, r1
   159b8:	ldr	r1, [sp, #40]	; 0x28
   159bc:	ldr	r2, [sp, #36]	; 0x24
   159c0:	ldr	r3, [sp, #32]
   159c4:	bl	1545c <flatcc_verify_string_field@@Base+0x214>
   159c8:	cmp	r0, #0
   159cc:	beq	15a20 <flatcc_verify_string_vector_field@@Base+0x248>
   159d0:	ldr	r0, [fp, #-8]
   159d4:	ldr	r1, [fp, #-12]
   159d8:	ldr	r2, [fp, #-16]
   159dc:	ldr	r3, [fp, #-8]
   159e0:	ldr	ip, [fp, #-16]
   159e4:	str	r0, [sp, #28]
   159e8:	mov	r0, r3
   159ec:	str	r1, [sp, #24]
   159f0:	mov	r1, ip
   159f4:	str	r2, [sp, #20]
   159f8:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   159fc:	ldr	r1, [sp, #28]
   15a00:	str	r0, [sp, #16]
   15a04:	mov	r0, r1
   15a08:	ldr	r1, [sp, #24]
   15a0c:	ldr	r2, [sp, #20]
   15a10:	ldr	r3, [sp, #16]
   15a14:	bl	1545c <flatcc_verify_string_field@@Base+0x214>
   15a18:	str	r0, [fp, #-4]
   15a1c:	b	15a48 <flatcc_verify_string_vector_field@@Base+0x270>
   15a20:	b	15a24 <flatcc_verify_string_vector_field@@Base+0x24c>
   15a24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a28:	add	r0, r0, #1
   15a2c:	str	r0, [fp, #-24]	; 0xffffffe8
   15a30:	ldr	r0, [fp, #-16]
   15a34:	add	r0, r0, #4
   15a38:	str	r0, [fp, #-16]
   15a3c:	b	15970 <flatcc_verify_string_vector_field@@Base+0x198>
   15a40:	movw	r0, #0
   15a44:	str	r0, [fp, #-4]
   15a48:	ldr	r0, [fp, #-4]
   15a4c:	mov	sp, fp
   15a50:	pop	{fp, pc}
   15a54:	svccc	0x00ffffff

00015a58 <flatcc_verify_table_field@@Base>:
   15a58:	push	{r4, r5, fp, lr}
   15a5c:	add	fp, sp, #8
   15a60:	sub	sp, sp, #64	; 0x40
   15a64:	str	r0, [fp, #-16]
   15a68:	strh	r1, [fp, #-18]	; 0xffffffee
   15a6c:	str	r2, [fp, #-24]	; 0xffffffe8
   15a70:	str	r3, [fp, #-28]	; 0xffffffe4
   15a74:	ldr	r0, [fp, #-16]
   15a78:	ldrh	r1, [fp, #-18]	; 0xffffffee
   15a7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15a80:	uxth	r1, r1
   15a84:	sub	r3, fp, #32
   15a88:	bl	15308 <flatcc_verify_string_field@@Base+0xc0>
   15a8c:	str	r0, [sp, #36]	; 0x24
   15a90:	ldr	r0, [sp, #36]	; 0x24
   15a94:	cmp	r0, #0
   15a98:	bne	15aa8 <flatcc_verify_table_field@@Base+0x50>
   15a9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15aa0:	cmp	r0, #0
   15aa4:	bne	15ab4 <flatcc_verify_table_field@@Base+0x5c>
   15aa8:	ldr	r0, [sp, #36]	; 0x24
   15aac:	str	r0, [fp, #-12]
   15ab0:	b	15b3c <flatcc_verify_table_field@@Base+0xe4>
   15ab4:	b	15ab8 <flatcc_verify_table_field@@Base+0x60>
   15ab8:	ldr	r0, [fp, #-16]
   15abc:	ldr	r0, [r0]
   15ac0:	ldr	r1, [fp, #-16]
   15ac4:	ldr	r1, [r1, #4]
   15ac8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15acc:	ldr	r3, [fp, #-16]
   15ad0:	ldr	r3, [r3]
   15ad4:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15ad8:	str	r0, [sp, #32]
   15adc:	mov	r0, r3
   15ae0:	str	r1, [sp, #28]
   15ae4:	mov	r1, ip
   15ae8:	str	r2, [sp, #24]
   15aec:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   15af0:	ldr	r1, [fp, #-16]
   15af4:	ldr	r1, [r1, #8]
   15af8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15afc:	ldr	r3, [sp, #32]
   15b00:	str	r0, [sp, #20]
   15b04:	mov	r0, r3
   15b08:	ldr	ip, [sp, #28]
   15b0c:	str	r1, [sp, #16]
   15b10:	mov	r1, ip
   15b14:	ldr	lr, [sp, #24]
   15b18:	str	r2, [sp, #12]
   15b1c:	mov	r2, lr
   15b20:	ldr	r3, [sp, #20]
   15b24:	ldr	r4, [sp, #16]
   15b28:	str	r4, [sp]
   15b2c:	ldr	r5, [sp, #12]
   15b30:	str	r5, [sp, #4]
   15b34:	bl	15b48 <flatcc_verify_table_field@@Base+0xf0>
   15b38:	str	r0, [fp, #-12]
   15b3c:	ldr	r0, [fp, #-12]
   15b40:	sub	sp, fp, #8
   15b44:	pop	{r4, r5, fp, pc}
   15b48:	push	{fp, lr}
   15b4c:	mov	fp, sp
   15b50:	sub	sp, sp, #104	; 0x68
   15b54:	ldr	ip, [fp, #12]
   15b58:	ldr	lr, [fp, #8]
   15b5c:	str	r0, [fp, #-8]
   15b60:	str	r1, [fp, #-12]
   15b64:	str	r2, [fp, #-16]
   15b68:	str	r3, [fp, #-20]	; 0xffffffec
   15b6c:	ldr	r0, [fp, #8]
   15b70:	sub	r0, r0, #1
   15b74:	str	r0, [sp, #60]	; 0x3c
   15b78:	str	r0, [sp, #48]	; 0x30
   15b7c:	ldr	r0, [sp, #48]	; 0x30
   15b80:	cmp	r0, #0
   15b84:	bne	15b94 <flatcc_verify_table_field@@Base+0x13c>
   15b88:	movw	r0, #3
   15b8c:	str	r0, [fp, #-4]
   15b90:	b	15e10 <flatcc_verify_table_field@@Base+0x3b8>
   15b94:	b	15b98 <flatcc_verify_table_field@@Base+0x140>
   15b98:	b	15b9c <flatcc_verify_table_field@@Base+0x144>
   15b9c:	ldr	r0, [fp, #-12]
   15ba0:	ldr	r1, [fp, #-16]
   15ba4:	ldr	r2, [fp, #-20]	; 0xffffffec
   15ba8:	bl	17508 <flatcc_verify_union_vector_field@@Base+0x56c>
   15bac:	str	r0, [sp, #44]	; 0x2c
   15bb0:	ldr	r0, [sp, #44]	; 0x2c
   15bb4:	cmp	r0, #0
   15bb8:	bne	15bc8 <flatcc_verify_table_field@@Base+0x170>
   15bbc:	movw	r0, #15
   15bc0:	str	r0, [fp, #-4]
   15bc4:	b	15e10 <flatcc_verify_table_field@@Base+0x3b8>
   15bc8:	b	15bcc <flatcc_verify_table_field@@Base+0x174>
   15bcc:	ldr	r0, [fp, #-16]
   15bd0:	ldr	r1, [fp, #-20]	; 0xffffffec
   15bd4:	add	r0, r0, r1
   15bd8:	str	r0, [sp, #68]	; 0x44
   15bdc:	ldr	r0, [sp, #68]	; 0x44
   15be0:	ldr	r1, [fp, #-8]
   15be4:	ldr	r2, [sp, #68]	; 0x44
   15be8:	str	r0, [sp, #16]
   15bec:	mov	r0, r1
   15bf0:	mov	r1, r2
   15bf4:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   15bf8:	ldr	r1, [sp, #16]
   15bfc:	sub	r0, r1, r0
   15c00:	str	r0, [fp, #-24]	; 0xffffffe8
   15c04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c08:	cmp	r0, #0
   15c0c:	movw	r0, #0
   15c10:	str	r0, [sp, #12]
   15c14:	blt	15c38 <flatcc_verify_table_field@@Base+0x1e0>
   15c18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c1c:	and	r0, r0, #1
   15c20:	cmp	r0, #0
   15c24:	movw	r0, #0
   15c28:	movne	r0, #1
   15c2c:	mvn	r1, #0
   15c30:	eor	r0, r0, r1
   15c34:	str	r0, [sp, #12]
   15c38:	ldr	r0, [sp, #12]
   15c3c:	and	r0, r0, #1
   15c40:	str	r0, [sp, #40]	; 0x28
   15c44:	ldr	r0, [sp, #40]	; 0x28
   15c48:	cmp	r0, #0
   15c4c:	bne	15c5c <flatcc_verify_table_field@@Base+0x204>
   15c50:	movw	r0, #29
   15c54:	str	r0, [fp, #-4]
   15c58:	b	15e10 <flatcc_verify_table_field@@Base+0x3b8>
   15c5c:	b	15c60 <flatcc_verify_table_field@@Base+0x208>
   15c60:	b	15c64 <flatcc_verify_table_field@@Base+0x20c>
   15c64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c68:	add	r0, r0, #2
   15c6c:	ldr	r1, [fp, #-12]
   15c70:	cmp	r0, r1
   15c74:	movw	r0, #0
   15c78:	movls	r0, #1
   15c7c:	and	r0, r0, #1
   15c80:	str	r0, [sp, #36]	; 0x24
   15c84:	ldr	r0, [sp, #36]	; 0x24
   15c88:	cmp	r0, #0
   15c8c:	bne	15c9c <flatcc_verify_table_field@@Base+0x244>
   15c90:	movw	r0, #27
   15c94:	str	r0, [fp, #-4]
   15c98:	b	15e10 <flatcc_verify_table_field@@Base+0x3b8>
   15c9c:	b	15ca0 <flatcc_verify_table_field@@Base+0x248>
   15ca0:	ldr	r0, [fp, #-8]
   15ca4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15ca8:	bl	17684 <flatcc_verify_union_vector_field@@Base+0x6e8>
   15cac:	strh	r0, [sp, #74]	; 0x4a
   15cb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15cb4:	ldrh	r1, [sp, #74]	; 0x4a
   15cb8:	add	r0, r0, r1
   15cbc:	str	r0, [fp, #-28]	; 0xffffffe4
   15cc0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15cc4:	ldr	r1, [fp, #-12]
   15cc8:	cmp	r0, r1
   15ccc:	movw	r0, #0
   15cd0:	str	r0, [sp, #8]
   15cd4:	bhi	15cf8 <flatcc_verify_table_field@@Base+0x2a0>
   15cd8:	ldrh	r0, [sp, #74]	; 0x4a
   15cdc:	and	r0, r0, #1
   15ce0:	cmp	r0, #0
   15ce4:	movw	r0, #0
   15ce8:	movne	r0, #1
   15cec:	mvn	r1, #0
   15cf0:	eor	r0, r0, r1
   15cf4:	str	r0, [sp, #8]
   15cf8:	ldr	r0, [sp, #8]
   15cfc:	and	r0, r0, #1
   15d00:	str	r0, [sp, #32]
   15d04:	ldr	r0, [sp, #32]
   15d08:	cmp	r0, #0
   15d0c:	bne	15d1c <flatcc_verify_table_field@@Base+0x2c4>
   15d10:	movw	r0, #30
   15d14:	str	r0, [fp, #-4]
   15d18:	b	15e10 <flatcc_verify_table_field@@Base+0x3b8>
   15d1c:	b	15d20 <flatcc_verify_table_field@@Base+0x2c8>
   15d20:	b	15d24 <flatcc_verify_table_field@@Base+0x2cc>
   15d24:	movw	r0, #1
   15d28:	str	r0, [sp, #28]
   15d2c:	ldr	r0, [sp, #28]
   15d30:	cmp	r0, #0
   15d34:	bne	15d44 <flatcc_verify_table_field@@Base+0x2ec>
   15d38:	movw	r0, #31
   15d3c:	str	r0, [fp, #-4]
   15d40:	b	15e10 <flatcc_verify_table_field@@Base+0x3b8>
   15d44:	b	15d48 <flatcc_verify_table_field@@Base+0x2f0>
   15d48:	b	15d4c <flatcc_verify_table_field@@Base+0x2f4>
   15d4c:	ldrh	r0, [sp, #74]	; 0x4a
   15d50:	cmp	r0, #4
   15d54:	movw	r0, #0
   15d58:	movcs	r0, #1
   15d5c:	and	r0, r0, #1
   15d60:	str	r0, [sp, #24]
   15d64:	ldr	r0, [sp, #24]
   15d68:	cmp	r0, #0
   15d6c:	bne	15d7c <flatcc_verify_table_field@@Base+0x324>
   15d70:	movw	r0, #28
   15d74:	str	r0, [fp, #-4]
   15d78:	b	15e10 <flatcc_verify_table_field@@Base+0x3b8>
   15d7c:	b	15d80 <flatcc_verify_table_field@@Base+0x328>
   15d80:	ldr	r0, [fp, #-8]
   15d84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15d88:	add	r1, r1, #2
   15d8c:	bl	17684 <flatcc_verify_union_vector_field@@Base+0x6e8>
   15d90:	strh	r0, [sp, #72]	; 0x48
   15d94:	ldr	r0, [fp, #-12]
   15d98:	ldr	r1, [sp, #68]	; 0x44
   15d9c:	sub	r0, r0, r1
   15da0:	ldrh	r1, [sp, #72]	; 0x48
   15da4:	cmp	r0, r1
   15da8:	movw	r0, #0
   15dac:	movcs	r0, #1
   15db0:	and	r0, r0, #1
   15db4:	str	r0, [sp, #20]
   15db8:	ldr	r0, [sp, #20]
   15dbc:	cmp	r0, #0
   15dc0:	bne	15dd0 <flatcc_verify_table_field@@Base+0x378>
   15dc4:	movw	r0, #20
   15dc8:	str	r0, [fp, #-4]
   15dcc:	b	15e10 <flatcc_verify_table_field@@Base+0x3b8>
   15dd0:	b	15dd4 <flatcc_verify_table_field@@Base+0x37c>
   15dd4:	ldr	r0, [fp, #-8]
   15dd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15ddc:	add	r0, r0, r1
   15de0:	str	r0, [sp, #64]	; 0x40
   15de4:	ldr	r0, [fp, #-8]
   15de8:	str	r0, [sp, #52]	; 0x34
   15dec:	ldr	r0, [fp, #-12]
   15df0:	str	r0, [sp, #56]	; 0x38
   15df4:	ldr	r0, [fp, #12]
   15df8:	add	r1, sp, #52	; 0x34
   15dfc:	str	r0, [sp, #4]
   15e00:	mov	r0, r1
   15e04:	ldr	r1, [sp, #4]
   15e08:	blx	r1
   15e0c:	str	r0, [fp, #-4]
   15e10:	ldr	r0, [fp, #-4]
   15e14:	mov	sp, fp
   15e18:	pop	{fp, pc}

00015e1c <flatcc_verify_table_vector_field@@Base>:
   15e1c:	push	{r4, r5, fp, lr}
   15e20:	add	fp, sp, #8
   15e24:	sub	sp, sp, #64	; 0x40
   15e28:	str	r0, [fp, #-16]
   15e2c:	strh	r1, [fp, #-18]	; 0xffffffee
   15e30:	str	r2, [fp, #-24]	; 0xffffffe8
   15e34:	str	r3, [fp, #-28]	; 0xffffffe4
   15e38:	ldr	r0, [fp, #-16]
   15e3c:	ldrh	r1, [fp, #-18]	; 0xffffffee
   15e40:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15e44:	uxth	r1, r1
   15e48:	sub	r3, fp, #32
   15e4c:	bl	15308 <flatcc_verify_string_field@@Base+0xc0>
   15e50:	str	r0, [sp, #36]	; 0x24
   15e54:	ldr	r0, [sp, #36]	; 0x24
   15e58:	cmp	r0, #0
   15e5c:	bne	15e6c <flatcc_verify_table_vector_field@@Base+0x50>
   15e60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15e64:	cmp	r0, #0
   15e68:	bne	15e78 <flatcc_verify_table_vector_field@@Base+0x5c>
   15e6c:	ldr	r0, [sp, #36]	; 0x24
   15e70:	str	r0, [fp, #-12]
   15e74:	b	15f00 <flatcc_verify_table_vector_field@@Base+0xe4>
   15e78:	b	15e7c <flatcc_verify_table_vector_field@@Base+0x60>
   15e7c:	ldr	r0, [fp, #-16]
   15e80:	ldr	r0, [r0]
   15e84:	ldr	r1, [fp, #-16]
   15e88:	ldr	r1, [r1, #4]
   15e8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15e90:	ldr	r3, [fp, #-16]
   15e94:	ldr	r3, [r3]
   15e98:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15e9c:	str	r0, [sp, #32]
   15ea0:	mov	r0, r3
   15ea4:	str	r1, [sp, #28]
   15ea8:	mov	r1, ip
   15eac:	str	r2, [sp, #24]
   15eb0:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   15eb4:	ldr	r1, [fp, #-16]
   15eb8:	ldr	r1, [r1, #8]
   15ebc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15ec0:	ldr	r3, [sp, #32]
   15ec4:	str	r0, [sp, #20]
   15ec8:	mov	r0, r3
   15ecc:	ldr	ip, [sp, #28]
   15ed0:	str	r1, [sp, #16]
   15ed4:	mov	r1, ip
   15ed8:	ldr	lr, [sp, #24]
   15edc:	str	r2, [sp, #12]
   15ee0:	mov	r2, lr
   15ee4:	ldr	r3, [sp, #20]
   15ee8:	ldr	r4, [sp, #16]
   15eec:	str	r4, [sp]
   15ef0:	ldr	r5, [sp, #12]
   15ef4:	str	r5, [sp, #4]
   15ef8:	bl	15f0c <flatcc_verify_table_vector_field@@Base+0xf0>
   15efc:	str	r0, [fp, #-12]
   15f00:	ldr	r0, [fp, #-12]
   15f04:	sub	sp, fp, #8
   15f08:	pop	{r4, r5, fp, pc}
   15f0c:	push	{r4, r5, fp, lr}
   15f10:	add	fp, sp, #8
   15f14:	sub	sp, sp, #104	; 0x68
   15f18:	ldr	ip, [fp, #12]
   15f1c:	ldr	lr, [fp, #8]
   15f20:	str	r0, [fp, #-16]
   15f24:	str	r1, [fp, #-20]	; 0xffffffec
   15f28:	str	r2, [fp, #-24]	; 0xffffffe8
   15f2c:	str	r3, [fp, #-28]	; 0xffffffe4
   15f30:	ldr	r0, [fp, #8]
   15f34:	mvn	r1, #0
   15f38:	add	r1, r0, r1
   15f3c:	str	r1, [fp, #8]
   15f40:	cmp	r0, #0
   15f44:	movw	r0, #0
   15f48:	movgt	r0, #1
   15f4c:	and	r0, r0, #1
   15f50:	str	r0, [fp, #-40]	; 0xffffffd8
   15f54:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15f58:	cmp	r0, #0
   15f5c:	bne	15f6c <flatcc_verify_table_vector_field@@Base+0x150>
   15f60:	movw	r0, #3
   15f64:	str	r0, [fp, #-12]
   15f68:	b	1616c <flatcc_verify_table_vector_field@@Base+0x350>
   15f6c:	b	15f70 <flatcc_verify_table_vector_field@@Base+0x154>
   15f70:	ldr	r0, [pc, #512]	; 16178 <flatcc_verify_table_vector_field@@Base+0x35c>
   15f74:	ldr	r1, [fp, #-16]
   15f78:	ldr	r2, [fp, #-20]	; 0xffffffec
   15f7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15f80:	ldr	ip, [fp, #-28]	; 0xffffffe4
   15f84:	str	r0, [fp, #-44]	; 0xffffffd4
   15f88:	mov	r0, r1
   15f8c:	mov	r1, r2
   15f90:	mov	r2, r3
   15f94:	mov	r3, ip
   15f98:	movw	ip, #4
   15f9c:	str	ip, [sp]
   15fa0:	movw	ip, #4
   15fa4:	uxth	ip, ip
   15fa8:	str	ip, [sp, #4]
   15fac:	ldr	ip, [fp, #-44]	; 0xffffffd4
   15fb0:	str	ip, [sp, #8]
   15fb4:	bl	156b4 <flatcc_verify_vector_field@@Base+0x110>
   15fb8:	cmp	r0, #0
   15fbc:	beq	16010 <flatcc_verify_table_vector_field@@Base+0x1f4>
   15fc0:	ldr	r0, [pc, #432]	; 16178 <flatcc_verify_table_vector_field@@Base+0x35c>
   15fc4:	ldr	r1, [fp, #-16]
   15fc8:	ldr	r2, [fp, #-20]	; 0xffffffec
   15fcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15fd0:	ldr	ip, [fp, #-28]	; 0xffffffe4
   15fd4:	str	r0, [fp, #-48]	; 0xffffffd0
   15fd8:	mov	r0, r1
   15fdc:	mov	r1, r2
   15fe0:	mov	r2, r3
   15fe4:	mov	r3, ip
   15fe8:	movw	ip, #4
   15fec:	str	ip, [sp]
   15ff0:	movw	ip, #4
   15ff4:	uxth	ip, ip
   15ff8:	str	ip, [sp, #4]
   15ffc:	ldr	ip, [fp, #-48]	; 0xffffffd0
   16000:	str	ip, [sp, #8]
   16004:	bl	156b4 <flatcc_verify_vector_field@@Base+0x110>
   16008:	str	r0, [fp, #-12]
   1600c:	b	1616c <flatcc_verify_table_vector_field@@Base+0x350>
   16010:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16014:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16018:	add	r0, r1, r0
   1601c:	str	r0, [fp, #-24]	; 0xffffffe8
   16020:	ldr	r0, [fp, #-16]
   16024:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16028:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   1602c:	str	r0, [fp, #-36]	; 0xffffffdc
   16030:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16034:	add	r0, r0, #4
   16038:	str	r0, [fp, #-24]	; 0xffffffe8
   1603c:	movw	r0, #0
   16040:	str	r0, [fp, #-32]	; 0xffffffe0
   16044:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16048:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1604c:	cmp	r0, r1
   16050:	bcs	16164 <flatcc_verify_table_vector_field@@Base+0x348>
   16054:	ldr	r0, [fp, #-16]
   16058:	ldr	r1, [fp, #-20]	; 0xffffffec
   1605c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16060:	ldr	r3, [fp, #-16]
   16064:	ldr	ip, [fp, #-24]	; 0xffffffe8
   16068:	str	r0, [fp, #-52]	; 0xffffffcc
   1606c:	mov	r0, r3
   16070:	str	r1, [sp, #56]	; 0x38
   16074:	mov	r1, ip
   16078:	str	r2, [sp, #52]	; 0x34
   1607c:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   16080:	ldr	r1, [fp, #8]
   16084:	ldr	r2, [fp, #12]
   16088:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1608c:	str	r0, [sp, #48]	; 0x30
   16090:	mov	r0, r3
   16094:	ldr	ip, [sp, #56]	; 0x38
   16098:	str	r1, [sp, #44]	; 0x2c
   1609c:	mov	r1, ip
   160a0:	ldr	lr, [sp, #52]	; 0x34
   160a4:	str	r2, [sp, #40]	; 0x28
   160a8:	mov	r2, lr
   160ac:	ldr	r3, [sp, #48]	; 0x30
   160b0:	ldr	r4, [sp, #44]	; 0x2c
   160b4:	str	r4, [sp]
   160b8:	ldr	r5, [sp, #40]	; 0x28
   160bc:	str	r5, [sp, #4]
   160c0:	bl	15b48 <flatcc_verify_table_field@@Base+0xf0>
   160c4:	cmp	r0, #0
   160c8:	beq	16144 <flatcc_verify_table_vector_field@@Base+0x328>
   160cc:	ldr	r0, [fp, #-16]
   160d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   160d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   160d8:	ldr	r3, [fp, #-16]
   160dc:	ldr	ip, [fp, #-24]	; 0xffffffe8
   160e0:	str	r0, [sp, #36]	; 0x24
   160e4:	mov	r0, r3
   160e8:	str	r1, [sp, #32]
   160ec:	mov	r1, ip
   160f0:	str	r2, [sp, #28]
   160f4:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   160f8:	ldr	r1, [fp, #8]
   160fc:	ldr	r2, [fp, #12]
   16100:	ldr	r3, [sp, #36]	; 0x24
   16104:	str	r0, [sp, #24]
   16108:	mov	r0, r3
   1610c:	ldr	ip, [sp, #32]
   16110:	str	r1, [sp, #20]
   16114:	mov	r1, ip
   16118:	ldr	lr, [sp, #28]
   1611c:	str	r2, [sp, #16]
   16120:	mov	r2, lr
   16124:	ldr	r3, [sp, #24]
   16128:	ldr	r4, [sp, #20]
   1612c:	str	r4, [sp]
   16130:	ldr	r5, [sp, #16]
   16134:	str	r5, [sp, #4]
   16138:	bl	15b48 <flatcc_verify_table_field@@Base+0xf0>
   1613c:	str	r0, [fp, #-12]
   16140:	b	1616c <flatcc_verify_table_vector_field@@Base+0x350>
   16144:	b	16148 <flatcc_verify_table_vector_field@@Base+0x32c>
   16148:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1614c:	add	r0, r0, #1
   16150:	str	r0, [fp, #-32]	; 0xffffffe0
   16154:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16158:	add	r0, r0, #4
   1615c:	str	r0, [fp, #-24]	; 0xffffffe8
   16160:	b	16044 <flatcc_verify_table_vector_field@@Base+0x228>
   16164:	movw	r0, #0
   16168:	str	r0, [fp, #-12]
   1616c:	ldr	r0, [fp, #-12]
   16170:	sub	sp, fp, #8
   16174:	pop	{r4, r5, fp, pc}
   16178:	svccc	0x00ffffff

0001617c <flatcc_verify_union_table@@Base>:
   1617c:	push	{fp, lr}
   16180:	mov	fp, sp
   16184:	sub	sp, sp, #16
   16188:	str	r0, [fp, #-4]
   1618c:	str	r1, [sp, #8]
   16190:	ldr	r0, [fp, #-4]
   16194:	ldr	r0, [r0]
   16198:	ldr	r1, [fp, #-4]
   1619c:	ldr	r1, [r1, #4]
   161a0:	ldr	r2, [fp, #-4]
   161a4:	ldr	r2, [r2, #16]
   161a8:	ldr	r3, [fp, #-4]
   161ac:	ldr	r3, [r3, #20]
   161b0:	ldr	ip, [fp, #-4]
   161b4:	ldr	ip, [ip, #8]
   161b8:	ldr	lr, [sp, #8]
   161bc:	str	ip, [sp]
   161c0:	str	lr, [sp, #4]
   161c4:	bl	15b48 <flatcc_verify_table_field@@Base+0xf0>
   161c8:	mov	sp, fp
   161cc:	pop	{fp, pc}

000161d0 <flatcc_verify_union_struct@@Base>:
   161d0:	push	{fp, lr}
   161d4:	mov	fp, sp
   161d8:	sub	sp, sp, #16
   161dc:	str	r0, [fp, #-4]
   161e0:	str	r1, [sp, #8]
   161e4:	strh	r2, [sp, #6]
   161e8:	ldr	r0, [fp, #-4]
   161ec:	ldr	r0, [r0, #4]
   161f0:	ldr	r1, [fp, #-4]
   161f4:	ldr	r1, [r1, #16]
   161f8:	ldr	r2, [fp, #-4]
   161fc:	ldr	r2, [r2, #20]
   16200:	ldr	r3, [sp, #8]
   16204:	ldrh	ip, [sp, #6]
   16208:	str	ip, [sp]
   1620c:	bl	16218 <flatcc_verify_union_struct@@Base+0x48>
   16210:	mov	sp, fp
   16214:	pop	{fp, pc}
   16218:	sub	sp, sp, #36	; 0x24
   1621c:	ldr	ip, [sp, #36]	; 0x24
   16220:	str	r0, [sp, #28]
   16224:	str	r1, [sp, #24]
   16228:	str	r2, [sp, #20]
   1622c:	str	r3, [sp, #16]
   16230:	strh	ip, [sp, #14]
   16234:	ldr	r0, [sp, #20]
   16238:	cmp	r0, #0
   1623c:	beq	16258 <flatcc_verify_union_struct@@Base+0x88>
   16240:	ldr	r0, [sp, #24]
   16244:	ldr	r1, [sp, #20]
   16248:	add	r0, r0, r1
   1624c:	ldr	r1, [sp, #28]
   16250:	cmp	r0, r1
   16254:	bls	16264 <flatcc_verify_union_struct@@Base+0x94>
   16258:	movw	r0, #18
   1625c:	str	r0, [sp, #32]
   16260:	b	1634c <flatcc_verify_union_struct@@Base+0x17c>
   16264:	ldr	r0, [sp, #20]
   16268:	ldr	r1, [sp, #24]
   1626c:	add	r0, r1, r0
   16270:	str	r0, [sp, #24]
   16274:	ldr	r0, [sp, #24]
   16278:	ldr	r1, [sp, #16]
   1627c:	add	r0, r0, r1
   16280:	ldr	r1, [sp, #24]
   16284:	cmp	r0, r1
   16288:	movw	r0, #0
   1628c:	movcs	r0, #1
   16290:	and	r0, r0, #1
   16294:	str	r0, [sp, #8]
   16298:	ldr	r0, [sp, #8]
   1629c:	cmp	r0, #0
   162a0:	bne	162b0 <flatcc_verify_union_struct@@Base+0xe0>
   162a4:	movw	r0, #10
   162a8:	str	r0, [sp, #32]
   162ac:	b	1634c <flatcc_verify_union_struct@@Base+0x17c>
   162b0:	b	162b4 <flatcc_verify_union_struct@@Base+0xe4>
   162b4:	b	162b8 <flatcc_verify_union_struct@@Base+0xe8>
   162b8:	ldr	r0, [sp, #24]
   162bc:	ldr	r1, [sp, #16]
   162c0:	add	r0, r0, r1
   162c4:	ldr	r1, [sp, #28]
   162c8:	cmp	r0, r1
   162cc:	movw	r0, #0
   162d0:	movls	r0, #1
   162d4:	and	r0, r0, #1
   162d8:	str	r0, [sp, #4]
   162dc:	ldr	r0, [sp, #4]
   162e0:	cmp	r0, #0
   162e4:	bne	162f4 <flatcc_verify_union_struct@@Base+0x124>
   162e8:	movw	r0, #9
   162ec:	str	r0, [sp, #32]
   162f0:	b	1634c <flatcc_verify_union_struct@@Base+0x17c>
   162f4:	b	162f8 <flatcc_verify_union_struct@@Base+0x128>
   162f8:	b	162fc <flatcc_verify_union_struct@@Base+0x12c>
   162fc:	ldr	r0, [sp, #24]
   16300:	ldrh	r1, [sp, #14]
   16304:	sub	r1, r1, #1
   16308:	and	r0, r0, r1
   1630c:	cmp	r0, #0
   16310:	movw	r0, #0
   16314:	movne	r0, #1
   16318:	mvn	r1, #0
   1631c:	eor	r0, r0, r1
   16320:	and	r0, r0, #1
   16324:	str	r0, [sp]
   16328:	ldr	r0, [sp]
   1632c:	cmp	r0, #0
   16330:	bne	16340 <flatcc_verify_union_struct@@Base+0x170>
   16334:	movw	r0, #11
   16338:	str	r0, [sp, #32]
   1633c:	b	1634c <flatcc_verify_union_struct@@Base+0x17c>
   16340:	b	16344 <flatcc_verify_union_struct@@Base+0x174>
   16344:	movw	r0, #0
   16348:	str	r0, [sp, #32]
   1634c:	ldr	r0, [sp, #32]
   16350:	add	sp, sp, #36	; 0x24
   16354:	bx	lr

00016358 <flatcc_verify_union_string@@Base>:
   16358:	push	{fp, lr}
   1635c:	mov	fp, sp
   16360:	sub	sp, sp, #8
   16364:	str	r0, [sp, #4]
   16368:	ldr	r0, [sp, #4]
   1636c:	ldr	r0, [r0]
   16370:	ldr	r1, [sp, #4]
   16374:	ldr	r1, [r1, #4]
   16378:	ldr	r2, [sp, #4]
   1637c:	ldr	r2, [r2, #16]
   16380:	ldr	r3, [sp, #4]
   16384:	ldr	r3, [r3, #20]
   16388:	bl	1545c <flatcc_verify_string_field@@Base+0x214>
   1638c:	mov	sp, fp
   16390:	pop	{fp, pc}

00016394 <flatcc_verify_buffer_header@@Base>:
   16394:	push	{fp, lr}
   16398:	mov	fp, sp
   1639c:	sub	sp, sp, #48	; 0x30
   163a0:	str	r0, [fp, #-8]
   163a4:	str	r1, [fp, #-12]
   163a8:	str	r2, [fp, #-16]
   163ac:	ldr	r0, [fp, #-8]
   163b0:	and	r0, r0, #3
   163b4:	cmp	r0, #0
   163b8:	movw	r0, #0
   163bc:	movne	r0, #1
   163c0:	mvn	r1, #0
   163c4:	eor	r0, r0, r1
   163c8:	and	r0, r0, #1
   163cc:	str	r0, [sp, #20]
   163d0:	ldr	r0, [sp, #20]
   163d4:	cmp	r0, #0
   163d8:	bne	163e8 <flatcc_verify_buffer_header@@Base+0x54>
   163dc:	movw	r0, #5
   163e0:	str	r0, [fp, #-4]
   163e4:	b	164e8 <flatcc_verify_buffer_header@@Base+0x154>
   163e8:	b	163ec <flatcc_verify_buffer_header@@Base+0x58>
   163ec:	b	163f0 <flatcc_verify_buffer_header@@Base+0x5c>
   163f0:	ldr	r0, [fp, #-12]
   163f4:	cmn	r0, #9
   163f8:	movw	r0, #0
   163fc:	movls	r0, #1
   16400:	and	r0, r0, #1
   16404:	str	r0, [sp, #16]
   16408:	ldr	r0, [sp, #16]
   1640c:	cmp	r0, #0
   16410:	bne	16420 <flatcc_verify_buffer_header@@Base+0x8c>
   16414:	movw	r0, #6
   16418:	str	r0, [fp, #-4]
   1641c:	b	164e8 <flatcc_verify_buffer_header@@Base+0x154>
   16420:	b	16424 <flatcc_verify_buffer_header@@Base+0x90>
   16424:	b	16428 <flatcc_verify_buffer_header@@Base+0x94>
   16428:	ldr	r0, [fp, #-12]
   1642c:	cmp	r0, #8
   16430:	movw	r0, #0
   16434:	movcs	r0, #1
   16438:	and	r0, r0, #1
   1643c:	str	r0, [sp, #12]
   16440:	ldr	r0, [sp, #12]
   16444:	cmp	r0, #0
   16448:	bne	16458 <flatcc_verify_buffer_header@@Base+0xc4>
   1644c:	movw	r0, #1
   16450:	str	r0, [fp, #-4]
   16454:	b	164e8 <flatcc_verify_buffer_header@@Base+0x154>
   16458:	b	1645c <flatcc_verify_buffer_header@@Base+0xc8>
   1645c:	ldr	r0, [fp, #-16]
   16460:	movw	r1, #0
   16464:	cmp	r0, r1
   16468:	beq	164e0 <flatcc_verify_buffer_header@@Base+0x14c>
   1646c:	ldr	r0, [fp, #-16]
   16470:	bl	164f4 <flatcc_verify_buffer_header@@Base+0x160>
   16474:	str	r0, [sp, #24]
   16478:	ldr	r0, [fp, #-8]
   1647c:	movw	r1, #4
   16480:	bl	16534 <flatcc_verify_buffer_header@@Base+0x1a0>
   16484:	str	r0, [fp, #-20]	; 0xffffffec
   16488:	ldr	r0, [sp, #24]
   1648c:	cmp	r0, #0
   16490:	movw	r0, #1
   16494:	str	r0, [sp, #4]
   16498:	beq	164b4 <flatcc_verify_buffer_header@@Base+0x120>
   1649c:	ldr	r0, [fp, #-20]	; 0xffffffec
   164a0:	ldr	r1, [sp, #24]
   164a4:	cmp	r0, r1
   164a8:	movw	r0, #0
   164ac:	moveq	r0, #1
   164b0:	str	r0, [sp, #4]
   164b4:	ldr	r0, [sp, #4]
   164b8:	and	r0, r0, #1
   164bc:	str	r0, [sp, #8]
   164c0:	ldr	r0, [sp, #8]
   164c4:	cmp	r0, #0
   164c8:	bne	164d8 <flatcc_verify_buffer_header@@Base+0x144>
   164cc:	movw	r0, #2
   164d0:	str	r0, [fp, #-4]
   164d4:	b	164e8 <flatcc_verify_buffer_header@@Base+0x154>
   164d8:	b	164dc <flatcc_verify_buffer_header@@Base+0x148>
   164dc:	b	164e0 <flatcc_verify_buffer_header@@Base+0x14c>
   164e0:	movw	r0, #0
   164e4:	str	r0, [fp, #-4]
   164e8:	ldr	r0, [fp, #-4]
   164ec:	mov	sp, fp
   164f0:	pop	{fp, pc}
   164f4:	push	{fp, lr}
   164f8:	mov	fp, sp
   164fc:	sub	sp, sp, #16
   16500:	str	r0, [fp, #-4]
   16504:	movw	r0, #0
   16508:	str	r0, [sp, #8]
   1650c:	add	r0, sp, #8
   16510:	ldr	r1, [fp, #-4]
   16514:	movw	r2, #4
   16518:	bl	10e78 <strncpy@plt>
   1651c:	ldr	r1, [sp, #8]
   16520:	str	r0, [sp, #4]
   16524:	mov	r0, r1
   16528:	bl	176f0 <flatcc_verify_union_vector_field@@Base+0x754>
   1652c:	mov	sp, fp
   16530:	pop	{fp, pc}
   16534:	push	{fp, lr}
   16538:	mov	fp, sp
   1653c:	sub	sp, sp, #8
   16540:	str	r0, [sp, #4]
   16544:	str	r1, [sp]
   16548:	ldr	r0, [sp, #4]
   1654c:	ldr	r1, [sp]
   16550:	add	r0, r0, r1
   16554:	bl	17704 <flatcc_verify_union_vector_field@@Base+0x768>
   16558:	mov	sp, fp
   1655c:	pop	{fp, pc}

00016560 <flatcc_verify_typed_buffer_header@@Base>:
   16560:	push	{fp, lr}
   16564:	mov	fp, sp
   16568:	sub	sp, sp, #48	; 0x30
   1656c:	str	r0, [fp, #-8]
   16570:	str	r1, [fp, #-12]
   16574:	str	r2, [fp, #-16]
   16578:	ldr	r0, [fp, #-8]
   1657c:	and	r0, r0, #3
   16580:	cmp	r0, #0
   16584:	movw	r0, #0
   16588:	movne	r0, #1
   1658c:	mvn	r1, #0
   16590:	eor	r0, r0, r1
   16594:	and	r0, r0, #1
   16598:	str	r0, [sp, #20]
   1659c:	ldr	r0, [sp, #20]
   165a0:	cmp	r0, #0
   165a4:	bne	165b4 <flatcc_verify_typed_buffer_header@@Base+0x54>
   165a8:	movw	r0, #5
   165ac:	str	r0, [fp, #-4]
   165b0:	b	166ac <flatcc_verify_typed_buffer_header@@Base+0x14c>
   165b4:	b	165b8 <flatcc_verify_typed_buffer_header@@Base+0x58>
   165b8:	b	165bc <flatcc_verify_typed_buffer_header@@Base+0x5c>
   165bc:	ldr	r0, [fp, #-12]
   165c0:	cmn	r0, #9
   165c4:	movw	r0, #0
   165c8:	movls	r0, #1
   165cc:	and	r0, r0, #1
   165d0:	str	r0, [sp, #16]
   165d4:	ldr	r0, [sp, #16]
   165d8:	cmp	r0, #0
   165dc:	bne	165ec <flatcc_verify_typed_buffer_header@@Base+0x8c>
   165e0:	movw	r0, #6
   165e4:	str	r0, [fp, #-4]
   165e8:	b	166ac <flatcc_verify_typed_buffer_header@@Base+0x14c>
   165ec:	b	165f0 <flatcc_verify_typed_buffer_header@@Base+0x90>
   165f0:	b	165f4 <flatcc_verify_typed_buffer_header@@Base+0x94>
   165f4:	ldr	r0, [fp, #-12]
   165f8:	cmp	r0, #8
   165fc:	movw	r0, #0
   16600:	movcs	r0, #1
   16604:	and	r0, r0, #1
   16608:	str	r0, [sp, #12]
   1660c:	ldr	r0, [sp, #12]
   16610:	cmp	r0, #0
   16614:	bne	16624 <flatcc_verify_typed_buffer_header@@Base+0xc4>
   16618:	movw	r0, #1
   1661c:	str	r0, [fp, #-4]
   16620:	b	166ac <flatcc_verify_typed_buffer_header@@Base+0x14c>
   16624:	b	16628 <flatcc_verify_typed_buffer_header@@Base+0xc8>
   16628:	ldr	r0, [fp, #-16]
   1662c:	cmp	r0, #0
   16630:	beq	166a4 <flatcc_verify_typed_buffer_header@@Base+0x144>
   16634:	ldr	r0, [fp, #-16]
   16638:	str	r0, [sp, #24]
   1663c:	ldr	r0, [fp, #-8]
   16640:	movw	r1, #4
   16644:	bl	16534 <flatcc_verify_buffer_header@@Base+0x1a0>
   16648:	str	r0, [fp, #-20]	; 0xffffffec
   1664c:	ldr	r0, [sp, #24]
   16650:	cmp	r0, #0
   16654:	movw	r0, #1
   16658:	str	r0, [sp, #4]
   1665c:	beq	16678 <flatcc_verify_typed_buffer_header@@Base+0x118>
   16660:	ldr	r0, [fp, #-20]	; 0xffffffec
   16664:	ldr	r1, [sp, #24]
   16668:	cmp	r0, r1
   1666c:	movw	r0, #0
   16670:	moveq	r0, #1
   16674:	str	r0, [sp, #4]
   16678:	ldr	r0, [sp, #4]
   1667c:	and	r0, r0, #1
   16680:	str	r0, [sp, #8]
   16684:	ldr	r0, [sp, #8]
   16688:	cmp	r0, #0
   1668c:	bne	1669c <flatcc_verify_typed_buffer_header@@Base+0x13c>
   16690:	movw	r0, #2
   16694:	str	r0, [fp, #-4]
   16698:	b	166ac <flatcc_verify_typed_buffer_header@@Base+0x14c>
   1669c:	b	166a0 <flatcc_verify_typed_buffer_header@@Base+0x140>
   166a0:	b	166a4 <flatcc_verify_typed_buffer_header@@Base+0x144>
   166a4:	movw	r0, #0
   166a8:	str	r0, [fp, #-4]
   166ac:	ldr	r0, [fp, #-4]
   166b0:	mov	sp, fp
   166b4:	pop	{fp, pc}

000166b8 <flatcc_verify_struct_as_root@@Base>:
   166b8:	push	{fp, lr}
   166bc:	mov	fp, sp
   166c0:	sub	sp, sp, #40	; 0x28
   166c4:	ldr	ip, [fp, #8]
   166c8:	str	r0, [fp, #-8]
   166cc:	str	r1, [fp, #-12]
   166d0:	str	r2, [fp, #-16]
   166d4:	str	r3, [sp, #20]
   166d8:	strh	ip, [sp, #18]
   166dc:	ldr	r0, [fp, #-8]
   166e0:	ldr	r1, [fp, #-12]
   166e4:	ldr	r2, [fp, #-16]
   166e8:	bl	16394 <flatcc_verify_buffer_header@@Base>
   166ec:	cmp	r0, #0
   166f0:	beq	1670c <flatcc_verify_struct_as_root@@Base+0x54>
   166f4:	ldr	r0, [fp, #-8]
   166f8:	ldr	r1, [fp, #-12]
   166fc:	ldr	r2, [fp, #-16]
   16700:	bl	16394 <flatcc_verify_buffer_header@@Base>
   16704:	str	r0, [fp, #-4]
   16708:	b	1674c <flatcc_verify_struct_as_root@@Base+0x94>
   1670c:	ldr	r0, [fp, #-12]
   16710:	ldr	r1, [fp, #-8]
   16714:	str	r0, [sp, #12]
   16718:	mov	r0, r1
   1671c:	movw	r1, #0
   16720:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   16724:	ldr	r3, [sp, #20]
   16728:	ldr	r1, [sp, #12]
   1672c:	str	r0, [sp, #8]
   16730:	mov	r0, r1
   16734:	movw	r1, #0
   16738:	ldr	r2, [sp, #8]
   1673c:	ldrh	ip, [sp, #18]
   16740:	str	ip, [sp]
   16744:	bl	16218 <flatcc_verify_union_struct@@Base+0x48>
   16748:	str	r0, [fp, #-4]
   1674c:	ldr	r0, [fp, #-4]
   16750:	mov	sp, fp
   16754:	pop	{fp, pc}

00016758 <flatcc_verify_struct_as_typed_root@@Base>:
   16758:	push	{fp, lr}
   1675c:	mov	fp, sp
   16760:	sub	sp, sp, #40	; 0x28
   16764:	ldr	ip, [fp, #8]
   16768:	str	r0, [fp, #-8]
   1676c:	str	r1, [fp, #-12]
   16770:	str	r2, [fp, #-16]
   16774:	str	r3, [sp, #20]
   16778:	strh	ip, [sp, #18]
   1677c:	ldr	r0, [fp, #-8]
   16780:	ldr	r1, [fp, #-12]
   16784:	ldr	r2, [fp, #-16]
   16788:	bl	16560 <flatcc_verify_typed_buffer_header@@Base>
   1678c:	cmp	r0, #0
   16790:	beq	167ac <flatcc_verify_struct_as_typed_root@@Base+0x54>
   16794:	ldr	r0, [fp, #-8]
   16798:	ldr	r1, [fp, #-12]
   1679c:	ldr	r2, [fp, #-16]
   167a0:	bl	16560 <flatcc_verify_typed_buffer_header@@Base>
   167a4:	str	r0, [fp, #-4]
   167a8:	b	167ec <flatcc_verify_struct_as_typed_root@@Base+0x94>
   167ac:	ldr	r0, [fp, #-12]
   167b0:	ldr	r1, [fp, #-8]
   167b4:	str	r0, [sp, #12]
   167b8:	mov	r0, r1
   167bc:	movw	r1, #0
   167c0:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   167c4:	ldr	r3, [sp, #20]
   167c8:	ldr	r1, [sp, #12]
   167cc:	str	r0, [sp, #8]
   167d0:	mov	r0, r1
   167d4:	movw	r1, #0
   167d8:	ldr	r2, [sp, #8]
   167dc:	ldrh	ip, [sp, #18]
   167e0:	str	ip, [sp]
   167e4:	bl	16218 <flatcc_verify_union_struct@@Base+0x48>
   167e8:	str	r0, [fp, #-4]
   167ec:	ldr	r0, [fp, #-4]
   167f0:	mov	sp, fp
   167f4:	pop	{fp, pc}

000167f8 <flatcc_verify_table_as_root@@Base>:
   167f8:	push	{fp, lr}
   167fc:	mov	fp, sp
   16800:	sub	sp, sp, #48	; 0x30
   16804:	str	r0, [fp, #-8]
   16808:	str	r1, [fp, #-12]
   1680c:	str	r2, [fp, #-16]
   16810:	str	r3, [fp, #-20]	; 0xffffffec
   16814:	ldr	r0, [fp, #-8]
   16818:	ldr	r1, [fp, #-12]
   1681c:	ldr	r2, [fp, #-16]
   16820:	bl	16394 <flatcc_verify_buffer_header@@Base>
   16824:	cmp	r0, #0
   16828:	beq	16844 <flatcc_verify_table_as_root@@Base+0x4c>
   1682c:	ldr	r0, [fp, #-8]
   16830:	ldr	r1, [fp, #-12]
   16834:	ldr	r2, [fp, #-16]
   16838:	bl	16394 <flatcc_verify_buffer_header@@Base>
   1683c:	str	r0, [fp, #-4]
   16840:	b	168a4 <flatcc_verify_table_as_root@@Base+0xac>
   16844:	ldr	r0, [fp, #-8]
   16848:	ldr	r1, [fp, #-12]
   1684c:	ldr	r2, [fp, #-8]
   16850:	str	r0, [sp, #24]
   16854:	mov	r0, r2
   16858:	movw	r2, #0
   1685c:	str	r1, [sp, #20]
   16860:	mov	r1, r2
   16864:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   16868:	ldr	r1, [fp, #-20]	; 0xffffffec
   1686c:	ldr	r2, [sp, #24]
   16870:	str	r0, [sp, #16]
   16874:	mov	r0, r2
   16878:	ldr	r3, [sp, #20]
   1687c:	str	r1, [sp, #12]
   16880:	mov	r1, r3
   16884:	movw	r2, #0
   16888:	ldr	r3, [sp, #16]
   1688c:	movw	ip, #100	; 0x64
   16890:	str	ip, [sp]
   16894:	ldr	ip, [sp, #12]
   16898:	str	ip, [sp, #4]
   1689c:	bl	15b48 <flatcc_verify_table_field@@Base+0xf0>
   168a0:	str	r0, [fp, #-4]
   168a4:	ldr	r0, [fp, #-4]
   168a8:	mov	sp, fp
   168ac:	pop	{fp, pc}

000168b0 <flatcc_verify_table_as_typed_root@@Base>:
   168b0:	push	{fp, lr}
   168b4:	mov	fp, sp
   168b8:	sub	sp, sp, #48	; 0x30
   168bc:	str	r0, [fp, #-8]
   168c0:	str	r1, [fp, #-12]
   168c4:	str	r2, [fp, #-16]
   168c8:	str	r3, [fp, #-20]	; 0xffffffec
   168cc:	ldr	r0, [fp, #-8]
   168d0:	ldr	r1, [fp, #-12]
   168d4:	ldr	r2, [fp, #-16]
   168d8:	bl	16560 <flatcc_verify_typed_buffer_header@@Base>
   168dc:	cmp	r0, #0
   168e0:	beq	168fc <flatcc_verify_table_as_typed_root@@Base+0x4c>
   168e4:	ldr	r0, [fp, #-8]
   168e8:	ldr	r1, [fp, #-12]
   168ec:	ldr	r2, [fp, #-16]
   168f0:	bl	16560 <flatcc_verify_typed_buffer_header@@Base>
   168f4:	str	r0, [fp, #-4]
   168f8:	b	1695c <flatcc_verify_table_as_typed_root@@Base+0xac>
   168fc:	ldr	r0, [fp, #-8]
   16900:	ldr	r1, [fp, #-12]
   16904:	ldr	r2, [fp, #-8]
   16908:	str	r0, [sp, #24]
   1690c:	mov	r0, r2
   16910:	movw	r2, #0
   16914:	str	r1, [sp, #20]
   16918:	mov	r1, r2
   1691c:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   16920:	ldr	r1, [fp, #-20]	; 0xffffffec
   16924:	ldr	r2, [sp, #24]
   16928:	str	r0, [sp, #16]
   1692c:	mov	r0, r2
   16930:	ldr	r3, [sp, #20]
   16934:	str	r1, [sp, #12]
   16938:	mov	r1, r3
   1693c:	movw	r2, #0
   16940:	ldr	r3, [sp, #16]
   16944:	movw	ip, #100	; 0x64
   16948:	str	ip, [sp]
   1694c:	ldr	ip, [sp, #12]
   16950:	str	ip, [sp, #4]
   16954:	bl	15b48 <flatcc_verify_table_field@@Base+0xf0>
   16958:	str	r0, [fp, #-4]
   1695c:	ldr	r0, [fp, #-4]
   16960:	mov	sp, fp
   16964:	pop	{fp, pc}

00016968 <flatcc_verify_struct_as_nested_root@@Base>:
   16968:	push	{fp, lr}
   1696c:	mov	fp, sp
   16970:	sub	sp, sp, #48	; 0x30
   16974:	ldr	ip, [fp, #12]
   16978:	ldr	lr, [fp, #8]
   1697c:	str	r0, [fp, #-8]
   16980:	strh	r1, [fp, #-10]
   16984:	str	r2, [fp, #-16]
   16988:	str	r3, [fp, #-20]	; 0xffffffec
   1698c:	strh	ip, [fp, #-22]	; 0xffffffea
   16990:	ldr	r0, [fp, #-8]
   16994:	ldrh	r1, [fp, #-10]
   16998:	ldr	r2, [fp, #-16]
   1699c:	ldrh	r3, [fp, #-22]	; 0xffffffea
   169a0:	uxth	r1, r1
   169a4:	movw	ip, #1
   169a8:	uxth	ip, ip
   169ac:	str	ip, [sp]
   169b0:	mvn	ip, #0
   169b4:	str	ip, [sp, #4]
   169b8:	str	lr, [sp, #12]
   169bc:	bl	155a4 <flatcc_verify_vector_field@@Base>
   169c0:	cmp	r0, #0
   169c4:	beq	169fc <flatcc_verify_struct_as_nested_root@@Base+0x94>
   169c8:	ldr	r0, [fp, #-8]
   169cc:	ldrh	r1, [fp, #-10]
   169d0:	ldr	r2, [fp, #-16]
   169d4:	ldrh	r3, [fp, #-22]	; 0xffffffea
   169d8:	uxth	r1, r1
   169dc:	movw	ip, #1
   169e0:	uxth	ip, ip
   169e4:	str	ip, [sp]
   169e8:	mvn	ip, #0
   169ec:	str	ip, [sp, #4]
   169f0:	bl	155a4 <flatcc_verify_vector_field@@Base>
   169f4:	str	r0, [fp, #-4]
   169f8:	b	16a84 <flatcc_verify_struct_as_nested_root@@Base+0x11c>
   169fc:	ldr	r0, [fp, #-8]
   16a00:	ldrh	r1, [fp, #-10]
   16a04:	bl	16a90 <flatcc_verify_struct_as_nested_root@@Base+0x128>
   16a08:	str	r0, [sp, #20]
   16a0c:	movw	r1, #0
   16a10:	cmp	r1, r0
   16a14:	bne	16a24 <flatcc_verify_struct_as_nested_root@@Base+0xbc>
   16a18:	movw	r0, #0
   16a1c:	str	r0, [fp, #-4]
   16a20:	b	16a84 <flatcc_verify_struct_as_nested_root@@Base+0x11c>
   16a24:	ldr	r0, [sp, #20]
   16a28:	ldr	r1, [sp, #20]
   16a2c:	str	r0, [sp, #8]
   16a30:	mov	r0, r1
   16a34:	movw	r1, #0
   16a38:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   16a3c:	ldr	r1, [sp, #8]
   16a40:	add	r0, r1, r0
   16a44:	str	r0, [sp, #20]
   16a48:	ldr	r0, [sp, #20]
   16a4c:	movw	r1, #0
   16a50:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   16a54:	str	r0, [sp, #16]
   16a58:	ldr	r0, [sp, #20]
   16a5c:	add	r0, r0, #4
   16a60:	str	r0, [sp, #20]
   16a64:	ldr	r0, [sp, #20]
   16a68:	ldr	r1, [sp, #16]
   16a6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   16a70:	ldr	r3, [fp, #8]
   16a74:	ldrh	ip, [fp, #-22]	; 0xffffffea
   16a78:	str	ip, [sp]
   16a7c:	bl	166b8 <flatcc_verify_struct_as_root@@Base>
   16a80:	str	r0, [fp, #-4]
   16a84:	ldr	r0, [fp, #-4]
   16a88:	mov	sp, fp
   16a8c:	pop	{fp, pc}
   16a90:	push	{fp, lr}
   16a94:	mov	fp, sp
   16a98:	sub	sp, sp, #16
   16a9c:	str	r0, [fp, #-4]
   16aa0:	strh	r1, [fp, #-6]
   16aa4:	ldr	r0, [fp, #-4]
   16aa8:	ldrh	r1, [fp, #-6]
   16aac:	bl	16f34 <flatcc_verify_union_field@@Base+0x290>
   16ab0:	strh	r0, [sp, #8]
   16ab4:	ldrh	r0, [sp, #8]
   16ab8:	cmp	r0, #0
   16abc:	beq	16ae4 <flatcc_verify_struct_as_nested_root@@Base+0x17c>
   16ac0:	ldr	r0, [fp, #-4]
   16ac4:	ldr	r0, [r0]
   16ac8:	ldr	r1, [fp, #-4]
   16acc:	ldr	r1, [r1, #16]
   16ad0:	add	r0, r0, r1
   16ad4:	ldrh	r1, [sp, #8]
   16ad8:	add	r0, r0, r1
   16adc:	str	r0, [sp, #4]
   16ae0:	b	16af0 <flatcc_verify_struct_as_nested_root@@Base+0x188>
   16ae4:	movw	r0, #0
   16ae8:	str	r0, [sp, #4]
   16aec:	b	16af0 <flatcc_verify_struct_as_nested_root@@Base+0x188>
   16af0:	ldr	r0, [sp, #4]
   16af4:	mov	sp, fp
   16af8:	pop	{fp, pc}

00016afc <flatcc_verify_table_as_nested_root@@Base>:
   16afc:	push	{r4, sl, fp, lr}
   16b00:	add	fp, sp, #8
   16b04:	sub	sp, sp, #72	; 0x48
   16b08:	ldr	ip, [fp, #12]
   16b0c:	ldr	lr, [fp, #8]
   16b10:	str	r0, [fp, #-16]
   16b14:	strh	r1, [fp, #-18]	; 0xffffffee
   16b18:	str	r2, [fp, #-24]	; 0xffffffe8
   16b1c:	str	r3, [fp, #-28]	; 0xffffffe4
   16b20:	strh	lr, [fp, #-30]	; 0xffffffe2
   16b24:	ldr	r0, [fp, #-16]
   16b28:	ldrh	r1, [fp, #-18]	; 0xffffffee
   16b2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16b30:	ldrh	r3, [fp, #-30]	; 0xffffffe2
   16b34:	uxth	r1, r1
   16b38:	movw	lr, #1
   16b3c:	uxth	lr, lr
   16b40:	str	lr, [sp]
   16b44:	mvn	lr, #0
   16b48:	str	lr, [sp, #4]
   16b4c:	str	ip, [sp, #36]	; 0x24
   16b50:	bl	155a4 <flatcc_verify_vector_field@@Base>
   16b54:	cmp	r0, #0
   16b58:	beq	16b90 <flatcc_verify_table_as_nested_root@@Base+0x94>
   16b5c:	ldr	r0, [fp, #-16]
   16b60:	ldrh	r1, [fp, #-18]	; 0xffffffee
   16b64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16b68:	ldrh	r3, [fp, #-30]	; 0xffffffe2
   16b6c:	uxth	r1, r1
   16b70:	movw	ip, #1
   16b74:	uxth	ip, ip
   16b78:	str	ip, [sp]
   16b7c:	mvn	ip, #0
   16b80:	str	ip, [sp, #4]
   16b84:	bl	155a4 <flatcc_verify_vector_field@@Base>
   16b88:	str	r0, [fp, #-12]
   16b8c:	b	16c98 <flatcc_verify_table_as_nested_root@@Base+0x19c>
   16b90:	ldr	r0, [fp, #-16]
   16b94:	ldrh	r1, [fp, #-18]	; 0xffffffee
   16b98:	bl	16a90 <flatcc_verify_struct_as_nested_root@@Base+0x128>
   16b9c:	str	r0, [fp, #-36]	; 0xffffffdc
   16ba0:	movw	r1, #0
   16ba4:	cmp	r1, r0
   16ba8:	bne	16bb8 <flatcc_verify_table_as_nested_root@@Base+0xbc>
   16bac:	movw	r0, #0
   16bb0:	str	r0, [fp, #-12]
   16bb4:	b	16c98 <flatcc_verify_table_as_nested_root@@Base+0x19c>
   16bb8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16bbc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16bc0:	str	r0, [sp, #32]
   16bc4:	mov	r0, r1
   16bc8:	movw	r1, #0
   16bcc:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   16bd0:	ldr	r1, [sp, #32]
   16bd4:	add	r0, r1, r0
   16bd8:	str	r0, [fp, #-36]	; 0xffffffdc
   16bdc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16be0:	movw	r1, #0
   16be4:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   16be8:	str	r0, [sp, #40]	; 0x28
   16bec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16bf0:	add	r0, r0, #4
   16bf4:	str	r0, [fp, #-36]	; 0xffffffdc
   16bf8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16bfc:	ldr	r1, [sp, #40]	; 0x28
   16c00:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16c04:	bl	16394 <flatcc_verify_buffer_header@@Base>
   16c08:	cmp	r0, #0
   16c0c:	beq	16c28 <flatcc_verify_table_as_nested_root@@Base+0x12c>
   16c10:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16c14:	ldr	r1, [sp, #40]	; 0x28
   16c18:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16c1c:	bl	16394 <flatcc_verify_buffer_header@@Base>
   16c20:	str	r0, [fp, #-12]
   16c24:	b	16c98 <flatcc_verify_table_as_nested_root@@Base+0x19c>
   16c28:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16c2c:	ldr	r1, [sp, #40]	; 0x28
   16c30:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16c34:	str	r0, [sp, #28]
   16c38:	mov	r0, r2
   16c3c:	movw	r2, #0
   16c40:	str	r1, [sp, #24]
   16c44:	mov	r1, r2
   16c48:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   16c4c:	ldr	r1, [fp, #-16]
   16c50:	ldr	r1, [r1, #8]
   16c54:	ldr	r2, [fp, #12]
   16c58:	ldr	r3, [sp, #28]
   16c5c:	str	r0, [sp, #20]
   16c60:	mov	r0, r3
   16c64:	ldr	ip, [sp, #24]
   16c68:	str	r1, [sp, #16]
   16c6c:	mov	r1, ip
   16c70:	movw	lr, #0
   16c74:	str	r2, [sp, #12]
   16c78:	mov	r2, lr
   16c7c:	ldr	r3, [sp, #20]
   16c80:	ldr	lr, [sp, #16]
   16c84:	str	lr, [sp]
   16c88:	ldr	r4, [sp, #12]
   16c8c:	str	r4, [sp, #4]
   16c90:	bl	15b48 <flatcc_verify_table_field@@Base+0xf0>
   16c94:	str	r0, [fp, #-12]
   16c98:	ldr	r0, [fp, #-12]
   16c9c:	sub	sp, fp, #8
   16ca0:	pop	{r4, sl, fp, pc}

00016ca4 <flatcc_verify_union_field@@Base>:
   16ca4:	push	{fp, lr}
   16ca8:	mov	fp, sp
   16cac:	sub	sp, sp, #88	; 0x58
   16cb0:	str	r0, [fp, #-8]
   16cb4:	strh	r1, [fp, #-10]
   16cb8:	str	r2, [fp, #-16]
   16cbc:	str	r3, [fp, #-20]	; 0xffffffec
   16cc0:	ldr	r0, [fp, #-8]
   16cc4:	ldrh	r1, [fp, #-10]
   16cc8:	sub	r1, r1, #1
   16ccc:	uxth	r1, r1
   16cd0:	bl	16f34 <flatcc_verify_union_field@@Base+0x290>
   16cd4:	strh	r0, [fp, #-22]	; 0xffffffea
   16cd8:	uxth	r0, r0
   16cdc:	movw	r1, #0
   16ce0:	cmp	r1, r0
   16ce4:	bne	16d78 <flatcc_verify_union_field@@Base+0xd4>
   16ce8:	ldr	r0, [fp, #-8]
   16cec:	ldrh	r1, [fp, #-10]
   16cf0:	bl	16f34 <flatcc_verify_union_field@@Base+0x290>
   16cf4:	strh	r0, [fp, #-24]	; 0xffffffe8
   16cf8:	ldrh	r0, [fp, #-24]	; 0xffffffe8
   16cfc:	cmp	r0, #0
   16d00:	movw	r0, #0
   16d04:	moveq	r0, #1
   16d08:	and	r0, r0, #1
   16d0c:	str	r0, [sp, #28]
   16d10:	ldr	r0, [sp, #28]
   16d14:	cmp	r0, #0
   16d18:	bne	16d28 <flatcc_verify_union_field@@Base+0x84>
   16d1c:	movw	r0, #23
   16d20:	str	r0, [fp, #-4]
   16d24:	b	16f28 <flatcc_verify_union_field@@Base+0x284>
   16d28:	b	16d2c <flatcc_verify_union_field@@Base+0x88>
   16d2c:	b	16d30 <flatcc_verify_union_field@@Base+0x8c>
   16d30:	ldr	r0, [fp, #-16]
   16d34:	cmp	r0, #0
   16d38:	movw	r0, #0
   16d3c:	movne	r0, #1
   16d40:	mvn	r1, #0
   16d44:	eor	r0, r0, r1
   16d48:	and	r0, r0, #1
   16d4c:	str	r0, [sp, #24]
   16d50:	ldr	r0, [sp, #24]
   16d54:	cmp	r0, #0
   16d58:	bne	16d68 <flatcc_verify_union_field@@Base+0xc4>
   16d5c:	movw	r0, #21
   16d60:	str	r0, [fp, #-4]
   16d64:	b	16f28 <flatcc_verify_union_field@@Base+0x284>
   16d68:	b	16d6c <flatcc_verify_union_field@@Base+0xc8>
   16d6c:	movw	r0, #0
   16d70:	str	r0, [fp, #-4]
   16d74:	b	16f28 <flatcc_verify_union_field@@Base+0x284>
   16d78:	ldr	r0, [fp, #-8]
   16d7c:	ldrh	r1, [fp, #-10]
   16d80:	sub	r1, r1, #1
   16d84:	uxth	r1, r1
   16d88:	movw	r2, #0
   16d8c:	movw	r3, #1
   16d90:	movw	ip, #1
   16d94:	uxth	ip, ip
   16d98:	str	ip, [sp]
   16d9c:	bl	150bc <flatcc_verify_field@@Base+0x80>
   16da0:	cmp	r0, #0
   16da4:	beq	16dd8 <flatcc_verify_union_field@@Base+0x134>
   16da8:	ldr	r0, [fp, #-8]
   16dac:	ldrh	r1, [fp, #-10]
   16db0:	sub	r1, r1, #1
   16db4:	uxth	r1, r1
   16db8:	movw	r2, #0
   16dbc:	movw	r3, #1
   16dc0:	movw	ip, #1
   16dc4:	uxth	ip, ip
   16dc8:	str	ip, [sp]
   16dcc:	bl	150bc <flatcc_verify_field@@Base+0x80>
   16dd0:	str	r0, [fp, #-4]
   16dd4:	b	16f28 <flatcc_verify_union_field@@Base+0x284>
   16dd8:	ldr	r0, [fp, #-8]
   16ddc:	ldrh	r1, [fp, #-10]
   16de0:	bl	16f34 <flatcc_verify_union_field@@Base+0x290>
   16de4:	strh	r0, [fp, #-24]	; 0xffffffe8
   16de8:	ldr	r0, [fp, #-8]
   16dec:	ldr	r0, [r0]
   16df0:	ldr	r1, [fp, #-8]
   16df4:	ldr	r1, [r1, #16]
   16df8:	add	r0, r0, r1
   16dfc:	ldrh	r1, [fp, #-22]	; 0xffffffea
   16e00:	add	r0, r0, r1
   16e04:	str	r0, [fp, #-28]	; 0xffffffe4
   16e08:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16e0c:	ldrb	r0, [r0]
   16e10:	cmp	r0, #0
   16e14:	movw	r0, #1
   16e18:	str	r0, [sp, #12]
   16e1c:	bne	16e34 <flatcc_verify_union_field@@Base+0x190>
   16e20:	ldrh	r0, [fp, #-24]	; 0xffffffe8
   16e24:	cmp	r0, #0
   16e28:	movw	r0, #0
   16e2c:	moveq	r0, #1
   16e30:	str	r0, [sp, #12]
   16e34:	ldr	r0, [sp, #12]
   16e38:	and	r0, r0, #1
   16e3c:	str	r0, [sp, #20]
   16e40:	ldr	r0, [sp, #20]
   16e44:	cmp	r0, #0
   16e48:	bne	16e58 <flatcc_verify_union_field@@Base+0x1b4>
   16e4c:	movw	r0, #24
   16e50:	str	r0, [fp, #-4]
   16e54:	b	16f28 <flatcc_verify_union_field@@Base+0x284>
   16e58:	b	16e5c <flatcc_verify_union_field@@Base+0x1b8>
   16e5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16e60:	ldrb	r0, [r0]
   16e64:	cmp	r0, #0
   16e68:	bne	16e78 <flatcc_verify_union_field@@Base+0x1d4>
   16e6c:	movw	r0, #0
   16e70:	str	r0, [fp, #-4]
   16e74:	b	16f28 <flatcc_verify_union_field@@Base+0x284>
   16e78:	b	16e7c <flatcc_verify_union_field@@Base+0x1d8>
   16e7c:	ldr	r0, [fp, #-8]
   16e80:	ldrh	r1, [fp, #-10]
   16e84:	ldr	r2, [fp, #-16]
   16e88:	uxth	r1, r1
   16e8c:	sub	r3, fp, #32
   16e90:	bl	15308 <flatcc_verify_string_field@@Base+0xc0>
   16e94:	str	r0, [sp, #16]
   16e98:	ldr	r0, [sp, #16]
   16e9c:	cmp	r0, #0
   16ea0:	bne	16eb0 <flatcc_verify_union_field@@Base+0x20c>
   16ea4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16ea8:	cmp	r0, #0
   16eac:	bne	16ebc <flatcc_verify_union_field@@Base+0x218>
   16eb0:	ldr	r0, [sp, #16]
   16eb4:	str	r0, [fp, #-4]
   16eb8:	b	16f28 <flatcc_verify_union_field@@Base+0x284>
   16ebc:	b	16ec0 <flatcc_verify_union_field@@Base+0x21c>
   16ec0:	ldr	r0, [fp, #-8]
   16ec4:	ldr	r0, [r0]
   16ec8:	str	r0, [sp, #32]
   16ecc:	ldr	r0, [fp, #-8]
   16ed0:	ldr	r0, [r0, #4]
   16ed4:	str	r0, [sp, #36]	; 0x24
   16ed8:	ldr	r0, [fp, #-8]
   16edc:	ldr	r0, [r0, #8]
   16ee0:	str	r0, [sp, #40]	; 0x28
   16ee4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16ee8:	str	r0, [sp, #48]	; 0x30
   16eec:	ldr	r0, [fp, #-8]
   16ef0:	ldr	r0, [r0]
   16ef4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16ef8:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   16efc:	str	r0, [sp, #52]	; 0x34
   16f00:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16f04:	ldrb	r0, [r0]
   16f08:	strb	r0, [sp, #44]	; 0x2c
   16f0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16f10:	add	r1, sp, #32
   16f14:	str	r0, [sp, #8]
   16f18:	mov	r0, r1
   16f1c:	ldr	r1, [sp, #8]
   16f20:	blx	r1
   16f24:	str	r0, [fp, #-4]
   16f28:	ldr	r0, [fp, #-4]
   16f2c:	mov	sp, fp
   16f30:	pop	{fp, pc}
   16f34:	push	{fp, lr}
   16f38:	mov	fp, sp
   16f3c:	sub	sp, sp, #16
   16f40:	str	r0, [sp, #8]
   16f44:	strh	r1, [sp, #6]
   16f48:	ldrh	r0, [sp, #6]
   16f4c:	add	r0, r0, #2
   16f50:	lsl	r0, r0, #1
   16f54:	strh	r0, [sp, #4]
   16f58:	ldrh	r0, [sp, #4]
   16f5c:	ldr	r1, [sp, #8]
   16f60:	ldrh	r1, [r1, #22]
   16f64:	cmp	r0, r1
   16f68:	blt	16f78 <flatcc_verify_union_field@@Base+0x2d4>
   16f6c:	movw	r0, #0
   16f70:	str	r0, [fp, #-4]
   16f74:	b	16f90 <flatcc_verify_union_field@@Base+0x2ec>
   16f78:	ldr	r0, [sp, #8]
   16f7c:	ldr	r0, [r0, #12]
   16f80:	ldrh	r1, [sp, #4]
   16f84:	bl	17684 <flatcc_verify_union_vector_field@@Base+0x6e8>
   16f88:	uxth	r0, r0
   16f8c:	str	r0, [fp, #-4]
   16f90:	ldr	r0, [fp, #-4]
   16f94:	mov	sp, fp
   16f98:	pop	{fp, pc}

00016f9c <flatcc_verify_union_vector_field@@Base>:
   16f9c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16fa0:	add	fp, sp, #24
   16fa4:	sub	sp, sp, #96	; 0x60
   16fa8:	str	r0, [fp, #-32]	; 0xffffffe0
   16fac:	strh	r1, [fp, #-34]	; 0xffffffde
   16fb0:	str	r2, [fp, #-40]	; 0xffffffd8
   16fb4:	str	r3, [fp, #-44]	; 0xffffffd4
   16fb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16fbc:	ldrh	r1, [fp, #-34]	; 0xffffffde
   16fc0:	sub	r1, r1, #1
   16fc4:	uxth	r1, r1
   16fc8:	bl	16f34 <flatcc_verify_union_field@@Base+0x290>
   16fcc:	strh	r0, [fp, #-46]	; 0xffffffd2
   16fd0:	uxth	r0, r0
   16fd4:	movw	r1, #0
   16fd8:	cmp	r1, r0
   16fdc:	bne	17048 <flatcc_verify_union_vector_field@@Base+0xac>
   16fe0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16fe4:	ldrh	r1, [fp, #-34]	; 0xffffffde
   16fe8:	bl	16f34 <flatcc_verify_union_field@@Base+0x290>
   16fec:	strh	r0, [fp, #-48]	; 0xffffffd0
   16ff0:	uxth	r0, r0
   16ff4:	movw	r1, #0
   16ff8:	cmp	r1, r0
   16ffc:	bne	17044 <flatcc_verify_union_vector_field@@Base+0xa8>
   17000:	b	17004 <flatcc_verify_union_vector_field@@Base+0x68>
   17004:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17008:	cmp	r0, #0
   1700c:	movw	r0, #0
   17010:	movne	r0, #1
   17014:	mvn	r1, #0
   17018:	eor	r0, r0, r1
   1701c:	and	r0, r0, #1
   17020:	str	r0, [sp, #52]	; 0x34
   17024:	ldr	r0, [sp, #52]	; 0x34
   17028:	cmp	r0, #0
   1702c:	bne	1703c <flatcc_verify_union_vector_field@@Base+0xa0>
   17030:	movw	r0, #22
   17034:	str	r0, [fp, #-28]	; 0xffffffe4
   17038:	b	17214 <flatcc_verify_union_vector_field@@Base+0x278>
   1703c:	b	17040 <flatcc_verify_union_vector_field@@Base+0xa4>
   17040:	b	17044 <flatcc_verify_union_vector_field@@Base+0xa8>
   17044:	b	17048 <flatcc_verify_union_vector_field@@Base+0xac>
   17048:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1704c:	ldrh	r1, [fp, #-34]	; 0xffffffde
   17050:	sub	r1, r1, #1
   17054:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17058:	uxth	r1, r1
   1705c:	movw	r3, #1
   17060:	movw	ip, #1
   17064:	uxth	ip, ip
   17068:	str	ip, [sp]
   1706c:	mvn	ip, #0
   17070:	str	ip, [sp, #4]
   17074:	bl	155a4 <flatcc_verify_vector_field@@Base>
   17078:	cmp	r0, #0
   1707c:	beq	170b8 <flatcc_verify_union_vector_field@@Base+0x11c>
   17080:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17084:	ldrh	r1, [fp, #-34]	; 0xffffffde
   17088:	sub	r1, r1, #1
   1708c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17090:	uxth	r1, r1
   17094:	movw	r3, #1
   17098:	movw	ip, #1
   1709c:	uxth	ip, ip
   170a0:	str	ip, [sp]
   170a4:	mvn	ip, #0
   170a8:	str	ip, [sp, #4]
   170ac:	bl	155a4 <flatcc_verify_vector_field@@Base>
   170b0:	str	r0, [fp, #-28]	; 0xffffffe4
   170b4:	b	17214 <flatcc_verify_union_vector_field@@Base+0x278>
   170b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   170bc:	ldrh	r1, [fp, #-34]	; 0xffffffde
   170c0:	sub	r1, r1, #1
   170c4:	uxth	r1, r1
   170c8:	bl	16a90 <flatcc_verify_struct_as_nested_root@@Base+0x128>
   170cc:	str	r0, [fp, #-52]	; 0xffffffcc
   170d0:	movw	r1, #0
   170d4:	cmp	r1, r0
   170d8:	bne	170e8 <flatcc_verify_union_vector_field@@Base+0x14c>
   170dc:	movw	r0, #0
   170e0:	str	r0, [fp, #-28]	; 0xffffffe4
   170e4:	b	17214 <flatcc_verify_union_vector_field@@Base+0x278>
   170e8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   170ec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   170f0:	str	r0, [sp, #44]	; 0x2c
   170f4:	mov	r0, r1
   170f8:	movw	r1, #0
   170fc:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   17100:	ldr	r1, [sp, #44]	; 0x2c
   17104:	add	r0, r1, r0
   17108:	str	r0, [fp, #-52]	; 0xffffffcc
   1710c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17110:	movw	r1, #0
   17114:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   17118:	str	r0, [sp, #60]	; 0x3c
   1711c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17120:	add	r0, r0, #4
   17124:	str	r0, [fp, #-52]	; 0xffffffcc
   17128:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1712c:	str	r0, [fp, #-56]	; 0xffffffc8
   17130:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17134:	ldrh	r1, [fp, #-34]	; 0xffffffde
   17138:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1713c:	uxth	r1, r1
   17140:	add	r3, sp, #56	; 0x38
   17144:	bl	15308 <flatcc_verify_string_field@@Base+0xc0>
   17148:	str	r0, [sp, #48]	; 0x30
   1714c:	ldr	r0, [sp, #48]	; 0x30
   17150:	cmp	r0, #0
   17154:	bne	17164 <flatcc_verify_union_vector_field@@Base+0x1c8>
   17158:	ldr	r0, [sp, #56]	; 0x38
   1715c:	cmp	r0, #0
   17160:	bne	17170 <flatcc_verify_union_vector_field@@Base+0x1d4>
   17164:	ldr	r0, [sp, #48]	; 0x30
   17168:	str	r0, [fp, #-28]	; 0xffffffe4
   1716c:	b	17214 <flatcc_verify_union_vector_field@@Base+0x278>
   17170:	b	17174 <flatcc_verify_union_vector_field@@Base+0x1d8>
   17174:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17178:	ldr	r0, [r0]
   1717c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17180:	ldr	r1, [r1, #4]
   17184:	ldr	r2, [sp, #56]	; 0x38
   17188:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1718c:	ldr	r3, [r3]
   17190:	ldr	ip, [sp, #56]	; 0x38
   17194:	str	r0, [sp, #40]	; 0x28
   17198:	mov	r0, r3
   1719c:	str	r1, [sp, #36]	; 0x24
   171a0:	mov	r1, ip
   171a4:	str	r2, [sp, #32]
   171a8:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   171ac:	ldr	r1, [sp, #60]	; 0x3c
   171b0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   171b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   171b8:	ldr	r3, [r3, #8]
   171bc:	ldr	ip, [fp, #-44]	; 0xffffffd4
   171c0:	ldr	lr, [sp, #40]	; 0x28
   171c4:	str	r0, [sp, #28]
   171c8:	mov	r0, lr
   171cc:	ldr	r4, [sp, #36]	; 0x24
   171d0:	str	r1, [sp, #24]
   171d4:	mov	r1, r4
   171d8:	ldr	r5, [sp, #32]
   171dc:	str	r2, [sp, #20]
   171e0:	mov	r2, r5
   171e4:	ldr	r6, [sp, #28]
   171e8:	str	r3, [sp, #16]
   171ec:	mov	r3, r6
   171f0:	ldr	r7, [sp, #24]
   171f4:	str	r7, [sp]
   171f8:	ldr	r8, [sp, #20]
   171fc:	str	r8, [sp, #4]
   17200:	ldr	r9, [sp, #16]
   17204:	str	r9, [sp, #8]
   17208:	str	ip, [sp, #12]
   1720c:	bl	17220 <flatcc_verify_union_vector_field@@Base+0x284>
   17210:	str	r0, [fp, #-28]	; 0xffffffe4
   17214:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17218:	sub	sp, fp, #24
   1721c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17220:	push	{r4, r5, fp, lr}
   17224:	add	fp, sp, #8
   17228:	sub	sp, sp, #104	; 0x68
   1722c:	ldr	ip, [fp, #20]
   17230:	ldr	lr, [fp, #16]
   17234:	ldr	r4, [fp, #12]
   17238:	ldr	r5, [fp, #8]
   1723c:	str	r0, [fp, #-16]
   17240:	str	r1, [fp, #-20]	; 0xffffffec
   17244:	str	r2, [fp, #-24]	; 0xffffffe8
   17248:	str	r3, [fp, #-28]	; 0xffffffe4
   1724c:	ldr	r0, [fp, #16]
   17250:	mvn	r1, #0
   17254:	add	r1, r0, r1
   17258:	str	r1, [fp, #16]
   1725c:	cmp	r0, #0
   17260:	movw	r0, #0
   17264:	movgt	r0, #1
   17268:	and	r0, r0, #1
   1726c:	str	r0, [sp, #44]	; 0x2c
   17270:	ldr	r0, [sp, #44]	; 0x2c
   17274:	cmp	r0, #0
   17278:	bne	17288 <flatcc_verify_union_vector_field@@Base+0x2ec>
   1727c:	movw	r0, #3
   17280:	str	r0, [fp, #-12]
   17284:	b	174f8 <flatcc_verify_union_vector_field@@Base+0x55c>
   17288:	b	1728c <flatcc_verify_union_vector_field@@Base+0x2f0>
   1728c:	ldr	r0, [pc, #624]	; 17504 <flatcc_verify_union_vector_field@@Base+0x568>
   17290:	ldr	r1, [fp, #-16]
   17294:	ldr	r2, [fp, #-20]	; 0xffffffec
   17298:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1729c:	ldr	ip, [fp, #-28]	; 0xffffffe4
   172a0:	str	r0, [sp, #28]
   172a4:	mov	r0, r1
   172a8:	mov	r1, r2
   172ac:	mov	r2, r3
   172b0:	mov	r3, ip
   172b4:	movw	ip, #4
   172b8:	str	ip, [sp]
   172bc:	movw	ip, #4
   172c0:	uxth	ip, ip
   172c4:	str	ip, [sp, #4]
   172c8:	ldr	ip, [sp, #28]
   172cc:	str	ip, [sp, #8]
   172d0:	bl	156b4 <flatcc_verify_vector_field@@Base+0x110>
   172d4:	cmp	r0, #0
   172d8:	beq	1732c <flatcc_verify_union_vector_field@@Base+0x390>
   172dc:	ldr	r0, [pc, #544]	; 17504 <flatcc_verify_union_vector_field@@Base+0x568>
   172e0:	ldr	r1, [fp, #-16]
   172e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   172e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   172ec:	ldr	ip, [fp, #-28]	; 0xffffffe4
   172f0:	str	r0, [sp, #24]
   172f4:	mov	r0, r1
   172f8:	mov	r1, r2
   172fc:	mov	r2, r3
   17300:	mov	r3, ip
   17304:	movw	ip, #4
   17308:	str	ip, [sp]
   1730c:	movw	ip, #4
   17310:	uxth	ip, ip
   17314:	str	ip, [sp, #4]
   17318:	ldr	ip, [sp, #24]
   1731c:	str	ip, [sp, #8]
   17320:	bl	156b4 <flatcc_verify_vector_field@@Base+0x110>
   17324:	str	r0, [fp, #-12]
   17328:	b	174f8 <flatcc_verify_union_vector_field@@Base+0x55c>
   1732c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17330:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17334:	add	r0, r1, r0
   17338:	str	r0, [fp, #-24]	; 0xffffffe8
   1733c:	ldr	r0, [fp, #-16]
   17340:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17344:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   17348:	str	r0, [fp, #-36]	; 0xffffffdc
   1734c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17350:	ldr	r1, [fp, #8]
   17354:	cmp	r0, r1
   17358:	movw	r0, #0
   1735c:	moveq	r0, #1
   17360:	and	r0, r0, #1
   17364:	str	r0, [sp, #40]	; 0x28
   17368:	ldr	r0, [sp, #40]	; 0x28
   1736c:	cmp	r0, #0
   17370:	bne	17380 <flatcc_verify_union_vector_field@@Base+0x3e4>
   17374:	movw	r0, #34	; 0x22
   17378:	str	r0, [fp, #-12]
   1737c:	b	174f8 <flatcc_verify_union_vector_field@@Base+0x55c>
   17380:	b	17384 <flatcc_verify_union_vector_field@@Base+0x3e8>
   17384:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17388:	add	r0, r0, #4
   1738c:	str	r0, [fp, #-24]	; 0xffffffe8
   17390:	ldr	r0, [fp, #-16]
   17394:	str	r0, [sp, #48]	; 0x30
   17398:	ldr	r0, [fp, #-20]	; 0xffffffec
   1739c:	str	r0, [sp, #52]	; 0x34
   173a0:	ldr	r0, [fp, #16]
   173a4:	str	r0, [sp, #56]	; 0x38
   173a8:	movw	r0, #0
   173ac:	str	r0, [fp, #-32]	; 0xffffffe0
   173b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   173b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   173b8:	cmp	r0, r1
   173bc:	bcs	174f0 <flatcc_verify_union_vector_field@@Base+0x554>
   173c0:	ldr	r0, [fp, #-16]
   173c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   173c8:	bl	15578 <flatcc_verify_string_field@@Base+0x330>
   173cc:	str	r0, [fp, #-40]	; 0xffffffd8
   173d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   173d4:	cmp	r0, #0
   173d8:	bne	17424 <flatcc_verify_union_vector_field@@Base+0x488>
   173dc:	b	173e0 <flatcc_verify_union_vector_field@@Base+0x444>
   173e0:	ldr	r0, [fp, #12]
   173e4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   173e8:	add	r0, r0, r1
   173ec:	ldrb	r0, [r0]
   173f0:	cmp	r0, #0
   173f4:	movw	r0, #0
   173f8:	moveq	r0, #1
   173fc:	and	r0, r0, #1
   17400:	str	r0, [sp, #36]	; 0x24
   17404:	ldr	r0, [sp, #36]	; 0x24
   17408:	cmp	r0, #0
   1740c:	bne	1741c <flatcc_verify_union_vector_field@@Base+0x480>
   17410:	movw	r0, #32
   17414:	str	r0, [fp, #-12]
   17418:	b	174f8 <flatcc_verify_union_vector_field@@Base+0x55c>
   1741c:	b	17420 <flatcc_verify_union_vector_field@@Base+0x484>
   17420:	b	174d0 <flatcc_verify_union_vector_field@@Base+0x534>
   17424:	b	17428 <flatcc_verify_union_vector_field@@Base+0x48c>
   17428:	ldr	r0, [fp, #12]
   1742c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17430:	add	r0, r0, r1
   17434:	ldrb	r0, [r0]
   17438:	cmp	r0, #0
   1743c:	movw	r0, #0
   17440:	movne	r0, #1
   17444:	and	r0, r0, #1
   17448:	str	r0, [sp, #32]
   1744c:	ldr	r0, [sp, #32]
   17450:	cmp	r0, #0
   17454:	bne	17464 <flatcc_verify_union_vector_field@@Base+0x4c8>
   17458:	movw	r0, #33	; 0x21
   1745c:	str	r0, [fp, #-12]
   17460:	b	174f8 <flatcc_verify_union_vector_field@@Base+0x55c>
   17464:	b	17468 <flatcc_verify_union_vector_field@@Base+0x4cc>
   17468:	ldr	r0, [fp, #12]
   1746c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17470:	add	r0, r0, r1
   17474:	ldrb	r0, [r0]
   17478:	strb	r0, [sp, #60]	; 0x3c
   1747c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17480:	str	r0, [sp, #64]	; 0x40
   17484:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17488:	str	r0, [sp, #68]	; 0x44
   1748c:	ldr	r0, [fp, #20]
   17490:	add	r1, sp, #48	; 0x30
   17494:	str	r0, [sp, #20]
   17498:	mov	r0, r1
   1749c:	ldr	r1, [sp, #20]
   174a0:	blx	r1
   174a4:	cmp	r0, #0
   174a8:	beq	174cc <flatcc_verify_union_vector_field@@Base+0x530>
   174ac:	ldr	r0, [fp, #20]
   174b0:	add	r1, sp, #48	; 0x30
   174b4:	str	r0, [sp, #16]
   174b8:	mov	r0, r1
   174bc:	ldr	r1, [sp, #16]
   174c0:	blx	r1
   174c4:	str	r0, [fp, #-12]
   174c8:	b	174f8 <flatcc_verify_union_vector_field@@Base+0x55c>
   174cc:	b	174d0 <flatcc_verify_union_vector_field@@Base+0x534>
   174d0:	b	174d4 <flatcc_verify_union_vector_field@@Base+0x538>
   174d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   174d8:	add	r0, r0, #1
   174dc:	str	r0, [fp, #-32]	; 0xffffffe0
   174e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174e4:	add	r0, r0, #4
   174e8:	str	r0, [fp, #-24]	; 0xffffffe8
   174ec:	b	173b0 <flatcc_verify_union_vector_field@@Base+0x414>
   174f0:	movw	r0, #0
   174f4:	str	r0, [fp, #-12]
   174f8:	ldr	r0, [fp, #-12]
   174fc:	sub	sp, fp, #8
   17500:	pop	{r4, r5, fp, pc}
   17504:	svccc	0x00ffffff
   17508:	sub	sp, sp, #20
   1750c:	str	r0, [sp, #16]
   17510:	str	r1, [sp, #12]
   17514:	str	r2, [sp, #8]
   17518:	ldr	r0, [sp, #12]
   1751c:	ldr	r1, [sp, #8]
   17520:	add	r0, r0, r1
   17524:	str	r0, [sp, #4]
   17528:	ldr	r0, [sp, #4]
   1752c:	ldr	r1, [sp, #12]
   17530:	cmp	r0, r1
   17534:	movw	r0, #0
   17538:	str	r0, [sp]
   1753c:	bls	1757c <flatcc_verify_union_vector_field@@Base+0x5e0>
   17540:	ldr	r0, [sp, #4]
   17544:	add	r0, r0, #4
   17548:	ldr	r1, [sp, #16]
   1754c:	cmp	r0, r1
   17550:	movw	r0, #0
   17554:	str	r0, [sp]
   17558:	bhi	1757c <flatcc_verify_union_vector_field@@Base+0x5e0>
   1755c:	ldr	r0, [sp, #4]
   17560:	and	r0, r0, #3
   17564:	cmp	r0, #0
   17568:	movw	r0, #0
   1756c:	movne	r0, #1
   17570:	mvn	r1, #0
   17574:	eor	r0, r0, r1
   17578:	str	r0, [sp]
   1757c:	ldr	r0, [sp]
   17580:	and	r0, r0, #1
   17584:	add	sp, sp, #20
   17588:	bx	lr
   1758c:	push	{fp, lr}
   17590:	mov	fp, sp
   17594:	sub	sp, sp, #8
   17598:	str	r0, [sp, #4]
   1759c:	ldr	r0, [sp, #4]
   175a0:	ldr	r0, [r0]
   175a4:	bl	175b0 <flatcc_verify_union_vector_field@@Base+0x614>
   175a8:	mov	sp, fp
   175ac:	pop	{fp, pc}
   175b0:	sub	sp, sp, #4
   175b4:	str	r0, [sp]
   175b8:	ldr	r0, [sp]
   175bc:	add	sp, sp, #4
   175c0:	bx	lr
   175c4:	sub	sp, sp, #28
   175c8:	str	r0, [sp, #24]
   175cc:	str	r1, [sp, #20]
   175d0:	str	r2, [sp, #16]
   175d4:	strh	r3, [sp, #14]
   175d8:	ldr	r0, [sp, #20]
   175dc:	ldr	r1, [sp, #16]
   175e0:	add	r0, r0, r1
   175e4:	str	r0, [sp, #8]
   175e8:	ldrh	r0, [sp, #14]
   175ec:	cmp	r0, #4
   175f0:	bcs	17600 <flatcc_verify_union_vector_field@@Base+0x664>
   175f4:	movw	r0, #4
   175f8:	str	r0, [sp, #4]
   175fc:	b	17608 <flatcc_verify_union_vector_field@@Base+0x66c>
   17600:	ldrh	r0, [sp, #14]
   17604:	str	r0, [sp, #4]
   17608:	ldr	r0, [sp, #4]
   1760c:	strh	r0, [sp, #14]
   17610:	ldr	r0, [sp, #8]
   17614:	ldr	r1, [sp, #20]
   17618:	cmp	r0, r1
   1761c:	movw	r0, #0
   17620:	str	r0, [sp]
   17624:	bls	17674 <flatcc_verify_union_vector_field@@Base+0x6d8>
   17628:	ldr	r0, [sp, #8]
   1762c:	add	r0, r0, #4
   17630:	ldr	r1, [sp, #24]
   17634:	cmp	r0, r1
   17638:	movw	r0, #0
   1763c:	str	r0, [sp]
   17640:	bhi	17674 <flatcc_verify_union_vector_field@@Base+0x6d8>
   17644:	ldr	r0, [sp, #8]
   17648:	add	r0, r0, #4
   1764c:	ldrh	r1, [sp, #14]
   17650:	sub	r1, r1, #1
   17654:	orr	r1, r1, #3
   17658:	and	r0, r0, r1
   1765c:	cmp	r0, #0
   17660:	movw	r0, #0
   17664:	movne	r0, #1
   17668:	mvn	r1, #0
   1766c:	eor	r0, r0, r1
   17670:	str	r0, [sp]
   17674:	ldr	r0, [sp]
   17678:	and	r0, r0, #1
   1767c:	add	sp, sp, #28
   17680:	bx	lr
   17684:	push	{fp, lr}
   17688:	mov	fp, sp
   1768c:	sub	sp, sp, #8
   17690:	str	r0, [sp, #4]
   17694:	str	r1, [sp]
   17698:	ldr	r0, [sp, #4]
   1769c:	ldr	r1, [sp]
   176a0:	add	r0, r0, r1
   176a4:	bl	176b4 <flatcc_verify_union_vector_field@@Base+0x718>
   176a8:	uxth	r0, r0
   176ac:	mov	sp, fp
   176b0:	pop	{fp, pc}
   176b4:	push	{fp, lr}
   176b8:	mov	fp, sp
   176bc:	sub	sp, sp, #8
   176c0:	str	r0, [sp, #4]
   176c4:	ldr	r0, [sp, #4]
   176c8:	ldrh	r0, [r0]
   176cc:	bl	176dc <flatcc_verify_union_vector_field@@Base+0x740>
   176d0:	uxth	r0, r0
   176d4:	mov	sp, fp
   176d8:	pop	{fp, pc}
   176dc:	sub	sp, sp, #4
   176e0:	strh	r0, [sp, #2]
   176e4:	ldrh	r0, [sp, #2]
   176e8:	add	sp, sp, #4
   176ec:	bx	lr
   176f0:	sub	sp, sp, #4
   176f4:	str	r0, [sp]
   176f8:	ldr	r0, [sp]
   176fc:	add	sp, sp, #4
   17700:	bx	lr
   17704:	push	{fp, lr}
   17708:	mov	fp, sp
   1770c:	sub	sp, sp, #8
   17710:	str	r0, [sp, #4]
   17714:	ldr	r0, [sp, #4]
   17718:	ldr	r0, [r0]
   1771c:	bl	17728 <flatcc_verify_union_vector_field@@Base+0x78c>
   17720:	mov	sp, fp
   17724:	pop	{fp, pc}
   17728:	sub	sp, sp, #4
   1772c:	str	r0, [sp]
   17730:	ldr	r0, [sp]
   17734:	add	sp, sp, #4
   17738:	bx	lr

0001773c <__libc_csu_init@@Base>:
   1773c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   17740:	mov	r7, r0
   17744:	ldr	r6, [pc, #72]	; 17794 <__libc_csu_init@@Base+0x58>
   17748:	ldr	r5, [pc, #72]	; 17798 <__libc_csu_init@@Base+0x5c>
   1774c:	add	r6, pc, r6
   17750:	add	r5, pc, r5
   17754:	sub	r6, r6, r5
   17758:	mov	r8, r1
   1775c:	mov	r9, r2
   17760:	bl	10db0 <strcmp@plt-0x20>
   17764:	asrs	r6, r6, #2
   17768:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1776c:	mov	r4, #0
   17770:	add	r4, r4, #1
   17774:	ldr	r3, [r5], #4
   17778:	mov	r2, r9
   1777c:	mov	r1, r8
   17780:	mov	r0, r7
   17784:	blx	r3
   17788:	cmp	r6, r4
   1778c:	bne	17770 <__libc_csu_init@@Base+0x34>
   17790:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   17794:			; <UNDEFINED> instruction: 0x000117b8
   17798:			; <UNDEFINED> instruction: 0x000117b0

0001779c <__libc_csu_fini@@Base>:
   1779c:	bx	lr

Disassembly of section .fini:

000177a0 <.fini>:
   177a0:	push	{r3, lr}
   177a4:	pop	{r3, pc}
