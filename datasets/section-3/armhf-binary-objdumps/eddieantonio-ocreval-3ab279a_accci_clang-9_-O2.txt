
../repos/eddieantonio-ocreval-3ab279a/accci/accci:     file format elf32-littlearm


Disassembly of section .init:

00010a54 <.init>:
   10a54:	push	{r3, lr}
   10a58:	bl	10c4c <getc@plt+0x4c>
   10a5c:	pop	{r3, pc}

Disassembly of section .plt:

00010a60 <calloc@plt-0x14>:
   10a60:	push	{lr}		; (str lr, [sp, #-4]!)
   10a64:	ldr	lr, [pc, #4]	; 10a70 <calloc@plt-0x4>
   10a68:	add	lr, pc, lr
   10a6c:	ldr	pc, [lr, #8]!
   10a70:	muleq	r1, r0, r5

00010a74 <calloc@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #20, 20	; 0x14000
   10a7c:	ldr	pc, [ip, #1424]!	; 0x590

00010a80 <strcmp@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #20, 20	; 0x14000
   10a88:	ldr	pc, [ip, #1416]!	; 0x588

00010a8c <printf@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #20, 20	; 0x14000
   10a94:	ldr	pc, [ip, #1408]!	; 0x580

00010a98 <fopen@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #20, 20	; 0x14000
   10aa0:	ldr	pc, [ip, #1400]!	; 0x578

00010aa4 <free@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #20, 20	; 0x14000
   10aac:	ldr	pc, [ip, #1392]!	; 0x570

00010ab0 <utf8proc_get_property@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #20, 20	; 0x14000
   10ab8:	ldr	pc, [ip, #1384]!	; 0x568

00010abc <fgets@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #20, 20	; 0x14000
   10ac4:	ldr	pc, [ip, #1376]!	; 0x560

00010ac8 <utf8proc_encode_char@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #20, 20	; 0x14000
   10ad0:	ldr	pc, [ip, #1368]!	; 0x558

00010ad4 <strdup@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #20, 20	; 0x14000
   10adc:	ldr	pc, [ip, #1360]!	; 0x550

00010ae0 <rewind@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #20, 20	; 0x14000
   10ae8:	ldr	pc, [ip, #1352]!	; 0x548

00010aec <unlink@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #20, 20	; 0x14000
   10af4:	ldr	pc, [ip, #1344]!	; 0x540

00010af8 <utf8proc_tolower@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #20, 20	; 0x14000
   10b00:	ldr	pc, [ip, #1336]!	; 0x538

00010b04 <__xstat@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #20, 20	; 0x14000
   10b0c:	ldr	pc, [ip, #1328]!	; 0x530

00010b10 <fwrite@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #20, 20	; 0x14000
   10b18:	ldr	pc, [ip, #1320]!	; 0x528

00010b1c <fread@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #20, 20	; 0x14000
   10b24:	ldr	pc, [ip, #1312]!	; 0x520

00010b28 <utf8proc_iterate@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #20, 20	; 0x14000
   10b30:	ldr	pc, [ip, #1304]!	; 0x518

00010b34 <__libc_start_main@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #20, 20	; 0x14000
   10b3c:	ldr	pc, [ip, #1296]!	; 0x510

00010b40 <__sysv_signal@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #20, 20	; 0x14000
   10b48:	ldr	pc, [ip, #1288]!	; 0x508

00010b4c <__gmon_start__@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #20, 20	; 0x14000
   10b54:	ldr	pc, [ip, #1280]!	; 0x500

00010b58 <getpid@plt>:
   10b58:	add	ip, pc, #0, 12
   10b5c:	add	ip, ip, #20, 20	; 0x14000
   10b60:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b64 <exit@plt>:
   10b64:	add	ip, pc, #0, 12
   10b68:	add	ip, ip, #20, 20	; 0x14000
   10b6c:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b70 <bcmp@plt>:
   10b70:	add	ip, pc, #0, 12
   10b74:	add	ip, ip, #20, 20	; 0x14000
   10b78:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b7c <utf8proc_category@plt>:
   10b7c:	add	ip, pc, #0, 12
   10b80:	add	ip, ip, #20, 20	; 0x14000
   10b84:	ldr	pc, [ip, #1248]!	; 0x4e0

00010b88 <strlen@plt>:
   10b88:	add	ip, pc, #0, 12
   10b8c:	add	ip, ip, #20, 20	; 0x14000
   10b90:	ldr	pc, [ip, #1240]!	; 0x4d8

00010b94 <fprintf@plt>:
   10b94:	add	ip, pc, #0, 12
   10b98:	add	ip, ip, #20, 20	; 0x14000
   10b9c:	ldr	pc, [ip, #1232]!	; 0x4d0

00010ba0 <sqrt@plt>:
   10ba0:	add	ip, pc, #0, 12
   10ba4:	add	ip, ip, #20, 20	; 0x14000
   10ba8:	ldr	pc, [ip, #1224]!	; 0x4c8

00010bac <__isoc99_sscanf@plt>:
   10bac:	add	ip, pc, #0, 12
   10bb0:	add	ip, ip, #20, 20	; 0x14000
   10bb4:	ldr	pc, [ip, #1216]!	; 0x4c0

00010bb8 <fclose@plt>:
   10bb8:	add	ip, pc, #0, 12
   10bbc:	add	ip, ip, #20, 20	; 0x14000
   10bc0:	ldr	pc, [ip, #1208]!	; 0x4b8

00010bc4 <sprintf@plt>:
   10bc4:	add	ip, pc, #0, 12
   10bc8:	add	ip, ip, #20, 20	; 0x14000
   10bcc:	ldr	pc, [ip, #1200]!	; 0x4b0

00010bd0 <utf8proc_errmsg@plt>:
   10bd0:	add	ip, pc, #0, 12
   10bd4:	add	ip, ip, #20, 20	; 0x14000
   10bd8:	ldr	pc, [ip, #1192]!	; 0x4a8

00010bdc <fputs@plt>:
   10bdc:	add	ip, pc, #0, 12
   10be0:	add	ip, ip, #20, 20	; 0x14000
   10be4:	ldr	pc, [ip, #1184]!	; 0x4a0

00010be8 <strncmp@plt>:
   10be8:	add	ip, pc, #0, 12
   10bec:	add	ip, ip, #20, 20	; 0x14000
   10bf0:	ldr	pc, [ip, #1176]!	; 0x498

00010bf4 <abort@plt>:
   10bf4:	add	ip, pc, #0, 12
   10bf8:	add	ip, ip, #20, 20	; 0x14000
   10bfc:	ldr	pc, [ip, #1168]!	; 0x490

00010c00 <getc@plt>:
   10c00:	add	ip, pc, #0, 12
   10c04:	add	ip, ip, #20, 20	; 0x14000
   10c08:	ldr	pc, [ip, #1160]!	; 0x488

Disassembly of section .text:

00010c10 <error@@Base-0x20a4>:
   10c10:	mov	fp, #0
   10c14:	mov	lr, #0
   10c18:	pop	{r1}		; (ldr r1, [sp], #4)
   10c1c:	mov	r2, sp
   10c20:	push	{r2}		; (str r2, [sp, #-4]!)
   10c24:	push	{r0}		; (str r0, [sp, #-4]!)
   10c28:	ldr	ip, [pc, #16]	; 10c40 <getc@plt+0x40>
   10c2c:	push	{ip}		; (str ip, [sp, #-4]!)
   10c30:	ldr	r0, [pc, #12]	; 10c44 <getc@plt+0x44>
   10c34:	ldr	r3, [pc, #12]	; 10c48 <getc@plt+0x48>
   10c38:	bl	10b34 <__libc_start_main@plt>
   10c3c:	bl	10bf4 <abort@plt>
   10c40:	muleq	r1, r4, r8
   10c44:	andeq	r0, r1, r0, lsr lr
   10c48:	andeq	r3, r1, r4, lsr r8
   10c4c:	ldr	r3, [pc, #20]	; 10c68 <getc@plt+0x68>
   10c50:	ldr	r2, [pc, #20]	; 10c6c <getc@plt+0x6c>
   10c54:	add	r3, pc, r3
   10c58:	ldr	r2, [r3, r2]
   10c5c:	cmp	r2, #0
   10c60:	bxeq	lr
   10c64:	b	10b4c <__gmon_start__@plt>
   10c68:	andeq	r4, r1, r4, lsr #7
   10c6c:	andeq	r0, r0, r4, lsr #1
   10c70:	ldr	r0, [pc, #24]	; 10c90 <getc@plt+0x90>
   10c74:	ldr	r3, [pc, #24]	; 10c94 <getc@plt+0x94>
   10c78:	cmp	r3, r0
   10c7c:	bxeq	lr
   10c80:	ldr	r3, [pc, #16]	; 10c98 <getc@plt+0x98>
   10c84:	cmp	r3, #0
   10c88:	bxeq	lr
   10c8c:	bx	r3
   10c90:	ldrdeq	r5, [r2], -r4
   10c94:	ldrdeq	r5, [r2], -r4
   10c98:	andeq	r0, r0, r0
   10c9c:	ldr	r0, [pc, #36]	; 10cc8 <getc@plt+0xc8>
   10ca0:	ldr	r1, [pc, #36]	; 10ccc <getc@plt+0xcc>
   10ca4:	sub	r1, r1, r0
   10ca8:	asr	r1, r1, #2
   10cac:	add	r1, r1, r1, lsr #31
   10cb0:	asrs	r1, r1, #1
   10cb4:	bxeq	lr
   10cb8:	ldr	r3, [pc, #16]	; 10cd0 <getc@plt+0xd0>
   10cbc:	cmp	r3, #0
   10cc0:	bxeq	lr
   10cc4:	bx	r3
   10cc8:	ldrdeq	r5, [r2], -r4
   10ccc:	ldrdeq	r5, [r2], -r4
   10cd0:	andeq	r0, r0, r0
   10cd4:	push	{r4, lr}
   10cd8:	ldr	r4, [pc, #24]	; 10cf8 <getc@plt+0xf8>
   10cdc:	ldrb	r3, [r4]
   10ce0:	cmp	r3, #0
   10ce4:	popne	{r4, pc}
   10ce8:	bl	10c70 <getc@plt+0x70>
   10cec:	mov	r3, #1
   10cf0:	strb	r3, [r4]
   10cf4:	pop	{r4, pc}
   10cf8:	ldrdeq	r5, [r2], -r8
   10cfc:	b	10c9c <getc@plt+0x9c>
   10d00:	push	{r4, r5, r6, sl, fp, lr}
   10d04:	add	fp, sp, #16
   10d08:	ldr	r4, [pc, #44]	; 10d3c <getc@plt+0x13c>
   10d0c:	mov	r1, r0
   10d10:	ldr	r4, [pc, r4]
   10d14:	ldm	r4, {r5, r6}
   10d18:	mov	r0, r4
   10d1c:	bl	10fcc <getc@plt+0x3cc>
   10d20:	ldm	r4, {r0, r2}
   10d24:	sub	r2, r2, r6
   10d28:	sub	r1, r0, r5
   10d2c:	ldr	r0, [pc, #12]	; 10d40 <getc@plt+0x140>
   10d30:	ldr	r0, [pc, r0]
   10d34:	pop	{r4, r5, r6, sl, fp, lr}
   10d38:	b	11fc8 <getc@plt+0x13c8>
   10d3c:	andeq	r4, r1, r0, lsl #7
   10d40:	andeq	r4, r1, r4, ror r3
   10d44:	nop	{0}
   10d48:	push	{r4, sl, fp, lr}
   10d4c:	add	fp, sp, #8
   10d50:	sub	sp, sp, #32
   10d54:	ldr	r4, [pc, #180]	; 10e10 <getc@plt+0x210>
   10d58:	sub	r1, fp, #16
   10d5c:	add	r2, sp, #16
   10d60:	ldr	r4, [pc, r4]
   10d64:	mov	r0, r4
   10d68:	bl	12018 <getc@plt+0x1418>
   10d6c:	ldr	r1, [r4, #12]
   10d70:	ldr	r0, [pc, #156]	; 10e14 <getc@plt+0x214>
   10d74:	add	r0, pc, r0
   10d78:	bl	10a8c <printf@plt>
   10d7c:	ldr	r4, [pc, #148]	; 10e18 <getc@plt+0x218>
   10d80:	ldr	r4, [pc, r4]
   10d84:	ldr	r1, [r4]
   10d88:	ldr	r0, [pc, #140]	; 10e1c <getc@plt+0x21c>
   10d8c:	add	r0, pc, r0
   10d90:	bl	10a8c <printf@plt>
   10d94:	ldr	r1, [r4, #4]
   10d98:	ldr	r0, [pc, #128]	; 10e20 <getc@plt+0x220>
   10d9c:	add	r0, pc, r0
   10da0:	bl	10a8c <printf@plt>
   10da4:	ldm	r4, {r0, r1}
   10da8:	vldr	d16, [pc, #88]	; 10e08 <getc@plt+0x208>
   10dac:	sub	r1, r0, r1
   10db0:	vmov	s2, r0
   10db4:	vmov	s0, r1
   10db8:	vcvt.f64.s32	d17, s0
   10dbc:	vcvt.f64.s32	d18, s2
   10dc0:	ldr	r0, [pc, #92]	; 10e24 <getc@plt+0x224>
   10dc4:	add	r0, pc, r0
   10dc8:	vmul.f64	d16, d17, d16
   10dcc:	vdiv.f64	d16, d16, d18
   10dd0:	vmov	r2, r3, d16
   10dd4:	bl	10a8c <printf@plt>
   10dd8:	vldr	d16, [fp, #-16]
   10ddc:	vldr	d17, [sp, #16]
   10de0:	ldr	r0, [pc, #64]	; 10e28 <getc@plt+0x228>
   10de4:	add	r0, pc, r0
   10de8:	str	r0, [sp, #8]
   10dec:	vstr	d17, [sp]
   10df0:	vmov	r2, r3, d16
   10df4:	ldr	r0, [pc, #48]	; 10e2c <getc@plt+0x22c>
   10df8:	add	r0, pc, r0
   10dfc:	bl	10a8c <printf@plt>
   10e00:	sub	sp, fp, #8
   10e04:	pop	{r4, sl, fp, pc}
   10e08:	andeq	r0, r0, r0
   10e0c:	subsmi	r0, r9, r0
   10e10:	andeq	r4, r1, r4, asr #6
   10e14:	andeq	r2, r0, r8, lsr #22
   10e18:	andeq	r4, r1, r0, lsl r3
   10e1c:	andeq	r2, r0, r6, lsr #22
   10e20:	andeq	r2, r0, sl, lsr #22
   10e24:	andeq	r2, r0, r2, lsl fp
   10e28:	andeq	r2, r0, fp, lsl fp
   10e2c:	strdeq	r2, [r0], -r2	; <UNPREDICTABLE>
   10e30:	push	{fp, lr}
   10e34:	mov	fp, sp
   10e38:	sub	sp, sp, #8
   10e3c:	str	r0, [sp, #4]
   10e40:	add	r0, sp, #4
   10e44:	mov	r3, #0
   10e48:	mov	r9, r1
   10e4c:	mov	r7, #0
   10e50:	ldr	r2, [pc, #108]	; 10ec4 <getc@plt+0x2c4>
   10e54:	add	r2, pc, r2
   10e58:	bl	12a2c <getc@plt+0x1e2c>
   10e5c:	ldr	r0, [sp, #4]
   10e60:	cmp	r0, #2
   10e64:	blt	10eb8 <getc@plt+0x2b8>
   10e68:	ldr	r5, [pc, #88]	; 10ec8 <getc@plt+0x2c8>
   10e6c:	ldr	r5, [pc, r5]
   10e70:	ldr	r8, [pc, #84]	; 10ecc <getc@plt+0x2cc>
   10e74:	ldr	r8, [pc, r8]
   10e78:	ldr	r1, [r9, r7, lsl #2]
   10e7c:	ldr	r6, [r5]
   10e80:	ldr	r4, [r5, #4]
   10e84:	mov	r0, r5
   10e88:	bl	10fcc <getc@plt+0x3cc>
   10e8c:	ldm	r5, {r0, r2}
   10e90:	sub	r2, r2, r4
   10e94:	sub	r1, r0, r6
   10e98:	mov	r0, r8
   10e9c:	bl	11fc8 <getc@plt+0x13c8>
   10ea0:	ldr	r0, [sp, #4]
   10ea4:	add	r7, r7, #1
   10ea8:	cmp	r7, r0
   10eac:	blt	10e78 <getc@plt+0x278>
   10eb0:	bl	10d48 <getc@plt+0x148>
   10eb4:	bl	12c70 <getc@plt+0x2070>
   10eb8:	ldr	r0, [pc, #16]	; 10ed0 <getc@plt+0x2d0>
   10ebc:	add	r0, pc, r0
   10ec0:	bl	12cb4 <error@@Base>
   10ec4:	ldrdeq	r2, [r0], -ip
   10ec8:	andeq	r4, r1, r4, lsr #4
   10ecc:	andeq	r4, r1, r0, lsr r2
   10ed0:	andeq	r2, r0, r6, lsr #21
   10ed4:	andeq	r0, r0, r0
   10ed8:	push	{r4, r5, r6, r7, fp, lr}
   10edc:	add	fp, sp, #16
   10ee0:	mov	r7, r0
   10ee4:	mov	r0, r1
   10ee8:	mov	r4, r3
   10eec:	mov	r5, r2
   10ef0:	mov	r6, r1
   10ef4:	bl	124b0 <getc@plt+0x18b0>
   10ef8:	add	r0, r7, r0, lsl #3
   10efc:	ldr	r1, [r0, #68]	; 0x44
   10f00:	ldr	r2, [r0, #72]	; 0x48
   10f04:	add	r1, r1, r5
   10f08:	add	r2, r2, r4
   10f0c:	str	r1, [r0, #68]	; 0x44
   10f10:	str	r2, [r0, #72]	; 0x48
   10f14:	ldr	r0, [r7, #2116]	; 0x844
   10f18:	ldr	r1, [r7, #2120]	; 0x848
   10f1c:	add	r0, r0, r5
   10f20:	add	r1, r1, r4
   10f24:	str	r0, [r7, #2116]	; 0x844
   10f28:	add	r0, r7, r6, lsl #3
   10f2c:	str	r1, [r7, #2120]	; 0x848
   10f30:	movw	r1, #10180	; 0x27c4
   10f34:	ldr	r1, [r0, r1]!
   10f38:	add	r1, r1, r5
   10f3c:	str	r1, [r0]
   10f40:	ldr	r1, [r0, #4]
   10f44:	add	r1, r1, r4
   10f48:	str	r1, [r0, #4]
   10f4c:	pop	{r4, r5, r6, r7, fp, pc}
   10f50:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10f54:	add	fp, sp, #24
   10f58:	mov	r7, r1
   10f5c:	movw	r1, #2124	; 0x84c
   10f60:	mov	r8, r3
   10f64:	mov	r5, r2
   10f68:	add	r6, r0, r1
   10f6c:	mov	r1, r7
   10f70:	mov	r0, r6
   10f74:	bl	12238 <getc@plt+0x1638>
   10f78:	cmp	r0, #0
   10f7c:	beq	10f9c <getc@plt+0x39c>
   10f80:	ldr	r1, [r0, #12]
   10f84:	ldr	r2, [r0, #16]
   10f88:	add	r1, r1, r5
   10f8c:	add	r2, r2, r8
   10f90:	str	r1, [r0, #12]
   10f94:	str	r2, [r0, #16]
   10f98:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   10f9c:	mov	r0, #1
   10fa0:	mov	r1, #20
   10fa4:	bl	127e4 <getc@plt+0x1be4>
   10fa8:	mov	r4, r0
   10fac:	mov	r0, r7
   10fb0:	bl	10ad4 <strdup@plt>
   10fb4:	add	r1, r4, #8
   10fb8:	stm	r1, {r0, r5, r8}
   10fbc:	mov	r0, r6
   10fc0:	mov	r1, r4
   10fc4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   10fc8:	b	122c8 <getc@plt+0x16c8>
   10fcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10fd0:	add	fp, sp, #28
   10fd4:	sub	sp, sp, #76	; 0x4c
   10fd8:	bfc	sp, #0, #4
   10fdc:	mov	r2, r1
   10fe0:	ldr	r1, [pc, #1680]	; 11678 <getc@plt+0xa78>
   10fe4:	mov	r4, r0
   10fe8:	mov	r0, r2
   10fec:	str	r2, [sp, #28]
   10ff0:	add	r1, pc, r1
   10ff4:	bl	1288c <getc@plt+0x1c8c>
   10ff8:	mov	r7, r0
   10ffc:	ldr	r0, [pc, #1656]	; 1167c <getc@plt+0xa7c>
   11000:	mov	r1, #99	; 0x63
   11004:	mov	r2, r7
   11008:	add	r0, pc, r0
   1100c:	bl	10abc <fgets@plt>
   11010:	cmp	r0, #0
   11014:	beq	11658 <getc@plt+0xa58>
   11018:	ldr	r0, [pc, #1632]	; 11680 <getc@plt+0xa80>
   1101c:	ldr	r1, [pc, #1632]	; 11684 <getc@plt+0xa84>
   11020:	mov	r2, #40	; 0x28
   11024:	add	r0, pc, r0
   11028:	add	r1, pc, r1
   1102c:	bl	10b70 <bcmp@plt>
   11030:	cmp	r0, #0
   11034:	bne	11658 <getc@plt+0xa58>
   11038:	ldr	r0, [pc, #1608]	; 11688 <getc@plt+0xa88>
   1103c:	mov	r1, #99	; 0x63
   11040:	mov	r2, r7
   11044:	add	r0, pc, r0
   11048:	bl	10abc <fgets@plt>
   1104c:	cmp	r0, #0
   11050:	beq	11658 <getc@plt+0xa58>
   11054:	ldr	r0, [pc, #1584]	; 1168c <getc@plt+0xa8c>
   11058:	ldr	r1, [pc, #1584]	; 11690 <getc@plt+0xa90>
   1105c:	mov	r2, #43	; 0x2b
   11060:	add	r0, pc, r0
   11064:	add	r1, pc, r1
   11068:	bl	10b70 <bcmp@plt>
   1106c:	cmp	r0, #0
   11070:	bne	11658 <getc@plt+0xa58>
   11074:	ldr	r0, [pc, #1560]	; 11694 <getc@plt+0xa94>
   11078:	mov	r1, #99	; 0x63
   1107c:	mov	r2, r7
   11080:	add	r0, pc, r0
   11084:	bl	10abc <fgets@plt>
   11088:	cmp	r0, #0
   1108c:	beq	11658 <getc@plt+0xa58>
   11090:	ldr	r0, [pc, #1536]	; 11698 <getc@plt+0xa98>
   11094:	ldr	r1, [pc, #1536]	; 1169c <getc@plt+0xa9c>
   11098:	add	r2, sp, #44	; 0x2c
   1109c:	add	r0, pc, r0
   110a0:	add	r1, pc, r1
   110a4:	bl	10bac <__isoc99_sscanf@plt>
   110a8:	cmp	r0, #1
   110ac:	bne	11658 <getc@plt+0xa58>
   110b0:	ldr	r0, [r4]
   110b4:	ldr	r1, [sp, #44]	; 0x2c
   110b8:	mov	r2, r7
   110bc:	add	r0, r0, r1
   110c0:	mov	r1, #99	; 0x63
   110c4:	str	r0, [r4]
   110c8:	ldr	r0, [pc, #1488]	; 116a0 <getc@plt+0xaa0>
   110cc:	add	r0, pc, r0
   110d0:	bl	10abc <fgets@plt>
   110d4:	cmp	r0, #0
   110d8:	beq	11658 <getc@plt+0xa58>
   110dc:	ldr	r0, [pc, #1472]	; 116a4 <getc@plt+0xaa4>
   110e0:	ldr	r1, [pc, #1472]	; 116a8 <getc@plt+0xaa8>
   110e4:	add	r2, sp, #40	; 0x28
   110e8:	add	r0, pc, r0
   110ec:	add	r1, pc, r1
   110f0:	bl	10bac <__isoc99_sscanf@plt>
   110f4:	cmp	r0, #1
   110f8:	bne	11658 <getc@plt+0xa58>
   110fc:	ldr	r0, [r4, #4]
   11100:	ldr	r1, [sp, #40]	; 0x28
   11104:	mov	r2, r7
   11108:	add	r0, r0, r1
   1110c:	mov	r1, #99	; 0x63
   11110:	str	r0, [r4, #4]
   11114:	ldr	r0, [pc, #1424]	; 116ac <getc@plt+0xaac>
   11118:	add	r0, pc, r0
   1111c:	bl	10abc <fgets@plt>
   11120:	cmp	r0, #0
   11124:	beq	11658 <getc@plt+0xa58>
   11128:	ldr	r0, [pc, #1408]	; 116b0 <getc@plt+0xab0>
   1112c:	mov	r1, #99	; 0x63
   11130:	mov	r2, r7
   11134:	add	r0, pc, r0
   11138:	bl	10abc <fgets@plt>
   1113c:	cmp	r0, #0
   11140:	beq	11658 <getc@plt+0xa58>
   11144:	ldr	r0, [pc, #1384]	; 116b4 <getc@plt+0xab4>
   11148:	mov	r1, #99	; 0x63
   1114c:	mov	r2, r7
   11150:	add	r0, pc, r0
   11154:	bl	10abc <fgets@plt>
   11158:	cmp	r0, #0
   1115c:	beq	11658 <getc@plt+0xa58>
   11160:	ldr	r0, [pc, #1360]	; 116b8 <getc@plt+0xab8>
   11164:	ldr	r1, [pc, #1360]	; 116bc <getc@plt+0xabc>
   11168:	add	r2, sp, #36	; 0x24
   1116c:	add	r0, pc, r0
   11170:	add	r1, pc, r1
   11174:	bl	10bac <__isoc99_sscanf@plt>
   11178:	cmp	r0, #1
   1117c:	bne	11658 <getc@plt+0xa58>
   11180:	ldr	r0, [r4, #8]
   11184:	ldr	r1, [sp, #36]	; 0x24
   11188:	mov	r2, r7
   1118c:	add	r0, r0, r1
   11190:	mov	r1, #99	; 0x63
   11194:	str	r0, [r4, #8]
   11198:	ldr	r0, [pc, #1312]	; 116c0 <getc@plt+0xac0>
   1119c:	add	r0, pc, r0
   111a0:	bl	10abc <fgets@plt>
   111a4:	cmp	r0, #0
   111a8:	beq	11658 <getc@plt+0xa58>
   111ac:	ldr	r0, [pc, #1296]	; 116c4 <getc@plt+0xac4>
   111b0:	ldr	r1, [pc, #1296]	; 116c8 <getc@plt+0xac8>
   111b4:	add	r2, sp, #36	; 0x24
   111b8:	add	r0, pc, r0
   111bc:	add	r1, pc, r1
   111c0:	bl	10bac <__isoc99_sscanf@plt>
   111c4:	cmp	r0, #1
   111c8:	bne	11658 <getc@plt+0xa58>
   111cc:	ldr	r0, [r4, #12]
   111d0:	ldr	r1, [sp, #36]	; 0x24
   111d4:	mov	r2, r7
   111d8:	add	r0, r0, r1
   111dc:	mov	r1, #99	; 0x63
   111e0:	str	r0, [r4, #12]
   111e4:	ldr	r0, [pc, #1248]	; 116cc <getc@plt+0xacc>
   111e8:	add	r0, pc, r0
   111ec:	bl	10abc <fgets@plt>
   111f0:	cmp	r0, #0
   111f4:	beq	11658 <getc@plt+0xa58>
   111f8:	ldr	r0, [pc, #1232]	; 116d0 <getc@plt+0xad0>
   111fc:	ldr	r1, [pc, #1232]	; 116d4 <getc@plt+0xad4>
   11200:	add	r2, sp, #36	; 0x24
   11204:	add	r0, pc, r0
   11208:	add	r1, pc, r1
   1120c:	bl	10bac <__isoc99_sscanf@plt>
   11210:	cmp	r0, #1
   11214:	bne	11658 <getc@plt+0xa58>
   11218:	ldr	r0, [r4, #16]
   1121c:	ldr	r1, [sp, #36]	; 0x24
   11220:	mov	r2, r7
   11224:	add	r0, r0, r1
   11228:	mov	r1, #99	; 0x63
   1122c:	str	r0, [r4, #16]
   11230:	ldr	r0, [pc, #1184]	; 116d8 <getc@plt+0xad8>
   11234:	add	r0, pc, r0
   11238:	bl	10abc <fgets@plt>
   1123c:	cmp	r0, #0
   11240:	beq	11658 <getc@plt+0xa58>
   11244:	ldr	r0, [pc, #1168]	; 116dc <getc@plt+0xadc>
   11248:	mov	r1, #99	; 0x63
   1124c:	mov	r2, r7
   11250:	add	r0, pc, r0
   11254:	bl	10abc <fgets@plt>
   11258:	cmp	r0, #0
   1125c:	beq	11658 <getc@plt+0xa58>
   11260:	ldr	r0, [pc, #1144]	; 116e0 <getc@plt+0xae0>
   11264:	mov	r1, #99	; 0x63
   11268:	mov	r2, r7
   1126c:	add	r0, pc, r0
   11270:	bl	10abc <fgets@plt>
   11274:	cmp	r0, #0
   11278:	beq	11658 <getc@plt+0xa58>
   1127c:	ldr	r0, [pc, #1120]	; 116e4 <getc@plt+0xae4>
   11280:	mov	r1, #99	; 0x63
   11284:	mov	r2, r7
   11288:	add	r0, pc, r0
   1128c:	bl	10abc <fgets@plt>
   11290:	cmp	r0, #0
   11294:	beq	11658 <getc@plt+0xa58>
   11298:	ldr	r0, [pc, #1096]	; 116e8 <getc@plt+0xae8>
   1129c:	mov	r1, #99	; 0x63
   112a0:	mov	r2, r7
   112a4:	add	r0, pc, r0
   112a8:	bl	10abc <fgets@plt>
   112ac:	cmp	r0, #0
   112b0:	beq	11658 <getc@plt+0xa58>
   112b4:	add	r5, sp, #48	; 0x30
   112b8:	orr	r6, r5, #8
   112bc:	orr	r9, r5, #12
   112c0:	orr	sl, r5, #4
   112c4:	mov	r2, r5
   112c8:	stm	sp, {r6, r9}
   112cc:	mov	r3, sl
   112d0:	ldr	r0, [pc, #1044]	; 116ec <getc@plt+0xaec>
   112d4:	ldr	r1, [pc, #1044]	; 116f0 <getc@plt+0xaf0>
   112d8:	add	r0, pc, r0
   112dc:	add	r1, pc, r1
   112e0:	bl	10bac <__isoc99_sscanf@plt>
   112e4:	cmp	r0, #4
   112e8:	bne	11658 <getc@plt+0xa58>
   112ec:	add	r8, r4, #20
   112f0:	vld1.64	{d16-d17}, [r5 :128]
   112f4:	mov	r1, #99	; 0x63
   112f8:	mov	r2, r7
   112fc:	vld1.32	{d18-d19}, [r8]
   11300:	vadd.i32	q8, q9, q8
   11304:	vst1.32	{d16-d17}, [r8]
   11308:	ldr	r0, [pc, #996]	; 116f4 <getc@plt+0xaf4>
   1130c:	add	r0, pc, r0
   11310:	bl	10abc <fgets@plt>
   11314:	cmp	r0, #0
   11318:	beq	11658 <getc@plt+0xa58>
   1131c:	stm	sp, {r6, r9}
   11320:	mov	r2, r5
   11324:	mov	r3, sl
   11328:	ldr	r0, [pc, #968]	; 116f8 <getc@plt+0xaf8>
   1132c:	ldr	r1, [pc, #968]	; 116fc <getc@plt+0xafc>
   11330:	add	r0, pc, r0
   11334:	add	r1, pc, r1
   11338:	bl	10bac <__isoc99_sscanf@plt>
   1133c:	cmp	r0, #4
   11340:	bne	11658 <getc@plt+0xa58>
   11344:	add	r0, r8, #16
   11348:	vld1.64	{d16-d17}, [r5 :128]
   1134c:	mov	r1, #99	; 0x63
   11350:	mov	r2, r7
   11354:	vld1.32	{d18-d19}, [r0]
   11358:	vadd.i32	q8, q9, q8
   1135c:	vst1.32	{d16-d17}, [r0]
   11360:	ldr	r0, [pc, #920]	; 11700 <getc@plt+0xb00>
   11364:	add	r0, pc, r0
   11368:	bl	10abc <fgets@plt>
   1136c:	cmp	r0, #0
   11370:	beq	11658 <getc@plt+0xa58>
   11374:	stm	sp, {r6, r9}
   11378:	mov	r2, r5
   1137c:	mov	r3, sl
   11380:	ldr	r0, [pc, #892]	; 11704 <getc@plt+0xb04>
   11384:	ldr	r1, [pc, #892]	; 11708 <getc@plt+0xb08>
   11388:	add	r0, pc, r0
   1138c:	add	r1, pc, r1
   11390:	bl	10bac <__isoc99_sscanf@plt>
   11394:	cmp	r0, #4
   11398:	bne	11658 <getc@plt+0xa58>
   1139c:	add	r0, r8, #32
   113a0:	vld1.64	{d16-d17}, [r5 :128]
   113a4:	mov	r1, #99	; 0x63
   113a8:	mov	r2, r7
   113ac:	vld1.32	{d18-d19}, [r0]
   113b0:	vadd.i32	q8, q9, q8
   113b4:	vst1.32	{d16-d17}, [r0]
   113b8:	ldr	r6, [pc, #844]	; 1170c <getc@plt+0xb0c>
   113bc:	add	r6, pc, r6
   113c0:	mov	r0, r6
   113c4:	bl	10abc <fgets@plt>
   113c8:	cmp	r0, #0
   113cc:	beq	11658 <getc@plt+0xa58>
   113d0:	str	r4, [sp, #20]
   113d4:	mov	r0, r6
   113d8:	mov	r1, #99	; 0x63
   113dc:	mov	r2, r7
   113e0:	bl	10abc <fgets@plt>
   113e4:	cmp	r0, #0
   113e8:	ldrbne	r0, [r6]
   113ec:	cmpne	r0, #10
   113f0:	bne	113d4 <getc@plt+0x7d4>
   113f4:	ldr	r0, [sp, #40]	; 0x28
   113f8:	cmp	r0, #1
   113fc:	blt	11510 <getc@plt+0x910>
   11400:	ldr	r0, [pc, #776]	; 11710 <getc@plt+0xb10>
   11404:	mov	r1, #99	; 0x63
   11408:	mov	r2, r7
   1140c:	add	r0, pc, r0
   11410:	bl	10abc <fgets@plt>
   11414:	cmp	r0, #0
   11418:	beq	11510 <getc@plt+0x910>
   1141c:	ldr	r4, [pc, #752]	; 11714 <getc@plt+0xb14>
   11420:	mov	r1, #99	; 0x63
   11424:	mov	r2, r7
   11428:	add	r4, pc, r4
   1142c:	mov	r0, r4
   11430:	bl	10abc <fgets@plt>
   11434:	cmp	r0, #0
   11438:	beq	11510 <getc@plt+0x910>
   1143c:	ldr	r1, [sp, #20]
   11440:	movw	r0, #2124	; 0x84c
   11444:	add	r8, sp, #36	; 0x24
   11448:	add	r0, r1, r0
   1144c:	str	r0, [sp, #28]
   11450:	add	r0, r4, #20
   11454:	ldr	r9, [pc, #700]	; 11718 <getc@plt+0xb18>
   11458:	str	r0, [sp, #24]
   1145c:	ldr	r5, [sp, #24]
   11460:	add	r9, pc, r9
   11464:	b	114bc <getc@plt+0x8bc>
   11468:	mov	r0, #1
   1146c:	mov	r1, #20
   11470:	bl	127e4 <getc@plt+0x1be4>
   11474:	mov	r4, r9
   11478:	mov	r9, r0
   1147c:	mov	r0, r5
   11480:	bl	10ad4 <strdup@plt>
   11484:	add	r1, r9, #8
   11488:	stm	r1, {r0, r6, sl}
   1148c:	mov	r1, r9
   11490:	mov	r9, r4
   11494:	ldr	r0, [sp, #28]
   11498:	ldr	r4, [pc, #636]	; 1171c <getc@plt+0xb1c>
   1149c:	add	r4, pc, r4
   114a0:	bl	122c8 <getc@plt+0x16c8>
   114a4:	mov	r0, r4
   114a8:	mov	r1, #99	; 0x63
   114ac:	mov	r2, r7
   114b0:	bl	10abc <fgets@plt>
   114b4:	cmp	r0, #0
   114b8:	beq	11510 <getc@plt+0x910>
   114bc:	mov	r0, r4
   114c0:	mov	r1, r9
   114c4:	mov	r2, r8
   114c8:	add	r3, sp, #48	; 0x30
   114cc:	bl	10bac <__isoc99_sscanf@plt>
   114d0:	cmp	r0, #2
   114d4:	bne	11510 <getc@plt+0x910>
   114d8:	ldr	r0, [sp, #28]
   114dc:	ldr	sl, [sp, #48]	; 0x30
   114e0:	ldr	r6, [sp, #36]	; 0x24
   114e4:	mov	r1, r5
   114e8:	bl	12238 <getc@plt+0x1638>
   114ec:	cmp	r0, #0
   114f0:	beq	11468 <getc@plt+0x868>
   114f4:	ldr	r1, [r0, #12]
   114f8:	ldr	r2, [r0, #16]
   114fc:	add	r1, r1, r6
   11500:	add	r2, r2, sl
   11504:	str	r1, [r0, #12]
   11508:	str	r2, [r0, #16]
   1150c:	b	114a4 <getc@plt+0x8a4>
   11510:	ldr	r0, [sp, #44]	; 0x2c
   11514:	ldr	r4, [sp, #20]
   11518:	cmp	r0, #1
   1151c:	blt	11648 <getc@plt+0xa48>
   11520:	ldr	r0, [pc, #504]	; 11720 <getc@plt+0xb20>
   11524:	mov	r1, #99	; 0x63
   11528:	mov	r2, r7
   1152c:	add	r0, pc, r0
   11530:	bl	10abc <fgets@plt>
   11534:	cmp	r0, #0
   11538:	beq	11648 <getc@plt+0xa48>
   1153c:	ldr	r6, [pc, #480]	; 11724 <getc@plt+0xb24>
   11540:	mov	r1, #99	; 0x63
   11544:	mov	r2, r7
   11548:	add	r6, pc, r6
   1154c:	mov	r0, r6
   11550:	bl	10abc <fgets@plt>
   11554:	cmp	r0, #0
   11558:	beq	11648 <getc@plt+0xa48>
   1155c:	add	r5, sp, #48	; 0x30
   11560:	add	r0, r6, #31
   11564:	str	r0, [sp, #28]
   11568:	b	115f0 <getc@plt+0x9f0>
   1156c:	mov	sl, #10
   11570:	str	sl, [sp, #32]
   11574:	ldr	r8, [sp, #48]	; 0x30
   11578:	ldr	r9, [sp, #36]	; 0x24
   1157c:	mov	r0, sl
   11580:	bl	124b0 <getc@plt+0x18b0>
   11584:	add	r0, r4, r0, lsl #3
   11588:	ldr	r1, [r0, #68]	; 0x44
   1158c:	ldr	r2, [r0, #72]	; 0x48
   11590:	add	r1, r1, r9
   11594:	add	r2, r2, r8
   11598:	str	r1, [r0, #68]	; 0x44
   1159c:	str	r2, [r0, #72]	; 0x48
   115a0:	mov	r2, r7
   115a4:	ldr	r0, [r4, #2116]	; 0x844
   115a8:	ldr	r1, [r4, #2120]	; 0x848
   115ac:	add	r0, r0, r9
   115b0:	add	r1, r1, r8
   115b4:	str	r0, [r4, #2116]	; 0x844
   115b8:	add	r0, r4, sl, lsl #3
   115bc:	str	r1, [r4, #2120]	; 0x848
   115c0:	movw	r1, #10180	; 0x27c4
   115c4:	ldr	r1, [r0, r1]!
   115c8:	add	r1, r1, r9
   115cc:	str	r1, [r0]
   115d0:	ldr	r1, [r0, #4]
   115d4:	add	r1, r1, r8
   115d8:	str	r1, [r0, #4]
   115dc:	mov	r0, r6
   115e0:	mov	r1, #99	; 0x63
   115e4:	bl	10abc <fgets@plt>
   115e8:	cmp	r0, #0
   115ec:	beq	11648 <getc@plt+0xa48>
   115f0:	ldr	r1, [pc, #304]	; 11728 <getc@plt+0xb28>
   115f4:	mov	r0, r6
   115f8:	add	r2, sp, #36	; 0x24
   115fc:	mov	r3, r5
   11600:	add	r1, pc, r1
   11604:	bl	10bac <__isoc99_sscanf@plt>
   11608:	cmp	r0, #2
   1160c:	bne	11648 <getc@plt+0xa48>
   11610:	ldrb	r0, [r6, #31]
   11614:	cmp	r0, #92	; 0x5c
   11618:	beq	1156c <getc@plt+0x96c>
   1161c:	cmp	r0, #125	; 0x7d
   11620:	bne	1162c <getc@plt+0xa2c>
   11624:	ldrb	sl, [r6, #30]
   11628:	b	11570 <getc@plt+0x970>
   1162c:	ldr	r0, [sp, #28]
   11630:	ldr	r1, [pc, #244]	; 1172c <getc@plt+0xb2c>
   11634:	add	r2, sp, #32
   11638:	add	r1, pc, r1
   1163c:	bl	10bac <__isoc99_sscanf@plt>
   11640:	ldr	sl, [sp, #32]
   11644:	b	11574 <getc@plt+0x974>
   11648:	mov	r0, r7
   1164c:	bl	12914 <getc@plt+0x1d14>
   11650:	sub	sp, fp, #28
   11654:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11658:	ldr	r1, [pc, #208]	; 11730 <getc@plt+0xb30>
   1165c:	ldr	r0, [sp, #28]
   11660:	cmp	r0, #0
   11664:	add	r1, pc, r1
   11668:	movne	r1, r0
   1166c:	ldr	r0, [pc, #192]	; 11734 <getc@plt+0xb34>
   11670:	add	r0, pc, r0
   11674:	bl	12d04 <error@@Base+0x50>
   11678:	andeq	r3, r0, r0, lsr #5
   1167c:	andeq	r4, r1, r9, asr #1
   11680:	andeq	r4, r1, sp, lsr #1
   11684:	andeq	r2, r0, r1, asr r9
   11688:	andeq	r4, r1, sp, lsl #1
   1168c:	andeq	r4, r1, r1, ror r0
   11690:	andeq	r3, r0, fp, ror #3
   11694:	andeq	r4, r1, r1, asr r0
   11698:	andeq	r4, r1, r5, lsr r0
   1169c:	andeq	r2, r0, sp, lsr #20
   116a0:	andeq	r4, r1, r5
   116a4:	andeq	r3, r1, r9, ror #31
   116a8:	andeq	r2, r0, r1, ror #19
   116ac:			; <UNDEFINED> instruction: 0x00013fb9
   116b0:	muleq	r1, sp, pc	; <UNPREDICTABLE>
   116b4:	andeq	r3, r1, r1, lsl #31
   116b8:	andeq	r3, r1, r5, ror #30
   116bc:	andeq	r2, r0, sp, asr r9
   116c0:	andeq	r3, r1, r5, lsr pc
   116c4:	andeq	r3, r1, r9, lsl pc
   116c8:	andeq	r2, r0, r1, lsl r9
   116cc:	andeq	r3, r1, r9, ror #29
   116d0:	andeq	r3, r1, sp, asr #29
   116d4:	andeq	r2, r0, r5, asr #17
   116d8:	muleq	r1, sp, lr
   116dc:	andeq	r3, r1, r1, lsl #29
   116e0:	andeq	r3, r1, r5, ror #28
   116e4:	andeq	r3, r1, r9, asr #28
   116e8:	andeq	r3, r1, sp, lsr #28
   116ec:	strdeq	r3, [r1], -r9
   116f0:	andeq	r2, r0, r5, ror #15
   116f4:	andeq	r3, r1, r5, asr #27
   116f8:	andeq	r3, r1, r1, lsr #27
   116fc:	andeq	r2, r0, sp, lsl #15
   11700:	andeq	r3, r1, sp, ror #26
   11704:	andeq	r3, r1, r9, asr #26
   11708:	andeq	r2, r0, r5, lsr r7
   1170c:	andeq	r3, r1, r5, lsl sp
   11710:	andeq	r3, r1, r5, asr #25
   11714:	andeq	r3, r1, r9, lsr #25
   11718:	andeq	r2, r0, r9, ror #12
   1171c:	andeq	r3, r1, r5, lsr ip
   11720:	andeq	r3, r1, r5, lsr #23
   11724:	andeq	r3, r1, r9, lsl #23
   11728:	andeq	r2, r0, r9, asr #9
   1172c:	andeq	r2, r0, ip, ror #6
   11730:	andeq	r2, r0, r6, asr r3
   11734:	andeq	r2, r0, r8, lsr r3
   11738:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1173c:	add	fp, sp, #28
   11740:	sub	sp, sp, #4
   11744:	vpush	{d8}
   11748:	sub	sp, sp, #32
   1174c:	mov	r2, r1
   11750:	ldr	r1, [pc, #1536]	; 11d58 <getc@plt+0x1158>
   11754:	mov	sl, r0
   11758:	mov	r0, r2
   1175c:	add	r1, pc, r1
   11760:	bl	1288c <getc@plt+0x1c8c>
   11764:	ldr	r1, [pc, #1520]	; 11d5c <getc@plt+0x115c>
   11768:	ldr	r2, [pc, #1520]	; 11d60 <getc@plt+0x1160>
   1176c:	ldr	r3, [pc, #1520]	; 11d64 <getc@plt+0x1164>
   11770:	mov	r4, r0
   11774:	add	r1, pc, r1
   11778:	add	r2, pc, r2
   1177c:	add	r3, pc, r3
   11780:	bl	10b94 <fprintf@plt>
   11784:	ldr	r2, [sl]
   11788:	ldr	r6, [pc, #1496]	; 11d68 <getc@plt+0x1168>
   1178c:	ldr	r3, [pc, #1496]	; 11d6c <getc@plt+0x116c>
   11790:	mov	r0, r4
   11794:	add	r6, pc, r6
   11798:	add	r3, pc, r3
   1179c:	mov	r1, r6
   117a0:	bl	10b94 <fprintf@plt>
   117a4:	ldr	r2, [sl, #4]
   117a8:	ldr	r3, [pc, #1472]	; 11d70 <getc@plt+0x1170>
   117ac:	mov	r0, r4
   117b0:	mov	r1, r6
   117b4:	add	r3, pc, r3
   117b8:	bl	10b94 <fprintf@plt>
   117bc:	ldr	r0, [sl]
   117c0:	cmp	r0, #0
   117c4:	beq	11804 <getc@plt+0xc04>
   117c8:	ldr	r1, [sl, #4]
   117cc:	vldr	d16, [pc, #932]	; 11b78 <getc@plt+0xf78>
   117d0:	vmov	s2, r0
   117d4:	sub	r1, r0, r1
   117d8:	mov	r0, r4
   117dc:	vmov	s0, r1
   117e0:	vcvt.f64.s32	d17, s0
   117e4:	vcvt.f64.s32	d18, s2
   117e8:	ldr	r1, [pc, #1416]	; 11d78 <getc@plt+0x1178>
   117ec:	add	r1, pc, r1
   117f0:	vmul.f64	d16, d17, d16
   117f4:	vdiv.f64	d16, d16, d18
   117f8:	vmov	r2, r3, d16
   117fc:	bl	10b94 <fprintf@plt>
   11800:	b	1181c <getc@plt+0xc1c>
   11804:	ldr	r0, [pc, #1384]	; 11d74 <getc@plt+0x1174>
   11808:	mov	r1, #8
   1180c:	mov	r2, #1
   11810:	mov	r3, r4
   11814:	add	r0, pc, r0
   11818:	bl	10b10 <fwrite@plt>
   1181c:	ldr	r1, [pc, #1368]	; 11d7c <getc@plt+0x117c>
   11820:	mov	r0, r4
   11824:	add	r1, pc, r1
   11828:	bl	10b94 <fprintf@plt>
   1182c:	ldr	r2, [sl, #8]
   11830:	ldr	r6, [pc, #1352]	; 11d80 <getc@plt+0x1180>
   11834:	ldr	r3, [pc, #1352]	; 11d84 <getc@plt+0x1184>
   11838:	mov	r0, r4
   1183c:	add	r6, pc, r6
   11840:	add	r3, pc, r3
   11844:	mov	r1, r6
   11848:	bl	10b94 <fprintf@plt>
   1184c:	ldr	r2, [sl, #12]
   11850:	ldr	r3, [pc, #1328]	; 11d88 <getc@plt+0x1188>
   11854:	mov	r0, r4
   11858:	mov	r1, r6
   1185c:	add	r3, pc, r3
   11860:	bl	10b94 <fprintf@plt>
   11864:	ldr	r2, [sl, #16]
   11868:	ldr	r3, [pc, #1308]	; 11d8c <getc@plt+0x118c>
   1186c:	mov	r0, r4
   11870:	mov	r1, r6
   11874:	add	r3, pc, r3
   11878:	bl	10b94 <fprintf@plt>
   1187c:	ldr	r0, [sl]
   11880:	cmp	r0, #0
   11884:	beq	118c8 <getc@plt+0xcc8>
   11888:	ldr	r1, [sl, #8]
   1188c:	ldr	r2, [sl, #12]
   11890:	vmov	s2, r0
   11894:	vldr	d16, [pc, #732]	; 11b78 <getc@plt+0xf78>
   11898:	mov	r0, r4
   1189c:	add	r1, r2, r1
   118a0:	vmov	s0, r1
   118a4:	vcvt.f64.s32	d17, s0
   118a8:	vcvt.f64.s32	d18, s2
   118ac:	ldr	r1, [pc, #1248]	; 11d94 <getc@plt+0x1194>
   118b0:	add	r1, pc, r1
   118b4:	vmul.f64	d16, d17, d16
   118b8:	vdiv.f64	d16, d16, d18
   118bc:	vmov	r2, r3, d16
   118c0:	bl	10b94 <fprintf@plt>
   118c4:	b	118e0 <getc@plt+0xce0>
   118c8:	ldr	r0, [pc, #1216]	; 11d90 <getc@plt+0x1190>
   118cc:	mov	r1, #8
   118d0:	mov	r2, #1
   118d4:	mov	r3, r4
   118d8:	add	r0, pc, r0
   118dc:	bl	10b10 <fwrite@plt>
   118e0:	ldr	r1, [pc, #1200]	; 11d98 <getc@plt+0x1198>
   118e4:	mov	r0, r4
   118e8:	movw	r6, #10172	; 0x27bc
   118ec:	add	r1, pc, r1
   118f0:	bl	10b94 <fprintf@plt>
   118f4:	ldr	r0, [sl]
   118f8:	cmp	r0, #0
   118fc:	beq	1193c <getc@plt+0xd3c>
   11900:	ldr	r1, [sl, #48]	; 0x30
   11904:	vldr	d16, [pc, #620]	; 11b78 <getc@plt+0xf78>
   11908:	vmov	s2, r0
   1190c:	sub	r1, r0, r1
   11910:	mov	r0, r4
   11914:	vmov	s0, r1
   11918:	vcvt.f64.s32	d17, s0
   1191c:	vcvt.f64.s32	d18, s2
   11920:	ldr	r1, [pc, #1144]	; 11da0 <getc@plt+0x11a0>
   11924:	add	r1, pc, r1
   11928:	vmul.f64	d16, d17, d16
   1192c:	vdiv.f64	d16, d16, d18
   11930:	vmov	r2, r3, d16
   11934:	bl	10b94 <fprintf@plt>
   11938:	b	11954 <getc@plt+0xd54>
   1193c:	ldr	r0, [pc, #1112]	; 11d9c <getc@plt+0x119c>
   11940:	mov	r1, #8
   11944:	mov	r2, #1
   11948:	mov	r3, r4
   1194c:	add	r0, pc, r0
   11950:	bl	10b10 <fwrite@plt>
   11954:	add	r0, sl, r6
   11958:	str	r0, [sp, #16]
   1195c:	mov	r0, r4
   11960:	ldr	r1, [pc, #1084]	; 11da4 <getc@plt+0x11a4>
   11964:	add	r1, pc, r1
   11968:	bl	10b94 <fprintf@plt>
   1196c:	ldr	r0, [pc, #1076]	; 11da8 <getc@plt+0x11a8>
   11970:	mov	r1, #37	; 0x25
   11974:	mov	r2, #1
   11978:	mov	r3, r4
   1197c:	add	r0, pc, r0
   11980:	bl	10b10 <fwrite@plt>
   11984:	ldr	r2, [sl, #20]
   11988:	ldr	r3, [sl, #24]
   1198c:	ldr	r0, [sl, #28]
   11990:	ldr	r1, [sl, #32]
   11994:	ldr	r7, [pc, #1040]	; 11dac <getc@plt+0x11ac>
   11998:	add	r7, pc, r7
   1199c:	stm	sp, {r0, r1, r7}
   119a0:	mov	r0, r4
   119a4:	ldr	r6, [pc, #1028]	; 11db0 <getc@plt+0x11b0>
   119a8:	add	r6, pc, r6
   119ac:	mov	r1, r6
   119b0:	bl	10b94 <fprintf@plt>
   119b4:	ldr	r2, [sl, #36]	; 0x24
   119b8:	ldr	r3, [sl, #40]	; 0x28
   119bc:	ldr	r0, [sl, #44]	; 0x2c
   119c0:	ldr	r1, [sl, #48]	; 0x30
   119c4:	ldr	r7, [pc, #1000]	; 11db4 <getc@plt+0x11b4>
   119c8:	add	r7, pc, r7
   119cc:	stm	sp, {r0, r1, r7}
   119d0:	mov	r0, r4
   119d4:	mov	r1, r6
   119d8:	bl	10b94 <fprintf@plt>
   119dc:	ldr	r2, [sl, #52]	; 0x34
   119e0:	ldr	r3, [sl, #56]	; 0x38
   119e4:	ldr	r0, [sl, #60]	; 0x3c
   119e8:	ldr	r1, [sl, #64]	; 0x40
   119ec:	ldr	r7, [pc, #964]	; 11db8 <getc@plt+0x11b8>
   119f0:	add	r7, pc, r7
   119f4:	stm	sp, {r0, r1, r7}
   119f8:	mov	r0, r4
   119fc:	mov	r1, r6
   11a00:	bl	10b94 <fprintf@plt>
   11a04:	ldr	r1, [pc, #944]	; 11dbc <getc@plt+0x11bc>
   11a08:	mov	r0, r4
   11a0c:	add	r1, pc, r1
   11a10:	bl	10b94 <fprintf@plt>
   11a14:	ldr	r7, [pc, #932]	; 11dc0 <getc@plt+0x11c0>
   11a18:	vldr	d8, [pc, #816]	; 11d50 <getc@plt+0x1150>
   11a1c:	mov	r6, #0
   11a20:	add	r7, pc, r7
   11a24:	b	11a68 <getc@plt+0xe68>
   11a28:	mov	r5, r7
   11a2c:	add	r7, sp, #23
   11a30:	mov	r0, #0
   11a34:	mov	r1, #0
   11a38:	mov	r3, #1
   11a3c:	mov	r2, r7
   11a40:	bl	132dc <error@@Base+0x628>
   11a44:	ldr	r1, [pc, #900]	; 11dd0 <getc@plt+0x11d0>
   11a48:	mov	r2, r7
   11a4c:	mov	r0, r4
   11a50:	mov	r7, r5
   11a54:	add	r1, pc, r1
   11a58:	bl	10b94 <fprintf@plt>
   11a5c:	add	r6, r6, #1
   11a60:	cmp	r6, #256	; 0x100
   11a64:	beq	11b18 <getc@plt+0xf18>
   11a68:	add	r9, sl, r6, lsl #3
   11a6c:	ldr	r0, [r9, #68]	; 0x44
   11a70:	cmp	r0, #1
   11a74:	blt	11a5c <getc@plt+0xe5c>
   11a78:	mov	r0, r6
   11a7c:	bl	12638 <getc@plt+0x1a38>
   11a80:	ldr	r2, [r9, #68]	; 0x44
   11a84:	ldr	r3, [r9, #72]	; 0x48
   11a88:	mov	r8, r0
   11a8c:	mov	r0, r4
   11a90:	mov	r1, r7
   11a94:	bl	10b94 <fprintf@plt>
   11a98:	ldr	r0, [r9, #68]	; 0x44
   11a9c:	cmp	r0, #0
   11aa0:	beq	11ae4 <getc@plt+0xee4>
   11aa4:	ldr	r1, [r9, #72]	; 0x48
   11aa8:	vmov	s2, r0
   11aac:	sub	r1, r0, r1
   11ab0:	mov	r0, r4
   11ab4:	vmov	s0, r1
   11ab8:	vcvt.f64.s32	d16, s0
   11abc:	vcvt.f64.s32	d17, s2
   11ac0:	ldr	r1, [pc, #768]	; 11dc8 <getc@plt+0x11c8>
   11ac4:	add	r1, pc, r1
   11ac8:	vmul.f64	d16, d16, d8
   11acc:	vdiv.f64	d16, d16, d17
   11ad0:	vmov	r2, r3, d16
   11ad4:	bl	10b94 <fprintf@plt>
   11ad8:	cmp	r8, #0
   11adc:	bne	11b04 <getc@plt+0xf04>
   11ae0:	b	11a28 <getc@plt+0xe28>
   11ae4:	ldr	r0, [pc, #728]	; 11dc4 <getc@plt+0x11c4>
   11ae8:	mov	r1, #8
   11aec:	mov	r2, #1
   11af0:	mov	r3, r4
   11af4:	add	r0, pc, r0
   11af8:	bl	10b10 <fwrite@plt>
   11afc:	cmp	r8, #0
   11b00:	beq	11a28 <getc@plt+0xe28>
   11b04:	ldr	r1, [pc, #704]	; 11dcc <getc@plt+0x11cc>
   11b08:	mov	r0, r4
   11b0c:	mov	r2, r8
   11b10:	add	r1, pc, r1
   11b14:	b	11a58 <getc@plt+0xe58>
   11b18:	ldr	r2, [sl, #2116]	; 0x844
   11b1c:	ldr	r3, [sl, #2120]	; 0x848
   11b20:	ldr	r1, [pc, #684]	; 11dd4 <getc@plt+0x11d4>
   11b24:	mov	r0, r4
   11b28:	add	r1, pc, r1
   11b2c:	bl	10b94 <fprintf@plt>
   11b30:	ldr	r0, [sl, #2116]	; 0x844
   11b34:	cmp	r0, #0
   11b38:	beq	11b80 <getc@plt+0xf80>
   11b3c:	ldr	r1, [sl, #2120]	; 0x848
   11b40:	vmov	s2, r0
   11b44:	sub	r1, r0, r1
   11b48:	mov	r0, r4
   11b4c:	vmov	s0, r1
   11b50:	vcvt.f64.s32	d16, s0
   11b54:	vcvt.f64.s32	d17, s2
   11b58:	ldr	r1, [pc, #636]	; 11ddc <getc@plt+0x11dc>
   11b5c:	add	r1, pc, r1
   11b60:	vmul.f64	d16, d16, d8
   11b64:	vdiv.f64	d16, d16, d17
   11b68:	vmov	r2, r3, d16
   11b6c:	bl	10b94 <fprintf@plt>
   11b70:	b	11b98 <getc@plt+0xf98>
   11b74:	nop	{0}
   11b78:	andeq	r0, r0, r0
   11b7c:	subsmi	r0, r9, r0
   11b80:	ldr	r0, [pc, #592]	; 11dd8 <getc@plt+0x11d8>
   11b84:	mov	r1, #8
   11b88:	mov	r2, #1
   11b8c:	mov	r3, r4
   11b90:	add	r0, pc, r0
   11b94:	bl	10b10 <fwrite@plt>
   11b98:	ldr	r1, [pc, #576]	; 11de0 <getc@plt+0x11e0>
   11b9c:	ldr	r2, [pc, #576]	; 11de4 <getc@plt+0x11e4>
   11ba0:	mov	r0, r4
   11ba4:	add	r1, pc, r1
   11ba8:	add	r2, pc, r2
   11bac:	bl	10b94 <fprintf@plt>
   11bb0:	ldr	r0, [sl, #4]
   11bb4:	ldr	r5, [sp, #16]
   11bb8:	cmp	r0, #1
   11bbc:	blt	11c40 <getc@plt+0x1040>
   11bc0:	movw	r0, #2124	; 0x84c
   11bc4:	add	r0, sl, r0
   11bc8:	bl	123d8 <getc@plt+0x17d8>
   11bcc:	ldr	r1, [r5]
   11bd0:	ldr	r0, [r5, #4]
   11bd4:	ldr	r2, [pc, #524]	; 11de8 <getc@plt+0x11e8>
   11bd8:	add	r2, pc, r2
   11bdc:	bl	11e3c <getc@plt+0x123c>
   11be0:	ldr	r0, [pc, #516]	; 11dec <getc@plt+0x11ec>
   11be4:	mov	r1, #39	; 0x27
   11be8:	mov	r2, #1
   11bec:	mov	r3, r4
   11bf0:	add	r0, pc, r0
   11bf4:	bl	10b10 <fwrite@plt>
   11bf8:	ldr	r0, [r5, #4]
   11bfc:	cmp	r0, #1
   11c00:	blt	11c40 <getc@plt+0x1040>
   11c04:	ldr	r6, [pc, #484]	; 11df0 <getc@plt+0x11f0>
   11c08:	mov	r7, #0
   11c0c:	add	r6, pc, r6
   11c10:	ldr	r0, [r5]
   11c14:	ldr	r0, [r0, r7, lsl #2]
   11c18:	add	r3, r0, #8
   11c1c:	mov	r0, r4
   11c20:	ldm	r3, {r1, r2, r3}
   11c24:	str	r1, [sp]
   11c28:	mov	r1, r6
   11c2c:	bl	10b94 <fprintf@plt>
   11c30:	ldr	r0, [r5, #4]
   11c34:	add	r7, r7, #1
   11c38:	cmp	r7, r0
   11c3c:	blt	11c10 <getc@plt+0x1010>
   11c40:	ldr	r0, [sl]
   11c44:	cmp	r0, #1
   11c48:	blt	11d38 <getc@plt+0x1138>
   11c4c:	ldr	r1, [pc, #416]	; 11df4 <getc@plt+0x11f4>
   11c50:	mov	r0, r4
   11c54:	add	r1, pc, r1
   11c58:	bl	10b94 <fprintf@plt>
   11c5c:	ldr	r6, [pc, #404]	; 11df8 <getc@plt+0x11f8>
   11c60:	movw	r9, #65535	; 0xffff
   11c64:	movw	r0, #10180	; 0x27c4
   11c68:	mov	r5, #0
   11c6c:	add	r7, sp, #23
   11c70:	add	r8, sl, r0
   11c74:	movw	r0, #10184	; 0x27c8
   11c78:	movt	r9, #16
   11c7c:	add	sl, sl, r0
   11c80:	add	r6, pc, r6
   11c84:	b	11cf0 <getc@plt+0x10f0>
   11c88:	lsl	r1, r5, #1
   11c8c:	vmov	s2, r0
   11c90:	ldr	r1, [sl, r1, lsl #2]
   11c94:	sub	r1, r0, r1
   11c98:	mov	r0, r4
   11c9c:	vmov	s0, r1
   11ca0:	vcvt.f64.s32	d16, s0
   11ca4:	vcvt.f64.s32	d17, s2
   11ca8:	ldr	r1, [pc, #340]	; 11e04 <getc@plt+0x1204>
   11cac:	add	r1, pc, r1
   11cb0:	vmul.f64	d16, d16, d8
   11cb4:	vdiv.f64	d16, d16, d17
   11cb8:	vmov	r2, r3, d16
   11cbc:	bl	10b94 <fprintf@plt>
   11cc0:	mov	r0, #0
   11cc4:	mov	r1, r5
   11cc8:	mov	r2, r7
   11ccc:	mov	r3, #1
   11cd0:	bl	132dc <error@@Base+0x628>
   11cd4:	mov	r0, r4
   11cd8:	mov	r1, r6
   11cdc:	mov	r2, r7
   11ce0:	bl	10b94 <fprintf@plt>
   11ce4:	add	r5, r5, #1
   11ce8:	cmp	r5, r9
   11cec:	beq	11d38 <getc@plt+0x1138>
   11cf0:	ldr	r2, [r8, r5, lsl #3]
   11cf4:	cmp	r2, #1
   11cf8:	blt	11ce4 <getc@plt+0x10e4>
   11cfc:	ldr	r3, [sl, r5, lsl #3]
   11d00:	ldr	r1, [pc, #244]	; 11dfc <getc@plt+0x11fc>
   11d04:	mov	r0, r4
   11d08:	add	r1, pc, r1
   11d0c:	bl	10b94 <fprintf@plt>
   11d10:	ldr	r0, [r8, r5, lsl #3]
   11d14:	cmp	r0, #0
   11d18:	bne	11c88 <getc@plt+0x1088>
   11d1c:	ldr	r0, [pc, #220]	; 11e00 <getc@plt+0x1200>
   11d20:	mov	r1, #8
   11d24:	mov	r2, #1
   11d28:	mov	r3, r4
   11d2c:	add	r0, pc, r0
   11d30:	bl	10b10 <fwrite@plt>
   11d34:	b	11cc0 <getc@plt+0x10c0>
   11d38:	mov	r0, r4
   11d3c:	bl	12914 <getc@plt+0x1d14>
   11d40:	sub	sp, fp, #40	; 0x28
   11d44:	vpop	{d8}
   11d48:	add	sp, sp, #4
   11d4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d50:	andeq	r0, r0, r0
   11d54:	subsmi	r0, r9, r0
   11d58:	andeq	r2, r0, r9, asr #11
   11d5c:	andeq	r2, r0, ip, asr #4
   11d60:	andeq	r2, r0, r1, lsl #4
   11d64:	ldrdeq	r2, [r0], -r3
   11d68:	andeq	r2, r0, fp, asr r3
   11d6c:	andeq	r2, r0, pc, ror r4
   11d70:	andeq	r2, r0, r1, lsl r2
   11d74:			; <UNDEFINED> instruction: 0x000022bd
   11d78:	andeq	r2, r0, lr, ror #5
   11d7c:	andeq	r2, r0, r8, lsr #3
   11d80:			; <UNDEFINED> instruction: 0x000022b3
   11d84:	muleq	r0, fp, r1
   11d88:	muleq	r0, r1, r1
   11d8c:	andeq	r2, r0, r9, lsl #3
   11d90:	strdeq	r2, [r0], -r9
   11d94:	andeq	r2, r0, sl, lsr #4
   11d98:	andeq	r2, r0, sp, lsl r1
   11d9c:	andeq	r2, r0, r5, lsl #3
   11da0:			; <UNDEFINED> instruction: 0x000021b6
   11da4:	strheq	r2, [r0], -ip
   11da8:	andeq	r2, r0, r3, asr #1
   11dac:	andeq	r2, r0, sp, asr #1
   11db0:	andeq	r2, r0, r8, lsr r1
   11db4:	andeq	r2, r0, r4, lsr #1
   11db8:	andeq	r2, r0, r5, lsl #1
   11dbc:	andeq	r2, r0, pc, rrx
   11dc0:	ldrdeq	r2, [r0], -sl
   11dc4:	ldrdeq	r1, [r0], -sp
   11dc8:	andeq	r2, r0, r6, lsl r0
   11dcc:	andeq	r1, r0, r3, ror #31
   11dd0:	strheq	r2, [r0], -r1
   11dd4:	ldrdeq	r1, [r0], -r2
   11dd8:	andeq	r1, r0, r1, asr #30
   11ddc:	andeq	r1, r0, lr, ror pc
   11de0:	andeq	r1, r0, pc, asr #30
   11de4:	andeq	r1, r0, sp, asr #29
   11de8:	andeq	r0, r0, r8, lsr #4
   11dec:	andeq	r1, r0, r9, lsr #29
   11df0:	andeq	r1, r0, r2, lsl #30
   11df4:	andeq	r1, r0, r7, lsr #28
   11df8:	andeq	r1, r0, r5, lsl #29
   11dfc:	strdeq	r1, [r0], -r2
   11e00:	andeq	r1, r0, r5, lsr #27
   11e04:	andeq	r1, r0, lr, lsr #28
   11e08:	ldr	r2, [r1, #12]
   11e0c:	ldr	r3, [r0, #12]
   11e10:	cmp	r2, r3
   11e14:	bne	11e34 <getc@plt+0x1234>
   11e18:	ldr	r2, [r1, #16]
   11e1c:	ldr	r3, [r0, #16]
   11e20:	cmp	r2, r3
   11e24:	bne	11e34 <getc@plt+0x1234>
   11e28:	ldr	r1, [r1, #8]
   11e2c:	ldr	r0, [r0, #8]
   11e30:	b	12808 <getc@plt+0x1c08>
   11e34:	sub	r0, r2, r3
   11e38:	bx	lr
   11e3c:	cmp	r0, #2
   11e40:	bxlt	lr
   11e44:	ldr	r3, [pc, #28]	; 11e68 <getc@plt+0x1268>
   11e48:	add	r3, pc, r3
   11e4c:	str	r2, [r3]
   11e50:	ldr	r2, [pc, #20]	; 11e6c <getc@plt+0x126c>
   11e54:	add	r2, pc, r2
   11e58:	str	r1, [r2]
   11e5c:	sub	r1, r0, #1
   11e60:	mov	r0, #0
   11e64:	b	11e70 <getc@plt+0x1270>
   11e68:	strdeq	r3, [r1], -r4
   11e6c:	andeq	r3, r1, r4, ror #5
   11e70:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11e74:	add	fp, sp, #24
   11e78:	mov	r8, r1
   11e7c:	mov	r5, r0
   11e80:	b	11eb0 <getc@plt+0x12b0>
   11e84:	mov	r7, r4
   11e88:	ldr	r0, [pc, #308]	; 11fc4 <getc@plt+0x13c4>
   11e8c:	ldr	r0, [pc, r0]
   11e90:	sub	r1, r4, #1
   11e94:	str	r6, [r0, r4, lsl #2]
   11e98:	cmp	r1, r5
   11e9c:	movgt	r0, r5
   11ea0:	blgt	11e70 <getc@plt+0x1270>
   11ea4:	add	r5, r7, #1
   11ea8:	cmp	r5, r8
   11eac:	bge	11fa4 <getc@plt+0x13a4>
   11eb0:	ldr	r0, [pc, #240]	; 11fa8 <getc@plt+0x13a8>
   11eb4:	cmp	r5, r8
   11eb8:	mov	r4, r8
   11ebc:	mov	r7, r5
   11ec0:	ldr	r0, [pc, r0]
   11ec4:	ldr	r6, [r0, r5, lsl #2]
   11ec8:	bge	11e90 <getc@plt+0x1290>
   11ecc:	mov	r7, r5
   11ed0:	mov	r4, r8
   11ed4:	cmp	r7, r4
   11ed8:	blt	11ef0 <getc@plt+0x12f0>
   11edc:	b	11f20 <getc@plt+0x1320>
   11ee0:	cmp	r7, r4
   11ee4:	bge	11e88 <getc@plt+0x1288>
   11ee8:	cmp	r7, r4
   11eec:	bge	11f20 <getc@plt+0x1320>
   11ef0:	ldr	r0, [pc, #180]	; 11fac <getc@plt+0x13ac>
   11ef4:	ldr	r0, [pc, r0]
   11ef8:	ldr	r1, [r0, r4, lsl #2]
   11efc:	ldr	r2, [pc, #172]	; 11fb0 <getc@plt+0x13b0>
   11f00:	mov	r0, r6
   11f04:	ldr	r2, [pc, r2]
   11f08:	blx	r2
   11f0c:	cmn	r0, #1
   11f10:	bgt	11f20 <getc@plt+0x1320>
   11f14:	sub	r4, r4, #1
   11f18:	cmp	r7, r4
   11f1c:	blt	11ef0 <getc@plt+0x12f0>
   11f20:	cmp	r7, r4
   11f24:	bne	11f34 <getc@plt+0x1334>
   11f28:	cmp	r7, r4
   11f2c:	blt	11f50 <getc@plt+0x1350>
   11f30:	b	11f84 <getc@plt+0x1384>
   11f34:	ldr	r0, [pc, #120]	; 11fb4 <getc@plt+0x13b4>
   11f38:	ldr	r0, [pc, r0]
   11f3c:	ldr	r1, [r0, r4, lsl #2]
   11f40:	str	r1, [r0, r7, lsl #2]
   11f44:	add	r7, r7, #1
   11f48:	cmp	r7, r4
   11f4c:	bge	11f84 <getc@plt+0x1384>
   11f50:	ldr	r0, [pc, #96]	; 11fb8 <getc@plt+0x13b8>
   11f54:	ldr	r0, [pc, r0]
   11f58:	ldr	r1, [r0, r7, lsl #2]
   11f5c:	ldr	r2, [pc, #88]	; 11fbc <getc@plt+0x13bc>
   11f60:	mov	r0, r6
   11f64:	ldr	r2, [pc, r2]
   11f68:	blx	r2
   11f6c:	cmp	r0, #1
   11f70:	blt	11f84 <getc@plt+0x1384>
   11f74:	add	r7, r7, #1
   11f78:	cmp	r4, r7
   11f7c:	bne	11f50 <getc@plt+0x1350>
   11f80:	b	11e84 <getc@plt+0x1284>
   11f84:	cmp	r7, r4
   11f88:	beq	11ee0 <getc@plt+0x12e0>
   11f8c:	ldr	r0, [pc, #44]	; 11fc0 <getc@plt+0x13c0>
   11f90:	ldr	r0, [pc, r0]
   11f94:	ldr	r1, [r0, r7, lsl #2]
   11f98:	str	r1, [r0, r4, lsl #2]
   11f9c:	sub	r4, r4, #1
   11fa0:	b	11ee0 <getc@plt+0x12e0>
   11fa4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   11fa8:	andeq	r3, r1, r8, ror r2
   11fac:	andeq	r3, r1, r4, asr #4
   11fb0:	andeq	r3, r1, r8, lsr r2
   11fb4:	andeq	r3, r1, r0, lsl #4
   11fb8:	andeq	r3, r1, r4, ror #3
   11fbc:	ldrdeq	r3, [r1], -r8
   11fc0:	andeq	r3, r1, r8, lsr #3
   11fc4:	andeq	r3, r1, ip, lsr #5
   11fc8:	push	{r4, r5, r6, sl, fp, lr}
   11fcc:	add	fp, sp, #16
   11fd0:	mov	r6, r1
   11fd4:	mov	r4, r0
   11fd8:	mov	r0, #1
   11fdc:	mov	r1, #32
   11fe0:	mov	r5, r2
   11fe4:	bl	127e4 <getc@plt+0x1be4>
   11fe8:	mov	r1, r0
   11fec:	str	r6, [r1, #8]
   11ff0:	str	r5, [r1, #12]
   11ff4:	ldr	r0, [r4, #24]
   11ff8:	ldr	r3, [r4, #28]
   11ffc:	add	r0, r0, r6
   12000:	add	r3, r3, r5
   12004:	str	r0, [r4, #24]
   12008:	str	r3, [r4, #28]
   1200c:	mov	r0, r4
   12010:	pop	{r4, r5, r6, sl, fp, lr}
   12014:	b	135d8 <error@@Base+0x924>
   12018:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1201c:	add	fp, sp, #24
   12020:	vpush	{d8}
   12024:	mov	r5, r0
   12028:	ldr	r0, [r0]
   1202c:	cmp	r0, #0
   12030:	beq	121dc <getc@plt+0x15dc>
   12034:	mov	r8, r2
   12038:	mov	r9, r1
   1203c:	mov	r1, #0
   12040:	mov	r2, r0
   12044:	ldr	r3, [r2, #4]
   12048:	ldr	r2, [r2, #8]
   1204c:	cmp	r2, #0
   12050:	mov	r2, r3
   12054:	addgt	r1, r1, #1
   12058:	cmp	r3, #0
   1205c:	bne	12044 <getc@plt+0x1444>
   12060:	cmp	r1, #1
   12064:	bls	121dc <getc@plt+0x15dc>
   12068:	ldrd	r2, [r5, #24]
   1206c:	ldr	r1, [r5, #12]
   12070:	vldr	d8, [pc, #368]	; 121e8 <getc@plt+0x15e8>
   12074:	vmov.i32	d19, #0	; 0x00000000
   12078:	sub	r4, r2, r3
   1207c:	vmov	s2, r2
   12080:	vmov	s0, r4
   12084:	sub	r4, r1, #1
   12088:	vcvt.f64.s32	d16, s0
   1208c:	vcvt.f64.s32	d17, s2
   12090:	vmov	s0, r1
   12094:	mov	r1, r0
   12098:	vmul.f64	d18, d16, d8
   1209c:	vcvt.f64.s32	d16, s0
   120a0:	vmov	s0, r4
   120a4:	vdiv.f64	d20, d18, d17
   120a8:	vcvt.f64.s32	d17, s0
   120ac:	vmul.f64	d18, d20, d16
   120b0:	vstr	d20, [r5, #32]
   120b4:	ldr	r6, [r1, #12]
   120b8:	ldmib	r1, {r4, r7}
   120bc:	sub	r7, r2, r7
   120c0:	vmov	s2, r7
   120c4:	cmp	r4, #0
   120c8:	sub	r6, r6, r3
   120cc:	add	r6, r6, r7
   120d0:	vmov	s0, r6
   120d4:	vcvt.f64.s32	d20, s0
   120d8:	vcvt.f64.s32	d21, s2
   120dc:	vmul.f64	d20, d20, d8
   120e0:	vdiv.f64	d20, d20, d21
   120e4:	vmov.f64	d21, d18
   120e8:	vmls.f64	d21, d20, d17
   120ec:	vstr	d20, [r1, #16]
   120f0:	vadd.f64	d19, d19, d20
   120f4:	vstr	d21, [r1, #24]
   120f8:	mov	r1, r4
   120fc:	bne	120b4 <getc@plt+0x14b4>
   12100:	vmul.f64	d19, d19, d17
   12104:	vdiv.f64	d19, d19, d16
   12108:	vsub.f64	d19, d18, d19
   1210c:	vmov.i32	d18, #0	; 0x00000000
   12110:	vstr	d19, [r5, #40]	; 0x28
   12114:	vldr	d20, [r0, #24]
   12118:	ldr	r0, [r0, #4]
   1211c:	cmp	r0, #0
   12120:	vsub.f64	d20, d20, d19
   12124:	vmla.f64	d18, d20, d20
   12128:	bne	12114 <getc@plt+0x1514>
   1212c:	vdiv.f64	d17, d18, d17
   12130:	vdiv.f64	d16, d17, d16
   12134:	vsqrt.f64	d0, d16
   12138:	vcmpe.f64	d0, d0
   1213c:	vmrs	APSR_nzcv, fpscr
   12140:	bvc	1214c <getc@plt+0x154c>
   12144:	vmov.f64	d0, d16
   12148:	bl	10ba0 <sqrt@plt>
   1214c:	vldr	d16, [pc, #156]	; 121f0 <getc@plt+0x15f0>
   12150:	vldr	d17, [r5, #40]	; 0x28
   12154:	vmov.i32	d18, #0	; 0x00000000
   12158:	vmov.f64	d20, d8
   1215c:	vmul.f64	d16, d0, d16
   12160:	vsub.f64	d17, d17, d16
   12164:	vcmpe.f64	d17, d8
   12168:	vmrs	APSR_nzcv, fpscr
   1216c:	vcmpe.f64	d17, #0.0
   12170:	vselgt.f64	d19, d8, d18
   12174:	vmrs	APSR_nzcv, fpscr
   12178:	vcmpe.f64	d17, d8
   1217c:	vmovmi.f64	d20, d19
   12180:	vmrs	APSR_nzcv, fpscr
   12184:	vcmpe.f64	d17, #0.0
   12188:	vselgt.f64	d19, d20, d17
   1218c:	vmrs	APSR_nzcv, fpscr
   12190:	vmovmi.f64	d19, d20
   12194:	vstr	d19, [r9]
   12198:	vldr	d17, [r5, #40]	; 0x28
   1219c:	vadd.f64	d16, d16, d17
   121a0:	vcmpe.f64	d16, d8
   121a4:	vmrs	APSR_nzcv, fpscr
   121a8:	vcmpe.f64	d16, #0.0
   121ac:	vselgt.f64	d17, d8, d18
   121b0:	vmrs	APSR_nzcv, fpscr
   121b4:	vcmpe.f64	d16, d8
   121b8:	vmovmi.f64	d8, d17
   121bc:	vmrs	APSR_nzcv, fpscr
   121c0:	vcmpe.f64	d16, #0.0
   121c4:	vselgt.f64	d17, d8, d16
   121c8:	vmrs	APSR_nzcv, fpscr
   121cc:	vmovmi.f64	d17, d8
   121d0:	vstr	d17, [r8]
   121d4:	vpop	{d8}
   121d8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   121dc:	ldr	r0, [pc, #20]	; 121f8 <getc@plt+0x15f8>
   121e0:	add	r0, pc, r0
   121e4:	bl	12cb4 <error@@Base>
   121e8:	andeq	r0, r0, r0
   121ec:	subsmi	r0, r9, r0
   121f0:			; <UNDEFINED> instruction: 0xf5c28f5c
   121f4:	svccc	0x00ff5c28
   121f8:	andeq	r1, r0, sp, lsr r9
   121fc:	push	{r4, r5, r6, sl, fp, lr}
   12200:	add	fp, sp, #16
   12204:	mov	r4, r0
   12208:	movw	r0, #8048	; 0x1f70
   1220c:	movw	r6, #503	; 0x1f7
   12210:	add	r5, r4, r0
   12214:	mov	r0, r4
   12218:	bl	1357c <error@@Base+0x8c8>
   1221c:	subs	r6, r6, #1
   12220:	add	r4, r4, #16
   12224:	bne	12214 <getc@plt+0x1614>
   12228:	mov	r0, #0
   1222c:	str	r0, [r5]
   12230:	str	r0, [r5, #4]
   12234:	pop	{r4, r5, r6, sl, fp, pc}
   12238:	push	{r4, r5, r6, sl, fp, lr}
   1223c:	add	fp, sp, #16
   12240:	mov	r5, r1
   12244:	ldrb	r1, [r1]
   12248:	mov	r4, #0
   1224c:	mov	r2, #0
   12250:	cmp	r1, #0
   12254:	beq	12288 <getc@plt+0x1688>
   12258:	add	r3, r5, #1
   1225c:	mov	r2, #0
   12260:	uxtab	r2, r2, r1
   12264:	ldrb	r1, [r3], #1
   12268:	cmp	r1, #0
   1226c:	bne	12260 <getc@plt+0x1660>
   12270:	movw	r1, #20065	; 0x4e61
   12274:	movt	r1, #33354	; 0x824a
   12278:	umull	r1, r3, r2, r1
   1227c:	lsr	r1, r3, #8
   12280:	movw	r3, #503	; 0x1f7
   12284:	mls	r2, r1, r3, r2
   12288:	ldr	r6, [r0, r2, lsl #4]
   1228c:	cmp	r6, #0
   12290:	beq	122b4 <getc@plt+0x16b4>
   12294:	ldr	r1, [r6, #8]
   12298:	mov	r0, r5
   1229c:	bl	10a80 <strcmp@plt>
   122a0:	cmp	r0, #0
   122a4:	beq	122bc <getc@plt+0x16bc>
   122a8:	ldr	r6, [r6, #4]
   122ac:	cmp	r6, #0
   122b0:	bne	12294 <getc@plt+0x1694>
   122b4:	mov	r0, r4
   122b8:	pop	{r4, r5, r6, sl, fp, pc}
   122bc:	mov	r4, r6
   122c0:	mov	r0, r4
   122c4:	pop	{r4, r5, r6, sl, fp, pc}
   122c8:	push	{r4, r5, fp, lr}
   122cc:	add	fp, sp, #8
   122d0:	movw	r2, #8048	; 0x1f70
   122d4:	add	r5, r0, r2
   122d8:	ldr	r2, [r1, #8]
   122dc:	ldrb	r3, [r2]
   122e0:	cmp	r3, #0
   122e4:	beq	1231c <getc@plt+0x171c>
   122e8:	add	r4, r2, #1
   122ec:	mov	r2, #0
   122f0:	uxtab	r2, r2, r3
   122f4:	ldrb	r3, [r4], #1
   122f8:	cmp	r3, #0
   122fc:	bne	122f0 <getc@plt+0x16f0>
   12300:	movw	r3, #20065	; 0x4e61
   12304:	movt	r3, #33354	; 0x824a
   12308:	umull	r3, r4, r2, r3
   1230c:	lsr	r3, r4, #8
   12310:	movw	r4, #503	; 0x1f7
   12314:	mls	r2, r3, r4, r2
   12318:	b	12320 <getc@plt+0x1720>
   1231c:	mov	r2, #0
   12320:	add	r0, r0, r2, lsl #4
   12324:	bl	13588 <error@@Base+0x8d4>
   12328:	ldr	r0, [r5]
   1232c:	cmp	r0, #0
   12330:	beq	12340 <getc@plt+0x1740>
   12334:	bl	10aa4 <free@plt>
   12338:	mov	r0, #0
   1233c:	str	r0, [r5]
   12340:	ldr	r0, [r5, #4]
   12344:	add	r0, r0, #1
   12348:	str	r0, [r5, #4]
   1234c:	pop	{r4, r5, fp, pc}
   12350:	push	{r4, r5, fp, lr}
   12354:	add	fp, sp, #8
   12358:	movw	r2, #8048	; 0x1f70
   1235c:	add	r5, r0, r2
   12360:	ldr	r2, [r1, #8]
   12364:	ldrb	r3, [r2]
   12368:	cmp	r3, #0
   1236c:	beq	123a4 <getc@plt+0x17a4>
   12370:	add	r4, r2, #1
   12374:	mov	r2, #0
   12378:	uxtab	r2, r2, r3
   1237c:	ldrb	r3, [r4], #1
   12380:	cmp	r3, #0
   12384:	bne	12378 <getc@plt+0x1778>
   12388:	movw	r3, #20065	; 0x4e61
   1238c:	movt	r3, #33354	; 0x824a
   12390:	umull	r3, r4, r2, r3
   12394:	lsr	r3, r4, #8
   12398:	movw	r4, #503	; 0x1f7
   1239c:	mls	r2, r3, r4, r2
   123a0:	b	123a8 <getc@plt+0x17a8>
   123a4:	mov	r2, #0
   123a8:	add	r0, r0, r2, lsl #4
   123ac:	bl	136d0 <error@@Base+0xa1c>
   123b0:	ldr	r0, [r5]
   123b4:	cmp	r0, #0
   123b8:	beq	123c8 <getc@plt+0x17c8>
   123bc:	bl	10aa4 <free@plt>
   123c0:	mov	r0, #0
   123c4:	str	r0, [r5]
   123c8:	ldr	r0, [r5, #4]
   123cc:	sub	r0, r0, #1
   123d0:	str	r0, [r5, #4]
   123d4:	pop	{r4, r5, fp, pc}
   123d8:	push	{r4, r5, fp, lr}
   123dc:	add	fp, sp, #8
   123e0:	mov	r4, r0
   123e4:	movw	r0, #8048	; 0x1f70
   123e8:	mov	r5, r4
   123ec:	ldr	r0, [r5, r0]!
   123f0:	cmp	r0, #0
   123f4:	bne	12454 <getc@plt+0x1854>
   123f8:	ldr	r0, [r5, #4]
   123fc:	cmp	r0, #0
   12400:	popeq	{r4, r5, fp, pc}
   12404:	mov	r1, #4
   12408:	bl	127e4 <getc@plt+0x1be4>
   1240c:	str	r0, [r5]
   12410:	mov	r0, #0
   12414:	movw	ip, #503	; 0x1f7
   12418:	mov	r2, #0
   1241c:	b	1242c <getc@plt+0x182c>
   12420:	add	r2, r2, #1
   12424:	cmp	r2, ip
   12428:	beq	12454 <getc@plt+0x1854>
   1242c:	ldr	r3, [r4, r2, lsl #4]
   12430:	cmp	r3, #0
   12434:	beq	12420 <getc@plt+0x1820>
   12438:	ldr	r1, [r5]
   1243c:	str	r3, [r1, r0, lsl #2]
   12440:	add	r0, r0, #1
   12444:	ldr	r3, [r3, #4]
   12448:	cmp	r3, #0
   1244c:	bne	12438 <getc@plt+0x1838>
   12450:	b	12420 <getc@plt+0x1820>
   12454:	pop	{r4, r5, fp, pc}
   12458:	push	{r4, r5, r6, r7, fp, lr}
   1245c:	add	fp, sp, #16
   12460:	mov	r5, r0
   12464:	movw	r0, #8048	; 0x1f70
   12468:	mov	r4, r1
   1246c:	movw	r7, #503	; 0x1f7
   12470:	add	r6, r5, r0
   12474:	mov	r0, r5
   12478:	mov	r1, r4
   1247c:	bl	137a4 <error@@Base+0xaf0>
   12480:	subs	r7, r7, #1
   12484:	add	r5, r5, #16
   12488:	bne	12474 <getc@plt+0x1874>
   1248c:	ldr	r0, [r6]
   12490:	cmp	r0, #0
   12494:	beq	124a4 <getc@plt+0x18a4>
   12498:	bl	10aa4 <free@plt>
   1249c:	mov	r0, #0
   124a0:	str	r0, [r6]
   124a4:	mov	r0, #0
   124a8:	str	r0, [r6, #4]
   124ac:	pop	{r4, r5, r6, r7, fp, pc}
   124b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   124b4:	add	fp, sp, #28
   124b8:	push	{r0}		; (str r0, [sp, #-4]!)
   124bc:	ldr	r0, [pc, #336]	; 12614 <getc@plt+0x1a14>
   124c0:	add	r0, pc, r0
   124c4:	ldrh	r0, [r0]
   124c8:	ldr	r7, [pc, #328]	; 12618 <getc@plt+0x1a18>
   124cc:	cmp	r0, #0
   124d0:	add	r7, pc, r7
   124d4:	bne	125f8 <getc@plt+0x19f8>
   124d8:	ldr	r3, [pc, #316]	; 1261c <getc@plt+0x1a1c>
   124dc:	mov	r6, #0
   124e0:	mov	r8, #0
   124e4:	mov	r4, #0
   124e8:	add	r3, pc, r3
   124ec:	b	12500 <getc@plt+0x1900>
   124f0:	add	r4, r4, #1
   124f4:	mov	r8, r0
   124f8:	cmp	r4, #91	; 0x5b
   124fc:	beq	125f8 <getc@plt+0x19f8>
   12500:	sxth	sl, r8
   12504:	cmp	sl, #1
   12508:	blt	1257c <getc@plt+0x197c>
   1250c:	add	r0, r4, r4, lsl #1
   12510:	ldr	r1, [pc, #264]	; 12620 <getc@plt+0x1a20>
   12514:	add	r0, r3, r0, lsl #2
   12518:	ldr	r5, [r0, #8]
   1251c:	ldr	r1, [pc, r1]
   12520:	mov	r0, r5
   12524:	bl	10a80 <strcmp@plt>
   12528:	cmp	r0, #0
   1252c:	mov	r0, r6
   12530:	mov	r9, #0
   12534:	beq	12584 <getc@plt+0x1984>
   12538:	mov	r8, r6
   1253c:	sxth	sl, r6
   12540:	ldr	r6, [pc, #220]	; 12624 <getc@plt+0x1a24>
   12544:	mov	r1, #1
   12548:	add	r6, pc, r6
   1254c:	mov	r9, r1
   12550:	cmp	r1, sl
   12554:	bge	12570 <getc@plt+0x1970>
   12558:	ldr	r1, [r6, r9, lsl #2]
   1255c:	mov	r0, r5
   12560:	bl	10a80 <strcmp@plt>
   12564:	add	r1, r9, #1
   12568:	cmp	r0, #0
   1256c:	bne	1254c <getc@plt+0x194c>
   12570:	mov	r6, r8
   12574:	mov	r0, r8
   12578:	b	12584 <getc@plt+0x1984>
   1257c:	mov	r0, r8
   12580:	mov	r9, #0
   12584:	ldr	r3, [pc, #156]	; 12628 <getc@plt+0x1a28>
   12588:	cmp	r9, sl
   1258c:	add	r3, pc, r3
   12590:	bne	125cc <getc@plt+0x19cc>
   12594:	uxth	r0, r8
   12598:	cmp	r0, #256	; 0x100
   1259c:	beq	12608 <getc@plt+0x1a08>
   125a0:	ldr	r0, [pc, #132]	; 1262c <getc@plt+0x1a2c>
   125a4:	add	r6, r8, #1
   125a8:	add	r0, pc, r0
   125ac:	strh	r6, [r0]
   125b0:	add	r0, r4, r4, lsl #1
   125b4:	ldr	r1, [pc, #116]	; 12630 <getc@plt+0x1a30>
   125b8:	add	r0, r3, r0, lsl #2
   125bc:	ldr	r0, [r0, #8]
   125c0:	add	r1, pc, r1
   125c4:	str	r0, [r1, r9, lsl #2]
   125c8:	mov	r0, r6
   125cc:	add	r1, r4, r4, lsl #1
   125d0:	mov	r2, r3
   125d4:	ldr	r1, [r2, r1, lsl #2]!
   125d8:	ldr	r2, [r2, #4]
   125dc:	cmp	r1, r2
   125e0:	bhi	124f0 <getc@plt+0x18f0>
   125e4:	strb	r9, [r7, r1]
   125e8:	add	r1, r1, #1
   125ec:	cmp	r1, r2
   125f0:	bls	125e4 <getc@plt+0x19e4>
   125f4:	b	124f0 <getc@plt+0x18f0>
   125f8:	ldr	r0, [sp]
   125fc:	ldrb	r0, [r7, r0]
   12600:	sub	sp, fp, #28
   12604:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12608:	ldr	r0, [pc, #36]	; 12634 <getc@plt+0x1a34>
   1260c:	add	r0, pc, r0
   12610:	bl	12cb4 <error@@Base>
   12614:	andeq	r2, r1, r0, lsl #25
   12618:	andeq	r2, r1, r2, ror ip
   1261c:	andeq	r2, r1, ip, asr #11
   12620:	andseq	r2, r2, r8, lsr #24
   12624:			; <UNDEFINED> instruction: 0x00122bfc
   12628:	andeq	r2, r1, r8, lsr #10
   1262c:	muleq	r1, r8, fp
   12630:	andseq	r2, r2, r4, lsl #23
   12634:	andeq	r1, r0, r1, asr #10
   12638:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1263c:	add	fp, sp, #28
   12640:	push	{r0}		; (str r0, [sp, #-4]!)
   12644:	ldr	r0, [pc, #364]	; 127b8 <getc@plt+0x1bb8>
   12648:	add	r0, pc, r0
   1264c:	ldrh	r6, [r0]
   12650:	cmp	r6, #0
   12654:	bne	1277c <getc@plt+0x1b7c>
   12658:	ldr	r3, [pc, #348]	; 127bc <getc@plt+0x1bbc>
   1265c:	ldr	r7, [pc, #348]	; 127c0 <getc@plt+0x1bc0>
   12660:	mov	r6, #0
   12664:	mov	r4, #0
   12668:	mov	r8, #0
   1266c:	add	r3, pc, r3
   12670:	add	r7, pc, r7
   12674:	b	12688 <getc@plt+0x1a88>
   12678:	add	r8, r8, #1
   1267c:	mov	r4, r0
   12680:	cmp	r8, #91	; 0x5b
   12684:	beq	1277c <getc@plt+0x1b7c>
   12688:	sxth	sl, r4
   1268c:	cmp	sl, #1
   12690:	blt	12700 <getc@plt+0x1b00>
   12694:	add	r0, r8, r8, lsl #1
   12698:	ldr	r1, [pc, #292]	; 127c4 <getc@plt+0x1bc4>
   1269c:	add	r0, r3, r0, lsl #2
   126a0:	ldr	r5, [r0, #8]
   126a4:	ldr	r1, [pc, r1]
   126a8:	mov	r0, r5
   126ac:	bl	10a80 <strcmp@plt>
   126b0:	cmp	r0, #0
   126b4:	mov	r0, r6
   126b8:	mov	r9, #0
   126bc:	beq	12708 <getc@plt+0x1b08>
   126c0:	ldr	r4, [pc, #256]	; 127c8 <getc@plt+0x1bc8>
   126c4:	sxth	sl, r6
   126c8:	mov	r1, #1
   126cc:	add	r4, pc, r4
   126d0:	mov	r9, r1
   126d4:	cmp	r1, sl
   126d8:	bge	126f4 <getc@plt+0x1af4>
   126dc:	ldr	r1, [r4, r9, lsl #2]
   126e0:	mov	r0, r5
   126e4:	bl	10a80 <strcmp@plt>
   126e8:	add	r1, r9, #1
   126ec:	cmp	r0, #0
   126f0:	bne	126d0 <getc@plt+0x1ad0>
   126f4:	mov	r0, r6
   126f8:	mov	r4, r6
   126fc:	b	12708 <getc@plt+0x1b08>
   12700:	mov	r0, r4
   12704:	mov	r9, #0
   12708:	ldr	r3, [pc, #188]	; 127cc <getc@plt+0x1bcc>
   1270c:	cmp	r9, sl
   12710:	add	r3, pc, r3
   12714:	bne	12750 <getc@plt+0x1b50>
   12718:	uxth	r0, r4
   1271c:	cmp	r0, #256	; 0x100
   12720:	beq	127ac <getc@plt+0x1bac>
   12724:	ldr	r0, [pc, #164]	; 127d0 <getc@plt+0x1bd0>
   12728:	add	r6, r4, #1
   1272c:	add	r0, pc, r0
   12730:	strh	r6, [r0]
   12734:	add	r0, r8, r8, lsl #1
   12738:	ldr	r1, [pc, #148]	; 127d4 <getc@plt+0x1bd4>
   1273c:	add	r0, r3, r0, lsl #2
   12740:	ldr	r0, [r0, #8]
   12744:	add	r1, pc, r1
   12748:	str	r0, [r1, r9, lsl #2]
   1274c:	mov	r0, r6
   12750:	add	r1, r8, r8, lsl #1
   12754:	mov	r2, r3
   12758:	ldr	r1, [r2, r1, lsl #2]!
   1275c:	ldr	r2, [r2, #4]
   12760:	cmp	r1, r2
   12764:	bhi	12678 <getc@plt+0x1a78>
   12768:	strb	r9, [r7, r1]
   1276c:	add	r1, r1, #1
   12770:	cmp	r1, r2
   12774:	bls	12768 <getc@plt+0x1b68>
   12778:	b	12678 <getc@plt+0x1a78>
   1277c:	ldr	r0, [sp]
   12780:	sxth	r1, r6
   12784:	uxtb	r0, r0
   12788:	cmp	r0, r1
   1278c:	ldrlt	r1, [pc, #68]	; 127d8 <getc@plt+0x1bd8>
   12790:	addlt	r1, pc, r1
   12794:	ldrlt	r0, [r1, r0, lsl #2]
   12798:	sublt	sp, fp, #28
   1279c:	poplt	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127a0:	ldr	r0, [pc, #56]	; 127e0 <getc@plt+0x1be0>
   127a4:	add	r0, pc, r0
   127a8:	bl	12cb4 <error@@Base>
   127ac:	ldr	r0, [pc, #40]	; 127dc <getc@plt+0x1bdc>
   127b0:	add	r0, pc, r0
   127b4:	bl	12cb4 <error@@Base>
   127b8:	strdeq	r2, [r1], -r8
   127bc:	andeq	r2, r1, r8, asr #8
   127c0:	ldrdeq	r2, [r1], -r2	; <UNPREDICTABLE>
   127c4:	andseq	r2, r2, r0, lsr #21
   127c8:	andseq	r2, r2, r8, ror sl
   127cc:	andeq	r2, r1, r4, lsr #7
   127d0:	andeq	r2, r1, r4, lsl sl
   127d4:	andseq	r2, r2, r0, lsl #20
   127d8:			; <UNDEFINED> instruction: 0x001229b4
   127dc:	muleq	r0, sp, r3
   127e0:	muleq	r0, r1, r3
   127e4:	push	{fp, lr}
   127e8:	mov	fp, sp
   127ec:	bl	10a74 <calloc@plt>
   127f0:	cmp	r0, #0
   127f4:	popne	{fp, pc}
   127f8:	ldr	r0, [pc, #4]	; 12804 <getc@plt+0x1c04>
   127fc:	add	r0, pc, r0
   12800:	bl	12cb4 <error@@Base>
   12804:	andeq	r1, r0, pc, lsl r9
   12808:	push	{r4, r5, r6, sl, fp, lr}
   1280c:	add	fp, sp, #16
   12810:	ldrb	r3, [r0]
   12814:	ldrb	ip, [r1]
   12818:	mov	r2, r0
   1281c:	mov	r0, #0
   12820:	cmp	r3, #0
   12824:	beq	12864 <getc@plt+0x1c64>
   12828:	add	r6, r2, #1
   1282c:	add	lr, r1, #1
   12830:	mov	r2, #0
   12834:	uxtb	r4, ip
   12838:	uxtb	r5, r3
   1283c:	cmp	r5, r4
   12840:	bne	12874 <getc@plt+0x1c74>
   12844:	ldrb	r3, [r6, r2]
   12848:	ldrb	ip, [lr, r2]
   1284c:	add	r2, r2, #1
   12850:	cmp	r3, #0
   12854:	bne	12834 <getc@plt+0x1c34>
   12858:	cmp	ip, #0
   1285c:	bne	12870 <getc@plt+0x1c70>
   12860:	pop	{r4, r5, r6, sl, fp, pc}
   12864:	mov	r2, #0
   12868:	cmp	ip, #0
   1286c:	beq	12860 <getc@plt+0x1c60>
   12870:	mov	r3, #0
   12874:	ldrb	r1, [r1, r2]
   12878:	uxtb	r2, r3
   1287c:	mov	r0, #1
   12880:	cmp	r2, r1
   12884:	mvncc	r0, #0
   12888:	pop	{r4, r5, r6, sl, fp, pc}
   1288c:	push	{r4, r5, fp, lr}
   12890:	add	fp, sp, #8
   12894:	mov	r5, r1
   12898:	cmp	r0, #0
   1289c:	beq	128d0 <getc@plt+0x1cd0>
   128a0:	mov	r1, r5
   128a4:	mov	r4, r0
   128a8:	bl	10a98 <fopen@plt>
   128ac:	cmp	r0, #0
   128b0:	popne	{r4, r5, fp, pc}
   128b4:	ldrb	r0, [r5]
   128b8:	cmp	r0, #119	; 0x77
   128bc:	bne	128f4 <getc@plt+0x1cf4>
   128c0:	ldr	r0, [pc, #72]	; 12910 <getc@plt+0x1d10>
   128c4:	mov	r1, r4
   128c8:	add	r0, pc, r0
   128cc:	bl	12d04 <error@@Base+0x50>
   128d0:	ldrb	r0, [r5]
   128d4:	ldr	r1, [pc, #40]	; 12904 <getc@plt+0x1d04>
   128d8:	ldr	r1, [pc, r1]
   128dc:	ldr	r2, [pc, #36]	; 12908 <getc@plt+0x1d08>
   128e0:	cmp	r0, #114	; 0x72
   128e4:	ldr	r2, [pc, r2]
   128e8:	moveq	r2, r1
   128ec:	ldr	r0, [r2]
   128f0:	pop	{r4, r5, fp, pc}
   128f4:	ldr	r0, [pc, #16]	; 1290c <getc@plt+0x1d0c>
   128f8:	mov	r1, r4
   128fc:	add	r0, pc, r0
   12900:	bl	12d04 <error@@Base+0x50>
   12904:	ldrdeq	r2, [r1], -r8
   12908:	ldrdeq	r2, [r1], -r0
   1290c:	andeq	r1, r0, pc, asr #16
   12910:	andeq	r1, r0, sp, ror #16
   12914:	ldr	r1, [pc, #40]	; 12944 <getc@plt+0x1d44>
   12918:	ldr	r1, [pc, r1]
   1291c:	ldr	r1, [r1]
   12920:	cmp	r1, r0
   12924:	bxeq	lr
   12928:	ldr	r1, [pc, #24]	; 12948 <getc@plt+0x1d48>
   1292c:	ldr	r1, [pc, r1]
   12930:	ldr	r1, [r1]
   12934:	cmp	r1, r0
   12938:	beq	12940 <getc@plt+0x1d40>
   1293c:	b	10bb8 <fclose@plt>
   12940:	bx	lr
   12944:	muleq	r1, r8, r7
   12948:	andeq	r2, r1, r8, lsl #15
   1294c:	push	{fp, lr}
   12950:	mov	fp, sp
   12954:	sub	sp, sp, #88	; 0x58
   12958:	mov	r1, r0
   1295c:	mov	r2, sp
   12960:	mov	r0, #3
   12964:	bl	10b04 <__xstat@plt>
   12968:	clz	r0, r0
   1296c:	lsr	r0, r0, #5
   12970:	mov	sp, fp
   12974:	pop	{fp, pc}
   12978:	push	{r4, r5, fp, lr}
   1297c:	add	fp, sp, #8
   12980:	sub	sp, sp, #104	; 0x68
   12984:	ldr	r0, [pc, #92]	; 129e8 <getc@plt+0x1de8>
   12988:	add	r0, pc, r0
   1298c:	ldrh	r1, [r0]
   12990:	add	r5, r1, #1
   12994:	strh	r5, [r0]
   12998:	ldr	r0, [pc, #76]	; 129ec <getc@plt+0x1dec>
   1299c:	ldr	r0, [pc, r0]
   129a0:	ldr	r4, [r0]
   129a4:	bl	10b58 <getpid@plt>
   129a8:	mov	r3, r0
   129ac:	sxth	r0, r5
   129b0:	add	r5, sp, #4
   129b4:	mov	r2, r4
   129b8:	str	r0, [sp]
   129bc:	mov	r0, r5
   129c0:	ldr	r1, [pc, #40]	; 129f0 <getc@plt+0x1df0>
   129c4:	add	r1, pc, r1
   129c8:	bl	10bc4 <sprintf@plt>
   129cc:	mov	r0, r5
   129d0:	bl	10ad4 <strdup@plt>
   129d4:	mov	r4, r0
   129d8:	bl	10aec <unlink@plt>
   129dc:	mov	r0, r4
   129e0:	sub	sp, fp, #8
   129e4:	pop	{r4, r5, fp, pc}
   129e8:			; <UNDEFINED> instruction: 0x00122bbc
   129ec:	andeq	r2, r1, r4, lsl #14
   129f0:			; <UNDEFINED> instruction: 0x000017b0
   129f4:	push	{r4, sl, fp, lr}
   129f8:	add	fp, sp, #8
   129fc:	mov	r4, r0
   12a00:	bl	10b88 <strlen@plt>
   12a04:	sub	r0, r0, #1
   12a08:	sxth	r0, r0
   12a0c:	cmp	r0, #0
   12a10:	bmi	12a20 <getc@plt+0x1e20>
   12a14:	ldrb	r1, [r4, r0]
   12a18:	cmp	r1, #47	; 0x2f
   12a1c:	bne	12a04 <getc@plt+0x1e04>
   12a20:	add	r0, r0, r4
   12a24:	add	r0, r0, #1
   12a28:	pop	{r4, sl, fp, pc}
   12a2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a30:	add	fp, sp, #28
   12a34:	sub	sp, sp, #12
   12a38:	stmib	sp, {r0, r1}
   12a3c:	mov	r6, r3
   12a40:	str	r2, [sp]
   12a44:	ldr	r4, [r1]
   12a48:	mov	r0, r4
   12a4c:	bl	10b88 <strlen@plt>
   12a50:	sub	r0, r0, #1
   12a54:	sxth	r0, r0
   12a58:	cmp	r0, #0
   12a5c:	bmi	12a6c <getc@plt+0x1e6c>
   12a60:	ldrb	r1, [r4, r0]
   12a64:	cmp	r1, #47	; 0x2f
   12a68:	bne	12a50 <getc@plt+0x1e50>
   12a6c:	ldr	r1, [pc, #484]	; 12c58 <getc@plt+0x2058>
   12a70:	add	r0, r0, r4
   12a74:	add	r0, r0, #1
   12a78:	ldr	r1, [pc, r1]
   12a7c:	str	r0, [r1]
   12a80:	mov	r0, #2
   12a84:	ldr	r4, [pc, #464]	; 12c5c <getc@plt+0x205c>
   12a88:	add	r4, pc, r4
   12a8c:	mov	r1, r4
   12a90:	bl	10b40 <__sysv_signal@plt>
   12a94:	mov	r0, #15
   12a98:	mov	r1, r4
   12a9c:	bl	10b40 <__sysv_signal@plt>
   12aa0:	ldr	r0, [sp, #4]
   12aa4:	ldr	r5, [r0]
   12aa8:	cmp	r5, #1
   12aac:	bne	12ac4 <getc@plt+0x1ec4>
   12ab0:	ldr	r0, [pc, #424]	; 12c60 <getc@plt+0x2060>
   12ab4:	ldr	r0, [pc, r0]
   12ab8:	ldrb	r0, [r0]
   12abc:	cmp	r0, #0
   12ac0:	bne	12c40 <getc@plt+0x2040>
   12ac4:	ldr	ip, [sp, #8]
   12ac8:	mov	r8, #0
   12acc:	cmp	r5, #2
   12ad0:	blt	12c1c <getc@plt+0x201c>
   12ad4:	mov	r8, #0
   12ad8:	mov	r7, #1
   12adc:	mov	r9, #1
   12ae0:	ldr	r4, [ip, r7, lsl #2]
   12ae4:	ldrb	r0, [r4]
   12ae8:	cmp	r0, #45	; 0x2d
   12aec:	bne	12bc4 <getc@plt+0x1fc4>
   12af0:	ldrb	sl, [r4, #1]
   12af4:	cmp	sl, #0
   12af8:	beq	12bc4 <getc@plt+0x1fc4>
   12afc:	mov	r0, r4
   12b00:	bl	10b88 <strlen@plt>
   12b04:	mov	r2, r0
   12b08:	ldr	r0, [pc, #340]	; 12c64 <getc@plt+0x2064>
   12b0c:	mov	r1, r4
   12b10:	add	r0, pc, r0
   12b14:	bl	10be8 <strncmp@plt>
   12b18:	cmp	r0, #0
   12b1c:	beq	12c40 <getc@plt+0x2040>
   12b20:	ldr	ip, [sp, #8]
   12b24:	add	r1, r7, #1
   12b28:	mov	r0, #0
   12b2c:	cmp	r1, r5
   12b30:	ldrlt	r0, [ip, r1, lsl #2]
   12b34:	cmp	r6, #0
   12b38:	ldrbne	r2, [r6]
   12b3c:	cmpne	r2, #0
   12b40:	beq	12c30 <getc@plt+0x2030>
   12b44:	mov	r1, #0
   12b48:	cmp	sl, r2
   12b4c:	beq	12b74 <getc@plt+0x1f74>
   12b50:	mov	r2, #1
   12b54:	sxth	r1, r2
   12b58:	add	r3, r1, r1, lsl #1
   12b5c:	ldrb	r3, [r6, r3, lsl #2]
   12b60:	cmp	r3, #0
   12b64:	beq	12c30 <getc@plt+0x2030>
   12b68:	add	r2, r2, #1
   12b6c:	cmp	sl, r3
   12b70:	bne	12b54 <getc@plt+0x1f54>
   12b74:	add	r1, r1, r1, lsl #1
   12b78:	add	r3, r6, r1, lsl #2
   12b7c:	ldr	r1, [r3, #4]
   12b80:	cmp	r1, #0
   12b84:	beq	12be4 <getc@plt+0x1fe4>
   12b88:	mov	r2, r4
   12b8c:	cmp	r0, #0
   12b90:	ldrb	r7, [r2, #2]!
   12b94:	cmpeq	r7, #0
   12b98:	beq	12be4 <getc@plt+0x1fe4>
   12b9c:	ldr	r3, [r1]
   12ba0:	cmp	r3, #0
   12ba4:	bne	12c48 <getc@plt+0x2048>
   12ba8:	cmp	r7, #0
   12bac:	movne	r0, r2
   12bb0:	str	r0, [r1]
   12bb4:	ldrb	r0, [r2]
   12bb8:	cmp	r0, #0
   12bbc:	addeq	r9, r9, #1
   12bc0:	b	12bd0 <getc@plt+0x1fd0>
   12bc4:	sxth	r0, r8
   12bc8:	add	r8, r8, #1
   12bcc:	str	r4, [ip, r0, lsl #2]
   12bd0:	add	r9, r9, #1
   12bd4:	sxth	r7, r9
   12bd8:	cmp	r5, r7
   12bdc:	bgt	12ae0 <getc@plt+0x1ee0>
   12be0:	b	12c1c <getc@plt+0x201c>
   12be4:	ldr	r0, [r3, #8]
   12be8:	cmp	r0, #0
   12bec:	beq	12c30 <getc@plt+0x2030>
   12bf0:	ldrb	r1, [r4, #2]
   12bf4:	cmp	r1, #0
   12bf8:	bne	12c30 <getc@plt+0x2030>
   12bfc:	ldrb	r1, [r0]
   12c00:	cmp	r1, #0
   12c04:	bne	12c48 <getc@plt+0x2048>
   12c08:	mov	r1, #1
   12c0c:	strb	r1, [r0]
   12c10:	ldr	r0, [sp, #4]
   12c14:	ldr	r5, [r0]
   12c18:	b	12bd0 <getc@plt+0x1fd0>
   12c1c:	ldr	r1, [sp, #4]
   12c20:	sxth	r0, r8
   12c24:	str	r0, [r1]
   12c28:	sub	sp, fp, #28
   12c2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c30:	ldr	r0, [pc, #52]	; 12c6c <getc@plt+0x206c>
   12c34:	mov	r1, r4
   12c38:	add	r0, pc, r0
   12c3c:	bl	12d04 <error@@Base+0x50>
   12c40:	ldr	r0, [sp]
   12c44:	bl	12de0 <error@@Base+0x12c>
   12c48:	ldr	r0, [pc, #24]	; 12c68 <getc@plt+0x2068>
   12c4c:	mov	r1, r4
   12c50:	add	r0, pc, r0
   12c54:	bl	12d04 <error@@Base+0x50>
   12c58:	andeq	r2, r1, r8, lsr #12
   12c5c:	andeq	r0, r0, r8, lsl r3
   12c60:	ldrdeq	r2, [r1], -r8
   12c64:	andeq	r1, r0, r1, lsl #13
   12c68:	andeq	r1, r0, r5, ror #10
   12c6c:	andeq	r1, r0, lr, ror #10
   12c70:	push	{fp, lr}
   12c74:	mov	fp, sp
   12c78:	mov	r0, #0
   12c7c:	bl	12c80 <getc@plt+0x2080>
   12c80:	push	{fp, lr}
   12c84:	mov	fp, sp
   12c88:	mov	r4, r0
   12c8c:	ldr	r0, [pc, #28]	; 12cb0 <getc@plt+0x20b0>
   12c90:	ldr	r0, [pc, r0]
   12c94:	ldr	r0, [r0]
   12c98:	cmp	r0, #0
   12c9c:	beq	12ca4 <getc@plt+0x20a4>
   12ca0:	blx	r0
   12ca4:	bl	12e40 <error@@Base+0x18c>
   12ca8:	mov	r0, r4
   12cac:	bl	10b64 <exit@plt>
   12cb0:	andeq	r2, r1, r8, lsl r4

00012cb4 <error@@Base>:
   12cb4:	push	{fp, lr}
   12cb8:	mov	fp, sp
   12cbc:	mov	r3, r0
   12cc0:	ldr	r0, [pc, #44]	; 12cf4 <error@@Base+0x40>
   12cc4:	ldr	r0, [pc, r0]
   12cc8:	ldr	r2, [r0]
   12ccc:	ldr	r0, [pc, #36]	; 12cf8 <error@@Base+0x44>
   12cd0:	ldr	r0, [pc, r0]
   12cd4:	ldr	r0, [r0]
   12cd8:	ldr	r1, [pc, #28]	; 12cfc <error@@Base+0x48>
   12cdc:	add	r1, pc, r1
   12ce0:	bl	10b94 <fprintf@plt>
   12ce4:	ldr	r0, [pc, #20]	; 12d00 <error@@Base+0x4c>
   12ce8:	ldr	r0, [pc, r0]
   12cec:	ldr	r0, [r0]
   12cf0:	bl	12c80 <getc@plt+0x2080>
   12cf4:	ldrdeq	r2, [r1], -ip
   12cf8:	andeq	r2, r1, r8, asr #7
   12cfc:	andeq	r1, r0, r3, lsl #9
   12d00:	ldrdeq	r2, [r1], -r0
   12d04:	push	{fp, lr}
   12d08:	mov	fp, sp
   12d0c:	sub	sp, sp, #8
   12d10:	mov	r3, r0
   12d14:	ldr	r0, [pc, #48]	; 12d4c <error@@Base+0x98>
   12d18:	ldr	r0, [pc, r0]
   12d1c:	ldr	r2, [r0]
   12d20:	ldr	r0, [pc, #40]	; 12d50 <error@@Base+0x9c>
   12d24:	ldr	r0, [pc, r0]
   12d28:	str	r1, [sp]
   12d2c:	ldr	r0, [r0]
   12d30:	ldr	r1, [pc, #28]	; 12d54 <error@@Base+0xa0>
   12d34:	add	r1, pc, r1
   12d38:	bl	10b94 <fprintf@plt>
   12d3c:	ldr	r0, [pc, #20]	; 12d58 <error@@Base+0xa4>
   12d40:	ldr	r0, [pc, r0]
   12d44:	ldr	r0, [r0]
   12d48:	bl	12c80 <getc@plt+0x2080>
   12d4c:	andeq	r2, r1, r8, lsl #7
   12d50:	andeq	r2, r1, r4, ror r3
   12d54:	andeq	r1, r0, r3, lsr r4
   12d58:	andeq	r2, r1, r8, ror r3
   12d5c:	push	{fp, lr}
   12d60:	mov	fp, sp
   12d64:	sub	sp, sp, #8
   12d68:	mov	r3, r0
   12d6c:	ldr	r0, [pc, #40]	; 12d9c <error@@Base+0xe8>
   12d70:	ldr	r0, [pc, r0]
   12d74:	ldr	r2, [r0]
   12d78:	ldr	r0, [pc, #32]	; 12da0 <error@@Base+0xec>
   12d7c:	ldr	r0, [pc, r0]
   12d80:	str	r1, [sp]
   12d84:	ldr	r0, [r0]
   12d88:	ldr	r1, [pc, #20]	; 12da4 <error@@Base+0xf0>
   12d8c:	add	r1, pc, r1
   12d90:	bl	10b94 <fprintf@plt>
   12d94:	mov	sp, fp
   12d98:	pop	{fp, pc}
   12d9c:	andeq	r2, r1, r0, lsr r3
   12da0:	andeq	r2, r1, ip, lsl r3
   12da4:	ldrdeq	r1, [r0], -fp
   12da8:	push	{fp, lr}
   12dac:	mov	fp, sp
   12db0:	ldr	r0, [pc, #32]	; 12dd8 <error@@Base+0x124>
   12db4:	add	r0, pc, r0
   12db8:	ldrb	r1, [r0]
   12dbc:	cmp	r1, #1
   12dc0:	popeq	{fp, pc}
   12dc4:	mov	r1, #1
   12dc8:	strb	r1, [r0]
   12dcc:	ldr	r0, [pc, #8]	; 12ddc <error@@Base+0x128>
   12dd0:	add	r0, pc, r0
   12dd4:	bl	12cb4 <error@@Base>
   12dd8:	mulseq	r2, r2, r7
   12ddc:			; <UNDEFINED> instruction: 0x000013b2
   12de0:	push	{fp, lr}
   12de4:	mov	fp, sp
   12de8:	mov	r3, r0
   12dec:	ldr	r0, [pc, #60]	; 12e30 <error@@Base+0x17c>
   12df0:	ldr	r0, [pc, r0]
   12df4:	ldr	r0, [r0]
   12df8:	cmp	r0, #0
   12dfc:	bne	12e28 <error@@Base+0x174>
   12e00:	ldr	r0, [pc, #44]	; 12e34 <error@@Base+0x180>
   12e04:	ldr	r0, [pc, r0]
   12e08:	ldr	r2, [r0]
   12e0c:	ldr	r0, [pc, #36]	; 12e38 <error@@Base+0x184>
   12e10:	ldr	r0, [pc, r0]
   12e14:	ldr	r0, [r0]
   12e18:	ldr	r1, [pc, #28]	; 12e3c <error@@Base+0x188>
   12e1c:	add	r1, pc, r1
   12e20:	bl	10b94 <fprintf@plt>
   12e24:	bl	12c70 <getc@plt+0x2070>
   12e28:	blx	r0
   12e2c:	bl	12c70 <getc@plt+0x2070>
   12e30:	andeq	r2, r1, r4, lsr #5
   12e34:	muleq	r1, ip, r2
   12e38:	andeq	r2, r1, r8, lsl #5
   12e3c:	andeq	r1, r0, fp, ror r3
   12e40:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12e44:	add	fp, sp, #24
   12e48:	sub	sp, sp, #104	; 0x68
   12e4c:	ldr	r8, [pc, #124]	; 12ed0 <error@@Base+0x21c>
   12e50:	add	r8, pc, r8
   12e54:	ldrsh	r0, [r8]
   12e58:	cmp	r0, #1
   12e5c:	blt	12ec8 <error@@Base+0x214>
   12e60:	ldr	r9, [pc, #108]	; 12ed4 <error@@Base+0x220>
   12e64:	mov	r7, #1
   12e68:	add	r4, sp, #4
   12e6c:	ldr	r9, [pc, r9]
   12e70:	ldr	r5, [pc, #96]	; 12ed8 <error@@Base+0x224>
   12e74:	add	r5, pc, r5
   12e78:	ldr	r6, [r9]
   12e7c:	bl	10b58 <getpid@plt>
   12e80:	mov	r3, r0
   12e84:	sxth	r0, r7
   12e88:	mov	r1, r5
   12e8c:	mov	r2, r6
   12e90:	str	r0, [sp]
   12e94:	mov	r0, r4
   12e98:	bl	10bc4 <sprintf@plt>
   12e9c:	mov	r0, r4
   12ea0:	bl	10ad4 <strdup@plt>
   12ea4:	mov	r6, r0
   12ea8:	bl	10aec <unlink@plt>
   12eac:	mov	r0, r6
   12eb0:	bl	10aa4 <free@plt>
   12eb4:	add	r0, r7, #1
   12eb8:	sxth	r7, r0
   12ebc:	ldrsh	r0, [r8]
   12ec0:	cmp	r7, r0
   12ec4:	ble	12e78 <error@@Base+0x1c4>
   12ec8:	sub	sp, fp, #24
   12ecc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12ed0:			; <UNDEFINED> instruction: 0x001226f4
   12ed4:	andeq	r2, r1, r4, lsr r2
   12ed8:	andeq	r1, r0, r0, lsl #6
   12edc:	push	{r4, r5, r6, sl, fp, lr}
   12ee0:	add	fp, sp, #16
   12ee4:	mov	r5, r1
   12ee8:	mov	r6, r0
   12eec:	mov	r0, #1
   12ef0:	mov	r1, #16
   12ef4:	mov	r4, r2
   12ef8:	bl	127e4 <getc@plt+0x1be4>
   12efc:	str	r4, [r0, #12]
   12f00:	mov	r1, r0
   12f04:	strb	r5, [r0, #8]
   12f08:	mov	r0, r6
   12f0c:	pop	{r4, r5, r6, sl, fp, lr}
   12f10:	b	135d8 <error@@Base+0x924>
   12f14:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f18:	add	fp, sp, #28
   12f1c:	sub	sp, sp, #124	; 0x7c
   12f20:	mov	r4, r2
   12f24:	mov	r2, r1
   12f28:	cmp	r1, #0
   12f2c:	str	r0, [sp, #16]
   12f30:	bne	12f40 <error@@Base+0x28c>
   12f34:	ldrb	r0, [r4]
   12f38:	cmp	r0, #0
   12f3c:	bne	13280 <error@@Base+0x5cc>
   12f40:	ldr	r0, [sp, #16]
   12f44:	ldr	r0, [r0, #4]
   12f48:	str	r0, [sp, #4]
   12f4c:	mov	r0, r2
   12f50:	ldr	r1, [pc, #828]	; 13294 <error@@Base+0x5e0>
   12f54:	add	r1, pc, r1
   12f58:	bl	1288c <getc@plt+0x1c8c>
   12f5c:	mov	r6, r0
   12f60:	ldrb	r0, [r4]
   12f64:	cmp	r0, #0
   12f68:	beq	12fb0 <error@@Base+0x2fc>
   12f6c:	add	r0, sp, #20
   12f70:	mov	r1, #99	; 0x63
   12f74:	mov	r2, r6
   12f78:	bl	10abc <fgets@plt>
   12f7c:	cmp	r0, #0
   12f80:	beq	12fa0 <error@@Base+0x2ec>
   12f84:	ldr	r1, [pc, #780]	; 13298 <error@@Base+0x5e4>
   12f88:	add	r0, sp, #20
   12f8c:	mov	r2, #51	; 0x33
   12f90:	add	r1, pc, r1
   12f94:	bl	10b70 <bcmp@plt>
   12f98:	cmp	r0, #0
   12f9c:	beq	1320c <error@@Base+0x558>
   12fa0:	mov	r0, r6
   12fa4:	bl	10ae0 <rewind@plt>
   12fa8:	mov	r5, #0
   12fac:	strb	r5, [r4, #11]
   12fb0:	ldr	r9, [r4, #4]
   12fb4:	ldrb	r8, [r4, #1]
   12fb8:	mov	r0, r6
   12fbc:	str	r4, [sp, #8]
   12fc0:	cmp	r9, #0
   12fc4:	movweq	r9, #94	; 0x5e
   12fc8:	bl	10c00 <getc@plt>
   12fcc:	cmn	r0, #1
   12fd0:	beq	1309c <error@@Base+0x3e8>
   12fd4:	add	r1, sp, #20
   12fd8:	mov	sl, #0
   12fdc:	sub	r4, fp, #32
   12fe0:	add	r1, r1, #1
   12fe4:	str	r1, [sp, #12]
   12fe8:	b	13024 <error@@Base+0x370>
   12fec:	mov	r0, #1
   12ff0:	mov	r1, #16
   12ff4:	bl	127e4 <getc@plt+0x1be4>
   12ff8:	str	r5, [r0, #12]
   12ffc:	mov	r1, r0
   13000:	strb	sl, [r0, #8]
   13004:	ldr	r0, [sp, #16]
   13008:	bl	135d8 <error@@Base+0x924>
   1300c:	mov	r7, #0
   13010:	mov	r0, r6
   13014:	bl	10c00 <getc@plt>
   13018:	cmn	r0, #1
   1301c:	mov	sl, r7
   13020:	beq	1309c <error@@Base+0x3e8>
   13024:	ldr	r1, [pc, #628]	; 132a0 <error@@Base+0x5ec>
   13028:	ldr	r1, [pc, r1]
   1302c:	add	r1, r1, r0
   13030:	ldrsb	r5, [r1]
   13034:	cmp	r5, #0
   13038:	ble	13260 <error@@Base+0x5ac>
   1303c:	cmp	r5, #1
   13040:	strb	r0, [sp, #20]
   13044:	beq	13068 <error@@Base+0x3b4>
   13048:	ldr	r0, [sp, #12]
   1304c:	sub	r7, r5, #1
   13050:	mov	r1, #1
   13054:	mov	r3, r6
   13058:	mov	r2, r7
   1305c:	bl	10b1c <fread@plt>
   13060:	cmp	r0, r7
   13064:	bne	13274 <error@@Base+0x5c0>
   13068:	add	r0, sp, #20
   1306c:	mov	r1, #4
   13070:	mov	r2, r4
   13074:	bl	10b28 <utf8proc_iterate@plt>
   13078:	cmp	r0, r5
   1307c:	bne	1326c <error@@Base+0x5b8>
   13080:	ldr	r5, [fp, #-32]	; 0xffffffe0
   13084:	cmp	r8, #0
   13088:	beq	12fec <error@@Base+0x338>
   1308c:	mov	r7, #1
   13090:	cmp	r5, r9
   13094:	beq	13010 <error@@Base+0x35c>
   13098:	b	12fec <error@@Base+0x338>
   1309c:	mov	r0, r6
   130a0:	bl	12914 <getc@plt+0x1d14>
   130a4:	ldr	r8, [sp, #8]
   130a8:	ldr	r9, [sp, #4]
   130ac:	ldrb	r0, [r8, #9]
   130b0:	cmp	r0, #0
   130b4:	beq	131c8 <error@@Base+0x514>
   130b8:	cmp	r9, #0
   130bc:	ldr	r0, [sp, #16]
   130c0:	addne	r0, r9, #4
   130c4:	ldr	r6, [r0]
   130c8:	cmp	r6, #0
   130cc:	beq	131c8 <error@@Base+0x514>
   130d0:	mov	r5, #32
   130d4:	mov	r7, r6
   130d8:	b	130ec <error@@Base+0x438>
   130dc:	str	r5, [r7, #12]
   130e0:	ldr	r7, [r7, #4]
   130e4:	cmp	r7, #0
   130e8:	beq	1313c <error@@Base+0x488>
   130ec:	ldr	r4, [r7, #12]
   130f0:	mov	r0, r4
   130f4:	bl	10ab0 <utf8proc_get_property@plt>
   130f8:	cmp	r4, #10
   130fc:	ble	13118 <error@@Base+0x464>
   13100:	sub	r1, r4, #11
   13104:	cmp	r1, #3
   13108:	bcc	130dc <error@@Base+0x428>
   1310c:	cmp	r4, #160	; 0xa0
   13110:	beq	130dc <error@@Base+0x428>
   13114:	b	13128 <error@@Base+0x474>
   13118:	cmp	r4, #9
   1311c:	beq	130dc <error@@Base+0x428>
   13120:	cmp	r4, #10
   13124:	beq	130e0 <error@@Base+0x42c>
   13128:	ldrsh	r0, [r0]
   1312c:	sub	r0, r0, #23
   13130:	cmp	r0, #2
   13134:	strls	r5, [r7, #12]
   13138:	b	130e0 <error@@Base+0x42c>
   1313c:	mov	r4, #0
   13140:	b	13170 <error@@Base+0x4bc>
   13144:	tst	r4, #255	; 0xff
   13148:	cmpne	r5, #0
   1314c:	bne	1319c <error@@Base+0x4e8>
   13150:	ldr	r0, [sp, #16]
   13154:	mov	r1, r6
   13158:	bl	136d0 <error@@Base+0xa1c>
   1315c:	mov	r0, r6
   13160:	bl	10aa4 <free@plt>
   13164:	cmp	r5, #0
   13168:	mov	r6, r5
   1316c:	beq	131c8 <error@@Base+0x514>
   13170:	ldr	r1, [r6, #12]
   13174:	ldr	r5, [r6, #4]
   13178:	cmp	r1, #32
   1317c:	beq	13144 <error@@Base+0x490>
   13180:	subs	r0, r1, #10
   13184:	movwne	r0, #1
   13188:	tst	r4, #255	; 0xff
   1318c:	cmpeq	r1, #10
   13190:	beq	13150 <error@@Base+0x49c>
   13194:	mov	r4, r0
   13198:	b	13164 <error@@Base+0x4b0>
   1319c:	ldr	r1, [r5, #12]
   131a0:	cmp	r1, #10
   131a4:	beq	13150 <error@@Base+0x49c>
   131a8:	mov	r0, #1
   131ac:	cmp	r1, #32
   131b0:	bne	13194 <error@@Base+0x4e0>
   131b4:	ldrb	r0, [r6, #8]
   131b8:	ldrb	r1, [r5, #8]
   131bc:	orr	r0, r1, r0
   131c0:	strb	r0, [r5, #8]
   131c4:	b	13150 <error@@Base+0x49c>
   131c8:	ldrb	r0, [r8, #10]
   131cc:	cmp	r0, #0
   131d0:	beq	13204 <error@@Base+0x550>
   131d4:	cmp	r9, #0
   131d8:	ldr	r0, [sp, #16]
   131dc:	addne	r0, r9, #4
   131e0:	ldr	r4, [r0]
   131e4:	cmp	r4, #0
   131e8:	beq	13204 <error@@Base+0x550>
   131ec:	ldr	r0, [r4, #12]
   131f0:	bl	10af8 <utf8proc_tolower@plt>
   131f4:	str	r0, [r4, #12]
   131f8:	ldr	r4, [r4, #4]
   131fc:	cmp	r4, #0
   13200:	bne	131ec <error@@Base+0x538>
   13204:	sub	sp, fp, #28
   13208:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1320c:	ldr	r8, [pc, #136]	; 1329c <error@@Base+0x5e8>
   13210:	mov	r7, #0
   13214:	add	r9, sp, #20
   13218:	mov	r5, #1
   1321c:	add	r8, pc, r8
   13220:	mov	r0, r9
   13224:	mov	r1, #99	; 0x63
   13228:	mov	r2, r6
   1322c:	bl	10abc <fgets@plt>
   13230:	cmp	r0, #0
   13234:	beq	12fac <error@@Base+0x2f8>
   13238:	mov	r0, r9
   1323c:	mov	r1, r8
   13240:	mov	r2, #56	; 0x38
   13244:	bl	10b70 <bcmp@plt>
   13248:	cmp	r0, #0
   1324c:	addeq	r7, r7, #1
   13250:	uxth	r0, r7
   13254:	cmp	r0, #2
   13258:	bcc	13220 <error@@Base+0x56c>
   1325c:	b	12fac <error@@Base+0x2f8>
   13260:	ldr	r0, [pc, #68]	; 132ac <error@@Base+0x5f8>
   13264:	add	r0, pc, r0
   13268:	bl	12cb4 <error@@Base>
   1326c:	bl	10bd0 <utf8proc_errmsg@plt>
   13270:	bl	12cb4 <error@@Base>
   13274:	ldr	r0, [pc, #52]	; 132b0 <error@@Base+0x5fc>
   13278:	add	r0, pc, r0
   1327c:	bl	12cb4 <error@@Base>
   13280:	ldr	r0, [pc, #28]	; 132a4 <error@@Base+0x5f0>
   13284:	ldr	r1, [pc, #28]	; 132a8 <error@@Base+0x5f4>
   13288:	add	r0, pc, r0
   1328c:	add	r1, pc, r1
   13290:	bl	12d04 <error@@Base+0x50>
   13294:	andeq	r1, r0, ip, lsr r3
   13298:	andeq	r1, r0, sl, ror r2
   1329c:	andeq	r1, r0, r6, lsr #32
   132a0:	andeq	r2, r1, r4, lsl #1
   132a4:	andeq	r0, r0, lr, lsr pc
   132a8:	andeq	r0, r0, sl, asr #30
   132ac:	andeq	r1, r0, r6, lsl r0
   132b0:	andeq	r1, r0, sl, lsl r0
   132b4:	push	{fp, lr}
   132b8:	mov	fp, sp
   132bc:	bl	10ac8 <utf8proc_encode_char@plt>
   132c0:	cmp	r0, #0
   132c4:	sxtbgt	r0, r0
   132c8:	popgt	{fp, pc}
   132cc:	ldr	r0, [pc, #4]	; 132d8 <error@@Base+0x624>
   132d0:	add	r0, pc, r0
   132d4:	bl	12cb4 <error@@Base>
   132d8:	andeq	r0, r0, r0, lsl pc
   132dc:	push	{r4, r5, r6, r7, fp, lr}
   132e0:	add	fp, sp, #16
   132e4:	mov	r6, r3
   132e8:	mov	r4, r2
   132ec:	mov	r5, r1
   132f0:	tst	r0, #255	; 0xff
   132f4:	beq	1333c <error@@Base+0x688>
   132f8:	mov	r0, #94	; 0x5e
   132fc:	mov	r1, r4
   13300:	bl	10ac8 <utf8proc_encode_char@plt>
   13304:	cmp	r0, #0
   13308:	ble	133b4 <error@@Base+0x700>
   1330c:	sxtb	r7, r0
   13310:	cmp	r5, #10
   13314:	bne	13348 <error@@Base+0x694>
   13318:	ldr	r0, [pc, #224]	; 13400 <error@@Base+0x74c>
   1331c:	ldr	r1, [pc, #224]	; 13404 <error@@Base+0x750>
   13320:	tst	r6, #255	; 0xff
   13324:	add	r0, pc, r0
   13328:	add	r1, pc, r1
   1332c:	moveq	r1, r0
   13330:	add	r0, r4, r7
   13334:	pop	{r4, r5, r6, r7, fp, lr}
   13338:	b	10bc4 <sprintf@plt>
   1333c:	mov	r7, #0
   13340:	cmp	r5, #10
   13344:	beq	13318 <error@@Base+0x664>
   13348:	mov	r0, r5
   1334c:	bl	10ab0 <utf8proc_get_property@plt>
   13350:	cmp	r5, #32
   13354:	beq	13368 <error@@Base+0x6b4>
   13358:	ldrsh	r0, [r0]
   1335c:	sub	r1, r0, #1
   13360:	cmp	r1, #22
   13364:	bcs	133c0 <error@@Base+0x70c>
   13368:	mov	r0, r5
   1336c:	bl	10b7c <utf8proc_category@plt>
   13370:	sub	r0, r0, #6
   13374:	cmp	r0, #2
   13378:	bhi	13394 <error@@Base+0x6e0>
   1337c:	add	r1, r4, r7
   13380:	movw	r0, #9676	; 0x25cc
   13384:	bl	10ac8 <utf8proc_encode_char@plt>
   13388:	cmp	r0, #0
   1338c:	ble	133b4 <error@@Base+0x700>
   13390:	sxtab	r7, r7, r0
   13394:	add	r1, r4, r7
   13398:	mov	r0, r5
   1339c:	bl	10ac8 <utf8proc_encode_char@plt>
   133a0:	cmp	r0, #0
   133a4:	sxtabgt	r0, r7, r0
   133a8:	movgt	r1, #0
   133ac:	strbgt	r1, [r4, r0]
   133b0:	popgt	{r4, r5, r6, r7, fp, pc}
   133b4:	ldr	r0, [pc, #64]	; 133fc <error@@Base+0x748>
   133b8:	add	r0, pc, r0
   133bc:	bl	12cb4 <error@@Base>
   133c0:	cmp	r0, #29
   133c4:	beq	13368 <error@@Base+0x6b4>
   133c8:	add	r0, r4, r7
   133cc:	cmp	r5, #255	; 0xff
   133d0:	bhi	133e0 <error@@Base+0x72c>
   133d4:	ldr	r1, [pc, #24]	; 133f4 <error@@Base+0x740>
   133d8:	add	r1, pc, r1
   133dc:	b	133e8 <error@@Base+0x734>
   133e0:	ldr	r1, [pc, #16]	; 133f8 <error@@Base+0x744>
   133e4:	add	r1, pc, r1
   133e8:	mov	r2, r5
   133ec:	pop	{r4, r5, r6, r7, fp, lr}
   133f0:	b	10bc4 <sprintf@plt>
   133f4:	andeq	r0, r0, r4, lsr #28
   133f8:	andeq	r0, r0, pc, lsl lr
   133fc:	andeq	r0, r0, r8, lsr #28
   13400:			; <UNDEFINED> instruction: 0x000006b5
   13404:	andeq	r0, r0, pc, asr #29
   13408:	push	{r4, r5, r6, r7, fp, lr}
   1340c:	add	fp, sp, #16
   13410:	sub	sp, sp, #16
   13414:	mov	r6, r2
   13418:	mov	r2, r1
   1341c:	ldr	r1, [pc, #180]	; 134d8 <error@@Base+0x824>
   13420:	mov	r5, r0
   13424:	mov	r0, r2
   13428:	add	r1, pc, r1
   1342c:	bl	1288c <getc@plt+0x1c8c>
   13430:	mov	r4, r0
   13434:	cmp	r6, #0
   13438:	beq	1348c <error@@Base+0x7d8>
   1343c:	ldr	r0, [pc, #152]	; 134dc <error@@Base+0x828>
   13440:	mov	r1, #55	; 0x37
   13444:	mov	r2, #1
   13448:	mov	r3, r4
   1344c:	add	r0, pc, r0
   13450:	bl	10b10 <fwrite@plt>
   13454:	ldr	r7, [pc, #132]	; 134e0 <error@@Base+0x82c>
   13458:	mov	r1, #55	; 0x37
   1345c:	mov	r2, #1
   13460:	mov	r3, r4
   13464:	add	r7, pc, r7
   13468:	mov	r0, r7
   1346c:	bl	10b10 <fwrite@plt>
   13470:	mov	r0, r4
   13474:	blx	r6
   13478:	mov	r0, r7
   1347c:	mov	r1, #55	; 0x37
   13480:	mov	r2, #1
   13484:	mov	r3, r4
   13488:	bl	10b10 <fwrite@plt>
   1348c:	ldr	r6, [r5]
   13490:	cmp	r6, #0
   13494:	beq	134c8 <error@@Base+0x814>
   13498:	add	r5, sp, #7
   1349c:	ldr	r1, [r6, #12]
   134a0:	ldrb	r0, [r6, #8]
   134a4:	mov	r2, r5
   134a8:	mov	r3, #0
   134ac:	bl	132dc <error@@Base+0x628>
   134b0:	mov	r0, r5
   134b4:	mov	r1, r4
   134b8:	bl	10bdc <fputs@plt>
   134bc:	ldr	r6, [r6, #4]
   134c0:	cmp	r6, #0
   134c4:	bne	1349c <error@@Base+0x7e8>
   134c8:	mov	r0, r4
   134cc:	bl	12914 <getc@plt+0x1d14>
   134d0:	sub	sp, fp, #16
   134d4:	pop	{r4, r5, r6, r7, fp, pc}
   134d8:	strdeq	r0, [r0], -sp
   134dc:			; <UNDEFINED> instruction: 0x00000dbe
   134e0:	ldrdeq	r0, [r0], -lr
   134e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   134e8:	add	fp, sp, #28
   134ec:	sub	sp, sp, #4
   134f0:	mov	r9, #0
   134f4:	mov	sl, r0
   134f8:	str	r9, [sp]
   134fc:	ldrb	r0, [r1]
   13500:	cmp	r0, #0
   13504:	beq	13564 <error@@Base+0x8b0>
   13508:	mov	r4, r1
   1350c:	mov	r8, sp
   13510:	mov	r7, #1
   13514:	mov	r0, r4
   13518:	mvn	r1, #0
   1351c:	mov	r2, r8
   13520:	bl	10b28 <utf8proc_iterate@plt>
   13524:	cmp	r0, #1
   13528:	blt	1356c <error@@Base+0x8b8>
   1352c:	ldr	r5, [sp]
   13530:	mov	r6, r0
   13534:	mov	r0, #1
   13538:	mov	r1, #16
   1353c:	bl	127e4 <getc@plt+0x1be4>
   13540:	str	r5, [r0, #12]
   13544:	mov	r1, r0
   13548:	strb	r9, [r0, #8]
   1354c:	mov	r0, sl
   13550:	bl	135d8 <error@@Base+0x924>
   13554:	ldrb	r0, [r4, r6]!
   13558:	cmp	r0, #0
   1355c:	bne	13514 <error@@Base+0x860>
   13560:	b	13570 <error@@Base+0x8bc>
   13564:	mov	r7, #1
   13568:	b	13570 <error@@Base+0x8bc>
   1356c:	mov	r7, #0
   13570:	mov	r0, r7
   13574:	sub	sp, fp, #28
   13578:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1357c:	vmov.i32	q8, #0	; 0x00000000
   13580:	vst1.32	{d16-d17}, [r0]
   13584:	bx	lr
   13588:	push	{r4, r5, fp, lr}
   1358c:	add	fp, sp, #8
   13590:	mov	r4, r0
   13594:	ldr	r0, [r0]
   13598:	mov	r5, #0
   1359c:	str	r5, [r1]
   135a0:	cmp	r0, #0
   135a4:	str	r0, [r1, #4]
   135a8:	str	r1, [r4]
   135ac:	addeq	r0, r4, #4
   135b0:	str	r1, [r0]
   135b4:	ldr	r0, [r4, #8]
   135b8:	cmp	r0, #0
   135bc:	beq	135c8 <error@@Base+0x914>
   135c0:	bl	10aa4 <free@plt>
   135c4:	str	r5, [r4, #8]
   135c8:	ldr	r0, [r4, #12]
   135cc:	add	r0, r0, #1
   135d0:	str	r0, [r4, #12]
   135d4:	pop	{r4, r5, fp, pc}
   135d8:	push	{r4, r5, fp, lr}
   135dc:	add	fp, sp, #8
   135e0:	mov	r4, r0
   135e4:	ldr	r0, [r0, #4]
   135e8:	mov	r5, #0
   135ec:	mov	r2, r4
   135f0:	cmp	r0, #0
   135f4:	stm	r1, {r0, r5}
   135f8:	addne	r2, r0, #4
   135fc:	str	r1, [r2]
   13600:	str	r1, [r4, #4]
   13604:	ldr	r0, [r4, #8]
   13608:	cmp	r0, #0
   1360c:	beq	13618 <error@@Base+0x964>
   13610:	bl	10aa4 <free@plt>
   13614:	str	r5, [r4, #8]
   13618:	ldr	r0, [r4, #12]
   1361c:	add	r0, r0, #1
   13620:	str	r0, [r4, #12]
   13624:	pop	{r4, r5, fp, pc}
   13628:	push	{r4, sl, fp, lr}
   1362c:	add	fp, sp, #8
   13630:	mov	r4, r0
   13634:	ldr	r0, [r2]
   13638:	mov	r3, r4
   1363c:	cmp	r0, #0
   13640:	stm	r1, {r0, r2}
   13644:	addne	r3, r0, #4
   13648:	str	r1, [r3]
   1364c:	str	r1, [r2]
   13650:	ldr	r0, [r4, #8]
   13654:	cmp	r0, #0
   13658:	beq	13668 <error@@Base+0x9b4>
   1365c:	bl	10aa4 <free@plt>
   13660:	mov	r0, #0
   13664:	str	r0, [r4, #8]
   13668:	ldr	r0, [r4, #12]
   1366c:	add	r0, r0, #1
   13670:	str	r0, [r4, #12]
   13674:	pop	{r4, sl, fp, pc}
   13678:	push	{r4, sl, fp, lr}
   1367c:	add	fp, sp, #8
   13680:	mov	r4, r0
   13684:	mov	r0, r1
   13688:	cmp	r1, #0
   1368c:	ldr	r3, [r0, #4]!
   13690:	moveq	r0, r4
   13694:	stm	r2, {r1, r3}
   13698:	str	r2, [r0]
   1369c:	cmp	r3, #0
   136a0:	addeq	r3, r4, #4
   136a4:	str	r2, [r3]
   136a8:	ldr	r0, [r4, #8]
   136ac:	cmp	r0, #0
   136b0:	beq	136c0 <error@@Base+0xa0c>
   136b4:	bl	10aa4 <free@plt>
   136b8:	mov	r0, #0
   136bc:	str	r0, [r4, #8]
   136c0:	ldr	r0, [r4, #12]
   136c4:	add	r0, r0, #1
   136c8:	str	r0, [r4, #12]
   136cc:	pop	{r4, sl, fp, pc}
   136d0:	push	{r4, r5, fp, lr}
   136d4:	add	fp, sp, #8
   136d8:	mov	r4, r0
   136dc:	ldm	r1, {r0, r2}
   136e0:	cmp	r0, #0
   136e4:	beq	136f4 <error@@Base+0xa40>
   136e8:	str	r2, [r0, #4]
   136ec:	ldr	r2, [r1, #4]
   136f0:	b	136f8 <error@@Base+0xa44>
   136f4:	str	r2, [r4]
   136f8:	cmp	r2, #0
   136fc:	mov	r5, #0
   13700:	addeq	r2, r4, #4
   13704:	str	r0, [r2]
   13708:	str	r5, [r1]
   1370c:	str	r5, [r1, #4]
   13710:	ldr	r0, [r4, #8]
   13714:	cmp	r0, #0
   13718:	beq	13724 <error@@Base+0xa70>
   1371c:	bl	10aa4 <free@plt>
   13720:	str	r5, [r4, #8]
   13724:	ldr	r0, [r4, #12]
   13728:	sub	r0, r0, #1
   1372c:	str	r0, [r4, #12]
   13730:	pop	{r4, r5, fp, pc}
   13734:	push	{r4, sl, fp, lr}
   13738:	add	fp, sp, #8
   1373c:	mov	r4, r0
   13740:	ldr	r0, [r0, #8]
   13744:	cmp	r0, #0
   13748:	beq	13750 <error@@Base+0xa9c>
   1374c:	pop	{r4, sl, fp, pc}
   13750:	ldr	r0, [r4, #12]
   13754:	cmp	r0, #0
   13758:	beq	1374c <error@@Base+0xa98>
   1375c:	mov	r1, #4
   13760:	bl	127e4 <getc@plt+0x1be4>
   13764:	str	r0, [r4, #8]
   13768:	ldr	r1, [r4]
   1376c:	cmp	r1, #0
   13770:	beq	1374c <error@@Base+0xa98>
   13774:	str	r1, [r0]
   13778:	ldr	r0, [r1, #4]
   1377c:	cmp	r0, #0
   13780:	popeq	{r4, sl, fp, pc}
   13784:	mov	r1, #4
   13788:	ldr	r2, [r4, #8]
   1378c:	str	r0, [r2, r1]
   13790:	add	r1, r1, #4
   13794:	ldr	r0, [r0, #4]
   13798:	cmp	r0, #0
   1379c:	bne	13788 <error@@Base+0xad4>
   137a0:	b	1374c <error@@Base+0xa98>
   137a4:	push	{r4, r5, r6, r7, fp, lr}
   137a8:	add	fp, sp, #16
   137ac:	ldr	r6, [r0]
   137b0:	cmp	r6, #0
   137b4:	beq	13830 <error@@Base+0xb7c>
   137b8:	mov	r4, r1
   137bc:	mov	r5, r0
   137c0:	mov	r7, #0
   137c4:	b	137e8 <error@@Base+0xb34>
   137c8:	ldr	r0, [r5, #12]
   137cc:	sub	r0, r0, #1
   137d0:	str	r0, [r5, #12]
   137d4:	mov	r0, r6
   137d8:	blx	r4
   137dc:	ldr	r6, [r5]
   137e0:	cmp	r6, #0
   137e4:	beq	13830 <error@@Base+0xb7c>
   137e8:	ldm	r6, {r0, r1}
   137ec:	cmp	r0, #0
   137f0:	beq	13800 <error@@Base+0xb4c>
   137f4:	str	r1, [r0, #4]
   137f8:	ldr	r1, [r6, #4]
   137fc:	b	13804 <error@@Base+0xb50>
   13800:	str	r1, [r5]
   13804:	cmp	r1, #0
   13808:	addeq	r1, r5, #4
   1380c:	str	r0, [r1]
   13810:	str	r7, [r6]
   13814:	str	r7, [r6, #4]
   13818:	ldr	r0, [r5, #8]
   1381c:	cmp	r0, #0
   13820:	beq	137c8 <error@@Base+0xb14>
   13824:	bl	10aa4 <free@plt>
   13828:	str	r7, [r5, #8]
   1382c:	b	137c8 <error@@Base+0xb14>
   13830:	pop	{r4, r5, r6, r7, fp, pc}
   13834:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13838:	mov	r7, r0
   1383c:	ldr	r6, [pc, #72]	; 1388c <error@@Base+0xbd8>
   13840:	ldr	r5, [pc, #72]	; 13890 <error@@Base+0xbdc>
   13844:	add	r6, pc, r6
   13848:	add	r5, pc, r5
   1384c:	sub	r6, r6, r5
   13850:	mov	r8, r1
   13854:	mov	r9, r2
   13858:	bl	10a54 <calloc@plt-0x20>
   1385c:	asrs	r6, r6, #2
   13860:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   13864:	mov	r4, #0
   13868:	add	r4, r4, #1
   1386c:	ldr	r3, [r5], #4
   13870:	mov	r2, r9
   13874:	mov	r1, r8
   13878:	mov	r0, r7
   1387c:	blx	r3
   13880:	cmp	r6, r4
   13884:	bne	13868 <error@@Base+0xbb4>
   13888:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1388c:	andeq	r1, r1, ip, ror #4
   13890:	andeq	r1, r1, r4, ror #4
   13894:	bx	lr

Disassembly of section .fini:

00013898 <.fini>:
   13898:	push	{r3, lr}
   1389c:	pop	{r3, pc}
