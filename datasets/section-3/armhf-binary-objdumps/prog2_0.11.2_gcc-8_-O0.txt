
../repos/prog2/0.11.2:     file format elf32-littlearm


Disassembly of section .init:

00010660 <.init>:
   10660:	push	{r3, lr}
   10664:	bl	10728 <_start@@Base+0x3c>
   10668:	pop	{r3, pc}

Disassembly of section .plt:

0001066c <strcmp@plt-0x14>:
   1066c:	push	{lr}		; (str lr, [sp, #-4]!)
   10670:	ldr	lr, [pc, #4]	; 1067c <strcmp@plt-0x4>
   10674:	add	lr, pc, lr
   10678:	ldr	pc, [lr, #8]!
   1067c:	andeq	r0, r1, r4, lsl #19

00010680 <strcmp@plt>:
   10680:	add	ip, pc, #0, 12
   10684:	add	ip, ip, #16, 20	; 0x10000
   10688:	ldr	pc, [ip, #2436]!	; 0x984

0001068c <strcat@plt>:
   1068c:	add	ip, pc, #0, 12
   10690:	add	ip, ip, #16, 20	; 0x10000
   10694:	ldr	pc, [ip, #2428]!	; 0x97c

00010698 <strcpy@plt>:
   10698:	add	ip, pc, #0, 12
   1069c:	add	ip, ip, #16, 20	; 0x10000
   106a0:	ldr	pc, [ip, #2420]!	; 0x974

000106a4 <puts@plt>:
   106a4:	add	ip, pc, #0, 12
   106a8:	add	ip, ip, #16, 20	; 0x10000
   106ac:	ldr	pc, [ip, #2412]!	; 0x96c

000106b0 <__libc_start_main@plt>:
   106b0:	add	ip, pc, #0, 12
   106b4:	add	ip, ip, #16, 20	; 0x10000
   106b8:	ldr	pc, [ip, #2404]!	; 0x964

000106bc <__gmon_start__@plt>:
   106bc:	add	ip, pc, #0, 12
   106c0:	add	ip, ip, #16, 20	; 0x10000
   106c4:	ldr	pc, [ip, #2396]!	; 0x95c

000106c8 <strlen@plt>:
   106c8:	add	ip, pc, #0, 12
   106cc:	add	ip, ip, #16, 20	; 0x10000
   106d0:	ldr	pc, [ip, #2388]!	; 0x954

000106d4 <__isoc99_scanf@plt>:
   106d4:	add	ip, pc, #0, 12
   106d8:	add	ip, ip, #16, 20	; 0x10000
   106dc:	ldr	pc, [ip, #2380]!	; 0x94c

000106e0 <abort@plt>:
   106e0:	add	ip, pc, #0, 12
   106e4:	add	ip, ip, #16, 20	; 0x10000
   106e8:	ldr	pc, [ip, #2372]!	; 0x944

Disassembly of section .text:

000106ec <_start@@Base>:
   106ec:	mov	fp, #0
   106f0:	mov	lr, #0
   106f4:	pop	{r1}		; (ldr r1, [sp], #4)
   106f8:	mov	r2, sp
   106fc:	push	{r2}		; (str r2, [sp, #-4]!)
   10700:	push	{r0}		; (str r0, [sp, #-4]!)
   10704:	ldr	ip, [pc, #16]	; 1071c <_start@@Base+0x30>
   10708:	push	{ip}		; (str ip, [sp, #-4]!)
   1070c:	ldr	r0, [pc, #12]	; 10720 <_start@@Base+0x34>
   10710:	ldr	r3, [pc, #12]	; 10724 <_start@@Base+0x38>
   10714:	bl	106b0 <__libc_start_main@plt>
   10718:	bl	106e0 <abort@plt>
   1071c:	andeq	r0, r1, ip, asr fp
   10720:	ldrdeq	r0, [r1], -ip
   10724:	strdeq	r0, [r1], -ip
   10728:	ldr	r3, [pc, #20]	; 10744 <_start@@Base+0x58>
   1072c:	ldr	r2, [pc, #20]	; 10748 <_start@@Base+0x5c>
   10730:	add	r3, pc, r3
   10734:	ldr	r2, [r3, r2]
   10738:	cmp	r2, #0
   1073c:	bxeq	lr
   10740:	b	106bc <__gmon_start__@plt>
   10744:	andeq	r0, r1, r8, asr #17
   10748:	andeq	r0, r0, r0, lsr r0
   1074c:	ldr	r0, [pc, #24]	; 1076c <_start@@Base+0x80>
   10750:	ldr	r3, [pc, #24]	; 10770 <_start@@Base+0x84>
   10754:	cmp	r3, r0
   10758:	bxeq	lr
   1075c:	ldr	r3, [pc, #16]	; 10774 <_start@@Base+0x88>
   10760:	cmp	r3, #0
   10764:	bxeq	lr
   10768:	bx	r3
   1076c:	andeq	r1, r2, ip, lsr r0
   10770:	andeq	r1, r2, ip, lsr r0
   10774:	andeq	r0, r0, r0
   10778:	ldr	r0, [pc, #36]	; 107a4 <_start@@Base+0xb8>
   1077c:	ldr	r1, [pc, #36]	; 107a8 <_start@@Base+0xbc>
   10780:	sub	r1, r1, r0
   10784:	asr	r1, r1, #2
   10788:	add	r1, r1, r1, lsr #31
   1078c:	asrs	r1, r1, #1
   10790:	bxeq	lr
   10794:	ldr	r3, [pc, #16]	; 107ac <_start@@Base+0xc0>
   10798:	cmp	r3, #0
   1079c:	bxeq	lr
   107a0:	bx	r3
   107a4:	andeq	r1, r2, ip, lsr r0
   107a8:	andeq	r1, r2, ip, lsr r0
   107ac:	andeq	r0, r0, r0
   107b0:	push	{r4, lr}
   107b4:	ldr	r4, [pc, #24]	; 107d4 <_start@@Base+0xe8>
   107b8:	ldrb	r3, [r4]
   107bc:	cmp	r3, #0
   107c0:	popne	{r4, pc}
   107c4:	bl	1074c <_start@@Base+0x60>
   107c8:	mov	r3, #1
   107cc:	strb	r3, [r4]
   107d0:	pop	{r4, pc}
   107d4:	andeq	r1, r2, ip, lsr r0
   107d8:	b	10778 <_start@@Base+0x8c>

000107dc <main@@Base>:
   107dc:	str	fp, [sp, #-8]!
   107e0:	str	lr, [sp, #4]
   107e4:	add	fp, sp, #4
   107e8:	sub	sp, sp, #104	; 0x68
   107ec:	mov	r3, #0
   107f0:	str	r3, [fp, #-48]	; 0xffffffd0
   107f4:	sub	r1, fp, #44	; 0x2c
   107f8:	mov	r2, #0
   107fc:	mov	r3, #0
   10800:	strd	r2, [r1]
   10804:	strd	r2, [r1, #8]
   10808:	mov	r0, r2
   1080c:	str	r0, [r1, #16]
   10810:	strh	r2, [r1, #20]
   10814:	mov	r3, #0
   10818:	str	r3, [fp, #-8]
   1081c:	sub	r3, fp, #20
   10820:	mov	r1, r3
   10824:	ldr	r3, [pc, #232]	; 10914 <main@@Base+0x138>
   10828:	add	r3, pc, r3
   1082c:	mov	r0, r3
   10830:	bl	106d4 <__isoc99_scanf@plt>
   10834:	ldrb	r3, [fp, #-20]	; 0xffffffec
   10838:	cmp	r3, #46	; 0x2e
   1083c:	beq	108f8 <main@@Base+0x11c>
   10840:	sub	r3, fp, #108	; 0x6c
   10844:	mov	r1, r3
   10848:	ldr	r3, [pc, #200]	; 10918 <main@@Base+0x13c>
   1084c:	add	r3, pc, r3
   10850:	mov	r0, r3
   10854:	bl	106d4 <__isoc99_scanf@plt>
   10858:	mov	r3, #0
   1085c:	str	r3, [fp, #-8]
   10860:	ldr	r2, [fp, #-108]	; 0xffffff94
   10864:	sub	r1, fp, #48	; 0x30
   10868:	sub	r3, fp, #20
   1086c:	mov	r0, r3
   10870:	bl	10a8c <StringSet@@Base>
   10874:	sub	r2, fp, #76	; 0x4c
   10878:	sub	r3, fp, #48	; 0x30
   1087c:	mov	r1, r2
   10880:	mov	r0, r3
   10884:	bl	1091c <R_ShiftString@@Base>
   10888:	b	108e8 <main@@Base+0x10c>
   1088c:	sub	r2, fp, #76	; 0x4c
   10890:	sub	r3, fp, #48	; 0x30
   10894:	mov	r1, r2
   10898:	mov	r0, r3
   1089c:	bl	10680 <strcmp@plt>
   108a0:	mov	r3, r0
   108a4:	cmp	r3, #0
   108a8:	bne	108b4 <main@@Base+0xd8>
   108ac:	mov	r3, #1
   108b0:	str	r3, [fp, #-8]
   108b4:	sub	r3, fp, #48	; 0x30
   108b8:	mov	r0, r3
   108bc:	bl	106a4 <puts@plt>
   108c0:	sub	r2, fp, #48	; 0x30
   108c4:	sub	r3, fp, #104	; 0x68
   108c8:	mov	r1, r2
   108cc:	mov	r0, r3
   108d0:	bl	10698 <strcpy@plt>
   108d4:	sub	r2, fp, #48	; 0x30
   108d8:	sub	r3, fp, #104	; 0x68
   108dc:	mov	r1, r2
   108e0:	mov	r0, r3
   108e4:	bl	109d4 <L_ShiftString@@Base>
   108e8:	ldr	r3, [fp, #-8]
   108ec:	cmp	r3, #0
   108f0:	beq	1088c <main@@Base+0xb0>
   108f4:	b	1081c <main@@Base+0x40>
   108f8:	nop	{0}
   108fc:	mov	r3, #0
   10900:	mov	r0, r3
   10904:	sub	sp, fp, #4
   10908:	ldr	fp, [sp]
   1090c:	add	sp, sp, #4
   10910:	pop	{pc}		; (ldr pc, [sp], #4)
   10914:	andeq	r0, r0, ip, lsr r3
   10918:	andeq	r0, r0, ip, lsl r3

0001091c <R_ShiftString@@Base>:
   1091c:	str	fp, [sp, #-8]!
   10920:	str	lr, [sp, #4]
   10924:	add	fp, sp, #4
   10928:	sub	sp, sp, #16
   1092c:	str	r0, [fp, #-16]
   10930:	str	r1, [fp, #-20]	; 0xffffffec
   10934:	ldr	r0, [fp, #-16]
   10938:	bl	106c8 <strlen@plt>
   1093c:	mov	r3, r0
   10940:	sub	r3, r3, #1
   10944:	ldr	r2, [fp, #-16]
   10948:	add	r3, r2, r3
   1094c:	ldrb	r2, [r3]
   10950:	ldr	r3, [fp, #-20]	; 0xffffffec
   10954:	strb	r2, [r3]
   10958:	mov	r3, #1
   1095c:	str	r3, [fp, #-8]
   10960:	b	10994 <R_ShiftString@@Base+0x78>
   10964:	ldr	r3, [fp, #-8]
   10968:	sub	r3, r3, #1
   1096c:	ldr	r2, [fp, #-16]
   10970:	add	r2, r2, r3
   10974:	ldr	r3, [fp, #-8]
   10978:	ldr	r1, [fp, #-20]	; 0xffffffec
   1097c:	add	r3, r1, r3
   10980:	ldrb	r2, [r2]
   10984:	strb	r2, [r3]
   10988:	ldr	r3, [fp, #-8]
   1098c:	add	r3, r3, #1
   10990:	str	r3, [fp, #-8]
   10994:	ldr	r0, [fp, #-16]
   10998:	bl	106c8 <strlen@plt>
   1099c:	mov	r2, r0
   109a0:	ldr	r3, [fp, #-8]
   109a4:	cmp	r2, r3
   109a8:	bhi	10964 <R_ShiftString@@Base+0x48>
   109ac:	ldr	r3, [fp, #-8]
   109b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   109b4:	add	r3, r2, r3
   109b8:	mov	r2, #0
   109bc:	strb	r2, [r3]
   109c0:	nop	{0}
   109c4:	sub	sp, fp, #4
   109c8:	ldr	fp, [sp]
   109cc:	add	sp, sp, #4
   109d0:	pop	{pc}		; (ldr pc, [sp], #4)

000109d4 <L_ShiftString@@Base>:
   109d4:	str	fp, [sp, #-8]!
   109d8:	str	lr, [sp, #4]
   109dc:	add	fp, sp, #4
   109e0:	sub	sp, sp, #16
   109e4:	str	r0, [fp, #-16]
   109e8:	str	r1, [fp, #-20]	; 0xffffffec
   109ec:	ldr	r0, [fp, #-16]
   109f0:	bl	106c8 <strlen@plt>
   109f4:	mov	r3, r0
   109f8:	sub	r3, r3, #1
   109fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   10a00:	add	r3, r2, r3
   10a04:	ldr	r2, [fp, #-16]
   10a08:	ldrb	r2, [r2]
   10a0c:	strb	r2, [r3]
   10a10:	mov	r3, #1
   10a14:	str	r3, [fp, #-8]
   10a18:	b	10a4c <L_ShiftString@@Base+0x78>
   10a1c:	ldr	r3, [fp, #-8]
   10a20:	ldr	r2, [fp, #-16]
   10a24:	add	r2, r2, r3
   10a28:	ldr	r3, [fp, #-8]
   10a2c:	sub	r3, r3, #1
   10a30:	ldr	r1, [fp, #-20]	; 0xffffffec
   10a34:	add	r3, r1, r3
   10a38:	ldrb	r2, [r2]
   10a3c:	strb	r2, [r3]
   10a40:	ldr	r3, [fp, #-8]
   10a44:	add	r3, r3, #1
   10a48:	str	r3, [fp, #-8]
   10a4c:	ldr	r0, [fp, #-16]
   10a50:	bl	106c8 <strlen@plt>
   10a54:	mov	r2, r0
   10a58:	ldr	r3, [fp, #-8]
   10a5c:	cmp	r2, r3
   10a60:	bhi	10a1c <L_ShiftString@@Base+0x48>
   10a64:	ldr	r3, [fp, #-8]
   10a68:	ldr	r2, [fp, #-20]	; 0xffffffec
   10a6c:	add	r3, r2, r3
   10a70:	mov	r2, #0
   10a74:	strb	r2, [r3]
   10a78:	nop	{0}
   10a7c:	sub	sp, fp, #4
   10a80:	ldr	fp, [sp]
   10a84:	add	sp, sp, #4
   10a88:	pop	{pc}		; (ldr pc, [sp], #4)

00010a8c <StringSet@@Base>:
   10a8c:	str	fp, [sp, #-8]!
   10a90:	str	lr, [sp, #4]
   10a94:	add	fp, sp, #4
   10a98:	sub	sp, sp, #24
   10a9c:	str	r0, [fp, #-16]
   10aa0:	str	r1, [fp, #-20]	; 0xffffffec
   10aa4:	str	r2, [fp, #-24]	; 0xffffffe8
   10aa8:	ldr	r3, [fp, #-20]	; 0xffffffec
   10aac:	mov	r2, #0
   10ab0:	strb	r2, [r3]
   10ab4:	mov	r3, #0
   10ab8:	str	r3, [fp, #-8]
   10abc:	b	10ad8 <StringSet@@Base+0x4c>
   10ac0:	ldr	r1, [fp, #-16]
   10ac4:	ldr	r0, [fp, #-20]	; 0xffffffec
   10ac8:	bl	1068c <strcat@plt>
   10acc:	ldr	r3, [fp, #-8]
   10ad0:	add	r3, r3, #1
   10ad4:	str	r3, [fp, #-8]
   10ad8:	ldr	r2, [fp, #-8]
   10adc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10ae0:	cmp	r2, r3
   10ae4:	blt	10ac0 <StringSet@@Base+0x34>
   10ae8:	nop	{0}
   10aec:	sub	sp, fp, #4
   10af0:	ldr	fp, [sp]
   10af4:	add	sp, sp, #4
   10af8:	pop	{pc}		; (ldr pc, [sp], #4)

00010afc <__libc_csu_init@@Base>:
   10afc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b00:	mov	r7, r0
   10b04:	ldr	r6, [pc, #72]	; 10b54 <__libc_csu_init@@Base+0x58>
   10b08:	ldr	r5, [pc, #72]	; 10b58 <__libc_csu_init@@Base+0x5c>
   10b0c:	add	r6, pc, r6
   10b10:	add	r5, pc, r5
   10b14:	sub	r6, r6, r5
   10b18:	mov	r8, r1
   10b1c:	mov	r9, r2
   10b20:	bl	10660 <strcmp@plt-0x20>
   10b24:	asrs	r6, r6, #2
   10b28:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b2c:	mov	r4, #0
   10b30:	add	r4, r4, #1
   10b34:	ldr	r3, [r5], #4
   10b38:	mov	r2, r9
   10b3c:	mov	r1, r8
   10b40:	mov	r0, r7
   10b44:	blx	r3
   10b48:	cmp	r6, r4
   10b4c:	bne	10b30 <__libc_csu_init@@Base+0x34>
   10b50:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b54:	andeq	r0, r1, r0, lsl #8
   10b58:	strdeq	r0, [r1], -r8

00010b5c <__libc_csu_fini@@Base>:
   10b5c:	bx	lr

Disassembly of section .fini:

00010b60 <.fini>:
   10b60:	push	{r3, lr}
   10b64:	pop	{r3, pc}
