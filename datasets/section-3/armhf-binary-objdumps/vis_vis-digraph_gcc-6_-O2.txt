
../repos/vis/vis-digraph:     file format elf32-littlearm


Disassembly of section .init:

000105bc <.init>:
   105bc:	push	{r3, lr}
   105c0:	bl	10a64 <tcgetattr@plt+0x3bc>
   105c4:	pop	{r3, pc}

Disassembly of section .plt:

000105c8 <calloc@plt-0x14>:
   105c8:	push	{lr}		; (str lr, [sp, #-4]!)
   105cc:	ldr	lr, [pc, #4]	; 105d8 <calloc@plt-0x4>
   105d0:	add	lr, pc, lr
   105d4:	ldr	pc, [lr, #8]!
   105d8:	andeq	r5, r2, r8, asr #19

000105dc <calloc@plt>:
   105dc:	add	ip, pc, #0, 12
   105e0:	add	ip, ip, #151552	; 0x25000
   105e4:	ldr	pc, [ip, #2504]!	; 0x9c8

000105e8 <strcmp@plt>:
   105e8:	add	ip, pc, #0, 12
   105ec:	add	ip, ip, #151552	; 0x25000
   105f0:	ldr	pc, [ip, #2496]!	; 0x9c0

000105f4 <read@plt>:
   105f4:	add	ip, pc, #0, 12
   105f8:	add	ip, ip, #151552	; 0x25000
   105fc:	ldr	pc, [ip, #2488]!	; 0x9b8

00010600 <__stack_chk_fail@plt>:
   10600:	add	ip, pc, #0, 12
   10604:	add	ip, ip, #151552	; 0x25000
   10608:	ldr	pc, [ip, #2480]!	; 0x9b0

0001060c <perror@plt>:
   1060c:	add	ip, pc, #0, 12
   10610:	add	ip, ip, #151552	; 0x25000
   10614:	ldr	pc, [ip, #2472]!	; 0x9a8

00010618 <putwchar@plt>:
   10618:	add	ip, pc, #0, 12
   1061c:	add	ip, ip, #151552	; 0x25000
   10620:	ldr	pc, [ip, #2464]!	; 0x9a0

00010624 <fwrite@plt>:
   10624:	add	ip, pc, #0, 12
   10628:	add	ip, ip, #151552	; 0x25000
   1062c:	ldr	pc, [ip, #2456]!	; 0x998

00010630 <tcsetattr@plt>:
   10630:	add	ip, pc, #0, 12
   10634:	add	ip, ip, #151552	; 0x25000
   10638:	ldr	pc, [ip, #2448]!	; 0x990

0001063c <__libc_start_main@plt>:
   1063c:	add	ip, pc, #0, 12
   10640:	add	ip, ip, #151552	; 0x25000
   10644:	ldr	pc, [ip, #2440]!	; 0x988

00010648 <__gmon_start__@plt>:
   10648:	add	ip, pc, #0, 12
   1064c:	add	ip, ip, #151552	; 0x25000
   10650:	ldr	pc, [ip, #2432]!	; 0x980

00010654 <strlen@plt>:
   10654:	add	ip, pc, #0, 12
   10658:	add	ip, ip, #151552	; 0x25000
   1065c:	ldr	pc, [ip, #2424]!	; 0x978

00010660 <__errno_location@plt>:
   10660:	add	ip, pc, #0, 12
   10664:	add	ip, ip, #151552	; 0x25000
   10668:	ldr	pc, [ip, #2416]!	; 0x970

0001066c <__fprintf_chk@plt>:
   1066c:	add	ip, pc, #0, 12
   10670:	add	ip, ip, #151552	; 0x25000
   10674:	ldr	pc, [ip, #2408]!	; 0x968

00010678 <setlocale@plt>:
   10678:	add	ip, pc, #0, 12
   1067c:	add	ip, ip, #151552	; 0x25000
   10680:	ldr	pc, [ip, #2400]!	; 0x960

00010684 <__wprintf_chk@plt>:
   10684:	add	ip, pc, #0, 12
   10688:	add	ip, ip, #151552	; 0x25000
   1068c:	ldr	pc, [ip, #2392]!	; 0x958

00010690 <strncmp@plt>:
   10690:	add	ip, pc, #0, 12
   10694:	add	ip, ip, #151552	; 0x25000
   10698:	ldr	pc, [ip, #2384]!	; 0x950

0001069c <abort@plt>:
   1069c:	add	ip, pc, #0, 12
   106a0:	add	ip, ip, #151552	; 0x25000
   106a4:	ldr	pc, [ip, #2376]!	; 0x948

000106a8 <tcgetattr@plt>:
   106a8:	add	ip, pc, #0, 12
   106ac:	add	ip, ip, #151552	; 0x25000
   106b0:	ldr	pc, [ip, #2368]!	; 0x940

Disassembly of section .text:

000106b4 <.text>:
   106b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   106b8:	sub	sp, sp, #36	; 0x24
   106bc:	ldr	r6, [pc, #804]	; 109e8 <tcgetattr@plt+0x340>
   106c0:	ldr	r3, [pc, #804]	; 109ec <tcgetattr@plt+0x344>
   106c4:	add	r6, pc, r6
   106c8:	mov	r4, r1
   106cc:	ldr	r3, [r6, r3]
   106d0:	ldr	r1, [pc, #792]	; 109f0 <tcgetattr@plt+0x348>
   106d4:	str	r3, [sp, #8]
   106d8:	ldr	r3, [r3]
   106dc:	mov	r7, r0
   106e0:	add	r1, pc, r1
   106e4:	mov	r0, #6
   106e8:	str	r3, [sp, #28]
   106ec:	bl	10678 <setlocale@plt>
   106f0:	cmp	r7, #1
   106f4:	beq	10924 <tcgetattr@plt+0x27c>
   106f8:	ldr	r1, [pc, #756]	; 109f4 <tcgetattr@plt+0x34c>
   106fc:	ldr	r0, [r4, #4]
   10700:	add	r1, pc, r1
   10704:	bl	105e8 <strcmp@plt>
   10708:	subs	r5, r0, #0
   1070c:	bne	10844 <tcgetattr@plt+0x19c>
   10710:	ldr	ip, [pc, #736]	; 109f8 <tcgetattr@plt+0x350>
   10714:	mov	r7, #1
   10718:	add	ip, pc, ip
   1071c:	mov	r4, ip
   10720:	mov	r1, ip
   10724:	bl	106a8 <tcgetattr@plt>
   10728:	mov	ip, r4
   1072c:	ldr	lr, [pc, #712]	; 109fc <tcgetattr@plt+0x354>
   10730:	ldm	ip!, {r0, r1, r2, r3}
   10734:	add	lr, pc, lr
   10738:	mov	r8, lr
   1073c:	mov	sl, r7
   10740:	stmia	r8!, {r0, r1, r2, r3}
   10744:	mov	r4, r5
   10748:	ldm	ip!, {r0, r1, r2, r3}
   1074c:	mov	r9, r5
   10750:	stmia	r8!, {r0, r1, r2, r3}
   10754:	ldm	ip!, {r0, r1, r2, r3}
   10758:	stmia	r8!, {r0, r1, r2, r3}
   1075c:	ldm	ip, {r0, r1, r2}
   10760:	ldr	r3, [lr]
   10764:	bic	r3, r3, #1504	; 0x5e0
   10768:	bic	r3, r3, #10
   1076c:	stm	r8, {r0, r1, r2}
   10770:	add	r8, sp, #20
   10774:	str	r3, [lr]
   10778:	ldr	r2, [lr, #12]
   1077c:	ldr	r3, [lr, #8]
   10780:	bic	r2, r2, #32768	; 0x8000
   10784:	bic	r2, r2, #75	; 0x4b
   10788:	str	r2, [lr, #12]
   1078c:	bic	r3, r3, #304	; 0x130
   10790:	add	r2, sp, #16
   10794:	orr	r3, r3, #48	; 0x30
   10798:	str	r2, [sp, #12]
   1079c:	mov	r1, r5
   107a0:	mov	r2, lr
   107a4:	mov	r0, r5
   107a8:	str	r3, [lr, #8]
   107ac:	strb	r7, [lr, #23]
   107b0:	bl	10630 <tcsetattr@plt>
   107b4:	str	r5, [sp, #20]
   107b8:	str	r5, [sp, #24]
   107bc:	add	r7, r8, r4
   107c0:	mov	r2, sl
   107c4:	mov	r1, r7
   107c8:	mov	r0, r9
   107cc:	bl	105f4 <read@plt>
   107d0:	cmn	r0, #1
   107d4:	mov	fp, r0
   107d8:	bne	108d0 <tcgetattr@plt+0x228>
   107dc:	bl	10660 <__errno_location@plt>
   107e0:	ldr	r3, [r0]
   107e4:	cmp	r3, #4
   107e8:	beq	107c0 <tcgetattr@plt+0x118>
   107ec:	ldr	r2, [pc, #524]	; 10a00 <tcgetattr@plt+0x358>
   107f0:	mov	r1, #0
   107f4:	mov	r0, r1
   107f8:	add	r2, pc, r2
   107fc:	bl	10630 <tcsetattr@plt>
   10800:	ldr	r3, [pc, #508]	; 10a04 <tcgetattr@plt+0x35c>
   10804:	ldr	r0, [pc, #508]	; 10a08 <tcgetattr@plt+0x360>
   10808:	mov	r2, #9
   1080c:	ldr	r3, [r6, r3]
   10810:	mov	r1, #1
   10814:	add	r0, pc, r0
   10818:	ldr	r3, [r3]
   1081c:	mov	r5, #3
   10820:	bl	10624 <fwrite@plt>
   10824:	ldr	r3, [sp, #8]
   10828:	ldr	r2, [sp, #28]
   1082c:	mov	r0, r5
   10830:	ldr	r3, [r3]
   10834:	cmp	r2, r3
   10838:	bne	109e4 <tcgetattr@plt+0x33c>
   1083c:	add	sp, sp, #36	; 0x24
   10840:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10844:	sub	r9, r7, #1
   10848:	mov	r0, r9
   1084c:	mov	r1, #4
   10850:	bl	105dc <calloc@plt>
   10854:	subs	r8, r0, #0
   10858:	beq	109d8 <tcgetattr@plt+0x330>
   1085c:	cmp	r7, #1
   10860:	addgt	r4, r4, #4
   10864:	movgt	r5, r8
   10868:	movgt	sl, #1
   1086c:	bgt	1088c <tcgetattr@plt+0x1e4>
   10870:	b	10964 <tcgetattr@plt+0x2bc>
   10874:	cmn	r0, #1
   10878:	beq	1098c <tcgetattr@plt+0x2e4>
   1087c:	add	sl, sl, #1
   10880:	cmp	r7, sl
   10884:	add	r5, r5, #4
   10888:	beq	10964 <tcgetattr@plt+0x2bc>
   1088c:	ldr	r0, [r4]
   10890:	mov	r1, r5
   10894:	bl	10b50 <tcgetattr@plt+0x4a8>
   10898:	mov	fp, r4
   1089c:	add	r4, r4, #4
   108a0:	cmp	r0, #0
   108a4:	bne	10874 <tcgetattr@plt+0x1cc>
   108a8:	ldr	r2, [pc, #348]	; 10a0c <tcgetattr@plt+0x364>
   108ac:	ldr	r1, [pc, #336]	; 10a04 <tcgetattr@plt+0x35c>
   108b0:	ldr	r3, [fp]
   108b4:	add	r2, pc, r2
   108b8:	ldr	r0, [r6, r1]
   108bc:	mov	r1, #1
   108c0:	mov	r5, r1
   108c4:	ldr	r0, [r0]
   108c8:	bl	1066c <__fprintf_chk@plt>
   108cc:	b	10824 <tcgetattr@plt+0x17c>
   108d0:	ldr	r1, [sp, #12]
   108d4:	mov	r0, r8
   108d8:	bl	10b50 <tcgetattr@plt+0x4a8>
   108dc:	cmp	r0, #0
   108e0:	beq	10994 <tcgetattr@plt+0x2ec>
   108e4:	cmp	fp, #0
   108e8:	cmneq	r0, #1
   108ec:	moveq	r1, #1
   108f0:	movne	r1, #0
   108f4:	beq	10994 <tcgetattr@plt+0x2ec>
   108f8:	cmp	r0, #1
   108fc:	beq	109bc <tcgetattr@plt+0x314>
   10900:	add	r4, r4, #1
   10904:	cmp	r4, #7
   10908:	bne	107bc <tcgetattr@plt+0x114>
   1090c:	ldr	r2, [pc, #252]	; 10a10 <tcgetattr@plt+0x368>
   10910:	mov	r0, r1
   10914:	add	r2, pc, r2
   10918:	bl	10630 <tcsetattr@plt>
   1091c:	mov	r5, #1
   10920:	b	10824 <tcgetattr@plt+0x17c>
   10924:	ldr	r4, [pc, #232]	; 10a14 <tcgetattr@plt+0x36c>
   10928:	ldr	r5, [pc, #232]	; 10a18 <tcgetattr@plt+0x370>
   1092c:	add	r4, pc, r4
   10930:	add	r5, pc, r5
   10934:	ldr	r2, [r4, #12]
   10938:	ldr	r3, [r4, #8]
   1093c:	mov	r1, r5
   10940:	str	r2, [sp]
   10944:	mov	r0, r7
   10948:	mov	r2, r4
   1094c:	bl	10684 <__wprintf_chk@plt>
   10950:	ldrb	r3, [r4, #16]!
   10954:	cmp	r3, #0
   10958:	bne	10934 <tcgetattr@plt+0x28c>
   1095c:	mov	r5, #0
   10960:	b	10824 <tcgetattr@plt+0x17c>
   10964:	cmp	r9, #0
   10968:	subgt	r8, r8, #4
   1096c:	movgt	r4, #0
   10970:	ble	1095c <tcgetattr@plt+0x2b4>
   10974:	add	r4, r4, #1
   10978:	ldr	r0, [r8, #4]!
   1097c:	bl	10618 <putwchar@plt>
   10980:	cmp	r4, r9
   10984:	bne	10974 <tcgetattr@plt+0x2cc>
   10988:	b	1095c <tcgetattr@plt+0x2b4>
   1098c:	mov	r5, #2
   10990:	b	10824 <tcgetattr@plt+0x17c>
   10994:	ldr	r2, [pc, #128]	; 10a1c <tcgetattr@plt+0x374>
   10998:	mov	r1, #0
   1099c:	mov	r0, r1
   109a0:	add	r2, pc, r2
   109a4:	bl	10630 <tcsetattr@plt>
   109a8:	ldr	r2, [pc, #112]	; 10a20 <tcgetattr@plt+0x378>
   109ac:	ldr	r1, [pc, #80]	; 10a04 <tcgetattr@plt+0x35c>
   109b0:	mov	r3, r8
   109b4:	add	r2, pc, r2
   109b8:	b	108b8 <tcgetattr@plt+0x210>
   109bc:	ldr	r2, [pc, #96]	; 10a24 <tcgetattr@plt+0x37c>
   109c0:	mov	r0, r1
   109c4:	add	r2, pc, r2
   109c8:	bl	10630 <tcsetattr@plt>
   109cc:	ldr	r0, [sp, #16]
   109d0:	bl	10618 <putwchar@plt>
   109d4:	b	10824 <tcgetattr@plt+0x17c>
   109d8:	bl	1060c <perror@plt>
   109dc:	mov	r5, #1
   109e0:	b	10824 <tcgetattr@plt+0x17c>
   109e4:	bl	10600 <__stack_chk_fail@plt>
   109e8:	ldrdeq	r5, [r2], -r4
   109ec:	andeq	r0, r0, r4, asr r0
   109f0:	andeq	ip, r0, r4, lsr pc
   109f4:	andeq	r0, r0, r4, asr r5
   109f8:	andeq	r5, r2, r0, lsr #18
   109fc:	andeq	r5, r2, r8, asr #17
   10a00:	andeq	r5, r2, r0, asr #16
   10a04:	andeq	r0, r0, r8, asr r0
   10a08:	andeq	r0, r0, ip, asr r4
   10a0c:	andeq	r0, r0, r4, lsr #7
   10a10:	andeq	r5, r2, r4, lsr #14
   10a14:	strdeq	sp, [r1], -ip
   10a18:	andeq	r0, r0, ip, asr #6
   10a1c:	muleq	r2, r8, r6
   10a20:	andeq	r0, r0, r4, lsr #5
   10a24:	andeq	r5, r2, r4, ror r6
   10a28:	mov	fp, #0
   10a2c:	mov	lr, #0
   10a30:	pop	{r1}		; (ldr r1, [sp], #4)
   10a34:	mov	r2, sp
   10a38:	push	{r2}		; (str r2, [sp, #-4]!)
   10a3c:	push	{r0}		; (str r0, [sp, #-4]!)
   10a40:	ldr	ip, [pc, #16]	; 10a58 <tcgetattr@plt+0x3b0>
   10a44:	push	{ip}		; (str ip, [sp, #-4]!)
   10a48:	ldr	r0, [pc, #12]	; 10a5c <tcgetattr@plt+0x3b4>
   10a4c:	ldr	r3, [pc, #12]	; 10a60 <tcgetattr@plt+0x3b8>
   10a50:	bl	1063c <__libc_start_main@plt>
   10a54:	bl	1069c <abort@plt>
   10a58:	andeq	r0, r1, r0, asr ip
   10a5c:			; <UNDEFINED> instruction: 0x000106b4
   10a60:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10a64:	ldr	r3, [pc, #20]	; 10a80 <tcgetattr@plt+0x3d8>
   10a68:	ldr	r2, [pc, #20]	; 10a84 <tcgetattr@plt+0x3dc>
   10a6c:	add	r3, pc, r3
   10a70:	ldr	r2, [r3, r2]
   10a74:	cmp	r2, #0
   10a78:	bxeq	lr
   10a7c:	b	10648 <__gmon_start__@plt>
   10a80:	andeq	r5, r2, ip, lsr #10
   10a84:	andeq	r0, r0, ip, asr r0
   10a88:	ldr	r3, [pc, #28]	; 10aac <tcgetattr@plt+0x404>
   10a8c:	ldr	r0, [pc, #28]	; 10ab0 <tcgetattr@plt+0x408>
   10a90:	sub	r3, r3, r0
   10a94:	cmp	r3, #6
   10a98:	bxls	lr
   10a9c:	ldr	r3, [pc, #16]	; 10ab4 <tcgetattr@plt+0x40c>
   10aa0:	cmp	r3, #0
   10aa4:	bxeq	lr
   10aa8:	bx	r3
   10aac:	andeq	r6, r3, r3
   10ab0:	andeq	r6, r3, r0
   10ab4:	andeq	r0, r0, r0
   10ab8:	ldr	r1, [pc, #36]	; 10ae4 <tcgetattr@plt+0x43c>
   10abc:	ldr	r0, [pc, #36]	; 10ae8 <tcgetattr@plt+0x440>
   10ac0:	sub	r1, r1, r0
   10ac4:	asr	r1, r1, #2
   10ac8:	add	r1, r1, r1, lsr #31
   10acc:	asrs	r1, r1, #1
   10ad0:	bxeq	lr
   10ad4:	ldr	r3, [pc, #16]	; 10aec <tcgetattr@plt+0x444>
   10ad8:	cmp	r3, #0
   10adc:	bxeq	lr
   10ae0:	bx	r3
   10ae4:	andeq	r6, r3, r0
   10ae8:	andeq	r6, r3, r0
   10aec:	andeq	r0, r0, r0
   10af0:	push	{r4, lr}
   10af4:	ldr	r4, [pc, #24]	; 10b14 <tcgetattr@plt+0x46c>
   10af8:	ldrb	r3, [r4]
   10afc:	cmp	r3, #0
   10b00:	popne	{r4, pc}
   10b04:	bl	10a88 <tcgetattr@plt+0x3e0>
   10b08:	mov	r3, #1
   10b0c:	strb	r3, [r4]
   10b10:	pop	{r4, pc}
   10b14:	andeq	r6, r3, r0
   10b18:	ldr	r0, [pc, #40]	; 10b48 <tcgetattr@plt+0x4a0>
   10b1c:	ldr	r3, [r0]
   10b20:	cmp	r3, #0
   10b24:	bne	10b2c <tcgetattr@plt+0x484>
   10b28:	b	10ab8 <tcgetattr@plt+0x410>
   10b2c:	ldr	r3, [pc, #24]	; 10b4c <tcgetattr@plt+0x4a4>
   10b30:	cmp	r3, #0
   10b34:	beq	10b28 <tcgetattr@plt+0x480>
   10b38:	push	{r4, lr}
   10b3c:	blx	r3
   10b40:	pop	{r4, lr}
   10b44:	b	10ab8 <tcgetattr@plt+0x410>
   10b48:	andeq	lr, r2, ip, lsr #16
   10b4c:	andeq	r0, r0, r0
   10b50:	ldr	r3, [pc, #140]	; 10be4 <tcgetattr@plt+0x53c>
   10b54:	ldr	r2, [pc, #140]	; 10be8 <tcgetattr@plt+0x540>
   10b58:	add	r3, pc, r3
   10b5c:	push	{r4, r5, r6, r7, r8, lr}
   10b60:	sub	sp, sp, #8
   10b64:	ldr	r8, [r3, r2]
   10b68:	mov	r7, r1
   10b6c:	mov	r6, r0
   10b70:	ldr	r3, [r8]
   10b74:	ldr	r4, [pc, #112]	; 10bec <tcgetattr@plt+0x544>
   10b78:	str	r3, [sp, #4]
   10b7c:	bl	10654 <strlen@plt>
   10b80:	add	r4, pc, r4
   10b84:	mov	r5, r0
   10b88:	b	10b98 <tcgetattr@plt+0x4f0>
   10b8c:	ldrb	r0, [r4, #16]!
   10b90:	cmp	r0, #0
   10b94:	beq	10bc8 <tcgetattr@plt+0x520>
   10b98:	mov	r2, r5
   10b9c:	mov	r1, r4
   10ba0:	mov	r0, r6
   10ba4:	bl	10690 <strncmp@plt>
   10ba8:	cmp	r0, #0
   10bac:	bne	10b8c <tcgetattr@plt+0x4e4>
   10bb0:	ldr	r3, [r4, #8]
   10bb4:	str	r3, [r7]
   10bb8:	ldrb	r3, [r4, r5]
   10bbc:	cmp	r3, #0
   10bc0:	moveq	r0, #1
   10bc4:	mvnne	r0, #0
   10bc8:	ldr	r2, [sp, #4]
   10bcc:	ldr	r3, [r8]
   10bd0:	cmp	r2, r3
   10bd4:	bne	10be0 <tcgetattr@plt+0x538>
   10bd8:	add	sp, sp, #8
   10bdc:	pop	{r4, r5, r6, r7, r8, pc}
   10be0:	bl	10600 <__stack_chk_fail@plt>
   10be4:	andeq	r5, r2, r0, asr #8
   10be8:	andeq	r0, r0, r4, asr r0
   10bec:	andeq	sp, r1, r8, lsr #25
   10bf0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10bf4:	mov	r7, r0
   10bf8:	ldr	r6, [pc, #72]	; 10c48 <tcgetattr@plt+0x5a0>
   10bfc:	ldr	r5, [pc, #72]	; 10c4c <tcgetattr@plt+0x5a4>
   10c00:	add	r6, pc, r6
   10c04:	add	r5, pc, r5
   10c08:	sub	r6, r6, r5
   10c0c:	mov	r8, r1
   10c10:	mov	r9, r2
   10c14:	bl	105bc <calloc@plt-0x20>
   10c18:	asrs	r6, r6, #2
   10c1c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c20:	mov	r4, #0
   10c24:	add	r4, r4, #1
   10c28:	ldr	r3, [r5], #4
   10c2c:	mov	r2, r9
   10c30:	mov	r1, r8
   10c34:	mov	r0, r7
   10c38:	blx	r3
   10c3c:	cmp	r6, r4
   10c40:	bne	10c24 <tcgetattr@plt+0x57c>
   10c44:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c48:	andeq	sp, r1, r0, lsr #24
   10c4c:	andeq	sp, r1, r8, lsl ip
   10c50:	bx	lr

Disassembly of section .fini:

00010c54 <.fini>:
   10c54:	push	{r3, lr}
   10c58:	pop	{r3, pc}
