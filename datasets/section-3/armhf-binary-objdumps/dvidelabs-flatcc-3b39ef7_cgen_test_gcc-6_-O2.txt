
../repos/dvidelabs-flatcc-3b39ef7/test/cgen_test/cgen_test:     file format elf32-littlearm


Disassembly of section .init:

00013e78 <.init>:
   13e78:	push	{r3, lr}
   13e7c:	bl	143c0 <_start@@Base+0x3c>
   13e80:	pop	{r3, pc}

Disassembly of section .plt:

00013e84 <calloc@plt-0x14>:
   13e84:	push	{lr}		; (str lr, [sp, #-4]!)
   13e88:	ldr	lr, [pc, #4]	; 13e94 <calloc@plt-0x4>
   13e8c:	add	lr, pc, lr
   13e90:	ldr	pc, [lr, #8]!
   13e94:	andeq	r6, r5, ip, ror #2

00013e98 <calloc@plt>:
   13e98:	add	ip, pc, #0, 12
   13e9c:	add	ip, ip, #352256	; 0x56000
   13ea0:	ldr	pc, [ip, #364]!	; 0x16c

00013ea4 <raise@plt>:
   13ea4:	add	ip, pc, #0, 12
   13ea8:	add	ip, ip, #352256	; 0x56000
   13eac:	ldr	pc, [ip, #356]!	; 0x164

00013eb0 <strcmp@plt>:
   13eb0:	add	ip, pc, #0, 12
   13eb4:	add	ip, ip, #352256	; 0x56000
   13eb8:	ldr	pc, [ip, #348]!	; 0x15c

00013ebc <fopen@plt>:
   13ebc:	add	ip, pc, #0, 12
   13ec0:	add	ip, ip, #352256	; 0x56000
   13ec4:	ldr	pc, [ip, #340]!	; 0x154

00013ec8 <free@plt>:
   13ec8:	add	ip, pc, #0, 12
   13ecc:	add	ip, ip, #352256	; 0x56000
   13ed0:	ldr	pc, [ip, #332]!	; 0x14c

00013ed4 <memcpy@plt>:
   13ed4:	add	ip, pc, #0, 12
   13ed8:	add	ip, ip, #352256	; 0x56000
   13edc:	ldr	pc, [ip, #324]!	; 0x144

00013ee0 <ftell@plt>:
   13ee0:	add	ip, pc, #0, 12
   13ee4:	add	ip, ip, #352256	; 0x56000
   13ee8:	ldr	pc, [ip, #316]!	; 0x13c

00013eec <memcmp@plt>:
   13eec:	add	ip, pc, #0, 12
   13ef0:	add	ip, ip, #352256	; 0x56000
   13ef4:	ldr	pc, [ip, #308]!	; 0x134

00013ef8 <rewind@plt>:
   13ef8:	add	ip, pc, #0, 12
   13efc:	add	ip, ip, #352256	; 0x56000
   13f00:	ldr	pc, [ip, #300]!	; 0x12c

00013f04 <realloc@plt>:
   13f04:	add	ip, pc, #0, 12
   13f08:	add	ip, ip, #352256	; 0x56000
   13f0c:	ldr	pc, [ip, #292]!	; 0x124

00013f10 <fwrite@plt>:
   13f10:	add	ip, pc, #0, 12
   13f14:	add	ip, ip, #352256	; 0x56000
   13f18:	ldr	pc, [ip, #284]!	; 0x11c

00013f1c <fread@plt>:
   13f1c:	add	ip, pc, #0, 12
   13f20:	add	ip, ip, #352256	; 0x56000
   13f24:	ldr	pc, [ip, #276]!	; 0x114

00013f28 <puts@plt>:
   13f28:	add	ip, pc, #0, 12
   13f2c:	add	ip, ip, #352256	; 0x56000
   13f30:	ldr	pc, [ip, #268]!	; 0x10c

00013f34 <malloc@plt>:
   13f34:	add	ip, pc, #0, 12
   13f38:	add	ip, ip, #352256	; 0x56000
   13f3c:	ldr	pc, [ip, #260]!	; 0x104

00013f40 <__libc_start_main@plt>:
   13f40:	add	ip, pc, #0, 12
   13f44:	add	ip, ip, #352256	; 0x56000
   13f48:	ldr	pc, [ip, #252]!	; 0xfc

00013f4c <__ctype_toupper_loc@plt>:
   13f4c:	add	ip, pc, #0, 12
   13f50:	add	ip, ip, #352256	; 0x56000
   13f54:	ldr	pc, [ip, #244]!	; 0xf4

00013f58 <__gmon_start__@plt>:
   13f58:	add	ip, pc, #0, 12
   13f5c:	add	ip, ip, #352256	; 0x56000
   13f60:	ldr	pc, [ip, #236]!	; 0xec

00013f64 <exit@plt>:
   13f64:	add	ip, pc, #0, 12
   13f68:	add	ip, ip, #352256	; 0x56000
   13f6c:	ldr	pc, [ip, #228]!	; 0xe4

00013f70 <strlen@plt>:
   13f70:	add	ip, pc, #0, 12
   13f74:	add	ip, ip, #352256	; 0x56000
   13f78:	ldr	pc, [ip, #220]!	; 0xdc

00013f7c <fprintf@plt>:
   13f7c:	add	ip, pc, #0, 12
   13f80:	add	ip, ip, #352256	; 0x56000
   13f84:	ldr	pc, [ip, #212]!	; 0xd4

00013f88 <posix_memalign@plt>:
   13f88:	add	ip, pc, #0, 12
   13f8c:	add	ip, ip, #352256	; 0x56000
   13f90:	ldr	pc, [ip, #204]!	; 0xcc

00013f94 <memset@plt>:
   13f94:	add	ip, pc, #0, 12
   13f98:	add	ip, ip, #352256	; 0x56000
   13f9c:	ldr	pc, [ip, #196]!	; 0xc4

00013fa0 <strncpy@plt>:
   13fa0:	add	ip, pc, #0, 12
   13fa4:	add	ip, ip, #352256	; 0x56000
   13fa8:	ldr	pc, [ip, #188]!	; 0xbc

00013fac <strtod@plt>:
   13fac:	add	ip, pc, #0, 12
   13fb0:	add	ip, ip, #352256	; 0x56000
   13fb4:	ldr	pc, [ip, #180]!	; 0xb4

00013fb8 <memchr@plt>:
   13fb8:	add	ip, pc, #0, 12
   13fbc:	add	ip, ip, #352256	; 0x56000
   13fc0:	ldr	pc, [ip, #172]!	; 0xac

00013fc4 <fclose@plt>:
   13fc4:	add	ip, pc, #0, 12
   13fc8:	add	ip, ip, #352256	; 0x56000
   13fcc:	ldr	pc, [ip, #164]!	; 0xa4

00013fd0 <vfprintf@plt>:
   13fd0:	add	ip, pc, #0, 12
   13fd4:	add	ip, ip, #352256	; 0x56000
   13fd8:	ldr	pc, [ip, #156]!	; 0x9c

00013fdc <fputc@plt>:
   13fdc:	add	ip, pc, #0, 12
   13fe0:	add	ip, ip, #352256	; 0x56000
   13fe4:	ldr	pc, [ip, #148]!	; 0x94

00013fe8 <sprintf@plt>:
   13fe8:	add	ip, pc, #0, 12
   13fec:	add	ip, ip, #352256	; 0x56000
   13ff0:	ldr	pc, [ip, #140]!	; 0x8c

00013ff4 <vsnprintf@plt>:
   13ff4:	add	ip, pc, #0, 12
   13ff8:	add	ip, ip, #352256	; 0x56000
   13ffc:	ldr	pc, [ip, #132]!	; 0x84

00014000 <qsort@plt>:
   14000:	add	ip, pc, #0, 12
   14004:	add	ip, ip, #352256	; 0x56000
   14008:	ldr	pc, [ip, #124]!	; 0x7c

0001400c <fseek@plt>:
   1400c:	add	ip, pc, #0, 12
   14010:	add	ip, ip, #352256	; 0x56000
   14014:	ldr	pc, [ip, #116]!	; 0x74

00014018 <strncmp@plt>:
   14018:	add	ip, pc, #0, 12
   1401c:	add	ip, ip, #352256	; 0x56000
   14020:	ldr	pc, [ip, #108]!	; 0x6c

00014024 <abort@plt>:
   14024:	add	ip, pc, #0, 12
   14028:	add	ip, ip, #352256	; 0x56000
   1402c:	ldr	pc, [ip, #100]!	; 0x64

00014030 <__assert_fail@plt>:
   14030:	add	ip, pc, #0, 12
   14034:	add	ip, ip, #352256	; 0x56000
   14038:	ldr	pc, [ip, #92]!	; 0x5c

Disassembly of section .text:

00014040 <main@@Base-0x1b4>:
   14040:	ldr	r3, [pc, #44]	; 14074 <__assert_fail@plt+0x44>
   14044:	ldr	r0, [pc, #44]	; 14078 <__assert_fail@plt+0x48>
   14048:	add	r3, pc, r3
   1404c:	push	{r4, lr}
   14050:	mov	r2, #34	; 0x22
   14054:	ldr	ip, [r3, r0]
   14058:	ldr	r0, [pc, #28]	; 1407c <__assert_fail@plt+0x4c>
   1405c:	mov	r1, #1
   14060:	add	r0, pc, r0
   14064:	ldr	r3, [ip]
   14068:	bl	13f10 <fwrite@plt>
   1406c:	mov	r0, #1
   14070:	bl	13f64 <exit@plt>
   14074:			; <UNDEFINED> instruction: 0x00055fb0
   14078:	muleq	r0, ip, r0
   1407c:	andeq	fp, r2, r4, lsl #6
   14080:	ldr	r3, [pc, #28]	; 140a4 <__assert_fail@plt+0x74>
   14084:	ldr	r1, [pc, #28]	; 140a8 <__assert_fail@plt+0x78>
   14088:	ldr	r0, [pc, #28]	; 140ac <__assert_fail@plt+0x7c>
   1408c:	push	{r4, lr}
   14090:	add	r3, pc, r3
   14094:	mov	r2, #195	; 0xc3
   14098:	add	r1, pc, r1
   1409c:	add	r0, pc, r0
   140a0:	bl	14030 <__assert_fail@plt>
   140a4:	andeq	r1, r4, r0, ror ip
   140a8:	andeq	r1, r4, ip, lsl #27
   140ac:	andeq	r1, r4, r0, lsl #28
   140b0:	ldr	r3, [pc, #44]	; 140e4 <__assert_fail@plt+0xb4>
   140b4:	ldr	r0, [pc, #44]	; 140e8 <__assert_fail@plt+0xb8>
   140b8:	add	r3, pc, r3
   140bc:	push	{r4, lr}
   140c0:	mov	r2, #34	; 0x22
   140c4:	ldr	ip, [r3, r0]
   140c8:	ldr	r0, [pc, #28]	; 140ec <__assert_fail@plt+0xbc>
   140cc:	mov	r1, #1
   140d0:	add	r0, pc, r0
   140d4:	ldr	r3, [ip]
   140d8:	bl	13f10 <fwrite@plt>
   140dc:	mov	r0, #1
   140e0:	bl	13f64 <exit@plt>
   140e4:	andeq	r5, r5, r0, asr #30
   140e8:	muleq	r0, ip, r0
   140ec:	muleq	r2, r4, r2
   140f0:	ldr	r3, [pc, #28]	; 14114 <__assert_fail@plt+0xe4>
   140f4:	ldr	r1, [pc, #28]	; 14118 <__assert_fail@plt+0xe8>
   140f8:	ldr	r0, [pc, #28]	; 1411c <__assert_fail@plt+0xec>
   140fc:	push	{r4, lr}
   14100:	add	r3, pc, r3
   14104:	mov	r2, #108	; 0x6c
   14108:	add	r1, pc, r1
   1410c:	add	r0, pc, r0
   14110:	bl	14030 <__assert_fail@plt>
   14114:	andeq	r3, r4, r0, ror r1
   14118:	andeq	r3, r4, ip, asr #5
   1411c:	andeq	r3, r4, r8, lsr #6
   14120:	ldr	r3, [pc, #28]	; 14144 <__assert_fail@plt+0x114>
   14124:	ldr	r1, [pc, #28]	; 14148 <__assert_fail@plt+0x118>
   14128:	ldr	r0, [pc, #28]	; 1414c <__assert_fail@plt+0x11c>
   1412c:	push	{r4, lr}
   14130:	add	r3, pc, r3
   14134:	mov	r2, #308	; 0x134
   14138:	add	r1, pc, r1
   1413c:	add	r0, pc, r0
   14140:	bl	14030 <__assert_fail@plt>
   14144:	andeq	r4, r4, r0, ror #26
   14148:	andeq	r5, r4, r8, lsr #9
   1414c:	andeq	r3, r3, r8, lsr #26
   14150:	ldr	r3, [pc, #32]	; 14178 <__assert_fail@plt+0x148>
   14154:	ldr	r1, [pc, #32]	; 1417c <__assert_fail@plt+0x14c>
   14158:	ldr	r0, [pc, #32]	; 14180 <__assert_fail@plt+0x150>
   1415c:	add	r3, pc, r3
   14160:	push	{r4, lr}
   14164:	add	r3, r3, #16
   14168:	ldr	r2, [pc, #20]	; 14184 <__assert_fail@plt+0x154>
   1416c:	add	r1, pc, r1
   14170:	add	r0, pc, r0
   14174:	bl	14030 <__assert_fail@plt>
   14178:	andeq	r4, r4, r4, lsr sp
   1417c:	andeq	r5, r4, r4, ror r4
   14180:	strdeq	r3, [r3], -r4
   14184:	andeq	r0, r0, r1, lsr #5
   14188:	ldr	r3, [pc, #32]	; 141b0 <__assert_fail@plt+0x180>
   1418c:	ldr	r1, [pc, #32]	; 141b4 <__assert_fail@plt+0x184>
   14190:	ldr	r0, [pc, #32]	; 141b8 <__assert_fail@plt+0x188>
   14194:	add	r3, pc, r3
   14198:	push	{r4, lr}
   1419c:	add	r3, r3, #28
   141a0:	ldr	r2, [pc, #20]	; 141bc <__assert_fail@plt+0x18c>
   141a4:	add	r1, pc, r1
   141a8:	add	r0, pc, r0
   141ac:	bl	14030 <__assert_fail@plt>
   141b0:	strdeq	r4, [r4], -ip
   141b4:	andeq	r5, r4, ip, lsr r4
   141b8:			; <UNDEFINED> instruction: 0x00033cbc
   141bc:	andeq	r0, r0, r7, lsl #5
   141c0:	ldr	r3, [pc, #32]	; 141e8 <__assert_fail@plt+0x1b8>
   141c4:	ldr	r1, [pc, #32]	; 141ec <__assert_fail@plt+0x1bc>
   141c8:	ldr	r0, [pc, #32]	; 141f0 <__assert_fail@plt+0x1c0>
   141cc:	add	r3, pc, r3
   141d0:	push	{r4, lr}
   141d4:	mov	r2, #892	; 0x37c
   141d8:	add	r3, r3, #40	; 0x28
   141dc:	add	r1, pc, r1
   141e0:	add	r0, pc, r0
   141e4:	bl	14030 <__assert_fail@plt>
   141e8:	andeq	r4, r4, r4, asr #25
   141ec:	andeq	r5, r4, r4, lsl #8
   141f0:	andeq	r5, r4, r0, ror #8

000141f4 <main@@Base>:
   141f4:	push	{r4, r5, r6, r7, r8, r9, lr}
   141f8:	sub	sp, sp, #3952	; 0xf70
   141fc:	sub	sp, sp, #12
   14200:	ldr	r1, [pc, #332]	; 14354 <main@@Base+0x160>
   14204:	add	r5, sp, #224	; 0xe0
   14208:	ldr	r2, [pc, #328]	; 14358 <main@@Base+0x164>
   1420c:	add	r1, pc, r1
   14210:	mov	r0, r5
   14214:	bl	13ed4 <memcpy@plt>
   14218:	mov	r0, sp
   1421c:	bl	144f8 <flatcc_init_options@@Base>
   14220:	ldr	r1, [pc, #308]	; 1435c <main@@Base+0x168>
   14224:	mov	r3, #0
   14228:	mov	r4, #1
   1422c:	mov	r0, sp
   14230:	mov	r2, r3
   14234:	add	r1, pc, r1
   14238:	str	r4, [sp, #144]	; 0x90
   1423c:	str	r4, [sp, #152]	; 0x98
   14240:	str	r4, [sp, #148]	; 0x94
   14244:	str	r4, [sp, #156]	; 0x9c
   14248:	str	r4, [sp, #108]	; 0x6c
   1424c:	bl	145bc <flatcc_create_context@@Base>
   14250:	ldr	r6, [pc, #264]	; 14360 <main@@Base+0x16c>
   14254:	add	r6, pc, r6
   14258:	subs	r7, r0, #0
   1425c:	beq	1432c <main@@Base+0x138>
   14260:	ldr	r2, [pc, #240]	; 14358 <main@@Base+0x164>
   14264:	mov	r1, r5
   14268:	bl	14628 <flatcc_parse_buffer@@Base>
   1426c:	ldr	r3, [pc, #240]	; 14364 <main@@Base+0x170>
   14270:	subs	r8, r0, #0
   14274:	bne	142ec <main@@Base+0xf8>
   14278:	ldr	r9, [r6, r3]
   1427c:	ldr	r0, [pc, #228]	; 14368 <main@@Base+0x174>
   14280:	mov	r2, #17
   14284:	mov	r1, r4
   14288:	ldr	r3, [r9]
   1428c:	add	r0, pc, r0
   14290:	bl	13f10 <fwrite@plt>
   14294:	ldr	r0, [pc, #208]	; 1436c <main@@Base+0x178>
   14298:	ldr	r3, [r9]
   1429c:	mov	r2, #31
   142a0:	mov	r1, r4
   142a4:	add	r0, pc, r0
   142a8:	bl	13f10 <fwrite@plt>
   142ac:	mov	r0, r7
   142b0:	bl	14700 <flatcc_generate_files@@Base>
   142b4:	cmp	r0, #0
   142b8:	beq	1430c <main@@Base+0x118>
   142bc:	ldr	r0, [pc, #172]	; 14370 <main@@Base+0x17c>
   142c0:	ldr	r3, [r9]
   142c4:	mov	r1, r4
   142c8:	mov	r2, #32
   142cc:	add	r0, pc, r0
   142d0:	bl	13f10 <fwrite@plt>
   142d4:	mov	r0, r7
   142d8:	bl	1482c <flatcc_destroy_context@@Base>
   142dc:	mov	r0, r8
   142e0:	add	sp, sp, #3952	; 0xf70
   142e4:	add	sp, sp, #12
   142e8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   142ec:	ldr	r3, [r6, r3]
   142f0:	ldr	r0, [pc, #124]	; 14374 <main@@Base+0x180>
   142f4:	mov	r1, r4
   142f8:	mov	r2, #20
   142fc:	ldr	r3, [r3]
   14300:	add	r0, pc, r0
   14304:	bl	13f10 <fwrite@plt>
   14308:	b	142d4 <main@@Base+0xe0>
   1430c:	ldr	r3, [pc, #100]	; 14378 <main@@Base+0x184>
   14310:	ldr	r1, [pc, #100]	; 1437c <main@@Base+0x188>
   14314:	mov	r2, r5
   14318:	ldr	r3, [r6, r3]
   1431c:	add	r1, pc, r1
   14320:	ldr	r0, [r3]
   14324:	bl	13f7c <fprintf@plt>
   14328:	b	142d4 <main@@Base+0xe0>
   1432c:	ldr	r3, [pc, #48]	; 14364 <main@@Base+0x170>
   14330:	ldr	r0, [pc, #72]	; 14380 <main@@Base+0x18c>
   14334:	mov	r1, r4
   14338:	ldr	r3, [r6, r3]
   1433c:	mov	r2, #41	; 0x29
   14340:	add	r0, pc, r0
   14344:	ldr	r3, [r3]
   14348:	mvn	r8, #0
   1434c:	bl	13f10 <fwrite@plt>
   14350:	b	142dc <main@@Base+0xe8>
   14354:	andeq	sl, r2, r4, lsr #5
   14358:	muleq	r0, r7, lr
   1435c:	andeq	sl, r2, ip, ror r1
   14360:	andeq	r5, r5, r4, lsr #27
   14364:	muleq	r0, ip, r0
   14368:	andeq	sl, r2, r8, ror r1
   1436c:	andeq	sl, r2, r4, ror r1
   14370:	andeq	sl, r2, ip, ror #2
   14374:	andeq	sl, r2, ip, ror #1
   14378:	andeq	r0, r0, r8, lsr #1
   1437c:	andeq	sl, r2, r0, asr #2
   14380:	andeq	sl, r2, r0, lsl #1

00014384 <_start@@Base>:
   14384:	mov	fp, #0
   14388:	mov	lr, #0
   1438c:	pop	{r1}		; (ldr r1, [sp], #4)
   14390:	mov	r2, sp
   14394:	push	{r2}		; (str r2, [sp, #-4]!)
   14398:	push	{r0}		; (str r0, [sp, #-4]!)
   1439c:	ldr	ip, [pc, #16]	; 143b4 <_start@@Base+0x30>
   143a0:	push	{ip}		; (str ip, [sp, #-4]!)
   143a4:	ldr	r0, [pc, #12]	; 143b8 <_start@@Base+0x34>
   143a8:	ldr	r3, [pc, #12]	; 143bc <_start@@Base+0x38>
   143ac:	bl	13f40 <__libc_start_main@plt>
   143b0:	bl	14024 <abort@plt>
   143b4:	andeq	lr, r3, r8, lsr #7
   143b8:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   143bc:	andeq	lr, r3, r8, asr #6
   143c0:	ldr	r3, [pc, #20]	; 143dc <_start@@Base+0x58>
   143c4:	ldr	r2, [pc, #20]	; 143e0 <_start@@Base+0x5c>
   143c8:	add	r3, pc, r3
   143cc:	ldr	r2, [r3, r2]
   143d0:	cmp	r2, #0
   143d4:	bxeq	lr
   143d8:	b	13f58 <__gmon_start__@plt>
   143dc:	andeq	r5, r5, r0, lsr ip
   143e0:	andeq	r0, r0, r0, lsr #1
   143e4:	ldr	r3, [pc, #28]	; 14408 <_start@@Base+0x84>
   143e8:	ldr	r0, [pc, #28]	; 1440c <_start@@Base+0x88>
   143ec:	sub	r3, r3, r0
   143f0:	cmp	r3, #6
   143f4:	bxls	lr
   143f8:	ldr	r3, [pc, #16]	; 14410 <_start@@Base+0x8c>
   143fc:	cmp	r3, #0
   14400:	bxeq	lr
   14404:	bx	r3
   14408:	strheq	sl, [r6], -pc	; <UNPREDICTABLE>
   1440c:	strheq	sl, [r6], -ip
   14410:	andeq	r0, r0, r0
   14414:	ldr	r1, [pc, #36]	; 14440 <_start@@Base+0xbc>
   14418:	ldr	r0, [pc, #36]	; 14444 <_start@@Base+0xc0>
   1441c:	sub	r1, r1, r0
   14420:	asr	r1, r1, #2
   14424:	add	r1, r1, r1, lsr #31
   14428:	asrs	r1, r1, #1
   1442c:	bxeq	lr
   14430:	ldr	r3, [pc, #16]	; 14448 <_start@@Base+0xc4>
   14434:	cmp	r3, #0
   14438:	bxeq	lr
   1443c:	bx	r3
   14440:	strheq	sl, [r6], -ip
   14444:	strheq	sl, [r6], -ip
   14448:	andeq	r0, r0, r0
   1444c:	push	{r4, lr}
   14450:	ldr	r4, [pc, #24]	; 14470 <_start@@Base+0xec>
   14454:	ldrb	r3, [r4]
   14458:	cmp	r3, #0
   1445c:	popne	{r4, pc}
   14460:	bl	143e4 <_start@@Base+0x60>
   14464:	mov	r3, #1
   14468:	strb	r3, [r4]
   1446c:	pop	{r4, pc}
   14470:	strheq	sl, [r6], -ip
   14474:	ldr	r0, [pc, #40]	; 144a4 <_start@@Base+0x120>
   14478:	ldr	r3, [r0]
   1447c:	cmp	r3, #0
   14480:	bne	14488 <_start@@Base+0x104>
   14484:	b	14414 <_start@@Base+0x90>
   14488:	ldr	r3, [pc, #24]	; 144a8 <_start@@Base+0x124>
   1448c:	cmp	r3, #0
   14490:	beq	14484 <_start@@Base+0x100>
   14494:	push	{r4, lr}
   14498:	blx	r3
   1449c:	pop	{r4, lr}
   144a0:	b	14414 <_start@@Base+0x90>
   144a4:	andeq	r9, r6, r4, ror #29
   144a8:	andeq	r0, r0, r0
   144ac:	add	r0, r0, #172	; 0xac
   144b0:	mov	r2, #1
   144b4:	b	2adc0 <ptr_set_insert_item@@Base>
   144b8:	ldr	r3, [pc, #44]	; 144ec <_start@@Base+0x168>
   144bc:	ldr	r0, [pc, #44]	; 144f0 <_start@@Base+0x16c>
   144c0:	add	r3, pc, r3
   144c4:	push	{r4, lr}
   144c8:	mov	r2, #34	; 0x22
   144cc:	ldr	ip, [r3, r0]
   144d0:	ldr	r0, [pc, #28]	; 144f4 <_start@@Base+0x170>
   144d4:	mov	r1, #1
   144d8:	add	r0, pc, r0
   144dc:	ldr	r3, [ip]
   144e0:	bl	13f10 <fwrite@plt>
   144e4:	mov	r0, #1
   144e8:	bl	13f64 <exit@plt>
   144ec:	andeq	r5, r5, r8, lsr fp
   144f0:	muleq	r0, ip, r0
   144f4:	andeq	sl, r2, ip, lsl #29

000144f8 <flatcc_init_options@@Base>:
   144f8:	push	{r4, r6, r7, lr}
   144fc:	mov	r2, #224	; 0xe0
   14500:	mov	r1, #0
   14504:	mov	r4, r0
   14508:	ldr	r6, [pc, #156]	; 145ac <flatcc_init_options@@Base+0xb4>
   1450c:	bl	13f94 <memset@plt>
   14510:	ldr	r0, [pc, #152]	; 145b0 <flatcc_init_options@@Base+0xb8>
   14514:	ldr	r1, [pc, #152]	; 145b4 <flatcc_init_options@@Base+0xbc>
   14518:	ldr	r2, [pc, #152]	; 145b8 <flatcc_init_options@@Base+0xc0>
   1451c:	mov	ip, #65536	; 0x10000
   14520:	mov	r3, #2
   14524:	mov	r7, #0
   14528:	mov	lr, #100	; 0x64
   1452c:	add	r0, pc, r0
   14530:	add	r1, pc, r1
   14534:	add	r2, pc, r2
   14538:	str	ip, [r4]
   1453c:	str	r3, [r4, #68]	; 0x44
   14540:	mov	ip, #4
   14544:	mov	r3, #1
   14548:	strd	r6, [r4, #88]	; 0x58
   1454c:	str	r0, [r4, #96]	; 0x60
   14550:	str	r1, [r4, #100]	; 0x64
   14554:	str	r2, [r4, #104]	; 0x68
   14558:	str	lr, [r4, #4]
   1455c:	str	lr, [r4, #8]
   14560:	str	r3, [r4, #16]
   14564:	str	r3, [r4, #20]
   14568:	str	r3, [r4, #24]
   1456c:	str	r3, [r4, #28]
   14570:	str	r3, [r4, #32]
   14574:	str	r3, [r4, #36]	; 0x24
   14578:	str	r3, [r4, #40]	; 0x28
   1457c:	str	r3, [r4, #44]	; 0x2c
   14580:	str	r3, [r4, #48]	; 0x30
   14584:	str	r3, [r4, #52]	; 0x34
   14588:	str	r3, [r4, #72]	; 0x48
   1458c:	str	r3, [r4, #76]	; 0x4c
   14590:	str	r3, [r4, #84]	; 0x54
   14594:	str	r3, [r4, #136]	; 0x88
   14598:	str	r3, [r4, #140]	; 0x8c
   1459c:	str	r3, [r4, #184]	; 0xb8
   145a0:	str	ip, [r4, #64]	; 0x40
   145a4:	str	ip, [r4, #176]	; 0xb0
   145a8:	pop	{r4, r6, r7, pc}
   145ac:	strdeq	pc, [r0], -lr
   145b0:	andeq	r9, r2, ip, lsl #29
   145b4:	andeq	sl, r2, r8, asr lr
   145b8:	andeq	sl, r2, ip, asr lr

000145bc <flatcc_create_context@@Base>:
   145bc:	push	{r4, r5, r6, r7, r8, r9, lr}
   145c0:	mov	r5, r0
   145c4:	sub	sp, sp, #12
   145c8:	mov	r0, #560	; 0x230
   145cc:	mov	r6, r1
   145d0:	mov	r7, r2
   145d4:	mov	r8, r3
   145d8:	bl	13f34 <malloc@plt>
   145dc:	subs	r4, r0, #0
   145e0:	beq	14614 <flatcc_create_context@@Base+0x58>
   145e4:	mov	r9, #0
   145e8:	str	r8, [sp]
   145ec:	mov	r3, r7
   145f0:	mov	r2, r6
   145f4:	mov	r1, r5
   145f8:	str	r9, [sp, #4]
   145fc:	bl	2ebb0 <__flatcc_fb_init_parser@@Base>
   14600:	cmp	r0, r9
   14604:	mov	r0, r4
   14608:	bne	1461c <flatcc_create_context@@Base+0x60>
   1460c:	add	sp, sp, #12
   14610:	pop	{r4, r5, r6, r7, r8, r9, pc}
   14614:	mov	r0, r4
   14618:	b	1460c <flatcc_create_context@@Base+0x50>
   1461c:	bl	13ec8 <free@plt>
   14620:	mov	r0, r9
   14624:	b	1460c <flatcc_create_context@@Base+0x50>

00014628 <flatcc_parse_buffer@@Base>:
   14628:	ldr	r3, [r0, #128]	; 0x80
   1462c:	push	{r4, r5, r6, r7, r8, lr}
   14630:	mov	r6, r2
   14634:	cmp	r3, #0
   14638:	cmpne	r3, r6
   1463c:	mov	r2, #1
   14640:	movcc	r4, #1
   14644:	movcs	r4, #0
   14648:	str	r2, [r0, #140]	; 0x8c
   1464c:	bcc	1469c <flatcc_parse_buffer@@Base+0x74>
   14650:	mov	r5, r0
   14654:	mov	r7, r1
   14658:	add	r1, r0, #352	; 0x160
   1465c:	add	r0, r0, #524	; 0x20c
   14660:	bl	2adc0 <ptr_set_insert_item@@Base>
   14664:	mov	r3, r4
   14668:	mov	r2, r6
   1466c:	mov	r1, r7
   14670:	mov	r0, r5
   14674:	bl	2eeac <__flatcc_fb_parse@@Base>
   14678:	cmp	r0, #0
   1467c:	bne	14694 <flatcc_parse_buffer@@Base+0x6c>
   14680:	mov	r0, r5
   14684:	bl	35008 <__flatcc_fb_build_schema@@Base>
   14688:	adds	r0, r0, #0
   1468c:	mvnne	r0, #0
   14690:	pop	{r4, r5, r6, r7, r8, pc}
   14694:	mvn	r0, #0
   14698:	pop	{r4, r5, r6, r7, r8, pc}
   1469c:	ldr	r1, [pc, #12]	; 146b0 <flatcc_parse_buffer@@Base+0x88>
   146a0:	add	r1, pc, r1
   146a4:	bl	2d414 <__flatcc_fb_print_error@@Base>
   146a8:	mvn	r0, #0
   146ac:	pop	{r4, r5, r6, r7, r8, pc}
   146b0:	strdeq	sl, [r2], -r8

000146b4 <flatcc_generate_binary_schema_to_buffer@@Base>:
   146b4:	push	{lr}		; (str lr, [sp, #-4]!)
   146b8:	sub	sp, sp, #12
   146bc:	add	r3, sp, #8
   146c0:	mov	ip, r0
   146c4:	str	r2, [r3, #-4]!
   146c8:	add	r0, r0, #128	; 0x80
   146cc:	mov	r2, r1
   146d0:	add	r1, ip, #352	; 0x160
   146d4:	bl	29e98 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>
   146d8:	cmp	r0, #0
   146dc:	mvneq	r0, #0
   146e0:	ldrne	r0, [sp, #4]
   146e4:	add	sp, sp, #12
   146e8:	pop	{pc}		; (ldr pc, [sp], #4)

000146ec <flatcc_generate_binary_schema@@Base>:
   146ec:	mov	r3, r0
   146f0:	mov	r2, r1
   146f4:	add	r0, r0, #128	; 0x80
   146f8:	add	r1, r3, #352	; 0x160
   146fc:	b	29f10 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>

00014700 <flatcc_generate_files@@Base>:
   14700:	push	{r4, r5, r6, r7, lr}
   14704:	subs	r5, r0, #0
   14708:	sub	sp, sp, #236	; 0xec
   1470c:	beq	147c0 <flatcc_generate_files@@Base+0xc0>
   14710:	ldr	r2, [r5, #108]	; 0x6c
   14714:	cmp	r2, #0
   14718:	bne	147c0 <flatcc_generate_files@@Base+0xc0>
   1471c:	mov	r4, r5
   14720:	b	14728 <flatcc_generate_files@@Base+0x28>
   14724:	mov	r4, r3
   14728:	ldr	r3, [r4]
   1472c:	str	r2, [r4, #4]
   14730:	cmp	r3, #0
   14734:	mov	r2, r4
   14738:	bne	14724 <flatcc_generate_files@@Base+0x24>
   1473c:	ldr	r3, [r5, #308]	; 0x134
   14740:	add	r6, r5, #128	; 0x80
   14744:	cmp	r3, #0
   14748:	bne	147ac <flatcc_generate_files@@Base+0xac>
   1474c:	mov	r1, r6
   14750:	mov	r0, sp
   14754:	bl	15028 <__flatcc_fb_init_output_c@@Base>
   14758:	mov	r7, sp
   1475c:	cmp	r0, #0
   14760:	bne	147c0 <flatcc_generate_files@@Base+0xc0>
   14764:	ldr	r3, [r5, #256]	; 0x100
   14768:	cmp	r3, #0
   1476c:	beq	14804 <flatcc_generate_files@@Base+0x104>
   14770:	ldr	r6, [r5, #120]	; 0x78
   14774:	cmp	r6, #0
   14778:	beq	14798 <flatcc_generate_files@@Base+0x98>
   1477c:	ldr	r3, [r5, #300]	; 0x12c
   14780:	cmp	r3, #0
   14784:	beq	14818 <flatcc_generate_files@@Base+0x118>
   14788:	ldr	r3, [r4, #108]	; 0x6c
   1478c:	cmp	r3, #0
   14790:	beq	147d0 <flatcc_generate_files@@Base+0xd0>
   14794:	mov	r6, #1
   14798:	mov	r0, r7
   1479c:	bl	14fe4 <__flatcc_fb_end_output_c@@Base>
   147a0:	mov	r0, r6
   147a4:	add	sp, sp, #236	; 0xec
   147a8:	pop	{r4, r5, r6, r7, pc}
   147ac:	mov	r0, r6
   147b0:	add	r1, r5, #352	; 0x160
   147b4:	bl	29f7c <__flatcc_fb_codegen_bfbs_to_file@@Base>
   147b8:	cmp	r0, #0
   147bc:	beq	1474c <flatcc_generate_files@@Base+0x4c>
   147c0:	mvn	r6, #0
   147c4:	mov	r0, r6
   147c8:	add	sp, sp, #236	; 0xec
   147cc:	pop	{r4, r5, r6, r7, pc}
   147d0:	add	r1, r4, #352	; 0x160
   147d4:	mov	r0, r7
   147d8:	bl	155c4 <__flatcc_fb_codegen_c@@Base>
   147dc:	ldr	r4, [r4, #4]
   147e0:	cmp	r4, #0
   147e4:	clz	r3, r0
   147e8:	lsr	r3, r3, #5
   147ec:	moveq	r3, #0
   147f0:	cmp	r3, #0
   147f4:	bne	14788 <flatcc_generate_files@@Base+0x88>
   147f8:	adds	r6, r0, #0
   147fc:	movne	r6, #1
   14800:	b	14798 <flatcc_generate_files@@Base+0x98>
   14804:	mov	r0, sp
   14808:	bl	15504 <__flatcc_fb_codegen_common_c@@Base>
   1480c:	subs	r6, r0, #0
   14810:	bne	14798 <flatcc_generate_files@@Base+0x98>
   14814:	b	14770 <flatcc_generate_files@@Base+0x70>
   14818:	add	r1, r5, #352	; 0x160
   1481c:	mov	r0, r7
   14820:	bl	155c4 <__flatcc_fb_codegen_c@@Base>
   14824:	mov	r6, r0
   14828:	b	14798 <flatcc_generate_files@@Base+0x98>

0001482c <flatcc_destroy_context@@Base>:
   1482c:	push	{r4, r5, r6, lr}
   14830:	subs	r4, r0, #0
   14834:	popeq	{r4, r5, r6, pc}
   14838:	mov	r0, r4
   1483c:	ldr	r5, [r4]
   14840:	bl	31cac <__flatcc_fb_clear_parser@@Base>
   14844:	mov	r0, r4
   14848:	bl	13ec8 <free@plt>
   1484c:	subs	r4, r5, #0
   14850:	bne	14838 <flatcc_destroy_context@@Base+0xc>
   14854:	pop	{r4, r5, r6, pc}

00014858 <flatcc_parse_file@@Base>:
   14858:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1485c:	mov	r4, r0
   14860:	sub	sp, sp, #44	; 0x2c
   14864:	mov	r0, r1
   14868:	mov	r7, r1
   1486c:	bl	13f70 <strlen@plt>
   14870:	add	r3, r4, #352	; 0x160
   14874:	mov	r1, r3
   14878:	mov	r2, #1
   1487c:	str	r3, [sp, #16]
   14880:	mov	r8, r0
   14884:	ldr	r0, [r4, #412]	; 0x19c
   14888:	add	r0, r0, #32
   1488c:	bl	2cac4 <fb_schema_table_insert_item@@Base>
   14890:	cmp	r0, #0
   14894:	beq	148a8 <flatcc_parse_file@@Base+0x50>
   14898:	mov	r9, #0
   1489c:	mov	r0, r9
   148a0:	add	sp, sp, #44	; 0x2c
   148a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148a8:	ldr	r3, [r4, #552]	; 0x228
   148ac:	cmp	r3, #0
   148b0:	str	r3, [sp, #28]
   148b4:	str	r3, [sp, #12]
   148b8:	beq	14d6c <flatcc_parse_file@@Base+0x514>
   148bc:	ldr	r3, [r4, #336]	; 0x150
   148c0:	cmp	r3, #0
   148c4:	ble	14ad4 <flatcc_parse_file@@Base+0x27c>
   148c8:	ldr	fp, [pc, #1404]	; 14e4c <flatcc_parse_file@@Base+0x5f4>
   148cc:	mov	r5, #0
   148d0:	add	fp, pc, fp
   148d4:	mov	sl, #1
   148d8:	add	r9, sp, #36	; 0x24
   148dc:	ldr	r3, [r4, #328]	; 0x148
   148e0:	ldr	r6, [r3, r5, lsl #2]
   148e4:	mov	r0, r6
   148e8:	bl	13f70 <strlen@plt>
   148ec:	str	sl, [sp, #4]
   148f0:	str	fp, [sp]
   148f4:	mov	r3, r8
   148f8:	mov	r2, r7
   148fc:	mov	r1, r0
   14900:	mov	r0, r6
   14904:	bl	2cc58 <__flatcc_fb_create_join_path_n@@Base>
   14908:	subs	r6, r0, #0
   1490c:	beq	14d9c <flatcc_parse_file@@Base+0x544>
   14910:	mov	r2, r9
   14914:	ldr	r1, [r4, #128]	; 0x80
   14918:	bl	2d070 <__flatcc_fb_read_file@@Base>
   1491c:	cmp	r0, #0
   14920:	beq	14a94 <flatcc_parse_file@@Base+0x23c>
   14924:	mov	r1, r0
   14928:	ldr	r0, [r4, #412]	; 0x19c
   1492c:	ldr	ip, [sp, #36]	; 0x24
   14930:	ldr	r3, [r0, #56]	; 0x38
   14934:	mov	r2, ip
   14938:	add	r3, r3, ip
   1493c:	str	r3, [r0, #56]	; 0x38
   14940:	mov	r3, #1
   14944:	str	r6, [r4, #548]	; 0x224
   14948:	mov	r0, r4
   1494c:	bl	2eeac <__flatcc_fb_parse@@Base>
   14950:	subs	r9, r0, #0
   14954:	bne	14898 <flatcc_parse_file@@Base+0x40>
   14958:	ldr	r6, [r4, #352]	; 0x160
   1495c:	cmp	r6, #0
   14960:	beq	14b90 <flatcc_parse_file@@Base+0x338>
   14964:	ldr	r3, [pc, #1252]	; 14e50 <flatcc_parse_file@@Base+0x5f8>
   14968:	str	r9, [sp, #24]
   1496c:	add	r3, pc, r3
   14970:	str	r3, [sp, #20]
   14974:	ldr	r3, [pc, #1240]	; 14e54 <flatcc_parse_file@@Base+0x5fc>
   14978:	add	fp, r4, #128	; 0x80
   1497c:	add	r3, pc, r3
   14980:	str	r3, [sp, #12]
   14984:	mov	sl, #560	; 0x230
   14988:	ldr	r9, [sp, #16]
   1498c:	b	149bc <flatcc_parse_file@@Base+0x164>
   14990:	add	r0, r0, #172	; 0xac
   14994:	mov	r2, r9
   14998:	ldr	r1, [sp, #12]
   1499c:	bl	2adfc <ptr_set_visit@@Base>
   149a0:	mov	r0, r7
   149a4:	bl	1482c <flatcc_destroy_context@@Base>
   149a8:	mov	r0, r8
   149ac:	bl	13ec8 <free@plt>
   149b0:	ldr	r6, [r6]
   149b4:	cmp	r6, #0
   149b8:	beq	14b90 <flatcc_parse_file@@Base+0x338>
   149bc:	ldr	r1, [r6, #12]
   149c0:	ldr	r0, [r6, #8]
   149c4:	bl	2cb88 <__flatcc_fb_copy_path_n@@Base>
   149c8:	subs	r8, r0, #0
   149cc:	beq	14d9c <flatcc_parse_file@@Base+0x544>
   149d0:	ldr	r5, [r4, #412]	; 0x19c
   149d4:	ldr	r3, [r4, #132]	; 0x84
   149d8:	ldr	r2, [r5, #52]	; 0x34
   149dc:	cmp	r2, r3
   149e0:	cmpge	r3, #0
   149e4:	bgt	14d0c <flatcc_parse_file@@Base+0x4b4>
   149e8:	ldr	r3, [r4, #136]	; 0x88
   149ec:	ldr	r2, [r5, #48]	; 0x30
   149f0:	cmp	r2, r3
   149f4:	cmpge	r3, #0
   149f8:	bgt	14cf4 <flatcc_parse_file@@Base+0x49c>
   149fc:	mov	r0, sl
   14a00:	bl	13f34 <malloc@plt>
   14a04:	subs	r7, r0, #0
   14a08:	beq	14b68 <flatcc_parse_file@@Base+0x310>
   14a0c:	ldr	r2, [r4, #12]
   14a10:	ldr	r3, [r4, #8]
   14a14:	mov	r1, fp
   14a18:	stm	sp, {r2, r5}
   14a1c:	mov	r2, r8
   14a20:	bl	2ebb0 <__flatcc_fb_init_parser@@Base>
   14a24:	cmp	r0, #0
   14a28:	bne	14b80 <flatcc_parse_file@@Base+0x328>
   14a2c:	add	r1, r7, #352	; 0x160
   14a30:	add	r0, r5, #32
   14a34:	bl	2cb00 <fb_schema_table_find_item@@Base>
   14a38:	cmp	r0, #0
   14a3c:	bne	14990 <flatcc_parse_file@@Base+0x138>
   14a40:	ldr	r1, [r4]
   14a44:	ldr	r2, [r5, #52]	; 0x34
   14a48:	ldr	r3, [r5, #48]	; 0x30
   14a4c:	str	r1, [r7]
   14a50:	ldr	r1, [r4, #548]	; 0x224
   14a54:	add	r2, r2, #1
   14a58:	add	r3, r3, #1
   14a5c:	str	r1, [r7, #552]	; 0x228
   14a60:	str	r7, [r4]
   14a64:	mov	r1, r8
   14a68:	str	r2, [r5, #52]	; 0x34
   14a6c:	str	r3, [r5, #48]	; 0x30
   14a70:	mov	r0, r7
   14a74:	bl	14858 <flatcc_parse_file@@Base>
   14a78:	cmp	r0, #0
   14a7c:	bne	14b68 <flatcc_parse_file@@Base+0x310>
   14a80:	add	r0, r7, #524	; 0x20c
   14a84:	mov	r2, r9
   14a88:	ldr	r1, [sp, #20]
   14a8c:	bl	2adfc <ptr_set_visit@@Base>
   14a90:	b	149a8 <flatcc_parse_file@@Base+0x150>
   14a94:	mov	r0, r6
   14a98:	bl	13ec8 <free@plt>
   14a9c:	ldr	r3, [r4, #128]	; 0x80
   14aa0:	ldr	r2, [sp, #36]	; 0x24
   14aa4:	cmp	r3, #0
   14aa8:	cmpne	r3, r2
   14aac:	bcc	14da0 <flatcc_parse_file@@Base+0x548>
   14ab0:	ldr	r3, [r4, #336]	; 0x150
   14ab4:	add	r5, r5, #1
   14ab8:	cmp	r3, r5
   14abc:	bgt	148dc <flatcc_parse_file@@Base+0x84>
   14ac0:	ldr	r3, [sp, #12]
   14ac4:	cmp	r3, #0
   14ac8:	beq	14d50 <flatcc_parse_file@@Base+0x4f8>
   14acc:	ldr	r3, [r4, #552]	; 0x228
   14ad0:	str	r3, [sp, #12]
   14ad4:	ldr	r5, [sp, #12]
   14ad8:	mov	r0, r5
   14adc:	bl	13f70 <strlen@plt>
   14ae0:	mov	r1, r0
   14ae4:	mov	r0, r5
   14ae8:	bl	2cfbc <__flatcc_fb_find_basename@@Base>
   14aec:	ldr	r2, [pc, #868]	; 14e58 <flatcc_parse_file@@Base+0x600>
   14af0:	mov	r1, #1
   14af4:	add	r2, pc, r2
   14af8:	str	r2, [sp]
   14afc:	str	r1, [sp, #4]
   14b00:	mov	r3, r8
   14b04:	mov	r2, r7
   14b08:	mov	r1, r0
   14b0c:	mov	r0, r5
   14b10:	bl	2cc58 <__flatcc_fb_create_join_path_n@@Base>
   14b14:	subs	r6, r0, #0
   14b18:	beq	14d9c <flatcc_parse_file@@Base+0x544>
   14b1c:	ldr	r1, [r4, #128]	; 0x80
   14b20:	add	r2, sp, #36	; 0x24
   14b24:	bl	2d070 <__flatcc_fb_read_file@@Base>
   14b28:	subs	r1, r0, #0
   14b2c:	bne	14928 <flatcc_parse_file@@Base+0xd0>
   14b30:	mov	r0, r6
   14b34:	bl	13ec8 <free@plt>
   14b38:	ldr	r3, [r4, #128]	; 0x80
   14b3c:	ldr	r2, [sp, #36]	; 0x24
   14b40:	cmp	r3, #0
   14b44:	cmpne	r3, r2
   14b48:	bcc	14da0 <flatcc_parse_file@@Base+0x548>
   14b4c:	ldr	r1, [pc, #776]	; 14e5c <flatcc_parse_file@@Base+0x604>
   14b50:	mov	r2, r7
   14b54:	mov	r0, r4
   14b58:	add	r1, pc, r1
   14b5c:	bl	2d414 <__flatcc_fb_print_error@@Base>
   14b60:	mvn	r9, #0
   14b64:	b	1489c <flatcc_parse_file@@Base+0x44>
   14b68:	ldr	r9, [sp, #24]
   14b6c:	mov	r0, r8
   14b70:	bl	13ec8 <free@plt>
   14b74:	mov	r0, r9
   14b78:	add	sp, sp, #44	; 0x2c
   14b7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b80:	mov	r0, r7
   14b84:	ldr	r9, [sp, #24]
   14b88:	bl	13ec8 <free@plt>
   14b8c:	b	14b6c <flatcc_parse_file@@Base+0x314>
   14b90:	ldr	r1, [sp, #16]
   14b94:	mov	r2, #1
   14b98:	add	r0, r4, #524	; 0x20c
   14b9c:	bl	2adc0 <ptr_set_insert_item@@Base>
   14ba0:	mov	r0, r4
   14ba4:	bl	35008 <__flatcc_fb_build_schema@@Base>
   14ba8:	subs	r9, r0, #0
   14bac:	bne	14898 <flatcc_parse_file@@Base+0x40>
   14bb0:	ldr	r3, [r4, #240]	; 0xf0
   14bb4:	ldr	r2, [sp, #28]
   14bb8:	adds	r3, r3, #0
   14bbc:	movne	r3, #1
   14bc0:	cmp	r2, #0
   14bc4:	movne	r3, #0
   14bc8:	cmp	r3, #0
   14bcc:	beq	14898 <flatcc_parse_file@@Base+0x40>
   14bd0:	ldr	r3, [r4, #552]	; 0x228
   14bd4:	cmp	r3, #0
   14bd8:	bne	14e2c <flatcc_parse_file@@Base+0x5d4>
   14bdc:	ldr	r5, [r4, #344]	; 0x158
   14be0:	cmp	r5, #0
   14be4:	beq	14e20 <flatcc_parse_file@@Base+0x5c8>
   14be8:	ldr	r1, [r4, #244]	; 0xf4
   14bec:	ldr	r2, [pc, #620]	; 14e60 <flatcc_parse_file@@Base+0x608>
   14bf0:	cmp	r1, #0
   14bf4:	add	r2, pc, r2
   14bf8:	ldr	r3, [r4, #512]	; 0x200
   14bfc:	mov	r0, r2
   14c00:	ldr	r6, [r4, #248]	; 0xf8
   14c04:	beq	14dfc <flatcc_parse_file@@Base+0x5a4>
   14c08:	cmp	r6, #0
   14c0c:	beq	14de0 <flatcc_parse_file@@Base+0x588>
   14c10:	ldr	r5, [pc, #588]	; 14e64 <flatcc_parse_file@@Base+0x60c>
   14c14:	add	r5, pc, r5
   14c18:	mov	r8, r5
   14c1c:	mov	r3, #1
   14c20:	bl	2cd9c <__flatcc_fb_create_join_path@@Base>
   14c24:	subs	r7, r0, #0
   14c28:	beq	14d9c <flatcc_parse_file@@Base+0x544>
   14c2c:	mov	r0, r5
   14c30:	mov	r2, r8
   14c34:	mov	r1, r6
   14c38:	mov	r3, #1
   14c3c:	bl	2cd9c <__flatcc_fb_create_join_path@@Base>
   14c40:	subs	r5, r0, #0
   14c44:	beq	14d9c <flatcc_parse_file@@Base+0x544>
   14c48:	bl	2cfa0 <__flatcc_fb_create_make_path@@Base>
   14c4c:	subs	r8, r0, #0
   14c50:	beq	14d9c <flatcc_parse_file@@Base+0x544>
   14c54:	mov	r0, r5
   14c58:	bl	13ec8 <free@plt>
   14c5c:	ldr	r1, [pc, #516]	; 14e68 <flatcc_parse_file@@Base+0x610>
   14c60:	mov	r0, r7
   14c64:	add	r1, pc, r1
   14c68:	bl	13ebc <fopen@plt>
   14c6c:	subs	r6, r0, #0
   14c70:	beq	14db8 <flatcc_parse_file@@Base+0x560>
   14c74:	ldr	r1, [pc, #496]	; 14e6c <flatcc_parse_file@@Base+0x614>
   14c78:	mov	r2, r8
   14c7c:	add	r1, pc, r1
   14c80:	bl	13f7c <fprintf@plt>
   14c84:	ldr	r4, [r4]
   14c88:	ldr	sl, [pc, #480]	; 14e70 <flatcc_parse_file@@Base+0x618>
   14c8c:	cmp	r4, #0
   14c90:	add	sl, pc, sl
   14c94:	beq	14ccc <flatcc_parse_file@@Base+0x474>
   14c98:	ldr	r0, [r4, #548]	; 0x224
   14c9c:	bl	2cfa0 <__flatcc_fb_create_make_path@@Base>
   14ca0:	subs	r5, r0, #0
   14ca4:	beq	14d9c <flatcc_parse_file@@Base+0x544>
   14ca8:	mov	r2, r5
   14cac:	mov	r1, sl
   14cb0:	mov	r0, r6
   14cb4:	bl	13f7c <fprintf@plt>
   14cb8:	ldr	r4, [r4]
   14cbc:	mov	r0, r5
   14cc0:	bl	13ec8 <free@plt>
   14cc4:	cmp	r4, #0
   14cc8:	bne	14c98 <flatcc_parse_file@@Base+0x440>
   14ccc:	mov	r1, r6
   14cd0:	mov	r0, #10
   14cd4:	bl	13fdc <fputc@plt>
   14cd8:	mov	r0, r7
   14cdc:	bl	13ec8 <free@plt>
   14ce0:	mov	r0, r8
   14ce4:	bl	13ec8 <free@plt>
   14ce8:	mov	r0, r6
   14cec:	bl	13fc4 <fclose@plt>
   14cf0:	b	1489c <flatcc_parse_file@@Base+0x44>
   14cf4:	ldr	r1, [pc, #376]	; 14e74 <flatcc_parse_file@@Base+0x61c>
   14cf8:	mov	r0, r4
   14cfc:	add	r1, pc, r1
   14d00:	ldr	r9, [sp, #24]
   14d04:	bl	2d414 <__flatcc_fb_print_error@@Base>
   14d08:	b	14b6c <flatcc_parse_file@@Base+0x314>
   14d0c:	ldr	r1, [pc, #356]	; 14e78 <flatcc_parse_file@@Base+0x620>
   14d10:	mov	r0, r4
   14d14:	add	r1, pc, r1
   14d18:	ldr	r9, [sp, #24]
   14d1c:	bl	2d414 <__flatcc_fb_print_error@@Base>
   14d20:	b	14b6c <flatcc_parse_file@@Base+0x314>
   14d24:	ldr	r3, [r4, #412]	; 0x19c
   14d28:	ldr	r1, [sp, #36]	; 0x24
   14d2c:	ldr	r2, [r4, #128]	; 0x80
   14d30:	ldr	r3, [r3, #56]	; 0x38
   14d34:	add	r3, r3, r1
   14d38:	cmp	r2, #0
   14d3c:	cmpne	r3, r2
   14d40:	bhi	14da0 <flatcc_parse_file@@Base+0x548>
   14d44:	ldr	r3, [r4, #336]	; 0x150
   14d48:	cmp	r3, #0
   14d4c:	bgt	148c8 <flatcc_parse_file@@Base+0x70>
   14d50:	ldr	r1, [pc, #292]	; 14e7c <flatcc_parse_file@@Base+0x624>
   14d54:	mov	r2, r7
   14d58:	mov	r0, r4
   14d5c:	add	r1, pc, r1
   14d60:	bl	2d414 <__flatcc_fb_print_error@@Base>
   14d64:	mvn	r9, #0
   14d68:	b	1489c <flatcc_parse_file@@Base+0x44>
   14d6c:	ldr	r1, [r4, #128]	; 0x80
   14d70:	add	r2, sp, #36	; 0x24
   14d74:	mov	r0, r7
   14d78:	bl	2d070 <__flatcc_fb_read_file@@Base>
   14d7c:	subs	r1, r0, #0
   14d80:	beq	14d24 <flatcc_parse_file@@Base+0x4cc>
   14d84:	mov	r0, r7
   14d88:	str	r1, [sp, #12]
   14d8c:	bl	2cbd4 <__flatcc_fb_copy_path@@Base>
   14d90:	ldr	r1, [sp, #12]
   14d94:	subs	r6, r0, #0
   14d98:	bne	14928 <flatcc_parse_file@@Base+0xd0>
   14d9c:	bl	144b8 <_start@@Base+0x134>
   14da0:	ldr	r1, [pc, #216]	; 14e80 <flatcc_parse_file@@Base+0x628>
   14da4:	mov	r0, r4
   14da8:	add	r1, pc, r1
   14dac:	bl	2d414 <__flatcc_fb_print_error@@Base>
   14db0:	mvn	r9, #0
   14db4:	b	1489c <flatcc_parse_file@@Base+0x44>
   14db8:	ldr	r1, [pc, #196]	; 14e84 <flatcc_parse_file@@Base+0x62c>
   14dbc:	mov	r2, r7
   14dc0:	add	r1, pc, r1
   14dc4:	mov	r0, r4
   14dc8:	bl	2d414 <__flatcc_fb_print_error@@Base>
   14dcc:	mov	r0, r7
   14dd0:	bl	13ec8 <free@plt>
   14dd4:	mov	r0, r8
   14dd8:	bl	13ec8 <free@plt>
   14ddc:	b	1489c <flatcc_parse_file@@Base+0x44>
   14de0:	ldr	ip, [r4, #308]	; 0x134
   14de4:	cmp	ip, #0
   14de8:	beq	14e10 <flatcc_parse_file@@Base+0x5b8>
   14dec:	ldr	r8, [pc, #148]	; 14e88 <flatcc_parse_file@@Base+0x630>
   14df0:	mov	r6, r3
   14df4:	add	r8, pc, r8
   14df8:	b	14c1c <flatcc_parse_file@@Base+0x3c4>
   14dfc:	ldr	r2, [pc, #136]	; 14e8c <flatcc_parse_file@@Base+0x634>
   14e00:	mov	r0, r5
   14e04:	mov	r1, r3
   14e08:	add	r2, pc, r2
   14e0c:	b	14c08 <flatcc_parse_file@@Base+0x3b0>
   14e10:	ldr	r8, [pc, #120]	; 14e90 <flatcc_parse_file@@Base+0x638>
   14e14:	mov	r6, r3
   14e18:	add	r8, pc, r8
   14e1c:	b	14c1c <flatcc_parse_file@@Base+0x3c4>
   14e20:	ldr	r5, [pc, #108]	; 14e94 <flatcc_parse_file@@Base+0x63c>
   14e24:	add	r5, pc, r5
   14e28:	b	14be8 <flatcc_parse_file@@Base+0x390>
   14e2c:	ldr	r3, [pc, #100]	; 14e98 <flatcc_parse_file@@Base+0x640>
   14e30:	ldr	r1, [pc, #100]	; 14e9c <flatcc_parse_file@@Base+0x644>
   14e34:	ldr	r0, [pc, #100]	; 14ea0 <flatcc_parse_file@@Base+0x648>
   14e38:	add	r3, pc, r3
   14e3c:	mov	r2, #220	; 0xdc
   14e40:	add	r1, pc, r1
   14e44:	add	r0, pc, r0
   14e48:	bl	14030 <__assert_fail@plt>
   14e4c:	andeq	r4, r3, r8, lsl lr
   14e50:			; <UNDEFINED> instruction: 0xfffffb38
   14e54:			; <UNDEFINED> instruction: 0xfffffb28
   14e58:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   14e5c:	andeq	sl, r2, r8, ror r8
   14e60:	strdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   14e64:	ldrdeq	r4, [r3], -r4	; <UNPREDICTABLE>
   14e68:	andeq	sl, r2, ip, asr #16
   14e6c:	andeq	sl, r2, r8, ror #16
   14e70:	andeq	sl, r2, r8, asr r8
   14e74:	andeq	sl, r2, ip, lsl r7
   14e78:	andeq	sl, r2, r4, ror #13
   14e7c:	andeq	sl, r2, r4, ror r6
   14e80:	strdeq	sl, [r2], -r0
   14e84:	strdeq	sl, [r2], -r4
   14e88:	muleq	r2, r4, r5
   14e8c:			; <UNDEFINED> instruction: 0x0002a5b4
   14e90:	andeq	sl, r2, ip, lsr #11
   14e94:	andeq	r4, r3, r4, asr #17
   14e98:	andeq	sl, r2, r0, lsl r5
   14e9c:	strdeq	sl, [r2], -r8
   14ea0:	andeq	sl, r2, r4, asr r6
   14ea4:	mov	r0, r1
   14ea8:	b	13ec8 <free@plt>

00014eac <__flatcc_fb_open_output_file@@Base>:
   14eac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14eb0:	mov	r8, r1
   14eb4:	ldr	r1, [r0, #212]	; 0xd4
   14eb8:	ldr	r7, [pc, #208]	; 14f90 <__flatcc_fb_open_output_file@@Base+0xe4>
   14ebc:	mov	r6, r0
   14ec0:	ldr	r5, [r1, #216]	; 0xd8
   14ec4:	sub	sp, sp, #8
   14ec8:	subs	r0, r5, #0
   14ecc:	mov	r9, r2
   14ed0:	mov	sl, r3
   14ed4:	add	r7, pc, r7
   14ed8:	beq	14efc <__flatcc_fb_open_output_file@@Base+0x50>
   14edc:	bl	13f70 <strlen@plt>
   14ee0:	ldr	r4, [r6, #204]	; 0xcc
   14ee4:	cmp	r4, #0
   14ee8:	movne	r4, #0
   14eec:	beq	14f14 <__flatcc_fb_open_output_file@@Base+0x68>
   14ef0:	mov	r0, r4
   14ef4:	add	sp, sp, #8
   14ef8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14efc:	ldr	r4, [r6, #204]	; 0xcc
   14f00:	ldr	r5, [pc, #140]	; 14f94 <__flatcc_fb_open_output_file@@Base+0xe8>
   14f04:	cmp	r4, #0
   14f08:	add	r5, pc, r5
   14f0c:	movne	r4, #0
   14f10:	bne	14ef0 <__flatcc_fb_open_output_file@@Base+0x44>
   14f14:	mov	ip, #1
   14f18:	mov	r1, r0
   14f1c:	str	sl, [sp]
   14f20:	mov	r0, r5
   14f24:	mov	r3, r9
   14f28:	mov	r2, r8
   14f2c:	str	ip, [sp, #4]
   14f30:	bl	2cc58 <__flatcc_fb_create_join_path_n@@Base>
   14f34:	subs	r5, r0, #0
   14f38:	beq	14f8c <__flatcc_fb_open_output_file@@Base+0xe0>
   14f3c:	ldr	r1, [pc, #84]	; 14f98 <__flatcc_fb_open_output_file@@Base+0xec>
   14f40:	add	r1, pc, r1
   14f44:	bl	13ebc <fopen@plt>
   14f48:	cmp	r0, #0
   14f4c:	str	r0, [r6, #204]	; 0xcc
   14f50:	beq	14f68 <__flatcc_fb_open_output_file@@Base+0xbc>
   14f54:	mov	r0, r5
   14f58:	bl	13ec8 <free@plt>
   14f5c:	mov	r0, r4
   14f60:	add	sp, sp, #8
   14f64:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14f68:	ldr	r3, [pc, #44]	; 14f9c <__flatcc_fb_open_output_file@@Base+0xf0>
   14f6c:	ldr	r1, [pc, #44]	; 14fa0 <__flatcc_fb_open_output_file@@Base+0xf4>
   14f70:	mov	r2, r5
   14f74:	ldr	r3, [r7, r3]
   14f78:	add	r1, pc, r1
   14f7c:	mvn	r4, #0
   14f80:	ldr	r0, [r3]
   14f84:	bl	13f7c <fprintf@plt>
   14f88:	b	14f54 <__flatcc_fb_open_output_file@@Base+0xa8>
   14f8c:	bl	14040 <__assert_fail@plt+0x10>
   14f90:	andeq	r5, r5, r4, lsr #2
   14f94:	andeq	r4, r3, r0, ror #15
   14f98:	andeq	sl, r2, r0, ror r5
   14f9c:	muleq	r0, ip, r0
   14fa0:	andeq	sl, r2, r4, ror r5

00014fa4 <__flatcc_fb_close_output_file@@Base>:
   14fa4:	ldr	r3, [r0, #212]	; 0xd4
   14fa8:	ldr	r2, [r3, #124]	; 0x7c
   14fac:	cmp	r2, #0
   14fb0:	bxne	lr
   14fb4:	push	{r4, r5, r6, lr}
   14fb8:	ldr	r5, [r3, #108]	; 0x6c
   14fbc:	cmp	r5, #0
   14fc0:	popne	{r4, r5, r6, pc}
   14fc4:	ldr	r3, [r0, #204]	; 0xcc
   14fc8:	cmp	r3, #0
   14fcc:	popeq	{r4, r5, r6, pc}
   14fd0:	mov	r4, r0
   14fd4:	mov	r0, r3
   14fd8:	bl	13fc4 <fclose@plt>
   14fdc:	str	r5, [r4, #204]	; 0xcc
   14fe0:	pop	{r4, r5, r6, pc}

00014fe4 <__flatcc_fb_end_output_c@@Base>:
   14fe4:	ldr	r3, [pc, #52]	; 15020 <__flatcc_fb_end_output_c@@Base+0x3c>
   14fe8:	ldr	r2, [pc, #52]	; 15024 <__flatcc_fb_end_output_c@@Base+0x40>
   14fec:	add	r3, pc, r3
   14ff0:	push	{r4, lr}
   14ff4:	mov	r4, r0
   14ff8:	ldr	r3, [r3, r2]
   14ffc:	ldr	r0, [r0, #204]	; 0xcc
   15000:	ldr	r3, [r3]
   15004:	cmp	r3, r0
   15008:	cmpne	r0, #0
   1500c:	beq	15014 <__flatcc_fb_end_output_c@@Base+0x30>
   15010:	bl	13fc4 <fclose@plt>
   15014:	mov	r3, #0
   15018:	str	r3, [r4, #204]	; 0xcc
   1501c:	pop	{r4, pc}
   15020:	andeq	r5, r5, ip
   15024:	andeq	r0, r0, r8, lsr #1

00015028 <__flatcc_fb_init_output_c@@Base>:
   15028:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1502c:	mov	r7, r1
   15030:	ldr	r3, [r1, #128]	; 0x80
   15034:	ldr	r9, [pc, #472]	; 15214 <__flatcc_fb_init_output_c@@Base+0x1ec>
   15038:	ldr	sl, [pc, #472]	; 15218 <__flatcc_fb_init_output_c@@Base+0x1f0>
   1503c:	cmp	r3, #0
   15040:	mov	r6, r0
   15044:	add	r9, pc, r9
   15048:	add	sl, pc, sl
   1504c:	ldreq	sl, [pc, #456]	; 1521c <__flatcc_fb_init_output_c@@Base+0x1f4>
   15050:	addeq	sl, pc, sl
   15054:	ldr	r8, [r7, #216]	; 0xd8
   15058:	cmp	r8, #0
   1505c:	beq	15190 <__flatcc_fb_init_output_c@@Base+0x168>
   15060:	mov	r2, #232	; 0xe8
   15064:	mov	r1, #0
   15068:	mov	r0, r6
   1506c:	bl	13f94 <memset@plt>
   15070:	ldr	r4, [r7, #196]	; 0xc4
   15074:	str	r7, [r6, #212]	; 0xd4
   15078:	cmp	r4, #0
   1507c:	beq	151a4 <__flatcc_fb_init_output_c@@Base+0x17c>
   15080:	mov	r0, r4
   15084:	bl	13f70 <strlen@plt>
   15088:	cmp	r0, #100	; 0x64
   1508c:	mov	fp, r0
   15090:	bhi	151ec <__flatcc_fb_init_output_c@@Base+0x1c4>
   15094:	mov	r1, r4
   15098:	mov	r2, #100	; 0x64
   1509c:	mov	r0, r6
   150a0:	bl	13fa0 <strncpy@plt>
   150a4:	mov	r3, #0
   150a8:	cmp	fp, #0
   150ac:	strb	r3, [r6, #100]	; 0x64
   150b0:	bne	1515c <__flatcc_fb_init_output_c@@Base+0x134>
   150b4:	ldrb	r4, [r6]
   150b8:	add	r5, r6, #102	; 0x66
   150bc:	cmp	r4, #0
   150c0:	beq	1519c <__flatcc_fb_init_output_c@@Base+0x174>
   150c4:	bl	13f4c <__ctype_toupper_loc@plt>
   150c8:	mov	r3, r5
   150cc:	mov	r2, r6
   150d0:	ldr	r1, [r0]
   150d4:	ldr	r1, [r1, r4, lsl #2]
   150d8:	strb	r1, [r3], #1
   150dc:	ldrb	r4, [r2, #1]!
   150e0:	cmp	r4, #0
   150e4:	bne	150d0 <__flatcc_fb_init_output_c@@Base+0xa8>
   150e8:	add	fp, r6, fp
   150ec:	mov	r2, #0
   150f0:	strb	r2, [r3]
   150f4:	strb	r2, [fp, #102]	; 0x66
   150f8:	ldr	r4, [r7, #108]	; 0x6c
   150fc:	ldr	r3, [r7, #176]	; 0xb0
   15100:	cmp	r4, r2
   15104:	str	r3, [r6, #224]	; 0xe0
   15108:	bne	15174 <__flatcc_fb_init_output_c@@Base+0x14c>
   1510c:	ldr	r3, [r6, #212]	; 0xd4
   15110:	ldr	r1, [r3, #124]	; 0x7c
   15114:	cmp	r1, #0
   15118:	beq	15154 <__flatcc_fb_init_output_c@@Base+0x12c>
   1511c:	ldr	r2, [pc, #252]	; 15220 <__flatcc_fb_init_output_c@@Base+0x1f8>
   15120:	mov	r0, r8
   15124:	mov	r3, #1
   15128:	add	r2, pc, r2
   1512c:	bl	2cd9c <__flatcc_fb_create_join_path@@Base>
   15130:	subs	r5, r0, #0
   15134:	beq	15210 <__flatcc_fb_init_output_c@@Base+0x1e8>
   15138:	mov	r1, sl
   1513c:	bl	13ebc <fopen@plt>
   15140:	cmp	r0, #0
   15144:	str	r0, [r6, #204]	; 0xcc
   15148:	beq	151c8 <__flatcc_fb_init_output_c@@Base+0x1a0>
   1514c:	mov	r0, r5
   15150:	bl	13ec8 <free@plt>
   15154:	mov	r0, r4
   15158:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1515c:	add	r1, fp, #1
   15160:	mov	r2, #95	; 0x5f
   15164:	mov	r3, #0
   15168:	strb	r2, [r6, fp]
   1516c:	strb	r3, [r6, r1]
   15170:	b	150b4 <__flatcc_fb_init_output_c@@Base+0x8c>
   15174:	ldr	r3, [pc, #168]	; 15224 <__flatcc_fb_init_output_c@@Base+0x1fc>
   15178:	mov	r4, r2
   1517c:	mov	r0, r4
   15180:	ldr	r3, [r9, r3]
   15184:	ldr	r3, [r3]
   15188:	str	r3, [r6, #204]	; 0xcc
   1518c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15190:	ldr	r8, [pc, #144]	; 15228 <__flatcc_fb_init_output_c@@Base+0x200>
   15194:	add	r8, pc, r8
   15198:	b	15060 <__flatcc_fb_init_output_c@@Base+0x38>
   1519c:	mov	r3, r5
   151a0:	b	150e8 <__flatcc_fb_init_output_c@@Base+0xc0>
   151a4:	ldr	r1, [pc, #128]	; 1522c <__flatcc_fb_init_output_c@@Base+0x204>
   151a8:	mov	r2, #100	; 0x64
   151ac:	add	r1, pc, r1
   151b0:	mov	r0, r6
   151b4:	bl	13fa0 <strncpy@plt>
   151b8:	mov	fp, #11
   151bc:	strb	r4, [r6, #100]	; 0x64
   151c0:	mov	r1, #12
   151c4:	b	15160 <__flatcc_fb_init_output_c@@Base+0x138>
   151c8:	ldr	r3, [pc, #96]	; 15230 <__flatcc_fb_init_output_c@@Base+0x208>
   151cc:	ldr	r1, [pc, #96]	; 15234 <__flatcc_fb_init_output_c@@Base+0x20c>
   151d0:	mov	r2, r5
   151d4:	ldr	r3, [r9, r3]
   151d8:	add	r1, pc, r1
   151dc:	mvn	r4, #0
   151e0:	ldr	r0, [r3]
   151e4:	bl	13f7c <fprintf@plt>
   151e8:	b	1514c <__flatcc_fb_init_output_c@@Base+0x124>
   151ec:	ldr	r3, [pc, #60]	; 15230 <__flatcc_fb_init_output_c@@Base+0x208>
   151f0:	ldr	r1, [pc, #64]	; 15238 <__flatcc_fb_init_output_c@@Base+0x210>
   151f4:	mov	r2, #100	; 0x64
   151f8:	ldr	r3, [r9, r3]
   151fc:	add	r1, pc, r1
   15200:	mvn	r4, #0
   15204:	ldr	r0, [r3]
   15208:	bl	13f7c <fprintf@plt>
   1520c:	b	15154 <__flatcc_fb_init_output_c@@Base+0x12c>
   15210:	bl	14040 <__assert_fail@plt+0x10>
   15214:			; <UNDEFINED> instruction: 0x00054fb4
   15218:	andeq	sl, r2, r8, asr #9
   1521c:	andeq	sl, r2, r0, ror #8
   15220:	andeq	r4, r3, r0, asr #11
   15224:	andeq	r0, r0, r8, lsr #1
   15228:	andeq	r4, r3, r4, asr r5
   1522c:	andeq	sl, r2, r0, lsr #7
   15230:	muleq	r0, ip, r0
   15234:	andeq	sl, r2, r4, lsl r3
   15238:	andeq	sl, r2, r8, lsl r3

0001523c <__flatcc_fb_gen_c_includes@@Base>:
   1523c:	ldr	ip, [r0, #208]	; 0xd0
   15240:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15244:	sub	sp, sp, #36	; 0x24
   15248:	add	r7, sp, #16
   1524c:	mov	r3, #0
   15250:	mov	r6, r0
   15254:	ldr	r0, [ip, #164]	; 0xa4
   15258:	ldr	r4, [ip]
   1525c:	str	r1, [sp, #8]
   15260:	str	r3, [r7, #4]
   15264:	mov	fp, r2
   15268:	str	r3, [sp, #16]
   1526c:	str	r3, [r7, #8]
   15270:	str	r3, [r7, #12]
   15274:	bl	2cbd4 <__flatcc_fb_copy_path@@Base>
   15278:	mov	r2, #1
   1527c:	mov	r1, r0
   15280:	mov	r0, r7
   15284:	bl	2a740 <str_set_insert_item@@Base>
   15288:	cmp	r4, #0
   1528c:	beq	15328 <__flatcc_fb_gen_c_includes@@Base+0xec>
   15290:	ldr	r3, [pc, #220]	; 15374 <__flatcc_fb_gen_c_includes@@Base+0x138>
   15294:	mov	r8, #1
   15298:	add	r3, pc, r3
   1529c:	str	r3, [sp, #12]
   152a0:	ldr	r3, [r6, #212]	; 0xd4
   152a4:	ldr	r1, [r4, #12]
   152a8:	ldr	r0, [r4, #8]
   152ac:	ldr	r2, [r3, #96]	; 0x60
   152b0:	bl	2d018 <__flatcc_fb_create_basename@@Base>
   152b4:	subs	r5, r0, #0
   152b8:	beq	15370 <__flatcc_fb_gen_c_includes@@Base+0x134>
   152bc:	ldr	r4, [r4]
   152c0:	bl	2cbd4 <__flatcc_fb_copy_path@@Base>
   152c4:	subs	r9, r0, #0
   152c8:	beq	15370 <__flatcc_fb_gen_c_includes@@Base+0x134>
   152cc:	ldrb	sl, [r9]
   152d0:	cmp	sl, #0
   152d4:	beq	152f8 <__flatcc_fb_gen_c_includes@@Base+0xbc>
   152d8:	bl	13f4c <__ctype_toupper_loc@plt>
   152dc:	mov	r1, r9
   152e0:	ldr	ip, [r0]
   152e4:	ldr	r2, [ip, sl, lsl #2]
   152e8:	strb	r2, [r1]
   152ec:	ldrb	sl, [r1, #1]!
   152f0:	cmp	sl, #0
   152f4:	bne	152e0 <__flatcc_fb_gen_c_includes@@Base+0xa4>
   152f8:	mov	r2, r8
   152fc:	mov	r1, r9
   15300:	mov	r0, r7
   15304:	bl	2a740 <str_set_insert_item@@Base>
   15308:	cmp	r0, #0
   1530c:	beq	15344 <__flatcc_fb_gen_c_includes@@Base+0x108>
   15310:	mov	r0, r9
   15314:	bl	13ec8 <free@plt>
   15318:	mov	r0, r5
   1531c:	bl	13ec8 <free@plt>
   15320:	cmp	r4, #0
   15324:	bne	152a0 <__flatcc_fb_gen_c_includes@@Base+0x64>
   15328:	ldr	r1, [pc, #72]	; 15378 <__flatcc_fb_gen_c_includes@@Base+0x13c>
   1532c:	mov	r0, r7
   15330:	mov	r2, #0
   15334:	add	r1, pc, r1
   15338:	bl	2a678 <str_set_destroy@@Base>
   1533c:	add	sp, sp, #36	; 0x24
   15340:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15344:	ldr	r3, [sp, #8]
   15348:	ldr	r0, [r6, #204]	; 0xcc
   1534c:	mov	r2, r9
   15350:	str	r3, [sp, #4]
   15354:	str	r5, [sp]
   15358:	mov	r3, fp
   1535c:	ldr	r1, [sp, #12]
   15360:	bl	13f7c <fprintf@plt>
   15364:	mov	r0, r5
   15368:	bl	13ec8 <free@plt>
   1536c:	b	15320 <__flatcc_fb_gen_c_includes@@Base+0xe4>
   15370:	bl	14040 <__assert_fail@plt+0x10>
   15374:	andeq	sl, r2, r0, asr #5
   15378:			; <UNDEFINED> instruction: 0xfffffb68

0001537c <__flatcc_fb_copy_scope@@Base>:
   1537c:	ldr	r3, [r0]
   15380:	push	{r4, r5, r6, r7, r8, lr}
   15384:	cmp	r3, #0
   15388:	ldr	r6, [r0, #24]
   1538c:	mov	ip, r6
   15390:	beq	153b0 <__flatcc_fb_copy_scope@@Base+0x34>
   15394:	ldr	r2, [r3, #4]
   15398:	ldr	r3, [r3]
   1539c:	ldr	r2, [r2, #4]
   153a0:	cmp	r3, #0
   153a4:	add	r2, r2, #1
   153a8:	add	ip, ip, r2
   153ac:	bne	15394 <__flatcc_fb_copy_scope@@Base+0x18>
   153b0:	cmp	ip, #101	; 0x65
   153b4:	bhi	1541c <__flatcc_fb_copy_scope@@Base+0xa0>
   153b8:	mov	r7, r1
   153bc:	mov	r4, r0
   153c0:	ldr	r1, [r0, #20]
   153c4:	mov	r2, r6
   153c8:	mov	r0, r7
   153cc:	bl	13ed4 <memcpy@plt>
   153d0:	ldr	r5, [r4]
   153d4:	cmp	r5, #0
   153d8:	beq	1540c <__flatcc_fb_copy_scope@@Base+0x90>
   153dc:	mov	r8, #95	; 0x5f
   153e0:	ldr	r3, [r5, #4]
   153e4:	add	r0, r7, r6
   153e8:	ldm	r3, {r1, r4}
   153ec:	mov	r2, r4
   153f0:	add	r4, r4, r6
   153f4:	bl	13ed4 <memcpy@plt>
   153f8:	strb	r8, [r7, r4]
   153fc:	ldr	r5, [r5]
   15400:	add	r6, r4, #1
   15404:	cmp	r5, #0
   15408:	bne	153e0 <__flatcc_fb_copy_scope@@Base+0x64>
   1540c:	mov	r3, #0
   15410:	mov	r0, r6
   15414:	strb	r3, [r7, r6]
   15418:	pop	{r4, r5, r6, r7, r8, pc}
   1541c:	mov	r3, #0
   15420:	strb	r3, [r1]
   15424:	mvn	r0, #0
   15428:	pop	{r4, r5, r6, r7, r8, pc}

0001542c <__flatcc_fb_scoped_symbol_name@@Base>:
   1542c:	ldr	r3, [r2, #204]	; 0xcc
   15430:	push	{r4, r5, r6, lr}
   15434:	cmp	r3, r0
   15438:	ldr	r6, [pc, #180]	; 154f4 <__flatcc_fb_scoped_symbol_name@@Base+0xc8>
   1543c:	mov	r4, r2
   15440:	ldr	r5, [r1, #4]
   15444:	add	r6, pc, r6
   15448:	beq	154ec <__flatcc_fb_scoped_symbol_name@@Base+0xc0>
   1544c:	mov	r1, r2
   15450:	bl	1537c <__flatcc_fb_copy_scope@@Base>
   15454:	cmp	r0, #0
   15458:	str	r0, [r4, #208]	; 0xd0
   1545c:	blt	154c4 <__flatcc_fb_scoped_symbol_name@@Base+0x98>
   15460:	ldr	r2, [r5, #4]
   15464:	add	r3, r2, r0
   15468:	cmp	r3, #203	; 0xcb
   1546c:	str	r2, [r4, #212]	; 0xd4
   15470:	str	r3, [r4, #216]	; 0xd8
   15474:	ble	154a8 <__flatcc_fb_scoped_symbol_name@@Base+0x7c>
   15478:	ldr	r1, [pc, #120]	; 154f8 <__flatcc_fb_scoped_symbol_name@@Base+0xcc>
   1547c:	ldr	r3, [r5]
   15480:	ldr	r0, [r6, r1]
   15484:	ldr	r1, [pc, #112]	; 154fc <__flatcc_fb_scoped_symbol_name@@Base+0xd0>
   15488:	ldr	r0, [r0]
   1548c:	add	r1, pc, r1
   15490:	bl	13f7c <fprintf@plt>
   15494:	ldr	r0, [r4, #208]	; 0xd0
   15498:	mov	r3, #203	; 0xcb
   1549c:	sub	r2, r3, r0
   154a0:	str	r2, [r4, #212]	; 0xd4
   154a4:	str	r3, [r4, #216]	; 0xd8
   154a8:	ldr	r1, [r5]
   154ac:	add	r0, r4, r0
   154b0:	bl	13ed4 <memcpy@plt>
   154b4:	ldr	r3, [r4, #216]	; 0xd8
   154b8:	mov	r2, #0
   154bc:	strb	r2, [r4, r3]
   154c0:	pop	{r4, r5, r6, pc}
   154c4:	ldr	r3, [pc, #44]	; 154f8 <__flatcc_fb_scoped_symbol_name@@Base+0xcc>
   154c8:	mov	r2, #0
   154cc:	str	r2, [r4, #208]	; 0xd0
   154d0:	ldr	r3, [r6, r3]
   154d4:	ldr	r0, [pc, #36]	; 15500 <__flatcc_fb_scoped_symbol_name@@Base+0xd4>
   154d8:	mov	r2, #28
   154dc:	mov	r1, #1
   154e0:	ldr	r3, [r3]
   154e4:	add	r0, pc, r0
   154e8:	bl	13f10 <fwrite@plt>
   154ec:	ldr	r0, [r4, #208]	; 0xd0
   154f0:	b	15460 <__flatcc_fb_scoped_symbol_name@@Base+0x34>
   154f4:			; <UNDEFINED> instruction: 0x00054bb4
   154f8:	muleq	r0, ip, r0
   154fc:	andeq	sl, r2, r4, lsl r1
   15500:	muleq	r2, ip, r0

00015504 <__flatcc_fb_codegen_common_c@@Base>:
   15504:	push	{r4, r5, r6, lr}
   15508:	mov	r4, r0
   1550c:	bl	13f70 <strlen@plt>
   15510:	ldr	r3, [r4, #212]	; 0xd4
   15514:	ldr	r2, [r3, #144]	; 0x90
   15518:	cmp	r2, #0
   1551c:	sub	r6, r0, #1
   15520:	bne	15570 <__flatcc_fb_codegen_common_c@@Base+0x6c>
   15524:	ldr	r5, [r3, #148]	; 0x94
   15528:	cmp	r5, #0
   1552c:	bne	15538 <__flatcc_fb_codegen_common_c@@Base+0x34>
   15530:	mov	r0, r5
   15534:	pop	{r4, r5, r6, pc}
   15538:	ldr	r3, [pc, #124]	; 155bc <__flatcc_fb_codegen_common_c@@Base+0xb8>
   1553c:	mov	r2, r6
   15540:	add	r3, pc, r3
   15544:	mov	r1, r4
   15548:	mov	r0, r4
   1554c:	bl	14eac <__flatcc_fb_open_output_file@@Base>
   15550:	subs	r5, r0, #0
   15554:	bne	155b4 <__flatcc_fb_codegen_common_c@@Base+0xb0>
   15558:	mov	r0, r4
   1555c:	bl	1e6fc <__flatcc_fb_gen_common_c_builder_header@@Base>
   15560:	mov	r0, r4
   15564:	bl	14fa4 <__flatcc_fb_close_output_file@@Base>
   15568:	mov	r0, r5
   1556c:	pop	{r4, r5, r6, pc}
   15570:	ldr	r3, [pc, #72]	; 155c0 <__flatcc_fb_codegen_common_c@@Base+0xbc>
   15574:	mov	r2, r6
   15578:	add	r3, pc, r3
   1557c:	mov	r1, r4
   15580:	mov	r0, r4
   15584:	bl	14eac <__flatcc_fb_open_output_file@@Base>
   15588:	cmp	r0, #0
   1558c:	bne	155b4 <__flatcc_fb_codegen_common_c@@Base+0xb0>
   15590:	mov	r0, r4
   15594:	bl	19854 <__flatcc_fb_gen_common_c_header@@Base>
   15598:	mov	r5, r0
   1559c:	mov	r0, r4
   155a0:	bl	14fa4 <__flatcc_fb_close_output_file@@Base>
   155a4:	cmp	r5, #0
   155a8:	bne	15530 <__flatcc_fb_codegen_common_c@@Base+0x2c>
   155ac:	ldr	r3, [r4, #212]	; 0xd4
   155b0:	b	15524 <__flatcc_fb_codegen_common_c@@Base+0x20>
   155b4:	mvn	r5, #0
   155b8:	b	15530 <__flatcc_fb_codegen_common_c@@Base+0x2c>
   155bc:	muleq	r2, ip, r0
   155c0:	andeq	sl, r2, r0, asr r0

000155c4 <__flatcc_fb_codegen_c@@Base>:
   155c4:	mov	r2, #0
   155c8:	push	{r4, r5, r6, lr}
   155cc:	mov	r4, r0
   155d0:	str	r1, [r0, #208]	; 0xd0
   155d4:	ldr	r0, [r1, #60]	; 0x3c
   155d8:	mov	r1, r2
   155dc:	bl	2c404 <fb_scope_table_find@@Base>
   155e0:	ldr	r3, [r4, #208]	; 0xd0
   155e4:	ldr	r5, [r3, #160]	; 0xa0
   155e8:	str	r0, [r4, #216]	; 0xd8
   155ec:	mov	r0, r5
   155f0:	bl	13f70 <strlen@plt>
   155f4:	ldr	r3, [r4, #212]	; 0xd4
   155f8:	ldr	r2, [r3, #152]	; 0x98
   155fc:	cmp	r2, #0
   15600:	mov	r6, r0
   15604:	bne	15640 <__flatcc_fb_codegen_c@@Base+0x7c>
   15608:	ldr	r2, [r3, #156]	; 0x9c
   1560c:	cmp	r2, #0
   15610:	bne	15688 <__flatcc_fb_codegen_c@@Base+0xc4>
   15614:	ldr	r2, [r3, #160]	; 0xa0
   15618:	cmp	r2, #0
   1561c:	bne	156cc <__flatcc_fb_codegen_c@@Base+0x108>
   15620:	ldr	r2, [r3, #164]	; 0xa4
   15624:	cmp	r2, #0
   15628:	bne	15710 <__flatcc_fb_codegen_c@@Base+0x14c>
   1562c:	ldr	r5, [r3, #168]	; 0xa8
   15630:	cmp	r5, #0
   15634:	bne	15754 <__flatcc_fb_codegen_c@@Base+0x190>
   15638:	mov	r0, r5
   1563c:	pop	{r4, r5, r6, pc}
   15640:	ldr	r3, [pc, #340]	; 1579c <__flatcc_fb_codegen_c@@Base+0x1d8>
   15644:	mov	r2, r0
   15648:	mov	r1, r5
   1564c:	add	r3, pc, r3
   15650:	mov	r0, r4
   15654:	bl	14eac <__flatcc_fb_open_output_file@@Base>
   15658:	cmp	r0, #0
   1565c:	bne	15794 <__flatcc_fb_codegen_c@@Base+0x1d0>
   15660:	mov	r0, r4
   15664:	bl	1a5f8 <__flatcc_fb_gen_c_reader@@Base>
   15668:	subs	r5, r0, #0
   1566c:	bne	15638 <__flatcc_fb_codegen_c@@Base+0x74>
   15670:	mov	r0, r4
   15674:	bl	14fa4 <__flatcc_fb_close_output_file@@Base>
   15678:	ldr	r3, [r4, #212]	; 0xd4
   1567c:	ldr	r2, [r3, #156]	; 0x9c
   15680:	cmp	r2, #0
   15684:	beq	15614 <__flatcc_fb_codegen_c@@Base+0x50>
   15688:	ldr	r1, [r4, #208]	; 0xd0
   1568c:	ldr	r3, [pc, #268]	; 157a0 <__flatcc_fb_codegen_c@@Base+0x1dc>
   15690:	mov	r2, r6
   15694:	add	r3, pc, r3
   15698:	ldr	r1, [r1, #160]	; 0xa0
   1569c:	mov	r0, r4
   156a0:	bl	14eac <__flatcc_fb_open_output_file@@Base>
   156a4:	cmp	r0, #0
   156a8:	bne	15794 <__flatcc_fb_codegen_c@@Base+0x1d0>
   156ac:	mov	r0, r4
   156b0:	bl	1f12c <__flatcc_fb_gen_c_builder@@Base>
   156b4:	subs	r5, r0, #0
   156b8:	bne	15638 <__flatcc_fb_codegen_c@@Base+0x74>
   156bc:	mov	r0, r4
   156c0:	bl	14fa4 <__flatcc_fb_close_output_file@@Base>
   156c4:	ldr	r3, [r4, #212]	; 0xd4
   156c8:	b	15614 <__flatcc_fb_codegen_c@@Base+0x50>
   156cc:	ldr	r1, [r4, #208]	; 0xd0
   156d0:	ldr	r3, [pc, #204]	; 157a4 <__flatcc_fb_codegen_c@@Base+0x1e0>
   156d4:	mov	r2, r6
   156d8:	add	r3, pc, r3
   156dc:	ldr	r1, [r1, #160]	; 0xa0
   156e0:	mov	r0, r4
   156e4:	bl	14eac <__flatcc_fb_open_output_file@@Base>
   156e8:	cmp	r0, #0
   156ec:	bne	15794 <__flatcc_fb_codegen_c@@Base+0x1d0>
   156f0:	mov	r0, r4
   156f4:	bl	2022c <__flatcc_fb_gen_c_verifier@@Base>
   156f8:	subs	r5, r0, #0
   156fc:	bne	15638 <__flatcc_fb_codegen_c@@Base+0x74>
   15700:	mov	r0, r4
   15704:	bl	14fa4 <__flatcc_fb_close_output_file@@Base>
   15708:	ldr	r3, [r4, #212]	; 0xd4
   1570c:	b	15620 <__flatcc_fb_codegen_c@@Base+0x5c>
   15710:	ldr	r1, [r4, #208]	; 0xd0
   15714:	ldr	r3, [pc, #140]	; 157a8 <__flatcc_fb_codegen_c@@Base+0x1e4>
   15718:	mov	r2, r6
   1571c:	add	r3, pc, r3
   15720:	ldr	r1, [r1, #160]	; 0xa0
   15724:	mov	r0, r4
   15728:	bl	14eac <__flatcc_fb_open_output_file@@Base>
   1572c:	cmp	r0, #0
   15730:	bne	15794 <__flatcc_fb_codegen_c@@Base+0x1d0>
   15734:	mov	r0, r4
   15738:	bl	2420c <__flatcc_fb_gen_c_json_parser@@Base>
   1573c:	subs	r5, r0, #0
   15740:	bne	15638 <__flatcc_fb_codegen_c@@Base+0x74>
   15744:	mov	r0, r4
   15748:	bl	14fa4 <__flatcc_fb_close_output_file@@Base>
   1574c:	ldr	r3, [r4, #212]	; 0xd4
   15750:	b	1562c <__flatcc_fb_codegen_c@@Base+0x68>
   15754:	ldr	r1, [r4, #208]	; 0xd0
   15758:	ldr	r3, [pc, #76]	; 157ac <__flatcc_fb_codegen_c@@Base+0x1e8>
   1575c:	mov	r2, r6
   15760:	add	r3, pc, r3
   15764:	ldr	r1, [r1, #160]	; 0xa0
   15768:	mov	r0, r4
   1576c:	bl	14eac <__flatcc_fb_open_output_file@@Base>
   15770:	cmp	r0, #0
   15774:	bne	15794 <__flatcc_fb_codegen_c@@Base+0x1d0>
   15778:	mov	r0, r4
   1577c:	bl	27fa0 <__flatcc_fb_gen_c_json_printer@@Base>
   15780:	subs	r5, r0, #0
   15784:	bne	15638 <__flatcc_fb_codegen_c@@Base+0x74>
   15788:	mov	r0, r4
   1578c:	bl	14fa4 <__flatcc_fb_close_output_file@@Base>
   15790:	b	15638 <__flatcc_fb_codegen_c@@Base+0x74>
   15794:	mvn	r5, #0
   15798:	b	15638 <__flatcc_fb_codegen_c@@Base+0x74>
   1579c:	andeq	r9, r2, r8, ror sp
   157a0:	andeq	r9, r2, ip, asr pc
   157a4:	andeq	r9, r2, r4, lsr #30
   157a8:	andeq	r9, r2, ip, ror #29
   157ac:			; <UNDEFINED> instruction: 0x00029eb8
   157b0:	push	{r4, r5, r6, lr}
   157b4:	sub	sp, sp, #224	; 0xe0
   157b8:	mov	r5, r1
   157bc:	add	r4, sp, #4
   157c0:	mov	r6, r0
   157c4:	mov	r2, #220	; 0xdc
   157c8:	mov	r0, r4
   157cc:	mov	r1, #0
   157d0:	bl	13f94 <memset@plt>
   157d4:	ldrh	r3, [r5, #8]
   157d8:	cmp	r3, #1
   157dc:	bhi	158f0 <__flatcc_fb_codegen_c@@Base+0x32c>
   157e0:	mov	r2, r4
   157e4:	mov	r1, r5
   157e8:	ldr	r0, [r5, #12]
   157ec:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   157f0:	ldrh	r3, [r5, #8]
   157f4:	cmp	r3, #1
   157f8:	beq	1584c <__flatcc_fb_codegen_c@@Base+0x288>
   157fc:	ldr	r1, [pc, #268]	; 15910 <__flatcc_fb_codegen_c@@Base+0x34c>
   15800:	mov	r3, r4
   15804:	mov	r2, r4
   15808:	add	r1, pc, r1
   1580c:	ldr	r0, [r6, #204]	; 0xcc
   15810:	bl	13f7c <fprintf@plt>
   15814:	ldr	r1, [pc, #248]	; 15914 <__flatcc_fb_codegen_c@@Base+0x350>
   15818:	mov	r3, r4
   1581c:	mov	r2, r6
   15820:	add	r1, pc, r1
   15824:	ldr	r0, [r6, #204]	; 0xcc
   15828:	bl	13f7c <fprintf@plt>
   1582c:	ldr	r1, [pc, #228]	; 15918 <__flatcc_fb_codegen_c@@Base+0x354>
   15830:	mov	r3, r4
   15834:	mov	r2, r6
   15838:	ldr	r0, [r6, #204]	; 0xcc
   1583c:	add	r1, pc, r1
   15840:	bl	13f7c <fprintf@plt>
   15844:	add	sp, sp, #224	; 0xe0
   15848:	pop	{r4, r5, r6, pc}
   1584c:	ldrd	r2, [r5, #112]	; 0x70
   15850:	orrs	r3, r2, r3
   15854:	bne	158d4 <__flatcc_fb_codegen_c@@Base+0x310>
   15858:	ldr	r1, [pc, #188]	; 1591c <__flatcc_fb_codegen_c@@Base+0x358>
   1585c:	mov	r2, r4
   15860:	add	r1, pc, r1
   15864:	ldr	r0, [r6, #204]	; 0xcc
   15868:	bl	13f7c <fprintf@plt>
   1586c:	ldr	r1, [pc, #172]	; 15920 <__flatcc_fb_codegen_c@@Base+0x35c>
   15870:	mov	r3, r4
   15874:	mov	r2, r4
   15878:	add	r1, pc, r1
   1587c:	ldr	r0, [r6, #204]	; 0xcc
   15880:	bl	13f7c <fprintf@plt>
   15884:	ldr	r1, [pc, #152]	; 15924 <__flatcc_fb_codegen_c@@Base+0x360>
   15888:	mov	r3, r4
   1588c:	mov	r2, r4
   15890:	add	r1, pc, r1
   15894:	ldr	r0, [r6, #204]	; 0xcc
   15898:	bl	13f7c <fprintf@plt>
   1589c:	ldr	r1, [pc, #132]	; 15928 <__flatcc_fb_codegen_c@@Base+0x364>
   158a0:	mov	r3, r4
   158a4:	mov	r2, r4
   158a8:	add	r1, pc, r1
   158ac:	ldr	r0, [r6, #204]	; 0xcc
   158b0:	bl	13f7c <fprintf@plt>
   158b4:	ldr	r1, [pc, #112]	; 1592c <__flatcc_fb_codegen_c@@Base+0x368>
   158b8:	mov	r3, r4
   158bc:	mov	r2, r4
   158c0:	ldr	r0, [r6, #204]	; 0xcc
   158c4:	add	r1, pc, r1
   158c8:	bl	13f7c <fprintf@plt>
   158cc:	add	sp, sp, #224	; 0xe0
   158d0:	pop	{r4, r5, r6, pc}
   158d4:	ldr	r1, [pc, #84]	; 15930 <__flatcc_fb_codegen_c@@Base+0x36c>
   158d8:	mov	r3, r4
   158dc:	mov	r2, r4
   158e0:	add	r1, pc, r1
   158e4:	ldr	r0, [r6, #204]	; 0xcc
   158e8:	bl	13f7c <fprintf@plt>
   158ec:	b	1586c <__flatcc_fb_codegen_c@@Base+0x2a8>
   158f0:	ldr	r3, [pc, #60]	; 15934 <__flatcc_fb_codegen_c@@Base+0x370>
   158f4:	ldr	r1, [pc, #60]	; 15938 <__flatcc_fb_codegen_c@@Base+0x374>
   158f8:	ldr	r0, [pc, #60]	; 1593c <__flatcc_fb_codegen_c@@Base+0x378>
   158fc:	add	r3, pc, r3
   15900:	ldr	r2, [pc, #56]	; 15940 <__flatcc_fb_codegen_c@@Base+0x37c>
   15904:	add	r1, pc, r1
   15908:	add	r0, pc, r0
   1590c:	bl	14030 <__assert_fail@plt>
   15910:	andeq	sl, r2, ip, asr r0
   15914:	andeq	sl, r2, r0, ror r0
   15918:	andeq	sl, r2, ip, ror r0
   1591c:	andeq	r9, r2, r4, lsr pc
   15920:	andeq	r9, r2, r0, ror #30
   15924:	andeq	r9, r2, ip, ror #30
   15928:	andeq	r9, r2, r8, ror pc
   1592c:	andeq	r9, r2, ip, ror pc
   15930:	ldrdeq	r9, [r2], -ip
   15934:	andeq	r9, r2, ip, lsr #26
   15938:	andeq	r9, r2, r4, ror #27
   1593c:	andeq	r9, r2, r8, asr #28
   15940:	andeq	r0, r0, pc, asr r3
   15944:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15948:	sub	sp, sp, #372	; 0x174
   1594c:	mov	r5, r1
   15950:	add	r9, sp, #148	; 0x94
   15954:	str	r1, [sp, #20]
   15958:	mov	r2, #220	; 0xdc
   1595c:	mov	r4, r0
   15960:	mov	r1, #0
   15964:	mov	r0, r9
   15968:	bl	13f94 <memset@plt>
   1596c:	ldrh	r3, [r5, #8]
   15970:	ldr	r2, [pc, #3084]	; 16584 <__flatcc_fb_codegen_c@@Base+0xfc0>
   15974:	str	r3, [sp, #36]	; 0x24
   15978:	sub	r3, r3, #3
   1597c:	add	r2, pc, r2
   15980:	cmp	r3, #1
   15984:	str	r2, [sp, #44]	; 0x2c
   15988:	bhi	16560 <__flatcc_fb_codegen_c@@Base+0xf9c>
   1598c:	ldr	r3, [sp, #20]
   15990:	ldrh	r3, [r3, #48]	; 0x30
   15994:	cmp	r3, #8
   15998:	bne	1653c <__flatcc_fb_codegen_c@@Base+0xf78>
   1599c:	ldr	r3, [sp, #20]
   159a0:	ldr	r3, [r3, #40]	; 0x28
   159a4:	cmp	r3, #5
   159a8:	beq	159e8 <__flatcc_fb_codegen_c@@Base+0x424>
   159ac:	sub	r3, r3, #1
   159b0:	cmp	r3, #10
   159b4:	addls	pc, pc, r3, lsl #2
   159b8:	b	16324 <__flatcc_fb_codegen_c@@Base+0xd60>
   159bc:	b	16158 <__flatcc_fb_codegen_c@@Base+0xb94>
   159c0:	b	1613c <__flatcc_fb_codegen_c@@Base+0xb78>
   159c4:	b	16174 <__flatcc_fb_codegen_c@@Base+0xbb0>
   159c8:	b	160e8 <__flatcc_fb_codegen_c@@Base+0xb24>
   159cc:	b	16324 <__flatcc_fb_codegen_c@@Base+0xd60>
   159d0:	b	16120 <__flatcc_fb_codegen_c@@Base+0xb5c>
   159d4:	b	16078 <__flatcc_fb_codegen_c@@Base+0xab4>
   159d8:	b	16094 <__flatcc_fb_codegen_c@@Base+0xad0>
   159dc:	b	160b0 <__flatcc_fb_codegen_c@@Base+0xaec>
   159e0:	b	160cc <__flatcc_fb_codegen_c@@Base+0xb08>
   159e4:	b	16104 <__flatcc_fb_codegen_c@@Base+0xb40>
   159e8:	ldr	r3, [pc, #2968]	; 16588 <__flatcc_fb_codegen_c@@Base+0xfc4>
   159ec:	str	r4, [sp, #24]
   159f0:	add	r3, pc, r3
   159f4:	str	r3, [sp, #16]
   159f8:	ldr	r3, [sp, #20]
   159fc:	ldr	r2, [sp, #36]	; 0x24
   15a00:	ldr	r5, [sp, #20]
   15a04:	ldr	r3, [r3, #112]	; 0x70
   15a08:	cmp	r2, #3
   15a0c:	mov	r1, r5
   15a10:	lsl	r3, r3, #3
   15a14:	str	r3, [sp, #32]
   15a18:	mov	r2, r9
   15a1c:	ldr	r0, [r5, #12]
   15a20:	beq	16058 <__flatcc_fb_codegen_c@@Base+0xa94>
   15a24:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   15a28:	ldr	r5, [r5, #32]
   15a2c:	cmp	r5, #0
   15a30:	beq	163a4 <__flatcc_fb_codegen_c@@Base+0xde0>
   15a34:	ldr	r3, [pc, #2896]	; 1658c <__flatcc_fb_codegen_c@@Base+0xfc8>
   15a38:	add	r3, pc, r3
   15a3c:	str	r3, [sp, #28]
   15a40:	ldr	r2, [pc, #2888]	; 16590 <__flatcc_fb_codegen_c@@Base+0xfcc>
   15a44:	ldr	fp, [pc, #2888]	; 16594 <__flatcc_fb_codegen_c@@Base+0xfd0>
   15a48:	ldr	sl, [pc, #2888]	; 16598 <__flatcc_fb_codegen_c@@Base+0xfd4>
   15a4c:	ldr	r8, [pc, #2888]	; 1659c <__flatcc_fb_codegen_c@@Base+0xfd8>
   15a50:	ldr	r7, [pc, #2888]	; 165a0 <__flatcc_fb_codegen_c@@Base+0xfdc>
   15a54:	mov	r3, #0
   15a58:	add	r2, pc, r2
   15a5c:	str	r9, [sp, #40]	; 0x28
   15a60:	add	fp, pc, fp
   15a64:	add	sl, pc, sl
   15a68:	add	r8, pc, r8
   15a6c:	add	r7, pc, r7
   15a70:	mov	r6, r3
   15a74:	mov	r0, #1
   15a78:	mov	r9, r2
   15a7c:	ldr	r2, [r5, #4]
   15a80:	ldr	r1, [r2, #8]
   15a84:	cmp	r1, r3
   15a88:	beq	15aac <__flatcc_fb_codegen_c@@Base+0x4e8>
   15a8c:	cmp	r0, #0
   15a90:	movne	r2, r9
   15a94:	moveq	r2, fp
   15a98:	movne	r1, r8
   15a9c:	moveq	r1, sl
   15aa0:	ldr	r0, [r4, #204]	; 0xcc
   15aa4:	bl	13f7c <fprintf@plt>
   15aa8:	ldr	r2, [r5, #4]
   15aac:	ldr	r3, [r2]
   15ab0:	mov	r1, r7
   15ab4:	ldr	r2, [r2, #4]
   15ab8:	ldr	r0, [r4, #204]	; 0xcc
   15abc:	bl	13f7c <fprintf@plt>
   15ac0:	ldr	r3, [r5, #4]
   15ac4:	ldr	r5, [r5]
   15ac8:	mov	r0, r6
   15acc:	cmp	r5, #0
   15ad0:	ldr	r3, [r3, #8]
   15ad4:	bne	15a7c <__flatcc_fb_codegen_c@@Base+0x4b8>
   15ad8:	ldr	r0, [pc, #2756]	; 165a4 <__flatcc_fb_codegen_c@@Base+0xfe0>
   15adc:	ldr	r3, [r4, #204]	; 0xcc
   15ae0:	mov	r2, #4
   15ae4:	mov	r1, #1
   15ae8:	add	r0, pc, r0
   15aec:	ldr	r9, [sp, #40]	; 0x28
   15af0:	bl	13f10 <fwrite@plt>
   15af4:	ldr	r5, [sp, #28]
   15af8:	ldr	r1, [pc, #2728]	; 165a8 <__flatcc_fb_codegen_c@@Base+0xfe4>
   15afc:	ldr	r0, [r4, #204]	; 0xcc
   15b00:	ldr	r3, [sp, #16]
   15b04:	ldr	r2, [sp, #24]
   15b08:	add	r1, pc, r1
   15b0c:	str	r5, [sp, #4]
   15b10:	str	r9, [sp]
   15b14:	bl	13f7c <fprintf@plt>
   15b18:	ldr	r3, [sp, #32]
   15b1c:	ldr	r1, [pc, #2696]	; 165ac <__flatcc_fb_codegen_c@@Base+0xfe8>
   15b20:	ldr	r0, [r4, #204]	; 0xcc
   15b24:	mov	r2, r4
   15b28:	str	r3, [sp, #8]
   15b2c:	str	r5, [sp, #4]
   15b30:	mov	r3, r9
   15b34:	str	r9, [sp]
   15b38:	add	r1, pc, r1
   15b3c:	bl	13f7c <fprintf@plt>
   15b40:	ldr	r3, [sp, #36]	; 0x24
   15b44:	cmp	r3, #3
   15b48:	beq	15fa4 <__flatcc_fb_codegen_c@@Base+0x9e0>
   15b4c:	ldr	r1, [pc, #2652]	; 165b0 <__flatcc_fb_codegen_c@@Base+0xfec>
   15b50:	ldr	r0, [r4, #204]	; 0xcc
   15b54:	mov	r3, r4
   15b58:	str	r9, [sp]
   15b5c:	mov	r2, r4
   15b60:	add	r1, pc, r1
   15b64:	bl	13f7c <fprintf@plt>
   15b68:	ldr	r3, [sp, #20]
   15b6c:	ldr	r6, [r3, #20]
   15b70:	cmp	r6, #0
   15b74:	beq	16504 <__flatcc_fb_codegen_c@@Base+0xf40>
   15b78:	ldr	r3, [pc, #2612]	; 165b4 <__flatcc_fb_codegen_c@@Base+0xff0>
   15b7c:	ldr	sl, [pc, #2612]	; 165b8 <__flatcc_fb_codegen_c@@Base+0xff4>
   15b80:	add	r3, pc, r3
   15b84:	str	r3, [sp, #16]
   15b88:	ldr	r3, [pc, #2604]	; 165bc <__flatcc_fb_codegen_c@@Base+0xff8>
   15b8c:	ldr	fp, [pc, #2604]	; 165c0 <__flatcc_fb_codegen_c@@Base+0xffc>
   15b90:	ldr	r5, [pc, #2604]	; 165c4 <__flatcc_fb_codegen_c@@Base+0x1000>
   15b94:	add	r3, pc, r3
   15b98:	ldr	r2, [pc, #2600]	; 165c8 <__flatcc_fb_codegen_c@@Base+0x1004>
   15b9c:	str	r9, [sp, #40]	; 0x28
   15ba0:	add	sl, pc, sl
   15ba4:	add	fp, pc, fp
   15ba8:	add	r5, pc, r5
   15bac:	mov	r9, r3
   15bb0:	add	r2, pc, r2
   15bb4:	str	r2, [sp, #32]
   15bb8:	ldr	r7, [r6, #68]	; 0x44
   15bbc:	cmp	r7, #0
   15bc0:	beq	15c40 <__flatcc_fb_codegen_c@@Base+0x67c>
   15bc4:	mov	r3, #0
   15bc8:	mov	r8, r3
   15bcc:	mov	r0, #1
   15bd0:	ldr	r2, [r7, #4]
   15bd4:	ldr	r1, [r2, #8]
   15bd8:	cmp	r1, r3
   15bdc:	beq	15c00 <__flatcc_fb_codegen_c@@Base+0x63c>
   15be0:	cmp	r0, #0
   15be4:	moveq	r2, sl
   15be8:	ldrne	r2, [sp, #16]
   15bec:	movne	r1, r9
   15bf0:	moveq	r1, fp
   15bf4:	ldr	r0, [r4, #204]	; 0xcc
   15bf8:	bl	13f7c <fprintf@plt>
   15bfc:	ldr	r2, [r7, #4]
   15c00:	ldr	r3, [r2]
   15c04:	mov	r1, r5
   15c08:	ldr	r2, [r2, #4]
   15c0c:	ldr	r0, [r4, #204]	; 0xcc
   15c10:	bl	13f7c <fprintf@plt>
   15c14:	ldr	r3, [r7, #4]
   15c18:	ldr	r7, [r7]
   15c1c:	mov	r0, r8
   15c20:	cmp	r7, #0
   15c24:	ldr	r3, [r3, #8]
   15c28:	bne	15bd0 <__flatcc_fb_codegen_c@@Base+0x60c>
   15c2c:	ldr	r3, [r4, #204]	; 0xcc
   15c30:	mov	r2, #4
   15c34:	mov	r1, #1
   15c38:	ldr	r0, [sp, #32]
   15c3c:	bl	13f10 <fwrite@plt>
   15c40:	ldr	r1, [r6, #4]
   15c44:	ldrh	r3, [r6, #56]	; 0x38
   15c48:	ldr	r2, [sp, #20]
   15c4c:	ldr	r0, [r1]
   15c50:	sub	r3, r3, #3
   15c54:	ldr	r2, [r2, #40]	; 0x28
   15c58:	str	r0, [sp, #24]
   15c5c:	ldr	r8, [r1, #4]
   15c60:	cmp	r3, #3
   15c64:	addls	pc, pc, r3, lsl #2
   15c68:	b	15ef8 <__flatcc_fb_codegen_c@@Base+0x934>
   15c6c:	b	15d18 <__flatcc_fb_codegen_c@@Base+0x754>
   15c70:	b	15ce4 <__flatcc_fb_codegen_c@@Base+0x720>
   15c74:	b	15cb0 <__flatcc_fb_codegen_c@@Base+0x6ec>
   15c78:	b	15c7c <__flatcc_fb_codegen_c@@Base+0x6b8>
   15c7c:	sub	r2, r2, #1
   15c80:	cmp	r2, #8
   15c84:	addls	pc, pc, r2, lsl #2
   15c88:	b	16454 <__flatcc_fb_codegen_c@@Base+0xe90>
   15c8c:	b	16228 <__flatcc_fb_codegen_c@@Base+0xc64>
   15c90:	b	161e0 <__flatcc_fb_codegen_c@@Base+0xc1c>
   15c94:	b	16258 <__flatcc_fb_codegen_c@@Base+0xc94>
   15c98:	b	1624c <__flatcc_fb_codegen_c@@Base+0xc88>
   15c9c:	b	16240 <__flatcc_fb_codegen_c@@Base+0xc7c>
   15ca0:	b	16234 <__flatcc_fb_codegen_c@@Base+0xc70>
   15ca4:	b	1627c <__flatcc_fb_codegen_c@@Base+0xcb8>
   15ca8:	b	16270 <__flatcc_fb_codegen_c@@Base+0xcac>
   15cac:	b	16264 <__flatcc_fb_codegen_c@@Base+0xca0>
   15cb0:	sub	r2, r2, #1
   15cb4:	cmp	r2, #8
   15cb8:	addls	pc, pc, r2, lsl #2
   15cbc:	b	164ac <__flatcc_fb_codegen_c@@Base+0xee8>
   15cc0:	b	1621c <__flatcc_fb_codegen_c@@Base+0xc58>
   15cc4:	b	161b8 <__flatcc_fb_codegen_c@@Base+0xbf4>
   15cc8:	b	16210 <__flatcc_fb_codegen_c@@Base+0xc4c>
   15ccc:	b	16204 <__flatcc_fb_codegen_c@@Base+0xc40>
   15cd0:	b	162c4 <__flatcc_fb_codegen_c@@Base+0xd00>
   15cd4:	b	162b8 <__flatcc_fb_codegen_c@@Base+0xcf4>
   15cd8:	b	162ac <__flatcc_fb_codegen_c@@Base+0xce8>
   15cdc:	b	162a0 <__flatcc_fb_codegen_c@@Base+0xcdc>
   15ce0:	b	16294 <__flatcc_fb_codegen_c@@Base+0xcd0>
   15ce4:	sub	r2, r2, #1
   15ce8:	cmp	r2, #8
   15cec:	addls	pc, pc, r2, lsl #2
   15cf0:	b	163fc <__flatcc_fb_codegen_c@@Base+0xe38>
   15cf4:	b	16288 <__flatcc_fb_codegen_c@@Base+0xcc4>
   15cf8:	b	16190 <__flatcc_fb_codegen_c@@Base+0xbcc>
   15cfc:	b	16318 <__flatcc_fb_codegen_c@@Base+0xd54>
   15d00:	b	1630c <__flatcc_fb_codegen_c@@Base+0xd48>
   15d04:	b	16300 <__flatcc_fb_codegen_c@@Base+0xd3c>
   15d08:	b	162f4 <__flatcc_fb_codegen_c@@Base+0xd30>
   15d0c:	b	162e8 <__flatcc_fb_codegen_c@@Base+0xd24>
   15d10:	b	162dc <__flatcc_fb_codegen_c@@Base+0xd18>
   15d14:	b	162d0 <__flatcc_fb_codegen_c@@Base+0xd0c>
   15d18:	cmp	r2, #11
   15d1c:	beq	1637c <__flatcc_fb_codegen_c@@Base+0xdb8>
   15d20:	ldr	r1, [pc, #2212]	; 165cc <__flatcc_fb_codegen_c@@Base+0x1008>
   15d24:	add	r7, sp, #48	; 0x30
   15d28:	mov	r0, r7
   15d2c:	ldrd	r2, [r6, #48]	; 0x30
   15d30:	add	r1, pc, r1
   15d34:	bl	13fe8 <sprintf@plt>
   15d38:	ldr	r3, [sp, #28]
   15d3c:	ldr	r0, [r4, #204]	; 0xcc
   15d40:	ldr	r2, [sp, #40]	; 0x28
   15d44:	str	r3, [sp, #8]
   15d48:	ldr	r1, [pc, #2176]	; 165d0 <__flatcc_fb_codegen_c@@Base+0x100c>
   15d4c:	ldr	r3, [sp, #24]
   15d50:	str	r7, [sp, #12]
   15d54:	str	r3, [sp]
   15d58:	str	r2, [sp, #4]
   15d5c:	mov	r3, r8
   15d60:	add	r1, pc, r1
   15d64:	bl	13f7c <fprintf@plt>
   15d68:	ldr	r6, [r6]
   15d6c:	cmp	r6, #0
   15d70:	bne	15bb8 <__flatcc_fb_codegen_c@@Base+0x5f4>
   15d74:	ldr	r1, [r4, #204]	; 0xcc
   15d78:	mov	r0, #10
   15d7c:	ldr	r9, [sp, #40]	; 0x28
   15d80:	bl	13fdc <fputc@plt>
   15d84:	ldr	r3, [sp, #36]	; 0x24
   15d88:	cmp	r3, #3
   15d8c:	beq	15fc0 <__flatcc_fb_codegen_c@@Base+0x9fc>
   15d90:	ldr	r1, [pc, #2108]	; 165d4 <__flatcc_fb_codegen_c@@Base+0x1010>
   15d94:	mov	r3, r9
   15d98:	mov	r2, r9
   15d9c:	add	r1, pc, r1
   15da0:	ldr	r0, [r4, #204]	; 0xcc
   15da4:	bl	13f7c <fprintf@plt>
   15da8:	ldr	r0, [pc, #2088]	; 165d8 <__flatcc_fb_codegen_c@@Base+0x1014>
   15dac:	ldr	r3, [r4, #204]	; 0xcc
   15db0:	mov	r2, #20
   15db4:	mov	r1, #1
   15db8:	add	r0, pc, r0
   15dbc:	bl	13f10 <fwrite@plt>
   15dc0:	ldr	r3, [sp, #20]
   15dc4:	ldr	r5, [r3, #20]
   15dc8:	cmp	r5, #0
   15dcc:	beq	16514 <__flatcc_fb_codegen_c@@Base+0xf50>
   15dd0:	ldr	r7, [pc, #2052]	; 165dc <__flatcc_fb_codegen_c@@Base+0x1018>
   15dd4:	ldr	r6, [pc, #2052]	; 165e0 <__flatcc_fb_codegen_c@@Base+0x101c>
   15dd8:	add	r7, pc, r7
   15ddc:	add	r6, pc, r6
   15de0:	ldrh	r2, [r5, #10]
   15de4:	ldr	r3, [r5, #4]
   15de8:	ldr	r0, [r4, #204]	; 0xcc
   15dec:	tst	r2, #4
   15df0:	ldm	r3, {r2, r3}
   15df4:	movne	r1, r6
   15df8:	moveq	r1, r7
   15dfc:	str	r2, [sp, #8]
   15e00:	stm	sp, {r2, r3}
   15e04:	mov	r2, r9
   15e08:	bl	13f7c <fprintf@plt>
   15e0c:	ldr	r5, [r5]
   15e10:	cmp	r5, #0
   15e14:	bne	15de0 <__flatcc_fb_codegen_c@@Base+0x81c>
   15e18:	ldr	r0, [pc, #1988]	; 165e4 <__flatcc_fb_codegen_c@@Base+0x1020>
   15e1c:	ldr	r3, [r4, #204]	; 0xcc
   15e20:	mov	r2, #32
   15e24:	mov	r1, #1
   15e28:	add	r0, pc, r0
   15e2c:	bl	13f10 <fwrite@plt>
   15e30:	ldr	r1, [r4, #204]	; 0xcc
   15e34:	mov	r0, #10
   15e38:	bl	13fdc <fputc@plt>
   15e3c:	ldr	r3, [sp, #36]	; 0x24
   15e40:	cmp	r3, #3
   15e44:	beq	16024 <__flatcc_fb_codegen_c@@Base+0xa60>
   15e48:	ldr	r1, [pc, #1944]	; 165e8 <__flatcc_fb_codegen_c@@Base+0x1024>
   15e4c:	mov	r3, r9
   15e50:	mov	r2, r9
   15e54:	add	r1, pc, r1
   15e58:	ldr	r0, [r4, #204]	; 0xcc
   15e5c:	bl	13f7c <fprintf@plt>
   15e60:	ldr	r0, [pc, #1924]	; 165ec <__flatcc_fb_codegen_c@@Base+0x1028>
   15e64:	ldr	r3, [r4, #204]	; 0xcc
   15e68:	mov	r2, #20
   15e6c:	mov	r1, #1
   15e70:	add	r0, pc, r0
   15e74:	bl	13f10 <fwrite@plt>
   15e78:	ldr	r3, [sp, #20]
   15e7c:	ldr	r7, [pc, #1900]	; 165f0 <__flatcc_fb_codegen_c@@Base+0x102c>
   15e80:	ldr	r6, [pc, #1900]	; 165f4 <__flatcc_fb_codegen_c@@Base+0x1030>
   15e84:	ldr	r5, [r3, #20]
   15e88:	add	r7, pc, r7
   15e8c:	cmp	r5, #0
   15e90:	add	r6, pc, r6
   15e94:	beq	15ecc <__flatcc_fb_codegen_c@@Base+0x908>
   15e98:	ldrh	r2, [r5, #10]
   15e9c:	ldr	r3, [r5, #4]
   15ea0:	ldr	r0, [r4, #204]	; 0xcc
   15ea4:	tst	r2, #4
   15ea8:	ldm	r3, {r2, r3}
   15eac:	movne	r1, r6
   15eb0:	moveq	r1, r7
   15eb4:	str	r2, [sp]
   15eb8:	mov	r2, r9
   15ebc:	bl	13f7c <fprintf@plt>
   15ec0:	ldr	r5, [r5]
   15ec4:	cmp	r5, #0
   15ec8:	bne	15e98 <__flatcc_fb_codegen_c@@Base+0x8d4>
   15ecc:	ldr	r0, [pc, #1828]	; 165f8 <__flatcc_fb_codegen_c@@Base+0x1034>
   15ed0:	ldr	r3, [r4, #204]	; 0xcc
   15ed4:	mov	r2, #31
   15ed8:	mov	r1, #1
   15edc:	add	r0, pc, r0
   15ee0:	bl	13f10 <fwrite@plt>
   15ee4:	ldr	r1, [r4, #204]	; 0xcc
   15ee8:	mov	r0, #10
   15eec:	bl	13fdc <fputc@plt>
   15ef0:	add	sp, sp, #372	; 0x174
   15ef4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15ef8:	ldr	r2, [pc, #1788]	; 165fc <__flatcc_fb_codegen_c@@Base+0x1038>
   15efc:	ldr	r1, [sp, #44]	; 0x2c
   15f00:	ldr	r3, [pc, #1784]	; 16600 <__flatcc_fb_codegen_c@@Base+0x103c>
   15f04:	ldr	r4, [pc, #1784]	; 16604 <__flatcc_fb_codegen_c@@Base+0x1040>
   15f08:	ldr	r1, [r1, r2]
   15f0c:	add	r3, pc, r3
   15f10:	str	r3, [sp]
   15f14:	ldr	r0, [r1]
   15f18:	ldr	r1, [pc, #1768]	; 16608 <__flatcc_fb_codegen_c@@Base+0x1044>
   15f1c:	add	r4, pc, r4
   15f20:	mov	r2, r4
   15f24:	mov	r3, #260	; 0x104
   15f28:	add	r1, pc, r1
   15f2c:	bl	13f7c <fprintf@plt>
   15f30:	ldr	r3, [pc, #1748]	; 1660c <__flatcc_fb_codegen_c@@Base+0x1048>
   15f34:	ldr	r0, [pc, #1748]	; 16610 <__flatcc_fb_codegen_c@@Base+0x104c>
   15f38:	add	r3, pc, r3
   15f3c:	mov	r1, r4
   15f40:	add	r3, r3, #64	; 0x40
   15f44:	mov	r2, #260	; 0x104
   15f48:	add	r0, pc, r0
   15f4c:	bl	14030 <__assert_fail@plt>
   15f50:	ldr	r5, [pc, #1724]	; 16614 <__flatcc_fb_codegen_c@@Base+0x1050>
   15f54:	ldr	r1, [pc, #1724]	; 16618 <__flatcc_fb_codegen_c@@Base+0x1054>
   15f58:	add	r5, pc, r5
   15f5c:	ldr	r0, [r4, #204]	; 0xcc
   15f60:	ldr	r3, [sp, #16]
   15f64:	ldr	r2, [sp, #24]
   15f68:	add	r1, pc, r1
   15f6c:	str	r9, [sp]
   15f70:	str	r5, [sp, #4]
   15f74:	bl	13f7c <fprintf@plt>
   15f78:	ldr	r3, [sp, #32]
   15f7c:	ldr	r1, [pc, #1688]	; 1661c <__flatcc_fb_codegen_c@@Base+0x1058>
   15f80:	ldr	r0, [r4, #204]	; 0xcc
   15f84:	mov	r2, r4
   15f88:	str	r3, [sp, #8]
   15f8c:	str	r5, [sp, #4]
   15f90:	str	r9, [sp]
   15f94:	mov	r3, r9
   15f98:	add	r1, pc, r1
   15f9c:	str	r5, [sp, #28]
   15fa0:	bl	13f7c <fprintf@plt>
   15fa4:	ldr	r3, [sp, #20]
   15fa8:	ldr	r6, [r3, #20]
   15fac:	cmp	r6, #0
   15fb0:	bne	15b78 <__flatcc_fb_codegen_c@@Base+0x5b4>
   15fb4:	ldr	r1, [r4, #204]	; 0xcc
   15fb8:	mov	r0, #10
   15fbc:	bl	13fdc <fputc@plt>
   15fc0:	ldr	r1, [pc, #1624]	; 16620 <__flatcc_fb_codegen_c@@Base+0x105c>
   15fc4:	mov	r3, r9
   15fc8:	mov	r2, r9
   15fcc:	add	r1, pc, r1
   15fd0:	ldr	r0, [r4, #204]	; 0xcc
   15fd4:	bl	13f7c <fprintf@plt>
   15fd8:	ldr	r0, [pc, #1604]	; 16624 <__flatcc_fb_codegen_c@@Base+0x1060>
   15fdc:	ldr	r3, [r4, #204]	; 0xcc
   15fe0:	mov	r2, #21
   15fe4:	mov	r1, #1
   15fe8:	add	r0, pc, r0
   15fec:	bl	13f10 <fwrite@plt>
   15ff0:	ldr	r3, [sp, #20]
   15ff4:	ldr	r5, [r3, #20]
   15ff8:	cmp	r5, #0
   15ffc:	bne	15dd0 <__flatcc_fb_codegen_c@@Base+0x80c>
   16000:	ldr	r0, [pc, #1568]	; 16628 <__flatcc_fb_codegen_c@@Base+0x1064>
   16004:	mov	r1, #1
   16008:	ldr	r3, [r4, #204]	; 0xcc
   1600c:	mov	r2, #32
   16010:	add	r0, pc, r0
   16014:	bl	13f10 <fwrite@plt>
   16018:	ldr	r1, [r4, #204]	; 0xcc
   1601c:	mov	r0, #10
   16020:	bl	13fdc <fputc@plt>
   16024:	ldr	r1, [pc, #1536]	; 1662c <__flatcc_fb_codegen_c@@Base+0x1068>
   16028:	mov	r3, r9
   1602c:	mov	r2, r9
   16030:	add	r1, pc, r1
   16034:	ldr	r0, [r4, #204]	; 0xcc
   16038:	bl	13f7c <fprintf@plt>
   1603c:	ldr	r0, [pc, #1516]	; 16630 <__flatcc_fb_codegen_c@@Base+0x106c>
   16040:	ldr	r3, [r4, #204]	; 0xcc
   16044:	mov	r2, #21
   16048:	mov	r1, #1
   1604c:	add	r0, pc, r0
   16050:	bl	13f10 <fwrite@plt>
   16054:	b	15e78 <__flatcc_fb_codegen_c@@Base+0x8b4>
   16058:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   1605c:	ldr	r5, [r5, #32]
   16060:	cmp	r5, #0
   16064:	beq	15f50 <__flatcc_fb_codegen_c@@Base+0x98c>
   16068:	ldr	r3, [pc, #1476]	; 16634 <__flatcc_fb_codegen_c@@Base+0x1070>
   1606c:	add	r3, pc, r3
   16070:	str	r3, [sp, #28]
   16074:	b	15a40 <__flatcc_fb_codegen_c@@Base+0x47c>
   16078:	ldr	r3, [pc, #1464]	; 16638 <__flatcc_fb_codegen_c@@Base+0x1074>
   1607c:	add	r3, pc, r3
   16080:	str	r3, [sp, #24]
   16084:	ldr	r3, [pc, #1456]	; 1663c <__flatcc_fb_codegen_c@@Base+0x1078>
   16088:	add	r3, pc, r3
   1608c:	str	r3, [sp, #16]
   16090:	b	159f8 <__flatcc_fb_codegen_c@@Base+0x434>
   16094:	ldr	r3, [pc, #1444]	; 16640 <__flatcc_fb_codegen_c@@Base+0x107c>
   16098:	add	r3, pc, r3
   1609c:	str	r3, [sp, #24]
   160a0:	ldr	r3, [pc, #1436]	; 16644 <__flatcc_fb_codegen_c@@Base+0x1080>
   160a4:	add	r3, pc, r3
   160a8:	str	r3, [sp, #16]
   160ac:	b	159f8 <__flatcc_fb_codegen_c@@Base+0x434>
   160b0:	ldr	r3, [pc, #1424]	; 16648 <__flatcc_fb_codegen_c@@Base+0x1084>
   160b4:	add	r3, pc, r3
   160b8:	str	r3, [sp, #24]
   160bc:	ldr	r3, [pc, #1416]	; 1664c <__flatcc_fb_codegen_c@@Base+0x1088>
   160c0:	add	r3, pc, r3
   160c4:	str	r3, [sp, #16]
   160c8:	b	159f8 <__flatcc_fb_codegen_c@@Base+0x434>
   160cc:	ldr	r3, [pc, #1404]	; 16650 <__flatcc_fb_codegen_c@@Base+0x108c>
   160d0:	add	r3, pc, r3
   160d4:	str	r3, [sp, #24]
   160d8:	ldr	r3, [pc, #1396]	; 16654 <__flatcc_fb_codegen_c@@Base+0x1090>
   160dc:	add	r3, pc, r3
   160e0:	str	r3, [sp, #16]
   160e4:	b	159f8 <__flatcc_fb_codegen_c@@Base+0x434>
   160e8:	ldr	r3, [pc, #1384]	; 16658 <__flatcc_fb_codegen_c@@Base+0x1094>
   160ec:	add	r3, pc, r3
   160f0:	str	r3, [sp, #24]
   160f4:	ldr	r3, [pc, #1376]	; 1665c <__flatcc_fb_codegen_c@@Base+0x1098>
   160f8:	add	r3, pc, r3
   160fc:	str	r3, [sp, #16]
   16100:	b	159f8 <__flatcc_fb_codegen_c@@Base+0x434>
   16104:	ldr	r3, [pc, #1364]	; 16660 <__flatcc_fb_codegen_c@@Base+0x109c>
   16108:	add	r3, pc, r3
   1610c:	str	r3, [sp, #24]
   16110:	ldr	r3, [pc, #1356]	; 16664 <__flatcc_fb_codegen_c@@Base+0x10a0>
   16114:	add	r3, pc, r3
   16118:	str	r3, [sp, #16]
   1611c:	b	159f8 <__flatcc_fb_codegen_c@@Base+0x434>
   16120:	ldr	r3, [pc, #1344]	; 16668 <__flatcc_fb_codegen_c@@Base+0x10a4>
   16124:	add	r3, pc, r3
   16128:	str	r3, [sp, #24]
   1612c:	ldr	r3, [pc, #1336]	; 1666c <__flatcc_fb_codegen_c@@Base+0x10a8>
   16130:	add	r3, pc, r3
   16134:	str	r3, [sp, #16]
   16138:	b	159f8 <__flatcc_fb_codegen_c@@Base+0x434>
   1613c:	ldr	r3, [pc, #1324]	; 16670 <__flatcc_fb_codegen_c@@Base+0x10ac>
   16140:	add	r3, pc, r3
   16144:	str	r3, [sp, #24]
   16148:	ldr	r3, [pc, #1316]	; 16674 <__flatcc_fb_codegen_c@@Base+0x10b0>
   1614c:	add	r3, pc, r3
   16150:	str	r3, [sp, #16]
   16154:	b	159f8 <__flatcc_fb_codegen_c@@Base+0x434>
   16158:	ldr	r3, [pc, #1304]	; 16678 <__flatcc_fb_codegen_c@@Base+0x10b4>
   1615c:	add	r3, pc, r3
   16160:	str	r3, [sp, #24]
   16164:	ldr	r3, [pc, #1296]	; 1667c <__flatcc_fb_codegen_c@@Base+0x10b8>
   16168:	add	r3, pc, r3
   1616c:	str	r3, [sp, #16]
   16170:	b	159f8 <__flatcc_fb_codegen_c@@Base+0x434>
   16174:	ldr	r3, [pc, #1284]	; 16680 <__flatcc_fb_codegen_c@@Base+0x10bc>
   16178:	add	r3, pc, r3
   1617c:	str	r3, [sp, #24]
   16180:	ldr	r3, [pc, #1276]	; 16684 <__flatcc_fb_codegen_c@@Base+0x10c0>
   16184:	add	r3, pc, r3
   16188:	str	r3, [sp, #16]
   1618c:	b	159f8 <__flatcc_fb_codegen_c@@Base+0x434>
   16190:	ldr	r2, [pc, #1264]	; 16688 <__flatcc_fb_codegen_c@@Base+0x10c4>
   16194:	add	r2, pc, r2
   16198:	ldrd	r0, [r6, #48]	; 0x30
   1619c:	add	r7, sp, #48	; 0x30
   161a0:	strd	r0, [sp]
   161a4:	ldr	r1, [pc, #1248]	; 1668c <__flatcc_fb_codegen_c@@Base+0x10c8>
   161a8:	mov	r0, r7
   161ac:	add	r1, pc, r1
   161b0:	bl	13fe8 <sprintf@plt>
   161b4:	b	15d38 <__flatcc_fb_codegen_c@@Base+0x774>
   161b8:	ldr	r2, [pc, #1232]	; 16690 <__flatcc_fb_codegen_c@@Base+0x10cc>
   161bc:	add	r2, pc, r2
   161c0:	ldrd	r0, [r6, #48]	; 0x30
   161c4:	add	r7, sp, #48	; 0x30
   161c8:	strd	r0, [sp]
   161cc:	ldr	r1, [pc, #1216]	; 16694 <__flatcc_fb_codegen_c@@Base+0x10d0>
   161d0:	mov	r0, r7
   161d4:	add	r1, pc, r1
   161d8:	bl	13fe8 <sprintf@plt>
   161dc:	b	15d38 <__flatcc_fb_codegen_c@@Base+0x774>
   161e0:	ldr	r2, [pc, #1200]	; 16698 <__flatcc_fb_codegen_c@@Base+0x10d4>
   161e4:	add	r2, pc, r2
   161e8:	ldr	r1, [pc, #1196]	; 1669c <__flatcc_fb_codegen_c@@Base+0x10d8>
   161ec:	add	r7, sp, #48	; 0x30
   161f0:	mov	r0, r7
   161f4:	ldrb	r3, [r6, #48]	; 0x30
   161f8:	add	r1, pc, r1
   161fc:	bl	13fe8 <sprintf@plt>
   16200:	b	15d38 <__flatcc_fb_codegen_c@@Base+0x774>
   16204:	ldr	r2, [pc, #1172]	; 166a0 <__flatcc_fb_codegen_c@@Base+0x10dc>
   16208:	add	r2, pc, r2
   1620c:	b	161c0 <__flatcc_fb_codegen_c@@Base+0xbfc>
   16210:	ldr	r2, [pc, #1164]	; 166a4 <__flatcc_fb_codegen_c@@Base+0x10e0>
   16214:	add	r2, pc, r2
   16218:	b	161c0 <__flatcc_fb_codegen_c@@Base+0xbfc>
   1621c:	ldr	r2, [pc, #1156]	; 166a8 <__flatcc_fb_codegen_c@@Base+0x10e4>
   16220:	add	r2, pc, r2
   16224:	b	161c0 <__flatcc_fb_codegen_c@@Base+0xbfc>
   16228:	ldr	r2, [pc, #1148]	; 166ac <__flatcc_fb_codegen_c@@Base+0x10e8>
   1622c:	add	r2, pc, r2
   16230:	b	161e8 <__flatcc_fb_codegen_c@@Base+0xc24>
   16234:	ldr	r2, [pc, #1140]	; 166b0 <__flatcc_fb_codegen_c@@Base+0x10ec>
   16238:	add	r2, pc, r2
   1623c:	b	161e8 <__flatcc_fb_codegen_c@@Base+0xc24>
   16240:	ldr	r2, [pc, #1132]	; 166b4 <__flatcc_fb_codegen_c@@Base+0x10f0>
   16244:	add	r2, pc, r2
   16248:	b	161e8 <__flatcc_fb_codegen_c@@Base+0xc24>
   1624c:	ldr	r2, [pc, #1124]	; 166b8 <__flatcc_fb_codegen_c@@Base+0x10f4>
   16250:	add	r2, pc, r2
   16254:	b	161e8 <__flatcc_fb_codegen_c@@Base+0xc24>
   16258:	ldr	r2, [pc, #1116]	; 166bc <__flatcc_fb_codegen_c@@Base+0x10f8>
   1625c:	add	r2, pc, r2
   16260:	b	161e8 <__flatcc_fb_codegen_c@@Base+0xc24>
   16264:	ldr	r2, [pc, #1108]	; 166c0 <__flatcc_fb_codegen_c@@Base+0x10fc>
   16268:	add	r2, pc, r2
   1626c:	b	161e8 <__flatcc_fb_codegen_c@@Base+0xc24>
   16270:	ldr	r2, [pc, #1100]	; 166c4 <__flatcc_fb_codegen_c@@Base+0x1100>
   16274:	add	r2, pc, r2
   16278:	b	161e8 <__flatcc_fb_codegen_c@@Base+0xc24>
   1627c:	ldr	r2, [pc, #1092]	; 166c8 <__flatcc_fb_codegen_c@@Base+0x1104>
   16280:	add	r2, pc, r2
   16284:	b	161e8 <__flatcc_fb_codegen_c@@Base+0xc24>
   16288:	ldr	r2, [pc, #1084]	; 166cc <__flatcc_fb_codegen_c@@Base+0x1108>
   1628c:	add	r2, pc, r2
   16290:	b	16198 <__flatcc_fb_codegen_c@@Base+0xbd4>
   16294:	ldr	r2, [pc, #1076]	; 166d0 <__flatcc_fb_codegen_c@@Base+0x110c>
   16298:	add	r2, pc, r2
   1629c:	b	161c0 <__flatcc_fb_codegen_c@@Base+0xbfc>
   162a0:	ldr	r2, [pc, #1068]	; 166d4 <__flatcc_fb_codegen_c@@Base+0x1110>
   162a4:	add	r2, pc, r2
   162a8:	b	161c0 <__flatcc_fb_codegen_c@@Base+0xbfc>
   162ac:	ldr	r2, [pc, #1060]	; 166d8 <__flatcc_fb_codegen_c@@Base+0x1114>
   162b0:	add	r2, pc, r2
   162b4:	b	161c0 <__flatcc_fb_codegen_c@@Base+0xbfc>
   162b8:	ldr	r2, [pc, #1052]	; 166dc <__flatcc_fb_codegen_c@@Base+0x1118>
   162bc:	add	r2, pc, r2
   162c0:	b	161c0 <__flatcc_fb_codegen_c@@Base+0xbfc>
   162c4:	ldr	r2, [pc, #1044]	; 166e0 <__flatcc_fb_codegen_c@@Base+0x111c>
   162c8:	add	r2, pc, r2
   162cc:	b	161c0 <__flatcc_fb_codegen_c@@Base+0xbfc>
   162d0:	ldr	r2, [pc, #1036]	; 166e4 <__flatcc_fb_codegen_c@@Base+0x1120>
   162d4:	add	r2, pc, r2
   162d8:	b	16198 <__flatcc_fb_codegen_c@@Base+0xbd4>
   162dc:	ldr	r2, [pc, #1028]	; 166e8 <__flatcc_fb_codegen_c@@Base+0x1124>
   162e0:	add	r2, pc, r2
   162e4:	b	16198 <__flatcc_fb_codegen_c@@Base+0xbd4>
   162e8:	ldr	r2, [pc, #1020]	; 166ec <__flatcc_fb_codegen_c@@Base+0x1128>
   162ec:	add	r2, pc, r2
   162f0:	b	16198 <__flatcc_fb_codegen_c@@Base+0xbd4>
   162f4:	ldr	r2, [pc, #1012]	; 166f0 <__flatcc_fb_codegen_c@@Base+0x112c>
   162f8:	add	r2, pc, r2
   162fc:	b	16198 <__flatcc_fb_codegen_c@@Base+0xbd4>
   16300:	ldr	r2, [pc, #1004]	; 166f4 <__flatcc_fb_codegen_c@@Base+0x1130>
   16304:	add	r2, pc, r2
   16308:	b	16198 <__flatcc_fb_codegen_c@@Base+0xbd4>
   1630c:	ldr	r2, [pc, #996]	; 166f8 <__flatcc_fb_codegen_c@@Base+0x1134>
   16310:	add	r2, pc, r2
   16314:	b	16198 <__flatcc_fb_codegen_c@@Base+0xbd4>
   16318:	ldr	r2, [pc, #988]	; 166fc <__flatcc_fb_codegen_c@@Base+0x1138>
   1631c:	add	r2, pc, r2
   16320:	b	16198 <__flatcc_fb_codegen_c@@Base+0xbd4>
   16324:	ldr	r2, [pc, #720]	; 165fc <__flatcc_fb_codegen_c@@Base+0x1038>
   16328:	ldr	r1, [sp, #44]	; 0x2c
   1632c:	ldr	r3, [pc, #972]	; 16700 <__flatcc_fb_codegen_c@@Base+0x113c>
   16330:	ldr	r4, [pc, #972]	; 16704 <__flatcc_fb_codegen_c@@Base+0x1140>
   16334:	ldr	r1, [r1, r2]
   16338:	add	r3, pc, r3
   1633c:	str	r3, [sp]
   16340:	ldr	r0, [r1]
   16344:	ldr	r1, [pc, #956]	; 16708 <__flatcc_fb_codegen_c@@Base+0x1144>
   16348:	add	r4, pc, r4
   1634c:	mov	r2, r4
   16350:	mov	r3, #141	; 0x8d
   16354:	add	r1, pc, r1
   16358:	bl	13f7c <fprintf@plt>
   1635c:	ldr	r3, [pc, #936]	; 1670c <__flatcc_fb_codegen_c@@Base+0x1148>
   16360:	ldr	r0, [pc, #936]	; 16710 <__flatcc_fb_codegen_c@@Base+0x114c>
   16364:	add	r3, pc, r3
   16368:	mov	r1, r4
   1636c:	add	r3, r3, #32
   16370:	mov	r2, #141	; 0x8d
   16374:	add	r0, pc, r0
   16378:	bl	14030 <__assert_fail@plt>
   1637c:	vldr	d7, [r6, #48]	; 0x30
   16380:	ldr	r1, [pc, #908]	; 16714 <__flatcc_fb_codegen_c@@Base+0x1150>
   16384:	add	r7, sp, #48	; 0x30
   16388:	mov	r0, r7
   1638c:	vcvt.f32.f64	s14, d7
   16390:	add	r1, pc, r1
   16394:	vcvt.f64.f32	d7, s14
   16398:	vmov	r2, r3, d7
   1639c:	bl	13fe8 <sprintf@plt>
   163a0:	b	15d38 <__flatcc_fb_codegen_c@@Base+0x774>
   163a4:	ldr	r5, [pc, #876]	; 16718 <__flatcc_fb_codegen_c@@Base+0x1154>
   163a8:	ldr	r1, [pc, #876]	; 1671c <__flatcc_fb_codegen_c@@Base+0x1158>
   163ac:	add	r5, pc, r5
   163b0:	ldr	r0, [r4, #204]	; 0xcc
   163b4:	ldr	r3, [sp, #16]
   163b8:	ldr	r2, [sp, #24]
   163bc:	str	r9, [sp]
   163c0:	str	r5, [sp, #4]
   163c4:	add	r1, pc, r1
   163c8:	bl	13f7c <fprintf@plt>
   163cc:	ldr	r3, [sp, #32]
   163d0:	ldr	r1, [pc, #840]	; 16720 <__flatcc_fb_codegen_c@@Base+0x115c>
   163d4:	ldr	r0, [r4, #204]	; 0xcc
   163d8:	mov	r2, r4
   163dc:	str	r3, [sp, #8]
   163e0:	str	r5, [sp, #4]
   163e4:	str	r9, [sp]
   163e8:	mov	r3, r9
   163ec:	add	r1, pc, r1
   163f0:	str	r5, [sp, #28]
   163f4:	bl	13f7c <fprintf@plt>
   163f8:	b	15b4c <__flatcc_fb_codegen_c@@Base+0x588>
   163fc:	ldr	r2, [pc, #504]	; 165fc <__flatcc_fb_codegen_c@@Base+0x1038>
   16400:	ldr	r1, [sp, #44]	; 0x2c
   16404:	ldr	r3, [pc, #792]	; 16724 <__flatcc_fb_codegen_c@@Base+0x1160>
   16408:	ldr	r4, [pc, #792]	; 16728 <__flatcc_fb_codegen_c@@Base+0x1164>
   1640c:	ldr	r1, [r1, r2]
   16410:	add	r3, pc, r3
   16414:	str	r3, [sp]
   16418:	ldr	r0, [r1]
   1641c:	ldr	r1, [pc, #776]	; 1672c <__flatcc_fb_codegen_c@@Base+0x1168>
   16420:	add	r4, pc, r4
   16424:	mov	r2, r4
   16428:	mov	r3, #226	; 0xe2
   1642c:	add	r1, pc, r1
   16430:	bl	13f7c <fprintf@plt>
   16434:	ldr	r3, [pc, #756]	; 16730 <__flatcc_fb_codegen_c@@Base+0x116c>
   16438:	ldr	r0, [pc, #756]	; 16734 <__flatcc_fb_codegen_c@@Base+0x1170>
   1643c:	add	r3, pc, r3
   16440:	mov	r1, r4
   16444:	add	r3, r3, #52	; 0x34
   16448:	mov	r2, #226	; 0xe2
   1644c:	add	r0, pc, r0
   16450:	bl	14030 <__assert_fail@plt>
   16454:	ldr	r2, [pc, #416]	; 165fc <__flatcc_fb_codegen_c@@Base+0x1038>
   16458:	ldr	r1, [sp, #44]	; 0x2c
   1645c:	ldr	r3, [pc, #724]	; 16738 <__flatcc_fb_codegen_c@@Base+0x1174>
   16460:	ldr	r4, [pc, #724]	; 1673c <__flatcc_fb_codegen_c@@Base+0x1178>
   16464:	ldr	r1, [r1, r2]
   16468:	add	r3, pc, r3
   1646c:	str	r3, [sp]
   16470:	ldr	r0, [r1]
   16474:	ldr	r1, [pc, #708]	; 16740 <__flatcc_fb_codegen_c@@Base+0x117c>
   16478:	add	r4, pc, r4
   1647c:	mov	r2, r4
   16480:	mov	r3, #226	; 0xe2
   16484:	add	r1, pc, r1
   16488:	bl	13f7c <fprintf@plt>
   1648c:	ldr	r3, [pc, #688]	; 16744 <__flatcc_fb_codegen_c@@Base+0x1180>
   16490:	ldr	r0, [pc, #688]	; 16748 <__flatcc_fb_codegen_c@@Base+0x1184>
   16494:	add	r3, pc, r3
   16498:	mov	r1, r4
   1649c:	add	r3, r3, #52	; 0x34
   164a0:	mov	r2, #226	; 0xe2
   164a4:	add	r0, pc, r0
   164a8:	bl	14030 <__assert_fail@plt>
   164ac:	ldr	r2, [pc, #328]	; 165fc <__flatcc_fb_codegen_c@@Base+0x1038>
   164b0:	ldr	r1, [sp, #44]	; 0x2c
   164b4:	ldr	r3, [pc, #656]	; 1674c <__flatcc_fb_codegen_c@@Base+0x1188>
   164b8:	ldr	r4, [pc, #656]	; 16750 <__flatcc_fb_codegen_c@@Base+0x118c>
   164bc:	ldr	r1, [r1, r2]
   164c0:	add	r3, pc, r3
   164c4:	str	r3, [sp]
   164c8:	ldr	r0, [r1]
   164cc:	ldr	r1, [pc, #640]	; 16754 <__flatcc_fb_codegen_c@@Base+0x1190>
   164d0:	add	r4, pc, r4
   164d4:	mov	r2, r4
   164d8:	mov	r3, #226	; 0xe2
   164dc:	add	r1, pc, r1
   164e0:	bl	13f7c <fprintf@plt>
   164e4:	ldr	r3, [pc, #620]	; 16758 <__flatcc_fb_codegen_c@@Base+0x1194>
   164e8:	ldr	r0, [pc, #620]	; 1675c <__flatcc_fb_codegen_c@@Base+0x1198>
   164ec:	add	r3, pc, r3
   164f0:	mov	r1, r4
   164f4:	add	r3, r3, #52	; 0x34
   164f8:	mov	r2, #226	; 0xe2
   164fc:	add	r0, pc, r0
   16500:	bl	14030 <__assert_fail@plt>
   16504:	ldr	r1, [r4, #204]	; 0xcc
   16508:	mov	r0, #10
   1650c:	bl	13fdc <fputc@plt>
   16510:	b	15d90 <__flatcc_fb_codegen_c@@Base+0x7cc>
   16514:	ldr	r0, [pc, #580]	; 16760 <__flatcc_fb_codegen_c@@Base+0x119c>
   16518:	ldr	r3, [r4, #204]	; 0xcc
   1651c:	mov	r2, #32
   16520:	mov	r1, #1
   16524:	add	r0, pc, r0
   16528:	bl	13f10 <fwrite@plt>
   1652c:	ldr	r1, [r4, #204]	; 0xcc
   16530:	mov	r0, #10
   16534:	bl	13fdc <fputc@plt>
   16538:	b	15e48 <__flatcc_fb_codegen_c@@Base+0x884>
   1653c:	ldr	r3, [pc, #544]	; 16764 <__flatcc_fb_codegen_c@@Base+0x11a0>
   16540:	ldr	r1, [pc, #544]	; 16768 <__flatcc_fb_codegen_c@@Base+0x11a4>
   16544:	ldr	r0, [pc, #544]	; 1676c <__flatcc_fb_codegen_c@@Base+0x11a8>
   16548:	add	r3, pc, r3
   1654c:	ldr	r2, [pc, #540]	; 16770 <__flatcc_fb_codegen_c@@Base+0x11ac>
   16550:	add	r3, r3, #20
   16554:	add	r1, pc, r1
   16558:	add	r0, pc, r0
   1655c:	bl	14030 <__assert_fail@plt>
   16560:	ldr	r3, [pc, #524]	; 16774 <__flatcc_fb_codegen_c@@Base+0x11b0>
   16564:	ldr	r1, [pc, #524]	; 16778 <__flatcc_fb_codegen_c@@Base+0x11b4>
   16568:	ldr	r0, [pc, #524]	; 1677c <__flatcc_fb_codegen_c@@Base+0x11b8>
   1656c:	add	r3, pc, r3
   16570:	ldr	r2, [pc, #520]	; 16780 <__flatcc_fb_codegen_c@@Base+0x11bc>
   16574:	add	r3, r3, #20
   16578:	add	r1, pc, r1
   1657c:	add	r0, pc, r0
   16580:	bl	14030 <__assert_fail@plt>
   16584:	andeq	r4, r5, ip, ror r6
   16588:	andeq	r9, r2, ip, lsl pc
   1658c:	andeq	r9, r2, r4, lsl pc
   16590:	muleq	r3, r0, ip
   16594:	andeq	r3, r3, r8, lsl #25
   16598:	andeq	sl, r2, ip, asr #32
   1659c:	andeq	sl, r2, r0, asr #32
   165a0:	andeq	r2, r3, ip, asr #7
   165a4:	strdeq	sl, [r2], -r4
   165a8:			; <UNDEFINED> instruction: 0x00029fb0
   165ac:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   165b0:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   165b4:	andeq	r3, r3, r8, ror #22
   165b8:	andeq	r3, r3, r8, asr #22
   165bc:	andeq	r9, r2, r4, lsl pc
   165c0:	andeq	r9, r2, ip, lsl #30
   165c4:	muleq	r3, r0, r2
   165c8:	andeq	sl, r2, ip, lsr #18
   165cc:	andeq	r9, r2, ip, lsl #28
   165d0:	andeq	r9, r2, r0, ror #27
   165d4:	andeq	r9, r2, r4, asr #27
   165d8:	andeq	r9, r2, r8, ror #27
   165dc:	andeq	r9, r2, r4, ror #28
   165e0:	andeq	r9, r2, ip, lsr #28
   165e4:	andeq	r9, r2, r8, lsr lr
   165e8:	andeq	r9, r2, r0, lsr lr
   165ec:	andeq	r9, r2, r0, lsr sp
   165f0:	andeq	r9, r2, r0, asr #29
   165f4:	andeq	r9, r2, r8, lsl #29
   165f8:	andeq	r9, r2, ip, lsl lr
   165fc:	muleq	r0, ip, r0
   16600:	andeq	r9, r2, r4, ror #22
   16604:	andeq	r9, r2, r8, ror #21
   16608:	andeq	r9, r2, ip, lsr fp
   1660c:	strdeq	r9, [r2], -r0
   16610:	andeq	r1, r3, ip, lsl pc
   16614:	andeq	r9, r2, ip, ror #19
   16618:	andeq	r9, r2, r0, asr fp
   1661c:	andeq	r9, r2, r8, lsr fp
   16620:	andeq	r9, r2, ip, ror #23
   16624:	andeq	r9, r2, r8, lsl #24
   16628:	andeq	r9, r2, r0, asr ip
   1662c:	muleq	r2, r0, ip
   16630:	andeq	r9, r2, r4, lsr #23
   16634:	ldrdeq	r9, [r2], -r8
   16638:	andeq	r3, r3, ip, ror #12
   1663c:	muleq	r2, r4, r8
   16640:	andeq	r3, r3, r0, asr r6
   16644:	andeq	r9, r2, r0, lsl #17
   16648:	andeq	r3, r3, r4, lsr r6
   1664c:	andeq	r9, r2, ip, ror #16
   16650:	andeq	r3, r3, r8, lsl r6
   16654:	andeq	r9, r2, r0, ror #16
   16658:	strdeq	r3, [r3], -ip
   1665c:	andeq	r9, r2, ip, lsl #16
   16660:	andeq	r3, r3, r0, ror #11
   16664:	andeq	r9, r2, r0, lsr #16
   16668:	andeq	r3, r3, r4, asr #11
   1666c:	andeq	r9, r2, r4, ror #15
   16670:	andeq	r3, r3, r8, lsr #11
   16674:	andeq	r9, r2, r0, lsr #15
   16678:	andeq	r3, r3, ip, lsl #11
   1667c:	andeq	r9, r2, r8, ror r7
   16680:	andeq	r3, r3, r0, ror r5
   16684:	andeq	r9, r2, r4, ror r7
   16688:	ldrdeq	r9, [r2], -r0
   1668c:	andeq	r9, r2, r8, ror r9
   16690:	andeq	r9, r2, r8, lsr #15
   16694:	andeq	r9, r2, r4, asr #18
   16698:	andeq	r9, r2, r0, lsl #15
   1669c:	andeq	r9, r2, r8, lsr r9
   166a0:	andeq	r9, r2, r4, ror r7
   166a4:	andeq	r9, r2, ip, asr r7
   166a8:	andeq	r9, r2, r8, lsr r7
   166ac:	andeq	r9, r2, ip, lsr #14
   166b0:	andeq	r9, r2, ip, asr #14
   166b4:	andeq	r9, r2, r8, lsr r7
   166b8:	andeq	r9, r2, ip, lsr #14
   166bc:	andeq	r9, r2, r4, lsl r7
   166c0:	andeq	r9, r2, r4, lsr r7
   166c4:	andeq	r9, r2, r0, lsr #14
   166c8:	andeq	r9, r2, ip, lsl #14
   166cc:	andeq	r9, r2, ip, asr #13
   166d0:	andeq	r9, r2, r4, lsl #14
   166d4:	strdeq	r9, [r2], -r0
   166d8:	ldrdeq	r9, [r2], -ip
   166dc:	andeq	r9, r2, r8, asr #13
   166e0:			; <UNDEFINED> instruction: 0x000296b4
   166e4:	andeq	r9, r2, r8, asr #13
   166e8:			; <UNDEFINED> instruction: 0x000296b4
   166ec:	andeq	r9, r2, r0, lsr #13
   166f0:	andeq	r9, r2, ip, lsl #13
   166f4:	andeq	r9, r2, r8, ror r6
   166f8:	andeq	r9, r2, ip, ror #12
   166fc:	andeq	r9, r2, r4, asr r6
   16700:	andeq	r9, r2, r8, lsr r7
   16704:			; <UNDEFINED> instruction: 0x000296bc
   16708:	andeq	r9, r2, r0, lsl r7
   1670c:	andeq	r9, r2, r4, asr #5
   16710:	strdeq	r1, [r3], -r0
   16714:	andeq	r9, r2, r8, lsr #15
   16718:	andeq	r9, r2, r0, lsr #11
   1671c:	strdeq	r9, [r2], -r4
   16720:	andeq	r9, r2, r4, ror #13
   16724:	andeq	r9, r2, r0, ror #12
   16728:	andeq	r9, r2, r4, ror #11
   1672c:	andeq	r9, r2, r8, lsr r6
   16730:	andeq	r9, r2, ip, ror #3
   16734:	andeq	r1, r3, r8, lsl sl
   16738:	andeq	r9, r2, r8, lsl #12
   1673c:	andeq	r9, r2, ip, lsl #11
   16740:	andeq	r9, r2, r0, ror #11
   16744:	muleq	r2, r4, r1
   16748:	andeq	r1, r3, r0, asr #19
   1674c:			; <UNDEFINED> instruction: 0x000295b0
   16750:	andeq	r9, r2, r4, lsr r5
   16754:	andeq	r9, r2, r8, lsl #11
   16758:	andeq	r9, r2, ip, lsr r1
   1675c:	andeq	r1, r3, r8, ror #18
   16760:	andeq	r9, r2, ip, lsr r7
   16764:	andeq	r9, r2, r0, ror #1
   16768:	muleq	r2, r4, r1
   1676c:	andeq	r9, r2, ip, lsl #9
   16770:			; <UNDEFINED> instruction: 0x000004b5
   16774:	strheq	r9, [r2], -ip
   16778:	andeq	r9, r2, r0, ror r1
   1677c:	andeq	r9, r2, r8, lsr #8
   16780:			; <UNDEFINED> instruction: 0x000004b4
   16784:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16788:	mov	r4, r0
   1678c:	sub	sp, sp, #516	; 0x204
   16790:	add	r3, sp, #72	; 0x48
   16794:	mov	r0, r3
   16798:	str	r3, [sp, #48]	; 0x30
   1679c:	ldr	r3, [r4, #212]	; 0xd4
   167a0:	add	ip, sp, #292	; 0x124
   167a4:	mov	r5, ip
   167a8:	ldr	r3, [r3, #132]	; 0x84
   167ac:	mov	sl, r1
   167b0:	mov	r2, #220	; 0xdc
   167b4:	mov	r1, #0
   167b8:	str	r3, [sp, #36]	; 0x24
   167bc:	str	ip, [sp, #60]	; 0x3c
   167c0:	bl	13f94 <memset@plt>
   167c4:	mov	r2, #220	; 0xdc
   167c8:	mov	r0, r5
   167cc:	mov	r1, #0
   167d0:	bl	13f94 <memset@plt>
   167d4:	ldrh	r3, [sl, #8]
   167d8:	ldr	r2, [pc, #3532]	; 175ac <__flatcc_fb_codegen_c@@Base+0x1fe8>
   167dc:	cmp	r3, #1
   167e0:	add	r2, pc, r2
   167e4:	str	r2, [sp, #68]	; 0x44
   167e8:	bne	17564 <__flatcc_fb_codegen_c@@Base+0x1fa0>
   167ec:	ldrh	r3, [sl, #104]	; 0x68
   167f0:	cmp	r3, #0
   167f4:	bne	16c9c <__flatcc_fb_codegen_c@@Base+0x16d8>
   167f8:	ldrd	r2, [sl, #96]	; 0x60
   167fc:	orrs	r3, r2, r3
   16800:	bne	17540 <__flatcc_fb_codegen_c@@Base+0x1f7c>
   16804:	ldr	r2, [sp, #48]	; 0x30
   16808:	mov	r1, sl
   1680c:	ldr	r0, [sl, #12]
   16810:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   16814:	ldr	r5, [sl, #32]
   16818:	cmp	r5, #0
   1681c:	beq	168d4 <__flatcc_fb_codegen_c@@Base+0x1310>
   16820:	ldr	r2, [pc, #3464]	; 175b0 <__flatcc_fb_codegen_c@@Base+0x1fec>
   16824:	ldr	fp, [pc, #3464]	; 175b4 <__flatcc_fb_codegen_c@@Base+0x1ff0>
   16828:	ldr	r9, [pc, #3464]	; 175b8 <__flatcc_fb_codegen_c@@Base+0x1ff4>
   1682c:	ldr	r8, [pc, #3464]	; 175bc <__flatcc_fb_codegen_c@@Base+0x1ff8>
   16830:	ldr	r7, [pc, #3464]	; 175c0 <__flatcc_fb_codegen_c@@Base+0x1ffc>
   16834:	mov	r3, #0
   16838:	add	r2, pc, r2
   1683c:	str	sl, [sp, #28]
   16840:	add	fp, pc, fp
   16844:	add	r9, pc, r9
   16848:	add	r8, pc, r8
   1684c:	add	r7, pc, r7
   16850:	mov	r6, r3
   16854:	mov	r0, #1
   16858:	mov	sl, r2
   1685c:	ldr	r2, [r5, #4]
   16860:	ldr	r1, [r2, #8]
   16864:	cmp	r1, r3
   16868:	beq	1688c <__flatcc_fb_codegen_c@@Base+0x12c8>
   1686c:	cmp	r0, #0
   16870:	movne	r2, r9
   16874:	moveq	r2, fp
   16878:	movne	r1, r8
   1687c:	moveq	r1, sl
   16880:	ldr	r0, [r4, #204]	; 0xcc
   16884:	bl	13f7c <fprintf@plt>
   16888:	ldr	r2, [r5, #4]
   1688c:	ldr	r3, [r2]
   16890:	mov	r1, r7
   16894:	ldr	r2, [r2, #4]
   16898:	ldr	r0, [r4, #204]	; 0xcc
   1689c:	bl	13f7c <fprintf@plt>
   168a0:	ldr	r3, [r5, #4]
   168a4:	ldr	r5, [r5]
   168a8:	mov	r0, r6
   168ac:	cmp	r5, #0
   168b0:	ldr	r3, [r3, #8]
   168b4:	bne	1685c <__flatcc_fb_codegen_c@@Base+0x1298>
   168b8:	ldr	r0, [pc, #3332]	; 175c4 <__flatcc_fb_codegen_c@@Base+0x2000>
   168bc:	ldr	r3, [r4, #204]	; 0xcc
   168c0:	mov	r2, #4
   168c4:	mov	r1, #1
   168c8:	add	r0, pc, r0
   168cc:	ldr	sl, [sp, #28]
   168d0:	bl	13f10 <fwrite@plt>
   168d4:	ldrd	r2, [sl, #112]	; 0x70
   168d8:	orrs	r3, r2, r3
   168dc:	beq	16cfc <__flatcc_fb_codegen_c@@Base+0x1738>
   168e0:	ldr	r3, [sp, #36]	; 0x24
   168e4:	cmp	r3, #0
   168e8:	bne	16f20 <__flatcc_fb_codegen_c@@Base+0x195c>
   168ec:	ldr	r1, [pc, #3284]	; 175c8 <__flatcc_fb_codegen_c@@Base+0x2004>
   168f0:	ldr	r2, [sp, #48]	; 0x30
   168f4:	add	r1, pc, r1
   168f8:	ldr	r0, [r4, #204]	; 0xcc
   168fc:	bl	13f7c <fprintf@plt>
   16900:	ldr	r5, [sl, #20]
   16904:	cmp	r5, #0
   16908:	beq	16a84 <__flatcc_fb_codegen_c@@Base+0x14c0>
   1690c:	ldr	r1, [pc, #3256]	; 175cc <__flatcc_fb_codegen_c@@Base+0x2008>
   16910:	ldr	r2, [pc, #3256]	; 175d0 <__flatcc_fb_codegen_c@@Base+0x200c>
   16914:	add	r1, pc, r1
   16918:	ldr	fp, [pc, #3252]	; 175d4 <__flatcc_fb_codegen_c@@Base+0x2010>
   1691c:	ldr	r7, [pc, #3252]	; 175d8 <__flatcc_fb_codegen_c@@Base+0x2014>
   16920:	ldr	r6, [pc, #3252]	; 175dc <__flatcc_fb_codegen_c@@Base+0x2018>
   16924:	add	r2, pc, r2
   16928:	str	r1, [sp, #28]
   1692c:	ldr	r1, [pc, #3244]	; 175e0 <__flatcc_fb_codegen_c@@Base+0x201c>
   16930:	str	sl, [sp, #56]	; 0x38
   16934:	add	fp, pc, fp
   16938:	add	r7, pc, r7
   1693c:	add	r6, pc, r6
   16940:	mov	sl, r2
   16944:	mov	r3, #0
   16948:	add	r1, pc, r1
   1694c:	str	r3, [sp, #44]	; 0x2c
   16950:	str	r1, [sp, #52]	; 0x34
   16954:	str	r3, [sp, #64]	; 0x40
   16958:	str	r3, [sp, #32]
   1695c:	ldr	r8, [r5, #68]	; 0x44
   16960:	cmp	r8, #0
   16964:	beq	169e4 <__flatcc_fb_codegen_c@@Base+0x1420>
   16968:	mov	r3, #0
   1696c:	mov	r9, r3
   16970:	mov	r0, #1
   16974:	ldr	r2, [r8, #4]
   16978:	ldr	r1, [r2, #8]
   1697c:	cmp	r1, r3
   16980:	beq	169a4 <__flatcc_fb_codegen_c@@Base+0x13e0>
   16984:	cmp	r0, #0
   16988:	moveq	r2, fp
   1698c:	ldrne	r2, [sp, #28]
   16990:	movne	r1, r7
   16994:	moveq	r1, sl
   16998:	ldr	r0, [r4, #204]	; 0xcc
   1699c:	bl	13f7c <fprintf@plt>
   169a0:	ldr	r2, [r8, #4]
   169a4:	ldr	r3, [r2]
   169a8:	mov	r1, r6
   169ac:	ldr	r2, [r2, #4]
   169b0:	ldr	r0, [r4, #204]	; 0xcc
   169b4:	bl	13f7c <fprintf@plt>
   169b8:	ldr	r3, [r8, #4]
   169bc:	ldr	r8, [r8]
   169c0:	mov	r0, r9
   169c4:	cmp	r8, #0
   169c8:	ldr	r3, [r3, #8]
   169cc:	bne	16974 <__flatcc_fb_codegen_c@@Base+0x13b0>
   169d0:	ldr	r3, [r4, #204]	; 0xcc
   169d4:	mov	r2, #4
   169d8:	mov	r1, #1
   169dc:	ldr	r0, [sp, #52]	; 0x34
   169e0:	bl	13f10 <fwrite@plt>
   169e4:	ldr	r2, [sp, #32]
   169e8:	ldr	r3, [r5, #4]
   169ec:	cmp	r2, #0
   169f0:	ldm	r3, {r8, r9}
   169f4:	ldreq	r3, [sp, #56]	; 0x38
   169f8:	ldrhne	r3, [r5, #74]	; 0x4a
   169fc:	ldrheq	r3, [r3, #104]	; 0x68
   16a00:	str	r3, [sp, #40]	; 0x28
   16a04:	ldr	r3, [sp, #36]	; 0x24
   16a08:	cmp	r3, #0
   16a0c:	beq	16b18 <__flatcc_fb_codegen_c@@Base+0x1554>
   16a10:	ldr	r3, [r5, #80]	; 0x50
   16a14:	ldr	r2, [sp, #32]
   16a18:	subs	r3, r3, r2
   16a1c:	bne	16cd8 <__flatcc_fb_codegen_c@@Base+0x1714>
   16a20:	ldrh	r3, [r5, #72]	; 0x48
   16a24:	tst	r3, #4
   16a28:	beq	16b5c <__flatcc_fb_codegen_c@@Base+0x1598>
   16a2c:	ldr	r1, [sp, #44]	; 0x2c
   16a30:	ldr	r3, [r5, #88]	; 0x58
   16a34:	add	ip, r1, #1
   16a38:	mov	r2, r1
   16a3c:	ldr	r1, [pc, #2976]	; 175e4 <__flatcc_fb_codegen_c@@Base+0x2020>
   16a40:	ldr	r0, [r4, #204]	; 0xcc
   16a44:	add	r1, pc, r1
   16a48:	str	r8, [sp, #4]
   16a4c:	str	r9, [sp]
   16a50:	str	ip, [sp, #44]	; 0x2c
   16a54:	bl	13f7c <fprintf@plt>
   16a58:	ldr	r2, [r5, #80]	; 0x50
   16a5c:	ldr	r3, [r5, #88]	; 0x58
   16a60:	ldr	r5, [r5]
   16a64:	add	r3, r2, r3
   16a68:	cmp	r5, #0
   16a6c:	str	r3, [sp, #32]
   16a70:	bne	1695c <__flatcc_fb_codegen_c@@Base+0x1398>
   16a74:	ldr	r3, [sp, #36]	; 0x24
   16a78:	ldr	sl, [sp, #56]	; 0x38
   16a7c:	cmp	r3, #0
   16a80:	bne	16f60 <__flatcc_fb_codegen_c@@Base+0x199c>
   16a84:	ldr	r0, [pc, #2908]	; 175e8 <__flatcc_fb_codegen_c@@Base+0x2024>
   16a88:	ldr	r3, [r4, #204]	; 0xcc
   16a8c:	mov	r2, #3
   16a90:	mov	r1, #1
   16a94:	add	r0, pc, r0
   16a98:	bl	13f10 <fwrite@plt>
   16a9c:	ldrd	r6, [sl, #112]	; 0x70
   16aa0:	ldr	r5, [sp, #48]	; 0x30
   16aa4:	ldr	r1, [pc, #2880]	; 175ec <__flatcc_fb_codegen_c@@Base+0x2028>
   16aa8:	ldr	r0, [r4, #204]	; 0xcc
   16aac:	mov	r2, r5
   16ab0:	strd	r6, [sp]
   16ab4:	add	r1, pc, r1
   16ab8:	bl	13f7c <fprintf@plt>
   16abc:	ldr	r1, [pc, #2860]	; 175f0 <__flatcc_fb_codegen_c@@Base+0x202c>
   16ac0:	ldr	r0, [r4, #204]	; 0xcc
   16ac4:	mov	r3, r5
   16ac8:	mov	r2, r5
   16acc:	str	r5, [sp]
   16ad0:	add	r1, pc, r1
   16ad4:	bl	13f7c <fprintf@plt>
   16ad8:	ldr	r1, [pc, #2836]	; 175f4 <__flatcc_fb_codegen_c@@Base+0x2030>
   16adc:	ldr	r0, [r4, #204]	; 0xcc
   16ae0:	mov	r3, r5
   16ae4:	mov	r2, r5
   16ae8:	str	r5, [sp]
   16aec:	add	r1, pc, r1
   16af0:	bl	13f7c <fprintf@plt>
   16af4:	ldr	r1, [pc, #2812]	; 175f8 <__flatcc_fb_codegen_c@@Base+0x2034>
   16af8:	ldr	r0, [r4, #204]	; 0xcc
   16afc:	mov	r3, r5
   16b00:	str	r4, [sp, #4]
   16b04:	str	r5, [sp]
   16b08:	mov	r2, r5
   16b0c:	add	r1, pc, r1
   16b10:	bl	13f7c <fprintf@plt>
   16b14:	b	16d68 <__flatcc_fb_codegen_c@@Base+0x17a4>
   16b18:	ldrh	r3, [r5, #72]	; 0x48
   16b1c:	tst	r3, #4
   16b20:	beq	16b5c <__flatcc_fb_codegen_c@@Base+0x1598>
   16b24:	ldr	r1, [sp, #44]	; 0x2c
   16b28:	str	r8, [sp, #8]
   16b2c:	str	r9, [sp, #4]
   16b30:	ldr	r3, [r5, #88]	; 0x58
   16b34:	add	ip, r1, #1
   16b38:	ldr	r0, [r4, #204]	; 0xcc
   16b3c:	str	r3, [sp]
   16b40:	mov	r3, r1
   16b44:	ldr	r1, [pc, #2736]	; 175fc <__flatcc_fb_codegen_c@@Base+0x2038>
   16b48:	ldr	r2, [sp, #40]	; 0x28
   16b4c:	add	r1, pc, r1
   16b50:	str	ip, [sp, #44]	; 0x2c
   16b54:	bl	13f7c <fprintf@plt>
   16b58:	b	16a58 <__flatcc_fb_codegen_c@@Base+0x1494>
   16b5c:	ldrh	r3, [r5, #24]
   16b60:	cmp	r3, #8
   16b64:	beq	16be4 <__flatcc_fb_codegen_c@@Base+0x1620>
   16b68:	cmp	r3, #14
   16b6c:	bne	16c2c <__flatcc_fb_codegen_c@@Base+0x1668>
   16b70:	ldr	r1, [r5, #16]
   16b74:	ldrh	r3, [r1, #8]
   16b78:	bic	r2, r3, #2
   16b7c:	cmp	r2, #1
   16b80:	bne	17588 <__flatcc_fb_codegen_c@@Base+0x1fc4>
   16b84:	cmp	r3, #1
   16b88:	beq	170f4 <__flatcc_fb_codegen_c@@Base+0x1b30>
   16b8c:	ldr	r3, [pc, #2668]	; 17600 <__flatcc_fb_codegen_c@@Base+0x203c>
   16b90:	add	r3, pc, r3
   16b94:	ldr	r2, [sp, #60]	; 0x3c
   16b98:	ldr	r0, [r1, #12]
   16b9c:	str	r3, [sp, #32]
   16ba0:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   16ba4:	ldr	r3, [sp, #36]	; 0x24
   16ba8:	cmp	r3, #0
   16bac:	ldr	r3, [sp, #32]
   16bb0:	beq	16f00 <__flatcc_fb_codegen_c@@Base+0x193c>
   16bb4:	ldr	r1, [pc, #2632]	; 17604 <__flatcc_fb_codegen_c@@Base+0x2040>
   16bb8:	ldr	r2, [sp, #60]	; 0x3c
   16bbc:	add	r1, pc, r1
   16bc0:	ldr	r0, [r4, #204]	; 0xcc
   16bc4:	bl	13f7c <fprintf@plt>
   16bc8:	ldr	r1, [pc, #2616]	; 17608 <__flatcc_fb_codegen_c@@Base+0x2044>
   16bcc:	mov	r3, r8
   16bd0:	mov	r2, r9
   16bd4:	add	r1, pc, r1
   16bd8:	ldr	r0, [r4, #204]	; 0xcc
   16bdc:	bl	13f7c <fprintf@plt>
   16be0:	b	16a58 <__flatcc_fb_codegen_c@@Base+0x1494>
   16be4:	ldr	r3, [r5, #16]
   16be8:	cmp	r3, #5
   16bec:	beq	17100 <__flatcc_fb_codegen_c@@Base+0x1b3c>
   16bf0:	sub	r3, r3, #1
   16bf4:	cmp	r3, #10
   16bf8:	addls	pc, pc, r3, lsl #2
   16bfc:	b	171b8 <__flatcc_fb_codegen_c@@Base+0x1bf4>
   16c00:	b	172b0 <__flatcc_fb_codegen_c@@Base+0x1cec>
   16c04:	b	172c4 <__flatcc_fb_codegen_c@@Base+0x1d00>
   16c08:	b	1729c <__flatcc_fb_codegen_c@@Base+0x1cd8>
   16c0c:	b	17154 <__flatcc_fb_codegen_c@@Base+0x1b90>
   16c10:	b	171b8 <__flatcc_fb_codegen_c@@Base+0x1bf4>
   16c14:	b	1712c <__flatcc_fb_codegen_c@@Base+0x1b68>
   16c18:	b	171a4 <__flatcc_fb_codegen_c@@Base+0x1be0>
   16c1c:	b	17190 <__flatcc_fb_codegen_c@@Base+0x1bcc>
   16c20:	b	1717c <__flatcc_fb_codegen_c@@Base+0x1bb8>
   16c24:	b	17168 <__flatcc_fb_codegen_c@@Base+0x1ba4>
   16c28:	b	17140 <__flatcc_fb_codegen_c@@Base+0x1b7c>
   16c2c:	ldr	r2, [pc, #2520]	; 1760c <__flatcc_fb_codegen_c@@Base+0x2048>
   16c30:	ldr	r1, [pc, #2520]	; 17610 <__flatcc_fb_codegen_c@@Base+0x204c>
   16c34:	ldr	r0, [r4, #204]	; 0xcc
   16c38:	add	r2, pc, r2
   16c3c:	add	r1, pc, r1
   16c40:	bl	13f7c <fprintf@plt>
   16c44:	ldr	r2, [pc, #2504]	; 17614 <__flatcc_fb_codegen_c@@Base+0x2050>
   16c48:	ldr	r1, [sp, #68]	; 0x44
   16c4c:	ldr	r3, [pc, #2500]	; 17618 <__flatcc_fb_codegen_c@@Base+0x2054>
   16c50:	ldr	r4, [pc, #2500]	; 1761c <__flatcc_fb_codegen_c@@Base+0x2058>
   16c54:	ldr	r1, [r1, r2]
   16c58:	add	r3, pc, r3
   16c5c:	str	r3, [sp]
   16c60:	ldr	r0, [r1]
   16c64:	ldr	r1, [pc, #2484]	; 17620 <__flatcc_fb_codegen_c@@Base+0x205c>
   16c68:	add	r4, pc, r4
   16c6c:	mov	r2, r4
   16c70:	ldr	r3, [pc, #2476]	; 17624 <__flatcc_fb_codegen_c@@Base+0x2060>
   16c74:	add	r1, pc, r1
   16c78:	bl	13f7c <fprintf@plt>
   16c7c:	ldr	r3, [pc, #2468]	; 17628 <__flatcc_fb_codegen_c@@Base+0x2064>
   16c80:	ldr	r0, [pc, #2468]	; 1762c <__flatcc_fb_codegen_c@@Base+0x2068>
   16c84:	add	r3, pc, r3
   16c88:	mov	r1, r4
   16c8c:	add	r3, r3, #80	; 0x50
   16c90:	ldr	r2, [pc, #2444]	; 17624 <__flatcc_fb_codegen_c@@Base+0x2060>
   16c94:	add	r0, pc, r0
   16c98:	bl	14030 <__assert_fail@plt>
   16c9c:	ldrd	r2, [sl, #112]	; 0x70
   16ca0:	orrs	r3, r2, r3
   16ca4:	bne	16804 <__flatcc_fb_codegen_c@@Base+0x1240>
   16ca8:	ldrd	r2, [sl, #96]	; 0x60
   16cac:	orrs	r3, r2, r3
   16cb0:	beq	16804 <__flatcc_fb_codegen_c@@Base+0x1240>
   16cb4:	ldr	r3, [pc, #2420]	; 17630 <__flatcc_fb_codegen_c@@Base+0x206c>
   16cb8:	ldr	r1, [pc, #2420]	; 17634 <__flatcc_fb_codegen_c@@Base+0x2070>
   16cbc:	ldr	r0, [pc, #2420]	; 17638 <__flatcc_fb_codegen_c@@Base+0x2074>
   16cc0:	add	r3, pc, r3
   16cc4:	ldr	r2, [pc, #2416]	; 1763c <__flatcc_fb_codegen_c@@Base+0x2078>
   16cc8:	add	r3, r3, #80	; 0x50
   16ccc:	add	r1, pc, r1
   16cd0:	add	r0, pc, r0
   16cd4:	bl	14030 <__assert_fail@plt>
   16cd8:	ldr	r1, [sp, #64]	; 0x40
   16cdc:	ldr	r0, [r4, #204]	; 0xcc
   16ce0:	add	ip, r1, #1
   16ce4:	mov	r2, r1
   16ce8:	ldr	r1, [pc, #2384]	; 17640 <__flatcc_fb_codegen_c@@Base+0x207c>
   16cec:	str	ip, [sp, #64]	; 0x40
   16cf0:	add	r1, pc, r1
   16cf4:	bl	13f7c <fprintf@plt>
   16cf8:	b	16a20 <__flatcc_fb_codegen_c@@Base+0x145c>
   16cfc:	ldr	r5, [sp, #48]	; 0x30
   16d00:	ldr	r1, [pc, #2364]	; 17644 <__flatcc_fb_codegen_c@@Base+0x2080>
   16d04:	mov	r2, r5
   16d08:	add	r1, pc, r1
   16d0c:	ldr	r0, [r4, #204]	; 0xcc
   16d10:	bl	13f7c <fprintf@plt>
   16d14:	ldr	r1, [pc, #2348]	; 17648 <__flatcc_fb_codegen_c@@Base+0x2084>
   16d18:	ldr	r0, [r4, #204]	; 0xcc
   16d1c:	mov	r3, r5
   16d20:	mov	r2, r5
   16d24:	add	r1, pc, r1
   16d28:	str	r5, [sp]
   16d2c:	bl	13f7c <fprintf@plt>
   16d30:	ldr	r1, [pc, #2324]	; 1764c <__flatcc_fb_codegen_c@@Base+0x2088>
   16d34:	ldr	r0, [r4, #204]	; 0xcc
   16d38:	mov	r3, r5
   16d3c:	mov	r2, r5
   16d40:	add	r1, pc, r1
   16d44:	str	r5, [sp]
   16d48:	bl	13f7c <fprintf@plt>
   16d4c:	ldr	r1, [pc, #2300]	; 17650 <__flatcc_fb_codegen_c@@Base+0x208c>
   16d50:	ldr	r0, [r4, #204]	; 0xcc
   16d54:	mov	r3, r5
   16d58:	str	r5, [sp]
   16d5c:	mov	r2, r5
   16d60:	add	r1, pc, r1
   16d64:	bl	13f7c <fprintf@plt>
   16d68:	ldrd	r6, [sl, #112]	; 0x70
   16d6c:	ldr	r5, [sp, #48]	; 0x30
   16d70:	ldr	r1, [pc, #2268]	; 17654 <__flatcc_fb_codegen_c@@Base+0x2090>
   16d74:	mov	r2, r5
   16d78:	ldr	r0, [r4, #204]	; 0xcc
   16d7c:	add	r1, pc, r1
   16d80:	strd	r6, [sp]
   16d84:	bl	13f7c <fprintf@plt>
   16d88:	ldr	r1, [pc, #2248]	; 17658 <__flatcc_fb_codegen_c@@Base+0x2094>
   16d8c:	mov	r3, r5
   16d90:	mov	r2, r5
   16d94:	ldr	r0, [r4, #204]	; 0xcc
   16d98:	add	r1, pc, r1
   16d9c:	str	r4, [sp]
   16da0:	bl	13f7c <fprintf@plt>
   16da4:	ldr	r1, [pc, #2224]	; 1765c <__flatcc_fb_codegen_c@@Base+0x2098>
   16da8:	mov	r3, r5
   16dac:	mov	r2, r4
   16db0:	add	r1, pc, r1
   16db4:	ldr	r0, [r4, #204]	; 0xcc
   16db8:	bl	13f7c <fprintf@plt>
   16dbc:	ldr	r1, [r4, #204]	; 0xcc
   16dc0:	mov	r0, #10
   16dc4:	bl	13fdc <fputc@plt>
   16dc8:	ldr	r5, [sl, #20]
   16dcc:	cmp	r5, #0
   16dd0:	beq	16ea4 <__flatcc_fb_codegen_c@@Base+0x18e0>
   16dd4:	ldr	r3, [pc, #2180]	; 17660 <__flatcc_fb_codegen_c@@Base+0x209c>
   16dd8:	ldr	sl, [pc, #2180]	; 17664 <__flatcc_fb_codegen_c@@Base+0x20a0>
   16ddc:	add	r3, pc, r3
   16de0:	str	r3, [sp, #32]
   16de4:	ldr	r3, [pc, #2172]	; 17668 <__flatcc_fb_codegen_c@@Base+0x20a4>
   16de8:	ldr	fp, [pc, #2172]	; 1766c <__flatcc_fb_codegen_c@@Base+0x20a8>
   16dec:	add	r3, pc, r3
   16df0:	str	r3, [sp, #36]	; 0x24
   16df4:	ldr	r3, [pc, #2164]	; 17670 <__flatcc_fb_codegen_c@@Base+0x20ac>
   16df8:	add	sl, pc, sl
   16dfc:	add	r3, pc, r3
   16e00:	add	fp, pc, fp
   16e04:	mov	r8, #0
   16e08:	str	r3, [sp, #40]	; 0x28
   16e0c:	str	sl, [sp, #28]
   16e10:	ldr	r3, [pc, #2140]	; 17674 <__flatcc_fb_codegen_c@@Base+0x20b0>
   16e14:	ldr	sl, [sp, #48]	; 0x30
   16e18:	str	fp, [sp, #48]	; 0x30
   16e1c:	ldr	fp, [sp, #60]	; 0x3c
   16e20:	mov	r9, r8
   16e24:	add	r3, pc, r3
   16e28:	str	r3, [sp, #44]	; 0x2c
   16e2c:	ldrh	r3, [r5, #72]	; 0x48
   16e30:	tst	r3, #4
   16e34:	bne	16e98 <__flatcc_fb_codegen_c@@Base+0x18d4>
   16e38:	ldrh	r1, [r5, #24]
   16e3c:	ldr	r2, [r5, #4]
   16e40:	cmp	r1, #8
   16e44:	ldr	r7, [r2]
   16e48:	ldr	r6, [r2, #4]
   16e4c:	beq	16eb8 <__flatcc_fb_codegen_c@@Base+0x18f4>
   16e50:	cmp	r1, #14
   16e54:	bne	16e84 <__flatcc_fb_codegen_c@@Base+0x18c0>
   16e58:	ldr	r1, [r5, #16]
   16e5c:	mov	r2, fp
   16e60:	ldr	r0, [r1, #12]
   16e64:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   16e68:	ldr	r2, [r5, #16]
   16e6c:	ldrh	r3, [r2, #8]
   16e70:	cmp	r3, #1
   16e74:	beq	17230 <__flatcc_fb_codegen_c@@Base+0x1c6c>
   16e78:	cmp	r3, #3
   16e7c:	beq	16fc0 <__flatcc_fb_codegen_c@@Base+0x19fc>
   16e80:	ldrh	r3, [r5, #72]	; 0x48
   16e84:	and	r3, r3, #128	; 0x80
   16e88:	cmp	r3, #0
   16e8c:	beq	16e98 <__flatcc_fb_codegen_c@@Base+0x18d4>
   16e90:	cmp	r9, #0
   16e94:	beq	16fa4 <__flatcc_fb_codegen_c@@Base+0x19e0>
   16e98:	ldr	r5, [r5]
   16e9c:	cmp	r5, #0
   16ea0:	bne	16e2c <__flatcc_fb_codegen_c@@Base+0x1868>
   16ea4:	ldr	r1, [r4, #204]	; 0xcc
   16ea8:	mov	r0, #10
   16eac:	bl	13fdc <fputc@plt>
   16eb0:	add	sp, sp, #516	; 0x204
   16eb4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16eb8:	ldr	r3, [r5, #16]
   16ebc:	cmp	r3, #5
   16ec0:	beq	17250 <__flatcc_fb_codegen_c@@Base+0x1c8c>
   16ec4:	sub	r3, r3, #1
   16ec8:	cmp	r3, #10
   16ecc:	addls	pc, pc, r3, lsl #2
   16ed0:	b	173d4 <__flatcc_fb_codegen_c@@Base+0x1e10>
   16ed4:	b	1738c <__flatcc_fb_codegen_c@@Base+0x1dc8>
   16ed8:	b	173b8 <__flatcc_fb_codegen_c@@Base+0x1df4>
   16edc:	b	1739c <__flatcc_fb_codegen_c@@Base+0x1dd8>
   16ee0:	b	17370 <__flatcc_fb_codegen_c@@Base+0x1dac>
   16ee4:	b	173d4 <__flatcc_fb_codegen_c@@Base+0x1e10>
   16ee8:	b	1731c <__flatcc_fb_codegen_c@@Base+0x1d58>
   16eec:	b	17338 <__flatcc_fb_codegen_c@@Base+0x1d74>
   16ef0:	b	17354 <__flatcc_fb_codegen_c@@Base+0x1d90>
   16ef4:	b	172d8 <__flatcc_fb_codegen_c@@Base+0x1d14>
   16ef8:	b	172f4 <__flatcc_fb_codegen_c@@Base+0x1d30>
   16efc:	b	17304 <__flatcc_fb_codegen_c@@Base+0x1d40>
   16f00:	ldr	r1, [pc, #1904]	; 17678 <__flatcc_fb_codegen_c@@Base+0x20b4>
   16f04:	ldr	r0, [r4, #204]	; 0xcc
   16f08:	ldr	r2, [sp, #40]	; 0x28
   16f0c:	str	r3, [sp]
   16f10:	add	r1, pc, r1
   16f14:	ldr	r3, [sp, #60]	; 0x3c
   16f18:	bl	13f7c <fprintf@plt>
   16f1c:	b	16bc8 <__flatcc_fb_codegen_c@@Base+0x1604>
   16f20:	ldr	r0, [pc, #1876]	; 1767c <__flatcc_fb_codegen_c@@Base+0x20b8>
   16f24:	ldr	r3, [r4, #204]	; 0xcc
   16f28:	mov	r2, #16
   16f2c:	mov	r1, #1
   16f30:	add	r0, pc, r0
   16f34:	bl	13f10 <fwrite@plt>
   16f38:	ldr	r1, [pc, #1856]	; 17680 <__flatcc_fb_codegen_c@@Base+0x20bc>
   16f3c:	ldr	r2, [sp, #48]	; 0x30
   16f40:	add	r1, pc, r1
   16f44:	ldr	r0, [r4, #204]	; 0xcc
   16f48:	bl	13f7c <fprintf@plt>
   16f4c:	ldr	r5, [sl, #20]
   16f50:	cmp	r5, #0
   16f54:	bne	1690c <__flatcc_fb_codegen_c@@Base+0x1348>
   16f58:	str	r5, [sp, #64]	; 0x40
   16f5c:	str	r5, [sp, #32]
   16f60:	ldr	r3, [sl, #112]	; 0x70
   16f64:	ldr	r2, [sp, #32]
   16f68:	subs	r3, r3, r2
   16f6c:	bne	1742c <__flatcc_fb_codegen_c@@Base+0x1e68>
   16f70:	ldr	r0, [pc, #1804]	; 17684 <__flatcc_fb_codegen_c@@Base+0x20c0>
   16f74:	ldr	r3, [r4, #204]	; 0xcc
   16f78:	mov	r2, #3
   16f7c:	mov	r1, #1
   16f80:	add	r0, pc, r0
   16f84:	bl	13f10 <fwrite@plt>
   16f88:	ldr	r0, [pc, #1784]	; 17688 <__flatcc_fb_codegen_c@@Base+0x20c4>
   16f8c:	ldr	r3, [r4, #204]	; 0xcc
   16f90:	mov	r2, #15
   16f94:	mov	r1, #1
   16f98:	add	r0, pc, r0
   16f9c:	bl	13f10 <fwrite@plt>
   16fa0:	b	16a9c <__flatcc_fb_codegen_c@@Base+0x14d8>
   16fa4:	ldr	r3, [r4, #204]	; 0xcc
   16fa8:	mov	r2, #84	; 0x54
   16fac:	mov	r1, #1
   16fb0:	ldr	r0, [sp, #28]
   16fb4:	bl	13f10 <fwrite@plt>
   16fb8:	mov	r8, #1
   16fbc:	b	16e98 <__flatcc_fb_codegen_c@@Base+0x18d4>
   16fc0:	ldr	r3, [r2, #40]	; 0x28
   16fc4:	sub	r3, r3, #1
   16fc8:	cmp	r3, #10
   16fcc:	bhi	174c0 <__flatcc_fb_codegen_c@@Base+0x1efc>
   16fd0:	ldr	r1, [pc, #1716]	; 1768c <__flatcc_fb_codegen_c@@Base+0x20c8>
   16fd4:	ldr	r0, [r4, #204]	; 0xcc
   16fd8:	mov	r3, sl
   16fdc:	str	fp, [sp, #12]
   16fe0:	stm	sp, {r6, r7, fp}
   16fe4:	mov	r2, r4
   16fe8:	add	r1, pc, r1
   16fec:	bl	13f7c <fprintf@plt>
   16ff0:	ldr	r3, [r4, #212]	; 0xd4
   16ff4:	ldr	r3, [r3, #32]
   16ff8:	cmp	r3, #0
   16ffc:	bne	17028 <__flatcc_fb_codegen_c@@Base+0x1a64>
   17000:	ldrh	r3, [r5, #72]	; 0x48
   17004:	tst	r3, #128	; 0x80
   17008:	beq	16e98 <__flatcc_fb_codegen_c@@Base+0x18d4>
   1700c:	ldr	r1, [pc, #1660]	; 17690 <__flatcc_fb_codegen_c@@Base+0x20cc>
   17010:	ldr	r0, [r4, #204]	; 0xcc
   17014:	mov	r3, sl
   17018:	stm	sp, {r6, r7, fp}
   1701c:	mov	r2, r4
   17020:	add	r1, pc, r1
   17024:	bl	13f7c <fprintf@plt>
   17028:	ldrh	r3, [r5, #72]	; 0x48
   1702c:	tst	r3, #128	; 0x80
   17030:	beq	16e98 <__flatcc_fb_codegen_c@@Base+0x18d4>
   17034:	cmp	r8, #0
   17038:	ldr	r3, [r4, #204]	; 0xcc
   1703c:	bne	17444 <__flatcc_fb_codegen_c@@Base+0x1e80>
   17040:	ldr	r0, [pc, #1612]	; 17694 <__flatcc_fb_codegen_c@@Base+0x20d0>
   17044:	mov	r2, #61	; 0x3d
   17048:	mov	r1, #1
   1704c:	add	r0, pc, r0
   17050:	bl	13f10 <fwrite@plt>
   17054:	ldr	r1, [pc, #1596]	; 17698 <__flatcc_fb_codegen_c@@Base+0x20d4>
   17058:	ldr	r0, [r4, #204]	; 0xcc
   1705c:	mov	r3, sl
   17060:	stm	sp, {r6, r7, fp}
   17064:	mov	r2, r4
   17068:	add	r1, pc, r1
   1706c:	bl	13f7c <fprintf@plt>
   17070:	ldr	r3, [r4, #212]	; 0xd4
   17074:	ldr	r3, [r3, #136]	; 0x88
   17078:	cmp	r3, #0
   1707c:	beq	170a0 <__flatcc_fb_codegen_c@@Base+0x1adc>
   17080:	ldr	r1, [pc, #1556]	; 1769c <__flatcc_fb_codegen_c@@Base+0x20d8>
   17084:	ldr	r0, [r4, #204]	; 0xcc
   17088:	mov	r3, sl
   1708c:	str	sl, [sp, #12]
   17090:	stm	sp, {r6, r7, fp}
   17094:	mov	r2, r4
   17098:	add	r1, pc, r1
   1709c:	bl	13f7c <fprintf@plt>
   170a0:	ldr	r1, [pc, #1528]	; 176a0 <__flatcc_fb_codegen_c@@Base+0x20dc>
   170a4:	ldr	r0, [r4, #204]	; 0xcc
   170a8:	mov	r3, sl
   170ac:	mov	r2, r4
   170b0:	add	r1, pc, r1
   170b4:	stm	sp, {r6, r7, fp}
   170b8:	bl	13f7c <fprintf@plt>
   170bc:	ldr	r1, [pc, #1504]	; 176a4 <__flatcc_fb_codegen_c@@Base+0x20e0>
   170c0:	ldr	r0, [r4, #204]	; 0xcc
   170c4:	mov	r3, sl
   170c8:	stm	sp, {r6, r7, fp}
   170cc:	mov	r2, r4
   170d0:	add	r1, pc, r1
   170d4:	bl	13f7c <fprintf@plt>
   170d8:	ldr	r3, [r4, #212]	; 0xd4
   170dc:	ldr	r3, [r3, #136]	; 0x88
   170e0:	cmp	r3, #0
   170e4:	bne	17518 <__flatcc_fb_codegen_c@@Base+0x1f54>
   170e8:	mov	r8, #1
   170ec:	mov	r9, r8
   170f0:	b	16e98 <__flatcc_fb_codegen_c@@Base+0x18d4>
   170f4:	ldr	r3, [pc, #1452]	; 176a8 <__flatcc_fb_codegen_c@@Base+0x20e4>
   170f8:	add	r3, pc, r3
   170fc:	b	16b94 <__flatcc_fb_codegen_c@@Base+0x15d0>
   17100:	ldr	r3, [pc, #1444]	; 176ac <__flatcc_fb_codegen_c@@Base+0x20e8>
   17104:	mov	r2, r4
   17108:	add	r3, pc, r3
   1710c:	ldr	r1, [sp, #36]	; 0x24
   17110:	cmp	r1, #0
   17114:	beq	17210 <__flatcc_fb_codegen_c@@Base+0x1c4c>
   17118:	ldr	r1, [pc, #1424]	; 176b0 <__flatcc_fb_codegen_c@@Base+0x20ec>
   1711c:	ldr	r0, [r4, #204]	; 0xcc
   17120:	add	r1, pc, r1
   17124:	bl	13f7c <fprintf@plt>
   17128:	b	16bc8 <__flatcc_fb_codegen_c@@Base+0x1604>
   1712c:	ldr	r2, [pc, #1408]	; 176b4 <__flatcc_fb_codegen_c@@Base+0x20f0>
   17130:	ldr	r3, [pc, #1408]	; 176b8 <__flatcc_fb_codegen_c@@Base+0x20f4>
   17134:	add	r2, pc, r2
   17138:	add	r3, pc, r3
   1713c:	b	1710c <__flatcc_fb_codegen_c@@Base+0x1b48>
   17140:	ldr	r2, [pc, #1396]	; 176bc <__flatcc_fb_codegen_c@@Base+0x20f8>
   17144:	ldr	r3, [pc, #1396]	; 176c0 <__flatcc_fb_codegen_c@@Base+0x20fc>
   17148:	add	r2, pc, r2
   1714c:	add	r3, pc, r3
   17150:	b	1710c <__flatcc_fb_codegen_c@@Base+0x1b48>
   17154:	ldr	r2, [pc, #1384]	; 176c4 <__flatcc_fb_codegen_c@@Base+0x2100>
   17158:	ldr	r3, [pc, #1384]	; 176c8 <__flatcc_fb_codegen_c@@Base+0x2104>
   1715c:	add	r2, pc, r2
   17160:	add	r3, pc, r3
   17164:	b	1710c <__flatcc_fb_codegen_c@@Base+0x1b48>
   17168:	ldr	r2, [pc, #1372]	; 176cc <__flatcc_fb_codegen_c@@Base+0x2108>
   1716c:	ldr	r3, [pc, #1372]	; 176d0 <__flatcc_fb_codegen_c@@Base+0x210c>
   17170:	add	r2, pc, r2
   17174:	add	r3, pc, r3
   17178:	b	1710c <__flatcc_fb_codegen_c@@Base+0x1b48>
   1717c:	ldr	r2, [pc, #1360]	; 176d4 <__flatcc_fb_codegen_c@@Base+0x2110>
   17180:	ldr	r3, [pc, #1360]	; 176d8 <__flatcc_fb_codegen_c@@Base+0x2114>
   17184:	add	r2, pc, r2
   17188:	add	r3, pc, r3
   1718c:	b	1710c <__flatcc_fb_codegen_c@@Base+0x1b48>
   17190:	ldr	r2, [pc, #1348]	; 176dc <__flatcc_fb_codegen_c@@Base+0x2118>
   17194:	ldr	r3, [pc, #1348]	; 176e0 <__flatcc_fb_codegen_c@@Base+0x211c>
   17198:	add	r2, pc, r2
   1719c:	add	r3, pc, r3
   171a0:	b	1710c <__flatcc_fb_codegen_c@@Base+0x1b48>
   171a4:	ldr	r2, [pc, #1336]	; 176e4 <__flatcc_fb_codegen_c@@Base+0x2120>
   171a8:	ldr	r3, [pc, #1336]	; 176e8 <__flatcc_fb_codegen_c@@Base+0x2124>
   171ac:	add	r2, pc, r2
   171b0:	add	r3, pc, r3
   171b4:	b	1710c <__flatcc_fb_codegen_c@@Base+0x1b48>
   171b8:	ldr	r2, [pc, #1108]	; 17614 <__flatcc_fb_codegen_c@@Base+0x2050>
   171bc:	ldr	r1, [sp, #68]	; 0x44
   171c0:	ldr	r3, [pc, #1316]	; 176ec <__flatcc_fb_codegen_c@@Base+0x2128>
   171c4:	ldr	r4, [pc, #1316]	; 176f0 <__flatcc_fb_codegen_c@@Base+0x212c>
   171c8:	ldr	r1, [r1, r2]
   171cc:	add	r3, pc, r3
   171d0:	str	r3, [sp]
   171d4:	ldr	r0, [r1]
   171d8:	ldr	r1, [pc, #1300]	; 176f4 <__flatcc_fb_codegen_c@@Base+0x2130>
   171dc:	add	r4, pc, r4
   171e0:	mov	r2, r4
   171e4:	mov	r3, #141	; 0x8d
   171e8:	add	r1, pc, r1
   171ec:	bl	13f7c <fprintf@plt>
   171f0:	ldr	r3, [pc, #1280]	; 176f8 <__flatcc_fb_codegen_c@@Base+0x2134>
   171f4:	ldr	r0, [pc, #1280]	; 176fc <__flatcc_fb_codegen_c@@Base+0x2138>
   171f8:	add	r3, pc, r3
   171fc:	mov	r1, r4
   17200:	add	r3, r3, #32
   17204:	mov	r2, #141	; 0x8d
   17208:	add	r0, pc, r0
   1720c:	bl	14030 <__assert_fail@plt>
   17210:	ldr	r1, [pc, #1256]	; 17700 <__flatcc_fb_codegen_c@@Base+0x213c>
   17214:	ldr	r0, [r4, #204]	; 0xcc
   17218:	add	r1, pc, r1
   1721c:	str	r3, [sp]
   17220:	mov	r3, r2
   17224:	ldr	r2, [sp, #40]	; 0x28
   17228:	bl	13f7c <fprintf@plt>
   1722c:	b	16bc8 <__flatcc_fb_codegen_c@@Base+0x1604>
   17230:	ldr	r1, [pc, #1228]	; 17704 <__flatcc_fb_codegen_c@@Base+0x2140>
   17234:	ldr	r0, [r4, #204]	; 0xcc
   17238:	mov	r3, sl
   1723c:	stm	sp, {r6, r7, fp}
   17240:	mov	r2, r4
   17244:	add	r1, pc, r1
   17248:	bl	13f7c <fprintf@plt>
   1724c:	b	16e80 <__flatcc_fb_codegen_c@@Base+0x18bc>
   17250:	ldr	r3, [pc, #1200]	; 17708 <__flatcc_fb_codegen_c@@Base+0x2144>
   17254:	ldr	r2, [pc, #1200]	; 1770c <__flatcc_fb_codegen_c@@Base+0x2148>
   17258:	mov	r1, r4
   1725c:	add	r3, pc, r3
   17260:	add	r2, pc, r2
   17264:	ldr	r0, [r4, #204]	; 0xcc
   17268:	str	r1, [sp, #16]
   1726c:	ldr	r1, [pc, #1180]	; 17710 <__flatcc_fb_codegen_c@@Base+0x214c>
   17270:	str	r3, [sp, #20]
   17274:	str	r2, [sp, #12]
   17278:	mov	r3, sl
   1727c:	str	r4, [sp, #8]
   17280:	stm	sp, {r6, r7}
   17284:	mov	r2, r4
   17288:	add	r1, pc, r1
   1728c:	bl	13f7c <fprintf@plt>
   17290:	ldrh	r3, [r5, #72]	; 0x48
   17294:	and	r3, r3, #128	; 0x80
   17298:	b	16e88 <__flatcc_fb_codegen_c@@Base+0x18c4>
   1729c:	ldr	r2, [pc, #1136]	; 17714 <__flatcc_fb_codegen_c@@Base+0x2150>
   172a0:	ldr	r3, [pc, #1136]	; 17718 <__flatcc_fb_codegen_c@@Base+0x2154>
   172a4:	add	r2, pc, r2
   172a8:	add	r3, pc, r3
   172ac:	b	1710c <__flatcc_fb_codegen_c@@Base+0x1b48>
   172b0:	ldr	r2, [pc, #1124]	; 1771c <__flatcc_fb_codegen_c@@Base+0x2158>
   172b4:	ldr	r3, [pc, #1124]	; 17720 <__flatcc_fb_codegen_c@@Base+0x215c>
   172b8:	add	r2, pc, r2
   172bc:	add	r3, pc, r3
   172c0:	b	1710c <__flatcc_fb_codegen_c@@Base+0x1b48>
   172c4:	ldr	r2, [pc, #1112]	; 17724 <__flatcc_fb_codegen_c@@Base+0x2160>
   172c8:	ldr	r3, [pc, #1112]	; 17728 <__flatcc_fb_codegen_c@@Base+0x2164>
   172cc:	add	r2, pc, r2
   172d0:	add	r3, pc, r3
   172d4:	b	1710c <__flatcc_fb_codegen_c@@Base+0x1b48>
   172d8:	ldr	r3, [pc, #1100]	; 1772c <__flatcc_fb_codegen_c@@Base+0x2168>
   172dc:	ldr	r1, [pc, #1100]	; 17730 <__flatcc_fb_codegen_c@@Base+0x216c>
   172e0:	ldr	r2, [pc, #1100]	; 17734 <__flatcc_fb_codegen_c@@Base+0x2170>
   172e4:	add	r3, pc, r3
   172e8:	add	r1, pc, r1
   172ec:	add	r2, pc, r2
   172f0:	b	17264 <__flatcc_fb_codegen_c@@Base+0x1ca0>
   172f4:	ldr	r2, [sp, #48]	; 0x30
   172f8:	ldr	r1, [sp, #44]	; 0x2c
   172fc:	mov	r3, r2
   17300:	b	17264 <__flatcc_fb_codegen_c@@Base+0x1ca0>
   17304:	ldr	r3, [pc, #1068]	; 17738 <__flatcc_fb_codegen_c@@Base+0x2174>
   17308:	ldr	r1, [pc, #1068]	; 1773c <__flatcc_fb_codegen_c@@Base+0x2178>
   1730c:	add	r3, pc, r3
   17310:	add	r1, pc, r1
   17314:	mov	r2, r3
   17318:	b	17264 <__flatcc_fb_codegen_c@@Base+0x1ca0>
   1731c:	ldr	r3, [pc, #1052]	; 17740 <__flatcc_fb_codegen_c@@Base+0x217c>
   17320:	ldr	r1, [pc, #1052]	; 17744 <__flatcc_fb_codegen_c@@Base+0x2180>
   17324:	ldr	r2, [pc, #1052]	; 17748 <__flatcc_fb_codegen_c@@Base+0x2184>
   17328:	add	r3, pc, r3
   1732c:	add	r1, pc, r1
   17330:	add	r2, pc, r2
   17334:	b	17264 <__flatcc_fb_codegen_c@@Base+0x1ca0>
   17338:	ldr	r3, [pc, #1036]	; 1774c <__flatcc_fb_codegen_c@@Base+0x2188>
   1733c:	ldr	r1, [pc, #1036]	; 17750 <__flatcc_fb_codegen_c@@Base+0x218c>
   17340:	ldr	r2, [pc, #1036]	; 17754 <__flatcc_fb_codegen_c@@Base+0x2190>
   17344:	add	r3, pc, r3
   17348:	add	r1, pc, r1
   1734c:	add	r2, pc, r2
   17350:	b	17264 <__flatcc_fb_codegen_c@@Base+0x1ca0>
   17354:	ldr	r3, [pc, #1020]	; 17758 <__flatcc_fb_codegen_c@@Base+0x2194>
   17358:	ldr	r1, [pc, #1020]	; 1775c <__flatcc_fb_codegen_c@@Base+0x2198>
   1735c:	ldr	r2, [pc, #1020]	; 17760 <__flatcc_fb_codegen_c@@Base+0x219c>
   17360:	add	r3, pc, r3
   17364:	add	r1, pc, r1
   17368:	add	r2, pc, r2
   1736c:	b	17264 <__flatcc_fb_codegen_c@@Base+0x1ca0>
   17370:	ldr	r3, [pc, #1004]	; 17764 <__flatcc_fb_codegen_c@@Base+0x21a0>
   17374:	ldr	r1, [pc, #1004]	; 17768 <__flatcc_fb_codegen_c@@Base+0x21a4>
   17378:	ldr	r2, [pc, #1004]	; 1776c <__flatcc_fb_codegen_c@@Base+0x21a8>
   1737c:	add	r3, pc, r3
   17380:	add	r1, pc, r1
   17384:	add	r2, pc, r2
   17388:	b	17264 <__flatcc_fb_codegen_c@@Base+0x1ca0>
   1738c:	ldr	r3, [sp, #32]
   17390:	ldr	r1, [sp, #36]	; 0x24
   17394:	ldr	r2, [sp, #40]	; 0x28
   17398:	b	17264 <__flatcc_fb_codegen_c@@Base+0x1ca0>
   1739c:	ldr	r3, [pc, #972]	; 17770 <__flatcc_fb_codegen_c@@Base+0x21ac>
   173a0:	ldr	r1, [pc, #972]	; 17774 <__flatcc_fb_codegen_c@@Base+0x21b0>
   173a4:	ldr	r2, [pc, #972]	; 17778 <__flatcc_fb_codegen_c@@Base+0x21b4>
   173a8:	add	r3, pc, r3
   173ac:	add	r1, pc, r1
   173b0:	add	r2, pc, r2
   173b4:	b	17264 <__flatcc_fb_codegen_c@@Base+0x1ca0>
   173b8:	ldr	r3, [pc, #956]	; 1777c <__flatcc_fb_codegen_c@@Base+0x21b8>
   173bc:	ldr	r1, [pc, #956]	; 17780 <__flatcc_fb_codegen_c@@Base+0x21bc>
   173c0:	ldr	r2, [pc, #956]	; 17784 <__flatcc_fb_codegen_c@@Base+0x21c0>
   173c4:	add	r3, pc, r3
   173c8:	add	r1, pc, r1
   173cc:	add	r2, pc, r2
   173d0:	b	17264 <__flatcc_fb_codegen_c@@Base+0x1ca0>
   173d4:	ldr	r2, [pc, #568]	; 17614 <__flatcc_fb_codegen_c@@Base+0x2050>
   173d8:	ldr	r1, [sp, #68]	; 0x44
   173dc:	ldr	r3, [pc, #932]	; 17788 <__flatcc_fb_codegen_c@@Base+0x21c4>
   173e0:	ldr	r4, [pc, #932]	; 1778c <__flatcc_fb_codegen_c@@Base+0x21c8>
   173e4:	ldr	r1, [r1, r2]
   173e8:	add	r3, pc, r3
   173ec:	str	r3, [sp]
   173f0:	ldr	r0, [r1]
   173f4:	ldr	r1, [pc, #916]	; 17790 <__flatcc_fb_codegen_c@@Base+0x21cc>
   173f8:	add	r4, pc, r4
   173fc:	mov	r2, r4
   17400:	mov	r3, #141	; 0x8d
   17404:	add	r1, pc, r1
   17408:	bl	13f7c <fprintf@plt>
   1740c:	ldr	r3, [pc, #896]	; 17794 <__flatcc_fb_codegen_c@@Base+0x21d0>
   17410:	ldr	r0, [pc, #896]	; 17798 <__flatcc_fb_codegen_c@@Base+0x21d4>
   17414:	add	r3, pc, r3
   17418:	mov	r1, r4
   1741c:	add	r3, r3, #32
   17420:	mov	r2, #141	; 0x8d
   17424:	add	r0, pc, r0
   17428:	bl	14030 <__assert_fail@plt>
   1742c:	ldr	r1, [pc, #872]	; 1779c <__flatcc_fb_codegen_c@@Base+0x21d8>
   17430:	ldr	r2, [sp, #64]	; 0x40
   17434:	add	r1, pc, r1
   17438:	ldr	r0, [r4, #204]	; 0xcc
   1743c:	bl	13f7c <fprintf@plt>
   17440:	b	16f70 <__flatcc_fb_codegen_c@@Base+0x19ac>
   17444:	ldr	r0, [pc, #852]	; 177a0 <__flatcc_fb_codegen_c@@Base+0x21dc>
   17448:	mov	r2, #66	; 0x42
   1744c:	mov	r1, #1
   17450:	add	r0, pc, r0
   17454:	bl	13f10 <fwrite@plt>
   17458:	ldr	r0, [pc, #836]	; 177a4 <__flatcc_fb_codegen_c@@Base+0x21e0>
   1745c:	ldr	r3, [r4, #204]	; 0xcc
   17460:	mov	r2, #61	; 0x3d
   17464:	mov	r1, #1
   17468:	add	r0, pc, r0
   1746c:	bl	13f10 <fwrite@plt>
   17470:	ldr	r1, [pc, #816]	; 177a8 <__flatcc_fb_codegen_c@@Base+0x21e4>
   17474:	ldr	r0, [r4, #204]	; 0xcc
   17478:	mov	r3, sl
   1747c:	stm	sp, {r6, r7, fp}
   17480:	mov	r2, r4
   17484:	add	r1, pc, r1
   17488:	bl	13f7c <fprintf@plt>
   1748c:	ldr	r3, [r4, #212]	; 0xd4
   17490:	ldr	r3, [r3, #136]	; 0x88
   17494:	cmp	r3, #0
   17498:	beq	170e8 <__flatcc_fb_codegen_c@@Base+0x1b24>
   1749c:	ldr	r1, [pc, #776]	; 177ac <__flatcc_fb_codegen_c@@Base+0x21e8>
   174a0:	ldr	r0, [r4, #204]	; 0xcc
   174a4:	mov	r3, sl
   174a8:	str	sl, [sp, #12]
   174ac:	stm	sp, {r6, r7, fp}
   174b0:	mov	r2, r4
   174b4:	add	r1, pc, r1
   174b8:	bl	13f7c <fprintf@plt>
   174bc:	b	170e8 <__flatcc_fb_codegen_c@@Base+0x1b24>
   174c0:	ldr	r2, [pc, #332]	; 17614 <__flatcc_fb_codegen_c@@Base+0x2050>
   174c4:	ldr	r1, [sp, #68]	; 0x44
   174c8:	ldr	r3, [pc, #736]	; 177b0 <__flatcc_fb_codegen_c@@Base+0x21ec>
   174cc:	ldr	r4, [pc, #736]	; 177b4 <__flatcc_fb_codegen_c@@Base+0x21f0>
   174d0:	ldr	r1, [r1, r2]
   174d4:	add	r3, pc, r3
   174d8:	str	r3, [sp]
   174dc:	ldr	r0, [r1]
   174e0:	ldr	r1, [pc, #720]	; 177b8 <__flatcc_fb_codegen_c@@Base+0x21f4>
   174e4:	add	r4, pc, r4
   174e8:	mov	r2, r4
   174ec:	mov	r3, #96	; 0x60
   174f0:	add	r1, pc, r1
   174f4:	bl	13f7c <fprintf@plt>
   174f8:	ldr	r3, [pc, #700]	; 177bc <__flatcc_fb_codegen_c@@Base+0x21f8>
   174fc:	ldr	r0, [pc, #700]	; 177c0 <__flatcc_fb_codegen_c@@Base+0x21fc>
   17500:	add	r3, pc, r3
   17504:	mov	r1, r4
   17508:	add	r3, r3, #92	; 0x5c
   1750c:	mov	r2, #96	; 0x60
   17510:	add	r0, pc, r0
   17514:	bl	14030 <__assert_fail@plt>
   17518:	ldr	r1, [pc, #676]	; 177c4 <__flatcc_fb_codegen_c@@Base+0x2200>
   1751c:	ldr	r0, [r4, #204]	; 0xcc
   17520:	mov	r3, sl
   17524:	stm	sp, {r6, r7}
   17528:	mov	r2, sl
   1752c:	add	r1, pc, r1
   17530:	mov	r8, #1
   17534:	bl	13f7c <fprintf@plt>
   17538:	mov	r9, r8
   1753c:	b	16e98 <__flatcc_fb_codegen_c@@Base+0x18d4>
   17540:	ldr	r3, [pc, #640]	; 177c8 <__flatcc_fb_codegen_c@@Base+0x2204>
   17544:	ldr	r1, [pc, #640]	; 177cc <__flatcc_fb_codegen_c@@Base+0x2208>
   17548:	ldr	r0, [pc, #640]	; 177d0 <__flatcc_fb_codegen_c@@Base+0x220c>
   1754c:	add	r3, pc, r3
   17550:	ldr	r2, [pc, #636]	; 177d4 <__flatcc_fb_codegen_c@@Base+0x2210>
   17554:	add	r3, r3, #80	; 0x50
   17558:	add	r1, pc, r1
   1755c:	add	r0, pc, r0
   17560:	bl	14030 <__assert_fail@plt>
   17564:	ldr	r3, [pc, #620]	; 177d8 <__flatcc_fb_codegen_c@@Base+0x2214>
   17568:	ldr	r1, [pc, #620]	; 177dc <__flatcc_fb_codegen_c@@Base+0x2218>
   1756c:	ldr	r0, [pc, #620]	; 177e0 <__flatcc_fb_codegen_c@@Base+0x221c>
   17570:	add	r3, pc, r3
   17574:	mov	r2, #936	; 0x3a8
   17578:	add	r3, r3, #80	; 0x50
   1757c:	add	r1, pc, r1
   17580:	add	r0, pc, r0
   17584:	bl	14030 <__assert_fail@plt>
   17588:	ldr	r3, [pc, #596]	; 177e4 <__flatcc_fb_codegen_c@@Base+0x2220>
   1758c:	ldr	r1, [pc, #596]	; 177e8 <__flatcc_fb_codegen_c@@Base+0x2224>
   17590:	ldr	r0, [pc, #596]	; 177ec <__flatcc_fb_codegen_c@@Base+0x2228>
   17594:	add	r3, pc, r3
   17598:	ldr	r2, [pc, #592]	; 177f0 <__flatcc_fb_codegen_c@@Base+0x222c>
   1759c:	add	r3, r3, #80	; 0x50
   175a0:	add	r1, pc, r1
   175a4:	add	r0, pc, r0
   175a8:	bl	14030 <__assert_fail@plt>
   175ac:	andeq	r3, r5, r8, lsl r8
   175b0:	andeq	r9, r2, r8, ror r2
   175b4:	andeq	r2, r3, r8, lsr #29
   175b8:	andeq	r2, r3, r4, lsr #29
   175bc:	andeq	r9, r2, r0, ror #4
   175c0:	andeq	r1, r3, ip, ror #11
   175c4:	andeq	r9, r2, r4, lsl ip
   175c8:	andeq	r9, r2, ip, ror r6
   175cc:	andeq	r9, r2, ip, ror #12
   175d0:	andeq	r9, r2, ip, lsl #3
   175d4:	andeq	r9, r2, ip, asr #12
   175d8:	andeq	r9, r2, r0, ror r1
   175dc:	strdeq	r1, [r3], -ip
   175e0:	muleq	r2, r4, fp
   175e4:			; <UNDEFINED> instruction: 0x00029ab0
   175e8:	strdeq	r1, [r3], -r0
   175ec:	andeq	r9, r2, r8, asr #11
   175f0:	andeq	r9, r2, ip, ror #11
   175f4:	andeq	r9, r2, r8, lsr #12
   175f8:	andeq	r9, r2, r0, asr r6
   175fc:	ldrdeq	r9, [r2], -ip
   17600:	ldrdeq	r9, [r2], -r8
   17604:	andeq	r9, r2, ip, ror #8
   17608:	andeq	r9, r2, r0, lsr #9
   1760c:	andeq	r9, r2, r4, lsl r4
   17610:	andeq	r9, r2, r0, lsr r4
   17614:	muleq	r0, ip, r0
   17618:	andeq	r8, r2, r8, lsl lr
   1761c:	andeq	r8, r2, r0, lsl #21
   17620:	strdeq	r8, [r2], -r0
   17624:	andeq	r0, r0, r5, lsl #8
   17628:	andeq	r8, r2, r4, lsr #19
   1762c:	ldrdeq	r1, [r3], -r0
   17630:	andeq	r8, r2, r8, ror #18
   17634:	andeq	r8, r2, ip, lsl sl
   17638:	andeq	r9, r2, r0, lsr #2
   1763c:	andeq	r0, r0, sl, lsr #7
   17640:	muleq	r2, r8, r2
   17644:	andeq	r9, r2, r8, lsl #2
   17648:	andeq	r9, r2, r0, asr r1
   1764c:	andeq	r9, r2, r8, lsl #3
   17650:	andeq	r9, r2, ip, lsr #3
   17654:	andeq	r9, r2, r8, lsr r4
   17658:	andeq	r9, r2, r0, asr r4
   1765c:	andeq	r9, r2, r8, ror r4
   17660:	andeq	r8, r2, r4, lsl #22
   17664:	muleq	r2, r4, r6
   17668:	strdeq	r2, [r3], -ip
   1766c:	andeq	r8, r2, ip, lsr fp
   17670:	andeq	r8, r2, r4, ror pc
   17674:	andeq	r2, r3, r4, asr #17
   17678:	andeq	r9, r2, r4, lsr #2
   1767c:	andeq	r9, r2, ip, lsr #32
   17680:	andeq	r9, r2, r0, lsr r0
   17684:	andeq	r1, r3, r4, lsl #10
   17688:	andeq	r9, r2, ip, asr #10
   1768c:	muleq	r2, r0, r2
   17690:	muleq	r2, r4, r2
   17694:	andeq	r9, r2, r4, ror #5
   17698:	andeq	r9, r2, r8, lsl #6
   1769c:	ldrdeq	r9, [r2], -r0
   176a0:	strdeq	r9, [r2], -r8
   176a4:	andeq	r9, r2, r8, lsl r3
   176a8:	strdeq	r2, [r3], -r0
   176ac:	andeq	r8, r2, r4, lsl #16
   176b0:	andeq	r8, r2, r8, lsl #29
   176b4:			; <UNDEFINED> instruction: 0x000325b4
   176b8:	ldrdeq	r8, [r2], -ip
   176bc:	andeq	r2, r3, r0, lsr #11
   176c0:	andeq	r8, r2, r8, ror #15
   176c4:	andeq	r2, r3, ip, lsl #11
   176c8:	andeq	r8, r2, r4, lsr #15
   176cc:	andeq	r2, r3, r8, ror r5
   176d0:	andeq	r8, r2, r8, asr #15
   176d4:	andeq	r2, r3, r4, ror #10
   176d8:	andeq	r8, r2, r4, lsr #15
   176dc:	andeq	r2, r3, r0, asr r5
   176e0:	andeq	r8, r2, r8, lsl #15
   176e4:	andeq	r2, r3, ip, lsr r5
   176e8:	andeq	r8, r2, ip, ror #14
   176ec:	andeq	r8, r2, r4, lsr #17
   176f0:	andeq	r8, r2, r8, lsr #16
   176f4:	andeq	r8, r2, ip, ror r8
   176f8:	andeq	r8, r2, r0, lsr r4
   176fc:	andeq	r0, r3, ip, asr ip
   17700:	muleq	r2, ip, sp
   17704:	andeq	r9, r2, r0, lsl r2
   17708:			; <UNDEFINED> instruction: 0x000286b0
   1770c:	andeq	r0, r4, ip, asr lr
   17710:			; <UNDEFINED> instruction: 0x00028fb8
   17714:	andeq	r2, r3, r4, asr #8
   17718:	andeq	r8, r2, r0, asr r6
   1771c:	andeq	r2, r3, r0, lsr r4
   17720:	andeq	r8, r2, r4, lsr #12
   17724:	andeq	r2, r3, ip, lsl r4
   17728:	andeq	r8, r2, ip, lsl r6
   1772c:	andeq	r8, r2, r8, asr #12
   17730:	andeq	r2, r3, r0, lsl #8
   17734:			; <UNDEFINED> instruction: 0x00028abc
   17738:	andeq	r8, r2, r8, lsr #12
   1773c:	ldrdeq	r2, [r3], -r8
   17740:	andeq	r8, r2, ip, ror #11
   17744:			; <UNDEFINED> instruction: 0x000323bc
   17748:	andeq	r8, r2, r0, ror #20
   1774c:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   17750:	andeq	r2, r3, r0, lsr #7
   17754:	andeq	r8, r2, ip, asr #20
   17758:	andeq	r8, r2, r4, asr #11
   1775c:	andeq	r2, r3, r4, lsl #7
   17760:	andeq	r8, r2, r8, lsr sl
   17764:	andeq	r8, r2, r8, lsl #11
   17768:	andeq	r2, r3, r8, ror #6
   1776c:	andeq	r8, r2, r4, lsl #20
   17770:	andeq	r8, r2, r0, asr r5
   17774:	andeq	r2, r3, ip, lsr r3
   17778:	ldrdeq	r8, [r2], -r0
   1777c:	andeq	r8, r2, r8, lsr #10
   17780:	andeq	r2, r3, r0, lsr #6
   17784:	andeq	r8, r2, ip, lsr #19
   17788:	andeq	r8, r2, r8, lsl #13
   1778c:	andeq	r8, r2, ip, lsl #12
   17790:	andeq	r8, r2, r0, ror #12
   17794:	andeq	r8, r2, r4, lsl r2
   17798:	andeq	r0, r3, r0, asr #20
   1779c:	andeq	r8, r2, r4, asr fp
   177a0:	muleq	r2, ip, lr
   177a4:	andeq	r8, r2, r8, asr #29
   177a8:	andeq	r8, r2, ip, ror #29
   177ac:	strheq	r9, [r2], -r4
   177b0:	muleq	r2, ip, r5
   177b4:	andeq	r8, r2, r0, lsr #10
   177b8:	andeq	r8, r2, r4, ror r5
   177bc:	andeq	r8, r2, r8, lsr #2
   177c0:	andeq	r0, r3, r4, asr r9
   177c4:	strdeq	r8, [r2], -ip
   177c8:	ldrdeq	r8, [r2], -ip
   177cc:	muleq	r2, r0, r1
   177d0:	andeq	r8, r2, r4, ror r8
   177d4:	andeq	r0, r0, r9, lsr #7
   177d8:	strheq	r8, [r2], -r8	; <UNPREDICTABLE>
   177dc:	andeq	r8, r2, ip, ror #2
   177e0:	andeq	r8, r2, r0, lsr r8
   177e4:	muleq	r2, r4, r0
   177e8:	andeq	r8, r2, r8, asr #2
   177ec:	andeq	r8, r2, r8, lsr #20
   177f0:	strdeq	r0, [r0], -sl
   177f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   177f8:	sub	sp, sp, #1072	; 0x430
   177fc:	ldrh	r6, [r1, #8]
   17800:	ldr	r3, [pc, #3828]	; 186fc <__flatcc_fb_codegen_c@@Base+0x3138>
   17804:	sub	sp, sp, #4
   17808:	add	r3, pc, r3
   1780c:	cmp	r6, #0
   17810:	str	r1, [sp, #56]	; 0x38
   17814:	str	r3, [sp, #68]	; 0x44
   17818:	bne	195d4 <__flatcc_fb_codegen_c@@Base+0x4010>
   1781c:	add	r5, sp, #192	; 0xc0
   17820:	mov	r4, r0
   17824:	mov	r2, #220	; 0xdc
   17828:	mov	r0, r5
   1782c:	mov	r1, r6
   17830:	add	r7, sp, #412	; 0x19c
   17834:	str	r5, [sp, #48]	; 0x30
   17838:	str	r7, [sp, #60]	; 0x3c
   1783c:	bl	13f94 <memset@plt>
   17840:	mov	r2, #220	; 0xdc
   17844:	mov	r1, r6
   17848:	mov	r0, r7
   1784c:	bl	13f94 <memset@plt>
   17850:	ldr	r1, [r4, #204]	; 0xcc
   17854:	mov	r0, #10
   17858:	bl	13fdc <fputc@plt>
   1785c:	mov	r2, r5
   17860:	ldr	r5, [sp, #56]	; 0x38
   17864:	mov	r1, r5
   17868:	ldr	r0, [r5, #12]
   1786c:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   17870:	ldr	r5, [r5, #32]
   17874:	cmp	r5, #0
   17878:	beq	17920 <__flatcc_fb_codegen_c@@Base+0x235c>
   1787c:	ldr	fp, [pc, #3708]	; 18700 <__flatcc_fb_codegen_c@@Base+0x313c>
   17880:	ldr	sl, [pc, #3708]	; 18704 <__flatcc_fb_codegen_c@@Base+0x3140>
   17884:	ldr	r9, [pc, #3708]	; 18708 <__flatcc_fb_codegen_c@@Base+0x3144>
   17888:	ldr	r8, [pc, #3708]	; 1870c <__flatcc_fb_codegen_c@@Base+0x3148>
   1788c:	ldr	r7, [pc, #3708]	; 18710 <__flatcc_fb_codegen_c@@Base+0x314c>
   17890:	mov	r1, r6
   17894:	add	fp, pc, fp
   17898:	add	sl, pc, sl
   1789c:	add	r9, pc, r9
   178a0:	add	r8, pc, r8
   178a4:	add	r7, pc, r7
   178a8:	mov	r0, #1
   178ac:	ldr	r2, [r5, #4]
   178b0:	ldr	r3, [r2, #8]
   178b4:	cmp	r3, r1
   178b8:	beq	178dc <__flatcc_fb_codegen_c@@Base+0x2318>
   178bc:	cmp	r0, #0
   178c0:	movne	r2, r9
   178c4:	moveq	r2, fp
   178c8:	movne	r1, r8
   178cc:	moveq	r1, sl
   178d0:	ldr	r0, [r4, #204]	; 0xcc
   178d4:	bl	13f7c <fprintf@plt>
   178d8:	ldr	r2, [r5, #4]
   178dc:	ldr	r3, [r2]
   178e0:	mov	r1, r7
   178e4:	ldr	r2, [r2, #4]
   178e8:	ldr	r0, [r4, #204]	; 0xcc
   178ec:	bl	13f7c <fprintf@plt>
   178f0:	ldr	r3, [r5, #4]
   178f4:	ldr	r5, [r5]
   178f8:	mov	r0, r6
   178fc:	cmp	r5, #0
   17900:	ldr	r1, [r3, #8]
   17904:	bne	178ac <__flatcc_fb_codegen_c@@Base+0x22e8>
   17908:	ldr	r0, [pc, #3588]	; 18714 <__flatcc_fb_codegen_c@@Base+0x3150>
   1790c:	ldr	r3, [r4, #204]	; 0xcc
   17910:	mov	r2, #4
   17914:	mov	r1, #1
   17918:	add	r0, pc, r0
   1791c:	bl	13f10 <fwrite@plt>
   17920:	ldr	r5, [sp, #48]	; 0x30
   17924:	ldr	r1, [pc, #3564]	; 18718 <__flatcc_fb_codegen_c@@Base+0x3154>
   17928:	mov	r2, r5
   1792c:	add	r1, pc, r1
   17930:	ldr	r0, [r4, #204]	; 0xcc
   17934:	bl	13f7c <fprintf@plt>
   17938:	ldr	r1, [pc, #3548]	; 1871c <__flatcc_fb_codegen_c@@Base+0x3158>
   1793c:	mov	r3, r5
   17940:	mov	r2, r5
   17944:	ldr	r0, [r4, #204]	; 0xcc
   17948:	add	r1, pc, r1
   1794c:	str	r4, [sp]
   17950:	bl	13f7c <fprintf@plt>
   17954:	ldr	r1, [pc, #3524]	; 18720 <__flatcc_fb_codegen_c@@Base+0x315c>
   17958:	ldr	r0, [r4, #204]	; 0xcc
   1795c:	mov	r3, r5
   17960:	mov	r2, r5
   17964:	stmib	sp, {r4, r5}
   17968:	str	r5, [sp]
   1796c:	add	r1, pc, r1
   17970:	bl	13f7c <fprintf@plt>
   17974:	ldr	r1, [pc, #3496]	; 18724 <__flatcc_fb_codegen_c@@Base+0x3160>
   17978:	mov	r3, r5
   1797c:	mov	r2, r4
   17980:	add	r1, pc, r1
   17984:	ldr	r0, [r4, #204]	; 0xcc
   17988:	bl	13f7c <fprintf@plt>
   1798c:	ldr	r1, [r4, #204]	; 0xcc
   17990:	mov	r0, #10
   17994:	bl	13fdc <fputc@plt>
   17998:	ldr	r3, [sp, #56]	; 0x38
   1799c:	ldr	r5, [r3, #20]
   179a0:	cmp	r5, #0
   179a4:	beq	17af0 <__flatcc_fb_codegen_c@@Base+0x252c>
   179a8:	ldr	r3, [pc, #3448]	; 18728 <__flatcc_fb_codegen_c@@Base+0x3164>
   179ac:	ldr	r8, [pc, #3448]	; 1872c <__flatcc_fb_codegen_c@@Base+0x3168>
   179b0:	add	r3, pc, r3
   179b4:	str	r3, [sp, #44]	; 0x2c
   179b8:	ldr	sl, [pc, #3440]	; 18730 <__flatcc_fb_codegen_c@@Base+0x316c>
   179bc:	ldr	r9, [pc, #3440]	; 18734 <__flatcc_fb_codegen_c@@Base+0x3170>
   179c0:	ldr	fp, [pc, #3440]	; 18738 <__flatcc_fb_codegen_c@@Base+0x3174>
   179c4:	ldr	r3, [pc, #3440]	; 1873c <__flatcc_fb_codegen_c@@Base+0x3178>
   179c8:	add	r8, pc, r8
   179cc:	add	r3, pc, r3
   179d0:	add	sl, pc, sl
   179d4:	add	r9, pc, r9
   179d8:	add	fp, pc, fp
   179dc:	str	r3, [sp, #52]	; 0x34
   179e0:	mov	r3, #0
   179e4:	str	r3, [sp, #64]	; 0x40
   179e8:	ldr	r6, [r5, #68]	; 0x44
   179ec:	cmp	r6, #0
   179f0:	beq	17a70 <__flatcc_fb_codegen_c@@Base+0x24ac>
   179f4:	mov	r3, #0
   179f8:	mov	r7, r3
   179fc:	mov	r0, #1
   17a00:	ldr	r2, [r6, #4]
   17a04:	ldr	r1, [r2, #8]
   17a08:	cmp	r1, r3
   17a0c:	beq	17a30 <__flatcc_fb_codegen_c@@Base+0x246c>
   17a10:	cmp	r0, #0
   17a14:	movne	r2, sl
   17a18:	ldreq	r2, [sp, #44]	; 0x2c
   17a1c:	movne	r1, r9
   17a20:	moveq	r1, r8
   17a24:	ldr	r0, [r4, #204]	; 0xcc
   17a28:	bl	13f7c <fprintf@plt>
   17a2c:	ldr	r2, [r6, #4]
   17a30:	ldr	r3, [r2]
   17a34:	mov	r1, fp
   17a38:	ldr	r2, [r2, #4]
   17a3c:	ldr	r0, [r4, #204]	; 0xcc
   17a40:	bl	13f7c <fprintf@plt>
   17a44:	ldr	r3, [r6, #4]
   17a48:	ldr	r6, [r6]
   17a4c:	mov	r0, r7
   17a50:	cmp	r6, #0
   17a54:	ldr	r3, [r3, #8]
   17a58:	bne	17a00 <__flatcc_fb_codegen_c@@Base+0x243c>
   17a5c:	ldr	r3, [r4, #204]	; 0xcc
   17a60:	mov	r2, #4
   17a64:	mov	r1, #1
   17a68:	ldr	r0, [sp, #52]	; 0x34
   17a6c:	bl	13f10 <fwrite@plt>
   17a70:	ldrh	r3, [r5, #72]	; 0x48
   17a74:	ldr	r2, [r5, #4]
   17a78:	tst	r3, #4
   17a7c:	ldr	r7, [r2]
   17a80:	ldr	r6, [r2, #4]
   17a84:	bne	17ac8 <__flatcc_fb_codegen_c@@Base+0x2504>
   17a88:	ldrh	r2, [r5, #24]
   17a8c:	lsr	r3, r3, #8
   17a90:	and	r3, r3, #1
   17a94:	sub	r2, r2, #7
   17a98:	cmp	r2, #8
   17a9c:	addls	pc, pc, r2, lsl #2
   17aa0:	b	17dec <__flatcc_fb_codegen_c@@Base+0x2828>
   17aa4:	b	17dac <__flatcc_fb_codegen_c@@Base+0x27e8>
   17aa8:	b	17d64 <__flatcc_fb_codegen_c@@Base+0x27a0>
   17aac:	b	17d24 <__flatcc_fb_codegen_c@@Base+0x2760>
   17ab0:	b	17be8 <__flatcc_fb_codegen_c@@Base+0x2624>
   17ab4:	b	17dec <__flatcc_fb_codegen_c@@Base+0x2828>
   17ab8:	b	17dec <__flatcc_fb_codegen_c@@Base+0x2828>
   17abc:	b	17dec <__flatcc_fb_codegen_c@@Base+0x2828>
   17ac0:	b	17ba8 <__flatcc_fb_codegen_c@@Base+0x25e4>
   17ac4:	b	17afc <__flatcc_fb_codegen_c@@Base+0x2538>
   17ac8:	ldr	r1, [pc, #3184]	; 18740 <__flatcc_fb_codegen_c@@Base+0x317c>
   17acc:	ldr	r0, [r4, #204]	; 0xcc
   17ad0:	mov	r3, r6
   17ad4:	str	r7, [sp]
   17ad8:	ldr	r2, [sp, #48]	; 0x30
   17adc:	add	r1, pc, r1
   17ae0:	bl	13f7c <fprintf@plt>
   17ae4:	ldr	r5, [r5]
   17ae8:	cmp	r5, #0
   17aec:	bne	179e8 <__flatcc_fb_codegen_c@@Base+0x2424>
   17af0:	add	sp, sp, #1072	; 0x430
   17af4:	add	sp, sp, #4
   17af8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17afc:	ldr	r1, [r5, #16]
   17b00:	ldr	r2, [sp, #60]	; 0x3c
   17b04:	str	r3, [sp, #72]	; 0x48
   17b08:	ldr	r0, [r1, #12]
   17b0c:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   17b10:	ldr	r2, [r5, #16]
   17b14:	ldrh	r2, [r2, #8]
   17b18:	cmp	r2, #4
   17b1c:	bhi	195f8 <__flatcc_fb_codegen_c@@Base+0x4034>
   17b20:	mov	r1, #1
   17b24:	ldr	r3, [sp, #72]	; 0x48
   17b28:	lsl	r1, r1, r2
   17b2c:	tst	r1, #27
   17b30:	beq	195f8 <__flatcc_fb_codegen_c@@Base+0x4034>
   17b34:	str	r3, [sp, #24]
   17b38:	ldr	r3, [sp, #60]	; 0x3c
   17b3c:	cmp	r2, #4
   17b40:	str	r3, [sp, #20]
   17b44:	ldr	r3, [sp, #48]	; 0x30
   17b48:	str	r7, [sp, #16]
   17b4c:	str	r6, [sp, #12]
   17b50:	str	r3, [sp, #8]
   17b54:	ldrd	r6, [r5, #96]	; 0x60
   17b58:	ldr	r0, [r4, #204]	; 0xcc
   17b5c:	beq	182dc <__flatcc_fb_codegen_c@@Base+0x2d18>
   17b60:	ldr	r1, [pc, #3036]	; 18744 <__flatcc_fb_codegen_c@@Base+0x3180>
   17b64:	mov	r2, r4
   17b68:	strd	r6, [sp]
   17b6c:	add	r1, pc, r1
   17b70:	bl	13f7c <fprintf@plt>
   17b74:	ldrh	r3, [r5, #72]	; 0x48
   17b78:	and	r3, r3, #128	; 0x80
   17b7c:	cmp	r3, #0
   17b80:	beq	17ae4 <__flatcc_fb_codegen_c@@Base+0x2520>
   17b84:	ldr	r0, [pc, #3004]	; 18748 <__flatcc_fb_codegen_c@@Base+0x3184>
   17b88:	ldr	r3, [r4, #204]	; 0xcc
   17b8c:	mov	r2, #84	; 0x54
   17b90:	mov	r1, #1
   17b94:	add	r0, pc, r0
   17b98:	bl	13f10 <fwrite@plt>
   17b9c:	mov	r3, #1
   17ba0:	str	r3, [sp, #64]	; 0x40
   17ba4:	b	17ae4 <__flatcc_fb_codegen_c@@Base+0x2520>
   17ba8:	ldr	r1, [r5, #16]
   17bac:	ldr	r2, [sp, #60]	; 0x3c
   17bb0:	str	r3, [sp, #72]	; 0x48
   17bb4:	ldr	r0, [r1, #12]
   17bb8:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   17bbc:	ldr	r1, [r5, #16]
   17bc0:	ldr	r3, [sp, #72]	; 0x48
   17bc4:	ldrh	r2, [r1, #8]
   17bc8:	cmp	r2, #4
   17bcc:	addls	pc, pc, r2, lsl #2
   17bd0:	b	17fa0 <__flatcc_fb_codegen_c@@Base+0x29dc>
   17bd4:	b	17ef8 <__flatcc_fb_codegen_c@@Base+0x2934>
   17bd8:	b	17eb4 <__flatcc_fb_codegen_c@@Base+0x28f0>
   17bdc:	b	17fa0 <__flatcc_fb_codegen_c@@Base+0x29dc>
   17be0:	b	17e8c <__flatcc_fb_codegen_c@@Base+0x28c8>
   17be4:	b	17e44 <__flatcc_fb_codegen_c@@Base+0x2880>
   17be8:	str	r3, [sp, #20]
   17bec:	ldr	r3, [sp, #48]	; 0x30
   17bf0:	str	r7, [sp, #16]
   17bf4:	str	r6, [sp, #12]
   17bf8:	str	r3, [sp, #8]
   17bfc:	ldrd	r0, [r5, #96]	; 0x60
   17c00:	ldr	r3, [r4, #204]	; 0xcc
   17c04:	mov	r2, r4
   17c08:	strd	r0, [sp]
   17c0c:	ldr	r1, [pc, #2872]	; 1874c <__flatcc_fb_codegen_c@@Base+0x3188>
   17c10:	mov	r0, r3
   17c14:	add	r1, pc, r1
   17c18:	bl	13f7c <fprintf@plt>
   17c1c:	ldr	r3, [r4, #212]	; 0xd4
   17c20:	ldr	r3, [r3, #32]
   17c24:	cmp	r3, #0
   17c28:	bne	17c54 <__flatcc_fb_codegen_c@@Base+0x2690>
   17c2c:	ldrh	r3, [r5, #72]	; 0x48
   17c30:	tst	r3, #128	; 0x80
   17c34:	beq	17ae4 <__flatcc_fb_codegen_c@@Base+0x2520>
   17c38:	ldr	r1, [pc, #2832]	; 18750 <__flatcc_fb_codegen_c@@Base+0x318c>
   17c3c:	ldr	r0, [r4, #204]	; 0xcc
   17c40:	ldr	r3, [sp, #48]	; 0x30
   17c44:	stm	sp, {r6, r7}
   17c48:	mov	r2, r4
   17c4c:	add	r1, pc, r1
   17c50:	bl	13f7c <fprintf@plt>
   17c54:	ldrh	r3, [r5, #72]	; 0x48
   17c58:	tst	r3, #128	; 0x80
   17c5c:	beq	17ae4 <__flatcc_fb_codegen_c@@Base+0x2520>
   17c60:	ldr	r3, [sp, #64]	; 0x40
   17c64:	cmp	r3, #0
   17c68:	bne	17f3c <__flatcc_fb_codegen_c@@Base+0x2978>
   17c6c:	ldr	r1, [pc, #2784]	; 18754 <__flatcc_fb_codegen_c@@Base+0x3190>
   17c70:	ldr	r0, [r4, #204]	; 0xcc
   17c74:	ldr	r3, [sp, #48]	; 0x30
   17c78:	stm	sp, {r6, r7}
   17c7c:	mov	r2, r4
   17c80:	add	r1, pc, r1
   17c84:	bl	13f7c <fprintf@plt>
   17c88:	ldr	r3, [r4, #212]	; 0xd4
   17c8c:	ldr	r3, [r3, #136]	; 0x88
   17c90:	cmp	r3, #0
   17c94:	beq	17cb4 <__flatcc_fb_codegen_c@@Base+0x26f0>
   17c98:	ldr	r1, [pc, #2744]	; 18758 <__flatcc_fb_codegen_c@@Base+0x3194>
   17c9c:	ldr	r0, [r4, #204]	; 0xcc
   17ca0:	ldr	r3, [sp, #48]	; 0x30
   17ca4:	stm	sp, {r6, r7}
   17ca8:	mov	r2, r4
   17cac:	add	r1, pc, r1
   17cb0:	bl	13f7c <fprintf@plt>
   17cb4:	ldr	r1, [pc, #2720]	; 1875c <__flatcc_fb_codegen_c@@Base+0x3198>
   17cb8:	ldr	r0, [r4, #204]	; 0xcc
   17cbc:	ldr	r3, [sp, #48]	; 0x30
   17cc0:	mov	r2, r4
   17cc4:	add	r1, pc, r1
   17cc8:	stm	sp, {r6, r7}
   17ccc:	bl	13f7c <fprintf@plt>
   17cd0:	ldr	r1, [pc, #2696]	; 18760 <__flatcc_fb_codegen_c@@Base+0x319c>
   17cd4:	ldr	r0, [r4, #204]	; 0xcc
   17cd8:	ldr	r3, [sp, #48]	; 0x30
   17cdc:	stm	sp, {r6, r7}
   17ce0:	mov	r2, r4
   17ce4:	add	r1, pc, r1
   17ce8:	bl	13f7c <fprintf@plt>
   17cec:	ldr	r3, [r4, #212]	; 0xd4
   17cf0:	ldr	r3, [r3, #136]	; 0x88
   17cf4:	cmp	r3, #0
   17cf8:	beq	17b9c <__flatcc_fb_codegen_c@@Base+0x25d8>
   17cfc:	ldr	r2, [sp, #48]	; 0x30
   17d00:	ldr	r1, [pc, #2652]	; 18764 <__flatcc_fb_codegen_c@@Base+0x31a0>
   17d04:	ldr	r0, [r4, #204]	; 0xcc
   17d08:	mov	r3, r2
   17d0c:	stm	sp, {r6, r7}
   17d10:	add	r1, pc, r1
   17d14:	bl	13f7c <fprintf@plt>
   17d18:	mov	r3, #1
   17d1c:	str	r3, [sp, #64]	; 0x40
   17d20:	b	17ae4 <__flatcc_fb_codegen_c@@Base+0x2520>
   17d24:	str	r3, [sp, #24]
   17d28:	ldr	r3, [sp, #48]	; 0x30
   17d2c:	str	r4, [sp, #20]
   17d30:	str	r3, [sp, #8]
   17d34:	str	r7, [sp, #16]
   17d38:	str	r6, [sp, #12]
   17d3c:	ldrd	r6, [r5, #96]	; 0x60
   17d40:	ldr	r1, [pc, #2592]	; 18768 <__flatcc_fb_codegen_c@@Base+0x31a4>
   17d44:	ldr	r0, [r4, #204]	; 0xcc
   17d48:	mov	r2, r4
   17d4c:	strd	r6, [sp]
   17d50:	add	r1, pc, r1
   17d54:	bl	13f7c <fprintf@plt>
   17d58:	ldrh	r3, [r5, #72]	; 0x48
   17d5c:	and	r3, r3, #128	; 0x80
   17d60:	b	17b7c <__flatcc_fb_codegen_c@@Base+0x25b8>
   17d64:	ldr	r2, [r5, #16]
   17d68:	cmp	r2, #5
   17d6c:	beq	17ff8 <__flatcc_fb_codegen_c@@Base+0x2a34>
   17d70:	sub	r3, r2, #1
   17d74:	cmp	r3, #10
   17d78:	addls	pc, pc, r3, lsl #2
   17d7c:	b	18d14 <__flatcc_fb_codegen_c@@Base+0x3750>
   17d80:	b	18508 <__flatcc_fb_codegen_c@@Base+0x2f44>
   17d84:	b	1863c <__flatcc_fb_codegen_c@@Base+0x3078>
   17d88:	b	18614 <__flatcc_fb_codegen_c@@Base+0x3050>
   17d8c:	b	185ec <__flatcc_fb_codegen_c@@Base+0x3028>
   17d90:	b	18d14 <__flatcc_fb_codegen_c@@Base+0x3750>
   17d94:	b	18530 <__flatcc_fb_codegen_c@@Base+0x2f6c>
   17d98:	b	18558 <__flatcc_fb_codegen_c@@Base+0x2f94>
   17d9c:	b	18580 <__flatcc_fb_codegen_c@@Base+0x2fbc>
   17da0:	b	185a4 <__flatcc_fb_codegen_c@@Base+0x2fe0>
   17da4:	b	185c8 <__flatcc_fb_codegen_c@@Base+0x3004>
   17da8:	b	184e4 <__flatcc_fb_codegen_c@@Base+0x2f20>
   17dac:	ldr	r2, [r5, #16]
   17db0:	sub	r2, r2, #1
   17db4:	cmp	r2, #10
   17db8:	addls	pc, pc, r2, lsl #2
   17dbc:	b	192f4 <__flatcc_fb_codegen_c@@Base+0x3d30>
   17dc0:	b	184b4 <__flatcc_fb_codegen_c@@Base+0x2ef0>
   17dc4:	b	18358 <__flatcc_fb_codegen_c@@Base+0x2d94>
   17dc8:	b	184cc <__flatcc_fb_codegen_c@@Base+0x2f08>
   17dcc:	b	184d8 <__flatcc_fb_codegen_c@@Base+0x2f14>
   17dd0:	b	1846c <__flatcc_fb_codegen_c@@Base+0x2ea8>
   17dd4:	b	18478 <__flatcc_fb_codegen_c@@Base+0x2eb4>
   17dd8:	b	18484 <__flatcc_fb_codegen_c@@Base+0x2ec0>
   17ddc:	b	18490 <__flatcc_fb_codegen_c@@Base+0x2ecc>
   17de0:	b	1849c <__flatcc_fb_codegen_c@@Base+0x2ed8>
   17de4:	b	184a8 <__flatcc_fb_codegen_c@@Base+0x2ee4>
   17de8:	b	184c0 <__flatcc_fb_codegen_c@@Base+0x2efc>
   17dec:	ldr	r2, [pc, #3416]	; 18b4c <__flatcc_fb_codegen_c@@Base+0x3588>
   17df0:	ldr	r1, [sp, #68]	; 0x44
   17df4:	ldr	r3, [pc, #2416]	; 1876c <__flatcc_fb_codegen_c@@Base+0x31a8>
   17df8:	ldr	r4, [pc, #2416]	; 18770 <__flatcc_fb_codegen_c@@Base+0x31ac>
   17dfc:	ldr	r1, [r1, r2]
   17e00:	add	r3, pc, r3
   17e04:	str	r3, [sp]
   17e08:	ldr	r0, [r1]
   17e0c:	ldr	r1, [pc, #2400]	; 18774 <__flatcc_fb_codegen_c@@Base+0x31b0>
   17e10:	add	r4, pc, r4
   17e14:	mov	r2, r4
   17e18:	ldr	r3, [pc, #2392]	; 18778 <__flatcc_fb_codegen_c@@Base+0x31b4>
   17e1c:	add	r1, pc, r1
   17e20:	bl	13f7c <fprintf@plt>
   17e24:	ldr	r3, [pc, #2384]	; 1877c <__flatcc_fb_codegen_c@@Base+0x31b8>
   17e28:	ldr	r0, [pc, #2384]	; 18780 <__flatcc_fb_codegen_c@@Base+0x31bc>
   17e2c:	add	r3, pc, r3
   17e30:	mov	r1, r4
   17e34:	add	r3, r3, #112	; 0x70
   17e38:	ldr	r2, [pc, #2360]	; 18778 <__flatcc_fb_codegen_c@@Base+0x31b4>
   17e3c:	add	r0, pc, r0
   17e40:	bl	14030 <__assert_fail@plt>
   17e44:	str	r3, [sp, #24]
   17e48:	ldr	r3, [sp, #60]	; 0x3c
   17e4c:	str	r7, [sp, #16]
   17e50:	str	r3, [sp, #20]
   17e54:	ldr	r3, [sp, #48]	; 0x30
   17e58:	str	r6, [sp, #12]
   17e5c:	str	r3, [sp, #8]
   17e60:	ldrd	r6, [r5, #96]	; 0x60
   17e64:	ldr	r1, [pc, #2328]	; 18784 <__flatcc_fb_codegen_c@@Base+0x31c0>
   17e68:	ldr	r0, [r4, #204]	; 0xcc
   17e6c:	mov	r3, r4
   17e70:	strd	r6, [sp]
   17e74:	mov	r2, r4
   17e78:	add	r1, pc, r1
   17e7c:	bl	13f7c <fprintf@plt>
   17e80:	ldrh	r3, [r5, #72]	; 0x48
   17e84:	and	r3, r3, #128	; 0x80
   17e88:	b	17b7c <__flatcc_fb_codegen_c@@Base+0x25b8>
   17e8c:	ldrh	r2, [r5, #56]	; 0x38
   17e90:	ldr	r3, [r1, #40]	; 0x28
   17e94:	sub	r2, r2, #3
   17e98:	cmp	r2, #3
   17e9c:	addls	pc, pc, r2, lsl #2
   17ea0:	b	1934c <__flatcc_fb_codegen_c@@Base+0x3d88>
   17ea4:	b	18b64 <__flatcc_fb_codegen_c@@Base+0x35a0>
   17ea8:	b	186c8 <__flatcc_fb_codegen_c@@Base+0x3104>
   17eac:	b	18694 <__flatcc_fb_codegen_c@@Base+0x30d0>
   17eb0:	b	18660 <__flatcc_fb_codegen_c@@Base+0x309c>
   17eb4:	str	r3, [sp, #24]
   17eb8:	ldr	r3, [sp, #60]	; 0x3c
   17ebc:	str	r7, [sp, #16]
   17ec0:	str	r3, [sp, #20]
   17ec4:	ldr	r3, [sp, #48]	; 0x30
   17ec8:	str	r6, [sp, #12]
   17ecc:	str	r3, [sp, #8]
   17ed0:	ldrd	r6, [r5, #96]	; 0x60
   17ed4:	ldr	r1, [pc, #2220]	; 18788 <__flatcc_fb_codegen_c@@Base+0x31c4>
   17ed8:	ldr	r0, [r4, #204]	; 0xcc
   17edc:	mov	r2, r4
   17ee0:	strd	r6, [sp]
   17ee4:	add	r1, pc, r1
   17ee8:	bl	13f7c <fprintf@plt>
   17eec:	ldrh	r3, [r5, #72]	; 0x48
   17ef0:	and	r3, r3, #128	; 0x80
   17ef4:	b	17b7c <__flatcc_fb_codegen_c@@Base+0x25b8>
   17ef8:	str	r3, [sp, #24]
   17efc:	ldr	r3, [sp, #60]	; 0x3c
   17f00:	str	r7, [sp, #16]
   17f04:	str	r3, [sp, #20]
   17f08:	ldr	r3, [sp, #48]	; 0x30
   17f0c:	str	r6, [sp, #12]
   17f10:	str	r3, [sp, #8]
   17f14:	ldrd	r6, [r5, #96]	; 0x60
   17f18:	ldr	r1, [pc, #2156]	; 1878c <__flatcc_fb_codegen_c@@Base+0x31c8>
   17f1c:	ldr	r0, [r4, #204]	; 0xcc
   17f20:	mov	r2, r4
   17f24:	strd	r6, [sp]
   17f28:	add	r1, pc, r1
   17f2c:	bl	13f7c <fprintf@plt>
   17f30:	ldrh	r3, [r5, #72]	; 0x48
   17f34:	and	r3, r3, #128	; 0x80
   17f38:	b	17b7c <__flatcc_fb_codegen_c@@Base+0x25b8>
   17f3c:	ldr	r0, [pc, #2124]	; 18790 <__flatcc_fb_codegen_c@@Base+0x31cc>
   17f40:	ldr	r3, [r4, #204]	; 0xcc
   17f44:	mov	r2, #66	; 0x42
   17f48:	mov	r1, #1
   17f4c:	add	r0, pc, r0
   17f50:	bl	13f10 <fwrite@plt>
   17f54:	ldr	r1, [pc, #2104]	; 18794 <__flatcc_fb_codegen_c@@Base+0x31d0>
   17f58:	ldr	r0, [r4, #204]	; 0xcc
   17f5c:	ldr	r3, [sp, #48]	; 0x30
   17f60:	stm	sp, {r6, r7}
   17f64:	mov	r2, r4
   17f68:	add	r1, pc, r1
   17f6c:	bl	13f7c <fprintf@plt>
   17f70:	ldr	r3, [r4, #212]	; 0xd4
   17f74:	ldr	r3, [r3, #136]	; 0x88
   17f78:	cmp	r3, #0
   17f7c:	beq	17b9c <__flatcc_fb_codegen_c@@Base+0x25d8>
   17f80:	ldr	r1, [pc, #2064]	; 18798 <__flatcc_fb_codegen_c@@Base+0x31d4>
   17f84:	ldr	r0, [r4, #204]	; 0xcc
   17f88:	ldr	r3, [sp, #48]	; 0x30
   17f8c:	stm	sp, {r6, r7}
   17f90:	mov	r2, r4
   17f94:	add	r1, pc, r1
   17f98:	bl	13f7c <fprintf@plt>
   17f9c:	b	17b9c <__flatcc_fb_codegen_c@@Base+0x25d8>
   17fa0:	ldr	r2, [pc, #2980]	; 18b4c <__flatcc_fb_codegen_c@@Base+0x3588>
   17fa4:	ldr	r1, [sp, #68]	; 0x44
   17fa8:	ldr	r3, [pc, #2028]	; 1879c <__flatcc_fb_codegen_c@@Base+0x31d8>
   17fac:	ldr	r4, [pc, #2028]	; 187a0 <__flatcc_fb_codegen_c@@Base+0x31dc>
   17fb0:	ldr	r1, [r1, r2]
   17fb4:	add	r3, pc, r3
   17fb8:	str	r3, [sp]
   17fbc:	ldr	r0, [r1]
   17fc0:	ldr	r1, [pc, #2012]	; 187a4 <__flatcc_fb_codegen_c@@Base+0x31e0>
   17fc4:	add	r4, pc, r4
   17fc8:	mov	r2, r4
   17fcc:	mov	r3, #1568	; 0x620
   17fd0:	add	r1, pc, r1
   17fd4:	bl	13f7c <fprintf@plt>
   17fd8:	ldr	r3, [pc, #1992]	; 187a8 <__flatcc_fb_codegen_c@@Base+0x31e4>
   17fdc:	ldr	r0, [pc, #1992]	; 187ac <__flatcc_fb_codegen_c@@Base+0x31e8>
   17fe0:	add	r3, pc, r3
   17fe4:	mov	r1, r4
   17fe8:	add	r3, r3, #112	; 0x70
   17fec:	mov	r2, #1568	; 0x620
   17ff0:	add	r0, pc, r0
   17ff4:	bl	14030 <__assert_fail@plt>
   17ff8:	ldr	r3, [pc, #1968]	; 187b0 <__flatcc_fb_codegen_c@@Base+0x31ec>
   17ffc:	str	r4, [sp, #76]	; 0x4c
   18000:	add	r3, pc, r3
   18004:	str	r3, [sp, #72]	; 0x48
   18008:	ldr	r3, [pc, #1956]	; 187b4 <__flatcc_fb_codegen_c@@Base+0x31f0>
   1800c:	add	r3, pc, r3
   18010:	str	r3, [sp, #80]	; 0x50
   18014:	ldrh	r3, [r5, #56]	; 0x38
   18018:	sub	r3, r3, #3
   1801c:	cmp	r3, #3
   18020:	addls	pc, pc, r3, lsl #2
   18024:	b	18300 <__flatcc_fb_codegen_c@@Base+0x2d3c>
   18028:	b	18090 <__flatcc_fb_codegen_c@@Base+0x2acc>
   1802c:	b	182a8 <__flatcc_fb_codegen_c@@Base+0x2ce4>
   18030:	b	18274 <__flatcc_fb_codegen_c@@Base+0x2cb0>
   18034:	b	18038 <__flatcc_fb_codegen_c@@Base+0x2a74>
   18038:	sub	r3, r2, #1
   1803c:	cmp	r3, #8
   18040:	addls	pc, pc, r3, lsl #2
   18044:	b	190f4 <__flatcc_fb_codegen_c@@Base+0x3b30>
   18048:	b	18e48 <__flatcc_fb_codegen_c@@Base+0x3884>
   1804c:	b	18e3c <__flatcc_fb_codegen_c@@Base+0x3878>
   18050:	b	18e30 <__flatcc_fb_codegen_c@@Base+0x386c>
   18054:	b	18e24 <__flatcc_fb_codegen_c@@Base+0x3860>
   18058:	b	18e18 <__flatcc_fb_codegen_c@@Base+0x3854>
   1805c:	b	18df0 <__flatcc_fb_codegen_c@@Base+0x382c>
   18060:	b	1900c <__flatcc_fb_codegen_c@@Base+0x3a48>
   18064:	b	1903c <__flatcc_fb_codegen_c@@Base+0x3a78>
   18068:	b	18e98 <__flatcc_fb_codegen_c@@Base+0x38d4>
   1806c:	ldr	r3, [pc, #1860]	; 187b8 <__flatcc_fb_codegen_c@@Base+0x31f4>
   18070:	add	r3, pc, r3
   18074:	str	r3, [sp, #72]	; 0x48
   18078:	ldr	r3, [pc, #1852]	; 187bc <__flatcc_fb_codegen_c@@Base+0x31f8>
   1807c:	add	r3, pc, r3
   18080:	str	r3, [sp, #80]	; 0x50
   18084:	ldr	r3, [pc, #1844]	; 187c0 <__flatcc_fb_codegen_c@@Base+0x31fc>
   18088:	add	r3, pc, r3
   1808c:	str	r3, [sp, #76]	; 0x4c
   18090:	ldr	r1, [pc, #1836]	; 187c4 <__flatcc_fb_codegen_c@@Base+0x3200>
   18094:	add	r3, sp, #92	; 0x5c
   18098:	str	r3, [sp, #84]	; 0x54
   1809c:	mov	r0, r3
   180a0:	add	r1, pc, r1
   180a4:	ldrd	r2, [r5, #48]	; 0x30
   180a8:	bl	13fe8 <sprintf@plt>
   180ac:	ldr	r3, [sp, #84]	; 0x54
   180b0:	str	r4, [sp, #20]
   180b4:	str	r3, [sp, #36]	; 0x24
   180b8:	ldr	r3, [sp, #72]	; 0x48
   180bc:	str	r7, [sp, #16]
   180c0:	str	r3, [sp, #32]
   180c4:	ldr	r3, [sp, #76]	; 0x4c
   180c8:	str	r6, [sp, #12]
   180cc:	str	r3, [sp, #28]
   180d0:	ldr	r3, [sp, #80]	; 0x50
   180d4:	mov	r2, r4
   180d8:	str	r3, [sp, #24]
   180dc:	ldr	r3, [sp, #48]	; 0x30
   180e0:	str	r3, [sp, #8]
   180e4:	ldrd	r0, [r5, #96]	; 0x60
   180e8:	ldr	r3, [r4, #204]	; 0xcc
   180ec:	strd	r0, [sp]
   180f0:	ldr	r1, [pc, #1744]	; 187c8 <__flatcc_fb_codegen_c@@Base+0x3204>
   180f4:	mov	r0, r3
   180f8:	add	r1, pc, r1
   180fc:	bl	13f7c <fprintf@plt>
   18100:	ldr	r3, [r4, #212]	; 0xd4
   18104:	ldr	r3, [r3, #32]
   18108:	cmp	r3, #0
   1810c:	bne	18148 <__flatcc_fb_codegen_c@@Base+0x2b84>
   18110:	ldrh	r3, [r5, #72]	; 0x48
   18114:	tst	r3, #128	; 0x80
   18118:	beq	17ae4 <__flatcc_fb_codegen_c@@Base+0x2520>
   1811c:	ldr	r3, [sp, #72]	; 0x48
   18120:	ldr	r0, [r4, #204]	; 0xcc
   18124:	ldr	r1, [pc, #1696]	; 187cc <__flatcc_fb_codegen_c@@Base+0x3208>
   18128:	str	r3, [sp, #12]
   1812c:	ldr	r3, [sp, #76]	; 0x4c
   18130:	stm	sp, {r6, r7}
   18134:	str	r3, [sp, #8]
   18138:	mov	r2, r4
   1813c:	ldr	r3, [sp, #48]	; 0x30
   18140:	add	r1, pc, r1
   18144:	bl	13f7c <fprintf@plt>
   18148:	ldrh	r3, [r5, #72]	; 0x48
   1814c:	tst	r3, #128	; 0x80
   18150:	beq	17ae4 <__flatcc_fb_codegen_c@@Base+0x2520>
   18154:	ldr	r3, [sp, #64]	; 0x40
   18158:	cmp	r3, #0
   1815c:	ldr	r3, [r4, #204]	; 0xcc
   18160:	bne	19258 <__flatcc_fb_codegen_c@@Base+0x3c94>
   18164:	ldr	r0, [pc, #1636]	; 187d0 <__flatcc_fb_codegen_c@@Base+0x320c>
   18168:	mov	r2, #61	; 0x3d
   1816c:	mov	r1, #1
   18170:	add	r0, pc, r0
   18174:	bl	13f10 <fwrite@plt>
   18178:	ldr	r3, [sp, #72]	; 0x48
   1817c:	ldr	r0, [r4, #204]	; 0xcc
   18180:	ldr	r1, [pc, #1612]	; 187d4 <__flatcc_fb_codegen_c@@Base+0x3210>
   18184:	str	r3, [sp, #12]
   18188:	ldr	r3, [sp, #76]	; 0x4c
   1818c:	stm	sp, {r6, r7}
   18190:	str	r3, [sp, #8]
   18194:	mov	r2, r4
   18198:	ldr	r3, [sp, #48]	; 0x30
   1819c:	add	r1, pc, r1
   181a0:	bl	13f7c <fprintf@plt>
   181a4:	ldr	r3, [r4, #212]	; 0xd4
   181a8:	ldr	r3, [r3, #136]	; 0x88
   181ac:	cmp	r3, #0
   181b0:	beq	181e4 <__flatcc_fb_codegen_c@@Base+0x2c20>
   181b4:	ldr	r3, [sp, #72]	; 0x48
   181b8:	ldr	r0, [r4, #204]	; 0xcc
   181bc:	ldr	r1, [pc, #1556]	; 187d8 <__flatcc_fb_codegen_c@@Base+0x3214>
   181c0:	str	r3, [sp, #12]
   181c4:	ldr	r3, [sp, #76]	; 0x4c
   181c8:	str	r4, [sp, #16]
   181cc:	str	r3, [sp, #8]
   181d0:	stm	sp, {r6, r7}
   181d4:	ldr	r3, [sp, #48]	; 0x30
   181d8:	mov	r2, r4
   181dc:	add	r1, pc, r1
   181e0:	bl	13f7c <fprintf@plt>
   181e4:	ldr	r3, [sp, #72]	; 0x48
   181e8:	ldr	r2, [sp, #76]	; 0x4c
   181ec:	ldr	r1, [pc, #1512]	; 187dc <__flatcc_fb_codegen_c@@Base+0x3218>
   181f0:	ldr	r0, [r4, #204]	; 0xcc
   181f4:	add	r1, pc, r1
   181f8:	str	r3, [sp, #12]
   181fc:	str	r2, [sp, #8]
   18200:	ldr	r3, [sp, #48]	; 0x30
   18204:	mov	r2, r4
   18208:	stm	sp, {r6, r7}
   1820c:	bl	13f7c <fprintf@plt>
   18210:	ldr	r3, [sp, #72]	; 0x48
   18214:	ldr	r2, [sp, #76]	; 0x4c
   18218:	ldr	r1, [pc, #1472]	; 187e0 <__flatcc_fb_codegen_c@@Base+0x321c>
   1821c:	ldr	r0, [r4, #204]	; 0xcc
   18220:	add	r1, pc, r1
   18224:	str	r3, [sp, #12]
   18228:	str	r2, [sp, #8]
   1822c:	ldr	r3, [sp, #48]	; 0x30
   18230:	stm	sp, {r6, r7}
   18234:	mov	r2, r4
   18238:	bl	13f7c <fprintf@plt>
   1823c:	ldr	r3, [r4, #212]	; 0xd4
   18240:	ldr	r3, [r3, #136]	; 0x88
   18244:	cmp	r3, #0
   18248:	beq	17b9c <__flatcc_fb_codegen_c@@Base+0x25d8>
   1824c:	ldr	r2, [sp, #48]	; 0x30
   18250:	ldr	r1, [pc, #1420]	; 187e4 <__flatcc_fb_codegen_c@@Base+0x3220>
   18254:	ldr	r0, [r4, #204]	; 0xcc
   18258:	mov	r3, r2
   1825c:	stm	sp, {r6, r7}
   18260:	add	r1, pc, r1
   18264:	bl	13f7c <fprintf@plt>
   18268:	mov	r3, #1
   1826c:	str	r3, [sp, #64]	; 0x40
   18270:	b	17ae4 <__flatcc_fb_codegen_c@@Base+0x2520>
   18274:	sub	r3, r2, #1
   18278:	cmp	r3, #8
   1827c:	addls	pc, pc, r3, lsl #2
   18280:	b	193a4 <__flatcc_fb_codegen_c@@Base+0x3de0>
   18284:	b	18f5c <__flatcc_fb_codegen_c@@Base+0x3998>
   18288:	b	18f50 <__flatcc_fb_codegen_c@@Base+0x398c>
   1828c:	b	18f44 <__flatcc_fb_codegen_c@@Base+0x3980>
   18290:	b	18f38 <__flatcc_fb_codegen_c@@Base+0x3974>
   18294:	b	18f2c <__flatcc_fb_codegen_c@@Base+0x3968>
   18298:	b	18f20 <__flatcc_fb_codegen_c@@Base+0x395c>
   1829c:	b	18ef4 <__flatcc_fb_codegen_c@@Base+0x3930>
   182a0:	b	18fd0 <__flatcc_fb_codegen_c@@Base+0x3a0c>
   182a4:	b	18fc4 <__flatcc_fb_codegen_c@@Base+0x3a00>
   182a8:	sub	r3, r2, #1
   182ac:	cmp	r3, #8
   182b0:	addls	pc, pc, r3, lsl #2
   182b4:	b	193fc <__flatcc_fb_codegen_c@@Base+0x3e38>
   182b8:	b	18fb8 <__flatcc_fb_codegen_c@@Base+0x39f4>
   182bc:	b	18fac <__flatcc_fb_codegen_c@@Base+0x39e8>
   182c0:	b	18fa0 <__flatcc_fb_codegen_c@@Base+0x39dc>
   182c4:	b	18f94 <__flatcc_fb_codegen_c@@Base+0x39d0>
   182c8:	b	18f68 <__flatcc_fb_codegen_c@@Base+0x39a4>
   182cc:	b	19000 <__flatcc_fb_codegen_c@@Base+0x3a3c>
   182d0:	b	18ff4 <__flatcc_fb_codegen_c@@Base+0x3a30>
   182d4:	b	18fe8 <__flatcc_fb_codegen_c@@Base+0x3a24>
   182d8:	b	18fdc <__flatcc_fb_codegen_c@@Base+0x3a18>
   182dc:	ldr	r1, [pc, #1284]	; 187e8 <__flatcc_fb_codegen_c@@Base+0x3224>
   182e0:	mov	r3, r4
   182e4:	strd	r6, [sp]
   182e8:	mov	r2, r4
   182ec:	add	r1, pc, r1
   182f0:	bl	13f7c <fprintf@plt>
   182f4:	ldrh	r3, [r5, #72]	; 0x48
   182f8:	and	r3, r3, #128	; 0x80
   182fc:	b	17b7c <__flatcc_fb_codegen_c@@Base+0x25b8>
   18300:	ldr	r2, [pc, #2116]	; 18b4c <__flatcc_fb_codegen_c@@Base+0x3588>
   18304:	ldr	r1, [sp, #68]	; 0x44
   18308:	ldr	r3, [pc, #1244]	; 187ec <__flatcc_fb_codegen_c@@Base+0x3228>
   1830c:	ldr	r4, [pc, #1244]	; 187f0 <__flatcc_fb_codegen_c@@Base+0x322c>
   18310:	ldr	r1, [r1, r2]
   18314:	add	r3, pc, r3
   18318:	str	r3, [sp]
   1831c:	ldr	r0, [r1]
   18320:	ldr	r1, [pc, #1228]	; 187f4 <__flatcc_fb_codegen_c@@Base+0x3230>
   18324:	add	r4, pc, r4
   18328:	mov	r2, r4
   1832c:	mov	r3, #260	; 0x104
   18330:	add	r1, pc, r1
   18334:	bl	13f7c <fprintf@plt>
   18338:	ldr	r3, [pc, #1208]	; 187f8 <__flatcc_fb_codegen_c@@Base+0x3234>
   1833c:	ldr	r0, [pc, #1208]	; 187fc <__flatcc_fb_codegen_c@@Base+0x3238>
   18340:	add	r3, pc, r3
   18344:	mov	r1, r4
   18348:	add	r3, r3, #64	; 0x40
   1834c:	mov	r2, #260	; 0x104
   18350:	add	r0, pc, r0
   18354:	bl	14030 <__assert_fail@plt>
   18358:	ldr	r2, [pc, #1184]	; 18800 <__flatcc_fb_codegen_c@@Base+0x323c>
   1835c:	add	r2, pc, r2
   18360:	str	r3, [sp, #28]
   18364:	ldr	r3, [sp, #48]	; 0x30
   18368:	str	r2, [sp, #24]
   1836c:	str	r3, [sp, #8]
   18370:	str	r4, [sp, #20]
   18374:	str	r7, [sp, #16]
   18378:	str	r6, [sp, #12]
   1837c:	ldrd	r6, [r5, #96]	; 0x60
   18380:	ldr	r1, [pc, #1148]	; 18804 <__flatcc_fb_codegen_c@@Base+0x3240>
   18384:	ldr	r0, [r4, #204]	; 0xcc
   18388:	mov	r2, r4
   1838c:	strd	r6, [sp]
   18390:	add	r1, pc, r1
   18394:	bl	13f7c <fprintf@plt>
   18398:	ldr	r3, [r5, #104]	; 0x68
   1839c:	cmp	r3, #0
   183a0:	beq	191e0 <__flatcc_fb_codegen_c@@Base+0x3c1c>
   183a4:	add	r6, sp, #632	; 0x278
   183a8:	mov	r2, #220	; 0xdc
   183ac:	mov	r1, #0
   183b0:	mov	r0, r6
   183b4:	add	r7, sp, #852	; 0x354
   183b8:	str	r3, [sp, #72]	; 0x48
   183bc:	bl	13f94 <memset@plt>
   183c0:	mov	r2, #220	; 0xdc
   183c4:	mov	r0, r7
   183c8:	mov	r1, #0
   183cc:	bl	13f94 <memset@plt>
   183d0:	ldr	r3, [sp, #72]	; 0x48
   183d4:	ldrh	r2, [r3, #8]
   183d8:	cmp	r2, #0
   183dc:	beq	191f0 <__flatcc_fb_codegen_c@@Base+0x3c2c>
   183e0:	cmp	r2, #1
   183e4:	bne	19200 <__flatcc_fb_codegen_c@@Base+0x3c3c>
   183e8:	ldr	r2, [pc, #1048]	; 18808 <__flatcc_fb_codegen_c@@Base+0x3244>
   183ec:	add	r2, pc, r2
   183f0:	str	r2, [sp, #72]	; 0x48
   183f4:	mov	r1, r3
   183f8:	ldr	r0, [r3, #12]
   183fc:	mov	r2, r6
   18400:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   18404:	ldr	r3, [sp, #56]	; 0x38
   18408:	ldrh	r3, [r3, #8]
   1840c:	cmp	r3, #0
   18410:	bne	1957c <__flatcc_fb_codegen_c@@Base+0x3fb8>
   18414:	ldr	r3, [sp, #56]	; 0x38
   18418:	mov	r2, r7
   1841c:	mov	r1, r3
   18420:	ldr	r0, [r3, #12]
   18424:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   18428:	ldr	r3, [r5, #4]
   1842c:	ldr	r2, [sp, #72]	; 0x48
   18430:	str	r6, [sp, #8]
   18434:	str	r2, [sp, #12]
   18438:	ldr	r2, [r3]
   1843c:	ldr	r0, [r4, #204]	; 0xcc
   18440:	ldr	r1, [pc, #964]	; 1880c <__flatcc_fb_codegen_c@@Base+0x3248>
   18444:	str	r2, [sp, #4]
   18448:	ldr	r2, [r3, #4]
   1844c:	add	r1, pc, r1
   18450:	mov	r3, r7
   18454:	str	r2, [sp]
   18458:	mov	r2, r4
   1845c:	bl	13f7c <fprintf@plt>
   18460:	ldrh	r3, [r5, #72]	; 0x48
   18464:	and	r3, r3, #128	; 0x80
   18468:	b	17b7c <__flatcc_fb_codegen_c@@Base+0x25b8>
   1846c:	ldr	r2, [pc, #924]	; 18810 <__flatcc_fb_codegen_c@@Base+0x324c>
   18470:	add	r2, pc, r2
   18474:	b	18360 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   18478:	ldr	r2, [pc, #916]	; 18814 <__flatcc_fb_codegen_c@@Base+0x3250>
   1847c:	add	r2, pc, r2
   18480:	b	18360 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   18484:	ldr	r2, [pc, #908]	; 18818 <__flatcc_fb_codegen_c@@Base+0x3254>
   18488:	add	r2, pc, r2
   1848c:	b	18360 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   18490:	ldr	r2, [pc, #900]	; 1881c <__flatcc_fb_codegen_c@@Base+0x3258>
   18494:	add	r2, pc, r2
   18498:	b	18360 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   1849c:	ldr	r2, [pc, #892]	; 18820 <__flatcc_fb_codegen_c@@Base+0x325c>
   184a0:	add	r2, pc, r2
   184a4:	b	18360 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   184a8:	ldr	r2, [pc, #884]	; 18824 <__flatcc_fb_codegen_c@@Base+0x3260>
   184ac:	add	r2, pc, r2
   184b0:	b	18360 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   184b4:	ldr	r2, [pc, #876]	; 18828 <__flatcc_fb_codegen_c@@Base+0x3264>
   184b8:	add	r2, pc, r2
   184bc:	b	18360 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   184c0:	ldr	r2, [pc, #868]	; 1882c <__flatcc_fb_codegen_c@@Base+0x3268>
   184c4:	add	r2, pc, r2
   184c8:	b	18360 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   184cc:	ldr	r2, [pc, #860]	; 18830 <__flatcc_fb_codegen_c@@Base+0x326c>
   184d0:	add	r2, pc, r2
   184d4:	b	18360 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   184d8:	ldr	r2, [pc, #852]	; 18834 <__flatcc_fb_codegen_c@@Base+0x3270>
   184dc:	add	r2, pc, r2
   184e0:	b	18360 <__flatcc_fb_codegen_c@@Base+0x2d9c>
   184e4:	ldrh	r2, [r5, #56]	; 0x38
   184e8:	sub	r2, r2, #3
   184ec:	cmp	r2, #3
   184f0:	addls	pc, pc, r2, lsl #2
   184f4:	b	18300 <__flatcc_fb_codegen_c@@Base+0x2d3c>
   184f8:	b	18d6c <__flatcc_fb_codegen_c@@Base+0x37a8>
   184fc:	b	18db0 <__flatcc_fb_codegen_c@@Base+0x37ec>
   18500:	b	18dd0 <__flatcc_fb_codegen_c@@Base+0x380c>
   18504:	b	190f4 <__flatcc_fb_codegen_c@@Base+0x3b30>
   18508:	ldr	r3, [pc, #808]	; 18838 <__flatcc_fb_codegen_c@@Base+0x3274>
   1850c:	add	r3, pc, r3
   18510:	str	r3, [sp, #72]	; 0x48
   18514:	ldr	r3, [pc, #800]	; 1883c <__flatcc_fb_codegen_c@@Base+0x3278>
   18518:	add	r3, pc, r3
   1851c:	str	r3, [sp, #76]	; 0x4c
   18520:	ldr	r3, [pc, #792]	; 18840 <__flatcc_fb_codegen_c@@Base+0x327c>
   18524:	add	r3, pc, r3
   18528:	str	r3, [sp, #80]	; 0x50
   1852c:	b	18014 <__flatcc_fb_codegen_c@@Base+0x2a50>
   18530:	ldr	r3, [pc, #780]	; 18844 <__flatcc_fb_codegen_c@@Base+0x3280>
   18534:	add	r3, pc, r3
   18538:	str	r3, [sp, #72]	; 0x48
   1853c:	ldr	r3, [pc, #772]	; 18848 <__flatcc_fb_codegen_c@@Base+0x3284>
   18540:	add	r3, pc, r3
   18544:	str	r3, [sp, #76]	; 0x4c
   18548:	ldr	r3, [pc, #764]	; 1884c <__flatcc_fb_codegen_c@@Base+0x3288>
   1854c:	add	r3, pc, r3
   18550:	str	r3, [sp, #80]	; 0x50
   18554:	b	18014 <__flatcc_fb_codegen_c@@Base+0x2a50>
   18558:	ldr	r3, [pc, #752]	; 18850 <__flatcc_fb_codegen_c@@Base+0x328c>
   1855c:	add	r3, pc, r3
   18560:	str	r3, [sp, #72]	; 0x48
   18564:	ldr	r3, [pc, #744]	; 18854 <__flatcc_fb_codegen_c@@Base+0x3290>
   18568:	add	r3, pc, r3
   1856c:	str	r3, [sp, #76]	; 0x4c
   18570:	ldr	r3, [pc, #736]	; 18858 <__flatcc_fb_codegen_c@@Base+0x3294>
   18574:	add	r3, pc, r3
   18578:	str	r3, [sp, #80]	; 0x50
   1857c:	b	18014 <__flatcc_fb_codegen_c@@Base+0x2a50>
   18580:	ldrh	r2, [r5, #56]	; 0x38
   18584:	sub	r2, r2, #3
   18588:	cmp	r2, #3
   1858c:	addls	pc, pc, r2, lsl #2
   18590:	b	18300 <__flatcc_fb_codegen_c@@Base+0x2d3c>
   18594:	b	190d8 <__flatcc_fb_codegen_c@@Base+0x3b14>
   18598:	b	190b0 <__flatcc_fb_codegen_c@@Base+0x3aec>
   1859c:	b	19048 <__flatcc_fb_codegen_c@@Base+0x3a84>
   185a0:	b	19018 <__flatcc_fb_codegen_c@@Base+0x3a54>
   185a4:	ldrh	r2, [r5, #56]	; 0x38
   185a8:	sub	r2, r2, #3
   185ac:	cmp	r2, #3
   185b0:	addls	pc, pc, r2, lsl #2
   185b4:	b	18300 <__flatcc_fb_codegen_c@@Base+0x2d3c>
   185b8:	b	1806c <__flatcc_fb_codegen_c@@Base+0x2aa8>
   185bc:	b	18ecc <__flatcc_fb_codegen_c@@Base+0x3908>
   185c0:	b	18ea4 <__flatcc_fb_codegen_c@@Base+0x38e0>
   185c4:	b	18e74 <__flatcc_fb_codegen_c@@Base+0x38b0>
   185c8:	ldrh	r2, [r5, #56]	; 0x38
   185cc:	sub	r2, r2, #3
   185d0:	cmp	r2, #3
   185d4:	addls	pc, pc, r2, lsl #2
   185d8:	b	18300 <__flatcc_fb_codegen_c@@Base+0x2d3c>
   185dc:	b	19090 <__flatcc_fb_codegen_c@@Base+0x3acc>
   185e0:	b	19070 <__flatcc_fb_codegen_c@@Base+0x3aac>
   185e4:	b	18e54 <__flatcc_fb_codegen_c@@Base+0x3890>
   185e8:	b	190f4 <__flatcc_fb_codegen_c@@Base+0x3b30>
   185ec:	ldr	r3, [pc, #616]	; 1885c <__flatcc_fb_codegen_c@@Base+0x3298>
   185f0:	add	r3, pc, r3
   185f4:	str	r3, [sp, #72]	; 0x48
   185f8:	ldr	r3, [pc, #608]	; 18860 <__flatcc_fb_codegen_c@@Base+0x329c>
   185fc:	add	r3, pc, r3
   18600:	str	r3, [sp, #76]	; 0x4c
   18604:	ldr	r3, [pc, #600]	; 18864 <__flatcc_fb_codegen_c@@Base+0x32a0>
   18608:	add	r3, pc, r3
   1860c:	str	r3, [sp, #80]	; 0x50
   18610:	b	18014 <__flatcc_fb_codegen_c@@Base+0x2a50>
   18614:	ldr	r3, [pc, #588]	; 18868 <__flatcc_fb_codegen_c@@Base+0x32a4>
   18618:	add	r3, pc, r3
   1861c:	str	r3, [sp, #72]	; 0x48
   18620:	ldr	r3, [pc, #580]	; 1886c <__flatcc_fb_codegen_c@@Base+0x32a8>
   18624:	add	r3, pc, r3
   18628:	str	r3, [sp, #76]	; 0x4c
   1862c:	ldr	r3, [pc, #572]	; 18870 <__flatcc_fb_codegen_c@@Base+0x32ac>
   18630:	add	r3, pc, r3
   18634:	str	r3, [sp, #80]	; 0x50
   18638:	b	18014 <__flatcc_fb_codegen_c@@Base+0x2a50>
   1863c:	ldrh	r2, [r5, #56]	; 0x38
   18640:	sub	r2, r2, #3
   18644:	cmp	r2, #3
   18648:	addls	pc, pc, r2, lsl #2
   1864c:	b	18300 <__flatcc_fb_codegen_c@@Base+0x2d3c>
   18650:	b	191c4 <__flatcc_fb_codegen_c@@Base+0x3c00>
   18654:	b	1919c <__flatcc_fb_codegen_c@@Base+0x3bd8>
   18658:	b	19174 <__flatcc_fb_codegen_c@@Base+0x3bb0>
   1865c:	b	1914c <__flatcc_fb_codegen_c@@Base+0x3b88>
   18660:	sub	r3, r3, #1
   18664:	cmp	r3, #8
   18668:	addls	pc, pc, r3, lsl #2
   1866c:	b	197fc <__flatcc_fb_codegen_c@@Base+0x4238>
   18670:	b	197f0 <__flatcc_fb_codegen_c@@Base+0x422c>
   18674:	b	197e4 <__flatcc_fb_codegen_c@@Base+0x4220>
   18678:	b	197d8 <__flatcc_fb_codegen_c@@Base+0x4214>
   1867c:	b	197cc <__flatcc_fb_codegen_c@@Base+0x4208>
   18680:	b	197c0 <__flatcc_fb_codegen_c@@Base+0x41fc>
   18684:	b	197b4 <__flatcc_fb_codegen_c@@Base+0x41f0>
   18688:	b	197a8 <__flatcc_fb_codegen_c@@Base+0x41e4>
   1868c:	b	195c8 <__flatcc_fb_codegen_c@@Base+0x4004>
   18690:	b	195a0 <__flatcc_fb_codegen_c@@Base+0x3fdc>
   18694:	sub	r3, r3, #1
   18698:	cmp	r3, #8
   1869c:	addls	pc, pc, r3, lsl #2
   186a0:	b	19750 <__flatcc_fb_codegen_c@@Base+0x418c>
   186a4:	b	19744 <__flatcc_fb_codegen_c@@Base+0x4180>
   186a8:	b	19738 <__flatcc_fb_codegen_c@@Base+0x4174>
   186ac:	b	1972c <__flatcc_fb_codegen_c@@Base+0x4168>
   186b0:	b	19720 <__flatcc_fb_codegen_c@@Base+0x415c>
   186b4:	b	19714 <__flatcc_fb_codegen_c@@Base+0x4150>
   186b8:	b	19708 <__flatcc_fb_codegen_c@@Base+0x4144>
   186bc:	b	196fc <__flatcc_fb_codegen_c@@Base+0x4138>
   186c0:	b	19538 <__flatcc_fb_codegen_c@@Base+0x3f74>
   186c4:	b	1950c <__flatcc_fb_codegen_c@@Base+0x3f48>
   186c8:	sub	r3, r3, #1
   186cc:	cmp	r3, #8
   186d0:	addls	pc, pc, r3, lsl #2
   186d4:	b	196a4 <__flatcc_fb_codegen_c@@Base+0x40e0>
   186d8:	b	19698 <__flatcc_fb_codegen_c@@Base+0x40d4>
   186dc:	b	1968c <__flatcc_fb_codegen_c@@Base+0x40c8>
   186e0:	b	19680 <__flatcc_fb_codegen_c@@Base+0x40bc>
   186e4:	b	19674 <__flatcc_fb_codegen_c@@Base+0x40b0>
   186e8:	b	19668 <__flatcc_fb_codegen_c@@Base+0x40a4>
   186ec:	b	1965c <__flatcc_fb_codegen_c@@Base+0x4098>
   186f0:	b	19650 <__flatcc_fb_codegen_c@@Base+0x408c>
   186f4:	b	19570 <__flatcc_fb_codegen_c@@Base+0x3fac>
   186f8:	b	19544 <__flatcc_fb_codegen_c@@Base+0x3f80>
   186fc:	strdeq	r2, [r5], -r0
   18700:	andeq	r1, r3, r4, asr lr
   18704:	andeq	r8, r2, r8, lsl r2
   18708:	andeq	r1, r3, ip, asr #28
   1870c:	andeq	r8, r2, r8, lsl #4
   18710:	muleq	r3, r4, r5
   18714:	andeq	r8, r2, r4, asr #23
   18718:	andeq	r8, r2, r0, lsr sp
   1871c:	andeq	r8, r2, r0, lsr #17
   18720:	andeq	r8, r2, ip, lsl sp
   18724:	andeq	r8, r2, r0, ror sp
   18728:	andeq	r1, r3, r8, lsr sp
   1872c:	andeq	r8, r2, r8, ror #1
   18730:	andeq	r1, r3, r8, lsl sp
   18734:	ldrdeq	r8, [r2], -r4
   18738:	andeq	r0, r3, r0, ror #8
   1873c:	andeq	r8, r2, r0, lsl fp
   18740:	andeq	r8, r2, ip, lsr #24
   18744:	andeq	r9, r2, r8, asr r0
   18748:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1874c:	andeq	r8, r2, r4, asr #25
   18750:			; <UNDEFINED> instruction: 0x00028cbc
   18754:			; <UNDEFINED> instruction: 0x00028cb4
   18758:	andeq	r9, r2, r8
   1875c:	muleq	r2, ip, ip
   18760:			; <UNDEFINED> instruction: 0x00028cb0
   18764:	andeq	r8, r2, r8, lsl r7
   18768:	andeq	r8, r2, r8, ror ip
   1876c:	strdeq	r8, [r2], -ip
   18770:	ldrdeq	r7, [r2], -r8
   18774:	andeq	r7, r2, r8, asr #24
   18778:	andeq	r0, r0, pc, lsr r6
   1877c:	strdeq	r7, [r2], -ip
   18780:	andeq	r0, r3, r8, lsr #32
   18784:	andeq	r8, r2, r0, asr #24
   18788:	andeq	r8, r2, r4, lsr #22
   1878c:	andeq	r8, r2, ip, lsl fp
   18790:	andeq	r8, r2, r0, lsr #7
   18794:	andeq	r8, r2, ip, asr #19
   18798:	andeq	r8, r2, r0, lsr #26
   1879c:	andeq	r8, r2, r8, lsr fp
   187a0:	andeq	r7, r2, r4, lsr #14
   187a4:	muleq	r2, r4, sl
   187a8:	andeq	r7, r2, r8, asr #12
   187ac:	andeq	pc, r2, r4, ror lr	; <UNPREDICTABLE>
   187b0:	andeq	r7, r2, ip, lsl #18
   187b4:	strheq	r0, [r4], -r0	; <UNPREDICTABLE>
   187b8:			; <UNDEFINED> instruction: 0x000278bc
   187bc:	andeq	r7, r2, ip, lsr #26
   187c0:	andeq	r1, r3, r0, ror #12
   187c4:	muleq	r2, ip, sl
   187c8:	andeq	r8, r2, r0, asr #12
   187cc:	andeq	r8, r2, r4, lsr r6
   187d0:	andeq	r8, r2, r0, asr #3
   187d4:	andeq	r8, r2, ip, lsl #12
   187d8:	muleq	r2, r8, sl
   187dc:	andeq	r8, r2, r8, ror #11
   187e0:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   187e4:	andeq	r8, r2, r8, asr #3
   187e8:	muleq	r2, ip, r8
   187ec:	andeq	r7, r2, ip, asr r7
   187f0:	andeq	r7, r2, r0, ror #13
   187f4:	andeq	r7, r2, r4, lsr r7
   187f8:	andeq	r7, r2, r8, ror #5
   187fc:	andeq	pc, r2, r4, lsl fp	; <UNPREDICTABLE>
   18800:	andeq	r8, r2, r0, asr #5
   18804:			; <UNDEFINED> instruction: 0x000288b0
   18808:	andeq	r8, r2, r0, asr #3
   1880c:	andeq	r8, r2, ip, asr r4
   18810:	muleq	r2, r0, r1
   18814:	andeq	r8, r2, r8, ror r1
   18818:	andeq	r8, r2, r0, ror #2
   1881c:	andeq	r8, r2, r8, asr #2
   18820:	andeq	r8, r2, r0, lsr r1
   18824:	andeq	r8, r2, r8, lsl #2
   18828:	andeq	r8, r2, r4, ror r1
   1882c:	andeq	r8, r2, r0, lsl #2
   18830:	andeq	r8, r2, ip, lsr r1
   18834:	andeq	r8, r2, r4, lsr #2
   18838:	ldrdeq	r7, [r2], -r4
   1883c:	ldrdeq	r1, [r3], -r0
   18840:	andeq	r7, r2, ip, asr #16
   18844:	andeq	r7, r2, r0, ror #7
   18848:	andeq	r1, r3, r8, lsr #3
   1884c:	andeq	r7, r2, r4, asr #16
   18850:	andeq	r7, r2, r0, asr #7
   18854:	andeq	r1, r3, r0, lsl #3
   18858:	andeq	r7, r2, r4, lsr #16
   1885c:	andeq	r7, r2, r4, lsl r3
   18860:	andeq	r1, r3, ip, ror #1
   18864:	andeq	r7, r2, r0, lsl #15
   18868:	andeq	r7, r2, r0, ror #5
   1886c:	andeq	r1, r3, r4, asr #1
   18870:	andeq	r7, r2, r0, asr r7
   18874:	andeq	r6, r2, r4, asr #31
   18878:			; <UNDEFINED> instruction: 0x00027ebc
   1887c:			; <UNDEFINED> instruction: 0x000276b4
   18880:	andeq	r7, r2, r0, lsl #14
   18884:	andeq	r7, r2, ip, lsl r7
   18888:	andeq	r8, r2, r4, asr r0
   1888c:	andeq	r7, r2, r0, lsl #14
   18890:	andeq	r7, r2, r4, lsl r7
   18894:	andeq	r7, r2, r8, lsr #14
   18898:	andeq	r6, r2, r8, asr #26
   1889c:	andeq	r6, r2, ip, asr #25
   188a0:	andeq	r6, r2, r0, lsr #26
   188a4:	ldrdeq	r6, [r2], -r4
   188a8:	andeq	pc, r2, r0, lsl #2
   188ac:			; <UNDEFINED> instruction: 0x00026bb4
   188b0:	andeq	r0, r3, r4, ror #18
   188b4:	andeq	r6, r2, r0, lsr #27
   188b8:	andeq	r6, r2, ip, ror fp
   188bc:	andeq	r0, r3, ip, lsr #18
   188c0:	andeq	r6, r2, ip, asr fp
   188c4:	andeq	r0, r3, ip, lsl #18
   188c8:	muleq	r2, r0, fp
   188cc:	andeq	r6, r2, r8, lsr #26
   188d0:	andeq	r6, r2, r0, ror #22
   188d4:	andeq	r6, r2, r4, asr fp
   188d8:	andeq	r6, r2, ip, lsr fp
   188dc:	andeq	r6, r2, r4, lsr #22
   188e0:	andeq	r6, r2, ip, lsl #22
   188e4:	andeq	r6, r2, r0, ror #21
   188e8:	andeq	r0, r3, r8, lsl #17
   188ec:			; <UNDEFINED> instruction: 0x00026ab4
   188f0:	andeq	r6, r2, r4, lsr #30
   188f4:	andeq	r0, r3, r8, asr r8
   188f8:	andeq	r6, r2, r0, lsl #22
   188fc:	andeq	r6, r2, r4, lsl #21
   18900:	strdeq	r6, [r2], -r4
   18904:	andeq	r0, r3, r8, lsr #16
   18908:	andeq	r6, r2, ip, asr sl
   1890c:	andeq	r6, r2, ip, asr #29
   18910:	andeq	r0, r3, r0, lsl #16
   18914:	muleq	r2, r4, sl
   18918:	andeq	r6, r2, r4, lsl #24
   1891c:	andeq	r6, r2, r0, ror #20
   18920:	andeq	r6, r2, ip, asr #20
   18924:	andeq	r6, r2, r0, asr #20
   18928:	andeq	r6, r2, r8, lsr #20
   1892c:	andeq	r6, r2, r0, lsl sl
   18930:	strdeq	r6, [r2], -r8
   18934:	andeq	r6, r2, r0, lsl sl
   18938:	muleq	r2, ip, fp
   1893c:	andeq	r6, r2, r4, ror #19
   18940:	andeq	r6, r2, ip, asr #19
   18944:			; <UNDEFINED> instruction: 0x000269b4
   18948:	muleq	r2, ip, r9
   1894c:	ldrdeq	r6, [r2], -r4
   18950:	andeq	r6, r2, r0, asr #19
   18954:			; <UNDEFINED> instruction: 0x000269bc
   18958:	andeq	r6, r2, r8, lsr #19
   1895c:	muleq	r2, r4, r9
   18960:	andeq	r6, r2, r0, lsl #19
   18964:	andeq	r6, r2, ip, ror r9
   18968:	andeq	r6, r2, r8, lsl #18
   1896c:	andeq	r6, r2, r8, ror sp
   18970:			; <UNDEFINED> instruction: 0x000306b4
   18974:	andeq	r6, r2, r4, asr r9
   18978:	ldrdeq	r6, [r2], -r8
   1897c:	andeq	r6, r2, r8, asr #26
   18980:	andeq	r0, r3, r4, lsl #13
   18984:	andeq	r6, r2, r4, asr #17
   18988:	andeq	r0, r3, ip, ror #12
   1898c:	andeq	r6, r2, r4, lsr #17
   18990:	andeq	r0, r3, ip, asr #12
   18994:	andeq	r6, r2, r0, ror r8
   18998:	andeq	r6, r2, r0, ror #25
   1899c:	andeq	r0, r3, ip, lsl r6
   189a0:	andeq	r6, r2, r8, asr #16
   189a4:			; <UNDEFINED> instruction: 0x00026cb8
   189a8:	andeq	r6, r2, r8, ror #18
   189ac:	andeq	r6, r2, ip, ror #17
   189b0:	andeq	r6, r2, r0, asr #18
   189b4:	strdeq	r6, [r2], -r4
   189b8:	andeq	lr, r2, r0, lsr #26
   189bc:	muleq	r2, ip, r7
   189c0:	andeq	r6, r2, ip, lsl ip
   189c4:	andeq	r0, r3, r0, lsl #11
   189c8:	andeq	r6, r2, r4, ror r7
   189cc:	strdeq	r6, [r2], -r4
   189d0:	andeq	r0, r3, r8, asr r5
   189d4:	andeq	r6, r2, ip, asr #14
   189d8:	andeq	r6, r2, ip, asr #23
   189dc:	andeq	r0, r3, r0, lsr r5
   189e0:	andeq	r6, r2, r4, lsr #14
   189e4:	andeq	r6, r2, r4, lsr #23
   189e8:			; <UNDEFINED> instruction: 0x000273b0
   189ec:	andeq	r7, r2, r0, asr #12
   189f0:	andeq	r6, r2, r4, asr #9
   189f4:	andeq	r6, r2, r4, lsr r8
   189f8:	andeq	r6, r2, r8, ror #7
   189fc:	andeq	lr, r2, r4, lsl ip
   18a00:	andeq	r0, r0, fp, lsr r5
   18a04:	andeq	r7, r2, r8, lsl #1
   18a08:	strheq	r7, [r2], -r4
   18a0c:	andeq	r7, r2, r0, lsl #10
   18a10:	andeq	r7, r2, ip, lsl #19
   18a14:	andeq	r6, r2, r8, ror #14
   18a18:	andeq	r6, r2, ip, ror #13
   18a1c:	andeq	r6, r2, r0, asr #14
   18a20:	strdeq	r6, [r2], -r4
   18a24:	andeq	lr, r2, r0, lsr #22
   18a28:	andeq	r6, r2, r0, lsl r7
   18a2c:	muleq	r2, r4, r6
   18a30:	andeq	r6, r2, r8, ror #13
   18a34:	muleq	r2, ip, r2
   18a38:	andeq	lr, r2, r8, asr #21
   18a3c:			; <UNDEFINED> instruction: 0x000266b8
   18a40:	andeq	r6, r2, ip, lsr r6
   18a44:	muleq	r2, r0, r6
   18a48:	andeq	r6, r2, r4, asr #4
   18a4c:	andeq	lr, r2, r0, ror sl
   18a50:	andeq	r6, r2, r0, ror #12
   18a54:	andeq	r6, r2, r4, ror #11
   18a58:	andeq	r6, r2, r8, lsr r6
   18a5c:	andeq	r6, r2, ip, ror #3
   18a60:	andeq	lr, r2, r8, lsl sl
   18a64:	andeq	r6, r2, ip, lsl #29
   18a68:			; <UNDEFINED> instruction: 0x00026eb8
   18a6c:	ldrdeq	r6, [r2], -r4
   18a70:	andeq	r7, r2, ip, lsl #16
   18a74:	andeq	r6, r2, r0, asr #12
   18a78:	andeq	r6, r2, ip, lsl #9
   18a7c:	andeq	r6, r2, ip, ror #11
   18a80:	andeq	r6, r2, r8, asr r4
   18a84:	andeq	r6, r2, r4, asr r4
   18a88:	andeq	r6, r2, r0, asr #11
   18a8c:	andeq	r6, r2, r0, lsr #8
   18a90:	andeq	r6, r2, r0, lsr #1
   18a94:	andeq	r6, r2, r4, asr r1
   18a98:	strdeq	r7, [r2], -r0
   18a9c:	andeq	r0, r0, pc, lsr r5
   18aa0:	strdeq	r6, [r2], -r8
   18aa4:	andeq	r6, r2, r8, ror r5
   18aa8:	andeq	r6, r2, r8, asr #7
   18aac:	andeq	r6, r2, r8, asr #32
   18ab0:	strdeq	r6, [r2], -ip
   18ab4:	andeq	r7, r2, ip, asr #32
   18ab8:	andeq	r0, r0, r2, asr r5
   18abc:	andeq	r7, r2, ip, lsr #10
   18ac0:	andeq	r6, r2, ip, asr #1
   18ac4:	andeq	r6, r2, ip, lsr r4
   18ac8:	strdeq	r5, [r2], -r0
   18acc:	andeq	lr, r2, ip, lsl r8
   18ad0:	andeq	r6, r2, r8, lsr r3
   18ad4:	andeq	r6, r2, r4, lsr #6
   18ad8:	andeq	r6, r2, r0, lsl r3
   18adc:	andeq	r6, r2, r4, lsl #6
   18ae0:	andeq	r6, r2, ip, ror #5
   18ae4:	ldrdeq	r6, [r2], -r4
   18ae8:			; <UNDEFINED> instruction: 0x000262bc
   18aec:			; <UNDEFINED> instruction: 0x000263b8
   18af0:	andeq	r6, r2, ip, lsr r3
   18af4:	muleq	r2, r0, r3
   18af8:	andeq	r5, r2, r4, asr #30
   18afc:	andeq	lr, r2, r0, ror r7
   18b00:	andeq	r6, r2, ip, lsl #5
   18b04:	andeq	r6, r2, r8, ror r2
   18b08:	andeq	r6, r2, r4, ror #4
   18b0c:	andeq	r6, r2, r8, asr r2
   18b10:	andeq	r6, r2, r0, asr #4
   18b14:	andeq	r6, r2, r8, lsr #4
   18b18:	andeq	r6, r2, r0, lsl r2
   18b1c:	andeq	r6, r2, ip, lsl #6
   18b20:	muleq	r2, r0, r2
   18b24:	andeq	r6, r2, r4, ror #5
   18b28:	muleq	r2, r8, lr
   18b2c:	andeq	lr, r2, r4, asr #13
   18b30:	andeq	r6, r2, r0, ror #3
   18b34:	andeq	r6, r2, ip, asr #3
   18b38:			; <UNDEFINED> instruction: 0x000261b8
   18b3c:	andeq	r6, r2, ip, lsr #3
   18b40:	muleq	r2, r4, r1
   18b44:	andeq	r6, r2, ip, ror r1
   18b48:	andeq	r6, r2, r4, ror #2
   18b4c:	muleq	r0, ip, r0
   18b50:	andeq	r6, r2, r0, ror #4
   18b54:	andeq	r6, r2, r4, ror #3
   18b58:	andeq	r6, r2, r8, lsr r2
   18b5c:	andeq	r5, r2, ip, ror #27
   18b60:	andeq	lr, r2, r8, lsl r6
   18b64:	cmp	r3, #11
   18b68:	beq	194e0 <__flatcc_fb_codegen_c@@Base+0x3f1c>
   18b6c:	ldr	r1, [pc, #-768]	; 18874 <__flatcc_fb_codegen_c@@Base+0x32b0>
   18b70:	add	r0, sp, #92	; 0x5c
   18b74:	ldrd	r2, [r5, #48]	; 0x30
   18b78:	add	r1, pc, r1
   18b7c:	str	r0, [sp, #84]	; 0x54
   18b80:	bl	13fe8 <sprintf@plt>
   18b84:	ldr	r3, [sp, #84]	; 0x54
   18b88:	str	r7, [sp, #16]
   18b8c:	str	r3, [sp, #28]
   18b90:	ldr	r3, [sp, #60]	; 0x3c
   18b94:	str	r6, [sp, #12]
   18b98:	str	r3, [sp, #24]
   18b9c:	str	r3, [sp, #20]
   18ba0:	ldr	r3, [sp, #48]	; 0x30
   18ba4:	mov	r2, r4
   18ba8:	str	r3, [sp, #8]
   18bac:	ldrd	r0, [r5, #96]	; 0x60
   18bb0:	ldr	r3, [r4, #204]	; 0xcc
   18bb4:	strd	r0, [sp]
   18bb8:	ldr	r1, [pc, #-840]	; 18878 <__flatcc_fb_codegen_c@@Base+0x32b4>
   18bbc:	mov	r0, r3
   18bc0:	add	r1, pc, r1
   18bc4:	bl	13f7c <fprintf@plt>
   18bc8:	ldr	r3, [r4, #212]	; 0xd4
   18bcc:	ldr	r3, [r3, #32]
   18bd0:	cmp	r3, #0
   18bd4:	bne	18c08 <__flatcc_fb_codegen_c@@Base+0x3644>
   18bd8:	ldrh	r3, [r5, #72]	; 0x48
   18bdc:	tst	r3, #128	; 0x80
   18be0:	beq	17ae4 <__flatcc_fb_codegen_c@@Base+0x2520>
   18be4:	ldr	r3, [sp, #60]	; 0x3c
   18be8:	ldr	r1, [pc, #-884]	; 1887c <__flatcc_fb_codegen_c@@Base+0x32b8>
   18bec:	ldr	r0, [r4, #204]	; 0xcc
   18bf0:	mov	r2, r4
   18bf4:	str	r3, [sp, #8]
   18bf8:	stm	sp, {r6, r7}
   18bfc:	ldr	r3, [sp, #48]	; 0x30
   18c00:	add	r1, pc, r1
   18c04:	bl	13f7c <fprintf@plt>
   18c08:	ldrh	r3, [r5, #72]	; 0x48
   18c0c:	tst	r3, #128	; 0x80
   18c10:	beq	17ae4 <__flatcc_fb_codegen_c@@Base+0x2520>
   18c14:	ldr	r3, [sp, #64]	; 0x40
   18c18:	cmp	r3, #0
   18c1c:	ldr	r3, [r4, #204]	; 0xcc
   18c20:	bne	19454 <__flatcc_fb_codegen_c@@Base+0x3e90>
   18c24:	ldr	r0, [pc, #-940]	; 18880 <__flatcc_fb_codegen_c@@Base+0x32bc>
   18c28:	mov	r2, #61	; 0x3d
   18c2c:	mov	r1, #1
   18c30:	add	r0, pc, r0
   18c34:	bl	13f10 <fwrite@plt>
   18c38:	ldr	r3, [sp, #60]	; 0x3c
   18c3c:	ldr	r1, [pc, #-960]	; 18884 <__flatcc_fb_codegen_c@@Base+0x32c0>
   18c40:	ldr	r0, [r4, #204]	; 0xcc
   18c44:	mov	r2, r4
   18c48:	str	r3, [sp, #8]
   18c4c:	stm	sp, {r6, r7}
   18c50:	ldr	r3, [sp, #48]	; 0x30
   18c54:	add	r1, pc, r1
   18c58:	bl	13f7c <fprintf@plt>
   18c5c:	ldr	r3, [r4, #212]	; 0xd4
   18c60:	ldr	r3, [r3, #136]	; 0x88
   18c64:	cmp	r3, #0
   18c68:	beq	18c94 <__flatcc_fb_codegen_c@@Base+0x36d0>
   18c6c:	ldr	r3, [sp, #60]	; 0x3c
   18c70:	ldr	r1, [pc, #-1008]	; 18888 <__flatcc_fb_codegen_c@@Base+0x32c4>
   18c74:	ldr	r0, [r4, #204]	; 0xcc
   18c78:	mov	r2, r4
   18c7c:	str	r3, [sp, #8]
   18c80:	str	r4, [sp, #12]
   18c84:	stm	sp, {r6, r7}
   18c88:	ldr	r3, [sp, #48]	; 0x30
   18c8c:	add	r1, pc, r1
   18c90:	bl	13f7c <fprintf@plt>
   18c94:	ldr	r3, [sp, #60]	; 0x3c
   18c98:	ldr	r1, [pc, #-1044]	; 1888c <__flatcc_fb_codegen_c@@Base+0x32c8>
   18c9c:	ldr	r0, [r4, #204]	; 0xcc
   18ca0:	mov	r2, r4
   18ca4:	str	r3, [sp, #8]
   18ca8:	add	r1, pc, r1
   18cac:	ldr	r3, [sp, #48]	; 0x30
   18cb0:	stm	sp, {r6, r7}
   18cb4:	bl	13f7c <fprintf@plt>
   18cb8:	ldr	r3, [sp, #60]	; 0x3c
   18cbc:	ldr	r1, [pc, #-1076]	; 18890 <__flatcc_fb_codegen_c@@Base+0x32cc>
   18cc0:	ldr	r0, [r4, #204]	; 0xcc
   18cc4:	mov	r2, r4
   18cc8:	str	r3, [sp, #8]
   18ccc:	stm	sp, {r6, r7}
   18cd0:	ldr	r3, [sp, #48]	; 0x30
   18cd4:	add	r1, pc, r1
   18cd8:	bl	13f7c <fprintf@plt>
   18cdc:	ldr	r3, [r4, #212]	; 0xd4
   18ce0:	ldr	r3, [r3, #136]	; 0x88
   18ce4:	cmp	r3, #0
   18ce8:	beq	17b9c <__flatcc_fb_codegen_c@@Base+0x25d8>
   18cec:	ldr	r2, [sp, #48]	; 0x30
   18cf0:	ldr	r1, [pc, #-1124]	; 18894 <__flatcc_fb_codegen_c@@Base+0x32d0>
   18cf4:	ldr	r0, [r4, #204]	; 0xcc
   18cf8:	mov	r3, r2
   18cfc:	stm	sp, {r6, r7}
   18d00:	add	r1, pc, r1
   18d04:	bl	13f7c <fprintf@plt>
   18d08:	mov	r3, #1
   18d0c:	str	r3, [sp, #64]	; 0x40
   18d10:	b	17ae4 <__flatcc_fb_codegen_c@@Base+0x2520>
   18d14:	ldr	r2, [pc, #-464]	; 18b4c <__flatcc_fb_codegen_c@@Base+0x3588>
   18d18:	ldr	r1, [sp, #68]	; 0x44
   18d1c:	ldr	r3, [pc, #-1164]	; 18898 <__flatcc_fb_codegen_c@@Base+0x32d4>
   18d20:	ldr	r4, [pc, #-1164]	; 1889c <__flatcc_fb_codegen_c@@Base+0x32d8>
   18d24:	ldr	r1, [r1, r2]
   18d28:	add	r3, pc, r3
   18d2c:	str	r3, [sp]
   18d30:	ldr	r0, [r1]
   18d34:	ldr	r1, [pc, #-1180]	; 188a0 <__flatcc_fb_codegen_c@@Base+0x32dc>
   18d38:	add	r4, pc, r4
   18d3c:	mov	r2, r4
   18d40:	mov	r3, #141	; 0x8d
   18d44:	add	r1, pc, r1
   18d48:	bl	13f7c <fprintf@plt>
   18d4c:	ldr	r3, [pc, #-1200]	; 188a4 <__flatcc_fb_codegen_c@@Base+0x32e0>
   18d50:	ldr	r0, [pc, #-1200]	; 188a8 <__flatcc_fb_codegen_c@@Base+0x32e4>
   18d54:	add	r3, pc, r3
   18d58:	mov	r1, r4
   18d5c:	add	r3, r3, #32
   18d60:	mov	r2, #141	; 0x8d
   18d64:	add	r0, pc, r0
   18d68:	bl	14030 <__assert_fail@plt>
   18d6c:	vldr	d7, [r5, #48]	; 0x30
   18d70:	ldr	r3, [pc, #-1228]	; 188ac <__flatcc_fb_codegen_c@@Base+0x32e8>
   18d74:	ldr	r2, [pc, #-1228]	; 188b0 <__flatcc_fb_codegen_c@@Base+0x32ec>
   18d78:	ldr	r1, [pc, #-1228]	; 188b4 <__flatcc_fb_codegen_c@@Base+0x32f0>
   18d7c:	vcvt.f32.f64	s14, d7
   18d80:	add	r3, pc, r3
   18d84:	add	r2, pc, r2
   18d88:	add	r0, sp, #92	; 0x5c
   18d8c:	str	r3, [sp, #72]	; 0x48
   18d90:	str	r2, [sp, #76]	; 0x4c
   18d94:	str	r3, [sp, #80]	; 0x50
   18d98:	add	r1, pc, r1
   18d9c:	vcvt.f64.f32	d7, s14
   18da0:	str	r0, [sp, #84]	; 0x54
   18da4:	vmov	r2, r3, d7
   18da8:	bl	13fe8 <sprintf@plt>
   18dac:	b	180ac <__flatcc_fb_codegen_c@@Base+0x2ae8>
   18db0:	ldr	r2, [pc, #-1280]	; 188b8 <__flatcc_fb_codegen_c@@Base+0x32f4>
   18db4:	ldr	r1, [pc, #-1280]	; 188bc <__flatcc_fb_codegen_c@@Base+0x32f8>
   18db8:	add	r2, pc, r2
   18dbc:	add	r1, pc, r1
   18dc0:	str	r2, [sp, #72]	; 0x48
   18dc4:	str	r1, [sp, #76]	; 0x4c
   18dc8:	str	r2, [sp, #80]	; 0x50
   18dcc:	b	182ac <__flatcc_fb_codegen_c@@Base+0x2ce8>
   18dd0:	ldr	r2, [pc, #-1304]	; 188c0 <__flatcc_fb_codegen_c@@Base+0x32fc>
   18dd4:	ldr	r1, [pc, #-1304]	; 188c4 <__flatcc_fb_codegen_c@@Base+0x3300>
   18dd8:	add	r2, pc, r2
   18ddc:	add	r1, pc, r1
   18de0:	str	r2, [sp, #72]	; 0x48
   18de4:	str	r1, [sp, #76]	; 0x4c
   18de8:	str	r2, [sp, #80]	; 0x50
   18dec:	b	18278 <__flatcc_fb_codegen_c@@Base+0x2cb4>
   18df0:	ldr	r2, [pc, #-1328]	; 188c8 <__flatcc_fb_codegen_c@@Base+0x3304>
   18df4:	add	r2, pc, r2
   18df8:	ldr	r1, [pc, #-1332]	; 188cc <__flatcc_fb_codegen_c@@Base+0x3308>
   18dfc:	add	r3, sp, #92	; 0x5c
   18e00:	str	r3, [sp, #84]	; 0x54
   18e04:	mov	r0, r3
   18e08:	add	r1, pc, r1
   18e0c:	ldrb	r3, [r5, #48]	; 0x30
   18e10:	bl	13fe8 <sprintf@plt>
   18e14:	b	180ac <__flatcc_fb_codegen_c@@Base+0x2ae8>
   18e18:	ldr	r2, [pc, #-1360]	; 188d0 <__flatcc_fb_codegen_c@@Base+0x330c>
   18e1c:	add	r2, pc, r2
   18e20:	b	18df8 <__flatcc_fb_codegen_c@@Base+0x3834>
   18e24:	ldr	r2, [pc, #-1368]	; 188d4 <__flatcc_fb_codegen_c@@Base+0x3310>
   18e28:	add	r2, pc, r2
   18e2c:	b	18df8 <__flatcc_fb_codegen_c@@Base+0x3834>
   18e30:	ldr	r2, [pc, #-1376]	; 188d8 <__flatcc_fb_codegen_c@@Base+0x3314>
   18e34:	add	r2, pc, r2
   18e38:	b	18df8 <__flatcc_fb_codegen_c@@Base+0x3834>
   18e3c:	ldr	r2, [pc, #-1384]	; 188dc <__flatcc_fb_codegen_c@@Base+0x3318>
   18e40:	add	r2, pc, r2
   18e44:	b	18df8 <__flatcc_fb_codegen_c@@Base+0x3834>
   18e48:	ldr	r2, [pc, #-1392]	; 188e0 <__flatcc_fb_codegen_c@@Base+0x331c>
   18e4c:	add	r2, pc, r2
   18e50:	b	18df8 <__flatcc_fb_codegen_c@@Base+0x3834>
   18e54:	ldr	r2, [pc, #-1400]	; 188e4 <__flatcc_fb_codegen_c@@Base+0x3320>
   18e58:	ldr	r1, [pc, #-1400]	; 188e8 <__flatcc_fb_codegen_c@@Base+0x3324>
   18e5c:	add	r2, pc, r2
   18e60:	add	r1, pc, r1
   18e64:	str	r2, [sp, #72]	; 0x48
   18e68:	str	r1, [sp, #76]	; 0x4c
   18e6c:	str	r2, [sp, #80]	; 0x50
   18e70:	b	18278 <__flatcc_fb_codegen_c@@Base+0x2cb4>
   18e74:	ldr	r3, [pc, #-1424]	; 188ec <__flatcc_fb_codegen_c@@Base+0x3328>
   18e78:	add	r3, pc, r3
   18e7c:	str	r3, [sp, #72]	; 0x48
   18e80:	ldr	r3, [pc, #-1432]	; 188f0 <__flatcc_fb_codegen_c@@Base+0x332c>
   18e84:	add	r3, pc, r3
   18e88:	str	r3, [sp, #80]	; 0x50
   18e8c:	ldr	r3, [pc, #-1440]	; 188f4 <__flatcc_fb_codegen_c@@Base+0x3330>
   18e90:	add	r3, pc, r3
   18e94:	str	r3, [sp, #76]	; 0x4c
   18e98:	ldr	r2, [pc, #-1448]	; 188f8 <__flatcc_fb_codegen_c@@Base+0x3334>
   18e9c:	add	r2, pc, r2
   18ea0:	b	18df8 <__flatcc_fb_codegen_c@@Base+0x3834>
   18ea4:	ldr	r2, [pc, #-1456]	; 188fc <__flatcc_fb_codegen_c@@Base+0x3338>
   18ea8:	add	r2, pc, r2
   18eac:	str	r2, [sp, #72]	; 0x48
   18eb0:	ldr	r2, [pc, #-1464]	; 18900 <__flatcc_fb_codegen_c@@Base+0x333c>
   18eb4:	add	r2, pc, r2
   18eb8:	str	r2, [sp, #80]	; 0x50
   18ebc:	ldr	r2, [pc, #-1472]	; 18904 <__flatcc_fb_codegen_c@@Base+0x3340>
   18ec0:	add	r2, pc, r2
   18ec4:	str	r2, [sp, #76]	; 0x4c
   18ec8:	b	18278 <__flatcc_fb_codegen_c@@Base+0x2cb4>
   18ecc:	ldr	r2, [pc, #-1484]	; 18908 <__flatcc_fb_codegen_c@@Base+0x3344>
   18ed0:	add	r2, pc, r2
   18ed4:	str	r2, [sp, #72]	; 0x48
   18ed8:	ldr	r2, [pc, #-1492]	; 1890c <__flatcc_fb_codegen_c@@Base+0x3348>
   18edc:	add	r2, pc, r2
   18ee0:	str	r2, [sp, #80]	; 0x50
   18ee4:	ldr	r2, [pc, #-1500]	; 18910 <__flatcc_fb_codegen_c@@Base+0x334c>
   18ee8:	add	r2, pc, r2
   18eec:	str	r2, [sp, #76]	; 0x4c
   18ef0:	b	182ac <__flatcc_fb_codegen_c@@Base+0x2ce8>
   18ef4:	ldr	r2, [pc, #-1512]	; 18914 <__flatcc_fb_codegen_c@@Base+0x3350>
   18ef8:	add	r2, pc, r2
   18efc:	ldrd	r0, [r5, #48]	; 0x30
   18f00:	add	r3, sp, #92	; 0x5c
   18f04:	str	r3, [sp, #84]	; 0x54
   18f08:	strd	r0, [sp]
   18f0c:	ldr	r1, [pc, #-1532]	; 18918 <__flatcc_fb_codegen_c@@Base+0x3354>
   18f10:	mov	r0, r3
   18f14:	add	r1, pc, r1
   18f18:	bl	13fe8 <sprintf@plt>
   18f1c:	b	180ac <__flatcc_fb_codegen_c@@Base+0x2ae8>
   18f20:	ldr	r2, [pc, #-1548]	; 1891c <__flatcc_fb_codegen_c@@Base+0x3358>
   18f24:	add	r2, pc, r2
   18f28:	b	18efc <__flatcc_fb_codegen_c@@Base+0x3938>
   18f2c:	ldr	r2, [pc, #-1556]	; 18920 <__flatcc_fb_codegen_c@@Base+0x335c>
   18f30:	add	r2, pc, r2
   18f34:	b	18efc <__flatcc_fb_codegen_c@@Base+0x3938>
   18f38:	ldr	r2, [pc, #-1564]	; 18924 <__flatcc_fb_codegen_c@@Base+0x3360>
   18f3c:	add	r2, pc, r2
   18f40:	b	18efc <__flatcc_fb_codegen_c@@Base+0x3938>
   18f44:	ldr	r2, [pc, #-1572]	; 18928 <__flatcc_fb_codegen_c@@Base+0x3364>
   18f48:	add	r2, pc, r2
   18f4c:	b	18efc <__flatcc_fb_codegen_c@@Base+0x3938>
   18f50:	ldr	r2, [pc, #-1580]	; 1892c <__flatcc_fb_codegen_c@@Base+0x3368>
   18f54:	add	r2, pc, r2
   18f58:	b	18efc <__flatcc_fb_codegen_c@@Base+0x3938>
   18f5c:	ldr	r2, [pc, #-1588]	; 18930 <__flatcc_fb_codegen_c@@Base+0x336c>
   18f60:	add	r2, pc, r2
   18f64:	b	18efc <__flatcc_fb_codegen_c@@Base+0x3938>
   18f68:	ldr	r2, [pc, #-1596]	; 18934 <__flatcc_fb_codegen_c@@Base+0x3370>
   18f6c:	add	r2, pc, r2
   18f70:	ldrd	r0, [r5, #48]	; 0x30
   18f74:	add	r3, sp, #92	; 0x5c
   18f78:	str	r3, [sp, #84]	; 0x54
   18f7c:	strd	r0, [sp]
   18f80:	ldr	r1, [pc, #-1616]	; 18938 <__flatcc_fb_codegen_c@@Base+0x3374>
   18f84:	mov	r0, r3
   18f88:	add	r1, pc, r1
   18f8c:	bl	13fe8 <sprintf@plt>
   18f90:	b	180ac <__flatcc_fb_codegen_c@@Base+0x2ae8>
   18f94:	ldr	r2, [pc, #-1632]	; 1893c <__flatcc_fb_codegen_c@@Base+0x3378>
   18f98:	add	r2, pc, r2
   18f9c:	b	18f70 <__flatcc_fb_codegen_c@@Base+0x39ac>
   18fa0:	ldr	r2, [pc, #-1640]	; 18940 <__flatcc_fb_codegen_c@@Base+0x337c>
   18fa4:	add	r2, pc, r2
   18fa8:	b	18f70 <__flatcc_fb_codegen_c@@Base+0x39ac>
   18fac:	ldr	r2, [pc, #-1648]	; 18944 <__flatcc_fb_codegen_c@@Base+0x3380>
   18fb0:	add	r2, pc, r2
   18fb4:	b	18f70 <__flatcc_fb_codegen_c@@Base+0x39ac>
   18fb8:	ldr	r2, [pc, #-1656]	; 18948 <__flatcc_fb_codegen_c@@Base+0x3384>
   18fbc:	add	r2, pc, r2
   18fc0:	b	18f70 <__flatcc_fb_codegen_c@@Base+0x39ac>
   18fc4:	ldr	r2, [pc, #-1664]	; 1894c <__flatcc_fb_codegen_c@@Base+0x3388>
   18fc8:	add	r2, pc, r2
   18fcc:	b	18efc <__flatcc_fb_codegen_c@@Base+0x3938>
   18fd0:	ldr	r2, [pc, #-1672]	; 18950 <__flatcc_fb_codegen_c@@Base+0x338c>
   18fd4:	add	r2, pc, r2
   18fd8:	b	18efc <__flatcc_fb_codegen_c@@Base+0x3938>
   18fdc:	ldr	r2, [pc, #-1680]	; 18954 <__flatcc_fb_codegen_c@@Base+0x3390>
   18fe0:	add	r2, pc, r2
   18fe4:	b	18f70 <__flatcc_fb_codegen_c@@Base+0x39ac>
   18fe8:	ldr	r2, [pc, #-1688]	; 18958 <__flatcc_fb_codegen_c@@Base+0x3394>
   18fec:	add	r2, pc, r2
   18ff0:	b	18f70 <__flatcc_fb_codegen_c@@Base+0x39ac>
   18ff4:	ldr	r2, [pc, #-1696]	; 1895c <__flatcc_fb_codegen_c@@Base+0x3398>
   18ff8:	add	r2, pc, r2
   18ffc:	b	18f70 <__flatcc_fb_codegen_c@@Base+0x39ac>
   19000:	ldr	r2, [pc, #-1704]	; 18960 <__flatcc_fb_codegen_c@@Base+0x339c>
   19004:	add	r2, pc, r2
   19008:	b	18f70 <__flatcc_fb_codegen_c@@Base+0x39ac>
   1900c:	ldr	r2, [pc, #-1712]	; 18964 <__flatcc_fb_codegen_c@@Base+0x33a0>
   19010:	add	r2, pc, r2
   19014:	b	18df8 <__flatcc_fb_codegen_c@@Base+0x3834>
   19018:	ldr	r3, [pc, #-1720]	; 18968 <__flatcc_fb_codegen_c@@Base+0x33a4>
   1901c:	add	r3, pc, r3
   19020:	str	r3, [sp, #72]	; 0x48
   19024:	ldr	r3, [pc, #-1728]	; 1896c <__flatcc_fb_codegen_c@@Base+0x33a8>
   19028:	add	r3, pc, r3
   1902c:	str	r3, [sp, #80]	; 0x50
   19030:	ldr	r3, [pc, #-1736]	; 18970 <__flatcc_fb_codegen_c@@Base+0x33ac>
   19034:	add	r3, pc, r3
   19038:	str	r3, [sp, #76]	; 0x4c
   1903c:	ldr	r2, [pc, #-1744]	; 18974 <__flatcc_fb_codegen_c@@Base+0x33b0>
   19040:	add	r2, pc, r2
   19044:	b	18df8 <__flatcc_fb_codegen_c@@Base+0x3834>
   19048:	ldr	r2, [pc, #-1752]	; 18978 <__flatcc_fb_codegen_c@@Base+0x33b4>
   1904c:	add	r2, pc, r2
   19050:	str	r2, [sp, #72]	; 0x48
   19054:	ldr	r2, [pc, #-1760]	; 1897c <__flatcc_fb_codegen_c@@Base+0x33b8>
   19058:	add	r2, pc, r2
   1905c:	str	r2, [sp, #80]	; 0x50
   19060:	ldr	r2, [pc, #-1768]	; 18980 <__flatcc_fb_codegen_c@@Base+0x33bc>
   19064:	add	r2, pc, r2
   19068:	str	r2, [sp, #76]	; 0x4c
   1906c:	b	18278 <__flatcc_fb_codegen_c@@Base+0x2cb4>
   19070:	ldr	r2, [pc, #-1780]	; 18984 <__flatcc_fb_codegen_c@@Base+0x33c0>
   19074:	ldr	r1, [pc, #-1780]	; 18988 <__flatcc_fb_codegen_c@@Base+0x33c4>
   19078:	add	r2, pc, r2
   1907c:	add	r1, pc, r1
   19080:	str	r2, [sp, #72]	; 0x48
   19084:	str	r1, [sp, #76]	; 0x4c
   19088:	str	r2, [sp, #80]	; 0x50
   1908c:	b	182ac <__flatcc_fb_codegen_c@@Base+0x2ce8>
   19090:	ldr	r3, [pc, #-1804]	; 1898c <__flatcc_fb_codegen_c@@Base+0x33c8>
   19094:	ldr	r2, [pc, #-1804]	; 18990 <__flatcc_fb_codegen_c@@Base+0x33cc>
   19098:	add	r3, pc, r3
   1909c:	add	r2, pc, r2
   190a0:	str	r3, [sp, #72]	; 0x48
   190a4:	str	r2, [sp, #76]	; 0x4c
   190a8:	str	r3, [sp, #80]	; 0x50
   190ac:	b	18090 <__flatcc_fb_codegen_c@@Base+0x2acc>
   190b0:	ldr	r2, [pc, #-1828]	; 18994 <__flatcc_fb_codegen_c@@Base+0x33d0>
   190b4:	add	r2, pc, r2
   190b8:	str	r2, [sp, #72]	; 0x48
   190bc:	ldr	r2, [pc, #-1836]	; 18998 <__flatcc_fb_codegen_c@@Base+0x33d4>
   190c0:	add	r2, pc, r2
   190c4:	str	r2, [sp, #80]	; 0x50
   190c8:	ldr	r2, [pc, #-1844]	; 1899c <__flatcc_fb_codegen_c@@Base+0x33d8>
   190cc:	add	r2, pc, r2
   190d0:	str	r2, [sp, #76]	; 0x4c
   190d4:	b	182ac <__flatcc_fb_codegen_c@@Base+0x2ce8>
   190d8:	ldr	r3, [pc, #-1856]	; 189a0 <__flatcc_fb_codegen_c@@Base+0x33dc>
   190dc:	add	r3, pc, r3
   190e0:	str	r3, [sp, #72]	; 0x48
   190e4:	ldr	r3, [pc, #-1864]	; 189a4 <__flatcc_fb_codegen_c@@Base+0x33e0>
   190e8:	add	r3, pc, r3
   190ec:	str	r3, [sp, #80]	; 0x50
   190f0:	b	18084 <__flatcc_fb_codegen_c@@Base+0x2ac0>
   190f4:	ldr	r2, [pc, #-1456]	; 18b4c <__flatcc_fb_codegen_c@@Base+0x3588>
   190f8:	ldr	r1, [sp, #68]	; 0x44
   190fc:	ldr	r3, [pc, #-1884]	; 189a8 <__flatcc_fb_codegen_c@@Base+0x33e4>
   19100:	ldr	r4, [pc, #-1884]	; 189ac <__flatcc_fb_codegen_c@@Base+0x33e8>
   19104:	ldr	r1, [r1, r2]
   19108:	add	r3, pc, r3
   1910c:	str	r3, [sp]
   19110:	ldr	r0, [r1]
   19114:	ldr	r1, [pc, #-1900]	; 189b0 <__flatcc_fb_codegen_c@@Base+0x33ec>
   19118:	add	r4, pc, r4
   1911c:	mov	r2, r4
   19120:	mov	r3, #226	; 0xe2
   19124:	add	r1, pc, r1
   19128:	bl	13f7c <fprintf@plt>
   1912c:	ldr	r3, [pc, #-1920]	; 189b4 <__flatcc_fb_codegen_c@@Base+0x33f0>
   19130:	ldr	r0, [pc, #-1920]	; 189b8 <__flatcc_fb_codegen_c@@Base+0x33f4>
   19134:	add	r3, pc, r3
   19138:	mov	r1, r4
   1913c:	add	r3, r3, #52	; 0x34
   19140:	mov	r2, #226	; 0xe2
   19144:	add	r0, pc, r0
   19148:	bl	14030 <__assert_fail@plt>
   1914c:	ldr	r2, [pc, #-1944]	; 189bc <__flatcc_fb_codegen_c@@Base+0x33f8>
   19150:	add	r2, pc, r2
   19154:	str	r2, [sp, #72]	; 0x48
   19158:	ldr	r2, [pc, #-1952]	; 189c0 <__flatcc_fb_codegen_c@@Base+0x33fc>
   1915c:	add	r2, pc, r2
   19160:	str	r2, [sp, #80]	; 0x50
   19164:	ldr	r2, [pc, #-1960]	; 189c4 <__flatcc_fb_codegen_c@@Base+0x3400>
   19168:	add	r2, pc, r2
   1916c:	str	r2, [sp, #76]	; 0x4c
   19170:	b	1803c <__flatcc_fb_codegen_c@@Base+0x2a78>
   19174:	ldr	r2, [pc, #-1972]	; 189c8 <__flatcc_fb_codegen_c@@Base+0x3404>
   19178:	add	r2, pc, r2
   1917c:	str	r2, [sp, #72]	; 0x48
   19180:	ldr	r2, [pc, #-1980]	; 189cc <__flatcc_fb_codegen_c@@Base+0x3408>
   19184:	add	r2, pc, r2
   19188:	str	r2, [sp, #80]	; 0x50
   1918c:	ldr	r2, [pc, #-1988]	; 189d0 <__flatcc_fb_codegen_c@@Base+0x340c>
   19190:	add	r2, pc, r2
   19194:	str	r2, [sp, #76]	; 0x4c
   19198:	b	18278 <__flatcc_fb_codegen_c@@Base+0x2cb4>
   1919c:	ldr	r2, [pc, #-2000]	; 189d4 <__flatcc_fb_codegen_c@@Base+0x3410>
   191a0:	add	r2, pc, r2
   191a4:	str	r2, [sp, #72]	; 0x48
   191a8:	ldr	r2, [pc, #-2008]	; 189d8 <__flatcc_fb_codegen_c@@Base+0x3414>
   191ac:	add	r2, pc, r2
   191b0:	str	r2, [sp, #80]	; 0x50
   191b4:	ldr	r2, [pc, #-2016]	; 189dc <__flatcc_fb_codegen_c@@Base+0x3418>
   191b8:	add	r2, pc, r2
   191bc:	str	r2, [sp, #76]	; 0x4c
   191c0:	b	182ac <__flatcc_fb_codegen_c@@Base+0x2ce8>
   191c4:	ldr	r3, [pc, #-2028]	; 189e0 <__flatcc_fb_codegen_c@@Base+0x341c>
   191c8:	add	r3, pc, r3
   191cc:	str	r3, [sp, #72]	; 0x48
   191d0:	ldr	r3, [pc, #-2036]	; 189e4 <__flatcc_fb_codegen_c@@Base+0x3420>
   191d4:	add	r3, pc, r3
   191d8:	str	r3, [sp, #80]	; 0x50
   191dc:	b	18084 <__flatcc_fb_codegen_c@@Base+0x2ac0>
   191e0:	ldrh	r3, [r5, #72]	; 0x48
   191e4:	tst	r3, #128	; 0x80
   191e8:	bne	17b84 <__flatcc_fb_codegen_c@@Base+0x25c0>
   191ec:	b	17ae4 <__flatcc_fb_codegen_c@@Base+0x2520>
   191f0:	ldr	r2, [pc, #-2064]	; 189e8 <__flatcc_fb_codegen_c@@Base+0x3424>
   191f4:	add	r2, pc, r2
   191f8:	str	r2, [sp, #72]	; 0x48
   191fc:	b	183f4 <__flatcc_fb_codegen_c@@Base+0x2e30>
   19200:	ldr	r2, [pc, #-1724]	; 18b4c <__flatcc_fb_codegen_c@@Base+0x3588>
   19204:	ldr	r1, [sp, #68]	; 0x44
   19208:	ldr	r3, [pc, #-2084]	; 189ec <__flatcc_fb_codegen_c@@Base+0x3428>
   1920c:	ldr	r4, [pc, #-2084]	; 189f0 <__flatcc_fb_codegen_c@@Base+0x342c>
   19210:	ldr	r1, [r1, r2]
   19214:	add	r3, pc, r3
   19218:	str	r3, [sp]
   1921c:	ldr	r0, [r1]
   19220:	ldr	r1, [pc, #-2100]	; 189f4 <__flatcc_fb_codegen_c@@Base+0x3430>
   19224:	add	r4, pc, r4
   19228:	mov	r2, r4
   1922c:	ldr	r3, [pc, #-2100]	; 18a00 <__flatcc_fb_codegen_c@@Base+0x343c>
   19230:	add	r1, pc, r1
   19234:	bl	13f7c <fprintf@plt>
   19238:	ldr	r3, [pc, #-2120]	; 189f8 <__flatcc_fb_codegen_c@@Base+0x3434>
   1923c:	ldr	r0, [pc, #-2120]	; 189fc <__flatcc_fb_codegen_c@@Base+0x3438>
   19240:	add	r3, pc, r3
   19244:	mov	r1, r4
   19248:	add	r3, r3, #148	; 0x94
   1924c:	ldr	r2, [pc, #-2132]	; 18a00 <__flatcc_fb_codegen_c@@Base+0x343c>
   19250:	add	r0, pc, r0
   19254:	bl	14030 <__assert_fail@plt>
   19258:	ldr	r0, [pc, #-2140]	; 18a04 <__flatcc_fb_codegen_c@@Base+0x3440>
   1925c:	mov	r2, #66	; 0x42
   19260:	mov	r1, #1
   19264:	add	r0, pc, r0
   19268:	bl	13f10 <fwrite@plt>
   1926c:	ldr	r0, [pc, #-2156]	; 18a08 <__flatcc_fb_codegen_c@@Base+0x3444>
   19270:	ldr	r3, [r4, #204]	; 0xcc
   19274:	mov	r2, #61	; 0x3d
   19278:	mov	r1, #1
   1927c:	add	r0, pc, r0
   19280:	bl	13f10 <fwrite@plt>
   19284:	ldr	r3, [sp, #72]	; 0x48
   19288:	ldr	r0, [r4, #204]	; 0xcc
   1928c:	ldr	r1, [pc, #-2184]	; 18a0c <__flatcc_fb_codegen_c@@Base+0x3448>
   19290:	str	r3, [sp, #12]
   19294:	ldr	r3, [sp, #76]	; 0x4c
   19298:	stm	sp, {r6, r7}
   1929c:	str	r3, [sp, #8]
   192a0:	mov	r2, r4
   192a4:	ldr	r3, [sp, #48]	; 0x30
   192a8:	add	r1, pc, r1
   192ac:	bl	13f7c <fprintf@plt>
   192b0:	ldr	r3, [r4, #212]	; 0xd4
   192b4:	ldr	r3, [r3, #136]	; 0x88
   192b8:	cmp	r3, #0
   192bc:	beq	17b9c <__flatcc_fb_codegen_c@@Base+0x25d8>
   192c0:	ldr	r3, [sp, #72]	; 0x48
   192c4:	ldr	r0, [r4, #204]	; 0xcc
   192c8:	ldr	r1, [pc, #-2240]	; 18a10 <__flatcc_fb_codegen_c@@Base+0x344c>
   192cc:	str	r3, [sp, #12]
   192d0:	ldr	r3, [sp, #76]	; 0x4c
   192d4:	str	r4, [sp, #16]
   192d8:	str	r3, [sp, #8]
   192dc:	stm	sp, {r6, r7}
   192e0:	ldr	r3, [sp, #48]	; 0x30
   192e4:	mov	r2, r4
   192e8:	add	r1, pc, r1
   192ec:	bl	13f7c <fprintf@plt>
   192f0:	b	17b9c <__flatcc_fb_codegen_c@@Base+0x25d8>
   192f4:	ldr	r2, [pc, #-1968]	; 18b4c <__flatcc_fb_codegen_c@@Base+0x3588>
   192f8:	ldr	r1, [sp, #68]	; 0x44
   192fc:	ldr	r3, [pc, #-2288]	; 18a14 <__flatcc_fb_codegen_c@@Base+0x3450>
   19300:	ldr	r4, [pc, #-2288]	; 18a18 <__flatcc_fb_codegen_c@@Base+0x3454>
   19304:	ldr	r1, [r1, r2]
   19308:	add	r3, pc, r3
   1930c:	str	r3, [sp]
   19310:	ldr	r0, [r1]
   19314:	ldr	r1, [pc, #-2304]	; 18a1c <__flatcc_fb_codegen_c@@Base+0x3458>
   19318:	add	r4, pc, r4
   1931c:	mov	r2, r4
   19320:	mov	r3, #186	; 0xba
   19324:	add	r1, pc, r1
   19328:	bl	13f7c <fprintf@plt>
   1932c:	ldr	r3, [pc, #-2324]	; 18a20 <__flatcc_fb_codegen_c@@Base+0x345c>
   19330:	ldr	r0, [pc, #-2324]	; 18a24 <__flatcc_fb_codegen_c@@Base+0x3460>
   19334:	add	r3, pc, r3
   19338:	mov	r1, r4
   1933c:	add	r3, r3, #124	; 0x7c
   19340:	mov	r2, #186	; 0xba
   19344:	add	r0, pc, r0
   19348:	bl	14030 <__assert_fail@plt>
   1934c:	ldr	r2, [pc, #-2056]	; 18b4c <__flatcc_fb_codegen_c@@Base+0x3588>
   19350:	ldr	r1, [sp, #68]	; 0x44
   19354:	ldr	r3, [pc, #-2356]	; 18a28 <__flatcc_fb_codegen_c@@Base+0x3464>
   19358:	ldr	r4, [pc, #-2356]	; 18a2c <__flatcc_fb_codegen_c@@Base+0x3468>
   1935c:	ldr	r1, [r1, r2]
   19360:	add	r3, pc, r3
   19364:	str	r3, [sp]
   19368:	ldr	r0, [r1]
   1936c:	ldr	r1, [pc, #-2372]	; 18a30 <__flatcc_fb_codegen_c@@Base+0x346c>
   19370:	add	r4, pc, r4
   19374:	mov	r2, r4
   19378:	mov	r3, #260	; 0x104
   1937c:	add	r1, pc, r1
   19380:	bl	13f7c <fprintf@plt>
   19384:	ldr	r3, [pc, #-2392]	; 18a34 <__flatcc_fb_codegen_c@@Base+0x3470>
   19388:	ldr	r0, [pc, #-2392]	; 18a38 <__flatcc_fb_codegen_c@@Base+0x3474>
   1938c:	add	r3, pc, r3
   19390:	mov	r1, r4
   19394:	add	r3, r3, #64	; 0x40
   19398:	mov	r2, #260	; 0x104
   1939c:	add	r0, pc, r0
   193a0:	bl	14030 <__assert_fail@plt>
   193a4:	ldr	r2, [pc, #-2144]	; 18b4c <__flatcc_fb_codegen_c@@Base+0x3588>
   193a8:	ldr	r1, [sp, #68]	; 0x44
   193ac:	ldr	r3, [pc, #-2424]	; 18a3c <__flatcc_fb_codegen_c@@Base+0x3478>
   193b0:	ldr	r4, [pc, #-2424]	; 18a40 <__flatcc_fb_codegen_c@@Base+0x347c>
   193b4:	ldr	r1, [r1, r2]
   193b8:	add	r3, pc, r3
   193bc:	str	r3, [sp]
   193c0:	ldr	r0, [r1]
   193c4:	ldr	r1, [pc, #-2440]	; 18a44 <__flatcc_fb_codegen_c@@Base+0x3480>
   193c8:	add	r4, pc, r4
   193cc:	mov	r2, r4
   193d0:	mov	r3, #226	; 0xe2
   193d4:	add	r1, pc, r1
   193d8:	bl	13f7c <fprintf@plt>
   193dc:	ldr	r3, [pc, #-2460]	; 18a48 <__flatcc_fb_codegen_c@@Base+0x3484>
   193e0:	ldr	r0, [pc, #-2460]	; 18a4c <__flatcc_fb_codegen_c@@Base+0x3488>
   193e4:	add	r3, pc, r3
   193e8:	mov	r1, r4
   193ec:	add	r3, r3, #52	; 0x34
   193f0:	mov	r2, #226	; 0xe2
   193f4:	add	r0, pc, r0
   193f8:	bl	14030 <__assert_fail@plt>
   193fc:	ldr	r2, [pc, #-2232]	; 18b4c <__flatcc_fb_codegen_c@@Base+0x3588>
   19400:	ldr	r1, [sp, #68]	; 0x44
   19404:	ldr	r3, [pc, #-2492]	; 18a50 <__flatcc_fb_codegen_c@@Base+0x348c>
   19408:	ldr	r4, [pc, #-2492]	; 18a54 <__flatcc_fb_codegen_c@@Base+0x3490>
   1940c:	ldr	r1, [r1, r2]
   19410:	add	r3, pc, r3
   19414:	str	r3, [sp]
   19418:	ldr	r0, [r1]
   1941c:	ldr	r1, [pc, #-2508]	; 18a58 <__flatcc_fb_codegen_c@@Base+0x3494>
   19420:	add	r4, pc, r4
   19424:	mov	r2, r4
   19428:	mov	r3, #226	; 0xe2
   1942c:	add	r1, pc, r1
   19430:	bl	13f7c <fprintf@plt>
   19434:	ldr	r3, [pc, #-2528]	; 18a5c <__flatcc_fb_codegen_c@@Base+0x3498>
   19438:	ldr	r0, [pc, #-2528]	; 18a60 <__flatcc_fb_codegen_c@@Base+0x349c>
   1943c:	add	r3, pc, r3
   19440:	mov	r1, r4
   19444:	add	r3, r3, #52	; 0x34
   19448:	mov	r2, #226	; 0xe2
   1944c:	add	r0, pc, r0
   19450:	bl	14030 <__assert_fail@plt>
   19454:	ldr	r0, [pc, #-2552]	; 18a64 <__flatcc_fb_codegen_c@@Base+0x34a0>
   19458:	mov	r2, #66	; 0x42
   1945c:	mov	r1, #1
   19460:	add	r0, pc, r0
   19464:	bl	13f10 <fwrite@plt>
   19468:	ldr	r0, [pc, #-2568]	; 18a68 <__flatcc_fb_codegen_c@@Base+0x34a4>
   1946c:	ldr	r3, [r4, #204]	; 0xcc
   19470:	mov	r2, #61	; 0x3d
   19474:	mov	r1, #1
   19478:	add	r0, pc, r0
   1947c:	bl	13f10 <fwrite@plt>
   19480:	ldr	r3, [sp, #60]	; 0x3c
   19484:	ldr	r1, [pc, #-2592]	; 18a6c <__flatcc_fb_codegen_c@@Base+0x34a8>
   19488:	ldr	r0, [r4, #204]	; 0xcc
   1948c:	mov	r2, r4
   19490:	str	r3, [sp, #8]
   19494:	stm	sp, {r6, r7}
   19498:	ldr	r3, [sp, #48]	; 0x30
   1949c:	add	r1, pc, r1
   194a0:	bl	13f7c <fprintf@plt>
   194a4:	ldr	r3, [r4, #212]	; 0xd4
   194a8:	ldr	r3, [r3, #136]	; 0x88
   194ac:	cmp	r3, #0
   194b0:	beq	17b9c <__flatcc_fb_codegen_c@@Base+0x25d8>
   194b4:	ldr	r3, [sp, #60]	; 0x3c
   194b8:	ldr	r1, [pc, #-2640]	; 18a70 <__flatcc_fb_codegen_c@@Base+0x34ac>
   194bc:	ldr	r0, [r4, #204]	; 0xcc
   194c0:	mov	r2, r4
   194c4:	str	r3, [sp, #8]
   194c8:	str	r4, [sp, #12]
   194cc:	stm	sp, {r6, r7}
   194d0:	ldr	r3, [sp, #48]	; 0x30
   194d4:	add	r1, pc, r1
   194d8:	bl	13f7c <fprintf@plt>
   194dc:	b	17b9c <__flatcc_fb_codegen_c@@Base+0x25d8>
   194e0:	vldr	d7, [r5, #48]	; 0x30
   194e4:	ldr	r1, [pc, #-2680]	; 18a74 <__flatcc_fb_codegen_c@@Base+0x34b0>
   194e8:	add	r3, sp, #92	; 0x5c
   194ec:	str	r3, [sp, #84]	; 0x54
   194f0:	vcvt.f32.f64	s14, d7
   194f4:	mov	r0, r3
   194f8:	add	r1, pc, r1
   194fc:	vcvt.f64.f32	d7, s14
   19500:	vmov	r2, r3, d7
   19504:	bl	13fe8 <sprintf@plt>
   19508:	b	18b84 <__flatcc_fb_codegen_c@@Base+0x35c0>
   1950c:	ldr	r2, [pc, #-2716]	; 18a78 <__flatcc_fb_codegen_c@@Base+0x34b4>
   19510:	add	r2, pc, r2
   19514:	ldrd	r0, [r5, #48]	; 0x30
   19518:	add	r3, sp, #92	; 0x5c
   1951c:	str	r3, [sp, #84]	; 0x54
   19520:	strd	r0, [sp]
   19524:	ldr	r1, [pc, #-2736]	; 18a7c <__flatcc_fb_codegen_c@@Base+0x34b8>
   19528:	mov	r0, r3
   1952c:	add	r1, pc, r1
   19530:	bl	13fe8 <sprintf@plt>
   19534:	b	18b84 <__flatcc_fb_codegen_c@@Base+0x35c0>
   19538:	ldr	r2, [pc, #-2752]	; 18a80 <__flatcc_fb_codegen_c@@Base+0x34bc>
   1953c:	add	r2, pc, r2
   19540:	b	19514 <__flatcc_fb_codegen_c@@Base+0x3f50>
   19544:	ldr	r2, [pc, #-2760]	; 18a84 <__flatcc_fb_codegen_c@@Base+0x34c0>
   19548:	add	r2, pc, r2
   1954c:	ldrd	r0, [r5, #48]	; 0x30
   19550:	add	r3, sp, #92	; 0x5c
   19554:	str	r3, [sp, #84]	; 0x54
   19558:	strd	r0, [sp]
   1955c:	ldr	r1, [pc, #-2780]	; 18a88 <__flatcc_fb_codegen_c@@Base+0x34c4>
   19560:	mov	r0, r3
   19564:	add	r1, pc, r1
   19568:	bl	13fe8 <sprintf@plt>
   1956c:	b	18b84 <__flatcc_fb_codegen_c@@Base+0x35c0>
   19570:	ldr	r2, [pc, #-2796]	; 18a8c <__flatcc_fb_codegen_c@@Base+0x34c8>
   19574:	add	r2, pc, r2
   19578:	b	1954c <__flatcc_fb_codegen_c@@Base+0x3f88>
   1957c:	ldr	r3, [pc, #-2804]	; 18a90 <__flatcc_fb_codegen_c@@Base+0x34cc>
   19580:	ldr	r1, [pc, #-2804]	; 18a94 <__flatcc_fb_codegen_c@@Base+0x34d0>
   19584:	ldr	r0, [pc, #-2804]	; 18a98 <__flatcc_fb_codegen_c@@Base+0x34d4>
   19588:	add	r3, pc, r3
   1958c:	ldr	r2, [pc, #-2808]	; 18a9c <__flatcc_fb_codegen_c@@Base+0x34d8>
   19590:	add	r3, r3, #148	; 0x94
   19594:	add	r1, pc, r1
   19598:	add	r0, pc, r0
   1959c:	bl	14030 <__assert_fail@plt>
   195a0:	ldr	r2, [pc, #-2824]	; 18aa0 <__flatcc_fb_codegen_c@@Base+0x34dc>
   195a4:	add	r2, pc, r2
   195a8:	ldr	r1, [pc, #-2828]	; 18aa4 <__flatcc_fb_codegen_c@@Base+0x34e0>
   195ac:	add	r3, sp, #92	; 0x5c
   195b0:	str	r3, [sp, #84]	; 0x54
   195b4:	mov	r0, r3
   195b8:	add	r1, pc, r1
   195bc:	ldrb	r3, [r5, #48]	; 0x30
   195c0:	bl	13fe8 <sprintf@plt>
   195c4:	b	18b84 <__flatcc_fb_codegen_c@@Base+0x35c0>
   195c8:	ldr	r2, [pc, #-2856]	; 18aa8 <__flatcc_fb_codegen_c@@Base+0x34e4>
   195cc:	add	r2, pc, r2
   195d0:	b	195a8 <__flatcc_fb_codegen_c@@Base+0x3fe4>
   195d4:	ldr	r3, [pc, #-2864]	; 18aac <__flatcc_fb_codegen_c@@Base+0x34e8>
   195d8:	ldr	r1, [pc, #-2864]	; 18ab0 <__flatcc_fb_codegen_c@@Base+0x34ec>
   195dc:	ldr	r0, [pc, #-2864]	; 18ab4 <__flatcc_fb_codegen_c@@Base+0x34f0>
   195e0:	add	r3, pc, r3
   195e4:	ldr	r2, [pc, #-2868]	; 18ab8 <__flatcc_fb_codegen_c@@Base+0x34f4>
   195e8:	add	r3, r3, #112	; 0x70
   195ec:	add	r1, pc, r1
   195f0:	add	r0, pc, r0
   195f4:	bl	14030 <__assert_fail@plt>
   195f8:	ldr	r2, [pc, #-2740]	; 18b4c <__flatcc_fb_codegen_c@@Base+0x3588>
   195fc:	ldr	r1, [sp, #68]	; 0x44
   19600:	ldr	r3, [pc, #-2892]	; 18abc <__flatcc_fb_codegen_c@@Base+0x34f8>
   19604:	ldr	r4, [pc, #-2892]	; 18ac0 <__flatcc_fb_codegen_c@@Base+0x34fc>
   19608:	ldr	r1, [r1, r2]
   1960c:	add	r3, pc, r3
   19610:	str	r3, [sp]
   19614:	ldr	r0, [r1]
   19618:	ldr	r1, [pc, #-2908]	; 18ac4 <__flatcc_fb_codegen_c@@Base+0x3500>
   1961c:	add	r4, pc, r4
   19620:	mov	r2, r4
   19624:	mov	r3, #1584	; 0x630
   19628:	add	r1, pc, r1
   1962c:	bl	13f7c <fprintf@plt>
   19630:	ldr	r3, [pc, #-2928]	; 18ac8 <__flatcc_fb_codegen_c@@Base+0x3504>
   19634:	ldr	r0, [pc, #-2928]	; 18acc <__flatcc_fb_codegen_c@@Base+0x3508>
   19638:	add	r3, pc, r3
   1963c:	mov	r1, r4
   19640:	add	r3, r3, #112	; 0x70
   19644:	mov	r2, #1584	; 0x630
   19648:	add	r0, pc, r0
   1964c:	bl	14030 <__assert_fail@plt>
   19650:	ldr	r2, [pc, #-2952]	; 18ad0 <__flatcc_fb_codegen_c@@Base+0x350c>
   19654:	add	r2, pc, r2
   19658:	b	1954c <__flatcc_fb_codegen_c@@Base+0x3f88>
   1965c:	ldr	r2, [pc, #-2960]	; 18ad4 <__flatcc_fb_codegen_c@@Base+0x3510>
   19660:	add	r2, pc, r2
   19664:	b	1954c <__flatcc_fb_codegen_c@@Base+0x3f88>
   19668:	ldr	r2, [pc, #-2968]	; 18ad8 <__flatcc_fb_codegen_c@@Base+0x3514>
   1966c:	add	r2, pc, r2
   19670:	b	1954c <__flatcc_fb_codegen_c@@Base+0x3f88>
   19674:	ldr	r2, [pc, #-2976]	; 18adc <__flatcc_fb_codegen_c@@Base+0x3518>
   19678:	add	r2, pc, r2
   1967c:	b	1954c <__flatcc_fb_codegen_c@@Base+0x3f88>
   19680:	ldr	r2, [pc, #-2984]	; 18ae0 <__flatcc_fb_codegen_c@@Base+0x351c>
   19684:	add	r2, pc, r2
   19688:	b	1954c <__flatcc_fb_codegen_c@@Base+0x3f88>
   1968c:	ldr	r2, [pc, #-2992]	; 18ae4 <__flatcc_fb_codegen_c@@Base+0x3520>
   19690:	add	r2, pc, r2
   19694:	b	1954c <__flatcc_fb_codegen_c@@Base+0x3f88>
   19698:	ldr	r2, [pc, #-3000]	; 18ae8 <__flatcc_fb_codegen_c@@Base+0x3524>
   1969c:	add	r2, pc, r2
   196a0:	b	1954c <__flatcc_fb_codegen_c@@Base+0x3f88>
   196a4:	ldr	r2, [pc, #-2912]	; 18b4c <__flatcc_fb_codegen_c@@Base+0x3588>
   196a8:	ldr	r1, [sp, #68]	; 0x44
   196ac:	ldr	r3, [pc, #-3016]	; 18aec <__flatcc_fb_codegen_c@@Base+0x3528>
   196b0:	ldr	r4, [pc, #-3016]	; 18af0 <__flatcc_fb_codegen_c@@Base+0x352c>
   196b4:	ldr	r1, [r1, r2]
   196b8:	add	r3, pc, r3
   196bc:	str	r3, [sp]
   196c0:	ldr	r0, [r1]
   196c4:	ldr	r1, [pc, #-3032]	; 18af4 <__flatcc_fb_codegen_c@@Base+0x3530>
   196c8:	add	r4, pc, r4
   196cc:	mov	r2, r4
   196d0:	mov	r3, #226	; 0xe2
   196d4:	add	r1, pc, r1
   196d8:	bl	13f7c <fprintf@plt>
   196dc:	ldr	r3, [pc, #-3052]	; 18af8 <__flatcc_fb_codegen_c@@Base+0x3534>
   196e0:	ldr	r0, [pc, #-3052]	; 18afc <__flatcc_fb_codegen_c@@Base+0x3538>
   196e4:	add	r3, pc, r3
   196e8:	mov	r1, r4
   196ec:	add	r3, r3, #52	; 0x34
   196f0:	mov	r2, #226	; 0xe2
   196f4:	add	r0, pc, r0
   196f8:	bl	14030 <__assert_fail@plt>
   196fc:	ldr	r2, [pc, #-3076]	; 18b00 <__flatcc_fb_codegen_c@@Base+0x353c>
   19700:	add	r2, pc, r2
   19704:	b	19514 <__flatcc_fb_codegen_c@@Base+0x3f50>
   19708:	ldr	r2, [pc, #-3084]	; 18b04 <__flatcc_fb_codegen_c@@Base+0x3540>
   1970c:	add	r2, pc, r2
   19710:	b	19514 <__flatcc_fb_codegen_c@@Base+0x3f50>
   19714:	ldr	r2, [pc, #-3092]	; 18b08 <__flatcc_fb_codegen_c@@Base+0x3544>
   19718:	add	r2, pc, r2
   1971c:	b	19514 <__flatcc_fb_codegen_c@@Base+0x3f50>
   19720:	ldr	r2, [pc, #-3100]	; 18b0c <__flatcc_fb_codegen_c@@Base+0x3548>
   19724:	add	r2, pc, r2
   19728:	b	19514 <__flatcc_fb_codegen_c@@Base+0x3f50>
   1972c:	ldr	r2, [pc, #-3108]	; 18b10 <__flatcc_fb_codegen_c@@Base+0x354c>
   19730:	add	r2, pc, r2
   19734:	b	19514 <__flatcc_fb_codegen_c@@Base+0x3f50>
   19738:	ldr	r2, [pc, #-3116]	; 18b14 <__flatcc_fb_codegen_c@@Base+0x3550>
   1973c:	add	r2, pc, r2
   19740:	b	19514 <__flatcc_fb_codegen_c@@Base+0x3f50>
   19744:	ldr	r2, [pc, #-3124]	; 18b18 <__flatcc_fb_codegen_c@@Base+0x3554>
   19748:	add	r2, pc, r2
   1974c:	b	19514 <__flatcc_fb_codegen_c@@Base+0x3f50>
   19750:	ldr	r2, [pc, #-3084]	; 18b4c <__flatcc_fb_codegen_c@@Base+0x3588>
   19754:	ldr	r1, [sp, #68]	; 0x44
   19758:	ldr	r3, [pc, #-3140]	; 18b1c <__flatcc_fb_codegen_c@@Base+0x3558>
   1975c:	ldr	r4, [pc, #-3140]	; 18b20 <__flatcc_fb_codegen_c@@Base+0x355c>
   19760:	ldr	r1, [r1, r2]
   19764:	add	r3, pc, r3
   19768:	str	r3, [sp]
   1976c:	ldr	r0, [r1]
   19770:	ldr	r1, [pc, #-3156]	; 18b24 <__flatcc_fb_codegen_c@@Base+0x3560>
   19774:	add	r4, pc, r4
   19778:	mov	r2, r4
   1977c:	mov	r3, #226	; 0xe2
   19780:	add	r1, pc, r1
   19784:	bl	13f7c <fprintf@plt>
   19788:	ldr	r3, [pc, #-3176]	; 18b28 <__flatcc_fb_codegen_c@@Base+0x3564>
   1978c:	ldr	r0, [pc, #-3176]	; 18b2c <__flatcc_fb_codegen_c@@Base+0x3568>
   19790:	add	r3, pc, r3
   19794:	mov	r1, r4
   19798:	add	r3, r3, #52	; 0x34
   1979c:	mov	r2, #226	; 0xe2
   197a0:	add	r0, pc, r0
   197a4:	bl	14030 <__assert_fail@plt>
   197a8:	ldr	r2, [pc, #-3200]	; 18b30 <__flatcc_fb_codegen_c@@Base+0x356c>
   197ac:	add	r2, pc, r2
   197b0:	b	195a8 <__flatcc_fb_codegen_c@@Base+0x3fe4>
   197b4:	ldr	r2, [pc, #-3208]	; 18b34 <__flatcc_fb_codegen_c@@Base+0x3570>
   197b8:	add	r2, pc, r2
   197bc:	b	195a8 <__flatcc_fb_codegen_c@@Base+0x3fe4>
   197c0:	ldr	r2, [pc, #-3216]	; 18b38 <__flatcc_fb_codegen_c@@Base+0x3574>
   197c4:	add	r2, pc, r2
   197c8:	b	195a8 <__flatcc_fb_codegen_c@@Base+0x3fe4>
   197cc:	ldr	r2, [pc, #-3224]	; 18b3c <__flatcc_fb_codegen_c@@Base+0x3578>
   197d0:	add	r2, pc, r2
   197d4:	b	195a8 <__flatcc_fb_codegen_c@@Base+0x3fe4>
   197d8:	ldr	r2, [pc, #-3232]	; 18b40 <__flatcc_fb_codegen_c@@Base+0x357c>
   197dc:	add	r2, pc, r2
   197e0:	b	195a8 <__flatcc_fb_codegen_c@@Base+0x3fe4>
   197e4:	ldr	r2, [pc, #-3240]	; 18b44 <__flatcc_fb_codegen_c@@Base+0x3580>
   197e8:	add	r2, pc, r2
   197ec:	b	195a8 <__flatcc_fb_codegen_c@@Base+0x3fe4>
   197f0:	ldr	r2, [pc, #-3248]	; 18b48 <__flatcc_fb_codegen_c@@Base+0x3584>
   197f4:	add	r2, pc, r2
   197f8:	b	195a8 <__flatcc_fb_codegen_c@@Base+0x3fe4>
   197fc:	ldr	r2, [pc, #-3256]	; 18b4c <__flatcc_fb_codegen_c@@Base+0x3588>
   19800:	ldr	r1, [sp, #68]	; 0x44
   19804:	ldr	r3, [pc, #-3260]	; 18b50 <__flatcc_fb_codegen_c@@Base+0x358c>
   19808:	ldr	r4, [pc, #-3260]	; 18b54 <__flatcc_fb_codegen_c@@Base+0x3590>
   1980c:	ldr	r1, [r1, r2]
   19810:	add	r3, pc, r3
   19814:	str	r3, [sp]
   19818:	ldr	r0, [r1]
   1981c:	ldr	r1, [pc, #-3276]	; 18b58 <__flatcc_fb_codegen_c@@Base+0x3594>
   19820:	add	r4, pc, r4
   19824:	mov	r2, r4
   19828:	mov	r3, #226	; 0xe2
   1982c:	add	r1, pc, r1
   19830:	bl	13f7c <fprintf@plt>
   19834:	ldr	r3, [pc, #-3296]	; 18b5c <__flatcc_fb_codegen_c@@Base+0x3598>
   19838:	ldr	r0, [pc, #-3296]	; 18b60 <__flatcc_fb_codegen_c@@Base+0x359c>
   1983c:	add	r3, pc, r3
   19840:	mov	r1, r4
   19844:	add	r3, r3, #52	; 0x34
   19848:	mov	r2, #226	; 0xe2
   1984c:	add	r0, pc, r0
   19850:	bl	14030 <__assert_fail@plt>

00019854 <__flatcc_fb_gen_common_c_header@@Base>:
   19854:	ldr	r1, [pc, #3160]	; 1a4b4 <__flatcc_fb_gen_common_c_header@@Base+0xc60>
   19858:	push	{r4, r5, lr}
   1985c:	add	r5, r0, #102	; 0x66
   19860:	mov	r4, r0
   19864:	sub	sp, sp, #236	; 0xec
   19868:	mov	r3, r5
   1986c:	mov	r2, r5
   19870:	add	r1, pc, r1
   19874:	ldr	r0, [r0, #204]	; 0xcc
   19878:	bl	13f7c <fprintf@plt>
   1987c:	ldr	r0, [pc, #3124]	; 1a4b8 <__flatcc_fb_gen_common_c_header@@Base+0xc64>
   19880:	ldr	r3, [r4, #204]	; 0xcc
   19884:	mov	r2, #81	; 0x51
   19888:	mov	r1, #1
   1988c:	add	r0, pc, r0
   19890:	bl	13f10 <fwrite@plt>
   19894:	ldr	r0, [pc, #3104]	; 1a4bc <__flatcc_fb_gen_common_c_header@@Base+0xc68>
   19898:	ldr	r3, [r4, #204]	; 0xcc
   1989c:	mov	r2, #52	; 0x34
   198a0:	mov	r1, #1
   198a4:	add	r0, pc, r0
   198a8:	bl	13f10 <fwrite@plt>
   198ac:	ldr	r3, [r4, #212]	; 0xd4
   198b0:	ldr	r2, [r3, #136]	; 0x88
   198b4:	cmp	r2, #0
   198b8:	beq	1a494 <__flatcc_fb_gen_common_c_header@@Base+0xc40>
   198bc:	ldr	r2, [r3, #140]	; 0x8c
   198c0:	ldr	r3, [r4, #204]	; 0xcc
   198c4:	cmp	r2, #0
   198c8:	bne	1a478 <__flatcc_fb_gen_common_c_header@@Base+0xc24>
   198cc:	ldr	r0, [pc, #3052]	; 1a4c0 <__flatcc_fb_gen_common_c_header@@Base+0xc6c>
   198d0:	mov	r2, #41	; 0x29
   198d4:	mov	r1, #1
   198d8:	add	r0, pc, r0
   198dc:	bl	13f10 <fwrite@plt>
   198e0:	ldr	r1, [pc, #3036]	; 1a4c4 <__flatcc_fb_gen_common_c_header@@Base+0xc70>
   198e4:	mov	r0, r4
   198e8:	add	r1, pc, r1
   198ec:	bl	13eb0 <strcmp@plt>
   198f0:	cmp	r0, #0
   198f4:	bne	1a3f0 <__flatcc_fb_gen_common_c_header@@Base+0xb9c>
   198f8:	ldr	r1, [pc, #3016]	; 1a4c8 <__flatcc_fb_gen_common_c_header@@Base+0xc74>
   198fc:	mov	r3, r4
   19900:	mov	r2, r4
   19904:	add	r1, pc, r1
   19908:	ldr	r0, [r4, #204]	; 0xcc
   1990c:	bl	13f7c <fprintf@plt>
   19910:	ldr	r1, [pc, #2996]	; 1a4cc <__flatcc_fb_gen_common_c_header@@Base+0xc78>
   19914:	ldr	r0, [r4, #204]	; 0xcc
   19918:	mov	r3, r4
   1991c:	mov	r2, r4
   19920:	add	r1, pc, r1
   19924:	str	r4, [sp, #16]
   19928:	str	r4, [sp, #12]
   1992c:	str	r4, [sp, #8]
   19930:	str	r4, [sp, #4]
   19934:	str	r4, [sp]
   19938:	bl	13f7c <fprintf@plt>
   1993c:	ldr	r1, [pc, #2956]	; 1a4d0 <__flatcc_fb_gen_common_c_header@@Base+0xc7c>
   19940:	mov	r3, r4
   19944:	mov	r2, r4
   19948:	add	r1, pc, r1
   1994c:	ldr	r0, [r4, #204]	; 0xcc
   19950:	bl	13f7c <fprintf@plt>
   19954:	ldr	r1, [pc, #2936]	; 1a4d4 <__flatcc_fb_gen_common_c_header@@Base+0xc80>
   19958:	ldr	r0, [r4, #204]	; 0xcc
   1995c:	mov	r3, r4
   19960:	str	r4, [sp, #4]
   19964:	str	r4, [sp]
   19968:	mov	r2, r4
   1996c:	add	r1, pc, r1
   19970:	bl	13f7c <fprintf@plt>
   19974:	ldr	r3, [r4, #212]	; 0xd4
   19978:	ldr	r3, [r3, #32]
   1997c:	cmp	r3, #0
   19980:	beq	1a3b0 <__flatcc_fb_gen_common_c_header@@Base+0xb5c>
   19984:	ldr	r1, [pc, #2892]	; 1a4d8 <__flatcc_fb_gen_common_c_header@@Base+0xc84>
   19988:	mov	r2, r4
   1998c:	add	r1, pc, r1
   19990:	ldr	r0, [r4, #204]	; 0xcc
   19994:	bl	13f7c <fprintf@plt>
   19998:	ldr	r1, [pc, #2876]	; 1a4dc <__flatcc_fb_gen_common_c_header@@Base+0xc88>
   1999c:	mov	r3, r4
   199a0:	mov	r2, r4
   199a4:	add	r1, pc, r1
   199a8:	ldr	r0, [r4, #204]	; 0xcc
   199ac:	bl	13f7c <fprintf@plt>
   199b0:	ldr	r1, [pc, #2856]	; 1a4e0 <__flatcc_fb_gen_common_c_header@@Base+0xc8c>
   199b4:	ldr	r0, [r4, #204]	; 0xcc
   199b8:	mov	r3, r4
   199bc:	mov	r2, r4
   199c0:	add	r1, pc, r1
   199c4:	str	r4, [sp, #8]
   199c8:	str	r4, [sp, #4]
   199cc:	str	r4, [sp]
   199d0:	bl	13f7c <fprintf@plt>
   199d4:	ldr	r1, [pc, #2824]	; 1a4e4 <__flatcc_fb_gen_common_c_header@@Base+0xc90>
   199d8:	ldr	r0, [r4, #204]	; 0xcc
   199dc:	mov	r3, r4
   199e0:	mov	r2, r4
   199e4:	add	r1, pc, r1
   199e8:	str	r4, [sp, #8]
   199ec:	str	r4, [sp, #4]
   199f0:	str	r4, [sp]
   199f4:	bl	13f7c <fprintf@plt>
   199f8:	ldr	r1, [pc, #2792]	; 1a4e8 <__flatcc_fb_gen_common_c_header@@Base+0xc94>
   199fc:	ldr	r0, [r4, #204]	; 0xcc
   19a00:	mov	r3, r4
   19a04:	mov	r2, r4
   19a08:	add	r1, pc, r1
   19a0c:	str	r4, [sp]
   19a10:	bl	13f7c <fprintf@plt>
   19a14:	ldr	r1, [pc, #2768]	; 1a4ec <__flatcc_fb_gen_common_c_header@@Base+0xc98>
   19a18:	ldr	r0, [r4, #204]	; 0xcc
   19a1c:	mov	r3, r4
   19a20:	mov	r2, r4
   19a24:	add	r1, pc, r1
   19a28:	str	r4, [sp]
   19a2c:	bl	13f7c <fprintf@plt>
   19a30:	ldr	r1, [pc, #2744]	; 1a4f0 <__flatcc_fb_gen_common_c_header@@Base+0xc9c>
   19a34:	ldr	r0, [r4, #204]	; 0xcc
   19a38:	mov	r3, r4
   19a3c:	mov	r2, r4
   19a40:	add	r1, pc, r1
   19a44:	str	r4, [sp]
   19a48:	bl	13f7c <fprintf@plt>
   19a4c:	ldr	r1, [pc, #2720]	; 1a4f4 <__flatcc_fb_gen_common_c_header@@Base+0xca0>
   19a50:	ldr	r0, [r4, #204]	; 0xcc
   19a54:	mov	r3, r4
   19a58:	str	r4, [sp, #8]
   19a5c:	str	r4, [sp, #4]
   19a60:	str	r4, [sp]
   19a64:	mov	r2, r4
   19a68:	add	r1, pc, r1
   19a6c:	bl	13f7c <fprintf@plt>
   19a70:	ldr	r3, [r4, #212]	; 0xd4
   19a74:	ldr	r3, [r3, #32]
   19a78:	cmp	r3, #0
   19a7c:	beq	1a3a0 <__flatcc_fb_gen_common_c_header@@Base+0xb4c>
   19a80:	ldr	r1, [pc, #2672]	; 1a4f8 <__flatcc_fb_gen_common_c_header@@Base+0xca4>
   19a84:	mov	r2, r4
   19a88:	add	r1, pc, r1
   19a8c:	ldr	r0, [r4, #204]	; 0xcc
   19a90:	bl	13f7c <fprintf@plt>
   19a94:	ldr	r1, [pc, #2656]	; 1a4fc <__flatcc_fb_gen_common_c_header@@Base+0xca8>
   19a98:	ldr	r0, [r4, #204]	; 0xcc
   19a9c:	mov	r3, r4
   19aa0:	mov	r2, r4
   19aa4:	add	r1, pc, r1
   19aa8:	str	r4, [sp, #4]
   19aac:	str	r4, [sp]
   19ab0:	bl	13f7c <fprintf@plt>
   19ab4:	ldr	r1, [pc, #2628]	; 1a500 <__flatcc_fb_gen_common_c_header@@Base+0xcac>
   19ab8:	mov	r3, r4
   19abc:	mov	r2, r4
   19ac0:	add	r1, pc, r1
   19ac4:	ldr	r0, [r4, #204]	; 0xcc
   19ac8:	bl	13f7c <fprintf@plt>
   19acc:	ldr	r1, [pc, #2608]	; 1a504 <__flatcc_fb_gen_common_c_header@@Base+0xcb0>
   19ad0:	ldr	r0, [r4, #204]	; 0xcc
   19ad4:	mov	r3, r4
   19ad8:	mov	r2, r4
   19adc:	add	r1, pc, r1
   19ae0:	str	r4, [sp]
   19ae4:	bl	13f7c <fprintf@plt>
   19ae8:	ldr	r1, [pc, #2584]	; 1a508 <__flatcc_fb_gen_common_c_header@@Base+0xcb4>
   19aec:	mov	r3, r4
   19af0:	mov	r2, r4
   19af4:	add	r1, pc, r1
   19af8:	ldr	r0, [r4, #204]	; 0xcc
   19afc:	bl	13f7c <fprintf@plt>
   19b00:	ldr	r1, [pc, #2564]	; 1a50c <__flatcc_fb_gen_common_c_header@@Base+0xcb8>
   19b04:	ldr	r0, [r4, #204]	; 0xcc
   19b08:	mov	r3, r4
   19b0c:	mov	r2, r4
   19b10:	add	r1, pc, r1
   19b14:	str	r4, [sp, #4]
   19b18:	str	r4, [sp]
   19b1c:	bl	13f7c <fprintf@plt>
   19b20:	ldr	r1, [pc, #2536]	; 1a510 <__flatcc_fb_gen_common_c_header@@Base+0xcbc>
   19b24:	mov	r3, r4
   19b28:	mov	r2, r4
   19b2c:	add	r1, pc, r1
   19b30:	ldr	r0, [r4, #204]	; 0xcc
   19b34:	bl	13f7c <fprintf@plt>
   19b38:	ldr	r1, [pc, #2516]	; 1a514 <__flatcc_fb_gen_common_c_header@@Base+0xcc0>
   19b3c:	mov	r3, r4
   19b40:	mov	r2, r4
   19b44:	add	r1, pc, r1
   19b48:	ldr	r0, [r4, #204]	; 0xcc
   19b4c:	bl	13f7c <fprintf@plt>
   19b50:	ldr	r1, [pc, #2496]	; 1a518 <__flatcc_fb_gen_common_c_header@@Base+0xcc4>
   19b54:	ldr	r0, [r4, #204]	; 0xcc
   19b58:	mov	r3, r4
   19b5c:	mov	r2, r4
   19b60:	add	r1, pc, r1
   19b64:	str	r4, [sp, #4]
   19b68:	str	r4, [sp]
   19b6c:	bl	13f7c <fprintf@plt>
   19b70:	ldr	r1, [pc, #2468]	; 1a51c <__flatcc_fb_gen_common_c_header@@Base+0xcc8>
   19b74:	ldr	r0, [r4, #204]	; 0xcc
   19b78:	mov	r3, r4
   19b7c:	mov	r2, r4
   19b80:	add	r1, pc, r1
   19b84:	str	r4, [sp, #36]	; 0x24
   19b88:	str	r4, [sp, #32]
   19b8c:	str	r4, [sp, #28]
   19b90:	str	r4, [sp, #24]
   19b94:	str	r4, [sp, #20]
   19b98:	str	r4, [sp, #16]
   19b9c:	str	r4, [sp, #12]
   19ba0:	str	r4, [sp, #8]
   19ba4:	str	r4, [sp, #4]
   19ba8:	str	r4, [sp]
   19bac:	bl	13f7c <fprintf@plt>
   19bb0:	ldr	r1, [pc, #2408]	; 1a520 <__flatcc_fb_gen_common_c_header@@Base+0xccc>
   19bb4:	mov	r2, r4
   19bb8:	add	r1, pc, r1
   19bbc:	ldr	r0, [r4, #204]	; 0xcc
   19bc0:	bl	13f7c <fprintf@plt>
   19bc4:	ldr	r1, [pc, #2392]	; 1a524 <__flatcc_fb_gen_common_c_header@@Base+0xcd0>
   19bc8:	ldr	r0, [r4, #204]	; 0xcc
   19bcc:	mov	r3, r4
   19bd0:	mov	r2, r4
   19bd4:	add	r1, pc, r1
   19bd8:	str	r4, [sp, #4]
   19bdc:	str	r4, [sp]
   19be0:	bl	13f7c <fprintf@plt>
   19be4:	ldr	r1, [pc, #2364]	; 1a528 <__flatcc_fb_gen_common_c_header@@Base+0xcd4>
   19be8:	ldr	r0, [r4, #204]	; 0xcc
   19bec:	mov	r3, r4
   19bf0:	mov	r2, r4
   19bf4:	add	r1, pc, r1
   19bf8:	str	r4, [sp, #56]	; 0x38
   19bfc:	str	r4, [sp, #52]	; 0x34
   19c00:	str	r4, [sp, #48]	; 0x30
   19c04:	str	r4, [sp, #44]	; 0x2c
   19c08:	str	r4, [sp, #40]	; 0x28
   19c0c:	str	r4, [sp, #36]	; 0x24
   19c10:	str	r4, [sp, #32]
   19c14:	str	r4, [sp, #28]
   19c18:	str	r4, [sp, #24]
   19c1c:	str	r4, [sp, #20]
   19c20:	str	r4, [sp, #16]
   19c24:	str	r4, [sp, #12]
   19c28:	str	r4, [sp, #8]
   19c2c:	str	r4, [sp, #4]
   19c30:	str	r4, [sp]
   19c34:	bl	13f7c <fprintf@plt>
   19c38:	ldr	r1, [pc, #2284]	; 1a52c <__flatcc_fb_gen_common_c_header@@Base+0xcd8>
   19c3c:	ldr	r0, [r4, #204]	; 0xcc
   19c40:	mov	r3, r4
   19c44:	mov	r2, r4
   19c48:	add	r1, pc, r1
   19c4c:	str	r4, [sp, #20]
   19c50:	str	r4, [sp, #16]
   19c54:	str	r4, [sp, #12]
   19c58:	str	r4, [sp, #8]
   19c5c:	str	r4, [sp, #4]
   19c60:	str	r4, [sp]
   19c64:	bl	13f7c <fprintf@plt>
   19c68:	ldr	r1, [pc, #2240]	; 1a530 <__flatcc_fb_gen_common_c_header@@Base+0xcdc>
   19c6c:	ldr	r0, [r4, #204]	; 0xcc
   19c70:	mov	r3, r4
   19c74:	mov	r2, r4
   19c78:	add	r1, pc, r1
   19c7c:	str	r4, [sp, #4]
   19c80:	str	r4, [sp]
   19c84:	bl	13f7c <fprintf@plt>
   19c88:	ldr	r1, [pc, #2212]	; 1a534 <__flatcc_fb_gen_common_c_header@@Base+0xce0>
   19c8c:	mov	r3, r4
   19c90:	ldr	r0, [r4, #204]	; 0xcc
   19c94:	mov	r2, r4
   19c98:	add	r1, pc, r1
   19c9c:	str	r4, [sp, #4]
   19ca0:	str	r4, [sp]
   19ca4:	bl	13f7c <fprintf@plt>
   19ca8:	ldr	r1, [pc, #2184]	; 1a538 <__flatcc_fb_gen_common_c_header@@Base+0xce4>
   19cac:	mov	r2, r4
   19cb0:	add	r1, pc, r1
   19cb4:	ldr	r0, [r4, #204]	; 0xcc
   19cb8:	bl	13f7c <fprintf@plt>
   19cbc:	ldr	r1, [pc, #2168]	; 1a53c <__flatcc_fb_gen_common_c_header@@Base+0xce8>
   19cc0:	mov	r2, r4
   19cc4:	add	r1, pc, r1
   19cc8:	ldr	r0, [r4, #204]	; 0xcc
   19ccc:	bl	13f7c <fprintf@plt>
   19cd0:	ldr	r1, [pc, #2152]	; 1a540 <__flatcc_fb_gen_common_c_header@@Base+0xcec>
   19cd4:	mov	r2, r4
   19cd8:	add	r1, pc, r1
   19cdc:	ldr	r0, [r4, #204]	; 0xcc
   19ce0:	bl	13f7c <fprintf@plt>
   19ce4:	ldr	r1, [pc, #2136]	; 1a544 <__flatcc_fb_gen_common_c_header@@Base+0xcf0>
   19ce8:	mov	r2, r4
   19cec:	add	r1, pc, r1
   19cf0:	ldr	r0, [r4, #204]	; 0xcc
   19cf4:	bl	13f7c <fprintf@plt>
   19cf8:	ldr	r1, [pc, #2120]	; 1a548 <__flatcc_fb_gen_common_c_header@@Base+0xcf4>
   19cfc:	mov	r2, r4
   19d00:	add	r1, pc, r1
   19d04:	ldr	r0, [r4, #204]	; 0xcc
   19d08:	bl	13f7c <fprintf@plt>
   19d0c:	ldr	r1, [pc, #2104]	; 1a54c <__flatcc_fb_gen_common_c_header@@Base+0xcf8>
   19d10:	ldr	r0, [r4, #204]	; 0xcc
   19d14:	mov	r3, r4
   19d18:	mov	r2, r4
   19d1c:	add	r1, pc, r1
   19d20:	str	r4, [sp, #4]
   19d24:	str	r4, [sp]
   19d28:	bl	13f7c <fprintf@plt>
   19d2c:	ldr	r1, [pc, #2076]	; 1a550 <__flatcc_fb_gen_common_c_header@@Base+0xcfc>
   19d30:	ldr	r0, [r4, #204]	; 0xcc
   19d34:	mov	r3, r4
   19d38:	mov	r2, r4
   19d3c:	add	r1, pc, r1
   19d40:	str	r4, [sp, #12]
   19d44:	str	r4, [sp, #8]
   19d48:	str	r4, [sp, #4]
   19d4c:	str	r4, [sp]
   19d50:	bl	13f7c <fprintf@plt>
   19d54:	ldr	r1, [pc, #2040]	; 1a554 <__flatcc_fb_gen_common_c_header@@Base+0xd00>
   19d58:	ldr	r0, [r4, #204]	; 0xcc
   19d5c:	mov	r3, r4
   19d60:	mov	r2, r4
   19d64:	add	r1, pc, r1
   19d68:	str	r4, [sp]
   19d6c:	bl	13f7c <fprintf@plt>
   19d70:	ldr	r1, [pc, #2016]	; 1a558 <__flatcc_fb_gen_common_c_header@@Base+0xd04>
   19d74:	ldr	r0, [r4, #204]	; 0xcc
   19d78:	mov	r3, r4
   19d7c:	mov	r2, r4
   19d80:	add	r1, pc, r1
   19d84:	str	r4, [sp, #32]
   19d88:	str	r4, [sp, #28]
   19d8c:	str	r4, [sp, #24]
   19d90:	str	r4, [sp, #20]
   19d94:	str	r4, [sp, #16]
   19d98:	str	r4, [sp, #12]
   19d9c:	str	r4, [sp, #8]
   19da0:	str	r4, [sp, #4]
   19da4:	str	r4, [sp]
   19da8:	bl	13f7c <fprintf@plt>
   19dac:	ldr	r1, [pc, #1960]	; 1a55c <__flatcc_fb_gen_common_c_header@@Base+0xd08>
   19db0:	mov	r3, r4
   19db4:	mov	r2, r4
   19db8:	add	r1, pc, r1
   19dbc:	ldr	r0, [r4, #204]	; 0xcc
   19dc0:	bl	13f7c <fprintf@plt>
   19dc4:	ldr	r1, [pc, #1940]	; 1a560 <__flatcc_fb_gen_common_c_header@@Base+0xd0c>
   19dc8:	ldr	r0, [r4, #204]	; 0xcc
   19dcc:	mov	r3, r4
   19dd0:	mov	r2, r4
   19dd4:	add	r1, pc, r1
   19dd8:	str	r4, [sp]
   19ddc:	bl	13f7c <fprintf@plt>
   19de0:	ldr	r1, [pc, #1916]	; 1a564 <__flatcc_fb_gen_common_c_header@@Base+0xd10>
   19de4:	mov	r3, r4
   19de8:	ldr	r0, [r4, #204]	; 0xcc
   19dec:	mov	r2, r4
   19df0:	add	r1, pc, r1
   19df4:	str	r4, [sp]
   19df8:	bl	13f7c <fprintf@plt>
   19dfc:	ldr	r1, [pc, #1892]	; 1a568 <__flatcc_fb_gen_common_c_header@@Base+0xd14>
   19e00:	mov	r2, r4
   19e04:	add	r1, pc, r1
   19e08:	ldr	r0, [r4, #204]	; 0xcc
   19e0c:	bl	13f7c <fprintf@plt>
   19e10:	ldr	r1, [pc, #1876]	; 1a56c <__flatcc_fb_gen_common_c_header@@Base+0xd18>
   19e14:	mov	r2, r4
   19e18:	add	r1, pc, r1
   19e1c:	ldr	r0, [r4, #204]	; 0xcc
   19e20:	bl	13f7c <fprintf@plt>
   19e24:	ldr	r1, [pc, #1860]	; 1a570 <__flatcc_fb_gen_common_c_header@@Base+0xd1c>
   19e28:	mov	r3, r4
   19e2c:	mov	r2, r4
   19e30:	add	r1, pc, r1
   19e34:	ldr	r0, [r4, #204]	; 0xcc
   19e38:	bl	13f7c <fprintf@plt>
   19e3c:	ldr	r1, [pc, #1840]	; 1a574 <__flatcc_fb_gen_common_c_header@@Base+0xd20>
   19e40:	mov	r3, r4
   19e44:	mov	r2, r4
   19e48:	add	r1, pc, r1
   19e4c:	ldr	r0, [r4, #204]	; 0xcc
   19e50:	bl	13f7c <fprintf@plt>
   19e54:	ldr	r1, [pc, #1820]	; 1a578 <__flatcc_fb_gen_common_c_header@@Base+0xd24>
   19e58:	ldr	r0, [r4, #204]	; 0xcc
   19e5c:	mov	r3, r4
   19e60:	mov	r2, r4
   19e64:	add	r1, pc, r1
   19e68:	str	r4, [sp, #32]
   19e6c:	str	r4, [sp, #28]
   19e70:	str	r4, [sp, #24]
   19e74:	str	r4, [sp, #20]
   19e78:	str	r4, [sp, #16]
   19e7c:	str	r4, [sp, #12]
   19e80:	str	r4, [sp, #8]
   19e84:	str	r4, [sp, #4]
   19e88:	str	r4, [sp]
   19e8c:	bl	13f7c <fprintf@plt>
   19e90:	ldr	r1, [pc, #1764]	; 1a57c <__flatcc_fb_gen_common_c_header@@Base+0xd28>
   19e94:	ldr	r0, [r4, #204]	; 0xcc
   19e98:	mov	r3, r4
   19e9c:	mov	r2, r4
   19ea0:	add	r1, pc, r1
   19ea4:	str	r4, [sp, #32]
   19ea8:	str	r4, [sp, #28]
   19eac:	str	r4, [sp, #24]
   19eb0:	str	r4, [sp, #20]
   19eb4:	str	r4, [sp, #16]
   19eb8:	str	r4, [sp, #12]
   19ebc:	str	r4, [sp, #8]
   19ec0:	str	r4, [sp, #4]
   19ec4:	str	r4, [sp]
   19ec8:	bl	13f7c <fprintf@plt>
   19ecc:	ldr	r1, [pc, #1708]	; 1a580 <__flatcc_fb_gen_common_c_header@@Base+0xd2c>
   19ed0:	ldr	r0, [r4, #204]	; 0xcc
   19ed4:	mov	r3, r4
   19ed8:	mov	r2, r4
   19edc:	add	r1, pc, r1
   19ee0:	str	r4, [sp, #16]
   19ee4:	str	r4, [sp, #12]
   19ee8:	str	r4, [sp, #8]
   19eec:	str	r4, [sp, #4]
   19ef0:	str	r4, [sp]
   19ef4:	bl	13f7c <fprintf@plt>
   19ef8:	ldr	r1, [pc, #1668]	; 1a584 <__flatcc_fb_gen_common_c_header@@Base+0xd30>
   19efc:	ldr	r0, [r4, #204]	; 0xcc
   19f00:	mov	r3, r4
   19f04:	mov	r2, r4
   19f08:	add	r1, pc, r1
   19f0c:	str	r4, [sp, #32]
   19f10:	str	r4, [sp, #28]
   19f14:	str	r4, [sp, #24]
   19f18:	str	r4, [sp, #20]
   19f1c:	str	r4, [sp, #16]
   19f20:	str	r4, [sp, #12]
   19f24:	str	r4, [sp, #8]
   19f28:	str	r4, [sp, #4]
   19f2c:	str	r4, [sp]
   19f30:	bl	13f7c <fprintf@plt>
   19f34:	ldr	r1, [pc, #1612]	; 1a588 <__flatcc_fb_gen_common_c_header@@Base+0xd34>
   19f38:	ldr	r0, [r4, #204]	; 0xcc
   19f3c:	mov	r3, r4
   19f40:	mov	r2, r4
   19f44:	add	r1, pc, r1
   19f48:	str	r4, [sp, #40]	; 0x28
   19f4c:	str	r4, [sp, #36]	; 0x24
   19f50:	str	r4, [sp, #32]
   19f54:	str	r4, [sp, #28]
   19f58:	str	r4, [sp, #24]
   19f5c:	str	r4, [sp, #20]
   19f60:	str	r4, [sp, #16]
   19f64:	str	r4, [sp, #12]
   19f68:	str	r4, [sp, #8]
   19f6c:	str	r4, [sp, #4]
   19f70:	str	r4, [sp]
   19f74:	bl	13f7c <fprintf@plt>
   19f78:	ldr	r1, [pc, #1548]	; 1a58c <__flatcc_fb_gen_common_c_header@@Base+0xd38>
   19f7c:	mov	r2, r4
   19f80:	add	r1, pc, r1
   19f84:	ldr	r0, [r4, #204]	; 0xcc
   19f88:	bl	13f7c <fprintf@plt>
   19f8c:	ldr	r1, [pc, #1532]	; 1a590 <__flatcc_fb_gen_common_c_header@@Base+0xd3c>
   19f90:	mov	r2, r4
   19f94:	add	r1, pc, r1
   19f98:	ldr	r0, [r4, #204]	; 0xcc
   19f9c:	bl	13f7c <fprintf@plt>
   19fa0:	ldr	r3, [r4, #212]	; 0xd4
   19fa4:	ldr	r3, [r3, #136]	; 0x88
   19fa8:	cmp	r3, #0
   19fac:	beq	1a384 <__flatcc_fb_gen_common_c_header@@Base+0xb30>
   19fb0:	mov	r0, r4
   19fb4:	bl	1abcc <__flatcc_gen_sort@@Base>
   19fb8:	ldr	r1, [pc, #1492]	; 1a594 <__flatcc_fb_gen_common_c_header@@Base+0xd40>
   19fbc:	ldr	r0, [r4, #204]	; 0xcc
   19fc0:	mov	r3, r4
   19fc4:	str	r4, [sp, #8]
   19fc8:	str	r4, [sp, #4]
   19fcc:	str	r4, [sp]
   19fd0:	mov	r2, r4
   19fd4:	add	r1, pc, r1
   19fd8:	bl	13f7c <fprintf@plt>
   19fdc:	ldr	r3, [r4, #212]	; 0xd4
   19fe0:	ldr	r3, [r3, #136]	; 0x88
   19fe4:	cmp	r3, #0
   19fe8:	beq	1a374 <__flatcc_fb_gen_common_c_header@@Base+0xb20>
   19fec:	ldr	r1, [pc, #1444]	; 1a598 <__flatcc_fb_gen_common_c_header@@Base+0xd44>
   19ff0:	mov	r2, r4
   19ff4:	add	r1, pc, r1
   19ff8:	ldr	r0, [r4, #204]	; 0xcc
   19ffc:	bl	13f7c <fprintf@plt>
   1a000:	ldr	r1, [r4, #204]	; 0xcc
   1a004:	mov	r0, #10
   1a008:	bl	13fdc <fputc@plt>
   1a00c:	ldr	r1, [pc, #1416]	; 1a59c <__flatcc_fb_gen_common_c_header@@Base+0xd48>
   1a010:	ldr	r0, [r4, #204]	; 0xcc
   1a014:	mov	r3, r4
   1a018:	mov	r2, r4
   1a01c:	add	r1, pc, r1
   1a020:	str	r4, [sp]
   1a024:	bl	13f7c <fprintf@plt>
   1a028:	ldr	r1, [pc, #1392]	; 1a5a0 <__flatcc_fb_gen_common_c_header@@Base+0xd4c>
   1a02c:	ldr	r0, [r4, #204]	; 0xcc
   1a030:	mov	r3, r4
   1a034:	mov	r2, r4
   1a038:	add	r1, pc, r1
   1a03c:	str	r4, [sp, #24]
   1a040:	str	r4, [sp, #20]
   1a044:	str	r4, [sp, #16]
   1a048:	str	r4, [sp, #12]
   1a04c:	str	r4, [sp, #8]
   1a050:	str	r4, [sp, #4]
   1a054:	str	r4, [sp]
   1a058:	str	r4, [sp, #92]	; 0x5c
   1a05c:	str	r4, [sp, #88]	; 0x58
   1a060:	str	r4, [sp, #84]	; 0x54
   1a064:	str	r4, [sp, #80]	; 0x50
   1a068:	str	r4, [sp, #76]	; 0x4c
   1a06c:	str	r4, [sp, #72]	; 0x48
   1a070:	str	r4, [sp, #68]	; 0x44
   1a074:	str	r4, [sp, #64]	; 0x40
   1a078:	str	r4, [sp, #60]	; 0x3c
   1a07c:	str	r4, [sp, #56]	; 0x38
   1a080:	str	r4, [sp, #52]	; 0x34
   1a084:	str	r4, [sp, #48]	; 0x30
   1a088:	str	r4, [sp, #44]	; 0x2c
   1a08c:	str	r4, [sp, #40]	; 0x28
   1a090:	str	r4, [sp, #36]	; 0x24
   1a094:	str	r4, [sp, #32]
   1a098:	str	r4, [sp, #28]
   1a09c:	bl	13f7c <fprintf@plt>
   1a0a0:	ldr	r1, [pc, #1276]	; 1a5a4 <__flatcc_fb_gen_common_c_header@@Base+0xd50>
   1a0a4:	ldr	r0, [r4, #204]	; 0xcc
   1a0a8:	mov	r3, r4
   1a0ac:	mov	r2, r4
   1a0b0:	add	r1, pc, r1
   1a0b4:	str	r4, [sp, #36]	; 0x24
   1a0b8:	str	r4, [sp, #32]
   1a0bc:	str	r4, [sp, #28]
   1a0c0:	str	r4, [sp, #24]
   1a0c4:	str	r4, [sp, #20]
   1a0c8:	str	r4, [sp, #16]
   1a0cc:	str	r4, [sp, #12]
   1a0d0:	str	r4, [sp, #8]
   1a0d4:	str	r4, [sp, #4]
   1a0d8:	str	r4, [sp]
   1a0dc:	bl	13f7c <fprintf@plt>
   1a0e0:	ldr	r1, [pc, #1216]	; 1a5a8 <__flatcc_fb_gen_common_c_header@@Base+0xd54>
   1a0e4:	ldr	r0, [r4, #204]	; 0xcc
   1a0e8:	mov	r3, r4
   1a0ec:	str	r4, [sp, #228]	; 0xe4
   1a0f0:	str	r4, [sp, #224]	; 0xe0
   1a0f4:	str	r4, [sp, #220]	; 0xdc
   1a0f8:	str	r4, [sp, #216]	; 0xd8
   1a0fc:	str	r4, [sp, #212]	; 0xd4
   1a100:	str	r4, [sp, #208]	; 0xd0
   1a104:	str	r4, [sp, #204]	; 0xcc
   1a108:	str	r4, [sp, #200]	; 0xc8
   1a10c:	str	r4, [sp, #196]	; 0xc4
   1a110:	str	r4, [sp, #192]	; 0xc0
   1a114:	str	r4, [sp, #188]	; 0xbc
   1a118:	str	r4, [sp, #184]	; 0xb8
   1a11c:	str	r4, [sp, #180]	; 0xb4
   1a120:	str	r4, [sp, #176]	; 0xb0
   1a124:	str	r4, [sp, #172]	; 0xac
   1a128:	str	r4, [sp, #168]	; 0xa8
   1a12c:	str	r4, [sp, #164]	; 0xa4
   1a130:	str	r4, [sp, #160]	; 0xa0
   1a134:	str	r4, [sp, #156]	; 0x9c
   1a138:	str	r4, [sp, #152]	; 0x98
   1a13c:	str	r4, [sp, #148]	; 0x94
   1a140:	str	r4, [sp, #144]	; 0x90
   1a144:	str	r4, [sp, #140]	; 0x8c
   1a148:	str	r4, [sp, #136]	; 0x88
   1a14c:	str	r4, [sp, #132]	; 0x84
   1a150:	str	r4, [sp, #128]	; 0x80
   1a154:	str	r4, [sp, #124]	; 0x7c
   1a158:	str	r4, [sp, #120]	; 0x78
   1a15c:	str	r4, [sp, #116]	; 0x74
   1a160:	str	r4, [sp, #112]	; 0x70
   1a164:	str	r4, [sp, #108]	; 0x6c
   1a168:	mov	r2, r4
   1a16c:	str	r4, [sp, #104]	; 0x68
   1a170:	add	r1, pc, r1
   1a174:	str	r4, [sp, #20]
   1a178:	str	r4, [sp, #16]
   1a17c:	str	r4, [sp, #12]
   1a180:	str	r4, [sp, #8]
   1a184:	str	r4, [sp, #4]
   1a188:	str	r4, [sp]
   1a18c:	str	r4, [sp, #100]	; 0x64
   1a190:	str	r4, [sp, #96]	; 0x60
   1a194:	str	r4, [sp, #92]	; 0x5c
   1a198:	str	r4, [sp, #88]	; 0x58
   1a19c:	str	r4, [sp, #84]	; 0x54
   1a1a0:	str	r4, [sp, #80]	; 0x50
   1a1a4:	str	r4, [sp, #76]	; 0x4c
   1a1a8:	str	r4, [sp, #72]	; 0x48
   1a1ac:	str	r4, [sp, #68]	; 0x44
   1a1b0:	str	r4, [sp, #64]	; 0x40
   1a1b4:	str	r4, [sp, #60]	; 0x3c
   1a1b8:	str	r4, [sp, #56]	; 0x38
   1a1bc:	str	r4, [sp, #52]	; 0x34
   1a1c0:	str	r4, [sp, #48]	; 0x30
   1a1c4:	str	r4, [sp, #44]	; 0x2c
   1a1c8:	str	r4, [sp, #40]	; 0x28
   1a1cc:	str	r4, [sp, #36]	; 0x24
   1a1d0:	str	r4, [sp, #32]
   1a1d4:	str	r4, [sp, #28]
   1a1d8:	str	r4, [sp, #24]
   1a1dc:	bl	13f7c <fprintf@plt>
   1a1e0:	ldr	r3, [r4, #212]	; 0xd4
   1a1e4:	ldr	r3, [r3, #136]	; 0x88
   1a1e8:	cmp	r3, #0
   1a1ec:	bne	1a3d8 <__flatcc_fb_gen_common_c_header@@Base+0xb84>
   1a1f0:	ldr	r1, [pc, #948]	; 1a5ac <__flatcc_fb_gen_common_c_header@@Base+0xd58>
   1a1f4:	mov	r3, r4
   1a1f8:	mov	r2, r4
   1a1fc:	add	r1, pc, r1
   1a200:	ldr	r0, [r4, #204]	; 0xcc
   1a204:	bl	13f7c <fprintf@plt>
   1a208:	ldr	r3, [r4, #212]	; 0xd4
   1a20c:	ldr	r3, [r3, #32]
   1a210:	cmp	r3, #0
   1a214:	bne	1a3c0 <__flatcc_fb_gen_common_c_header@@Base+0xb6c>
   1a218:	ldr	r1, [r4, #204]	; 0xcc
   1a21c:	mov	r0, #10
   1a220:	bl	13fdc <fputc@plt>
   1a224:	ldr	r1, [pc, #900]	; 1a5b0 <__flatcc_fb_gen_common_c_header@@Base+0xd5c>
   1a228:	mov	r2, r4
   1a22c:	add	r1, pc, r1
   1a230:	ldr	r0, [r4, #204]	; 0xcc
   1a234:	bl	13f7c <fprintf@plt>
   1a238:	ldr	r1, [pc, #884]	; 1a5b4 <__flatcc_fb_gen_common_c_header@@Base+0xd60>
   1a23c:	ldr	r0, [r4, #204]	; 0xcc
   1a240:	mov	r3, r4
   1a244:	mov	r2, r4
   1a248:	add	r1, pc, r1
   1a24c:	str	r4, [sp, #44]	; 0x2c
   1a250:	str	r4, [sp, #40]	; 0x28
   1a254:	str	r4, [sp, #36]	; 0x24
   1a258:	str	r4, [sp, #32]
   1a25c:	str	r4, [sp, #28]
   1a260:	str	r4, [sp, #24]
   1a264:	str	r4, [sp, #20]
   1a268:	str	r4, [sp, #16]
   1a26c:	str	r4, [sp, #12]
   1a270:	str	r4, [sp, #8]
   1a274:	str	r4, [sp, #4]
   1a278:	str	r4, [sp]
   1a27c:	bl	13f7c <fprintf@plt>
   1a280:	ldr	r1, [pc, #816]	; 1a5b8 <__flatcc_fb_gen_common_c_header@@Base+0xd64>
   1a284:	ldr	r0, [r4, #204]	; 0xcc
   1a288:	mov	r3, r4
   1a28c:	mov	r2, r4
   1a290:	add	r1, pc, r1
   1a294:	str	r4, [sp]
   1a298:	bl	13f7c <fprintf@plt>
   1a29c:	ldr	r1, [pc, #792]	; 1a5bc <__flatcc_fb_gen_common_c_header@@Base+0xd68>
   1a2a0:	ldr	r0, [r4, #204]	; 0xcc
   1a2a4:	mov	r3, r4
   1a2a8:	mov	r2, r4
   1a2ac:	add	r1, pc, r1
   1a2b0:	str	r4, [sp, #12]
   1a2b4:	str	r4, [sp, #8]
   1a2b8:	str	r4, [sp, #4]
   1a2bc:	str	r4, [sp]
   1a2c0:	bl	13f7c <fprintf@plt>
   1a2c4:	ldr	r1, [pc, #756]	; 1a5c0 <__flatcc_fb_gen_common_c_header@@Base+0xd6c>
   1a2c8:	ldr	r0, [r4, #204]	; 0xcc
   1a2cc:	mov	r3, r4
   1a2d0:	mov	r2, r4
   1a2d4:	add	r1, pc, r1
   1a2d8:	str	r4, [sp, #4]
   1a2dc:	str	r4, [sp]
   1a2e0:	bl	13f7c <fprintf@plt>
   1a2e4:	ldr	r1, [pc, #728]	; 1a5c4 <__flatcc_fb_gen_common_c_header@@Base+0xd70>
   1a2e8:	ldr	r0, [r4, #204]	; 0xcc
   1a2ec:	mov	r3, r4
   1a2f0:	mov	r2, r4
   1a2f4:	add	r1, pc, r1
   1a2f8:	str	r4, [sp, #28]
   1a2fc:	str	r4, [sp, #24]
   1a300:	str	r4, [sp, #20]
   1a304:	str	r4, [sp, #16]
   1a308:	str	r4, [sp, #12]
   1a30c:	str	r4, [sp, #8]
   1a310:	str	r4, [sp, #4]
   1a314:	str	r4, [sp]
   1a318:	bl	13f7c <fprintf@plt>
   1a31c:	ldr	r1, [r4, #204]	; 0xcc
   1a320:	mov	r0, #10
   1a324:	bl	13fdc <fputc@plt>
   1a328:	ldr	r3, [r4, #212]	; 0xd4
   1a32c:	ldr	r0, [r4, #204]	; 0xcc
   1a330:	ldr	r3, [r3, #140]	; 0x8c
   1a334:	cmp	r3, #0
   1a338:	beq	1a358 <__flatcc_fb_gen_common_c_header@@Base+0xb04>
   1a33c:	mov	r3, r0
   1a340:	ldr	r0, [pc, #640]	; 1a5c8 <__flatcc_fb_gen_common_c_header@@Base+0xd74>
   1a344:	mov	r2, #36	; 0x24
   1a348:	mov	r1, #1
   1a34c:	add	r0, pc, r0
   1a350:	bl	13f10 <fwrite@plt>
   1a354:	ldr	r0, [r4, #204]	; 0xcc
   1a358:	ldr	r1, [pc, #620]	; 1a5cc <__flatcc_fb_gen_common_c_header@@Base+0xd78>
   1a35c:	mov	r2, r5
   1a360:	add	r1, pc, r1
   1a364:	bl	13f7c <fprintf@plt>
   1a368:	mov	r0, #0
   1a36c:	add	sp, sp, #236	; 0xec
   1a370:	pop	{r4, r5, pc}
   1a374:	ldr	r1, [r4, #204]	; 0xcc
   1a378:	mov	r0, #10
   1a37c:	bl	13fdc <fputc@plt>
   1a380:	b	1a000 <__flatcc_fb_gen_common_c_header@@Base+0x7ac>
   1a384:	ldr	r0, [pc, #580]	; 1a5d0 <__flatcc_fb_gen_common_c_header@@Base+0xd7c>
   1a388:	ldr	r3, [r4, #204]	; 0xcc
   1a38c:	mov	r2, #20
   1a390:	mov	r1, #1
   1a394:	add	r0, pc, r0
   1a398:	bl	13f10 <fwrite@plt>
   1a39c:	b	19fb8 <__flatcc_fb_gen_common_c_header@@Base+0x764>
   1a3a0:	ldr	r1, [r4, #204]	; 0xcc
   1a3a4:	mov	r0, #10
   1a3a8:	bl	13fdc <fputc@plt>
   1a3ac:	b	19a94 <__flatcc_fb_gen_common_c_header@@Base+0x240>
   1a3b0:	ldr	r1, [r4, #204]	; 0xcc
   1a3b4:	mov	r0, #10
   1a3b8:	bl	13fdc <fputc@plt>
   1a3bc:	b	19998 <__flatcc_fb_gen_common_c_header@@Base+0x144>
   1a3c0:	ldr	r1, [pc, #524]	; 1a5d4 <__flatcc_fb_gen_common_c_header@@Base+0xd80>
   1a3c4:	mov	r2, r4
   1a3c8:	add	r1, pc, r1
   1a3cc:	ldr	r0, [r4, #204]	; 0xcc
   1a3d0:	bl	13f7c <fprintf@plt>
   1a3d4:	b	1a224 <__flatcc_fb_gen_common_c_header@@Base+0x9d0>
   1a3d8:	ldr	r1, [pc, #504]	; 1a5d8 <__flatcc_fb_gen_common_c_header@@Base+0xd84>
   1a3dc:	mov	r2, r4
   1a3e0:	add	r1, pc, r1
   1a3e4:	ldr	r0, [r4, #204]	; 0xcc
   1a3e8:	bl	13f7c <fprintf@plt>
   1a3ec:	b	1a1f0 <__flatcc_fb_gen_common_c_header@@Base+0x99c>
   1a3f0:	ldr	r1, [pc, #484]	; 1a5dc <__flatcc_fb_gen_common_c_header@@Base+0xd88>
   1a3f4:	ldr	r0, [r4, #204]	; 0xcc
   1a3f8:	mov	r3, r4
   1a3fc:	mov	r2, r4
   1a400:	str	r4, [sp, #8]
   1a404:	str	r4, [sp, #4]
   1a408:	str	r4, [sp]
   1a40c:	add	r1, pc, r1
   1a410:	bl	13f7c <fprintf@plt>
   1a414:	ldr	r2, [pc, #452]	; 1a5e0 <__flatcc_fb_gen_common_c_header@@Base+0xd8c>
   1a418:	ldr	r1, [pc, #452]	; 1a5e4 <__flatcc_fb_gen_common_c_header@@Base+0xd90>
   1a41c:	ldr	r0, [r4, #204]	; 0xcc
   1a420:	mov	r3, r4
   1a424:	str	r4, [sp, #4]
   1a428:	str	r4, [sp]
   1a42c:	add	r2, pc, r2
   1a430:	add	r1, pc, r1
   1a434:	bl	13f7c <fprintf@plt>
   1a438:	ldr	r1, [pc, #424]	; 1a5e8 <__flatcc_fb_gen_common_c_header@@Base+0xd94>
   1a43c:	ldr	r0, [r4, #204]	; 0xcc
   1a440:	mov	r3, r4
   1a444:	mov	r2, r4
   1a448:	str	r4, [sp, #8]
   1a44c:	str	r4, [sp, #4]
   1a450:	str	r4, [sp]
   1a454:	add	r1, pc, r1
   1a458:	bl	13f7c <fprintf@plt>
   1a45c:	ldr	r1, [pc, #392]	; 1a5ec <__flatcc_fb_gen_common_c_header@@Base+0xd98>
   1a460:	mov	r3, r5
   1a464:	mov	r2, r5
   1a468:	add	r1, pc, r1
   1a46c:	ldr	r0, [r4, #204]	; 0xcc
   1a470:	bl	13f7c <fprintf@plt>
   1a474:	b	198f8 <__flatcc_fb_gen_common_c_header@@Base+0xa4>
   1a478:	ldr	r0, [pc, #368]	; 1a5f0 <__flatcc_fb_gen_common_c_header@@Base+0xd9c>
   1a47c:	mov	r2, #36	; 0x24
   1a480:	mov	r1, #1
   1a484:	add	r0, pc, r0
   1a488:	bl	13f10 <fwrite@plt>
   1a48c:	ldr	r3, [r4, #204]	; 0xcc
   1a490:	b	198cc <__flatcc_fb_gen_common_c_header@@Base+0x78>
   1a494:	ldr	r0, [pc, #344]	; 1a5f4 <__flatcc_fb_gen_common_c_header@@Base+0xda0>
   1a498:	ldr	r3, [r4, #204]	; 0xcc
   1a49c:	mov	r2, #135	; 0x87
   1a4a0:	mov	r1, #1
   1a4a4:	add	r0, pc, r0
   1a4a8:	bl	13f10 <fwrite@plt>
   1a4ac:	ldr	r3, [r4, #212]	; 0xd4
   1a4b0:	b	198bc <__flatcc_fb_gen_common_c_header@@Base+0x68>
   1a4b4:			; <UNDEFINED> instruction: 0x000274b4
   1a4b8:	ldrdeq	r7, [r2], -r0
   1a4bc:	andeq	r7, r2, ip, lsl #10
   1a4c0:	andeq	r7, r2, r0, asr #11
   1a4c4:	ldrdeq	r7, [r2], -ip
   1a4c8:			; <UNDEFINED> instruction: 0x00027ab0
   1a4cc:	andeq	r7, r2, r4, lsr #22
   1a4d0:	andeq	r7, r2, r0, ror ip
   1a4d4:	andeq	r7, r2, r4, lsr #25
   1a4d8:	andeq	r7, r2, ip, lsr #27
   1a4dc:	andeq	r7, r2, r4, asr #27
   1a4e0:	andeq	r7, r2, ip, ror lr
   1a4e4:	andeq	r8, r2, r4
   1a4e8:	andeq	r8, r2, r0, lsl #1
   1a4ec:	andeq	r8, r2, r0, asr #2
   1a4f0:	andeq	r8, r2, r0, lsl #4
   1a4f4:			; <UNDEFINED> instruction: 0x000282b0
   1a4f8:	andeq	r8, r2, r8, ror r3
   1a4fc:	andeq	r8, r2, r8, lsl #7
   1a500:	andeq	r8, r2, ip, lsl #8
   1a504:	andeq	r8, r2, r4, lsr r4
   1a508:	andeq	r8, r2, r8, lsr #9
   1a50c:	andeq	r8, r2, r0, lsl #10
   1a510:	andeq	r8, r2, r4, lsl #12
   1a514:	andeq	r8, r2, r4, ror #12
   1a518:	andeq	r8, r2, r8, asr #13
   1a51c:	andeq	r8, r2, ip, lsl #14
   1a520:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1a524:	andeq	r8, r2, r0, lsl #16
   1a528:	andeq	r8, r2, r8, ror #16
   1a52c:	andeq	r8, r2, r4, asr #19
   1a530:	andeq	r8, r2, r8, asr sl
   1a534:	ldrdeq	r8, [r2], -r4
   1a538:	andeq	r8, r2, r4, lsr fp
   1a53c:	strdeq	r8, [r2], -r4
   1a540:	andeq	r9, r2, r4, ror r0
   1a544:	andeq	r9, r2, r4, ror #1
   1a548:	andeq	r9, r2, r0, asr #2
   1a54c:	andeq	r9, r2, r8, lsl #6
   1a550:	muleq	r2, r4, r3
   1a554:	andeq	r9, r2, r8, asr #10
   1a558:	andeq	r9, r2, r8, asr #14
   1a55c:	andeq	r9, r2, r8, ror #16
   1a560:	andeq	r9, r2, ip, lsl r9
   1a564:			; <UNDEFINED> instruction: 0x000299b8
   1a568:	andeq	r9, r2, ip, asr fp
   1a56c:	strdeq	r9, [r2], -r4
   1a570:	andeq	r9, r2, ip, lsl #26
   1a574:	andeq	r9, r2, r4, asr #28
   1a578:	strdeq	r9, [r2], -ip
   1a57c:	andeq	sl, r2, ip, lsr r0
   1a580:	andeq	sl, r2, r4, lsl #3
   1a584:			; <UNDEFINED> instruction: 0x0002a4b0
   1a588:	muleq	r2, r4, r7
   1a58c:	andeq	sl, r2, r4, lsr #28
   1a590:	andeq	fp, r2, r0, rrx
   1a594:	strdeq	fp, [r2], -ip
   1a598:	andeq	fp, r2, r0, asr #11
   1a59c:			; <UNDEFINED> instruction: 0x0002b5b8
   1a5a0:	andeq	fp, r2, ip, lsl r6
   1a5a4:			; <UNDEFINED> instruction: 0x0002b7b8
   1a5a8:	andeq	fp, r2, r4, asr #16
   1a5ac:	muleq	r2, r0, lr
   1a5b0:	strdeq	fp, [r2], -ip
   1a5b4:	andeq	fp, r2, r0, ror #30
   1a5b8:	andeq	ip, r2, r4, ror #4
   1a5bc:	andeq	ip, r2, r0, lsl #6
   1a5c0:	andeq	ip, r2, r0, lsr #9
   1a5c4:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   1a5c8:	andeq	ip, r2, r8, lsl #19
   1a5cc:	muleq	r2, ip, r9
   1a5d0:	andeq	fp, r2, r4, lsr #2
   1a5d4:	andeq	r7, r2, r0, ror r3
   1a5d8:	muleq	r2, r0, ip
   1a5dc:	andeq	r6, r2, r8, asr #21
   1a5e0:	muleq	r2, r4, sl
   1a5e4:	andeq	r6, r2, r4, ror fp
   1a5e8:	andeq	r6, r2, r8, lsr #25
   1a5ec:	strdeq	r6, [r2], -ip
   1a5f0:	andeq	r6, r2, ip, ror #19
   1a5f4:	andeq	r6, r2, r4, asr #18

0001a5f8 <__flatcc_fb_gen_c_reader@@Base>:
   1a5f8:	ldr	r3, [r0, #208]	; 0xd0
   1a5fc:	ldr	r2, [r0, #212]	; 0xd4
   1a600:	ldr	r1, [pc, #1352]	; 1ab50 <__flatcc_fb_gen_c_reader@@Base+0x558>
   1a604:	ldr	r3, [r3, #164]	; 0xa4
   1a608:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a60c:	add	r1, pc, r1
   1a610:	sub	sp, sp, #260	; 0x104
   1a614:	ldr	r5, [r2, #132]	; 0x84
   1a618:	mov	r4, r0
   1a61c:	mov	r2, r3
   1a620:	ldr	r0, [r0, #204]	; 0xcc
   1a624:	bl	13f7c <fprintf@plt>
   1a628:	ldr	r0, [pc, #1316]	; 1ab54 <__flatcc_fb_gen_c_reader@@Base+0x55c>
   1a62c:	ldr	r3, [r4, #204]	; 0xcc
   1a630:	mov	r2, #81	; 0x51
   1a634:	mov	r1, #1
   1a638:	add	r0, pc, r0
   1a63c:	bl	13f10 <fwrite@plt>
   1a640:	ldr	r3, [pc, #1296]	; 1ab58 <__flatcc_fb_gen_c_reader@@Base+0x560>
   1a644:	cmp	r5, #0
   1a648:	add	r3, pc, r3
   1a64c:	str	r3, [sp, #12]
   1a650:	add	r5, r4, #102	; 0x66
   1a654:	bne	1aaec <__flatcc_fb_gen_c_reader@@Base+0x4f4>
   1a658:	ldr	r1, [pc, #1276]	; 1ab5c <__flatcc_fb_gen_c_reader@@Base+0x564>
   1a65c:	mov	r3, r4
   1a660:	mov	r2, r5
   1a664:	add	r1, pc, r1
   1a668:	ldr	r0, [r4, #204]	; 0xcc
   1a66c:	bl	13f7c <fprintf@plt>
   1a670:	ldr	r2, [pc, #1256]	; 1ab60 <__flatcc_fb_gen_c_reader@@Base+0x568>
   1a674:	ldr	r1, [pc, #1256]	; 1ab64 <__flatcc_fb_gen_c_reader@@Base+0x56c>
   1a678:	add	r2, pc, r2
   1a67c:	add	r1, pc, r1
   1a680:	mov	r0, r4
   1a684:	bl	1523c <__flatcc_fb_gen_c_includes@@Base>
   1a688:	ldr	r0, [pc, #1240]	; 1ab68 <__flatcc_fb_gen_c_reader@@Base+0x570>
   1a68c:	ldr	r3, [r4, #204]	; 0xcc
   1a690:	mov	r2, #39	; 0x27
   1a694:	mov	r1, #1
   1a698:	add	r0, pc, r0
   1a69c:	bl	13f10 <fwrite@plt>
   1a6a0:	ldr	r0, [pc, #1220]	; 1ab6c <__flatcc_fb_gen_c_reader@@Base+0x574>
   1a6a4:	ldr	r3, [r4, #204]	; 0xcc
   1a6a8:	mov	r2, #58	; 0x3a
   1a6ac:	mov	r1, #1
   1a6b0:	add	r0, pc, r0
   1a6b4:	bl	13f10 <fwrite@plt>
   1a6b8:	ldr	r3, [r4, #212]	; 0xd4
   1a6bc:	ldr	r0, [r4, #204]	; 0xcc
   1a6c0:	ldr	r3, [r3, #140]	; 0x8c
   1a6c4:	cmp	r3, #0
   1a6c8:	bne	1aa60 <__flatcc_fb_gen_c_reader@@Base+0x468>
   1a6cc:	ldr	r3, [r4, #208]	; 0xd0
   1a6d0:	ldrh	r2, [r3, #16]
   1a6d4:	cmp	r2, #2
   1a6d8:	beq	1aa8c <__flatcc_fb_gen_c_reader@@Base+0x494>
   1a6dc:	ldr	r1, [pc, #1164]	; 1ab70 <__flatcc_fb_gen_c_reader@@Base+0x578>
   1a6e0:	mov	r3, r4
   1a6e4:	mov	r2, r4
   1a6e8:	add	r1, pc, r1
   1a6ec:	bl	13f7c <fprintf@plt>
   1a6f0:	ldr	r3, [r4, #208]	; 0xd0
   1a6f4:	ldrh	r2, [r3, #32]
   1a6f8:	cmp	r2, #2
   1a6fc:	beq	1aac0 <__flatcc_fb_gen_c_reader@@Base+0x4c8>
   1a700:	ldr	r2, [r4, #212]	; 0xd4
   1a704:	ldr	r1, [pc, #1128]	; 1ab74 <__flatcc_fb_gen_c_reader@@Base+0x57c>
   1a708:	ldr	r0, [r4, #204]	; 0xcc
   1a70c:	ldr	r2, [r2, #104]	; 0x68
   1a710:	mov	r3, r4
   1a714:	str	r2, [sp]
   1a718:	add	r1, pc, r1
   1a71c:	mov	r2, r4
   1a720:	bl	13f7c <fprintf@plt>
   1a724:	ldr	r1, [r4, #204]	; 0xcc
   1a728:	mov	r0, #10
   1a72c:	bl	13fdc <fputc@plt>
   1a730:	ldr	r3, [r4, #208]	; 0xd0
   1a734:	ldr	r5, [r3, #44]	; 0x2c
   1a738:	cmp	r5, #0
   1a73c:	beq	1a758 <__flatcc_fb_gen_c_reader@@Base+0x160>
   1a740:	mov	r1, r5
   1a744:	mov	r0, r4
   1a748:	bl	157b0 <__flatcc_fb_codegen_c@@Base+0x1ec>
   1a74c:	ldr	r5, [r5, #120]	; 0x78
   1a750:	cmp	r5, #0
   1a754:	bne	1a740 <__flatcc_fb_gen_c_reader@@Base+0x148>
   1a758:	ldr	r1, [r4, #204]	; 0xcc
   1a75c:	mov	r0, #10
   1a760:	bl	13fdc <fputc@plt>
   1a764:	ldr	r3, [r4, #208]	; 0xd0
   1a768:	ldr	r5, [r3, #40]	; 0x28
   1a76c:	cmp	r5, #0
   1a770:	bne	1a784 <__flatcc_fb_gen_c_reader@@Base+0x18c>
   1a774:	b	1a8c0 <__flatcc_fb_gen_c_reader@@Base+0x2c8>
   1a778:	ldr	r5, [r5]
   1a77c:	cmp	r5, #0
   1a780:	beq	1a7a8 <__flatcc_fb_gen_c_reader@@Base+0x1b0>
   1a784:	ldrh	r3, [r5, #8]
   1a788:	cmp	r3, #0
   1a78c:	bne	1a778 <__flatcc_fb_gen_c_reader@@Base+0x180>
   1a790:	mov	r1, r5
   1a794:	mov	r0, r4
   1a798:	bl	157b0 <__flatcc_fb_codegen_c@@Base+0x1ec>
   1a79c:	ldr	r5, [r5]
   1a7a0:	cmp	r5, #0
   1a7a4:	bne	1a784 <__flatcc_fb_gen_c_reader@@Base+0x18c>
   1a7a8:	ldr	r3, [r4, #208]	; 0xd0
   1a7ac:	ldr	r7, [r3, #40]	; 0x28
   1a7b0:	cmp	r7, #0
   1a7b4:	beq	1a8c0 <__flatcc_fb_gen_c_reader@@Base+0x2c8>
   1a7b8:	ldr	fp, [pc, #952]	; 1ab78 <__flatcc_fb_gen_c_reader@@Base+0x580>
   1a7bc:	ldr	sl, [pc, #952]	; 1ab7c <__flatcc_fb_gen_c_reader@@Base+0x584>
   1a7c0:	ldr	r9, [pc, #952]	; 1ab80 <__flatcc_fb_gen_c_reader@@Base+0x588>
   1a7c4:	add	fp, pc, fp
   1a7c8:	add	sl, pc, sl
   1a7cc:	add	r9, pc, r9
   1a7d0:	add	r8, sp, #36	; 0x24
   1a7d4:	b	1a7e4 <__flatcc_fb_gen_c_reader@@Base+0x1ec>
   1a7d8:	ldr	r7, [r7]
   1a7dc:	cmp	r7, #0
   1a7e0:	beq	1a8c0 <__flatcc_fb_gen_c_reader@@Base+0x2c8>
   1a7e4:	ldrh	r3, [r7, #8]
   1a7e8:	cmp	r3, #1
   1a7ec:	bhi	1a7d8 <__flatcc_fb_gen_c_reader@@Base+0x1e0>
   1a7f0:	mov	r2, #220	; 0xdc
   1a7f4:	mov	r1, r5
   1a7f8:	mov	r0, r8
   1a7fc:	bl	13f94 <memset@plt>
   1a800:	mov	r2, r8
   1a804:	mov	r1, r7
   1a808:	ldr	r0, [r7, #12]
   1a80c:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   1a810:	ldr	r6, [r7, #88]	; 0x58
   1a814:	ldr	r0, [r4, #204]	; 0xcc
   1a818:	mov	r3, r8
   1a81c:	mov	r2, r8
   1a820:	mov	r1, fp
   1a824:	str	r4, [sp]
   1a828:	bl	13f7c <fprintf@plt>
   1a82c:	ldr	r0, [r4, #204]	; 0xcc
   1a830:	mov	r2, r8
   1a834:	str	r6, [sp]
   1a838:	mov	r3, r4
   1a83c:	mov	r1, sl
   1a840:	bl	13f7c <fprintf@plt>
   1a844:	add	r2, sp, #20
   1a848:	mov	ip, #92	; 0x5c
   1a84c:	mov	r0, #120	; 0x78
   1a850:	lsr	r1, r6, #4
   1a854:	and	r1, r1, #15
   1a858:	cmp	r1, #9
   1a85c:	and	r3, r6, #15
   1a860:	movls	lr, #48	; 0x30
   1a864:	movhi	lr, #87	; 0x57
   1a868:	cmp	r3, #9
   1a86c:	add	r1, r1, lr
   1a870:	movls	lr, #48	; 0x30
   1a874:	movhi	lr, #87	; 0x57
   1a878:	add	r3, r3, lr
   1a87c:	strb	ip, [r2, #-4]
   1a880:	strb	r0, [r2, #-3]
   1a884:	strb	r1, [r2, #-2]
   1a888:	strb	r3, [r2, #-1]
   1a88c:	add	r2, r2, #4
   1a890:	cmp	r2, r8
   1a894:	lsr	r6, r6, #8
   1a898:	bne	1a850 <__flatcc_fb_gen_c_reader@@Base+0x258>
   1a89c:	add	r3, sp, #16
   1a8a0:	mov	r2, r8
   1a8a4:	mov	r1, r9
   1a8a8:	ldr	r0, [r4, #204]	; 0xcc
   1a8ac:	strb	r5, [sp, #32]
   1a8b0:	bl	13f7c <fprintf@plt>
   1a8b4:	ldr	r7, [r7]
   1a8b8:	cmp	r7, #0
   1a8bc:	bne	1a7e4 <__flatcc_fb_gen_c_reader@@Base+0x1ec>
   1a8c0:	ldr	r1, [r4, #204]	; 0xcc
   1a8c4:	mov	r0, #10
   1a8c8:	bl	13fdc <fputc@plt>
   1a8cc:	ldr	r3, [r4, #208]	; 0xd0
   1a8d0:	ldr	r5, [r3, #40]	; 0x28
   1a8d4:	cmp	r5, #0
   1a8d8:	bne	1a8ec <__flatcc_fb_gen_c_reader@@Base+0x2f4>
   1a8dc:	b	1a910 <__flatcc_fb_gen_c_reader@@Base+0x318>
   1a8e0:	ldr	r5, [r5]
   1a8e4:	cmp	r5, #0
   1a8e8:	beq	1a910 <__flatcc_fb_gen_c_reader@@Base+0x318>
   1a8ec:	ldrh	r3, [r5, #8]
   1a8f0:	cmp	r3, #3
   1a8f4:	bne	1a8e0 <__flatcc_fb_gen_c_reader@@Base+0x2e8>
   1a8f8:	mov	r1, r5
   1a8fc:	mov	r0, r4
   1a900:	bl	15944 <__flatcc_fb_codegen_c@@Base+0x380>
   1a904:	ldr	r5, [r5]
   1a908:	cmp	r5, #0
   1a90c:	bne	1a8ec <__flatcc_fb_gen_c_reader@@Base+0x2f4>
   1a910:	ldr	r1, [r4, #204]	; 0xcc
   1a914:	mov	r0, #10
   1a918:	bl	13fdc <fputc@plt>
   1a91c:	ldr	r3, [r4, #208]	; 0xd0
   1a920:	ldr	r5, [r3, #44]	; 0x2c
   1a924:	cmp	r5, #0
   1a928:	beq	1a948 <__flatcc_fb_gen_c_reader@@Base+0x350>
   1a92c:	mov	r1, r5
   1a930:	mov	r0, r4
   1a934:	bl	16784 <__flatcc_fb_codegen_c@@Base+0x11c0>
   1a938:	ldr	r5, [r5, #120]	; 0x78
   1a93c:	cmp	r5, #0
   1a940:	bne	1a92c <__flatcc_fb_gen_c_reader@@Base+0x334>
   1a944:	ldr	r3, [r4, #208]	; 0xd0
   1a948:	ldr	r5, [r3, #40]	; 0x28
   1a94c:	cmp	r5, #0
   1a950:	beq	1a990 <__flatcc_fb_gen_c_reader@@Base+0x398>
   1a954:	ldrh	r3, [r5, #8]
   1a958:	cmp	r3, #4
   1a95c:	addls	pc, pc, r3, lsl #2
   1a960:	b	1aa08 <__flatcc_fb_gen_c_reader@@Base+0x410>
   1a964:	b	1a9ec <__flatcc_fb_gen_c_reader@@Base+0x3f4>
   1a968:	b	1a984 <__flatcc_fb_gen_c_reader@@Base+0x38c>
   1a96c:	b	1a984 <__flatcc_fb_gen_c_reader@@Base+0x38c>
   1a970:	b	1a984 <__flatcc_fb_gen_c_reader@@Base+0x38c>
   1a974:	b	1a978 <__flatcc_fb_gen_c_reader@@Base+0x380>
   1a978:	mov	r1, r5
   1a97c:	mov	r0, r4
   1a980:	bl	15944 <__flatcc_fb_codegen_c@@Base+0x380>
   1a984:	ldr	r5, [r5]
   1a988:	cmp	r5, #0
   1a98c:	bne	1a954 <__flatcc_fb_gen_c_reader@@Base+0x35c>
   1a990:	ldr	r1, [r4, #204]	; 0xcc
   1a994:	mov	r0, #10
   1a998:	bl	13fdc <fputc@plt>
   1a99c:	ldr	r3, [r4, #212]	; 0xd4
   1a9a0:	ldr	r0, [r4, #204]	; 0xcc
   1a9a4:	ldr	r3, [r3, #140]	; 0x8c
   1a9a8:	cmp	r3, #0
   1a9ac:	beq	1a9cc <__flatcc_fb_gen_c_reader@@Base+0x3d4>
   1a9b0:	mov	r3, r0
   1a9b4:	ldr	r0, [pc, #456]	; 1ab84 <__flatcc_fb_gen_c_reader@@Base+0x58c>
   1a9b8:	mov	r2, #36	; 0x24
   1a9bc:	mov	r1, #1
   1a9c0:	add	r0, pc, r0
   1a9c4:	bl	13f10 <fwrite@plt>
   1a9c8:	ldr	r0, [r4, #204]	; 0xcc
   1a9cc:	ldr	r3, [r4, #208]	; 0xd0
   1a9d0:	ldr	r1, [pc, #432]	; 1ab88 <__flatcc_fb_gen_c_reader@@Base+0x590>
   1a9d4:	ldr	r2, [r3, #164]	; 0xa4
   1a9d8:	add	r1, pc, r1
   1a9dc:	bl	13f7c <fprintf@plt>
   1a9e0:	mov	r0, #0
   1a9e4:	add	sp, sp, #260	; 0x104
   1a9e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a9ec:	mov	r1, r5
   1a9f0:	mov	r0, r4
   1a9f4:	bl	177f4 <__flatcc_fb_codegen_c@@Base+0x2230>
   1a9f8:	ldr	r5, [r5]
   1a9fc:	cmp	r5, #0
   1aa00:	bne	1a954 <__flatcc_fb_gen_c_reader@@Base+0x35c>
   1aa04:	b	1a990 <__flatcc_fb_gen_c_reader@@Base+0x398>
   1aa08:	ldr	r2, [pc, #380]	; 1ab8c <__flatcc_fb_gen_c_reader@@Base+0x594>
   1aa0c:	ldr	r1, [sp, #12]
   1aa10:	ldr	r3, [pc, #376]	; 1ab90 <__flatcc_fb_gen_c_reader@@Base+0x598>
   1aa14:	ldr	r4, [pc, #376]	; 1ab94 <__flatcc_fb_gen_c_reader@@Base+0x59c>
   1aa18:	ldr	r1, [r1, r2]
   1aa1c:	add	r3, pc, r3
   1aa20:	str	r3, [sp]
   1aa24:	ldr	r0, [r1]
   1aa28:	ldr	r1, [pc, #360]	; 1ab98 <__flatcc_fb_gen_c_reader@@Base+0x5a0>
   1aa2c:	add	r4, pc, r4
   1aa30:	mov	r2, r4
   1aa34:	ldr	r3, [pc, #352]	; 1ab9c <__flatcc_fb_gen_c_reader@@Base+0x5a4>
   1aa38:	add	r1, pc, r1
   1aa3c:	bl	13f7c <fprintf@plt>
   1aa40:	ldr	r3, [pc, #344]	; 1aba0 <__flatcc_fb_gen_c_reader@@Base+0x5a8>
   1aa44:	ldr	r0, [pc, #344]	; 1aba4 <__flatcc_fb_gen_c_reader@@Base+0x5ac>
   1aa48:	add	r3, pc, r3
   1aa4c:	mov	r1, r4
   1aa50:	add	r3, r3, #164	; 0xa4
   1aa54:	ldr	r2, [pc, #320]	; 1ab9c <__flatcc_fb_gen_c_reader@@Base+0x5a4>
   1aa58:	add	r0, pc, r0
   1aa5c:	bl	14030 <__assert_fail@plt>
   1aa60:	mov	r3, r0
   1aa64:	ldr	r0, [pc, #316]	; 1aba8 <__flatcc_fb_gen_c_reader@@Base+0x5b0>
   1aa68:	mov	r2, #36	; 0x24
   1aa6c:	mov	r1, #1
   1aa70:	add	r0, pc, r0
   1aa74:	bl	13f10 <fwrite@plt>
   1aa78:	ldr	r3, [r4, #208]	; 0xd0
   1aa7c:	ldr	r0, [r4, #204]	; 0xcc
   1aa80:	ldrh	r2, [r3, #16]
   1aa84:	cmp	r2, #2
   1aa88:	bne	1a6dc <__flatcc_fb_gen_c_reader@@Base+0xe4>
   1aa8c:	ldr	r2, [r3, #8]
   1aa90:	ldr	r1, [pc, #276]	; 1abac <__flatcc_fb_gen_c_reader@@Base+0x5b4>
   1aa94:	str	r2, [sp, #4]
   1aa98:	ldr	r2, [r3, #12]
   1aa9c:	add	r1, pc, r1
   1aaa0:	mov	r3, r4
   1aaa4:	str	r2, [sp]
   1aaa8:	mov	r2, r4
   1aaac:	bl	13f7c <fprintf@plt>
   1aab0:	ldr	r3, [r4, #208]	; 0xd0
   1aab4:	ldrh	r2, [r3, #32]
   1aab8:	cmp	r2, #2
   1aabc:	bne	1a700 <__flatcc_fb_gen_c_reader@@Base+0x108>
   1aac0:	ldr	r2, [r3, #24]
   1aac4:	ldr	r0, [r4, #204]	; 0xcc
   1aac8:	ldr	r1, [pc, #224]	; 1abb0 <__flatcc_fb_gen_c_reader@@Base+0x5b8>
   1aacc:	str	r2, [sp, #4]
   1aad0:	ldr	r3, [r3, #28]
   1aad4:	mov	r2, r4
   1aad8:	str	r3, [sp]
   1aadc:	add	r1, pc, r1
   1aae0:	mov	r3, r4
   1aae4:	bl	13f7c <fprintf@plt>
   1aae8:	b	1a724 <__flatcc_fb_gen_c_reader@@Base+0x12c>
   1aaec:	ldr	r0, [pc, #192]	; 1abb4 <__flatcc_fb_gen_c_reader@@Base+0x5bc>
   1aaf0:	ldr	r3, [r4, #204]	; 0xcc
   1aaf4:	ldr	r2, [pc, #188]	; 1abb8 <__flatcc_fb_gen_c_reader@@Base+0x5c0>
   1aaf8:	mov	r1, #1
   1aafc:	add	r0, pc, r0
   1ab00:	bl	13f10 <fwrite@plt>
   1ab04:	ldr	r1, [pc, #176]	; 1abbc <__flatcc_fb_gen_c_reader@@Base+0x5c4>
   1ab08:	mov	r3, r4
   1ab0c:	mov	r2, r5
   1ab10:	add	r1, pc, r1
   1ab14:	ldr	r0, [r4, #204]	; 0xcc
   1ab18:	bl	13f7c <fprintf@plt>
   1ab1c:	ldr	r2, [pc, #156]	; 1abc0 <__flatcc_fb_gen_c_reader@@Base+0x5c8>
   1ab20:	ldr	r1, [pc, #156]	; 1abc4 <__flatcc_fb_gen_c_reader@@Base+0x5cc>
   1ab24:	mov	r0, r4
   1ab28:	add	r2, pc, r2
   1ab2c:	add	r1, pc, r1
   1ab30:	bl	1523c <__flatcc_fb_gen_c_includes@@Base>
   1ab34:	ldr	r0, [pc, #140]	; 1abc8 <__flatcc_fb_gen_c_reader@@Base+0x5d0>
   1ab38:	ldr	r3, [r4, #204]	; 0xcc
   1ab3c:	mov	r2, #39	; 0x27
   1ab40:	mov	r1, #1
   1ab44:	add	r0, pc, r0
   1ab48:	bl	13f10 <fwrite@plt>
   1ab4c:	b	1a6b8 <__flatcc_fb_gen_c_reader@@Base+0xc0>
   1ab50:	andeq	ip, r2, ip, lsl #14
   1ab54:	andeq	r6, r2, r4, lsr #14
   1ab58:			; <UNDEFINED> instruction: 0x0004f9b0
   1ab5c:	muleq	r2, ip, r8
   1ab60:	andeq	ip, r2, r8, asr #17
   1ab64:	andeq	r4, r2, r8, asr #26
   1ab68:			; <UNDEFINED> instruction: 0x0002c8b4
   1ab6c:	andeq	ip, r2, r0, ror sl
   1ab70:	andeq	ip, r2, r0, asr #17
   1ab74:	strdeq	ip, [r2], -r4
   1ab78:	andeq	ip, r2, r0, lsl #17
   1ab7c:	andeq	ip, r2, r0, asr #17
   1ab80:	andeq	ip, r2, r8, ror #17
   1ab84:	andeq	ip, r2, r4, lsl r3
   1ab88:	andeq	ip, r2, ip, lsr #14
   1ab8c:	muleq	r0, ip, r0
   1ab90:			; <UNDEFINED> instruction: 0x0002c6bc
   1ab94:			; <UNDEFINED> instruction: 0x00024cbc
   1ab98:	andeq	r5, r2, ip, lsr #32
   1ab9c:	andeq	r0, r0, r8, lsl #13
   1aba0:	andeq	r4, r2, r0, ror #23
   1aba4:	andeq	sp, r2, ip, lsl #8
   1aba8:	andeq	r6, r2, r0, lsl #8
   1abac:	ldrdeq	ip, [r2], -r8
   1abb0:	andeq	ip, r2, r0, lsl #10
   1abb4:	andeq	ip, r2, r8, asr #4
   1abb8:			; <UNDEFINED> instruction: 0x000001bb
   1abbc:	strdeq	ip, [r2], -r0
   1abc0:	andeq	ip, r2, r8, lsl r4
   1abc4:	muleq	r2, r8, r8
   1abc8:	andeq	ip, r2, r8, lsl #8

0001abcc <__flatcc_gen_sort@@Base>:
   1abcc:	ldr	r1, [pc, #292]	; 1acf8 <__flatcc_gen_sort@@Base+0x12c>
   1abd0:	push	{r4, lr}
   1abd4:	mov	r2, r0
   1abd8:	mov	r4, r0
   1abdc:	sub	sp, sp, #24
   1abe0:	add	r1, pc, r1
   1abe4:	ldr	r0, [r0, #204]	; 0xcc
   1abe8:	bl	13f7c <fprintf@plt>
   1abec:	ldr	r1, [pc, #264]	; 1acfc <__flatcc_gen_sort@@Base+0x130>
   1abf0:	mov	r3, r4
   1abf4:	mov	r2, r4
   1abf8:	ldr	r0, [r4, #204]	; 0xcc
   1abfc:	add	r1, pc, r1
   1ac00:	bl	13f7c <fprintf@plt>
   1ac04:	ldr	r1, [pc, #244]	; 1ad00 <__flatcc_gen_sort@@Base+0x134>
   1ac08:	ldr	r0, [r4, #204]	; 0xcc
   1ac0c:	mov	r3, r4
   1ac10:	mov	r2, r4
   1ac14:	str	r4, [sp]
   1ac18:	add	r1, pc, r1
   1ac1c:	bl	13f7c <fprintf@plt>
   1ac20:	ldr	r1, [pc, #220]	; 1ad04 <__flatcc_gen_sort@@Base+0x138>
   1ac24:	ldr	r0, [r4, #204]	; 0xcc
   1ac28:	mov	r3, r4
   1ac2c:	mov	r2, r4
   1ac30:	str	r4, [sp, #4]
   1ac34:	str	r4, [sp]
   1ac38:	add	r1, pc, r1
   1ac3c:	bl	13f7c <fprintf@plt>
   1ac40:	ldr	r1, [pc, #192]	; 1ad08 <__flatcc_gen_sort@@Base+0x13c>
   1ac44:	mov	r3, r4
   1ac48:	mov	r2, r4
   1ac4c:	ldr	r0, [r4, #204]	; 0xcc
   1ac50:	add	r1, pc, r1
   1ac54:	bl	13f7c <fprintf@plt>
   1ac58:	ldr	r1, [pc, #172]	; 1ad0c <__flatcc_gen_sort@@Base+0x140>
   1ac5c:	ldr	r0, [r4, #204]	; 0xcc
   1ac60:	mov	r3, r4
   1ac64:	mov	r2, r4
   1ac68:	str	r4, [sp, #4]
   1ac6c:	str	r4, [sp]
   1ac70:	add	r1, pc, r1
   1ac74:	bl	13f7c <fprintf@plt>
   1ac78:	ldr	r1, [pc, #144]	; 1ad10 <__flatcc_gen_sort@@Base+0x144>
   1ac7c:	ldr	r0, [r4, #204]	; 0xcc
   1ac80:	mov	r3, r4
   1ac84:	mov	r2, r4
   1ac88:	str	r4, [sp, #12]
   1ac8c:	str	r4, [sp, #8]
   1ac90:	str	r4, [sp, #4]
   1ac94:	str	r4, [sp]
   1ac98:	add	r1, pc, r1
   1ac9c:	bl	13f7c <fprintf@plt>
   1aca0:	ldr	r1, [pc, #108]	; 1ad14 <__flatcc_gen_sort@@Base+0x148>
   1aca4:	ldr	r0, [r4, #204]	; 0xcc
   1aca8:	mov	r3, r4
   1acac:	mov	r2, r4
   1acb0:	str	r4, [sp, #4]
   1acb4:	str	r4, [sp]
   1acb8:	add	r1, pc, r1
   1acbc:	bl	13f7c <fprintf@plt>
   1acc0:	ldr	r1, [pc, #80]	; 1ad18 <__flatcc_gen_sort@@Base+0x14c>
   1acc4:	ldr	r0, [r4, #204]	; 0xcc
   1acc8:	mov	r3, r4
   1accc:	str	r4, [sp, #16]
   1acd0:	str	r4, [sp, #12]
   1acd4:	str	r4, [sp, #8]
   1acd8:	str	r4, [sp, #4]
   1acdc:	str	r4, [sp]
   1ace0:	mov	r2, r4
   1ace4:	add	r1, pc, r1
   1ace8:	bl	13f7c <fprintf@plt>
   1acec:	mov	r0, #0
   1acf0:	add	sp, sp, #24
   1acf4:	pop	{r4, pc}
   1acf8:	andeq	ip, r2, ip, ror r5
   1acfc:	andeq	ip, r2, r0, lsr r9
   1ad00:	andeq	ip, r2, r4, lsr #20
   1ad04:	ldrdeq	ip, [r2], -r8
   1ad08:	andeq	ip, r2, r4, asr fp
   1ad0c:	andeq	ip, r2, ip, asr #25
   1ad10:	andeq	ip, r2, ip, lsr #26
   1ad14:	muleq	r2, ip, sp
   1ad18:	ldrdeq	ip, [r2], -r4
   1ad1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ad20:	sub	sp, sp, #500	; 0x1f4
   1ad24:	ldr	r9, [pc, #604]	; 1af88 <__flatcc_gen_sort@@Base+0x3bc>
   1ad28:	ldr	ip, [sp, #540]	; 0x21c
   1ad2c:	str	r3, [sp, #32]
   1ad30:	cmp	ip, #0
   1ad34:	mov	r5, r0
   1ad38:	mov	sl, r1
   1ad3c:	mov	fp, r2
   1ad40:	add	r9, pc, r9
   1ad44:	ldr	r4, [sp, #536]	; 0x218
   1ad48:	bne	1aee8 <__flatcc_gen_sort@@Base+0x31c>
   1ad4c:	ldr	r3, [pc, #568]	; 1af8c <__flatcc_gen_sort@@Base+0x3c0>
   1ad50:	add	r3, pc, r3
   1ad54:	str	r3, [sp, #36]	; 0x24
   1ad58:	add	r6, sp, #56	; 0x38
   1ad5c:	mov	r2, #220	; 0xdc
   1ad60:	mov	r1, #0
   1ad64:	mov	r0, r6
   1ad68:	add	r8, sp, #276	; 0x114
   1ad6c:	bl	13f94 <memset@plt>
   1ad70:	mov	r2, #220	; 0xdc
   1ad74:	mov	r1, #0
   1ad78:	mov	r0, r8
   1ad7c:	bl	13f94 <memset@plt>
   1ad80:	mov	r1, r4
   1ad84:	ldr	r0, [r4, #12]
   1ad88:	mov	r2, r6
   1ad8c:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   1ad90:	ldr	r4, [r4, #20]
   1ad94:	cmp	r4, #0
   1ad98:	beq	1aea0 <__flatcc_gen_sort@@Base+0x2d4>
   1ad9c:	ldr	r3, [pc, #492]	; 1af90 <__flatcc_gen_sort@@Base+0x3c4>
   1ada0:	add	r3, pc, r3
   1ada4:	str	r3, [sp, #40]	; 0x28
   1ada8:	ldr	r3, [pc, #484]	; 1af94 <__flatcc_gen_sort@@Base+0x3c8>
   1adac:	add	r3, pc, r3
   1adb0:	str	r3, [sp, #48]	; 0x30
   1adb4:	ldr	r3, [pc, #476]	; 1af98 <__flatcc_gen_sort@@Base+0x3cc>
   1adb8:	add	r3, pc, r3
   1adbc:	str	r3, [sp, #52]	; 0x34
   1adc0:	ldrh	r2, [r4, #24]
   1adc4:	ldr	r1, [r4, #4]
   1adc8:	cmp	r2, #10
   1adcc:	ldm	r1, {r3, r7}
   1add0:	beq	1aeac <__flatcc_gen_sort@@Base+0x2e0>
   1add4:	cmp	r2, #14
   1add8:	beq	1ae34 <__flatcc_gen_sort@@Base+0x268>
   1addc:	cmp	r2, #0
   1ade0:	beq	1ae94 <__flatcc_gen_sort@@Base+0x2c8>
   1ade4:	ldr	r2, [pc, #432]	; 1af9c <__flatcc_gen_sort@@Base+0x3d0>
   1ade8:	ldr	r3, [pc, #432]	; 1afa0 <__flatcc_gen_sort@@Base+0x3d4>
   1adec:	ldr	r4, [pc, #432]	; 1afa4 <__flatcc_gen_sort@@Base+0x3d8>
   1adf0:	ldr	r1, [r9, r2]
   1adf4:	add	r3, pc, r3
   1adf8:	str	r3, [sp]
   1adfc:	ldr	r0, [r1]
   1ae00:	ldr	r1, [pc, #416]	; 1afa8 <__flatcc_gen_sort@@Base+0x3dc>
   1ae04:	add	r4, pc, r4
   1ae08:	mov	r2, r4
   1ae0c:	ldr	r3, [pc, #408]	; 1afac <__flatcc_gen_sort@@Base+0x3e0>
   1ae10:	add	r1, pc, r1
   1ae14:	bl	13f7c <fprintf@plt>
   1ae18:	ldr	r3, [pc, #400]	; 1afb0 <__flatcc_gen_sort@@Base+0x3e4>
   1ae1c:	ldr	r0, [pc, #400]	; 1afb4 <__flatcc_gen_sort@@Base+0x3e8>
   1ae20:	mov	r1, r4
   1ae24:	add	r3, pc, r3
   1ae28:	ldr	r2, [pc, #380]	; 1afac <__flatcc_gen_sort@@Base+0x3e0>
   1ae2c:	add	r0, pc, r0
   1ae30:	bl	14030 <__assert_fail@plt>
   1ae34:	ldr	r1, [r4, #16]
   1ae38:	mov	r2, r8
   1ae3c:	str	r3, [sp, #44]	; 0x2c
   1ae40:	ldr	r0, [r1, #12]
   1ae44:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   1ae48:	ldr	r2, [r4, #16]
   1ae4c:	ldr	r3, [sp, #44]	; 0x2c
   1ae50:	ldrh	r2, [r2, #8]
   1ae54:	cmp	r2, #0
   1ae58:	beq	1aef8 <__flatcc_gen_sort@@Base+0x32c>
   1ae5c:	cmp	r2, #1
   1ae60:	bne	1af38 <__flatcc_gen_sort@@Base+0x36c>
   1ae64:	ldr	r0, [r5, #204]	; 0xcc
   1ae68:	str	r3, [sp, #24]
   1ae6c:	ldr	r3, [sp, #32]
   1ae70:	str	r8, [sp, #28]
   1ae74:	str	r3, [sp, #12]
   1ae78:	str	r7, [sp, #20]
   1ae7c:	str	r6, [sp, #16]
   1ae80:	stm	sp, {r5, sl, fp}
   1ae84:	mov	r2, r5
   1ae88:	ldr	r3, [sp, #36]	; 0x24
   1ae8c:	ldr	r1, [sp, #52]	; 0x34
   1ae90:	bl	13f7c <fprintf@plt>
   1ae94:	ldr	r4, [r4]
   1ae98:	cmp	r4, #0
   1ae9c:	bne	1adc0 <__flatcc_gen_sort@@Base+0x1f4>
   1aea0:	mov	r0, #0
   1aea4:	add	sp, sp, #500	; 0x1f4
   1aea8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1aeac:	ldr	r0, [r5, #204]	; 0xcc
   1aeb0:	str	r3, [sp, #24]
   1aeb4:	ldr	r3, [sp, #32]
   1aeb8:	str	r7, [sp, #20]
   1aebc:	str	r3, [sp, #12]
   1aec0:	str	r6, [sp, #16]
   1aec4:	stm	sp, {r5, sl, fp}
   1aec8:	mov	r2, r5
   1aecc:	ldr	r3, [sp, #36]	; 0x24
   1aed0:	ldr	r1, [sp, #40]	; 0x28
   1aed4:	bl	13f7c <fprintf@plt>
   1aed8:	ldr	r4, [r4]
   1aedc:	cmp	r4, #0
   1aee0:	bne	1adc0 <__flatcc_gen_sort@@Base+0x1f4>
   1aee4:	b	1aea0 <__flatcc_gen_sort@@Base+0x2d4>
   1aee8:	ldr	r3, [pc, #200]	; 1afb8 <__flatcc_gen_sort@@Base+0x3ec>
   1aeec:	add	r3, pc, r3
   1aef0:	str	r3, [sp, #36]	; 0x24
   1aef4:	b	1ad58 <__flatcc_gen_sort@@Base+0x18c>
   1aef8:	ldr	r0, [r5, #204]	; 0xcc
   1aefc:	str	r3, [sp, #24]
   1af00:	ldr	r3, [sp, #32]
   1af04:	str	r8, [sp, #28]
   1af08:	str	r3, [sp, #12]
   1af0c:	str	r7, [sp, #20]
   1af10:	str	r6, [sp, #16]
   1af14:	stm	sp, {r5, sl, fp}
   1af18:	mov	r2, r5
   1af1c:	ldr	r3, [sp, #36]	; 0x24
   1af20:	ldr	r1, [sp, #48]	; 0x30
   1af24:	bl	13f7c <fprintf@plt>
   1af28:	ldr	r4, [r4]
   1af2c:	cmp	r4, #0
   1af30:	bne	1adc0 <__flatcc_gen_sort@@Base+0x1f4>
   1af34:	b	1aea0 <__flatcc_gen_sort@@Base+0x2d4>
   1af38:	ldr	r2, [pc, #92]	; 1af9c <__flatcc_gen_sort@@Base+0x3d0>
   1af3c:	ldr	r3, [pc, #120]	; 1afbc <__flatcc_gen_sort@@Base+0x3f0>
   1af40:	ldr	r4, [pc, #120]	; 1afc0 <__flatcc_gen_sort@@Base+0x3f4>
   1af44:	ldr	r1, [r9, r2]
   1af48:	add	r3, pc, r3
   1af4c:	str	r3, [sp]
   1af50:	ldr	r0, [r1]
   1af54:	ldr	r1, [pc, #104]	; 1afc4 <__flatcc_gen_sort@@Base+0x3f8>
   1af58:	add	r4, pc, r4
   1af5c:	mov	r2, r4
   1af60:	ldr	r3, [pc, #96]	; 1afc8 <__flatcc_gen_sort@@Base+0x3fc>
   1af64:	add	r1, pc, r1
   1af68:	bl	13f7c <fprintf@plt>
   1af6c:	ldr	r3, [pc, #88]	; 1afcc <__flatcc_gen_sort@@Base+0x400>
   1af70:	ldr	r0, [pc, #88]	; 1afd0 <__flatcc_gen_sort@@Base+0x404>
   1af74:	mov	r1, r4
   1af78:	add	r3, pc, r3
   1af7c:	ldr	r2, [pc, #68]	; 1afc8 <__flatcc_gen_sort@@Base+0x3fc>
   1af80:	add	r0, pc, r0
   1af84:	bl	14030 <__assert_fail@plt>
   1af88:			; <UNDEFINED> instruction: 0x0004f2b8
   1af8c:	ldrdeq	ip, [r2], -r4
   1af90:	andeq	ip, r2, r4, lsr #31
   1af94:	andeq	ip, r2, r0, lsl #29
   1af98:			; <UNDEFINED> instruction: 0x0002ceb0
   1af9c:	muleq	r0, ip, r0
   1afa0:	andeq	ip, r2, r8, lsl #31
   1afa4:	andeq	ip, r2, r0, lsr #29
   1afa8:	andeq	r4, r2, r4, asr ip
   1afac:	andeq	r0, r0, r8, asr r5
   1afb0:	andeq	ip, r2, ip, lsl #26
   1afb4:	andeq	sp, r2, r8, lsr r0
   1afb8:	andeq	ip, r2, r8, lsr #26
   1afbc:	andeq	ip, r2, r4, asr #27
   1afc0:	andeq	ip, r2, ip, asr #26
   1afc4:	andeq	r4, r2, r0, lsl #22
   1afc8:	andeq	r0, r0, lr, asr #10
   1afcc:			; <UNDEFINED> instruction: 0x0002cbb8
   1afd0:	andeq	ip, r2, r4, ror #29
   1afd4:	push	{r4, r5, r6, lr}
   1afd8:	subs	r4, r0, #0
   1afdc:	beq	1b034 <__flatcc_gen_sort@@Base+0x468>
   1afe0:	mov	r5, #0
   1afe4:	ldrh	r3, [r4, #72]	; 0x48
   1afe8:	tst	r3, #4
   1afec:	bne	1b010 <__flatcc_gen_sort@@Base+0x444>
   1aff0:	ldrh	r3, [r4, #24]
   1aff4:	cmp	r3, #14
   1aff8:	bne	1b00c <__flatcc_gen_sort@@Base+0x440>
   1affc:	ldr	r3, [r4, #16]
   1b000:	ldrh	r2, [r3, #8]
   1b004:	cmp	r2, #1
   1b008:	beq	1b024 <__flatcc_gen_sort@@Base+0x458>
   1b00c:	add	r5, r5, #1
   1b010:	ldr	r4, [r4]
   1b014:	cmp	r4, #0
   1b018:	bne	1afe4 <__flatcc_gen_sort@@Base+0x418>
   1b01c:	mov	r0, r5
   1b020:	pop	{r4, r5, r6, pc}
   1b024:	ldr	r0, [r3, #20]
   1b028:	bl	1afd4 <__flatcc_gen_sort@@Base+0x408>
   1b02c:	add	r5, r5, r0
   1b030:	b	1b010 <__flatcc_gen_sort@@Base+0x444>
   1b034:	mov	r5, r4
   1b038:	b	1b01c <__flatcc_gen_sort@@Base+0x450>
   1b03c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b040:	sub	sp, sp, #316	; 0x13c
   1b044:	add	r9, sp, #92	; 0x5c
   1b048:	str	r2, [sp, #24]
   1b04c:	mov	sl, r0
   1b050:	mov	r4, r1
   1b054:	mov	r0, r9
   1b058:	mov	r2, #220	; 0xdc
   1b05c:	mov	r1, #0
   1b060:	mov	r5, r3
   1b064:	bl	13f94 <memset@plt>
   1b068:	ldr	r3, [pc, #1716]	; 1b724 <__flatcc_gen_sort@@Base+0xb58>
   1b06c:	cmp	r5, #1
   1b070:	add	r3, pc, r3
   1b074:	str	r3, [sp, #20]
   1b078:	beq	1b248 <__flatcc_gen_sort@@Base+0x67c>
   1b07c:	cmp	r5, #2
   1b080:	beq	1b1a0 <__flatcc_gen_sort@@Base+0x5d4>
   1b084:	ldr	r3, [pc, #1692]	; 1b728 <__flatcc_gen_sort@@Base+0xb5c>
   1b088:	add	r3, pc, r3
   1b08c:	str	r3, [sp, #28]
   1b090:	ldr	r8, [r4]
   1b094:	cmp	r8, #0
   1b098:	moveq	fp, r8
   1b09c:	beq	1b4f0 <__flatcc_gen_sort@@Base+0x924>
   1b0a0:	ldr	r3, [r8, #4]
   1b0a4:	mov	r7, #0
   1b0a8:	mov	fp, r7
   1b0ac:	ldr	r6, [r3]
   1b0b0:	ldr	r4, [r3, #4]
   1b0b4:	ldr	r3, [pc, #1648]	; 1b72c <__flatcc_gen_sort@@Base+0xb60>
   1b0b8:	add	r3, pc, r3
   1b0bc:	str	r3, [sp, #32]
   1b0c0:	ldr	r3, [pc, #1640]	; 1b730 <__flatcc_gen_sort@@Base+0xb64>
   1b0c4:	add	r3, pc, r3
   1b0c8:	str	r3, [sp, #36]	; 0x24
   1b0cc:	ldr	r3, [pc, #1632]	; 1b734 <__flatcc_gen_sort@@Base+0xb68>
   1b0d0:	add	r3, pc, r3
   1b0d4:	str	r3, [sp, #40]	; 0x28
   1b0d8:	ldr	r3, [pc, #1624]	; 1b738 <__flatcc_gen_sort@@Base+0xb6c>
   1b0dc:	add	r3, pc, r3
   1b0e0:	str	r3, [sp, #44]	; 0x2c
   1b0e4:	ldr	r3, [pc, #1616]	; 1b73c <__flatcc_gen_sort@@Base+0xb70>
   1b0e8:	add	r3, pc, r3
   1b0ec:	str	r3, [sp, #48]	; 0x30
   1b0f0:	ldr	r3, [pc, #1608]	; 1b740 <__flatcc_gen_sort@@Base+0xb74>
   1b0f4:	add	r3, pc, r3
   1b0f8:	str	r3, [sp, #52]	; 0x34
   1b0fc:	mov	r3, r9
   1b100:	mov	r9, r5
   1b104:	mov	r5, r3
   1b108:	ldrh	r3, [r8, #24]
   1b10c:	cmp	r3, #8
   1b110:	beq	1b208 <__flatcc_gen_sort@@Base+0x63c>
   1b114:	cmp	r3, #14
   1b118:	bne	1b1b0 <__flatcc_gen_sort@@Base+0x5e4>
   1b11c:	ldr	r1, [r8, #16]
   1b120:	mov	r2, r5
   1b124:	ldr	r0, [r1, #12]
   1b128:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   1b12c:	ldr	r3, [r8, #16]
   1b130:	ldrh	r3, [r3, #8]
   1b134:	cmp	r3, #1
   1b138:	str	r3, [sp, #56]	; 0x38
   1b13c:	ldrh	r3, [r8, #72]	; 0x48
   1b140:	beq	1b258 <__flatcc_gen_sort@@Base+0x68c>
   1b144:	tst	r3, #4
   1b148:	bne	1b49c <__flatcc_gen_sort@@Base+0x8d0>
   1b14c:	ldrd	r2, [r8, #88]	; 0x58
   1b150:	cmp	r3, #0
   1b154:	cmpeq	r2, #1
   1b158:	beq	1b2d8 <__flatcc_gen_sort@@Base+0x70c>
   1b15c:	cmp	r9, #1
   1b160:	beq	1b4c0 <__flatcc_gen_sort@@Base+0x8f4>
   1b164:	cmp	r9, #2
   1b168:	bne	1b2d8 <__flatcc_gen_sort@@Base+0x70c>
   1b16c:	ldr	r3, [sp, #352]	; 0x160
   1b170:	ldr	r0, [sl, #204]	; 0xcc
   1b174:	cmp	r3, #0
   1b178:	beq	1b694 <__flatcc_gen_sort@@Base+0xac8>
   1b17c:	ldr	r1, [pc, #1472]	; 1b744 <__flatcc_gen_sort@@Base+0xb78>
   1b180:	stmib	sp, {r4, r6}
   1b184:	str	r6, [sp]
   1b188:	mov	r3, r4
   1b18c:	mov	r2, r5
   1b190:	add	r1, pc, r1
   1b194:	bl	13f7c <fprintf@plt>
   1b198:	add	fp, fp, #1
   1b19c:	b	1b294 <__flatcc_gen_sort@@Base+0x6c8>
   1b1a0:	ldr	r3, [pc, #1440]	; 1b748 <__flatcc_gen_sort@@Base+0xb7c>
   1b1a4:	add	r3, pc, r3
   1b1a8:	str	r3, [sp, #28]
   1b1ac:	b	1b090 <__flatcc_gen_sort@@Base+0x4c4>
   1b1b0:	ldr	r2, [pc, #1428]	; 1b74c <__flatcc_gen_sort@@Base+0xb80>
   1b1b4:	ldr	r1, [sp, #20]
   1b1b8:	ldr	r3, [pc, #1424]	; 1b750 <__flatcc_gen_sort@@Base+0xb84>
   1b1bc:	ldr	r4, [pc, #1424]	; 1b754 <__flatcc_gen_sort@@Base+0xb88>
   1b1c0:	ldr	r1, [r1, r2]
   1b1c4:	add	r3, pc, r3
   1b1c8:	str	r3, [sp]
   1b1cc:	ldr	r0, [r1]
   1b1d0:	ldr	r1, [pc, #1408]	; 1b758 <__flatcc_gen_sort@@Base+0xb8c>
   1b1d4:	add	r4, pc, r4
   1b1d8:	mov	r2, r4
   1b1dc:	ldr	r3, [pc, #1400]	; 1b75c <__flatcc_gen_sort@@Base+0xb90>
   1b1e0:	add	r1, pc, r1
   1b1e4:	bl	13f7c <fprintf@plt>
   1b1e8:	ldr	r3, [pc, #1392]	; 1b760 <__flatcc_gen_sort@@Base+0xb94>
   1b1ec:	ldr	r0, [pc, #1392]	; 1b764 <__flatcc_gen_sort@@Base+0xb98>
   1b1f0:	add	r3, pc, r3
   1b1f4:	mov	r1, r4
   1b1f8:	add	r3, r3, #40	; 0x28
   1b1fc:	ldr	r2, [pc, #1368]	; 1b75c <__flatcc_gen_sort@@Base+0xb90>
   1b200:	add	r0, pc, r0
   1b204:	bl	14030 <__assert_fail@plt>
   1b208:	ldr	r3, [r8, #16]
   1b20c:	sub	r3, r3, #1
   1b210:	cmp	r3, #10
   1b214:	addls	pc, pc, r3, lsl #2
   1b218:	b	1b6cc <__flatcc_gen_sort@@Base+0xb00>
   1b21c:	b	1b37c <__flatcc_gen_sort@@Base+0x7b0>
   1b220:	b	1b370 <__flatcc_gen_sort@@Base+0x7a4>
   1b224:	b	1b304 <__flatcc_gen_sort@@Base+0x738>
   1b228:	b	1b3d0 <__flatcc_gen_sort@@Base+0x804>
   1b22c:	b	1b3c4 <__flatcc_gen_sort@@Base+0x7f8>
   1b230:	b	1b3b8 <__flatcc_gen_sort@@Base+0x7ec>
   1b234:	b	1b3ac <__flatcc_gen_sort@@Base+0x7e0>
   1b238:	b	1b3a0 <__flatcc_gen_sort@@Base+0x7d4>
   1b23c:	b	1b394 <__flatcc_gen_sort@@Base+0x7c8>
   1b240:	b	1b388 <__flatcc_gen_sort@@Base+0x7bc>
   1b244:	b	1b364 <__flatcc_gen_sort@@Base+0x798>
   1b248:	ldr	r3, [pc, #1304]	; 1b768 <__flatcc_gen_sort@@Base+0xb9c>
   1b24c:	add	r3, pc, r3
   1b250:	str	r3, [sp, #28]
   1b254:	b	1b090 <__flatcc_gen_sort@@Base+0x4c4>
   1b258:	tst	r3, #4
   1b25c:	bne	1b3dc <__flatcc_gen_sort@@Base+0x810>
   1b260:	ldr	r3, [sp, #352]	; 0x160
   1b264:	ldr	r0, [sl, #204]	; 0xcc
   1b268:	cmp	r3, #0
   1b26c:	beq	1b560 <__flatcc_gen_sort@@Base+0x994>
   1b270:	ldr	r1, [pc, #1268]	; 1b76c <__flatcc_gen_sort@@Base+0xba0>
   1b274:	str	r6, [sp, #12]
   1b278:	str	r4, [sp, #8]
   1b27c:	stm	sp, {r4, r6}
   1b280:	ldr	r3, [sp, #28]
   1b284:	mov	r2, r5
   1b288:	add	r1, pc, r1
   1b28c:	add	fp, fp, #1
   1b290:	bl	13f7c <fprintf@plt>
   1b294:	ldr	r8, [r8]
   1b298:	cmp	r8, #0
   1b29c:	beq	1b4f0 <__flatcc_gen_sort@@Base+0x924>
   1b2a0:	ldr	r3, [r8, #4]
   1b2a4:	cmp	fp, #0
   1b2a8:	ldr	r6, [r3]
   1b2ac:	ldr	r4, [r3, #4]
   1b2b0:	ble	1b108 <__flatcc_gen_sort@@Base+0x53c>
   1b2b4:	tst	fp, #3
   1b2b8:	ldr	r3, [sl, #204]	; 0xcc
   1b2bc:	bne	1b40c <__flatcc_gen_sort@@Base+0x840>
   1b2c0:	ldr	r0, [pc, #1192]	; 1b770 <__flatcc_gen_sort@@Base+0xba4>
   1b2c4:	mov	r2, #4
   1b2c8:	mov	r1, #1
   1b2cc:	add	r0, pc, r0
   1b2d0:	bl	13f10 <fwrite@plt>
   1b2d4:	b	1b108 <__flatcc_gen_sort@@Base+0x53c>
   1b2d8:	ldr	r3, [sp, #352]	; 0x160
   1b2dc:	ldr	r0, [sl, #204]	; 0xcc
   1b2e0:	cmp	r3, #0
   1b2e4:	beq	1b6b0 <__flatcc_gen_sort@@Base+0xae4>
   1b2e8:	ldr	r1, [pc, #1156]	; 1b774 <__flatcc_gen_sort@@Base+0xba8>
   1b2ec:	stm	sp, {r4, r6}
   1b2f0:	mov	r3, r6
   1b2f4:	mov	r2, r4
   1b2f8:	add	r1, pc, r1
   1b2fc:	bl	13f7c <fprintf@plt>
   1b300:	b	1b198 <__flatcc_gen_sort@@Base+0x5cc>
   1b304:	ldr	r3, [pc, #1132]	; 1b778 <__flatcc_gen_sort@@Base+0xbac>
   1b308:	add	r3, pc, r3
   1b30c:	ldrh	r2, [r8, #72]	; 0x48
   1b310:	tst	r2, #4
   1b314:	bne	1b424 <__flatcc_gen_sort@@Base+0x858>
   1b318:	ldrd	r0, [r8, #88]	; 0x58
   1b31c:	cmp	r1, #0
   1b320:	cmpeq	r0, #1
   1b324:	beq	1b448 <__flatcc_gen_sort@@Base+0x87c>
   1b328:	cmp	r9, #1
   1b32c:	beq	1b470 <__flatcc_gen_sort@@Base+0x8a4>
   1b330:	cmp	r9, #2
   1b334:	bne	1b448 <__flatcc_gen_sort@@Base+0x87c>
   1b338:	ldr	r2, [sp, #352]	; 0x160
   1b33c:	ldr	r0, [sl, #204]	; 0xcc
   1b340:	cmp	r2, #0
   1b344:	beq	1b520 <__flatcc_gen_sort@@Base+0x954>
   1b348:	str	r6, [sp, #12]
   1b34c:	str	r4, [sp, #8]
   1b350:	stm	sp, {r4, r6}
   1b354:	mov	r2, sl
   1b358:	ldr	r1, [sp, #52]	; 0x34
   1b35c:	bl	13f7c <fprintf@plt>
   1b360:	b	1b198 <__flatcc_gen_sort@@Base+0x5cc>
   1b364:	ldr	r3, [pc, #1040]	; 1b77c <__flatcc_gen_sort@@Base+0xbb0>
   1b368:	add	r3, pc, r3
   1b36c:	b	1b30c <__flatcc_gen_sort@@Base+0x740>
   1b370:	ldr	r3, [pc, #1032]	; 1b780 <__flatcc_gen_sort@@Base+0xbb4>
   1b374:	add	r3, pc, r3
   1b378:	b	1b30c <__flatcc_gen_sort@@Base+0x740>
   1b37c:	ldr	r3, [pc, #1024]	; 1b784 <__flatcc_gen_sort@@Base+0xbb8>
   1b380:	add	r3, pc, r3
   1b384:	b	1b30c <__flatcc_gen_sort@@Base+0x740>
   1b388:	ldr	r3, [pc, #1016]	; 1b788 <__flatcc_gen_sort@@Base+0xbbc>
   1b38c:	add	r3, pc, r3
   1b390:	b	1b30c <__flatcc_gen_sort@@Base+0x740>
   1b394:	ldr	r3, [pc, #1008]	; 1b78c <__flatcc_gen_sort@@Base+0xbc0>
   1b398:	add	r3, pc, r3
   1b39c:	b	1b30c <__flatcc_gen_sort@@Base+0x740>
   1b3a0:	ldr	r3, [pc, #1000]	; 1b790 <__flatcc_gen_sort@@Base+0xbc4>
   1b3a4:	add	r3, pc, r3
   1b3a8:	b	1b30c <__flatcc_gen_sort@@Base+0x740>
   1b3ac:	ldr	r3, [pc, #992]	; 1b794 <__flatcc_gen_sort@@Base+0xbc8>
   1b3b0:	add	r3, pc, r3
   1b3b4:	b	1b30c <__flatcc_gen_sort@@Base+0x740>
   1b3b8:	ldr	r3, [pc, #984]	; 1b798 <__flatcc_gen_sort@@Base+0xbcc>
   1b3bc:	add	r3, pc, r3
   1b3c0:	b	1b30c <__flatcc_gen_sort@@Base+0x740>
   1b3c4:	ldr	r3, [pc, #976]	; 1b79c <__flatcc_gen_sort@@Base+0xbd0>
   1b3c8:	add	r3, pc, r3
   1b3cc:	b	1b30c <__flatcc_gen_sort@@Base+0x740>
   1b3d0:	ldr	r3, [pc, #968]	; 1b7a0 <__flatcc_gen_sort@@Base+0xbd4>
   1b3d4:	add	r3, pc, r3
   1b3d8:	b	1b30c <__flatcc_gen_sort@@Base+0x740>
   1b3dc:	ldr	r1, [pc, #960]	; 1b7a4 <__flatcc_gen_sort@@Base+0xbd8>
   1b3e0:	mov	r3, r7
   1b3e4:	mov	r2, r7
   1b3e8:	add	r1, pc, r1
   1b3ec:	ldr	r0, [sl, #204]	; 0xcc
   1b3f0:	bl	13f7c <fprintf@plt>
   1b3f4:	ldr	r3, [r8, #16]
   1b3f8:	add	r7, r7, #1
   1b3fc:	ldr	r0, [r3, #20]
   1b400:	bl	1afd4 <__flatcc_gen_sort@@Base+0x408>
   1b404:	add	fp, fp, r0
   1b408:	b	1b294 <__flatcc_gen_sort@@Base+0x6c8>
   1b40c:	ldr	r0, [pc, #916]	; 1b7a8 <__flatcc_gen_sort@@Base+0xbdc>
   1b410:	mov	r2, #2
   1b414:	mov	r1, #1
   1b418:	add	r0, pc, r0
   1b41c:	bl	13f10 <fwrite@plt>
   1b420:	b	1b108 <__flatcc_gen_sort@@Base+0x53c>
   1b424:	ldr	r1, [pc, #896]	; 1b7ac <__flatcc_gen_sort@@Base+0xbe0>
   1b428:	add	r3, r7, #1
   1b42c:	mov	r2, r7
   1b430:	add	r1, pc, r1
   1b434:	ldr	r0, [sl, #204]	; 0xcc
   1b438:	add	fp, fp, #1
   1b43c:	mov	r7, r3
   1b440:	bl	13f7c <fprintf@plt>
   1b444:	b	1b294 <__flatcc_gen_sort@@Base+0x6c8>
   1b448:	ldr	r3, [sp, #352]	; 0x160
   1b44c:	ldr	r0, [sl, #204]	; 0xcc
   1b450:	cmp	r3, #0
   1b454:	beq	1b534 <__flatcc_gen_sort@@Base+0x968>
   1b458:	stm	sp, {r4, r6}
   1b45c:	mov	r3, r6
   1b460:	mov	r2, r4
   1b464:	ldr	r1, [sp, #36]	; 0x24
   1b468:	bl	13f7c <fprintf@plt>
   1b46c:	b	1b198 <__flatcc_gen_sort@@Base+0x5cc>
   1b470:	ldr	r2, [sp, #352]	; 0x160
   1b474:	ldr	r0, [sl, #204]	; 0xcc
   1b478:	cmp	r2, #0
   1b47c:	beq	1b54c <__flatcc_gen_sort@@Base+0x980>
   1b480:	str	r6, [sp, #12]
   1b484:	str	r4, [sp, #8]
   1b488:	stm	sp, {r4, r6}
   1b48c:	mov	r2, sl
   1b490:	ldr	r1, [sp, #44]	; 0x2c
   1b494:	bl	13f7c <fprintf@plt>
   1b498:	b	1b198 <__flatcc_gen_sort@@Base+0x5cc>
   1b49c:	ldr	r1, [pc, #780]	; 1b7b0 <__flatcc_gen_sort@@Base+0xbe4>
   1b4a0:	add	r3, r7, #1
   1b4a4:	mov	r2, r7
   1b4a8:	add	r1, pc, r1
   1b4ac:	ldr	r0, [sl, #204]	; 0xcc
   1b4b0:	add	fp, fp, #1
   1b4b4:	mov	r7, r3
   1b4b8:	bl	13f7c <fprintf@plt>
   1b4bc:	b	1b294 <__flatcc_gen_sort@@Base+0x6c8>
   1b4c0:	ldr	r3, [sp, #352]	; 0x160
   1b4c4:	ldr	r0, [sl, #204]	; 0xcc
   1b4c8:	cmp	r3, #0
   1b4cc:	beq	1b678 <__flatcc_gen_sort@@Base+0xaac>
   1b4d0:	ldr	r1, [pc, #732]	; 1b7b4 <__flatcc_gen_sort@@Base+0xbe8>
   1b4d4:	stmib	sp, {r4, r6}
   1b4d8:	str	r6, [sp]
   1b4dc:	mov	r3, r4
   1b4e0:	mov	r2, r5
   1b4e4:	add	r1, pc, r1
   1b4e8:	bl	13f7c <fprintf@plt>
   1b4ec:	b	1b198 <__flatcc_gen_sort@@Base+0x5cc>
   1b4f0:	ldr	r3, [sp, #24]
   1b4f4:	cmp	r3, #0
   1b4f8:	ble	1b514 <__flatcc_gen_sort@@Base+0x948>
   1b4fc:	ldr	r0, [pc, #692]	; 1b7b8 <__flatcc_gen_sort@@Base+0xbec>
   1b500:	ldr	r3, [sl, #204]	; 0xcc
   1b504:	mov	r2, #4
   1b508:	mov	r1, #1
   1b50c:	add	r0, pc, r0
   1b510:	bl	13f10 <fwrite@plt>
   1b514:	mov	r0, fp
   1b518:	add	sp, sp, #316	; 0x13c
   1b51c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b520:	stm	sp, {r4, r6, fp}
   1b524:	mov	r2, sl
   1b528:	ldr	r1, [sp, #48]	; 0x30
   1b52c:	bl	13f7c <fprintf@plt>
   1b530:	b	1b198 <__flatcc_gen_sort@@Base+0x5cc>
   1b534:	str	fp, [sp]
   1b538:	mov	r3, r6
   1b53c:	mov	r2, r4
   1b540:	ldr	r1, [sp, #32]
   1b544:	bl	13f7c <fprintf@plt>
   1b548:	b	1b198 <__flatcc_gen_sort@@Base+0x5cc>
   1b54c:	stm	sp, {r4, r6, fp}
   1b550:	mov	r2, sl
   1b554:	ldr	r1, [sp, #40]	; 0x28
   1b558:	bl	13f7c <fprintf@plt>
   1b55c:	b	1b198 <__flatcc_gen_sort@@Base+0x5cc>
   1b560:	ldr	r1, [pc, #596]	; 1b7bc <__flatcc_gen_sort@@Base+0xbf0>
   1b564:	ldr	r3, [sp, #28]
   1b568:	mov	r2, r5
   1b56c:	add	r1, pc, r1
   1b570:	stm	sp, {r4, r6}
   1b574:	bl	13f7c <fprintf@plt>
   1b578:	ldr	r3, [r8, #16]
   1b57c:	ldr	r0, [r3, #20]
   1b580:	bl	1afd4 <__flatcc_gen_sort@@Base+0x408>
   1b584:	subs	r3, r0, #0
   1b588:	str	r3, [sp, #68]	; 0x44
   1b58c:	ble	1b668 <__flatcc_gen_sort@@Base+0xa9c>
   1b590:	ldr	r1, [pc, #552]	; 1b7c0 <__flatcc_gen_sort@@Base+0xbf4>
   1b594:	ldr	r2, [pc, #552]	; 1b7c4 <__flatcc_gen_sort@@Base+0xbf8>
   1b598:	add	r1, pc, r1
   1b59c:	str	r1, [sp, #60]	; 0x3c
   1b5a0:	ldr	r1, [pc, #544]	; 1b7c8 <__flatcc_gen_sort@@Base+0xbfc>
   1b5a4:	add	r2, pc, r2
   1b5a8:	add	r1, pc, r1
   1b5ac:	str	r1, [sp, #64]	; 0x40
   1b5b0:	ldr	r1, [pc, #532]	; 1b7cc <__flatcc_gen_sort@@Base+0xc00>
   1b5b4:	str	r7, [sp, #72]	; 0x48
   1b5b8:	add	r1, pc, r1
   1b5bc:	str	r8, [sp, #76]	; 0x4c
   1b5c0:	str	r9, [sp, #80]	; 0x50
   1b5c4:	str	r5, [sp, #84]	; 0x54
   1b5c8:	ldr	r4, [sp, #352]	; 0x160
   1b5cc:	mov	r8, r3
   1b5d0:	ldr	r7, [sp, #24]
   1b5d4:	mov	r9, r1
   1b5d8:	mov	r5, r2
   1b5dc:	b	1b614 <__flatcc_gen_sort@@Base+0xa48>
   1b5e0:	cmp	r7, #4
   1b5e4:	ble	1b63c <__flatcc_gen_sort@@Base+0xa70>
   1b5e8:	ldr	r2, [sp, #60]	; 0x3c
   1b5ec:	ldr	r1, [sp, #64]	; 0x40
   1b5f0:	ldr	r0, [sl, #204]	; 0xcc
   1b5f4:	bl	13f7c <fprintf@plt>
   1b5f8:	mov	r2, r6
   1b5fc:	add	r4, r4, #1
   1b600:	mov	r1, r9
   1b604:	ldr	r0, [sl, #204]	; 0xcc
   1b608:	bl	13f7c <fprintf@plt>
   1b60c:	cmp	r8, r4
   1b610:	beq	1b654 <__flatcc_gen_sort@@Base+0xa88>
   1b614:	cmp	r7, #0
   1b618:	add	r6, fp, r4
   1b61c:	beq	1b5f8 <__flatcc_gen_sort@@Base+0xa2c>
   1b620:	cmp	r4, #0
   1b624:	beq	1b5e0 <__flatcc_gen_sort@@Base+0xa14>
   1b628:	tst	r4, #3
   1b62c:	bne	1b63c <__flatcc_gen_sort@@Base+0xa70>
   1b630:	sub	r3, r7, r4
   1b634:	cmp	r3, #2
   1b638:	bgt	1b5e8 <__flatcc_gen_sort@@Base+0xa1c>
   1b63c:	ldr	r3, [sl, #204]	; 0xcc
   1b640:	mov	r2, #2
   1b644:	ldr	r1, [sp, #56]	; 0x38
   1b648:	mov	r0, r5
   1b64c:	bl	13f10 <fwrite@plt>
   1b650:	b	1b5f8 <__flatcc_gen_sort@@Base+0xa2c>
   1b654:	add	r7, sp, #72	; 0x48
   1b658:	ldr	r3, [sp, #68]	; 0x44
   1b65c:	ldm	r7, {r7, r8, r9}
   1b660:	add	fp, r3, fp
   1b664:	ldr	r5, [sp, #84]	; 0x54
   1b668:	ldr	r1, [sl, #204]	; 0xcc
   1b66c:	mov	r0, #41	; 0x29
   1b670:	bl	13fdc <fputc@plt>
   1b674:	b	1b294 <__flatcc_gen_sort@@Base+0x6c8>
   1b678:	ldr	r1, [pc, #336]	; 1b7d0 <__flatcc_gen_sort@@Base+0xc04>
   1b67c:	stm	sp, {r6, fp}
   1b680:	mov	r3, r4
   1b684:	mov	r2, r5
   1b688:	add	r1, pc, r1
   1b68c:	bl	13f7c <fprintf@plt>
   1b690:	b	1b198 <__flatcc_gen_sort@@Base+0x5cc>
   1b694:	ldr	r1, [pc, #312]	; 1b7d4 <__flatcc_gen_sort@@Base+0xc08>
   1b698:	stm	sp, {r6, fp}
   1b69c:	mov	r3, r4
   1b6a0:	mov	r2, r5
   1b6a4:	add	r1, pc, r1
   1b6a8:	bl	13f7c <fprintf@plt>
   1b6ac:	b	1b198 <__flatcc_gen_sort@@Base+0x5cc>
   1b6b0:	ldr	r1, [pc, #288]	; 1b7d8 <__flatcc_gen_sort@@Base+0xc0c>
   1b6b4:	str	fp, [sp]
   1b6b8:	mov	r3, r6
   1b6bc:	mov	r2, r4
   1b6c0:	add	r1, pc, r1
   1b6c4:	bl	13f7c <fprintf@plt>
   1b6c8:	b	1b198 <__flatcc_gen_sort@@Base+0x5cc>
   1b6cc:	ldr	r2, [pc, #120]	; 1b74c <__flatcc_gen_sort@@Base+0xb80>
   1b6d0:	ldr	r1, [sp, #20]
   1b6d4:	ldr	r3, [pc, #256]	; 1b7dc <__flatcc_gen_sort@@Base+0xc10>
   1b6d8:	ldr	r4, [pc, #256]	; 1b7e0 <__flatcc_gen_sort@@Base+0xc14>
   1b6dc:	ldr	r1, [r1, r2]
   1b6e0:	add	r3, pc, r3
   1b6e4:	str	r3, [sp]
   1b6e8:	ldr	r0, [r1]
   1b6ec:	ldr	r1, [pc, #240]	; 1b7e4 <__flatcc_gen_sort@@Base+0xc18>
   1b6f0:	add	r4, pc, r4
   1b6f4:	mov	r2, r4
   1b6f8:	mov	r3, #96	; 0x60
   1b6fc:	add	r1, pc, r1
   1b700:	bl	13f7c <fprintf@plt>
   1b704:	ldr	r3, [pc, #220]	; 1b7e8 <__flatcc_gen_sort@@Base+0xc1c>
   1b708:	ldr	r0, [pc, #220]	; 1b7ec <__flatcc_gen_sort@@Base+0xc20>
   1b70c:	add	r3, pc, r3
   1b710:	mov	r1, r4
   1b714:	add	r3, r3, #20
   1b718:	mov	r2, #96	; 0x60
   1b71c:	add	r0, pc, r0
   1b720:	bl	14030 <__assert_fail@plt>
   1b724:	andeq	lr, r4, r8, lsl #31
   1b728:	andeq	lr, r2, r0, ror #12
   1b72c:	andeq	ip, r2, r4, asr lr
   1b730:	andeq	ip, r2, r4, lsr lr
   1b734:	andeq	ip, r2, r4, ror lr
   1b738:	andeq	ip, r2, r0, asr #28
   1b73c:	andeq	ip, r2, r8, lsr #29
   1b740:	andeq	ip, r2, r4, ror lr
   1b744:	andeq	ip, r2, r4, lsr #26
   1b748:	andeq	ip, r2, r8, lsl #24
   1b74c:	muleq	r0, ip, r0
   1b750:	strdeq	ip, [r2], -r0
   1b754:	ldrdeq	ip, [r2], -r0
   1b758:	andeq	r4, r2, r4, lsl #17
   1b75c:	andeq	r0, r0, r1, ror #7
   1b760:	andeq	ip, r2, r0, asr #18
   1b764:	andeq	ip, r2, r4, ror #24
   1b768:	andeq	ip, r2, r8, ror #22
   1b76c:	andeq	ip, r2, r0, lsl #23
   1b770:	strdeq	ip, [r2], -r4
   1b774:	andeq	ip, r2, r0, lsl #24
   1b778:	andeq	r4, r2, r8, ror sl
   1b77c:	andeq	r4, r2, ip, asr #11
   1b780:	andeq	r4, r2, r4, lsl #20
   1b784:	strdeq	r4, [r2], -r0
   1b788:			; <UNDEFINED> instruction: 0x000245b0
   1b78c:	andeq	r4, r2, r0, lsl sl
   1b790:	strdeq	r4, [r2], -ip
   1b794:	andeq	r4, r2, r8, ror #19
   1b798:	ldrdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   1b79c:	strdeq	ip, [r3], -r4
   1b7a0:			; <UNDEFINED> instruction: 0x000249b4
   1b7a4:	andeq	ip, r2, r4, ror #19
   1b7a8:			; <UNDEFINED> instruction: 0x0002c9b0
   1b7ac:	andeq	ip, r2, r0, lsr #20
   1b7b0:	andeq	ip, r2, r8, lsr #19
   1b7b4:	andeq	ip, r2, r4, lsl #19
   1b7b8:			; <UNDEFINED> instruction: 0x0002c8b4
   1b7bc:			; <UNDEFINED> instruction: 0x0002c8bc
   1b7c0:	andeq	r5, r2, r8, lsr #18
   1b7c4:	andeq	ip, r2, r4, lsr #17
   1b7c8:	muleq	r2, r8, r8
   1b7cc:	muleq	r2, r4, r8
   1b7d0:	andeq	ip, r2, r8, lsl #16
   1b7d4:	andeq	ip, r2, r4, lsr r8
   1b7d8:	andeq	ip, r2, ip, asr #16
   1b7dc:	muleq	r2, r0, r3
   1b7e0:	andeq	r4, r2, r4, lsl r3
   1b7e4:	andeq	r4, r2, r8, ror #6
   1b7e8:	andeq	ip, r2, r4, lsr #8
   1b7ec:	andeq	ip, r2, r8, asr #14
   1b7f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b7f4:	sub	sp, sp, #260	; 0x104
   1b7f8:	mov	r4, r1
   1b7fc:	add	r9, sp, #36	; 0x24
   1b800:	mov	r7, r0
   1b804:	mov	r5, r2
   1b808:	mov	r0, r9
   1b80c:	mov	r2, #220	; 0xdc
   1b810:	mov	r1, #0
   1b814:	mov	r8, r3
   1b818:	bl	13f94 <memset@plt>
   1b81c:	ldr	r4, [r4]
   1b820:	ldr	sl, [pc, #964]	; 1bbec <__flatcc_gen_sort@@Base+0x1020>
   1b824:	cmp	r4, #0
   1b828:	add	sl, pc, sl
   1b82c:	beq	1b938 <__flatcc_gen_sort@@Base+0xd6c>
   1b830:	ldr	r2, [pc, #952]	; 1bbf0 <__flatcc_gen_sort@@Base+0x1024>
   1b834:	ldr	r3, [pc, #952]	; 1bbf4 <__flatcc_gen_sort@@Base+0x1028>
   1b838:	add	r2, pc, r2
   1b83c:	str	r2, [sp, #12]
   1b840:	ldr	r2, [pc, #944]	; 1bbf8 <__flatcc_gen_sort@@Base+0x102c>
   1b844:	ldr	r6, [pc, #944]	; 1bbfc <__flatcc_gen_sort@@Base+0x1030>
   1b848:	add	r2, pc, r2
   1b84c:	str	r2, [sp, #16]
   1b850:	ldr	r2, [pc, #936]	; 1bc00 <__flatcc_gen_sort@@Base+0x1034>
   1b854:	ldr	fp, [pc, #936]	; 1bc04 <__flatcc_gen_sort@@Base+0x1038>
   1b858:	add	r2, pc, r2
   1b85c:	str	r2, [sp, #20]
   1b860:	ldr	r2, [pc, #928]	; 1bc08 <__flatcc_gen_sort@@Base+0x103c>
   1b864:	add	r3, pc, r3
   1b868:	add	r2, pc, r2
   1b86c:	str	r2, [sp, #24]
   1b870:	ldr	r2, [pc, #916]	; 1bc0c <__flatcc_gen_sort@@Base+0x1040>
   1b874:	add	r6, pc, r6
   1b878:	add	r2, pc, r2
   1b87c:	str	r2, [sp, #28]
   1b880:	ldr	r2, [sp, #296]	; 0x128
   1b884:	add	fp, pc, fp
   1b888:	cmp	r2, #0
   1b88c:	moveq	r6, r3
   1b890:	ldrh	r3, [r4, #72]	; 0x48
   1b894:	tst	r3, #4
   1b898:	bne	1b92c <__flatcc_gen_sort@@Base+0xd60>
   1b89c:	ldrh	r3, [r4, #24]
   1b8a0:	cmp	r3, #8
   1b8a4:	beq	1b998 <__flatcc_gen_sort@@Base+0xdcc>
   1b8a8:	cmp	r3, #14
   1b8ac:	bne	1b944 <__flatcc_gen_sort@@Base+0xd78>
   1b8b0:	ldr	r1, [r4, #16]
   1b8b4:	ldrh	r3, [r1, #8]
   1b8b8:	cmp	r3, #1
   1b8bc:	beq	1ba58 <__flatcc_gen_sort@@Base+0xe8c>
   1b8c0:	cmp	r8, #0
   1b8c4:	beq	1b900 <__flatcc_gen_sort@@Base+0xd34>
   1b8c8:	cmp	r5, #0
   1b8cc:	beq	1baa0 <__flatcc_gen_sort@@Base+0xed4>
   1b8d0:	tst	r5, #3
   1b8d4:	bne	1b8e4 <__flatcc_gen_sort@@Base+0xd18>
   1b8d8:	sub	r3, r8, r5
   1b8dc:	cmp	r3, #2
   1b8e0:	bgt	1bbb0 <__flatcc_gen_sort@@Base+0xfe4>
   1b8e4:	ldr	r0, [pc, #804]	; 1bc10 <__flatcc_gen_sort@@Base+0x1044>
   1b8e8:	mov	r1, #1
   1b8ec:	ldr	r3, [r7, #204]	; 0xcc
   1b8f0:	mov	r2, #2
   1b8f4:	add	r0, pc, r0
   1b8f8:	bl	13f10 <fwrite@plt>
   1b8fc:	ldr	r1, [r4, #16]
   1b900:	ldr	r0, [r1, #12]
   1b904:	mov	r2, r9
   1b908:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   1b90c:	ldr	r1, [pc, #768]	; 1bc14 <__flatcc_gen_sort@@Base+0x1048>
   1b910:	add	ip, r5, #1
   1b914:	mov	r3, r5
   1b918:	mov	r2, r9
   1b91c:	add	r1, pc, r1
   1b920:	ldr	r0, [r7, #204]	; 0xcc
   1b924:	mov	r5, ip
   1b928:	bl	13f7c <fprintf@plt>
   1b92c:	ldr	r4, [r4]
   1b930:	cmp	r4, #0
   1b934:	bne	1b890 <__flatcc_gen_sort@@Base+0xcc4>
   1b938:	mov	r0, r5
   1b93c:	add	sp, sp, #260	; 0x104
   1b940:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b944:	ldr	r2, [pc, #716]	; 1bc18 <__flatcc_gen_sort@@Base+0x104c>
   1b948:	ldr	r3, [pc, #716]	; 1bc1c <__flatcc_gen_sort@@Base+0x1050>
   1b94c:	ldr	r4, [pc, #716]	; 1bc20 <__flatcc_gen_sort@@Base+0x1054>
   1b950:	ldr	r1, [sl, r2]
   1b954:	add	r3, pc, r3
   1b958:	str	r3, [sp]
   1b95c:	ldr	r0, [r1]
   1b960:	ldr	r1, [pc, #700]	; 1bc24 <__flatcc_gen_sort@@Base+0x1058>
   1b964:	add	r4, pc, r4
   1b968:	mov	r2, r4
   1b96c:	ldr	r3, [pc, #692]	; 1bc28 <__flatcc_gen_sort@@Base+0x105c>
   1b970:	add	r1, pc, r1
   1b974:	bl	13f7c <fprintf@plt>
   1b978:	ldr	r3, [pc, #684]	; 1bc2c <__flatcc_gen_sort@@Base+0x1060>
   1b97c:	ldr	r0, [pc, #684]	; 1bc30 <__flatcc_gen_sort@@Base+0x1064>
   1b980:	add	r3, pc, r3
   1b984:	mov	r1, r4
   1b988:	add	r3, r3, #92	; 0x5c
   1b98c:	ldr	r2, [pc, #660]	; 1bc28 <__flatcc_gen_sort@@Base+0x105c>
   1b990:	add	r0, pc, r0
   1b994:	bl	14030 <__assert_fail@plt>
   1b998:	cmp	r8, #0
   1b99c:	beq	1b9c4 <__flatcc_gen_sort@@Base+0xdf8>
   1b9a0:	cmp	r5, #0
   1b9a4:	bne	1ba0c <__flatcc_gen_sort@@Base+0xe40>
   1b9a8:	cmp	r8, #4
   1b9ac:	ble	1ba14 <__flatcc_gen_sort@@Base+0xe48>
   1b9b0:	ldr	r1, [pc, #636]	; 1bc34 <__flatcc_gen_sort@@Base+0x1068>
   1b9b4:	mov	r2, r6
   1b9b8:	add	r1, pc, r1
   1b9bc:	ldr	r0, [r7, #204]	; 0xcc
   1b9c0:	bl	13f7c <fprintf@plt>
   1b9c4:	ldr	r3, [r4, #16]
   1b9c8:	cmp	r3, #5
   1b9cc:	beq	1ba38 <__flatcc_gen_sort@@Base+0xe6c>
   1b9d0:	sub	r3, r3, #1
   1b9d4:	cmp	r3, #10
   1b9d8:	addls	pc, pc, r3, lsl #2
   1b9dc:	b	1bb5c <__flatcc_gen_sort@@Base+0xf90>
   1b9e0:	b	1bbe0 <__flatcc_gen_sort@@Base+0x1014>
   1b9e4:	b	1bbcc <__flatcc_gen_sort@@Base+0x1000>
   1b9e8:	b	1bb50 <__flatcc_gen_sort@@Base+0xf84>
   1b9ec:	b	1bac4 <__flatcc_gen_sort@@Base+0xef8>
   1b9f0:	b	1bb5c <__flatcc_gen_sort@@Base+0xf90>
   1b9f4:	b	1bb00 <__flatcc_gen_sort@@Base+0xf34>
   1b9f8:	b	1bb14 <__flatcc_gen_sort@@Base+0xf48>
   1b9fc:	b	1bb28 <__flatcc_gen_sort@@Base+0xf5c>
   1ba00:	b	1bb3c <__flatcc_gen_sort@@Base+0xf70>
   1ba04:	b	1baec <__flatcc_gen_sort@@Base+0xf20>
   1ba08:	b	1bad8 <__flatcc_gen_sort@@Base+0xf0c>
   1ba0c:	tst	r5, #3
   1ba10:	beq	1ba7c <__flatcc_gen_sort@@Base+0xeb0>
   1ba14:	ldr	r0, [pc, #540]	; 1bc38 <__flatcc_gen_sort@@Base+0x106c>
   1ba18:	ldr	r3, [r7, #204]	; 0xcc
   1ba1c:	mov	r2, #2
   1ba20:	mov	r1, #1
   1ba24:	add	r0, pc, r0
   1ba28:	bl	13f10 <fwrite@plt>
   1ba2c:	ldr	r3, [r4, #16]
   1ba30:	cmp	r3, #5
   1ba34:	bne	1b9d0 <__flatcc_gen_sort@@Base+0xe04>
   1ba38:	ldr	r3, [sp, #12]
   1ba3c:	mov	r2, r7
   1ba40:	ldr	r0, [r7, #204]	; 0xcc
   1ba44:	mov	r1, fp
   1ba48:	str	r5, [sp]
   1ba4c:	add	r5, r5, #1
   1ba50:	bl	13f7c <fprintf@plt>
   1ba54:	b	1b92c <__flatcc_gen_sort@@Base+0xd60>
   1ba58:	ldr	r3, [sp, #296]	; 0x128
   1ba5c:	mov	r2, r5
   1ba60:	str	r3, [sp]
   1ba64:	add	r1, r1, #20
   1ba68:	mov	r3, r8
   1ba6c:	mov	r0, r7
   1ba70:	bl	1b7f0 <__flatcc_gen_sort@@Base+0xc24>
   1ba74:	mov	r5, r0
   1ba78:	b	1b92c <__flatcc_gen_sort@@Base+0xd60>
   1ba7c:	sub	r3, r8, r5
   1ba80:	cmp	r3, #2
   1ba84:	ble	1ba14 <__flatcc_gen_sort@@Base+0xe48>
   1ba88:	ldr	r1, [pc, #428]	; 1bc3c <__flatcc_gen_sort@@Base+0x1070>
   1ba8c:	mov	r2, r6
   1ba90:	add	r1, pc, r1
   1ba94:	ldr	r0, [r7, #204]	; 0xcc
   1ba98:	bl	13f7c <fprintf@plt>
   1ba9c:	b	1b9c4 <__flatcc_gen_sort@@Base+0xdf8>
   1baa0:	cmp	r8, #4
   1baa4:	ble	1b8e4 <__flatcc_gen_sort@@Base+0xd18>
   1baa8:	ldr	r1, [pc, #400]	; 1bc40 <__flatcc_gen_sort@@Base+0x1074>
   1baac:	mov	r2, r6
   1bab0:	add	r1, pc, r1
   1bab4:	ldr	r0, [r7, #204]	; 0xcc
   1bab8:	bl	13f7c <fprintf@plt>
   1babc:	ldr	r1, [r4, #16]
   1bac0:	b	1b900 <__flatcc_gen_sort@@Base+0xd34>
   1bac4:	ldr	r2, [pc, #376]	; 1bc44 <__flatcc_gen_sort@@Base+0x1078>
   1bac8:	ldr	r3, [pc, #376]	; 1bc48 <__flatcc_gen_sort@@Base+0x107c>
   1bacc:	add	r2, pc, r2
   1bad0:	add	r3, pc, r3
   1bad4:	b	1ba40 <__flatcc_gen_sort@@Base+0xe74>
   1bad8:	ldr	r2, [pc, #364]	; 1bc4c <__flatcc_gen_sort@@Base+0x1080>
   1badc:	ldr	r3, [pc, #364]	; 1bc50 <__flatcc_gen_sort@@Base+0x1084>
   1bae0:	add	r2, pc, r2
   1bae4:	add	r3, pc, r3
   1bae8:	b	1ba40 <__flatcc_gen_sort@@Base+0xe74>
   1baec:	ldr	r2, [pc, #352]	; 1bc54 <__flatcc_gen_sort@@Base+0x1088>
   1baf0:	ldr	r3, [pc, #352]	; 1bc58 <__flatcc_gen_sort@@Base+0x108c>
   1baf4:	add	r2, pc, r2
   1baf8:	add	r3, pc, r3
   1bafc:	b	1ba40 <__flatcc_gen_sort@@Base+0xe74>
   1bb00:	ldr	r2, [pc, #340]	; 1bc5c <__flatcc_gen_sort@@Base+0x1090>
   1bb04:	ldr	r3, [pc, #340]	; 1bc60 <__flatcc_gen_sort@@Base+0x1094>
   1bb08:	add	r2, pc, r2
   1bb0c:	add	r3, pc, r3
   1bb10:	b	1ba40 <__flatcc_gen_sort@@Base+0xe74>
   1bb14:	ldr	r2, [pc, #328]	; 1bc64 <__flatcc_gen_sort@@Base+0x1098>
   1bb18:	ldr	r3, [pc, #328]	; 1bc68 <__flatcc_gen_sort@@Base+0x109c>
   1bb1c:	add	r2, pc, r2
   1bb20:	add	r3, pc, r3
   1bb24:	b	1ba40 <__flatcc_gen_sort@@Base+0xe74>
   1bb28:	ldr	r2, [pc, #316]	; 1bc6c <__flatcc_gen_sort@@Base+0x10a0>
   1bb2c:	ldr	r3, [pc, #316]	; 1bc70 <__flatcc_gen_sort@@Base+0x10a4>
   1bb30:	add	r2, pc, r2
   1bb34:	add	r3, pc, r3
   1bb38:	b	1ba40 <__flatcc_gen_sort@@Base+0xe74>
   1bb3c:	ldr	r2, [pc, #304]	; 1bc74 <__flatcc_gen_sort@@Base+0x10a8>
   1bb40:	ldr	r3, [pc, #304]	; 1bc78 <__flatcc_gen_sort@@Base+0x10ac>
   1bb44:	add	r2, pc, r2
   1bb48:	add	r3, pc, r3
   1bb4c:	b	1ba40 <__flatcc_gen_sort@@Base+0xe74>
   1bb50:	ldr	r2, [sp, #16]
   1bb54:	ldr	r3, [sp, #20]
   1bb58:	b	1ba40 <__flatcc_gen_sort@@Base+0xe74>
   1bb5c:	ldr	r2, [pc, #180]	; 1bc18 <__flatcc_gen_sort@@Base+0x104c>
   1bb60:	ldr	r3, [pc, #276]	; 1bc7c <__flatcc_gen_sort@@Base+0x10b0>
   1bb64:	ldr	r4, [pc, #276]	; 1bc80 <__flatcc_gen_sort@@Base+0x10b4>
   1bb68:	ldr	r1, [sl, r2]
   1bb6c:	add	r3, pc, r3
   1bb70:	str	r3, [sp]
   1bb74:	ldr	r0, [r1]
   1bb78:	ldr	r1, [pc, #260]	; 1bc84 <__flatcc_gen_sort@@Base+0x10b8>
   1bb7c:	add	r4, pc, r4
   1bb80:	mov	r2, r4
   1bb84:	mov	r3, #141	; 0x8d
   1bb88:	add	r1, pc, r1
   1bb8c:	bl	13f7c <fprintf@plt>
   1bb90:	ldr	r3, [pc, #240]	; 1bc88 <__flatcc_gen_sort@@Base+0x10bc>
   1bb94:	ldr	r0, [pc, #240]	; 1bc8c <__flatcc_gen_sort@@Base+0x10c0>
   1bb98:	add	r3, pc, r3
   1bb9c:	mov	r1, r4
   1bba0:	add	r3, r3, #72	; 0x48
   1bba4:	mov	r2, #141	; 0x8d
   1bba8:	add	r0, pc, r0
   1bbac:	bl	14030 <__assert_fail@plt>
   1bbb0:	ldr	r1, [pc, #216]	; 1bc90 <__flatcc_gen_sort@@Base+0x10c4>
   1bbb4:	mov	r2, r6
   1bbb8:	add	r1, pc, r1
   1bbbc:	ldr	r0, [r7, #204]	; 0xcc
   1bbc0:	bl	13f7c <fprintf@plt>
   1bbc4:	ldr	r1, [r4, #16]
   1bbc8:	b	1b900 <__flatcc_gen_sort@@Base+0xd34>
   1bbcc:	ldr	r2, [pc, #192]	; 1bc94 <__flatcc_gen_sort@@Base+0x10c8>
   1bbd0:	ldr	r3, [pc, #192]	; 1bc98 <__flatcc_gen_sort@@Base+0x10cc>
   1bbd4:	add	r2, pc, r2
   1bbd8:	add	r3, pc, r3
   1bbdc:	b	1ba40 <__flatcc_gen_sort@@Base+0xe74>
   1bbe0:	ldr	r2, [sp, #24]
   1bbe4:	ldr	r3, [sp, #28]
   1bbe8:	b	1ba40 <__flatcc_gen_sort@@Base+0xe74>
   1bbec:	ldrdeq	lr, [r4], -r0
   1bbf0:	ldrdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   1bbf4:	andeq	r5, r2, ip, asr r6
   1bbf8:	andeq	sp, r2, r0, lsr #29
   1bbfc:	muleq	r2, r4, sp
   1bc00:	andeq	r4, r2, r0, lsr #1
   1bc04:	andeq	ip, r2, ip, asr r7
   1bc08:	andeq	sp, r2, r0, lsl #29
   1bc0c:	andeq	r4, r2, r8, rrx
   1bc10:	andeq	ip, r2, r4, asr r5
   1bc14:			; <UNDEFINED> instruction: 0x0002c6b4
   1bc18:	muleq	r0, ip, r0
   1bc1c:	muleq	r2, r8, r6
   1bc20:	andeq	ip, r2, r0, asr #6
   1bc24:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   1bc28:	andeq	r0, r0, r2, asr r3
   1bc2c:			; <UNDEFINED> instruction: 0x0002c1b0
   1bc30:	ldrdeq	ip, [r2], -r4
   1bc34:	andeq	ip, r2, r8, lsl #9
   1bc38:	andeq	ip, r2, r4, lsr #8
   1bc3c:			; <UNDEFINED> instruction: 0x0002c3b0
   1bc40:	muleq	r2, r0, r3
   1bc44:	andeq	sp, r2, ip, lsl ip
   1bc48:	andeq	r3, r2, r4, lsr lr
   1bc4c:	andeq	sp, r2, r8, lsl #24
   1bc50:	andeq	r3, r2, r0, asr lr
   1bc54:	strdeq	sp, [r2], -r4
   1bc58:	andeq	r3, r2, r4, asr #28
   1bc5c:	andeq	sp, r2, r0, ror #23
   1bc60:	andeq	r3, r2, r8, lsl #28
   1bc64:	andeq	sp, r2, ip, asr #23
   1bc68:	strdeq	r3, [r2], -ip
   1bc6c:			; <UNDEFINED> instruction: 0x0002dbb8
   1bc70:	strdeq	r3, [r2], -r0
   1bc74:	andeq	sp, r2, r4, lsr #23
   1bc78:	andeq	r3, r2, r4, ror #27
   1bc7c:	andeq	r3, r2, r4, lsl #30
   1bc80:	andeq	r3, r2, r8, lsl #29
   1bc84:	ldrdeq	r3, [r2], -ip
   1bc88:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   1bc8c:			; <UNDEFINED> instruction: 0x0002c2bc
   1bc90:	andeq	ip, r2, r8, lsl #5
   1bc94:	andeq	sp, r2, r4, lsl fp
   1bc98:	andeq	r3, r2, r4, lsl sp
   1bc9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bca0:	sub	sp, sp, #644	; 0x284
   1bca4:	add	r8, sp, #200	; 0xc8
   1bca8:	mov	r4, r1
   1bcac:	mov	r2, #220	; 0xdc
   1bcb0:	mov	r1, #0
   1bcb4:	mov	r5, r0
   1bcb8:	add	r9, sp, #420	; 0x1a4
   1bcbc:	mov	r0, r8
   1bcc0:	bl	13f94 <memset@plt>
   1bcc4:	mov	r2, #220	; 0xdc
   1bcc8:	mov	r1, #0
   1bccc:	mov	r0, r9
   1bcd0:	bl	13f94 <memset@plt>
   1bcd4:	mov	r1, r4
   1bcd8:	ldr	r0, [r4, #12]
   1bcdc:	mov	r2, r8
   1bce0:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   1bce4:	ldr	r4, [r4, #20]
   1bce8:	ldr	fp, [pc, #3920]	; 1cc40 <__flatcc_gen_sort@@Base+0x2074>
   1bcec:	cmp	r4, #0
   1bcf0:	add	fp, pc, fp
   1bcf4:	beq	1bdb0 <__flatcc_gen_sort@@Base+0x11e4>
   1bcf8:	ldr	r3, [pc, #3908]	; 1cc44 <__flatcc_gen_sort@@Base+0x2078>
   1bcfc:	ldr	sl, [pc, #3908]	; 1cc48 <__flatcc_gen_sort@@Base+0x207c>
   1bd00:	add	r3, pc, r3
   1bd04:	str	r3, [sp, #60]	; 0x3c
   1bd08:	ldr	r3, [pc, #3900]	; 1cc4c <__flatcc_gen_sort@@Base+0x2080>
   1bd0c:	add	sl, pc, sl
   1bd10:	add	r3, pc, r3
   1bd14:	str	r3, [sp, #64]	; 0x40
   1bd18:	ldr	r3, [pc, #3888]	; 1cc50 <__flatcc_gen_sort@@Base+0x2084>
   1bd1c:	add	r3, pc, r3
   1bd20:	str	r3, [sp, #72]	; 0x48
   1bd24:	ldr	r3, [pc, #3880]	; 1cc54 <__flatcc_gen_sort@@Base+0x2088>
   1bd28:	add	r3, pc, r3
   1bd2c:	str	r3, [sp, #68]	; 0x44
   1bd30:	ldr	r3, [pc, #3872]	; 1cc58 <__flatcc_gen_sort@@Base+0x208c>
   1bd34:	add	r3, pc, r3
   1bd38:	str	r3, [sp, #76]	; 0x4c
   1bd3c:	ldrh	r2, [r4, #72]	; 0x48
   1bd40:	ldr	r3, [r4, #4]
   1bd44:	tst	r2, #4
   1bd48:	ldm	r3, {r6, r7}
   1bd4c:	bne	1bd88 <__flatcc_gen_sort@@Base+0x11bc>
   1bd50:	ldrh	r3, [r4, #24]
   1bd54:	sub	r3, r3, #7
   1bd58:	cmp	r3, #8
   1bd5c:	addls	pc, pc, r3, lsl #2
   1bd60:	b	1bf28 <__flatcc_gen_sort@@Base+0x135c>
   1bd64:	b	1bee0 <__flatcc_gen_sort@@Base+0x1314>
   1bd68:	b	1be98 <__flatcc_gen_sort@@Base+0x12cc>
   1bd6c:	b	1be68 <__flatcc_gen_sort@@Base+0x129c>
   1bd70:	b	1be38 <__flatcc_gen_sort@@Base+0x126c>
   1bd74:	b	1bf28 <__flatcc_gen_sort@@Base+0x135c>
   1bd78:	b	1bf28 <__flatcc_gen_sort@@Base+0x135c>
   1bd7c:	b	1bf28 <__flatcc_gen_sort@@Base+0x135c>
   1bd80:	b	1be00 <__flatcc_gen_sort@@Base+0x1234>
   1bd84:	b	1bdc8 <__flatcc_gen_sort@@Base+0x11fc>
   1bd88:	ldr	r1, [pc, #3788]	; 1cc5c <__flatcc_gen_sort@@Base+0x2090>
   1bd8c:	ldr	r0, [r5, #204]	; 0xcc
   1bd90:	mov	r3, r7
   1bd94:	str	r6, [sp]
   1bd98:	mov	r2, r8
   1bd9c:	add	r1, pc, r1
   1bda0:	bl	13f7c <fprintf@plt>
   1bda4:	ldr	r4, [r4]
   1bda8:	cmp	r4, #0
   1bdac:	bne	1bd3c <__flatcc_gen_sort@@Base+0x1170>
   1bdb0:	ldr	r1, [r5, #204]	; 0xcc
   1bdb4:	mov	r0, #10
   1bdb8:	bl	13fdc <fputc@plt>
   1bdbc:	mov	r0, #0
   1bdc0:	add	sp, sp, #644	; 0x284
   1bdc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1bdc8:	ldr	r1, [r4, #16]
   1bdcc:	mov	r2, r9
   1bdd0:	ldr	r0, [r1, #12]
   1bdd4:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   1bdd8:	ldr	r2, [r4, #16]
   1bddc:	ldrh	r3, [r2, #8]
   1bde0:	cmp	r3, #4
   1bde4:	addls	pc, pc, r3, lsl #2
   1bde8:	b	1c1b4 <__flatcc_gen_sort@@Base+0x15e8>
   1bdec:	b	1c124 <__flatcc_gen_sort@@Base+0x1558>
   1bdf0:	b	1c0e4 <__flatcc_gen_sort@@Base+0x1518>
   1bdf4:	b	1c1b4 <__flatcc_gen_sort@@Base+0x15e8>
   1bdf8:	b	1c0b0 <__flatcc_gen_sort@@Base+0x14e4>
   1bdfc:	b	1c078 <__flatcc_gen_sort@@Base+0x14ac>
   1be00:	ldr	r1, [r4, #16]
   1be04:	mov	r2, r9
   1be08:	ldr	r0, [r1, #12]
   1be0c:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   1be10:	ldr	r2, [r4, #16]
   1be14:	ldrh	r3, [r2, #8]
   1be18:	cmp	r3, #4
   1be1c:	addls	pc, pc, r3, lsl #2
   1be20:	b	1c160 <__flatcc_gen_sort@@Base+0x1594>
   1be24:	b	1c044 <__flatcc_gen_sort@@Base+0x1478>
   1be28:	b	1c000 <__flatcc_gen_sort@@Base+0x1434>
   1be2c:	b	1c160 <__flatcc_gen_sort@@Base+0x1594>
   1be30:	b	1bfd8 <__flatcc_gen_sort@@Base+0x140c>
   1be34:	b	1bf7c <__flatcc_gen_sort@@Base+0x13b0>
   1be38:	str	r6, [sp, #20]
   1be3c:	str	r7, [sp, #16]
   1be40:	str	r8, [sp, #12]
   1be44:	str	r5, [sp, #8]
   1be48:	ldrd	r6, [r4, #96]	; 0x60
   1be4c:	ldr	r1, [pc, #3596]	; 1cc60 <__flatcc_gen_sort@@Base+0x2094>
   1be50:	ldr	r0, [r5, #204]	; 0xcc
   1be54:	mov	r2, r5
   1be58:	strd	r6, [sp]
   1be5c:	add	r1, pc, r1
   1be60:	bl	13f7c <fprintf@plt>
   1be64:	b	1bda4 <__flatcc_gen_sort@@Base+0x11d8>
   1be68:	str	r6, [sp, #20]
   1be6c:	str	r7, [sp, #16]
   1be70:	str	r8, [sp, #12]
   1be74:	str	r5, [sp, #8]
   1be78:	ldrd	r6, [r4, #96]	; 0x60
   1be7c:	ldr	r1, [pc, #3552]	; 1cc64 <__flatcc_gen_sort@@Base+0x2098>
   1be80:	ldr	r0, [r5, #204]	; 0xcc
   1be84:	mov	r2, r5
   1be88:	strd	r6, [sp]
   1be8c:	add	r1, pc, r1
   1be90:	bl	13f7c <fprintf@plt>
   1be94:	b	1bda4 <__flatcc_gen_sort@@Base+0x11d8>
   1be98:	ldr	r2, [r4, #16]
   1be9c:	cmp	r2, #5
   1bea0:	beq	1c2c8 <__flatcc_gen_sort@@Base+0x16fc>
   1bea4:	sub	r3, r2, #1
   1bea8:	cmp	r3, #10
   1beac:	addls	pc, pc, r3, lsl #2
   1beb0:	b	1c8cc <__flatcc_gen_sort@@Base+0x1d00>
   1beb4:	b	1c794 <__flatcc_gen_sort@@Base+0x1bc8>
   1beb8:	b	1c6c4 <__flatcc_gen_sort@@Base+0x1af8>
   1bebc:	b	1c72c <__flatcc_gen_sort@@Base+0x1b60>
   1bec0:	b	1c6e8 <__flatcc_gen_sort@@Base+0x1b1c>
   1bec4:	b	1c8cc <__flatcc_gen_sort@@Base+0x1d00>
   1bec8:	b	1c654 <__flatcc_gen_sort@@Base+0x1a88>
   1becc:	b	1c554 <__flatcc_gen_sort@@Base+0x1988>
   1bed0:	b	1c6a0 <__flatcc_gen_sort@@Base+0x1ad4>
   1bed4:	b	1c67c <__flatcc_gen_sort@@Base+0x1ab0>
   1bed8:	b	1c754 <__flatcc_gen_sort@@Base+0x1b88>
   1bedc:	b	1c530 <__flatcc_gen_sort@@Base+0x1964>
   1bee0:	ldr	r3, [r4, #16]
   1bee4:	cmp	r3, #5
   1bee8:	beq	1c208 <__flatcc_gen_sort@@Base+0x163c>
   1beec:	sub	r3, r3, #1
   1bef0:	cmp	r3, #10
   1bef4:	addls	pc, pc, r3, lsl #2
   1bef8:	b	1c920 <__flatcc_gen_sort@@Base+0x1d54>
   1befc:	b	1c5b4 <__flatcc_gen_sort@@Base+0x19e8>
   1bf00:	b	1c778 <__flatcc_gen_sort@@Base+0x1bac>
   1bf04:	b	1c57c <__flatcc_gen_sort@@Base+0x19b0>
   1bf08:	b	1c598 <__flatcc_gen_sort@@Base+0x19cc>
   1bf0c:	b	1c920 <__flatcc_gen_sort@@Base+0x1d54>
   1bf10:	b	1c5e8 <__flatcc_gen_sort@@Base+0x1a1c>
   1bf14:	b	1c710 <__flatcc_gen_sort@@Base+0x1b44>
   1bf18:	b	1c604 <__flatcc_gen_sort@@Base+0x1a38>
   1bf1c:	b	1c620 <__flatcc_gen_sort@@Base+0x1a54>
   1bf20:	b	1c63c <__flatcc_gen_sort@@Base+0x1a70>
   1bf24:	b	1c5d0 <__flatcc_gen_sort@@Base+0x1a04>
   1bf28:	ldr	r2, [pc, #3384]	; 1cc68 <__flatcc_gen_sort@@Base+0x209c>
   1bf2c:	ldr	r3, [pc, #3384]	; 1cc6c <__flatcc_gen_sort@@Base+0x20a0>
   1bf30:	ldr	r4, [pc, #3384]	; 1cc70 <__flatcc_gen_sort@@Base+0x20a4>
   1bf34:	ldr	r1, [fp, r2]
   1bf38:	add	r3, pc, r3
   1bf3c:	str	r3, [sp]
   1bf40:	ldr	r0, [r1]
   1bf44:	ldr	r1, [pc, #3368]	; 1cc74 <__flatcc_gen_sort@@Base+0x20a8>
   1bf48:	add	r4, pc, r4
   1bf4c:	mov	r2, r4
   1bf50:	ldr	r3, [pc, #3360]	; 1cc78 <__flatcc_gen_sort@@Base+0x20ac>
   1bf54:	add	r1, pc, r1
   1bf58:	bl	13f7c <fprintf@plt>
   1bf5c:	ldr	r3, [pc, #3352]	; 1cc7c <__flatcc_gen_sort@@Base+0x20b0>
   1bf60:	ldr	r0, [pc, #3352]	; 1cc80 <__flatcc_gen_sort@@Base+0x20b4>
   1bf64:	add	r3, pc, r3
   1bf68:	mov	r1, r4
   1bf6c:	add	r3, r3, #144	; 0x90
   1bf70:	ldr	r2, [pc, #3328]	; 1cc78 <__flatcc_gen_sort@@Base+0x20ac>
   1bf74:	add	r0, pc, r0
   1bf78:	bl	14030 <__assert_fail@plt>
   1bf7c:	str	r9, [sp, #24]
   1bf80:	str	r6, [sp, #20]
   1bf84:	str	r7, [sp, #16]
   1bf88:	str	r8, [sp, #12]
   1bf8c:	str	r5, [sp, #8]
   1bf90:	ldrd	r0, [r4, #96]	; 0x60
   1bf94:	ldr	r3, [r5, #204]	; 0xcc
   1bf98:	mov	r2, r5
   1bf9c:	strd	r0, [sp]
   1bfa0:	ldr	r1, [pc, #3292]	; 1cc84 <__flatcc_gen_sort@@Base+0x20b8>
   1bfa4:	mov	r0, r3
   1bfa8:	add	r1, pc, r1
   1bfac:	bl	13f7c <fprintf@plt>
   1bfb0:	mov	r3, #0
   1bfb4:	str	r3, [sp, #4]
   1bfb8:	ldr	r1, [r4, #16]
   1bfbc:	mov	r3, r6
   1bfc0:	str	r1, [sp]
   1bfc4:	mov	r2, r7
   1bfc8:	mov	r1, r8
   1bfcc:	mov	r0, r5
   1bfd0:	bl	1ad1c <__flatcc_gen_sort@@Base+0x150>
   1bfd4:	b	1bda4 <__flatcc_gen_sort@@Base+0x11d8>
   1bfd8:	ldrh	r3, [r4, #56]	; 0x38
   1bfdc:	ldr	r2, [r2, #40]	; 0x28
   1bfe0:	sub	r3, r3, #3
   1bfe4:	cmp	r3, #3
   1bfe8:	addls	pc, pc, r3, lsl #2
   1bfec:	b	1d3a0 <__flatcc_gen_sort@@Base+0x27d4>
   1bff0:	b	1c858 <__flatcc_gen_sort@@Base+0x1c8c>
   1bff4:	b	1c824 <__flatcc_gen_sort@@Base+0x1c58>
   1bff8:	b	1c7f0 <__flatcc_gen_sort@@Base+0x1c24>
   1bffc:	b	1c7bc <__flatcc_gen_sort@@Base+0x1bf0>
   1c000:	ldrh	r3, [r4, #74]	; 0x4a
   1c004:	ldr	r0, [r5, #204]	; 0xcc
   1c008:	ldr	r1, [pc, #3192]	; 1cc88 <__flatcc_gen_sort@@Base+0x20bc>
   1c00c:	str	r3, [sp, #40]	; 0x28
   1c010:	ldrd	r2, [r4, #88]	; 0x58
   1c014:	str	r9, [sp, #24]
   1c018:	str	r6, [sp, #20]
   1c01c:	strd	r2, [sp, #32]
   1c020:	str	r7, [sp, #16]
   1c024:	str	r8, [sp, #12]
   1c028:	str	r5, [sp, #8]
   1c02c:	ldrd	r6, [r4, #96]	; 0x60
   1c030:	mov	r2, r5
   1c034:	add	r1, pc, r1
   1c038:	strd	r6, [sp]
   1c03c:	bl	13f7c <fprintf@plt>
   1c040:	b	1bda4 <__flatcc_gen_sort@@Base+0x11d8>
   1c044:	str	r9, [sp, #24]
   1c048:	str	r6, [sp, #20]
   1c04c:	str	r7, [sp, #16]
   1c050:	str	r8, [sp, #12]
   1c054:	str	r5, [sp, #8]
   1c058:	ldrd	r6, [r4, #96]	; 0x60
   1c05c:	ldr	r1, [pc, #3112]	; 1cc8c <__flatcc_gen_sort@@Base+0x20c0>
   1c060:	ldr	r0, [r5, #204]	; 0xcc
   1c064:	mov	r2, r5
   1c068:	strd	r6, [sp]
   1c06c:	add	r1, pc, r1
   1c070:	bl	13f7c <fprintf@plt>
   1c074:	b	1bda4 <__flatcc_gen_sort@@Base+0x11d8>
   1c078:	str	r9, [sp, #24]
   1c07c:	str	r6, [sp, #20]
   1c080:	str	r7, [sp, #16]
   1c084:	str	r8, [sp, #12]
   1c088:	str	r5, [sp, #8]
   1c08c:	ldrd	r0, [r4, #96]	; 0x60
   1c090:	ldr	r3, [r5, #204]	; 0xcc
   1c094:	mov	r2, r5
   1c098:	strd	r0, [sp]
   1c09c:	mov	r0, r3
   1c0a0:	ldr	r1, [sp, #60]	; 0x3c
   1c0a4:	bl	13f7c <fprintf@plt>
   1c0a8:	mov	r3, #1
   1c0ac:	b	1bfb4 <__flatcc_gen_sort@@Base+0x13e8>
   1c0b0:	str	r9, [sp, #28]
   1c0b4:	str	r9, [sp, #24]
   1c0b8:	str	r6, [sp, #20]
   1c0bc:	str	r7, [sp, #16]
   1c0c0:	str	r8, [sp, #12]
   1c0c4:	str	r5, [sp, #8]
   1c0c8:	ldrd	r6, [r4, #96]	; 0x60
   1c0cc:	ldr	r0, [r5, #204]	; 0xcc
   1c0d0:	mov	r2, r5
   1c0d4:	strd	r6, [sp]
   1c0d8:	mov	r1, sl
   1c0dc:	bl	13f7c <fprintf@plt>
   1c0e0:	b	1bda4 <__flatcc_gen_sort@@Base+0x11d8>
   1c0e4:	ldrh	r3, [r2, #10]
   1c0e8:	tst	r3, #8
   1c0ec:	bne	1d370 <__flatcc_gen_sort@@Base+0x27a4>
   1c0f0:	str	r9, [sp, #28]
   1c0f4:	str	r9, [sp, #24]
   1c0f8:	str	r6, [sp, #20]
   1c0fc:	str	r7, [sp, #16]
   1c100:	str	r8, [sp, #12]
   1c104:	str	r5, [sp, #8]
   1c108:	ldrd	r6, [r4, #96]	; 0x60
   1c10c:	ldr	r0, [r5, #204]	; 0xcc
   1c110:	mov	r2, r5
   1c114:	strd	r6, [sp]
   1c118:	ldr	r1, [sp, #68]	; 0x44
   1c11c:	bl	13f7c <fprintf@plt>
   1c120:	b	1bda4 <__flatcc_gen_sort@@Base+0x11d8>
   1c124:	ldrh	r3, [r2, #10]
   1c128:	tst	r3, #8
   1c12c:	bne	1d388 <__flatcc_gen_sort@@Base+0x27bc>
   1c130:	str	r9, [sp, #24]
   1c134:	str	r6, [sp, #20]
   1c138:	str	r7, [sp, #16]
   1c13c:	str	r8, [sp, #12]
   1c140:	str	r5, [sp, #8]
   1c144:	ldrd	r6, [r4, #96]	; 0x60
   1c148:	ldr	r0, [r5, #204]	; 0xcc
   1c14c:	mov	r2, r5
   1c150:	strd	r6, [sp]
   1c154:	ldr	r1, [sp, #64]	; 0x40
   1c158:	bl	13f7c <fprintf@plt>
   1c15c:	b	1bda4 <__flatcc_gen_sort@@Base+0x11d8>
   1c160:	ldr	r2, [pc, #2816]	; 1cc68 <__flatcc_gen_sort@@Base+0x209c>
   1c164:	ldr	r3, [pc, #2852]	; 1cc90 <__flatcc_gen_sort@@Base+0x20c4>
   1c168:	ldr	r4, [pc, #2852]	; 1cc94 <__flatcc_gen_sort@@Base+0x20c8>
   1c16c:	ldr	r1, [fp, r2]
   1c170:	add	r3, pc, r3
   1c174:	str	r3, [sp]
   1c178:	ldr	r0, [r1]
   1c17c:	ldr	r1, [pc, #2836]	; 1cc98 <__flatcc_gen_sort@@Base+0x20cc>
   1c180:	add	r4, pc, r4
   1c184:	mov	r2, r4
   1c188:	mov	r3, #1472	; 0x5c0
   1c18c:	add	r1, pc, r1
   1c190:	bl	13f7c <fprintf@plt>
   1c194:	ldr	r3, [pc, #2816]	; 1cc9c <__flatcc_gen_sort@@Base+0x20d0>
   1c198:	ldr	r0, [pc, #2816]	; 1cca0 <__flatcc_gen_sort@@Base+0x20d4>
   1c19c:	add	r3, pc, r3
   1c1a0:	mov	r1, r4
   1c1a4:	add	r3, r3, #144	; 0x90
   1c1a8:	mov	r2, #1472	; 0x5c0
   1c1ac:	add	r0, pc, r0
   1c1b0:	bl	14030 <__assert_fail@plt>
   1c1b4:	ldr	r2, [pc, #2732]	; 1cc68 <__flatcc_gen_sort@@Base+0x209c>
   1c1b8:	ldr	r3, [pc, #2788]	; 1cca4 <__flatcc_gen_sort@@Base+0x20d8>
   1c1bc:	ldr	r4, [pc, #2788]	; 1cca8 <__flatcc_gen_sort@@Base+0x20dc>
   1c1c0:	ldr	r1, [fp, r2]
   1c1c4:	add	r3, pc, r3
   1c1c8:	str	r3, [sp]
   1c1cc:	ldr	r0, [r1]
   1c1d0:	ldr	r1, [pc, #2772]	; 1ccac <__flatcc_gen_sort@@Base+0x20e0>
   1c1d4:	add	r4, pc, r4
   1c1d8:	mov	r2, r4
   1c1dc:	ldr	r3, [pc, #2764]	; 1ccb0 <__flatcc_gen_sort@@Base+0x20e4>
   1c1e0:	add	r1, pc, r1
   1c1e4:	bl	13f7c <fprintf@plt>
   1c1e8:	ldr	r3, [pc, #2756]	; 1ccb4 <__flatcc_gen_sort@@Base+0x20e8>
   1c1ec:	ldr	r0, [pc, #2756]	; 1ccb8 <__flatcc_gen_sort@@Base+0x20ec>
   1c1f0:	add	r3, pc, r3
   1c1f4:	mov	r1, r4
   1c1f8:	add	r3, r3, #144	; 0x90
   1c1fc:	ldr	r2, [pc, #2732]	; 1ccb0 <__flatcc_gen_sort@@Base+0x20e4>
   1c200:	add	r0, pc, r0
   1c204:	bl	14030 <__assert_fail@plt>
   1c208:	ldr	r3, [pc, #2732]	; 1ccbc <__flatcc_gen_sort@@Base+0x20f0>
   1c20c:	ldr	r2, [pc, #2732]	; 1ccc0 <__flatcc_gen_sort@@Base+0x20f4>
   1c210:	mov	r1, r5
   1c214:	add	r3, pc, r3
   1c218:	add	r2, pc, r2
   1c21c:	str	r2, [sp, #28]
   1c220:	str	r3, [sp, #36]	; 0x24
   1c224:	str	r1, [sp, #32]
   1c228:	str	r5, [sp, #24]
   1c22c:	str	r6, [sp, #20]
   1c230:	str	r7, [sp, #16]
   1c234:	str	r8, [sp, #12]
   1c238:	str	r5, [sp, #8]
   1c23c:	ldrd	r0, [r4, #96]	; 0x60
   1c240:	ldr	r3, [r5, #204]	; 0xcc
   1c244:	mov	r2, r5
   1c248:	strd	r0, [sp]
   1c24c:	ldr	r1, [pc, #2672]	; 1ccc4 <__flatcc_gen_sort@@Base+0x20f8>
   1c250:	mov	r0, r3
   1c254:	add	r1, pc, r1
   1c258:	bl	13f7c <fprintf@plt>
   1c25c:	ldr	r1, [r4, #104]	; 0x68
   1c260:	cmp	r1, #0
   1c264:	beq	1bda4 <__flatcc_gen_sort@@Base+0x11d8>
   1c268:	ldrh	r3, [r1, #8]
   1c26c:	cmp	r3, #0
   1c270:	beq	1c434 <__flatcc_gen_sort@@Base+0x1868>
   1c274:	cmp	r3, #1
   1c278:	bne	1c3e0 <__flatcc_gen_sort@@Base+0x1814>
   1c27c:	mov	r2, r9
   1c280:	ldr	r0, [r1, #12]
   1c284:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   1c288:	str	r9, [sp, #24]
   1c28c:	str	r9, [sp, #20]
   1c290:	ldr	r2, [r4, #104]	; 0x68
   1c294:	ldr	r1, [pc, #2604]	; 1ccc8 <__flatcc_gen_sort@@Base+0x20fc>
   1c298:	ldr	r0, [r5, #204]	; 0xcc
   1c29c:	ldrh	r2, [r2, #104]	; 0x68
   1c2a0:	mov	r3, r5
   1c2a4:	str	r9, [sp, #12]
   1c2a8:	str	r2, [sp, #16]
   1c2ac:	str	r6, [sp, #8]
   1c2b0:	str	r7, [sp, #4]
   1c2b4:	str	r8, [sp]
   1c2b8:	mov	r2, r5
   1c2bc:	add	r1, pc, r1
   1c2c0:	bl	13f7c <fprintf@plt>
   1c2c4:	b	1bda4 <__flatcc_gen_sort@@Base+0x11d8>
   1c2c8:	ldr	r3, [pc, #2556]	; 1cccc <__flatcc_gen_sort@@Base+0x2100>
   1c2cc:	str	r5, [sp, #80]	; 0x50
   1c2d0:	add	r3, pc, r3
   1c2d4:	str	r3, [sp, #84]	; 0x54
   1c2d8:	ldr	r3, [pc, #2544]	; 1ccd0 <__flatcc_gen_sort@@Base+0x2104>
   1c2dc:	add	r3, pc, r3
   1c2e0:	str	r3, [sp, #88]	; 0x58
   1c2e4:	ldrh	r3, [r4, #56]	; 0x38
   1c2e8:	sub	r3, r3, #3
   1c2ec:	cmp	r3, #3
   1c2f0:	addls	pc, pc, r3, lsl #2
   1c2f4:	b	1c474 <__flatcc_gen_sort@@Base+0x18a8>
   1c2f8:	b	1c360 <__flatcc_gen_sort@@Base+0x1794>
   1c2fc:	b	1c4fc <__flatcc_gen_sort@@Base+0x1930>
   1c300:	b	1c4c8 <__flatcc_gen_sort@@Base+0x18fc>
   1c304:	b	1c308 <__flatcc_gen_sort@@Base+0x173c>
   1c308:	sub	r3, r2, #1
   1c30c:	cmp	r3, #8
   1c310:	addls	pc, pc, r3, lsl #2
   1c314:	b	1d17c <__flatcc_gen_sort@@Base+0x25b0>
   1c318:	b	1d170 <__flatcc_gen_sort@@Base+0x25a4>
   1c31c:	b	1d164 <__flatcc_gen_sort@@Base+0x2598>
   1c320:	b	1d158 <__flatcc_gen_sort@@Base+0x258c>
   1c324:	b	1d14c <__flatcc_gen_sort@@Base+0x2580>
   1c328:	b	1d140 <__flatcc_gen_sort@@Base+0x2574>
   1c32c:	b	1d134 <__flatcc_gen_sort@@Base+0x2568>
   1c330:	b	1d128 <__flatcc_gen_sort@@Base+0x255c>
   1c334:	b	1ca20 <__flatcc_gen_sort@@Base+0x1e54>
   1c338:	b	1ca94 <__flatcc_gen_sort@@Base+0x1ec8>
   1c33c:	ldr	r3, [pc, #2448]	; 1ccd4 <__flatcc_gen_sort@@Base+0x2108>
   1c340:	add	r3, pc, r3
   1c344:	str	r3, [sp, #84]	; 0x54
   1c348:	ldr	r3, [pc, #2440]	; 1ccd8 <__flatcc_gen_sort@@Base+0x210c>
   1c34c:	add	r3, pc, r3
   1c350:	str	r3, [sp, #88]	; 0x58
   1c354:	ldr	r3, [pc, #2432]	; 1ccdc <__flatcc_gen_sort@@Base+0x2110>
   1c358:	add	r3, pc, r3
   1c35c:	str	r3, [sp, #80]	; 0x50
   1c360:	ldr	r1, [pc, #2424]	; 1cce0 <__flatcc_gen_sort@@Base+0x2114>
   1c364:	add	r3, sp, #100	; 0x64
   1c368:	str	r3, [sp, #92]	; 0x5c
   1c36c:	mov	r0, r3
   1c370:	add	r1, pc, r1
   1c374:	ldrd	r2, [r4, #48]	; 0x30
   1c378:	bl	13fe8 <sprintf@plt>
   1c37c:	ldr	r3, [sp, #92]	; 0x5c
   1c380:	ldr	r1, [sp, #84]	; 0x54
   1c384:	str	r3, [sp, #52]	; 0x34
   1c388:	ldrh	r3, [r4, #74]	; 0x4a
   1c38c:	ldr	r0, [r5, #204]	; 0xcc
   1c390:	str	r3, [sp, #48]	; 0x30
   1c394:	ldrd	r2, [r4, #88]	; 0x58
   1c398:	str	r1, [sp, #36]	; 0x24
   1c39c:	ldr	r1, [sp, #80]	; 0x50
   1c3a0:	strd	r2, [sp, #40]	; 0x28
   1c3a4:	ldr	r3, [sp, #88]	; 0x58
   1c3a8:	str	r1, [sp, #32]
   1c3ac:	str	r3, [sp, #28]
   1c3b0:	str	r5, [sp, #24]
   1c3b4:	str	r6, [sp, #20]
   1c3b8:	str	r7, [sp, #16]
   1c3bc:	str	r8, [sp, #12]
   1c3c0:	str	r5, [sp, #8]
   1c3c4:	ldrd	r6, [r4, #96]	; 0x60
   1c3c8:	ldr	r1, [pc, #2324]	; 1cce4 <__flatcc_gen_sort@@Base+0x2118>
   1c3cc:	mov	r2, r5
   1c3d0:	strd	r6, [sp]
   1c3d4:	add	r1, pc, r1
   1c3d8:	bl	13f7c <fprintf@plt>
   1c3dc:	b	1bda4 <__flatcc_gen_sort@@Base+0x11d8>
   1c3e0:	ldr	r2, [pc, #2176]	; 1cc68 <__flatcc_gen_sort@@Base+0x209c>
   1c3e4:	ldr	r3, [pc, #2300]	; 1cce8 <__flatcc_gen_sort@@Base+0x211c>
   1c3e8:	ldr	r4, [pc, #2300]	; 1ccec <__flatcc_gen_sort@@Base+0x2120>
   1c3ec:	ldr	r1, [fp, r2]
   1c3f0:	add	r3, pc, r3
   1c3f4:	str	r3, [sp]
   1c3f8:	ldr	r0, [r1]
   1c3fc:	ldr	r1, [pc, #2284]	; 1ccf0 <__flatcc_gen_sort@@Base+0x2124>
   1c400:	add	r4, pc, r4
   1c404:	mov	r2, r4
   1c408:	ldr	r3, [pc, #2276]	; 1ccf4 <__flatcc_gen_sort@@Base+0x2128>
   1c40c:	add	r1, pc, r1
   1c410:	bl	13f7c <fprintf@plt>
   1c414:	ldr	r3, [pc, #2268]	; 1ccf8 <__flatcc_gen_sort@@Base+0x212c>
   1c418:	ldr	r0, [pc, #2268]	; 1ccfc <__flatcc_gen_sort@@Base+0x2130>
   1c41c:	add	r3, pc, r3
   1c420:	mov	r1, r4
   1c424:	add	r3, r3, #144	; 0x90
   1c428:	ldr	r2, [pc, #2244]	; 1ccf4 <__flatcc_gen_sort@@Base+0x2128>
   1c42c:	add	r0, pc, r0
   1c430:	bl	14030 <__assert_fail@plt>
   1c434:	mov	r2, r9
   1c438:	ldr	r0, [r1, #12]
   1c43c:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   1c440:	ldr	r1, [pc, #2232]	; 1cd00 <__flatcc_gen_sort@@Base+0x2134>
   1c444:	ldr	r0, [r5, #204]	; 0xcc
   1c448:	mov	r3, r5
   1c44c:	str	r9, [sp, #20]
   1c450:	str	r9, [sp, #16]
   1c454:	str	r9, [sp, #12]
   1c458:	str	r6, [sp, #8]
   1c45c:	str	r7, [sp, #4]
   1c460:	str	r8, [sp]
   1c464:	mov	r2, r5
   1c468:	add	r1, pc, r1
   1c46c:	bl	13f7c <fprintf@plt>
   1c470:	b	1bda4 <__flatcc_gen_sort@@Base+0x11d8>
   1c474:	ldr	r2, [pc, #2028]	; 1cc68 <__flatcc_gen_sort@@Base+0x209c>
   1c478:	ldr	r3, [pc, #2180]	; 1cd04 <__flatcc_gen_sort@@Base+0x2138>
   1c47c:	ldr	r4, [pc, #2180]	; 1cd08 <__flatcc_gen_sort@@Base+0x213c>
   1c480:	ldr	r1, [fp, r2]
   1c484:	add	r3, pc, r3
   1c488:	str	r3, [sp]
   1c48c:	ldr	r0, [r1]
   1c490:	ldr	r1, [pc, #2164]	; 1cd0c <__flatcc_gen_sort@@Base+0x2140>
   1c494:	add	r4, pc, r4
   1c498:	mov	r2, r4
   1c49c:	mov	r3, #260	; 0x104
   1c4a0:	add	r1, pc, r1
   1c4a4:	bl	13f7c <fprintf@plt>
   1c4a8:	ldr	r3, [pc, #2144]	; 1cd10 <__flatcc_gen_sort@@Base+0x2144>
   1c4ac:	ldr	r0, [pc, #2144]	; 1cd14 <__flatcc_gen_sort@@Base+0x2148>
   1c4b0:	add	r3, pc, r3
   1c4b4:	mov	r1, r4
   1c4b8:	add	r3, r3, #128	; 0x80
   1c4bc:	mov	r2, #260	; 0x104
   1c4c0:	add	r0, pc, r0
   1c4c4:	bl	14030 <__assert_fail@plt>
   1c4c8:	sub	r3, r2, #1
   1c4cc:	cmp	r3, #8
   1c4d0:	addls	pc, pc, r3, lsl #2
   1c4d4:	b	1d448 <__flatcc_gen_sort@@Base+0x287c>
   1c4d8:	b	1cb58 <__flatcc_gen_sort@@Base+0x1f8c>
   1c4dc:	b	1caa0 <__flatcc_gen_sort@@Base+0x1ed4>
   1c4e0:	b	1cbc4 <__flatcc_gen_sort@@Base+0x1ff8>
   1c4e4:	b	1cbb8 <__flatcc_gen_sort@@Base+0x1fec>
   1c4e8:	b	1cbac <__flatcc_gen_sort@@Base+0x1fe0>
   1c4ec:	b	1cba0 <__flatcc_gen_sort@@Base+0x1fd4>
   1c4f0:	b	1cb94 <__flatcc_gen_sort@@Base+0x1fc8>
   1c4f4:	b	1cb88 <__flatcc_gen_sort@@Base+0x1fbc>
   1c4f8:	b	1cb7c <__flatcc_gen_sort@@Base+0x1fb0>
   1c4fc:	sub	r3, r2, #1
   1c500:	cmp	r3, #8
   1c504:	addls	pc, pc, r3, lsl #2
   1c508:	b	1d3f4 <__flatcc_gen_sort@@Base+0x2828>
   1c50c:	b	1cbdc <__flatcc_gen_sort@@Base+0x2010>
   1c510:	b	1cacc <__flatcc_gen_sort@@Base+0x1f00>
   1c514:	b	1cbd0 <__flatcc_gen_sort@@Base+0x2004>
   1c518:	b	1cc0c <__flatcc_gen_sort@@Base+0x2040>
   1c51c:	b	1cc00 <__flatcc_gen_sort@@Base+0x2034>
   1c520:	b	1cbf4 <__flatcc_gen_sort@@Base+0x2028>
   1c524:	b	1cbe8 <__flatcc_gen_sort@@Base+0x201c>
   1c528:	b	1cb70 <__flatcc_gen_sort@@Base+0x1fa4>
   1c52c:	b	1cb64 <__flatcc_gen_sort@@Base+0x1f98>
   1c530:	ldrh	r2, [r4, #56]	; 0x38
   1c534:	sub	r2, r2, #3
   1c538:	cmp	r2, #3
   1c53c:	addls	pc, pc, r2, lsl #2
   1c540:	b	1c474 <__flatcc_gen_sort@@Base+0x18a8>
   1c544:	b	1c974 <__flatcc_gen_sort@@Base+0x1da8>
   1c548:	b	1c9bc <__flatcc_gen_sort@@Base+0x1df0>
   1c54c:	b	1c9dc <__flatcc_gen_sort@@Base+0x1e10>
   1c550:	b	1d17c <__flatcc_gen_sort@@Base+0x25b0>
   1c554:	ldr	r3, [pc, #1980]	; 1cd18 <__flatcc_gen_sort@@Base+0x214c>
   1c558:	add	r3, pc, r3
   1c55c:	str	r3, [sp, #84]	; 0x54
   1c560:	ldr	r3, [pc, #1972]	; 1cd1c <__flatcc_gen_sort@@Base+0x2150>
   1c564:	add	r3, pc, r3
   1c568:	str	r3, [sp, #80]	; 0x50
   1c56c:	ldr	r3, [pc, #1964]	; 1cd20 <__flatcc_gen_sort@@Base+0x2154>
   1c570:	add	r3, pc, r3
   1c574:	str	r3, [sp, #88]	; 0x58
   1c578:	b	1c2e4 <__flatcc_gen_sort@@Base+0x1718>
   1c57c:	ldr	r3, [pc, #1952]	; 1cd24 <__flatcc_gen_sort@@Base+0x2158>
   1c580:	ldr	r1, [pc, #1952]	; 1cd28 <__flatcc_gen_sort@@Base+0x215c>
   1c584:	ldr	r2, [pc, #1952]	; 1cd2c <__flatcc_gen_sort@@Base+0x2160>
   1c588:	add	r3, pc, r3
   1c58c:	add	r1, pc, r1
   1c590:	add	r2, pc, r2
   1c594:	b	1c21c <__flatcc_gen_sort@@Base+0x1650>
   1c598:	ldr	r3, [pc, #1936]	; 1cd30 <__flatcc_gen_sort@@Base+0x2164>
   1c59c:	ldr	r1, [pc, #1936]	; 1cd34 <__flatcc_gen_sort@@Base+0x2168>
   1c5a0:	ldr	r2, [pc, #1936]	; 1cd38 <__flatcc_gen_sort@@Base+0x216c>
   1c5a4:	add	r3, pc, r3
   1c5a8:	add	r1, pc, r1
   1c5ac:	add	r2, pc, r2
   1c5b0:	b	1c21c <__flatcc_gen_sort@@Base+0x1650>
   1c5b4:	ldr	r3, [pc, #1920]	; 1cd3c <__flatcc_gen_sort@@Base+0x2170>
   1c5b8:	ldr	r1, [pc, #1920]	; 1cd40 <__flatcc_gen_sort@@Base+0x2174>
   1c5bc:	ldr	r2, [pc, #1920]	; 1cd44 <__flatcc_gen_sort@@Base+0x2178>
   1c5c0:	add	r3, pc, r3
   1c5c4:	add	r1, pc, r1
   1c5c8:	add	r2, pc, r2
   1c5cc:	b	1c21c <__flatcc_gen_sort@@Base+0x1650>
   1c5d0:	ldr	r3, [pc, #1904]	; 1cd48 <__flatcc_gen_sort@@Base+0x217c>
   1c5d4:	ldr	r1, [pc, #1904]	; 1cd4c <__flatcc_gen_sort@@Base+0x2180>
   1c5d8:	add	r3, pc, r3
   1c5dc:	add	r1, pc, r1
   1c5e0:	mov	r2, r3
   1c5e4:	b	1c21c <__flatcc_gen_sort@@Base+0x1650>
   1c5e8:	ldr	r3, [pc, #1888]	; 1cd50 <__flatcc_gen_sort@@Base+0x2184>
   1c5ec:	ldr	r1, [pc, #1888]	; 1cd54 <__flatcc_gen_sort@@Base+0x2188>
   1c5f0:	ldr	r2, [pc, #1888]	; 1cd58 <__flatcc_gen_sort@@Base+0x218c>
   1c5f4:	add	r3, pc, r3
   1c5f8:	add	r1, pc, r1
   1c5fc:	add	r2, pc, r2
   1c600:	b	1c21c <__flatcc_gen_sort@@Base+0x1650>
   1c604:	ldr	r3, [pc, #1872]	; 1cd5c <__flatcc_gen_sort@@Base+0x2190>
   1c608:	ldr	r1, [pc, #1872]	; 1cd60 <__flatcc_gen_sort@@Base+0x2194>
   1c60c:	ldr	r2, [pc, #1872]	; 1cd64 <__flatcc_gen_sort@@Base+0x2198>
   1c610:	add	r3, pc, r3
   1c614:	add	r1, pc, r1
   1c618:	add	r2, pc, r2
   1c61c:	b	1c21c <__flatcc_gen_sort@@Base+0x1650>
   1c620:	ldr	r3, [pc, #1856]	; 1cd68 <__flatcc_gen_sort@@Base+0x219c>
   1c624:	ldr	r1, [pc, #1856]	; 1cd6c <__flatcc_gen_sort@@Base+0x21a0>
   1c628:	ldr	r2, [pc, #1856]	; 1cd70 <__flatcc_gen_sort@@Base+0x21a4>
   1c62c:	add	r3, pc, r3
   1c630:	add	r1, pc, r1
   1c634:	add	r2, pc, r2
   1c638:	b	1c21c <__flatcc_gen_sort@@Base+0x1650>
   1c63c:	ldr	r3, [pc, #1840]	; 1cd74 <__flatcc_gen_sort@@Base+0x21a8>
   1c640:	ldr	r1, [pc, #1840]	; 1cd78 <__flatcc_gen_sort@@Base+0x21ac>
   1c644:	add	r3, pc, r3
   1c648:	add	r1, pc, r1
   1c64c:	mov	r2, r3
   1c650:	b	1c21c <__flatcc_gen_sort@@Base+0x1650>
   1c654:	ldr	r3, [pc, #1824]	; 1cd7c <__flatcc_gen_sort@@Base+0x21b0>
   1c658:	add	r3, pc, r3
   1c65c:	str	r3, [sp, #84]	; 0x54
   1c660:	ldr	r3, [pc, #1816]	; 1cd80 <__flatcc_gen_sort@@Base+0x21b4>
   1c664:	add	r3, pc, r3
   1c668:	str	r3, [sp, #80]	; 0x50
   1c66c:	ldr	r3, [pc, #1808]	; 1cd84 <__flatcc_gen_sort@@Base+0x21b8>
   1c670:	add	r3, pc, r3
   1c674:	str	r3, [sp, #88]	; 0x58
   1c678:	b	1c2e4 <__flatcc_gen_sort@@Base+0x1718>
   1c67c:	ldrh	r2, [r4, #56]	; 0x38
   1c680:	sub	r2, r2, #3
   1c684:	cmp	r2, #3
   1c688:	addls	pc, pc, r2, lsl #2
   1c68c:	b	1c474 <__flatcc_gen_sort@@Base+0x18a8>
   1c690:	b	1d10c <__flatcc_gen_sort@@Base+0x2540>
   1c694:	b	1d0e4 <__flatcc_gen_sort@@Base+0x2518>
   1c698:	b	1d0bc <__flatcc_gen_sort@@Base+0x24f0>
   1c69c:	b	1ca70 <__flatcc_gen_sort@@Base+0x1ea4>
   1c6a0:	ldrh	r2, [r4, #56]	; 0x38
   1c6a4:	sub	r2, r2, #3
   1c6a8:	cmp	r2, #3
   1c6ac:	addls	pc, pc, r2, lsl #2
   1c6b0:	b	1c474 <__flatcc_gen_sort@@Base+0x18a8>
   1c6b4:	b	1c33c <__flatcc_gen_sort@@Base+0x1770>
   1c6b8:	b	1cc18 <__flatcc_gen_sort@@Base+0x204c>
   1c6bc:	b	1d028 <__flatcc_gen_sort@@Base+0x245c>
   1c6c0:	b	1c9fc <__flatcc_gen_sort@@Base+0x1e30>
   1c6c4:	ldrh	r2, [r4, #56]	; 0x38
   1c6c8:	sub	r2, r2, #3
   1c6cc:	cmp	r2, #3
   1c6d0:	addls	pc, pc, r2, lsl #2
   1c6d4:	b	1c474 <__flatcc_gen_sort@@Base+0x18a8>
   1c6d8:	b	1d078 <__flatcc_gen_sort@@Base+0x24ac>
   1c6dc:	b	1d050 <__flatcc_gen_sort@@Base+0x2484>
   1c6e0:	b	1d094 <__flatcc_gen_sort@@Base+0x24c8>
   1c6e4:	b	1ca48 <__flatcc_gen_sort@@Base+0x1e7c>
   1c6e8:	ldr	r3, [pc, #1688]	; 1cd88 <__flatcc_gen_sort@@Base+0x21bc>
   1c6ec:	add	r3, pc, r3
   1c6f0:	str	r3, [sp, #84]	; 0x54
   1c6f4:	ldr	r3, [pc, #1680]	; 1cd8c <__flatcc_gen_sort@@Base+0x21c0>
   1c6f8:	add	r3, pc, r3
   1c6fc:	str	r3, [sp, #80]	; 0x50
   1c700:	ldr	r3, [pc, #1672]	; 1cd90 <__flatcc_gen_sort@@Base+0x21c4>
   1c704:	add	r3, pc, r3
   1c708:	str	r3, [sp, #88]	; 0x58
   1c70c:	b	1c2e4 <__flatcc_gen_sort@@Base+0x1718>
   1c710:	ldr	r3, [pc, #1660]	; 1cd94 <__flatcc_gen_sort@@Base+0x21c8>
   1c714:	ldr	r1, [pc, #1660]	; 1cd98 <__flatcc_gen_sort@@Base+0x21cc>
   1c718:	ldr	r2, [pc, #1660]	; 1cd9c <__flatcc_gen_sort@@Base+0x21d0>
   1c71c:	add	r3, pc, r3
   1c720:	add	r1, pc, r1
   1c724:	add	r2, pc, r2
   1c728:	b	1c21c <__flatcc_gen_sort@@Base+0x1650>
   1c72c:	ldr	r3, [pc, #1644]	; 1cda0 <__flatcc_gen_sort@@Base+0x21d4>
   1c730:	add	r3, pc, r3
   1c734:	str	r3, [sp, #84]	; 0x54
   1c738:	ldr	r3, [pc, #1636]	; 1cda4 <__flatcc_gen_sort@@Base+0x21d8>
   1c73c:	add	r3, pc, r3
   1c740:	str	r3, [sp, #80]	; 0x50
   1c744:	ldr	r3, [pc, #1628]	; 1cda8 <__flatcc_gen_sort@@Base+0x21dc>
   1c748:	add	r3, pc, r3
   1c74c:	str	r3, [sp, #88]	; 0x58
   1c750:	b	1c2e4 <__flatcc_gen_sort@@Base+0x1718>
   1c754:	ldrh	r2, [r4, #56]	; 0x38
   1c758:	sub	r2, r2, #3
   1c75c:	cmp	r2, #3
   1c760:	addls	pc, pc, r2, lsl #2
   1c764:	b	1c474 <__flatcc_gen_sort@@Base+0x18a8>
   1c768:	b	1cb18 <__flatcc_gen_sort@@Base+0x1f4c>
   1c76c:	b	1caf8 <__flatcc_gen_sort@@Base+0x1f2c>
   1c770:	b	1cb38 <__flatcc_gen_sort@@Base+0x1f6c>
   1c774:	b	1d17c <__flatcc_gen_sort@@Base+0x25b0>
   1c778:	ldr	r3, [pc, #1580]	; 1cdac <__flatcc_gen_sort@@Base+0x21e0>
   1c77c:	ldr	r1, [pc, #1580]	; 1cdb0 <__flatcc_gen_sort@@Base+0x21e4>
   1c780:	ldr	r2, [pc, #1580]	; 1cdb4 <__flatcc_gen_sort@@Base+0x21e8>
   1c784:	add	r3, pc, r3
   1c788:	add	r1, pc, r1
   1c78c:	add	r2, pc, r2
   1c790:	b	1c21c <__flatcc_gen_sort@@Base+0x1650>
   1c794:	ldr	r3, [pc, #1564]	; 1cdb8 <__flatcc_gen_sort@@Base+0x21ec>
   1c798:	add	r3, pc, r3
   1c79c:	str	r3, [sp, #84]	; 0x54
   1c7a0:	ldr	r3, [pc, #1556]	; 1cdbc <__flatcc_gen_sort@@Base+0x21f0>
   1c7a4:	add	r3, pc, r3
   1c7a8:	str	r3, [sp, #80]	; 0x50
   1c7ac:	ldr	r3, [pc, #1548]	; 1cdc0 <__flatcc_gen_sort@@Base+0x21f4>
   1c7b0:	add	r3, pc, r3
   1c7b4:	str	r3, [sp, #88]	; 0x58
   1c7b8:	b	1c2e4 <__flatcc_gen_sort@@Base+0x1718>
   1c7bc:	sub	r2, r2, #1
   1c7c0:	cmp	r2, #8
   1c7c4:	addls	pc, pc, r2, lsl #2
   1c7c8:	b	1d570 <__flatcc_gen_sort@@Base+0x29a4>
   1c7cc:	b	1d2c0 <__flatcc_gen_sort@@Base+0x26f4>
   1c7d0:	b	1d2b4 <__flatcc_gen_sort@@Base+0x26e8>
   1c7d4:	b	1d2a8 <__flatcc_gen_sort@@Base+0x26dc>
   1c7d8:	b	1d29c <__flatcc_gen_sort@@Base+0x26d0>
   1c7dc:	b	1d290 <__flatcc_gen_sort@@Base+0x26c4>
   1c7e0:	b	1d284 <__flatcc_gen_sort@@Base+0x26b8>
   1c7e4:	b	1d25c <__flatcc_gen_sort@@Base+0x2690>
   1c7e8:	b	1d2d8 <__flatcc_gen_sort@@Base+0x270c>
   1c7ec:	b	1d2cc <__flatcc_gen_sort@@Base+0x2700>
   1c7f0:	sub	r2, r2, #1
   1c7f4:	cmp	r2, #8
   1c7f8:	addls	pc, pc, r2, lsl #2
   1c7fc:	b	1d51c <__flatcc_gen_sort@@Base+0x2950>
   1c800:	b	1d250 <__flatcc_gen_sort@@Base+0x2684>
   1c804:	b	1d244 <__flatcc_gen_sort@@Base+0x2678>
   1c808:	b	1d238 <__flatcc_gen_sort@@Base+0x266c>
   1c80c:	b	1d22c <__flatcc_gen_sort@@Base+0x2660>
   1c810:	b	1d220 <__flatcc_gen_sort@@Base+0x2654>
   1c814:	b	1d214 <__flatcc_gen_sort@@Base+0x2648>
   1c818:	b	1d208 <__flatcc_gen_sort@@Base+0x263c>
   1c81c:	b	1d1fc <__flatcc_gen_sort@@Base+0x2630>
   1c820:	b	1d1d0 <__flatcc_gen_sort@@Base+0x2604>
   1c824:	sub	r2, r2, #1
   1c828:	cmp	r2, #8
   1c82c:	addls	pc, pc, r2, lsl #2
   1c830:	b	1d4c8 <__flatcc_gen_sort@@Base+0x28fc>
   1c834:	b	1d364 <__flatcc_gen_sort@@Base+0x2798>
   1c838:	b	1d358 <__flatcc_gen_sort@@Base+0x278c>
   1c83c:	b	1d34c <__flatcc_gen_sort@@Base+0x2780>
   1c840:	b	1d340 <__flatcc_gen_sort@@Base+0x2774>
   1c844:	b	1d334 <__flatcc_gen_sort@@Base+0x2768>
   1c848:	b	1d328 <__flatcc_gen_sort@@Base+0x275c>
   1c84c:	b	1d31c <__flatcc_gen_sort@@Base+0x2750>
   1c850:	b	1d310 <__flatcc_gen_sort@@Base+0x2744>
   1c854:	b	1d2e4 <__flatcc_gen_sort@@Base+0x2718>
   1c858:	cmp	r2, #11
   1c85c:	beq	1d49c <__flatcc_gen_sort@@Base+0x28d0>
   1c860:	ldr	r1, [pc, #1372]	; 1cdc4 <__flatcc_gen_sort@@Base+0x21f8>
   1c864:	add	r3, sp, #100	; 0x64
   1c868:	str	r3, [sp, #92]	; 0x5c
   1c86c:	mov	r0, r3
   1c870:	add	r1, pc, r1
   1c874:	ldrd	r2, [r4, #48]	; 0x30
   1c878:	bl	13fe8 <sprintf@plt>
   1c87c:	ldr	r3, [sp, #92]	; 0x5c
   1c880:	ldr	r1, [pc, #1344]	; 1cdc8 <__flatcc_gen_sort@@Base+0x21fc>
   1c884:	str	r3, [sp, #44]	; 0x2c
   1c888:	ldrh	r3, [r4, #74]	; 0x4a
   1c88c:	ldr	r0, [r5, #204]	; 0xcc
   1c890:	add	r1, pc, r1
   1c894:	str	r3, [sp, #40]	; 0x28
   1c898:	ldrd	r2, [r4, #88]	; 0x58
   1c89c:	str	r9, [sp, #28]
   1c8a0:	str	r9, [sp, #24]
   1c8a4:	strd	r2, [sp, #32]
   1c8a8:	str	r6, [sp, #20]
   1c8ac:	str	r7, [sp, #16]
   1c8b0:	str	r8, [sp, #12]
   1c8b4:	str	r5, [sp, #8]
   1c8b8:	ldrd	r6, [r4, #96]	; 0x60
   1c8bc:	mov	r2, r5
   1c8c0:	strd	r6, [sp]
   1c8c4:	bl	13f7c <fprintf@plt>
   1c8c8:	b	1bda4 <__flatcc_gen_sort@@Base+0x11d8>
   1c8cc:	ldr	r2, [pc, #916]	; 1cc68 <__flatcc_gen_sort@@Base+0x209c>
   1c8d0:	ldr	r3, [pc, #1268]	; 1cdcc <__flatcc_gen_sort@@Base+0x2200>
   1c8d4:	ldr	r4, [pc, #1268]	; 1cdd0 <__flatcc_gen_sort@@Base+0x2204>
   1c8d8:	ldr	r1, [fp, r2]
   1c8dc:	add	r3, pc, r3
   1c8e0:	str	r3, [sp]
   1c8e4:	ldr	r0, [r1]
   1c8e8:	ldr	r1, [pc, #1252]	; 1cdd4 <__flatcc_gen_sort@@Base+0x2208>
   1c8ec:	add	r4, pc, r4
   1c8f0:	mov	r2, r4
   1c8f4:	mov	r3, #141	; 0x8d
   1c8f8:	add	r1, pc, r1
   1c8fc:	bl	13f7c <fprintf@plt>
   1c900:	ldr	r3, [pc, #1232]	; 1cdd8 <__flatcc_gen_sort@@Base+0x220c>
   1c904:	ldr	r0, [pc, #1232]	; 1cddc <__flatcc_gen_sort@@Base+0x2210>
   1c908:	add	r3, pc, r3
   1c90c:	mov	r1, r4
   1c910:	add	r3, r3, #72	; 0x48
   1c914:	mov	r2, #141	; 0x8d
   1c918:	add	r0, pc, r0
   1c91c:	bl	14030 <__assert_fail@plt>
   1c920:	ldr	r2, [pc, #832]	; 1cc68 <__flatcc_gen_sort@@Base+0x209c>
   1c924:	ldr	r3, [pc, #1204]	; 1cde0 <__flatcc_gen_sort@@Base+0x2214>
   1c928:	ldr	r4, [pc, #1204]	; 1cde4 <__flatcc_gen_sort@@Base+0x2218>
   1c92c:	ldr	r1, [fp, r2]
   1c930:	add	r3, pc, r3
   1c934:	str	r3, [sp]
   1c938:	ldr	r0, [r1]
   1c93c:	ldr	r1, [pc, #1188]	; 1cde8 <__flatcc_gen_sort@@Base+0x221c>
   1c940:	add	r4, pc, r4
   1c944:	mov	r2, r4
   1c948:	mov	r3, #141	; 0x8d
   1c94c:	add	r1, pc, r1
   1c950:	bl	13f7c <fprintf@plt>
   1c954:	ldr	r3, [pc, #1168]	; 1cdec <__flatcc_gen_sort@@Base+0x2220>
   1c958:	ldr	r0, [pc, #1168]	; 1cdf0 <__flatcc_gen_sort@@Base+0x2224>
   1c95c:	add	r3, pc, r3
   1c960:	mov	r1, r4
   1c964:	add	r3, r3, #72	; 0x48
   1c968:	mov	r2, #141	; 0x8d
   1c96c:	add	r0, pc, r0
   1c970:	bl	14030 <__assert_fail@plt>
   1c974:	vldr	d7, [r4, #48]	; 0x30
   1c978:	add	r3, sp, #100	; 0x64
   1c97c:	str	r3, [sp, #92]	; 0x5c
   1c980:	mov	r0, r3
   1c984:	vcvt.f32.f64	s14, d7
   1c988:	ldr	r3, [pc, #1124]	; 1cdf4 <__flatcc_gen_sort@@Base+0x2228>
   1c98c:	ldr	r2, [pc, #1124]	; 1cdf8 <__flatcc_gen_sort@@Base+0x222c>
   1c990:	ldr	r1, [pc, #1124]	; 1cdfc <__flatcc_gen_sort@@Base+0x2230>
   1c994:	add	r3, pc, r3
   1c998:	add	r2, pc, r2
   1c99c:	str	r3, [sp, #84]	; 0x54
   1c9a0:	str	r2, [sp, #80]	; 0x50
   1c9a4:	vcvt.f64.f32	d7, s14
   1c9a8:	str	r3, [sp, #88]	; 0x58
   1c9ac:	add	r1, pc, r1
   1c9b0:	vmov	r2, r3, d7
   1c9b4:	bl	13fe8 <sprintf@plt>
   1c9b8:	b	1c37c <__flatcc_gen_sort@@Base+0x17b0>
   1c9bc:	ldr	r2, [pc, #1084]	; 1ce00 <__flatcc_gen_sort@@Base+0x2234>
   1c9c0:	ldr	r1, [pc, #1084]	; 1ce04 <__flatcc_gen_sort@@Base+0x2238>
   1c9c4:	add	r2, pc, r2
   1c9c8:	add	r1, pc, r1
   1c9cc:	str	r2, [sp, #84]	; 0x54
   1c9d0:	str	r1, [sp, #80]	; 0x50
   1c9d4:	str	r2, [sp, #88]	; 0x58
   1c9d8:	b	1c500 <__flatcc_gen_sort@@Base+0x1934>
   1c9dc:	ldr	r2, [pc, #1060]	; 1ce08 <__flatcc_gen_sort@@Base+0x223c>
   1c9e0:	ldr	r1, [pc, #1060]	; 1ce0c <__flatcc_gen_sort@@Base+0x2240>
   1c9e4:	add	r2, pc, r2
   1c9e8:	add	r1, pc, r1
   1c9ec:	str	r2, [sp, #84]	; 0x54
   1c9f0:	str	r1, [sp, #80]	; 0x50
   1c9f4:	str	r2, [sp, #88]	; 0x58
   1c9f8:	b	1c4cc <__flatcc_gen_sort@@Base+0x1900>
   1c9fc:	ldr	r3, [pc, #1036]	; 1ce10 <__flatcc_gen_sort@@Base+0x2244>
   1ca00:	add	r3, pc, r3
   1ca04:	str	r3, [sp, #84]	; 0x54
   1ca08:	ldr	r3, [pc, #1028]	; 1ce14 <__flatcc_gen_sort@@Base+0x2248>
   1ca0c:	add	r3, pc, r3
   1ca10:	str	r3, [sp, #88]	; 0x58
   1ca14:	ldr	r3, [pc, #1020]	; 1ce18 <__flatcc_gen_sort@@Base+0x224c>
   1ca18:	add	r3, pc, r3
   1ca1c:	str	r3, [sp, #80]	; 0x50
   1ca20:	ldr	r2, [pc, #1012]	; 1ce1c <__flatcc_gen_sort@@Base+0x2250>
   1ca24:	add	r2, pc, r2
   1ca28:	ldr	r1, [pc, #1008]	; 1ce20 <__flatcc_gen_sort@@Base+0x2254>
   1ca2c:	add	r3, sp, #100	; 0x64
   1ca30:	str	r3, [sp, #92]	; 0x5c
   1ca34:	mov	r0, r3
   1ca38:	add	r1, pc, r1
   1ca3c:	ldrb	r3, [r4, #48]	; 0x30
   1ca40:	bl	13fe8 <sprintf@plt>
   1ca44:	b	1c37c <__flatcc_gen_sort@@Base+0x17b0>
   1ca48:	ldr	r2, [pc, #980]	; 1ce24 <__flatcc_gen_sort@@Base+0x2258>
   1ca4c:	add	r2, pc, r2
   1ca50:	str	r2, [sp, #84]	; 0x54
   1ca54:	ldr	r2, [pc, #972]	; 1ce28 <__flatcc_gen_sort@@Base+0x225c>
   1ca58:	add	r2, pc, r2
   1ca5c:	str	r2, [sp, #88]	; 0x58
   1ca60:	ldr	r2, [pc, #964]	; 1ce2c <__flatcc_gen_sort@@Base+0x2260>
   1ca64:	add	r2, pc, r2
   1ca68:	str	r2, [sp, #80]	; 0x50
   1ca6c:	b	1c30c <__flatcc_gen_sort@@Base+0x1740>
   1ca70:	ldr	r3, [pc, #952]	; 1ce30 <__flatcc_gen_sort@@Base+0x2264>
   1ca74:	add	r3, pc, r3
   1ca78:	str	r3, [sp, #84]	; 0x54
   1ca7c:	ldr	r3, [pc, #944]	; 1ce34 <__flatcc_gen_sort@@Base+0x2268>
   1ca80:	add	r3, pc, r3
   1ca84:	str	r3, [sp, #88]	; 0x58
   1ca88:	ldr	r3, [pc, #936]	; 1ce38 <__flatcc_gen_sort@@Base+0x226c>
   1ca8c:	add	r3, pc, r3
   1ca90:	str	r3, [sp, #80]	; 0x50
   1ca94:	ldr	r2, [pc, #928]	; 1ce3c <__flatcc_gen_sort@@Base+0x2270>
   1ca98:	add	r2, pc, r2
   1ca9c:	b	1ca28 <__flatcc_gen_sort@@Base+0x1e5c>
   1caa0:	ldr	r2, [pc, #920]	; 1ce40 <__flatcc_gen_sort@@Base+0x2274>
   1caa4:	add	r2, pc, r2
   1caa8:	ldrd	r0, [r4, #48]	; 0x30
   1caac:	add	r3, sp, #100	; 0x64
   1cab0:	str	r3, [sp, #92]	; 0x5c
   1cab4:	strd	r0, [sp]
   1cab8:	ldr	r1, [pc, #900]	; 1ce44 <__flatcc_gen_sort@@Base+0x2278>
   1cabc:	mov	r0, r3
   1cac0:	add	r1, pc, r1
   1cac4:	bl	13fe8 <sprintf@plt>
   1cac8:	b	1c37c <__flatcc_gen_sort@@Base+0x17b0>
   1cacc:	ldr	r2, [pc, #884]	; 1ce48 <__flatcc_gen_sort@@Base+0x227c>
   1cad0:	add	r2, pc, r2
   1cad4:	ldrd	r0, [r4, #48]	; 0x30
   1cad8:	add	r3, sp, #100	; 0x64
   1cadc:	str	r3, [sp, #92]	; 0x5c
   1cae0:	strd	r0, [sp]
   1cae4:	ldr	r1, [pc, #864]	; 1ce4c <__flatcc_gen_sort@@Base+0x2280>
   1cae8:	mov	r0, r3
   1caec:	add	r1, pc, r1
   1caf0:	bl	13fe8 <sprintf@plt>
   1caf4:	b	1c37c <__flatcc_gen_sort@@Base+0x17b0>
   1caf8:	ldr	r2, [pc, #848]	; 1ce50 <__flatcc_gen_sort@@Base+0x2284>
   1cafc:	ldr	r1, [pc, #848]	; 1ce54 <__flatcc_gen_sort@@Base+0x2288>
   1cb00:	add	r2, pc, r2
   1cb04:	add	r1, pc, r1
   1cb08:	str	r2, [sp, #84]	; 0x54
   1cb0c:	str	r1, [sp, #80]	; 0x50
   1cb10:	str	r2, [sp, #88]	; 0x58
   1cb14:	b	1c500 <__flatcc_gen_sort@@Base+0x1934>
   1cb18:	ldr	r3, [pc, #824]	; 1ce58 <__flatcc_gen_sort@@Base+0x228c>
   1cb1c:	ldr	r2, [pc, #824]	; 1ce5c <__flatcc_gen_sort@@Base+0x2290>
   1cb20:	add	r3, pc, r3
   1cb24:	add	r2, pc, r2
   1cb28:	str	r3, [sp, #84]	; 0x54
   1cb2c:	str	r2, [sp, #80]	; 0x50
   1cb30:	str	r3, [sp, #88]	; 0x58
   1cb34:	b	1c360 <__flatcc_gen_sort@@Base+0x1794>
   1cb38:	ldr	r2, [pc, #800]	; 1ce60 <__flatcc_gen_sort@@Base+0x2294>
   1cb3c:	ldr	r1, [pc, #800]	; 1ce64 <__flatcc_gen_sort@@Base+0x2298>
   1cb40:	add	r2, pc, r2
   1cb44:	add	r1, pc, r1
   1cb48:	str	r2, [sp, #84]	; 0x54
   1cb4c:	str	r1, [sp, #80]	; 0x50
   1cb50:	str	r2, [sp, #88]	; 0x58
   1cb54:	b	1c4cc <__flatcc_gen_sort@@Base+0x1900>
   1cb58:	ldr	r2, [pc, #776]	; 1ce68 <__flatcc_gen_sort@@Base+0x229c>
   1cb5c:	add	r2, pc, r2
   1cb60:	b	1caa8 <__flatcc_gen_sort@@Base+0x1edc>
   1cb64:	ldr	r2, [pc, #768]	; 1ce6c <__flatcc_gen_sort@@Base+0x22a0>
   1cb68:	add	r2, pc, r2
   1cb6c:	b	1cad4 <__flatcc_gen_sort@@Base+0x1f08>
   1cb70:	ldr	r2, [pc, #760]	; 1ce70 <__flatcc_gen_sort@@Base+0x22a4>
   1cb74:	add	r2, pc, r2
   1cb78:	b	1cad4 <__flatcc_gen_sort@@Base+0x1f08>
   1cb7c:	ldr	r2, [pc, #752]	; 1ce74 <__flatcc_gen_sort@@Base+0x22a8>
   1cb80:	add	r2, pc, r2
   1cb84:	b	1caa8 <__flatcc_gen_sort@@Base+0x1edc>
   1cb88:	ldr	r2, [pc, #744]	; 1ce78 <__flatcc_gen_sort@@Base+0x22ac>
   1cb8c:	add	r2, pc, r2
   1cb90:	b	1caa8 <__flatcc_gen_sort@@Base+0x1edc>
   1cb94:	ldr	r2, [pc, #736]	; 1ce7c <__flatcc_gen_sort@@Base+0x22b0>
   1cb98:	add	r2, pc, r2
   1cb9c:	b	1caa8 <__flatcc_gen_sort@@Base+0x1edc>
   1cba0:	ldr	r2, [pc, #728]	; 1ce80 <__flatcc_gen_sort@@Base+0x22b4>
   1cba4:	add	r2, pc, r2
   1cba8:	b	1caa8 <__flatcc_gen_sort@@Base+0x1edc>
   1cbac:	ldr	r2, [pc, #720]	; 1ce84 <__flatcc_gen_sort@@Base+0x22b8>
   1cbb0:	add	r2, pc, r2
   1cbb4:	b	1caa8 <__flatcc_gen_sort@@Base+0x1edc>
   1cbb8:	ldr	r2, [pc, #712]	; 1ce88 <__flatcc_gen_sort@@Base+0x22bc>
   1cbbc:	add	r2, pc, r2
   1cbc0:	b	1caa8 <__flatcc_gen_sort@@Base+0x1edc>
   1cbc4:	ldr	r2, [pc, #704]	; 1ce8c <__flatcc_gen_sort@@Base+0x22c0>
   1cbc8:	add	r2, pc, r2
   1cbcc:	b	1caa8 <__flatcc_gen_sort@@Base+0x1edc>
   1cbd0:	ldr	r2, [pc, #696]	; 1ce90 <__flatcc_gen_sort@@Base+0x22c4>
   1cbd4:	add	r2, pc, r2
   1cbd8:	b	1cad4 <__flatcc_gen_sort@@Base+0x1f08>
   1cbdc:	ldr	r2, [pc, #688]	; 1ce94 <__flatcc_gen_sort@@Base+0x22c8>
   1cbe0:	add	r2, pc, r2
   1cbe4:	b	1cad4 <__flatcc_gen_sort@@Base+0x1f08>
   1cbe8:	ldr	r2, [pc, #680]	; 1ce98 <__flatcc_gen_sort@@Base+0x22cc>
   1cbec:	add	r2, pc, r2
   1cbf0:	b	1cad4 <__flatcc_gen_sort@@Base+0x1f08>
   1cbf4:	ldr	r2, [pc, #672]	; 1ce9c <__flatcc_gen_sort@@Base+0x22d0>
   1cbf8:	add	r2, pc, r2
   1cbfc:	b	1cad4 <__flatcc_gen_sort@@Base+0x1f08>
   1cc00:	ldr	r2, [pc, #664]	; 1cea0 <__flatcc_gen_sort@@Base+0x22d4>
   1cc04:	add	r2, pc, r2
   1cc08:	b	1cad4 <__flatcc_gen_sort@@Base+0x1f08>
   1cc0c:	ldr	r2, [pc, #656]	; 1cea4 <__flatcc_gen_sort@@Base+0x22d8>
   1cc10:	add	r2, pc, r2
   1cc14:	b	1cad4 <__flatcc_gen_sort@@Base+0x1f08>
   1cc18:	ldr	r2, [pc, #648]	; 1cea8 <__flatcc_gen_sort@@Base+0x22dc>
   1cc1c:	add	r2, pc, r2
   1cc20:	str	r2, [sp, #84]	; 0x54
   1cc24:	ldr	r2, [pc, #640]	; 1ceac <__flatcc_gen_sort@@Base+0x22e0>
   1cc28:	add	r2, pc, r2
   1cc2c:	str	r2, [sp, #88]	; 0x58
   1cc30:	ldr	r2, [pc, #632]	; 1ceb0 <__flatcc_gen_sort@@Base+0x22e4>
   1cc34:	add	r2, pc, r2
   1cc38:	str	r2, [sp, #80]	; 0x50
   1cc3c:	b	1c500 <__flatcc_gen_sort@@Base+0x1934>
   1cc40:	andeq	lr, r4, r8, lsl #6
   1cc44:			; <UNDEFINED> instruction: 0x0002c6bc
   1cc48:	andeq	ip, r2, r4, ror r6
   1cc4c:	andeq	ip, r2, r8, lsr r6
   1cc50:	ldrdeq	ip, [r2], -r0
   1cc54:	andeq	ip, r2, r8, ror #11
   1cc58:			; <UNDEFINED> instruction: 0x0002c5b8
   1cc5c:	andeq	ip, r2, r0, lsl #5
   1cc60:	andeq	ip, r2, ip, asr #6
   1cc64:	andeq	ip, r2, r8, asr #6
   1cc68:	muleq	r0, ip, r0
   1cc6c:	andeq	r4, r2, r4, asr #25
   1cc70:	andeq	fp, r2, ip, asr sp
   1cc74:	andeq	r3, r2, r0, lsl fp
   1cc78:	andeq	r0, r0, r8, ror #11
   1cc7c:	andeq	fp, r2, ip, asr #23
   1cc80:	strdeq	fp, [r2], -r0
   1cc84:	andeq	ip, r2, r4, lsl r3
   1cc88:	ldrdeq	ip, [r2], -r4
   1cc8c:	ldrdeq	ip, [r2], -r8
   1cc90:	andeq	r4, r2, ip, ror r9
   1cc94:	andeq	fp, r2, r4, lsr #22
   1cc98:	ldrdeq	r3, [r2], -r8
   1cc9c:	muleq	r2, r4, r9
   1cca0:			; <UNDEFINED> instruction: 0x0002bcb8
   1cca4:	andeq	r4, r2, r4, ror r9
   1cca8:	ldrdeq	fp, [r2], -r0
   1ccac:	andeq	r3, r2, r4, lsl #17
   1ccb0:	andeq	r0, r0, r3, ror #11
   1ccb4:	andeq	fp, r2, r0, asr #18
   1ccb8:	andeq	fp, r2, r4, ror #24
   1ccbc:	strdeq	r3, [r2], -r8
   1ccc0:	andeq	fp, r3, r4, lsr #29
   1ccc4:	andeq	fp, r2, r8, asr #28
   1ccc8:	andeq	fp, r2, ip, ror #28
   1cccc:	andeq	r3, r2, ip, lsr r6
   1ccd0:	andeq	fp, r3, r0, ror #27
   1ccd4:	andeq	r3, r2, r4, ror #11
   1ccd8:	andeq	r3, r2, r4, asr sl
   1ccdc:	muleq	r2, r0, r3
   1cce0:	andeq	r3, r2, ip, asr #15
   1cce4:	andeq	fp, r2, r0, lsl #25
   1cce8:	muleq	r2, r0, sp
   1ccec:	andeq	fp, r2, r4, lsr #17
   1ccf0:	andeq	r3, r2, r8, asr r6
   1ccf4:	muleq	r0, r6, r5
   1ccf8:	andeq	fp, r2, r4, lsl r7
   1ccfc:	andeq	fp, r2, r8, lsr sl
   1cd00:	andeq	fp, r2, ip, ror #24
   1cd04:	andeq	r3, r2, ip, ror #11
   1cd08:	andeq	r3, r2, r0, ror r5
   1cd0c:	andeq	r3, r2, r4, asr #11
   1cd10:	andeq	fp, r2, r0, lsl #13
   1cd14:	andeq	fp, r2, r4, lsr #19
   1cd18:	andeq	r3, r2, r4, asr #7
   1cd1c:	andeq	sp, r2, r4, lsl #3
   1cd20:	andeq	r3, r2, r8, lsr #16
   1cd24:	andeq	r3, r2, r0, ror r3
   1cd28:	andeq	sp, r2, ip, asr r1
   1cd2c:	strdeq	r3, [r2], -r0
   1cd30:	andeq	r3, r2, r0, ror #6
   1cd34:	andeq	sp, r2, r0, asr #2
   1cd38:	ldrdeq	r3, [r2], -ip
   1cd3c:	andeq	r3, r2, r0, lsr #6
   1cd40:	andeq	sp, r2, r4, lsr #2
   1cd44:	andeq	r3, r2, r8, lsr #15
   1cd48:	andeq	r3, r2, ip, asr r3
   1cd4c:	andeq	sp, r2, ip, lsl #2
   1cd50:	andeq	r3, r2, r0, lsr #6
   1cd54:	strdeq	sp, [r2], -r0
   1cd58:	muleq	r2, r4, r7
   1cd5c:	andeq	r3, r2, r4, lsl r3
   1cd60:	ldrdeq	sp, [r2], -r4
   1cd64:	andeq	r3, r2, r8, lsl #15
   1cd68:	andeq	r3, r2, r0, lsl #6
   1cd6c:	strheq	sp, [r2], -r8
   1cd70:	andeq	r3, r2, r4, ror r7
   1cd74:	strdeq	r3, [r2], -r8
   1cd78:	andeq	sp, r2, r0, lsr #1
   1cd7c:			; <UNDEFINED> instruction: 0x000232bc
   1cd80:	andeq	sp, r2, r4, lsl #1
   1cd84:	andeq	r3, r2, r0, lsr #14
   1cd88:	andeq	r3, r2, r8, lsl r2
   1cd8c:	strdeq	ip, [r2], -r0
   1cd90:	andeq	r3, r2, r4, lsl #13
   1cd94:	andeq	r3, r2, r0, lsl #4
   1cd98:	andeq	ip, r2, r8, asr #31
   1cd9c:	andeq	r3, r2, r4, ror r6
   1cda0:	andeq	r3, r2, r8, asr #3
   1cda4:	andeq	ip, r2, ip, lsr #31
   1cda8:	andeq	r3, r2, r8, lsr r6
   1cdac:	andeq	r3, r2, r8, ror #2
   1cdb0:	andeq	ip, r2, r0, ror #30
   1cdb4:	andeq	r3, r2, ip, ror #11
   1cdb8:	andeq	r3, r2, r8, asr #2
   1cdbc:	andeq	ip, r2, r4, asr #30
   1cdc0:	andeq	r3, r2, r0, asr #11
   1cdc4:	andeq	r3, r2, ip, asr #5
   1cdc8:	andeq	fp, r2, r4, ror #19
   1cdcc:	muleq	r2, r4, r1
   1cdd0:	andeq	r3, r2, r8, lsl r1
   1cdd4:	andeq	r3, r2, ip, ror #2
   1cdd8:	andeq	fp, r2, r8, lsr #4
   1cddc:	andeq	fp, r2, ip, asr #10
   1cde0:	andeq	r3, r2, r0, asr #2
   1cde4:	andeq	r3, r2, r4, asr #1
   1cde8:	andeq	r3, r2, r8, lsl r1
   1cdec:	ldrdeq	fp, [r2], -r4
   1cdf0:	strdeq	fp, [r2], -r8
   1cdf4:	andeq	r2, r2, r0, lsr #31
   1cdf8:	andeq	ip, r2, r0, asr sp
   1cdfc:	andeq	r3, r2, ip, lsl #3
   1ce00:	andeq	r2, r2, r0, ror pc
   1ce04:	andeq	ip, r2, r0, lsr #26
   1ce08:	andeq	r2, r2, r0, asr pc
   1ce0c:	andeq	ip, r2, r0, lsl #26
   1ce10:	andeq	r2, r2, r4, lsr #30
   1ce14:	muleq	r2, r4, r3
   1ce18:	ldrdeq	ip, [r2], -r0
   1ce1c:	andeq	r2, r2, r0, ror pc
   1ce20:	strdeq	r3, [r2], -r8
   1ce24:	andeq	r2, r2, r0, lsr #29
   1ce28:	andeq	r3, r2, r0, lsr #6
   1ce2c:	andeq	ip, r2, r4, lsl #25
   1ce30:			; <UNDEFINED> instruction: 0x00022eb8
   1ce34:	andeq	r3, r2, r8, lsr #6
   1ce38:	andeq	ip, r2, ip, asr ip
   1ce3c:	andeq	r2, r2, r4, lsl #30
   1ce40:	andeq	r2, r2, r0, asr #29
   1ce44:	andeq	r3, r2, r8, asr r0
   1ce48:	muleq	r2, r4, lr
   1ce4c:	andeq	r3, r2, r8, lsr r0
   1ce50:	andeq	r2, r2, ip, lsr lr
   1ce54:	andeq	ip, r2, r4, ror #23
   1ce58:	andeq	r2, r2, ip, lsl lr
   1ce5c:	andeq	ip, r2, r4, asr #23
   1ce60:	strdeq	r2, [r2], -ip
   1ce64:	andeq	ip, r2, r4, lsr #23
   1ce68:	strdeq	r2, [r2], -ip
   1ce6c:	andeq	r2, r2, r4, lsr lr
   1ce70:	andeq	r2, r2, r0, lsr #28
   1ce74:	andeq	r2, r2, ip, lsl lr
   1ce78:	andeq	r2, r2, r8, lsl #28
   1ce7c:	strdeq	r2, [r2], -r4
   1ce80:	andeq	r2, r2, r0, ror #27
   1ce84:	andeq	r2, r2, ip, asr #27
   1ce88:	andeq	r2, r2, r0, asr #27
   1ce8c:	andeq	r2, r2, r8, lsr #27
   1ce90:	muleq	r2, ip, sp
   1ce94:	andeq	r2, r2, r8, ror sp
   1ce98:	andeq	r2, r2, r0, lsr #27
   1ce9c:	andeq	r2, r2, ip, lsl #27
   1cea0:	andeq	r2, r2, r8, ror sp
   1cea4:	andeq	r2, r2, ip, ror #26
   1cea8:	andeq	r2, r2, r8, lsl #26
   1ceac:	andeq	r3, r2, r8, ror r1
   1ceb0:			; <UNDEFINED> instruction: 0x0002cab4
   1ceb4:	strdeq	r2, [r2], -r8
   1ceb8:	andeq	r2, r2, r8, ror #26
   1cebc:	andeq	ip, r2, r4, lsr #13
   1cec0:	muleq	r2, r8, r8
   1cec4:	andeq	r2, r2, r8, lsl sp
   1cec8:	andeq	ip, r2, ip, ror r6
   1cecc:	andeq	r2, r2, r0, ror r8
   1ced0:	strdeq	r2, [r2], -r0
   1ced4:	andeq	r2, r2, r4, asr r8
   1ced8:	ldrdeq	r2, [r2], -r4
   1cedc:	andeq	ip, r2, r8, lsr r6
   1cee0:	andeq	r2, r2, ip, ror #16
   1cee4:	ldrdeq	r2, [r2], -ip
   1cee8:	andeq	ip, r2, r0, lsl r6
   1ceec:	andeq	r2, r2, r4, asr #16
   1cef0:			; <UNDEFINED> instruction: 0x00022cb4
   1cef4:	andeq	ip, r2, r8, ror #11
   1cef8:	andeq	r2, r2, ip, lsl r8
   1cefc:	andeq	r2, r2, ip, lsl #25
   1cf00:	andeq	r2, r2, r0, ror #16
   1cf04:	andeq	r2, r2, ip, asr #16
   1cf08:	andeq	r2, r2, r8, lsr r8
   1cf0c:	andeq	r2, r2, ip, lsr #16
   1cf10:	andeq	r2, r2, r4, lsl r8
   1cf14:	strdeq	r2, [r2], -ip
   1cf18:	andeq	r2, r2, r4, ror #15
   1cf1c:	andeq	r2, r2, r4, ror #17
   1cf20:	andeq	r2, r2, r8, ror #16
   1cf24:			; <UNDEFINED> instruction: 0x000228bc
   1cf28:	andeq	sl, r2, r8, ror r9
   1cf2c:	muleq	r2, ip, ip
   1cf30:	andeq	r2, r2, r8, asr #15
   1cf34:	andeq	r2, r2, r8, lsr #18
   1cf38:	muleq	r2, r4, r7
   1cf3c:	andeq	r2, r2, r0, lsl #15
   1cf40:	andeq	r2, r2, ip, ror #14
   1cf44:	andeq	r2, r2, r8, asr r7
   1cf48:	andeq	r2, r2, ip, asr #14
   1cf4c:	andeq	r2, r2, r4, lsr r7
   1cf50:	andeq	r2, r2, ip, lsl r7
   1cf54:	andeq	r2, r2, r4, lsl #14
   1cf58:	andeq	r2, r2, ip, lsr #14
   1cf5c:			; <UNDEFINED> instruction: 0x000228bc
   1cf60:	strdeq	r2, [r2], -ip
   1cf64:	andeq	r2, r2, r8, ror #13
   1cf68:	ldrdeq	r2, [r2], -ip
   1cf6c:	andeq	r2, r2, r4, asr #13
   1cf70:	andeq	r2, r2, ip, lsr #13
   1cf74:	muleq	r2, r4, r6
   1cf78:	andeq	r2, r2, ip, asr #13
   1cf7c:			; <UNDEFINED> instruction: 0x000226b8
   1cf80:			; <UNDEFINED> instruction: 0x000226b4
   1cf84:	andeq	r2, r2, r0, lsr #16
   1cf88:	andeq	r2, r2, r0, lsl #13
   1cf8c:	andeq	r2, r2, ip, ror #12
   1cf90:	andeq	r2, r2, r8, asr r6
   1cf94:	andeq	r2, r2, r4, asr #12
   1cf98:	andeq	r2, r2, r8, lsr r6
   1cf9c:	andeq	r2, r2, r0, lsr #12
   1cfa0:	andeq	r2, r2, r8, lsl #12
   1cfa4:	strdeq	r2, [r2], -r0
   1cfa8:	andeq	r2, r2, r0, asr #13
   1cfac:	andeq	r2, r2, r4, asr #12
   1cfb0:	muleq	r2, r8, r6
   1cfb4:	andeq	sl, r2, r4, asr r7
   1cfb8:	andeq	sl, r2, r8, ror sl
   1cfbc:	andeq	r2, r2, ip, ror #12
   1cfc0:	strdeq	r2, [r2], -r0
   1cfc4:	andeq	r2, r2, r4, asr #12
   1cfc8:	andeq	sl, r2, r0, lsl #14
   1cfcc:	andeq	sl, r2, r4, lsr #20
   1cfd0:	andeq	r2, r2, r8, lsl r6
   1cfd4:	muleq	r2, ip, r5
   1cfd8:	strdeq	r2, [r2], -r0
   1cfdc:	andeq	sl, r2, ip, lsr #13
   1cfe0:	ldrdeq	sl, [r2], -r0
   1cfe4:	andeq	r2, r2, r4, lsl #13
   1cfe8:	muleq	r2, r8, r5
   1cfec:	andeq	r2, r2, ip, lsl r5
   1cff0:	andeq	r2, r2, r0, ror r5
   1cff4:	andeq	sl, r2, ip, lsr #12
   1cff8:	andeq	sl, r2, r0, asr r9
   1cffc:	andeq	r2, r2, r4, asr #10
   1d000:	andeq	r2, r2, r8, asr #9
   1d004:	andeq	r2, r2, ip, lsl r5
   1d008:	ldrdeq	sl, [r2], -r8
   1d00c:	strdeq	sl, [r2], -ip
   1d010:	muleq	r0, ip, r0
   1d014:	strdeq	r2, [r2], -r0
   1d018:	andeq	r2, r2, r4, ror r4
   1d01c:	andeq	r2, r2, r8, asr #9
   1d020:	andeq	sl, r2, r4, lsl #11
   1d024:	andeq	sl, r2, r8, lsr #17
   1d028:	ldr	r2, [pc, #-380]	; 1ceb4 <__flatcc_gen_sort@@Base+0x22e8>
   1d02c:	add	r2, pc, r2
   1d030:	str	r2, [sp, #84]	; 0x54
   1d034:	ldr	r2, [pc, #-388]	; 1ceb8 <__flatcc_gen_sort@@Base+0x22ec>
   1d038:	add	r2, pc, r2
   1d03c:	str	r2, [sp, #88]	; 0x58
   1d040:	ldr	r2, [pc, #-396]	; 1cebc <__flatcc_gen_sort@@Base+0x22f0>
   1d044:	add	r2, pc, r2
   1d048:	str	r2, [sp, #80]	; 0x50
   1d04c:	b	1c4cc <__flatcc_gen_sort@@Base+0x1900>
   1d050:	ldr	r2, [pc, #-408]	; 1cec0 <__flatcc_gen_sort@@Base+0x22f4>
   1d054:	add	r2, pc, r2
   1d058:	str	r2, [sp, #84]	; 0x54
   1d05c:	ldr	r2, [pc, #-416]	; 1cec4 <__flatcc_gen_sort@@Base+0x22f8>
   1d060:	add	r2, pc, r2
   1d064:	str	r2, [sp, #88]	; 0x58
   1d068:	ldr	r2, [pc, #-424]	; 1cec8 <__flatcc_gen_sort@@Base+0x22fc>
   1d06c:	add	r2, pc, r2
   1d070:	str	r2, [sp, #80]	; 0x50
   1d074:	b	1c500 <__flatcc_gen_sort@@Base+0x1934>
   1d078:	ldr	r3, [pc, #-436]	; 1cecc <__flatcc_gen_sort@@Base+0x2300>
   1d07c:	add	r3, pc, r3
   1d080:	str	r3, [sp, #84]	; 0x54
   1d084:	ldr	r3, [pc, #-444]	; 1ced0 <__flatcc_gen_sort@@Base+0x2304>
   1d088:	add	r3, pc, r3
   1d08c:	str	r3, [sp, #88]	; 0x58
   1d090:	b	1c354 <__flatcc_gen_sort@@Base+0x1788>
   1d094:	ldr	r2, [pc, #-456]	; 1ced4 <__flatcc_gen_sort@@Base+0x2308>
   1d098:	add	r2, pc, r2
   1d09c:	str	r2, [sp, #84]	; 0x54
   1d0a0:	ldr	r2, [pc, #-464]	; 1ced8 <__flatcc_gen_sort@@Base+0x230c>
   1d0a4:	add	r2, pc, r2
   1d0a8:	str	r2, [sp, #88]	; 0x58
   1d0ac:	ldr	r2, [pc, #-472]	; 1cedc <__flatcc_gen_sort@@Base+0x2310>
   1d0b0:	add	r2, pc, r2
   1d0b4:	str	r2, [sp, #80]	; 0x50
   1d0b8:	b	1c4cc <__flatcc_gen_sort@@Base+0x1900>
   1d0bc:	ldr	r2, [pc, #-484]	; 1cee0 <__flatcc_gen_sort@@Base+0x2314>
   1d0c0:	add	r2, pc, r2
   1d0c4:	str	r2, [sp, #84]	; 0x54
   1d0c8:	ldr	r2, [pc, #-492]	; 1cee4 <__flatcc_gen_sort@@Base+0x2318>
   1d0cc:	add	r2, pc, r2
   1d0d0:	str	r2, [sp, #88]	; 0x58
   1d0d4:	ldr	r2, [pc, #-500]	; 1cee8 <__flatcc_gen_sort@@Base+0x231c>
   1d0d8:	add	r2, pc, r2
   1d0dc:	str	r2, [sp, #80]	; 0x50
   1d0e0:	b	1c4cc <__flatcc_gen_sort@@Base+0x1900>
   1d0e4:	ldr	r2, [pc, #-512]	; 1ceec <__flatcc_gen_sort@@Base+0x2320>
   1d0e8:	add	r2, pc, r2
   1d0ec:	str	r2, [sp, #84]	; 0x54
   1d0f0:	ldr	r2, [pc, #-520]	; 1cef0 <__flatcc_gen_sort@@Base+0x2324>
   1d0f4:	add	r2, pc, r2
   1d0f8:	str	r2, [sp, #88]	; 0x58
   1d0fc:	ldr	r2, [pc, #-528]	; 1cef4 <__flatcc_gen_sort@@Base+0x2328>
   1d100:	add	r2, pc, r2
   1d104:	str	r2, [sp, #80]	; 0x50
   1d108:	b	1c500 <__flatcc_gen_sort@@Base+0x1934>
   1d10c:	ldr	r3, [pc, #-540]	; 1cef8 <__flatcc_gen_sort@@Base+0x232c>
   1d110:	add	r3, pc, r3
   1d114:	str	r3, [sp, #84]	; 0x54
   1d118:	ldr	r3, [pc, #-548]	; 1cefc <__flatcc_gen_sort@@Base+0x2330>
   1d11c:	add	r3, pc, r3
   1d120:	str	r3, [sp, #88]	; 0x58
   1d124:	b	1c354 <__flatcc_gen_sort@@Base+0x1788>
   1d128:	ldr	r2, [pc, #-560]	; 1cf00 <__flatcc_gen_sort@@Base+0x2334>
   1d12c:	add	r2, pc, r2
   1d130:	b	1ca28 <__flatcc_gen_sort@@Base+0x1e5c>
   1d134:	ldr	r2, [pc, #-568]	; 1cf04 <__flatcc_gen_sort@@Base+0x2338>
   1d138:	add	r2, pc, r2
   1d13c:	b	1ca28 <__flatcc_gen_sort@@Base+0x1e5c>
   1d140:	ldr	r2, [pc, #-576]	; 1cf08 <__flatcc_gen_sort@@Base+0x233c>
   1d144:	add	r2, pc, r2
   1d148:	b	1ca28 <__flatcc_gen_sort@@Base+0x1e5c>
   1d14c:	ldr	r2, [pc, #-584]	; 1cf0c <__flatcc_gen_sort@@Base+0x2340>
   1d150:	add	r2, pc, r2
   1d154:	b	1ca28 <__flatcc_gen_sort@@Base+0x1e5c>
   1d158:	ldr	r2, [pc, #-592]	; 1cf10 <__flatcc_gen_sort@@Base+0x2344>
   1d15c:	add	r2, pc, r2
   1d160:	b	1ca28 <__flatcc_gen_sort@@Base+0x1e5c>
   1d164:	ldr	r2, [pc, #-600]	; 1cf14 <__flatcc_gen_sort@@Base+0x2348>
   1d168:	add	r2, pc, r2
   1d16c:	b	1ca28 <__flatcc_gen_sort@@Base+0x1e5c>
   1d170:	ldr	r2, [pc, #-608]	; 1cf18 <__flatcc_gen_sort@@Base+0x234c>
   1d174:	add	r2, pc, r2
   1d178:	b	1ca28 <__flatcc_gen_sort@@Base+0x1e5c>
   1d17c:	ldr	r2, [pc, #-372]	; 1d010 <__flatcc_gen_sort@@Base+0x2444>
   1d180:	ldr	r3, [pc, #-620]	; 1cf1c <__flatcc_gen_sort@@Base+0x2350>
   1d184:	ldr	r4, [pc, #-620]	; 1cf20 <__flatcc_gen_sort@@Base+0x2354>
   1d188:	ldr	r1, [fp, r2]
   1d18c:	add	r3, pc, r3
   1d190:	str	r3, [sp]
   1d194:	ldr	r0, [r1]
   1d198:	ldr	r1, [pc, #-636]	; 1cf24 <__flatcc_gen_sort@@Base+0x2358>
   1d19c:	add	r4, pc, r4
   1d1a0:	mov	r2, r4
   1d1a4:	mov	r3, #226	; 0xe2
   1d1a8:	add	r1, pc, r1
   1d1ac:	bl	13f7c <fprintf@plt>
   1d1b0:	ldr	r3, [pc, #-656]	; 1cf28 <__flatcc_gen_sort@@Base+0x235c>
   1d1b4:	ldr	r0, [pc, #-656]	; 1cf2c <__flatcc_gen_sort@@Base+0x2360>
   1d1b8:	add	r3, pc, r3
   1d1bc:	mov	r1, r4
   1d1c0:	add	r3, r3, #116	; 0x74
   1d1c4:	mov	r2, #226	; 0xe2
   1d1c8:	add	r0, pc, r0
   1d1cc:	bl	14030 <__assert_fail@plt>
   1d1d0:	ldr	r2, [pc, #-680]	; 1cf30 <__flatcc_gen_sort@@Base+0x2364>
   1d1d4:	add	r2, pc, r2
   1d1d8:	ldrd	r0, [r4, #48]	; 0x30
   1d1dc:	add	r3, sp, #100	; 0x64
   1d1e0:	str	r3, [sp, #92]	; 0x5c
   1d1e4:	strd	r0, [sp]
   1d1e8:	ldr	r1, [pc, #-700]	; 1cf34 <__flatcc_gen_sort@@Base+0x2368>
   1d1ec:	mov	r0, r3
   1d1f0:	add	r1, pc, r1
   1d1f4:	bl	13fe8 <sprintf@plt>
   1d1f8:	b	1c87c <__flatcc_gen_sort@@Base+0x1cb0>
   1d1fc:	ldr	r2, [pc, #-716]	; 1cf38 <__flatcc_gen_sort@@Base+0x236c>
   1d200:	add	r2, pc, r2
   1d204:	b	1d1d8 <__flatcc_gen_sort@@Base+0x260c>
   1d208:	ldr	r2, [pc, #-724]	; 1cf3c <__flatcc_gen_sort@@Base+0x2370>
   1d20c:	add	r2, pc, r2
   1d210:	b	1d1d8 <__flatcc_gen_sort@@Base+0x260c>
   1d214:	ldr	r2, [pc, #-732]	; 1cf40 <__flatcc_gen_sort@@Base+0x2374>
   1d218:	add	r2, pc, r2
   1d21c:	b	1d1d8 <__flatcc_gen_sort@@Base+0x260c>
   1d220:	ldr	r2, [pc, #-740]	; 1cf44 <__flatcc_gen_sort@@Base+0x2378>
   1d224:	add	r2, pc, r2
   1d228:	b	1d1d8 <__flatcc_gen_sort@@Base+0x260c>
   1d22c:	ldr	r2, [pc, #-748]	; 1cf48 <__flatcc_gen_sort@@Base+0x237c>
   1d230:	add	r2, pc, r2
   1d234:	b	1d1d8 <__flatcc_gen_sort@@Base+0x260c>
   1d238:	ldr	r2, [pc, #-756]	; 1cf4c <__flatcc_gen_sort@@Base+0x2380>
   1d23c:	add	r2, pc, r2
   1d240:	b	1d1d8 <__flatcc_gen_sort@@Base+0x260c>
   1d244:	ldr	r2, [pc, #-764]	; 1cf50 <__flatcc_gen_sort@@Base+0x2384>
   1d248:	add	r2, pc, r2
   1d24c:	b	1d1d8 <__flatcc_gen_sort@@Base+0x260c>
   1d250:	ldr	r2, [pc, #-772]	; 1cf54 <__flatcc_gen_sort@@Base+0x2388>
   1d254:	add	r2, pc, r2
   1d258:	b	1d1d8 <__flatcc_gen_sort@@Base+0x260c>
   1d25c:	ldr	r2, [pc, #-780]	; 1cf58 <__flatcc_gen_sort@@Base+0x238c>
   1d260:	add	r2, pc, r2
   1d264:	ldr	r1, [pc, #-784]	; 1cf5c <__flatcc_gen_sort@@Base+0x2390>
   1d268:	add	r3, sp, #100	; 0x64
   1d26c:	str	r3, [sp, #92]	; 0x5c
   1d270:	mov	r0, r3
   1d274:	add	r1, pc, r1
   1d278:	ldrb	r3, [r4, #48]	; 0x30
   1d27c:	bl	13fe8 <sprintf@plt>
   1d280:	b	1c87c <__flatcc_gen_sort@@Base+0x1cb0>
   1d284:	ldr	r2, [pc, #-812]	; 1cf60 <__flatcc_gen_sort@@Base+0x2394>
   1d288:	add	r2, pc, r2
   1d28c:	b	1d264 <__flatcc_gen_sort@@Base+0x2698>
   1d290:	ldr	r2, [pc, #-820]	; 1cf64 <__flatcc_gen_sort@@Base+0x2398>
   1d294:	add	r2, pc, r2
   1d298:	b	1d264 <__flatcc_gen_sort@@Base+0x2698>
   1d29c:	ldr	r2, [pc, #-828]	; 1cf68 <__flatcc_gen_sort@@Base+0x239c>
   1d2a0:	add	r2, pc, r2
   1d2a4:	b	1d264 <__flatcc_gen_sort@@Base+0x2698>
   1d2a8:	ldr	r2, [pc, #-836]	; 1cf6c <__flatcc_gen_sort@@Base+0x23a0>
   1d2ac:	add	r2, pc, r2
   1d2b0:	b	1d264 <__flatcc_gen_sort@@Base+0x2698>
   1d2b4:	ldr	r2, [pc, #-844]	; 1cf70 <__flatcc_gen_sort@@Base+0x23a4>
   1d2b8:	add	r2, pc, r2
   1d2bc:	b	1d264 <__flatcc_gen_sort@@Base+0x2698>
   1d2c0:	ldr	r2, [pc, #-852]	; 1cf74 <__flatcc_gen_sort@@Base+0x23a8>
   1d2c4:	add	r2, pc, r2
   1d2c8:	b	1d264 <__flatcc_gen_sort@@Base+0x2698>
   1d2cc:	ldr	r2, [pc, #-860]	; 1cf78 <__flatcc_gen_sort@@Base+0x23ac>
   1d2d0:	add	r2, pc, r2
   1d2d4:	b	1d264 <__flatcc_gen_sort@@Base+0x2698>
   1d2d8:	ldr	r2, [pc, #-868]	; 1cf7c <__flatcc_gen_sort@@Base+0x23b0>
   1d2dc:	add	r2, pc, r2
   1d2e0:	b	1d264 <__flatcc_gen_sort@@Base+0x2698>
   1d2e4:	ldr	r2, [pc, #-876]	; 1cf80 <__flatcc_gen_sort@@Base+0x23b4>
   1d2e8:	add	r2, pc, r2
   1d2ec:	ldrd	r0, [r4, #48]	; 0x30
   1d2f0:	add	r3, sp, #100	; 0x64
   1d2f4:	str	r3, [sp, #92]	; 0x5c
   1d2f8:	strd	r0, [sp]
   1d2fc:	ldr	r1, [pc, #-896]	; 1cf84 <__flatcc_gen_sort@@Base+0x23b8>
   1d300:	mov	r0, r3
   1d304:	add	r1, pc, r1
   1d308:	bl	13fe8 <sprintf@plt>
   1d30c:	b	1c87c <__flatcc_gen_sort@@Base+0x1cb0>
   1d310:	ldr	r2, [pc, #-912]	; 1cf88 <__flatcc_gen_sort@@Base+0x23bc>
   1d314:	add	r2, pc, r2
   1d318:	b	1d2ec <__flatcc_gen_sort@@Base+0x2720>
   1d31c:	ldr	r2, [pc, #-920]	; 1cf8c <__flatcc_gen_sort@@Base+0x23c0>
   1d320:	add	r2, pc, r2
   1d324:	b	1d2ec <__flatcc_gen_sort@@Base+0x2720>
   1d328:	ldr	r2, [pc, #-928]	; 1cf90 <__flatcc_gen_sort@@Base+0x23c4>
   1d32c:	add	r2, pc, r2
   1d330:	b	1d2ec <__flatcc_gen_sort@@Base+0x2720>
   1d334:	ldr	r2, [pc, #-936]	; 1cf94 <__flatcc_gen_sort@@Base+0x23c8>
   1d338:	add	r2, pc, r2
   1d33c:	b	1d2ec <__flatcc_gen_sort@@Base+0x2720>
   1d340:	ldr	r2, [pc, #-944]	; 1cf98 <__flatcc_gen_sort@@Base+0x23cc>
   1d344:	add	r2, pc, r2
   1d348:	b	1d2ec <__flatcc_gen_sort@@Base+0x2720>
   1d34c:	ldr	r2, [pc, #-952]	; 1cf9c <__flatcc_gen_sort@@Base+0x23d0>
   1d350:	add	r2, pc, r2
   1d354:	b	1d2ec <__flatcc_gen_sort@@Base+0x2720>
   1d358:	ldr	r2, [pc, #-960]	; 1cfa0 <__flatcc_gen_sort@@Base+0x23d4>
   1d35c:	add	r2, pc, r2
   1d360:	b	1d2ec <__flatcc_gen_sort@@Base+0x2720>
   1d364:	ldr	r2, [pc, #-968]	; 1cfa4 <__flatcc_gen_sort@@Base+0x23d8>
   1d368:	add	r2, pc, r2
   1d36c:	b	1d2ec <__flatcc_gen_sort@@Base+0x2720>
   1d370:	ldr	r3, [r5, #204]	; 0xcc
   1d374:	mov	r2, #32
   1d378:	mov	r1, #1
   1d37c:	ldr	r0, [sp, #76]	; 0x4c
   1d380:	bl	13f10 <fwrite@plt>
   1d384:	b	1c0f0 <__flatcc_gen_sort@@Base+0x1524>
   1d388:	ldr	r3, [r5, #204]	; 0xcc
   1d38c:	mov	r2, #32
   1d390:	mov	r1, #1
   1d394:	ldr	r0, [sp, #72]	; 0x48
   1d398:	bl	13f10 <fwrite@plt>
   1d39c:	b	1c130 <__flatcc_gen_sort@@Base+0x1564>
   1d3a0:	ldr	r2, [pc, #-920]	; 1d010 <__flatcc_gen_sort@@Base+0x2444>
   1d3a4:	ldr	r3, [pc, #-1028]	; 1cfa8 <__flatcc_gen_sort@@Base+0x23dc>
   1d3a8:	ldr	r4, [pc, #-1028]	; 1cfac <__flatcc_gen_sort@@Base+0x23e0>
   1d3ac:	ldr	r1, [fp, r2]
   1d3b0:	add	r3, pc, r3
   1d3b4:	str	r3, [sp]
   1d3b8:	ldr	r0, [r1]
   1d3bc:	ldr	r1, [pc, #-1044]	; 1cfb0 <__flatcc_gen_sort@@Base+0x23e4>
   1d3c0:	add	r4, pc, r4
   1d3c4:	mov	r2, r4
   1d3c8:	mov	r3, #260	; 0x104
   1d3cc:	add	r1, pc, r1
   1d3d0:	bl	13f7c <fprintf@plt>
   1d3d4:	ldr	r3, [pc, #-1064]	; 1cfb4 <__flatcc_gen_sort@@Base+0x23e8>
   1d3d8:	ldr	r0, [pc, #-1064]	; 1cfb8 <__flatcc_gen_sort@@Base+0x23ec>
   1d3dc:	add	r3, pc, r3
   1d3e0:	mov	r1, r4
   1d3e4:	add	r3, r3, #128	; 0x80
   1d3e8:	mov	r2, #260	; 0x104
   1d3ec:	add	r0, pc, r0
   1d3f0:	bl	14030 <__assert_fail@plt>
   1d3f4:	ldr	r2, [pc, #-1004]	; 1d010 <__flatcc_gen_sort@@Base+0x2444>
   1d3f8:	ldr	r3, [pc, #-1092]	; 1cfbc <__flatcc_gen_sort@@Base+0x23f0>
   1d3fc:	ldr	r4, [pc, #-1092]	; 1cfc0 <__flatcc_gen_sort@@Base+0x23f4>
   1d400:	ldr	r1, [fp, r2]
   1d404:	add	r3, pc, r3
   1d408:	str	r3, [sp]
   1d40c:	ldr	r0, [r1]
   1d410:	ldr	r1, [pc, #-1108]	; 1cfc4 <__flatcc_gen_sort@@Base+0x23f8>
   1d414:	add	r4, pc, r4
   1d418:	mov	r2, r4
   1d41c:	mov	r3, #226	; 0xe2
   1d420:	add	r1, pc, r1
   1d424:	bl	13f7c <fprintf@plt>
   1d428:	ldr	r3, [pc, #-1128]	; 1cfc8 <__flatcc_gen_sort@@Base+0x23fc>
   1d42c:	ldr	r0, [pc, #-1128]	; 1cfcc <__flatcc_gen_sort@@Base+0x2400>
   1d430:	add	r3, pc, r3
   1d434:	mov	r1, r4
   1d438:	add	r3, r3, #116	; 0x74
   1d43c:	mov	r2, #226	; 0xe2
   1d440:	add	r0, pc, r0
   1d444:	bl	14030 <__assert_fail@plt>
   1d448:	ldr	r2, [pc, #-1088]	; 1d010 <__flatcc_gen_sort@@Base+0x2444>
   1d44c:	ldr	r3, [pc, #-1156]	; 1cfd0 <__flatcc_gen_sort@@Base+0x2404>
   1d450:	ldr	r4, [pc, #-1156]	; 1cfd4 <__flatcc_gen_sort@@Base+0x2408>
   1d454:	ldr	r1, [fp, r2]
   1d458:	add	r3, pc, r3
   1d45c:	str	r3, [sp]
   1d460:	ldr	r0, [r1]
   1d464:	ldr	r1, [pc, #-1172]	; 1cfd8 <__flatcc_gen_sort@@Base+0x240c>
   1d468:	add	r4, pc, r4
   1d46c:	mov	r2, r4
   1d470:	mov	r3, #226	; 0xe2
   1d474:	add	r1, pc, r1
   1d478:	bl	13f7c <fprintf@plt>
   1d47c:	ldr	r3, [pc, #-1192]	; 1cfdc <__flatcc_gen_sort@@Base+0x2410>
   1d480:	ldr	r0, [pc, #-1192]	; 1cfe0 <__flatcc_gen_sort@@Base+0x2414>
   1d484:	add	r3, pc, r3
   1d488:	mov	r1, r4
   1d48c:	add	r3, r3, #116	; 0x74
   1d490:	mov	r2, #226	; 0xe2
   1d494:	add	r0, pc, r0
   1d498:	bl	14030 <__assert_fail@plt>
   1d49c:	vldr	d7, [r4, #48]	; 0x30
   1d4a0:	ldr	r1, [pc, #-1220]	; 1cfe4 <__flatcc_gen_sort@@Base+0x2418>
   1d4a4:	add	r3, sp, #100	; 0x64
   1d4a8:	str	r3, [sp, #92]	; 0x5c
   1d4ac:	vcvt.f32.f64	s14, d7
   1d4b0:	mov	r0, r3
   1d4b4:	add	r1, pc, r1
   1d4b8:	vcvt.f64.f32	d7, s14
   1d4bc:	vmov	r2, r3, d7
   1d4c0:	bl	13fe8 <sprintf@plt>
   1d4c4:	b	1c87c <__flatcc_gen_sort@@Base+0x1cb0>
   1d4c8:	ldr	r2, [pc, #-1216]	; 1d010 <__flatcc_gen_sort@@Base+0x2444>
   1d4cc:	ldr	r3, [pc, #-1260]	; 1cfe8 <__flatcc_gen_sort@@Base+0x241c>
   1d4d0:	ldr	r4, [pc, #-1260]	; 1cfec <__flatcc_gen_sort@@Base+0x2420>
   1d4d4:	ldr	r1, [fp, r2]
   1d4d8:	add	r3, pc, r3
   1d4dc:	str	r3, [sp]
   1d4e0:	ldr	r0, [r1]
   1d4e4:	ldr	r1, [pc, #-1276]	; 1cff0 <__flatcc_gen_sort@@Base+0x2424>
   1d4e8:	add	r4, pc, r4
   1d4ec:	mov	r2, r4
   1d4f0:	mov	r3, #226	; 0xe2
   1d4f4:	add	r1, pc, r1
   1d4f8:	bl	13f7c <fprintf@plt>
   1d4fc:	ldr	r3, [pc, #-1296]	; 1cff4 <__flatcc_gen_sort@@Base+0x2428>
   1d500:	ldr	r0, [pc, #-1296]	; 1cff8 <__flatcc_gen_sort@@Base+0x242c>
   1d504:	add	r3, pc, r3
   1d508:	mov	r1, r4
   1d50c:	add	r3, r3, #116	; 0x74
   1d510:	mov	r2, #226	; 0xe2
   1d514:	add	r0, pc, r0
   1d518:	bl	14030 <__assert_fail@plt>
   1d51c:	ldr	r2, [pc, #-1300]	; 1d010 <__flatcc_gen_sort@@Base+0x2444>
   1d520:	ldr	r3, [pc, #-1324]	; 1cffc <__flatcc_gen_sort@@Base+0x2430>
   1d524:	ldr	r4, [pc, #-1324]	; 1d000 <__flatcc_gen_sort@@Base+0x2434>
   1d528:	ldr	r1, [fp, r2]
   1d52c:	add	r3, pc, r3
   1d530:	str	r3, [sp]
   1d534:	ldr	r0, [r1]
   1d538:	ldr	r1, [pc, #-1340]	; 1d004 <__flatcc_gen_sort@@Base+0x2438>
   1d53c:	add	r4, pc, r4
   1d540:	mov	r2, r4
   1d544:	mov	r3, #226	; 0xe2
   1d548:	add	r1, pc, r1
   1d54c:	bl	13f7c <fprintf@plt>
   1d550:	ldr	r3, [pc, #-1360]	; 1d008 <__flatcc_gen_sort@@Base+0x243c>
   1d554:	ldr	r0, [pc, #-1360]	; 1d00c <__flatcc_gen_sort@@Base+0x2440>
   1d558:	add	r3, pc, r3
   1d55c:	mov	r1, r4
   1d560:	add	r3, r3, #116	; 0x74
   1d564:	mov	r2, #226	; 0xe2
   1d568:	add	r0, pc, r0
   1d56c:	bl	14030 <__assert_fail@plt>
   1d570:	ldr	r2, [pc, #-1384]	; 1d010 <__flatcc_gen_sort@@Base+0x2444>
   1d574:	ldr	r3, [pc, #-1384]	; 1d014 <__flatcc_gen_sort@@Base+0x2448>
   1d578:	ldr	r4, [pc, #-1384]	; 1d018 <__flatcc_gen_sort@@Base+0x244c>
   1d57c:	ldr	r1, [fp, r2]
   1d580:	add	r3, pc, r3
   1d584:	str	r3, [sp]
   1d588:	ldr	r0, [r1]
   1d58c:	ldr	r1, [pc, #-1400]	; 1d01c <__flatcc_gen_sort@@Base+0x2450>
   1d590:	add	r4, pc, r4
   1d594:	mov	r2, r4
   1d598:	mov	r3, #226	; 0xe2
   1d59c:	add	r1, pc, r1
   1d5a0:	bl	13f7c <fprintf@plt>
   1d5a4:	ldr	r3, [pc, #-1420]	; 1d020 <__flatcc_gen_sort@@Base+0x2454>
   1d5a8:	ldr	r0, [pc, #-1420]	; 1d024 <__flatcc_gen_sort@@Base+0x2458>
   1d5ac:	add	r3, pc, r3
   1d5b0:	mov	r1, r4
   1d5b4:	add	r3, r3, #116	; 0x74
   1d5b8:	mov	r2, #226	; 0xe2
   1d5bc:	add	r0, pc, r0
   1d5c0:	bl	14030 <__assert_fail@plt>
   1d5c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d5c8:	sub	sp, sp, #524	; 0x20c
   1d5cc:	mov	sl, r0
   1d5d0:	add	r9, sp, #300	; 0x12c
   1d5d4:	mov	r2, #220	; 0xdc
   1d5d8:	mov	r0, r9
   1d5dc:	mov	r1, #0
   1d5e0:	bl	13f94 <memset@plt>
   1d5e4:	ldr	r3, [sl, #208]	; 0xd0
   1d5e8:	ldr	r2, [pc, #3932]	; 1e54c <__flatcc_gen_sort@@Base+0x3980>
   1d5ec:	ldr	fp, [r3, #40]	; 0x28
   1d5f0:	add	r2, pc, r2
   1d5f4:	cmp	fp, #0
   1d5f8:	str	r2, [sp, #56]	; 0x38
   1d5fc:	beq	1d8c8 <__flatcc_gen_sort@@Base+0x2cfc>
   1d600:	ldr	r6, [pc, #3912]	; 1e550 <__flatcc_gen_sort@@Base+0x3984>
   1d604:	mov	r2, #0
   1d608:	add	r6, pc, r6
   1d60c:	mov	r5, #1
   1d610:	b	1d620 <__flatcc_gen_sort@@Base+0x2a54>
   1d614:	ldr	fp, [fp]
   1d618:	cmp	fp, #0
   1d61c:	beq	1d668 <__flatcc_gen_sort@@Base+0x2a9c>
   1d620:	ldrh	r3, [fp, #8]
   1d624:	cmp	r3, #4
   1d628:	bne	1d614 <__flatcc_gen_sort@@Base+0x2a48>
   1d62c:	mov	r1, fp
   1d630:	ldr	r0, [fp, #12]
   1d634:	mov	r2, r9
   1d638:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   1d63c:	ldr	r0, [sl, #204]	; 0xcc
   1d640:	mov	r2, sl
   1d644:	str	r9, [sp, #4]
   1d648:	str	sl, [sp]
   1d64c:	mov	r3, r9
   1d650:	mov	r1, r6
   1d654:	bl	13f7c <fprintf@plt>
   1d658:	ldr	fp, [fp]
   1d65c:	mov	r2, r5
   1d660:	cmp	fp, #0
   1d664:	bne	1d620 <__flatcc_gen_sort@@Base+0x2a54>
   1d668:	cmp	r2, #0
   1d66c:	beq	1d67c <__flatcc_gen_sort@@Base+0x2ab0>
   1d670:	ldr	r1, [sl, #204]	; 0xcc
   1d674:	mov	r0, #10
   1d678:	bl	13fdc <fputc@plt>
   1d67c:	ldr	r3, [sl, #208]	; 0xd0
   1d680:	ldr	r6, [r3, #40]	; 0x28
   1d684:	cmp	r6, #0
   1d688:	beq	1e544 <__flatcc_gen_sort@@Base+0x3978>
   1d68c:	ldr	r3, [pc, #3776]	; 1e554 <__flatcc_gen_sort@@Base+0x3988>
   1d690:	ldr	r8, [pc, #3776]	; 1e558 <__flatcc_gen_sort@@Base+0x398c>
   1d694:	add	r3, pc, r3
   1d698:	str	r3, [sp, #36]	; 0x24
   1d69c:	ldr	r3, [pc, #3768]	; 1e55c <__flatcc_gen_sort@@Base+0x3990>
   1d6a0:	add	r8, pc, r8
   1d6a4:	add	r3, pc, r3
   1d6a8:	str	r3, [sp, #40]	; 0x28
   1d6ac:	ldr	r3, [pc, #3756]	; 1e560 <__flatcc_gen_sort@@Base+0x3994>
   1d6b0:	mov	fp, #0
   1d6b4:	add	r3, pc, r3
   1d6b8:	str	r3, [sp, #52]	; 0x34
   1d6bc:	ldr	r3, [pc, #3744]	; 1e564 <__flatcc_gen_sort@@Base+0x3998>
   1d6c0:	add	r3, pc, r3
   1d6c4:	str	r3, [sp, #48]	; 0x30
   1d6c8:	ldr	r3, [pc, #3736]	; 1e568 <__flatcc_gen_sort@@Base+0x399c>
   1d6cc:	add	r3, pc, r3
   1d6d0:	str	r3, [sp, #60]	; 0x3c
   1d6d4:	b	1d6e4 <__flatcc_gen_sort@@Base+0x2b18>
   1d6d8:	ldr	r6, [r6]
   1d6dc:	cmp	r6, #0
   1d6e0:	beq	1d844 <__flatcc_gen_sort@@Base+0x2c78>
   1d6e4:	ldrh	r5, [r6, #8]
   1d6e8:	cmp	r5, #0
   1d6ec:	bne	1d6d8 <__flatcc_gen_sort@@Base+0x2b0c>
   1d6f0:	mov	r2, #220	; 0xdc
   1d6f4:	mov	r1, r5
   1d6f8:	mov	r0, r9
   1d6fc:	bl	13f94 <memset@plt>
   1d700:	ldr	r3, [r6, #20]
   1d704:	cmp	r3, #0
   1d708:	beq	1df0c <__flatcc_gen_sort@@Base+0x3340>
   1d70c:	ldrh	r2, [r3, #72]	; 0x48
   1d710:	ldr	r3, [r3]
   1d714:	tst	r2, #4
   1d718:	addeq	r5, r5, #1
   1d71c:	cmp	r3, #0
   1d720:	bne	1d70c <__flatcc_gen_sort@@Base+0x2b40>
   1d724:	mov	r2, r9
   1d728:	mov	r1, r6
   1d72c:	ldr	r0, [r6, #12]
   1d730:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   1d734:	mov	r3, r9
   1d738:	mov	r2, sl
   1d73c:	ldr	r1, [sp, #36]	; 0x24
   1d740:	ldr	r0, [sl, #204]	; 0xcc
   1d744:	bl	13f7c <fprintf@plt>
   1d748:	ldr	r4, [r6, #20]
   1d74c:	cmp	r4, #0
   1d750:	beq	1db18 <__flatcc_gen_sort@@Base+0x2f4c>
   1d754:	ldr	r3, [pc, #3600]	; 1e56c <__flatcc_gen_sort@@Base+0x39a0>
   1d758:	mov	r7, #0
   1d75c:	mov	fp, #32
   1d760:	add	r3, pc, r3
   1d764:	str	r3, [sp, #44]	; 0x2c
   1d768:	ldrh	r3, [r4, #72]	; 0x48
   1d76c:	tst	r3, #4
   1d770:	bne	1d7c8 <__flatcc_gen_sort@@Base+0x2bfc>
   1d774:	tst	r3, #256	; 0x100
   1d778:	beq	1d7c8 <__flatcc_gen_sort@@Base+0x2bfc>
   1d77c:	cmp	r7, #0
   1d780:	beq	1db08 <__flatcc_gen_sort@@Base+0x2f3c>
   1d784:	cmp	r5, #0
   1d788:	beq	1d7b4 <__flatcc_gen_sort@@Base+0x2be8>
   1d78c:	tst	r7, #3
   1d790:	bne	1d7a0 <__flatcc_gen_sort@@Base+0x2bd4>
   1d794:	sub	r3, r5, r7
   1d798:	cmp	r3, #2
   1d79c:	bgt	1dc70 <__flatcc_gen_sort@@Base+0x30a4>
   1d7a0:	ldr	r3, [sl, #204]	; 0xcc
   1d7a4:	mov	r2, #2
   1d7a8:	mov	r1, #1
   1d7ac:	ldr	r0, [sp, #48]	; 0x30
   1d7b0:	bl	13f10 <fwrite@plt>
   1d7b4:	ldr	r2, [r4, #96]	; 0x60
   1d7b8:	mov	r1, r8
   1d7bc:	ldr	r0, [sl, #204]	; 0xcc
   1d7c0:	bl	13f7c <fprintf@plt>
   1d7c4:	add	r7, r7, #1
   1d7c8:	ldr	r4, [r4]
   1d7cc:	cmp	r4, #0
   1d7d0:	bne	1d768 <__flatcc_gen_sort@@Base+0x2b9c>
   1d7d4:	cmp	r7, #0
   1d7d8:	beq	1db18 <__flatcc_gen_sort@@Base+0x2f4c>
   1d7dc:	ldr	r0, [pc, #3468]	; 1e570 <__flatcc_gen_sort@@Base+0x39a4>
   1d7e0:	ldr	r3, [sl, #204]	; 0xcc
   1d7e4:	mov	r2, #7
   1d7e8:	mov	r1, #1
   1d7ec:	add	r0, pc, r0
   1d7f0:	bl	13f10 <fwrite@plt>
   1d7f4:	mov	r2, #220	; 0xdc
   1d7f8:	mov	r1, #0
   1d7fc:	mov	r0, r9
   1d800:	bl	13f94 <memset@plt>
   1d804:	mov	r1, r6
   1d808:	ldr	r0, [r6, #12]
   1d80c:	mov	r2, r9
   1d810:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   1d814:	ldrd	r2, [r6, #96]	; 0x60
   1d818:	ldr	r0, [sl, #204]	; 0xcc
   1d81c:	ldr	r1, [sp, #40]	; 0x28
   1d820:	strd	r2, [sp, #8]
   1d824:	str	r9, [sp]
   1d828:	mov	r3, sl
   1d82c:	mov	r2, sl
   1d830:	bl	13f7c <fprintf@plt>
   1d834:	ldr	r6, [r6]
   1d838:	mov	fp, #1
   1d83c:	cmp	r6, #0
   1d840:	bne	1d6e4 <__flatcc_gen_sort@@Base+0x2b18>
   1d844:	ldr	r3, [sl, #208]	; 0xd0
   1d848:	ldr	r8, [r3, #40]	; 0x28
   1d84c:	cmp	r8, #0
   1d850:	beq	1e104 <__flatcc_gen_sort@@Base+0x3538>
   1d854:	ldr	r3, [pc, #3352]	; 1e574 <__flatcc_gen_sort@@Base+0x39a8>
   1d858:	str	fp, [sp, #60]	; 0x3c
   1d85c:	add	r3, pc, r3
   1d860:	str	r3, [sp, #40]	; 0x28
   1d864:	ldr	r3, [pc, #3340]	; 1e578 <__flatcc_gen_sort@@Base+0x39ac>
   1d868:	add	r3, pc, r3
   1d86c:	str	r3, [sp, #44]	; 0x2c
   1d870:	ldr	r3, [pc, #3332]	; 1e57c <__flatcc_gen_sort@@Base+0x39b0>
   1d874:	add	r3, pc, r3
   1d878:	str	r3, [sp, #48]	; 0x30
   1d87c:	ldr	r3, [pc, #3324]	; 1e580 <__flatcc_gen_sort@@Base+0x39b4>
   1d880:	add	r3, pc, r3
   1d884:	str	r3, [sp, #52]	; 0x34
   1d888:	ldr	r3, [pc, #3316]	; 1e584 <__flatcc_gen_sort@@Base+0x39b8>
   1d88c:	add	r3, pc, r3
   1d890:	str	r3, [sp, #68]	; 0x44
   1d894:	ldr	r3, [pc, #3308]	; 1e588 <__flatcc_gen_sort@@Base+0x39bc>
   1d898:	add	r3, pc, r3
   1d89c:	str	r3, [sp, #72]	; 0x48
   1d8a0:	ldrh	r4, [r8, #8]
   1d8a4:	cmp	r4, #0
   1d8a8:	beq	1db30 <__flatcc_gen_sort@@Base+0x2f64>
   1d8ac:	ldr	r8, [r8]
   1d8b0:	cmp	r8, #0
   1d8b4:	bne	1d8a0 <__flatcc_gen_sort@@Base+0x2cd4>
   1d8b8:	ldr	fp, [sp, #60]	; 0x3c
   1d8bc:	cmp	fp, #0
   1d8c0:	bne	1e10c <__flatcc_gen_sort@@Base+0x3540>
   1d8c4:	ldr	r3, [sl, #208]	; 0xd0
   1d8c8:	ldr	r4, [r3, #40]	; 0x28
   1d8cc:	cmp	r4, #0
   1d8d0:	beq	1d938 <__flatcc_gen_sort@@Base+0x2d6c>
   1d8d4:	ldr	r3, [pc, #3248]	; 1e58c <__flatcc_gen_sort@@Base+0x39c0>
   1d8d8:	ldr	r8, [pc, #3248]	; 1e590 <__flatcc_gen_sort@@Base+0x39c4>
   1d8dc:	add	r3, pc, r3
   1d8e0:	str	r3, [sp, #36]	; 0x24
   1d8e4:	ldr	r3, [pc, #3240]	; 1e594 <__flatcc_gen_sort@@Base+0x39c8>
   1d8e8:	add	r8, pc, r8
   1d8ec:	add	r3, pc, r3
   1d8f0:	str	r3, [sp, #40]	; 0x28
   1d8f4:	ldr	r3, [pc, #3228]	; 1e598 <__flatcc_gen_sort@@Base+0x39cc>
   1d8f8:	mov	r2, #0
   1d8fc:	add	r6, sp, #80	; 0x50
   1d900:	mov	r7, #220	; 0xdc
   1d904:	add	r3, pc, r3
   1d908:	str	r3, [sp, #44]	; 0x2c
   1d90c:	ldrh	r3, [r4, #8]
   1d910:	cmp	r3, #4
   1d914:	beq	1df14 <__flatcc_gen_sort@@Base+0x3348>
   1d918:	ldr	r4, [r4]
   1d91c:	cmp	r4, #0
   1d920:	bne	1d90c <__flatcc_gen_sort@@Base+0x2d40>
   1d924:	cmp	r2, #0
   1d928:	beq	1d938 <__flatcc_gen_sort@@Base+0x2d6c>
   1d92c:	ldr	r1, [sl, #204]	; 0xcc
   1d930:	mov	r0, #10
   1d934:	bl	13fdc <fputc@plt>
   1d938:	cmp	fp, #0
   1d93c:	beq	1e260 <__flatcc_gen_sort@@Base+0x3694>
   1d940:	ldr	r3, [sl, #208]	; 0xd0
   1d944:	ldr	r5, [r3, #40]	; 0x28
   1d948:	cmp	r5, #0
   1d94c:	beq	1e260 <__flatcc_gen_sort@@Base+0x3694>
   1d950:	ldr	r3, [pc, #3140]	; 1e59c <__flatcc_gen_sort@@Base+0x39d0>
   1d954:	ldr	r7, [pc, #3140]	; 1e5a0 <__flatcc_gen_sort@@Base+0x39d4>
   1d958:	add	r3, pc, r3
   1d95c:	str	r3, [sp, #44]	; 0x2c
   1d960:	ldr	r3, [pc, #3132]	; 1e5a4 <__flatcc_gen_sort@@Base+0x39d8>
   1d964:	add	r7, pc, r7
   1d968:	add	r3, pc, r3
   1d96c:	str	r3, [sp, #48]	; 0x30
   1d970:	ldr	r3, [pc, #3120]	; 1e5a8 <__flatcc_gen_sort@@Base+0x39dc>
   1d974:	str	fp, [sp, #56]	; 0x38
   1d978:	add	r3, pc, r3
   1d97c:	str	r3, [sp, #60]	; 0x3c
   1d980:	ldr	r3, [pc, #3108]	; 1e5ac <__flatcc_gen_sort@@Base+0x39e0>
   1d984:	add	r3, pc, r3
   1d988:	str	r3, [sp, #64]	; 0x40
   1d98c:	ldr	r3, [pc, #3100]	; 1e5b0 <__flatcc_gen_sort@@Base+0x39e4>
   1d990:	add	r3, pc, r3
   1d994:	str	r3, [sp, #52]	; 0x34
   1d998:	b	1d9a8 <__flatcc_gen_sort@@Base+0x2ddc>
   1d99c:	ldr	r5, [r5]
   1d9a0:	cmp	r5, #0
   1d9a4:	beq	1e260 <__flatcc_gen_sort@@Base+0x3694>
   1d9a8:	ldrh	r6, [r5, #8]
   1d9ac:	cmp	r6, #0
   1d9b0:	bne	1d99c <__flatcc_gen_sort@@Base+0x2dd0>
   1d9b4:	mov	r1, r5
   1d9b8:	mov	r0, sl
   1d9bc:	bl	1bc9c <__flatcc_gen_sort@@Base+0x10d0>
   1d9c0:	ldrh	r8, [r5, #92]	; 0x5c
   1d9c4:	mov	r2, #220	; 0xdc
   1d9c8:	mov	r1, r6
   1d9cc:	ands	r8, r8, #8
   1d9d0:	mov	r0, r9
   1d9d4:	moveq	fp, #1
   1d9d8:	movne	fp, #0
   1d9dc:	bl	13f94 <memset@plt>
   1d9e0:	mov	r2, r9
   1d9e4:	mov	r1, r5
   1d9e8:	ldr	r0, [r5, #12]
   1d9ec:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   1d9f0:	ldr	r0, [sl, #204]	; 0xcc
   1d9f4:	mov	r3, r9
   1d9f8:	mov	r2, r9
   1d9fc:	ldr	r1, [sp, #44]	; 0x2c
   1da00:	str	r9, [sp, #4]
   1da04:	str	sl, [sp]
   1da08:	bl	13f7c <fprintf@plt>
   1da0c:	mov	r2, r9
   1da10:	ldr	r1, [sp, #48]	; 0x30
   1da14:	ldr	r0, [sl, #204]	; 0xcc
   1da18:	bl	13f7c <fprintf@plt>
   1da1c:	ldr	r4, [r5, #24]
   1da20:	cmp	r4, #0
   1da24:	strne	r8, [sp, #40]	; 0x28
   1da28:	strne	r9, [sp, #36]	; 0x24
   1da2c:	beq	1e26c <__flatcc_gen_sort@@Base+0x36a0>
   1da30:	ldrh	r3, [r4, #72]	; 0x48
   1da34:	tst	r3, #4
   1da38:	bne	1da7c <__flatcc_gen_sort@@Base+0x2eb0>
   1da3c:	ldrh	r2, [r4, #24]
   1da40:	ldr	r3, [r4, #4]
   1da44:	cmp	r2, #14
   1da48:	ldm	r3, {r2, r3}
   1da4c:	bne	1da60 <__flatcc_gen_sort@@Base+0x2e94>
   1da50:	ldr	r1, [r4, #16]
   1da54:	ldrh	r1, [r1, #8]
   1da58:	cmp	r1, #4
   1da5c:	beq	1e2fc <__flatcc_gen_sort@@Base+0x3730>
   1da60:	ldrd	r8, [r4, #96]	; 0x60
   1da64:	ldr	r0, [sl, #204]	; 0xcc
   1da68:	mov	r1, r7
   1da6c:	str	r2, [sp]
   1da70:	strd	r8, [sp, #8]
   1da74:	ldr	r2, [sp, #36]	; 0x24
   1da78:	bl	13f7c <fprintf@plt>
   1da7c:	ldr	r4, [r4, #108]	; 0x6c
   1da80:	cmp	r4, #0
   1da84:	bne	1da30 <__flatcc_gen_sort@@Base+0x2e64>
   1da88:	tst	r6, fp
   1da8c:	ldr	r9, [sp, #36]	; 0x24
   1da90:	beq	1e26c <__flatcc_gen_sort@@Base+0x36a0>
   1da94:	ldr	r4, [r5, #24]
   1da98:	cmp	r4, #0
   1da9c:	bne	1dab0 <__flatcc_gen_sort@@Base+0x2ee4>
   1daa0:	b	1e26c <__flatcc_gen_sort@@Base+0x36a0>
   1daa4:	ldr	r4, [r4, #108]	; 0x6c
   1daa8:	cmp	r4, #0
   1daac:	beq	1e26c <__flatcc_gen_sort@@Base+0x36a0>
   1dab0:	ldrh	r3, [r4, #72]	; 0x48
   1dab4:	tst	r3, #4
   1dab8:	bne	1daa4 <__flatcc_gen_sort@@Base+0x2ed8>
   1dabc:	ldrh	r3, [r4, #24]
   1dac0:	cmp	r3, #14
   1dac4:	bne	1daa4 <__flatcc_gen_sort@@Base+0x2ed8>
   1dac8:	ldr	r3, [r4, #16]
   1dacc:	ldrh	r3, [r3, #8]
   1dad0:	cmp	r3, #4
   1dad4:	bne	1daa4 <__flatcc_gen_sort@@Base+0x2ed8>
   1dad8:	ldr	r1, [r4, #4]
   1dadc:	ldrd	r2, [r4, #96]	; 0x60
   1dae0:	ldr	r0, [sl, #204]	; 0xcc
   1dae4:	ldr	ip, [r1, #4]
   1dae8:	strd	r2, [sp, #8]
   1daec:	ldr	r2, [r1]
   1daf0:	mov	r3, ip
   1daf4:	str	r2, [sp]
   1daf8:	ldr	r1, [sp, #64]	; 0x40
   1dafc:	mov	r2, r9
   1db00:	bl	13f7c <fprintf@plt>
   1db04:	b	1daa4 <__flatcc_gen_sort@@Base+0x2ed8>
   1db08:	ldr	r1, [sl, #204]	; 0xcc
   1db0c:	mov	r0, fp
   1db10:	bl	13fdc <fputc@plt>
   1db14:	b	1d7b4 <__flatcc_gen_sort@@Base+0x2be8>
   1db18:	ldr	r3, [sl, #204]	; 0xcc
   1db1c:	mov	r2, #6
   1db20:	mov	r1, #1
   1db24:	ldr	r0, [sp, #52]	; 0x34
   1db28:	bl	13f10 <fwrite@plt>
   1db2c:	b	1d7f4 <__flatcc_gen_sort@@Base+0x2c28>
   1db30:	add	r6, sp, #80	; 0x50
   1db34:	mov	r2, #220	; 0xdc
   1db38:	mov	r1, r4
   1db3c:	mov	r0, r6
   1db40:	bl	13f94 <memset@plt>
   1db44:	mov	r2, r6
   1db48:	mov	r1, r8
   1db4c:	ldr	r0, [r8, #12]
   1db50:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   1db54:	ldr	r3, [r8, #20]
   1db58:	cmp	r3, #0
   1db5c:	beq	1e330 <__flatcc_gen_sort@@Base+0x3764>
   1db60:	ldrh	r2, [r3, #72]	; 0x48
   1db64:	ldr	r3, [r3]
   1db68:	tst	r2, #4
   1db6c:	addeq	r4, r4, #1
   1db70:	cmp	r3, #0
   1db74:	bne	1db60 <__flatcc_gen_sort@@Base+0x2f94>
   1db78:	mov	r2, r6
   1db7c:	ldr	r1, [sp, #40]	; 0x28
   1db80:	ldr	r0, [sl, #204]	; 0xcc
   1db84:	bl	13f7c <fprintf@plt>
   1db88:	mov	r2, #220	; 0xdc
   1db8c:	mov	r1, #0
   1db90:	mov	r0, r9
   1db94:	bl	13f94 <memset@plt>
   1db98:	ldr	r5, [r8, #20]
   1db9c:	cmp	r5, #0
   1dba0:	beq	1dd24 <__flatcc_gen_sort@@Base+0x3158>
   1dba4:	ldr	fp, [pc, #2568]	; 1e5b4 <__flatcc_gen_sort@@Base+0x39e8>
   1dba8:	mov	r2, #0
   1dbac:	add	fp, pc, fp
   1dbb0:	str	r8, [sp, #64]	; 0x40
   1dbb4:	str	r9, [sp, #36]	; 0x24
   1dbb8:	b	1dbc8 <__flatcc_gen_sort@@Base+0x2ffc>
   1dbbc:	ldr	r5, [r5]
   1dbc0:	cmp	r5, #0
   1dbc4:	beq	1dd1c <__flatcc_gen_sort@@Base+0x3150>
   1dbc8:	ldrh	r3, [r5, #72]	; 0x48
   1dbcc:	tst	r3, #4
   1dbd0:	bne	1dbbc <__flatcc_gen_sort@@Base+0x2ff0>
   1dbd4:	cmp	r4, #0
   1dbd8:	add	r7, r2, #1
   1dbdc:	beq	1dc08 <__flatcc_gen_sort@@Base+0x303c>
   1dbe0:	cmp	r2, #0
   1dbe4:	bne	1dc40 <__flatcc_gen_sort@@Base+0x3074>
   1dbe8:	cmp	r4, #4
   1dbec:	bgt	1dc54 <__flatcc_gen_sort@@Base+0x3088>
   1dbf0:	ldr	r0, [pc, #2496]	; 1e5b8 <__flatcc_gen_sort@@Base+0x39ec>
   1dbf4:	ldr	r3, [sl, #204]	; 0xcc
   1dbf8:	mov	r2, #2
   1dbfc:	mov	r1, #1
   1dc00:	add	r0, pc, r0
   1dc04:	bl	13f10 <fwrite@plt>
   1dc08:	ldrh	r3, [r5, #24]
   1dc0c:	sub	r3, r3, #7
   1dc10:	cmp	r3, #8
   1dc14:	addls	pc, pc, r3, lsl #2
   1dc18:	b	1deb4 <__flatcc_gen_sort@@Base+0x32e8>
   1dc1c:	b	1de74 <__flatcc_gen_sort@@Base+0x32a8>
   1dc20:	b	1de2c <__flatcc_gen_sort@@Base+0x3260>
   1dc24:	b	1de0c <__flatcc_gen_sort@@Base+0x3240>
   1dc28:	b	1dcf4 <__flatcc_gen_sort@@Base+0x3128>
   1dc2c:	b	1deb4 <__flatcc_gen_sort@@Base+0x32e8>
   1dc30:	b	1deb4 <__flatcc_gen_sort@@Base+0x32e8>
   1dc34:	b	1deb4 <__flatcc_gen_sort@@Base+0x32e8>
   1dc38:	b	1dcbc <__flatcc_gen_sort@@Base+0x30f0>
   1dc3c:	b	1dc84 <__flatcc_gen_sort@@Base+0x30b8>
   1dc40:	tst	r2, #3
   1dc44:	bne	1dbf0 <__flatcc_gen_sort@@Base+0x3024>
   1dc48:	sub	r2, r4, r2
   1dc4c:	cmp	r2, #2
   1dc50:	ble	1dbf0 <__flatcc_gen_sort@@Base+0x3024>
   1dc54:	ldr	r2, [pc, #2400]	; 1e5bc <__flatcc_gen_sort@@Base+0x39f0>
   1dc58:	ldr	r1, [pc, #2400]	; 1e5c0 <__flatcc_gen_sort@@Base+0x39f4>
   1dc5c:	add	r2, pc, r2
   1dc60:	add	r1, pc, r1
   1dc64:	ldr	r0, [sl, #204]	; 0xcc
   1dc68:	bl	13f7c <fprintf@plt>
   1dc6c:	b	1dc08 <__flatcc_gen_sort@@Base+0x303c>
   1dc70:	ldr	r2, [sp, #60]	; 0x3c
   1dc74:	ldr	r1, [sp, #44]	; 0x2c
   1dc78:	ldr	r0, [sl, #204]	; 0xcc
   1dc7c:	bl	13f7c <fprintf@plt>
   1dc80:	b	1d7b4 <__flatcc_gen_sort@@Base+0x2be8>
   1dc84:	ldr	r1, [r5, #16]
   1dc88:	ldr	r2, [sp, #36]	; 0x24
   1dc8c:	ldr	r0, [r1, #12]
   1dc90:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   1dc94:	ldr	r3, [r5, #16]
   1dc98:	ldrh	r3, [r3, #8]
   1dc9c:	cmp	r3, #4
   1dca0:	addls	pc, pc, r3, lsl #2
   1dca4:	b	1e1b0 <__flatcc_gen_sort@@Base+0x35e4>
   1dca8:	b	1e0e0 <__flatcc_gen_sort@@Base+0x3514>
   1dcac:	b	1e0e0 <__flatcc_gen_sort@@Base+0x3514>
   1dcb0:	b	1e1b0 <__flatcc_gen_sort@@Base+0x35e4>
   1dcb4:	b	1e0e0 <__flatcc_gen_sort@@Base+0x3514>
   1dcb8:	b	1e0bc <__flatcc_gen_sort@@Base+0x34f0>
   1dcbc:	ldr	r1, [r5, #16]
   1dcc0:	ldr	r2, [sp, #36]	; 0x24
   1dcc4:	ldr	r0, [r1, #12]
   1dcc8:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   1dccc:	ldr	r3, [r5, #16]
   1dcd0:	ldrh	r3, [r3, #8]
   1dcd4:	cmp	r3, #4
   1dcd8:	addls	pc, pc, r3, lsl #2
   1dcdc:	b	1e208 <__flatcc_gen_sort@@Base+0x363c>
   1dce0:	b	1e18c <__flatcc_gen_sort@@Base+0x35c0>
   1dce4:	b	1e168 <__flatcc_gen_sort@@Base+0x359c>
   1dce8:	b	1e208 <__flatcc_gen_sort@@Base+0x363c>
   1dcec:	b	1e144 <__flatcc_gen_sort@@Base+0x3578>
   1dcf0:	b	1e120 <__flatcc_gen_sort@@Base+0x3554>
   1dcf4:	ldrd	r8, [r5, #96]	; 0x60
   1dcf8:	ldr	r0, [sl, #204]	; 0xcc
   1dcfc:	mov	r2, sl
   1dd00:	strd	r8, [sp]
   1dd04:	ldr	r1, [sp, #48]	; 0x30
   1dd08:	bl	13f7c <fprintf@plt>
   1dd0c:	ldr	r5, [r5]
   1dd10:	mov	r2, r7
   1dd14:	cmp	r5, #0
   1dd18:	bne	1dbc8 <__flatcc_gen_sort@@Base+0x2ffc>
   1dd1c:	ldr	r8, [sp, #64]	; 0x40
   1dd20:	ldr	r9, [sp, #36]	; 0x24
   1dd24:	ldr	r1, [pc, #2200]	; 1e5c4 <__flatcc_gen_sort@@Base+0x39f8>
   1dd28:	mov	r2, r6
   1dd2c:	add	r1, pc, r1
   1dd30:	ldr	r0, [sl, #204]	; 0xcc
   1dd34:	bl	13f7c <fprintf@plt>
   1dd38:	ldr	r5, [r8, #20]
   1dd3c:	cmp	r5, #0
   1dd40:	beq	1dddc <__flatcc_gen_sort@@Base+0x3210>
   1dd44:	ldr	r3, [pc, #2172]	; 1e5c8 <__flatcc_gen_sort@@Base+0x39fc>
   1dd48:	ldr	fp, [pc, #2172]	; 1e5cc <__flatcc_gen_sort@@Base+0x3a00>
   1dd4c:	add	r3, pc, r3
   1dd50:	str	r3, [sp, #36]	; 0x24
   1dd54:	ldr	r3, [pc, #2164]	; 1e5d0 <__flatcc_gen_sort@@Base+0x3a04>
   1dd58:	add	fp, pc, fp
   1dd5c:	add	r3, pc, r3
   1dd60:	str	r3, [sp, #64]	; 0x40
   1dd64:	ldr	r3, [pc, #2152]	; 1e5d4 <__flatcc_gen_sort@@Base+0x3a08>
   1dd68:	mov	r7, #0
   1dd6c:	add	r3, pc, r3
   1dd70:	str	r3, [sp, #76]	; 0x4c
   1dd74:	b	1dd84 <__flatcc_gen_sort@@Base+0x31b8>
   1dd78:	ldr	r5, [r5]
   1dd7c:	cmp	r5, #0
   1dd80:	beq	1dddc <__flatcc_gen_sort@@Base+0x3210>
   1dd84:	ldrh	r3, [r5, #72]	; 0x48
   1dd88:	tst	r3, #4
   1dd8c:	bne	1dd78 <__flatcc_gen_sort@@Base+0x31ac>
   1dd90:	cmp	r4, #0
   1dd94:	beq	1ddbc <__flatcc_gen_sort@@Base+0x31f0>
   1dd98:	cmp	r7, #0
   1dd9c:	bne	1e094 <__flatcc_gen_sort@@Base+0x34c8>
   1dda0:	cmp	r4, #4
   1dda4:	bgt	1e0a8 <__flatcc_gen_sort@@Base+0x34dc>
   1dda8:	ldr	r3, [sl, #204]	; 0xcc
   1ddac:	mov	r2, #2
   1ddb0:	mov	r1, #1
   1ddb4:	ldr	r0, [sp, #36]	; 0x24
   1ddb8:	bl	13f10 <fwrite@plt>
   1ddbc:	ldrd	r2, [r5, #96]	; 0x60
   1ddc0:	mov	r1, fp
   1ddc4:	ldr	r0, [sl, #204]	; 0xcc
   1ddc8:	bl	13f7c <fprintf@plt>
   1ddcc:	ldr	r5, [r5]
   1ddd0:	add	r7, r7, #1
   1ddd4:	cmp	r5, #0
   1ddd8:	bne	1dd84 <__flatcc_gen_sort@@Base+0x31b8>
   1dddc:	ldr	r1, [sl, #204]	; 0xcc
   1dde0:	mov	r0, #10
   1dde4:	bl	13fdc <fputc@plt>
   1dde8:	ldr	r1, [pc, #2024]	; 1e5d8 <__flatcc_gen_sort@@Base+0x3a0c>
   1ddec:	ldr	r0, [sl, #204]	; 0xcc
   1ddf0:	mov	r3, r6
   1ddf4:	str	r6, [sp, #4]
   1ddf8:	str	sl, [sp]
   1ddfc:	mov	r2, r6
   1de00:	add	r1, pc, r1
   1de04:	bl	13f7c <fprintf@plt>
   1de08:	b	1d8ac <__flatcc_gen_sort@@Base+0x2ce0>
   1de0c:	ldrd	r8, [r5, #96]	; 0x60
   1de10:	ldr	r0, [sl, #204]	; 0xcc
   1de14:	mov	r2, sl
   1de18:	strd	r8, [sp]
   1de1c:	ldr	r1, [sp, #44]	; 0x2c
   1de20:	bl	13f7c <fprintf@plt>
   1de24:	mov	r2, r7
   1de28:	b	1dbbc <__flatcc_gen_sort@@Base+0x2ff0>
   1de2c:	ldr	r3, [r5, #16]
   1de30:	cmp	r3, #5
   1de34:	beq	1e2d0 <__flatcc_gen_sort@@Base+0x3704>
   1de38:	sub	r3, r3, #1
   1de3c:	cmp	r3, #10
   1de40:	addls	pc, pc, r3, lsl #2
   1de44:	b	1e494 <__flatcc_gen_sort@@Base+0x38c8>
   1de48:	b	1e458 <__flatcc_gen_sort@@Base+0x388c>
   1de4c:	b	1e46c <__flatcc_gen_sort@@Base+0x38a0>
   1de50:	b	1e480 <__flatcc_gen_sort@@Base+0x38b4>
   1de54:	b	1e408 <__flatcc_gen_sort@@Base+0x383c>
   1de58:	b	1e494 <__flatcc_gen_sort@@Base+0x38c8>
   1de5c:	b	1e430 <__flatcc_gen_sort@@Base+0x3864>
   1de60:	b	1e444 <__flatcc_gen_sort@@Base+0x3878>
   1de64:	b	1e3cc <__flatcc_gen_sort@@Base+0x3800>
   1de68:	b	1e3e0 <__flatcc_gen_sort@@Base+0x3814>
   1de6c:	b	1e3f4 <__flatcc_gen_sort@@Base+0x3828>
   1de70:	b	1e41c <__flatcc_gen_sort@@Base+0x3850>
   1de74:	ldr	r3, [r5, #16]
   1de78:	sub	r3, r3, #1
   1de7c:	cmp	r3, #10
   1de80:	addls	pc, pc, r3, lsl #2
   1de84:	b	1e4ec <__flatcc_gen_sort@@Base+0x3920>
   1de88:	b	1e35c <__flatcc_gen_sort@@Base+0x3790>
   1de8c:	b	1e338 <__flatcc_gen_sort@@Base+0x376c>
   1de90:	b	1e390 <__flatcc_gen_sort@@Base+0x37c4>
   1de94:	b	1e39c <__flatcc_gen_sort@@Base+0x37d0>
   1de98:	b	1e364 <__flatcc_gen_sort@@Base+0x3798>
   1de9c:	b	1e370 <__flatcc_gen_sort@@Base+0x37a4>
   1dea0:	b	1e3a8 <__flatcc_gen_sort@@Base+0x37dc>
   1dea4:	b	1e3b4 <__flatcc_gen_sort@@Base+0x37e8>
   1dea8:	b	1e3c0 <__flatcc_gen_sort@@Base+0x37f4>
   1deac:	b	1e37c <__flatcc_gen_sort@@Base+0x37b0>
   1deb0:	b	1e384 <__flatcc_gen_sort@@Base+0x37b8>
   1deb4:	ldr	r2, [pc, #1824]	; 1e5dc <__flatcc_gen_sort@@Base+0x3a10>
   1deb8:	ldr	r1, [sp, #56]	; 0x38
   1debc:	ldr	r3, [pc, #1820]	; 1e5e0 <__flatcc_gen_sort@@Base+0x3a14>
   1dec0:	ldr	r4, [pc, #1820]	; 1e5e4 <__flatcc_gen_sort@@Base+0x3a18>
   1dec4:	ldr	r1, [r1, r2]
   1dec8:	add	r3, pc, r3
   1decc:	str	r3, [sp]
   1ded0:	ldr	r0, [r1]
   1ded4:	ldr	r1, [pc, #1804]	; 1e5e8 <__flatcc_gen_sort@@Base+0x3a1c>
   1ded8:	add	r4, pc, r4
   1dedc:	mov	r2, r4
   1dee0:	ldr	r3, [pc, #1796]	; 1e5ec <__flatcc_gen_sort@@Base+0x3a20>
   1dee4:	add	r1, pc, r1
   1dee8:	bl	13f7c <fprintf@plt>
   1deec:	ldr	r3, [pc, #1788]	; 1e5f0 <__flatcc_gen_sort@@Base+0x3a24>
   1def0:	ldr	r0, [pc, #1788]	; 1e5f4 <__flatcc_gen_sort@@Base+0x3a28>
   1def4:	add	r3, pc, r3
   1def8:	mov	r1, r4
   1defc:	add	r3, r3, #172	; 0xac
   1df00:	ldr	r2, [pc, #1764]	; 1e5ec <__flatcc_gen_sort@@Base+0x3a20>
   1df04:	add	r0, pc, r0
   1df08:	bl	14030 <__assert_fail@plt>
   1df0c:	mov	r5, r3
   1df10:	b	1d724 <__flatcc_gen_sort@@Base+0x2b58>
   1df14:	mov	r2, r7
   1df18:	mov	r1, #0
   1df1c:	mov	r0, r6
   1df20:	bl	13f94 <memset@plt>
   1df24:	mov	r2, r7
   1df28:	mov	r1, #0
   1df2c:	mov	r0, r9
   1df30:	bl	13f94 <memset@plt>
   1df34:	mov	r2, r6
   1df38:	mov	r1, r4
   1df3c:	ldr	r0, [r4, #12]
   1df40:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   1df44:	ldr	r5, [r4, #20]
   1df48:	cmp	r5, #0
   1df4c:	beq	1dfec <__flatcc_gen_sort@@Base+0x3420>
   1df50:	ldrh	r3, [r5, #24]
   1df54:	cmp	r3, #10
   1df58:	beq	1e058 <__flatcc_gen_sort@@Base+0x348c>
   1df5c:	cmp	r3, #14
   1df60:	beq	1e00c <__flatcc_gen_sort@@Base+0x3440>
   1df64:	cmp	r3, #0
   1df68:	beq	1dfc4 <__flatcc_gen_sort@@Base+0x33f8>
   1df6c:	ldr	r2, [pc, #1640]	; 1e5dc <__flatcc_gen_sort@@Base+0x3a10>
   1df70:	ldr	r1, [sp, #56]	; 0x38
   1df74:	ldr	r3, [pc, #1660]	; 1e5f8 <__flatcc_gen_sort@@Base+0x3a2c>
   1df78:	ldr	r4, [pc, #1660]	; 1e5fc <__flatcc_gen_sort@@Base+0x3a30>
   1df7c:	ldr	r1, [r1, r2]
   1df80:	add	r3, pc, r3
   1df84:	str	r3, [sp]
   1df88:	ldr	r0, [r1]
   1df8c:	ldr	r1, [pc, #1644]	; 1e600 <__flatcc_gen_sort@@Base+0x3a34>
   1df90:	add	r4, pc, r4
   1df94:	mov	r2, r4
   1df98:	ldr	r3, [pc, #1636]	; 1e604 <__flatcc_gen_sort@@Base+0x3a38>
   1df9c:	add	r1, pc, r1
   1dfa0:	bl	13f7c <fprintf@plt>
   1dfa4:	ldr	r3, [pc, #1628]	; 1e608 <__flatcc_gen_sort@@Base+0x3a3c>
   1dfa8:	ldr	r0, [pc, #1628]	; 1e60c <__flatcc_gen_sort@@Base+0x3a40>
   1dfac:	add	r3, pc, r3
   1dfb0:	mov	r1, r4
   1dfb4:	add	r3, r3, #196	; 0xc4
   1dfb8:	ldr	r2, [pc, #1604]	; 1e604 <__flatcc_gen_sort@@Base+0x3a38>
   1dfbc:	add	r0, pc, r0
   1dfc0:	bl	14030 <__assert_fail@plt>
   1dfc4:	ldr	r0, [sl, #204]	; 0xcc
   1dfc8:	mov	r3, r6
   1dfcc:	str	r6, [sp, #4]
   1dfd0:	str	r6, [sp]
   1dfd4:	mov	r2, r6
   1dfd8:	ldr	r1, [sp, #40]	; 0x28
   1dfdc:	bl	13f7c <fprintf@plt>
   1dfe0:	ldr	r5, [r5]
   1dfe4:	cmp	r5, #0
   1dfe8:	bne	1df50 <__flatcc_gen_sort@@Base+0x3384>
   1dfec:	ldr	r0, [sl, #204]	; 0xcc
   1dff0:	mov	r2, sl
   1dff4:	str	r6, [sp]
   1dff8:	mov	r3, sl
   1dffc:	ldr	r1, [sp, #44]	; 0x2c
   1e000:	bl	13f7c <fprintf@plt>
   1e004:	mov	r2, #1
   1e008:	b	1d918 <__flatcc_gen_sort@@Base+0x2d4c>
   1e00c:	ldr	r1, [r5, #16]
   1e010:	mov	r2, r9
   1e014:	ldr	r0, [r1, #12]
   1e018:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   1e01c:	ldr	r2, [r5, #4]
   1e020:	ldr	r0, [sl, #204]	; 0xcc
   1e024:	mov	r3, r6
   1e028:	ldm	r2, {r1, r2}
   1e02c:	str	r6, [sp, #16]
   1e030:	str	r6, [sp, #12]
   1e034:	str	r1, [sp, #24]
   1e038:	str	r2, [sp, #20]
   1e03c:	str	r1, [sp, #4]
   1e040:	str	r2, [sp]
   1e044:	str	r9, [sp, #8]
   1e048:	mov	r2, r6
   1e04c:	mov	r1, r8
   1e050:	bl	13f7c <fprintf@plt>
   1e054:	b	1dfe0 <__flatcc_gen_sort@@Base+0x3414>
   1e058:	ldr	r2, [r5, #4]
   1e05c:	ldr	r0, [sl, #204]	; 0xcc
   1e060:	mov	r3, r6
   1e064:	ldm	r2, {r1, r2}
   1e068:	str	r6, [sp, #16]
   1e06c:	str	r6, [sp, #12]
   1e070:	str	r1, [sp, #24]
   1e074:	str	r2, [sp, #20]
   1e078:	str	r1, [sp, #4]
   1e07c:	str	r2, [sp]
   1e080:	str	sl, [sp, #8]
   1e084:	mov	r2, r6
   1e088:	ldr	r1, [sp, #36]	; 0x24
   1e08c:	bl	13f7c <fprintf@plt>
   1e090:	b	1dfe0 <__flatcc_gen_sort@@Base+0x3414>
   1e094:	tst	r7, #3
   1e098:	bne	1dda8 <__flatcc_gen_sort@@Base+0x31dc>
   1e09c:	sub	r3, r4, r7
   1e0a0:	cmp	r3, #2
   1e0a4:	ble	1dda8 <__flatcc_gen_sort@@Base+0x31dc>
   1e0a8:	ldr	r2, [sp, #64]	; 0x40
   1e0ac:	ldr	r1, [sp, #76]	; 0x4c
   1e0b0:	ldr	r0, [sl, #204]	; 0xcc
   1e0b4:	bl	13f7c <fprintf@plt>
   1e0b8:	b	1ddbc <__flatcc_gen_sort@@Base+0x31f0>
   1e0bc:	ldrd	r8, [r5, #96]	; 0x60
   1e0c0:	ldr	r1, [pc, #1352]	; 1e610 <__flatcc_gen_sort@@Base+0x3a44>
   1e0c4:	ldr	r0, [sl, #204]	; 0xcc
   1e0c8:	ldr	r2, [sp, #36]	; 0x24
   1e0cc:	strd	r8, [sp]
   1e0d0:	add	r1, pc, r1
   1e0d4:	bl	13f7c <fprintf@plt>
   1e0d8:	mov	r2, r7
   1e0dc:	b	1dbbc <__flatcc_gen_sort@@Base+0x2ff0>
   1e0e0:	ldrd	r8, [r5, #96]	; 0x60
   1e0e4:	ldr	r1, [pc, #1320]	; 1e614 <__flatcc_gen_sort@@Base+0x3a48>
   1e0e8:	ldr	r0, [sl, #204]	; 0xcc
   1e0ec:	ldr	r2, [sp, #36]	; 0x24
   1e0f0:	strd	r8, [sp]
   1e0f4:	add	r1, pc, r1
   1e0f8:	bl	13f7c <fprintf@plt>
   1e0fc:	mov	r2, r7
   1e100:	b	1dbbc <__flatcc_gen_sort@@Base+0x2ff0>
   1e104:	cmp	fp, #0
   1e108:	beq	1e260 <__flatcc_gen_sort@@Base+0x3694>
   1e10c:	ldr	r1, [sl, #204]	; 0xcc
   1e110:	mov	r0, #10
   1e114:	bl	13fdc <fputc@plt>
   1e118:	mov	fp, #1
   1e11c:	b	1d8c4 <__flatcc_gen_sort@@Base+0x2cf8>
   1e120:	ldrd	r8, [r5, #96]	; 0x60
   1e124:	ldr	r1, [pc, #1260]	; 1e618 <__flatcc_gen_sort@@Base+0x3a4c>
   1e128:	ldr	r0, [sl, #204]	; 0xcc
   1e12c:	ldr	r2, [sp, #36]	; 0x24
   1e130:	strd	r8, [sp]
   1e134:	add	r1, pc, r1
   1e138:	bl	13f7c <fprintf@plt>
   1e13c:	mov	r2, r7
   1e140:	b	1dbbc <__flatcc_gen_sort@@Base+0x2ff0>
   1e144:	ldrd	r8, [r5, #96]	; 0x60
   1e148:	ldr	r1, [pc, #1228]	; 1e61c <__flatcc_gen_sort@@Base+0x3a50>
   1e14c:	ldr	r0, [sl, #204]	; 0xcc
   1e150:	ldr	r2, [sp, #36]	; 0x24
   1e154:	strd	r8, [sp]
   1e158:	add	r1, pc, r1
   1e15c:	bl	13f7c <fprintf@plt>
   1e160:	mov	r2, r7
   1e164:	b	1dbbc <__flatcc_gen_sort@@Base+0x2ff0>
   1e168:	ldrd	r8, [r5, #96]	; 0x60
   1e16c:	ldr	r1, [pc, #1196]	; 1e620 <__flatcc_gen_sort@@Base+0x3a54>
   1e170:	ldr	r0, [sl, #204]	; 0xcc
   1e174:	ldr	r2, [sp, #36]	; 0x24
   1e178:	strd	r8, [sp]
   1e17c:	add	r1, pc, r1
   1e180:	bl	13f7c <fprintf@plt>
   1e184:	mov	r2, r7
   1e188:	b	1dbbc <__flatcc_gen_sort@@Base+0x2ff0>
   1e18c:	ldrd	r8, [r5, #96]	; 0x60
   1e190:	ldr	r1, [pc, #1164]	; 1e624 <__flatcc_gen_sort@@Base+0x3a58>
   1e194:	ldr	r0, [sl, #204]	; 0xcc
   1e198:	ldr	r2, [sp, #36]	; 0x24
   1e19c:	strd	r8, [sp]
   1e1a0:	add	r1, pc, r1
   1e1a4:	bl	13f7c <fprintf@plt>
   1e1a8:	mov	r2, r7
   1e1ac:	b	1dbbc <__flatcc_gen_sort@@Base+0x2ff0>
   1e1b0:	ldr	r2, [pc, #1060]	; 1e5dc <__flatcc_gen_sort@@Base+0x3a10>
   1e1b4:	ldr	r1, [sp, #56]	; 0x38
   1e1b8:	ldr	r3, [pc, #1128]	; 1e628 <__flatcc_gen_sort@@Base+0x3a5c>
   1e1bc:	ldr	r4, [pc, #1128]	; 1e62c <__flatcc_gen_sort@@Base+0x3a60>
   1e1c0:	ldr	r1, [r1, r2]
   1e1c4:	add	r3, pc, r3
   1e1c8:	str	r3, [sp]
   1e1cc:	ldr	r0, [r1]
   1e1d0:	ldr	r1, [pc, #1112]	; 1e630 <__flatcc_gen_sort@@Base+0x3a64>
   1e1d4:	add	r4, pc, r4
   1e1d8:	mov	r2, r4
   1e1dc:	ldr	r3, [pc, #1104]	; 1e634 <__flatcc_gen_sort@@Base+0x3a68>
   1e1e0:	add	r1, pc, r1
   1e1e4:	bl	13f7c <fprintf@plt>
   1e1e8:	ldr	r3, [pc, #1096]	; 1e638 <__flatcc_gen_sort@@Base+0x3a6c>
   1e1ec:	ldr	r0, [pc, #1096]	; 1e63c <__flatcc_gen_sort@@Base+0x3a70>
   1e1f0:	add	r3, pc, r3
   1e1f4:	mov	r1, r4
   1e1f8:	add	r3, r3, #172	; 0xac
   1e1fc:	ldr	r2, [pc, #1072]	; 1e634 <__flatcc_gen_sort@@Base+0x3a68>
   1e200:	add	r0, pc, r0
   1e204:	bl	14030 <__assert_fail@plt>
   1e208:	ldr	r2, [pc, #972]	; 1e5dc <__flatcc_gen_sort@@Base+0x3a10>
   1e20c:	ldr	r1, [sp, #56]	; 0x38
   1e210:	ldr	r3, [pc, #1064]	; 1e640 <__flatcc_gen_sort@@Base+0x3a74>
   1e214:	ldr	r4, [pc, #1064]	; 1e644 <__flatcc_gen_sort@@Base+0x3a78>
   1e218:	ldr	r1, [r1, r2]
   1e21c:	add	r3, pc, r3
   1e220:	str	r3, [sp]
   1e224:	ldr	r0, [r1]
   1e228:	ldr	r1, [pc, #1048]	; 1e648 <__flatcc_gen_sort@@Base+0x3a7c>
   1e22c:	add	r4, pc, r4
   1e230:	mov	r2, r4
   1e234:	ldr	r3, [pc, #1040]	; 1e64c <__flatcc_gen_sort@@Base+0x3a80>
   1e238:	add	r1, pc, r1
   1e23c:	bl	13f7c <fprintf@plt>
   1e240:	ldr	r3, [pc, #1032]	; 1e650 <__flatcc_gen_sort@@Base+0x3a84>
   1e244:	ldr	r0, [pc, #1032]	; 1e654 <__flatcc_gen_sort@@Base+0x3a88>
   1e248:	add	r3, pc, r3
   1e24c:	mov	r1, r4
   1e250:	add	r3, r3, #172	; 0xac
   1e254:	ldr	r2, [pc, #1008]	; 1e64c <__flatcc_gen_sort@@Base+0x3a80>
   1e258:	add	r0, pc, r0
   1e25c:	bl	14030 <__assert_fail@plt>
   1e260:	mov	r0, #0
   1e264:	add	sp, sp, #524	; 0x20c
   1e268:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1e26c:	mov	r2, r9
   1e270:	ldr	r1, [sp, #52]	; 0x34
   1e274:	ldr	r0, [sl, #204]	; 0xcc
   1e278:	bl	13f7c <fprintf@plt>
   1e27c:	mov	r2, #220	; 0xdc
   1e280:	mov	r1, #0
   1e284:	mov	r0, r9
   1e288:	bl	13f94 <memset@plt>
   1e28c:	mov	r2, r9
   1e290:	mov	r1, r5
   1e294:	ldr	r0, [r5, #12]
   1e298:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   1e29c:	ldr	r1, [pc, #948]	; 1e658 <__flatcc_gen_sort@@Base+0x3a8c>
   1e2a0:	ldr	r0, [sl, #204]	; 0xcc
   1e2a4:	mov	r3, sl
   1e2a8:	str	r9, [sp, #8]
   1e2ac:	str	r9, [sp, #4]
   1e2b0:	str	r9, [sp]
   1e2b4:	mov	r2, sl
   1e2b8:	add	r1, pc, r1
   1e2bc:	bl	13f7c <fprintf@plt>
   1e2c0:	ldr	r1, [sl, #204]	; 0xcc
   1e2c4:	mov	r0, #10
   1e2c8:	bl	13fdc <fputc@plt>
   1e2cc:	b	1d99c <__flatcc_gen_sort@@Base+0x2dd0>
   1e2d0:	ldr	r3, [pc, #900]	; 1e65c <__flatcc_gen_sort@@Base+0x3a90>
   1e2d4:	mov	r2, sl
   1e2d8:	add	r3, pc, r3
   1e2dc:	ldrd	r8, [r5, #96]	; 0x60
   1e2e0:	ldr	r1, [pc, #888]	; 1e660 <__flatcc_gen_sort@@Base+0x3a94>
   1e2e4:	ldr	r0, [sl, #204]	; 0xcc
   1e2e8:	add	r1, pc, r1
   1e2ec:	strd	r8, [sp]
   1e2f0:	bl	13f7c <fprintf@plt>
   1e2f4:	mov	r2, r7
   1e2f8:	b	1dbbc <__flatcc_gen_sort@@Base+0x2ff0>
   1e2fc:	ldr	r1, [sp, #40]	; 0x28
   1e300:	cmp	r1, #0
   1e304:	ldrne	r6, [sp, #56]	; 0x38
   1e308:	bne	1da60 <__flatcc_gen_sort@@Base+0x2e94>
   1e30c:	ldrd	r8, [r4, #96]	; 0x60
   1e310:	ldr	r0, [sl, #204]	; 0xcc
   1e314:	ldr	r1, [sp, #60]	; 0x3c
   1e318:	str	r2, [sp]
   1e31c:	strd	r8, [sp, #8]
   1e320:	ldr	r2, [sp, #36]	; 0x24
   1e324:	bl	13f7c <fprintf@plt>
   1e328:	ldr	r6, [sp, #56]	; 0x38
   1e32c:	b	1da7c <__flatcc_gen_sort@@Base+0x2eb0>
   1e330:	mov	r4, r3
   1e334:	b	1db78 <__flatcc_gen_sort@@Base+0x2fac>
   1e338:	ldr	r3, [sp, #68]	; 0x44
   1e33c:	ldrd	r8, [r5, #96]	; 0x60
   1e340:	ldr	r0, [sl, #204]	; 0xcc
   1e344:	mov	r2, sl
   1e348:	strd	r8, [sp]
   1e34c:	ldr	r1, [sp, #52]	; 0x34
   1e350:	bl	13f7c <fprintf@plt>
   1e354:	mov	r2, r7
   1e358:	b	1dbbc <__flatcc_gen_sort@@Base+0x2ff0>
   1e35c:	ldr	r3, [sp, #72]	; 0x48
   1e360:	b	1e33c <__flatcc_gen_sort@@Base+0x3770>
   1e364:	ldr	r3, [pc, #760]	; 1e664 <__flatcc_gen_sort@@Base+0x3a98>
   1e368:	add	r3, pc, r3
   1e36c:	b	1e33c <__flatcc_gen_sort@@Base+0x3770>
   1e370:	ldr	r3, [pc, #752]	; 1e668 <__flatcc_gen_sort@@Base+0x3a9c>
   1e374:	add	r3, pc, r3
   1e378:	b	1e33c <__flatcc_gen_sort@@Base+0x3770>
   1e37c:	mov	r3, fp
   1e380:	b	1e33c <__flatcc_gen_sort@@Base+0x3770>
   1e384:	ldr	r3, [pc, #736]	; 1e66c <__flatcc_gen_sort@@Base+0x3aa0>
   1e388:	add	r3, pc, r3
   1e38c:	b	1e33c <__flatcc_gen_sort@@Base+0x3770>
   1e390:	ldr	r3, [pc, #728]	; 1e670 <__flatcc_gen_sort@@Base+0x3aa4>
   1e394:	add	r3, pc, r3
   1e398:	b	1e33c <__flatcc_gen_sort@@Base+0x3770>
   1e39c:	ldr	r3, [pc, #720]	; 1e674 <__flatcc_gen_sort@@Base+0x3aa8>
   1e3a0:	add	r3, pc, r3
   1e3a4:	b	1e33c <__flatcc_gen_sort@@Base+0x3770>
   1e3a8:	ldr	r3, [pc, #712]	; 1e678 <__flatcc_gen_sort@@Base+0x3aac>
   1e3ac:	add	r3, pc, r3
   1e3b0:	b	1e33c <__flatcc_gen_sort@@Base+0x3770>
   1e3b4:	ldr	r3, [pc, #704]	; 1e67c <__flatcc_gen_sort@@Base+0x3ab0>
   1e3b8:	add	r3, pc, r3
   1e3bc:	b	1e33c <__flatcc_gen_sort@@Base+0x3770>
   1e3c0:	ldr	r3, [pc, #696]	; 1e680 <__flatcc_gen_sort@@Base+0x3ab4>
   1e3c4:	add	r3, pc, r3
   1e3c8:	b	1e33c <__flatcc_gen_sort@@Base+0x3770>
   1e3cc:	ldr	r2, [pc, #688]	; 1e684 <__flatcc_gen_sort@@Base+0x3ab8>
   1e3d0:	ldr	r3, [pc, #688]	; 1e688 <__flatcc_gen_sort@@Base+0x3abc>
   1e3d4:	add	r2, pc, r2
   1e3d8:	add	r3, pc, r3
   1e3dc:	b	1e2dc <__flatcc_gen_sort@@Base+0x3710>
   1e3e0:	ldr	r2, [pc, #676]	; 1e68c <__flatcc_gen_sort@@Base+0x3ac0>
   1e3e4:	ldr	r3, [pc, #676]	; 1e690 <__flatcc_gen_sort@@Base+0x3ac4>
   1e3e8:	add	r2, pc, r2
   1e3ec:	add	r3, pc, r3
   1e3f0:	b	1e2dc <__flatcc_gen_sort@@Base+0x3710>
   1e3f4:	ldr	r2, [pc, #664]	; 1e694 <__flatcc_gen_sort@@Base+0x3ac8>
   1e3f8:	ldr	r3, [pc, #664]	; 1e698 <__flatcc_gen_sort@@Base+0x3acc>
   1e3fc:	add	r2, pc, r2
   1e400:	add	r3, pc, r3
   1e404:	b	1e2dc <__flatcc_gen_sort@@Base+0x3710>
   1e408:	ldr	r2, [pc, #652]	; 1e69c <__flatcc_gen_sort@@Base+0x3ad0>
   1e40c:	ldr	r3, [pc, #652]	; 1e6a0 <__flatcc_gen_sort@@Base+0x3ad4>
   1e410:	add	r2, pc, r2
   1e414:	add	r3, pc, r3
   1e418:	b	1e2dc <__flatcc_gen_sort@@Base+0x3710>
   1e41c:	ldr	r2, [pc, #640]	; 1e6a4 <__flatcc_gen_sort@@Base+0x3ad8>
   1e420:	ldr	r3, [pc, #640]	; 1e6a8 <__flatcc_gen_sort@@Base+0x3adc>
   1e424:	add	r2, pc, r2
   1e428:	add	r3, pc, r3
   1e42c:	b	1e2dc <__flatcc_gen_sort@@Base+0x3710>
   1e430:	ldr	r2, [pc, #628]	; 1e6ac <__flatcc_gen_sort@@Base+0x3ae0>
   1e434:	ldr	r3, [pc, #628]	; 1e6b0 <__flatcc_gen_sort@@Base+0x3ae4>
   1e438:	add	r2, pc, r2
   1e43c:	add	r3, pc, r3
   1e440:	b	1e2dc <__flatcc_gen_sort@@Base+0x3710>
   1e444:	ldr	r2, [pc, #616]	; 1e6b4 <__flatcc_gen_sort@@Base+0x3ae8>
   1e448:	ldr	r3, [pc, #616]	; 1e6b8 <__flatcc_gen_sort@@Base+0x3aec>
   1e44c:	add	r2, pc, r2
   1e450:	add	r3, pc, r3
   1e454:	b	1e2dc <__flatcc_gen_sort@@Base+0x3710>
   1e458:	ldr	r2, [pc, #604]	; 1e6bc <__flatcc_gen_sort@@Base+0x3af0>
   1e45c:	ldr	r3, [pc, #604]	; 1e6c0 <__flatcc_gen_sort@@Base+0x3af4>
   1e460:	add	r2, pc, r2
   1e464:	add	r3, pc, r3
   1e468:	b	1e2dc <__flatcc_gen_sort@@Base+0x3710>
   1e46c:	ldr	r2, [pc, #592]	; 1e6c4 <__flatcc_gen_sort@@Base+0x3af8>
   1e470:	ldr	r3, [pc, #592]	; 1e6c8 <__flatcc_gen_sort@@Base+0x3afc>
   1e474:	add	r2, pc, r2
   1e478:	add	r3, pc, r3
   1e47c:	b	1e2dc <__flatcc_gen_sort@@Base+0x3710>
   1e480:	ldr	r2, [pc, #580]	; 1e6cc <__flatcc_gen_sort@@Base+0x3b00>
   1e484:	ldr	r3, [pc, #580]	; 1e6d0 <__flatcc_gen_sort@@Base+0x3b04>
   1e488:	add	r2, pc, r2
   1e48c:	add	r3, pc, r3
   1e490:	b	1e2dc <__flatcc_gen_sort@@Base+0x3710>
   1e494:	ldr	r2, [pc, #320]	; 1e5dc <__flatcc_gen_sort@@Base+0x3a10>
   1e498:	ldr	r1, [sp, #56]	; 0x38
   1e49c:	ldr	r3, [pc, #560]	; 1e6d4 <__flatcc_gen_sort@@Base+0x3b08>
   1e4a0:	ldr	r4, [pc, #560]	; 1e6d8 <__flatcc_gen_sort@@Base+0x3b0c>
   1e4a4:	ldr	r1, [r1, r2]
   1e4a8:	add	r3, pc, r3
   1e4ac:	str	r3, [sp]
   1e4b0:	ldr	r0, [r1]
   1e4b4:	ldr	r1, [pc, #544]	; 1e6dc <__flatcc_gen_sort@@Base+0x3b10>
   1e4b8:	add	r4, pc, r4
   1e4bc:	mov	r2, r4
   1e4c0:	mov	r3, #141	; 0x8d
   1e4c4:	add	r1, pc, r1
   1e4c8:	bl	13f7c <fprintf@plt>
   1e4cc:	ldr	r3, [pc, #524]	; 1e6e0 <__flatcc_gen_sort@@Base+0x3b14>
   1e4d0:	ldr	r0, [pc, #524]	; 1e6e4 <__flatcc_gen_sort@@Base+0x3b18>
   1e4d4:	add	r3, pc, r3
   1e4d8:	mov	r1, r4
   1e4dc:	add	r3, r3, #72	; 0x48
   1e4e0:	mov	r2, #141	; 0x8d
   1e4e4:	add	r0, pc, r0
   1e4e8:	bl	14030 <__assert_fail@plt>
   1e4ec:	ldr	r2, [pc, #232]	; 1e5dc <__flatcc_gen_sort@@Base+0x3a10>
   1e4f0:	ldr	r1, [sp, #56]	; 0x38
   1e4f4:	ldr	r3, [pc, #492]	; 1e6e8 <__flatcc_gen_sort@@Base+0x3b1c>
   1e4f8:	ldr	r4, [pc, #492]	; 1e6ec <__flatcc_gen_sort@@Base+0x3b20>
   1e4fc:	ldr	r1, [r1, r2]
   1e500:	add	r3, pc, r3
   1e504:	str	r3, [sp]
   1e508:	ldr	r0, [r1]
   1e50c:	ldr	r1, [pc, #476]	; 1e6f0 <__flatcc_gen_sort@@Base+0x3b24>
   1e510:	add	r4, pc, r4
   1e514:	mov	r2, r4
   1e518:	mov	r3, #96	; 0x60
   1e51c:	add	r1, pc, r1
   1e520:	bl	13f7c <fprintf@plt>
   1e524:	ldr	r3, [pc, #456]	; 1e6f4 <__flatcc_gen_sort@@Base+0x3b28>
   1e528:	ldr	r0, [pc, #456]	; 1e6f8 <__flatcc_gen_sort@@Base+0x3b2c>
   1e52c:	add	r3, pc, r3
   1e530:	mov	r1, r4
   1e534:	add	r3, r3, #20
   1e538:	mov	r2, #96	; 0x60
   1e53c:	add	r0, pc, r0
   1e540:	bl	14030 <__assert_fail@plt>
   1e544:	mov	fp, r6
   1e548:	b	1d8c8 <__flatcc_gen_sort@@Base+0x2cfc>
   1e54c:	andeq	ip, r4, r8, lsl #20
   1e550:	andeq	sl, r2, ip, ror #27
   1e554:			; <UNDEFINED> instruction: 0x0002adb8
   1e558:	ldrdeq	sl, [r2], -ip
   1e55c:	andeq	sl, r2, ip, ror #27
   1e560:	ldrdeq	sl, [r2], -r4
   1e564:	andeq	sl, r2, r8, lsl #15
   1e568:	strdeq	r3, [r2], -r4
   1e56c:	andeq	sl, r2, r0, ror #13
   1e570:	muleq	r2, r4, ip
   1e574:	andeq	sl, r2, r4, asr ip
   1e578:	andeq	sl, r2, r8, lsl #27
   1e57c:	andeq	sl, r2, r4, ror #26
   1e580:	andeq	sl, r2, r0, asr #26
   1e584:	andeq	r2, r2, ip, ror #9
   1e588:	ldrdeq	r2, [r2], -r8
   1e58c:	andeq	sl, r2, r0, lsr #28
   1e590:	muleq	r2, r0, sp
   1e594:	muleq	r2, ip, lr
   1e598:	andeq	sl, r2, r4, asr sp
   1e59c:	ldrdeq	sl, [r2], -r4
   1e5a0:	andeq	sl, r2, r8, asr #31
   1e5a4:	andeq	sl, r2, r8, lsl #30
   1e5a8:	andeq	sl, r2, ip, lsl #31
   1e5ac:	andeq	sl, r2, ip, asr #31
   1e5b0:	strdeq	sl, [r2], -r8
   1e5b4:	muleq	r2, r0, sp
   1e5b8:	andeq	sl, r2, r8, asr #4
   1e5bc:	andeq	r4, r2, ip, lsr #19
   1e5c0:	andeq	sl, r2, r0, ror #3
   1e5c4:	andeq	sl, r2, r0, lsr #15
   1e5c8:	strdeq	sl, [r2], -ip
   1e5cc:	strdeq	sl, [r2], -r8
   1e5d0:	andeq	r4, r2, ip, lsr #17
   1e5d4:	ldrdeq	sl, [r2], -r4
   1e5d8:	andeq	sl, r2, ip, lsl #16
   1e5dc:	muleq	r0, ip, r0
   1e5e0:	andeq	sl, r2, r4, lsr #2
   1e5e4:	andeq	r9, r2, ip, asr #27
   1e5e8:	andeq	r1, r2, r0, lsl #23
   1e5ec:			; <UNDEFINED> instruction: 0x000004b9
   1e5f0:	andeq	r9, r2, ip, lsr ip
   1e5f4:	andeq	r9, r2, r0, ror #30
   1e5f8:	andeq	sl, r2, r0, lsl #17
   1e5fc:	andeq	r9, r2, r4, lsl sp
   1e600:	andeq	r1, r2, r8, asr #21
   1e604:	andeq	r0, r0, r8, asr #12
   1e608:	andeq	r9, r2, r4, lsl #23
   1e60c:	andeq	r9, r2, r8, lsr #29
   1e610:	muleq	r2, ip, r4
   1e614:	andeq	sl, r2, r4, ror #8
   1e618:	andeq	sl, r2, r0, ror #7
   1e61c:	muleq	r2, ip, r3
   1e620:	andeq	sl, r2, ip, ror #6
   1e624:	andeq	sl, r2, r4, ror #6
   1e628:	andeq	sl, r2, r4, asr #7
   1e62c:	ldrdeq	r9, [r2], -r0
   1e630:	andeq	r1, r2, r4, lsl #17
   1e634:	andeq	r0, r0, r5, lsr #9
   1e638:	andeq	r9, r2, r0, asr #18
   1e63c:	andeq	r9, r2, r4, ror #24
   1e640:	andeq	sl, r2, r0, lsl r3
   1e644:	andeq	r9, r2, r8, ror sl
   1e648:	andeq	r1, r2, ip, lsr #16
   1e64c:	muleq	r0, r5, r4
   1e650:	andeq	r9, r2, r8, ror #17
   1e654:	andeq	r9, r2, ip, lsl #24
   1e658:	andeq	sl, r2, r8, lsl #12
   1e65c:	andeq	r1, r2, r4, lsr r6
   1e660:	andeq	sl, r2, ip, asr #5
   1e664:	andeq	r9, r3, r4, asr sp
   1e668:	andeq	r1, r2, ip, lsl sl
   1e66c:	andeq	r1, r2, ip, lsr #11
   1e670:	andeq	r1, r2, ip, ror #19
   1e674:	andeq	r1, r2, r8, ror #19
   1e678:	andeq	r1, r2, ip, ror #19
   1e67c:	andeq	r1, r2, r8, ror #19
   1e680:	andeq	r1, r2, r4, ror #19
   1e684:	andeq	fp, r2, r4, lsl r3
   1e688:	andeq	r1, r2, ip, asr #10
   1e68c:	andeq	fp, r2, r0, lsl #6
   1e690:	andeq	r1, r2, r0, asr #10
   1e694:	andeq	fp, r2, ip, ror #5
   1e698:	andeq	r1, r2, ip, lsr r5
   1e69c:	ldrdeq	fp, [r2], -r8
   1e6a0:	strdeq	r1, [r2], -r0
   1e6a4:	andeq	fp, r2, r4, asr #5
   1e6a8:	andeq	r1, r2, ip, lsl #10
   1e6ac:			; <UNDEFINED> instruction: 0x0002b2b0
   1e6b0:	ldrdeq	r1, [r2], -r8
   1e6b4:	muleq	r2, ip, r2
   1e6b8:	andeq	r1, r2, ip, asr #9
   1e6bc:	andeq	fp, r2, r8, lsl #5
   1e6c0:	andeq	r1, r2, ip, ror r4
   1e6c4:	andeq	fp, r2, r4, ror r2
   1e6c8:	andeq	r1, r2, r4, ror r4
   1e6cc:	andeq	fp, r2, r0, ror #4
   1e6d0:	andeq	r1, r2, ip, ror #8
   1e6d4:	andeq	r1, r2, r8, asr #11
   1e6d8:	andeq	r1, r2, ip, asr #10
   1e6dc:	andeq	r1, r2, r0, lsr #11
   1e6e0:	andeq	r9, r2, ip, asr r6
   1e6e4:	andeq	r9, r2, r0, lsl #19
   1e6e8:	andeq	r1, r2, r0, ror r5
   1e6ec:	strdeq	r1, [r2], -r4
   1e6f0:	andeq	r1, r2, r8, asr #10
   1e6f4:	andeq	r9, r2, r4, lsl #12
   1e6f8:	andeq	r9, r2, r8, lsr #18

0001e6fc <__flatcc_fb_gen_common_c_builder_header@@Base>:
   1e6fc:	ldr	r1, [pc, #2228]	; 1efb8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8bc>
   1e700:	push	{r4, r5, lr}
   1e704:	add	r5, r0, #102	; 0x66
   1e708:	mov	r4, r0
   1e70c:	sub	sp, sp, #12
   1e710:	mov	r2, r5
   1e714:	add	r1, pc, r1
   1e718:	ldr	r0, [r0, #204]	; 0xcc
   1e71c:	bl	13f7c <fprintf@plt>
   1e720:	ldr	r1, [pc, #2196]	; 1efbc <__flatcc_fb_gen_common_c_builder_header@@Base+0x8c0>
   1e724:	mov	r2, r5
   1e728:	add	r1, pc, r1
   1e72c:	ldr	r0, [r4, #204]	; 0xcc
   1e730:	bl	13f7c <fprintf@plt>
   1e734:	ldr	r0, [pc, #2180]	; 1efc0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8c4>
   1e738:	ldr	r3, [r4, #204]	; 0xcc
   1e73c:	mov	r2, #81	; 0x51
   1e740:	mov	r1, #1
   1e744:	add	r0, pc, r0
   1e748:	bl	13f10 <fwrite@plt>
   1e74c:	ldr	r0, [pc, #2160]	; 1efc4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8c8>
   1e750:	ldr	r3, [r4, #204]	; 0xcc
   1e754:	mov	r2, #53	; 0x35
   1e758:	mov	r1, #1
   1e75c:	add	r0, pc, r0
   1e760:	bl	13f10 <fwrite@plt>
   1e764:	ldr	r2, [r4, #212]	; 0xd4
   1e768:	ldr	r3, [r4, #204]	; 0xcc
   1e76c:	ldr	r2, [r2, #140]	; 0x8c
   1e770:	cmp	r2, #0
   1e774:	bne	1ef9c <__flatcc_fb_gen_common_c_builder_header@@Base+0x8a0>
   1e778:	ldr	r0, [pc, #2120]	; 1efc8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8cc>
   1e77c:	mov	r2, #22
   1e780:	mov	r1, #1
   1e784:	add	r0, pc, r0
   1e788:	bl	13f10 <fwrite@plt>
   1e78c:	ldr	r0, [pc, #2104]	; 1efcc <__flatcc_fb_gen_common_c_builder_header@@Base+0x8d0>
   1e790:	ldr	r3, [r4, #204]	; 0xcc
   1e794:	mov	r2, #35	; 0x23
   1e798:	mov	r1, #1
   1e79c:	add	r0, pc, r0
   1e7a0:	bl	13f10 <fwrite@plt>
   1e7a4:	ldr	r0, [pc, #2084]	; 1efd0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8d4>
   1e7a8:	ldr	r3, [r4, #204]	; 0xcc
   1e7ac:	mov	r2, #7
   1e7b0:	mov	r1, #1
   1e7b4:	add	r0, pc, r0
   1e7b8:	bl	13f10 <fwrite@plt>
   1e7bc:	ldr	r1, [pc, #2064]	; 1efd4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8d8>
   1e7c0:	mov	r0, r4
   1e7c4:	add	r1, pc, r1
   1e7c8:	bl	13eb0 <strcmp@plt>
   1e7cc:	cmp	r0, #0
   1e7d0:	bne	1ef20 <__flatcc_fb_gen_common_c_builder_header@@Base+0x824>
   1e7d4:	ldr	r1, [pc, #2044]	; 1efd8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8dc>
   1e7d8:	mov	r3, r4
   1e7dc:	mov	r2, r4
   1e7e0:	add	r1, pc, r1
   1e7e4:	ldr	r0, [r4, #204]	; 0xcc
   1e7e8:	bl	13f7c <fprintf@plt>
   1e7ec:	ldr	r1, [pc, #2024]	; 1efdc <__flatcc_fb_gen_common_c_builder_header@@Base+0x8e0>
   1e7f0:	mov	r3, r4
   1e7f4:	mov	r2, r4
   1e7f8:	add	r1, pc, r1
   1e7fc:	ldr	r0, [r4, #204]	; 0xcc
   1e800:	bl	13f7c <fprintf@plt>
   1e804:	ldr	r1, [pc, #2004]	; 1efe0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8e4>
   1e808:	mov	r0, r4
   1e80c:	add	r1, pc, r1
   1e810:	bl	13eb0 <strcmp@plt>
   1e814:	cmp	r0, #0
   1e818:	bne	1eef4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7f8>
   1e81c:	ldr	r1, [r4, #204]	; 0xcc
   1e820:	mov	r0, #10
   1e824:	bl	13fdc <fputc@plt>
   1e828:	ldr	r1, [pc, #1972]	; 1efe4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8e8>
   1e82c:	mov	r2, r4
   1e830:	add	r1, pc, r1
   1e834:	ldr	r0, [r4, #204]	; 0xcc
   1e838:	bl	13f7c <fprintf@plt>
   1e83c:	ldr	r1, [pc, #1956]	; 1efe8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8ec>
   1e840:	mov	r2, r4
   1e844:	add	r1, pc, r1
   1e848:	ldr	r0, [r4, #204]	; 0xcc
   1e84c:	bl	13f7c <fprintf@plt>
   1e850:	ldr	r1, [pc, #1940]	; 1efec <__flatcc_fb_gen_common_c_builder_header@@Base+0x8f0>
   1e854:	mov	r3, r4
   1e858:	ldr	r0, [r4, #204]	; 0xcc
   1e85c:	mov	r2, r4
   1e860:	add	r1, pc, r1
   1e864:	str	r4, [sp]
   1e868:	bl	13f7c <fprintf@plt>
   1e86c:	ldr	r1, [pc, #1916]	; 1eff0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8f4>
   1e870:	mov	r2, r4
   1e874:	add	r1, pc, r1
   1e878:	ldr	r0, [r4, #204]	; 0xcc
   1e87c:	bl	13f7c <fprintf@plt>
   1e880:	ldr	r1, [pc, #1900]	; 1eff4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8f8>
   1e884:	mov	r2, r4
   1e888:	add	r1, pc, r1
   1e88c:	ldr	r0, [r4, #204]	; 0xcc
   1e890:	bl	13f7c <fprintf@plt>
   1e894:	ldr	r1, [pc, #1884]	; 1eff8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x8fc>
   1e898:	mov	r2, r4
   1e89c:	add	r1, pc, r1
   1e8a0:	ldr	r0, [r4, #204]	; 0xcc
   1e8a4:	bl	13f7c <fprintf@plt>
   1e8a8:	ldr	r1, [pc, #1868]	; 1effc <__flatcc_fb_gen_common_c_builder_header@@Base+0x900>
   1e8ac:	mov	r2, r4
   1e8b0:	add	r1, pc, r1
   1e8b4:	ldr	r0, [r4, #204]	; 0xcc
   1e8b8:	bl	13f7c <fprintf@plt>
   1e8bc:	ldr	r1, [pc, #1852]	; 1f000 <__flatcc_fb_gen_common_c_builder_header@@Base+0x904>
   1e8c0:	mov	r3, r4
   1e8c4:	mov	r2, r4
   1e8c8:	add	r1, pc, r1
   1e8cc:	ldr	r0, [r4, #204]	; 0xcc
   1e8d0:	bl	13f7c <fprintf@plt>
   1e8d4:	ldr	r1, [pc, #1832]	; 1f004 <__flatcc_fb_gen_common_c_builder_header@@Base+0x908>
   1e8d8:	mov	r3, r4
   1e8dc:	ldr	r0, [r4, #204]	; 0xcc
   1e8e0:	mov	r2, r4
   1e8e4:	add	r1, pc, r1
   1e8e8:	str	r4, [sp]
   1e8ec:	bl	13f7c <fprintf@plt>
   1e8f0:	ldr	r1, [pc, #1808]	; 1f008 <__flatcc_fb_gen_common_c_builder_header@@Base+0x90c>
   1e8f4:	mov	r2, r4
   1e8f8:	add	r1, pc, r1
   1e8fc:	ldr	r0, [r4, #204]	; 0xcc
   1e900:	bl	13f7c <fprintf@plt>
   1e904:	ldr	r1, [pc, #1792]	; 1f00c <__flatcc_fb_gen_common_c_builder_header@@Base+0x910>
   1e908:	mov	r2, r4
   1e90c:	add	r1, pc, r1
   1e910:	ldr	r0, [r4, #204]	; 0xcc
   1e914:	bl	13f7c <fprintf@plt>
   1e918:	ldr	r1, [pc, #1776]	; 1f010 <__flatcc_fb_gen_common_c_builder_header@@Base+0x914>
   1e91c:	mov	r2, r4
   1e920:	add	r1, pc, r1
   1e924:	ldr	r0, [r4, #204]	; 0xcc
   1e928:	bl	13f7c <fprintf@plt>
   1e92c:	ldr	r1, [pc, #1760]	; 1f014 <__flatcc_fb_gen_common_c_builder_header@@Base+0x918>
   1e930:	mov	r3, r4
   1e934:	mov	r2, r4
   1e938:	add	r1, pc, r1
   1e93c:	ldr	r0, [r4, #204]	; 0xcc
   1e940:	bl	13f7c <fprintf@plt>
   1e944:	ldr	r1, [pc, #1740]	; 1f018 <__flatcc_fb_gen_common_c_builder_header@@Base+0x91c>
   1e948:	mov	r2, r4
   1e94c:	add	r1, pc, r1
   1e950:	ldr	r0, [r4, #204]	; 0xcc
   1e954:	bl	13f7c <fprintf@plt>
   1e958:	ldr	r1, [pc, #1724]	; 1f01c <__flatcc_fb_gen_common_c_builder_header@@Base+0x920>
   1e95c:	ldr	r0, [r4, #204]	; 0xcc
   1e960:	mov	r3, r4
   1e964:	mov	r2, r4
   1e968:	add	r1, pc, r1
   1e96c:	str	r4, [sp]
   1e970:	bl	13f7c <fprintf@plt>
   1e974:	ldr	r1, [pc, #1700]	; 1f020 <__flatcc_fb_gen_common_c_builder_header@@Base+0x924>
   1e978:	ldr	r0, [r4, #204]	; 0xcc
   1e97c:	mov	r3, r4
   1e980:	mov	r2, r4
   1e984:	add	r1, pc, r1
   1e988:	str	r4, [sp, #4]
   1e98c:	str	r4, [sp]
   1e990:	bl	13f7c <fprintf@plt>
   1e994:	ldr	r1, [pc, #1672]	; 1f024 <__flatcc_fb_gen_common_c_builder_header@@Base+0x928>
   1e998:	mov	r3, r4
   1e99c:	mov	r2, r4
   1e9a0:	add	r1, pc, r1
   1e9a4:	ldr	r0, [r4, #204]	; 0xcc
   1e9a8:	bl	13f7c <fprintf@plt>
   1e9ac:	ldr	r1, [pc, #1652]	; 1f028 <__flatcc_fb_gen_common_c_builder_header@@Base+0x92c>
   1e9b0:	ldr	r0, [r4, #204]	; 0xcc
   1e9b4:	mov	r3, r4
   1e9b8:	mov	r2, r4
   1e9bc:	add	r1, pc, r1
   1e9c0:	str	r4, [sp, #4]
   1e9c4:	str	r4, [sp]
   1e9c8:	bl	13f7c <fprintf@plt>
   1e9cc:	ldr	r1, [pc, #1624]	; 1f02c <__flatcc_fb_gen_common_c_builder_header@@Base+0x930>
   1e9d0:	mov	r3, r4
   1e9d4:	mov	r2, r4
   1e9d8:	add	r1, pc, r1
   1e9dc:	ldr	r0, [r4, #204]	; 0xcc
   1e9e0:	bl	13f7c <fprintf@plt>
   1e9e4:	ldr	r1, [pc, #1604]	; 1f030 <__flatcc_fb_gen_common_c_builder_header@@Base+0x934>
   1e9e8:	mov	r2, r4
   1e9ec:	add	r1, pc, r1
   1e9f0:	ldr	r0, [r4, #204]	; 0xcc
   1e9f4:	bl	13f7c <fprintf@plt>
   1e9f8:	ldr	r1, [pc, #1588]	; 1f034 <__flatcc_fb_gen_common_c_builder_header@@Base+0x938>
   1e9fc:	mov	r2, r4
   1ea00:	add	r1, pc, r1
   1ea04:	ldr	r0, [r4, #204]	; 0xcc
   1ea08:	bl	13f7c <fprintf@plt>
   1ea0c:	ldr	r1, [pc, #1572]	; 1f038 <__flatcc_fb_gen_common_c_builder_header@@Base+0x93c>
   1ea10:	mov	r2, r4
   1ea14:	add	r1, pc, r1
   1ea18:	ldr	r0, [r4, #204]	; 0xcc
   1ea1c:	bl	13f7c <fprintf@plt>
   1ea20:	ldr	r1, [pc, #1556]	; 1f03c <__flatcc_fb_gen_common_c_builder_header@@Base+0x940>
   1ea24:	mov	r2, r4
   1ea28:	add	r1, pc, r1
   1ea2c:	ldr	r0, [r4, #204]	; 0xcc
   1ea30:	bl	13f7c <fprintf@plt>
   1ea34:	ldr	r1, [pc, #1540]	; 1f040 <__flatcc_fb_gen_common_c_builder_header@@Base+0x944>
   1ea38:	mov	r3, r4
   1ea3c:	mov	r2, r4
   1ea40:	add	r1, pc, r1
   1ea44:	ldr	r0, [r4, #204]	; 0xcc
   1ea48:	bl	13f7c <fprintf@plt>
   1ea4c:	ldr	r1, [pc, #1520]	; 1f044 <__flatcc_fb_gen_common_c_builder_header@@Base+0x948>
   1ea50:	mov	r2, r4
   1ea54:	add	r1, pc, r1
   1ea58:	ldr	r0, [r4, #204]	; 0xcc
   1ea5c:	bl	13f7c <fprintf@plt>
   1ea60:	ldr	r1, [pc, #1504]	; 1f048 <__flatcc_fb_gen_common_c_builder_header@@Base+0x94c>
   1ea64:	mov	r2, r4
   1ea68:	add	r1, pc, r1
   1ea6c:	ldr	r0, [r4, #204]	; 0xcc
   1ea70:	bl	13f7c <fprintf@plt>
   1ea74:	ldr	r1, [pc, #1488]	; 1f04c <__flatcc_fb_gen_common_c_builder_header@@Base+0x950>
   1ea78:	mov	r3, r4
   1ea7c:	mov	r2, r4
   1ea80:	add	r1, pc, r1
   1ea84:	ldr	r0, [r4, #204]	; 0xcc
   1ea88:	bl	13f7c <fprintf@plt>
   1ea8c:	ldr	r1, [pc, #1468]	; 1f050 <__flatcc_fb_gen_common_c_builder_header@@Base+0x954>
   1ea90:	mov	r3, r4
   1ea94:	mov	r2, r4
   1ea98:	add	r1, pc, r1
   1ea9c:	ldr	r0, [r4, #204]	; 0xcc
   1eaa0:	bl	13f7c <fprintf@plt>
   1eaa4:	ldr	r1, [pc, #1448]	; 1f054 <__flatcc_fb_gen_common_c_builder_header@@Base+0x958>
   1eaa8:	mov	r3, r4
   1eaac:	mov	r2, r4
   1eab0:	add	r1, pc, r1
   1eab4:	ldr	r0, [r4, #204]	; 0xcc
   1eab8:	bl	13f7c <fprintf@plt>
   1eabc:	ldr	r1, [pc, #1428]	; 1f058 <__flatcc_fb_gen_common_c_builder_header@@Base+0x95c>
   1eac0:	mov	r3, r4
   1eac4:	mov	r2, r4
   1eac8:	add	r1, pc, r1
   1eacc:	ldr	r0, [r4, #204]	; 0xcc
   1ead0:	bl	13f7c <fprintf@plt>
   1ead4:	ldr	r1, [pc, #1408]	; 1f05c <__flatcc_fb_gen_common_c_builder_header@@Base+0x960>
   1ead8:	ldr	r0, [r4, #204]	; 0xcc
   1eadc:	mov	r3, r4
   1eae0:	mov	r2, r4
   1eae4:	add	r1, pc, r1
   1eae8:	str	r4, [sp]
   1eaec:	bl	13f7c <fprintf@plt>
   1eaf0:	ldr	r1, [pc, #1384]	; 1f060 <__flatcc_fb_gen_common_c_builder_header@@Base+0x964>
   1eaf4:	mov	r3, r4
   1eaf8:	mov	r2, r4
   1eafc:	add	r1, pc, r1
   1eb00:	ldr	r0, [r4, #204]	; 0xcc
   1eb04:	bl	13f7c <fprintf@plt>
   1eb08:	ldr	r1, [pc, #1364]	; 1f064 <__flatcc_fb_gen_common_c_builder_header@@Base+0x968>
   1eb0c:	mov	r2, r4
   1eb10:	add	r1, pc, r1
   1eb14:	ldr	r0, [r4, #204]	; 0xcc
   1eb18:	bl	13f7c <fprintf@plt>
   1eb1c:	ldr	r1, [pc, #1348]	; 1f068 <__flatcc_fb_gen_common_c_builder_header@@Base+0x96c>
   1eb20:	mov	r2, r4
   1eb24:	add	r1, pc, r1
   1eb28:	ldr	r0, [r4, #204]	; 0xcc
   1eb2c:	bl	13f7c <fprintf@plt>
   1eb30:	ldr	r1, [pc, #1332]	; 1f06c <__flatcc_fb_gen_common_c_builder_header@@Base+0x970>
   1eb34:	mov	r2, r4
   1eb38:	add	r1, pc, r1
   1eb3c:	ldr	r0, [r4, #204]	; 0xcc
   1eb40:	bl	13f7c <fprintf@plt>
   1eb44:	ldr	r1, [pc, #1316]	; 1f070 <__flatcc_fb_gen_common_c_builder_header@@Base+0x974>
   1eb48:	mov	r3, r4
   1eb4c:	ldr	r0, [r4, #204]	; 0xcc
   1eb50:	mov	r2, r4
   1eb54:	add	r1, pc, r1
   1eb58:	str	r4, [sp]
   1eb5c:	bl	13f7c <fprintf@plt>
   1eb60:	ldr	r1, [pc, #1292]	; 1f074 <__flatcc_fb_gen_common_c_builder_header@@Base+0x978>
   1eb64:	mov	r2, r4
   1eb68:	add	r1, pc, r1
   1eb6c:	ldr	r0, [r4, #204]	; 0xcc
   1eb70:	bl	13f7c <fprintf@plt>
   1eb74:	ldr	r1, [pc, #1276]	; 1f078 <__flatcc_fb_gen_common_c_builder_header@@Base+0x97c>
   1eb78:	mov	r2, r4
   1eb7c:	add	r1, pc, r1
   1eb80:	ldr	r0, [r4, #204]	; 0xcc
   1eb84:	bl	13f7c <fprintf@plt>
   1eb88:	ldr	r1, [pc, #1260]	; 1f07c <__flatcc_fb_gen_common_c_builder_header@@Base+0x980>
   1eb8c:	mov	r2, r4
   1eb90:	add	r1, pc, r1
   1eb94:	ldr	r0, [r4, #204]	; 0xcc
   1eb98:	bl	13f7c <fprintf@plt>
   1eb9c:	ldr	r1, [pc, #1244]	; 1f080 <__flatcc_fb_gen_common_c_builder_header@@Base+0x984>
   1eba0:	mov	r2, r4
   1eba4:	add	r1, pc, r1
   1eba8:	ldr	r0, [r4, #204]	; 0xcc
   1ebac:	bl	13f7c <fprintf@plt>
   1ebb0:	ldr	r1, [pc, #1228]	; 1f084 <__flatcc_fb_gen_common_c_builder_header@@Base+0x988>
   1ebb4:	mov	r3, r4
   1ebb8:	mov	r2, r4
   1ebbc:	add	r1, pc, r1
   1ebc0:	ldr	r0, [r4, #204]	; 0xcc
   1ebc4:	bl	13f7c <fprintf@plt>
   1ebc8:	ldr	r1, [pc, #1208]	; 1f088 <__flatcc_fb_gen_common_c_builder_header@@Base+0x98c>
   1ebcc:	mov	r2, r4
   1ebd0:	add	r1, pc, r1
   1ebd4:	ldr	r0, [r4, #204]	; 0xcc
   1ebd8:	bl	13f7c <fprintf@plt>
   1ebdc:	ldr	r1, [pc, #1192]	; 1f08c <__flatcc_fb_gen_common_c_builder_header@@Base+0x990>
   1ebe0:	mov	r2, r4
   1ebe4:	add	r1, pc, r1
   1ebe8:	ldr	r0, [r4, #204]	; 0xcc
   1ebec:	bl	13f7c <fprintf@plt>
   1ebf0:	ldr	r1, [pc, #1176]	; 1f090 <__flatcc_fb_gen_common_c_builder_header@@Base+0x994>
   1ebf4:	mov	r2, r4
   1ebf8:	add	r1, pc, r1
   1ebfc:	ldr	r0, [r4, #204]	; 0xcc
   1ec00:	bl	13f7c <fprintf@plt>
   1ec04:	ldr	r1, [pc, #1160]	; 1f094 <__flatcc_fb_gen_common_c_builder_header@@Base+0x998>
   1ec08:	mov	r2, r4
   1ec0c:	add	r1, pc, r1
   1ec10:	ldr	r0, [r4, #204]	; 0xcc
   1ec14:	bl	13f7c <fprintf@plt>
   1ec18:	ldr	r1, [pc, #1144]	; 1f098 <__flatcc_fb_gen_common_c_builder_header@@Base+0x99c>
   1ec1c:	mov	r2, r4
   1ec20:	add	r1, pc, r1
   1ec24:	ldr	r0, [r4, #204]	; 0xcc
   1ec28:	bl	13f7c <fprintf@plt>
   1ec2c:	ldr	r1, [pc, #1128]	; 1f09c <__flatcc_fb_gen_common_c_builder_header@@Base+0x9a0>
   1ec30:	mov	r2, r4
   1ec34:	add	r1, pc, r1
   1ec38:	ldr	r0, [r4, #204]	; 0xcc
   1ec3c:	bl	13f7c <fprintf@plt>
   1ec40:	ldr	r1, [pc, #1112]	; 1f0a0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9a4>
   1ec44:	mov	r2, r4
   1ec48:	add	r1, pc, r1
   1ec4c:	ldr	r0, [r4, #204]	; 0xcc
   1ec50:	bl	13f7c <fprintf@plt>
   1ec54:	ldr	r1, [pc, #1096]	; 1f0a4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9a8>
   1ec58:	mov	r2, r4
   1ec5c:	add	r1, pc, r1
   1ec60:	ldr	r0, [r4, #204]	; 0xcc
   1ec64:	bl	13f7c <fprintf@plt>
   1ec68:	ldr	r1, [pc, #1080]	; 1f0a8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9ac>
   1ec6c:	mov	r2, r4
   1ec70:	add	r1, pc, r1
   1ec74:	ldr	r0, [r4, #204]	; 0xcc
   1ec78:	bl	13f7c <fprintf@plt>
   1ec7c:	ldr	r1, [pc, #1064]	; 1f0ac <__flatcc_fb_gen_common_c_builder_header@@Base+0x9b0>
   1ec80:	mov	r2, r4
   1ec84:	add	r1, pc, r1
   1ec88:	ldr	r0, [r4, #204]	; 0xcc
   1ec8c:	bl	13f7c <fprintf@plt>
   1ec90:	ldr	r1, [pc, #1048]	; 1f0b0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9b4>
   1ec94:	mov	r2, r4
   1ec98:	add	r1, pc, r1
   1ec9c:	ldr	r0, [r4, #204]	; 0xcc
   1eca0:	bl	13f7c <fprintf@plt>
   1eca4:	ldr	r1, [pc, #1032]	; 1f0b4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9b8>
   1eca8:	mov	r2, r4
   1ecac:	add	r1, pc, r1
   1ecb0:	ldr	r0, [r4, #204]	; 0xcc
   1ecb4:	bl	13f7c <fprintf@plt>
   1ecb8:	ldr	r1, [pc, #1016]	; 1f0b8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9bc>
   1ecbc:	mov	r2, r4
   1ecc0:	add	r1, pc, r1
   1ecc4:	ldr	r0, [r4, #204]	; 0xcc
   1ecc8:	bl	13f7c <fprintf@plt>
   1eccc:	ldr	r1, [pc, #1000]	; 1f0bc <__flatcc_fb_gen_common_c_builder_header@@Base+0x9c0>
   1ecd0:	mov	r2, r4
   1ecd4:	add	r1, pc, r1
   1ecd8:	ldr	r0, [r4, #204]	; 0xcc
   1ecdc:	bl	13f7c <fprintf@plt>
   1ece0:	ldr	r1, [pc, #984]	; 1f0c0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9c4>
   1ece4:	mov	r2, r4
   1ece8:	add	r1, pc, r1
   1ecec:	ldr	r0, [r4, #204]	; 0xcc
   1ecf0:	bl	13f7c <fprintf@plt>
   1ecf4:	ldr	r1, [pc, #968]	; 1f0c4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9c8>
   1ecf8:	mov	r2, r4
   1ecfc:	add	r1, pc, r1
   1ed00:	ldr	r0, [r4, #204]	; 0xcc
   1ed04:	bl	13f7c <fprintf@plt>
   1ed08:	ldr	r1, [pc, #952]	; 1f0c8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9cc>
   1ed0c:	mov	r2, r4
   1ed10:	add	r1, pc, r1
   1ed14:	ldr	r0, [r4, #204]	; 0xcc
   1ed18:	bl	13f7c <fprintf@plt>
   1ed1c:	ldr	r1, [r4, #204]	; 0xcc
   1ed20:	mov	r0, #10
   1ed24:	bl	13fdc <fputc@plt>
   1ed28:	ldr	r1, [pc, #924]	; 1f0cc <__flatcc_fb_gen_common_c_builder_header@@Base+0x9d0>
   1ed2c:	ldr	r0, [r4, #204]	; 0xcc
   1ed30:	mov	r3, r4
   1ed34:	mov	r2, r4
   1ed38:	add	r1, pc, r1
   1ed3c:	str	r4, [sp]
   1ed40:	bl	13f7c <fprintf@plt>
   1ed44:	ldr	r1, [pc, #900]	; 1f0d0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9d4>
   1ed48:	ldr	r0, [r4, #204]	; 0xcc
   1ed4c:	mov	r3, r4
   1ed50:	mov	r2, r4
   1ed54:	add	r1, pc, r1
   1ed58:	str	r4, [sp]
   1ed5c:	bl	13f7c <fprintf@plt>
   1ed60:	ldr	r1, [pc, #876]	; 1f0d4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9d8>
   1ed64:	ldr	r0, [r4, #204]	; 0xcc
   1ed68:	mov	r3, r4
   1ed6c:	mov	r2, r4
   1ed70:	add	r1, pc, r1
   1ed74:	str	r4, [sp, #4]
   1ed78:	str	r4, [sp]
   1ed7c:	bl	13f7c <fprintf@plt>
   1ed80:	ldr	r1, [pc, #848]	; 1f0d8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9dc>
   1ed84:	ldr	r0, [r4, #204]	; 0xcc
   1ed88:	mov	r3, r4
   1ed8c:	mov	r2, r4
   1ed90:	add	r1, pc, r1
   1ed94:	str	r4, [sp]
   1ed98:	bl	13f7c <fprintf@plt>
   1ed9c:	ldr	r1, [pc, #824]	; 1f0dc <__flatcc_fb_gen_common_c_builder_header@@Base+0x9e0>
   1eda0:	ldr	r0, [r4, #204]	; 0xcc
   1eda4:	mov	r3, r4
   1eda8:	mov	r2, r4
   1edac:	add	r1, pc, r1
   1edb0:	str	r4, [sp]
   1edb4:	bl	13f7c <fprintf@plt>
   1edb8:	ldr	r1, [pc, #800]	; 1f0e0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9e4>
   1edbc:	ldr	r0, [r4, #204]	; 0xcc
   1edc0:	mov	r3, r4
   1edc4:	mov	r2, r4
   1edc8:	add	r1, pc, r1
   1edcc:	str	r4, [sp]
   1edd0:	bl	13f7c <fprintf@plt>
   1edd4:	ldr	r1, [pc, #776]	; 1f0e4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9e8>
   1edd8:	ldr	r0, [r4, #204]	; 0xcc
   1eddc:	mov	r3, r4
   1ede0:	mov	r2, r4
   1ede4:	add	r1, pc, r1
   1ede8:	str	r4, [sp]
   1edec:	bl	13f7c <fprintf@plt>
   1edf0:	ldr	r1, [pc, #752]	; 1f0e8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9ec>
   1edf4:	ldr	r0, [r4, #204]	; 0xcc
   1edf8:	mov	r3, r4
   1edfc:	mov	r2, r4
   1ee00:	add	r1, pc, r1
   1ee04:	str	r4, [sp]
   1ee08:	bl	13f7c <fprintf@plt>
   1ee0c:	ldr	r1, [pc, #728]	; 1f0ec <__flatcc_fb_gen_common_c_builder_header@@Base+0x9f0>
   1ee10:	ldr	r0, [r4, #204]	; 0xcc
   1ee14:	mov	r3, r4
   1ee18:	mov	r2, r4
   1ee1c:	add	r1, pc, r1
   1ee20:	str	r4, [sp]
   1ee24:	bl	13f7c <fprintf@plt>
   1ee28:	ldr	r1, [pc, #704]	; 1f0f0 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9f4>
   1ee2c:	ldr	r0, [r4, #204]	; 0xcc
   1ee30:	mov	r3, r4
   1ee34:	mov	r2, r4
   1ee38:	add	r1, pc, r1
   1ee3c:	str	r4, [sp]
   1ee40:	bl	13f7c <fprintf@plt>
   1ee44:	ldr	r1, [pc, #680]	; 1f0f4 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9f8>
   1ee48:	mov	r3, r4
   1ee4c:	mov	r2, r4
   1ee50:	ldr	r0, [r4, #204]	; 0xcc
   1ee54:	add	r1, pc, r1
   1ee58:	str	r4, [sp]
   1ee5c:	bl	13f7c <fprintf@plt>
   1ee60:	ldr	r1, [r4, #204]	; 0xcc
   1ee64:	mov	r0, #10
   1ee68:	bl	13fdc <fputc@plt>
   1ee6c:	ldr	r1, [pc, #644]	; 1f0f8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x9fc>
   1ee70:	mov	r3, r4
   1ee74:	mov	r2, r4
   1ee78:	add	r1, pc, r1
   1ee7c:	ldr	r0, [r4, #204]	; 0xcc
   1ee80:	bl	13f7c <fprintf@plt>
   1ee84:	ldr	r1, [r4, #204]	; 0xcc
   1ee88:	mov	r0, #10
   1ee8c:	bl	13fdc <fputc@plt>
   1ee90:	ldr	r1, [pc, #612]	; 1f0fc <__flatcc_fb_gen_common_c_builder_header@@Base+0xa00>
   1ee94:	mov	r3, r4
   1ee98:	mov	r2, r4
   1ee9c:	add	r1, pc, r1
   1eea0:	ldr	r0, [r4, #204]	; 0xcc
   1eea4:	bl	13f7c <fprintf@plt>
   1eea8:	ldr	r3, [r4, #212]	; 0xd4
   1eeac:	ldr	r0, [r4, #204]	; 0xcc
   1eeb0:	ldr	r3, [r3, #140]	; 0x8c
   1eeb4:	cmp	r3, #0
   1eeb8:	beq	1eed8 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7dc>
   1eebc:	mov	r3, r0
   1eec0:	ldr	r0, [pc, #568]	; 1f100 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa04>
   1eec4:	mov	r2, #36	; 0x24
   1eec8:	mov	r1, #1
   1eecc:	add	r0, pc, r0
   1eed0:	bl	13f10 <fwrite@plt>
   1eed4:	ldr	r0, [r4, #204]	; 0xcc
   1eed8:	ldr	r1, [pc, #548]	; 1f104 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa08>
   1eedc:	mov	r2, r5
   1eee0:	add	r1, pc, r1
   1eee4:	bl	13f7c <fprintf@plt>
   1eee8:	mov	r0, #0
   1eeec:	add	sp, sp, #12
   1eef0:	pop	{r4, r5, pc}
   1eef4:	ldr	r1, [pc, #524]	; 1f108 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa0c>
   1eef8:	mov	r2, r4
   1eefc:	add	r1, pc, r1
   1ef00:	ldr	r0, [r4, #204]	; 0xcc
   1ef04:	bl	13f7c <fprintf@plt>
   1ef08:	ldr	r1, [pc, #508]	; 1f10c <__flatcc_fb_gen_common_c_builder_header@@Base+0xa10>
   1ef0c:	mov	r2, r4
   1ef10:	add	r1, pc, r1
   1ef14:	ldr	r0, [r4, #204]	; 0xcc
   1ef18:	bl	13f7c <fprintf@plt>
   1ef1c:	b	1e81c <__flatcc_fb_gen_common_c_builder_header@@Base+0x120>
   1ef20:	ldr	r1, [pc, #488]	; 1f110 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa14>
   1ef24:	mov	r2, r4
   1ef28:	add	r1, pc, r1
   1ef2c:	ldr	r0, [r4, #204]	; 0xcc
   1ef30:	bl	13f7c <fprintf@plt>
   1ef34:	ldr	r1, [pc, #472]	; 1f114 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa18>
   1ef38:	mov	r2, r4
   1ef3c:	add	r1, pc, r1
   1ef40:	ldr	r0, [r4, #204]	; 0xcc
   1ef44:	bl	13f7c <fprintf@plt>
   1ef48:	ldr	r1, [pc, #456]	; 1f118 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa1c>
   1ef4c:	mov	r2, r4
   1ef50:	add	r1, pc, r1
   1ef54:	ldr	r0, [r4, #204]	; 0xcc
   1ef58:	bl	13f7c <fprintf@plt>
   1ef5c:	ldr	r1, [pc, #440]	; 1f11c <__flatcc_fb_gen_common_c_builder_header@@Base+0xa20>
   1ef60:	mov	r2, r4
   1ef64:	add	r1, pc, r1
   1ef68:	ldr	r0, [r4, #204]	; 0xcc
   1ef6c:	bl	13f7c <fprintf@plt>
   1ef70:	ldr	r1, [pc, #424]	; 1f120 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa24>
   1ef74:	mov	r2, r4
   1ef78:	add	r1, pc, r1
   1ef7c:	ldr	r0, [r4, #204]	; 0xcc
   1ef80:	bl	13f7c <fprintf@plt>
   1ef84:	ldr	r1, [pc, #408]	; 1f124 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa28>
   1ef88:	mov	r2, r4
   1ef8c:	add	r1, pc, r1
   1ef90:	ldr	r0, [r4, #204]	; 0xcc
   1ef94:	bl	13f7c <fprintf@plt>
   1ef98:	b	1e7d4 <__flatcc_fb_gen_common_c_builder_header@@Base+0xd8>
   1ef9c:	ldr	r0, [pc, #388]	; 1f128 <__flatcc_fb_gen_common_c_builder_header@@Base+0xa2c>
   1efa0:	mov	r2, #36	; 0x24
   1efa4:	mov	r1, #1
   1efa8:	add	r0, pc, r0
   1efac:	bl	13f10 <fwrite@plt>
   1efb0:	ldr	r3, [r4, #204]	; 0xcc
   1efb4:	b	1e778 <__flatcc_fb_gen_common_c_builder_header@@Base+0x7c>
   1efb8:	andeq	sl, r2, r8, ror #4
   1efbc:	andeq	sl, r2, r4, ror r2
   1efc0:	andeq	r2, r2, r8, lsl r6
   1efc4:	andeq	sl, r2, r0, ror #4
   1efc8:	andeq	sl, r2, r0, ror r2
   1efcc:	andeq	sl, r2, r0, ror r2
   1efd0:	andeq	r8, r2, r4, lsl #15
   1efd4:	andeq	sl, r2, ip, ror #4
   1efd8:	andeq	sl, r2, r4, lsr #7
   1efdc:	andeq	sl, r2, r8, lsr #7
   1efe0:			; <UNDEFINED> instruction: 0x000226b8
   1efe4:	strdeq	sl, [r2], -r0
   1efe8:	andeq	sl, r2, r0, asr r7
   1efec:	andeq	sl, r2, r0, lsl #28
   1eff0:	andeq	sl, r2, r8, ror lr
   1eff4:	andeq	fp, r2, r0, lsr #18
   1eff8:	andeq	fp, r2, r8, ror #25
   1effc:	andeq	ip, r2, ip, lsl #6
   1f000:	andeq	ip, r2, r0, ror r7
   1f004:	andeq	ip, r2, r8, asr #29
   1f008:	strdeq	sp, [r2], -ip
   1f00c:	andeq	sp, r2, r8, ror #16
   1f010:	andeq	sp, r2, r4, ror #19
   1f014:	andeq	sp, r2, r8, lsr #26
   1f018:	andeq	sp, r2, ip, lsl pc
   1f01c:	andeq	lr, r2, ip, ror #4
   1f020:	andeq	lr, r2, ip, asr #14
   1f024:	andeq	lr, r2, ip, lsr r8
   1f028:	andeq	lr, r2, r8, lsl #23
   1f02c:	andeq	pc, r2, ip, ror #2
   1f030:	andeq	pc, r2, ip, lsl #6
   1f034:	andeq	pc, r2, r0, lsr #10
   1f038:	andeq	pc, r2, ip, asr #17
   1f03c:	andeq	pc, r2, r8, ror fp	; <UNPREDICTABLE>
   1f040:	andeq	pc, r2, r4, ror pc	; <UNPREDICTABLE>
   1f044:	andeq	r0, r3, ip, asr #32
   1f048:	muleq	r3, ip, r2
   1f04c:	strdeq	r0, [r3], -ip
   1f050:	andeq	r0, r3, r4, lsr sl
   1f054:			; <UNDEFINED> instruction: 0x00030cb4
   1f058:	muleq	r3, r8, r0
   1f05c:	andeq	r1, r3, r8, lsl #3
   1f060:	strdeq	r1, [r3], -ip
   1f064:	andeq	r1, r3, r4, lsr r5
   1f068:	andeq	r1, r3, r8, lsr #15
   1f06c:	andeq	r1, r3, r4, lsr #20
   1f070:	andeq	r1, r3, r0, asr #31
   1f074:	andeq	r2, r3, ip, lsr r0
   1f078:	andeq	r2, r3, r4, asr r0
   1f07c:	andeq	r2, r3, r4, rrx
   1f080:	andeq	r2, r3, ip, ror r0
   1f084:	andeq	r2, r3, r8, lsl #1
   1f088:	andeq	r2, r3, r0, lsr #1
   1f08c:	strheq	r2, [r3], -r0
   1f090:	andeq	r2, r3, ip, asr #1
   1f094:	ldrdeq	r2, [r3], -ip
   1f098:	strdeq	r2, [r3], -r8
   1f09c:	andeq	r2, r3, r8, lsl #2
   1f0a0:	andeq	r2, r3, r4, lsr #2
   1f0a4:	andeq	r2, r3, r4, lsr r1
   1f0a8:	andeq	r2, r3, ip, asr #2
   1f0ac:	andeq	r2, r3, ip, asr r1
   1f0b0:	andeq	r2, r3, r4, ror r1
   1f0b4:	andeq	r2, r3, r4, lsl #3
   1f0b8:	muleq	r3, ip, r1
   1f0bc:	andeq	r2, r3, ip, lsr #3
   1f0c0:	andeq	r2, r3, r4, asr #3
   1f0c4:	ldrdeq	r2, [r3], -r4
   1f0c8:	andeq	r2, r3, ip, ror #3
   1f0cc:	andeq	r2, r3, r8, ror #3
   1f0d0:	strdeq	r2, [r3], -r4
   1f0d4:	andeq	r2, r3, r0, lsl #4
   1f0d8:	andeq	r2, r3, r8, lsl #4
   1f0dc:	andeq	r2, r3, r8, lsl r2
   1f0e0:	andeq	r2, r3, r8, lsr #4
   1f0e4:	andeq	r2, r3, r8, lsr r2
   1f0e8:	andeq	r2, r3, r4, asr #4
   1f0ec:	andeq	r2, r3, r0, asr r2
   1f0f0:	andeq	r2, r3, ip, asr r2
   1f0f4:	andeq	r2, r3, r8, ror #4
   1f0f8:	andeq	r2, r3, ip, ror #4
   1f0fc:	andeq	r2, r3, r0, ror #4
   1f100:	andeq	r7, r2, r8, lsl #28
   1f104:	andeq	r2, r3, r4, lsr r2
   1f108:	andeq	r9, r2, ip, asr #25
   1f10c:	andeq	r9, r2, ip, ror #25
   1f110:	andeq	r9, r2, r8, lsl fp
   1f114:	andeq	r9, r2, ip, lsr #22
   1f118:	andeq	r9, r2, r0, asr #22
   1f11c:	andeq	r9, r2, r8, asr fp
   1f120:	andeq	r9, r2, r8, ror fp
   1f124:	andeq	r9, r2, r0, lsr #23
   1f128:	andeq	r1, r2, r8, asr #29

0001f12c <__flatcc_fb_gen_c_builder@@Base>:
   1f12c:	ldr	r3, [r0, #208]	; 0xd0
   1f130:	ldr	r1, [pc, #1916]	; 1f8b4 <__flatcc_fb_gen_c_builder@@Base+0x788>
   1f134:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f138:	add	r1, pc, r1
   1f13c:	ldr	r3, [r3, #164]	; 0xa4
   1f140:	mov	r4, r0
   1f144:	sub	sp, sp, #292	; 0x124
   1f148:	mov	r2, r3
   1f14c:	ldr	r0, [r0, #204]	; 0xcc
   1f150:	bl	13f7c <fprintf@plt>
   1f154:	ldr	r0, [pc, #1884]	; 1f8b8 <__flatcc_fb_gen_c_builder@@Base+0x78c>
   1f158:	ldr	r3, [r4, #204]	; 0xcc
   1f15c:	mov	r2, #81	; 0x51
   1f160:	mov	r1, #1
   1f164:	add	r0, pc, r0
   1f168:	bl	13f10 <fwrite@plt>
   1f16c:	ldr	r3, [r4, #208]	; 0xd0
   1f170:	ldr	r1, [pc, #1860]	; 1f8bc <__flatcc_fb_gen_c_builder@@Base+0x790>
   1f174:	ldr	r0, [r4, #204]	; 0xcc
   1f178:	ldr	r2, [r3, #164]	; 0xa4
   1f17c:	add	r1, pc, r1
   1f180:	bl	13f7c <fprintf@plt>
   1f184:	ldr	r3, [r4, #208]	; 0xd0
   1f188:	ldr	r5, [pc, #1840]	; 1f8c0 <__flatcc_fb_gen_c_builder@@Base+0x794>
   1f18c:	ldr	r1, [pc, #1840]	; 1f8c4 <__flatcc_fb_gen_c_builder@@Base+0x798>
   1f190:	ldr	r2, [r3, #160]	; 0xa0
   1f194:	add	r5, pc, r5
   1f198:	add	r1, pc, r1
   1f19c:	ldr	r0, [r4, #204]	; 0xcc
   1f1a0:	bl	13f7c <fprintf@plt>
   1f1a4:	ldr	r3, [r4, #204]	; 0xcc
   1f1a8:	mov	r2, #7
   1f1ac:	mov	r1, #1
   1f1b0:	mov	r0, r5
   1f1b4:	bl	13f10 <fwrite@plt>
   1f1b8:	ldr	r1, [pc, #1800]	; 1f8c8 <__flatcc_fb_gen_c_builder@@Base+0x79c>
   1f1bc:	add	r2, r4, #102	; 0x66
   1f1c0:	add	r1, pc, r1
   1f1c4:	ldr	r0, [r4, #204]	; 0xcc
   1f1c8:	bl	13f7c <fprintf@plt>
   1f1cc:	ldr	r1, [pc, #1784]	; 1f8cc <__flatcc_fb_gen_c_builder@@Base+0x7a0>
   1f1d0:	mov	r2, r4
   1f1d4:	add	r1, pc, r1
   1f1d8:	ldr	r0, [r4, #204]	; 0xcc
   1f1dc:	bl	13f7c <fprintf@plt>
   1f1e0:	ldr	r3, [r4, #204]	; 0xcc
   1f1e4:	mov	r2, #7
   1f1e8:	mov	r1, #1
   1f1ec:	mov	r0, r5
   1f1f0:	bl	13f10 <fwrite@plt>
   1f1f4:	ldr	r2, [pc, #1748]	; 1f8d0 <__flatcc_fb_gen_c_builder@@Base+0x7a4>
   1f1f8:	ldr	r1, [pc, #1748]	; 1f8d4 <__flatcc_fb_gen_c_builder@@Base+0x7a8>
   1f1fc:	mov	r0, r4
   1f200:	add	r2, pc, r2
   1f204:	add	r1, pc, r1
   1f208:	bl	1523c <__flatcc_fb_gen_c_includes@@Base>
   1f20c:	ldr	r3, [r4, #212]	; 0xd4
   1f210:	ldr	r0, [r4, #204]	; 0xcc
   1f214:	ldr	r3, [r3, #140]	; 0x8c
   1f218:	cmp	r3, #0
   1f21c:	bne	1f804 <__flatcc_fb_gen_c_builder@@Base+0x6d8>
   1f220:	ldr	r3, [r4, #208]	; 0xd0
   1f224:	ldrh	r2, [r3, #16]
   1f228:	cmp	r2, #2
   1f22c:	beq	1f830 <__flatcc_fb_gen_c_builder@@Base+0x704>
   1f230:	ldr	r1, [pc, #1696]	; 1f8d8 <__flatcc_fb_gen_c_builder@@Base+0x7ac>
   1f234:	mov	r3, r4
   1f238:	mov	r2, r4
   1f23c:	add	r1, pc, r1
   1f240:	bl	13f7c <fprintf@plt>
   1f244:	ldr	r3, [r4, #208]	; 0xd0
   1f248:	ldrh	r2, [r3, #32]
   1f24c:	cmp	r2, #2
   1f250:	beq	1f864 <__flatcc_fb_gen_c_builder@@Base+0x738>
   1f254:	ldr	r2, [r4, #212]	; 0xd4
   1f258:	ldr	r1, [pc, #1660]	; 1f8dc <__flatcc_fb_gen_c_builder@@Base+0x7b0>
   1f25c:	ldr	r0, [r4, #204]	; 0xcc
   1f260:	ldr	r2, [r2, #104]	; 0x68
   1f264:	mov	r3, r4
   1f268:	str	r2, [sp]
   1f26c:	add	r1, pc, r1
   1f270:	mov	r2, r4
   1f274:	bl	13f7c <fprintf@plt>
   1f278:	ldr	r1, [r4, #204]	; 0xcc
   1f27c:	mov	r0, #10
   1f280:	add	sl, sp, #68	; 0x44
   1f284:	bl	13fdc <fputc@plt>
   1f288:	mov	r0, sl
   1f28c:	mov	r2, #220	; 0xdc
   1f290:	mov	r1, #0
   1f294:	bl	13f94 <memset@plt>
   1f298:	ldr	r3, [r4, #208]	; 0xd0
   1f29c:	ldr	r5, [r3, #40]	; 0x28
   1f2a0:	cmp	r5, #0
   1f2a4:	beq	1f348 <__flatcc_fb_gen_c_builder@@Base+0x21c>
   1f2a8:	ldr	r8, [pc, #1584]	; 1f8e0 <__flatcc_fb_gen_c_builder@@Base+0x7b4>
   1f2ac:	ldr	r7, [pc, #1584]	; 1f8e4 <__flatcc_fb_gen_c_builder@@Base+0x7b8>
   1f2b0:	add	r8, pc, r8
   1f2b4:	add	r7, pc, r7
   1f2b8:	mov	r2, #0
   1f2bc:	mov	r6, #1
   1f2c0:	b	1f2d0 <__flatcc_fb_gen_c_builder@@Base+0x1a4>
   1f2c4:	ldr	r5, [r5]
   1f2c8:	cmp	r5, #0
   1f2cc:	beq	1f330 <__flatcc_fb_gen_c_builder@@Base+0x204>
   1f2d0:	ldrh	r3, [r5, #8]
   1f2d4:	cmp	r3, #3
   1f2d8:	bne	1f2c4 <__flatcc_fb_gen_c_builder@@Base+0x198>
   1f2dc:	mov	r1, r5
   1f2e0:	ldr	r0, [r5, #12]
   1f2e4:	mov	r2, sl
   1f2e8:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   1f2ec:	ldr	r0, [r4, #204]	; 0xcc
   1f2f0:	mov	r3, sl
   1f2f4:	mov	r2, sl
   1f2f8:	mov	r1, r8
   1f2fc:	str	sl, [sp]
   1f300:	bl	13f7c <fprintf@plt>
   1f304:	ldr	r0, [r4, #204]	; 0xcc
   1f308:	mov	r2, r4
   1f30c:	str	sl, [sp, #4]
   1f310:	str	sl, [sp]
   1f314:	mov	r3, r4
   1f318:	mov	r1, r7
   1f31c:	bl	13f7c <fprintf@plt>
   1f320:	ldr	r5, [r5]
   1f324:	mov	r2, r6
   1f328:	cmp	r5, #0
   1f32c:	bne	1f2d0 <__flatcc_fb_gen_c_builder@@Base+0x1a4>
   1f330:	cmp	r2, #0
   1f334:	beq	1f344 <__flatcc_fb_gen_c_builder@@Base+0x218>
   1f338:	ldr	r1, [r4, #204]	; 0xcc
   1f33c:	mov	r0, #10
   1f340:	bl	13fdc <fputc@plt>
   1f344:	ldr	r3, [r4, #208]	; 0xd0
   1f348:	ldr	fp, [r3, #44]	; 0x2c
   1f34c:	cmp	fp, #0
   1f350:	beq	1f7ac <__flatcc_fb_gen_c_builder@@Base+0x680>
   1f354:	ldr	r3, [pc, #1420]	; 1f8e8 <__flatcc_fb_gen_c_builder@@Base+0x7bc>
   1f358:	add	r3, pc, r3
   1f35c:	str	r3, [sp, #48]	; 0x30
   1f360:	ldr	r3, [pc, #1412]	; 1f8ec <__flatcc_fb_gen_c_builder@@Base+0x7c0>
   1f364:	add	r3, pc, r3
   1f368:	str	r3, [sp, #52]	; 0x34
   1f36c:	ldr	r3, [pc, #1404]	; 1f8f0 <__flatcc_fb_gen_c_builder@@Base+0x7c4>
   1f370:	add	r3, pc, r3
   1f374:	str	r3, [sp, #56]	; 0x38
   1f378:	ldr	r3, [pc, #1396]	; 1f8f4 <__flatcc_fb_gen_c_builder@@Base+0x7c8>
   1f37c:	add	r3, pc, r3
   1f380:	str	r3, [sp, #40]	; 0x28
   1f384:	ldr	r3, [pc, #1388]	; 1f8f8 <__flatcc_fb_gen_c_builder@@Base+0x7cc>
   1f388:	add	r3, pc, r3
   1f38c:	str	r3, [sp, #44]	; 0x2c
   1f390:	ldr	r3, [pc, #1380]	; 1f8fc <__flatcc_fb_gen_c_builder@@Base+0x7d0>
   1f394:	add	r3, pc, r3
   1f398:	str	r3, [sp, #60]	; 0x3c
   1f39c:	mov	r2, #220	; 0xdc
   1f3a0:	mov	r1, #0
   1f3a4:	mov	r0, sl
   1f3a8:	bl	13f94 <memset@plt>
   1f3ac:	ldrh	r9, [fp, #8]
   1f3b0:	cmp	r9, #1
   1f3b4:	bne	1f890 <__flatcc_fb_gen_c_builder@@Base+0x764>
   1f3b8:	mov	r7, fp
   1f3bc:	mov	r2, sl
   1f3c0:	mov	r1, fp
   1f3c4:	ldr	r0, [fp, #12]
   1f3c8:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   1f3cc:	ldr	r0, [r7, #20]!
   1f3d0:	bl	1afd4 <__flatcc_gen_sort@@Base+0x408>
   1f3d4:	mov	r2, sl
   1f3d8:	ldr	r1, [sp, #48]	; 0x30
   1f3dc:	mov	r6, r0
   1f3e0:	ldr	r0, [r4, #204]	; 0xcc
   1f3e4:	bl	13f7c <fprintf@plt>
   1f3e8:	mov	r3, r6
   1f3ec:	mov	r1, r7
   1f3f0:	mov	r2, #0
   1f3f4:	str	r9, [sp]
   1f3f8:	mov	r0, r4
   1f3fc:	bl	1b7f0 <__flatcc_gen_sort@@Base+0xc24>
   1f400:	mov	r2, sl
   1f404:	ldr	r1, [sp, #52]	; 0x34
   1f408:	ldr	r0, [r4, #204]	; 0xcc
   1f40c:	bl	13f7c <fprintf@plt>
   1f410:	ldr	r0, [fp, #20]
   1f414:	bl	1afd4 <__flatcc_gen_sort@@Base+0x408>
   1f418:	subs	r8, r0, #0
   1f41c:	ble	1f4b0 <__flatcc_fb_gen_c_builder@@Base+0x384>
   1f420:	str	fp, [sp, #32]
   1f424:	str	r7, [sp, #36]	; 0x24
   1f428:	mov	r5, #0
   1f42c:	ldr	r7, [sp, #56]	; 0x38
   1f430:	ldr	fp, [sp, #60]	; 0x3c
   1f434:	b	1f46c <__flatcc_fb_gen_c_builder@@Base+0x340>
   1f438:	cmp	r6, #4
   1f43c:	ble	1f490 <__flatcc_fb_gen_c_builder@@Base+0x364>
   1f440:	ldr	r2, [sp, #40]	; 0x28
   1f444:	ldr	r1, [sp, #44]	; 0x2c
   1f448:	ldr	r0, [r4, #204]	; 0xcc
   1f44c:	bl	13f7c <fprintf@plt>
   1f450:	mov	r2, r5
   1f454:	mov	r1, fp
   1f458:	add	r5, r5, #1
   1f45c:	ldr	r0, [r4, #204]	; 0xcc
   1f460:	bl	13f7c <fprintf@plt>
   1f464:	cmp	r8, r5
   1f468:	beq	1f4a8 <__flatcc_fb_gen_c_builder@@Base+0x37c>
   1f46c:	cmp	r6, #0
   1f470:	beq	1f450 <__flatcc_fb_gen_c_builder@@Base+0x324>
   1f474:	cmp	r5, #0
   1f478:	beq	1f438 <__flatcc_fb_gen_c_builder@@Base+0x30c>
   1f47c:	tst	r5, #3
   1f480:	bne	1f490 <__flatcc_fb_gen_c_builder@@Base+0x364>
   1f484:	sub	r3, r6, r5
   1f488:	cmp	r3, #2
   1f48c:	bgt	1f440 <__flatcc_fb_gen_c_builder@@Base+0x314>
   1f490:	ldr	r3, [r4, #204]	; 0xcc
   1f494:	mov	r2, #2
   1f498:	mov	r1, r9
   1f49c:	mov	r0, r7
   1f4a0:	bl	13f10 <fwrite@plt>
   1f4a4:	b	1f450 <__flatcc_fb_gen_c_builder@@Base+0x324>
   1f4a8:	ldr	fp, [sp, #32]
   1f4ac:	ldr	r7, [sp, #36]	; 0x24
   1f4b0:	ldr	r1, [r4, #204]	; 0xcc
   1f4b4:	mov	r0, #10
   1f4b8:	bl	13fdc <fputc@plt>
   1f4bc:	ldr	r1, [pc, #1084]	; 1f900 <__flatcc_fb_gen_c_builder@@Base+0x7d4>
   1f4c0:	ldr	r5, [pc, #1084]	; 1f904 <__flatcc_fb_gen_c_builder@@Base+0x7d8>
   1f4c4:	mov	r8, #0
   1f4c8:	ldr	r0, [r4, #204]	; 0xcc
   1f4cc:	mov	r3, sl
   1f4d0:	mov	r2, sl
   1f4d4:	add	r1, pc, r1
   1f4d8:	str	sl, [sp]
   1f4dc:	bl	13f7c <fprintf@plt>
   1f4e0:	add	r5, pc, r5
   1f4e4:	mov	r3, r6
   1f4e8:	mov	r1, r7
   1f4ec:	mov	r2, r8
   1f4f0:	str	r8, [sp]
   1f4f4:	mov	r0, r4
   1f4f8:	ldr	r9, [pc, #1032]	; 1f908 <__flatcc_fb_gen_c_builder@@Base+0x7dc>
   1f4fc:	bl	1b7f0 <__flatcc_gen_sort@@Base+0xc24>
   1f500:	mov	r0, r5
   1f504:	ldr	r3, [r4, #204]	; 0xcc
   1f508:	mov	r2, #4
   1f50c:	mov	r1, #1
   1f510:	add	r9, pc, r9
   1f514:	str	r5, [sp, #32]
   1f518:	bl	13f10 <fwrite@plt>
   1f51c:	mov	r2, r6
   1f520:	mov	r1, r7
   1f524:	mov	r3, r8
   1f528:	str	r8, [sp]
   1f52c:	mov	r0, r4
   1f530:	bl	1b03c <__flatcc_gen_sort@@Base+0x470>
   1f534:	ldr	r3, [r4, #204]	; 0xcc
   1f538:	mov	r2, #12
   1f53c:	mov	r1, #1
   1f540:	mov	r0, r9
   1f544:	bl	13f10 <fwrite@plt>
   1f548:	ldr	r1, [pc, #956]	; 1f90c <__flatcc_fb_gen_c_builder@@Base+0x7e0>
   1f54c:	ldr	r0, [r4, #204]	; 0xcc
   1f550:	mov	r3, sl
   1f554:	mov	r2, sl
   1f558:	add	r1, pc, r1
   1f55c:	str	sl, [sp, #4]
   1f560:	str	sl, [sp]
   1f564:	bl	13f7c <fprintf@plt>
   1f568:	ldr	r3, [pc, #928]	; 1f910 <__flatcc_fb_gen_c_builder@@Base+0x7e4>
   1f56c:	mov	r5, #1
   1f570:	add	r3, pc, r3
   1f574:	str	r3, [sp, #36]	; 0x24
   1f578:	mov	r0, r3
   1f57c:	mov	r2, #2
   1f580:	ldr	r3, [r4, #204]	; 0xcc
   1f584:	mov	r1, r5
   1f588:	bl	13f10 <fwrite@plt>
   1f58c:	mov	r2, r6
   1f590:	mov	r1, r7
   1f594:	mov	r3, r8
   1f598:	str	r5, [sp]
   1f59c:	mov	r0, r4
   1f5a0:	bl	1b03c <__flatcc_gen_sort@@Base+0x470>
   1f5a4:	mov	r1, r5
   1f5a8:	ldr	r3, [r4, #204]	; 0xcc
   1f5ac:	mov	r2, #12
   1f5b0:	mov	r0, r9
   1f5b4:	bl	13f10 <fwrite@plt>
   1f5b8:	ldr	r1, [pc, #852]	; 1f914 <__flatcc_fb_gen_c_builder@@Base+0x7e8>
   1f5bc:	ldr	r0, [r4, #204]	; 0xcc
   1f5c0:	mov	r3, sl
   1f5c4:	mov	r2, sl
   1f5c8:	add	r1, pc, r1
   1f5cc:	str	sl, [sp]
   1f5d0:	bl	13f7c <fprintf@plt>
   1f5d4:	mov	r3, r6
   1f5d8:	mov	r1, r7
   1f5dc:	mov	r2, r8
   1f5e0:	str	r8, [sp]
   1f5e4:	mov	r0, r4
   1f5e8:	bl	1b7f0 <__flatcc_gen_sort@@Base+0xc24>
   1f5ec:	mov	r1, r5
   1f5f0:	ldr	r3, [r4, #204]	; 0xcc
   1f5f4:	mov	r2, #4
   1f5f8:	ldr	r0, [sp, #32]
   1f5fc:	bl	13f10 <fwrite@plt>
   1f600:	mov	r2, r6
   1f604:	mov	r1, r7
   1f608:	mov	r3, #2
   1f60c:	str	r8, [sp]
   1f610:	mov	r0, r4
   1f614:	bl	1b03c <__flatcc_gen_sort@@Base+0x470>
   1f618:	mov	r1, r5
   1f61c:	ldr	r3, [r4, #204]	; 0xcc
   1f620:	mov	r2, #12
   1f624:	mov	r0, r9
   1f628:	bl	13f10 <fwrite@plt>
   1f62c:	ldr	r1, [pc, #740]	; 1f918 <__flatcc_fb_gen_c_builder@@Base+0x7ec>
   1f630:	ldr	r0, [r4, #204]	; 0xcc
   1f634:	mov	r3, sl
   1f638:	mov	r2, sl
   1f63c:	add	r1, pc, r1
   1f640:	str	sl, [sp, #4]
   1f644:	str	sl, [sp]
   1f648:	bl	13f7c <fprintf@plt>
   1f64c:	mov	r1, r5
   1f650:	ldr	r3, [r4, #204]	; 0xcc
   1f654:	mov	r2, #2
   1f658:	ldr	r0, [sp, #36]	; 0x24
   1f65c:	bl	13f10 <fwrite@plt>
   1f660:	mov	r2, r6
   1f664:	mov	r1, r7
   1f668:	mov	r3, #2
   1f66c:	str	r5, [sp]
   1f670:	mov	r0, r4
   1f674:	bl	1b03c <__flatcc_gen_sort@@Base+0x470>
   1f678:	mov	r1, r5
   1f67c:	ldr	r3, [r4, #204]	; 0xcc
   1f680:	mov	r2, #12
   1f684:	mov	r0, r9
   1f688:	bl	13f10 <fwrite@plt>
   1f68c:	ldr	r1, [pc, #648]	; 1f91c <__flatcc_fb_gen_c_builder@@Base+0x7f0>
   1f690:	ldr	r0, [r4, #204]	; 0xcc
   1f694:	mov	r3, sl
   1f698:	mov	r2, sl
   1f69c:	add	r1, pc, r1
   1f6a0:	str	sl, [sp]
   1f6a4:	bl	13f7c <fprintf@plt>
   1f6a8:	mov	r3, r6
   1f6ac:	mov	r1, r7
   1f6b0:	mov	r2, r8
   1f6b4:	str	r8, [sp]
   1f6b8:	mov	r0, r4
   1f6bc:	bl	1b7f0 <__flatcc_gen_sort@@Base+0xc24>
   1f6c0:	mov	r1, r5
   1f6c4:	ldr	r3, [r4, #204]	; 0xcc
   1f6c8:	mov	r2, #4
   1f6cc:	ldr	r0, [sp, #32]
   1f6d0:	bl	13f10 <fwrite@plt>
   1f6d4:	mov	r2, r6
   1f6d8:	mov	r1, r7
   1f6dc:	mov	r3, r5
   1f6e0:	str	r8, [sp]
   1f6e4:	mov	r0, r4
   1f6e8:	bl	1b03c <__flatcc_gen_sort@@Base+0x470>
   1f6ec:	mov	r1, r5
   1f6f0:	ldr	r3, [r4, #204]	; 0xcc
   1f6f4:	mov	r2, #12
   1f6f8:	mov	r0, r9
   1f6fc:	bl	13f10 <fwrite@plt>
   1f700:	ldr	r1, [pc, #536]	; 1f920 <__flatcc_fb_gen_c_builder@@Base+0x7f4>
   1f704:	ldr	r0, [r4, #204]	; 0xcc
   1f708:	mov	r3, sl
   1f70c:	mov	r2, sl
   1f710:	add	r1, pc, r1
   1f714:	str	sl, [sp, #4]
   1f718:	str	sl, [sp]
   1f71c:	bl	13f7c <fprintf@plt>
   1f720:	mov	r1, r5
   1f724:	ldr	r3, [r4, #204]	; 0xcc
   1f728:	mov	r2, #2
   1f72c:	ldr	r0, [sp, #36]	; 0x24
   1f730:	bl	13f10 <fwrite@plt>
   1f734:	mov	r2, r6
   1f738:	mov	r1, r7
   1f73c:	mov	r3, r5
   1f740:	str	r5, [sp]
   1f744:	mov	r0, r4
   1f748:	bl	1b03c <__flatcc_gen_sort@@Base+0x470>
   1f74c:	mov	r1, r5
   1f750:	ldr	r3, [r4, #204]	; 0xcc
   1f754:	mov	r2, #12
   1f758:	mov	r0, r9
   1f75c:	bl	13f10 <fwrite@plt>
   1f760:	str	sl, [sp, #24]
   1f764:	str	sl, [sp, #20]
   1f768:	ldrh	r2, [fp, #104]	; 0x68
   1f76c:	ldr	r0, [r4, #204]	; 0xcc
   1f770:	ldr	r1, [pc, #428]	; 1f924 <__flatcc_fb_gen_c_builder@@Base+0x7f8>
   1f774:	str	r2, [sp, #16]
   1f778:	ldrd	r6, [fp, #112]	; 0x70
   1f77c:	mov	r3, r4
   1f780:	mov	r2, r4
   1f784:	add	r1, pc, r1
   1f788:	str	sl, [sp]
   1f78c:	strd	r6, [sp, #8]
   1f790:	bl	13f7c <fprintf@plt>
   1f794:	ldr	r1, [r4, #204]	; 0xcc
   1f798:	mov	r0, #10
   1f79c:	bl	13fdc <fputc@plt>
   1f7a0:	ldr	fp, [fp, #120]	; 0x78
   1f7a4:	cmp	fp, r8
   1f7a8:	bne	1f39c <__flatcc_fb_gen_c_builder@@Base+0x270>
   1f7ac:	mov	r0, r4
   1f7b0:	bl	1d5c4 <__flatcc_gen_sort@@Base+0x29f8>
   1f7b4:	ldr	r3, [r4, #212]	; 0xd4
   1f7b8:	ldr	r0, [r4, #204]	; 0xcc
   1f7bc:	ldr	r3, [r3, #140]	; 0x8c
   1f7c0:	cmp	r3, #0
   1f7c4:	beq	1f7e4 <__flatcc_fb_gen_c_builder@@Base+0x6b8>
   1f7c8:	mov	r3, r0
   1f7cc:	ldr	r0, [pc, #340]	; 1f928 <__flatcc_fb_gen_c_builder@@Base+0x7fc>
   1f7d0:	mov	r2, #36	; 0x24
   1f7d4:	mov	r1, #1
   1f7d8:	add	r0, pc, r0
   1f7dc:	bl	13f10 <fwrite@plt>
   1f7e0:	ldr	r0, [r4, #204]	; 0xcc
   1f7e4:	ldr	r3, [r4, #208]	; 0xd0
   1f7e8:	ldr	r1, [pc, #316]	; 1f92c <__flatcc_fb_gen_c_builder@@Base+0x800>
   1f7ec:	ldr	r2, [r3, #164]	; 0xa4
   1f7f0:	add	r1, pc, r1
   1f7f4:	bl	13f7c <fprintf@plt>
   1f7f8:	mov	r0, #0
   1f7fc:	add	sp, sp, #292	; 0x124
   1f800:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1f804:	mov	r3, r0
   1f808:	ldr	r0, [pc, #288]	; 1f930 <__flatcc_fb_gen_c_builder@@Base+0x804>
   1f80c:	mov	r2, #36	; 0x24
   1f810:	mov	r1, #1
   1f814:	add	r0, pc, r0
   1f818:	bl	13f10 <fwrite@plt>
   1f81c:	ldr	r3, [r4, #208]	; 0xd0
   1f820:	ldr	r0, [r4, #204]	; 0xcc
   1f824:	ldrh	r2, [r3, #16]
   1f828:	cmp	r2, #2
   1f82c:	bne	1f230 <__flatcc_fb_gen_c_builder@@Base+0x104>
   1f830:	ldr	r2, [r3, #8]
   1f834:	ldr	r1, [pc, #248]	; 1f934 <__flatcc_fb_gen_c_builder@@Base+0x808>
   1f838:	str	r2, [sp, #4]
   1f83c:	ldr	r2, [r3, #12]
   1f840:	add	r1, pc, r1
   1f844:	mov	r3, r4
   1f848:	str	r2, [sp]
   1f84c:	mov	r2, r4
   1f850:	bl	13f7c <fprintf@plt>
   1f854:	ldr	r3, [r4, #208]	; 0xd0
   1f858:	ldrh	r2, [r3, #32]
   1f85c:	cmp	r2, #2
   1f860:	bne	1f254 <__flatcc_fb_gen_c_builder@@Base+0x128>
   1f864:	ldr	r2, [r3, #24]
   1f868:	ldr	r0, [r4, #204]	; 0xcc
   1f86c:	ldr	r1, [pc, #196]	; 1f938 <__flatcc_fb_gen_c_builder@@Base+0x80c>
   1f870:	str	r2, [sp, #4]
   1f874:	ldr	r3, [r3, #28]
   1f878:	mov	r2, r4
   1f87c:	str	r3, [sp]
   1f880:	add	r1, pc, r1
   1f884:	mov	r3, r4
   1f888:	bl	13f7c <fprintf@plt>
   1f88c:	b	1f278 <__flatcc_fb_gen_c_builder@@Base+0x14c>
   1f890:	ldr	r3, [pc, #164]	; 1f93c <__flatcc_fb_gen_c_builder@@Base+0x810>
   1f894:	ldr	r1, [pc, #164]	; 1f940 <__flatcc_fb_gen_c_builder@@Base+0x814>
   1f898:	ldr	r0, [pc, #164]	; 1f944 <__flatcc_fb_gen_c_builder@@Base+0x818>
   1f89c:	add	r3, pc, r3
   1f8a0:	ldr	r2, [pc, #160]	; 1f948 <__flatcc_fb_gen_c_builder@@Base+0x81c>
   1f8a4:	add	r3, r3, #208	; 0xd0
   1f8a8:	add	r1, pc, r1
   1f8ac:	add	r0, pc, r0
   1f8b0:	bl	14030 <__assert_fail@plt>
   1f8b4:	andeq	r2, r3, r0
   1f8b8:	strdeq	r1, [r2], -r8
   1f8bc:	andeq	r1, r3, r8, ror #31
   1f8c0:	andeq	r7, r2, r4, lsr #27
   1f8c4:	andeq	r1, r3, r4, ror #31
   1f8c8:			; <UNDEFINED> instruction: 0x000297bc
   1f8cc:	andeq	r1, r3, r0, asr #31
   1f8d0:			; <UNDEFINED> instruction: 0x00031fb4
   1f8d4:	andeq	r0, r2, ip, ror #7
   1f8d8:	andeq	r7, r2, ip, ror #26
   1f8dc:	andeq	r7, r2, r0, lsr #27
   1f8e0:	andeq	r1, r3, r0, lsl pc
   1f8e4:	andeq	r1, r3, r4, asr pc
   1f8e8:	andeq	r9, r2, r8, asr r1
   1f8ec:	andeq	r9, r2, r8, ror #2
   1f8f0:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   1f8f4:	andeq	r3, r2, ip, lsl #5
   1f8f8:			; <UNDEFINED> instruction: 0x00028ab8
   1f8fc:			; <UNDEFINED> instruction: 0x00028ab8
   1f900:	andeq	r1, r3, ip, asr sp
   1f904:	andeq	r1, r3, r8, ror sp
   1f908:	andeq	r1, r3, r0, asr sp
   1f90c:	andeq	r1, r3, r8, lsl sp
   1f910:	andeq	r1, r3, r8, lsr sp
   1f914:	andeq	r1, r3, r4, ror #25
   1f918:	muleq	r3, ip, ip
   1f91c:	andeq	r1, r3, r8, ror ip
   1f920:	andeq	r1, r3, r4, lsr ip
   1f924:	andeq	r1, r3, r0, lsl #24
   1f928:	strdeq	r7, [r2], -ip
   1f92c:	ldrdeq	r1, [r3], -ip
   1f930:	andeq	r1, r2, ip, asr r6
   1f934:	andeq	r7, r2, r4, lsr r7
   1f938:	andeq	r7, r2, ip, asr r7
   1f93c:	muleq	r2, r4, r2
   1f940:	strdeq	r8, [r2], -ip
   1f944:	andeq	r0, r2, r4, lsl #10
   1f948:	strdeq	r0, [r0], -r2
   1f94c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1f950:	sub	sp, sp, #516	; 0x204
   1f954:	add	r9, sp, #72	; 0x48
   1f958:	mov	r4, r1
   1f95c:	mov	r8, r0
   1f960:	mov	r2, #220	; 0xdc
   1f964:	mov	r1, #0
   1f968:	mov	r0, r9
   1f96c:	add	r6, sp, #292	; 0x124
   1f970:	bl	13f94 <memset@plt>
   1f974:	mov	r2, #220	; 0xdc
   1f978:	mov	r1, #0
   1f97c:	mov	r0, r6
   1f980:	bl	13f94 <memset@plt>
   1f984:	mov	r1, r4
   1f988:	ldr	r0, [r4, #12]
   1f98c:	mov	r2, r9
   1f990:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   1f994:	ldr	r1, [pc, #1424]	; 1ff2c <__flatcc_fb_gen_c_builder@@Base+0xe00>
   1f998:	mov	r2, r9
   1f99c:	ldr	r0, [r8, #204]	; 0xcc
   1f9a0:	add	r1, pc, r1
   1f9a4:	bl	13f7c <fprintf@plt>
   1f9a8:	ldr	r4, [r4, #20]
   1f9ac:	ldr	sl, [pc, #1404]	; 1ff30 <__flatcc_fb_gen_c_builder@@Base+0xe04>
   1f9b0:	cmp	r4, #0
   1f9b4:	add	sl, pc, sl
   1f9b8:	beq	1fb84 <__flatcc_fb_gen_c_builder@@Base+0xa58>
   1f9bc:	ldr	r3, [pc, #1392]	; 1ff34 <__flatcc_fb_gen_c_builder@@Base+0xe08>
   1f9c0:	ldr	fp, [pc, #1392]	; 1ff38 <__flatcc_fb_gen_c_builder@@Base+0xe0c>
   1f9c4:	add	r3, pc, r3
   1f9c8:	str	r3, [sp, #36]	; 0x24
   1f9cc:	ldr	r3, [pc, #1384]	; 1ff3c <__flatcc_fb_gen_c_builder@@Base+0xe10>
   1f9d0:	str	sl, [sp, #32]
   1f9d4:	add	r3, pc, r3
   1f9d8:	str	r3, [sp, #40]	; 0x28
   1f9dc:	ldr	r3, [pc, #1372]	; 1ff40 <__flatcc_fb_gen_c_builder@@Base+0xe14>
   1f9e0:	mov	sl, r9
   1f9e4:	add	r3, pc, r3
   1f9e8:	str	r3, [sp, #44]	; 0x2c
   1f9ec:	ldr	r3, [pc, #1360]	; 1ff44 <__flatcc_fb_gen_c_builder@@Base+0xe18>
   1f9f0:	add	fp, pc, fp
   1f9f4:	add	r3, pc, r3
   1f9f8:	str	r3, [sp, #48]	; 0x30
   1f9fc:	ldr	r3, [pc, #1348]	; 1ff48 <__flatcc_fb_gen_c_builder@@Base+0xe1c>
   1fa00:	mov	r2, #1
   1fa04:	mov	r9, r6
   1fa08:	add	r3, pc, r3
   1fa0c:	str	r3, [sp, #52]	; 0x34
   1fa10:	ldrh	r3, [r4, #72]	; 0x48
   1fa14:	tst	r3, #4
   1fa18:	bne	1fb6c <__flatcc_fb_gen_c_builder@@Base+0xa40>
   1fa1c:	cmp	r2, #0
   1fa20:	beq	1fcc0 <__flatcc_fb_gen_c_builder@@Base+0xb94>
   1fa24:	ldr	r0, [pc, #1312]	; 1ff4c <__flatcc_fb_gen_c_builder@@Base+0xe20>
   1fa28:	ldr	r3, [r8, #204]	; 0xcc
   1fa2c:	mov	r2, #28
   1fa30:	mov	r1, #1
   1fa34:	add	r0, pc, r0
   1fa38:	bl	13f10 <fwrite@plt>
   1fa3c:	ldrh	r5, [r4, #72]	; 0x48
   1fa40:	ldrh	r3, [r4, #24]
   1fa44:	lsr	r5, r5, #8
   1fa48:	sub	r3, r3, #7
   1fa4c:	and	r5, r5, #1
   1fa50:	cmp	r3, #8
   1fa54:	addls	pc, pc, r3, lsl #2
   1fa58:	b	1fb08 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   1fa5c:	b	1fc2c <__flatcc_fb_gen_c_builder@@Base+0xb00>
   1fa60:	b	1fc98 <__flatcc_fb_gen_c_builder@@Base+0xb6c>
   1fa64:	b	1fc7c <__flatcc_fb_gen_c_builder@@Base+0xb50>
   1fa68:	b	1faf0 <__flatcc_fb_gen_c_builder@@Base+0x9c4>
   1fa6c:	b	1fb08 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   1fa70:	b	1fb08 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   1fa74:	b	1fb08 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   1fa78:	b	1fab8 <__flatcc_fb_gen_c_builder@@Base+0x98c>
   1fa7c:	b	1fa80 <__flatcc_fb_gen_c_builder@@Base+0x954>
   1fa80:	ldr	r1, [r4, #16]
   1fa84:	mov	r2, r9
   1fa88:	ldr	r0, [r1, #12]
   1fa8c:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   1fa90:	ldr	r3, [r4, #16]
   1fa94:	ldrh	r3, [r3, #8]
   1fa98:	cmp	r3, #4
   1fa9c:	addls	pc, pc, r3, lsl #2
   1faa0:	b	1fdf8 <__flatcc_fb_gen_c_builder@@Base+0xccc>
   1faa4:	b	1fde0 <__flatcc_fb_gen_c_builder@@Base+0xcb4>
   1faa8:	b	1fd78 <__flatcc_fb_gen_c_builder@@Base+0xc4c>
   1faac:	b	1fdf8 <__flatcc_fb_gen_c_builder@@Base+0xccc>
   1fab0:	b	1fd78 <__flatcc_fb_gen_c_builder@@Base+0xc4c>
   1fab4:	b	1fd60 <__flatcc_fb_gen_c_builder@@Base+0xc34>
   1fab8:	ldr	r1, [r4, #16]
   1fabc:	mov	r2, r9
   1fac0:	ldr	r0, [r1, #12]
   1fac4:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   1fac8:	ldr	r3, [r4, #16]
   1facc:	ldrh	r3, [r3, #8]
   1fad0:	cmp	r3, #4
   1fad4:	addls	pc, pc, r3, lsl #2
   1fad8:	b	1fe4c <__flatcc_fb_gen_c_builder@@Base+0xd20>
   1fadc:	b	1fd48 <__flatcc_fb_gen_c_builder@@Base+0xc1c>
   1fae0:	b	1fd20 <__flatcc_fb_gen_c_builder@@Base+0xbf4>
   1fae4:	b	1fe4c <__flatcc_fb_gen_c_builder@@Base+0xd20>
   1fae8:	b	1fd20 <__flatcc_fb_gen_c_builder@@Base+0xbf4>
   1faec:	b	1fd08 <__flatcc_fb_gen_c_builder@@Base+0xbdc>
   1faf0:	ldr	r1, [pc, #1112]	; 1ff50 <__flatcc_fb_gen_c_builder@@Base+0xe24>
   1faf4:	ldrd	r2, [r4, #96]	; 0x60
   1faf8:	ldr	r0, [r8, #204]	; 0xcc
   1fafc:	add	r1, pc, r1
   1fb00:	str	r5, [sp]
   1fb04:	bl	13f7c <fprintf@plt>
   1fb08:	ldr	r2, [r4, #4]
   1fb0c:	mov	r1, fp
   1fb10:	ldr	r0, [r8, #204]	; 0xcc
   1fb14:	ldr	r3, [r2]
   1fb18:	ldr	r2, [r2, #4]
   1fb1c:	bl	13f7c <fprintf@plt>
   1fb20:	ldr	r4, [r4]
   1fb24:	cmp	r4, #0
   1fb28:	beq	1fea0 <__flatcc_fb_gen_c_builder@@Base+0xd74>
   1fb2c:	ldrh	r3, [r4, #72]	; 0x48
   1fb30:	tst	r3, #4
   1fb34:	beq	1fcc0 <__flatcc_fb_gen_c_builder@@Base+0xb94>
   1fb38:	ldr	r4, [r4]
   1fb3c:	cmp	r4, #0
   1fb40:	beq	1fea0 <__flatcc_fb_gen_c_builder@@Base+0xd74>
   1fb44:	ldrh	r3, [r4, #72]	; 0x48
   1fb48:	tst	r3, #4
   1fb4c:	beq	1fcc0 <__flatcc_fb_gen_c_builder@@Base+0xb94>
   1fb50:	ldr	r4, [r4]
   1fb54:	cmp	r4, #0
   1fb58:	beq	1fea0 <__flatcc_fb_gen_c_builder@@Base+0xd74>
   1fb5c:	ldrh	r3, [r4, #72]	; 0x48
   1fb60:	tst	r3, #4
   1fb64:	beq	1fcc0 <__flatcc_fb_gen_c_builder@@Base+0xb94>
   1fb68:	mov	r2, #0
   1fb6c:	ldr	r4, [r4]
   1fb70:	cmp	r4, #0
   1fb74:	bne	1fa10 <__flatcc_fb_gen_c_builder@@Base+0x8e4>
   1fb78:	cmp	r2, #0
   1fb7c:	mov	r9, sl
   1fb80:	beq	1fea4 <__flatcc_fb_gen_c_builder@@Base+0xd78>
   1fb84:	ldr	r0, [pc, #968]	; 1ff54 <__flatcc_fb_gen_c_builder@@Base+0xe28>
   1fb88:	ldr	r3, [r8, #204]	; 0xcc
   1fb8c:	mov	r2, #29
   1fb90:	mov	r1, #1
   1fb94:	add	r0, pc, r0
   1fb98:	bl	13f10 <fwrite@plt>
   1fb9c:	ldr	r0, [pc, #948]	; 1ff58 <__flatcc_fb_gen_c_builder@@Base+0xe2c>
   1fba0:	ldr	r3, [r8, #204]	; 0xcc
   1fba4:	mov	r2, #3
   1fba8:	mov	r1, #1
   1fbac:	add	r0, pc, r0
   1fbb0:	bl	13f10 <fwrite@plt>
   1fbb4:	ldr	r1, [pc, #928]	; 1ff5c <__flatcc_fb_gen_c_builder@@Base+0xe30>
   1fbb8:	ldr	r0, [r8, #204]	; 0xcc
   1fbbc:	mov	r3, r9
   1fbc0:	mov	r2, r9
   1fbc4:	str	r9, [sp]
   1fbc8:	add	r1, pc, r1
   1fbcc:	bl	13f7c <fprintf@plt>
   1fbd0:	ldr	r1, [pc, #904]	; 1ff60 <__flatcc_fb_gen_c_builder@@Base+0xe34>
   1fbd4:	ldr	r0, [r8, #204]	; 0xcc
   1fbd8:	mov	r3, r9
   1fbdc:	mov	r2, r9
   1fbe0:	str	r9, [sp]
   1fbe4:	add	r1, pc, r1
   1fbe8:	bl	13f7c <fprintf@plt>
   1fbec:	ldr	r1, [pc, #880]	; 1ff64 <__flatcc_fb_gen_c_builder@@Base+0xe38>
   1fbf0:	mov	r3, r9
   1fbf4:	mov	r2, r9
   1fbf8:	add	r1, pc, r1
   1fbfc:	ldr	r0, [r8, #204]	; 0xcc
   1fc00:	bl	13f7c <fprintf@plt>
   1fc04:	ldr	r1, [pc, #860]	; 1ff68 <__flatcc_fb_gen_c_builder@@Base+0xe3c>
   1fc08:	ldr	r0, [r8, #204]	; 0xcc
   1fc0c:	mov	r2, r9
   1fc10:	str	r9, [sp]
   1fc14:	mov	r3, r8
   1fc18:	add	r1, pc, r1
   1fc1c:	bl	13f7c <fprintf@plt>
   1fc20:	mov	r0, #0
   1fc24:	add	sp, sp, #516	; 0x204
   1fc28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1fc2c:	ldr	r1, [r4, #104]	; 0x68
   1fc30:	cmp	r1, #0
   1fc34:	beq	1fec0 <__flatcc_fb_gen_c_builder@@Base+0xd94>
   1fc38:	mov	r2, r9
   1fc3c:	ldr	r0, [r1, #12]
   1fc40:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   1fc44:	ldr	r3, [r4, #104]	; 0x68
   1fc48:	ldrh	r3, [r3, #8]
   1fc4c:	cmp	r3, #0
   1fc50:	bne	1fcdc <__flatcc_fb_gen_c_builder@@Base+0xbb0>
   1fc54:	ldrd	r2, [r4, #96]	; 0x60
   1fc58:	str	r9, [sp, #8]
   1fc5c:	ldrh	r1, [r4, #74]	; 0x4a
   1fc60:	ldr	r0, [r8, #204]	; 0xcc
   1fc64:	str	r5, [sp]
   1fc68:	str	r1, [sp, #4]
   1fc6c:	ldr	r1, [pc, #760]	; 1ff6c <__flatcc_fb_gen_c_builder@@Base+0xe40>
   1fc70:	add	r1, pc, r1
   1fc74:	bl	13f7c <fprintf@plt>
   1fc78:	b	1fb08 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   1fc7c:	ldr	r1, [pc, #748]	; 1ff70 <__flatcc_fb_gen_c_builder@@Base+0xe44>
   1fc80:	ldrd	r2, [r4, #96]	; 0x60
   1fc84:	ldr	r0, [r8, #204]	; 0xcc
   1fc88:	add	r1, pc, r1
   1fc8c:	str	r5, [sp]
   1fc90:	bl	13f7c <fprintf@plt>
   1fc94:	b	1fb08 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   1fc98:	ldrh	r1, [r4, #74]	; 0x4a
   1fc9c:	ldrd	r2, [r4, #96]	; 0x60
   1fca0:	ldr	r0, [r8, #204]	; 0xcc
   1fca4:	str	r1, [sp, #8]
   1fca8:	ldrd	r6, [r4, #88]	; 0x58
   1fcac:	ldr	r1, [pc, #704]	; 1ff74 <__flatcc_fb_gen_c_builder@@Base+0xe48>
   1fcb0:	strd	r6, [sp]
   1fcb4:	add	r1, pc, r1
   1fcb8:	bl	13f7c <fprintf@plt>
   1fcbc:	b	1fb08 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   1fcc0:	ldr	r0, [pc, #688]	; 1ff78 <__flatcc_fb_gen_c_builder@@Base+0xe4c>
   1fcc4:	ldr	r3, [r8, #204]	; 0xcc
   1fcc8:	mov	r2, #30
   1fccc:	mov	r1, #1
   1fcd0:	add	r0, pc, r0
   1fcd4:	bl	13f10 <fwrite@plt>
   1fcd8:	b	1fa3c <__flatcc_fb_gen_c_builder@@Base+0x910>
   1fcdc:	ldrh	r1, [r4, #74]	; 0x4a
   1fce0:	ldrd	r2, [r4, #96]	; 0x60
   1fce4:	ldr	r0, [r8, #204]	; 0xcc
   1fce8:	str	r1, [sp, #16]
   1fcec:	ldrd	r6, [r4, #88]	; 0x58
   1fcf0:	ldr	r1, [pc, #644]	; 1ff7c <__flatcc_fb_gen_c_builder@@Base+0xe50>
   1fcf4:	str	r5, [sp]
   1fcf8:	strd	r6, [sp, #8]
   1fcfc:	add	r1, pc, r1
   1fd00:	bl	13f7c <fprintf@plt>
   1fd04:	b	1fb08 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   1fd08:	ldrd	r2, [r4, #96]	; 0x60
   1fd0c:	ldr	r0, [r8, #204]	; 0xcc
   1fd10:	ldr	r1, [sp, #48]	; 0x30
   1fd14:	stm	sp, {r5, r9}
   1fd18:	bl	13f7c <fprintf@plt>
   1fd1c:	b	1fb08 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   1fd20:	ldrh	r1, [r4, #74]	; 0x4a
   1fd24:	ldrd	r2, [r4, #96]	; 0x60
   1fd28:	ldr	r0, [r8, #204]	; 0xcc
   1fd2c:	str	r1, [sp, #8]
   1fd30:	ldrd	r6, [r4, #88]	; 0x58
   1fd34:	ldr	r1, [pc, #580]	; 1ff80 <__flatcc_fb_gen_c_builder@@Base+0xe54>
   1fd38:	strd	r6, [sp]
   1fd3c:	add	r1, pc, r1
   1fd40:	bl	13f7c <fprintf@plt>
   1fd44:	b	1fb08 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   1fd48:	ldrd	r2, [r4, #96]	; 0x60
   1fd4c:	ldr	r0, [r8, #204]	; 0xcc
   1fd50:	ldr	r1, [sp, #52]	; 0x34
   1fd54:	stm	sp, {r5, r9}
   1fd58:	bl	13f7c <fprintf@plt>
   1fd5c:	b	1fb08 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   1fd60:	ldrd	r2, [r4, #96]	; 0x60
   1fd64:	ldr	r0, [r8, #204]	; 0xcc
   1fd68:	ldr	r1, [sp, #36]	; 0x24
   1fd6c:	stm	sp, {r5, r9}
   1fd70:	bl	13f7c <fprintf@plt>
   1fd74:	b	1fb08 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   1fd78:	ldr	r3, [r8, #204]	; 0xcc
   1fd7c:	ldrd	r6, [r4, #88]	; 0x58
   1fd80:	str	r3, [sp, #64]	; 0x40
   1fd84:	ldrd	r2, [r4, #96]	; 0x60
   1fd88:	strd	r2, [sp, #56]	; 0x38
   1fd8c:	orrs	r3, r6, r7
   1fd90:	ldrh	r3, [r4, #74]	; 0x4a
   1fd94:	mvneq	r0, #0
   1fd98:	moveq	r1, #0
   1fd9c:	str	r3, [sp, #68]	; 0x44
   1fda0:	beq	1fdb8 <__flatcc_fb_gen_c_builder@@Base+0xc8c>
   1fda4:	mov	r2, r6
   1fda8:	mov	r3, r7
   1fdac:	mvn	r0, #0
   1fdb0:	mov	r1, #0
   1fdb4:	bl	3e0ec <fb_value_set_visit@@Base+0x668>
   1fdb8:	ldr	r3, [sp, #68]	; 0x44
   1fdbc:	strd	r0, [sp, #24]
   1fdc0:	str	r3, [sp, #16]
   1fdc4:	strd	r6, [sp, #8]
   1fdc8:	str	r5, [sp]
   1fdcc:	ldrd	r2, [sp, #56]	; 0x38
   1fdd0:	ldr	r0, [sp, #64]	; 0x40
   1fdd4:	ldr	r1, [sp, #40]	; 0x28
   1fdd8:	bl	13f7c <fprintf@plt>
   1fddc:	b	1fb08 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   1fde0:	ldrd	r2, [r4, #96]	; 0x60
   1fde4:	ldr	r0, [r8, #204]	; 0xcc
   1fde8:	ldr	r1, [sp, #44]	; 0x2c
   1fdec:	stm	sp, {r5, r9}
   1fdf0:	bl	13f7c <fprintf@plt>
   1fdf4:	b	1fb08 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   1fdf8:	ldr	sl, [sp, #32]
   1fdfc:	ldr	r2, [pc, #384]	; 1ff84 <__flatcc_fb_gen_c_builder@@Base+0xe58>
   1fe00:	ldr	r3, [pc, #384]	; 1ff88 <__flatcc_fb_gen_c_builder@@Base+0xe5c>
   1fe04:	ldr	r4, [pc, #384]	; 1ff8c <__flatcc_fb_gen_c_builder@@Base+0xe60>
   1fe08:	ldr	r1, [sl, r2]
   1fe0c:	add	r3, pc, r3
   1fe10:	str	r3, [sp]
   1fe14:	ldr	r0, [r1]
   1fe18:	ldr	r1, [pc, #368]	; 1ff90 <__flatcc_fb_gen_c_builder@@Base+0xe64>
   1fe1c:	add	r4, pc, r4
   1fe20:	mov	r2, r4
   1fe24:	mov	r3, #202	; 0xca
   1fe28:	add	r1, pc, r1
   1fe2c:	bl	13f7c <fprintf@plt>
   1fe30:	ldr	r3, [pc, #348]	; 1ff94 <__flatcc_fb_gen_c_builder@@Base+0xe68>
   1fe34:	ldr	r0, [pc, #348]	; 1ff98 <__flatcc_fb_gen_c_builder@@Base+0xe6c>
   1fe38:	mov	r1, r4
   1fe3c:	add	r3, pc, r3
   1fe40:	mov	r2, #202	; 0xca
   1fe44:	add	r0, pc, r0
   1fe48:	bl	14030 <__assert_fail@plt>
   1fe4c:	ldr	sl, [sp, #32]
   1fe50:	ldr	r2, [pc, #300]	; 1ff84 <__flatcc_fb_gen_c_builder@@Base+0xe58>
   1fe54:	ldr	r3, [pc, #320]	; 1ff9c <__flatcc_fb_gen_c_builder@@Base+0xe70>
   1fe58:	ldr	r4, [pc, #320]	; 1ffa0 <__flatcc_fb_gen_c_builder@@Base+0xe74>
   1fe5c:	ldr	r1, [sl, r2]
   1fe60:	add	r3, pc, r3
   1fe64:	str	r3, [sp]
   1fe68:	ldr	r0, [r1]
   1fe6c:	ldr	r1, [pc, #304]	; 1ffa4 <__flatcc_fb_gen_c_builder@@Base+0xe78>
   1fe70:	add	r4, pc, r4
   1fe74:	mov	r2, r4
   1fe78:	mov	r3, #178	; 0xb2
   1fe7c:	add	r1, pc, r1
   1fe80:	bl	13f7c <fprintf@plt>
   1fe84:	ldr	r3, [pc, #284]	; 1ffa8 <__flatcc_fb_gen_c_builder@@Base+0xe7c>
   1fe88:	ldr	r0, [pc, #284]	; 1ffac <__flatcc_fb_gen_c_builder@@Base+0xe80>
   1fe8c:	mov	r1, r4
   1fe90:	add	r3, pc, r3
   1fe94:	mov	r2, #178	; 0xb2
   1fe98:	add	r0, pc, r0
   1fe9c:	bl	14030 <__assert_fail@plt>
   1fea0:	mov	r9, sl
   1fea4:	ldr	r0, [pc, #260]	; 1ffb0 <__flatcc_fb_gen_c_builder@@Base+0xe84>
   1fea8:	ldr	r3, [r8, #204]	; 0xcc
   1feac:	mov	r2, #15
   1feb0:	mov	r1, #1
   1feb4:	add	r0, pc, r0
   1feb8:	bl	13f10 <fwrite@plt>
   1febc:	b	1fb84 <__flatcc_fb_gen_c_builder@@Base+0xa58>
   1fec0:	ldr	r3, [r8, #204]	; 0xcc
   1fec4:	ldrd	r6, [r4, #88]	; 0x58
   1fec8:	str	r3, [sp, #64]	; 0x40
   1fecc:	ldrd	r2, [r4, #96]	; 0x60
   1fed0:	strd	r2, [sp, #56]	; 0x38
   1fed4:	orrs	r3, r6, r7
   1fed8:	ldrh	r3, [r4, #74]	; 0x4a
   1fedc:	mvneq	r0, #0
   1fee0:	moveq	r1, #0
   1fee4:	str	r3, [sp, #68]	; 0x44
   1fee8:	beq	1ff00 <__flatcc_fb_gen_c_builder@@Base+0xdd4>
   1feec:	mov	r2, r6
   1fef0:	mov	r3, r7
   1fef4:	mvn	r0, #0
   1fef8:	mov	r1, #0
   1fefc:	bl	3e0ec <fb_value_set_visit@@Base+0x668>
   1ff00:	strd	r0, [sp, #24]
   1ff04:	ldr	r3, [sp, #68]	; 0x44
   1ff08:	ldr	r1, [pc, #164]	; 1ffb4 <__flatcc_fb_gen_c_builder@@Base+0xe88>
   1ff0c:	str	r3, [sp, #16]
   1ff10:	strd	r6, [sp, #8]
   1ff14:	str	r5, [sp]
   1ff18:	ldrd	r2, [sp, #56]	; 0x38
   1ff1c:	ldr	r0, [sp, #64]	; 0x40
   1ff20:	add	r1, pc, r1
   1ff24:	bl	13f7c <fprintf@plt>
   1ff28:	b	1fb08 <__flatcc_fb_gen_c_builder@@Base+0x9dc>
   1ff2c:	andeq	r1, r3, r0, ror sl
   1ff30:	andeq	sl, r4, r4, asr #12
   1ff34:	andeq	r1, r3, ip, lsl #27
   1ff38:	strdeq	r2, [r3], -r0
   1ff3c:	andeq	r1, r3, r8, ror fp
   1ff40:	andeq	r1, r3, r8, lsr #26
   1ff44:	andeq	r1, r3, r4, lsr ip
   1ff48:	andeq	r1, r3, r4, ror #23
   1ff4c:	andeq	r1, r3, r4, lsr #20
   1ff50:	muleq	r3, r4, sl
   1ff54:	andeq	r1, r3, r4, asr ip
   1ff58:	strdeq	r1, [r3], -r8
   1ff5c:	andeq	r1, r3, r0, asr #24
   1ff60:	andeq	r1, r3, r4, asr #25
   1ff64:	andeq	r1, r3, ip, asr sp
   1ff68:	strdeq	r1, [r3], -r4
   1ff6c:	andeq	r1, r3, r0, asr r8
   1ff70:	andeq	r1, r3, r4, lsr r9
   1ff74:	andeq	r1, r3, r4, ror #15
   1ff78:	andeq	r1, r3, r8, lsr #15
   1ff7c:	andeq	r1, r3, r0, lsl r8
   1ff80:	andeq	r1, r3, ip, asr r7
   1ff84:	muleq	r0, ip, r0
   1ff88:	andeq	r1, r3, r8, lsl #19
   1ff8c:	andeq	r1, r3, r8, asr #16
   1ff90:	andeq	pc, r1, ip, lsr ip	; <UNPREDICTABLE>
   1ff94:	andeq	r1, r3, ip, lsr #11
   1ff98:	andeq	r8, r2, r0, lsr #32
   1ff9c:	andeq	r1, r3, r0, ror r8
   1ffa0:	strdeq	r1, [r3], -r4
   1ffa4:	andeq	pc, r1, r8, ror #23
   1ffa8:	andeq	r1, r3, r8, asr r5
   1ffac:	andeq	r7, r2, ip, asr #31
   1ffb0:	andeq	r1, r3, r4, lsr #18
   1ffb4:	andeq	r1, r3, ip, lsr #12
   1ffb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ffbc:	sub	sp, sp, #476	; 0x1dc
   1ffc0:	add	r4, sp, #32
   1ffc4:	mov	r6, r1
   1ffc8:	mov	r5, r0
   1ffcc:	mov	r2, #220	; 0xdc
   1ffd0:	mov	r0, r4
   1ffd4:	mov	r1, #0
   1ffd8:	add	r7, sp, #252	; 0xfc
   1ffdc:	bl	13f94 <memset@plt>
   1ffe0:	mov	r2, #220	; 0xdc
   1ffe4:	mov	r1, #0
   1ffe8:	mov	r0, r7
   1ffec:	bl	13f94 <memset@plt>
   1fff0:	mov	r2, r4
   1fff4:	mov	r1, r6
   1fff8:	ldr	r0, [r6, #12]
   1fffc:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   20000:	ldr	r1, [pc, #480]	; 201e8 <__flatcc_fb_gen_c_builder@@Base+0x10bc>
   20004:	mov	r2, r4
   20008:	ldr	r0, [r5]
   2000c:	add	r1, pc, r1
   20010:	bl	13f7c <fprintf@plt>
   20014:	ldr	r4, [r6, #20]
   20018:	ldr	r6, [pc, #460]	; 201ec <__flatcc_fb_gen_c_builder@@Base+0x10c0>
   2001c:	cmp	r4, #0
   20020:	add	r6, pc, r6
   20024:	beq	20124 <__flatcc_fb_gen_c_builder@@Base+0xff8>
   20028:	ldr	r8, [pc, #448]	; 201f0 <__flatcc_fb_gen_c_builder@@Base+0x10c4>
   2002c:	ldr	sl, [pc, #448]	; 201f4 <__flatcc_fb_gen_c_builder@@Base+0x10c8>
   20030:	ldr	r9, [pc, #448]	; 201f8 <__flatcc_fb_gen_c_builder@@Base+0x10cc>
   20034:	add	r8, pc, r8
   20038:	add	sl, pc, sl
   2003c:	add	r9, pc, r9
   20040:	ldrh	r2, [r4, #24]
   20044:	ldr	r3, [r4, #4]
   20048:	cmp	r2, #10
   2004c:	ldr	fp, [r3]
   20050:	ldr	r3, [r3, #4]
   20054:	beq	20148 <__flatcc_fb_gen_c_builder@@Base+0x101c>
   20058:	cmp	r2, #14
   2005c:	beq	200bc <__flatcc_fb_gen_c_builder@@Base+0xf90>
   20060:	cmp	r2, #0
   20064:	beq	20118 <__flatcc_fb_gen_c_builder@@Base+0xfec>
   20068:	ldr	r2, [pc, #396]	; 201fc <__flatcc_fb_gen_c_builder@@Base+0x10d0>
   2006c:	ldr	r3, [pc, #396]	; 20200 <__flatcc_fb_gen_c_builder@@Base+0x10d4>
   20070:	ldr	r4, [pc, #396]	; 20204 <__flatcc_fb_gen_c_builder@@Base+0x10d8>
   20074:	ldr	r1, [r6, r2]
   20078:	add	r3, pc, r3
   2007c:	str	r3, [sp]
   20080:	ldr	r0, [r1]
   20084:	ldr	r1, [pc, #380]	; 20208 <__flatcc_fb_gen_c_builder@@Base+0x10dc>
   20088:	add	r4, pc, r4
   2008c:	mov	r2, r4
   20090:	mov	r3, #83	; 0x53
   20094:	add	r1, pc, r1
   20098:	bl	13f7c <fprintf@plt>
   2009c:	ldr	r3, [pc, #360]	; 2020c <__flatcc_fb_gen_c_builder@@Base+0x10e0>
   200a0:	ldr	r0, [pc, #360]	; 20210 <__flatcc_fb_gen_c_builder@@Base+0x10e4>
   200a4:	add	r3, pc, r3
   200a8:	mov	r1, r4
   200ac:	add	r3, r3, #20
   200b0:	mov	r2, #83	; 0x53
   200b4:	add	r0, pc, r0
   200b8:	bl	14030 <__assert_fail@plt>
   200bc:	ldr	r1, [r4, #16]
   200c0:	mov	r2, r7
   200c4:	str	r3, [sp, #28]
   200c8:	ldr	r0, [r1, #12]
   200cc:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   200d0:	ldr	r1, [r4, #16]
   200d4:	ldr	r3, [sp, #28]
   200d8:	ldrh	r2, [r1, #8]
   200dc:	cmp	r2, #0
   200e0:	beq	2016c <__flatcc_fb_gen_c_builder@@Base+0x1040>
   200e4:	cmp	r2, #1
   200e8:	bne	20194 <__flatcc_fb_gen_c_builder@@Base+0x1068>
   200ec:	ldr	r2, [r4, #48]	; 0x30
   200f0:	str	fp, [sp, #16]
   200f4:	str	r3, [sp, #12]
   200f8:	ldrh	r3, [r1, #104]	; 0x68
   200fc:	ldr	ip, [r5]
   20100:	str	r3, [sp, #8]
   20104:	ldrd	r0, [r1, #112]	; 0x70
   20108:	strd	r0, [sp]
   2010c:	mov	r0, ip
   20110:	mov	r1, r9
   20114:	bl	13f7c <fprintf@plt>
   20118:	ldr	r4, [r4]
   2011c:	cmp	r4, #0
   20120:	bne	20040 <__flatcc_fb_gen_c_builder@@Base+0xf14>
   20124:	ldr	r0, [pc, #232]	; 20214 <__flatcc_fb_gen_c_builder@@Base+0x10e8>
   20128:	ldr	r3, [r5]
   2012c:	mov	r2, #47	; 0x2f
   20130:	mov	r1, #1
   20134:	add	r0, pc, r0
   20138:	bl	13f10 <fwrite@plt>
   2013c:	mov	r0, #0
   20140:	add	sp, sp, #476	; 0x1dc
   20144:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20148:	ldr	r2, [r4, #48]	; 0x30
   2014c:	ldr	r0, [r5]
   20150:	mov	r1, r8
   20154:	str	fp, [sp]
   20158:	bl	13f7c <fprintf@plt>
   2015c:	ldr	r4, [r4]
   20160:	cmp	r4, #0
   20164:	bne	20040 <__flatcc_fb_gen_c_builder@@Base+0xf14>
   20168:	b	20124 <__flatcc_fb_gen_c_builder@@Base+0xff8>
   2016c:	ldr	r2, [r4, #48]	; 0x30
   20170:	ldr	r0, [r5]
   20174:	mov	r1, sl
   20178:	stm	sp, {r3, fp}
   2017c:	mov	r3, r7
   20180:	bl	13f7c <fprintf@plt>
   20184:	ldr	r4, [r4]
   20188:	cmp	r4, #0
   2018c:	bne	20040 <__flatcc_fb_gen_c_builder@@Base+0xf14>
   20190:	b	20124 <__flatcc_fb_gen_c_builder@@Base+0xff8>
   20194:	ldr	r2, [pc, #96]	; 201fc <__flatcc_fb_gen_c_builder@@Base+0x10d0>
   20198:	ldr	r3, [pc, #120]	; 20218 <__flatcc_fb_gen_c_builder@@Base+0x10ec>
   2019c:	ldr	r4, [pc, #120]	; 2021c <__flatcc_fb_gen_c_builder@@Base+0x10f0>
   201a0:	ldr	r1, [r6, r2]
   201a4:	add	r3, pc, r3
   201a8:	str	r3, [sp]
   201ac:	ldr	r0, [r1]
   201b0:	ldr	r1, [pc, #104]	; 20220 <__flatcc_fb_gen_c_builder@@Base+0x10f4>
   201b4:	add	r4, pc, r4
   201b8:	mov	r2, r4
   201bc:	mov	r3, #74	; 0x4a
   201c0:	add	r1, pc, r1
   201c4:	bl	13f7c <fprintf@plt>
   201c8:	ldr	r3, [pc, #84]	; 20224 <__flatcc_fb_gen_c_builder@@Base+0x10f8>
   201cc:	ldr	r0, [pc, #84]	; 20228 <__flatcc_fb_gen_c_builder@@Base+0x10fc>
   201d0:	add	r3, pc, r3
   201d4:	mov	r1, r4
   201d8:	add	r3, r3, #20
   201dc:	mov	r2, #74	; 0x4a
   201e0:	add	r0, pc, r0
   201e4:	bl	14030 <__assert_fail@plt>
   201e8:	andeq	r1, r3, r0, asr #21
   201ec:	ldrdeq	r9, [r4], -r8
   201f0:	andeq	r1, r3, r0, lsl #24
   201f4:	andeq	r1, r3, r4, lsr #22
   201f8:	andeq	r1, r3, r0, ror fp
   201fc:	muleq	r0, ip, r0
   20200:	strdeq	r1, [r3], -ip
   20204:	ldrdeq	r1, [r3], -ip
   20208:	ldrdeq	pc, [r1], -r0
   2020c:	andeq	r1, r3, r4, asr #6
   20210:			; <UNDEFINED> instruction: 0x00027db0
   20214:	strdeq	r1, [r3], -r8
   20218:	andeq	r1, r3, r4, asr sl
   2021c:			; <UNDEFINED> instruction: 0x000314b0
   20220:	andeq	pc, r1, r4, lsr #17
   20224:	andeq	r1, r3, r8, lsl r2
   20228:	andeq	r7, r2, r4, lsl #25

0002022c <__flatcc_fb_gen_c_verifier@@Base>:
   2022c:	ldr	r3, [r0, #208]	; 0xd0
   20230:	ldr	r1, [pc, #844]	; 20584 <__flatcc_fb_gen_c_verifier@@Base+0x358>
   20234:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20238:	add	r1, pc, r1
   2023c:	ldr	r3, [r3, #164]	; 0xa4
   20240:	mov	r6, r0
   20244:	sub	sp, sp, #252	; 0xfc
   20248:	mov	r2, r3
   2024c:	ldr	r0, [r0, #204]	; 0xcc
   20250:	bl	13f7c <fprintf@plt>
   20254:	ldr	r0, [pc, #812]	; 20588 <__flatcc_fb_gen_c_verifier@@Base+0x35c>
   20258:	ldr	r3, [r6, #204]	; 0xcc
   2025c:	mov	r2, #81	; 0x51
   20260:	mov	r1, #1
   20264:	add	r0, pc, r0
   20268:	bl	13f10 <fwrite@plt>
   2026c:	ldr	r3, [r6, #208]	; 0xd0
   20270:	ldr	r1, [pc, #788]	; 2058c <__flatcc_fb_gen_c_verifier@@Base+0x360>
   20274:	ldr	r0, [r6, #204]	; 0xcc
   20278:	ldr	r2, [r3, #164]	; 0xa4
   2027c:	add	r1, pc, r1
   20280:	bl	13f7c <fprintf@plt>
   20284:	ldr	r3, [r6, #208]	; 0xd0
   20288:	ldr	r1, [pc, #768]	; 20590 <__flatcc_fb_gen_c_verifier@@Base+0x364>
   2028c:	ldr	r0, [r6, #204]	; 0xcc
   20290:	ldr	r2, [r3, #160]	; 0xa0
   20294:	add	r1, pc, r1
   20298:	bl	13f7c <fprintf@plt>
   2029c:	ldr	r0, [pc, #752]	; 20594 <__flatcc_fb_gen_c_verifier@@Base+0x368>
   202a0:	ldr	r3, [r6, #204]	; 0xcc
   202a4:	mov	r2, #7
   202a8:	mov	r1, #1
   202ac:	add	r0, pc, r0
   202b0:	bl	13f10 <fwrite@plt>
   202b4:	ldr	r0, [pc, #732]	; 20598 <__flatcc_fb_gen_c_verifier@@Base+0x36c>
   202b8:	ldr	r3, [r6, #204]	; 0xcc
   202bc:	mov	r2, #36	; 0x24
   202c0:	mov	r1, #1
   202c4:	add	r0, pc, r0
   202c8:	bl	13f10 <fwrite@plt>
   202cc:	ldr	r2, [pc, #712]	; 2059c <__flatcc_fb_gen_c_verifier@@Base+0x370>
   202d0:	ldr	r1, [pc, #712]	; 205a0 <__flatcc_fb_gen_c_verifier@@Base+0x374>
   202d4:	mov	r0, r6
   202d8:	add	r1, pc, r1
   202dc:	add	r2, pc, r2
   202e0:	bl	1523c <__flatcc_fb_gen_c_includes@@Base>
   202e4:	ldr	r3, [r6, #212]	; 0xd4
   202e8:	ldr	r1, [r6, #204]	; 0xcc
   202ec:	ldr	r3, [r3, #140]	; 0x8c
   202f0:	cmp	r3, #0
   202f4:	beq	20314 <__flatcc_fb_gen_c_verifier@@Base+0xe8>
   202f8:	ldr	r0, [pc, #676]	; 205a4 <__flatcc_fb_gen_c_verifier@@Base+0x378>
   202fc:	mov	r3, r1
   20300:	mov	r2, #36	; 0x24
   20304:	mov	r1, #1
   20308:	add	r0, pc, r0
   2030c:	bl	13f10 <fwrite@plt>
   20310:	ldr	r1, [r6, #204]	; 0xcc
   20314:	mov	r0, #10
   20318:	add	r7, sp, #28
   2031c:	bl	13fdc <fputc@plt>
   20320:	mov	r0, r7
   20324:	mov	r2, #220	; 0xdc
   20328:	mov	r1, #0
   2032c:	bl	13f94 <memset@plt>
   20330:	ldr	r3, [r6, #208]	; 0xd0
   20334:	ldr	r5, [pc, #620]	; 205a8 <__flatcc_fb_gen_c_verifier@@Base+0x37c>
   20338:	ldr	r4, [r3, #40]	; 0x28
   2033c:	add	r5, pc, r5
   20340:	cmp	r4, #0
   20344:	bne	20358 <__flatcc_fb_gen_c_verifier@@Base+0x12c>
   20348:	b	20390 <__flatcc_fb_gen_c_verifier@@Base+0x164>
   2034c:	ldr	r4, [r4]
   20350:	cmp	r4, #0
   20354:	beq	20390 <__flatcc_fb_gen_c_verifier@@Base+0x164>
   20358:	ldrh	r3, [r4, #8]
   2035c:	cmp	r3, #0
   20360:	bne	2034c <__flatcc_fb_gen_c_verifier@@Base+0x120>
   20364:	mov	r1, r4
   20368:	ldr	r0, [r4, #12]
   2036c:	mov	r2, r7
   20370:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   20374:	mov	r2, r7
   20378:	mov	r1, r5
   2037c:	ldr	r0, [r6, #204]	; 0xcc
   20380:	bl	13f7c <fprintf@plt>
   20384:	ldr	r4, [r4]
   20388:	cmp	r4, #0
   2038c:	bne	20358 <__flatcc_fb_gen_c_verifier@@Base+0x12c>
   20390:	ldr	r1, [r6, #204]	; 0xcc
   20394:	mov	r0, #10
   20398:	bl	13fdc <fputc@plt>
   2039c:	ldr	r3, [r6, #208]	; 0xd0
   203a0:	ldr	r5, [r3, #40]	; 0x28
   203a4:	cmp	r5, #0
   203a8:	addne	r4, r6, #204	; 0xcc
   203ac:	bne	203c0 <__flatcc_fb_gen_c_verifier@@Base+0x194>
   203b0:	b	20534 <__flatcc_fb_gen_c_verifier@@Base+0x308>
   203b4:	ldr	r5, [r5]
   203b8:	cmp	r5, #0
   203bc:	beq	203e4 <__flatcc_fb_gen_c_verifier@@Base+0x1b8>
   203c0:	ldrh	r3, [r5, #8]
   203c4:	cmp	r3, #4
   203c8:	bne	203b4 <__flatcc_fb_gen_c_verifier@@Base+0x188>
   203cc:	mov	r1, r5
   203d0:	mov	r0, r4
   203d4:	bl	1ffb8 <__flatcc_fb_gen_c_builder@@Base+0xe8c>
   203d8:	ldr	r5, [r5]
   203dc:	cmp	r5, #0
   203e0:	bne	203c0 <__flatcc_fb_gen_c_verifier@@Base+0x194>
   203e4:	ldr	r3, [r6, #208]	; 0xd0
   203e8:	ldr	r4, [r3, #40]	; 0x28
   203ec:	cmp	r4, #0
   203f0:	beq	20534 <__flatcc_fb_gen_c_verifier@@Base+0x308>
   203f4:	ldr	r9, [pc, #432]	; 205ac <__flatcc_fb_gen_c_verifier@@Base+0x380>
   203f8:	ldr	r8, [pc, #432]	; 205b0 <__flatcc_fb_gen_c_verifier@@Base+0x384>
   203fc:	ldr	fp, [pc, #432]	; 205b4 <__flatcc_fb_gen_c_verifier@@Base+0x388>
   20400:	ldr	sl, [pc, #432]	; 205b8 <__flatcc_fb_gen_c_verifier@@Base+0x38c>
   20404:	add	r9, pc, r9
   20408:	add	r8, pc, r8
   2040c:	add	fp, pc, fp
   20410:	add	sl, pc, sl
   20414:	str	r9, [sp, #16]
   20418:	str	r8, [sp, #20]
   2041c:	b	2042c <__flatcc_fb_gen_c_verifier@@Base+0x200>
   20420:	ldr	r4, [r4]
   20424:	cmp	r4, #0
   20428:	beq	204f0 <__flatcc_fb_gen_c_verifier@@Base+0x2c4>
   2042c:	ldrh	r3, [r4, #8]
   20430:	cmp	r3, #1
   20434:	bne	20420 <__flatcc_fb_gen_c_verifier@@Base+0x1f4>
   20438:	mov	r2, #220	; 0xdc
   2043c:	mov	r1, r5
   20440:	mov	r0, r7
   20444:	bl	13f94 <memset@plt>
   20448:	mov	r1, r4
   2044c:	ldr	r0, [r4, #12]
   20450:	mov	r2, r7
   20454:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   20458:	ldrh	r2, [r4, #104]	; 0x68
   2045c:	ldr	r0, [r6, #204]	; 0xcc
   20460:	mov	r3, r7
   20464:	str	r2, [sp, #8]
   20468:	ldrd	r8, [r4, #112]	; 0x70
   2046c:	mov	r2, r7
   20470:	mov	r1, fp
   20474:	strd	r8, [sp]
   20478:	bl	13f7c <fprintf@plt>
   2047c:	ldrh	r2, [r4, #104]	; 0x68
   20480:	ldr	r0, [r6, #204]	; 0xcc
   20484:	mov	r3, r7
   20488:	str	r2, [sp, #8]
   2048c:	ldrd	r8, [r4, #112]	; 0x70
   20490:	mov	r2, r7
   20494:	mov	r1, sl
   20498:	strd	r8, [sp]
   2049c:	bl	13f7c <fprintf@plt>
   204a0:	ldrh	r2, [r4, #104]	; 0x68
   204a4:	ldr	r0, [r6, #204]	; 0xcc
   204a8:	mov	r3, r6
   204ac:	str	r2, [sp, #8]
   204b0:	ldrd	r8, [r4, #112]	; 0x70
   204b4:	mov	r2, r7
   204b8:	ldr	r1, [sp, #16]
   204bc:	strd	r8, [sp]
   204c0:	bl	13f7c <fprintf@plt>
   204c4:	ldrh	r3, [r4, #104]	; 0x68
   204c8:	ldr	r0, [r6, #204]	; 0xcc
   204cc:	mov	r2, r7
   204d0:	str	r3, [sp, #8]
   204d4:	ldrd	r8, [r4, #112]	; 0x70
   204d8:	ldr	r1, [sp, #20]
   204dc:	strd	r8, [sp]
   204e0:	bl	13f7c <fprintf@plt>
   204e4:	ldr	r4, [r4]
   204e8:	cmp	r4, #0
   204ec:	bne	2042c <__flatcc_fb_gen_c_verifier@@Base+0x200>
   204f0:	ldr	r3, [r6, #208]	; 0xd0
   204f4:	ldr	r4, [r3, #40]	; 0x28
   204f8:	cmp	r4, #0
   204fc:	bne	20510 <__flatcc_fb_gen_c_verifier@@Base+0x2e4>
   20500:	b	20534 <__flatcc_fb_gen_c_verifier@@Base+0x308>
   20504:	ldr	r4, [r4]
   20508:	cmp	r4, #0
   2050c:	beq	20534 <__flatcc_fb_gen_c_verifier@@Base+0x308>
   20510:	ldrh	r3, [r4, #8]
   20514:	cmp	r3, #0
   20518:	bne	20504 <__flatcc_fb_gen_c_verifier@@Base+0x2d8>
   2051c:	mov	r1, r4
   20520:	mov	r0, r6
   20524:	bl	1f94c <__flatcc_fb_gen_c_builder@@Base+0x820>
   20528:	ldr	r4, [r4]
   2052c:	cmp	r4, #0
   20530:	bne	20510 <__flatcc_fb_gen_c_verifier@@Base+0x2e4>
   20534:	ldr	r3, [r6, #212]	; 0xd4
   20538:	ldr	r0, [r6, #204]	; 0xcc
   2053c:	ldr	r3, [r3, #140]	; 0x8c
   20540:	cmp	r3, #0
   20544:	beq	20564 <__flatcc_fb_gen_c_verifier@@Base+0x338>
   20548:	mov	r3, r0
   2054c:	ldr	r0, [pc, #104]	; 205bc <__flatcc_fb_gen_c_verifier@@Base+0x390>
   20550:	mov	r2, #36	; 0x24
   20554:	mov	r1, #1
   20558:	add	r0, pc, r0
   2055c:	bl	13f10 <fwrite@plt>
   20560:	ldr	r0, [r6, #204]	; 0xcc
   20564:	ldr	r3, [r6, #208]	; 0xd0
   20568:	ldr	r1, [pc, #80]	; 205c0 <__flatcc_fb_gen_c_verifier@@Base+0x394>
   2056c:	ldr	r2, [r3, #164]	; 0xa4
   20570:	add	r1, pc, r1
   20574:	bl	13f7c <fprintf@plt>
   20578:	mov	r0, #0
   2057c:	add	sp, sp, #252	; 0xfc
   20580:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20584:	andeq	r1, r3, r0, ror sl
   20588:	strdeq	r0, [r2], -r8
   2058c:	andeq	r0, r3, r8, ror #29
   20590:	andeq	r0, r3, r8, ror #29
   20594:	andeq	r6, r2, ip, lsl #25
   20598:	andeq	r1, r3, r4, lsl sl
   2059c:	andeq	r1, r3, r4, lsr #20
   205a0:	andeq	pc, r1, r4, lsr #6
   205a4:	andeq	r0, r2, r8, ror #22
   205a8:	ldrdeq	r1, [r3], -r0
   205ac:	muleq	r3, r0, sl
   205b0:	andeq	r1, r3, r4, asr #22
   205b4:	andeq	r1, r3, r8, asr #18
   205b8:	andeq	r1, r3, r0, ror #19
   205bc:	andeq	r6, r2, ip, ror r7
   205c0:	andeq	r1, r3, ip, lsl #21
   205c4:	push	{r1, r2, r3}
   205c8:	ldr	r3, [pc, #236]	; 206bc <__flatcc_fb_gen_c_verifier@@Base+0x490>
   205cc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   205d0:	add	r3, pc, r3
   205d4:	ldr	r2, [r0, #212]	; 0xd4
   205d8:	ldrb	r1, [r3]
   205dc:	sub	sp, sp, #12
   205e0:	mov	r5, r0
   205e4:	cmp	r1, #0
   205e8:	ldr	sl, [sp, #44]	; 0x2c
   205ec:	ldr	r4, [r0, #220]	; 0xdc
   205f0:	ldr	r6, [r2, #176]	; 0xb0
   205f4:	beq	206a8 <__flatcc_fb_gen_c_verifier@@Base+0x47c>
   205f8:	ldrb	r3, [sl]
   205fc:	cmp	r3, #0
   20600:	beq	2068c <__flatcc_fb_gen_c_verifier@@Base+0x460>
   20604:	mul	r6, r6, r4
   20608:	cmp	r6, #64	; 0x40
   2060c:	ble	20658 <__flatcc_fb_gen_c_verifier@@Base+0x42c>
   20610:	ldr	r9, [pc, #168]	; 206c0 <__flatcc_fb_gen_c_verifier@@Base+0x494>
   20614:	ldr	r8, [pc, #168]	; 206c4 <__flatcc_fb_gen_c_verifier@@Base+0x498>
   20618:	add	r9, pc, r9
   2061c:	add	r8, pc, r8
   20620:	mov	r4, r6
   20624:	mov	r7, #64	; 0x40
   20628:	sub	r4, r4, #64	; 0x40
   2062c:	mov	r3, r9
   20630:	mov	r2, r7
   20634:	mov	r1, r8
   20638:	ldr	r0, [r5, #204]	; 0xcc
   2063c:	bl	13f7c <fprintf@plt>
   20640:	cmp	r4, #64	; 0x40
   20644:	bgt	20628 <__flatcc_fb_gen_c_verifier@@Base+0x3fc>
   20648:	sub	r3, r6, #65	; 0x41
   2064c:	bic	r3, r3, #63	; 0x3f
   20650:	sub	r6, r6, #64	; 0x40
   20654:	sub	r6, r6, r3
   20658:	ldr	r3, [pc, #104]	; 206c8 <__flatcc_fb_gen_c_verifier@@Base+0x49c>
   2065c:	ldr	r1, [pc, #104]	; 206cc <__flatcc_fb_gen_c_verifier@@Base+0x4a0>
   20660:	mov	r2, r6
   20664:	add	r3, pc, r3
   20668:	add	r1, pc, r1
   2066c:	ldr	r0, [r5, #204]	; 0xcc
   20670:	bl	13f7c <fprintf@plt>
   20674:	add	r3, sp, #48	; 0x30
   20678:	mov	r1, sl
   2067c:	mov	r2, r3
   20680:	ldr	r0, [r5, #204]	; 0xcc
   20684:	str	r3, [sp, #4]
   20688:	bl	13fd0 <vfprintf@plt>
   2068c:	ldr	r1, [r5, #204]	; 0xcc
   20690:	mov	r0, #10
   20694:	bl	13fdc <fputc@plt>
   20698:	add	sp, sp, #12
   2069c:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   206a0:	add	sp, sp, #12
   206a4:	bx	lr
   206a8:	mov	r0, r3
   206ac:	mov	r2, #64	; 0x40
   206b0:	mov	r1, #32
   206b4:	bl	13f94 <memset@plt>
   206b8:	b	205f8 <__flatcc_fb_gen_c_verifier@@Base+0x3cc>
   206bc:	andeq	r9, r4, r8, ror #21
   206c0:	andeq	r9, r4, r0, lsr #21
   206c4:	andeq	r7, r2, ip, lsl r8
   206c8:	andeq	r9, r4, r4, asr sl
   206cc:	ldrdeq	r7, [r2], -r0
   206d0:	ldr	r1, [pc, #4]	; 206dc <__flatcc_fb_gen_c_verifier@@Base+0x4b0>
   206d4:	add	r1, pc, r1
   206d8:	b	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   206dc:	andeq	r1, r3, r8, ror #21
   206e0:	b	206d0 <__flatcc_fb_gen_c_verifier@@Base+0x4a4>
   206e4:	ldr	r1, [pc, #4]	; 206f0 <__flatcc_fb_gen_c_verifier@@Base+0x4c4>
   206e8:	add	r1, pc, r1
   206ec:	b	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   206f0:	andeq	r1, r3, r8, ror #21
   206f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   206f8:	sub	r7, r3, r2
   206fc:	add	r7, r7, #1
   20700:	sub	sp, sp, #44	; 0x2c
   20704:	add	r7, r7, r7, lsr #31
   20708:	str	r2, [sp, #24]
   2070c:	add	r7, r2, r7, asr #1
   20710:	ldr	r2, [sp, #80]	; 0x50
   20714:	str	r3, [sp, #28]
   20718:	ldr	r3, [r1]
   2071c:	str	r1, [sp, #20]
   20720:	str	r2, [sp, #32]
   20724:	mov	r1, r2
   20728:	lsl	r2, r7, #4
   2072c:	str	r2, [sp, #36]	; 0x24
   20730:	add	r2, r3, r2
   20734:	mov	r6, r0
   20738:	ldr	r8, [r2, #4]
   2073c:	ldr	r2, [sp, #84]	; 0x54
   20740:	cmp	r1, r8
   20744:	str	r2, [sp, #16]
   20748:	bgt	208b0 <__flatcc_fb_gen_c_verifier@@Base+0x684>
   2074c:	sub	r8, r8, r1
   20750:	cmp	r8, #8
   20754:	movge	r8, #8
   20758:	ldr	r9, [r3, r7, lsl #4]
   2075c:	cmp	r8, #0
   20760:	add	r9, r9, r1
   20764:	beq	20a68 <__flatcc_fb_gen_c_verifier@@Base+0x83c>
   20768:	rsb	ip, r8, #8
   2076c:	add	r2, r9, r8
   20770:	lsl	ip, ip, #3
   20774:	mov	r3, ip
   20778:	mov	sl, #0
   2077c:	mov	fp, #0
   20780:	ldrb	r0, [r2, #-1]!
   20784:	sub	r1, r3, #32
   20788:	lsl	r5, r0, r1
   2078c:	rsb	r1, r3, #32
   20790:	lsl	r4, r0, r3
   20794:	orr	r5, r5, r0, lsr r1
   20798:	add	r3, r3, #8
   2079c:	cmp	r3, #64	; 0x40
   207a0:	orr	sl, sl, r4
   207a4:	orr	fp, fp, r5
   207a8:	bne	20780 <__flatcc_fb_gen_c_verifier@@Base+0x554>
   207ac:	cmp	r8, #8
   207b0:	bne	20a44 <__flatcc_fb_gen_c_verifier@@Base+0x818>
   207b4:	ldr	r1, [pc, #904]	; 20b44 <__flatcc_fb_gen_c_verifier@@Base+0x918>
   207b8:	mov	r3, fp
   207bc:	stm	sp, {r8, r9}
   207c0:	mov	r2, sl
   207c4:	add	r1, pc, r1
   207c8:	mov	r0, r6
   207cc:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   207d0:	ldr	r3, [r6, #220]	; 0xdc
   207d4:	add	r3, r3, #1
   207d8:	str	r3, [r6, #220]	; 0xdc
   207dc:	ldr	r3, [sp, #24]
   207e0:	cmp	r3, r7
   207e4:	bne	208fc <__flatcc_fb_gen_c_verifier@@Base+0x6d0>
   207e8:	ldr	r0, [sp, #20]
   207ec:	ldr	r3, [sp, #36]	; 0x24
   207f0:	ldr	r2, [r0]
   207f4:	ldr	r1, [r0, #12]
   207f8:	add	r2, r2, r3
   207fc:	ldr	r3, [r2, #12]
   20800:	ldr	r2, [r2, #8]
   20804:	str	r8, [sp]
   20808:	ldr	r4, [r0, #4]
   2080c:	mov	r0, r6
   20810:	blx	r4
   20814:	ldr	r3, [sp, #16]
   20818:	cmp	r3, #0
   2081c:	ble	20a90 <__flatcc_fb_gen_c_verifier@@Base+0x864>
   20820:	ldr	r1, [pc, #800]	; 20b48 <__flatcc_fb_gen_c_verifier@@Base+0x91c>
   20824:	mov	r2, r3
   20828:	add	r1, pc, r1
   2082c:	mov	r0, r6
   20830:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   20834:	ldr	r3, [r6, #220]	; 0xdc
   20838:	cmp	r3, #0
   2083c:	beq	20ae4 <__flatcc_fb_gen_c_verifier@@Base+0x8b8>
   20840:	ldr	r1, [pc, #772]	; 20b4c <__flatcc_fb_gen_c_verifier@@Base+0x920>
   20844:	sub	r3, r3, #1
   20848:	str	r3, [r6, #220]	; 0xdc
   2084c:	add	r1, pc, r1
   20850:	mov	r0, r6
   20854:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   20858:	ldr	r3, [r6, #220]	; 0xdc
   2085c:	cmp	r3, #0
   20860:	beq	20b24 <__flatcc_fb_gen_c_verifier@@Base+0x8f8>
   20864:	ldr	r1, [pc, #740]	; 20b50 <__flatcc_fb_gen_c_verifier@@Base+0x924>
   20868:	sub	r3, r3, #1
   2086c:	str	r3, [r6, #220]	; 0xdc
   20870:	mov	r2, r8
   20874:	mov	r3, r9
   20878:	add	r1, pc, r1
   2087c:	mov	r0, r6
   20880:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   20884:	ldr	r3, [r6, #220]	; 0xdc
   20888:	ldr	r2, [sp, #16]
   2088c:	add	r3, r3, #1
   20890:	cmp	r2, #0
   20894:	str	r3, [r6, #220]	; 0xdc
   20898:	ble	20a7c <__flatcc_fb_gen_c_verifier@@Base+0x850>
   2089c:	ldr	r1, [pc, #688]	; 20b54 <__flatcc_fb_gen_c_verifier@@Base+0x928>
   208a0:	mov	r0, r6
   208a4:	add	r1, pc, r1
   208a8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   208ac:	b	20988 <__flatcc_fb_gen_c_verifier@@Base+0x75c>
   208b0:	mov	r2, #0
   208b4:	mov	r3, #0
   208b8:	mov	r8, #0
   208bc:	mov	sl, r2
   208c0:	mov	fp, r3
   208c4:	mov	r9, r8
   208c8:	ldr	r1, [pc, #648]	; 20b58 <__flatcc_fb_gen_c_verifier@@Base+0x92c>
   208cc:	str	r9, [sp, #12]
   208d0:	str	r8, [sp, #8]
   208d4:	strd	sl, [sp]
   208d8:	add	r1, pc, r1
   208dc:	mov	r0, r6
   208e0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   208e4:	ldr	r3, [r6, #220]	; 0xdc
   208e8:	add	r3, r3, #1
   208ec:	str	r3, [r6, #220]	; 0xdc
   208f0:	ldr	r3, [sp, #24]
   208f4:	cmp	r3, r7
   208f8:	beq	207e8 <__flatcc_fb_gen_c_verifier@@Base+0x5bc>
   208fc:	ldr	r3, [sp, #28]
   20900:	cmp	r3, r7
   20904:	beq	209bc <__flatcc_fb_gen_c_verifier@@Base+0x790>
   20908:	ldr	r3, [sp, #16]
   2090c:	mov	r2, r7
   20910:	str	r3, [sp, #4]
   20914:	ldr	r3, [sp, #32]
   20918:	ldr	r1, [sp, #20]
   2091c:	str	r3, [sp]
   20920:	mov	r0, r6
   20924:	ldr	r3, [sp, #28]
   20928:	bl	206f4 <__flatcc_fb_gen_c_verifier@@Base+0x4c8>
   2092c:	ldr	r3, [r6, #220]	; 0xdc
   20930:	cmp	r3, #0
   20934:	beq	20aa4 <__flatcc_fb_gen_c_verifier@@Base+0x878>
   20938:	ldr	r1, [pc, #540]	; 20b5c <__flatcc_fb_gen_c_verifier@@Base+0x930>
   2093c:	sub	r3, r3, #1
   20940:	str	r3, [r6, #220]	; 0xdc
   20944:	mov	r2, r8
   20948:	mov	r3, r9
   2094c:	add	r1, pc, r1
   20950:	mov	r0, r6
   20954:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   20958:	ldr	r3, [sp, #16]
   2095c:	ldr	r0, [r6, #220]	; 0xdc
   20960:	str	r3, [sp, #4]
   20964:	ldr	r3, [sp, #32]
   20968:	add	r0, r0, #1
   2096c:	str	r3, [sp]
   20970:	ldr	r2, [sp, #24]
   20974:	str	r0, [r6, #220]	; 0xdc
   20978:	sub	r3, r7, #1
   2097c:	ldr	r1, [sp, #20]
   20980:	mov	r0, r6
   20984:	bl	206f4 <__flatcc_fb_gen_c_verifier@@Base+0x4c8>
   20988:	ldr	r3, [r6, #220]	; 0xdc
   2098c:	cmp	r3, #0
   20990:	beq	20ac4 <__flatcc_fb_gen_c_verifier@@Base+0x898>
   20994:	ldr	r1, [pc, #452]	; 20b60 <__flatcc_fb_gen_c_verifier@@Base+0x934>
   20998:	sub	r3, r3, #1
   2099c:	str	r3, [r6, #220]	; 0xdc
   209a0:	mov	r2, r8
   209a4:	mov	r3, r9
   209a8:	mov	r0, r6
   209ac:	add	r1, pc, r1
   209b0:	add	sp, sp, #44	; 0x2c
   209b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   209b8:	b	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   209bc:	ldr	r0, [sp, #20]
   209c0:	ldr	r3, [sp, #36]	; 0x24
   209c4:	ldr	r2, [r0]
   209c8:	ldr	r1, [r0, #12]
   209cc:	add	r2, r2, r3
   209d0:	ldr	r3, [r2, #12]
   209d4:	ldr	r2, [r2, #8]
   209d8:	str	r8, [sp]
   209dc:	ldr	r4, [r0, #4]
   209e0:	mov	r0, r6
   209e4:	blx	r4
   209e8:	ldr	r3, [sp, #16]
   209ec:	cmp	r3, #0
   209f0:	ble	20a30 <__flatcc_fb_gen_c_verifier@@Base+0x804>
   209f4:	ldr	r1, [pc, #360]	; 20b64 <__flatcc_fb_gen_c_verifier@@Base+0x938>
   209f8:	mov	r2, r3
   209fc:	add	r1, pc, r1
   20a00:	mov	r0, r6
   20a04:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   20a08:	ldr	r3, [r6, #220]	; 0xdc
   20a0c:	cmp	r3, #0
   20a10:	beq	20b04 <__flatcc_fb_gen_c_verifier@@Base+0x8d8>
   20a14:	ldr	r1, [pc, #332]	; 20b68 <__flatcc_fb_gen_c_verifier@@Base+0x93c>
   20a18:	sub	r3, r3, #1
   20a1c:	str	r3, [r6, #220]	; 0xdc
   20a20:	add	r1, pc, r1
   20a24:	mov	r0, r6
   20a28:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   20a2c:	b	2092c <__flatcc_fb_gen_c_verifier@@Base+0x700>
   20a30:	ldr	r3, [sp, #20]
   20a34:	mov	r0, r6
   20a38:	ldr	r3, [r3, #8]
   20a3c:	blx	r3
   20a40:	b	20a08 <__flatcc_fb_gen_c_verifier@@Base+0x7dc>
   20a44:	mov	r3, #1
   20a48:	sub	r2, ip, #32
   20a4c:	lsl	r0, r3, ip
   20a50:	lsl	r1, r3, r2
   20a54:	rsb	r2, ip, #32
   20a58:	orr	r1, r1, r3, lsr r2
   20a5c:	rsbs	r2, r0, #0
   20a60:	rsc	r3, r1, #0
   20a64:	b	208c8 <__flatcc_fb_gen_c_verifier@@Base+0x69c>
   20a68:	mov	r2, #0
   20a6c:	mov	r3, #0
   20a70:	mov	sl, r2
   20a74:	mov	fp, r3
   20a78:	b	208c8 <__flatcc_fb_gen_c_verifier@@Base+0x69c>
   20a7c:	ldr	r3, [sp, #20]
   20a80:	mov	r0, r6
   20a84:	ldr	r3, [r3, #8]
   20a88:	blx	r3
   20a8c:	b	20988 <__flatcc_fb_gen_c_verifier@@Base+0x75c>
   20a90:	ldr	r3, [sp, #20]
   20a94:	mov	r0, r6
   20a98:	ldr	r3, [r3, #8]
   20a9c:	blx	r3
   20aa0:	b	20834 <__flatcc_fb_gen_c_verifier@@Base+0x608>
   20aa4:	ldr	r3, [pc, #192]	; 20b6c <__flatcc_fb_gen_c_verifier@@Base+0x940>
   20aa8:	ldr	r1, [pc, #192]	; 20b70 <__flatcc_fb_gen_c_verifier@@Base+0x944>
   20aac:	ldr	r0, [pc, #192]	; 20b74 <__flatcc_fb_gen_c_verifier@@Base+0x948>
   20ab0:	add	r3, pc, r3
   20ab4:	ldr	r2, [pc, #188]	; 20b78 <__flatcc_fb_gen_c_verifier@@Base+0x94c>
   20ab8:	add	r1, pc, r1
   20abc:	add	r0, pc, r0
   20ac0:	bl	14030 <__assert_fail@plt>
   20ac4:	ldr	r3, [pc, #176]	; 20b7c <__flatcc_fb_gen_c_verifier@@Base+0x950>
   20ac8:	ldr	r1, [pc, #176]	; 20b80 <__flatcc_fb_gen_c_verifier@@Base+0x954>
   20acc:	ldr	r0, [pc, #176]	; 20b84 <__flatcc_fb_gen_c_verifier@@Base+0x958>
   20ad0:	add	r3, pc, r3
   20ad4:	ldr	r2, [pc, #172]	; 20b88 <__flatcc_fb_gen_c_verifier@@Base+0x95c>
   20ad8:	add	r1, pc, r1
   20adc:	add	r0, pc, r0
   20ae0:	bl	14030 <__assert_fail@plt>
   20ae4:	ldr	r3, [pc, #160]	; 20b8c <__flatcc_fb_gen_c_verifier@@Base+0x960>
   20ae8:	ldr	r1, [pc, #160]	; 20b90 <__flatcc_fb_gen_c_verifier@@Base+0x964>
   20aec:	ldr	r0, [pc, #160]	; 20b94 <__flatcc_fb_gen_c_verifier@@Base+0x968>
   20af0:	add	r3, pc, r3
   20af4:	mov	r2, #888	; 0x378
   20af8:	add	r1, pc, r1
   20afc:	add	r0, pc, r0
   20b00:	bl	14030 <__assert_fail@plt>
   20b04:	ldr	r3, [pc, #140]	; 20b98 <__flatcc_fb_gen_c_verifier@@Base+0x96c>
   20b08:	ldr	r1, [pc, #140]	; 20b9c <__flatcc_fb_gen_c_verifier@@Base+0x970>
   20b0c:	ldr	r0, [pc, #140]	; 20ba0 <__flatcc_fb_gen_c_verifier@@Base+0x974>
   20b10:	add	r3, pc, r3
   20b14:	ldr	r2, [pc, #136]	; 20ba4 <__flatcc_fb_gen_c_verifier@@Base+0x978>
   20b18:	add	r1, pc, r1
   20b1c:	add	r0, pc, r0
   20b20:	bl	14030 <__assert_fail@plt>
   20b24:	ldr	r3, [pc, #124]	; 20ba8 <__flatcc_fb_gen_c_verifier@@Base+0x97c>
   20b28:	ldr	r1, [pc, #124]	; 20bac <__flatcc_fb_gen_c_verifier@@Base+0x980>
   20b2c:	ldr	r0, [pc, #124]	; 20bb0 <__flatcc_fb_gen_c_verifier@@Base+0x984>
   20b30:	add	r3, pc, r3
   20b34:	ldr	r2, [pc, #120]	; 20bb4 <__flatcc_fb_gen_c_verifier@@Base+0x988>
   20b38:	add	r1, pc, r1
   20b3c:	add	r0, pc, r0
   20b40:	bl	14030 <__assert_fail@plt>
   20b44:	andeq	r1, r3, r8, asr #20
   20b48:	andeq	r1, r3, r0, lsr sl
   20b4c:	muleq	r3, r4, sl
   20b50:	andeq	r1, r3, ip, ror #20
   20b54:			; <UNDEFINED> instruction: 0x000319b4
   20b58:	andeq	r1, r3, r4, asr r9
   20b5c:	muleq	r3, r8, r9
   20b60:	andeq	r1, r3, r0, asr r9
   20b64:	andeq	r1, r3, ip, asr r8
   20b68:	andeq	r1, r3, r0, asr #17
   20b6c:	andeq	r1, r3, r8, ror #10
   20b70:			; <UNDEFINED> instruction: 0x000317b0
   20b74:	andeq	r1, r3, r8, lsl r8
   20b78:	andeq	r0, r0, fp, lsl #7
   20b7c:	andeq	r1, r3, r8, asr #10
   20b80:	muleq	r3, r0, r7
   20b84:	strdeq	r1, [r3], -r8
   20b88:	andeq	r0, r0, lr, lsl #7
   20b8c:	andeq	r1, r3, r8, lsr #10
   20b90:	andeq	r1, r3, r0, ror r7
   20b94:	ldrdeq	r1, [r3], -r8
   20b98:	andeq	r1, r3, r8, lsl #10
   20b9c:	andeq	r1, r3, r0, asr r7
   20ba0:			; <UNDEFINED> instruction: 0x000317b8
   20ba4:	andeq	r0, r0, r7, lsl #7
   20ba8:	andeq	r1, r3, r8, ror #9
   20bac:	andeq	r1, r3, r0, lsr r7
   20bb0:	muleq	r3, r8, r7
   20bb4:	andeq	r0, r0, r9, ror r3
   20bb8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20bbc:	sub	sp, sp, #132	; 0x84
   20bc0:	str	r1, [sp, #76]	; 0x4c
   20bc4:	ldr	r1, [r1]
   20bc8:	str	r2, [sp, #52]	; 0x34
   20bcc:	add	r2, r1, r2, lsl #4
   20bd0:	ldr	fp, [sp, #168]	; 0xa8
   20bd4:	str	r2, [sp, #92]	; 0x5c
   20bd8:	ldr	r2, [r2, #4]
   20bdc:	str	r1, [sp, #80]	; 0x50
   20be0:	add	r1, fp, #7
   20be4:	cmp	r1, r2
   20be8:	str	r1, [sp, #88]	; 0x58
   20bec:	str	r2, [sp, #84]	; 0x54
   20bf0:	str	r0, [sp, #72]	; 0x48
   20bf4:	str	r3, [sp, #68]	; 0x44
   20bf8:	bge	210d4 <__flatcc_fb_gen_c_verifier@@Base+0xea8>
   20bfc:	sub	r3, r2, fp
   20c00:	cmp	r3, #8
   20c04:	beq	210d4 <__flatcc_fb_gen_c_verifier@@Base+0xea8>
   20c08:	ldr	r2, [sp, #52]	; 0x34
   20c0c:	ldr	r3, [sp, #68]	; 0x44
   20c10:	sub	r3, r3, r2
   20c14:	add	r3, r3, r3, lsr #31
   20c18:	add	r3, r2, r3, asr #1
   20c1c:	cmp	r2, r3
   20c20:	str	r3, [sp, #64]	; 0x40
   20c24:	bge	20dec <__flatcc_fb_gen_c_verifier@@Base+0xbc0>
   20c28:	mov	r1, #0
   20c2c:	mov	r0, #0
   20c30:	ldr	r2, [sp, #80]	; 0x50
   20c34:	strd	r0, [sp, #24]
   20c38:	strd	r0, [sp, #32]
   20c3c:	mov	lr, fp
   20c40:	strd	r8, [sp, #96]	; 0x60
   20c44:	add	r1, r2, r3, lsl #4
   20c48:	mov	sl, #0
   20c4c:	mov	fp, #0
   20c50:	mov	r9, r3
   20c54:	strd	r4, [sp, #16]
   20c58:	ldr	r3, [r1, #-12]
   20c5c:	cmp	lr, r3
   20c60:	bgt	20d30 <__flatcc_fb_gen_c_verifier@@Base+0xb04>
   20c64:	sub	r3, r3, lr
   20c68:	cmp	r3, #8
   20c6c:	movge	r3, #8
   20c70:	cmp	r3, #0
   20c74:	beq	21298 <__flatcc_fb_gen_c_verifier@@Base+0x106c>
   20c78:	rsb	r2, r3, #8
   20c7c:	ldr	ip, [r1, #-16]
   20c80:	add	r3, r3, lr
   20c84:	str	r2, [sp, #24]
   20c88:	add	ip, ip, r3
   20c8c:	lsl	r0, r2, #3
   20c90:	mov	r3, #0
   20c94:	mov	r2, #0
   20c98:	strd	r6, [sp, #56]	; 0x38
   20c9c:	mov	r8, r2
   20ca0:	mov	r7, lr
   20ca4:	mov	lr, r9
   20ca8:	mov	r9, r3
   20cac:	ldrb	r2, [ip, #-1]!
   20cb0:	sub	r3, r0, #32
   20cb4:	lsl	r5, r2, r3
   20cb8:	rsb	r3, r0, #32
   20cbc:	lsl	r4, r2, r0
   20cc0:	orr	r5, r5, r2, lsr r3
   20cc4:	add	r0, r0, #8
   20cc8:	cmp	r0, #64	; 0x40
   20ccc:	orr	r8, r8, r4
   20cd0:	orr	r9, r9, r5
   20cd4:	bne	20cac <__flatcc_fb_gen_c_verifier@@Base+0xa80>
   20cd8:	strd	r8, [sp, #32]
   20cdc:	mov	r9, lr
   20ce0:	mov	lr, r7
   20ce4:	ldrd	r6, [sp, #56]	; 0x38
   20ce8:	strd	r4, [sp, #16]
   20cec:	ldr	r3, [sp, #24]
   20cf0:	mov	r0, #1
   20cf4:	mov	ip, #1
   20cf8:	lsl	r3, r3, #3
   20cfc:	sub	r2, r3, #32
   20d00:	lsl	r2, r0, r2
   20d04:	str	r2, [sp, #12]
   20d08:	ldr	r0, [sp, #12]
   20d0c:	rsb	r2, r3, #32
   20d10:	lsl	r3, ip, r3
   20d14:	orr	r2, r0, ip, lsr r2
   20d18:	str	r3, [sp, #8]
   20d1c:	str	r2, [sp, #12]
   20d20:	ldrd	r2, [sp, #8]
   20d24:	rsbs	r2, r2, #0
   20d28:	rsc	r3, r3, #0
   20d2c:	strd	r2, [sp, #24]
   20d30:	ldr	r3, [r1, #4]
   20d34:	ldr	ip, [r1]
   20d38:	cmp	lr, r3
   20d3c:	str	r3, [sp, #56]	; 0x38
   20d40:	mov	r8, ip
   20d44:	bgt	20da8 <__flatcc_fb_gen_c_verifier@@Base+0xb7c>
   20d48:	sub	r3, r3, lr
   20d4c:	cmp	r3, #8
   20d50:	movge	r3, #8
   20d54:	cmp	r3, #0
   20d58:	beq	2128c <__flatcc_fb_gen_c_verifier@@Base+0x1060>
   20d5c:	rsb	r2, r3, #8
   20d60:	ldrd	r4, [sp, #16]
   20d64:	add	r3, r3, lr
   20d68:	lsl	r0, r2, #3
   20d6c:	add	ip, ip, r3
   20d70:	mov	sl, #0
   20d74:	mov	fp, #0
   20d78:	ldrb	r2, [ip, #-1]!
   20d7c:	sub	r3, r0, #32
   20d80:	lsl	r7, r2, r3
   20d84:	rsb	r3, r0, #32
   20d88:	lsl	r6, r2, r0
   20d8c:	orr	r7, r7, r2, lsr r3
   20d90:	add	r0, r0, #8
   20d94:	cmp	r0, #64	; 0x40
   20d98:	orr	sl, sl, r6
   20d9c:	orr	fp, fp, r7
   20da0:	bne	20d78 <__flatcc_fb_gen_c_verifier@@Base+0xb4c>
   20da4:	strd	r4, [sp, #16]
   20da8:	ldrd	r2, [sp, #32]
   20dac:	ldrd	r4, [sp, #24]
   20db0:	eor	r2, r2, sl
   20db4:	eor	r3, r3, fp
   20db8:	and	r4, r4, r2
   20dbc:	and	r5, r5, r3
   20dc0:	mov	r2, r4
   20dc4:	mov	r3, r5
   20dc8:	orrs	r3, r2, r3
   20dcc:	bne	211a0 <__flatcc_fb_gen_c_verifier@@Base+0xf74>
   20dd0:	ldr	r3, [sp, #52]	; 0x34
   20dd4:	sub	r9, r9, #1
   20dd8:	cmp	r3, r9
   20ddc:	sub	r1, r1, #16
   20de0:	bne	20c58 <__flatcc_fb_gen_c_verifier@@Base+0xa2c>
   20de4:	ldrd	r8, [sp, #96]	; 0x60
   20de8:	mov	fp, lr
   20dec:	ldr	r3, [sp, #68]	; 0x44
   20df0:	ldr	r2, [sp, #64]	; 0x40
   20df4:	cmp	r3, r2
   20df8:	ble	20f84 <__flatcc_fb_gen_c_verifier@@Base+0xd58>
   20dfc:	ldr	r2, [sp, #64]	; 0x40
   20e00:	ldr	r3, [sp, #80]	; 0x50
   20e04:	mov	r0, #0
   20e08:	mov	r1, #0
   20e0c:	mov	r4, r0
   20e10:	mov	r5, r1
   20e14:	add	ip, r3, r2, lsl #4
   20e18:	strd	r0, [sp, #16]
   20e1c:	str	fp, [sp, #8]
   20e20:	ldr	lr, [ip, #4]
   20e24:	ldr	r6, [sp, #8]
   20e28:	cmp	r6, lr
   20e2c:	bgt	20ed4 <__flatcc_fb_gen_c_verifier@@Base+0xca8>
   20e30:	sub	lr, lr, r6
   20e34:	cmp	lr, #8
   20e38:	movge	lr, #8
   20e3c:	cmp	lr, #0
   20e40:	mov	r5, r6
   20e44:	beq	2141c <__flatcc_fb_gen_c_verifier@@Base+0x11f0>
   20e48:	rsb	r6, lr, #8
   20e4c:	ldr	r4, [ip]
   20e50:	add	lr, lr, r5
   20e54:	add	fp, r4, lr
   20e58:	mov	sl, r6
   20e5c:	lsl	lr, r6, #3
   20e60:	mov	r4, #0
   20e64:	mov	r5, #0
   20e68:	ldrb	r6, [fp, #-1]!
   20e6c:	sub	r7, lr, #32
   20e70:	lsl	r9, r6, r7
   20e74:	rsb	r7, lr, #32
   20e78:	lsl	r8, r6, lr
   20e7c:	orr	r9, r9, r6, lsr r7
   20e80:	add	lr, lr, #8
   20e84:	cmp	lr, #64	; 0x40
   20e88:	orr	r4, r4, r8
   20e8c:	orr	r5, r5, r9
   20e90:	bne	20e68 <__flatcc_fb_gen_c_verifier@@Base+0xc3c>
   20e94:	lsl	lr, sl, #3
   20e98:	sub	r6, lr, #32
   20e9c:	mov	r7, #1
   20ea0:	mov	sl, #1
   20ea4:	lsl	r6, r7, r6
   20ea8:	str	r6, [sp, #44]	; 0x2c
   20eac:	ldr	r7, [sp, #44]	; 0x2c
   20eb0:	rsb	r6, lr, #32
   20eb4:	lsl	lr, sl, lr
   20eb8:	orr	r6, r7, sl, lsr r6
   20ebc:	str	lr, [sp, #40]	; 0x28
   20ec0:	str	r6, [sp, #44]	; 0x2c
   20ec4:	ldrd	r6, [sp, #40]	; 0x28
   20ec8:	rsbs	r6, r6, #0
   20ecc:	rsc	r7, r7, #0
   20ed0:	strd	r6, [sp, #16]
   20ed4:	ldr	lr, [ip, #20]
   20ed8:	ldr	r6, [sp, #8]
   20edc:	cmp	r6, lr
   20ee0:	bgt	20f40 <__flatcc_fb_gen_c_verifier@@Base+0xd14>
   20ee4:	sub	r1, lr, r6
   20ee8:	cmp	r1, #8
   20eec:	movge	r1, #8
   20ef0:	cmp	r1, #0
   20ef4:	beq	21410 <__flatcc_fb_gen_c_verifier@@Base+0x11e4>
   20ef8:	ldr	r0, [ip, #16]
   20efc:	rsb	lr, r1, #8
   20f00:	add	r1, r1, r6
   20f04:	add	fp, r0, r1
   20f08:	lsl	lr, lr, #3
   20f0c:	mov	r0, #0
   20f10:	mov	r1, #0
   20f14:	ldrb	r6, [fp, #-1]!
   20f18:	sub	r7, lr, #32
   20f1c:	lsl	r3, r6, r7
   20f20:	rsb	r7, lr, #32
   20f24:	lsl	r2, r6, lr
   20f28:	orr	r3, r3, r6, lsr r7
   20f2c:	add	lr, lr, #8
   20f30:	cmp	lr, #64	; 0x40
   20f34:	orr	r0, r0, r2
   20f38:	orr	r1, r1, r3
   20f3c:	bne	20f14 <__flatcc_fb_gen_c_verifier@@Base+0xce8>
   20f40:	ldrd	sl, [sp, #16]
   20f44:	eor	r6, r4, r0
   20f48:	eor	r7, r5, r1
   20f4c:	and	sl, sl, r6
   20f50:	and	fp, fp, r7
   20f54:	mov	r6, sl
   20f58:	mov	r7, fp
   20f5c:	orrs	lr, r6, r7
   20f60:	bne	20f80 <__flatcc_fb_gen_c_verifier@@Base+0xd54>
   20f64:	ldr	lr, [sp, #64]	; 0x40
   20f68:	ldr	r6, [sp, #68]	; 0x44
   20f6c:	add	lr, lr, #1
   20f70:	cmp	r6, lr
   20f74:	str	lr, [sp, #64]	; 0x40
   20f78:	add	ip, ip, #16
   20f7c:	bne	20e20 <__flatcc_fb_gen_c_verifier@@Base+0xbf4>
   20f80:	ldr	fp, [sp, #8]
   20f84:	ldr	r3, [sp, #64]	; 0x40
   20f88:	ldr	r4, [sp, #52]	; 0x34
   20f8c:	add	r5, r3, #1
   20f90:	cmp	r4, r5
   20f94:	bge	215b8 <__flatcc_fb_gen_c_verifier@@Base+0x138c>
   20f98:	ldr	r3, [sp, #92]	; 0x5c
   20f9c:	ldr	r1, [sp, #88]	; 0x58
   20fa0:	ldr	r2, [sp, #84]	; 0x54
   20fa4:	b	20fac <__flatcc_fb_gen_c_verifier@@Base+0xd80>
   20fa8:	ldr	r2, [r3, #4]
   20fac:	cmp	r1, r2
   20fb0:	bge	20fc0 <__flatcc_fb_gen_c_verifier@@Base+0xd94>
   20fb4:	sub	r0, r2, fp
   20fb8:	cmp	r0, #8
   20fbc:	bgt	21310 <__flatcc_fb_gen_c_verifier@@Base+0x10e4>
   20fc0:	add	r4, r4, #1
   20fc4:	cmp	r4, r5
   20fc8:	add	r3, r3, #16
   20fcc:	bne	20fa8 <__flatcc_fb_gen_c_verifier@@Base+0xd7c>
   20fd0:	ldr	sl, [pc, #1804]	; 216e4 <__flatcc_fb_gen_c_verifier@@Base+0x14b8>
   20fd4:	mov	r8, r4
   20fd8:	add	sl, pc, sl
   20fdc:	mov	r6, #0
   20fe0:	ldr	r3, [sp, #52]	; 0x34
   20fe4:	ldr	r2, [sp, #68]	; 0x44
   20fe8:	cmp	r2, r5
   20fec:	cmpge	r4, r3
   20ff0:	movgt	r9, #1
   20ff4:	movle	r9, #0
   20ff8:	ble	2113c <__flatcc_fb_gen_c_verifier@@Base+0xf10>
   20ffc:	ldr	r3, [sp, #76]	; 0x4c
   21000:	ldr	r7, [r3, #24]
   21004:	add	r7, r7, #1
   21008:	str	r7, [r3, #24]
   2100c:	str	r7, [sp, #4]
   21010:	str	fp, [sp]
   21014:	sub	r3, r4, #1
   21018:	ldr	r2, [sp, #52]	; 0x34
   2101c:	ldr	r1, [sp, #76]	; 0x4c
   21020:	ldr	r0, [sp, #72]	; 0x48
   21024:	bl	206f4 <__flatcc_fb_gen_c_verifier@@Base+0x4c8>
   21028:	cmp	r9, #0
   2102c:	beq	21148 <__flatcc_fb_gen_c_verifier@@Base+0xf1c>
   21030:	ldr	r9, [sp, #72]	; 0x48
   21034:	ldr	r1, [pc, #1708]	; 216e8 <__flatcc_fb_gen_c_verifier@@Base+0x14bc>
   21038:	mov	r2, r7
   2103c:	add	r1, pc, r1
   21040:	mov	r0, r9
   21044:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21048:	ldr	r3, [r9, #220]	; 0xdc
   2104c:	ldr	r1, [pc, #1688]	; 216ec <__flatcc_fb_gen_c_verifier@@Base+0x14c0>
   21050:	mov	r4, #0
   21054:	str	r3, [r9, #228]	; 0xe4
   21058:	mov	r2, r7
   2105c:	add	r1, pc, r1
   21060:	mov	r0, r9
   21064:	str	r4, [r9, #220]	; 0xdc
   21068:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2106c:	ldr	r2, [r9, #228]	; 0xe4
   21070:	ldr	r3, [sp, #68]	; 0x44
   21074:	str	fp, [sp]
   21078:	ldr	r1, [sp, #76]	; 0x4c
   2107c:	mov	r0, r9
   21080:	str	r2, [r9, #220]	; 0xdc
   21084:	mov	r2, r5
   21088:	bl	20bb8 <__flatcc_fb_gen_c_verifier@@Base+0x98c>
   2108c:	ldr	r3, [r9, #220]	; 0xdc
   21090:	ldr	r1, [pc, #1624]	; 216f0 <__flatcc_fb_gen_c_verifier@@Base+0x14c4>
   21094:	mov	r2, r7
   21098:	mov	r0, r9
   2109c:	str	r3, [r9, #228]	; 0xe4
   210a0:	add	r1, pc, r1
   210a4:	str	r4, [r9, #220]	; 0xdc
   210a8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   210ac:	ldr	r3, [r9, #228]	; 0xe4
   210b0:	ldr	r1, [pc, #1596]	; 216f4 <__flatcc_fb_gen_c_verifier@@Base+0x14c8>
   210b4:	mov	r0, r9
   210b8:	add	r1, pc, r1
   210bc:	str	r3, [r9, #220]	; 0xdc
   210c0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   210c4:	cmp	r5, r8
   210c8:	bgt	21168 <__flatcc_fb_gen_c_verifier@@Base+0xf3c>
   210cc:	add	sp, sp, #132	; 0x84
   210d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   210d4:	ldr	r3, [sp, #52]	; 0x34
   210d8:	ldr	r2, [sp, #68]	; 0x44
   210dc:	cmp	r3, r2
   210e0:	beq	21114 <__flatcc_fb_gen_c_verifier@@Base+0xee8>
   210e4:	add	r3, r3, #1
   210e8:	cmp	r2, r3
   210ec:	bne	20c08 <__flatcc_fb_gen_c_verifier@@Base+0x9dc>
   210f0:	ldr	r3, [sp, #80]	; 0x50
   210f4:	add	r3, r3, r2, lsl #4
   210f8:	ldr	r2, [sp, #88]	; 0x58
   210fc:	ldr	r3, [r3, #4]
   21100:	cmp	r2, r3
   21104:	bge	21114 <__flatcc_fb_gen_c_verifier@@Base+0xee8>
   21108:	sub	r3, r3, fp
   2110c:	cmp	r3, #8
   21110:	bne	20c08 <__flatcc_fb_gen_c_verifier@@Base+0x9dc>
   21114:	mov	ip, #0
   21118:	str	fp, [sp]
   2111c:	ldr	r3, [sp, #68]	; 0x44
   21120:	ldr	r2, [sp, #52]	; 0x34
   21124:	ldr	r1, [sp, #76]	; 0x4c
   21128:	ldr	r0, [sp, #72]	; 0x48
   2112c:	str	ip, [sp, #4]
   21130:	bl	206f4 <__flatcc_fb_gen_c_verifier@@Base+0x4c8>
   21134:	add	sp, sp, #132	; 0x84
   21138:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2113c:	ldr	r3, [sp, #52]	; 0x34
   21140:	cmp	r4, r3
   21144:	bgt	21670 <__flatcc_fb_gen_c_verifier@@Base+0x1444>
   21148:	ldr	r3, [sp, #68]	; 0x44
   2114c:	cmp	r3, r5
   21150:	bge	21630 <__flatcc_fb_gen_c_verifier@@Base+0x1404>
   21154:	ldr	r3, [sp, #52]	; 0x34
   21158:	cmp	r4, r3
   2115c:	ble	215d4 <__flatcc_fb_gen_c_verifier@@Base+0x13a8>
   21160:	cmp	r5, r8
   21164:	ble	210cc <__flatcc_fb_gen_c_verifier@@Base+0xea0>
   21168:	ldr	r3, [sp, #72]	; 0x48
   2116c:	ldr	r3, [r3, #220]	; 0xdc
   21170:	cmp	r3, #0
   21174:	beq	2164c <__flatcc_fb_gen_c_verifier@@Base+0x1420>
   21178:	ldr	r0, [sp, #72]	; 0x48
   2117c:	ldr	r1, [pc, #1396]	; 216f8 <__flatcc_fb_gen_c_verifier@@Base+0x14cc>
   21180:	sub	r3, r3, #1
   21184:	str	r3, [r0, #220]	; 0xdc
   21188:	mov	r2, r6
   2118c:	mov	r3, sl
   21190:	add	r1, pc, r1
   21194:	add	sp, sp, #132	; 0x84
   21198:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2119c:	b	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   211a0:	ldr	r0, [sp, #56]	; 0x38
   211a4:	mov	ip, r8
   211a8:	cmp	lr, r0
   211ac:	mov	r8, r9
   211b0:	mov	fp, lr
   211b4:	ble	212b0 <__flatcc_fb_gen_c_verifier@@Base+0x1084>
   211b8:	mov	r5, #0
   211bc:	mov	r4, r5
   211c0:	mov	r2, #0
   211c4:	mov	r3, #0
   211c8:	ldr	r6, [sp, #72]	; 0x48
   211cc:	ldr	r1, [pc, #1320]	; 216fc <__flatcc_fb_gen_c_verifier@@Base+0x14d0>
   211d0:	mov	r0, r6
   211d4:	add	r1, pc, r1
   211d8:	stm	sp, {r4, r5}
   211dc:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   211e0:	ldr	r3, [r6, #220]	; 0xdc
   211e4:	ldr	r2, [sp, #52]	; 0x34
   211e8:	add	r3, r3, #1
   211ec:	str	fp, [sp]
   211f0:	ldr	r1, [sp, #76]	; 0x4c
   211f4:	str	r3, [r6, #220]	; 0xdc
   211f8:	mov	r0, r6
   211fc:	sub	r3, r8, #1
   21200:	bl	20bb8 <__flatcc_fb_gen_c_verifier@@Base+0x98c>
   21204:	ldr	r3, [r6, #220]	; 0xdc
   21208:	cmp	r3, #0
   2120c:	beq	216c0 <__flatcc_fb_gen_c_verifier@@Base+0x1494>
   21210:	ldr	r6, [sp, #72]	; 0x48
   21214:	ldr	r1, [pc, #1252]	; 21700 <__flatcc_fb_gen_c_verifier@@Base+0x14d4>
   21218:	sub	r3, r3, #1
   2121c:	str	r3, [r6, #220]	; 0xdc
   21220:	mov	r2, r4
   21224:	mov	r3, r5
   21228:	add	r1, pc, r1
   2122c:	mov	r0, r6
   21230:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21234:	ldr	r0, [r6, #220]	; 0xdc
   21238:	ldr	r3, [sp, #68]	; 0x44
   2123c:	add	r0, r0, #1
   21240:	str	fp, [sp]
   21244:	mov	r2, r8
   21248:	str	r0, [r6, #220]	; 0xdc
   2124c:	ldr	r1, [sp, #76]	; 0x4c
   21250:	mov	r0, r6
   21254:	bl	20bb8 <__flatcc_fb_gen_c_verifier@@Base+0x98c>
   21258:	ldr	r3, [r6, #220]	; 0xdc
   2125c:	cmp	r3, #0
   21260:	beq	2169c <__flatcc_fb_gen_c_verifier@@Base+0x1470>
   21264:	ldr	r0, [sp, #72]	; 0x48
   21268:	ldr	r1, [pc, #1172]	; 21704 <__flatcc_fb_gen_c_verifier@@Base+0x14d8>
   2126c:	sub	r3, r3, #1
   21270:	str	r3, [r0, #220]	; 0xdc
   21274:	mov	r2, r4
   21278:	mov	r3, r5
   2127c:	add	r1, pc, r1
   21280:	add	sp, sp, #132	; 0x84
   21284:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21288:	b	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2128c:	mov	sl, #0
   21290:	mov	fp, #0
   21294:	b	20da8 <__flatcc_fb_gen_c_verifier@@Base+0xb7c>
   21298:	mov	r3, #0
   2129c:	mov	r2, #0
   212a0:	strd	r2, [sp, #32]
   212a4:	mov	r3, #8
   212a8:	str	r3, [sp, #24]
   212ac:	b	20cec <__flatcc_fb_gen_c_verifier@@Base+0xac0>
   212b0:	sub	r0, r0, fp
   212b4:	cmp	r0, #8
   212b8:	movlt	r4, r0
   212bc:	movge	r4, #8
   212c0:	cmp	r4, #0
   212c4:	add	r5, ip, fp
   212c8:	beq	211c0 <__flatcc_fb_gen_c_verifier@@Base+0xf94>
   212cc:	rsb	ip, r4, #8
   212d0:	add	lr, r5, r4
   212d4:	lsl	ip, ip, #3
   212d8:	mov	r2, #0
   212dc:	mov	r3, #0
   212e0:	ldrb	r6, [lr, #-1]!
   212e4:	sub	r7, ip, #32
   212e8:	lsl	r1, r6, r7
   212ec:	rsb	r7, ip, #32
   212f0:	lsl	r0, r6, ip
   212f4:	orr	r1, r1, r6, lsr r7
   212f8:	add	ip, ip, #8
   212fc:	cmp	ip, #64	; 0x40
   21300:	orr	r2, r2, r0
   21304:	orr	r3, r3, r1
   21308:	bne	212e0 <__flatcc_fb_gen_c_verifier@@Base+0x10b4>
   2130c:	b	211c8 <__flatcc_fb_gen_c_verifier@@Base+0xf9c>
   21310:	ldr	r3, [sp, #52]	; 0x34
   21314:	lsl	r7, r4, #4
   21318:	cmp	r3, r4
   2131c:	ldr	r3, [sp, #80]	; 0x50
   21320:	str	r2, [sp, #84]	; 0x54
   21324:	add	r3, r3, r7
   21328:	blt	2142c <__flatcc_fb_gen_c_verifier@@Base+0x1200>
   2132c:	add	r8, fp, #8
   21330:	ldr	r3, [sp, #84]	; 0x54
   21334:	cmp	fp, r3
   21338:	ldr	r3, [sp, #80]	; 0x50
   2133c:	movle	r9, #0
   21340:	ldr	sl, [r3, r7]
   21344:	ble	21460 <__flatcc_fb_gen_c_verifier@@Base+0x1234>
   21348:	ldr	r7, [sp, #72]	; 0x48
   2134c:	ldr	r1, [pc, #948]	; 21708 <__flatcc_fb_gen_c_verifier@@Base+0x14dc>
   21350:	mov	r6, #0
   21354:	mov	r3, #0
   21358:	str	r6, [sp, #4]
   2135c:	str	r6, [sp]
   21360:	mov	r2, #0
   21364:	add	r1, pc, r1
   21368:	mov	r0, r7
   2136c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21370:	ldr	r3, [r7, #220]	; 0xdc
   21374:	mov	sl, r6
   21378:	add	r3, r3, #1
   2137c:	str	r3, [r7, #220]	; 0xdc
   21380:	ldr	r7, [sp, #72]	; 0x48
   21384:	ldr	r1, [pc, #896]	; 2170c <__flatcc_fb_gen_c_verifier@@Base+0x14e0>
   21388:	mov	r0, r7
   2138c:	add	r1, pc, r1
   21390:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21394:	ldr	r1, [pc, #884]	; 21710 <__flatcc_fb_gen_c_verifier@@Base+0x14e4>
   21398:	mov	r0, r7
   2139c:	add	r1, pc, r1
   213a0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   213a4:	mov	r0, r7
   213a8:	str	r8, [sp]
   213ac:	ldr	r3, [sp, #64]	; 0x40
   213b0:	mov	r2, r4
   213b4:	ldr	r1, [sp, #76]	; 0x4c
   213b8:	bl	20bb8 <__flatcc_fb_gen_c_verifier@@Base+0x98c>
   213bc:	mov	r7, r4
   213c0:	ldr	r3, [sp, #72]	; 0x48
   213c4:	ldr	r3, [r3, #220]	; 0xdc
   213c8:	cmp	r3, #0
   213cc:	beq	21678 <__flatcc_fb_gen_c_verifier@@Base+0x144c>
   213d0:	ldr	r8, [sp, #72]	; 0x48
   213d4:	ldr	r1, [pc, #824]	; 21714 <__flatcc_fb_gen_c_verifier@@Base+0x14e8>
   213d8:	sub	r3, r3, #1
   213dc:	str	r3, [r8, #220]	; 0xdc
   213e0:	mov	r2, r6
   213e4:	mov	r3, sl
   213e8:	mov	r0, r8
   213ec:	add	r1, pc, r1
   213f0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   213f4:	ldr	r3, [r8, #220]	; 0xdc
   213f8:	mov	r2, r8
   213fc:	add	r3, r3, #1
   21400:	mov	r8, r4
   21404:	str	r3, [r2, #220]	; 0xdc
   21408:	mov	r4, r7
   2140c:	b	20fe0 <__flatcc_fb_gen_c_verifier@@Base+0xdb4>
   21410:	mov	r0, #0
   21414:	mov	r1, #0
   21418:	b	20f40 <__flatcc_fb_gen_c_verifier@@Base+0xd14>
   2141c:	mov	r4, #0
   21420:	mov	r5, #0
   21424:	mov	sl, #8
   21428:	b	20e94 <__flatcc_fb_gen_c_verifier@@Base+0xc68>
   2142c:	ldr	r3, [r3, #-12]
   21430:	add	r8, fp, #8
   21434:	cmp	r3, r8
   21438:	bgt	21330 <__flatcc_fb_gen_c_verifier@@Base+0x1104>
   2143c:	sub	r3, r3, fp
   21440:	sub	r9, r3, #8
   21444:	ldr	r3, [sp, #84]	; 0x54
   21448:	clz	r9, r9
   2144c:	cmp	fp, r3
   21450:	ldr	r3, [sp, #80]	; 0x50
   21454:	lsr	r9, r9, #5
   21458:	ldr	sl, [r3, r7]
   2145c:	bgt	215e8 <__flatcc_fb_gen_c_verifier@@Base+0x13bc>
   21460:	add	sl, sl, fp
   21464:	str	r8, [sp, #8]
   21468:	add	lr, sl, #8
   2146c:	mov	r8, r5
   21470:	mov	ip, #0
   21474:	mov	r2, #0
   21478:	mov	r3, #0
   2147c:	mov	r5, r7
   21480:	ldrb	r6, [lr, #-1]!
   21484:	sub	r7, ip, #32
   21488:	lsl	r1, r6, r7
   2148c:	rsb	r7, ip, #32
   21490:	lsl	r0, r6, ip
   21494:	orr	r1, r1, r6, lsr r7
   21498:	add	ip, ip, #8
   2149c:	cmp	ip, #64	; 0x40
   214a0:	orr	r2, r2, r0
   214a4:	orr	r3, r3, r1
   214a8:	bne	21480 <__flatcc_fb_gen_c_verifier@@Base+0x1254>
   214ac:	mov	r7, r5
   214b0:	mov	r5, r8
   214b4:	ldr	r8, [sp, #8]
   214b8:	mov	r6, #8
   214bc:	ldr	r1, [pc, #596]	; 21718 <__flatcc_fb_gen_c_verifier@@Base+0x14ec>
   214c0:	stm	sp, {r6, sl}
   214c4:	add	r1, pc, r1
   214c8:	ldr	r0, [sp, #72]	; 0x48
   214cc:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   214d0:	ldr	r2, [sp, #72]	; 0x48
   214d4:	cmp	r9, #0
   214d8:	mov	r9, r2
   214dc:	ldr	r3, [r2, #220]	; 0xdc
   214e0:	add	r3, r3, #1
   214e4:	str	r3, [r2, #220]	; 0xdc
   214e8:	beq	21380 <__flatcc_fb_gen_c_verifier@@Base+0x1154>
   214ec:	ldr	r1, [pc, #552]	; 2171c <__flatcc_fb_gen_c_verifier@@Base+0x14f0>
   214f0:	mov	r3, sl
   214f4:	mov	r2, r6
   214f8:	add	r1, pc, r1
   214fc:	mov	r0, r9
   21500:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21504:	ldr	ip, [sp, #76]	; 0x4c
   21508:	sub	r7, r7, #16
   2150c:	mov	r0, #8
   21510:	ldr	r2, [ip]
   21514:	ldr	r1, [ip, #12]
   21518:	add	r2, r2, r7
   2151c:	ldr	r3, [r2, #12]
   21520:	ldr	r2, [r2, #8]
   21524:	str	r0, [sp]
   21528:	mov	r0, r9
   2152c:	ldr	r7, [ip, #4]
   21530:	blx	r7
   21534:	ldr	r1, [pc, #484]	; 21720 <__flatcc_fb_gen_c_verifier@@Base+0x14f4>
   21538:	mov	r3, sl
   2153c:	mov	r2, r6
   21540:	add	r1, pc, r1
   21544:	mov	r0, r9
   21548:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2154c:	ldr	r1, [pc, #464]	; 21724 <__flatcc_fb_gen_c_verifier@@Base+0x14f8>
   21550:	mov	r0, r9
   21554:	add	r1, pc, r1
   21558:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2155c:	ldr	r1, [pc, #452]	; 21728 <__flatcc_fb_gen_c_verifier@@Base+0x14fc>
   21560:	mov	r0, r9
   21564:	add	r1, pc, r1
   21568:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2156c:	ldr	r3, [sp, #64]	; 0x40
   21570:	str	r8, [sp]
   21574:	mov	r2, r4
   21578:	ldr	r1, [sp, #76]	; 0x4c
   2157c:	mov	r0, r9
   21580:	bl	20bb8 <__flatcc_fb_gen_c_verifier@@Base+0x98c>
   21584:	ldr	r3, [r9, #220]	; 0xdc
   21588:	cmp	r3, #0
   2158c:	beq	215fc <__flatcc_fb_gen_c_verifier@@Base+0x13d0>
   21590:	ldr	r0, [sp, #72]	; 0x48
   21594:	ldr	r1, [pc, #400]	; 2172c <__flatcc_fb_gen_c_verifier@@Base+0x1500>
   21598:	sub	r3, r3, #1
   2159c:	str	r3, [r0, #220]	; 0xdc
   215a0:	mov	r2, r6
   215a4:	mov	r3, sl
   215a8:	add	r1, pc, r1
   215ac:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   215b0:	sub	r7, r4, #1
   215b4:	b	213c0 <__flatcc_fb_gen_c_verifier@@Base+0x1194>
   215b8:	ldr	r3, [sp, #68]	; 0x44
   215bc:	cmp	r3, r5
   215c0:	bge	21620 <__flatcc_fb_gen_c_verifier@@Base+0x13f4>
   215c4:	ldr	sl, [pc, #356]	; 21730 <__flatcc_fb_gen_c_verifier@@Base+0x1504>
   215c8:	ldr	r8, [sp, #52]	; 0x34
   215cc:	mov	r6, #0
   215d0:	add	sl, pc, sl
   215d4:	ldr	r3, [sp, #76]	; 0x4c
   215d8:	ldr	r0, [sp, #72]	; 0x48
   215dc:	ldr	r3, [r3, #8]
   215e0:	blx	r3
   215e4:	b	21160 <__flatcc_fb_gen_c_verifier@@Base+0xf34>
   215e8:	mov	sl, #0
   215ec:	mov	r6, sl
   215f0:	mov	r2, #0
   215f4:	mov	r3, #0
   215f8:	b	214bc <__flatcc_fb_gen_c_verifier@@Base+0x1290>
   215fc:	ldr	r3, [pc, #304]	; 21734 <__flatcc_fb_gen_c_verifier@@Base+0x1508>
   21600:	ldr	r1, [pc, #304]	; 21738 <__flatcc_fb_gen_c_verifier@@Base+0x150c>
   21604:	ldr	r0, [pc, #304]	; 2173c <__flatcc_fb_gen_c_verifier@@Base+0x1510>
   21608:	add	r3, pc, r3
   2160c:	mov	r2, #1040	; 0x410
   21610:	add	r3, r3, #16
   21614:	add	r1, pc, r1
   21618:	add	r0, pc, r0
   2161c:	bl	14030 <__assert_fail@plt>
   21620:	ldr	sl, [pc, #280]	; 21740 <__flatcc_fb_gen_c_verifier@@Base+0x1514>
   21624:	ldr	r8, [sp, #52]	; 0x34
   21628:	add	sl, pc, sl
   2162c:	mov	r6, #0
   21630:	str	fp, [sp]
   21634:	ldr	r3, [sp, #68]	; 0x44
   21638:	ldr	r1, [sp, #76]	; 0x4c
   2163c:	mov	r2, r5
   21640:	ldr	r0, [sp, #72]	; 0x48
   21644:	bl	20bb8 <__flatcc_fb_gen_c_verifier@@Base+0x98c>
   21648:	b	21160 <__flatcc_fb_gen_c_verifier@@Base+0xf34>
   2164c:	ldr	r3, [pc, #240]	; 21744 <__flatcc_fb_gen_c_verifier@@Base+0x1518>
   21650:	ldr	r1, [pc, #240]	; 21748 <__flatcc_fb_gen_c_verifier@@Base+0x151c>
   21654:	ldr	r0, [pc, #240]	; 2174c <__flatcc_fb_gen_c_verifier@@Base+0x1520>
   21658:	add	r3, pc, r3
   2165c:	mov	r2, #1072	; 0x430
   21660:	add	r3, r3, #16
   21664:	add	r1, pc, r1
   21668:	add	r0, pc, r0
   2166c:	bl	14030 <__assert_fail@plt>
   21670:	mov	r7, r9
   21674:	b	2100c <__flatcc_fb_gen_c_verifier@@Base+0xde0>
   21678:	ldr	r3, [pc, #208]	; 21750 <__flatcc_fb_gen_c_verifier@@Base+0x1524>
   2167c:	ldr	r1, [pc, #208]	; 21754 <__flatcc_fb_gen_c_verifier@@Base+0x1528>
   21680:	ldr	r0, [pc, #208]	; 21758 <__flatcc_fb_gen_c_verifier@@Base+0x152c>
   21684:	add	r3, pc, r3
   21688:	ldr	r2, [pc, #204]	; 2175c <__flatcc_fb_gen_c_verifier@@Base+0x1530>
   2168c:	add	r3, r3, #16
   21690:	add	r1, pc, r1
   21694:	add	r0, pc, r0
   21698:	bl	14030 <__assert_fail@plt>
   2169c:	ldr	r3, [pc, #188]	; 21760 <__flatcc_fb_gen_c_verifier@@Base+0x1534>
   216a0:	ldr	r1, [pc, #188]	; 21764 <__flatcc_fb_gen_c_verifier@@Base+0x1538>
   216a4:	ldr	r0, [pc, #188]	; 21768 <__flatcc_fb_gen_c_verifier@@Base+0x153c>
   216a8:	add	r3, pc, r3
   216ac:	ldr	r2, [pc, #184]	; 2176c <__flatcc_fb_gen_c_verifier@@Base+0x1540>
   216b0:	add	r3, r3, #16
   216b4:	add	r1, pc, r1
   216b8:	add	r0, pc, r0
   216bc:	bl	14030 <__assert_fail@plt>
   216c0:	ldr	r3, [pc, #168]	; 21770 <__flatcc_fb_gen_c_verifier@@Base+0x1544>
   216c4:	ldr	r1, [pc, #168]	; 21774 <__flatcc_fb_gen_c_verifier@@Base+0x1548>
   216c8:	ldr	r0, [pc, #168]	; 21778 <__flatcc_fb_gen_c_verifier@@Base+0x154c>
   216cc:	add	r3, pc, r3
   216d0:	ldr	r2, [pc, #164]	; 2177c <__flatcc_fb_gen_c_verifier@@Base+0x1550>
   216d4:	add	r3, r3, #16
   216d8:	add	r1, pc, r1
   216dc:	add	r0, pc, r0
   216e0:	bl	14030 <__assert_fail@plt>
   216e4:	andeq	r8, r2, r0, lsl r7
   216e8:	andeq	r1, r3, r0, lsl r4
   216ec:	andeq	r1, r3, r4, lsl #8
   216f0:	andeq	r1, r3, ip, asr #7
   216f4:	andeq	r1, r3, r4, asr #7
   216f8:	strdeq	r1, [r3], -r8
   216fc:	andeq	r1, r3, r8, lsr r1
   21700:	andeq	r1, r3, ip, lsl #2
   21704:	ldrdeq	r1, [r3], -r8
   21708:	andeq	r1, r3, r8
   2170c:	andeq	r1, r3, r4, asr #32
   21710:	andeq	r1, r3, r0, asr #32
   21714:	andeq	r1, r3, r0, asr #32
   21718:	andeq	r0, r3, r8, lsr #29
   2171c:	muleq	r3, ip, lr
   21720:	andeq	r0, r3, r4, ror lr
   21724:	andeq	r0, r3, ip, ror lr
   21728:	andeq	r0, r3, r8, ror lr
   2172c:	andeq	r0, r3, r4, ror #28
   21730:	andeq	r8, r2, r8, lsl r1
   21734:	andeq	r0, r3, r0, lsl sl
   21738:	andeq	r0, r3, r4, asr ip
   2173c:			; <UNDEFINED> instruction: 0x00030cbc
   21740:	andeq	r8, r2, r0, asr #1
   21744:	andeq	r0, r3, r0, asr #19
   21748:	andeq	r0, r3, r4, lsl #24
   2174c:	andeq	r0, r3, ip, ror #24
   21750:	muleq	r3, r4, r9
   21754:	ldrdeq	r0, [r3], -r8
   21758:	andeq	r0, r3, r0, asr #24
   2175c:	andeq	r0, r0, r4, lsl r4
   21760:	andeq	r0, r3, r0, ror r9
   21764:			; <UNDEFINED> instruction: 0x00030bb4
   21768:	andeq	r0, r3, ip, lsl ip
   2176c:	andeq	r0, r0, pc, asr #7
   21770:	andeq	r0, r3, ip, asr #18
   21774:	muleq	r3, r0, fp
   21778:	strdeq	r0, [r3], -r8
   2177c:	andeq	r0, r0, sp, asr #7
   21780:	push	{r4, r5, lr}
   21784:	sub	sp, sp, #212	; 0xd4
   21788:	mov	r5, r0
   2178c:	add	r4, sp, #4
   21790:	mov	r0, r1
   21794:	mov	r1, r4
   21798:	bl	1537c <__flatcc_fb_copy_scope@@Base>
   2179c:	ldr	r2, [r5, #208]	; 0xd0
   217a0:	ldr	r1, [pc, #40]	; 217d0 <__flatcc_fb_gen_c_verifier@@Base+0x15a4>
   217a4:	mov	r3, r4
   217a8:	mov	r0, r5
   217ac:	ldr	r2, [r2, #160]	; 0xa0
   217b0:	add	r1, pc, r1
   217b4:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   217b8:	ldr	r1, [pc, #20]	; 217d4 <__flatcc_fb_gen_c_verifier@@Base+0x15a8>
   217bc:	mov	r0, r5
   217c0:	add	r1, pc, r1
   217c4:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   217c8:	add	sp, sp, #212	; 0xd4
   217cc:	pop	{r4, r5, pc}
   217d0:	strdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   217d4:	andeq	r0, r3, ip, asr #26
   217d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   217dc:	sub	sp, sp, #468	; 0x1d4
   217e0:	add	r5, sp, #24
   217e4:	mov	r4, r0
   217e8:	mov	r6, r1
   217ec:	mov	r2, #220	; 0xdc
   217f0:	mov	r1, #0
   217f4:	mov	r0, r5
   217f8:	add	r7, sp, #244	; 0xf4
   217fc:	bl	13f94 <memset@plt>
   21800:	mov	r2, #220	; 0xdc
   21804:	mov	r1, #0
   21808:	mov	r0, r7
   2180c:	bl	13f94 <memset@plt>
   21810:	mov	r2, r5
   21814:	mov	r1, r6
   21818:	ldr	r0, [r6, #12]
   2181c:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   21820:	ldr	r1, [pc, #1336]	; 21d60 <__flatcc_fb_gen_c_verifier@@Base+0x1b34>
   21824:	mov	r2, r5
   21828:	mov	r0, r4
   2182c:	add	r1, pc, r1
   21830:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21834:	ldr	r1, [pc, #1320]	; 21d64 <__flatcc_fb_gen_c_verifier@@Base+0x1b38>
   21838:	mov	r0, r4
   2183c:	add	r1, pc, r1
   21840:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21844:	ldr	r3, [r4, #220]	; 0xdc
   21848:	ldr	r1, [pc, #1304]	; 21d68 <__flatcc_fb_gen_c_verifier@@Base+0x1b3c>
   2184c:	add	r3, r3, #1
   21850:	str	r3, [r4, #220]	; 0xdc
   21854:	mov	r0, r4
   21858:	add	r1, pc, r1
   2185c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21860:	ldr	r1, [pc, #1284]	; 21d6c <__flatcc_fb_gen_c_verifier@@Base+0x1b40>
   21864:	mov	r0, r4
   21868:	add	r1, pc, r1
   2186c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21870:	ldr	r1, [pc, #1272]	; 21d70 <__flatcc_fb_gen_c_verifier@@Base+0x1b44>
   21874:	mov	r0, r4
   21878:	add	r1, pc, r1
   2187c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21880:	ldr	r1, [pc, #1260]	; 21d74 <__flatcc_fb_gen_c_verifier@@Base+0x1b48>
   21884:	mov	r0, r4
   21888:	add	r1, pc, r1
   2188c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21890:	ldr	r3, [r4, #220]	; 0xdc
   21894:	ldr	r1, [pc, #1244]	; 21d78 <__flatcc_fb_gen_c_verifier@@Base+0x1b4c>
   21898:	add	r3, r3, #1
   2189c:	str	r3, [r4, #220]	; 0xdc
   218a0:	mov	r0, r4
   218a4:	add	r1, pc, r1
   218a8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   218ac:	ldr	r3, [r4, #220]	; 0xdc
   218b0:	ldr	r8, [pc, #1220]	; 21d7c <__flatcc_fb_gen_c_verifier@@Base+0x1b50>
   218b4:	cmp	r3, #0
   218b8:	add	r8, pc, r8
   218bc:	beq	21c64 <__flatcc_fb_gen_c_verifier@@Base+0x1a38>
   218c0:	ldr	r5, [r6, #20]
   218c4:	sub	r3, r3, #1
   218c8:	cmp	r5, #0
   218cc:	str	r3, [r4, #220]	; 0xdc
   218d0:	beq	219e4 <__flatcc_fb_gen_c_verifier@@Base+0x17b8>
   218d4:	ldr	r3, [pc, #1188]	; 21d80 <__flatcc_fb_gen_c_verifier@@Base+0x1b54>
   218d8:	ldr	fp, [pc, #1188]	; 21d84 <__flatcc_fb_gen_c_verifier@@Base+0x1b58>
   218dc:	add	r3, pc, r3
   218e0:	str	r3, [sp, #8]
   218e4:	ldr	r3, [pc, #1180]	; 21d88 <__flatcc_fb_gen_c_verifier@@Base+0x1b5c>
   218e8:	ldr	sl, [pc, #1180]	; 21d8c <__flatcc_fb_gen_c_verifier@@Base+0x1b60>
   218ec:	add	r3, pc, r3
   218f0:	ldr	r9, [pc, #1176]	; 21d90 <__flatcc_fb_gen_c_verifier@@Base+0x1b64>
   218f4:	str	r3, [sp, #12]
   218f8:	ldr	r3, [pc, #1172]	; 21d94 <__flatcc_fb_gen_c_verifier@@Base+0x1b68>
   218fc:	add	fp, pc, fp
   21900:	add	sl, pc, sl
   21904:	add	r9, pc, r9
   21908:	add	r3, pc, r3
   2190c:	str	r3, [sp, #20]
   21910:	ldrh	r2, [r5, #24]
   21914:	ldr	r3, [r5, #4]
   21918:	cmp	r2, #10
   2191c:	ldr	r6, [r3]
   21920:	ldr	r3, [r3, #4]
   21924:	beq	2198c <__flatcc_fb_gen_c_verifier@@Base+0x1760>
   21928:	cmp	r2, #14
   2192c:	beq	21b5c <__flatcc_fb_gen_c_verifier@@Base+0x1930>
   21930:	cmp	r2, #0
   21934:	beq	219d8 <__flatcc_fb_gen_c_verifier@@Base+0x17ac>
   21938:	ldr	r2, [pc, #1112]	; 21d98 <__flatcc_fb_gen_c_verifier@@Base+0x1b6c>
   2193c:	ldr	r3, [pc, #1112]	; 21d9c <__flatcc_fb_gen_c_verifier@@Base+0x1b70>
   21940:	ldr	r4, [pc, #1112]	; 21da0 <__flatcc_fb_gen_c_verifier@@Base+0x1b74>
   21944:	ldr	r1, [r8, r2]
   21948:	add	r3, pc, r3
   2194c:	str	r3, [sp]
   21950:	ldr	r0, [r1]
   21954:	ldr	r1, [pc, #1096]	; 21da4 <__flatcc_fb_gen_c_verifier@@Base+0x1b78>
   21958:	add	r4, pc, r4
   2195c:	mov	r2, r4
   21960:	ldr	r3, [pc, #1088]	; 21da8 <__flatcc_fb_gen_c_verifier@@Base+0x1b7c>
   21964:	add	r1, pc, r1
   21968:	bl	13f7c <fprintf@plt>
   2196c:	ldr	r3, [pc, #1080]	; 21dac <__flatcc_fb_gen_c_verifier@@Base+0x1b80>
   21970:	ldr	r0, [pc, #1080]	; 21db0 <__flatcc_fb_gen_c_verifier@@Base+0x1b84>
   21974:	add	r3, pc, r3
   21978:	mov	r1, r4
   2197c:	add	r3, r3, #28
   21980:	ldr	r2, [pc, #1056]	; 21da8 <__flatcc_fb_gen_c_verifier@@Base+0x1b7c>
   21984:	add	r0, pc, r0
   21988:	bl	14030 <__assert_fail@plt>
   2198c:	ldr	r2, [r5, #48]	; 0x30
   21990:	mov	r1, fp
   21994:	mov	r0, r4
   21998:	str	r6, [sp]
   2199c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   219a0:	ldr	r3, [r4, #220]	; 0xdc
   219a4:	mov	r1, sl
   219a8:	add	r3, r3, #1
   219ac:	str	r3, [r4, #220]	; 0xdc
   219b0:	mov	r0, r4
   219b4:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   219b8:	mov	r1, r9
   219bc:	mov	r0, r4
   219c0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   219c4:	ldr	r3, [r4, #220]	; 0xdc
   219c8:	cmp	r3, #0
   219cc:	beq	21d3c <__flatcc_fb_gen_c_verifier@@Base+0x1b10>
   219d0:	sub	r3, r3, #1
   219d4:	str	r3, [r4, #220]	; 0xdc
   219d8:	ldr	r5, [r5]
   219dc:	cmp	r5, #0
   219e0:	bne	21910 <__flatcc_fb_gen_c_verifier@@Base+0x16e4>
   219e4:	ldr	r1, [pc, #968]	; 21db4 <__flatcc_fb_gen_c_verifier@@Base+0x1b88>
   219e8:	mov	r0, r4
   219ec:	add	r1, pc, r1
   219f0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   219f4:	ldr	r3, [r4, #220]	; 0xdc
   219f8:	ldr	r1, [pc, #952]	; 21db8 <__flatcc_fb_gen_c_verifier@@Base+0x1b8c>
   219fc:	add	r3, r3, #1
   21a00:	add	r1, pc, r1
   21a04:	str	r3, [r4, #220]	; 0xdc
   21a08:	mov	r0, r4
   21a0c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21a10:	ldr	r3, [r4, #220]	; 0xdc
   21a14:	ldr	r1, [pc, #928]	; 21dbc <__flatcc_fb_gen_c_verifier@@Base+0x1b90>
   21a18:	add	r3, r3, #1
   21a1c:	str	r3, [r4, #220]	; 0xdc
   21a20:	add	r1, pc, r1
   21a24:	mov	r0, r4
   21a28:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21a2c:	ldr	r3, [r4, #220]	; 0xdc
   21a30:	cmp	r3, #0
   21a34:	beq	21d18 <__flatcc_fb_gen_c_verifier@@Base+0x1aec>
   21a38:	ldr	r1, [pc, #896]	; 21dc0 <__flatcc_fb_gen_c_verifier@@Base+0x1b94>
   21a3c:	sub	r3, r3, #1
   21a40:	str	r3, [r4, #220]	; 0xdc
   21a44:	add	r1, pc, r1
   21a48:	mov	r0, r4
   21a4c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21a50:	ldr	r3, [r4, #220]	; 0xdc
   21a54:	ldr	r1, [pc, #872]	; 21dc4 <__flatcc_fb_gen_c_verifier@@Base+0x1b98>
   21a58:	add	r3, r3, #1
   21a5c:	str	r3, [r4, #220]	; 0xdc
   21a60:	add	r1, pc, r1
   21a64:	mov	r0, r4
   21a68:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21a6c:	ldr	r3, [r4, #220]	; 0xdc
   21a70:	cmp	r3, #0
   21a74:	beq	21cf4 <__flatcc_fb_gen_c_verifier@@Base+0x1ac8>
   21a78:	ldr	r5, [pc, #840]	; 21dc8 <__flatcc_fb_gen_c_verifier@@Base+0x1b9c>
   21a7c:	sub	r3, r3, #1
   21a80:	add	r5, pc, r5
   21a84:	str	r3, [r4, #220]	; 0xdc
   21a88:	mov	r1, r5
   21a8c:	mov	r0, r4
   21a90:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21a94:	ldr	r3, [r4, #220]	; 0xdc
   21a98:	cmp	r3, #0
   21a9c:	beq	21cd0 <__flatcc_fb_gen_c_verifier@@Base+0x1aa4>
   21aa0:	sub	r3, r3, #1
   21aa4:	str	r3, [r4, #220]	; 0xdc
   21aa8:	mov	r1, r5
   21aac:	mov	r0, r4
   21ab0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21ab4:	ldr	r1, [pc, #784]	; 21dcc <__flatcc_fb_gen_c_verifier@@Base+0x1ba0>
   21ab8:	mov	r0, r4
   21abc:	add	r1, pc, r1
   21ac0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21ac4:	ldr	r1, [pc, #772]	; 21dd0 <__flatcc_fb_gen_c_verifier@@Base+0x1ba4>
   21ac8:	mov	r0, r4
   21acc:	add	r1, pc, r1
   21ad0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21ad4:	ldr	r3, [r4, #220]	; 0xdc
   21ad8:	ldr	r1, [pc, #756]	; 21dd4 <__flatcc_fb_gen_c_verifier@@Base+0x1ba8>
   21adc:	add	r3, r3, #1
   21ae0:	str	r3, [r4, #220]	; 0xdc
   21ae4:	add	r1, pc, r1
   21ae8:	mov	r0, r4
   21aec:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21af0:	ldr	r3, [r4, #220]	; 0xdc
   21af4:	cmp	r3, #0
   21af8:	beq	21cac <__flatcc_fb_gen_c_verifier@@Base+0x1a80>
   21afc:	sub	r3, r3, #1
   21b00:	str	r3, [r4, #220]	; 0xdc
   21b04:	mov	r1, r5
   21b08:	mov	r0, r4
   21b0c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21b10:	ldr	r1, [pc, #704]	; 21dd8 <__flatcc_fb_gen_c_verifier@@Base+0x1bac>
   21b14:	mov	r0, r4
   21b18:	add	r1, pc, r1
   21b1c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21b20:	ldr	r3, [r4, #220]	; 0xdc
   21b24:	cmp	r3, #0
   21b28:	beq	21c88 <__flatcc_fb_gen_c_verifier@@Base+0x1a5c>
   21b2c:	sub	r3, r3, #1
   21b30:	str	r3, [r4, #220]	; 0xdc
   21b34:	mov	r1, r5
   21b38:	mov	r0, r4
   21b3c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21b40:	ldr	r1, [pc, #660]	; 21ddc <__flatcc_fb_gen_c_verifier@@Base+0x1bb0>
   21b44:	mov	r0, r4
   21b48:	add	r1, pc, r1
   21b4c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21b50:	mov	r0, #0
   21b54:	add	sp, sp, #468	; 0x1d4
   21b58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21b5c:	ldr	r1, [r5, #16]
   21b60:	mov	r2, r7
   21b64:	str	r3, [sp, #16]
   21b68:	ldr	r0, [r1, #12]
   21b6c:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   21b70:	ldr	r2, [r5, #48]	; 0x30
   21b74:	ldr	r3, [sp, #16]
   21b78:	str	r6, [sp]
   21b7c:	ldr	r1, [sp, #8]
   21b80:	mov	r0, r4
   21b84:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21b88:	ldr	r3, [r4, #220]	; 0xdc
   21b8c:	add	r3, r3, #1
   21b90:	str	r3, [r4, #220]	; 0xdc
   21b94:	ldr	r3, [r5, #16]
   21b98:	ldrh	r3, [r3, #8]
   21b9c:	cmp	r3, #0
   21ba0:	beq	21bfc <__flatcc_fb_gen_c_verifier@@Base+0x19d0>
   21ba4:	cmp	r3, #1
   21ba8:	bne	21c10 <__flatcc_fb_gen_c_verifier@@Base+0x19e4>
   21bac:	ldr	r1, [pc, #556]	; 21de0 <__flatcc_fb_gen_c_verifier@@Base+0x1bb4>
   21bb0:	mov	r2, r7
   21bb4:	add	r1, pc, r1
   21bb8:	mov	r0, r4
   21bbc:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21bc0:	ldr	r1, [sp, #12]
   21bc4:	mov	r0, r4
   21bc8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21bcc:	ldr	r3, [r4, #220]	; 0xdc
   21bd0:	cmp	r3, #0
   21bd4:	bne	219d0 <__flatcc_fb_gen_c_verifier@@Base+0x17a4>
   21bd8:	ldr	r3, [pc, #516]	; 21de4 <__flatcc_fb_gen_c_verifier@@Base+0x1bb8>
   21bdc:	ldr	r1, [pc, #516]	; 21de8 <__flatcc_fb_gen_c_verifier@@Base+0x1bbc>
   21be0:	ldr	r0, [pc, #516]	; 21dec <__flatcc_fb_gen_c_verifier@@Base+0x1bc0>
   21be4:	add	r3, pc, r3
   21be8:	ldr	r2, [pc, #512]	; 21df0 <__flatcc_fb_gen_c_verifier@@Base+0x1bc4>
   21bec:	add	r3, r3, #28
   21bf0:	add	r1, pc, r1
   21bf4:	add	r0, pc, r0
   21bf8:	bl	14030 <__assert_fail@plt>
   21bfc:	mov	r2, r7
   21c00:	ldr	r1, [sp, #20]
   21c04:	mov	r0, r4
   21c08:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21c0c:	b	21bc0 <__flatcc_fb_gen_c_verifier@@Base+0x1994>
   21c10:	ldr	r2, [pc, #384]	; 21d98 <__flatcc_fb_gen_c_verifier@@Base+0x1b6c>
   21c14:	ldr	r3, [pc, #472]	; 21df4 <__flatcc_fb_gen_c_verifier@@Base+0x1bc8>
   21c18:	ldr	r4, [pc, #472]	; 21df8 <__flatcc_fb_gen_c_verifier@@Base+0x1bcc>
   21c1c:	ldr	r1, [r8, r2]
   21c20:	add	r3, pc, r3
   21c24:	str	r3, [sp]
   21c28:	ldr	r0, [r1]
   21c2c:	ldr	r1, [pc, #456]	; 21dfc <__flatcc_fb_gen_c_verifier@@Base+0x1bd0>
   21c30:	add	r4, pc, r4
   21c34:	mov	r2, r4
   21c38:	ldr	r3, [pc, #448]	; 21e00 <__flatcc_fb_gen_c_verifier@@Base+0x1bd4>
   21c3c:	add	r1, pc, r1
   21c40:	bl	13f7c <fprintf@plt>
   21c44:	ldr	r3, [pc, #440]	; 21e04 <__flatcc_fb_gen_c_verifier@@Base+0x1bd8>
   21c48:	ldr	r0, [pc, #440]	; 21e08 <__flatcc_fb_gen_c_verifier@@Base+0x1bdc>
   21c4c:	add	r3, pc, r3
   21c50:	mov	r1, r4
   21c54:	add	r3, r3, #28
   21c58:	ldr	r2, [pc, #416]	; 21e00 <__flatcc_fb_gen_c_verifier@@Base+0x1bd4>
   21c5c:	add	r0, pc, r0
   21c60:	bl	14030 <__assert_fail@plt>
   21c64:	ldr	r3, [pc, #416]	; 21e0c <__flatcc_fb_gen_c_verifier@@Base+0x1be0>
   21c68:	ldr	r1, [pc, #416]	; 21e10 <__flatcc_fb_gen_c_verifier@@Base+0x1be4>
   21c6c:	ldr	r0, [pc, #416]	; 21e14 <__flatcc_fb_gen_c_verifier@@Base+0x1be8>
   21c70:	add	r3, pc, r3
   21c74:	ldr	r2, [pc, #412]	; 21e18 <__flatcc_fb_gen_c_verifier@@Base+0x1bec>
   21c78:	add	r3, r3, #28
   21c7c:	add	r1, pc, r1
   21c80:	add	r0, pc, r0
   21c84:	bl	14030 <__assert_fail@plt>
   21c88:	ldr	r3, [pc, #396]	; 21e1c <__flatcc_fb_gen_c_verifier@@Base+0x1bf0>
   21c8c:	ldr	r1, [pc, #396]	; 21e20 <__flatcc_fb_gen_c_verifier@@Base+0x1bf4>
   21c90:	ldr	r0, [pc, #396]	; 21e24 <__flatcc_fb_gen_c_verifier@@Base+0x1bf8>
   21c94:	add	r3, pc, r3
   21c98:	mov	r2, #1552	; 0x610
   21c9c:	add	r3, r3, #28
   21ca0:	add	r1, pc, r1
   21ca4:	add	r0, pc, r0
   21ca8:	bl	14030 <__assert_fail@plt>
   21cac:	ldr	r3, [pc, #372]	; 21e28 <__flatcc_fb_gen_c_verifier@@Base+0x1bfc>
   21cb0:	ldr	r1, [pc, #372]	; 21e2c <__flatcc_fb_gen_c_verifier@@Base+0x1c00>
   21cb4:	ldr	r0, [pc, #372]	; 21e30 <__flatcc_fb_gen_c_verifier@@Base+0x1c04>
   21cb8:	add	r3, pc, r3
   21cbc:	ldr	r2, [pc, #368]	; 21e34 <__flatcc_fb_gen_c_verifier@@Base+0x1c08>
   21cc0:	add	r3, r3, #28
   21cc4:	add	r1, pc, r1
   21cc8:	add	r0, pc, r0
   21ccc:	bl	14030 <__assert_fail@plt>
   21cd0:	ldr	r3, [pc, #352]	; 21e38 <__flatcc_fb_gen_c_verifier@@Base+0x1c0c>
   21cd4:	ldr	r1, [pc, #352]	; 21e3c <__flatcc_fb_gen_c_verifier@@Base+0x1c10>
   21cd8:	ldr	r0, [pc, #352]	; 21e40 <__flatcc_fb_gen_c_verifier@@Base+0x1c14>
   21cdc:	add	r3, pc, r3
   21ce0:	ldr	r2, [pc, #348]	; 21e44 <__flatcc_fb_gen_c_verifier@@Base+0x1c18>
   21ce4:	add	r3, r3, #28
   21ce8:	add	r1, pc, r1
   21cec:	add	r0, pc, r0
   21cf0:	bl	14030 <__assert_fail@plt>
   21cf4:	ldr	r3, [pc, #332]	; 21e48 <__flatcc_fb_gen_c_verifier@@Base+0x1c1c>
   21cf8:	ldr	r1, [pc, #332]	; 21e4c <__flatcc_fb_gen_c_verifier@@Base+0x1c20>
   21cfc:	ldr	r0, [pc, #332]	; 21e50 <__flatcc_fb_gen_c_verifier@@Base+0x1c24>
   21d00:	add	r3, pc, r3
   21d04:	ldr	r2, [pc, #328]	; 21e54 <__flatcc_fb_gen_c_verifier@@Base+0x1c28>
   21d08:	add	r3, r3, #28
   21d0c:	add	r1, pc, r1
   21d10:	add	r0, pc, r0
   21d14:	bl	14030 <__assert_fail@plt>
   21d18:	ldr	r3, [pc, #312]	; 21e58 <__flatcc_fb_gen_c_verifier@@Base+0x1c2c>
   21d1c:	ldr	r1, [pc, #312]	; 21e5c <__flatcc_fb_gen_c_verifier@@Base+0x1c30>
   21d20:	ldr	r0, [pc, #312]	; 21e60 <__flatcc_fb_gen_c_verifier@@Base+0x1c34>
   21d24:	add	r3, pc, r3
   21d28:	ldr	r2, [pc, #308]	; 21e64 <__flatcc_fb_gen_c_verifier@@Base+0x1c38>
   21d2c:	add	r3, r3, #28
   21d30:	add	r1, pc, r1
   21d34:	add	r0, pc, r0
   21d38:	bl	14030 <__assert_fail@plt>
   21d3c:	ldr	r3, [pc, #292]	; 21e68 <__flatcc_fb_gen_c_verifier@@Base+0x1c3c>
   21d40:	ldr	r1, [pc, #292]	; 21e6c <__flatcc_fb_gen_c_verifier@@Base+0x1c40>
   21d44:	ldr	r0, [pc, #292]	; 21e70 <__flatcc_fb_gen_c_verifier@@Base+0x1c44>
   21d48:	add	r3, pc, r3
   21d4c:	ldr	r2, [pc, #288]	; 21e74 <__flatcc_fb_gen_c_verifier@@Base+0x1c48>
   21d50:	add	r3, r3, #28
   21d54:	add	r1, pc, r1
   21d58:	add	r0, pc, r0
   21d5c:	bl	14030 <__assert_fail@plt>
   21d60:	andeq	r0, r3, r4, lsl sp
   21d64:	muleq	r3, r8, r6
   21d68:	muleq	r2, r0, lr
   21d6c:	andeq	r0, r3, r8, ror #26
   21d70:	andeq	r0, r3, r8, ror #26
   21d74:	andeq	r0, r3, r8, ror #26
   21d78:	andeq	r0, r3, r0, ror #26
   21d7c:	andeq	r8, r4, r0, asr #14
   21d80:	strdeq	r0, [r3], -ip
   21d84:	ldrdeq	r0, [r3], -ip
   21d88:	andeq	r0, r3, r0, lsr #29
   21d8c:	muleq	r3, r4, lr
   21d90:	andeq	r0, r3, r8, lsl #29
   21d94:	andeq	r0, r3, r4, ror #27
   21d98:	muleq	r0, ip, r0
   21d9c:	andeq	r0, r3, ip, lsl #29
   21da0:	andeq	r0, r3, r0, lsl r9
   21da4:	andeq	lr, r1, r0, lsl #2
   21da8:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   21dac:	andeq	r0, r3, r4, lsr #13
   21db0:	andeq	r6, r2, r0, ror #9
   21db4:	andeq	r0, r3, r8, asr #24
   21db8:	andeq	r0, r3, r0, asr #24
   21dbc:	andeq	r0, r3, ip, asr ip
   21dc0:	andeq	r0, r3, r0, asr #27
   21dc4:			; <UNDEFINED> instruction: 0x00030db0
   21dc8:	andeq	r0, r3, r0, ror #16
   21dcc:	andeq	r0, r3, ip, lsl #27
   21dd0:	muleq	r3, r8, sp
   21dd4:	muleq	r3, r0, sp
   21dd8:	andeq	r0, r3, r0, asr #26
   21ddc:	andeq	r7, r2, r0, lsr #23
   21de0:	andeq	r0, r3, ip, ror #22
   21de4:	andeq	r0, r3, r4, lsr r4
   21de8:	andeq	r0, r3, r8, ror r6
   21dec:	andeq	r0, r3, r0, ror #13
   21df0:	strdeq	r0, [r0], -r6
   21df4:	andeq	r0, r3, r4, lsr fp
   21df8:	andeq	r0, r3, r8, lsr r6
   21dfc:	andeq	sp, r1, r8, lsr #28
   21e00:	strdeq	r0, [r0], -r2
   21e04:	andeq	r0, r3, ip, asr #7
   21e08:	andeq	r6, r2, r8, lsl #4
   21e0c:	andeq	r0, r3, r8, lsr #7
   21e10:	andeq	r0, r3, ip, ror #11
   21e14:	andeq	r0, r3, r4, asr r6
   21e18:	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   21e1c:	andeq	r0, r3, r4, lsl #7
   21e20:	andeq	r0, r3, r8, asr #11
   21e24:	andeq	r0, r3, r0, lsr r6
   21e28:	andeq	r0, r3, r0, ror #6
   21e2c:	andeq	r0, r3, r4, lsr #11
   21e30:	andeq	r0, r3, ip, lsl #12
   21e34:	andeq	r0, r0, lr, lsl #12
   21e38:	andeq	r0, r3, ip, lsr r3
   21e3c:	andeq	r0, r3, r0, lsl #11
   21e40:	andeq	r0, r3, r8, ror #11
   21e44:	andeq	r0, r0, sl, lsl #12
   21e48:	andeq	r0, r3, r8, lsl r3
   21e4c:	andeq	r0, r3, ip, asr r5
   21e50:	andeq	r0, r3, r4, asr #11
   21e54:	andeq	r0, r0, r9, lsl #12
   21e58:	strdeq	r0, [r3], -r4
   21e5c:	andeq	r0, r3, r8, lsr r5
   21e60:	andeq	r0, r3, r0, lsr #11
   21e64:	andeq	r0, r0, r7, lsl #12
   21e68:	ldrdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   21e6c:	andeq	r0, r3, r4, lsl r5
   21e70:	andeq	r0, r3, ip, ror r5
   21e74:	strdeq	r0, [r0], -ip
   21e78:	push	{r4, r5, r6, r7, lr}
   21e7c:	sub	sp, sp, #452	; 0x1c4
   21e80:	add	r4, sp, #8
   21e84:	mov	r5, r0
   21e88:	mov	r6, r1
   21e8c:	mov	r0, r4
   21e90:	mov	r2, #220	; 0xdc
   21e94:	mov	r1, #0
   21e98:	bl	13f94 <memset@plt>
   21e9c:	mov	r2, #220	; 0xdc
   21ea0:	mov	r1, #0
   21ea4:	add	r0, sp, #228	; 0xe4
   21ea8:	bl	13f94 <memset@plt>
   21eac:	mov	r2, r4
   21eb0:	mov	r1, r6
   21eb4:	ldr	r0, [r6, #12]
   21eb8:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   21ebc:	ldr	r1, [pc, #356]	; 22028 <__flatcc_fb_gen_c_verifier@@Base+0x1dfc>
   21ec0:	mov	r2, r4
   21ec4:	mov	r0, r5
   21ec8:	add	r1, pc, r1
   21ecc:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21ed0:	ldr	r1, [pc, #340]	; 2202c <__flatcc_fb_gen_c_verifier@@Base+0x1e00>
   21ed4:	mov	r0, r5
   21ed8:	add	r1, pc, r1
   21edc:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21ee0:	ldr	r3, [r5, #220]	; 0xdc
   21ee4:	ldr	r1, [pc, #324]	; 22030 <__flatcc_fb_gen_c_verifier@@Base+0x1e04>
   21ee8:	add	r3, r3, #1
   21eec:	mov	r0, r5
   21ef0:	str	r3, [r5, #220]	; 0xdc
   21ef4:	add	r1, pc, r1
   21ef8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21efc:	ldr	r4, [r6, #20]
   21f00:	ldr	r7, [pc, #300]	; 22034 <__flatcc_fb_gen_c_verifier@@Base+0x1e08>
   21f04:	ldr	r6, [pc, #300]	; 22038 <__flatcc_fb_gen_c_verifier@@Base+0x1e0c>
   21f08:	cmp	r4, #0
   21f0c:	add	r7, pc, r7
   21f10:	add	r6, pc, r6
   21f14:	bne	21f34 <__flatcc_fb_gen_c_verifier@@Base+0x1d08>
   21f18:	b	21f68 <__flatcc_fb_gen_c_verifier@@Base+0x1d3c>
   21f1c:	mov	r1, r6
   21f20:	mov	r0, r5
   21f24:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21f28:	ldr	r4, [r4]
   21f2c:	cmp	r4, #0
   21f30:	beq	21f68 <__flatcc_fb_gen_c_verifier@@Base+0x1d3c>
   21f34:	ldrh	r3, [r4, #24]
   21f38:	cmp	r3, #0
   21f3c:	beq	21f1c <__flatcc_fb_gen_c_verifier@@Base+0x1cf0>
   21f40:	ldr	r0, [r4, #4]
   21f44:	ldr	r2, [r4, #48]	; 0x30
   21f48:	mov	r1, r7
   21f4c:	ldm	r0, {r0, r3}
   21f50:	str	r0, [sp]
   21f54:	mov	r0, r5
   21f58:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21f5c:	ldr	r4, [r4]
   21f60:	cmp	r4, #0
   21f64:	bne	21f34 <__flatcc_fb_gen_c_verifier@@Base+0x1d08>
   21f68:	ldr	r1, [pc, #204]	; 2203c <__flatcc_fb_gen_c_verifier@@Base+0x1e10>
   21f6c:	mov	r0, r5
   21f70:	add	r1, pc, r1
   21f74:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21f78:	ldr	r3, [r5, #220]	; 0xdc
   21f7c:	add	r2, r3, #1
   21f80:	cmp	r2, #0
   21f84:	str	r2, [r5, #220]	; 0xdc
   21f88:	beq	21fe0 <__flatcc_fb_gen_c_verifier@@Base+0x1db4>
   21f8c:	ldr	r4, [pc, #172]	; 22040 <__flatcc_fb_gen_c_verifier@@Base+0x1e14>
   21f90:	str	r3, [r5, #220]	; 0xdc
   21f94:	add	r4, pc, r4
   21f98:	mov	r1, r4
   21f9c:	mov	r0, r5
   21fa0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21fa4:	ldr	r3, [r5, #220]	; 0xdc
   21fa8:	cmp	r3, #0
   21fac:	beq	22004 <__flatcc_fb_gen_c_verifier@@Base+0x1dd8>
   21fb0:	sub	r3, r3, #1
   21fb4:	str	r3, [r5, #220]	; 0xdc
   21fb8:	mov	r1, r4
   21fbc:	mov	r0, r5
   21fc0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21fc4:	ldr	r1, [pc, #120]	; 22044 <__flatcc_fb_gen_c_verifier@@Base+0x1e18>
   21fc8:	mov	r0, r5
   21fcc:	add	r1, pc, r1
   21fd0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   21fd4:	mov	r0, #0
   21fd8:	add	sp, sp, #452	; 0x1c4
   21fdc:	pop	{r4, r5, r6, r7, pc}
   21fe0:	ldr	r3, [pc, #96]	; 22048 <__flatcc_fb_gen_c_verifier@@Base+0x1e1c>
   21fe4:	ldr	r1, [pc, #96]	; 2204c <__flatcc_fb_gen_c_verifier@@Base+0x1e20>
   21fe8:	ldr	r0, [pc, #96]	; 22050 <__flatcc_fb_gen_c_verifier@@Base+0x1e24>
   21fec:	add	r3, pc, r3
   21ff0:	ldr	r2, [pc, #92]	; 22054 <__flatcc_fb_gen_c_verifier@@Base+0x1e28>
   21ff4:	add	r3, r3, #48	; 0x30
   21ff8:	add	r1, pc, r1
   21ffc:	add	r0, pc, r0
   22000:	bl	14030 <__assert_fail@plt>
   22004:	ldr	r3, [pc, #76]	; 22058 <__flatcc_fb_gen_c_verifier@@Base+0x1e2c>
   22008:	ldr	r1, [pc, #76]	; 2205c <__flatcc_fb_gen_c_verifier@@Base+0x1e30>
   2200c:	ldr	r0, [pc, #76]	; 22060 <__flatcc_fb_gen_c_verifier@@Base+0x1e34>
   22010:	add	r3, pc, r3
   22014:	ldr	r2, [pc, #72]	; 22064 <__flatcc_fb_gen_c_verifier@@Base+0x1e38>
   22018:	add	r3, r3, #48	; 0x30
   2201c:	add	r1, pc, r1
   22020:	add	r0, pc, r0
   22024:	bl	14030 <__assert_fail@plt>
   22028:	andeq	r0, r3, r4, lsl #20
   2202c:	strdeq	r2, [r3], -ip
   22030:	andeq	r0, r3, ip, ror #13
   22034:	andeq	r0, r3, r8, lsr #20
   22038:	andeq	r0, r3, r4, lsl #20
   2203c:	muleq	r3, r0, r9
   22040:	andeq	r0, r3, ip, asr #6
   22044:	andeq	r7, r2, ip, lsl r7
   22048:	andeq	r0, r3, ip, lsr #32
   2204c:	andeq	r0, r3, r0, ror r2
   22050:	ldrdeq	r0, [r3], -r8
   22054:	andeq	r0, r0, lr, lsr #12
   22058:	andeq	r0, r3, r8
   2205c:	andeq	r0, r3, ip, asr #4
   22060:			; <UNDEFINED> instruction: 0x000302b4
   22064:	andeq	r0, r0, pc, lsr #12
   22068:	add	r3, r1, #4
   2206c:	ldr	r1, [pc, #12]	; 22080 <__flatcc_fb_gen_c_verifier@@Base+0x1e54>
   22070:	mov	r2, r0
   22074:	add	r1, pc, r1
   22078:	mov	r0, r3
   2207c:	b	2b4ec <fb_symbol_table_visit@@Base>
   22080:	andeq	r0, r0, ip, lsr #12
   22084:	add	r3, r1, #4
   22088:	ldr	r1, [pc, #12]	; 2209c <__flatcc_fb_gen_c_verifier@@Base+0x1e70>
   2208c:	mov	r2, r0
   22090:	add	r1, pc, r1
   22094:	mov	r0, r3
   22098:	b	2b4ec <fb_symbol_table_visit@@Base>
   2209c:	andeq	r0, r0, r8, lsl #2
   220a0:	ldr	r3, [pc, #56]	; 220e0 <__flatcc_fb_gen_c_verifier@@Base+0x1eb4>
   220a4:	push	{r4, r5, r6, lr}
   220a8:	add	r3, pc, r3
   220ac:	mov	r4, r1
   220b0:	mov	r2, #8
   220b4:	mov	r5, r0
   220b8:	bl	14000 <qsort@plt>
   220bc:	cmp	r4, #0
   220c0:	pople	{r4, r5, r6, pc}
   220c4:	mov	r3, #0
   220c8:	ldr	r2, [r5, r3, lsl #3]
   220cc:	str	r3, [r2, #124]	; 0x7c
   220d0:	add	r3, r3, #1
   220d4:	cmp	r4, r3
   220d8:	bne	220c8 <__flatcc_fb_gen_c_verifier@@Base+0x1e9c>
   220dc:	pop	{r4, r5, r6, pc}
   220e0:	strdeq	r0, [r0], -ip
   220e4:	push	{r4, r5, r6, lr}
   220e8:	ldr	r5, [r0, #4]
   220ec:	ldr	r4, [r1, #4]
   220f0:	ldr	r0, [r0]
   220f4:	cmp	r5, r4
   220f8:	movlt	r2, r5
   220fc:	movge	r2, r4
   22100:	ldr	r1, [r1]
   22104:	bl	13eec <memcmp@plt>
   22108:	cmp	r0, #0
   2210c:	subeq	r0, r5, r4
   22110:	pop	{r4, r5, r6, pc}
   22114:	ldrh	r3, [r1, #8]
   22118:	sub	r3, r3, #3
   2211c:	cmp	r3, #1
   22120:	bxhi	lr
   22124:	push	{r4, r5, r6, lr}
   22128:	mov	r5, r0
   2212c:	ldr	r0, [r0, #4]
   22130:	mov	r4, r1
   22134:	add	r0, r0, #172	; 0xac
   22138:	ldr	r1, [r1, #16]
   2213c:	bl	2ade0 <ptr_set_find_item@@Base>
   22140:	cmp	r0, #0
   22144:	popeq	{r4, r5, r6, pc}
   22148:	ldr	r2, [r4, #4]
   2214c:	ldr	r3, [r5, #8]
   22150:	ldm	r2, {r0, r1}
   22154:	add	r2, r3, #16
   22158:	stm	r3, {r0, r1, r4}
   2215c:	str	r2, [r5, #8]
   22160:	pop	{r4, r5, r6, pc}
   22164:	ldrh	r3, [r1, #8]
   22168:	sub	r3, r3, #3
   2216c:	cmp	r3, #1
   22170:	bxhi	lr
   22174:	push	{r4, lr}
   22178:	mov	r4, r0
   2217c:	ldr	r0, [r0, #4]
   22180:	ldr	r1, [r1, #16]
   22184:	add	r0, r0, #172	; 0xac
   22188:	bl	2ade0 <ptr_set_find_item@@Base>
   2218c:	cmp	r0, #0
   22190:	ldrne	r3, [r4]
   22194:	addne	r3, r3, #1
   22198:	strne	r3, [r4]
   2219c:	pop	{r4, pc}
   221a0:	ldrh	r3, [r1, #8]
   221a4:	cmp	r3, #4
   221a8:	bxhi	lr
   221ac:	push	{r4, r5, r6, lr}
   221b0:	mov	r4, r0
   221b4:	ldr	r0, [r0, #40]	; 0x28
   221b8:	mov	r5, r1
   221bc:	add	r0, r0, #172	; 0xac
   221c0:	ldr	r1, [r1, #16]
   221c4:	bl	2ade0 <ptr_set_find_item@@Base>
   221c8:	cmp	r0, #0
   221cc:	beq	22270 <__flatcc_fb_gen_c_verifier@@Base+0x2044>
   221d0:	ldr	ip, [r4]
   221d4:	cmp	ip, #0
   221d8:	beq	2220c <__flatcc_fb_gen_c_verifier@@Base+0x1fe0>
   221dc:	ldr	r3, [r5, #12]
   221e0:	ldr	r3, [r3]
   221e4:	cmp	r3, #0
   221e8:	beq	22274 <__flatcc_fb_gen_c_verifier@@Base+0x2048>
   221ec:	mov	ip, #0
   221f0:	ldr	r2, [r3, #4]
   221f4:	ldr	r3, [r3]
   221f8:	ldr	r2, [r2, #4]
   221fc:	cmp	r3, #0
   22200:	add	r2, r2, #1
   22204:	add	ip, ip, r2
   22208:	bne	221f0 <__flatcc_fb_gen_c_verifier@@Base+0x1fc4>
   2220c:	ldr	r3, [r5, #4]
   22210:	ldr	r1, [r4, #12]
   22214:	ldrh	r2, [r5, #8]
   22218:	ldr	r3, [r3, #4]
   2221c:	add	r3, r3, r1
   22220:	add	r3, r3, #1
   22224:	add	ip, r3, ip
   22228:	str	ip, [r4, #12]
   2222c:	cmp	r2, #4
   22230:	addls	pc, pc, r2, lsl #2
   22234:	b	2226c <__flatcc_fb_gen_c_verifier@@Base+0x2040>
   22238:	b	2225c <__flatcc_fb_gen_c_verifier@@Base+0x2030>
   2223c:	b	2225c <__flatcc_fb_gen_c_verifier@@Base+0x2030>
   22240:	b	2226c <__flatcc_fb_gen_c_verifier@@Base+0x2040>
   22244:	b	2224c <__flatcc_fb_gen_c_verifier@@Base+0x2020>
   22248:	b	2224c <__flatcc_fb_gen_c_verifier@@Base+0x2020>
   2224c:	ldr	r3, [r4, #8]
   22250:	add	r3, r3, #1
   22254:	str	r3, [r4, #8]
   22258:	pop	{r4, r5, r6, pc}
   2225c:	ldr	r3, [r4, #4]
   22260:	add	r3, r3, #1
   22264:	str	r3, [r4, #4]
   22268:	pop	{r4, r5, r6, pc}
   2226c:	pop	{r4, r5, r6, pc}
   22270:	pop	{r4, r5, r6, pc}
   22274:	mov	ip, r3
   22278:	b	2220c <__flatcc_fb_gen_c_verifier@@Base+0x1fe0>
   2227c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22280:	sub	sp, sp, #260	; 0x104
   22284:	add	r6, sp, #24
   22288:	add	r8, sp, #52	; 0x34
   2228c:	mov	r5, #0
   22290:	mov	r4, r0
   22294:	mov	r0, r1
   22298:	mov	r1, r8
   2229c:	str	r5, [r6, #4]
   222a0:	add	sl, r0, #4
   222a4:	str	r5, [sp, #24]
   222a8:	add	r7, sp, #12
   222ac:	str	r5, [r6, #8]
   222b0:	str	r5, [r6, #12]
   222b4:	str	r5, [r6, #16]
   222b8:	str	r5, [r6, #20]
   222bc:	str	r5, [r6, #24]
   222c0:	bl	1537c <__flatcc_fb_copy_scope@@Base>
   222c4:	ldr	r1, [pc, #760]	; 225c4 <__flatcc_fb_gen_c_verifier@@Base+0x2398>
   222c8:	ldr	r3, [r4, #208]	; 0xd0
   222cc:	str	r5, [sp, #12]
   222d0:	mov	r0, sl
   222d4:	str	r5, [r7, #8]
   222d8:	mov	r2, r7
   222dc:	add	r1, pc, r1
   222e0:	str	r3, [sp, #16]
   222e4:	bl	2b4ec <fb_symbol_table_visit@@Base>
   222e8:	ldr	r5, [sp, #12]
   222ec:	ldr	fp, [pc, #724]	; 225c8 <__flatcc_fb_gen_c_verifier@@Base+0x239c>
   222f0:	cmp	r5, #0
   222f4:	add	fp, pc, fp
   222f8:	beq	224f0 <__flatcc_fb_gen_c_verifier@@Base+0x22c4>
   222fc:	lsl	r0, r5, #4
   22300:	bl	13f34 <malloc@plt>
   22304:	subs	r9, r0, #0
   22308:	beq	224f8 <__flatcc_fb_gen_c_verifier@@Base+0x22cc>
   2230c:	ldr	r1, [pc, #696]	; 225cc <__flatcc_fb_gen_c_verifier@@Base+0x23a0>
   22310:	mov	r2, r7
   22314:	mov	r0, sl
   22318:	add	r1, pc, r1
   2231c:	str	r9, [sp, #20]
   22320:	bl	2b4ec <fb_symbol_table_visit@@Base>
   22324:	ldr	r3, [pc, #676]	; 225d0 <__flatcc_fb_gen_c_verifier@@Base+0x23a4>
   22328:	mov	r2, #16
   2232c:	add	r3, pc, r3
   22330:	ldr	r1, [sp, #12]
   22334:	mov	r0, r9
   22338:	bl	14000 <qsort@plt>
   2233c:	str	r9, [sp, #24]
   22340:	ldr	r1, [pc, #652]	; 225d4 <__flatcc_fb_gen_c_verifier@@Base+0x23a8>
   22344:	ldr	r2, [r4, #208]	; 0xd0
   22348:	add	r1, pc, r1
   2234c:	ldr	r0, [pc, #644]	; 225d8 <__flatcc_fb_gen_c_verifier@@Base+0x23ac>
   22350:	str	r1, [sp, #28]
   22354:	ldr	r1, [pc, #640]	; 225dc <__flatcc_fb_gen_c_verifier@@Base+0x23b0>
   22358:	add	r0, pc, r0
   2235c:	mov	ip, #3
   22360:	mov	r3, r8
   22364:	ldr	r2, [r2, #160]	; 0xa0
   22368:	mov	r7, #0
   2236c:	add	r1, pc, r1
   22370:	str	r0, [sp, #32]
   22374:	mov	r0, r4
   22378:	str	ip, [sp, #40]	; 0x28
   2237c:	str	r7, [sp, #36]	; 0x24
   22380:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22384:	ldr	r3, [r4, #220]	; 0xdc
   22388:	ldr	r1, [pc, #592]	; 225e0 <__flatcc_fb_gen_c_verifier@@Base+0x23b4>
   2238c:	add	r3, r3, #2
   22390:	str	r3, [r4, #220]	; 0xdc
   22394:	add	r1, pc, r1
   22398:	mov	r0, r4
   2239c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   223a0:	ldr	r3, [r4, #220]	; 0xdc
   223a4:	cmp	r3, r7
   223a8:	beq	22558 <__flatcc_fb_gen_c_verifier@@Base+0x232c>
   223ac:	cmp	r3, #1
   223b0:	streq	r7, [r4, #220]	; 0xdc
   223b4:	beq	22558 <__flatcc_fb_gen_c_verifier@@Base+0x232c>
   223b8:	ldr	r1, [pc, #548]	; 225e4 <__flatcc_fb_gen_c_verifier@@Base+0x23b8>
   223bc:	sub	r3, r3, #2
   223c0:	str	r3, [r4, #220]	; 0xdc
   223c4:	add	r1, pc, r1
   223c8:	mov	r0, r4
   223cc:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   223d0:	ldr	r3, [r4, #220]	; 0xdc
   223d4:	cmp	r5, #0
   223d8:	add	r3, r3, #1
   223dc:	str	r3, [r4, #220]	; 0xdc
   223e0:	beq	224a8 <__flatcc_fb_gen_c_verifier@@Base+0x227c>
   223e4:	ldr	r1, [pc, #508]	; 225e8 <__flatcc_fb_gen_c_verifier@@Base+0x23bc>
   223e8:	mov	r0, r4
   223ec:	add	r1, pc, r1
   223f0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   223f4:	ldr	r1, [pc, #496]	; 225ec <__flatcc_fb_gen_c_verifier@@Base+0x23c0>
   223f8:	mov	r0, r4
   223fc:	add	r1, pc, r1
   22400:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22404:	ldr	r1, [pc, #484]	; 225f0 <__flatcc_fb_gen_c_verifier@@Base+0x23c4>
   22408:	mov	r0, r4
   2240c:	add	r1, pc, r1
   22410:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22414:	ldr	r1, [pc, #472]	; 225f4 <__flatcc_fb_gen_c_verifier@@Base+0x23c8>
   22418:	mov	r0, r4
   2241c:	add	r1, pc, r1
   22420:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22424:	ldr	r1, [pc, #460]	; 225f8 <__flatcc_fb_gen_c_verifier@@Base+0x23cc>
   22428:	mov	r0, r4
   2242c:	add	r1, pc, r1
   22430:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22434:	sub	r3, r5, #1
   22438:	mov	r2, r7
   2243c:	mov	r1, r6
   22440:	mov	r0, r4
   22444:	str	r7, [sp]
   22448:	bl	20bb8 <__flatcc_fb_gen_c_verifier@@Base+0x98c>
   2244c:	ldr	r1, [pc, #424]	; 225fc <__flatcc_fb_gen_c_verifier@@Base+0x23d0>
   22450:	mov	r0, r4
   22454:	add	r1, pc, r1
   22458:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2245c:	ldr	r3, [r4, #220]	; 0xdc
   22460:	cmp	r3, #0
   22464:	beq	2257c <__flatcc_fb_gen_c_verifier@@Base+0x2350>
   22468:	ldr	r1, [pc, #400]	; 22600 <__flatcc_fb_gen_c_verifier@@Base+0x23d4>
   2246c:	sub	r3, r3, #1
   22470:	str	r3, [r4, #220]	; 0xdc
   22474:	add	r1, pc, r1
   22478:	mov	r0, r4
   2247c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22480:	ldr	r1, [pc, #380]	; 22604 <__flatcc_fb_gen_c_verifier@@Base+0x23d8>
   22484:	mov	r0, r4
   22488:	add	r1, pc, r1
   2248c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22490:	ldr	r0, [sp, #24]
   22494:	cmp	r0, #0
   22498:	beq	224a0 <__flatcc_fb_gen_c_verifier@@Base+0x2274>
   2249c:	bl	13ec8 <free@plt>
   224a0:	add	sp, sp, #260	; 0x104
   224a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   224a8:	ldr	r1, [pc, #344]	; 22608 <__flatcc_fb_gen_c_verifier@@Base+0x23dc>
   224ac:	mov	r0, r4
   224b0:	add	r1, pc, r1
   224b4:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   224b8:	ldr	r1, [pc, #332]	; 2260c <__flatcc_fb_gen_c_verifier@@Base+0x23e0>
   224bc:	mov	r0, r4
   224c0:	add	r1, pc, r1
   224c4:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   224c8:	ldr	r3, [r4, #220]	; 0xdc
   224cc:	cmp	r3, #0
   224d0:	beq	225a0 <__flatcc_fb_gen_c_verifier@@Base+0x2374>
   224d4:	ldr	r1, [pc, #308]	; 22610 <__flatcc_fb_gen_c_verifier@@Base+0x23e4>
   224d8:	sub	r3, r3, #1
   224dc:	str	r3, [r4, #220]	; 0xdc
   224e0:	add	r1, pc, r1
   224e4:	mov	r0, r4
   224e8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   224ec:	b	22480 <__flatcc_fb_gen_c_verifier@@Base+0x2254>
   224f0:	str	r5, [sp, #24]
   224f4:	b	22340 <__flatcc_fb_gen_c_verifier@@Base+0x2114>
   224f8:	cmp	r5, #0
   224fc:	str	r9, [sp, #24]
   22500:	ble	22340 <__flatcc_fb_gen_c_verifier@@Base+0x2114>
   22504:	ldr	r2, [pc, #264]	; 22614 <__flatcc_fb_gen_c_verifier@@Base+0x23e8>
   22508:	ldr	r3, [pc, #264]	; 22618 <__flatcc_fb_gen_c_verifier@@Base+0x23ec>
   2250c:	ldr	r4, [pc, #264]	; 2261c <__flatcc_fb_gen_c_verifier@@Base+0x23f0>
   22510:	ldr	r1, [fp, r2]
   22514:	add	r3, pc, r3
   22518:	str	r3, [sp]
   2251c:	ldr	r0, [r1]
   22520:	ldr	r1, [pc, #248]	; 22620 <__flatcc_fb_gen_c_verifier@@Base+0x23f4>
   22524:	add	r4, pc, r4
   22528:	mov	r2, r4
   2252c:	ldr	r3, [pc, #240]	; 22624 <__flatcc_fb_gen_c_verifier@@Base+0x23f8>
   22530:	add	r1, pc, r1
   22534:	bl	13f7c <fprintf@plt>
   22538:	ldr	r3, [pc, #232]	; 22628 <__flatcc_fb_gen_c_verifier@@Base+0x23fc>
   2253c:	ldr	r0, [pc, #232]	; 2262c <__flatcc_fb_gen_c_verifier@@Base+0x2400>
   22540:	add	r3, pc, r3
   22544:	mov	r1, r4
   22548:	add	r3, r3, #72	; 0x48
   2254c:	ldr	r2, [pc, #208]	; 22624 <__flatcc_fb_gen_c_verifier@@Base+0x23f8>
   22550:	add	r0, pc, r0
   22554:	bl	14030 <__assert_fail@plt>
   22558:	ldr	r3, [pc, #208]	; 22630 <__flatcc_fb_gen_c_verifier@@Base+0x2404>
   2255c:	ldr	r1, [pc, #208]	; 22634 <__flatcc_fb_gen_c_verifier@@Base+0x2408>
   22560:	ldr	r0, [pc, #208]	; 22638 <__flatcc_fb_gen_c_verifier@@Base+0x240c>
   22564:	add	r3, pc, r3
   22568:	mov	r2, #1152	; 0x480
   2256c:	add	r3, r3, #72	; 0x48
   22570:	add	r1, pc, r1
   22574:	add	r0, pc, r0
   22578:	bl	14030 <__assert_fail@plt>
   2257c:	ldr	r3, [pc, #184]	; 2263c <__flatcc_fb_gen_c_verifier@@Base+0x2410>
   22580:	ldr	r1, [pc, #184]	; 22640 <__flatcc_fb_gen_c_verifier@@Base+0x2414>
   22584:	ldr	r0, [pc, #184]	; 22644 <__flatcc_fb_gen_c_verifier@@Base+0x2418>
   22588:	add	r3, pc, r3
   2258c:	ldr	r2, [pc, #180]	; 22648 <__flatcc_fb_gen_c_verifier@@Base+0x241c>
   22590:	add	r3, r3, #72	; 0x48
   22594:	add	r1, pc, r1
   22598:	add	r0, pc, r0
   2259c:	bl	14030 <__assert_fail@plt>
   225a0:	ldr	r3, [pc, #164]	; 2264c <__flatcc_fb_gen_c_verifier@@Base+0x2420>
   225a4:	ldr	r1, [pc, #164]	; 22650 <__flatcc_fb_gen_c_verifier@@Base+0x2424>
   225a8:	ldr	r0, [pc, #164]	; 22654 <__flatcc_fb_gen_c_verifier@@Base+0x2428>
   225ac:	add	r3, pc, r3
   225b0:	ldr	r2, [pc, #160]	; 22658 <__flatcc_fb_gen_c_verifier@@Base+0x242c>
   225b4:	add	r3, r3, #72	; 0x48
   225b8:	add	r1, pc, r1
   225bc:	add	r0, pc, r0
   225c0:	bl	14030 <__assert_fail@plt>
   225c4:			; <UNDEFINED> instruction: 0xfffffe80
   225c8:	andeq	r7, r4, r4, lsl #26
   225cc:			; <UNDEFINED> instruction: 0xfffffdf4
   225d0:			; <UNDEFINED> instruction: 0xfffffdb0
   225d4:	andeq	r0, r0, ip, lsr #12
   225d8:			; <UNDEFINED> instruction: 0xffffe370
   225dc:	andeq	r0, r3, r4, lsr r1
   225e0:	strdeq	r0, [r3], -ip
   225e4:	andeq	r2, r3, r0, lsl fp
   225e8:	andeq	r0, r3, ip, lsr #12
   225ec:	andeq	r0, r3, ip, lsr r6
   225f0:	andeq	r0, r3, r0, asr #12
   225f4:	andeq	r7, r2, ip, asr #5
   225f8:			; <UNDEFINED> instruction: 0x0002ffb0
   225fc:	andeq	r0, r3, r4, lsl #8
   22600:	andeq	pc, r2, ip, ror #28
   22604:	andeq	r7, r2, r0, ror #4
   22608:	andeq	r0, r3, r4, lsl r5
   2260c:	andeq	r0, r3, r8, lsr r5
   22610:	andeq	pc, r2, r0, lsl #28
   22614:	muleq	r0, ip, r0
   22618:	andeq	r0, r3, r0, asr #8
   2261c:	andeq	pc, r2, r4, asr #26
   22620:	andeq	sp, r1, r4, lsr r5
   22624:	andeq	r0, r0, r4, ror r4
   22628:	ldrdeq	pc, [r2], -r8
   2262c:	andeq	r5, r2, r4, lsl r9
   22630:			; <UNDEFINED> instruction: 0x0002fab4
   22634:	strdeq	pc, [r2], -r8
   22638:	andeq	pc, r2, r0, ror #26
   2263c:	muleq	r2, r0, sl
   22640:	ldrdeq	pc, [r2], -r4
   22644:	andeq	pc, r2, ip, lsr sp	; <UNPREDICTABLE>
   22648:	andeq	r0, r0, lr, lsl #9
   2264c:	andeq	pc, r2, ip, ror #20
   22650:			; <UNDEFINED> instruction: 0x0002fcb0
   22654:	andeq	pc, r2, r8, lsl sp	; <UNPREDICTABLE>
   22658:	andeq	r0, r0, r5, lsl #9
   2265c:	push	{r4, lr}
   22660:	mov	r4, r0
   22664:	ldr	r0, [r0, #16]
   22668:	cmp	r0, #0
   2266c:	beq	22674 <__flatcc_fb_gen_c_verifier@@Base+0x2448>
   22670:	bl	13ec8 <free@plt>
   22674:	ldr	r0, [r4, #20]
   22678:	cmp	r0, #0
   2267c:	beq	22684 <__flatcc_fb_gen_c_verifier@@Base+0x2458>
   22680:	bl	13ec8 <free@plt>
   22684:	ldr	r0, [r4, #24]
   22688:	cmp	r0, #0
   2268c:	beq	22694 <__flatcc_fb_gen_c_verifier@@Base+0x2468>
   22690:	bl	13ec8 <free@plt>
   22694:	mov	r0, r4
   22698:	mov	r2, #44	; 0x2c
   2269c:	mov	r1, #0
   226a0:	pop	{r4, lr}
   226a4:	b	13f94 <memset@plt>
   226a8:	ldrh	r3, [r1, #8]
   226ac:	cmp	r3, #4
   226b0:	bxhi	lr
   226b4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   226b8:	mov	r6, r0
   226bc:	ldr	r0, [r0, #40]	; 0x28
   226c0:	mov	r7, r1
   226c4:	add	r0, r0, #172	; 0xac
   226c8:	ldr	r1, [r1, #16]
   226cc:	bl	2ade0 <ptr_set_find_item@@Base>
   226d0:	cmp	r0, #0
   226d4:	beq	227a8 <__flatcc_fb_gen_c_verifier@@Base+0x257c>
   226d8:	ldr	r3, [r6]
   226dc:	ldr	r9, [r6, #36]	; 0x24
   226e0:	cmp	r3, #0
   226e4:	moveq	r3, r9
   226e8:	beq	22730 <__flatcc_fb_gen_c_verifier@@Base+0x2504>
   226ec:	ldr	r3, [r7, #12]
   226f0:	ldr	r5, [r3]
   226f4:	mov	r3, r9
   226f8:	cmp	r5, #0
   226fc:	beq	22730 <__flatcc_fb_gen_c_verifier@@Base+0x2504>
   22700:	mov	r8, #46	; 0x2e
   22704:	ldr	r2, [r5, #4]
   22708:	mov	r0, r3
   2270c:	ldm	r2, {r1, r4}
   22710:	mov	r2, r4
   22714:	bl	13ed4 <memcpy@plt>
   22718:	add	r4, r0, r4
   2271c:	add	r3, r4, #1
   22720:	strb	r8, [r4]
   22724:	ldr	r5, [r5]
   22728:	cmp	r5, #0
   2272c:	bne	22704 <__flatcc_fb_gen_c_verifier@@Base+0x24d8>
   22730:	ldr	r2, [r7, #4]
   22734:	mov	r0, r3
   22738:	ldm	r2, {r1, r4}
   2273c:	mov	r2, r4
   22740:	bl	13ed4 <memcpy@plt>
   22744:	mov	r2, #0
   22748:	strb	r2, [r0, r4]
   2274c:	ldrh	r2, [r7, #8]
   22750:	add	r3, r0, r4
   22754:	add	r3, r3, #1
   22758:	str	r3, [r6, #36]	; 0x24
   2275c:	cmp	r2, #4
   22760:	addls	pc, pc, r2, lsl #2
   22764:	b	227a4 <__flatcc_fb_gen_c_verifier@@Base+0x2578>
   22768:	b	22790 <__flatcc_fb_gen_c_verifier@@Base+0x2564>
   2276c:	b	22790 <__flatcc_fb_gen_c_verifier@@Base+0x2564>
   22770:	b	227a4 <__flatcc_fb_gen_c_verifier@@Base+0x2578>
   22774:	b	2277c <__flatcc_fb_gen_c_verifier@@Base+0x2550>
   22778:	b	2277c <__flatcc_fb_gen_c_verifier@@Base+0x2550>
   2277c:	ldr	r3, [r6, #32]
   22780:	add	r2, r3, #8
   22784:	stm	r3, {r7, r9}
   22788:	str	r2, [r6, #32]
   2278c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   22790:	ldr	r3, [r6, #28]
   22794:	add	r2, r3, #8
   22798:	stm	r3, {r7, r9}
   2279c:	str	r2, [r6, #28]
   227a0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   227a4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   227a8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   227ac:	ldr	r1, [r1, #4]
   227b0:	ldr	r0, [r0, #4]
   227b4:	b	13eb0 <strcmp@plt>
   227b8:	push	{r4, r5, r6, lr}
   227bc:	mov	r5, r1
   227c0:	sub	sp, sp, #8
   227c4:	ldr	r1, [pc, #360]	; 22934 <__flatcc_fb_gen_c_verifier@@Base+0x2708>
   227c8:	mov	r6, r2
   227cc:	add	r1, pc, r1
   227d0:	ldr	r2, [sp, #24]
   227d4:	mov	r4, r0
   227d8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   227dc:	ldr	r1, [pc, #340]	; 22938 <__flatcc_fb_gen_c_verifier@@Base+0x270c>
   227e0:	mov	r0, r4
   227e4:	add	r1, pc, r1
   227e8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   227ec:	ldr	r3, [r4, #220]	; 0xdc
   227f0:	ldr	r0, [pc, #324]	; 2293c <__flatcc_fb_gen_c_verifier@@Base+0x2710>
   227f4:	add	r3, r3, #1
   227f8:	str	r3, [r4, #220]	; 0xdc
   227fc:	ldr	r3, [r5, #40]	; 0x28
   22800:	add	r0, pc, r0
   22804:	sub	r3, r3, #1
   22808:	cmp	r3, #8
   2280c:	addls	pc, pc, r3, lsl #2
   22810:	b	228a8 <__flatcc_fb_gen_c_verifier@@Base+0x267c>
   22814:	b	22890 <__flatcc_fb_gen_c_verifier@@Base+0x2664>
   22818:	b	22890 <__flatcc_fb_gen_c_verifier@@Base+0x2664>
   2281c:	b	22890 <__flatcc_fb_gen_c_verifier@@Base+0x2664>
   22820:	b	22890 <__flatcc_fb_gen_c_verifier@@Base+0x2664>
   22824:	b	22890 <__flatcc_fb_gen_c_verifier@@Base+0x2664>
   22828:	b	22838 <__flatcc_fb_gen_c_verifier@@Base+0x260c>
   2282c:	b	22838 <__flatcc_fb_gen_c_verifier@@Base+0x260c>
   22830:	b	22838 <__flatcc_fb_gen_c_verifier@@Base+0x260c>
   22834:	b	22838 <__flatcc_fb_gen_c_verifier@@Base+0x260c>
   22838:	ldrd	r2, [r6, #48]	; 0x30
   2283c:	cmp	r2, #0
   22840:	sbcs	r1, r3, #0
   22844:	blt	228fc <__flatcc_fb_gen_c_verifier@@Base+0x26d0>
   22848:	ldr	r1, [pc, #240]	; 22940 <__flatcc_fb_gen_c_verifier@@Base+0x2714>
   2284c:	mov	r0, r4
   22850:	add	r1, pc, r1
   22854:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22858:	ldr	r3, [r4, #220]	; 0xdc
   2285c:	cmp	r3, #0
   22860:	beq	22910 <__flatcc_fb_gen_c_verifier@@Base+0x26e4>
   22864:	ldr	r1, [pc, #216]	; 22944 <__flatcc_fb_gen_c_verifier@@Base+0x2718>
   22868:	sub	r3, r3, #1
   2286c:	str	r3, [r4, #220]	; 0xdc
   22870:	add	r1, pc, r1
   22874:	mov	r0, r4
   22878:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2287c:	ldr	r3, [r4, #220]	; 0xdc
   22880:	add	r3, r3, #1
   22884:	str	r3, [r4, #220]	; 0xdc
   22888:	add	sp, sp, #8
   2288c:	pop	{r4, r5, r6, pc}
   22890:	ldr	r1, [pc, #176]	; 22948 <__flatcc_fb_gen_c_verifier@@Base+0x271c>
   22894:	ldrd	r2, [r6, #48]	; 0x30
   22898:	add	r1, pc, r1
   2289c:	mov	r0, r4
   228a0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   228a4:	b	22858 <__flatcc_fb_gen_c_verifier@@Base+0x262c>
   228a8:	ldr	r2, [pc, #156]	; 2294c <__flatcc_fb_gen_c_verifier@@Base+0x2720>
   228ac:	ldr	r3, [pc, #156]	; 22950 <__flatcc_fb_gen_c_verifier@@Base+0x2724>
   228b0:	ldr	r4, [pc, #156]	; 22954 <__flatcc_fb_gen_c_verifier@@Base+0x2728>
   228b4:	ldr	r1, [r0, r2]
   228b8:	add	r3, pc, r3
   228bc:	str	r3, [sp]
   228c0:	ldr	r0, [r1]
   228c4:	ldr	r1, [pc, #140]	; 22958 <__flatcc_fb_gen_c_verifier@@Base+0x272c>
   228c8:	add	r4, pc, r4
   228cc:	mov	r2, r4
   228d0:	ldr	r3, [pc, #132]	; 2295c <__flatcc_fb_gen_c_verifier@@Base+0x2730>
   228d4:	add	r1, pc, r1
   228d8:	bl	13f7c <fprintf@plt>
   228dc:	ldr	r3, [pc, #124]	; 22960 <__flatcc_fb_gen_c_verifier@@Base+0x2734>
   228e0:	ldr	r0, [pc, #124]	; 22964 <__flatcc_fb_gen_c_verifier@@Base+0x2738>
   228e4:	add	r3, pc, r3
   228e8:	mov	r1, r4
   228ec:	add	r3, r3, #96	; 0x60
   228f0:	ldr	r2, [pc, #100]	; 2295c <__flatcc_fb_gen_c_verifier@@Base+0x2730>
   228f4:	add	r0, pc, r0
   228f8:	bl	14030 <__assert_fail@plt>
   228fc:	ldr	r1, [pc, #100]	; 22968 <__flatcc_fb_gen_c_verifier@@Base+0x273c>
   22900:	mov	r0, r4
   22904:	add	r1, pc, r1
   22908:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2290c:	b	22858 <__flatcc_fb_gen_c_verifier@@Base+0x262c>
   22910:	ldr	r3, [pc, #84]	; 2296c <__flatcc_fb_gen_c_verifier@@Base+0x2740>
   22914:	ldr	r1, [pc, #84]	; 22970 <__flatcc_fb_gen_c_verifier@@Base+0x2744>
   22918:	ldr	r0, [pc, #84]	; 22974 <__flatcc_fb_gen_c_verifier@@Base+0x2748>
   2291c:	add	r3, pc, r3
   22920:	ldr	r2, [pc, #80]	; 22978 <__flatcc_fb_gen_c_verifier@@Base+0x274c>
   22924:	add	r3, r3, #120	; 0x78
   22928:	add	r1, pc, r1
   2292c:	add	r0, pc, r0
   22930:	bl	14030 <__assert_fail@plt>
   22934:	andeq	r0, r3, ip, lsl #5
   22938:	andeq	r0, r3, r4, asr #5
   2293c:	strdeq	r7, [r4], -r8
   22940:	andeq	r0, r3, ip, ror #4
   22944:	muleq	r2, r4, pc	; <UNPREDICTABLE>
   22948:	andeq	r0, r3, r4, lsr #4
   2294c:	muleq	r0, ip, r0
   22950:	andeq	r0, r3, ip, asr r2
   22954:	andeq	pc, r2, r0, lsr #19
   22958:	muleq	r1, r0, r1
   2295c:	andeq	r0, r0, r6, asr #5
   22960:	andeq	pc, r2, r4, lsr r7	; <UNPREDICTABLE>
   22964:	andeq	r5, r2, r0, ror r5
   22968:	andeq	r0, r3, r4, ror #3
   2296c:	strdeq	pc, [r2], -ip
   22970:	andeq	pc, r2, r0, asr #18
   22974:	andeq	pc, r2, r8, lsr #19
   22978:	andeq	r0, r0, pc, asr #5
   2297c:	push	{r4, r5, r6, lr}
   22980:	sub	sp, sp, #224	; 0xe0
   22984:	ldr	r1, [pc, #244]	; 22a80 <__flatcc_fb_gen_c_verifier@@Base+0x2854>
   22988:	mov	r6, r2
   2298c:	add	r1, pc, r1
   22990:	ldr	r2, [sp, #240]	; 0xf0
   22994:	mov	r4, r0
   22998:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2299c:	ldr	r1, [pc, #224]	; 22a84 <__flatcc_fb_gen_c_verifier@@Base+0x2858>
   229a0:	mov	r0, r4
   229a4:	add	r1, pc, r1
   229a8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   229ac:	ldrh	r2, [r6, #8]
   229b0:	ldr	r3, [r4, #220]	; 0xdc
   229b4:	sub	r2, r2, #3
   229b8:	add	r3, r3, #1
   229bc:	cmp	r2, #1
   229c0:	str	r3, [r4, #220]	; 0xdc
   229c4:	bhi	22a38 <__flatcc_fb_gen_c_verifier@@Base+0x280c>
   229c8:	add	r5, sp, #4
   229cc:	mov	r2, #220	; 0xdc
   229d0:	mov	r1, #0
   229d4:	mov	r0, r5
   229d8:	bl	13f94 <memset@plt>
   229dc:	mov	r2, r5
   229e0:	mov	r1, r6
   229e4:	ldr	r0, [r6, #12]
   229e8:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   229ec:	ldr	r1, [pc, #148]	; 22a88 <__flatcc_fb_gen_c_verifier@@Base+0x285c>
   229f0:	mov	r2, r5
   229f4:	add	r1, pc, r1
   229f8:	mov	r0, r4
   229fc:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22a00:	ldr	r3, [r4, #220]	; 0xdc
   22a04:	cmp	r3, #0
   22a08:	beq	22a5c <__flatcc_fb_gen_c_verifier@@Base+0x2830>
   22a0c:	ldr	r1, [pc, #120]	; 22a8c <__flatcc_fb_gen_c_verifier@@Base+0x2860>
   22a10:	sub	r3, r3, #1
   22a14:	str	r3, [r4, #220]	; 0xdc
   22a18:	add	r1, pc, r1
   22a1c:	mov	r0, r4
   22a20:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22a24:	ldr	r3, [r4, #220]	; 0xdc
   22a28:	add	r3, r3, #1
   22a2c:	str	r3, [r4, #220]	; 0xdc
   22a30:	add	sp, sp, #224	; 0xe0
   22a34:	pop	{r4, r5, r6, pc}
   22a38:	ldr	r3, [pc, #80]	; 22a90 <__flatcc_fb_gen_c_verifier@@Base+0x2864>
   22a3c:	ldr	r1, [pc, #80]	; 22a94 <__flatcc_fb_gen_c_verifier@@Base+0x2868>
   22a40:	ldr	r0, [pc, #80]	; 22a98 <__flatcc_fb_gen_c_verifier@@Base+0x286c>
   22a44:	add	r3, pc, r3
   22a48:	ldr	r2, [pc, #76]	; 22a9c <__flatcc_fb_gen_c_verifier@@Base+0x2870>
   22a4c:	add	r3, r3, #136	; 0x88
   22a50:	add	r1, pc, r1
   22a54:	add	r0, pc, r0
   22a58:	bl	14030 <__assert_fail@plt>
   22a5c:	ldr	r3, [pc, #60]	; 22aa0 <__flatcc_fb_gen_c_verifier@@Base+0x2874>
   22a60:	ldr	r1, [pc, #60]	; 22aa4 <__flatcc_fb_gen_c_verifier@@Base+0x2878>
   22a64:	ldr	r0, [pc, #60]	; 22aa8 <__flatcc_fb_gen_c_verifier@@Base+0x287c>
   22a68:	add	r3, pc, r3
   22a6c:	ldr	r2, [pc, #56]	; 22aac <__flatcc_fb_gen_c_verifier@@Base+0x2880>
   22a70:	add	r3, r3, #160	; 0xa0
   22a74:	add	r1, pc, r1
   22a78:	add	r0, pc, r0
   22a7c:	bl	14030 <__assert_fail@plt>
   22a80:	andeq	r0, r3, ip, lsr #3
   22a84:	andeq	r0, r3, r4, lsl #2
   22a88:	andeq	r0, r3, r8, lsl #3
   22a8c:	andeq	pc, r2, ip, ror #27
   22a90:	ldrdeq	pc, [r2], -r4
   22a94:	andeq	pc, r2, r8, lsl r8	; <UNPREDICTABLE>
   22a98:	andeq	ip, r1, r0, asr pc
   22a9c:	ldrdeq	r0, [r0], -r9
   22aa0:			; <UNDEFINED> instruction: 0x0002f5b0
   22aa4:	strdeq	pc, [r2], -r4
   22aa8:	andeq	pc, r2, ip, asr r8	; <UNPREDICTABLE>
   22aac:	andeq	r0, r0, r6, ror #5
   22ab0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22ab4:	sub	sp, sp, #540	; 0x21c
   22ab8:	mov	r6, r2
   22abc:	mov	r7, r3
   22ac0:	add	r2, sp, #316	; 0x13c
   22ac4:	add	r3, sp, #112	; 0x70
   22ac8:	mov	r5, r1
   22acc:	mov	r8, r3
   22ad0:	str	r2, [sp, #32]
   22ad4:	mov	r1, #0
   22ad8:	mov	r4, r0
   22adc:	mov	r0, r2
   22ae0:	mov	r2, #220	; 0xdc
   22ae4:	str	r3, [sp, #60]	; 0x3c
   22ae8:	bl	13f94 <memset@plt>
   22aec:	mov	r1, r8
   22af0:	ldr	r0, [r6]
   22af4:	bl	1537c <__flatcc_fb_copy_scope@@Base>
   22af8:	ldrh	r3, [r5]
   22afc:	ldr	r1, [pc, #3772]	; 239c0 <__flatcc_fb_gen_c_verifier@@Base+0x3794>
   22b00:	mov	r2, r3
   22b04:	str	r3, [sp, #16]
   22b08:	ldrh	r3, [r7, #24]
   22b0c:	add	r1, pc, r1
   22b10:	sub	r2, r2, #1
   22b14:	cmp	r3, #15
   22b18:	clz	r2, r2
   22b1c:	movhi	r5, #0
   22b20:	lsr	r2, r2, #5
   22b24:	str	r2, [sp, #68]	; 0x44
   22b28:	str	r1, [sp, #104]	; 0x68
   22b2c:	movhi	r2, r5
   22b30:	bhi	22b4c <__flatcc_fb_gen_c_verifier@@Base+0x2920>
   22b34:	ldr	r2, [pc, #3720]	; 239c4 <__flatcc_fb_gen_c_verifier@@Base+0x3798>
   22b38:	mov	r1, #1
   22b3c:	ands	r2, r2, r1, lsl r3
   22b40:	movne	r2, r1
   22b44:	moveq	r2, #0
   22b48:	mov	r5, r2
   22b4c:	sub	r3, r3, #7
   22b50:	cmp	r3, #8
   22b54:	addls	pc, pc, r3, lsl #2
   22b58:	b	230e4 <__flatcc_fb_gen_c_verifier@@Base+0x2eb8>
   22b5c:	b	22f8c <__flatcc_fb_gen_c_verifier@@Base+0x2d60>
   22b60:	b	22f54 <__flatcc_fb_gen_c_verifier@@Base+0x2d28>
   22b64:	b	22b80 <__flatcc_fb_gen_c_verifier@@Base+0x2954>
   22b68:	b	22b80 <__flatcc_fb_gen_c_verifier@@Base+0x2954>
   22b6c:	b	230e4 <__flatcc_fb_gen_c_verifier@@Base+0x2eb8>
   22b70:	b	230e4 <__flatcc_fb_gen_c_verifier@@Base+0x2eb8>
   22b74:	b	230e4 <__flatcc_fb_gen_c_verifier@@Base+0x2eb8>
   22b78:	b	23070 <__flatcc_fb_gen_c_verifier@@Base+0x2e44>
   22b7c:	b	23070 <__flatcc_fb_gen_c_verifier@@Base+0x2e44>
   22b80:	mov	r3, #0
   22b84:	str	r3, [sp, #24]
   22b88:	mov	r9, r3
   22b8c:	str	r3, [sp, #20]
   22b90:	mov	r6, r3
   22b94:	str	r3, [sp, #56]	; 0x38
   22b98:	mov	r3, #1
   22b9c:	str	r3, [sp, #40]	; 0x28
   22ba0:	mov	r3, #0
   22ba4:	str	r3, [sp, #52]	; 0x34
   22ba8:	str	r3, [sp, #64]	; 0x40
   22bac:	str	r3, [sp, #44]	; 0x2c
   22bb0:	mov	fp, r3
   22bb4:	and	r3, r5, #1
   22bb8:	str	r3, [sp, #48]	; 0x30
   22bbc:	ldr	r3, [sp, #576]	; 0x240
   22bc0:	cmp	r3, #0
   22bc4:	beq	2300c <__flatcc_fb_gen_c_verifier@@Base+0x2de0>
   22bc8:	ldr	r3, [sp, #48]	; 0x30
   22bcc:	cmp	r3, #0
   22bd0:	beq	23924 <__flatcc_fb_gen_c_verifier@@Base+0x36f8>
   22bd4:	mov	r6, #0
   22bd8:	mov	r5, r6
   22bdc:	mov	r3, #1
   22be0:	str	r6, [sp, #84]	; 0x54
   22be4:	str	r6, [sp, #100]	; 0x64
   22be8:	str	r3, [sp, #108]	; 0x6c
   22bec:	cmp	fp, #1
   22bf0:	beq	23050 <__flatcc_fb_gen_c_verifier@@Base+0x2e24>
   22bf4:	ldr	r3, [pc, #3532]	; 239c8 <__flatcc_fb_gen_c_verifier@@Base+0x379c>
   22bf8:	ldr	r8, [pc, #3532]	; 239cc <__flatcc_fb_gen_c_verifier@@Base+0x37a0>
   22bfc:	add	r3, pc, r3
   22c00:	str	r3, [sp, #72]	; 0x48
   22c04:	ldr	r3, [pc, #3524]	; 239d0 <__flatcc_fb_gen_c_verifier@@Base+0x37a4>
   22c08:	add	r8, pc, r8
   22c0c:	add	r3, pc, r3
   22c10:	str	r3, [sp, #76]	; 0x4c
   22c14:	ldr	r3, [pc, #3512]	; 239d4 <__flatcc_fb_gen_c_verifier@@Base+0x37a8>
   22c18:	cmp	fp, #2
   22c1c:	add	r3, pc, r3
   22c20:	str	r3, [sp, #80]	; 0x50
   22c24:	ldr	r3, [pc, #3500]	; 239d8 <__flatcc_fb_gen_c_verifier@@Base+0x37ac>
   22c28:	str	r8, [sp, #36]	; 0x24
   22c2c:	add	r3, pc, r3
   22c30:	str	r3, [sp, #88]	; 0x58
   22c34:	ldr	r3, [pc, #3488]	; 239dc <__flatcc_fb_gen_c_verifier@@Base+0x37b0>
   22c38:	add	r3, pc, r3
   22c3c:	str	r3, [sp, #92]	; 0x5c
   22c40:	ldr	r3, [pc, #3480]	; 239e0 <__flatcc_fb_gen_c_verifier@@Base+0x37b4>
   22c44:	add	r3, pc, r3
   22c48:	str	r3, [sp, #96]	; 0x60
   22c4c:	beq	22df8 <__flatcc_fb_gen_c_verifier@@Base+0x2bcc>
   22c50:	ldr	r3, [sp, #576]	; 0x240
   22c54:	orr	sl, r6, r9
   22c58:	cmp	r6, #0
   22c5c:	orr	sl, sl, r3
   22c60:	bne	23104 <__flatcc_fb_gen_c_verifier@@Base+0x2ed8>
   22c64:	cmp	r5, #0
   22c68:	moveq	r6, r5
   22c6c:	beq	22d0c <__flatcc_fb_gen_c_verifier@@Base+0x2ae0>
   22c70:	cmp	sl, #0
   22c74:	beq	2316c <__flatcc_fb_gen_c_verifier@@Base+0x2f40>
   22c78:	ldrd	r2, [r7, #88]	; 0x58
   22c7c:	ldrsh	r5, [r7, #74]	; 0x4a
   22c80:	mvn	r0, #0
   22c84:	orrs	r1, r2, r3
   22c88:	strd	r2, [sp, #24]
   22c8c:	mov	r1, #0
   22c90:	beq	22c98 <__flatcc_fb_gen_c_verifier@@Base+0x2a6c>
   22c94:	bl	3e0ec <fb_value_set_visit@@Base+0x668>
   22c98:	strd	r0, [sp, #8]
   22c9c:	ldr	r1, [pc, #3392]	; 239e4 <__flatcc_fb_gen_c_verifier@@Base+0x37b8>
   22ca0:	str	r5, [sp]
   22ca4:	ldrd	r2, [sp, #24]
   22ca8:	add	r1, pc, r1
   22cac:	mov	r0, r4
   22cb0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22cb4:	ldr	r1, [pc, #3372]	; 239e8 <__flatcc_fb_gen_c_verifier@@Base+0x37bc>
   22cb8:	mov	r0, r4
   22cbc:	add	r1, pc, r1
   22cc0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22cc4:	ldr	r1, [pc, #3360]	; 239ec <__flatcc_fb_gen_c_verifier@@Base+0x37c0>
   22cc8:	mov	r0, r4
   22ccc:	add	r1, pc, r1
   22cd0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22cd4:	ldr	r3, [r4, #220]	; 0xdc
   22cd8:	cmp	r6, #0
   22cdc:	add	r3, r3, #1
   22ce0:	str	r3, [r4, #220]	; 0xdc
   22ce4:	moveq	r5, #1
   22ce8:	bne	231a0 <__flatcc_fb_gen_c_verifier@@Base+0x2f74>
   22cec:	cmp	sl, #0
   22cf0:	moveq	r3, #0
   22cf4:	andne	r3, r5, #1
   22cf8:	cmp	r3, #0
   22cfc:	beq	22d0c <__flatcc_fb_gen_c_verifier@@Base+0x2ae0>
   22d00:	ldr	r1, [sp, #72]	; 0x48
   22d04:	mov	r0, r4
   22d08:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22d0c:	ldr	r3, [sp, #16]
   22d10:	cmp	r3, #1
   22d14:	beq	22e80 <__flatcc_fb_gen_c_verifier@@Base+0x2c54>
   22d18:	eor	r3, r5, #1
   22d1c:	tst	r3, r9
   22d20:	bne	23380 <__flatcc_fb_gen_c_verifier@@Base+0x3154>
   22d24:	cmp	r6, #0
   22d28:	bne	22e9c <__flatcc_fb_gen_c_verifier@@Base+0x2c70>
   22d2c:	cmp	r9, #0
   22d30:	bne	233a8 <__flatcc_fb_gen_c_verifier@@Base+0x317c>
   22d34:	ldr	r3, [sp, #40]	; 0x28
   22d38:	cmp	r3, #0
   22d3c:	bne	233c0 <__flatcc_fb_gen_c_verifier@@Base+0x3194>
   22d40:	ldr	r3, [sp, #52]	; 0x34
   22d44:	cmp	r3, #0
   22d48:	bne	2346c <__flatcc_fb_gen_c_verifier@@Base+0x3240>
   22d4c:	ldr	r3, [sp, #20]
   22d50:	cmp	r3, #0
   22d54:	bne	23540 <__flatcc_fb_gen_c_verifier@@Base+0x3314>
   22d58:	ldr	r3, [sp, #84]	; 0x54
   22d5c:	cmp	r3, #0
   22d60:	beq	234b0 <__flatcc_fb_gen_c_verifier@@Base+0x3284>
   22d64:	ldr	r3, [sp, #100]	; 0x64
   22d68:	ldrd	r0, [r7, #96]	; 0x60
   22d6c:	cmp	r3, #0
   22d70:	ldr	r3, [sp, #32]
   22d74:	ldr	r2, [r7, #112]	; 0x70
   22d78:	str	r3, [sp, #8]
   22d7c:	strd	r0, [sp]
   22d80:	beq	235b0 <__flatcc_fb_gen_c_verifier@@Base+0x3384>
   22d84:	ldr	r1, [pc, #3172]	; 239f0 <__flatcc_fb_gen_c_verifier@@Base+0x37c4>
   22d88:	ldr	r3, [sp, #20]
   22d8c:	add	r1, pc, r1
   22d90:	mov	r0, r4
   22d94:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22d98:	cmp	r5, #0
   22d9c:	beq	22dec <__flatcc_fb_gen_c_verifier@@Base+0x2bc0>
   22da0:	cmp	sl, #0
   22da4:	beq	23404 <__flatcc_fb_gen_c_verifier@@Base+0x31d8>
   22da8:	ldr	r1, [pc, #3140]	; 239f4 <__flatcc_fb_gen_c_verifier@@Base+0x37c8>
   22dac:	mov	r0, r4
   22db0:	add	r1, pc, r1
   22db4:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22db8:	ldr	r3, [r4, #220]	; 0xdc
   22dbc:	cmp	r3, #0
   22dc0:	beq	2348c <__flatcc_fb_gen_c_verifier@@Base+0x3260>
   22dc4:	ldr	r1, [pc, #3116]	; 239f8 <__flatcc_fb_gen_c_verifier@@Base+0x37cc>
   22dc8:	sub	r3, r3, #1
   22dcc:	add	r1, pc, r1
   22dd0:	mov	r0, r4
   22dd4:	str	r3, [r4, #220]	; 0xdc
   22dd8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22ddc:	ldr	r1, [pc, #3096]	; 239fc <__flatcc_fb_gen_c_verifier@@Base+0x37d0>
   22de0:	mov	r0, r4
   22de4:	add	r1, pc, r1
   22de8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22dec:	cmp	fp, #1
   22df0:	bne	232ec <__flatcc_fb_gen_c_verifier@@Base+0x30c0>
   22df4:	mov	fp, #2
   22df8:	ldr	r3, [r4, #220]	; 0xdc
   22dfc:	cmp	r3, #0
   22e00:	beq	238b0 <__flatcc_fb_gen_c_verifier@@Base+0x3684>
   22e04:	ldr	r1, [pc, #3060]	; 23a00 <__flatcc_fb_gen_c_verifier@@Base+0x37d4>
   22e08:	sub	r3, r3, #1
   22e0c:	str	r3, [r4, #220]	; 0xdc
   22e10:	add	r1, pc, r1
   22e14:	mov	r0, r4
   22e18:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22e1c:	ldr	r1, [r7, #104]	; 0x68
   22e20:	ldr	r3, [r4, #220]	; 0xdc
   22e24:	ldr	r2, [sp, #32]
   22e28:	add	r3, r3, #1
   22e2c:	ldr	r0, [r1, #12]
   22e30:	str	r3, [r4, #220]	; 0xdc
   22e34:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   22e38:	ldr	r3, [r7, #104]	; 0x68
   22e3c:	mov	r5, #0
   22e40:	ldr	r1, [pc, #3004]	; 23a04 <__flatcc_fb_gen_c_verifier@@Base+0x37d8>
   22e44:	ldrh	r3, [r3, #8]
   22e48:	add	r1, pc, r1
   22e4c:	mov	r0, r4
   22e50:	cmp	r3, r5
   22e54:	ldr	r3, [sp, #20]
   22e58:	moveq	r3, #1
   22e5c:	str	r3, [sp, #20]
   22e60:	ldr	r3, [sp, #576]	; 0x240
   22e64:	movne	r9, #1
   22e68:	orr	sl, r3, r9
   22e6c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22e70:	ldr	r3, [sp, #16]
   22e74:	mov	r6, r5
   22e78:	cmp	r3, #1
   22e7c:	bne	22d18 <__flatcc_fb_gen_c_verifier@@Base+0x2aec>
   22e80:	ldr	r1, [pc, #2944]	; 23a08 <__flatcc_fb_gen_c_verifier@@Base+0x37dc>
   22e84:	ldrd	r2, [r7, #80]	; 0x50
   22e88:	add	r1, pc, r1
   22e8c:	mov	r0, r4
   22e90:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22e94:	cmp	r6, #0
   22e98:	beq	22d2c <__flatcc_fb_gen_c_verifier@@Base+0x2b00>
   22e9c:	ldr	r1, [pc, #2920]	; 23a0c <__flatcc_fb_gen_c_verifier@@Base+0x37e0>
   22ea0:	mov	r2, r8
   22ea4:	add	r1, pc, r1
   22ea8:	mov	r0, r4
   22eac:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22eb0:	ldr	r1, [pc, #2904]	; 23a10 <__flatcc_fb_gen_c_verifier@@Base+0x37e4>
   22eb4:	mov	r0, r4
   22eb8:	add	r1, pc, r1
   22ebc:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22ec0:	ldr	r3, [r4, #220]	; 0xdc
   22ec4:	ldr	r1, [pc, #2888]	; 23a14 <__flatcc_fb_gen_c_verifier@@Base+0x37e8>
   22ec8:	add	r3, r3, #1
   22ecc:	str	r3, [r4, #220]	; 0xdc
   22ed0:	mov	r2, r8
   22ed4:	add	r1, pc, r1
   22ed8:	mov	r0, r4
   22edc:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22ee0:	ldr	r1, [pc, #2864]	; 23a18 <__flatcc_fb_gen_c_verifier@@Base+0x37ec>
   22ee4:	mov	r0, r4
   22ee8:	add	r1, pc, r1
   22eec:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22ef0:	ldr	r3, [r4, #220]	; 0xdc
   22ef4:	cmp	r3, #0
   22ef8:	beq	2388c <__flatcc_fb_gen_c_verifier@@Base+0x3660>
   22efc:	ldr	r1, [pc, #2840]	; 23a1c <__flatcc_fb_gen_c_verifier@@Base+0x37f0>
   22f00:	sub	r3, r3, #1
   22f04:	str	r3, [r4, #220]	; 0xdc
   22f08:	add	r1, pc, r1
   22f0c:	mov	r0, r4
   22f10:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   22f14:	ldr	r3, [sp, #68]	; 0x44
   22f18:	ldr	r2, [sp, #64]	; 0x40
   22f1c:	orr	r6, r3, r5
   22f20:	ldr	r3, [sp, #44]	; 0x2c
   22f24:	orr	r3, r3, r2
   22f28:	orrs	r3, r3, r6
   22f2c:	bne	2351c <__flatcc_fb_gen_c_verifier@@Base+0x32f0>
   22f30:	ldrh	r3, [r7, #56]	; 0x38
   22f34:	sub	r3, r3, #3
   22f38:	cmp	r3, #3
   22f3c:	addls	pc, pc, r3, lsl #2
   22f40:	b	23558 <__flatcc_fb_gen_c_verifier@@Base+0x332c>
   22f44:	b	2335c <__flatcc_fb_gen_c_verifier@@Base+0x3130>
   22f48:	b	2334c <__flatcc_fb_gen_c_verifier@@Base+0x3120>
   22f4c:	b	23264 <__flatcc_fb_gen_c_verifier@@Base+0x3038>
   22f50:	b	23264 <__flatcc_fb_gen_c_verifier@@Base+0x3038>
   22f54:	ldr	r3, [r7, #16]
   22f58:	mov	fp, #0
   22f5c:	str	fp, [sp, #64]	; 0x40
   22f60:	str	fp, [sp, #44]	; 0x2c
   22f64:	str	r3, [sp, #24]
   22f68:	mov	r9, #0
   22f6c:	and	r3, r5, #1
   22f70:	str	r9, [sp, #20]
   22f74:	str	r9, [sp, #40]	; 0x28
   22f78:	str	r9, [sp, #56]	; 0x38
   22f7c:	str	r9, [sp, #52]	; 0x34
   22f80:	str	r3, [sp, #48]	; 0x30
   22f84:	mov	r6, #1
   22f88:	b	22bbc <__flatcc_fb_gen_c_verifier@@Base+0x2990>
   22f8c:	ldrh	r3, [r7, #72]	; 0x48
   22f90:	ldr	r1, [r7, #104]	; 0x68
   22f94:	ldr	r0, [r7, #16]
   22f98:	adds	fp, r1, #0
   22f9c:	movne	fp, #1
   22fa0:	ands	r1, r3, #3072	; 0xc00
   22fa4:	str	r1, [sp, #52]	; 0x34
   22fa8:	and	r1, r3, #1024	; 0x400
   22fac:	and	r3, r3, #2048	; 0x800
   22fb0:	str	r0, [sp, #24]
   22fb4:	str	r1, [sp, #44]	; 0x2c
   22fb8:	str	r3, [sp, #64]	; 0x40
   22fbc:	beq	22f68 <__flatcc_fb_gen_c_verifier@@Base+0x2d3c>
   22fc0:	ldr	r3, [sp, #24]
   22fc4:	eor	r2, r2, #1
   22fc8:	cmp	r3, #4
   22fcc:	orrne	r2, r2, #1
   22fd0:	cmp	r2, #0
   22fd4:	str	r2, [sp, #48]	; 0x30
   22fd8:	bne	23968 <__flatcc_fb_gen_c_verifier@@Base+0x373c>
   22fdc:	ldr	r3, [sp, #576]	; 0x240
   22fe0:	ldr	r5, [sp, #48]	; 0x30
   22fe4:	mov	r2, #4
   22fe8:	cmp	r3, #0
   22fec:	mov	r9, r5
   22ff0:	str	r5, [sp, #20]
   22ff4:	str	r5, [sp, #40]	; 0x28
   22ff8:	str	r5, [sp, #56]	; 0x38
   22ffc:	str	r2, [sp, #24]
   23000:	mov	fp, r5
   23004:	mov	r6, r5
   23008:	bne	22bc8 <__flatcc_fb_gen_c_verifier@@Base+0x299c>
   2300c:	ldr	r3, [sp, #576]	; 0x240
   23010:	str	r3, [sp, #84]	; 0x54
   23014:	ldr	r3, [sp, #48]	; 0x30
   23018:	ldr	r2, [sp, #84]	; 0x54
   2301c:	ands	r3, r3, r2
   23020:	str	r3, [sp, #48]	; 0x30
   23024:	streq	r3, [sp, #108]	; 0x6c
   23028:	streq	r3, [sp, #100]	; 0x64
   2302c:	beq	22bec <__flatcc_fb_gen_c_verifier@@Base+0x29c0>
   23030:	mov	r3, #0
   23034:	str	r3, [sp, #48]	; 0x30
   23038:	str	r3, [sp, #108]	; 0x6c
   2303c:	mov	r5, r3
   23040:	cmp	fp, #1
   23044:	mov	r3, #1
   23048:	str	r3, [sp, #100]	; 0x64
   2304c:	bne	22bf4 <__flatcc_fb_gen_c_verifier@@Base+0x29c8>
   23050:	ldr	r1, [pc, #2504]	; 23a20 <__flatcc_fb_gen_c_verifier@@Base+0x37f4>
   23054:	mov	r0, r4
   23058:	add	r1, pc, r1
   2305c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23060:	ldr	r3, [r4, #220]	; 0xdc
   23064:	add	r3, r3, #1
   23068:	str	r3, [r4, #220]	; 0xdc
   2306c:	b	22bf4 <__flatcc_fb_gen_c_verifier@@Base+0x29c8>
   23070:	ldr	r1, [r7, #16]
   23074:	ldr	r2, [sp, #32]
   23078:	ldr	r0, [r1, #12]
   2307c:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   23080:	ldr	r2, [r7, #16]
   23084:	ldrh	r3, [r2, #8]
   23088:	clz	r1, r3
   2308c:	lsr	r1, r1, #5
   23090:	str	r1, [sp, #20]
   23094:	sub	r1, r3, #3
   23098:	clz	r1, r1
   2309c:	lsr	r1, r1, #5
   230a0:	str	r1, [sp, #56]	; 0x38
   230a4:	ldr	r1, [sp, #576]	; 0x240
   230a8:	sub	r9, r3, #1
   230ac:	cmp	r1, #0
   230b0:	cmpeq	r3, #4
   230b4:	clz	r9, r9
   230b8:	moveq	r1, #1
   230bc:	lsr	r9, r9, #5
   230c0:	movne	r1, #0
   230c4:	beq	237cc <__flatcc_fb_gen_c_verifier@@Base+0x35a0>
   230c8:	cmp	r3, #3
   230cc:	beq	23800 <__flatcc_fb_gen_c_verifier@@Base+0x35d4>
   230d0:	str	r1, [sp, #24]
   230d4:	mov	r6, r1
   230d8:	str	r1, [sp, #56]	; 0x38
   230dc:	str	r1, [sp, #40]	; 0x28
   230e0:	b	22ba0 <__flatcc_fb_gen_c_verifier@@Base+0x2974>
   230e4:	mov	r3, #0
   230e8:	str	r3, [sp, #24]
   230ec:	mov	r9, r3
   230f0:	str	r3, [sp, #20]
   230f4:	mov	r6, r3
   230f8:	str	r3, [sp, #56]	; 0x38
   230fc:	str	r3, [sp, #40]	; 0x28
   23100:	b	22ba0 <__flatcc_fb_gen_c_verifier@@Base+0x2974>
   23104:	ldr	r3, [sp, #24]
   23108:	sub	r3, r3, #1
   2310c:	cmp	r3, #10
   23110:	addls	pc, pc, r3, lsl #2
   23114:	b	2369c <__flatcc_fb_gen_c_verifier@@Base+0x3470>
   23118:	b	23240 <__flatcc_fb_gen_c_verifier@@Base+0x3014>
   2311c:	b	23794 <__flatcc_fb_gen_c_verifier@@Base+0x3568>
   23120:	b	23180 <__flatcc_fb_gen_c_verifier@@Base+0x2f54>
   23124:	b	2377c <__flatcc_fb_gen_c_verifier@@Base+0x3550>
   23128:	b	23144 <__flatcc_fb_gen_c_verifier@@Base+0x2f18>
   2312c:	b	23764 <__flatcc_fb_gen_c_verifier@@Base+0x3538>
   23130:	b	2374c <__flatcc_fb_gen_c_verifier@@Base+0x3520>
   23134:	b	23734 <__flatcc_fb_gen_c_verifier@@Base+0x3508>
   23138:	b	2371c <__flatcc_fb_gen_c_verifier@@Base+0x34f0>
   2313c:	b	23708 <__flatcc_fb_gen_c_verifier@@Base+0x34dc>
   23140:	b	236f4 <__flatcc_fb_gen_c_verifier@@Base+0x34c8>
   23144:	cmp	r5, #0
   23148:	beq	235c8 <__flatcc_fb_gen_c_verifier@@Base+0x339c>
   2314c:	ldr	r3, [pc, #2256]	; 23a24 <__flatcc_fb_gen_c_verifier@@Base+0x37f8>
   23150:	ldr	r8, [pc, #2256]	; 23a28 <__flatcc_fb_gen_c_verifier@@Base+0x37fc>
   23154:	add	r3, pc, r3
   23158:	cmp	sl, #0
   2315c:	mov	r6, r5
   23160:	add	r8, pc, r8
   23164:	str	r3, [sp, #36]	; 0x24
   23168:	bne	22c78 <__flatcc_fb_gen_c_verifier@@Base+0x2a4c>
   2316c:	ldr	r1, [pc, #2232]	; 23a2c <__flatcc_fb_gen_c_verifier@@Base+0x3800>
   23170:	mov	r0, r4
   23174:	add	r1, pc, r1
   23178:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2317c:	b	22cb4 <__flatcc_fb_gen_c_verifier@@Base+0x2a88>
   23180:	ldr	r8, [pc, #2216]	; 23a30 <__flatcc_fb_gen_c_verifier@@Base+0x3804>
   23184:	ldr	r3, [pc, #2216]	; 23a34 <__flatcc_fb_gen_c_verifier@@Base+0x3808>
   23188:	add	r8, pc, r8
   2318c:	add	r3, pc, r3
   23190:	str	r3, [sp, #36]	; 0x24
   23194:	cmp	r5, #0
   23198:	bne	2325c <__flatcc_fb_gen_c_verifier@@Base+0x3030>
   2319c:	mov	r6, r5
   231a0:	ldr	r2, [sp, #36]	; 0x24
   231a4:	ldr	r1, [sp, #76]	; 0x4c
   231a8:	mov	r0, r4
   231ac:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   231b0:	ldr	r1, [sp, #80]	; 0x50
   231b4:	mov	r0, r4
   231b8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   231bc:	ldr	r3, [r4, #220]	; 0xdc
   231c0:	ldr	r2, [sp, #56]	; 0x38
   231c4:	add	r3, r3, #2
   231c8:	cmp	r2, #0
   231cc:	str	r3, [r4, #220]	; 0xdc
   231d0:	beq	233d4 <__flatcc_fb_gen_c_verifier@@Base+0x31a8>
   231d4:	ldr	r1, [sp, #96]	; 0x60
   231d8:	ldr	r2, [sp, #32]
   231dc:	mov	r0, r4
   231e0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   231e4:	ldr	r2, [r4, #208]	; 0xd0
   231e8:	ldr	r1, [pc, #2120]	; 23a38 <__flatcc_fb_gen_c_verifier@@Base+0x380c>
   231ec:	ldr	r3, [sp, #60]	; 0x3c
   231f0:	add	r1, pc, r1
   231f4:	ldr	r2, [r2, #160]	; 0xa0
   231f8:	mov	r0, r4
   231fc:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23200:	ldr	r3, [r4, #208]	; 0xd0
   23204:	ldr	r1, [pc, #2096]	; 23a3c <__flatcc_fb_gen_c_verifier@@Base+0x3810>
   23208:	mov	r0, r4
   2320c:	add	r1, pc, r1
   23210:	ldr	r2, [r3, #160]	; 0xa0
   23214:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23218:	ldr	r3, [r4, #220]	; 0xdc
   2321c:	cmp	r3, #0
   23220:	beq	23868 <__flatcc_fb_gen_c_verifier@@Base+0x363c>
   23224:	cmp	r3, #1
   23228:	beq	23860 <__flatcc_fb_gen_c_verifier@@Base+0x3634>
   2322c:	sub	r3, r3, #2
   23230:	mov	r5, r6
   23234:	str	r3, [r4, #220]	; 0xdc
   23238:	mov	r6, #1
   2323c:	b	22cec <__flatcc_fb_gen_c_verifier@@Base+0x2ac0>
   23240:	ldr	r3, [pc, #2040]	; 23a40 <__flatcc_fb_gen_c_verifier@@Base+0x3814>
   23244:	ldr	r8, [pc, #2040]	; 23a44 <__flatcc_fb_gen_c_verifier@@Base+0x3818>
   23248:	add	r3, pc, r3
   2324c:	cmp	r5, #0
   23250:	str	r3, [sp, #36]	; 0x24
   23254:	add	r8, pc, r8
   23258:	beq	2319c <__flatcc_fb_gen_c_verifier@@Base+0x2f70>
   2325c:	mov	r6, r5
   23260:	b	22c70 <__flatcc_fb_gen_c_verifier@@Base+0x2a44>
   23264:	ldr	r1, [pc, #2012]	; 23a48 <__flatcc_fb_gen_c_verifier@@Base+0x381c>
   23268:	ldrd	r2, [r7, #48]	; 0x30
   2326c:	add	r1, pc, r1
   23270:	mov	r0, r4
   23274:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23278:	ldr	r3, [r4, #220]	; 0xdc
   2327c:	add	r3, r3, #1
   23280:	str	r3, [r4, #220]	; 0xdc
   23284:	ldrd	r0, [r7, #88]	; 0x58
   23288:	ldrsh	ip, [r7, #74]	; 0x4a
   2328c:	ldrd	r2, [r7, #96]	; 0x60
   23290:	strd	r0, [sp]
   23294:	ldr	r1, [pc, #1968]	; 23a4c <__flatcc_fb_gen_c_verifier@@Base+0x3820>
   23298:	mov	r0, r4
   2329c:	add	r1, pc, r1
   232a0:	str	ip, [sp, #8]
   232a4:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   232a8:	ldr	r1, [pc, #1952]	; 23a50 <__flatcc_fb_gen_c_verifier@@Base+0x3824>
   232ac:	mov	r3, r8
   232b0:	mov	r2, r4
   232b4:	add	r1, pc, r1
   232b8:	mov	r0, r4
   232bc:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   232c0:	ldr	r3, [r4, #220]	; 0xdc
   232c4:	cmp	r3, #0
   232c8:	beq	23944 <__flatcc_fb_gen_c_verifier@@Base+0x3718>
   232cc:	ldr	r1, [pc, #1920]	; 23a54 <__flatcc_fb_gen_c_verifier@@Base+0x3828>
   232d0:	sub	r3, r3, #1
   232d4:	str	r3, [r4, #220]	; 0xdc
   232d8:	add	r1, pc, r1
   232dc:	mov	r0, r4
   232e0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   232e4:	cmp	fp, #1
   232e8:	beq	22df4 <__flatcc_fb_gen_c_verifier@@Base+0x2bc8>
   232ec:	cmp	fp, #2
   232f0:	beq	23818 <__flatcc_fb_gen_c_verifier@@Base+0x35ec>
   232f4:	ldr	r2, [sp, #64]	; 0x40
   232f8:	ldr	r3, [sp, #44]	; 0x2c
   232fc:	orr	r3, r3, r2
   23300:	ldr	r2, [sp, #40]	; 0x28
   23304:	orr	r3, r3, r2
   23308:	ldr	r2, [sp, #20]
   2330c:	orr	r3, r3, fp
   23310:	orr	r3, r3, r2
   23314:	orrs	r3, r3, r5
   23318:	beq	23340 <__flatcc_fb_gen_c_verifier@@Base+0x3114>
   2331c:	ldr	r1, [pc, #1844]	; 23a58 <__flatcc_fb_gen_c_verifier@@Base+0x382c>
   23320:	mov	r0, r4
   23324:	add	r1, pc, r1
   23328:	ldrd	r2, [r7, #96]	; 0x60
   2332c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23330:	ldr	r1, [pc, #1828]	; 23a5c <__flatcc_fb_gen_c_verifier@@Base+0x3830>
   23334:	mov	r0, r4
   23338:	add	r1, pc, r1
   2333c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23340:	mov	r0, #0
   23344:	add	sp, sp, #540	; 0x21c
   23348:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2334c:	ldr	r1, [pc, #1804]	; 23a60 <__flatcc_fb_gen_c_verifier@@Base+0x3834>
   23350:	ldrd	r2, [r7, #48]	; 0x30
   23354:	add	r1, pc, r1
   23358:	b	23270 <__flatcc_fb_gen_c_verifier@@Base+0x3044>
   2335c:	ldr	r1, [pc, #1792]	; 23a64 <__flatcc_fb_gen_c_verifier@@Base+0x3838>
   23360:	ldrd	r2, [r7, #48]	; 0x30
   23364:	add	r1, pc, r1
   23368:	mov	r0, r4
   2336c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23370:	ldr	r3, [r4, #220]	; 0xdc
   23374:	add	r3, r3, #1
   23378:	str	r3, [r4, #220]	; 0xdc
   2337c:	b	23284 <__flatcc_fb_gen_c_verifier@@Base+0x3058>
   23380:	ldrd	r0, [r7, #88]	; 0x58
   23384:	ldrh	ip, [r7, #74]	; 0x4a
   23388:	ldrd	r2, [r7, #96]	; 0x60
   2338c:	strd	r0, [sp]
   23390:	ldr	r1, [pc, #1744]	; 23a68 <__flatcc_fb_gen_c_verifier@@Base+0x383c>
   23394:	str	ip, [sp, #8]
   23398:	add	r1, pc, r1
   2339c:	mov	r0, r4
   233a0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   233a4:	b	22d24 <__flatcc_fb_gen_c_verifier@@Base+0x2af8>
   233a8:	ldr	r1, [pc, #1724]	; 23a6c <__flatcc_fb_gen_c_verifier@@Base+0x3840>
   233ac:	ldr	r2, [sp, #32]
   233b0:	add	r1, pc, r1
   233b4:	mov	r0, r4
   233b8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   233bc:	b	22d98 <__flatcc_fb_gen_c_verifier@@Base+0x2b6c>
   233c0:	ldr	r1, [pc, #1704]	; 23a70 <__flatcc_fb_gen_c_verifier@@Base+0x3844>
   233c4:	mov	r0, r4
   233c8:	add	r1, pc, r1
   233cc:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   233d0:	b	22d98 <__flatcc_fb_gen_c_verifier@@Base+0x2b6c>
   233d4:	ldr	r2, [r4, #208]	; 0xd0
   233d8:	ldr	r1, [sp, #88]	; 0x58
   233dc:	ldr	r3, [sp, #60]	; 0x3c
   233e0:	mov	r0, r4
   233e4:	ldr	r2, [r2, #160]	; 0xa0
   233e8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   233ec:	ldr	r3, [r4, #208]	; 0xd0
   233f0:	ldr	r1, [sp, #92]	; 0x5c
   233f4:	mov	r0, r4
   233f8:	ldr	r2, [r3, #160]	; 0xa0
   233fc:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23400:	b	23218 <__flatcc_fb_gen_c_verifier@@Base+0x2fec>
   23404:	ldr	r1, [pc, #1640]	; 23a74 <__flatcc_fb_gen_c_verifier@@Base+0x3848>
   23408:	mov	r0, r4
   2340c:	add	r1, pc, r1
   23410:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23414:	ldr	r1, [pc, #1628]	; 23a78 <__flatcc_fb_gen_c_verifier@@Base+0x384c>
   23418:	mov	r0, r4
   2341c:	add	r1, pc, r1
   23420:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23424:	ldr	r1, [pc, #1616]	; 23a7c <__flatcc_fb_gen_c_verifier@@Base+0x3850>
   23428:	mov	r0, r4
   2342c:	add	r1, pc, r1
   23430:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23434:	ldr	r3, [r4, #220]	; 0xdc
   23438:	cmp	r3, #0
   2343c:	beq	2348c <__flatcc_fb_gen_c_verifier@@Base+0x3260>
   23440:	ldr	r1, [pc, #1592]	; 23a80 <__flatcc_fb_gen_c_verifier@@Base+0x3854>
   23444:	sub	r3, r3, #1
   23448:	mov	r0, r4
   2344c:	str	r3, [r4, #220]	; 0xdc
   23450:	add	r1, pc, r1
   23454:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23458:	ldr	r1, [pc, #1572]	; 23a84 <__flatcc_fb_gen_c_verifier@@Base+0x3858>
   2345c:	mov	r0, r4
   23460:	add	r1, pc, r1
   23464:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23468:	b	22dec <__flatcc_fb_gen_c_verifier@@Base+0x2bc0>
   2346c:	ldr	r1, [pc, #1556]	; 23a88 <__flatcc_fb_gen_c_verifier@@Base+0x385c>
   23470:	ldr	r3, [sp, #44]	; 0x2c
   23474:	add	r1, pc, r1
   23478:	clz	r2, r3
   2347c:	mov	r0, r4
   23480:	lsr	r2, r2, #5
   23484:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23488:	b	22d98 <__flatcc_fb_gen_c_verifier@@Base+0x2b6c>
   2348c:	ldr	r3, [pc, #1528]	; 23a8c <__flatcc_fb_gen_c_verifier@@Base+0x3860>
   23490:	ldr	r1, [pc, #1528]	; 23a90 <__flatcc_fb_gen_c_verifier@@Base+0x3864>
   23494:	ldr	r0, [pc, #1528]	; 23a94 <__flatcc_fb_gen_c_verifier@@Base+0x3868>
   23498:	add	r3, pc, r3
   2349c:	ldr	r2, [pc, #1524]	; 23a98 <__flatcc_fb_gen_c_verifier@@Base+0x386c>
   234a0:	add	r3, r3, #176	; 0xb0
   234a4:	add	r1, pc, r1
   234a8:	add	r0, pc, r0
   234ac:	bl	14030 <__assert_fail@plt>
   234b0:	ldr	r3, [sp, #48]	; 0x30
   234b4:	cmp	r3, #0
   234b8:	bne	235e0 <__flatcc_fb_gen_c_verifier@@Base+0x33b4>
   234bc:	cmp	r5, #0
   234c0:	bne	22da0 <__flatcc_fb_gen_c_verifier@@Base+0x2b74>
   234c4:	ldr	r2, [pc, #1488]	; 23a9c <__flatcc_fb_gen_c_verifier@@Base+0x3870>
   234c8:	ldr	r1, [sp, #104]	; 0x68
   234cc:	ldr	r3, [pc, #1484]	; 23aa0 <__flatcc_fb_gen_c_verifier@@Base+0x3874>
   234d0:	ldr	r4, [pc, #1484]	; 23aa4 <__flatcc_fb_gen_c_verifier@@Base+0x3878>
   234d4:	ldr	r1, [r1, r2]
   234d8:	add	r3, pc, r3
   234dc:	str	r3, [sp]
   234e0:	ldr	r0, [r1]
   234e4:	ldr	r1, [pc, #1468]	; 23aa8 <__flatcc_fb_gen_c_verifier@@Base+0x387c>
   234e8:	add	r4, pc, r4
   234ec:	mov	r2, r4
   234f0:	mov	r3, #636	; 0x27c
   234f4:	add	r1, pc, r1
   234f8:	bl	13f7c <fprintf@plt>
   234fc:	ldr	r3, [pc, #1448]	; 23aac <__flatcc_fb_gen_c_verifier@@Base+0x3880>
   23500:	ldr	r0, [pc, #1448]	; 23ab0 <__flatcc_fb_gen_c_verifier@@Base+0x3884>
   23504:	add	r3, pc, r3
   23508:	mov	r1, r4
   2350c:	add	r3, r3, #176	; 0xb0
   23510:	mov	r2, #636	; 0x27c
   23514:	add	r0, pc, r0
   23518:	bl	14030 <__assert_fail@plt>
   2351c:	ldr	r1, [pc, #1424]	; 23ab4 <__flatcc_fb_gen_c_verifier@@Base+0x3888>
   23520:	mov	r3, r8
   23524:	mov	r2, r4
   23528:	add	r1, pc, r1
   2352c:	mov	r0, r4
   23530:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23534:	cmp	r6, #0
   23538:	bne	22d98 <__flatcc_fb_gen_c_verifier@@Base+0x2b6c>
   2353c:	b	232c0 <__flatcc_fb_gen_c_verifier@@Base+0x3094>
   23540:	ldr	r1, [pc, #1392]	; 23ab8 <__flatcc_fb_gen_c_verifier@@Base+0x388c>
   23544:	ldr	r2, [sp, #32]
   23548:	add	r1, pc, r1
   2354c:	mov	r0, r4
   23550:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23554:	b	22d98 <__flatcc_fb_gen_c_verifier@@Base+0x2b6c>
   23558:	ldr	r2, [pc, #1340]	; 23a9c <__flatcc_fb_gen_c_verifier@@Base+0x3870>
   2355c:	ldr	r1, [sp, #104]	; 0x68
   23560:	ldr	r3, [pc, #1364]	; 23abc <__flatcc_fb_gen_c_verifier@@Base+0x3890>
   23564:	ldr	r4, [pc, #1364]	; 23ac0 <__flatcc_fb_gen_c_verifier@@Base+0x3894>
   23568:	ldr	r1, [r1, r2]
   2356c:	add	r3, pc, r3
   23570:	str	r3, [sp]
   23574:	ldr	r0, [r1]
   23578:	ldr	r1, [pc, #1348]	; 23ac4 <__flatcc_fb_gen_c_verifier@@Base+0x3898>
   2357c:	add	r4, pc, r4
   23580:	mov	r2, r4
   23584:	ldr	r3, [pc, #1340]	; 23ac8 <__flatcc_fb_gen_c_verifier@@Base+0x389c>
   23588:	add	r1, pc, r1
   2358c:	bl	13f7c <fprintf@plt>
   23590:	ldr	r3, [pc, #1332]	; 23acc <__flatcc_fb_gen_c_verifier@@Base+0x38a0>
   23594:	ldr	r0, [pc, #1332]	; 23ad0 <__flatcc_fb_gen_c_verifier@@Base+0x38a4>
   23598:	add	r3, pc, r3
   2359c:	mov	r1, r4
   235a0:	add	r3, r3, #176	; 0xb0
   235a4:	ldr	r2, [pc, #1308]	; 23ac8 <__flatcc_fb_gen_c_verifier@@Base+0x389c>
   235a8:	add	r0, pc, r0
   235ac:	bl	14030 <__assert_fail@plt>
   235b0:	ldr	r1, [pc, #1308]	; 23ad4 <__flatcc_fb_gen_c_verifier@@Base+0x38a8>
   235b4:	ldr	r3, [sp, #100]	; 0x64
   235b8:	add	r1, pc, r1
   235bc:	mov	r0, r4
   235c0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   235c4:	b	22d98 <__flatcc_fb_gen_c_verifier@@Base+0x2b6c>
   235c8:	ldr	r3, [pc, #1288]	; 23ad8 <__flatcc_fb_gen_c_verifier@@Base+0x38ac>
   235cc:	ldr	r8, [pc, #1288]	; 23adc <__flatcc_fb_gen_c_verifier@@Base+0x38b0>
   235d0:	add	r3, pc, r3
   235d4:	add	r8, pc, r8
   235d8:	str	r3, [sp, #36]	; 0x24
   235dc:	b	2319c <__flatcc_fb_gen_c_verifier@@Base+0x2f70>
   235e0:	ldr	r1, [pc, #1272]	; 23ae0 <__flatcc_fb_gen_c_verifier@@Base+0x38b4>
   235e4:	mov	r0, r4
   235e8:	add	r1, pc, r1
   235ec:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   235f0:	ldr	r3, [r4, #220]	; 0xdc
   235f4:	ldr	r1, [pc, #1256]	; 23ae4 <__flatcc_fb_gen_c_verifier@@Base+0x38b8>
   235f8:	add	r3, r3, #2
   235fc:	ldr	r2, [sp, #32]
   23600:	str	r3, [r4, #220]	; 0xdc
   23604:	add	r1, pc, r1
   23608:	mov	r0, r4
   2360c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23610:	ldr	r2, [r4, #208]	; 0xd0
   23614:	ldr	r1, [pc, #1228]	; 23ae8 <__flatcc_fb_gen_c_verifier@@Base+0x38bc>
   23618:	ldr	r3, [sp, #60]	; 0x3c
   2361c:	add	r1, pc, r1
   23620:	ldr	r2, [r2, #160]	; 0xa0
   23624:	mov	r0, r4
   23628:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2362c:	ldr	r3, [r4, #208]	; 0xd0
   23630:	ldr	r1, [pc, #1204]	; 23aec <__flatcc_fb_gen_c_verifier@@Base+0x38c0>
   23634:	mov	r0, r4
   23638:	ldr	r2, [r3, #160]	; 0xa0
   2363c:	add	r1, pc, r1
   23640:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23644:	ldr	r3, [r4, #220]	; 0xdc
   23648:	cmp	r3, #0
   2364c:	beq	23900 <__flatcc_fb_gen_c_verifier@@Base+0x36d4>
   23650:	cmp	r3, #1
   23654:	beq	238f8 <__flatcc_fb_gen_c_verifier@@Base+0x36cc>
   23658:	ldr	r2, [sp, #108]	; 0x6c
   2365c:	sub	r3, r3, #2
   23660:	cmp	r2, #0
   23664:	str	r3, [r4, #220]	; 0xdc
   23668:	ldrd	r0, [r7, #96]	; 0x60
   2366c:	ldr	r2, [r7, #112]	; 0x70
   23670:	ldr	r3, [sp, #32]
   23674:	beq	237ac <__flatcc_fb_gen_c_verifier@@Base+0x3580>
   23678:	strd	r0, [sp]
   2367c:	ldr	r1, [pc, #1132]	; 23af0 <__flatcc_fb_gen_c_verifier@@Base+0x38c4>
   23680:	str	r3, [sp, #12]
   23684:	str	r3, [sp, #8]
   23688:	add	r1, pc, r1
   2368c:	mov	r3, #0
   23690:	mov	r0, r4
   23694:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23698:	b	22d98 <__flatcc_fb_gen_c_verifier@@Base+0x2b6c>
   2369c:	ldr	r2, [pc, #1016]	; 23a9c <__flatcc_fb_gen_c_verifier@@Base+0x3870>
   236a0:	ldr	r1, [sp, #104]	; 0x68
   236a4:	ldr	r3, [pc, #1096]	; 23af4 <__flatcc_fb_gen_c_verifier@@Base+0x38c8>
   236a8:	ldr	r4, [pc, #1096]	; 23af8 <__flatcc_fb_gen_c_verifier@@Base+0x38cc>
   236ac:	ldr	r1, [r1, r2]
   236b0:	add	r3, pc, r3
   236b4:	str	r3, [sp]
   236b8:	ldr	r0, [r1]
   236bc:	ldr	r1, [pc, #1080]	; 23afc <__flatcc_fb_gen_c_verifier@@Base+0x38d0>
   236c0:	add	r4, pc, r4
   236c4:	mov	r2, r4
   236c8:	mov	r3, #96	; 0x60
   236cc:	add	r1, pc, r1
   236d0:	bl	13f7c <fprintf@plt>
   236d4:	ldr	r3, [pc, #1060]	; 23b00 <__flatcc_fb_gen_c_verifier@@Base+0x38d4>
   236d8:	ldr	r0, [pc, #1060]	; 23b04 <__flatcc_fb_gen_c_verifier@@Base+0x38d8>
   236dc:	add	r3, pc, r3
   236e0:	mov	r1, r4
   236e4:	add	r3, r3, #200	; 0xc8
   236e8:	mov	r2, #96	; 0x60
   236ec:	add	r0, pc, r0
   236f0:	bl	14030 <__assert_fail@plt>
   236f4:	ldr	r3, [pc, #1036]	; 23b08 <__flatcc_fb_gen_c_verifier@@Base+0x38dc>
   236f8:	add	r3, pc, r3
   236fc:	str	r3, [sp, #36]	; 0x24
   23700:	mov	r8, r3
   23704:	b	23194 <__flatcc_fb_gen_c_verifier@@Base+0x2f68>
   23708:	ldr	r3, [pc, #1020]	; 23b0c <__flatcc_fb_gen_c_verifier@@Base+0x38e0>
   2370c:	add	r3, pc, r3
   23710:	str	r3, [sp, #36]	; 0x24
   23714:	mov	r8, r3
   23718:	b	23194 <__flatcc_fb_gen_c_verifier@@Base+0x2f68>
   2371c:	ldr	r3, [pc, #1004]	; 23b10 <__flatcc_fb_gen_c_verifier@@Base+0x38e4>
   23720:	ldr	r8, [pc, #1004]	; 23b14 <__flatcc_fb_gen_c_verifier@@Base+0x38e8>
   23724:	add	r3, pc, r3
   23728:	str	r3, [sp, #36]	; 0x24
   2372c:	add	r8, pc, r8
   23730:	b	23194 <__flatcc_fb_gen_c_verifier@@Base+0x2f68>
   23734:	ldr	r3, [pc, #988]	; 23b18 <__flatcc_fb_gen_c_verifier@@Base+0x38ec>
   23738:	ldr	r8, [pc, #988]	; 23b1c <__flatcc_fb_gen_c_verifier@@Base+0x38f0>
   2373c:	add	r3, pc, r3
   23740:	str	r3, [sp, #36]	; 0x24
   23744:	add	r8, pc, r8
   23748:	b	23194 <__flatcc_fb_gen_c_verifier@@Base+0x2f68>
   2374c:	ldr	r3, [pc, #972]	; 23b20 <__flatcc_fb_gen_c_verifier@@Base+0x38f4>
   23750:	ldr	r8, [pc, #972]	; 23b24 <__flatcc_fb_gen_c_verifier@@Base+0x38f8>
   23754:	add	r3, pc, r3
   23758:	str	r3, [sp, #36]	; 0x24
   2375c:	add	r8, pc, r8
   23760:	b	23194 <__flatcc_fb_gen_c_verifier@@Base+0x2f68>
   23764:	ldr	r3, [pc, #956]	; 23b28 <__flatcc_fb_gen_c_verifier@@Base+0x38fc>
   23768:	ldr	r8, [pc, #956]	; 23b2c <__flatcc_fb_gen_c_verifier@@Base+0x3900>
   2376c:	add	r3, pc, r3
   23770:	str	r3, [sp, #36]	; 0x24
   23774:	add	r8, pc, r8
   23778:	b	23194 <__flatcc_fb_gen_c_verifier@@Base+0x2f68>
   2377c:	ldr	r3, [pc, #940]	; 23b30 <__flatcc_fb_gen_c_verifier@@Base+0x3904>
   23780:	ldr	r8, [pc, #940]	; 23b34 <__flatcc_fb_gen_c_verifier@@Base+0x3908>
   23784:	add	r3, pc, r3
   23788:	str	r3, [sp, #36]	; 0x24
   2378c:	add	r8, pc, r8
   23790:	b	23194 <__flatcc_fb_gen_c_verifier@@Base+0x2f68>
   23794:	ldr	r3, [pc, #924]	; 23b38 <__flatcc_fb_gen_c_verifier@@Base+0x390c>
   23798:	ldr	r8, [pc, #924]	; 23b3c <__flatcc_fb_gen_c_verifier@@Base+0x3910>
   2379c:	add	r3, pc, r3
   237a0:	str	r3, [sp, #36]	; 0x24
   237a4:	add	r8, pc, r8
   237a8:	b	23194 <__flatcc_fb_gen_c_verifier@@Base+0x2f68>
   237ac:	strd	r0, [sp]
   237b0:	ldr	r1, [pc, #904]	; 23b40 <__flatcc_fb_gen_c_verifier@@Base+0x3914>
   237b4:	str	r3, [sp, #8]
   237b8:	add	r1, pc, r1
   237bc:	mov	r3, #0
   237c0:	mov	r0, r4
   237c4:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   237c8:	b	22d98 <__flatcc_fb_gen_c_verifier@@Base+0x2b6c>
   237cc:	mov	r3, #0
   237d0:	str	r3, [sp, #40]	; 0x28
   237d4:	str	r3, [sp, #24]
   237d8:	str	r3, [sp, #52]	; 0x34
   237dc:	str	r3, [sp, #64]	; 0x40
   237e0:	str	r3, [sp, #44]	; 0x2c
   237e4:	mov	fp, r3
   237e8:	mov	r6, r3
   237ec:	and	r3, r5, #1
   237f0:	str	r3, [sp, #48]	; 0x30
   237f4:	mov	r3, #1
   237f8:	str	r3, [sp, #84]	; 0x54
   237fc:	b	23014 <__flatcc_fb_gen_c_verifier@@Base+0x2de8>
   23800:	ldr	r3, [r2, #40]	; 0x28
   23804:	mov	r6, #1
   23808:	str	r3, [sp, #24]
   2380c:	str	r1, [sp, #40]	; 0x28
   23810:	str	r6, [sp, #56]	; 0x38
   23814:	b	22ba0 <__flatcc_fb_gen_c_verifier@@Base+0x2974>
   23818:	ldr	r1, [pc, #804]	; 23b44 <__flatcc_fb_gen_c_verifier@@Base+0x3918>
   2381c:	mov	r0, r4
   23820:	add	r1, pc, r1
   23824:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23828:	ldr	r1, [pc, #792]	; 23b48 <__flatcc_fb_gen_c_verifier@@Base+0x391c>
   2382c:	mov	r0, r4
   23830:	add	r1, pc, r1
   23834:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23838:	ldr	r3, [r4, #220]	; 0xdc
   2383c:	cmp	r3, #0
   23840:	beq	238d4 <__flatcc_fb_gen_c_verifier@@Base+0x36a8>
   23844:	ldr	r1, [pc, #768]	; 23b4c <__flatcc_fb_gen_c_verifier@@Base+0x3920>
   23848:	sub	r3, r3, #1
   2384c:	str	r3, [r4, #220]	; 0xdc
   23850:	add	r1, pc, r1
   23854:	mov	r0, r4
   23858:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2385c:	b	232f4 <__flatcc_fb_gen_c_verifier@@Base+0x30c8>
   23860:	mov	r3, #0
   23864:	str	r3, [r4, #220]	; 0xdc
   23868:	ldr	r3, [pc, #736]	; 23b50 <__flatcc_fb_gen_c_verifier@@Base+0x3924>
   2386c:	ldr	r1, [pc, #736]	; 23b54 <__flatcc_fb_gen_c_verifier@@Base+0x3928>
   23870:	ldr	r0, [pc, #736]	; 23b58 <__flatcc_fb_gen_c_verifier@@Base+0x392c>
   23874:	add	r3, pc, r3
   23878:	ldr	r2, [pc, #732]	; 23b5c <__flatcc_fb_gen_c_verifier@@Base+0x3930>
   2387c:	add	r3, r3, #176	; 0xb0
   23880:	add	r1, pc, r1
   23884:	add	r0, pc, r0
   23888:	bl	14030 <__assert_fail@plt>
   2388c:	ldr	r3, [pc, #716]	; 23b60 <__flatcc_fb_gen_c_verifier@@Base+0x3934>
   23890:	ldr	r1, [pc, #716]	; 23b64 <__flatcc_fb_gen_c_verifier@@Base+0x3938>
   23894:	ldr	r0, [pc, #716]	; 23b68 <__flatcc_fb_gen_c_verifier@@Base+0x393c>
   23898:	add	r3, pc, r3
   2389c:	ldr	r2, [pc, #712]	; 23b6c <__flatcc_fb_gen_c_verifier@@Base+0x3940>
   238a0:	add	r3, r3, #176	; 0xb0
   238a4:	add	r1, pc, r1
   238a8:	add	r0, pc, r0
   238ac:	bl	14030 <__assert_fail@plt>
   238b0:	ldr	r3, [pc, #696]	; 23b70 <__flatcc_fb_gen_c_verifier@@Base+0x3944>
   238b4:	ldr	r1, [pc, #696]	; 23b74 <__flatcc_fb_gen_c_verifier@@Base+0x3948>
   238b8:	ldr	r0, [pc, #696]	; 23b78 <__flatcc_fb_gen_c_verifier@@Base+0x394c>
   238bc:	add	r3, pc, r3
   238c0:	ldr	r2, [pc, #692]	; 23b7c <__flatcc_fb_gen_c_verifier@@Base+0x3950>
   238c4:	add	r3, r3, #176	; 0xb0
   238c8:	add	r1, pc, r1
   238cc:	add	r0, pc, r0
   238d0:	bl	14030 <__assert_fail@plt>
   238d4:	ldr	r3, [pc, #676]	; 23b80 <__flatcc_fb_gen_c_verifier@@Base+0x3954>
   238d8:	ldr	r1, [pc, #676]	; 23b84 <__flatcc_fb_gen_c_verifier@@Base+0x3958>
   238dc:	ldr	r0, [pc, #676]	; 23b88 <__flatcc_fb_gen_c_verifier@@Base+0x395c>
   238e0:	add	r3, pc, r3
   238e4:	ldr	r2, [pc, #672]	; 23b8c <__flatcc_fb_gen_c_verifier@@Base+0x3960>
   238e8:	add	r3, r3, #176	; 0xb0
   238ec:	add	r1, pc, r1
   238f0:	add	r0, pc, r0
   238f4:	bl	14030 <__assert_fail@plt>
   238f8:	ldr	r3, [sp, #84]	; 0x54
   238fc:	str	r3, [r4, #220]	; 0xdc
   23900:	ldr	r3, [pc, #648]	; 23b90 <__flatcc_fb_gen_c_verifier@@Base+0x3964>
   23904:	ldr	r1, [pc, #648]	; 23b94 <__flatcc_fb_gen_c_verifier@@Base+0x3968>
   23908:	ldr	r0, [pc, #648]	; 23b98 <__flatcc_fb_gen_c_verifier@@Base+0x396c>
   2390c:	add	r3, pc, r3
   23910:	ldr	r2, [pc, #644]	; 23b9c <__flatcc_fb_gen_c_verifier@@Base+0x3970>
   23914:	add	r3, r3, #176	; 0xb0
   23918:	add	r1, pc, r1
   2391c:	add	r0, pc, r0
   23920:	bl	14030 <__assert_fail@plt>
   23924:	ldr	r3, [sp, #48]	; 0x30
   23928:	str	r3, [sp, #84]	; 0x54
   2392c:	mov	r6, r3
   23930:	str	r3, [sp, #108]	; 0x6c
   23934:	str	r3, [sp, #100]	; 0x64
   23938:	mov	r3, #1
   2393c:	str	r3, [sp, #48]	; 0x30
   23940:	b	22bec <__flatcc_fb_gen_c_verifier@@Base+0x29c0>
   23944:	ldr	r3, [pc, #596]	; 23ba0 <__flatcc_fb_gen_c_verifier@@Base+0x3974>
   23948:	ldr	r1, [pc, #596]	; 23ba4 <__flatcc_fb_gen_c_verifier@@Base+0x3978>
   2394c:	ldr	r0, [pc, #596]	; 23ba8 <__flatcc_fb_gen_c_verifier@@Base+0x397c>
   23950:	add	r3, pc, r3
   23954:	ldr	r2, [pc, #592]	; 23bac <__flatcc_fb_gen_c_verifier@@Base+0x3980>
   23958:	add	r3, r3, #176	; 0xb0
   2395c:	add	r1, pc, r1
   23960:	add	r0, pc, r0
   23964:	bl	14030 <__assert_fail@plt>
   23968:	ldr	r2, [pc, #300]	; 23a9c <__flatcc_fb_gen_c_verifier@@Base+0x3870>
   2396c:	ldr	r1, [sp, #104]	; 0x68
   23970:	ldr	r3, [pc, #568]	; 23bb0 <__flatcc_fb_gen_c_verifier@@Base+0x3984>
   23974:	ldr	r4, [pc, #568]	; 23bb4 <__flatcc_fb_gen_c_verifier@@Base+0x3988>
   23978:	ldr	r1, [r1, r2]
   2397c:	add	r3, pc, r3
   23980:	str	r3, [sp]
   23984:	ldr	r0, [r1]
   23988:	ldr	r1, [pc, #552]	; 23bb8 <__flatcc_fb_gen_c_verifier@@Base+0x398c>
   2398c:	add	r4, pc, r4
   23990:	mov	r2, r4
   23994:	ldr	r3, [pc, #544]	; 23bbc <__flatcc_fb_gen_c_verifier@@Base+0x3990>
   23998:	add	r1, pc, r1
   2399c:	bl	13f7c <fprintf@plt>
   239a0:	ldr	r3, [pc, #536]	; 23bc0 <__flatcc_fb_gen_c_verifier@@Base+0x3994>
   239a4:	ldr	r0, [pc, #536]	; 23bc4 <__flatcc_fb_gen_c_verifier@@Base+0x3998>
   239a8:	add	r3, pc, r3
   239ac:	mov	r1, r4
   239b0:	add	r3, r3, #176	; 0xb0
   239b4:	ldr	r2, [pc, #512]	; 23bbc <__flatcc_fb_gen_c_verifier@@Base+0x3990>
   239b8:	add	r0, pc, r0
   239bc:	bl	14030 <__assert_fail@plt>
   239c0:	andeq	r7, r4, ip, ror #9
   239c4:	andeq	r8, r0, r0, lsl #5
   239c8:	andeq	r0, r3, r0, lsr #4
   239cc:			; <UNDEFINED> instruction: 0x0002ffbc
   239d0:	andeq	r0, r3, r8, ror #2
   239d4:	andeq	r0, r3, r4, ror #2
   239d8:	andeq	r0, r3, ip, lsr #3
   239dc:	andeq	r0, r3, r0, asr #3
   239e0:	andeq	r0, r3, r0, lsl #3
   239e4:	andeq	r0, r3, ip, lsr #32
   239e8:	andeq	r0, r3, ip, rrx
   239ec:	muleq	r3, r8, r0
   239f0:	andeq	r0, r3, ip, lsl #9
   239f4:	andeq	r0, r3, ip, asr #13
   239f8:	andeq	pc, r2, r4, lsl r5	; <UNPREDICTABLE>
   239fc:			; <UNDEFINED> instruction: 0x000307b8
   23a00:	andeq	pc, r2, r8, lsr #28
   23a04:	andeq	pc, r2, r8, lsl #28
   23a08:	ldrdeq	pc, [r2], -ip
   23a0c:	andeq	r0, r3, r0, asr #32
   23a10:	andeq	r0, r3, r8, rrx
   23a14:	andeq	r0, r3, r0, rrx
   23a18:	andeq	r0, r3, r4, lsr #1
   23a1c:	ldrdeq	pc, [r2], -r8
   23a20:	andeq	pc, r2, ip, lsr #23
   23a24:			; <UNDEFINED> instruction: 0x0001c7b0
   23a28:	andeq	r4, r3, ip, asr pc
   23a2c:	andeq	pc, r2, r0, lsr #22
   23a30:	strdeq	ip, [r1], -r8
   23a34:	andeq	ip, r1, ip, ror #14
   23a38:	andeq	pc, r2, r8, ror #23
   23a3c:	andeq	pc, r2, ip, ror #23
   23a40:	muleq	r1, r8, r6
   23a44:	andeq	ip, r1, ip, lsl fp
   23a48:	andeq	pc, r2, ip, asr #26
   23a4c:	andeq	pc, r2, r8, lsl lr	; <UNPREDICTABLE>
   23a50:	andeq	pc, r2, r0, asr lr	; <UNPREDICTABLE>
   23a54:	andeq	pc, r2, r8
   23a58:	strdeq	r0, [r3], -r0	; <UNPREDICTABLE>
   23a5c:	andeq	r0, r3, r4, lsr r1
   23a60:	andeq	pc, r2, r8, lsr #25
   23a64:	ldrdeq	pc, [r2], -ip
   23a68:	strdeq	pc, [r2], -ip
   23a6c:	andeq	pc, r2, r4, ror sp	; <UNPREDICTABLE>
   23a70:	muleq	r2, r4, sp
   23a74:	andeq	r0, r3, r8
   23a78:	andeq	r0, r3, r0, asr r0
   23a7c:	andeq	r0, r3, r0, asr r0
   23a80:	muleq	r2, r0, lr
   23a84:	andeq	r0, r3, r8, lsl #2
   23a88:	andeq	pc, r2, r4, lsr #26
   23a8c:	andeq	lr, r2, r0, lsl #23
   23a90:	andeq	lr, r2, r4, asr #27
   23a94:	andeq	lr, r2, ip, lsr #28
   23a98:	andeq	r0, r0, r7, lsl #5
   23a9c:	muleq	r0, ip, r0
   23aa0:	andeq	pc, r2, r8, lsl #30
   23aa4:	andeq	lr, r2, r0, lsl #27
   23aa8:	andeq	ip, r1, r0, ror r5
   23aac:	andeq	lr, r2, r4, lsl fp
   23ab0:	andeq	r4, r2, r0, asr r9
   23ab4:	ldrdeq	pc, [r2], -ip
   23ab8:	andeq	pc, r2, r0, lsr #25
   23abc:	andeq	pc, r2, r8, lsl fp	; <UNPREDICTABLE>
   23ac0:	andeq	lr, r2, ip, ror #25
   23ac4:	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   23ac8:	andeq	r0, r0, lr, asr #4
   23acc:	andeq	lr, r2, r0, lsl #21
   23ad0:			; <UNDEFINED> instruction: 0x000248bc
   23ad4:	andeq	pc, r2, r4, asr #25
   23ad8:	andeq	ip, r1, r4, lsr r3
   23adc:	andeq	r4, r3, r8, ror #21
   23ae0:	muleq	r2, r8, r7
   23ae4:	andeq	pc, r2, r0, asr #15
   23ae8:			; <UNDEFINED> instruction: 0x0002f7bc
   23aec:			; <UNDEFINED> instruction: 0x0002f7bc
   23af0:	andeq	pc, r2, r0, asr ip	; <UNPREDICTABLE>
   23af4:	andeq	ip, r1, r0, asr #7
   23af8:	andeq	ip, r1, r4, asr #6
   23afc:	muleq	r1, r8, r3
   23b00:	andeq	lr, r2, ip, lsr r9
   23b04:	andeq	r4, r2, r8, ror r7
   23b08:	andeq	ip, r1, ip, lsr r2
   23b0c:	andeq	ip, r1, r0, lsr r2
   23b10:	andeq	ip, r1, r8, lsl #4
   23b14:	andeq	ip, r1, ip, ror r6
   23b18:	andeq	ip, r1, r8, ror #3
   23b1c:	andeq	ip, r1, ip, asr r6
   23b20:	andeq	ip, r1, r8, asr #3
   23b24:	andeq	ip, r1, ip, lsr r6
   23b28:	andeq	ip, r1, r8, lsr #3
   23b2c:	andeq	ip, r1, ip, lsl r6
   23b30:	andeq	ip, r1, r0, lsl #3
   23b34:	strdeq	ip, [r1], -ip	; <UNPREDICTABLE>
   23b38:	andeq	ip, r1, r0, asr r1
   23b3c:	ldrdeq	ip, [r1], -r4
   23b40:			; <UNDEFINED> instruction: 0x0002fbb4
   23b44:	muleq	r2, r8, ip
   23b48:	andeq	pc, r2, r0, lsr #25
   23b4c:			; <UNDEFINED> instruction: 0x0002fcb0
   23b50:	andeq	lr, r2, r4, lsr #15
   23b54:	andeq	lr, r2, r8, ror #19
   23b58:	andeq	lr, r2, r0, asr sl
   23b5c:	andeq	r0, r0, fp, lsl r2
   23b60:	andeq	lr, r2, r0, lsl #15
   23b64:	andeq	lr, r2, r4, asr #19
   23b68:	andeq	lr, r2, ip, lsr #20
   23b6c:	andeq	r0, r0, pc, lsr #4
   23b70:	andeq	lr, r2, ip, asr r7
   23b74:	andeq	lr, r2, r0, lsr #19
   23b78:	andeq	lr, r2, r8, lsl #20
   23b7c:	andeq	r0, r0, sl, ror #3
   23b80:	andeq	lr, r2, r8, lsr r7
   23b84:	andeq	lr, r2, ip, ror r9
   23b88:	andeq	lr, r2, r4, ror #19
   23b8c:	muleq	r0, r5, r2
   23b90:	andeq	lr, r2, ip, lsl #14
   23b94:	andeq	lr, r2, r0, asr r9
   23b98:			; <UNDEFINED> instruction: 0x0002e9b8
   23b9c:	andeq	r0, r0, r3, ror r2
   23ba0:	andeq	lr, r2, r8, asr #13
   23ba4:	andeq	lr, r2, ip, lsl #18
   23ba8:	andeq	lr, r2, r4, ror r9
   23bac:	andeq	r0, r0, sl, asr r2
   23bb0:	andeq	pc, r2, ip, asr #4
   23bb4:	ldrdeq	lr, [r2], -ip
   23bb8:	andeq	ip, r1, ip, asr #1
   23bbc:	ldrdeq	r0, [r0], -r2
   23bc0:	andeq	lr, r2, r0, ror r6
   23bc4:	andeq	r4, r2, ip, lsr #9
   23bc8:	push	{r4, r5, r6, r7, lr}
   23bcc:	mov	r5, r1
   23bd0:	sub	sp, sp, #12
   23bd4:	ldr	r1, [pc, #164]	; 23c80 <__flatcc_fb_gen_c_verifier@@Base+0x3a54>
   23bd8:	mov	r6, r2
   23bdc:	add	r1, pc, r1
   23be0:	ldr	r2, [sp, #32]
   23be4:	mov	r4, r0
   23be8:	mov	r7, r3
   23bec:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23bf0:	ldr	r1, [pc, #140]	; 23c84 <__flatcc_fb_gen_c_verifier@@Base+0x3a58>
   23bf4:	mov	r0, r4
   23bf8:	add	r1, pc, r1
   23bfc:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23c00:	ldr	r2, [r4, #220]	; 0xdc
   23c04:	mov	r3, r6
   23c08:	add	r2, r2, #1
   23c0c:	str	r7, [sp]
   23c10:	add	r1, r5, #8
   23c14:	str	r2, [r4, #220]	; 0xdc
   23c18:	mov	r0, r4
   23c1c:	add	r2, r5, #12
   23c20:	bl	22ab0 <__flatcc_fb_gen_c_verifier@@Base+0x2884>
   23c24:	ldr	r3, [r4, #220]	; 0xdc
   23c28:	cmp	r3, #0
   23c2c:	beq	23c5c <__flatcc_fb_gen_c_verifier@@Base+0x3a30>
   23c30:	ldr	r1, [pc, #80]	; 23c88 <__flatcc_fb_gen_c_verifier@@Base+0x3a5c>
   23c34:	sub	r3, r3, #1
   23c38:	str	r3, [r4, #220]	; 0xdc
   23c3c:	add	r1, pc, r1
   23c40:	mov	r0, r4
   23c44:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23c48:	ldr	r3, [r4, #220]	; 0xdc
   23c4c:	add	r3, r3, #1
   23c50:	str	r3, [r4, #220]	; 0xdc
   23c54:	add	sp, sp, #12
   23c58:	pop	{r4, r5, r6, r7, pc}
   23c5c:	ldr	r3, [pc, #40]	; 23c8c <__flatcc_fb_gen_c_verifier@@Base+0x3a60>
   23c60:	ldr	r1, [pc, #40]	; 23c90 <__flatcc_fb_gen_c_verifier@@Base+0x3a64>
   23c64:	ldr	r0, [pc, #40]	; 23c94 <__flatcc_fb_gen_c_verifier@@Base+0x3a68>
   23c68:	add	r3, pc, r3
   23c6c:	ldr	r2, [pc, #36]	; 23c98 <__flatcc_fb_gen_c_verifier@@Base+0x3a6c>
   23c70:	add	r3, r3, #220	; 0xdc
   23c74:	add	r1, pc, r1
   23c78:	add	r0, pc, r0
   23c7c:	bl	14030 <__assert_fail@plt>
   23c80:	andeq	pc, r2, ip, ror #19
   23c84:	andeq	pc, r2, r4, lsl sl	; <UNPREDICTABLE>
   23c88:	andeq	lr, r2, r8, asr #23
   23c8c:			; <UNDEFINED> instruction: 0x0002e3b0
   23c90:	strdeq	lr, [r2], -r4
   23c94:	andeq	lr, r2, ip, asr r6
   23c98:	andeq	r0, r0, r3, lsr #5
   23c9c:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23ca0:	subs	r5, r0, #0
   23ca4:	beq	23e14 <__flatcc_fb_gen_c_verifier@@Base+0x3be8>
   23ca8:	mov	r0, #0
   23cac:	mov	r6, r0
   23cb0:	mov	r4, r5
   23cb4:	b	23cc8 <__flatcc_fb_gen_c_verifier@@Base+0x3a9c>
   23cb8:	add	r6, r6, #1
   23cbc:	ldr	r4, [r4]
   23cc0:	cmp	r4, #0
   23cc4:	beq	23d0c <__flatcc_fb_gen_c_verifier@@Base+0x3ae0>
   23cc8:	ldrh	r3, [r4, #72]	; 0x48
   23ccc:	tst	r3, #4
   23cd0:	bne	23cbc <__flatcc_fb_gen_c_verifier@@Base+0x3a90>
   23cd4:	ldrh	r3, [r4, #24]
   23cd8:	sub	r3, r3, #14
   23cdc:	cmp	r3, #1
   23ce0:	bhi	23cb8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8c>
   23ce4:	ldr	r3, [r4, #16]
   23ce8:	ldrh	r3, [r3, #8]
   23cec:	cmp	r3, #4
   23cf0:	bne	23cb8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8c>
   23cf4:	ldr	r3, [r4, #4]
   23cf8:	add	r6, r6, #1
   23cfc:	ldr	r3, [r3, #4]
   23d00:	add	r3, r3, #6
   23d04:	add	r0, r0, r3
   23d08:	b	23cb8 <__flatcc_fb_gen_c_verifier@@Base+0x3a8c>
   23d0c:	cmp	r6, #0
   23d10:	str	r6, [r1]
   23d14:	beq	23e08 <__flatcc_fb_gen_c_verifier@@Base+0x3bdc>
   23d18:	lsl	r7, r6, #4
   23d1c:	add	r0, r0, r7
   23d20:	bl	13f34 <malloc@plt>
   23d24:	subs	r8, r0, #0
   23d28:	beq	23e08 <__flatcc_fb_gen_c_verifier@@Base+0x3bdc>
   23d2c:	ldr	r9, [pc, #236]	; 23e20 <__flatcc_fb_gen_c_verifier@@Base+0x3bf4>
   23d30:	add	r7, r8, r7
   23d34:	add	r9, pc, r9
   23d38:	mov	fp, r8
   23d3c:	mov	sl, #1
   23d40:	b	23d54 <__flatcc_fb_gen_c_verifier@@Base+0x3b28>
   23d44:	mov	fp, ip
   23d48:	ldr	r5, [r5]
   23d4c:	cmp	r5, #0
   23d50:	beq	23de8 <__flatcc_fb_gen_c_verifier@@Base+0x3bbc>
   23d54:	ldrh	r3, [r5, #72]	; 0x48
   23d58:	add	ip, fp, #16
   23d5c:	ands	r3, r3, #4
   23d60:	bne	23d48 <__flatcc_fb_gen_c_verifier@@Base+0x3b1c>
   23d64:	ldr	r2, [r5, #4]
   23d68:	ldrh	r0, [r5, #24]
   23d6c:	ldm	r2, {r1, r2}
   23d70:	sub	r0, r0, #14
   23d74:	cmp	r0, #1
   23d78:	stm	fp, {r1, r2, r5}
   23d7c:	str	r3, [fp, #12]
   23d80:	bhi	23d44 <__flatcc_fb_gen_c_verifier@@Base+0x3b18>
   23d84:	ldr	r3, [r5, #16]
   23d88:	ldrh	r3, [r3, #8]
   23d8c:	cmp	r3, #4
   23d90:	bne	23d44 <__flatcc_fb_gen_c_verifier@@Base+0x3b18>
   23d94:	add	r3, r2, #5
   23d98:	str	r4, [r5, #112]	; 0x70
   23d9c:	mov	r0, r7
   23da0:	str	r7, [fp, #16]
   23da4:	str	r3, [fp, #20]
   23da8:	bl	13ed4 <memcpy@plt>
   23dac:	ldr	r2, [r5, #4]
   23db0:	ldrh	r3, [r9, #4]
   23db4:	ldr	r0, [r9]
   23db8:	ldr	r1, [r2, #4]
   23dbc:	add	r4, r4, #1
   23dc0:	add	r2, r7, r1
   23dc4:	str	r0, [r7, r1]
   23dc8:	strh	r3, [r2, #4]
   23dcc:	str	r5, [fp, #24]
   23dd0:	ldr	r5, [r5]
   23dd4:	str	sl, [fp, #28]
   23dd8:	cmp	r5, #0
   23ddc:	add	r7, r2, #6
   23de0:	add	fp, fp, #32
   23de4:	bne	23d54 <__flatcc_fb_gen_c_verifier@@Base+0x3b28>
   23de8:	ldr	r3, [pc, #52]	; 23e24 <__flatcc_fb_gen_c_verifier@@Base+0x3bf8>
   23dec:	mov	r1, r6
   23df0:	add	r3, pc, r3
   23df4:	mov	r2, #16
   23df8:	mov	r0, r8
   23dfc:	bl	14000 <qsort@plt>
   23e00:	mov	r0, r8
   23e04:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23e08:	mov	r8, #0
   23e0c:	mov	r0, r8
   23e10:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23e14:	mov	r8, r5
   23e18:	str	r5, [r1]
   23e1c:	b	23e00 <__flatcc_fb_gen_c_verifier@@Base+0x3bd4>
   23e20:	ldrdeq	r2, [r3], -r8
   23e24:			; <UNDEFINED> instruction: 0xffffe2ec
   23e28:	ldrh	r2, [r1, #8]
   23e2c:	push	{r4, r5, r6, r7, lr}
   23e30:	sub	sp, sp, #268	; 0x10c
   23e34:	add	r5, sp, #16
   23e38:	sub	r2, r2, #3
   23e3c:	ldr	r7, [pc, #804]	; 24168 <__flatcc_fb_gen_c_verifier@@Base+0x3f3c>
   23e40:	mov	r3, #0
   23e44:	cmp	r2, #1
   23e48:	str	r3, [r5, #4]
   23e4c:	str	r3, [sp, #12]
   23e50:	str	r3, [sp, #16]
   23e54:	add	r7, pc, r7
   23e58:	str	r3, [r5, #8]
   23e5c:	str	r3, [r5, #12]
   23e60:	str	r3, [r5, #16]
   23e64:	str	r3, [r5, #20]
   23e68:	str	r3, [r5, #24]
   23e6c:	bhi	240fc <__flatcc_fb_gen_c_verifier@@Base+0x3ed0>
   23e70:	mov	r6, r1
   23e74:	mov	r4, r0
   23e78:	add	r1, sp, #12
   23e7c:	ldr	r0, [r6, #20]
   23e80:	bl	23c9c <__flatcc_fb_gen_c_verifier@@Base+0x3a70>
   23e84:	cmp	r0, #0
   23e88:	str	r0, [sp, #16]
   23e8c:	beq	24078 <__flatcc_fb_gen_c_verifier@@Base+0x3e4c>
   23e90:	ldr	r2, [pc, #724]	; 2416c <__flatcc_fb_gen_c_verifier@@Base+0x3f40>
   23e94:	ldr	r3, [pc, #724]	; 24170 <__flatcc_fb_gen_c_verifier@@Base+0x3f44>
   23e98:	add	r7, sp, #44	; 0x2c
   23e9c:	add	r2, pc, r2
   23ea0:	add	r3, pc, r3
   23ea4:	mov	ip, #2
   23ea8:	str	r2, [sp, #20]
   23eac:	mov	r1, #0
   23eb0:	mov	r2, #220	; 0xdc
   23eb4:	mov	r0, r7
   23eb8:	str	r3, [sp, #24]
   23ebc:	str	ip, [sp, #32]
   23ec0:	str	r6, [sp, #28]
   23ec4:	bl	13f94 <memset@plt>
   23ec8:	mov	r2, r7
   23ecc:	mov	r1, r6
   23ed0:	ldr	r0, [r6, #12]
   23ed4:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   23ed8:	ldr	r1, [pc, #660]	; 24174 <__flatcc_fb_gen_c_verifier@@Base+0x3f48>
   23edc:	mov	r2, r7
   23ee0:	add	r1, pc, r1
   23ee4:	mov	r0, r4
   23ee8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23eec:	ldr	r3, [r4, #220]	; 0xdc
   23ef0:	ldr	r1, [pc, #640]	; 24178 <__flatcc_fb_gen_c_verifier@@Base+0x3f4c>
   23ef4:	add	r3, r3, #2
   23ef8:	str	r3, [r4, #220]	; 0xdc
   23efc:	add	r1, pc, r1
   23f00:	mov	r0, r4
   23f04:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23f08:	ldr	r3, [r4, #220]	; 0xdc
   23f0c:	cmp	r3, #0
   23f10:	beq	240d8 <__flatcc_fb_gen_c_verifier@@Base+0x3eac>
   23f14:	cmp	r3, #1
   23f18:	moveq	r3, #0
   23f1c:	streq	r3, [r4, #220]	; 0xdc
   23f20:	beq	240d8 <__flatcc_fb_gen_c_verifier@@Base+0x3eac>
   23f24:	ldr	r1, [pc, #592]	; 2417c <__flatcc_fb_gen_c_verifier@@Base+0x3f50>
   23f28:	sub	r3, r3, #2
   23f2c:	str	r3, [r4, #220]	; 0xdc
   23f30:	add	r1, pc, r1
   23f34:	mov	r0, r4
   23f38:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23f3c:	ldr	r3, [r4, #220]	; 0xdc
   23f40:	ldr	r2, [sp, #12]
   23f44:	add	r3, r3, #1
   23f48:	cmp	r2, #0
   23f4c:	str	r3, [r4, #220]	; 0xdc
   23f50:	beq	24020 <__flatcc_fb_gen_c_verifier@@Base+0x3df4>
   23f54:	ldr	r1, [pc, #548]	; 24180 <__flatcc_fb_gen_c_verifier@@Base+0x3f54>
   23f58:	mov	r0, r4
   23f5c:	add	r1, pc, r1
   23f60:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23f64:	ldr	r1, [pc, #536]	; 24184 <__flatcc_fb_gen_c_verifier@@Base+0x3f58>
   23f68:	mov	r0, r4
   23f6c:	add	r1, pc, r1
   23f70:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23f74:	ldr	r1, [pc, #524]	; 24188 <__flatcc_fb_gen_c_verifier@@Base+0x3f5c>
   23f78:	mov	r0, r4
   23f7c:	add	r1, pc, r1
   23f80:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23f84:	ldr	r1, [pc, #512]	; 2418c <__flatcc_fb_gen_c_verifier@@Base+0x3f60>
   23f88:	mov	r0, r4
   23f8c:	add	r1, pc, r1
   23f90:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23f94:	ldr	r1, [pc, #500]	; 24190 <__flatcc_fb_gen_c_verifier@@Base+0x3f64>
   23f98:	mov	r0, r4
   23f9c:	add	r1, pc, r1
   23fa0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23fa4:	ldr	r3, [sp, #12]
   23fa8:	mov	r2, #0
   23fac:	sub	r3, r3, #1
   23fb0:	mov	r1, r5
   23fb4:	str	r2, [sp]
   23fb8:	mov	r0, r4
   23fbc:	bl	20bb8 <__flatcc_fb_gen_c_verifier@@Base+0x98c>
   23fc0:	ldr	r1, [pc, #460]	; 24194 <__flatcc_fb_gen_c_verifier@@Base+0x3f68>
   23fc4:	mov	r0, r4
   23fc8:	add	r1, pc, r1
   23fcc:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23fd0:	ldr	r3, [r4, #220]	; 0xdc
   23fd4:	cmp	r3, #0
   23fd8:	beq	24120 <__flatcc_fb_gen_c_verifier@@Base+0x3ef4>
   23fdc:	ldr	r1, [pc, #436]	; 24198 <__flatcc_fb_gen_c_verifier@@Base+0x3f6c>
   23fe0:	sub	r3, r3, #1
   23fe4:	str	r3, [r4, #220]	; 0xdc
   23fe8:	add	r1, pc, r1
   23fec:	mov	r0, r4
   23ff0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   23ff4:	ldr	r1, [pc, #416]	; 2419c <__flatcc_fb_gen_c_verifier@@Base+0x3f70>
   23ff8:	mov	r0, r4
   23ffc:	add	r1, pc, r1
   24000:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24004:	ldr	r0, [sp, #16]
   24008:	cmp	r0, #0
   2400c:	beq	24014 <__flatcc_fb_gen_c_verifier@@Base+0x3de8>
   24010:	bl	13ec8 <free@plt>
   24014:	mov	r0, #0
   24018:	add	sp, sp, #268	; 0x10c
   2401c:	pop	{r4, r5, r6, r7, pc}
   24020:	ldr	r1, [pc, #376]	; 241a0 <__flatcc_fb_gen_c_verifier@@Base+0x3f74>
   24024:	mov	r0, r4
   24028:	add	r1, pc, r1
   2402c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24030:	ldr	r1, [pc, #364]	; 241a4 <__flatcc_fb_gen_c_verifier@@Base+0x3f78>
   24034:	mov	r0, r4
   24038:	add	r1, pc, r1
   2403c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24040:	ldr	r1, [pc, #352]	; 241a8 <__flatcc_fb_gen_c_verifier@@Base+0x3f7c>
   24044:	mov	r0, r4
   24048:	add	r1, pc, r1
   2404c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24050:	ldr	r3, [r4, #220]	; 0xdc
   24054:	cmp	r3, #0
   24058:	beq	24144 <__flatcc_fb_gen_c_verifier@@Base+0x3f18>
   2405c:	ldr	r1, [pc, #328]	; 241ac <__flatcc_fb_gen_c_verifier@@Base+0x3f80>
   24060:	sub	r3, r3, #1
   24064:	str	r3, [r4, #220]	; 0xdc
   24068:	add	r1, pc, r1
   2406c:	mov	r0, r4
   24070:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24074:	b	23ff4 <__flatcc_fb_gen_c_verifier@@Base+0x3dc8>
   24078:	ldr	r3, [sp, #12]
   2407c:	cmp	r3, #0
   24080:	ble	23e90 <__flatcc_fb_gen_c_verifier@@Base+0x3c64>
   24084:	ldr	r2, [pc, #292]	; 241b0 <__flatcc_fb_gen_c_verifier@@Base+0x3f84>
   24088:	ldr	r3, [pc, #292]	; 241b4 <__flatcc_fb_gen_c_verifier@@Base+0x3f88>
   2408c:	ldr	r4, [pc, #292]	; 241b8 <__flatcc_fb_gen_c_verifier@@Base+0x3f8c>
   24090:	ldr	r1, [r7, r2]
   24094:	add	r3, pc, r3
   24098:	str	r3, [sp]
   2409c:	ldr	r0, [r1]
   240a0:	ldr	r1, [pc, #276]	; 241bc <__flatcc_fb_gen_c_verifier@@Base+0x3f90>
   240a4:	add	r4, pc, r4
   240a8:	mov	r2, r4
   240ac:	ldr	r3, [pc, #268]	; 241c0 <__flatcc_fb_gen_c_verifier@@Base+0x3f94>
   240b0:	add	r1, pc, r1
   240b4:	bl	13f7c <fprintf@plt>
   240b8:	ldr	r3, [pc, #260]	; 241c4 <__flatcc_fb_gen_c_verifier@@Base+0x3f98>
   240bc:	ldr	r0, [pc, #260]	; 241c8 <__flatcc_fb_gen_c_verifier@@Base+0x3f9c>
   240c0:	add	r3, pc, r3
   240c4:	mov	r1, r4
   240c8:	add	r3, r3, #236	; 0xec
   240cc:	ldr	r2, [pc, #236]	; 241c0 <__flatcc_fb_gen_c_verifier@@Base+0x3f94>
   240d0:	add	r0, pc, r0
   240d4:	bl	14030 <__assert_fail@plt>
   240d8:	ldr	r3, [pc, #236]	; 241cc <__flatcc_fb_gen_c_verifier@@Base+0x3fa0>
   240dc:	ldr	r1, [pc, #236]	; 241d0 <__flatcc_fb_gen_c_verifier@@Base+0x3fa4>
   240e0:	ldr	r0, [pc, #236]	; 241d4 <__flatcc_fb_gen_c_verifier@@Base+0x3fa8>
   240e4:	add	r3, pc, r3
   240e8:	ldr	r2, [pc, #232]	; 241d8 <__flatcc_fb_gen_c_verifier@@Base+0x3fac>
   240ec:	add	r3, r3, #236	; 0xec
   240f0:	add	r1, pc, r1
   240f4:	add	r0, pc, r0
   240f8:	bl	14030 <__assert_fail@plt>
   240fc:	ldr	r3, [pc, #216]	; 241dc <__flatcc_fb_gen_c_verifier@@Base+0x3fb0>
   24100:	ldr	r1, [pc, #216]	; 241e0 <__flatcc_fb_gen_c_verifier@@Base+0x3fb4>
   24104:	ldr	r0, [pc, #216]	; 241e4 <__flatcc_fb_gen_c_verifier@@Base+0x3fb8>
   24108:	add	r3, pc, r3
   2410c:	ldr	r2, [pc, #212]	; 241e8 <__flatcc_fb_gen_c_verifier@@Base+0x3fbc>
   24110:	add	r3, r3, #236	; 0xec
   24114:	add	r1, pc, r1
   24118:	add	r0, pc, r0
   2411c:	bl	14030 <__assert_fail@plt>
   24120:	ldr	r3, [pc, #196]	; 241ec <__flatcc_fb_gen_c_verifier@@Base+0x3fc0>
   24124:	ldr	r1, [pc, #196]	; 241f0 <__flatcc_fb_gen_c_verifier@@Base+0x3fc4>
   24128:	ldr	r0, [pc, #196]	; 241f4 <__flatcc_fb_gen_c_verifier@@Base+0x3fc8>
   2412c:	add	r3, pc, r3
   24130:	ldr	r2, [pc, #192]	; 241f8 <__flatcc_fb_gen_c_verifier@@Base+0x3fcc>
   24134:	add	r3, r3, #236	; 0xec
   24138:	add	r1, pc, r1
   2413c:	add	r0, pc, r0
   24140:	bl	14030 <__assert_fail@plt>
   24144:	ldr	r3, [pc, #176]	; 241fc <__flatcc_fb_gen_c_verifier@@Base+0x3fd0>
   24148:	ldr	r1, [pc, #176]	; 24200 <__flatcc_fb_gen_c_verifier@@Base+0x3fd4>
   2414c:	ldr	r0, [pc, #176]	; 24204 <__flatcc_fb_gen_c_verifier@@Base+0x3fd8>
   24150:	add	r3, pc, r3
   24154:	ldr	r2, [pc, #172]	; 24208 <__flatcc_fb_gen_c_verifier@@Base+0x3fdc>
   24158:	add	r3, r3, #236	; 0xec
   2415c:	add	r1, pc, r1
   24160:	add	r0, pc, r0
   24164:	bl	14030 <__assert_fail@plt>
   24168:	andeq	r6, r4, r4, lsr #3
   2416c:			; <UNDEFINED> instruction: 0xffffe914
   24170:			; <UNDEFINED> instruction: 0xffffc838
   24174:	andeq	pc, r2, r0, asr #14
   24178:	andeq	pc, r2, r8, lsl #15
   2417c:	andeq	r0, r3, r4, lsr #31
   24180:			; <UNDEFINED> instruction: 0x0002eabc
   24184:	andeq	lr, r2, ip, asr #21
   24188:	ldrdeq	lr, [r2], -r0
   2418c:	andeq	r5, r2, ip, asr r7
   24190:	andeq	lr, r2, r0, asr #8
   24194:	muleq	r2, r0, r8
   24198:	strdeq	lr, [r2], -r8
   2419c:	andeq	r5, r2, ip, ror #13
   241a0:	muleq	r2, r0, r6
   241a4:	muleq	r2, ip, r6
   241a8:			; <UNDEFINED> instruction: 0x0002e9b0
   241ac:	andeq	lr, r2, r8, ror r2
   241b0:	muleq	r0, ip, r0
   241b4:	andeq	lr, r2, r0, asr #17
   241b8:	andeq	lr, r2, r4, asr #3
   241bc:			; <UNDEFINED> instruction: 0x0001b9b4
   241c0:	andeq	r0, r0, r1, ror #9
   241c4:	andeq	sp, r2, r8, asr pc
   241c8:	muleq	r2, r4, sp
   241cc:	andeq	sp, r2, r4, lsr pc
   241d0:	andeq	lr, r2, r8, ror r1
   241d4:	andeq	lr, r2, r0, ror #3
   241d8:	andeq	r0, r0, pc, ror #9
   241dc:	andeq	sp, r2, r0, lsl pc
   241e0:	andeq	lr, r2, r4, asr r1
   241e4:	andeq	fp, r1, ip, lsl #17
   241e8:	ldrdeq	r0, [r0], -lr
   241ec:	andeq	sp, r2, ip, ror #29
   241f0:	andeq	lr, r2, r0, lsr r1
   241f4:	muleq	r2, r8, r1
   241f8:	strdeq	r0, [r0], -lr
   241fc:	andeq	sp, r2, r8, asr #29
   24200:	andeq	lr, r2, ip, lsl #2
   24204:	andeq	lr, r2, r4, ror r1
   24208:	strdeq	r0, [r0], -r5

0002420c <__flatcc_fb_gen_c_json_parser@@Base>:
   2420c:	ldr	r3, [r0, #208]	; 0xd0
   24210:	ldr	r2, [pc, #3964]	; 25194 <__flatcc_fb_gen_c_json_parser@@Base+0xf88>
   24214:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24218:	sub	sp, sp, #300	; 0x12c
   2421c:	ldr	r1, [pc, #3956]	; 25198 <__flatcc_fb_gen_c_json_parser@@Base+0xf8c>
   24220:	mov	r4, r0
   24224:	add	r2, pc, r2
   24228:	add	r1, pc, r1
   2422c:	mov	r6, r2
   24230:	str	r2, [sp, #36]	; 0x24
   24234:	ldr	r2, [r3, #164]	; 0xa4
   24238:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2423c:	ldr	r3, [r4, #208]	; 0xd0
   24240:	ldr	r5, [pc, #3924]	; 2519c <__flatcc_fb_gen_c_json_parser@@Base+0xf90>
   24244:	ldr	r1, [pc, #3924]	; 251a0 <__flatcc_fb_gen_c_json_parser@@Base+0xf94>
   24248:	ldr	r2, [r3, #164]	; 0xa4
   2424c:	add	r5, pc, r5
   24250:	mov	r0, r4
   24254:	add	r1, pc, r1
   24258:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2425c:	mov	r0, r4
   24260:	mov	r1, r5
   24264:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24268:	ldr	r1, [pc, #3892]	; 251a4 <__flatcc_fb_gen_c_json_parser@@Base+0xf98>
   2426c:	mov	r0, r4
   24270:	add	r1, pc, r1
   24274:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24278:	mov	r1, r5
   2427c:	mov	r0, r4
   24280:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24284:	ldr	r1, [pc, #3868]	; 251a8 <__flatcc_fb_gen_c_json_parser@@Base+0xf9c>
   24288:	mov	r0, r4
   2428c:	add	r1, pc, r1
   24290:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24294:	ldr	r2, [pc, #3856]	; 251ac <__flatcc_fb_gen_c_json_parser@@Base+0xfa0>
   24298:	ldr	r1, [pc, #3856]	; 251b0 <__flatcc_fb_gen_c_json_parser@@Base+0xfa4>
   2429c:	mov	r0, r4
   242a0:	add	r2, pc, r2
   242a4:	add	r1, pc, r1
   242a8:	bl	1523c <__flatcc_fb_gen_c_includes@@Base>
   242ac:	ldr	r3, [r4, #212]	; 0xd4
   242b0:	ldr	r3, [r3, #140]	; 0x8c
   242b4:	cmp	r3, #0
   242b8:	beq	242d4 <__flatcc_fb_gen_c_json_parser@@Base+0xc8>
   242bc:	ldr	r0, [pc, #3824]	; 251b4 <__flatcc_fb_gen_c_json_parser@@Base+0xfa8>
   242c0:	ldr	r3, [r4, #204]	; 0xcc
   242c4:	mov	r2, #36	; 0x24
   242c8:	mov	r1, #1
   242cc:	add	r0, pc, r0
   242d0:	bl	13f10 <fwrite@plt>
   242d4:	ldr	r8, [pc, #3804]	; 251b8 <__flatcc_fb_gen_c_json_parser@@Base+0xfac>
   242d8:	mov	r0, r4
   242dc:	add	r8, pc, r8
   242e0:	mov	r1, r8
   242e4:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   242e8:	ldr	r6, [r4, #208]	; 0xd0
   242ec:	add	r5, sp, #76	; 0x4c
   242f0:	mov	r0, r5
   242f4:	ldr	r7, [r6, #52]	; 0x34
   242f8:	mov	r2, #220	; 0xdc
   242fc:	mov	r1, #0
   24300:	bl	13f94 <memset@plt>
   24304:	cmp	r7, #0
   24308:	beq	24318 <__flatcc_fb_gen_c_json_parser@@Base+0x10c>
   2430c:	ldrh	r3, [r7, #8]
   24310:	cmp	r3, #1
   24314:	bls	25c00 <__flatcc_fb_gen_c_json_parser@@Base+0x19f4>
   24318:	ldr	r7, [r6, #40]	; 0x28
   2431c:	cmp	r7, #0
   24320:	beq	24418 <__flatcc_fb_gen_c_json_parser@@Base+0x20c>
   24324:	ldr	r3, [pc, #3728]	; 251bc <__flatcc_fb_gen_c_json_parser@@Base+0xfb0>
   24328:	ldr	r6, [pc, #3728]	; 251c0 <__flatcc_fb_gen_c_json_parser@@Base+0xfb4>
   2432c:	add	r3, pc, r3
   24330:	add	r6, pc, r6
   24334:	ldr	fp, [pc, #3720]	; 251c4 <__flatcc_fb_gen_c_json_parser@@Base+0xfb8>
   24338:	ldr	sl, [pc, #3720]	; 251c8 <__flatcc_fb_gen_c_json_parser@@Base+0xfbc>
   2433c:	ldr	r9, [pc, #3720]	; 251cc <__flatcc_fb_gen_c_json_parser@@Base+0xfc0>
   24340:	ldr	r8, [pc, #3720]	; 251d0 <__flatcc_fb_gen_c_json_parser@@Base+0xfc4>
   24344:	str	r3, [sp, #8]
   24348:	mov	r3, r6
   2434c:	add	fp, pc, fp
   24350:	mov	r6, r7
   24354:	add	sl, pc, sl
   24358:	add	r9, pc, r9
   2435c:	add	r8, pc, r8
   24360:	mov	r7, r3
   24364:	ldrh	r2, [r6, #8]
   24368:	cmp	r2, #4
   2436c:	addls	pc, pc, r2, lsl #2
   24370:	b	24408 <__flatcc_fb_gen_c_json_parser@@Base+0x1fc>
   24374:	b	245c8 <__flatcc_fb_gen_c_json_parser@@Base+0x3bc>
   24378:	b	24518 <__flatcc_fb_gen_c_json_parser@@Base+0x30c>
   2437c:	b	24408 <__flatcc_fb_gen_c_json_parser@@Base+0x1fc>
   24380:	b	2454c <__flatcc_fb_gen_c_json_parser@@Base+0x340>
   24384:	b	24388 <__flatcc_fb_gen_c_json_parser@@Base+0x17c>
   24388:	mov	r2, r5
   2438c:	mov	r1, r6
   24390:	ldr	r0, [r6, #12]
   24394:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   24398:	mov	r2, r5
   2439c:	mov	r1, r7
   243a0:	mov	r0, r4
   243a4:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   243a8:	ldr	r1, [pc, #3620]	; 251d4 <__flatcc_fb_gen_c_json_parser@@Base+0xfc8>
   243ac:	mov	r2, r5
   243b0:	add	r1, pc, r1
   243b4:	mov	r0, r4
   243b8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   243bc:	ldr	r1, [pc, #3604]	; 251d8 <__flatcc_fb_gen_c_json_parser@@Base+0xfcc>
   243c0:	mov	r2, r5
   243c4:	add	r1, pc, r1
   243c8:	mov	r0, r4
   243cc:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   243d0:	ldr	r2, [r4, #220]	; 0xdc
   243d4:	ldr	r1, [pc, #3584]	; 251dc <__flatcc_fb_gen_c_json_parser@@Base+0xfd0>
   243d8:	add	r2, r2, #2
   243dc:	str	r2, [r4, #220]	; 0xdc
   243e0:	add	r1, pc, r1
   243e4:	mov	r0, r4
   243e8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   243ec:	ldr	r2, [r4, #220]	; 0xdc
   243f0:	cmp	r2, #0
   243f4:	beq	25db4 <__flatcc_fb_gen_c_json_parser@@Base+0x1ba8>
   243f8:	cmp	r2, #1
   243fc:	beq	25dac <__flatcc_fb_gen_c_json_parser@@Base+0x1ba0>
   24400:	sub	r2, r2, #2
   24404:	str	r2, [r4, #220]	; 0xdc
   24408:	ldr	r6, [r6]
   2440c:	cmp	r6, #0
   24410:	bne	24364 <__flatcc_fb_gen_c_json_parser@@Base+0x158>
   24414:	ldr	r6, [r4, #208]	; 0xd0
   24418:	ldr	r1, [pc, #3520]	; 251e0 <__flatcc_fb_gen_c_json_parser@@Base+0xfd4>
   2441c:	ldr	r0, [r6, #60]	; 0x3c
   24420:	mov	r2, r4
   24424:	add	r1, pc, r1
   24428:	bl	2c444 <fb_scope_table_visit@@Base>
   2442c:	ldr	r3, [r4, #208]	; 0xd0
   24430:	ldr	r1, [pc, #3500]	; 251e4 <__flatcc_fb_gen_c_json_parser@@Base+0xfd8>
   24434:	mov	r0, r4
   24438:	ldr	r2, [r3, #160]	; 0xa0
   2443c:	add	r1, pc, r1
   24440:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24444:	ldr	r3, [r4, #220]	; 0xdc
   24448:	ldr	r1, [pc, #3480]	; 251e8 <__flatcc_fb_gen_c_json_parser@@Base+0xfdc>
   2444c:	add	r3, r3, #2
   24450:	str	r3, [r4, #220]	; 0xdc
   24454:	add	r1, pc, r1
   24458:	mov	r0, r4
   2445c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24460:	ldr	r3, [r4, #220]	; 0xdc
   24464:	cmp	r3, #0
   24468:	beq	260dc <__flatcc_fb_gen_c_json_parser@@Base+0x1ed0>
   2446c:	cmp	r3, #1
   24470:	moveq	r3, #0
   24474:	streq	r3, [r4, #220]	; 0xdc
   24478:	beq	260dc <__flatcc_fb_gen_c_json_parser@@Base+0x1ed0>
   2447c:	ldr	r1, [pc, #3432]	; 251ec <__flatcc_fb_gen_c_json_parser@@Base+0xfe0>
   24480:	sub	r3, r3, #2
   24484:	str	r3, [r4, #220]	; 0xdc
   24488:	add	r1, pc, r1
   2448c:	mov	r0, r4
   24490:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24494:	ldr	r3, [r4, #208]	; 0xd0
   24498:	ldr	fp, [r3, #40]	; 0x28
   2449c:	cmp	fp, #0
   244a0:	addeq	r9, sp, #48	; 0x30
   244a4:	beq	24620 <__flatcc_fb_gen_c_json_parser@@Base+0x414>
   244a8:	ldr	r3, [pc, #3392]	; 251f0 <__flatcc_fb_gen_c_json_parser@@Base+0xfe4>
   244ac:	add	r9, sp, #48	; 0x30
   244b0:	add	r3, pc, r3
   244b4:	str	r3, [sp, #12]
   244b8:	ldr	r3, [pc, #3380]	; 251f4 <__flatcc_fb_gen_c_json_parser@@Base+0xfe8>
   244bc:	add	r3, pc, r3
   244c0:	str	r3, [sp, #16]
   244c4:	ldr	r3, [pc, #3372]	; 251f8 <__flatcc_fb_gen_c_json_parser@@Base+0xfec>
   244c8:	add	r3, pc, r3
   244cc:	str	r3, [sp, #20]
   244d0:	ldr	r3, [pc, #3364]	; 251fc <__flatcc_fb_gen_c_json_parser@@Base+0xff0>
   244d4:	add	r3, pc, r3
   244d8:	str	r3, [sp, #24]
   244dc:	ldr	r3, [pc, #3356]	; 25200 <__flatcc_fb_gen_c_json_parser@@Base+0xff4>
   244e0:	add	r3, pc, r3
   244e4:	str	r3, [sp, #28]
   244e8:	ldr	r3, [pc, #3348]	; 25204 <__flatcc_fb_gen_c_json_parser@@Base+0xff8>
   244ec:	add	r3, pc, r3
   244f0:	str	r3, [sp, #32]
   244f4:	ldrh	r3, [fp, #8]
   244f8:	cmp	r3, #4
   244fc:	addls	pc, pc, r3, lsl #2
   24500:	b	24610 <__flatcc_fb_gen_c_json_parser@@Base+0x404>
   24504:	b	24f38 <__flatcc_fb_gen_c_json_parser@@Base+0xd2c>
   24508:	b	24b20 <__flatcc_fb_gen_c_json_parser@@Base+0x914>
   2450c:	b	24610 <__flatcc_fb_gen_c_json_parser@@Base+0x404>
   24510:	b	24f28 <__flatcc_fb_gen_c_json_parser@@Base+0xd1c>
   24514:	b	245ec <__flatcc_fb_gen_c_json_parser@@Base+0x3e0>
   24518:	mov	r2, r5
   2451c:	mov	r1, r6
   24520:	ldr	r0, [r6, #12]
   24524:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   24528:	mov	r2, r5
   2452c:	mov	r1, r8
   24530:	mov	r0, r4
   24534:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24538:	mov	r2, r5
   2453c:	ldr	r1, [sp, #8]
   24540:	mov	r0, r4
   24544:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24548:	b	24408 <__flatcc_fb_gen_c_json_parser@@Base+0x1fc>
   2454c:	mov	r2, r5
   24550:	mov	r1, r6
   24554:	ldr	r0, [r6, #12]
   24558:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   2455c:	mov	r2, r5
   24560:	mov	r1, fp
   24564:	mov	r0, r4
   24568:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2456c:	ldr	r1, [r4, #220]	; 0xdc
   24570:	mov	r2, r5
   24574:	add	r1, r1, #2
   24578:	str	r1, [r4, #220]	; 0xdc
   2457c:	mov	r0, r4
   24580:	mov	r1, sl
   24584:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24588:	ldr	r2, [r4, #220]	; 0xdc
   2458c:	cmp	r2, #0
   24590:	beq	245a4 <__flatcc_fb_gen_c_json_parser@@Base+0x398>
   24594:	cmp	r2, #1
   24598:	bne	24400 <__flatcc_fb_gen_c_json_parser@@Base+0x1f4>
   2459c:	mov	r3, #0
   245a0:	str	r3, [r4, #220]	; 0xdc
   245a4:	ldr	r3, [pc, #3164]	; 25208 <__flatcc_fb_gen_c_json_parser@@Base+0xffc>
   245a8:	ldr	r1, [pc, #3164]	; 2520c <__flatcc_fb_gen_c_json_parser@@Base+0x1000>
   245ac:	ldr	r0, [pc, #3164]	; 25210 <__flatcc_fb_gen_c_json_parser@@Base+0x1004>
   245b0:	add	r3, pc, r3
   245b4:	ldr	r2, [pc, #3160]	; 25214 <__flatcc_fb_gen_c_json_parser@@Base+0x1008>
   245b8:	add	r3, r3, #252	; 0xfc
   245bc:	add	r1, pc, r1
   245c0:	add	r0, pc, r0
   245c4:	bl	14030 <__assert_fail@plt>
   245c8:	mov	r2, r5
   245cc:	mov	r1, r6
   245d0:	ldr	r0, [r6, #12]
   245d4:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   245d8:	mov	r2, r5
   245dc:	mov	r1, r9
   245e0:	mov	r0, r4
   245e4:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   245e8:	b	24408 <__flatcc_fb_gen_c_json_parser@@Base+0x1fc>
   245ec:	mov	r1, fp
   245f0:	mov	r0, r4
   245f4:	bl	217d8 <__flatcc_fb_gen_c_verifier@@Base+0x15ac>
   245f8:	mov	r1, fp
   245fc:	mov	r0, r4
   24600:	bl	21e78 <__flatcc_fb_gen_c_verifier@@Base+0x1c4c>
   24604:	mov	r1, fp
   24608:	mov	r0, r4
   2460c:	bl	23e28 <__flatcc_fb_gen_c_verifier@@Base+0x3bfc>
   24610:	ldr	fp, [fp]
   24614:	cmp	fp, #0
   24618:	bne	244f4 <__flatcc_fb_gen_c_json_parser@@Base+0x2e8>
   2461c:	ldr	r3, [r4, #208]	; 0xd0
   24620:	ldr	r1, [pc, #3056]	; 25218 <__flatcc_fb_gen_c_json_parser@@Base+0x100c>
   24624:	ldr	r0, [r3, #60]	; 0x3c
   24628:	mov	r2, r4
   2462c:	add	r1, pc, r1
   24630:	bl	2c444 <fb_scope_table_visit@@Base>
   24634:	ldr	r6, [r4, #208]	; 0xd0
   24638:	mov	r1, #0
   2463c:	str	r1, [sp, #48]	; 0x30
   24640:	mov	r2, #44	; 0x2c
   24644:	str	r1, [r9, #4]
   24648:	str	r1, [r9, #8]
   2464c:	str	r1, [r9, #12]
   24650:	str	r1, [r9, #16]
   24654:	str	r1, [r9, #20]
   24658:	str	r1, [r9, #24]
   2465c:	mov	r0, r5
   24660:	ldr	r8, [r6, #60]	; 0x3c
   24664:	bl	13f94 <memset@plt>
   24668:	ldr	r1, [pc, #2988]	; 2521c <__flatcc_fb_gen_c_json_parser@@Base+0x1010>
   2466c:	mov	r3, #1
   24670:	mov	r2, r5
   24674:	mov	r0, r8
   24678:	add	r1, pc, r1
   2467c:	str	r3, [sp, #76]	; 0x4c
   24680:	str	r6, [sp, #116]	; 0x74
   24684:	bl	2c444 <fb_scope_table_visit@@Base>
   24688:	ldr	r6, [sp, #80]	; 0x50
   2468c:	mov	r1, #8
   24690:	mov	r0, r6
   24694:	bl	13e98 <calloc@plt>
   24698:	ldr	sl, [sp, #84]	; 0x54
   2469c:	mov	r1, #8
   246a0:	mov	r3, r0
   246a4:	mov	r0, sl
   246a8:	str	r3, [sp, #92]	; 0x5c
   246ac:	str	r3, [sp, #8]
   246b0:	bl	13e98 <calloc@plt>
   246b4:	ldr	fp, [sp, #88]	; 0x58
   246b8:	mov	r7, r0
   246bc:	str	r0, [sp, #96]	; 0x60
   246c0:	mov	r0, fp
   246c4:	bl	13f34 <malloc@plt>
   246c8:	ldr	r3, [sp, #8]
   246cc:	cmp	r6, #0
   246d0:	movle	r6, #0
   246d4:	movgt	r6, #1
   246d8:	cmp	r3, #0
   246dc:	movne	r6, #0
   246e0:	cmp	r6, #0
   246e4:	str	r3, [sp, #104]	; 0x68
   246e8:	str	r7, [sp, #108]	; 0x6c
   246ec:	str	r0, [sp, #100]	; 0x64
   246f0:	str	r0, [sp, #112]	; 0x70
   246f4:	bne	248dc <__flatcc_fb_gen_c_json_parser@@Base+0x6d0>
   246f8:	cmp	sl, #0
   246fc:	movle	sl, #0
   24700:	movgt	sl, #1
   24704:	cmp	r7, #0
   24708:	movne	sl, #0
   2470c:	cmp	sl, #0
   24710:	bne	248dc <__flatcc_fb_gen_c_json_parser@@Base+0x6d0>
   24714:	cmp	fp, #0
   24718:	clz	r7, r0
   2471c:	lsr	r7, r7, #5
   24720:	moveq	r7, #0
   24724:	cmp	r7, #0
   24728:	bne	248dc <__flatcc_fb_gen_c_json_parser@@Base+0x6d0>
   2472c:	ldr	r1, [pc, #2796]	; 25220 <__flatcc_fb_gen_c_json_parser@@Base+0x1014>
   24730:	mov	r0, r8
   24734:	mov	r2, r5
   24738:	add	r1, pc, r1
   2473c:	bl	2c444 <fb_scope_table_visit@@Base>
   24740:	ldr	r1, [sp, #80]	; 0x50
   24744:	ldr	r0, [sp, #92]	; 0x5c
   24748:	bl	220a0 <__flatcc_fb_gen_c_verifier@@Base+0x1e74>
   2474c:	ldr	r1, [sp, #84]	; 0x54
   24750:	ldr	r0, [sp, #96]	; 0x60
   24754:	bl	220a0 <__flatcc_fb_gen_c_verifier@@Base+0x1e74>
   24758:	ldr	r8, [sp, #84]	; 0x54
   2475c:	cmp	r8, #0
   24760:	beq	25cfc <__flatcc_fb_gen_c_json_parser@@Base+0x1af0>
   24764:	lsl	sl, r8, #4
   24768:	mov	r0, sl
   2476c:	bl	13f34 <malloc@plt>
   24770:	subs	r3, r0, #0
   24774:	str	r3, [sp, #8]
   24778:	beq	25d3c <__flatcc_fb_gen_c_json_parser@@Base+0x1b30>
   2477c:	cmp	r8, #0
   24780:	ble	247b4 <__flatcc_fb_gen_c_json_parser@@Base+0x5a8>
   24784:	ldr	r3, [sp, #8]
   24788:	ldr	fp, [sp, #96]	; 0x60
   2478c:	add	sl, r3, sl
   24790:	mov	r6, r3
   24794:	ldr	r0, [fp, #4]
   24798:	str	r0, [r6]
   2479c:	bl	13f70 <strlen@plt>
   247a0:	ldr	r3, [fp], #8
   247a4:	stmib	r6, {r0, r3, r7}
   247a8:	add	r6, r6, #16
   247ac:	cmp	sl, r6
   247b0:	bne	24794 <__flatcc_fb_gen_c_json_parser@@Base+0x588>
   247b4:	ldr	r6, [sp, #8]
   247b8:	ldr	r3, [pc, #2660]	; 25224 <__flatcc_fb_gen_c_json_parser@@Base+0x1018>
   247bc:	mov	r1, r8
   247c0:	add	r3, pc, r3
   247c4:	mov	r2, #16
   247c8:	mov	r0, r6
   247cc:	bl	14000 <qsort@plt>
   247d0:	ldr	r8, [sp, #84]	; 0x54
   247d4:	str	r6, [sp, #48]	; 0x30
   247d8:	ldr	r2, [r4, #208]	; 0xd0
   247dc:	ldr	r1, [pc, #2628]	; 25228 <__flatcc_fb_gen_c_json_parser@@Base+0x101c>
   247e0:	ldr	r3, [pc, #2628]	; 2522c <__flatcc_fb_gen_c_json_parser@@Base+0x1020>
   247e4:	add	r1, pc, r1
   247e8:	ldr	r2, [r2, #160]	; 0xa0
   247ec:	str	r1, [sp, #52]	; 0x34
   247f0:	ldr	r1, [pc, #2616]	; 25230 <__flatcc_fb_gen_c_json_parser@@Base+0x1024>
   247f4:	add	r3, pc, r3
   247f8:	mov	ip, #4
   247fc:	mov	r6, #0
   24800:	add	r1, pc, r1
   24804:	mov	r0, r4
   24808:	str	r3, [sp, #56]	; 0x38
   2480c:	str	ip, [sp, #64]	; 0x40
   24810:	str	r6, [sp, #60]	; 0x3c
   24814:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24818:	ldr	r3, [r4, #220]	; 0xdc
   2481c:	ldr	r1, [pc, #2576]	; 25234 <__flatcc_fb_gen_c_json_parser@@Base+0x1028>
   24820:	add	r3, r3, #2
   24824:	str	r3, [r4, #220]	; 0xdc
   24828:	add	r1, pc, r1
   2482c:	mov	r0, r4
   24830:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24834:	ldr	r3, [r4, #220]	; 0xdc
   24838:	cmp	r3, r6
   2483c:	beq	2604c <__flatcc_fb_gen_c_json_parser@@Base+0x1e40>
   24840:	cmp	r3, #1
   24844:	streq	r6, [r4, #220]	; 0xdc
   24848:	beq	2604c <__flatcc_fb_gen_c_json_parser@@Base+0x1e40>
   2484c:	ldr	r1, [pc, #2532]	; 25238 <__flatcc_fb_gen_c_json_parser@@Base+0x102c>
   24850:	sub	r3, r3, #2
   24854:	str	r3, [r4, #220]	; 0xdc
   24858:	add	r1, pc, r1
   2485c:	mov	r0, r4
   24860:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24864:	ldr	r3, [r4, #220]	; 0xdc
   24868:	cmp	r8, #0
   2486c:	add	r3, r3, #1
   24870:	str	r3, [r4, #220]	; 0xdc
   24874:	bne	25960 <__flatcc_fb_gen_c_json_parser@@Base+0x1754>
   24878:	ldr	r1, [pc, #2492]	; 2523c <__flatcc_fb_gen_c_json_parser@@Base+0x1030>
   2487c:	mov	r0, r4
   24880:	add	r1, pc, r1
   24884:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24888:	ldr	r1, [pc, #2480]	; 25240 <__flatcc_fb_gen_c_json_parser@@Base+0x1034>
   2488c:	mov	r0, r4
   24890:	add	r1, pc, r1
   24894:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24898:	ldr	r3, [r4, #220]	; 0xdc
   2489c:	cmp	r3, #0
   248a0:	beq	26070 <__flatcc_fb_gen_c_json_parser@@Base+0x1e64>
   248a4:	ldr	r1, [pc, #2456]	; 25244 <__flatcc_fb_gen_c_json_parser@@Base+0x1038>
   248a8:	sub	r3, r3, #1
   248ac:	str	r3, [r4, #220]	; 0xdc
   248b0:	add	r1, pc, r1
   248b4:	mov	r0, r4
   248b8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   248bc:	ldr	r1, [pc, #2436]	; 25248 <__flatcc_fb_gen_c_json_parser@@Base+0x103c>
   248c0:	mov	r0, r4
   248c4:	add	r1, pc, r1
   248c8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   248cc:	ldr	r0, [sp, #48]	; 0x30
   248d0:	cmp	r0, #0
   248d4:	beq	248dc <__flatcc_fb_gen_c_json_parser@@Base+0x6d0>
   248d8:	bl	13ec8 <free@plt>
   248dc:	mov	r0, r5
   248e0:	bl	2265c <__flatcc_fb_gen_c_verifier@@Base+0x2430>
   248e4:	ldr	r3, [r4, #208]	; 0xd0
   248e8:	ldr	r6, [r3, #52]	; 0x34
   248ec:	cmp	r6, #0
   248f0:	beq	24ad4 <__flatcc_fb_gen_c_json_parser@@Base+0x8c8>
   248f4:	ldrh	r7, [r6, #8]
   248f8:	cmp	r7, #0
   248fc:	beq	25a34 <__flatcc_fb_gen_c_json_parser@@Base+0x1828>
   24900:	cmp	r7, #1
   24904:	bne	24ad4 <__flatcc_fb_gen_c_json_parser@@Base+0x8c8>
   24908:	mov	r2, #220	; 0xdc
   2490c:	mov	r1, #0
   24910:	mov	r0, r5
   24914:	bl	13f94 <memset@plt>
   24918:	mov	r2, r5
   2491c:	mov	r1, r6
   24920:	ldr	r0, [r6, #12]
   24924:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   24928:	ldr	r3, [r4, #208]	; 0xd0
   2492c:	ldr	r1, [pc, #2328]	; 2524c <__flatcc_fb_gen_c_json_parser@@Base+0x1040>
   24930:	mov	r0, r4
   24934:	ldr	r2, [r3, #160]	; 0xa0
   24938:	add	r1, pc, r1
   2493c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24940:	ldr	r3, [r4, #220]	; 0xdc
   24944:	ldr	r1, [pc, #2308]	; 25250 <__flatcc_fb_gen_c_json_parser@@Base+0x1044>
   24948:	add	r3, r3, #2
   2494c:	str	r3, [r4, #220]	; 0xdc
   24950:	add	r1, pc, r1
   24954:	mov	r0, r4
   24958:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2495c:	ldr	r3, [r4, #220]	; 0xdc
   24960:	cmp	r3, #0
   24964:	beq	25fe0 <__flatcc_fb_gen_c_json_parser@@Base+0x1dd4>
   24968:	cmp	r3, #1
   2496c:	moveq	r3, #0
   24970:	streq	r3, [r4, #220]	; 0xdc
   24974:	beq	25fe0 <__flatcc_fb_gen_c_json_parser@@Base+0x1dd4>
   24978:	ldr	r1, [pc, #2260]	; 25254 <__flatcc_fb_gen_c_json_parser@@Base+0x1048>
   2497c:	sub	r3, r3, #2
   24980:	str	r3, [r4, #220]	; 0xdc
   24984:	add	r1, pc, r1
   24988:	mov	r0, r4
   2498c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24990:	ldr	r3, [r4, #220]	; 0xdc
   24994:	ldr	r1, [pc, #2236]	; 25258 <__flatcc_fb_gen_c_json_parser@@Base+0x104c>
   24998:	add	r3, r3, #1
   2499c:	str	r3, [r4, #220]	; 0xdc
   249a0:	add	r1, pc, r1
   249a4:	mov	r0, r4
   249a8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   249ac:	ldr	r1, [pc, #2216]	; 2525c <__flatcc_fb_gen_c_json_parser@@Base+0x1050>
   249b0:	mov	r0, r4
   249b4:	add	r1, pc, r1
   249b8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   249bc:	ldr	r1, [pc, #2204]	; 25260 <__flatcc_fb_gen_c_json_parser@@Base+0x1054>
   249c0:	mov	r0, r4
   249c4:	add	r1, pc, r1
   249c8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   249cc:	ldr	r1, [pc, #2192]	; 25264 <__flatcc_fb_gen_c_json_parser@@Base+0x1058>
   249d0:	mov	r0, r4
   249d4:	add	r1, pc, r1
   249d8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   249dc:	ldr	r1, [pc, #2180]	; 25268 <__flatcc_fb_gen_c_json_parser@@Base+0x105c>
   249e0:	mov	r0, r4
   249e4:	add	r1, pc, r1
   249e8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   249ec:	ldr	r2, [r4, #208]	; 0xd0
   249f0:	ldrh	r3, [r2, #16]
   249f4:	cmp	r3, #2
   249f8:	beq	25d20 <__flatcc_fb_gen_c_json_parser@@Base+0x1b14>
   249fc:	ldr	r1, [pc, #2152]	; 2526c <__flatcc_fb_gen_c_json_parser@@Base+0x1060>
   24a00:	mov	r0, r4
   24a04:	add	r1, pc, r1
   24a08:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24a0c:	ldr	r1, [pc, #2140]	; 25270 <__flatcc_fb_gen_c_json_parser@@Base+0x1064>
   24a10:	mov	r2, r5
   24a14:	add	r1, pc, r1
   24a18:	mov	r0, r4
   24a1c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24a20:	ldr	r1, [pc, #2124]	; 25274 <__flatcc_fb_gen_c_json_parser@@Base+0x1068>
   24a24:	mov	r0, r4
   24a28:	add	r1, pc, r1
   24a2c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24a30:	ldr	r3, [r4, #220]	; 0xdc
   24a34:	ldr	r1, [pc, #2108]	; 25278 <__flatcc_fb_gen_c_json_parser@@Base+0x106c>
   24a38:	add	r3, r3, #1
   24a3c:	str	r3, [r4, #220]	; 0xdc
   24a40:	add	r1, pc, r1
   24a44:	mov	r0, r4
   24a48:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24a4c:	ldr	r3, [r4, #220]	; 0xdc
   24a50:	cmp	r3, #0
   24a54:	beq	260b8 <__flatcc_fb_gen_c_json_parser@@Base+0x1eac>
   24a58:	ldr	r5, [pc, #2076]	; 2527c <__flatcc_fb_gen_c_json_parser@@Base+0x1070>
   24a5c:	sub	r3, r3, #1
   24a60:	add	r5, pc, r5
   24a64:	str	r3, [r4, #220]	; 0xdc
   24a68:	mov	r1, r5
   24a6c:	mov	r0, r4
   24a70:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24a74:	ldr	r1, [pc, #2052]	; 25280 <__flatcc_fb_gen_c_json_parser@@Base+0x1074>
   24a78:	mov	r0, r4
   24a7c:	add	r1, pc, r1
   24a80:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24a84:	ldr	r1, [pc, #2040]	; 25284 <__flatcc_fb_gen_c_json_parser@@Base+0x1078>
   24a88:	mov	r0, r4
   24a8c:	add	r1, pc, r1
   24a90:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24a94:	ldr	r1, [pc, #2028]	; 25288 <__flatcc_fb_gen_c_json_parser@@Base+0x107c>
   24a98:	mov	r0, r4
   24a9c:	add	r1, pc, r1
   24aa0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24aa4:	ldr	r3, [r4, #220]	; 0xdc
   24aa8:	cmp	r3, #0
   24aac:	beq	26094 <__flatcc_fb_gen_c_json_parser@@Base+0x1e88>
   24ab0:	sub	r3, r3, #1
   24ab4:	mov	r1, r5
   24ab8:	mov	r0, r4
   24abc:	str	r3, [r4, #220]	; 0xdc
   24ac0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24ac4:	ldr	r1, [pc, #1984]	; 2528c <__flatcc_fb_gen_c_json_parser@@Base+0x1080>
   24ac8:	mov	r0, r4
   24acc:	add	r1, pc, r1
   24ad0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24ad4:	ldr	r3, [r4, #212]	; 0xd4
   24ad8:	ldr	r3, [r3, #140]	; 0x8c
   24adc:	cmp	r3, #0
   24ae0:	beq	24afc <__flatcc_fb_gen_c_json_parser@@Base+0x8f0>
   24ae4:	ldr	r0, [pc, #1956]	; 25290 <__flatcc_fb_gen_c_json_parser@@Base+0x1084>
   24ae8:	ldr	r3, [r4, #204]	; 0xcc
   24aec:	mov	r2, #36	; 0x24
   24af0:	mov	r1, #1
   24af4:	add	r0, pc, r0
   24af8:	bl	13f10 <fwrite@plt>
   24afc:	ldr	r3, [r4, #208]	; 0xd0
   24b00:	ldr	r1, [pc, #1932]	; 25294 <__flatcc_fb_gen_c_json_parser@@Base+0x1088>
   24b04:	mov	r0, r4
   24b08:	add	r1, pc, r1
   24b0c:	ldr	r2, [r3, #164]	; 0xa4
   24b10:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24b14:	mov	r0, #0
   24b18:	add	sp, sp, #300	; 0x12c
   24b1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24b20:	mov	r3, #0
   24b24:	str	r3, [r9]
   24b28:	str	r3, [r9, #4]
   24b2c:	str	r3, [r9, #8]
   24b30:	str	r3, [r9, #12]
   24b34:	str	r3, [r9, #16]
   24b38:	str	r3, [r9, #20]
   24b3c:	str	r3, [r9, #24]
   24b40:	ldrh	r3, [fp, #8]
   24b44:	cmp	r3, #1
   24b48:	bne	25dd8 <__flatcc_fb_gen_c_json_parser@@Base+0x1bcc>
   24b4c:	add	r1, sp, #44	; 0x2c
   24b50:	ldr	r0, [fp, #20]
   24b54:	bl	23c9c <__flatcc_fb_gen_c_verifier@@Base+0x3a70>
   24b58:	cmp	r0, #0
   24b5c:	str	r0, [sp, #48]	; 0x30
   24b60:	beq	25898 <__flatcc_fb_gen_c_json_parser@@Base+0x168c>
   24b64:	ldr	r1, [pc, #1836]	; 25298 <__flatcc_fb_gen_c_json_parser@@Base+0x108c>
   24b68:	ldr	r3, [pc, #1836]	; 2529c <__flatcc_fb_gen_c_json_parser@@Base+0x1090>
   24b6c:	add	r1, pc, r1
   24b70:	add	r3, pc, r3
   24b74:	mov	ip, #1
   24b78:	mov	r2, #220	; 0xdc
   24b7c:	str	r1, [sp, #52]	; 0x34
   24b80:	mov	r0, r5
   24b84:	mov	r1, #0
   24b88:	str	r3, [sp, #56]	; 0x38
   24b8c:	str	ip, [sp, #64]	; 0x40
   24b90:	str	fp, [sp, #60]	; 0x3c
   24b94:	bl	13f94 <memset@plt>
   24b98:	mov	r2, r5
   24b9c:	mov	r1, fp
   24ba0:	ldr	r0, [fp, #12]
   24ba4:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   24ba8:	ldr	r1, [pc, #1776]	; 252a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1094>
   24bac:	mov	r2, r5
   24bb0:	add	r1, pc, r1
   24bb4:	mov	r0, r4
   24bb8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24bbc:	ldr	r1, [pc, #1760]	; 252a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1098>
   24bc0:	mov	r0, r4
   24bc4:	add	r1, pc, r1
   24bc8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24bcc:	ldr	r3, [r4, #220]	; 0xdc
   24bd0:	ldr	r1, [pc, #1744]	; 252a8 <__flatcc_fb_gen_c_json_parser@@Base+0x109c>
   24bd4:	add	r3, r3, #1
   24bd8:	str	r3, [r4, #220]	; 0xdc
   24bdc:	add	r1, pc, r1
   24be0:	mov	r0, r4
   24be4:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24be8:	ldr	r3, [sp, #44]	; 0x2c
   24bec:	cmp	r3, #0
   24bf0:	ble	24c34 <__flatcc_fb_gen_c_json_parser@@Base+0xa28>
   24bf4:	ldr	r1, [pc, #1712]	; 252ac <__flatcc_fb_gen_c_json_parser@@Base+0x10a0>
   24bf8:	mov	r0, r4
   24bfc:	add	r1, pc, r1
   24c00:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24c04:	ldr	r1, [pc, #1700]	; 252b0 <__flatcc_fb_gen_c_json_parser@@Base+0x10a4>
   24c08:	mov	r0, r4
   24c0c:	add	r1, pc, r1
   24c10:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24c14:	ldr	r1, [pc, #1688]	; 252b4 <__flatcc_fb_gen_c_json_parser@@Base+0x10a8>
   24c18:	mov	r0, r4
   24c1c:	add	r1, pc, r1
   24c20:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24c24:	ldr	r1, [pc, #1676]	; 252b8 <__flatcc_fb_gen_c_json_parser@@Base+0x10ac>
   24c28:	mov	r0, r4
   24c2c:	add	r1, pc, r1
   24c30:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24c34:	ldr	r1, [pc, #1664]	; 252bc <__flatcc_fb_gen_c_json_parser@@Base+0x10b0>
   24c38:	mov	r0, r4
   24c3c:	add	r1, pc, r1
   24c40:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24c44:	ldr	r1, [pc, #1652]	; 252c0 <__flatcc_fb_gen_c_json_parser@@Base+0x10b4>
   24c48:	mov	r0, r4
   24c4c:	add	r1, pc, r1
   24c50:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24c54:	ldr	r1, [pc, #1640]	; 252c4 <__flatcc_fb_gen_c_json_parser@@Base+0x10b8>
   24c58:	mov	r0, r4
   24c5c:	add	r1, pc, r1
   24c60:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24c64:	ldr	r3, [r4, #220]	; 0xdc
   24c68:	ldr	r2, [sp, #44]	; 0x2c
   24c6c:	add	r3, r3, #1
   24c70:	cmp	r2, #0
   24c74:	str	r3, [r4, #220]	; 0xdc
   24c78:	bne	25858 <__flatcc_fb_gen_c_json_parser@@Base+0x164c>
   24c7c:	ldr	r1, [pc, #1604]	; 252c8 <__flatcc_fb_gen_c_json_parser@@Base+0x10bc>
   24c80:	mov	r0, r4
   24c84:	add	r1, pc, r1
   24c88:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24c8c:	ldr	r1, [pc, #1592]	; 252cc <__flatcc_fb_gen_c_json_parser@@Base+0x10c0>
   24c90:	mov	r0, r4
   24c94:	add	r1, pc, r1
   24c98:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24c9c:	ldr	r1, [pc, #1580]	; 252d0 <__flatcc_fb_gen_c_json_parser@@Base+0x10c4>
   24ca0:	mov	r0, r4
   24ca4:	add	r1, pc, r1
   24ca8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24cac:	ldr	r3, [r4, #220]	; 0xdc
   24cb0:	cmp	r3, #0
   24cb4:	beq	26124 <__flatcc_fb_gen_c_json_parser@@Base+0x1f18>
   24cb8:	ldr	r1, [pc, #1556]	; 252d4 <__flatcc_fb_gen_c_json_parser@@Base+0x10c8>
   24cbc:	sub	r3, r3, #1
   24cc0:	str	r3, [r4, #220]	; 0xdc
   24cc4:	add	r1, pc, r1
   24cc8:	mov	r0, r4
   24ccc:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24cd0:	ldr	r1, [pc, #1536]	; 252d8 <__flatcc_fb_gen_c_json_parser@@Base+0x10cc>
   24cd4:	mov	r0, r4
   24cd8:	add	r1, pc, r1
   24cdc:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24ce0:	ldr	r3, [sp, #44]	; 0x2c
   24ce4:	cmp	r3, #0
   24ce8:	ble	24d24 <__flatcc_fb_gen_c_json_parser@@Base+0xb18>
   24cec:	ldr	r2, [r4, #220]	; 0xdc
   24cf0:	ldr	r1, [pc, #1508]	; 252dc <__flatcc_fb_gen_c_json_parser@@Base+0x10d0>
   24cf4:	mov	r3, #0
   24cf8:	str	r3, [r4, #220]	; 0xdc
   24cfc:	add	r1, pc, r1
   24d00:	mov	r0, r4
   24d04:	str	r2, [r4, #228]	; 0xe4
   24d08:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24d0c:	ldr	r3, [r4, #228]	; 0xe4
   24d10:	ldr	r1, [pc, #1480]	; 252e0 <__flatcc_fb_gen_c_json_parser@@Base+0x10d4>
   24d14:	str	r3, [r4, #220]	; 0xdc
   24d18:	add	r1, pc, r1
   24d1c:	mov	r0, r4
   24d20:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24d24:	ldr	r3, [r4, #220]	; 0xdc
   24d28:	cmp	r3, #0
   24d2c:	beq	25fbc <__flatcc_fb_gen_c_json_parser@@Base+0x1db0>
   24d30:	ldr	r1, [pc, #1452]	; 252e4 <__flatcc_fb_gen_c_json_parser@@Base+0x10d8>
   24d34:	sub	r3, r3, #1
   24d38:	str	r3, [r4, #220]	; 0xdc
   24d3c:	add	r1, pc, r1
   24d40:	mov	r0, r4
   24d44:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24d48:	ldr	r1, [pc, #1432]	; 252e8 <__flatcc_fb_gen_c_json_parser@@Base+0x10dc>
   24d4c:	mov	r0, r4
   24d50:	add	r1, pc, r1
   24d54:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24d58:	ldr	r0, [sp, #48]	; 0x30
   24d5c:	cmp	r0, #0
   24d60:	beq	24d68 <__flatcc_fb_gen_c_json_parser@@Base+0xb5c>
   24d64:	bl	13ec8 <free@plt>
   24d68:	ldrh	r3, [fp, #8]
   24d6c:	cmp	r3, #1
   24d70:	bne	25f98 <__flatcc_fb_gen_c_json_parser@@Base+0x1d8c>
   24d74:	mov	r2, #220	; 0xdc
   24d78:	mov	r1, #0
   24d7c:	mov	r0, r5
   24d80:	bl	13f94 <memset@plt>
   24d84:	mov	r2, r5
   24d88:	mov	r1, fp
   24d8c:	ldr	r0, [fp, #12]
   24d90:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   24d94:	ldr	r7, [pc, #1360]	; 252ec <__flatcc_fb_gen_c_json_parser@@Base+0x10e0>
   24d98:	ldr	r1, [pc, #1360]	; 252f0 <__flatcc_fb_gen_c_json_parser@@Base+0x10e4>
   24d9c:	mov	r2, r5
   24da0:	add	r1, pc, r1
   24da4:	mov	r0, r4
   24da8:	add	r7, pc, r7
   24dac:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24db0:	mov	r1, r7
   24db4:	mov	r0, r4
   24db8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24dbc:	ldr	r3, [r4, #220]	; 0xdc
   24dc0:	ldr	r6, [pc, #1324]	; 252f4 <__flatcc_fb_gen_c_json_parser@@Base+0x10e8>
   24dc4:	ldr	r1, [pc, #1324]	; 252f8 <__flatcc_fb_gen_c_json_parser@@Base+0x10ec>
   24dc8:	add	r3, r3, #1
   24dcc:	str	r3, [r4, #220]	; 0xdc
   24dd0:	add	r1, pc, r1
   24dd4:	mov	r0, r4
   24dd8:	add	r6, pc, r6
   24ddc:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24de0:	mov	r1, r6
   24de4:	mov	r0, r4
   24de8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24dec:	ldr	r1, [pc, #1288]	; 252fc <__flatcc_fb_gen_c_json_parser@@Base+0x10f0>
   24df0:	mov	r0, r4
   24df4:	add	r1, pc, r1
   24df8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24dfc:	ldrh	r0, [fp, #104]	; 0x68
   24e00:	ldr	r1, [pc, #1272]	; 25300 <__flatcc_fb_gen_c_json_parser@@Base+0x10f4>
   24e04:	ldrd	r2, [fp, #112]	; 0x70
   24e08:	add	r1, pc, r1
   24e0c:	str	r0, [sp]
   24e10:	mov	r0, r4
   24e14:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24e18:	ldr	r1, [pc, #1252]	; 25304 <__flatcc_fb_gen_c_json_parser@@Base+0x10f8>
   24e1c:	mov	r2, r5
   24e20:	add	r1, pc, r1
   24e24:	mov	r0, r4
   24e28:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24e2c:	ldr	r1, [pc, #1236]	; 25308 <__flatcc_fb_gen_c_json_parser@@Base+0x10fc>
   24e30:	mov	r0, r4
   24e34:	add	r1, pc, r1
   24e38:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24e3c:	ldr	r1, [pc, #1224]	; 2530c <__flatcc_fb_gen_c_json_parser@@Base+0x1100>
   24e40:	mov	r0, r4
   24e44:	add	r1, pc, r1
   24e48:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24e4c:	ldr	r2, [r4, #220]	; 0xdc
   24e50:	ldr	r1, [pc, #1208]	; 25310 <__flatcc_fb_gen_c_json_parser@@Base+0x1104>
   24e54:	mov	r3, #0
   24e58:	str	r2, [r4, #228]	; 0xe4
   24e5c:	str	r3, [r4, #220]	; 0xdc
   24e60:	add	r1, pc, r1
   24e64:	mov	r0, r4
   24e68:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24e6c:	ldr	r3, [r4, #228]	; 0xe4
   24e70:	ldr	r1, [pc, #1180]	; 25314 <__flatcc_fb_gen_c_json_parser@@Base+0x1108>
   24e74:	str	r3, [r4, #220]	; 0xdc
   24e78:	add	r1, pc, r1
   24e7c:	mov	r0, r4
   24e80:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24e84:	ldr	r3, [r4, #220]	; 0xdc
   24e88:	cmp	r3, #0
   24e8c:	beq	25f74 <__flatcc_fb_gen_c_json_parser@@Base+0x1d68>
   24e90:	ldr	r8, [pc, #1152]	; 25318 <__flatcc_fb_gen_c_json_parser@@Base+0x110c>
   24e94:	sub	r3, r3, #1
   24e98:	add	r8, pc, r8
   24e9c:	str	r3, [r4, #220]	; 0xdc
   24ea0:	mov	r1, r8
   24ea4:	mov	r0, r4
   24ea8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24eac:	mov	r1, r6
   24eb0:	mov	r0, r4
   24eb4:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24eb8:	ldr	r1, [pc, #1116]	; 2531c <__flatcc_fb_gen_c_json_parser@@Base+0x1110>
   24ebc:	mov	r2, r5
   24ec0:	add	r1, pc, r1
   24ec4:	mov	r0, r4
   24ec8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24ecc:	mov	r1, r7
   24ed0:	mov	r0, r4
   24ed4:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24ed8:	ldr	r3, [r4, #220]	; 0xdc
   24edc:	ldr	r1, [pc, #1084]	; 25320 <__flatcc_fb_gen_c_json_parser@@Base+0x1114>
   24ee0:	add	r3, r3, #1
   24ee4:	str	r3, [r4, #220]	; 0xdc
   24ee8:	mov	r2, r5
   24eec:	add	r1, pc, r1
   24ef0:	mov	r0, r4
   24ef4:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24ef8:	ldr	r3, [r4, #220]	; 0xdc
   24efc:	cmp	r3, #0
   24f00:	beq	25f50 <__flatcc_fb_gen_c_json_parser@@Base+0x1d44>
   24f04:	sub	r3, r3, #1
   24f08:	mov	r1, r8
   24f0c:	mov	r0, r4
   24f10:	str	r3, [r4, #220]	; 0xdc
   24f14:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24f18:	mov	r1, r6
   24f1c:	mov	r0, r4
   24f20:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24f24:	b	24610 <__flatcc_fb_gen_c_json_parser@@Base+0x404>
   24f28:	mov	r1, fp
   24f2c:	mov	r0, r4
   24f30:	bl	23e28 <__flatcc_fb_gen_c_verifier@@Base+0x3bfc>
   24f34:	b	24610 <__flatcc_fb_gen_c_json_parser@@Base+0x404>
   24f38:	mov	r3, #0
   24f3c:	str	r3, [r9]
   24f40:	str	r3, [r9, #4]
   24f44:	str	r3, [r9, #8]
   24f48:	str	r3, [r9, #12]
   24f4c:	str	r3, [r9, #16]
   24f50:	str	r3, [r9, #20]
   24f54:	str	r3, [r9, #24]
   24f58:	ldrh	r6, [fp, #8]
   24f5c:	cmp	r6, r3
   24f60:	bne	26100 <__flatcc_fb_gen_c_json_parser@@Base+0x1ef4>
   24f64:	add	r1, sp, #44	; 0x2c
   24f68:	ldr	r0, [fp, #20]
   24f6c:	bl	23c9c <__flatcc_fb_gen_c_verifier@@Base+0x3a70>
   24f70:	cmp	r0, #0
   24f74:	str	r0, [sp, #48]	; 0x30
   24f78:	beq	25a00 <__flatcc_fb_gen_c_json_parser@@Base+0x17f4>
   24f7c:	ldr	r2, [sp, #44]	; 0x2c
   24f80:	ldr	r1, [pc, #924]	; 25324 <__flatcc_fb_gen_c_json_parser@@Base+0x1118>
   24f84:	ldr	r3, [pc, #924]	; 25328 <__flatcc_fb_gen_c_json_parser@@Base+0x111c>
   24f88:	add	r1, pc, r1
   24f8c:	add	r3, pc, r3
   24f90:	cmp	r2, #0
   24f94:	str	fp, [sp, #60]	; 0x3c
   24f98:	str	r6, [sp, #64]	; 0x40
   24f9c:	str	r6, [sp, #68]	; 0x44
   24fa0:	str	r1, [sp, #52]	; 0x34
   24fa4:	str	r3, [sp, #56]	; 0x38
   24fa8:	ble	24fcc <__flatcc_fb_gen_c_json_parser@@Base+0xdc0>
   24fac:	add	r2, r0, r2, lsl #4
   24fb0:	ldr	r3, [r0, #12]
   24fb4:	add	r0, r0, #16
   24fb8:	cmp	r3, #0
   24fbc:	addne	r6, r6, #1
   24fc0:	cmp	r2, r0
   24fc4:	bne	24fb0 <__flatcc_fb_gen_c_json_parser@@Base+0xda4>
   24fc8:	str	r6, [sp, #68]	; 0x44
   24fcc:	mov	r2, #220	; 0xdc
   24fd0:	mov	r1, #0
   24fd4:	mov	r0, r5
   24fd8:	bl	13f94 <memset@plt>
   24fdc:	mov	r2, r5
   24fe0:	mov	r1, fp
   24fe4:	ldr	r0, [fp, #12]
   24fe8:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   24fec:	mov	r2, r5
   24ff0:	ldr	r1, [sp, #12]
   24ff4:	mov	r0, r4
   24ff8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   24ffc:	ldr	r1, [sp, #16]
   25000:	mov	r0, r4
   25004:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25008:	ldr	r3, [r4, #220]	; 0xdc
   2500c:	ldr	r1, [sp, #20]
   25010:	add	r3, r3, #1
   25014:	str	r3, [r4, #220]	; 0xdc
   25018:	mov	r0, r4
   2501c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25020:	ldr	r3, [sp, #44]	; 0x2c
   25024:	cmp	r3, #0
   25028:	ble	2506c <__flatcc_fb_gen_c_json_parser@@Base+0xe60>
   2502c:	ldr	r1, [pc, #760]	; 2532c <__flatcc_fb_gen_c_json_parser@@Base+0x1120>
   25030:	mov	r0, r4
   25034:	add	r1, pc, r1
   25038:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2503c:	ldr	r1, [pc, #748]	; 25330 <__flatcc_fb_gen_c_json_parser@@Base+0x1124>
   25040:	mov	r0, r4
   25044:	add	r1, pc, r1
   25048:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2504c:	ldr	r1, [pc, #736]	; 25334 <__flatcc_fb_gen_c_json_parser@@Base+0x1128>
   25050:	mov	r0, r4
   25054:	add	r1, pc, r1
   25058:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2505c:	ldr	r1, [pc, #724]	; 25338 <__flatcc_fb_gen_c_json_parser@@Base+0x112c>
   25060:	mov	r0, r4
   25064:	add	r1, pc, r1
   25068:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2506c:	ldr	r3, [sp, #68]	; 0x44
   25070:	cmp	r3, #0
   25074:	bne	258fc <__flatcc_fb_gen_c_json_parser@@Base+0x16f0>
   25078:	ldr	r1, [sp, #24]
   2507c:	mov	r0, r4
   25080:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25084:	ldr	r1, [sp, #28]
   25088:	mov	r0, r4
   2508c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25090:	ldrd	r2, [fp, #96]	; 0x60
   25094:	ldr	r1, [sp, #32]
   25098:	mov	r0, r4
   2509c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   250a0:	ldr	r2, [sp, #68]	; 0x44
   250a4:	cmp	r2, #0
   250a8:	bne	25924 <__flatcc_fb_gen_c_json_parser@@Base+0x1718>
   250ac:	ldr	r1, [pc, #648]	; 2533c <__flatcc_fb_gen_c_json_parser@@Base+0x1130>
   250b0:	mov	r0, r4
   250b4:	add	r1, pc, r1
   250b8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   250bc:	ldr	r1, [pc, #636]	; 25340 <__flatcc_fb_gen_c_json_parser@@Base+0x1134>
   250c0:	mov	r0, r4
   250c4:	add	r1, pc, r1
   250c8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   250cc:	ldr	r3, [r4, #220]	; 0xdc
   250d0:	ldr	r1, [pc, #620]	; 25344 <__flatcc_fb_gen_c_json_parser@@Base+0x1138>
   250d4:	add	r3, r3, #1
   250d8:	str	r3, [r4, #220]	; 0xdc
   250dc:	add	r1, pc, r1
   250e0:	mov	r0, r4
   250e4:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   250e8:	ldr	r3, [sp, #44]	; 0x2c
   250ec:	cmp	r3, #0
   250f0:	ble	2593c <__flatcc_fb_gen_c_json_parser@@Base+0x1730>
   250f4:	ldr	r1, [pc, #588]	; 25348 <__flatcc_fb_gen_c_json_parser@@Base+0x113c>
   250f8:	mov	r0, r4
   250fc:	add	r1, pc, r1
   25100:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25104:	ldr	r3, [sp, #44]	; 0x2c
   25108:	mov	r2, #0
   2510c:	sub	r3, r3, #1
   25110:	str	r2, [sp]
   25114:	mov	r1, r9
   25118:	mov	r0, r4
   2511c:	bl	20bb8 <__flatcc_fb_gen_c_verifier@@Base+0x98c>
   25120:	ldr	r1, [pc, #548]	; 2534c <__flatcc_fb_gen_c_json_parser@@Base+0x1140>
   25124:	mov	r0, r4
   25128:	add	r1, pc, r1
   2512c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25130:	ldr	r3, [r4, #220]	; 0xdc
   25134:	cmp	r3, #0
   25138:	beq	25f2c <__flatcc_fb_gen_c_json_parser@@Base+0x1d20>
   2513c:	ldr	r1, [pc, #524]	; 25350 <__flatcc_fb_gen_c_json_parser@@Base+0x1144>
   25140:	sub	r3, r3, #1
   25144:	str	r3, [r4, #220]	; 0xdc
   25148:	add	r1, pc, r1
   2514c:	mov	r0, r4
   25150:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25154:	ldr	r1, [pc, #504]	; 25354 <__flatcc_fb_gen_c_json_parser@@Base+0x1148>
   25158:	mov	r0, r4
   2515c:	add	r1, pc, r1
   25160:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25164:	ldr	r1, [sp, #44]	; 0x2c
   25168:	cmp	r1, #0
   2516c:	ble	25734 <__flatcc_fb_gen_c_json_parser@@Base+0x1528>
   25170:	ldr	r3, [pc, #480]	; 25358 <__flatcc_fb_gen_c_json_parser@@Base+0x114c>
   25174:	ldr	sl, [pc, #480]	; 2535c <__flatcc_fb_gen_c_json_parser@@Base+0x1150>
   25178:	mov	r6, #0
   2517c:	add	r3, pc, r3
   25180:	add	sl, pc, sl
   25184:	str	r3, [sp, #8]
   25188:	mov	r7, r6
   2518c:	mov	r8, #1
   25190:	b	25644 <__flatcc_fb_gen_c_json_parser@@Base+0x1438>
   25194:	ldrdeq	r5, [r4], -r4
   25198:			; <UNDEFINED> instruction: 0x0002f4bc
   2519c:	muleq	r2, ip, r4
   251a0:	andeq	pc, r2, ip, lsr #9
   251a4:	andeq	pc, r2, ip, lsr #9
   251a8:	andeq	pc, r2, r0, ror #9
   251ac:	strdeq	pc, [r2], -r4
   251b0:	andeq	fp, r1, r4, ror #6
   251b4:	andeq	ip, r1, r4, lsr #23
   251b8:	andeq	r5, r2, ip, lsl #8
   251bc:	andeq	pc, r2, r0, asr #15
   251c0:	andeq	pc, r2, r8, ror r6	; <UNPREDICTABLE>
   251c4:	ldrdeq	pc, [r2], -r4
   251c8:			; <UNDEFINED> instruction: 0x0002e1b8
   251cc:	andeq	pc, r2, r8, lsl r8	; <UNPREDICTABLE>
   251d0:	andeq	pc, r2, r0, lsl r7	; <UNPREDICTABLE>
   251d4:	andeq	pc, r2, r8, lsl #13
   251d8:	andeq	pc, r2, ip, asr r2	; <UNPREDICTABLE>
   251dc:	andeq	lr, r2, ip, lsr #2
   251e0:			; <UNDEFINED> instruction: 0xffffd354
   251e4:			; <UNDEFINED> instruction: 0x0002f7b8
   251e8:	strheq	lr, [r2], -r8
   251ec:	andeq	r5, r2, r0, ror #4
   251f0:	andeq	pc, r2, r0, asr fp	; <UNPREDICTABLE>
   251f4:	andeq	r0, r3, r8, lsl sl
   251f8:	andeq	pc, r2, r8, lsl r8	; <UNPREDICTABLE>
   251fc:	andeq	r5, r2, r4, lsl r2
   25200:	strdeq	lr, [r2], -r0
   25204:	ldrdeq	pc, [r2], -r0
   25208:	andeq	sp, r2, r8, ror #20
   2520c:	andeq	sp, r2, ip, lsr #25
   25210:	andeq	sp, r2, r4, lsl sp
   25214:	ldrdeq	r0, [r0], -r3
   25218:			; <UNDEFINED> instruction: 0xffffdc48
   2521c:			; <UNDEFINED> instruction: 0xffffda04
   25220:			; <UNDEFINED> instruction: 0xffffd928
   25224:			; <UNDEFINED> instruction: 0xffffd91c
   25228:			; <UNDEFINED> instruction: 0xffffe190
   2522c:			; <UNDEFINED> instruction: 0xffffbed4
   25230:	strdeq	pc, [r2], -r4
   25234:	andeq	lr, r2, r8, ror #2
   25238:	andeq	r0, r3, ip, ror r6
   2523c:	andeq	pc, r2, r8, lsl #22
   25240:	andeq	lr, r2, r8, ror #2
   25244:	andeq	sp, r2, r0, lsr sl
   25248:	andeq	r4, r2, r4, lsr #28
   2524c:	strdeq	lr, [r2], -r8
   25250:	andeq	pc, r2, r4, ror sl	; <UNPREDICTABLE>
   25254:	andeq	r0, r3, r0, asr r5
   25258:	andeq	pc, r2, ip, lsl #24
   2525c:	andeq	pc, r2, ip, asr sl	; <UNPREDICTABLE>
   25260:	andeq	r4, r2, r4, lsr #26
   25264:	strdeq	pc, [r2], -r4
   25268:	andeq	pc, r2, r4, ror #20
   2526c:	andeq	pc, r2, r0, asr #21
   25270:	ldrdeq	pc, [r2], -r0
   25274:	andeq	pc, r2, r8, lsl #22
   25278:	andeq	pc, r2, r4, lsl #22
   2527c:	andeq	sp, r2, r0, lsl #17
   25280:	ldrdeq	pc, [r2], -ip
   25284:	andeq	pc, r2, r0, lsl #22
   25288:	andeq	pc, r2, r4, lsl #22
   2528c:	andeq	r4, r2, ip, lsl ip
   25290:	andeq	r2, r2, r0, ror #3
   25294:	andeq	pc, r2, r8, lsl fp	; <UNPREDICTABLE>
   25298:			; <UNDEFINED> instruction: 0xfffff054
   2529c:			; <UNDEFINED> instruction: 0xffffbb6c
   252a0:	strheq	pc, [r2], -r0	; <UNPREDICTABLE>
   252a4:	andeq	r0, r3, r0, lsl r3
   252a8:	andeq	pc, r2, r4, lsl #2
   252ac:	strdeq	pc, [r2], -r0
   252b0:	strdeq	pc, [r2], -ip
   252b4:	andeq	sp, r2, ip, lsl lr
   252b8:	andeq	sp, r2, r0, lsr #28
   252bc:	andeq	r4, r2, ip, lsr #21
   252c0:	andeq	pc, r2, r8, asr #1
   252c4:	andeq	lr, r2, r8, lsl #2
   252c8:	ldrdeq	pc, [r2], -r0
   252cc:	andeq	sp, r2, ip, lsr r5
   252d0:	strdeq	pc, [r2], -ip
   252d4:	andeq	sp, r2, ip, lsl r6
   252d8:	andeq	sp, r2, r0, lsl #23
   252dc:	andeq	pc, r2, r0, ror #1
   252e0:	andeq	sp, r2, ip, asr fp
   252e4:	andeq	sp, r2, r4, lsr #11
   252e8:	muleq	r2, r8, r9
   252ec:	andeq	r0, r3, ip, lsr #2
   252f0:	andeq	pc, r2, r4, asr #32
   252f4:	andeq	r4, r2, r0, lsl r9
   252f8:	andeq	lr, r2, r8, lsr pc
   252fc:	ldrdeq	sp, [r2], -ip
   25300:	andeq	pc, r2, r0, rrx
   25304:	andeq	lr, r2, r4, lsl #6
   25308:	andeq	pc, r2, r0, lsl #1
   2530c:	andeq	sp, r2, r4, lsl sl
   25310:	andeq	lr, r2, ip, ror pc
   25314:	strdeq	sp, [r2], -ip
   25318:	andeq	sp, r2, r8, asr #8
   2531c:	andeq	pc, r2, r8, asr #32
   25320:	strheq	pc, [r2], -r0	; <UNPREDICTABLE>
   25324:			; <UNDEFINED> instruction: 0xffffec38
   25328:			; <UNDEFINED> instruction: 0xffffb750
   2532c:	ldrdeq	lr, [r2], -r4
   25330:	andeq	pc, r2, r0, asr #32
   25334:	andeq	sp, r2, r4, ror #19
   25338:	andeq	sp, r2, r8, ror #19
   2533c:	andeq	lr, r2, r0, ror #24
   25340:	andeq	sp, r2, r0, lsr #25
   25344:	andeq	lr, r2, ip, lsl #25
   25348:	andeq	sp, r2, r0, ror #5
   2534c:	andeq	pc, r2, ip, asr #32
   25350:	muleq	r2, r8, r1
   25354:	andeq	pc, r2, r4, asr r0	; <UNPREDICTABLE>
   25358:	andeq	pc, r2, r4, asr r0	; <UNPREDICTABLE>
   2535c:	andeq	pc, r2, ip, lsl #1
   25360:	andeq	sp, r2, r4, ror #18
   25364:	andeq	lr, r2, r4, asr fp
   25368:	andeq	sp, r2, r4, asr sp
   2536c:			; <UNDEFINED> instruction: 0x0002cbb8
   25370:	muleq	r2, ip, fp
   25374:	andeq	sp, r2, r0, lsl #2
   25378:	andeq	lr, r2, r8, ror #12
   2537c:	andeq	sp, r2, r8, ror #1
   25380:	andeq	ip, r2, r0, lsr fp
   25384:	andeq	r3, r2, r8, lsr #30
   25388:	andeq	lr, r2, ip, lsr #14
   2538c:	andeq	pc, r2, r4, ror #13
   25390:	andeq	lr, r2, ip, lsl fp
   25394:	andeq	lr, r2, r8, lsl #10
   25398:	andeq	ip, r2, ip, ror #22
   2539c:	muleq	r2, ip, r0
   253a0:	andeq	ip, r2, r0, lsr #19
   253a4:	muleq	r1, r0, r1
   253a8:	andeq	ip, r2, r4, lsr r7
   253ac:	andeq	r2, r2, r0, ror r5
   253b0:	andeq	r0, r0, r7, lsl r5
   253b4:	andeq	lr, r2, r4, lsr #15
   253b8:	andeq	lr, r2, r8, lsl #19
   253bc:	ldrdeq	lr, [r2], -r0
   253c0:	andeq	lr, r2, r4, lsl r8
   253c4:	andeq	ip, r2, ip, ror r8
   253c8:	strheq	sp, [r2], -r0
   253cc:	andeq	sp, r2, r0, asr #1
   253d0:	andeq	sp, r2, r4, asr #1
   253d4:	andeq	r3, r2, r0, asr sp
   253d8:	andeq	ip, r2, r4, lsr sl
   253dc:	andeq	ip, r2, r8, lsl #29
   253e0:	strdeq	ip, [r2], -r0
   253e4:			; <UNDEFINED> instruction: 0xffffe1ac
   253e8:			; <UNDEFINED> instruction: 0xffffacc4
   253ec:	andeq	sp, r2, ip, asr #29
   253f0:	andeq	lr, r2, r8, asr #18
   253f4:	andeq	pc, r2, r8, lsr #8
   253f8:	andeq	lr, r2, r8, lsr #18
   253fc:	andeq	lr, r2, r4, lsr r9
   25400:	strdeq	r3, [r2], -ip
   25404:	andeq	lr, r2, r0, lsr r9
   25408:	andeq	lr, r2, ip, lsr r9
   2540c:	muleq	r2, r8, r9
   25410:	andeq	lr, r2, r0, asr #19
   25414:	andeq	lr, r2, r0, ror #19
   25418:	ldrdeq	lr, [r2], -ip
   2541c:	andeq	ip, r2, r8, asr r7
   25420:			; <UNDEFINED> instruction: 0x0002e9b4
   25424:	ldrdeq	lr, [r2], -r8
   25428:	ldrdeq	lr, [r2], -ip
   2542c:	strdeq	r3, [r2], -r4
   25430:	muleq	r2, ip, fp
   25434:	muleq	r2, r0, fp
   25438:	ldrdeq	sp, [r2], -r8
   2543c:	andeq	sp, r2, ip, asr #23
   25440:	andeq	sp, r2, r0, lsl #24
   25444:	andeq	sp, r2, r8, lsr #24
   25448:	andeq	sp, r2, r0, asr #24
   2544c:	andeq	sp, r2, r8, ror ip
   25450:	andeq	ip, r2, r0, lsr #11
   25454:	muleq	r2, r0, ip
   25458:	andeq	sp, r2, r4, asr #25
   2545c:	andeq	lr, r2, r8, ror r7
   25460:	andeq	lr, r2, ip, asr r7
   25464:	andeq	ip, r2, ip, ror #23
   25468:	strdeq	ip, [r2], -r0
   2546c:	andeq	r9, r1, r0, ror #25
   25470:	andeq	ip, r2, r4, lsl #5
   25474:	andeq	r2, r2, r0, asr #1
   25478:	andeq	r0, r0, sl, lsr #9
   2547c:	andeq	ip, r2, r8, asr r2
   25480:	muleq	r2, ip, r4
   25484:	andeq	ip, r2, r4, lsl #10
   25488:	andeq	r0, r0, r3, asr #13
   2548c:	andeq	ip, r2, r4, lsr r2
   25490:	andeq	ip, r2, r8, ror r4
   25494:			; <UNDEFINED> instruction: 0x00019fbc
   25498:	andeq	r0, r0, r5, lsl r5
   2549c:	andeq	ip, r2, r0, lsl r2
   254a0:	andeq	ip, r2, r4, asr r4
   254a4:			; <UNDEFINED> instruction: 0x0002c4bc
   254a8:			; <UNDEFINED> instruction: 0x000005b5
   254ac:	andeq	ip, r2, ip, ror #3
   254b0:	andeq	ip, r2, r0, lsr r4
   254b4:	muleq	r2, r8, r4
   254b8:			; <UNDEFINED> instruction: 0x000005b2
   254bc:	andeq	ip, r2, r8, asr #3
   254c0:	andeq	ip, r2, ip, lsl #8
   254c4:	andeq	ip, r2, r4, ror r4
   254c8:	andeq	r0, r0, r7, asr #11
   254cc:	andeq	ip, r2, r4, lsr #3
   254d0:	andeq	ip, r2, r8, ror #7
   254d4:	andeq	ip, r2, r0, asr r4
   254d8:	andeq	r0, r0, r1, asr #11
   254dc:	muleq	r0, ip, r0
   254e0:			; <UNDEFINED> instruction: 0x0002cab4
   254e4:			; <UNDEFINED> instruction: 0x0002c3b8
   254e8:	andeq	r9, r1, r8, lsr #23
   254ec:	andeq	ip, r2, ip, asr #2
   254f0:	andeq	r1, r2, r8, lsl #31
   254f4:	andeq	ip, r2, r8, lsr #2
   254f8:	andeq	ip, r2, ip, ror #6
   254fc:	ldrdeq	ip, [r2], -r4
   25500:	andeq	r0, r0, sl, asr #12
   25504:	andeq	ip, r2, r4, lsl #2
   25508:	andeq	ip, r2, r8, asr #6
   2550c:			; <UNDEFINED> instruction: 0x0002c3b0
   25510:			; <UNDEFINED> instruction: 0x000006b4
   25514:	andeq	ip, r2, r0, ror #1
   25518:	andeq	ip, r2, r4, lsr #6
   2551c:	andeq	ip, r2, ip, lsl #7
   25520:	muleq	r0, lr, r5
   25524:	strheq	ip, [r2], -ip	; <UNPREDICTABLE>
   25528:	andeq	ip, r2, r0, lsl #6
   2552c:	andeq	ip, r2, r8, ror #6
   25530:	muleq	r2, r8, r0
   25534:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   25538:	andeq	ip, r2, r4, asr #6
   2553c:	andeq	r0, r0, sl, asr r5
   25540:	andeq	ip, r2, r4, ror r0
   25544:			; <UNDEFINED> instruction: 0x0002c2b8
   25548:	strdeq	r9, [r1], -ip
   2554c:	andeq	r0, r0, r9, asr #10
   25550:	andeq	ip, r2, r0, asr r0
   25554:	muleq	r2, r4, r2
   25558:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   2555c:	andeq	r0, r0, pc, lsr r5
   25560:	andeq	ip, r2, ip, lsr #32
   25564:	andeq	ip, r2, r0, ror r2
   25568:	ldrdeq	ip, [r2], -r8
   2556c:	andeq	r0, r0, sp, ror #12
   25570:	andeq	ip, r2, r8
   25574:	andeq	ip, r2, ip, asr #4
   25578:			; <UNDEFINED> instruction: 0x0002c2b4
   2557c:	andeq	r0, r0, sl, asr r6
   25580:	andeq	fp, r2, r4, ror #31
   25584:	andeq	ip, r2, r8, lsr #4
   25588:	muleq	r2, r0, r2
   2558c:	andeq	r0, r0, lr, asr r6
   25590:	andeq	fp, r2, r0, asr #31
   25594:	andeq	ip, r2, r4, lsl #4
   25598:	andeq	ip, r2, ip, ror #4
   2559c:			; <UNDEFINED> instruction: 0x000004b5
   255a0:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   255a4:	andeq	ip, r2, r0, ror #3
   255a8:	andeq	ip, r2, r8, asr #4
   255ac:			; <UNDEFINED> instruction: 0x000004ba
   255b0:	andeq	fp, r2, r8, ror pc
   255b4:			; <UNDEFINED> instruction: 0x0002c1bc
   255b8:	andeq	ip, r2, r4, lsr #4
   255bc:	andeq	r0, r0, r1, lsl #13
   255c0:	andeq	fp, r2, r4, asr pc
   255c4:	muleq	r2, r8, r1
   255c8:	andeq	ip, r2, r0, lsl #4
   255cc:	andeq	r0, r0, sp, ror r6
   255d0:	andeq	fp, r2, r0, lsr pc
   255d4:	andeq	ip, r2, r4, ror r1
   255d8:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   255dc:	ldrdeq	r0, [r0], -fp
   255e0:	andeq	fp, r2, ip, lsl #30
   255e4:	andeq	ip, r2, r0, asr r1
   255e8:	andeq	sl, r1, r0, lsr #10
   255ec:	andeq	r0, r0, lr, ror #10
   255f0:	andeq	fp, r2, r8, ror #29
   255f4:	andeq	ip, r2, ip, lsr #2
   255f8:	muleq	r2, r4, r1
   255fc:	andeq	r0, r0, r6, lsr r5
   25600:	andeq	fp, r2, r4, asr #29
   25604:	andeq	ip, r2, r8, lsl #2
   25608:	andeq	ip, r2, r0, ror r1
   2560c:	andeq	r0, r0, r3, asr #9
   25610:	subs	r2, r2, ip
   25614:	ldr	r1, [sp, #8]
   25618:	sbc	r3, r3, ip, asr #31
   2561c:	mov	r0, r4
   25620:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25624:	ldr	r3, [r4, #220]	; 0xdc
   25628:	ldr	r1, [sp, #44]	; 0x2c
   2562c:	mov	r8, r7
   25630:	add	r3, r3, #1
   25634:	str	r3, [r4, #220]	; 0xdc
   25638:	add	r6, r6, #1
   2563c:	cmp	r6, r1
   25640:	bge	256b8 <__flatcc_fb_gen_c_json_parser@@Base+0x14ac>
   25644:	ldr	r3, [sp, #48]	; 0x30
   25648:	add	r3, r3, r6, lsl #4
   2564c:	ldr	r3, [r3, #8]
   25650:	ldrh	r2, [r3, #72]	; 0x48
   25654:	tst	r2, #4
   25658:	bne	25638 <__flatcc_fb_gen_c_json_parser@@Base+0x142c>
   2565c:	ldrh	r0, [r3, #24]
   25660:	sub	r0, r0, #14
   25664:	cmp	r0, #1
   25668:	movhi	ip, r7
   2566c:	ldrls	r0, [r3, #16]
   25670:	ldrhls	ip, [r0, #8]
   25674:	subls	ip, ip, #4
   25678:	clzls	ip, ip
   2567c:	lsrls	ip, ip, #5
   25680:	tst	r2, #256	; 0x100
   25684:	beq	25638 <__flatcc_fb_gen_c_json_parser@@Base+0x142c>
   25688:	cmp	r8, #0
   2568c:	ldrd	r2, [r3, #96]	; 0x60
   25690:	bne	25610 <__flatcc_fb_gen_c_json_parser@@Base+0x1404>
   25694:	subs	r2, r2, ip
   25698:	mov	r1, sl
   2569c:	sbc	r3, r3, ip, asr #31
   256a0:	mov	r0, r4
   256a4:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   256a8:	ldr	r1, [sp, #44]	; 0x2c
   256ac:	add	r6, r6, #1
   256b0:	cmp	r6, r1
   256b4:	blt	25644 <__flatcc_fb_gen_c_json_parser@@Base+0x1438>
   256b8:	cmp	r8, #0
   256bc:	bne	25734 <__flatcc_fb_gen_c_json_parser@@Base+0x1528>
   256c0:	ldr	r3, [r4, #220]	; 0xdc
   256c4:	cmp	r3, #0
   256c8:	beq	25e20 <__flatcc_fb_gen_c_json_parser@@Base+0x1c14>
   256cc:	ldr	r1, [pc, #-884]	; 25360 <__flatcc_fb_gen_c_json_parser@@Base+0x1154>
   256d0:	sub	r3, r3, #1
   256d4:	str	r3, [r4, #220]	; 0xdc
   256d8:	add	r1, pc, r1
   256dc:	mov	r0, r4
   256e0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   256e4:	ldr	r3, [r4, #220]	; 0xdc
   256e8:	ldr	r1, [pc, #-908]	; 25364 <__flatcc_fb_gen_c_json_parser@@Base+0x1158>
   256ec:	add	r3, r3, #1
   256f0:	str	r3, [r4, #220]	; 0xdc
   256f4:	add	r1, pc, r1
   256f8:	mov	r0, r4
   256fc:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25700:	ldr	r1, [pc, #-928]	; 25368 <__flatcc_fb_gen_c_json_parser@@Base+0x115c>
   25704:	mov	r0, r4
   25708:	add	r1, pc, r1
   2570c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25710:	ldr	r3, [r4, #220]	; 0xdc
   25714:	cmp	r3, #0
   25718:	beq	25dfc <__flatcc_fb_gen_c_json_parser@@Base+0x1bf0>
   2571c:	ldr	r1, [pc, #-952]	; 2536c <__flatcc_fb_gen_c_json_parser@@Base+0x1160>
   25720:	sub	r3, r3, #1
   25724:	str	r3, [r4, #220]	; 0xdc
   25728:	add	r1, pc, r1
   2572c:	mov	r0, r4
   25730:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25734:	ldr	r3, [sp, #68]	; 0x44
   25738:	cmp	r3, #0
   2573c:	bne	25910 <__flatcc_fb_gen_c_json_parser@@Base+0x1704>
   25740:	ldr	r1, [pc, #-984]	; 25370 <__flatcc_fb_gen_c_json_parser@@Base+0x1164>
   25744:	mov	r0, r4
   25748:	add	r1, pc, r1
   2574c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25750:	ldr	r1, [pc, #-996]	; 25374 <__flatcc_fb_gen_c_json_parser@@Base+0x1168>
   25754:	mov	r0, r4
   25758:	add	r1, pc, r1
   2575c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25760:	ldr	r2, [r4, #220]	; 0xdc
   25764:	ldr	r1, [pc, #-1012]	; 25378 <__flatcc_fb_gen_c_json_parser@@Base+0x116c>
   25768:	mov	r3, #0
   2576c:	str	r2, [r4, #228]	; 0xe4
   25770:	str	r3, [r4, #220]	; 0xdc
   25774:	add	r1, pc, r1
   25778:	mov	r0, r4
   2577c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25780:	ldr	r3, [r4, #228]	; 0xe4
   25784:	ldr	r1, [pc, #-1040]	; 2537c <__flatcc_fb_gen_c_json_parser@@Base+0x1170>
   25788:	str	r3, [r4, #220]	; 0xdc
   2578c:	add	r1, pc, r1
   25790:	mov	r0, r4
   25794:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25798:	ldr	r3, [r4, #220]	; 0xdc
   2579c:	cmp	r3, #0
   257a0:	beq	25e68 <__flatcc_fb_gen_c_json_parser@@Base+0x1c5c>
   257a4:	ldr	r7, [pc, #-1068]	; 25380 <__flatcc_fb_gen_c_json_parser@@Base+0x1174>
   257a8:	ldr	r6, [pc, #-1068]	; 25384 <__flatcc_fb_gen_c_json_parser@@Base+0x1178>
   257ac:	sub	r3, r3, #1
   257b0:	add	r7, pc, r7
   257b4:	str	r3, [r4, #220]	; 0xdc
   257b8:	mov	r1, r7
   257bc:	mov	r0, r4
   257c0:	add	r6, pc, r6
   257c4:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   257c8:	mov	r1, r6
   257cc:	mov	r0, r4
   257d0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   257d4:	ldr	r1, [pc, #-1108]	; 25388 <__flatcc_fb_gen_c_json_parser@@Base+0x117c>
   257d8:	mov	r2, r5
   257dc:	add	r1, pc, r1
   257e0:	mov	r0, r4
   257e4:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   257e8:	ldr	r1, [pc, #-1124]	; 2538c <__flatcc_fb_gen_c_json_parser@@Base+0x1180>
   257ec:	mov	r0, r4
   257f0:	add	r1, pc, r1
   257f4:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   257f8:	ldr	r3, [r4, #220]	; 0xdc
   257fc:	ldr	r1, [pc, #-1140]	; 25390 <__flatcc_fb_gen_c_json_parser@@Base+0x1184>
   25800:	add	r3, r3, #1
   25804:	str	r3, [r4, #220]	; 0xdc
   25808:	mov	r2, r5
   2580c:	add	r1, pc, r1
   25810:	mov	r0, r4
   25814:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25818:	ldr	r3, [r4, #220]	; 0xdc
   2581c:	cmp	r3, #0
   25820:	beq	25e44 <__flatcc_fb_gen_c_json_parser@@Base+0x1c38>
   25824:	sub	r3, r3, #1
   25828:	str	r3, [r4, #220]	; 0xdc
   2582c:	mov	r1, r7
   25830:	mov	r0, r4
   25834:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25838:	mov	r0, r4
   2583c:	mov	r1, r6
   25840:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25844:	ldr	r0, [sp, #48]	; 0x30
   25848:	cmp	r0, #0
   2584c:	beq	24610 <__flatcc_fb_gen_c_json_parser@@Base+0x404>
   25850:	bl	13ec8 <free@plt>
   25854:	b	24610 <__flatcc_fb_gen_c_json_parser@@Base+0x404>
   25858:	ldr	r1, [pc, #-1228]	; 25394 <__flatcc_fb_gen_c_json_parser@@Base+0x1188>
   2585c:	mov	r0, r4
   25860:	add	r1, pc, r1
   25864:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25868:	ldr	r1, [pc, #-1240]	; 25398 <__flatcc_fb_gen_c_json_parser@@Base+0x118c>
   2586c:	mov	r0, r4
   25870:	add	r1, pc, r1
   25874:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25878:	ldr	r3, [sp, #44]	; 0x2c
   2587c:	mov	r2, #0
   25880:	sub	r3, r3, #1
   25884:	str	r2, [sp]
   25888:	mov	r1, r9
   2588c:	mov	r0, r4
   25890:	bl	20bb8 <__flatcc_fb_gen_c_verifier@@Base+0x98c>
   25894:	b	24c9c <__flatcc_fb_gen_c_json_parser@@Base+0xa90>
   25898:	ldr	r3, [sp, #44]	; 0x2c
   2589c:	cmp	r3, #0
   258a0:	ble	24b64 <__flatcc_fb_gen_c_json_parser@@Base+0x958>
   258a4:	ldr	r2, [pc, #-976]	; 254dc <__flatcc_fb_gen_c_json_parser@@Base+0x12d0>
   258a8:	ldr	r1, [sp, #36]	; 0x24
   258ac:	ldr	r3, [pc, #-1304]	; 2539c <__flatcc_fb_gen_c_json_parser@@Base+0x1190>
   258b0:	ldr	r4, [pc, #-1304]	; 253a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1194>
   258b4:	ldr	r1, [r1, r2]
   258b8:	add	r3, pc, r3
   258bc:	str	r3, [sp]
   258c0:	ldr	r0, [r1]
   258c4:	ldr	r1, [pc, #-1320]	; 253a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1198>
   258c8:	add	r4, pc, r4
   258cc:	mov	r2, r4
   258d0:	ldr	r3, [pc, #-1320]	; 253b0 <__flatcc_fb_gen_c_json_parser@@Base+0x11a4>
   258d4:	add	r1, pc, r1
   258d8:	bl	13f7c <fprintf@plt>
   258dc:	ldr	r3, [pc, #-1340]	; 253a8 <__flatcc_fb_gen_c_json_parser@@Base+0x119c>
   258e0:	ldr	r0, [pc, #-1340]	; 253ac <__flatcc_fb_gen_c_json_parser@@Base+0x11a0>
   258e4:	add	r3, pc, r3
   258e8:	mov	r1, r4
   258ec:	add	r3, r3, #280	; 0x118
   258f0:	ldr	r2, [pc, #-1352]	; 253b0 <__flatcc_fb_gen_c_json_parser@@Base+0x11a4>
   258f4:	add	r0, pc, r0
   258f8:	bl	14030 <__assert_fail@plt>
   258fc:	ldr	r1, [pc, #-1360]	; 253b4 <__flatcc_fb_gen_c_json_parser@@Base+0x11a8>
   25900:	mov	r0, r4
   25904:	add	r1, pc, r1
   25908:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2590c:	b	25078 <__flatcc_fb_gen_c_json_parser@@Base+0xe6c>
   25910:	ldr	r1, [pc, #-1376]	; 253b8 <__flatcc_fb_gen_c_json_parser@@Base+0x11ac>
   25914:	mov	r0, r4
   25918:	add	r1, pc, r1
   2591c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25920:	b	25740 <__flatcc_fb_gen_c_json_parser@@Base+0x1534>
   25924:	ldr	r1, [pc, #-1392]	; 253bc <__flatcc_fb_gen_c_json_parser@@Base+0x11b0>
   25928:	asr	r3, r2, #31
   2592c:	add	r1, pc, r1
   25930:	mov	r0, r4
   25934:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25938:	b	250ac <__flatcc_fb_gen_c_json_parser@@Base+0xea0>
   2593c:	ldr	r1, [pc, #-1412]	; 253c0 <__flatcc_fb_gen_c_json_parser@@Base+0x11b4>
   25940:	mov	r0, r4
   25944:	add	r1, pc, r1
   25948:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2594c:	ldr	r1, [pc, #-1424]	; 253c4 <__flatcc_fb_gen_c_json_parser@@Base+0x11b8>
   25950:	mov	r0, r4
   25954:	add	r1, pc, r1
   25958:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   2595c:	b	25120 <__flatcc_fb_gen_c_json_parser@@Base+0xf14>
   25960:	ldr	r1, [pc, #-1440]	; 253c8 <__flatcc_fb_gen_c_json_parser@@Base+0x11bc>
   25964:	mov	r0, r4
   25968:	add	r1, pc, r1
   2596c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25970:	ldr	r1, [pc, #-1452]	; 253cc <__flatcc_fb_gen_c_json_parser@@Base+0x11c0>
   25974:	mov	r0, r4
   25978:	add	r1, pc, r1
   2597c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25980:	ldr	r1, [pc, #-1464]	; 253d0 <__flatcc_fb_gen_c_json_parser@@Base+0x11c4>
   25984:	mov	r0, r4
   25988:	add	r1, pc, r1
   2598c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25990:	ldr	r1, [pc, #-1476]	; 253d4 <__flatcc_fb_gen_c_json_parser@@Base+0x11c8>
   25994:	mov	r0, r4
   25998:	add	r1, pc, r1
   2599c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   259a0:	ldr	r1, [pc, #-1488]	; 253d8 <__flatcc_fb_gen_c_json_parser@@Base+0x11cc>
   259a4:	mov	r0, r4
   259a8:	add	r1, pc, r1
   259ac:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   259b0:	sub	r3, r8, #1
   259b4:	mov	r2, r6
   259b8:	mov	r1, r9
   259bc:	mov	r0, r4
   259c0:	str	r6, [sp]
   259c4:	bl	20bb8 <__flatcc_fb_gen_c_verifier@@Base+0x98c>
   259c8:	ldr	r1, [pc, #-1524]	; 253dc <__flatcc_fb_gen_c_json_parser@@Base+0x11d0>
   259cc:	mov	r0, r4
   259d0:	add	r1, pc, r1
   259d4:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   259d8:	ldr	r3, [r4, #220]	; 0xdc
   259dc:	cmp	r3, #0
   259e0:	beq	26148 <__flatcc_fb_gen_c_json_parser@@Base+0x1f3c>
   259e4:	ldr	r1, [pc, #-1548]	; 253e0 <__flatcc_fb_gen_c_json_parser@@Base+0x11d4>
   259e8:	sub	r3, r3, #1
   259ec:	str	r3, [r4, #220]	; 0xdc
   259f0:	add	r1, pc, r1
   259f4:	mov	r0, r4
   259f8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   259fc:	b	248bc <__flatcc_fb_gen_c_json_parser@@Base+0x6b0>
   25a00:	ldr	r3, [sp, #44]	; 0x2c
   25a04:	cmp	r3, #0
   25a08:	bgt	25e8c <__flatcc_fb_gen_c_json_parser@@Base+0x1c80>
   25a0c:	ldr	r2, [pc, #-1584]	; 253e4 <__flatcc_fb_gen_c_json_parser@@Base+0x11d8>
   25a10:	ldr	r3, [pc, #-1584]	; 253e8 <__flatcc_fb_gen_c_json_parser@@Base+0x11dc>
   25a14:	add	r2, pc, r2
   25a18:	add	r3, pc, r3
   25a1c:	str	fp, [sp, #60]	; 0x3c
   25a20:	str	r0, [sp, #64]	; 0x40
   25a24:	str	r0, [sp, #68]	; 0x44
   25a28:	str	r2, [sp, #52]	; 0x34
   25a2c:	str	r3, [sp, #56]	; 0x38
   25a30:	b	24fcc <__flatcc_fb_gen_c_json_parser@@Base+0xdc0>
   25a34:	mov	r2, #220	; 0xdc
   25a38:	mov	r1, r7
   25a3c:	mov	r0, r5
   25a40:	bl	13f94 <memset@plt>
   25a44:	mov	r2, r5
   25a48:	mov	r1, r6
   25a4c:	ldr	r0, [r6, #12]
   25a50:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   25a54:	ldr	r3, [r4, #208]	; 0xd0
   25a58:	ldr	r1, [pc, #-1652]	; 253ec <__flatcc_fb_gen_c_json_parser@@Base+0x11e0>
   25a5c:	mov	r0, r4
   25a60:	ldr	r2, [r3, #160]	; 0xa0
   25a64:	add	r1, pc, r1
   25a68:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25a6c:	ldr	r3, [r4, #220]	; 0xdc
   25a70:	ldr	r1, [pc, #-1672]	; 253f0 <__flatcc_fb_gen_c_json_parser@@Base+0x11e4>
   25a74:	add	r3, r3, #2
   25a78:	str	r3, [r4, #220]	; 0xdc
   25a7c:	add	r1, pc, r1
   25a80:	mov	r0, r4
   25a84:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25a88:	ldr	r3, [r4, #220]	; 0xdc
   25a8c:	cmp	r3, #0
   25a90:	beq	25ee4 <__flatcc_fb_gen_c_json_parser@@Base+0x1cd8>
   25a94:	cmp	r3, #1
   25a98:	streq	r7, [r4, #220]	; 0xdc
   25a9c:	beq	25ee4 <__flatcc_fb_gen_c_json_parser@@Base+0x1cd8>
   25aa0:	ldr	r1, [pc, #-1716]	; 253f4 <__flatcc_fb_gen_c_json_parser@@Base+0x11e8>
   25aa4:	sub	r3, r3, #2
   25aa8:	str	r3, [r4, #220]	; 0xdc
   25aac:	add	r1, pc, r1
   25ab0:	mov	r0, r4
   25ab4:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25ab8:	ldr	r3, [r4, #220]	; 0xdc
   25abc:	ldr	r1, [pc, #-1740]	; 253f8 <__flatcc_fb_gen_c_json_parser@@Base+0x11ec>
   25ac0:	add	r3, r3, #1
   25ac4:	str	r3, [r4, #220]	; 0xdc
   25ac8:	add	r1, pc, r1
   25acc:	mov	r0, r4
   25ad0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25ad4:	ldr	r1, [pc, #-1760]	; 253fc <__flatcc_fb_gen_c_json_parser@@Base+0x11f0>
   25ad8:	mov	r0, r4
   25adc:	add	r1, pc, r1
   25ae0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25ae4:	ldr	r1, [pc, #-1772]	; 25400 <__flatcc_fb_gen_c_json_parser@@Base+0x11f4>
   25ae8:	mov	r0, r4
   25aec:	add	r1, pc, r1
   25af0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25af4:	ldr	r1, [pc, #-1784]	; 25404 <__flatcc_fb_gen_c_json_parser@@Base+0x11f8>
   25af8:	mov	r0, r4
   25afc:	add	r1, pc, r1
   25b00:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25b04:	ldr	r1, [pc, #-1796]	; 25408 <__flatcc_fb_gen_c_json_parser@@Base+0x11fc>
   25b08:	mov	r0, r4
   25b0c:	add	r1, pc, r1
   25b10:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25b14:	ldr	r2, [r4, #208]	; 0xd0
   25b18:	ldrh	r3, [r2, #16]
   25b1c:	cmp	r3, #2
   25b20:	beq	25d04 <__flatcc_fb_gen_c_json_parser@@Base+0x1af8>
   25b24:	ldr	r1, [pc, #-1824]	; 2540c <__flatcc_fb_gen_c_json_parser@@Base+0x1200>
   25b28:	mov	r0, r4
   25b2c:	add	r1, pc, r1
   25b30:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25b34:	ldr	r1, [pc, #-1836]	; 25410 <__flatcc_fb_gen_c_json_parser@@Base+0x1204>
   25b38:	mov	r2, r5
   25b3c:	add	r1, pc, r1
   25b40:	mov	r0, r4
   25b44:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25b48:	ldr	r1, [pc, #-1852]	; 25414 <__flatcc_fb_gen_c_json_parser@@Base+0x1208>
   25b4c:	mov	r0, r4
   25b50:	add	r1, pc, r1
   25b54:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25b58:	ldr	r3, [r4, #220]	; 0xdc
   25b5c:	ldr	r1, [pc, #-1868]	; 25418 <__flatcc_fb_gen_c_json_parser@@Base+0x120c>
   25b60:	add	r3, r3, #1
   25b64:	str	r3, [r4, #220]	; 0xdc
   25b68:	add	r1, pc, r1
   25b6c:	mov	r0, r4
   25b70:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25b74:	ldr	r3, [r4, #220]	; 0xdc
   25b78:	cmp	r3, #0
   25b7c:	beq	26004 <__flatcc_fb_gen_c_json_parser@@Base+0x1df8>
   25b80:	ldr	r5, [pc, #-1900]	; 2541c <__flatcc_fb_gen_c_json_parser@@Base+0x1210>
   25b84:	sub	r3, r3, #1
   25b88:	add	r5, pc, r5
   25b8c:	str	r3, [r4, #220]	; 0xdc
   25b90:	mov	r1, r5
   25b94:	mov	r0, r4
   25b98:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25b9c:	ldr	r1, [pc, #-1924]	; 25420 <__flatcc_fb_gen_c_json_parser@@Base+0x1214>
   25ba0:	mov	r0, r4
   25ba4:	add	r1, pc, r1
   25ba8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25bac:	ldr	r1, [pc, #-1936]	; 25424 <__flatcc_fb_gen_c_json_parser@@Base+0x1218>
   25bb0:	mov	r0, r4
   25bb4:	add	r1, pc, r1
   25bb8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25bbc:	ldr	r1, [pc, #-1948]	; 25428 <__flatcc_fb_gen_c_json_parser@@Base+0x121c>
   25bc0:	mov	r0, r4
   25bc4:	add	r1, pc, r1
   25bc8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25bcc:	ldr	r3, [r4, #220]	; 0xdc
   25bd0:	cmp	r3, #0
   25bd4:	beq	26028 <__flatcc_fb_gen_c_json_parser@@Base+0x1e1c>
   25bd8:	sub	r3, r3, #1
   25bdc:	mov	r1, r5
   25be0:	mov	r0, r4
   25be4:	str	r3, [r4, #220]	; 0xdc
   25be8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25bec:	ldr	r1, [pc, #-1992]	; 2542c <__flatcc_fb_gen_c_json_parser@@Base+0x1220>
   25bf0:	mov	r0, r4
   25bf4:	add	r1, pc, r1
   25bf8:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25bfc:	b	24ad4 <__flatcc_fb_gen_c_json_parser@@Base+0x8c8>
   25c00:	ldr	r1, [pc, #-2008]	; 25430 <__flatcc_fb_gen_c_json_parser@@Base+0x1224>
   25c04:	mov	r0, r4
   25c08:	add	r1, pc, r1
   25c0c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25c10:	ldr	r1, [pc, #-2020]	; 25434 <__flatcc_fb_gen_c_json_parser@@Base+0x1228>
   25c14:	mov	r0, r4
   25c18:	add	r1, pc, r1
   25c1c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25c20:	ldr	r1, [pc, #-2032]	; 25438 <__flatcc_fb_gen_c_json_parser@@Base+0x122c>
   25c24:	mov	r0, r4
   25c28:	add	r1, pc, r1
   25c2c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25c30:	ldr	r1, [pc, #-2044]	; 2543c <__flatcc_fb_gen_c_json_parser@@Base+0x1230>
   25c34:	mov	r0, r4
   25c38:	add	r1, pc, r1
   25c3c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25c40:	ldr	r1, [pc, #-2056]	; 25440 <__flatcc_fb_gen_c_json_parser@@Base+0x1234>
   25c44:	mov	r0, r4
   25c48:	add	r1, pc, r1
   25c4c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25c50:	ldr	r1, [pc, #-2068]	; 25444 <__flatcc_fb_gen_c_json_parser@@Base+0x1238>
   25c54:	mov	r0, r4
   25c58:	add	r1, pc, r1
   25c5c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25c60:	ldr	r1, [pc, #-2080]	; 25448 <__flatcc_fb_gen_c_json_parser@@Base+0x123c>
   25c64:	mov	r0, r4
   25c68:	add	r1, pc, r1
   25c6c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25c70:	ldr	r1, [pc, #-2092]	; 2544c <__flatcc_fb_gen_c_json_parser@@Base+0x1240>
   25c74:	mov	r0, r4
   25c78:	add	r1, pc, r1
   25c7c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25c80:	ldr	r1, [pc, #-2104]	; 25450 <__flatcc_fb_gen_c_json_parser@@Base+0x1244>
   25c84:	mov	r0, r4
   25c88:	add	r1, pc, r1
   25c8c:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25c90:	ldr	r3, [r4, #208]	; 0xd0
   25c94:	ldr	r1, [pc, #-2120]	; 25454 <__flatcc_fb_gen_c_json_parser@@Base+0x1248>
   25c98:	mov	r0, r4
   25c9c:	ldr	r2, [r3, #160]	; 0xa0
   25ca0:	add	r1, pc, r1
   25ca4:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25ca8:	ldr	r3, [r4, #220]	; 0xdc
   25cac:	ldr	r1, [pc, #-2140]	; 25458 <__flatcc_fb_gen_c_json_parser@@Base+0x124c>
   25cb0:	add	r3, r3, #2
   25cb4:	str	r3, [r4, #220]	; 0xdc
   25cb8:	add	r1, pc, r1
   25cbc:	mov	r0, r4
   25cc0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25cc4:	ldr	r3, [r4, #220]	; 0xdc
   25cc8:	cmp	r3, #0
   25ccc:	beq	25f08 <__flatcc_fb_gen_c_json_parser@@Base+0x1cfc>
   25cd0:	cmp	r3, #1
   25cd4:	moveq	r3, #0
   25cd8:	streq	r3, [r4, #220]	; 0xdc
   25cdc:	beq	25f08 <__flatcc_fb_gen_c_json_parser@@Base+0x1cfc>
   25ce0:	sub	r3, r3, #2
   25ce4:	str	r3, [r4, #220]	; 0xdc
   25ce8:	mov	r1, r8
   25cec:	mov	r0, r4
   25cf0:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25cf4:	ldr	r6, [r4, #208]	; 0xd0
   25cf8:	b	24318 <__flatcc_fb_gen_c_json_parser@@Base+0x10c>
   25cfc:	str	r8, [sp, #48]	; 0x30
   25d00:	b	247d8 <__flatcc_fb_gen_c_json_parser@@Base+0x5cc>
   25d04:	ldr	r1, [pc, #-2224]	; 2545c <__flatcc_fb_gen_c_json_parser@@Base+0x1250>
   25d08:	ldr	r3, [r2, #8]
   25d0c:	add	r1, pc, r1
   25d10:	ldr	r2, [r2, #12]
   25d14:	mov	r0, r4
   25d18:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25d1c:	b	25b34 <__flatcc_fb_gen_c_json_parser@@Base+0x1928>
   25d20:	ldr	r1, [pc, #-2248]	; 25460 <__flatcc_fb_gen_c_json_parser@@Base+0x1254>
   25d24:	ldr	r3, [r2, #8]
   25d28:	add	r1, pc, r1
   25d2c:	ldr	r2, [r2, #12]
   25d30:	mov	r0, r4
   25d34:	bl	205c4 <__flatcc_fb_gen_c_verifier@@Base+0x398>
   25d38:	b	24a0c <__flatcc_fb_gen_c_json_parser@@Base+0x800>
   25d3c:	ldr	r3, [sp, #8]
   25d40:	cmp	r8, #0
   25d44:	str	r3, [sp, #48]	; 0x30
   25d48:	ble	247d8 <__flatcc_fb_gen_c_json_parser@@Base+0x5cc>
   25d4c:	mov	r0, r5
   25d50:	bl	2265c <__flatcc_fb_gen_c_verifier@@Base+0x2430>
   25d54:	ldr	r2, [pc, #-2176]	; 254dc <__flatcc_fb_gen_c_json_parser@@Base+0x12d0>
   25d58:	ldr	r1, [sp, #36]	; 0x24
   25d5c:	ldr	r3, [pc, #-2304]	; 25464 <__flatcc_fb_gen_c_json_parser@@Base+0x1258>
   25d60:	ldr	r4, [pc, #-2304]	; 25468 <__flatcc_fb_gen_c_json_parser@@Base+0x125c>
   25d64:	ldr	r1, [r1, r2]
   25d68:	add	r3, pc, r3
   25d6c:	str	r3, [sp]
   25d70:	ldr	r0, [r1]
   25d74:	ldr	r1, [pc, #-2320]	; 2546c <__flatcc_fb_gen_c_json_parser@@Base+0x1260>
   25d78:	add	r4, pc, r4
   25d7c:	mov	r2, r4
   25d80:	ldr	r3, [pc, #-2320]	; 25478 <__flatcc_fb_gen_c_json_parser@@Base+0x126c>
   25d84:	add	r1, pc, r1
   25d88:	bl	13f7c <fprintf@plt>
   25d8c:	ldr	r3, [pc, #-2340]	; 25470 <__flatcc_fb_gen_c_json_parser@@Base+0x1264>
   25d90:	ldr	r0, [pc, #-2340]	; 25474 <__flatcc_fb_gen_c_json_parser@@Base+0x1268>
   25d94:	add	r3, pc, r3
   25d98:	mov	r1, r4
   25d9c:	add	r3, r3, #348	; 0x15c
   25da0:	ldr	r2, [pc, #-2352]	; 25478 <__flatcc_fb_gen_c_json_parser@@Base+0x126c>
   25da4:	add	r0, pc, r0
   25da8:	bl	14030 <__assert_fail@plt>
   25dac:	mov	r3, #0
   25db0:	str	r3, [r4, #220]	; 0xdc
   25db4:	ldr	r3, [pc, #-2368]	; 2547c <__flatcc_fb_gen_c_json_parser@@Base+0x1270>
   25db8:	ldr	r1, [pc, #-2368]	; 25480 <__flatcc_fb_gen_c_json_parser@@Base+0x1274>
   25dbc:	ldr	r0, [pc, #-2368]	; 25484 <__flatcc_fb_gen_c_json_parser@@Base+0x1278>
   25dc0:	add	r3, pc, r3
   25dc4:	ldr	r2, [pc, #-2372]	; 25488 <__flatcc_fb_gen_c_json_parser@@Base+0x127c>
   25dc8:	add	r3, r3, #252	; 0xfc
   25dcc:	add	r1, pc, r1
   25dd0:	add	r0, pc, r0
   25dd4:	bl	14030 <__assert_fail@plt>
   25dd8:	ldr	r3, [pc, #-2388]	; 2548c <__flatcc_fb_gen_c_json_parser@@Base+0x1280>
   25ddc:	ldr	r1, [pc, #-2388]	; 25490 <__flatcc_fb_gen_c_json_parser@@Base+0x1284>
   25de0:	ldr	r0, [pc, #-2388]	; 25494 <__flatcc_fb_gen_c_json_parser@@Base+0x1288>
   25de4:	add	r3, pc, r3
   25de8:	ldr	r2, [pc, #-2392]	; 25498 <__flatcc_fb_gen_c_json_parser@@Base+0x128c>
   25dec:	add	r3, r3, #280	; 0x118
   25df0:	add	r1, pc, r1
   25df4:	add	r0, pc, r0
   25df8:	bl	14030 <__assert_fail@plt>
   25dfc:	ldr	r3, [pc, #-2408]	; 2549c <__flatcc_fb_gen_c_json_parser@@Base+0x1290>
   25e00:	ldr	r1, [pc, #-2408]	; 254a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1294>
   25e04:	ldr	r0, [pc, #-2408]	; 254a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1298>
   25e08:	add	r3, pc, r3
   25e0c:	ldr	r2, [pc, #-2412]	; 254a8 <__flatcc_fb_gen_c_json_parser@@Base+0x129c>
   25e10:	add	r3, r3, #328	; 0x148
   25e14:	add	r1, pc, r1
   25e18:	add	r0, pc, r0
   25e1c:	bl	14030 <__assert_fail@plt>
   25e20:	ldr	r3, [pc, #-2428]	; 254ac <__flatcc_fb_gen_c_json_parser@@Base+0x12a0>
   25e24:	ldr	r1, [pc, #-2428]	; 254b0 <__flatcc_fb_gen_c_json_parser@@Base+0x12a4>
   25e28:	ldr	r0, [pc, #-2428]	; 254b4 <__flatcc_fb_gen_c_json_parser@@Base+0x12a8>
   25e2c:	add	r3, pc, r3
   25e30:	ldr	r2, [pc, #-2432]	; 254b8 <__flatcc_fb_gen_c_json_parser@@Base+0x12ac>
   25e34:	add	r3, r3, #328	; 0x148
   25e38:	add	r1, pc, r1
   25e3c:	add	r0, pc, r0
   25e40:	bl	14030 <__assert_fail@plt>
   25e44:	ldr	r3, [pc, #-2448]	; 254bc <__flatcc_fb_gen_c_json_parser@@Base+0x12b0>
   25e48:	ldr	r1, [pc, #-2448]	; 254c0 <__flatcc_fb_gen_c_json_parser@@Base+0x12b4>
   25e4c:	ldr	r0, [pc, #-2448]	; 254c4 <__flatcc_fb_gen_c_json_parser@@Base+0x12b8>
   25e50:	add	r3, pc, r3
   25e54:	ldr	r2, [pc, #-2452]	; 254c8 <__flatcc_fb_gen_c_json_parser@@Base+0x12bc>
   25e58:	add	r3, r3, #328	; 0x148
   25e5c:	add	r1, pc, r1
   25e60:	add	r0, pc, r0
   25e64:	bl	14030 <__assert_fail@plt>
   25e68:	ldr	r3, [pc, #-2468]	; 254cc <__flatcc_fb_gen_c_json_parser@@Base+0x12c0>
   25e6c:	ldr	r1, [pc, #-2468]	; 254d0 <__flatcc_fb_gen_c_json_parser@@Base+0x12c4>
   25e70:	ldr	r0, [pc, #-2468]	; 254d4 <__flatcc_fb_gen_c_json_parser@@Base+0x12c8>
   25e74:	add	r3, pc, r3
   25e78:	ldr	r2, [pc, #-2472]	; 254d8 <__flatcc_fb_gen_c_json_parser@@Base+0x12cc>
   25e7c:	add	r3, r3, #328	; 0x148
   25e80:	add	r1, pc, r1
   25e84:	add	r0, pc, r0
   25e88:	bl	14030 <__assert_fail@plt>
   25e8c:	ldr	r2, [pc, #-2488]	; 254dc <__flatcc_fb_gen_c_json_parser@@Base+0x12d0>
   25e90:	ldr	r1, [sp, #36]	; 0x24
   25e94:	ldr	r3, [pc, #-2492]	; 254e0 <__flatcc_fb_gen_c_json_parser@@Base+0x12d4>
   25e98:	ldr	r4, [pc, #-2492]	; 254e4 <__flatcc_fb_gen_c_json_parser@@Base+0x12d8>
   25e9c:	ldr	r1, [r1, r2]
   25ea0:	add	r3, pc, r3
   25ea4:	str	r3, [sp]
   25ea8:	ldr	r0, [r1]
   25eac:	ldr	r1, [pc, #-2508]	; 254e8 <__flatcc_fb_gen_c_json_parser@@Base+0x12dc>
   25eb0:	add	r4, pc, r4
   25eb4:	mov	r2, r4
   25eb8:	mov	r3, #1392	; 0x570
   25ebc:	add	r1, pc, r1
   25ec0:	bl	13f7c <fprintf@plt>
   25ec4:	ldr	r3, [pc, #-2528]	; 254ec <__flatcc_fb_gen_c_json_parser@@Base+0x12e0>
   25ec8:	ldr	r0, [pc, #-2528]	; 254f0 <__flatcc_fb_gen_c_json_parser@@Base+0x12e4>
   25ecc:	add	r3, pc, r3
   25ed0:	mov	r1, r4
   25ed4:	add	r3, r3, #328	; 0x148
   25ed8:	mov	r2, #1392	; 0x570
   25edc:	add	r0, pc, r0
   25ee0:	bl	14030 <__assert_fail@plt>
   25ee4:	ldr	r3, [pc, #-2552]	; 254f4 <__flatcc_fb_gen_c_json_parser@@Base+0x12e8>
   25ee8:	ldr	r1, [pc, #-2552]	; 254f8 <__flatcc_fb_gen_c_json_parser@@Base+0x12ec>
   25eec:	ldr	r0, [pc, #-2552]	; 254fc <__flatcc_fb_gen_c_json_parser@@Base+0x12f0>
   25ef0:	add	r3, pc, r3
   25ef4:	ldr	r2, [pc, #-2556]	; 25500 <__flatcc_fb_gen_c_json_parser@@Base+0x12f4>
   25ef8:	add	r3, r3, #372	; 0x174
   25efc:	add	r1, pc, r1
   25f00:	add	r0, pc, r0
   25f04:	bl	14030 <__assert_fail@plt>
   25f08:	ldr	r3, [pc, #-2572]	; 25504 <__flatcc_fb_gen_c_json_parser@@Base+0x12f8>
   25f0c:	ldr	r1, [pc, #-2572]	; 25508 <__flatcc_fb_gen_c_json_parser@@Base+0x12fc>
   25f10:	ldr	r0, [pc, #-2572]	; 2550c <__flatcc_fb_gen_c_json_parser@@Base+0x1300>
   25f14:	add	r3, pc, r3
   25f18:	ldr	r2, [pc, #-2576]	; 25510 <__flatcc_fb_gen_c_json_parser@@Base+0x1304>
   25f1c:	add	r3, r3, #252	; 0xfc
   25f20:	add	r1, pc, r1
   25f24:	add	r0, pc, r0
   25f28:	bl	14030 <__assert_fail@plt>
   25f2c:	ldr	r3, [pc, #-2592]	; 25514 <__flatcc_fb_gen_c_json_parser@@Base+0x1308>
   25f30:	ldr	r1, [pc, #-2592]	; 25518 <__flatcc_fb_gen_c_json_parser@@Base+0x130c>
   25f34:	ldr	r0, [pc, #-2592]	; 2551c <__flatcc_fb_gen_c_json_parser@@Base+0x1310>
   25f38:	add	r3, pc, r3
   25f3c:	ldr	r2, [pc, #-2596]	; 25520 <__flatcc_fb_gen_c_json_parser@@Base+0x1314>
   25f40:	add	r3, r3, #328	; 0x148
   25f44:	add	r1, pc, r1
   25f48:	add	r0, pc, r0
   25f4c:	bl	14030 <__assert_fail@plt>
   25f50:	ldr	r3, [pc, #-2612]	; 25524 <__flatcc_fb_gen_c_json_parser@@Base+0x1318>
   25f54:	ldr	r1, [pc, #-2612]	; 25528 <__flatcc_fb_gen_c_json_parser@@Base+0x131c>
   25f58:	ldr	r0, [pc, #-2612]	; 2552c <__flatcc_fb_gen_c_json_parser@@Base+0x1320>
   25f5c:	add	r3, pc, r3
   25f60:	mov	r2, #1376	; 0x560
   25f64:	add	r3, r3, #308	; 0x134
   25f68:	add	r1, pc, r1
   25f6c:	add	r0, pc, r0
   25f70:	bl	14030 <__assert_fail@plt>
   25f74:	ldr	r3, [pc, #-2636]	; 25530 <__flatcc_fb_gen_c_json_parser@@Base+0x1324>
   25f78:	ldr	r1, [pc, #-2636]	; 25534 <__flatcc_fb_gen_c_json_parser@@Base+0x1328>
   25f7c:	ldr	r0, [pc, #-2636]	; 25538 <__flatcc_fb_gen_c_json_parser@@Base+0x132c>
   25f80:	add	r3, pc, r3
   25f84:	ldr	r2, [pc, #-2640]	; 2553c <__flatcc_fb_gen_c_json_parser@@Base+0x1330>
   25f88:	add	r3, r3, #308	; 0x134
   25f8c:	add	r1, pc, r1
   25f90:	add	r0, pc, r0
   25f94:	bl	14030 <__assert_fail@plt>
   25f98:	ldr	r3, [pc, #-2656]	; 25540 <__flatcc_fb_gen_c_json_parser@@Base+0x1334>
   25f9c:	ldr	r1, [pc, #-2656]	; 25544 <__flatcc_fb_gen_c_json_parser@@Base+0x1338>
   25fa0:	ldr	r0, [pc, #-2656]	; 25548 <__flatcc_fb_gen_c_json_parser@@Base+0x133c>
   25fa4:	add	r3, pc, r3
   25fa8:	ldr	r2, [pc, #-2660]	; 2554c <__flatcc_fb_gen_c_json_parser@@Base+0x1340>
   25fac:	add	r3, r3, #308	; 0x134
   25fb0:	add	r1, pc, r1
   25fb4:	add	r0, pc, r0
   25fb8:	bl	14030 <__assert_fail@plt>
   25fbc:	ldr	r3, [pc, #-2676]	; 25550 <__flatcc_fb_gen_c_json_parser@@Base+0x1344>
   25fc0:	ldr	r1, [pc, #-2676]	; 25554 <__flatcc_fb_gen_c_json_parser@@Base+0x1348>
   25fc4:	ldr	r0, [pc, #-2676]	; 25558 <__flatcc_fb_gen_c_json_parser@@Base+0x134c>
   25fc8:	add	r3, pc, r3
   25fcc:	ldr	r2, [pc, #-2680]	; 2555c <__flatcc_fb_gen_c_json_parser@@Base+0x1350>
   25fd0:	add	r3, r3, #280	; 0x118
   25fd4:	add	r1, pc, r1
   25fd8:	add	r0, pc, r0
   25fdc:	bl	14030 <__assert_fail@plt>
   25fe0:	ldr	r3, [pc, #-2696]	; 25560 <__flatcc_fb_gen_c_json_parser@@Base+0x1354>
   25fe4:	ldr	r1, [pc, #-2696]	; 25564 <__flatcc_fb_gen_c_json_parser@@Base+0x1358>
   25fe8:	ldr	r0, [pc, #-2696]	; 25568 <__flatcc_fb_gen_c_json_parser@@Base+0x135c>
   25fec:	add	r3, pc, r3
   25ff0:	ldr	r2, [pc, #-2700]	; 2556c <__flatcc_fb_gen_c_json_parser@@Base+0x1360>
   25ff4:	add	r3, r3, #396	; 0x18c
   25ff8:	add	r1, pc, r1
   25ffc:	add	r0, pc, r0
   26000:	bl	14030 <__assert_fail@plt>
   26004:	ldr	r3, [pc, #-2716]	; 25570 <__flatcc_fb_gen_c_json_parser@@Base+0x1364>
   26008:	ldr	r1, [pc, #-2716]	; 25574 <__flatcc_fb_gen_c_json_parser@@Base+0x1368>
   2600c:	ldr	r0, [pc, #-2716]	; 25578 <__flatcc_fb_gen_c_json_parser@@Base+0x136c>
   26010:	add	r3, pc, r3
   26014:	ldr	r2, [pc, #-2720]	; 2557c <__flatcc_fb_gen_c_json_parser@@Base+0x1370>
   26018:	add	r3, r3, #372	; 0x174
   2601c:	add	r1, pc, r1
   26020:	add	r0, pc, r0
   26024:	bl	14030 <__assert_fail@plt>
   26028:	ldr	r3, [pc, #-2736]	; 25580 <__flatcc_fb_gen_c_json_parser@@Base+0x1374>
   2602c:	ldr	r1, [pc, #-2736]	; 25584 <__flatcc_fb_gen_c_json_parser@@Base+0x1378>
   26030:	ldr	r0, [pc, #-2736]	; 25588 <__flatcc_fb_gen_c_json_parser@@Base+0x137c>
   26034:	add	r3, pc, r3
   26038:	ldr	r2, [pc, #-2740]	; 2558c <__flatcc_fb_gen_c_json_parser@@Base+0x1380>
   2603c:	add	r3, r3, #372	; 0x174
   26040:	add	r1, pc, r1
   26044:	add	r0, pc, r0
   26048:	bl	14030 <__assert_fail@plt>
   2604c:	ldr	r3, [pc, #-2756]	; 25590 <__flatcc_fb_gen_c_json_parser@@Base+0x1384>
   26050:	ldr	r1, [pc, #-2756]	; 25594 <__flatcc_fb_gen_c_json_parser@@Base+0x1388>
   26054:	ldr	r0, [pc, #-2756]	; 25598 <__flatcc_fb_gen_c_json_parser@@Base+0x138c>
   26058:	add	r3, pc, r3
   2605c:	ldr	r2, [pc, #-2760]	; 2559c <__flatcc_fb_gen_c_json_parser@@Base+0x1390>
   26060:	add	r3, r3, #348	; 0x15c
   26064:	add	r1, pc, r1
   26068:	add	r0, pc, r0
   2606c:	bl	14030 <__assert_fail@plt>
   26070:	ldr	r3, [pc, #-2776]	; 255a0 <__flatcc_fb_gen_c_json_parser@@Base+0x1394>
   26074:	ldr	r1, [pc, #-2776]	; 255a4 <__flatcc_fb_gen_c_json_parser@@Base+0x1398>
   26078:	ldr	r0, [pc, #-2776]	; 255a8 <__flatcc_fb_gen_c_json_parser@@Base+0x139c>
   2607c:	add	r3, pc, r3
   26080:	ldr	r2, [pc, #-2780]	; 255ac <__flatcc_fb_gen_c_json_parser@@Base+0x13a0>
   26084:	add	r3, r3, #348	; 0x15c
   26088:	add	r1, pc, r1
   2608c:	add	r0, pc, r0
   26090:	bl	14030 <__assert_fail@plt>
   26094:	ldr	r3, [pc, #-2796]	; 255b0 <__flatcc_fb_gen_c_json_parser@@Base+0x13a4>
   26098:	ldr	r1, [pc, #-2796]	; 255b4 <__flatcc_fb_gen_c_json_parser@@Base+0x13a8>
   2609c:	ldr	r0, [pc, #-2796]	; 255b8 <__flatcc_fb_gen_c_json_parser@@Base+0x13ac>
   260a0:	add	r3, pc, r3
   260a4:	ldr	r2, [pc, #-2800]	; 255bc <__flatcc_fb_gen_c_json_parser@@Base+0x13b0>
   260a8:	add	r3, r3, #396	; 0x18c
   260ac:	add	r1, pc, r1
   260b0:	add	r0, pc, r0
   260b4:	bl	14030 <__assert_fail@plt>
   260b8:	ldr	r3, [pc, #-2816]	; 255c0 <__flatcc_fb_gen_c_json_parser@@Base+0x13b4>
   260bc:	ldr	r1, [pc, #-2816]	; 255c4 <__flatcc_fb_gen_c_json_parser@@Base+0x13b8>
   260c0:	ldr	r0, [pc, #-2816]	; 255c8 <__flatcc_fb_gen_c_json_parser@@Base+0x13bc>
   260c4:	add	r3, pc, r3
   260c8:	ldr	r2, [pc, #-2820]	; 255cc <__flatcc_fb_gen_c_json_parser@@Base+0x13c0>
   260cc:	add	r3, r3, #396	; 0x18c
   260d0:	add	r1, pc, r1
   260d4:	add	r0, pc, r0
   260d8:	bl	14030 <__assert_fail@plt>
   260dc:	ldr	r3, [pc, #-2836]	; 255d0 <__flatcc_fb_gen_c_json_parser@@Base+0x13c4>
   260e0:	ldr	r1, [pc, #-2836]	; 255d4 <__flatcc_fb_gen_c_json_parser@@Base+0x13c8>
   260e4:	ldr	r0, [pc, #-2836]	; 255d8 <__flatcc_fb_gen_c_json_parser@@Base+0x13cc>
   260e8:	add	r3, pc, r3
   260ec:	ldr	r2, [pc, #-2840]	; 255dc <__flatcc_fb_gen_c_json_parser@@Base+0x13d0>
   260f0:	add	r3, r3, #252	; 0xfc
   260f4:	add	r1, pc, r1
   260f8:	add	r0, pc, r0
   260fc:	bl	14030 <__assert_fail@plt>
   26100:	ldr	r3, [pc, #-2856]	; 255e0 <__flatcc_fb_gen_c_json_parser@@Base+0x13d4>
   26104:	ldr	r1, [pc, #-2856]	; 255e4 <__flatcc_fb_gen_c_json_parser@@Base+0x13d8>
   26108:	ldr	r0, [pc, #-2856]	; 255e8 <__flatcc_fb_gen_c_json_parser@@Base+0x13dc>
   2610c:	add	r3, pc, r3
   26110:	ldr	r2, [pc, #-2860]	; 255ec <__flatcc_fb_gen_c_json_parser@@Base+0x13e0>
   26114:	add	r3, r3, #328	; 0x148
   26118:	add	r1, pc, r1
   2611c:	add	r0, pc, r0
   26120:	bl	14030 <__assert_fail@plt>
   26124:	ldr	r3, [pc, #-2876]	; 255f0 <__flatcc_fb_gen_c_json_parser@@Base+0x13e4>
   26128:	ldr	r1, [pc, #-2876]	; 255f4 <__flatcc_fb_gen_c_json_parser@@Base+0x13e8>
   2612c:	ldr	r0, [pc, #-2876]	; 255f8 <__flatcc_fb_gen_c_json_parser@@Base+0x13ec>
   26130:	add	r3, pc, r3
   26134:	ldr	r2, [pc, #-2880]	; 255fc <__flatcc_fb_gen_c_json_parser@@Base+0x13f0>
   26138:	add	r3, r3, #280	; 0x118
   2613c:	add	r1, pc, r1
   26140:	add	r0, pc, r0
   26144:	bl	14030 <__assert_fail@plt>
   26148:	ldr	r3, [pc, #-2896]	; 25600 <__flatcc_fb_gen_c_json_parser@@Base+0x13f4>
   2614c:	ldr	r1, [pc, #-2896]	; 25604 <__flatcc_fb_gen_c_json_parser@@Base+0x13f8>
   26150:	ldr	r0, [pc, #-2896]	; 25608 <__flatcc_fb_gen_c_json_parser@@Base+0x13fc>
   26154:	add	r3, pc, r3
   26158:	ldr	r2, [pc, #-2900]	; 2560c <__flatcc_fb_gen_c_json_parser@@Base+0x1400>
   2615c:	add	r3, r3, #348	; 0x15c
   26160:	add	r1, pc, r1
   26164:	add	r0, pc, r0
   26168:	bl	14030 <__assert_fail@plt>
   2616c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   26170:	sub	sp, sp, #448	; 0x1c0
   26174:	add	r4, sp, #8
   26178:	mov	r5, r1
   2617c:	mov	r6, r0
   26180:	mov	r2, #220	; 0xdc
   26184:	mov	r0, r4
   26188:	mov	r1, #0
   2618c:	add	r7, sp, #228	; 0xe4
   26190:	bl	13f94 <memset@plt>
   26194:	mov	r2, #220	; 0xdc
   26198:	mov	r1, #0
   2619c:	mov	r0, r7
   261a0:	bl	13f94 <memset@plt>
   261a4:	mov	r2, r4
   261a8:	mov	r1, r5
   261ac:	ldr	r0, [r5, #12]
   261b0:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   261b4:	ldr	r1, [pc, #444]	; 26378 <__flatcc_fb_gen_c_json_parser@@Base+0x216c>
   261b8:	mov	r2, r4
   261bc:	ldr	r0, [r6]
   261c0:	add	r1, pc, r1
   261c4:	bl	13f7c <fprintf@plt>
   261c8:	ldr	r4, [r5, #20]
   261cc:	ldr	r5, [pc, #424]	; 2637c <__flatcc_fb_gen_c_json_parser@@Base+0x2170>
   261d0:	cmp	r4, #0
   261d4:	add	r5, pc, r5
   261d8:	beq	262a8 <__flatcc_fb_gen_c_json_parser@@Base+0x209c>
   261dc:	ldr	r8, [pc, #412]	; 26380 <__flatcc_fb_gen_c_json_parser@@Base+0x2174>
   261e0:	ldr	sl, [pc, #412]	; 26384 <__flatcc_fb_gen_c_json_parser@@Base+0x2178>
   261e4:	ldr	r9, [pc, #412]	; 26388 <__flatcc_fb_gen_c_json_parser@@Base+0x217c>
   261e8:	add	r8, pc, r8
   261ec:	add	sl, pc, sl
   261f0:	add	r9, pc, r9
   261f4:	ldrh	r3, [r4, #24]
   261f8:	cmp	r3, #10
   261fc:	beq	262e4 <__flatcc_fb_gen_c_json_parser@@Base+0x20d8>
   26200:	cmp	r3, #14
   26204:	beq	26260 <__flatcc_fb_gen_c_json_parser@@Base+0x2054>
   26208:	cmp	r3, #0
   2620c:	beq	2629c <__flatcc_fb_gen_c_json_parser@@Base+0x2090>
   26210:	ldr	r2, [pc, #372]	; 2638c <__flatcc_fb_gen_c_json_parser@@Base+0x2180>
   26214:	ldr	r3, [pc, #372]	; 26390 <__flatcc_fb_gen_c_json_parser@@Base+0x2184>
   26218:	ldr	r4, [pc, #372]	; 26394 <__flatcc_fb_gen_c_json_parser@@Base+0x2188>
   2621c:	ldr	r1, [r5, r2]
   26220:	add	r3, pc, r3
   26224:	str	r3, [sp]
   26228:	ldr	r0, [r1]
   2622c:	ldr	r1, [pc, #356]	; 26398 <__flatcc_fb_gen_c_json_parser@@Base+0x218c>
   26230:	add	r4, pc, r4
   26234:	mov	r2, r4
   26238:	mov	r3, #251	; 0xfb
   2623c:	add	r1, pc, r1
   26240:	bl	13f7c <fprintf@plt>
   26244:	ldr	r3, [pc, #336]	; 2639c <__flatcc_fb_gen_c_json_parser@@Base+0x2190>
   26248:	ldr	r0, [pc, #336]	; 263a0 <__flatcc_fb_gen_c_json_parser@@Base+0x2194>
   2624c:	mov	r1, r4
   26250:	add	r3, pc, r3
   26254:	mov	r2, #251	; 0xfb
   26258:	add	r0, pc, r0
   2625c:	bl	14030 <__assert_fail@plt>
   26260:	ldr	r1, [r4, #16]
   26264:	mov	r2, r7
   26268:	ldr	r0, [r1, #12]
   2626c:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   26270:	ldr	r3, [r4, #16]
   26274:	ldrh	r3, [r3, #8]
   26278:	cmp	r3, #0
   2627c:	beq	26304 <__flatcc_fb_gen_c_json_parser@@Base+0x20f8>
   26280:	cmp	r3, #1
   26284:	bne	26328 <__flatcc_fb_gen_c_json_parser@@Base+0x211c>
   26288:	mov	r3, r7
   2628c:	ldr	r2, [r4, #48]	; 0x30
   26290:	mov	r1, r9
   26294:	ldr	r0, [r6]
   26298:	bl	13f7c <fprintf@plt>
   2629c:	ldr	r4, [r4]
   262a0:	cmp	r4, #0
   262a4:	bne	261f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1fe8>
   262a8:	ldr	r0, [pc, #244]	; 263a4 <__flatcc_fb_gen_c_json_parser@@Base+0x2198>
   262ac:	ldr	r3, [r6]
   262b0:	mov	r2, #28
   262b4:	mov	r1, #1
   262b8:	add	r0, pc, r0
   262bc:	bl	13f10 <fwrite@plt>
   262c0:	ldr	r0, [pc, #224]	; 263a8 <__flatcc_fb_gen_c_json_parser@@Base+0x219c>
   262c4:	ldr	r3, [r6]
   262c8:	mov	r2, #9
   262cc:	mov	r1, #1
   262d0:	add	r0, pc, r0
   262d4:	bl	13f10 <fwrite@plt>
   262d8:	mov	r0, #0
   262dc:	add	sp, sp, #448	; 0x1c0
   262e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   262e4:	ldr	r2, [r4, #48]	; 0x30
   262e8:	mov	r1, r8
   262ec:	ldr	r0, [r6]
   262f0:	bl	13f7c <fprintf@plt>
   262f4:	ldr	r4, [r4]
   262f8:	cmp	r4, #0
   262fc:	bne	261f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1fe8>
   26300:	b	262a8 <__flatcc_fb_gen_c_json_parser@@Base+0x209c>
   26304:	ldr	r2, [r4, #48]	; 0x30
   26308:	mov	r3, r7
   2630c:	mov	r1, sl
   26310:	ldr	r0, [r6]
   26314:	bl	13f7c <fprintf@plt>
   26318:	ldr	r4, [r4]
   2631c:	cmp	r4, #0
   26320:	bne	261f4 <__flatcc_fb_gen_c_json_parser@@Base+0x1fe8>
   26324:	b	262a8 <__flatcc_fb_gen_c_json_parser@@Base+0x209c>
   26328:	ldr	r2, [pc, #92]	; 2638c <__flatcc_fb_gen_c_json_parser@@Base+0x2180>
   2632c:	ldr	r3, [pc, #120]	; 263ac <__flatcc_fb_gen_c_json_parser@@Base+0x21a0>
   26330:	ldr	r4, [pc, #120]	; 263b0 <__flatcc_fb_gen_c_json_parser@@Base+0x21a4>
   26334:	ldr	r1, [r5, r2]
   26338:	add	r3, pc, r3
   2633c:	str	r3, [sp]
   26340:	ldr	r0, [r1]
   26344:	ldr	r1, [pc, #104]	; 263b4 <__flatcc_fb_gen_c_json_parser@@Base+0x21a8>
   26348:	add	r4, pc, r4
   2634c:	mov	r2, r4
   26350:	mov	r3, #240	; 0xf0
   26354:	add	r1, pc, r1
   26358:	bl	13f7c <fprintf@plt>
   2635c:	ldr	r3, [pc, #84]	; 263b8 <__flatcc_fb_gen_c_json_parser@@Base+0x21ac>
   26360:	ldr	r0, [pc, #84]	; 263bc <__flatcc_fb_gen_c_json_parser@@Base+0x21b0>
   26364:	mov	r1, r4
   26368:	add	r3, pc, r3
   2636c:	mov	r2, #240	; 0xf0
   26370:	add	r0, pc, r0
   26374:	bl	14030 <__assert_fail@plt>
   26378:	andeq	lr, r2, r4, ror #9
   2637c:	andeq	r3, r4, r4, lsr #28
   26380:	ldrdeq	lr, [r2], -r0
   26384:	andeq	lr, r2, r8, ror #10
   26388:	andeq	lr, r2, r8, asr #11
   2638c:	muleq	r0, ip, r0
   26390:	andeq	lr, r2, r0, ror r6
   26394:	strdeq	lr, [r2], -r0
   26398:	andeq	r9, r1, r8, lsr #16
   2639c:	strdeq	lr, [r2], -r0
   263a0:	andeq	r1, r2, ip, lsl #24
   263a4:	andeq	lr, r2, r0, ror r4
   263a8:	andeq	lr, r2, r8, ror r4
   263ac:	andeq	lr, r2, r8, asr r5
   263b0:	ldrdeq	lr, [r2], -r8
   263b4:	andeq	r9, r1, r0, lsl r7
   263b8:	ldrdeq	lr, [r2], -r8
   263bc:	strdeq	r1, [r2], -r4
   263c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   263c4:	sub	sp, sp, #492	; 0x1ec
   263c8:	add	r7, sp, #48	; 0x30
   263cc:	mov	r4, r1
   263d0:	mov	r6, r0
   263d4:	mov	r2, #220	; 0xdc
   263d8:	mov	r1, #0
   263dc:	mov	r0, r7
   263e0:	add	r8, sp, #268	; 0x10c
   263e4:	bl	13f94 <memset@plt>
   263e8:	mov	r2, #220	; 0xdc
   263ec:	mov	r1, #0
   263f0:	mov	r0, r8
   263f4:	bl	13f94 <memset@plt>
   263f8:	mov	r1, r4
   263fc:	ldr	r0, [r4, #12]
   26400:	mov	r2, r7
   26404:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   26408:	ldr	r1, [pc, #996]	; 267f4 <__flatcc_fb_gen_c_json_parser@@Base+0x25e8>
   2640c:	mov	r2, r7
   26410:	ldr	r0, [r6]
   26414:	add	r1, pc, r1
   26418:	bl	13f7c <fprintf@plt>
   2641c:	ldr	r4, [r4, #20]
   26420:	ldr	sl, [pc, #976]	; 267f8 <__flatcc_fb_gen_c_json_parser@@Base+0x25ec>
   26424:	cmp	r4, #0
   26428:	add	sl, pc, sl
   2642c:	beq	26548 <__flatcc_fb_gen_c_json_parser@@Base+0x233c>
   26430:	ldr	r3, [pc, #964]	; 267fc <__flatcc_fb_gen_c_json_parser@@Base+0x25f0>
   26434:	ldr	r9, [pc, #964]	; 26800 <__flatcc_fb_gen_c_json_parser@@Base+0x25f4>
   26438:	add	r3, pc, r3
   2643c:	str	r3, [sp, #32]
   26440:	ldr	r3, [pc, #956]	; 26804 <__flatcc_fb_gen_c_json_parser@@Base+0x25f8>
   26444:	ldr	fp, [pc, #956]	; 26808 <__flatcc_fb_gen_c_json_parser@@Base+0x25fc>
   26448:	add	r3, pc, r3
   2644c:	str	r3, [sp, #36]	; 0x24
   26450:	ldr	r3, [pc, #948]	; 2680c <__flatcc_fb_gen_c_json_parser@@Base+0x2600>
   26454:	add	r9, pc, r9
   26458:	add	r3, pc, r3
   2645c:	str	r3, [sp, #40]	; 0x28
   26460:	ldr	r3, [pc, #936]	; 26810 <__flatcc_fb_gen_c_json_parser@@Base+0x2604>
   26464:	mov	r5, #0
   26468:	add	fp, pc, fp
   2646c:	add	r3, pc, r3
   26470:	str	r3, [sp, #44]	; 0x2c
   26474:	str	sl, [sp, #24]
   26478:	str	fp, [sp, #28]
   2647c:	ldrh	r3, [r4, #72]	; 0x48
   26480:	tst	r3, #4
   26484:	bne	26538 <__flatcc_fb_gen_c_json_parser@@Base+0x232c>
   26488:	ldrh	r3, [r4, #24]
   2648c:	cmp	r3, #8
   26490:	beq	26584 <__flatcc_fb_gen_c_json_parser@@Base+0x2378>
   26494:	cmp	r3, #14
   26498:	bne	26538 <__flatcc_fb_gen_c_json_parser@@Base+0x232c>
   2649c:	ldr	r1, [r4, #16]
   264a0:	mov	r2, r8
   264a4:	ldr	r0, [r1, #12]
   264a8:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   264ac:	ldr	r2, [r4, #16]
   264b0:	ldrh	r3, [r2, #8]
   264b4:	cmp	r3, #1
   264b8:	beq	265c4 <__flatcc_fb_gen_c_json_parser@@Base+0x23b8>
   264bc:	cmp	r3, #3
   264c0:	bne	26538 <__flatcc_fb_gen_c_json_parser@@Base+0x232c>
   264c4:	ldr	r3, [r2, #40]	; 0x28
   264c8:	sub	r3, r3, #1
   264cc:	cmp	r3, #10
   264d0:	addls	pc, pc, r3, lsl #2
   264d4:	b	2679c <__flatcc_fb_gen_c_json_parser@@Base+0x2590>
   264d8:	b	2673c <__flatcc_fb_gen_c_json_parser@@Base+0x2530>
   264dc:	b	26748 <__flatcc_fb_gen_c_json_parser@@Base+0x253c>
   264e0:	b	266d0 <__flatcc_fb_gen_c_json_parser@@Base+0x24c4>
   264e4:	b	26754 <__flatcc_fb_gen_c_json_parser@@Base+0x2548>
   264e8:	b	2676c <__flatcc_fb_gen_c_json_parser@@Base+0x2560>
   264ec:	b	26778 <__flatcc_fb_gen_c_json_parser@@Base+0x256c>
   264f0:	b	26784 <__flatcc_fb_gen_c_json_parser@@Base+0x2578>
   264f4:	b	26790 <__flatcc_fb_gen_c_json_parser@@Base+0x2584>
   264f8:	b	26724 <__flatcc_fb_gen_c_json_parser@@Base+0x2518>
   264fc:	b	26730 <__flatcc_fb_gen_c_json_parser@@Base+0x2524>
   26500:	b	26760 <__flatcc_fb_gen_c_json_parser@@Base+0x2554>
   26504:	ldr	r2, [sp, #28]
   26508:	ldr	r1, [r4, #4]
   2650c:	ldr	r0, [r6]
   26510:	ldr	r3, [r1, #4]
   26514:	str	r3, [sp, #16]
   26518:	ldr	r1, [r1]
   2651c:	str	r3, [sp, #8]
   26520:	str	r1, [sp, #12]
   26524:	ldrd	sl, [r4, #80]	; 0x50
   26528:	mov	r3, r5
   2652c:	mov	r1, r9
   26530:	strd	sl, [sp]
   26534:	bl	13f7c <fprintf@plt>
   26538:	ldr	r4, [r4]
   2653c:	add	r5, r5, #1
   26540:	cmp	r4, #0
   26544:	bne	2647c <__flatcc_fb_gen_c_json_parser@@Base+0x2270>
   26548:	ldr	r0, [pc, #708]	; 26814 <__flatcc_fb_gen_c_json_parser@@Base+0x2608>
   2654c:	ldr	r3, [r6]
   26550:	mov	r2, #3
   26554:	mov	r1, #1
   26558:	add	r0, pc, r0
   2655c:	bl	13f10 <fwrite@plt>
   26560:	ldr	r1, [pc, #688]	; 26818 <__flatcc_fb_gen_c_json_parser@@Base+0x260c>
   26564:	mov	r3, r7
   26568:	mov	r2, r7
   2656c:	ldr	r0, [r6]
   26570:	add	r1, pc, r1
   26574:	bl	13f7c <fprintf@plt>
   26578:	mov	r0, #0
   2657c:	add	sp, sp, #492	; 0x1ec
   26580:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26584:	ldr	r3, [r4, #16]
   26588:	sub	r3, r3, #1
   2658c:	cmp	r3, #10
   26590:	addls	pc, pc, r3, lsl #2
   26594:	b	26678 <__flatcc_fb_gen_c_json_parser@@Base+0x246c>
   26598:	b	26640 <__flatcc_fb_gen_c_json_parser@@Base+0x2434>
   2659c:	b	26648 <__flatcc_fb_gen_c_json_parser@@Base+0x243c>
   265a0:	b	26504 <__flatcc_fb_gen_c_json_parser@@Base+0x22f8>
   265a4:	b	26610 <__flatcc_fb_gen_c_json_parser@@Base+0x2404>
   265a8:	b	2661c <__flatcc_fb_gen_c_json_parser@@Base+0x2410>
   265ac:	b	26628 <__flatcc_fb_gen_c_json_parser@@Base+0x241c>
   265b0:	b	26634 <__flatcc_fb_gen_c_json_parser@@Base+0x2428>
   265b4:	b	26654 <__flatcc_fb_gen_c_json_parser@@Base+0x2448>
   265b8:	b	26660 <__flatcc_fb_gen_c_json_parser@@Base+0x2454>
   265bc:	b	26668 <__flatcc_fb_gen_c_json_parser@@Base+0x245c>
   265c0:	b	26670 <__flatcc_fb_gen_c_json_parser@@Base+0x2464>
   265c4:	ldr	r1, [r4, #4]
   265c8:	ldr	r0, [r6]
   265cc:	mov	r2, r5
   265d0:	ldr	r3, [r1, #4]
   265d4:	str	r8, [sp, #20]
   265d8:	str	r3, [sp, #16]
   265dc:	ldr	r1, [r1]
   265e0:	str	r3, [sp, #8]
   265e4:	str	r1, [sp, #12]
   265e8:	ldrd	sl, [r4, #80]	; 0x50
   265ec:	ldr	r1, [pc, #552]	; 2681c <__flatcc_fb_gen_c_json_parser@@Base+0x2610>
   265f0:	add	r5, r5, #1
   265f4:	strd	sl, [sp]
   265f8:	add	r1, pc, r1
   265fc:	bl	13f7c <fprintf@plt>
   26600:	ldr	r4, [r4]
   26604:	cmp	r4, #0
   26608:	bne	2647c <__flatcc_fb_gen_c_json_parser@@Base+0x2270>
   2660c:	b	26548 <__flatcc_fb_gen_c_json_parser@@Base+0x233c>
   26610:	ldr	r2, [pc, #520]	; 26820 <__flatcc_fb_gen_c_json_parser@@Base+0x2614>
   26614:	add	r2, pc, r2
   26618:	b	26508 <__flatcc_fb_gen_c_json_parser@@Base+0x22fc>
   2661c:	ldr	r2, [pc, #512]	; 26824 <__flatcc_fb_gen_c_json_parser@@Base+0x2618>
   26620:	add	r2, pc, r2
   26624:	b	26508 <__flatcc_fb_gen_c_json_parser@@Base+0x22fc>
   26628:	ldr	r2, [pc, #504]	; 26828 <__flatcc_fb_gen_c_json_parser@@Base+0x261c>
   2662c:	add	r2, pc, r2
   26630:	b	26508 <__flatcc_fb_gen_c_json_parser@@Base+0x22fc>
   26634:	ldr	r2, [pc, #496]	; 2682c <__flatcc_fb_gen_c_json_parser@@Base+0x2620>
   26638:	add	r2, pc, r2
   2663c:	b	26508 <__flatcc_fb_gen_c_json_parser@@Base+0x22fc>
   26640:	ldr	r2, [sp, #32]
   26644:	b	26508 <__flatcc_fb_gen_c_json_parser@@Base+0x22fc>
   26648:	ldr	r2, [pc, #480]	; 26830 <__flatcc_fb_gen_c_json_parser@@Base+0x2624>
   2664c:	add	r2, pc, r2
   26650:	b	26508 <__flatcc_fb_gen_c_json_parser@@Base+0x22fc>
   26654:	ldr	r2, [pc, #472]	; 26834 <__flatcc_fb_gen_c_json_parser@@Base+0x2628>
   26658:	add	r2, pc, r2
   2665c:	b	26508 <__flatcc_fb_gen_c_json_parser@@Base+0x22fc>
   26660:	ldr	r2, [sp, #44]	; 0x2c
   26664:	b	26508 <__flatcc_fb_gen_c_json_parser@@Base+0x22fc>
   26668:	ldr	r2, [sp, #36]	; 0x24
   2666c:	b	26508 <__flatcc_fb_gen_c_json_parser@@Base+0x22fc>
   26670:	ldr	r2, [sp, #40]	; 0x28
   26674:	b	26508 <__flatcc_fb_gen_c_json_parser@@Base+0x22fc>
   26678:	ldr	sl, [sp, #24]
   2667c:	ldr	r2, [pc, #436]	; 26838 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   26680:	ldr	r3, [pc, #436]	; 2683c <__flatcc_fb_gen_c_json_parser@@Base+0x2630>
   26684:	ldr	r4, [pc, #436]	; 26840 <__flatcc_fb_gen_c_json_parser@@Base+0x2634>
   26688:	ldr	r1, [sl, r2]
   2668c:	add	r3, pc, r3
   26690:	str	r3, [sp]
   26694:	ldr	r0, [r1]
   26698:	ldr	r1, [pc, #420]	; 26844 <__flatcc_fb_gen_c_json_parser@@Base+0x2638>
   2669c:	add	r4, pc, r4
   266a0:	mov	r2, r4
   266a4:	mov	r3, #96	; 0x60
   266a8:	add	r1, pc, r1
   266ac:	bl	13f7c <fprintf@plt>
   266b0:	ldr	r3, [pc, #400]	; 26848 <__flatcc_fb_gen_c_json_parser@@Base+0x263c>
   266b4:	ldr	r0, [pc, #400]	; 2684c <__flatcc_fb_gen_c_json_parser@@Base+0x2640>
   266b8:	add	r3, pc, r3
   266bc:	mov	r1, r4
   266c0:	add	r3, r3, #32
   266c4:	mov	r2, #96	; 0x60
   266c8:	add	r0, pc, r0
   266cc:	bl	14030 <__assert_fail@plt>
   266d0:	ldr	r2, [pc, #376]	; 26850 <__flatcc_fb_gen_c_json_parser@@Base+0x2644>
   266d4:	add	r2, pc, r2
   266d8:	ldr	r1, [r4, #4]
   266dc:	ldr	r0, [r6]
   266e0:	ldr	r3, [r1, #4]
   266e4:	str	r8, [sp, #20]
   266e8:	str	r3, [sp, #16]
   266ec:	ldr	r1, [r1]
   266f0:	str	r3, [sp, #8]
   266f4:	str	r1, [sp, #12]
   266f8:	ldrd	sl, [r4, #80]	; 0x50
   266fc:	ldr	r1, [pc, #336]	; 26854 <__flatcc_fb_gen_c_json_parser@@Base+0x2648>
   26700:	mov	r3, r5
   26704:	strd	sl, [sp]
   26708:	add	r1, pc, r1
   2670c:	bl	13f7c <fprintf@plt>
   26710:	ldr	r4, [r4]
   26714:	add	r5, r5, #1
   26718:	cmp	r4, #0
   2671c:	bne	2647c <__flatcc_fb_gen_c_json_parser@@Base+0x2270>
   26720:	b	26548 <__flatcc_fb_gen_c_json_parser@@Base+0x233c>
   26724:	ldr	r2, [pc, #300]	; 26858 <__flatcc_fb_gen_c_json_parser@@Base+0x264c>
   26728:	add	r2, pc, r2
   2672c:	b	266d8 <__flatcc_fb_gen_c_json_parser@@Base+0x24cc>
   26730:	ldr	r2, [pc, #292]	; 2685c <__flatcc_fb_gen_c_json_parser@@Base+0x2650>
   26734:	add	r2, pc, r2
   26738:	b	266d8 <__flatcc_fb_gen_c_json_parser@@Base+0x24cc>
   2673c:	ldr	r2, [pc, #284]	; 26860 <__flatcc_fb_gen_c_json_parser@@Base+0x2654>
   26740:	add	r2, pc, r2
   26744:	b	266d8 <__flatcc_fb_gen_c_json_parser@@Base+0x24cc>
   26748:	ldr	r2, [pc, #276]	; 26864 <__flatcc_fb_gen_c_json_parser@@Base+0x2658>
   2674c:	add	r2, pc, r2
   26750:	b	266d8 <__flatcc_fb_gen_c_json_parser@@Base+0x24cc>
   26754:	ldr	r2, [pc, #268]	; 26868 <__flatcc_fb_gen_c_json_parser@@Base+0x265c>
   26758:	add	r2, pc, r2
   2675c:	b	266d8 <__flatcc_fb_gen_c_json_parser@@Base+0x24cc>
   26760:	ldr	r2, [pc, #260]	; 2686c <__flatcc_fb_gen_c_json_parser@@Base+0x2660>
   26764:	add	r2, pc, r2
   26768:	b	266d8 <__flatcc_fb_gen_c_json_parser@@Base+0x24cc>
   2676c:	ldr	r2, [pc, #252]	; 26870 <__flatcc_fb_gen_c_json_parser@@Base+0x2664>
   26770:	add	r2, pc, r2
   26774:	b	266d8 <__flatcc_fb_gen_c_json_parser@@Base+0x24cc>
   26778:	ldr	r2, [pc, #244]	; 26874 <__flatcc_fb_gen_c_json_parser@@Base+0x2668>
   2677c:	add	r2, pc, r2
   26780:	b	266d8 <__flatcc_fb_gen_c_json_parser@@Base+0x24cc>
   26784:	ldr	r2, [pc, #236]	; 26878 <__flatcc_fb_gen_c_json_parser@@Base+0x266c>
   26788:	add	r2, pc, r2
   2678c:	b	266d8 <__flatcc_fb_gen_c_json_parser@@Base+0x24cc>
   26790:	ldr	r2, [pc, #228]	; 2687c <__flatcc_fb_gen_c_json_parser@@Base+0x2670>
   26794:	add	r2, pc, r2
   26798:	b	266d8 <__flatcc_fb_gen_c_json_parser@@Base+0x24cc>
   2679c:	ldr	sl, [sp, #24]
   267a0:	ldr	r2, [pc, #144]	; 26838 <__flatcc_fb_gen_c_json_parser@@Base+0x262c>
   267a4:	ldr	r3, [pc, #212]	; 26880 <__flatcc_fb_gen_c_json_parser@@Base+0x2674>
   267a8:	ldr	r4, [pc, #212]	; 26884 <__flatcc_fb_gen_c_json_parser@@Base+0x2678>
   267ac:	ldr	r1, [sl, r2]
   267b0:	add	r3, pc, r3
   267b4:	str	r3, [sp]
   267b8:	ldr	r0, [r1]
   267bc:	ldr	r1, [pc, #196]	; 26888 <__flatcc_fb_gen_c_json_parser@@Base+0x267c>
   267c0:	add	r4, pc, r4
   267c4:	mov	r2, r4
   267c8:	mov	r3, #96	; 0x60
   267cc:	add	r1, pc, r1
   267d0:	bl	13f7c <fprintf@plt>
   267d4:	ldr	r3, [pc, #176]	; 2688c <__flatcc_fb_gen_c_json_parser@@Base+0x2680>
   267d8:	ldr	r0, [pc, #176]	; 26890 <__flatcc_fb_gen_c_json_parser@@Base+0x2684>
   267dc:	add	r3, pc, r3
   267e0:	mov	r1, r4
   267e4:	add	r3, r3, #32
   267e8:	mov	r2, #96	; 0x60
   267ec:	add	r0, pc, r0
   267f0:	bl	14030 <__assert_fail@plt>
   267f4:	strdeq	lr, [r2], -r4
   267f8:	ldrdeq	r3, [r4], -r0
   267fc:	andeq	r9, r1, r8, lsr r9
   26800:	ldrdeq	lr, [r2], -ip
   26804:	strdeq	r9, [r1], -r4
   26808:	andeq	r9, r1, r8, lsl r9
   2680c:	ldrdeq	r9, [r1], -ip
   26810:	andeq	r9, r1, ip, lsr r9
   26814:	andeq	fp, r2, ip, asr #6
   26818:	andeq	lr, r2, r8, ror #7
   2681c:	andeq	lr, r2, r8, ror #9
   26820:	andeq	r9, r1, r4, ror r7
   26824:	muleq	r3, ip, sl
   26828:	andeq	r9, r1, r4, ror #14
   2682c:	andeq	r9, r1, r0, ror #14
   26830:	andeq	r9, r1, ip, lsr #14
   26834:	andeq	r9, r1, r8, asr #14
   26838:	muleq	r0, ip, r0
   2683c:	andeq	r9, r1, r4, ror #7
   26840:	andeq	r9, r1, r8, ror #6
   26844:			; <UNDEFINED> instruction: 0x000193bc
   26848:	andeq	sp, r2, r8, lsl #31
   2684c:	muleq	r2, ip, r7
   26850:	andeq	r9, r1, ip, lsr #13
   26854:	andeq	lr, r2, r4, ror r3
   26858:	andeq	r9, r1, r0, lsl #13
   2685c:	andeq	r9, r1, r8, lsl #4
   26860:	andeq	r9, r1, r0, lsr r6
   26864:	andeq	r9, r1, ip, lsr #12
   26868:	andeq	r9, r1, r0, lsr r6
   2686c:	ldrdeq	r9, [r1], -r0
   26870:	andeq	r1, r3, ip, asr #18
   26874:	andeq	r9, r1, r4, lsl r6
   26878:	andeq	r9, r1, r0, lsl r6
   2687c:	andeq	r9, r1, ip, lsl #12
   26880:	andeq	r9, r1, r0, asr #5
   26884:	andeq	r9, r1, r4, asr #4
   26888:	muleq	r1, r8, r2
   2688c:	andeq	sp, r2, r4, ror #28
   26890:	andeq	r1, r2, r8, ror r6
   26894:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26898:	sub	sp, sp, #468	; 0x1d4
   2689c:	add	r8, sp, #24
   268a0:	mov	r7, r1
   268a4:	mov	r2, #220	; 0xdc
   268a8:	mov	r1, #0
   268ac:	mov	r6, r0
   268b0:	mov	r0, r8
   268b4:	bl	13f94 <memset@plt>
   268b8:	mov	r2, #220	; 0xdc
   268bc:	mov	r1, #0
   268c0:	add	r0, sp, #244	; 0xf4
   268c4:	bl	13f94 <memset@plt>
   268c8:	mov	r2, r8
   268cc:	mov	r1, r7
   268d0:	ldr	r0, [r7, #12]
   268d4:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   268d8:	ldr	r3, [r7, #40]	; 0x28
   268dc:	ldr	sl, [pc, #1660]	; 26f60 <__flatcc_fb_gen_c_json_parser@@Base+0x2d54>
   268e0:	sub	r3, r3, #1
   268e4:	add	sl, pc, sl
   268e8:	cmp	r3, #10
   268ec:	addls	pc, pc, r3, lsl #2
   268f0:	b	26f0c <__flatcc_fb_gen_c_json_parser@@Base+0x2d00>
   268f4:	b	26b1c <__flatcc_fb_gen_c_json_parser@@Base+0x2910>
   268f8:	b	26afc <__flatcc_fb_gen_c_json_parser@@Base+0x28f0>
   268fc:	b	26920 <__flatcc_fb_gen_c_json_parser@@Base+0x2714>
   26900:	b	26bf4 <__flatcc_fb_gen_c_json_parser@@Base+0x29e8>
   26904:	b	26c14 <__flatcc_fb_gen_c_json_parser@@Base+0x2a08>
   26908:	b	26b74 <__flatcc_fb_gen_c_json_parser@@Base+0x2968>
   2690c:	b	26b94 <__flatcc_fb_gen_c_json_parser@@Base+0x2988>
   26910:	b	26bb4 <__flatcc_fb_gen_c_json_parser@@Base+0x29a8>
   26914:	b	26bd4 <__flatcc_fb_gen_c_json_parser@@Base+0x29c8>
   26918:	b	26b3c <__flatcc_fb_gen_c_json_parser@@Base+0x2930>
   2691c:	b	26b58 <__flatcc_fb_gen_c_json_parser@@Base+0x294c>
   26920:	ldr	r9, [pc, #1596]	; 26f64 <__flatcc_fb_gen_c_json_parser@@Base+0x2d58>
   26924:	ldr	ip, [pc, #1596]	; 26f68 <__flatcc_fb_gen_c_json_parser@@Base+0x2d5c>
   26928:	ldr	r3, [pc, #1596]	; 26f6c <__flatcc_fb_gen_c_json_parser@@Base+0x2d60>
   2692c:	add	r9, pc, r9
   26930:	add	ip, pc, ip
   26934:	add	r3, pc, r3
   26938:	str	r3, [sp, #20]
   2693c:	ldrh	r3, [r7, #92]	; 0x5c
   26940:	tst	r3, #32
   26944:	beq	26d10 <__flatcc_fb_gen_c_json_parser@@Base+0x2b04>
   26948:	ldrd	r2, [r7, #112]	; 0x70
   2694c:	cmp	r3, #0
   26950:	cmpeq	r2, #2
   26954:	beq	26eac <__flatcc_fb_gen_c_json_parser@@Base+0x2ca0>
   26958:	cmp	r3, #0
   2695c:	cmpeq	r2, #4
   26960:	beq	26eec <__flatcc_fb_gen_c_json_parser@@Base+0x2ce0>
   26964:	cmp	r3, #0
   26968:	cmpeq	r2, #1
   2696c:	beq	26ecc <__flatcc_fb_gen_c_json_parser@@Base+0x2cc0>
   26970:	ldr	fp, [pc, #1528]	; 26f70 <__flatcc_fb_gen_c_json_parser@@Base+0x2d64>
   26974:	ldr	r3, [pc, #1528]	; 26f74 <__flatcc_fb_gen_c_json_parser@@Base+0x2d68>
   26978:	add	fp, pc, fp
   2697c:	mvn	r4, #0
   26980:	mvn	r5, #0
   26984:	add	r3, pc, r3
   26988:	str	r3, [sp, #16]
   2698c:	ldr	r1, [r7, #20]
   26990:	cmp	r1, #0
   26994:	bne	269b8 <__flatcc_fb_gen_c_json_parser@@Base+0x27ac>
   26998:	b	269dc <__flatcc_fb_gen_c_json_parser@@Base+0x27d0>
   2699c:	cmp	r3, #6
   269a0:	beq	26c30 <__flatcc_fb_gen_c_json_parser@@Base+0x2a24>
   269a4:	cmp	r3, #4
   269a8:	beq	269c4 <__flatcc_fb_gen_c_json_parser@@Base+0x27b8>
   269ac:	ldr	r1, [r1]
   269b0:	cmp	r1, #0
   269b4:	beq	269dc <__flatcc_fb_gen_c_json_parser@@Base+0x27d0>
   269b8:	ldrh	r3, [r1, #56]	; 0x38
   269bc:	cmp	r3, #5
   269c0:	bne	2699c <__flatcc_fb_gen_c_json_parser@@Base+0x2790>
   269c4:	ldrd	r2, [r1, #48]	; 0x30
   269c8:	ldr	r1, [r1]
   269cc:	cmp	r1, #0
   269d0:	bic	r4, r4, r2
   269d4:	bic	r5, r5, r3
   269d8:	bne	269b8 <__flatcc_fb_gen_c_json_parser@@Base+0x27ac>
   269dc:	ldr	r1, [pc, #1428]	; 26f78 <__flatcc_fb_gen_c_json_parser@@Base+0x2d6c>
   269e0:	ldr	r0, [r6, #204]	; 0xcc
   269e4:	mov	r3, ip
   269e8:	mov	r2, r8
   269ec:	add	r1, pc, r1
   269f0:	str	r9, [sp]
   269f4:	bl	13f7c <fprintf@plt>
   269f8:	mov	r1, r9
   269fc:	ldr	r0, [sp, #16]
   26a00:	bl	13eb0 <strcmp@plt>
   26a04:	cmp	r0, #0
   26a08:	beq	26dd8 <__flatcc_fb_gen_c_json_parser@@Base+0x2bcc>
   26a0c:	ldr	r3, [sp, #16]
   26a10:	ldr	r1, [pc, #1380]	; 26f7c <__flatcc_fb_gen_c_json_parser@@Base+0x2d70>
   26a14:	mov	r2, r3
   26a18:	add	r1, pc, r1
   26a1c:	ldr	r0, [r6, #204]	; 0xcc
   26a20:	bl	13f7c <fprintf@plt>
   26a24:	ldr	r0, [pc, #1364]	; 26f80 <__flatcc_fb_gen_c_json_parser@@Base+0x2d74>
   26a28:	ldr	r3, [r6, #204]	; 0xcc
   26a2c:	mov	r2, #54	; 0x36
   26a30:	mov	r1, #1
   26a34:	add	r0, pc, r0
   26a38:	bl	13f10 <fwrite@plt>
   26a3c:	ldr	r1, [r6, #204]	; 0xcc
   26a40:	mov	r0, #10
   26a44:	bl	13fdc <fputc@plt>
   26a48:	orrs	r3, r4, r5
   26a4c:	bne	26e88 <__flatcc_fb_gen_c_json_parser@@Base+0x2c7c>
   26a50:	ldr	r0, [pc, #1324]	; 26f84 <__flatcc_fb_gen_c_json_parser@@Base+0x2d78>
   26a54:	ldr	r3, [r6, #204]	; 0xcc
   26a58:	mov	r2, #59	; 0x3b
   26a5c:	mov	r1, #1
   26a60:	add	r0, pc, r0
   26a64:	bl	13f10 <fwrite@plt>
   26a68:	ldr	r4, [r7, #20]
   26a6c:	cmp	r4, #0
   26a70:	beq	26c78 <__flatcc_fb_gen_c_json_parser@@Base+0x2a6c>
   26a74:	ldr	r8, [pc, #1292]	; 26f88 <__flatcc_fb_gen_c_json_parser@@Base+0x2d7c>
   26a78:	ldr	r7, [pc, #1292]	; 26f8c <__flatcc_fb_gen_c_json_parser@@Base+0x2d80>
   26a7c:	ldr	r5, [pc, #1292]	; 26f90 <__flatcc_fb_gen_c_json_parser@@Base+0x2d84>
   26a80:	add	r8, pc, r8
   26a84:	add	r7, pc, r7
   26a88:	add	r5, pc, r5
   26a8c:	ldrh	r3, [r4, #56]	; 0x38
   26a90:	cmp	r3, #5
   26a94:	beq	26c44 <__flatcc_fb_gen_c_json_parser@@Base+0x2a38>
   26a98:	cmp	r3, #6
   26a9c:	beq	26ce0 <__flatcc_fb_gen_c_json_parser@@Base+0x2ad4>
   26aa0:	cmp	r3, #4
   26aa4:	beq	26cb4 <__flatcc_fb_gen_c_json_parser@@Base+0x2aa8>
   26aa8:	ldr	r2, [pc, #1252]	; 26f94 <__flatcc_fb_gen_c_json_parser@@Base+0x2d88>
   26aac:	ldr	r3, [pc, #1252]	; 26f98 <__flatcc_fb_gen_c_json_parser@@Base+0x2d8c>
   26ab0:	ldr	r4, [pc, #1252]	; 26f9c <__flatcc_fb_gen_c_json_parser@@Base+0x2d90>
   26ab4:	ldr	r1, [sl, r2]
   26ab8:	add	r3, pc, r3
   26abc:	str	r3, [sp]
   26ac0:	ldr	r0, [r1]
   26ac4:	ldr	r1, [pc, #1236]	; 26fa0 <__flatcc_fb_gen_c_json_parser@@Base+0x2d94>
   26ac8:	add	r4, pc, r4
   26acc:	mov	r2, r4
   26ad0:	mov	r3, #134	; 0x86
   26ad4:	add	r1, pc, r1
   26ad8:	bl	13f7c <fprintf@plt>
   26adc:	ldr	r3, [pc, #1216]	; 26fa4 <__flatcc_fb_gen_c_json_parser@@Base+0x2d98>
   26ae0:	ldr	r0, [pc, #1216]	; 26fa8 <__flatcc_fb_gen_c_json_parser@@Base+0x2d9c>
   26ae4:	add	r3, pc, r3
   26ae8:	mov	r1, r4
   26aec:	add	r3, r3, #52	; 0x34
   26af0:	mov	r2, #134	; 0x86
   26af4:	add	r0, pc, r0
   26af8:	bl	14030 <__assert_fail@plt>
   26afc:	ldr	r3, [pc, #1192]	; 26fac <__flatcc_fb_gen_c_json_parser@@Base+0x2da0>
   26b00:	ldr	r9, [pc, #1192]	; 26fb0 <__flatcc_fb_gen_c_json_parser@@Base+0x2da4>
   26b04:	ldr	ip, [pc, #1192]	; 26fb4 <__flatcc_fb_gen_c_json_parser@@Base+0x2da8>
   26b08:	add	r3, pc, r3
   26b0c:	str	r3, [sp, #20]
   26b10:	add	r9, pc, r9
   26b14:	add	ip, pc, ip
   26b18:	b	2693c <__flatcc_fb_gen_c_json_parser@@Base+0x2730>
   26b1c:	ldr	r3, [pc, #1172]	; 26fb8 <__flatcc_fb_gen_c_json_parser@@Base+0x2dac>
   26b20:	ldr	r9, [pc, #1172]	; 26fbc <__flatcc_fb_gen_c_json_parser@@Base+0x2db0>
   26b24:	ldr	ip, [pc, #1172]	; 26fc0 <__flatcc_fb_gen_c_json_parser@@Base+0x2db4>
   26b28:	add	r3, pc, r3
   26b2c:	str	r3, [sp, #20]
   26b30:	add	r9, pc, r9
   26b34:	add	ip, pc, ip
   26b38:	b	2693c <__flatcc_fb_gen_c_json_parser@@Base+0x2730>
   26b3c:	ldr	r3, [pc, #1152]	; 26fc4 <__flatcc_fb_gen_c_json_parser@@Base+0x2db8>
   26b40:	ldr	ip, [pc, #1152]	; 26fc8 <__flatcc_fb_gen_c_json_parser@@Base+0x2dbc>
   26b44:	add	r3, pc, r3
   26b48:	str	r3, [sp, #20]
   26b4c:	add	ip, pc, ip
   26b50:	mov	r9, r3
   26b54:	b	2693c <__flatcc_fb_gen_c_json_parser@@Base+0x2730>
   26b58:	ldr	r3, [pc, #1132]	; 26fcc <__flatcc_fb_gen_c_json_parser@@Base+0x2dc0>
   26b5c:	ldr	ip, [pc, #1132]	; 26fd0 <__flatcc_fb_gen_c_json_parser@@Base+0x2dc4>
   26b60:	add	r3, pc, r3
   26b64:	str	r3, [sp, #20]
   26b68:	add	ip, pc, ip
   26b6c:	mov	r9, r3
   26b70:	b	2693c <__flatcc_fb_gen_c_json_parser@@Base+0x2730>
   26b74:	ldr	r3, [pc, #1112]	; 26fd4 <__flatcc_fb_gen_c_json_parser@@Base+0x2dc8>
   26b78:	ldr	r9, [pc, #1112]	; 26fd8 <__flatcc_fb_gen_c_json_parser@@Base+0x2dcc>
   26b7c:	ldr	ip, [pc, #1112]	; 26fdc <__flatcc_fb_gen_c_json_parser@@Base+0x2dd0>
   26b80:	add	r3, pc, r3
   26b84:	str	r3, [sp, #20]
   26b88:	add	r9, pc, r9
   26b8c:	add	ip, pc, ip
   26b90:	b	2693c <__flatcc_fb_gen_c_json_parser@@Base+0x2730>
   26b94:	ldr	r3, [pc, #1092]	; 26fe0 <__flatcc_fb_gen_c_json_parser@@Base+0x2dd4>
   26b98:	ldr	r9, [pc, #1092]	; 26fe4 <__flatcc_fb_gen_c_json_parser@@Base+0x2dd8>
   26b9c:	ldr	ip, [pc, #1092]	; 26fe8 <__flatcc_fb_gen_c_json_parser@@Base+0x2ddc>
   26ba0:	add	r3, pc, r3
   26ba4:	str	r3, [sp, #20]
   26ba8:	add	r9, pc, r9
   26bac:	add	ip, pc, ip
   26bb0:	b	2693c <__flatcc_fb_gen_c_json_parser@@Base+0x2730>
   26bb4:	ldr	r3, [pc, #1072]	; 26fec <__flatcc_fb_gen_c_json_parser@@Base+0x2de0>
   26bb8:	ldr	r9, [pc, #1072]	; 26ff0 <__flatcc_fb_gen_c_json_parser@@Base+0x2de4>
   26bbc:	ldr	ip, [pc, #1072]	; 26ff4 <__flatcc_fb_gen_c_json_parser@@Base+0x2de8>
   26bc0:	add	r3, pc, r3
   26bc4:	str	r3, [sp, #20]
   26bc8:	add	r9, pc, r9
   26bcc:	add	ip, pc, ip
   26bd0:	b	2693c <__flatcc_fb_gen_c_json_parser@@Base+0x2730>
   26bd4:	ldr	r3, [pc, #1052]	; 26ff8 <__flatcc_fb_gen_c_json_parser@@Base+0x2dec>
   26bd8:	ldr	r9, [pc, #1052]	; 26ffc <__flatcc_fb_gen_c_json_parser@@Base+0x2df0>
   26bdc:	ldr	ip, [pc, #1052]	; 27000 <__flatcc_fb_gen_c_json_parser@@Base+0x2df4>
   26be0:	add	r3, pc, r3
   26be4:	str	r3, [sp, #20]
   26be8:	add	r9, pc, r9
   26bec:	add	ip, pc, ip
   26bf0:	b	2693c <__flatcc_fb_gen_c_json_parser@@Base+0x2730>
   26bf4:	ldr	r3, [pc, #1032]	; 27004 <__flatcc_fb_gen_c_json_parser@@Base+0x2df8>
   26bf8:	ldr	r9, [pc, #1032]	; 27008 <__flatcc_fb_gen_c_json_parser@@Base+0x2dfc>
   26bfc:	ldr	ip, [pc, #1032]	; 2700c <__flatcc_fb_gen_c_json_parser@@Base+0x2e00>
   26c00:	add	r3, pc, r3
   26c04:	str	r3, [sp, #20]
   26c08:	add	r9, pc, r9
   26c0c:	add	ip, pc, ip
   26c10:	b	2693c <__flatcc_fb_gen_c_json_parser@@Base+0x2730>
   26c14:	ldr	r3, [pc, #1012]	; 27010 <__flatcc_fb_gen_c_json_parser@@Base+0x2e04>
   26c18:	ldr	r9, [pc, #1012]	; 27014 <__flatcc_fb_gen_c_json_parser@@Base+0x2e08>
   26c1c:	add	r3, pc, r3
   26c20:	mov	ip, r6
   26c24:	str	r3, [sp, #20]
   26c28:	add	r9, pc, r9
   26c2c:	b	2693c <__flatcc_fb_gen_c_json_parser@@Base+0x2730>
   26c30:	ldrb	r2, [r1, #48]	; 0x30
   26c34:	mov	r3, #0
   26c38:	bic	r5, r5, r3
   26c3c:	bic	r4, r4, r2
   26c40:	b	269ac <__flatcc_fb_gen_c_json_parser@@Base+0x27a0>
   26c44:	ldr	ip, [r4, #4]
   26c48:	ldrd	r2, [r4, #48]	; 0x30
   26c4c:	ldr	r0, [r6, #204]	; 0xcc
   26c50:	ldr	r1, [ip, #4]
   26c54:	str	r1, [sp, #12]
   26c58:	ldr	ip, [ip]
   26c5c:	str	fp, [sp]
   26c60:	stmib	sp, {r1, ip}
   26c64:	mov	r1, r8
   26c68:	bl	13f7c <fprintf@plt>
   26c6c:	ldr	r4, [r4]
   26c70:	cmp	r4, #0
   26c74:	bne	26a8c <__flatcc_fb_gen_c_json_parser@@Base+0x2880>
   26c78:	ldr	r0, [pc, #920]	; 27018 <__flatcc_fb_gen_c_json_parser@@Base+0x2e0c>
   26c7c:	ldr	r3, [r6, #204]	; 0xcc
   26c80:	mov	r2, #59	; 0x3b
   26c84:	mov	r1, #1
   26c88:	add	r0, pc, r0
   26c8c:	bl	13f10 <fwrite@plt>
   26c90:	ldr	r0, [pc, #900]	; 2701c <__flatcc_fb_gen_c_json_parser@@Base+0x2e10>
   26c94:	ldr	r3, [r6, #204]	; 0xcc
   26c98:	mov	r2, #3
   26c9c:	mov	r1, #1
   26ca0:	add	r0, pc, r0
   26ca4:	bl	13f10 <fwrite@plt>
   26ca8:	mov	r0, #0
   26cac:	add	sp, sp, #468	; 0x1d4
   26cb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26cb4:	ldr	ip, [r4, #4]
   26cb8:	ldrd	r2, [r4, #48]	; 0x30
   26cbc:	ldr	r0, [r6, #204]	; 0xcc
   26cc0:	ldr	r1, [ip, #4]
   26cc4:	str	r1, [sp, #12]
   26cc8:	ldr	ip, [ip]
   26ccc:	str	fp, [sp]
   26cd0:	stmib	sp, {r1, ip}
   26cd4:	mov	r1, r5
   26cd8:	bl	13f7c <fprintf@plt>
   26cdc:	b	26c6c <__flatcc_fb_gen_c_json_parser@@Base+0x2a60>
   26ce0:	ldr	ip, [r4, #4]
   26ce4:	ldrb	r2, [r4, #48]	; 0x30
   26ce8:	ldr	r0, [r6, #204]	; 0xcc
   26cec:	ldr	r1, [ip, #4]
   26cf0:	mov	r3, #0
   26cf4:	str	r1, [sp, #12]
   26cf8:	ldr	ip, [ip]
   26cfc:	str	fp, [sp]
   26d00:	stmib	sp, {r1, ip}
   26d04:	mov	r1, r7
   26d08:	bl	13f7c <fprintf@plt>
   26d0c:	b	26c6c <__flatcc_fb_gen_c_json_parser@@Base+0x2a60>
   26d10:	ldr	r1, [pc, #776]	; 27020 <__flatcc_fb_gen_c_json_parser@@Base+0x2e14>
   26d14:	mov	r3, ip
   26d18:	ldr	r0, [r6, #204]	; 0xcc
   26d1c:	mov	r2, r8
   26d20:	add	r1, pc, r1
   26d24:	str	r9, [sp]
   26d28:	bl	13f7c <fprintf@plt>
   26d2c:	ldr	r0, [pc, #752]	; 27024 <__flatcc_fb_gen_c_json_parser@@Base+0x2e18>
   26d30:	ldr	r3, [r6, #204]	; 0xcc
   26d34:	mov	r2, #18
   26d38:	mov	r1, #1
   26d3c:	add	r0, pc, r0
   26d40:	bl	13f10 <fwrite@plt>
   26d44:	ldr	r4, [r7, #20]
   26d48:	cmp	r4, #0
   26d4c:	beq	26e20 <__flatcc_fb_gen_c_json_parser@@Base+0x2c14>
   26d50:	ldr	r8, [pc, #720]	; 27028 <__flatcc_fb_gen_c_json_parser@@Base+0x2e1c>
   26d54:	ldr	r7, [pc, #720]	; 2702c <__flatcc_fb_gen_c_json_parser@@Base+0x2e20>
   26d58:	ldr	r5, [pc, #720]	; 27030 <__flatcc_fb_gen_c_json_parser@@Base+0x2e24>
   26d5c:	add	r8, pc, r8
   26d60:	add	r7, pc, r7
   26d64:	add	r5, pc, r5
   26d68:	ldrh	r3, [r4, #56]	; 0x38
   26d6c:	cmp	r3, #5
   26d70:	beq	26e60 <__flatcc_fb_gen_c_json_parser@@Base+0x2c54>
   26d74:	cmp	r3, #6
   26d78:	beq	26e38 <__flatcc_fb_gen_c_json_parser@@Base+0x2c2c>
   26d7c:	cmp	r3, #4
   26d80:	beq	26df0 <__flatcc_fb_gen_c_json_parser@@Base+0x2be4>
   26d84:	ldr	r2, [pc, #520]	; 26f94 <__flatcc_fb_gen_c_json_parser@@Base+0x2d88>
   26d88:	ldr	r3, [pc, #676]	; 27034 <__flatcc_fb_gen_c_json_parser@@Base+0x2e28>
   26d8c:	ldr	r4, [pc, #676]	; 27038 <__flatcc_fb_gen_c_json_parser@@Base+0x2e2c>
   26d90:	ldr	r1, [sl, r2]
   26d94:	add	r3, pc, r3
   26d98:	str	r3, [sp]
   26d9c:	ldr	r0, [r1]
   26da0:	ldr	r1, [pc, #660]	; 2703c <__flatcc_fb_gen_c_json_parser@@Base+0x2e30>
   26da4:	add	r4, pc, r4
   26da8:	mov	r2, r4
   26dac:	mov	r3, #157	; 0x9d
   26db0:	add	r1, pc, r1
   26db4:	bl	13f7c <fprintf@plt>
   26db8:	ldr	r3, [pc, #640]	; 27040 <__flatcc_fb_gen_c_json_parser@@Base+0x2e34>
   26dbc:	ldr	r0, [pc, #640]	; 27044 <__flatcc_fb_gen_c_json_parser@@Base+0x2e38>
   26dc0:	add	r3, pc, r3
   26dc4:	mov	r1, r4
   26dc8:	add	r3, r3, #52	; 0x34
   26dcc:	mov	r2, #157	; 0x9d
   26dd0:	add	r0, pc, r0
   26dd4:	bl	14030 <__assert_fail@plt>
   26dd8:	ldr	r1, [pc, #616]	; 27048 <__flatcc_fb_gen_c_json_parser@@Base+0x2e3c>
   26ddc:	ldr	r2, [sp, #16]
   26de0:	add	r1, pc, r1
   26de4:	ldr	r0, [r6, #204]	; 0xcc
   26de8:	bl	13f7c <fprintf@plt>
   26dec:	b	26a24 <__flatcc_fb_gen_c_json_parser@@Base+0x2818>
   26df0:	ldr	ip, [r4, #4]
   26df4:	ldrd	r2, [r4, #48]	; 0x30
   26df8:	ldr	r0, [r6, #204]	; 0xcc
   26dfc:	ldr	r1, [ip, #4]
   26e00:	str	r1, [sp, #8]
   26e04:	ldr	ip, [ip]
   26e08:	stm	sp, {r1, ip}
   26e0c:	mov	r1, r5
   26e10:	bl	13f7c <fprintf@plt>
   26e14:	ldr	r4, [r4]
   26e18:	cmp	r4, #0
   26e1c:	bne	26d68 <__flatcc_fb_gen_c_json_parser@@Base+0x2b5c>
   26e20:	ldr	r1, [pc, #548]	; 2704c <__flatcc_fb_gen_c_json_parser@@Base+0x2e40>
   26e24:	ldr	r2, [sp, #20]
   26e28:	add	r1, pc, r1
   26e2c:	ldr	r0, [r6, #204]	; 0xcc
   26e30:	bl	13f7c <fprintf@plt>
   26e34:	b	26c90 <__flatcc_fb_gen_c_json_parser@@Base+0x2a84>
   26e38:	ldr	r1, [r4, #4]
   26e3c:	ldrb	r2, [r4, #48]	; 0x30
   26e40:	ldr	r0, [r6, #204]	; 0xcc
   26e44:	ldr	r3, [r1, #4]
   26e48:	str	r3, [sp, #4]
   26e4c:	ldr	r1, [r1]
   26e50:	str	r1, [sp]
   26e54:	mov	r1, r7
   26e58:	bl	13f7c <fprintf@plt>
   26e5c:	b	26e14 <__flatcc_fb_gen_c_json_parser@@Base+0x2c08>
   26e60:	ldr	ip, [r4, #4]
   26e64:	ldrd	r2, [r4, #48]	; 0x30
   26e68:	ldr	r0, [r6, #204]	; 0xcc
   26e6c:	ldr	r1, [ip, #4]
   26e70:	str	r1, [sp, #8]
   26e74:	ldr	ip, [ip]
   26e78:	stm	sp, {r1, ip}
   26e7c:	mov	r1, r8
   26e80:	bl	13f7c <fprintf@plt>
   26e84:	b	26e14 <__flatcc_fb_gen_c_json_parser@@Base+0x2c08>
   26e88:	ldr	r3, [sp, #20]
   26e8c:	ldr	r1, [pc, #444]	; 27050 <__flatcc_fb_gen_c_json_parser@@Base+0x2e44>
   26e90:	ldr	r0, [r6, #204]	; 0xcc
   26e94:	mov	r2, r4
   26e98:	str	r3, [sp]
   26e9c:	add	r1, pc, r1
   26ea0:	mov	r3, r5
   26ea4:	bl	13f7c <fprintf@plt>
   26ea8:	b	26a50 <__flatcc_fb_gen_c_json_parser@@Base+0x2844>
   26eac:	ldr	r3, [pc, #416]	; 27054 <__flatcc_fb_gen_c_json_parser@@Base+0x2e48>
   26eb0:	ldr	fp, [pc, #416]	; 27058 <__flatcc_fb_gen_c_json_parser@@Base+0x2e4c>
   26eb4:	add	r3, pc, r3
   26eb8:	str	r3, [sp, #16]
   26ebc:	add	fp, pc, fp
   26ec0:	ldr	r4, [pc, #404]	; 2705c <__flatcc_fb_gen_c_json_parser@@Base+0x2e50>
   26ec4:	mov	r5, #0
   26ec8:	b	2698c <__flatcc_fb_gen_c_json_parser@@Base+0x2780>
   26ecc:	ldr	r3, [pc, #396]	; 27060 <__flatcc_fb_gen_c_json_parser@@Base+0x2e54>
   26ed0:	ldr	fp, [pc, #396]	; 27064 <__flatcc_fb_gen_c_json_parser@@Base+0x2e58>
   26ed4:	add	r3, pc, r3
   26ed8:	str	r3, [sp, #16]
   26edc:	add	fp, pc, fp
   26ee0:	mov	r4, #255	; 0xff
   26ee4:	mov	r5, #0
   26ee8:	b	2698c <__flatcc_fb_gen_c_json_parser@@Base+0x2780>
   26eec:	ldr	r3, [pc, #372]	; 27068 <__flatcc_fb_gen_c_json_parser@@Base+0x2e5c>
   26ef0:	ldr	fp, [pc, #372]	; 2706c <__flatcc_fb_gen_c_json_parser@@Base+0x2e60>
   26ef4:	add	r3, pc, r3
   26ef8:	str	r3, [sp, #16]
   26efc:	add	fp, pc, fp
   26f00:	mvn	r4, #0
   26f04:	mov	r5, #0
   26f08:	b	2698c <__flatcc_fb_gen_c_json_parser@@Base+0x2780>
   26f0c:	ldr	r2, [pc, #128]	; 26f94 <__flatcc_fb_gen_c_json_parser@@Base+0x2d88>
   26f10:	ldr	r3, [pc, #344]	; 27070 <__flatcc_fb_gen_c_json_parser@@Base+0x2e64>
   26f14:	ldr	r4, [pc, #344]	; 27074 <__flatcc_fb_gen_c_json_parser@@Base+0x2e68>
   26f18:	ldr	r1, [sl, r2]
   26f1c:	add	r3, pc, r3
   26f20:	str	r3, [sp]
   26f24:	ldr	r0, [r1]
   26f28:	ldr	r1, [pc, #328]	; 27078 <__flatcc_fb_gen_c_json_parser@@Base+0x2e6c>
   26f2c:	add	r4, pc, r4
   26f30:	mov	r2, r4
   26f34:	mov	r3, #96	; 0x60
   26f38:	add	r1, pc, r1
   26f3c:	bl	13f7c <fprintf@plt>
   26f40:	ldr	r3, [pc, #308]	; 2707c <__flatcc_fb_gen_c_json_parser@@Base+0x2e70>
   26f44:	ldr	r0, [pc, #308]	; 27080 <__flatcc_fb_gen_c_json_parser@@Base+0x2e74>
   26f48:	add	r3, pc, r3
   26f4c:	mov	r1, r4
   26f50:	add	r3, r3, #32
   26f54:	mov	r2, #96	; 0x60
   26f58:	add	r0, pc, r0
   26f5c:	bl	14030 <__assert_fail@plt>
   26f60:	andeq	r3, r4, r4, lsl r7
   26f64:	andeq	r8, r1, ip, asr #31
   26f68:			; <UNDEFINED> instruction: 0x00022db8
   26f6c:	andeq	r9, r1, ip, asr #8
   26f70:	ldrdeq	lr, [r2], -r8
   26f74:	andeq	r8, r1, ip, asr pc
   26f78:	strdeq	lr, [r2], -r8
   26f7c:	andeq	lr, r2, ip, lsr r1
   26f80:	andeq	lr, r2, r4, asr #2
   26f84:			; <UNDEFINED> instruction: 0x0002e1b4
   26f88:	ldrdeq	lr, [r2], -r0
   26f8c:	andeq	lr, r2, ip, asr #3
   26f90:	andeq	lr, r2, r8, asr #3
   26f94:	muleq	r0, ip, r0
   26f98:	andeq	lr, r2, r8, ror #3
   26f9c:	andeq	sp, r2, r8, asr sp
   26fa0:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   26fa4:	andeq	sp, r2, ip, asr fp
   26fa8:	andeq	r1, r2, r0, ror r3
   26fac:	andeq	r9, r1, r0, ror r2
   26fb0:	ldrdeq	r8, [r1], -ip
   26fb4:	ldrdeq	r2, [r2], -r4
   26fb8:	andeq	r9, r1, r8, asr #4
   26fbc:			; <UNDEFINED> instruction: 0x00018db0
   26fc0:			; <UNDEFINED> instruction: 0x00022bb4
   26fc4:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   26fc8:	muleq	r2, ip, fp
   26fcc:	ldrdeq	r8, [r1], -r4
   26fd0:	andeq	r2, r2, r0, lsl #23
   26fd4:	andeq	r9, r1, r0, lsl r2
   26fd8:	andeq	r8, r1, ip, lsl #27
   26fdc:	andeq	r2, r2, ip, asr fp
   26fe0:	strdeq	r9, [r1], -r8
   26fe4:	andeq	r8, r1, r4, ror sp
   26fe8:	andeq	r2, r2, ip, lsr fp
   26fec:	andeq	r9, r1, r0, ror #3
   26ff0:	andeq	r8, r1, ip, asr sp
   26ff4:	andeq	r2, r2, ip, lsl fp
   26ff8:	andeq	r9, r1, r8, asr #3
   26ffc:	andeq	r8, r1, r4, asr #26
   27000:	strdeq	r2, [r2], -ip
   27004:	andeq	r9, r1, r8, lsl #3
   27008:	strdeq	r8, [r1], -ip
   2700c:	ldrdeq	r2, [r2], -ip
   27010:	andeq	r1, r3, r0, lsr #9
   27014:	andeq	r8, r1, r4, ror #25
   27018:	andeq	sp, r2, ip, lsl #31
   2701c:	andeq	sl, r2, r4, lsl #24
   27020:	andeq	lr, r2, r4, asr #1
   27024:	strdeq	lr, [r2], -r0
   27028:	andeq	sp, r2, r0, lsl #31
   2702c:	andeq	lr, r2, r4
   27030:			; <UNDEFINED> instruction: 0x0002dfbc
   27034:	andeq	sp, r2, ip, lsl #30
   27038:	andeq	sp, r2, ip, ror sl
   2703c:			; <UNDEFINED> instruction: 0x00018cb4
   27040:	andeq	sp, r2, r0, lsl #17
   27044:	muleq	r2, r4, r0
   27048:	andeq	sp, r2, r8, lsl #27
   2704c:	andeq	sp, r2, r0, lsl #31
   27050:	andeq	sp, r2, r4, lsl sp
   27054:	andeq	r8, r1, r4, asr #20
   27058:	andeq	sp, r2, ip, lsl #25
   2705c:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   27060:	andeq	r8, r1, r0, lsr sl
   27064:	andeq	sp, r2, ip, ror #24
   27068:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   2706c:	andeq	sp, r2, r0, asr ip
   27070:	andeq	r8, r1, r4, asr fp
   27074:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   27078:	andeq	r8, r1, ip, lsr #22
   2707c:	strdeq	sp, [r2], -r8
   27080:	andeq	r0, r2, ip, lsl #30
   27084:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27088:	sub	sp, sp, #524	; 0x20c
   2708c:	add	r4, sp, #80	; 0x50
   27090:	mov	sl, r1
   27094:	add	r5, sp, #300	; 0x12c
   27098:	mov	r2, #220	; 0xdc
   2709c:	mov	r1, #0
   270a0:	mov	r9, r0
   270a4:	mov	r0, r4
   270a8:	str	r4, [sp, #48]	; 0x30
   270ac:	str	r5, [sp, #40]	; 0x28
   270b0:	bl	13f94 <memset@plt>
   270b4:	mov	r0, r5
   270b8:	mov	r2, #220	; 0xdc
   270bc:	mov	r1, #0
   270c0:	bl	13f94 <memset@plt>
   270c4:	mov	r2, r4
   270c8:	mov	r1, sl
   270cc:	ldr	r0, [sl, #12]
   270d0:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   270d4:	ldr	r4, [sl, #96]	; 0x60
   270d8:	mov	r1, #4
   270dc:	mov	r0, r4
   270e0:	ldr	r5, [sl, #100]	; 0x64
   270e4:	bl	13e98 <calloc@plt>
   270e8:	orrs	r3, r4, r5
   270ec:	movne	r3, #1
   270f0:	moveq	r3, #0
   270f4:	ldr	r2, [pc, #3280]	; 27dcc <__flatcc_fb_gen_c_json_parser@@Base+0x3bc0>
   270f8:	add	r2, pc, r2
   270fc:	str	r2, [sp, #52]	; 0x34
   27100:	cmp	r0, #0
   27104:	movne	r3, #0
   27108:	andeq	r3, r3, #1
   2710c:	cmp	r3, #0
   27110:	bne	27d74 <__flatcc_fb_gen_c_json_parser@@Base+0x3b68>
   27114:	ldr	r3, [sl, #20]
   27118:	mov	r8, r0
   2711c:	cmp	r3, #0
   27120:	beq	27138 <__flatcc_fb_gen_c_json_parser@@Base+0x2f2c>
   27124:	ldr	r2, [r3, #96]	; 0x60
   27128:	str	r3, [r8, r2, lsl #2]
   2712c:	ldr	r3, [r3]
   27130:	cmp	r3, #0
   27134:	bne	27124 <__flatcc_fb_gen_c_json_parser@@Base+0x2f18>
   27138:	ldr	r1, [pc, #3216]	; 27dd0 <__flatcc_fb_gen_c_json_parser@@Base+0x3bc4>
   2713c:	ldr	r2, [sp, #48]	; 0x30
   27140:	add	r1, pc, r1
   27144:	ldr	r0, [r9]
   27148:	bl	13f7c <fprintf@plt>
   2714c:	ldrd	r0, [sl, #96]	; 0x60
   27150:	orrs	r3, r0, r1
   27154:	beq	273f8 <__flatcc_fb_gen_c_json_parser@@Base+0x31ec>
   27158:	ldr	r3, [pc, #3188]	; 27dd4 <__flatcc_fb_gen_c_json_parser@@Base+0x3bc8>
   2715c:	ldr	fp, [pc, #3188]	; 27dd8 <__flatcc_fb_gen_c_json_parser@@Base+0x3bcc>
   27160:	add	r3, pc, r3
   27164:	str	r3, [sp, #60]	; 0x3c
   27168:	ldr	r3, [pc, #3180]	; 27ddc <__flatcc_fb_gen_c_json_parser@@Base+0x3bd0>
   2716c:	add	fp, pc, fp
   27170:	add	r3, pc, r3
   27174:	str	r3, [sp, #64]	; 0x40
   27178:	ldr	r3, [pc, #3168]	; 27de0 <__flatcc_fb_gen_c_json_parser@@Base+0x3bd4>
   2717c:	sub	r5, r8, #4
   27180:	add	r3, pc, r3
   27184:	str	r3, [sp, #68]	; 0x44
   27188:	ldr	r3, [pc, #3156]	; 27de4 <__flatcc_fb_gen_c_json_parser@@Base+0x3bd8>
   2718c:	str	r8, [sp, #56]	; 0x38
   27190:	add	r3, pc, r3
   27194:	str	r3, [sp, #72]	; 0x48
   27198:	ldr	r3, [pc, #3144]	; 27de8 <__flatcc_fb_gen_c_json_parser@@Base+0x3bdc>
   2719c:	ldr	r8, [sp, #40]	; 0x28
   271a0:	add	r3, pc, r3
   271a4:	str	r3, [sp, #76]	; 0x4c
   271a8:	mov	r6, #0
   271ac:	mov	r7, #0
   271b0:	str	sl, [sp, #44]	; 0x2c
   271b4:	str	fp, [sp, #40]	; 0x28
   271b8:	b	271d0 <__flatcc_fb_gen_c_json_parser@@Base+0x2fc4>
   271bc:	adds	r6, r6, #1
   271c0:	adc	r7, r7, #0
   271c4:	cmp	r7, r1
   271c8:	cmpeq	r6, r0
   271cc:	bcs	273f4 <__flatcc_fb_gen_c_json_parser@@Base+0x31e8>
   271d0:	ldr	r4, [r5, #4]!
   271d4:	cmp	r4, #0
   271d8:	beq	271bc <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   271dc:	ldrh	r3, [r4, #72]	; 0x48
   271e0:	tst	r3, #4
   271e4:	bne	271bc <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   271e8:	ldr	r3, [r9]
   271ec:	mov	r2, #5
   271f0:	mov	r1, #1
   271f4:	ldr	r0, [sp, #40]	; 0x28
   271f8:	bl	13f10 <fwrite@plt>
   271fc:	ldrh	r3, [r4, #24]
   27200:	sub	r3, r3, #7
   27204:	cmp	r3, #8
   27208:	addls	pc, pc, r3, lsl #2
   2720c:	b	273e8 <__flatcc_fb_gen_c_json_parser@@Base+0x31dc>
   27210:	b	2734c <__flatcc_fb_gen_c_json_parser@@Base+0x3140>
   27214:	b	2730c <__flatcc_fb_gen_c_json_parser@@Base+0x3100>
   27218:	b	272d8 <__flatcc_fb_gen_c_json_parser@@Base+0x30cc>
   2721c:	b	272a4 <__flatcc_fb_gen_c_json_parser@@Base+0x3098>
   27220:	b	273e8 <__flatcc_fb_gen_c_json_parser@@Base+0x31dc>
   27224:	b	273e8 <__flatcc_fb_gen_c_json_parser@@Base+0x31dc>
   27228:	b	273e8 <__flatcc_fb_gen_c_json_parser@@Base+0x31dc>
   2722c:	b	2726c <__flatcc_fb_gen_c_json_parser@@Base+0x3060>
   27230:	b	27234 <__flatcc_fb_gen_c_json_parser@@Base+0x3028>
   27234:	ldr	r1, [r4, #16]
   27238:	mov	r2, r8
   2723c:	ldr	r0, [r1, #12]
   27240:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   27244:	ldr	r2, [r4, #16]
   27248:	ldrh	r3, [r2, #8]
   2724c:	cmp	r3, #4
   27250:	addls	pc, pc, r3, lsl #2
   27254:	b	276a0 <__flatcc_fb_gen_c_json_parser@@Base+0x3494>
   27258:	b	275d4 <__flatcc_fb_gen_c_json_parser@@Base+0x33c8>
   2725c:	b	273b8 <__flatcc_fb_gen_c_json_parser@@Base+0x31ac>
   27260:	b	276a0 <__flatcc_fb_gen_c_json_parser@@Base+0x3494>
   27264:	b	2760c <__flatcc_fb_gen_c_json_parser@@Base+0x3400>
   27268:	b	2752c <__flatcc_fb_gen_c_json_parser@@Base+0x3320>
   2726c:	ldr	r1, [r4, #16]
   27270:	mov	r2, r8
   27274:	ldr	r0, [r1, #12]
   27278:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   2727c:	ldr	r2, [r4, #16]
   27280:	ldrh	r3, [r2, #8]
   27284:	cmp	r3, #4
   27288:	addls	pc, pc, r3, lsl #2
   2728c:	b	27648 <__flatcc_fb_gen_c_json_parser@@Base+0x343c>
   27290:	b	27564 <__flatcc_fb_gen_c_json_parser@@Base+0x3358>
   27294:	b	2759c <__flatcc_fb_gen_c_json_parser@@Base+0x3390>
   27298:	b	27648 <__flatcc_fb_gen_c_json_parser@@Base+0x343c>
   2729c:	b	274ec <__flatcc_fb_gen_c_json_parser@@Base+0x32e0>
   272a0:	b	274b0 <__flatcc_fb_gen_c_json_parser@@Base+0x32a4>
   272a4:	ldr	ip, [r4, #4]
   272a8:	ldrd	r2, [r4, #96]	; 0x60
   272ac:	ldr	r0, [r9]
   272b0:	ldr	r1, [ip, #4]
   272b4:	str	r1, [sp, #8]
   272b8:	ldr	ip, [ip]
   272bc:	stm	sp, {r1, ip}
   272c0:	ldr	r1, [pc, #2852]	; 27dec <__flatcc_fb_gen_c_json_parser@@Base+0x3be0>
   272c4:	add	r1, pc, r1
   272c8:	bl	13f7c <fprintf@plt>
   272cc:	ldr	r3, [sp, #44]	; 0x2c
   272d0:	ldrd	r0, [r3, #96]	; 0x60
   272d4:	b	271bc <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   272d8:	ldr	ip, [r4, #4]
   272dc:	ldrd	r2, [r4, #96]	; 0x60
   272e0:	ldr	r0, [r9]
   272e4:	ldr	r1, [ip, #4]
   272e8:	str	r1, [sp, #8]
   272ec:	ldr	ip, [ip]
   272f0:	stm	sp, {r1, ip}
   272f4:	ldr	r1, [pc, #2804]	; 27df0 <__flatcc_fb_gen_c_json_parser@@Base+0x3be4>
   272f8:	add	r1, pc, r1
   272fc:	bl	13f7c <fprintf@plt>
   27300:	ldr	r3, [sp, #44]	; 0x2c
   27304:	ldrd	r0, [r3, #96]	; 0x60
   27308:	b	271bc <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   2730c:	ldr	r3, [r4, #16]
   27310:	sub	r3, r3, #1
   27314:	cmp	r3, #10
   27318:	addls	pc, pc, r3, lsl #2
   2731c:	b	27910 <__flatcc_fb_gen_c_json_parser@@Base+0x3704>
   27320:	b	2784c <__flatcc_fb_gen_c_json_parser@@Base+0x3640>
   27324:	b	27870 <__flatcc_fb_gen_c_json_parser@@Base+0x3664>
   27328:	b	27738 <__flatcc_fb_gen_c_json_parser@@Base+0x352c>
   2732c:	b	278a0 <__flatcc_fb_gen_c_json_parser@@Base+0x3694>
   27330:	b	278ac <__flatcc_fb_gen_c_json_parser@@Base+0x36a0>
   27334:	b	27858 <__flatcc_fb_gen_c_json_parser@@Base+0x364c>
   27338:	b	27864 <__flatcc_fb_gen_c_json_parser@@Base+0x3658>
   2733c:	b	27888 <__flatcc_fb_gen_c_json_parser@@Base+0x367c>
   27340:	b	27894 <__flatcc_fb_gen_c_json_parser@@Base+0x3688>
   27344:	b	2787c <__flatcc_fb_gen_c_json_parser@@Base+0x3670>
   27348:	b	27840 <__flatcc_fb_gen_c_json_parser@@Base+0x3634>
   2734c:	ldrh	r3, [r4, #72]	; 0x48
   27350:	tst	r3, #3072	; 0xc00
   27354:	bne	2745c <__flatcc_fb_gen_c_json_parser@@Base+0x3250>
   27358:	ldr	r1, [r4, #104]	; 0x68
   2735c:	cmp	r1, #0
   27360:	beq	276f8 <__flatcc_fb_gen_c_json_parser@@Base+0x34ec>
   27364:	ldr	r0, [r1, #12]
   27368:	mov	r2, r8
   2736c:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   27370:	ldr	r3, [r4, #104]	; 0x68
   27374:	ldr	ip, [r4, #4]
   27378:	ldr	r0, [r9]
   2737c:	ldrh	r3, [r3, #8]
   27380:	ldr	r1, [ip, #4]
   27384:	cmp	r3, #0
   27388:	ldrd	r2, [r4, #96]	; 0x60
   2738c:	str	r8, [sp, #12]
   27390:	str	r1, [sp, #8]
   27394:	ldr	ip, [ip]
   27398:	stm	sp, {r1, ip}
   2739c:	bne	27444 <__flatcc_fb_gen_c_json_parser@@Base+0x3238>
   273a0:	ldr	r1, [pc, #2636]	; 27df4 <__flatcc_fb_gen_c_json_parser@@Base+0x3be8>
   273a4:	add	r1, pc, r1
   273a8:	bl	13f7c <fprintf@plt>
   273ac:	ldr	r3, [sp, #44]	; 0x2c
   273b0:	ldrd	r0, [r3, #96]	; 0x60
   273b4:	b	271bc <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   273b8:	ldr	ip, [r4, #4]
   273bc:	ldrd	r2, [r4, #96]	; 0x60
   273c0:	ldr	r0, [r9]
   273c4:	ldr	r1, [ip, #4]
   273c8:	str	r8, [sp, #24]
   273cc:	ldrd	sl, [r4, #88]	; 0x58
   273d0:	str	r1, [sp, #8]
   273d4:	strd	sl, [sp, #16]
   273d8:	ldr	ip, [ip]
   273dc:	stm	sp, {r1, ip}
   273e0:	ldr	r1, [sp, #64]	; 0x40
   273e4:	bl	13f7c <fprintf@plt>
   273e8:	ldr	r3, [sp, #44]	; 0x2c
   273ec:	ldrd	r0, [r3, #96]	; 0x60
   273f0:	b	271bc <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   273f4:	ldr	r8, [sp, #56]	; 0x38
   273f8:	ldr	r0, [pc, #2552]	; 27df8 <__flatcc_fb_gen_c_json_parser@@Base+0x3bec>
   273fc:	ldr	r3, [r9]
   27400:	mov	r2, #4
   27404:	mov	r1, #1
   27408:	add	r0, pc, r0
   2740c:	bl	13f10 <fwrite@plt>
   27410:	ldr	r3, [sp, #48]	; 0x30
   27414:	ldr	r1, [pc, #2528]	; 27dfc <__flatcc_fb_gen_c_json_parser@@Base+0x3bf0>
   27418:	mov	r2, r3
   2741c:	ldr	r0, [r9]
   27420:	add	r1, pc, r1
   27424:	bl	13f7c <fprintf@plt>
   27428:	cmp	r8, #0
   2742c:	beq	27438 <__flatcc_fb_gen_c_json_parser@@Base+0x322c>
   27430:	mov	r0, r8
   27434:	bl	13ec8 <free@plt>
   27438:	mov	r0, #0
   2743c:	add	sp, sp, #524	; 0x20c
   27440:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27444:	ldr	r1, [pc, #2484]	; 27e00 <__flatcc_fb_gen_c_json_parser@@Base+0x3bf4>
   27448:	add	r1, pc, r1
   2744c:	bl	13f7c <fprintf@plt>
   27450:	ldr	r3, [sp, #44]	; 0x2c
   27454:	ldrd	r0, [r3, #96]	; 0x60
   27458:	b	271bc <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   2745c:	ldr	r2, [r4, #4]
   27460:	ldrd	r0, [r4, #96]	; 0x60
   27464:	lsr	r3, r3, #10
   27468:	ldr	ip, [r2, #4]
   2746c:	eor	r3, r3, #1
   27470:	and	r3, r3, #1
   27474:	str	r3, [sp, #12]
   27478:	str	ip, [sp, #8]
   2747c:	mov	r3, r1
   27480:	ldr	lr, [r9]
   27484:	ldr	r4, [r2]
   27488:	ldr	r1, [pc, #2420]	; 27e04 <__flatcc_fb_gen_c_json_parser@@Base+0x3bf8>
   2748c:	mov	r2, r0
   27490:	add	r1, pc, r1
   27494:	str	r4, [sp, #4]
   27498:	str	ip, [sp]
   2749c:	mov	r0, lr
   274a0:	bl	13f7c <fprintf@plt>
   274a4:	ldr	r3, [sp, #44]	; 0x2c
   274a8:	ldrd	r0, [r3, #96]	; 0x60
   274ac:	b	271bc <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   274b0:	ldr	ip, [r4, #4]
   274b4:	ldrd	r2, [r4, #96]	; 0x60
   274b8:	ldr	r0, [r9]
   274bc:	ldr	r1, [ip, #4]
   274c0:	str	r8, [sp, #16]
   274c4:	str	r1, [sp, #8]
   274c8:	str	r8, [sp, #12]
   274cc:	ldr	ip, [ip]
   274d0:	stm	sp, {r1, ip}
   274d4:	ldr	r1, [pc, #2348]	; 27e08 <__flatcc_fb_gen_c_json_parser@@Base+0x3bfc>
   274d8:	add	r1, pc, r1
   274dc:	bl	13f7c <fprintf@plt>
   274e0:	ldr	r3, [sp, #44]	; 0x2c
   274e4:	ldrd	r0, [r3, #96]	; 0x60
   274e8:	b	271bc <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   274ec:	ldr	r3, [r2, #40]	; 0x28
   274f0:	sub	r3, r3, #1
   274f4:	cmp	r3, #10
   274f8:	addls	pc, pc, r3, lsl #2
   274fc:	b	27cc4 <__flatcc_fb_gen_c_json_parser@@Base+0x3ab8>
   27500:	b	27b04 <__flatcc_fb_gen_c_json_parser@@Base+0x38f8>
   27504:	b	27af8 <__flatcc_fb_gen_c_json_parser@@Base+0x38ec>
   27508:	b	27ad4 <__flatcc_fb_gen_c_json_parser@@Base+0x38c8>
   2750c:	b	27ac8 <__flatcc_fb_gen_c_json_parser@@Base+0x38bc>
   27510:	b	27abc <__flatcc_fb_gen_c_json_parser@@Base+0x38b0>
   27514:	b	27ab0 <__flatcc_fb_gen_c_json_parser@@Base+0x38a4>
   27518:	b	27aec <__flatcc_fb_gen_c_json_parser@@Base+0x38e0>
   2751c:	b	27ae0 <__flatcc_fb_gen_c_json_parser@@Base+0x38d4>
   27520:	b	27aa4 <__flatcc_fb_gen_c_json_parser@@Base+0x3898>
   27524:	b	27a98 <__flatcc_fb_gen_c_json_parser@@Base+0x388c>
   27528:	b	27a30 <__flatcc_fb_gen_c_json_parser@@Base+0x3824>
   2752c:	ldr	ip, [r4, #4]
   27530:	ldrd	r2, [r4, #96]	; 0x60
   27534:	ldr	r0, [r9]
   27538:	ldr	r1, [ip, #4]
   2753c:	str	r8, [sp, #16]
   27540:	str	r1, [sp, #8]
   27544:	str	r8, [sp, #12]
   27548:	ldr	ip, [ip]
   2754c:	stm	sp, {r1, ip}
   27550:	ldr	r1, [sp, #60]	; 0x3c
   27554:	bl	13f7c <fprintf@plt>
   27558:	ldr	r3, [sp, #44]	; 0x2c
   2755c:	ldrd	r0, [r3, #96]	; 0x60
   27560:	b	271bc <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   27564:	ldr	ip, [r4, #4]
   27568:	ldrd	r2, [r4, #96]	; 0x60
   2756c:	ldr	r0, [r9]
   27570:	ldr	r1, [ip, #4]
   27574:	str	r8, [sp, #12]
   27578:	str	r1, [sp, #8]
   2757c:	ldr	ip, [ip]
   27580:	stm	sp, {r1, ip}
   27584:	ldr	r1, [pc, #2176]	; 27e0c <__flatcc_fb_gen_c_json_parser@@Base+0x3c00>
   27588:	add	r1, pc, r1
   2758c:	bl	13f7c <fprintf@plt>
   27590:	ldr	r3, [sp, #44]	; 0x2c
   27594:	ldrd	r0, [r3, #96]	; 0x60
   27598:	b	271bc <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   2759c:	ldr	ip, [r4, #4]
   275a0:	ldrd	r2, [r4, #96]	; 0x60
   275a4:	ldr	r0, [r9]
   275a8:	ldr	r1, [ip, #4]
   275ac:	str	r8, [sp, #12]
   275b0:	str	r1, [sp, #8]
   275b4:	ldr	ip, [ip]
   275b8:	stm	sp, {r1, ip}
   275bc:	ldr	r1, [pc, #2124]	; 27e10 <__flatcc_fb_gen_c_json_parser@@Base+0x3c04>
   275c0:	add	r1, pc, r1
   275c4:	bl	13f7c <fprintf@plt>
   275c8:	ldr	r3, [sp, #44]	; 0x2c
   275cc:	ldrd	r0, [r3, #96]	; 0x60
   275d0:	b	271bc <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   275d4:	ldr	ip, [r4, #4]
   275d8:	ldrd	r2, [r4, #96]	; 0x60
   275dc:	ldr	r0, [r9]
   275e0:	ldr	r1, [ip, #4]
   275e4:	str	r8, [sp, #12]
   275e8:	str	r1, [sp, #8]
   275ec:	ldr	ip, [ip]
   275f0:	stm	sp, {r1, ip}
   275f4:	ldr	r1, [pc, #2072]	; 27e14 <__flatcc_fb_gen_c_json_parser@@Base+0x3c08>
   275f8:	add	r1, pc, r1
   275fc:	bl	13f7c <fprintf@plt>
   27600:	ldr	r3, [sp, #44]	; 0x2c
   27604:	ldrd	r0, [r3, #96]	; 0x60
   27608:	b	271bc <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   2760c:	sub	r2, r2, #1
   27610:	cmp	r2, #10
   27614:	addls	pc, pc, r2, lsl #2
   27618:	b	27c6c <__flatcc_fb_gen_c_json_parser@@Base+0x3a60>
   2761c:	b	27a28 <__flatcc_fb_gen_c_json_parser@@Base+0x381c>
   27620:	b	27a1c <__flatcc_fb_gen_c_json_parser@@Base+0x3810>
   27624:	b	27a14 <__flatcc_fb_gen_c_json_parser@@Base+0x3808>
   27628:	b	27a08 <__flatcc_fb_gen_c_json_parser@@Base+0x37fc>
   2762c:	b	279fc <__flatcc_fb_gen_c_json_parser@@Base+0x37f0>
   27630:	b	279f0 <__flatcc_fb_gen_c_json_parser@@Base+0x37e4>
   27634:	b	279e4 <__flatcc_fb_gen_c_json_parser@@Base+0x37d8>
   27638:	b	279d8 <__flatcc_fb_gen_c_json_parser@@Base+0x37cc>
   2763c:	b	279cc <__flatcc_fb_gen_c_json_parser@@Base+0x37c0>
   27640:	b	279c0 <__flatcc_fb_gen_c_json_parser@@Base+0x37b4>
   27644:	b	27968 <__flatcc_fb_gen_c_json_parser@@Base+0x375c>
   27648:	ldr	r2, [pc, #1992]	; 27e18 <__flatcc_fb_gen_c_json_parser@@Base+0x3c0c>
   2764c:	ldr	r1, [sp, #52]	; 0x34
   27650:	ldr	r3, [pc, #1988]	; 27e1c <__flatcc_fb_gen_c_json_parser@@Base+0x3c10>
   27654:	ldr	r4, [pc, #1988]	; 27e20 <__flatcc_fb_gen_c_json_parser@@Base+0x3c14>
   27658:	ldr	r1, [r1, r2]
   2765c:	add	r3, pc, r3
   27660:	str	r3, [sp]
   27664:	ldr	r0, [r1]
   27668:	ldr	r1, [pc, #1972]	; 27e24 <__flatcc_fb_gen_c_json_parser@@Base+0x3c18>
   2766c:	add	r4, pc, r4
   27670:	mov	r2, r4
   27674:	mov	r3, #504	; 0x1f8
   27678:	add	r1, pc, r1
   2767c:	bl	13f7c <fprintf@plt>
   27680:	ldr	r3, [pc, #1952]	; 27e28 <__flatcc_fb_gen_c_json_parser@@Base+0x3c1c>
   27684:	ldr	r0, [pc, #1952]	; 27e2c <__flatcc_fb_gen_c_json_parser@@Base+0x3c20>
   27688:	add	r3, pc, r3
   2768c:	mov	r1, r4
   27690:	add	r3, r3, #76	; 0x4c
   27694:	mov	r2, #504	; 0x1f8
   27698:	add	r0, pc, r0
   2769c:	bl	14030 <__assert_fail@plt>
   276a0:	ldr	r2, [pc, #1904]	; 27e18 <__flatcc_fb_gen_c_json_parser@@Base+0x3c0c>
   276a4:	ldr	r1, [sp, #52]	; 0x34
   276a8:	ldr	r3, [pc, #1920]	; 27e30 <__flatcc_fb_gen_c_json_parser@@Base+0x3c24>
   276ac:	ldr	r4, [pc, #1920]	; 27e34 <__flatcc_fb_gen_c_json_parser@@Base+0x3c28>
   276b0:	ldr	r1, [r1, r2]
   276b4:	add	r3, pc, r3
   276b8:	str	r3, [sp]
   276bc:	ldr	r0, [r1]
   276c0:	ldr	r1, [pc, #1904]	; 27e38 <__flatcc_fb_gen_c_json_parser@@Base+0x3c2c>
   276c4:	add	r4, pc, r4
   276c8:	mov	r2, r4
   276cc:	ldr	r3, [pc, #1896]	; 27e3c <__flatcc_fb_gen_c_json_parser@@Base+0x3c30>
   276d0:	add	r1, pc, r1
   276d4:	bl	13f7c <fprintf@plt>
   276d8:	ldr	r3, [pc, #1888]	; 27e40 <__flatcc_fb_gen_c_json_parser@@Base+0x3c34>
   276dc:	ldr	r0, [pc, #1888]	; 27e44 <__flatcc_fb_gen_c_json_parser@@Base+0x3c38>
   276e0:	add	r3, pc, r3
   276e4:	mov	r1, r4
   276e8:	add	r3, r3, #76	; 0x4c
   276ec:	ldr	r2, [pc, #1864]	; 27e3c <__flatcc_fb_gen_c_json_parser@@Base+0x3c30>
   276f0:	add	r0, pc, r0
   276f4:	bl	14030 <__assert_fail@plt>
   276f8:	ldr	r3, [r4, #16]
   276fc:	sub	r3, r3, #1
   27700:	cmp	r3, #10
   27704:	addls	pc, pc, r3, lsl #2
   27708:	b	27d1c <__flatcc_fb_gen_c_json_parser@@Base+0x3b10>
   2770c:	b	27bc0 <__flatcc_fb_gen_c_json_parser@@Base+0x39b4>
   27710:	b	27bb4 <__flatcc_fb_gen_c_json_parser@@Base+0x39a8>
   27714:	b	27ba8 <__flatcc_fb_gen_c_json_parser@@Base+0x399c>
   27718:	b	27b9c <__flatcc_fb_gen_c_json_parser@@Base+0x3990>
   2771c:	b	27b90 <__flatcc_fb_gen_c_json_parser@@Base+0x3984>
   27720:	b	27b84 <__flatcc_fb_gen_c_json_parser@@Base+0x3978>
   27724:	b	27b78 <__flatcc_fb_gen_c_json_parser@@Base+0x396c>
   27728:	b	27b6c <__flatcc_fb_gen_c_json_parser@@Base+0x3960>
   2772c:	b	27b60 <__flatcc_fb_gen_c_json_parser@@Base+0x3954>
   27730:	b	27b54 <__flatcc_fb_gen_c_json_parser@@Base+0x3948>
   27734:	b	27b10 <__flatcc_fb_gen_c_json_parser@@Base+0x3904>
   27738:	ldr	r2, [pc, #1800]	; 27e48 <__flatcc_fb_gen_c_json_parser@@Base+0x3c3c>
   2773c:	add	r2, pc, r2
   27740:	ldrh	r3, [r4, #56]	; 0x38
   27744:	sub	r3, r3, #3
   27748:	cmp	r3, #3
   2774c:	addls	pc, pc, r3, lsl #2
   27750:	b	278b8 <__flatcc_fb_gen_c_json_parser@@Base+0x36ac>
   27754:	b	277fc <__flatcc_fb_gen_c_json_parser@@Base+0x35f0>
   27758:	b	277b0 <__flatcc_fb_gen_c_json_parser@@Base+0x35a4>
   2775c:	b	27764 <__flatcc_fb_gen_c_json_parser@@Base+0x3558>
   27760:	b	27764 <__flatcc_fb_gen_c_json_parser@@Base+0x3558>
   27764:	ldr	ip, [r4, #4]
   27768:	ldrd	r0, [r4, #48]	; 0x30
   2776c:	ldr	r3, [ip, #4]
   27770:	strd	r0, [sp, #24]
   27774:	str	r3, [sp, #16]
   27778:	ldr	r1, [ip]
   2777c:	str	r3, [sp, #8]
   27780:	str	r1, [sp, #12]
   27784:	ldrd	r0, [r4, #96]	; 0x60
   27788:	mov	sl, r0
   2778c:	mov	fp, r1
   27790:	ldr	r1, [pc, #1716]	; 27e4c <__flatcc_fb_gen_c_json_parser@@Base+0x3c40>
   27794:	ldr	r0, [r9]
   27798:	add	r1, pc, r1
   2779c:	strd	sl, [sp]
   277a0:	bl	13f7c <fprintf@plt>
   277a4:	ldr	r3, [sp, #44]	; 0x2c
   277a8:	ldrd	r0, [r3, #96]	; 0x60
   277ac:	b	271bc <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   277b0:	ldr	ip, [r4, #4]
   277b4:	ldrd	r0, [r4, #48]	; 0x30
   277b8:	ldr	r3, [ip, #4]
   277bc:	strd	r0, [sp, #24]
   277c0:	str	r3, [sp, #16]
   277c4:	ldr	r1, [ip]
   277c8:	str	r3, [sp, #8]
   277cc:	str	r1, [sp, #12]
   277d0:	ldrd	r0, [r4, #96]	; 0x60
   277d4:	mov	sl, r0
   277d8:	mov	fp, r1
   277dc:	ldr	r1, [pc, #1644]	; 27e50 <__flatcc_fb_gen_c_json_parser@@Base+0x3c44>
   277e0:	ldr	r0, [r9]
   277e4:	add	r1, pc, r1
   277e8:	strd	sl, [sp]
   277ec:	bl	13f7c <fprintf@plt>
   277f0:	ldr	r3, [sp, #44]	; 0x2c
   277f4:	ldrd	r0, [r3, #96]	; 0x60
   277f8:	b	271bc <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   277fc:	vldr	d7, [r4, #48]	; 0x30
   27800:	ldr	ip, [r4, #4]
   27804:	ldr	r0, [r9]
   27808:	ldr	r1, [pc, #1604]	; 27e54 <__flatcc_fb_gen_c_json_parser@@Base+0x3c48>
   2780c:	ldr	r3, [ip, #4]
   27810:	vstr	d7, [sp, #24]
   27814:	str	r3, [sp, #16]
   27818:	add	r1, pc, r1
   2781c:	ldr	ip, [ip]
   27820:	str	r3, [sp, #8]
   27824:	str	ip, [sp, #12]
   27828:	ldrd	sl, [r4, #96]	; 0x60
   2782c:	strd	sl, [sp]
   27830:	bl	13f7c <fprintf@plt>
   27834:	ldr	r3, [sp, #44]	; 0x2c
   27838:	ldrd	r0, [r3, #96]	; 0x60
   2783c:	b	271bc <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   27840:	ldr	r2, [pc, #1552]	; 27e58 <__flatcc_fb_gen_c_json_parser@@Base+0x3c4c>
   27844:	add	r2, pc, r2
   27848:	b	27740 <__flatcc_fb_gen_c_json_parser@@Base+0x3534>
   2784c:	ldr	r2, [pc, #1544]	; 27e5c <__flatcc_fb_gen_c_json_parser@@Base+0x3c50>
   27850:	add	r2, pc, r2
   27854:	b	27740 <__flatcc_fb_gen_c_json_parser@@Base+0x3534>
   27858:	ldr	r2, [pc, #1536]	; 27e60 <__flatcc_fb_gen_c_json_parser@@Base+0x3c54>
   2785c:	add	r2, pc, r2
   27860:	b	27740 <__flatcc_fb_gen_c_json_parser@@Base+0x3534>
   27864:	ldr	r2, [pc, #1528]	; 27e64 <__flatcc_fb_gen_c_json_parser@@Base+0x3c58>
   27868:	add	r2, pc, r2
   2786c:	b	27740 <__flatcc_fb_gen_c_json_parser@@Base+0x3534>
   27870:	ldr	r2, [pc, #1520]	; 27e68 <__flatcc_fb_gen_c_json_parser@@Base+0x3c5c>
   27874:	add	r2, pc, r2
   27878:	b	27740 <__flatcc_fb_gen_c_json_parser@@Base+0x3534>
   2787c:	ldr	r2, [pc, #1512]	; 27e6c <__flatcc_fb_gen_c_json_parser@@Base+0x3c60>
   27880:	add	r2, pc, r2
   27884:	b	27740 <__flatcc_fb_gen_c_json_parser@@Base+0x3534>
   27888:	ldr	r2, [pc, #1504]	; 27e70 <__flatcc_fb_gen_c_json_parser@@Base+0x3c64>
   2788c:	add	r2, pc, r2
   27890:	b	27740 <__flatcc_fb_gen_c_json_parser@@Base+0x3534>
   27894:	ldr	r2, [pc, #1496]	; 27e74 <__flatcc_fb_gen_c_json_parser@@Base+0x3c68>
   27898:	add	r2, pc, r2
   2789c:	b	27740 <__flatcc_fb_gen_c_json_parser@@Base+0x3534>
   278a0:	ldr	r2, [pc, #1488]	; 27e78 <__flatcc_fb_gen_c_json_parser@@Base+0x3c6c>
   278a4:	add	r2, pc, r2
   278a8:	b	27740 <__flatcc_fb_gen_c_json_parser@@Base+0x3534>
   278ac:	ldr	r2, [pc, #1480]	; 27e7c <__flatcc_fb_gen_c_json_parser@@Base+0x3c70>
   278b0:	add	r2, pc, r2
   278b4:	b	27740 <__flatcc_fb_gen_c_json_parser@@Base+0x3534>
   278b8:	ldr	r2, [pc, #1368]	; 27e18 <__flatcc_fb_gen_c_json_parser@@Base+0x3c0c>
   278bc:	ldr	r1, [sp, #52]	; 0x34
   278c0:	ldr	r3, [pc, #1464]	; 27e80 <__flatcc_fb_gen_c_json_parser@@Base+0x3c74>
   278c4:	ldr	r4, [pc, #1464]	; 27e84 <__flatcc_fb_gen_c_json_parser@@Base+0x3c78>
   278c8:	ldr	r1, [r1, r2]
   278cc:	add	r3, pc, r3
   278d0:	str	r3, [sp]
   278d4:	ldr	r0, [r1]
   278d8:	ldr	r1, [pc, #1448]	; 27e88 <__flatcc_fb_gen_c_json_parser@@Base+0x3c7c>
   278dc:	add	r4, pc, r4
   278e0:	mov	r2, r4
   278e4:	ldr	r3, [pc, #1440]	; 27e8c <__flatcc_fb_gen_c_json_parser@@Base+0x3c80>
   278e8:	add	r1, pc, r1
   278ec:	bl	13f7c <fprintf@plt>
   278f0:	ldr	r3, [pc, #1432]	; 27e90 <__flatcc_fb_gen_c_json_parser@@Base+0x3c84>
   278f4:	ldr	r0, [pc, #1432]	; 27e94 <__flatcc_fb_gen_c_json_parser@@Base+0x3c88>
   278f8:	add	r3, pc, r3
   278fc:	mov	r1, r4
   27900:	add	r3, r3, #76	; 0x4c
   27904:	ldr	r2, [pc, #1408]	; 27e8c <__flatcc_fb_gen_c_json_parser@@Base+0x3c80>
   27908:	add	r0, pc, r0
   2790c:	bl	14030 <__assert_fail@plt>
   27910:	ldr	r2, [pc, #1280]	; 27e18 <__flatcc_fb_gen_c_json_parser@@Base+0x3c0c>
   27914:	ldr	r1, [sp, #52]	; 0x34
   27918:	ldr	r3, [pc, #1400]	; 27e98 <__flatcc_fb_gen_c_json_parser@@Base+0x3c8c>
   2791c:	ldr	r4, [pc, #1400]	; 27e9c <__flatcc_fb_gen_c_json_parser@@Base+0x3c90>
   27920:	ldr	r1, [r1, r2]
   27924:	add	r3, pc, r3
   27928:	str	r3, [sp]
   2792c:	ldr	r0, [r1]
   27930:	ldr	r1, [pc, #1384]	; 27ea0 <__flatcc_fb_gen_c_json_parser@@Base+0x3c94>
   27934:	add	r4, pc, r4
   27938:	mov	r2, r4
   2793c:	mov	r3, #96	; 0x60
   27940:	add	r1, pc, r1
   27944:	bl	13f7c <fprintf@plt>
   27948:	ldr	r3, [pc, #1364]	; 27ea4 <__flatcc_fb_gen_c_json_parser@@Base+0x3c98>
   2794c:	ldr	r0, [pc, #1364]	; 27ea8 <__flatcc_fb_gen_c_json_parser@@Base+0x3c9c>
   27950:	add	r3, pc, r3
   27954:	mov	r1, r4
   27958:	add	r3, r3, #32
   2795c:	mov	r2, #96	; 0x60
   27960:	add	r0, pc, r0
   27964:	bl	14030 <__assert_fail@plt>
   27968:	ldr	r2, [pc, #1340]	; 27eac <__flatcc_fb_gen_c_json_parser@@Base+0x3ca0>
   2796c:	add	r2, pc, r2
   27970:	ldr	r3, [sp, #44]	; 0x2c
   27974:	ldr	ip, [r4, #4]
   27978:	ldrd	r0, [r3, #112]	; 0x70
   2797c:	ldr	r3, [ip, #4]
   27980:	str	r8, [sp, #32]
   27984:	str	r3, [sp, #16]
   27988:	strd	r0, [sp, #24]
   2798c:	ldr	r1, [ip]
   27990:	str	r3, [sp, #8]
   27994:	str	r1, [sp, #12]
   27998:	ldrd	r0, [r4, #96]	; 0x60
   2799c:	mov	sl, r0
   279a0:	mov	fp, r1
   279a4:	ldr	r0, [r9]
   279a8:	ldr	r1, [sp, #68]	; 0x44
   279ac:	strd	sl, [sp]
   279b0:	bl	13f7c <fprintf@plt>
   279b4:	ldr	r3, [sp, #44]	; 0x2c
   279b8:	ldrd	r0, [r3, #96]	; 0x60
   279bc:	b	271bc <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   279c0:	ldr	r2, [pc, #1256]	; 27eb0 <__flatcc_fb_gen_c_json_parser@@Base+0x3ca4>
   279c4:	add	r2, pc, r2
   279c8:	b	27970 <__flatcc_fb_gen_c_json_parser@@Base+0x3764>
   279cc:	ldr	r2, [pc, #1248]	; 27eb4 <__flatcc_fb_gen_c_json_parser@@Base+0x3ca8>
   279d0:	add	r2, pc, r2
   279d4:	b	27970 <__flatcc_fb_gen_c_json_parser@@Base+0x3764>
   279d8:	ldr	r2, [pc, #1240]	; 27eb8 <__flatcc_fb_gen_c_json_parser@@Base+0x3cac>
   279dc:	add	r2, pc, r2
   279e0:	b	27970 <__flatcc_fb_gen_c_json_parser@@Base+0x3764>
   279e4:	ldr	r2, [pc, #1232]	; 27ebc <__flatcc_fb_gen_c_json_parser@@Base+0x3cb0>
   279e8:	add	r2, pc, r2
   279ec:	b	27970 <__flatcc_fb_gen_c_json_parser@@Base+0x3764>
   279f0:	ldr	r2, [pc, #1224]	; 27ec0 <__flatcc_fb_gen_c_json_parser@@Base+0x3cb4>
   279f4:	add	r2, pc, r2
   279f8:	b	27970 <__flatcc_fb_gen_c_json_parser@@Base+0x3764>
   279fc:	ldr	r2, [pc, #1216]	; 27ec4 <__flatcc_fb_gen_c_json_parser@@Base+0x3cb8>
   27a00:	add	r2, pc, r2
   27a04:	b	27970 <__flatcc_fb_gen_c_json_parser@@Base+0x3764>
   27a08:	ldr	r2, [pc, #1208]	; 27ec8 <__flatcc_fb_gen_c_json_parser@@Base+0x3cbc>
   27a0c:	add	r2, pc, r2
   27a10:	b	27970 <__flatcc_fb_gen_c_json_parser@@Base+0x3764>
   27a14:	ldr	r2, [sp, #72]	; 0x48
   27a18:	b	27970 <__flatcc_fb_gen_c_json_parser@@Base+0x3764>
   27a1c:	ldr	r2, [pc, #1192]	; 27ecc <__flatcc_fb_gen_c_json_parser@@Base+0x3cc0>
   27a20:	add	r2, pc, r2
   27a24:	b	27970 <__flatcc_fb_gen_c_json_parser@@Base+0x3764>
   27a28:	ldr	r2, [sp, #76]	; 0x4c
   27a2c:	b	27970 <__flatcc_fb_gen_c_json_parser@@Base+0x3764>
   27a30:	ldr	r2, [pc, #1176]	; 27ed0 <__flatcc_fb_gen_c_json_parser@@Base+0x3cc4>
   27a34:	add	r2, pc, r2
   27a38:	ldrh	r3, [r4, #56]	; 0x38
   27a3c:	cmp	r3, #4
   27a40:	beq	27c24 <__flatcc_fb_gen_c_json_parser@@Base+0x3a18>
   27a44:	bcc	27bcc <__flatcc_fb_gen_c_json_parser@@Base+0x39c0>
   27a48:	cmp	r3, #6
   27a4c:	bhi	27bcc <__flatcc_fb_gen_c_json_parser@@Base+0x39c0>
   27a50:	ldr	r3, [r4, #4]
   27a54:	ldr	r0, [r9]
   27a58:	ldr	r1, [r3, #4]
   27a5c:	str	r8, [sp, #32]
   27a60:	ldrd	sl, [r4, #48]	; 0x30
   27a64:	str	r1, [sp, #16]
   27a68:	strd	sl, [sp, #24]
   27a6c:	ldr	r3, [r3]
   27a70:	str	r1, [sp, #8]
   27a74:	str	r3, [sp, #12]
   27a78:	ldrd	sl, [r4, #96]	; 0x60
   27a7c:	ldr	r1, [pc, #1104]	; 27ed4 <__flatcc_fb_gen_c_json_parser@@Base+0x3cc8>
   27a80:	strd	sl, [sp]
   27a84:	add	r1, pc, r1
   27a88:	bl	13f7c <fprintf@plt>
   27a8c:	ldr	r3, [sp, #44]	; 0x2c
   27a90:	ldrd	r0, [r3, #96]	; 0x60
   27a94:	b	271bc <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   27a98:	ldr	r2, [pc, #1080]	; 27ed8 <__flatcc_fb_gen_c_json_parser@@Base+0x3ccc>
   27a9c:	add	r2, pc, r2
   27aa0:	b	27a38 <__flatcc_fb_gen_c_json_parser@@Base+0x382c>
   27aa4:	ldr	r2, [pc, #1072]	; 27edc <__flatcc_fb_gen_c_json_parser@@Base+0x3cd0>
   27aa8:	add	r2, pc, r2
   27aac:	b	27a38 <__flatcc_fb_gen_c_json_parser@@Base+0x382c>
   27ab0:	ldr	r2, [pc, #1064]	; 27ee0 <__flatcc_fb_gen_c_json_parser@@Base+0x3cd4>
   27ab4:	add	r2, pc, r2
   27ab8:	b	27a38 <__flatcc_fb_gen_c_json_parser@@Base+0x382c>
   27abc:	ldr	r2, [pc, #1056]	; 27ee4 <__flatcc_fb_gen_c_json_parser@@Base+0x3cd8>
   27ac0:	add	r2, pc, r2
   27ac4:	b	27a38 <__flatcc_fb_gen_c_json_parser@@Base+0x382c>
   27ac8:	ldr	r2, [pc, #1048]	; 27ee8 <__flatcc_fb_gen_c_json_parser@@Base+0x3cdc>
   27acc:	add	r2, pc, r2
   27ad0:	b	27a38 <__flatcc_fb_gen_c_json_parser@@Base+0x382c>
   27ad4:	ldr	r2, [pc, #1040]	; 27eec <__flatcc_fb_gen_c_json_parser@@Base+0x3ce0>
   27ad8:	add	r2, pc, r2
   27adc:	b	27a38 <__flatcc_fb_gen_c_json_parser@@Base+0x382c>
   27ae0:	ldr	r2, [pc, #1032]	; 27ef0 <__flatcc_fb_gen_c_json_parser@@Base+0x3ce4>
   27ae4:	add	r2, pc, r2
   27ae8:	b	27a38 <__flatcc_fb_gen_c_json_parser@@Base+0x382c>
   27aec:	ldr	r2, [pc, #1024]	; 27ef4 <__flatcc_fb_gen_c_json_parser@@Base+0x3ce8>
   27af0:	add	r2, pc, r2
   27af4:	b	27a38 <__flatcc_fb_gen_c_json_parser@@Base+0x382c>
   27af8:	ldr	r2, [pc, #1016]	; 27ef8 <__flatcc_fb_gen_c_json_parser@@Base+0x3cec>
   27afc:	add	r2, pc, r2
   27b00:	b	27a38 <__flatcc_fb_gen_c_json_parser@@Base+0x382c>
   27b04:	ldr	r2, [pc, #1008]	; 27efc <__flatcc_fb_gen_c_json_parser@@Base+0x3cf0>
   27b08:	add	r2, pc, r2
   27b0c:	b	27a38 <__flatcc_fb_gen_c_json_parser@@Base+0x382c>
   27b10:	ldr	r2, [pc, #1000]	; 27f00 <__flatcc_fb_gen_c_json_parser@@Base+0x3cf4>
   27b14:	add	r2, pc, r2
   27b18:	ldr	r1, [r4, #4]
   27b1c:	ldr	r0, [r9]
   27b20:	ldr	r3, [r1, #4]
   27b24:	str	r3, [sp, #16]
   27b28:	ldr	r1, [r1]
   27b2c:	str	r3, [sp, #8]
   27b30:	str	r1, [sp, #12]
   27b34:	ldrd	sl, [r4, #96]	; 0x60
   27b38:	ldr	r1, [pc, #964]	; 27f04 <__flatcc_fb_gen_c_json_parser@@Base+0x3cf8>
   27b3c:	strd	sl, [sp]
   27b40:	add	r1, pc, r1
   27b44:	bl	13f7c <fprintf@plt>
   27b48:	ldr	r3, [sp, #44]	; 0x2c
   27b4c:	ldrd	r0, [r3, #96]	; 0x60
   27b50:	b	271bc <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   27b54:	ldr	r2, [pc, #940]	; 27f08 <__flatcc_fb_gen_c_json_parser@@Base+0x3cfc>
   27b58:	add	r2, pc, r2
   27b5c:	b	27b18 <__flatcc_fb_gen_c_json_parser@@Base+0x390c>
   27b60:	ldr	r2, [pc, #932]	; 27f0c <__flatcc_fb_gen_c_json_parser@@Base+0x3d00>
   27b64:	add	r2, pc, r2
   27b68:	b	27b18 <__flatcc_fb_gen_c_json_parser@@Base+0x390c>
   27b6c:	ldr	r2, [pc, #924]	; 27f10 <__flatcc_fb_gen_c_json_parser@@Base+0x3d04>
   27b70:	add	r2, pc, r2
   27b74:	b	27b18 <__flatcc_fb_gen_c_json_parser@@Base+0x390c>
   27b78:	ldr	r2, [pc, #916]	; 27f14 <__flatcc_fb_gen_c_json_parser@@Base+0x3d08>
   27b7c:	add	r2, pc, r2
   27b80:	b	27b18 <__flatcc_fb_gen_c_json_parser@@Base+0x390c>
   27b84:	ldr	r2, [pc, #908]	; 27f18 <__flatcc_fb_gen_c_json_parser@@Base+0x3d0c>
   27b88:	add	r2, pc, r2
   27b8c:	b	27b18 <__flatcc_fb_gen_c_json_parser@@Base+0x390c>
   27b90:	ldr	r2, [pc, #900]	; 27f1c <__flatcc_fb_gen_c_json_parser@@Base+0x3d10>
   27b94:	add	r2, pc, r2
   27b98:	b	27b18 <__flatcc_fb_gen_c_json_parser@@Base+0x390c>
   27b9c:	ldr	r2, [pc, #892]	; 27f20 <__flatcc_fb_gen_c_json_parser@@Base+0x3d14>
   27ba0:	add	r2, pc, r2
   27ba4:	b	27b18 <__flatcc_fb_gen_c_json_parser@@Base+0x390c>
   27ba8:	ldr	r2, [pc, #884]	; 27f24 <__flatcc_fb_gen_c_json_parser@@Base+0x3d18>
   27bac:	add	r2, pc, r2
   27bb0:	b	27b18 <__flatcc_fb_gen_c_json_parser@@Base+0x390c>
   27bb4:	ldr	r2, [pc, #876]	; 27f28 <__flatcc_fb_gen_c_json_parser@@Base+0x3d1c>
   27bb8:	add	r2, pc, r2
   27bbc:	b	27b18 <__flatcc_fb_gen_c_json_parser@@Base+0x390c>
   27bc0:	ldr	r2, [pc, #868]	; 27f2c <__flatcc_fb_gen_c_json_parser@@Base+0x3d20>
   27bc4:	add	r2, pc, r2
   27bc8:	b	27b18 <__flatcc_fb_gen_c_json_parser@@Base+0x390c>
   27bcc:	ldr	r2, [pc, #580]	; 27e18 <__flatcc_fb_gen_c_json_parser@@Base+0x3c0c>
   27bd0:	ldr	r1, [sp, #52]	; 0x34
   27bd4:	ldr	r3, [pc, #852]	; 27f30 <__flatcc_fb_gen_c_json_parser@@Base+0x3d24>
   27bd8:	ldr	r4, [pc, #852]	; 27f34 <__flatcc_fb_gen_c_json_parser@@Base+0x3d28>
   27bdc:	ldr	r1, [r1, r2]
   27be0:	add	r3, pc, r3
   27be4:	str	r3, [sp]
   27be8:	ldr	r0, [r1]
   27bec:	ldr	r1, [pc, #836]	; 27f38 <__flatcc_fb_gen_c_json_parser@@Base+0x3d2c>
   27bf0:	add	r4, pc, r4
   27bf4:	mov	r2, r4
   27bf8:	ldr	r3, [pc, #828]	; 27f3c <__flatcc_fb_gen_c_json_parser@@Base+0x3d30>
   27bfc:	add	r1, pc, r1
   27c00:	bl	13f7c <fprintf@plt>
   27c04:	ldr	r3, [pc, #820]	; 27f40 <__flatcc_fb_gen_c_json_parser@@Base+0x3d34>
   27c08:	ldr	r0, [pc, #820]	; 27f44 <__flatcc_fb_gen_c_json_parser@@Base+0x3d38>
   27c0c:	add	r3, pc, r3
   27c10:	mov	r1, r4
   27c14:	add	r3, r3, #76	; 0x4c
   27c18:	ldr	r2, [pc, #796]	; 27f3c <__flatcc_fb_gen_c_json_parser@@Base+0x3d30>
   27c1c:	add	r0, pc, r0
   27c20:	bl	14030 <__assert_fail@plt>
   27c24:	ldr	r3, [r4, #4]
   27c28:	ldr	r0, [r9]
   27c2c:	ldr	r1, [r3, #4]
   27c30:	str	r8, [sp, #32]
   27c34:	ldrd	sl, [r4, #48]	; 0x30
   27c38:	str	r1, [sp, #16]
   27c3c:	strd	sl, [sp, #24]
   27c40:	ldr	r3, [r3]
   27c44:	str	r1, [sp, #8]
   27c48:	str	r3, [sp, #12]
   27c4c:	ldrd	sl, [r4, #96]	; 0x60
   27c50:	ldr	r1, [pc, #752]	; 27f48 <__flatcc_fb_gen_c_json_parser@@Base+0x3d3c>
   27c54:	strd	sl, [sp]
   27c58:	add	r1, pc, r1
   27c5c:	bl	13f7c <fprintf@plt>
   27c60:	ldr	r3, [sp, #44]	; 0x2c
   27c64:	ldrd	r0, [r3, #96]	; 0x60
   27c68:	b	271bc <__flatcc_fb_gen_c_json_parser@@Base+0x2fb0>
   27c6c:	ldr	r2, [pc, #420]	; 27e18 <__flatcc_fb_gen_c_json_parser@@Base+0x3c0c>
   27c70:	ldr	r1, [sp, #52]	; 0x34
   27c74:	ldr	r3, [pc, #720]	; 27f4c <__flatcc_fb_gen_c_json_parser@@Base+0x3d40>
   27c78:	ldr	r4, [pc, #720]	; 27f50 <__flatcc_fb_gen_c_json_parser@@Base+0x3d44>
   27c7c:	ldr	r1, [r1, r2]
   27c80:	add	r3, pc, r3
   27c84:	str	r3, [sp]
   27c88:	ldr	r0, [r1]
   27c8c:	ldr	r1, [pc, #704]	; 27f54 <__flatcc_fb_gen_c_json_parser@@Base+0x3d48>
   27c90:	add	r4, pc, r4
   27c94:	mov	r2, r4
   27c98:	mov	r3, #96	; 0x60
   27c9c:	add	r1, pc, r1
   27ca0:	bl	13f7c <fprintf@plt>
   27ca4:	ldr	r3, [pc, #684]	; 27f58 <__flatcc_fb_gen_c_json_parser@@Base+0x3d4c>
   27ca8:	ldr	r0, [pc, #684]	; 27f5c <__flatcc_fb_gen_c_json_parser@@Base+0x3d50>
   27cac:	add	r3, pc, r3
   27cb0:	mov	r1, r4
   27cb4:	add	r3, r3, #32
   27cb8:	mov	r2, #96	; 0x60
   27cbc:	add	r0, pc, r0
   27cc0:	bl	14030 <__assert_fail@plt>
   27cc4:	ldr	r2, [pc, #332]	; 27e18 <__flatcc_fb_gen_c_json_parser@@Base+0x3c0c>
   27cc8:	ldr	r1, [sp, #52]	; 0x34
   27ccc:	ldr	r3, [pc, #652]	; 27f60 <__flatcc_fb_gen_c_json_parser@@Base+0x3d54>
   27cd0:	ldr	r4, [pc, #652]	; 27f64 <__flatcc_fb_gen_c_json_parser@@Base+0x3d58>
   27cd4:	ldr	r1, [r1, r2]
   27cd8:	add	r3, pc, r3
   27cdc:	str	r3, [sp]
   27ce0:	ldr	r0, [r1]
   27ce4:	ldr	r1, [pc, #636]	; 27f68 <__flatcc_fb_gen_c_json_parser@@Base+0x3d5c>
   27ce8:	add	r4, pc, r4
   27cec:	mov	r2, r4
   27cf0:	mov	r3, #96	; 0x60
   27cf4:	add	r1, pc, r1
   27cf8:	bl	13f7c <fprintf@plt>
   27cfc:	ldr	r3, [pc, #616]	; 27f6c <__flatcc_fb_gen_c_json_parser@@Base+0x3d60>
   27d00:	ldr	r0, [pc, #616]	; 27f70 <__flatcc_fb_gen_c_json_parser@@Base+0x3d64>
   27d04:	add	r3, pc, r3
   27d08:	mov	r1, r4
   27d0c:	add	r3, r3, #32
   27d10:	mov	r2, #96	; 0x60
   27d14:	add	r0, pc, r0
   27d18:	bl	14030 <__assert_fail@plt>
   27d1c:	ldr	r2, [pc, #244]	; 27e18 <__flatcc_fb_gen_c_json_parser@@Base+0x3c0c>
   27d20:	ldr	r1, [sp, #52]	; 0x34
   27d24:	ldr	r3, [pc, #584]	; 27f74 <__flatcc_fb_gen_c_json_parser@@Base+0x3d68>
   27d28:	ldr	r4, [pc, #584]	; 27f78 <__flatcc_fb_gen_c_json_parser@@Base+0x3d6c>
   27d2c:	ldr	r1, [r1, r2]
   27d30:	add	r3, pc, r3
   27d34:	str	r3, [sp]
   27d38:	ldr	r0, [r1]
   27d3c:	ldr	r1, [pc, #568]	; 27f7c <__flatcc_fb_gen_c_json_parser@@Base+0x3d70>
   27d40:	add	r4, pc, r4
   27d44:	mov	r2, r4
   27d48:	mov	r3, #96	; 0x60
   27d4c:	add	r1, pc, r1
   27d50:	bl	13f7c <fprintf@plt>
   27d54:	ldr	r3, [pc, #548]	; 27f80 <__flatcc_fb_gen_c_json_parser@@Base+0x3d74>
   27d58:	ldr	r0, [pc, #548]	; 27f84 <__flatcc_fb_gen_c_json_parser@@Base+0x3d78>
   27d5c:	add	r3, pc, r3
   27d60:	mov	r1, r4
   27d64:	add	r3, r3, #32
   27d68:	mov	r2, #96	; 0x60
   27d6c:	add	r0, pc, r0
   27d70:	bl	14030 <__assert_fail@plt>
   27d74:	ldr	r2, [pc, #156]	; 27e18 <__flatcc_fb_gen_c_json_parser@@Base+0x3c0c>
   27d78:	ldr	r1, [sp, #52]	; 0x34
   27d7c:	ldr	r3, [pc, #516]	; 27f88 <__flatcc_fb_gen_c_json_parser@@Base+0x3d7c>
   27d80:	ldr	r4, [pc, #516]	; 27f8c <__flatcc_fb_gen_c_json_parser@@Base+0x3d80>
   27d84:	ldr	r1, [r1, r2]
   27d88:	add	r3, pc, r3
   27d8c:	str	r3, [sp]
   27d90:	ldr	r0, [r1]
   27d94:	ldr	r1, [pc, #500]	; 27f90 <__flatcc_fb_gen_c_json_parser@@Base+0x3d84>
   27d98:	add	r4, pc, r4
   27d9c:	mov	r2, r4
   27da0:	ldr	r3, [pc, #492]	; 27f94 <__flatcc_fb_gen_c_json_parser@@Base+0x3d88>
   27da4:	add	r1, pc, r1
   27da8:	bl	13f7c <fprintf@plt>
   27dac:	ldr	r3, [pc, #484]	; 27f98 <__flatcc_fb_gen_c_json_parser@@Base+0x3d8c>
   27db0:	ldr	r0, [pc, #484]	; 27f9c <__flatcc_fb_gen_c_json_parser@@Base+0x3d90>
   27db4:	add	r3, pc, r3
   27db8:	mov	r1, r4
   27dbc:	add	r3, r3, #76	; 0x4c
   27dc0:	ldr	r2, [pc, #460]	; 27f94 <__flatcc_fb_gen_c_json_parser@@Base+0x3d88>
   27dc4:	add	r0, pc, r0
   27dc8:	bl	14030 <__assert_fail@plt>
   27dcc:	andeq	r2, r4, r0, lsl #30
   27dd0:	andeq	sp, r2, ip, lsr #26
   27dd4:	andeq	lr, r2, r8, asr r4
   27dd8:	andeq	sp, r2, r4, asr #28
   27ddc:	andeq	lr, r2, r4, ror #7
   27de0:	andeq	lr, r2, r4, ror r3
   27de4:	strdeq	r8, [r1], -r0
   27de8:	ldrdeq	r8, [r1], -r0
   27dec:	andeq	sp, r2, r8, lsl #30
   27df0:	andeq	sp, r2, r4, lsl pc
   27df4:	andeq	sp, r2, r4, lsr #26
   27df8:	andeq	sp, r2, r0, lsr #23
   27dfc:			; <UNDEFINED> instruction: 0x0002dab8
   27e00:	andeq	sp, r2, r0, ror #25
   27e04:	andeq	sp, r2, r8, ror #23
   27e08:	andeq	sp, r2, r4, lsl pc
   27e0c:	andeq	sp, r2, r0, lsl lr
   27e10:	andeq	sp, r2, r4, lsl #27
   27e14:	andeq	sp, r2, r0, lsr #29
   27e18:	muleq	r0, ip, r0
   27e1c:	strdeq	sp, [r2], -ip
   27e20:			; <UNDEFINED> instruction: 0x0002d1b4
   27e24:	andeq	r8, r1, ip, ror #7
   27e28:			; <UNDEFINED> instruction: 0x0002cfb8
   27e2c:	andeq	r0, r2, ip, asr #15
   27e30:	andeq	sp, r2, r8, ror pc
   27e34:	andeq	sp, r2, ip, asr r1
   27e38:	muleq	r1, r4, r3
   27e3c:	andeq	r0, r0, pc, lsl r2
   27e40:	andeq	ip, r2, r0, ror #30
   27e44:	andeq	r0, r2, r4, ror r7
   27e48:	andeq	r8, r1, r4, asr #12
   27e4c:	andeq	sp, r2, r0, lsr #16
   27e50:	andeq	sp, r2, r4, lsl r8
   27e54:	andeq	sp, r2, r0, lsr #16
   27e58:	strdeq	r8, [r1], -r0
   27e5c:	andeq	r8, r1, r0, lsr #10
   27e60:	andeq	r8, r1, r4, lsr r5
   27e64:	andeq	r8, r1, r0, lsr r5
   27e68:	andeq	r8, r1, r4, lsl #10
   27e6c:	strheq	r8, [r1], -ip
   27e70:	andeq	r8, r1, r4, lsl r5
   27e74:	andeq	r8, r1, r0, lsl r5
   27e78:	andeq	r8, r1, r4, ror #9
   27e7c:	andeq	r0, r3, ip, lsl #16
   27e80:			; <UNDEFINED> instruction: 0x0002b7b8
   27e84:	andeq	ip, r2, r4, asr #30
   27e88:	andeq	r8, r1, ip, ror r1
   27e8c:	muleq	r0, r6, r1
   27e90:	andeq	ip, r2, r8, asr #26
   27e94:	andeq	r0, r2, ip, asr r5
   27e98:	andeq	r8, r1, ip, asr #2
   27e9c:	ldrdeq	r8, [r1], -r0
   27ea0:	andeq	r8, r1, r4, lsr #2
   27ea4:	strdeq	ip, [r2], -r0
   27ea8:	andeq	r0, r2, r4, lsl #10
   27eac:	andeq	r7, r1, r8, asr #31
   27eb0:	andeq	r7, r1, r8, ror pc
   27eb4:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   27eb8:	andeq	r8, r1, r4, asr #7
   27ebc:			; <UNDEFINED> instruction: 0x000183b0
   27ec0:	muleq	r1, ip, r3
   27ec4:			; <UNDEFINED> instruction: 0x000306bc
   27ec8:	andeq	r8, r1, ip, ror r3
   27ecc:	andeq	r8, r1, r8, asr r3
   27ed0:	andeq	r7, r1, r0, lsl #30
   27ed4:	ldrdeq	sp, [r2], -r0
   27ed8:	andeq	r7, r1, r0, lsr #29
   27edc:	andeq	r8, r1, r0, lsl #6
   27ee0:	ldrdeq	r8, [r1], -ip
   27ee4:	strdeq	r0, [r3], -ip
   27ee8:			; <UNDEFINED> instruction: 0x000182bc
   27eec:	andeq	r8, r1, r8, lsr #5
   27ef0:			; <UNDEFINED> instruction: 0x000182bc
   27ef4:	andeq	r8, r1, r8, lsr #5
   27ef8:	andeq	r8, r1, ip, ror r2
   27efc:	andeq	r8, r1, r8, ror #4
   27f00:	andeq	r7, r1, r0, lsr #28
   27f04:	andeq	sp, r2, r8, asr #12
   27f08:	andeq	r7, r1, r4, ror #27
   27f0c:	andeq	r8, r1, r4, asr #4
   27f10:	andeq	r8, r1, r0, lsr r2
   27f14:	andeq	r8, r1, ip, lsl r2
   27f18:	andeq	r8, r1, r8, lsl #4
   27f1c:	andeq	r0, r3, r8, lsr #10
   27f20:	andeq	r8, r1, r8, ror #3
   27f24:	ldrdeq	r8, [r1], -r4
   27f28:	andeq	r8, r1, r0, asr #3
   27f2c:	andeq	r8, r1, ip, lsr #3
   27f30:	andeq	sp, r2, ip, lsr #14
   27f34:	andeq	ip, r2, r0, lsr ip
   27f38:	andeq	r7, r1, r8, ror #28
   27f3c:	andeq	r0, r0, r3, ror #3
   27f40:	andeq	ip, r2, r4, lsr sl
   27f44:	andeq	r0, r2, r8, asr #4
   27f48:	andeq	sp, r2, r8, asr r6
   27f4c:	strdeq	r7, [r1], -r0
   27f50:	andeq	r7, r1, r4, ror sp
   27f54:	andeq	r7, r1, r8, asr #27
   27f58:	muleq	r2, r4, r9
   27f5c:	andeq	r0, r2, r8, lsr #3
   27f60:	muleq	r1, r8, sp
   27f64:	andeq	r7, r1, ip, lsl sp
   27f68:	andeq	r7, r1, r0, ror sp
   27f6c:	andeq	ip, r2, ip, lsr r9
   27f70:	andeq	r0, r2, r0, asr r1
   27f74:	andeq	r7, r1, r0, asr #26
   27f78:	andeq	r7, r1, r4, asr #25
   27f7c:	andeq	r7, r1, r8, lsl sp
   27f80:	andeq	ip, r2, r4, ror #17
   27f84:	strdeq	r0, [r2], -r8
   27f88:	strheq	sp, [r2], -r8
   27f8c:	andeq	ip, r2, r8, lsl #21
   27f90:	andeq	r7, r1, r0, asr #25
   27f94:	andeq	r0, r0, r9, ror #2
   27f98:	andeq	ip, r2, ip, lsl #17
   27f9c:	andeq	r0, r2, r0, lsr #1

00027fa0 <__flatcc_fb_gen_c_json_printer@@Base>:
   27fa0:	ldr	r3, [r0, #208]	; 0xd0
   27fa4:	ldr	r1, [pc, #1224]	; 28474 <__flatcc_fb_gen_c_json_printer@@Base+0x4d4>
   27fa8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27fac:	add	r1, pc, r1
   27fb0:	ldr	r3, [r3, #164]	; 0xa4
   27fb4:	mov	r6, r0
   27fb8:	sub	sp, sp, #244	; 0xf4
   27fbc:	mov	r2, r3
   27fc0:	ldr	r0, [r0, #204]	; 0xcc
   27fc4:	bl	13f7c <fprintf@plt>
   27fc8:	ldr	r0, [pc, #1192]	; 28478 <__flatcc_fb_gen_c_json_printer@@Base+0x4d8>
   27fcc:	ldr	r3, [r6, #204]	; 0xcc
   27fd0:	mov	r2, #81	; 0x51
   27fd4:	mov	r1, #1
   27fd8:	add	r0, pc, r0
   27fdc:	bl	13f10 <fwrite@plt>
   27fe0:	ldr	r0, [pc, #1172]	; 2847c <__flatcc_fb_gen_c_json_printer@@Base+0x4dc>
   27fe4:	ldr	r3, [r6, #204]	; 0xcc
   27fe8:	mov	r2, #40	; 0x28
   27fec:	mov	r1, #1
   27ff0:	add	r0, pc, r0
   27ff4:	bl	13f10 <fwrite@plt>
   27ff8:	ldr	r2, [pc, #1152]	; 28480 <__flatcc_fb_gen_c_json_printer@@Base+0x4e0>
   27ffc:	ldr	r1, [pc, #1152]	; 28484 <__flatcc_fb_gen_c_json_printer@@Base+0x4e4>
   28000:	mov	r0, r6
   28004:	add	r1, pc, r1
   28008:	add	r2, pc, r2
   2800c:	bl	1523c <__flatcc_fb_gen_c_includes@@Base>
   28010:	ldr	r3, [r6, #212]	; 0xd4
   28014:	ldr	r1, [r6, #204]	; 0xcc
   28018:	ldr	r3, [r3, #140]	; 0x8c
   2801c:	cmp	r3, #0
   28020:	beq	28040 <__flatcc_fb_gen_c_json_printer@@Base+0xa0>
   28024:	ldr	r0, [pc, #1116]	; 28488 <__flatcc_fb_gen_c_json_printer@@Base+0x4e8>
   28028:	mov	r3, r1
   2802c:	mov	r2, #36	; 0x24
   28030:	mov	r1, #1
   28034:	add	r0, pc, r0
   28038:	bl	13f10 <fwrite@plt>
   2803c:	ldr	r1, [r6, #204]	; 0xcc
   28040:	mov	r0, #10
   28044:	bl	13fdc <fputc@plt>
   28048:	ldr	r4, [r6, #208]	; 0xd0
   2804c:	add	r7, sp, #20
   28050:	mov	r0, r7
   28054:	ldr	r5, [r4, #52]	; 0x34
   28058:	mov	r2, #220	; 0xdc
   2805c:	mov	r1, #0
   28060:	bl	13f94 <memset@plt>
   28064:	cmp	r5, #0
   28068:	beq	28078 <__flatcc_fb_gen_c_json_printer@@Base+0xd8>
   2806c:	ldrh	r3, [r5, #8]
   28070:	cmp	r3, #1
   28074:	bls	28420 <__flatcc_fb_gen_c_json_printer@@Base+0x480>
   28078:	ldr	r4, [r4, #40]	; 0x28
   2807c:	cmp	r4, #0
   28080:	beq	2810c <__flatcc_fb_gen_c_json_printer@@Base+0x16c>
   28084:	ldr	r9, [pc, #1024]	; 2848c <__flatcc_fb_gen_c_json_printer@@Base+0x4ec>
   28088:	ldr	r8, [pc, #1024]	; 28490 <__flatcc_fb_gen_c_json_printer@@Base+0x4f0>
   2808c:	ldr	r5, [pc, #1024]	; 28494 <__flatcc_fb_gen_c_json_printer@@Base+0x4f4>
   28090:	add	r9, pc, r9
   28094:	add	r8, pc, r8
   28098:	add	r5, pc, r5
   2809c:	b	280d4 <__flatcc_fb_gen_c_json_printer@@Base+0x134>
   280a0:	bcc	28374 <__flatcc_fb_gen_c_json_printer@@Base+0x3d4>
   280a4:	cmp	r3, #4
   280a8:	bne	280c8 <__flatcc_fb_gen_c_json_printer@@Base+0x128>
   280ac:	ldr	r0, [r4, #12]
   280b0:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   280b4:	mov	r3, r7
   280b8:	mov	r2, r7
   280bc:	mov	r1, r5
   280c0:	ldr	r0, [r6, #204]	; 0xcc
   280c4:	bl	13f7c <fprintf@plt>
   280c8:	ldr	r4, [r4]
   280cc:	cmp	r4, #0
   280d0:	beq	2810c <__flatcc_fb_gen_c_json_printer@@Base+0x16c>
   280d4:	ldrh	r3, [r4, #8]
   280d8:	mov	r2, r7
   280dc:	mov	r1, r4
   280e0:	cmp	r3, #1
   280e4:	bne	280a0 <__flatcc_fb_gen_c_json_printer@@Base+0x100>
   280e8:	ldr	r0, [r4, #12]
   280ec:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   280f0:	mov	r2, r7
   280f4:	mov	r1, r9
   280f8:	ldr	r0, [r6, #204]	; 0xcc
   280fc:	bl	13f7c <fprintf@plt>
   28100:	ldr	r4, [r4]
   28104:	cmp	r4, #0
   28108:	bne	280d4 <__flatcc_fb_gen_c_json_printer@@Base+0x134>
   2810c:	ldr	r1, [r6, #204]	; 0xcc
   28110:	mov	r0, #10
   28114:	bl	13fdc <fputc@plt>
   28118:	ldr	r3, [r6, #208]	; 0xd0
   2811c:	ldr	r4, [r3, #40]	; 0x28
   28120:	cmp	r4, #0
   28124:	bne	28138 <__flatcc_fb_gen_c_json_printer@@Base+0x198>
   28128:	b	2830c <__flatcc_fb_gen_c_json_printer@@Base+0x36c>
   2812c:	ldr	r4, [r4]
   28130:	cmp	r4, #0
   28134:	beq	2815c <__flatcc_fb_gen_c_json_printer@@Base+0x1bc>
   28138:	ldrh	r3, [r4, #8]
   2813c:	cmp	r3, #3
   28140:	bne	2812c <__flatcc_fb_gen_c_json_printer@@Base+0x18c>
   28144:	mov	r1, r4
   28148:	mov	r0, r6
   2814c:	bl	26894 <__flatcc_fb_gen_c_json_parser@@Base+0x2688>
   28150:	ldr	r4, [r4]
   28154:	cmp	r4, #0
   28158:	bne	28138 <__flatcc_fb_gen_c_json_printer@@Base+0x198>
   2815c:	ldr	r3, [r6, #208]	; 0xd0
   28160:	ldr	r5, [r3, #40]	; 0x28
   28164:	cmp	r5, #0
   28168:	beq	2830c <__flatcc_fb_gen_c_json_printer@@Base+0x36c>
   2816c:	ldr	fp, [pc, #804]	; 28498 <__flatcc_fb_gen_c_json_printer@@Base+0x4f8>
   28170:	ldr	r8, [pc, #804]	; 2849c <__flatcc_fb_gen_c_json_printer@@Base+0x4fc>
   28174:	ldr	sl, [pc, #804]	; 284a0 <__flatcc_fb_gen_c_json_printer@@Base+0x500>
   28178:	ldr	r9, [pc, #804]	; 284a4 <__flatcc_fb_gen_c_json_printer@@Base+0x504>
   2817c:	add	r3, r6, #204	; 0xcc
   28180:	add	fp, pc, fp
   28184:	add	r8, pc, r8
   28188:	add	sl, pc, sl
   2818c:	add	r9, pc, r9
   28190:	str	r3, [sp, #12]
   28194:	b	281a4 <__flatcc_fb_gen_c_json_printer@@Base+0x204>
   28198:	ldr	r5, [r5]
   2819c:	cmp	r5, #0
   281a0:	beq	28278 <__flatcc_fb_gen_c_json_printer@@Base+0x2d8>
   281a4:	ldrh	r3, [r5, #8]
   281a8:	cmp	r3, #4
   281ac:	bne	28198 <__flatcc_fb_gen_c_json_printer@@Base+0x1f8>
   281b0:	mov	r2, #220	; 0xdc
   281b4:	mov	r1, #0
   281b8:	mov	r0, r7
   281bc:	bl	13f94 <memset@plt>
   281c0:	mov	r2, r7
   281c4:	mov	r1, r5
   281c8:	ldr	r0, [r5, #12]
   281cc:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   281d0:	mov	r2, r7
   281d4:	mov	r1, fp
   281d8:	ldr	r0, [r6, #204]	; 0xcc
   281dc:	bl	13f7c <fprintf@plt>
   281e0:	ldr	r4, [r5, #20]
   281e4:	cmp	r4, #0
   281e8:	bne	281fc <__flatcc_fb_gen_c_json_printer@@Base+0x25c>
   281ec:	b	28238 <__flatcc_fb_gen_c_json_printer@@Base+0x298>
   281f0:	ldr	r4, [r4]
   281f4:	cmp	r4, #0
   281f8:	beq	28238 <__flatcc_fb_gen_c_json_printer@@Base+0x298>
   281fc:	ldrh	r3, [r4, #24]
   28200:	cmp	r3, #0
   28204:	beq	281f0 <__flatcc_fb_gen_c_json_printer@@Base+0x250>
   28208:	ldr	r1, [r4, #4]
   2820c:	ldr	r2, [r4, #48]	; 0x30
   28210:	ldr	r0, [r6, #204]	; 0xcc
   28214:	ldr	r3, [r1, #4]
   28218:	str	r3, [sp, #4]
   2821c:	ldr	r1, [r1]
   28220:	str	r1, [sp]
   28224:	mov	r1, r8
   28228:	bl	13f7c <fprintf@plt>
   2822c:	ldr	r4, [r4]
   28230:	cmp	r4, #0
   28234:	bne	281fc <__flatcc_fb_gen_c_json_printer@@Base+0x25c>
   28238:	ldr	r3, [r6, #204]	; 0xcc
   2823c:	mov	r2, #78	; 0x4e
   28240:	mov	r1, #1
   28244:	mov	r0, sl
   28248:	bl	13f10 <fwrite@plt>
   2824c:	ldr	r3, [r6, #204]	; 0xcc
   28250:	mov	r2, #9
   28254:	mov	r1, #1
   28258:	mov	r0, r9
   2825c:	bl	13f10 <fwrite@plt>
   28260:	mov	r1, r5
   28264:	ldr	r0, [sp, #12]
   28268:	bl	2616c <__flatcc_fb_gen_c_json_parser@@Base+0x1f60>
   2826c:	ldr	r5, [r5]
   28270:	cmp	r5, #0
   28274:	bne	281a4 <__flatcc_fb_gen_c_json_printer@@Base+0x204>
   28278:	ldr	r3, [r6, #208]	; 0xd0
   2827c:	ldr	r4, [r3, #40]	; 0x28
   28280:	cmp	r4, #0
   28284:	beq	2830c <__flatcc_fb_gen_c_json_printer@@Base+0x36c>
   28288:	add	r5, r6, #204	; 0xcc
   2828c:	b	2829c <__flatcc_fb_gen_c_json_printer@@Base+0x2fc>
   28290:	ldr	r4, [r4]
   28294:	cmp	r4, #0
   28298:	beq	282c0 <__flatcc_fb_gen_c_json_printer@@Base+0x320>
   2829c:	ldrh	r3, [r4, #8]
   282a0:	cmp	r3, #1
   282a4:	bne	28290 <__flatcc_fb_gen_c_json_printer@@Base+0x2f0>
   282a8:	mov	r1, r4
   282ac:	mov	r0, r5
   282b0:	bl	263c0 <__flatcc_fb_gen_c_json_parser@@Base+0x21b4>
   282b4:	ldr	r4, [r4]
   282b8:	cmp	r4, #0
   282bc:	bne	2829c <__flatcc_fb_gen_c_json_printer@@Base+0x2fc>
   282c0:	ldr	r3, [r6, #208]	; 0xd0
   282c4:	ldr	r4, [r3, #40]	; 0x28
   282c8:	cmp	r4, #0
   282cc:	beq	2830c <__flatcc_fb_gen_c_json_printer@@Base+0x36c>
   282d0:	add	r5, r6, #204	; 0xcc
   282d4:	b	282e4 <__flatcc_fb_gen_c_json_printer@@Base+0x344>
   282d8:	ldr	r4, [r4]
   282dc:	cmp	r4, #0
   282e0:	beq	28308 <__flatcc_fb_gen_c_json_printer@@Base+0x368>
   282e4:	ldrh	r3, [r4, #8]
   282e8:	cmp	r3, #0
   282ec:	bne	282d8 <__flatcc_fb_gen_c_json_printer@@Base+0x338>
   282f0:	mov	r1, r4
   282f4:	mov	r0, r5
   282f8:	bl	27084 <__flatcc_fb_gen_c_json_parser@@Base+0x2e78>
   282fc:	ldr	r4, [r4]
   28300:	cmp	r4, #0
   28304:	bne	282e4 <__flatcc_fb_gen_c_json_printer@@Base+0x344>
   28308:	ldr	r3, [r6, #208]	; 0xd0
   2830c:	ldr	r4, [r3, #52]	; 0x34
   28310:	cmp	r4, #0
   28314:	beq	28324 <__flatcc_fb_gen_c_json_printer@@Base+0x384>
   28318:	ldrh	r3, [r4, #8]
   2831c:	cmp	r3, #1
   28320:	bls	28390 <__flatcc_fb_gen_c_json_printer@@Base+0x3f0>
   28324:	ldr	r3, [r6, #212]	; 0xd4
   28328:	ldr	r0, [r6, #204]	; 0xcc
   2832c:	ldr	r3, [r3, #140]	; 0x8c
   28330:	cmp	r3, #0
   28334:	beq	28354 <__flatcc_fb_gen_c_json_printer@@Base+0x3b4>
   28338:	mov	r3, r0
   2833c:	ldr	r0, [pc, #356]	; 284a8 <__flatcc_fb_gen_c_json_printer@@Base+0x508>
   28340:	mov	r2, #36	; 0x24
   28344:	mov	r1, #1
   28348:	add	r0, pc, r0
   2834c:	bl	13f10 <fwrite@plt>
   28350:	ldr	r0, [r6, #204]	; 0xcc
   28354:	ldr	r3, [r6, #208]	; 0xd0
   28358:	ldr	r1, [pc, #332]	; 284ac <__flatcc_fb_gen_c_json_printer@@Base+0x50c>
   2835c:	ldr	r2, [r3, #164]	; 0xa4
   28360:	add	r1, pc, r1
   28364:	bl	13f7c <fprintf@plt>
   28368:	mov	r0, #0
   2836c:	add	sp, sp, #244	; 0xf4
   28370:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28374:	ldr	r0, [r4, #12]
   28378:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   2837c:	mov	r2, r7
   28380:	mov	r1, r8
   28384:	ldr	r0, [r6, #204]	; 0xcc
   28388:	bl	13f7c <fprintf@plt>
   2838c:	b	280c8 <__flatcc_fb_gen_c_json_printer@@Base+0x128>
   28390:	mov	r2, #220	; 0xdc
   28394:	mov	r1, #0
   28398:	mov	r0, r7
   2839c:	bl	13f94 <memset@plt>
   283a0:	mov	r2, r7
   283a4:	mov	r1, r4
   283a8:	ldr	r0, [r4, #12]
   283ac:	bl	1542c <__flatcc_fb_scoped_symbol_name@@Base>
   283b0:	ldr	r3, [r6, #208]	; 0xd0
   283b4:	ldr	r1, [pc, #244]	; 284b0 <__flatcc_fb_gen_c_json_printer@@Base+0x510>
   283b8:	ldr	r0, [r6, #204]	; 0xcc
   283bc:	ldr	r2, [r3, #160]	; 0xa0
   283c0:	add	r1, pc, r1
   283c4:	bl	13f7c <fprintf@plt>
   283c8:	ldr	r1, [pc, #228]	; 284b4 <__flatcc_fb_gen_c_json_printer@@Base+0x514>
   283cc:	mov	r2, r7
   283d0:	add	r1, pc, r1
   283d4:	ldr	r0, [r6, #204]	; 0xcc
   283d8:	bl	13f7c <fprintf@plt>
   283dc:	ldr	r2, [r6, #208]	; 0xd0
   283e0:	ldrh	r3, [r2, #16]
   283e4:	cmp	r3, #2
   283e8:	beq	28458 <__flatcc_fb_gen_c_json_printer@@Base+0x4b8>
   283ec:	ldr	r0, [pc, #196]	; 284b8 <__flatcc_fb_gen_c_json_printer@@Base+0x518>
   283f0:	ldr	r3, [r6, #204]	; 0xcc
   283f4:	mov	r2, #3
   283f8:	mov	r1, #1
   283fc:	add	r0, pc, r0
   28400:	bl	13f10 <fwrite@plt>
   28404:	ldr	r0, [pc, #176]	; 284bc <__flatcc_fb_gen_c_json_printer@@Base+0x51c>
   28408:	ldr	r3, [r6, #204]	; 0xcc
   2840c:	mov	r2, #3
   28410:	mov	r1, #1
   28414:	add	r0, pc, r0
   28418:	bl	13f10 <fwrite@plt>
   2841c:	b	28324 <__flatcc_fb_gen_c_json_printer@@Base+0x384>
   28420:	ldr	r0, [pc, #152]	; 284c0 <__flatcc_fb_gen_c_json_printer@@Base+0x520>
   28424:	ldr	r3, [r6, #204]	; 0xcc
   28428:	ldr	r2, [pc, #148]	; 284c4 <__flatcc_fb_gen_c_json_printer@@Base+0x524>
   2842c:	mov	r1, #1
   28430:	add	r0, pc, r0
   28434:	bl	13f10 <fwrite@plt>
   28438:	ldr	r3, [r6, #208]	; 0xd0
   2843c:	ldr	r1, [pc, #132]	; 284c8 <__flatcc_fb_gen_c_json_printer@@Base+0x528>
   28440:	ldr	r0, [r6, #204]	; 0xcc
   28444:	add	r1, pc, r1
   28448:	ldr	r2, [r3, #160]	; 0xa0
   2844c:	bl	13f7c <fprintf@plt>
   28450:	ldr	r4, [r6, #208]	; 0xd0
   28454:	b	28078 <__flatcc_fb_gen_c_json_printer@@Base+0xd8>
   28458:	ldr	r1, [pc, #108]	; 284cc <__flatcc_fb_gen_c_json_printer@@Base+0x52c>
   2845c:	ldr	r3, [r2, #8]
   28460:	add	r1, pc, r1
   28464:	ldr	r2, [r2, #12]
   28468:	ldr	r0, [r6, #204]	; 0xcc
   2846c:	bl	13f7c <fprintf@plt>
   28470:	b	28404 <__flatcc_fb_gen_c_json_printer@@Base+0x464>
   28474:	andeq	sp, r2, r8, asr #13
   28478:	andeq	r8, r1, r4, lsl #27
   2847c:			; <UNDEFINED> instruction: 0x0002d6bc
   28480:	ldrdeq	sp, [r2], -r0
   28484:	andeq	r7, r1, r4, lsl r6
   28488:	andeq	r8, r1, ip, lsr lr
   2848c:	andeq	sp, r2, r8, asr #19
   28490:	andeq	sp, r2, r8, asr r9
   28494:	andeq	sp, r2, ip, lsl #17
   28498:	andeq	sp, r2, r8, lsr #18
   2849c:	andeq	sp, r2, r8, ror #19
   284a0:	muleq	r2, r4, r9
   284a4:			; <UNDEFINED> instruction: 0x0002c5bc
   284a8:	andeq	lr, r1, ip, lsl #19
   284ac:	andeq	sp, r2, r0, lsl #19
   284b0:	andeq	sp, r2, r0, lsl #16
   284b4:	andeq	sp, r2, r8, asr #16
   284b8:	andeq	sp, r2, r0, ror #17
   284bc:	muleq	r2, r0, r4
   284c0:			; <UNDEFINED> instruction: 0x0002d2b8
   284c4:	andeq	r0, r0, r2, ror #3
   284c8:	andeq	sp, r2, r8, lsl #9
   284cc:	andeq	sp, r2, r0, ror r8
   284d0:	push	{r4, lr}
   284d4:	mov	r4, r0
   284d8:	ldr	r0, [r0, #16]
   284dc:	cmp	r0, #0
   284e0:	beq	284e8 <__flatcc_fb_gen_c_json_printer@@Base+0x548>
   284e4:	bl	13ec8 <free@plt>
   284e8:	ldr	r0, [r4, #20]
   284ec:	cmp	r0, #0
   284f0:	beq	284f8 <__flatcc_fb_gen_c_json_printer@@Base+0x558>
   284f4:	bl	13ec8 <free@plt>
   284f8:	ldr	r0, [r4, #24]
   284fc:	cmp	r0, #0
   28500:	beq	28508 <__flatcc_fb_gen_c_json_printer@@Base+0x568>
   28504:	bl	13ec8 <free@plt>
   28508:	mov	r0, r4
   2850c:	mov	r2, #44	; 0x2c
   28510:	mov	r1, #0
   28514:	pop	{r4, lr}
   28518:	b	13f94 <memset@plt>
   2851c:	add	r3, r1, #4
   28520:	ldr	r1, [pc, #12]	; 28534 <__flatcc_fb_gen_c_json_printer@@Base+0x594>
   28524:	mov	r2, r0
   28528:	add	r1, pc, r1
   2852c:	mov	r0, r3
   28530:	b	2b4ec <fb_symbol_table_visit@@Base>
   28534:	andeq	r0, r0, r4, lsr #32
   28538:	add	r3, r1, #4
   2853c:	ldr	r1, [pc, #12]	; 28550 <__flatcc_fb_gen_c_json_printer@@Base+0x5b0>
   28540:	mov	r2, r0
   28544:	add	r1, pc, r1
   28548:	mov	r0, r3
   2854c:	b	2b4ec <fb_symbol_table_visit@@Base>
   28550:	andeq	r0, r0, ip, lsl #2
   28554:	ldrh	r3, [r1, #8]
   28558:	cmp	r3, #4
   2855c:	bxhi	lr
   28560:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   28564:	mov	r6, r0
   28568:	ldr	r0, [r0, #40]	; 0x28
   2856c:	mov	r7, r1
   28570:	add	r0, r0, #172	; 0xac
   28574:	ldr	r1, [r1, #16]
   28578:	bl	2ade0 <ptr_set_find_item@@Base>
   2857c:	cmp	r0, #0
   28580:	beq	28654 <__flatcc_fb_gen_c_json_printer@@Base+0x6b4>
   28584:	ldr	r3, [r6]
   28588:	ldr	r9, [r6, #36]	; 0x24
   2858c:	cmp	r3, #0
   28590:	moveq	r3, r9
   28594:	beq	285dc <__flatcc_fb_gen_c_json_printer@@Base+0x63c>
   28598:	ldr	r3, [r7, #12]
   2859c:	ldr	r5, [r3]
   285a0:	mov	r3, r9
   285a4:	cmp	r5, #0
   285a8:	beq	285dc <__flatcc_fb_gen_c_json_printer@@Base+0x63c>
   285ac:	mov	r8, #46	; 0x2e
   285b0:	ldr	r2, [r5, #4]
   285b4:	mov	r0, r3
   285b8:	ldm	r2, {r1, r4}
   285bc:	mov	r2, r4
   285c0:	bl	13ed4 <memcpy@plt>
   285c4:	add	r4, r0, r4
   285c8:	add	r3, r4, #1
   285cc:	strb	r8, [r4]
   285d0:	ldr	r5, [r5]
   285d4:	cmp	r5, #0
   285d8:	bne	285b0 <__flatcc_fb_gen_c_json_printer@@Base+0x610>
   285dc:	ldr	r2, [r7, #4]
   285e0:	mov	r0, r3
   285e4:	ldm	r2, {r1, r4}
   285e8:	mov	r2, r4
   285ec:	bl	13ed4 <memcpy@plt>
   285f0:	mov	r2, #0
   285f4:	strb	r2, [r0, r4]
   285f8:	ldrh	r2, [r7, #8]
   285fc:	add	r3, r0, r4
   28600:	add	r3, r3, #1
   28604:	str	r3, [r6, #36]	; 0x24
   28608:	cmp	r2, #4
   2860c:	addls	pc, pc, r2, lsl #2
   28610:	b	28650 <__flatcc_fb_gen_c_json_printer@@Base+0x6b0>
   28614:	b	2863c <__flatcc_fb_gen_c_json_printer@@Base+0x69c>
   28618:	b	2863c <__flatcc_fb_gen_c_json_printer@@Base+0x69c>
   2861c:	b	28650 <__flatcc_fb_gen_c_json_printer@@Base+0x6b0>
   28620:	b	28628 <__flatcc_fb_gen_c_json_printer@@Base+0x688>
   28624:	b	28628 <__flatcc_fb_gen_c_json_printer@@Base+0x688>
   28628:	ldr	r3, [r6, #32]
   2862c:	add	r2, r3, #8
   28630:	stm	r3, {r7, r9}
   28634:	str	r2, [r6, #32]
   28638:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2863c:	ldr	r3, [r6, #28]
   28640:	add	r2, r3, #8
   28644:	stm	r3, {r7, r9}
   28648:	str	r2, [r6, #28]
   2864c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   28650:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   28654:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   28658:	ldrh	r3, [r1, #8]
   2865c:	cmp	r3, #4
   28660:	bxhi	lr
   28664:	push	{r4, r5, r6, lr}
   28668:	mov	r4, r0
   2866c:	ldr	r0, [r0, #40]	; 0x28
   28670:	mov	r5, r1
   28674:	add	r0, r0, #172	; 0xac
   28678:	ldr	r1, [r1, #16]
   2867c:	bl	2ade0 <ptr_set_find_item@@Base>
   28680:	cmp	r0, #0
   28684:	beq	28728 <__flatcc_fb_gen_c_json_printer@@Base+0x788>
   28688:	ldr	ip, [r4]
   2868c:	cmp	ip, #0
   28690:	beq	286c4 <__flatcc_fb_gen_c_json_printer@@Base+0x724>
   28694:	ldr	r3, [r5, #12]
   28698:	ldr	r3, [r3]
   2869c:	cmp	r3, #0
   286a0:	beq	2872c <__flatcc_fb_gen_c_json_printer@@Base+0x78c>
   286a4:	mov	ip, #0
   286a8:	ldr	r2, [r3, #4]
   286ac:	ldr	r3, [r3]
   286b0:	ldr	r2, [r2, #4]
   286b4:	cmp	r3, #0
   286b8:	add	r2, r2, #1
   286bc:	add	ip, ip, r2
   286c0:	bne	286a8 <__flatcc_fb_gen_c_json_printer@@Base+0x708>
   286c4:	ldr	r3, [r5, #4]
   286c8:	ldr	r1, [r4, #12]
   286cc:	ldrh	r2, [r5, #8]
   286d0:	ldr	r3, [r3, #4]
   286d4:	add	r3, r3, r1
   286d8:	add	r3, r3, #1
   286dc:	add	ip, r3, ip
   286e0:	str	ip, [r4, #12]
   286e4:	cmp	r2, #4
   286e8:	addls	pc, pc, r2, lsl #2
   286ec:	b	28724 <__flatcc_fb_gen_c_json_printer@@Base+0x784>
   286f0:	b	28714 <__flatcc_fb_gen_c_json_printer@@Base+0x774>
   286f4:	b	28714 <__flatcc_fb_gen_c_json_printer@@Base+0x774>
   286f8:	b	28724 <__flatcc_fb_gen_c_json_printer@@Base+0x784>
   286fc:	b	28704 <__flatcc_fb_gen_c_json_printer@@Base+0x764>
   28700:	b	28704 <__flatcc_fb_gen_c_json_printer@@Base+0x764>
   28704:	ldr	r3, [r4, #8]
   28708:	add	r3, r3, #1
   2870c:	str	r3, [r4, #8]
   28710:	pop	{r4, r5, r6, pc}
   28714:	ldr	r3, [r4, #4]
   28718:	add	r3, r3, #1
   2871c:	str	r3, [r4, #4]
   28720:	pop	{r4, r5, r6, pc}
   28724:	pop	{r4, r5, r6, pc}
   28728:	pop	{r4, r5, r6, pc}
   2872c:	mov	ip, r3
   28730:	b	286c4 <__flatcc_fb_gen_c_json_printer@@Base+0x724>
   28734:	ldr	r3, [pc, #56]	; 28774 <__flatcc_fb_gen_c_json_printer@@Base+0x7d4>
   28738:	push	{r4, r5, r6, lr}
   2873c:	add	r3, pc, r3
   28740:	mov	r4, r1
   28744:	mov	r2, #8
   28748:	mov	r5, r0
   2874c:	bl	14000 <qsort@plt>
   28750:	cmp	r4, #0
   28754:	pople	{r4, r5, r6, pc}
   28758:	mov	r3, #0
   2875c:	ldr	r2, [r5, r3, lsl #3]
   28760:	str	r3, [r2, #124]	; 0x7c
   28764:	add	r3, r3, #1
   28768:	cmp	r4, r3
   2876c:	bne	2875c <__flatcc_fb_gen_c_json_printer@@Base+0x7bc>
   28770:	pop	{r4, r5, r6, pc}
   28774:	andeq	r0, r0, r4, lsr r0
   28778:	ldr	r1, [r1, #4]
   2877c:	ldr	r0, [r0, #4]
   28780:	b	13eb0 <strcmp@plt>
   28784:	sub	r2, r2, #2
   28788:	push	{r4, r5, r6, r7, r8, lr}
   2878c:	mov	r4, r0
   28790:	cmp	r2, #13
   28794:	addls	pc, pc, r2, lsl #2
   28798:	b	28918 <__flatcc_fb_gen_c_json_printer@@Base+0x978>
   2879c:	b	28908 <__flatcc_fb_gen_c_json_printer@@Base+0x968>
   287a0:	b	28918 <__flatcc_fb_gen_c_json_printer@@Base+0x978>
   287a4:	b	28918 <__flatcc_fb_gen_c_json_printer@@Base+0x978>
   287a8:	b	28918 <__flatcc_fb_gen_c_json_printer@@Base+0x978>
   287ac:	b	28918 <__flatcc_fb_gen_c_json_printer@@Base+0x978>
   287b0:	b	28858 <__flatcc_fb_gen_c_json_printer@@Base+0x8b8>
   287b4:	b	288a8 <__flatcc_fb_gen_c_json_printer@@Base+0x908>
   287b8:	b	287d4 <__flatcc_fb_gen_c_json_printer@@Base+0x834>
   287bc:	b	28918 <__flatcc_fb_gen_c_json_printer@@Base+0x978>
   287c0:	b	28918 <__flatcc_fb_gen_c_json_printer@@Base+0x978>
   287c4:	b	28918 <__flatcc_fb_gen_c_json_printer@@Base+0x978>
   287c8:	b	28918 <__flatcc_fb_gen_c_json_printer@@Base+0x978>
   287cc:	b	288c0 <__flatcc_fb_gen_c_json_printer@@Base+0x920>
   287d0:	b	288e8 <__flatcc_fb_gen_c_json_printer@@Base+0x948>
   287d4:	mvn	r5, #0
   287d8:	mov	r7, #13
   287dc:	mov	r6, #14
   287e0:	mov	r1, #3
   287e4:	mov	r0, r4
   287e8:	bl	394a4 <flatcc_builder_start_table@@Base>
   287ec:	cmp	r0, #0
   287f0:	bne	28938 <__flatcc_fb_gen_c_json_printer@@Base+0x998>
   287f4:	cmn	r5, #1
   287f8:	beq	2881c <__flatcc_fb_gen_c_json_printer@@Base+0x87c>
   287fc:	mov	r3, #4
   28800:	mov	r2, r3
   28804:	mov	r1, #2
   28808:	mov	r0, r4
   2880c:	bl	3aee4 <flatcc_builder_table_add@@Base>
   28810:	cmp	r0, #0
   28814:	strne	r5, [r0]
   28818:	beq	28938 <__flatcc_fb_gen_c_json_printer@@Base+0x998>
   2881c:	cmp	r6, #0
   28820:	bne	28940 <__flatcc_fb_gen_c_json_printer@@Base+0x9a0>
   28824:	cmp	r7, #0
   28828:	bne	28964 <__flatcc_fb_gen_c_json_printer@@Base+0x9c4>
   2882c:	ldr	r5, [pc, #408]	; 289cc <__flatcc_fb_gen_c_json_printer@@Base+0xa2c>
   28830:	mov	r2, #0
   28834:	add	r5, pc, r5
   28838:	add	r1, r5, #56	; 0x38
   2883c:	mov	r0, r4
   28840:	bl	39df0 <flatcc_builder_check_required@@Base>
   28844:	cmp	r0, #0
   28848:	beq	289b0 <__flatcc_fb_gen_c_json_printer@@Base+0xa10>
   2884c:	mov	r0, r4
   28850:	pop	{r4, r5, r6, r7, r8, lr}
   28854:	b	39e98 <flatcc_builder_end_table@@Base>
   28858:	mvn	r5, #0
   2885c:	sub	r1, r1, #1
   28860:	cmp	r1, #10
   28864:	movhi	r7, #0
   28868:	movhi	r6, #14
   2886c:	bhi	287e0 <__flatcc_fb_gen_c_json_printer@@Base+0x840>
   28870:	mov	r2, #14
   28874:	ldr	r3, [pc, #340]	; 289d0 <__flatcc_fb_gen_c_json_printer@@Base+0xa30>
   28878:	cmp	r2, #0
   2887c:	add	r3, pc, r3
   28880:	add	r1, r3, r1
   28884:	ldrsb	r6, [r1, #24]
   28888:	beq	288a0 <__flatcc_fb_gen_c_json_printer@@Base+0x900>
   2888c:	cmp	r2, #14
   28890:	moveq	r7, r6
   28894:	moveq	r6, r2
   28898:	beq	287e0 <__flatcc_fb_gen_c_json_printer@@Base+0x840>
   2889c:	mov	r6, r2
   288a0:	mov	r7, #0
   288a4:	b	287e0 <__flatcc_fb_gen_c_json_printer@@Base+0x840>
   288a8:	mvn	r5, #0
   288ac:	sub	r1, r1, #1
   288b0:	cmp	r1, #10
   288b4:	movls	r2, #0
   288b8:	bls	28874 <__flatcc_fb_gen_c_json_printer@@Base+0x8d4>
   288bc:	b	2891c <__flatcc_fb_gen_c_json_printer@@Base+0x97c>
   288c0:	ldrh	r3, [r1, #8]
   288c4:	ldr	r5, [r1, #124]	; 0x7c
   288c8:	cmp	r3, #4
   288cc:	addls	pc, pc, r3, lsl #2
   288d0:	b	28928 <__flatcc_fb_gen_c_json_printer@@Base+0x988>
   288d4:	b	28994 <__flatcc_fb_gen_c_json_printer@@Base+0x9f4>
   288d8:	b	28994 <__flatcc_fb_gen_c_json_printer@@Base+0x9f4>
   288dc:	b	28928 <__flatcc_fb_gen_c_json_printer@@Base+0x988>
   288e0:	b	2899c <__flatcc_fb_gen_c_json_printer@@Base+0x9fc>
   288e4:	b	28988 <__flatcc_fb_gen_c_json_printer@@Base+0x9e8>
   288e8:	ldrh	r3, [r1, #8]
   288ec:	ldr	r5, [r1, #124]	; 0x7c
   288f0:	cmp	r3, #1
   288f4:	bls	289a4 <__flatcc_fb_gen_c_json_printer@@Base+0xa04>
   288f8:	cmp	r3, #3
   288fc:	bne	2891c <__flatcc_fb_gen_c_json_printer@@Base+0x97c>
   28900:	ldr	r1, [r1, #40]	; 0x28
   28904:	b	2885c <__flatcc_fb_gen_c_json_printer@@Base+0x8bc>
   28908:	mvn	r5, #0
   2890c:	mov	r7, #0
   28910:	mov	r6, #13
   28914:	b	287e0 <__flatcc_fb_gen_c_json_printer@@Base+0x840>
   28918:	mvn	r5, #0
   2891c:	mov	r7, #0
   28920:	mov	r6, r7
   28924:	b	287e0 <__flatcc_fb_gen_c_json_printer@@Base+0x840>
   28928:	mov	r1, #3
   2892c:	bl	394a4 <flatcc_builder_start_table@@Base>
   28930:	cmp	r0, #0
   28934:	beq	2882c <__flatcc_fb_gen_c_json_printer@@Base+0x88c>
   28938:	mov	r0, #0
   2893c:	pop	{r4, r5, r6, r7, r8, pc}
   28940:	mov	r3, #1
   28944:	mov	r2, r3
   28948:	mov	r1, #0
   2894c:	mov	r0, r4
   28950:	bl	3aee4 <flatcc_builder_table_add@@Base>
   28954:	cmp	r0, #0
   28958:	strbne	r6, [r0]
   2895c:	bne	28824 <__flatcc_fb_gen_c_json_printer@@Base+0x884>
   28960:	b	28938 <__flatcc_fb_gen_c_json_printer@@Base+0x998>
   28964:	mov	r3, #1
   28968:	mov	r2, r3
   2896c:	mov	r1, r3
   28970:	mov	r0, r4
   28974:	bl	3aee4 <flatcc_builder_table_add@@Base>
   28978:	cmp	r0, #0
   2897c:	strbne	r7, [r0]
   28980:	bne	2882c <__flatcc_fb_gen_c_json_printer@@Base+0x88c>
   28984:	b	28938 <__flatcc_fb_gen_c_json_printer@@Base+0x998>
   28988:	mov	r7, #0
   2898c:	mov	r6, #16
   28990:	b	287e0 <__flatcc_fb_gen_c_json_printer@@Base+0x840>
   28994:	mov	r2, #15
   28998:	b	2889c <__flatcc_fb_gen_c_json_printer@@Base+0x8fc>
   2899c:	ldr	r1, [r1, #40]	; 0x28
   289a0:	b	288ac <__flatcc_fb_gen_c_json_printer@@Base+0x90c>
   289a4:	mov	r7, #15
   289a8:	mov	r6, #14
   289ac:	b	287e0 <__flatcc_fb_gen_c_json_printer@@Base+0x840>
   289b0:	ldr	r1, [pc, #28]	; 289d4 <__flatcc_fb_gen_c_json_printer@@Base+0xa34>
   289b4:	ldr	r0, [pc, #28]	; 289d8 <__flatcc_fb_gen_c_json_printer@@Base+0xa38>
   289b8:	add	r3, r5, #36	; 0x24
   289bc:	mov	r2, #23
   289c0:	add	r1, pc, r1
   289c4:	add	r0, pc, r0
   289c8:	bl	14030 <__assert_fail@plt>
   289cc:	andeq	sp, r2, ip, asr #9
   289d0:	andeq	sp, r2, r4, lsl #9
   289d4:	andeq	sp, r2, r4, lsl #10
   289d8:	andeq	sp, r2, r8, ror r5
   289dc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   289e0:	vpush	{d8-d9}
   289e4:	mov	r4, r1
   289e8:	mov	fp, r0
   289ec:	mov	r1, #0
   289f0:	sub	sp, sp, #116	; 0x74
   289f4:	add	ip, sp, #68	; 0x44
   289f8:	mov	r0, ip
   289fc:	mov	r5, r2
   28a00:	mov	r2, #44	; 0x2c
   28a04:	mov	r8, r3
   28a08:	mov	r7, ip
   28a0c:	ldr	r6, [r3, #60]	; 0x3c
   28a10:	str	r3, [sp, #48]	; 0x30
   28a14:	str	ip, [sp, #52]	; 0x34
   28a18:	bl	13f94 <memset@plt>
   28a1c:	ldr	r1, [pc, #1236]	; 28ef8 <__flatcc_fb_gen_c_json_printer@@Base+0xf58>
   28a20:	mov	r2, r7
   28a24:	mov	r0, r6
   28a28:	add	r1, pc, r1
   28a2c:	str	r4, [sp, #68]	; 0x44
   28a30:	str	r8, [sp, #108]	; 0x6c
   28a34:	bl	2c444 <fb_scope_table_visit@@Base>
   28a38:	ldr	r7, [sp, #72]	; 0x48
   28a3c:	mov	r1, #8
   28a40:	mov	r0, r7
   28a44:	bl	13e98 <calloc@plt>
   28a48:	ldr	r9, [sp, #76]	; 0x4c
   28a4c:	mov	r1, #8
   28a50:	mov	r4, r0
   28a54:	mov	r0, r9
   28a58:	str	r4, [sp, #84]	; 0x54
   28a5c:	bl	13e98 <calloc@plt>
   28a60:	ldr	r8, [sp, #80]	; 0x50
   28a64:	mov	sl, r0
   28a68:	str	r0, [sp, #88]	; 0x58
   28a6c:	mov	r0, r8
   28a70:	bl	13f34 <malloc@plt>
   28a74:	cmp	r7, #0
   28a78:	clz	r3, r4
   28a7c:	lsr	r3, r3, #5
   28a80:	movle	r3, #0
   28a84:	cmp	r3, #0
   28a88:	str	r4, [sp, #96]	; 0x60
   28a8c:	str	sl, [sp, #100]	; 0x64
   28a90:	str	r0, [sp, #92]	; 0x5c
   28a94:	str	r0, [sp, #104]	; 0x68
   28a98:	bne	29620 <__flatcc_fb_gen_c_json_printer@@Base+0x1680>
   28a9c:	cmp	r9, #0
   28aa0:	clz	sl, sl
   28aa4:	lsr	sl, sl, #5
   28aa8:	movle	sl, #0
   28aac:	cmp	sl, #0
   28ab0:	bne	29620 <__flatcc_fb_gen_c_json_printer@@Base+0x1680>
   28ab4:	cmp	r8, #0
   28ab8:	clz	r4, r0
   28abc:	lsr	r4, r4, #5
   28ac0:	moveq	r4, #0
   28ac4:	cmp	r4, #0
   28ac8:	bne	29620 <__flatcc_fb_gen_c_json_printer@@Base+0x1680>
   28acc:	ldr	r1, [pc, #1064]	; 28efc <__flatcc_fb_gen_c_json_printer@@Base+0xf5c>
   28ad0:	ldr	r2, [sp, #52]	; 0x34
   28ad4:	mov	r0, r6
   28ad8:	add	r1, pc, r1
   28adc:	bl	2c444 <fb_scope_table_visit@@Base>
   28ae0:	ldr	r1, [sp, #72]	; 0x48
   28ae4:	ldr	r0, [sp, #84]	; 0x54
   28ae8:	bl	28734 <__flatcc_fb_gen_c_json_printer@@Base+0x794>
   28aec:	ldr	r0, [sp, #88]	; 0x58
   28af0:	ldr	r1, [sp, #76]	; 0x4c
   28af4:	bl	28734 <__flatcc_fb_gen_c_json_printer@@Base+0x794>
   28af8:	ldr	r0, [sp, #72]	; 0x48
   28afc:	cmp	r0, #0
   28b00:	ble	29618 <__flatcc_fb_gen_c_json_printer@@Base+0x1678>
   28b04:	lsl	r0, r0, #2
   28b08:	bl	13f34 <malloc@plt>
   28b0c:	subs	r3, r0, #0
   28b10:	str	r3, [sp, #16]
   28b14:	beq	29620 <__flatcc_fb_gen_c_json_printer@@Base+0x1680>
   28b18:	ldr	r3, [r5]
   28b1c:	cmp	r3, #0
   28b20:	beq	295f8 <__flatcc_fb_gen_c_json_printer@@Base+0x1658>
   28b24:	ldr	r1, [pc, #980]	; 28f00 <__flatcc_fb_gen_c_json_printer@@Base+0xf60>
   28b28:	mov	r3, #2
   28b2c:	mov	r2, #0
   28b30:	add	r1, pc, r1
   28b34:	mov	r0, fp
   28b38:	bl	3866c <flatcc_builder_start_buffer@@Base>
   28b3c:	cmp	r0, #0
   28b40:	bne	28b50 <__flatcc_fb_gen_c_json_printer@@Base+0xbb0>
   28b44:	mov	r1, #5
   28b48:	mov	r0, fp
   28b4c:	bl	394a4 <flatcc_builder_start_table@@Base>
   28b50:	ldr	r3, [sp, #48]	; 0x30
   28b54:	ldrh	r4, [r3, #16]
   28b58:	cmp	r4, #2
   28b5c:	beq	29664 <__flatcc_fb_gen_c_json_printer@@Base+0x16c4>
   28b60:	ldr	r3, [sp, #48]	; 0x30
   28b64:	ldrh	r3, [r3, #32]
   28b68:	cmp	r3, #2
   28b6c:	beq	29630 <__flatcc_fb_gen_c_json_printer@@Base+0x1690>
   28b70:	ldr	r3, [sp, #72]	; 0x48
   28b74:	ldr	r2, [sp, #84]	; 0x54
   28b78:	cmp	r3, #0
   28b7c:	str	r3, [sp, #32]
   28b80:	str	r2, [sp, #36]	; 0x24
   28b84:	ble	29168 <__flatcc_fb_gen_c_json_printer@@Base+0x11c8>
   28b88:	ldr	r3, [pc, #884]	; 28f04 <__flatcc_fb_gen_c_json_printer@@Base+0xf64>
   28b8c:	ldr	r2, [pc, #884]	; 28f08 <__flatcc_fb_gen_c_json_printer@@Base+0xf68>
   28b90:	add	r3, pc, r3
   28b94:	add	r2, pc, r2
   28b98:	add	r3, r3, #60	; 0x3c
   28b9c:	str	r3, [sp, #44]	; 0x2c
   28ba0:	add	r3, r2, #56	; 0x38
   28ba4:	str	r3, [sp, #56]	; 0x38
   28ba8:	ldr	r3, [sp, #36]	; 0x24
   28bac:	vldr	d9, [pc, #828]	; 28ef0 <__flatcc_fb_gen_c_json_printer@@Base+0xf50>
   28bb0:	str	r3, [sp, #24]
   28bb4:	ldr	r3, [sp, #16]
   28bb8:	ldr	r1, [pc, #844]	; 28f0c <__flatcc_fb_gen_c_json_printer@@Base+0xf6c>
   28bbc:	sub	r3, r3, #4
   28bc0:	mov	r9, fp
   28bc4:	add	r1, pc, r1
   28bc8:	str	r3, [sp, #28]
   28bcc:	mov	r3, #0
   28bd0:	str	r2, [sp, #60]	; 0x3c
   28bd4:	str	r1, [sp, #40]	; 0x28
   28bd8:	str	r3, [sp, #20]
   28bdc:	ldr	r3, [sp, #36]	; 0x24
   28be0:	ldr	r2, [sp, #20]
   28be4:	mov	r1, #5
   28be8:	mov	r0, r9
   28bec:	ldr	fp, [r3, r2, lsl #3]
   28bf0:	bl	394a4 <flatcc_builder_start_table@@Base>
   28bf4:	ldr	r3, [sp, #24]
   28bf8:	mov	r0, r9
   28bfc:	ldr	r1, [r3, #4]
   28c00:	bl	3ad48 <flatcc_builder_create_string_str@@Base>
   28c04:	subs	r4, r0, #0
   28c08:	beq	28c20 <__flatcc_fb_gen_c_json_printer@@Base+0xc80>
   28c0c:	mov	r1, #0
   28c10:	mov	r0, r9
   28c14:	bl	3b104 <flatcc_builder_table_add_offset@@Base>
   28c18:	cmp	r0, #0
   28c1c:	strne	r4, [r0]
   28c20:	mov	r0, r9
   28c24:	bl	392bc <flatcc_builder_start_offset_vector@@Base>
   28c28:	ldr	r4, [fp, #20]
   28c2c:	cmp	r4, #0
   28c30:	movne	sl, #0
   28c34:	strne	fp, [sp, #4]
   28c38:	bne	28ca4 <__flatcc_fb_gen_c_json_printer@@Base+0xd04>
   28c3c:	b	290b4 <__flatcc_fb_gen_c_json_printer@@Base+0x1114>
   28c40:	cmp	r3, #1
   28c44:	bne	28c54 <__flatcc_fb_gen_c_json_printer@@Base+0xcb4>
   28c48:	ldrh	r5, [r4, #80]	; 0x50
   28c4c:	cmp	r5, #0
   28c50:	bne	29380 <__flatcc_fb_gen_c_json_printer@@Base+0x13e0>
   28c54:	cmp	fp, #0
   28c58:	bne	28e04 <__flatcc_fb_gen_c_json_printer@@Base+0xe64>
   28c5c:	ldr	r1, [pc, #684]	; 28f10 <__flatcc_fb_gen_c_json_printer@@Base+0xf70>
   28c60:	mov	r2, #2
   28c64:	add	r1, pc, r1
   28c68:	add	r1, r1, #60	; 0x3c
   28c6c:	mov	r0, r9
   28c70:	bl	39df0 <flatcc_builder_check_required@@Base>
   28c74:	cmp	r0, #0
   28c78:	beq	29694 <__flatcc_fb_gen_c_json_printer@@Base+0x16f4>
   28c7c:	mov	r0, r9
   28c80:	bl	39e98 <flatcc_builder_end_table@@Base>
   28c84:	subs	r1, r0, #0
   28c88:	beq	28c94 <__flatcc_fb_gen_c_json_printer@@Base+0xcf4>
   28c8c:	mov	r0, r9
   28c90:	bl	38ccc <flatcc_builder_offset_vector_push@@Base>
   28c94:	ldr	r4, [r4]
   28c98:	orr	sl, r8, sl
   28c9c:	cmp	r4, #0
   28ca0:	beq	290b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1110>
   28ca4:	cmp	sl, #0
   28ca8:	ldrh	r5, [r4, #72]	; 0x48
   28cac:	bne	28cc0 <__flatcc_fb_gen_c_json_printer@@Base+0xd20>
   28cb0:	tst	r5, #128	; 0x80
   28cb4:	movne	r8, #1
   28cb8:	movne	r7, r8
   28cbc:	bne	28cc8 <__flatcc_fb_gen_c_json_printer@@Base+0xd28>
   28cc0:	mov	r8, #0
   28cc4:	mov	r7, r8
   28cc8:	ldrh	r3, [r4, #24]
   28ccc:	ands	fp, r5, #4
   28cd0:	movne	r2, #1
   28cd4:	moveq	r2, #0
   28cd8:	cmp	r3, #14
   28cdc:	str	r2, [sp]
   28ce0:	beq	28f5c <__flatcc_fb_gen_c_json_printer@@Base+0xfbc>
   28ce4:	mov	r1, #9
   28ce8:	mov	r0, r9
   28cec:	bl	394a4 <flatcc_builder_start_table@@Base>
   28cf0:	ldr	r3, [r4, #4]
   28cf4:	mov	r0, r9
   28cf8:	ldm	r3, {r1, r2}
   28cfc:	bl	3ac44 <flatcc_builder_create_string@@Base>
   28d00:	subs	r6, r0, #0
   28d04:	beq	28d1c <__flatcc_fb_gen_c_json_printer@@Base+0xd7c>
   28d08:	mov	r1, #0
   28d0c:	mov	r0, r9
   28d10:	bl	3b104 <flatcc_builder_table_add_offset@@Base>
   28d14:	cmp	r0, #0
   28d18:	strne	r6, [r0]
   28d1c:	ldrh	r2, [r4, #24]
   28d20:	ldr	r1, [r4, #16]
   28d24:	mov	r0, r9
   28d28:	bl	28784 <__flatcc_fb_gen_c_json_printer@@Base+0x7e4>
   28d2c:	subs	r6, r0, #0
   28d30:	bne	28ed8 <__flatcc_fb_gen_c_json_printer@@Base+0xf38>
   28d34:	ldr	r3, [sp, #4]
   28d38:	ldrh	r3, [r3, #8]
   28d3c:	cmp	r3, #0
   28d40:	bne	28c40 <__flatcc_fb_gen_c_json_printer@@Base+0xca0>
   28d44:	ldrh	r3, [r4, #56]	; 0x38
   28d48:	sub	r3, r3, #3
   28d4c:	cmp	r3, #3
   28d50:	addls	pc, pc, r3, lsl #2
   28d54:	b	29714 <__flatcc_fb_gen_c_json_printer@@Base+0x1774>
   28d58:	b	28e28 <__flatcc_fb_gen_c_json_printer@@Base+0xe88>
   28d5c:	b	28d68 <__flatcc_fb_gen_c_json_printer@@Base+0xdc8>
   28d60:	b	28d68 <__flatcc_fb_gen_c_json_printer@@Base+0xdc8>
   28d64:	b	28e9c <__flatcc_fb_gen_c_json_printer@@Base+0xefc>
   28d68:	ldrd	r2, [r4, #48]	; 0x30
   28d6c:	strd	r2, [sp, #8]
   28d70:	ldrd	r2, [sp, #8]
   28d74:	orrs	r3, r2, r3
   28d78:	bne	28eb4 <__flatcc_fb_gen_c_json_printer@@Base+0xf14>
   28d7c:	ldrh	r6, [r4, #96]	; 0x60
   28d80:	cmp	r6, #0
   28d84:	moveq	r6, #4
   28d88:	bne	28e64 <__flatcc_fb_gen_c_json_printer@@Base+0xec4>
   28d8c:	mov	r3, #2
   28d90:	mov	r2, r3
   28d94:	mov	r1, #3
   28d98:	mov	r0, r9
   28d9c:	bl	3aee4 <flatcc_builder_table_add@@Base>
   28da0:	cmp	r0, #0
   28da4:	strhne	r6, [r0]
   28da8:	cmp	r7, #0
   28dac:	beq	28dd0 <__flatcc_fb_gen_c_json_printer@@Base+0xe30>
   28db0:	mov	r3, #1
   28db4:	mov	r2, r3
   28db8:	mov	r1, #8
   28dbc:	mov	r0, r9
   28dc0:	bl	3aee4 <flatcc_builder_table_add@@Base>
   28dc4:	cmp	r0, #0
   28dc8:	movne	r3, #1
   28dcc:	strbne	r3, [r0]
   28dd0:	tst	r5, #256	; 0x100
   28dd4:	beq	28c54 <__flatcc_fb_gen_c_json_printer@@Base+0xcb4>
   28dd8:	mov	r3, #1
   28ddc:	mov	r2, r3
   28de0:	mov	r1, #7
   28de4:	mov	r0, r9
   28de8:	bl	3aee4 <flatcc_builder_table_add@@Base>
   28dec:	cmp	r0, #0
   28df0:	beq	28c54 <__flatcc_fb_gen_c_json_printer@@Base+0xcb4>
   28df4:	mov	r3, #1
   28df8:	cmp	fp, #0
   28dfc:	strb	r3, [r0]
   28e00:	beq	28c5c <__flatcc_fb_gen_c_json_printer@@Base+0xcbc>
   28e04:	mov	r3, #1
   28e08:	mov	r2, r3
   28e0c:	mov	r1, #6
   28e10:	mov	r0, r9
   28e14:	bl	3aee4 <flatcc_builder_table_add@@Base>
   28e18:	cmp	r0, #0
   28e1c:	ldrbne	r3, [sp]
   28e20:	strbne	r3, [r0]
   28e24:	b	28c5c <__flatcc_fb_gen_c_json_printer@@Base+0xcbc>
   28e28:	vldr	d8, [r4, #48]	; 0x30
   28e2c:	vcmp.f64	d8, d9
   28e30:	vmrs	APSR_nzcv, fpscr
   28e34:	beq	28d7c <__flatcc_fb_gen_c_json_printer@@Base+0xddc>
   28e38:	mov	r3, #8
   28e3c:	mov	r2, r3
   28e40:	mov	r1, #5
   28e44:	mov	r0, r9
   28e48:	bl	3aee4 <flatcc_builder_table_add@@Base>
   28e4c:	ldrh	r6, [r4, #96]	; 0x60
   28e50:	cmp	r0, #0
   28e54:	vstrne	d8, [r0]
   28e58:	cmp	r6, #0
   28e5c:	moveq	r6, #4
   28e60:	beq	28d8c <__flatcc_fb_gen_c_json_printer@@Base+0xdec>
   28e64:	mov	r3, #2
   28e68:	mov	r2, r3
   28e6c:	mov	r1, r3
   28e70:	mov	r0, r9
   28e74:	bl	3aee4 <flatcc_builder_table_add@@Base>
   28e78:	cmp	r0, #0
   28e7c:	strhne	r6, [r0]
   28e80:	ldrh	r6, [r4, #96]	; 0x60
   28e84:	add	r6, r6, #2
   28e88:	lsl	r6, r6, #1
   28e8c:	uxth	r6, r6
   28e90:	cmp	r6, #0
   28e94:	beq	28da8 <__flatcc_fb_gen_c_json_printer@@Base+0xe08>
   28e98:	b	28d8c <__flatcc_fb_gen_c_json_printer@@Base+0xdec>
   28e9c:	ldrb	r2, [r4, #48]	; 0x30
   28ea0:	mov	r3, #0
   28ea4:	strd	r2, [sp, #8]
   28ea8:	ldrd	r2, [sp, #8]
   28eac:	orrs	r3, r2, r3
   28eb0:	beq	28d7c <__flatcc_fb_gen_c_json_printer@@Base+0xddc>
   28eb4:	mov	r3, #8
   28eb8:	mov	r2, r3
   28ebc:	mov	r1, #4
   28ec0:	mov	r0, r9
   28ec4:	bl	3aee4 <flatcc_builder_table_add@@Base>
   28ec8:	cmp	r0, #0
   28ecc:	ldrdne	r2, [sp, #8]
   28ed0:	strdne	r2, [r0]
   28ed4:	b	28d7c <__flatcc_fb_gen_c_json_printer@@Base+0xddc>
   28ed8:	mov	r1, #1
   28edc:	mov	r0, r9
   28ee0:	bl	3b104 <flatcc_builder_table_add_offset@@Base>
   28ee4:	cmp	r0, #0
   28ee8:	strne	r6, [r0]
   28eec:	b	28d34 <__flatcc_fb_gen_c_json_printer@@Base+0xd94>
	...
   28ef8:			; <UNDEFINED> instruction: 0xfffffb08
   28efc:			; <UNDEFINED> instruction: 0xfffffa3c
   28f00:	muleq	r2, ip, r4
   28f04:	andeq	sp, r2, r0, ror r1
   28f08:	andeq	sp, r2, ip, ror #2
   28f0c:	andeq	lr, r2, r8, asr #2
   28f10:	muleq	r2, ip, r0
   28f14:	andeq	ip, r2, ip, ror #23
   28f18:	andeq	ip, r2, r0, asr #22
   28f1c:	andeq	ip, r2, ip, lsr fp
   28f20:	andeq	ip, r2, r4, lsr r8
   28f24:	andeq	ip, r2, ip, asr #19
   28f28:	andeq	ip, r2, r0, ror #12
   28f2c:	andeq	ip, r2, r8, lsl r8
   28f30:	andeq	ip, r2, r4, lsr #18
   28f34:	strdeq	ip, [r2], -r8
   28f38:	andeq	ip, r2, r8, lsr #20
   28f3c:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   28f40:	andeq	ip, r2, r4, lsr fp
   28f44:			; <UNDEFINED> instruction: 0x0002c7bc
   28f48:	andeq	ip, r2, r0, lsr r8
   28f4c:	muleq	r2, r4, r7
   28f50:	andeq	ip, r2, ip, asr sl
   28f54:	andeq	ip, r2, r8, ror r7
   28f58:	andeq	ip, r2, r4, lsl r9
   28f5c:	ldr	r3, [r4, #16]
   28f60:	ldrh	r3, [r3, #8]
   28f64:	cmp	r3, #4
   28f68:	bne	28ce4 <__flatcc_fb_gen_c_json_printer@@Base+0xd44>
   28f6c:	mov	r1, #9
   28f70:	mov	r0, r9
   28f74:	bl	394a4 <flatcc_builder_start_table@@Base>
   28f78:	mov	r0, r9
   28f7c:	bl	39324 <flatcc_builder_start_string@@Base>
   28f80:	ldr	r3, [r4, #4]
   28f84:	mov	r0, r9
   28f88:	ldm	r3, {r1, r2}
   28f8c:	bl	38ef4 <flatcc_builder_append_string@@Base>
   28f90:	mov	r2, #5
   28f94:	ldr	r1, [sp, #40]	; 0x28
   28f98:	mov	r0, r9
   28f9c:	bl	38ef4 <flatcc_builder_append_string@@Base>
   28fa0:	mov	r0, r9
   28fa4:	bl	3ada8 <flatcc_builder_end_string@@Base>
   28fa8:	subs	r6, r0, #0
   28fac:	beq	28fc4 <__flatcc_fb_gen_c_json_printer@@Base+0x1024>
   28fb0:	mov	r1, #0
   28fb4:	mov	r0, r9
   28fb8:	bl	3b104 <flatcc_builder_table_add_offset@@Base>
   28fbc:	cmp	r0, #0
   28fc0:	strne	r6, [r0]
   28fc4:	mov	r1, #3
   28fc8:	mov	r0, r9
   28fcc:	bl	394a4 <flatcc_builder_start_table@@Base>
   28fd0:	subs	r6, r0, #0
   28fd4:	bne	29048 <__flatcc_fb_gen_c_json_printer@@Base+0x10a8>
   28fd8:	mov	r3, #1
   28fdc:	mov	r2, r3
   28fe0:	mov	r1, r6
   28fe4:	mov	r0, r9
   28fe8:	bl	3aee4 <flatcc_builder_table_add@@Base>
   28fec:	cmp	r0, #0
   28ff0:	beq	29048 <__flatcc_fb_gen_c_json_printer@@Base+0x10a8>
   28ff4:	mov	r3, #1
   28ff8:	strb	r3, [r0]
   28ffc:	mov	r2, r6
   29000:	ldr	r1, [sp, #56]	; 0x38
   29004:	mov	r0, r9
   29008:	str	r3, [sp, #8]
   2900c:	bl	39df0 <flatcc_builder_check_required@@Base>
   29010:	ldr	r3, [sp, #8]
   29014:	cmp	r0, #0
   29018:	beq	296f4 <__flatcc_fb_gen_c_json_printer@@Base+0x1754>
   2901c:	mov	r0, r9
   29020:	str	r3, [sp, #8]
   29024:	bl	39e98 <flatcc_builder_end_table@@Base>
   29028:	subs	r6, r0, #0
   2902c:	beq	29048 <__flatcc_fb_gen_c_json_printer@@Base+0x10a8>
   29030:	ldr	r3, [sp, #8]
   29034:	mov	r0, r9
   29038:	mov	r1, r3
   2903c:	bl	3b104 <flatcc_builder_table_add_offset@@Base>
   29040:	cmp	r0, #0
   29044:	strne	r6, [r0]
   29048:	ldrh	r6, [r4, #96]	; 0x60
   2904c:	add	r3, r6, #1
   29050:	lsl	r3, r3, #1
   29054:	uxth	r3, r3
   29058:	cmp	r3, #0
   2905c:	str	r3, [sp, #8]
   29060:	bne	295b0 <__flatcc_fb_gen_c_json_printer@@Base+0x1610>
   29064:	sub	r6, r6, #1
   29068:	uxth	r6, r6
   2906c:	cmp	r6, #0
   29070:	bne	29590 <__flatcc_fb_gen_c_json_printer@@Base+0x15f0>
   29074:	cmp	fp, #0
   29078:	bne	2956c <__flatcc_fb_gen_c_json_printer@@Base+0x15cc>
   2907c:	mov	r2, #2
   29080:	ldr	r1, [sp, #44]	; 0x2c
   29084:	mov	r0, r9
   29088:	bl	39df0 <flatcc_builder_check_required@@Base>
   2908c:	cmp	r0, #0
   29090:	beq	29694 <__flatcc_fb_gen_c_json_printer@@Base+0x16f4>
   29094:	mov	r0, r9
   29098:	bl	39e98 <flatcc_builder_end_table@@Base>
   2909c:	subs	r1, r0, #0
   290a0:	beq	28ce4 <__flatcc_fb_gen_c_json_printer@@Base+0xd44>
   290a4:	mov	r0, r9
   290a8:	bl	38ccc <flatcc_builder_offset_vector_push@@Base>
   290ac:	b	28ce4 <__flatcc_fb_gen_c_json_printer@@Base+0xd44>
   290b0:	ldr	fp, [sp, #4]
   290b4:	mov	r0, r9
   290b8:	bl	3a308 <flatcc_builder_end_offset_vector@@Base>
   290bc:	subs	r4, r0, #0
   290c0:	beq	290d8 <__flatcc_fb_gen_c_json_printer@@Base+0x1138>
   290c4:	mov	r1, #1
   290c8:	mov	r0, r9
   290cc:	bl	3b104 <flatcc_builder_table_add_offset@@Base>
   290d0:	cmp	r0, #0
   290d4:	strne	r4, [r0]
   290d8:	ldrh	r3, [fp, #8]
   290dc:	cmp	r3, #1
   290e0:	beq	2953c <__flatcc_fb_gen_c_json_printer@@Base+0x159c>
   290e4:	ldrh	r4, [fp, #104]	; 0x68
   290e8:	cmp	r4, #0
   290ec:	beq	2910c <__flatcc_fb_gen_c_json_printer@@Base+0x116c>
   290f0:	mov	r3, #4
   290f4:	mov	r2, r3
   290f8:	mov	r1, #3
   290fc:	mov	r0, r9
   29100:	bl	3aee4 <flatcc_builder_table_add@@Base>
   29104:	cmp	r0, #0
   29108:	strne	r4, [r0]
   2910c:	ldr	r4, [pc, #-512]	; 28f14 <__flatcc_fb_gen_c_json_printer@@Base+0xf74>
   29110:	mov	r2, #2
   29114:	add	r4, pc, r4
   29118:	add	r1, r4, #92	; 0x5c
   2911c:	mov	r0, r9
   29120:	bl	39df0 <flatcc_builder_check_required@@Base>
   29124:	cmp	r0, #0
   29128:	beq	2973c <__flatcc_fb_gen_c_json_printer@@Base+0x179c>
   2912c:	mov	r0, r9
   29130:	bl	39e98 <flatcc_builder_end_table@@Base>
   29134:	ldr	r3, [sp, #20]
   29138:	ldr	r2, [sp, #32]
   2913c:	add	r3, r3, #1
   29140:	str	r3, [sp, #20]
   29144:	cmp	r2, r3
   29148:	ldr	r3, [sp, #24]
   2914c:	add	r3, r3, #8
   29150:	str	r3, [sp, #24]
   29154:	ldr	r3, [sp, #28]
   29158:	str	r0, [r3, #4]!
   2915c:	str	r3, [sp, #28]
   29160:	bne	28bdc <__flatcc_fb_gen_c_json_printer@@Base+0xc3c>
   29164:	mov	fp, r9
   29168:	ldr	r2, [sp, #32]
   2916c:	ldr	r1, [sp, #16]
   29170:	mov	r0, fp
   29174:	bl	3a3e8 <flatcc_builder_create_offset_vector@@Base>
   29178:	subs	r4, r0, #0
   2917c:	beq	29194 <__flatcc_fb_gen_c_json_printer@@Base+0x11f4>
   29180:	mov	r1, #0
   29184:	mov	r0, fp
   29188:	bl	3b104 <flatcc_builder_table_add_offset@@Base>
   2918c:	cmp	r0, #0
   29190:	strne	r4, [r0]
   29194:	ldr	r3, [sp, #76]	; 0x4c
   29198:	mov	r0, fp
   2919c:	mov	r4, r3
   291a0:	str	r3, [sp, #24]
   291a4:	ldr	r3, [sp, #88]	; 0x58
   291a8:	str	r3, [sp, #20]
   291ac:	bl	392bc <flatcc_builder_start_offset_vector@@Base>
   291b0:	cmp	r4, #0
   291b4:	ble	2945c <__flatcc_fb_gen_c_json_printer@@Base+0x14bc>
   291b8:	ldr	r3, [pc, #-680]	; 28f18 <__flatcc_fb_gen_c_json_printer@@Base+0xf78>
   291bc:	ldr	r2, [pc, #-680]	; 28f1c <__flatcc_fb_gen_c_json_printer@@Base+0xf7c>
   291c0:	add	r3, pc, r3
   291c4:	add	r2, pc, r2
   291c8:	str	r3, [sp, #32]
   291cc:	add	sl, r3, #124	; 0x7c
   291d0:	add	r3, r2, #152	; 0x98
   291d4:	str	r3, [sp, #28]
   291d8:	ldr	r3, [sp, #20]
   291dc:	mov	r1, #0
   291e0:	str	r2, [sp, #36]	; 0x24
   291e4:	str	r1, [sp]
   291e8:	str	r3, [sp, #4]
   291ec:	ldr	r2, [sp]
   291f0:	ldr	r3, [sp, #20]
   291f4:	mov	r1, #4
   291f8:	mov	r0, fp
   291fc:	ldr	r3, [r3, r2, lsl #3]
   29200:	str	r3, [sp, #8]
   29204:	ldrh	r8, [r3, #8]
   29208:	bl	394a4 <flatcc_builder_start_table@@Base>
   2920c:	ldr	r3, [sp, #4]
   29210:	mov	r0, fp
   29214:	ldr	r1, [r3, #4]
   29218:	bl	3ad48 <flatcc_builder_create_string_str@@Base>
   2921c:	subs	r4, r0, #0
   29220:	beq	29238 <__flatcc_fb_gen_c_json_printer@@Base+0x1298>
   29224:	mov	r1, #0
   29228:	mov	r0, fp
   2922c:	bl	3b104 <flatcc_builder_table_add_offset@@Base>
   29230:	cmp	r0, #0
   29234:	strne	r4, [r0]
   29238:	mov	r0, fp
   2923c:	bl	392bc <flatcc_builder_start_offset_vector@@Base>
   29240:	ldr	r3, [sp, #8]
   29244:	ldr	r4, [r3, #20]
   29248:	cmp	r4, #0
   2924c:	movne	r9, #3
   29250:	movne	r5, #1
   29254:	bne	29298 <__flatcc_fb_gen_c_json_printer@@Base+0x12f8>
   29258:	b	293a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1400>
   2925c:	mov	r2, r5
   29260:	mov	r1, sl
   29264:	mov	r0, fp
   29268:	bl	39df0 <flatcc_builder_check_required@@Base>
   2926c:	cmp	r0, #0
   29270:	beq	296b8 <__flatcc_fb_gen_c_json_printer@@Base+0x1718>
   29274:	mov	r0, fp
   29278:	bl	39e98 <flatcc_builder_end_table@@Base>
   2927c:	subs	r1, r0, #0
   29280:	beq	2928c <__flatcc_fb_gen_c_json_printer@@Base+0x12ec>
   29284:	mov	r0, fp
   29288:	bl	38ccc <flatcc_builder_offset_vector_push@@Base>
   2928c:	ldr	r4, [r4]
   29290:	cmp	r4, #0
   29294:	beq	293a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1400>
   29298:	cmp	r8, #4
   2929c:	mov	r1, r9
   292a0:	mov	r0, fp
   292a4:	beq	29308 <__flatcc_fb_gen_c_json_printer@@Base+0x1368>
   292a8:	bl	394a4 <flatcc_builder_start_table@@Base>
   292ac:	ldr	r3, [r4, #4]
   292b0:	mov	r0, fp
   292b4:	ldm	r3, {r1, r2}
   292b8:	bl	3ac44 <flatcc_builder_create_string@@Base>
   292bc:	subs	r6, r0, #0
   292c0:	beq	292dc <__flatcc_fb_gen_c_json_printer@@Base+0x133c>
   292c4:	mov	r1, #0
   292c8:	mov	r0, fp
   292cc:	bl	3b104 <flatcc_builder_table_add_offset@@Base>
   292d0:	cmp	r0, #0
   292d4:	beq	292dc <__flatcc_fb_gen_c_json_printer@@Base+0x133c>
   292d8:	str	r6, [r0]
   292dc:	ldrd	r6, [r4, #48]	; 0x30
   292e0:	orrs	r3, r6, r7
   292e4:	beq	2925c <__flatcc_fb_gen_c_json_printer@@Base+0x12bc>
   292e8:	mov	r3, #8
   292ec:	mov	r2, r3
   292f0:	mov	r1, r5
   292f4:	mov	r0, fp
   292f8:	bl	3aee4 <flatcc_builder_table_add@@Base>
   292fc:	cmp	r0, #0
   29300:	strdne	r6, [r0]
   29304:	b	2925c <__flatcc_fb_gen_c_json_printer@@Base+0x12bc>
   29308:	bl	394a4 <flatcc_builder_start_table@@Base>
   2930c:	ldr	r3, [r4, #4]
   29310:	mov	r0, fp
   29314:	ldm	r3, {r1, r2}
   29318:	bl	3ac44 <flatcc_builder_create_string@@Base>
   2931c:	subs	r6, r0, #0
   29320:	beq	29338 <__flatcc_fb_gen_c_json_printer@@Base+0x1398>
   29324:	mov	r1, #0
   29328:	mov	r0, fp
   2932c:	bl	3b104 <flatcc_builder_table_add_offset@@Base>
   29330:	cmp	r0, #0
   29334:	strne	r6, [r0]
   29338:	ldr	r3, [sp, #16]
   2933c:	cmp	r3, #0
   29340:	beq	292dc <__flatcc_fb_gen_c_json_printer@@Base+0x133c>
   29344:	ldrh	r3, [r4, #24]
   29348:	cmp	r3, #14
   2934c:	bne	292dc <__flatcc_fb_gen_c_json_printer@@Base+0x133c>
   29350:	ldr	r3, [r4, #16]
   29354:	ldr	r2, [sp, #16]
   29358:	ldr	r3, [r3, #124]	; 0x7c
   2935c:	ldr	r6, [r2, r3, lsl #2]
   29360:	cmp	r6, #0
   29364:	beq	292dc <__flatcc_fb_gen_c_json_printer@@Base+0x133c>
   29368:	mov	r1, #2
   2936c:	mov	r0, fp
   29370:	bl	3b104 <flatcc_builder_table_add_offset@@Base>
   29374:	cmp	r0, #0
   29378:	bne	292d8 <__flatcc_fb_gen_c_json_printer@@Base+0x1338>
   2937c:	b	292dc <__flatcc_fb_gen_c_json_printer@@Base+0x133c>
   29380:	mov	r3, #2
   29384:	mov	r2, r3
   29388:	mov	r1, #3
   2938c:	mov	r0, r9
   29390:	bl	3aee4 <flatcc_builder_table_add@@Base>
   29394:	cmp	r0, #0
   29398:	strhne	r5, [r0]
   2939c:	b	28c54 <__flatcc_fb_gen_c_json_printer@@Base+0xcb4>
   293a0:	mov	r0, fp
   293a4:	bl	3a308 <flatcc_builder_end_offset_vector@@Base>
   293a8:	subs	r4, r0, #0
   293ac:	beq	293c4 <__flatcc_fb_gen_c_json_printer@@Base+0x1424>
   293b0:	mov	r1, #1
   293b4:	mov	r0, fp
   293b8:	bl	3b104 <flatcc_builder_table_add_offset@@Base>
   293bc:	cmp	r0, #0
   293c0:	strne	r4, [r0]
   293c4:	cmp	r8, #4
   293c8:	bne	293ec <__flatcc_fb_gen_c_json_printer@@Base+0x144c>
   293cc:	mov	r3, #1
   293d0:	mov	r2, r3
   293d4:	mov	r1, #2
   293d8:	mov	r0, fp
   293dc:	bl	3aee4 <flatcc_builder_table_add@@Base>
   293e0:	cmp	r0, #0
   293e4:	movne	r3, #1
   293e8:	strbne	r3, [r0]
   293ec:	ldr	r3, [sp, #8]
   293f0:	mov	r0, fp
   293f4:	ldrh	r2, [r3, #48]	; 0x30
   293f8:	ldr	r1, [r3, #40]	; 0x28
   293fc:	bl	28784 <__flatcc_fb_gen_c_json_printer@@Base+0x7e4>
   29400:	subs	r4, r0, #0
   29404:	bne	29524 <__flatcc_fb_gen_c_json_printer@@Base+0x1584>
   29408:	mov	r2, #3
   2940c:	ldr	r1, [sp, #28]
   29410:	mov	r0, fp
   29414:	bl	39df0 <flatcc_builder_check_required@@Base>
   29418:	cmp	r0, #0
   2941c:	beq	2971c <__flatcc_fb_gen_c_json_printer@@Base+0x177c>
   29420:	mov	r0, fp
   29424:	bl	39e98 <flatcc_builder_end_table@@Base>
   29428:	subs	r1, r0, #0
   2942c:	beq	29438 <__flatcc_fb_gen_c_json_printer@@Base+0x1498>
   29430:	mov	r0, fp
   29434:	bl	38ccc <flatcc_builder_offset_vector_push@@Base>
   29438:	ldr	r3, [sp]
   2943c:	ldr	r2, [sp, #24]
   29440:	add	r3, r3, #1
   29444:	str	r3, [sp]
   29448:	cmp	r2, r3
   2944c:	ldr	r3, [sp, #4]
   29450:	add	r3, r3, #8
   29454:	str	r3, [sp, #4]
   29458:	bne	291ec <__flatcc_fb_gen_c_json_printer@@Base+0x124c>
   2945c:	mov	r0, fp
   29460:	bl	3a308 <flatcc_builder_end_offset_vector@@Base>
   29464:	subs	r4, r0, #0
   29468:	beq	29480 <__flatcc_fb_gen_c_json_printer@@Base+0x14e0>
   2946c:	mov	r1, #1
   29470:	mov	r0, fp
   29474:	bl	3b104 <flatcc_builder_table_add_offset@@Base>
   29478:	cmp	r0, #0
   2947c:	strne	r4, [r0]
   29480:	ldr	r3, [sp, #48]	; 0x30
   29484:	ldr	r3, [r3, #52]	; 0x34
   29488:	cmp	r3, #0
   2948c:	beq	294c4 <__flatcc_fb_gen_c_json_printer@@Base+0x1524>
   29490:	ldrh	r2, [r3, #8]
   29494:	cmp	r2, #0
   29498:	bne	294c4 <__flatcc_fb_gen_c_json_printer@@Base+0x1524>
   2949c:	ldr	r3, [r3, #124]	; 0x7c
   294a0:	ldr	r2, [sp, #16]
   294a4:	ldr	r4, [r2, r3, lsl #2]
   294a8:	cmp	r4, #0
   294ac:	beq	294c4 <__flatcc_fb_gen_c_json_printer@@Base+0x1524>
   294b0:	mov	r1, #4
   294b4:	mov	r0, fp
   294b8:	bl	3b104 <flatcc_builder_table_add_offset@@Base>
   294bc:	cmp	r0, #0
   294c0:	strne	r4, [r0]
   294c4:	ldr	r4, [pc, #-1452]	; 28f20 <__flatcc_fb_gen_c_json_printer@@Base+0xf80>
   294c8:	mov	r2, #2
   294cc:	add	r4, pc, r4
   294d0:	add	r1, r4, #180	; 0xb4
   294d4:	mov	r0, fp
   294d8:	bl	39df0 <flatcc_builder_check_required@@Base>
   294dc:	cmp	r0, #0
   294e0:	beq	296d8 <__flatcc_fb_gen_c_json_printer@@Base+0x1738>
   294e4:	mov	r0, fp
   294e8:	bl	39e98 <flatcc_builder_end_table@@Base>
   294ec:	mov	r1, r0
   294f0:	mov	r0, fp
   294f4:	bl	38724 <flatcc_builder_end_buffer@@Base>
   294f8:	ldr	r0, [sp, #52]	; 0x34
   294fc:	bl	284d0 <__flatcc_fb_gen_c_json_printer@@Base+0x530>
   29500:	ldr	r3, [sp, #16]
   29504:	cmp	r3, #0
   29508:	beq	29514 <__flatcc_fb_gen_c_json_printer@@Base+0x1574>
   2950c:	mov	r0, r3
   29510:	bl	13ec8 <free@plt>
   29514:	mov	r0, #0
   29518:	add	sp, sp, #116	; 0x74
   2951c:	vpop	{d8-d9}
   29520:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29524:	mov	r1, #3
   29528:	mov	r0, fp
   2952c:	bl	3b104 <flatcc_builder_table_add_offset@@Base>
   29530:	cmp	r0, #0
   29534:	strne	r4, [r0]
   29538:	b	29408 <__flatcc_fb_gen_c_json_printer@@Base+0x1468>
   2953c:	ldr	r4, [fp, #112]	; 0x70
   29540:	cmp	r4, #0
   29544:	bne	295d8 <__flatcc_fb_gen_c_json_printer@@Base+0x1638>
   29548:	mov	r3, #1
   2954c:	mov	r2, r3
   29550:	mov	r1, #2
   29554:	mov	r0, r9
   29558:	bl	3aee4 <flatcc_builder_table_add@@Base>
   2955c:	cmp	r0, #0
   29560:	movne	r3, #1
   29564:	strbne	r3, [r0]
   29568:	b	290e4 <__flatcc_fb_gen_c_json_printer@@Base+0x1144>
   2956c:	mov	r3, #1
   29570:	mov	r2, r3
   29574:	mov	r1, #6
   29578:	mov	r0, r9
   2957c:	bl	3aee4 <flatcc_builder_table_add@@Base>
   29580:	cmp	r0, #0
   29584:	ldrbne	r3, [sp]
   29588:	strbne	r3, [r0]
   2958c:	b	2907c <__flatcc_fb_gen_c_json_printer@@Base+0x10dc>
   29590:	mov	r3, #2
   29594:	mov	r2, r3
   29598:	mov	r1, r3
   2959c:	mov	r0, r9
   295a0:	bl	3aee4 <flatcc_builder_table_add@@Base>
   295a4:	cmp	r0, #0
   295a8:	strhne	r6, [r0]
   295ac:	b	29074 <__flatcc_fb_gen_c_json_printer@@Base+0x10d4>
   295b0:	mov	r3, #2
   295b4:	mov	r2, r3
   295b8:	mov	r1, #3
   295bc:	mov	r0, r9
   295c0:	bl	3aee4 <flatcc_builder_table_add@@Base>
   295c4:	ldrh	r6, [r4, #96]	; 0x60
   295c8:	cmp	r0, #0
   295cc:	ldrhne	r3, [sp, #8]
   295d0:	strhne	r3, [r0]
   295d4:	b	29064 <__flatcc_fb_gen_c_json_printer@@Base+0x10c4>
   295d8:	mov	r3, #4
   295dc:	mov	r2, r3
   295e0:	mov	r1, r3
   295e4:	mov	r0, r9
   295e8:	bl	3aee4 <flatcc_builder_table_add@@Base>
   295ec:	cmp	r0, #0
   295f0:	strne	r4, [r0]
   295f4:	b	29548 <__flatcc_fb_gen_c_json_printer@@Base+0x15a8>
   295f8:	ldr	r1, [pc, #-1756]	; 28f24 <__flatcc_fb_gen_c_json_printer@@Base+0xf84>
   295fc:	mov	r2, r3
   29600:	add	r1, pc, r1
   29604:	mov	r0, fp
   29608:	bl	3866c <flatcc_builder_start_buffer@@Base>
   2960c:	cmp	r0, #0
   29610:	beq	28b44 <__flatcc_fb_gen_c_json_printer@@Base+0xba4>
   29614:	b	28b50 <__flatcc_fb_gen_c_json_printer@@Base+0xbb0>
   29618:	str	r4, [sp, #16]
   2961c:	b	28b18 <__flatcc_fb_gen_c_json_printer@@Base+0xb78>
   29620:	ldr	r0, [sp, #52]	; 0x34
   29624:	bl	284d0 <__flatcc_fb_gen_c_json_printer@@Base+0x530>
   29628:	mvn	r0, #0
   2962c:	b	29518 <__flatcc_fb_gen_c_json_printer@@Base+0x1578>
   29630:	ldr	r3, [sp, #48]	; 0x30
   29634:	mov	r0, fp
   29638:	ldr	r2, [r3, #28]
   2963c:	ldr	r1, [r3, #24]
   29640:	bl	3ac44 <flatcc_builder_create_string@@Base>
   29644:	subs	r4, r0, #0
   29648:	beq	28b70 <__flatcc_fb_gen_c_json_printer@@Base+0xbd0>
   2964c:	mov	r1, #3
   29650:	mov	r0, fp
   29654:	bl	3b104 <flatcc_builder_table_add_offset@@Base>
   29658:	cmp	r0, #0
   2965c:	strne	r4, [r0]
   29660:	b	28b70 <__flatcc_fb_gen_c_json_printer@@Base+0xbd0>
   29664:	ldr	r2, [r3, #12]
   29668:	ldr	r1, [r3, #8]
   2966c:	mov	r0, fp
   29670:	bl	3ac44 <flatcc_builder_create_string@@Base>
   29674:	subs	r5, r0, #0
   29678:	beq	28b60 <__flatcc_fb_gen_c_json_printer@@Base+0xbc0>
   2967c:	mov	r1, r4
   29680:	mov	r0, fp
   29684:	bl	3b104 <flatcc_builder_table_add_offset@@Base>
   29688:	cmp	r0, #0
   2968c:	strne	r5, [r0]
   29690:	b	28b60 <__flatcc_fb_gen_c_json_printer@@Base+0xbc0>
   29694:	ldr	r3, [pc, #-1908]	; 28f28 <__flatcc_fb_gen_c_json_printer@@Base+0xf88>
   29698:	ldr	r1, [pc, #-1908]	; 28f2c <__flatcc_fb_gen_c_json_printer@@Base+0xf8c>
   2969c:	ldr	r0, [pc, #-1908]	; 28f30 <__flatcc_fb_gen_c_json_printer@@Base+0xf90>
   296a0:	add	r3, pc, r3
   296a4:	mov	r2, #29
   296a8:	add	r3, r3, #68	; 0x44
   296ac:	add	r1, pc, r1
   296b0:	add	r0, pc, r0
   296b4:	bl	14030 <__assert_fail@plt>
   296b8:	ldr	r3, [sp, #32]
   296bc:	ldr	r1, [pc, #-1936]	; 28f34 <__flatcc_fb_gen_c_json_printer@@Base+0xf94>
   296c0:	ldr	r0, [pc, #-1936]	; 28f38 <__flatcc_fb_gen_c_json_printer@@Base+0xf98>
   296c4:	add	r3, r3, #128	; 0x80
   296c8:	mov	r2, #25
   296cc:	add	r1, pc, r1
   296d0:	add	r0, pc, r0
   296d4:	bl	14030 <__assert_fail@plt>
   296d8:	ldr	r1, [pc, #-1956]	; 28f3c <__flatcc_fb_gen_c_json_printer@@Base+0xf9c>
   296dc:	ldr	r0, [pc, #-1956]	; 28f40 <__flatcc_fb_gen_c_json_printer@@Base+0xfa0>
   296e0:	add	r3, r4, #188	; 0xbc
   296e4:	mov	r2, #33	; 0x21
   296e8:	add	r1, pc, r1
   296ec:	add	r0, pc, r0
   296f0:	bl	14030 <__assert_fail@plt>
   296f4:	ldr	r3, [sp, #60]	; 0x3c
   296f8:	ldr	r1, [pc, #-1980]	; 28f44 <__flatcc_fb_gen_c_json_printer@@Base+0xfa4>
   296fc:	ldr	r0, [pc, #-1980]	; 28f48 <__flatcc_fb_gen_c_json_printer@@Base+0xfa8>
   29700:	add	r3, r3, #36	; 0x24
   29704:	mov	r2, #23
   29708:	add	r1, pc, r1
   2970c:	add	r0, pc, r0
   29710:	bl	14030 <__assert_fail@plt>
   29714:	vmov.f64	d8, d9
   29718:	b	28e2c <__flatcc_fb_gen_c_json_printer@@Base+0xe8c>
   2971c:	ldr	r3, [sp, #36]	; 0x24
   29720:	ldr	r1, [pc, #-2012]	; 28f4c <__flatcc_fb_gen_c_json_printer@@Base+0xfac>
   29724:	ldr	r0, [pc, #-2012]	; 28f50 <__flatcc_fb_gen_c_json_printer@@Base+0xfb0>
   29728:	add	r3, r3, #160	; 0xa0
   2972c:	mov	r2, #27
   29730:	add	r1, pc, r1
   29734:	add	r0, pc, r0
   29738:	bl	14030 <__assert_fail@plt>
   2973c:	ldr	r1, [pc, #-2032]	; 28f54 <__flatcc_fb_gen_c_json_printer@@Base+0xfb4>
   29740:	ldr	r0, [pc, #-2032]	; 28f58 <__flatcc_fb_gen_c_json_printer@@Base+0xfb8>
   29744:	add	r3, r4, #100	; 0x64
   29748:	mov	r2, #31
   2974c:	add	r1, pc, r1
   29750:	add	r0, pc, r0
   29754:	bl	14030 <__assert_fail@plt>
   29758:	cmp	r0, #0
   2975c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   29760:	sub	sp, sp, #36	; 0x24
   29764:	beq	29778 <__flatcc_fb_gen_c_json_printer@@Base+0x17d8>
   29768:	ldr	r3, [pc, #1756]	; 29e4c <__flatcc_fb_gen_c_json_printer@@Base+0x1eac>
   2976c:	ldr	r2, [r0, #4]
   29770:	cmp	r2, r3
   29774:	beq	2979c <__flatcc_fb_gen_c_json_printer@@Base+0x17fc>
   29778:	ldr	r3, [pc, #1744]	; 29e50 <__flatcc_fb_gen_c_json_printer@@Base+0x1eb0>
   2977c:	ldr	r1, [pc, #1744]	; 29e54 <__flatcc_fb_gen_c_json_printer@@Base+0x1eb4>
   29780:	ldr	r0, [pc, #1744]	; 29e58 <__flatcc_fb_gen_c_json_printer@@Base+0x1eb8>
   29784:	add	r3, pc, r3
   29788:	mov	r2, #237	; 0xed
   2978c:	add	r3, r3, #212	; 0xd4
   29790:	add	r1, pc, r1
   29794:	add	r0, pc, r0
   29798:	bl	14030 <__assert_fail@plt>
   2979c:	ldr	r3, [r0]
   297a0:	adds	r2, r0, r3
   297a4:	beq	29778 <__flatcc_fb_gen_c_json_printer@@Base+0x17d8>
   297a8:	ldr	r3, [r0, r3]
   297ac:	sub	r3, r2, r3
   297b0:	ldrh	r1, [r3]
   297b4:	cmp	r1, #5
   297b8:	bhi	297e0 <__flatcc_fb_gen_c_json_printer@@Base+0x1840>
   297bc:	ldr	r3, [pc, #1688]	; 29e5c <__flatcc_fb_gen_c_json_printer@@Base+0x1ebc>
   297c0:	ldr	r1, [pc, #1688]	; 29e60 <__flatcc_fb_gen_c_json_printer@@Base+0x1ec0>
   297c4:	ldr	r0, [pc, #1688]	; 29e64 <__flatcc_fb_gen_c_json_printer@@Base+0x1ec4>
   297c8:	add	r3, pc, r3
   297cc:	mov	r2, #237	; 0xed
   297d0:	add	r3, r3, #212	; 0xd4
   297d4:	add	r1, pc, r1
   297d8:	add	r0, pc, r0
   297dc:	bl	14030 <__assert_fail@plt>
   297e0:	ldrh	r3, [r3, #4]
   297e4:	cmp	r3, #0
   297e8:	beq	297bc <__flatcc_fb_gen_c_json_printer@@Base+0x181c>
   297ec:	ldr	r1, [r2, r3]
   297f0:	add	r2, r2, r3
   297f4:	add	r1, r1, #4
   297f8:	adds	r3, r2, r1
   297fc:	mov	r0, r3
   29800:	str	r3, [sp, #20]
   29804:	beq	29b9c <__flatcc_fb_gen_c_json_printer@@Base+0x1bfc>
   29808:	ldr	r3, [r3, #-4]
   2980c:	cmp	r3, #0
   29810:	beq	29b9c <__flatcc_fb_gen_c_json_printer@@Base+0x1bfc>
   29814:	ldr	r2, [r2, r1]
   29818:	adds	r1, r0, r2
   2981c:	beq	29e28 <__flatcc_fb_gen_c_json_printer@@Base+0x1e88>
   29820:	ldr	r0, [sp, #20]
   29824:	ldr	r2, [r0, r2]
   29828:	sub	r2, r1, r2
   2982c:	ldrh	r0, [r2]
   29830:	cmp	r0, #7
   29834:	bls	29b78 <__flatcc_fb_gen_c_json_printer@@Base+0x1bd8>
   29838:	ldrh	r2, [r2, #6]
   2983c:	cmp	r2, #0
   29840:	beq	29b78 <__flatcc_fb_gen_c_json_printer@@Base+0x1bd8>
   29844:	mov	r0, #0
   29848:	str	r0, [sp, #16]
   2984c:	ldr	r0, [sp, #20]
   29850:	add	r0, r0, #4
   29854:	str	r0, [sp, #28]
   29858:	ldr	r0, [r1, r2]
   2985c:	add	r6, r1, r2
   29860:	add	r2, r0, #4
   29864:	adds	r6, r6, r2
   29868:	beq	29b28 <__flatcc_fb_gen_c_json_printer@@Base+0x1b88>
   2986c:	ldr	r2, [r6, #-4]
   29870:	cmp	r2, #0
   29874:	str	r2, [sp, #24]
   29878:	beq	29b28 <__flatcc_fb_gen_c_json_printer@@Base+0x1b88>
   2987c:	lsr	r3, r2, #1
   29880:	str	r3, [sp, #12]
   29884:	sub	r2, r2, #1
   29888:	lsl	r3, r3, #1
   2988c:	str	r2, [sp]
   29890:	str	r3, [sp, #8]
   29894:	b	29994 <__flatcc_fb_gen_c_json_printer@@Base+0x19f4>
   29898:	ldr	r8, [r6, #-4]
   2989c:	mov	r5, r9
   298a0:	lsl	fp, r4, #2
   298a4:	cmp	r8, r4
   298a8:	add	r2, r6, fp
   298ac:	bls	29e04 <__flatcc_fb_gen_c_json_printer@@Base+0x1e64>
   298b0:	ldr	r7, [r6, r4, lsl #2]
   298b4:	adds	r3, r2, r7
   298b8:	beq	29e00 <__flatcc_fb_gen_c_json_printer@@Base+0x1e60>
   298bc:	ldr	r2, [r2, r7]
   298c0:	sub	r2, r3, r2
   298c4:	ldrh	r1, [r2]
   298c8:	cmp	r1, #5
   298cc:	bls	29a90 <__flatcc_fb_gen_c_json_printer@@Base+0x1af0>
   298d0:	ldrh	r0, [r2, #4]
   298d4:	cmp	r0, #0
   298d8:	beq	29a90 <__flatcc_fb_gen_c_json_printer@@Base+0x1af0>
   298dc:	ldr	r2, [r3, r0]
   298e0:	cmp	r5, r8
   298e4:	add	r2, r2, #4
   298e8:	add	r0, r3, r0
   298ec:	lsl	r3, r5, #2
   298f0:	add	r0, r0, r2
   298f4:	add	r2, r6, r3
   298f8:	bcs	29e04 <__flatcc_fb_gen_c_json_printer@@Base+0x1e64>
   298fc:	ldr	r8, [r6, r5, lsl #2]
   29900:	adds	r1, r2, r8
   29904:	beq	29e00 <__flatcc_fb_gen_c_json_printer@@Base+0x1e60>
   29908:	ldr	r2, [r2, r8]
   2990c:	sub	r2, r1, r2
   29910:	ldrh	ip, [r2]
   29914:	cmp	ip, #5
   29918:	bls	29a90 <__flatcc_fb_gen_c_json_printer@@Base+0x1af0>
   2991c:	ldrh	ip, [r2, #4]
   29920:	cmp	ip, #0
   29924:	beq	29a90 <__flatcc_fb_gen_c_json_printer@@Base+0x1af0>
   29928:	ldr	r2, [r1, ip]
   2992c:	add	r1, r1, ip
   29930:	add	r2, r2, #4
   29934:	adds	r1, r1, r2
   29938:	moveq	sl, #0
   2993c:	ldrne	sl, [r1, #-4]
   29940:	cmp	r0, #0
   29944:	beq	29af4 <__flatcc_fb_gen_c_json_printer@@Base+0x1b54>
   29948:	ldr	r9, [r0, #-4]
   2994c:	str	r3, [sp, #4]
   29950:	cmp	sl, r9
   29954:	movcc	r2, sl
   29958:	movcs	r2, r9
   2995c:	bl	14018 <strncmp@plt>
   29960:	ldr	r3, [sp, #4]
   29964:	cmp	r0, #0
   29968:	bne	29ab0 <__flatcc_fb_gen_c_json_printer@@Base+0x1b10>
   2996c:	cmp	sl, r9
   29970:	bhi	29ab4 <__flatcc_fb_gen_c_json_printer@@Base+0x1b14>
   29974:	ldr	r3, [sp, #12]
   29978:	sub	r3, r3, #1
   2997c:	str	r3, [sp, #12]
   29980:	cmn	r3, #1
   29984:	ldr	r3, [sp, #8]
   29988:	sub	r3, r3, #2
   2998c:	str	r3, [sp, #8]
   29990:	beq	29ba4 <__flatcc_fb_gen_c_json_printer@@Base+0x1c04>
   29994:	ldr	r3, [sp]
   29998:	ldr	r2, [sp, #8]
   2999c:	cmp	r3, r2
   299a0:	bcc	29974 <__flatcc_fb_gen_c_json_printer@@Base+0x19d4>
   299a4:	ldr	r4, [sp, #12]
   299a8:	ldr	r9, [sp, #8]
   299ac:	ldr	r3, [sp]
   299b0:	cmp	r3, r9
   299b4:	bls	29898 <__flatcc_fb_gen_c_json_printer@@Base+0x18f8>
   299b8:	ldr	r8, [r6, #-4]
   299bc:	lsl	r3, r9, #2
   299c0:	cmp	r8, r9
   299c4:	add	r1, r6, r3
   299c8:	bls	29e04 <__flatcc_fb_gen_c_json_printer@@Base+0x1e64>
   299cc:	ldr	r0, [r6, r9, lsl #2]
   299d0:	adds	r2, r1, r0
   299d4:	beq	29e00 <__flatcc_fb_gen_c_json_printer@@Base+0x1e60>
   299d8:	ldr	r1, [r1, r0]
   299dc:	sub	r1, r2, r1
   299e0:	ldrh	r0, [r1]
   299e4:	cmp	r0, #5
   299e8:	bls	29a90 <__flatcc_fb_gen_c_json_printer@@Base+0x1af0>
   299ec:	ldrh	r1, [r1, #4]
   299f0:	cmp	r1, #0
   299f4:	beq	29a90 <__flatcc_fb_gen_c_json_printer@@Base+0x1af0>
   299f8:	ldr	r0, [r2, r1]
   299fc:	add	r5, r9, #1
   29a00:	add	r2, r2, r1
   29a04:	add	r3, r3, #4
   29a08:	add	r0, r0, #4
   29a0c:	cmp	r8, r5
   29a10:	add	r0, r2, r0
   29a14:	add	r2, r6, r3
   29a18:	bls	29e04 <__flatcc_fb_gen_c_json_printer@@Base+0x1e64>
   29a1c:	ldr	r3, [r6, r3]
   29a20:	adds	r1, r2, r3
   29a24:	beq	29e00 <__flatcc_fb_gen_c_json_printer@@Base+0x1e60>
   29a28:	ldr	r3, [r2, r3]
   29a2c:	sub	r3, r1, r3
   29a30:	ldrh	r2, [r3]
   29a34:	cmp	r2, #5
   29a38:	bls	29a90 <__flatcc_fb_gen_c_json_printer@@Base+0x1af0>
   29a3c:	ldrh	r2, [r3, #4]
   29a40:	cmp	r2, #0
   29a44:	beq	29a90 <__flatcc_fb_gen_c_json_printer@@Base+0x1af0>
   29a48:	ldr	r3, [r1, r2]
   29a4c:	add	r1, r1, r2
   29a50:	add	r3, r3, #4
   29a54:	adds	r1, r1, r3
   29a58:	beq	29a88 <__flatcc_fb_gen_c_json_printer@@Base+0x1ae8>
   29a5c:	cmp	r0, #0
   29a60:	ldr	sl, [r1, #-4]
   29a64:	beq	29ae4 <__flatcc_fb_gen_c_json_printer@@Base+0x1b44>
   29a68:	ldr	r7, [r0, #-4]
   29a6c:	cmp	sl, r7
   29a70:	movcc	r2, sl
   29a74:	movcs	r2, r7
   29a78:	bl	14018 <strncmp@plt>
   29a7c:	cmp	r0, #0
   29a80:	beq	29ae8 <__flatcc_fb_gen_c_json_printer@@Base+0x1b48>
   29a84:	blt	298a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1900>
   29a88:	mov	r5, r9
   29a8c:	b	298a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1900>
   29a90:	ldr	r3, [pc, #976]	; 29e68 <__flatcc_fb_gen_c_json_printer@@Base+0x1ec8>
   29a94:	ldr	r1, [pc, #976]	; 29e6c <__flatcc_fb_gen_c_json_printer@@Base+0x1ecc>
   29a98:	ldr	r0, [pc, #976]	; 29e70 <__flatcc_fb_gen_c_json_printer@@Base+0x1ed0>
   29a9c:	add	r3, pc, r3
   29aa0:	mov	r2, #195	; 0xc3
   29aa4:	add	r1, pc, r1
   29aa8:	add	r0, pc, r0
   29aac:	bl	14030 <__assert_fail@plt>
   29ab0:	bge	29974 <__flatcc_fb_gen_c_json_printer@@Base+0x19d4>
   29ab4:	sub	r4, r4, r5
   29ab8:	ldr	r2, [sp]
   29abc:	lsl	r4, r4, #2
   29ac0:	lsl	r9, r5, #1
   29ac4:	sub	r8, r8, r4
   29ac8:	add	r7, r7, r4
   29acc:	cmp	r2, r9
   29ad0:	str	r8, [r6, fp]
   29ad4:	mov	r4, r5
   29ad8:	str	r7, [r6, r3]
   29adc:	bcs	299ac <__flatcc_fb_gen_c_json_printer@@Base+0x1a0c>
   29ae0:	b	29974 <__flatcc_fb_gen_c_json_printer@@Base+0x19d4>
   29ae4:	mov	r7, #0
   29ae8:	cmp	sl, r7
   29aec:	movls	r5, r9
   29af0:	b	298a0 <__flatcc_fb_gen_c_json_printer@@Base+0x1900>
   29af4:	mov	r9, #0
   29af8:	b	2996c <__flatcc_fb_gen_c_json_printer@@Base+0x19cc>
   29afc:	ldr	r3, [sp, #8]
   29b00:	cmp	fp, r3
   29b04:	bhi	29da0 <__flatcc_fb_gen_c_json_printer@@Base+0x1e00>
   29b08:	ldr	r3, [sp]
   29b0c:	cmp	r3, #0
   29b10:	ldr	r3, [sp, #4]
   29b14:	add	r3, r3, #4
   29b18:	str	r3, [sp, #4]
   29b1c:	bne	29bcc <__flatcc_fb_gen_c_json_printer@@Base+0x1c2c>
   29b20:	ldr	r3, [sp, #20]
   29b24:	ldr	r3, [r3, #-4]
   29b28:	ldr	r2, [sp, #16]
   29b2c:	add	r2, r2, #1
   29b30:	cmp	r2, r3
   29b34:	str	r2, [sp, #16]
   29b38:	bcs	29b9c <__flatcc_fb_gen_c_json_printer@@Base+0x1bfc>
   29b3c:	ldr	r1, [sp, #28]
   29b40:	mov	r2, r1
   29b44:	add	r1, r1, #4
   29b48:	ldr	r0, [r2]
   29b4c:	str	r1, [sp, #28]
   29b50:	adds	r1, r2, r0
   29b54:	beq	29e28 <__flatcc_fb_gen_c_json_printer@@Base+0x1e88>
   29b58:	ldr	r2, [r2, r0]
   29b5c:	sub	r2, r1, r2
   29b60:	ldrh	r0, [r2]
   29b64:	cmp	r0, #7
   29b68:	bls	29b78 <__flatcc_fb_gen_c_json_printer@@Base+0x1bd8>
   29b6c:	ldrh	r2, [r2, #6]
   29b70:	cmp	r2, #0
   29b74:	bne	29858 <__flatcc_fb_gen_c_json_printer@@Base+0x18b8>
   29b78:	ldr	r3, [pc, #756]	; 29e74 <__flatcc_fb_gen_c_json_printer@@Base+0x1ed4>
   29b7c:	ldr	r1, [pc, #756]	; 29e78 <__flatcc_fb_gen_c_json_printer@@Base+0x1ed8>
   29b80:	ldr	r0, [pc, #756]	; 29e7c <__flatcc_fb_gen_c_json_printer@@Base+0x1edc>
   29b84:	add	r3, pc, r3
   29b88:	mov	r2, #224	; 0xe0
   29b8c:	add	r3, r3, #240	; 0xf0
   29b90:	add	r1, pc, r1
   29b94:	add	r0, pc, r0
   29b98:	bl	14030 <__assert_fail@plt>
   29b9c:	add	sp, sp, #36	; 0x24
   29ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   29ba4:	ldr	r3, [sp]
   29ba8:	cmp	r3, #0
   29bac:	beq	29b20 <__flatcc_fb_gen_c_json_printer@@Base+0x1b80>
   29bb0:	ldr	r2, [sp, #24]
   29bb4:	rsb	r3, r2, r2, lsl #30
   29bb8:	add	r2, r6, r2, lsl #2
   29bbc:	lsl	r3, r3, #2
   29bc0:	add	r3, r3, #4
   29bc4:	str	r2, [sp, #12]
   29bc8:	str	r3, [sp, #4]
   29bcc:	ldr	r1, [sp, #12]
   29bd0:	ldr	r0, [sp]
   29bd4:	ldr	r3, [r6]
   29bd8:	sub	r0, r0, #1
   29bdc:	ldr	r2, [r1, #-4]
   29be0:	str	r0, [sp]
   29be4:	ldr	r0, [sp, #4]
   29be8:	mov	r5, #0
   29bec:	sub	r2, r2, r0
   29bf0:	str	r2, [r6]
   29bf4:	mov	r2, r1
   29bf8:	add	r3, r0, r3
   29bfc:	str	r3, [r2, #-4]!
   29c00:	mov	fp, r5
   29c04:	str	r2, [sp, #12]
   29c08:	b	29dcc <__flatcc_fb_gen_c_json_printer@@Base+0x1e2c>
   29c0c:	lsl	r3, fp, #2
   29c10:	cmp	r8, fp
   29c14:	add	r0, r6, r3
   29c18:	bls	29e04 <__flatcc_fb_gen_c_json_printer@@Base+0x1e64>
   29c1c:	ldr	r1, [r6, fp, lsl #2]
   29c20:	adds	r2, r0, r1
   29c24:	beq	29e00 <__flatcc_fb_gen_c_json_printer@@Base+0x1e60>
   29c28:	ldr	r1, [r0, r1]
   29c2c:	sub	r1, r2, r1
   29c30:	ldrh	r0, [r1]
   29c34:	cmp	r0, #5
   29c38:	bls	29a90 <__flatcc_fb_gen_c_json_printer@@Base+0x1af0>
   29c3c:	ldrh	r1, [r1, #4]
   29c40:	cmp	r1, #0
   29c44:	beq	29a90 <__flatcc_fb_gen_c_json_printer@@Base+0x1af0>
   29c48:	ldr	r0, [r2, r1]
   29c4c:	add	r4, fp, #1
   29c50:	add	r2, r2, r1
   29c54:	add	r3, r3, #4
   29c58:	add	r0, r0, #4
   29c5c:	cmp	r8, r4
   29c60:	add	r0, r2, r0
   29c64:	add	r2, r6, r3
   29c68:	bls	29e04 <__flatcc_fb_gen_c_json_printer@@Base+0x1e64>
   29c6c:	ldr	r3, [r6, r3]
   29c70:	adds	r1, r2, r3
   29c74:	beq	29e00 <__flatcc_fb_gen_c_json_printer@@Base+0x1e60>
   29c78:	ldr	r3, [r2, r3]
   29c7c:	sub	r3, r1, r3
   29c80:	ldrh	r2, [r3]
   29c84:	cmp	r2, #5
   29c88:	bls	29a90 <__flatcc_fb_gen_c_json_printer@@Base+0x1af0>
   29c8c:	ldrh	r2, [r3, #4]
   29c90:	cmp	r2, #0
   29c94:	beq	29a90 <__flatcc_fb_gen_c_json_printer@@Base+0x1af0>
   29c98:	ldr	r3, [r1, r2]
   29c9c:	add	r1, r1, r2
   29ca0:	add	r3, r3, #4
   29ca4:	adds	r1, r1, r3
   29ca8:	beq	29ddc <__flatcc_fb_gen_c_json_printer@@Base+0x1e3c>
   29cac:	cmp	r0, #0
   29cb0:	ldr	r7, [r1, #-4]
   29cb4:	beq	29de4 <__flatcc_fb_gen_c_json_printer@@Base+0x1e44>
   29cb8:	ldr	r9, [r0, #-4]
   29cbc:	cmp	r7, r9
   29cc0:	movcc	r2, r7
   29cc4:	movcs	r2, r9
   29cc8:	bl	14018 <strncmp@plt>
   29ccc:	cmp	r0, #0
   29cd0:	beq	29de8 <__flatcc_fb_gen_c_json_printer@@Base+0x1e48>
   29cd4:	bge	29ddc <__flatcc_fb_gen_c_json_printer@@Base+0x1e3c>
   29cd8:	cmp	r8, r5
   29cdc:	add	r9, r6, r5, lsl #2
   29ce0:	bls	29e04 <__flatcc_fb_gen_c_json_printer@@Base+0x1e64>
   29ce4:	ldr	r7, [r9]
   29ce8:	adds	r3, r9, r7
   29cec:	beq	29e00 <__flatcc_fb_gen_c_json_printer@@Base+0x1e60>
   29cf0:	ldr	r2, [r9, r7]
   29cf4:	sub	r2, r3, r2
   29cf8:	ldrh	r1, [r2]
   29cfc:	cmp	r1, #5
   29d00:	bls	29a90 <__flatcc_fb_gen_c_json_printer@@Base+0x1af0>
   29d04:	ldrh	r2, [r2, #4]
   29d08:	cmp	r2, #0
   29d0c:	beq	29a90 <__flatcc_fb_gen_c_json_printer@@Base+0x1af0>
   29d10:	ldr	r0, [r3, r2]
   29d14:	lsl	sl, r4, #2
   29d18:	add	r3, r3, r2
   29d1c:	add	r0, r0, #4
   29d20:	cmp	r8, r4
   29d24:	add	r0, r3, r0
   29d28:	add	r3, r6, sl
   29d2c:	bls	29e04 <__flatcc_fb_gen_c_json_printer@@Base+0x1e64>
   29d30:	ldr	r8, [r6, r4, lsl #2]
   29d34:	adds	r1, r3, r8
   29d38:	beq	29e00 <__flatcc_fb_gen_c_json_printer@@Base+0x1e60>
   29d3c:	ldr	r3, [r3, r8]
   29d40:	sub	r3, r1, r3
   29d44:	ldrh	r2, [r3]
   29d48:	cmp	r2, #5
   29d4c:	bls	29a90 <__flatcc_fb_gen_c_json_printer@@Base+0x1af0>
   29d50:	ldrh	r2, [r3, #4]
   29d54:	cmp	r2, #0
   29d58:	beq	29a90 <__flatcc_fb_gen_c_json_printer@@Base+0x1af0>
   29d5c:	ldr	r3, [r1, r2]
   29d60:	add	r1, r1, r2
   29d64:	add	r3, r3, #4
   29d68:	adds	r1, r1, r3
   29d6c:	beq	29b08 <__flatcc_fb_gen_c_json_printer@@Base+0x1b68>
   29d70:	cmp	r0, #0
   29d74:	ldr	fp, [r1, #-4]
   29d78:	beq	29df8 <__flatcc_fb_gen_c_json_printer@@Base+0x1e58>
   29d7c:	ldr	r3, [r0, #-4]
   29d80:	cmp	fp, r3
   29d84:	movcc	r2, fp
   29d88:	movcs	r2, r3
   29d8c:	str	r3, [sp, #8]
   29d90:	bl	14018 <strncmp@plt>
   29d94:	cmp	r0, #0
   29d98:	beq	29afc <__flatcc_fb_gen_c_json_printer@@Base+0x1b5c>
   29d9c:	bge	29b08 <__flatcc_fb_gen_c_json_printer@@Base+0x1b68>
   29da0:	sub	r5, r5, r4
   29da4:	ldr	r3, [sp]
   29da8:	lsl	r5, r5, #2
   29dac:	lsl	fp, r4, #1
   29db0:	sub	r8, r8, r5
   29db4:	add	r7, r7, r5
   29db8:	cmp	r3, fp
   29dbc:	str	r8, [r9]
   29dc0:	mov	r5, r4
   29dc4:	str	r7, [r6, sl]
   29dc8:	bcc	29b08 <__flatcc_fb_gen_c_json_printer@@Base+0x1b68>
   29dcc:	ldr	r3, [sp]
   29dd0:	ldr	r8, [r6, #-4]
   29dd4:	cmp	r3, fp
   29dd8:	bhi	29c0c <__flatcc_fb_gen_c_json_printer@@Base+0x1c6c>
   29ddc:	mov	r4, fp
   29de0:	b	29cd8 <__flatcc_fb_gen_c_json_printer@@Base+0x1d38>
   29de4:	mov	r9, #0
   29de8:	cmp	r7, r9
   29dec:	movhi	fp, r4
   29df0:	mov	r4, fp
   29df4:	b	29cd8 <__flatcc_fb_gen_c_json_printer@@Base+0x1d38>
   29df8:	mov	r3, #0
   29dfc:	b	29b00 <__flatcc_fb_gen_c_json_printer@@Base+0x1b60>
   29e00:	bl	14080 <__assert_fail@plt+0x50>
   29e04:	ldr	r3, [pc, #116]	; 29e80 <__flatcc_fb_gen_c_json_printer@@Base+0x1ee0>
   29e08:	ldr	r1, [pc, #116]	; 29e84 <__flatcc_fb_gen_c_json_printer@@Base+0x1ee4>
   29e0c:	ldr	r0, [pc, #116]	; 29e88 <__flatcc_fb_gen_c_json_printer@@Base+0x1ee8>
   29e10:	add	r3, pc, r3
   29e14:	mov	r2, #192	; 0xc0
   29e18:	add	r3, r3, #268	; 0x10c
   29e1c:	add	r1, pc, r1
   29e20:	add	r0, pc, r0
   29e24:	bl	14030 <__assert_fail@plt>
   29e28:	ldr	r3, [pc, #92]	; 29e8c <__flatcc_fb_gen_c_json_printer@@Base+0x1eec>
   29e2c:	ldr	r1, [pc, #92]	; 29e90 <__flatcc_fb_gen_c_json_printer@@Base+0x1ef0>
   29e30:	ldr	r0, [pc, #92]	; 29e94 <__flatcc_fb_gen_c_json_printer@@Base+0x1ef4>
   29e34:	add	r3, pc, r3
   29e38:	mov	r2, #224	; 0xe0
   29e3c:	add	r3, r3, #240	; 0xf0
   29e40:	add	r1, pc, r1
   29e44:	add	r0, pc, r0
   29e48:	bl	14030 <__assert_fail@plt>
   29e4c:	movtpl	r4, #9794	; 0x2642
   29e50:	andeq	ip, r2, ip, ror r5
   29e54:	muleq	r2, r4, r6
   29e58:	andeq	ip, r2, r8, lsl #14
   29e5c:	andeq	ip, r2, r8, lsr r5
   29e60:	andeq	ip, r2, r0, asr r6
   29e64:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   29e68:	andeq	ip, r2, r4, ror #4
   29e6c:	andeq	ip, r2, r0, lsl #7
   29e70:	andeq	ip, r2, ip, lsl #16
   29e74:	andeq	ip, r2, ip, ror r1
   29e78:	muleq	r2, r4, r2
   29e7c:	andeq	ip, r2, r0, lsr #14
   29e80:	strdeq	fp, [r2], -r0
   29e84:	andeq	ip, r2, r8
   29e88:			; <UNDEFINED> instruction: 0x0002c4b8
   29e8c:	andeq	fp, r2, ip, asr #29
   29e90:	andeq	fp, r2, r4, ror #31
   29e94:	andeq	ip, r2, r8, asr r0

00029e98 <__flatcc_fb_codegen_bfbs_to_buffer@@Base>:
   29e98:	push	{r4, r5, r6, r7, r8, lr}
   29e9c:	mov	r7, r0
   29ea0:	sub	sp, sp, #232	; 0xe8
   29ea4:	mov	r8, r1
   29ea8:	mov	r6, r3
   29eac:	mov	r0, sp
   29eb0:	mov	r5, r2
   29eb4:	bl	37d2c <flatcc_builder_init@@Base>
   29eb8:	mov	r3, r8
   29ebc:	add	r2, r7, #188	; 0xbc
   29ec0:	ldr	r1, [r7, #184]	; 0xb8
   29ec4:	mov	r0, sp
   29ec8:	bl	289dc <__flatcc_fb_gen_c_json_printer@@Base+0xa3c>
   29ecc:	ldr	r2, [r6]
   29ed0:	mov	r1, r5
   29ed4:	mov	r0, sp
   29ed8:	bl	3b6b0 <flatcc_builder_copy_buffer@@Base>
   29edc:	mov	r4, sp
   29ee0:	cmp	r0, #0
   29ee4:	beq	29ef0 <__flatcc_fb_codegen_bfbs_to_buffer@@Base+0x58>
   29ee8:	mov	r0, r5
   29eec:	bl	29758 <__flatcc_fb_gen_c_json_printer@@Base+0x17b8>
   29ef0:	mov	r0, r4
   29ef4:	bl	3b5d0 <flatcc_builder_get_buffer_size@@Base>
   29ef8:	str	r0, [r6]
   29efc:	mov	r0, r4
   29f00:	bl	37eb4 <flatcc_builder_clear@@Base>
   29f04:	mov	r0, r5
   29f08:	add	sp, sp, #232	; 0xe8
   29f0c:	pop	{r4, r5, r6, r7, r8, pc}

00029f10 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>:
   29f10:	push	{r4, r5, r6, r7, lr}
   29f14:	mov	r5, r0
   29f18:	sub	sp, sp, #236	; 0xec
   29f1c:	mov	r6, r1
   29f20:	mov	r0, sp
   29f24:	mov	r7, r2
   29f28:	bl	37d2c <flatcc_builder_init@@Base>
   29f2c:	add	r2, r5, #188	; 0xbc
   29f30:	ldr	r1, [r5, #184]	; 0xb8
   29f34:	mov	r3, r6
   29f38:	mov	r0, sp
   29f3c:	bl	289dc <__flatcc_fb_gen_c_json_printer@@Base+0xa3c>
   29f40:	mov	r4, sp
   29f44:	cmp	r0, #0
   29f48:	movne	r5, #0
   29f4c:	bne	29f68 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x58>
   29f50:	mov	r1, r7
   29f54:	mov	r0, sp
   29f58:	bl	3b710 <flatcc_builder_finalize_buffer@@Base>
   29f5c:	subs	r5, r0, #0
   29f60:	beq	29f68 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base+0x58>
   29f64:	bl	29758 <__flatcc_fb_gen_c_json_printer@@Base+0x17b8>
   29f68:	mov	r0, r4
   29f6c:	bl	37eb4 <flatcc_builder_clear@@Base>
   29f70:	mov	r0, r5
   29f74:	add	sp, sp, #236	; 0xec
   29f78:	pop	{r4, r5, r6, r7, pc}

00029f7c <__flatcc_fb_codegen_bfbs_to_file@@Base>:
   29f7c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   29f80:	mov	r6, r0
   29f84:	ldr	r4, [r0, #216]	; 0xd8
   29f88:	ldr	r5, [pc, #408]	; 2a128 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ac>
   29f8c:	cmp	r4, #0
   29f90:	sub	sp, sp, #16
   29f94:	mov	r7, r1
   29f98:	ldr	r9, [r0, #108]	; 0x6c
   29f9c:	ldr	r8, [r1, #160]	; 0xa0
   29fa0:	add	r5, pc, r5
   29fa4:	beq	2a0b4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x138>
   29fa8:	mov	r0, r4
   29fac:	bl	13f70 <strlen@plt>
   29fb0:	mov	sl, r0
   29fb4:	mov	r0, r8
   29fb8:	bl	13f70 <strlen@plt>
   29fbc:	cmp	r9, #0
   29fc0:	beq	2a064 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xe8>
   29fc4:	ldr	r3, [pc, #352]	; 2a12c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b0>
   29fc8:	ldr	r3, [r5, r3]
   29fcc:	ldr	r4, [r3]
   29fd0:	cmp	r4, #0
   29fd4:	beq	2a0f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x17c>
   29fd8:	mov	r1, r7
   29fdc:	mov	r0, r6
   29fe0:	add	r2, sp, #12
   29fe4:	bl	29f10 <__flatcc_fb_codegen_bfbs_alloc_buffer@@Base>
   29fe8:	subs	r7, r0, #0
   29fec:	beq	2a0c4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x148>
   29ff0:	mov	r3, r4
   29ff4:	ldr	r2, [sp, #12]
   29ff8:	mov	r1, #1
   29ffc:	bl	13f10 <fwrite@plt>
   2a000:	ldr	r3, [sp, #12]
   2a004:	cmp	r0, r3
   2a008:	moveq	r6, #0
   2a00c:	beq	2a034 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xb8>
   2a010:	ldr	r3, [pc, #280]	; 2a130 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b4>
   2a014:	ldr	r0, [pc, #280]	; 2a134 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b8>
   2a018:	mov	r2, #38	; 0x26
   2a01c:	ldr	r3, [r5, r3]
   2a020:	mov	r1, #1
   2a024:	add	r0, pc, r0
   2a028:	ldr	r3, [r3]
   2a02c:	mvn	r6, #0
   2a030:	bl	13f10 <fwrite@plt>
   2a034:	mov	r0, r7
   2a038:	bl	13ec8 <free@plt>
   2a03c:	ldr	r3, [pc, #232]	; 2a12c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b0>
   2a040:	ldr	r3, [r5, r3]
   2a044:	ldr	r3, [r3]
   2a048:	cmp	r3, r4
   2a04c:	beq	2a058 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xdc>
   2a050:	mov	r0, r4
   2a054:	bl	13fc4 <fclose@plt>
   2a058:	mov	r0, r6
   2a05c:	add	sp, sp, #16
   2a060:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2a064:	ldr	ip, [pc, #204]	; 2a138 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1bc>
   2a068:	mov	r9, #1
   2a06c:	add	ip, pc, ip
   2a070:	mov	r3, r0
   2a074:	mov	r2, r8
   2a078:	mov	r1, sl
   2a07c:	mov	r0, r4
   2a080:	str	ip, [sp]
   2a084:	str	r9, [sp, #4]
   2a088:	bl	2cc58 <__flatcc_fb_create_join_path_n@@Base>
   2a08c:	subs	r8, r0, #0
   2a090:	beq	2a100 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x184>
   2a094:	ldr	r1, [pc, #160]	; 2a13c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c0>
   2a098:	add	r1, pc, r1
   2a09c:	bl	13ebc <fopen@plt>
   2a0a0:	subs	r4, r0, #0
   2a0a4:	beq	2a0d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x15c>
   2a0a8:	mov	r0, r8
   2a0ac:	bl	13ec8 <free@plt>
   2a0b0:	b	29fd0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x54>
   2a0b4:	mov	sl, r4
   2a0b8:	ldr	r4, [pc, #128]	; 2a140 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c4>
   2a0bc:	add	r4, pc, r4
   2a0c0:	b	29fb4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x38>
   2a0c4:	ldr	r0, [pc, #120]	; 2a144 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1c8>
   2a0c8:	mvn	r6, #0
   2a0cc:	add	r0, pc, r0
   2a0d0:	bl	13f28 <puts@plt>
   2a0d4:	b	2a03c <__flatcc_fb_codegen_bfbs_to_file@@Base+0xc0>
   2a0d8:	ldr	r3, [pc, #80]	; 2a130 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b4>
   2a0dc:	ldr	r1, [pc, #100]	; 2a148 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1cc>
   2a0e0:	mov	r2, r8
   2a0e4:	ldr	r3, [r5, r3]
   2a0e8:	add	r1, pc, r1
   2a0ec:	ldr	r0, [r3]
   2a0f0:	bl	13f7c <fprintf@plt>
   2a0f4:	b	2a0a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x12c>
   2a0f8:	mvn	r6, #0
   2a0fc:	b	2a058 <__flatcc_fb_codegen_bfbs_to_file@@Base+0xdc>
   2a100:	ldr	r3, [pc, #40]	; 2a130 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1b4>
   2a104:	ldr	r0, [pc, #64]	; 2a14c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d0>
   2a108:	mov	r2, #34	; 0x22
   2a10c:	ldr	r3, [r5, r3]
   2a110:	mov	r1, r9
   2a114:	add	r0, pc, r0
   2a118:	ldr	r3, [r3]
   2a11c:	bl	13f10 <fwrite@plt>
   2a120:	mov	r0, r9
   2a124:	bl	13f64 <exit@plt>
   2a128:	andeq	r0, r4, r8, asr r0
   2a12c:	andeq	r0, r0, r8, lsr #1
   2a130:	muleq	r0, ip, r0
   2a134:	andeq	ip, r2, r4, asr #6
   2a138:	andeq	r5, r1, ip, lsl r3
   2a13c:	andeq	r5, r1, r8, lsl r4
   2a140:	andeq	pc, r1, ip, lsr #12
   2a144:	andeq	ip, r2, r8, ror r2
   2a148:	andeq	ip, r2, r8, lsr #4
   2a14c:	andeq	r5, r1, r0, asr r2
   2a150:	push	{r4, lr}
   2a154:	mov	r4, r0
   2a158:	ldr	r0, [r0]
   2a15c:	cmp	r0, #0
   2a160:	beq	2a168 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1ec>
   2a164:	bl	13ec8 <free@plt>
   2a168:	mov	r3, #0
   2a16c:	str	r3, [r4]
   2a170:	str	r3, [r4, #4]
   2a174:	str	r3, [r4, #8]
   2a178:	str	r3, [r4, #12]
   2a17c:	pop	{r4, pc}
   2a180:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a184:	sub	sp, sp, #28
   2a188:	ldr	r4, [pc, #568]	; 2a3c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x44c>
   2a18c:	cmp	r3, #0
   2a190:	str	r3, [sp, #8]
   2a194:	str	r0, [sp, #12]
   2a198:	add	r4, pc, r4
   2a19c:	beq	2a3a8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x42c>
   2a1a0:	ldr	r3, [sp, #8]
   2a1a4:	cmp	r3, #2
   2a1a8:	beq	2a360 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3e4>
   2a1ac:	ldr	r3, [sp, #8]
   2a1b0:	cmp	r3, #1
   2a1b4:	beq	2a340 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3c4>
   2a1b8:	ldr	r5, [sp, #12]
   2a1bc:	mov	r3, #179	; 0xb3
   2a1c0:	mov	r8, r1
   2a1c4:	ldr	r7, [r5, #12]
   2a1c8:	ldr	r1, [r5, #8]
   2a1cc:	mov	r9, r2
   2a1d0:	mul	r3, r3, r7
   2a1d4:	cmp	r1, r3, lsr #8
   2a1d8:	bcc	2a1f0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x274>
   2a1dc:	lsl	r1, r1, #1
   2a1e0:	bl	2a400 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x484>
   2a1e4:	cmp	r0, #0
   2a1e8:	bne	2a380 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x404>
   2a1ec:	ldr	r7, [r5, #12]
   2a1f0:	ldr	r3, [pc, #468]	; 2a3cc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x450>
   2a1f4:	ldr	r1, [sp, #12]
   2a1f8:	str	r3, [sp]
   2a1fc:	add	r3, sp, #16
   2a200:	str	r3, [sp, #4]
   2a204:	mov	r2, r9
   2a208:	mov	r3, #0
   2a20c:	mov	r0, r8
   2a210:	ldr	r6, [r1]
   2a214:	bl	3be90 <cmetrohash64_1@@Base>
   2a218:	ldr	r2, [sp, #64]	; 0x40
   2a21c:	ldr	r3, [sp, #16]
   2a220:	sub	r2, r2, #2
   2a224:	sub	r7, r7, #1
   2a228:	cmp	r2, #1
   2a22c:	and	r4, r7, r3
   2a230:	bls	2a2e8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x36c>
   2a234:	ldr	r5, [r6, r4, lsl #2]
   2a238:	add	r4, r6, r4, lsl #2
   2a23c:	cmp	r5, #0
   2a240:	moveq	sl, r4
   2a244:	beq	2a2a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x324>
   2a248:	add	fp, r3, #1
   2a24c:	mov	sl, #0
   2a250:	b	2a284 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x308>
   2a254:	mov	r2, r9
   2a258:	mov	r1, r5
   2a25c:	mov	r0, r8
   2a260:	bl	14018 <strncmp@plt>
   2a264:	cmp	r0, #0
   2a268:	beq	2a2c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x34c>
   2a26c:	and	r4, r7, fp
   2a270:	add	fp, fp, #1
   2a274:	ldr	r5, [r6, r4, lsl #2]
   2a278:	add	r4, r6, r4, lsl #2
   2a27c:	cmp	r5, #0
   2a280:	beq	2a298 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x31c>
   2a284:	cmp	r5, #2
   2a288:	bne	2a254 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2d8>
   2a28c:	cmp	sl, #0
   2a290:	moveq	sl, r4
   2a294:	b	2a26c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x2f0>
   2a298:	cmp	sl, #0
   2a29c:	moveq	sl, r4
   2a2a0:	ldr	r2, [sp, #12]
   2a2a4:	mov	r5, #0
   2a2a8:	ldr	r3, [r2, #8]
   2a2ac:	add	r3, r3, #1
   2a2b0:	str	r3, [r2, #8]
   2a2b4:	ldr	r3, [sp, #8]
   2a2b8:	str	r3, [sl]
   2a2bc:	mov	r0, r5
   2a2c0:	add	sp, sp, #28
   2a2c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a2c8:	ldr	r3, [sp, #64]	; 0x40
   2a2cc:	cmp	r3, #0
   2a2d0:	bne	2a2bc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x340>
   2a2d4:	ldr	r3, [sp, #8]
   2a2d8:	mov	r0, r5
   2a2dc:	str	r3, [r4]
   2a2e0:	add	sp, sp, #28
   2a2e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a2e8:	ldr	r0, [sp, #12]
   2a2ec:	ldr	r1, [r6, r4, lsl #2]
   2a2f0:	add	r4, r6, r4, lsl #2
   2a2f4:	ldr	r2, [r0, #8]
   2a2f8:	cmp	r1, #0
   2a2fc:	cmpne	r1, #2
   2a300:	add	r2, r2, #1
   2a304:	str	r2, [r0, #8]
   2a308:	beq	2a330 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x3b4>
   2a30c:	add	r3, r3, #1
   2a310:	and	r2, r7, r3
   2a314:	add	r3, r3, #1
   2a318:	ldr	r1, [r6, r2, lsl #2]
   2a31c:	add	r2, r6, r2, lsl #2
   2a320:	cmp	r1, #0
   2a324:	cmpne	r1, #2
   2a328:	bne	2a310 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x394>
   2a32c:	mov	r4, r2
   2a330:	ldr	r3, [sp, #8]
   2a334:	mov	r5, #0
   2a338:	str	r3, [r4]
   2a33c:	b	2a2bc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x340>
   2a340:	ldr	r3, [pc, #136]	; 2a3d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x454>
   2a344:	ldr	r1, [pc, #136]	; 2a3d4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x458>
   2a348:	ldr	r0, [pc, #136]	; 2a3d8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x45c>
   2a34c:	add	r3, pc, r3
   2a350:	mov	r2, #116	; 0x74
   2a354:	add	r1, pc, r1
   2a358:	add	r0, pc, r0
   2a35c:	bl	14030 <__assert_fail@plt>
   2a360:	ldr	r3, [pc, #116]	; 2a3dc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x460>
   2a364:	ldr	r1, [pc, #116]	; 2a3e0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x464>
   2a368:	ldr	r0, [pc, #116]	; 2a3e4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x468>
   2a36c:	add	r3, pc, r3
   2a370:	mov	r2, #115	; 0x73
   2a374:	add	r1, pc, r1
   2a378:	add	r0, pc, r0
   2a37c:	bl	14030 <__assert_fail@plt>
   2a380:	ldr	r3, [pc, #96]	; 2a3e8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x46c>
   2a384:	ldr	r2, [pc, #96]	; 2a3ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x470>
   2a388:	ldr	r1, [pc, #96]	; 2a3f0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x474>
   2a38c:	ldr	r3, [r4, r3]
   2a390:	add	r2, pc, r2
   2a394:	add	r1, pc, r1
   2a398:	ldr	r0, [r3]
   2a39c:	bl	13f7c <fprintf@plt>
   2a3a0:	mov	r0, #1
   2a3a4:	bl	13f64 <exit@plt>
   2a3a8:	ldr	r3, [pc, #68]	; 2a3f4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x478>
   2a3ac:	ldr	r1, [pc, #68]	; 2a3f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x47c>
   2a3b0:	ldr	r0, [pc, #68]	; 2a3fc <__flatcc_fb_codegen_bfbs_to_file@@Base+0x480>
   2a3b4:	add	r3, pc, r3
   2a3b8:	mov	r2, #114	; 0x72
   2a3bc:	add	r1, pc, r1
   2a3c0:	add	r0, pc, r0
   2a3c4:	bl	14030 <__assert_fail@plt>
   2a3c8:	andeq	pc, r3, r0, ror #28
   2a3cc:	svccs	0x00693b52
   2a3d0:	andeq	ip, r2, r4, asr #32
   2a3d4:	andeq	ip, r2, r4, asr r0
   2a3d8:	andeq	ip, r2, r8, ror #1
   2a3dc:	andeq	ip, r2, r4, lsr #32
   2a3e0:	andeq	ip, r2, r4, lsr r0
   2a3e4:	strheq	ip, [r2], -r0
   2a3e8:	muleq	r0, ip, r0
   2a3ec:	andeq	ip, r2, r8, asr #1
   2a3f0:	strdeq	ip, [r2], -r8
   2a3f4:	ldrdeq	fp, [r2], -ip
   2a3f8:	andeq	fp, r2, ip, ror #31
   2a3fc:	andeq	ip, r2, r0, asr r0
   2a400:	ldr	r3, [r0, #8]
   2a404:	push	{r4, r5, r6, r7, r8, r9, lr}
   2a408:	cmp	r1, r3
   2a40c:	movcc	r1, r3
   2a410:	cmp	r1, #2
   2a414:	sub	sp, sp, #28
   2a418:	mov	r7, r0
   2a41c:	ldr	r6, [r0]
   2a420:	mov	r4, #4
   2a424:	bls	2a43c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4c0>
   2a428:	mov	r2, #179	; 0xb3
   2a42c:	lsl	r4, r4, #1
   2a430:	mul	r3, r2, r4
   2a434:	cmp	r1, r3, lsr #8
   2a438:	bhi	2a42c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x4b0>
   2a43c:	mov	r1, #4
   2a440:	mov	r0, r4
   2a444:	bl	13e98 <calloc@plt>
   2a448:	cmp	r0, #0
   2a44c:	str	r0, [sp, #8]
   2a450:	beq	2a500 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x584>
   2a454:	ldr	r3, [r7, #12]
   2a458:	mov	r5, #0
   2a45c:	cmp	r3, r5
   2a460:	str	r4, [sp, #20]
   2a464:	str	r5, [sp, #12]
   2a468:	str	r5, [sp, #16]
   2a46c:	subne	r6, r6, #4
   2a470:	addne	r8, sp, #8
   2a474:	movne	r9, #3
   2a478:	bne	2a488 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x50c>
   2a47c:	b	2a4f8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x57c>
   2a480:	cmp	r3, r5
   2a484:	bls	2a4c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x54c>
   2a488:	ldr	r4, [r6, #4]!
   2a48c:	add	r5, r5, #1
   2a490:	cmp	r4, #0
   2a494:	cmpne	r4, #2
   2a498:	beq	2a480 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x504>
   2a49c:	mov	r0, r4
   2a4a0:	bl	13f70 <strlen@plt>
   2a4a4:	mov	r3, r4
   2a4a8:	str	r9, [sp]
   2a4ac:	mov	r1, r4
   2a4b0:	mov	r2, r0
   2a4b4:	mov	r0, r8
   2a4b8:	bl	2a180 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x204>
   2a4bc:	ldr	r3, [r7, #12]
   2a4c0:	cmp	r3, r5
   2a4c4:	bhi	2a488 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x50c>
   2a4c8:	mov	r0, r7
   2a4cc:	bl	2a150 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d4>
   2a4d0:	mov	ip, r8
   2a4d4:	mov	lr, #0
   2a4d8:	ldm	ip!, {r0, r1, r2, r3}
   2a4dc:	str	r0, [r7]
   2a4e0:	str	r1, [r7, #4]
   2a4e4:	str	r2, [r7, #8]
   2a4e8:	str	r3, [r7, #12]
   2a4ec:	mov	r0, lr
   2a4f0:	add	sp, sp, #28
   2a4f4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2a4f8:	add	r8, sp, #8
   2a4fc:	b	2a4c8 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x54c>
   2a500:	mvn	lr, #0
   2a504:	b	2a4ec <__flatcc_fb_codegen_bfbs_to_file@@Base+0x570>
   2a508:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2a50c:	sub	sp, sp, #20
   2a510:	ldr	r5, [r0]
   2a514:	cmp	r5, #0
   2a518:	beq	2a5a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x624>
   2a51c:	ldr	r3, [pc, #172]	; 2a5d0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x654>
   2a520:	ldr	r7, [r0, #12]
   2a524:	str	r3, [sp]
   2a528:	add	r3, sp, #8
   2a52c:	str	r3, [sp, #4]
   2a530:	mov	r9, r0
   2a534:	mov	r3, #0
   2a538:	mov	r0, r1
   2a53c:	mov	r8, r2
   2a540:	mov	r6, r1
   2a544:	bl	3be90 <cmetrohash64_1@@Base>
   2a548:	ldr	sl, [sp, #8]
   2a54c:	sub	r7, r7, #1
   2a550:	and	r3, r7, sl
   2a554:	ldr	fp, [r5, r3, lsl #2]
   2a558:	add	r4, r5, r3, lsl #2
   2a55c:	cmp	fp, #0
   2a560:	beq	2a5a0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x624>
   2a564:	add	sl, sl, #1
   2a568:	cmp	fp, #2
   2a56c:	mov	r1, fp
   2a570:	mov	r2, r8
   2a574:	mov	r0, r6
   2a578:	beq	2a588 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x60c>
   2a57c:	bl	14018 <strncmp@plt>
   2a580:	cmp	r0, #0
   2a584:	beq	2a5b0 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x634>
   2a588:	and	r3, sl, r7
   2a58c:	add	sl, sl, #1
   2a590:	ldr	fp, [r5, r3, lsl #2]
   2a594:	add	r4, r5, r3, lsl #2
   2a598:	cmp	fp, #0
   2a59c:	bne	2a568 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x5ec>
   2a5a0:	mov	fp, #0
   2a5a4:	mov	r0, fp
   2a5a8:	add	sp, sp, #20
   2a5ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a5b0:	ldr	r3, [r9, #8]
   2a5b4:	mov	r2, #2
   2a5b8:	sub	r3, r3, #1
   2a5bc:	str	r2, [r4]
   2a5c0:	mov	r0, fp
   2a5c4:	str	r3, [r9, #8]
   2a5c8:	add	sp, sp, #20
   2a5cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2a5d0:	svccs	0x00693b52
   2a5d4:	push	{r4, r5, r6, r7, r8, r9, lr}
   2a5d8:	subs	r8, r0, #0
   2a5dc:	sub	sp, sp, #20
   2a5e0:	beq	2a660 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6e4>
   2a5e4:	mov	r7, r3
   2a5e8:	ldr	r3, [pc, #128]	; 2a670 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6f4>
   2a5ec:	ldr	r9, [r1]
   2a5f0:	mov	r6, r2
   2a5f4:	str	r3, [sp]
   2a5f8:	add	r3, sp, #8
   2a5fc:	str	r3, [sp, #4]
   2a600:	mov	r2, r7
   2a604:	mov	r3, #0
   2a608:	mov	r0, r6
   2a60c:	bl	3be90 <cmetrohash64_1@@Base>
   2a610:	ldr	r5, [sp, #8]
   2a614:	sub	r9, r9, #1
   2a618:	and	r3, r9, r5
   2a61c:	ldr	r4, [r8, r3, lsl #2]
   2a620:	cmp	r4, #0
   2a624:	beq	2a660 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6e4>
   2a628:	add	r5, r5, #1
   2a62c:	cmp	r4, #2
   2a630:	mov	r1, r4
   2a634:	mov	r2, r7
   2a638:	mov	r0, r6
   2a63c:	beq	2a64c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6d0>
   2a640:	bl	14018 <strncmp@plt>
   2a644:	cmp	r0, #0
   2a648:	beq	2a664 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6e8>
   2a64c:	and	r1, r9, r5
   2a650:	add	r5, r5, #1
   2a654:	ldr	r4, [r8, r1, lsl #2]
   2a658:	cmp	r4, #0
   2a65c:	bne	2a62c <__flatcc_fb_codegen_bfbs_to_file@@Base+0x6b0>
   2a660:	mov	r4, #0
   2a664:	mov	r0, r4
   2a668:	add	sp, sp, #20
   2a66c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2a670:	svccs	0x00693b52

0002a674 <str_set_clear@@Base>:
   2a674:	b	2a150 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d4>

0002a678 <str_set_destroy@@Base>:
   2a678:	push	{r4, r5, r6, r7, r8, lr}
   2a67c:	subs	r7, r1, #0
   2a680:	mov	r6, r0
   2a684:	beq	2a6d8 <str_set_destroy@@Base+0x60>
   2a688:	ldr	r3, [r0, #12]
   2a68c:	ldr	r5, [r0]
   2a690:	cmp	r3, #0
   2a694:	beq	2a6d8 <str_set_destroy@@Base+0x60>
   2a698:	mov	r8, r2
   2a69c:	sub	r5, r5, #4
   2a6a0:	mov	r4, #0
   2a6a4:	b	2a6b0 <str_set_destroy@@Base+0x38>
   2a6a8:	cmp	r4, r3
   2a6ac:	bcs	2a6d8 <str_set_destroy@@Base+0x60>
   2a6b0:	ldr	r1, [r5, #4]!
   2a6b4:	add	r4, r4, #1
   2a6b8:	cmp	r1, #0
   2a6bc:	cmpne	r1, #2
   2a6c0:	beq	2a6a8 <str_set_destroy@@Base+0x30>
   2a6c4:	mov	r0, r8
   2a6c8:	blx	r7
   2a6cc:	ldr	r3, [r6, #12]
   2a6d0:	cmp	r4, r3
   2a6d4:	bcc	2a6b0 <str_set_destroy@@Base+0x38>
   2a6d8:	mov	r0, r6
   2a6dc:	pop	{r4, r5, r6, r7, r8, lr}
   2a6e0:	b	2a150 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x1d4>

0002a6e4 <str_set_init@@Base>:
   2a6e4:	cmp	r1, #2
   2a6e8:	push	{r4, r5, r6, lr}
   2a6ec:	mov	r4, #4
   2a6f0:	mov	r5, r0
   2a6f4:	bls	2a70c <str_set_init@@Base+0x28>
   2a6f8:	mov	r2, #179	; 0xb3
   2a6fc:	lsl	r4, r4, #1
   2a700:	mul	r3, r2, r4
   2a704:	cmp	r1, r3, lsr #8
   2a708:	bhi	2a6fc <str_set_init@@Base+0x18>
   2a70c:	mov	r1, #4
   2a710:	mov	r0, r4
   2a714:	bl	13e98 <calloc@plt>
   2a718:	cmp	r0, #0
   2a71c:	str	r0, [r5]
   2a720:	movne	r0, #0
   2a724:	strne	r4, [r5, #12]
   2a728:	strne	r0, [r5, #4]
   2a72c:	strne	r0, [r5, #8]
   2a730:	mvneq	r0, #0
   2a734:	pop	{r4, r5, r6, pc}

0002a738 <str_set_resize@@Base>:
   2a738:	b	2a400 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x484>

0002a73c <str_set_insert@@Base>:
   2a73c:	b	2a180 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x204>

0002a740 <str_set_insert_item@@Base>:
   2a740:	push	{r4, r5, r6, lr}
   2a744:	mov	r5, r0
   2a748:	sub	sp, sp, #8
   2a74c:	mov	r0, r1
   2a750:	mov	r4, r1
   2a754:	mov	r6, r2
   2a758:	bl	13f70 <strlen@plt>
   2a75c:	str	r6, [sp]
   2a760:	mov	r3, r4
   2a764:	mov	r1, r4
   2a768:	mov	r2, r0
   2a76c:	mov	r0, r5
   2a770:	bl	2a180 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x204>
   2a774:	add	sp, sp, #8
   2a778:	pop	{r4, r5, r6, pc}

0002a77c <str_set_find@@Base>:
   2a77c:	mov	ip, r0
   2a780:	mov	r3, r2
   2a784:	ldr	r0, [r0]
   2a788:	mov	r2, r1
   2a78c:	add	r1, ip, #12
   2a790:	b	2a5d4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x658>

0002a794 <str_set_find_item@@Base>:
   2a794:	push	{r4, r5, r6, lr}
   2a798:	mov	r4, r0
   2a79c:	mov	r0, r1
   2a7a0:	mov	r5, r1
   2a7a4:	bl	13f70 <strlen@plt>
   2a7a8:	mov	r2, r5
   2a7ac:	add	r1, r4, #12
   2a7b0:	mov	r3, r0
   2a7b4:	ldr	r0, [r4]
   2a7b8:	pop	{r4, r5, r6, lr}
   2a7bc:	b	2a5d4 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x658>

0002a7c0 <str_set_remove@@Base>:
   2a7c0:	b	2a508 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x58c>

0002a7c4 <str_set_remove_item@@Base>:
   2a7c4:	push	{r4, r5, r6, lr}
   2a7c8:	mov	r5, r0
   2a7cc:	mov	r0, r1
   2a7d0:	mov	r4, r1
   2a7d4:	bl	13f70 <strlen@plt>
   2a7d8:	mov	r1, r4
   2a7dc:	mov	r2, r0
   2a7e0:	mov	r0, r5
   2a7e4:	pop	{r4, r5, r6, lr}
   2a7e8:	b	2a508 <__flatcc_fb_codegen_bfbs_to_file@@Base+0x58c>

0002a7ec <str_set_visit@@Base>:
   2a7ec:	ldr	r3, [r0, #12]
   2a7f0:	push	{r4, r5, r6, r7, r8, lr}
   2a7f4:	cmp	r3, #0
   2a7f8:	ldr	r5, [r0]
   2a7fc:	popeq	{r4, r5, r6, r7, r8, pc}
   2a800:	mov	r7, r2
   2a804:	mov	r6, r1
   2a808:	mov	r8, r0
   2a80c:	sub	r5, r5, #4
   2a810:	mov	r4, #0
   2a814:	b	2a820 <str_set_visit@@Base+0x34>
   2a818:	cmp	r4, r3
   2a81c:	bcs	2a848 <str_set_visit@@Base+0x5c>
   2a820:	ldr	r1, [r5, #4]!
   2a824:	add	r4, r4, #1
   2a828:	cmp	r1, #0
   2a82c:	cmpne	r1, #2
   2a830:	beq	2a818 <str_set_visit@@Base+0x2c>
   2a834:	mov	r0, r7
   2a838:	blx	r6
   2a83c:	ldr	r3, [r8, #12]
   2a840:	cmp	r4, r3
   2a844:	bcc	2a820 <str_set_visit@@Base+0x34>
   2a848:	pop	{r4, r5, r6, r7, r8, pc}
   2a84c:	push	{r4, lr}
   2a850:	mov	r4, r0
   2a854:	ldr	r0, [r0]
   2a858:	cmp	r0, #0
   2a85c:	beq	2a864 <str_set_visit@@Base+0x78>
   2a860:	bl	13ec8 <free@plt>
   2a864:	mov	r3, #0
   2a868:	str	r3, [r4]
   2a86c:	str	r3, [r4, #4]
   2a870:	str	r3, [r4, #8]
   2a874:	str	r3, [r4, #12]
   2a878:	pop	{r4, pc}
   2a87c:	push	{r4, r5, r6, r7, r8, r9, lr}
   2a880:	subs	r7, r2, #0
   2a884:	ldr	r4, [pc, #492]	; 2aa78 <str_set_visit@@Base+0x28c>
   2a888:	sub	sp, sp, #28
   2a88c:	add	r4, pc, r4
   2a890:	beq	2aa58 <str_set_visit@@Base+0x26c>
   2a894:	cmp	r7, #2
   2a898:	beq	2aa10 <str_set_visit@@Base+0x224>
   2a89c:	cmp	r7, #1
   2a8a0:	beq	2a9f0 <str_set_visit@@Base+0x204>
   2a8a4:	ldr	r9, [r0, #12]
   2a8a8:	mov	r8, r3
   2a8ac:	mov	r3, #179	; 0xb3
   2a8b0:	mov	r5, r1
   2a8b4:	mul	r3, r3, r9
   2a8b8:	ldr	r1, [r0, #8]
   2a8bc:	mov	r6, r0
   2a8c0:	cmp	r1, r3, lsr #8
   2a8c4:	bcc	2a8dc <str_set_visit@@Base+0xf0>
   2a8c8:	lsl	r1, r1, #1
   2a8cc:	bl	2aab0 <str_set_visit@@Base+0x2c4>
   2a8d0:	cmp	r0, #0
   2a8d4:	bne	2aa30 <str_set_visit@@Base+0x244>
   2a8d8:	ldr	r9, [r6, #12]
   2a8dc:	add	r0, sp, #24
   2a8e0:	ldr	r3, [pc, #404]	; 2aa7c <str_set_visit@@Base+0x290>
   2a8e4:	str	r5, [r0, #-12]!
   2a8e8:	str	r3, [sp]
   2a8ec:	add	r3, sp, #16
   2a8f0:	str	r3, [sp, #4]
   2a8f4:	mov	r2, #4
   2a8f8:	mov	r3, #0
   2a8fc:	ldr	r4, [r6]
   2a900:	bl	3be90 <cmetrohash64_1@@Base>
   2a904:	sub	r3, r8, #2
   2a908:	ldr	r2, [sp, #16]
   2a90c:	sub	r9, r9, #1
   2a910:	cmp	r3, #1
   2a914:	and	r3, r9, r2
   2a918:	bls	2a9a4 <str_set_visit@@Base+0x1b8>
   2a91c:	ldr	r0, [r4, r3, lsl #2]
   2a920:	add	r3, r4, r3, lsl #2
   2a924:	cmp	r0, #0
   2a928:	moveq	r1, r3
   2a92c:	beq	2a978 <str_set_visit@@Base+0x18c>
   2a930:	add	r2, r2, #1
   2a934:	mov	r1, #0
   2a938:	b	2a95c <str_set_visit@@Base+0x170>
   2a93c:	cmp	r5, r0
   2a940:	beq	2a994 <str_set_visit@@Base+0x1a8>
   2a944:	and	r3, r9, r2
   2a948:	add	r2, r2, #1
   2a94c:	ldr	r0, [r4, r3, lsl #2]
   2a950:	add	r3, r4, r3, lsl #2
   2a954:	cmp	r0, #0
   2a958:	beq	2a970 <str_set_visit@@Base+0x184>
   2a95c:	cmp	r0, #2
   2a960:	bne	2a93c <str_set_visit@@Base+0x150>
   2a964:	cmp	r1, #0
   2a968:	moveq	r1, r3
   2a96c:	b	2a944 <str_set_visit@@Base+0x158>
   2a970:	cmp	r1, #0
   2a974:	moveq	r1, r3
   2a978:	ldr	r3, [r6, #8]
   2a97c:	mov	r0, #0
   2a980:	add	r3, r3, #1
   2a984:	str	r3, [r6, #8]
   2a988:	str	r7, [r1]
   2a98c:	add	sp, sp, #28
   2a990:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2a994:	cmp	r8, #0
   2a998:	streq	r7, [r3]
   2a99c:	add	sp, sp, #28
   2a9a0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2a9a4:	ldr	r0, [r4, r3, lsl #2]
   2a9a8:	ldr	r1, [r6, #8]
   2a9ac:	cmp	r0, #0
   2a9b0:	cmpne	r0, #2
   2a9b4:	add	r1, r1, #1
   2a9b8:	str	r1, [r6, #8]
   2a9bc:	add	r3, r4, r3, lsl #2
   2a9c0:	beq	2a9e4 <str_set_visit@@Base+0x1f8>
   2a9c4:	add	r2, r2, #1
   2a9c8:	and	r3, r9, r2
   2a9cc:	add	r2, r2, #1
   2a9d0:	ldr	r1, [r4, r3, lsl #2]
   2a9d4:	add	r3, r4, r3, lsl #2
   2a9d8:	cmp	r1, #0
   2a9dc:	cmpne	r1, #2
   2a9e0:	bne	2a9c8 <str_set_visit@@Base+0x1dc>
   2a9e4:	str	r7, [r3]
   2a9e8:	mov	r0, #0
   2a9ec:	b	2a98c <str_set_visit@@Base+0x1a0>
   2a9f0:	ldr	r3, [pc, #136]	; 2aa80 <str_set_visit@@Base+0x294>
   2a9f4:	ldr	r1, [pc, #136]	; 2aa84 <str_set_visit@@Base+0x298>
   2a9f8:	ldr	r0, [pc, #136]	; 2aa88 <str_set_visit@@Base+0x29c>
   2a9fc:	add	r3, pc, r3
   2aa00:	mov	r2, #116	; 0x74
   2aa04:	add	r1, pc, r1
   2aa08:	add	r0, pc, r0
   2aa0c:	bl	14030 <__assert_fail@plt>
   2aa10:	ldr	r3, [pc, #116]	; 2aa8c <str_set_visit@@Base+0x2a0>
   2aa14:	ldr	r1, [pc, #116]	; 2aa90 <str_set_visit@@Base+0x2a4>
   2aa18:	ldr	r0, [pc, #116]	; 2aa94 <str_set_visit@@Base+0x2a8>
   2aa1c:	add	r3, pc, r3
   2aa20:	mov	r2, #115	; 0x73
   2aa24:	add	r1, pc, r1
   2aa28:	add	r0, pc, r0
   2aa2c:	bl	14030 <__assert_fail@plt>
   2aa30:	ldr	r3, [pc, #96]	; 2aa98 <str_set_visit@@Base+0x2ac>
   2aa34:	ldr	r2, [pc, #96]	; 2aa9c <str_set_visit@@Base+0x2b0>
   2aa38:	ldr	r1, [pc, #96]	; 2aaa0 <str_set_visit@@Base+0x2b4>
   2aa3c:	ldr	r3, [r4, r3]
   2aa40:	add	r2, pc, r2
   2aa44:	add	r1, pc, r1
   2aa48:	ldr	r0, [r3]
   2aa4c:	bl	13f7c <fprintf@plt>
   2aa50:	mov	r0, #1
   2aa54:	bl	13f64 <exit@plt>
   2aa58:	ldr	r3, [pc, #68]	; 2aaa4 <str_set_visit@@Base+0x2b8>
   2aa5c:	ldr	r1, [pc, #68]	; 2aaa8 <str_set_visit@@Base+0x2bc>
   2aa60:	ldr	r0, [pc, #68]	; 2aaac <str_set_visit@@Base+0x2c0>
   2aa64:	add	r3, pc, r3
   2aa68:	mov	r2, #114	; 0x72
   2aa6c:	add	r1, pc, r1
   2aa70:	add	r0, pc, r0
   2aa74:	bl	14030 <__assert_fail@plt>
   2aa78:	andeq	pc, r3, ip, ror #14
   2aa7c:	svccs	0x00693b52
   2aa80:	andeq	fp, r2, r8, lsr #21
   2aa84:	andeq	fp, r2, r4, lsr #19
   2aa88:	andeq	fp, r2, r8, lsr sl
   2aa8c:	andeq	fp, r2, r8, lsl #21
   2aa90:	andeq	fp, r2, r4, lsl #19
   2aa94:	andeq	fp, r2, r0, lsl #20
   2aa98:	muleq	r0, ip, r0
   2aa9c:	andeq	fp, r2, r8, lsl sl
   2aaa0:	andeq	fp, r2, r8, asr #20
   2aaa4:	andeq	fp, r2, r0, asr #20
   2aaa8:	andeq	fp, r2, ip, lsr r9
   2aaac:	andeq	fp, r2, r0, lsr #19
   2aab0:	ldr	r3, [r0, #8]
   2aab4:	push	{r4, r5, r6, r7, r8, lr}
   2aab8:	cmp	r1, r3
   2aabc:	movcc	r1, r3
   2aac0:	cmp	r1, #2
   2aac4:	sub	sp, sp, #16
   2aac8:	mov	r7, r0
   2aacc:	ldr	r6, [r0]
   2aad0:	mov	r5, #4
   2aad4:	bls	2aaec <str_set_visit@@Base+0x300>
   2aad8:	mov	r2, #179	; 0xb3
   2aadc:	lsl	r5, r5, #1
   2aae0:	mul	r3, r2, r5
   2aae4:	cmp	r1, r3, lsr #8
   2aae8:	bhi	2aadc <str_set_visit@@Base+0x2f0>
   2aaec:	mov	r1, #4
   2aaf0:	mov	r0, r5
   2aaf4:	bl	13e98 <calloc@plt>
   2aaf8:	cmp	r0, #0
   2aafc:	str	r0, [sp]
   2ab00:	beq	2aba0 <str_set_visit@@Base+0x3b4>
   2ab04:	ldr	r3, [r7, #12]
   2ab08:	mov	r4, #0
   2ab0c:	cmp	r3, r4
   2ab10:	str	r5, [sp, #12]
   2ab14:	str	r4, [sp, #4]
   2ab18:	subne	r5, r6, #4
   2ab1c:	str	r4, [sp, #8]
   2ab20:	movne	r6, sp
   2ab24:	movne	r8, #3
   2ab28:	bne	2ab38 <str_set_visit@@Base+0x34c>
   2ab2c:	b	2ab98 <str_set_visit@@Base+0x3ac>
   2ab30:	cmp	r3, r4
   2ab34:	bls	2ab68 <str_set_visit@@Base+0x37c>
   2ab38:	ldr	r2, [r5, #4]!
   2ab3c:	add	r4, r4, #1
   2ab40:	cmp	r2, #0
   2ab44:	cmpne	r2, #2
   2ab48:	beq	2ab30 <str_set_visit@@Base+0x344>
   2ab4c:	mov	r3, r8
   2ab50:	mov	r1, r2
   2ab54:	mov	r0, r6
   2ab58:	bl	2a87c <str_set_visit@@Base+0x90>
   2ab5c:	ldr	r3, [r7, #12]
   2ab60:	cmp	r3, r4
   2ab64:	bhi	2ab38 <str_set_visit@@Base+0x34c>
   2ab68:	mov	r0, r7
   2ab6c:	bl	2a84c <str_set_visit@@Base+0x60>
   2ab70:	mov	ip, r6
   2ab74:	mov	lr, #0
   2ab78:	ldm	ip!, {r0, r1, r2, r3}
   2ab7c:	str	r0, [r7]
   2ab80:	str	r1, [r7, #4]
   2ab84:	str	r2, [r7, #8]
   2ab88:	str	r3, [r7, #12]
   2ab8c:	mov	r0, lr
   2ab90:	add	sp, sp, #16
   2ab94:	pop	{r4, r5, r6, r7, r8, pc}
   2ab98:	mov	r6, sp
   2ab9c:	b	2ab68 <str_set_visit@@Base+0x37c>
   2aba0:	mvn	lr, #0
   2aba4:	b	2ab8c <str_set_visit@@Base+0x3a0>
   2aba8:	push	{r4, r5, r6, lr}
   2abac:	subs	r5, r0, #0
   2abb0:	sub	sp, sp, #24
   2abb4:	beq	2ac24 <str_set_visit@@Base+0x438>
   2abb8:	add	r0, sp, #24
   2abbc:	ldr	r3, [pc, #108]	; 2ac30 <str_set_visit@@Base+0x444>
   2abc0:	str	r2, [r0, #-12]!
   2abc4:	ldr	r4, [r1]
   2abc8:	str	r3, [sp]
   2abcc:	add	r3, sp, #16
   2abd0:	str	r3, [sp, #4]
   2abd4:	mov	r6, r2
   2abd8:	mov	r3, #0
   2abdc:	mov	r2, #4
   2abe0:	bl	3be90 <cmetrohash64_1@@Base>
   2abe4:	ldr	r3, [sp, #16]
   2abe8:	sub	r4, r4, #1
   2abec:	and	r2, r4, r3
   2abf0:	ldr	r0, [r5, r2, lsl #2]
   2abf4:	cmp	r0, #0
   2abf8:	beq	2ac24 <str_set_visit@@Base+0x438>
   2abfc:	add	r3, r3, #1
   2ac00:	cmp	r0, #2
   2ac04:	and	r1, r3, r4
   2ac08:	beq	2ac14 <str_set_visit@@Base+0x428>
   2ac0c:	cmp	r6, r0
   2ac10:	beq	2ac28 <str_set_visit@@Base+0x43c>
   2ac14:	ldr	r0, [r5, r1, lsl #2]
   2ac18:	add	r3, r3, #1
   2ac1c:	cmp	r0, #0
   2ac20:	bne	2ac00 <str_set_visit@@Base+0x414>
   2ac24:	mov	r0, #0
   2ac28:	add	sp, sp, #24
   2ac2c:	pop	{r4, r5, r6, pc}
   2ac30:	svccs	0x00693b52
   2ac34:	push	{r4, r5, r6, r7, lr}
   2ac38:	sub	sp, sp, #28
   2ac3c:	ldr	r4, [r0]
   2ac40:	cmp	r4, #0
   2ac44:	beq	2acc0 <str_set_visit@@Base+0x4d4>
   2ac48:	mov	r7, r0
   2ac4c:	ldr	r3, [pc, #148]	; 2ace8 <str_set_visit@@Base+0x4fc>
   2ac50:	add	r0, sp, #24
   2ac54:	ldr	r5, [r7, #12]
   2ac58:	str	r1, [r0, #-12]!
   2ac5c:	str	r3, [sp]
   2ac60:	add	r3, sp, #16
   2ac64:	str	r3, [sp, #4]
   2ac68:	mov	r2, #4
   2ac6c:	mov	r3, #0
   2ac70:	mov	r6, r1
   2ac74:	bl	3be90 <cmetrohash64_1@@Base>
   2ac78:	ldr	r3, [sp, #16]
   2ac7c:	sub	r5, r5, #1
   2ac80:	and	ip, r5, r3
   2ac84:	ldr	r0, [r4, ip, lsl #2]
   2ac88:	add	ip, r4, ip, lsl #2
   2ac8c:	cmp	r0, #0
   2ac90:	beq	2acc0 <str_set_visit@@Base+0x4d4>
   2ac94:	add	r3, r3, #1
   2ac98:	cmp	r0, #2
   2ac9c:	and	r2, r5, r3
   2aca0:	beq	2acac <str_set_visit@@Base+0x4c0>
   2aca4:	cmp	r6, r0
   2aca8:	beq	2accc <str_set_visit@@Base+0x4e0>
   2acac:	ldr	r0, [r4, r2, lsl #2]
   2acb0:	add	r3, r3, #1
   2acb4:	cmp	r0, #0
   2acb8:	add	ip, r4, r2, lsl #2
   2acbc:	bne	2ac98 <str_set_visit@@Base+0x4ac>
   2acc0:	mov	r0, #0
   2acc4:	add	sp, sp, #28
   2acc8:	pop	{r4, r5, r6, r7, pc}
   2accc:	ldr	r3, [r7, #8]
   2acd0:	mov	r2, #2
   2acd4:	sub	r3, r3, #1
   2acd8:	str	r2, [ip]
   2acdc:	str	r3, [r7, #8]
   2ace0:	add	sp, sp, #28
   2ace4:	pop	{r4, r5, r6, r7, pc}
   2ace8:	svccs	0x00693b52

0002acec <ptr_set_clear@@Base>:
   2acec:	b	2a84c <str_set_visit@@Base+0x60>

0002acf0 <ptr_set_destroy@@Base>:
   2acf0:	push	{r4, r5, r6, r7, r8, lr}
   2acf4:	subs	r7, r1, #0
   2acf8:	mov	r6, r0
   2acfc:	beq	2ad50 <ptr_set_destroy@@Base+0x60>
   2ad00:	ldr	r3, [r0, #12]
   2ad04:	ldr	r5, [r0]
   2ad08:	cmp	r3, #0
   2ad0c:	beq	2ad50 <ptr_set_destroy@@Base+0x60>
   2ad10:	mov	r8, r2
   2ad14:	sub	r5, r5, #4
   2ad18:	mov	r4, #0
   2ad1c:	b	2ad28 <ptr_set_destroy@@Base+0x38>
   2ad20:	cmp	r4, r3
   2ad24:	bcs	2ad50 <ptr_set_destroy@@Base+0x60>
   2ad28:	ldr	r1, [r5, #4]!
   2ad2c:	add	r4, r4, #1
   2ad30:	cmp	r1, #0
   2ad34:	cmpne	r1, #2
   2ad38:	beq	2ad20 <ptr_set_destroy@@Base+0x30>
   2ad3c:	mov	r0, r8
   2ad40:	blx	r7
   2ad44:	ldr	r3, [r6, #12]
   2ad48:	cmp	r4, r3
   2ad4c:	bcc	2ad28 <ptr_set_destroy@@Base+0x38>
   2ad50:	mov	r0, r6
   2ad54:	pop	{r4, r5, r6, r7, r8, lr}
   2ad58:	b	2a84c <str_set_visit@@Base+0x60>

0002ad5c <ptr_set_init@@Base>:
   2ad5c:	cmp	r1, #2
   2ad60:	push	{r4, r5, r6, lr}
   2ad64:	mov	r4, #4
   2ad68:	mov	r5, r0
   2ad6c:	bls	2ad84 <ptr_set_init@@Base+0x28>
   2ad70:	mov	r2, #179	; 0xb3
   2ad74:	lsl	r4, r4, #1
   2ad78:	mul	r3, r2, r4
   2ad7c:	cmp	r1, r3, lsr #8
   2ad80:	bhi	2ad74 <ptr_set_init@@Base+0x18>
   2ad84:	mov	r1, #4
   2ad88:	mov	r0, r4
   2ad8c:	bl	13e98 <calloc@plt>
   2ad90:	cmp	r0, #0
   2ad94:	str	r0, [r5]
   2ad98:	movne	r0, #0
   2ad9c:	strne	r4, [r5, #12]
   2ada0:	strne	r0, [r5, #4]
   2ada4:	strne	r0, [r5, #8]
   2ada8:	mvneq	r0, #0
   2adac:	pop	{r4, r5, r6, pc}

0002adb0 <ptr_set_resize@@Base>:
   2adb0:	b	2aab0 <str_set_visit@@Base+0x2c4>

0002adb4 <ptr_set_insert@@Base>:
   2adb4:	mov	r2, r3
   2adb8:	ldr	r3, [sp]
   2adbc:	b	2a87c <str_set_visit@@Base+0x90>

0002adc0 <ptr_set_insert_item@@Base>:
   2adc0:	mov	r3, r2
   2adc4:	mov	r2, r1
   2adc8:	b	2a87c <str_set_visit@@Base+0x90>

0002adcc <ptr_set_find@@Base>:
   2adcc:	mov	r3, r0
   2add0:	mov	r2, r1
   2add4:	ldr	r0, [r0]
   2add8:	add	r1, r3, #12
   2addc:	b	2aba8 <str_set_visit@@Base+0x3bc>

0002ade0 <ptr_set_find_item@@Base>:
   2ade0:	mov	r3, r0
   2ade4:	mov	r2, r1
   2ade8:	ldr	r0, [r0]
   2adec:	add	r1, r3, #12
   2adf0:	b	2aba8 <str_set_visit@@Base+0x3bc>

0002adf4 <ptr_set_remove@@Base>:
   2adf4:	b	2ac34 <str_set_visit@@Base+0x448>

0002adf8 <ptr_set_remove_item@@Base>:
   2adf8:	b	2ac34 <str_set_visit@@Base+0x448>

0002adfc <ptr_set_visit@@Base>:
   2adfc:	ldr	r3, [r0, #12]
   2ae00:	push	{r4, r5, r6, r7, r8, lr}
   2ae04:	cmp	r3, #0
   2ae08:	ldr	r5, [r0]
   2ae0c:	popeq	{r4, r5, r6, r7, r8, pc}
   2ae10:	mov	r7, r2
   2ae14:	mov	r6, r1
   2ae18:	mov	r8, r0
   2ae1c:	sub	r5, r5, #4
   2ae20:	mov	r4, #0
   2ae24:	b	2ae30 <ptr_set_visit@@Base+0x34>
   2ae28:	cmp	r4, r3
   2ae2c:	bcs	2ae58 <ptr_set_visit@@Base+0x5c>
   2ae30:	ldr	r1, [r5, #4]!
   2ae34:	add	r4, r4, #1
   2ae38:	cmp	r1, #0
   2ae3c:	cmpne	r1, #2
   2ae40:	beq	2ae28 <ptr_set_visit@@Base+0x2c>
   2ae44:	mov	r0, r7
   2ae48:	blx	r6
   2ae4c:	ldr	r3, [r8, #12]
   2ae50:	cmp	r4, r3
   2ae54:	bcc	2ae30 <ptr_set_visit@@Base+0x34>
   2ae58:	pop	{r4, r5, r6, r7, r8, pc}
   2ae5c:	push	{r4, lr}
   2ae60:	mov	r4, r0
   2ae64:	ldr	r0, [r0]
   2ae68:	cmp	r0, #0
   2ae6c:	beq	2ae74 <ptr_set_visit@@Base+0x78>
   2ae70:	bl	13ec8 <free@plt>
   2ae74:	mov	r3, #0
   2ae78:	str	r3, [r4]
   2ae7c:	str	r3, [r4, #4]
   2ae80:	str	r3, [r4, #8]
   2ae84:	str	r3, [r4, #12]
   2ae88:	pop	{r4, pc}
   2ae8c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ae90:	sub	sp, sp, #36	; 0x24
   2ae94:	ldr	r4, [pc, #588]	; 2b0e8 <ptr_set_visit@@Base+0x2ec>
   2ae98:	cmp	r3, #0
   2ae9c:	str	r3, [sp, #12]
   2aea0:	str	r1, [sp, #16]
   2aea4:	add	r4, pc, r4
   2aea8:	beq	2b0c8 <ptr_set_visit@@Base+0x2cc>
   2aeac:	ldr	r3, [sp, #12]
   2aeb0:	cmp	r3, #2
   2aeb4:	beq	2b080 <ptr_set_visit@@Base+0x284>
   2aeb8:	ldr	r3, [sp, #12]
   2aebc:	cmp	r3, #1
   2aec0:	beq	2b060 <ptr_set_visit@@Base+0x264>
   2aec4:	ldr	r8, [r0, #12]
   2aec8:	mov	r3, #179	; 0xb3
   2aecc:	ldr	r1, [r0, #8]
   2aed0:	mul	r3, r3, r8
   2aed4:	mov	r9, r2
   2aed8:	mov	sl, r0
   2aedc:	cmp	r1, r3, lsr #8
   2aee0:	bcc	2aef8 <ptr_set_visit@@Base+0xfc>
   2aee4:	lsl	r1, r1, #1
   2aee8:	bl	2b120 <ptr_set_visit@@Base+0x324>
   2aeec:	cmp	r0, #0
   2aef0:	bne	2b0a0 <ptr_set_visit@@Base+0x2a4>
   2aef4:	ldr	r8, [sl, #12]
   2aef8:	ldr	r3, [pc, #492]	; 2b0ec <ptr_set_visit@@Base+0x2f0>
   2aefc:	mov	r2, r9
   2af00:	str	r3, [sp]
   2af04:	add	r3, sp, #24
   2af08:	str	r3, [sp, #4]
   2af0c:	ldr	r0, [sp, #16]
   2af10:	mov	r3, #0
   2af14:	ldr	r7, [sl]
   2af18:	bl	3be90 <cmetrohash64_1@@Base>
   2af1c:	ldr	r3, [sp, #72]	; 0x48
   2af20:	ldr	r6, [sp, #24]
   2af24:	sub	r3, r3, #2
   2af28:	sub	r8, r8, #1
   2af2c:	cmp	r3, #1
   2af30:	and	r4, r8, r6
   2af34:	bls	2b00c <ptr_set_visit@@Base+0x210>
   2af38:	ldr	r5, [r7, r4, lsl #2]
   2af3c:	add	r4, r7, r4, lsl #2
   2af40:	cmp	r5, #0
   2af44:	moveq	fp, r4
   2af48:	beq	2afe8 <ptr_set_visit@@Base+0x1ec>
   2af4c:	str	sl, [sp, #20]
   2af50:	add	r6, r6, #1
   2af54:	mov	sl, r5
   2af58:	mov	fp, #0
   2af5c:	ldr	r5, [sp, #16]
   2af60:	b	2af7c <ptr_set_visit@@Base+0x180>
   2af64:	and	r4, r8, r6
   2af68:	add	r6, r6, #1
   2af6c:	ldr	sl, [r7, r4, lsl #2]
   2af70:	add	r4, r7, r4, lsl #2
   2af74:	cmp	sl, #0
   2af78:	beq	2afdc <ptr_set_visit@@Base+0x1e0>
   2af7c:	cmp	sl, #2
   2af80:	beq	2afd0 <ptr_set_visit@@Base+0x1d4>
   2af84:	ldr	r2, [sl, #4]
   2af88:	ldr	r1, [r2, #4]
   2af8c:	cmp	r9, r1
   2af90:	bne	2af64 <ptr_set_visit@@Base+0x168>
   2af94:	ldr	r1, [r2]
   2af98:	mov	r0, r5
   2af9c:	mov	r2, r9
   2afa0:	bl	13eec <memcmp@plt>
   2afa4:	cmp	r0, #0
   2afa8:	bne	2af64 <ptr_set_visit@@Base+0x168>
   2afac:	ldr	r3, [sp, #72]	; 0x48
   2afb0:	mov	r5, sl
   2afb4:	cmp	r3, #0
   2afb8:	bne	2b000 <ptr_set_visit@@Base+0x204>
   2afbc:	ldr	r3, [sp, #12]
   2afc0:	mov	r0, r5
   2afc4:	str	r3, [r4]
   2afc8:	add	sp, sp, #36	; 0x24
   2afcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2afd0:	cmp	fp, #0
   2afd4:	moveq	fp, r4
   2afd8:	b	2af64 <ptr_set_visit@@Base+0x168>
   2afdc:	cmp	fp, #0
   2afe0:	ldr	sl, [sp, #20]
   2afe4:	moveq	fp, r4
   2afe8:	ldr	r2, [sl, #8]
   2afec:	ldr	r3, [sp, #12]
   2aff0:	mov	r5, #0
   2aff4:	add	r2, r2, #1
   2aff8:	str	r2, [sl, #8]
   2affc:	str	r3, [fp]
   2b000:	mov	r0, r5
   2b004:	add	sp, sp, #36	; 0x24
   2b008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b00c:	ldr	r2, [r7, r4, lsl #2]
   2b010:	ldr	r3, [sl, #8]
   2b014:	cmp	r2, #0
   2b018:	cmpne	r2, #2
   2b01c:	add	r3, r3, #1
   2b020:	str	r3, [sl, #8]
   2b024:	add	r4, r7, r4, lsl #2
   2b028:	beq	2b050 <ptr_set_visit@@Base+0x254>
   2b02c:	add	r6, r6, #1
   2b030:	and	r3, r8, r6
   2b034:	add	r6, r6, #1
   2b038:	ldr	r2, [r7, r3, lsl #2]
   2b03c:	add	r3, r7, r3, lsl #2
   2b040:	cmp	r2, #0
   2b044:	cmpne	r2, #2
   2b048:	bne	2b030 <ptr_set_visit@@Base+0x234>
   2b04c:	mov	r4, r3
   2b050:	ldr	r3, [sp, #12]
   2b054:	mov	r5, #0
   2b058:	str	r3, [r4]
   2b05c:	b	2b000 <ptr_set_visit@@Base+0x204>
   2b060:	ldr	r3, [pc, #136]	; 2b0f0 <ptr_set_visit@@Base+0x2f4>
   2b064:	ldr	r1, [pc, #136]	; 2b0f4 <ptr_set_visit@@Base+0x2f8>
   2b068:	ldr	r0, [pc, #136]	; 2b0f8 <ptr_set_visit@@Base+0x2fc>
   2b06c:	add	r3, pc, r3
   2b070:	mov	r2, #116	; 0x74
   2b074:	add	r1, pc, r1
   2b078:	add	r0, pc, r0
   2b07c:	bl	14030 <__assert_fail@plt>
   2b080:	ldr	r3, [pc, #116]	; 2b0fc <ptr_set_visit@@Base+0x300>
   2b084:	ldr	r1, [pc, #116]	; 2b100 <ptr_set_visit@@Base+0x304>
   2b088:	ldr	r0, [pc, #116]	; 2b104 <ptr_set_visit@@Base+0x308>
   2b08c:	add	r3, pc, r3
   2b090:	mov	r2, #115	; 0x73
   2b094:	add	r1, pc, r1
   2b098:	add	r0, pc, r0
   2b09c:	bl	14030 <__assert_fail@plt>
   2b0a0:	ldr	r3, [pc, #96]	; 2b108 <ptr_set_visit@@Base+0x30c>
   2b0a4:	ldr	r2, [pc, #96]	; 2b10c <ptr_set_visit@@Base+0x310>
   2b0a8:	ldr	r1, [pc, #96]	; 2b110 <ptr_set_visit@@Base+0x314>
   2b0ac:	ldr	r3, [r4, r3]
   2b0b0:	add	r2, pc, r2
   2b0b4:	add	r1, pc, r1
   2b0b8:	ldr	r0, [r3]
   2b0bc:	bl	13f7c <fprintf@plt>
   2b0c0:	mov	r0, #1
   2b0c4:	bl	13f64 <exit@plt>
   2b0c8:	ldr	r3, [pc, #68]	; 2b114 <ptr_set_visit@@Base+0x318>
   2b0cc:	ldr	r1, [pc, #68]	; 2b118 <ptr_set_visit@@Base+0x31c>
   2b0d0:	ldr	r0, [pc, #68]	; 2b11c <ptr_set_visit@@Base+0x320>
   2b0d4:	add	r3, pc, r3
   2b0d8:	mov	r2, #114	; 0x72
   2b0dc:	add	r1, pc, r1
   2b0e0:	add	r0, pc, r0
   2b0e4:	bl	14030 <__assert_fail@plt>
   2b0e8:	andeq	pc, r3, r4, asr r1	; <UNPREDICTABLE>
   2b0ec:	svccs	0x00693b52
   2b0f0:	andeq	fp, r2, r0, asr r4
   2b0f4:	andeq	fp, r2, r4, lsr r3
   2b0f8:	andeq	fp, r2, r8, asr #7
   2b0fc:	andeq	fp, r2, r0, lsr r4
   2b100:	andeq	fp, r2, r4, lsl r3
   2b104:	muleq	r2, r0, r3
   2b108:	muleq	r0, ip, r0
   2b10c:	andeq	fp, r2, r8, lsr #7
   2b110:	ldrdeq	fp, [r2], -r8
   2b114:	andeq	fp, r2, r8, ror #7
   2b118:	andeq	fp, r2, ip, asr #5
   2b11c:	andeq	fp, r2, r0, lsr r3
   2b120:	ldr	r3, [r0, #8]
   2b124:	push	{r4, r5, r6, r7, r8, lr}
   2b128:	cmp	r1, r3
   2b12c:	movcc	r1, r3
   2b130:	cmp	r1, #2
   2b134:	sub	sp, sp, #24
   2b138:	mov	r6, r0
   2b13c:	ldr	r7, [r0]
   2b140:	mov	r5, #4
   2b144:	bls	2b15c <ptr_set_visit@@Base+0x360>
   2b148:	mov	r2, #179	; 0xb3
   2b14c:	lsl	r5, r5, #1
   2b150:	mul	r3, r2, r5
   2b154:	cmp	r1, r3, lsr #8
   2b158:	bhi	2b14c <ptr_set_visit@@Base+0x350>
   2b15c:	mov	r1, #4
   2b160:	mov	r0, r5
   2b164:	bl	13e98 <calloc@plt>
   2b168:	cmp	r0, #0
   2b16c:	str	r0, [sp, #8]
   2b170:	beq	2b214 <ptr_set_visit@@Base+0x418>
   2b174:	ldr	r2, [r6, #12]
   2b178:	mov	r4, #0
   2b17c:	cmp	r2, r4
   2b180:	str	r5, [sp, #20]
   2b184:	str	r4, [sp, #12]
   2b188:	subne	r5, r7, #4
   2b18c:	str	r4, [sp, #16]
   2b190:	addne	r7, sp, #8
   2b194:	movne	r8, #3
   2b198:	bne	2b1a8 <ptr_set_visit@@Base+0x3ac>
   2b19c:	b	2b20c <ptr_set_visit@@Base+0x410>
   2b1a0:	cmp	r2, r4
   2b1a4:	bls	2b1dc <ptr_set_visit@@Base+0x3e0>
   2b1a8:	ldr	r3, [r5, #4]!
   2b1ac:	add	r4, r4, #1
   2b1b0:	cmp	r3, #0
   2b1b4:	cmpne	r3, #2
   2b1b8:	beq	2b1a0 <ptr_set_visit@@Base+0x3a4>
   2b1bc:	ldr	r1, [r3, #4]
   2b1c0:	mov	r0, r7
   2b1c4:	ldm	r1, {r1, r2}
   2b1c8:	str	r8, [sp]
   2b1cc:	bl	2ae8c <ptr_set_visit@@Base+0x90>
   2b1d0:	ldr	r2, [r6, #12]
   2b1d4:	cmp	r2, r4
   2b1d8:	bhi	2b1a8 <ptr_set_visit@@Base+0x3ac>
   2b1dc:	mov	r0, r6
   2b1e0:	bl	2ae5c <ptr_set_visit@@Base+0x60>
   2b1e4:	mov	ip, r7
   2b1e8:	mov	lr, #0
   2b1ec:	ldm	ip!, {r0, r1, r2, r3}
   2b1f0:	str	r0, [r6]
   2b1f4:	str	r1, [r6, #4]
   2b1f8:	str	r2, [r6, #8]
   2b1fc:	str	r3, [r6, #12]
   2b200:	mov	r0, lr
   2b204:	add	sp, sp, #24
   2b208:	pop	{r4, r5, r6, r7, r8, pc}
   2b20c:	add	r7, sp, #8
   2b210:	b	2b1dc <ptr_set_visit@@Base+0x3e0>
   2b214:	mvn	lr, #0
   2b218:	b	2b200 <ptr_set_visit@@Base+0x404>
   2b21c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b220:	sub	sp, sp, #20
   2b224:	ldr	r5, [r0]
   2b228:	cmp	r5, #0
   2b22c:	beq	2b2e8 <ptr_set_visit@@Base+0x4ec>
   2b230:	ldr	r3, [pc, #192]	; 2b2f8 <ptr_set_visit@@Base+0x4fc>
   2b234:	ldr	r7, [r0, #12]
   2b238:	str	r3, [sp]
   2b23c:	add	r3, sp, #8
   2b240:	str	r3, [sp, #4]
   2b244:	mov	r9, r0
   2b248:	mov	r3, #0
   2b24c:	mov	r0, r1
   2b250:	mov	r6, r2
   2b254:	mov	r8, r1
   2b258:	bl	3be90 <cmetrohash64_1@@Base>
   2b25c:	ldr	sl, [sp, #8]
   2b260:	sub	r7, r7, #1
   2b264:	and	r3, r7, sl
   2b268:	ldr	fp, [r5, r3, lsl #2]
   2b26c:	add	r4, r5, r3, lsl #2
   2b270:	cmp	fp, #0
   2b274:	beq	2b2e8 <ptr_set_visit@@Base+0x4ec>
   2b278:	add	sl, sl, #1
   2b27c:	b	2b298 <ptr_set_visit@@Base+0x49c>
   2b280:	and	r3, r7, sl
   2b284:	add	sl, sl, #1
   2b288:	ldr	fp, [r5, r3, lsl #2]
   2b28c:	add	r4, r5, r3, lsl #2
   2b290:	cmp	fp, #0
   2b294:	beq	2b2e8 <ptr_set_visit@@Base+0x4ec>
   2b298:	cmp	fp, #2
   2b29c:	beq	2b280 <ptr_set_visit@@Base+0x484>
   2b2a0:	ldr	r3, [fp, #4]
   2b2a4:	ldr	r2, [r3, #4]
   2b2a8:	cmp	r6, r2
   2b2ac:	bne	2b280 <ptr_set_visit@@Base+0x484>
   2b2b0:	ldr	r1, [r3]
   2b2b4:	mov	r2, r6
   2b2b8:	mov	r0, r8
   2b2bc:	bl	13eec <memcmp@plt>
   2b2c0:	cmp	r0, #0
   2b2c4:	bne	2b280 <ptr_set_visit@@Base+0x484>
   2b2c8:	ldr	r3, [r9, #8]
   2b2cc:	mov	r2, #2
   2b2d0:	sub	r3, r3, #1
   2b2d4:	str	r2, [r4]
   2b2d8:	mov	r0, fp
   2b2dc:	str	r3, [r9, #8]
   2b2e0:	add	sp, sp, #20
   2b2e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b2e8:	mov	fp, #0
   2b2ec:	mov	r0, fp
   2b2f0:	add	sp, sp, #20
   2b2f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b2f8:	svccs	0x00693b52
   2b2fc:	push	{r4, r5, r6, r7, r8, r9, lr}
   2b300:	subs	r7, r0, #0
   2b304:	sub	sp, sp, #20
   2b308:	beq	2b3a8 <ptr_set_visit@@Base+0x5ac>
   2b30c:	mov	r6, r3
   2b310:	ldr	r3, [pc, #160]	; 2b3b8 <ptr_set_visit@@Base+0x5bc>
   2b314:	ldr	r8, [r1]
   2b318:	mov	r9, r2
   2b31c:	str	r3, [sp]
   2b320:	add	r3, sp, #8
   2b324:	str	r3, [sp, #4]
   2b328:	mov	r2, r6
   2b32c:	mov	r3, #0
   2b330:	mov	r0, r9
   2b334:	bl	3be90 <cmetrohash64_1@@Base>
   2b338:	ldr	r5, [sp, #8]
   2b33c:	sub	r8, r8, #1
   2b340:	and	r3, r8, r5
   2b344:	ldr	r4, [r7, r3, lsl #2]
   2b348:	cmp	r4, #0
   2b34c:	beq	2b3a8 <ptr_set_visit@@Base+0x5ac>
   2b350:	add	r5, r5, #1
   2b354:	b	2b36c <ptr_set_visit@@Base+0x570>
   2b358:	and	r1, r8, r5
   2b35c:	add	r5, r5, #1
   2b360:	ldr	r4, [r7, r1, lsl #2]
   2b364:	cmp	r4, #0
   2b368:	beq	2b3a8 <ptr_set_visit@@Base+0x5ac>
   2b36c:	cmp	r4, #2
   2b370:	beq	2b358 <ptr_set_visit@@Base+0x55c>
   2b374:	ldr	r3, [r4, #4]
   2b378:	ldr	r2, [r3, #4]
   2b37c:	cmp	r6, r2
   2b380:	bne	2b358 <ptr_set_visit@@Base+0x55c>
   2b384:	ldr	r1, [r3]
   2b388:	mov	r2, r6
   2b38c:	mov	r0, r9
   2b390:	bl	13eec <memcmp@plt>
   2b394:	cmp	r0, #0
   2b398:	bne	2b358 <ptr_set_visit@@Base+0x55c>
   2b39c:	mov	r0, r4
   2b3a0:	add	sp, sp, #20
   2b3a4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2b3a8:	mov	r4, #0
   2b3ac:	mov	r0, r4
   2b3b0:	add	sp, sp, #20
   2b3b4:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2b3b8:	svccs	0x00693b52

0002b3bc <fb_symbol_table_clear@@Base>:
   2b3bc:	b	2ae5c <ptr_set_visit@@Base+0x60>

0002b3c0 <fb_symbol_table_destroy@@Base>:
   2b3c0:	push	{r4, r5, r6, r7, r8, lr}
   2b3c4:	subs	r7, r1, #0
   2b3c8:	mov	r6, r0
   2b3cc:	beq	2b420 <fb_symbol_table_destroy@@Base+0x60>
   2b3d0:	ldr	r3, [r0, #12]
   2b3d4:	ldr	r5, [r0]
   2b3d8:	cmp	r3, #0
   2b3dc:	beq	2b420 <fb_symbol_table_destroy@@Base+0x60>
   2b3e0:	mov	r8, r2
   2b3e4:	sub	r5, r5, #4
   2b3e8:	mov	r4, #0
   2b3ec:	b	2b3f8 <fb_symbol_table_destroy@@Base+0x38>
   2b3f0:	cmp	r4, r3
   2b3f4:	bcs	2b420 <fb_symbol_table_destroy@@Base+0x60>
   2b3f8:	ldr	r1, [r5, #4]!
   2b3fc:	add	r4, r4, #1
   2b400:	cmp	r1, #0
   2b404:	cmpne	r1, #2
   2b408:	beq	2b3f0 <fb_symbol_table_destroy@@Base+0x30>
   2b40c:	mov	r0, r8
   2b410:	blx	r7
   2b414:	ldr	r3, [r6, #12]
   2b418:	cmp	r4, r3
   2b41c:	bcc	2b3f8 <fb_symbol_table_destroy@@Base+0x38>
   2b420:	mov	r0, r6
   2b424:	pop	{r4, r5, r6, r7, r8, lr}
   2b428:	b	2ae5c <ptr_set_visit@@Base+0x60>

0002b42c <fb_symbol_table_init@@Base>:
   2b42c:	cmp	r1, #2
   2b430:	push	{r4, r5, r6, lr}
   2b434:	mov	r4, #4
   2b438:	mov	r5, r0
   2b43c:	bls	2b454 <fb_symbol_table_init@@Base+0x28>
   2b440:	mov	r2, #179	; 0xb3
   2b444:	lsl	r4, r4, #1
   2b448:	mul	r3, r2, r4
   2b44c:	cmp	r1, r3, lsr #8
   2b450:	bhi	2b444 <fb_symbol_table_init@@Base+0x18>
   2b454:	mov	r1, #4
   2b458:	mov	r0, r4
   2b45c:	bl	13e98 <calloc@plt>
   2b460:	cmp	r0, #0
   2b464:	str	r0, [r5]
   2b468:	movne	r0, #0
   2b46c:	strne	r4, [r5, #12]
   2b470:	strne	r0, [r5, #4]
   2b474:	strne	r0, [r5, #8]
   2b478:	mvneq	r0, #0
   2b47c:	pop	{r4, r5, r6, pc}

0002b480 <fb_symbol_table_resize@@Base>:
   2b480:	b	2b120 <ptr_set_visit@@Base+0x324>

0002b484 <fb_symbol_table_insert@@Base>:
   2b484:	b	2ae8c <ptr_set_visit@@Base+0x90>

0002b488 <fb_symbol_table_insert_item@@Base>:
   2b488:	mov	r3, r1
   2b48c:	ldr	r1, [r1, #4]
   2b490:	push	{lr}		; (str lr, [sp, #-4]!)
   2b494:	sub	sp, sp, #12
   2b498:	ldm	r1, {r1, ip}
   2b49c:	str	r2, [sp]
   2b4a0:	mov	r2, ip
   2b4a4:	bl	2ae8c <ptr_set_visit@@Base+0x90>
   2b4a8:	add	sp, sp, #12
   2b4ac:	pop	{pc}		; (ldr pc, [sp], #4)

0002b4b0 <fb_symbol_table_find@@Base>:
   2b4b0:	mov	ip, r0
   2b4b4:	mov	r3, r2
   2b4b8:	ldr	r0, [r0]
   2b4bc:	mov	r2, r1
   2b4c0:	add	r1, ip, #12
   2b4c4:	b	2b2fc <ptr_set_visit@@Base+0x500>

0002b4c8 <fb_symbol_table_find_item@@Base>:
   2b4c8:	ldr	r2, [r1, #4]
   2b4cc:	add	r1, r0, #12
   2b4d0:	ldr	r0, [r0]
   2b4d4:	ldm	r2, {r2, r3}
   2b4d8:	b	2b2fc <ptr_set_visit@@Base+0x500>

0002b4dc <fb_symbol_table_remove@@Base>:
   2b4dc:	b	2b21c <ptr_set_visit@@Base+0x420>

0002b4e0 <fb_symbol_table_remove_item@@Base>:
   2b4e0:	ldr	r3, [r1, #4]
   2b4e4:	ldm	r3, {r1, r2}
   2b4e8:	b	2b21c <ptr_set_visit@@Base+0x420>

0002b4ec <fb_symbol_table_visit@@Base>:
   2b4ec:	ldr	r3, [r0, #12]
   2b4f0:	push	{r4, r5, r6, r7, r8, lr}
   2b4f4:	cmp	r3, #0
   2b4f8:	ldr	r5, [r0]
   2b4fc:	popeq	{r4, r5, r6, r7, r8, pc}
   2b500:	mov	r7, r2
   2b504:	mov	r6, r1
   2b508:	mov	r8, r0
   2b50c:	sub	r5, r5, #4
   2b510:	mov	r4, #0
   2b514:	b	2b520 <fb_symbol_table_visit@@Base+0x34>
   2b518:	cmp	r4, r3
   2b51c:	bcs	2b548 <fb_symbol_table_visit@@Base+0x5c>
   2b520:	ldr	r1, [r5, #4]!
   2b524:	add	r4, r4, #1
   2b528:	cmp	r1, #0
   2b52c:	cmpne	r1, #2
   2b530:	beq	2b518 <fb_symbol_table_visit@@Base+0x2c>
   2b534:	mov	r0, r7
   2b538:	blx	r6
   2b53c:	ldr	r3, [r8, #12]
   2b540:	cmp	r4, r3
   2b544:	bcc	2b520 <fb_symbol_table_visit@@Base+0x34>
   2b548:	pop	{r4, r5, r6, r7, r8, pc}
   2b54c:	push	{r4, lr}
   2b550:	mov	r4, r0
   2b554:	ldr	r0, [r0]
   2b558:	cmp	r0, #0
   2b55c:	beq	2b564 <fb_symbol_table_visit@@Base+0x78>
   2b560:	bl	13ec8 <free@plt>
   2b564:	mov	r3, #0
   2b568:	str	r3, [r4]
   2b56c:	str	r3, [r4, #4]
   2b570:	str	r3, [r4, #8]
   2b574:	str	r3, [r4, #12]
   2b578:	pop	{r4, pc}
   2b57c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b580:	sub	sp, sp, #28
   2b584:	ldr	r4, [pc, #1296]	; 2ba9c <fb_symbol_table_visit@@Base+0x5b0>
   2b588:	cmp	r3, #0
   2b58c:	str	r3, [sp, #12]
   2b590:	str	r1, [sp, #4]
   2b594:	str	r2, [sp, #20]
   2b598:	str	r0, [sp, #16]
   2b59c:	add	r4, pc, r4
   2b5a0:	beq	2ba14 <fb_symbol_table_visit@@Base+0x528>
   2b5a4:	ldr	r3, [sp, #12]
   2b5a8:	cmp	r3, #2
   2b5ac:	beq	2ba54 <fb_symbol_table_visit@@Base+0x568>
   2b5b0:	ldr	r3, [sp, #12]
   2b5b4:	cmp	r3, #1
   2b5b8:	beq	2ba34 <fb_symbol_table_visit@@Base+0x548>
   2b5bc:	ldr	r5, [sp, #16]
   2b5c0:	mov	r3, #179	; 0xb3
   2b5c4:	ldr	r2, [r5, #12]
   2b5c8:	ldr	r1, [r5, #8]
   2b5cc:	mul	r3, r3, r2
   2b5d0:	cmp	r1, r3, lsr #8
   2b5d4:	bcc	2b5ec <fb_symbol_table_visit@@Base+0x100>
   2b5d8:	lsl	r1, r1, #1
   2b5dc:	bl	2badc <fb_symbol_table_visit@@Base+0x5f0>
   2b5e0:	cmp	r0, #0
   2b5e4:	bne	2ba74 <fb_symbol_table_visit@@Base+0x588>
   2b5e8:	ldr	r2, [r5, #12]
   2b5ec:	sub	r2, r2, #1
   2b5f0:	ldr	r3, [sp, #20]
   2b5f4:	str	r2, [sp]
   2b5f8:	ldr	r2, [sp, #16]
   2b5fc:	cmp	r3, #0
   2b600:	ldr	r7, [r2]
   2b604:	ble	2b910 <fb_symbol_table_visit@@Base+0x424>
   2b608:	mov	r4, #0
   2b60c:	ldr	r5, [sp, #4]
   2b610:	ldr	r9, [pc, #1160]	; 2baa0 <fb_symbol_table_visit@@Base+0x5b4>
   2b614:	ldr	sl, [pc, #1160]	; 2baa4 <fb_symbol_table_visit@@Base+0x5b8>
   2b618:	ldr	r8, [pc, #1160]	; 2baa8 <fb_symbol_table_visit@@Base+0x5bc>
   2b61c:	mov	r6, r4
   2b620:	mov	lr, r3
   2b624:	mvn	fp, #0
   2b628:	cmp	lr, #0
   2b62c:	ldrb	r1, [r5]
   2b630:	moveq	r2, r6
   2b634:	moveq	r0, fp
   2b638:	beq	2b680 <fb_symbol_table_visit@@Base+0x194>
   2b63c:	cmp	r1, #46	; 0x2e
   2b640:	addeq	ip, r5, #1
   2b644:	moveq	r0, fp
   2b648:	moveq	r2, r6
   2b64c:	beq	2b68c <fb_symbol_table_visit@@Base+0x1a0>
   2b650:	mov	r3, r5
   2b654:	mov	r0, r6
   2b658:	b	2b66c <fb_symbol_table_visit@@Base+0x180>
   2b65c:	ldrb	ip, [r3, #1]!
   2b660:	cmp	ip, #46	; 0x2e
   2b664:	beq	2b6dc <fb_symbol_table_visit@@Base+0x1f0>
   2b668:	mov	r0, r2
   2b66c:	add	r2, r0, #1
   2b670:	cmp	r2, lr
   2b674:	bne	2b65c <fb_symbol_table_visit@@Base+0x170>
   2b678:	cmp	r0, #0
   2b67c:	beq	2b700 <fb_symbol_table_visit@@Base+0x214>
   2b680:	cmp	r1, #0
   2b684:	add	ip, r5, #1
   2b688:	beq	2b700 <fb_symbol_table_visit@@Base+0x214>
   2b68c:	add	r0, r5, r0
   2b690:	mov	r3, r9
   2b694:	b	2b6a4 <fb_symbol_table_visit@@Base+0x1b8>
   2b698:	ldrb	r1, [ip], #1
   2b69c:	cmp	r1, #0
   2b6a0:	beq	2b6b4 <fb_symbol_table_visit@@Base+0x1c8>
   2b6a4:	add	r3, r3, r3, lsl #5
   2b6a8:	cmp	ip, r0
   2b6ac:	eor	r3, r3, r1
   2b6b0:	bne	2b698 <fb_symbol_table_visit@@Base+0x1ac>
   2b6b4:	eor	r4, r4, sl
   2b6b8:	eor	r3, r3, r4
   2b6bc:	cmp	r2, lr
   2b6c0:	mul	r4, r8, r3
   2b6c4:	beq	2b710 <fb_symbol_table_visit@@Base+0x224>
   2b6c8:	mvn	r3, r2
   2b6cc:	add	r2, r2, #1
   2b6d0:	add	lr, lr, r3
   2b6d4:	add	r5, r5, r2
   2b6d8:	b	2b628 <fb_symbol_table_visit@@Base+0x13c>
   2b6dc:	cmp	r0, #0
   2b6e0:	beq	2b6f0 <fb_symbol_table_visit@@Base+0x204>
   2b6e4:	cmp	r1, #0
   2b6e8:	add	ip, r5, #1
   2b6ec:	bne	2b68c <fb_symbol_table_visit@@Base+0x1a0>
   2b6f0:	eor	r4, r4, #5376	; 0x1500
   2b6f4:	eor	r4, r4, #5
   2b6f8:	mul	r4, r8, r4
   2b6fc:	b	2b6c8 <fb_symbol_table_visit@@Base+0x1dc>
   2b700:	eor	r4, r4, #5376	; 0x1500
   2b704:	ldr	r3, [pc, #924]	; 2baa8 <fb_symbol_table_visit@@Base+0x5bc>
   2b708:	eor	r4, r4, #5
   2b70c:	mul	r4, r3, r4
   2b710:	ldr	r3, [sp]
   2b714:	and	r5, r3, r4
   2b718:	lsl	r5, r5, #2
   2b71c:	ldr	r3, [sp, #64]	; 0x40
   2b720:	sub	r3, r3, #2
   2b724:	cmp	r3, #1
   2b728:	bls	2b9bc <fb_symbol_table_visit@@Base+0x4d0>
   2b72c:	ldr	r6, [r7, r5]
   2b730:	add	r5, r7, r5
   2b734:	cmp	r6, #0
   2b738:	moveq	r8, r5
   2b73c:	beq	2b82c <fb_symbol_table_visit@@Base+0x340>
   2b740:	mov	r8, #0
   2b744:	str	r8, [sp, #8]
   2b748:	ldr	r8, [sp, #20]
   2b74c:	add	r4, r4, #1
   2b750:	cmp	r6, #2
   2b754:	beq	2b854 <fb_symbol_table_visit@@Base+0x368>
   2b758:	cmp	r8, #0
   2b75c:	ldr	r9, [r6]
   2b760:	ble	2b868 <fb_symbol_table_visit@@Base+0x37c>
   2b764:	cmp	r9, #0
   2b768:	beq	2b804 <fb_symbol_table_visit@@Base+0x318>
   2b76c:	ldr	r3, [r9, #4]
   2b770:	ldm	r3, {r2, lr}
   2b774:	cmp	r8, lr
   2b778:	bcc	2b804 <fb_symbol_table_visit@@Base+0x318>
   2b77c:	ldr	sl, [sp, #4]
   2b780:	mov	fp, r8
   2b784:	cmp	lr, #0
   2b788:	beq	2b908 <fb_symbol_table_visit@@Base+0x41c>
   2b78c:	ldrb	r1, [r2]
   2b790:	ldrb	r3, [sl]
   2b794:	cmp	r1, r3
   2b798:	bne	2b804 <fb_symbol_table_visit@@Base+0x318>
   2b79c:	mov	r1, sl
   2b7a0:	mov	r3, #0
   2b7a4:	b	2b7b8 <fb_symbol_table_visit@@Base+0x2cc>
   2b7a8:	ldrb	ip, [r2, #1]!
   2b7ac:	ldrb	r0, [r1, #1]!
   2b7b0:	cmp	ip, r0
   2b7b4:	bne	2b804 <fb_symbol_table_visit@@Base+0x318>
   2b7b8:	add	r3, r3, #1
   2b7bc:	cmp	r3, lr
   2b7c0:	bne	2b7a8 <fb_symbol_table_visit@@Base+0x2bc>
   2b7c4:	cmp	lr, fp
   2b7c8:	beq	2b8f0 <fb_symbol_table_visit@@Base+0x404>
   2b7cc:	ldrb	r3, [sl, r3]
   2b7d0:	cmp	r3, #46	; 0x2e
   2b7d4:	bne	2b804 <fb_symbol_table_visit@@Base+0x318>
   2b7d8:	ldr	r9, [r9]
   2b7dc:	mvn	r3, lr
   2b7e0:	cmp	r9, #0
   2b7e4:	add	lr, lr, #1
   2b7e8:	add	fp, fp, r3
   2b7ec:	add	sl, sl, lr
   2b7f0:	beq	2b804 <fb_symbol_table_visit@@Base+0x318>
   2b7f4:	ldr	r3, [r9, #4]
   2b7f8:	ldm	r3, {r2, lr}
   2b7fc:	cmp	lr, fp
   2b800:	bls	2b784 <fb_symbol_table_visit@@Base+0x298>
   2b804:	ldr	r3, [sp]
   2b808:	and	r5, r3, r4
   2b80c:	add	r4, r4, #1
   2b810:	ldr	r6, [r7, r5, lsl #2]
   2b814:	add	r5, r7, r5, lsl #2
   2b818:	cmp	r6, #0
   2b81c:	bne	2b750 <fb_symbol_table_visit@@Base+0x264>
   2b820:	ldr	r8, [sp, #8]
   2b824:	cmp	r8, #0
   2b828:	moveq	r8, r5
   2b82c:	ldr	r2, [sp, #16]
   2b830:	mov	r6, #0
   2b834:	ldr	r3, [r2, #8]
   2b838:	add	r3, r3, #1
   2b83c:	str	r3, [r2, #8]
   2b840:	ldr	r3, [sp, #12]
   2b844:	str	r3, [r8]
   2b848:	mov	r0, r6
   2b84c:	add	sp, sp, #28
   2b850:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b854:	ldr	r2, [sp, #8]
   2b858:	subs	r3, r2, #0
   2b85c:	moveq	r3, r5
   2b860:	str	r3, [sp, #8]
   2b864:	b	2b804 <fb_symbol_table_visit@@Base+0x318>
   2b868:	ldr	sl, [sp, #4]
   2b86c:	mov	fp, r8
   2b870:	b	2b8b0 <fb_symbol_table_visit@@Base+0x3c4>
   2b874:	ldr	r3, [r9, #4]
   2b878:	ldr	r1, [sl, #4]
   2b87c:	ldr	r2, [r3, #4]
   2b880:	ldr	r0, [r1, #4]
   2b884:	cmp	r2, r0
   2b888:	bne	2b804 <fb_symbol_table_visit@@Base+0x318>
   2b88c:	ldr	r1, [r1]
   2b890:	ldr	r0, [r3]
   2b894:	bl	14018 <strncmp@plt>
   2b898:	cmp	r0, #0
   2b89c:	bne	2b804 <fb_symbol_table_visit@@Base+0x318>
   2b8a0:	adds	fp, fp, #1
   2b8a4:	ldr	r9, [r9]
   2b8a8:	ldr	sl, [sl]
   2b8ac:	beq	2b8f4 <fb_symbol_table_visit@@Base+0x408>
   2b8b0:	adds	r2, r9, #0
   2b8b4:	movne	r2, #1
   2b8b8:	adds	r3, sl, #0
   2b8bc:	movne	r3, #1
   2b8c0:	tst	r2, r3
   2b8c4:	bne	2b874 <fb_symbol_table_visit@@Base+0x388>
   2b8c8:	orrs	r3, r2, r3
   2b8cc:	bne	2b804 <fb_symbol_table_visit@@Base+0x318>
   2b8d0:	ldr	r3, [sp, #64]	; 0x40
   2b8d4:	cmp	r3, #0
   2b8d8:	bne	2b848 <fb_symbol_table_visit@@Base+0x35c>
   2b8dc:	ldr	r3, [sp, #12]
   2b8e0:	mov	r0, r6
   2b8e4:	str	r3, [r5]
   2b8e8:	add	sp, sp, #28
   2b8ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b8f0:	ldr	r9, [r9]
   2b8f4:	clz	r9, r9
   2b8f8:	lsr	r9, r9, #5
   2b8fc:	cmp	r9, #0
   2b900:	bne	2b8d0 <fb_symbol_table_visit@@Base+0x3e4>
   2b904:	b	2b804 <fb_symbol_table_visit@@Base+0x318>
   2b908:	mov	r3, lr
   2b90c:	b	2b7c4 <fb_symbol_table_visit@@Base+0x2d8>
   2b910:	ldr	r3, [sp, #4]
   2b914:	cmp	r3, #0
   2b918:	moveq	r4, r3
   2b91c:	moveq	r5, r4
   2b920:	beq	2b71c <fb_symbol_table_visit@@Base+0x230>
   2b924:	ldr	ip, [sp, #4]
   2b928:	ldr	r8, [pc, #368]	; 2baa0 <fb_symbol_table_visit@@Base+0x5b4>
   2b92c:	ldr	r6, [pc, #368]	; 2baa4 <fb_symbol_table_visit@@Base+0x5b8>
   2b930:	ldr	r2, [ip, #4]
   2b934:	ldr	r5, [pc, #364]	; 2baa8 <fb_symbol_table_visit@@Base+0x5bc>
   2b938:	ldr	lr, [sp, #20]
   2b93c:	ldm	r2, {r0, r3}
   2b940:	mov	r4, #0
   2b944:	subs	r3, r3, #1
   2b948:	beq	2b9b4 <fb_symbol_table_visit@@Base+0x4c8>
   2b94c:	ldrb	r2, [r0]
   2b950:	add	r1, r0, #1
   2b954:	cmp	r2, #0
   2b958:	beq	2b9b4 <fb_symbol_table_visit@@Base+0x4c8>
   2b95c:	add	r0, r0, r3
   2b960:	mov	r3, r8
   2b964:	b	2b974 <fb_symbol_table_visit@@Base+0x488>
   2b968:	ldrb	r2, [r1], #1
   2b96c:	cmp	r2, #0
   2b970:	beq	2b984 <fb_symbol_table_visit@@Base+0x498>
   2b974:	add	r3, r3, r3, lsl #5
   2b978:	cmp	r1, r0
   2b97c:	eor	r3, r3, r2
   2b980:	bne	2b968 <fb_symbol_table_visit@@Base+0x47c>
   2b984:	eor	r4, r4, r6
   2b988:	eor	r3, r3, r4
   2b98c:	adds	lr, lr, #1
   2b990:	mul	r4, r5, r3
   2b994:	ldr	ip, [ip]
   2b998:	beq	2b710 <fb_symbol_table_visit@@Base+0x224>
   2b99c:	cmp	ip, #0
   2b9a0:	beq	2b710 <fb_symbol_table_visit@@Base+0x224>
   2b9a4:	ldr	r2, [ip, #4]
   2b9a8:	ldm	r2, {r0, r3}
   2b9ac:	subs	r3, r3, #1
   2b9b0:	bne	2b94c <fb_symbol_table_visit@@Base+0x460>
   2b9b4:	mov	r3, r8
   2b9b8:	b	2b984 <fb_symbol_table_visit@@Base+0x498>
   2b9bc:	ldr	r1, [sp, #16]
   2b9c0:	ldr	r2, [r7, r5]
   2b9c4:	add	r5, r7, r5
   2b9c8:	ldr	r3, [r1, #8]
   2b9cc:	cmp	r2, #0
   2b9d0:	cmpne	r2, #2
   2b9d4:	add	r3, r3, #1
   2b9d8:	str	r3, [r1, #8]
   2b9dc:	beq	2ba04 <fb_symbol_table_visit@@Base+0x518>
   2b9e0:	ldr	r1, [sp]
   2b9e4:	add	r4, r4, #1
   2b9e8:	and	r3, r1, r4
   2b9ec:	add	r4, r4, #1
   2b9f0:	ldr	r2, [r7, r3, lsl #2]
   2b9f4:	add	r5, r7, r3, lsl #2
   2b9f8:	cmp	r2, #0
   2b9fc:	cmpne	r2, #2
   2ba00:	bne	2b9e8 <fb_symbol_table_visit@@Base+0x4fc>
   2ba04:	ldr	r3, [sp, #12]
   2ba08:	mov	r6, #0
   2ba0c:	str	r3, [r5]
   2ba10:	b	2b848 <fb_symbol_table_visit@@Base+0x35c>
   2ba14:	ldr	r3, [pc, #144]	; 2baac <fb_symbol_table_visit@@Base+0x5c0>
   2ba18:	ldr	r1, [pc, #144]	; 2bab0 <fb_symbol_table_visit@@Base+0x5c4>
   2ba1c:	ldr	r0, [pc, #144]	; 2bab4 <fb_symbol_table_visit@@Base+0x5c8>
   2ba20:	add	r3, pc, r3
   2ba24:	mov	r2, #114	; 0x72
   2ba28:	add	r1, pc, r1
   2ba2c:	add	r0, pc, r0
   2ba30:	bl	14030 <__assert_fail@plt>
   2ba34:	ldr	r3, [pc, #124]	; 2bab8 <fb_symbol_table_visit@@Base+0x5cc>
   2ba38:	ldr	r1, [pc, #124]	; 2babc <fb_symbol_table_visit@@Base+0x5d0>
   2ba3c:	ldr	r0, [pc, #124]	; 2bac0 <fb_symbol_table_visit@@Base+0x5d4>
   2ba40:	add	r3, pc, r3
   2ba44:	mov	r2, #116	; 0x74
   2ba48:	add	r1, pc, r1
   2ba4c:	add	r0, pc, r0
   2ba50:	bl	14030 <__assert_fail@plt>
   2ba54:	ldr	r3, [pc, #104]	; 2bac4 <fb_symbol_table_visit@@Base+0x5d8>
   2ba58:	ldr	r1, [pc, #104]	; 2bac8 <fb_symbol_table_visit@@Base+0x5dc>
   2ba5c:	ldr	r0, [pc, #104]	; 2bacc <fb_symbol_table_visit@@Base+0x5e0>
   2ba60:	add	r3, pc, r3
   2ba64:	mov	r2, #115	; 0x73
   2ba68:	add	r1, pc, r1
   2ba6c:	add	r0, pc, r0
   2ba70:	bl	14030 <__assert_fail@plt>
   2ba74:	ldr	r3, [pc, #84]	; 2bad0 <fb_symbol_table_visit@@Base+0x5e4>
   2ba78:	ldr	r2, [pc, #84]	; 2bad4 <fb_symbol_table_visit@@Base+0x5e8>
   2ba7c:	ldr	r1, [pc, #84]	; 2bad8 <fb_symbol_table_visit@@Base+0x5ec>
   2ba80:	ldr	r3, [r4, r3]
   2ba84:	add	r2, pc, r2
   2ba88:	add	r1, pc, r1
   2ba8c:	ldr	r0, [r3]
   2ba90:	bl	13f7c <fprintf@plt>
   2ba94:	mov	r0, #1
   2ba98:	bl	13f64 <exit@plt>
   2ba9c:	andeq	lr, r3, ip, asr sl
   2baa0:	svccs	0x00692e57
   2baa4:	svccs	0x00693b52
   2baa8:			; <UNDEFINED> instruction: 0x9e3779b1
   2baac:			; <UNDEFINED> instruction: 0x0002aab4
   2bab0:	andeq	sl, r2, r0, lsl #19
   2bab4:	andeq	sl, r2, r4, ror #19
   2bab8:	muleq	r2, r4, sl
   2babc:	andeq	sl, r2, r0, ror #18
   2bac0:	strdeq	sl, [r2], -r4
   2bac4:	andeq	sl, r2, r4, ror sl
   2bac8:	andeq	sl, r2, r0, asr #18
   2bacc:			; <UNDEFINED> instruction: 0x0002a9bc
   2bad0:	muleq	r0, ip, r0
   2bad4:	ldrdeq	sl, [r2], -r4
   2bad8:	andeq	sl, r2, r4, lsl #20
   2badc:	ldr	r3, [r0, #8]
   2bae0:	push	{r4, r5, r6, r7, r8, r9, lr}
   2bae4:	cmp	r1, r3
   2bae8:	movcc	r1, r3
   2baec:	cmp	r1, #2
   2baf0:	sub	sp, sp, #28
   2baf4:	mov	r7, r0
   2baf8:	ldr	r6, [r0]
   2bafc:	mov	r5, #4
   2bb00:	bls	2bb18 <fb_symbol_table_visit@@Base+0x62c>
   2bb04:	mov	r2, #179	; 0xb3
   2bb08:	lsl	r5, r5, #1
   2bb0c:	mul	r3, r2, r5
   2bb10:	cmp	r1, r3, lsr #8
   2bb14:	bhi	2bb08 <fb_symbol_table_visit@@Base+0x61c>
   2bb18:	mov	r1, #4
   2bb1c:	mov	r0, r5
   2bb20:	bl	13e98 <calloc@plt>
   2bb24:	cmp	r0, #0
   2bb28:	str	r0, [sp, #8]
   2bb2c:	beq	2bbd4 <fb_symbol_table_visit@@Base+0x6e8>
   2bb30:	ldr	r2, [r7, #12]
   2bb34:	mov	r4, #0
   2bb38:	cmp	r2, r4
   2bb3c:	str	r5, [sp, #20]
   2bb40:	str	r4, [sp, #12]
   2bb44:	subne	r5, r6, #4
   2bb48:	str	r4, [sp, #16]
   2bb4c:	movne	r9, r4
   2bb50:	addne	r6, sp, #8
   2bb54:	movne	r8, #3
   2bb58:	bne	2bb68 <fb_symbol_table_visit@@Base+0x67c>
   2bb5c:	b	2bbcc <fb_symbol_table_visit@@Base+0x6e0>
   2bb60:	cmp	r2, r4
   2bb64:	bls	2bb9c <fb_symbol_table_visit@@Base+0x6b0>
   2bb68:	ldr	r3, [r5, #4]!
   2bb6c:	add	r4, r4, #1
   2bb70:	cmp	r3, #0
   2bb74:	cmpne	r3, #2
   2bb78:	beq	2bb60 <fb_symbol_table_visit@@Base+0x674>
   2bb7c:	ldr	r1, [r3]
   2bb80:	mov	r2, r9
   2bb84:	str	r8, [sp]
   2bb88:	mov	r0, r6
   2bb8c:	bl	2b57c <fb_symbol_table_visit@@Base+0x90>
   2bb90:	ldr	r2, [r7, #12]
   2bb94:	cmp	r2, r4
   2bb98:	bhi	2bb68 <fb_symbol_table_visit@@Base+0x67c>
   2bb9c:	mov	r0, r7
   2bba0:	bl	2b54c <fb_symbol_table_visit@@Base+0x60>
   2bba4:	mov	ip, r6
   2bba8:	mov	lr, #0
   2bbac:	ldm	ip!, {r0, r1, r2, r3}
   2bbb0:	str	r0, [r7]
   2bbb4:	str	r1, [r7, #4]
   2bbb8:	str	r2, [r7, #8]
   2bbbc:	str	r3, [r7, #12]
   2bbc0:	mov	r0, lr
   2bbc4:	add	sp, sp, #28
   2bbc8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2bbcc:	add	r6, sp, #8
   2bbd0:	b	2bb9c <fb_symbol_table_visit@@Base+0x6b0>
   2bbd4:	mvn	lr, #0
   2bbd8:	b	2bbc0 <fb_symbol_table_visit@@Base+0x6d4>
   2bbdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bbe0:	sub	sp, sp, #12
   2bbe4:	cmp	r0, #0
   2bbe8:	str	r0, [sp]
   2bbec:	beq	2bf48 <fb_symbol_table_visit@@Base+0xa5c>
   2bbf0:	mov	fp, r2
   2bbf4:	ldr	r2, [r1]
   2bbf8:	cmp	r3, #0
   2bbfc:	sub	r2, r2, #1
   2bc00:	str	r2, [sp, #4]
   2bc04:	ble	2bea8 <fb_symbol_table_visit@@Base+0x9bc>
   2bc08:	mov	r4, #0
   2bc0c:	ldr	r6, [pc, #828]	; 2bf50 <fb_symbol_table_visit@@Base+0xa64>
   2bc10:	ldr	sl, [pc, #828]	; 2bf54 <fb_symbol_table_visit@@Base+0xa68>
   2bc14:	ldr	r9, [pc, #828]	; 2bf58 <fb_symbol_table_visit@@Base+0xa6c>
   2bc18:	mov	r8, r4
   2bc1c:	mov	r7, fp
   2bc20:	mov	r5, r3
   2bc24:	cmp	r5, #0
   2bc28:	ldrb	r0, [r7]
   2bc2c:	moveq	r1, r8
   2bc30:	mvneq	ip, #0
   2bc34:	beq	2bc7c <fb_symbol_table_visit@@Base+0x790>
   2bc38:	cmp	r0, #46	; 0x2e
   2bc3c:	addeq	lr, r7, #1
   2bc40:	mvneq	ip, #0
   2bc44:	moveq	r1, r8
   2bc48:	beq	2bc88 <fb_symbol_table_visit@@Base+0x79c>
   2bc4c:	mov	r2, r7
   2bc50:	mov	ip, r8
   2bc54:	b	2bc68 <fb_symbol_table_visit@@Base+0x77c>
   2bc58:	ldrb	lr, [r2, #1]!
   2bc5c:	cmp	lr, #46	; 0x2e
   2bc60:	beq	2bcd8 <fb_symbol_table_visit@@Base+0x7ec>
   2bc64:	mov	ip, r1
   2bc68:	add	r1, ip, #1
   2bc6c:	cmp	r1, r5
   2bc70:	bne	2bc58 <fb_symbol_table_visit@@Base+0x76c>
   2bc74:	cmp	ip, #0
   2bc78:	beq	2bcfc <fb_symbol_table_visit@@Base+0x810>
   2bc7c:	cmp	r0, #0
   2bc80:	add	lr, r7, #1
   2bc84:	beq	2bcfc <fb_symbol_table_visit@@Base+0x810>
   2bc88:	add	ip, r7, ip
   2bc8c:	mov	r2, r6
   2bc90:	b	2bca0 <fb_symbol_table_visit@@Base+0x7b4>
   2bc94:	ldrb	r0, [lr], #1
   2bc98:	cmp	r0, #0
   2bc9c:	beq	2bcb0 <fb_symbol_table_visit@@Base+0x7c4>
   2bca0:	add	r2, r2, r2, lsl #5
   2bca4:	cmp	lr, ip
   2bca8:	eor	r2, r2, r0
   2bcac:	bne	2bc94 <fb_symbol_table_visit@@Base+0x7a8>
   2bcb0:	eor	r4, r4, sl
   2bcb4:	eor	r2, r2, r4
   2bcb8:	cmp	r5, r1
   2bcbc:	mul	r4, r9, r2
   2bcc0:	beq	2bd0c <fb_symbol_table_visit@@Base+0x820>
   2bcc4:	mvn	r2, r1
   2bcc8:	add	r1, r1, #1
   2bccc:	add	r5, r5, r2
   2bcd0:	add	r7, r7, r1
   2bcd4:	b	2bc24 <fb_symbol_table_visit@@Base+0x738>
   2bcd8:	cmp	ip, #0
   2bcdc:	beq	2bcec <fb_symbol_table_visit@@Base+0x800>
   2bce0:	cmp	r0, #0
   2bce4:	add	lr, r7, #1
   2bce8:	bne	2bc88 <fb_symbol_table_visit@@Base+0x79c>
   2bcec:	eor	r4, r4, #5376	; 0x1500
   2bcf0:	eor	r4, r4, #5
   2bcf4:	mul	r4, r9, r4
   2bcf8:	b	2bcc4 <fb_symbol_table_visit@@Base+0x7d8>
   2bcfc:	eor	r4, r4, #5376	; 0x1500
   2bd00:	ldr	r2, [pc, #592]	; 2bf58 <fb_symbol_table_visit@@Base+0xa6c>
   2bd04:	eor	r4, r4, #5
   2bd08:	mul	r4, r2, r4
   2bd0c:	ldr	r2, [sp, #4]
   2bd10:	and	r2, r2, r4
   2bd14:	lsl	r2, r2, #2
   2bd18:	ldr	r1, [sp]
   2bd1c:	ldr	r5, [r1, r2]
   2bd20:	cmp	r5, #0
   2bd24:	beq	2be04 <fb_symbol_table_visit@@Base+0x918>
   2bd28:	ldr	r8, [sp, #4]
   2bd2c:	mov	r6, r3
   2bd30:	mov	r7, r1
   2bd34:	add	r4, r4, #1
   2bd38:	str	fp, [sp]
   2bd3c:	cmp	r5, #2
   2bd40:	beq	2bdf0 <fb_symbol_table_visit@@Base+0x904>
   2bd44:	cmp	r6, #0
   2bd48:	ldr	r9, [r5]
   2bd4c:	ble	2be10 <fb_symbol_table_visit@@Base+0x924>
   2bd50:	cmp	r9, #0
   2bd54:	beq	2bdf0 <fb_symbol_table_visit@@Base+0x904>
   2bd58:	ldr	r3, [r9, #4]
   2bd5c:	ldm	r3, {r2, lr}
   2bd60:	cmp	r6, lr
   2bd64:	bcc	2bdf0 <fb_symbol_table_visit@@Base+0x904>
   2bd68:	ldr	sl, [sp]
   2bd6c:	mov	fp, r6
   2bd70:	cmp	lr, #0
   2bd74:	beq	2bea0 <fb_symbol_table_visit@@Base+0x9b4>
   2bd78:	ldrb	r1, [sl]
   2bd7c:	ldrb	r3, [r2]
   2bd80:	cmp	r1, r3
   2bd84:	bne	2bdf0 <fb_symbol_table_visit@@Base+0x904>
   2bd88:	mov	r1, sl
   2bd8c:	mov	r3, #0
   2bd90:	b	2bda4 <fb_symbol_table_visit@@Base+0x8b8>
   2bd94:	ldrb	ip, [r2, #1]!
   2bd98:	ldrb	r0, [r1, #1]!
   2bd9c:	cmp	ip, r0
   2bda0:	bne	2bdf0 <fb_symbol_table_visit@@Base+0x904>
   2bda4:	add	r3, r3, #1
   2bda8:	cmp	r3, lr
   2bdac:	bne	2bd94 <fb_symbol_table_visit@@Base+0x8a8>
   2bdb0:	cmp	lr, fp
   2bdb4:	beq	2be80 <fb_symbol_table_visit@@Base+0x994>
   2bdb8:	ldrb	r3, [sl, r3]
   2bdbc:	cmp	r3, #46	; 0x2e
   2bdc0:	bne	2bdf0 <fb_symbol_table_visit@@Base+0x904>
   2bdc4:	ldr	r9, [r9]
   2bdc8:	mvn	r3, lr
   2bdcc:	cmp	r9, #0
   2bdd0:	add	lr, lr, #1
   2bdd4:	add	fp, fp, r3
   2bdd8:	add	sl, sl, lr
   2bddc:	beq	2bdf0 <fb_symbol_table_visit@@Base+0x904>
   2bde0:	ldr	r3, [r9, #4]
   2bde4:	ldm	r3, {r2, lr}
   2bde8:	cmp	lr, fp
   2bdec:	bls	2bd70 <fb_symbol_table_visit@@Base+0x884>
   2bdf0:	and	r3, r8, r4
   2bdf4:	add	r4, r4, #1
   2bdf8:	ldr	r5, [r7, r3, lsl #2]
   2bdfc:	cmp	r5, #0
   2be00:	bne	2bd3c <fb_symbol_table_visit@@Base+0x850>
   2be04:	mov	r0, r5
   2be08:	add	sp, sp, #12
   2be0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2be10:	ldr	sl, [sp]
   2be14:	mov	fp, r6
   2be18:	b	2be5c <fb_symbol_table_visit@@Base+0x970>
   2be1c:	ldr	r0, [r9, #4]
   2be20:	ldr	r1, [sl, #4]
   2be24:	ldr	r3, [r0, #4]
   2be28:	ldr	ip, [r1, #4]
   2be2c:	mov	r2, r3
   2be30:	cmp	r3, ip
   2be34:	bne	2bdf0 <fb_symbol_table_visit@@Base+0x904>
   2be38:	ldr	r1, [r1]
   2be3c:	ldr	r0, [r0]
   2be40:	bl	14018 <strncmp@plt>
   2be44:	cmp	r0, #0
   2be48:	bne	2bdf0 <fb_symbol_table_visit@@Base+0x904>
   2be4c:	adds	fp, fp, #1
   2be50:	ldr	r9, [r9]
   2be54:	ldr	sl, [sl]
   2be58:	beq	2be84 <fb_symbol_table_visit@@Base+0x998>
   2be5c:	adds	r2, r9, #0
   2be60:	movne	r2, #1
   2be64:	adds	r3, sl, #0
   2be68:	movne	r3, #1
   2be6c:	tst	r2, r3
   2be70:	bne	2be1c <fb_symbol_table_visit@@Base+0x930>
   2be74:	orrs	r3, r2, r3
   2be78:	bne	2bdf0 <fb_symbol_table_visit@@Base+0x904>
   2be7c:	b	2be04 <fb_symbol_table_visit@@Base+0x918>
   2be80:	ldr	r9, [r9]
   2be84:	clz	r9, r9
   2be88:	lsr	r9, r9, #5
   2be8c:	cmp	r9, #0
   2be90:	beq	2bdf0 <fb_symbol_table_visit@@Base+0x904>
   2be94:	mov	r0, r5
   2be98:	add	sp, sp, #12
   2be9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2bea0:	mov	r3, lr
   2bea4:	b	2bdb0 <fb_symbol_table_visit@@Base+0x8c4>
   2bea8:	cmp	fp, #0
   2beac:	moveq	r2, fp
   2beb0:	moveq	r4, fp
   2beb4:	beq	2bd18 <fb_symbol_table_visit@@Base+0x82c>
   2beb8:	ldr	lr, [pc, #144]	; 2bf50 <fb_symbol_table_visit@@Base+0xa64>
   2bebc:	ldr	r6, [pc, #144]	; 2bf54 <fb_symbol_table_visit@@Base+0xa68>
   2bec0:	ldr	r5, [pc, #144]	; 2bf58 <fb_symbol_table_visit@@Base+0xa6c>
   2bec4:	mov	ip, r3
   2bec8:	mov	r0, fp
   2becc:	mov	r4, #0
   2bed0:	ldr	r1, [r0, #4]
   2bed4:	ldr	r2, [r1, #4]
   2bed8:	ldr	r8, [r1]
   2bedc:	subs	r2, r2, #1
   2bee0:	beq	2bf40 <fb_symbol_table_visit@@Base+0xa54>
   2bee4:	ldrb	r1, [r8]
   2bee8:	add	r7, r8, #1
   2beec:	cmp	r1, #0
   2bef0:	beq	2bf40 <fb_symbol_table_visit@@Base+0xa54>
   2bef4:	add	r8, r8, r2
   2bef8:	mov	r2, lr
   2befc:	b	2bf0c <fb_symbol_table_visit@@Base+0xa20>
   2bf00:	ldrb	r1, [r7], #1
   2bf04:	cmp	r1, #0
   2bf08:	beq	2bf1c <fb_symbol_table_visit@@Base+0xa30>
   2bf0c:	add	r2, r2, r2, lsl #5
   2bf10:	cmp	r7, r8
   2bf14:	eor	r2, r2, r1
   2bf18:	bne	2bf00 <fb_symbol_table_visit@@Base+0xa14>
   2bf1c:	eor	r4, r4, r6
   2bf20:	eor	r2, r2, r4
   2bf24:	adds	ip, ip, #1
   2bf28:	mul	r4, r5, r2
   2bf2c:	ldr	r0, [r0]
   2bf30:	beq	2bd0c <fb_symbol_table_visit@@Base+0x820>
   2bf34:	cmp	r0, #0
   2bf38:	bne	2bed0 <fb_symbol_table_visit@@Base+0x9e4>
   2bf3c:	b	2bd0c <fb_symbol_table_visit@@Base+0x820>
   2bf40:	mov	r2, lr
   2bf44:	b	2bf1c <fb_symbol_table_visit@@Base+0xa30>
   2bf48:	ldr	r5, [sp]
   2bf4c:	b	2be04 <fb_symbol_table_visit@@Base+0x918>
   2bf50:	svccs	0x00692e57
   2bf54:	svccs	0x00693b52
   2bf58:			; <UNDEFINED> instruction: 0x9e3779b1
   2bf5c:	ldr	r3, [r0]
   2bf60:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2bf64:	sub	sp, sp, #20
   2bf68:	cmp	r3, #0
   2bf6c:	str	r1, [sp, #8]
   2bf70:	str	r3, [sp, #12]
   2bf74:	beq	2c300 <fb_symbol_table_visit@@Base+0xe14>
   2bf78:	ldr	r3, [r0, #12]
   2bf7c:	cmp	r2, #0
   2bf80:	sub	r3, r3, #1
   2bf84:	mov	sl, r0
   2bf88:	mov	fp, r2
   2bf8c:	str	r3, [sp, #4]
   2bf90:	ble	2c254 <fb_symbol_table_visit@@Base+0xd68>
   2bf94:	mov	r4, #0
   2bf98:	ldr	r9, [pc, #872]	; 2c308 <fb_symbol_table_visit@@Base+0xe1c>
   2bf9c:	ldr	r8, [pc, #872]	; 2c30c <fb_symbol_table_visit@@Base+0xe20>
   2bfa0:	ldr	r7, [pc, #872]	; 2c310 <fb_symbol_table_visit@@Base+0xe24>
   2bfa4:	mov	r6, r4
   2bfa8:	mov	r5, r1
   2bfac:	mov	lr, r2
   2bfb0:	cmp	lr, #0
   2bfb4:	ldrb	r1, [r5]
   2bfb8:	moveq	r2, r6
   2bfbc:	mvneq	r0, #0
   2bfc0:	beq	2c008 <fb_symbol_table_visit@@Base+0xb1c>
   2bfc4:	cmp	r1, #46	; 0x2e
   2bfc8:	addeq	ip, r5, #1
   2bfcc:	mvneq	r0, #0
   2bfd0:	moveq	r2, r6
   2bfd4:	beq	2c014 <fb_symbol_table_visit@@Base+0xb28>
   2bfd8:	mov	r3, r5
   2bfdc:	mov	r0, r6
   2bfe0:	b	2bff4 <fb_symbol_table_visit@@Base+0xb08>
   2bfe4:	ldrb	ip, [r3, #1]!
   2bfe8:	cmp	ip, #46	; 0x2e
   2bfec:	beq	2c064 <fb_symbol_table_visit@@Base+0xb78>
   2bff0:	mov	r0, r2
   2bff4:	add	r2, r0, #1
   2bff8:	cmp	r2, lr
   2bffc:	bne	2bfe4 <fb_symbol_table_visit@@Base+0xaf8>
   2c000:	cmp	r0, #0
   2c004:	beq	2c088 <fb_symbol_table_visit@@Base+0xb9c>
   2c008:	cmp	r1, #0
   2c00c:	add	ip, r5, #1
   2c010:	beq	2c088 <fb_symbol_table_visit@@Base+0xb9c>
   2c014:	add	r0, r5, r0
   2c018:	mov	r3, r9
   2c01c:	b	2c02c <fb_symbol_table_visit@@Base+0xb40>
   2c020:	ldrb	r1, [ip], #1
   2c024:	cmp	r1, #0
   2c028:	beq	2c03c <fb_symbol_table_visit@@Base+0xb50>
   2c02c:	add	r3, r3, r3, lsl #5
   2c030:	cmp	ip, r0
   2c034:	eor	r3, r3, r1
   2c038:	bne	2c020 <fb_symbol_table_visit@@Base+0xb34>
   2c03c:	eor	r4, r4, r8
   2c040:	eor	r3, r3, r4
   2c044:	cmp	lr, r2
   2c048:	mul	r4, r7, r3
   2c04c:	beq	2c098 <fb_symbol_table_visit@@Base+0xbac>
   2c050:	mvn	r3, r2
   2c054:	add	r2, r2, #1
   2c058:	add	lr, lr, r3
   2c05c:	add	r5, r5, r2
   2c060:	b	2bfb0 <fb_symbol_table_visit@@Base+0xac4>
   2c064:	cmp	r0, #0
   2c068:	beq	2c078 <fb_symbol_table_visit@@Base+0xb8c>
   2c06c:	cmp	r1, #0
   2c070:	add	ip, r5, #1
   2c074:	bne	2c014 <fb_symbol_table_visit@@Base+0xb28>
   2c078:	eor	r4, r4, #5376	; 0x1500
   2c07c:	eor	r4, r4, #5
   2c080:	mul	r4, r7, r4
   2c084:	b	2c050 <fb_symbol_table_visit@@Base+0xb64>
   2c088:	eor	r4, r4, #5376	; 0x1500
   2c08c:	ldr	r3, [pc, #636]	; 2c310 <fb_symbol_table_visit@@Base+0xe24>
   2c090:	eor	r4, r4, #5
   2c094:	mul	r4, r3, r4
   2c098:	ldr	r3, [sp, #4]
   2c09c:	and	r5, r3, r4
   2c0a0:	lsl	r5, r5, #2
   2c0a4:	ldr	r3, [sp, #12]
   2c0a8:	ldr	r6, [r3, r5]
   2c0ac:	add	r5, r3, r5
   2c0b0:	cmp	r6, #0
   2c0b4:	beq	2c198 <fb_symbol_table_visit@@Base+0xcac>
   2c0b8:	mov	r7, fp
   2c0bc:	add	r4, r4, #1
   2c0c0:	mov	r8, r3
   2c0c4:	str	sl, [sp, #12]
   2c0c8:	cmp	r6, #2
   2c0cc:	beq	2c17c <fb_symbol_table_visit@@Base+0xc90>
   2c0d0:	cmp	r7, #0
   2c0d4:	ldr	r9, [r6]
   2c0d8:	ble	2c1a4 <fb_symbol_table_visit@@Base+0xcb8>
   2c0dc:	cmp	r9, #0
   2c0e0:	beq	2c17c <fb_symbol_table_visit@@Base+0xc90>
   2c0e4:	ldr	r3, [r9, #4]
   2c0e8:	ldm	r3, {r2, lr}
   2c0ec:	cmp	r7, lr
   2c0f0:	bcc	2c17c <fb_symbol_table_visit@@Base+0xc90>
   2c0f4:	ldr	sl, [sp, #8]
   2c0f8:	mov	fp, r7
   2c0fc:	cmp	lr, #0
   2c100:	beq	2c24c <fb_symbol_table_visit@@Base+0xd60>
   2c104:	ldrb	r1, [r2]
   2c108:	ldrb	r3, [sl]
   2c10c:	cmp	r1, r3
   2c110:	bne	2c17c <fb_symbol_table_visit@@Base+0xc90>
   2c114:	mov	r1, sl
   2c118:	mov	r3, #0
   2c11c:	b	2c130 <fb_symbol_table_visit@@Base+0xc44>
   2c120:	ldrb	ip, [r2, #1]!
   2c124:	ldrb	r0, [r1, #1]!
   2c128:	cmp	ip, r0
   2c12c:	bne	2c17c <fb_symbol_table_visit@@Base+0xc90>
   2c130:	add	r3, r3, #1
   2c134:	cmp	r3, lr
   2c138:	bne	2c120 <fb_symbol_table_visit@@Base+0xc34>
   2c13c:	cmp	lr, fp
   2c140:	beq	2c234 <fb_symbol_table_visit@@Base+0xd48>
   2c144:	ldrb	r3, [sl, r3]
   2c148:	cmp	r3, #46	; 0x2e
   2c14c:	bne	2c17c <fb_symbol_table_visit@@Base+0xc90>
   2c150:	ldr	r9, [r9]
   2c154:	mvn	r3, lr
   2c158:	cmp	r9, #0
   2c15c:	add	lr, lr, #1
   2c160:	add	fp, fp, r3
   2c164:	add	sl, sl, lr
   2c168:	beq	2c17c <fb_symbol_table_visit@@Base+0xc90>
   2c16c:	ldr	r3, [r9, #4]
   2c170:	ldm	r3, {r2, lr}
   2c174:	cmp	lr, fp
   2c178:	bls	2c0fc <fb_symbol_table_visit@@Base+0xc10>
   2c17c:	ldr	r3, [sp, #4]
   2c180:	and	r5, r3, r4
   2c184:	add	r4, r4, #1
   2c188:	ldr	r6, [r8, r5, lsl #2]
   2c18c:	add	r5, r8, r5, lsl #2
   2c190:	cmp	r6, #0
   2c194:	bne	2c0c8 <fb_symbol_table_visit@@Base+0xbdc>
   2c198:	mov	r0, r6
   2c19c:	add	sp, sp, #20
   2c1a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c1a4:	ldr	sl, [sp, #8]
   2c1a8:	mov	fp, r7
   2c1ac:	b	2c1f0 <fb_symbol_table_visit@@Base+0xd04>
   2c1b0:	ldr	r0, [r9, #4]
   2c1b4:	ldr	r1, [sl, #4]
   2c1b8:	ldr	r3, [r0, #4]
   2c1bc:	ldr	ip, [r1, #4]
   2c1c0:	mov	r2, r3
   2c1c4:	cmp	r3, ip
   2c1c8:	bne	2c17c <fb_symbol_table_visit@@Base+0xc90>
   2c1cc:	ldr	r1, [r1]
   2c1d0:	ldr	r0, [r0]
   2c1d4:	bl	14018 <strncmp@plt>
   2c1d8:	cmp	r0, #0
   2c1dc:	bne	2c17c <fb_symbol_table_visit@@Base+0xc90>
   2c1e0:	adds	fp, fp, #1
   2c1e4:	ldr	r9, [r9]
   2c1e8:	ldr	sl, [sl]
   2c1ec:	beq	2c238 <fb_symbol_table_visit@@Base+0xd4c>
   2c1f0:	adds	r2, r9, #0
   2c1f4:	movne	r2, #1
   2c1f8:	adds	r3, sl, #0
   2c1fc:	movne	r3, #1
   2c200:	tst	r2, r3
   2c204:	bne	2c1b0 <fb_symbol_table_visit@@Base+0xcc4>
   2c208:	orrs	r3, r2, r3
   2c20c:	bne	2c17c <fb_symbol_table_visit@@Base+0xc90>
   2c210:	ldr	r1, [sp, #12]
   2c214:	mov	r2, #2
   2c218:	mov	r0, r6
   2c21c:	ldr	r3, [r1, #8]
   2c220:	str	r2, [r5]
   2c224:	sub	r3, r3, #1
   2c228:	str	r3, [r1, #8]
   2c22c:	add	sp, sp, #20
   2c230:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c234:	ldr	r9, [r9]
   2c238:	clz	r9, r9
   2c23c:	lsr	r9, r9, #5
   2c240:	cmp	r9, #0
   2c244:	bne	2c210 <fb_symbol_table_visit@@Base+0xd24>
   2c248:	b	2c17c <fb_symbol_table_visit@@Base+0xc90>
   2c24c:	mov	r3, lr
   2c250:	b	2c13c <fb_symbol_table_visit@@Base+0xc50>
   2c254:	ldr	r3, [sp, #8]
   2c258:	cmp	r3, #0
   2c25c:	moveq	r4, r3
   2c260:	moveq	r5, r4
   2c264:	beq	2c0a4 <fb_symbol_table_visit@@Base+0xbb8>
   2c268:	ldr	ip, [sp, #8]
   2c26c:	ldr	r5, [pc, #148]	; 2c308 <fb_symbol_table_visit@@Base+0xe1c>
   2c270:	ldr	r7, [pc, #148]	; 2c30c <fb_symbol_table_visit@@Base+0xe20>
   2c274:	ldr	r2, [ip, #4]
   2c278:	ldr	r6, [pc, #144]	; 2c310 <fb_symbol_table_visit@@Base+0xe24>
   2c27c:	mov	lr, fp
   2c280:	ldm	r2, {r0, r3}
   2c284:	mov	r4, #0
   2c288:	subs	r3, r3, #1
   2c28c:	beq	2c2f8 <fb_symbol_table_visit@@Base+0xe0c>
   2c290:	ldrb	r2, [r0]
   2c294:	add	r1, r0, #1
   2c298:	cmp	r2, #0
   2c29c:	beq	2c2f8 <fb_symbol_table_visit@@Base+0xe0c>
   2c2a0:	add	r0, r0, r3
   2c2a4:	mov	r3, r5
   2c2a8:	b	2c2b8 <fb_symbol_table_visit@@Base+0xdcc>
   2c2ac:	ldrb	r2, [r1], #1
   2c2b0:	cmp	r2, #0
   2c2b4:	beq	2c2c8 <fb_symbol_table_visit@@Base+0xddc>
   2c2b8:	add	r3, r3, r3, lsl #5
   2c2bc:	cmp	r1, r0
   2c2c0:	eor	r3, r3, r2
   2c2c4:	bne	2c2ac <fb_symbol_table_visit@@Base+0xdc0>
   2c2c8:	eor	r4, r4, r7
   2c2cc:	eor	r3, r3, r4
   2c2d0:	adds	lr, lr, #1
   2c2d4:	mul	r4, r6, r3
   2c2d8:	ldr	ip, [ip]
   2c2dc:	beq	2c098 <fb_symbol_table_visit@@Base+0xbac>
   2c2e0:	cmp	ip, #0
   2c2e4:	beq	2c098 <fb_symbol_table_visit@@Base+0xbac>
   2c2e8:	ldr	r2, [ip, #4]
   2c2ec:	ldm	r2, {r0, r3}
   2c2f0:	subs	r3, r3, #1
   2c2f4:	bne	2c290 <fb_symbol_table_visit@@Base+0xda4>
   2c2f8:	mov	r3, r5
   2c2fc:	b	2c2c8 <fb_symbol_table_visit@@Base+0xddc>
   2c300:	ldr	r6, [sp, #12]
   2c304:	b	2c198 <fb_symbol_table_visit@@Base+0xcac>
   2c308:	svccs	0x00692e57
   2c30c:	svccs	0x00693b52
   2c310:			; <UNDEFINED> instruction: 0x9e3779b1

0002c314 <fb_scope_table_clear@@Base>:
   2c314:	b	2b54c <fb_symbol_table_visit@@Base+0x60>

0002c318 <fb_scope_table_destroy@@Base>:
   2c318:	push	{r4, r5, r6, r7, r8, lr}
   2c31c:	subs	r7, r1, #0
   2c320:	mov	r6, r0
   2c324:	beq	2c378 <fb_scope_table_destroy@@Base+0x60>
   2c328:	ldr	r3, [r0, #12]
   2c32c:	ldr	r5, [r0]
   2c330:	cmp	r3, #0
   2c334:	beq	2c378 <fb_scope_table_destroy@@Base+0x60>
   2c338:	mov	r8, r2
   2c33c:	sub	r5, r5, #4
   2c340:	mov	r4, #0
   2c344:	b	2c350 <fb_scope_table_destroy@@Base+0x38>
   2c348:	cmp	r4, r3
   2c34c:	bcs	2c378 <fb_scope_table_destroy@@Base+0x60>
   2c350:	ldr	r1, [r5, #4]!
   2c354:	add	r4, r4, #1
   2c358:	cmp	r1, #0
   2c35c:	cmpne	r1, #2
   2c360:	beq	2c348 <fb_scope_table_destroy@@Base+0x30>
   2c364:	mov	r0, r8
   2c368:	blx	r7
   2c36c:	ldr	r3, [r6, #12]
   2c370:	cmp	r4, r3
   2c374:	bcc	2c350 <fb_scope_table_destroy@@Base+0x38>
   2c378:	mov	r0, r6
   2c37c:	pop	{r4, r5, r6, r7, r8, lr}
   2c380:	b	2b54c <fb_symbol_table_visit@@Base+0x60>

0002c384 <fb_scope_table_init@@Base>:
   2c384:	cmp	r1, #2
   2c388:	push	{r4, r5, r6, lr}
   2c38c:	mov	r4, #4
   2c390:	mov	r5, r0
   2c394:	bls	2c3ac <fb_scope_table_init@@Base+0x28>
   2c398:	mov	r2, #179	; 0xb3
   2c39c:	lsl	r4, r4, #1
   2c3a0:	mul	r3, r2, r4
   2c3a4:	cmp	r1, r3, lsr #8
   2c3a8:	bhi	2c39c <fb_scope_table_init@@Base+0x18>
   2c3ac:	mov	r1, #4
   2c3b0:	mov	r0, r4
   2c3b4:	bl	13e98 <calloc@plt>
   2c3b8:	cmp	r0, #0
   2c3bc:	str	r0, [r5]
   2c3c0:	movne	r0, #0
   2c3c4:	strne	r4, [r5, #12]
   2c3c8:	strne	r0, [r5, #4]
   2c3cc:	strne	r0, [r5, #8]
   2c3d0:	mvneq	r0, #0
   2c3d4:	pop	{r4, r5, r6, pc}

0002c3d8 <fb_scope_table_resize@@Base>:
   2c3d8:	b	2badc <fb_symbol_table_visit@@Base+0x5f0>

0002c3dc <fb_scope_table_insert@@Base>:
   2c3dc:	b	2b57c <fb_symbol_table_visit@@Base+0x90>

0002c3e0 <fb_scope_table_insert_item@@Base>:
   2c3e0:	push	{lr}		; (str lr, [sp, #-4]!)
   2c3e4:	sub	sp, sp, #12
   2c3e8:	mov	r3, r1
   2c3ec:	str	r2, [sp]
   2c3f0:	mov	r2, #0
   2c3f4:	ldr	r1, [r1]
   2c3f8:	bl	2b57c <fb_symbol_table_visit@@Base+0x90>
   2c3fc:	add	sp, sp, #12
   2c400:	pop	{pc}		; (ldr pc, [sp], #4)

0002c404 <fb_scope_table_find@@Base>:
   2c404:	mov	ip, r0
   2c408:	mov	r3, r2
   2c40c:	ldr	r0, [r0]
   2c410:	mov	r2, r1
   2c414:	add	r1, ip, #12
   2c418:	b	2bbdc <fb_symbol_table_visit@@Base+0x6f0>

0002c41c <fb_scope_table_find_item@@Base>:
   2c41c:	mov	r3, r0
   2c420:	ldr	r2, [r1]
   2c424:	ldr	r0, [r0]
   2c428:	add	r1, r3, #12
   2c42c:	mov	r3, #0
   2c430:	b	2bbdc <fb_symbol_table_visit@@Base+0x6f0>

0002c434 <fb_scope_table_remove@@Base>:
   2c434:	b	2bf5c <fb_symbol_table_visit@@Base+0xa70>

0002c438 <fb_scope_table_remove_item@@Base>:
   2c438:	ldr	r1, [r1]
   2c43c:	mov	r2, #0
   2c440:	b	2bf5c <fb_symbol_table_visit@@Base+0xa70>

0002c444 <fb_scope_table_visit@@Base>:
   2c444:	ldr	r3, [r0, #12]
   2c448:	push	{r4, r5, r6, r7, r8, lr}
   2c44c:	cmp	r3, #0
   2c450:	ldr	r5, [r0]
   2c454:	popeq	{r4, r5, r6, r7, r8, pc}
   2c458:	mov	r7, r2
   2c45c:	mov	r6, r1
   2c460:	mov	r8, r0
   2c464:	sub	r5, r5, #4
   2c468:	mov	r4, #0
   2c46c:	b	2c478 <fb_scope_table_visit@@Base+0x34>
   2c470:	cmp	r4, r3
   2c474:	bcs	2c4a0 <fb_scope_table_visit@@Base+0x5c>
   2c478:	ldr	r1, [r5, #4]!
   2c47c:	add	r4, r4, #1
   2c480:	cmp	r1, #0
   2c484:	cmpne	r1, #2
   2c488:	beq	2c470 <fb_scope_table_visit@@Base+0x2c>
   2c48c:	mov	r0, r7
   2c490:	blx	r6
   2c494:	ldr	r3, [r8, #12]
   2c498:	cmp	r4, r3
   2c49c:	bcc	2c478 <fb_scope_table_visit@@Base+0x34>
   2c4a0:	pop	{r4, r5, r6, r7, r8, pc}
   2c4a4:	push	{r4, lr}
   2c4a8:	mov	r4, r0
   2c4ac:	ldr	r0, [r0]
   2c4b0:	cmp	r0, #0
   2c4b4:	beq	2c4bc <fb_scope_table_visit@@Base+0x78>
   2c4b8:	bl	13ec8 <free@plt>
   2c4bc:	mov	r3, #0
   2c4c0:	str	r3, [r4]
   2c4c4:	str	r3, [r4, #4]
   2c4c8:	str	r3, [r4, #8]
   2c4cc:	str	r3, [r4, #12]
   2c4d0:	pop	{r4, pc}
   2c4d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c4d8:	sub	sp, sp, #36	; 0x24
   2c4dc:	ldr	r4, [pc, #584]	; 2c72c <fb_scope_table_visit@@Base+0x2e8>
   2c4e0:	cmp	r3, #0
   2c4e4:	str	r3, [sp, #12]
   2c4e8:	str	r1, [sp, #16]
   2c4ec:	add	r4, pc, r4
   2c4f0:	beq	2c70c <fb_scope_table_visit@@Base+0x2c8>
   2c4f4:	ldr	r3, [sp, #12]
   2c4f8:	cmp	r3, #2
   2c4fc:	beq	2c6c4 <fb_scope_table_visit@@Base+0x280>
   2c500:	ldr	r3, [sp, #12]
   2c504:	cmp	r3, #1
   2c508:	beq	2c6a4 <fb_scope_table_visit@@Base+0x260>
   2c50c:	ldr	r8, [r0, #12]
   2c510:	mov	r3, #179	; 0xb3
   2c514:	ldr	r1, [r0, #8]
   2c518:	mul	r3, r3, r8
   2c51c:	mov	r9, r2
   2c520:	mov	sl, r0
   2c524:	cmp	r1, r3, lsr #8
   2c528:	bcc	2c540 <fb_scope_table_visit@@Base+0xfc>
   2c52c:	lsl	r1, r1, #1
   2c530:	bl	2c764 <fb_scope_table_visit@@Base+0x320>
   2c534:	cmp	r0, #0
   2c538:	bne	2c6e4 <fb_scope_table_visit@@Base+0x2a0>
   2c53c:	ldr	r8, [sl, #12]
   2c540:	ldr	r3, [pc, #488]	; 2c730 <fb_scope_table_visit@@Base+0x2ec>
   2c544:	mov	r2, r9
   2c548:	str	r3, [sp]
   2c54c:	add	r3, sp, #24
   2c550:	str	r3, [sp, #4]
   2c554:	ldr	r0, [sp, #16]
   2c558:	mov	r3, #0
   2c55c:	ldr	r7, [sl]
   2c560:	bl	3be90 <cmetrohash64_1@@Base>
   2c564:	ldr	r3, [sp, #72]	; 0x48
   2c568:	ldr	r6, [sp, #24]
   2c56c:	sub	r3, r3, #2
   2c570:	sub	r8, r8, #1
   2c574:	cmp	r3, #1
   2c578:	and	r4, r8, r6
   2c57c:	bls	2c650 <fb_scope_table_visit@@Base+0x20c>
   2c580:	ldr	r5, [r7, r4, lsl #2]
   2c584:	add	r4, r7, r4, lsl #2
   2c588:	cmp	r5, #0
   2c58c:	moveq	fp, r4
   2c590:	beq	2c62c <fb_scope_table_visit@@Base+0x1e8>
   2c594:	str	sl, [sp, #20]
   2c598:	add	r6, r6, #1
   2c59c:	mov	sl, r5
   2c5a0:	mov	fp, #0
   2c5a4:	ldr	r5, [sp, #16]
   2c5a8:	b	2c5c4 <fb_scope_table_visit@@Base+0x180>
   2c5ac:	and	r4, r8, r6
   2c5b0:	add	r6, r6, #1
   2c5b4:	ldr	sl, [r7, r4, lsl #2]
   2c5b8:	add	r4, r7, r4, lsl #2
   2c5bc:	cmp	sl, #0
   2c5c0:	beq	2c620 <fb_scope_table_visit@@Base+0x1dc>
   2c5c4:	cmp	sl, #2
   2c5c8:	beq	2c614 <fb_scope_table_visit@@Base+0x1d0>
   2c5cc:	ldr	r2, [sl, #148]	; 0x94
   2c5d0:	cmp	r9, r2
   2c5d4:	bne	2c5ac <fb_scope_table_visit@@Base+0x168>
   2c5d8:	mov	r2, r9
   2c5dc:	ldr	r1, [sl, #144]	; 0x90
   2c5e0:	mov	r0, r5
   2c5e4:	bl	13eec <memcmp@plt>
   2c5e8:	cmp	r0, #0
   2c5ec:	bne	2c5ac <fb_scope_table_visit@@Base+0x168>
   2c5f0:	ldr	r3, [sp, #72]	; 0x48
   2c5f4:	mov	r5, sl
   2c5f8:	cmp	r3, #0
   2c5fc:	bne	2c644 <fb_scope_table_visit@@Base+0x200>
   2c600:	ldr	r3, [sp, #12]
   2c604:	mov	r0, r5
   2c608:	str	r3, [r4]
   2c60c:	add	sp, sp, #36	; 0x24
   2c610:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c614:	cmp	fp, #0
   2c618:	moveq	fp, r4
   2c61c:	b	2c5ac <fb_scope_table_visit@@Base+0x168>
   2c620:	cmp	fp, #0
   2c624:	ldr	sl, [sp, #20]
   2c628:	moveq	fp, r4
   2c62c:	ldr	r2, [sl, #8]
   2c630:	ldr	r3, [sp, #12]
   2c634:	mov	r5, #0
   2c638:	add	r2, r2, #1
   2c63c:	str	r2, [sl, #8]
   2c640:	str	r3, [fp]
   2c644:	mov	r0, r5
   2c648:	add	sp, sp, #36	; 0x24
   2c64c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c650:	ldr	r2, [r7, r4, lsl #2]
   2c654:	ldr	r3, [sl, #8]
   2c658:	cmp	r2, #0
   2c65c:	cmpne	r2, #2
   2c660:	add	r3, r3, #1
   2c664:	str	r3, [sl, #8]
   2c668:	add	r4, r7, r4, lsl #2
   2c66c:	beq	2c694 <fb_scope_table_visit@@Base+0x250>
   2c670:	add	r6, r6, #1
   2c674:	and	r3, r8, r6
   2c678:	add	r6, r6, #1
   2c67c:	ldr	r2, [r7, r3, lsl #2]
   2c680:	add	r3, r7, r3, lsl #2
   2c684:	cmp	r2, #0
   2c688:	cmpne	r2, #2
   2c68c:	bne	2c674 <fb_scope_table_visit@@Base+0x230>
   2c690:	mov	r4, r3
   2c694:	ldr	r3, [sp, #12]
   2c698:	mov	r5, #0
   2c69c:	str	r3, [r4]
   2c6a0:	b	2c644 <fb_scope_table_visit@@Base+0x200>
   2c6a4:	ldr	r3, [pc, #136]	; 2c734 <fb_scope_table_visit@@Base+0x2f0>
   2c6a8:	ldr	r1, [pc, #136]	; 2c738 <fb_scope_table_visit@@Base+0x2f4>
   2c6ac:	ldr	r0, [pc, #136]	; 2c73c <fb_scope_table_visit@@Base+0x2f8>
   2c6b0:	add	r3, pc, r3
   2c6b4:	mov	r2, #116	; 0x74
   2c6b8:	add	r1, pc, r1
   2c6bc:	add	r0, pc, r0
   2c6c0:	bl	14030 <__assert_fail@plt>
   2c6c4:	ldr	r3, [pc, #116]	; 2c740 <fb_scope_table_visit@@Base+0x2fc>
   2c6c8:	ldr	r1, [pc, #116]	; 2c744 <fb_scope_table_visit@@Base+0x300>
   2c6cc:	ldr	r0, [pc, #116]	; 2c748 <fb_scope_table_visit@@Base+0x304>
   2c6d0:	add	r3, pc, r3
   2c6d4:	mov	r2, #115	; 0x73
   2c6d8:	add	r1, pc, r1
   2c6dc:	add	r0, pc, r0
   2c6e0:	bl	14030 <__assert_fail@plt>
   2c6e4:	ldr	r3, [pc, #96]	; 2c74c <fb_scope_table_visit@@Base+0x308>
   2c6e8:	ldr	r2, [pc, #96]	; 2c750 <fb_scope_table_visit@@Base+0x30c>
   2c6ec:	ldr	r1, [pc, #96]	; 2c754 <fb_scope_table_visit@@Base+0x310>
   2c6f0:	ldr	r3, [r4, r3]
   2c6f4:	add	r2, pc, r2
   2c6f8:	add	r1, pc, r1
   2c6fc:	ldr	r0, [r3]
   2c700:	bl	13f7c <fprintf@plt>
   2c704:	mov	r0, #1
   2c708:	bl	13f64 <exit@plt>
   2c70c:	ldr	r3, [pc, #68]	; 2c758 <fb_scope_table_visit@@Base+0x314>
   2c710:	ldr	r1, [pc, #68]	; 2c75c <fb_scope_table_visit@@Base+0x318>
   2c714:	ldr	r0, [pc, #68]	; 2c760 <fb_scope_table_visit@@Base+0x31c>
   2c718:	add	r3, pc, r3
   2c71c:	mov	r2, #114	; 0x72
   2c720:	add	r1, pc, r1
   2c724:	add	r0, pc, r0
   2c728:	bl	14030 <__assert_fail@plt>
   2c72c:	andeq	sp, r3, ip, lsl #22
   2c730:	svccs	0x00693b52
   2c734:	andeq	r9, r2, ip, lsr lr
   2c738:	strdeq	r9, [r2], -r0
   2c73c:	andeq	r9, r2, r4, lsl #27
   2c740:	andeq	r9, r2, ip, lsl lr
   2c744:	ldrdeq	r9, [r2], -r0
   2c748:	andeq	r9, r2, ip, asr #26
   2c74c:	muleq	r0, ip, r0
   2c750:	andeq	r9, r2, r4, ror #26
   2c754:	muleq	r2, r4, sp
   2c758:	ldrdeq	r9, [r2], -r4
   2c75c:	andeq	r9, r2, r8, lsl #25
   2c760:	andeq	r9, r2, ip, ror #25
   2c764:	ldr	r3, [r0, #8]
   2c768:	push	{r4, r5, r6, r7, r8, lr}
   2c76c:	cmp	r1, r3
   2c770:	movcc	r1, r3
   2c774:	cmp	r1, #2
   2c778:	sub	sp, sp, #24
   2c77c:	mov	r6, r0
   2c780:	ldr	r7, [r0]
   2c784:	mov	r5, #4
   2c788:	bls	2c7a0 <fb_scope_table_visit@@Base+0x35c>
   2c78c:	mov	r2, #179	; 0xb3
   2c790:	lsl	r5, r5, #1
   2c794:	mul	r3, r2, r5
   2c798:	cmp	r1, r3, lsr #8
   2c79c:	bhi	2c790 <fb_scope_table_visit@@Base+0x34c>
   2c7a0:	mov	r1, #4
   2c7a4:	mov	r0, r5
   2c7a8:	bl	13e98 <calloc@plt>
   2c7ac:	cmp	r0, #0
   2c7b0:	str	r0, [sp, #8]
   2c7b4:	beq	2c858 <fb_scope_table_visit@@Base+0x414>
   2c7b8:	ldr	r2, [r6, #12]
   2c7bc:	mov	r4, #0
   2c7c0:	cmp	r2, r4
   2c7c4:	str	r5, [sp, #20]
   2c7c8:	str	r4, [sp, #12]
   2c7cc:	subne	r5, r7, #4
   2c7d0:	str	r4, [sp, #16]
   2c7d4:	addne	r7, sp, #8
   2c7d8:	movne	r8, #3
   2c7dc:	bne	2c7ec <fb_scope_table_visit@@Base+0x3a8>
   2c7e0:	b	2c850 <fb_scope_table_visit@@Base+0x40c>
   2c7e4:	cmp	r2, r4
   2c7e8:	bls	2c820 <fb_scope_table_visit@@Base+0x3dc>
   2c7ec:	ldr	r3, [r5, #4]!
   2c7f0:	add	r4, r4, #1
   2c7f4:	cmp	r3, #0
   2c7f8:	cmpne	r3, #2
   2c7fc:	beq	2c7e4 <fb_scope_table_visit@@Base+0x3a0>
   2c800:	ldr	r2, [r3, #148]	; 0x94
   2c804:	ldr	r1, [r3, #144]	; 0x90
   2c808:	mov	r0, r7
   2c80c:	str	r8, [sp]
   2c810:	bl	2c4d4 <fb_scope_table_visit@@Base+0x90>
   2c814:	ldr	r2, [r6, #12]
   2c818:	cmp	r2, r4
   2c81c:	bhi	2c7ec <fb_scope_table_visit@@Base+0x3a8>
   2c820:	mov	r0, r6
   2c824:	bl	2c4a4 <fb_scope_table_visit@@Base+0x60>
   2c828:	mov	ip, r7
   2c82c:	mov	lr, #0
   2c830:	ldm	ip!, {r0, r1, r2, r3}
   2c834:	str	r0, [r6]
   2c838:	str	r1, [r6, #4]
   2c83c:	str	r2, [r6, #8]
   2c840:	str	r3, [r6, #12]
   2c844:	mov	r0, lr
   2c848:	add	sp, sp, #24
   2c84c:	pop	{r4, r5, r6, r7, r8, pc}
   2c850:	add	r7, sp, #8
   2c854:	b	2c820 <fb_scope_table_visit@@Base+0x3dc>
   2c858:	mvn	lr, #0
   2c85c:	b	2c844 <fb_scope_table_visit@@Base+0x400>
   2c860:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2c864:	sub	sp, sp, #20
   2c868:	ldr	r5, [r0]
   2c86c:	cmp	r5, #0
   2c870:	beq	2c928 <fb_scope_table_visit@@Base+0x4e4>
   2c874:	ldr	r3, [pc, #188]	; 2c938 <fb_scope_table_visit@@Base+0x4f4>
   2c878:	ldr	r7, [r0, #12]
   2c87c:	str	r3, [sp]
   2c880:	add	r3, sp, #8
   2c884:	str	r3, [sp, #4]
   2c888:	mov	r9, r0
   2c88c:	mov	r3, #0
   2c890:	mov	r0, r1
   2c894:	mov	r6, r2
   2c898:	mov	r8, r1
   2c89c:	bl	3be90 <cmetrohash64_1@@Base>
   2c8a0:	ldr	sl, [sp, #8]
   2c8a4:	sub	r7, r7, #1
   2c8a8:	and	r3, r7, sl
   2c8ac:	ldr	fp, [r5, r3, lsl #2]
   2c8b0:	add	r4, r5, r3, lsl #2
   2c8b4:	cmp	fp, #0
   2c8b8:	beq	2c928 <fb_scope_table_visit@@Base+0x4e4>
   2c8bc:	add	sl, sl, #1
   2c8c0:	b	2c8dc <fb_scope_table_visit@@Base+0x498>
   2c8c4:	and	r3, sl, r7
   2c8c8:	add	sl, sl, #1
   2c8cc:	ldr	fp, [r5, r3, lsl #2]
   2c8d0:	add	r4, r5, r3, lsl #2
   2c8d4:	cmp	fp, #0
   2c8d8:	beq	2c928 <fb_scope_table_visit@@Base+0x4e4>
   2c8dc:	cmp	fp, #2
   2c8e0:	beq	2c8c4 <fb_scope_table_visit@@Base+0x480>
   2c8e4:	ldr	r3, [fp, #148]	; 0x94
   2c8e8:	cmp	r6, r3
   2c8ec:	bne	2c8c4 <fb_scope_table_visit@@Base+0x480>
   2c8f0:	mov	r2, r6
   2c8f4:	ldr	r1, [fp, #144]	; 0x90
   2c8f8:	mov	r0, r8
   2c8fc:	bl	13eec <memcmp@plt>
   2c900:	cmp	r0, #0
   2c904:	bne	2c8c4 <fb_scope_table_visit@@Base+0x480>
   2c908:	ldr	r3, [r9, #8]
   2c90c:	mov	r2, #2
   2c910:	sub	r3, r3, #1
   2c914:	str	r2, [r4]
   2c918:	mov	r0, fp
   2c91c:	str	r3, [r9, #8]
   2c920:	add	sp, sp, #20
   2c924:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c928:	mov	fp, #0
   2c92c:	mov	r0, fp
   2c930:	add	sp, sp, #20
   2c934:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2c938:	svccs	0x00693b52
   2c93c:	push	{r4, r5, r6, r7, r8, r9, lr}
   2c940:	subs	r7, r0, #0
   2c944:	sub	sp, sp, #20
   2c948:	beq	2c9e4 <fb_scope_table_visit@@Base+0x5a0>
   2c94c:	mov	r6, r3
   2c950:	ldr	r3, [pc, #156]	; 2c9f4 <fb_scope_table_visit@@Base+0x5b0>
   2c954:	ldr	r8, [r1]
   2c958:	mov	r9, r2
   2c95c:	str	r3, [sp]
   2c960:	add	r3, sp, #8
   2c964:	str	r3, [sp, #4]
   2c968:	mov	r2, r6
   2c96c:	mov	r3, #0
   2c970:	mov	r0, r9
   2c974:	bl	3be90 <cmetrohash64_1@@Base>
   2c978:	ldr	r5, [sp, #8]
   2c97c:	sub	r8, r8, #1
   2c980:	and	r3, r8, r5
   2c984:	ldr	r4, [r7, r3, lsl #2]
   2c988:	cmp	r4, #0
   2c98c:	beq	2c9e4 <fb_scope_table_visit@@Base+0x5a0>
   2c990:	add	r5, r5, #1
   2c994:	b	2c9ac <fb_scope_table_visit@@Base+0x568>
   2c998:	and	r1, r8, r5
   2c99c:	add	r5, r5, #1
   2c9a0:	ldr	r4, [r7, r1, lsl #2]
   2c9a4:	cmp	r4, #0
   2c9a8:	beq	2c9e4 <fb_scope_table_visit@@Base+0x5a0>
   2c9ac:	cmp	r4, #2
   2c9b0:	beq	2c998 <fb_scope_table_visit@@Base+0x554>
   2c9b4:	ldr	r3, [r4, #148]	; 0x94
   2c9b8:	cmp	r6, r3
   2c9bc:	bne	2c998 <fb_scope_table_visit@@Base+0x554>
   2c9c0:	mov	r2, r6
   2c9c4:	ldr	r1, [r4, #144]	; 0x90
   2c9c8:	mov	r0, r9
   2c9cc:	bl	13eec <memcmp@plt>
   2c9d0:	cmp	r0, #0
   2c9d4:	bne	2c998 <fb_scope_table_visit@@Base+0x554>
   2c9d8:	mov	r0, r4
   2c9dc:	add	sp, sp, #20
   2c9e0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2c9e4:	mov	r4, #0
   2c9e8:	mov	r0, r4
   2c9ec:	add	sp, sp, #20
   2c9f0:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2c9f4:	svccs	0x00693b52

0002c9f8 <fb_schema_table_clear@@Base>:
   2c9f8:	b	2c4a4 <fb_scope_table_visit@@Base+0x60>

0002c9fc <fb_schema_table_destroy@@Base>:
   2c9fc:	push	{r4, r5, r6, r7, r8, lr}
   2ca00:	subs	r7, r1, #0
   2ca04:	mov	r6, r0
   2ca08:	beq	2ca5c <fb_schema_table_destroy@@Base+0x60>
   2ca0c:	ldr	r3, [r0, #12]
   2ca10:	ldr	r5, [r0]
   2ca14:	cmp	r3, #0
   2ca18:	beq	2ca5c <fb_schema_table_destroy@@Base+0x60>
   2ca1c:	mov	r8, r2
   2ca20:	sub	r5, r5, #4
   2ca24:	mov	r4, #0
   2ca28:	b	2ca34 <fb_schema_table_destroy@@Base+0x38>
   2ca2c:	cmp	r4, r3
   2ca30:	bcs	2ca5c <fb_schema_table_destroy@@Base+0x60>
   2ca34:	ldr	r1, [r5, #4]!
   2ca38:	add	r4, r4, #1
   2ca3c:	cmp	r1, #0
   2ca40:	cmpne	r1, #2
   2ca44:	beq	2ca2c <fb_schema_table_destroy@@Base+0x30>
   2ca48:	mov	r0, r8
   2ca4c:	blx	r7
   2ca50:	ldr	r3, [r6, #12]
   2ca54:	cmp	r4, r3
   2ca58:	bcc	2ca34 <fb_schema_table_destroy@@Base+0x38>
   2ca5c:	mov	r0, r6
   2ca60:	pop	{r4, r5, r6, r7, r8, lr}
   2ca64:	b	2c4a4 <fb_scope_table_visit@@Base+0x60>

0002ca68 <fb_schema_table_init@@Base>:
   2ca68:	cmp	r1, #2
   2ca6c:	push	{r4, r5, r6, lr}
   2ca70:	mov	r4, #4
   2ca74:	mov	r5, r0
   2ca78:	bls	2ca90 <fb_schema_table_init@@Base+0x28>
   2ca7c:	mov	r2, #179	; 0xb3
   2ca80:	lsl	r4, r4, #1
   2ca84:	mul	r3, r2, r4
   2ca88:	cmp	r1, r3, lsr #8
   2ca8c:	bhi	2ca80 <fb_schema_table_init@@Base+0x18>
   2ca90:	mov	r1, #4
   2ca94:	mov	r0, r4
   2ca98:	bl	13e98 <calloc@plt>
   2ca9c:	cmp	r0, #0
   2caa0:	str	r0, [r5]
   2caa4:	movne	r0, #0
   2caa8:	strne	r4, [r5, #12]
   2caac:	strne	r0, [r5, #4]
   2cab0:	strne	r0, [r5, #8]
   2cab4:	mvneq	r0, #0
   2cab8:	pop	{r4, r5, r6, pc}

0002cabc <fb_schema_table_resize@@Base>:
   2cabc:	b	2c764 <fb_scope_table_visit@@Base+0x320>

0002cac0 <fb_schema_table_insert@@Base>:
   2cac0:	b	2c4d4 <fb_scope_table_visit@@Base+0x90>

0002cac4 <fb_schema_table_insert_item@@Base>:
   2cac4:	push	{lr}		; (str lr, [sp, #-4]!)
   2cac8:	sub	sp, sp, #12
   2cacc:	mov	r3, r1
   2cad0:	str	r2, [sp]
   2cad4:	ldr	r2, [r1, #148]	; 0x94
   2cad8:	ldr	r1, [r1, #144]	; 0x90
   2cadc:	bl	2c4d4 <fb_scope_table_visit@@Base+0x90>
   2cae0:	add	sp, sp, #12
   2cae4:	pop	{pc}		; (ldr pc, [sp], #4)

0002cae8 <fb_schema_table_find@@Base>:
   2cae8:	mov	ip, r0
   2caec:	mov	r3, r2
   2caf0:	ldr	r0, [r0]
   2caf4:	mov	r2, r1
   2caf8:	add	r1, ip, #12
   2cafc:	b	2c93c <fb_scope_table_visit@@Base+0x4f8>

0002cb00 <fb_schema_table_find_item@@Base>:
   2cb00:	mov	ip, r0
   2cb04:	ldr	r3, [r1, #148]	; 0x94
   2cb08:	ldr	r2, [r1, #144]	; 0x90
   2cb0c:	ldr	r0, [r0]
   2cb10:	add	r1, ip, #12
   2cb14:	b	2c93c <fb_scope_table_visit@@Base+0x4f8>

0002cb18 <fb_schema_table_remove@@Base>:
   2cb18:	b	2c860 <fb_scope_table_visit@@Base+0x41c>

0002cb1c <fb_schema_table_remove_item@@Base>:
   2cb1c:	ldr	r2, [r1, #148]	; 0x94
   2cb20:	ldr	r1, [r1, #144]	; 0x90
   2cb24:	b	2c860 <fb_scope_table_visit@@Base+0x41c>

0002cb28 <fb_schema_table_visit@@Base>:
   2cb28:	ldr	r3, [r0, #12]
   2cb2c:	push	{r4, r5, r6, r7, r8, lr}
   2cb30:	cmp	r3, #0
   2cb34:	ldr	r5, [r0]
   2cb38:	popeq	{r4, r5, r6, r7, r8, pc}
   2cb3c:	mov	r7, r2
   2cb40:	mov	r6, r1
   2cb44:	mov	r8, r0
   2cb48:	sub	r5, r5, #4
   2cb4c:	mov	r4, #0
   2cb50:	b	2cb5c <fb_schema_table_visit@@Base+0x34>
   2cb54:	cmp	r4, r3
   2cb58:	bcs	2cb84 <fb_schema_table_visit@@Base+0x5c>
   2cb5c:	ldr	r1, [r5, #4]!
   2cb60:	add	r4, r4, #1
   2cb64:	cmp	r1, #0
   2cb68:	cmpne	r1, #2
   2cb6c:	beq	2cb54 <fb_schema_table_visit@@Base+0x2c>
   2cb70:	mov	r0, r7
   2cb74:	blx	r6
   2cb78:	ldr	r3, [r8, #12]
   2cb7c:	cmp	r4, r3
   2cb80:	bcc	2cb5c <fb_schema_table_visit@@Base+0x34>
   2cb84:	pop	{r4, r5, r6, r7, r8, pc}

0002cb88 <__flatcc_fb_copy_path_n@@Base>:
   2cb88:	push	{r4, r5, r6, lr}
   2cb8c:	mov	r2, r1
   2cb90:	mov	r4, r1
   2cb94:	mov	r1, #0
   2cb98:	mov	r6, r0
   2cb9c:	bl	13fb8 <memchr@plt>
   2cba0:	cmp	r0, #0
   2cba4:	subne	r4, r0, r6
   2cba8:	add	r0, r4, #1
   2cbac:	bl	13f34 <malloc@plt>
   2cbb0:	subs	r5, r0, #0
   2cbb4:	beq	2cbcc <__flatcc_fb_copy_path_n@@Base+0x44>
   2cbb8:	mov	r1, r6
   2cbbc:	mov	r2, r4
   2cbc0:	bl	13ed4 <memcpy@plt>
   2cbc4:	mov	r3, #0
   2cbc8:	strb	r3, [r5, r4]
   2cbcc:	mov	r0, r5
   2cbd0:	pop	{r4, r5, r6, pc}

0002cbd4 <__flatcc_fb_copy_path@@Base>:
   2cbd4:	push	{r4, r5, r6, lr}
   2cbd8:	mov	r6, r0
   2cbdc:	bl	13f70 <strlen@plt>
   2cbe0:	mov	r4, r0
   2cbe4:	add	r0, r0, #1
   2cbe8:	bl	13f34 <malloc@plt>
   2cbec:	subs	r5, r0, #0
   2cbf0:	beq	2cc08 <__flatcc_fb_copy_path@@Base+0x34>
   2cbf4:	mov	r1, r6
   2cbf8:	mov	r2, r4
   2cbfc:	bl	13ed4 <memcpy@plt>
   2cc00:	mov	r3, #0
   2cc04:	strb	r3, [r5, r4]
   2cc08:	mov	r0, r5
   2cc0c:	pop	{r4, r5, r6, pc}

0002cc10 <__flatcc_fb_chomp@@Base>:
   2cc10:	push	{r4, r5, r6, r7, r8, lr}
   2cc14:	subs	r5, r2, #0
   2cc18:	mov	r4, r1
   2cc1c:	beq	2cc50 <__flatcc_fb_chomp@@Base+0x40>
   2cc20:	mov	r7, r0
   2cc24:	mov	r0, r5
   2cc28:	bl	13f70 <strlen@plt>
   2cc2c:	cmp	r0, r4
   2cc30:	mov	r2, r0
   2cc34:	bcs	2cc50 <__flatcc_fb_chomp@@Base+0x40>
   2cc38:	sub	r6, r4, r0
   2cc3c:	mov	r1, r5
   2cc40:	add	r0, r7, r6
   2cc44:	bl	14018 <strncmp@plt>
   2cc48:	cmp	r0, #0
   2cc4c:	moveq	r4, r6
   2cc50:	mov	r0, r4
   2cc54:	pop	{r4, r5, r6, r7, r8, pc}

0002cc58 <__flatcc_fb_create_join_path_n@@Base>:
   2cc58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2cc5c:	mov	r9, r0
   2cc60:	ldr	r8, [sp, #32]
   2cc64:	mov	r4, r1
   2cc68:	cmp	r8, #0
   2cc6c:	mov	sl, r2
   2cc70:	mov	r7, r3
   2cc74:	moveq	r5, r8
   2cc78:	beq	2cc88 <__flatcc_fb_create_join_path_n@@Base+0x30>
   2cc7c:	mov	r0, r8
   2cc80:	bl	13f70 <strlen@plt>
   2cc84:	mov	r5, r0
   2cc88:	cmp	r9, #0
   2cc8c:	beq	2cd50 <__flatcc_fb_create_join_path_n@@Base+0xf8>
   2cc90:	cmp	r7, #0
   2cc94:	beq	2ccc4 <__flatcc_fb_create_join_path_n@@Base+0x6c>
   2cc98:	ldrb	r3, [sl]
   2cc9c:	cmp	r3, #92	; 0x5c
   2cca0:	cmpne	r3, #47	; 0x2f
   2cca4:	moveq	r3, #1
   2cca8:	movne	r3, #0
   2ccac:	beq	2cd50 <__flatcc_fb_create_join_path_n@@Base+0xf8>
   2ccb0:	cmp	r7, #1
   2ccb4:	bls	2ccc4 <__flatcc_fb_create_join_path_n@@Base+0x6c>
   2ccb8:	ldrb	r2, [sl, #1]
   2ccbc:	cmp	r2, #58	; 0x3a
   2ccc0:	beq	2cd94 <__flatcc_fb_create_join_path_n@@Base+0x13c>
   2ccc4:	ldr	r3, [sp, #36]	; 0x24
   2ccc8:	cmp	r3, #0
   2cccc:	cmpne	r4, #0
   2ccd0:	beq	2cce8 <__flatcc_fb_create_join_path_n@@Base+0x90>
   2ccd4:	add	r3, r9, r4
   2ccd8:	ldrb	r3, [r3, #-1]
   2ccdc:	cmp	r3, #92	; 0x5c
   2cce0:	cmpne	r3, #47	; 0x2f
   2cce4:	bne	2cd58 <__flatcc_fb_create_join_path_n@@Base+0x100>
   2cce8:	add	r0, r7, #1
   2ccec:	add	r0, r0, r5
   2ccf0:	add	r0, r0, r4
   2ccf4:	bl	13f34 <malloc@plt>
   2ccf8:	subs	r6, r0, #0
   2ccfc:	beq	2cd44 <__flatcc_fb_create_join_path_n@@Base+0xec>
   2cd00:	mov	r1, r9
   2cd04:	mov	r2, r4
   2cd08:	bl	13ed4 <memcpy@plt>
   2cd0c:	mov	r1, sl
   2cd10:	mov	r2, r7
   2cd14:	add	r0, r6, r4
   2cd18:	add	r7, r4, r7
   2cd1c:	bl	13ed4 <memcpy@plt>
   2cd20:	mov	r2, r5
   2cd24:	mov	r1, r8
   2cd28:	add	r0, r6, r7
   2cd2c:	add	r5, r6, r5
   2cd30:	bl	13ed4 <memcpy@plt>
   2cd34:	mov	r3, #0
   2cd38:	strb	r3, [r5, r7]
   2cd3c:	mov	r0, r6
   2cd40:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2cd44:	mov	r6, #0
   2cd48:	mov	r0, r6
   2cd4c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2cd50:	mov	r4, #0
   2cd54:	b	2cce8 <__flatcc_fb_create_join_path_n@@Base+0x90>
   2cd58:	ldr	r3, [sp, #36]	; 0x24
   2cd5c:	add	r0, r3, r4
   2cd60:	add	r0, r0, #1
   2cd64:	add	r0, r0, r7
   2cd68:	add	r0, r0, r5
   2cd6c:	bl	13f34 <malloc@plt>
   2cd70:	subs	r6, r0, #0
   2cd74:	beq	2cd44 <__flatcc_fb_create_join_path_n@@Base+0xec>
   2cd78:	mov	r2, r4
   2cd7c:	mov	r1, r9
   2cd80:	bl	13ed4 <memcpy@plt>
   2cd84:	mov	r3, #47	; 0x2f
   2cd88:	strb	r3, [r6, r4]
   2cd8c:	add	r4, r4, #1
   2cd90:	b	2cd0c <__flatcc_fb_create_join_path_n@@Base+0xb4>
   2cd94:	mov	r4, r3
   2cd98:	b	2cce8 <__flatcc_fb_create_join_path_n@@Base+0x90>

0002cd9c <__flatcc_fb_create_join_path@@Base>:
   2cd9c:	push	{r4, r5, r6, r7, r8, lr}
   2cda0:	subs	r5, r0, #0
   2cda4:	sub	sp, sp, #8
   2cda8:	mov	r4, r1
   2cdac:	mov	r7, r2
   2cdb0:	mov	r8, r3
   2cdb4:	moveq	r6, r5
   2cdb8:	beq	2cdc4 <__flatcc_fb_create_join_path@@Base+0x28>
   2cdbc:	bl	13f70 <strlen@plt>
   2cdc0:	mov	r6, r0
   2cdc4:	cmp	r4, #0
   2cdc8:	beq	2cdf4 <__flatcc_fb_create_join_path@@Base+0x58>
   2cdcc:	mov	r0, r4
   2cdd0:	bl	13f70 <strlen@plt>
   2cdd4:	mov	r3, r0
   2cdd8:	stm	sp, {r7, r8}
   2cddc:	mov	r2, r4
   2cde0:	mov	r1, r6
   2cde4:	mov	r0, r5
   2cde8:	bl	2cc58 <__flatcc_fb_create_join_path_n@@Base>
   2cdec:	add	sp, sp, #8
   2cdf0:	pop	{r4, r5, r6, r7, r8, pc}
   2cdf4:	mov	r3, r4
   2cdf8:	b	2cdd8 <__flatcc_fb_create_join_path@@Base+0x3c>

0002cdfc <__flatcc_fb_create_path_ext_n@@Base>:
   2cdfc:	push	{lr}		; (str lr, [sp, #-4]!)
   2ce00:	sub	sp, sp, #12
   2ce04:	mov	ip, #0
   2ce08:	str	r2, [sp]
   2ce0c:	mov	r3, r1
   2ce10:	mov	r2, r0
   2ce14:	str	ip, [sp, #4]
   2ce18:	mov	r1, ip
   2ce1c:	mov	r0, ip
   2ce20:	bl	2cc58 <__flatcc_fb_create_join_path_n@@Base>
   2ce24:	add	sp, sp, #12
   2ce28:	pop	{pc}		; (ldr pc, [sp], #4)

0002ce2c <__flatcc_fb_create_path_ext@@Base>:
   2ce2c:	mov	r3, #0
   2ce30:	mov	r2, r1
   2ce34:	mov	r1, r0
   2ce38:	mov	r0, r3
   2ce3c:	b	2cd9c <__flatcc_fb_create_join_path@@Base>

0002ce40 <__flatcc_fb_create_make_path_n@@Base>:
   2ce40:	cmp	r1, #1
   2ce44:	push	{r4, r5, r6, r7, r8, lr}
   2ce48:	mov	r6, r0
   2ce4c:	beq	2cf5c <__flatcc_fb_create_make_path_n@@Base+0x11c>
   2ce50:	bls	2cf6c <__flatcc_fb_create_make_path_n@@Base+0x12c>
   2ce54:	mov	r4, r0
   2ce58:	sub	r5, r1, #1
   2ce5c:	ldrb	r2, [r4], #1
   2ce60:	mov	r3, #1
   2ce64:	mov	ip, r4
   2ce68:	b	2ce88 <__flatcc_fb_create_make_path_n@@Base+0x48>
   2ce6c:	cmp	r2, #32
   2ce70:	addeq	r1, r1, #1
   2ce74:	cmp	lr, r5
   2ce78:	mov	r2, r0
   2ce7c:	add	r3, r3, #1
   2ce80:	add	ip, ip, #1
   2ce84:	bcs	2cea4 <__flatcc_fb_create_make_path_n@@Base+0x64>
   2ce88:	cmp	r2, #92	; 0x5c
   2ce8c:	ldrb	r0, [ip]
   2ce90:	mov	lr, r3
   2ce94:	bne	2ce6c <__flatcc_fb_create_make_path_n@@Base+0x2c>
   2ce98:	cmp	r0, #32
   2ce9c:	addeq	r1, r1, #1
   2cea0:	b	2ce6c <__flatcc_fb_create_make_path_n@@Base+0x2c>
   2cea4:	add	r1, r1, #1
   2cea8:	cmp	r0, #32
   2ceac:	movne	r0, r1
   2ceb0:	addeq	r0, r1, #1
   2ceb4:	bl	13f34 <malloc@plt>
   2ceb8:	cmp	r0, #0
   2cebc:	popeq	{r4, r5, r6, r7, r8, pc}
   2cec0:	ldrb	r3, [r6]
   2cec4:	mov	r2, r4
   2cec8:	mov	r1, #1
   2cecc:	mov	lr, #0
   2ced0:	mov	r7, #92	; 0x5c
   2ced4:	b	2cf14 <__flatcc_fb_create_make_path_n@@Base+0xd4>
   2ced8:	cmp	r3, #32
   2cedc:	strbeq	r7, [r0, lr]
   2cee0:	ldrbne	r4, [r2]
   2cee4:	ldrbeq	r4, [r2]
   2cee8:	movne	ip, lr
   2ceec:	movne	r6, r1
   2cef0:	addeq	ip, lr, #1
   2cef4:	moveq	r6, r1
   2cef8:	cmp	r5, r6
   2cefc:	strb	r3, [r0, ip]
   2cf00:	add	r1, r1, #1
   2cf04:	mov	r3, r4
   2cf08:	add	r2, r2, #1
   2cf0c:	add	lr, ip, #1
   2cf10:	bls	2cf38 <__flatcc_fb_create_make_path_n@@Base+0xf8>
   2cf14:	cmp	r3, #92	; 0x5c
   2cf18:	bne	2ced8 <__flatcc_fb_create_make_path_n@@Base+0x98>
   2cf1c:	ldrb	r4, [r2]
   2cf20:	mov	ip, lr
   2cf24:	mov	r6, r1
   2cf28:	cmp	r4, #32
   2cf2c:	strbeq	r3, [r0, lr]
   2cf30:	addeq	ip, lr, #1
   2cf34:	b	2cef8 <__flatcc_fb_create_make_path_n@@Base+0xb8>
   2cf38:	cmp	r4, #32
   2cf3c:	moveq	r3, #92	; 0x5c
   2cf40:	strbeq	r3, [r0, lr]
   2cf44:	mov	r3, r0
   2cf48:	addeq	lr, ip, #2
   2cf4c:	mov	r2, #0
   2cf50:	strb	r4, [r3, lr]!
   2cf54:	strb	r2, [r3, #1]
   2cf58:	pop	{r4, r5, r6, r7, r8, pc}
   2cf5c:	ldrb	r4, [r0]
   2cf60:	cmp	r4, #92	; 0x5c
   2cf64:	cmpne	r4, #32
   2cf68:	beq	2cf78 <__flatcc_fb_create_make_path_n@@Base+0x138>
   2cf6c:	mov	r0, r6
   2cf70:	pop	{r4, r5, r6, r7, r8, lr}
   2cf74:	b	2cb88 <__flatcc_fb_copy_path_n@@Base>
   2cf78:	mov	r0, #3
   2cf7c:	bl	13f34 <malloc@plt>
   2cf80:	cmp	r0, #0
   2cf84:	popeq	{r4, r5, r6, r7, r8, pc}
   2cf88:	mov	r2, #92	; 0x5c
   2cf8c:	mov	r3, #0
   2cf90:	strb	r4, [r0, #1]
   2cf94:	strb	r2, [r0]
   2cf98:	strb	r3, [r0, #2]
   2cf9c:	pop	{r4, r5, r6, r7, r8, pc}

0002cfa0 <__flatcc_fb_create_make_path@@Base>:
   2cfa0:	push	{r4, lr}
   2cfa4:	mov	r4, r0
   2cfa8:	bl	13f70 <strlen@plt>
   2cfac:	mov	r1, r0
   2cfb0:	mov	r0, r4
   2cfb4:	pop	{r4, lr}
   2cfb8:	b	2ce40 <__flatcc_fb_create_make_path_n@@Base>

0002cfbc <__flatcc_fb_find_basename@@Base>:
   2cfbc:	add	r1, r0, r1
   2cfc0:	cmp	r0, r1
   2cfc4:	beq	2d008 <__flatcc_fb_find_basename@@Base+0x4c>
   2cfc8:	ldrb	r2, [r1, #-1]
   2cfcc:	sub	r3, r1, #1
   2cfd0:	cmp	r2, #47	; 0x2f
   2cfd4:	cmpne	r2, #92	; 0x5c
   2cfd8:	bne	2cff8 <__flatcc_fb_find_basename@@Base+0x3c>
   2cfdc:	b	2d010 <__flatcc_fb_find_basename@@Base+0x54>
   2cfe0:	ldrb	r2, [r3, #-1]
   2cfe4:	sub	r1, r3, #1
   2cfe8:	cmp	r2, #92	; 0x5c
   2cfec:	cmpne	r2, #47	; 0x2f
   2cff0:	beq	2d000 <__flatcc_fb_find_basename@@Base+0x44>
   2cff4:	mov	r3, r1
   2cff8:	cmp	r0, r3
   2cffc:	bne	2cfe0 <__flatcc_fb_find_basename@@Base+0x24>
   2d000:	sub	r0, r3, r0
   2d004:	bx	lr
   2d008:	mov	r3, r0
   2d00c:	b	2d000 <__flatcc_fb_find_basename@@Base+0x44>
   2d010:	mov	r3, r1
   2d014:	b	2d000 <__flatcc_fb_find_basename@@Base+0x44>

0002d018 <__flatcc_fb_create_basename@@Base>:
   2d018:	push	{r4, r5, r6, lr}
   2d01c:	mov	r6, r2
   2d020:	mov	r5, r1
   2d024:	mov	r4, r0
   2d028:	bl	2cfbc <__flatcc_fb_find_basename@@Base>
   2d02c:	mov	r2, r6
   2d030:	add	r4, r4, r0
   2d034:	sub	r1, r5, r0
   2d038:	mov	r0, r4
   2d03c:	bl	2cc10 <__flatcc_fb_chomp@@Base>
   2d040:	mov	r5, r0
   2d044:	add	r0, r0, #1
   2d048:	bl	13f34 <malloc@plt>
   2d04c:	subs	r6, r0, #0
   2d050:	beq	2d068 <__flatcc_fb_create_basename@@Base+0x50>
   2d054:	mov	r1, r4
   2d058:	mov	r2, r5
   2d05c:	bl	13ed4 <memcpy@plt>
   2d060:	mov	r3, #0
   2d064:	strb	r3, [r6, r5]
   2d068:	mov	r0, r6
   2d06c:	pop	{r4, r5, r6, pc}

0002d070 <__flatcc_fb_read_file@@Base>:
   2d070:	push	{r4, r5, r6, r7, r8, r9, lr}
   2d074:	mov	r4, r1
   2d078:	ldr	r1, [pc, #228]	; 2d164 <__flatcc_fb_read_file@@Base+0xf4>
   2d07c:	subs	r8, r2, #0
   2d080:	sub	sp, sp, #12
   2d084:	add	r1, pc, r1
   2d088:	addeq	r8, sp, #4
   2d08c:	bl	13ebc <fopen@plt>
   2d090:	subs	r6, r0, #0
   2d094:	beq	2d15c <__flatcc_fb_read_file@@Base+0xec>
   2d098:	mov	r2, #2
   2d09c:	mov	r1, #0
   2d0a0:	bl	1400c <fseek@plt>
   2d0a4:	mov	r0, r6
   2d0a8:	bl	13ee0 <ftell@plt>
   2d0ac:	cmp	r4, #0
   2d0b0:	cmpne	r0, r4
   2d0b4:	mov	r5, r0
   2d0b8:	movhi	r4, #1
   2d0bc:	movls	r4, #0
   2d0c0:	str	r0, [r8]
   2d0c4:	bhi	2d150 <__flatcc_fb_read_file@@Base+0xe0>
   2d0c8:	mov	r0, r6
   2d0cc:	bl	13ef8 <rewind@plt>
   2d0d0:	cmp	r5, #0
   2d0d4:	movne	r0, r5
   2d0d8:	moveq	r0, #1
   2d0dc:	bl	13f34 <malloc@plt>
   2d0e0:	subs	r7, r0, #0
   2d0e4:	beq	2d150 <__flatcc_fb_read_file@@Base+0xe0>
   2d0e8:	mov	r9, #1
   2d0ec:	b	2d0f4 <__flatcc_fb_read_file@@Base+0x84>
   2d0f0:	add	r4, r4, r0
   2d0f4:	mov	r3, r6
   2d0f8:	sub	r2, r5, r4
   2d0fc:	mov	r1, r9
   2d100:	add	r0, r7, r4
   2d104:	bl	13f1c <fread@plt>
   2d108:	cmp	r0, #0
   2d10c:	bne	2d0f0 <__flatcc_fb_read_file@@Base+0x80>
   2d110:	cmp	r4, r5
   2d114:	mov	r0, r6
   2d118:	bne	2d130 <__flatcc_fb_read_file@@Base+0xc0>
   2d11c:	bl	13fc4 <fclose@plt>
   2d120:	mov	r0, r7
   2d124:	str	r4, [r8]
   2d128:	add	sp, sp, #12
   2d12c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2d130:	bl	13fc4 <fclose@plt>
   2d134:	mov	r0, r7
   2d138:	bl	13ec8 <free@plt>
   2d13c:	mov	r7, #0
   2d140:	mov	r0, r7
   2d144:	str	r5, [r8]
   2d148:	add	sp, sp, #12
   2d14c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2d150:	mov	r0, r6
   2d154:	bl	13fc4 <fclose@plt>
   2d158:	b	2d13c <__flatcc_fb_read_file@@Base+0xcc>
   2d15c:	mov	r5, r6
   2d160:	b	2d13c <__flatcc_fb_read_file@@Base+0xcc>
   2d164:	andeq	r9, r2, r0, lsl #9

0002d168 <__flatcc_fb_default_error_out@@Base>:
   2d168:	ldr	r3, [pc, #24]	; 2d188 <__flatcc_fb_default_error_out@@Base+0x20>
   2d16c:	ldr	ip, [pc, #24]	; 2d18c <__flatcc_fb_default_error_out@@Base+0x24>
   2d170:	add	r3, pc, r3
   2d174:	mov	r0, r1
   2d178:	ldr	ip, [r3, ip]
   2d17c:	mov	r1, #1
   2d180:	ldr	r3, [ip]
   2d184:	b	13f10 <fwrite@plt>
   2d188:	andeq	ip, r3, r8, lsl #29
   2d18c:	muleq	r0, ip, r0
   2d190:	add	r0, r1, #4
   2d194:	b	2b3bc <fb_symbol_table_clear@@Base>
   2d198:	ldr	ip, [r0, #28]
   2d19c:	push	{r4, r5, r6, r7, r8, lr}
   2d1a0:	mov	r4, r0
   2d1a4:	add	r5, ip, ip, lsl #2
   2d1a8:	ldr	r0, [r0, #20]
   2d1ac:	mov	r6, r1
   2d1b0:	lsl	r5, r5, #2
   2d1b4:	ldr	r1, [r4, #40]	; 0x28
   2d1b8:	mov	r7, r2
   2d1bc:	add	r2, r0, r5
   2d1c0:	cmp	r2, r1
   2d1c4:	mov	r8, r3
   2d1c8:	str	r2, [r4, #24]
   2d1cc:	beq	2d204 <__flatcc_fb_default_error_out@@Base+0x9c>
   2d1d0:	ldr	r0, [r4, #60]	; 0x3c
   2d1d4:	ldr	r2, [r4, #64]	; 0x40
   2d1d8:	sub	r0, r7, r0
   2d1dc:	sub	r8, r8, r7
   2d1e0:	add	r0, r0, #1
   2d1e4:	add	r3, r1, #20
   2d1e8:	str	r8, [r1, #4]
   2d1ec:	str	r6, [r1, #16]
   2d1f0:	str	r7, [r1]
   2d1f4:	str	r0, [r1, #12]
   2d1f8:	str	r2, [r1, #8]
   2d1fc:	str	r3, [r4, #40]	; 0x28
   2d200:	pop	{r4, r5, r6, r7, r8, pc}
   2d204:	cmp	ip, #0
   2d208:	lslne	r3, ip, #1
   2d20c:	addne	r1, r3, ip, lsl #3
   2d210:	moveq	r3, #1024	; 0x400
   2d214:	lslne	r1, r1, #2
   2d218:	moveq	r1, #20480	; 0x5000
   2d21c:	str	r3, [r4, #28]
   2d220:	bl	13f04 <realloc@plt>
   2d224:	cmp	r0, #0
   2d228:	str	r0, [r4, #20]
   2d22c:	beq	2d248 <__flatcc_fb_default_error_out@@Base+0xe0>
   2d230:	ldr	r3, [r4, #28]
   2d234:	add	r1, r0, r5
   2d238:	add	r3, r3, r3, lsl #2
   2d23c:	add	r0, r0, r3, lsl #2
   2d240:	str	r0, [r4, #24]
   2d244:	b	2d1d0 <__flatcc_fb_default_error_out@@Base+0x68>
   2d248:	bl	140b0 <__assert_fail@plt+0x80>
   2d24c:	ldr	r2, [r0, #40]	; 0x28
   2d250:	push	{r4, r5, r6, r7, r8, lr}
   2d254:	add	r5, r2, #20
   2d258:	ldr	r8, [r0, #24]
   2d25c:	mov	r4, r0
   2d260:	cmp	r8, r5
   2d264:	str	r5, [r0, #40]	; 0x28
   2d268:	mov	r1, r2
   2d26c:	beq	2d320 <__flatcc_fb_default_error_out@@Base+0x1b8>
   2d270:	ldr	r3, [r2, #36]	; 0x24
   2d274:	cmn	r3, #964	; 0x3c4
   2d278:	bne	2d318 <__flatcc_fb_default_error_out@@Base+0x1b0>
   2d27c:	mov	r2, r5
   2d280:	ldr	r0, [r0, #52]	; 0x34
   2d284:	mov	r7, #1
   2d288:	mov	r6, #65536	; 0x10000
   2d28c:	b	2d2c8 <__flatcc_fb_default_error_out@@Base+0x160>
   2d290:	ldr	r1, [r4, #36]	; 0x24
   2d294:	str	r0, [r4, #52]	; 0x34
   2d298:	str	r5, [r3, #4]
   2d29c:	add	r5, r2, #20
   2d2a0:	cmp	r5, r8
   2d2a4:	str	r1, [r3]
   2d2a8:	mov	r1, r2
   2d2ac:	str	r3, [r4, #36]	; 0x24
   2d2b0:	str	r5, [r4, #40]	; 0x28
   2d2b4:	mov	r2, r5
   2d2b8:	beq	2d320 <__flatcc_fb_default_error_out@@Base+0x1b8>
   2d2bc:	ldr	r3, [r1, #36]	; 0x24
   2d2c0:	cmn	r3, #964	; 0x3c4
   2d2c4:	bne	2d318 <__flatcc_fb_default_error_out@@Base+0x1b0>
   2d2c8:	ldr	r3, [r4, #44]	; 0x2c
   2d2cc:	add	r1, r0, #16
   2d2d0:	cmp	r1, r3
   2d2d4:	movls	r3, r0
   2d2d8:	movls	r0, r1
   2d2dc:	bls	2d290 <__flatcc_fb_default_error_out@@Base+0x128>
   2d2e0:	mov	r1, r7
   2d2e4:	mov	r0, r6
   2d2e8:	bl	13e98 <calloc@plt>
   2d2ec:	cmp	r0, #0
   2d2f0:	beq	2d344 <__flatcc_fb_default_error_out@@Base+0x1dc>
   2d2f4:	ldr	r2, [r4, #48]	; 0x30
   2d2f8:	add	r3, r0, #65536	; 0x10000
   2d2fc:	str	r2, [r0]
   2d300:	str	r0, [r4, #48]	; 0x30
   2d304:	str	r3, [r4, #44]	; 0x2c
   2d308:	ldr	r2, [r4, #40]	; 0x28
   2d30c:	add	r3, r0, #16
   2d310:	add	r0, r0, #32
   2d314:	b	2d290 <__flatcc_fb_default_error_out@@Base+0x128>
   2d318:	mov	r0, r5
   2d31c:	pop	{r4, r5, r6, r7, r8, pc}
   2d320:	str	r1, [r4, #40]	; 0x28
   2d324:	ldr	r3, [pc, #28]	; 2d348 <__flatcc_fb_default_error_out@@Base+0x1e0>
   2d328:	ldr	r1, [pc, #28]	; 2d34c <__flatcc_fb_default_error_out@@Base+0x1e4>
   2d32c:	ldr	r0, [pc, #28]	; 2d350 <__flatcc_fb_default_error_out@@Base+0x1e8>
   2d330:	add	r3, pc, r3
   2d334:	ldr	r2, [pc, #24]	; 2d354 <__flatcc_fb_default_error_out@@Base+0x1ec>
   2d338:	add	r1, pc, r1
   2d33c:	add	r0, pc, r0
   2d340:	bl	14030 <__assert_fail@plt>
   2d344:	bl	140b0 <__assert_fail@plt+0x80>
   2d348:	ldrdeq	r9, [r2], -r8
   2d34c:	strdeq	r9, [r2], -r8
   2d350:	andeq	sl, r1, r8, lsr #22
   2d354:	andeq	r0, r0, r5, asr r1
   2d358:	ldr	r3, [r0, #40]	; 0x28
   2d35c:	ldr	r3, [r3, #16]
   2d360:	cmp	r3, #0
   2d364:	bxeq	lr
   2d368:	push	{r4, lr}
   2d36c:	mov	r4, r0
   2d370:	b	2d394 <__flatcc_fb_default_error_out@@Base+0x22c>
   2d374:	cmp	r3, #125	; 0x7d
   2d378:	beq	2d3b4 <__flatcc_fb_default_error_out@@Base+0x24c>
   2d37c:	mov	r0, r4
   2d380:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2d384:	ldr	r3, [r4, #40]	; 0x28
   2d388:	ldr	r3, [r3, #16]
   2d38c:	cmp	r3, #0
   2d390:	beq	2d3b0 <__flatcc_fb_default_error_out@@Base+0x248>
   2d394:	cmp	r3, #59	; 0x3b
   2d398:	bne	2d374 <__flatcc_fb_default_error_out@@Base+0x20c>
   2d39c:	mov	r0, r4
   2d3a0:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2d3a4:	mov	r3, #0
   2d3a8:	str	r3, [r4, #36]	; 0x24
   2d3ac:	pop	{r4, pc}
   2d3b0:	pop	{r4, pc}
   2d3b4:	mov	r3, #0
   2d3b8:	str	r3, [r4, #36]	; 0x24
   2d3bc:	pop	{r4, pc}
   2d3c0:	ldr	r3, [r0, #40]	; 0x28
   2d3c4:	ldr	r3, [r3, #16]
   2d3c8:	cmp	r3, #0
   2d3cc:	bxeq	lr
   2d3d0:	push	{r4, r5, r6, lr}
   2d3d4:	mov	r5, r1
   2d3d8:	mov	r4, r0
   2d3dc:	b	2d3f4 <__flatcc_fb_default_error_out@@Base+0x28c>
   2d3e0:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2d3e4:	ldr	r3, [r4, #40]	; 0x28
   2d3e8:	ldr	r3, [r3, #16]
   2d3ec:	cmp	r3, #0
   2d3f0:	beq	2d410 <__flatcc_fb_default_error_out@@Base+0x2a8>
   2d3f4:	cmp	r5, r3
   2d3f8:	mov	r0, r4
   2d3fc:	bne	2d3e0 <__flatcc_fb_default_error_out@@Base+0x278>
   2d400:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2d404:	mov	r3, #0
   2d408:	str	r3, [r4, #36]	; 0x24
   2d40c:	pop	{r4, r5, r6, pc}
   2d410:	pop	{r4, r5, r6, pc}

0002d414 <__flatcc_fb_print_error@@Base>:
   2d414:	push	{r1, r2, r3}
   2d418:	mov	r1, #200	; 0xc8
   2d41c:	push	{r4, r5, r6, lr}
   2d420:	sub	sp, sp, #212	; 0xd4
   2d424:	add	ip, sp, #232	; 0xe8
   2d428:	add	r6, sp, #8
   2d42c:	mov	r5, r0
   2d430:	mov	r3, ip
   2d434:	mov	r0, r6
   2d438:	ldr	r2, [sp, #228]	; 0xe4
   2d43c:	str	ip, [sp, #4]
   2d440:	bl	13ff4 <vsnprintf@plt>
   2d444:	cmp	r0, #199	; 0xc7
   2d448:	movle	r4, r0
   2d44c:	ble	2d46c <__flatcc_fb_print_error@@Base+0x58>
   2d450:	ldr	r3, [pc, #60]	; 2d494 <__flatcc_fb_print_error@@Base+0x80>
   2d454:	mov	r4, #199	; 0xc7
   2d458:	add	r3, pc, r3
   2d45c:	ldrb	r2, [r3, #4]
   2d460:	ldr	r0, [r3]
   2d464:	strb	r2, [sp, #207]	; 0xcf
   2d468:	str	r0, [sp, #203]	; 0xcb
   2d46c:	ldr	r0, [r5, #12]
   2d470:	mov	r1, r6
   2d474:	ldr	r3, [r5, #8]
   2d478:	mov	r2, r4
   2d47c:	blx	r3
   2d480:	mov	r0, r4
   2d484:	add	sp, sp, #212	; 0xd4
   2d488:	pop	{r4, r5, r6, lr}
   2d48c:	add	sp, sp, #12
   2d490:	bx	lr
   2d494:	andeq	r9, r2, r8, lsr r2

0002d498 <__flatcc_error_find_file_of_token@@Base>:
   2d498:	cmp	r0, #0
   2d49c:	beq	2d4d8 <__flatcc_error_find_file_of_token@@Base+0x40>
   2d4a0:	ldr	r3, [r0, #20]
   2d4a4:	cmp	r3, r1
   2d4a8:	bhi	2d4b8 <__flatcc_error_find_file_of_token@@Base+0x20>
   2d4ac:	ldr	r3, [r0, #24]
   2d4b0:	cmp	r1, r3
   2d4b4:	bcc	2d4d0 <__flatcc_error_find_file_of_token@@Base+0x38>
   2d4b8:	ldr	r0, [r0]
   2d4bc:	cmp	r0, #0
   2d4c0:	bne	2d4a0 <__flatcc_error_find_file_of_token@@Base+0x8>
   2d4c4:	ldr	r0, [pc, #24]	; 2d4e4 <__flatcc_error_find_file_of_token@@Base+0x4c>
   2d4c8:	add	r0, pc, r0
   2d4cc:	bx	lr
   2d4d0:	ldr	r0, [r0, #520]	; 0x208
   2d4d4:	bx	lr
   2d4d8:	ldr	r0, [pc, #8]	; 2d4e8 <__flatcc_error_find_file_of_token@@Base+0x50>
   2d4dc:	add	r0, pc, r0
   2d4e0:	bx	lr
   2d4e4:	andeq	ip, r1, r0, lsr #4
   2d4e8:	andeq	ip, r1, ip, lsl #4

0002d4ec <__flatcc_error_report@@Base>:
   2d4ec:	push	{r4, r5, r6, r7, r8, r9, lr}
   2d4f0:	sub	sp, sp, #44	; 0x2c
   2d4f4:	adds	ip, r1, #0
   2d4f8:	ldr	r6, [sp, #72]	; 0x48
   2d4fc:	movne	ip, #1
   2d500:	cmp	r6, #0
   2d504:	movne	lr, #0
   2d508:	andeq	lr, ip, #1
   2d50c:	cmp	lr, #0
   2d510:	mov	r4, r3
   2d514:	ldrne	r3, [r1, #4]
   2d518:	ldrne	r6, [r1]
   2d51c:	strne	r3, [sp, #76]	; 0x4c
   2d520:	cmp	r2, #0
   2d524:	mov	r5, r0
   2d528:	mov	r8, r2
   2d52c:	mov	r7, r1
   2d530:	beq	2d6a8 <__flatcc_error_report@@Base+0x1bc>
   2d534:	cmp	r6, #0
   2d538:	beq	2d698 <__flatcc_error_report@@Base+0x1ac>
   2d53c:	clz	r1, r4
   2d540:	lsr	r1, r1, #5
   2d544:	tst	ip, r1
   2d548:	bne	2d5cc <__flatcc_error_report@@Base+0xe0>
   2d54c:	cmp	r4, #0
   2d550:	moveq	ip, #0
   2d554:	andne	ip, ip, #1
   2d558:	cmp	ip, #0
   2d55c:	bne	2d624 <__flatcc_error_report@@Base+0x138>
   2d560:	cmp	r7, #0
   2d564:	movne	r1, #0
   2d568:	andeq	r1, r1, #1
   2d56c:	cmp	r1, #0
   2d570:	bne	2d60c <__flatcc_error_report@@Base+0x120>
   2d574:	cmp	r4, #0
   2d578:	beq	2d6b4 <__flatcc_error_report@@Base+0x1c8>
   2d57c:	mov	r1, r4
   2d580:	mov	r0, r5
   2d584:	bl	2d498 <__flatcc_error_find_file_of_token@@Base>
   2d588:	ldr	r1, [r4, #12]
   2d58c:	ldr	lr, [r4]
   2d590:	ldr	ip, [r4, #4]
   2d594:	ldr	r3, [r4, #8]
   2d598:	mov	r2, r8
   2d59c:	stmib	sp, {r1, ip, lr}
   2d5a0:	ldr	r1, [pc, #288]	; 2d6c8 <__flatcc_error_report@@Base+0x1dc>
   2d5a4:	str	r3, [sp]
   2d5a8:	add	r1, pc, r1
   2d5ac:	mov	r3, r0
   2d5b0:	mov	r0, r5
   2d5b4:	bl	2d414 <__flatcc_fb_print_error@@Base>
   2d5b8:	ldr	r3, [r5, #108]	; 0x6c
   2d5bc:	add	r3, r3, #1
   2d5c0:	str	r3, [r5, #108]	; 0x6c
   2d5c4:	add	sp, sp, #44	; 0x2c
   2d5c8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   2d5cc:	mov	r1, r7
   2d5d0:	mov	r0, r5
   2d5d4:	bl	2d498 <__flatcc_error_find_file_of_token@@Base>
   2d5d8:	ldr	r2, [sp, #76]	; 0x4c
   2d5dc:	ldr	r3, [r7, #8]
   2d5e0:	ldr	r1, [pc, #228]	; 2d6cc <__flatcc_error_report@@Base+0x1e0>
   2d5e4:	str	r8, [sp, #12]
   2d5e8:	str	r6, [sp, #8]
   2d5ec:	str	r2, [sp, #4]
   2d5f0:	ldr	r2, [r7, #12]
   2d5f4:	add	r1, pc, r1
   2d5f8:	str	r2, [sp]
   2d5fc:	mov	r2, r0
   2d600:	mov	r0, r5
   2d604:	bl	2d414 <__flatcc_fb_print_error@@Base>
   2d608:	b	2d5b8 <__flatcc_error_report@@Base+0xcc>
   2d60c:	ldr	r1, [pc, #188]	; 2d6d0 <__flatcc_error_report@@Base+0x1e4>
   2d610:	mov	r2, r8
   2d614:	add	r1, pc, r1
   2d618:	mov	r0, r5
   2d61c:	bl	2d414 <__flatcc_fb_print_error@@Base>
   2d620:	b	2d5b8 <__flatcc_error_report@@Base+0xcc>
   2d624:	mov	r1, r7
   2d628:	mov	r0, r5
   2d62c:	bl	2d498 <__flatcc_error_find_file_of_token@@Base>
   2d630:	mov	r1, r4
   2d634:	mov	r9, r0
   2d638:	mov	r0, r5
   2d63c:	bl	2d498 <__flatcc_error_find_file_of_token@@Base>
   2d640:	ldr	lr, [r4]
   2d644:	ldr	ip, [r4, #4]
   2d648:	ldr	r3, [r7, #8]
   2d64c:	str	r8, [sp, #12]
   2d650:	str	r6, [sp, #8]
   2d654:	ldr	r1, [r4, #12]
   2d658:	ldr	r2, [r4, #8]
   2d65c:	ldr	r4, [sp, #76]	; 0x4c
   2d660:	str	r1, [sp, #24]
   2d664:	str	r2, [sp, #20]
   2d668:	str	r4, [sp, #4]
   2d66c:	str	lr, [sp, #32]
   2d670:	str	ip, [sp, #28]
   2d674:	ldr	r1, [pc, #88]	; 2d6d4 <__flatcc_error_report@@Base+0x1e8>
   2d678:	mov	r2, r9
   2d67c:	add	r1, pc, r1
   2d680:	str	r0, [sp, #16]
   2d684:	ldr	ip, [r7, #12]
   2d688:	mov	r0, r5
   2d68c:	str	ip, [sp]
   2d690:	bl	2d414 <__flatcc_fb_print_error@@Base>
   2d694:	b	2d5b8 <__flatcc_error_report@@Base+0xcc>
   2d698:	str	r6, [sp, #76]	; 0x4c
   2d69c:	ldr	r6, [pc, #52]	; 2d6d8 <__flatcc_error_report@@Base+0x1ec>
   2d6a0:	add	r6, pc, r6
   2d6a4:	b	2d53c <__flatcc_error_report@@Base+0x50>
   2d6a8:	ldr	r8, [pc, #44]	; 2d6dc <__flatcc_error_report@@Base+0x1f0>
   2d6ac:	add	r8, pc, r8
   2d6b0:	b	2d534 <__flatcc_error_report@@Base+0x48>
   2d6b4:	ldr	r1, [pc, #36]	; 2d6e0 <__flatcc_error_report@@Base+0x1f4>
   2d6b8:	mov	r0, r5
   2d6bc:	add	r1, pc, r1
   2d6c0:	bl	2d414 <__flatcc_fb_print_error@@Base>
   2d6c4:	b	2d5b8 <__flatcc_error_report@@Base+0xcc>
   2d6c8:	andeq	r9, r2, r0, asr r1
   2d6cc:	andeq	r9, r2, r4, lsr #1
   2d6d0:	ldrdeq	r9, [r2], -r8
   2d6d4:	andeq	r9, r2, ip, lsr r0
   2d6d8:	andeq	ip, r1, r8, asr #32
   2d6dc:	andeq	ip, r1, ip, lsr r0
   2d6e0:	andeq	r9, r2, ip, asr r0
   2d6e4:	ldr	r3, [r0, #52]	; 0x34
   2d6e8:	push	{r4, r5, r6, r7, r8, lr}
   2d6ec:	mov	r5, r1
   2d6f0:	ldr	r1, [r0, #44]	; 0x2c
   2d6f4:	add	r2, r3, #16
   2d6f8:	cmp	r2, r1
   2d6fc:	sub	sp, sp, #8
   2d700:	mov	r4, r0
   2d704:	ldr	r6, [r0, #40]	; 0x28
   2d708:	bhi	2d7f0 <__flatcc_error_report@@Base+0x304>
   2d70c:	str	r2, [r4, #52]	; 0x34
   2d710:	mov	r0, r4
   2d714:	str	r6, [r3, #4]
   2d718:	str	r3, [r5]
   2d71c:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2d720:	ldr	r3, [r4, #40]	; 0x28
   2d724:	ldr	r6, [r5]
   2d728:	ldr	r3, [r3, #16]
   2d72c:	cmp	r3, #46	; 0x2e
   2d730:	moveq	r8, #1
   2d734:	moveq	r7, #65536	; 0x10000
   2d738:	beq	2d768 <__flatcc_error_report@@Base+0x27c>
   2d73c:	b	2d7e8 <__flatcc_error_report@@Base+0x2fc>
   2d740:	str	r2, [r4, #52]	; 0x34
   2d744:	mov	r0, r4
   2d748:	str	r5, [r3, #4]
   2d74c:	str	r3, [r6]
   2d750:	mov	r6, r3
   2d754:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2d758:	ldr	r3, [r4, #40]	; 0x28
   2d75c:	ldr	r3, [r3, #16]
   2d760:	cmp	r3, #46	; 0x2e
   2d764:	bne	2d7e8 <__flatcc_error_report@@Base+0x2fc>
   2d768:	mov	r0, r4
   2d76c:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2d770:	ldr	r5, [r4, #40]	; 0x28
   2d774:	ldr	r3, [r5, #16]
   2d778:	cmp	r3, #9
   2d77c:	bne	2d7c8 <__flatcc_error_report@@Base+0x2dc>
   2d780:	ldr	r3, [r4, #52]	; 0x34
   2d784:	ldr	r1, [r4, #44]	; 0x2c
   2d788:	add	r2, r3, #16
   2d78c:	cmp	r2, r1
   2d790:	bls	2d740 <__flatcc_error_report@@Base+0x254>
   2d794:	mov	r1, r8
   2d798:	mov	r0, r7
   2d79c:	bl	13e98 <calloc@plt>
   2d7a0:	cmp	r0, #0
   2d7a4:	beq	2d824 <__flatcc_error_report@@Base+0x338>
   2d7a8:	ldr	ip, [r4, #48]	; 0x30
   2d7ac:	add	r1, r0, #65536	; 0x10000
   2d7b0:	add	r3, r0, #16
   2d7b4:	add	r2, r0, #32
   2d7b8:	str	ip, [r0]
   2d7bc:	str	r0, [r4, #48]	; 0x30
   2d7c0:	str	r1, [r4, #44]	; 0x2c
   2d7c4:	b	2d740 <__flatcc_error_report@@Base+0x254>
   2d7c8:	ldr	r2, [pc, #88]	; 2d828 <__flatcc_error_report@@Base+0x33c>
   2d7cc:	mov	r3, #0
   2d7d0:	mov	r1, r5
   2d7d4:	mov	r0, r4
   2d7d8:	str	r3, [sp, #4]
   2d7dc:	str	r3, [sp]
   2d7e0:	add	r2, pc, r2
   2d7e4:	bl	2d4ec <__flatcc_error_report@@Base>
   2d7e8:	add	sp, sp, #8
   2d7ec:	pop	{r4, r5, r6, r7, r8, pc}
   2d7f0:	mov	r1, #1
   2d7f4:	mov	r0, #65536	; 0x10000
   2d7f8:	bl	13e98 <calloc@plt>
   2d7fc:	cmp	r0, #0
   2d800:	beq	2d824 <__flatcc_error_report@@Base+0x338>
   2d804:	ldr	ip, [r4, #48]	; 0x30
   2d808:	add	r1, r0, #65536	; 0x10000
   2d80c:	add	r3, r0, #16
   2d810:	add	r2, r0, #32
   2d814:	str	ip, [r0]
   2d818:	str	r0, [r4, #48]	; 0x30
   2d81c:	str	r1, [r4, #44]	; 0x2c
   2d820:	b	2d70c <__flatcc_error_report@@Base+0x220>
   2d824:	bl	140b0 <__assert_fail@plt+0x80>
   2d828:	andeq	r8, r2, ip, asr pc
   2d82c:	push	{r4, r5, lr}
   2d830:	mov	lr, #0
   2d834:	ldr	r5, [r0, #40]	; 0x28
   2d838:	sub	sp, sp, #12
   2d83c:	str	lr, [r0, #36]	; 0x24
   2d840:	ldr	ip, [r5, #16]
   2d844:	cmp	ip, r1
   2d848:	beq	2d86c <__flatcc_error_report@@Base+0x380>
   2d84c:	str	lr, [sp, #4]
   2d850:	str	lr, [sp]
   2d854:	mov	r1, r5
   2d858:	mov	r4, r0
   2d85c:	bl	2d4ec <__flatcc_error_report@@Base>
   2d860:	ldr	r0, [r4, #40]	; 0x28
   2d864:	add	sp, sp, #12
   2d868:	pop	{r4, r5, pc}
   2d86c:	add	sp, sp, #12
   2d870:	pop	{r4, r5, lr}
   2d874:	b	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2d878:	push	{r4, r5, r6, r7, lr}
   2d87c:	mov	r3, #1
   2d880:	ldr	r6, [r0, #40]	; 0x28
   2d884:	strh	r3, [r1, #8]
   2d888:	sub	sp, sp, #12
   2d88c:	ldr	r3, [r6, #16]
   2d890:	mov	r4, r0
   2d894:	cmp	r3, #91	; 0x5b
   2d898:	mov	r7, r1
   2d89c:	moveq	r5, #0
   2d8a0:	bne	2dacc <__flatcc_error_report@@Base+0x5e0>
   2d8a4:	mov	r0, r4
   2d8a8:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2d8ac:	ldr	r2, [r4, #40]	; 0x28
   2d8b0:	add	r5, r5, #1
   2d8b4:	ldr	r3, [r2, #16]
   2d8b8:	cmp	r3, #91	; 0x5b
   2d8bc:	beq	2d8a4 <__flatcc_error_report@@Base+0x3b8>
   2d8c0:	cmp	r5, #1
   2d8c4:	beq	2d8f0 <__flatcc_error_report@@Base+0x404>
   2d8c8:	ldr	r2, [pc, #720]	; 2dba0 <__flatcc_error_report@@Base+0x6b4>
   2d8cc:	mov	r3, #0
   2d8d0:	str	r3, [sp, #4]
   2d8d4:	str	r3, [sp]
   2d8d8:	add	r2, pc, r2
   2d8dc:	mov	r1, r6
   2d8e0:	mov	r0, r4
   2d8e4:	bl	2d4ec <__flatcc_error_report@@Base>
   2d8e8:	ldr	r2, [r4, #40]	; 0x28
   2d8ec:	ldr	r3, [r2, #16]
   2d8f0:	cmn	r3, #984	; 0x3d8
   2d8f4:	ble	2da40 <__flatcc_error_report@@Base+0x554>
   2d8f8:	ldr	r1, [pc, #676]	; 2dba4 <__flatcc_error_report@@Base+0x6b8>
   2d8fc:	cmp	r3, r1
   2d900:	beq	2da84 <__flatcc_error_report@@Base+0x598>
   2d904:	ble	2d9fc <__flatcc_error_report@@Base+0x510>
   2d908:	cmp	r3, #9
   2d90c:	beq	2da9c <__flatcc_error_report@@Base+0x5b0>
   2d910:	cmp	r3, #93	; 0x5d
   2d914:	bne	2db18 <__flatcc_error_report@@Base+0x62c>
   2d918:	ldr	r2, [pc, #648]	; 2dba8 <__flatcc_error_report@@Base+0x6bc>
   2d91c:	mov	r3, #0
   2d920:	str	r3, [sp, #4]
   2d924:	str	r3, [sp]
   2d928:	mov	r1, r3
   2d92c:	add	r2, pc, r2
   2d930:	mov	r0, r4
   2d934:	bl	2d4ec <__flatcc_error_report@@Base>
   2d938:	b	2d94c <__flatcc_error_report@@Base+0x460>
   2d93c:	sub	r5, r5, #1
   2d940:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2d944:	cmn	r5, #1
   2d948:	beq	2d970 <__flatcc_error_report@@Base+0x484>
   2d94c:	ldr	r3, [r4, #40]	; 0x28
   2d950:	mov	r0, r4
   2d954:	ldr	r3, [r3, #16]
   2d958:	cmp	r3, #93	; 0x5d
   2d95c:	beq	2d93c <__flatcc_error_report@@Base+0x450>
   2d960:	cmp	r5, #0
   2d964:	bne	2d970 <__flatcc_error_report@@Base+0x484>
   2d968:	add	sp, sp, #12
   2d96c:	pop	{r4, r5, r6, r7, pc}
   2d970:	ldr	r2, [pc, #564]	; 2dbac <__flatcc_error_report@@Base+0x6c0>
   2d974:	mov	r5, #0
   2d978:	mov	r3, r6
   2d97c:	str	r5, [sp, #4]
   2d980:	str	r5, [sp]
   2d984:	mov	r1, r5
   2d988:	add	r2, pc, r2
   2d98c:	mov	r0, r4
   2d990:	bl	2d4ec <__flatcc_error_report@@Base>
   2d994:	ldr	r7, [r4, #40]	; 0x28
   2d998:	ldr	r3, [r7, #16]
   2d99c:	cmp	r3, #93	; 0x5d
   2d9a0:	bne	2d968 <__flatcc_error_report@@Base+0x47c>
   2d9a4:	mov	r0, r4
   2d9a8:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2d9ac:	ldr	r2, [pc, #508]	; 2dbb0 <__flatcc_error_report@@Base+0x6c4>
   2d9b0:	mov	r3, r6
   2d9b4:	str	r5, [sp, #4]
   2d9b8:	str	r5, [sp]
   2d9bc:	mov	r1, r7
   2d9c0:	add	r2, pc, r2
   2d9c4:	mov	r0, r4
   2d9c8:	bl	2d4ec <__flatcc_error_report@@Base>
   2d9cc:	ldr	r3, [r4, #40]	; 0x28
   2d9d0:	ldr	r3, [r3, #16]
   2d9d4:	cmp	r3, #93	; 0x5d
   2d9d8:	bne	2d968 <__flatcc_error_report@@Base+0x47c>
   2d9dc:	mov	r0, r4
   2d9e0:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2d9e4:	ldr	r3, [r4, #40]	; 0x28
   2d9e8:	ldr	r3, [r3, #16]
   2d9ec:	cmp	r3, #93	; 0x5d
   2d9f0:	beq	2d9dc <__flatcc_error_report@@Base+0x4f0>
   2d9f4:	add	sp, sp, #12
   2d9f8:	pop	{r4, r5, r6, r7, pc}
   2d9fc:	sub	r1, r1, #8
   2da00:	cmp	r3, r1
   2da04:	blt	2da1c <__flatcc_error_report@@Base+0x530>
   2da08:	cmn	r3, #976	; 0x3d0
   2da0c:	blt	2da6c <__flatcc_error_report@@Base+0x580>
   2da10:	add	r1, r1, #7
   2da14:	cmp	r3, r1
   2da18:	beq	2da6c <__flatcc_error_report@@Base+0x580>
   2da1c:	ldr	r2, [pc, #400]	; 2dbb4 <__flatcc_error_report@@Base+0x6c8>
   2da20:	mov	r3, #0
   2da24:	str	r3, [sp, #4]
   2da28:	str	r3, [sp]
   2da2c:	mov	r1, r3
   2da30:	add	r2, pc, r2
   2da34:	mov	r0, r4
   2da38:	bl	2d4ec <__flatcc_error_report@@Base>
   2da3c:	b	2d94c <__flatcc_error_report@@Base+0x460>
   2da40:	mvn	r1, #984	; 0x3d8
   2da44:	cmp	r3, r1
   2da48:	bge	2da6c <__flatcc_error_report@@Base+0x580>
   2da4c:	cmn	r3, #988	; 0x3dc
   2da50:	bge	2db08 <__flatcc_error_report@@Base+0x61c>
   2da54:	cmn	r3, #996	; 0x3e4
   2da58:	bge	2da6c <__flatcc_error_report@@Base+0x580>
   2da5c:	add	r3, r3, #996	; 0x3e4
   2da60:	add	r3, r3, #3
   2da64:	cmp	r3, #1
   2da68:	bhi	2da1c <__flatcc_error_report@@Base+0x530>
   2da6c:	mov	r3, #7
   2da70:	str	r2, [r7]
   2da74:	strh	r3, [r7, #8]
   2da78:	mov	r0, r4
   2da7c:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2da80:	b	2d94c <__flatcc_error_report@@Base+0x460>
   2da84:	cmp	r5, #0
   2da88:	str	r2, [r7]
   2da8c:	movne	r3, #9
   2da90:	bne	2da74 <__flatcc_error_report@@Base+0x588>
   2da94:	mov	r3, #10
   2da98:	b	2da74 <__flatcc_error_report@@Base+0x588>
   2da9c:	mov	r1, r7
   2daa0:	mov	r0, r4
   2daa4:	bl	2d6e4 <__flatcc_error_report@@Base+0x1f8>
   2daa8:	cmp	r5, #0
   2daac:	movne	r3, #11
   2dab0:	beq	2dac4 <__flatcc_error_report@@Base+0x5d8>
   2dab4:	strh	r3, [r7, #8]
   2dab8:	b	2d94c <__flatcc_error_report@@Base+0x460>
   2dabc:	bl	2d6e4 <__flatcc_error_report@@Base+0x1f8>
   2dac0:	mov	r5, #0
   2dac4:	mov	r3, #12
   2dac8:	b	2dab4 <__flatcc_error_report@@Base+0x5c8>
   2dacc:	cmn	r3, #984	; 0x3d8
   2dad0:	ble	2db54 <__flatcc_error_report@@Base+0x668>
   2dad4:	ldr	r2, [pc, #200]	; 2dba4 <__flatcc_error_report@@Base+0x6b8>
   2dad8:	cmp	r3, r2
   2dadc:	beq	2db84 <__flatcc_error_report@@Base+0x698>
   2dae0:	ble	2db24 <__flatcc_error_report@@Base+0x638>
   2dae4:	cmp	r3, #9
   2dae8:	beq	2dabc <__flatcc_error_report@@Base+0x5d0>
   2daec:	cmp	r3, #93	; 0x5d
   2daf0:	moveq	r5, #0
   2daf4:	beq	2d918 <__flatcc_error_report@@Base+0x42c>
   2daf8:	cmn	r3, #972	; 0x3cc
   2dafc:	beq	2db44 <__flatcc_error_report@@Base+0x658>
   2db00:	mov	r5, #0
   2db04:	b	2da1c <__flatcc_error_report@@Base+0x530>
   2db08:	ldr	r1, [pc, #168]	; 2dbb8 <__flatcc_error_report@@Base+0x6cc>
   2db0c:	cmp	r3, r1
   2db10:	bne	2da1c <__flatcc_error_report@@Base+0x530>
   2db14:	b	2da6c <__flatcc_error_report@@Base+0x580>
   2db18:	cmn	r3, #972	; 0x3cc
   2db1c:	bne	2da1c <__flatcc_error_report@@Base+0x530>
   2db20:	b	2da6c <__flatcc_error_report@@Base+0x580>
   2db24:	sub	r2, r2, #8
   2db28:	cmp	r3, r2
   2db2c:	blt	2db00 <__flatcc_error_report@@Base+0x614>
   2db30:	cmn	r3, #976	; 0x3d0
   2db34:	blt	2db44 <__flatcc_error_report@@Base+0x658>
   2db38:	add	r2, r2, #7
   2db3c:	cmp	r3, r2
   2db40:	bne	2db00 <__flatcc_error_report@@Base+0x614>
   2db44:	str	r6, [r7]
   2db48:	mov	r5, #0
   2db4c:	mov	r3, #8
   2db50:	b	2da74 <__flatcc_error_report@@Base+0x588>
   2db54:	mvn	r2, #984	; 0x3d8
   2db58:	cmp	r3, r2
   2db5c:	bge	2db44 <__flatcc_error_report@@Base+0x658>
   2db60:	cmn	r3, #988	; 0x3dc
   2db64:	bge	2db90 <__flatcc_error_report@@Base+0x6a4>
   2db68:	cmn	r3, #996	; 0x3e4
   2db6c:	bge	2db44 <__flatcc_error_report@@Base+0x658>
   2db70:	add	r3, r3, #996	; 0x3e4
   2db74:	add	r3, r3, #3
   2db78:	cmp	r3, #1
   2db7c:	bhi	2db00 <__flatcc_error_report@@Base+0x614>
   2db80:	b	2db44 <__flatcc_error_report@@Base+0x658>
   2db84:	str	r6, [r1]
   2db88:	mov	r5, #0
   2db8c:	b	2da94 <__flatcc_error_report@@Base+0x5a8>
   2db90:	ldr	r2, [pc, #32]	; 2dbb8 <__flatcc_error_report@@Base+0x6cc>
   2db94:	cmp	r3, r2
   2db98:	bne	2db00 <__flatcc_error_report@@Base+0x614>
   2db9c:	b	2db44 <__flatcc_error_report@@Base+0x658>
   2dba0:	andeq	r8, r2, ip, lsl #29
   2dba4:			; <UNDEFINED> instruction: 0xfffffc32
   2dba8:	andeq	r8, r2, r0, ror #28
   2dbac:	andeq	r8, r2, r8, lsr lr
   2dbb0:	andeq	r8, r2, r4, lsr #28
   2dbb4:	andeq	r8, r2, r8, ror sp
   2dbb8:			; <UNDEFINED> instruction: 0xfffffc25
   2dbbc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2dbc0:	mov	r3, #0
   2dbc4:	ldr	fp, [pc, #416]	; 2dd6c <__flatcc_error_report@@Base+0x880>
   2dbc8:	ldr	sl, [pc, #416]	; 2dd70 <__flatcc_error_report@@Base+0x884>
   2dbcc:	ldr	r9, [pc, #416]	; 2dd74 <__flatcc_error_report@@Base+0x888>
   2dbd0:	ldr	r8, [pc, #416]	; 2dd78 <__flatcc_error_report@@Base+0x88c>
   2dbd4:	sub	sp, sp, #12
   2dbd8:	add	fp, pc, fp
   2dbdc:	add	sl, pc, sl
   2dbe0:	add	r9, pc, r9
   2dbe4:	add	r8, pc, r8
   2dbe8:	mov	r5, r1
   2dbec:	mov	r4, r0
   2dbf0:	mov	r6, r3
   2dbf4:	mov	r7, #1
   2dbf8:	mov	r2, #2
   2dbfc:	strh	r2, [r1, #8]
   2dc00:	str	r3, [r1]
   2dc04:	str	r3, [r1, #4]
   2dc08:	ldr	r1, [r4, #40]	; 0x28
   2dc0c:	ldr	r3, [r1, #16]
   2dc10:	sub	r3, r3, #6
   2dc14:	cmp	r3, #17
   2dc18:	addls	pc, pc, r3, lsl #2
   2dc1c:	b	2dc68 <__flatcc_error_report@@Base+0x77c>
   2dc20:	b	2dd20 <__flatcc_error_report@@Base+0x834>
   2dc24:	b	2dc68 <__flatcc_error_report@@Base+0x77c>
   2dc28:	b	2dc68 <__flatcc_error_report@@Base+0x77c>
   2dc2c:	b	2dc68 <__flatcc_error_report@@Base+0x77c>
   2dc30:	b	2dc68 <__flatcc_error_report@@Base+0x77c>
   2dc34:	b	2dc68 <__flatcc_error_report@@Base+0x77c>
   2dc38:	b	2dc68 <__flatcc_error_report@@Base+0x77c>
   2dc3c:	b	2dc68 <__flatcc_error_report@@Base+0x77c>
   2dc40:	b	2dc68 <__flatcc_error_report@@Base+0x77c>
   2dc44:	b	2dc68 <__flatcc_error_report@@Base+0x77c>
   2dc48:	b	2dc68 <__flatcc_error_report@@Base+0x77c>
   2dc4c:	b	2dc68 <__flatcc_error_report@@Base+0x77c>
   2dc50:	b	2dd00 <__flatcc_error_report@@Base+0x814>
   2dc54:	b	2dc68 <__flatcc_error_report@@Base+0x77c>
   2dc58:	b	2dcec <__flatcc_error_report@@Base+0x800>
   2dc5c:	b	2dcc4 <__flatcc_error_report@@Base+0x7d8>
   2dc60:	b	2dc90 <__flatcc_error_report@@Base+0x7a4>
   2dc64:	b	2dc90 <__flatcc_error_report@@Base+0x7a4>
   2dc68:	ldr	r2, [pc, #268]	; 2dd7c <__flatcc_error_report@@Base+0x890>
   2dc6c:	mov	r3, #0
   2dc70:	str	r3, [sp, #4]
   2dc74:	str	r3, [sp]
   2dc78:	add	r2, pc, r2
   2dc7c:	mov	r0, r4
   2dc80:	bl	2d4ec <__flatcc_error_report@@Base>
   2dc84:	ldr	r1, [r4, #40]	; 0x28
   2dc88:	mov	r3, #1
   2dc8c:	strh	r3, [r5, #8]
   2dc90:	ldr	r2, [r5]
   2dc94:	cmp	r2, #0
   2dc98:	ldrne	r3, [r1]
   2dc9c:	subne	r3, r3, r2
   2dca0:	strne	r3, [r5, #4]
   2dca4:	ldrne	r1, [r4, #40]	; 0x28
   2dca8:	ldr	r3, [r1, #16]
   2dcac:	cmp	r3, #22
   2dcb0:	bne	2dd40 <__flatcc_error_report@@Base+0x854>
   2dcb4:	mov	r0, r4
   2dcb8:	add	sp, sp, #12
   2dcbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2dcc0:	b	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2dcc4:	strh	r7, [r5, #8]
   2dcc8:	mov	r3, #0
   2dccc:	str	r6, [sp, #4]
   2dcd0:	str	r6, [sp]
   2dcd4:	mov	r2, r8
   2dcd8:	mov	r0, r4
   2dcdc:	bl	2d4ec <__flatcc_error_report@@Base>
   2dce0:	mov	r0, r4
   2dce4:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2dce8:	b	2dc08 <__flatcc_error_report@@Base+0x71c>
   2dcec:	ldr	r3, [r5]
   2dcf0:	cmp	r3, #0
   2dcf4:	ldreq	r3, [r1]
   2dcf8:	streq	r3, [r5]
   2dcfc:	b	2dce0 <__flatcc_error_report@@Base+0x7f4>
   2dd00:	strh	r7, [r5, #8]
   2dd04:	mov	r3, #0
   2dd08:	str	r6, [sp, #4]
   2dd0c:	str	r6, [sp]
   2dd10:	mov	r2, fp
   2dd14:	mov	r0, r4
   2dd18:	bl	2d4ec <__flatcc_error_report@@Base>
   2dd1c:	b	2dce0 <__flatcc_error_report@@Base+0x7f4>
   2dd20:	strh	r7, [r5, #8]
   2dd24:	mov	r3, r6
   2dd28:	str	r7, [sp, #4]
   2dd2c:	str	r9, [sp]
   2dd30:	mov	r2, sl
   2dd34:	mov	r0, r4
   2dd38:	bl	2d4ec <__flatcc_error_report@@Base>
   2dd3c:	b	2dce0 <__flatcc_error_report@@Base+0x7f4>
   2dd40:	ldr	r2, [pc, #56]	; 2dd80 <__flatcc_error_report@@Base+0x894>
   2dd44:	mov	r3, #0
   2dd48:	str	r3, [sp, #4]
   2dd4c:	str	r3, [sp]
   2dd50:	mov	r0, r4
   2dd54:	add	r2, pc, r2
   2dd58:	bl	2d4ec <__flatcc_error_report@@Base>
   2dd5c:	mov	r3, #1
   2dd60:	strh	r3, [r5, #8]
   2dd64:	add	sp, sp, #12
   2dd68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2dd6c:	andeq	r8, r2, r4, ror ip
   2dd70:	andeq	r8, r2, r0, asr #24
   2dd74:	andeq	r8, r2, r8, ror #24
   2dd78:	andeq	r8, r2, r8, lsl ip
   2dd7c:	strdeq	r8, [r2], -r4
   2dd80:	andeq	r8, r2, r4, asr #22
   2dd84:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2dd88:	mov	r9, r3
   2dd8c:	ldr	r5, [r0, #40]	; 0x28
   2dd90:	sub	sp, sp, #60	; 0x3c
   2dd94:	mov	r4, r0
   2dd98:	ldr	r3, [r5, #16]
   2dd9c:	mov	r6, r2
   2dda0:	cmp	r3, #45	; 0x2d
   2dda4:	mov	r8, r1
   2dda8:	beq	2de7c <__flatcc_error_report@@Base+0x990>
   2ddac:	cmp	r3, #10
   2ddb0:	beq	2dee0 <__flatcc_error_report@@Base+0x9f4>
   2ddb4:	ble	2ddf4 <__flatcc_error_report@@Base+0x908>
   2ddb8:	cmp	r3, #14
   2ddbc:	beq	2e06c <__flatcc_error_report@@Base+0xb80>
   2ddc0:	cmp	r3, #19
   2ddc4:	beq	2de3c <__flatcc_error_report@@Base+0x950>
   2ddc8:	cmp	r3, #11
   2ddcc:	beq	2dfd4 <__flatcc_error_report@@Base+0xae8>
   2ddd0:	mov	r3, #0
   2ddd4:	mov	r2, r9
   2ddd8:	mov	r1, r5
   2dddc:	mov	r0, r4
   2dde0:	str	r3, [sp, #4]
   2dde4:	str	r3, [sp]
   2dde8:	bl	2d4ec <__flatcc_error_report@@Base>
   2ddec:	add	sp, sp, #60	; 0x3c
   2ddf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ddf4:	ldr	r2, [pc, #1528]	; 2e3f4 <__flatcc_error_report@@Base+0xf08>
   2ddf8:	cmp	r3, r2
   2ddfc:	beq	2e104 <__flatcc_error_report@@Base+0xc18>
   2de00:	cmp	r3, #9
   2de04:	beq	2e18c <__flatcc_error_report@@Base+0xca0>
   2de08:	cmn	r3, #988	; 0x3dc
   2de0c:	moveq	r3, #0
   2de10:	bne	2ddd0 <__flatcc_error_report@@Base+0x8e4>
   2de14:	mov	r1, #1
   2de18:	mov	r2, #6
   2de1c:	strb	r1, [r8]
   2de20:	strh	r2, [r8, #8]
   2de24:	cmp	r3, #0
   2de28:	bne	2e040 <__flatcc_error_report@@Base+0xb54>
   2de2c:	mov	r0, r4
   2de30:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2de34:	add	sp, sp, #60	; 0x3c
   2de38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2de3c:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2de40:	mov	r1, r8
   2de44:	mov	r0, r4
   2de48:	bl	2dbbc <__flatcc_error_report@@Base+0x6d0>
   2de4c:	tst	r6, #1
   2de50:	bne	2de34 <__flatcc_error_report@@Base+0x948>
   2de54:	mov	r3, #0
   2de58:	mov	ip, #1
   2de5c:	strh	ip, [r8, #8]
   2de60:	mov	r2, r9
   2de64:	mov	r1, r5
   2de68:	mov	r0, r4
   2de6c:	str	r3, [sp, #4]
   2de70:	str	r3, [sp]
   2de74:	bl	2d4ec <__flatcc_error_report@@Base>
   2de78:	b	2de34 <__flatcc_error_report@@Base+0x948>
   2de7c:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2de80:	ldr	r7, [r4, #40]	; 0x28
   2de84:	ldr	r3, [r7, #16]
   2de88:	cmp	r3, #10
   2de8c:	beq	2e2fc <__flatcc_error_report@@Base+0xe10>
   2de90:	bgt	2e2a0 <__flatcc_error_report@@Base+0xdb4>
   2de94:	ldr	r2, [pc, #1368]	; 2e3f4 <__flatcc_error_report@@Base+0xf08>
   2de98:	cmp	r3, r2
   2de9c:	beq	2e308 <__flatcc_error_report@@Base+0xe1c>
   2dea0:	cmp	r3, #9
   2dea4:	bne	2e2c0 <__flatcc_error_report@@Base+0xdd4>
   2dea8:	mov	r1, r8
   2deac:	mov	r0, r4
   2deb0:	bl	2d6e4 <__flatcc_error_report@@Base+0x1f8>
   2deb4:	mov	r2, #1
   2deb8:	strh	r2, [r8, #8]
   2debc:	ldr	r2, [pc, #1332]	; 2e3f8 <__flatcc_error_report@@Base+0xf0c>
   2dec0:	mov	r3, #0
   2dec4:	mov	r1, r7
   2dec8:	mov	r0, r4
   2decc:	str	r3, [sp, #4]
   2ded0:	str	r3, [sp]
   2ded4:	add	r2, pc, r2
   2ded8:	bl	2d4ec <__flatcc_error_report@@Base>
   2dedc:	b	2de34 <__flatcc_error_report@@Base+0x948>
   2dee0:	mov	r3, #0
   2dee4:	str	r3, [sp, #8]
   2dee8:	ldr	r9, [r5]
   2deec:	ldr	r7, [r5, #4]
   2def0:	mov	r3, #5
   2def4:	add	r7, r9, r7
   2def8:	cmp	r9, r7
   2defc:	strh	r3, [r8, #8]
   2df00:	beq	2dfa8 <__flatcc_error_report@@Base+0xabc>
   2df04:	ldrb	r3, [r9]
   2df08:	str	r3, [sp, #16]
   2df0c:	sub	r3, r3, #45	; 0x2d
   2df10:	clz	r3, r3
   2df14:	lsr	r3, r3, #5
   2df18:	add	r2, r9, r3
   2df1c:	cmp	r7, r2
   2df20:	str	r2, [sp, #12]
   2df24:	beq	2dfa8 <__flatcc_error_report@@Base+0xabc>
   2df28:	ldrb	r0, [r9, r3]
   2df2c:	sub	r3, r0, #48	; 0x30
   2df30:	cmp	r3, #9
   2df34:	bhi	2dfa8 <__flatcc_error_report@@Base+0xabc>
   2df38:	uxtb	r0, r0
   2df3c:	mov	r1, #0
   2df40:	subs	r0, r0, #48	; 0x30
   2df44:	sbc	r1, r1, #0
   2df48:	add	ip, r2, #1
   2df4c:	mov	r6, #10
   2df50:	b	2df88 <__flatcc_error_report@@Base+0xa9c>
   2df54:	ldrb	lr, [ip], #1
   2df58:	sub	sl, lr, #48	; 0x30
   2df5c:	cmp	sl, #9
   2df60:	bhi	2e11c <__flatcc_error_report@@Base+0xc30>
   2df64:	subs	r2, r2, #48	; 0x30
   2df68:	sbc	r3, r3, #0
   2df6c:	adds	r2, r2, lr
   2df70:	adc	r3, r3, #0
   2df74:	cmp	r3, r1
   2df78:	cmpeq	r2, r0
   2df7c:	mov	r1, r3
   2df80:	mov	r0, r2
   2df84:	bcc	2dfa8 <__flatcc_error_report@@Base+0xabc>
   2df88:	umull	r2, r3, r0, r6
   2df8c:	cmp	ip, r7
   2df90:	mla	r3, r6, r1, r3
   2df94:	mov	fp, ip
   2df98:	bne	2df54 <__flatcc_error_report@@Base+0xa68>
   2df9c:	ldr	r3, [sp, #12]
   2dfa0:	cmp	r3, ip
   2dfa4:	bne	2e14c <__flatcc_error_report@@Base+0xc60>
   2dfa8:	mov	r2, #1
   2dfac:	strh	r2, [r8, #8]
   2dfb0:	ldr	r2, [pc, #1092]	; 2e3fc <__flatcc_error_report@@Base+0xf10>
   2dfb4:	mov	r3, #0
   2dfb8:	mov	r1, r5
   2dfbc:	str	r3, [sp, #4]
   2dfc0:	str	r3, [sp]
   2dfc4:	add	r2, pc, r2
   2dfc8:	mov	r0, r4
   2dfcc:	bl	2d4ec <__flatcc_error_report@@Base>
   2dfd0:	b	2e15c <__flatcc_error_report@@Base+0xc70>
   2dfd4:	mov	r6, #0
   2dfd8:	mov	r3, #3
   2dfdc:	strh	r3, [r8, #8]
   2dfe0:	add	r1, sp, #52	; 0x34
   2dfe4:	ldr	r0, [r5]
   2dfe8:	bl	13fac <strtod@plt>
   2dfec:	ldm	r5, {r2, r3}
   2dff0:	ldr	r1, [sp, #52]	; 0x34
   2dff4:	add	r3, r2, r3
   2dff8:	cmp	r1, r3
   2dffc:	vstr	d0, [r8]
   2e000:	beq	2e16c <__flatcc_error_report@@Base+0xc80>
   2e004:	mov	r2, #1
   2e008:	strh	r2, [r8, #8]
   2e00c:	ldr	r2, [pc, #1004]	; 2e400 <__flatcc_error_report@@Base+0xf14>
   2e010:	mov	r3, #0
   2e014:	str	r3, [sp, #4]
   2e018:	str	r3, [sp]
   2e01c:	add	r2, pc, r2
   2e020:	mov	r1, r5
   2e024:	mov	r0, r4
   2e028:	bl	2d4ec <__flatcc_error_report@@Base>
   2e02c:	cmp	r6, #0
   2e030:	beq	2de2c <__flatcc_error_report@@Base+0x940>
   2e034:	ldrh	r3, [r8, #8]
   2e038:	cmp	r3, #6
   2e03c:	bne	2de2c <__flatcc_error_report@@Base+0x940>
   2e040:	mov	r2, #1
   2e044:	strh	r2, [r8, #8]
   2e048:	ldr	r2, [pc, #948]	; 2e404 <__flatcc_error_report@@Base+0xf18>
   2e04c:	mov	r3, #0
   2e050:	mov	r1, r5
   2e054:	str	r3, [sp, #4]
   2e058:	str	r3, [sp]
   2e05c:	add	r2, pc, r2
   2e060:	mov	r0, r4
   2e064:	bl	2d4ec <__flatcc_error_report@@Base>
   2e068:	b	2de2c <__flatcc_error_report@@Base+0x940>
   2e06c:	mov	r6, #0
   2e070:	ldr	r3, [r5]
   2e074:	ldr	r2, [r5, #4]
   2e078:	mov	r1, #5
   2e07c:	add	ip, r3, r2
   2e080:	cmp	r3, ip
   2e084:	strh	r1, [r8, #8]
   2e088:	beq	2e0b8 <__flatcc_error_report@@Base+0xbcc>
   2e08c:	ldrb	lr, [r3]
   2e090:	sub	r1, lr, #45	; 0x2d
   2e094:	clz	r1, r1
   2e098:	lsr	r1, r1, #5
   2e09c:	sub	r2, r2, r1
   2e0a0:	cmp	r2, #1
   2e0a4:	add	r2, r3, r1
   2e0a8:	ble	2e0b8 <__flatcc_error_report@@Base+0xbcc>
   2e0ac:	ldrb	r3, [r3, r1]
   2e0b0:	cmp	r3, #48	; 0x30
   2e0b4:	beq	2e1c8 <__flatcc_error_report@@Base+0xcdc>
   2e0b8:	mov	r2, #1
   2e0bc:	strh	r2, [r8, #8]
   2e0c0:	ldr	r2, [pc, #832]	; 2e408 <__flatcc_error_report@@Base+0xf1c>
   2e0c4:	mov	r3, #0
   2e0c8:	mov	r1, r5
   2e0cc:	str	r3, [sp, #4]
   2e0d0:	str	r3, [sp]
   2e0d4:	add	r2, pc, r2
   2e0d8:	mov	r0, r4
   2e0dc:	bl	2d4ec <__flatcc_error_report@@Base>
   2e0e0:	cmp	r6, #0
   2e0e4:	beq	2de2c <__flatcc_error_report@@Base+0x940>
   2e0e8:	ldrd	r2, [r8]
   2e0ec:	mov	r1, #4
   2e0f0:	strh	r1, [r8, #8]
   2e0f4:	rsbs	r2, r2, #0
   2e0f8:	rsc	r3, r3, #0
   2e0fc:	strd	r2, [r8]
   2e100:	b	2de2c <__flatcc_error_report@@Base+0x940>
   2e104:	mov	r3, #0
   2e108:	mov	r1, #0
   2e10c:	mov	r2, #6
   2e110:	strb	r1, [r8]
   2e114:	strh	r2, [r8, #8]
   2e118:	b	2de24 <__flatcc_error_report@@Base+0x938>
   2e11c:	cmp	r9, fp
   2e120:	beq	2dfa8 <__flatcc_error_report@@Base+0xabc>
   2e124:	ldr	r3, [sp, #12]
   2e128:	cmp	r3, fp
   2e12c:	beq	2dfa8 <__flatcc_error_report@@Base+0xabc>
   2e130:	cmp	lr, #80	; 0x50
   2e134:	beq	2dfa8 <__flatcc_error_report@@Base+0xabc>
   2e138:	bhi	2e28c <__flatcc_error_report@@Base+0xda0>
   2e13c:	cmp	lr, #46	; 0x2e
   2e140:	beq	2dfa8 <__flatcc_error_report@@Base+0xabc>
   2e144:	cmp	lr, #69	; 0x45
   2e148:	beq	2dfa8 <__flatcc_error_report@@Base+0xabc>
   2e14c:	ldr	r3, [sp, #16]
   2e150:	strd	r0, [r8]
   2e154:	cmp	r3, #45	; 0x2d
   2e158:	beq	2dfa8 <__flatcc_error_report@@Base+0xabc>
   2e15c:	ldr	r3, [sp, #8]
   2e160:	cmp	r3, #0
   2e164:	bne	2e0e8 <__flatcc_error_report@@Base+0xbfc>
   2e168:	b	2de2c <__flatcc_error_report@@Base+0x940>
   2e16c:	ldrb	r3, [r2]
   2e170:	cmp	r3, #46	; 0x2e
   2e174:	beq	2e19c <__flatcc_error_report@@Base+0xcb0>
   2e178:	cmp	r6, #0
   2e17c:	vnegne.f64	d0, d0
   2e180:	vstrne	d0, [r8]
   2e184:	bne	2e034 <__flatcc_error_report@@Base+0xb48>
   2e188:	b	2de2c <__flatcc_error_report@@Base+0x940>
   2e18c:	bl	2d6e4 <__flatcc_error_report@@Base+0x1f8>
   2e190:	mov	r3, #13
   2e194:	strh	r3, [r8, #8]
   2e198:	b	2de34 <__flatcc_error_report@@Base+0x948>
   2e19c:	mov	r2, #1
   2e1a0:	strh	r2, [r8, #8]
   2e1a4:	ldr	r2, [pc, #608]	; 2e40c <__flatcc_error_report@@Base+0xf20>
   2e1a8:	mov	r3, #0
   2e1ac:	str	r3, [sp, #4]
   2e1b0:	str	r3, [sp]
   2e1b4:	add	r2, pc, r2
   2e1b8:	mov	r1, r5
   2e1bc:	mov	r0, r4
   2e1c0:	bl	2d4ec <__flatcc_error_report@@Base>
   2e1c4:	b	2e02c <__flatcc_error_report@@Base+0xb40>
   2e1c8:	ldrb	r3, [r2, #1]
   2e1cc:	orr	r3, r3, #32
   2e1d0:	cmp	r3, #120	; 0x78
   2e1d4:	bne	2e0b8 <__flatcc_error_report@@Base+0xbcc>
   2e1d8:	add	r3, r2, #2
   2e1dc:	str	r3, [sp, #8]
   2e1e0:	sub	r3, ip, r3
   2e1e4:	cmp	r3, #16
   2e1e8:	ldr	r3, [sp, #8]
   2e1ec:	addgt	fp, r2, #18
   2e1f0:	movle	fp, ip
   2e1f4:	cmp	r3, fp
   2e1f8:	beq	2e0b8 <__flatcc_error_report@@Base+0xbcc>
   2e1fc:	mov	r1, r3
   2e200:	str	ip, [sp, #16]
   2e204:	mov	r2, #0
   2e208:	mov	r3, #0
   2e20c:	str	r5, [sp, #12]
   2e210:	mov	ip, r1
   2e214:	str	lr, [sp, #20]
   2e218:	str	r6, [sp, #24]
   2e21c:	str	r4, [sp, #28]
   2e220:	b	2e248 <__flatcc_error_report@@Base+0xd5c>
   2e224:	lsl	r1, r3, #4
   2e228:	lsl	r0, r2, #4
   2e22c:	orr	r1, r1, r2, lsr #28
   2e230:	subs	r2, r0, #48	; 0x30
   2e234:	sbc	r3, r1, #0
   2e238:	adds	r2, r2, lr
   2e23c:	adc	r3, r3, #0
   2e240:	cmp	fp, ip
   2e244:	beq	2e2d4 <__flatcc_error_report@@Base+0xde8>
   2e248:	mov	r4, ip
   2e24c:	ldrb	lr, [ip], #1
   2e250:	sub	r9, lr, #48	; 0x30
   2e254:	orr	r5, lr, #32
   2e258:	cmp	r9, #9
   2e25c:	sub	sl, r5, #97	; 0x61
   2e260:	bls	2e224 <__flatcc_error_report@@Base+0xd38>
   2e264:	lsl	r7, r3, #4
   2e268:	cmp	sl, #5
   2e26c:	orr	r7, r7, r2, lsr #28
   2e270:	lsl	r6, r2, #4
   2e274:	bhi	2e374 <__flatcc_error_report@@Base+0xe88>
   2e278:	subs	r2, r6, #87	; 0x57
   2e27c:	sbc	r3, r7, #0
   2e280:	adds	r2, r2, r5
   2e284:	adc	r3, r3, #0
   2e288:	b	2e240 <__flatcc_error_report@@Base+0xd54>
   2e28c:	cmp	lr, #101	; 0x65
   2e290:	beq	2dfa8 <__flatcc_error_report@@Base+0xabc>
   2e294:	cmp	lr, #112	; 0x70
   2e298:	bne	2e14c <__flatcc_error_report@@Base+0xc60>
   2e29c:	b	2dfa8 <__flatcc_error_report@@Base+0xabc>
   2e2a0:	cmp	r3, #14
   2e2a4:	beq	2e368 <__flatcc_error_report@@Base+0xe7c>
   2e2a8:	cmp	r3, #19
   2e2ac:	beq	2e320 <__flatcc_error_report@@Base+0xe34>
   2e2b0:	cmp	r3, #11
   2e2b4:	beq	2e314 <__flatcc_error_report@@Base+0xe28>
   2e2b8:	mov	r5, r7
   2e2bc:	b	2ddd0 <__flatcc_error_report@@Base+0x8e4>
   2e2c0:	cmn	r3, #988	; 0x3dc
   2e2c4:	bne	2e2b8 <__flatcc_error_report@@Base+0xdcc>
   2e2c8:	mov	r3, r5
   2e2cc:	mov	r5, r7
   2e2d0:	b	2de14 <__flatcc_error_report@@Base+0x928>
   2e2d4:	add	r5, sp, #12
   2e2d8:	ldr	r6, [sp, #24]
   2e2dc:	ldm	r5, {r5, ip, lr}
   2e2e0:	ldr	r4, [sp, #28]
   2e2e4:	cmp	ip, fp
   2e2e8:	bne	2e3c4 <__flatcc_error_report@@Base+0xed8>
   2e2ec:	cmp	lr, #45	; 0x2d
   2e2f0:	strd	r2, [r8]
   2e2f4:	bne	2e0e0 <__flatcc_error_report@@Base+0xbf4>
   2e2f8:	b	2e0b8 <__flatcc_error_report@@Base+0xbcc>
   2e2fc:	str	r5, [sp, #8]
   2e300:	mov	r5, r7
   2e304:	b	2dee8 <__flatcc_error_report@@Base+0x9fc>
   2e308:	mov	r3, r5
   2e30c:	mov	r5, r7
   2e310:	b	2e108 <__flatcc_error_report@@Base+0xc1c>
   2e314:	mov	r6, r5
   2e318:	mov	r5, r7
   2e31c:	b	2dfd8 <__flatcc_error_report@@Base+0xaec>
   2e320:	mov	r0, r4
   2e324:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2e328:	mov	r1, r8
   2e32c:	mov	r0, r4
   2e330:	bl	2dbbc <__flatcc_error_report@@Base+0x6d0>
   2e334:	tst	r6, #1
   2e338:	beq	2e3ec <__flatcc_error_report@@Base+0xf00>
   2e33c:	mov	r2, #1
   2e340:	strh	r2, [r8, #8]
   2e344:	ldr	r2, [pc, #196]	; 2e410 <__flatcc_error_report@@Base+0xf24>
   2e348:	mov	r3, #0
   2e34c:	mov	r1, r7
   2e350:	mov	r0, r4
   2e354:	str	r3, [sp, #4]
   2e358:	str	r3, [sp]
   2e35c:	add	r2, pc, r2
   2e360:	bl	2d4ec <__flatcc_error_report@@Base>
   2e364:	b	2de34 <__flatcc_error_report@@Base+0x948>
   2e368:	mov	r6, r5
   2e36c:	mov	r5, r7
   2e370:	b	2e070 <__flatcc_error_report@@Base+0xb84>
   2e374:	ldr	r0, [sp, #8]
   2e378:	mov	r1, r4
   2e37c:	add	r5, sp, #12
   2e380:	cmp	r0, r1
   2e384:	ldm	r5, {r5, ip, lr}
   2e388:	ldr	r6, [sp, #24]
   2e38c:	ldr	r4, [sp, #28]
   2e390:	beq	2e0b8 <__flatcc_error_report@@Base+0xbcc>
   2e394:	cmp	ip, r1
   2e398:	beq	2e2ec <__flatcc_error_report@@Base+0xe00>
   2e39c:	cmp	fp, r1
   2e3a0:	ldrb	r1, [r1]
   2e3a4:	beq	2e3c8 <__flatcc_error_report@@Base+0xedc>
   2e3a8:	cmp	r1, #80	; 0x50
   2e3ac:	beq	2e0b8 <__flatcc_error_report@@Base+0xbcc>
   2e3b0:	cmp	r1, #112	; 0x70
   2e3b4:	beq	2e0b8 <__flatcc_error_report@@Base+0xbcc>
   2e3b8:	cmp	r1, #46	; 0x2e
   2e3bc:	bne	2e2ec <__flatcc_error_report@@Base+0xe00>
   2e3c0:	b	2e0b8 <__flatcc_error_report@@Base+0xbcc>
   2e3c4:	ldrb	r1, [fp]
   2e3c8:	sub	r0, r1, #48	; 0x30
   2e3cc:	cmp	r0, #9
   2e3d0:	bls	2e0b8 <__flatcc_error_report@@Base+0xbcc>
   2e3d4:	orr	r1, r1, #32
   2e3d8:	sub	r0, r1, #97	; 0x61
   2e3dc:	uxtb	r0, r0
   2e3e0:	cmp	r0, #5
   2e3e4:	bhi	2e3a8 <__flatcc_error_report@@Base+0xebc>
   2e3e8:	b	2e0b8 <__flatcc_error_report@@Base+0xbcc>
   2e3ec:	mov	r5, r7
   2e3f0:	b	2de54 <__flatcc_error_report@@Base+0x968>
   2e3f4:			; <UNDEFINED> instruction: 0xfffffc26
   2e3f8:	andeq	r8, r2, r0, ror sl
   2e3fc:	andeq	r8, r2, r4, lsl #18
   2e400:	andeq	r8, r2, r4, asr #17
   2e404:	andeq	r8, r2, r8, lsl #18
   2e408:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   2e40c:	andeq	r8, r2, r4, asr #14
   2e410:	andeq	r8, r2, r4, asr #11
   2e414:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e418:	sub	sp, sp, #12
   2e41c:	ldr	r9, [r0, #40]	; 0x28
   2e420:	ldr	r3, [r9, #16]
   2e424:	cmp	r3, #40	; 0x28
   2e428:	beq	2e438 <__flatcc_error_report@@Base+0xf4c>
   2e42c:	mov	r0, #0
   2e430:	add	sp, sp, #12
   2e434:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e438:	mov	r4, r0
   2e43c:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2e440:	ldr	fp, [r4, #40]	; 0x28
   2e444:	ldr	r3, [fp, #16]
   2e448:	cmp	r3, #9
   2e44c:	beq	2e46c <__flatcc_error_report@@Base+0xf80>
   2e450:	ldr	r2, [pc, #388]	; 2e5dc <__flatcc_error_report@@Base+0x10f0>
   2e454:	mov	r3, r9
   2e458:	mov	r0, r4
   2e45c:	add	r2, pc, r2
   2e460:	mov	r1, #41	; 0x29
   2e464:	bl	2d82c <__flatcc_error_report@@Base+0x340>
   2e468:	b	2e42c <__flatcc_error_report@@Base+0xf40>
   2e46c:	mov	r0, r4
   2e470:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2e474:	ldr	r8, [pc, #356]	; 2e5e0 <__flatcc_error_report@@Base+0x10f4>
   2e478:	mov	r6, #0
   2e47c:	add	r8, pc, r8
   2e480:	mov	r7, #1
   2e484:	mov	sl, #65536	; 0x10000
   2e488:	ldr	r5, [r4, #52]	; 0x34
   2e48c:	ldr	r2, [r4, #44]	; 0x2c
   2e490:	add	r3, r5, #32
   2e494:	cmp	r3, r2
   2e498:	bhi	2e518 <__flatcc_error_report@@Base+0x102c>
   2e49c:	ldr	r2, [r4, #40]	; 0x28
   2e4a0:	str	r3, [r4, #52]	; 0x34
   2e4a4:	str	r6, [r5]
   2e4a8:	ldr	r3, [r2, #16]
   2e4ac:	str	fp, [r5, #4]
   2e4b0:	cmp	r3, #58	; 0x3a
   2e4b4:	bne	2e4d4 <__flatcc_error_report@@Base+0xfe8>
   2e4b8:	mov	r0, r4
   2e4bc:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2e4c0:	mov	r3, r8
   2e4c4:	mov	r2, r7
   2e4c8:	add	r1, r5, #8
   2e4cc:	mov	r0, r4
   2e4d0:	bl	2dd84 <__flatcc_error_report@@Base+0x898>
   2e4d4:	ldr	r3, [r4, #108]	; 0x6c
   2e4d8:	cmp	r3, #9
   2e4dc:	bgt	2e5b0 <__flatcc_error_report@@Base+0x10c4>
   2e4e0:	ldr	r3, [r4, #40]	; 0x28
   2e4e4:	ldr	r3, [r3, #16]
   2e4e8:	cmp	r3, #44	; 0x2c
   2e4ec:	bne	2e5c0 <__flatcc_error_report@@Base+0x10d4>
   2e4f0:	mov	r0, r4
   2e4f4:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2e4f8:	ldr	fp, [r4, #40]	; 0x28
   2e4fc:	ldr	r3, [fp, #16]
   2e500:	cmp	r3, #9
   2e504:	bne	2e54c <__flatcc_error_report@@Base+0x1060>
   2e508:	mov	r0, r4
   2e50c:	mov	r6, r5
   2e510:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2e514:	b	2e488 <__flatcc_error_report@@Base+0xf9c>
   2e518:	mov	r1, r7
   2e51c:	mov	r0, sl
   2e520:	bl	13e98 <calloc@plt>
   2e524:	cmp	r0, #0
   2e528:	beq	2e5bc <__flatcc_error_report@@Base+0x10d0>
   2e52c:	ldr	r1, [r4, #48]	; 0x30
   2e530:	add	r2, r0, #65536	; 0x10000
   2e534:	add	r5, r0, #16
   2e538:	add	r3, r0, #48	; 0x30
   2e53c:	str	r1, [r0]
   2e540:	str	r0, [r4, #48]	; 0x30
   2e544:	str	r2, [r4, #44]	; 0x2c
   2e548:	b	2e49c <__flatcc_error_report@@Base+0xfb0>
   2e54c:	ldr	r2, [pc, #144]	; 2e5e4 <__flatcc_error_report@@Base+0x10f8>
   2e550:	mov	r3, #0
   2e554:	mov	r1, fp
   2e558:	str	r3, [sp, #4]
   2e55c:	str	r3, [sp]
   2e560:	add	r2, pc, r2
   2e564:	mov	r0, r4
   2e568:	bl	2d4ec <__flatcc_error_report@@Base>
   2e56c:	ldr	r2, [pc, #116]	; 2e5e8 <__flatcc_error_report@@Base+0x10fc>
   2e570:	mov	r3, r9
   2e574:	mov	r0, r4
   2e578:	add	r2, pc, r2
   2e57c:	mov	r1, #41	; 0x29
   2e580:	bl	2d82c <__flatcc_error_report@@Base+0x340>
   2e584:	mov	r0, r5
   2e588:	mov	r2, #0
   2e58c:	b	2e594 <__flatcc_error_report@@Base+0x10a8>
   2e590:	mov	r0, r3
   2e594:	ldr	r3, [r0]
   2e598:	str	r2, [r0]
   2e59c:	cmp	r3, #0
   2e5a0:	mov	r2, r0
   2e5a4:	bne	2e590 <__flatcc_error_report@@Base+0x10a4>
   2e5a8:	add	sp, sp, #12
   2e5ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e5b0:	mov	r0, r5
   2e5b4:	add	sp, sp, #12
   2e5b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e5bc:	bl	140b0 <__assert_fail@plt+0x80>
   2e5c0:	ldr	r2, [pc, #36]	; 2e5ec <__flatcc_error_report@@Base+0x1100>
   2e5c4:	mov	r3, r9
   2e5c8:	mov	r0, r4
   2e5cc:	add	r2, pc, r2
   2e5d0:	mov	r1, #41	; 0x29
   2e5d4:	bl	2d82c <__flatcc_error_report@@Base+0x340>
   2e5d8:	b	2e584 <__flatcc_error_report@@Base+0x1098>
   2e5dc:	andeq	r8, r2, ip, ror r5
   2e5e0:	andeq	r8, r2, ip, lsl #10
   2e5e4:	andeq	r8, r2, r8, asr #8
   2e5e8:	andeq	r8, r2, r0, ror #8
   2e5ec:	andeq	r8, r2, ip, lsl #8
   2e5f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e5f4:	mov	r4, r0
   2e5f8:	ldr	r6, [r0, #40]	; 0x28
   2e5fc:	sub	sp, sp, #28
   2e600:	ldr	r3, [r6, #16]
   2e604:	cmp	r3, #9
   2e608:	bne	2ea24 <__flatcc_error_report@@Base+0x1538>
   2e60c:	mov	r5, r1
   2e610:	mov	r8, r2
   2e614:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2e618:	str	r6, [r5, #4]
   2e61c:	mov	r0, r4
   2e620:	bl	2e414 <__flatcc_error_report@@Base+0xf28>
   2e624:	ldr	r1, [r4, #40]	; 0x28
   2e628:	ldr	r3, [r1, #16]
   2e62c:	cmp	r3, #123	; 0x7b
   2e630:	str	r0, [r5, #28]
   2e634:	bne	2ea64 <__flatcc_error_report@@Base+0x1578>
   2e638:	mov	r0, r4
   2e63c:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2e640:	ldr	r3, [pc, #1088]	; 2ea88 <__flatcc_error_report@@Base+0x159c>
   2e644:	ldr	r9, [pc, #1088]	; 2ea8c <__flatcc_error_report@@Base+0x15a0>
   2e648:	add	r3, pc, r3
   2e64c:	str	r3, [sp, #8]
   2e650:	ldr	r3, [pc, #1080]	; 2ea90 <__flatcc_error_report@@Base+0x15a4>
   2e654:	ldr	sl, [pc, #1080]	; 2ea94 <__flatcc_error_report@@Base+0x15a8>
   2e658:	add	r3, pc, r3
   2e65c:	str	r3, [sp, #12]
   2e660:	ldr	r3, [pc, #1072]	; 2ea98 <__flatcc_error_report@@Base+0x15ac>
   2e664:	add	r9, pc, r9
   2e668:	add	r3, pc, r3
   2e66c:	str	r3, [sp, #16]
   2e670:	ldr	r3, [pc, #1060]	; 2ea9c <__flatcc_error_report@@Base+0x15b0>
   2e674:	add	sl, pc, sl
   2e678:	add	r3, pc, r3
   2e67c:	str	r3, [sp, #20]
   2e680:	ldr	fp, [r4, #40]	; 0x28
   2e684:	ldr	r7, [fp, #16]
   2e688:	cmp	r7, #125	; 0x7d
   2e68c:	beq	2e9c4 <__flatcc_error_report@@Base+0x14d8>
   2e690:	ldr	r3, [pc, #1032]	; 2eaa0 <__flatcc_error_report@@Base+0x15b4>
   2e694:	ldr	r6, [r4, #52]	; 0x34
   2e698:	cmp	r8, r3
   2e69c:	beq	2e7d8 <__flatcc_error_report@@Base+0x12ec>
   2e6a0:	ldr	r3, [r4, #44]	; 0x2c
   2e6a4:	add	r0, r6, #128	; 0x80
   2e6a8:	cmp	r0, r3
   2e6ac:	bhi	2e7a4 <__flatcc_error_report@@Base+0x12b8>
   2e6b0:	ldr	r1, [r5, #20]
   2e6b4:	mov	r3, #5
   2e6b8:	str	r0, [r4, #52]	; 0x34
   2e6bc:	str	r1, [r6]
   2e6c0:	strh	r3, [r6, #8]
   2e6c4:	str	r6, [r5, #20]
   2e6c8:	ldr	r1, [r4, #36]	; 0x24
   2e6cc:	cmp	r1, #0
   2e6d0:	beq	2e6f4 <__flatcc_error_report@@Base+0x1208>
   2e6d4:	mov	r0, #0
   2e6d8:	b	2e6e0 <__flatcc_error_report@@Base+0x11f4>
   2e6dc:	mov	r1, r3
   2e6e0:	ldr	r3, [r1]
   2e6e4:	str	r0, [r1]
   2e6e8:	cmp	r3, #0
   2e6ec:	mov	r0, r1
   2e6f0:	bne	2e6dc <__flatcc_error_report@@Base+0x11f0>
   2e6f4:	cmp	r7, #9
   2e6f8:	mov	r7, #0
   2e6fc:	str	r1, [r6, #68]	; 0x44
   2e700:	str	r7, [r4, #36]	; 0x24
   2e704:	bne	2e8e4 <__flatcc_error_report@@Base+0x13f8>
   2e708:	mov	r0, r4
   2e70c:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2e710:	ldr	r1, [r4, #40]	; 0x28
   2e714:	str	fp, [r6, #4]
   2e718:	ldr	r3, [r1, #16]
   2e71c:	cmp	r3, #58	; 0x3a
   2e720:	bne	2e90c <__flatcc_error_report@@Base+0x1420>
   2e724:	mov	r0, r4
   2e728:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2e72c:	add	r1, r6, #16
   2e730:	mov	r0, r4
   2e734:	bl	2d878 <__flatcc_error_report@@Base+0x38c>
   2e738:	ldr	r3, [r4, #40]	; 0x28
   2e73c:	ldr	r3, [r3, #16]
   2e740:	cmp	r3, #61	; 0x3d
   2e744:	bne	2e764 <__flatcc_error_report@@Base+0x1278>
   2e748:	mov	r0, r4
   2e74c:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2e750:	mov	r3, sl
   2e754:	mov	r2, #2
   2e758:	add	r1, r6, #48	; 0x30
   2e75c:	mov	r0, r4
   2e760:	bl	2dd84 <__flatcc_error_report@@Base+0x898>
   2e764:	mov	r0, r4
   2e768:	bl	2e414 <__flatcc_error_report@@Base+0xf28>
   2e76c:	mov	r3, #0
   2e770:	mov	r2, r9
   2e774:	mov	r1, #59	; 0x3b
   2e778:	str	r0, [r6, #64]	; 0x40
   2e77c:	mov	r0, r4
   2e780:	bl	2d82c <__flatcc_error_report@@Base+0x340>
   2e784:	ldr	r3, [r4, #108]	; 0x6c
   2e788:	cmp	r3, #9
   2e78c:	ble	2e680 <__flatcc_error_report@@Base+0x1194>
   2e790:	mov	r0, r4
   2e794:	mov	r1, #125	; 0x7d
   2e798:	add	sp, sp, #28
   2e79c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e7a0:	b	2d3c0 <__flatcc_fb_default_error_out@@Base+0x258>
   2e7a4:	mov	r1, #1
   2e7a8:	mov	r0, #65536	; 0x10000
   2e7ac:	bl	13e98 <calloc@plt>
   2e7b0:	cmp	r0, #0
   2e7b4:	beq	2ea84 <__flatcc_error_report@@Base+0x1598>
   2e7b8:	ldr	r3, [r4, #48]	; 0x30
   2e7bc:	add	r6, r0, #16
   2e7c0:	str	r3, [r0]
   2e7c4:	add	r3, r0, #65536	; 0x10000
   2e7c8:	str	r0, [r4, #48]	; 0x30
   2e7cc:	str	r3, [r4, #44]	; 0x2c
   2e7d0:	add	r0, r0, #144	; 0x90
   2e7d4:	b	2e6b0 <__flatcc_error_report@@Base+0x11c4>
   2e7d8:	ldr	r1, [r4, #44]	; 0x2c
   2e7dc:	add	r3, r6, #128	; 0x80
   2e7e0:	cmp	r3, r1
   2e7e4:	bhi	2e928 <__flatcc_error_report@@Base+0x143c>
   2e7e8:	ldr	r1, [r5, #20]
   2e7ec:	str	r3, [r4, #52]	; 0x34
   2e7f0:	mov	r3, #5
   2e7f4:	str	r1, [r6]
   2e7f8:	strh	r3, [r6, #8]
   2e7fc:	str	r6, [r5, #20]
   2e800:	ldr	r3, [r4, #36]	; 0x24
   2e804:	cmp	r3, #0
   2e808:	beq	2e82c <__flatcc_error_report@@Base+0x1340>
   2e80c:	mov	r0, #0
   2e810:	b	2e818 <__flatcc_error_report@@Base+0x132c>
   2e814:	mov	r3, r2
   2e818:	ldr	r2, [r3]
   2e81c:	str	r0, [r3]
   2e820:	cmp	r2, #0
   2e824:	mov	r0, r3
   2e828:	bne	2e814 <__flatcc_error_report@@Base+0x1328>
   2e82c:	cmp	r7, #9
   2e830:	mov	r7, #0
   2e834:	str	r3, [r6, #68]	; 0x44
   2e838:	str	r7, [r4, #36]	; 0x24
   2e83c:	bne	2e988 <__flatcc_error_report@@Base+0x149c>
   2e840:	mov	r0, r4
   2e844:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2e848:	ldr	r1, [r4, #40]	; 0x28
   2e84c:	str	fp, [r6, #4]
   2e850:	ldr	r3, [r1, #16]
   2e854:	cmp	r3, #40	; 0x28
   2e858:	bne	2e9a8 <__flatcc_error_report@@Base+0x14bc>
   2e85c:	mov	r0, r4
   2e860:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2e864:	add	r1, r6, #32
   2e868:	mov	r0, r4
   2e86c:	bl	2d878 <__flatcc_error_report@@Base+0x38c>
   2e870:	ldr	r1, [r4, #40]	; 0x28
   2e874:	ldr	r3, [r1, #16]
   2e878:	cmp	r3, #41	; 0x29
   2e87c:	bne	2ea04 <__flatcc_error_report@@Base+0x1518>
   2e880:	mov	r0, r4
   2e884:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2e888:	ldr	r1, [r4, #40]	; 0x28
   2e88c:	ldr	r3, [r1, #16]
   2e890:	cmp	r3, #58	; 0x3a
   2e894:	bne	2ea44 <__flatcc_error_report@@Base+0x1558>
   2e898:	mov	r0, r4
   2e89c:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2e8a0:	add	r1, r6, #16
   2e8a4:	mov	r0, r4
   2e8a8:	bl	2d878 <__flatcc_error_report@@Base+0x38c>
   2e8ac:	ldr	fp, [r4, #40]	; 0x28
   2e8b0:	ldr	r3, [fp, #16]
   2e8b4:	cmp	r3, #61	; 0x3d
   2e8b8:	beq	2e95c <__flatcc_error_report@@Base+0x1470>
   2e8bc:	mov	r0, r4
   2e8c0:	bl	2e414 <__flatcc_error_report@@Base+0xf28>
   2e8c4:	ldr	r2, [pc, #472]	; 2eaa4 <__flatcc_error_report@@Base+0x15b8>
   2e8c8:	mov	r3, r7
   2e8cc:	add	r2, pc, r2
   2e8d0:	mov	r1, #59	; 0x3b
   2e8d4:	str	r0, [r6, #64]	; 0x40
   2e8d8:	mov	r0, r4
   2e8dc:	bl	2d82c <__flatcc_error_report@@Base+0x340>
   2e8e0:	b	2e784 <__flatcc_error_report@@Base+0x1298>
   2e8e4:	str	r7, [sp, #4]
   2e8e8:	str	r7, [sp]
   2e8ec:	mov	r3, r7
   2e8f0:	mov	r1, fp
   2e8f4:	ldr	r2, [sp, #8]
   2e8f8:	mov	r0, r4
   2e8fc:	bl	2d4ec <__flatcc_error_report@@Base>
   2e900:	mov	r0, r4
   2e904:	bl	2d358 <__flatcc_fb_default_error_out@@Base+0x1f0>
   2e908:	b	2e784 <__flatcc_error_report@@Base+0x1298>
   2e90c:	str	r7, [sp, #4]
   2e910:	str	r7, [sp]
   2e914:	mov	r3, r7
   2e918:	ldr	r2, [sp, #12]
   2e91c:	mov	r0, r4
   2e920:	bl	2d4ec <__flatcc_error_report@@Base>
   2e924:	b	2e900 <__flatcc_error_report@@Base+0x1414>
   2e928:	mov	r1, #1
   2e92c:	mov	r0, #65536	; 0x10000
   2e930:	bl	13e98 <calloc@plt>
   2e934:	subs	r3, r0, #0
   2e938:	beq	2ea84 <__flatcc_error_report@@Base+0x1598>
   2e93c:	ldr	r1, [r4, #48]	; 0x30
   2e940:	add	r6, r3, #16
   2e944:	str	r1, [r3]
   2e948:	add	r1, r3, #65536	; 0x10000
   2e94c:	str	r3, [r4, #48]	; 0x30
   2e950:	str	r1, [r4, #44]	; 0x2c
   2e954:	add	r3, r3, #144	; 0x90
   2e958:	b	2e7e8 <__flatcc_error_report@@Base+0x12fc>
   2e95c:	mov	r0, r4
   2e960:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2e964:	ldr	r2, [pc, #316]	; 2eaa8 <__flatcc_error_report@@Base+0x15bc>
   2e968:	str	r7, [sp, #4]
   2e96c:	str	r7, [sp]
   2e970:	mov	r3, r7
   2e974:	mov	r1, fp
   2e978:	add	r2, pc, r2
   2e97c:	mov	r0, r4
   2e980:	bl	2d4ec <__flatcc_error_report@@Base>
   2e984:	b	2e900 <__flatcc_error_report@@Base+0x1414>
   2e988:	str	r7, [sp, #4]
   2e98c:	str	r7, [sp]
   2e990:	mov	r3, r7
   2e994:	mov	r1, fp
   2e998:	ldr	r2, [sp, #16]
   2e99c:	mov	r0, r4
   2e9a0:	bl	2d4ec <__flatcc_error_report@@Base>
   2e9a4:	b	2e900 <__flatcc_error_report@@Base+0x1414>
   2e9a8:	str	r7, [sp, #4]
   2e9ac:	str	r7, [sp]
   2e9b0:	mov	r3, r7
   2e9b4:	ldr	r2, [sp, #20]
   2e9b8:	mov	r0, r4
   2e9bc:	bl	2d4ec <__flatcc_error_report@@Base>
   2e9c0:	b	2e900 <__flatcc_error_report@@Base+0x1414>
   2e9c4:	mov	r0, r4
   2e9c8:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2e9cc:	ldr	r3, [r5, #20]
   2e9d0:	cmp	r3, #0
   2e9d4:	beq	2e9f8 <__flatcc_error_report@@Base+0x150c>
   2e9d8:	mov	r1, #0
   2e9dc:	b	2e9e4 <__flatcc_error_report@@Base+0x14f8>
   2e9e0:	mov	r3, r2
   2e9e4:	ldr	r2, [r3]
   2e9e8:	str	r1, [r3]
   2e9ec:	cmp	r2, #0
   2e9f0:	mov	r1, r3
   2e9f4:	bne	2e9e0 <__flatcc_error_report@@Base+0x14f4>
   2e9f8:	str	r3, [r5, #20]
   2e9fc:	add	sp, sp, #28
   2ea00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2ea04:	ldr	r2, [pc, #160]	; 2eaac <__flatcc_error_report@@Base+0x15c0>
   2ea08:	str	r7, [sp, #4]
   2ea0c:	str	r7, [sp]
   2ea10:	mov	r3, r7
   2ea14:	add	r2, pc, r2
   2ea18:	mov	r0, r4
   2ea1c:	bl	2d4ec <__flatcc_error_report@@Base>
   2ea20:	b	2e900 <__flatcc_error_report@@Base+0x1414>
   2ea24:	ldr	r2, [pc, #132]	; 2eab0 <__flatcc_error_report@@Base+0x15c4>
   2ea28:	mov	r3, #0
   2ea2c:	mov	r1, r6
   2ea30:	str	r3, [sp, #4]
   2ea34:	str	r3, [sp]
   2ea38:	add	r2, pc, r2
   2ea3c:	bl	2d4ec <__flatcc_error_report@@Base>
   2ea40:	b	2e790 <__flatcc_error_report@@Base+0x12a4>
   2ea44:	ldr	r2, [pc, #104]	; 2eab4 <__flatcc_error_report@@Base+0x15c8>
   2ea48:	str	r7, [sp, #4]
   2ea4c:	str	r7, [sp]
   2ea50:	mov	r3, r7
   2ea54:	add	r2, pc, r2
   2ea58:	mov	r0, r4
   2ea5c:	bl	2d4ec <__flatcc_error_report@@Base>
   2ea60:	b	2e900 <__flatcc_error_report@@Base+0x1414>
   2ea64:	ldr	r2, [pc, #76]	; 2eab8 <__flatcc_error_report@@Base+0x15cc>
   2ea68:	mov	r3, #0
   2ea6c:	str	r3, [sp, #4]
   2ea70:	str	r3, [sp]
   2ea74:	add	r2, pc, r2
   2ea78:	mov	r0, r4
   2ea7c:	bl	2d4ec <__flatcc_error_report@@Base>
   2ea80:	b	2e790 <__flatcc_error_report@@Base+0x12a4>
   2ea84:	bl	140b0 <__assert_fail@plt+0x80>
   2ea88:			; <UNDEFINED> instruction: 0x000284b8
   2ea8c:	andeq	r8, r2, r8, lsl #10
   2ea90:	andeq	r8, r2, r4, asr #9
   2ea94:	ldrdeq	r8, [r2], -r4
   2ea98:	ldrdeq	r8, [r2], -r0
   2ea9c:	ldrdeq	r8, [r2], -ip
   2eaa0:			; <UNDEFINED> instruction: 0xfffffc39
   2eaa4:	andeq	r8, r2, r4, asr #5
   2eaa8:	andeq	r8, r2, r0, ror #2
   2eaac:	andeq	r8, r2, r8, rrx
   2eab0:	andeq	r7, r2, r0, asr #31
   2eab4:	andeq	r8, r2, r0, asr r0
   2eab8:	andeq	r7, r2, r8, lsr #31

0002eabc <error_ref_sym@@Base>:
   2eabc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2eac0:	sub	sp, sp, #76	; 0x4c
   2eac4:	subs	sl, r1, #0
   2eac8:	str	r0, [sp, #8]
   2eacc:	str	r2, [sp, #12]
   2ead0:	mov	r9, r3
   2ead4:	beq	2eb9c <error_ref_sym@@Base+0xe0>
   2ead8:	mov	r6, sl
   2eadc:	mov	fp, #0
   2eae0:	mov	r4, #50	; 0x32
   2eae4:	add	r7, sp, #20
   2eae8:	mov	r8, #46	; 0x2e
   2eaec:	ldr	r3, [r6, #4]
   2eaf0:	add	r0, r7, fp
   2eaf4:	ldm	r3, {r1, r5}
   2eaf8:	cmp	r5, r4
   2eafc:	movge	r5, r4
   2eb00:	mov	r2, r5
   2eb04:	bl	13ed4 <memcpy@plt>
   2eb08:	add	r2, r5, fp
   2eb0c:	add	r3, sp, #72	; 0x48
   2eb10:	add	r3, r3, r2
   2eb14:	sub	r5, r4, r5
   2eb18:	strb	r8, [r3, #-52]	; 0xffffffcc
   2eb1c:	ldr	r6, [r6]
   2eb20:	sub	r4, r5, #1
   2eb24:	cmp	r6, #0
   2eb28:	cmpne	r4, #0
   2eb2c:	movgt	r1, #1
   2eb30:	movle	r1, #0
   2eb34:	add	fp, r2, #1
   2eb38:	bgt	2eaec <error_ref_sym@@Base+0x30>
   2eb3c:	add	r3, sp, #72	; 0x48
   2eb40:	cmp	fp, #0
   2eb44:	add	r0, r3, fp
   2eb48:	movle	r2, fp
   2eb4c:	cmp	r4, #0
   2eb50:	strb	r1, [r0, #-52]	; 0xffffffcc
   2eb54:	ble	2eb84 <error_ref_sym@@Base+0xc8>
   2eb58:	cmp	r9, #0
   2eb5c:	ldr	r1, [sl, #4]
   2eb60:	ldrne	r3, [r9, #4]
   2eb64:	moveq	r3, r9
   2eb68:	str	r2, [sp, #4]
   2eb6c:	str	r7, [sp]
   2eb70:	ldr	r2, [sp, #12]
   2eb74:	ldr	r0, [sp, #8]
   2eb78:	bl	2d4ec <__flatcc_error_report@@Base>
   2eb7c:	add	sp, sp, #76	; 0x4c
   2eb80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2eb84:	ldr	r3, [pc, #32]	; 2ebac <error_ref_sym@@Base+0xf0>
   2eb88:	mov	r2, #50	; 0x32
   2eb8c:	add	r3, pc, r3
   2eb90:	ldr	r0, [r3, #8]
   2eb94:	str	r0, [sp, #67]	; 0x43
   2eb98:	b	2eb58 <error_ref_sym@@Base+0x9c>
   2eb9c:	add	r7, sp, #72	; 0x48
   2eba0:	mov	r2, sl
   2eba4:	strb	sl, [r7, #-52]!	; 0xffffffcc
   2eba8:	b	2eb58 <error_ref_sym@@Base+0x9c>
   2ebac:	andeq	r7, r2, ip, ror r9

0002ebb0 <__flatcc_fb_init_parser@@Base>:
   2ebb0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   2ebb4:	sub	sp, sp, #8
   2ebb8:	mov	r6, r1
   2ebbc:	mov	r7, r2
   2ebc0:	mov	r1, #0
   2ebc4:	mov	r2, #560	; 0x230
   2ebc8:	mov	r8, r3
   2ebcc:	mov	r5, r0
   2ebd0:	ldr	r4, [sp, #44]	; 0x2c
   2ebd4:	bl	13f94 <memset@plt>
   2ebd8:	ldr	r3, [pc, #676]	; 2ee84 <__flatcc_fb_init_parser@@Base+0x2d4>
   2ebdc:	cmp	r8, #0
   2ebe0:	add	r3, pc, r3
   2ebe4:	beq	2ed64 <__flatcc_fb_init_parser@@Base+0x1b4>
   2ebe8:	ldr	r3, [sp, #40]	; 0x28
   2ebec:	cmp	r6, #0
   2ebf0:	str	r8, [r5, #8]
   2ebf4:	str	r3, [r5, #12]
   2ebf8:	beq	2ed78 <__flatcc_fb_init_parser@@Base+0x1c8>
   2ebfc:	mov	r2, #224	; 0xe0
   2ec00:	mov	r1, r6
   2ec04:	add	r0, r5, #128	; 0x80
   2ec08:	bl	13ed4 <memcpy@plt>
   2ec0c:	ldr	r3, [r5, #192]	; 0xc0
   2ec10:	cmp	r4, #0
   2ec14:	addeq	r4, r5, #416	; 0x1a0
   2ec18:	cmp	r3, #8
   2ec1c:	str	r4, [r5, #412]	; 0x19c
   2ec20:	bhi	2edd8 <__flatcc_fb_init_parser@@Base+0x228>
   2ec24:	mov	r2, #1
   2ec28:	lsl	r3, r2, r3
   2ec2c:	tst	r3, #276	; 0x114
   2ec30:	beq	2edd8 <__flatcc_fb_init_parser@@Base+0x228>
   2ec34:	ldr	r3, [r5, #196]	; 0xc4
   2ec38:	cmp	r3, #8
   2ec3c:	bhi	2ee00 <__flatcc_fb_init_parser@@Base+0x250>
   2ec40:	lsl	r2, r2, r3
   2ec44:	tst	r2, #276	; 0x114
   2ec48:	beq	2ee00 <__flatcc_fb_init_parser@@Base+0x250>
   2ec4c:	cmp	r7, #0
   2ec50:	beq	2ed84 <__flatcc_fb_init_parser@@Base+0x1d4>
   2ec54:	mov	r0, r7
   2ec58:	bl	13f70 <strlen@plt>
   2ec5c:	mov	r8, r0
   2ec60:	ldr	r2, [r6, #96]	; 0x60
   2ec64:	mov	r1, r8
   2ec68:	mov	r0, r7
   2ec6c:	bl	2d018 <__flatcc_fb_create_basename@@Base>
   2ec70:	cmp	r0, #0
   2ec74:	mov	r4, r0
   2ec78:	str	r0, [r5, #512]	; 0x200
   2ec7c:	beq	2ee80 <__flatcc_fb_init_parser@@Base+0x2d0>
   2ec80:	bl	13f70 <strlen@plt>
   2ec84:	mov	r1, r0
   2ec88:	mov	r9, r0
   2ec8c:	mov	r0, r4
   2ec90:	bl	2cb88 <__flatcc_fb_copy_path_n@@Base>
   2ec94:	subs	sl, r0, #0
   2ec98:	beq	2ee80 <__flatcc_fb_init_parser@@Base+0x2d0>
   2ec9c:	cmp	r9, #0
   2eca0:	beq	2ece0 <__flatcc_fb_init_parser@@Base+0x130>
   2eca4:	ldrb	r4, [sl]
   2eca8:	cmp	r4, #0
   2ecac:	beq	2ece0 <__flatcc_fb_init_parser@@Base+0x130>
   2ecb0:	bl	13f4c <__ctype_toupper_loc@plt>
   2ecb4:	mov	r3, sl
   2ecb8:	add	r1, sl, r9
   2ecbc:	b	2eccc <__flatcc_fb_init_parser@@Base+0x11c>
   2ecc0:	ldrb	r4, [r3]
   2ecc4:	cmp	r4, #0
   2ecc8:	beq	2ece0 <__flatcc_fb_init_parser@@Base+0x130>
   2eccc:	ldr	r2, [r0]
   2ecd0:	ldr	r2, [r2, r4, lsl #2]
   2ecd4:	strb	r2, [r3], #1
   2ecd8:	cmp	r1, r3
   2ecdc:	bne	2ecc0 <__flatcc_fb_init_parser@@Base+0x110>
   2ece0:	ldr	r2, [pc, #416]	; 2ee88 <__flatcc_fb_init_parser@@Base+0x2d8>
   2ece4:	str	sl, [r5, #516]	; 0x204
   2ece8:	str	sl, [r5, #496]	; 0x1f0
   2ecec:	str	r9, [r5, #500]	; 0x1f4
   2ecf0:	mov	r1, r8
   2ecf4:	mov	r0, r7
   2ecf8:	add	r2, pc, r2
   2ecfc:	bl	2d018 <__flatcc_fb_create_basename@@Base>
   2ed00:	cmp	r0, #0
   2ed04:	str	r0, [r5, #520]	; 0x208
   2ed08:	beq	2ee80 <__flatcc_fb_init_parser@@Base+0x2d0>
   2ed0c:	ldr	r0, [r6, #192]	; 0xc0
   2ed10:	cmp	r0, #0
   2ed14:	beq	2ed24 <__flatcc_fb_init_parser@@Base+0x174>
   2ed18:	str	r0, [r5, #476]	; 0x1dc
   2ed1c:	bl	13f70 <strlen@plt>
   2ed20:	str	r0, [r5, #480]	; 0x1e0
   2ed24:	mov	r2, #0
   2ed28:	mov	r1, r2
   2ed2c:	ldr	r0, [r5, #412]	; 0x19c
   2ed30:	bl	2c404 <fb_scope_table_find@@Base>
   2ed34:	subs	r4, r0, #0
   2ed38:	beq	2ed94 <__flatcc_fb_init_parser@@Base+0x1e4>
   2ed3c:	mov	r2, #0
   2ed40:	str	r4, [r5, #544]	; 0x220
   2ed44:	ldr	r0, [r5, #412]	; 0x19c
   2ed48:	mov	r1, r2
   2ed4c:	bl	2c404 <fb_scope_table_find@@Base>
   2ed50:	cmp	r4, r0
   2ed54:	moveq	r0, #0
   2ed58:	bne	2ee5c <__flatcc_fb_init_parser@@Base+0x2ac>
   2ed5c:	add	sp, sp, #8
   2ed60:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   2ed64:	ldr	r2, [pc, #288]	; 2ee8c <__flatcc_fb_init_parser@@Base+0x2dc>
   2ed68:	cmp	r6, #0
   2ed6c:	ldr	r3, [r3, r2]
   2ed70:	str	r3, [r5, #8]
   2ed74:	bne	2ebfc <__flatcc_fb_init_parser@@Base+0x4c>
   2ed78:	add	r0, r5, #128	; 0x80
   2ed7c:	bl	144f8 <flatcc_init_options@@Base>
   2ed80:	b	2ec0c <__flatcc_fb_init_parser@@Base+0x5c>
   2ed84:	ldr	r7, [pc, #260]	; 2ee90 <__flatcc_fb_init_parser@@Base+0x2e0>
   2ed88:	mov	r8, #4
   2ed8c:	add	r7, pc, r7
   2ed90:	b	2ec60 <__flatcc_fb_init_parser@@Base+0xb0>
   2ed94:	ldr	r4, [r5, #52]	; 0x34
   2ed98:	ldr	r3, [r5, #44]	; 0x2c
   2ed9c:	add	ip, r4, #32
   2eda0:	cmp	ip, r3
   2eda4:	bhi	2ee28 <__flatcc_fb_init_parser@@Base+0x278>
   2eda8:	add	r2, r5, #476	; 0x1dc
   2edac:	mov	r3, r4
   2edb0:	ldm	r2, {r0, r1}
   2edb4:	mov	lr, #0
   2edb8:	str	ip, [r5, #52]	; 0x34
   2edbc:	mov	r2, #1
   2edc0:	str	lr, [r3], #20
   2edc4:	stm	r3, {r0, r1}
   2edc8:	mov	r1, r4
   2edcc:	ldr	r0, [r5, #412]	; 0x19c
   2edd0:	bl	2c3e0 <fb_scope_table_insert_item@@Base>
   2edd4:	b	2ed3c <__flatcc_fb_init_parser@@Base+0x18c>
   2edd8:	ldr	r2, [pc, #180]	; 2ee94 <__flatcc_fb_init_parser@@Base+0x2e4>
   2eddc:	mov	r3, #0
   2ede0:	mov	r0, r5
   2ede4:	str	r3, [sp, #4]
   2ede8:	str	r3, [sp]
   2edec:	mov	r1, r3
   2edf0:	add	r2, pc, r2
   2edf4:	bl	2d4ec <__flatcc_error_report@@Base>
   2edf8:	mvn	r0, #0
   2edfc:	b	2ed5c <__flatcc_fb_init_parser@@Base+0x1ac>
   2ee00:	ldr	r2, [pc, #144]	; 2ee98 <__flatcc_fb_init_parser@@Base+0x2e8>
   2ee04:	mov	r3, #0
   2ee08:	mov	r0, r5
   2ee0c:	str	r3, [sp, #4]
   2ee10:	str	r3, [sp]
   2ee14:	mov	r1, r3
   2ee18:	add	r2, pc, r2
   2ee1c:	bl	2d4ec <__flatcc_error_report@@Base>
   2ee20:	mvn	r0, #0
   2ee24:	b	2ed5c <__flatcc_fb_init_parser@@Base+0x1ac>
   2ee28:	mov	r1, #1
   2ee2c:	mov	r0, #65536	; 0x10000
   2ee30:	bl	13e98 <calloc@plt>
   2ee34:	cmp	r0, #0
   2ee38:	beq	2ee80 <__flatcc_fb_init_parser@@Base+0x2d0>
   2ee3c:	ldr	r2, [r5, #48]	; 0x30
   2ee40:	add	r3, r0, #65536	; 0x10000
   2ee44:	add	r4, r0, #16
   2ee48:	add	ip, r0, #48	; 0x30
   2ee4c:	str	r2, [r0]
   2ee50:	str	r0, [r5, #48]	; 0x30
   2ee54:	str	r3, [r5, #44]	; 0x2c
   2ee58:	b	2eda8 <__flatcc_fb_init_parser@@Base+0x1f8>
   2ee5c:	ldr	r3, [pc, #56]	; 2ee9c <__flatcc_fb_init_parser@@Base+0x2ec>
   2ee60:	ldr	r1, [pc, #56]	; 2eea0 <__flatcc_fb_init_parser@@Base+0x2f0>
   2ee64:	ldr	r0, [pc, #56]	; 2eea4 <__flatcc_fb_init_parser@@Base+0x2f4>
   2ee68:	add	r3, pc, r3
   2ee6c:	ldr	r2, [pc, #52]	; 2eea8 <__flatcc_fb_init_parser@@Base+0x2f8>
   2ee70:	add	r3, r3, #16
   2ee74:	add	r1, pc, r1
   2ee78:	add	r0, pc, r0
   2ee7c:	bl	14030 <__assert_fail@plt>
   2ee80:	bl	140b0 <__assert_fail@plt+0x80>
   2ee84:	andeq	fp, r3, r8, lsl r4
   2ee88:	strdeq	sl, [r1], -r0
   2ee8c:	andeq	r0, r0, ip, lsr #1
   2ee90:	andeq	r7, r2, r8, lsr #28
   2ee94:	andeq	r7, r2, ip, asr #27
   2ee98:	ldrdeq	r7, [r2], -ip
   2ee9c:	andeq	r7, r2, r0, lsr #13
   2eea0:			; <UNDEFINED> instruction: 0x000277bc
   2eea4:			; <UNDEFINED> instruction: 0x00027db8
   2eea8:	andeq	r0, r0, r3, lsr r5

0002eeac <__flatcc_fb_parse@@Base>:
   2eeac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2eeb0:	mov	sl, r0
   2eeb4:	mov	r4, r1
   2eeb8:	ldr	r0, [pc, #4060]	; 2fe9c <__flatcc_fb_parse@@Base+0xff0>
   2eebc:	ldr	ip, [pc, #4060]	; 2fea0 <__flatcc_fb_parse@@Base+0xff4>
   2eec0:	ldr	fp, [pc, #4060]	; 2fea4 <__flatcc_fb_parse@@Base+0xff8>
   2eec4:	cmp	r3, #0
   2eec8:	mov	r1, #1
   2eecc:	mov	r3, #9
   2eed0:	ldr	r5, [pc, #4048]	; 2fea8 <__flatcc_fb_parse@@Base+0xffc>
   2eed4:	sub	sp, sp, #52	; 0x34
   2eed8:	add	r6, r4, r2
   2eedc:	add	r0, pc, r0
   2eee0:	add	ip, pc, ip
   2eee4:	str	r1, [sl, #64]	; 0x40
   2eee8:	str	r3, [sl, #84]	; 0x54
   2eeec:	mov	r1, #4
   2eef0:	mov	r3, #0
   2eef4:	mov	lr, #5
   2eef8:	str	r4, [sl, #60]	; 0x3c
   2eefc:	str	r0, [sl, #68]	; 0x44
   2ef00:	str	r1, [sl, #72]	; 0x48
   2ef04:	str	r5, [sl, #104]	; 0x68
   2ef08:	str	ip, [sl, #88]	; 0x58
   2ef0c:	str	lr, [sl, #92]	; 0x5c
   2ef10:	str	r3, [sl, #80]	; 0x50
   2ef14:	str	r3, [sl, #76]	; 0x4c
   2ef18:	str	r3, [sl, #100]	; 0x64
   2ef1c:	str	r3, [sl, #96]	; 0x60
   2ef20:	strne	r4, [sl, #16]
   2ef24:	cmp	r6, r4
   2ef28:	beq	3150c <__flatcc_fb_parse@@Base+0x2660>
   2ef2c:	ldrb	r1, [r4]
   2ef30:	cmp	r1, #126	; 0x7e
   2ef34:	addls	pc, pc, r1, lsl #2
   2ef38:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2ef3c:	b	2f4c8 <__flatcc_fb_parse@@Base+0x61c>
   2ef40:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2ef44:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2ef48:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2ef4c:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2ef50:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2ef54:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2ef58:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2ef5c:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2ef60:	b	2f724 <__flatcc_fb_parse@@Base+0x878>
   2ef64:	b	2f774 <__flatcc_fb_parse@@Base+0x8c8>
   2ef68:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2ef6c:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2ef70:	b	2f6f4 <__flatcc_fb_parse@@Base+0x848>
   2ef74:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2ef78:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2ef7c:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2ef80:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2ef84:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2ef88:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2ef8c:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2ef90:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2ef94:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2ef98:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2ef9c:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2efa0:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2efa4:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2efa8:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2efac:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2efb0:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2efb4:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2efb8:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2efbc:	b	2f724 <__flatcc_fb_parse@@Base+0x878>
   2efc0:	b	2f794 <__flatcc_fb_parse@@Base+0x8e8>
   2efc4:	b	2f138 <__flatcc_fb_parse@@Base+0x28c>
   2efc8:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2efcc:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2efd0:	b	2f794 <__flatcc_fb_parse@@Base+0x8e8>
   2efd4:	b	2f2b0 <__flatcc_fb_parse@@Base+0x404>
   2efd8:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2efdc:	b	2f2ec <__flatcc_fb_parse@@Base+0x440>
   2efe0:	b	2f2ec <__flatcc_fb_parse@@Base+0x440>
   2efe4:	b	2f304 <__flatcc_fb_parse@@Base+0x458>
   2efe8:	b	2f344 <__flatcc_fb_parse@@Base+0x498>
   2efec:	b	2f2ec <__flatcc_fb_parse@@Base+0x440>
   2eff0:	b	2f380 <__flatcc_fb_parse@@Base+0x4d4>
   2eff4:	b	2f3c0 <__flatcc_fb_parse@@Base+0x514>
   2eff8:	b	2f434 <__flatcc_fb_parse@@Base+0x588>
   2effc:	b	2f920 <__flatcc_fb_parse@@Base+0xa74>
   2f000:	b	2f7c0 <__flatcc_fb_parse@@Base+0x914>
   2f004:	b	2f7c0 <__flatcc_fb_parse@@Base+0x914>
   2f008:	b	2f7c0 <__flatcc_fb_parse@@Base+0x914>
   2f00c:	b	2f7c0 <__flatcc_fb_parse@@Base+0x914>
   2f010:	b	2f7c0 <__flatcc_fb_parse@@Base+0x914>
   2f014:	b	2f7c0 <__flatcc_fb_parse@@Base+0x914>
   2f018:	b	2f7c0 <__flatcc_fb_parse@@Base+0x914>
   2f01c:	b	2f7c0 <__flatcc_fb_parse@@Base+0x914>
   2f020:	b	2f7c0 <__flatcc_fb_parse@@Base+0x914>
   2f024:	b	2f7ec <__flatcc_fb_parse@@Base+0x940>
   2f028:	b	2f2ec <__flatcc_fb_parse@@Base+0x440>
   2f02c:	b	2f608 <__flatcc_fb_parse@@Base+0x75c>
   2f030:	b	2f648 <__flatcc_fb_parse@@Base+0x79c>
   2f034:	b	2f684 <__flatcc_fb_parse@@Base+0x7d8>
   2f038:	b	2f2ec <__flatcc_fb_parse@@Base+0x440>
   2f03c:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2f040:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f044:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f048:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f04c:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f050:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f054:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f058:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f05c:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f060:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f064:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f068:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f06c:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f070:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f074:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f078:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f07c:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f080:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f084:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f088:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f08c:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f090:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f094:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f098:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f09c:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f0a0:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f0a4:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f0a8:	b	2f2ec <__flatcc_fb_parse@@Base+0x440>
   2f0ac:	b	2f2ec <__flatcc_fb_parse@@Base+0x440>
   2f0b0:	b	2f2ec <__flatcc_fb_parse@@Base+0x440>
   2f0b4:	b	2f794 <__flatcc_fb_parse@@Base+0x8e8>
   2f0b8:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f0bc:	b	2f988 <__flatcc_fb_parse@@Base+0xadc>
   2f0c0:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f0c4:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f0c8:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f0cc:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f0d0:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f0d4:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f0d8:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f0dc:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f0e0:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f0e4:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f0e8:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f0ec:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f0f0:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f0f4:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f0f8:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f0fc:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f100:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f104:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f108:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f10c:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f110:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f114:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f118:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f11c:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f120:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f124:	b	2f828 <__flatcc_fb_parse@@Base+0x97c>
   2f128:	b	2f2ec <__flatcc_fb_parse@@Base+0x440>
   2f12c:	b	2f474 <__flatcc_fb_parse@@Base+0x5c8>
   2f130:	b	2f2ec <__flatcc_fb_parse@@Base+0x440>
   2f134:	b	2f794 <__flatcc_fb_parse@@Base+0x8e8>
   2f138:	add	r5, r4, #1
   2f13c:	mov	r2, r4
   2f140:	mov	r3, r5
   2f144:	mov	r1, #19
   2f148:	mov	r0, sl
   2f14c:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   2f150:	mov	r7, r5
   2f154:	mov	r9, #20
   2f158:	mov	r8, #6
   2f15c:	sub	r5, r5, #1
   2f160:	b	2f184 <__flatcc_fb_parse@@Base+0x2d8>
   2f164:	ldrb	r3, [r5, #1]
   2f168:	cmp	r3, #34	; 0x22
   2f16c:	cmpne	r3, #92	; 0x5c
   2f170:	beq	2f194 <__flatcc_fb_parse@@Base+0x2e8>
   2f174:	cmp	r3, #127	; 0x7f
   2f178:	cmpne	r3, #31
   2f17c:	bls	2f194 <__flatcc_fb_parse@@Base+0x2e8>
   2f180:	mov	r5, r4
   2f184:	add	r4, r5, #1
   2f188:	cmp	r6, r4
   2f18c:	bne	2f164 <__flatcc_fb_parse@@Base+0x2b8>
   2f190:	mov	r4, r6
   2f194:	cmp	r7, r4
   2f198:	beq	2f1b0 <__flatcc_fb_parse@@Base+0x304>
   2f19c:	mov	r2, r7
   2f1a0:	mov	r3, r4
   2f1a4:	mov	r1, r9
   2f1a8:	mov	r0, sl
   2f1ac:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   2f1b0:	ldrb	r3, [r4]
   2f1b4:	cmp	r3, #34	; 0x22
   2f1b8:	beq	30b80 <__flatcc_fb_parse@@Base+0x1cd4>
   2f1bc:	cmp	r3, #0
   2f1c0:	cmpne	r6, r4
   2f1c4:	beq	2f298 <__flatcc_fb_parse@@Base+0x3ec>
   2f1c8:	cmp	r3, #92	; 0x5c
   2f1cc:	beq	2f1fc <__flatcc_fb_parse@@Base+0x350>
   2f1d0:	cmp	r3, #13
   2f1d4:	cmpne	r3, #10
   2f1d8:	beq	2f298 <__flatcc_fb_parse@@Base+0x3ec>
   2f1dc:	add	r5, r4, #1
   2f1e0:	mov	r2, r4
   2f1e4:	mov	r3, r5
   2f1e8:	mov	r1, r8
   2f1ec:	mov	r0, sl
   2f1f0:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   2f1f4:	mov	r7, r5
   2f1f8:	b	2f15c <__flatcc_fb_parse@@Base+0x2b0>
   2f1fc:	add	r7, r5, #2
   2f200:	mov	r3, r7
   2f204:	mov	r2, r4
   2f208:	mov	r1, #21
   2f20c:	mov	r0, sl
   2f210:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   2f214:	cmp	r6, r7
   2f218:	beq	31504 <__flatcc_fb_parse@@Base+0x2658>
   2f21c:	ldrb	r3, [r4, #1]
   2f220:	cmp	r3, #0
   2f224:	beq	2f294 <__flatcc_fb_parse@@Base+0x3e8>
   2f228:	cmp	r3, #34	; 0x22
   2f22c:	cmpne	r3, #92	; 0x5c
   2f230:	addeq	r5, r4, #2
   2f234:	beq	2f15c <__flatcc_fb_parse@@Base+0x2b0>
   2f238:	cmp	r3, #10
   2f23c:	beq	2f9c0 <__flatcc_fb_parse@@Base+0xb14>
   2f240:	cmp	r3, #13
   2f244:	movne	r4, r7
   2f248:	bne	2f1dc <__flatcc_fb_parse@@Base+0x330>
   2f24c:	add	r5, r4, #2
   2f250:	cmp	r6, r5
   2f254:	beq	2f268 <__flatcc_fb_parse@@Base+0x3bc>
   2f258:	ldrb	r3, [r4, #2]
   2f25c:	cmp	r3, #10
   2f260:	bne	2f268 <__flatcc_fb_parse@@Base+0x3bc>
   2f264:	add	r5, r4, #3
   2f268:	ldr	r3, [sl, #64]	; 0x40
   2f26c:	mov	r2, r7
   2f270:	add	r3, r3, #1
   2f274:	str	r3, [sl, #64]	; 0x40
   2f278:	str	r5, [sl, #60]	; 0x3c
   2f27c:	mov	r3, r5
   2f280:	mov	r1, #18
   2f284:	mov	r0, sl
   2f288:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   2f28c:	mov	r7, r5
   2f290:	b	2f15c <__flatcc_fb_parse@@Base+0x2b0>
   2f294:	mov	r4, r7
   2f298:	mov	r3, r4
   2f29c:	mov	r2, r4
   2f2a0:	mov	r1, #23
   2f2a4:	mov	r0, sl
   2f2a8:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   2f2ac:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   2f2b0:	add	r5, r4, #1
   2f2b4:	cmp	r6, r5
   2f2b8:	beq	2f9f4 <__flatcc_fb_parse@@Base+0xb48>
   2f2bc:	ldrb	r3, [r4, #1]
   2f2c0:	cmp	r3, #38	; 0x26
   2f2c4:	beq	2f9dc <__flatcc_fb_parse@@Base+0xb30>
   2f2c8:	cmp	r3, #61	; 0x3d
   2f2cc:	bne	2f9f4 <__flatcc_fb_parse@@Base+0xb48>
   2f2d0:	add	r3, r4, #2
   2f2d4:	mov	r2, r4
   2f2d8:	ldr	r1, [pc, #3020]	; 2feac <__flatcc_fb_parse@@Base+0x1000>
   2f2dc:	mov	r0, sl
   2f2e0:	mov	r4, r3
   2f2e4:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   2f2e8:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   2f2ec:	add	r3, r4, #1
   2f2f0:	mov	r2, r4
   2f2f4:	mov	r0, sl
   2f2f8:	mov	r4, r3
   2f2fc:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   2f300:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   2f304:	add	r5, r4, #1
   2f308:	cmp	r6, r5
   2f30c:	beq	30d8c <__flatcc_fb_parse@@Base+0x1ee0>
   2f310:	ldrb	r3, [r4, #1]
   2f314:	cmp	r3, #42	; 0x2a
   2f318:	beq	310e8 <__flatcc_fb_parse@@Base+0x223c>
   2f31c:	cmp	r3, #61	; 0x3d
   2f320:	bne	30d8c <__flatcc_fb_parse@@Base+0x1ee0>
   2f324:	mov	r2, r4
   2f328:	ldr	r1, [pc, #2944]	; 2feb0 <__flatcc_fb_parse@@Base+0x1004>
   2f32c:	mov	r3, r5
   2f330:	mov	r0, sl
   2f334:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   2f338:	ldrb	r1, [r4, #1]
   2f33c:	mov	r4, r5
   2f340:	b	2ef30 <__flatcc_fb_parse@@Base+0x84>
   2f344:	add	r3, r4, #1
   2f348:	cmp	r6, r3
   2f34c:	beq	30d74 <__flatcc_fb_parse@@Base+0x1ec8>
   2f350:	ldrb	r2, [r4, #1]
   2f354:	cmp	r2, #43	; 0x2b
   2f358:	beq	3109c <__flatcc_fb_parse@@Base+0x21f0>
   2f35c:	cmp	r2, #61	; 0x3d
   2f360:	bne	30d74 <__flatcc_fb_parse@@Base+0x1ec8>
   2f364:	add	r3, r4, #2
   2f368:	mov	r2, r4
   2f36c:	ldr	r1, [pc, #2880]	; 2feb4 <__flatcc_fb_parse@@Base+0x1008>
   2f370:	mov	r0, sl
   2f374:	mov	r4, r3
   2f378:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   2f37c:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   2f380:	add	r3, r4, #1
   2f384:	cmp	r6, r3
   2f388:	beq	2f3a8 <__flatcc_fb_parse@@Base+0x4fc>
   2f38c:	ldrb	r2, [r4, #1]
   2f390:	cmp	r2, #61	; 0x3d
   2f394:	beq	31344 <__flatcc_fb_parse@@Base+0x2498>
   2f398:	cmp	r2, #62	; 0x3e
   2f39c:	beq	311e0 <__flatcc_fb_parse@@Base+0x2334>
   2f3a0:	cmp	r2, #45	; 0x2d
   2f3a4:	beq	30f8c <__flatcc_fb_parse@@Base+0x20e0>
   2f3a8:	mov	r2, r4
   2f3ac:	mov	r1, #45	; 0x2d
   2f3b0:	mov	r0, sl
   2f3b4:	mov	r4, r3
   2f3b8:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   2f3bc:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   2f3c0:	add	r3, r4, #1
   2f3c4:	cmp	r6, r3
   2f3c8:	beq	30e68 <__flatcc_fb_parse@@Base+0x1fbc>
   2f3cc:	ldrb	r2, [r4, #1]
   2f3d0:	cmp	r2, #46	; 0x2e
   2f3d4:	beq	31108 <__flatcc_fb_parse@@Base+0x225c>
   2f3d8:	bcc	30e68 <__flatcc_fb_parse@@Base+0x1fbc>
   2f3dc:	sub	r2, r2, #48	; 0x30
   2f3e0:	cmp	r2, #9
   2f3e4:	movls	ip, r4
   2f3e8:	bhi	30e68 <__flatcc_fb_parse@@Base+0x1fbc>
   2f3ec:	add	r2, r3, #1
   2f3f0:	b	2f408 <__flatcc_fb_parse@@Base+0x55c>
   2f3f4:	ldrb	r1, [r2]
   2f3f8:	add	r2, r2, #1
   2f3fc:	sub	r0, r1, #48	; 0x30
   2f400:	cmp	r0, #9
   2f404:	bhi	30cd0 <__flatcc_fb_parse@@Base+0x1e24>
   2f408:	cmp	r6, r2
   2f40c:	mov	r3, r2
   2f410:	bne	2f3f4 <__flatcc_fb_parse@@Base+0x548>
   2f414:	cmp	r3, ip
   2f418:	beq	31170 <__flatcc_fb_parse@@Base+0x22c4>
   2f41c:	mov	r2, r4
   2f420:	mov	r1, #11
   2f424:	mov	r0, sl
   2f428:	mov	r4, r3
   2f42c:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   2f430:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   2f434:	add	r3, r4, #1
   2f438:	cmp	r6, r3
   2f43c:	beq	2f45c <__flatcc_fb_parse@@Base+0x5b0>
   2f440:	ldrb	r2, [r4, #1]
   2f444:	cmp	r2, #47	; 0x2f
   2f448:	beq	31218 <__flatcc_fb_parse@@Base+0x236c>
   2f44c:	cmp	r2, #61	; 0x3d
   2f450:	beq	311fc <__flatcc_fb_parse@@Base+0x2350>
   2f454:	cmp	r2, #42	; 0x2a
   2f458:	beq	30e80 <__flatcc_fb_parse@@Base+0x1fd4>
   2f45c:	mov	r2, r4
   2f460:	mov	r1, #47	; 0x2f
   2f464:	mov	r0, sl
   2f468:	mov	r4, r3
   2f46c:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   2f470:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   2f474:	add	r5, r4, #1
   2f478:	cmp	r6, r5
   2f47c:	beq	2f4ac <__flatcc_fb_parse@@Base+0x600>
   2f480:	ldrb	r3, [r4, #1]
   2f484:	cmp	r3, #61	; 0x3d
   2f488:	beq	31154 <__flatcc_fb_parse@@Base+0x22a8>
   2f48c:	cmp	r3, #124	; 0x7c
   2f490:	bne	2f4ac <__flatcc_fb_parse@@Base+0x600>
   2f494:	add	r5, r4, #2
   2f498:	mov	r3, r5
   2f49c:	mov	r2, r4
   2f4a0:	ldr	r1, [pc, #2576]	; 2feb8 <__flatcc_fb_parse@@Base+0x100c>
   2f4a4:	mov	r0, sl
   2f4a8:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   2f4ac:	mov	r2, r4
   2f4b0:	mov	r3, r5
   2f4b4:	mov	r1, #124	; 0x7c
   2f4b8:	mov	r0, sl
   2f4bc:	mov	r4, r5
   2f4c0:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   2f4c4:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   2f4c8:	mov	r3, r4
   2f4cc:	mov	r2, r4
   2f4d0:	mov	r1, #0
   2f4d4:	mov	r0, sl
   2f4d8:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   2f4dc:	ldr	r3, [sl, #40]	; 0x28
   2f4e0:	ldr	r6, [sl, #20]
   2f4e4:	str	r3, [sl, #24]
   2f4e8:	str	r6, [sl, #40]	; 0x28
   2f4ec:	ldr	r0, [sl, #216]	; 0xd8
   2f4f0:	bl	13f34 <malloc@plt>
   2f4f4:	cmp	r0, #0
   2f4f8:	str	r0, [sl, #112]	; 0x70
   2f4fc:	beq	31b0c <__flatcc_fb_parse@@Base+0x2c60>
   2f500:	ldr	r2, [r6, #16]
   2f504:	cmn	r2, #964	; 0x3c4
   2f508:	beq	30a9c <__flatcc_fb_parse@@Base+0x1bf0>
   2f50c:	ldr	r3, [pc, #2472]	; 2febc <__flatcc_fb_parse@@Base+0x1010>
   2f510:	ldr	r8, [pc, #2472]	; 2fec0 <__flatcc_fb_parse@@Base+0x1014>
   2f514:	add	r3, pc, r3
   2f518:	ldr	r7, [pc, #2468]	; 2fec4 <__flatcc_fb_parse@@Base+0x1018>
   2f51c:	mov	r1, r3
   2f520:	add	r8, pc, r8
   2f524:	mov	r9, r8
   2f528:	ldr	r5, [pc, #2456]	; 2fec8 <__flatcc_fb_parse@@Base+0x101c>
   2f52c:	add	r7, pc, r7
   2f530:	mov	r4, #0
   2f534:	mov	fp, #59	; 0x3b
   2f538:	mov	r3, r6
   2f53c:	mov	r8, r1
   2f540:	b	2f580 <__flatcc_fb_parse@@Base+0x6d4>
   2f544:	ldr	r0, [sl, #352]	; 0x160
   2f548:	add	r1, r3, #8
   2f54c:	str	r2, [sl, #52]	; 0x34
   2f550:	str	r0, [r3]
   2f554:	str	r3, [sl, #352]	; 0x160
   2f558:	mov	r0, sl
   2f55c:	bl	2dbbc <__flatcc_error_report@@Base+0x6d0>
   2f560:	ldr	r1, [sl, #40]	; 0x28
   2f564:	ldr	r3, [r1, #16]
   2f568:	cmp	r3, #59	; 0x3b
   2f56c:	bne	2fab4 <__flatcc_fb_parse@@Base+0xc08>
   2f570:	mov	r0, sl
   2f574:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2f578:	ldr	r3, [sl, #40]	; 0x28
   2f57c:	ldr	r2, [r3, #16]
   2f580:	cmp	r2, r5
   2f584:	bne	2fad0 <__flatcc_fb_parse@@Base+0xc24>
   2f588:	mov	r0, sl
   2f58c:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2f590:	ldr	r3, [sl, #140]	; 0x8c
   2f594:	cmp	r3, #0
   2f598:	bne	2fa58 <__flatcc_fb_parse@@Base+0xbac>
   2f59c:	ldr	r0, [sl, #108]	; 0x6c
   2f5a0:	cmp	r0, #9
   2f5a4:	bgt	2fa80 <__flatcc_fb_parse@@Base+0xbd4>
   2f5a8:	ldr	r1, [sl, #40]	; 0x28
   2f5ac:	ldr	r3, [r1, #16]
   2f5b0:	cmp	r3, #19
   2f5b4:	bne	2fa8c <__flatcc_fb_parse@@Base+0xbe0>
   2f5b8:	mov	r0, sl
   2f5bc:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2f5c0:	ldr	r3, [sl, #52]	; 0x34
   2f5c4:	ldr	r1, [sl, #44]	; 0x2c
   2f5c8:	add	r2, r3, #32
   2f5cc:	cmp	r2, r1
   2f5d0:	bls	2f544 <__flatcc_fb_parse@@Base+0x698>
   2f5d4:	mov	r1, #1
   2f5d8:	mov	r0, #65536	; 0x10000
   2f5dc:	bl	13e98 <calloc@plt>
   2f5e0:	cmp	r0, #0
   2f5e4:	beq	31b0c <__flatcc_fb_parse@@Base+0x2c60>
   2f5e8:	ldr	r1, [sl, #48]	; 0x30
   2f5ec:	add	r3, r0, #16
   2f5f0:	str	r1, [r0]
   2f5f4:	add	r1, r0, #65536	; 0x10000
   2f5f8:	add	r2, r0, #48	; 0x30
   2f5fc:	str	r0, [sl, #48]	; 0x30
   2f600:	str	r1, [sl, #44]	; 0x2c
   2f604:	b	2f544 <__flatcc_fb_parse@@Base+0x698>
   2f608:	add	r3, r4, #1
   2f60c:	cmp	r6, r3
   2f610:	beq	2f630 <__flatcc_fb_parse@@Base+0x784>
   2f614:	ldrb	r2, [r4, #1]
   2f618:	cmp	r2, #60	; 0x3c
   2f61c:	beq	311a4 <__flatcc_fb_parse@@Base+0x22f8>
   2f620:	cmp	r2, #61	; 0x3d
   2f624:	beq	31188 <__flatcc_fb_parse@@Base+0x22dc>
   2f628:	cmp	r2, #45	; 0x2d
   2f62c:	beq	30fa8 <__flatcc_fb_parse@@Base+0x20fc>
   2f630:	mov	r2, r4
   2f634:	mov	r1, #60	; 0x3c
   2f638:	mov	r0, sl
   2f63c:	mov	r4, r3
   2f640:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   2f644:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   2f648:	add	r5, r4, #1
   2f64c:	cmp	r6, r5
   2f650:	beq	2fa3c <__flatcc_fb_parse@@Base+0xb90>
   2f654:	ldrb	r3, [r4, #1]
   2f658:	cmp	r3, #61	; 0x3d
   2f65c:	beq	2fa10 <__flatcc_fb_parse@@Base+0xb64>
   2f660:	cmp	r3, #62	; 0x3e
   2f664:	bne	2fa3c <__flatcc_fb_parse@@Base+0xb90>
   2f668:	add	r3, r4, #2
   2f66c:	mov	r2, r4
   2f670:	ldr	r1, [pc, #2132]	; 2fecc <__flatcc_fb_parse@@Base+0x1020>
   2f674:	mov	r0, sl
   2f678:	mov	r4, r3
   2f67c:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   2f680:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   2f684:	add	r3, r4, #1
   2f688:	cmp	r6, r3
   2f68c:	beq	30d5c <__flatcc_fb_parse@@Base+0x1eb0>
   2f690:	ldrb	r2, [r4, #1]
   2f694:	cmp	r2, #61	; 0x3d
   2f698:	beq	31138 <__flatcc_fb_parse@@Base+0x228c>
   2f69c:	cmp	r2, #62	; 0x3e
   2f6a0:	bne	30d5c <__flatcc_fb_parse@@Base+0x1eb0>
   2f6a4:	add	r3, r4, #2
   2f6a8:	cmp	r6, r3
   2f6ac:	beq	313f4 <__flatcc_fb_parse@@Base+0x2548>
   2f6b0:	ldrb	r2, [r4, #2]
   2f6b4:	cmp	r2, #61	; 0x3d
   2f6b8:	beq	3140c <__flatcc_fb_parse@@Base+0x2560>
   2f6bc:	cmp	r2, #62	; 0x3e
   2f6c0:	bne	313f4 <__flatcc_fb_parse@@Base+0x2548>
   2f6c4:	add	r3, r4, #3
   2f6c8:	cmp	r6, r3
   2f6cc:	beq	2f6dc <__flatcc_fb_parse@@Base+0x830>
   2f6d0:	ldrb	r2, [r4, #3]
   2f6d4:	cmp	r2, #61	; 0x3d
   2f6d8:	beq	31a90 <__flatcc_fb_parse@@Base+0x2be4>
   2f6dc:	mov	r2, r4
   2f6e0:	ldr	r1, [pc, #2024]	; 2fed0 <__flatcc_fb_parse@@Base+0x1024>
   2f6e4:	mov	r0, sl
   2f6e8:	mov	r4, r3
   2f6ec:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   2f6f0:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   2f6f4:	add	r3, r4, #1
   2f6f8:	cmp	r6, r3
   2f6fc:	beq	2f70c <__flatcc_fb_parse@@Base+0x860>
   2f700:	ldrb	r2, [r4, #1]
   2f704:	cmp	r2, #10
   2f708:	beq	2f78c <__flatcc_fb_parse@@Base+0x8e0>
   2f70c:	ldr	r2, [sl, #64]	; 0x40
   2f710:	str	r3, [sl, #60]	; 0x3c
   2f714:	add	r2, r2, #1
   2f718:	mov	r4, r3
   2f71c:	str	r2, [sl, #64]	; 0x40
   2f720:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   2f724:	add	r3, r4, #1
   2f728:	b	2f73c <__flatcc_fb_parse@@Base+0x890>
   2f72c:	ldrb	r1, [r3], #1
   2f730:	cmp	r1, #9
   2f734:	cmpne	r1, #32
   2f738:	bne	30cc8 <__flatcc_fb_parse@@Base+0x1e1c>
   2f73c:	cmp	r6, r3
   2f740:	mov	r7, r3
   2f744:	bne	2f72c <__flatcc_fb_parse@@Base+0x880>
   2f748:	cmp	r6, r7
   2f74c:	beq	2f75c <__flatcc_fb_parse@@Base+0x8b0>
   2f750:	ldrb	r1, [r7]
   2f754:	cmp	r1, #0
   2f758:	beq	30c2c <__flatcc_fb_parse@@Base+0x1d80>
   2f75c:	mov	r3, r7
   2f760:	mov	r2, r7
   2f764:	mov	r1, #0
   2f768:	mov	r0, sl
   2f76c:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   2f770:	b	2f4dc <__flatcc_fb_parse@@Base+0x630>
   2f774:	add	r3, r4, #1
   2f778:	cmp	r6, r3
   2f77c:	beq	2f70c <__flatcc_fb_parse@@Base+0x860>
   2f780:	ldrb	r2, [r4, #1]
   2f784:	cmp	r2, #13
   2f788:	bne	2f70c <__flatcc_fb_parse@@Base+0x860>
   2f78c:	add	r3, r4, #2
   2f790:	b	2f70c <__flatcc_fb_parse@@Base+0x860>
   2f794:	add	r3, r4, #1
   2f798:	cmp	r6, r3
   2f79c:	beq	2f7ac <__flatcc_fb_parse@@Base+0x900>
   2f7a0:	ldrb	r2, [r4, #1]
   2f7a4:	cmp	r2, #61	; 0x3d
   2f7a8:	beq	313d8 <__flatcc_fb_parse@@Base+0x252c>
   2f7ac:	mov	r2, r4
   2f7b0:	mov	r0, sl
   2f7b4:	mov	r4, r3
   2f7b8:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   2f7bc:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   2f7c0:	add	r2, r4, #1
   2f7c4:	b	2f7dc <__flatcc_fb_parse@@Base+0x930>
   2f7c8:	ldrb	r1, [r2]
   2f7cc:	add	r2, r3, #1
   2f7d0:	sub	r0, r1, #48	; 0x30
   2f7d4:	cmp	r0, #9
   2f7d8:	bhi	30854 <__flatcc_fb_parse@@Base+0x19a8>
   2f7dc:	subs	r3, r2, #0
   2f7e0:	bne	2f7c8 <__flatcc_fb_parse@@Base+0x91c>
   2f7e4:	ldrb	r3, [r2]
   2f7e8:	udf	#0
   2f7ec:	add	r3, r4, #1
   2f7f0:	cmp	r6, r3
   2f7f4:	beq	30d44 <__flatcc_fb_parse@@Base+0x1e98>
   2f7f8:	ldrb	r2, [r4, #1]
   2f7fc:	cmp	r2, #58	; 0x3a
   2f800:	beq	310b8 <__flatcc_fb_parse@@Base+0x220c>
   2f804:	cmp	r2, #61	; 0x3d
   2f808:	bne	30d44 <__flatcc_fb_parse@@Base+0x1e98>
   2f80c:	add	r3, r4, #2
   2f810:	mov	r2, r4
   2f814:	ldr	r1, [pc, #1720]	; 2fed4 <__flatcc_fb_parse@@Base+0x1028>
   2f818:	mov	r0, sl
   2f81c:	mov	r4, r3
   2f820:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   2f824:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   2f828:	add	r5, r4, #1
   2f82c:	cmp	r6, r5
   2f830:	lsl	r0, r1, #8
   2f834:	beq	2f890 <__flatcc_fb_parse@@Base+0x9e4>
   2f838:	ldrb	r2, [r4, #1]
   2f83c:	ldr	r3, [pc, #1684]	; 2fed8 <__flatcc_fb_parse@@Base+0x102c>
   2f840:	add	r3, pc, r3
   2f844:	add	r3, r3, r2
   2f848:	ldrb	r3, [r3, #40]	; 0x28
   2f84c:	cmp	r3, #0
   2f850:	beq	2f890 <__flatcc_fb_parse@@Base+0x9e4>
   2f854:	ldr	r1, [pc, #1664]	; 2fedc <__flatcc_fb_parse@@Base+0x1030>
   2f858:	orr	r0, r0, r2, lsl #16
   2f85c:	add	r1, pc, r1
   2f860:	b	2f87c <__flatcc_fb_parse@@Base+0x9d0>
   2f864:	ldrb	r3, [r5, #1]
   2f868:	add	r3, r1, r3
   2f86c:	ldrb	r3, [r3, #40]	; 0x28
   2f870:	cmp	r3, #0
   2f874:	beq	3137c <__flatcc_fb_parse@@Base+0x24d0>
   2f878:	mov	r5, r2
   2f87c:	add	r2, r5, #1
   2f880:	cmp	r6, r2
   2f884:	bne	2f864 <__flatcc_fb_parse@@Base+0x9b8>
   2f888:	ldrb	r1, [r5]
   2f88c:	mov	r5, r6
   2f890:	sub	r3, r5, r4
   2f894:	orr	r2, r0, r1, lsl #24
   2f898:	uxtb	r3, r3
   2f89c:	add	r3, r3, #48	; 0x30
   2f8a0:	orr	r3, r3, r2
   2f8a4:	cmp	r3, fp
   2f8a8:	beq	316b0 <__flatcc_fb_parse@@Base+0x2804>
   2f8ac:	bhi	30c40 <__flatcc_fb_parse@@Base+0x1d94>
   2f8b0:	ldr	r2, [pc, #1576]	; 2fee0 <__flatcc_fb_parse@@Base+0x1034>
   2f8b4:	cmp	r3, r2
   2f8b8:	beq	31804 <__flatcc_fb_parse@@Base+0x2958>
   2f8bc:	bhi	30e04 <__flatcc_fb_parse@@Base+0x1f58>
   2f8c0:	add	r2, r2, #-67108863	; 0xfc000001
   2f8c4:	cmp	r3, r2
   2f8c8:	beq	31744 <__flatcc_fb_parse@@Base+0x2898>
   2f8cc:	bls	31470 <__flatcc_fb_parse@@Base+0x25c4>
   2f8d0:	ldr	r2, [pc, #1548]	; 2fee4 <__flatcc_fb_parse@@Base+0x1038>
   2f8d4:	cmp	r3, r2
   2f8d8:	beq	31974 <__flatcc_fb_parse@@Base+0x2ac8>
   2f8dc:	bls	31940 <__flatcc_fb_parse@@Base+0x2a94>
   2f8e0:	ldr	r2, [pc, #1536]	; 2fee8 <__flatcc_fb_parse@@Base+0x103c>
   2f8e4:	cmp	r3, r2
   2f8e8:	beq	31660 <__flatcc_fb_parse@@Base+0x27b4>
   2f8ec:	ldr	r2, [pc, #1528]	; 2feec <__flatcc_fb_parse@@Base+0x1040>
   2f8f0:	cmp	r3, r2
   2f8f4:	bne	31450 <__flatcc_fb_parse@@Base+0x25a4>
   2f8f8:	ldr	r0, [pc, #1520]	; 2fef0 <__flatcc_fb_parse@@Base+0x1044>
   2f8fc:	mov	r2, #5
   2f900:	mov	r1, r4
   2f904:	add	r0, pc, r0
   2f908:	bl	13eec <memcmp@plt>
   2f90c:	ldr	r3, [pc, #1504]	; 2fef4 <__flatcc_fb_parse@@Base+0x1048>
   2f910:	cmp	r0, #0
   2f914:	moveq	r0, r3
   2f918:	movne	r0, #9
   2f91c:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   2f920:	add	r2, r4, #1
   2f924:	cmp	r6, r2
   2f928:	beq	2f7dc <__flatcc_fb_parse@@Base+0x930>
   2f92c:	ldrb	r3, [r4, #1]
   2f930:	cmp	r3, #88	; 0x58
   2f934:	beq	2f940 <__flatcc_fb_parse@@Base+0xa94>
   2f938:	cmp	r3, #120	; 0x78
   2f93c:	bne	2f7dc <__flatcc_fb_parse@@Base+0x930>
   2f940:	add	r1, r4, #2
   2f944:	cmp	r1, r6
   2f948:	mov	r3, r1
   2f94c:	beq	2f970 <__flatcc_fb_parse@@Base+0xac4>
   2f950:	ldrb	r2, [r1], #1
   2f954:	sub	r0, r2, #48	; 0x30
   2f958:	cmp	r0, #9
   2f95c:	bls	2f944 <__flatcc_fb_parse@@Base+0xa98>
   2f960:	orr	r2, r2, #32
   2f964:	sub	r2, r2, #97	; 0x61
   2f968:	cmp	r2, #5
   2f96c:	bls	2f944 <__flatcc_fb_parse@@Base+0xa98>
   2f970:	mov	r2, r4
   2f974:	mov	r1, #14
   2f978:	mov	r0, sl
   2f97c:	mov	r4, r3
   2f980:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   2f984:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   2f988:	cmp	r1, #127	; 0x7f
   2f98c:	cmpne	r1, #31
   2f990:	add	r5, r4, #1
   2f994:	bhi	2f9a4 <__flatcc_fb_parse@@Base+0xaf8>
   2f998:	cmp	r1, #32
   2f99c:	cmpne	r1, #9
   2f9a0:	bne	31360 <__flatcc_fb_parse@@Base+0x24b4>
   2f9a4:	mov	r2, r4
   2f9a8:	mov	r3, r5
   2f9ac:	mov	r1, #8
   2f9b0:	mov	r0, sl
   2f9b4:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   2f9b8:	mov	r4, r5
   2f9bc:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   2f9c0:	add	r5, r4, #2
   2f9c4:	cmp	r6, r5
   2f9c8:	beq	2f268 <__flatcc_fb_parse@@Base+0x3bc>
   2f9cc:	ldrb	r3, [r4, #2]
   2f9d0:	cmp	r3, #13
   2f9d4:	bne	2f268 <__flatcc_fb_parse@@Base+0x3bc>
   2f9d8:	b	2f264 <__flatcc_fb_parse@@Base+0x3b8>
   2f9dc:	add	r5, r4, #2
   2f9e0:	mov	r3, r5
   2f9e4:	mov	r2, r4
   2f9e8:	ldr	r1, [pc, #1288]	; 2fef8 <__flatcc_fb_parse@@Base+0x104c>
   2f9ec:	mov	r0, sl
   2f9f0:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   2f9f4:	mov	r2, r4
   2f9f8:	mov	r3, r5
   2f9fc:	mov	r1, #38	; 0x26
   2fa00:	mov	r0, sl
   2fa04:	mov	r4, r5
   2fa08:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   2fa0c:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   2fa10:	add	r5, r4, #2
   2fa14:	cmp	r6, r5
   2fa18:	beq	2fa28 <__flatcc_fb_parse@@Base+0xb7c>
   2fa1c:	ldrb	r3, [r4, #2]
   2fa20:	cmp	r3, #61	; 0x3d
   2fa24:	beq	31728 <__flatcc_fb_parse@@Base+0x287c>
   2fa28:	mov	r3, r5
   2fa2c:	mov	r2, r4
   2fa30:	ldr	r1, [pc, #1220]	; 2fefc <__flatcc_fb_parse@@Base+0x1050>
   2fa34:	mov	r0, sl
   2fa38:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   2fa3c:	mov	r2, r4
   2fa40:	mov	r3, r5
   2fa44:	mov	r1, #61	; 0x3d
   2fa48:	mov	r0, sl
   2fa4c:	mov	r4, r5
   2fa50:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   2fa54:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   2fa58:	mov	r0, sl
   2fa5c:	str	r4, [sp, #4]
   2fa60:	str	r4, [sp]
   2fa64:	mov	r3, #0
   2fa68:	mov	r2, r7
   2fa6c:	mov	r1, r6
   2fa70:	bl	2d4ec <__flatcc_error_report@@Base>
   2fa74:	ldr	r0, [sl, #108]	; 0x6c
   2fa78:	cmp	r0, #9
   2fa7c:	ble	2f5a8 <__flatcc_fb_parse@@Base+0x6fc>
   2fa80:	ldr	r9, [sl, #40]	; 0x28
   2fa84:	ldr	r2, [r9, #16]
   2fa88:	b	2fad8 <__flatcc_fb_parse@@Base+0xc2c>
   2fa8c:	mov	r0, sl
   2fa90:	str	r4, [sp, #4]
   2fa94:	str	r4, [sp]
   2fa98:	mov	r3, #0
   2fa9c:	mov	r2, r8
   2faa0:	bl	2d4ec <__flatcc_error_report@@Base>
   2faa4:	mov	r1, fp
   2faa8:	mov	r0, sl
   2faac:	bl	2d3c0 <__flatcc_fb_default_error_out@@Base+0x258>
   2fab0:	b	2f5c0 <__flatcc_fb_parse@@Base+0x714>
   2fab4:	str	r4, [sp, #4]
   2fab8:	str	r4, [sp]
   2fabc:	mov	r3, #0
   2fac0:	mov	r2, r9
   2fac4:	mov	r0, sl
   2fac8:	bl	2d4ec <__flatcc_error_report@@Base>
   2facc:	b	2f578 <__flatcc_fb_parse@@Base+0x6cc>
   2fad0:	ldr	r0, [sl, #108]	; 0x6c
   2fad4:	mov	r9, r3
   2fad8:	ldr	r3, [pc, #1056]	; 2ff00 <__flatcc_fb_parse@@Base+0x1054>
   2fadc:	add	r3, pc, r3
   2fae0:	str	r3, [sp, #8]
   2fae4:	ldr	r3, [pc, #1048]	; 2ff04 <__flatcc_fb_parse@@Base+0x1058>
   2fae8:	add	r3, pc, r3
   2faec:	str	r3, [sp, #28]
   2faf0:	ldr	r3, [pc, #1040]	; 2ff08 <__flatcc_fb_parse@@Base+0x105c>
   2faf4:	add	r3, pc, r3
   2faf8:	str	r3, [sp, #12]
   2fafc:	ldr	r3, [pc, #1032]	; 2ff0c <__flatcc_fb_parse@@Base+0x1060>
   2fb00:	add	r3, pc, r3
   2fb04:	str	r3, [sp, #16]
   2fb08:	ldr	r3, [pc, #1024]	; 2ff10 <__flatcc_fb_parse@@Base+0x1064>
   2fb0c:	add	r3, pc, r3
   2fb10:	str	r3, [sp, #20]
   2fb14:	ldr	r3, [pc, #1016]	; 2ff14 <__flatcc_fb_parse@@Base+0x1068>
   2fb18:	add	r3, pc, r3
   2fb1c:	str	r3, [sp, #24]
   2fb20:	b	2fb88 <__flatcc_fb_parse@@Base+0xcdc>
   2fb24:	mvn	r2, #972	; 0x3cc
   2fb28:	cmp	r3, r2
   2fb2c:	beq	2fd30 <__flatcc_fb_parse@@Base+0xe84>
   2fb30:	cmn	r3, #972	; 0x3cc
   2fb34:	bge	2fcf4 <__flatcc_fb_parse@@Base+0xe48>
   2fb38:	sub	r2, r2, #10
   2fb3c:	cmp	r3, r2
   2fb40:	beq	3062c <__flatcc_fb_parse@@Base+0x1780>
   2fb44:	cmn	r3, #976	; 0x3d0
   2fb48:	beq	30394 <__flatcc_fb_parse@@Base+0x14e8>
   2fb4c:	mvn	r2, #996	; 0x3e4
   2fb50:	cmp	r3, r2
   2fb54:	beq	30174 <__flatcc_fb_parse@@Base+0x12c8>
   2fb58:	mov	r3, #0
   2fb5c:	str	r3, [sp, #4]
   2fb60:	str	r3, [sp]
   2fb64:	ldr	r2, [sp, #12]
   2fb68:	mov	r0, sl
   2fb6c:	bl	2d4ec <__flatcc_error_report@@Base>
   2fb70:	ldr	r3, [sl, #40]	; 0x28
   2fb74:	cmp	r9, r3
   2fb78:	beq	2fc78 <__flatcc_fb_parse@@Base+0xdcc>
   2fb7c:	ldr	r2, [r3, #16]
   2fb80:	ldr	r0, [sl, #108]	; 0x6c
   2fb84:	mov	r9, r3
   2fb88:	cmp	r2, #0
   2fb8c:	beq	308c0 <__flatcc_fb_parse@@Base+0x1a14>
   2fb90:	cmp	r0, #9
   2fb94:	bgt	2fca8 <__flatcc_fb_parse@@Base+0xdfc>
   2fb98:	ldr	r1, [sl, #40]	; 0x28
   2fb9c:	ldr	r3, [r1, #16]
   2fba0:	cmn	r3, #968	; 0x3c8
   2fba4:	beq	2fdb4 <__flatcc_fb_parse@@Base+0xf08>
   2fba8:	ble	2fb24 <__flatcc_fb_parse@@Base+0xc78>
   2fbac:	cmp	r3, #5
   2fbb0:	beq	30054 <__flatcc_fb_parse@@Base+0x11a8>
   2fbb4:	bgt	2fcb0 <__flatcc_fb_parse@@Base+0xe04>
   2fbb8:	ldr	r2, [pc, #856]	; 2ff18 <__flatcc_fb_parse@@Base+0x106c>
   2fbbc:	cmp	r3, r2
   2fbc0:	beq	2ffe8 <__flatcc_fb_parse@@Base+0x113c>
   2fbc4:	blt	2fe18 <__flatcc_fb_parse@@Base+0xf6c>
   2fbc8:	mvn	r2, #964	; 0x3c4
   2fbcc:	cmp	r3, r2
   2fbd0:	bne	2fb58 <__flatcc_fb_parse@@Base+0xcac>
   2fbd4:	add	r4, sl, #360	; 0x168
   2fbd8:	mov	r0, sl
   2fbdc:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2fbe0:	ldrh	r3, [r4, #8]
   2fbe4:	cmp	r3, #0
   2fbe8:	bne	30ab0 <__flatcc_fb_parse@@Base+0x1c04>
   2fbec:	ldr	r1, [sl, #40]	; 0x28
   2fbf0:	ldr	r3, [r1, #16]
   2fbf4:	cmp	r3, #19
   2fbf8:	bne	30adc <__flatcc_fb_parse@@Base+0x1c30>
   2fbfc:	mov	r0, sl
   2fc00:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2fc04:	mov	r1, r4
   2fc08:	mov	r0, sl
   2fc0c:	ldr	r5, [sl, #40]	; 0x28
   2fc10:	bl	2dbbc <__flatcc_error_report@@Base+0x6d0>
   2fc14:	ldr	r3, [sl, #360]	; 0x168
   2fc18:	cmp	r3, #0
   2fc1c:	beq	2fc54 <__flatcc_fb_parse@@Base+0xda8>
   2fc20:	ldr	r3, [sl, #364]	; 0x16c
   2fc24:	cmp	r3, #4
   2fc28:	beq	2fc54 <__flatcc_fb_parse@@Base+0xda8>
   2fc2c:	mov	r2, #1
   2fc30:	strh	r2, [r4, #8]
   2fc34:	ldr	r2, [pc, #736]	; 2ff1c <__flatcc_fb_parse@@Base+0x1070>
   2fc38:	mov	r3, #0
   2fc3c:	mov	r1, r5
   2fc40:	str	r3, [sp, #4]
   2fc44:	str	r3, [sp]
   2fc48:	add	r2, pc, r2
   2fc4c:	mov	r0, sl
   2fc50:	bl	2d4ec <__flatcc_error_report@@Base>
   2fc54:	ldr	r1, [sl, #40]	; 0x28
   2fc58:	ldr	r3, [r1, #16]
   2fc5c:	cmp	r3, #59	; 0x3b
   2fc60:	bne	30c0c <__flatcc_fb_parse@@Base+0x1d60>
   2fc64:	mov	r0, sl
   2fc68:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2fc6c:	ldr	r3, [sl, #40]	; 0x28
   2fc70:	cmp	r9, r3
   2fc74:	bne	2fb7c <__flatcc_fb_parse@@Base+0xcd0>
   2fc78:	ldr	r0, [sl, #108]	; 0x6c
   2fc7c:	cmp	r0, #0
   2fc80:	bne	2fca8 <__flatcc_fb_parse@@Base+0xdfc>
   2fc84:	ldr	r2, [pc, #660]	; 2ff20 <__flatcc_fb_parse@@Base+0x1074>
   2fc88:	str	r0, [sp, #4]
   2fc8c:	str	r0, [sp]
   2fc90:	mov	r3, r0
   2fc94:	mov	r1, r9
   2fc98:	mov	r0, sl
   2fc9c:	add	r2, pc, r2
   2fca0:	bl	2d4ec <__flatcc_error_report@@Base>
   2fca4:	ldr	r0, [sl, #108]	; 0x6c
   2fca8:	add	sp, sp, #52	; 0x34
   2fcac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2fcb0:	cmp	r3, #27
   2fcb4:	beq	306cc <__flatcc_fb_parse@@Base+0x1820>
   2fcb8:	cmp	r3, #123	; 0x7b
   2fcbc:	beq	306ac <__flatcc_fb_parse@@Base+0x1800>
   2fcc0:	cmp	r3, #7
   2fcc4:	bne	2fb58 <__flatcc_fb_parse@@Base+0xcac>
   2fcc8:	mov	r2, #1
   2fccc:	ldr	r3, [pc, #592]	; 2ff24 <__flatcc_fb_parse@@Base+0x1078>
   2fcd0:	str	r2, [sp, #4]
   2fcd4:	ldr	r2, [pc, #588]	; 2ff28 <__flatcc_fb_parse@@Base+0x107c>
   2fcd8:	add	r3, pc, r3
   2fcdc:	str	r3, [sp]
   2fce0:	add	r2, pc, r2
   2fce4:	mov	r3, #0
   2fce8:	mov	r0, sl
   2fcec:	bl	2d4ec <__flatcc_error_report@@Base>
   2fcf0:	b	2fb70 <__flatcc_fb_parse@@Base+0xcc4>
   2fcf4:	ldr	r2, [pc, #560]	; 2ff2c <__flatcc_fb_parse@@Base+0x1080>
   2fcf8:	cmp	r3, r2
   2fcfc:	beq	300cc <__flatcc_fb_parse@@Base+0x1220>
   2fd00:	bgt	30074 <__flatcc_fb_parse@@Base+0x11c8>
   2fd04:	sub	r2, r2, #1
   2fd08:	cmp	r3, r2
   2fd0c:	bne	2fb58 <__flatcc_fb_parse@@Base+0xcac>
   2fd10:	ldr	r2, [pc, #536]	; 2ff30 <__flatcc_fb_parse@@Base+0x1084>
   2fd14:	mov	r3, #0
   2fd18:	str	r3, [sp, #4]
   2fd1c:	str	r3, [sp]
   2fd20:	add	r2, pc, r2
   2fd24:	mov	r0, sl
   2fd28:	bl	2d4ec <__flatcc_error_report@@Base>
   2fd2c:	b	2fb70 <__flatcc_fb_parse@@Base+0xcc4>
   2fd30:	mov	r0, sl
   2fd34:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2fd38:	ldr	r1, [sl, #52]	; 0x34
   2fd3c:	ldr	r2, [sl, #44]	; 0x2c
   2fd40:	add	r3, r1, #128	; 0x80
   2fd44:	cmp	r3, r2
   2fd48:	bhi	30958 <__flatcc_fb_parse@@Base+0x1aac>
   2fd4c:	ldr	r2, [sl, #392]	; 0x188
   2fd50:	str	r3, [sl, #52]	; 0x34
   2fd54:	str	r2, [r1]
   2fd58:	ldr	r3, [sl, #36]	; 0x24
   2fd5c:	ldr	r2, [sl, #544]	; 0x220
   2fd60:	mov	r0, #1
   2fd64:	cmp	r3, #0
   2fd68:	strh	r0, [r1, #8]
   2fd6c:	str	r1, [sl, #392]	; 0x188
   2fd70:	str	r2, [r1, #12]
   2fd74:	beq	2fd98 <__flatcc_fb_parse@@Base+0xeec>
   2fd78:	mov	r0, #0
   2fd7c:	b	2fd84 <__flatcc_fb_parse@@Base+0xed8>
   2fd80:	mov	r3, r2
   2fd84:	ldr	r2, [r3]
   2fd88:	str	r0, [r3]
   2fd8c:	cmp	r2, #0
   2fd90:	mov	r0, r3
   2fd94:	bne	2fd80 <__flatcc_fb_parse@@Base+0xed4>
   2fd98:	mov	r2, #0
   2fd9c:	str	r3, [r1, #32]
   2fda0:	mov	r0, sl
   2fda4:	str	r2, [sl, #36]	; 0x24
   2fda8:	mvn	r2, #972	; 0x3cc
   2fdac:	bl	2e5f0 <__flatcc_error_report@@Base+0x1104>
   2fdb0:	b	2fb70 <__flatcc_fb_parse@@Base+0xcc4>
   2fdb4:	mov	r0, sl
   2fdb8:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2fdbc:	ldr	r3, [sl, #400]	; 0x190
   2fdc0:	add	r5, sl, #400	; 0x190
   2fdc4:	cmp	r3, #0
   2fdc8:	ldr	r4, [sl, #40]	; 0x28
   2fdcc:	beq	2fdec <__flatcc_fb_parse@@Base+0xf40>
   2fdd0:	mov	r3, #0
   2fdd4:	str	r3, [sp, #4]
   2fdd8:	str	r3, [sp]
   2fddc:	ldr	r2, [sp, #28]
   2fde0:	mov	r1, r4
   2fde4:	mov	r0, sl
   2fde8:	bl	2d4ec <__flatcc_error_report@@Base>
   2fdec:	mov	r1, r5
   2fdf0:	mov	r0, sl
   2fdf4:	bl	2d6e4 <__flatcc_error_report@@Base+0x1f8>
   2fdf8:	ldr	r2, [sl, #544]	; 0x220
   2fdfc:	mov	r3, r4
   2fe00:	str	r2, [sl, #408]	; 0x198
   2fe04:	mov	r1, #59	; 0x3b
   2fe08:	ldr	r2, [sp, #8]
   2fe0c:	mov	r0, sl
   2fe10:	bl	2d82c <__flatcc_error_report@@Base+0x340>
   2fe14:	b	2fb70 <__flatcc_fb_parse@@Base+0xcc4>
   2fe18:	mov	r0, sl
   2fe1c:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2fe20:	ldr	r1, [sl, #52]	; 0x34
   2fe24:	ldr	r2, [sl, #44]	; 0x2c
   2fe28:	add	r3, r1, #128	; 0x80
   2fe2c:	cmp	r3, r2
   2fe30:	bhi	30924 <__flatcc_fb_parse@@Base+0x1a78>
   2fe34:	ldr	r2, [sl, #392]	; 0x188
   2fe38:	str	r3, [sl, #52]	; 0x34
   2fe3c:	str	r2, [r1]
   2fe40:	ldr	r3, [sl, #36]	; 0x24
   2fe44:	ldr	r2, [sl, #544]	; 0x220
   2fe48:	mov	r0, #2
   2fe4c:	cmp	r3, #0
   2fe50:	strh	r0, [r1, #8]
   2fe54:	str	r1, [sl, #392]	; 0x188
   2fe58:	str	r2, [r1, #12]
   2fe5c:	beq	2fe80 <__flatcc_fb_parse@@Base+0xfd4>
   2fe60:	mov	r0, #0
   2fe64:	b	2fe6c <__flatcc_fb_parse@@Base+0xfc0>
   2fe68:	mov	r3, r2
   2fe6c:	ldr	r2, [r3]
   2fe70:	str	r0, [r3]
   2fe74:	cmp	r2, #0
   2fe78:	mov	r0, r3
   2fe7c:	bne	2fe68 <__flatcc_fb_parse@@Base+0xfbc>
   2fe80:	mov	r2, #0
   2fe84:	str	r3, [r1, #32]
   2fe88:	mov	r0, sl
   2fe8c:	str	r2, [sl, #36]	; 0x24
   2fe90:	ldr	r2, [pc, #156]	; 2ff34 <__flatcc_fb_parse@@Base+0x1088>
   2fe94:	bl	2e5f0 <__flatcc_error_report@@Base+0x1104>
   2fe98:	b	2fb70 <__flatcc_fb_parse@@Base+0xcc4>
   2fe9c:	andeq	r7, r2, r8, lsr #27
   2fea0:	andeq	r7, r2, ip, lsr #27
   2fea4:	ldrbvs	r7, [r0, #-571]!	; 0xfffffdc5
   2fea8:			; <UNDEFINED> instruction: 0xfffffc2a
   2feac:	andeq	r3, r0, r6, lsr #26
   2feb0:	andeq	r3, r0, sl, lsr #26
   2feb4:	andeq	r3, r0, fp, lsr #26
   2feb8:	andeq	r7, r0, ip, ror ip
   2febc:	andeq	r7, r2, r4, ror #16
   2fec0:	andeq	r7, r2, r8, lsl #17
   2fec4:	andeq	r7, r2, r4, lsl r8
   2fec8:			; <UNDEFINED> instruction: 0xfffffc35
   2fecc:	andeq	r3, r0, sp, lsr lr
   2fed0:	eorseq	r3, lr, lr, lsr lr
   2fed4:	andeq	r3, r0, sl, lsr sp
   2fed8:	andeq	r6, r2, r8, asr #25
   2fedc:	andeq	r6, r2, ip, lsr #25
   2fee0:	stmdacc	r9!, {r0, r2, r4, r5, r8, sl, ip, sp, lr}^
   2fee4:	strbtcc	r6, [lr], #-2357	; 0xfffff6cb
   2fee8:			; <UNDEFINED> instruction: 0x36697536
   2feec:			; <UNDEFINED> instruction: 0x366e6935
   2fef0:	muleq	r1, ip, r4
   2fef4:			; <UNDEFINED> instruction: 0xfffffc20
   2fef8:	andeq	r2, r0, r6, lsr #12
   2fefc:	andeq	r3, r0, sp, lsr sp
   2ff00:	andeq	r7, r2, r8, lsr r4
   2ff04:	andeq	r7, r2, r4, lsl r4
   2ff08:	andeq	r7, r2, ip, lsr r7
   2ff0c:			; <UNDEFINED> instruction: 0x000276b4
   2ff10:	andeq	r6, r2, ip, lsr sp
   2ff14:	strdeq	r7, [r2], -r8
   2ff18:			; <UNDEFINED> instruction: 0xfffffc3a
   2ff1c:	andeq	r7, r2, ip, ror #4
   2ff20:			; <UNDEFINED> instruction: 0x000275bc
   2ff24:	andeq	r6, r2, r0, ror fp
   2ff28:	andeq	r7, r2, r8, lsl #10
   2ff2c:			; <UNDEFINED> instruction: 0xfffffc36
   2ff30:	strdeq	r7, [r2], -r8
   2ff34:			; <UNDEFINED> instruction: 0xfffffc39
   2ff38:	andeq	r6, r2, r0, lsl lr
   2ff3c:	andeq	r6, r2, r4, lsr #26
   2ff40:	andeq	r6, r2, r8, lsr #28
   2ff44:	andeq	r6, r2, ip, lsl lr
   2ff48:	andeq	r6, r2, r0, asr #27
   2ff4c:			; <UNDEFINED> instruction: 0x00026cb4
   2ff50:	andeq	r6, r2, r8, asr #24
   2ff54:	muleq	r2, ip, fp
   2ff58:			; <UNDEFINED> instruction: 0xfffffc29
   2ff5c:	muleq	r2, r4, sl
   2ff60:	andeq	r6, r2, r4, asr fp
   2ff64:	andeq	r6, r2, r4, lsr r9
   2ff68:	andeq	r6, r2, ip, lsr #19
   2ff6c:	andeq	r6, r2, ip, ror r7
   2ff70:	eoreq	r0, r0, r3, lsl #16
   2ff74:	andeq	r6, r2, r4, lsr r5
   2ff78:	andeq	r6, r2, r8, lsr #7
   2ff7c:	andeq	r6, r2, r0, lsr #7
   2ff80:	muleq	r2, r0, r4
   2ff84:	andeq	r6, r2, r0, lsl #6
   2ff88:	andeq	r6, r2, ip, lsl #10
   2ff8c:	andeq	r6, r2, ip, asr #7
   2ff90:	andeq	r6, r2, r8, lsr #8
   2ff94:	andeq	r6, r2, r4, asr #9
   2ff98:	andeq	r6, r2, r0, lsl #9
   2ff9c:	andeq	r6, r2, r0, asr #5
   2ffa0:	mcrvs	6, 3, r6, cr9, cr14, {1}
   2ffa4:			; <UNDEFINED> instruction: 0x676c7535
   2ffa8:			; <UNDEFINED> instruction: 0x67747336
   2ffac:	sfmvs	f6, 2, [pc], #-208	; 2fee4 <__flatcc_fb_parse@@Base+0x1038>
   2ffb0:	andeq	lr, r0, ip, lsr #25
   2ffb4:	andeq	r6, r2, r0, ror #1
   2ffb8:	strbtvc	r7, [r9], #-1332	; 0xfffffacc
   2ffbc:	strbtvc	r6, [lr], #-2355	; 0xfffff6cd
   2ffc0:	ldrbtvc	r7, [r3], #-1334	; 0xfffffaca
   2ffc4:	andeq	r7, r2, r8, lsl r4
   2ffc8:	strbvs	r7, [r1, #-1077]!	; 0xfffffbcb
   2ffcc:	strbvs	r6, [lr, #-2359]!	; 0xfffff6c9
   2ffd0:	strbvs	r6, [pc, #-1078]!	; 2fba2 <__flatcc_fb_parse@@Base+0xcf6>
   2ffd4:			; <UNDEFINED> instruction: 0x00025ebc
   2ffd8:			; <UNDEFINED> instruction: 0xfffffc38
   2ffdc:			; <UNDEFINED> instruction: 0xfffffc3c
   2ffe0:	andeq	r2, r0, sp, lsr #26
   2ffe4:	andeq	r2, r0, ip, lsr sp
   2ffe8:	add	r4, sl, #376	; 0x178
   2ffec:	mov	r0, sl
   2fff0:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   2fff4:	ldrh	r3, [r4, #8]
   2fff8:	cmp	r3, #2
   2fffc:	beq	30d18 <__flatcc_fb_parse@@Base+0x1e6c>
   30000:	ldr	r1, [sl, #40]	; 0x28
   30004:	ldr	r3, [r1, #16]
   30008:	cmp	r3, #19
   3000c:	bne	30b1c <__flatcc_fb_parse@@Base+0x1c70>
   30010:	mov	r0, sl
   30014:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   30018:	mov	r1, r4
   3001c:	mov	r0, sl
   30020:	bl	2dbbc <__flatcc_error_report@@Base+0x6d0>
   30024:	ldr	r1, [sl, #40]	; 0x28
   30028:	ldr	r3, [r1, #16]
   3002c:	cmp	r3, #59	; 0x3b
   30030:	beq	2fc64 <__flatcc_fb_parse@@Base+0xdb8>
   30034:	ldr	r2, [pc, #-260]	; 2ff38 <__flatcc_fb_parse@@Base+0x108c>
   30038:	mov	r3, #0
   3003c:	str	r3, [sp, #4]
   30040:	str	r3, [sp]
   30044:	add	r2, pc, r2
   30048:	mov	r0, sl
   3004c:	bl	2d4ec <__flatcc_error_report@@Base>
   30050:	b	2fb70 <__flatcc_fb_parse@@Base+0xcc4>
   30054:	ldr	r2, [sp, #20]
   30058:	mov	r3, #1
   3005c:	mov	r0, sl
   30060:	stm	sp, {r2, r3}
   30064:	mov	r3, #0
   30068:	ldr	r2, [sp, #16]
   3006c:	bl	2d4ec <__flatcc_error_report@@Base>
   30070:	b	2fb70 <__flatcc_fb_parse@@Base+0xcc4>
   30074:	mov	r0, sl
   30078:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   3007c:	ldr	r5, [sl, #40]	; 0x28
   30080:	mov	r4, #0
   30084:	str	r4, [sp, #40]	; 0x28
   30088:	ldr	r2, [r5, #16]
   3008c:	cmp	r2, #59	; 0x3b
   30090:	beq	307f8 <__flatcc_fb_parse@@Base+0x194c>
   30094:	cmp	r2, #9
   30098:	beq	31388 <__flatcc_fb_parse@@Base+0x24dc>
   3009c:	ldr	r2, [pc, #-360]	; 2ff3c <__flatcc_fb_parse@@Base+0x1090>
   300a0:	mov	r1, r5
   300a4:	add	r2, pc, r2
   300a8:	mov	r3, #0
   300ac:	str	r3, [sp, #4]
   300b0:	str	r3, [sp]
   300b4:	mov	r0, sl
   300b8:	bl	2d4ec <__flatcc_error_report@@Base>
   300bc:	mov	r1, #59	; 0x3b
   300c0:	mov	r0, sl
   300c4:	bl	2d3c0 <__flatcc_fb_default_error_out@@Base+0x258>
   300c8:	b	2fb70 <__flatcc_fb_parse@@Base+0xcc4>
   300cc:	mov	r0, sl
   300d0:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   300d4:	ldr	r4, [sl, #52]	; 0x34
   300d8:	ldr	r2, [sl, #44]	; 0x2c
   300dc:	add	r3, r4, #32
   300e0:	cmp	r3, r2
   300e4:	bhi	309f4 <__flatcc_fb_parse@@Base+0x1b48>
   300e8:	ldr	r5, [sl, #40]	; 0x28
   300ec:	str	r3, [sl, #52]	; 0x34
   300f0:	ldr	r2, [sl, #356]	; 0x164
   300f4:	ldr	r3, [r5, #16]
   300f8:	str	r2, [r4]
   300fc:	cmp	r3, #19
   30100:	str	r4, [sl, #356]	; 0x164
   30104:	bne	30b5c <__flatcc_fb_parse@@Base+0x1cb0>
   30108:	mov	r0, sl
   3010c:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   30110:	add	r1, r4, #8
   30114:	mov	r0, sl
   30118:	bl	2dbbc <__flatcc_error_report@@Base+0x6d0>
   3011c:	ldr	r3, [r4, #12]
   30120:	cmp	r3, #0
   30124:	bne	30144 <__flatcc_fb_parse@@Base+0x1298>
   30128:	ldr	r2, [pc, #-496]	; 2ff40 <__flatcc_fb_parse@@Base+0x1094>
   3012c:	str	r3, [sp, #4]
   30130:	str	r3, [sp]
   30134:	mov	r1, r5
   30138:	add	r2, pc, r2
   3013c:	mov	r0, sl
   30140:	bl	2d4ec <__flatcc_error_report@@Base>
   30144:	ldr	r1, [sl, #40]	; 0x28
   30148:	ldr	r3, [r1, #16]
   3014c:	cmp	r3, #59	; 0x3b
   30150:	beq	2fc64 <__flatcc_fb_parse@@Base+0xdb8>
   30154:	ldr	r2, [pc, #-536]	; 2ff44 <__flatcc_fb_parse@@Base+0x1098>
   30158:	mov	r3, #0
   3015c:	str	r3, [sp, #4]
   30160:	str	r3, [sp]
   30164:	add	r2, pc, r2
   30168:	mov	r0, sl
   3016c:	bl	2d4ec <__flatcc_error_report@@Base>
   30170:	b	2fb70 <__flatcc_fb_parse@@Base+0xcc4>
   30174:	mov	r0, sl
   30178:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   3017c:	ldr	r5, [sl, #52]	; 0x34
   30180:	ldr	r2, [sl, #44]	; 0x2c
   30184:	add	r3, r5, #128	; 0x80
   30188:	cmp	r3, r2
   3018c:	bhi	309c0 <__flatcc_fb_parse@@Base+0x1b14>
   30190:	ldr	r2, [sl, #392]	; 0x188
   30194:	str	r3, [sl, #52]	; 0x34
   30198:	str	r2, [r5]
   3019c:	ldr	r3, [sl, #36]	; 0x24
   301a0:	ldr	r2, [sl, #544]	; 0x220
   301a4:	mov	r1, #3
   301a8:	cmp	r3, #0
   301ac:	strh	r1, [r5, #8]
   301b0:	str	r5, [sl, #392]	; 0x188
   301b4:	str	r2, [r5, #12]
   301b8:	beq	301dc <__flatcc_fb_parse@@Base+0x1330>
   301bc:	mov	r1, #0
   301c0:	b	301c8 <__flatcc_fb_parse@@Base+0x131c>
   301c4:	mov	r3, r2
   301c8:	ldr	r2, [r3]
   301cc:	str	r1, [r3]
   301d0:	cmp	r2, #0
   301d4:	mov	r1, r3
   301d8:	bne	301c4 <__flatcc_fb_parse@@Base+0x1318>
   301dc:	ldr	r6, [sl, #40]	; 0x28
   301e0:	str	r3, [r5, #32]
   301e4:	mov	r4, #0
   301e8:	ldr	r3, [r6, #16]
   301ec:	str	r4, [sl, #36]	; 0x24
   301f0:	cmp	r3, #9
   301f4:	bne	30af4 <__flatcc_fb_parse@@Base+0x1c48>
   301f8:	mov	r0, sl
   301fc:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   30200:	ldr	r3, [sl, #40]	; 0x28
   30204:	str	r6, [r5, #4]
   30208:	ldr	r3, [r3, #16]
   3020c:	cmp	r3, #58	; 0x3a
   30210:	beq	30810 <__flatcc_fb_parse@@Base+0x1964>
   30214:	mov	r0, sl
   30218:	bl	2e414 <__flatcc_error_report@@Base+0xf28>
   3021c:	ldr	r3, [sl, #40]	; 0x28
   30220:	str	r3, [sp, #32]
   30224:	ldr	r3, [r3, #16]
   30228:	cmp	r3, #123	; 0x7b
   3022c:	str	r0, [r5, #28]
   30230:	bne	30b9c <__flatcc_fb_parse@@Base+0x1cf0>
   30234:	mov	r0, sl
   30238:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   3023c:	ldr	r8, [sl, #40]	; 0x28
   30240:	ldr	r3, [r8, #16]
   30244:	cmp	r3, #9
   30248:	bne	30330 <__flatcc_fb_parse@@Base+0x1484>
   3024c:	ldr	r7, [pc, #-780]	; 2ff48 <__flatcc_fb_parse@@Base+0x109c>
   30250:	mov	r6, #5
   30254:	add	r7, pc, r7
   30258:	mov	r4, #0
   3025c:	mov	r0, sl
   30260:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   30264:	ldr	r3, [sl, #108]	; 0x6c
   30268:	cmp	r3, #9
   3026c:	bgt	30350 <__flatcc_fb_parse@@Base+0x14a4>
   30270:	ldr	fp, [sl, #52]	; 0x34
   30274:	ldr	r3, [sl, #44]	; 0x2c
   30278:	add	r0, fp, #128	; 0x80
   3027c:	cmp	r0, r3
   30280:	bhi	30360 <__flatcc_fb_parse@@Base+0x14b4>
   30284:	ldr	r3, [r5, #20]
   30288:	str	r0, [sl, #52]	; 0x34
   3028c:	str	r3, [fp]
   30290:	strh	r6, [fp, #8]
   30294:	str	fp, [r5, #20]
   30298:	ldr	r3, [sl, #36]	; 0x24
   3029c:	cmp	r3, #0
   302a0:	beq	302c4 <__flatcc_fb_parse@@Base+0x1418>
   302a4:	mov	r1, r4
   302a8:	b	302b0 <__flatcc_fb_parse@@Base+0x1404>
   302ac:	mov	r3, r2
   302b0:	ldr	r2, [r3]
   302b4:	str	r1, [r3]
   302b8:	cmp	r2, #0
   302bc:	mov	r1, r3
   302c0:	bne	302ac <__flatcc_fb_parse@@Base+0x1400>
   302c4:	ldr	r2, [sl, #40]	; 0x28
   302c8:	str	r3, [fp, #68]	; 0x44
   302cc:	str	r4, [sl, #36]	; 0x24
   302d0:	ldr	r3, [r2, #16]
   302d4:	str	r8, [fp, #4]
   302d8:	cmp	r3, #61	; 0x3d
   302dc:	bne	30304 <__flatcc_fb_parse@@Base+0x1458>
   302e0:	mov	r0, sl
   302e4:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   302e8:	mov	r3, r7
   302ec:	mov	r2, r4
   302f0:	add	r1, fp, #48	; 0x30
   302f4:	mov	r0, sl
   302f8:	bl	2dd84 <__flatcc_error_report@@Base+0x898>
   302fc:	ldr	r3, [sl, #40]	; 0x28
   30300:	ldr	r3, [r3, #16]
   30304:	cmp	r3, #44	; 0x2c
   30308:	bne	306f4 <__flatcc_fb_parse@@Base+0x1848>
   3030c:	mov	r0, sl
   30310:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   30314:	ldr	r8, [sl, #40]	; 0x28
   30318:	ldr	r3, [r8, #16]
   3031c:	cmp	r3, #125	; 0x7d
   30320:	beq	306f4 <__flatcc_fb_parse@@Base+0x1848>
   30324:	cmp	r3, #9
   30328:	str	r4, [sl, #36]	; 0x24
   3032c:	beq	3025c <__flatcc_fb_parse@@Base+0x13b0>
   30330:	ldr	r2, [pc, #-1004]	; 2ff4c <__flatcc_fb_parse@@Base+0x10a0>
   30334:	mov	r3, #0
   30338:	mov	r1, r8
   3033c:	str	r3, [sp, #4]
   30340:	str	r3, [sp]
   30344:	add	r2, pc, r2
   30348:	mov	r0, sl
   3034c:	bl	2d4ec <__flatcc_error_report@@Base>
   30350:	mov	r1, #125	; 0x7d
   30354:	mov	r0, sl
   30358:	bl	2d3c0 <__flatcc_fb_default_error_out@@Base+0x258>
   3035c:	b	2fb70 <__flatcc_fb_parse@@Base+0xcc4>
   30360:	mov	r1, #1
   30364:	mov	r0, #65536	; 0x10000
   30368:	bl	13e98 <calloc@plt>
   3036c:	cmp	r0, #0
   30370:	beq	31b0c <__flatcc_fb_parse@@Base+0x2c60>
   30374:	ldr	r3, [sl, #48]	; 0x30
   30378:	add	fp, r0, #16
   3037c:	str	r3, [r0]
   30380:	add	r3, r0, #65536	; 0x10000
   30384:	str	r0, [sl, #48]	; 0x30
   30388:	str	r3, [sl, #44]	; 0x2c
   3038c:	add	r0, r0, #144	; 0x90
   30390:	b	30284 <__flatcc_fb_parse@@Base+0x13d8>
   30394:	mov	r0, sl
   30398:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   3039c:	ldr	r6, [sl, #52]	; 0x34
   303a0:	ldr	r2, [sl, #44]	; 0x2c
   303a4:	add	r3, r6, #128	; 0x80
   303a8:	cmp	r3, r2
   303ac:	bhi	30a28 <__flatcc_fb_parse@@Base+0x1b7c>
   303b0:	ldr	r2, [sl, #392]	; 0x188
   303b4:	str	r3, [sl, #52]	; 0x34
   303b8:	str	r2, [r6]
   303bc:	ldr	r3, [sl, #36]	; 0x24
   303c0:	ldr	r2, [sl, #544]	; 0x220
   303c4:	mov	r1, #4
   303c8:	cmp	r3, #0
   303cc:	strh	r1, [r6, #8]
   303d0:	str	r6, [sl, #392]	; 0x188
   303d4:	str	r2, [r6, #12]
   303d8:	beq	303fc <__flatcc_fb_parse@@Base+0x1550>
   303dc:	mov	r1, #0
   303e0:	b	303e8 <__flatcc_fb_parse@@Base+0x153c>
   303e4:	mov	r3, r2
   303e8:	ldr	r2, [r3]
   303ec:	str	r1, [r3]
   303f0:	cmp	r2, #0
   303f4:	mov	r1, r3
   303f8:	bne	303e4 <__flatcc_fb_parse@@Base+0x1538>
   303fc:	ldr	r4, [sl, #40]	; 0x28
   30400:	str	r3, [r6, #32]
   30404:	mov	r5, #0
   30408:	ldr	r3, [r4, #16]
   3040c:	str	r5, [sl, #36]	; 0x24
   30410:	cmp	r3, #9
   30414:	bne	30b34 <__flatcc_fb_parse@@Base+0x1c88>
   30418:	mov	r0, sl
   3041c:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   30420:	str	r4, [r6, #4]
   30424:	mov	r0, sl
   30428:	bl	2e414 <__flatcc_error_report@@Base+0xf28>
   3042c:	ldr	r3, [sl, #40]	; 0x28
   30430:	str	r3, [sp, #32]
   30434:	ldr	r3, [r3, #16]
   30438:	cmp	r3, #123	; 0x7b
   3043c:	str	r0, [r6, #28]
   30440:	bne	30be8 <__flatcc_fb_parse@@Base+0x1d3c>
   30444:	mov	r0, sl
   30448:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   3044c:	ldr	r7, [sl, #40]	; 0x28
   30450:	ldr	r3, [r7, #16]
   30454:	cmp	r3, #9
   30458:	bne	30bc4 <__flatcc_fb_parse@@Base+0x1d18>
   3045c:	ldr	r3, [sl, #108]	; 0x6c
   30460:	cmp	r3, #9
   30464:	bgt	305a0 <__flatcc_fb_parse@@Base+0x16f4>
   30468:	ldr	r3, [pc, #-1312]	; 2ff50 <__flatcc_fb_parse@@Base+0x10a4>
   3046c:	ldr	fp, [pc, #-1312]	; 2ff54 <__flatcc_fb_parse@@Base+0x10a8>
   30470:	add	r3, pc, r3
   30474:	str	r9, [sp, #36]	; 0x24
   30478:	add	fp, pc, fp
   3047c:	mov	r8, #5
   30480:	mov	r9, r3
   30484:	ldr	r4, [sl, #52]	; 0x34
   30488:	ldr	r3, [sl, #44]	; 0x2c
   3048c:	add	r0, r4, #128	; 0x80
   30490:	cmp	r0, r3
   30494:	bhi	305f8 <__flatcc_fb_parse@@Base+0x174c>
   30498:	ldr	r3, [r6, #20]
   3049c:	str	r0, [sl, #52]	; 0x34
   304a0:	str	r3, [r4]
   304a4:	strh	r8, [r4, #8]
   304a8:	str	r4, [r6, #20]
   304ac:	ldr	r3, [sl, #36]	; 0x24
   304b0:	cmp	r3, #0
   304b4:	beq	304d8 <__flatcc_fb_parse@@Base+0x162c>
   304b8:	mov	r1, r5
   304bc:	b	304c4 <__flatcc_fb_parse@@Base+0x1618>
   304c0:	mov	r3, r2
   304c4:	ldr	r2, [r3]
   304c8:	str	r1, [r3]
   304cc:	cmp	r2, #0
   304d0:	mov	r1, r3
   304d4:	bne	304c0 <__flatcc_fb_parse@@Base+0x1614>
   304d8:	str	r3, [r4, #68]	; 0x44
   304dc:	add	r1, sp, #44	; 0x2c
   304e0:	str	r5, [sl, #36]	; 0x24
   304e4:	mov	r0, sl
   304e8:	bl	2d6e4 <__flatcc_error_report@@Base+0x1f8>
   304ec:	ldr	r3, [sp, #44]	; 0x2c
   304f0:	mov	r1, #12
   304f4:	str	r3, [r4, #16]
   304f8:	ldr	r2, [r3]
   304fc:	strh	r1, [r4, #24]
   30500:	cmp	r2, #0
   30504:	bne	30510 <__flatcc_fb_parse@@Base+0x1664>
   30508:	b	30808 <__flatcc_fb_parse@@Base+0x195c>
   3050c:	mov	r2, r3
   30510:	ldr	r3, [r2]
   30514:	cmp	r3, #0
   30518:	bne	3050c <__flatcc_fb_parse@@Base+0x1660>
   3051c:	str	r2, [sp, #44]	; 0x2c
   30520:	ldr	r3, [sl, #40]	; 0x28
   30524:	ldr	r2, [r2, #4]
   30528:	ldr	r3, [r3, #16]
   3052c:	str	r2, [r4, #4]
   30530:	cmp	r3, #58	; 0x3a
   30534:	beq	305ac <__flatcc_fb_parse@@Base+0x1700>
   30538:	cmp	r3, #61	; 0x3d
   3053c:	bne	30564 <__flatcc_fb_parse@@Base+0x16b8>
   30540:	mov	r0, sl
   30544:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   30548:	mov	r3, fp
   3054c:	mov	r2, r5
   30550:	add	r1, r4, #48	; 0x30
   30554:	mov	r0, sl
   30558:	bl	2dd84 <__flatcc_error_report@@Base+0x898>
   3055c:	ldr	r3, [sl, #40]	; 0x28
   30560:	ldr	r3, [r3, #16]
   30564:	cmp	r3, #44	; 0x2c
   30568:	bne	30740 <__flatcc_fb_parse@@Base+0x1894>
   3056c:	mov	r0, sl
   30570:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   30574:	ldr	r7, [sl, #40]	; 0x28
   30578:	ldr	r3, [r7, #16]
   3057c:	cmp	r3, #125	; 0x7d
   30580:	beq	30740 <__flatcc_fb_parse@@Base+0x1894>
   30584:	cmp	r3, #9
   30588:	str	r5, [sl, #36]	; 0x24
   3058c:	bne	30bc0 <__flatcc_fb_parse@@Base+0x1d14>
   30590:	ldr	r3, [sl, #108]	; 0x6c
   30594:	cmp	r3, #9
   30598:	ble	30484 <__flatcc_fb_parse@@Base+0x15d8>
   3059c:	ldr	r9, [sp, #36]	; 0x24
   305a0:	mov	r0, sl
   305a4:	bl	2d358 <__flatcc_fb_default_error_out@@Base+0x1f0>
   305a8:	b	2fb70 <__flatcc_fb_parse@@Base+0xcc4>
   305ac:	mov	r0, sl
   305b0:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   305b4:	ldr	r3, [r4, #16]
   305b8:	ldr	r3, [r3]
   305bc:	cmp	r3, #0
   305c0:	beq	305e0 <__flatcc_fb_parse@@Base+0x1734>
   305c4:	str	r5, [sp, #4]
   305c8:	str	r5, [sp]
   305cc:	mov	r1, r7
   305d0:	mov	r3, #0
   305d4:	mov	r2, r9
   305d8:	mov	r0, sl
   305dc:	bl	2d4ec <__flatcc_error_report@@Base>
   305e0:	add	r1, r4, #16
   305e4:	mov	r0, sl
   305e8:	bl	2d878 <__flatcc_error_report@@Base+0x38c>
   305ec:	ldr	r3, [sl, #40]	; 0x28
   305f0:	ldr	r3, [r3, #16]
   305f4:	b	30538 <__flatcc_fb_parse@@Base+0x168c>
   305f8:	mov	r1, #1
   305fc:	mov	r0, #65536	; 0x10000
   30600:	bl	13e98 <calloc@plt>
   30604:	cmp	r0, #0
   30608:	beq	31b0c <__flatcc_fb_parse@@Base+0x2c60>
   3060c:	ldr	r3, [sl, #48]	; 0x30
   30610:	add	r4, r0, #16
   30614:	str	r3, [r0]
   30618:	add	r3, r0, #65536	; 0x10000
   3061c:	str	r0, [sl, #48]	; 0x30
   30620:	str	r3, [sl, #44]	; 0x2c
   30624:	add	r0, r0, #144	; 0x90
   30628:	b	30498 <__flatcc_fb_parse@@Base+0x15ec>
   3062c:	mov	r0, sl
   30630:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   30634:	ldr	r1, [sl, #52]	; 0x34
   30638:	ldr	r2, [sl, #44]	; 0x2c
   3063c:	add	r3, r1, #128	; 0x80
   30640:	cmp	r3, r2
   30644:	bhi	3098c <__flatcc_fb_parse@@Base+0x1ae0>
   30648:	ldr	r2, [sl, #392]	; 0x188
   3064c:	str	r3, [sl, #52]	; 0x34
   30650:	str	r2, [r1]
   30654:	ldr	r3, [sl, #36]	; 0x24
   30658:	ldr	r2, [sl, #544]	; 0x220
   3065c:	mov	r0, #0
   30660:	cmp	r3, #0
   30664:	strh	r0, [r1, #8]
   30668:	str	r1, [sl, #392]	; 0x188
   3066c:	str	r2, [r1, #12]
   30670:	bne	3067c <__flatcc_fb_parse@@Base+0x17d0>
   30674:	b	30690 <__flatcc_fb_parse@@Base+0x17e4>
   30678:	mov	r3, r2
   3067c:	ldr	r2, [r3]
   30680:	str	r0, [r3]
   30684:	cmp	r2, #0
   30688:	mov	r0, r3
   3068c:	bne	30678 <__flatcc_fb_parse@@Base+0x17cc>
   30690:	mov	r2, #0
   30694:	str	r3, [r1, #32]
   30698:	mov	r0, sl
   3069c:	str	r2, [sl, #36]	; 0x24
   306a0:	ldr	r2, [pc, #-1872]	; 2ff58 <__flatcc_fb_parse@@Base+0x10ac>
   306a4:	bl	2e5f0 <__flatcc_error_report@@Base+0x1104>
   306a8:	b	2fb70 <__flatcc_fb_parse@@Base+0xcc4>
   306ac:	ldr	r2, [pc, #-1880]	; 2ff5c <__flatcc_fb_parse@@Base+0x10b0>
   306b0:	mov	r3, #0
   306b4:	str	r3, [sp, #4]
   306b8:	str	r3, [sp]
   306bc:	add	r2, pc, r2
   306c0:	mov	r0, sl
   306c4:	bl	2d4ec <__flatcc_error_report@@Base>
   306c8:	b	2fb70 <__flatcc_fb_parse@@Base+0xcc4>
   306cc:	ldr	r3, [pc, #-1908]	; 2ff60 <__flatcc_fb_parse@@Base+0x10b4>
   306d0:	mov	r2, #5
   306d4:	add	r3, pc, r3
   306d8:	str	r3, [sp]
   306dc:	str	r2, [sp, #4]
   306e0:	mov	r3, #0
   306e4:	ldr	r2, [sp, #24]
   306e8:	mov	r0, sl
   306ec:	bl	2d4ec <__flatcc_error_report@@Base>
   306f0:	b	2fb70 <__flatcc_fb_parse@@Base+0xcc4>
   306f4:	ldr	r2, [pc, #-1944]	; 2ff64 <__flatcc_fb_parse@@Base+0x10b8>
   306f8:	ldr	r3, [sp, #32]
   306fc:	add	r2, pc, r2
   30700:	mov	r1, #125	; 0x7d
   30704:	mov	r0, sl
   30708:	bl	2d82c <__flatcc_error_report@@Base+0x340>
   3070c:	ldr	r3, [r5, #20]
   30710:	cmp	r3, #0
   30714:	beq	30738 <__flatcc_fb_parse@@Base+0x188c>
   30718:	mov	r1, #0
   3071c:	b	30724 <__flatcc_fb_parse@@Base+0x1878>
   30720:	mov	r3, r2
   30724:	ldr	r2, [r3]
   30728:	str	r1, [r3]
   3072c:	cmp	r2, #0
   30730:	mov	r1, r3
   30734:	bne	30720 <__flatcc_fb_parse@@Base+0x1874>
   30738:	str	r3, [r5, #20]
   3073c:	b	2fb70 <__flatcc_fb_parse@@Base+0xcc4>
   30740:	ldr	r2, [pc, #-2016]	; 2ff68 <__flatcc_fb_parse@@Base+0x10bc>
   30744:	ldr	r3, [sp, #32]
   30748:	add	r2, pc, r2
   3074c:	mov	r1, #125	; 0x7d
   30750:	mov	r0, sl
   30754:	ldr	r9, [sp, #36]	; 0x24
   30758:	bl	2d82c <__flatcc_error_report@@Base+0x340>
   3075c:	ldr	r3, [r6, #20]
   30760:	cmp	r3, #0
   30764:	beq	30788 <__flatcc_fb_parse@@Base+0x18dc>
   30768:	mov	r1, #0
   3076c:	b	30774 <__flatcc_fb_parse@@Base+0x18c8>
   30770:	mov	r3, r2
   30774:	ldr	r2, [r3]
   30778:	str	r1, [r3]
   3077c:	cmp	r2, #0
   30780:	mov	r1, r3
   30784:	bne	30770 <__flatcc_fb_parse@@Base+0x18c4>
   30788:	ldr	ip, [sl, #52]	; 0x34
   3078c:	ldr	r1, [sl, #44]	; 0x2c
   30790:	add	r2, ip, #128	; 0x80
   30794:	cmp	r2, r1
   30798:	str	r3, [r6, #20]
   3079c:	bhi	30ce0 <__flatcc_fb_parse@@Base+0x1e34>
   307a0:	mov	r1, #5
   307a4:	str	r2, [sl, #52]	; 0x34
   307a8:	str	r3, [ip]
   307ac:	strh	r1, [ip, #8]
   307b0:	str	ip, [r6, #20]
   307b4:	ldr	r3, [sl, #36]	; 0x24
   307b8:	cmp	r3, #0
   307bc:	beq	307e0 <__flatcc_fb_parse@@Base+0x1934>
   307c0:	mov	r1, #0
   307c4:	b	307cc <__flatcc_fb_parse@@Base+0x1920>
   307c8:	mov	r3, r2
   307cc:	ldr	r2, [r3]
   307d0:	str	r1, [r3]
   307d4:	cmp	r2, #0
   307d8:	mov	r1, r3
   307dc:	bne	307c8 <__flatcc_fb_parse@@Base+0x191c>
   307e0:	str	r3, [ip, #68]	; 0x44
   307e4:	mov	r2, #0
   307e8:	add	r3, sl, #68	; 0x44
   307ec:	str	r2, [sl, #36]	; 0x24
   307f0:	str	r3, [ip, #4]
   307f4:	b	2fb70 <__flatcc_fb_parse@@Base+0xcc4>
   307f8:	mov	r0, sl
   307fc:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   30800:	str	r4, [sl, #544]	; 0x220
   30804:	b	2fb70 <__flatcc_fb_parse@@Base+0xcc4>
   30808:	mov	r2, r3
   3080c:	b	30520 <__flatcc_fb_parse@@Base+0x1674>
   30810:	mov	r0, sl
   30814:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   30818:	add	r1, r5, #40	; 0x28
   3081c:	mov	r0, sl
   30820:	bl	2d878 <__flatcc_error_report@@Base+0x38c>
   30824:	ldrh	r3, [r5, #48]	; 0x30
   30828:	ldr	r1, [r5, #40]	; 0x28
   3082c:	cmp	r3, #8
   30830:	beq	30a5c <__flatcc_fb_parse@@Base+0x1bb0>
   30834:	ldr	r2, [pc, #-2256]	; 2ff6c <__flatcc_fb_parse@@Base+0x10c0>
   30838:	mov	r3, r4
   3083c:	str	r4, [sp, #4]
   30840:	str	r4, [sp]
   30844:	add	r2, pc, r2
   30848:	mov	r0, sl
   3084c:	bl	2d4ec <__flatcc_error_report@@Base>
   30850:	b	30214 <__flatcc_fb_parse@@Base+0x1368>
   30854:	cmp	r1, #46	; 0x2e
   30858:	moveq	ip, r3
   3085c:	beq	2f3ec <__flatcc_fb_parse@@Base+0x540>
   30860:	cmp	r6, r3
   30864:	beq	31170 <__flatcc_fb_parse@@Base+0x22c4>
   30868:	and	r1, r1, #223	; 0xdf
   3086c:	cmp	r1, #69	; 0x45
   30870:	moveq	ip, r3
   30874:	bne	31170 <__flatcc_fb_parse@@Base+0x22c4>
   30878:	add	r2, r3, #1
   3087c:	cmp	r6, r2
   30880:	beq	30894 <__flatcc_fb_parse@@Base+0x19e8>
   30884:	ldrb	r1, [r3, #1]
   30888:	sub	r1, r1, #43	; 0x2b
   3088c:	tst	r1, #253	; 0xfd
   30890:	movne	r2, r3
   30894:	add	r2, r2, #1
   30898:	b	308b0 <__flatcc_fb_parse@@Base+0x1a04>
   3089c:	ldrb	r1, [r2]
   308a0:	add	r2, r2, #1
   308a4:	sub	r1, r1, #48	; 0x30
   308a8:	cmp	r1, #9
   308ac:	bhi	2f414 <__flatcc_fb_parse@@Base+0x568>
   308b0:	cmp	r2, r6
   308b4:	mov	r3, r2
   308b8:	bne	3089c <__flatcc_fb_parse@@Base+0x19f0>
   308bc:	b	2f414 <__flatcc_fb_parse@@Base+0x568>
   308c0:	ldr	r1, [sl, #356]	; 0x164
   308c4:	cmp	r1, #0
   308c8:	bne	308d4 <__flatcc_fb_parse@@Base+0x1a28>
   308cc:	b	308e8 <__flatcc_fb_parse@@Base+0x1a3c>
   308d0:	mov	r1, r3
   308d4:	ldr	r3, [r1]
   308d8:	str	r2, [r1]
   308dc:	cmp	r3, #0
   308e0:	mov	r2, r1
   308e4:	bne	308d0 <__flatcc_fb_parse@@Base+0x1a24>
   308e8:	ldr	r3, [sl, #392]	; 0x188
   308ec:	str	r1, [sl, #356]	; 0x164
   308f0:	cmp	r3, #0
   308f4:	beq	30918 <__flatcc_fb_parse@@Base+0x1a6c>
   308f8:	mov	r1, #0
   308fc:	b	30904 <__flatcc_fb_parse@@Base+0x1a58>
   30900:	mov	r3, r2
   30904:	ldr	r2, [r3]
   30908:	str	r1, [r3]
   3090c:	cmp	r2, #0
   30910:	mov	r1, r3
   30914:	bne	30900 <__flatcc_fb_parse@@Base+0x1a54>
   30918:	str	r3, [sl, #392]	; 0x188
   3091c:	add	sp, sp, #52	; 0x34
   30920:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30924:	mov	r1, #1
   30928:	mov	r0, #65536	; 0x10000
   3092c:	bl	13e98 <calloc@plt>
   30930:	subs	r3, r0, #0
   30934:	beq	31b0c <__flatcc_fb_parse@@Base+0x2c60>
   30938:	ldr	r2, [sl, #48]	; 0x30
   3093c:	add	r1, r3, #16
   30940:	str	r2, [r3]
   30944:	add	r2, r3, #65536	; 0x10000
   30948:	str	r3, [sl, #48]	; 0x30
   3094c:	str	r2, [sl, #44]	; 0x2c
   30950:	add	r3, r3, #144	; 0x90
   30954:	b	2fe34 <__flatcc_fb_parse@@Base+0xf88>
   30958:	mov	r1, #1
   3095c:	mov	r0, #65536	; 0x10000
   30960:	bl	13e98 <calloc@plt>
   30964:	subs	r3, r0, #0
   30968:	beq	31b0c <__flatcc_fb_parse@@Base+0x2c60>
   3096c:	ldr	r2, [sl, #48]	; 0x30
   30970:	add	r1, r3, #16
   30974:	str	r2, [r3]
   30978:	add	r2, r3, #65536	; 0x10000
   3097c:	str	r3, [sl, #48]	; 0x30
   30980:	str	r2, [sl, #44]	; 0x2c
   30984:	add	r3, r3, #144	; 0x90
   30988:	b	2fd4c <__flatcc_fb_parse@@Base+0xea0>
   3098c:	mov	r1, #1
   30990:	mov	r0, #65536	; 0x10000
   30994:	bl	13e98 <calloc@plt>
   30998:	subs	r3, r0, #0
   3099c:	beq	31b0c <__flatcc_fb_parse@@Base+0x2c60>
   309a0:	ldr	r2, [sl, #48]	; 0x30
   309a4:	add	r1, r3, #16
   309a8:	str	r2, [r3]
   309ac:	add	r2, r3, #65536	; 0x10000
   309b0:	str	r3, [sl, #48]	; 0x30
   309b4:	str	r2, [sl, #44]	; 0x2c
   309b8:	add	r3, r3, #144	; 0x90
   309bc:	b	30648 <__flatcc_fb_parse@@Base+0x179c>
   309c0:	mov	r1, #1
   309c4:	mov	r0, #65536	; 0x10000
   309c8:	bl	13e98 <calloc@plt>
   309cc:	subs	r3, r0, #0
   309d0:	beq	31b0c <__flatcc_fb_parse@@Base+0x2c60>
   309d4:	ldr	r2, [sl, #48]	; 0x30
   309d8:	add	r5, r3, #16
   309dc:	str	r2, [r3]
   309e0:	add	r2, r3, #65536	; 0x10000
   309e4:	str	r3, [sl, #48]	; 0x30
   309e8:	str	r2, [sl, #44]	; 0x2c
   309ec:	add	r3, r3, #144	; 0x90
   309f0:	b	30190 <__flatcc_fb_parse@@Base+0x12e4>
   309f4:	mov	r1, #1
   309f8:	mov	r0, #65536	; 0x10000
   309fc:	bl	13e98 <calloc@plt>
   30a00:	subs	r3, r0, #0
   30a04:	beq	31b0c <__flatcc_fb_parse@@Base+0x2c60>
   30a08:	ldr	r2, [sl, #48]	; 0x30
   30a0c:	add	r4, r3, #16
   30a10:	str	r2, [r3]
   30a14:	add	r2, r3, #65536	; 0x10000
   30a18:	str	r3, [sl, #48]	; 0x30
   30a1c:	str	r2, [sl, #44]	; 0x2c
   30a20:	add	r3, r3, #48	; 0x30
   30a24:	b	300e8 <__flatcc_fb_parse@@Base+0x123c>
   30a28:	mov	r1, #1
   30a2c:	mov	r0, #65536	; 0x10000
   30a30:	bl	13e98 <calloc@plt>
   30a34:	subs	r3, r0, #0
   30a38:	beq	31b0c <__flatcc_fb_parse@@Base+0x2c60>
   30a3c:	ldr	r2, [sl, #48]	; 0x30
   30a40:	add	r6, r3, #16
   30a44:	str	r2, [r3]
   30a48:	add	r2, r3, #65536	; 0x10000
   30a4c:	str	r3, [sl, #48]	; 0x30
   30a50:	str	r2, [sl, #44]	; 0x2c
   30a54:	add	r3, r3, #144	; 0x90
   30a58:	b	303b0 <__flatcc_fb_parse@@Base+0x1504>
   30a5c:	ldr	r3, [r1, #16]
   30a60:	add	r3, r3, #996	; 0x3e4
   30a64:	cmp	r3, #21
   30a68:	bhi	30214 <__flatcc_fb_parse@@Base+0x1368>
   30a6c:	mov	r0, #1
   30a70:	ldr	r2, [pc, #-2824]	; 2ff70 <__flatcc_fb_parse@@Base+0x10c4>
   30a74:	ands	r3, r2, r0, lsl r3
   30a78:	beq	30214 <__flatcc_fb_parse@@Base+0x1368>
   30a7c:	ldr	r2, [pc, #-2832]	; 2ff74 <__flatcc_fb_parse@@Base+0x10c8>
   30a80:	str	r4, [sp, #4]
   30a84:	str	r4, [sp]
   30a88:	mov	r3, r4
   30a8c:	add	r2, pc, r2
   30a90:	mov	r0, sl
   30a94:	bl	2d4ec <__flatcc_error_report@@Base>
   30a98:	b	30214 <__flatcc_fb_parse@@Base+0x1368>
   30a9c:	mov	r0, sl
   30aa0:	bl	2d24c <__flatcc_fb_default_error_out@@Base+0xe4>
   30aa4:	ldr	r6, [sl, #40]	; 0x28
   30aa8:	ldr	r2, [r6, #16]
   30aac:	b	2f50c <__flatcc_fb_parse@@Base+0x660>
   30ab0:	ldr	r2, [sl, #364]	; 0x16c
   30ab4:	ldr	r3, [sl, #360]	; 0x168
   30ab8:	ldr	r1, [sl, #40]	; 0x28
   30abc:	str	r2, [sp, #4]
   30ac0:	ldr	r2, [pc, #-2896]	; 2ff78 <__flatcc_fb_parse@@Base+0x10cc>
   30ac4:	str	r3, [sp]
   30ac8:	add	r2, pc, r2
   30acc:	mov	r3, #0
   30ad0:	mov	r0, sl
   30ad4:	bl	2d4ec <__flatcc_error_report@@Base>
   30ad8:	b	2fbec <__flatcc_fb_parse@@Base+0xd40>
   30adc:	ldr	r2, [pc, #-2920]	; 2ff7c <__flatcc_fb_parse@@Base+0x10d0>
   30ae0:	mov	r3, #0
   30ae4:	str	r3, [sp, #4]
   30ae8:	str	r3, [sp]
   30aec:	add	r2, pc, r2
   30af0:	b	300b4 <__flatcc_fb_parse@@Base+0x1208>
   30af4:	ldr	r2, [pc, #-2940]	; 2ff80 <__flatcc_fb_parse@@Base+0x10d4>
   30af8:	str	r4, [sp, #4]
   30afc:	str	r4, [sp]
   30b00:	mov	r1, r6
   30b04:	mov	r3, r4
   30b08:	add	r2, pc, r2
   30b0c:	mov	r0, sl
   30b10:	bl	2d4ec <__flatcc_error_report@@Base>
   30b14:	str	r4, [r5, #4]
   30b18:	b	30350 <__flatcc_fb_parse@@Base+0x14a4>
   30b1c:	ldr	r2, [pc, #-2976]	; 2ff84 <__flatcc_fb_parse@@Base+0x10d8>
   30b20:	mov	r3, #0
   30b24:	str	r3, [sp, #4]
   30b28:	str	r3, [sp]
   30b2c:	add	r2, pc, r2
   30b30:	b	300b4 <__flatcc_fb_parse@@Base+0x1208>
   30b34:	ldr	r2, [pc, #-2996]	; 2ff88 <__flatcc_fb_parse@@Base+0x10dc>
   30b38:	str	r5, [sp, #4]
   30b3c:	str	r5, [sp]
   30b40:	mov	r1, r4
   30b44:	mov	r3, r5
   30b48:	add	r2, pc, r2
   30b4c:	mov	r0, sl
   30b50:	bl	2d4ec <__flatcc_error_report@@Base>
   30b54:	str	r5, [r6, #4]
   30b58:	b	305a0 <__flatcc_fb_parse@@Base+0x16f4>
   30b5c:	ldr	r2, [pc, #-3032]	; 2ff8c <__flatcc_fb_parse@@Base+0x10e0>
   30b60:	mov	r3, #0
   30b64:	mov	r1, r5
   30b68:	str	r3, [sp, #4]
   30b6c:	str	r3, [sp]
   30b70:	add	r2, pc, r2
   30b74:	mov	r0, sl
   30b78:	bl	2d4ec <__flatcc_error_report@@Base>
   30b7c:	b	30144 <__flatcc_fb_parse@@Base+0x1298>
   30b80:	add	r3, r5, #2
   30b84:	mov	r2, r4
   30b88:	mov	r1, #22
   30b8c:	mov	r0, sl
   30b90:	mov	r4, r3
   30b94:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   30b98:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   30b9c:	ldr	r2, [pc, #-3092]	; 2ff90 <__flatcc_fb_parse@@Base+0x10e4>
   30ba0:	mov	r3, #0
   30ba4:	ldr	r1, [sp, #32]
   30ba8:	str	r3, [sp, #4]
   30bac:	str	r3, [sp]
   30bb0:	add	r2, pc, r2
   30bb4:	mov	r0, sl
   30bb8:	bl	2d4ec <__flatcc_error_report@@Base>
   30bbc:	b	30350 <__flatcc_fb_parse@@Base+0x14a4>
   30bc0:	ldr	r9, [sp, #36]	; 0x24
   30bc4:	ldr	r2, [pc, #-3128]	; 2ff94 <__flatcc_fb_parse@@Base+0x10e8>
   30bc8:	mov	r3, #0
   30bcc:	mov	r1, r7
   30bd0:	str	r3, [sp, #4]
   30bd4:	str	r3, [sp]
   30bd8:	add	r2, pc, r2
   30bdc:	mov	r0, sl
   30be0:	bl	2d4ec <__flatcc_error_report@@Base>
   30be4:	b	305a0 <__flatcc_fb_parse@@Base+0x16f4>
   30be8:	ldr	r2, [pc, #-3160]	; 2ff98 <__flatcc_fb_parse@@Base+0x10ec>
   30bec:	str	r5, [sp, #4]
   30bf0:	str	r5, [sp]
   30bf4:	mov	r3, r5
   30bf8:	ldr	r1, [sp, #32]
   30bfc:	add	r2, pc, r2
   30c00:	mov	r0, sl
   30c04:	bl	2d4ec <__flatcc_error_report@@Base>
   30c08:	b	305a0 <__flatcc_fb_parse@@Base+0x16f4>
   30c0c:	ldr	r2, [pc, #-3192]	; 2ff9c <__flatcc_fb_parse@@Base+0x10f0>
   30c10:	mov	r3, #0
   30c14:	str	r3, [sp, #4]
   30c18:	str	r3, [sp]
   30c1c:	add	r2, pc, r2
   30c20:	mov	r0, sl
   30c24:	bl	2d4ec <__flatcc_error_report@@Base>
   30c28:	b	2fb70 <__flatcc_fb_parse@@Base+0xcc4>
   30c2c:	mov	r3, r7
   30c30:	mov	r2, r4
   30c34:	mov	r0, sl
   30c38:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   30c3c:	b	2f4dc <__flatcc_fb_parse@@Base+0x630>
   30c40:	ldr	r2, [pc, #-3240]	; 2ffa0 <__flatcc_fb_parse@@Base+0x10f4>
   30c44:	cmp	r3, r2
   30c48:	beq	31638 <__flatcc_fb_parse@@Base+0x278c>
   30c4c:	bhi	30da8 <__flatcc_fb_parse@@Base+0x1efc>
   30c50:	ldr	r2, [pc, #-3252]	; 2ffa4 <__flatcc_fb_parse@@Base+0x10f8>
   30c54:	cmp	r3, r2
   30c58:	beq	31788 <__flatcc_fb_parse@@Base+0x28dc>
   30c5c:	bls	31428 <__flatcc_fb_parse@@Base+0x257c>
   30c60:	ldr	r2, [pc, #-3264]	; 2ffa8 <__flatcc_fb_parse@@Base+0x10fc>
   30c64:	cmp	r3, r2
   30c68:	beq	317dc <__flatcc_fb_parse@@Base+0x2930>
   30c6c:	bls	317ac <__flatcc_fb_parse@@Base+0x2900>
   30c70:	ldr	r2, [pc, #-3276]	; 2ffac <__flatcc_fb_parse@@Base+0x1100>
   30c74:	cmp	r3, r2
   30c78:	beq	31700 <__flatcc_fb_parse@@Base+0x2854>
   30c7c:	add	r2, r2, #16711680	; 0xff0000
   30c80:	add	r2, r2, #768	; 0x300
   30c84:	cmp	r3, r2
   30c88:	bne	31450 <__flatcc_fb_parse@@Base+0x25a4>
   30c8c:	ldr	r0, [pc, #-3300]	; 2ffb0 <__flatcc_fb_parse@@Base+0x1104>
   30c90:	mov	r2, #4
   30c94:	mov	r1, r4
   30c98:	add	r0, pc, r0
   30c9c:	bl	13eec <memcmp@plt>
   30ca0:	cmp	r0, #0
   30ca4:	movne	r0, #9
   30ca8:	mvneq	r0, #996	; 0x3e4
   30cac:	mov	r2, r4
   30cb0:	mov	r1, r0
   30cb4:	mov	r3, r5
   30cb8:	mov	r0, sl
   30cbc:	mov	r4, r5
   30cc0:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   30cc4:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   30cc8:	mov	r4, r7
   30ccc:	b	2ef30 <__flatcc_fb_parse@@Base+0x84>
   30cd0:	and	r1, r1, #223	; 0xdf
   30cd4:	cmp	r1, #69	; 0x45
   30cd8:	bne	2f414 <__flatcc_fb_parse@@Base+0x568>
   30cdc:	b	30878 <__flatcc_fb_parse@@Base+0x19cc>
   30ce0:	mov	r1, #1
   30ce4:	mov	r0, #65536	; 0x10000
   30ce8:	bl	13e98 <calloc@plt>
   30cec:	subs	r2, r0, #0
   30cf0:	beq	31b0c <__flatcc_fb_parse@@Base+0x2c60>
   30cf4:	ldr	r3, [sl, #48]	; 0x30
   30cf8:	add	r1, r2, #65536	; 0x10000
   30cfc:	str	r2, [sl, #48]	; 0x30
   30d00:	str	r3, [r2]
   30d04:	add	ip, r2, #16
   30d08:	ldr	r3, [r6, #20]
   30d0c:	add	r2, r2, #144	; 0x90
   30d10:	str	r1, [sl, #44]	; 0x2c
   30d14:	b	307a0 <__flatcc_fb_parse@@Base+0x18f4>
   30d18:	ldr	r2, [sl, #380]	; 0x17c
   30d1c:	ldr	r3, [sl, #376]	; 0x178
   30d20:	ldr	r1, [sl, #40]	; 0x28
   30d24:	str	r2, [sp, #4]
   30d28:	ldr	r2, [pc, #-3452]	; 2ffb4 <__flatcc_fb_parse@@Base+0x1108>
   30d2c:	str	r3, [sp]
   30d30:	add	r2, pc, r2
   30d34:	mov	r3, #0
   30d38:	mov	r0, sl
   30d3c:	bl	2d4ec <__flatcc_error_report@@Base>
   30d40:	b	30000 <__flatcc_fb_parse@@Base+0x1154>
   30d44:	mov	r2, r4
   30d48:	mov	r1, #58	; 0x3a
   30d4c:	mov	r0, sl
   30d50:	mov	r4, r3
   30d54:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   30d58:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   30d5c:	mov	r2, r4
   30d60:	mov	r1, #62	; 0x3e
   30d64:	mov	r0, sl
   30d68:	mov	r4, r3
   30d6c:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   30d70:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   30d74:	mov	r2, r4
   30d78:	mov	r1, #43	; 0x2b
   30d7c:	mov	r0, sl
   30d80:	mov	r4, r3
   30d84:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   30d88:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   30d8c:	mov	r2, r4
   30d90:	mov	r3, r5
   30d94:	mov	r1, #42	; 0x2a
   30d98:	mov	r0, sl
   30d9c:	mov	r4, r5
   30da0:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   30da4:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   30da8:	ldr	r2, [pc, #-3576]	; 2ffb8 <__flatcc_fb_parse@@Base+0x110c>
   30dac:	cmp	r3, r2
   30db0:	beq	315c4 <__flatcc_fb_parse@@Base+0x2718>
   30db4:	bls	31578 <__flatcc_fb_parse@@Base+0x26cc>
   30db8:	ldr	r2, [pc, #-3588]	; 2ffbc <__flatcc_fb_parse@@Base+0x1110>
   30dbc:	cmp	r3, r2
   30dc0:	beq	31a1c <__flatcc_fb_parse@@Base+0x2b70>
   30dc4:	bls	319ec <__flatcc_fb_parse@@Base+0x2b40>
   30dc8:	ldr	r2, [pc, #-3600]	; 2ffc0 <__flatcc_fb_parse@@Base+0x1114>
   30dcc:	cmp	r3, r2
   30dd0:	beq	31688 <__flatcc_fb_parse@@Base+0x27dc>
   30dd4:	add	r2, r2, #65024	; 0xfe00
   30dd8:	cmp	r3, r2
   30ddc:	bne	31450 <__flatcc_fb_parse@@Base+0x25a4>
   30de0:	ldr	r0, [pc, #-3620]	; 2ffc4 <__flatcc_fb_parse@@Base+0x1118>
   30de4:	mov	r2, #6
   30de8:	mov	r1, r4
   30dec:	add	r0, pc, r0
   30df0:	bl	13eec <memcmp@plt>
   30df4:	cmp	r0, #0
   30df8:	movne	r0, #9
   30dfc:	mvneq	r0, #972	; 0x3cc
   30e00:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   30e04:	ldr	r2, [pc, #-3652]	; 2ffc8 <__flatcc_fb_parse@@Base+0x111c>
   30e08:	cmp	r3, r2
   30e0c:	beq	31828 <__flatcc_fb_parse@@Base+0x297c>
   30e10:	bls	3152c <__flatcc_fb_parse@@Base+0x2680>
   30e14:	ldr	r2, [pc, #-3664]	; 2ffcc <__flatcc_fb_parse@@Base+0x1120>
   30e18:	cmp	r3, r2
   30e1c:	beq	31884 <__flatcc_fb_parse@@Base+0x29d8>
   30e20:	bls	31850 <__flatcc_fb_parse@@Base+0x29a4>
   30e24:	ldr	r2, [pc, #-3676]	; 2ffd0 <__flatcc_fb_parse@@Base+0x1124>
   30e28:	cmp	r3, r2
   30e2c:	beq	31918 <__flatcc_fb_parse@@Base+0x2a6c>
   30e30:	add	r2, r2, #3584	; 0xe00
   30e34:	add	r2, r2, #3
   30e38:	cmp	r3, r2
   30e3c:	bne	31450 <__flatcc_fb_parse@@Base+0x25a4>
   30e40:	ldr	r0, [pc, #-3700]	; 2ffd4 <__flatcc_fb_parse@@Base+0x1128>
   30e44:	mov	r2, #9
   30e48:	mov	r1, r4
   30e4c:	add	r0, pc, r0
   30e50:	bl	13eec <memcmp@plt>
   30e54:	ldr	r3, [pc, #-3716]	; 2ffd8 <__flatcc_fb_parse@@Base+0x112c>
   30e58:	cmp	r0, #0
   30e5c:	moveq	r0, r3
   30e60:	movne	r0, #9
   30e64:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   30e68:	mov	r2, r4
   30e6c:	mov	r1, #46	; 0x2e
   30e70:	mov	r0, sl
   30e74:	mov	r4, r3
   30e78:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   30e7c:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   30e80:	add	r5, r4, #2
   30e84:	cmp	r6, r5
   30e88:	moveq	r3, #0
   30e8c:	beq	30ea4 <__flatcc_fb_parse@@Base+0x1ff8>
   30e90:	ldrb	r3, [r4, #2]
   30e94:	cmp	r3, #33	; 0x21
   30e98:	cmpne	r3, #42	; 0x2a
   30e9c:	moveq	r3, #1
   30ea0:	movne	r3, #0
   30ea4:	add	r5, r5, r3
   30ea8:	sub	r4, r5, r4
   30eac:	cmp	r4, #3
   30eb0:	moveq	r3, #1
   30eb4:	movne	r3, #0
   30eb8:	str	r3, [sl, #32]
   30ebc:	beq	314ec <__flatcc_fb_parse@@Base+0x2640>
   30ec0:	ldr	r4, [pc, #-3820]	; 2ffdc <__flatcc_fb_parse@@Base+0x1130>
   30ec4:	mov	r8, #7
   30ec8:	sub	r2, r5, #1
   30ecc:	b	30ed4 <__flatcc_fb_parse@@Base+0x2028>
   30ed0:	mov	r2, r7
   30ed4:	add	r7, r2, #1
   30ed8:	cmp	r6, r7
   30edc:	beq	30fc4 <__flatcc_fb_parse@@Base+0x2118>
   30ee0:	ldrb	r3, [r2, #1]
   30ee4:	cmp	r3, #127	; 0x7f
   30ee8:	cmpne	r3, #31
   30eec:	bls	30ff4 <__flatcc_fb_parse@@Base+0x2148>
   30ef0:	cmp	r3, #47	; 0x2f
   30ef4:	bne	30ed0 <__flatcc_fb_parse@@Base+0x2024>
   30ef8:	ldrb	r3, [r7, #-1]
   30efc:	cmp	r3, #42	; 0x2a
   30f00:	bne	30ed0 <__flatcc_fb_parse@@Base+0x2024>
   30f04:	cmp	r5, r2
   30f08:	moveq	r7, r5
   30f0c:	beq	30f20 <__flatcc_fb_parse@@Base+0x2074>
   30f10:	ldr	r3, [sl, #32]
   30f14:	mov	r7, r2
   30f18:	cmp	r3, #0
   30f1c:	bne	30fdc <__flatcc_fb_parse@@Base+0x2130>
   30f20:	cmp	r7, r6
   30f24:	beq	3103c <__flatcc_fb_parse@@Base+0x2190>
   30f28:	ldrb	r3, [r7]
   30f2c:	cmp	r3, #0
   30f30:	beq	3103c <__flatcc_fb_parse@@Base+0x2190>
   30f34:	cmp	r3, #10
   30f38:	beq	3100c <__flatcc_fb_parse@@Base+0x2160>
   30f3c:	cmp	r3, #13
   30f40:	beq	31064 <__flatcc_fb_parse@@Base+0x21b8>
   30f44:	cmp	r3, #127	; 0x7f
   30f48:	cmpne	r3, #31
   30f4c:	movls	r2, #1
   30f50:	movhi	r2, #0
   30f54:	bhi	31058 <__flatcc_fb_parse@@Base+0x21ac>
   30f58:	cmp	r3, #9
   30f5c:	cmpne	r3, #32
   30f60:	add	r5, r7, #1
   30f64:	bne	31084 <__flatcc_fb_parse@@Base+0x21d8>
   30f68:	ldr	r3, [sl, #32]
   30f6c:	cmp	r3, #0
   30f70:	beq	30ec8 <__flatcc_fb_parse@@Base+0x201c>
   30f74:	mov	r2, r7
   30f78:	mov	r3, r5
   30f7c:	mov	r1, r4
   30f80:	mov	r0, sl
   30f84:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   30f88:	b	30ec8 <__flatcc_fb_parse@@Base+0x201c>
   30f8c:	add	r3, r4, #2
   30f90:	mov	r2, r4
   30f94:	ldr	r1, [pc, #-4028]	; 2ffe0 <__flatcc_fb_parse@@Base+0x1134>
   30f98:	mov	r0, sl
   30f9c:	mov	r4, r3
   30fa0:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   30fa4:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   30fa8:	add	r3, r4, #2
   30fac:	mov	r2, r4
   30fb0:	ldr	r1, [pc, #-4052]	; 2ffe4 <__flatcc_fb_parse@@Base+0x1138>
   30fb4:	mov	r0, sl
   30fb8:	mov	r4, r3
   30fbc:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   30fc0:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   30fc4:	cmp	r6, r5
   30fc8:	beq	313d0 <__flatcc_fb_parse@@Base+0x2524>
   30fcc:	ldr	r3, [sl, #32]
   30fd0:	cmp	r3, #0
   30fd4:	beq	313d0 <__flatcc_fb_parse@@Base+0x2524>
   30fd8:	mov	r7, r6
   30fdc:	mov	r2, r5
   30fe0:	mov	r3, r7
   30fe4:	mov	r1, r4
   30fe8:	mov	r0, sl
   30fec:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   30ff0:	b	30f20 <__flatcc_fb_parse@@Base+0x2074>
   30ff4:	cmp	r5, r7
   30ff8:	beq	30f2c <__flatcc_fb_parse@@Base+0x2080>
   30ffc:	ldr	r3, [sl, #32]
   31000:	cmp	r3, #0
   31004:	beq	30f28 <__flatcc_fb_parse@@Base+0x207c>
   31008:	b	30fdc <__flatcc_fb_parse@@Base+0x2130>
   3100c:	add	r5, r7, #1
   31010:	cmp	r6, r5
   31014:	beq	31024 <__flatcc_fb_parse@@Base+0x2178>
   31018:	ldrb	r3, [r7, #1]
   3101c:	cmp	r3, #13
   31020:	beq	3107c <__flatcc_fb_parse@@Base+0x21d0>
   31024:	ldr	r3, [sl, #64]	; 0x40
   31028:	str	r5, [sl, #60]	; 0x3c
   3102c:	add	r3, r3, #1
   31030:	str	r3, [sl, #64]	; 0x40
   31034:	b	30ec8 <__flatcc_fb_parse@@Base+0x201c>
   31038:	mov	r7, r4
   3103c:	mov	r3, r7
   31040:	mov	r2, r7
   31044:	mov	r1, #27
   31048:	mov	r0, sl
   3104c:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   31050:	mov	r4, r7
   31054:	b	2f748 <__flatcc_fb_parse@@Base+0x89c>
   31058:	add	r4, r7, #2
   3105c:	str	r2, [sl, #32]
   31060:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   31064:	add	r5, r7, #1
   31068:	cmp	r6, r5
   3106c:	beq	31024 <__flatcc_fb_parse@@Base+0x2178>
   31070:	ldrb	r3, [r7, #1]
   31074:	cmp	r3, #10
   31078:	bne	31024 <__flatcc_fb_parse@@Base+0x2178>
   3107c:	add	r5, r7, #2
   31080:	b	31024 <__flatcc_fb_parse@@Base+0x2178>
   31084:	mov	r2, r7
   31088:	mov	r3, r5
   3108c:	mov	r1, r8
   31090:	mov	r0, sl
   31094:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   31098:	b	30ec8 <__flatcc_fb_parse@@Base+0x201c>
   3109c:	add	r3, r4, #2
   310a0:	mov	r2, r4
   310a4:	ldr	r1, [pc, #2712]	; 31b44 <__flatcc_fb_parse@@Base+0x2c98>
   310a8:	mov	r0, sl
   310ac:	mov	r4, r3
   310b0:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   310b4:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   310b8:	add	r3, r4, #2
   310bc:	cmp	r6, r3
   310c0:	beq	310d0 <__flatcc_fb_parse@@Base+0x2224>
   310c4:	ldrb	r2, [r4, #2]
   310c8:	cmp	r2, #61	; 0x3d
   310cc:	beq	318fc <__flatcc_fb_parse@@Base+0x2a50>
   310d0:	mov	r2, r4
   310d4:	ldr	r1, [pc, #2668]	; 31b48 <__flatcc_fb_parse@@Base+0x2c9c>
   310d8:	mov	r0, sl
   310dc:	mov	r4, r3
   310e0:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   310e4:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   310e8:	mov	r2, r4
   310ec:	ldr	r1, [pc, #2648]	; 31b4c <__flatcc_fb_parse@@Base+0x2ca0>
   310f0:	mov	r3, r5
   310f4:	mov	r0, sl
   310f8:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   310fc:	ldrb	r1, [r4, #1]
   31100:	mov	r4, r5
   31104:	b	2ef30 <__flatcc_fb_parse@@Base+0x84>
   31108:	add	r3, r4, #2
   3110c:	cmp	r6, r3
   31110:	beq	31120 <__flatcc_fb_parse@@Base+0x2274>
   31114:	ldrb	r2, [r4, #2]
   31118:	cmp	r2, #46	; 0x2e
   3111c:	beq	3176c <__flatcc_fb_parse@@Base+0x28c0>
   31120:	mov	r2, r4
   31124:	ldr	r1, [pc, #2596]	; 31b50 <__flatcc_fb_parse@@Base+0x2ca4>
   31128:	mov	r0, sl
   3112c:	mov	r4, r3
   31130:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   31134:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   31138:	add	r3, r4, #2
   3113c:	mov	r2, r4
   31140:	ldr	r1, [pc, #2572]	; 31b54 <__flatcc_fb_parse@@Base+0x2ca8>
   31144:	mov	r0, sl
   31148:	mov	r4, r3
   3114c:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   31150:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   31154:	add	r3, r4, #2
   31158:	mov	r2, r4
   3115c:	ldr	r1, [pc, #2548]	; 31b58 <__flatcc_fb_parse@@Base+0x2cac>
   31160:	mov	r0, sl
   31164:	mov	r4, r3
   31168:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   3116c:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   31170:	mov	r2, r4
   31174:	mov	r1, #10
   31178:	mov	r0, sl
   3117c:	mov	r4, r3
   31180:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   31184:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   31188:	add	r3, r4, #2
   3118c:	mov	r2, r4
   31190:	ldr	r1, [pc, #2500]	; 31b5c <__flatcc_fb_parse@@Base+0x2cb0>
   31194:	mov	r0, sl
   31198:	mov	r4, r3
   3119c:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   311a0:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   311a4:	add	r3, r4, #2
   311a8:	cmp	r6, r3
   311ac:	beq	31458 <__flatcc_fb_parse@@Base+0x25ac>
   311b0:	ldrb	r2, [r4, #2]
   311b4:	cmp	r2, #60	; 0x3c
   311b8:	beq	314bc <__flatcc_fb_parse@@Base+0x2610>
   311bc:	cmp	r2, #61	; 0x3d
   311c0:	bne	31458 <__flatcc_fb_parse@@Base+0x25ac>
   311c4:	add	r3, r4, #3
   311c8:	mov	r2, r4
   311cc:	ldr	r1, [pc, #2444]	; 31b60 <__flatcc_fb_parse@@Base+0x2cb4>
   311d0:	mov	r0, sl
   311d4:	mov	r4, r3
   311d8:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   311dc:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   311e0:	add	r3, r4, #2
   311e4:	mov	r2, r4
   311e8:	ldr	r1, [pc, #2420]	; 31b64 <__flatcc_fb_parse@@Base+0x2cb8>
   311ec:	mov	r0, sl
   311f0:	mov	r4, r3
   311f4:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   311f8:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   311fc:	add	r3, r4, #2
   31200:	mov	r2, r4
   31204:	ldr	r1, [pc, #2396]	; 31b68 <__flatcc_fb_parse@@Base+0x2cbc>
   31208:	mov	r0, sl
   3120c:	mov	r4, r3
   31210:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   31214:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   31218:	add	r7, r4, #2
   3121c:	cmp	r6, r7
   31220:	moveq	r3, #0
   31224:	beq	3123c <__flatcc_fb_parse@@Base+0x2390>
   31228:	ldrb	r3, [r4, #2]
   3122c:	cmp	r3, #33	; 0x21
   31230:	cmpne	r3, #47	; 0x2f
   31234:	moveq	r3, #1
   31238:	movne	r3, #0
   3123c:	add	r7, r7, r3
   31240:	sub	r4, r7, r4
   31244:	cmp	r4, #3
   31248:	moveq	r3, #1
   3124c:	movne	r3, #0
   31250:	str	r3, [sl, #32]
   31254:	beq	31514 <__flatcc_fb_parse@@Base+0x2668>
   31258:	ldr	r8, [pc, #2316]	; 31b6c <__flatcc_fb_parse@@Base+0x2cc0>
   3125c:	mov	r9, #7
   31260:	sub	r5, r7, #1
   31264:	b	3127c <__flatcc_fb_parse@@Base+0x23d0>
   31268:	ldrb	r3, [r5, #1]
   3126c:	cmp	r3, #127	; 0x7f
   31270:	cmpne	r3, #31
   31274:	bls	31308 <__flatcc_fb_parse@@Base+0x245c>
   31278:	mov	r5, r4
   3127c:	add	r4, r5, #1
   31280:	cmp	r6, r4
   31284:	bne	31268 <__flatcc_fb_parse@@Base+0x23bc>
   31288:	cmp	r6, r7
   3128c:	beq	3103c <__flatcc_fb_parse@@Base+0x2190>
   31290:	ldr	r3, [sl, #32]
   31294:	cmp	r3, #0
   31298:	beq	313d0 <__flatcc_fb_parse@@Base+0x2524>
   3129c:	mov	r4, r6
   312a0:	mov	r2, r7
   312a4:	mov	r3, r4
   312a8:	mov	r1, r8
   312ac:	mov	r0, sl
   312b0:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   312b4:	cmp	r6, r4
   312b8:	beq	313d0 <__flatcc_fb_parse@@Base+0x2524>
   312bc:	ldrb	r3, [r4]
   312c0:	cmp	r3, #0
   312c4:	beq	31038 <__flatcc_fb_parse@@Base+0x218c>
   312c8:	cmp	r3, #13
   312cc:	cmpne	r3, #10
   312d0:	beq	31338 <__flatcc_fb_parse@@Base+0x248c>
   312d4:	cmp	r3, #9
   312d8:	cmpne	r3, #32
   312dc:	add	r7, r5, #2
   312e0:	bne	31320 <__flatcc_fb_parse@@Base+0x2474>
   312e4:	ldr	r3, [sl, #32]
   312e8:	cmp	r3, #0
   312ec:	beq	31260 <__flatcc_fb_parse@@Base+0x23b4>
   312f0:	mov	r2, r4
   312f4:	mov	r3, r7
   312f8:	mov	r1, r8
   312fc:	mov	r0, sl
   31300:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   31304:	b	31260 <__flatcc_fb_parse@@Base+0x23b4>
   31308:	cmp	r7, r4
   3130c:	beq	312bc <__flatcc_fb_parse@@Base+0x2410>
   31310:	ldr	r3, [sl, #32]
   31314:	cmp	r3, #0
   31318:	beq	312bc <__flatcc_fb_parse@@Base+0x2410>
   3131c:	b	312a0 <__flatcc_fb_parse@@Base+0x23f4>
   31320:	mov	r2, r4
   31324:	mov	r3, r7
   31328:	mov	r1, r9
   3132c:	mov	r0, sl
   31330:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   31334:	b	31260 <__flatcc_fb_parse@@Base+0x23b4>
   31338:	mov	r3, #0
   3133c:	str	r3, [sl, #32]
   31340:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   31344:	add	r3, r4, #2
   31348:	mov	r2, r4
   3134c:	ldr	r1, [pc, #2076]	; 31b70 <__flatcc_fb_parse@@Base+0x2cc4>
   31350:	mov	r0, sl
   31354:	mov	r4, r3
   31358:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   3135c:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   31360:	mov	r2, r4
   31364:	mov	r3, r5
   31368:	mov	r1, #5
   3136c:	mov	r0, sl
   31370:	mov	r4, r5
   31374:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   31378:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   3137c:	ldrb	r1, [r5]
   31380:	mov	r5, r2
   31384:	b	2f890 <__flatcc_fb_parse@@Base+0x9e4>
   31388:	add	r1, sp, #40	; 0x28
   3138c:	mov	r0, sl
   31390:	bl	2d6e4 <__flatcc_error_report@@Base+0x1f8>
   31394:	ldr	r2, [pc, #2008]	; 31b74 <__flatcc_fb_parse@@Base+0x2cc8>
   31398:	mov	r3, r5
   3139c:	add	r2, pc, r2
   313a0:	mov	r1, #59	; 0x3b
   313a4:	mov	r0, sl
   313a8:	bl	2d82c <__flatcc_error_report@@Base+0x340>
   313ac:	ldr	r5, [sp, #40]	; 0x28
   313b0:	mov	r2, #0
   313b4:	mov	r1, r5
   313b8:	ldr	r0, [sl, #412]	; 0x19c
   313bc:	bl	2c404 <fb_scope_table_find@@Base>
   313c0:	cmp	r0, #0
   313c4:	beq	31ac8 <__flatcc_fb_parse@@Base+0x2c1c>
   313c8:	str	r0, [sl, #544]	; 0x220
   313cc:	b	2fb70 <__flatcc_fb_parse@@Base+0xcc4>
   313d0:	mov	r7, r6
   313d4:	b	3103c <__flatcc_fb_parse@@Base+0x2190>
   313d8:	add	r3, r4, #2
   313dc:	mov	r2, r4
   313e0:	orr	r1, r1, #15616	; 0x3d00
   313e4:	mov	r0, sl
   313e8:	mov	r4, r3
   313ec:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   313f0:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   313f4:	mov	r2, r4
   313f8:	ldr	r1, [pc, #1912]	; 31b78 <__flatcc_fb_parse@@Base+0x2ccc>
   313fc:	mov	r0, sl
   31400:	mov	r4, r3
   31404:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   31408:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   3140c:	add	r3, r4, #3
   31410:	mov	r2, r4
   31414:	ldr	r1, [pc, #1888]	; 31b7c <__flatcc_fb_parse@@Base+0x2cd0>
   31418:	mov	r0, sl
   3141c:	mov	r4, r3
   31420:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   31424:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   31428:	ldr	r2, [pc, #1872]	; 31b80 <__flatcc_fb_parse@@Base+0x2cd4>
   3142c:	cmp	r3, r2
   31430:	beq	316d8 <__flatcc_fb_parse@@Base+0x282c>
   31434:	add	r2, r2, #327680	; 0x50000
   31438:	add	r2, r2, #251	; 0xfb
   3143c:	cmp	r3, r2
   31440:	beq	318d4 <__flatcc_fb_parse@@Base+0x2a28>
   31444:	ldr	r2, [pc, #1848]	; 31b84 <__flatcc_fb_parse@@Base+0x2cd8>
   31448:	cmp	r3, r2
   3144c:	beq	318ac <__flatcc_fb_parse@@Base+0x2a00>
   31450:	mov	r0, #9
   31454:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   31458:	mov	r2, r4
   3145c:	ldr	r1, [pc, #1828]	; 31b88 <__flatcc_fb_parse@@Base+0x2cdc>
   31460:	mov	r0, sl
   31464:	mov	r4, r3
   31468:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   3146c:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   31470:	ldr	r2, [pc, #1812]	; 31b8c <__flatcc_fb_parse@@Base+0x2ce0>
   31474:	cmp	r3, r2
   31478:	beq	319c4 <__flatcc_fb_parse@@Base+0x2b18>
   3147c:	ldr	r2, [pc, #1804]	; 31b90 <__flatcc_fb_parse@@Base+0x2ce4>
   31480:	cmp	r3, r2
   31484:	beq	3199c <__flatcc_fb_parse@@Base+0x2af0>
   31488:	ldr	r2, [pc, #1796]	; 31b94 <__flatcc_fb_parse@@Base+0x2ce8>
   3148c:	cmp	r3, r2
   31490:	bne	31450 <__flatcc_fb_parse@@Base+0x25a4>
   31494:	ldr	r0, [pc, #1788]	; 31b98 <__flatcc_fb_parse@@Base+0x2cec>
   31498:	mov	r2, #6
   3149c:	mov	r1, r4
   314a0:	add	r0, pc, r0
   314a4:	bl	13eec <memcmp@plt>
   314a8:	ldr	r3, [pc, #1772]	; 31b9c <__flatcc_fb_parse@@Base+0x2cf0>
   314ac:	cmp	r0, #0
   314b0:	moveq	r0, r3
   314b4:	movne	r0, #9
   314b8:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   314bc:	add	r3, r4, #3
   314c0:	cmp	r6, r3
   314c4:	beq	314d4 <__flatcc_fb_parse@@Base+0x2628>
   314c8:	ldrb	r2, [r4, #3]
   314cc:	cmp	r2, #61	; 0x3d
   314d0:	beq	31aac <__flatcc_fb_parse@@Base+0x2c00>
   314d4:	mov	r2, r4
   314d8:	ldr	r1, [pc, #1728]	; 31ba0 <__flatcc_fb_parse@@Base+0x2cf4>
   314dc:	mov	r0, sl
   314e0:	mov	r4, r3
   314e4:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   314e8:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   314ec:	mov	r3, r5
   314f0:	mov	r2, r5
   314f4:	ldr	r1, [pc, #1648]	; 31b6c <__flatcc_fb_parse@@Base+0x2cc0>
   314f8:	mov	r0, sl
   314fc:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   31500:	b	30ec0 <__flatcc_fb_parse@@Base+0x2014>
   31504:	mov	r4, r6
   31508:	b	2f298 <__flatcc_fb_parse@@Base+0x3ec>
   3150c:	mov	r7, r6
   31510:	b	2f75c <__flatcc_fb_parse@@Base+0x8b0>
   31514:	mov	r3, r7
   31518:	mov	r2, r7
   3151c:	ldr	r1, [pc, #1608]	; 31b6c <__flatcc_fb_parse@@Base+0x2cc0>
   31520:	mov	r0, sl
   31524:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   31528:	b	31258 <__flatcc_fb_parse@@Base+0x23ac>
   3152c:	sub	r2, r2, #3584	; 0xe00
   31530:	cmp	r3, r2
   31534:	beq	31a68 <__flatcc_fb_parse@@Base+0x2bbc>
   31538:	add	r2, r2, #2048	; 0x800
   3153c:	add	r2, r2, #4
   31540:	cmp	r3, r2
   31544:	beq	31a44 <__flatcc_fb_parse@@Base+0x2b98>
   31548:	ldr	r2, [pc, #1620]	; 31ba4 <__flatcc_fb_parse@@Base+0x2cf8>
   3154c:	cmp	r3, r2
   31550:	bne	31450 <__flatcc_fb_parse@@Base+0x25a4>
   31554:	ldr	r0, [pc, #1612]	; 31ba8 <__flatcc_fb_parse@@Base+0x2cfc>
   31558:	mov	r2, #4
   3155c:	mov	r1, r4
   31560:	add	r0, pc, r0
   31564:	bl	13eec <memcmp@plt>
   31568:	cmp	r0, #0
   3156c:	movne	r0, #9
   31570:	mvneq	r0, #992	; 0x3e0
   31574:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   31578:	ldr	r2, [pc, #1580]	; 31bac <__flatcc_fb_parse@@Base+0x2d00>
   3157c:	cmp	r3, r2
   31580:	beq	31614 <__flatcc_fb_parse@@Base+0x2768>
   31584:	ldr	r2, [pc, #1572]	; 31bb0 <__flatcc_fb_parse@@Base+0x2d04>
   31588:	cmp	r3, r2
   3158c:	beq	315ec <__flatcc_fb_parse@@Base+0x2740>
   31590:	ldr	r2, [pc, #1564]	; 31bb4 <__flatcc_fb_parse@@Base+0x2d08>
   31594:	cmp	r3, r2
   31598:	bne	31450 <__flatcc_fb_parse@@Base+0x25a4>
   3159c:	ldr	r0, [pc, #1556]	; 31bb8 <__flatcc_fb_parse@@Base+0x2d0c>
   315a0:	mov	r2, #5
   315a4:	mov	r1, r4
   315a8:	add	r0, pc, r0
   315ac:	bl	13eec <memcmp@plt>
   315b0:	ldr	r3, [pc, #1540]	; 31bbc <__flatcc_fb_parse@@Base+0x2d10>
   315b4:	cmp	r0, #0
   315b8:	moveq	r0, r3
   315bc:	movne	r0, #9
   315c0:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   315c4:	ldr	r0, [pc, #1524]	; 31bc0 <__flatcc_fb_parse@@Base+0x2d14>
   315c8:	mov	r2, #4
   315cc:	mov	r1, r4
   315d0:	add	r0, pc, r0
   315d4:	bl	13eec <memcmp@plt>
   315d8:	ldr	r3, [pc, #1508]	; 31bc4 <__flatcc_fb_parse@@Base+0x2d18>
   315dc:	cmp	r0, #0
   315e0:	moveq	r0, r3
   315e4:	movne	r0, #9
   315e8:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   315ec:	ldr	r0, [pc, #1492]	; 31bc8 <__flatcc_fb_parse@@Base+0x2d1c>
   315f0:	mov	r2, #5
   315f4:	mov	r1, r4
   315f8:	add	r0, pc, r0
   315fc:	bl	13eec <memcmp@plt>
   31600:	ldr	r3, [pc, #1476]	; 31bcc <__flatcc_fb_parse@@Base+0x2d20>
   31604:	cmp	r0, #0
   31608:	moveq	r0, r3
   3160c:	movne	r0, #9
   31610:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   31614:	ldr	r0, [pc, #1460]	; 31bd0 <__flatcc_fb_parse@@Base+0x2d24>
   31618:	mov	r2, #15
   3161c:	mov	r1, r4
   31620:	add	r0, pc, r0
   31624:	bl	13eec <memcmp@plt>
   31628:	cmp	r0, #0
   3162c:	movne	r0, #9
   31630:	mvneq	r0, #964	; 0x3c4
   31634:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   31638:	ldr	r0, [pc, #1428]	; 31bd4 <__flatcc_fb_parse@@Base+0x2d28>
   3163c:	mov	r2, #14
   31640:	mov	r1, r4
   31644:	add	r0, pc, r0
   31648:	bl	13eec <memcmp@plt>
   3164c:	ldr	r3, [pc, #1412]	; 31bd8 <__flatcc_fb_parse@@Base+0x2d2c>
   31650:	cmp	r0, #0
   31654:	moveq	r0, r3
   31658:	movne	r0, #9
   3165c:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   31660:	ldr	r0, [pc, #1396]	; 31bdc <__flatcc_fb_parse@@Base+0x2d30>
   31664:	mov	r2, #6
   31668:	mov	r1, r4
   3166c:	add	r0, pc, r0
   31670:	bl	13eec <memcmp@plt>
   31674:	ldr	r3, [pc, #1380]	; 31be0 <__flatcc_fb_parse@@Base+0x2d34>
   31678:	cmp	r0, #0
   3167c:	moveq	r0, r3
   31680:	movne	r0, #9
   31684:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   31688:	ldr	r0, [pc, #1364]	; 31be4 <__flatcc_fb_parse@@Base+0x2d38>
   3168c:	mov	r2, #6
   31690:	mov	r1, r4
   31694:	add	r0, pc, r0
   31698:	bl	13eec <memcmp@plt>
   3169c:	ldr	r3, [pc, #1348]	; 31be8 <__flatcc_fb_parse@@Base+0x2d3c>
   316a0:	cmp	r0, #0
   316a4:	moveq	r0, r3
   316a8:	movne	r0, #9
   316ac:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   316b0:	ldr	r0, [pc, #1332]	; 31bec <__flatcc_fb_parse@@Base+0x2d40>
   316b4:	mov	r2, #11
   316b8:	mov	r1, r4
   316bc:	add	r0, pc, r0
   316c0:	bl	13eec <memcmp@plt>
   316c4:	ldr	r3, [pc, #1316]	; 31bf0 <__flatcc_fb_parse@@Base+0x2d44>
   316c8:	cmp	r0, #0
   316cc:	moveq	r0, r3
   316d0:	movne	r0, #9
   316d4:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   316d8:	ldr	r0, [pc, #1300]	; 31bf4 <__flatcc_fb_parse@@Base+0x2d48>
   316dc:	mov	r2, #9
   316e0:	mov	r1, r4
   316e4:	add	r0, pc, r0
   316e8:	bl	13eec <memcmp@plt>
   316ec:	ldr	r3, [pc, #1284]	; 31bf8 <__flatcc_fb_parse@@Base+0x2d4c>
   316f0:	cmp	r0, #0
   316f4:	moveq	r0, r3
   316f8:	movne	r0, #9
   316fc:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   31700:	ldr	r0, [pc, #1268]	; 31bfc <__flatcc_fb_parse@@Base+0x2d50>
   31704:	mov	r2, #4
   31708:	mov	r1, r4
   3170c:	add	r0, pc, r0
   31710:	bl	13eec <memcmp@plt>
   31714:	ldr	r3, [pc, #1252]	; 31c00 <__flatcc_fb_parse@@Base+0x2d54>
   31718:	cmp	r0, #0
   3171c:	moveq	r0, r3
   31720:	movne	r0, #9
   31724:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   31728:	add	r3, r4, #3
   3172c:	mov	r2, r4
   31730:	ldr	r1, [pc, #1228]	; 31c04 <__flatcc_fb_parse@@Base+0x2d58>
   31734:	mov	r0, sl
   31738:	mov	r4, r3
   3173c:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   31740:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   31744:	ldr	r0, [pc, #1212]	; 31c08 <__flatcc_fb_parse@@Base+0x2d5c>
   31748:	mov	r2, #6
   3174c:	mov	r1, r4
   31750:	add	r0, pc, r0
   31754:	bl	13eec <memcmp@plt>
   31758:	ldr	r3, [pc, #1196]	; 31c0c <__flatcc_fb_parse@@Base+0x2d60>
   3175c:	cmp	r0, #0
   31760:	moveq	r0, r3
   31764:	movne	r0, #9
   31768:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   3176c:	add	r3, r4, #3
   31770:	mov	r2, r4
   31774:	ldr	r1, [pc, #1172]	; 31c10 <__flatcc_fb_parse@@Base+0x2d64>
   31778:	mov	r0, sl
   3177c:	mov	r4, r3
   31780:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   31784:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   31788:	ldr	r0, [pc, #1156]	; 31c14 <__flatcc_fb_parse@@Base+0x2d68>
   3178c:	mov	r2, #5
   31790:	mov	r1, r4
   31794:	add	r0, pc, r0
   31798:	bl	13eec <memcmp@plt>
   3179c:	cmp	r0, #0
   317a0:	movne	r0, #9
   317a4:	mvneq	r0, #976	; 0x3d0
   317a8:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   317ac:	ldr	r2, [pc, #1124]	; 31c18 <__flatcc_fb_parse@@Base+0x2d6c>
   317b0:	cmp	r3, r2
   317b4:	bne	31450 <__flatcc_fb_parse@@Base+0x25a4>
   317b8:	ldr	r0, [pc, #1116]	; 31c1c <__flatcc_fb_parse@@Base+0x2d70>
   317bc:	mov	r2, #4
   317c0:	mov	r1, r4
   317c4:	add	r0, pc, r0
   317c8:	bl	13eec <memcmp@plt>
   317cc:	cmp	r0, #0
   317d0:	movne	r0, #9
   317d4:	mvneq	r0, #988	; 0x3dc
   317d8:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   317dc:	ldr	r0, [pc, #1084]	; 31c20 <__flatcc_fb_parse@@Base+0x2d74>
   317e0:	mov	r2, #6
   317e4:	mov	r1, r4
   317e8:	add	r0, pc, r0
   317ec:	bl	13eec <memcmp@plt>
   317f0:	ldr	r3, [pc, #1068]	; 31c24 <__flatcc_fb_parse@@Base+0x2d78>
   317f4:	cmp	r0, #0
   317f8:	moveq	r0, r3
   317fc:	movne	r0, #9
   31800:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   31804:	ldr	r0, [pc, #1052]	; 31c28 <__flatcc_fb_parse@@Base+0x2d7c>
   31808:	mov	r2, #5
   3180c:	mov	r1, r4
   31810:	add	r0, pc, r0
   31814:	bl	13eec <memcmp@plt>
   31818:	cmp	r0, #0
   3181c:	movne	r0, #9
   31820:	mvneq	r0, #980	; 0x3d4
   31824:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   31828:	ldr	r0, [pc, #1020]	; 31c2c <__flatcc_fb_parse@@Base+0x2d80>
   3182c:	mov	r2, #5
   31830:	mov	r1, r4
   31834:	add	r0, pc, r0
   31838:	bl	13eec <memcmp@plt>
   3183c:	ldr	r3, [pc, #1004]	; 31c30 <__flatcc_fb_parse@@Base+0x2d84>
   31840:	cmp	r0, #0
   31844:	moveq	r0, r3
   31848:	movne	r0, #9
   3184c:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   31850:	ldr	r2, [pc, #988]	; 31c34 <__flatcc_fb_parse@@Base+0x2d88>
   31854:	cmp	r3, r2
   31858:	bne	31450 <__flatcc_fb_parse@@Base+0x25a4>
   3185c:	ldr	r0, [pc, #980]	; 31c38 <__flatcc_fb_parse@@Base+0x2d8c>
   31860:	mov	r2, #5
   31864:	mov	r1, r4
   31868:	add	r0, pc, r0
   3186c:	bl	13eec <memcmp@plt>
   31870:	ldr	r3, [pc, #964]	; 31c3c <__flatcc_fb_parse@@Base+0x2d90>
   31874:	cmp	r0, #0
   31878:	moveq	r0, r3
   3187c:	movne	r0, #9
   31880:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   31884:	ldr	r0, [pc, #948]	; 31c40 <__flatcc_fb_parse@@Base+0x2d94>
   31888:	mov	r2, #7
   3188c:	mov	r1, r4
   31890:	add	r0, pc, r0
   31894:	bl	13eec <memcmp@plt>
   31898:	ldr	r3, [pc, #932]	; 31c44 <__flatcc_fb_parse@@Base+0x2d98>
   3189c:	cmp	r0, #0
   318a0:	moveq	r0, r3
   318a4:	movne	r0, #9
   318a8:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   318ac:	ldr	r0, [pc, #916]	; 31c48 <__flatcc_fb_parse@@Base+0x2d9c>
   318b0:	mov	r2, #4
   318b4:	mov	r1, r4
   318b8:	add	r0, pc, r0
   318bc:	bl	13eec <memcmp@plt>
   318c0:	ldr	r3, [pc, #900]	; 31c4c <__flatcc_fb_parse@@Base+0x2da0>
   318c4:	cmp	r0, #0
   318c8:	moveq	r0, r3
   318cc:	movne	r0, #9
   318d0:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   318d4:	ldr	r0, [pc, #884]	; 31c50 <__flatcc_fb_parse@@Base+0x2da4>
   318d8:	mov	r2, #4
   318dc:	mov	r1, r4
   318e0:	add	r0, pc, r0
   318e4:	bl	13eec <memcmp@plt>
   318e8:	ldr	r3, [pc, #868]	; 31c54 <__flatcc_fb_parse@@Base+0x2da8>
   318ec:	cmp	r0, #0
   318f0:	moveq	r0, r3
   318f4:	movne	r0, #9
   318f8:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   318fc:	add	r3, r4, #3
   31900:	mov	r2, r4
   31904:	ldr	r1, [pc, #844]	; 31c58 <__flatcc_fb_parse@@Base+0x2dac>
   31908:	mov	r0, sl
   3190c:	mov	r4, r3
   31910:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   31914:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   31918:	ldr	r0, [pc, #828]	; 31c5c <__flatcc_fb_parse@@Base+0x2db0>
   3191c:	mov	r2, #6
   31920:	mov	r1, r4
   31924:	add	r0, pc, r0
   31928:	bl	13eec <memcmp@plt>
   3192c:	ldr	r3, [pc, #812]	; 31c60 <__flatcc_fb_parse@@Base+0x2db4>
   31930:	cmp	r0, #0
   31934:	moveq	r0, r3
   31938:	movne	r0, #9
   3193c:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   31940:	ldr	r2, [pc, #796]	; 31c64 <__flatcc_fb_parse@@Base+0x2db8>
   31944:	cmp	r3, r2
   31948:	bne	31450 <__flatcc_fb_parse@@Base+0x25a4>
   3194c:	ldr	r0, [pc, #788]	; 31c68 <__flatcc_fb_parse@@Base+0x2dbc>
   31950:	mov	r2, #7
   31954:	mov	r1, r4
   31958:	add	r0, pc, r0
   3195c:	bl	13eec <memcmp@plt>
   31960:	ldr	r3, [pc, #772]	; 31c6c <__flatcc_fb_parse@@Base+0x2dc0>
   31964:	cmp	r0, #0
   31968:	moveq	r0, r3
   3196c:	movne	r0, #9
   31970:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   31974:	ldr	r0, [pc, #756]	; 31c70 <__flatcc_fb_parse@@Base+0x2dc4>
   31978:	mov	r2, #5
   3197c:	mov	r1, r4
   31980:	add	r0, pc, r0
   31984:	bl	13eec <memcmp@plt>
   31988:	ldr	r3, [pc, #740]	; 31c74 <__flatcc_fb_parse@@Base+0x2dc8>
   3198c:	cmp	r0, #0
   31990:	moveq	r0, r3
   31994:	movne	r0, #9
   31998:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   3199c:	ldr	r0, [pc, #724]	; 31c78 <__flatcc_fb_parse@@Base+0x2dcc>
   319a0:	mov	r2, #5
   319a4:	mov	r1, r4
   319a8:	add	r0, pc, r0
   319ac:	bl	13eec <memcmp@plt>
   319b0:	ldr	r3, [pc, #708]	; 31c7c <__flatcc_fb_parse@@Base+0x2dd0>
   319b4:	cmp	r0, #0
   319b8:	moveq	r0, r3
   319bc:	movne	r0, #9
   319c0:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   319c4:	ldr	r0, [pc, #692]	; 31c80 <__flatcc_fb_parse@@Base+0x2dd4>
   319c8:	mov	r2, #7
   319cc:	mov	r1, r4
   319d0:	add	r0, pc, r0
   319d4:	bl	13eec <memcmp@plt>
   319d8:	ldr	r3, [pc, #676]	; 31c84 <__flatcc_fb_parse@@Base+0x2dd8>
   319dc:	cmp	r0, #0
   319e0:	moveq	r0, r3
   319e4:	movne	r0, #9
   319e8:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   319ec:	ldr	r2, [pc, #660]	; 31c88 <__flatcc_fb_parse@@Base+0x2ddc>
   319f0:	cmp	r3, r2
   319f4:	bne	31450 <__flatcc_fb_parse@@Base+0x25a4>
   319f8:	ldr	r0, [pc, #652]	; 31c8c <__flatcc_fb_parse@@Base+0x2de0>
   319fc:	mov	r2, #5
   31a00:	mov	r1, r4
   31a04:	add	r0, pc, r0
   31a08:	bl	13eec <memcmp@plt>
   31a0c:	cmp	r0, #0
   31a10:	movne	r0, #9
   31a14:	mvneq	r0, #984	; 0x3d8
   31a18:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   31a1c:	ldr	r0, [pc, #620]	; 31c90 <__flatcc_fb_parse@@Base+0x2de4>
   31a20:	mov	r2, #3
   31a24:	mov	r1, r4
   31a28:	add	r0, pc, r0
   31a2c:	bl	13eec <memcmp@plt>
   31a30:	ldr	r3, [pc, #604]	; 31c94 <__flatcc_fb_parse@@Base+0x2de8>
   31a34:	cmp	r0, #0
   31a38:	moveq	r0, r3
   31a3c:	movne	r0, #9
   31a40:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   31a44:	ldr	r0, [pc, #588]	; 31c98 <__flatcc_fb_parse@@Base+0x2dec>
   31a48:	mov	r2, #9
   31a4c:	mov	r1, r4
   31a50:	add	r0, pc, r0
   31a54:	bl	13eec <memcmp@plt>
   31a58:	cmp	r0, #0
   31a5c:	movne	r0, #9
   31a60:	mvneq	r0, #968	; 0x3c8
   31a64:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   31a68:	ldr	r0, [pc, #556]	; 31c9c <__flatcc_fb_parse@@Base+0x2df0>
   31a6c:	mov	r2, #5
   31a70:	mov	r1, r4
   31a74:	add	r0, pc, r0
   31a78:	bl	13eec <memcmp@plt>
   31a7c:	ldr	r3, [pc, #540]	; 31ca0 <__flatcc_fb_parse@@Base+0x2df4>
   31a80:	cmp	r0, #0
   31a84:	moveq	r0, r3
   31a88:	movne	r0, #9
   31a8c:	b	30cac <__flatcc_fb_parse@@Base+0x1e00>
   31a90:	add	r3, r4, #4
   31a94:	mov	r2, r4
   31a98:	ldr	r1, [pc, #516]	; 31ca4 <__flatcc_fb_parse@@Base+0x2df8>
   31a9c:	mov	r0, sl
   31aa0:	mov	r4, r3
   31aa4:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   31aa8:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   31aac:	add	r3, r4, #4
   31ab0:	mov	r2, r4
   31ab4:	ldr	r1, [pc, #492]	; 31ca8 <__flatcc_fb_parse@@Base+0x2dfc>
   31ab8:	mov	r0, sl
   31abc:	mov	r4, r3
   31ac0:	bl	2d198 <__flatcc_fb_default_error_out@@Base+0x30>
   31ac4:	b	2ef24 <__flatcc_fb_parse@@Base+0x78>
   31ac8:	ldr	r4, [sl, #52]	; 0x34
   31acc:	ldr	r2, [sl, #44]	; 0x2c
   31ad0:	add	r3, r4, #32
   31ad4:	cmp	r3, r2
   31ad8:	bhi	31b10 <__flatcc_fb_parse@@Base+0x2c64>
   31adc:	add	r2, sl, #476	; 0x1dc
   31ae0:	mov	ip, r4
   31ae4:	ldm	r2, {r0, r1}
   31ae8:	str	r3, [sl, #52]	; 0x34
   31aec:	mov	r2, #1
   31af0:	str	r5, [ip], #20
   31af4:	stm	ip, {r0, r1}
   31af8:	mov	r1, r4
   31afc:	ldr	r0, [sl, #412]	; 0x19c
   31b00:	bl	2c3e0 <fb_scope_table_insert_item@@Base>
   31b04:	mov	r0, r4
   31b08:	b	313c8 <__flatcc_fb_parse@@Base+0x251c>
   31b0c:	bl	140b0 <__assert_fail@plt+0x80>
   31b10:	mov	r1, #1
   31b14:	mov	r0, #65536	; 0x10000
   31b18:	bl	13e98 <calloc@plt>
   31b1c:	cmp	r0, #0
   31b20:	beq	31b0c <__flatcc_fb_parse@@Base+0x2c60>
   31b24:	ldr	r3, [sl, #48]	; 0x30
   31b28:	add	r2, r0, #65536	; 0x10000
   31b2c:	str	r3, [r0]
   31b30:	add	r4, r0, #16
   31b34:	str	r0, [sl, #48]	; 0x30
   31b38:	add	r3, r0, #48	; 0x30
   31b3c:	str	r2, [sl, #44]	; 0x2c
   31b40:	b	31adc <__flatcc_fb_parse@@Base+0x2c30>
   31b44:	andeq	r2, r0, fp, lsr #22
   31b48:	andeq	r3, r0, sl, lsr sl
   31b4c:	andeq	r2, r0, sl, lsr #20
   31b50:	andeq	r2, r0, lr, lsr #28
   31b54:	andeq	r3, r0, lr, lsr sp
   31b58:	andeq	r3, r0, ip, ror sp
   31b5c:	andeq	r3, r0, ip, lsr sp
   31b60:	eorseq	r3, sp, ip, lsr ip
   31b64:	andeq	r3, r0, sp, lsr #28
   31b68:	andeq	r3, r0, pc, lsr #26
   31b6c:			; <UNDEFINED> instruction: 0xfffffc3c
   31b70:	andeq	r3, r0, sp, lsr #26
   31b74:	andeq	r5, r2, ip, asr #20
   31b78:	andeq	r3, r0, lr, lsr lr
   31b7c:	eorseq	r3, sp, lr, lsr lr
   31b80:	ldrbvs	r6, [r4, #-313]!	; 0xfffffec7
   31b84:	ldrbvs	r7, [r2, #-1076]!	; 0xfffffbcc
   31b88:	andeq	r3, r0, ip, lsr ip
   31b8c:	rsbcc	r6, ip, #57671680	; 0x3700000
   31b90:	rsbcc	r6, lr, #868352	; 0xd4000
   31b94:	rsbcc	r7, r9, #226492416	; 0xd800000
   31b98:	ldrdeq	lr, [r0], -r8
   31b9c:			; <UNDEFINED> instruction: 0xfffffc2d
   31ba0:	eorseq	r3, ip, ip, lsr ip
   31ba4:	stmdacc	lr!, {r2, r4, r5, r8, fp, sp, lr}^
   31ba8:	andeq	lr, r0, r8, asr #16
   31bac:	rsbvc	r6, r9, #66060288	; 0x3f00000
   31bb0:	strbtvc	r7, [r8], #-821	; 0xfffffccb
   31bb4:	mcrvs	5, 3, r7, cr14, cr5, {1}
   31bb8:	andeq	r5, r2, r8, lsl r7
   31bbc:			; <UNDEFINED> instruction: 0xfffffc30
   31bc0:	ldrdeq	r5, [r2], -r8
   31bc4:			; <UNDEFINED> instruction: 0xfffffc25
   31bc8:	ldrdeq	r5, [r2], -r0
   31bcc:			; <UNDEFINED> instruction: 0xfffffc28
   31bd0:	andeq	r5, r2, r0, lsl r7
   31bd4:	ldrdeq	r5, [r2], -ip
   31bd8:			; <UNDEFINED> instruction: 0xfffffc3a
   31bdc:	andeq	lr, r0, r4, lsl r7
   31be0:			; <UNDEFINED> instruction: 0xfffffc2c
   31be4:	andeq	r5, r2, ip, lsr r6
   31be8:			; <UNDEFINED> instruction: 0xfffffc34
   31bec:	andeq	r5, r2, r8, asr r6
   31bf0:			; <UNDEFINED> instruction: 0xfffffc39
   31bf4:	andeq	r5, r2, ip, lsl #12
   31bf8:			; <UNDEFINED> instruction: 0xfffffc36
   31bfc:			; <UNDEFINED> instruction: 0x000269b0
   31c00:			; <UNDEFINED> instruction: 0xfffffc19
   31c04:	eorseq	r3, sp, sp, lsr sp
   31c08:	andeq	lr, r0, r0, lsr #12
   31c0c:			; <UNDEFINED> instruction: 0xfffffc2e
   31c10:	eoreq	r2, lr, lr, lsr #28
   31c14:	andeq	r5, r2, r4, lsr #10
   31c18:			; <UNDEFINED> instruction: 0x676f6c34
   31c1c:	ldrdeq	r5, [r2], -ip
   31c20:	andeq	r5, r2, r8, lsr #1
   31c24:			; <UNDEFINED> instruction: 0xfffffc32
   31c28:	andeq	lr, r0, r8, ror r5
   31c2c:	andeq	r7, r2, r0, asr #1
   31c30:			; <UNDEFINED> instruction: 0xfffffc29
   31c34:	strbvs	r7, [r2, #-1333]!	; 0xfffffacb
   31c38:	andeq	r5, r2, r4, lsr #8
   31c3c:			; <UNDEFINED> instruction: 0xfffffc2a
   31c40:	andeq	r5, r2, r8, asr r4
   31c44:			; <UNDEFINED> instruction: 0xfffffc35
   31c48:	andeq	r6, r2, r0, lsr sl
   31c4c:			; <UNDEFINED> instruction: 0xfffffc24
   31c50:			; <UNDEFINED> instruction: 0x000253b8
   31c54:			; <UNDEFINED> instruction: 0xfffffc1a
   31c58:	eorseq	r3, sp, sl, lsr sl
   31c5c:	andeq	lr, r0, r8, lsl r0
   31c60:			; <UNDEFINED> instruction: 0xfffffc31
   31c64:	strbtcc	r6, [ip], #-1591	; 0xfffff9c9
   31c68:	andeq	r5, r2, r8, lsl #7
   31c6c:			; <UNDEFINED> instruction: 0xfffffc1d
   31c70:	andeq	lr, r0, r0, lsl r4
   31c74:			; <UNDEFINED> instruction: 0xfffffc22
   31c78:	strdeq	lr, [r0], -r0
   31c7c:			; <UNDEFINED> instruction: 0xfffffc21
   31c80:	andeq	r5, r2, r8, lsl #6
   31c84:			; <UNDEFINED> instruction: 0xfffffc1c
   31c88:	strbtvc	r6, [ip], #-1589	; 0xfffff9cb
   31c8c:	andeq	sp, r0, r0, lsr pc
   31c90:	andeq	r5, r2, ip, ror #4
   31c94:			; <UNDEFINED> instruction: 0xfffffc1e
   31c98:	andeq	r5, r2, ip, lsr #5
   31c9c:	andeq	r5, r2, ip, lsr r2
   31ca0:			; <UNDEFINED> instruction: 0xfffffc26
   31ca4:	ldccc	14, cr3, [lr, #-248]!	; 0xffffff08
   31ca8:	ldccc	12, cr3, [ip, #-240]!	; 0xffffff10

00031cac <__flatcc_fb_clear_parser@@Base>:
   31cac:	push	{r4, r5, r6, lr}
   31cb0:	mov	r5, r0
   31cb4:	ldr	r4, [r0, #392]	; 0x188
   31cb8:	cmp	r4, #0
   31cbc:	bne	31cd0 <__flatcc_fb_clear_parser@@Base+0x24>
   31cc0:	b	31cf8 <__flatcc_fb_clear_parser@@Base+0x4c>
   31cc4:	ldr	r4, [r4]
   31cc8:	cmp	r4, #0
   31ccc:	beq	31cf8 <__flatcc_fb_clear_parser@@Base+0x4c>
   31cd0:	ldrh	r3, [r4, #8]
   31cd4:	cmp	r3, #4
   31cd8:	bhi	31cc4 <__flatcc_fb_clear_parser@@Base+0x18>
   31cdc:	add	r0, r4, #56	; 0x38
   31ce0:	bl	2b3bc <fb_symbol_table_clear@@Base>
   31ce4:	add	r0, r4, #72	; 0x48
   31ce8:	bl	3d974 <fb_value_set_clear@@Base>
   31cec:	ldr	r4, [r4]
   31cf0:	cmp	r4, #0
   31cf4:	bne	31cd0 <__flatcc_fb_clear_parser@@Base+0x24>
   31cf8:	add	r0, r5, #448	; 0x1c0
   31cfc:	bl	2c9f8 <fb_schema_table_clear@@Base>
   31d00:	add	r0, r5, #432	; 0x1b0
   31d04:	bl	3d224 <fb_name_table_clear@@Base>
   31d08:	add	r0, r5, #524	; 0x20c
   31d0c:	bl	2acec <ptr_set_clear@@Base>
   31d10:	ldr	r0, [r5, #112]	; 0x70
   31d14:	cmp	r0, #0
   31d18:	beq	31d20 <__flatcc_fb_clear_parser@@Base+0x74>
   31d1c:	bl	13ec8 <free@plt>
   31d20:	ldr	r0, [r5, #20]
   31d24:	cmp	r0, #0
   31d28:	beq	31d30 <__flatcc_fb_clear_parser@@Base+0x84>
   31d2c:	bl	13ec8 <free@plt>
   31d30:	ldr	r0, [r5, #512]	; 0x200
   31d34:	cmp	r0, #0
   31d38:	beq	31d40 <__flatcc_fb_clear_parser@@Base+0x94>
   31d3c:	bl	13ec8 <free@plt>
   31d40:	ldr	r0, [r5, #516]	; 0x204
   31d44:	cmp	r0, #0
   31d48:	beq	31d50 <__flatcc_fb_clear_parser@@Base+0xa4>
   31d4c:	bl	13ec8 <free@plt>
   31d50:	ldr	r0, [r5, #520]	; 0x208
   31d54:	cmp	r0, #0
   31d58:	beq	31d60 <__flatcc_fb_clear_parser@@Base+0xb4>
   31d5c:	bl	13ec8 <free@plt>
   31d60:	ldr	r0, [r5, #548]	; 0x224
   31d64:	cmp	r0, #0
   31d68:	beq	31d70 <__flatcc_fb_clear_parser@@Base+0xc4>
   31d6c:	bl	13ec8 <free@plt>
   31d70:	ldr	r1, [pc, #76]	; 31dc4 <__flatcc_fb_clear_parser@@Base+0x118>
   31d74:	add	r0, r5, #416	; 0x1a0
   31d78:	mov	r2, #0
   31d7c:	add	r1, pc, r1
   31d80:	bl	2c318 <fb_scope_table_destroy@@Base>
   31d84:	ldr	r0, [r5, #48]	; 0x30
   31d88:	cmp	r0, #0
   31d8c:	beq	31da0 <__flatcc_fb_clear_parser@@Base+0xf4>
   31d90:	ldr	r4, [r0]
   31d94:	bl	13ec8 <free@plt>
   31d98:	subs	r0, r4, #0
   31d9c:	bne	31d90 <__flatcc_fb_clear_parser@@Base+0xe4>
   31da0:	ldr	r0, [r5, #16]
   31da4:	cmp	r0, #0
   31da8:	beq	31db0 <__flatcc_fb_clear_parser@@Base+0x104>
   31dac:	bl	13ec8 <free@plt>
   31db0:	mov	r0, r5
   31db4:	mov	r2, #560	; 0x230
   31db8:	mov	r1, #0
   31dbc:	pop	{r4, r5, r6, lr}
   31dc0:	b	13f94 <memset@plt>
   31dc4:			; <UNDEFINED> instruction: 0xffffb40c
   31dc8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   31dcc:	sub	sp, sp, #28
   31dd0:	ldrh	fp, [r1, #8]
   31dd4:	cmp	fp, #1
   31dd8:	bne	32274 <__flatcc_fb_clear_parser@@Base+0x5c8>
   31ddc:	ldrh	r3, [r1, #10]
   31de0:	mov	sl, r0
   31de4:	mov	r5, r1
   31de8:	ands	r0, r3, #1
   31dec:	bne	32298 <__flatcc_fb_clear_parser@@Base+0x5ec>
   31df0:	tst	r3, #2
   31df4:	bne	31e8c <__flatcc_fb_clear_parser@@Base+0x1e0>
   31df8:	ldr	r1, [r1, #120]	; 0x78
   31dfc:	cmp	r1, #0
   31e00:	bne	322bc <__flatcc_fb_clear_parser@@Base+0x610>
   31e04:	ldr	r4, [r5, #20]
   31e08:	orr	r3, r3, #1
   31e0c:	cmp	r4, #0
   31e10:	strh	r3, [r5, #10]
   31e14:	beq	32110 <__flatcc_fb_clear_parser@@Base+0x464>
   31e18:	ldr	r2, [sl, #116]	; 0x74
   31e1c:	cmp	r2, #99	; 0x63
   31e20:	bgt	320c4 <__flatcc_fb_clear_parser@@Base+0x418>
   31e24:	ldr	r3, [pc, #1204]	; 322e0 <__flatcc_fb_clear_parser@@Base+0x634>
   31e28:	str	r1, [sp, #8]
   31e2c:	add	r3, pc, r3
   31e30:	str	r3, [sp, #16]
   31e34:	ldr	r3, [pc, #1192]	; 322e4 <__flatcc_fb_clear_parser@@Base+0x638>
   31e38:	add	r3, pc, r3
   31e3c:	str	r3, [sp, #20]
   31e40:	ldr	r3, [pc, #1184]	; 322e8 <__flatcc_fb_clear_parser@@Base+0x63c>
   31e44:	add	r3, pc, r3
   31e48:	str	r3, [sp, #12]
   31e4c:	ldrh	r3, [r4, #24]
   31e50:	cmp	r3, #8
   31e54:	beq	31f34 <__flatcc_fb_clear_parser@@Base+0x288>
   31e58:	cmp	r3, #14
   31e5c:	beq	31ea0 <__flatcc_fb_clear_parser@@Base+0x1f4>
   31e60:	cmp	r3, #1
   31e64:	beq	31e94 <__flatcc_fb_clear_parser@@Base+0x1e8>
   31e68:	ldr	r2, [pc, #1148]	; 322ec <__flatcc_fb_clear_parser@@Base+0x640>
   31e6c:	mov	r3, #0
   31e70:	ldr	r1, [r4, #4]
   31e74:	mov	r0, sl
   31e78:	str	r3, [sp, #4]
   31e7c:	str	r3, [sp]
   31e80:	add	r2, pc, r2
   31e84:	bl	2d4ec <__flatcc_error_report@@Base>
   31e88:	mvn	r0, #0
   31e8c:	add	sp, sp, #28
   31e90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31e94:	mvn	r0, #0
   31e98:	add	sp, sp, #28
   31e9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   31ea0:	ldr	r6, [r4, #16]
   31ea4:	ldrh	r3, [r6, #8]
   31ea8:	cmp	r3, #3
   31eac:	beq	31fb4 <__flatcc_fb_clear_parser@@Base+0x308>
   31eb0:	cmp	r3, #1
   31eb4:	bne	32220 <__flatcc_fb_clear_parser@@Base+0x574>
   31eb8:	ldrh	r3, [r6, #10]
   31ebc:	tst	r3, #1
   31ec0:	bne	321f4 <__flatcc_fb_clear_parser@@Base+0x548>
   31ec4:	ands	r0, r3, #2
   31ec8:	bne	31f00 <__flatcc_fb_clear_parser@@Base+0x254>
   31ecc:	ldr	r3, [sl, #188]	; 0xbc
   31ed0:	cmp	r3, #0
   31ed4:	bne	320ec <__flatcc_fb_clear_parser@@Base+0x440>
   31ed8:	add	r2, r2, #1
   31edc:	str	r2, [sl, #116]	; 0x74
   31ee0:	mov	r1, r6
   31ee4:	mov	r0, sl
   31ee8:	bl	31dc8 <__flatcc_fb_clear_parser@@Base+0x11c>
   31eec:	ldr	r3, [sl, #116]	; 0x74
   31ef0:	sub	r3, r3, #1
   31ef4:	str	r3, [sl, #116]	; 0x74
   31ef8:	cmp	r0, #0
   31efc:	bne	31e8c <__flatcc_fb_clear_parser@@Base+0x1e0>
   31f00:	ldrh	ip, [r6, #104]	; 0x68
   31f04:	ldrd	r2, [r6, #112]	; 0x70
   31f08:	strh	ip, [r4, #74]	; 0x4a
   31f0c:	strd	r2, [r4, #88]	; 0x58
   31f10:	uxth	r2, ip
   31f14:	subs	r0, r2, #1
   31f18:	mov	r3, #0
   31f1c:	sbc	r1, r3, #0
   31f20:	cmp	r1, #0
   31f24:	cmpeq	r0, #255	; 0xff
   31f28:	ldrd	r8, [r5, #112]	; 0x70
   31f2c:	bls	31fd0 <__flatcc_fb_clear_parser@@Base+0x324>
   31f30:	bl	140f0 <__assert_fail@plt+0xc0>
   31f34:	ldr	r3, [r4, #16]
   31f38:	ldr	r2, [r3, #16]
   31f3c:	add	r2, r2, #996	; 0x3e4
   31f40:	add	r2, r2, #3
   31f44:	cmp	r2, #27
   31f48:	bls	31f7c <__flatcc_fb_clear_parser@@Base+0x2d0>
   31f4c:	mov	r2, #0
   31f50:	str	r2, [r4, #16]
   31f54:	mov	r2, #0
   31f58:	ldr	r1, [r4, #4]
   31f5c:	str	r2, [sp, #4]
   31f60:	str	r2, [sp]
   31f64:	ldr	r2, [pc, #900]	; 322f0 <__flatcc_fb_clear_parser@@Base+0x644>
   31f68:	mov	r0, sl
   31f6c:	add	r2, pc, r2
   31f70:	bl	2d4ec <__flatcc_error_report@@Base>
   31f74:	mvn	r0, #0
   31f78:	b	31e8c <__flatcc_fb_clear_parser@@Base+0x1e0>
   31f7c:	ldr	r1, [sp, #16]
   31f80:	add	r2, r1, r2, lsl #2
   31f84:	ldr	r2, [r2, #28]
   31f88:	str	r2, [r4, #16]
   31f8c:	add	r2, r1, r2, lsl #2
   31f90:	ldr	r2, [r2, #140]	; 0x8c
   31f94:	cmp	r2, #0
   31f98:	beq	31f54 <__flatcc_fb_clear_parser@@Base+0x2a8>
   31f9c:	ldr	r3, [sp, #8]
   31fa0:	uxth	ip, r2
   31fa4:	str	r2, [r4, #88]	; 0x58
   31fa8:	strh	ip, [r4, #74]	; 0x4a
   31fac:	str	r3, [r4, #92]	; 0x5c
   31fb0:	b	31f10 <__flatcc_fb_clear_parser@@Base+0x264>
   31fb4:	ldr	ip, [r6, #112]	; 0x70
   31fb8:	ldr	r3, [r6, #116]	; 0x74
   31fbc:	str	ip, [r4, #88]	; 0x58
   31fc0:	uxth	ip, ip
   31fc4:	strh	ip, [r4, #74]	; 0x4a
   31fc8:	str	r3, [r4, #92]	; 0x5c
   31fcc:	b	31f10 <__flatcc_fb_clear_parser@@Base+0x264>
   31fd0:	cmp	r3, #0
   31fd4:	cmpeq	r2, #1
   31fd8:	beq	32008 <__flatcc_fb_clear_parser@@Base+0x35c>
   31fdc:	mov	r0, #2
   31fe0:	mov	r1, #0
   31fe4:	b	31ffc <__flatcc_fb_clear_parser@@Base+0x350>
   31fe8:	adds	r0, r0, r0
   31fec:	adc	r1, r1, r1
   31ff0:	cmp	r3, r1
   31ff4:	cmpeq	r2, r0
   31ff8:	bcc	31f30 <__flatcc_fb_clear_parser@@Base+0x284>
   31ffc:	cmp	r3, r1
   32000:	cmpeq	r2, r0
   32004:	bne	31fe8 <__flatcc_fb_clear_parser@@Base+0x33c>
   32008:	subs	r0, r8, #1
   3200c:	sbc	r1, r9, #0
   32010:	adds	r0, r0, r2
   32014:	adc	r1, r1, r3
   32018:	rsbs	r2, r2, #0
   3201c:	rsc	r3, r3, #0
   32020:	and	r3, r3, r1
   32024:	and	r2, r2, r0
   32028:	cmp	r9, r3
   3202c:	cmpeq	r8, r2
   32030:	strd	r2, [r4, #80]	; 0x50
   32034:	bhi	321cc <__flatcc_fb_clear_parser@@Base+0x520>
   32038:	ldrd	r6, [r4, #88]	; 0x58
   3203c:	adds	r6, r6, r2
   32040:	adc	r7, r7, r3
   32044:	cmp	r7, r3
   32048:	cmpeq	r6, r2
   3204c:	bcc	321cc <__flatcc_fb_clear_parser@@Base+0x520>
   32050:	cmp	r9, r7
   32054:	cmpeq	r8, r6
   32058:	ldr	r0, [pc, #660]	; 322f4 <__flatcc_fb_clear_parser@@Base+0x648>
   3205c:	mov	r1, #0
   32060:	movhi	r3, #1
   32064:	movls	r3, #0
   32068:	cmp	r7, r1
   3206c:	cmpeq	r6, r0
   32070:	orrhi	r3, r3, #1
   32074:	cmp	r3, #0
   32078:	beq	320a0 <__flatcc_fb_clear_parser@@Base+0x3f4>
   3207c:	ldr	r2, [sp, #8]
   32080:	ldr	r1, [r4, #4]
   32084:	mov	r3, #0
   32088:	str	r2, [sp, #4]
   3208c:	str	r2, [sp]
   32090:	mov	r0, sl
   32094:	ldr	r2, [sp, #12]
   32098:	bl	2d4ec <__flatcc_error_report@@Base>
   3209c:	ldrh	ip, [r4, #74]	; 0x4a
   320a0:	ldr	r4, [r4]
   320a4:	cmp	ip, fp
   320a8:	movcs	fp, ip
   320ac:	cmp	r4, #0
   320b0:	strd	r6, [r5, #112]	; 0x70
   320b4:	beq	32110 <__flatcc_fb_clear_parser@@Base+0x464>
   320b8:	ldr	r2, [sl, #116]	; 0x74
   320bc:	cmp	r2, #99	; 0x63
   320c0:	ble	31e4c <__flatcc_fb_clear_parser@@Base+0x1a0>
   320c4:	ldr	r2, [pc, #556]	; 322f8 <__flatcc_fb_clear_parser@@Base+0x64c>
   320c8:	mov	r3, #0
   320cc:	mov	r0, sl
   320d0:	str	r3, [sp, #4]
   320d4:	str	r3, [sp]
   320d8:	mov	r1, r3
   320dc:	add	r2, pc, r2
   320e0:	bl	2d4ec <__flatcc_error_report@@Base>
   320e4:	mvn	r0, #0
   320e8:	b	31e8c <__flatcc_fb_clear_parser@@Base+0x1e0>
   320ec:	ldr	r3, [r6, #4]
   320f0:	ldr	r1, [r4, #4]
   320f4:	ldr	r2, [sp, #20]
   320f8:	str	r0, [sp, #4]
   320fc:	str	r0, [sp]
   32100:	mov	r0, sl
   32104:	bl	2d4ec <__flatcc_error_report@@Base>
   32108:	ldr	r2, [sl, #116]	; 0x74
   3210c:	b	31ed8 <__flatcc_fb_clear_parser@@Base+0x22c>
   32110:	ldrh	r2, [r5, #104]	; 0x68
   32114:	cmp	r2, #0
   32118:	moveq	r2, fp
   3211c:	strheq	fp, [r5, #104]	; 0x68
   32120:	beq	3212c <__flatcc_fb_clear_parser@@Base+0x480>
   32124:	cmp	r2, fp
   32128:	bcc	32248 <__flatcc_fb_clear_parser@@Base+0x59c>
   3212c:	uxth	r2, r2
   32130:	subs	r0, r2, #1
   32134:	mov	r3, #0
   32138:	sbc	r1, r3, #0
   3213c:	cmp	r1, #0
   32140:	cmpeq	r0, #255	; 0xff
   32144:	ldrd	r6, [r5, #112]	; 0x70
   32148:	bhi	31f30 <__flatcc_fb_clear_parser@@Base+0x284>
   3214c:	cmp	r3, #0
   32150:	cmpeq	r2, #1
   32154:	beq	32184 <__flatcc_fb_clear_parser@@Base+0x4d8>
   32158:	mov	r0, #2
   3215c:	mov	r1, #0
   32160:	b	32178 <__flatcc_fb_clear_parser@@Base+0x4cc>
   32164:	adds	r0, r0, r0
   32168:	adc	r1, r1, r1
   3216c:	cmp	r3, r1
   32170:	cmpeq	r2, r0
   32174:	bcc	31f30 <__flatcc_fb_clear_parser@@Base+0x284>
   32178:	cmp	r1, r3
   3217c:	cmpeq	r0, r2
   32180:	bne	32164 <__flatcc_fb_clear_parser@@Base+0x4b8>
   32184:	subs	r0, r6, #1
   32188:	ldrh	ip, [r5, #10]
   3218c:	sbc	r1, r7, #0
   32190:	adds	r0, r0, r2
   32194:	adc	r1, r1, r3
   32198:	rsbs	r2, r2, #0
   3219c:	rsc	r3, r3, #0
   321a0:	and	r2, r2, r0
   321a4:	and	r3, r3, r1
   321a8:	bic	r1, ip, #1
   321ac:	ldr	ip, [sl, #396]	; 0x18c
   321b0:	orr	r1, r1, #2
   321b4:	strd	r2, [r5, #112]	; 0x70
   321b8:	strh	r1, [r5, #10]
   321bc:	str	ip, [r5, #120]	; 0x78
   321c0:	mov	r0, #0
   321c4:	str	r5, [sl, #396]	; 0x18c
   321c8:	b	31e8c <__flatcc_fb_clear_parser@@Base+0x1e0>
   321cc:	ldr	r2, [pc, #296]	; 322fc <__flatcc_fb_clear_parser@@Base+0x650>
   321d0:	mov	r3, #0
   321d4:	ldr	r1, [r4, #4]
   321d8:	mov	r0, sl
   321dc:	str	r3, [sp, #4]
   321e0:	str	r3, [sp]
   321e4:	add	r2, pc, r2
   321e8:	bl	2d4ec <__flatcc_error_report@@Base>
   321ec:	mvn	r0, #0
   321f0:	b	31e8c <__flatcc_fb_clear_parser@@Base+0x1e0>
   321f4:	mov	r2, #0
   321f8:	ldr	r3, [r6, #4]
   321fc:	ldr	r1, [r4, #4]
   32200:	str	r2, [sp, #4]
   32204:	str	r2, [sp]
   32208:	ldr	r2, [pc, #240]	; 32300 <__flatcc_fb_clear_parser@@Base+0x654>
   3220c:	mov	r0, sl
   32210:	add	r2, pc, r2
   32214:	bl	2d4ec <__flatcc_error_report@@Base>
   32218:	mvn	r0, #0
   3221c:	b	31e8c <__flatcc_fb_clear_parser@@Base+0x1e0>
   32220:	ldr	r2, [pc, #220]	; 32304 <__flatcc_fb_clear_parser@@Base+0x658>
   32224:	mov	r3, #0
   32228:	ldr	r1, [r4, #4]
   3222c:	mov	r0, sl
   32230:	str	r3, [sp, #4]
   32234:	str	r3, [sp]
   32238:	add	r2, pc, r2
   3223c:	bl	2d4ec <__flatcc_error_report@@Base>
   32240:	mvn	r0, #0
   32244:	b	31e8c <__flatcc_fb_clear_parser@@Base+0x1e0>
   32248:	ldr	r2, [pc, #184]	; 32308 <__flatcc_fb_clear_parser@@Base+0x65c>
   3224c:	mov	r3, #0
   32250:	ldr	r1, [r5, #4]
   32254:	add	r2, pc, r2
   32258:	str	r3, [sp, #4]
   3225c:	str	r3, [sp]
   32260:	mov	r0, sl
   32264:	bl	2d4ec <__flatcc_error_report@@Base>
   32268:	strh	fp, [r5, #104]	; 0x68
   3226c:	mov	r2, fp
   32270:	b	3212c <__flatcc_fb_clear_parser@@Base+0x480>
   32274:	ldr	r3, [pc, #144]	; 3230c <__flatcc_fb_clear_parser@@Base+0x660>
   32278:	ldr	r1, [pc, #144]	; 32310 <__flatcc_fb_clear_parser@@Base+0x664>
   3227c:	ldr	r0, [pc, #144]	; 32314 <__flatcc_fb_clear_parser@@Base+0x668>
   32280:	add	r3, pc, r3
   32284:	ldr	r2, [pc, #140]	; 32318 <__flatcc_fb_clear_parser@@Base+0x66c>
   32288:	add	r3, r3, #12
   3228c:	add	r1, pc, r1
   32290:	add	r0, pc, r0
   32294:	bl	14030 <__assert_fail@plt>
   32298:	ldr	r3, [pc, #124]	; 3231c <__flatcc_fb_clear_parser@@Base+0x670>
   3229c:	ldr	r1, [pc, #124]	; 32320 <__flatcc_fb_clear_parser@@Base+0x674>
   322a0:	ldr	r0, [pc, #124]	; 32324 <__flatcc_fb_clear_parser@@Base+0x678>
   322a4:	add	r3, pc, r3
   322a8:	mov	r2, #504	; 0x1f8
   322ac:	add	r3, r3, #12
   322b0:	add	r1, pc, r1
   322b4:	add	r0, pc, r0
   322b8:	bl	14030 <__assert_fail@plt>
   322bc:	ldr	r3, [pc, #100]	; 32328 <__flatcc_fb_clear_parser@@Base+0x67c>
   322c0:	ldr	r1, [pc, #100]	; 3232c <__flatcc_fb_clear_parser@@Base+0x680>
   322c4:	ldr	r0, [pc, #100]	; 32330 <__flatcc_fb_clear_parser@@Base+0x684>
   322c8:	add	r3, pc, r3
   322cc:	mov	r2, #508	; 0x1fc
   322d0:	add	r3, r3, #12
   322d4:	add	r1, pc, r1
   322d8:	add	r0, pc, r0
   322dc:	bl	14030 <__assert_fail@plt>
   322e0:	andeq	r5, r2, r4, asr #8
   322e4:	andeq	r5, r2, r4, asr #13
   322e8:	andeq	r5, r2, ip, lsr r7
   322ec:	andeq	r5, r2, ip, asr #12
   322f0:	andeq	r5, r2, r0, ror #10
   322f4:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   322f8:	andeq	r5, r2, r4, lsr #7
   322fc:	andeq	r5, r2, r4, lsl #7
   32300:	andeq	r5, r2, ip, asr #5
   32304:	andeq	r5, r2, ip, lsl #6
   32308:	andeq	r5, r2, r0, ror #6
   3230c:	strdeq	r4, [r2], -r0
   32310:	andeq	r5, r2, r8, asr #2
   32314:	andeq	sp, r0, r0, lsr #22
   32318:	strdeq	r0, [r0], -r6
   3231c:	andeq	r4, r2, ip, asr #31
   32320:	andeq	r5, r2, r4, lsr #2
   32324:	muleq	r2, r8, r1
   32328:	andeq	r4, r2, r8, lsr #31
   3232c:	andeq	r5, r2, r0, lsl #2
   32330:	muleq	r2, ip, r1
   32334:	ldrh	r3, [r1, #8]
   32338:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3233c:	sub	sp, sp, #268	; 0x10c
   32340:	cmp	r3, #0
   32344:	str	r1, [sp, #32]
   32348:	bne	34224 <__flatcc_fb_clear_parser@@Base+0x2578>
   3234c:	ldr	r3, [sp, #32]
   32350:	ldrh	r3, [r3, #48]	; 0x30
   32354:	cmp	r3, #0
   32358:	str	r3, [sp, #40]	; 0x28
   3235c:	bne	34248 <__flatcc_fb_clear_parser@@Base+0x259c>
   32360:	ldr	r2, [sp, #32]
   32364:	ldr	r6, [sp, #40]	; 0x28
   32368:	add	r3, sp, #116	; 0x74
   3236c:	ldr	r4, [r2, #28]
   32370:	mov	r9, r0
   32374:	mov	r2, #48	; 0x30
   32378:	mov	r0, r3
   3237c:	mov	r1, r6
   32380:	str	r3, [sp, #24]
   32384:	bl	13f94 <memset@plt>
   32388:	cmp	r4, #0
   3238c:	beq	33abc <__flatcc_fb_clear_parser@@Base+0x1e10>
   32390:	ldr	r2, [pc, #3996]	; 33334 <__flatcc_fb_clear_parser@@Base+0x1688>
   32394:	ldr	r8, [pc, #3996]	; 33338 <__flatcc_fb_clear_parser@@Base+0x168c>
   32398:	add	r2, pc, r2
   3239c:	str	r2, [sp, #12]
   323a0:	ldr	r2, [pc, #3988]	; 3333c <__flatcc_fb_clear_parser@@Base+0x1690>
   323a4:	ldr	r7, [pc, #3988]	; 33340 <__flatcc_fb_clear_parser@@Base+0x1694>
   323a8:	ldr	sl, [pc, #3988]	; 33344 <__flatcc_fb_clear_parser@@Base+0x1698>
   323ac:	ldr	fp, [pc, #3988]	; 33348 <__flatcc_fb_clear_parser@@Base+0x169c>
   323b0:	add	r8, pc, r8
   323b4:	add	r2, pc, r2
   323b8:	str	r8, [sp, #28]
   323bc:	add	r7, pc, r7
   323c0:	add	sl, pc, sl
   323c4:	add	fp, pc, fp
   323c8:	str	r2, [sp, #16]
   323cc:	mov	r5, #100	; 0x64
   323d0:	ldr	r8, [sp, #24]
   323d4:	b	32438 <__flatcc_fb_clear_parser@@Base+0x78c>
   323d8:	mov	r2, #1
   323dc:	ldr	r0, [r8, r3, lsl #2]
   323e0:	orr	r6, r6, r2, lsl r3
   323e4:	cmp	r0, #0
   323e8:	uxth	r6, r6
   323ec:	lsl	r2, r3, #2
   323f0:	beq	32494 <__flatcc_fb_clear_parser@@Base+0x7e8>
   323f4:	ldr	r2, [pc, #3920]	; 3334c <__flatcc_fb_clear_parser@@Base+0x16a0>
   323f8:	mov	r3, #0
   323fc:	ldr	r1, [r4, #4]
   32400:	add	r2, pc, r2
   32404:	str	r3, [sp, #4]
   32408:	str	r3, [sp]
   3240c:	mov	r0, r9
   32410:	bl	2d4ec <__flatcc_error_report@@Base>
   32414:	subs	r5, r5, #1
   32418:	ldr	r4, [r4]
   3241c:	movne	r2, #1
   32420:	moveq	r2, #0
   32424:	cmp	r4, #0
   32428:	moveq	r2, #0
   3242c:	andne	r2, r2, #1
   32430:	cmp	r2, #0
   32434:	beq	324d4 <__flatcc_fb_clear_parser@@Base+0x828>
   32438:	ldr	r3, [r4, #4]
   3243c:	ldr	r0, [r9, #412]	; 0x19c
   32440:	ldm	r3, {r1, r2}
   32444:	add	r0, r0, #16
   32448:	bl	3d314 <fb_name_table_find@@Base>
   3244c:	cmp	r0, #0
   32450:	beq	32c40 <__flatcc_fb_clear_parser@@Base+0xf94>
   32454:	ldr	r3, [r0, #24]
   32458:	cmp	r3, #0
   3245c:	beq	32414 <__flatcc_fb_clear_parser@@Base+0x768>
   32460:	mov	r2, #8
   32464:	asr	r2, r2, r3
   32468:	ands	r2, r2, #1
   3246c:	bne	323d8 <__flatcc_fb_clear_parser@@Base+0x72c>
   32470:	ldr	r1, [r4, #4]
   32474:	mov	r3, r2
   32478:	str	r2, [sp, #4]
   3247c:	str	r2, [sp]
   32480:	ldr	r2, [pc, #3784]	; 33350 <__flatcc_fb_clear_parser@@Base+0x16a4>
   32484:	mov	r0, r9
   32488:	add	r2, pc, r2
   3248c:	bl	2d4ec <__flatcc_error_report@@Base>
   32490:	b	32414 <__flatcc_fb_clear_parser@@Base+0x768>
   32494:	add	r2, r7, r2
   32498:	str	r4, [r8, r3, lsl #2]
   3249c:	ldr	r2, [r2, #204]	; 0xcc
   324a0:	cmp	r2, #0
   324a4:	bne	32c80 <__flatcc_fb_clear_parser@@Base+0xfd4>
   324a8:	ldrh	r3, [r4, #16]
   324ac:	cmp	r3, #0
   324b0:	beq	32414 <__flatcc_fb_clear_parser@@Base+0x768>
   324b4:	ldr	r1, [r4, #4]
   324b8:	mov	r3, r2
   324bc:	str	r2, [sp, #4]
   324c0:	str	r2, [sp]
   324c4:	mov	r0, r9
   324c8:	ldr	r2, [sp, #16]
   324cc:	bl	2d4ec <__flatcc_error_report@@Base>
   324d0:	b	32414 <__flatcc_fb_clear_parser@@Base+0x768>
   324d4:	cmp	r4, #0
   324d8:	beq	324fc <__flatcc_fb_clear_parser@@Base+0x850>
   324dc:	ldr	r1, [r4, #4]
   324e0:	mov	r3, r2
   324e4:	str	r2, [sp, #4]
   324e8:	str	r2, [sp]
   324ec:	ldr	r2, [pc, #3680]	; 33354 <__flatcc_fb_clear_parser@@Base+0x16a8>
   324f0:	mov	r0, r9
   324f4:	add	r2, pc, r2
   324f8:	bl	2d4ec <__flatcc_error_report@@Base>
   324fc:	ldr	r2, [sp, #32]
   32500:	ldr	r8, [r2, #20]
   32504:	strh	r6, [r2, #92]	; 0x5c
   32508:	cmp	r8, #0
   3250c:	beq	33ccc <__flatcc_fb_clear_parser@@Base+0x2020>
   32510:	ldr	ip, [pc, #3648]	; 33358 <__flatcc_fb_clear_parser@@Base+0x16ac>
   32514:	mov	r3, #0
   32518:	add	ip, pc, ip
   3251c:	str	ip, [sp, #76]	; 0x4c
   32520:	ldr	ip, [pc, #3636]	; 3335c <__flatcc_fb_clear_parser@@Base+0x16b0>
   32524:	mov	r0, #0
   32528:	add	ip, pc, ip
   3252c:	str	ip, [sp, #80]	; 0x50
   32530:	ldr	ip, [pc, #3624]	; 33360 <__flatcc_fb_clear_parser@@Base+0x16b4>
   32534:	mov	r1, #0
   32538:	add	ip, pc, ip
   3253c:	str	ip, [sp, #84]	; 0x54
   32540:	ldr	ip, [pc, #3612]	; 33364 <__flatcc_fb_clear_parser@@Base+0x16b8>
   32544:	str	r3, [sp, #72]	; 0x48
   32548:	add	ip, pc, ip
   3254c:	str	ip, [sp, #88]	; 0x58
   32550:	ldr	ip, [pc, #3600]	; 33368 <__flatcc_fb_clear_parser@@Base+0x16bc>
   32554:	str	r3, [sp, #36]	; 0x24
   32558:	add	ip, pc, ip
   3255c:	str	ip, [sp, #92]	; 0x5c
   32560:	ldr	ip, [pc, #3588]	; 3336c <__flatcc_fb_clear_parser@@Base+0x16c0>
   32564:	str	r3, [sp, #28]
   32568:	add	ip, pc, ip
   3256c:	str	r3, [sp, #44]	; 0x2c
   32570:	add	r3, r2, #56	; 0x38
   32574:	strd	r0, [sp, #48]	; 0x30
   32578:	str	ip, [sp, #96]	; 0x60
   3257c:	strd	r0, [sp, #16]
   32580:	str	r3, [sp, #12]
   32584:	ldr	sl, [sp, #24]
   32588:	b	325bc <__flatcc_fb_clear_parser@@Base+0x910>
   3258c:	mov	r2, #0
   32590:	ldr	r3, [fp, #4]
   32594:	ldr	r1, [r8, #4]
   32598:	str	r2, [sp, #4]
   3259c:	str	r2, [sp]
   325a0:	ldr	r2, [pc, #3528]	; 33370 <__flatcc_fb_clear_parser@@Base+0x16c4>
   325a4:	mov	r0, r9
   325a8:	add	r2, pc, r2
   325ac:	bl	2d4ec <__flatcc_error_report@@Base>
   325b0:	ldr	r8, [r8]
   325b4:	cmp	r8, #0
   325b8:	beq	32b60 <__flatcc_fb_clear_parser@@Base+0xeb4>
   325bc:	mov	r2, #1
   325c0:	mov	r1, r8
   325c4:	ldr	r0, [sp, #12]
   325c8:	bl	2b488 <fb_symbol_table_insert_item@@Base>
   325cc:	subs	fp, r0, #0
   325d0:	bne	3258c <__flatcc_fb_clear_parser@@Base+0x8e0>
   325d4:	ldrh	r3, [r8, #8]
   325d8:	cmp	r3, #5
   325dc:	bne	336c4 <__flatcc_fb_clear_parser@@Base+0x1a18>
   325e0:	ldrh	r3, [r8, #24]
   325e4:	cmp	r3, #1
   325e8:	beq	325b0 <__flatcc_fb_clear_parser@@Base+0x904>
   325ec:	sub	r3, r3, #7
   325f0:	cmp	r3, #1
   325f4:	bls	32af4 <__flatcc_fb_clear_parser@@Base+0xe48>
   325f8:	ldr	r4, [r8, #64]	; 0x40
   325fc:	mov	r2, #48	; 0x30
   32600:	mov	r1, #0
   32604:	mov	r0, sl
   32608:	bl	13f94 <memset@plt>
   3260c:	cmp	r4, #0
   32610:	beq	33594 <__flatcc_fb_clear_parser@@Base+0x18e8>
   32614:	ldr	r3, [pc, #3416]	; 33374 <__flatcc_fb_clear_parser@@Base+0x16c8>
   32618:	ldr	r7, [pc, #3416]	; 33378 <__flatcc_fb_clear_parser@@Base+0x16cc>
   3261c:	add	r3, pc, r3
   32620:	str	r3, [sp, #64]	; 0x40
   32624:	ldr	r3, [pc, #3408]	; 3337c <__flatcc_fb_clear_parser@@Base+0x16d0>
   32628:	add	r7, pc, r7
   3262c:	add	r3, pc, r3
   32630:	str	r3, [sp, #68]	; 0x44
   32634:	ldr	r3, [pc, #3396]	; 33380 <__flatcc_fb_clear_parser@@Base+0x16d4>
   32638:	ldr	r6, [sp, #40]	; 0x28
   3263c:	add	r3, pc, r3
   32640:	str	r3, [sp, #60]	; 0x3c
   32644:	ldr	r3, [pc, #3384]	; 33384 <__flatcc_fb_clear_parser@@Base+0x16d8>
   32648:	mov	r5, #100	; 0x64
   3264c:	add	r3, pc, r3
   32650:	str	r3, [sp, #56]	; 0x38
   32654:	ldr	r3, [pc, #3372]	; 33388 <__flatcc_fb_clear_parser@@Base+0x16dc>
   32658:	add	r3, pc, r3
   3265c:	str	r3, [sp, #24]
   32660:	b	326c4 <__flatcc_fb_clear_parser@@Base+0xa18>
   32664:	mov	r3, #1
   32668:	ldr	r0, [sl, r2, lsl #2]
   3266c:	orr	r6, r6, r3, lsl r2
   32670:	cmp	r0, #0
   32674:	uxth	r6, r6
   32678:	lsl	r3, r2, #2
   3267c:	beq	32720 <__flatcc_fb_clear_parser@@Base+0xa74>
   32680:	ldr	r2, [pc, #3332]	; 3338c <__flatcc_fb_clear_parser@@Base+0x16e0>
   32684:	mov	r3, #0
   32688:	ldr	r1, [r4, #4]
   3268c:	add	r2, pc, r2
   32690:	str	r3, [sp, #4]
   32694:	str	r3, [sp]
   32698:	mov	r0, r9
   3269c:	bl	2d4ec <__flatcc_error_report@@Base>
   326a0:	subs	r5, r5, #1
   326a4:	ldr	r4, [r4]
   326a8:	movne	r2, #1
   326ac:	moveq	r2, #0
   326b0:	cmp	r4, #0
   326b4:	moveq	r2, #0
   326b8:	andne	r2, r2, #1
   326bc:	cmp	r2, #0
   326c0:	beq	32760 <__flatcc_fb_clear_parser@@Base+0xab4>
   326c4:	ldr	r3, [r4, #4]
   326c8:	ldr	r0, [r9, #412]	; 0x19c
   326cc:	ldm	r3, {r1, r2}
   326d0:	add	r0, r0, #16
   326d4:	bl	3d314 <fb_name_table_find@@Base>
   326d8:	cmp	r0, #0
   326dc:	beq	32a78 <__flatcc_fb_clear_parser@@Base+0xdcc>
   326e0:	ldr	r2, [r0, #24]
   326e4:	cmp	r2, #0
   326e8:	beq	326a0 <__flatcc_fb_clear_parser@@Base+0x9f4>
   326ec:	ldr	r3, [pc, #3228]	; 33390 <__flatcc_fb_clear_parser@@Base+0x16e4>
   326f0:	asr	r3, r3, r2
   326f4:	ands	r0, r3, #1
   326f8:	bne	32664 <__flatcc_fb_clear_parser@@Base+0x9b8>
   326fc:	ldr	r2, [pc, #3216]	; 33394 <__flatcc_fb_clear_parser@@Base+0x16e8>
   32700:	ldr	r1, [r4, #4]
   32704:	mov	r3, r0
   32708:	str	r0, [sp, #4]
   3270c:	str	r0, [sp]
   32710:	add	r2, pc, r2
   32714:	mov	r0, r9
   32718:	bl	2d4ec <__flatcc_error_report@@Base>
   3271c:	b	326a0 <__flatcc_fb_clear_parser@@Base+0x9f4>
   32720:	add	r3, r7, r3
   32724:	str	r4, [sl, r2, lsl #2]
   32728:	ldr	r2, [r3, #204]	; 0xcc
   3272c:	cmp	r2, #0
   32730:	bne	32a9c <__flatcc_fb_clear_parser@@Base+0xdf0>
   32734:	ldrh	r3, [r4, #16]
   32738:	cmp	r3, #0
   3273c:	beq	326a0 <__flatcc_fb_clear_parser@@Base+0x9f4>
   32740:	ldr	r1, [r4, #4]
   32744:	mov	r3, r2
   32748:	str	r2, [sp, #4]
   3274c:	str	r2, [sp]
   32750:	mov	r0, r9
   32754:	ldr	r2, [sp, #24]
   32758:	bl	2d4ec <__flatcc_error_report@@Base>
   3275c:	b	326a0 <__flatcc_fb_clear_parser@@Base+0x9f4>
   32760:	cmp	r4, #0
   32764:	beq	32788 <__flatcc_fb_clear_parser@@Base+0xadc>
   32768:	ldr	r1, [r4, #4]
   3276c:	mov	r3, r2
   32770:	str	r2, [sp, #4]
   32774:	str	r2, [sp]
   32778:	ldr	r2, [pc, #3096]	; 33398 <__flatcc_fb_clear_parser@@Base+0x16ec>
   3277c:	mov	r0, r9
   32780:	add	r2, pc, r2
   32784:	bl	2d4ec <__flatcc_error_report@@Base>
   32788:	ldr	r7, [sp, #140]	; 0x8c
   3278c:	strh	r6, [r8, #72]	; 0x48
   32790:	cmp	r7, #0
   32794:	beq	328f8 <__flatcc_fb_clear_parser@@Base+0xc4c>
   32798:	ldrh	r3, [r8, #24]
   3279c:	cmp	r3, #7
   327a0:	bne	3356c <__flatcc_fb_clear_parser@@Base+0x18c0>
   327a4:	ldr	r3, [r8, #16]
   327a8:	cmp	r3, #4
   327ac:	bne	3356c <__flatcc_fb_clear_parser@@Base+0x18c0>
   327b0:	ldrh	r3, [r7, #16]
   327b4:	cmp	r3, #2
   327b8:	bne	33558 <__flatcc_fb_clear_parser@@Base+0x18ac>
   327bc:	ldr	lr, [r7, #12]
   327c0:	ldr	ip, [r7, #8]
   327c4:	cmp	lr, #0
   327c8:	ble	33be8 <__flatcc_fb_clear_parser@@Base+0x1f3c>
   327cc:	sub	r6, lr, #1
   327d0:	mov	r0, r6
   327d4:	ldrb	r3, [ip, r6]
   327d8:	cmp	r3, #46	; 0x2e
   327dc:	addne	r3, ip, r6
   327e0:	movne	r2, r6
   327e4:	bne	32800 <__flatcc_fb_clear_parser@@Base+0xb54>
   327e8:	b	33bdc <__flatcc_fb_clear_parser@@Base+0x1f30>
   327ec:	ldrb	r1, [r3, #-1]!
   327f0:	sub	r2, r2, #1
   327f4:	mov	r0, r2
   327f8:	cmp	r1, #46	; 0x2e
   327fc:	beq	32b4c <__flatcc_fb_clear_parser@@Base+0xea0>
   32800:	cmp	r2, #0
   32804:	bne	327ec <__flatcc_fb_clear_parser@@Base+0xb40>
   32808:	mov	r6, lr
   3280c:	str	ip, [sp, #24]
   32810:	ldr	r3, [sp, #32]
   32814:	ldr	r4, [r3, #12]
   32818:	adds	r3, r4, #0
   3281c:	movne	r3, #1
   32820:	cmp	r2, #0
   32824:	movne	r3, #0
   32828:	cmp	r3, #0
   3282c:	addne	r3, r9, #524	; 0x20c
   32830:	strne	r3, [sp, #56]	; 0x38
   32834:	beq	32c00 <__flatcc_fb_clear_parser@@Base+0xf54>
   32838:	mov	r2, r6
   3283c:	ldr	r1, [sp, #24]
   32840:	add	r0, r4, #4
   32844:	bl	2b4b0 <fb_symbol_table_find@@Base>
   32848:	subs	r5, r0, #0
   3284c:	beq	3285c <__flatcc_fb_clear_parser@@Base+0xbb0>
   32850:	ldrh	r2, [r5, #8]
   32854:	cmp	r2, #4
   32858:	bls	32a2c <__flatcc_fb_clear_parser@@Base+0xd80>
   3285c:	ldr	r2, [r4]
   32860:	cmp	r2, #0
   32864:	beq	328d0 <__flatcc_fb_clear_parser@@Base+0xc24>
   32868:	mov	r3, #0
   3286c:	ldr	r2, [r2]
   32870:	add	r3, r3, #1
   32874:	cmp	r2, #0
   32878:	bne	3286c <__flatcc_fb_clear_parser@@Base+0xbc0>
   3287c:	rsb	r5, r3, #1
   32880:	ldr	r0, [r9, #412]	; 0x19c
   32884:	b	328ac <__flatcc_fb_clear_parser@@Base+0xc00>
   32888:	cmp	r0, #0
   3288c:	beq	328a8 <__flatcc_fb_clear_parser@@Base+0xbfc>
   32890:	mov	r2, r5
   32894:	ldr	r1, [r4]
   32898:	bl	2c404 <fb_scope_table_find@@Base>
   3289c:	cmp	r0, #0
   328a0:	bne	32a70 <__flatcc_fb_clear_parser@@Base+0xdc4>
   328a4:	ldr	r0, [r9, #412]	; 0x19c
   328a8:	add	r5, r5, #1
   328ac:	cmp	r5, #0
   328b0:	bne	32888 <__flatcc_fb_clear_parser@@Base+0xbdc>
   328b4:	cmp	r0, #0
   328b8:	beq	328d0 <__flatcc_fb_clear_parser@@Base+0xc24>
   328bc:	mov	r1, r5
   328c0:	mov	r2, #0
   328c4:	bl	2c404 <fb_scope_table_find@@Base>
   328c8:	subs	r4, r0, #0
   328cc:	bne	32838 <__flatcc_fb_clear_parser@@Base+0xb8c>
   328d0:	ldr	ip, [r7, #8]
   328d4:	ldr	lr, [r7, #12]
   328d8:	ldr	r2, [pc, #2748]	; 3339c <__flatcc_fb_clear_parser@@Base+0x16f0>
   328dc:	ldr	r1, [r7, #4]
   328e0:	mov	r3, #0
   328e4:	stm	sp, {ip, lr}
   328e8:	add	r2, pc, r2
   328ec:	mov	r0, r9
   328f0:	bl	2d4ec <__flatcc_error_report@@Base>
   328f4:	ldrh	r6, [r8, #72]	; 0x48
   328f8:	tst	r6, #256	; 0x100
   328fc:	beq	3290c <__flatcc_fb_clear_parser@@Base+0xc60>
   32900:	ldrh	r3, [r8, #24]
   32904:	cmp	r3, #8
   32908:	beq	3369c <__flatcc_fb_clear_parser@@Base+0x19f0>
   3290c:	tst	r6, #1024	; 0x400
   32910:	beq	32944 <__flatcc_fb_clear_parser@@Base+0xc98>
   32914:	ldrh	r3, [r8, #24]
   32918:	cmp	r3, #7
   3291c:	beq	32c64 <__flatcc_fb_clear_parser@@Base+0xfb8>
   32920:	ldr	r2, [pc, #2680]	; 333a0 <__flatcc_fb_clear_parser@@Base+0x16f4>
   32924:	mov	r3, #0
   32928:	ldr	r1, [r8, #4]
   3292c:	add	r2, pc, r2
   32930:	str	r3, [sp, #4]
   32934:	str	r3, [sp]
   32938:	mov	r0, r9
   3293c:	bl	2d4ec <__flatcc_error_report@@Base>
   32940:	ldrh	r6, [r8, #72]	; 0x48
   32944:	tst	r6, #2048	; 0x800
   32948:	beq	3297c <__flatcc_fb_clear_parser@@Base+0xcd0>
   3294c:	ldrh	r3, [r8, #24]
   32950:	cmp	r3, #7
   32954:	beq	32bc0 <__flatcc_fb_clear_parser@@Base+0xf14>
   32958:	ldr	r2, [pc, #2628]	; 333a4 <__flatcc_fb_clear_parser@@Base+0x16f8>
   3295c:	mov	r3, #0
   32960:	ldr	r1, [r8, #4]
   32964:	add	r2, pc, r2
   32968:	str	r3, [sp, #4]
   3296c:	str	r3, [sp]
   32970:	mov	r0, r9
   32974:	bl	2d4ec <__flatcc_error_report@@Base>
   32978:	ldrh	r6, [r8, #72]	; 0x48
   3297c:	and	r6, r6, #3072	; 0xc00
   32980:	cmp	r6, #3072	; 0xc00
   32984:	beq	32bdc <__flatcc_fb_clear_parser@@Base+0xf30>
   32988:	ldr	r3, [sp, #120]	; 0x78
   3298c:	adds	r1, r3, #0
   32990:	str	r3, [sp, #24]
   32994:	ldrd	r2, [sp, #16]
   32998:	movne	r1, #1
   3299c:	str	r1, [sp, #56]	; 0x38
   329a0:	mov	r0, r2
   329a4:	orrs	r3, r0, r3
   329a8:	movne	r3, #0
   329ac:	andeq	r3, r1, #1
   329b0:	cmp	r3, #0
   329b4:	bne	32ad0 <__flatcc_fb_clear_parser@@Base+0xe24>
   329b8:	ldr	r3, [sp, #28]
   329bc:	cmp	r3, #0
   329c0:	bne	32a00 <__flatcc_fb_clear_parser@@Base+0xd54>
   329c4:	ldrd	r2, [r9, #216]	; 0xd8
   329c8:	ldrd	r0, [sp, #16]
   329cc:	cmp	r3, r1
   329d0:	cmpeq	r2, r0
   329d4:	bls	33528 <__flatcc_fb_clear_parser@@Base+0x187c>
   329d8:	ldr	r1, [sp, #44]	; 0x2c
   329dc:	cmp	r1, #0
   329e0:	ldrheq	r2, [sp, #16]
   329e4:	moveq	r3, #0
   329e8:	streq	r1, [sp, #28]
   329ec:	strdeq	r2, [r8, #96]	; 0x60
   329f0:	ldrd	r2, [sp, #16]
   329f4:	adds	r2, r2, #1
   329f8:	adc	r3, r3, #0
   329fc:	strd	r2, [sp, #16]
   32a00:	ldrh	r3, [r8, #24]
   32a04:	sub	r3, r3, #7
   32a08:	cmp	r3, #5
   32a0c:	addls	pc, pc, r3, lsl #2
   32a10:	b	3320c <__flatcc_fb_clear_parser@@Base+0x1560>
   32a14:	b	32ecc <__flatcc_fb_clear_parser@@Base+0x1220>
   32a18:	b	32ffc <__flatcc_fb_clear_parser@@Base+0x1350>
   32a1c:	b	32fc4 <__flatcc_fb_clear_parser@@Base+0x1318>
   32a20:	b	3306c <__flatcc_fb_clear_parser@@Base+0x13c0>
   32a24:	b	32dc4 <__flatcc_fb_clear_parser@@Base+0x1118>
   32a28:	b	32cbc <__flatcc_fb_clear_parser@@Base+0x1010>
   32a2c:	ldr	r1, [r5, #16]
   32a30:	ldr	r0, [sp, #56]	; 0x38
   32a34:	bl	2ade0 <ptr_set_find_item@@Base>
   32a38:	cmp	r0, #0
   32a3c:	beq	3285c <__flatcc_fb_clear_parser@@Base+0xbb0>
   32a40:	mov	r3, r5
   32a44:	ldrh	r2, [r3, #8]
   32a48:	cmp	r2, #0
   32a4c:	beq	32a64 <__flatcc_fb_clear_parser@@Base+0xdb8>
   32a50:	ldr	r0, [r9, #176]	; 0xb0
   32a54:	cmp	r0, #0
   32a58:	beq	3414c <__flatcc_fb_clear_parser@@Base+0x24a0>
   32a5c:	cmp	r2, #1
   32a60:	bne	33fe4 <__flatcc_fb_clear_parser@@Base+0x2338>
   32a64:	ldrh	r6, [r8, #72]	; 0x48
   32a68:	str	r3, [r8, #104]	; 0x68
   32a6c:	b	328f8 <__flatcc_fb_clear_parser@@Base+0xc4c>
   32a70:	mov	r4, r0
   32a74:	b	32838 <__flatcc_fb_clear_parser@@Base+0xb8c>
   32a78:	ldr	r2, [pc, #2344]	; 333a8 <__flatcc_fb_clear_parser@@Base+0x16fc>
   32a7c:	ldr	r1, [r4, #4]
   32a80:	mov	r3, r0
   32a84:	str	r0, [sp, #4]
   32a88:	str	r0, [sp]
   32a8c:	add	r2, pc, r2
   32a90:	mov	r0, r9
   32a94:	bl	2d4ec <__flatcc_error_report@@Base>
   32a98:	b	326a0 <__flatcc_fb_clear_parser@@Base+0x9f4>
   32a9c:	cmp	r2, #2
   32aa0:	bne	32b18 <__flatcc_fb_clear_parser@@Base+0xe6c>
   32aa4:	ldrh	r3, [r4, #16]
   32aa8:	cmp	r3, #2
   32aac:	beq	326a0 <__flatcc_fb_clear_parser@@Base+0x9f4>
   32ab0:	ldr	r1, [r4, #4]
   32ab4:	mov	r3, r0
   32ab8:	str	r0, [sp, #4]
   32abc:	str	r0, [sp]
   32ac0:	ldr	r2, [sp, #56]	; 0x38
   32ac4:	mov	r0, r9
   32ac8:	bl	2d4ec <__flatcc_error_report@@Base>
   32acc:	b	326a0 <__flatcc_fb_clear_parser@@Base+0x9f4>
   32ad0:	ldr	r3, [r9, #112]	; 0x70
   32ad4:	ldr	r2, [r9, #216]	; 0xd8
   32ad8:	mov	r0, r3
   32adc:	mov	r1, #0
   32ae0:	str	r3, [sp, #72]	; 0x48
   32ae4:	bl	13f94 <memset@plt>
   32ae8:	mov	r3, #1
   32aec:	str	r3, [sp, #44]	; 0x2c
   32af0:	b	329b8 <__flatcc_fb_clear_parser@@Base+0xd0c>
   32af4:	ldr	r3, [r8, #16]
   32af8:	ldr	r3, [r3, #16]
   32afc:	add	r3, r3, #996	; 0x3e4
   32b00:	add	r3, r3, #3
   32b04:	cmp	r3, #27
   32b08:	movhi	r3, fp
   32b0c:	bls	33080 <__flatcc_fb_clear_parser@@Base+0x13d4>
   32b10:	str	r3, [r8, #16]
   32b14:	b	325f8 <__flatcc_fb_clear_parser@@Base+0x94c>
   32b18:	cmp	r2, #5
   32b1c:	bne	33884 <__flatcc_fb_clear_parser@@Base+0x1bd8>
   32b20:	ldrh	r3, [r4, #16]
   32b24:	cmp	r3, #5
   32b28:	beq	326a0 <__flatcc_fb_clear_parser@@Base+0x9f4>
   32b2c:	ldr	r1, [r4, #4]
   32b30:	mov	r3, r0
   32b34:	str	r0, [sp, #4]
   32b38:	str	r0, [sp]
   32b3c:	ldr	r2, [sp, #60]	; 0x3c
   32b40:	mov	r0, r9
   32b44:	bl	2d4ec <__flatcc_error_report@@Base>
   32b48:	b	326a0 <__flatcc_fb_clear_parser@@Base+0x9f4>
   32b4c:	sub	r6, r6, r2
   32b50:	add	r0, r0, #1
   32b54:	add	r3, ip, r0
   32b58:	str	r3, [sp, #24]
   32b5c:	b	32810 <__flatcc_fb_clear_parser@@Base+0xb64>
   32b60:	ldr	ip, [sp, #28]
   32b64:	cmp	ip, #0
   32b68:	beq	33098 <__flatcc_fb_clear_parser@@Base+0x13ec>
   32b6c:	ldr	r3, [sp, #36]	; 0x24
   32b70:	cmp	r3, #0
   32b74:	beq	33fd8 <__flatcc_fb_clear_parser@@Base+0x232c>
   32b78:	ldr	r2, [sp, #32]
   32b7c:	ldr	r1, [sp, #36]	; 0x24
   32b80:	ldrh	r3, [r2, #10]
   32b84:	cmp	r1, #1
   32b88:	orr	r3, r3, #8
   32b8c:	strh	r3, [r2, #10]
   32b90:	beq	33fd8 <__flatcc_fb_clear_parser@@Base+0x232c>
   32b94:	ldr	r3, [r9, #156]	; 0x9c
   32b98:	cmp	r3, #0
   32b9c:	movne	r3, #0
   32ba0:	strne	r3, [sp, #36]	; 0x24
   32ba4:	beq	331b0 <__flatcc_fb_clear_parser@@Base+0x1504>
   32ba8:	ldr	r3, [sp, #28]
   32bac:	cmp	r3, #0
   32bb0:	bne	33fd8 <__flatcc_fb_clear_parser@@Base+0x232c>
   32bb4:	ldr	r0, [sp, #36]	; 0x24
   32bb8:	add	sp, sp, #268	; 0x10c
   32bbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32bc0:	ldr	r3, [r8, #16]
   32bc4:	cmp	r3, #4
   32bc8:	bne	32958 <__flatcc_fb_clear_parser@@Base+0xcac>
   32bcc:	ldrh	r6, [r8, #72]	; 0x48
   32bd0:	and	r6, r6, #3072	; 0xc00
   32bd4:	cmp	r6, #3072	; 0xc00
   32bd8:	bne	32988 <__flatcc_fb_clear_parser@@Base+0xcdc>
   32bdc:	ldr	r2, [pc, #1992]	; 333ac <__flatcc_fb_clear_parser@@Base+0x1700>
   32be0:	mov	r3, #0
   32be4:	ldr	r1, [r8, #4]
   32be8:	add	r2, pc, r2
   32bec:	str	r3, [sp, #4]
   32bf0:	str	r3, [sp]
   32bf4:	mov	r0, r9
   32bf8:	bl	2d4ec <__flatcc_error_report@@Base>
   32bfc:	b	32988 <__flatcc_fb_clear_parser@@Base+0xcdc>
   32c00:	ldr	r0, [r9, #412]	; 0x19c
   32c04:	cmp	r0, #0
   32c08:	beq	328d8 <__flatcc_fb_clear_parser@@Base+0xc2c>
   32c0c:	cmp	r2, #0
   32c10:	movne	r1, ip
   32c14:	moveq	r1, #0
   32c18:	bl	2c404 <fb_scope_table_find@@Base>
   32c1c:	cmp	r0, #0
   32c20:	beq	328d0 <__flatcc_fb_clear_parser@@Base+0xc24>
   32c24:	mov	r2, r6
   32c28:	ldr	r1, [sp, #24]
   32c2c:	add	r0, r0, #4
   32c30:	bl	2b4b0 <fb_symbol_table_find@@Base>
   32c34:	subs	r3, r0, #0
   32c38:	bne	32a44 <__flatcc_fb_clear_parser@@Base+0xd98>
   32c3c:	b	328d0 <__flatcc_fb_clear_parser@@Base+0xc24>
   32c40:	ldr	r2, [pc, #1896]	; 333b0 <__flatcc_fb_clear_parser@@Base+0x1704>
   32c44:	ldr	r1, [r4, #4]
   32c48:	mov	r3, r0
   32c4c:	str	r0, [sp, #4]
   32c50:	str	r0, [sp]
   32c54:	add	r2, pc, r2
   32c58:	mov	r0, r9
   32c5c:	bl	2d4ec <__flatcc_error_report@@Base>
   32c60:	b	32414 <__flatcc_fb_clear_parser@@Base+0x768>
   32c64:	ldr	r3, [r8, #16]
   32c68:	cmp	r3, #4
   32c6c:	bne	32920 <__flatcc_fb_clear_parser@@Base+0xc74>
   32c70:	tst	r6, #2048	; 0x800
   32c74:	beq	3297c <__flatcc_fb_clear_parser@@Base+0xcd0>
   32c78:	ldrh	r6, [r8, #72]	; 0x48
   32c7c:	b	32bd0 <__flatcc_fb_clear_parser@@Base+0xf24>
   32c80:	cmp	r2, #2
   32c84:	beq	331e0 <__flatcc_fb_clear_parser@@Base+0x1534>
   32c88:	cmp	r2, #5
   32c8c:	bne	33830 <__flatcc_fb_clear_parser@@Base+0x1b84>
   32c90:	ldrh	r3, [r4, #16]
   32c94:	cmp	r3, #5
   32c98:	beq	32414 <__flatcc_fb_clear_parser@@Base+0x768>
   32c9c:	ldr	r1, [r4, #4]
   32ca0:	mov	r3, r0
   32ca4:	str	r0, [sp, #4]
   32ca8:	str	r0, [sp]
   32cac:	mov	r2, sl
   32cb0:	mov	r0, r9
   32cb4:	bl	2d4ec <__flatcc_error_report@@Base>
   32cb8:	b	32414 <__flatcc_fb_clear_parser@@Base+0x768>
   32cbc:	ldr	r1, [r8, #16]
   32cc0:	ldr	r3, [sp, #32]
   32cc4:	cmp	r1, #0
   32cc8:	ldr	r5, [r3, #12]
   32ccc:	beq	335fc <__flatcc_fb_clear_parser@@Base+0x1950>
   32cd0:	mov	r7, r1
   32cd4:	mov	r2, #0
   32cd8:	b	32ce4 <__flatcc_fb_clear_parser@@Base+0x1038>
   32cdc:	mov	r2, r3
   32ce0:	mov	r7, r6
   32ce4:	ldr	r6, [r7]
   32ce8:	add	r3, r2, #1
   32cec:	cmp	r6, #0
   32cf0:	bne	32cdc <__flatcc_fb_clear_parser@@Base+0x1030>
   32cf4:	adds	r0, r5, #0
   32cf8:	movne	r0, #1
   32cfc:	cmp	r3, #1
   32d00:	movne	r0, #0
   32d04:	cmp	r0, #0
   32d08:	beq	335a0 <__flatcc_fb_clear_parser@@Base+0x18f4>
   32d0c:	add	r4, r9, #352	; 0x160
   32d10:	add	r3, r9, #524	; 0x20c
   32d14:	str	r3, [sp, #60]	; 0x3c
   32d18:	ldr	r3, [r7, #4]
   32d1c:	add	r0, r5, #4
   32d20:	ldm	r3, {r1, r2}
   32d24:	bl	2b4b0 <fb_symbol_table_find@@Base>
   32d28:	subs	fp, r0, #0
   32d2c:	beq	32d3c <__flatcc_fb_clear_parser@@Base+0x1090>
   32d30:	ldrh	r3, [fp, #8]
   32d34:	cmp	r3, #4
   32d38:	bls	332f4 <__flatcc_fb_clear_parser@@Base+0x1648>
   32d3c:	ldr	r3, [r5]
   32d40:	cmp	r3, #0
   32d44:	beq	335f8 <__flatcc_fb_clear_parser@@Base+0x194c>
   32d48:	mov	fp, #0
   32d4c:	ldr	r3, [r3]
   32d50:	add	fp, fp, #1
   32d54:	cmp	r3, #0
   32d58:	bne	32d4c <__flatcc_fb_clear_parser@@Base+0x10a0>
   32d5c:	rsb	fp, fp, #1
   32d60:	b	32d90 <__flatcc_fb_clear_parser@@Base+0x10e4>
   32d64:	cmp	r4, #0
   32d68:	beq	32d8c <__flatcc_fb_clear_parser@@Base+0x10e0>
   32d6c:	ldr	r0, [r9, #412]	; 0x19c
   32d70:	cmp	r0, #0
   32d74:	beq	32d8c <__flatcc_fb_clear_parser@@Base+0x10e0>
   32d78:	mov	r2, fp
   32d7c:	ldr	r1, [r5]
   32d80:	bl	2c404 <fb_scope_table_find@@Base>
   32d84:	cmp	r0, #0
   32d88:	bne	33520 <__flatcc_fb_clear_parser@@Base+0x1874>
   32d8c:	add	fp, fp, #1
   32d90:	cmp	fp, #0
   32d94:	bne	32d64 <__flatcc_fb_clear_parser@@Base+0x10b8>
   32d98:	cmp	r4, #0
   32d9c:	beq	335f8 <__flatcc_fb_clear_parser@@Base+0x194c>
   32da0:	ldr	r0, [r9, #412]	; 0x19c
   32da4:	cmp	r0, #0
   32da8:	beq	335f8 <__flatcc_fb_clear_parser@@Base+0x194c>
   32dac:	mov	r1, fp
   32db0:	mov	r2, #0
   32db4:	bl	2c404 <fb_scope_table_find@@Base>
   32db8:	subs	r5, r0, #0
   32dbc:	bne	32d18 <__flatcc_fb_clear_parser@@Base+0x106c>
   32dc0:	b	335f8 <__flatcc_fb_clear_parser@@Base+0x194c>
   32dc4:	ldr	r1, [r8, #16]
   32dc8:	ldr	r3, [sp, #32]
   32dcc:	cmp	r1, #0
   32dd0:	ldr	r5, [r3, #12]
   32dd4:	beq	3367c <__flatcc_fb_clear_parser@@Base+0x19d0>
   32dd8:	mov	r6, r1
   32ddc:	mov	r2, #0
   32de0:	b	32dec <__flatcc_fb_clear_parser@@Base+0x1140>
   32de4:	mov	r2, r3
   32de8:	mov	r6, r7
   32dec:	ldr	r7, [r6]
   32df0:	add	r3, r2, #1
   32df4:	cmp	r7, #0
   32df8:	bne	32de4 <__flatcc_fb_clear_parser@@Base+0x1138>
   32dfc:	adds	r0, r5, #0
   32e00:	movne	r0, #1
   32e04:	cmp	r3, #1
   32e08:	movne	r0, #0
   32e0c:	cmp	r0, #0
   32e10:	beq	33620 <__flatcc_fb_clear_parser@@Base+0x1974>
   32e14:	add	r4, r9, #352	; 0x160
   32e18:	add	r3, r9, #524	; 0x20c
   32e1c:	str	r3, [sp, #60]	; 0x3c
   32e20:	ldr	r3, [r6, #4]
   32e24:	add	r0, r5, #4
   32e28:	ldm	r3, {r1, r2}
   32e2c:	bl	2b4b0 <fb_symbol_table_find@@Base>
   32e30:	subs	fp, r0, #0
   32e34:	beq	32e44 <__flatcc_fb_clear_parser@@Base+0x1198>
   32e38:	ldrh	r3, [fp, #8]
   32e3c:	cmp	r3, #4
   32e40:	bls	33238 <__flatcc_fb_clear_parser@@Base+0x158c>
   32e44:	ldr	r3, [r5]
   32e48:	cmp	r3, #0
   32e4c:	beq	33678 <__flatcc_fb_clear_parser@@Base+0x19cc>
   32e50:	mov	fp, #0
   32e54:	ldr	r3, [r3]
   32e58:	add	fp, fp, #1
   32e5c:	cmp	r3, #0
   32e60:	bne	32e54 <__flatcc_fb_clear_parser@@Base+0x11a8>
   32e64:	rsb	fp, fp, #1
   32e68:	b	32e98 <__flatcc_fb_clear_parser@@Base+0x11ec>
   32e6c:	cmp	r4, #0
   32e70:	beq	32e94 <__flatcc_fb_clear_parser@@Base+0x11e8>
   32e74:	ldr	r0, [r9, #412]	; 0x19c
   32e78:	cmp	r0, #0
   32e7c:	beq	32e94 <__flatcc_fb_clear_parser@@Base+0x11e8>
   32e80:	mov	r2, fp
   32e84:	ldr	r1, [r5]
   32e88:	bl	2c404 <fb_scope_table_find@@Base>
   32e8c:	cmp	r0, #0
   32e90:	bne	33518 <__flatcc_fb_clear_parser@@Base+0x186c>
   32e94:	add	fp, fp, #1
   32e98:	cmp	fp, #0
   32e9c:	bne	32e6c <__flatcc_fb_clear_parser@@Base+0x11c0>
   32ea0:	cmp	r4, #0
   32ea4:	beq	33678 <__flatcc_fb_clear_parser@@Base+0x19cc>
   32ea8:	ldr	r0, [r9, #412]	; 0x19c
   32eac:	cmp	r0, #0
   32eb0:	beq	33678 <__flatcc_fb_clear_parser@@Base+0x19cc>
   32eb4:	mov	r1, fp
   32eb8:	mov	r2, r7
   32ebc:	bl	2c404 <fb_scope_table_find@@Base>
   32ec0:	subs	r5, r0, #0
   32ec4:	bne	32e20 <__flatcc_fb_clear_parser@@Base+0x1174>
   32ec8:	b	33678 <__flatcc_fb_clear_parser@@Base+0x19cc>
   32ecc:	ldr	r2, [r8, #16]
   32ed0:	ldr	r3, [pc, #1244]	; 333b4 <__flatcc_fb_clear_parser@@Base+0x1708>
   32ed4:	ldrh	r5, [r8, #56]	; 0x38
   32ed8:	add	r3, pc, r3
   32edc:	add	r3, r3, r2, lsl #2
   32ee0:	mov	r2, #0
   32ee4:	ldr	r3, [r3, #140]	; 0x8c
   32ee8:	cmp	r5, r2
   32eec:	str	r3, [r8, #88]	; 0x58
   32ef0:	strh	r3, [r8, #74]	; 0x4a
   32ef4:	str	r2, [r8, #92]	; 0x5c
   32ef8:	bne	33914 <__flatcc_fb_clear_parser@@Base+0x1c68>
   32efc:	ldr	r3, [sp, #28]
   32f00:	cmp	r3, #0
   32f04:	bne	32f84 <__flatcc_fb_clear_parser@@Base+0x12d8>
   32f08:	ldr	r3, [sp, #44]	; 0x2c
   32f0c:	ldr	r2, [sp, #56]	; 0x38
   32f10:	eor	r3, r3, #1
   32f14:	ands	r2, r2, r3
   32f18:	bne	336f8 <__flatcc_fb_clear_parser@@Base+0x1a4c>
   32f1c:	ldr	ip, [sp, #44]	; 0x2c
   32f20:	ldr	r3, [sp, #24]
   32f24:	cmp	r3, #0
   32f28:	movne	ip, #0
   32f2c:	andeq	ip, ip, #1
   32f30:	cmp	ip, #0
   32f34:	bne	338bc <__flatcc_fb_clear_parser@@Base+0x1c10>
   32f38:	ldr	r3, [sp, #24]
   32f3c:	cmp	r3, #0
   32f40:	beq	339a4 <__flatcc_fb_clear_parser@@Base+0x1cf8>
   32f44:	ldrh	r3, [r3, #16]
   32f48:	cmp	r3, #5
   32f4c:	beq	33970 <__flatcc_fb_clear_parser@@Base+0x1cc4>
   32f50:	cmp	r3, #4
   32f54:	ldr	r3, [sp, #24]
   32f58:	ldr	r1, [r3, #4]
   32f5c:	mov	r3, ip
   32f60:	str	ip, [sp, #4]
   32f64:	str	ip, [sp]
   32f68:	beq	33868 <__flatcc_fb_clear_parser@@Base+0x1bbc>
   32f6c:	ldr	r2, [pc, #1092]	; 333b8 <__flatcc_fb_clear_parser@@Base+0x170c>
   32f70:	mov	r0, r9
   32f74:	add	r2, pc, r2
   32f78:	bl	2d4ec <__flatcc_error_report@@Base>
   32f7c:	mov	r3, #1
   32f80:	str	r3, [sp, #28]
   32f84:	ldrh	r3, [r8, #72]	; 0x48
   32f88:	tst	r3, #128	; 0x80
   32f8c:	beq	325b0 <__flatcc_fb_clear_parser@@Base+0x904>
   32f90:	ldr	r3, [sp, #36]	; 0x24
   32f94:	cmp	r5, #0
   32f98:	add	r3, r3, #1
   32f9c:	str	r3, [sp, #36]	; 0x24
   32fa0:	bne	325b0 <__flatcc_fb_clear_parser@@Base+0x904>
   32fa4:	mov	r3, #0
   32fa8:	ldr	r1, [r8, #4]
   32fac:	ldr	r2, [sp, #76]	; 0x4c
   32fb0:	str	r3, [sp, #4]
   32fb4:	str	r3, [sp]
   32fb8:	mov	r0, r9
   32fbc:	bl	2d4ec <__flatcc_error_report@@Base>
   32fc0:	b	325b0 <__flatcc_fb_clear_parser@@Base+0x904>
   32fc4:	ldrh	r5, [r8, #56]	; 0x38
   32fc8:	cmp	r5, #0
   32fcc:	beq	32efc <__flatcc_fb_clear_parser@@Base+0x1250>
   32fd0:	ldr	r2, [pc, #996]	; 333bc <__flatcc_fb_clear_parser@@Base+0x1710>
   32fd4:	mov	r3, #0
   32fd8:	ldr	r1, [r8, #4]
   32fdc:	add	r2, pc, r2
   32fe0:	str	r3, [sp, #4]
   32fe4:	str	r3, [sp]
   32fe8:	mov	r0, r9
   32fec:	bl	2d4ec <__flatcc_error_report@@Base>
   32ff0:	mov	r3, #1
   32ff4:	strh	r3, [r8, #24]
   32ff8:	b	325b0 <__flatcc_fb_clear_parser@@Base+0x904>
   32ffc:	ldrh	r3, [r8, #56]	; 0x38
   33000:	cmp	r3, #13
   33004:	addne	ip, r8, #48	; 0x30
   33008:	beq	33ac4 <__flatcc_fb_clear_parser@@Base+0x1e18>
   3300c:	cmp	r3, #0
   33010:	bne	33028 <__flatcc_fb_clear_parser@@Base+0x137c>
   33014:	mov	r2, #0
   33018:	mov	r3, #0
   3301c:	mov	r1, #5
   33020:	strd	r2, [r8, #48]	; 0x30
   33024:	strh	r1, [r8, #56]	; 0x38
   33028:	mov	r3, ip
   3302c:	ldr	r2, [r8, #16]
   33030:	mov	r1, r8
   33034:	mov	r0, r9
   33038:	bl	36d7c <__flatcc_fb_coerce_scalar_type@@Base>
   3303c:	cmp	r0, #0
   33040:	bne	3322c <__flatcc_fb_clear_parser@@Base+0x1580>
   33044:	ldr	r2, [r8, #16]
   33048:	ldr	r3, [pc, #880]	; 333c0 <__flatcc_fb_clear_parser@@Base+0x1714>
   3304c:	str	r0, [r8, #92]	; 0x5c
   33050:	add	r3, pc, r3
   33054:	add	r3, r3, r2, lsl #2
   33058:	mov	r5, #1
   3305c:	ldr	r3, [r3, #140]	; 0x8c
   33060:	str	r3, [r8, #88]	; 0x58
   33064:	strh	r3, [r8, #74]	; 0x4a
   33068:	b	32efc <__flatcc_fb_clear_parser@@Base+0x1250>
   3306c:	ldrh	r3, [r8, #56]	; 0x38
   33070:	cmp	r3, #0
   33074:	bne	338e8 <__flatcc_fb_clear_parser@@Base+0x1c3c>
   33078:	ldr	r5, [r9, #164]	; 0xa4
   3307c:	b	32efc <__flatcc_fb_clear_parser@@Base+0x1250>
   33080:	ldr	r2, [pc, #828]	; 333c4 <__flatcc_fb_clear_parser@@Base+0x1718>
   33084:	add	r2, pc, r2
   33088:	add	r3, r2, r3, lsl #2
   3308c:	ldr	r3, [r3, #28]
   33090:	str	r3, [r8, #16]
   33094:	b	325f8 <__flatcc_fb_clear_parser@@Base+0x94c>
   33098:	ldrd	r0, [sp, #16]
   3309c:	ldr	r3, [sp, #44]	; 0x2c
   330a0:	ldr	lr, [sp, #32]
   330a4:	cmp	r3, #0
   330a8:	mov	r2, r0
   330ac:	mov	r3, r1
   330b0:	strd	r2, [lr, #96]	; 0x60
   330b4:	beq	341f0 <__flatcc_fb_clear_parser@@Base+0x2544>
   330b8:	ldrd	r4, [sp, #48]	; 0x30
   330bc:	mov	r3, r0
   330c0:	orrs	r3, r3, r1
   330c4:	movne	r3, #1
   330c8:	moveq	r3, #0
   330cc:	cmp	r1, r5
   330d0:	cmpeq	r0, r4
   330d4:	movhi	r3, #0
   330d8:	andls	r3, r3, #1
   330dc:	cmp	r3, #0
   330e0:	beq	33728 <__flatcc_fb_clear_parser@@Base+0x1a7c>
   330e4:	orrs	r3, r4, r5
   330e8:	beq	33174 <__flatcc_fb_clear_parser@@Base+0x14c8>
   330ec:	ldr	fp, [pc, #724]	; 333c8 <__flatcc_fb_clear_parser@@Base+0x171c>
   330f0:	ldr	r4, [sp, #72]	; 0x48
   330f4:	add	fp, pc, fp
   330f8:	mov	r3, #10
   330fc:	mov	r6, #0
   33100:	mov	r7, #0
   33104:	add	r8, sp, #164	; 0xa4
   33108:	str	ip, [sp, #12]
   3310c:	ldrb	r5, [r4], #1
   33110:	cmp	r5, #0
   33114:	bne	3315c <__flatcc_fb_clear_parser@@Base+0x14b0>
   33118:	cmp	r3, #0
   3311c:	sub	sl, r3, #1
   33120:	beq	33c10 <__flatcc_fb_clear_parser@@Base+0x1f64>
   33124:	mov	r2, r6
   33128:	mov	r3, r7
   3312c:	mov	r1, fp
   33130:	mov	r0, r8
   33134:	bl	13fe8 <sprintf@plt>
   33138:	ldr	r3, [sp, #32]
   3313c:	mov	r2, r8
   33140:	mov	r0, r9
   33144:	ldr	r1, [r3, #4]
   33148:	ldr	r3, [sp, #12]
   3314c:	str	r5, [sp, #4]
   33150:	str	r5, [sp]
   33154:	bl	2d4ec <__flatcc_error_report@@Base>
   33158:	mov	r3, sl
   3315c:	ldrd	r0, [sp, #48]	; 0x30
   33160:	adds	r6, r6, #1
   33164:	adc	r7, r7, #0
   33168:	cmp	r1, r7
   3316c:	cmpeq	r0, r6
   33170:	bne	3310c <__flatcc_fb_clear_parser@@Base+0x1460>
   33174:	ldr	r3, [sp, #36]	; 0x24
   33178:	cmp	r3, #0
   3317c:	beq	33fd8 <__flatcc_fb_clear_parser@@Base+0x232c>
   33180:	ldr	r2, [sp, #32]
   33184:	ldr	r1, [sp, #36]	; 0x24
   33188:	ldrh	r3, [r2, #10]
   3318c:	cmp	r1, #1
   33190:	orr	r3, r3, #8
   33194:	strh	r3, [r2, #10]
   33198:	beq	33fd8 <__flatcc_fb_clear_parser@@Base+0x232c>
   3319c:	ldr	r3, [r9, #156]	; 0x9c
   331a0:	cmp	r3, #0
   331a4:	moveq	r3, #1
   331a8:	streq	r3, [sp, #28]
   331ac:	bne	33fd8 <__flatcc_fb_clear_parser@@Base+0x232c>
   331b0:	ldr	r3, [sp, #32]
   331b4:	ldr	r2, [pc, #528]	; 333cc <__flatcc_fb_clear_parser@@Base+0x1720>
   331b8:	mov	r0, r9
   331bc:	ldr	r1, [r3, #4]
   331c0:	mov	r3, #0
   331c4:	str	r3, [sp, #4]
   331c8:	str	r3, [sp]
   331cc:	add	r2, pc, r2
   331d0:	bl	2d4ec <__flatcc_error_report@@Base>
   331d4:	mvn	r3, #0
   331d8:	str	r3, [sp, #36]	; 0x24
   331dc:	b	32ba8 <__flatcc_fb_clear_parser@@Base+0xefc>
   331e0:	ldrh	r3, [r4, #16]
   331e4:	cmp	r3, #2
   331e8:	beq	32414 <__flatcc_fb_clear_parser@@Base+0x768>
   331ec:	ldr	r1, [r4, #4]
   331f0:	mov	r3, r0
   331f4:	str	r0, [sp, #4]
   331f8:	str	r0, [sp]
   331fc:	mov	r2, fp
   33200:	mov	r0, r9
   33204:	bl	2d4ec <__flatcc_error_report@@Base>
   33208:	b	32414 <__flatcc_fb_clear_parser@@Base+0x768>
   3320c:	ldr	r2, [pc, #444]	; 333d0 <__flatcc_fb_clear_parser@@Base+0x1724>
   33210:	mov	r3, #0
   33214:	ldr	r1, [r8, #4]
   33218:	add	r2, pc, r2
   3321c:	str	r3, [sp, #4]
   33220:	str	r3, [sp]
   33224:	mov	r0, r9
   33228:	bl	2d4ec <__flatcc_error_report@@Base>
   3322c:	mov	r3, #1
   33230:	strh	r3, [r8, #24]
   33234:	b	325b0 <__flatcc_fb_clear_parser@@Base+0x904>
   33238:	ldr	r1, [fp, #16]
   3323c:	ldr	r0, [sp, #60]	; 0x3c
   33240:	bl	2ade0 <ptr_set_find_item@@Base>
   33244:	cmp	r0, #0
   33248:	beq	32e44 <__flatcc_fb_clear_parser@@Base+0x1198>
   3324c:	ldrh	r3, [fp, #8]
   33250:	cmp	r3, #4
   33254:	bhi	332c4 <__flatcc_fb_clear_parser@@Base+0x1618>
   33258:	mov	r4, #1
   3325c:	lsl	r3, r4, r3
   33260:	tst	r3, #27
   33264:	beq	332c4 <__flatcc_fb_clear_parser@@Base+0x1618>
   33268:	ldrh	r5, [r8, #56]	; 0x38
   3326c:	cmp	r5, #0
   33270:	bne	34034 <__flatcc_fb_clear_parser@@Base+0x2388>
   33274:	str	fp, [r8, #16]
   33278:	ldrd	r2, [fp, #112]	; 0x70
   3327c:	ldrh	r0, [fp, #8]
   33280:	ldrh	r1, [fp, #104]	; 0x68
   33284:	strd	r2, [r8, #88]	; 0x58
   33288:	cmp	r0, #4
   3328c:	mov	r3, #15
   33290:	strh	r1, [r8, #74]	; 0x4a
   33294:	strh	r3, [r8, #24]
   33298:	bne	32efc <__flatcc_fb_clear_parser@@Base+0x1250>
   3329c:	ldr	r3, [sp, #28]
   332a0:	cmp	r3, #0
   332a4:	beq	34120 <__flatcc_fb_clear_parser@@Base+0x2474>
   332a8:	ldrh	r3, [r8, #72]	; 0x48
   332ac:	tst	r3, #128	; 0x80
   332b0:	beq	325b0 <__flatcc_fb_clear_parser@@Base+0x904>
   332b4:	ldr	r3, [sp, #36]	; 0x24
   332b8:	add	r3, r3, #1
   332bc:	str	r3, [sp, #36]	; 0x24
   332c0:	b	32fa4 <__flatcc_fb_clear_parser@@Base+0x12f8>
   332c4:	mov	r2, #0
   332c8:	ldr	r3, [r8, #16]
   332cc:	ldr	r1, [r8, #4]
   332d0:	str	r2, [sp, #4]
   332d4:	str	r2, [sp]
   332d8:	ldr	r2, [pc, #244]	; 333d4 <__flatcc_fb_clear_parser@@Base+0x1728>
   332dc:	mov	r0, r9
   332e0:	add	r2, pc, r2
   332e4:	bl	2d4ec <__flatcc_error_report@@Base>
   332e8:	mov	r3, #1
   332ec:	strh	r3, [r8, #24]
   332f0:	b	325b0 <__flatcc_fb_clear_parser@@Base+0x904>
   332f4:	ldr	r1, [fp, #16]
   332f8:	ldr	r0, [sp, #60]	; 0x3c
   332fc:	bl	2ade0 <ptr_set_find_item@@Base>
   33300:	ldr	r3, [sp, #60]	; 0x3c
   33304:	cmp	r0, #0
   33308:	beq	32d3c <__flatcc_fb_clear_parser@@Base+0x1090>
   3330c:	str	r3, [sp, #60]	; 0x3c
   33310:	ldrh	r3, [fp, #8]
   33314:	cmp	r3, #4
   33318:	addls	pc, pc, r3, lsl #2
   3331c:	b	33940 <__flatcc_fb_clear_parser@@Base+0x1c94>
   33320:	b	33474 <__flatcc_fb_clear_parser@@Base+0x17c8>
   33324:	b	33474 <__flatcc_fb_clear_parser@@Base+0x17c8>
   33328:	b	33774 <__flatcc_fb_clear_parser@@Base+0x1ac8>
   3332c:	b	33760 <__flatcc_fb_clear_parser@@Base+0x1ab4>
   33330:	b	33474 <__flatcc_fb_clear_parser@@Base+0x17c8>
   33334:	andeq	r5, r2, ip, asr r5
   33338:	andeq	r5, r2, r8, ror #10
   3333c:	andeq	r5, r2, r8, asr #9
   33340:			; <UNDEFINED> instruction: 0x00024eb4
   33344:	andeq	r5, r2, r8, lsl #10
   33348:	andeq	r5, r2, r0, ror #9
   3334c:	andeq	r5, r2, r4, asr r4
   33350:	muleq	r2, ip, r3
   33354:	andeq	r5, r2, r0, asr r4
   33358:	andeq	r5, r2, r4, lsl #21
   3335c:	andeq	r5, r2, ip, ror r2
   33360:	andeq	r5, r2, r4, lsl r2
   33364:	andeq	r5, r2, r8, lsr #3
   33368:	andeq	r5, r2, r4, lsr r1
   3336c:	ldrdeq	r5, [r2], -r8
   33370:			; <UNDEFINED> instruction: 0x000253b0
   33374:	strdeq	r5, [r2], -ip
   33378:	andeq	r4, r2, r8, asr #24
   3337c:	andeq	r5, r2, r8, asr #5
   33380:	andeq	r5, r2, ip, lsl #5
   33384:	andeq	r5, r2, r8, asr r2
   33388:	andeq	r5, r2, r4, lsr #4
   3338c:	andeq	r5, r2, r8, asr #3
   33390:	andeq	r0, r0, r6, asr #31
   33394:	andeq	r5, r2, r4, lsl r1
   33398:	andeq	r5, r2, r4, asr #3
   3339c:	strdeq	r5, [r2], -ip
   333a0:	andeq	r5, r2, r0, ror r1
   333a4:	andeq	r5, r2, r4, ror r1
   333a8:	andeq	r4, r2, r8, ror sp
   333ac:	andeq	r4, r2, r0, lsr pc
   333b0:			; <UNDEFINED> instruction: 0x00024bb0
   333b4:	muleq	r2, r8, r3
   333b8:	andeq	r4, r2, r4, lsr #31
   333bc:	andeq	r4, r2, ip, lsl ip
   333c0:	andeq	r4, r2, r0, lsr #4
   333c4:	andeq	r4, r2, ip, ror #3
   333c8:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   333cc:	andeq	r4, r2, r0, asr lr
   333d0:	andeq	r4, r2, ip, lsl ip
   333d4:	andeq	r4, r2, r8, lsl #22
   333d8:	andeq	r4, r2, r8, ror #15
   333dc:	andeq	r4, r2, ip, lsl #12
   333e0:	andeq	r4, r2, ip, lsr #8
   333e4:	andeq	r4, r2, r0, lsr #12
   333e8:	andeq	r4, r2, r0, lsr r7
   333ec:			; <UNDEFINED> instruction: 0x000243bc
   333f0:	andeq	r4, r2, r0, lsr #5
   333f4:	andeq	r4, r2, r8, asr #14
   333f8:	strdeq	r4, [r2], -ip
   333fc:	andeq	r4, r2, ip, asr r5
   33400:	andeq	r4, r2, r8, lsl #13
   33404:	andeq	r4, r2, r8, asr #11
   33408:	andeq	r4, r2, r0, ror #5
   3340c:	andeq	r4, r2, ip, ror r2
   33410:	andeq	r4, r2, ip, asr r3
   33414:	andeq	r4, r2, ip, ror #9
   33418:	andeq	r4, r2, ip, lsl #9
   3341c:	andeq	r4, r2, r8, lsr #7
   33420:	andeq	r4, r2, r8, lsr #1
   33424:	andeq	r3, r2, r8, asr #27
   33428:	andeq	r3, r2, r4, lsr pc
   3342c:	andeq	r3, r2, r8, lsr #12
   33430:	andeq	r3, r2, ip, lsr #20
   33434:	andeq	r3, r2, r8, lsr ip
   33438:	andeq	r3, r2, r0, lsr #25
   3343c:	andeq	r3, r2, r8, lsr #17
   33440:	andeq	r3, r2, ip, asr fp
   33444:	muleq	r2, r8, r0
   33448:	strdeq	r3, [r2], -r0
   3344c:	andeq	r3, r2, r8, lsl #19
   33450:	andeq	r0, r0, fp, asr r1
   33454:	andeq	r3, r2, r0, asr #32
   33458:	muleq	r2, r8, r1
   3345c:	strdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   33460:	andeq	r0, r0, r1, lsl #6
   33464:	andeq	r3, r2, ip, lsl r0
   33468:	andeq	r3, r2, r4, ror r1
   3346c:	muleq	r2, r0, r5
   33470:	andeq	r0, r0, r2, lsl #6
   33474:	mov	r5, #0
   33478:	str	fp, [r8, #16]
   3347c:	ldr	r3, [sp, #28]
   33480:	ldrh	r0, [fp, #8]
   33484:	eor	r1, r3, #1
   33488:	ldrd	r2, [fp, #112]	; 0x70
   3348c:	cmp	r0, #4
   33490:	movne	r1, #0
   33494:	andeq	r1, r1, #1
   33498:	cmp	r1, #0
   3349c:	ldrh	r1, [fp, #104]	; 0x68
   334a0:	strd	r2, [r8, #88]	; 0x58
   334a4:	mov	r3, #14
   334a8:	strh	r1, [r8, #74]	; 0x4a
   334ac:	strh	r3, [r8, #24]
   334b0:	beq	334d8 <__flatcc_fb_clear_parser@@Base+0x182c>
   334b4:	ldr	r3, [sp, #44]	; 0x2c
   334b8:	cmp	r3, #0
   334bc:	ldrheq	r2, [sp, #16]
   334c0:	moveq	r3, #0
   334c4:	strdeq	r2, [r8, #96]	; 0x60
   334c8:	ldrd	r2, [sp, #16]
   334cc:	adds	r2, r2, #1
   334d0:	adc	r3, r3, #0
   334d4:	strd	r2, [sp, #16]
   334d8:	ldrh	r3, [r8, #56]	; 0x38
   334dc:	cmp	r3, #0
   334e0:	beq	337a4 <__flatcc_fb_clear_parser@@Base+0x1af8>
   334e4:	cmp	r0, #3
   334e8:	beq	33c34 <__flatcc_fb_clear_parser@@Base+0x1f88>
   334ec:	ldr	r2, [pc, #-284]	; 333d8 <__flatcc_fb_clear_parser@@Base+0x172c>
   334f0:	mov	r3, #0
   334f4:	ldr	r1, [r8, #4]
   334f8:	add	r2, pc, r2
   334fc:	str	r3, [sp, #4]
   33500:	str	r3, [sp]
   33504:	mov	r0, r9
   33508:	bl	2d4ec <__flatcc_error_report@@Base>
   3350c:	mov	r3, #1
   33510:	strh	r3, [r8, #24]
   33514:	b	325b0 <__flatcc_fb_clear_parser@@Base+0x904>
   33518:	mov	r5, r0
   3351c:	b	32e20 <__flatcc_fb_clear_parser@@Base+0x1174>
   33520:	mov	r5, r0
   33524:	b	32d18 <__flatcc_fb_clear_parser@@Base+0x106c>
   33528:	ldr	r2, [sp, #28]
   3352c:	ldr	r1, [r8, #4]
   33530:	mov	r3, r2
   33534:	str	r2, [sp, #4]
   33538:	str	r2, [sp]
   3353c:	ldr	r2, [pc, #-360]	; 333dc <__flatcc_fb_clear_parser@@Base+0x1730>
   33540:	mov	r0, r9
   33544:	add	r2, pc, r2
   33548:	bl	2d4ec <__flatcc_error_report@@Base>
   3354c:	mov	r3, #1
   33550:	str	r3, [sp, #28]
   33554:	b	329f0 <__flatcc_fb_clear_parser@@Base+0xd44>
   33558:	tst	r6, #1024	; 0x400
   3355c:	beq	32944 <__flatcc_fb_clear_parser@@Base+0xc98>
   33560:	tst	r6, #2048	; 0x800
   33564:	bne	32c78 <__flatcc_fb_clear_parser@@Base+0xfcc>
   33568:	b	3297c <__flatcc_fb_clear_parser@@Base+0xcd0>
   3356c:	ldr	r2, [pc, #-404]	; 333e0 <__flatcc_fb_clear_parser@@Base+0x1734>
   33570:	mov	r3, #0
   33574:	ldr	r1, [r7, #4]
   33578:	add	r2, pc, r2
   3357c:	str	r3, [sp, #4]
   33580:	str	r3, [sp]
   33584:	mov	r0, r9
   33588:	bl	2d4ec <__flatcc_error_report@@Base>
   3358c:	ldrh	r6, [r8, #72]	; 0x48
   33590:	b	328f8 <__flatcc_fb_clear_parser@@Base+0xc4c>
   33594:	strh	r4, [r8, #72]	; 0x48
   33598:	ldr	r6, [sp, #40]	; 0x28
   3359c:	b	3290c <__flatcc_fb_clear_parser@@Base+0xc60>
   335a0:	cmp	r3, #1
   335a4:	movne	r3, r1
   335a8:	moveq	r3, #0
   335ac:	cmn	r9, #352	; 0x160
   335b0:	beq	335fc <__flatcc_fb_clear_parser@@Base+0x1950>
   335b4:	ldr	r0, [r9, #412]	; 0x19c
   335b8:	cmp	r0, #0
   335bc:	beq	335fc <__flatcc_fb_clear_parser@@Base+0x1950>
   335c0:	rsb	r2, r2, #0
   335c4:	mov	r1, r3
   335c8:	bl	2c404 <fb_scope_table_find@@Base>
   335cc:	cmp	r0, #0
   335d0:	beq	335f8 <__flatcc_fb_clear_parser@@Base+0x194c>
   335d4:	ldr	r3, [r7, #4]
   335d8:	add	r0, r0, #4
   335dc:	ldm	r3, {r1, r2}
   335e0:	bl	2b4b0 <fb_symbol_table_find@@Base>
   335e4:	subs	fp, r0, #0
   335e8:	beq	335f8 <__flatcc_fb_clear_parser@@Base+0x194c>
   335ec:	ldrh	r3, [fp, #8]
   335f0:	cmp	r3, #4
   335f4:	bls	33cac <__flatcc_fb_clear_parser@@Base+0x2000>
   335f8:	ldr	r1, [r8, #16]
   335fc:	ldr	r2, [pc, #-544]	; 333e4 <__flatcc_fb_clear_parser@@Base+0x1738>
   33600:	mov	r3, r8
   33604:	add	r2, pc, r2
   33608:	mov	r0, r9
   3360c:	bl	2eabc <error_ref_sym@@Base>
   33610:	mov	r3, #1
   33614:	strh	r3, [r8, #24]
   33618:	str	r3, [sp, #28]
   3361c:	b	325b0 <__flatcc_fb_clear_parser@@Base+0x904>
   33620:	cmp	r3, #1
   33624:	moveq	r7, r0
   33628:	movne	r7, r1
   3362c:	cmn	r9, #352	; 0x160
   33630:	beq	3367c <__flatcc_fb_clear_parser@@Base+0x19d0>
   33634:	ldr	r0, [r9, #412]	; 0x19c
   33638:	cmp	r0, #0
   3363c:	beq	3367c <__flatcc_fb_clear_parser@@Base+0x19d0>
   33640:	rsb	r2, r2, #0
   33644:	mov	r1, r7
   33648:	bl	2c404 <fb_scope_table_find@@Base>
   3364c:	cmp	r0, #0
   33650:	beq	33678 <__flatcc_fb_clear_parser@@Base+0x19cc>
   33654:	ldr	r3, [r6, #4]
   33658:	add	r0, r0, #4
   3365c:	ldm	r3, {r1, r2}
   33660:	bl	2b4b0 <fb_symbol_table_find@@Base>
   33664:	subs	fp, r0, #0
   33668:	beq	33678 <__flatcc_fb_clear_parser@@Base+0x19cc>
   3366c:	ldrh	r3, [fp, #8]
   33670:	cmp	r3, #4
   33674:	bls	33bf8 <__flatcc_fb_clear_parser@@Base+0x1f4c>
   33678:	ldr	r1, [r8, #16]
   3367c:	ldr	r2, [pc, #-668]	; 333e8 <__flatcc_fb_clear_parser@@Base+0x173c>
   33680:	mov	r3, r8
   33684:	add	r2, pc, r2
   33688:	mov	r0, r9
   3368c:	bl	2eabc <error_ref_sym@@Base>
   33690:	mov	r3, #1
   33694:	strh	r3, [r8, #24]
   33698:	b	325b0 <__flatcc_fb_clear_parser@@Base+0x904>
   3369c:	ldr	r2, [pc, #-696]	; 333ec <__flatcc_fb_clear_parser@@Base+0x1740>
   336a0:	mov	r3, #0
   336a4:	ldr	r1, [r8, #4]
   336a8:	add	r2, pc, r2
   336ac:	str	r3, [sp, #4]
   336b0:	str	r3, [sp]
   336b4:	mov	r0, r9
   336b8:	bl	2d4ec <__flatcc_error_report@@Base>
   336bc:	ldrh	r6, [r8, #72]	; 0x48
   336c0:	b	3290c <__flatcc_fb_clear_parser@@Base+0xc60>
   336c4:	ldr	r2, [pc, #-732]	; 333f0 <__flatcc_fb_clear_parser@@Base+0x1744>
   336c8:	ldr	r1, [r8, #4]
   336cc:	mov	r3, fp
   336d0:	mov	r0, r9
   336d4:	str	fp, [sp, #4]
   336d8:	str	fp, [sp]
   336dc:	add	r2, pc, r2
   336e0:	bl	2d4ec <__flatcc_error_report@@Base>
   336e4:	mvn	r3, #0
   336e8:	str	r3, [sp, #36]	; 0x24
   336ec:	ldr	r0, [sp, #36]	; 0x24
   336f0:	add	sp, sp, #268	; 0x10c
   336f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   336f8:	ldr	r3, [sp, #24]
   336fc:	ldr	r2, [pc, #-784]	; 333f4 <__flatcc_fb_clear_parser@@Base+0x1748>
   33700:	mov	r0, r9
   33704:	ldr	r1, [r3, #4]
   33708:	mov	r3, #0
   3370c:	str	r3, [sp, #4]
   33710:	str	r3, [sp]
   33714:	add	r2, pc, r2
   33718:	bl	2d4ec <__flatcc_error_report@@Base>
   3371c:	mov	r3, #1
   33720:	str	r3, [sp, #28]
   33724:	b	32f84 <__flatcc_fb_clear_parser@@Base+0x12d8>
   33728:	ldr	r3, [sp, #36]	; 0x24
   3372c:	cmp	r3, #0
   33730:	beq	32bb4 <__flatcc_fb_clear_parser@@Base+0xf08>
   33734:	ldr	r2, [sp, #32]
   33738:	ldr	r1, [sp, #36]	; 0x24
   3373c:	ldrh	r3, [r2, #10]
   33740:	cmp	r1, #1
   33744:	orr	r3, r3, #8
   33748:	strh	r3, [r2, #10]
   3374c:	beq	34218 <__flatcc_fb_clear_parser@@Base+0x256c>
   33750:	ldr	r3, [r9, #156]	; 0x9c
   33754:	cmp	r3, #0
   33758:	bne	34218 <__flatcc_fb_clear_parser@@Base+0x256c>
   3375c:	b	331b0 <__flatcc_fb_clear_parser@@Base+0x1504>
   33760:	ldrh	r3, [r8, #72]	; 0x48
   33764:	tst	r3, #256	; 0x100
   33768:	bne	34010 <__flatcc_fb_clear_parser@@Base+0x2364>
   3376c:	ldr	r5, [r9, #148]	; 0x94
   33770:	b	33478 <__flatcc_fb_clear_parser@@Base+0x17cc>
   33774:	mov	r2, #0
   33778:	ldr	r3, [fp, #4]
   3377c:	ldr	r1, [r8, #4]
   33780:	str	r2, [sp, #4]
   33784:	str	r2, [sp]
   33788:	ldr	r2, [pc, #-920]	; 333f8 <__flatcc_fb_clear_parser@@Base+0x174c>
   3378c:	mov	r0, r9
   33790:	add	r2, pc, r2
   33794:	bl	2d4ec <__flatcc_error_report@@Base>
   33798:	mov	r3, #1
   3379c:	strh	r3, [r8, #24]
   337a0:	b	325b0 <__flatcc_fb_clear_parser@@Base+0x904>
   337a4:	cmp	r0, #3
   337a8:	bne	32efc <__flatcc_fb_clear_parser@@Base+0x1250>
   337ac:	mov	r2, #0
   337b0:	mov	r3, #0
   337b4:	mov	r4, r8
   337b8:	mov	r1, #5
   337bc:	strh	r1, [r8, #56]	; 0x38
   337c0:	strd	r2, [r4, #48]!	; 0x30
   337c4:	mov	r1, fp
   337c8:	mov	r0, r9
   337cc:	ldr	r2, [fp, #40]	; 0x28
   337d0:	mov	r3, r4
   337d4:	bl	36d7c <__flatcc_fb_coerce_scalar_type@@Base>
   337d8:	cmp	r0, #0
   337dc:	bne	3322c <__flatcc_fb_clear_parser@@Base+0x1580>
   337e0:	ldr	r3, [r9, #212]	; 0xd4
   337e4:	cmp	r3, #0
   337e8:	beq	32efc <__flatcc_fb_clear_parser@@Base+0x1250>
   337ec:	ldr	r0, [r8, #16]
   337f0:	mov	r1, r4
   337f4:	add	r0, r0, #72	; 0x48
   337f8:	bl	3da68 <fb_value_set_find_item@@Base>
   337fc:	cmp	r0, #0
   33800:	bne	32efc <__flatcc_fb_clear_parser@@Base+0x1250>
   33804:	ldr	r2, [pc, #-1040]	; 333fc <__flatcc_fb_clear_parser@@Base+0x1750>
   33808:	ldr	r3, [fp, #4]
   3380c:	ldr	r1, [r8, #4]
   33810:	add	r2, pc, r2
   33814:	str	r0, [sp, #4]
   33818:	str	r0, [sp]
   3381c:	mov	r0, r9
   33820:	bl	2d4ec <__flatcc_error_report@@Base>
   33824:	mov	r3, #1
   33828:	strh	r3, [r8, #24]
   3382c:	b	325b0 <__flatcc_fb_clear_parser@@Base+0x904>
   33830:	cmp	r2, #4
   33834:	bne	33f30 <__flatcc_fb_clear_parser@@Base+0x2284>
   33838:	ldrh	r3, [r4, #16]
   3383c:	sub	r3, r3, #4
   33840:	cmp	r3, #1
   33844:	bls	32414 <__flatcc_fb_clear_parser@@Base+0x768>
   33848:	ldr	r1, [r4, #4]
   3384c:	mov	r3, r0
   33850:	str	r0, [sp, #4]
   33854:	str	r0, [sp]
   33858:	ldr	r2, [sp, #12]
   3385c:	mov	r0, r9
   33860:	bl	2d4ec <__flatcc_error_report@@Base>
   33864:	b	32414 <__flatcc_fb_clear_parser@@Base+0x768>
   33868:	ldr	r2, [pc, #-1136]	; 33400 <__flatcc_fb_clear_parser@@Base+0x1754>
   3386c:	mov	r0, r9
   33870:	add	r2, pc, r2
   33874:	bl	2d4ec <__flatcc_error_report@@Base>
   33878:	mov	r3, #1
   3387c:	str	r3, [sp, #28]
   33880:	b	32f84 <__flatcc_fb_clear_parser@@Base+0x12d8>
   33884:	cmp	r2, #4
   33888:	bne	34174 <__flatcc_fb_clear_parser@@Base+0x24c8>
   3388c:	ldrh	r3, [r4, #16]
   33890:	sub	r3, r3, #4
   33894:	cmp	r3, #1
   33898:	bls	326a0 <__flatcc_fb_clear_parser@@Base+0x9f4>
   3389c:	ldr	r1, [r4, #4]
   338a0:	mov	r3, r0
   338a4:	str	r0, [sp, #4]
   338a8:	str	r0, [sp]
   338ac:	ldr	r2, [sp, #68]	; 0x44
   338b0:	mov	r0, r9
   338b4:	bl	2d4ec <__flatcc_error_report@@Base>
   338b8:	b	326a0 <__flatcc_fb_clear_parser@@Base+0x9f4>
   338bc:	ldr	r1, [r8, #4]
   338c0:	mov	r3, r2
   338c4:	str	r2, [sp, #4]
   338c8:	str	r2, [sp]
   338cc:	ldr	r2, [pc, #-1232]	; 33404 <__flatcc_fb_clear_parser@@Base+0x1758>
   338d0:	mov	r0, r9
   338d4:	add	r2, pc, r2
   338d8:	bl	2d4ec <__flatcc_error_report@@Base>
   338dc:	mov	r3, #1
   338e0:	str	r3, [sp, #28]
   338e4:	b	32f84 <__flatcc_fb_clear_parser@@Base+0x12d8>
   338e8:	ldr	r2, [pc, #-1256]	; 33408 <__flatcc_fb_clear_parser@@Base+0x175c>
   338ec:	mov	r3, #0
   338f0:	ldr	r1, [r8, #4]
   338f4:	add	r2, pc, r2
   338f8:	str	r3, [sp, #4]
   338fc:	str	r3, [sp]
   33900:	mov	r0, r9
   33904:	bl	2d4ec <__flatcc_error_report@@Base>
   33908:	mov	r3, #1
   3390c:	strh	r3, [r8, #24]
   33910:	b	325b0 <__flatcc_fb_clear_parser@@Base+0x904>
   33914:	ldr	r1, [r8, #4]
   33918:	mov	r3, r2
   3391c:	str	r2, [sp, #4]
   33920:	str	r2, [sp]
   33924:	ldr	r2, [pc, #-1312]	; 3340c <__flatcc_fb_clear_parser@@Base+0x1760>
   33928:	mov	r0, r9
   3392c:	add	r2, pc, r2
   33930:	bl	2d4ec <__flatcc_error_report@@Base>
   33934:	mov	r3, #1
   33938:	strh	r3, [r8, #24]
   3393c:	b	325b0 <__flatcc_fb_clear_parser@@Base+0x904>
   33940:	mov	r2, #0
   33944:	ldr	r3, [fp, #4]
   33948:	ldr	r1, [r8, #4]
   3394c:	str	r2, [sp, #4]
   33950:	str	r2, [sp]
   33954:	ldr	r2, [pc, #-1356]	; 33410 <__flatcc_fb_clear_parser@@Base+0x1764>
   33958:	mov	r0, r9
   3395c:	add	r2, pc, r2
   33960:	bl	2d4ec <__flatcc_error_report@@Base>
   33964:	mov	r3, #1
   33968:	strh	r3, [r8, #24]
   3396c:	b	325b0 <__flatcc_fb_clear_parser@@Base+0x904>
   33970:	ldr	r3, [sp, #24]
   33974:	ldrd	r0, [r3, #8]
   33978:	ldrd	r2, [r9, #216]	; 0xd8
   3397c:	cmp	r1, r3
   33980:	cmpeq	r0, r2
   33984:	bcs	33f90 <__flatcc_fb_clear_parser@@Base+0x22e4>
   33988:	ldrd	r2, [sp, #48]	; 0x30
   3398c:	mov	r1, #0
   33990:	uxth	r0, r0
   33994:	cmp	r3, r1
   33998:	cmpeq	r2, r0
   3399c:	strd	r0, [r8, #96]	; 0x60
   339a0:	strdcc	r0, [sp, #48]	; 0x30
   339a4:	ldr	r3, [sp, #44]	; 0x2c
   339a8:	cmp	r3, #0
   339ac:	beq	33a58 <__flatcc_fb_clear_parser@@Base+0x1dac>
   339b0:	ldr	r3, [r8, #96]	; 0x60
   339b4:	ldr	r1, [sp, #72]	; 0x48
   339b8:	add	r2, r1, r3
   339bc:	ldrb	r3, [r1, r3]
   339c0:	cmp	r3, #2
   339c4:	beq	33a8c <__flatcc_fb_clear_parser@@Base+0x1de0>
   339c8:	cmp	r3, #0
   339cc:	moveq	r3, #1
   339d0:	strbeq	r3, [r2]
   339d4:	bne	33a64 <__flatcc_fb_clear_parser@@Base+0x1db8>
   339d8:	cmp	fp, #0
   339dc:	streq	fp, [sp, #28]
   339e0:	beq	32f84 <__flatcc_fb_clear_parser@@Base+0x12d8>
   339e4:	ldrh	r3, [fp, #8]
   339e8:	cmp	r3, #4
   339ec:	movne	r3, #0
   339f0:	strne	r3, [sp, #28]
   339f4:	bne	32f84 <__flatcc_fb_clear_parser@@Base+0x12d8>
   339f8:	ldrd	r2, [r8, #96]	; 0x60
   339fc:	ldrh	r0, [r8, #24]
   33a00:	cmp	r3, #0
   33a04:	cmpeq	r2, #1
   33a08:	bls	33fbc <__flatcc_fb_clear_parser@@Base+0x2310>
   33a0c:	ldr	r3, [sp, #72]	; 0x48
   33a10:	sub	r2, r2, #1
   33a14:	add	r1, r3, r2
   33a18:	ldrb	r3, [r3, r2]
   33a1c:	cmp	r3, #2
   33a20:	beq	3405c <__flatcc_fb_clear_parser@@Base+0x23b0>
   33a24:	cmp	r3, #0
   33a28:	beq	33dc4 <__flatcc_fb_clear_parser@@Base+0x2118>
   33a2c:	ldr	r3, [sp, #24]
   33a30:	ldr	r2, [sp, #84]	; 0x54
   33a34:	cmp	r0, #11
   33a38:	ldr	r1, [r3, #4]
   33a3c:	ldr	r3, [sp, #80]	; 0x50
   33a40:	movne	r2, r3
   33a44:	mov	r3, #0
   33a48:	str	r3, [sp, #4]
   33a4c:	str	r3, [sp]
   33a50:	mov	r0, r9
   33a54:	bl	2d4ec <__flatcc_error_report@@Base>
   33a58:	ldr	r3, [sp, #44]	; 0x2c
   33a5c:	str	r3, [sp, #28]
   33a60:	b	32f84 <__flatcc_fb_clear_parser@@Base+0x12d8>
   33a64:	ldr	r3, [sp, #24]
   33a68:	ldr	r2, [pc, #-1628]	; 33414 <__flatcc_fb_clear_parser@@Base+0x1768>
   33a6c:	mov	r0, r9
   33a70:	ldr	r1, [r3, #4]
   33a74:	mov	r3, #0
   33a78:	str	r3, [sp, #4]
   33a7c:	str	r3, [sp]
   33a80:	add	r2, pc, r2
   33a84:	bl	2d4ec <__flatcc_error_report@@Base>
   33a88:	b	339d8 <__flatcc_fb_clear_parser@@Base+0x1d2c>
   33a8c:	ldr	r3, [sp, #24]
   33a90:	ldr	r2, [pc, #-1664]	; 33418 <__flatcc_fb_clear_parser@@Base+0x176c>
   33a94:	mov	r0, r9
   33a98:	ldr	r1, [r3, #4]
   33a9c:	mov	r3, #0
   33aa0:	str	r3, [sp, #4]
   33aa4:	str	r3, [sp]
   33aa8:	add	r2, pc, r2
   33aac:	bl	2d4ec <__flatcc_error_report@@Base>
   33ab0:	ldr	r3, [sp, #44]	; 0x2c
   33ab4:	str	r3, [sp, #28]
   33ab8:	b	32f84 <__flatcc_fb_clear_parser@@Base+0x12d8>
   33abc:	ldr	r6, [sp, #40]	; 0x28
   33ac0:	b	324fc <__flatcc_fb_clear_parser@@Base+0x850>
   33ac4:	ldr	r1, [r8, #48]	; 0x30
   33ac8:	ldr	r3, [sp, #32]
   33acc:	cmp	r1, #0
   33ad0:	ldr	r5, [r3, #12]
   33ad4:	beq	341cc <__flatcc_fb_clear_parser@@Base+0x2520>
   33ad8:	mov	r3, #0
   33adc:	mov	r2, r3
   33ae0:	mov	r6, r1
   33ae4:	mov	r0, r3
   33ae8:	b	33af8 <__flatcc_fb_clear_parser@@Base+0x1e4c>
   33aec:	mov	r0, r6
   33af0:	mov	r2, r3
   33af4:	mov	r6, ip
   33af8:	ldr	ip, [r6]
   33afc:	add	r3, r2, #1
   33b00:	cmp	ip, #0
   33b04:	bne	33aec <__flatcc_fb_clear_parser@@Base+0x1e40>
   33b08:	cmp	r0, #0
   33b0c:	mov	r7, r0
   33b10:	beq	33da4 <__flatcc_fb_clear_parser@@Base+0x20f8>
   33b14:	adds	r3, r5, #0
   33b18:	movne	r3, #1
   33b1c:	cmp	r2, #1
   33b20:	movne	r3, #0
   33b24:	cmp	r3, #0
   33b28:	bne	33ce4 <__flatcc_fb_clear_parser@@Base+0x2038>
   33b2c:	cmp	r2, #1
   33b30:	moveq	ip, r3
   33b34:	movne	ip, r1
   33b38:	cmn	r9, #352	; 0x160
   33b3c:	beq	33da4 <__flatcc_fb_clear_parser@@Base+0x20f8>
   33b40:	ldr	r0, [r9, #412]	; 0x19c
   33b44:	cmp	r0, #0
   33b48:	beq	33da4 <__flatcc_fb_clear_parser@@Base+0x20f8>
   33b4c:	rsb	r2, r2, #1
   33b50:	mov	r1, ip
   33b54:	bl	2c404 <fb_scope_table_find@@Base>
   33b58:	cmp	r0, #0
   33b5c:	beq	33da0 <__flatcc_fb_clear_parser@@Base+0x20f4>
   33b60:	ldr	r3, [r7, #4]
   33b64:	add	r0, r0, #4
   33b68:	ldm	r3, {r1, r2}
   33b6c:	bl	2b4b0 <fb_symbol_table_find@@Base>
   33b70:	subs	r3, r0, #0
   33b74:	beq	33da0 <__flatcc_fb_clear_parser@@Base+0x20f4>
   33b78:	ldrh	r2, [r3, #8]
   33b7c:	cmp	r2, #4
   33b80:	bhi	33da0 <__flatcc_fb_clear_parser@@Base+0x20f4>
   33b84:	ldr	r1, [r3, #16]
   33b88:	add	r0, r9, #524	; 0x20c
   33b8c:	str	r3, [sp, #60]	; 0x3c
   33b90:	bl	2ade0 <ptr_set_find_item@@Base>
   33b94:	ldr	r3, [sp, #60]	; 0x3c
   33b98:	cmp	r0, #0
   33b9c:	beq	33da0 <__flatcc_fb_clear_parser@@Base+0x20f4>
   33ba0:	ldrh	r2, [r3, #8]
   33ba4:	cmp	r2, #3
   33ba8:	bne	33da0 <__flatcc_fb_clear_parser@@Base+0x20f4>
   33bac:	ldr	r1, [r6, #4]
   33bb0:	add	r0, r3, #56	; 0x38
   33bb4:	ldm	r1, {r1, r2}
   33bb8:	bl	2b4b0 <fb_symbol_table_find@@Base>
   33bbc:	subs	r3, r0, #0
   33bc0:	beq	33da0 <__flatcc_fb_clear_parser@@Base+0x20f4>
   33bc4:	add	r3, r3, #48	; 0x30
   33bc8:	add	ip, r8, #48	; 0x30
   33bcc:	ldm	r3, {r0, r1, r2, r3}
   33bd0:	stm	ip, {r0, r1, r2, r3}
   33bd4:	ldrh	r3, [r8, #56]	; 0x38
   33bd8:	b	3300c <__flatcc_fb_clear_parser@@Base+0x1360>
   33bdc:	mov	r2, r6
   33be0:	mov	r6, #0
   33be4:	b	32b50 <__flatcc_fb_clear_parser@@Base+0xea4>
   33be8:	mov	r2, lr
   33bec:	str	ip, [sp, #24]
   33bf0:	mov	r6, #0
   33bf4:	b	32810 <__flatcc_fb_clear_parser@@Base+0xb64>
   33bf8:	ldr	r1, [fp, #16]
   33bfc:	add	r0, r9, #524	; 0x20c
   33c00:	bl	2ade0 <ptr_set_find_item@@Base>
   33c04:	cmp	r0, #0
   33c08:	bne	3324c <__flatcc_fb_clear_parser@@Base+0x15a0>
   33c0c:	b	33678 <__flatcc_fb_clear_parser@@Base+0x19cc>
   33c10:	ldr	r2, [sp, #32]
   33c14:	mov	r0, r9
   33c18:	ldr	r1, [r2, #4]
   33c1c:	ldr	r2, [pc, #-2056]	; 3341c <__flatcc_fb_clear_parser@@Base+0x1770>
   33c20:	str	r3, [sp, #4]
   33c24:	str	r3, [sp]
   33c28:	add	r2, pc, r2
   33c2c:	bl	2d4ec <__flatcc_error_report@@Base>
   33c30:	b	33174 <__flatcc_fb_clear_parser@@Base+0x14c8>
   33c34:	cmp	r3, #13
   33c38:	beq	33dd4 <__flatcc_fb_clear_parser@@Base+0x2128>
   33c3c:	add	r4, r8, #48	; 0x30
   33c40:	mov	r3, r4
   33c44:	ldr	r2, [fp, #40]	; 0x28
   33c48:	mov	r1, r8
   33c4c:	mov	r0, r9
   33c50:	bl	36d7c <__flatcc_fb_coerce_scalar_type@@Base>
   33c54:	cmp	r0, #0
   33c58:	bne	3322c <__flatcc_fb_clear_parser@@Base+0x1580>
   33c5c:	ldr	r3, [r9, #212]	; 0xd4
   33c60:	cmp	r3, #0
   33c64:	beq	32efc <__flatcc_fb_clear_parser@@Base+0x1250>
   33c68:	ldr	r0, [r8, #16]
   33c6c:	mov	r1, r4
   33c70:	add	r0, r0, #72	; 0x48
   33c74:	bl	3da68 <fb_value_set_find_item@@Base>
   33c78:	cmp	r0, #0
   33c7c:	bne	32efc <__flatcc_fb_clear_parser@@Base+0x1250>
   33c80:	ldr	r2, [pc, #-2152]	; 33420 <__flatcc_fb_clear_parser@@Base+0x1774>
   33c84:	ldr	r1, [r8, #4]
   33c88:	mov	r3, r0
   33c8c:	str	r0, [sp, #4]
   33c90:	str	r0, [sp]
   33c94:	add	r2, pc, r2
   33c98:	mov	r0, r9
   33c9c:	bl	2d4ec <__flatcc_error_report@@Base>
   33ca0:	mov	r3, #1
   33ca4:	strh	r3, [r8, #24]
   33ca8:	b	325b0 <__flatcc_fb_clear_parser@@Base+0x904>
   33cac:	add	r3, r9, #524	; 0x20c
   33cb0:	mov	r0, r3
   33cb4:	ldr	r1, [fp, #16]
   33cb8:	str	r3, [sp, #60]	; 0x3c
   33cbc:	bl	2ade0 <ptr_set_find_item@@Base>
   33cc0:	cmp	r0, #0
   33cc4:	bne	33310 <__flatcc_fb_clear_parser@@Base+0x1664>
   33cc8:	b	335f8 <__flatcc_fb_clear_parser@@Base+0x194c>
   33ccc:	ldr	r1, [sp, #32]
   33cd0:	mov	r2, #0
   33cd4:	mov	r3, #0
   33cd8:	str	r8, [sp, #36]	; 0x24
   33cdc:	strd	r2, [r1, #96]	; 0x60
   33ce0:	b	32bb4 <__flatcc_fb_clear_parser@@Base+0xf08>
   33ce4:	add	r4, r9, #352	; 0x160
   33ce8:	add	r3, r9, #524	; 0x20c
   33cec:	str	ip, [sp, #64]	; 0x40
   33cf0:	str	r3, [sp, #60]	; 0x3c
   33cf4:	str	r6, [sp, #68]	; 0x44
   33cf8:	ldr	r3, [r7, #4]
   33cfc:	add	r0, r5, #4
   33d00:	ldm	r3, {r1, r2}
   33d04:	bl	2b4b0 <fb_symbol_table_find@@Base>
   33d08:	subs	r3, r0, #0
   33d0c:	beq	33d1c <__flatcc_fb_clear_parser@@Base+0x2070>
   33d10:	ldrh	r2, [r3, #8]
   33d14:	cmp	r2, #4
   33d18:	bls	33f64 <__flatcc_fb_clear_parser@@Base+0x22b8>
   33d1c:	ldr	r2, [r5]
   33d20:	cmp	r2, #0
   33d24:	beq	33da0 <__flatcc_fb_clear_parser@@Base+0x20f4>
   33d28:	mov	r3, #0
   33d2c:	ldr	r2, [r2]
   33d30:	add	r3, r3, #1
   33d34:	cmp	r2, #0
   33d38:	bne	33d2c <__flatcc_fb_clear_parser@@Base+0x2080>
   33d3c:	rsb	r6, r3, #1
   33d40:	b	33d70 <__flatcc_fb_clear_parser@@Base+0x20c4>
   33d44:	cmp	r4, #0
   33d48:	beq	33d6c <__flatcc_fb_clear_parser@@Base+0x20c0>
   33d4c:	ldr	r0, [r9, #412]	; 0x19c
   33d50:	cmp	r0, #0
   33d54:	beq	33d6c <__flatcc_fb_clear_parser@@Base+0x20c0>
   33d58:	mov	r2, r6
   33d5c:	ldr	r1, [r5]
   33d60:	bl	2c404 <fb_scope_table_find@@Base>
   33d64:	cmp	r0, #0
   33d68:	bne	33f88 <__flatcc_fb_clear_parser@@Base+0x22dc>
   33d6c:	add	r6, r6, #1
   33d70:	cmp	r6, #0
   33d74:	bne	33d44 <__flatcc_fb_clear_parser@@Base+0x2098>
   33d78:	cmp	r4, #0
   33d7c:	beq	33da0 <__flatcc_fb_clear_parser@@Base+0x20f4>
   33d80:	ldr	r0, [r9, #412]	; 0x19c
   33d84:	cmp	r0, #0
   33d88:	beq	33da0 <__flatcc_fb_clear_parser@@Base+0x20f4>
   33d8c:	mov	r1, r6
   33d90:	ldr	r2, [sp, #64]	; 0x40
   33d94:	bl	2c404 <fb_scope_table_find@@Base>
   33d98:	subs	r5, r0, #0
   33d9c:	bne	33cf8 <__flatcc_fb_clear_parser@@Base+0x204c>
   33da0:	ldr	r1, [r8, #48]	; 0x30
   33da4:	ldr	r2, [pc, #-2440]	; 33424 <__flatcc_fb_clear_parser@@Base+0x1778>
   33da8:	mov	r3, r8
   33dac:	add	r2, pc, r2
   33db0:	mov	r0, r9
   33db4:	bl	2eabc <error_ref_sym@@Base>
   33db8:	mov	r3, #1
   33dbc:	strh	r3, [r8, #24]
   33dc0:	b	325b0 <__flatcc_fb_clear_parser@@Base+0x904>
   33dc4:	mov	r2, #2
   33dc8:	str	r3, [sp, #28]
   33dcc:	strb	r2, [r1]
   33dd0:	b	32f84 <__flatcc_fb_clear_parser@@Base+0x12d8>
   33dd4:	ldr	r3, [r8, #48]	; 0x30
   33dd8:	ldr	r2, [sp, #32]
   33ddc:	cmp	r3, #0
   33de0:	str	r3, [sp, #68]	; 0x44
   33de4:	ldr	r4, [r2, #12]
   33de8:	beq	341cc <__flatcc_fb_clear_parser@@Base+0x2520>
   33dec:	mov	r2, #0
   33df0:	b	33e00 <__flatcc_fb_clear_parser@@Base+0x2154>
   33df4:	mov	r6, r3
   33df8:	mov	r2, r0
   33dfc:	mov	r3, r1
   33e00:	ldr	r1, [r3]
   33e04:	add	r0, r2, #1
   33e08:	cmp	r1, #0
   33e0c:	bne	33df4 <__flatcc_fb_clear_parser@@Base+0x2148>
   33e10:	cmp	r6, #0
   33e14:	str	r3, [sp, #100]	; 0x64
   33e18:	beq	33eec <__flatcc_fb_clear_parser@@Base+0x2240>
   33e1c:	adds	r3, r4, #0
   33e20:	movne	r3, #1
   33e24:	cmp	r2, #1
   33e28:	movne	r3, #0
   33e2c:	cmp	r3, #0
   33e30:	beq	340ac <__flatcc_fb_clear_parser@@Base+0x2400>
   33e34:	add	r7, r9, #352	; 0x160
   33e38:	str	r1, [sp, #104]	; 0x68
   33e3c:	str	r5, [sp, #64]	; 0x40
   33e40:	ldr	r3, [r6, #4]
   33e44:	add	r0, r4, #4
   33e48:	ldm	r3, {r1, r2}
   33e4c:	bl	2b4b0 <fb_symbol_table_find@@Base>
   33e50:	subs	r3, r0, #0
   33e54:	beq	33e64 <__flatcc_fb_clear_parser@@Base+0x21b8>
   33e58:	ldrh	r2, [r3, #8]
   33e5c:	cmp	r2, #4
   33e60:	bls	3407c <__flatcc_fb_clear_parser@@Base+0x23d0>
   33e64:	ldr	r2, [r4]
   33e68:	cmp	r2, #0
   33e6c:	beq	33ee8 <__flatcc_fb_clear_parser@@Base+0x223c>
   33e70:	mov	r3, #0
   33e74:	ldr	r2, [r2]
   33e78:	add	r3, r3, #1
   33e7c:	cmp	r2, #0
   33e80:	bne	33e74 <__flatcc_fb_clear_parser@@Base+0x21c8>
   33e84:	rsb	r5, r3, #1
   33e88:	b	33eb8 <__flatcc_fb_clear_parser@@Base+0x220c>
   33e8c:	cmp	r7, #0
   33e90:	beq	33eb4 <__flatcc_fb_clear_parser@@Base+0x2208>
   33e94:	ldr	r0, [r9, #412]	; 0x19c
   33e98:	cmp	r0, #0
   33e9c:	beq	33eb4 <__flatcc_fb_clear_parser@@Base+0x2208>
   33ea0:	mov	r2, r5
   33ea4:	ldr	r1, [r4]
   33ea8:	bl	2c404 <fb_scope_table_find@@Base>
   33eac:	cmp	r0, #0
   33eb0:	bne	34074 <__flatcc_fb_clear_parser@@Base+0x23c8>
   33eb4:	add	r5, r5, #1
   33eb8:	cmp	r5, #0
   33ebc:	bne	33e8c <__flatcc_fb_clear_parser@@Base+0x21e0>
   33ec0:	cmp	r7, #0
   33ec4:	beq	33ee8 <__flatcc_fb_clear_parser@@Base+0x223c>
   33ec8:	ldr	r0, [r9, #412]	; 0x19c
   33ecc:	cmp	r0, #0
   33ed0:	beq	33ee8 <__flatcc_fb_clear_parser@@Base+0x223c>
   33ed4:	mov	r1, r5
   33ed8:	ldr	r2, [sp, #104]	; 0x68
   33edc:	bl	2c404 <fb_scope_table_find@@Base>
   33ee0:	subs	r4, r0, #0
   33ee4:	bne	33e40 <__flatcc_fb_clear_parser@@Base+0x2194>
   33ee8:	ldr	r5, [sp, #64]	; 0x40
   33eec:	ldr	r3, [sp, #68]	; 0x44
   33ef0:	ldr	r3, [r3]
   33ef4:	cmp	r3, #0
   33ef8:	moveq	r3, fp
   33efc:	bne	341a8 <__flatcc_fb_clear_parser@@Base+0x24fc>
   33f00:	ldr	r2, [sp, #100]	; 0x64
   33f04:	add	r0, r3, #56	; 0x38
   33f08:	ldr	r1, [r2, #4]
   33f0c:	ldm	r1, {r1, r2}
   33f10:	bl	2b4b0 <fb_symbol_table_find@@Base>
   33f14:	subs	r3, r0, #0
   33f18:	beq	341a8 <__flatcc_fb_clear_parser@@Base+0x24fc>
   33f1c:	add	r3, r3, #48	; 0x30
   33f20:	add	ip, r8, #48	; 0x30
   33f24:	ldm	r3, {r0, r1, r2, r3}
   33f28:	stm	ip, {r0, r1, r2, r3}
   33f2c:	b	32efc <__flatcc_fb_clear_parser@@Base+0x1250>
   33f30:	cmp	r2, #6
   33f34:	bne	32414 <__flatcc_fb_clear_parser@@Base+0x768>
   33f38:	ldrh	r3, [r4, #16]
   33f3c:	cmp	r3, #6
   33f40:	beq	32414 <__flatcc_fb_clear_parser@@Base+0x768>
   33f44:	mov	r3, #0
   33f48:	ldr	r1, [r4, #4]
   33f4c:	ldr	r2, [sp, #28]
   33f50:	str	r3, [sp, #4]
   33f54:	str	r3, [sp]
   33f58:	mov	r0, r9
   33f5c:	bl	2d4ec <__flatcc_error_report@@Base>
   33f60:	b	32414 <__flatcc_fb_clear_parser@@Base+0x768>
   33f64:	ldr	r1, [r3, #16]
   33f68:	ldr	r0, [sp, #60]	; 0x3c
   33f6c:	str	r3, [sp, #100]	; 0x64
   33f70:	bl	2ade0 <ptr_set_find_item@@Base>
   33f74:	ldr	r3, [sp, #100]	; 0x64
   33f78:	cmp	r0, #0
   33f7c:	beq	33d1c <__flatcc_fb_clear_parser@@Base+0x2070>
   33f80:	ldr	r6, [sp, #68]	; 0x44
   33f84:	b	33ba0 <__flatcc_fb_clear_parser@@Base+0x1ef4>
   33f88:	mov	r5, r0
   33f8c:	b	33cf8 <__flatcc_fb_clear_parser@@Base+0x204c>
   33f90:	ldr	r2, [pc, #-2928]	; 33428 <__flatcc_fb_clear_parser@@Base+0x177c>
   33f94:	ldr	r1, [r8, #4]
   33f98:	mov	r3, ip
   33f9c:	str	ip, [sp, #4]
   33fa0:	str	ip, [sp]
   33fa4:	add	r2, pc, r2
   33fa8:	mov	r0, r9
   33fac:	bl	2d4ec <__flatcc_error_report@@Base>
   33fb0:	mov	r3, #1
   33fb4:	str	r3, [sp, #28]
   33fb8:	b	32f84 <__flatcc_fb_clear_parser@@Base+0x12d8>
   33fbc:	ldr	r3, [sp, #24]
   33fc0:	ldr	r2, [pc, #-2972]	; 3342c <__flatcc_fb_clear_parser@@Base+0x1780>
   33fc4:	cmp	r0, #11
   33fc8:	add	r2, pc, r2
   33fcc:	ldr	r1, [r3, #4]
   33fd0:	ldrne	r2, [sp, #96]	; 0x60
   33fd4:	b	33a44 <__flatcc_fb_clear_parser@@Base+0x1d98>
   33fd8:	mvn	r3, #0
   33fdc:	str	r3, [sp, #36]	; 0x24
   33fe0:	b	32bb4 <__flatcc_fb_clear_parser@@Base+0xf08>
   33fe4:	mov	r2, #0
   33fe8:	ldr	r3, [r3, #4]
   33fec:	ldr	r1, [r7, #4]
   33ff0:	str	r2, [sp, #4]
   33ff4:	str	r2, [sp]
   33ff8:	ldr	r2, [pc, #-3024]	; 33430 <__flatcc_fb_clear_parser@@Base+0x1784>
   33ffc:	mov	r0, r9
   34000:	add	r2, pc, r2
   34004:	bl	2d4ec <__flatcc_error_report@@Base>
   34008:	ldrh	r6, [r8, #72]	; 0x48
   3400c:	b	328f8 <__flatcc_fb_clear_parser@@Base+0xc4c>
   34010:	ldr	r2, [pc, #-3044]	; 33434 <__flatcc_fb_clear_parser@@Base+0x1788>
   34014:	mov	r3, #0
   34018:	ldr	r1, [r8, #4]
   3401c:	add	r2, pc, r2
   34020:	str	r3, [sp, #4]
   34024:	str	r3, [sp]
   34028:	mov	r0, r9
   3402c:	bl	2d4ec <__flatcc_error_report@@Base>
   34030:	b	3376c <__flatcc_fb_clear_parser@@Base+0x1ac0>
   34034:	ldr	r2, [pc, #-3076]	; 33438 <__flatcc_fb_clear_parser@@Base+0x178c>
   34038:	mov	r3, #0
   3403c:	ldr	r1, [r8, #4]
   34040:	add	r2, pc, r2
   34044:	str	r3, [sp, #4]
   34048:	str	r3, [sp]
   3404c:	mov	r0, r9
   34050:	bl	2d4ec <__flatcc_error_report@@Base>
   34054:	strh	r4, [r8, #24]
   34058:	b	325b0 <__flatcc_fb_clear_parser@@Base+0x904>
   3405c:	ldr	r3, [sp, #24]
   34060:	cmp	r0, #11
   34064:	ldr	r2, [sp, #92]	; 0x5c
   34068:	ldr	r1, [r3, #4]
   3406c:	ldr	r3, [sp, #88]	; 0x58
   34070:	b	33a40 <__flatcc_fb_clear_parser@@Base+0x1d94>
   34074:	mov	r4, r0
   34078:	b	33e40 <__flatcc_fb_clear_parser@@Base+0x2194>
   3407c:	ldr	r1, [r3, #16]
   34080:	ldr	r0, [sp, #60]	; 0x3c
   34084:	str	r3, [sp, #108]	; 0x6c
   34088:	bl	2ade0 <ptr_set_find_item@@Base>
   3408c:	ldr	r3, [sp, #108]	; 0x6c
   34090:	cmp	r0, #0
   34094:	beq	33e64 <__flatcc_fb_clear_parser@@Base+0x21b8>
   34098:	ldr	r5, [sp, #64]	; 0x40
   3409c:	ldrh	r2, [r3, #8]
   340a0:	cmp	r2, #3
   340a4:	bne	33eec <__flatcc_fb_clear_parser@@Base+0x2240>
   340a8:	b	33f00 <__flatcc_fb_clear_parser@@Base+0x2254>
   340ac:	cmp	r2, #1
   340b0:	ldr	r1, [sp, #68]	; 0x44
   340b4:	moveq	r1, r3
   340b8:	cmn	r9, #352	; 0x160
   340bc:	beq	33eec <__flatcc_fb_clear_parser@@Base+0x2240>
   340c0:	ldr	r0, [r9, #412]	; 0x19c
   340c4:	cmp	r0, #0
   340c8:	beq	33eec <__flatcc_fb_clear_parser@@Base+0x2240>
   340cc:	rsb	r2, r2, #1
   340d0:	bl	2c404 <fb_scope_table_find@@Base>
   340d4:	cmp	r0, #0
   340d8:	beq	33eec <__flatcc_fb_clear_parser@@Base+0x2240>
   340dc:	ldr	r3, [r6, #4]
   340e0:	add	r0, r0, #4
   340e4:	ldm	r3, {r1, r2}
   340e8:	bl	2b4b0 <fb_symbol_table_find@@Base>
   340ec:	subs	r3, r0, #0
   340f0:	beq	33eec <__flatcc_fb_clear_parser@@Base+0x2240>
   340f4:	ldrh	r2, [r3, #8]
   340f8:	cmp	r2, #4
   340fc:	bhi	33eec <__flatcc_fb_clear_parser@@Base+0x2240>
   34100:	ldr	r0, [sp, #60]	; 0x3c
   34104:	ldr	r1, [r3, #16]
   34108:	str	r3, [sp, #60]	; 0x3c
   3410c:	bl	2ade0 <ptr_set_find_item@@Base>
   34110:	ldr	r3, [sp, #60]	; 0x3c
   34114:	cmp	r0, #0
   34118:	bne	3409c <__flatcc_fb_clear_parser@@Base+0x23f0>
   3411c:	b	33eec <__flatcc_fb_clear_parser@@Base+0x2240>
   34120:	ldr	r3, [sp, #44]	; 0x2c
   34124:	cmp	r3, #0
   34128:	ldrheq	r2, [sp, #16]
   3412c:	moveq	r3, #0
   34130:	strdeq	r2, [r8, #96]	; 0x60
   34134:	ldrd	r2, [sp, #16]
   34138:	ldr	r5, [sp, #28]
   3413c:	adds	r2, r2, #1
   34140:	adc	r3, r3, #0
   34144:	strd	r2, [sp, #16]
   34148:	b	32f08 <__flatcc_fb_clear_parser@@Base+0x125c>
   3414c:	ldr	r2, [pc, #-3352]	; 3343c <__flatcc_fb_clear_parser@@Base+0x1790>
   34150:	ldr	r3, [r3, #4]
   34154:	ldr	r1, [r7, #4]
   34158:	add	r2, pc, r2
   3415c:	str	r0, [sp, #4]
   34160:	str	r0, [sp]
   34164:	mov	r0, r9
   34168:	bl	2d4ec <__flatcc_error_report@@Base>
   3416c:	ldrh	r6, [r8, #72]	; 0x48
   34170:	b	328f8 <__flatcc_fb_clear_parser@@Base+0xc4c>
   34174:	cmp	r2, #6
   34178:	bne	326a0 <__flatcc_fb_clear_parser@@Base+0x9f4>
   3417c:	ldrh	r3, [r4, #16]
   34180:	cmp	r3, #6
   34184:	beq	326a0 <__flatcc_fb_clear_parser@@Base+0x9f4>
   34188:	mov	r3, #0
   3418c:	ldr	r1, [r4, #4]
   34190:	ldr	r2, [sp, #64]	; 0x40
   34194:	str	r3, [sp, #4]
   34198:	str	r3, [sp]
   3419c:	mov	r0, r9
   341a0:	bl	2d4ec <__flatcc_error_report@@Base>
   341a4:	b	326a0 <__flatcc_fb_clear_parser@@Base+0x9f4>
   341a8:	ldr	r2, [pc, #-3440]	; 33440 <__flatcc_fb_clear_parser@@Base+0x1794>
   341ac:	mov	r3, r8
   341b0:	add	r2, pc, r2
   341b4:	ldr	r1, [r8, #48]	; 0x30
   341b8:	mov	r0, r9
   341bc:	bl	2eabc <error_ref_sym@@Base>
   341c0:	mov	r3, #1
   341c4:	strh	r3, [r8, #24]
   341c8:	b	325b0 <__flatcc_fb_clear_parser@@Base+0x904>
   341cc:	ldr	r3, [pc, #-3472]	; 33444 <__flatcc_fb_clear_parser@@Base+0x1798>
   341d0:	ldr	r1, [pc, #-3472]	; 33448 <__flatcc_fb_clear_parser@@Base+0x179c>
   341d4:	ldr	r0, [pc, #-3472]	; 3344c <__flatcc_fb_clear_parser@@Base+0x17a0>
   341d8:	add	r3, pc, r3
   341dc:	ldr	r2, [pc, #-3476]	; 33450 <__flatcc_fb_clear_parser@@Base+0x17a4>
   341e0:	add	r3, r3, #252	; 0xfc
   341e4:	add	r1, pc, r1
   341e8:	add	r0, pc, r0
   341ec:	bl	14030 <__assert_fail@plt>
   341f0:	ldr	r3, [sp, #36]	; 0x24
   341f4:	cmp	r3, #0
   341f8:	beq	32bb4 <__flatcc_fb_clear_parser@@Base+0xf08>
   341fc:	ldr	r2, [sp, #32]
   34200:	ldr	r1, [sp, #36]	; 0x24
   34204:	ldrh	r3, [r2, #10]
   34208:	cmp	r1, #1
   3420c:	orr	r3, r3, #8
   34210:	strh	r3, [r2, #10]
   34214:	bne	32b94 <__flatcc_fb_clear_parser@@Base+0xee8>
   34218:	ldr	r3, [sp, #28]
   3421c:	str	r3, [sp, #36]	; 0x24
   34220:	b	32bb4 <__flatcc_fb_clear_parser@@Base+0xf08>
   34224:	ldr	r3, [pc, #-3544]	; 33454 <__flatcc_fb_clear_parser@@Base+0x17a8>
   34228:	ldr	r1, [pc, #-3544]	; 33458 <__flatcc_fb_clear_parser@@Base+0x17ac>
   3422c:	ldr	r0, [pc, #-3544]	; 3345c <__flatcc_fb_clear_parser@@Base+0x17b0>
   34230:	add	r3, pc, r3
   34234:	ldr	r2, [pc, #-3548]	; 33460 <__flatcc_fb_clear_parser@@Base+0x17b4>
   34238:	add	r3, r3, #188	; 0xbc
   3423c:	add	r1, pc, r1
   34240:	add	r0, pc, r0
   34244:	bl	14030 <__assert_fail@plt>
   34248:	ldr	r3, [pc, #-3564]	; 33464 <__flatcc_fb_clear_parser@@Base+0x17b8>
   3424c:	ldr	r1, [pc, #-3564]	; 33468 <__flatcc_fb_clear_parser@@Base+0x17bc>
   34250:	ldr	r0, [pc, #-3564]	; 3346c <__flatcc_fb_clear_parser@@Base+0x17c0>
   34254:	add	r3, pc, r3
   34258:	ldr	r2, [pc, #-3568]	; 33470 <__flatcc_fb_clear_parser@@Base+0x17c4>
   3425c:	add	r3, r3, #188	; 0xbc
   34260:	add	r1, pc, r1
   34264:	add	r0, pc, r0
   34268:	bl	14030 <__assert_fail@plt>
   3426c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34270:	mov	sl, r1
   34274:	ldrh	r9, [r1, #8]
   34278:	sub	sp, sp, #148	; 0x94
   3427c:	mov	r6, r0
   34280:	cmp	r9, #4
   34284:	beq	34970 <__flatcc_fb_clear_parser@@Base+0x2cc4>
   34288:	cmp	r9, #3
   3428c:	bne	34f08 <__flatcc_fb_clear_parser@@Base+0x325c>
   34290:	ldrh	r3, [r1, #48]	; 0x30
   34294:	cmp	r3, #0
   34298:	beq	34e14 <__flatcc_fb_clear_parser@@Base+0x3168>
   3429c:	cmp	r3, #8
   342a0:	bne	34dc8 <__flatcc_fb_clear_parser@@Base+0x311c>
   342a4:	ldr	r3, [r1, #40]	; 0x28
   342a8:	ldr	r3, [r3, #16]
   342ac:	add	r3, r3, #996	; 0x3e4
   342b0:	add	r3, r3, #3
   342b4:	cmp	r3, #27
   342b8:	bhi	34418 <__flatcc_fb_clear_parser@@Base+0x276c>
   342bc:	ldr	r2, [pc, #3232]	; 34f64 <__flatcc_fb_clear_parser@@Base+0x32b8>
   342c0:	mov	r0, #0
   342c4:	add	r2, pc, r2
   342c8:	add	r3, r2, r3, lsl #2
   342cc:	ldr	r1, [r3, #28]
   342d0:	add	r2, r2, r1, lsl #2
   342d4:	ldr	r2, [r2, #140]	; 0x8c
   342d8:	uxth	r3, r2
   342dc:	str	r1, [sl, #40]	; 0x28
   342e0:	str	r2, [sl, #112]	; 0x70
   342e4:	str	r0, [sl, #116]	; 0x74
   342e8:	strh	r3, [sl, #104]	; 0x68
   342ec:	ldr	r4, [sl, #28]
   342f0:	add	r8, sp, #96	; 0x60
   342f4:	mov	r0, r8
   342f8:	mov	r2, #48	; 0x30
   342fc:	mov	r1, #0
   34300:	bl	13f94 <memset@plt>
   34304:	cmp	r4, #0
   34308:	beq	34c40 <__flatcc_fb_clear_parser@@Base+0x2f94>
   3430c:	ldr	r3, [pc, #3156]	; 34f68 <__flatcc_fb_clear_parser@@Base+0x32bc>
   34310:	ldr	fp, [pc, #3156]	; 34f6c <__flatcc_fb_clear_parser@@Base+0x32c0>
   34314:	add	r3, pc, r3
   34318:	str	r3, [sp, #20]
   3431c:	ldr	r3, [pc, #3148]	; 34f70 <__flatcc_fb_clear_parser@@Base+0x32c4>
   34320:	add	fp, pc, fp
   34324:	add	r3, pc, r3
   34328:	str	r3, [sp, #24]
   3432c:	ldr	r3, [pc, #3136]	; 34f74 <__flatcc_fb_clear_parser@@Base+0x32c8>
   34330:	mov	r5, #100	; 0x64
   34334:	add	r3, pc, r3
   34338:	str	r3, [sp, #12]
   3433c:	ldr	r3, [pc, #3124]	; 34f78 <__flatcc_fb_clear_parser@@Base+0x32cc>
   34340:	mov	r7, #0
   34344:	add	r3, pc, r3
   34348:	str	r3, [sp, #16]
   3434c:	ldr	r3, [pc, #3112]	; 34f7c <__flatcc_fb_clear_parser@@Base+0x32d0>
   34350:	add	r3, pc, r3
   34354:	str	r3, [sp, #8]
   34358:	b	343bc <__flatcc_fb_clear_parser@@Base+0x2710>
   3435c:	mov	r3, #1
   34360:	ldr	r0, [r8, r2, lsl #2]
   34364:	orr	r7, r7, r3, lsl r2
   34368:	cmp	r0, #0
   3436c:	uxth	r7, r7
   34370:	lsl	r3, r2, #2
   34374:	beq	3442c <__flatcc_fb_clear_parser@@Base+0x2780>
   34378:	ldr	r2, [pc, #3072]	; 34f80 <__flatcc_fb_clear_parser@@Base+0x32d4>
   3437c:	mov	r3, #0
   34380:	ldr	r1, [r4, #4]
   34384:	add	r2, pc, r2
   34388:	str	r3, [sp, #4]
   3438c:	str	r3, [sp]
   34390:	mov	r0, r6
   34394:	bl	2d4ec <__flatcc_error_report@@Base>
   34398:	subs	r5, r5, #1
   3439c:	ldr	r4, [r4]
   343a0:	movne	r2, #1
   343a4:	moveq	r2, #0
   343a8:	cmp	r4, #0
   343ac:	moveq	r2, #0
   343b0:	andne	r2, r2, #1
   343b4:	cmp	r2, #0
   343b8:	beq	3446c <__flatcc_fb_clear_parser@@Base+0x27c0>
   343bc:	ldr	r3, [r4, #4]
   343c0:	ldr	r0, [r6, #412]	; 0x19c
   343c4:	ldm	r3, {r1, r2}
   343c8:	add	r0, r0, #16
   343cc:	bl	3d314 <fb_name_table_find@@Base>
   343d0:	cmp	r0, #0
   343d4:	beq	34840 <__flatcc_fb_clear_parser@@Base+0x2b94>
   343d8:	ldr	r2, [r0, #24]
   343dc:	cmp	r2, #0
   343e0:	beq	34398 <__flatcc_fb_clear_parser@@Base+0x26ec>
   343e4:	mov	r3, #32
   343e8:	asr	r3, r3, r2
   343ec:	ands	r0, r3, #1
   343f0:	bne	3435c <__flatcc_fb_clear_parser@@Base+0x26b0>
   343f4:	ldr	r2, [pc, #2952]	; 34f84 <__flatcc_fb_clear_parser@@Base+0x32d8>
   343f8:	ldr	r1, [r4, #4]
   343fc:	mov	r3, r0
   34400:	str	r0, [sp, #4]
   34404:	str	r0, [sp]
   34408:	add	r2, pc, r2
   3440c:	mov	r0, r6
   34410:	bl	2d4ec <__flatcc_error_report@@Base>
   34414:	b	34398 <__flatcc_fb_clear_parser@@Base+0x26ec>
   34418:	mov	r3, #0
   3441c:	mov	r2, r3
   34420:	mov	r0, r3
   34424:	mov	r1, r3
   34428:	b	342dc <__flatcc_fb_clear_parser@@Base+0x2630>
   3442c:	add	r3, fp, r3
   34430:	str	r4, [r8, r2, lsl #2]
   34434:	ldr	r2, [r3, #204]	; 0xcc
   34438:	cmp	r2, #0
   3443c:	bne	348bc <__flatcc_fb_clear_parser@@Base+0x2c10>
   34440:	ldrh	r3, [r4, #16]
   34444:	cmp	r3, #0
   34448:	beq	34398 <__flatcc_fb_clear_parser@@Base+0x26ec>
   3444c:	ldr	r1, [r4, #4]
   34450:	mov	r3, r2
   34454:	str	r2, [sp, #4]
   34458:	str	r2, [sp]
   3445c:	mov	r0, r6
   34460:	ldr	r2, [sp, #8]
   34464:	bl	2d4ec <__flatcc_error_report@@Base>
   34468:	b	34398 <__flatcc_fb_clear_parser@@Base+0x26ec>
   3446c:	cmp	r4, #0
   34470:	beq	34494 <__flatcc_fb_clear_parser@@Base+0x27e8>
   34474:	ldr	r1, [r4, #4]
   34478:	mov	r3, r2
   3447c:	str	r2, [sp, #4]
   34480:	str	r2, [sp]
   34484:	ldr	r2, [pc, #2812]	; 34f88 <__flatcc_fb_clear_parser@@Base+0x32dc>
   34488:	mov	r0, r6
   3448c:	add	r2, pc, r2
   34490:	bl	2d4ec <__flatcc_error_report@@Base>
   34494:	and	r3, r7, #32
   34498:	cmp	r3, #0
   3449c:	strh	r7, [sl, #92]	; 0x5c
   344a0:	streq	r3, [sp, #8]
   344a4:	beq	344bc <__flatcc_fb_clear_parser@@Base+0x2810>
   344a8:	mov	r2, #0
   344ac:	mov	r3, #0
   344b0:	mov	r1, #1
   344b4:	str	r1, [sp, #8]
   344b8:	strd	r2, [sp, #64]	; 0x40
   344bc:	ldr	r2, [sl, #40]	; 0x28
   344c0:	cmp	r2, #5
   344c4:	bne	34864 <__flatcc_fb_clear_parser@@Base+0x2bb8>
   344c8:	add	r8, sp, #64	; 0x40
   344cc:	mov	r2, #0
   344d0:	mov	r3, #6
   344d4:	strb	r2, [sp, #64]	; 0x40
   344d8:	strh	r3, [sp, #72]	; 0x48
   344dc:	ldm	r8, {r0, r1, r2, r3}
   344e0:	add	ip, sp, #80	; 0x50
   344e4:	ldr	r5, [sl, #20]
   344e8:	str	ip, [sp, #12]
   344ec:	cmp	r5, #0
   344f0:	stm	ip, {r0, r1, r2, r3}
   344f4:	beq	34650 <__flatcc_fb_clear_parser@@Base+0x29a4>
   344f8:	ldr	r3, [pc, #2700]	; 34f8c <__flatcc_fb_clear_parser@@Base+0x32e0>
   344fc:	add	fp, sl, #56	; 0x38
   34500:	add	r3, pc, r3
   34504:	str	r3, [sp, #16]
   34508:	ldr	r3, [pc, #2688]	; 34f90 <__flatcc_fb_clear_parser@@Base+0x32e4>
   3450c:	mov	r4, #1
   34510:	add	r3, pc, r3
   34514:	str	r3, [sp, #20]
   34518:	ldr	r3, [pc, #2676]	; 34f94 <__flatcc_fb_clear_parser@@Base+0x32e8>
   3451c:	add	r3, pc, r3
   34520:	str	r3, [sp, #24]
   34524:	ldr	r3, [pc, #2668]	; 34f98 <__flatcc_fb_clear_parser@@Base+0x32ec>
   34528:	add	r3, pc, r3
   3452c:	str	r3, [sp, #28]
   34530:	ldr	r3, [pc, #2660]	; 34f9c <__flatcc_fb_clear_parser@@Base+0x32f0>
   34534:	add	r3, pc, r3
   34538:	str	r3, [sp, #32]
   3453c:	ldr	r3, [pc, #2652]	; 34fa0 <__flatcc_fb_clear_parser@@Base+0x32f4>
   34540:	add	r3, pc, r3
   34544:	str	r3, [sp, #36]	; 0x24
   34548:	b	34594 <__flatcc_fb_clear_parser@@Base+0x28e8>
   3454c:	ldr	r3, [r0, #4]
   34550:	add	r2, r6, #68	; 0x44
   34554:	cmp	r3, r2
   34558:	ldr	r1, [r5, #4]
   3455c:	beq	3461c <__flatcc_fb_clear_parser@@Base+0x2970>
   34560:	mov	r2, #0
   34564:	str	r2, [sp, #4]
   34568:	str	r2, [sp]
   3456c:	ldr	r2, [pc, #2608]	; 34fa4 <__flatcc_fb_clear_parser@@Base+0x32f8>
   34570:	mov	r0, r6
   34574:	add	r2, pc, r2
   34578:	bl	2d4ec <__flatcc_error_report@@Base>
   3457c:	mov	r3, #1
   34580:	strh	r3, [r5, #24]
   34584:	ldr	r5, [r5]
   34588:	mov	r4, #0
   3458c:	cmp	r5, r4
   34590:	beq	34650 <__flatcc_fb_clear_parser@@Base+0x29a4>
   34594:	mov	r2, #1
   34598:	mov	r1, r5
   3459c:	mov	r0, fp
   345a0:	bl	2b488 <fb_symbol_table_insert_item@@Base>
   345a4:	cmp	r0, #0
   345a8:	bne	3454c <__flatcc_fb_clear_parser@@Base+0x28a0>
   345ac:	ldrh	r3, [r5, #8]
   345b0:	cmp	r3, #5
   345b4:	bne	34c18 <__flatcc_fb_clear_parser@@Base+0x2f6c>
   345b8:	ldr	r3, [r5, #64]	; 0x40
   345bc:	cmp	r3, #0
   345c0:	bne	34ee4 <__flatcc_fb_clear_parser@@Base+0x3238>
   345c4:	cmp	r9, #4
   345c8:	beq	3465c <__flatcc_fb_clear_parser@@Base+0x29b0>
   345cc:	ldrh	r1, [r5, #56]	; 0x38
   345d0:	eor	r7, r4, #1
   345d4:	cmp	r1, #0
   345d8:	movne	r3, #0
   345dc:	andeq	r3, r7, #1
   345e0:	cmp	r3, #0
   345e4:	bne	346ac <__flatcc_fb_clear_parser@@Base+0x2a00>
   345e8:	ldr	r3, [sp, #8]
   345ec:	cmp	r3, #0
   345f0:	beq	34f2c <__flatcc_fb_clear_parser@@Base+0x3280>
   345f4:	cmp	r1, #0
   345f8:	beq	347a4 <__flatcc_fb_clear_parser@@Base+0x2af8>
   345fc:	cmp	r1, #5
   34600:	bne	34e3c <__flatcc_fb_clear_parser@@Base+0x3190>
   34604:	add	r3, r5, #48	; 0x30
   34608:	ldr	ip, [sl, #40]	; 0x28
   3460c:	ldm	r3, {r0, r1, r2, r3}
   34610:	stm	r8, {r0, r1, r2, r3}
   34614:	ldrd	r2, [sp, #64]	; 0x40
   34618:	b	347ac <__flatcc_fb_clear_parser@@Base+0x2b00>
   3461c:	ldr	r2, [pc, #2436]	; 34fa8 <__flatcc_fb_clear_parser@@Base+0x32fc>
   34620:	mov	r3, #0
   34624:	str	r3, [sp, #4]
   34628:	str	r3, [sp]
   3462c:	add	r2, pc, r2
   34630:	mov	r0, r6
   34634:	bl	2d4ec <__flatcc_error_report@@Base>
   34638:	mov	r3, #1
   3463c:	strh	r3, [r5, #24]
   34640:	ldr	r5, [r5]
   34644:	mov	r4, #0
   34648:	cmp	r5, r4
   3464c:	bne	34594 <__flatcc_fb_clear_parser@@Base+0x28e8>
   34650:	mov	r0, #0
   34654:	add	sp, sp, #148	; 0x94
   34658:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3465c:	ldr	r1, [r5, #4]
   34660:	add	r2, r6, #68	; 0x44
   34664:	cmp	r1, r2
   34668:	beq	34a48 <__flatcc_fb_clear_parser@@Base+0x2d9c>
   3466c:	ldrh	r2, [r5, #24]
   34670:	cmp	r2, #10
   34674:	beq	34960 <__flatcc_fb_clear_parser@@Base+0x2cb4>
   34678:	cmp	r2, #12
   3467c:	beq	34ac4 <__flatcc_fb_clear_parser@@Base+0x2e18>
   34680:	cmp	r2, #1
   34684:	beq	34584 <__flatcc_fb_clear_parser@@Base+0x28d8>
   34688:	ldr	r2, [pc, #2332]	; 34fac <__flatcc_fb_clear_parser@@Base+0x3300>
   3468c:	str	r3, [sp, #4]
   34690:	str	r3, [sp]
   34694:	add	r2, pc, r2
   34698:	mov	r0, r6
   3469c:	bl	2d4ec <__flatcc_error_report@@Base>
   346a0:	mov	r3, #1
   346a4:	strh	r3, [r5, #24]
   346a8:	b	34584 <__flatcc_fb_clear_parser@@Base+0x28d8>
   346ac:	ldrh	r3, [sp, #72]	; 0x48
   346b0:	cmp	r3, #5
   346b4:	beq	349a0 <__flatcc_fb_clear_parser@@Base+0x2cf4>
   346b8:	cmp	r3, #4
   346bc:	beq	34a50 <__flatcc_fb_clear_parser@@Base+0x2da4>
   346c0:	cmp	r3, #6
   346c4:	beq	34784 <__flatcc_fb_clear_parser@@Base+0x2ad8>
   346c8:	ldr	r3, [sp, #8]
   346cc:	cmp	r3, #0
   346d0:	bne	347a4 <__flatcc_fb_clear_parser@@Base+0x2af8>
   346d4:	add	r4, r5, #48	; 0x30
   346d8:	ldm	r8, {r0, r1, r2, r3}
   346dc:	stm	r4, {r0, r1, r2, r3}
   346e0:	cmp	r7, #0
   346e4:	beq	34720 <__flatcc_fb_clear_parser@@Base+0x2a74>
   346e8:	ldr	r3, [r6, #180]	; 0xb4
   346ec:	cmp	r3, #0
   346f0:	beq	34720 <__flatcc_fb_clear_parser@@Base+0x2a74>
   346f4:	ldrh	r3, [sp, #72]	; 0x48
   346f8:	cmp	r3, #5
   346fc:	beq	348f0 <__flatcc_fb_clear_parser@@Base+0x2c44>
   34700:	cmp	r3, #4
   34704:	beq	34948 <__flatcc_fb_clear_parser@@Base+0x2c9c>
   34708:	cmp	r3, #6
   3470c:	bne	34720 <__flatcc_fb_clear_parser@@Base+0x2a74>
   34710:	ldrb	r2, [sp, #64]	; 0x40
   34714:	ldrb	r3, [sp, #80]	; 0x50
   34718:	cmp	r2, r3
   3471c:	bls	34e64 <__flatcc_fb_clear_parser@@Base+0x31b8>
   34720:	ldm	r8, {r0, r1, r2, r3}
   34724:	ldr	ip, [sp, #12]
   34728:	stm	ip, {r0, r1, r2, r3}
   3472c:	mov	r1, r4
   34730:	mov	r2, #1
   34734:	add	r0, sl, #72	; 0x48
   34738:	bl	3da48 <fb_value_set_insert_item@@Base>
   3473c:	cmp	r0, #0
   34740:	beq	34758 <__flatcc_fb_clear_parser@@Base+0x2aac>
   34744:	cmp	r9, #4
   34748:	beq	34c94 <__flatcc_fb_clear_parser@@Base+0x2fe8>
   3474c:	ldrh	r3, [r5, #10]
   34750:	orr	r3, r3, #4
   34754:	strh	r3, [r5, #10]
   34758:	ldr	r3, [r5, #64]	; 0x40
   3475c:	cmp	r3, #0
   34760:	beq	34584 <__flatcc_fb_clear_parser@@Base+0x28d8>
   34764:	mov	r3, #0
   34768:	ldr	r1, [r5, #4]
   3476c:	ldr	r2, [sp, #16]
   34770:	str	r3, [sp, #4]
   34774:	str	r3, [sp]
   34778:	mov	r0, r6
   3477c:	bl	2d4ec <__flatcc_error_report@@Base>
   34780:	b	34584 <__flatcc_fb_clear_parser@@Base+0x28d8>
   34784:	ldrb	r4, [sp, #64]	; 0x40
   34788:	cmp	r4, #1
   3478c:	beq	34dec <__flatcc_fb_clear_parser@@Base+0x3140>
   34790:	ldr	r3, [sp, #8]
   34794:	cmp	r3, #0
   34798:	mov	r3, #1
   3479c:	strb	r3, [sp, #64]	; 0x40
   347a0:	beq	346d4 <__flatcc_fb_clear_parser@@Base+0x2a28>
   347a4:	ldr	ip, [sl, #40]	; 0x28
   347a8:	ldrd	r2, [sp, #64]	; 0x40
   347ac:	ldr	r1, [sp, #20]
   347b0:	add	r1, r1, ip, lsl #2
   347b4:	ldr	r0, [r1, #140]	; 0x8c
   347b8:	mov	r1, #0
   347bc:	cmp	r3, r1
   347c0:	lsl	r0, r0, #3
   347c4:	cmpeq	r2, r0
   347c8:	bcs	34da0 <__flatcc_fb_clear_parser@@Base+0x30f4>
   347cc:	mov	r1, #1
   347d0:	sub	r3, r2, #32
   347d4:	rsb	lr, r2, #32
   347d8:	lsl	r3, r1, r3
   347dc:	lsl	r0, r1, r2
   347e0:	orr	r3, r3, r1, lsr lr
   347e4:	add	r4, r5, #48	; 0x30
   347e8:	mov	r1, #5
   347ec:	mov	r2, ip
   347f0:	str	r3, [r5, #52]	; 0x34
   347f4:	str	r0, [r5, #48]	; 0x30
   347f8:	strh	r1, [r5, #56]	; 0x38
   347fc:	mov	r3, r4
   34800:	mov	r1, r5
   34804:	mov	r0, r6
   34808:	bl	36d7c <__flatcc_fb_coerce_scalar_type@@Base>
   3480c:	mov	r2, #0
   34810:	cmp	r0, r2
   34814:	beq	346e0 <__flatcc_fb_clear_parser@@Base+0x2a34>
   34818:	ldr	r1, [r5, #4]
   3481c:	mov	r3, r2
   34820:	str	r2, [sp, #4]
   34824:	str	r2, [sp]
   34828:	ldr	r2, [pc, #1920]	; 34fb0 <__flatcc_fb_clear_parser@@Base+0x3304>
   3482c:	mov	r0, r6
   34830:	add	r2, pc, r2
   34834:	bl	2d4ec <__flatcc_error_report@@Base>
   34838:	mvn	r0, #0
   3483c:	b	34654 <__flatcc_fb_clear_parser@@Base+0x29a8>
   34840:	ldr	r2, [pc, #1900]	; 34fb4 <__flatcc_fb_clear_parser@@Base+0x3308>
   34844:	ldr	r1, [r4, #4]
   34848:	mov	r3, r0
   3484c:	str	r0, [sp, #4]
   34850:	str	r0, [sp]
   34854:	add	r2, pc, r2
   34858:	mov	r0, r6
   3485c:	bl	2d4ec <__flatcc_error_report@@Base>
   34860:	b	34398 <__flatcc_fb_clear_parser@@Base+0x26ec>
   34864:	mov	r0, #0
   34868:	mov	r1, #0
   3486c:	add	r8, sp, #64	; 0x40
   34870:	strd	r0, [sp, #64]	; 0x40
   34874:	mov	ip, #4
   34878:	mov	r3, r8
   3487c:	mov	r1, sl
   34880:	mov	r0, r6
   34884:	strh	ip, [sp, #72]	; 0x48
   34888:	bl	36d7c <__flatcc_fb_coerce_scalar_type@@Base>
   3488c:	cmp	r0, #0
   34890:	beq	344dc <__flatcc_fb_clear_parser@@Base+0x2830>
   34894:	ldr	r2, [pc, #1820]	; 34fb8 <__flatcc_fb_clear_parser@@Base+0x330c>
   34898:	mov	r3, #0
   3489c:	mov	r0, r6
   348a0:	str	r3, [sp, #4]
   348a4:	str	r3, [sp]
   348a8:	mov	r1, r3
   348ac:	add	r2, pc, r2
   348b0:	bl	2d4ec <__flatcc_error_report@@Base>
   348b4:	mvn	r0, #0
   348b8:	b	34654 <__flatcc_fb_clear_parser@@Base+0x29a8>
   348bc:	cmp	r2, #2
   348c0:	bne	349cc <__flatcc_fb_clear_parser@@Base+0x2d20>
   348c4:	ldrh	r3, [r4, #16]
   348c8:	cmp	r3, #2
   348cc:	beq	34398 <__flatcc_fb_clear_parser@@Base+0x26ec>
   348d0:	ldr	r1, [r4, #4]
   348d4:	mov	r3, r0
   348d8:	str	r0, [sp, #4]
   348dc:	str	r0, [sp]
   348e0:	ldr	r2, [sp, #16]
   348e4:	mov	r0, r6
   348e8:	bl	2d4ec <__flatcc_error_report@@Base>
   348ec:	b	34398 <__flatcc_fb_clear_parser@@Base+0x26ec>
   348f0:	ldrd	r0, [sp, #64]	; 0x40
   348f4:	ldrd	r2, [sp, #80]	; 0x50
   348f8:	cmp	r1, r3
   348fc:	cmpeq	r0, r2
   34900:	bhi	34720 <__flatcc_fb_clear_parser@@Base+0x2a74>
   34904:	cmp	r9, #4
   34908:	ldr	r1, [r5, #4]
   3490c:	bne	3491c <__flatcc_fb_clear_parser@@Base+0x2c70>
   34910:	ldrd	r2, [sp, #80]	; 0x50
   34914:	orrs	r3, r2, r3
   34918:	beq	34eb8 <__flatcc_fb_clear_parser@@Base+0x320c>
   3491c:	ldr	r2, [pc, #1688]	; 34fbc <__flatcc_fb_clear_parser@@Base+0x3310>
   34920:	mov	r3, #0
   34924:	mov	r0, r6
   34928:	str	r3, [sp, #4]
   3492c:	str	r3, [sp]
   34930:	add	r2, pc, r2
   34934:	bl	2d4ec <__flatcc_error_report@@Base>
   34938:	mov	r3, #1
   3493c:	strh	r3, [r5, #56]	; 0x38
   34940:	mvn	r0, #0
   34944:	b	34654 <__flatcc_fb_clear_parser@@Base+0x29a8>
   34948:	ldrd	r2, [sp, #64]	; 0x40
   3494c:	ldrd	r0, [sp, #80]	; 0x50
   34950:	cmp	r0, r2
   34954:	sbcs	r3, r1, r3
   34958:	blt	34720 <__flatcc_fb_clear_parser@@Base+0x2a74>
   3495c:	b	34904 <__flatcc_fb_clear_parser@@Base+0x2c58>
   34960:	mov	r2, #0
   34964:	mov	r3, #0
   34968:	strd	r2, [r5, #88]	; 0x58
   3496c:	b	345cc <__flatcc_fb_clear_parser@@Base+0x2920>
   34970:	ldrh	r3, [r1, #48]	; 0x30
   34974:	cmp	r3, #0
   34978:	bne	34e94 <__flatcc_fb_clear_parser@@Base+0x31e8>
   3497c:	mov	r0, #1
   34980:	mov	r1, #0
   34984:	mov	r2, #8
   34988:	mov	r3, #1
   3498c:	str	r9, [sl, #40]	; 0x28
   34990:	strd	r0, [sl, #112]	; 0x70
   34994:	strh	r2, [sl, #48]	; 0x30
   34998:	strh	r3, [sl, #104]	; 0x68
   3499c:	b	342ec <__flatcc_fb_clear_parser@@Base+0x2640>
   349a0:	ldr	ip, [sl, #40]	; 0x28
   349a4:	ldrd	r2, [sp, #64]	; 0x40
   349a8:	cmp	ip, #6
   349ac:	beq	34c4c <__flatcc_fb_clear_parser@@Base+0x2fa0>
   349b0:	adds	r2, r2, #1
   349b4:	ldr	r1, [sp, #8]
   349b8:	adc	r3, r3, #0
   349bc:	cmp	r1, #0
   349c0:	strd	r2, [sp, #64]	; 0x40
   349c4:	bne	347ac <__flatcc_fb_clear_parser@@Base+0x2b00>
   349c8:	b	346d4 <__flatcc_fb_clear_parser@@Base+0x2a28>
   349cc:	cmp	r2, #5
   349d0:	bne	34a8c <__flatcc_fb_clear_parser@@Base+0x2de0>
   349d4:	ldrh	r3, [r4, #16]
   349d8:	cmp	r3, #5
   349dc:	beq	34398 <__flatcc_fb_clear_parser@@Base+0x26ec>
   349e0:	ldr	r1, [r4, #4]
   349e4:	mov	r3, r0
   349e8:	str	r0, [sp, #4]
   349ec:	str	r0, [sp]
   349f0:	ldr	r2, [sp, #12]
   349f4:	mov	r0, r6
   349f8:	bl	2d4ec <__flatcc_error_report@@Base>
   349fc:	b	34398 <__flatcc_fb_clear_parser@@Base+0x26ec>
   34a00:	ldr	r1, [r3, #16]
   34a04:	ldr	r0, [sp, #56]	; 0x38
   34a08:	str	r3, [sp, #40]	; 0x28
   34a0c:	bl	2ade0 <ptr_set_find_item@@Base>
   34a10:	ldr	r3, [sp, #40]	; 0x28
   34a14:	cmp	r0, #0
   34a18:	beq	34b60 <__flatcc_fb_clear_parser@@Base+0x2eb4>
   34a1c:	ldr	r5, [sp, #44]	; 0x2c
   34a20:	ldr	r4, [sp, #60]	; 0x3c
   34a24:	ldr	r8, [sp, #48]	; 0x30
   34a28:	ldrh	r2, [r3, #8]
   34a2c:	cmp	r2, #1
   34a30:	bhi	34d3c <__flatcc_fb_clear_parser@@Base+0x3090>
   34a34:	mov	r0, #0
   34a38:	mov	r1, #0
   34a3c:	str	r3, [r5, #16]
   34a40:	mov	r3, #14
   34a44:	strd	r0, [r5, #88]	; 0x58
   34a48:	strh	r3, [r5, #24]
   34a4c:	b	345cc <__flatcc_fb_clear_parser@@Base+0x2920>
   34a50:	ldr	ip, [sl, #40]	; 0x28
   34a54:	ldrd	r2, [sp, #64]	; 0x40
   34a58:	cmp	ip, #6
   34a5c:	bne	349b0 <__flatcc_fb_clear_parser@@Base+0x2d04>
   34a60:	mvn	r1, #-2147483648	; 0x80000000
   34a64:	mvn	r0, #0
   34a68:	cmp	r3, r1
   34a6c:	cmpeq	r2, r0
   34a70:	bne	349b0 <__flatcc_fb_clear_parser@@Base+0x2d04>
   34a74:	mov	r3, #0
   34a78:	ldr	r1, [r5, #4]
   34a7c:	ldr	r2, [sp, #28]
   34a80:	str	r3, [sp, #4]
   34a84:	str	r3, [sp]
   34a88:	b	34c74 <__flatcc_fb_clear_parser@@Base+0x2fc8>
   34a8c:	cmp	r2, #4
   34a90:	bne	34d6c <__flatcc_fb_clear_parser@@Base+0x30c0>
   34a94:	ldrh	r3, [r4, #16]
   34a98:	sub	r3, r3, #4
   34a9c:	cmp	r3, #1
   34aa0:	bls	34398 <__flatcc_fb_clear_parser@@Base+0x26ec>
   34aa4:	ldr	r1, [r4, #4]
   34aa8:	mov	r3, r0
   34aac:	str	r0, [sp, #4]
   34ab0:	str	r0, [sp]
   34ab4:	ldr	r2, [sp, #24]
   34ab8:	mov	r0, r6
   34abc:	bl	2d4ec <__flatcc_error_report@@Base>
   34ac0:	b	34398 <__flatcc_fb_clear_parser@@Base+0x26ec>
   34ac4:	ldr	ip, [r5, #16]
   34ac8:	ldr	r2, [sl, #12]
   34acc:	cmp	ip, #0
   34ad0:	mov	r7, r2
   34ad4:	beq	34bf0 <__flatcc_fb_clear_parser@@Base+0x2f44>
   34ad8:	mov	r0, ip
   34adc:	b	34ae8 <__flatcc_fb_clear_parser@@Base+0x2e3c>
   34ae0:	mov	r3, r2
   34ae4:	mov	r0, r1
   34ae8:	ldr	r1, [r0]
   34aec:	add	r2, r3, #1
   34af0:	cmp	r1, #0
   34af4:	bne	34ae0 <__flatcc_fb_clear_parser@@Base+0x2e34>
   34af8:	mov	lr, r0
   34afc:	str	r0, [sp, #40]	; 0x28
   34b00:	adds	r0, r7, #0
   34b04:	movne	r0, #1
   34b08:	cmp	r2, #1
   34b0c:	movne	r0, #0
   34b10:	cmp	r0, #0
   34b14:	beq	34cc4 <__flatcc_fb_clear_parser@@Base+0x3018>
   34b18:	add	r3, r6, #524	; 0x20c
   34b1c:	str	r3, [sp, #56]	; 0x38
   34b20:	add	r3, r6, #352	; 0x160
   34b24:	str	r5, [sp, #44]	; 0x2c
   34b28:	str	r4, [sp, #60]	; 0x3c
   34b2c:	mov	r5, lr
   34b30:	mov	r4, r3
   34b34:	str	r1, [sp, #52]	; 0x34
   34b38:	str	r8, [sp, #48]	; 0x30
   34b3c:	ldr	r3, [r5, #4]
   34b40:	add	r0, r7, #4
   34b44:	ldm	r3, {r1, r2}
   34b48:	bl	2b4b0 <fb_symbol_table_find@@Base>
   34b4c:	subs	r3, r0, #0
   34b50:	beq	34b60 <__flatcc_fb_clear_parser@@Base+0x2eb4>
   34b54:	ldrh	r2, [r3, #8]
   34b58:	cmp	r2, #4
   34b5c:	bls	34a00 <__flatcc_fb_clear_parser@@Base+0x2d54>
   34b60:	ldr	r2, [r7]
   34b64:	cmp	r2, #0
   34b68:	beq	34be4 <__flatcc_fb_clear_parser@@Base+0x2f38>
   34b6c:	mov	r3, #0
   34b70:	ldr	r2, [r2]
   34b74:	add	r3, r3, #1
   34b78:	cmp	r2, #0
   34b7c:	bne	34b70 <__flatcc_fb_clear_parser@@Base+0x2ec4>
   34b80:	rsb	r8, r3, #1
   34b84:	b	34bb4 <__flatcc_fb_clear_parser@@Base+0x2f08>
   34b88:	cmp	r4, #0
   34b8c:	beq	34bb0 <__flatcc_fb_clear_parser@@Base+0x2f04>
   34b90:	ldr	r0, [r6, #412]	; 0x19c
   34b94:	cmp	r0, #0
   34b98:	beq	34bb0 <__flatcc_fb_clear_parser@@Base+0x2f04>
   34b9c:	mov	r2, r8
   34ba0:	ldr	r1, [r7]
   34ba4:	bl	2c404 <fb_scope_table_find@@Base>
   34ba8:	cmp	r0, #0
   34bac:	bne	34c10 <__flatcc_fb_clear_parser@@Base+0x2f64>
   34bb0:	add	r8, r8, #1
   34bb4:	cmp	r8, #0
   34bb8:	bne	34b88 <__flatcc_fb_clear_parser@@Base+0x2edc>
   34bbc:	cmp	r4, #0
   34bc0:	beq	34be4 <__flatcc_fb_clear_parser@@Base+0x2f38>
   34bc4:	ldr	r0, [r6, #412]	; 0x19c
   34bc8:	cmp	r0, #0
   34bcc:	beq	34be4 <__flatcc_fb_clear_parser@@Base+0x2f38>
   34bd0:	mov	r1, r8
   34bd4:	ldr	r2, [sp, #52]	; 0x34
   34bd8:	bl	2c404 <fb_scope_table_find@@Base>
   34bdc:	subs	r7, r0, #0
   34be0:	bne	34b3c <__flatcc_fb_clear_parser@@Base+0x2e90>
   34be4:	ldr	r5, [sp, #44]	; 0x2c
   34be8:	ldr	r8, [sp, #48]	; 0x30
   34bec:	ldr	ip, [r5, #16]
   34bf0:	mov	r3, r5
   34bf4:	mov	r1, ip
   34bf8:	ldr	r2, [sp, #36]	; 0x24
   34bfc:	mov	r0, r6
   34c00:	bl	2eabc <error_ref_sym@@Base>
   34c04:	mov	r3, #1
   34c08:	strh	r3, [r5, #24]
   34c0c:	b	34584 <__flatcc_fb_clear_parser@@Base+0x28d8>
   34c10:	mov	r7, r0
   34c14:	b	34b3c <__flatcc_fb_clear_parser@@Base+0x2e90>
   34c18:	ldr	r2, [pc, #928]	; 34fc0 <__flatcc_fb_clear_parser@@Base+0x3314>
   34c1c:	ldr	r1, [r5, #4]
   34c20:	mov	r3, r0
   34c24:	str	r0, [sp, #4]
   34c28:	str	r0, [sp]
   34c2c:	add	r2, pc, r2
   34c30:	mov	r0, r6
   34c34:	bl	2d4ec <__flatcc_error_report@@Base>
   34c38:	mvn	r0, #0
   34c3c:	b	34654 <__flatcc_fb_clear_parser@@Base+0x29a8>
   34c40:	strh	r4, [sl, #92]	; 0x5c
   34c44:	str	r4, [sp, #8]
   34c48:	b	344bc <__flatcc_fb_clear_parser@@Base+0x2810>
   34c4c:	mvn	r1, #0
   34c50:	mvn	r0, #0
   34c54:	cmp	r3, r1
   34c58:	cmpeq	r2, r0
   34c5c:	bne	349b0 <__flatcc_fb_clear_parser@@Base+0x2d04>
   34c60:	ldr	r2, [sp, #32]
   34c64:	mov	r3, #0
   34c68:	ldr	r1, [r5, #4]
   34c6c:	str	r3, [sp, #4]
   34c70:	str	r3, [sp]
   34c74:	mov	r0, r6
   34c78:	bl	2d4ec <__flatcc_error_report@@Base>
   34c7c:	ldrd	r2, [sp, #64]	; 0x40
   34c80:	ldrh	r1, [r5, #56]	; 0x38
   34c84:	adds	r2, r2, #1
   34c88:	adc	r3, r3, #0
   34c8c:	strd	r2, [sp, #64]	; 0x40
   34c90:	b	345e8 <__flatcc_fb_clear_parser@@Base+0x293c>
   34c94:	ldr	r2, [pc, #808]	; 34fc4 <__flatcc_fb_clear_parser@@Base+0x3318>
   34c98:	mov	r3, #0
   34c9c:	ldr	r1, [r5, #4]
   34ca0:	mov	r0, r6
   34ca4:	str	r3, [sp, #4]
   34ca8:	str	r3, [sp]
   34cac:	add	r2, pc, r2
   34cb0:	bl	2d4ec <__flatcc_error_report@@Base>
   34cb4:	mov	r3, #1
   34cb8:	strh	r3, [r5, #56]	; 0x38
   34cbc:	mvn	r0, #0
   34cc0:	b	34654 <__flatcc_fb_clear_parser@@Base+0x29a8>
   34cc4:	cmp	r2, #1
   34cc8:	moveq	r1, r0
   34ccc:	movne	r1, ip
   34cd0:	cmn	r6, #352	; 0x160
   34cd4:	beq	34bf0 <__flatcc_fb_clear_parser@@Base+0x2f44>
   34cd8:	ldr	r0, [r6, #412]	; 0x19c
   34cdc:	cmp	r0, #0
   34ce0:	beq	34bf0 <__flatcc_fb_clear_parser@@Base+0x2f44>
   34ce4:	rsb	r2, r3, #0
   34ce8:	bl	2c404 <fb_scope_table_find@@Base>
   34cec:	cmp	r0, #0
   34cf0:	beq	34bec <__flatcc_fb_clear_parser@@Base+0x2f40>
   34cf4:	ldr	r3, [sp, #40]	; 0x28
   34cf8:	add	r0, r0, #4
   34cfc:	ldr	r3, [r3, #4]
   34d00:	ldm	r3, {r1, r2}
   34d04:	bl	2b4b0 <fb_symbol_table_find@@Base>
   34d08:	subs	r3, r0, #0
   34d0c:	beq	34bec <__flatcc_fb_clear_parser@@Base+0x2f40>
   34d10:	ldrh	r2, [r3, #8]
   34d14:	cmp	r2, #4
   34d18:	bhi	34bec <__flatcc_fb_clear_parser@@Base+0x2f40>
   34d1c:	ldr	r1, [r3, #16]
   34d20:	add	r0, r6, #524	; 0x20c
   34d24:	str	r3, [sp, #40]	; 0x28
   34d28:	bl	2ade0 <ptr_set_find_item@@Base>
   34d2c:	ldr	r3, [sp, #40]	; 0x28
   34d30:	cmp	r0, #0
   34d34:	bne	34a28 <__flatcc_fb_clear_parser@@Base+0x2d7c>
   34d38:	b	34bec <__flatcc_fb_clear_parser@@Base+0x2f40>
   34d3c:	mov	r2, #0
   34d40:	ldr	r3, [r3, #4]
   34d44:	ldr	r1, [r5, #4]
   34d48:	str	r2, [sp, #4]
   34d4c:	str	r2, [sp]
   34d50:	ldr	r2, [pc, #624]	; 34fc8 <__flatcc_fb_clear_parser@@Base+0x331c>
   34d54:	mov	r0, r6
   34d58:	add	r2, pc, r2
   34d5c:	bl	2d4ec <__flatcc_error_report@@Base>
   34d60:	mov	r3, #1
   34d64:	strh	r3, [r5, #24]
   34d68:	b	34584 <__flatcc_fb_clear_parser@@Base+0x28d8>
   34d6c:	cmp	r2, #6
   34d70:	bne	34398 <__flatcc_fb_clear_parser@@Base+0x26ec>
   34d74:	ldrh	r3, [r4, #16]
   34d78:	cmp	r3, #6
   34d7c:	beq	34398 <__flatcc_fb_clear_parser@@Base+0x26ec>
   34d80:	mov	r3, #0
   34d84:	ldr	r1, [r4, #4]
   34d88:	ldr	r2, [sp, #20]
   34d8c:	str	r3, [sp, #4]
   34d90:	str	r3, [sp]
   34d94:	mov	r0, r6
   34d98:	bl	2d4ec <__flatcc_error_report@@Base>
   34d9c:	b	34398 <__flatcc_fb_clear_parser@@Base+0x26ec>
   34da0:	ldr	r2, [pc, #548]	; 34fcc <__flatcc_fb_clear_parser@@Base+0x3320>
   34da4:	mov	r3, #0
   34da8:	ldr	r1, [r5, #4]
   34dac:	mov	r0, r6
   34db0:	str	r3, [sp, #4]
   34db4:	str	r3, [sp]
   34db8:	add	r2, pc, r2
   34dbc:	bl	2d4ec <__flatcc_error_report@@Base>
   34dc0:	mvn	r0, #0
   34dc4:	b	34654 <__flatcc_fb_clear_parser@@Base+0x29a8>
   34dc8:	ldr	r2, [pc, #512]	; 34fd0 <__flatcc_fb_clear_parser@@Base+0x3324>
   34dcc:	mov	r3, #0
   34dd0:	ldr	r1, [r1, #4]
   34dd4:	add	r2, pc, r2
   34dd8:	str	r3, [sp, #4]
   34ddc:	str	r3, [sp]
   34de0:	bl	2d4ec <__flatcc_error_report@@Base>
   34de4:	mvn	r0, #0
   34de8:	b	34654 <__flatcc_fb_clear_parser@@Base+0x29a8>
   34dec:	mov	r3, #0
   34df0:	ldr	r1, [r5, #4]
   34df4:	ldr	r2, [sp, #24]
   34df8:	str	r3, [sp, #4]
   34dfc:	str	r3, [sp]
   34e00:	mov	r0, r6
   34e04:	bl	2d4ec <__flatcc_error_report@@Base>
   34e08:	ldrh	r1, [r5, #56]	; 0x38
   34e0c:	strb	r4, [sp, #64]	; 0x40
   34e10:	b	345e8 <__flatcc_fb_clear_parser@@Base+0x293c>
   34e14:	mov	r2, #1
   34e18:	ldr	r1, [r1, #4]
   34e1c:	str	r3, [sp, #4]
   34e20:	str	r3, [sp]
   34e24:	strh	r2, [sl, #48]	; 0x30
   34e28:	ldr	r2, [pc, #420]	; 34fd4 <__flatcc_fb_clear_parser@@Base+0x3328>
   34e2c:	add	r2, pc, r2
   34e30:	bl	2d4ec <__flatcc_error_report@@Base>
   34e34:	mvn	r0, #0
   34e38:	b	34654 <__flatcc_fb_clear_parser@@Base+0x29a8>
   34e3c:	ldr	r2, [pc, #404]	; 34fd8 <__flatcc_fb_clear_parser@@Base+0x332c>
   34e40:	mov	r3, #0
   34e44:	ldr	r1, [r5, #4]
   34e48:	mov	r0, r6
   34e4c:	str	r3, [sp, #4]
   34e50:	str	r3, [sp]
   34e54:	add	r2, pc, r2
   34e58:	bl	2d4ec <__flatcc_error_report@@Base>
   34e5c:	mvn	r0, #0
   34e60:	b	34654 <__flatcc_fb_clear_parser@@Base+0x29a8>
   34e64:	ldr	r2, [pc, #368]	; 34fdc <__flatcc_fb_clear_parser@@Base+0x3330>
   34e68:	mov	r3, #0
   34e6c:	ldr	r1, [r5, #4]
   34e70:	mov	r0, r6
   34e74:	str	r3, [sp, #4]
   34e78:	str	r3, [sp]
   34e7c:	add	r2, pc, r2
   34e80:	bl	2d4ec <__flatcc_error_report@@Base>
   34e84:	mov	r3, #1
   34e88:	strh	r3, [r5, #56]	; 0x38
   34e8c:	mvn	r0, #0
   34e90:	b	34654 <__flatcc_fb_clear_parser@@Base+0x29a8>
   34e94:	ldr	r2, [pc, #324]	; 34fe0 <__flatcc_fb_clear_parser@@Base+0x3334>
   34e98:	mov	r3, #0
   34e9c:	ldr	r1, [r1, #4]
   34ea0:	add	r2, pc, r2
   34ea4:	str	r3, [sp, #4]
   34ea8:	str	r3, [sp]
   34eac:	bl	2d4ec <__flatcc_error_report@@Base>
   34eb0:	mvn	r0, #0
   34eb4:	b	34654 <__flatcc_fb_clear_parser@@Base+0x29a8>
   34eb8:	ldr	r2, [pc, #292]	; 34fe4 <__flatcc_fb_clear_parser@@Base+0x3338>
   34ebc:	mov	r3, #0
   34ec0:	mov	r0, r6
   34ec4:	str	r3, [sp, #4]
   34ec8:	str	r3, [sp]
   34ecc:	add	r2, pc, r2
   34ed0:	bl	2d4ec <__flatcc_error_report@@Base>
   34ed4:	mov	r3, #1
   34ed8:	strh	r3, [r5, #56]	; 0x38
   34edc:	mvn	r0, #0
   34ee0:	b	34654 <__flatcc_fb_clear_parser@@Base+0x29a8>
   34ee4:	ldr	r3, [pc, #252]	; 34fe8 <__flatcc_fb_clear_parser@@Base+0x333c>
   34ee8:	ldr	r1, [pc, #252]	; 34fec <__flatcc_fb_clear_parser@@Base+0x3340>
   34eec:	ldr	r0, [pc, #252]	; 34ff0 <__flatcc_fb_clear_parser@@Base+0x3344>
   34ef0:	add	r3, pc, r3
   34ef4:	ldr	r2, [pc, #248]	; 34ff4 <__flatcc_fb_clear_parser@@Base+0x3348>
   34ef8:	add	r3, r3, #272	; 0x110
   34efc:	add	r1, pc, r1
   34f00:	add	r0, pc, r0
   34f04:	bl	14030 <__assert_fail@plt>
   34f08:	ldr	r3, [pc, #232]	; 34ff8 <__flatcc_fb_clear_parser@@Base+0x334c>
   34f0c:	ldr	r1, [pc, #232]	; 34ffc <__flatcc_fb_clear_parser@@Base+0x3350>
   34f10:	ldr	r0, [pc, #232]	; 35000 <__flatcc_fb_clear_parser@@Base+0x3354>
   34f14:	add	r3, pc, r3
   34f18:	ldr	r2, [pc, #228]	; 35004 <__flatcc_fb_clear_parser@@Base+0x3358>
   34f1c:	add	r3, r3, #272	; 0x110
   34f20:	add	r1, pc, r1
   34f24:	add	r0, pc, r0
   34f28:	bl	14030 <__assert_fail@plt>
   34f2c:	cmp	r1, #0
   34f30:	add	r4, r5, #48	; 0x30
   34f34:	beq	346d8 <__flatcc_fb_clear_parser@@Base+0x2a2c>
   34f38:	ldm	r4, {r0, r1, r2, r3}
   34f3c:	stm	r8, {r0, r1, r2, r3}
   34f40:	mov	r3, r8
   34f44:	ldr	r2, [sl, #40]	; 0x28
   34f48:	mov	r1, r5
   34f4c:	mov	r0, r6
   34f50:	bl	36d7c <__flatcc_fb_coerce_scalar_type@@Base>
   34f54:	cmp	r0, #0
   34f58:	beq	346d8 <__flatcc_fb_clear_parser@@Base+0x2a2c>
   34f5c:	mvn	r0, #0
   34f60:	b	34654 <__flatcc_fb_clear_parser@@Base+0x29a8>
   34f64:	andeq	r2, r2, ip, lsr #31
   34f68:	andeq	r3, r2, r4, lsl #12
   34f6c:	andeq	r2, r2, r0, asr pc
   34f70:	ldrdeq	r3, [r2], -r0
   34f74:	muleq	r2, r4, r5
   34f78:	andeq	r3, r2, r0, ror #10
   34f7c:	andeq	r3, r2, ip, lsr #10
   34f80:	ldrdeq	r3, [r2], -r0
   34f84:	andeq	r3, r2, ip, lsl r4
   34f88:			; <UNDEFINED> instruction: 0x000234b8
   34f8c:	andeq	r3, r2, r8, asr pc
   34f90:	andeq	r2, r2, r0, ror #26
   34f94:	andeq	r3, r2, r4, lsr #27
   34f98:	andeq	r3, r2, ip, ror sp
   34f9c:	andeq	r3, r2, r0, asr sp
   34fa0:	andeq	r3, r2, ip, asr #25
   34fa4:	strdeq	r3, [r2], -r0
   34fa8:	andeq	r3, r2, r8, lsl fp
   34fac:	andeq	r3, r2, r0, lsr fp
   34fb0:	strdeq	r3, [r2], -ip
   34fb4:			; <UNDEFINED> instruction: 0x00022fb0
   34fb8:	andeq	r3, r2, r8, asr r8
   34fbc:	andeq	r3, r2, r4, ror sl
   34fc0:	andeq	r3, r2, r4, asr r5
   34fc4:	andeq	r3, r2, r0, ror #14
   34fc8:	andeq	r3, r2, r4, ror #9
   34fcc:	andeq	r3, r2, r4, ror r5
   34fd0:			; <UNDEFINED> instruction: 0x000232bc
   34fd4:	andeq	r3, r2, ip, asr #4
   34fd8:	muleq	r2, ip, r4
   34fdc:	andeq	r3, r2, r0, asr r5
   34fe0:	andeq	r3, r2, r4, lsr #4
   34fe4:	muleq	r2, r4, r4
   34fe8:	andeq	r2, r2, r0, lsl #7
   34fec:	ldrdeq	r2, [r2], -r8
   34ff0:	andeq	r3, r2, ip, lsr #5
   34ff4:	andeq	r0, r0, r3, lsr #10
   34ff8:	andeq	r2, r2, ip, asr r3
   34ffc:			; <UNDEFINED> instruction: 0x000224b4
   35000:	andeq	r3, r2, r4, lsr r1
   35004:	andeq	r0, r0, sp, asr #9

00035008 <__flatcc_fb_build_schema@@Base>:
   35008:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3500c:	add	r3, r0, #524	; 0x20c
   35010:	sub	sp, sp, #156	; 0x9c
   35014:	add	r9, r0, #352	; 0x160
   35018:	mov	fp, r0
   3501c:	mov	r1, r9
   35020:	mov	r0, r3
   35024:	str	r3, [sp, #12]
   35028:	bl	2ade0 <ptr_set_find_item@@Base>
   3502c:	ldr	r3, [pc, #4040]	; 35ffc <__flatcc_fb_build_schema@@Base+0xff4>
   35030:	add	r3, pc, r3
   35034:	str	r3, [sp, #8]
   35038:	cmp	r0, #0
   3503c:	beq	36c44 <__flatcc_fb_build_schema@@Base+0x1c3c>
   35040:	ldr	r5, [fp, #392]	; 0x188
   35044:	cmp	r5, #0
   35048:	beq	35164 <__flatcc_fb_build_schema@@Base+0x15c>
   3504c:	ldr	sl, [pc, #4012]	; 36000 <__flatcc_fb_build_schema@@Base+0xff8>
   35050:	ldr	r4, [pc, #4012]	; 36004 <__flatcc_fb_build_schema@@Base+0xffc>
   35054:	add	sl, pc, sl
   35058:	ldr	r6, [pc, #4008]	; 36008 <__flatcc_fb_build_schema@@Base+0x1000>
   3505c:	mov	r8, #1
   35060:	mov	r7, #0
   35064:	b	35074 <__flatcc_fb_build_schema@@Base+0x6c>
   35068:	ldr	r5, [r5]
   3506c:	cmp	r5, #0
   35070:	beq	35164 <__flatcc_fb_build_schema@@Base+0x15c>
   35074:	ldrh	r3, [r5, #8]
   35078:	cmp	r3, #4
   3507c:	bhi	35068 <__flatcc_fb_build_schema@@Base+0x60>
   35080:	ldr	r0, [r5, #12]
   35084:	cmp	r0, #0
   35088:	beq	35fac <__flatcc_fb_build_schema@@Base+0xfa4>
   3508c:	ldr	ip, [r0]
   35090:	cmp	ip, #0
   35094:	beq	35fc8 <__flatcc_fb_build_schema@@Base+0xfc0>
   35098:	ldr	r3, [pc, #3944]	; 36008 <__flatcc_fb_build_schema@@Base+0x1000>
   3509c:	ldr	r2, [ip, #4]
   350a0:	ldr	r1, [r2, #4]
   350a4:	ldr	r2, [r2]
   350a8:	cmp	r1, #0
   350ac:	beq	350c8 <__flatcc_fb_build_schema@@Base+0xc0>
   350b0:	add	r1, r2, r1
   350b4:	ldrb	lr, [r2], #1
   350b8:	eor	r3, r3, lr
   350bc:	cmp	r2, r1
   350c0:	mul	r3, r4, r3
   350c4:	bne	350b4 <__flatcc_fb_build_schema@@Base+0xac>
   350c8:	ldr	ip, [ip]
   350cc:	eor	r3, r3, #46	; 0x2e
   350d0:	cmp	ip, #0
   350d4:	mul	r3, r4, r3
   350d8:	bne	3509c <__flatcc_fb_build_schema@@Base+0x94>
   350dc:	ldr	r1, [r5, #4]
   350e0:	ldm	r1, {r1, r2}
   350e4:	cmp	r2, #0
   350e8:	sub	r2, r2, #1
   350ec:	beq	35fe8 <__flatcc_fb_build_schema@@Base+0xfe0>
   350f0:	add	ip, r1, r2
   350f4:	sub	r1, r1, #1
   350f8:	ldrb	r2, [r1, #1]!
   350fc:	eor	r3, r3, r2
   35100:	cmp	ip, r1
   35104:	mul	r3, r4, r3
   35108:	bne	350f8 <__flatcc_fb_build_schema@@Base+0xf0>
   3510c:	cmp	r3, #0
   35110:	moveq	r3, r6
   35114:	cmp	r0, #0
   35118:	str	r3, [r5, #88]	; 0x58
   3511c:	str	r9, [r5, #16]
   35120:	beq	35068 <__flatcc_fb_build_schema@@Base+0x60>
   35124:	add	r0, r0, #4
   35128:	mov	r2, r8
   3512c:	mov	r1, r5
   35130:	bl	2b488 <fb_symbol_table_insert_item@@Base>
   35134:	cmp	r0, #0
   35138:	beq	35068 <__flatcc_fb_build_schema@@Base+0x60>
   3513c:	ldr	r3, [r0, #4]
   35140:	ldr	r1, [r5, #4]
   35144:	mov	r2, sl
   35148:	str	r7, [sp, #4]
   3514c:	str	r7, [sp]
   35150:	mov	r0, fp
   35154:	bl	2d4ec <__flatcc_error_report@@Base>
   35158:	ldr	r5, [r5]
   3515c:	cmp	r5, #0
   35160:	bne	35074 <__flatcc_fb_build_schema@@Base+0x6c>
   35164:	ldr	r4, [fp, #356]	; 0x164
   35168:	ldr	r7, [pc, #3740]	; 3600c <__flatcc_fb_build_schema@@Base+0x1004>
   3516c:	cmp	r4, #0
   35170:	add	r7, pc, r7
   35174:	mov	r5, #1
   35178:	mov	r6, #0
   3517c:	beq	351cc <__flatcc_fb_build_schema@@Base+0x1c4>
   35180:	ldr	r0, [fp, #412]	; 0x19c
   35184:	mov	r2, r5
   35188:	add	r0, r0, #16
   3518c:	mov	r1, r4
   35190:	bl	3d2f0 <fb_name_table_insert_item@@Base>
   35194:	cmp	r0, #0
   35198:	beq	351c0 <__flatcc_fb_build_schema@@Base+0x1b8>
   3519c:	ldr	r2, [r4, #12]
   351a0:	mov	r3, r6
   351a4:	str	r2, [sp, #4]
   351a8:	ldr	r1, [r4, #8]
   351ac:	mov	r2, r7
   351b0:	str	r1, [sp]
   351b4:	mov	r0, fp
   351b8:	mov	r1, #0
   351bc:	bl	2d4ec <__flatcc_error_report@@Base>
   351c0:	ldr	r4, [r4]
   351c4:	cmp	r4, #0
   351c8:	bne	35180 <__flatcc_fb_build_schema@@Base+0x178>
   351cc:	ldr	r5, [pc, #3644]	; 36010 <__flatcc_fb_build_schema@@Base+0x1008>
   351d0:	mov	sl, #0
   351d4:	add	r5, pc, r5
   351d8:	sub	r5, r5, #4
   351dc:	mov	r8, sl
   351e0:	mov	r6, #1
   351e4:	mov	r7, #2
   351e8:	b	35238 <__flatcc_fb_build_schema@@Base+0x230>
   351ec:	ldr	r3, [r5, #4]!
   351f0:	str	r0, [fp, #52]	; 0x34
   351f4:	mov	r0, r3
   351f8:	str	sl, [r4, #24]
   351fc:	str	r3, [r4, #8]
   35200:	bl	13f70 <strlen@plt>
   35204:	strh	r7, [r4, #16]
   35208:	str	r8, [r4]
   3520c:	mov	r1, r4
   35210:	mov	r2, r6
   35214:	str	r0, [r4, #12]
   35218:	ldr	r0, [fp, #412]	; 0x19c
   3521c:	add	r0, r0, #16
   35220:	bl	3d2f0 <fb_name_table_insert_item@@Base>
   35224:	cmp	r0, #0
   35228:	strne	sl, [r0, #24]
   3522c:	add	sl, sl, #1
   35230:	cmp	sl, #12
   35234:	beq	35280 <__flatcc_fb_build_schema@@Base+0x278>
   35238:	ldr	r4, [fp, #52]	; 0x34
   3523c:	ldr	r3, [fp, #44]	; 0x2c
   35240:	add	r0, r4, #32
   35244:	cmp	r0, r3
   35248:	bls	351ec <__flatcc_fb_build_schema@@Base+0x1e4>
   3524c:	mov	r1, r6
   35250:	mov	r0, #65536	; 0x10000
   35254:	bl	13e98 <calloc@plt>
   35258:	cmp	r0, #0
   3525c:	beq	36c68 <__flatcc_fb_build_schema@@Base+0x1c60>
   35260:	ldr	r3, [fp, #48]	; 0x30
   35264:	add	r4, r0, #16
   35268:	str	r3, [r0]
   3526c:	add	r3, r0, #65536	; 0x10000
   35270:	str	r0, [fp, #48]	; 0x30
   35274:	str	r3, [fp, #44]	; 0x2c
   35278:	add	r0, r0, #48	; 0x30
   3527c:	b	351ec <__flatcc_fb_build_schema@@Base+0x1e4>
   35280:	ldr	r3, [fp, #184]	; 0xb8
   35284:	cmp	r3, #0
   35288:	bne	352d8 <__flatcc_fb_build_schema@@Base+0x2d0>
   3528c:	ldr	r4, [fp, #392]	; 0x188
   35290:	cmp	r4, #0
   35294:	beq	36218 <__flatcc_fb_build_schema@@Base+0x1210>
   35298:	mov	r5, #1
   3529c:	b	352ac <__flatcc_fb_build_schema@@Base+0x2a4>
   352a0:	ldr	r4, [r4]
   352a4:	cmp	r4, #0
   352a8:	beq	352d8 <__flatcc_fb_build_schema@@Base+0x2d0>
   352ac:	ldrh	r3, [r4, #8]
   352b0:	cmp	r3, #3
   352b4:	bne	352a0 <__flatcc_fb_build_schema@@Base+0x298>
   352b8:	mov	r1, r4
   352bc:	mov	r0, fp
   352c0:	bl	3426c <__flatcc_fb_clear_parser@@Base+0x25c0>
   352c4:	cmp	r0, #0
   352c8:	strhne	r5, [r4, #48]	; 0x30
   352cc:	ldr	r4, [r4]
   352d0:	cmp	r4, #0
   352d4:	bne	352ac <__flatcc_fb_build_schema@@Base+0x2a4>
   352d8:	ldr	sl, [fp, #392]	; 0x188
   352dc:	cmp	sl, #0
   352e0:	beq	36218 <__flatcc_fb_build_schema@@Base+0x1210>
   352e4:	ldr	r3, [pc, #3368]	; 36014 <__flatcc_fb_build_schema@@Base+0x100c>
   352e8:	add	r3, pc, r3
   352ec:	str	r3, [sp, #40]	; 0x28
   352f0:	ldr	r3, [pc, #3360]	; 36018 <__flatcc_fb_build_schema@@Base+0x1010>
   352f4:	add	r3, pc, r3
   352f8:	str	r3, [sp, #44]	; 0x2c
   352fc:	ldr	r3, [pc, #3352]	; 3601c <__flatcc_fb_build_schema@@Base+0x1014>
   35300:	add	r3, pc, r3
   35304:	str	r3, [sp, #24]
   35308:	ldr	r3, [pc, #3344]	; 36020 <__flatcc_fb_build_schema@@Base+0x1018>
   3530c:	add	r3, pc, r3
   35310:	str	r3, [sp, #48]	; 0x30
   35314:	ldr	r3, [pc, #3336]	; 36024 <__flatcc_fb_build_schema@@Base+0x101c>
   35318:	add	r3, pc, r3
   3531c:	str	r3, [sp, #52]	; 0x34
   35320:	ldr	r3, [pc, #3328]	; 36028 <__flatcc_fb_build_schema@@Base+0x1020>
   35324:	add	r3, pc, r3
   35328:	str	r3, [sp, #56]	; 0x38
   3532c:	ldrh	r3, [sl, #8]
   35330:	cmp	r3, #4
   35334:	addls	pc, pc, r3, lsl #2
   35338:	b	35dc4 <__flatcc_fb_build_schema@@Base+0xdbc>
   3533c:	b	35378 <__flatcc_fb_build_schema@@Base+0x370>
   35340:	b	35788 <__flatcc_fb_build_schema@@Base+0x780>
   35344:	b	35378 <__flatcc_fb_build_schema@@Base+0x370>
   35348:	b	35350 <__flatcc_fb_build_schema@@Base+0x348>
   3534c:	b	3535c <__flatcc_fb_build_schema@@Base+0x354>
   35350:	ldr	r3, [fp, #184]	; 0xb8
   35354:	cmp	r3, #0
   35358:	beq	35378 <__flatcc_fb_build_schema@@Base+0x370>
   3535c:	mov	r1, sl
   35360:	mov	r0, fp
   35364:	bl	3426c <__flatcc_fb_clear_parser@@Base+0x25c0>
   35368:	cmp	r0, #0
   3536c:	beq	35378 <__flatcc_fb_build_schema@@Base+0x370>
   35370:	mov	r3, #1
   35374:	strh	r3, [sl, #48]	; 0x30
   35378:	ldr	sl, [sl]
   3537c:	cmp	sl, #0
   35380:	bne	3532c <__flatcc_fb_build_schema@@Base+0x324>
   35384:	ldr	r4, [fp, #392]	; 0x188
   35388:	cmp	r4, #0
   3538c:	beq	36b60 <__flatcc_fb_build_schema@@Base+0x1b58>
   35390:	ldrh	r5, [r4, #8]
   35394:	cmp	r5, #1
   35398:	bne	353bc <__flatcc_fb_build_schema@@Base+0x3b4>
   3539c:	ldrh	r3, [r4, #48]	; 0x30
   353a0:	cmp	r3, #1
   353a4:	beq	353bc <__flatcc_fb_build_schema@@Base+0x3b4>
   353a8:	mov	r1, r4
   353ac:	mov	r0, fp
   353b0:	bl	31dc8 <__flatcc_fb_clear_parser@@Base+0x11c>
   353b4:	cmp	r0, #0
   353b8:	strhne	r5, [r4, #48]	; 0x30
   353bc:	ldr	r4, [r4]
   353c0:	cmp	r4, #0
   353c4:	bne	35390 <__flatcc_fb_build_schema@@Base+0x388>
   353c8:	ldr	r7, [fp, #392]	; 0x188
   353cc:	cmp	r7, #0
   353d0:	beq	36b60 <__flatcc_fb_build_schema@@Base+0x1b58>
   353d4:	ldr	r3, [pc, #3152]	; 3602c <__flatcc_fb_build_schema@@Base+0x1024>
   353d8:	mov	sl, r7
   353dc:	add	r3, pc, r3
   353e0:	str	r3, [sp, #28]
   353e4:	ldr	r3, [pc, #3140]	; 36030 <__flatcc_fb_build_schema@@Base+0x1028>
   353e8:	add	r3, pc, r3
   353ec:	str	r3, [sp, #32]
   353f0:	ldr	r3, [pc, #3132]	; 36034 <__flatcc_fb_build_schema@@Base+0x102c>
   353f4:	add	r3, pc, r3
   353f8:	str	r3, [sp, #36]	; 0x24
   353fc:	ldr	r3, [pc, #3124]	; 36038 <__flatcc_fb_build_schema@@Base+0x1030>
   35400:	add	r3, pc, r3
   35404:	str	r3, [sp, #40]	; 0x28
   35408:	ldr	r3, [pc, #3116]	; 3603c <__flatcc_fb_build_schema@@Base+0x1034>
   3540c:	add	r3, pc, r3
   35410:	str	r3, [sp, #44]	; 0x2c
   35414:	ldr	r3, [pc, #3108]	; 36040 <__flatcc_fb_build_schema@@Base+0x1038>
   35418:	add	r3, pc, r3
   3541c:	str	r3, [sp, #48]	; 0x30
   35420:	ldrh	r3, [sl, #8]
   35424:	cmp	r3, #0
   35428:	beq	3634c <__flatcc_fb_build_schema@@Base+0x1344>
   3542c:	cmp	r3, #2
   35430:	bne	35600 <__flatcc_fb_build_schema@@Base+0x5f8>
   35434:	ldrh	r3, [sl, #48]	; 0x30
   35438:	cmp	r3, #1
   3543c:	str	r3, [sp, #16]
   35440:	beq	35600 <__flatcc_fb_build_schema@@Base+0x5f8>
   35444:	cmp	r3, #0
   35448:	bne	36d58 <__flatcc_fb_build_schema@@Base+0x1d50>
   3544c:	ldr	r3, [sl, #28]
   35450:	cmp	r3, #0
   35454:	beq	3547c <__flatcc_fb_build_schema@@Base+0x474>
   35458:	ldr	r2, [sp, #16]
   3545c:	ldr	r1, [sl, #4]
   35460:	mov	r3, r2
   35464:	str	r2, [sp, #4]
   35468:	str	r2, [sp]
   3546c:	ldr	r2, [pc, #3024]	; 36044 <__flatcc_fb_build_schema@@Base+0x103c>
   35470:	mov	r0, fp
   35474:	add	r2, pc, r2
   35478:	bl	2d4ec <__flatcc_error_report@@Base>
   3547c:	ldr	r8, [sl, #20]
   35480:	cmp	r8, #0
   35484:	beq	35600 <__flatcc_fb_build_schema@@Base+0x5f8>
   35488:	add	r3, sl, #56	; 0x38
   3548c:	str	sl, [sp, #8]
   35490:	mov	r7, r3
   35494:	b	354c8 <__flatcc_fb_build_schema@@Base+0x4c0>
   35498:	mov	r2, #0
   3549c:	ldr	r3, [r0, #4]
   354a0:	ldr	r1, [r8, #4]
   354a4:	str	r2, [sp, #4]
   354a8:	str	r2, [sp]
   354ac:	ldr	r2, [pc, #2964]	; 36048 <__flatcc_fb_build_schema@@Base+0x1040>
   354b0:	mov	r0, fp
   354b4:	add	r2, pc, r2
   354b8:	bl	2d4ec <__flatcc_error_report@@Base>
   354bc:	ldr	r8, [r8]
   354c0:	cmp	r8, #0
   354c4:	beq	355fc <__flatcc_fb_build_schema@@Base+0x5f4>
   354c8:	mov	r2, #1
   354cc:	mov	r1, r8
   354d0:	mov	r0, r7
   354d4:	bl	2b488 <fb_symbol_table_insert_item@@Base>
   354d8:	cmp	r0, #0
   354dc:	bne	35498 <__flatcc_fb_build_schema@@Base+0x490>
   354e0:	ldrh	r3, [r8, #8]
   354e4:	cmp	r3, #5
   354e8:	bne	368d4 <__flatcc_fb_build_schema@@Base+0x18cc>
   354ec:	ldrh	r3, [r8, #56]	; 0x38
   354f0:	cmp	r3, #0
   354f4:	bne	36558 <__flatcc_fb_build_schema@@Base+0x1550>
   354f8:	ldrh	r3, [r8, #24]
   354fc:	cmp	r3, #1
   35500:	beq	354bc <__flatcc_fb_build_schema@@Base+0x4b4>
   35504:	cmp	r3, #12
   35508:	beq	3552c <__flatcc_fb_build_schema@@Base+0x524>
   3550c:	ldr	r2, [pc, #2872]	; 3604c <__flatcc_fb_build_schema@@Base+0x1044>
   35510:	mov	r3, #0
   35514:	ldr	r1, [r8, #4]
   35518:	add	r2, pc, r2
   3551c:	str	r3, [sp, #4]
   35520:	str	r3, [sp]
   35524:	mov	r0, fp
   35528:	bl	2d4ec <__flatcc_error_report@@Base>
   3552c:	ldr	r1, [r8, #32]
   35530:	ldr	r3, [sp, #8]
   35534:	cmp	r1, #0
   35538:	ldr	r4, [r3, #12]
   3553c:	beq	355d8 <__flatcc_fb_build_schema@@Base+0x5d0>
   35540:	mov	r6, r1
   35544:	mov	r2, #0
   35548:	b	35554 <__flatcc_fb_build_schema@@Base+0x54c>
   3554c:	mov	r2, r3
   35550:	mov	r6, r5
   35554:	ldr	r5, [r6]
   35558:	add	r3, r2, #1
   3555c:	cmp	r5, #0
   35560:	bne	3554c <__flatcc_fb_build_schema@@Base+0x544>
   35564:	adds	r0, r4, #0
   35568:	movne	r0, #1
   3556c:	cmp	r3, #1
   35570:	movne	r0, #0
   35574:	cmp	r0, #0
   35578:	bne	36134 <__flatcc_fb_build_schema@@Base+0x112c>
   3557c:	cmp	r3, #1
   35580:	moveq	r5, r0
   35584:	movne	r5, r1
   35588:	cmp	r9, #0
   3558c:	beq	355d8 <__flatcc_fb_build_schema@@Base+0x5d0>
   35590:	ldr	r0, [fp, #412]	; 0x19c
   35594:	cmp	r0, #0
   35598:	beq	355d8 <__flatcc_fb_build_schema@@Base+0x5d0>
   3559c:	rsb	r2, r2, #0
   355a0:	mov	r1, r5
   355a4:	bl	2c404 <fb_scope_table_find@@Base>
   355a8:	cmp	r0, #0
   355ac:	beq	355d4 <__flatcc_fb_build_schema@@Base+0x5cc>
   355b0:	ldr	r3, [r6, #4]
   355b4:	add	r0, r0, #4
   355b8:	ldm	r3, {r1, r2}
   355bc:	bl	2b4b0 <fb_symbol_table_find@@Base>
   355c0:	subs	sl, r0, #0
   355c4:	beq	355d4 <__flatcc_fb_build_schema@@Base+0x5cc>
   355c8:	ldrh	r2, [sl, #8]
   355cc:	cmp	r2, #4
   355d0:	bls	36920 <__flatcc_fb_build_schema@@Base+0x1918>
   355d4:	ldr	r1, [r8, #32]
   355d8:	mov	r3, r8
   355dc:	ldr	r2, [sp, #28]
   355e0:	mov	r0, fp
   355e4:	bl	2eabc <error_ref_sym@@Base>
   355e8:	mov	r3, #1
   355ec:	strh	r3, [r8, #24]
   355f0:	ldr	r8, [r8]
   355f4:	cmp	r8, #0
   355f8:	bne	354c8 <__flatcc_fb_build_schema@@Base+0x4c0>
   355fc:	ldr	sl, [sp, #8]
   35600:	ldr	sl, [sl]
   35604:	cmp	sl, #0
   35608:	bne	35420 <__flatcc_fb_build_schema@@Base+0x418>
   3560c:	ldr	r3, [fp, #396]	; 0x18c
   35610:	ldr	sl, [fp, #392]	; 0x188
   35614:	cmp	r3, #0
   35618:	bne	36228 <__flatcc_fb_build_schema@@Base+0x1220>
   3561c:	cmp	sl, #0
   35620:	str	r3, [fp, #396]	; 0x18c
   35624:	beq	356a0 <__flatcc_fb_build_schema@@Base+0x698>
   35628:	ldr	r5, [pc, #2592]	; 36050 <__flatcc_fb_build_schema@@Base+0x1048>
   3562c:	add	r3, sp, #68	; 0x44
   35630:	mov	r7, #36	; 0x24
   35634:	mov	r4, #0
   35638:	add	r8, sp, #104	; 0x68
   3563c:	str	r3, [sp, #8]
   35640:	add	r3, sp, #100	; 0x64
   35644:	str	r3, [sp, #16]
   35648:	ldrh	r2, [sl, #8]
   3564c:	cmp	r2, #0
   35650:	bne	35694 <__flatcc_fb_build_schema@@Base+0x68c>
   35654:	ldrh	r3, [sl, #92]	; 0x5c
   35658:	tst	r3, #8
   3565c:	beq	3657c <__flatcc_fb_build_schema@@Base+0x1574>
   35660:	ldr	r3, [sl, #20]
   35664:	str	r2, [sp, #104]	; 0x68
   35668:	cmp	r3, #0
   3566c:	mov	r2, r8
   35670:	beq	35688 <__flatcc_fb_build_schema@@Base+0x680>
   35674:	str	r3, [r2]
   35678:	add	r2, r3, #108	; 0x6c
   3567c:	ldr	r3, [r3]
   35680:	cmp	r3, #0
   35684:	bne	35674 <__flatcc_fb_build_schema@@Base+0x66c>
   35688:	str	r4, [r2]
   3568c:	ldr	r3, [sp, #104]	; 0x68
   35690:	str	r3, [sl, #24]
   35694:	ldr	sl, [sl]
   35698:	cmp	sl, #0
   3569c:	bne	35648 <__flatcc_fb_build_schema@@Base+0x640>
   356a0:	ldr	r3, [fp, #400]	; 0x190
   356a4:	cmp	r3, #0
   356a8:	beq	36a90 <__flatcc_fb_build_schema@@Base+0x1a88>
   356ac:	ldr	r5, [fp, #408]	; 0x198
   356b0:	mov	r7, r3
   356b4:	mov	r2, #0
   356b8:	b	356c4 <__flatcc_fb_build_schema@@Base+0x6bc>
   356bc:	mov	r2, r1
   356c0:	mov	r7, r6
   356c4:	ldr	r6, [r7]
   356c8:	add	r1, r2, #1
   356cc:	cmp	r6, #0
   356d0:	bne	356bc <__flatcc_fb_build_schema@@Base+0x6b4>
   356d4:	adds	r0, r5, #0
   356d8:	movne	r0, #1
   356dc:	cmp	r1, #1
   356e0:	movne	r0, #0
   356e4:	cmp	r0, #0
   356e8:	bne	36250 <__flatcc_fb_build_schema@@Base+0x1248>
   356ec:	cmp	r1, #1
   356f0:	moveq	r6, r0
   356f4:	movne	r6, r3
   356f8:	cmp	r9, #0
   356fc:	beq	35748 <__flatcc_fb_build_schema@@Base+0x740>
   35700:	ldr	r0, [fp, #412]	; 0x19c
   35704:	cmp	r0, #0
   35708:	beq	35748 <__flatcc_fb_build_schema@@Base+0x740>
   3570c:	rsb	r2, r2, #0
   35710:	mov	r1, r6
   35714:	bl	2c404 <fb_scope_table_find@@Base>
   35718:	cmp	r0, #0
   3571c:	beq	35744 <__flatcc_fb_build_schema@@Base+0x73c>
   35720:	ldr	r3, [r7, #4]
   35724:	add	r0, r0, #4
   35728:	ldm	r3, {r1, r2}
   3572c:	bl	2b4b0 <fb_symbol_table_find@@Base>
   35730:	subs	r4, r0, #0
   35734:	beq	35744 <__flatcc_fb_build_schema@@Base+0x73c>
   35738:	ldrh	r3, [r4, #8]
   3573c:	cmp	r3, #4
   35740:	bls	36af0 <__flatcc_fb_build_schema@@Base+0x1ae8>
   35744:	ldr	r3, [fp, #400]	; 0x190
   35748:	mov	r2, #0
   3574c:	str	r2, [fp, #404]	; 0x194
   35750:	ldr	r2, [pc, #2300]	; 36054 <__flatcc_fb_build_schema@@Base+0x104c>
   35754:	mov	r1, r3
   35758:	add	r2, pc, r2
   3575c:	mov	r3, #0
   35760:	mov	r0, fp
   35764:	bl	2eabc <error_ref_sym@@Base>
   35768:	mov	r3, #0
   3576c:	str	r3, [fp, #400]	; 0x190
   35770:	ldr	r0, [fp, #108]	; 0x6c
   35774:	clz	r3, r0
   35778:	lsr	r3, r3, #5
   3577c:	str	r3, [fp, #120]	; 0x78
   35780:	add	sp, sp, #156	; 0x9c
   35784:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35788:	ldrh	r3, [sl, #48]	; 0x30
   3578c:	cmp	r3, #0
   35790:	str	r3, [sp, #20]
   35794:	bne	36b14 <__flatcc_fb_build_schema@@Base+0x1b0c>
   35798:	add	r3, sp, #104	; 0x68
   3579c:	mov	r0, r3
   357a0:	mov	r2, #48	; 0x30
   357a4:	ldr	r1, [sp, #20]
   357a8:	str	r3, [sp, #32]
   357ac:	ldr	r4, [sl, #28]
   357b0:	bl	13f94 <memset@plt>
   357b4:	cmp	r4, #0
   357b8:	ldrheq	r3, [sp, #20]
   357bc:	strheq	r3, [sl, #92]	; 0x5c
   357c0:	beq	35944 <__flatcc_fb_build_schema@@Base+0x93c>
   357c4:	ldr	r3, [pc, #2188]	; 36058 <__flatcc_fb_build_schema@@Base+0x1050>
   357c8:	ldr	r8, [pc, #2188]	; 3605c <__flatcc_fb_build_schema@@Base+0x1054>
   357cc:	add	r3, pc, r3
   357d0:	str	r3, [sp, #8]
   357d4:	ldr	r3, [pc, #2180]	; 36060 <__flatcc_fb_build_schema@@Base+0x1058>
   357d8:	ldr	r7, [pc, #2180]	; 36064 <__flatcc_fb_build_schema@@Base+0x105c>
   357dc:	add	r3, pc, r3
   357e0:	str	r3, [sp, #16]
   357e4:	ldr	r3, [pc, #2172]	; 36068 <__flatcc_fb_build_schema@@Base+0x1060>
   357e8:	add	r8, pc, r8
   357ec:	add	r3, pc, r3
   357f0:	str	r3, [sp, #28]
   357f4:	ldr	r3, [pc, #2160]	; 3606c <__flatcc_fb_build_schema@@Base+0x1064>
   357f8:	str	r8, [sp, #60]	; 0x3c
   357fc:	add	r3, pc, r3
   35800:	add	r7, pc, r7
   35804:	str	r3, [sp, #36]	; 0x24
   35808:	ldr	r6, [sp, #20]
   3580c:	mov	r5, #100	; 0x64
   35810:	ldr	r8, [sp, #32]
   35814:	b	35878 <__flatcc_fb_build_schema@@Base+0x870>
   35818:	mov	r2, #1
   3581c:	ldr	r0, [r8, r3, lsl #2]
   35820:	orr	r6, r6, r2, lsl r3
   35824:	cmp	r0, #0
   35828:	uxth	r6, r6
   3582c:	lsl	r2, r3, #2
   35830:	beq	35df0 <__flatcc_fb_build_schema@@Base+0xde8>
   35834:	ldr	r2, [pc, #2100]	; 36070 <__flatcc_fb_build_schema@@Base+0x1068>
   35838:	mov	r3, #0
   3583c:	ldr	r1, [r4, #4]
   35840:	add	r2, pc, r2
   35844:	str	r3, [sp, #4]
   35848:	str	r3, [sp]
   3584c:	mov	r0, fp
   35850:	bl	2d4ec <__flatcc_error_report@@Base>
   35854:	subs	r5, r5, #1
   35858:	ldr	r4, [r4]
   3585c:	movne	r2, #1
   35860:	moveq	r2, #0
   35864:	cmp	r4, #0
   35868:	moveq	r2, #0
   3586c:	andne	r2, r2, #1
   35870:	cmp	r2, #0
   35874:	beq	358d4 <__flatcc_fb_build_schema@@Base+0x8cc>
   35878:	ldr	r3, [r4, #4]
   3587c:	ldr	r0, [fp, #412]	; 0x19c
   35880:	ldm	r3, {r1, r2}
   35884:	add	r0, r0, #16
   35888:	bl	3d314 <fb_name_table_find@@Base>
   3588c:	cmp	r0, #0
   35890:	beq	35e68 <__flatcc_fb_build_schema@@Base+0xe60>
   35894:	ldr	r3, [r0, #24]
   35898:	cmp	r3, #0
   3589c:	beq	35854 <__flatcc_fb_build_schema@@Base+0x84c>
   358a0:	mov	r2, #16
   358a4:	asr	r2, r2, r3
   358a8:	ands	r2, r2, #1
   358ac:	bne	35818 <__flatcc_fb_build_schema@@Base+0x810>
   358b0:	ldr	r1, [r4, #4]
   358b4:	mov	r3, r2
   358b8:	str	r2, [sp, #4]
   358bc:	str	r2, [sp]
   358c0:	ldr	r2, [pc, #1964]	; 36074 <__flatcc_fb_build_schema@@Base+0x106c>
   358c4:	mov	r0, fp
   358c8:	add	r2, pc, r2
   358cc:	bl	2d4ec <__flatcc_error_report@@Base>
   358d0:	b	35854 <__flatcc_fb_build_schema@@Base+0x84c>
   358d4:	cmp	r4, #0
   358d8:	beq	358fc <__flatcc_fb_build_schema@@Base+0x8f4>
   358dc:	ldr	r1, [r4, #4]
   358e0:	mov	r3, r2
   358e4:	str	r2, [sp, #4]
   358e8:	str	r2, [sp]
   358ec:	ldr	r2, [pc, #1924]	; 36078 <__flatcc_fb_build_schema@@Base+0x1070>
   358f0:	mov	r0, fp
   358f4:	add	r2, pc, r2
   358f8:	bl	2d4ec <__flatcc_error_report@@Base>
   358fc:	ldr	r3, [sp, #120]	; 0x78
   35900:	strh	r6, [sl, #92]	; 0x5c
   35904:	cmp	r3, #0
   35908:	beq	35944 <__flatcc_fb_build_schema@@Base+0x93c>
   3590c:	ldrd	r0, [r3, #8]
   35910:	subs	r2, r0, #1
   35914:	sbc	r3, r1, #0
   35918:	cmp	r3, #0
   3591c:	cmpeq	r2, #255	; 0xff
   35920:	bls	35f6c <__flatcc_fb_build_schema@@Base+0xf64>
   35924:	ldr	r2, [pc, #1872]	; 3607c <__flatcc_fb_build_schema@@Base+0x1074>
   35928:	mov	r3, #0
   3592c:	ldr	r1, [sl, #4]
   35930:	add	r2, pc, r2
   35934:	str	r3, [sp, #4]
   35938:	str	r3, [sp]
   3593c:	mov	r0, fp
   35940:	bl	2d4ec <__flatcc_error_report@@Base>
   35944:	ldr	r6, [sl, #20]
   35948:	cmp	r6, #0
   3594c:	beq	35378 <__flatcc_fb_build_schema@@Base+0x370>
   35950:	add	r3, sl, #56	; 0x38
   35954:	str	r3, [sp, #8]
   35958:	mov	r3, #0
   3595c:	str	sl, [sp, #16]
   35960:	str	r3, [sp, #28]
   35964:	ldr	sl, [sp, #32]
   35968:	b	3599c <__flatcc_fb_build_schema@@Base+0x994>
   3596c:	mov	r2, #0
   35970:	ldr	r3, [r0, #4]
   35974:	ldr	r1, [r6, #4]
   35978:	str	r2, [sp, #4]
   3597c:	str	r2, [sp]
   35980:	ldr	r2, [pc, #1784]	; 36080 <__flatcc_fb_build_schema@@Base+0x1078>
   35984:	mov	r0, fp
   35988:	add	r2, pc, r2
   3598c:	bl	2d4ec <__flatcc_error_report@@Base>
   35990:	ldr	r6, [r6]
   35994:	cmp	r6, #0
   35998:	beq	35d2c <__flatcc_fb_build_schema@@Base+0xd24>
   3599c:	mov	r2, #1
   359a0:	mov	r1, r6
   359a4:	ldr	r0, [sp, #8]
   359a8:	bl	2b488 <fb_symbol_table_insert_item@@Base>
   359ac:	cmp	r0, #0
   359b0:	bne	3596c <__flatcc_fb_build_schema@@Base+0x964>
   359b4:	ldrh	r3, [r6, #8]
   359b8:	cmp	r3, #5
   359bc:	bne	36b38 <__flatcc_fb_build_schema@@Base+0x1b30>
   359c0:	ldr	r8, [fp, #172]	; 0xac
   359c4:	ldr	r3, [fp, #168]	; 0xa8
   359c8:	cmp	r8, #0
   359cc:	ldr	r4, [r6, #64]	; 0x40
   359d0:	movne	r8, #128	; 0x80
   359d4:	moveq	r8, #0
   359d8:	mov	r2, #48	; 0x30
   359dc:	cmp	r3, #0
   359e0:	mov	r1, #0
   359e4:	mov	r0, sl
   359e8:	orrne	r8, r8, #4
   359ec:	bl	13f94 <memset@plt>
   359f0:	cmp	r4, #0
   359f4:	beq	36964 <__flatcc_fb_build_schema@@Base+0x195c>
   359f8:	ldr	r3, [pc, #1668]	; 36084 <__flatcc_fb_build_schema@@Base+0x107c>
   359fc:	ldr	r7, [sp, #20]
   35a00:	add	r3, pc, r3
   35a04:	str	r3, [sp, #32]
   35a08:	ldr	r3, [pc, #1656]	; 36088 <__flatcc_fb_build_schema@@Base+0x1080>
   35a0c:	mov	r5, #100	; 0x64
   35a10:	add	r3, pc, r3
   35a14:	str	r3, [sp, #36]	; 0x24
   35a18:	b	35a7c <__flatcc_fb_build_schema@@Base+0xa74>
   35a1c:	mov	r2, #1
   35a20:	ldr	r0, [sl, r3, lsl #2]
   35a24:	orr	r7, r7, r2, lsl r3
   35a28:	cmp	r0, #0
   35a2c:	uxth	r7, r7
   35a30:	lsl	r2, r3, #2
   35a34:	beq	35ad4 <__flatcc_fb_build_schema@@Base+0xacc>
   35a38:	ldr	r2, [pc, #1612]	; 3608c <__flatcc_fb_build_schema@@Base+0x1084>
   35a3c:	mov	r3, #0
   35a40:	ldr	r1, [r4, #4]
   35a44:	add	r2, pc, r2
   35a48:	str	r3, [sp, #4]
   35a4c:	str	r3, [sp]
   35a50:	mov	r0, fp
   35a54:	bl	2d4ec <__flatcc_error_report@@Base>
   35a58:	subs	r5, r5, #1
   35a5c:	ldr	r4, [r4]
   35a60:	movne	r2, #1
   35a64:	moveq	r2, #0
   35a68:	cmp	r4, #0
   35a6c:	moveq	r2, #0
   35a70:	andne	r2, r2, #1
   35a74:	cmp	r2, #0
   35a78:	beq	35b18 <__flatcc_fb_build_schema@@Base+0xb10>
   35a7c:	ldr	r3, [r4, #4]
   35a80:	ldr	r0, [fp, #412]	; 0x19c
   35a84:	ldm	r3, {r1, r2}
   35a88:	add	r0, r0, #16
   35a8c:	bl	3d314 <fb_name_table_find@@Base>
   35a90:	cmp	r0, #0
   35a94:	beq	35c70 <__flatcc_fb_build_schema@@Base+0xc68>
   35a98:	ldr	r3, [r0, #24]
   35a9c:	cmp	r3, #0
   35aa0:	beq	35a58 <__flatcc_fb_build_schema@@Base+0xa50>
   35aa4:	asr	r2, r8, r3
   35aa8:	ands	r2, r2, #1
   35aac:	bne	35a1c <__flatcc_fb_build_schema@@Base+0xa14>
   35ab0:	ldr	r1, [r4, #4]
   35ab4:	mov	r3, r2
   35ab8:	str	r2, [sp, #4]
   35abc:	str	r2, [sp]
   35ac0:	ldr	r2, [pc, #1480]	; 36090 <__flatcc_fb_build_schema@@Base+0x1088>
   35ac4:	mov	r0, fp
   35ac8:	add	r2, pc, r2
   35acc:	bl	2d4ec <__flatcc_error_report@@Base>
   35ad0:	b	35a58 <__flatcc_fb_build_schema@@Base+0xa50>
   35ad4:	ldr	r1, [sp, #24]
   35ad8:	str	r4, [sl, r3, lsl #2]
   35adc:	add	r2, r1, r2
   35ae0:	ldr	r2, [r2, #204]	; 0xcc
   35ae4:	cmp	r2, #0
   35ae8:	bne	35d80 <__flatcc_fb_build_schema@@Base+0xd78>
   35aec:	ldrh	r3, [r4, #16]
   35af0:	cmp	r3, #0
   35af4:	beq	35a58 <__flatcc_fb_build_schema@@Base+0xa50>
   35af8:	ldr	r1, [r4, #4]
   35afc:	mov	r3, r2
   35b00:	str	r2, [sp, #4]
   35b04:	str	r2, [sp]
   35b08:	mov	r0, fp
   35b0c:	ldr	r2, [sp, #36]	; 0x24
   35b10:	bl	2d4ec <__flatcc_error_report@@Base>
   35b14:	b	35a58 <__flatcc_fb_build_schema@@Base+0xa50>
   35b18:	cmp	r4, #0
   35b1c:	beq	35b40 <__flatcc_fb_build_schema@@Base+0xb38>
   35b20:	ldr	r1, [r4, #4]
   35b24:	mov	r3, r2
   35b28:	str	r2, [sp, #4]
   35b2c:	str	r2, [sp]
   35b30:	ldr	r2, [pc, #1372]	; 36094 <__flatcc_fb_build_schema@@Base+0x108c>
   35b34:	mov	r0, fp
   35b38:	add	r2, pc, r2
   35b3c:	bl	2d4ec <__flatcc_error_report@@Base>
   35b40:	ldrh	r3, [r6, #24]
   35b44:	strh	r7, [r6, #72]	; 0x48
   35b48:	cmp	r3, #8
   35b4c:	beq	35e8c <__flatcc_fb_build_schema@@Base+0xe84>
   35b50:	cmp	r3, #12
   35b54:	bne	35e40 <__flatcc_fb_build_schema@@Base+0xe38>
   35b58:	ldr	r1, [r6, #16]
   35b5c:	ldr	r3, [sp, #16]
   35b60:	cmp	r1, #0
   35b64:	ldr	r4, [r3, #12]
   35b68:	beq	35c54 <__flatcc_fb_build_schema@@Base+0xc4c>
   35b6c:	mov	r5, r1
   35b70:	mov	r2, #0
   35b74:	b	35b80 <__flatcc_fb_build_schema@@Base+0xb78>
   35b78:	mov	r2, r3
   35b7c:	mov	r5, r7
   35b80:	ldr	r7, [r5]
   35b84:	add	r3, r2, #1
   35b88:	cmp	r7, #0
   35b8c:	bne	35b78 <__flatcc_fb_build_schema@@Base+0xb70>
   35b90:	adds	r0, r4, #0
   35b94:	movne	r0, #1
   35b98:	cmp	r3, #1
   35b9c:	movne	r0, #0
   35ba0:	cmp	r0, #0
   35ba4:	beq	35efc <__flatcc_fb_build_schema@@Base+0xef4>
   35ba8:	ldr	r3, [r5, #4]
   35bac:	add	r0, r4, #4
   35bb0:	ldm	r3, {r1, r2}
   35bb4:	bl	2b4b0 <fb_symbol_table_find@@Base>
   35bb8:	subs	r8, r0, #0
   35bbc:	beq	35bcc <__flatcc_fb_build_schema@@Base+0xbc4>
   35bc0:	ldrh	r3, [r8, #8]
   35bc4:	cmp	r3, #4
   35bc8:	bls	35c94 <__flatcc_fb_build_schema@@Base+0xc8c>
   35bcc:	ldr	r3, [r4]
   35bd0:	cmp	r3, #0
   35bd4:	beq	35c50 <__flatcc_fb_build_schema@@Base+0xc48>
   35bd8:	mov	r8, #0
   35bdc:	ldr	r3, [r3]
   35be0:	add	r8, r8, #1
   35be4:	cmp	r3, #0
   35be8:	bne	35bdc <__flatcc_fb_build_schema@@Base+0xbd4>
   35bec:	rsb	r8, r8, #1
   35bf0:	b	35c20 <__flatcc_fb_build_schema@@Base+0xc18>
   35bf4:	cmp	r9, #0
   35bf8:	beq	35c1c <__flatcc_fb_build_schema@@Base+0xc14>
   35bfc:	ldr	r0, [fp, #412]	; 0x19c
   35c00:	cmp	r0, #0
   35c04:	beq	35c1c <__flatcc_fb_build_schema@@Base+0xc14>
   35c08:	mov	r2, r8
   35c0c:	ldr	r1, [r4]
   35c10:	bl	2c404 <fb_scope_table_find@@Base>
   35c14:	cmp	r0, #0
   35c18:	bne	35dbc <__flatcc_fb_build_schema@@Base+0xdb4>
   35c1c:	add	r8, r8, #1
   35c20:	cmp	r8, #0
   35c24:	bne	35bf4 <__flatcc_fb_build_schema@@Base+0xbec>
   35c28:	cmp	r9, #0
   35c2c:	beq	35c50 <__flatcc_fb_build_schema@@Base+0xc48>
   35c30:	ldr	r0, [fp, #412]	; 0x19c
   35c34:	cmp	r0, #0
   35c38:	beq	35c50 <__flatcc_fb_build_schema@@Base+0xc48>
   35c3c:	mov	r1, r8
   35c40:	mov	r2, r7
   35c44:	bl	2c404 <fb_scope_table_find@@Base>
   35c48:	subs	r4, r0, #0
   35c4c:	bne	35ba8 <__flatcc_fb_build_schema@@Base+0xba0>
   35c50:	ldr	r1, [r6, #16]
   35c54:	mov	r3, r6
   35c58:	ldr	r2, [sp, #44]	; 0x2c
   35c5c:	mov	r0, fp
   35c60:	bl	2eabc <error_ref_sym@@Base>
   35c64:	mov	r3, #1
   35c68:	strh	r3, [r6, #24]
   35c6c:	b	35990 <__flatcc_fb_build_schema@@Base+0x988>
   35c70:	ldr	r2, [pc, #1056]	; 36098 <__flatcc_fb_build_schema@@Base+0x1090>
   35c74:	ldr	r1, [r4, #4]
   35c78:	mov	r3, r0
   35c7c:	str	r0, [sp, #4]
   35c80:	str	r0, [sp]
   35c84:	add	r2, pc, r2
   35c88:	mov	r0, fp
   35c8c:	bl	2d4ec <__flatcc_error_report@@Base>
   35c90:	b	35a58 <__flatcc_fb_build_schema@@Base+0xa50>
   35c94:	ldr	r1, [r8, #16]
   35c98:	ldr	r0, [sp, #12]
   35c9c:	bl	2ade0 <ptr_set_find_item@@Base>
   35ca0:	cmp	r0, #0
   35ca4:	beq	35bcc <__flatcc_fb_build_schema@@Base+0xbc4>
   35ca8:	str	r8, [r6, #16]
   35cac:	ldrh	r4, [r8, #8]
   35cb0:	mov	r3, #14
   35cb4:	strh	r3, [r6, #24]
   35cb8:	cmp	r4, #1
   35cbc:	beq	36978 <__flatcc_fb_build_schema@@Base+0x1970>
   35cc0:	ldr	r2, [fp, #152]	; 0x98
   35cc4:	cmp	r2, #0
   35cc8:	beq	36c94 <__flatcc_fb_build_schema@@Base+0x1c8c>
   35ccc:	cmp	r4, #3
   35cd0:	bne	36cc4 <__flatcc_fb_build_schema@@Base+0x1cbc>
   35cd4:	ldrh	r3, [r6, #72]	; 0x48
   35cd8:	tst	r3, #128	; 0x80
   35cdc:	beq	35cf8 <__flatcc_fb_build_schema@@Base+0xcf0>
   35ce0:	ldr	r2, [fp, #148]	; 0x94
   35ce4:	cmp	r2, #0
   35ce8:	beq	36c14 <__flatcc_fb_build_schema@@Base+0x1c0c>
   35cec:	ldr	r3, [sp, #28]
   35cf0:	add	r3, r3, #1
   35cf4:	str	r3, [sp, #28]
   35cf8:	ldrh	r3, [r6, #56]	; 0x38
   35cfc:	cmp	r3, #0
   35d00:	beq	35990 <__flatcc_fb_build_schema@@Base+0x988>
   35d04:	mov	r3, #0
   35d08:	ldr	r1, [r6, #4]
   35d0c:	ldr	r2, [sp, #40]	; 0x28
   35d10:	str	r3, [sp, #4]
   35d14:	str	r3, [sp]
   35d18:	mov	r0, fp
   35d1c:	bl	2d4ec <__flatcc_error_report@@Base>
   35d20:	ldr	r6, [r6]
   35d24:	cmp	r6, #0
   35d28:	bne	3599c <__flatcc_fb_build_schema@@Base+0x994>
   35d2c:	ldr	r2, [sp, #28]
   35d30:	ldr	sl, [sp, #16]
   35d34:	cmp	r2, #0
   35d38:	beq	35378 <__flatcc_fb_build_schema@@Base+0x370>
   35d3c:	ldrh	r3, [sl, #10]
   35d40:	cmp	r2, #1
   35d44:	orr	r3, r3, #8
   35d48:	strh	r3, [sl, #10]
   35d4c:	beq	35378 <__flatcc_fb_build_schema@@Base+0x370>
   35d50:	ldr	r3, [fp, #156]	; 0x9c
   35d54:	cmp	r3, #0
   35d58:	bne	35378 <__flatcc_fb_build_schema@@Base+0x370>
   35d5c:	ldr	r2, [pc, #824]	; 3609c <__flatcc_fb_build_schema@@Base+0x1094>
   35d60:	ldr	r1, [sl, #4]
   35d64:	mov	r3, r6
   35d68:	str	r6, [sp, #4]
   35d6c:	str	r6, [sp]
   35d70:	add	r2, pc, r2
   35d74:	mov	r0, fp
   35d78:	bl	2d4ec <__flatcc_error_report@@Base>
   35d7c:	b	35370 <__flatcc_fb_build_schema@@Base+0x368>
   35d80:	cmp	r2, #2
   35d84:	beq	35ea4 <__flatcc_fb_build_schema@@Base+0xe9c>
   35d88:	cmp	r2, #5
   35d8c:	bne	369ec <__flatcc_fb_build_schema@@Base+0x19e4>
   35d90:	ldrh	r3, [r4, #16]
   35d94:	cmp	r3, #5
   35d98:	beq	35a58 <__flatcc_fb_build_schema@@Base+0xa50>
   35d9c:	ldr	r1, [r4, #4]
   35da0:	mov	r3, r0
   35da4:	str	r0, [sp, #4]
   35da8:	str	r0, [sp]
   35dac:	ldr	r2, [sp, #56]	; 0x38
   35db0:	mov	r0, fp
   35db4:	bl	2d4ec <__flatcc_error_report@@Base>
   35db8:	b	35a58 <__flatcc_fb_build_schema@@Base+0xa50>
   35dbc:	mov	r4, r0
   35dc0:	b	35ba8 <__flatcc_fb_build_schema@@Base+0xba0>
   35dc4:	ldr	r2, [pc, #724]	; 360a0 <__flatcc_fb_build_schema@@Base+0x1098>
   35dc8:	mov	r3, #0
   35dcc:	ldr	r1, [sl, #4]
   35dd0:	mov	r0, fp
   35dd4:	str	r3, [sp, #4]
   35dd8:	str	r3, [sp]
   35ddc:	add	r2, pc, r2
   35de0:	bl	2d4ec <__flatcc_error_report@@Base>
   35de4:	mvn	r0, #0
   35de8:	add	sp, sp, #156	; 0x9c
   35dec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35df0:	add	r2, r7, r2
   35df4:	str	r4, [r8, r3, lsl #2]
   35df8:	ldr	r2, [r2, #204]	; 0xcc
   35dfc:	cmp	r2, #0
   35e00:	beq	35ed0 <__flatcc_fb_build_schema@@Base+0xec8>
   35e04:	cmp	r2, #2
   35e08:	beq	36938 <__flatcc_fb_build_schema@@Base+0x1930>
   35e0c:	cmp	r2, #5
   35e10:	bne	361e0 <__flatcc_fb_build_schema@@Base+0x11d8>
   35e14:	ldrh	r3, [r4, #16]
   35e18:	cmp	r3, #5
   35e1c:	beq	35854 <__flatcc_fb_build_schema@@Base+0x84c>
   35e20:	ldr	r1, [r4, #4]
   35e24:	mov	r3, r0
   35e28:	str	r0, [sp, #4]
   35e2c:	str	r0, [sp]
   35e30:	ldr	r2, [sp, #16]
   35e34:	mov	r0, fp
   35e38:	bl	2d4ec <__flatcc_error_report@@Base>
   35e3c:	b	35854 <__flatcc_fb_build_schema@@Base+0x84c>
   35e40:	ldr	r2, [pc, #604]	; 360a4 <__flatcc_fb_build_schema@@Base+0x109c>
   35e44:	mov	r3, #0
   35e48:	ldr	r1, [r6, #4]
   35e4c:	add	r2, pc, r2
   35e50:	str	r3, [sp, #4]
   35e54:	str	r3, [sp]
   35e58:	mov	r0, fp
   35e5c:	ldr	sl, [sp, #16]
   35e60:	bl	2d4ec <__flatcc_error_report@@Base>
   35e64:	b	35370 <__flatcc_fb_build_schema@@Base+0x368>
   35e68:	ldr	r2, [pc, #568]	; 360a8 <__flatcc_fb_build_schema@@Base+0x10a0>
   35e6c:	ldr	r1, [r4, #4]
   35e70:	mov	r3, r0
   35e74:	str	r0, [sp, #4]
   35e78:	str	r0, [sp]
   35e7c:	add	r2, pc, r2
   35e80:	mov	r0, fp
   35e84:	bl	2d4ec <__flatcc_error_report@@Base>
   35e88:	b	35854 <__flatcc_fb_build_schema@@Base+0x84c>
   35e8c:	tst	r7, #128	; 0x80
   35e90:	bne	35cec <__flatcc_fb_build_schema@@Base+0xce4>
   35e94:	ldrh	r3, [r6, #56]	; 0x38
   35e98:	cmp	r3, #0
   35e9c:	beq	35990 <__flatcc_fb_build_schema@@Base+0x988>
   35ea0:	b	35d04 <__flatcc_fb_build_schema@@Base+0xcfc>
   35ea4:	ldrh	r3, [r4, #16]
   35ea8:	cmp	r3, #2
   35eac:	beq	35a58 <__flatcc_fb_build_schema@@Base+0xa50>
   35eb0:	ldr	r1, [r4, #4]
   35eb4:	mov	r3, r0
   35eb8:	str	r0, [sp, #4]
   35ebc:	str	r0, [sp]
   35ec0:	ldr	r2, [sp, #32]
   35ec4:	mov	r0, fp
   35ec8:	bl	2d4ec <__flatcc_error_report@@Base>
   35ecc:	b	35a58 <__flatcc_fb_build_schema@@Base+0xa50>
   35ed0:	ldrh	r3, [r4, #16]
   35ed4:	cmp	r3, #0
   35ed8:	beq	35854 <__flatcc_fb_build_schema@@Base+0x84c>
   35edc:	ldr	r1, [r4, #4]
   35ee0:	mov	r3, r2
   35ee4:	str	r2, [sp, #4]
   35ee8:	str	r2, [sp]
   35eec:	mov	r0, fp
   35ef0:	ldr	r2, [sp, #36]	; 0x24
   35ef4:	bl	2d4ec <__flatcc_error_report@@Base>
   35ef8:	b	35854 <__flatcc_fb_build_schema@@Base+0x84c>
   35efc:	cmp	r3, #1
   35f00:	moveq	r7, r0
   35f04:	movne	r7, r1
   35f08:	cmp	r9, #0
   35f0c:	beq	35c54 <__flatcc_fb_build_schema@@Base+0xc4c>
   35f10:	ldr	r0, [fp, #412]	; 0x19c
   35f14:	cmp	r0, #0
   35f18:	beq	35c54 <__flatcc_fb_build_schema@@Base+0xc4c>
   35f1c:	rsb	r2, r2, #0
   35f20:	mov	r1, r7
   35f24:	bl	2c404 <fb_scope_table_find@@Base>
   35f28:	cmp	r0, #0
   35f2c:	beq	35c50 <__flatcc_fb_build_schema@@Base+0xc48>
   35f30:	ldr	r3, [r5, #4]
   35f34:	add	r0, r0, #4
   35f38:	ldm	r3, {r1, r2}
   35f3c:	bl	2b4b0 <fb_symbol_table_find@@Base>
   35f40:	subs	r8, r0, #0
   35f44:	beq	35c50 <__flatcc_fb_build_schema@@Base+0xc48>
   35f48:	ldrh	r3, [r8, #8]
   35f4c:	cmp	r3, #4
   35f50:	bhi	35c50 <__flatcc_fb_build_schema@@Base+0xc48>
   35f54:	ldr	r1, [r8, #16]
   35f58:	ldr	r0, [sp, #12]
   35f5c:	bl	2ade0 <ptr_set_find_item@@Base>
   35f60:	cmp	r0, #0
   35f64:	bne	35ca8 <__flatcc_fb_build_schema@@Base+0xca0>
   35f68:	b	35c50 <__flatcc_fb_build_schema@@Base+0xc48>
   35f6c:	cmp	r1, #0
   35f70:	cmpeq	r0, #1
   35f74:	beq	35fa4 <__flatcc_fb_build_schema@@Base+0xf9c>
   35f78:	mov	r2, #2
   35f7c:	mov	r3, #0
   35f80:	b	35f98 <__flatcc_fb_build_schema@@Base+0xf90>
   35f84:	adds	r2, r2, r2
   35f88:	adc	r3, r3, r3
   35f8c:	cmp	r1, r3
   35f90:	cmpeq	r0, r2
   35f94:	bcc	35924 <__flatcc_fb_build_schema@@Base+0x91c>
   35f98:	cmp	r1, r3
   35f9c:	cmpeq	r0, r2
   35fa0:	bne	35f84 <__flatcc_fb_build_schema@@Base+0xf7c>
   35fa4:	strh	r0, [sl, #104]	; 0x68
   35fa8:	b	35944 <__flatcc_fb_build_schema@@Base+0x93c>
   35fac:	ldr	r3, [r5, #4]
   35fb0:	ldm	r3, {r1, r2}
   35fb4:	cmp	r2, #0
   35fb8:	sub	r2, r2, #1
   35fbc:	beq	36b08 <__flatcc_fb_build_schema@@Base+0x1b00>
   35fc0:	ldr	r3, [pc, #64]	; 36008 <__flatcc_fb_build_schema@@Base+0x1000>
   35fc4:	b	350f0 <__flatcc_fb_build_schema@@Base+0xe8>
   35fc8:	ldr	r3, [r5, #4]
   35fcc:	ldm	r3, {r1, r2}
   35fd0:	cmp	r2, #0
   35fd4:	sub	r2, r2, #1
   35fd8:	bne	35fc0 <__flatcc_fb_build_schema@@Base+0xfb8>
   35fdc:	str	r6, [r5, #88]	; 0x58
   35fe0:	str	r9, [r5, #16]
   35fe4:	b	35124 <__flatcc_fb_build_schema@@Base+0x11c>
   35fe8:	cmp	r3, #0
   35fec:	bne	35114 <__flatcc_fb_build_schema@@Base+0x10c>
   35ff0:	str	r6, [r5, #88]	; 0x58
   35ff4:	str	r9, [r5, #16]
   35ff8:	b	35124 <__flatcc_fb_build_schema@@Base+0x11c>
   35ffc:	andeq	r4, r3, r8, asr #31
   36000:	andeq	r3, r2, r0, ror #8
   36004:			; <UNDEFINED> instruction: 0x01000193
   36008:	tsthi	ip, r5, asr #27
   3600c:	andeq	r3, r2, r0, ror #6
   36010:	andeq	r4, r3, ip, lsl #26
   36014:	muleq	r2, r8, r3
   36018:	andeq	r3, r2, ip, ror #4
   3601c:	andeq	r1, r2, r0, ror pc
   36020:	andeq	r2, r2, ip, lsl #12
   36024:	ldrdeq	r2, [r2], -ip
   36028:	andeq	r2, r2, r4, lsr #11
   3602c:	ldrdeq	r3, [r2], -r0
   36030:	andeq	r3, r2, r0, lsr r4
   36034:	andeq	r1, r2, ip, ror lr
   36038:	andeq	r2, r2, r8, lsl r5
   3603c:	andeq	r2, r2, r8, ror #9
   36040:			; <UNDEFINED> instruction: 0x000224b0
   36044:	andeq	r3, r2, r4, ror r2
   36048:	andeq	r3, r2, r8, asr r2
   3604c:	andeq	r3, r2, r4, asr r2
   36050:	andeq	r8, r0, r0, lsl #13
   36054:	andeq	r3, r2, ip, asr #2
   36058:	andeq	r2, r2, r8, lsr #2
   3605c:	andeq	r2, r2, r0, lsr r1
   36060:	andeq	r2, r2, ip, ror #1
   36064:	andeq	r1, r2, r0, ror sl
   36068:	strheq	r2, [r2], -r8
   3606c:	andeq	r2, r2, r0, lsl #1
   36070:	andeq	r2, r2, r4, lsl r0
   36074:	andeq	r1, r2, ip, asr pc
   36078:	andeq	r2, r2, r0, asr r0
   3607c:	andeq	r2, r2, ip, asr #31
   36080:	muleq	r2, r0, fp
   36084:	andeq	r1, r2, r4, lsr #29
   36088:	andeq	r1, r2, ip, ror #28
   3608c:	andeq	r1, r2, r0, lsl lr
   36090:	andeq	r1, r2, ip, asr sp
   36094:	andeq	r1, r2, ip, lsl #28
   36098:	andeq	r1, r2, r0, lsl #23
   3609c:	andeq	r2, r2, ip, lsr #5
   360a0:	ldrdeq	r2, [r2], -r8
   360a4:	strdeq	r2, [r2], -r8
   360a8:	andeq	r1, r2, r8, lsl #19
   360ac:	andeq	r2, r2, r8, lsr #9
   360b0:	andeq	r2, r2, r8, lsl #6
   360b4:	andeq	r2, r2, r0, asr #3
   360b8:	andeq	r1, r2, r8, ror #2
   360bc:	andeq	r1, r2, r0, lsr r1
   360c0:	ldrdeq	r1, [r2], -r4
   360c4:	andeq	r1, r2, ip, lsl r0
   360c8:	andeq	r1, r2, ip, asr #1
   360cc:	strdeq	r1, [r2], -r8
   360d0:	muleq	r2, r4, r0
   360d4:	strdeq	r0, [r2], -r4
   360d8:	andeq	r1, r2, r4, asr #24
   360dc:	andeq	r1, r2, r8, lsr #29
   360e0:	andeq	r1, r2, r0, ror #27
   360e4:	andeq	r1, r2, ip, asr #19
   360e8:	strdeq	r1, [r2], -r0
   360ec:	andeq	r1, r2, r8, lsr #19
   360f0:	andeq	r0, r2, r0, lsr #12
   360f4:	andeq	r0, r2, r8, ror r7
   360f8:	andeq	r1, r2, ip, lsl r8
   360fc:	andeq	r0, r0, r6, lsl r6
   36100:	muleq	r0, ip, r0
   36104:	andeq	r8, r0, r0, ror #13
   36108:	andeq	r1, r2, ip, asr r9
   3610c:			; <UNDEFINED> instruction: 0x000218b0
   36110:	andeq	r0, r2, r4, ror #10
   36114:			; <UNDEFINED> instruction: 0x000206bc
   36118:	andeq	r1, r2, r8, ror #22
   3611c:	strdeq	r0, [r0], -r1
   36120:	andeq	r0, r2, ip, lsl #10
   36124:	andeq	r0, r2, r4, ror #12
   36128:	andeq	r0, r2, r0, lsl #21
   3612c:	andeq	r0, r0, r9, ror #8
   36130:	mov	r4, r0
   36134:	ldr	r3, [r6, #4]
   36138:	add	r0, r4, #4
   3613c:	ldm	r3, {r1, r2}
   36140:	bl	2b4b0 <fb_symbol_table_find@@Base>
   36144:	subs	sl, r0, #0
   36148:	beq	36158 <__flatcc_fb_build_schema@@Base+0x1150>
   3614c:	ldrh	r3, [sl, #8]
   36150:	cmp	r3, #4
   36154:	bls	362fc <__flatcc_fb_build_schema@@Base+0x12f4>
   36158:	ldr	r3, [r4]
   3615c:	cmp	r3, #0
   36160:	beq	355d4 <__flatcc_fb_build_schema@@Base+0x5cc>
   36164:	mov	sl, #0
   36168:	ldr	r3, [r3]
   3616c:	add	sl, sl, #1
   36170:	cmp	r3, #0
   36174:	bne	36168 <__flatcc_fb_build_schema@@Base+0x1160>
   36178:	rsb	sl, sl, #1
   3617c:	b	361ac <__flatcc_fb_build_schema@@Base+0x11a4>
   36180:	cmp	r9, #0
   36184:	beq	361a8 <__flatcc_fb_build_schema@@Base+0x11a0>
   36188:	ldr	r0, [fp, #412]	; 0x19c
   3618c:	cmp	r0, #0
   36190:	beq	361a8 <__flatcc_fb_build_schema@@Base+0x11a0>
   36194:	mov	r2, sl
   36198:	ldr	r1, [r4]
   3619c:	bl	2c404 <fb_scope_table_find@@Base>
   361a0:	cmp	r0, #0
   361a4:	bne	36130 <__flatcc_fb_build_schema@@Base+0x1128>
   361a8:	add	sl, sl, #1
   361ac:	cmp	sl, #0
   361b0:	bne	36180 <__flatcc_fb_build_schema@@Base+0x1178>
   361b4:	cmp	r9, #0
   361b8:	beq	355d4 <__flatcc_fb_build_schema@@Base+0x5cc>
   361bc:	ldr	r0, [fp, #412]	; 0x19c
   361c0:	cmp	r0, #0
   361c4:	beq	355d4 <__flatcc_fb_build_schema@@Base+0x5cc>
   361c8:	mov	r1, sl
   361cc:	mov	r2, r5
   361d0:	bl	2c404 <fb_scope_table_find@@Base>
   361d4:	subs	r4, r0, #0
   361d8:	bne	36134 <__flatcc_fb_build_schema@@Base+0x112c>
   361dc:	b	355d4 <__flatcc_fb_build_schema@@Base+0x5cc>
   361e0:	cmp	r2, #4
   361e4:	bne	36d24 <__flatcc_fb_build_schema@@Base+0x1d1c>
   361e8:	ldrh	r3, [r4, #16]
   361ec:	sub	r3, r3, #4
   361f0:	cmp	r3, #1
   361f4:	bls	35854 <__flatcc_fb_build_schema@@Base+0x84c>
   361f8:	ldr	r1, [r4, #4]
   361fc:	mov	r3, r0
   36200:	str	r0, [sp, #4]
   36204:	str	r0, [sp]
   36208:	ldr	r2, [sp, #8]
   3620c:	mov	r0, fp
   36210:	bl	2d4ec <__flatcc_error_report@@Base>
   36214:	b	35854 <__flatcc_fb_build_schema@@Base+0x84c>
   36218:	ldr	r3, [fp, #396]	; 0x18c
   3621c:	cmp	r3, #0
   36220:	movne	sl, #0
   36224:	beq	36b6c <__flatcc_fb_build_schema@@Base+0x1b64>
   36228:	mov	r1, #0
   3622c:	b	36234 <__flatcc_fb_build_schema@@Base+0x122c>
   36230:	mov	r3, r2
   36234:	ldr	r2, [r3, #120]	; 0x78
   36238:	str	r1, [r3, #120]	; 0x78
   3623c:	cmp	r2, #0
   36240:	mov	r1, r3
   36244:	bne	36230 <__flatcc_fb_build_schema@@Base+0x1228>
   36248:	b	3561c <__flatcc_fb_build_schema@@Base+0x614>
   3624c:	mov	r5, r0
   36250:	ldr	r3, [r7, #4]
   36254:	add	r0, r5, #4
   36258:	ldm	r3, {r1, r2}
   3625c:	bl	2b4b0 <fb_symbol_table_find@@Base>
   36260:	subs	r4, r0, #0
   36264:	beq	36274 <__flatcc_fb_build_schema@@Base+0x126c>
   36268:	ldrh	r3, [r4, #8]
   3626c:	cmp	r3, #4
   36270:	bls	36888 <__flatcc_fb_build_schema@@Base+0x1880>
   36274:	ldr	r3, [r5]
   36278:	cmp	r3, #0
   3627c:	beq	35744 <__flatcc_fb_build_schema@@Base+0x73c>
   36280:	mov	r4, #0
   36284:	ldr	r3, [r3]
   36288:	add	r4, r4, #1
   3628c:	cmp	r3, #0
   36290:	bne	36284 <__flatcc_fb_build_schema@@Base+0x127c>
   36294:	rsb	r4, r4, #1
   36298:	b	362c8 <__flatcc_fb_build_schema@@Base+0x12c0>
   3629c:	cmp	r9, #0
   362a0:	beq	362c4 <__flatcc_fb_build_schema@@Base+0x12bc>
   362a4:	ldr	r0, [fp, #412]	; 0x19c
   362a8:	cmp	r0, #0
   362ac:	beq	362c4 <__flatcc_fb_build_schema@@Base+0x12bc>
   362b0:	mov	r2, r4
   362b4:	ldr	r1, [r5]
   362b8:	bl	2c404 <fb_scope_table_find@@Base>
   362bc:	cmp	r0, #0
   362c0:	bne	3624c <__flatcc_fb_build_schema@@Base+0x1244>
   362c4:	add	r4, r4, #1
   362c8:	cmp	r4, #0
   362cc:	bne	3629c <__flatcc_fb_build_schema@@Base+0x1294>
   362d0:	cmp	r9, #0
   362d4:	beq	35744 <__flatcc_fb_build_schema@@Base+0x73c>
   362d8:	ldr	r0, [fp, #412]	; 0x19c
   362dc:	cmp	r0, #0
   362e0:	beq	35744 <__flatcc_fb_build_schema@@Base+0x73c>
   362e4:	mov	r1, r4
   362e8:	mov	r2, r6
   362ec:	bl	2c404 <fb_scope_table_find@@Base>
   362f0:	subs	r5, r0, #0
   362f4:	bne	36250 <__flatcc_fb_build_schema@@Base+0x1248>
   362f8:	b	35744 <__flatcc_fb_build_schema@@Base+0x73c>
   362fc:	ldr	r1, [sl, #16]
   36300:	ldr	r0, [sp, #12]
   36304:	bl	2ade0 <ptr_set_find_item@@Base>
   36308:	cmp	r0, #0
   3630c:	beq	36158 <__flatcc_fb_build_schema@@Base+0x1150>
   36310:	ldrh	r2, [sl, #8]
   36314:	cmp	r2, #0
   36318:	beq	36384 <__flatcc_fb_build_schema@@Base+0x137c>
   3631c:	mov	r2, #0
   36320:	ldr	r3, [sl, #4]
   36324:	ldr	r1, [r8, #4]
   36328:	str	r2, [sp, #4]
   3632c:	str	r2, [sp]
   36330:	ldr	r2, [pc, #-652]	; 360ac <__flatcc_fb_build_schema@@Base+0x10a4>
   36334:	mov	r0, fp
   36338:	add	r2, pc, r2
   3633c:	bl	2d4ec <__flatcc_error_report@@Base>
   36340:	mov	r3, #1
   36344:	strh	r3, [r8, #24]
   36348:	b	354bc <__flatcc_fb_build_schema@@Base+0x4b4>
   3634c:	ldrh	r3, [sl, #48]	; 0x30
   36350:	cmp	r3, #1
   36354:	beq	35600 <__flatcc_fb_build_schema@@Base+0x5f8>
   36358:	mov	r1, sl
   3635c:	mov	r0, fp
   36360:	bl	32334 <__flatcc_fb_clear_parser@@Base+0x688>
   36364:	cmp	r0, #0
   36368:	beq	35600 <__flatcc_fb_build_schema@@Base+0x5f8>
   3636c:	mov	r3, #1
   36370:	strh	r3, [sl, #48]	; 0x30
   36374:	ldr	sl, [sl]
   36378:	cmp	sl, #0
   3637c:	bne	35420 <__flatcc_fb_build_schema@@Base+0x418>
   36380:	b	3560c <__flatcc_fb_build_schema@@Base+0x604>
   36384:	ldr	r1, [r8, #16]
   36388:	ldr	r3, [sp, #8]
   3638c:	mov	r0, #14
   36390:	cmp	r1, #0
   36394:	str	sl, [r8, #32]
   36398:	strh	r0, [r8, #40]	; 0x28
   3639c:	ldr	r4, [r3, #12]
   363a0:	beq	3643c <__flatcc_fb_build_schema@@Base+0x1434>
   363a4:	mov	r5, r1
   363a8:	b	363b4 <__flatcc_fb_build_schema@@Base+0x13ac>
   363ac:	mov	r2, r3
   363b0:	mov	r5, r6
   363b4:	ldr	r6, [r5]
   363b8:	add	r3, r2, #1
   363bc:	cmp	r6, #0
   363c0:	bne	363ac <__flatcc_fb_build_schema@@Base+0x13a4>
   363c4:	adds	r0, r4, #0
   363c8:	movne	r0, #1
   363cc:	cmp	r3, #1
   363d0:	movne	r0, #0
   363d4:	cmp	r0, #0
   363d8:	movne	sl, r6
   363dc:	bne	3645c <__flatcc_fb_build_schema@@Base+0x1454>
   363e0:	cmp	r3, #1
   363e4:	moveq	r6, r0
   363e8:	movne	r6, r1
   363ec:	cmp	r9, #0
   363f0:	beq	3643c <__flatcc_fb_build_schema@@Base+0x1434>
   363f4:	ldr	r0, [fp, #412]	; 0x19c
   363f8:	cmp	r0, #0
   363fc:	beq	3643c <__flatcc_fb_build_schema@@Base+0x1434>
   36400:	rsb	r2, r2, #0
   36404:	mov	r1, r6
   36408:	bl	2c404 <fb_scope_table_find@@Base>
   3640c:	cmp	r0, #0
   36410:	beq	36438 <__flatcc_fb_build_schema@@Base+0x1430>
   36414:	ldr	r3, [r5, #4]
   36418:	add	r0, r0, #4
   3641c:	ldm	r3, {r1, r2}
   36420:	bl	2b4b0 <fb_symbol_table_find@@Base>
   36424:	subs	r6, r0, #0
   36428:	beq	36438 <__flatcc_fb_build_schema@@Base+0x1430>
   3642c:	ldrh	r2, [r6, #8]
   36430:	cmp	r2, #4
   36434:	bls	36a48 <__flatcc_fb_build_schema@@Base+0x1a40>
   36438:	ldr	r1, [r8, #16]
   3643c:	mov	r3, r8
   36440:	ldr	r2, [sp, #32]
   36444:	mov	r0, fp
   36448:	bl	2eabc <error_ref_sym@@Base>
   3644c:	mov	r3, #1
   36450:	strh	r3, [r8, #24]
   36454:	b	354bc <__flatcc_fb_build_schema@@Base+0x4b4>
   36458:	mov	r4, r0
   3645c:	ldr	r3, [r5, #4]
   36460:	add	r0, r4, #4
   36464:	ldm	r3, {r1, r2}
   36468:	bl	2b4b0 <fb_symbol_table_find@@Base>
   3646c:	subs	r6, r0, #0
   36470:	beq	36480 <__flatcc_fb_build_schema@@Base+0x1478>
   36474:	ldrh	r3, [r6, #8]
   36478:	cmp	r3, #4
   3647c:	bls	36508 <__flatcc_fb_build_schema@@Base+0x1500>
   36480:	ldr	r3, [r4]
   36484:	cmp	r3, #0
   36488:	beq	36438 <__flatcc_fb_build_schema@@Base+0x1430>
   3648c:	mov	r6, #0
   36490:	ldr	r3, [r3]
   36494:	add	r6, r6, #1
   36498:	cmp	r3, #0
   3649c:	bne	36490 <__flatcc_fb_build_schema@@Base+0x1488>
   364a0:	rsb	r6, r6, #1
   364a4:	b	364d4 <__flatcc_fb_build_schema@@Base+0x14cc>
   364a8:	cmp	r9, #0
   364ac:	beq	364d0 <__flatcc_fb_build_schema@@Base+0x14c8>
   364b0:	ldr	r0, [fp, #412]	; 0x19c
   364b4:	cmp	r0, #0
   364b8:	beq	364d0 <__flatcc_fb_build_schema@@Base+0x14c8>
   364bc:	mov	r2, r6
   364c0:	ldr	r1, [r4]
   364c4:	bl	2c404 <fb_scope_table_find@@Base>
   364c8:	cmp	r0, #0
   364cc:	bne	36458 <__flatcc_fb_build_schema@@Base+0x1450>
   364d0:	add	r6, r6, #1
   364d4:	cmp	r6, #0
   364d8:	bne	364a8 <__flatcc_fb_build_schema@@Base+0x14a0>
   364dc:	cmp	r9, #0
   364e0:	beq	36438 <__flatcc_fb_build_schema@@Base+0x1430>
   364e4:	ldr	r0, [fp, #412]	; 0x19c
   364e8:	cmp	r0, #0
   364ec:	beq	36438 <__flatcc_fb_build_schema@@Base+0x1430>
   364f0:	mov	r1, r6
   364f4:	mov	r2, sl
   364f8:	bl	2c404 <fb_scope_table_find@@Base>
   364fc:	subs	r4, r0, #0
   36500:	bne	3645c <__flatcc_fb_build_schema@@Base+0x1454>
   36504:	b	36438 <__flatcc_fb_build_schema@@Base+0x1430>
   36508:	ldr	r1, [r6, #16]
   3650c:	ldr	r0, [sp, #12]
   36510:	bl	2ade0 <ptr_set_find_item@@Base>
   36514:	cmp	r0, #0
   36518:	beq	36480 <__flatcc_fb_build_schema@@Base+0x1478>
   3651c:	ldrh	r1, [r6, #8]
   36520:	cmp	r1, #0
   36524:	beq	36700 <__flatcc_fb_build_schema@@Base+0x16f8>
   36528:	mov	r2, #0
   3652c:	ldr	r3, [r6, #4]
   36530:	ldr	r1, [r8, #4]
   36534:	str	r2, [sp, #4]
   36538:	str	r2, [sp]
   3653c:	ldr	r2, [pc, #-1172]	; 360b0 <__flatcc_fb_build_schema@@Base+0x10a8>
   36540:	mov	r0, fp
   36544:	add	r2, pc, r2
   36548:	bl	2d4ec <__flatcc_error_report@@Base>
   3654c:	mov	r3, #1
   36550:	strh	r3, [r8, #24]
   36554:	b	354bc <__flatcc_fb_build_schema@@Base+0x4b4>
   36558:	ldr	r2, [pc, #-1196]	; 360b4 <__flatcc_fb_build_schema@@Base+0x10ac>
   3655c:	ldr	r1, [r8, #4]
   36560:	mov	r3, r0
   36564:	str	r0, [sp, #4]
   36568:	str	r0, [sp]
   3656c:	add	r2, pc, r2
   36570:	mov	r0, fp
   36574:	bl	2d4ec <__flatcc_error_report@@Base>
   36578:	b	354f8 <__flatcc_fb_build_schema@@Base+0x4f0>
   3657c:	ldr	r6, [sl, #20]
   36580:	mov	r2, r7
   36584:	mov	r1, r4
   36588:	ldr	r0, [sp, #8]
   3658c:	bl	13f94 <memset@plt>
   36590:	mov	r2, r7
   36594:	mov	r1, r4
   36598:	mov	r0, r8
   3659c:	bl	13f94 <memset@plt>
   365a0:	cmp	r6, #0
   365a4:	beq	36cf8 <__flatcc_fb_build_schema@@Base+0x1cf0>
   365a8:	mov	r2, r6
   365ac:	mov	r1, #1
   365b0:	ldrh	r3, [r2, #24]
   365b4:	ldrh	r0, [r2, #74]	; 0x4a
   365b8:	cmp	r3, #15
   365bc:	bhi	36600 <__flatcc_fb_build_schema@@Base+0x15f8>
   365c0:	lsl	r3, r1, r3
   365c4:	ands	ip, r3, r5
   365c8:	bne	365fc <__flatcc_fb_build_schema@@Base+0x15f4>
   365cc:	tst	r3, #2
   365d0:	bne	36a60 <__flatcc_fb_build_schema@@Base+0x1a58>
   365d4:	tst	r3, #16384	; 0x4000
   365d8:	beq	36600 <__flatcc_fb_build_schema@@Base+0x15f8>
   365dc:	ldr	r0, [r2, #16]
   365e0:	ldrh	r3, [r0, #8]
   365e4:	cmp	r3, #3
   365e8:	beq	366f8 <__flatcc_fb_build_schema@@Base+0x16f0>
   365ec:	cmp	r3, #4
   365f0:	beq	365fc <__flatcc_fb_build_schema@@Base+0x15f4>
   365f4:	cmp	r3, #1
   365f8:	beq	366f8 <__flatcc_fb_build_schema@@Base+0x16f0>
   365fc:	ldrh	r0, [fp, #192]	; 0xc0
   36600:	cmp	r0, #0
   36604:	beq	36d00 <__flatcc_fb_build_schema@@Base+0x1cf8>
   36608:	lsrs	r0, r0, #1
   3660c:	mov	r3, r4
   36610:	beq	3662c <__flatcc_fb_build_schema@@Base+0x1624>
   36614:	add	r3, r3, #1
   36618:	lsrs	r0, r0, #1
   3661c:	uxth	r3, r3
   36620:	bne	36614 <__flatcc_fb_build_schema@@Base+0x160c>
   36624:	cmp	r3, #7
   36628:	movcs	r3, #7
   3662c:	lsl	r3, r3, #2
   36630:	add	r0, sp, #152	; 0x98
   36634:	add	r0, r0, r3
   36638:	ldr	ip, [r0, #-84]	; 0xffffffac
   3663c:	cmp	ip, #0
   36640:	streq	r2, [r0, #-84]	; 0xffffffac
   36644:	ldrne	r0, [r0, #-48]	; 0xffffffd0
   36648:	add	ip, sp, #152	; 0x98
   3664c:	add	r3, ip, r3
   36650:	strne	r2, [r0]
   36654:	add	r0, r2, #108	; 0x6c
   36658:	ldr	r2, [r2]
   3665c:	str	r0, [r3, #-48]	; 0xffffffd0
   36660:	cmp	r2, #0
   36664:	bne	365b0 <__flatcc_fb_build_schema@@Base+0x15a8>
   36668:	ldr	r2, [sp, #96]	; 0x60
   3666c:	ldr	r3, [sp, #16]
   36670:	mov	r1, #8
   36674:	str	r3, [sp, #136]	; 0x88
   36678:	mov	r0, r3
   3667c:	b	36698 <__flatcc_fb_build_schema@@Base+0x1690>
   36680:	sub	r2, r1, #2
   36684:	mov	r1, r3
   36688:	uxth	r3, r2
   3668c:	add	r2, sp, #152	; 0x98
   36690:	add	r3, r2, r3, lsl #2
   36694:	ldr	r2, [r3, #-84]	; 0xffffffac
   36698:	sub	r3, r1, #1
   3669c:	cmp	r2, #0
   366a0:	uxth	r3, r3
   366a4:	bne	366c4 <__flatcc_fb_build_schema@@Base+0x16bc>
   366a8:	cmp	r3, #0
   366ac:	bne	36680 <__flatcc_fb_build_schema@@Base+0x1678>
   366b0:	ldr	r3, [sp, #68]	; 0x44
   366b4:	str	r3, [r0]
   366b8:	ldr	r3, [sp, #100]	; 0x64
   366bc:	str	r3, [sl, #24]
   366c0:	b	35694 <__flatcc_fb_build_schema@@Base+0x68c>
   366c4:	cmp	r3, #0
   366c8:	str	r2, [r0]
   366cc:	beq	366b8 <__flatcc_fb_build_schema@@Base+0x16b0>
   366d0:	sub	r2, r1, #2
   366d4:	add	r1, sp, #152	; 0x98
   366d8:	add	r1, r1, r3, lsl #2
   366dc:	uxth	r2, r2
   366e0:	ldr	r0, [r1, #-48]	; 0xffffffd0
   366e4:	add	r1, sp, #152	; 0x98
   366e8:	add	r2, r1, r2, lsl #2
   366ec:	mov	r1, r3
   366f0:	ldr	r2, [r2, #-84]	; 0xffffffac
   366f4:	b	36698 <__flatcc_fb_build_schema@@Base+0x1690>
   366f8:	ldrh	r0, [r0, #104]	; 0x68
   366fc:	b	36600 <__flatcc_fb_build_schema@@Base+0x15f8>
   36700:	mov	r2, #0
   36704:	mov	r3, #0
   36708:	mov	r0, #14
   3670c:	ldr	r4, [r8, #64]	; 0x40
   36710:	add	sl, sp, #104	; 0x68
   36714:	strd	r2, [r8, #88]	; 0x58
   36718:	strh	r0, [r8, #24]
   3671c:	str	r6, [r8, #16]
   36720:	mov	r0, sl
   36724:	mov	r2, #48	; 0x30
   36728:	bl	13f94 <memset@plt>
   3672c:	cmp	r4, #0
   36730:	beq	36ae8 <__flatcc_fb_build_schema@@Base+0x1ae0>
   36734:	ldr	r3, [pc, #-1668]	; 360b8 <__flatcc_fb_build_schema@@Base+0x10b0>
   36738:	ldr	r6, [sp, #16]
   3673c:	add	r3, pc, r3
   36740:	str	r3, [sp, #20]
   36744:	ldr	r3, [pc, #-1680]	; 360bc <__flatcc_fb_build_schema@@Base+0x10b4>
   36748:	mov	r5, #100	; 0x64
   3674c:	add	r3, pc, r3
   36750:	str	r3, [sp, #24]
   36754:	b	367b8 <__flatcc_fb_build_schema@@Base+0x17b0>
   36758:	mov	r1, #1
   3675c:	ldr	r2, [sl, r3, lsl #2]
   36760:	orr	r6, r6, r1, lsl r3
   36764:	cmp	r2, #0
   36768:	uxth	r6, r6
   3676c:	lsl	r1, r3, #2
   36770:	beq	36814 <__flatcc_fb_build_schema@@Base+0x180c>
   36774:	ldr	r2, [pc, #-1724]	; 360c0 <__flatcc_fb_build_schema@@Base+0x10b8>
   36778:	mov	r3, #0
   3677c:	ldr	r1, [r4, #4]
   36780:	add	r2, pc, r2
   36784:	str	r3, [sp, #4]
   36788:	str	r3, [sp]
   3678c:	mov	r0, fp
   36790:	bl	2d4ec <__flatcc_error_report@@Base>
   36794:	subs	r5, r5, #1
   36798:	ldr	r4, [r4]
   3679c:	movne	r2, #1
   367a0:	moveq	r2, #0
   367a4:	cmp	r4, #0
   367a8:	moveq	r2, #0
   367ac:	andne	r2, r2, #1
   367b0:	cmp	r2, #0
   367b4:	beq	36858 <__flatcc_fb_build_schema@@Base+0x1850>
   367b8:	ldr	r3, [r4, #4]
   367bc:	ldr	r0, [fp, #412]	; 0x19c
   367c0:	ldm	r3, {r1, r2}
   367c4:	add	r0, r0, #16
   367c8:	bl	3d314 <fb_name_table_find@@Base>
   367cc:	cmp	r0, #0
   367d0:	beq	368fc <__flatcc_fb_build_schema@@Base+0x18f4>
   367d4:	ldr	r3, [r0, #24]
   367d8:	cmp	r3, #0
   367dc:	beq	36794 <__flatcc_fb_build_schema@@Base+0x178c>
   367e0:	mov	r2, #4
   367e4:	asr	r2, r2, r3
   367e8:	ands	r2, r2, #1
   367ec:	bne	36758 <__flatcc_fb_build_schema@@Base+0x1750>
   367f0:	ldr	r1, [r4, #4]
   367f4:	mov	r3, r2
   367f8:	str	r2, [sp, #4]
   367fc:	str	r2, [sp]
   36800:	ldr	r2, [pc, #-1860]	; 360c4 <__flatcc_fb_build_schema@@Base+0x10bc>
   36804:	mov	r0, fp
   36808:	add	r2, pc, r2
   3680c:	bl	2d4ec <__flatcc_error_report@@Base>
   36810:	b	36794 <__flatcc_fb_build_schema@@Base+0x178c>
   36814:	ldr	r0, [sp, #36]	; 0x24
   36818:	str	r4, [sl, r3, lsl #2]
   3681c:	add	r1, r0, r1
   36820:	ldr	r0, [r1, #204]	; 0xcc
   36824:	cmp	r0, #0
   36828:	bne	369b0 <__flatcc_fb_build_schema@@Base+0x19a8>
   3682c:	ldrh	r3, [r4, #16]
   36830:	cmp	r3, #0
   36834:	beq	36794 <__flatcc_fb_build_schema@@Base+0x178c>
   36838:	ldr	r1, [r4, #4]
   3683c:	mov	r3, r0
   36840:	str	r0, [sp, #4]
   36844:	str	r0, [sp]
   36848:	ldr	r2, [sp, #24]
   3684c:	mov	r0, fp
   36850:	bl	2d4ec <__flatcc_error_report@@Base>
   36854:	b	36794 <__flatcc_fb_build_schema@@Base+0x178c>
   36858:	cmp	r4, #0
   3685c:	beq	36880 <__flatcc_fb_build_schema@@Base+0x1878>
   36860:	ldr	r1, [r4, #4]
   36864:	mov	r3, r2
   36868:	str	r2, [sp, #4]
   3686c:	str	r2, [sp]
   36870:	ldr	r2, [pc, #-1968]	; 360c8 <__flatcc_fb_build_schema@@Base+0x10c0>
   36874:	mov	r0, fp
   36878:	add	r2, pc, r2
   3687c:	bl	2d4ec <__flatcc_error_report@@Base>
   36880:	strh	r6, [r8, #72]	; 0x48
   36884:	b	354bc <__flatcc_fb_build_schema@@Base+0x4b4>
   36888:	ldr	r1, [r4, #16]
   3688c:	ldr	r0, [sp, #12]
   36890:	bl	2ade0 <ptr_set_find_item@@Base>
   36894:	cmp	r0, #0
   36898:	beq	36274 <__flatcc_fb_build_schema@@Base+0x126c>
   3689c:	ldr	r3, [fp, #176]	; 0xb0
   368a0:	str	r4, [fp, #404]	; 0x194
   368a4:	cmp	r3, #0
   368a8:	beq	36a24 <__flatcc_fb_build_schema@@Base+0x1a1c>
   368ac:	ldrh	r3, [r4, #8]
   368b0:	cmp	r3, #1
   368b4:	bls	35768 <__flatcc_fb_build_schema@@Base+0x760>
   368b8:	ldr	r2, [pc, #-2036]	; 360cc <__flatcc_fb_build_schema@@Base+0x10c4>
   368bc:	mov	r3, #0
   368c0:	add	r2, pc, r2
   368c4:	ldr	r1, [fp, #400]	; 0x190
   368c8:	mov	r0, fp
   368cc:	bl	2eabc <error_ref_sym@@Base>
   368d0:	b	35768 <__flatcc_fb_build_schema@@Base+0x760>
   368d4:	ldr	r2, [pc, #-2060]	; 360d0 <__flatcc_fb_build_schema@@Base+0x10c8>
   368d8:	ldr	r1, [r8, #4]
   368dc:	mov	r3, r0
   368e0:	str	r0, [sp, #4]
   368e4:	str	r0, [sp]
   368e8:	add	r2, pc, r2
   368ec:	mov	r0, fp
   368f0:	ldr	sl, [sp, #8]
   368f4:	bl	2d4ec <__flatcc_error_report@@Base>
   368f8:	b	3636c <__flatcc_fb_build_schema@@Base+0x1364>
   368fc:	ldr	r2, [pc, #-2096]	; 360d4 <__flatcc_fb_build_schema@@Base+0x10cc>
   36900:	ldr	r1, [r4, #4]
   36904:	mov	r3, r0
   36908:	str	r0, [sp, #4]
   3690c:	str	r0, [sp]
   36910:	add	r2, pc, r2
   36914:	mov	r0, fp
   36918:	bl	2d4ec <__flatcc_error_report@@Base>
   3691c:	b	36794 <__flatcc_fb_build_schema@@Base+0x178c>
   36920:	ldr	r1, [sl, #16]
   36924:	ldr	r0, [sp, #12]
   36928:	bl	2ade0 <ptr_set_find_item@@Base>
   3692c:	cmp	r0, #0
   36930:	bne	36310 <__flatcc_fb_build_schema@@Base+0x1308>
   36934:	b	355d4 <__flatcc_fb_build_schema@@Base+0x5cc>
   36938:	ldrh	r3, [r4, #16]
   3693c:	cmp	r3, #2
   36940:	beq	35854 <__flatcc_fb_build_schema@@Base+0x84c>
   36944:	ldr	r1, [r4, #4]
   36948:	mov	r3, r0
   3694c:	str	r0, [sp, #4]
   36950:	str	r0, [sp]
   36954:	ldr	r2, [sp, #28]
   36958:	mov	r0, fp
   3695c:	bl	2d4ec <__flatcc_error_report@@Base>
   36960:	b	35854 <__flatcc_fb_build_schema@@Base+0x84c>
   36964:	ldrh	r3, [r6, #24]
   36968:	strh	r4, [r6, #72]	; 0x48
   3696c:	cmp	r3, #8
   36970:	bne	35b50 <__flatcc_fb_build_schema@@Base+0xb48>
   36974:	b	35cf8 <__flatcc_fb_build_schema@@Base+0xcf0>
   36978:	ldrh	r3, [r6, #72]	; 0x48
   3697c:	tst	r3, #128	; 0x80
   36980:	beq	35cf8 <__flatcc_fb_build_schema@@Base+0xcf0>
   36984:	ldr	r2, [pc, #-2228]	; 360d8 <__flatcc_fb_build_schema@@Base+0x10d0>
   36988:	mov	r3, #0
   3698c:	ldr	r1, [r6, #4]
   36990:	add	r2, pc, r2
   36994:	str	r3, [sp, #4]
   36998:	str	r3, [sp]
   3699c:	mov	r0, fp
   369a0:	ldr	sl, [sp, #16]
   369a4:	bl	2d4ec <__flatcc_error_report@@Base>
   369a8:	strh	r4, [r6, #24]
   369ac:	b	35370 <__flatcc_fb_build_schema@@Base+0x368>
   369b0:	cmp	r0, #2
   369b4:	beq	36abc <__flatcc_fb_build_schema@@Base+0x1ab4>
   369b8:	cmp	r0, #5
   369bc:	bne	36b74 <__flatcc_fb_build_schema@@Base+0x1b6c>
   369c0:	ldrh	r3, [r4, #16]
   369c4:	cmp	r3, #5
   369c8:	beq	36794 <__flatcc_fb_build_schema@@Base+0x178c>
   369cc:	ldr	r1, [r4, #4]
   369d0:	mov	r3, r2
   369d4:	str	r2, [sp, #4]
   369d8:	str	r2, [sp]
   369dc:	mov	r0, fp
   369e0:	ldr	r2, [sp, #48]	; 0x30
   369e4:	bl	2d4ec <__flatcc_error_report@@Base>
   369e8:	b	36794 <__flatcc_fb_build_schema@@Base+0x178c>
   369ec:	cmp	r2, #4
   369f0:	bne	36bac <__flatcc_fb_build_schema@@Base+0x1ba4>
   369f4:	ldrh	r3, [r4, #16]
   369f8:	sub	r3, r3, #4
   369fc:	cmp	r3, #1
   36a00:	bls	35a58 <__flatcc_fb_build_schema@@Base+0xa50>
   36a04:	ldr	r1, [r4, #4]
   36a08:	mov	r3, r0
   36a0c:	str	r0, [sp, #4]
   36a10:	str	r0, [sp]
   36a14:	ldr	r2, [sp, #52]	; 0x34
   36a18:	mov	r0, fp
   36a1c:	bl	2d4ec <__flatcc_error_report@@Base>
   36a20:	b	35a58 <__flatcc_fb_build_schema@@Base+0xa50>
   36a24:	ldrh	r2, [r4, #8]
   36a28:	cmp	r2, #0
   36a2c:	beq	35768 <__flatcc_fb_build_schema@@Base+0x760>
   36a30:	ldr	r2, [pc, #-2396]	; 360dc <__flatcc_fb_build_schema@@Base+0x10d4>
   36a34:	ldr	r1, [fp, #400]	; 0x190
   36a38:	add	r2, pc, r2
   36a3c:	mov	r0, fp
   36a40:	bl	2eabc <error_ref_sym@@Base>
   36a44:	b	35768 <__flatcc_fb_build_schema@@Base+0x760>
   36a48:	ldr	r1, [r6, #16]
   36a4c:	ldr	r0, [sp, #12]
   36a50:	bl	2ade0 <ptr_set_find_item@@Base>
   36a54:	cmp	r0, #0
   36a58:	bne	3651c <__flatcc_fb_build_schema@@Base+0x1514>
   36a5c:	b	36438 <__flatcc_fb_build_schema@@Base+0x1430>
   36a60:	add	r2, sp, #152	; 0x98
   36a64:	str	ip, [r2, #-88]!	; 0xffffffa8
   36a68:	b	36a70 <__flatcc_fb_build_schema@@Base+0x1a68>
   36a6c:	mov	r6, r3
   36a70:	ldr	r3, [r6]
   36a74:	str	r6, [r2]
   36a78:	cmp	r3, #0
   36a7c:	add	r2, r6, #108	; 0x6c
   36a80:	bne	36a6c <__flatcc_fb_build_schema@@Base+0x1a64>
   36a84:	str	r3, [r6, #108]	; 0x6c
   36a88:	ldr	r3, [sp, #64]	; 0x40
   36a8c:	b	366bc <__flatcc_fb_build_schema@@Base+0x16b4>
   36a90:	ldr	r2, [fp, #208]	; 0xd0
   36a94:	cmp	r2, #0
   36a98:	beq	35770 <__flatcc_fb_build_schema@@Base+0x768>
   36a9c:	ldr	r2, [pc, #-2500]	; 360e0 <__flatcc_fb_build_schema@@Base+0x10d8>
   36aa0:	str	r3, [sp, #4]
   36aa4:	str	r3, [sp]
   36aa8:	mov	r1, r3
   36aac:	add	r2, pc, r2
   36ab0:	mov	r0, fp
   36ab4:	bl	2d4ec <__flatcc_error_report@@Base>
   36ab8:	b	35770 <__flatcc_fb_build_schema@@Base+0x768>
   36abc:	ldrh	r3, [r4, #16]
   36ac0:	cmp	r3, #2
   36ac4:	beq	36794 <__flatcc_fb_build_schema@@Base+0x178c>
   36ac8:	ldr	r1, [r4, #4]
   36acc:	mov	r3, r2
   36ad0:	str	r2, [sp, #4]
   36ad4:	str	r2, [sp]
   36ad8:	mov	r0, fp
   36adc:	ldr	r2, [sp, #20]
   36ae0:	bl	2d4ec <__flatcc_error_report@@Base>
   36ae4:	b	36794 <__flatcc_fb_build_schema@@Base+0x178c>
   36ae8:	ldr	r6, [sp, #16]
   36aec:	b	36880 <__flatcc_fb_build_schema@@Base+0x1878>
   36af0:	ldr	r0, [sp, #12]
   36af4:	ldr	r1, [r4, #16]
   36af8:	bl	2ade0 <ptr_set_find_item@@Base>
   36afc:	cmp	r0, #0
   36b00:	bne	3689c <__flatcc_fb_build_schema@@Base+0x1894>
   36b04:	b	35744 <__flatcc_fb_build_schema@@Base+0x73c>
   36b08:	str	r6, [r5, #88]	; 0x58
   36b0c:	str	r9, [r5, #16]
   36b10:	b	35068 <__flatcc_fb_build_schema@@Base+0x60>
   36b14:	ldr	r2, [pc, #-2616]	; 360e4 <__flatcc_fb_build_schema@@Base+0x10dc>
   36b18:	mov	r3, #0
   36b1c:	ldr	r1, [sl, #4]
   36b20:	add	r2, pc, r2
   36b24:	str	r3, [sp, #4]
   36b28:	str	r3, [sp]
   36b2c:	mov	r0, fp
   36b30:	bl	2d4ec <__flatcc_error_report@@Base>
   36b34:	b	35370 <__flatcc_fb_build_schema@@Base+0x368>
   36b38:	ldr	r2, [pc, #-2648]	; 360e8 <__flatcc_fb_build_schema@@Base+0x10e0>
   36b3c:	ldr	r1, [r6, #4]
   36b40:	mov	r3, r0
   36b44:	str	r0, [sp, #4]
   36b48:	str	r0, [sp]
   36b4c:	add	r2, pc, r2
   36b50:	mov	r0, fp
   36b54:	ldr	sl, [sp, #16]
   36b58:	bl	2d4ec <__flatcc_error_report@@Base>
   36b5c:	b	35370 <__flatcc_fb_build_schema@@Base+0x368>
   36b60:	ldr	r3, [fp, #396]	; 0x18c
   36b64:	cmp	r3, #0
   36b68:	bne	36228 <__flatcc_fb_build_schema@@Base+0x1220>
   36b6c:	str	r3, [fp, #396]	; 0x18c
   36b70:	b	356a0 <__flatcc_fb_build_schema@@Base+0x698>
   36b74:	cmp	r0, #4
   36b78:	bne	36be0 <__flatcc_fb_build_schema@@Base+0x1bd8>
   36b7c:	ldrh	r3, [r4, #16]
   36b80:	sub	r3, r3, #4
   36b84:	cmp	r3, #1
   36b88:	bls	36794 <__flatcc_fb_build_schema@@Base+0x178c>
   36b8c:	ldr	r1, [r4, #4]
   36b90:	mov	r3, r2
   36b94:	str	r2, [sp, #4]
   36b98:	str	r2, [sp]
   36b9c:	mov	r0, fp
   36ba0:	ldr	r2, [sp, #44]	; 0x2c
   36ba4:	bl	2d4ec <__flatcc_error_report@@Base>
   36ba8:	b	36794 <__flatcc_fb_build_schema@@Base+0x178c>
   36bac:	cmp	r2, #6
   36bb0:	bne	35a58 <__flatcc_fb_build_schema@@Base+0xa50>
   36bb4:	ldrh	r3, [r4, #16]
   36bb8:	cmp	r3, #6
   36bbc:	beq	35a58 <__flatcc_fb_build_schema@@Base+0xa50>
   36bc0:	mov	r3, #0
   36bc4:	ldr	r1, [r4, #4]
   36bc8:	ldr	r2, [sp, #48]	; 0x30
   36bcc:	str	r3, [sp, #4]
   36bd0:	str	r3, [sp]
   36bd4:	mov	r0, fp
   36bd8:	bl	2d4ec <__flatcc_error_report@@Base>
   36bdc:	b	35a58 <__flatcc_fb_build_schema@@Base+0xa50>
   36be0:	cmp	r0, #6
   36be4:	bne	36794 <__flatcc_fb_build_schema@@Base+0x178c>
   36be8:	ldrh	r3, [r4, #16]
   36bec:	cmp	r3, #6
   36bf0:	beq	36794 <__flatcc_fb_build_schema@@Base+0x178c>
   36bf4:	mov	r3, #0
   36bf8:	ldr	r1, [r4, #4]
   36bfc:	ldr	r2, [sp, #40]	; 0x28
   36c00:	str	r3, [sp, #4]
   36c04:	str	r3, [sp]
   36c08:	mov	r0, fp
   36c0c:	bl	2d4ec <__flatcc_error_report@@Base>
   36c10:	b	36794 <__flatcc_fb_build_schema@@Base+0x178c>
   36c14:	ldr	r1, [r6, #4]
   36c18:	mov	r3, r2
   36c1c:	str	r2, [sp, #4]
   36c20:	str	r2, [sp]
   36c24:	ldr	r2, [pc, #-2880]	; 360ec <__flatcc_fb_build_schema@@Base+0x10e4>
   36c28:	mov	r0, fp
   36c2c:	add	r2, pc, r2
   36c30:	ldr	sl, [sp, #16]
   36c34:	bl	2d4ec <__flatcc_error_report@@Base>
   36c38:	mov	r3, #1
   36c3c:	strh	r3, [r6, #24]
   36c40:	b	35370 <__flatcc_fb_build_schema@@Base+0x368>
   36c44:	ldr	r3, [pc, #-2908]	; 360f0 <__flatcc_fb_build_schema@@Base+0x10e8>
   36c48:	ldr	r1, [pc, #-2908]	; 360f4 <__flatcc_fb_build_schema@@Base+0x10ec>
   36c4c:	ldr	r0, [pc, #-2908]	; 360f8 <__flatcc_fb_build_schema@@Base+0x10f0>
   36c50:	add	r3, pc, r3
   36c54:	ldr	r2, [pc, #-2912]	; 360fc <__flatcc_fb_build_schema@@Base+0x10f4>
   36c58:	add	r3, r3, #288	; 0x120
   36c5c:	add	r1, pc, r1
   36c60:	add	r0, pc, r0
   36c64:	bl	14030 <__assert_fail@plt>
   36c68:	ldr	r0, [sp, #8]
   36c6c:	ldr	r3, [pc, #-2932]	; 36100 <__flatcc_fb_build_schema@@Base+0x10f8>
   36c70:	mov	r2, #34	; 0x22
   36c74:	mov	r1, #1
   36c78:	ldr	r3, [r0, r3]
   36c7c:	ldr	r0, [pc, #-2944]	; 36104 <__flatcc_fb_build_schema@@Base+0x10fc>
   36c80:	ldr	r3, [r3]
   36c84:	add	r0, pc, r0
   36c88:	bl	13f10 <fwrite@plt>
   36c8c:	mov	r0, #1
   36c90:	bl	13f64 <exit@plt>
   36c94:	ldr	r3, [r8, #4]
   36c98:	ldr	r1, [r6, #4]
   36c9c:	str	r2, [sp, #4]
   36ca0:	str	r2, [sp]
   36ca4:	ldr	r2, [pc, #-2980]	; 36108 <__flatcc_fb_build_schema@@Base+0x1100>
   36ca8:	mov	r0, fp
   36cac:	add	r2, pc, r2
   36cb0:	ldr	sl, [sp, #16]
   36cb4:	bl	2d4ec <__flatcc_error_report@@Base>
   36cb8:	mov	r3, #1
   36cbc:	strh	r3, [r6, #24]
   36cc0:	b	35370 <__flatcc_fb_build_schema@@Base+0x368>
   36cc4:	mov	r2, #0
   36cc8:	ldr	r3, [r8, #4]
   36ccc:	ldr	r1, [r6, #4]
   36cd0:	str	r2, [sp, #4]
   36cd4:	str	r2, [sp]
   36cd8:	ldr	r2, [pc, #-3028]	; 3610c <__flatcc_fb_build_schema@@Base+0x1104>
   36cdc:	mov	r0, fp
   36ce0:	add	r2, pc, r2
   36ce4:	ldr	sl, [sp, #16]
   36ce8:	bl	2d4ec <__flatcc_error_report@@Base>
   36cec:	mov	r3, #1
   36cf0:	strh	r3, [r6, #24]
   36cf4:	b	35370 <__flatcc_fb_build_schema@@Base+0x368>
   36cf8:	mov	r2, r4
   36cfc:	b	3666c <__flatcc_fb_build_schema@@Base+0x1664>
   36d00:	ldr	r3, [pc, #-3064]	; 36110 <__flatcc_fb_build_schema@@Base+0x1108>
   36d04:	ldr	r1, [pc, #-3064]	; 36114 <__flatcc_fb_build_schema@@Base+0x110c>
   36d08:	ldr	r0, [pc, #-3064]	; 36118 <__flatcc_fb_build_schema@@Base+0x1110>
   36d0c:	add	r3, pc, r3
   36d10:	ldr	r2, [pc, #-3068]	; 3611c <__flatcc_fb_build_schema@@Base+0x1114>
   36d14:	add	r3, r3, #336	; 0x150
   36d18:	add	r1, pc, r1
   36d1c:	add	r0, pc, r0
   36d20:	bl	14030 <__assert_fail@plt>
   36d24:	cmp	r2, #6
   36d28:	bne	35854 <__flatcc_fb_build_schema@@Base+0x84c>
   36d2c:	ldrh	r3, [r4, #16]
   36d30:	cmp	r3, #6
   36d34:	beq	35854 <__flatcc_fb_build_schema@@Base+0x84c>
   36d38:	mov	r3, #0
   36d3c:	ldr	r1, [r4, #4]
   36d40:	ldr	r2, [sp, #60]	; 0x3c
   36d44:	str	r3, [sp, #4]
   36d48:	str	r3, [sp]
   36d4c:	mov	r0, fp
   36d50:	bl	2d4ec <__flatcc_error_report@@Base>
   36d54:	b	35854 <__flatcc_fb_build_schema@@Base+0x84c>
   36d58:	ldr	r3, [pc, #-3136]	; 36120 <__flatcc_fb_build_schema@@Base+0x1118>
   36d5c:	ldr	r1, [pc, #-3136]	; 36124 <__flatcc_fb_build_schema@@Base+0x111c>
   36d60:	ldr	r0, [pc, #-3136]	; 36128 <__flatcc_fb_build_schema@@Base+0x1120>
   36d64:	add	r3, pc, r3
   36d68:	ldr	r2, [pc, #-3140]	; 3612c <__flatcc_fb_build_schema@@Base+0x1124>
   36d6c:	add	r3, r3, #316	; 0x13c
   36d70:	add	r1, pc, r1
   36d74:	add	r0, pc, r0
   36d78:	bl	14030 <__assert_fail@plt>

00036d7c <__flatcc_fb_coerce_scalar_type@@Base>:
   36d7c:	ldrh	ip, [r3, #8]
   36d80:	cmp	ip, #0
   36d84:	beq	36e94 <__flatcc_fb_coerce_scalar_type@@Base+0x118>
   36d88:	push	{r4, r5, r6, r8, r9, sl, fp, lr}
   36d8c:	vpush	{d8}
   36d90:	cmp	ip, #4
   36d94:	mov	r6, r1
   36d98:	mov	r5, r0
   36d9c:	sub	sp, sp, #8
   36da0:	mov	r4, r3
   36da4:	beq	36e34 <__flatcc_fb_coerce_scalar_type@@Base+0xb8>
   36da8:	cmp	ip, #1
   36dac:	beq	36e84 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   36db0:	cmp	r2, #5
   36db4:	sub	ip, ip, #6
   36db8:	clz	ip, ip
   36dbc:	lsr	ip, ip, #5
   36dc0:	moveq	ip, #0
   36dc4:	cmp	ip, #0
   36dc8:	beq	36e48 <__flatcc_fb_coerce_scalar_type@@Base+0xcc>
   36dcc:	ldr	r3, [r0, #144]	; 0x90
   36dd0:	cmp	r3, #0
   36dd4:	beq	36e48 <__flatcc_fb_coerce_scalar_type@@Base+0xcc>
   36dd8:	ldrb	r0, [r4]
   36ddc:	mov	r1, #0
   36de0:	cmp	r1, #0
   36de4:	mov	r3, #5
   36de8:	cmpeq	r0, #1
   36dec:	strd	r0, [r4]
   36df0:	strh	r3, [r4, #8]
   36df4:	bhi	375e4 <__flatcc_fb_coerce_scalar_type@@Base+0x868>
   36df8:	sub	r2, r2, #1
   36dfc:	cmp	r2, #10
   36e00:	addls	pc, pc, r2, lsl #2
   36e04:	b	37280 <__flatcc_fb_coerce_scalar_type@@Base+0x504>
   36e08:	b	36e84 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   36e0c:	b	36ee4 <__flatcc_fb_coerce_scalar_type@@Base+0x168>
   36e10:	b	36f38 <__flatcc_fb_coerce_scalar_type@@Base+0x1bc>
   36e14:	b	36f8c <__flatcc_fb_coerce_scalar_type@@Base+0x210>
   36e18:	b	371bc <__flatcc_fb_coerce_scalar_type@@Base+0x440>
   36e1c:	b	37024 <__flatcc_fb_coerce_scalar_type@@Base+0x2a8>
   36e20:	b	37090 <__flatcc_fb_coerce_scalar_type@@Base+0x314>
   36e24:	b	3705c <__flatcc_fb_coerce_scalar_type@@Base+0x2e0>
   36e28:	b	3717c <__flatcc_fb_coerce_scalar_type@@Base+0x400>
   36e2c:	b	37208 <__flatcc_fb_coerce_scalar_type@@Base+0x48c>
   36e30:	b	37244 <__flatcc_fb_coerce_scalar_type@@Base+0x4c8>
   36e34:	ldrd	r0, [r3]
   36e38:	cmp	r0, #0
   36e3c:	sbcs	r3, r1, #0
   36e40:	movge	r3, #5
   36e44:	strhge	r3, [r4, #8]
   36e48:	sub	r2, r2, #1
   36e4c:	cmp	r2, #10
   36e50:	addls	pc, pc, r2, lsl #2
   36e54:	b	37280 <__flatcc_fb_coerce_scalar_type@@Base+0x504>
   36e58:	b	36e9c <__flatcc_fb_coerce_scalar_type@@Base+0x120>
   36e5c:	b	36ed8 <__flatcc_fb_coerce_scalar_type@@Base+0x15c>
   36e60:	b	36f2c <__flatcc_fb_coerce_scalar_type@@Base+0x1b0>
   36e64:	b	36f80 <__flatcc_fb_coerce_scalar_type@@Base+0x204>
   36e68:	b	36fcc <__flatcc_fb_coerce_scalar_type@@Base+0x250>
   36e6c:	b	37010 <__flatcc_fb_coerce_scalar_type@@Base+0x294>
   36e70:	b	3707c <__flatcc_fb_coerce_scalar_type@@Base+0x300>
   36e74:	b	37048 <__flatcc_fb_coerce_scalar_type@@Base+0x2cc>
   36e78:	b	37168 <__flatcc_fb_coerce_scalar_type@@Base+0x3ec>
   36e7c:	b	370d0 <__flatcc_fb_coerce_scalar_type@@Base+0x354>
   36e80:	b	3711c <__flatcc_fb_coerce_scalar_type@@Base+0x3a0>
   36e84:	mov	r0, #0
   36e88:	add	sp, sp, #8
   36e8c:	vpop	{d8}
   36e90:	pop	{r4, r5, r6, r8, r9, sl, fp, pc}
   36e94:	mov	r0, #0
   36e98:	bx	lr
   36e9c:	ldrh	r3, [r4, #8]
   36ea0:	cmp	r3, #5
   36ea4:	beq	36e84 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   36ea8:	ldr	r2, [pc, #1876]	; 37604 <__flatcc_fb_coerce_scalar_type@@Base+0x888>
   36eac:	mov	r3, #0
   36eb0:	ldr	r1, [r6, #4]
   36eb4:	mov	r0, r5
   36eb8:	str	r3, [sp, #4]
   36ebc:	str	r3, [sp]
   36ec0:	add	r2, pc, r2
   36ec4:	bl	2d4ec <__flatcc_error_report@@Base>
   36ec8:	mov	r3, #1
   36ecc:	strh	r3, [r4, #8]
   36ed0:	mvn	r0, #0
   36ed4:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   36ed8:	ldrh	r3, [r4, #8]
   36edc:	cmp	r3, #5
   36ee0:	bne	37434 <__flatcc_fb_coerce_scalar_type@@Base+0x6b8>
   36ee4:	ldrd	r2, [r4]
   36ee8:	mov	r1, #0
   36eec:	mvn	r0, #0
   36ef0:	cmp	r3, r1
   36ef4:	cmpeq	r2, r0
   36ef8:	bls	36e84 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   36efc:	ldr	r2, [pc, #1796]	; 37608 <__flatcc_fb_coerce_scalar_type@@Base+0x88c>
   36f00:	mov	r3, #0
   36f04:	ldr	r1, [r6, #4]
   36f08:	mov	r0, r5
   36f0c:	str	r3, [sp, #4]
   36f10:	str	r3, [sp]
   36f14:	add	r2, pc, r2
   36f18:	bl	2d4ec <__flatcc_error_report@@Base>
   36f1c:	mov	r3, #1
   36f20:	strh	r3, [r4, #8]
   36f24:	mvn	r0, #0
   36f28:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   36f2c:	ldrh	r3, [r4, #8]
   36f30:	cmp	r3, #5
   36f34:	bne	37494 <__flatcc_fb_coerce_scalar_type@@Base+0x718>
   36f38:	ldrd	r2, [r4]
   36f3c:	ldr	r0, [pc, #1736]	; 3760c <__flatcc_fb_coerce_scalar_type@@Base+0x890>
   36f40:	mov	r1, #0
   36f44:	cmp	r3, r1
   36f48:	cmpeq	r2, r0
   36f4c:	bls	36e84 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   36f50:	ldr	r2, [pc, #1720]	; 37610 <__flatcc_fb_coerce_scalar_type@@Base+0x894>
   36f54:	mov	r3, #0
   36f58:	ldr	r1, [r6, #4]
   36f5c:	mov	r0, r5
   36f60:	str	r3, [sp, #4]
   36f64:	str	r3, [sp]
   36f68:	add	r2, pc, r2
   36f6c:	bl	2d4ec <__flatcc_error_report@@Base>
   36f70:	mov	r3, #1
   36f74:	strh	r3, [r4, #8]
   36f78:	mvn	r0, #0
   36f7c:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   36f80:	ldrh	r3, [r4, #8]
   36f84:	cmp	r3, #5
   36f88:	bne	37464 <__flatcc_fb_coerce_scalar_type@@Base+0x6e8>
   36f8c:	ldrd	r2, [r4]
   36f90:	cmp	r3, #0
   36f94:	cmpeq	r2, #255	; 0xff
   36f98:	bls	36e84 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   36f9c:	ldr	r2, [pc, #1648]	; 37614 <__flatcc_fb_coerce_scalar_type@@Base+0x898>
   36fa0:	mov	r3, #0
   36fa4:	ldr	r1, [r6, #4]
   36fa8:	mov	r0, r5
   36fac:	str	r3, [sp, #4]
   36fb0:	str	r3, [sp]
   36fb4:	add	r2, pc, r2
   36fb8:	bl	2d4ec <__flatcc_error_report@@Base>
   36fbc:	mov	r3, #1
   36fc0:	strh	r3, [r4, #8]
   36fc4:	mvn	r0, #0
   36fc8:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   36fcc:	ldrh	r3, [r4, #8]
   36fd0:	cmp	r3, #5
   36fd4:	beq	371bc <__flatcc_fb_coerce_scalar_type@@Base+0x440>
   36fd8:	cmp	r3, #6
   36fdc:	beq	36e84 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   36fe0:	ldr	r2, [pc, #1584]	; 37618 <__flatcc_fb_coerce_scalar_type@@Base+0x89c>
   36fe4:	mov	r3, #0
   36fe8:	ldr	r1, [r6, #4]
   36fec:	mov	r0, r5
   36ff0:	str	r3, [sp, #4]
   36ff4:	str	r3, [sp]
   36ff8:	add	r2, pc, r2
   36ffc:	bl	2d4ec <__flatcc_error_report@@Base>
   37000:	mov	r3, #1
   37004:	strh	r3, [r4, #8]
   37008:	mvn	r0, #0
   3700c:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37010:	ldrh	r3, [r4, #8]
   37014:	cmp	r3, #4
   37018:	beq	36e84 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   3701c:	cmp	r3, #5
   37020:	bne	374c4 <__flatcc_fb_coerce_scalar_type@@Base+0x748>
   37024:	ldrd	r2, [r4]
   37028:	cmp	r2, #0
   3702c:	sbcs	r1, r3, #0
   37030:	blt	375b4 <__flatcc_fb_coerce_scalar_type@@Base+0x838>
   37034:	mov	r1, #4
   37038:	strd	r2, [r4]
   3703c:	strh	r1, [r4, #8]
   37040:	mov	r0, #0
   37044:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37048:	ldrh	r3, [r4, #8]
   3704c:	cmp	r3, #4
   37050:	beq	372f8 <__flatcc_fb_coerce_scalar_type@@Base+0x57c>
   37054:	cmp	r3, #5
   37058:	bne	374f4 <__flatcc_fb_coerce_scalar_type@@Base+0x778>
   3705c:	ldrd	r2, [r4]
   37060:	cmp	r2, #32768	; 0x8000
   37064:	sbcs	r3, r3, #0
   37068:	bge	37584 <__flatcc_fb_coerce_scalar_type@@Base+0x808>
   3706c:	mov	r3, #4
   37070:	strh	r3, [r4, #8]
   37074:	mov	r0, #0
   37078:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   3707c:	ldrh	r3, [r4, #8]
   37080:	cmp	r3, #4
   37084:	beq	372b0 <__flatcc_fb_coerce_scalar_type@@Base+0x534>
   37088:	cmp	r3, #5
   3708c:	bne	37524 <__flatcc_fb_coerce_scalar_type@@Base+0x7a8>
   37090:	ldrd	r2, [r4]
   37094:	cmp	r2, #-2147483648	; 0x80000000
   37098:	sbcs	r3, r3, #0
   3709c:	blt	3706c <__flatcc_fb_coerce_scalar_type@@Base+0x2f0>
   370a0:	ldr	r2, [pc, #1396]	; 3761c <__flatcc_fb_coerce_scalar_type@@Base+0x8a0>
   370a4:	mov	r3, #0
   370a8:	ldr	r1, [r6, #4]
   370ac:	mov	r0, r5
   370b0:	str	r3, [sp, #4]
   370b4:	str	r3, [sp]
   370b8:	add	r2, pc, r2
   370bc:	bl	2d4ec <__flatcc_error_report@@Base>
   370c0:	mov	r3, #1
   370c4:	strh	r3, [r4, #8]
   370c8:	mvn	r0, #0
   370cc:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   370d0:	ldrh	r3, [r4, #8]
   370d4:	cmp	r3, #4
   370d8:	beq	37388 <__flatcc_fb_coerce_scalar_type@@Base+0x60c>
   370dc:	cmp	r3, #5
   370e0:	beq	37208 <__flatcc_fb_coerce_scalar_type@@Base+0x48c>
   370e4:	cmp	r3, #3
   370e8:	beq	36e84 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   370ec:	ldr	r2, [pc, #1324]	; 37620 <__flatcc_fb_coerce_scalar_type@@Base+0x8a4>
   370f0:	mov	r3, #0
   370f4:	ldr	r1, [r6, #4]
   370f8:	mov	r0, r5
   370fc:	str	r3, [sp, #4]
   37100:	str	r3, [sp]
   37104:	add	r2, pc, r2
   37108:	bl	2d4ec <__flatcc_error_report@@Base>
   3710c:	mov	r3, #1
   37110:	strh	r3, [r4, #8]
   37114:	mvn	r0, #0
   37118:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   3711c:	ldrh	r3, [r4, #8]
   37120:	cmp	r3, #4
   37124:	beq	373e0 <__flatcc_fb_coerce_scalar_type@@Base+0x664>
   37128:	cmp	r3, #5
   3712c:	beq	37244 <__flatcc_fb_coerce_scalar_type@@Base+0x4c8>
   37130:	cmp	r3, #3
   37134:	beq	36e84 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   37138:	ldr	r2, [pc, #1252]	; 37624 <__flatcc_fb_coerce_scalar_type@@Base+0x8a8>
   3713c:	mov	r3, #0
   37140:	ldr	r1, [r6, #4]
   37144:	mov	r0, r5
   37148:	str	r3, [sp, #4]
   3714c:	str	r3, [sp]
   37150:	add	r2, pc, r2
   37154:	bl	2d4ec <__flatcc_error_report@@Base>
   37158:	mov	r3, #1
   3715c:	strh	r3, [r4, #8]
   37160:	mvn	r0, #0
   37164:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37168:	ldrh	r3, [r4, #8]
   3716c:	cmp	r3, #4
   37170:	beq	37340 <__flatcc_fb_coerce_scalar_type@@Base+0x5c4>
   37174:	cmp	r3, #5
   37178:	bne	37554 <__flatcc_fb_coerce_scalar_type@@Base+0x7d8>
   3717c:	ldrd	r2, [r4]
   37180:	cmp	r2, #128	; 0x80
   37184:	sbcs	r3, r3, #0
   37188:	blt	3706c <__flatcc_fb_coerce_scalar_type@@Base+0x2f0>
   3718c:	ldr	r2, [pc, #1172]	; 37628 <__flatcc_fb_coerce_scalar_type@@Base+0x8ac>
   37190:	mov	r3, #0
   37194:	ldr	r1, [r6, #4]
   37198:	mov	r0, r5
   3719c:	str	r3, [sp, #4]
   371a0:	str	r3, [sp]
   371a4:	add	r2, pc, r2
   371a8:	bl	2d4ec <__flatcc_error_report@@Base>
   371ac:	mov	r3, #1
   371b0:	strh	r3, [r4, #8]
   371b4:	mvn	r0, #0
   371b8:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   371bc:	ldr	r3, [r5, #144]	; 0x90
   371c0:	cmp	r3, #0
   371c4:	beq	36fe0 <__flatcc_fb_coerce_scalar_type@@Base+0x264>
   371c8:	ldrd	r2, [r4]
   371cc:	cmp	r3, #0
   371d0:	cmpeq	r2, #1
   371d4:	bls	36e84 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   371d8:	ldr	r2, [pc, #1100]	; 3762c <__flatcc_fb_coerce_scalar_type@@Base+0x8b0>
   371dc:	mov	r3, #0
   371e0:	ldr	r1, [r6, #4]
   371e4:	mov	r0, r5
   371e8:	str	r3, [sp, #4]
   371ec:	str	r3, [sp]
   371f0:	add	r2, pc, r2
   371f4:	bl	2d4ec <__flatcc_error_report@@Base>
   371f8:	mov	r3, #1
   371fc:	strh	r3, [r4, #8]
   37200:	mvn	r0, #0
   37204:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37208:	ldrd	r8, [r4]
   3720c:	mov	r0, r8
   37210:	mov	r1, r9
   37214:	bl	3de28 <fb_value_set_visit@@Base+0x3a4>
   37218:	mov	sl, r0
   3721c:	mov	fp, r1
   37220:	bl	3e1d8 <fb_value_set_visit@@Base+0x754>
   37224:	cmp	r9, r1
   37228:	cmpeq	r8, r0
   3722c:	bne	373b0 <__flatcc_fb_coerce_scalar_type@@Base+0x634>
   37230:	mov	r3, #3
   37234:	strd	sl, [r4]
   37238:	strh	r3, [r4, #8]
   3723c:	mov	r0, #0
   37240:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37244:	ldrd	r8, [r4]
   37248:	mov	r1, r9
   3724c:	mov	r0, r8
   37250:	bl	3e060 <fb_value_set_visit@@Base+0x5dc>
   37254:	vmov	s16, r0
   37258:	bl	3e190 <fb_value_set_visit@@Base+0x70c>
   3725c:	cmp	r9, r1
   37260:	cmpeq	r8, r0
   37264:	bne	37404 <__flatcc_fb_coerce_scalar_type@@Base+0x688>
   37268:	vcvt.f64.f32	d8, s16
   3726c:	mov	r3, #3
   37270:	strh	r3, [r4, #8]
   37274:	mov	r0, #0
   37278:	vstr	d8, [r4]
   3727c:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37280:	ldr	r2, [pc, #936]	; 37630 <__flatcc_fb_coerce_scalar_type@@Base+0x8b4>
   37284:	mov	r3, #0
   37288:	ldr	r1, [r6, #4]
   3728c:	mov	r0, r5
   37290:	str	r3, [sp, #4]
   37294:	str	r3, [sp]
   37298:	add	r2, pc, r2
   3729c:	bl	2d4ec <__flatcc_error_report@@Base>
   372a0:	mov	r3, #1
   372a4:	strh	r3, [r4, #8]
   372a8:	mvn	r0, #0
   372ac:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   372b0:	ldrd	r2, [r4]
   372b4:	mov	r0, #-2147483648	; 0x80000000
   372b8:	mvn	r1, #0
   372bc:	cmp	r2, r0
   372c0:	sbcs	r3, r3, r1
   372c4:	bge	36e84 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   372c8:	ldr	r2, [pc, #868]	; 37634 <__flatcc_fb_coerce_scalar_type@@Base+0x8b8>
   372cc:	mov	r3, #0
   372d0:	ldr	r1, [r6, #4]
   372d4:	mov	r0, r5
   372d8:	str	r3, [sp, #4]
   372dc:	str	r3, [sp]
   372e0:	add	r2, pc, r2
   372e4:	bl	2d4ec <__flatcc_error_report@@Base>
   372e8:	mov	r3, #1
   372ec:	strh	r3, [r4, #8]
   372f0:	mvn	r0, #0
   372f4:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   372f8:	ldrd	r2, [r4]
   372fc:	ldr	r0, [pc, #820]	; 37638 <__flatcc_fb_coerce_scalar_type@@Base+0x8bc>
   37300:	mvn	r1, #0
   37304:	cmp	r2, r0
   37308:	sbcs	r3, r3, r1
   3730c:	bge	36e84 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   37310:	ldr	r2, [pc, #804]	; 3763c <__flatcc_fb_coerce_scalar_type@@Base+0x8c0>
   37314:	mov	r3, #0
   37318:	ldr	r1, [r6, #4]
   3731c:	mov	r0, r5
   37320:	str	r3, [sp, #4]
   37324:	str	r3, [sp]
   37328:	add	r2, pc, r2
   3732c:	bl	2d4ec <__flatcc_error_report@@Base>
   37330:	mov	r3, #1
   37334:	strh	r3, [r4, #8]
   37338:	mvn	r0, #0
   3733c:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37340:	ldrd	r2, [r4]
   37344:	mvn	r0, #127	; 0x7f
   37348:	mvn	r1, #0
   3734c:	cmp	r2, r0
   37350:	sbcs	r3, r3, r1
   37354:	bge	36e84 <__flatcc_fb_coerce_scalar_type@@Base+0x108>
   37358:	ldr	r2, [pc, #736]	; 37640 <__flatcc_fb_coerce_scalar_type@@Base+0x8c4>
   3735c:	mov	r3, #0
   37360:	ldr	r1, [r6, #4]
   37364:	mov	r0, r5
   37368:	str	r3, [sp, #4]
   3736c:	str	r3, [sp]
   37370:	add	r2, pc, r2
   37374:	bl	2d4ec <__flatcc_error_report@@Base>
   37378:	mov	r3, #1
   3737c:	strh	r3, [r4, #8]
   37380:	mvn	r0, #0
   37384:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37388:	ldrd	r8, [r4]
   3738c:	mov	r0, r8
   37390:	mov	r1, r9
   37394:	bl	3de3c <fb_value_set_visit@@Base+0x3b8>
   37398:	mov	sl, r0
   3739c:	mov	fp, r1
   373a0:	bl	3e164 <fb_value_set_visit@@Base+0x6e0>
   373a4:	cmp	r9, r1
   373a8:	cmpeq	r8, r0
   373ac:	beq	37230 <__flatcc_fb_coerce_scalar_type@@Base+0x4b4>
   373b0:	ldr	r2, [pc, #652]	; 37644 <__flatcc_fb_coerce_scalar_type@@Base+0x8c8>
   373b4:	mov	r3, #0
   373b8:	ldr	r1, [r6, #4]
   373bc:	mov	r0, r5
   373c0:	str	r3, [sp, #4]
   373c4:	str	r3, [sp]
   373c8:	add	r2, pc, r2
   373cc:	bl	2d4ec <__flatcc_error_report@@Base>
   373d0:	mov	r3, #1
   373d4:	strh	r3, [r4, #8]
   373d8:	mvn	r0, #0
   373dc:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   373e0:	ldrd	r8, [r4]
   373e4:	mov	r1, r9
   373e8:	mov	r0, r8
   373ec:	bl	3e070 <fb_value_set_visit@@Base+0x5ec>
   373f0:	vmov	s16, r0
   373f4:	bl	3e138 <fb_value_set_visit@@Base+0x6b4>
   373f8:	cmp	r9, r1
   373fc:	cmpeq	r8, r0
   37400:	beq	37268 <__flatcc_fb_coerce_scalar_type@@Base+0x4ec>
   37404:	ldr	r2, [pc, #572]	; 37648 <__flatcc_fb_coerce_scalar_type@@Base+0x8cc>
   37408:	mov	r3, #0
   3740c:	ldr	r1, [r6, #4]
   37410:	mov	r0, r5
   37414:	str	r3, [sp, #4]
   37418:	str	r3, [sp]
   3741c:	add	r2, pc, r2
   37420:	bl	2d4ec <__flatcc_error_report@@Base>
   37424:	mov	r3, #1
   37428:	strh	r3, [r4, #8]
   3742c:	mvn	r0, #0
   37430:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37434:	ldr	r2, [pc, #528]	; 3764c <__flatcc_fb_coerce_scalar_type@@Base+0x8d0>
   37438:	mov	r3, #0
   3743c:	ldr	r1, [r6, #4]
   37440:	mov	r0, r5
   37444:	str	r3, [sp, #4]
   37448:	str	r3, [sp]
   3744c:	add	r2, pc, r2
   37450:	bl	2d4ec <__flatcc_error_report@@Base>
   37454:	mov	r3, #1
   37458:	strh	r3, [r4, #8]
   3745c:	mvn	r0, #0
   37460:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37464:	ldr	r2, [pc, #484]	; 37650 <__flatcc_fb_coerce_scalar_type@@Base+0x8d4>
   37468:	mov	r3, #0
   3746c:	ldr	r1, [r6, #4]
   37470:	mov	r0, r5
   37474:	str	r3, [sp, #4]
   37478:	str	r3, [sp]
   3747c:	add	r2, pc, r2
   37480:	bl	2d4ec <__flatcc_error_report@@Base>
   37484:	mov	r3, #1
   37488:	strh	r3, [r4, #8]
   3748c:	mvn	r0, #0
   37490:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37494:	ldr	r2, [pc, #440]	; 37654 <__flatcc_fb_coerce_scalar_type@@Base+0x8d8>
   37498:	mov	r3, #0
   3749c:	ldr	r1, [r6, #4]
   374a0:	mov	r0, r5
   374a4:	str	r3, [sp, #4]
   374a8:	str	r3, [sp]
   374ac:	add	r2, pc, r2
   374b0:	bl	2d4ec <__flatcc_error_report@@Base>
   374b4:	mov	r3, #1
   374b8:	strh	r3, [r4, #8]
   374bc:	mvn	r0, #0
   374c0:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   374c4:	ldr	r2, [pc, #396]	; 37658 <__flatcc_fb_coerce_scalar_type@@Base+0x8dc>
   374c8:	mov	r3, #0
   374cc:	ldr	r1, [r6, #4]
   374d0:	mov	r0, r5
   374d4:	str	r3, [sp, #4]
   374d8:	str	r3, [sp]
   374dc:	add	r2, pc, r2
   374e0:	bl	2d4ec <__flatcc_error_report@@Base>
   374e4:	mov	r3, #1
   374e8:	strh	r3, [r4, #8]
   374ec:	mvn	r0, #0
   374f0:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   374f4:	ldr	r2, [pc, #352]	; 3765c <__flatcc_fb_coerce_scalar_type@@Base+0x8e0>
   374f8:	mov	r3, #0
   374fc:	ldr	r1, [r6, #4]
   37500:	mov	r0, r5
   37504:	str	r3, [sp, #4]
   37508:	str	r3, [sp]
   3750c:	add	r2, pc, r2
   37510:	bl	2d4ec <__flatcc_error_report@@Base>
   37514:	mov	r3, #1
   37518:	strh	r3, [r4, #8]
   3751c:	mvn	r0, #0
   37520:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37524:	ldr	r2, [pc, #308]	; 37660 <__flatcc_fb_coerce_scalar_type@@Base+0x8e4>
   37528:	mov	r3, #0
   3752c:	ldr	r1, [r6, #4]
   37530:	mov	r0, r5
   37534:	str	r3, [sp, #4]
   37538:	str	r3, [sp]
   3753c:	add	r2, pc, r2
   37540:	bl	2d4ec <__flatcc_error_report@@Base>
   37544:	mov	r3, #1
   37548:	strh	r3, [r4, #8]
   3754c:	mvn	r0, #0
   37550:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37554:	ldr	r2, [pc, #264]	; 37664 <__flatcc_fb_coerce_scalar_type@@Base+0x8e8>
   37558:	mov	r3, #0
   3755c:	ldr	r1, [r6, #4]
   37560:	mov	r0, r5
   37564:	str	r3, [sp, #4]
   37568:	str	r3, [sp]
   3756c:	add	r2, pc, r2
   37570:	bl	2d4ec <__flatcc_error_report@@Base>
   37574:	mov	r3, #1
   37578:	strh	r3, [r4, #8]
   3757c:	mvn	r0, #0
   37580:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   37584:	ldr	r2, [pc, #220]	; 37668 <__flatcc_fb_coerce_scalar_type@@Base+0x8ec>
   37588:	mov	r3, #0
   3758c:	ldr	r1, [r6, #4]
   37590:	mov	r0, r5
   37594:	str	r3, [sp, #4]
   37598:	str	r3, [sp]
   3759c:	add	r2, pc, r2
   375a0:	bl	2d4ec <__flatcc_error_report@@Base>
   375a4:	mov	r3, #1
   375a8:	strh	r3, [r4, #8]
   375ac:	mvn	r0, #0
   375b0:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   375b4:	ldr	r2, [pc, #176]	; 3766c <__flatcc_fb_coerce_scalar_type@@Base+0x8f0>
   375b8:	mov	r3, #0
   375bc:	ldr	r1, [r6, #4]
   375c0:	mov	r0, r5
   375c4:	str	r3, [sp, #4]
   375c8:	str	r3, [sp]
   375cc:	add	r2, pc, r2
   375d0:	bl	2d4ec <__flatcc_error_report@@Base>
   375d4:	mov	r3, #1
   375d8:	strh	r3, [r4, #8]
   375dc:	mvn	r0, #0
   375e0:	b	36e88 <__flatcc_fb_coerce_scalar_type@@Base+0x10c>
   375e4:	ldr	r3, [pc, #132]	; 37670 <__flatcc_fb_coerce_scalar_type@@Base+0x8f4>
   375e8:	ldr	r1, [pc, #132]	; 37674 <__flatcc_fb_coerce_scalar_type@@Base+0x8f8>
   375ec:	ldr	r0, [pc, #132]	; 37678 <__flatcc_fb_coerce_scalar_type@@Base+0x8fc>
   375f0:	add	r3, pc, r3
   375f4:	mov	r2, #52	; 0x34
   375f8:	add	r1, pc, r1
   375fc:	add	r0, pc, r0
   37600:	bl	14030 <__assert_fail@plt>
   37604:	andeq	r1, r2, r0, lsr #23
   37608:			; <UNDEFINED> instruction: 0x00021bb8
   3760c:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   37610:	andeq	r1, r2, r0, asr #23
   37614:	andeq	r1, r2, ip, asr #23
   37618:	andeq	r1, r2, r4, ror sp
   3761c:	andeq	r1, r2, r0, asr fp
   37620:	ldrdeq	r1, [r2], -r0
   37624:	strdeq	r1, [r2], -r0
   37628:	andeq	r1, r2, ip, lsr fp
   3762c:	andeq	r1, r2, ip, lsr fp
   37630:	andeq	r1, r2, r0, ror #23
   37634:	andeq	r1, r2, ip, lsl #18
   37638:			; <UNDEFINED> instruction: 0xffff8000
   3763c:	andeq	r1, r2, ip, lsr #18
   37640:	andeq	r1, r2, r4, asr r9
   37644:	ldrdeq	r1, [r2], -ip
   37648:	strdeq	r1, [r2], -r4
   3764c:	andeq	r1, r2, r8, asr #12
   37650:	andeq	r1, r2, ip, asr #13
   37654:	andeq	r1, r2, r0, asr #12
   37658:	andeq	r1, r2, r4, ror #13
   3765c:	andeq	r1, r2, r8, lsl #15
   37660:	andeq	r1, r2, r8, ror #13
   37664:	muleq	r2, r0, r7
   37668:	ldrdeq	r1, [r2], -r8
   3766c:	ldrdeq	r1, [r2], -r4
   37670:	ldrdeq	r1, [r2], -r0
   37674:	andeq	r1, r2, r8, ror #7
   37678:	andeq	r1, r2, r4, asr #8
   3767c:	push	{r4, r5, r6, lr}
   37680:	mov	r4, r0
   37684:	ldr	ip, [r0, #28]
   37688:	sub	sp, sp, #8
   3768c:	mov	r3, #1
   37690:	ldr	r0, [r0, #40]	; 0x28
   37694:	ldr	r6, [r4, #48]	; 0x30
   37698:	mov	r5, r2
   3769c:	str	r3, [sp]
   376a0:	add	r2, r1, ip
   376a4:	add	r1, r4, #60	; 0x3c
   376a8:	blx	r6
   376ac:	cmp	r0, #0
   376b0:	bne	376e8 <__flatcc_fb_coerce_scalar_type@@Base+0x96c>
   376b4:	ldr	r1, [r4, #28]
   376b8:	ldr	r3, [r4, #64]	; 0x40
   376bc:	ldr	r2, [r4, #60]	; 0x3c
   376c0:	sub	r3, r3, r1
   376c4:	ldr	ip, [r4, #32]
   376c8:	cmp	r3, r5
   376cc:	movcs	r3, r5
   376d0:	add	r2, r2, r1
   376d4:	str	r3, [r4, #24]
   376d8:	str	r2, [r4, #16]
   376dc:	str	r5, [ip, #4]
   376e0:	add	sp, sp, #8
   376e4:	pop	{r4, r5, r6, pc}
   376e8:	mvn	r0, #0
   376ec:	b	376e0 <__flatcc_fb_coerce_scalar_type@@Base+0x964>

000376f0 <flatcc_builder_default_alloc@@Base>:
   376f0:	push	{r4, r5, r6, r7, r8, lr}
   376f4:	subs	r5, r2, #0
   376f8:	mov	r6, r1
   376fc:	bne	37720 <flatcc_builder_default_alloc@@Base+0x30>
   37700:	ldr	r0, [r1]
   37704:	cmp	r0, #0
   37708:	popeq	{r4, r5, r6, r7, r8, pc}
   3770c:	bl	13ec8 <free@plt>
   37710:	str	r5, [r6]
   37714:	str	r5, [r6, #4]
   37718:	mov	r0, r5
   3771c:	pop	{r4, r5, r6, r7, r8, pc}
   37720:	mov	r7, r3
   37724:	ldr	r3, [sp, #24]
   37728:	sub	r2, r3, #1
   3772c:	cmp	r2, #6
   37730:	addls	pc, pc, r2, lsl #2
   37734:	b	377d0 <flatcc_builder_default_alloc@@Base+0xe0>
   37738:	b	377a4 <flatcc_builder_default_alloc@@Base+0xb4>
   3773c:	b	377d0 <flatcc_builder_default_alloc@@Base+0xe0>
   37740:	b	377d0 <flatcc_builder_default_alloc@@Base+0xe0>
   37744:	b	377c8 <flatcc_builder_default_alloc@@Base+0xd8>
   37748:	b	37754 <flatcc_builder_default_alloc@@Base+0x64>
   3774c:	b	377d0 <flatcc_builder_default_alloc@@Base+0xe0>
   37750:	b	377c0 <flatcc_builder_default_alloc@@Base+0xd0>
   37754:	mov	r4, r5
   37758:	ldr	r3, [r6, #4]
   3775c:	cmp	r5, r3
   37760:	bhi	3776c <flatcc_builder_default_alloc@@Base+0x7c>
   37764:	cmp	r4, r3, lsr #1
   37768:	bls	377d8 <flatcc_builder_default_alloc@@Base+0xe8>
   3776c:	mov	r1, r4
   37770:	ldr	r0, [r6]
   37774:	bl	13f04 <realloc@plt>
   37778:	subs	r5, r0, #0
   3777c:	beq	377f4 <flatcc_builder_default_alloc@@Base+0x104>
   37780:	cmp	r7, #0
   37784:	beq	37794 <flatcc_builder_default_alloc@@Base+0xa4>
   37788:	ldr	r0, [r6, #4]
   3778c:	cmp	r0, r4
   37790:	bcc	377e0 <flatcc_builder_default_alloc@@Base+0xf0>
   37794:	str	r5, [r6]
   37798:	str	r4, [r6, #4]
   3779c:	mov	r0, #0
   377a0:	pop	{r4, r5, r6, r7, r8, pc}
   377a4:	mov	r4, #256	; 0x100
   377a8:	cmp	r5, r4
   377ac:	bls	37758 <flatcc_builder_default_alloc@@Base+0x68>
   377b0:	lsl	r4, r4, #1
   377b4:	cmp	r5, r4
   377b8:	bhi	377b0 <flatcc_builder_default_alloc@@Base+0xc0>
   377bc:	b	37758 <flatcc_builder_default_alloc@@Base+0x68>
   377c0:	mov	r4, #64	; 0x40
   377c4:	b	377a8 <flatcc_builder_default_alloc@@Base+0xb8>
   377c8:	mov	r4, #288	; 0x120
   377cc:	b	377a8 <flatcc_builder_default_alloc@@Base+0xb8>
   377d0:	mov	r4, #32
   377d4:	b	377a8 <flatcc_builder_default_alloc@@Base+0xb8>
   377d8:	mov	r0, #0
   377dc:	pop	{r4, r5, r6, r7, r8, pc}
   377e0:	sub	r2, r4, r0
   377e4:	mov	r1, #0
   377e8:	add	r0, r5, r0
   377ec:	bl	13f94 <memset@plt>
   377f0:	b	37794 <flatcc_builder_default_alloc@@Base+0xa4>
   377f4:	mvn	r0, #0
   377f8:	pop	{r4, r5, r6, r7, r8, pc}
   377fc:	push	{r4, r5, lr}
   37800:	cmp	r2, #0
   37804:	ldr	lr, [pc, #248]	; 37904 <flatcc_builder_default_alloc@@Base+0x214>
   37808:	sub	sp, sp, #84	; 0x54
   3780c:	mov	ip, r0
   37810:	add	lr, pc, lr
   37814:	bne	37824 <flatcc_builder_default_alloc@@Base+0x134>
   37818:	ldrh	r2, [r0, #132]	; 0x84
   3781c:	cmp	r2, #0
   37820:	moveq	r2, #1
   37824:	ldrh	r0, [r1]
   37828:	cmp	r0, #3
   3782c:	movls	r4, #4
   37830:	movls	r0, r4
   37834:	strhls	r4, [r1]
   37838:	cmp	r2, r0
   3783c:	strhhi	r2, [r1]
   37840:	cmp	r3, #0
   37844:	bne	37858 <flatcc_builder_default_alloc@@Base+0x168>
   37848:	ldr	r4, [ip, #140]	; 0x8c
   3784c:	sub	r2, r2, #1
   37850:	ands	r3, r2, r4
   37854:	bne	37864 <flatcc_builder_default_alloc@@Base+0x174>
   37858:	mov	r0, #0
   3785c:	add	sp, sp, #84	; 0x54
   37860:	pop	{r4, r5, pc}
   37864:	ldr	r2, [pc, #156]	; 37908 <flatcc_builder_default_alloc@@Base+0x218>
   37868:	add	r1, r4, r3
   3786c:	str	r3, [sp, #8]
   37870:	ldr	r0, [lr, r2]
   37874:	cmp	r4, r1
   37878:	mov	r2, #1
   3787c:	str	r0, [sp, #16]
   37880:	str	r3, [sp, #20]
   37884:	str	r1, [ip, #140]	; 0x8c
   37888:	str	r2, [sp, #12]
   3788c:	bgt	378dc <flatcc_builder_default_alloc@@Base+0x1ec>
   37890:	ldr	r0, [ip, #36]	; 0x24
   37894:	add	r1, sp, #16
   37898:	str	r3, [sp]
   3789c:	mov	r3, r4
   378a0:	ldr	r5, [ip, #44]	; 0x2c
   378a4:	blx	r5
   378a8:	cmp	r0, #0
   378ac:	bne	378e0 <flatcc_builder_default_alloc@@Base+0x1f0>
   378b0:	cmn	r4, #1
   378b4:	bne	37858 <flatcc_builder_default_alloc@@Base+0x168>
   378b8:	ldr	r3, [pc, #76]	; 3790c <flatcc_builder_default_alloc@@Base+0x21c>
   378bc:	ldr	r1, [pc, #76]	; 37910 <flatcc_builder_default_alloc@@Base+0x220>
   378c0:	ldr	r0, [pc, #76]	; 37914 <flatcc_builder_default_alloc@@Base+0x224>
   378c4:	add	r3, pc, r3
   378c8:	ldr	r2, [pc, #72]	; 37918 <flatcc_builder_default_alloc@@Base+0x228>
   378cc:	add	r3, r3, #60	; 0x3c
   378d0:	add	r1, pc, r1
   378d4:	add	r0, pc, r0
   378d8:	bl	14030 <__assert_fail@plt>
   378dc:	bl	14150 <__assert_fail@plt+0x120>
   378e0:	ldr	r3, [pc, #52]	; 3791c <flatcc_builder_default_alloc@@Base+0x22c>
   378e4:	ldr	r1, [pc, #52]	; 37920 <flatcc_builder_default_alloc@@Base+0x230>
   378e8:	ldr	r0, [pc, #52]	; 37924 <flatcc_builder_default_alloc@@Base+0x234>
   378ec:	add	r3, pc, r3
   378f0:	ldr	r2, [pc, #48]	; 37928 <flatcc_builder_default_alloc@@Base+0x238>
   378f4:	add	r3, r3, #16
   378f8:	add	r1, pc, r1
   378fc:	add	r0, pc, r0
   37900:	bl	14030 <__assert_fail@plt>
   37904:	andeq	r2, r3, r8, ror #15
   37908:	muleq	r0, r8, r0
   3790c:	andeq	r1, r2, ip, asr #11
   37910:	andeq	r1, r2, r0, lsl sp
   37914:	muleq	r1, r0, r5
   37918:			; <UNDEFINED> instruction: 0x000002be
   3791c:	andeq	r1, r2, r4, lsr #11
   37920:	andeq	r1, r2, r8, ror #25
   37924:	andeq	r0, r1, r8, ror #10
   37928:	andeq	r0, r0, r5, lsr #5
   3792c:	push	{r4, r5, r6, r7, lr}
   37930:	mov	r5, r1
   37934:	ldr	r1, [r0, #156]	; 0x9c
   37938:	ldr	r3, [r0, #160]	; 0xa0
   3793c:	add	r2, r1, #1
   37940:	cmp	r2, r3
   37944:	sub	sp, sp, #12
   37948:	mov	r4, r0
   3794c:	str	r2, [r0, #156]	; 0x9c
   37950:	ble	379c0 <flatcc_builder_default_alloc@@Base+0x2d0>
   37954:	ldr	r3, [r0, #176]	; 0xb0
   37958:	cmp	r3, #0
   3795c:	cmpgt	r2, r3
   37960:	movgt	r3, #1
   37964:	movle	r3, #0
   37968:	bgt	37a34 <flatcc_builder_default_alloc@@Base+0x344>
   3796c:	add	r1, r1, r1, lsl #3
   37970:	ldr	r0, [r0, #88]	; 0x58
   37974:	lsl	r6, r1, #2
   37978:	add	r2, r6, #36	; 0x24
   3797c:	cmp	r2, r0
   37980:	bhi	37a10 <flatcc_builder_default_alloc@@Base+0x320>
   37984:	ldr	r3, [r4, #84]	; 0x54
   37988:	add	r3, r3, r6
   3798c:	cmp	r3, #0
   37990:	str	r3, [r4, #32]
   37994:	beq	37a34 <flatcc_builder_default_alloc@@Base+0x344>
   37998:	ldr	r2, [r4, #88]	; 0x58
   3799c:	ldr	r0, [pc, #152]	; 37a3c <flatcc_builder_default_alloc@@Base+0x34c>
   379a0:	ldr	r1, [r4, #176]	; 0xb0
   379a4:	umull	r0, r2, r0, r2
   379a8:	lsr	r2, r2, #3
   379ac:	cmp	r1, #0
   379b0:	cmpgt	r2, r1
   379b4:	str	r2, [r4, #160]	; 0xa0
   379b8:	strgt	r1, [r4, #160]	; 0xa0
   379bc:	b	379cc <flatcc_builder_default_alloc@@Base+0x2dc>
   379c0:	ldr	r3, [r0, #32]
   379c4:	add	r3, r3, #36	; 0x24
   379c8:	str	r3, [r0, #32]
   379cc:	ldr	r0, [r4, #20]
   379d0:	ldr	ip, [r4, #28]
   379d4:	ldrh	lr, [r4, #130]	; 0x82
   379d8:	add	r2, r0, ip
   379dc:	mov	r1, #0
   379e0:	str	r0, [r3, #8]
   379e4:	strh	lr, [r3, #12]
   379e8:	add	r2, r2, #7
   379ec:	mvn	lr, #3
   379f0:	mov	r0, r1
   379f4:	bic	r2, r2, #7
   379f8:	strh	r5, [r4, #130]	; 0x82
   379fc:	stm	r3, {ip, lr}
   37a00:	str	r2, [r4, #28]
   37a04:	str	r1, [r4, #20]
   37a08:	add	sp, sp, #12
   37a0c:	pop	{r4, r5, r6, r7, pc}
   37a10:	mov	r1, #4
   37a14:	ldr	r0, [r4, #40]	; 0x28
   37a18:	str	r1, [sp]
   37a1c:	add	r1, r4, #84	; 0x54
   37a20:	ldr	r7, [r4, #48]	; 0x30
   37a24:	blx	r7
   37a28:	cmp	r0, #0
   37a2c:	beq	37984 <flatcc_builder_default_alloc@@Base+0x294>
   37a30:	bl	14120 <__assert_fail@plt+0xf0>
   37a34:	mvn	r0, #0
   37a38:	b	37a08 <flatcc_builder_default_alloc@@Base+0x318>
   37a3c:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   37a40:	push	{r4, r5, r6, r7, lr}
   37a44:	mov	r5, r0
   37a48:	ldrh	r0, [r0, #128]	; 0x80
   37a4c:	sub	sp, sp, #92	; 0x5c
   37a50:	add	ip, sp, #12
   37a54:	cmp	r0, #3
   37a58:	movls	r0, #4
   37a5c:	strhls	r0, [r5, #128]	; 0x80
   37a60:	ldr	r4, [pc, #448]	; 37c28 <flatcc_builder_default_alloc@@Base+0x538>
   37a64:	ldr	r0, [r5, #136]	; 0x88
   37a68:	mov	r7, #4
   37a6c:	mov	r6, #1
   37a70:	str	ip, [sp, #24]
   37a74:	lsls	ip, r2, #2
   37a78:	add	r4, pc, r4
   37a7c:	str	r2, [sp, #12]
   37a80:	and	lr, r0, #3
   37a84:	str	r7, [sp, #16]
   37a88:	str	r7, [sp, #28]
   37a8c:	str	r6, [sp, #20]
   37a90:	beq	37aac <flatcc_builder_default_alloc@@Base+0x3bc>
   37a94:	add	r7, ip, r7
   37a98:	mov	r6, #2
   37a9c:	str	r1, [sp, #32]
   37aa0:	str	ip, [sp, #36]	; 0x24
   37aa4:	str	r7, [sp, #16]
   37aa8:	str	r6, [sp, #20]
   37aac:	cmp	lr, #0
   37ab0:	beq	37ae0 <flatcc_builder_default_alloc@@Base+0x3f0>
   37ab4:	ldr	ip, [sp, #20]
   37ab8:	ldr	r6, [pc, #364]	; 37c2c <flatcc_builder_default_alloc@@Base+0x53c>
   37abc:	add	ip, ip, #1
   37ac0:	add	r7, r7, lr
   37ac4:	str	r7, [sp, #16]
   37ac8:	ldr	r6, [r4, r6]
   37acc:	add	r4, sp, #88	; 0x58
   37ad0:	add	r4, r4, ip, lsl #3
   37ad4:	str	ip, [sp, #20]
   37ad8:	str	r6, [r4, #-72]	; 0xffffffb8
   37adc:	str	lr, [r4, #-68]	; 0xffffffbc
   37ae0:	cmp	r2, #0
   37ae4:	sub	r4, r0, r7
   37ae8:	beq	37b7c <flatcc_builder_default_alloc@@Base+0x48c>
   37aec:	add	r6, r3, r2
   37af0:	mvn	ip, #3
   37af4:	mov	r2, r3
   37af8:	b	37b30 <flatcc_builder_default_alloc@@Base+0x440>
   37afc:	sub	r0, ip, r4
   37b00:	add	r0, r0, lr
   37b04:	cmp	r3, #0
   37b08:	str	r0, [r1]
   37b0c:	beq	37b1c <flatcc_builder_default_alloc@@Base+0x42c>
   37b10:	ldrb	r0, [r2]
   37b14:	cmp	r0, #0
   37b18:	beq	37bdc <flatcc_builder_default_alloc@@Base+0x4ec>
   37b1c:	add	r2, r2, #1
   37b20:	cmp	r2, r6
   37b24:	add	r1, r1, #4
   37b28:	sub	ip, ip, #4
   37b2c:	beq	37b74 <flatcc_builder_default_alloc@@Base+0x484>
   37b30:	ldr	lr, [r1]
   37b34:	cmp	lr, #0
   37b38:	bne	37afc <flatcc_builder_default_alloc@@Base+0x40c>
   37b3c:	cmp	r3, #0
   37b40:	beq	37bb8 <flatcc_builder_default_alloc@@Base+0x4c8>
   37b44:	ldrb	r0, [r2]
   37b48:	cmp	r0, #0
   37b4c:	beq	37b1c <flatcc_builder_default_alloc@@Base+0x42c>
   37b50:	ldr	r3, [pc, #216]	; 37c30 <flatcc_builder_default_alloc@@Base+0x540>
   37b54:	ldr	r1, [pc, #216]	; 37c34 <flatcc_builder_default_alloc@@Base+0x544>
   37b58:	ldr	r0, [pc, #216]	; 37c38 <flatcc_builder_default_alloc@@Base+0x548>
   37b5c:	add	r3, pc, r3
   37b60:	ldr	r2, [pc, #212]	; 37c3c <flatcc_builder_default_alloc@@Base+0x54c>
   37b64:	add	r3, r3, #76	; 0x4c
   37b68:	add	r1, pc, r1
   37b6c:	add	r0, pc, r0
   37b70:	bl	14030 <__assert_fail@plt>
   37b74:	ldr	r0, [r5, #136]	; 0x88
   37b78:	sub	r4, r0, r7
   37b7c:	cmp	r4, r0
   37b80:	bge	37c24 <flatcc_builder_default_alloc@@Base+0x534>
   37b84:	ldr	r0, [r5, #36]	; 0x24
   37b88:	ldr	r2, [sp, #20]
   37b8c:	str	r7, [sp]
   37b90:	mov	r3, r4
   37b94:	ldr	r6, [r5, #44]	; 0x2c
   37b98:	add	r1, sp, #24
   37b9c:	blx	r6
   37ba0:	cmp	r0, #0
   37ba4:	bne	37c00 <flatcc_builder_default_alloc@@Base+0x510>
   37ba8:	mov	r0, r4
   37bac:	str	r4, [r5, #136]	; 0x88
   37bb0:	add	sp, sp, #92	; 0x5c
   37bb4:	pop	{r4, r5, r6, r7, pc}
   37bb8:	ldr	r3, [pc, #128]	; 37c40 <flatcc_builder_default_alloc@@Base+0x550>
   37bbc:	ldr	r1, [pc, #128]	; 37c44 <flatcc_builder_default_alloc@@Base+0x554>
   37bc0:	ldr	r0, [pc, #128]	; 37c48 <flatcc_builder_default_alloc@@Base+0x558>
   37bc4:	add	r3, pc, r3
   37bc8:	ldr	r2, [pc, #124]	; 37c4c <flatcc_builder_default_alloc@@Base+0x55c>
   37bcc:	add	r3, r3, #76	; 0x4c
   37bd0:	add	r1, pc, r1
   37bd4:	add	r0, pc, r0
   37bd8:	bl	14030 <__assert_fail@plt>
   37bdc:	ldr	r3, [pc, #108]	; 37c50 <flatcc_builder_default_alloc@@Base+0x560>
   37be0:	ldr	r1, [pc, #108]	; 37c54 <flatcc_builder_default_alloc@@Base+0x564>
   37be4:	ldr	r0, [pc, #108]	; 37c58 <flatcc_builder_default_alloc@@Base+0x568>
   37be8:	add	r3, pc, r3
   37bec:	ldr	r2, [pc, #104]	; 37c5c <flatcc_builder_default_alloc@@Base+0x56c>
   37bf0:	add	r3, r3, #76	; 0x4c
   37bf4:	add	r1, pc, r1
   37bf8:	add	r0, pc, r0
   37bfc:	bl	14030 <__assert_fail@plt>
   37c00:	ldr	r3, [pc, #88]	; 37c60 <flatcc_builder_default_alloc@@Base+0x570>
   37c04:	ldr	r1, [pc, #88]	; 37c64 <flatcc_builder_default_alloc@@Base+0x574>
   37c08:	ldr	r0, [pc, #88]	; 37c68 <flatcc_builder_default_alloc@@Base+0x578>
   37c0c:	add	r3, pc, r3
   37c10:	ldr	r2, [pc, #84]	; 37c6c <flatcc_builder_default_alloc@@Base+0x57c>
   37c14:	add	r3, r3, #28
   37c18:	add	r1, pc, r1
   37c1c:	add	r0, pc, r0
   37c20:	bl	14030 <__assert_fail@plt>
   37c24:	bl	14188 <__assert_fail@plt+0x158>
   37c28:	andeq	r2, r3, r0, lsl #11
   37c2c:	muleq	r0, r8, r0
   37c30:	andeq	r1, r2, r4, lsr r3
   37c34:	andeq	r1, r2, r8, ror sl
   37c38:	andeq	r1, r2, r0, lsl #22
   37c3c:			; <UNDEFINED> instruction: 0x000005b5
   37c40:	andeq	r1, r2, ip, asr #5
   37c44:	andeq	r1, r2, r0, lsl sl
   37c48:	muleq	r1, r0, r2
   37c4c:			; <UNDEFINED> instruction: 0x000005b7
   37c50:	andeq	r1, r2, r8, lsr #5
   37c54:	andeq	r1, r2, ip, ror #19
   37c58:	andeq	r1, r2, r4, ror #20
   37c5c:			; <UNDEFINED> instruction: 0x000005b1
   37c60:	andeq	r1, r2, r4, lsl #5
   37c64:	andeq	r1, r2, r8, asr #19
   37c68:	andeq	r0, r1, r8, asr #4
   37c6c:	andeq	r0, r0, fp, lsl #5

00037c70 <flatcc_builder_flush_vtable_cache@@Base>:
   37c70:	ldr	r3, [r0, #116]	; 0x74
   37c74:	cmp	r3, #0
   37c78:	bxeq	lr
   37c7c:	ldr	r2, [r0, #96]	; 0x60
   37c80:	push	{r4, lr}
   37c84:	mov	r1, #0
   37c88:	mov	r4, r0
   37c8c:	ldr	r0, [r0, #92]	; 0x5c
   37c90:	bl	13f94 <memset@plt>
   37c94:	mov	r2, #16
   37c98:	mov	r3, #0
   37c9c:	str	r2, [r4, #124]	; 0x7c
   37ca0:	str	r3, [r4, #120]	; 0x78
   37ca4:	pop	{r4, pc}

00037ca8 <flatcc_builder_custom_init@@Base>:
   37ca8:	push	{r4, r5, r6, r7, r8, lr}
   37cac:	mov	r6, r1
   37cb0:	mov	r7, r2
   37cb4:	mov	r1, #0
   37cb8:	mov	r2, #232	; 0xe8
   37cbc:	mov	r5, r3
   37cc0:	mov	r4, r0
   37cc4:	ldr	r8, [sp, #24]
   37cc8:	bl	13f94 <memset@plt>
   37ccc:	ldr	r3, [pc, #76]	; 37d20 <flatcc_builder_custom_init@@Base+0x78>
   37cd0:	cmp	r6, #0
   37cd4:	add	r3, pc, r3
   37cd8:	beq	37d08 <flatcc_builder_custom_init@@Base+0x60>
   37cdc:	cmp	r5, #0
   37ce0:	beq	37cfc <flatcc_builder_custom_init@@Base+0x54>
   37ce4:	str	r8, [r4, #40]	; 0x28
   37ce8:	str	r5, [r4, #48]	; 0x30
   37cec:	str	r7, [r4, #36]	; 0x24
   37cf0:	str	r6, [r4, #44]	; 0x2c
   37cf4:	mov	r0, #0
   37cf8:	pop	{r4, r5, r6, r7, r8, pc}
   37cfc:	ldr	r2, [pc, #32]	; 37d24 <flatcc_builder_custom_init@@Base+0x7c>
   37d00:	ldr	r5, [r3, r2]
   37d04:	b	37ce4 <flatcc_builder_custom_init@@Base+0x3c>
   37d08:	ldr	r2, [pc, #24]	; 37d28 <flatcc_builder_custom_init@@Base+0x80>
   37d0c:	mov	r1, #1
   37d10:	str	r1, [r4, #184]	; 0xb8
   37d14:	add	r7, r4, #188	; 0xbc
   37d18:	ldr	r6, [r3, r2]
   37d1c:	b	37cdc <flatcc_builder_custom_init@@Base+0x34>
   37d20:	andeq	r2, r3, r4, lsr #6
   37d24:	andeq	r0, r0, r4, lsr #1
   37d28:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>

00037d2c <flatcc_builder_init@@Base>:
   37d2c:	push	{lr}		; (str lr, [sp, #-4]!)
   37d30:	sub	sp, sp, #12
   37d34:	mov	r3, #0
   37d38:	str	r3, [sp]
   37d3c:	mov	r2, r3
   37d40:	mov	r1, r3
   37d44:	bl	37ca8 <flatcc_builder_custom_init@@Base>
   37d48:	add	sp, sp, #12
   37d4c:	pop	{pc}		; (ldr pc, [sp], #4)

00037d50 <flatcc_builder_custom_reset@@Base>:
   37d50:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   37d54:	add	r7, r0, #52	; 0x34
   37d58:	mov	r4, #0
   37d5c:	sub	sp, sp, #12
   37d60:	mov	r5, r0
   37d64:	mov	sl, r1
   37d68:	mov	r8, r2
   37d6c:	mov	r6, r7
   37d70:	mov	r9, r4
   37d74:	mov	fp, #1
   37d78:	b	37dcc <flatcc_builder_custom_reset@@Base+0x7c>
   37d7c:	cmp	r4, #5
   37d80:	cmpne	r8, #0
   37d84:	beq	37db0 <flatcc_builder_custom_reset@@Base+0x60>
   37d88:	ldr	r0, [r5, #40]	; 0x28
   37d8c:	mov	r3, fp
   37d90:	str	r4, [sp]
   37d94:	mov	r2, #1
   37d98:	mov	r1, r6
   37d9c:	ldr	ip, [r5, #48]	; 0x30
   37da0:	blx	ip
   37da4:	cmp	r0, #0
   37da8:	bne	37e90 <flatcc_builder_custom_reset@@Base+0x140>
   37dac:	ldr	r0, [r7, r4, lsl #3]
   37db0:	ldr	r2, [r6, #4]
   37db4:	mov	r1, r9
   37db8:	bl	13f94 <memset@plt>
   37dbc:	add	r4, r4, #1
   37dc0:	cmp	r4, #8
   37dc4:	add	r6, r6, #8
   37dc8:	beq	37e08 <flatcc_builder_custom_reset@@Base+0xb8>
   37dcc:	ldr	r0, [r7, r4, lsl #3]
   37dd0:	cmp	r0, #0
   37dd4:	bne	37d7c <flatcc_builder_custom_reset@@Base+0x2c>
   37dd8:	ldr	r3, [r6, #4]
   37ddc:	cmp	r3, #0
   37de0:	beq	37dbc <flatcc_builder_custom_reset@@Base+0x6c>
   37de4:	ldr	r3, [pc, #172]	; 37e98 <flatcc_builder_custom_reset@@Base+0x148>
   37de8:	ldr	r1, [pc, #172]	; 37e9c <flatcc_builder_custom_reset@@Base+0x14c>
   37dec:	ldr	r0, [pc, #172]	; 37ea0 <flatcc_builder_custom_reset@@Base+0x150>
   37df0:	add	r3, pc, r3
   37df4:	ldr	r2, [pc, #168]	; 37ea4 <flatcc_builder_custom_reset@@Base+0x154>
   37df8:	add	r3, r3, #108	; 0x6c
   37dfc:	add	r1, pc, r1
   37e00:	add	r0, pc, r0
   37e04:	bl	14030 <__assert_fail@plt>
   37e08:	ldr	r2, [r5, #124]	; 0x7c
   37e0c:	mov	r3, #0
   37e10:	ldr	r0, [r5, #60]	; 0x3c
   37e14:	cmp	r2, r3
   37e18:	str	r3, [r5, #120]	; 0x78
   37e1c:	ldr	r1, [r5, #76]	; 0x4c
   37e20:	movne	r3, #16
   37e24:	ldr	r2, [r5, #52]	; 0x34
   37e28:	str	r0, [r5, #16]
   37e2c:	ldr	r0, [r5, #184]	; 0xb8
   37e30:	strne	r3, [r5, #124]	; 0x7c
   37e34:	mov	r3, #0
   37e38:	cmp	sl, #0
   37e3c:	strne	r3, [r5, #172]	; 0xac
   37e40:	strne	r3, [r5, #176]	; 0xb0
   37e44:	strne	r3, [r5, #180]	; 0xb4
   37e48:	cmp	r0, #0
   37e4c:	stm	r5, {r1, r2}
   37e50:	strh	r3, [r5, #128]	; 0x80
   37e54:	str	r3, [r5, #136]	; 0x88
   37e58:	str	r3, [r5, #140]	; 0x8c
   37e5c:	str	r3, [r5, #156]	; 0x9c
   37e60:	str	r3, [r5, #160]	; 0xa0
   37e64:	str	r3, [r5, #20]
   37e68:	str	r3, [r5, #24]
   37e6c:	str	r3, [r5, #148]	; 0x94
   37e70:	str	r3, [r5, #152]	; 0x98
   37e74:	str	r3, [r5, #32]
   37e78:	beq	37e88 <flatcc_builder_custom_reset@@Base+0x138>
   37e7c:	add	r0, r5, #188	; 0xbc
   37e80:	bl	3b92c <flatcc_emitter_reset@@Base>
   37e84:	mov	r0, #0
   37e88:	add	sp, sp, #12
   37e8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   37e90:	mvn	r0, #0
   37e94:	b	37e88 <flatcc_builder_custom_reset@@Base+0x138>
   37e98:	andeq	r1, r2, r0, lsr #1
   37e9c:	andeq	r1, r2, r4, ror #15
   37ea0:	andeq	r1, r2, ip, ror r8
   37ea4:			; <UNDEFINED> instruction: 0x000001b2

00037ea8 <flatcc_builder_reset@@Base>:
   37ea8:	mov	r2, #0
   37eac:	mov	r1, r2
   37eb0:	b	37d50 <flatcc_builder_custom_reset@@Base>

00037eb4 <flatcc_builder_clear@@Base>:
   37eb4:	push	{r4, r5, r6, r7, r8, lr}
   37eb8:	mov	r4, #0
   37ebc:	sub	sp, sp, #8
   37ec0:	mov	r6, r0
   37ec4:	add	r5, r0, #52	; 0x34
   37ec8:	mov	r8, r4
   37ecc:	ldr	r0, [r6, #40]	; 0x28
   37ed0:	mov	r1, r5
   37ed4:	str	r4, [sp]
   37ed8:	mov	r3, r8
   37edc:	add	r4, r4, #1
   37ee0:	ldr	r7, [r6, #48]	; 0x30
   37ee4:	mov	r2, #0
   37ee8:	blx	r7
   37eec:	cmp	r4, #8
   37ef0:	add	r5, r5, #8
   37ef4:	bne	37ecc <flatcc_builder_clear@@Base+0x18>
   37ef8:	ldr	r3, [r6, #184]	; 0xb8
   37efc:	cmp	r3, #0
   37f00:	beq	37f0c <flatcc_builder_clear@@Base+0x58>
   37f04:	add	r0, r6, #188	; 0xbc
   37f08:	bl	3b9e8 <flatcc_emitter_clear@@Base>
   37f0c:	mov	r0, r6
   37f10:	mov	r2, #232	; 0xe8
   37f14:	mov	r1, #0
   37f18:	add	sp, sp, #8
   37f1c:	pop	{r4, r5, r6, r7, r8, lr}
   37f20:	b	13f94 <memset@plt>

00037f24 <flatcc_builder_enter_user_frame_ptr@@Base>:
   37f24:	push	{r4, r5, r6, r7, r8, lr}
   37f28:	add	r4, r1, #3
   37f2c:	bic	r4, r4, #3
   37f30:	ldr	r7, [r0, #228]	; 0xe4
   37f34:	add	r4, r4, #4
   37f38:	ldr	r3, [r0, #112]	; 0x70
   37f3c:	add	r2, r4, r7
   37f40:	cmp	r2, r3
   37f44:	sub	sp, sp, #8
   37f48:	mov	r6, r0
   37f4c:	bhi	37f94 <flatcc_builder_enter_user_frame_ptr@@Base+0x70>
   37f50:	ldr	r8, [r6, #108]	; 0x6c
   37f54:	adds	r5, r8, r7
   37f58:	beq	37fbc <flatcc_builder_enter_user_frame_ptr@@Base+0x98>
   37f5c:	mov	r2, r4
   37f60:	mov	r1, #0
   37f64:	mov	r0, r5
   37f68:	bl	13f94 <memset@plt>
   37f6c:	ldr	r3, [r6, #224]	; 0xe0
   37f70:	add	r0, r5, #4
   37f74:	str	r3, [r8, r7]
   37f78:	ldr	r3, [r6, #228]	; 0xe4
   37f7c:	add	r4, r4, r3
   37f80:	add	r3, r3, #4
   37f84:	str	r4, [r6, #228]	; 0xe4
   37f88:	str	r3, [r6, #224]	; 0xe0
   37f8c:	add	sp, sp, #8
   37f90:	pop	{r4, r5, r6, r7, r8, pc}
   37f94:	mov	r3, #7
   37f98:	ldr	r0, [r0, #40]	; 0x28
   37f9c:	add	r1, r6, #108	; 0x6c
   37fa0:	str	r3, [sp]
   37fa4:	mov	r3, #0
   37fa8:	ldr	r5, [r6, #48]	; 0x30
   37fac:	blx	r5
   37fb0:	cmp	r0, #0
   37fb4:	beq	37f50 <flatcc_builder_enter_user_frame_ptr@@Base+0x2c>
   37fb8:	bl	14120 <__assert_fail@plt+0xf0>
   37fbc:	mov	r0, r5
   37fc0:	b	37f8c <flatcc_builder_enter_user_frame_ptr@@Base+0x68>

00037fc4 <flatcc_builder_enter_user_frame@@Base>:
   37fc4:	push	{r4, r5, r6, r7, lr}
   37fc8:	add	r4, r1, #3
   37fcc:	bic	r4, r4, #3
   37fd0:	ldr	r6, [r0, #228]	; 0xe4
   37fd4:	add	r4, r4, #4
   37fd8:	ldr	r3, [r0, #112]	; 0x70
   37fdc:	add	r2, r4, r6
   37fe0:	cmp	r2, r3
   37fe4:	sub	sp, sp, #12
   37fe8:	mov	r5, r0
   37fec:	bhi	3802c <flatcc_builder_enter_user_frame@@Base+0x68>
   37ff0:	ldr	r7, [r5, #108]	; 0x6c
   37ff4:	adds	r0, r7, r6
   37ff8:	beq	38024 <flatcc_builder_enter_user_frame@@Base+0x60>
   37ffc:	mov	r2, r4
   38000:	mov	r1, #0
   38004:	bl	13f94 <memset@plt>
   38008:	ldr	r3, [r5, #224]	; 0xe0
   3800c:	str	r3, [r7, r6]
   38010:	ldr	r0, [r5, #228]	; 0xe4
   38014:	add	r4, r4, r0
   38018:	add	r0, r0, #4
   3801c:	str	r4, [r5, #228]	; 0xe4
   38020:	str	r0, [r5, #224]	; 0xe0
   38024:	add	sp, sp, #12
   38028:	pop	{r4, r5, r6, r7, pc}
   3802c:	mov	r3, #7
   38030:	ldr	r0, [r0, #40]	; 0x28
   38034:	add	r1, r5, #108	; 0x6c
   38038:	str	r3, [sp]
   3803c:	mov	r3, #0
   38040:	ldr	r7, [r5, #48]	; 0x30
   38044:	blx	r7
   38048:	cmp	r0, #0
   3804c:	beq	37ff0 <flatcc_builder_enter_user_frame@@Base+0x2c>
   38050:	bl	14120 <__assert_fail@plt+0xf0>

00038054 <flatcc_builder_exit_user_frame@@Base>:
   38054:	ldr	r3, [r0, #224]	; 0xe0
   38058:	cmp	r3, #0
   3805c:	beq	38080 <flatcc_builder_exit_user_frame@@Base+0x2c>
   38060:	ldr	r2, [r0, #108]	; 0x6c
   38064:	sub	r1, r3, #4
   38068:	add	r3, r2, r3
   3806c:	str	r1, [r0, #228]	; 0xe4
   38070:	ldr	r3, [r3, #-4]
   38074:	str	r3, [r0, #224]	; 0xe0
   38078:	mov	r0, r3
   3807c:	bx	lr
   38080:	ldr	r3, [pc, #32]	; 380a8 <flatcc_builder_exit_user_frame@@Base+0x54>
   38084:	ldr	r1, [pc, #32]	; 380ac <flatcc_builder_exit_user_frame@@Base+0x58>
   38088:	ldr	r0, [pc, #32]	; 380b0 <flatcc_builder_exit_user_frame@@Base+0x5c>
   3808c:	add	r3, pc, r3
   38090:	push	{r4, lr}
   38094:	add	r3, r3, #136	; 0x88
   38098:	ldr	r2, [pc, #20]	; 380b4 <flatcc_builder_exit_user_frame@@Base+0x60>
   3809c:	add	r1, pc, r1
   380a0:	add	r0, pc, r0
   380a4:	bl	14030 <__assert_fail@plt>
   380a8:	andeq	r0, r2, r4, lsl #28
   380ac:	andeq	r1, r2, r4, asr #10
   380b0:	strdeq	r1, [r2], -r0
   380b4:	andeq	r0, r0, lr, lsl r2

000380b8 <flatcc_builder_exit_user_frame_at@@Base>:
   380b8:	ldr	r2, [r0, #224]	; 0xe0
   380bc:	cmp	r2, r1
   380c0:	bcc	380cc <flatcc_builder_exit_user_frame_at@@Base+0x14>
   380c4:	str	r1, [r0, #224]	; 0xe0
   380c8:	b	38054 <flatcc_builder_exit_user_frame@@Base>
   380cc:	ldr	r3, [pc, #32]	; 380f4 <flatcc_builder_exit_user_frame_at@@Base+0x3c>
   380d0:	ldr	r1, [pc, #32]	; 380f8 <flatcc_builder_exit_user_frame_at@@Base+0x40>
   380d4:	ldr	r0, [pc, #32]	; 380fc <flatcc_builder_exit_user_frame_at@@Base+0x44>
   380d8:	add	r3, pc, r3
   380dc:	push	{r4, lr}
   380e0:	add	r3, r3, #168	; 0xa8
   380e4:	ldr	r2, [pc, #20]	; 38100 <flatcc_builder_exit_user_frame_at@@Base+0x48>
   380e8:	add	r1, pc, r1
   380ec:	add	r0, pc, r0
   380f0:	bl	14030 <__assert_fail@plt>
   380f4:			; <UNDEFINED> instruction: 0x00020db8
   380f8:	strdeq	r1, [r2], -r8
   380fc:	andeq	r1, r2, r0, asr #11
   38100:	andeq	r0, r0, r7, lsr #4

00038104 <flatcc_builder_get_current_user_frame@@Base>:
   38104:	ldr	r0, [r0, #224]	; 0xe0
   38108:	bx	lr

0003810c <flatcc_builder_get_user_frame_ptr@@Base>:
   3810c:	ldr	r0, [r0, #108]	; 0x6c
   38110:	add	r0, r0, r1
   38114:	bx	lr

00038118 <flatcc_builder_embed_buffer@@Base>:
   38118:	ldr	ip, [r0, #152]	; 0x98
   3811c:	push	{r4, r5, r6, lr}
   38120:	mov	r5, r3
   38124:	sub	sp, sp, #88	; 0x58
   38128:	adds	r3, ip, #0
   3812c:	movne	r3, #1
   38130:	mov	r6, r2
   38134:	mov	r2, r1
   38138:	add	r1, sp, #104	; 0x68
   3813c:	mov	r4, r0
   38140:	bl	377fc <flatcc_builder_default_alloc@@Base+0x10c>
   38144:	ldr	ip, [pc, #324]	; 38290 <flatcc_builder_embed_buffer@@Base+0x178>
   38148:	add	ip, pc, ip
   3814c:	cmp	r0, #0
   38150:	bne	38258 <flatcc_builder_embed_buffer@@Base+0x140>
   38154:	ldr	r2, [sp, #108]	; 0x6c
   38158:	ldr	r1, [r4, #136]	; 0x88
   3815c:	ldrh	r3, [sp, #104]	; 0x68
   38160:	tst	r2, #2
   38164:	moveq	lr, #0
   38168:	movne	lr, #4
   3816c:	sub	r2, r1, r5
   38170:	sub	r3, r3, #1
   38174:	sub	r2, r2, lr
   38178:	and	r2, r2, r3
   3817c:	ldr	r3, [r4, #152]	; 0x98
   38180:	str	r0, [sp, #16]
   38184:	str	r0, [sp, #20]
   38188:	cmp	r3, #0
   3818c:	add	r0, r5, r2
   38190:	str	r0, [sp, #12]
   38194:	beq	381b4 <flatcc_builder_embed_buffer@@Base+0x9c>
   38198:	mov	r3, #4
   3819c:	mov	lr, #1
   381a0:	add	r0, sp, #12
   381a4:	str	r3, [sp, #16]
   381a8:	str	r3, [sp, #28]
   381ac:	str	r0, [sp, #24]
   381b0:	str	lr, [sp, #20]
   381b4:	cmp	r5, #0
   381b8:	beq	381e0 <flatcc_builder_embed_buffer@@Base+0xc8>
   381bc:	ldr	r0, [sp, #20]
   381c0:	add	lr, sp, #88	; 0x58
   381c4:	add	r0, r0, #1
   381c8:	add	r3, r3, r5
   381cc:	add	lr, lr, r0, lsl #3
   381d0:	str	r3, [sp, #16]
   381d4:	str	r0, [sp, #20]
   381d8:	str	r6, [lr, #-72]	; 0xffffffb8
   381dc:	str	r5, [lr, #-68]	; 0xffffffbc
   381e0:	cmp	r2, #0
   381e4:	bne	38228 <flatcc_builder_embed_buffer@@Base+0x110>
   381e8:	sub	r5, r1, r3
   381ec:	cmp	r1, r5
   381f0:	ble	3828c <flatcc_builder_embed_buffer@@Base+0x174>
   381f4:	ldr	r0, [r4, #36]	; 0x24
   381f8:	ldr	r2, [sp, #20]
   381fc:	str	r3, [sp]
   38200:	add	r1, sp, #24
   38204:	ldr	r6, [r4, #44]	; 0x2c
   38208:	mov	r3, r5
   3820c:	blx	r6
   38210:	cmp	r0, #0
   38214:	streq	r5, [r4, #136]	; 0x88
   38218:	bne	38268 <flatcc_builder_embed_buffer@@Base+0x150>
   3821c:	mov	r0, r5
   38220:	add	sp, sp, #88	; 0x58
   38224:	pop	{r4, r5, r6, pc}
   38228:	ldr	r0, [sp, #20]
   3822c:	ldr	lr, [pc, #96]	; 38294 <flatcc_builder_embed_buffer@@Base+0x17c>
   38230:	add	r0, r0, #1
   38234:	add	r3, r3, r2
   38238:	str	r3, [sp, #16]
   3823c:	ldr	lr, [ip, lr]
   38240:	add	ip, sp, #88	; 0x58
   38244:	add	ip, ip, r0, lsl #3
   38248:	str	r0, [sp, #20]
   3824c:	str	lr, [ip, #-72]	; 0xffffffb8
   38250:	str	r2, [ip, #-68]	; 0xffffffbc
   38254:	b	381e8 <flatcc_builder_embed_buffer@@Base+0xd0>
   38258:	mov	r5, #0
   3825c:	mov	r0, r5
   38260:	add	sp, sp, #88	; 0x58
   38264:	pop	{r4, r5, r6, pc}
   38268:	ldr	r3, [pc, #40]	; 38298 <flatcc_builder_embed_buffer@@Base+0x180>
   3826c:	ldr	r1, [pc, #40]	; 3829c <flatcc_builder_embed_buffer@@Base+0x184>
   38270:	ldr	r0, [pc, #40]	; 382a0 <flatcc_builder_embed_buffer@@Base+0x188>
   38274:	add	r3, pc, r3
   38278:	ldr	r2, [pc, #36]	; 382a4 <flatcc_builder_embed_buffer@@Base+0x18c>
   3827c:	add	r3, r3, #28
   38280:	add	r1, pc, r1
   38284:	add	r0, pc, r0
   38288:	bl	14030 <__assert_fail@plt>
   3828c:	bl	14188 <__assert_fail@plt+0x158>
   38290:			; <UNDEFINED> instruction: 0x00031eb0
   38294:	muleq	r0, r8, r0
   38298:	andeq	r0, r2, ip, lsl ip
   3829c:	andeq	r1, r2, r0, ror #6
   382a0:	andeq	pc, r0, r0, ror #23
   382a4:	andeq	r0, r0, fp, lsl #5

000382a8 <flatcc_builder_create_buffer@@Base>:
   382a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   382ac:	sub	sp, sp, #100	; 0x64
   382b0:	mov	r5, #0
   382b4:	ldr	r8, [sp, #140]	; 0x8c
   382b8:	mov	r9, r1
   382bc:	and	r6, r8, #1
   382c0:	mov	r7, r3
   382c4:	add	r1, sp, #136	; 0x88
   382c8:	mov	r3, r6
   382cc:	str	r5, [sp, #20]
   382d0:	mov	r4, r0
   382d4:	bl	377fc <flatcc_builder_default_alloc@@Base+0x10c>
   382d8:	ldr	lr, [pc, #516]	; 384e4 <flatcc_builder_create_buffer@@Base+0x23c>
   382dc:	add	lr, pc, lr
   382e0:	cmp	r0, r5
   382e4:	bne	38478 <flatcc_builder_create_buffer@@Base+0x1d0>
   382e8:	ldrh	r3, [r4, #128]	; 0x80
   382ec:	ldrh	r2, [sp, #136]	; 0x88
   382f0:	uxtb	r5, r6
   382f4:	cmp	r3, r2
   382f8:	strhcc	r2, [r4, #128]	; 0x80
   382fc:	cmp	r9, #0
   38300:	sub	r2, r2, #1
   38304:	ldrne	r3, [r9]
   38308:	ldreq	r0, [sp, #20]
   3830c:	ldrne	r0, [r9]
   38310:	strne	r3, [sp, #20]
   38314:	cmp	r0, #0
   38318:	movne	r0, #4
   3831c:	moveq	r0, #0
   38320:	ands	r3, r8, #2
   38324:	ldr	r8, [r4, #136]	; 0x88
   38328:	bne	38448 <flatcc_builder_create_buffer@@Base+0x1a0>
   3832c:	sub	r1, r8, #4
   38330:	cmp	r5, #0
   38334:	sub	r1, r1, r0
   38338:	and	r2, r2, r1
   3833c:	moveq	r9, #1
   38340:	moveq	ip, #4
   38344:	bne	38454 <flatcc_builder_create_buffer@@Base+0x1ac>
   38348:	add	r1, r3, #1
   3834c:	add	sl, sp, #96	; 0x60
   38350:	add	r1, sl, r1, lsl #3
   38354:	mov	fp, #4
   38358:	add	sl, sp, #12
   3835c:	cmp	r0, #0
   38360:	str	ip, [sp, #24]
   38364:	str	r9, [sp, #28]
   38368:	str	sl, [r1, #-72]	; 0xffffffb8
   3836c:	str	fp, [r1, #-68]	; 0xffffffbc
   38370:	beq	3839c <flatcc_builder_create_buffer@@Base+0xf4>
   38374:	add	r9, r9, #1
   38378:	add	r1, sp, #96	; 0x60
   3837c:	add	r9, r1, r9, lsl #3
   38380:	add	r3, r3, #2
   38384:	add	ip, ip, r0
   38388:	str	r3, [sp, #28]
   3838c:	add	r3, sp, #20
   38390:	str	r0, [r9, #-68]	; 0xffffffbc
   38394:	str	ip, [sp, #24]
   38398:	str	r3, [r9, #-72]	; 0xffffffb8
   3839c:	cmp	r2, #0
   383a0:	beq	383d0 <flatcc_builder_create_buffer@@Base+0x128>
   383a4:	ldr	r3, [sp, #28]
   383a8:	ldr	r1, [pc, #312]	; 384e8 <flatcc_builder_create_buffer@@Base+0x240>
   383ac:	add	r3, r3, #1
   383b0:	add	ip, ip, r2
   383b4:	str	ip, [sp, #24]
   383b8:	ldr	r0, [lr, r1]
   383bc:	add	r1, sp, #96	; 0x60
   383c0:	add	r1, r1, r3, lsl #3
   383c4:	str	r3, [sp, #28]
   383c8:	str	r0, [r1, #-72]	; 0xffffffb8
   383cc:	str	r2, [r1, #-68]	; 0xffffffbc
   383d0:	cmp	r5, #0
   383d4:	sub	r5, r8, ip
   383d8:	mov	r3, r5
   383dc:	beq	38488 <flatcc_builder_create_buffer@@Base+0x1e0>
   383e0:	cmp	r6, #0
   383e4:	add	r3, r5, #4
   383e8:	beq	38488 <flatcc_builder_create_buffer@@Base+0x1e0>
   383ec:	ldr	r2, [r4, #144]	; 0x90
   383f0:	sub	r2, r2, r3
   383f4:	str	r2, [sp, #16]
   383f8:	sub	r7, r7, r3
   383fc:	cmp	r5, r8
   38400:	str	r7, [sp, #12]
   38404:	mov	r6, r5
   38408:	bge	38498 <flatcc_builder_create_buffer@@Base+0x1f0>
   3840c:	ldr	r0, [r4, #36]	; 0x24
   38410:	ldr	r2, [sp, #28]
   38414:	str	ip, [sp]
   38418:	mov	r3, r5
   3841c:	ldr	r7, [r4, #44]	; 0x2c
   38420:	add	r1, sp, #32
   38424:	blx	r7
   38428:	cmp	r0, #0
   3842c:	bne	3849c <flatcc_builder_create_buffer@@Base+0x1f4>
   38430:	cmp	r5, #0
   38434:	str	r5, [r4, #136]	; 0x88
   38438:	beq	384c0 <flatcc_builder_create_buffer@@Base+0x218>
   3843c:	mov	r0, r6
   38440:	add	sp, sp, #100	; 0x64
   38444:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38448:	sub	r3, r8, #8
   3844c:	sub	r3, r3, r0
   38450:	and	r2, r2, r3
   38454:	mov	ip, #4
   38458:	mov	r3, #1
   3845c:	add	r1, sp, #16
   38460:	str	ip, [sp, #36]	; 0x24
   38464:	str	r1, [sp, #32]
   38468:	mov	r5, r3
   3846c:	mov	r9, #2
   38470:	mov	ip, #8
   38474:	b	38348 <flatcc_builder_create_buffer@@Base+0xa0>
   38478:	mov	r6, r5
   3847c:	mov	r0, r6
   38480:	add	sp, sp, #100	; 0x64
   38484:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38488:	ldr	r2, [r4, #140]	; 0x8c
   3848c:	sub	r2, r2, r3
   38490:	str	r2, [sp, #16]
   38494:	b	383f8 <flatcc_builder_create_buffer@@Base+0x150>
   38498:	bl	14188 <__assert_fail@plt+0x158>
   3849c:	ldr	r3, [pc, #72]	; 384ec <flatcc_builder_create_buffer@@Base+0x244>
   384a0:	ldr	r1, [pc, #72]	; 384f0 <flatcc_builder_create_buffer@@Base+0x248>
   384a4:	ldr	r0, [pc, #72]	; 384f4 <flatcc_builder_create_buffer@@Base+0x24c>
   384a8:	add	r3, pc, r3
   384ac:	ldr	r2, [pc, #68]	; 384f8 <flatcc_builder_create_buffer@@Base+0x250>
   384b0:	add	r3, r3, #28
   384b4:	add	r1, pc, r1
   384b8:	add	r0, pc, r0
   384bc:	bl	14030 <__assert_fail@plt>
   384c0:	ldr	r3, [pc, #52]	; 384fc <flatcc_builder_create_buffer@@Base+0x254>
   384c4:	ldr	r1, [pc, #52]	; 38500 <flatcc_builder_create_buffer@@Base+0x258>
   384c8:	ldr	r0, [pc, #52]	; 38504 <flatcc_builder_create_buffer@@Base+0x25c>
   384cc:	add	r3, pc, r3
   384d0:	mov	r2, #772	; 0x304
   384d4:	add	r3, r3, #204	; 0xcc
   384d8:	add	r1, pc, r1
   384dc:	add	r0, pc, r0
   384e0:	bl	14030 <__assert_fail@plt>
   384e4:	andeq	r1, r3, ip, lsl sp
   384e8:	muleq	r0, r8, r0
   384ec:	andeq	r0, r2, r8, ror #19
   384f0:	andeq	r1, r2, ip, lsr #2
   384f4:	andeq	pc, r0, ip, lsr #19
   384f8:	andeq	r0, r0, fp, lsl #5
   384fc:	andeq	r0, r2, r4, asr #19
   38500:	andeq	r1, r2, r8, lsl #2
   38504:	andeq	pc, r0, r8, lsl #19

00038508 <flatcc_builder_create_struct@@Base>:
   38508:	push	{r4, r5, r6, lr}
   3850c:	cmp	r3, #0
   38510:	ldr	lr, [pc, #300]	; 38644 <flatcc_builder_create_struct@@Base+0x13c>
   38514:	sub	sp, sp, #80	; 0x50
   38518:	add	lr, pc, lr
   3851c:	beq	38620 <flatcc_builder_create_struct@@Base+0x118>
   38520:	mov	r5, r0
   38524:	ldrh	r0, [r0, #128]	; 0x80
   38528:	ldr	ip, [r5, #136]	; 0x88
   3852c:	cmp	r0, r3
   38530:	strhcc	r3, [r5, #128]	; 0x80
   38534:	mov	r0, #0
   38538:	sub	r3, r3, #1
   3853c:	sub	r4, ip, r2
   38540:	cmp	r2, #0
   38544:	and	r3, r3, r4
   38548:	str	r0, [sp, #8]
   3854c:	str	r0, [sp, #12]
   38550:	bne	385d0 <flatcc_builder_create_struct@@Base+0xc8>
   38554:	cmp	r3, #0
   38558:	movne	r6, #1
   3855c:	movne	r1, r2
   38560:	beq	385f8 <flatcc_builder_create_struct@@Base+0xf0>
   38564:	ldr	r0, [pc, #220]	; 38648 <flatcc_builder_create_struct@@Base+0x140>
   38568:	add	r1, r1, #1
   3856c:	add	r2, r2, r3
   38570:	add	r4, sp, #80	; 0x50
   38574:	add	r1, r4, r1, lsl #3
   38578:	str	r2, [sp, #8]
   3857c:	sub	r4, ip, r2
   38580:	ldr	r0, [lr, r0]
   38584:	str	r3, [r1, #-68]	; 0xffffffbc
   38588:	str	r0, [r1, #-72]	; 0xffffffb8
   3858c:	str	r6, [sp, #12]
   38590:	cmp	ip, r4
   38594:	ble	385f8 <flatcc_builder_create_struct@@Base+0xf0>
   38598:	ldr	r3, [sp, #12]
   3859c:	ldr	r0, [r5, #36]	; 0x24
   385a0:	add	r1, sp, #16
   385a4:	str	r2, [sp]
   385a8:	mov	r2, r3
   385ac:	ldr	r6, [r5, #44]	; 0x2c
   385b0:	mov	r3, r4
   385b4:	blx	r6
   385b8:	cmp	r0, #0
   385bc:	bne	385fc <flatcc_builder_create_struct@@Base+0xf4>
   385c0:	mov	r0, r4
   385c4:	str	r4, [r5, #136]	; 0x88
   385c8:	add	sp, sp, #80	; 0x50
   385cc:	pop	{r4, r5, r6, pc}
   385d0:	cmp	r3, r0
   385d4:	mov	r0, #1
   385d8:	str	r1, [sp, #16]
   385dc:	str	r2, [sp, #8]
   385e0:	str	r2, [sp, #20]
   385e4:	str	r0, [sp, #12]
   385e8:	movne	r1, r0
   385ec:	movne	r6, #2
   385f0:	beq	38590 <flatcc_builder_create_struct@@Base+0x88>
   385f4:	b	38564 <flatcc_builder_create_struct@@Base+0x5c>
   385f8:	bl	14188 <__assert_fail@plt+0x158>
   385fc:	ldr	r3, [pc, #72]	; 3864c <flatcc_builder_create_struct@@Base+0x144>
   38600:	ldr	r1, [pc, #72]	; 38650 <flatcc_builder_create_struct@@Base+0x148>
   38604:	ldr	r0, [pc, #72]	; 38654 <flatcc_builder_create_struct@@Base+0x14c>
   38608:	add	r3, pc, r3
   3860c:	ldr	r2, [pc, #68]	; 38658 <flatcc_builder_create_struct@@Base+0x150>
   38610:	add	r3, r3, #28
   38614:	add	r1, pc, r1
   38618:	add	r0, pc, r0
   3861c:	bl	14030 <__assert_fail@plt>
   38620:	ldr	r3, [pc, #52]	; 3865c <flatcc_builder_create_struct@@Base+0x154>
   38624:	ldr	r1, [pc, #52]	; 38660 <flatcc_builder_create_struct@@Base+0x158>
   38628:	ldr	r0, [pc, #52]	; 38664 <flatcc_builder_create_struct@@Base+0x15c>
   3862c:	add	r3, pc, r3
   38630:	ldr	r2, [pc, #48]	; 38668 <flatcc_builder_create_struct@@Base+0x160>
   38634:	add	r3, r3, #236	; 0xec
   38638:	add	r1, pc, r1
   3863c:	add	r0, pc, r0
   38640:	bl	14030 <__assert_fail@plt>
   38644:	andeq	r1, r3, r0, ror #21
   38648:	muleq	r0, r8, r0
   3864c:	andeq	r0, r2, r8, lsl #17
   38650:	andeq	r0, r2, ip, asr #31
   38654:	andeq	pc, r0, ip, asr #16
   38658:	andeq	r0, r0, fp, lsl #5
   3865c:	andeq	r0, r2, r4, ror #16
   38660:	andeq	r0, r2, r8, lsr #31
   38664:	muleq	r2, r0, r0
   38668:	andeq	r0, r0, pc, lsl #6

0003866c <flatcc_builder_start_buffer@@Base>:
   3866c:	push	{r4, r5, r6, r7, r8, lr}
   38670:	mov	r5, r1
   38674:	ldrh	r1, [r0, #128]	; 0x80
   38678:	mov	r4, r0
   3867c:	mov	r7, r2
   38680:	mov	r6, r3
   38684:	bl	3792c <flatcc_builder_default_alloc@@Base+0x23c>
   38688:	ldr	r1, [pc, #140]	; 3871c <flatcc_builder_start_buffer@@Base+0xb0>
   3868c:	add	r1, pc, r1
   38690:	cmp	r0, #0
   38694:	bne	38714 <flatcc_builder_start_buffer@@Base+0xa8>
   38698:	ldrh	r3, [r4, #132]	; 0x84
   3869c:	ldr	ip, [r4, #32]
   386a0:	mov	r2, #1
   386a4:	strh	r2, [r4, #128]	; 0x80
   386a8:	strh	r3, [ip, #34]	; 0x22
   386ac:	ldrh	r3, [r4, #164]	; 0xa4
   386b0:	strh	r7, [r4, #132]	; 0x84
   386b4:	cmp	r5, #0
   386b8:	strh	r3, [ip, #32]
   386bc:	ldr	r3, [r4, #144]	; 0x90
   386c0:	strh	r6, [r4, #164]	; 0xa4
   386c4:	str	r3, [ip, #20]
   386c8:	ldr	r3, [r4, #152]	; 0x98
   386cc:	str	r3, [ip, #28]
   386d0:	ldr	r3, [r4, #148]	; 0x94
   386d4:	ldr	lr, [r4, #136]	; 0x88
   386d8:	ldr	r2, [r4, #168]	; 0xa8
   386dc:	add	r6, r3, #1
   386e0:	str	r3, [r4, #152]	; 0x98
   386e4:	str	r6, [r4, #148]	; 0x94
   386e8:	str	lr, [r4, #144]	; 0x90
   386ec:	str	r2, [ip, #16]
   386f0:	beq	38708 <flatcc_builder_start_buffer@@Base+0x9c>
   386f4:	ldr	r2, [r5]
   386f8:	mov	r3, #1
   386fc:	str	r2, [r4, #168]	; 0xa8
   38700:	strh	r3, [ip, #14]
   38704:	pop	{r4, r5, r6, r7, r8, pc}
   38708:	ldr	r3, [pc, #16]	; 38720 <flatcc_builder_start_buffer@@Base+0xb4>
   3870c:	ldr	r5, [r1, r3]
   38710:	b	386f4 <flatcc_builder_start_buffer@@Base+0x88>
   38714:	mvn	r0, #0
   38718:	pop	{r4, r5, r6, r7, r8, pc}
   3871c:	andeq	r1, r3, ip, ror #18
   38720:	muleq	r0, r8, r0

00038724 <flatcc_builder_end_buffer@@Base>:
   38724:	ldr	ip, [r0, #32]
   38728:	ldrh	r2, [r0, #164]	; 0xa4
   3872c:	push	{r4, r5, r6, lr}
   38730:	mov	r4, r0
   38734:	ldrh	ip, [ip, #14]
   38738:	ldr	r0, [r0, #152]	; 0x98
   3873c:	and	r2, r2, #2
   38740:	cmp	r0, #0
   38744:	moveq	r0, r2
   38748:	orrne	r0, r2, #1
   3874c:	cmp	ip, #1
   38750:	sub	sp, sp, #8
   38754:	bne	38834 <flatcc_builder_end_buffer@@Base+0x110>
   38758:	ldrh	r2, [r4, #132]	; 0x84
   3875c:	ldrh	ip, [r4, #128]	; 0x80
   38760:	mov	r3, r1
   38764:	add	r1, r4, #168	; 0xa8
   38768:	cmp	r2, ip
   3876c:	movhi	ip, r2
   38770:	strhhi	r2, [r4, #128]	; 0x80
   38774:	str	r0, [sp, #4]
   38778:	str	ip, [sp]
   3877c:	mov	r0, r4
   38780:	bl	382a8 <flatcc_builder_create_buffer@@Base>
   38784:	subs	r5, r0, #0
   38788:	beq	38828 <flatcc_builder_end_buffer@@Base+0x104>
   3878c:	ldr	r3, [r4, #32]
   38790:	ldr	r2, [r4, #20]
   38794:	mov	r1, #0
   38798:	ldr	ip, [r3, #20]
   3879c:	ldr	r0, [r4, #16]
   387a0:	str	ip, [r4, #144]	; 0x90
   387a4:	ldr	ip, [r3, #28]
   387a8:	str	ip, [r4, #152]	; 0x98
   387ac:	ldr	ip, [r3, #16]
   387b0:	str	ip, [r4, #168]	; 0xa8
   387b4:	ldrh	r3, [r3, #32]
   387b8:	strh	r3, [r4, #164]	; 0xa4
   387bc:	bl	13f94 <memset@plt>
   387c0:	ldr	r3, [r4, #32]
   387c4:	ldr	r2, [r4, #64]	; 0x40
   387c8:	ldrh	lr, [r4, #130]	; 0x82
   387cc:	ldr	ip, [r3]
   387d0:	ldr	r1, [r3, #4]
   387d4:	ldrh	r0, [r4, #128]	; 0x80
   387d8:	sub	r2, r2, ip
   387dc:	cmp	r2, r1
   387e0:	movcs	r2, r1
   387e4:	cmp	r0, lr
   387e8:	ldr	r0, [r4, #60]	; 0x3c
   387ec:	ldr	r6, [r3, #8]
   387f0:	str	r2, [r4, #24]
   387f4:	add	r2, r0, ip
   387f8:	str	r2, [r4, #16]
   387fc:	str	r6, [r4, #20]
   38800:	ldr	r2, [r4, #156]	; 0x9c
   38804:	str	ip, [r4, #28]
   38808:	str	r1, [r3, #4]
   3880c:	strhcc	lr, [r4, #128]	; 0x80
   38810:	ldrh	r1, [r3, #12]
   38814:	sub	r2, r2, #1
   38818:	sub	r3, r3, #36	; 0x24
   3881c:	str	r2, [r4, #156]	; 0x9c
   38820:	strh	r1, [r4, #130]	; 0x82
   38824:	str	r3, [r4, #32]
   38828:	mov	r0, r5
   3882c:	add	sp, sp, #8
   38830:	pop	{r4, r5, r6, pc}
   38834:	ldr	r3, [pc, #28]	; 38858 <flatcc_builder_end_buffer@@Base+0x134>
   38838:	ldr	r1, [pc, #28]	; 3885c <flatcc_builder_end_buffer@@Base+0x138>
   3883c:	ldr	r0, [pc, #28]	; 38860 <flatcc_builder_end_buffer@@Base+0x13c>
   38840:	add	r3, pc, r3
   38844:	ldr	r2, [pc, #24]	; 38864 <flatcc_builder_end_buffer@@Base+0x140>
   38848:	add	r3, r3, #268	; 0x10c
   3884c:	add	r1, pc, r1
   38850:	add	r0, pc, r0
   38854:	bl	14030 <__assert_fail@plt>
   38858:	andeq	r0, r2, r0, asr r6
   3885c:	muleq	r2, r4, sp
   38860:	andeq	r0, r2, r8, lsl #29
   38864:	andeq	r0, r0, r6, asr #6

00038868 <flatcc_builder_start_struct@@Base>:
   38868:	push	{r4, r5, r6, lr}
   3886c:	mov	r5, r1
   38870:	mov	r1, r2
   38874:	mov	r4, r0
   38878:	bl	3792c <flatcc_builder_default_alloc@@Base+0x23c>
   3887c:	cmp	r0, #0
   38880:	bne	38900 <flatcc_builder_start_struct@@Base+0x98>
   38884:	ldr	r2, [r4, #28]
   38888:	ldr	r3, [r4, #64]	; 0x40
   3888c:	ldr	r0, [r4, #60]	; 0x3c
   38890:	ldr	ip, [r4, #32]
   38894:	sub	r3, r3, r2
   38898:	cmn	r3, #4
   3889c:	ldr	r6, [r4, #20]
   388a0:	add	r0, r0, r2
   388a4:	mov	r2, #2
   388a8:	strh	r2, [ip, #14]
   388ac:	mvnhi	r2, #3
   388b0:	movhi	r3, r2
   388b4:	add	r5, r5, r6
   388b8:	strhi	r2, [r4, #24]
   388bc:	strls	r3, [r4, #24]
   388c0:	mvn	r2, #3
   388c4:	cmp	r5, r3
   388c8:	str	r0, [r4, #16]
   388cc:	str	r2, [ip, #4]
   388d0:	str	r5, [r4, #20]
   388d4:	bcs	388e0 <flatcc_builder_start_struct@@Base+0x78>
   388d8:	add	r0, r0, r6
   388dc:	pop	{r4, r5, r6, pc}
   388e0:	add	r1, r5, #1
   388e4:	mov	r0, r4
   388e8:	bl	3767c <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   388ec:	cmp	r0, #0
   388f0:	bne	38900 <flatcc_builder_start_struct@@Base+0x98>
   388f4:	ldr	r0, [r4, #16]
   388f8:	add	r0, r0, r6
   388fc:	pop	{r4, r5, r6, pc}
   38900:	mov	r0, #0
   38904:	pop	{r4, r5, r6, pc}

00038908 <flatcc_builder_struct_edit@@Base>:
   38908:	ldr	r0, [r0, #16]
   3890c:	bx	lr

00038910 <flatcc_builder_end_struct@@Base>:
   38910:	ldr	r3, [r0, #32]
   38914:	push	{r4, r5, r6, lr}
   38918:	ldrh	r3, [r3, #14]
   3891c:	cmp	r3, #2
   38920:	bne	389c0 <flatcc_builder_end_struct@@Base+0xb0>
   38924:	ldrh	r3, [r0, #130]	; 0x82
   38928:	ldr	r2, [r0, #20]
   3892c:	ldr	r1, [r0, #16]
   38930:	mov	r4, r0
   38934:	bl	38508 <flatcc_builder_create_struct@@Base>
   38938:	subs	r5, r0, #0
   3893c:	beq	389b8 <flatcc_builder_end_struct@@Base+0xa8>
   38940:	ldr	r2, [r4, #20]
   38944:	mov	r1, #0
   38948:	ldr	r0, [r4, #16]
   3894c:	bl	13f94 <memset@plt>
   38950:	ldr	r3, [r4, #32]
   38954:	ldr	r2, [r4, #64]	; 0x40
   38958:	ldrh	lr, [r4, #130]	; 0x82
   3895c:	ldr	ip, [r3]
   38960:	ldr	r1, [r3, #4]
   38964:	ldrh	r0, [r4, #128]	; 0x80
   38968:	sub	r2, r2, ip
   3896c:	cmp	r2, r1
   38970:	movcs	r2, r1
   38974:	cmp	r0, lr
   38978:	ldr	r0, [r4, #60]	; 0x3c
   3897c:	ldr	r6, [r3, #8]
   38980:	str	r2, [r4, #24]
   38984:	add	r2, r0, ip
   38988:	str	r2, [r4, #16]
   3898c:	str	r6, [r4, #20]
   38990:	ldr	r2, [r4, #156]	; 0x9c
   38994:	str	ip, [r4, #28]
   38998:	str	r1, [r3, #4]
   3899c:	strhcc	lr, [r4, #128]	; 0x80
   389a0:	ldrh	r1, [r3, #12]
   389a4:	sub	r2, r2, #1
   389a8:	sub	r3, r3, #36	; 0x24
   389ac:	str	r2, [r4, #156]	; 0x9c
   389b0:	strh	r1, [r4, #130]	; 0x82
   389b4:	str	r3, [r4, #32]
   389b8:	mov	r0, r5
   389bc:	pop	{r4, r5, r6, pc}
   389c0:	ldr	r3, [pc, #28]	; 389e4 <flatcc_builder_end_struct@@Base+0xd4>
   389c4:	ldr	r1, [pc, #28]	; 389e8 <flatcc_builder_end_struct@@Base+0xd8>
   389c8:	ldr	r0, [pc, #28]	; 389ec <flatcc_builder_end_struct@@Base+0xdc>
   389cc:	add	r3, pc, r3
   389d0:	mov	r2, #872	; 0x368
   389d4:	add	r3, r3, #296	; 0x128
   389d8:	add	r1, pc, r1
   389dc:	add	r0, pc, r0
   389e0:	bl	14030 <__assert_fail@plt>
   389e4:	andeq	r0, r2, r4, asr #9
   389e8:	andeq	r0, r2, r8, lsl #24
   389ec:	andeq	r0, r2, r8, lsr #26

000389f0 <flatcc_builder_extend_vector@@Base>:
   389f0:	ldr	r2, [r0, #32]
   389f4:	push	{r4, r5, r6, lr}
   389f8:	ldr	r3, [r2, #20]
   389fc:	ldr	r4, [r2, #24]
   38a00:	add	ip, r1, r3
   38a04:	cmp	r3, ip
   38a08:	movls	r3, #0
   38a0c:	movhi	r3, #1
   38a10:	cmp	r4, ip
   38a14:	movcs	r4, r3
   38a18:	orrcc	r4, r3, #1
   38a1c:	cmp	r4, #0
   38a20:	bne	38a70 <flatcc_builder_extend_vector@@Base+0x80>
   38a24:	ldr	lr, [r2, #16]
   38a28:	str	ip, [r2, #20]
   38a2c:	ldr	r6, [r0, #20]
   38a30:	ldr	r3, [r0, #24]
   38a34:	mla	r1, lr, r1, r6
   38a38:	mov	r5, r0
   38a3c:	cmp	r1, r3
   38a40:	str	r1, [r0, #20]
   38a44:	bcs	38a54 <flatcc_builder_extend_vector@@Base+0x64>
   38a48:	ldr	r0, [r5, #16]
   38a4c:	add	r0, r0, r6
   38a50:	pop	{r4, r5, r6, pc}
   38a54:	add	r1, r1, #1
   38a58:	mvn	r2, #3
   38a5c:	bl	3767c <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   38a60:	cmp	r0, #0
   38a64:	beq	38a48 <flatcc_builder_extend_vector@@Base+0x58>
   38a68:	mov	r0, r4
   38a6c:	pop	{r4, r5, r6, pc}
   38a70:	bl	141c0 <__assert_fail@plt+0x190>

00038a74 <flatcc_builder_vector_push@@Base>:
   38a74:	ldr	r3, [r0, #32]
   38a78:	push	{r4, r5, r6, r7, r8, lr}
   38a7c:	ldrh	r2, [r3, #14]
   38a80:	cmp	r2, #4
   38a84:	bne	38b2c <flatcc_builder_vector_push@@Base+0xb8>
   38a88:	mov	r6, r1
   38a8c:	ldr	r2, [r3, #20]
   38a90:	ldr	r1, [r3, #24]
   38a94:	cmp	r2, r1
   38a98:	bhi	38b08 <flatcc_builder_vector_push@@Base+0x94>
   38a9c:	add	r2, r2, #1
   38aa0:	str	r2, [r3, #20]
   38aa4:	ldr	r7, [r3, #16]
   38aa8:	ldr	r5, [r0, #20]
   38aac:	ldr	r3, [r0, #24]
   38ab0:	add	r1, r7, r5
   38ab4:	cmp	r1, r3
   38ab8:	mov	r4, r0
   38abc:	str	r1, [r0, #20]
   38ac0:	bcs	38aec <flatcc_builder_vector_push@@Base+0x78>
   38ac4:	ldr	r3, [r4, #16]
   38ac8:	adds	r3, r3, r5
   38acc:	beq	38ae4 <flatcc_builder_vector_push@@Base+0x70>
   38ad0:	mov	r0, r3
   38ad4:	mov	r2, r7
   38ad8:	mov	r1, r6
   38adc:	bl	13ed4 <memcpy@plt>
   38ae0:	mov	r3, r0
   38ae4:	mov	r0, r3
   38ae8:	pop	{r4, r5, r6, r7, r8, pc}
   38aec:	add	r1, r1, #1
   38af0:	mvn	r2, #3
   38af4:	bl	3767c <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   38af8:	cmp	r0, #0
   38afc:	beq	38ac4 <flatcc_builder_vector_push@@Base+0x50>
   38b00:	mov	r3, #0
   38b04:	b	38ae4 <flatcc_builder_vector_push@@Base+0x70>
   38b08:	ldr	r3, [pc, #64]	; 38b50 <flatcc_builder_vector_push@@Base+0xdc>
   38b0c:	ldr	r1, [pc, #64]	; 38b54 <flatcc_builder_vector_push@@Base+0xe0>
   38b10:	ldr	r0, [pc, #64]	; 38b58 <flatcc_builder_vector_push@@Base+0xe4>
   38b14:	add	r3, pc, r3
   38b18:	mov	r2, #908	; 0x38c
   38b1c:	add	r3, r3, #324	; 0x144
   38b20:	add	r1, pc, r1
   38b24:	add	r0, pc, r0
   38b28:	bl	14030 <__assert_fail@plt>
   38b2c:	ldr	r3, [pc, #40]	; 38b5c <flatcc_builder_vector_push@@Base+0xe8>
   38b30:	ldr	r1, [pc, #40]	; 38b60 <flatcc_builder_vector_push@@Base+0xec>
   38b34:	ldr	r0, [pc, #40]	; 38b64 <flatcc_builder_vector_push@@Base+0xf0>
   38b38:	add	r3, pc, r3
   38b3c:	ldr	r2, [pc, #36]	; 38b68 <flatcc_builder_vector_push@@Base+0xf4>
   38b40:	add	r3, r3, #324	; 0x144
   38b44:	add	r1, pc, r1
   38b48:	add	r0, pc, r0
   38b4c:	bl	14030 <__assert_fail@plt>
   38b50:	andeq	r0, r2, ip, ror r3
   38b54:	andeq	r0, r2, r0, asr #21
   38b58:	andeq	r0, r2, r8, lsr ip
   38b5c:	andeq	r0, r2, r8, asr r3
   38b60:	muleq	r2, ip, sl
   38b64:	andeq	r0, r2, r8, ror #23
   38b68:	andeq	r0, r0, fp, lsl #7

00038b6c <flatcc_builder_append_vector@@Base>:
   38b6c:	push	{r4, r5, r6, r7, r8, lr}
   38b70:	mov	r7, r1
   38b74:	ldr	r1, [r0, #32]
   38b78:	ldrh	r3, [r1, #14]
   38b7c:	cmp	r3, #4
   38b80:	bne	38c20 <flatcc_builder_append_vector@@Base+0xb4>
   38b84:	ldr	r3, [r1, #20]
   38b88:	ldr	r4, [r1, #24]
   38b8c:	add	ip, r2, r3
   38b90:	cmp	r3, ip
   38b94:	movls	r3, #0
   38b98:	movhi	r3, #1
   38b9c:	cmp	r4, ip
   38ba0:	movcs	r4, r3
   38ba4:	orrcc	r4, r3, #1
   38ba8:	cmp	r4, #0
   38bac:	bne	38c1c <flatcc_builder_append_vector@@Base+0xb0>
   38bb0:	ldr	r6, [r1, #16]
   38bb4:	str	ip, [r1, #20]
   38bb8:	ldr	r8, [r0, #20]
   38bbc:	mul	r6, r6, r2
   38bc0:	ldr	r3, [r0, #24]
   38bc4:	add	r1, r6, r8
   38bc8:	cmp	r1, r3
   38bcc:	mov	r5, r0
   38bd0:	str	r1, [r0, #20]
   38bd4:	bcs	38c00 <flatcc_builder_append_vector@@Base+0x94>
   38bd8:	ldr	r3, [r5, #16]
   38bdc:	adds	r3, r3, r8
   38be0:	beq	38bf8 <flatcc_builder_append_vector@@Base+0x8c>
   38be4:	mov	r0, r3
   38be8:	mov	r2, r6
   38bec:	mov	r1, r7
   38bf0:	bl	13ed4 <memcpy@plt>
   38bf4:	mov	r3, r0
   38bf8:	mov	r0, r3
   38bfc:	pop	{r4, r5, r6, r7, r8, pc}
   38c00:	add	r1, r1, #1
   38c04:	mvn	r2, #3
   38c08:	bl	3767c <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   38c0c:	cmp	r0, #0
   38c10:	beq	38bd8 <flatcc_builder_append_vector@@Base+0x6c>
   38c14:	mov	r3, r4
   38c18:	b	38bf8 <flatcc_builder_append_vector@@Base+0x8c>
   38c1c:	bl	141c0 <__assert_fail@plt+0x190>
   38c20:	ldr	r3, [pc, #28]	; 38c44 <flatcc_builder_append_vector@@Base+0xd8>
   38c24:	ldr	r1, [pc, #28]	; 38c48 <flatcc_builder_append_vector@@Base+0xdc>
   38c28:	ldr	r0, [pc, #28]	; 38c4c <flatcc_builder_append_vector@@Base+0xe0>
   38c2c:	add	r3, pc, r3
   38c30:	ldr	r2, [pc, #24]	; 38c50 <flatcc_builder_append_vector@@Base+0xe4>
   38c34:	add	r3, r3, #352	; 0x160
   38c38:	add	r1, pc, r1
   38c3c:	add	r0, pc, r0
   38c40:	bl	14030 <__assert_fail@plt>
   38c44:	andeq	r0, r2, r4, ror #4
   38c48:	andeq	r0, r2, r8, lsr #19
   38c4c:	strdeq	r0, [r2], -r4
   38c50:	muleq	r0, r3, r3

00038c54 <flatcc_builder_extend_offset_vector@@Base>:
   38c54:	ldr	ip, [r0, #32]
   38c58:	push	{r4, r5, r6, lr}
   38c5c:	ldr	r3, [ip, #20]
   38c60:	adds	r2, r1, r3
   38c64:	movcs	r3, #1
   38c68:	movcc	r3, #0
   38c6c:	cmn	r2, #-1073741823	; 0xc0000001
   38c70:	movls	r4, #0
   38c74:	movhi	r4, #1
   38c78:	orrs	r4, r3, r4
   38c7c:	bne	38cc8 <flatcc_builder_extend_offset_vector@@Base+0x74>
   38c80:	str	r2, [ip, #20]
   38c84:	ldr	r6, [r0, #20]
   38c88:	ldr	r3, [r0, #24]
   38c8c:	add	r1, r6, r1, lsl #2
   38c90:	cmp	r1, r3
   38c94:	mov	r5, r0
   38c98:	str	r1, [r0, #20]
   38c9c:	bcs	38cac <flatcc_builder_extend_offset_vector@@Base+0x58>
   38ca0:	ldr	r0, [r5, #16]
   38ca4:	add	r0, r0, r6
   38ca8:	pop	{r4, r5, r6, pc}
   38cac:	add	r1, r1, #1
   38cb0:	mvn	r2, #3
   38cb4:	bl	3767c <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   38cb8:	cmp	r0, #0
   38cbc:	beq	38ca0 <flatcc_builder_extend_offset_vector@@Base+0x4c>
   38cc0:	mov	r0, r4
   38cc4:	pop	{r4, r5, r6, pc}
   38cc8:	bl	141c0 <__assert_fail@plt+0x190>

00038ccc <flatcc_builder_offset_vector_push@@Base>:
   38ccc:	ldr	r2, [r0, #32]
   38cd0:	push	{r4, r5, r6, lr}
   38cd4:	ldrh	r3, [r2, #14]
   38cd8:	cmp	r3, #5
   38cdc:	bne	38d44 <flatcc_builder_offset_vector_push@@Base+0x78>
   38ce0:	ldr	r3, [r2, #20]
   38ce4:	cmn	r3, #-1073741823	; 0xc0000001
   38ce8:	beq	38d3c <flatcc_builder_offset_vector_push@@Base+0x70>
   38cec:	add	r3, r3, #1
   38cf0:	str	r3, [r2, #20]
   38cf4:	ldr	r5, [r0, #20]
   38cf8:	ldr	r2, [r0, #24]
   38cfc:	add	r3, r5, #4
   38d00:	cmp	r3, r2
   38d04:	mov	r4, r0
   38d08:	mov	r6, r1
   38d0c:	str	r3, [r0, #20]
   38d10:	bcs	38d28 <flatcc_builder_offset_vector_push@@Base+0x5c>
   38d14:	ldr	r3, [r4, #16]
   38d18:	adds	r0, r3, r5
   38d1c:	beq	38d68 <flatcc_builder_offset_vector_push@@Base+0x9c>
   38d20:	str	r6, [r3, r5]
   38d24:	pop	{r4, r5, r6, pc}
   38d28:	mvn	r2, #3
   38d2c:	add	r1, r5, #5
   38d30:	bl	3767c <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   38d34:	cmp	r0, #0
   38d38:	beq	38d14 <flatcc_builder_offset_vector_push@@Base+0x48>
   38d3c:	mov	r0, #0
   38d40:	pop	{r4, r5, r6, pc}
   38d44:	ldr	r3, [pc, #32]	; 38d6c <flatcc_builder_offset_vector_push@@Base+0xa0>
   38d48:	ldr	r1, [pc, #32]	; 38d70 <flatcc_builder_offset_vector_push@@Base+0xa4>
   38d4c:	ldr	r0, [pc, #32]	; 38d74 <flatcc_builder_offset_vector_push@@Base+0xa8>
   38d50:	add	r3, pc, r3
   38d54:	ldr	r2, [pc, #28]	; 38d78 <flatcc_builder_offset_vector_push@@Base+0xac>
   38d58:	add	r3, r3, #384	; 0x180
   38d5c:	add	r1, pc, r1
   38d60:	add	r0, pc, r0
   38d64:	bl	14030 <__assert_fail@plt>
   38d68:	pop	{r4, r5, r6, pc}
   38d6c:	andeq	r0, r2, r0, asr #2
   38d70:	andeq	r0, r2, r4, lsl #17
   38d74:	andeq	r0, r2, ip, lsr sl
   38d78:	andeq	r0, r0, r6, lsr #7

00038d7c <flatcc_builder_append_offset_vector@@Base>:
   38d7c:	ldr	ip, [r0, #32]
   38d80:	push	{r4, r5, r6, r7, r8, lr}
   38d84:	ldrh	r3, [ip, #14]
   38d88:	cmp	r3, #5
   38d8c:	bne	38e24 <flatcc_builder_append_offset_vector@@Base+0xa8>
   38d90:	mov	r6, r1
   38d94:	ldr	r1, [ip, #20]
   38d98:	adds	r1, r2, r1
   38d9c:	movcs	lr, #1
   38da0:	movcc	lr, #0
   38da4:	cmn	r1, #-1073741823	; 0xc0000001
   38da8:	movls	r3, #0
   38dac:	movhi	r3, #1
   38db0:	orrs	r8, lr, r3
   38db4:	bne	38e20 <flatcc_builder_append_offset_vector@@Base+0xa4>
   38db8:	str	r1, [ip, #20]
   38dbc:	ldr	r7, [r0, #20]
   38dc0:	lsl	r4, r2, #2
   38dc4:	ldr	r3, [r0, #24]
   38dc8:	add	r1, r4, r7
   38dcc:	cmp	r1, r3
   38dd0:	mov	r5, r0
   38dd4:	str	r1, [r0, #20]
   38dd8:	bcs	38e04 <flatcc_builder_append_offset_vector@@Base+0x88>
   38ddc:	ldr	r3, [r5, #16]
   38de0:	adds	r3, r3, r7
   38de4:	beq	38dfc <flatcc_builder_append_offset_vector@@Base+0x80>
   38de8:	mov	r0, r3
   38dec:	mov	r2, r4
   38df0:	mov	r1, r6
   38df4:	bl	13ed4 <memcpy@plt>
   38df8:	mov	r3, r0
   38dfc:	mov	r0, r3
   38e00:	pop	{r4, r5, r6, r7, r8, pc}
   38e04:	add	r1, r1, #1
   38e08:	mvn	r2, #3
   38e0c:	bl	3767c <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   38e10:	cmp	r0, #0
   38e14:	beq	38ddc <flatcc_builder_append_offset_vector@@Base+0x60>
   38e18:	mov	r3, r8
   38e1c:	b	38dfc <flatcc_builder_append_offset_vector@@Base+0x80>
   38e20:	bl	141c0 <__assert_fail@plt+0x190>
   38e24:	ldr	r3, [pc, #28]	; 38e48 <flatcc_builder_append_offset_vector@@Base+0xcc>
   38e28:	ldr	r1, [pc, #28]	; 38e4c <flatcc_builder_append_offset_vector@@Base+0xd0>
   38e2c:	ldr	r0, [pc, #28]	; 38e50 <flatcc_builder_append_offset_vector@@Base+0xd4>
   38e30:	add	r3, pc, r3
   38e34:	mov	r2, #948	; 0x3b4
   38e38:	add	r3, r3, #420	; 0x1a4
   38e3c:	add	r1, pc, r1
   38e40:	add	r0, pc, r0
   38e44:	bl	14030 <__assert_fail@plt>
   38e48:	andeq	r0, r2, r0, rrx
   38e4c:	andeq	r0, r2, r4, lsr #15
   38e50:	andeq	r0, r2, ip, asr r9

00038e54 <flatcc_builder_extend_string@@Base>:
   38e54:	ldr	r2, [r0, #32]
   38e58:	push	{r4, r5, r6, lr}
   38e5c:	ldrh	r3, [r2, #14]
   38e60:	cmp	r3, #6
   38e64:	bne	38ec0 <flatcc_builder_extend_string@@Base+0x6c>
   38e68:	ldr	r3, [r2, #20]
   38e6c:	adds	r3, r1, r3
   38e70:	bcs	38ebc <flatcc_builder_extend_string@@Base+0x68>
   38e74:	str	r3, [r2, #20]
   38e78:	ldr	r5, [r0, #20]
   38e7c:	ldr	r3, [r0, #24]
   38e80:	add	r1, r1, r5
   38e84:	cmp	r1, r3
   38e88:	mov	r4, r0
   38e8c:	str	r1, [r0, #20]
   38e90:	bcs	38ea0 <flatcc_builder_extend_string@@Base+0x4c>
   38e94:	ldr	r0, [r4, #16]
   38e98:	add	r0, r0, r5
   38e9c:	pop	{r4, r5, r6, pc}
   38ea0:	add	r1, r1, #1
   38ea4:	mvn	r2, #3
   38ea8:	bl	3767c <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   38eac:	cmp	r0, #0
   38eb0:	beq	38e94 <flatcc_builder_extend_string@@Base+0x40>
   38eb4:	mov	r0, #0
   38eb8:	pop	{r4, r5, r6, pc}
   38ebc:	bl	141c0 <__assert_fail@plt+0x190>
   38ec0:	ldr	r3, [pc, #28]	; 38ee4 <flatcc_builder_extend_string@@Base+0x90>
   38ec4:	ldr	r1, [pc, #28]	; 38ee8 <flatcc_builder_extend_string@@Base+0x94>
   38ec8:	ldr	r0, [pc, #28]	; 38eec <flatcc_builder_extend_string@@Base+0x98>
   38ecc:	add	r3, pc, r3
   38ed0:	ldr	r2, [pc, #24]	; 38ef0 <flatcc_builder_extend_string@@Base+0x9c>
   38ed4:	add	r3, r3, #456	; 0x1c8
   38ed8:	add	r1, pc, r1
   38edc:	add	r0, pc, r0
   38ee0:	bl	14030 <__assert_fail@plt>
   38ee4:	andeq	pc, r1, r4, asr #31
   38ee8:	andeq	r0, r2, r8, lsl #14
   38eec:	strdeq	r0, [r2], -r4
   38ef0:			; <UNDEFINED> instruction: 0x000003bd

00038ef4 <flatcc_builder_append_string@@Base>:
   38ef4:	push	{r4, r5, r6, r7, r8, lr}
   38ef8:	mov	r7, r1
   38efc:	ldr	r1, [r0, #32]
   38f00:	ldrh	r3, [r1, #14]
   38f04:	cmp	r3, #6
   38f08:	bne	38f84 <flatcc_builder_append_string@@Base+0x90>
   38f0c:	ldr	r3, [r1, #20]
   38f10:	mov	r5, r2
   38f14:	adds	r3, r2, r3
   38f18:	bcs	38f80 <flatcc_builder_append_string@@Base+0x8c>
   38f1c:	str	r3, [r1, #20]
   38f20:	ldr	r6, [r0, #20]
   38f24:	ldr	r3, [r0, #24]
   38f28:	add	r1, r2, r6
   38f2c:	cmp	r1, r3
   38f30:	mov	r4, r0
   38f34:	str	r1, [r0, #20]
   38f38:	bcs	38f64 <flatcc_builder_append_string@@Base+0x70>
   38f3c:	ldr	r3, [r4, #16]
   38f40:	adds	r3, r3, r6
   38f44:	beq	38f5c <flatcc_builder_append_string@@Base+0x68>
   38f48:	mov	r0, r3
   38f4c:	mov	r2, r5
   38f50:	mov	r1, r7
   38f54:	bl	13ed4 <memcpy@plt>
   38f58:	mov	r3, r0
   38f5c:	mov	r0, r3
   38f60:	pop	{r4, r5, r6, r7, r8, pc}
   38f64:	add	r1, r1, #1
   38f68:	mvn	r2, #3
   38f6c:	bl	3767c <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   38f70:	cmp	r0, #0
   38f74:	beq	38f3c <flatcc_builder_append_string@@Base+0x48>
   38f78:	mov	r3, #0
   38f7c:	b	38f5c <flatcc_builder_append_string@@Base+0x68>
   38f80:	bl	141c0 <__assert_fail@plt+0x190>
   38f84:	ldr	r3, [pc, #28]	; 38fa8 <flatcc_builder_append_string@@Base+0xb4>
   38f88:	ldr	r1, [pc, #28]	; 38fac <flatcc_builder_append_string@@Base+0xb8>
   38f8c:	ldr	r0, [pc, #28]	; 38fb0 <flatcc_builder_append_string@@Base+0xbc>
   38f90:	add	r3, pc, r3
   38f94:	ldr	r2, [pc, #24]	; 38fb4 <flatcc_builder_append_string@@Base+0xc0>
   38f98:	add	r3, r3, #488	; 0x1e8
   38f9c:	add	r1, pc, r1
   38fa0:	add	r0, pc, r0
   38fa4:	bl	14030 <__assert_fail@plt>
   38fa8:	andeq	pc, r1, r0, lsl #30
   38fac:	andeq	r0, r2, r4, asr #12
   38fb0:	andeq	r0, r2, r0, lsr r8
   38fb4:	andeq	r0, r0, r6, asr #7

00038fb8 <flatcc_builder_append_string_str@@Base>:
   38fb8:	push	{r4, r5, r6, lr}
   38fbc:	mov	r5, r0
   38fc0:	mov	r0, r1
   38fc4:	mov	r4, r1
   38fc8:	bl	13f70 <strlen@plt>
   38fcc:	mov	r1, r4
   38fd0:	mov	r2, r0
   38fd4:	mov	r0, r5
   38fd8:	pop	{r4, r5, r6, lr}
   38fdc:	b	38ef4 <flatcc_builder_append_string@@Base>

00038fe0 <flatcc_builder_append_string_strn@@Base>:
   38fe0:	push	{r4, r5, r6, lr}
   38fe4:	mov	r4, r1
   38fe8:	mov	r6, r0
   38fec:	mov	r1, #0
   38ff0:	mov	r0, r4
   38ff4:	mov	r5, r2
   38ff8:	bl	13fb8 <memchr@plt>
   38ffc:	mov	r1, r4
   39000:	cmp	r0, #0
   39004:	subne	r5, r0, r4
   39008:	mov	r2, r5
   3900c:	mov	r0, r6
   39010:	pop	{r4, r5, r6, lr}
   39014:	b	38ef4 <flatcc_builder_append_string@@Base>

00039018 <flatcc_builder_truncate_vector@@Base>:
   39018:	ldr	r3, [r0, #32]
   3901c:	push	{r4, lr}
   39020:	ldrh	r2, [r3, #14]
   39024:	cmp	r2, #4
   39028:	bne	3906c <flatcc_builder_truncate_vector@@Base+0x54>
   3902c:	ldr	ip, [r3, #20]
   39030:	cmp	ip, r1
   39034:	bcc	39090 <flatcc_builder_truncate_vector@@Base+0x78>
   39038:	ldr	r2, [r3, #16]
   3903c:	sub	ip, ip, r1
   39040:	str	ip, [r3, #20]
   39044:	mul	r2, r2, r1
   39048:	ldr	r3, [r0, #20]
   3904c:	ldr	r1, [r0, #16]
   39050:	sub	r3, r3, r2
   39054:	str	r3, [r0, #20]
   39058:	add	r0, r1, r3
   3905c:	mov	r1, #0
   39060:	bl	13f94 <memset@plt>
   39064:	mov	r0, #0
   39068:	pop	{r4, pc}
   3906c:	ldr	r3, [pc, #64]	; 390b4 <flatcc_builder_truncate_vector@@Base+0x9c>
   39070:	ldr	r1, [pc, #64]	; 390b8 <flatcc_builder_truncate_vector@@Base+0xa0>
   39074:	ldr	r0, [pc, #64]	; 390bc <flatcc_builder_truncate_vector@@Base+0xa4>
   39078:	add	r3, pc, r3
   3907c:	ldr	r2, [pc, #60]	; 390c0 <flatcc_builder_truncate_vector@@Base+0xa8>
   39080:	add	r3, r3, #520	; 0x208
   39084:	add	r1, pc, r1
   39088:	add	r0, pc, r0
   3908c:	bl	14030 <__assert_fail@plt>
   39090:	ldr	r3, [pc, #44]	; 390c4 <flatcc_builder_truncate_vector@@Base+0xac>
   39094:	ldr	r1, [pc, #44]	; 390c8 <flatcc_builder_truncate_vector@@Base+0xb0>
   39098:	ldr	r0, [pc, #44]	; 390cc <flatcc_builder_truncate_vector@@Base+0xb4>
   3909c:	add	r3, pc, r3
   390a0:	ldr	r2, [pc, #40]	; 390d0 <flatcc_builder_truncate_vector@@Base+0xb8>
   390a4:	add	r3, r3, #520	; 0x208
   390a8:	add	r1, pc, r1
   390ac:	add	r0, pc, r0
   390b0:	bl	14030 <__assert_fail@plt>
   390b4:	andeq	pc, r1, r8, lsl lr	; <UNPREDICTABLE>
   390b8:	andeq	r0, r2, ip, asr r5
   390bc:	andeq	r0, r2, r8, lsr #13
   390c0:	ldrdeq	r0, [r0], -r9
   390c4:	strdeq	pc, [r1], -r4
   390c8:	andeq	r0, r2, r8, lsr r5
   390cc:	andeq	r0, r2, r0, asr r7
   390d0:	ldrdeq	r0, [r0], -sl

000390d4 <flatcc_builder_truncate_offset_vector@@Base>:
   390d4:	ldr	r3, [r0, #32]
   390d8:	push	{r4, lr}
   390dc:	ldrh	r2, [r3, #14]
   390e0:	cmp	r2, #5
   390e4:	bne	39128 <flatcc_builder_truncate_offset_vector@@Base+0x54>
   390e8:	ldr	ip, [r3, #20]
   390ec:	cmp	ip, r1
   390f0:	bcc	3914c <flatcc_builder_truncate_offset_vector@@Base+0x78>
   390f4:	ldr	r2, [r3, #16]
   390f8:	sub	ip, ip, r1
   390fc:	str	ip, [r3, #20]
   39100:	mul	r2, r2, r1
   39104:	ldr	r3, [r0, #20]
   39108:	ldr	r1, [r0, #16]
   3910c:	sub	r3, r3, r2
   39110:	str	r3, [r0, #20]
   39114:	add	r0, r1, r3
   39118:	mov	r1, #0
   3911c:	bl	13f94 <memset@plt>
   39120:	mov	r0, #0
   39124:	pop	{r4, pc}
   39128:	ldr	r3, [pc, #64]	; 39170 <flatcc_builder_truncate_offset_vector@@Base+0x9c>
   3912c:	ldr	r1, [pc, #64]	; 39174 <flatcc_builder_truncate_offset_vector@@Base+0xa0>
   39130:	ldr	r0, [pc, #64]	; 39178 <flatcc_builder_truncate_offset_vector@@Base+0xa4>
   39134:	add	r3, pc, r3
   39138:	ldr	r2, [pc, #60]	; 3917c <flatcc_builder_truncate_offset_vector@@Base+0xa8>
   3913c:	add	r3, r3, #552	; 0x228
   39140:	add	r1, pc, r1
   39144:	add	r0, pc, r0
   39148:	bl	14030 <__assert_fail@plt>
   3914c:	ldr	r3, [pc, #44]	; 39180 <flatcc_builder_truncate_offset_vector@@Base+0xac>
   39150:	ldr	r1, [pc, #44]	; 39184 <flatcc_builder_truncate_offset_vector@@Base+0xb0>
   39154:	ldr	r0, [pc, #44]	; 39188 <flatcc_builder_truncate_offset_vector@@Base+0xb4>
   39158:	add	r3, pc, r3
   3915c:	ldr	r2, [pc, #40]	; 3918c <flatcc_builder_truncate_offset_vector@@Base+0xb8>
   39160:	add	r3, r3, #552	; 0x228
   39164:	add	r1, pc, r1
   39168:	add	r0, pc, r0
   3916c:	bl	14030 <__assert_fail@plt>
   39170:	andeq	pc, r1, ip, asr sp	; <UNPREDICTABLE>
   39174:	andeq	r0, r2, r0, lsr #9
   39178:	andeq	r0, r2, r8, asr r6
   3917c:	andeq	r0, r0, r2, ror #7
   39180:	andeq	pc, r1, r8, lsr sp	; <UNPREDICTABLE>
   39184:	andeq	r0, r2, ip, ror r4
   39188:			; <UNDEFINED> instruction: 0x000206b8
   3918c:	andeq	r0, r0, r3, ror #7

00039190 <flatcc_builder_truncate_string@@Base>:
   39190:	ldr	r2, [r0, #32]
   39194:	push	{r4, lr}
   39198:	ldrh	r3, [r2, #14]
   3919c:	cmp	r3, #6
   391a0:	bne	391e0 <flatcc_builder_truncate_string@@Base+0x50>
   391a4:	ldr	r3, [r2, #20]
   391a8:	cmp	r3, r1
   391ac:	bcc	39204 <flatcc_builder_truncate_string@@Base+0x74>
   391b0:	sub	r3, r3, r1
   391b4:	str	r3, [r2, #20]
   391b8:	ldr	r3, [r0, #20]
   391bc:	ldr	r2, [r0, #16]
   391c0:	sub	r3, r3, r1
   391c4:	str	r3, [r0, #20]
   391c8:	add	r0, r2, r3
   391cc:	mov	r2, r1
   391d0:	mov	r1, #0
   391d4:	bl	13f94 <memset@plt>
   391d8:	mov	r0, #0
   391dc:	pop	{r4, pc}
   391e0:	ldr	r3, [pc, #64]	; 39228 <flatcc_builder_truncate_string@@Base+0x98>
   391e4:	ldr	r1, [pc, #64]	; 3922c <flatcc_builder_truncate_string@@Base+0x9c>
   391e8:	ldr	r0, [pc, #64]	; 39230 <flatcc_builder_truncate_string@@Base+0xa0>
   391ec:	add	r3, pc, r3
   391f0:	ldr	r2, [pc, #60]	; 39234 <flatcc_builder_truncate_string@@Base+0xa4>
   391f4:	add	r3, r3, #592	; 0x250
   391f8:	add	r1, pc, r1
   391fc:	add	r0, pc, r0
   39200:	bl	14030 <__assert_fail@plt>
   39204:	ldr	r3, [pc, #44]	; 39238 <flatcc_builder_truncate_string@@Base+0xa8>
   39208:	ldr	r1, [pc, #44]	; 3923c <flatcc_builder_truncate_string@@Base+0xac>
   3920c:	ldr	r0, [pc, #44]	; 39240 <flatcc_builder_truncate_string@@Base+0xb0>
   39210:	add	r3, pc, r3
   39214:	mov	r2, #1004	; 0x3ec
   39218:	add	r3, r3, #592	; 0x250
   3921c:	add	r1, pc, r1
   39220:	add	r0, pc, r0
   39224:	bl	14030 <__assert_fail@plt>
   39228:	andeq	pc, r1, r4, lsr #25
   3922c:	andeq	r0, r2, r8, ror #7
   39230:	ldrdeq	r0, [r2], -r4
   39234:	andeq	r0, r0, fp, ror #7
   39238:	andeq	pc, r1, r0, lsl #25
   3923c:	andeq	r0, r2, r4, asr #7
   39240:	andeq	r0, r2, ip, lsr r6

00039244 <flatcc_builder_start_vector@@Base>:
   39244:	cmp	r2, #4
   39248:	push	{r4, r5, r6, lr}
   3924c:	mov	r6, r1
   39250:	movcs	r1, r2
   39254:	movcc	r1, #4
   39258:	mov	r5, r3
   3925c:	mov	r4, r0
   39260:	bl	3792c <flatcc_builder_default_alloc@@Base+0x23c>
   39264:	cmp	r0, #0
   39268:	bne	392b4 <flatcc_builder_start_vector@@Base+0x70>
   3926c:	ldr	r2, [r4, #32]
   39270:	mov	lr, #4
   39274:	str	r6, [r2, #16]
   39278:	str	r0, [r2, #20]
   3927c:	str	r5, [r2, #24]
   39280:	ldr	ip, [r4, #28]
   39284:	ldr	r3, [r4, #64]	; 0x40
   39288:	ldr	r1, [r4, #60]	; 0x3c
   3928c:	sub	r3, r3, ip
   39290:	cmn	r3, #4
   39294:	mvnhi	r3, #3
   39298:	strh	lr, [r2, #14]
   3929c:	add	r1, r1, ip
   392a0:	str	r3, [r4, #24]
   392a4:	mvn	r3, #3
   392a8:	str	r1, [r4, #16]
   392ac:	str	r3, [r2, #4]
   392b0:	pop	{r4, r5, r6, pc}
   392b4:	mvn	r0, #0
   392b8:	pop	{r4, r5, r6, pc}

000392bc <flatcc_builder_start_offset_vector@@Base>:
   392bc:	push	{r4, lr}
   392c0:	mov	r1, #4
   392c4:	mov	r4, r0
   392c8:	bl	3792c <flatcc_builder_default_alloc@@Base+0x23c>
   392cc:	cmp	r0, #0
   392d0:	bne	3931c <flatcc_builder_start_offset_vector@@Base+0x60>
   392d4:	ldr	r3, [r4, #32]
   392d8:	mov	r2, #4
   392dc:	mov	lr, #5
   392e0:	str	r0, [r3, #20]
   392e4:	str	r2, [r3, #16]
   392e8:	ldr	ip, [r4, #28]
   392ec:	ldr	r2, [r4, #64]	; 0x40
   392f0:	ldr	r1, [r4, #60]	; 0x3c
   392f4:	sub	r2, r2, ip
   392f8:	cmn	r2, #4
   392fc:	mvnhi	r2, #3
   39300:	strh	lr, [r3, #14]
   39304:	add	r1, r1, ip
   39308:	str	r2, [r4, #24]
   3930c:	mvn	r2, #3
   39310:	str	r1, [r4, #16]
   39314:	str	r2, [r3, #4]
   39318:	pop	{r4, pc}
   3931c:	mvn	r0, #0
   39320:	pop	{r4, pc}

00039324 <flatcc_builder_start_string@@Base>:
   39324:	push	{r4, lr}
   39328:	mov	r1, #1
   3932c:	mov	r4, r0
   39330:	bl	3792c <flatcc_builder_default_alloc@@Base+0x23c>
   39334:	cmp	r0, #0
   39338:	bne	39384 <flatcc_builder_start_string@@Base+0x60>
   3933c:	ldr	r3, [r4, #32]
   39340:	mov	r2, #1
   39344:	mov	lr, #6
   39348:	str	r0, [r3, #20]
   3934c:	str	r2, [r3, #16]
   39350:	ldr	ip, [r4, #28]
   39354:	ldr	r2, [r4, #64]	; 0x40
   39358:	ldr	r1, [r4, #60]	; 0x3c
   3935c:	sub	r2, r2, ip
   39360:	cmn	r2, #4
   39364:	mvnhi	r2, #3
   39368:	strh	lr, [r3, #14]
   3936c:	add	r1, r1, ip
   39370:	str	r2, [r4, #24]
   39374:	mvn	r2, #3
   39378:	str	r1, [r4, #16]
   3937c:	str	r2, [r3, #4]
   39380:	pop	{r4, pc}
   39384:	mvn	r0, #0
   39388:	pop	{r4, pc}

0003938c <flatcc_builder_reserve_table@@Base>:
   3938c:	cmp	r1, #0
   39390:	push	{r4, r5, r6, r7, lr}
   39394:	sub	sp, sp, #12
   39398:	blt	39470 <flatcc_builder_reserve_table@@Base+0xe4>
   3939c:	ldr	r2, [r0, #32]
   393a0:	add	r1, r1, #2
   393a4:	mov	r5, r0
   393a8:	ldrh	r6, [r2, #28]
   393ac:	ldr	r3, [r2, #16]
   393b0:	ldr	r0, [r0, #56]	; 0x38
   393b4:	lsl	r4, r1, #1
   393b8:	add	r6, r3, r6, lsl #1
   393bc:	add	r2, r6, r4
   393c0:	cmp	r2, r0
   393c4:	bhi	39420 <flatcc_builder_reserve_table@@Base+0x94>
   393c8:	ldr	r3, [r5, #52]	; 0x34
   393cc:	adds	r3, r3, r6
   393d0:	streq	r3, [r5, #4]
   393d4:	mvneq	r0, #0
   393d8:	beq	39418 <flatcc_builder_reserve_table@@Base+0x8c>
   393dc:	ldr	r2, [r5, #32]
   393e0:	add	r3, r3, #4
   393e4:	str	r3, [r5, #4]
   393e8:	ldr	r6, [r2, #20]
   393ec:	ldr	r3, [r5, #80]	; 0x50
   393f0:	add	r2, r4, r6
   393f4:	sub	r2, r2, #3
   393f8:	cmp	r2, r3
   393fc:	bhi	39448 <flatcc_builder_reserve_table@@Base+0xbc>
   39400:	ldr	r3, [r5, #76]	; 0x4c
   39404:	add	r3, r3, r6
   39408:	cmp	r3, #0
   3940c:	movne	r0, #0
   39410:	mvneq	r0, #0
   39414:	str	r3, [r5]
   39418:	add	sp, sp, #12
   3941c:	pop	{r4, r5, r6, r7, pc}
   39420:	mov	r3, #0
   39424:	ldr	r0, [r5, #40]	; 0x28
   39428:	add	r1, r5, #52	; 0x34
   3942c:	str	r3, [sp]
   39430:	mov	r3, #1
   39434:	ldr	r7, [r5, #48]	; 0x30
   39438:	blx	r7
   3943c:	cmp	r0, #0
   39440:	beq	393c8 <flatcc_builder_reserve_table@@Base+0x3c>
   39444:	bl	14120 <__assert_fail@plt+0xf0>
   39448:	mov	r3, #3
   3944c:	ldr	r0, [r5, #40]	; 0x28
   39450:	add	r1, r5, #76	; 0x4c
   39454:	str	r3, [sp]
   39458:	mov	r3, #0
   3945c:	ldr	r4, [r5, #48]	; 0x30
   39460:	blx	r4
   39464:	cmp	r0, #0
   39468:	beq	39400 <flatcc_builder_reserve_table@@Base+0x74>
   3946c:	b	39444 <flatcc_builder_reserve_table@@Base+0xb8>
   39470:	ldr	r3, [pc, #28]	; 39494 <flatcc_builder_reserve_table@@Base+0x108>
   39474:	ldr	r1, [pc, #28]	; 39498 <flatcc_builder_reserve_table@@Base+0x10c>
   39478:	ldr	r0, [pc, #28]	; 3949c <flatcc_builder_reserve_table@@Base+0x110>
   3947c:	add	r3, pc, r3
   39480:	ldr	r2, [pc, #24]	; 394a0 <flatcc_builder_reserve_table@@Base+0x114>
   39484:	add	r3, r3, #624	; 0x270
   39488:	add	r1, pc, r1
   3948c:	add	r0, pc, r0
   39490:	bl	14030 <__assert_fail@plt>
   39494:	andeq	pc, r1, r4, lsl sl	; <UNPREDICTABLE>
   39498:	andeq	r0, r2, r8, asr r1
   3949c:	strdeq	r0, [r2], -r4
   394a0:	andeq	r0, r0, r9, lsr #8

000394a4 <flatcc_builder_start_table@@Base>:
   394a4:	push	{r4, r5, r6, r7, r8, lr}
   394a8:	mov	r5, r1
   394ac:	sub	sp, sp, #8
   394b0:	mov	r1, #4
   394b4:	mov	r4, r0
   394b8:	bl	3792c <flatcc_builder_default_alloc@@Base+0x23c>
   394bc:	subs	r7, r0, #0
   394c0:	bne	395f8 <flatcc_builder_start_table@@Base+0x154>
   394c4:	ldr	r3, [r4, #52]	; 0x34
   394c8:	ldr	r6, [r4, #4]
   394cc:	ldr	r0, [r4, #32]
   394d0:	sub	r6, r6, r3
   394d4:	add	r5, r5, #2
   394d8:	str	r6, [r0, #16]
   394dc:	ldr	r1, [r4, #76]	; 0x4c
   394e0:	ldr	r2, [r4]
   394e4:	lsl	r5, r5, #1
   394e8:	sub	r2, r2, r1
   394ec:	str	r2, [r0, #20]
   394f0:	ldr	r2, [r4, #12]
   394f4:	ldr	lr, [pc, #268]	; 39608 <flatcc_builder_start_table@@Base+0x164>
   394f8:	str	r2, [r0, #24]
   394fc:	ldrh	r2, [r4, #8]
   39500:	mov	r1, #3
   39504:	strh	r2, [r0, #28]
   39508:	add	r6, r6, r2, lsl #1
   3950c:	ldr	ip, [r4, #56]	; 0x38
   39510:	add	r2, r6, r5
   39514:	cmp	r2, ip
   39518:	strh	r7, [r4, #8]
   3951c:	str	lr, [r4, #12]
   39520:	strh	r1, [r0, #14]
   39524:	bhi	395a8 <flatcc_builder_start_table@@Base+0x104>
   39528:	adds	r6, r3, r6
   3952c:	streq	r6, [r4, #4]
   39530:	beq	395f8 <flatcc_builder_start_table@@Base+0x154>
   39534:	ldr	r3, [r4, #32]
   39538:	add	r6, r6, #4
   3953c:	str	r6, [r4, #4]
   39540:	ldr	r6, [r3, #20]
   39544:	sub	r2, r5, #3
   39548:	ldr	r3, [r4, #80]	; 0x50
   3954c:	add	r2, r2, r6
   39550:	cmp	r2, r3
   39554:	bhi	395d0 <flatcc_builder_start_table@@Base+0x12c>
   39558:	ldr	r3, [r4, #76]	; 0x4c
   3955c:	add	r3, r3, r6
   39560:	cmp	r3, #0
   39564:	str	r3, [r4]
   39568:	beq	395f8 <flatcc_builder_start_table@@Base+0x154>
   3956c:	ldr	r0, [r4, #28]
   39570:	ldr	r3, [r4, #64]	; 0x40
   39574:	ldr	r2, [pc, #144]	; 3960c <flatcc_builder_start_table@@Base+0x168>
   39578:	sub	r3, r3, r0
   3957c:	ldr	r1, [r4, #60]	; 0x3c
   39580:	ldr	ip, [r4, #32]
   39584:	cmp	r3, r2
   39588:	add	r1, r1, r0
   3958c:	movcs	r3, r2
   39590:	str	r1, [r4, #16]
   39594:	str	r3, [r4, #24]
   39598:	mov	r0, r7
   3959c:	str	r2, [ip, #4]
   395a0:	add	sp, sp, #8
   395a4:	pop	{r4, r5, r6, r7, r8, pc}
   395a8:	ldr	r0, [r4, #40]	; 0x28
   395ac:	mov	r3, #1
   395b0:	str	r7, [sp]
   395b4:	add	r1, r4, #52	; 0x34
   395b8:	ldr	r8, [r4, #48]	; 0x30
   395bc:	blx	r8
   395c0:	cmp	r0, #0
   395c4:	bne	395f4 <flatcc_builder_start_table@@Base+0x150>
   395c8:	ldr	r3, [r4, #52]	; 0x34
   395cc:	b	39528 <flatcc_builder_start_table@@Base+0x84>
   395d0:	mov	r3, #3
   395d4:	ldr	r0, [r4, #40]	; 0x28
   395d8:	add	r1, r4, #76	; 0x4c
   395dc:	str	r3, [sp]
   395e0:	mov	r3, #0
   395e4:	ldr	r5, [r4, #48]	; 0x30
   395e8:	blx	r5
   395ec:	cmp	r0, #0
   395f0:	beq	39558 <flatcc_builder_start_table@@Base+0xb4>
   395f4:	bl	14120 <__assert_fail@plt+0xf0>
   395f8:	mvn	r7, #0
   395fc:	mov	r0, r7
   39600:	add	sp, sp, #8
   39604:	pop	{r4, r5, r6, r7, r8, pc}
   39608:	svccs	0x00693b52
   3960c:	strdeq	pc, [r0], -ip

00039610 <flatcc_builder_create_vtable@@Base>:
   39610:	push	{r4, r5, r6, lr}
   39614:	sub	sp, sp, #80	; 0x50
   39618:	subs	r3, r2, #0
   3961c:	mov	r2, #0
   39620:	mov	r4, r0
   39624:	str	r2, [sp, #8]
   39628:	str	r2, [sp, #12]
   3962c:	beq	396a4 <flatcc_builder_create_vtable@@Base+0x94>
   39630:	ldr	r0, [r0, #152]	; 0x98
   39634:	mov	r2, #1
   39638:	cmp	r0, #0
   3963c:	str	r1, [sp, #16]
   39640:	str	r3, [sp, #8]
   39644:	str	r3, [sp, #20]
   39648:	str	r2, [sp, #12]
   3964c:	mov	r1, r3
   39650:	beq	396c0 <flatcc_builder_create_vtable@@Base+0xb0>
   39654:	ldr	r2, [r4, #136]	; 0x88
   39658:	sub	r5, r2, r3
   3965c:	cmp	r2, r5
   39660:	ble	396bc <flatcc_builder_create_vtable@@Base+0xac>
   39664:	ldr	r0, [r4, #36]	; 0x24
   39668:	ldr	r2, [sp, #12]
   3966c:	str	r3, [sp]
   39670:	add	r1, sp, #16
   39674:	ldr	r6, [r4, #44]	; 0x2c
   39678:	mov	r3, r5
   3967c:	blx	r6
   39680:	cmp	r0, #0
   39684:	bne	39734 <flatcc_builder_create_vtable@@Base+0x124>
   39688:	cmp	r5, #0
   3968c:	str	r5, [r4, #136]	; 0x88
   39690:	beq	39698 <flatcc_builder_create_vtable@@Base+0x88>
   39694:	add	r5, r5, #1
   39698:	mov	r0, r5
   3969c:	add	sp, sp, #80	; 0x50
   396a0:	pop	{r4, r5, r6, pc}
   396a4:	ldr	r3, [r0, #152]	; 0x98
   396a8:	cmp	r3, #0
   396ac:	bne	396bc <flatcc_builder_create_vtable@@Base+0xac>
   396b0:	ldr	r3, [r0, #180]	; 0xb4
   396b4:	cmp	r3, #0
   396b8:	beq	39728 <flatcc_builder_create_vtable@@Base+0x118>
   396bc:	bl	14188 <__assert_fail@plt+0x158>
   396c0:	ldr	r2, [r4, #180]	; 0xb4
   396c4:	cmp	r2, #0
   396c8:	bne	39654 <flatcc_builder_create_vtable@@Base+0x44>
   396cc:	ldr	r5, [r4, #140]	; 0x8c
   396d0:	add	r3, r5, r3
   396d4:	cmp	r5, r3
   396d8:	str	r3, [r4, #140]	; 0x8c
   396dc:	bgt	39758 <flatcc_builder_create_vtable@@Base+0x148>
   396e0:	ldr	r0, [r4, #36]	; 0x24
   396e4:	ldr	r2, [sp, #12]
   396e8:	str	r1, [sp]
   396ec:	mov	r3, r5
   396f0:	ldr	r4, [r4, #44]	; 0x2c
   396f4:	add	r1, sp, #16
   396f8:	blx	r4
   396fc:	cmp	r0, #0
   39700:	beq	39694 <flatcc_builder_create_vtable@@Base+0x84>
   39704:	ldr	r3, [pc, #80]	; 3975c <flatcc_builder_create_vtable@@Base+0x14c>
   39708:	ldr	r1, [pc, #80]	; 39760 <flatcc_builder_create_vtable@@Base+0x150>
   3970c:	ldr	r0, [pc, #80]	; 39764 <flatcc_builder_create_vtable@@Base+0x154>
   39710:	add	r3, pc, r3
   39714:	ldr	r2, [pc, #76]	; 39768 <flatcc_builder_create_vtable@@Base+0x158>
   39718:	add	r3, r3, #16
   3971c:	add	r1, pc, r1
   39720:	add	r0, pc, r0
   39724:	bl	14030 <__assert_fail@plt>
   39728:	ldr	r5, [r4, #140]	; 0x8c
   3972c:	mov	r1, r3
   39730:	b	396e0 <flatcc_builder_create_vtable@@Base+0xd0>
   39734:	ldr	r3, [pc, #48]	; 3976c <flatcc_builder_create_vtable@@Base+0x15c>
   39738:	ldr	r1, [pc, #48]	; 39770 <flatcc_builder_create_vtable@@Base+0x160>
   3973c:	ldr	r0, [pc, #48]	; 39774 <flatcc_builder_create_vtable@@Base+0x164>
   39740:	add	r3, pc, r3
   39744:	ldr	r2, [pc, #44]	; 39778 <flatcc_builder_create_vtable@@Base+0x168>
   39748:	add	r3, r3, #28
   3974c:	add	r1, pc, r1
   39750:	add	r0, pc, r0
   39754:	bl	14030 <__assert_fail@plt>
   39758:	bl	14150 <__assert_fail@plt+0x120>
   3975c:	andeq	pc, r1, r0, lsl #15
   39760:	andeq	pc, r1, r4, asr #29
   39764:	andeq	lr, r0, r4, asr #14
   39768:	andeq	r0, r0, r5, lsr #5
   3976c:	andeq	pc, r1, r0, asr r7	; <UNPREDICTABLE>
   39770:	muleq	r1, r4, lr
   39774:	andeq	lr, r0, r4, lsl r7
   39778:	andeq	r0, r0, fp, lsl #5

0003977c <flatcc_builder_create_cached_vtable@@Base>:
   3977c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39780:	sub	sp, sp, #28
   39784:	ldr	r4, [r0, #116]	; 0x74
   39788:	mov	sl, r3
   3978c:	cmp	r4, #0
   39790:	mov	r8, r0
   39794:	str	r1, [sp, #8]
   39798:	mov	r7, r2
   3979c:	rsbne	r3, r4, #32
   397a0:	beq	398f8 <flatcc_builder_create_cached_vtable@@Base+0x17c>
   397a4:	lsr	sl, sl, r3
   397a8:	ldr	r3, [r8, #92]	; 0x5c
   397ac:	adds	r2, r3, sl, lsl #2
   397b0:	str	r3, [sp, #16]
   397b4:	str	r2, [sp, #20]
   397b8:	beq	398ec <flatcc_builder_create_cached_vtable@@Base+0x170>
   397bc:	ldr	r5, [r3, sl, lsl #2]
   397c0:	cmp	r5, #0
   397c4:	beq	399e8 <flatcc_builder_create_cached_vtable@@Base+0x26c>
   397c8:	mov	r3, #0
   397cc:	ldr	fp, [r8, #100]	; 0x64
   397d0:	ldr	r6, [r8, #68]	; 0x44
   397d4:	mov	r9, r2
   397d8:	str	r3, [sp, #12]
   397dc:	b	397f0 <flatcc_builder_create_cached_vtable@@Base+0x74>
   397e0:	ldr	r5, [r4, #12]
   397e4:	add	r9, r4, #12
   397e8:	cmp	r5, #0
   397ec:	beq	39840 <flatcc_builder_create_cached_vtable@@Base+0xc4>
   397f0:	add	r4, fp, r5
   397f4:	ldr	r2, [r4, #8]
   397f8:	add	r1, r6, r2
   397fc:	ldrh	r2, [r6, r2]
   39800:	cmp	r2, r7
   39804:	bne	397e0 <flatcc_builder_create_cached_vtable@@Base+0x64>
   39808:	mov	r2, r7
   3980c:	ldr	r0, [sp, #8]
   39810:	bl	13eec <memcmp@plt>
   39814:	cmp	r0, #0
   39818:	bne	397e0 <flatcc_builder_create_cached_vtable@@Base+0x64>
   3981c:	ldr	r1, [r4, #4]
   39820:	ldr	r2, [r8, #152]	; 0x98
   39824:	cmp	r1, r2
   39828:	beq	398bc <flatcc_builder_create_cached_vtable@@Base+0x140>
   3982c:	ldr	r5, [r4, #12]
   39830:	add	r9, r4, #12
   39834:	cmp	r5, #0
   39838:	str	r4, [sp, #12]
   3983c:	bne	397f0 <flatcc_builder_create_cached_vtable@@Base+0x74>
   39840:	ldr	r4, [r8, #124]	; 0x7c
   39844:	ldr	r3, [r8, #104]	; 0x68
   39848:	add	r2, r4, #16
   3984c:	cmp	r2, r3
   39850:	bhi	399c0 <flatcc_builder_create_cached_vtable@@Base+0x244>
   39854:	ldr	r5, [r8, #100]	; 0x64
   39858:	adds	r6, r5, r4
   3985c:	beq	398ec <flatcc_builder_create_cached_vtable@@Base+0x170>
   39860:	ldr	r3, [r8, #124]	; 0x7c
   39864:	ldr	r0, [sp, #16]
   39868:	ldr	r2, [r8, #152]	; 0x98
   3986c:	add	r1, r3, #16
   39870:	str	r1, [r8, #124]	; 0x7c
   39874:	str	r2, [r6, #4]
   39878:	ldr	r1, [r0, sl, lsl #2]
   3987c:	mov	r2, r7
   39880:	str	r1, [r6, #12]
   39884:	str	r3, [r0, sl, lsl #2]
   39888:	ldr	r1, [sp, #8]
   3988c:	mov	r0, r8
   39890:	bl	39610 <flatcc_builder_create_vtable@@Base>
   39894:	cmp	r0, #0
   39898:	str	r0, [r5, r4]
   3989c:	beq	398ec <flatcc_builder_create_cached_vtable@@Base+0x170>
   398a0:	ldr	r3, [sp, #12]
   398a4:	cmp	r3, #0
   398a8:	beq	399f0 <flatcc_builder_create_cached_vtable@@Base+0x274>
   398ac:	ldr	r3, [r3, #8]
   398b0:	str	r3, [r6, #8]
   398b4:	add	sp, sp, #28
   398b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   398bc:	ldr	r3, [sp, #20]
   398c0:	cmp	r3, r9
   398c4:	beq	398e0 <flatcc_builder_create_cached_vtable@@Base+0x164>
   398c8:	ldr	r2, [sp, #16]
   398cc:	ldr	r3, [r4, #12]
   398d0:	str	r3, [r9]
   398d4:	ldr	r3, [r2, sl, lsl #2]
   398d8:	str	r3, [r4, #12]
   398dc:	str	r5, [r2, sl, lsl #2]
   398e0:	ldr	r0, [r4]
   398e4:	add	sp, sp, #28
   398e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   398ec:	mov	r0, #0
   398f0:	add	sp, sp, #28
   398f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   398f8:	ldr	r3, [r0, #124]	; 0x7c
   398fc:	add	r5, r0, #92	; 0x5c
   39900:	cmp	r3, #0
   39904:	bne	39a88 <flatcc_builder_create_cached_vtable@@Base+0x30c>
   39908:	ldr	r3, [r0, #104]	; 0x68
   3990c:	cmp	r3, #15
   39910:	bls	39994 <flatcc_builder_create_cached_vtable@@Base+0x218>
   39914:	ldr	r3, [r8, #100]	; 0x64
   39918:	cmp	r3, #0
   3991c:	beq	398ec <flatcc_builder_create_cached_vtable@@Base+0x170>
   39920:	mov	r2, #16
   39924:	mov	r3, #5
   39928:	str	r2, [r8, #124]	; 0x7c
   3992c:	ldr	r0, [r8, #40]	; 0x28
   39930:	mov	r1, r5
   39934:	str	r3, [sp]
   39938:	mov	r2, #256	; 0x100
   3993c:	ldr	r5, [r8, #48]	; 0x30
   39940:	mov	r3, #1
   39944:	blx	r5
   39948:	cmp	r0, #0
   3994c:	bne	398ec <flatcc_builder_create_cached_vtable@@Base+0x170>
   39950:	ldr	r1, [r8, #96]	; 0x60
   39954:	mov	r3, #256	; 0x100
   39958:	b	39960 <flatcc_builder_create_cached_vtable@@Base+0x1e4>
   3995c:	mov	r3, r2
   39960:	lsl	r2, r3, #1
   39964:	cmp	r2, r1
   39968:	bls	3995c <flatcc_builder_create_cached_vtable@@Base+0x1e0>
   3996c:	lsr	r3, r3, #2
   39970:	cmp	r3, #1
   39974:	bls	39a48 <flatcc_builder_create_cached_vtable@@Base+0x2cc>
   39978:	mov	r2, #1
   3997c:	add	r4, r4, #1
   39980:	cmp	r3, r2, lsl r4
   39984:	bhi	3997c <flatcc_builder_create_cached_vtable@@Base+0x200>
   39988:	rsb	r3, r4, #32
   3998c:	str	r4, [r8, #116]	; 0x74
   39990:	b	397a4 <flatcc_builder_create_cached_vtable@@Base+0x28>
   39994:	mov	r3, #6
   39998:	ldr	r0, [r0, #40]	; 0x28
   3999c:	mov	r2, #16
   399a0:	str	r3, [sp]
   399a4:	add	r1, r8, #100	; 0x64
   399a8:	ldr	r6, [r8, #48]	; 0x30
   399ac:	mov	r3, r4
   399b0:	blx	r6
   399b4:	cmp	r0, #0
   399b8:	beq	39914 <flatcc_builder_create_cached_vtable@@Base+0x198>
   399bc:	b	39a74 <flatcc_builder_create_cached_vtable@@Base+0x2f8>
   399c0:	mov	r3, #6
   399c4:	ldr	r0, [r8, #40]	; 0x28
   399c8:	add	r1, r8, #100	; 0x64
   399cc:	str	r3, [sp]
   399d0:	mov	r3, #0
   399d4:	ldr	r5, [r8, #48]	; 0x30
   399d8:	blx	r5
   399dc:	cmp	r0, #0
   399e0:	beq	39854 <flatcc_builder_create_cached_vtable@@Base+0xd8>
   399e4:	b	39a74 <flatcc_builder_create_cached_vtable@@Base+0x2f8>
   399e8:	str	r5, [sp, #12]
   399ec:	b	39840 <flatcc_builder_create_cached_vtable@@Base+0xc4>
   399f0:	ldr	r3, [r8, #172]	; 0xac
   399f4:	ldr	r9, [r8, #120]	; 0x78
   399f8:	cmp	r3, #0
   399fc:	add	r2, r9, r7
   39a00:	beq	39a0c <flatcc_builder_create_cached_vtable@@Base+0x290>
   39a04:	cmp	r3, r2
   39a08:	bcc	39a78 <flatcc_builder_create_cached_vtable@@Base+0x2fc>
   39a0c:	ldr	r3, [r8, #72]	; 0x48
   39a10:	cmp	r3, r2
   39a14:	bcc	39a50 <flatcc_builder_create_cached_vtable@@Base+0x2d4>
   39a18:	ldr	r3, [r8, #68]	; 0x44
   39a1c:	adds	r0, r3, r9
   39a20:	beq	39aac <flatcc_builder_create_cached_vtable@@Base+0x330>
   39a24:	ldr	r3, [r8, #120]	; 0x78
   39a28:	ldr	r1, [sp, #8]
   39a2c:	add	ip, r3, r7
   39a30:	str	r3, [r6, #8]
   39a34:	mov	r2, r7
   39a38:	str	ip, [r8, #120]	; 0x78
   39a3c:	bl	13ed4 <memcpy@plt>
   39a40:	ldr	r0, [r5, r4]
   39a44:	b	398b4 <flatcc_builder_create_cached_vtable@@Base+0x138>
   39a48:	mov	r3, #32
   39a4c:	b	3998c <flatcc_builder_create_cached_vtable@@Base+0x210>
   39a50:	mov	r3, #2
   39a54:	ldr	r0, [r8, #40]	; 0x28
   39a58:	add	r1, r8, #68	; 0x44
   39a5c:	str	r3, [sp]
   39a60:	mov	r3, #0
   39a64:	ldr	sl, [r8, #48]	; 0x30
   39a68:	blx	sl
   39a6c:	cmp	r0, #0
   39a70:	beq	39a18 <flatcc_builder_create_cached_vtable@@Base+0x29c>
   39a74:	bl	14120 <__assert_fail@plt+0xf0>
   39a78:	mov	r0, r8
   39a7c:	bl	37c70 <flatcc_builder_flush_vtable_cache@@Base>
   39a80:	ldr	r0, [r5, r4]
   39a84:	b	398b4 <flatcc_builder_create_cached_vtable@@Base+0x138>
   39a88:	ldr	r3, [pc, #36]	; 39ab4 <flatcc_builder_create_cached_vtable@@Base+0x338>
   39a8c:	ldr	r1, [pc, #36]	; 39ab8 <flatcc_builder_create_cached_vtable@@Base+0x33c>
   39a90:	ldr	r0, [pc, #36]	; 39abc <flatcc_builder_create_cached_vtable@@Base+0x340>
   39a94:	add	r3, pc, r3
   39a98:	ldr	r2, [pc, #32]	; 39ac0 <flatcc_builder_create_cached_vtable@@Base+0x344>
   39a9c:	add	r3, r3, #656	; 0x290
   39aa0:	add	r1, pc, r1
   39aa4:	add	r0, pc, r0
   39aa8:	bl	14030 <__assert_fail@plt>
   39aac:	mvn	r0, #0
   39ab0:	b	398b4 <flatcc_builder_create_cached_vtable@@Base+0x138>
   39ab4:	strdeq	pc, [r1], -ip
   39ab8:	andeq	pc, r1, r0, asr #22
   39abc:	andeq	pc, r1, r8, ror #27
   39ac0:	andeq	r0, r0, r6, asr r1

00039ac4 <flatcc_builder_create_table@@Base>:
   39ac4:	push	{r4, r5, r6, r7, r8, lr}
   39ac8:	sub	sp, sp, #88	; 0x58
   39acc:	ldr	r8, [pc, #436]	; 39c88 <flatcc_builder_create_table@@Base+0x1c4>
   39ad0:	ldr	r4, [sp, #116]	; 0x74
   39ad4:	add	r8, pc, r8
   39ad8:	cmp	r4, #0
   39adc:	ldr	lr, [sp, #120]	; 0x78
   39ae0:	blt	39c18 <flatcc_builder_create_table@@Base+0x154>
   39ae4:	tst	lr, #1
   39ae8:	beq	39c64 <flatcc_builder_create_table@@Base+0x1a0>
   39aec:	mov	r5, r0
   39af0:	ldrh	r0, [r0, #128]	; 0x80
   39af4:	cmp	r3, #4
   39af8:	movcc	r3, #4
   39afc:	ldr	ip, [r5, #136]	; 0x88
   39b00:	cmp	r0, r3
   39b04:	mvn	r0, #3
   39b08:	strhcc	r3, [r5, #128]	; 0x80
   39b0c:	sub	r7, ip, r2
   39b10:	sub	r3, r3, #1
   39b14:	sub	r0, r0, r2
   39b18:	and	r7, r7, r3
   39b1c:	add	r0, r0, ip
   39b20:	sub	r3, lr, #1
   39b24:	sub	r0, r0, r7
   39b28:	sub	r3, r0, r3
   39b2c:	cmp	r4, #0
   39b30:	str	r3, [sp, #12]
   39b34:	beq	39b68 <flatcc_builder_create_table@@Base+0xa4>
   39b38:	ldr	ip, [sp, #112]	; 0x70
   39b3c:	mvn	r6, #3
   39b40:	add	r4, ip, r4, lsl #1
   39b44:	sub	r6, r6, r0
   39b48:	ldrh	r3, [ip], #2
   39b4c:	sub	lr, r6, r3
   39b50:	ldr	r0, [r1, r3]
   39b54:	cmp	r4, ip
   39b58:	add	r0, r0, lr
   39b5c:	str	r0, [r1, r3]
   39b60:	bne	39b48 <flatcc_builder_create_table@@Base+0x84>
   39b64:	ldr	ip, [r5, #136]	; 0x88
   39b68:	mov	r3, #4
   39b6c:	mov	lr, #1
   39b70:	add	r0, sp, #12
   39b74:	cmp	r2, #0
   39b78:	str	r3, [sp, #16]
   39b7c:	str	r3, [sp, #28]
   39b80:	str	r0, [sp, #24]
   39b84:	str	lr, [sp, #20]
   39b88:	beq	39ba4 <flatcc_builder_create_table@@Base+0xe0>
   39b8c:	add	r3, r2, r3
   39b90:	mov	r0, #2
   39b94:	str	r1, [sp, #32]
   39b98:	str	r2, [sp, #36]	; 0x24
   39b9c:	str	r3, [sp, #16]
   39ba0:	str	r0, [sp, #20]
   39ba4:	cmp	r7, #0
   39ba8:	beq	39bd8 <flatcc_builder_create_table@@Base+0x114>
   39bac:	ldr	r2, [sp, #20]
   39bb0:	ldr	r1, [pc, #212]	; 39c8c <flatcc_builder_create_table@@Base+0x1c8>
   39bb4:	add	r2, r2, #1
   39bb8:	add	r3, r3, r7
   39bbc:	str	r3, [sp, #16]
   39bc0:	ldr	r0, [r8, r1]
   39bc4:	add	r1, sp, #88	; 0x58
   39bc8:	add	r1, r1, r2, lsl #3
   39bcc:	str	r2, [sp, #20]
   39bd0:	str	r0, [r1, #-72]	; 0xffffffb8
   39bd4:	str	r7, [r1, #-68]	; 0xffffffbc
   39bd8:	sub	r4, ip, r3
   39bdc:	cmp	r4, ip
   39be0:	bge	39c60 <flatcc_builder_create_table@@Base+0x19c>
   39be4:	ldr	r0, [r5, #36]	; 0x24
   39be8:	ldr	r2, [sp, #20]
   39bec:	str	r3, [sp]
   39bf0:	add	r1, sp, #24
   39bf4:	ldr	r6, [r5, #44]	; 0x2c
   39bf8:	mov	r3, r4
   39bfc:	blx	r6
   39c00:	cmp	r0, #0
   39c04:	bne	39c3c <flatcc_builder_create_table@@Base+0x178>
   39c08:	mov	r0, r4
   39c0c:	str	r4, [r5, #136]	; 0x88
   39c10:	add	sp, sp, #88	; 0x58
   39c14:	pop	{r4, r5, r6, r7, r8, pc}
   39c18:	ldr	r3, [pc, #112]	; 39c90 <flatcc_builder_create_table@@Base+0x1cc>
   39c1c:	ldr	r1, [pc, #112]	; 39c94 <flatcc_builder_create_table@@Base+0x1d0>
   39c20:	ldr	r0, [pc, #112]	; 39c98 <flatcc_builder_create_table@@Base+0x1d4>
   39c24:	add	r3, pc, r3
   39c28:	ldr	r2, [pc, #108]	; 39c9c <flatcc_builder_create_table@@Base+0x1d8>
   39c2c:	add	r3, r3, #668	; 0x29c
   39c30:	add	r1, pc, r1
   39c34:	add	r0, pc, r0
   39c38:	bl	14030 <__assert_fail@plt>
   39c3c:	ldr	r3, [pc, #92]	; 39ca0 <flatcc_builder_create_table@@Base+0x1dc>
   39c40:	ldr	r1, [pc, #92]	; 39ca4 <flatcc_builder_create_table@@Base+0x1e0>
   39c44:	ldr	r0, [pc, #92]	; 39ca8 <flatcc_builder_create_table@@Base+0x1e4>
   39c48:	add	r3, pc, r3
   39c4c:	ldr	r2, [pc, #88]	; 39cac <flatcc_builder_create_table@@Base+0x1e8>
   39c50:	add	r3, r3, #28
   39c54:	add	r1, pc, r1
   39c58:	add	r0, pc, r0
   39c5c:	bl	14030 <__assert_fail@plt>
   39c60:	bl	14188 <__assert_fail@plt+0x158>
   39c64:	ldr	r3, [pc, #68]	; 39cb0 <flatcc_builder_create_table@@Base+0x1ec>
   39c68:	ldr	r1, [pc, #68]	; 39cb4 <flatcc_builder_create_table@@Base+0x1f0>
   39c6c:	ldr	r0, [pc, #68]	; 39cb8 <flatcc_builder_create_table@@Base+0x1f4>
   39c70:	add	r3, pc, r3
   39c74:	ldr	r2, [pc, #64]	; 39cbc <flatcc_builder_create_table@@Base+0x1f8>
   39c78:	add	r3, r3, #668	; 0x29c
   39c7c:	add	r1, pc, r1
   39c80:	add	r0, pc, r0
   39c84:	bl	14030 <__assert_fail@plt>
   39c88:	andeq	r0, r3, r4, lsr #10
   39c8c:	muleq	r0, r8, r0
   39c90:	andeq	pc, r1, ip, ror #4
   39c94:			; <UNDEFINED> instruction: 0x0001f9b0
   39c98:	andeq	pc, r1, r8, ror #24
   39c9c:	ldrdeq	r0, [r0], -r5
   39ca0:	andeq	pc, r1, r8, asr #4
   39ca4:	andeq	pc, r1, ip, lsl #19
   39ca8:	andeq	lr, r0, ip, lsl #4
   39cac:	andeq	r0, r0, fp, lsl #5
   39cb0:	andeq	pc, r1, r0, lsr #4
   39cb4:	andeq	pc, r1, r4, ror #18
   39cb8:	andeq	pc, r1, r0, lsr ip	; <UNPREDICTABLE>
   39cbc:	ldrdeq	r0, [r0], -fp

00039cc0 <flatcc_builder_check_required_field@@Base>:
   39cc0:	ldr	r3, [r0, #32]
   39cc4:	ldrh	r3, [r3, #14]
   39cc8:	cmp	r3, #3
   39ccc:	bne	39cf8 <flatcc_builder_check_required_field@@Base+0x38>
   39cd0:	ldrh	r3, [r0, #8]
   39cd4:	cmp	r3, r1
   39cd8:	movls	r0, #0
   39cdc:	bls	39cf4 <flatcc_builder_check_required_field@@Base+0x34>
   39ce0:	ldr	r3, [r0, #4]
   39ce4:	lsl	r1, r1, #1
   39ce8:	ldrh	r0, [r3, r1]
   39cec:	adds	r0, r0, #0
   39cf0:	movne	r0, #1
   39cf4:	bx	lr
   39cf8:	ldr	r3, [pc, #32]	; 39d20 <flatcc_builder_check_required_field@@Base+0x60>
   39cfc:	ldr	r1, [pc, #32]	; 39d24 <flatcc_builder_check_required_field@@Base+0x64>
   39d00:	ldr	r0, [pc, #32]	; 39d28 <flatcc_builder_check_required_field@@Base+0x68>
   39d04:	add	r3, pc, r3
   39d08:	push	{r4, lr}
   39d0c:	add	r3, r3, #696	; 0x2b8
   39d10:	ldr	r2, [pc, #20]	; 39d2c <flatcc_builder_check_required_field@@Base+0x6c>
   39d14:	add	r1, pc, r1
   39d18:	add	r0, pc, r0
   39d1c:	bl	14030 <__assert_fail@plt>
   39d20:	andeq	pc, r1, ip, lsl #3
   39d24:	andeq	pc, r1, ip, asr #17
   39d28:	andeq	pc, r1, r4, lsr #23
   39d2c:	strdeq	r0, [r0], -r8

00039d30 <flatcc_builder_check_union_field@@Base>:
   39d30:	ldr	r3, [r0, #32]
   39d34:	ldrh	r3, [r3, #14]
   39d38:	cmp	r3, #3
   39d3c:	bne	39db8 <flatcc_builder_check_union_field@@Base+0x88>
   39d40:	cmp	r1, #0
   39d44:	beq	39d90 <flatcc_builder_check_union_field@@Base+0x60>
   39d48:	ldrh	r3, [r0, #8]
   39d4c:	cmp	r3, r1
   39d50:	bls	39d90 <flatcc_builder_check_union_field@@Base+0x60>
   39d54:	sub	r1, r1, #-2147483647	; 0x80000001
   39d58:	ldr	r3, [r0, #4]
   39d5c:	lsl	r1, r1, #1
   39d60:	ldrh	r2, [r3, r1]
   39d64:	cmp	r2, #0
   39d68:	beq	39da4 <flatcc_builder_check_union_field@@Base+0x74>
   39d6c:	ldr	r0, [r0, #16]
   39d70:	add	r1, r3, r1
   39d74:	ldrb	r2, [r0, r2]
   39d78:	ldrh	r1, [r1, #2]
   39d7c:	cmp	r2, #0
   39d80:	bne	39d98 <flatcc_builder_check_union_field@@Base+0x68>
   39d84:	clz	r0, r1
   39d88:	lsr	r0, r0, #5
   39d8c:	bx	lr
   39d90:	mov	r0, #0
   39d94:	bx	lr
   39d98:	adds	r0, r1, #0
   39d9c:	movne	r0, #1
   39da0:	b	39d94 <flatcc_builder_check_union_field@@Base+0x64>
   39da4:	add	r1, r3, r1
   39da8:	ldrh	r1, [r1, #2]
   39dac:	clz	r0, r1
   39db0:	lsr	r0, r0, #5
   39db4:	bx	lr
   39db8:	ldr	r3, [pc, #32]	; 39de0 <flatcc_builder_check_union_field@@Base+0xb0>
   39dbc:	ldr	r1, [pc, #32]	; 39de4 <flatcc_builder_check_union_field@@Base+0xb4>
   39dc0:	ldr	r0, [pc, #32]	; 39de8 <flatcc_builder_check_union_field@@Base+0xb8>
   39dc4:	add	r3, pc, r3
   39dc8:	push	{r4, lr}
   39dcc:	add	r3, r3, #732	; 0x2dc
   39dd0:	ldr	r2, [pc, #20]	; 39dec <flatcc_builder_check_union_field@@Base+0xbc>
   39dd4:	add	r1, pc, r1
   39dd8:	add	r0, pc, r0
   39ddc:	bl	14030 <__assert_fail@plt>
   39de0:	andeq	pc, r1, ip, asr #1
   39de4:	andeq	pc, r1, ip, lsl #16
   39de8:	andeq	pc, r1, r4, ror #21
   39dec:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

00039df0 <flatcc_builder_check_required@@Base>:
   39df0:	ldr	r3, [r0, #32]
   39df4:	ldrh	r3, [r3, #14]
   39df8:	cmp	r3, #3
   39dfc:	bne	39e60 <flatcc_builder_check_required@@Base+0x70>
   39e00:	ldrh	r3, [r0, #8]
   39e04:	cmp	r3, r2
   39e08:	movlt	r0, #0
   39e0c:	blt	39e5c <flatcc_builder_check_required@@Base+0x6c>
   39e10:	cmp	r2, #0
   39e14:	ble	39e58 <flatcc_builder_check_required@@Base+0x68>
   39e18:	ldrh	r3, [r1]
   39e1c:	ldr	ip, [r0, #4]
   39e20:	lsl	r3, r3, #1
   39e24:	ldrh	r0, [ip, r3]
   39e28:	cmp	r0, #0
   39e2c:	beq	39e5c <flatcc_builder_check_required@@Base+0x6c>
   39e30:	add	r2, r1, r2, lsl #1
   39e34:	add	r1, r1, #2
   39e38:	b	39e50 <flatcc_builder_check_required@@Base+0x60>
   39e3c:	ldrh	r3, [r1], #2
   39e40:	lsl	r3, r3, #1
   39e44:	ldrh	r0, [ip, r3]
   39e48:	cmp	r0, #0
   39e4c:	beq	39e5c <flatcc_builder_check_required@@Base+0x6c>
   39e50:	cmp	r1, r2
   39e54:	bne	39e3c <flatcc_builder_check_required@@Base+0x4c>
   39e58:	mov	r0, #1
   39e5c:	bx	lr
   39e60:	ldr	r3, [pc, #32]	; 39e88 <flatcc_builder_check_required@@Base+0x98>
   39e64:	ldr	r1, [pc, #32]	; 39e8c <flatcc_builder_check_required@@Base+0x9c>
   39e68:	ldr	r0, [pc, #32]	; 39e90 <flatcc_builder_check_required@@Base+0xa0>
   39e6c:	add	r3, pc, r3
   39e70:	push	{r4, lr}
   39e74:	add	r3, r3, #768	; 0x300
   39e78:	ldr	r2, [pc, #20]	; 39e94 <flatcc_builder_check_required@@Base+0xa4>
   39e7c:	add	r1, pc, r1
   39e80:	add	r0, pc, r0
   39e84:	bl	14030 <__assert_fail@plt>
   39e88:	andeq	pc, r1, r4, lsr #32
   39e8c:	andeq	pc, r1, r4, ror #14
   39e90:	andeq	pc, r1, ip, lsr sl	; <UNPREDICTABLE>
   39e94:	andeq	r0, r0, r1, lsl r5

00039e98 <flatcc_builder_end_table@@Base>:
   39e98:	ldr	r3, [r0, #32]
   39e9c:	push	{r4, r5, r6, r7, lr}
   39ea0:	sub	sp, sp, #20
   39ea4:	ldrh	r3, [r3, #14]
   39ea8:	cmp	r3, #3
   39eac:	bne	3a030 <flatcc_builder_end_table@@Base+0x198>
   39eb0:	ldrh	r5, [r0, #8]
   39eb4:	ldr	r3, [r0, #12]
   39eb8:	ldr	r1, [pc, #404]	; 3a054 <flatcc_builder_end_table@@Base+0x1bc>
   39ebc:	add	r5, r5, #2
   39ec0:	ldr	r2, [r0, #20]
   39ec4:	lsl	r5, r5, #1
   39ec8:	add	r2, r2, #4
   39ecc:	uxth	r5, r5
   39ed0:	eor	r3, r3, r5
   39ed4:	uxth	r2, r2
   39ed8:	mul	r3, r1, r3
   39edc:	ldr	ip, [r0, #4]
   39ee0:	eor	r3, r3, r2
   39ee4:	sub	r6, ip, #4
   39ee8:	mul	r1, r1, r3
   39eec:	strh	r2, [ip, #-2]
   39ef0:	strh	r5, [ip, #-4]
   39ef4:	mov	r3, r1
   39ef8:	str	r1, [r0, #12]
   39efc:	mov	r2, r5
   39f00:	mov	r1, r6
   39f04:	mov	r4, r0
   39f08:	bl	3977c <flatcc_builder_create_cached_vtable@@Base>
   39f0c:	subs	r7, r0, #0
   39f10:	bne	39f24 <flatcc_builder_end_table@@Base+0x8c>
   39f14:	mov	r5, #0
   39f18:	mov	r0, r5
   39f1c:	add	sp, sp, #20
   39f20:	pop	{r4, r5, r6, r7, pc}
   39f24:	mov	r2, r5
   39f28:	mov	r1, #0
   39f2c:	mov	r0, r6
   39f30:	bl	13f94 <memset@plt>
   39f34:	ldr	r3, [r4, #32]
   39f38:	ldr	ip, [r4, #76]	; 0x4c
   39f3c:	ldr	r0, [r4]
   39f40:	ldr	r2, [r3, #20]
   39f44:	ldr	r1, [r4, #16]
   39f48:	add	ip, ip, r2
   39f4c:	sub	r0, r0, ip
   39f50:	ldrh	r3, [r4, #130]	; 0x82
   39f54:	asr	r0, r0, #1
   39f58:	ldr	r2, [r4, #20]
   39f5c:	str	r0, [sp, #4]
   39f60:	str	r7, [sp, #8]
   39f64:	str	ip, [sp]
   39f68:	mov	r0, r4
   39f6c:	bl	39ac4 <flatcc_builder_create_table@@Base>
   39f70:	subs	r5, r0, #0
   39f74:	beq	39f14 <flatcc_builder_end_table@@Base+0x7c>
   39f78:	ldr	r3, [r4, #32]
   39f7c:	ldr	r0, [r4, #52]	; 0x34
   39f80:	ldr	ip, [r4, #76]	; 0x4c
   39f84:	ldr	r1, [r3, #24]
   39f88:	ldr	r2, [r4, #20]
   39f8c:	str	r1, [r4, #12]
   39f90:	ldrh	lr, [r3, #28]
   39f94:	mov	r1, #0
   39f98:	strh	lr, [r4, #8]
   39f9c:	ldr	lr, [r3, #16]
   39fa0:	add	r0, r0, lr
   39fa4:	str	r0, [r4, #4]
   39fa8:	ldr	r3, [r3, #20]
   39fac:	ldr	r0, [r4, #16]
   39fb0:	add	r3, ip, r3
   39fb4:	str	r3, [r4]
   39fb8:	bl	13f94 <memset@plt>
   39fbc:	ldr	r3, [r4, #32]
   39fc0:	ldr	r2, [r4, #64]	; 0x40
   39fc4:	ldrh	lr, [r4, #130]	; 0x82
   39fc8:	ldr	ip, [r3]
   39fcc:	ldr	r1, [r3, #4]
   39fd0:	ldrh	r0, [r4, #128]	; 0x80
   39fd4:	sub	r2, r2, ip
   39fd8:	cmp	r2, r1
   39fdc:	movcs	r2, r1
   39fe0:	cmp	r0, lr
   39fe4:	ldr	r0, [r4, #60]	; 0x3c
   39fe8:	ldr	r6, [r3, #8]
   39fec:	str	r2, [r4, #24]
   39ff0:	add	r2, r0, ip
   39ff4:	str	r2, [r4, #16]
   39ff8:	str	r6, [r4, #20]
   39ffc:	ldr	r2, [r4, #156]	; 0x9c
   3a000:	str	ip, [r4, #28]
   3a004:	str	r1, [r3, #4]
   3a008:	strhcc	lr, [r4, #128]	; 0x80
   3a00c:	ldrh	r1, [r3, #12]
   3a010:	sub	r2, r2, #1
   3a014:	sub	r3, r3, #36	; 0x24
   3a018:	mov	r0, r5
   3a01c:	str	r2, [r4, #156]	; 0x9c
   3a020:	strh	r1, [r4, #130]	; 0x82
   3a024:	str	r3, [r4, #32]
   3a028:	add	sp, sp, #20
   3a02c:	pop	{r4, r5, r6, r7, pc}
   3a030:	ldr	r3, [pc, #32]	; 3a058 <flatcc_builder_end_table@@Base+0x1c0>
   3a034:	ldr	r1, [pc, #32]	; 3a05c <flatcc_builder_end_table@@Base+0x1c4>
   3a038:	ldr	r0, [pc, #32]	; 3a060 <flatcc_builder_end_table@@Base+0x1c8>
   3a03c:	add	r3, pc, r3
   3a040:	ldr	r2, [pc, #28]	; 3a064 <flatcc_builder_end_table@@Base+0x1cc>
   3a044:	add	r3, r3, #800	; 0x320
   3a048:	add	r1, pc, r1
   3a04c:	add	r0, pc, r0
   3a050:	bl	14030 <__assert_fail@plt>
   3a054:			; <UNDEFINED> instruction: 0x9e3779b1
   3a058:	andeq	lr, r1, r4, asr lr
   3a05c:	muleq	r1, r8, r5
   3a060:	andeq	pc, r1, r0, ror r8	; <UNPREDICTABLE>
   3a064:	andeq	r0, r0, r5, lsr #10

0003a068 <flatcc_builder_create_vector@@Base>:
   3a068:	push	{r4, r5, r6, lr}
   3a06c:	sub	sp, sp, #88	; 0x58
   3a070:	ldr	lr, [pc, #320]	; 3a1b8 <flatcc_builder_create_vector@@Base+0x150>
   3a074:	ldr	ip, [sp, #108]	; 0x6c
   3a078:	mov	r4, r0
   3a07c:	cmp	r2, ip
   3a080:	add	lr, pc, lr
   3a084:	ldrh	r0, [sp, #104]	; 0x68
   3a088:	bhi	3a16c <flatcc_builder_create_vector@@Base+0x104>
   3a08c:	ldrh	ip, [r4, #128]	; 0x80
   3a090:	cmp	r0, #4
   3a094:	mul	r3, r3, r2
   3a098:	movcc	r0, #4
   3a09c:	ldr	r6, [r4, #136]	; 0x88
   3a0a0:	cmp	ip, r0
   3a0a4:	strhcc	r0, [r4, #128]	; 0x80
   3a0a8:	sub	r5, r6, r3
   3a0ac:	sub	r0, r0, #1
   3a0b0:	mov	ip, #4
   3a0b4:	str	r2, [sp, #12]
   3a0b8:	and	r0, r0, r5
   3a0bc:	add	r2, sp, #12
   3a0c0:	mov	r5, #1
   3a0c4:	cmp	r3, #0
   3a0c8:	str	ip, [sp, #16]
   3a0cc:	str	ip, [sp, #28]
   3a0d0:	str	r2, [sp, #24]
   3a0d4:	str	r5, [sp, #20]
   3a0d8:	bne	3a150 <flatcc_builder_create_vector@@Base+0xe8>
   3a0dc:	cmp	r0, #0
   3a0e0:	beq	3a110 <flatcc_builder_create_vector@@Base+0xa8>
   3a0e4:	ldr	r3, [sp, #20]
   3a0e8:	ldr	r2, [pc, #204]	; 3a1bc <flatcc_builder_create_vector@@Base+0x154>
   3a0ec:	add	r3, r3, #1
   3a0f0:	add	ip, ip, r0
   3a0f4:	str	ip, [sp, #16]
   3a0f8:	ldr	r1, [lr, r2]
   3a0fc:	add	r2, sp, #88	; 0x58
   3a100:	add	r2, r2, r3, lsl #3
   3a104:	str	r3, [sp, #20]
   3a108:	str	r1, [r2, #-72]	; 0xffffffb8
   3a10c:	str	r0, [r2, #-68]	; 0xffffffbc
   3a110:	sub	r5, r6, ip
   3a114:	cmp	r6, r5
   3a118:	ble	3a1b4 <flatcc_builder_create_vector@@Base+0x14c>
   3a11c:	ldr	r0, [r4, #36]	; 0x24
   3a120:	ldr	r2, [sp, #20]
   3a124:	str	ip, [sp]
   3a128:	mov	r3, r5
   3a12c:	ldr	r6, [r4, #44]	; 0x2c
   3a130:	add	r1, sp, #24
   3a134:	blx	r6
   3a138:	cmp	r0, #0
   3a13c:	bne	3a190 <flatcc_builder_create_vector@@Base+0x128>
   3a140:	mov	r0, r5
   3a144:	str	r5, [r4, #136]	; 0x88
   3a148:	add	sp, sp, #88	; 0x58
   3a14c:	pop	{r4, r5, r6, pc}
   3a150:	add	ip, r3, ip
   3a154:	mov	r2, #2
   3a158:	str	r1, [sp, #32]
   3a15c:	str	r3, [sp, #36]	; 0x24
   3a160:	str	ip, [sp, #16]
   3a164:	str	r2, [sp, #20]
   3a168:	b	3a0dc <flatcc_builder_create_vector@@Base+0x74>
   3a16c:	ldr	r3, [pc, #76]	; 3a1c0 <flatcc_builder_create_vector@@Base+0x158>
   3a170:	ldr	r1, [pc, #76]	; 3a1c4 <flatcc_builder_create_vector@@Base+0x15c>
   3a174:	ldr	r0, [pc, #76]	; 3a1c8 <flatcc_builder_create_vector@@Base+0x160>
   3a178:	add	r3, pc, r3
   3a17c:	ldr	r2, [pc, #72]	; 3a1cc <flatcc_builder_create_vector@@Base+0x164>
   3a180:	add	r3, r3, #828	; 0x33c
   3a184:	add	r1, pc, r1
   3a188:	add	r0, pc, r0
   3a18c:	bl	14030 <__assert_fail@plt>
   3a190:	ldr	r3, [pc, #56]	; 3a1d0 <flatcc_builder_create_vector@@Base+0x168>
   3a194:	ldr	r1, [pc, #56]	; 3a1d4 <flatcc_builder_create_vector@@Base+0x16c>
   3a198:	ldr	r0, [pc, #56]	; 3a1d8 <flatcc_builder_create_vector@@Base+0x170>
   3a19c:	add	r3, pc, r3
   3a1a0:	ldr	r2, [pc, #52]	; 3a1dc <flatcc_builder_create_vector@@Base+0x174>
   3a1a4:	add	r3, r3, #28
   3a1a8:	add	r1, pc, r1
   3a1ac:	add	r0, pc, r0
   3a1b0:	bl	14030 <__assert_fail@plt>
   3a1b4:	bl	14188 <__assert_fail@plt+0x158>
   3a1b8:	andeq	pc, r2, r8, ror pc	; <UNPREDICTABLE>
   3a1bc:	muleq	r0, r8, r0
   3a1c0:	andeq	lr, r1, r8, lsl sp
   3a1c4:	andeq	pc, r1, ip, asr r4	; <UNPREDICTABLE>
   3a1c8:	andeq	pc, r1, r0, ror #14
   3a1cc:	andeq	r0, r0, r5, asr r5
   3a1d0:	strdeq	lr, [r1], -r4
   3a1d4:	andeq	pc, r1, r8, lsr r4	; <UNPREDICTABLE>
   3a1d8:			; <UNDEFINED> instruction: 0x0000dcb8
   3a1dc:	andeq	r0, r0, fp, lsl #5

0003a1e0 <flatcc_builder_end_vector@@Base>:
   3a1e0:	ldr	r1, [r0, #32]
   3a1e4:	push	{r4, r5, r6, lr}
   3a1e8:	sub	sp, sp, #8
   3a1ec:	ldrh	r3, [r1, #14]
   3a1f0:	cmp	r3, #4
   3a1f4:	bne	3a2a8 <flatcc_builder_end_vector@@Base+0xc8>
   3a1f8:	ldrh	lr, [r0, #130]	; 0x82
   3a1fc:	ldr	ip, [r1, #24]
   3a200:	ldr	r3, [r1, #16]
   3a204:	ldr	r2, [r1, #20]
   3a208:	ldr	r1, [r0, #16]
   3a20c:	str	lr, [sp]
   3a210:	str	ip, [sp, #4]
   3a214:	mov	r4, r0
   3a218:	bl	3a068 <flatcc_builder_create_vector@@Base>
   3a21c:	subs	r5, r0, #0
   3a220:	beq	3a29c <flatcc_builder_end_vector@@Base+0xbc>
   3a224:	ldr	r2, [r4, #20]
   3a228:	mov	r1, #0
   3a22c:	ldr	r0, [r4, #16]
   3a230:	bl	13f94 <memset@plt>
   3a234:	ldr	r3, [r4, #32]
   3a238:	ldr	r2, [r4, #64]	; 0x40
   3a23c:	ldrh	lr, [r4, #130]	; 0x82
   3a240:	ldr	ip, [r3]
   3a244:	ldr	r1, [r3, #4]
   3a248:	ldrh	r0, [r4, #128]	; 0x80
   3a24c:	sub	r2, r2, ip
   3a250:	cmp	r2, r1
   3a254:	movcs	r2, r1
   3a258:	cmp	r0, lr
   3a25c:	ldr	r0, [r4, #60]	; 0x3c
   3a260:	ldr	r6, [r3, #8]
   3a264:	str	r2, [r4, #24]
   3a268:	add	r2, r0, ip
   3a26c:	str	r2, [r4, #16]
   3a270:	str	r6, [r4, #20]
   3a274:	ldr	r2, [r4, #156]	; 0x9c
   3a278:	str	ip, [r4, #28]
   3a27c:	str	r1, [r3, #4]
   3a280:	strhcc	lr, [r4, #128]	; 0x80
   3a284:	ldrh	r1, [r3, #12]
   3a288:	sub	r2, r2, #1
   3a28c:	sub	r3, r3, #36	; 0x24
   3a290:	str	r2, [r4, #156]	; 0x9c
   3a294:	strh	r1, [r4, #130]	; 0x82
   3a298:	str	r3, [r4, #32]
   3a29c:	mov	r0, r5
   3a2a0:	add	sp, sp, #8
   3a2a4:	pop	{r4, r5, r6, pc}
   3a2a8:	ldr	r3, [pc, #28]	; 3a2cc <flatcc_builder_end_vector@@Base+0xec>
   3a2ac:	ldr	r1, [pc, #28]	; 3a2d0 <flatcc_builder_end_vector@@Base+0xf0>
   3a2b0:	ldr	r0, [pc, #28]	; 3a2d4 <flatcc_builder_end_vector@@Base+0xf4>
   3a2b4:	add	r3, pc, r3
   3a2b8:	ldr	r2, [pc, #24]	; 3a2d8 <flatcc_builder_end_vector@@Base+0xf8>
   3a2bc:	add	r3, r3, #860	; 0x35c
   3a2c0:	add	r1, pc, r1
   3a2c4:	add	r0, pc, r0
   3a2c8:	bl	14030 <__assert_fail@plt>
   3a2cc:	ldrdeq	lr, [r1], -ip
   3a2d0:	andeq	pc, r1, r0, lsr #6
   3a2d4:	andeq	pc, r1, ip, ror #8
   3a2d8:	andeq	r0, r0, r8, ror r5

0003a2dc <flatcc_builder_vector_count@@Base>:
   3a2dc:	ldr	r3, [r0, #32]
   3a2e0:	ldr	r0, [r3, #20]
   3a2e4:	bx	lr

0003a2e8 <flatcc_builder_vector_edit@@Base>:
   3a2e8:	ldr	r0, [r0, #16]
   3a2ec:	bx	lr

0003a2f0 <flatcc_builder_create_offset_vector_direct@@Base>:
   3a2f0:	cmn	r2, #-1073741823	; 0xc0000001
   3a2f4:	bls	3a300 <flatcc_builder_create_offset_vector_direct@@Base+0x10>
   3a2f8:	mov	r0, #0
   3a2fc:	bx	lr
   3a300:	mov	r3, #0
   3a304:	b	37a40 <flatcc_builder_default_alloc@@Base+0x350>

0003a308 <flatcc_builder_end_offset_vector@@Base>:
   3a308:	ldr	r3, [r0, #32]
   3a30c:	push	{r4, r5, r6, lr}
   3a310:	ldrh	r2, [r3, #14]
   3a314:	cmp	r2, #5
   3a318:	bne	3a3b4 <flatcc_builder_end_offset_vector@@Base+0xac>
   3a31c:	ldr	r2, [r3, #20]
   3a320:	ldr	r1, [r0, #16]
   3a324:	mov	r4, r0
   3a328:	bl	3a2f0 <flatcc_builder_create_offset_vector_direct@@Base>
   3a32c:	subs	r5, r0, #0
   3a330:	beq	3a3ac <flatcc_builder_end_offset_vector@@Base+0xa4>
   3a334:	ldr	r2, [r4, #20]
   3a338:	mov	r1, #0
   3a33c:	ldr	r0, [r4, #16]
   3a340:	bl	13f94 <memset@plt>
   3a344:	ldr	r3, [r4, #32]
   3a348:	ldr	r2, [r4, #64]	; 0x40
   3a34c:	ldrh	lr, [r4, #130]	; 0x82
   3a350:	ldr	ip, [r3]
   3a354:	ldr	r1, [r3, #4]
   3a358:	ldrh	r0, [r4, #128]	; 0x80
   3a35c:	sub	r2, r2, ip
   3a360:	cmp	r2, r1
   3a364:	movcs	r2, r1
   3a368:	cmp	r0, lr
   3a36c:	ldr	r0, [r4, #60]	; 0x3c
   3a370:	ldr	r6, [r3, #8]
   3a374:	str	r2, [r4, #24]
   3a378:	add	r2, r0, ip
   3a37c:	str	r2, [r4, #16]
   3a380:	str	r6, [r4, #20]
   3a384:	ldr	r2, [r4, #156]	; 0x9c
   3a388:	str	ip, [r4, #28]
   3a38c:	str	r1, [r3, #4]
   3a390:	strhcc	lr, [r4, #128]	; 0x80
   3a394:	ldrh	r1, [r3, #12]
   3a398:	sub	r2, r2, #1
   3a39c:	sub	r3, r3, #36	; 0x24
   3a3a0:	str	r2, [r4, #156]	; 0x9c
   3a3a4:	strh	r1, [r4, #130]	; 0x82
   3a3a8:	str	r3, [r4, #32]
   3a3ac:	mov	r0, r5
   3a3b0:	pop	{r4, r5, r6, pc}
   3a3b4:	ldr	r3, [pc, #28]	; 3a3d8 <flatcc_builder_end_offset_vector@@Base+0xd0>
   3a3b8:	ldr	r1, [pc, #28]	; 3a3dc <flatcc_builder_end_offset_vector@@Base+0xd4>
   3a3bc:	ldr	r0, [pc, #28]	; 3a3e0 <flatcc_builder_end_offset_vector@@Base+0xd8>
   3a3c0:	add	r3, pc, r3
   3a3c4:	ldr	r2, [pc, #24]	; 3a3e4 <flatcc_builder_end_offset_vector@@Base+0xdc>
   3a3c8:	add	r3, r3, #888	; 0x378
   3a3cc:	add	r1, pc, r1
   3a3d0:	add	r0, pc, r0
   3a3d4:	bl	14030 <__assert_fail@plt>
   3a3d8:	ldrdeq	lr, [r1], -r0
   3a3dc:	andeq	pc, r1, r4, lsl r2	; <UNPREDICTABLE>
   3a3e0:	andeq	pc, r1, ip, asr #7
   3a3e4:	andeq	r0, r0, r8, asr #11

0003a3e8 <flatcc_builder_create_offset_vector@@Base>:
   3a3e8:	push	{r4, r5, r6, lr}
   3a3ec:	mov	r6, r1
   3a3f0:	mov	r5, r2
   3a3f4:	mov	r4, r0
   3a3f8:	bl	392bc <flatcc_builder_start_offset_vector@@Base>
   3a3fc:	cmp	r0, #0
   3a400:	beq	3a40c <flatcc_builder_create_offset_vector@@Base+0x24>
   3a404:	mov	r0, #0
   3a408:	pop	{r4, r5, r6, pc}
   3a40c:	mov	r1, r5
   3a410:	mov	r0, r4
   3a414:	bl	38c54 <flatcc_builder_extend_offset_vector@@Base>
   3a418:	cmp	r0, #0
   3a41c:	beq	3a404 <flatcc_builder_create_offset_vector@@Base+0x1c>
   3a420:	lsl	r2, r5, #2
   3a424:	mov	r1, r6
   3a428:	bl	13ed4 <memcpy@plt>
   3a42c:	mov	r0, r4
   3a430:	pop	{r4, r5, r6, lr}
   3a434:	b	3a308 <flatcc_builder_end_offset_vector@@Base>

0003a438 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   3a438:	ldr	r2, [r0, #32]
   3a43c:	push	{r4, r5, r6, lr}
   3a440:	ldrh	ip, [r2, #14]
   3a444:	cmp	ip, #5
   3a448:	bne	3a4fc <flatcc_builder_end_offset_vector_for_unions@@Base+0xc4>
   3a44c:	ldr	r2, [r2, #20]
   3a450:	cmn	r2, #-1073741823	; 0xc0000001
   3a454:	bls	3a464 <flatcc_builder_end_offset_vector_for_unions@@Base+0x2c>
   3a458:	mov	r5, #0
   3a45c:	mov	r0, r5
   3a460:	pop	{r4, r5, r6, pc}
   3a464:	mov	r3, r1
   3a468:	ldr	r1, [r0, #16]
   3a46c:	mov	r4, r0
   3a470:	bl	37a40 <flatcc_builder_default_alloc@@Base+0x350>
   3a474:	subs	r5, r0, #0
   3a478:	beq	3a458 <flatcc_builder_end_offset_vector_for_unions@@Base+0x20>
   3a47c:	ldr	r2, [r4, #20]
   3a480:	mov	r1, #0
   3a484:	ldr	r0, [r4, #16]
   3a488:	bl	13f94 <memset@plt>
   3a48c:	ldr	r3, [r4, #32]
   3a490:	ldr	r2, [r4, #64]	; 0x40
   3a494:	ldrh	lr, [r4, #130]	; 0x82
   3a498:	ldr	ip, [r3]
   3a49c:	ldr	r1, [r3, #4]
   3a4a0:	ldrh	r0, [r4, #128]	; 0x80
   3a4a4:	sub	r2, r2, ip
   3a4a8:	cmp	r2, r1
   3a4ac:	movcs	r2, r1
   3a4b0:	cmp	r0, lr
   3a4b4:	ldr	r0, [r4, #60]	; 0x3c
   3a4b8:	ldr	r6, [r3, #8]
   3a4bc:	str	r2, [r4, #24]
   3a4c0:	add	r2, r0, ip
   3a4c4:	str	r2, [r4, #16]
   3a4c8:	str	r6, [r4, #20]
   3a4cc:	ldr	r2, [r4, #156]	; 0x9c
   3a4d0:	str	ip, [r4, #28]
   3a4d4:	str	r1, [r3, #4]
   3a4d8:	strhcc	lr, [r4, #128]	; 0x80
   3a4dc:	ldrh	r1, [r3, #12]
   3a4e0:	sub	r2, r2, #1
   3a4e4:	sub	r3, r3, #36	; 0x24
   3a4e8:	str	r2, [r4, #156]	; 0x9c
   3a4ec:	strh	r1, [r4, #130]	; 0x82
   3a4f0:	str	r3, [r4, #32]
   3a4f4:	mov	r0, r5
   3a4f8:	pop	{r4, r5, r6, pc}
   3a4fc:	ldr	r3, [pc, #28]	; 3a520 <flatcc_builder_end_offset_vector_for_unions@@Base+0xe8>
   3a500:	ldr	r1, [pc, #28]	; 3a524 <flatcc_builder_end_offset_vector_for_unions@@Base+0xec>
   3a504:	ldr	r0, [pc, #28]	; 3a528 <flatcc_builder_end_offset_vector_for_unions@@Base+0xf0>
   3a508:	add	r3, pc, r3
   3a50c:	ldr	r2, [pc, #24]	; 3a52c <flatcc_builder_end_offset_vector_for_unions@@Base+0xf4>
   3a510:	add	r3, r3, #924	; 0x39c
   3a514:	add	r1, pc, r1
   3a518:	add	r0, pc, r0
   3a51c:	bl	14030 <__assert_fail@plt>
   3a520:	andeq	lr, r1, r8, lsl #19
   3a524:	andeq	pc, r1, ip, asr #1
   3a528:	andeq	pc, r1, r4, lsl #5
   3a52c:	ldrdeq	r0, [r0], -r5

0003a530 <flatcc_builder_offset_vector_edit@@Base>:
   3a530:	ldr	r0, [r0, #16]
   3a534:	bx	lr

0003a538 <flatcc_builder_offset_vector_count@@Base>:
   3a538:	ldr	r3, [r0, #32]
   3a53c:	ldr	r0, [r3, #20]
   3a540:	bx	lr

0003a544 <flatcc_builder_create_union_vector_direct@@Base>:
   3a544:	push	{r4, r5, r6, r7, r8, lr}
   3a548:	sub	sp, sp, #8
   3a54c:	mov	r4, r0
   3a550:	ldr	r5, [sp, #32]
   3a554:	cmn	r5, #-1073741823	; 0xc0000001
   3a558:	bls	3a574 <flatcc_builder_create_union_vector_direct@@Base+0x30>
   3a55c:	mov	r3, #0
   3a560:	mov	r0, r4
   3a564:	str	r3, [r4]
   3a568:	str	r3, [r4, #4]
   3a56c:	add	sp, sp, #8
   3a570:	pop	{r4, r5, r6, r7, r8, pc}
   3a574:	mov	r6, r1
   3a578:	mov	r7, r2
   3a57c:	mov	r1, r3
   3a580:	mov	r0, r6
   3a584:	mov	r3, r2
   3a588:	mov	r2, r5
   3a58c:	bl	37a40 <flatcc_builder_default_alloc@@Base+0x350>
   3a590:	subs	r8, r0, #0
   3a594:	beq	3a55c <flatcc_builder_create_union_vector_direct@@Base+0x18>
   3a598:	mvn	ip, #0
   3a59c:	mov	r3, #1
   3a5a0:	mov	r2, r5
   3a5a4:	mov	r1, r7
   3a5a8:	mov	r0, r6
   3a5ac:	stm	sp, {r3, ip}
   3a5b0:	bl	3a068 <flatcc_builder_create_vector@@Base>
   3a5b4:	stm	r4, {r0, r8}
   3a5b8:	mov	r0, r4
   3a5bc:	add	sp, sp, #8
   3a5c0:	pop	{r4, r5, r6, r7, r8, pc}

0003a5c4 <flatcc_builder_create_union_vector@@Base>:
   3a5c4:	push	{r4, r5, r6, r7, r8, lr}
   3a5c8:	mov	r6, r0
   3a5cc:	sub	sp, sp, #16
   3a5d0:	mov	r0, r1
   3a5d4:	mov	r5, r1
   3a5d8:	mov	r4, r2
   3a5dc:	mov	r7, r3
   3a5e0:	bl	392bc <flatcc_builder_start_offset_vector@@Base>
   3a5e4:	cmp	r0, #0
   3a5e8:	beq	3a604 <flatcc_builder_create_union_vector@@Base+0x40>
   3a5ec:	mov	r3, #0
   3a5f0:	mov	r0, r6
   3a5f4:	str	r3, [r6]
   3a5f8:	str	r3, [r6, #4]
   3a5fc:	add	sp, sp, #16
   3a600:	pop	{r4, r5, r6, r7, r8, pc}
   3a604:	mov	r1, r7
   3a608:	mov	r0, r5
   3a60c:	bl	38c54 <flatcc_builder_extend_offset_vector@@Base>
   3a610:	cmp	r0, #0
   3a614:	beq	3a5ec <flatcc_builder_create_union_vector@@Base+0x28>
   3a618:	ldr	r8, [r5, #20]
   3a61c:	ldr	r3, [r5, #24]
   3a620:	add	r1, r7, r8
   3a624:	cmp	r1, r3
   3a628:	str	r1, [r5, #20]
   3a62c:	bcs	3a724 <flatcc_builder_create_union_vector@@Base+0x160>
   3a630:	ldr	r2, [r5, #16]
   3a634:	adds	r8, r2, r8
   3a638:	beq	3a5ec <flatcc_builder_create_union_vector@@Base+0x28>
   3a63c:	mov	r0, r5
   3a640:	bl	3a530 <flatcc_builder_offset_vector_edit@@Base>
   3a644:	cmp	r7, #0
   3a648:	movne	r1, r4
   3a64c:	subne	lr, r8, #1
   3a650:	mov	r3, r0
   3a654:	addne	r2, r1, r7, lsl #3
   3a658:	subne	ip, r0, #4
   3a65c:	beq	3a67c <flatcc_builder_create_union_vector@@Base+0xb8>
   3a660:	ldrb	r4, [r1]
   3a664:	add	r1, r1, #8
   3a668:	strb	r4, [lr, #1]!
   3a66c:	ldr	r4, [r1, #-4]
   3a670:	cmp	r2, r1
   3a674:	str	r4, [ip, #4]!
   3a678:	bne	3a660 <flatcc_builder_create_union_vector@@Base+0x9c>
   3a67c:	str	r7, [sp]
   3a680:	mov	r2, r8
   3a684:	mov	r1, r5
   3a688:	add	r0, sp, #8
   3a68c:	bl	3a544 <flatcc_builder_create_union_vector_direct@@Base>
   3a690:	ldr	r2, [r5, #20]
   3a694:	mov	r1, #0
   3a698:	ldr	r0, [r5, #16]
   3a69c:	ldr	r7, [sp, #8]
   3a6a0:	ldr	r4, [sp, #12]
   3a6a4:	bl	13f94 <memset@plt>
   3a6a8:	ldr	r3, [r5, #32]
   3a6ac:	ldr	r2, [r5, #64]	; 0x40
   3a6b0:	ldrh	lr, [r5, #130]	; 0x82
   3a6b4:	ldr	ip, [r3]
   3a6b8:	ldr	r1, [r3, #4]
   3a6bc:	ldrh	r0, [r5, #128]	; 0x80
   3a6c0:	sub	r2, r2, ip
   3a6c4:	cmp	r2, r1
   3a6c8:	movcs	r2, r1
   3a6cc:	cmp	r0, lr
   3a6d0:	ldr	r0, [r5, #60]	; 0x3c
   3a6d4:	ldr	r8, [r3, #8]
   3a6d8:	str	r2, [r5, #24]
   3a6dc:	add	r2, r0, ip
   3a6e0:	str	r2, [r5, #16]
   3a6e4:	str	r8, [r5, #20]
   3a6e8:	ldr	r2, [r5, #156]	; 0x9c
   3a6ec:	str	ip, [r5, #28]
   3a6f0:	str	r1, [r3, #4]
   3a6f4:	strhcc	lr, [r5, #128]	; 0x80
   3a6f8:	ldrh	r1, [r3, #12]
   3a6fc:	sub	r2, r2, #1
   3a700:	sub	r3, r3, #36	; 0x24
   3a704:	mov	r0, r6
   3a708:	str	r7, [r6]
   3a70c:	str	r4, [r6, #4]
   3a710:	str	r2, [r5, #156]	; 0x9c
   3a714:	strh	r1, [r5, #130]	; 0x82
   3a718:	str	r3, [r5, #32]
   3a71c:	add	sp, sp, #16
   3a720:	pop	{r4, r5, r6, r7, r8, pc}
   3a724:	add	r1, r1, #1
   3a728:	mvn	r2, #3
   3a72c:	mov	r0, r5
   3a730:	bl	3767c <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   3a734:	cmp	r0, #0
   3a738:	beq	3a630 <flatcc_builder_create_union_vector@@Base+0x6c>
   3a73c:	b	3a5ec <flatcc_builder_create_union_vector@@Base+0x28>

0003a740 <flatcc_builder_start_union_vector@@Base>:
   3a740:	push	{r4, lr}
   3a744:	mov	r1, #4
   3a748:	mov	r4, r0
   3a74c:	bl	3792c <flatcc_builder_default_alloc@@Base+0x23c>
   3a750:	cmp	r0, #0
   3a754:	bne	3a7a0 <flatcc_builder_start_union_vector@@Base+0x60>
   3a758:	ldr	r3, [r4, #32]
   3a75c:	mov	r2, #8
   3a760:	mov	lr, #7
   3a764:	str	r0, [r3, #20]
   3a768:	str	r2, [r3, #16]
   3a76c:	ldr	ip, [r4, #28]
   3a770:	ldr	r2, [r4, #64]	; 0x40
   3a774:	ldr	r1, [r4, #60]	; 0x3c
   3a778:	sub	r2, r2, ip
   3a77c:	cmn	r2, #4
   3a780:	mvnhi	r2, #3
   3a784:	strh	lr, [r3, #14]
   3a788:	add	r1, r1, ip
   3a78c:	str	r2, [r4, #24]
   3a790:	mvn	r2, #3
   3a794:	str	r1, [r4, #16]
   3a798:	str	r2, [r3, #4]
   3a79c:	pop	{r4, pc}
   3a7a0:	mvn	r0, #0
   3a7a4:	pop	{r4, pc}

0003a7a8 <flatcc_builder_union_vector_edit@@Base>:
   3a7a8:	ldr	r0, [r0, #16]
   3a7ac:	bx	lr

0003a7b0 <flatcc_builder_union_vector_count@@Base>:
   3a7b0:	ldr	r3, [r0, #32]
   3a7b4:	ldr	r0, [r3, #20]
   3a7b8:	bx	lr

0003a7bc <flatcc_builder_end_union_vector@@Base>:
   3a7bc:	ldr	r3, [r1, #32]
   3a7c0:	push	{r4, r5, r6, r7, r8, lr}
   3a7c4:	sub	sp, sp, #16
   3a7c8:	ldrh	r3, [r3, #14]
   3a7cc:	cmp	r3, #7
   3a7d0:	bne	3a928 <flatcc_builder_end_union_vector@@Base+0x16c>
   3a7d4:	mov	r5, r0
   3a7d8:	mov	r0, r1
   3a7dc:	mov	r4, r1
   3a7e0:	bl	3a7b0 <flatcc_builder_union_vector_count@@Base>
   3a7e4:	ldr	r8, [r4, #20]
   3a7e8:	ldr	r3, [r4, #24]
   3a7ec:	lsl	r7, r0, #2
   3a7f0:	add	r1, r7, r0
   3a7f4:	add	r1, r1, r8
   3a7f8:	cmp	r1, r3
   3a7fc:	mov	r6, r0
   3a800:	str	r1, [r4, #20]
   3a804:	bcs	3a8f8 <flatcc_builder_end_union_vector@@Base+0x13c>
   3a808:	ldr	r3, [r4, #16]
   3a80c:	adds	r8, r3, r8
   3a810:	beq	3a910 <flatcc_builder_end_union_vector@@Base+0x154>
   3a814:	mov	r0, r4
   3a818:	bl	3a7a8 <flatcc_builder_union_vector_edit@@Base>
   3a81c:	cmp	r6, #0
   3a820:	add	r2, r8, r7
   3a824:	subne	ip, r2, #1
   3a828:	subne	r1, r8, #4
   3a82c:	addne	r7, r0, r6, lsl #3
   3a830:	beq	3a850 <flatcc_builder_end_union_vector@@Base+0x94>
   3a834:	ldrb	lr, [r0]
   3a838:	add	r0, r0, #8
   3a83c:	strb	lr, [ip, #1]!
   3a840:	ldr	lr, [r0, #-4]
   3a844:	cmp	r0, r7
   3a848:	str	lr, [r1, #4]!
   3a84c:	bne	3a834 <flatcc_builder_end_union_vector@@Base+0x78>
   3a850:	mov	r3, r8
   3a854:	str	r6, [sp]
   3a858:	mov	r1, r4
   3a85c:	add	r0, sp, #8
   3a860:	bl	3a544 <flatcc_builder_create_union_vector_direct@@Base>
   3a864:	ldr	r2, [r4, #20]
   3a868:	mov	r1, #0
   3a86c:	ldr	r0, [r4, #16]
   3a870:	ldr	r7, [sp, #8]
   3a874:	ldr	r6, [sp, #12]
   3a878:	bl	13f94 <memset@plt>
   3a87c:	ldr	r3, [r4, #32]
   3a880:	ldr	r2, [r4, #64]	; 0x40
   3a884:	ldrh	lr, [r4, #130]	; 0x82
   3a888:	ldr	ip, [r3]
   3a88c:	ldr	r1, [r3, #4]
   3a890:	ldrh	r0, [r4, #128]	; 0x80
   3a894:	sub	r2, r2, ip
   3a898:	cmp	r2, r1
   3a89c:	movcs	r2, r1
   3a8a0:	cmp	r0, lr
   3a8a4:	ldr	r0, [r4, #60]	; 0x3c
   3a8a8:	ldr	r8, [r3, #8]
   3a8ac:	str	r2, [r4, #24]
   3a8b0:	add	r2, r0, ip
   3a8b4:	str	r2, [r4, #16]
   3a8b8:	str	r8, [r4, #20]
   3a8bc:	ldr	r2, [r4, #156]	; 0x9c
   3a8c0:	str	ip, [r4, #28]
   3a8c4:	str	r1, [r3, #4]
   3a8c8:	strhcc	lr, [r4, #128]	; 0x80
   3a8cc:	ldrh	r1, [r3, #12]
   3a8d0:	sub	r2, r2, #1
   3a8d4:	sub	r3, r3, #36	; 0x24
   3a8d8:	mov	r0, r5
   3a8dc:	str	r7, [r5]
   3a8e0:	str	r6, [r5, #4]
   3a8e4:	str	r2, [r4, #156]	; 0x9c
   3a8e8:	strh	r1, [r4, #130]	; 0x82
   3a8ec:	str	r3, [r4, #32]
   3a8f0:	add	sp, sp, #16
   3a8f4:	pop	{r4, r5, r6, r7, r8, pc}
   3a8f8:	add	r1, r1, #1
   3a8fc:	mvn	r2, #3
   3a900:	mov	r0, r4
   3a904:	bl	3767c <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   3a908:	cmp	r0, #0
   3a90c:	beq	3a808 <flatcc_builder_end_union_vector@@Base+0x4c>
   3a910:	mov	r3, #0
   3a914:	mov	r0, r5
   3a918:	str	r3, [r5]
   3a91c:	str	r3, [r5, #4]
   3a920:	add	sp, sp, #16
   3a924:	pop	{r4, r5, r6, r7, r8, pc}
   3a928:	ldr	r3, [pc, #28]	; 3a94c <flatcc_builder_end_union_vector@@Base+0x190>
   3a92c:	ldr	r1, [pc, #28]	; 3a950 <flatcc_builder_end_union_vector@@Base+0x194>
   3a930:	ldr	r0, [pc, #28]	; 3a954 <flatcc_builder_end_union_vector@@Base+0x198>
   3a934:	add	r3, pc, r3
   3a938:	ldr	r2, [pc, #24]	; 3a958 <flatcc_builder_end_union_vector@@Base+0x19c>
   3a93c:	add	r3, r3, #968	; 0x3c8
   3a940:	add	r1, pc, r1
   3a944:	add	r0, pc, r0
   3a948:	bl	14030 <__assert_fail@plt>
   3a94c:	andeq	lr, r1, ip, asr r5
   3a950:	andeq	lr, r1, r0, lsr #25
   3a954:			; <UNDEFINED> instruction: 0x0001efb8
   3a958:	andeq	r0, r0, r1, asr r6

0003a95c <flatcc_builder_extend_union_vector@@Base>:
   3a95c:	ldr	ip, [r0, #32]
   3a960:	push	{r4, r5, r6, lr}
   3a964:	ldr	r3, [ip, #20]
   3a968:	adds	r2, r1, r3
   3a96c:	movcs	r3, #1
   3a970:	movcc	r3, #0
   3a974:	cmn	r2, #-536870911	; 0xe0000001
   3a978:	movls	r4, #0
   3a97c:	movhi	r4, #1
   3a980:	orrs	r4, r3, r4
   3a984:	bne	3a9d0 <flatcc_builder_extend_union_vector@@Base+0x74>
   3a988:	str	r2, [ip, #20]
   3a98c:	ldr	r6, [r0, #20]
   3a990:	ldr	r3, [r0, #24]
   3a994:	add	r1, r6, r1, lsl #3
   3a998:	cmp	r1, r3
   3a99c:	mov	r5, r0
   3a9a0:	str	r1, [r0, #20]
   3a9a4:	bcs	3a9b4 <flatcc_builder_extend_union_vector@@Base+0x58>
   3a9a8:	ldr	r0, [r5, #16]
   3a9ac:	add	r0, r0, r6
   3a9b0:	pop	{r4, r5, r6, pc}
   3a9b4:	add	r1, r1, #1
   3a9b8:	mvn	r2, #3
   3a9bc:	bl	3767c <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   3a9c0:	cmp	r0, #0
   3a9c4:	beq	3a9a8 <flatcc_builder_extend_union_vector@@Base+0x4c>
   3a9c8:	mov	r0, r4
   3a9cc:	pop	{r4, r5, r6, pc}
   3a9d0:	bl	141c0 <__assert_fail@plt+0x190>

0003a9d4 <flatcc_builder_truncate_union_vector@@Base>:
   3a9d4:	ldr	r3, [r0, #32]
   3a9d8:	push	{r4, lr}
   3a9dc:	ldrh	r2, [r3, #14]
   3a9e0:	cmp	r2, #7
   3a9e4:	bne	3aa28 <flatcc_builder_truncate_union_vector@@Base+0x54>
   3a9e8:	ldr	ip, [r3, #20]
   3a9ec:	cmp	ip, r1
   3a9f0:	bcc	3aa4c <flatcc_builder_truncate_union_vector@@Base+0x78>
   3a9f4:	ldr	r2, [r3, #16]
   3a9f8:	sub	ip, ip, r1
   3a9fc:	str	ip, [r3, #20]
   3aa00:	mul	r2, r2, r1
   3aa04:	ldr	r3, [r0, #20]
   3aa08:	ldr	r1, [r0, #16]
   3aa0c:	sub	r3, r3, r2
   3aa10:	str	r3, [r0, #20]
   3aa14:	add	r0, r1, r3
   3aa18:	mov	r1, #0
   3aa1c:	bl	13f94 <memset@plt>
   3aa20:	mov	r0, #0
   3aa24:	pop	{r4, pc}
   3aa28:	ldr	r3, [pc, #64]	; 3aa70 <flatcc_builder_truncate_union_vector@@Base+0x9c>
   3aa2c:	ldr	r1, [pc, #64]	; 3aa74 <flatcc_builder_truncate_union_vector@@Base+0xa0>
   3aa30:	ldr	r0, [pc, #64]	; 3aa78 <flatcc_builder_truncate_union_vector@@Base+0xa4>
   3aa34:	add	r3, pc, r3
   3aa38:	ldr	r2, [pc, #60]	; 3aa7c <flatcc_builder_truncate_union_vector@@Base+0xa8>
   3aa3c:	add	r3, r3, #1000	; 0x3e8
   3aa40:	add	r1, pc, r1
   3aa44:	add	r0, pc, r0
   3aa48:	bl	14030 <__assert_fail@plt>
   3aa4c:	ldr	r3, [pc, #44]	; 3aa80 <flatcc_builder_truncate_union_vector@@Base+0xac>
   3aa50:	ldr	r1, [pc, #44]	; 3aa84 <flatcc_builder_truncate_union_vector@@Base+0xb0>
   3aa54:	ldr	r0, [pc, #44]	; 3aa88 <flatcc_builder_truncate_union_vector@@Base+0xb4>
   3aa58:	add	r3, pc, r3
   3aa5c:	ldr	r2, [pc, #40]	; 3aa8c <flatcc_builder_truncate_union_vector@@Base+0xb8>
   3aa60:	add	r3, r3, #1000	; 0x3e8
   3aa64:	add	r1, pc, r1
   3aa68:	add	r0, pc, r0
   3aa6c:	bl	14030 <__assert_fail@plt>
   3aa70:	andeq	lr, r1, ip, asr r4
   3aa74:	andeq	lr, r1, r0, lsr #23
   3aa78:			; <UNDEFINED> instruction: 0x0001eeb8
   3aa7c:	andeq	r0, r0, r1, lsl #13
   3aa80:	andeq	lr, r1, r8, lsr r4
   3aa84:	andeq	lr, r1, ip, ror fp
   3aa88:			; <UNDEFINED> instruction: 0x0001edb8
   3aa8c:	andeq	r0, r0, r2, lsl #13

0003aa90 <flatcc_builder_union_vector_push@@Base>:
   3aa90:	ldr	ip, [r0, #32]
   3aa94:	push	{r4, r5, r6, lr}
   3aa98:	sub	sp, sp, #8
   3aa9c:	ldrh	r3, [ip, #14]
   3aaa0:	stm	sp, {r1, r2}
   3aaa4:	cmp	r3, #7
   3aaa8:	bne	3ab28 <flatcc_builder_union_vector_push@@Base+0x98>
   3aaac:	ldr	r3, [ip, #20]
   3aab0:	cmn	r3, #-536870911	; 0xe0000001
   3aab4:	beq	3ab18 <flatcc_builder_union_vector_push@@Base+0x88>
   3aab8:	add	r3, r3, #1
   3aabc:	str	r3, [ip, #20]
   3aac0:	ldr	r6, [r0, #20]
   3aac4:	ldr	r2, [r0, #24]
   3aac8:	add	r3, r6, #8
   3aacc:	cmp	r3, r2
   3aad0:	mov	r4, r0
   3aad4:	mov	r5, sp
   3aad8:	str	r3, [r0, #20]
   3aadc:	bcs	3ab04 <flatcc_builder_union_vector_push@@Base+0x74>
   3aae0:	ldr	r3, [r4, #16]
   3aae4:	adds	r3, r3, r6
   3aae8:	beq	3ab4c <flatcc_builder_union_vector_push@@Base+0xbc>
   3aaec:	ldm	r5, {r0, r1}
   3aaf0:	mov	r2, r3
   3aaf4:	stm	r3, {r0, r1}
   3aaf8:	mov	r0, r2
   3aafc:	add	sp, sp, #8
   3ab00:	pop	{r4, r5, r6, pc}
   3ab04:	mvn	r2, #3
   3ab08:	add	r1, r6, #9
   3ab0c:	bl	3767c <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   3ab10:	cmp	r0, #0
   3ab14:	beq	3aae0 <flatcc_builder_union_vector_push@@Base+0x50>
   3ab18:	mov	r2, #0
   3ab1c:	mov	r0, r2
   3ab20:	add	sp, sp, #8
   3ab24:	pop	{r4, r5, r6, pc}
   3ab28:	ldr	r3, [pc, #36]	; 3ab54 <flatcc_builder_union_vector_push@@Base+0xc4>
   3ab2c:	ldr	r1, [pc, #36]	; 3ab58 <flatcc_builder_union_vector_push@@Base+0xc8>
   3ab30:	ldr	r0, [pc, #36]	; 3ab5c <flatcc_builder_union_vector_push@@Base+0xcc>
   3ab34:	add	r3, pc, r3
   3ab38:	ldr	r2, [pc, #32]	; 3ab60 <flatcc_builder_union_vector_push@@Base+0xd0>
   3ab3c:	add	r3, r3, #1040	; 0x410
   3ab40:	add	r1, pc, r1
   3ab44:	add	r0, pc, r0
   3ab48:	bl	14030 <__assert_fail@plt>
   3ab4c:	mov	r2, r3
   3ab50:	b	3aaf8 <flatcc_builder_union_vector_push@@Base+0x68>
   3ab54:	andeq	lr, r1, ip, asr r3
   3ab58:	andeq	lr, r1, r0, lsr #21
   3ab5c:			; <UNDEFINED> instruction: 0x0001edb8
   3ab60:	andeq	r0, r0, sp, lsl #13

0003ab64 <flatcc_builder_append_union_vector@@Base>:
   3ab64:	ldr	ip, [r0, #32]
   3ab68:	push	{r4, r5, r6, r7, r8, lr}
   3ab6c:	ldrh	r3, [ip, #14]
   3ab70:	cmp	r3, #7
   3ab74:	bne	3ac0c <flatcc_builder_append_union_vector@@Base+0xa8>
   3ab78:	mov	r6, r1
   3ab7c:	ldr	r1, [ip, #20]
   3ab80:	adds	r1, r2, r1
   3ab84:	movcs	lr, #1
   3ab88:	movcc	lr, #0
   3ab8c:	cmn	r1, #-536870911	; 0xe0000001
   3ab90:	movls	r3, #0
   3ab94:	movhi	r3, #1
   3ab98:	orrs	r8, lr, r3
   3ab9c:	bne	3ac08 <flatcc_builder_append_union_vector@@Base+0xa4>
   3aba0:	str	r1, [ip, #20]
   3aba4:	ldr	r7, [r0, #20]
   3aba8:	lsl	r4, r2, #3
   3abac:	ldr	r3, [r0, #24]
   3abb0:	add	r1, r4, r7
   3abb4:	cmp	r1, r3
   3abb8:	mov	r5, r0
   3abbc:	str	r1, [r0, #20]
   3abc0:	bcs	3abec <flatcc_builder_append_union_vector@@Base+0x88>
   3abc4:	ldr	r3, [r5, #16]
   3abc8:	adds	r3, r3, r7
   3abcc:	beq	3abe4 <flatcc_builder_append_union_vector@@Base+0x80>
   3abd0:	mov	r0, r3
   3abd4:	mov	r2, r4
   3abd8:	mov	r1, r6
   3abdc:	bl	13ed4 <memcpy@plt>
   3abe0:	mov	r3, r0
   3abe4:	mov	r0, r3
   3abe8:	pop	{r4, r5, r6, r7, r8, pc}
   3abec:	add	r1, r1, #1
   3abf0:	mvn	r2, #3
   3abf4:	bl	3767c <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   3abf8:	cmp	r0, #0
   3abfc:	beq	3abc4 <flatcc_builder_append_union_vector@@Base+0x60>
   3ac00:	mov	r3, r8
   3ac04:	b	3abe4 <flatcc_builder_append_union_vector@@Base+0x80>
   3ac08:	bl	141c0 <__assert_fail@plt+0x190>
   3ac0c:	ldr	r3, [pc, #32]	; 3ac34 <flatcc_builder_append_union_vector@@Base+0xd0>
   3ac10:	ldr	r1, [pc, #32]	; 3ac38 <flatcc_builder_append_union_vector@@Base+0xd4>
   3ac14:	add	r3, pc, r3
   3ac18:	ldr	r0, [pc, #28]	; 3ac3c <flatcc_builder_append_union_vector@@Base+0xd8>
   3ac1c:	add	r3, r3, #1072	; 0x430
   3ac20:	ldr	r2, [pc, #24]	; 3ac40 <flatcc_builder_append_union_vector@@Base+0xdc>
   3ac24:	add	r3, r3, #4
   3ac28:	add	r1, pc, r1
   3ac2c:	add	r0, pc, r0
   3ac30:	bl	14030 <__assert_fail@plt>
   3ac34:	andeq	lr, r1, ip, ror r2
   3ac38:			; <UNDEFINED> instruction: 0x0001e9b8
   3ac3c:	ldrdeq	lr, [r1], -r0
   3ac40:	muleq	r0, ip, r6

0003ac44 <flatcc_builder_create_string@@Base>:
   3ac44:	push	{r4, r5, r6, lr}
   3ac48:	sub	sp, sp, #88	; 0x58
   3ac4c:	ldr	lr, [r0, #136]	; 0x88
   3ac50:	mov	r4, r0
   3ac54:	add	r0, sp, #88	; 0x58
   3ac58:	cmp	r2, #0
   3ac5c:	sub	r3, lr, r2
   3ac60:	str	r2, [r0, #-76]!	; 0xffffffb4
   3ac64:	sub	r3, r3, #1
   3ac68:	str	r0, [sp, #24]
   3ac6c:	ldr	r5, [pc, #188]	; 3ad30 <flatcc_builder_create_string@@Base+0xec>
   3ac70:	moveq	r0, #1
   3ac74:	strne	r1, [sp, #32]
   3ac78:	mov	ip, #4
   3ac7c:	moveq	r1, r0
   3ac80:	movne	r1, #2
   3ac84:	and	r3, r3, #3
   3ac88:	ldr	r0, [pc, #164]	; 3ad34 <flatcc_builder_create_string@@Base+0xf0>
   3ac8c:	str	ip, [sp, #28]
   3ac90:	add	r5, pc, r5
   3ac94:	addne	ip, r2, ip
   3ac98:	add	r3, r3, #1
   3ac9c:	add	r1, r1, #1
   3aca0:	add	ip, ip, r3
   3aca4:	add	r6, sp, #88	; 0x58
   3aca8:	strne	r2, [sp, #36]	; 0x24
   3acac:	add	r1, r6, r1, lsl #3
   3acb0:	str	ip, [sp, #16]
   3acb4:	ldr	r0, [r5, r0]
   3acb8:	sub	r5, lr, ip
   3acbc:	movne	r2, #3
   3acc0:	moveq	r2, #2
   3acc4:	cmp	lr, r5
   3acc8:	str	r0, [r1, #-72]	; 0xffffffb8
   3accc:	str	r3, [r1, #-68]	; 0xffffffbc
   3acd0:	str	r2, [sp, #20]
   3acd4:	ble	3ad08 <flatcc_builder_create_string@@Base+0xc4>
   3acd8:	ldr	r0, [r4, #36]	; 0x24
   3acdc:	mov	r3, r5
   3ace0:	str	ip, [sp]
   3ace4:	add	r1, sp, #24
   3ace8:	ldr	r6, [r4, #44]	; 0x2c
   3acec:	blx	r6
   3acf0:	cmp	r0, #0
   3acf4:	bne	3ad0c <flatcc_builder_create_string@@Base+0xc8>
   3acf8:	mov	r0, r5
   3acfc:	str	r5, [r4, #136]	; 0x88
   3ad00:	add	sp, sp, #88	; 0x58
   3ad04:	pop	{r4, r5, r6, pc}
   3ad08:	bl	14188 <__assert_fail@plt+0x158>
   3ad0c:	ldr	r3, [pc, #36]	; 3ad38 <flatcc_builder_create_string@@Base+0xf4>
   3ad10:	ldr	r1, [pc, #36]	; 3ad3c <flatcc_builder_create_string@@Base+0xf8>
   3ad14:	ldr	r0, [pc, #36]	; 3ad40 <flatcc_builder_create_string@@Base+0xfc>
   3ad18:	add	r3, pc, r3
   3ad1c:	ldr	r2, [pc, #32]	; 3ad44 <flatcc_builder_create_string@@Base+0x100>
   3ad20:	add	r3, r3, #28
   3ad24:	add	r1, pc, r1
   3ad28:	add	r0, pc, r0
   3ad2c:	bl	14030 <__assert_fail@plt>
   3ad30:	andeq	pc, r2, r8, ror #6
   3ad34:	muleq	r0, r8, r0
   3ad38:	andeq	lr, r1, r8, ror r1
   3ad3c:			; <UNDEFINED> instruction: 0x0001e8bc
   3ad40:	andeq	sp, r0, ip, lsr r1
   3ad44:	andeq	r0, r0, fp, lsl #5

0003ad48 <flatcc_builder_create_string_str@@Base>:
   3ad48:	push	{r4, r5, r6, lr}
   3ad4c:	mov	r5, r0
   3ad50:	mov	r0, r1
   3ad54:	mov	r4, r1
   3ad58:	bl	13f70 <strlen@plt>
   3ad5c:	mov	r1, r4
   3ad60:	mov	r2, r0
   3ad64:	mov	r0, r5
   3ad68:	pop	{r4, r5, r6, lr}
   3ad6c:	b	3ac44 <flatcc_builder_create_string@@Base>

0003ad70 <flatcc_builder_create_string_strn@@Base>:
   3ad70:	push	{r4, r5, r6, lr}
   3ad74:	mov	r4, r1
   3ad78:	mov	r6, r0
   3ad7c:	mov	r1, #0
   3ad80:	mov	r0, r4
   3ad84:	mov	r5, r2
   3ad88:	bl	13fb8 <memchr@plt>
   3ad8c:	mov	r1, r4
   3ad90:	cmp	r0, #0
   3ad94:	subne	r5, r0, r4
   3ad98:	mov	r2, r5
   3ad9c:	mov	r0, r6
   3ada0:	pop	{r4, r5, r6, lr}
   3ada4:	b	3ac44 <flatcc_builder_create_string@@Base>

0003ada8 <flatcc_builder_end_string@@Base>:
   3ada8:	ldr	r3, [r0, #32]
   3adac:	push	{r4, r5, r6, lr}
   3adb0:	ldrh	r2, [r3, #14]
   3adb4:	cmp	r2, #6
   3adb8:	bne	3ae88 <flatcc_builder_end_string@@Base+0xe0>
   3adbc:	ldr	r2, [r3, #20]
   3adc0:	ldr	r3, [r0, #20]
   3adc4:	mov	r4, r0
   3adc8:	cmp	r2, r3
   3adcc:	bne	3ae60 <flatcc_builder_end_string@@Base+0xb8>
   3add0:	ldr	r1, [r0, #16]
   3add4:	bl	3ac44 <flatcc_builder_create_string@@Base>
   3add8:	subs	r5, r0, #0
   3addc:	beq	3ae58 <flatcc_builder_end_string@@Base+0xb0>
   3ade0:	ldr	r2, [r4, #20]
   3ade4:	mov	r1, #0
   3ade8:	ldr	r0, [r4, #16]
   3adec:	bl	13f94 <memset@plt>
   3adf0:	ldr	r3, [r4, #32]
   3adf4:	ldr	r2, [r4, #64]	; 0x40
   3adf8:	ldrh	lr, [r4, #130]	; 0x82
   3adfc:	ldr	ip, [r3]
   3ae00:	ldr	r1, [r3, #4]
   3ae04:	ldrh	r0, [r4, #128]	; 0x80
   3ae08:	sub	r2, r2, ip
   3ae0c:	cmp	r2, r1
   3ae10:	movcs	r2, r1
   3ae14:	cmp	r0, lr
   3ae18:	ldr	r0, [r4, #60]	; 0x3c
   3ae1c:	ldr	r6, [r3, #8]
   3ae20:	str	r2, [r4, #24]
   3ae24:	add	r2, r0, ip
   3ae28:	str	r2, [r4, #16]
   3ae2c:	str	r6, [r4, #20]
   3ae30:	ldr	r2, [r4, #156]	; 0x9c
   3ae34:	str	ip, [r4, #28]
   3ae38:	str	r1, [r3, #4]
   3ae3c:	strhcc	lr, [r4, #128]	; 0x80
   3ae40:	ldrh	r1, [r3, #12]
   3ae44:	sub	r2, r2, #1
   3ae48:	sub	r3, r3, #36	; 0x24
   3ae4c:	str	r2, [r4, #156]	; 0x9c
   3ae50:	strh	r1, [r4, #130]	; 0x82
   3ae54:	str	r3, [r4, #32]
   3ae58:	mov	r0, r5
   3ae5c:	pop	{r4, r5, r6, pc}
   3ae60:	ldr	r3, [pc, #72]	; 3aeb0 <flatcc_builder_end_string@@Base+0x108>
   3ae64:	ldr	r1, [pc, #72]	; 3aeb4 <flatcc_builder_end_string@@Base+0x10c>
   3ae68:	add	r3, pc, r3
   3ae6c:	ldr	r0, [pc, #68]	; 3aeb8 <flatcc_builder_end_string@@Base+0x110>
   3ae70:	add	r3, r3, #1104	; 0x450
   3ae74:	ldr	r2, [pc, #64]	; 3aebc <flatcc_builder_end_string@@Base+0x114>
   3ae78:	add	r3, r3, #8
   3ae7c:	add	r1, pc, r1
   3ae80:	add	r0, pc, r0
   3ae84:	bl	14030 <__assert_fail@plt>
   3ae88:	ldr	r3, [pc, #48]	; 3aec0 <flatcc_builder_end_string@@Base+0x118>
   3ae8c:	ldr	r1, [pc, #48]	; 3aec4 <flatcc_builder_end_string@@Base+0x11c>
   3ae90:	add	r3, pc, r3
   3ae94:	ldr	r0, [pc, #44]	; 3aec8 <flatcc_builder_end_string@@Base+0x120>
   3ae98:	add	r3, r3, #1104	; 0x450
   3ae9c:	ldr	r2, [pc, #40]	; 3aecc <flatcc_builder_end_string@@Base+0x124>
   3aea0:	add	r3, r3, #8
   3aea4:	add	r1, pc, r1
   3aea8:	add	r0, pc, r0
   3aeac:	bl	14030 <__assert_fail@plt>
   3aeb0:	andeq	lr, r1, r8, lsr #32
   3aeb4:	andeq	lr, r1, r4, ror #14
   3aeb8:			; <UNDEFINED> instruction: 0x0001eab0
   3aebc:	andeq	r0, r0, r5, asr #13
   3aec0:	andeq	lr, r1, r0
   3aec4:	andeq	lr, r1, ip, lsr r7
   3aec8:	andeq	lr, r1, r8, lsr #18
   3aecc:	andeq	r0, r0, r4, asr #13

0003aed0 <flatcc_builder_string_edit@@Base>:
   3aed0:	ldr	r0, [r0, #16]
   3aed4:	bx	lr

0003aed8 <flatcc_builder_string_len@@Base>:
   3aed8:	ldr	r3, [r0, #32]
   3aedc:	ldr	r0, [r3, #20]
   3aee0:	bx	lr

0003aee4 <flatcc_builder_table_add@@Base>:
   3aee4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3aee8:	mov	r4, r0
   3aeec:	ldr	r0, [r0, #32]
   3aef0:	ldrh	r0, [r0, #14]
   3aef4:	cmp	r0, #3
   3aef8:	bne	3b010 <flatcc_builder_table_add@@Base+0x12c>
   3aefc:	ldr	r0, [pc, #308]	; 3b038 <flatcc_builder_table_add@@Base+0x154>
   3af00:	cmp	r1, r0
   3af04:	bhi	3afe8 <flatcc_builder_table_add@@Base+0x104>
   3af08:	ldrh	r0, [r4, #130]	; 0x82
   3af0c:	lsl	r8, r1, #1
   3af10:	cmp	r0, r3
   3af14:	ldr	r0, [r4, #4]
   3af18:	strhcc	r3, [r4, #130]	; 0x82
   3af1c:	add	lr, r0, r8
   3af20:	ldrh	r7, [r0, r8]
   3af24:	cmp	r7, #0
   3af28:	bne	3afc0 <flatcc_builder_table_add@@Base+0xdc>
   3af2c:	ldr	ip, [r4, #12]
   3af30:	ldr	r9, [pc, #260]	; 3b03c <flatcc_builder_table_add@@Base+0x158>
   3af34:	eor	ip, ip, r1
   3af38:	ldr	r0, [r4, #20]
   3af3c:	mul	ip, r9, ip
   3af40:	sub	r6, r3, #1
   3af44:	eor	ip, ip, r2
   3af48:	rsb	r3, r3, #0
   3af4c:	add	r6, r6, r0
   3af50:	and	r6, r6, r3
   3af54:	mul	ip, r9, ip
   3af58:	ldr	r3, [r4, #24]
   3af5c:	add	r2, r2, r6
   3af60:	cmp	r2, r3
   3af64:	uxth	r5, r1
   3af68:	str	ip, [r4, #12]
   3af6c:	str	r2, [r4, #20]
   3af70:	bcs	3af98 <flatcc_builder_table_add@@Base+0xb4>
   3af74:	add	r3, r6, #4
   3af78:	strh	r3, [lr]
   3af7c:	ldrh	r3, [r4, #8]
   3af80:	ldr	r0, [r4, #16]
   3af84:	cmp	r3, r5
   3af88:	addls	r5, r5, #1
   3af8c:	strhls	r5, [r4, #8]
   3af90:	add	r0, r0, r6
   3af94:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3af98:	add	r1, r2, #1
   3af9c:	mov	r0, r4
   3afa0:	ldr	r2, [pc, #152]	; 3b040 <flatcc_builder_table_add@@Base+0x15c>
   3afa4:	bl	3767c <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   3afa8:	cmp	r0, #0
   3afac:	ldreq	lr, [r4, #4]
   3afb0:	addeq	lr, lr, r8
   3afb4:	beq	3af74 <flatcc_builder_table_add@@Base+0x90>
   3afb8:	mov	r0, r7
   3afbc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3afc0:	ldr	r3, [pc, #124]	; 3b044 <flatcc_builder_table_add@@Base+0x160>
   3afc4:	ldr	r1, [pc, #124]	; 3b048 <flatcc_builder_table_add@@Base+0x164>
   3afc8:	add	r3, pc, r3
   3afcc:	ldr	r0, [pc, #120]	; 3b04c <flatcc_builder_table_add@@Base+0x168>
   3afd0:	add	r3, r3, #1136	; 0x470
   3afd4:	ldr	r2, [pc, #116]	; 3b050 <flatcc_builder_table_add@@Base+0x16c>
   3afd8:	add	r3, r3, #4
   3afdc:	add	r1, pc, r1
   3afe0:	add	r0, pc, r0
   3afe4:	bl	14030 <__assert_fail@plt>
   3afe8:	ldr	r3, [pc, #100]	; 3b054 <flatcc_builder_table_add@@Base+0x170>
   3afec:	ldr	r1, [pc, #100]	; 3b058 <flatcc_builder_table_add@@Base+0x174>
   3aff0:	add	r3, pc, r3
   3aff4:	ldr	r0, [pc, #96]	; 3b05c <flatcc_builder_table_add@@Base+0x178>
   3aff8:	add	r3, r3, #1136	; 0x470
   3affc:	ldr	r2, [pc, #92]	; 3b060 <flatcc_builder_table_add@@Base+0x17c>
   3b000:	add	r3, r3, #4
   3b004:	add	r1, pc, r1
   3b008:	add	r0, pc, r0
   3b00c:	bl	14030 <__assert_fail@plt>
   3b010:	ldr	r3, [pc, #76]	; 3b064 <flatcc_builder_table_add@@Base+0x180>
   3b014:	ldr	r1, [pc, #76]	; 3b068 <flatcc_builder_table_add@@Base+0x184>
   3b018:	add	r3, pc, r3
   3b01c:	ldr	r0, [pc, #72]	; 3b06c <flatcc_builder_table_add@@Base+0x188>
   3b020:	add	r3, r3, #1136	; 0x470
   3b024:	ldr	r2, [pc, #68]	; 3b070 <flatcc_builder_table_add@@Base+0x18c>
   3b028:	add	r3, r3, #4
   3b02c:	add	r1, pc, r1
   3b030:	add	r0, pc, r0
   3b034:	bl	14030 <__assert_fail@plt>
   3b038:	strdeq	r7, [r0], -ip
   3b03c:			; <UNDEFINED> instruction: 0x9e3779b1
   3b040:	strdeq	pc, [r0], -ip
   3b044:	andeq	sp, r1, r8, asr #29
   3b048:	andeq	lr, r1, r4, lsl #12
   3b04c:	andeq	ip, r0, r4, lsl #29
   3b050:	strdeq	r0, [r0], -r8
   3b054:	andeq	sp, r1, r0, lsr #29
   3b058:	ldrdeq	lr, [r1], -ip
   3b05c:	andeq	lr, r1, ip, asr #18
   3b060:	andeq	r0, r0, lr, ror #13
   3b064:	andeq	sp, r1, r8, ror lr
   3b068:			; <UNDEFINED> instruction: 0x0001e5b4
   3b06c:	andeq	lr, r1, ip, lsl #17
   3b070:	andeq	r0, r0, sp, ror #13

0003b074 <flatcc_builder_table_edit@@Base>:
   3b074:	ldr	r3, [r0, #32]
   3b078:	ldrh	r3, [r3, #14]
   3b07c:	cmp	r3, #3
   3b080:	bne	3b098 <flatcc_builder_table_edit@@Base+0x24>
   3b084:	ldr	r3, [r0, #20]
   3b088:	ldr	r0, [r0, #16]
   3b08c:	sub	r1, r3, r1
   3b090:	add	r0, r0, r1
   3b094:	bx	lr
   3b098:	ldr	r3, [pc, #32]	; 3b0c0 <flatcc_builder_table_edit@@Base+0x4c>
   3b09c:	ldr	r1, [pc, #32]	; 3b0c4 <flatcc_builder_table_edit@@Base+0x50>
   3b0a0:	ldr	r0, [pc, #32]	; 3b0c8 <flatcc_builder_table_edit@@Base+0x54>
   3b0a4:	add	r3, pc, r3
   3b0a8:	push	{r4, lr}
   3b0ac:	add	r3, r3, #1168	; 0x490
   3b0b0:	ldr	r2, [pc, #20]	; 3b0cc <flatcc_builder_table_edit@@Base+0x58>
   3b0b4:	add	r1, pc, r1
   3b0b8:	add	r0, pc, r0
   3b0bc:	bl	14030 <__assert_fail@plt>
   3b0c0:	andeq	sp, r1, ip, ror #27
   3b0c4:	andeq	lr, r1, ip, lsr #10
   3b0c8:	andeq	lr, r1, r4, lsl #16
   3b0cc:	andeq	r0, r0, r2, lsl #14

0003b0d0 <flatcc_builder_table_add_copy@@Base>:
   3b0d0:	push	{r4, r5, r6, lr}
   3b0d4:	mov	r4, r3
   3b0d8:	mov	r6, r2
   3b0dc:	ldrh	r3, [sp, #16]
   3b0e0:	mov	r2, r4
   3b0e4:	bl	3aee4 <flatcc_builder_table_add@@Base>
   3b0e8:	subs	r5, r0, #0
   3b0ec:	beq	3b0fc <flatcc_builder_table_add_copy@@Base+0x2c>
   3b0f0:	mov	r2, r4
   3b0f4:	mov	r1, r6
   3b0f8:	bl	13ed4 <memcpy@plt>
   3b0fc:	mov	r0, r5
   3b100:	pop	{r4, r5, r6, pc}

0003b104 <flatcc_builder_table_add_offset@@Base>:
   3b104:	ldr	r3, [r0, #32]
   3b108:	push	{r4, r5, r6, r7, r8, lr}
   3b10c:	ldrh	r3, [r3, #14]
   3b110:	cmp	r3, #3
   3b114:	bne	3b22c <flatcc_builder_table_add_offset@@Base+0x128>
   3b118:	ldr	r3, [pc, #308]	; 3b254 <flatcc_builder_table_add_offset@@Base+0x150>
   3b11c:	cmp	r1, r3
   3b120:	bhi	3b204 <flatcc_builder_table_add_offset@@Base+0x100>
   3b124:	ldr	r3, [r0, #4]
   3b128:	lsl	r7, r1, #1
   3b12c:	mov	r4, r0
   3b130:	ldrh	r6, [r3, r7]
   3b134:	add	ip, r3, r7
   3b138:	cmp	r6, #0
   3b13c:	bne	3b1dc <flatcc_builder_table_add_offset@@Base+0xd8>
   3b140:	ldr	r3, [r0, #12]
   3b144:	ldr	r2, [pc, #268]	; 3b258 <flatcc_builder_table_add_offset@@Base+0x154>
   3b148:	eor	r3, r3, r1
   3b14c:	ldr	r5, [r0, #20]
   3b150:	mul	r3, r2, r3
   3b154:	add	r5, r5, #3
   3b158:	eor	r3, r3, #4
   3b15c:	bic	r5, r5, #3
   3b160:	mul	r3, r2, r3
   3b164:	ldr	lr, [r0, #24]
   3b168:	add	r2, r5, #4
   3b16c:	cmp	r2, lr
   3b170:	uxth	r8, r1
   3b174:	str	r3, [r0, #12]
   3b178:	str	r2, [r0, #20]
   3b17c:	bhi	3b1b8 <flatcc_builder_table_add_offset@@Base+0xb4>
   3b180:	uxth	r2, r5
   3b184:	add	r3, r2, #4
   3b188:	strh	r3, [ip]
   3b18c:	ldrh	r3, [r4, #8]
   3b190:	ldr	r0, [r4, #16]
   3b194:	cmp	r3, r8
   3b198:	ldr	r3, [r4]
   3b19c:	addls	r1, r8, #1
   3b1a0:	strhls	r1, [r4, #8]
   3b1a4:	add	r1, r3, #2
   3b1a8:	str	r1, [r4]
   3b1ac:	add	r0, r0, r5
   3b1b0:	strh	r2, [r3]
   3b1b4:	pop	{r4, r5, r6, r7, r8, pc}
   3b1b8:	mov	r1, r2
   3b1bc:	ldr	r2, [pc, #152]	; 3b25c <flatcc_builder_table_add_offset@@Base+0x158>
   3b1c0:	bl	3767c <__flatcc_fb_coerce_scalar_type@@Base+0x900>
   3b1c4:	cmp	r0, #0
   3b1c8:	ldreq	ip, [r4, #4]
   3b1cc:	addeq	ip, ip, r7
   3b1d0:	beq	3b180 <flatcc_builder_table_add_offset@@Base+0x7c>
   3b1d4:	mov	r0, r6
   3b1d8:	pop	{r4, r5, r6, r7, r8, pc}
   3b1dc:	ldr	r3, [pc, #124]	; 3b260 <flatcc_builder_table_add_offset@@Base+0x15c>
   3b1e0:	ldr	r1, [pc, #124]	; 3b264 <flatcc_builder_table_add_offset@@Base+0x160>
   3b1e4:	add	r3, pc, r3
   3b1e8:	ldr	r0, [pc, #120]	; 3b268 <flatcc_builder_table_add_offset@@Base+0x164>
   3b1ec:	add	r3, r3, #1184	; 0x4a0
   3b1f0:	ldr	r2, [pc, #116]	; 3b26c <flatcc_builder_table_add_offset@@Base+0x168>
   3b1f4:	add	r3, r3, #12
   3b1f8:	add	r1, pc, r1
   3b1fc:	add	r0, pc, r0
   3b200:	bl	14030 <__assert_fail@plt>
   3b204:	ldr	r3, [pc, #100]	; 3b270 <flatcc_builder_table_add_offset@@Base+0x16c>
   3b208:	ldr	r1, [pc, #100]	; 3b274 <flatcc_builder_table_add_offset@@Base+0x170>
   3b20c:	add	r3, pc, r3
   3b210:	ldr	r0, [pc, #96]	; 3b278 <flatcc_builder_table_add_offset@@Base+0x174>
   3b214:	add	r3, r3, #1184	; 0x4a0
   3b218:	ldr	r2, [pc, #92]	; 3b27c <flatcc_builder_table_add_offset@@Base+0x178>
   3b21c:	add	r3, r3, #12
   3b220:	add	r1, pc, r1
   3b224:	add	r0, pc, r0
   3b228:	bl	14030 <__assert_fail@plt>
   3b22c:	ldr	r3, [pc, #76]	; 3b280 <flatcc_builder_table_add_offset@@Base+0x17c>
   3b230:	ldr	r1, [pc, #76]	; 3b284 <flatcc_builder_table_add_offset@@Base+0x180>
   3b234:	add	r3, pc, r3
   3b238:	ldr	r0, [pc, #72]	; 3b288 <flatcc_builder_table_add_offset@@Base+0x184>
   3b23c:	add	r3, r3, #1184	; 0x4a0
   3b240:	ldr	r2, [pc, #68]	; 3b28c <flatcc_builder_table_add_offset@@Base+0x188>
   3b244:	add	r3, r3, #12
   3b248:	add	r1, pc, r1
   3b24c:	add	r0, pc, r0
   3b250:	bl	14030 <__assert_fail@plt>
   3b254:	strdeq	r7, [r0], -ip
   3b258:			; <UNDEFINED> instruction: 0x9e3779b1
   3b25c:	strdeq	pc, [r0], -ip
   3b260:	andeq	sp, r1, ip, lsr #25
   3b264:	andeq	lr, r1, r8, ror #7
   3b268:	andeq	ip, r0, r8, ror #24
   3b26c:	andeq	r0, r0, fp, lsl r7
   3b270:	andeq	sp, r1, r4, lsl #25
   3b274:	andeq	lr, r1, r0, asr #7
   3b278:	andeq	lr, r1, r0, lsr r7
   3b27c:	andeq	r0, r0, r4, lsl r7
   3b280:	andeq	sp, r1, ip, asr ip
   3b284:	muleq	r1, r8, r3
   3b288:	andeq	lr, r1, r0, ror r6
   3b28c:	andeq	r0, r0, r3, lsl r7

0003b290 <flatcc_builder_table_add_union@@Base>:
   3b290:	push	{r4, r5, r6, r7, lr}
   3b294:	sub	sp, sp, #12
   3b298:	add	ip, sp, #8
   3b29c:	stmdb	ip, {r2, r3}
   3b2a0:	ldr	r3, [r0, #32]
   3b2a4:	ldrb	r5, [sp]
   3b2a8:	ldr	r6, [sp, #4]
   3b2ac:	ldrh	r3, [r3, #14]
   3b2b0:	cmp	r3, #3
   3b2b4:	bne	3b33c <flatcc_builder_table_add_union@@Base+0xac>
   3b2b8:	cmp	r5, #0
   3b2bc:	mov	r4, r0
   3b2c0:	mov	r7, r1
   3b2c4:	beq	3b30c <flatcc_builder_table_add_union@@Base+0x7c>
   3b2c8:	cmp	r6, #0
   3b2cc:	beq	3b2e0 <flatcc_builder_table_add_union@@Base+0x50>
   3b2d0:	bl	3b104 <flatcc_builder_table_add_offset@@Base>
   3b2d4:	cmp	r0, #0
   3b2d8:	strne	r6, [r0]
   3b2dc:	beq	3b38c <flatcc_builder_table_add_union@@Base+0xfc>
   3b2e0:	mov	r3, #1
   3b2e4:	sub	r1, r7, #1
   3b2e8:	mov	r0, r4
   3b2ec:	mov	r2, r3
   3b2f0:	bl	3aee4 <flatcc_builder_table_add@@Base>
   3b2f4:	cmp	r0, #0
   3b2f8:	beq	3b364 <flatcc_builder_table_add_union@@Base+0xd4>
   3b2fc:	strb	r5, [r0]
   3b300:	mov	r0, #0
   3b304:	add	sp, sp, #12
   3b308:	pop	{r4, r5, r6, r7, pc}
   3b30c:	cmp	r6, #0
   3b310:	beq	3b2e0 <flatcc_builder_table_add_union@@Base+0x50>
   3b314:	ldr	r3, [pc, #152]	; 3b3b4 <flatcc_builder_table_add_union@@Base+0x124>
   3b318:	ldr	r1, [pc, #152]	; 3b3b8 <flatcc_builder_table_add_union@@Base+0x128>
   3b31c:	add	r3, pc, r3
   3b320:	ldr	r0, [pc, #148]	; 3b3bc <flatcc_builder_table_add_union@@Base+0x12c>
   3b324:	add	r3, r3, #1216	; 0x4c0
   3b328:	ldr	r2, [pc, #144]	; 3b3c0 <flatcc_builder_table_add_union@@Base+0x130>
   3b32c:	add	r3, r3, #12
   3b330:	add	r1, pc, r1
   3b334:	add	r0, pc, r0
   3b338:	bl	14030 <__assert_fail@plt>
   3b33c:	ldr	r3, [pc, #128]	; 3b3c4 <flatcc_builder_table_add_union@@Base+0x134>
   3b340:	ldr	r1, [pc, #128]	; 3b3c8 <flatcc_builder_table_add_union@@Base+0x138>
   3b344:	add	r3, pc, r3
   3b348:	ldr	r0, [pc, #124]	; 3b3cc <flatcc_builder_table_add_union@@Base+0x13c>
   3b34c:	add	r3, r3, #1216	; 0x4c0
   3b350:	ldr	r2, [pc, #120]	; 3b3d0 <flatcc_builder_table_add_union@@Base+0x140>
   3b354:	add	r3, r3, #12
   3b358:	add	r1, pc, r1
   3b35c:	add	r0, pc, r0
   3b360:	bl	14030 <__assert_fail@plt>
   3b364:	ldr	r3, [pc, #104]	; 3b3d4 <flatcc_builder_table_add_union@@Base+0x144>
   3b368:	ldr	r1, [pc, #104]	; 3b3d8 <flatcc_builder_table_add_union@@Base+0x148>
   3b36c:	add	r3, pc, r3
   3b370:	ldr	r0, [pc, #100]	; 3b3dc <flatcc_builder_table_add_union@@Base+0x14c>
   3b374:	add	r3, r3, #1216	; 0x4c0
   3b378:	ldr	r2, [pc, #96]	; 3b3e0 <flatcc_builder_table_add_union@@Base+0x150>
   3b37c:	add	r3, r3, #12
   3b380:	add	r1, pc, r1
   3b384:	add	r0, pc, r0
   3b388:	bl	14030 <__assert_fail@plt>
   3b38c:	ldr	r3, [pc, #80]	; 3b3e4 <flatcc_builder_table_add_union@@Base+0x154>
   3b390:	ldr	r1, [pc, #80]	; 3b3e8 <flatcc_builder_table_add_union@@Base+0x158>
   3b394:	add	r3, pc, r3
   3b398:	ldr	r0, [pc, #76]	; 3b3ec <flatcc_builder_table_add_union@@Base+0x15c>
   3b39c:	add	r3, r3, #1216	; 0x4c0
   3b3a0:	ldr	r2, [pc, #72]	; 3b3f0 <flatcc_builder_table_add_union@@Base+0x160>
   3b3a4:	add	r3, r3, #12
   3b3a8:	add	r1, pc, r1
   3b3ac:	add	r0, pc, r0
   3b3b0:	bl	14030 <__assert_fail@plt>
   3b3b4:	andeq	sp, r1, r4, ror fp
   3b3b8:			; <UNDEFINED> instruction: 0x0001e2b0
   3b3bc:	andeq	lr, r1, r4, ror #12
   3b3c0:	andeq	r0, r0, pc, ror #11
   3b3c4:	andeq	sp, r1, ip, asr #22
   3b3c8:	andeq	lr, r1, r8, lsl #5
   3b3cc:	andeq	lr, r1, r0, ror #10
   3b3d0:	andeq	r0, r0, lr, ror #11
   3b3d4:	andeq	sp, r1, r4, lsr #22
   3b3d8:	andeq	lr, r1, r0, ror #4
   3b3dc:	andeq	lr, r1, r4, asr #12
   3b3e0:	strdeq	r0, [r0], -r6
   3b3e4:	strdeq	sp, [r1], -ip
   3b3e8:	andeq	lr, r1, r8, lsr r2
   3b3ec:	andeq	lr, r1, r0, lsl r6
   3b3f0:	strdeq	r0, [r0], -r2

0003b3f4 <flatcc_builder_table_add_union_vector@@Base>:
   3b3f4:	push	{r4, r5, r6, r7, lr}
   3b3f8:	sub	sp, sp, #12
   3b3fc:	add	ip, sp, #8
   3b400:	stmdb	ip, {r2, r3}
   3b404:	ldr	r3, [r0, #32]
   3b408:	ldr	r4, [sp]
   3b40c:	ldr	r6, [sp, #4]
   3b410:	ldrh	r3, [r3, #14]
   3b414:	cmp	r3, #3
   3b418:	bne	3b4bc <flatcc_builder_table_add_union_vector@@Base+0xc8>
   3b41c:	clz	r3, r6
   3b420:	clz	r2, r4
   3b424:	lsr	r3, r3, #5
   3b428:	lsr	r2, r2, #5
   3b42c:	cmp	r2, r3
   3b430:	beq	3b450 <flatcc_builder_table_add_union_vector@@Base+0x5c>
   3b434:	adds	r4, r4, #0
   3b438:	movne	r4, #1
   3b43c:	cmp	r4, r3
   3b440:	mvnne	r0, #0
   3b444:	beq	3b4e4 <flatcc_builder_table_add_union_vector@@Base+0xf0>
   3b448:	add	sp, sp, #12
   3b44c:	pop	{r4, r5, r6, r7, pc}
   3b450:	cmp	r4, #0
   3b454:	moveq	r0, r4
   3b458:	beq	3b448 <flatcc_builder_table_add_union_vector@@Base+0x54>
   3b45c:	mov	r7, r1
   3b460:	sub	r1, r1, #1
   3b464:	mov	r5, r0
   3b468:	bl	3b104 <flatcc_builder_table_add_offset@@Base>
   3b46c:	cmp	r0, #0
   3b470:	beq	3b50c <flatcc_builder_table_add_union_vector@@Base+0x118>
   3b474:	str	r4, [r0]
   3b478:	mov	r1, r7
   3b47c:	mov	r0, r5
   3b480:	bl	3b104 <flatcc_builder_table_add_offset@@Base>
   3b484:	cmp	r0, #0
   3b488:	strne	r6, [r0]
   3b48c:	movne	r0, #0
   3b490:	bne	3b448 <flatcc_builder_table_add_union_vector@@Base+0x54>
   3b494:	ldr	r3, [pc, #152]	; 3b534 <flatcc_builder_table_add_union_vector@@Base+0x140>
   3b498:	ldr	r1, [pc, #152]	; 3b538 <flatcc_builder_table_add_union_vector@@Base+0x144>
   3b49c:	add	r3, pc, r3
   3b4a0:	ldr	r0, [pc, #148]	; 3b53c <flatcc_builder_table_add_union_vector@@Base+0x148>
   3b4a4:	add	r3, r3, #1248	; 0x4e0
   3b4a8:	ldr	r2, [pc, #144]	; 3b540 <flatcc_builder_table_add_union_vector@@Base+0x14c>
   3b4ac:	add	r3, r3, #12
   3b4b0:	add	r1, pc, r1
   3b4b4:	add	r0, pc, r0
   3b4b8:	bl	14030 <__assert_fail@plt>
   3b4bc:	ldr	r3, [pc, #128]	; 3b544 <flatcc_builder_table_add_union_vector@@Base+0x150>
   3b4c0:	ldr	r1, [pc, #128]	; 3b548 <flatcc_builder_table_add_union_vector@@Base+0x154>
   3b4c4:	add	r3, pc, r3
   3b4c8:	ldr	r0, [pc, #124]	; 3b54c <flatcc_builder_table_add_union_vector@@Base+0x158>
   3b4cc:	add	r3, r3, #1248	; 0x4e0
   3b4d0:	mov	r2, #1536	; 0x600
   3b4d4:	add	r3, r3, #12
   3b4d8:	add	r1, pc, r1
   3b4dc:	add	r0, pc, r0
   3b4e0:	bl	14030 <__assert_fail@plt>
   3b4e4:	ldr	r3, [pc, #100]	; 3b550 <flatcc_builder_table_add_union_vector@@Base+0x15c>
   3b4e8:	ldr	r1, [pc, #100]	; 3b554 <flatcc_builder_table_add_union_vector@@Base+0x160>
   3b4ec:	add	r3, pc, r3
   3b4f0:	ldr	r0, [pc, #96]	; 3b558 <flatcc_builder_table_add_union_vector@@Base+0x164>
   3b4f4:	add	r3, r3, #1248	; 0x4e0
   3b4f8:	ldr	r2, [pc, #92]	; 3b55c <flatcc_builder_table_add_union_vector@@Base+0x168>
   3b4fc:	add	r3, r3, #12
   3b500:	add	r1, pc, r1
   3b504:	add	r0, pc, r0
   3b508:	bl	14030 <__assert_fail@plt>
   3b50c:	ldr	r3, [pc, #76]	; 3b560 <flatcc_builder_table_add_union_vector@@Base+0x16c>
   3b510:	ldr	r1, [pc, #76]	; 3b564 <flatcc_builder_table_add_union_vector@@Base+0x170>
   3b514:	add	r3, pc, r3
   3b518:	ldr	r0, [pc, #72]	; 3b568 <flatcc_builder_table_add_union_vector@@Base+0x174>
   3b51c:	add	r3, r3, #1248	; 0x4e0
   3b520:	ldr	r2, [pc, #68]	; 3b56c <flatcc_builder_table_add_union_vector@@Base+0x178>
   3b524:	add	r3, r3, #12
   3b528:	add	r1, pc, r1
   3b52c:	add	r0, pc, r0
   3b530:	bl	14030 <__assert_fail@plt>
   3b534:	strdeq	sp, [r1], -r4
   3b538:	andeq	lr, r1, r0, lsr r1
   3b53c:	andeq	lr, r1, r8, lsl #10
   3b540:	andeq	r0, r0, r8, lsl #12
   3b544:	andeq	sp, r1, ip, asr #19
   3b548:	andeq	lr, r1, r8, lsl #2
   3b54c:	andeq	lr, r1, r0, ror #7
   3b550:	andeq	sp, r1, r4, lsr #19
   3b554:	andeq	lr, r1, r0, ror #1
   3b558:	ldrdeq	lr, [r1], -r0
   3b55c:	andeq	r0, r0, r1, lsl #12
   3b560:	andeq	sp, r1, ip, ror r9
   3b564:	strheq	lr, [r1], -r8
   3b568:	muleq	r1, r0, r4
   3b56c:	andeq	r0, r0, r4, lsl #12

0003b570 <flatcc_builder_push_buffer_alignment@@Base>:
   3b570:	mov	r3, r0
   3b574:	mov	r2, #4
   3b578:	ldrh	r0, [r0, #128]	; 0x80
   3b57c:	strh	r2, [r3, #128]	; 0x80
   3b580:	bx	lr

0003b584 <flatcc_builder_pop_buffer_alignment@@Base>:
   3b584:	ldrh	r3, [r0, #128]	; 0x80
   3b588:	cmp	r3, r1
   3b58c:	strhcc	r1, [r0, #128]	; 0x80
   3b590:	bx	lr

0003b594 <flatcc_builder_get_buffer_alignment@@Base>:
   3b594:	ldrh	r0, [r0, #128]	; 0x80
   3b598:	bx	lr

0003b59c <flatcc_builder_set_vtable_clustering@@Base>:
   3b59c:	clz	r1, r1
   3b5a0:	lsr	r1, r1, #5
   3b5a4:	str	r1, [r0, #180]	; 0xb4
   3b5a8:	bx	lr

0003b5ac <flatcc_builder_set_block_align@@Base>:
   3b5ac:	strh	r1, [r0, #132]	; 0x84
   3b5b0:	bx	lr

0003b5b4 <flatcc_builder_get_level@@Base>:
   3b5b4:	ldr	r0, [r0, #156]	; 0x9c
   3b5b8:	bx	lr

0003b5bc <flatcc_builder_set_max_level@@Base>:
   3b5bc:	ldr	r3, [r0, #160]	; 0xa0
   3b5c0:	str	r1, [r0, #176]	; 0xb0
   3b5c4:	cmp	r1, r3
   3b5c8:	strgt	r1, [r0, #160]	; 0xa0
   3b5cc:	bx	lr

0003b5d0 <flatcc_builder_get_buffer_size@@Base>:
   3b5d0:	ldr	r2, [r0, #140]	; 0x8c
   3b5d4:	ldr	r0, [r0, #136]	; 0x88
   3b5d8:	sub	r0, r2, r0
   3b5dc:	bx	lr

0003b5e0 <flatcc_builder_get_buffer_start@@Base>:
   3b5e0:	ldr	r0, [r0, #136]	; 0x88
   3b5e4:	bx	lr

0003b5e8 <flatcc_builder_get_buffer_end@@Base>:
   3b5e8:	ldr	r0, [r0, #140]	; 0x8c
   3b5ec:	bx	lr

0003b5f0 <flatcc_builder_set_vtable_cache_limit@@Base>:
   3b5f0:	str	r1, [r0, #172]	; 0xac
   3b5f4:	bx	lr

0003b5f8 <flatcc_builder_set_identifier@@Base>:
   3b5f8:	ldr	r3, [pc, #32]	; 3b620 <flatcc_builder_set_identifier@@Base+0x28>
   3b5fc:	cmp	r1, #0
   3b600:	add	r3, pc, r3
   3b604:	beq	3b614 <flatcc_builder_set_identifier@@Base+0x1c>
   3b608:	ldr	r3, [r1]
   3b60c:	str	r3, [r0, #168]	; 0xa8
   3b610:	bx	lr
   3b614:	ldr	r2, [pc, #8]	; 3b624 <flatcc_builder_set_identifier@@Base+0x2c>
   3b618:	ldr	r1, [r3, r2]
   3b61c:	b	3b608 <flatcc_builder_set_identifier@@Base+0x10>
   3b620:	strdeq	lr, [r2], -r8
   3b624:	muleq	r0, r8, r0

0003b628 <flatcc_builder_get_type@@Base>:
   3b628:	ldr	r0, [r0, #32]
   3b62c:	cmp	r0, #0
   3b630:	ldrhne	r0, [r0, #14]
   3b634:	bx	lr

0003b638 <flatcc_builder_get_type_at@@Base>:
   3b638:	cmp	r1, #0
   3b63c:	ble	3b664 <flatcc_builder_get_type_at@@Base+0x2c>
   3b640:	ldr	r3, [r0, #156]	; 0x9c
   3b644:	cmp	r1, r3
   3b648:	bgt	3b664 <flatcc_builder_get_type_at@@Base+0x2c>
   3b64c:	sub	r1, r1, r3
   3b650:	ldr	r3, [r0, #32]
   3b654:	add	r1, r1, r1, lsl #3
   3b658:	add	r1, r3, r1, lsl #2
   3b65c:	ldrh	r0, [r1, #14]
   3b660:	bx	lr
   3b664:	mov	r0, #0
   3b668:	bx	lr

0003b66c <flatcc_builder_get_direct_buffer@@Base>:
   3b66c:	ldr	r3, [r0, #184]	; 0xb8
   3b670:	cmp	r3, #0
   3b674:	beq	3b688 <flatcc_builder_get_direct_buffer@@Base+0x1c>
   3b678:	ldr	r2, [r0, #188]	; 0xbc
   3b67c:	ldr	r3, [r0, #192]	; 0xc0
   3b680:	cmp	r2, r3
   3b684:	beq	3b69c <flatcc_builder_get_direct_buffer@@Base+0x30>
   3b688:	cmp	r1, #0
   3b68c:	movne	r0, #0
   3b690:	strne	r0, [r1]
   3b694:	moveq	r0, r1
   3b698:	bx	lr
   3b69c:	cmp	r1, #0
   3b6a0:	ldrne	r3, [r0, #212]	; 0xd4
   3b6a4:	ldr	r0, [r0, #196]	; 0xc4
   3b6a8:	strne	r3, [r1]
   3b6ac:	bx	lr

0003b6b0 <flatcc_builder_copy_buffer@@Base>:
   3b6b0:	ldr	r3, [r0, #184]	; 0xb8
   3b6b4:	cmp	r3, #0
   3b6b8:	beq	3b6f8 <flatcc_builder_copy_buffer@@Base+0x48>
   3b6bc:	push	{r4, lr}
   3b6c0:	add	r0, r0, #188	; 0xbc
   3b6c4:	bl	3bdc8 <flatcc_emitter_copy_buffer@@Base>
   3b6c8:	cmp	r0, #0
   3b6cc:	popne	{r4, pc}
   3b6d0:	ldr	r3, [pc, #40]	; 3b700 <flatcc_builder_copy_buffer@@Base+0x50>
   3b6d4:	ldr	r1, [pc, #40]	; 3b704 <flatcc_builder_copy_buffer@@Base+0x54>
   3b6d8:	add	r3, pc, r3
   3b6dc:	ldr	r0, [pc, #36]	; 3b708 <flatcc_builder_copy_buffer@@Base+0x58>
   3b6e0:	add	r3, r3, #1296	; 0x510
   3b6e4:	ldr	r2, [pc, #32]	; 3b70c <flatcc_builder_copy_buffer@@Base+0x5c>
   3b6e8:	add	r3, r3, #4
   3b6ec:	add	r1, pc, r1
   3b6f0:	add	r0, pc, r0
   3b6f4:	bl	14030 <__assert_fail@plt>
   3b6f8:	mov	r0, r3
   3b6fc:	bx	lr
   3b700:			; <UNDEFINED> instruction: 0x0001d7b8
   3b704:	strdeq	sp, [r1], -r4
   3b708:	andeq	lr, r1, ip, lsl #6
   3b70c:	andeq	r0, r0, r6, lsl #15

0003b710 <flatcc_builder_finalize_buffer@@Base>:
   3b710:	push	{r4, r5, r6, lr}
   3b714:	mov	r5, r1
   3b718:	mov	r6, r0
   3b71c:	bl	3b5d0 <flatcc_builder_get_buffer_size@@Base>
   3b720:	cmp	r5, #0
   3b724:	strne	r0, [r5]
   3b728:	mov	r4, r0
   3b72c:	bl	13f34 <malloc@plt>
   3b730:	subs	r5, r0, #0
   3b734:	beq	3b758 <flatcc_builder_finalize_buffer@@Base+0x48>
   3b738:	mov	r2, r4
   3b73c:	mov	r0, r6
   3b740:	mov	r1, r5
   3b744:	bl	3b6b0 <flatcc_builder_copy_buffer@@Base>
   3b748:	cmp	r0, #0
   3b74c:	beq	3b77c <flatcc_builder_finalize_buffer@@Base+0x6c>
   3b750:	mov	r0, r5
   3b754:	pop	{r4, r5, r6, pc}
   3b758:	ldr	r3, [pc, #64]	; 3b7a0 <flatcc_builder_finalize_buffer@@Base+0x90>
   3b75c:	ldr	r1, [pc, #64]	; 3b7a4 <flatcc_builder_finalize_buffer@@Base+0x94>
   3b760:	ldr	r0, [pc, #64]	; 3b7a8 <flatcc_builder_finalize_buffer@@Base+0x98>
   3b764:	add	r3, pc, r3
   3b768:	ldr	r2, [pc, #60]	; 3b7ac <flatcc_builder_finalize_buffer@@Base+0x9c>
   3b76c:	add	r3, r3, #1328	; 0x530
   3b770:	add	r1, pc, r1
   3b774:	add	r0, pc, r0
   3b778:	bl	14030 <__assert_fail@plt>
   3b77c:	ldr	r3, [pc, #44]	; 3b7b0 <flatcc_builder_finalize_buffer@@Base+0xa0>
   3b780:	ldr	r1, [pc, #44]	; 3b7b4 <flatcc_builder_finalize_buffer@@Base+0xa4>
   3b784:	ldr	r0, [pc, #44]	; 3b7b8 <flatcc_builder_finalize_buffer@@Base+0xa8>
   3b788:	add	r3, pc, r3
   3b78c:	ldr	r2, [pc, #40]	; 3b7bc <flatcc_builder_finalize_buffer@@Base+0xac>
   3b790:	add	r3, r3, #1328	; 0x530
   3b794:	add	r1, pc, r1
   3b798:	add	r0, pc, r0
   3b79c:	bl	14030 <__assert_fail@plt>
   3b7a0:	andeq	sp, r1, ip, lsr #14
   3b7a4:	andeq	sp, r1, r0, ror lr
   3b7a8:	strdeq	ip, [r0], -r0
   3b7ac:	muleq	r0, r8, r7
   3b7b0:	andeq	sp, r1, r8, lsl #14
   3b7b4:	andeq	sp, r1, ip, asr #28
   3b7b8:	andeq	ip, r0, ip, asr #13
   3b7bc:	muleq	r0, ip, r7

0003b7c0 <flatcc_builder_finalize_aligned_buffer@@Base>:
   3b7c0:	push	{r4, r5, r6, r7, lr}
   3b7c4:	sub	sp, sp, #12
   3b7c8:	mov	r6, r1
   3b7cc:	mov	r7, r0
   3b7d0:	bl	3b5d0 <flatcc_builder_get_buffer_size@@Base>
   3b7d4:	cmp	r6, #0
   3b7d8:	strne	r0, [r6]
   3b7dc:	mov	r4, r0
   3b7e0:	mov	r0, r7
   3b7e4:	bl	3b594 <flatcc_builder_get_buffer_alignment@@Base>
   3b7e8:	sub	r4, r4, #1
   3b7ec:	mov	r1, r0
   3b7f0:	rsb	r3, r0, #0
   3b7f4:	add	r4, r4, r0
   3b7f8:	add	r0, sp, #8
   3b7fc:	cmp	r1, #4
   3b800:	and	r4, r4, r3
   3b804:	mov	r3, #0
   3b808:	movcc	r1, #4
   3b80c:	mov	r2, r4
   3b810:	str	r3, [r0, #-4]!
   3b814:	bl	13f88 <posix_memalign@plt>
   3b818:	cmp	r0, #0
   3b81c:	beq	3b84c <flatcc_builder_finalize_aligned_buffer@@Base+0x8c>
   3b820:	ldr	r0, [sp, #4]
   3b824:	cmp	r0, #0
   3b828:	beq	3b830 <flatcc_builder_finalize_aligned_buffer@@Base+0x70>
   3b82c:	bl	13ec8 <free@plt>
   3b830:	cmp	r6, #0
   3b834:	moveq	r5, r6
   3b838:	movne	r5, #0
   3b83c:	strne	r5, [r6]
   3b840:	mov	r0, r5
   3b844:	add	sp, sp, #12
   3b848:	pop	{r4, r5, r6, r7, pc}
   3b84c:	ldr	r5, [sp, #4]
   3b850:	cmp	r5, #0
   3b854:	beq	3b830 <flatcc_builder_finalize_aligned_buffer@@Base+0x70>
   3b858:	mov	r2, r4
   3b85c:	mov	r0, r7
   3b860:	mov	r1, r5
   3b864:	bl	3b6b0 <flatcc_builder_copy_buffer@@Base>
   3b868:	cmp	r0, #0
   3b86c:	bne	3b840 <flatcc_builder_finalize_aligned_buffer@@Base+0x80>
   3b870:	mov	r0, r5
   3b874:	b	3b82c <flatcc_builder_finalize_aligned_buffer@@Base+0x6c>

0003b878 <flatcc_builder_aligned_alloc@@Base>:
   3b878:	push	{r4, lr}
   3b87c:	sub	sp, sp, #8
   3b880:	add	r3, sp, #8
   3b884:	cmp	r0, #4
   3b888:	mov	r4, #0
   3b88c:	mov	r2, r1
   3b890:	str	r4, [r3, #-4]!
   3b894:	movcs	r1, r0
   3b898:	movcc	r1, #4
   3b89c:	mov	r0, r3
   3b8a0:	bl	13f88 <posix_memalign@plt>
   3b8a4:	cmp	r0, r4
   3b8a8:	ldr	r0, [sp, #4]
   3b8ac:	beq	3b8c0 <flatcc_builder_aligned_alloc@@Base+0x48>
   3b8b0:	cmp	r0, #0
   3b8b4:	beq	3b8c0 <flatcc_builder_aligned_alloc@@Base+0x48>
   3b8b8:	bl	13ec8 <free@plt>
   3b8bc:	mov	r0, r4
   3b8c0:	add	sp, sp, #8
   3b8c4:	pop	{r4, pc}

0003b8c8 <flatcc_builder_aligned_free@@Base>:
   3b8c8:	b	13ec8 <free@plt>

0003b8cc <flatcc_builder_get_emit_context@@Base>:
   3b8cc:	ldr	r0, [r0, #36]	; 0x24
   3b8d0:	bx	lr

0003b8d4 <flatcc_emitter_recycle_page@@Base>:
   3b8d4:	ldr	r3, [r0]
   3b8d8:	cmp	r3, r1
   3b8dc:	beq	3b924 <flatcc_emitter_recycle_page@@Base+0x50>
   3b8e0:	ldr	r2, [r0, #4]
   3b8e4:	cmp	r1, r2
   3b8e8:	beq	3b924 <flatcc_emitter_recycle_page@@Base+0x50>
   3b8ec:	ldr	ip, [r1, #2944]	; 0xb80
   3b8f0:	ldr	r2, [r1, #2948]	; 0xb84
   3b8f4:	push	{lr}		; (str lr, [sp, #-4]!)
   3b8f8:	mov	r0, #0
   3b8fc:	str	r2, [ip, #2948]	; 0xb84
   3b900:	ldr	r2, [r3, #2948]	; 0xb84
   3b904:	ldr	lr, [r1, #2948]	; 0xb84
   3b908:	str	ip, [lr, #2944]	; 0xb80
   3b90c:	str	r3, [r1, #2944]	; 0xb80
   3b910:	str	r2, [r1, #2948]	; 0xb84
   3b914:	str	r1, [r2, #2944]	; 0xb80
   3b918:	ldr	r3, [r1, #2944]	; 0xb80
   3b91c:	str	r1, [r3, #2948]	; 0xb84
   3b920:	pop	{pc}		; (ldr pc, [sp], #4)
   3b924:	mvn	r0, #0
   3b928:	bx	lr

0003b92c <flatcc_emitter_reset@@Base>:
   3b92c:	ldr	r2, [r0]
   3b930:	cmp	r2, #0
   3b934:	bxeq	lr
   3b938:	ldr	r3, [r0, #32]
   3b93c:	mov	r1, #1472	; 0x5c0
   3b940:	push	{r4, lr}
   3b944:	cmp	r3, #0
   3b948:	str	r1, [r0, #12]
   3b94c:	str	r1, [r0, #20]
   3b950:	ldr	r1, [r0, #24]
   3b954:	add	ip, r2, #1472	; 0x5c0
   3b958:	moveq	r3, r1
   3b95c:	stmib	r0, {r2, ip}
   3b960:	str	ip, [r0, #16]
   3b964:	add	ip, r3, r3, lsl #1
   3b968:	lsr	r3, r1, #2
   3b96c:	add	r3, r3, ip, lsr #2
   3b970:	ldr	ip, [r0, #28]
   3b974:	ldr	lr, [pc, #104]	; 3b9e4 <flatcc_emitter_reset@@Base+0xb8>
   3b978:	cmp	ip, r3, lsl #1
   3b97c:	mov	r1, #0
   3b980:	str	lr, [r2, #2952]	; 0xb88
   3b984:	str	r3, [r0, #32]
   3b988:	str	r1, [r0, #24]
   3b98c:	popls	{r4, pc}
   3b990:	ldr	r3, [r2, #2944]	; 0xb80
   3b994:	mov	r4, r0
   3b998:	cmp	r2, r3
   3b99c:	popeq	{r4, pc}
   3b9a0:	ldr	r1, [r3, #2944]	; 0xb80
   3b9a4:	mov	r0, r3
   3b9a8:	str	r1, [r2, #2944]	; 0xb80
   3b9ac:	ldr	r3, [r3, #2944]	; 0xb80
   3b9b0:	str	r2, [r3, #2948]	; 0xb84
   3b9b4:	bl	13ec8 <free@plt>
   3b9b8:	ldr	r3, [r4, #28]
   3b9bc:	ldr	r2, [r4, #32]
   3b9c0:	sub	r3, r3, #2944	; 0xb80
   3b9c4:	str	r3, [r4, #28]
   3b9c8:	cmp	r3, r2, lsl #1
   3b9cc:	popls	{r4, pc}
   3b9d0:	ldm	r4, {r1, r2}
   3b9d4:	ldr	r3, [r2, #2944]	; 0xb80
   3b9d8:	cmp	r3, r1
   3b9dc:	bne	3b9a0 <flatcc_emitter_reset@@Base+0x74>
   3b9e0:	pop	{r4, pc}
   3b9e4:			; <UNDEFINED> instruction: 0xfffffa40

0003b9e8 <flatcc_emitter_clear@@Base>:
   3b9e8:	ldr	r3, [r0]
   3b9ec:	cmp	r3, #0
   3b9f0:	bxeq	lr
   3b9f4:	ldr	r2, [r3, #2948]	; 0xb84
   3b9f8:	mov	r1, #0
   3b9fc:	push	{r4, r5, r6, lr}
   3ba00:	mov	r5, r0
   3ba04:	str	r1, [r2, #2944]	; 0xb80
   3ba08:	ldr	r4, [r3, #2944]	; 0xb80
   3ba0c:	cmp	r4, r1
   3ba10:	bne	3ba1c <flatcc_emitter_clear@@Base+0x34>
   3ba14:	b	3ba4c <flatcc_emitter_clear@@Base+0x64>
   3ba18:	mov	r4, r3
   3ba1c:	ldr	r0, [r4, #2948]	; 0xb84
   3ba20:	bl	13ec8 <free@plt>
   3ba24:	ldr	r3, [r4, #2944]	; 0xb80
   3ba28:	cmp	r3, #0
   3ba2c:	bne	3ba18 <flatcc_emitter_clear@@Base+0x30>
   3ba30:	mov	r0, r4
   3ba34:	bl	13ec8 <free@plt>
   3ba38:	mov	r0, r5
   3ba3c:	mov	r2, #36	; 0x24
   3ba40:	mov	r1, #0
   3ba44:	pop	{r4, r5, r6, lr}
   3ba48:	b	13f94 <memset@plt>
   3ba4c:	mov	r4, r3
   3ba50:	b	3ba30 <flatcc_emitter_clear@@Base+0x48>

0003ba54 <flatcc_emitter@@Base>:
   3ba54:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3ba58:	sub	sp, sp, #12
   3ba5c:	mov	r4, r0
   3ba60:	ldr	ip, [sp, #48]	; 0x30
   3ba64:	ldr	r0, [r0, #24]
   3ba68:	cmp	r3, #0
   3ba6c:	add	r0, r0, ip
   3ba70:	str	r0, [r4, #24]
   3ba74:	blt	3bc38 <flatcc_emitter@@Base+0x1e4>
   3ba78:	ldr	r0, [r4, #20]
   3ba7c:	cmp	ip, r0
   3ba80:	bls	3bb0c <flatcc_emitter@@Base+0xb8>
   3ba84:	cmp	r2, #0
   3ba88:	addne	r7, r1, #8
   3ba8c:	movne	r8, r2
   3ba90:	movne	r9, #2944	; 0xb80
   3ba94:	beq	3bb00 <flatcc_emitter@@Base+0xac>
   3ba98:	ldr	r6, [r7, #-4]
   3ba9c:	ldr	sl, [r7, #-8]
   3baa0:	cmp	r6, #0
   3baa4:	beq	3baf4 <flatcc_emitter@@Base+0xa0>
   3baa8:	cmp	r0, r6
   3baac:	mov	r5, r0
   3bab0:	bcs	3bb54 <flatcc_emitter@@Base+0x100>
   3bab4:	cmp	r0, #0
   3bab8:	beq	3bb60 <flatcc_emitter@@Base+0x10c>
   3babc:	sub	r6, r6, r0
   3bac0:	mov	r1, sl
   3bac4:	mov	r2, r5
   3bac8:	ldr	r0, [r4, #16]
   3bacc:	bl	13ed4 <memcpy@plt>
   3bad0:	ldr	r3, [r4, #16]
   3bad4:	ldr	r0, [r4, #20]
   3bad8:	add	r3, r3, r5
   3badc:	sub	r0, r0, r5
   3bae0:	cmp	r6, #0
   3bae4:	add	sl, sl, r5
   3bae8:	str	r3, [r4, #16]
   3baec:	str	r0, [r4, #20]
   3baf0:	bne	3baa8 <flatcc_emitter@@Base+0x54>
   3baf4:	subs	r8, r8, #1
   3baf8:	add	r7, r7, #8
   3bafc:	bne	3ba98 <flatcc_emitter@@Base+0x44>
   3bb00:	mov	r0, #0
   3bb04:	add	sp, sp, #12
   3bb08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3bb0c:	ldr	r3, [r4, #16]
   3bb10:	sub	r0, r0, ip
   3bb14:	add	ip, r3, ip
   3bb18:	str	r0, [r4, #20]
   3bb1c:	str	ip, [r4, #16]
   3bb20:	cmp	r2, #0
   3bb24:	addne	r4, r1, #8
   3bb28:	movne	r7, r2
   3bb2c:	beq	3bb00 <flatcc_emitter@@Base+0xac>
   3bb30:	ldmdb	r4, {r1, r2}
   3bb34:	mov	r0, r3
   3bb38:	bl	13ed4 <memcpy@plt>
   3bb3c:	ldr	r2, [r4, #-4]
   3bb40:	subs	r7, r7, #1
   3bb44:	add	r4, r4, #8
   3bb48:	add	r3, r0, r2
   3bb4c:	bne	3bb30 <flatcc_emitter@@Base+0xdc>
   3bb50:	b	3bb00 <flatcc_emitter@@Base+0xac>
   3bb54:	mov	r5, r6
   3bb58:	mov	r6, #0
   3bb5c:	b	3bac0 <flatcc_emitter@@Base+0x6c>
   3bb60:	ldr	fp, [r4, #4]
   3bb64:	cmp	fp, #0
   3bb68:	beq	3bbd8 <flatcc_emitter@@Base+0x184>
   3bb6c:	ldr	r5, [fp, #2944]	; 0xb80
   3bb70:	ldr	r3, [r4]
   3bb74:	cmp	r5, r3
   3bb78:	beq	3bba0 <flatcc_emitter@@Base+0x14c>
   3bb7c:	str	r5, [r4, #4]
   3bb80:	ldr	r3, [r5, #2948]	; 0xb84
   3bb84:	mov	r0, r9
   3bb88:	str	r5, [r4, #16]
   3bb8c:	ldr	r3, [r3, #2952]	; 0xb88
   3bb90:	str	r9, [r4, #20]
   3bb94:	add	r3, r3, #2944	; 0xb80
   3bb98:	str	r3, [r5, #2952]	; 0xb88
   3bb9c:	b	3baa8 <flatcc_emitter@@Base+0x54>
   3bba0:	ldr	r0, [pc, #540]	; 3bdc4 <flatcc_emitter@@Base+0x370>
   3bba4:	bl	13f34 <malloc@plt>
   3bba8:	cmp	r0, #0
   3bbac:	beq	3bbe8 <flatcc_emitter@@Base+0x194>
   3bbb0:	ldr	r3, [r4, #28]
   3bbb4:	str	r5, [r0, #2944]	; 0xb80
   3bbb8:	add	r3, r3, #2944	; 0xb80
   3bbbc:	str	fp, [r0, #2948]	; 0xb84
   3bbc0:	str	r3, [r4, #28]
   3bbc4:	str	r0, [r5, #2948]	; 0xb84
   3bbc8:	str	r0, [fp, #2944]	; 0xb80
   3bbcc:	mov	r5, r0
   3bbd0:	str	r0, [r4, #4]
   3bbd4:	b	3bb80 <flatcc_emitter@@Base+0x12c>
   3bbd8:	ldr	r0, [pc, #484]	; 3bdc4 <flatcc_emitter@@Base+0x370>
   3bbdc:	bl	13f34 <malloc@plt>
   3bbe0:	cmp	r0, #0
   3bbe4:	bne	3bbf4 <flatcc_emitter@@Base+0x1a0>
   3bbe8:	mvn	r0, #0
   3bbec:	add	sp, sp, #12
   3bbf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3bbf4:	mov	r2, #1472	; 0x5c0
   3bbf8:	ldr	r3, [r4, #28]
   3bbfc:	str	r2, [r4, #12]
   3bc00:	str	r2, [r4, #20]
   3bc04:	sub	r2, r2, #2944	; 0xb80
   3bc08:	str	r2, [r0, #2952]	; 0xb88
   3bc0c:	str	r0, [r4]
   3bc10:	add	r3, r3, #2944	; 0xb80
   3bc14:	str	r0, [r4, #4]
   3bc18:	str	r0, [r0, #2944]	; 0xb80
   3bc1c:	str	r0, [r0, #2948]	; 0xb84
   3bc20:	add	r0, r0, #1472	; 0x5c0
   3bc24:	str	r0, [r4, #8]
   3bc28:	str	r0, [r4, #16]
   3bc2c:	str	r3, [r4, #28]
   3bc30:	mov	r0, #1472	; 0x5c0
   3bc34:	b	3baa8 <flatcc_emitter@@Base+0x54>
   3bc38:	ldr	r0, [r4, #12]
   3bc3c:	cmp	ip, r0
   3bc40:	bls	3bcc0 <flatcc_emitter@@Base+0x26c>
   3bc44:	add	r6, r1, r2, lsl #3
   3bc48:	mov	r7, r2
   3bc4c:	mov	r9, #2944	; 0xb80
   3bc50:	mov	r8, #0
   3bc54:	cmp	r7, #0
   3bc58:	beq	3bb00 <flatcc_emitter@@Base+0xac>
   3bc5c:	ldr	r5, [r6, #-4]
   3bc60:	ldr	sl, [r6, #-8]
   3bc64:	cmp	r5, #0
   3bc68:	add	sl, sl, r5
   3bc6c:	beq	3bcb4 <flatcc_emitter@@Base+0x260>
   3bc70:	ldr	r2, [r4, #12]
   3bc74:	cmp	r2, r5
   3bc78:	bcs	3bcd8 <flatcc_emitter@@Base+0x284>
   3bc7c:	cmp	r2, #0
   3bc80:	beq	3bce8 <flatcc_emitter@@Base+0x294>
   3bc84:	sub	r5, r5, r2
   3bc88:	mov	r1, r8
   3bc8c:	ldr	r0, [r4, #8]
   3bc90:	rsb	r3, r2, #0
   3bc94:	add	r0, r0, r3
   3bc98:	add	sl, sl, r3
   3bc9c:	str	r1, [r4, #12]
   3bca0:	str	r0, [r4, #8]
   3bca4:	mov	r1, sl
   3bca8:	bl	13ed4 <memcpy@plt>
   3bcac:	cmp	r5, #0
   3bcb0:	bne	3bc70 <flatcc_emitter@@Base+0x21c>
   3bcb4:	sub	r6, r6, #8
   3bcb8:	sub	r7, r7, #1
   3bcbc:	b	3bc54 <flatcc_emitter@@Base+0x200>
   3bcc0:	ldr	r3, [r4, #8]
   3bcc4:	sub	r0, r0, ip
   3bcc8:	sub	r3, r3, ip
   3bccc:	str	r0, [r4, #12]
   3bcd0:	str	r3, [r4, #8]
   3bcd4:	b	3bb20 <flatcc_emitter@@Base+0xcc>
   3bcd8:	sub	r1, r2, r5
   3bcdc:	mov	r2, r5
   3bce0:	mov	r5, #0
   3bce4:	b	3bc8c <flatcc_emitter@@Base+0x238>
   3bce8:	ldr	r3, [r4]
   3bcec:	cmp	r3, #0
   3bcf0:	beq	3bd74 <flatcc_emitter@@Base+0x320>
   3bcf4:	ldr	fp, [r3, #2948]	; 0xb84
   3bcf8:	ldr	r2, [r4, #4]
   3bcfc:	cmp	fp, r2
   3bd00:	beq	3bd34 <flatcc_emitter@@Base+0x2e0>
   3bd04:	ldr	r3, [r3, #2952]	; 0xb88
   3bd08:	sub	r3, r3, #2944	; 0xb80
   3bd0c:	str	r3, [fp, #2952]	; 0xb88
   3bd10:	str	fp, [r4]
   3bd14:	ldr	r3, [fp, #2944]	; 0xb80
   3bd18:	add	r2, fp, #2944	; 0xb80
   3bd1c:	str	r9, [r4, #12]
   3bd20:	ldr	r3, [r3, #2952]	; 0xb88
   3bd24:	str	r2, [r4, #8]
   3bd28:	sub	r3, r3, #2944	; 0xb80
   3bd2c:	str	r3, [fp, #2952]	; 0xb88
   3bd30:	b	3bc70 <flatcc_emitter@@Base+0x21c>
   3bd34:	ldr	r0, [pc, #136]	; 3bdc4 <flatcc_emitter@@Base+0x370>
   3bd38:	str	r3, [sp, #4]
   3bd3c:	bl	13f34 <malloc@plt>
   3bd40:	ldr	r3, [sp, #4]
   3bd44:	cmp	r0, #0
   3bd48:	beq	3bbe8 <flatcc_emitter@@Base+0x194>
   3bd4c:	ldr	r2, [r4, #28]
   3bd50:	str	fp, [r0, #2948]	; 0xb84
   3bd54:	add	r2, r2, #2944	; 0xb80
   3bd58:	str	r3, [r0, #2944]	; 0xb80
   3bd5c:	str	r2, [r4, #28]
   3bd60:	str	r0, [r3, #2948]	; 0xb84
   3bd64:	str	r0, [fp, #2944]	; 0xb80
   3bd68:	str	r0, [r4]
   3bd6c:	mov	fp, r0
   3bd70:	b	3bd14 <flatcc_emitter@@Base+0x2c0>
   3bd74:	ldr	r0, [pc, #72]	; 3bdc4 <flatcc_emitter@@Base+0x370>
   3bd78:	bl	13f34 <malloc@plt>
   3bd7c:	cmp	r0, #0
   3bd80:	beq	3bbe8 <flatcc_emitter@@Base+0x194>
   3bd84:	mov	r2, #1472	; 0x5c0
   3bd88:	ldr	r3, [r4, #28]
   3bd8c:	str	r2, [r4, #12]
   3bd90:	str	r2, [r4, #20]
   3bd94:	sub	r2, r2, #2944	; 0xb80
   3bd98:	str	r2, [r0, #2952]	; 0xb88
   3bd9c:	str	r0, [r4]
   3bda0:	add	r3, r3, #2944	; 0xb80
   3bda4:	str	r0, [r4, #4]
   3bda8:	str	r0, [r0, #2944]	; 0xb80
   3bdac:	str	r0, [r0, #2948]	; 0xb84
   3bdb0:	add	r0, r0, #1472	; 0x5c0
   3bdb4:	str	r0, [r4, #8]
   3bdb8:	str	r0, [r4, #16]
   3bdbc:	str	r3, [r4, #28]
   3bdc0:	b	3bc70 <flatcc_emitter@@Base+0x21c>
   3bdc4:	andeq	r0, r0, ip, lsl #23

0003bdc8 <flatcc_emitter_copy_buffer@@Base>:
   3bdc8:	ldr	ip, [r0, #24]
   3bdcc:	cmp	ip, r2
   3bdd0:	bhi	3be6c <flatcc_emitter_copy_buffer@@Base+0xa4>
   3bdd4:	ldr	r2, [r0]
   3bdd8:	cmp	r2, #0
   3bddc:	beq	3be6c <flatcc_emitter_copy_buffer@@Base+0xa4>
   3bde0:	mov	r3, r1
   3bde4:	ldr	r1, [r0, #4]
   3bde8:	push	{r4, r5, r6, lr}
   3bdec:	cmp	r2, r1
   3bdf0:	mov	r5, r0
   3bdf4:	beq	3be78 <flatcc_emitter_copy_buffer@@Base+0xb0>
   3bdf8:	ldr	r4, [r0, #12]
   3bdfc:	ldr	r1, [r5, #8]
   3be00:	rsb	r4, r4, #2944	; 0xb80
   3be04:	mov	r2, r4
   3be08:	mov	r0, r3
   3be0c:	bl	13ed4 <memcpy@plt>
   3be10:	ldr	r2, [r5]
   3be14:	ldr	r1, [r5, #4]
   3be18:	add	r3, r0, r4
   3be1c:	ldr	r4, [r2, #2944]	; 0xb80
   3be20:	cmp	r4, r1
   3be24:	beq	3be50 <flatcc_emitter_copy_buffer@@Base+0x88>
   3be28:	mov	r6, #2944	; 0xb80
   3be2c:	mov	r1, r4
   3be30:	mov	r0, r3
   3be34:	mov	r2, r6
   3be38:	bl	13ed4 <memcpy@plt>
   3be3c:	ldr	r4, [r4, #2944]	; 0xb80
   3be40:	ldr	r1, [r5, #4]
   3be44:	cmp	r1, r4
   3be48:	add	r3, r0, #2944	; 0xb80
   3be4c:	bne	3be2c <flatcc_emitter_copy_buffer@@Base+0x64>
   3be50:	ldr	r2, [r5, #20]
   3be54:	mov	r0, r3
   3be58:	rsb	r2, r2, #2944	; 0xb80
   3be5c:	bl	13ed4 <memcpy@plt>
   3be60:	mov	r3, r0
   3be64:	mov	r0, r3
   3be68:	pop	{r4, r5, r6, pc}
   3be6c:	mov	r3, #0
   3be70:	mov	r0, r3
   3be74:	bx	lr
   3be78:	ldr	r1, [r0, #8]
   3be7c:	mov	r2, ip
   3be80:	mov	r0, r3
   3be84:	bl	13ed4 <memcpy@plt>
   3be88:	mov	r3, r0
   3be8c:	b	3be64 <flatcc_emitter_copy_buffer@@Base+0x9c>

0003be90 <cmetrohash64_1@@Base>:
   3be90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3be94:	sub	sp, sp, #92	; 0x5c
   3be98:	add	r5, pc, #616	; 0x268
   3be9c:	ldrd	r4, [r5]
   3bea0:	ldr	ip, [sp, #128]	; 0x80
   3bea4:	ldr	r1, [pc, #624]	; 3c11c <cmetrohash64_1@@Base+0x28c>
   3bea8:	adds	r4, r4, r2
   3beac:	adc	r5, r5, r3
   3beb0:	umlal	r4, r5, r1, ip
   3beb4:	cmp	r3, #0
   3beb8:	cmpeq	r2, #31
   3bebc:	add	r3, r0, r2
   3bec0:	str	r3, [sp, #76]	; 0x4c
   3bec4:	strd	r4, [sp, #56]	; 0x38
   3bec8:	bls	3c280 <cmetrohash64_1@@Base+0x3f0>
   3becc:	ldr	fp, [pc, #580]	; 3c118 <cmetrohash64_1@@Base+0x288>
   3bed0:	mov	lr, r1
   3bed4:	str	fp, [sp, #68]	; 0x44
   3bed8:	mov	sl, r4
   3bedc:	mov	fp, r5
   3bee0:	sub	r3, r3, #32
   3bee4:	str	r3, [sp, #72]	; 0x48
   3bee8:	strd	r4, [sp]
   3beec:	strd	r4, [sp, #8]
   3bef0:	strd	r4, [sp, #48]	; 0x30
   3bef4:	ldrb	r1, [r0, #1]
   3bef8:	ldrb	r6, [r0]
   3befc:	ldrb	r2, [r0, #9]
   3bf00:	ldrb	r4, [r0, #10]
   3bf04:	orr	r6, r6, r1, lsl #8
   3bf08:	ldrb	r1, [r0, #8]
   3bf0c:	ldrb	r3, [r0, #17]
   3bf10:	ldrb	r5, [r0, #5]
   3bf14:	orr	r1, r1, r2, lsl #8
   3bf18:	orr	r1, r1, r4, lsl #16
   3bf1c:	ldrb	r4, [r0, #16]
   3bf20:	ldrb	r2, [r0, #4]
   3bf24:	ldrb	ip, [r0, #2]
   3bf28:	orr	r4, r4, r3, lsl #8
   3bf2c:	ldrb	r3, [r0, #11]
   3bf30:	ldrb	r7, [r0, #3]
   3bf34:	orr	r2, r2, r5, lsl #8
   3bf38:	ldrb	r5, [r0, #6]
   3bf3c:	orr	r3, r1, r3, lsl #24
   3bf40:	orr	r6, r6, ip, lsl #16
   3bf44:	ldrb	ip, [r0, #25]
   3bf48:	ldrb	r8, [r0, #18]
   3bf4c:	str	r3, [sp, #64]	; 0x40
   3bf50:	orr	r2, r2, r5, lsl #16
   3bf54:	ldrb	r3, [r0, #24]
   3bf58:	ldrb	r5, [r0, #7]
   3bf5c:	orr	r6, r6, r7, lsl #24
   3bf60:	ldrb	r1, [r0, #19]
   3bf64:	umull	r6, r7, r6, lr
   3bf68:	ldrb	r9, [r0, #23]
   3bf6c:	orr	r3, r3, ip, lsl #8
   3bf70:	ldrb	ip, [r0, #26]
   3bf74:	orr	r2, r2, r5, lsl #24
   3bf78:	orr	r4, r4, r8, lsl #16
   3bf7c:	orr	r4, r4, r1, lsl #24
   3bf80:	ldrb	r1, [r0, #27]
   3bf84:	mla	r7, lr, r2, r7
   3bf88:	ldrb	r2, [r0, #21]
   3bf8c:	orr	r3, r3, ip, lsl #16
   3bf90:	ldrb	ip, [r0, #20]
   3bf94:	ldrb	r5, [r0, #13]
   3bf98:	orr	r3, r3, r1, lsl #24
   3bf9c:	ldrb	r1, [r0, #12]
   3bfa0:	orr	ip, ip, r2, lsl #8
   3bfa4:	ldrb	r2, [r0, #22]
   3bfa8:	adds	r6, r6, sl
   3bfac:	orr	r1, r1, r5, lsl #8
   3bfb0:	ldrb	r5, [r0, #14]
   3bfb4:	adc	r7, r7, fp
   3bfb8:	ldrb	r8, [r0, #29]
   3bfbc:	lsr	sl, r6, #29
   3bfc0:	orr	ip, ip, r2, lsl #16
   3bfc4:	ldrb	r2, [r0, #28]
   3bfc8:	orr	sl, sl, r7, lsl #3
   3bfcc:	orr	r1, r1, r5, lsl #16
   3bfd0:	str	sl, [sp, #16]
   3bfd4:	ldrb	r5, [r0, #15]
   3bfd8:	orr	ip, ip, r9, lsl #24
   3bfdc:	ldrb	r9, [r0, #30]
   3bfe0:	orr	r2, r2, r8, lsl #8
   3bfe4:	ldrb	r8, [r0, #31]
   3bfe8:	orr	r1, r1, r5, lsl #24
   3bfec:	orr	r2, r2, r9, lsl #16
   3bff0:	lsr	r5, r7, #29
   3bff4:	orr	r5, r5, r6, lsl #3
   3bff8:	orr	r2, r2, r8, lsl #24
   3bffc:	ldr	r6, [sp, #64]	; 0x40
   3c000:	ldr	r8, [sp, #68]	; 0x44
   3c004:	str	r5, [sp, #20]
   3c008:	ldr	r5, [pc, #256]	; 3c110 <cmetrohash64_1@@Base+0x280>
   3c00c:	umull	r6, r7, r6, r8
   3c010:	umull	r4, r5, r4, r5
   3c014:	mla	r7, r8, r1, r7
   3c018:	ldr	r9, [pc, #240]	; 3c110 <cmetrohash64_1@@Base+0x280>
   3c01c:	ldr	r1, [pc, #240]	; 3c114 <cmetrohash64_1@@Base+0x284>
   3c020:	ldrd	sl, [sp, #16]
   3c024:	mla	r5, r9, ip, r5
   3c028:	umull	r8, r9, r3, r1
   3c02c:	mla	r9, r1, r2, r9
   3c030:	ldrd	r2, [sp, #48]	; 0x30
   3c034:	add	r0, r0, #32
   3c038:	adds	r2, r2, r6
   3c03c:	adc	r3, r3, r7
   3c040:	mov	r6, r2
   3c044:	mov	r7, r3
   3c048:	ldrd	r2, [sp, #8]
   3c04c:	adds	r2, r2, r4
   3c050:	adc	r3, r3, r5
   3c054:	mov	r4, r2
   3c058:	mov	r5, r3
   3c05c:	ldrd	r2, [sp]
   3c060:	adds	r2, r2, r8
   3c064:	mov	r8, r2
   3c068:	lsr	r2, r6, #29
   3c06c:	orr	r1, r2, r7, lsl #3
   3c070:	adc	r3, r3, r9
   3c074:	str	r1, [sp, #24]
   3c078:	lsr	r1, r7, #29
   3c07c:	mov	r9, r3
   3c080:	orr	r1, r1, r6, lsl #3
   3c084:	lsr	r3, r4, #29
   3c088:	ldrd	r6, [sp, #8]
   3c08c:	orr	r3, r3, r5, lsl #3
   3c090:	lsr	r2, r8, #29
   3c094:	str	r3, [sp, #32]
   3c098:	lsr	r3, r5, #29
   3c09c:	adds	sl, sl, r6
   3c0a0:	orr	r3, r3, r4, lsl #3
   3c0a4:	str	r1, [sp, #28]
   3c0a8:	orr	r1, r2, r9, lsl #3
   3c0ac:	lsr	r2, r9, #29
   3c0b0:	adc	fp, fp, r7
   3c0b4:	ldrd	r4, [sp]
   3c0b8:	str	r3, [sp, #36]	; 0x24
   3c0bc:	ldrd	r6, [sp, #24]
   3c0c0:	orr	r3, r2, r8, lsl #3
   3c0c4:	str	r3, [sp, #44]	; 0x2c
   3c0c8:	ldrd	r2, [sp, #32]
   3c0cc:	adds	r6, r6, r4
   3c0d0:	adc	r7, r7, r5
   3c0d4:	adds	r2, r2, sl
   3c0d8:	adc	r3, r3, fp
   3c0dc:	str	r1, [sp, #40]	; 0x28
   3c0e0:	strd	r2, [sp, #8]
   3c0e4:	ldrd	r2, [sp, #40]	; 0x28
   3c0e8:	strd	r6, [sp, #48]	; 0x30
   3c0ec:	adds	r2, r2, r6
   3c0f0:	adc	r3, r3, r7
   3c0f4:	strd	r2, [sp]
   3c0f8:	ldr	r3, [sp, #72]	; 0x48
   3c0fc:	cmp	r3, r0
   3c100:	bcs	3bef4 <cmetrohash64_1@@Base+0x64>
   3c104:	b	3c120 <cmetrohash64_1@@Base+0x290>
   3c108:	svcge	0x00065edb
   3c10c:	rscvs	r5, r2, fp, lsr sp
   3c110:	blvc	ff7ec204 <__bss_end__@@Base+0xff782104>
   3c114:	svccs	0x005870a5
   3c118:			; <UNDEFINED> instruction: 0x8648dbdb
   3c11c:	ldmdagt	sl!, {r0, r5, r6, r7, r8, ip, pc}
   3c120:	ldrd	r4, [sp]
   3c124:	mov	r7, fp
   3c128:	ldr	fp, [sp, #68]	; 0x44
   3c12c:	adds	r2, sl, r4
   3c130:	adc	r3, r7, r5
   3c134:	umull	r4, r5, r2, lr
   3c138:	ldrd	r8, [sp, #8]
   3c13c:	mla	r5, lr, r3, r5
   3c140:	ldrd	r2, [sp, #48]	; 0x30
   3c144:	mov	r6, sl
   3c148:	adds	r2, r2, r4
   3c14c:	adc	r3, r3, r5
   3c150:	mov	r4, r2
   3c154:	lsl	r2, r2, #31
   3c158:	orr	r2, r2, r3, lsr #1
   3c15c:	lsl	r1, r3, #31
   3c160:	umull	r2, r3, r2, fp
   3c164:	strd	r6, [sp, #8]
   3c168:	orr	r4, r1, r4, lsr #1
   3c16c:	eor	r8, r8, r2
   3c170:	mla	r3, fp, r4, r3
   3c174:	ldrd	r4, [sp, #48]	; 0x30
   3c178:	eor	r9, r9, r3
   3c17c:	adds	r4, r4, r8
   3c180:	adc	r5, r5, r9
   3c184:	umull	r2, r3, r4, fp
   3c188:	mla	r3, fp, r5, r3
   3c18c:	adds	r4, sl, r2
   3c190:	adc	r5, r7, r3
   3c194:	lsl	r6, r4, #31
   3c198:	lsl	r3, r5, #31
   3c19c:	orr	r2, r3, r4, lsr #1
   3c1a0:	orr	r6, r6, r5, lsr #1
   3c1a4:	ldrd	r4, [sp, #8]
   3c1a8:	umull	r6, r7, r6, lr
   3c1ac:	adds	r4, r4, r8
   3c1b0:	adc	r5, r5, r9
   3c1b4:	mla	r7, lr, r2, r7
   3c1b8:	strd	r4, [sp, #16]
   3c1bc:	ldrd	r2, [sp, #8]
   3c1c0:	ldrd	r4, [sp, #48]	; 0x30
   3c1c4:	ldr	r1, [sp, #20]
   3c1c8:	eor	r2, r2, r4
   3c1cc:	eor	r3, r3, r5
   3c1d0:	strd	r2, [sp, #8]
   3c1d4:	ldrd	r2, [sp]
   3c1d8:	eor	r2, r2, r6
   3c1dc:	adds	r4, r4, r2
   3c1e0:	eor	r3, r3, r7
   3c1e4:	adc	r5, r5, r3
   3c1e8:	mov	r7, r3
   3c1ec:	ldr	r3, [sp, #16]
   3c1f0:	mov	r6, r2
   3c1f4:	strd	r6, [sp]
   3c1f8:	umull	r6, r7, r3, lr
   3c1fc:	umull	r2, r3, r4, fp
   3c200:	mla	r7, lr, r1, r7
   3c204:	mla	r3, fp, r5, r3
   3c208:	ldrd	r4, [sp]
   3c20c:	adds	r4, r4, r6
   3c210:	adc	r5, r5, r7
   3c214:	adds	r2, r2, r8
   3c218:	adc	r3, r3, r9
   3c21c:	mov	r6, r4
   3c220:	lsl	r8, r4, #31
   3c224:	lsl	r4, r2, #31
   3c228:	orr	r8, r8, r5, lsr #1
   3c22c:	orr	r4, r4, r3, lsr #1
   3c230:	mov	r7, r5
   3c234:	umull	r8, r9, r8, fp
   3c238:	umull	r4, r5, r4, lr
   3c23c:	lsl	r3, r3, #31
   3c240:	lsl	r1, r7, #31
   3c244:	orr	r2, r3, r2, lsr #1
   3c248:	orr	r6, r1, r6, lsr #1
   3c24c:	mla	r5, lr, r2, r5
   3c250:	mla	r9, fp, r6, r9
   3c254:	ldrd	r2, [sp, #8]
   3c258:	eor	r2, r2, r8
   3c25c:	eor	r3, r3, r9
   3c260:	mov	r8, r2
   3c264:	mov	r9, r3
   3c268:	ldrd	r2, [sp, #56]	; 0x38
   3c26c:	eor	r8, r8, r4
   3c270:	eor	r9, r9, r5
   3c274:	adds	r2, r2, r8
   3c278:	adc	r3, r3, r9
   3c27c:	strd	r2, [sp, #56]	; 0x38
   3c280:	ldr	r3, [sp, #76]	; 0x4c
   3c284:	sub	r3, r3, r0
   3c288:	cmp	r3, #15
   3c28c:	ble	3c3dc <cmetrohash64_1@@Base+0x54c>
   3c290:	ldrb	r1, [r0, #1]
   3c294:	ldrb	r2, [r0, #2]
   3c298:	ldrb	r6, [r0]
   3c29c:	ldrb	r4, [r0, #9]
   3c2a0:	ldrb	r3, [r0, #8]
   3c2a4:	ldrb	lr, [r0, #10]
   3c2a8:	ldrb	r7, [r0, #3]
   3c2ac:	ldrb	r5, [r0, #11]
   3c2b0:	ldrb	sl, [r0, #5]
   3c2b4:	orr	r6, r6, r1, lsl #8
   3c2b8:	ldrb	ip, [r0, #6]
   3c2bc:	orr	r6, r6, r2, lsl #16
   3c2c0:	orr	r4, r3, r4, lsl #8
   3c2c4:	ldrb	r2, [r0, #4]
   3c2c8:	ldr	r1, [pc, #-436]	; 3c11c <cmetrohash64_1@@Base+0x28c>
   3c2cc:	ldrb	r8, [r0, #13]
   3c2d0:	orr	r4, r4, lr, lsl #16
   3c2d4:	ldrb	r9, [r0, #7]
   3c2d8:	ldrb	r3, [r0, #12]
   3c2dc:	orr	r4, r4, r5, lsl #24
   3c2e0:	orr	r6, r6, r7, lsl #24
   3c2e4:	ldrb	r5, [r0, #14]
   3c2e8:	ldr	lr, [pc, #-472]	; 3c118 <cmetrohash64_1@@Base+0x288>
   3c2ec:	orr	r2, r2, sl, lsl #8
   3c2f0:	umull	r6, r7, r6, r1
   3c2f4:	orr	r2, r2, ip, lsl #16
   3c2f8:	ldrb	ip, [r0, #15]
   3c2fc:	orr	r3, r3, r8, lsl #8
   3c300:	orr	r2, r2, r9, lsl #24
   3c304:	orr	r3, r3, r5, lsl #16
   3c308:	umull	r4, r5, r4, lr
   3c30c:	ldrd	r8, [sp, #56]	; 0x38
   3c310:	mla	r7, r1, r2, r7
   3c314:	orr	r3, r3, ip, lsl #24
   3c318:	adds	r8, r8, r6
   3c31c:	mla	r5, lr, r3, r5
   3c320:	ldrd	r2, [sp, #56]	; 0x38
   3c324:	adc	r9, r9, r7
   3c328:	lsl	sl, r8, #31
   3c32c:	adds	r2, r2, r4
   3c330:	orr	sl, sl, r9, lsr #1
   3c334:	adc	r3, r3, r5
   3c338:	umull	sl, fp, sl, lr
   3c33c:	ldr	ip, [pc, #-564]	; 3c110 <cmetrohash64_1@@Base+0x280>
   3c340:	mov	r4, r2
   3c344:	lsl	r2, r2, #31
   3c348:	mov	r5, r3
   3c34c:	orr	r2, r2, r3, lsr #1
   3c350:	lsl	r3, r9, #31
   3c354:	orr	r6, r3, r8, lsr #1
   3c358:	umull	r2, r3, r2, ip
   3c35c:	mla	fp, lr, r6, fp
   3c360:	lsl	lr, r5, #31
   3c364:	orr	r4, lr, r4, lsr #1
   3c368:	umull	r6, r7, sl, r1
   3c36c:	mla	r3, ip, r4, r3
   3c370:	ldr	ip, [pc, #-612]	; 3c114 <cmetrohash64_1@@Base+0x284>
   3c374:	mla	r7, r1, fp, r7
   3c378:	umull	r4, r5, r2, ip
   3c37c:	mla	r5, ip, r3, r5
   3c380:	lsl	r1, r7, #29
   3c384:	orr	r9, r1, r6, lsr #3
   3c388:	lsl	r1, r6, #29
   3c38c:	orr	r8, r1, r7, lsr #3
   3c390:	lsl	r1, r5, #29
   3c394:	adds	r8, r8, r2
   3c398:	orr	r7, r1, r4, lsr #3
   3c39c:	lsl	r1, r4, #29
   3c3a0:	adc	r9, r9, r3
   3c3a4:	eor	r8, r8, sl
   3c3a8:	orr	r6, r1, r5, lsr #3
   3c3ac:	adds	r8, r8, r6
   3c3b0:	eor	r9, r9, fp
   3c3b4:	adc	r9, r9, r7
   3c3b8:	eor	r8, r8, r2
   3c3bc:	eor	r9, r9, r3
   3c3c0:	ldrd	r2, [sp, #56]	; 0x38
   3c3c4:	add	r0, r0, #16
   3c3c8:	adds	r2, r2, r8
   3c3cc:	adc	r3, r3, r9
   3c3d0:	strd	r2, [sp, #56]	; 0x38
   3c3d4:	ldr	r3, [sp, #76]	; 0x4c
   3c3d8:	sub	r3, r3, r0
   3c3dc:	cmp	r3, #7
   3c3e0:	ble	3c470 <cmetrohash64_1@@Base+0x5e0>
   3c3e4:	ldrb	r1, [r0, #1]
   3c3e8:	ldrb	r3, [r0, #2]
   3c3ec:	ldrb	r4, [r0]
   3c3f0:	ldrb	r2, [r0, #3]
   3c3f4:	ldrb	lr, [r0, #5]
   3c3f8:	orr	r4, r4, r1, lsl #8
   3c3fc:	ldrb	ip, [r0, #6]
   3c400:	ldr	r1, [pc, #-756]	; 3c114 <cmetrohash64_1@@Base+0x284>
   3c404:	orr	r4, r4, r3, lsl #16
   3c408:	ldrb	r3, [r0, #4]
   3c40c:	orr	r4, r4, r2, lsl #24
   3c410:	ldrb	r2, [r0, #7]
   3c414:	umull	r4, r5, r4, r1
   3c418:	ldrd	r6, [sp, #56]	; 0x38
   3c41c:	orr	r3, r3, lr, lsl #8
   3c420:	orr	r3, r3, ip, lsl #16
   3c424:	orr	r3, r3, r2, lsl #24
   3c428:	adds	r6, r6, r4
   3c42c:	mla	r5, r1, r3, r5
   3c430:	mov	r4, r6
   3c434:	adc	r7, r7, r5
   3c438:	ldr	r2, [pc, #-808]	; 3c118 <cmetrohash64_1@@Base+0x288>
   3c43c:	lsl	r6, r6, #31
   3c440:	orr	r6, r6, r7, lsr #1
   3c444:	mov	r5, r7
   3c448:	lsl	r1, r7, #31
   3c44c:	umull	r6, r7, r6, r2
   3c450:	ldr	r3, [sp, #76]	; 0x4c
   3c454:	orr	r1, r1, r4, lsr #1
   3c458:	add	r0, r0, #8
   3c45c:	mla	r7, r2, r1, r7
   3c460:	eor	r8, r6, r4
   3c464:	eor	r9, r7, r5
   3c468:	sub	r3, r3, r0
   3c46c:	strd	r8, [sp, #56]	; 0x38
   3c470:	cmp	r3, #3
   3c474:	ble	3c4b8 <cmetrohash64_1@@Base+0x628>
   3c478:	ldr	ip, [r0], #4
   3c47c:	ldr	r2, [pc, #-880]	; 3c114 <cmetrohash64_1@@Base+0x284>
   3c480:	ldrd	r4, [sp, #56]	; 0x38
   3c484:	ldr	r1, [pc, #-884]	; 3c118 <cmetrohash64_1@@Base+0x288>
   3c488:	ldr	r3, [sp, #76]	; 0x4c
   3c48c:	umlal	r4, r5, r2, ip
   3c490:	sub	r3, r3, r0
   3c494:	lsr	r6, r4, #15
   3c498:	orr	r6, r6, r5, lsl #17
   3c49c:	lsr	r2, r5, #15
   3c4a0:	umull	r6, r7, r6, r1
   3c4a4:	orr	r2, r2, r4, lsl #17
   3c4a8:	eor	r8, r6, r4
   3c4ac:	mla	r7, r1, r2, r7
   3c4b0:	eor	r9, r7, r5
   3c4b4:	strd	r8, [sp, #56]	; 0x38
   3c4b8:	cmp	r3, #1
   3c4bc:	ble	3c500 <cmetrohash64_1@@Base+0x670>
   3c4c0:	ldrh	ip, [r0], #2
   3c4c4:	ldr	r2, [pc, #-952]	; 3c114 <cmetrohash64_1@@Base+0x284>
   3c4c8:	ldrd	r4, [sp, #56]	; 0x38
   3c4cc:	ldr	r1, [pc, #-956]	; 3c118 <cmetrohash64_1@@Base+0x288>
   3c4d0:	ldr	r3, [sp, #76]	; 0x4c
   3c4d4:	umlal	r4, r5, r2, ip
   3c4d8:	sub	r3, r3, r0
   3c4dc:	lsr	r6, r4, #13
   3c4e0:	orr	r6, r6, r5, lsl #19
   3c4e4:	lsr	r2, r5, #13
   3c4e8:	umull	r6, r7, r6, r1
   3c4ec:	orr	r2, r2, r4, lsl #19
   3c4f0:	eor	r8, r6, r4
   3c4f4:	mla	r7, r1, r2, r7
   3c4f8:	eor	r9, r7, r5
   3c4fc:	strd	r8, [sp, #56]	; 0x38
   3c500:	cmp	r3, #0
   3c504:	ble	3c550 <cmetrohash64_1@@Base+0x6c0>
   3c508:	ldrb	r4, [r0]
   3c50c:	ldr	r3, [pc, #-1024]	; 3c114 <cmetrohash64_1@@Base+0x284>
   3c510:	ldr	r0, [pc, #-1024]	; 3c118 <cmetrohash64_1@@Base+0x288>
   3c514:	umull	r4, r5, r4, r3
   3c518:	ldrd	r2, [sp, #56]	; 0x38
   3c51c:	adds	r2, r2, r4
   3c520:	adc	r3, r3, r5
   3c524:	mov	r4, r2
   3c528:	lsr	r2, r2, #25
   3c52c:	orr	r2, r2, r3, lsl #7
   3c530:	mov	r5, r3
   3c534:	lsr	r1, r3, #25
   3c538:	umull	r2, r3, r2, r0
   3c53c:	orr	r1, r1, r4, lsl #7
   3c540:	mla	r3, r0, r1, r3
   3c544:	eor	r0, r2, r4
   3c548:	eor	r1, r3, r5
   3c54c:	strd	r0, [sp, #56]	; 0x38
   3c550:	ldrd	r0, [sp, #56]	; 0x38
   3c554:	ldr	r2, [pc, #-1088]	; 3c11c <cmetrohash64_1@@Base+0x28c>
   3c558:	lsl	r3, r1, #31
   3c55c:	orr	r5, r3, r0, lsr #1
   3c560:	lsl	r3, r0, #31
   3c564:	orr	r4, r3, r1, lsr #1
   3c568:	eor	r0, r0, r4
   3c56c:	eor	r1, r1, r5
   3c570:	mov	r5, r1
   3c574:	umull	r0, r1, r0, r2
   3c578:	mla	r1, r2, r5, r1
   3c57c:	add	r3, sp, #88	; 0x58
   3c580:	lsl	r2, r1, #31
   3c584:	orr	r5, r2, r0, lsr #1
   3c588:	lsl	r2, r0, #31
   3c58c:	orr	r4, r2, r1, lsr #1
   3c590:	eor	r0, r0, r4
   3c594:	eor	r1, r1, r5
   3c598:	strd	r0, [r3, #-8]!
   3c59c:	ldm	r3!, {r0, r1}
   3c5a0:	ldr	r3, [sp, #132]	; 0x84
   3c5a4:	str	r0, [r3]
   3c5a8:	str	r1, [r3, #4]
   3c5ac:	add	sp, sp, #92	; 0x5c
   3c5b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003c5b4 <cmetrohash64_2@@Base>:
   3c5b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c5b8:	sub	sp, sp, #92	; 0x5c
   3c5bc:	add	r5, pc, #620	; 0x26c
   3c5c0:	ldrd	r4, [r5]
   3c5c4:	ldr	ip, [sp, #128]	; 0x80
   3c5c8:	ldr	r1, [pc, #628]	; 3c844 <cmetrohash64_2@@Base+0x290>
   3c5cc:	adds	r4, r4, r2
   3c5d0:	adc	r5, r5, r3
   3c5d4:	umlal	r4, r5, r1, ip
   3c5d8:	cmp	r3, #0
   3c5dc:	cmpeq	r2, #31
   3c5e0:	add	r3, r0, r2
   3c5e4:	str	r3, [sp, #76]	; 0x4c
   3c5e8:	strd	r4, [sp, #56]	; 0x38
   3c5ec:	bls	3c9a8 <cmetrohash64_2@@Base+0x3f4>
   3c5f0:	ldr	fp, [pc, #584]	; 3c840 <cmetrohash64_2@@Base+0x28c>
   3c5f4:	mov	lr, r1
   3c5f8:	str	fp, [sp, #68]	; 0x44
   3c5fc:	mov	sl, r4
   3c600:	mov	fp, r5
   3c604:	sub	r3, r3, #32
   3c608:	str	r3, [sp, #72]	; 0x48
   3c60c:	strd	r4, [sp]
   3c610:	strd	r4, [sp, #8]
   3c614:	strd	r4, [sp, #48]	; 0x30
   3c618:	ldrb	r1, [r0, #1]
   3c61c:	ldrb	r6, [r0]
   3c620:	ldrb	r2, [r0, #9]
   3c624:	ldrb	r4, [r0, #10]
   3c628:	orr	r6, r6, r1, lsl #8
   3c62c:	ldrb	r1, [r0, #8]
   3c630:	ldrb	r3, [r0, #17]
   3c634:	ldrb	r5, [r0, #5]
   3c638:	orr	r1, r1, r2, lsl #8
   3c63c:	orr	r1, r1, r4, lsl #16
   3c640:	ldrb	r4, [r0, #16]
   3c644:	ldrb	r2, [r0, #4]
   3c648:	ldrb	ip, [r0, #2]
   3c64c:	orr	r4, r4, r3, lsl #8
   3c650:	ldrb	r3, [r0, #11]
   3c654:	ldrb	r7, [r0, #3]
   3c658:	orr	r2, r2, r5, lsl #8
   3c65c:	ldrb	r5, [r0, #6]
   3c660:	orr	r3, r1, r3, lsl #24
   3c664:	orr	r6, r6, ip, lsl #16
   3c668:	ldrb	ip, [r0, #25]
   3c66c:	ldrb	r8, [r0, #18]
   3c670:	str	r3, [sp, #64]	; 0x40
   3c674:	orr	r2, r2, r5, lsl #16
   3c678:	ldrb	r3, [r0, #24]
   3c67c:	ldrb	r5, [r0, #7]
   3c680:	orr	r6, r6, r7, lsl #24
   3c684:	ldrb	r1, [r0, #19]
   3c688:	umull	r6, r7, r6, lr
   3c68c:	ldrb	r9, [r0, #23]
   3c690:	orr	r3, r3, ip, lsl #8
   3c694:	ldrb	ip, [r0, #26]
   3c698:	orr	r2, r2, r5, lsl #24
   3c69c:	orr	r4, r4, r8, lsl #16
   3c6a0:	orr	r4, r4, r1, lsl #24
   3c6a4:	ldrb	r1, [r0, #27]
   3c6a8:	mla	r7, lr, r2, r7
   3c6ac:	ldrb	r2, [r0, #21]
   3c6b0:	orr	r3, r3, ip, lsl #16
   3c6b4:	ldrb	ip, [r0, #20]
   3c6b8:	ldrb	r5, [r0, #13]
   3c6bc:	orr	r3, r3, r1, lsl #24
   3c6c0:	ldrb	r1, [r0, #12]
   3c6c4:	orr	ip, ip, r2, lsl #8
   3c6c8:	ldrb	r2, [r0, #22]
   3c6cc:	adds	r6, r6, sl
   3c6d0:	orr	r1, r1, r5, lsl #8
   3c6d4:	ldrb	r5, [r0, #14]
   3c6d8:	adc	r7, r7, fp
   3c6dc:	ldrb	r8, [r0, #29]
   3c6e0:	lsr	sl, r6, #29
   3c6e4:	orr	ip, ip, r2, lsl #16
   3c6e8:	ldrb	r2, [r0, #28]
   3c6ec:	orr	sl, sl, r7, lsl #3
   3c6f0:	orr	r1, r1, r5, lsl #16
   3c6f4:	str	sl, [sp, #16]
   3c6f8:	ldrb	r5, [r0, #15]
   3c6fc:	orr	ip, ip, r9, lsl #24
   3c700:	ldrb	r9, [r0, #30]
   3c704:	orr	r2, r2, r8, lsl #8
   3c708:	ldrb	r8, [r0, #31]
   3c70c:	orr	r1, r1, r5, lsl #24
   3c710:	orr	r2, r2, r9, lsl #16
   3c714:	lsr	r5, r7, #29
   3c718:	orr	r5, r5, r6, lsl #3
   3c71c:	orr	r2, r2, r8, lsl #24
   3c720:	ldr	r6, [sp, #64]	; 0x40
   3c724:	ldr	r8, [sp, #68]	; 0x44
   3c728:	str	r5, [sp, #20]
   3c72c:	ldr	r5, [pc, #260]	; 3c838 <cmetrohash64_2@@Base+0x284>
   3c730:	umull	r6, r7, r6, r8
   3c734:	umull	r4, r5, r4, r5
   3c738:	mla	r7, r8, r1, r7
   3c73c:	ldr	r9, [pc, #244]	; 3c838 <cmetrohash64_2@@Base+0x284>
   3c740:	ldr	r1, [pc, #244]	; 3c83c <cmetrohash64_2@@Base+0x288>
   3c744:	ldrd	sl, [sp, #16]
   3c748:	mla	r5, r9, ip, r5
   3c74c:	umull	r8, r9, r3, r1
   3c750:	mla	r9, r1, r2, r9
   3c754:	ldrd	r2, [sp, #48]	; 0x30
   3c758:	add	r0, r0, #32
   3c75c:	adds	r2, r2, r6
   3c760:	adc	r3, r3, r7
   3c764:	mov	r6, r2
   3c768:	mov	r7, r3
   3c76c:	ldrd	r2, [sp, #8]
   3c770:	adds	r2, r2, r4
   3c774:	adc	r3, r3, r5
   3c778:	mov	r4, r2
   3c77c:	mov	r5, r3
   3c780:	ldrd	r2, [sp]
   3c784:	adds	r2, r2, r8
   3c788:	mov	r8, r2
   3c78c:	lsr	r2, r6, #29
   3c790:	orr	r1, r2, r7, lsl #3
   3c794:	adc	r3, r3, r9
   3c798:	str	r1, [sp, #24]
   3c79c:	lsr	r1, r7, #29
   3c7a0:	mov	r9, r3
   3c7a4:	orr	r1, r1, r6, lsl #3
   3c7a8:	lsr	r3, r4, #29
   3c7ac:	ldrd	r6, [sp, #8]
   3c7b0:	orr	r3, r3, r5, lsl #3
   3c7b4:	lsr	r2, r8, #29
   3c7b8:	str	r3, [sp, #32]
   3c7bc:	lsr	r3, r5, #29
   3c7c0:	adds	sl, sl, r6
   3c7c4:	orr	r3, r3, r4, lsl #3
   3c7c8:	str	r1, [sp, #28]
   3c7cc:	orr	r1, r2, r9, lsl #3
   3c7d0:	lsr	r2, r9, #29
   3c7d4:	adc	fp, fp, r7
   3c7d8:	ldrd	r4, [sp]
   3c7dc:	str	r3, [sp, #36]	; 0x24
   3c7e0:	ldrd	r6, [sp, #24]
   3c7e4:	orr	r3, r2, r8, lsl #3
   3c7e8:	str	r3, [sp, #44]	; 0x2c
   3c7ec:	ldrd	r2, [sp, #32]
   3c7f0:	adds	r6, r6, r4
   3c7f4:	adc	r7, r7, r5
   3c7f8:	adds	r2, r2, sl
   3c7fc:	adc	r3, r3, fp
   3c800:	str	r1, [sp, #40]	; 0x28
   3c804:	strd	r2, [sp, #8]
   3c808:	ldrd	r2, [sp, #40]	; 0x28
   3c80c:	strd	r6, [sp, #48]	; 0x30
   3c810:	adds	r2, r2, r6
   3c814:	adc	r3, r3, r7
   3c818:	strd	r2, [sp]
   3c81c:	ldr	r3, [sp, #72]	; 0x48
   3c820:	cmp	r3, r0
   3c824:	bcs	3c618 <cmetrohash64_2@@Base+0x64>
   3c828:	b	3c848 <cmetrohash64_2@@Base+0x294>
   3c82c:	nop			; (mov r0, r0)
   3c830:	blle	ff96f70c <__bss_end__@@Base+0xff90560c>
   3c834:	adcspl	r3, ip, #-134217725	; 0xf8000003
   3c838:	addsvs	r2, r9, #772	; 0x304
   3c83c:	adcscc	r5, ip, r9, lsr #22
   3c840:	adcge	r0, sl, #-335544320	; 0xec000000
   3c844:			; <UNDEFINED> instruction: 0xd6d018f5
   3c848:	ldrd	r4, [sp]
   3c84c:	mov	r7, fp
   3c850:	ldr	fp, [sp, #68]	; 0x44
   3c854:	adds	r2, sl, r4
   3c858:	adc	r3, r7, r5
   3c85c:	umull	r4, r5, r2, lr
   3c860:	ldrd	r8, [sp, #8]
   3c864:	mla	r5, lr, r3, r5
   3c868:	ldrd	r2, [sp, #48]	; 0x30
   3c86c:	mov	r6, sl
   3c870:	adds	r2, r2, r4
   3c874:	adc	r3, r3, r5
   3c878:	mov	r4, r2
   3c87c:	lsr	r2, r2, #30
   3c880:	orr	r2, r2, r3, lsl #2
   3c884:	lsr	r1, r3, #30
   3c888:	umull	r2, r3, r2, fp
   3c88c:	strd	r6, [sp, #8]
   3c890:	orr	r4, r1, r4, lsl #2
   3c894:	eor	r8, r8, r2
   3c898:	mla	r3, fp, r4, r3
   3c89c:	ldrd	r4, [sp, #48]	; 0x30
   3c8a0:	eor	r9, r9, r3
   3c8a4:	adds	r4, r4, r8
   3c8a8:	adc	r5, r5, r9
   3c8ac:	umull	r2, r3, r4, fp
   3c8b0:	mla	r3, fp, r5, r3
   3c8b4:	adds	r4, sl, r2
   3c8b8:	adc	r5, r7, r3
   3c8bc:	lsr	r6, r4, #30
   3c8c0:	lsr	r3, r5, #30
   3c8c4:	orr	r2, r3, r4, lsl #2
   3c8c8:	orr	r6, r6, r5, lsl #2
   3c8cc:	ldrd	r4, [sp, #8]
   3c8d0:	umull	r6, r7, r6, lr
   3c8d4:	adds	r4, r4, r8
   3c8d8:	adc	r5, r5, r9
   3c8dc:	mla	r7, lr, r2, r7
   3c8e0:	strd	r4, [sp, #16]
   3c8e4:	ldrd	r2, [sp, #8]
   3c8e8:	ldrd	r4, [sp, #48]	; 0x30
   3c8ec:	ldr	r1, [sp, #20]
   3c8f0:	eor	r2, r2, r4
   3c8f4:	eor	r3, r3, r5
   3c8f8:	strd	r2, [sp, #8]
   3c8fc:	ldrd	r2, [sp]
   3c900:	eor	r2, r2, r6
   3c904:	adds	r4, r4, r2
   3c908:	eor	r3, r3, r7
   3c90c:	adc	r5, r5, r3
   3c910:	mov	r7, r3
   3c914:	ldr	r3, [sp, #16]
   3c918:	mov	r6, r2
   3c91c:	strd	r6, [sp]
   3c920:	umull	r6, r7, r3, lr
   3c924:	umull	r2, r3, r4, fp
   3c928:	mla	r7, lr, r1, r7
   3c92c:	mla	r3, fp, r5, r3
   3c930:	ldrd	r4, [sp]
   3c934:	adds	r4, r4, r6
   3c938:	adc	r5, r5, r7
   3c93c:	adds	r2, r2, r8
   3c940:	adc	r3, r3, r9
   3c944:	mov	r6, r4
   3c948:	lsr	r8, r4, #30
   3c94c:	lsr	r4, r2, #30
   3c950:	orr	r8, r8, r5, lsl #2
   3c954:	orr	r4, r4, r3, lsl #2
   3c958:	mov	r7, r5
   3c95c:	umull	r8, r9, r8, fp
   3c960:	umull	r4, r5, r4, lr
   3c964:	lsr	r3, r3, #30
   3c968:	lsr	r1, r7, #30
   3c96c:	orr	r2, r3, r2, lsl #2
   3c970:	orr	r6, r1, r6, lsl #2
   3c974:	mla	r5, lr, r2, r5
   3c978:	mla	r9, fp, r6, r9
   3c97c:	ldrd	r2, [sp, #8]
   3c980:	eor	r2, r2, r8
   3c984:	eor	r3, r3, r9
   3c988:	mov	r8, r2
   3c98c:	mov	r9, r3
   3c990:	ldrd	r2, [sp, #56]	; 0x38
   3c994:	eor	r8, r8, r4
   3c998:	eor	r9, r9, r5
   3c99c:	adds	r2, r2, r8
   3c9a0:	adc	r3, r3, r9
   3c9a4:	strd	r2, [sp, #56]	; 0x38
   3c9a8:	ldr	r3, [sp, #76]	; 0x4c
   3c9ac:	sub	r3, r3, r0
   3c9b0:	cmp	r3, #15
   3c9b4:	ble	3caf8 <cmetrohash64_2@@Base+0x544>
   3c9b8:	ldrb	r2, [r0, #1]
   3c9bc:	ldrb	r1, [r0, #2]
   3c9c0:	ldrb	r6, [r0]
   3c9c4:	ldrb	r7, [r0, #3]
   3c9c8:	ldrb	r5, [r0, #9]
   3c9cc:	ldrb	r3, [r0, #10]
   3c9d0:	ldrb	r4, [r0, #8]
   3c9d4:	ldrb	lr, [r0, #11]
   3c9d8:	orr	r6, r6, r2, lsl #8
   3c9dc:	ldrb	r2, [r0, #5]
   3c9e0:	ldr	ip, [pc, #-432]	; 3c838 <cmetrohash64_2@@Base+0x284>
   3c9e4:	ldrb	sl, [r0, #6]
   3c9e8:	orr	r6, r6, r1, lsl #16
   3c9ec:	ldrb	r1, [r0, #4]
   3c9f0:	ldrb	r9, [r0, #7]
   3c9f4:	orr	r4, r4, r5, lsl #8
   3c9f8:	orr	r6, r6, r7, lsl #24
   3c9fc:	ldrb	r5, [r0, #13]
   3ca00:	ldrb	r8, [r0, #14]
   3ca04:	orr	r4, r4, r3, lsl #16
   3ca08:	ldrb	r3, [r0, #12]
   3ca0c:	umull	r6, r7, r6, ip
   3ca10:	orr	r1, r1, r2, lsl #8
   3ca14:	orr	r4, r4, lr, lsl #24
   3ca18:	ldrb	lr, [r0, #15]
   3ca1c:	orr	r2, r1, sl, lsl #16
   3ca20:	orr	r2, r2, r9, lsl #24
   3ca24:	orr	r3, r3, r5, lsl #8
   3ca28:	umull	r4, r5, r4, ip
   3ca2c:	mla	r7, ip, r2, r7
   3ca30:	orr	r3, r3, r8, lsl #16
   3ca34:	ldrd	r8, [sp, #56]	; 0x38
   3ca38:	orr	lr, r3, lr, lsl #24
   3ca3c:	ldr	r1, [pc, #-520]	; 3c83c <cmetrohash64_2@@Base+0x288>
   3ca40:	adds	r2, r8, r6
   3ca44:	mla	r5, ip, lr, r5
   3ca48:	adc	r3, r9, r7
   3ca4c:	lsr	sl, r2, #29
   3ca50:	adds	r8, r8, r4
   3ca54:	adc	r9, r9, r5
   3ca58:	orr	sl, sl, r3, lsl #3
   3ca5c:	mov	r6, r2
   3ca60:	lsr	r2, r8, #29
   3ca64:	umull	sl, fp, sl, r1
   3ca68:	ldr	ip, [pc, #-556]	; 3c844 <cmetrohash64_2@@Base+0x290>
   3ca6c:	orr	r2, r2, r9, lsl #3
   3ca70:	lsr	r3, r3, #29
   3ca74:	orr	r6, r3, r6, lsl #3
   3ca78:	umull	r2, r3, r2, r1
   3ca7c:	mla	fp, r1, r6, fp
   3ca80:	lsr	lr, r9, #29
   3ca84:	umull	r6, r7, sl, ip
   3ca88:	orr	r4, lr, r8, lsl #3
   3ca8c:	mla	r7, ip, fp, r7
   3ca90:	mla	r3, r1, r4, r3
   3ca94:	umull	r4, r5, r2, r1
   3ca98:	mla	r5, r1, r3, r5
   3ca9c:	lsl	r1, r7, #30
   3caa0:	orr	r9, r1, r6, lsr #2
   3caa4:	lsl	r1, r6, #30
   3caa8:	orr	r8, r1, r7, lsr #2
   3caac:	lsl	r1, r5, #30
   3cab0:	adds	r8, r8, r2
   3cab4:	orr	r7, r1, r4, lsr #2
   3cab8:	lsl	r1, r4, #30
   3cabc:	adc	r9, r9, r3
   3cac0:	eor	r8, r8, sl
   3cac4:	orr	r6, r1, r5, lsr #2
   3cac8:	adds	r8, r8, r6
   3cacc:	eor	r9, r9, fp
   3cad0:	adc	r9, r9, r7
   3cad4:	eor	r8, r8, r2
   3cad8:	eor	r9, r9, r3
   3cadc:	ldrd	r2, [sp, #56]	; 0x38
   3cae0:	add	r0, r0, #16
   3cae4:	adds	r2, r2, r8
   3cae8:	adc	r3, r3, r9
   3caec:	strd	r2, [sp, #56]	; 0x38
   3caf0:	ldr	r3, [sp, #76]	; 0x4c
   3caf4:	sub	r3, r3, r0
   3caf8:	cmp	r3, #7
   3cafc:	ble	3cb8c <cmetrohash64_2@@Base+0x5d8>
   3cb00:	ldrb	r1, [r0, #1]
   3cb04:	ldrb	r3, [r0, #2]
   3cb08:	ldrb	r4, [r0]
   3cb0c:	ldrb	r2, [r0, #3]
   3cb10:	ldrb	lr, [r0, #5]
   3cb14:	orr	r4, r4, r1, lsl #8
   3cb18:	ldrb	ip, [r0, #6]
   3cb1c:	ldr	r1, [pc, #-744]	; 3c83c <cmetrohash64_2@@Base+0x288>
   3cb20:	orr	r4, r4, r3, lsl #16
   3cb24:	ldrb	r3, [r0, #4]
   3cb28:	orr	r4, r4, r2, lsl #24
   3cb2c:	ldrb	r2, [r0, #7]
   3cb30:	umull	r4, r5, r4, r1
   3cb34:	ldrd	r6, [sp, #56]	; 0x38
   3cb38:	orr	r3, r3, lr, lsl #8
   3cb3c:	orr	r3, r3, ip, lsl #16
   3cb40:	orr	r3, r3, r2, lsl #24
   3cb44:	adds	r6, r6, r4
   3cb48:	mla	r5, r1, r3, r5
   3cb4c:	mov	r4, r6
   3cb50:	adc	r7, r7, r5
   3cb54:	ldr	r2, [pc, #-796]	; 3c840 <cmetrohash64_2@@Base+0x28c>
   3cb58:	lsl	r6, r6, #28
   3cb5c:	orr	r6, r6, r7, lsr #4
   3cb60:	mov	r5, r7
   3cb64:	lsl	r1, r7, #28
   3cb68:	umull	r6, r7, r6, r2
   3cb6c:	ldr	r3, [sp, #76]	; 0x4c
   3cb70:	orr	r1, r1, r4, lsr #4
   3cb74:	add	r0, r0, #8
   3cb78:	mla	r7, r2, r1, r7
   3cb7c:	eor	r8, r6, r4
   3cb80:	eor	r9, r7, r5
   3cb84:	sub	r3, r3, r0
   3cb88:	strd	r8, [sp, #56]	; 0x38
   3cb8c:	cmp	r3, #3
   3cb90:	ble	3cbd4 <cmetrohash64_2@@Base+0x620>
   3cb94:	ldr	ip, [r0], #4
   3cb98:	ldr	r2, [pc, #-868]	; 3c83c <cmetrohash64_2@@Base+0x288>
   3cb9c:	ldrd	r4, [sp, #56]	; 0x38
   3cba0:	ldr	r1, [pc, #-872]	; 3c840 <cmetrohash64_2@@Base+0x28c>
   3cba4:	ldr	r3, [sp, #76]	; 0x4c
   3cba8:	umlal	r4, r5, r2, ip
   3cbac:	sub	r3, r3, r0
   3cbb0:	lsr	r6, r4, #15
   3cbb4:	orr	r6, r6, r5, lsl #17
   3cbb8:	lsr	r2, r5, #15
   3cbbc:	umull	r6, r7, r6, r1
   3cbc0:	orr	r2, r2, r4, lsl #17
   3cbc4:	eor	r8, r6, r4
   3cbc8:	mla	r7, r1, r2, r7
   3cbcc:	eor	r9, r7, r5
   3cbd0:	strd	r8, [sp, #56]	; 0x38
   3cbd4:	cmp	r3, #1
   3cbd8:	ble	3cc1c <cmetrohash64_2@@Base+0x668>
   3cbdc:	ldrh	ip, [r0], #2
   3cbe0:	ldr	r2, [pc, #-940]	; 3c83c <cmetrohash64_2@@Base+0x288>
   3cbe4:	ldrd	r4, [sp, #56]	; 0x38
   3cbe8:	ldr	r1, [pc, #-944]	; 3c840 <cmetrohash64_2@@Base+0x28c>
   3cbec:	ldr	r3, [sp, #76]	; 0x4c
   3cbf0:	umlal	r4, r5, r2, ip
   3cbf4:	sub	r3, r3, r0
   3cbf8:	lsr	r6, r4, #15
   3cbfc:	orr	r6, r6, r5, lsl #17
   3cc00:	lsr	r2, r5, #15
   3cc04:	umull	r6, r7, r6, r1
   3cc08:	orr	r2, r2, r4, lsl #17
   3cc0c:	eor	r8, r6, r4
   3cc10:	mla	r7, r1, r2, r7
   3cc14:	eor	r9, r7, r5
   3cc18:	strd	r8, [sp, #56]	; 0x38
   3cc1c:	cmp	r3, #0
   3cc20:	ble	3cc6c <cmetrohash64_2@@Base+0x6b8>
   3cc24:	ldrb	r4, [r0]
   3cc28:	ldr	r3, [pc, #-1012]	; 3c83c <cmetrohash64_2@@Base+0x288>
   3cc2c:	ldr	r0, [pc, #-1012]	; 3c840 <cmetrohash64_2@@Base+0x28c>
   3cc30:	umull	r4, r5, r4, r3
   3cc34:	ldrd	r2, [sp, #56]	; 0x38
   3cc38:	adds	r2, r2, r4
   3cc3c:	adc	r3, r3, r5
   3cc40:	mov	r4, r2
   3cc44:	lsr	r2, r2, #23
   3cc48:	orr	r2, r2, r3, lsl #9
   3cc4c:	mov	r5, r3
   3cc50:	lsr	r1, r3, #23
   3cc54:	umull	r2, r3, r2, r0
   3cc58:	orr	r1, r1, r4, lsl #9
   3cc5c:	mla	r3, r0, r1, r3
   3cc60:	eor	r0, r2, r4
   3cc64:	eor	r1, r3, r5
   3cc68:	strd	r0, [sp, #56]	; 0x38
   3cc6c:	ldrd	r0, [sp, #56]	; 0x38
   3cc70:	ldr	r2, [pc, #-1076]	; 3c844 <cmetrohash64_2@@Base+0x290>
   3cc74:	lsr	r3, r0, #28
   3cc78:	orr	r4, r3, r1, lsl #4
   3cc7c:	lsr	r3, r1, #28
   3cc80:	orr	r5, r3, r0, lsl #4
   3cc84:	eor	r0, r0, r4
   3cc88:	eor	r1, r1, r5
   3cc8c:	mov	r5, r1
   3cc90:	umull	r0, r1, r0, r2
   3cc94:	mla	r1, r2, r5, r1
   3cc98:	lsr	r2, r0, #29
   3cc9c:	add	r3, sp, #88	; 0x58
   3cca0:	orr	r4, r2, r1, lsl #3
   3cca4:	lsr	r2, r1, #29
   3cca8:	orr	r5, r2, r0, lsl #3
   3ccac:	eor	r1, r1, r5
   3ccb0:	eor	r0, r0, r4
   3ccb4:	strd	r0, [r3, #-8]!
   3ccb8:	ldm	r3!, {r0, r1}
   3ccbc:	ldr	r3, [sp, #132]	; 0x84
   3ccc0:	str	r0, [r3]
   3ccc4:	str	r1, [r3, #4]
   3ccc8:	add	sp, sp, #92	; 0x5c
   3cccc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3ccd0:	push	{r4, lr}
   3ccd4:	mov	r4, r0
   3ccd8:	ldr	r0, [r0]
   3ccdc:	cmp	r0, #0
   3cce0:	beq	3cce8 <cmetrohash64_2@@Base+0x734>
   3cce4:	bl	13ec8 <free@plt>
   3cce8:	mov	r3, #0
   3ccec:	str	r3, [r4]
   3ccf0:	str	r3, [r4, #4]
   3ccf4:	str	r3, [r4, #8]
   3ccf8:	str	r3, [r4, #12]
   3ccfc:	pop	{r4, pc}
   3cd00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3cd04:	sub	sp, sp, #36	; 0x24
   3cd08:	ldr	r4, [pc, #584]	; 3cf58 <cmetrohash64_2@@Base+0x9a4>
   3cd0c:	cmp	r3, #0
   3cd10:	str	r3, [sp, #12]
   3cd14:	str	r1, [sp, #16]
   3cd18:	add	r4, pc, r4
   3cd1c:	beq	3cf38 <cmetrohash64_2@@Base+0x984>
   3cd20:	ldr	r3, [sp, #12]
   3cd24:	cmp	r3, #2
   3cd28:	beq	3cef0 <cmetrohash64_2@@Base+0x93c>
   3cd2c:	ldr	r3, [sp, #12]
   3cd30:	cmp	r3, #1
   3cd34:	beq	3ced0 <cmetrohash64_2@@Base+0x91c>
   3cd38:	ldr	r8, [r0, #12]
   3cd3c:	mov	r3, #179	; 0xb3
   3cd40:	ldr	r1, [r0, #8]
   3cd44:	mul	r3, r3, r8
   3cd48:	mov	r9, r2
   3cd4c:	mov	sl, r0
   3cd50:	cmp	r1, r3, lsr #8
   3cd54:	bcc	3cd6c <cmetrohash64_2@@Base+0x7b8>
   3cd58:	lsl	r1, r1, #1
   3cd5c:	bl	3cf90 <cmetrohash64_2@@Base+0x9dc>
   3cd60:	cmp	r0, #0
   3cd64:	bne	3cf10 <cmetrohash64_2@@Base+0x95c>
   3cd68:	ldr	r8, [sl, #12]
   3cd6c:	ldr	r3, [pc, #488]	; 3cf5c <cmetrohash64_2@@Base+0x9a8>
   3cd70:	mov	r2, r9
   3cd74:	str	r3, [sp]
   3cd78:	add	r3, sp, #24
   3cd7c:	str	r3, [sp, #4]
   3cd80:	ldr	r0, [sp, #16]
   3cd84:	mov	r3, #0
   3cd88:	ldr	r7, [sl]
   3cd8c:	bl	3be90 <cmetrohash64_1@@Base>
   3cd90:	ldr	r3, [sp, #72]	; 0x48
   3cd94:	ldr	r6, [sp, #24]
   3cd98:	sub	r3, r3, #2
   3cd9c:	sub	r8, r8, #1
   3cda0:	cmp	r3, #1
   3cda4:	and	r4, r8, r6
   3cda8:	bls	3ce7c <cmetrohash64_2@@Base+0x8c8>
   3cdac:	ldr	r5, [r7, r4, lsl #2]
   3cdb0:	add	r4, r7, r4, lsl #2
   3cdb4:	cmp	r5, #0
   3cdb8:	moveq	fp, r4
   3cdbc:	beq	3ce58 <cmetrohash64_2@@Base+0x8a4>
   3cdc0:	str	sl, [sp, #20]
   3cdc4:	add	r6, r6, #1
   3cdc8:	mov	sl, r5
   3cdcc:	mov	fp, #0
   3cdd0:	ldr	r5, [sp, #16]
   3cdd4:	b	3cdf0 <cmetrohash64_2@@Base+0x83c>
   3cdd8:	and	r4, r8, r6
   3cddc:	add	r6, r6, #1
   3cde0:	ldr	sl, [r7, r4, lsl #2]
   3cde4:	add	r4, r7, r4, lsl #2
   3cde8:	cmp	sl, #0
   3cdec:	beq	3ce4c <cmetrohash64_2@@Base+0x898>
   3cdf0:	cmp	sl, #2
   3cdf4:	beq	3ce40 <cmetrohash64_2@@Base+0x88c>
   3cdf8:	ldr	r2, [sl, #12]
   3cdfc:	cmp	r9, r2
   3ce00:	bne	3cdd8 <cmetrohash64_2@@Base+0x824>
   3ce04:	mov	r2, r9
   3ce08:	ldr	r1, [sl, #8]
   3ce0c:	mov	r0, r5
   3ce10:	bl	13eec <memcmp@plt>
   3ce14:	cmp	r0, #0
   3ce18:	bne	3cdd8 <cmetrohash64_2@@Base+0x824>
   3ce1c:	ldr	r3, [sp, #72]	; 0x48
   3ce20:	mov	r5, sl
   3ce24:	cmp	r3, #0
   3ce28:	bne	3ce70 <cmetrohash64_2@@Base+0x8bc>
   3ce2c:	ldr	r3, [sp, #12]
   3ce30:	mov	r0, r5
   3ce34:	str	r3, [r4]
   3ce38:	add	sp, sp, #36	; 0x24
   3ce3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3ce40:	cmp	fp, #0
   3ce44:	moveq	fp, r4
   3ce48:	b	3cdd8 <cmetrohash64_2@@Base+0x824>
   3ce4c:	cmp	fp, #0
   3ce50:	ldr	sl, [sp, #20]
   3ce54:	moveq	fp, r4
   3ce58:	ldr	r2, [sl, #8]
   3ce5c:	ldr	r3, [sp, #12]
   3ce60:	mov	r5, #0
   3ce64:	add	r2, r2, #1
   3ce68:	str	r2, [sl, #8]
   3ce6c:	str	r3, [fp]
   3ce70:	mov	r0, r5
   3ce74:	add	sp, sp, #36	; 0x24
   3ce78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3ce7c:	ldr	r2, [r7, r4, lsl #2]
   3ce80:	ldr	r3, [sl, #8]
   3ce84:	cmp	r2, #0
   3ce88:	cmpne	r2, #2
   3ce8c:	add	r3, r3, #1
   3ce90:	str	r3, [sl, #8]
   3ce94:	add	r4, r7, r4, lsl #2
   3ce98:	beq	3cec0 <cmetrohash64_2@@Base+0x90c>
   3ce9c:	add	r6, r6, #1
   3cea0:	and	r3, r8, r6
   3cea4:	add	r6, r6, #1
   3cea8:	ldr	r2, [r7, r3, lsl #2]
   3ceac:	add	r3, r7, r3, lsl #2
   3ceb0:	cmp	r2, #0
   3ceb4:	cmpne	r2, #2
   3ceb8:	bne	3cea0 <cmetrohash64_2@@Base+0x8ec>
   3cebc:	mov	r4, r3
   3cec0:	ldr	r3, [sp, #12]
   3cec4:	mov	r5, #0
   3cec8:	str	r3, [r4]
   3cecc:	b	3ce70 <cmetrohash64_2@@Base+0x8bc>
   3ced0:	ldr	r3, [pc, #136]	; 3cf60 <cmetrohash64_2@@Base+0x9ac>
   3ced4:	ldr	r1, [pc, #136]	; 3cf64 <cmetrohash64_2@@Base+0x9b0>
   3ced8:	ldr	r0, [pc, #136]	; 3cf68 <cmetrohash64_2@@Base+0x9b4>
   3cedc:	add	r3, pc, r3
   3cee0:	mov	r2, #116	; 0x74
   3cee4:	add	r1, pc, r1
   3cee8:	add	r0, pc, r0
   3ceec:	bl	14030 <__assert_fail@plt>
   3cef0:	ldr	r3, [pc, #116]	; 3cf6c <cmetrohash64_2@@Base+0x9b8>
   3cef4:	ldr	r1, [pc, #116]	; 3cf70 <cmetrohash64_2@@Base+0x9bc>
   3cef8:	ldr	r0, [pc, #116]	; 3cf74 <cmetrohash64_2@@Base+0x9c0>
   3cefc:	add	r3, pc, r3
   3cf00:	mov	r2, #115	; 0x73
   3cf04:	add	r1, pc, r1
   3cf08:	add	r0, pc, r0
   3cf0c:	bl	14030 <__assert_fail@plt>
   3cf10:	ldr	r3, [pc, #96]	; 3cf78 <cmetrohash64_2@@Base+0x9c4>
   3cf14:	ldr	r2, [pc, #96]	; 3cf7c <cmetrohash64_2@@Base+0x9c8>
   3cf18:	ldr	r1, [pc, #96]	; 3cf80 <cmetrohash64_2@@Base+0x9cc>
   3cf1c:	ldr	r3, [r4, r3]
   3cf20:	add	r2, pc, r2
   3cf24:	add	r1, pc, r1
   3cf28:	ldr	r0, [r3]
   3cf2c:	bl	13f7c <fprintf@plt>
   3cf30:	mov	r0, #1
   3cf34:	bl	13f64 <exit@plt>
   3cf38:	ldr	r3, [pc, #68]	; 3cf84 <cmetrohash64_2@@Base+0x9d0>
   3cf3c:	ldr	r1, [pc, #68]	; 3cf88 <cmetrohash64_2@@Base+0x9d4>
   3cf40:	ldr	r0, [pc, #68]	; 3cf8c <cmetrohash64_2@@Base+0x9d8>
   3cf44:	add	r3, pc, r3
   3cf48:	mov	r2, #114	; 0x72
   3cf4c:	add	r1, pc, r1
   3cf50:	add	r0, pc, r0
   3cf54:	bl	14030 <__assert_fail@plt>
   3cf58:	andeq	sp, r2, r0, ror #5
   3cf5c:	svccs	0x00693b52
   3cf60:	andeq	ip, r1, r8, lsr #22
   3cf64:	andeq	r9, r1, r4, asr #9
   3cf68:	andeq	r9, r1, r8, asr r5
   3cf6c:	andeq	ip, r1, r8, lsl #22
   3cf70:	andeq	r9, r1, r4, lsr #9
   3cf74:	andeq	r9, r1, r0, lsr #10
   3cf78:	muleq	r0, ip, r0
   3cf7c:	andeq	r9, r1, r8, lsr r5
   3cf80:	andeq	r9, r1, r8, ror #10
   3cf84:	andeq	ip, r1, r0, asr #21
   3cf88:	andeq	r9, r1, ip, asr r4
   3cf8c:	andeq	r9, r1, r0, asr #9
   3cf90:	ldr	r3, [r0, #8]
   3cf94:	push	{r4, r5, r6, r7, r8, lr}
   3cf98:	cmp	r1, r3
   3cf9c:	movcc	r1, r3
   3cfa0:	cmp	r1, #2
   3cfa4:	sub	sp, sp, #24
   3cfa8:	mov	r6, r0
   3cfac:	ldr	r7, [r0]
   3cfb0:	mov	r5, #4
   3cfb4:	bls	3cfcc <cmetrohash64_2@@Base+0xa18>
   3cfb8:	mov	r2, #179	; 0xb3
   3cfbc:	lsl	r5, r5, #1
   3cfc0:	mul	r3, r2, r5
   3cfc4:	cmp	r1, r3, lsr #8
   3cfc8:	bhi	3cfbc <cmetrohash64_2@@Base+0xa08>
   3cfcc:	mov	r1, #4
   3cfd0:	mov	r0, r5
   3cfd4:	bl	13e98 <calloc@plt>
   3cfd8:	cmp	r0, #0
   3cfdc:	str	r0, [sp, #8]
   3cfe0:	beq	3d084 <cmetrohash64_2@@Base+0xad0>
   3cfe4:	ldr	r2, [r6, #12]
   3cfe8:	mov	r4, #0
   3cfec:	cmp	r2, r4
   3cff0:	str	r5, [sp, #20]
   3cff4:	str	r4, [sp, #12]
   3cff8:	subne	r5, r7, #4
   3cffc:	str	r4, [sp, #16]
   3d000:	addne	r7, sp, #8
   3d004:	movne	r8, #3
   3d008:	bne	3d018 <cmetrohash64_2@@Base+0xa64>
   3d00c:	b	3d07c <cmetrohash64_2@@Base+0xac8>
   3d010:	cmp	r2, r4
   3d014:	bls	3d04c <cmetrohash64_2@@Base+0xa98>
   3d018:	ldr	r3, [r5, #4]!
   3d01c:	add	r4, r4, #1
   3d020:	cmp	r3, #0
   3d024:	cmpne	r3, #2
   3d028:	beq	3d010 <cmetrohash64_2@@Base+0xa5c>
   3d02c:	ldr	r2, [r3, #12]
   3d030:	ldr	r1, [r3, #8]
   3d034:	mov	r0, r7
   3d038:	str	r8, [sp]
   3d03c:	bl	3cd00 <cmetrohash64_2@@Base+0x74c>
   3d040:	ldr	r2, [r6, #12]
   3d044:	cmp	r2, r4
   3d048:	bhi	3d018 <cmetrohash64_2@@Base+0xa64>
   3d04c:	mov	r0, r6
   3d050:	bl	3ccd0 <cmetrohash64_2@@Base+0x71c>
   3d054:	mov	ip, r7
   3d058:	mov	lr, #0
   3d05c:	ldm	ip!, {r0, r1, r2, r3}
   3d060:	str	r0, [r6]
   3d064:	str	r1, [r6, #4]
   3d068:	str	r2, [r6, #8]
   3d06c:	str	r3, [r6, #12]
   3d070:	mov	r0, lr
   3d074:	add	sp, sp, #24
   3d078:	pop	{r4, r5, r6, r7, r8, pc}
   3d07c:	add	r7, sp, #8
   3d080:	b	3d04c <cmetrohash64_2@@Base+0xa98>
   3d084:	mvn	lr, #0
   3d088:	b	3d070 <cmetrohash64_2@@Base+0xabc>
   3d08c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d090:	sub	sp, sp, #20
   3d094:	ldr	r5, [r0]
   3d098:	cmp	r5, #0
   3d09c:	beq	3d154 <cmetrohash64_2@@Base+0xba0>
   3d0a0:	ldr	r3, [pc, #188]	; 3d164 <cmetrohash64_2@@Base+0xbb0>
   3d0a4:	ldr	r7, [r0, #12]
   3d0a8:	str	r3, [sp]
   3d0ac:	add	r3, sp, #8
   3d0b0:	str	r3, [sp, #4]
   3d0b4:	mov	r9, r0
   3d0b8:	mov	r3, #0
   3d0bc:	mov	r0, r1
   3d0c0:	mov	r6, r2
   3d0c4:	mov	r8, r1
   3d0c8:	bl	3be90 <cmetrohash64_1@@Base>
   3d0cc:	ldr	sl, [sp, #8]
   3d0d0:	sub	r7, r7, #1
   3d0d4:	and	r3, r7, sl
   3d0d8:	ldr	fp, [r5, r3, lsl #2]
   3d0dc:	add	r4, r5, r3, lsl #2
   3d0e0:	cmp	fp, #0
   3d0e4:	beq	3d154 <cmetrohash64_2@@Base+0xba0>
   3d0e8:	add	sl, sl, #1
   3d0ec:	b	3d108 <cmetrohash64_2@@Base+0xb54>
   3d0f0:	and	r3, sl, r7
   3d0f4:	add	sl, sl, #1
   3d0f8:	ldr	fp, [r5, r3, lsl #2]
   3d0fc:	add	r4, r5, r3, lsl #2
   3d100:	cmp	fp, #0
   3d104:	beq	3d154 <cmetrohash64_2@@Base+0xba0>
   3d108:	cmp	fp, #2
   3d10c:	beq	3d0f0 <cmetrohash64_2@@Base+0xb3c>
   3d110:	ldr	r3, [fp, #12]
   3d114:	cmp	r6, r3
   3d118:	bne	3d0f0 <cmetrohash64_2@@Base+0xb3c>
   3d11c:	mov	r2, r6
   3d120:	ldr	r1, [fp, #8]
   3d124:	mov	r0, r8
   3d128:	bl	13eec <memcmp@plt>
   3d12c:	cmp	r0, #0
   3d130:	bne	3d0f0 <cmetrohash64_2@@Base+0xb3c>
   3d134:	ldr	r3, [r9, #8]
   3d138:	mov	r2, #2
   3d13c:	sub	r3, r3, #1
   3d140:	str	r2, [r4]
   3d144:	mov	r0, fp
   3d148:	str	r3, [r9, #8]
   3d14c:	add	sp, sp, #20
   3d150:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d154:	mov	fp, #0
   3d158:	mov	r0, fp
   3d15c:	add	sp, sp, #20
   3d160:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d164:	svccs	0x00693b52
   3d168:	push	{r4, r5, r6, r7, r8, r9, lr}
   3d16c:	subs	r7, r0, #0
   3d170:	sub	sp, sp, #20
   3d174:	beq	3d210 <cmetrohash64_2@@Base+0xc5c>
   3d178:	mov	r6, r3
   3d17c:	ldr	r3, [pc, #156]	; 3d220 <cmetrohash64_2@@Base+0xc6c>
   3d180:	ldr	r8, [r1]
   3d184:	mov	r9, r2
   3d188:	str	r3, [sp]
   3d18c:	add	r3, sp, #8
   3d190:	str	r3, [sp, #4]
   3d194:	mov	r2, r6
   3d198:	mov	r3, #0
   3d19c:	mov	r0, r9
   3d1a0:	bl	3be90 <cmetrohash64_1@@Base>
   3d1a4:	ldr	r5, [sp, #8]
   3d1a8:	sub	r8, r8, #1
   3d1ac:	and	r3, r8, r5
   3d1b0:	ldr	r4, [r7, r3, lsl #2]
   3d1b4:	cmp	r4, #0
   3d1b8:	beq	3d210 <cmetrohash64_2@@Base+0xc5c>
   3d1bc:	add	r5, r5, #1
   3d1c0:	b	3d1d8 <cmetrohash64_2@@Base+0xc24>
   3d1c4:	and	r1, r8, r5
   3d1c8:	add	r5, r5, #1
   3d1cc:	ldr	r4, [r7, r1, lsl #2]
   3d1d0:	cmp	r4, #0
   3d1d4:	beq	3d210 <cmetrohash64_2@@Base+0xc5c>
   3d1d8:	cmp	r4, #2
   3d1dc:	beq	3d1c4 <cmetrohash64_2@@Base+0xc10>
   3d1e0:	ldr	r3, [r4, #12]
   3d1e4:	cmp	r6, r3
   3d1e8:	bne	3d1c4 <cmetrohash64_2@@Base+0xc10>
   3d1ec:	mov	r2, r6
   3d1f0:	ldr	r1, [r4, #8]
   3d1f4:	mov	r0, r9
   3d1f8:	bl	13eec <memcmp@plt>
   3d1fc:	cmp	r0, #0
   3d200:	bne	3d1c4 <cmetrohash64_2@@Base+0xc10>
   3d204:	mov	r0, r4
   3d208:	add	sp, sp, #20
   3d20c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3d210:	mov	r4, #0
   3d214:	mov	r0, r4
   3d218:	add	sp, sp, #20
   3d21c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   3d220:	svccs	0x00693b52

0003d224 <fb_name_table_clear@@Base>:
   3d224:	b	3ccd0 <cmetrohash64_2@@Base+0x71c>

0003d228 <fb_name_table_destroy@@Base>:
   3d228:	push	{r4, r5, r6, r7, r8, lr}
   3d22c:	subs	r7, r1, #0
   3d230:	mov	r6, r0
   3d234:	beq	3d288 <fb_name_table_destroy@@Base+0x60>
   3d238:	ldr	r3, [r0, #12]
   3d23c:	ldr	r5, [r0]
   3d240:	cmp	r3, #0
   3d244:	beq	3d288 <fb_name_table_destroy@@Base+0x60>
   3d248:	mov	r8, r2
   3d24c:	sub	r5, r5, #4
   3d250:	mov	r4, #0
   3d254:	b	3d260 <fb_name_table_destroy@@Base+0x38>
   3d258:	cmp	r4, r3
   3d25c:	bcs	3d288 <fb_name_table_destroy@@Base+0x60>
   3d260:	ldr	r1, [r5, #4]!
   3d264:	add	r4, r4, #1
   3d268:	cmp	r1, #0
   3d26c:	cmpne	r1, #2
   3d270:	beq	3d258 <fb_name_table_destroy@@Base+0x30>
   3d274:	mov	r0, r8
   3d278:	blx	r7
   3d27c:	ldr	r3, [r6, #12]
   3d280:	cmp	r4, r3
   3d284:	bcc	3d260 <fb_name_table_destroy@@Base+0x38>
   3d288:	mov	r0, r6
   3d28c:	pop	{r4, r5, r6, r7, r8, lr}
   3d290:	b	3ccd0 <cmetrohash64_2@@Base+0x71c>

0003d294 <fb_name_table_init@@Base>:
   3d294:	cmp	r1, #2
   3d298:	push	{r4, r5, r6, lr}
   3d29c:	mov	r4, #4
   3d2a0:	mov	r5, r0
   3d2a4:	bls	3d2bc <fb_name_table_init@@Base+0x28>
   3d2a8:	mov	r2, #179	; 0xb3
   3d2ac:	lsl	r4, r4, #1
   3d2b0:	mul	r3, r2, r4
   3d2b4:	cmp	r1, r3, lsr #8
   3d2b8:	bhi	3d2ac <fb_name_table_init@@Base+0x18>
   3d2bc:	mov	r1, #4
   3d2c0:	mov	r0, r4
   3d2c4:	bl	13e98 <calloc@plt>
   3d2c8:	cmp	r0, #0
   3d2cc:	str	r0, [r5]
   3d2d0:	movne	r0, #0
   3d2d4:	strne	r4, [r5, #12]
   3d2d8:	strne	r0, [r5, #4]
   3d2dc:	strne	r0, [r5, #8]
   3d2e0:	mvneq	r0, #0
   3d2e4:	pop	{r4, r5, r6, pc}

0003d2e8 <fb_name_table_resize@@Base>:
   3d2e8:	b	3cf90 <cmetrohash64_2@@Base+0x9dc>

0003d2ec <fb_name_table_insert@@Base>:
   3d2ec:	b	3cd00 <cmetrohash64_2@@Base+0x74c>

0003d2f0 <fb_name_table_insert_item@@Base>:
   3d2f0:	push	{lr}		; (str lr, [sp, #-4]!)
   3d2f4:	sub	sp, sp, #12
   3d2f8:	mov	r3, r1
   3d2fc:	str	r2, [sp]
   3d300:	ldr	r2, [r1, #12]
   3d304:	ldr	r1, [r1, #8]
   3d308:	bl	3cd00 <cmetrohash64_2@@Base+0x74c>
   3d30c:	add	sp, sp, #12
   3d310:	pop	{pc}		; (ldr pc, [sp], #4)

0003d314 <fb_name_table_find@@Base>:
   3d314:	mov	ip, r0
   3d318:	mov	r3, r2
   3d31c:	ldr	r0, [r0]
   3d320:	mov	r2, r1
   3d324:	add	r1, ip, #12
   3d328:	b	3d168 <cmetrohash64_2@@Base+0xbb4>

0003d32c <fb_name_table_find_item@@Base>:
   3d32c:	mov	ip, r0
   3d330:	ldr	r3, [r1, #12]
   3d334:	ldr	r2, [r1, #8]
   3d338:	ldr	r0, [r0]
   3d33c:	add	r1, ip, #12
   3d340:	b	3d168 <cmetrohash64_2@@Base+0xbb4>

0003d344 <fb_name_table_remove@@Base>:
   3d344:	b	3d08c <cmetrohash64_2@@Base+0xad8>

0003d348 <fb_name_table_remove_item@@Base>:
   3d348:	ldr	r2, [r1, #12]
   3d34c:	ldr	r1, [r1, #8]
   3d350:	b	3d08c <cmetrohash64_2@@Base+0xad8>

0003d354 <fb_name_table_visit@@Base>:
   3d354:	ldr	r3, [r0, #12]
   3d358:	push	{r4, r5, r6, r7, r8, lr}
   3d35c:	cmp	r3, #0
   3d360:	ldr	r5, [r0]
   3d364:	popeq	{r4, r5, r6, r7, r8, pc}
   3d368:	mov	r7, r2
   3d36c:	mov	r6, r1
   3d370:	mov	r8, r0
   3d374:	sub	r5, r5, #4
   3d378:	mov	r4, #0
   3d37c:	b	3d388 <fb_name_table_visit@@Base+0x34>
   3d380:	cmp	r4, r3
   3d384:	bcs	3d3b0 <fb_name_table_visit@@Base+0x5c>
   3d388:	ldr	r1, [r5, #4]!
   3d38c:	add	r4, r4, #1
   3d390:	cmp	r1, #0
   3d394:	cmpne	r1, #2
   3d398:	beq	3d380 <fb_name_table_visit@@Base+0x2c>
   3d39c:	mov	r0, r7
   3d3a0:	blx	r6
   3d3a4:	ldr	r3, [r8, #12]
   3d3a8:	cmp	r4, r3
   3d3ac:	bcc	3d388 <fb_name_table_visit@@Base+0x34>
   3d3b0:	pop	{r4, r5, r6, r7, r8, pc}
   3d3b4:	push	{r4, lr}
   3d3b8:	mov	r4, r0
   3d3bc:	ldr	r0, [r0]
   3d3c0:	cmp	r0, #0
   3d3c4:	beq	3d3cc <fb_name_table_visit@@Base+0x78>
   3d3c8:	bl	13ec8 <free@plt>
   3d3cc:	mov	r3, #0
   3d3d0:	str	r3, [r4]
   3d3d4:	str	r3, [r4, #4]
   3d3d8:	str	r3, [r4, #8]
   3d3dc:	str	r3, [r4, #12]
   3d3e0:	pop	{r4, pc}
   3d3e4:	ldrh	r3, [r0, #8]
   3d3e8:	cmp	r3, #5
   3d3ec:	beq	3d438 <fb_name_table_visit@@Base+0xe4>
   3d3f0:	cmp	r3, #6
   3d3f4:	beq	3d420 <fb_name_table_visit@@Base+0xcc>
   3d3f8:	cmp	r3, #4
   3d3fc:	beq	3d408 <fb_name_table_visit@@Base+0xb4>
   3d400:	mov	r0, #0
   3d404:	bx	lr
   3d408:	ldr	r2, [r0]
   3d40c:	ldr	r3, [pc, #60]	; 3d450 <fb_name_table_visit@@Base+0xfc>
   3d410:	ldr	r0, [pc, #60]	; 3d454 <fb_name_table_visit@@Base+0x100>
   3d414:	eor	r3, r3, r2
   3d418:	mul	r0, r0, r3
   3d41c:	bx	lr
   3d420:	ldrb	r2, [r0]
   3d424:	ldr	r3, [pc, #44]	; 3d458 <fb_name_table_visit@@Base+0x104>
   3d428:	ldr	r0, [pc, #36]	; 3d454 <fb_name_table_visit@@Base+0x100>
   3d42c:	eor	r3, r3, r2
   3d430:	mul	r0, r0, r3
   3d434:	bx	lr
   3d438:	ldr	r2, [r0]
   3d43c:	ldr	r3, [pc, #24]	; 3d45c <fb_name_table_visit@@Base+0x108>
   3d440:	ldr	r0, [pc, #12]	; 3d454 <fb_name_table_visit@@Base+0x100>
   3d444:	eor	r3, r3, r2
   3d448:	mul	r0, r0, r3
   3d44c:	bx	lr
   3d450:	svccs	0x00693b56
   3d454:			; <UNDEFINED> instruction: 0x9e3779b1
   3d458:	svccs	0x00693b54
   3d45c:	svccs	0x00693b57
   3d460:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d464:	subs	sl, r2, #0
   3d468:	ldr	r6, [pc, #544]	; 3d690 <fb_name_table_visit@@Base+0x33c>
   3d46c:	add	r6, pc, r6
   3d470:	beq	3d648 <fb_name_table_visit@@Base+0x2f4>
   3d474:	cmp	sl, #2
   3d478:	beq	3d628 <fb_name_table_visit@@Base+0x2d4>
   3d47c:	cmp	sl, #1
   3d480:	beq	3d608 <fb_name_table_visit@@Base+0x2b4>
   3d484:	ldr	r5, [r0, #12]
   3d488:	mov	fp, r3
   3d48c:	mov	r3, #179	; 0xb3
   3d490:	mov	r4, r1
   3d494:	mul	r3, r3, r5
   3d498:	ldr	r1, [r0, #8]
   3d49c:	mov	r9, r0
   3d4a0:	cmp	r1, r3, lsr #8
   3d4a4:	bcs	3d5a4 <fb_name_table_visit@@Base+0x250>
   3d4a8:	mov	r0, r4
   3d4ac:	bl	3d3e4 <fb_name_table_visit@@Base+0x90>
   3d4b0:	sub	r3, fp, #2
   3d4b4:	sub	r5, r5, #1
   3d4b8:	cmp	r3, #1
   3d4bc:	ldr	lr, [r9]
   3d4c0:	mov	ip, r0
   3d4c4:	and	r1, r5, r0
   3d4c8:	bls	3d5bc <fb_name_table_visit@@Base+0x268>
   3d4cc:	ldr	r0, [lr, r1, lsl #2]
   3d4d0:	add	r1, lr, r1, lsl #2
   3d4d4:	cmp	r0, #0
   3d4d8:	moveq	r8, r1
   3d4dc:	beq	3d58c <fb_name_table_visit@@Base+0x238>
   3d4e0:	add	ip, ip, #1
   3d4e4:	mov	r8, #0
   3d4e8:	b	3d504 <fb_name_table_visit@@Base+0x1b0>
   3d4ec:	and	r1, r5, ip
   3d4f0:	add	ip, ip, #1
   3d4f4:	ldr	r0, [lr, r1, lsl #2]
   3d4f8:	add	r1, lr, r1, lsl #2
   3d4fc:	cmp	r0, #0
   3d500:	beq	3d584 <fb_name_table_visit@@Base+0x230>
   3d504:	cmp	r0, #2
   3d508:	beq	3d560 <fb_name_table_visit@@Base+0x20c>
   3d50c:	ldrh	r2, [r4, #8]
   3d510:	ldrh	r3, [r0, #8]
   3d514:	cmp	r3, r2
   3d518:	bne	3d4ec <fb_name_table_visit@@Base+0x198>
   3d51c:	cmp	r3, #5
   3d520:	beq	3d534 <fb_name_table_visit@@Base+0x1e0>
   3d524:	cmp	r3, #6
   3d528:	beq	3d56c <fb_name_table_visit@@Base+0x218>
   3d52c:	cmp	r3, #4
   3d530:	bne	3d4ec <fb_name_table_visit@@Base+0x198>
   3d534:	ldrd	r2, [r0]
   3d538:	ldrd	r6, [r4]
   3d53c:	cmp	r7, r3
   3d540:	cmpeq	r6, r2
   3d544:	moveq	r3, #1
   3d548:	movne	r3, #0
   3d54c:	cmp	r3, #0
   3d550:	beq	3d4ec <fb_name_table_visit@@Base+0x198>
   3d554:	cmp	fp, #0
   3d558:	streq	sl, [r1]
   3d55c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d560:	cmp	r8, #0
   3d564:	moveq	r8, r1
   3d568:	b	3d4ec <fb_name_table_visit@@Base+0x198>
   3d56c:	ldrb	r3, [r4]
   3d570:	ldrb	r2, [r0]
   3d574:	sub	r3, r3, r2
   3d578:	clz	r3, r3
   3d57c:	lsr	r3, r3, #5
   3d580:	b	3d54c <fb_name_table_visit@@Base+0x1f8>
   3d584:	cmp	r8, #0
   3d588:	moveq	r8, r1
   3d58c:	ldr	r3, [r9, #8]
   3d590:	mov	r0, #0
   3d594:	add	r3, r3, #1
   3d598:	str	r3, [r9, #8]
   3d59c:	str	sl, [r8]
   3d5a0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d5a4:	lsl	r1, r1, #1
   3d5a8:	bl	3d6c4 <fb_name_table_visit@@Base+0x370>
   3d5ac:	cmp	r0, #0
   3d5b0:	bne	3d668 <fb_name_table_visit@@Base+0x314>
   3d5b4:	ldr	r5, [r9, #12]
   3d5b8:	b	3d4a8 <fb_name_table_visit@@Base+0x154>
   3d5bc:	ldr	r2, [lr, r1, lsl #2]
   3d5c0:	ldr	r3, [r9, #8]
   3d5c4:	cmp	r2, #0
   3d5c8:	cmpne	r2, #2
   3d5cc:	add	r3, r3, #1
   3d5d0:	str	r3, [r9, #8]
   3d5d4:	add	r1, lr, r1, lsl #2
   3d5d8:	beq	3d5fc <fb_name_table_visit@@Base+0x2a8>
   3d5dc:	add	ip, r0, #1
   3d5e0:	and	r1, r5, ip
   3d5e4:	add	ip, ip, #1
   3d5e8:	ldr	r3, [lr, r1, lsl #2]
   3d5ec:	add	r1, lr, r1, lsl #2
   3d5f0:	cmp	r3, #0
   3d5f4:	cmpne	r3, #2
   3d5f8:	bne	3d5e0 <fb_name_table_visit@@Base+0x28c>
   3d5fc:	str	sl, [r1]
   3d600:	mov	r0, #0
   3d604:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d608:	ldr	r3, [pc, #132]	; 3d694 <fb_name_table_visit@@Base+0x340>
   3d60c:	ldr	r1, [pc, #132]	; 3d698 <fb_name_table_visit@@Base+0x344>
   3d610:	ldr	r0, [pc, #132]	; 3d69c <fb_name_table_visit@@Base+0x348>
   3d614:	add	r3, pc, r3
   3d618:	mov	r2, #116	; 0x74
   3d61c:	add	r1, pc, r1
   3d620:	add	r0, pc, r0
   3d624:	bl	14030 <__assert_fail@plt>
   3d628:	ldr	r3, [pc, #112]	; 3d6a0 <fb_name_table_visit@@Base+0x34c>
   3d62c:	ldr	r1, [pc, #112]	; 3d6a4 <fb_name_table_visit@@Base+0x350>
   3d630:	ldr	r0, [pc, #112]	; 3d6a8 <fb_name_table_visit@@Base+0x354>
   3d634:	add	r3, pc, r3
   3d638:	mov	r2, #115	; 0x73
   3d63c:	add	r1, pc, r1
   3d640:	add	r0, pc, r0
   3d644:	bl	14030 <__assert_fail@plt>
   3d648:	ldr	r3, [pc, #92]	; 3d6ac <fb_name_table_visit@@Base+0x358>
   3d64c:	ldr	r1, [pc, #92]	; 3d6b0 <fb_name_table_visit@@Base+0x35c>
   3d650:	ldr	r0, [pc, #92]	; 3d6b4 <fb_name_table_visit@@Base+0x360>
   3d654:	add	r3, pc, r3
   3d658:	mov	r2, #114	; 0x72
   3d65c:	add	r1, pc, r1
   3d660:	add	r0, pc, r0
   3d664:	bl	14030 <__assert_fail@plt>
   3d668:	ldr	r3, [pc, #72]	; 3d6b8 <fb_name_table_visit@@Base+0x364>
   3d66c:	ldr	r2, [pc, #72]	; 3d6bc <fb_name_table_visit@@Base+0x368>
   3d670:	ldr	r1, [pc, #72]	; 3d6c0 <fb_name_table_visit@@Base+0x36c>
   3d674:	ldr	r3, [r6, r3]
   3d678:	add	r2, pc, r2
   3d67c:	add	r1, pc, r1
   3d680:	ldr	r0, [r3]
   3d684:	bl	13f7c <fprintf@plt>
   3d688:	mov	r0, #1
   3d68c:	bl	13f64 <exit@plt>
   3d690:	andeq	ip, r2, ip, lsl #23
   3d694:	andeq	ip, r1, r8, lsl #8
   3d698:	andeq	r8, r1, ip, lsl #27
   3d69c:	andeq	r8, r1, r0, lsr #28
   3d6a0:	andeq	ip, r1, r8, ror #7
   3d6a4:	andeq	r8, r1, ip, ror #26
   3d6a8:	andeq	r8, r1, r8, ror #27
   3d6ac:	andeq	ip, r1, r8, asr #7
   3d6b0:	andeq	r8, r1, ip, asr #26
   3d6b4:			; <UNDEFINED> instruction: 0x00018db0
   3d6b8:	muleq	r0, ip, r0
   3d6bc:	andeq	r8, r1, r0, ror #27
   3d6c0:	andeq	r8, r1, r0, lsl lr
   3d6c4:	ldr	r3, [r0, #8]
   3d6c8:	push	{r4, r5, r6, r7, r8, lr}
   3d6cc:	cmp	r1, r3
   3d6d0:	movcc	r1, r3
   3d6d4:	cmp	r1, #2
   3d6d8:	sub	sp, sp, #16
   3d6dc:	mov	r7, r0
   3d6e0:	ldr	r6, [r0]
   3d6e4:	mov	r5, #4
   3d6e8:	bls	3d700 <fb_name_table_visit@@Base+0x3ac>
   3d6ec:	mov	r2, #179	; 0xb3
   3d6f0:	lsl	r5, r5, #1
   3d6f4:	mul	r3, r2, r5
   3d6f8:	cmp	r1, r3, lsr #8
   3d6fc:	bhi	3d6f0 <fb_name_table_visit@@Base+0x39c>
   3d700:	mov	r1, #4
   3d704:	mov	r0, r5
   3d708:	bl	13e98 <calloc@plt>
   3d70c:	cmp	r0, #0
   3d710:	str	r0, [sp]
   3d714:	beq	3d7b4 <fb_name_table_visit@@Base+0x460>
   3d718:	ldr	r3, [r7, #12]
   3d71c:	mov	r4, #0
   3d720:	cmp	r3, r4
   3d724:	str	r5, [sp, #12]
   3d728:	str	r4, [sp, #4]
   3d72c:	subne	r5, r6, #4
   3d730:	str	r4, [sp, #8]
   3d734:	movne	r6, sp
   3d738:	movne	r8, #3
   3d73c:	bne	3d74c <fb_name_table_visit@@Base+0x3f8>
   3d740:	b	3d7ac <fb_name_table_visit@@Base+0x458>
   3d744:	cmp	r3, r4
   3d748:	bls	3d77c <fb_name_table_visit@@Base+0x428>
   3d74c:	ldr	r2, [r5, #4]!
   3d750:	add	r4, r4, #1
   3d754:	cmp	r2, #0
   3d758:	cmpne	r2, #2
   3d75c:	beq	3d744 <fb_name_table_visit@@Base+0x3f0>
   3d760:	mov	r3, r8
   3d764:	mov	r1, r2
   3d768:	mov	r0, r6
   3d76c:	bl	3d460 <fb_name_table_visit@@Base+0x10c>
   3d770:	ldr	r3, [r7, #12]
   3d774:	cmp	r3, r4
   3d778:	bhi	3d74c <fb_name_table_visit@@Base+0x3f8>
   3d77c:	mov	r0, r7
   3d780:	bl	3d3b4 <fb_name_table_visit@@Base+0x60>
   3d784:	mov	ip, r6
   3d788:	mov	lr, #0
   3d78c:	ldm	ip!, {r0, r1, r2, r3}
   3d790:	str	r0, [r7]
   3d794:	str	r1, [r7, #4]
   3d798:	str	r2, [r7, #8]
   3d79c:	str	r3, [r7, #12]
   3d7a0:	mov	r0, lr
   3d7a4:	add	sp, sp, #16
   3d7a8:	pop	{r4, r5, r6, r7, r8, pc}
   3d7ac:	mov	r6, sp
   3d7b0:	b	3d77c <fb_name_table_visit@@Base+0x428>
   3d7b4:	mvn	lr, #0
   3d7b8:	b	3d7a0 <fb_name_table_visit@@Base+0x44c>
   3d7bc:	push	{r4, r5, r6, r7, r8, lr}
   3d7c0:	subs	r5, r0, #0
   3d7c4:	beq	3d884 <fb_name_table_visit@@Base+0x530>
   3d7c8:	ldr	r1, [r1]
   3d7cc:	mov	r0, r2
   3d7d0:	sub	r1, r1, #1
   3d7d4:	mov	r4, r2
   3d7d8:	bl	3d3e4 <fb_name_table_visit@@Base+0x90>
   3d7dc:	and	r3, r1, r0
   3d7e0:	mov	ip, r0
   3d7e4:	ldr	r0, [r5, r3, lsl #2]
   3d7e8:	cmp	r0, #0
   3d7ec:	popeq	{r4, r5, r6, r7, r8, pc}
   3d7f0:	add	ip, ip, #1
   3d7f4:	b	3d80c <fb_name_table_visit@@Base+0x4b8>
   3d7f8:	and	r3, r1, ip
   3d7fc:	add	ip, ip, #1
   3d800:	ldr	r0, [r5, r3, lsl #2]
   3d804:	cmp	r0, #0
   3d808:	beq	3d880 <fb_name_table_visit@@Base+0x52c>
   3d80c:	cmp	r0, #2
   3d810:	beq	3d7f8 <fb_name_table_visit@@Base+0x4a4>
   3d814:	ldrh	r2, [r4, #8]
   3d818:	ldrh	r3, [r0, #8]
   3d81c:	cmp	r3, r2
   3d820:	bne	3d7f8 <fb_name_table_visit@@Base+0x4a4>
   3d824:	cmp	r3, #5
   3d828:	beq	3d83c <fb_name_table_visit@@Base+0x4e8>
   3d82c:	cmp	r3, #6
   3d830:	beq	3d860 <fb_name_table_visit@@Base+0x50c>
   3d834:	cmp	r3, #4
   3d838:	bne	3d7f8 <fb_name_table_visit@@Base+0x4a4>
   3d83c:	ldrd	r2, [r0]
   3d840:	ldrd	r6, [r4]
   3d844:	cmp	r7, r3
   3d848:	cmpeq	r6, r2
   3d84c:	moveq	r3, #1
   3d850:	movne	r3, #0
   3d854:	cmp	r3, #0
   3d858:	beq	3d7f8 <fb_name_table_visit@@Base+0x4a4>
   3d85c:	pop	{r4, r5, r6, r7, r8, pc}
   3d860:	ldrb	r3, [r4]
   3d864:	ldrb	r2, [r0]
   3d868:	sub	r3, r3, r2
   3d86c:	clz	r3, r3
   3d870:	lsr	r3, r3, #5
   3d874:	cmp	r3, #0
   3d878:	beq	3d7f8 <fb_name_table_visit@@Base+0x4a4>
   3d87c:	pop	{r4, r5, r6, r7, r8, pc}
   3d880:	pop	{r4, r5, r6, r7, r8, pc}
   3d884:	mov	r0, r5
   3d888:	pop	{r4, r5, r6, r7, r8, pc}
   3d88c:	push	{r4, r5, r6, r7, r8, lr}
   3d890:	ldr	r4, [r0]
   3d894:	cmp	r4, #0
   3d898:	beq	3d96c <fb_name_table_visit@@Base+0x618>
   3d89c:	ldr	r5, [r0, #12]
   3d8a0:	mov	r8, r0
   3d8a4:	mov	r0, r1
   3d8a8:	bl	3d3e4 <fb_name_table_visit@@Base+0x90>
   3d8ac:	sub	r5, r5, #1
   3d8b0:	and	ip, r5, r0
   3d8b4:	mov	lr, r0
   3d8b8:	ldr	r0, [r4, ip, lsl #2]
   3d8bc:	add	ip, r4, ip, lsl #2
   3d8c0:	cmp	r0, #0
   3d8c4:	popeq	{r4, r5, r6, r7, r8, pc}
   3d8c8:	add	lr, lr, #1
   3d8cc:	b	3d8e8 <fb_name_table_visit@@Base+0x594>
   3d8d0:	and	ip, r5, lr
   3d8d4:	add	lr, lr, #1
   3d8d8:	ldr	r0, [r4, ip, lsl #2]
   3d8dc:	add	ip, r4, ip, lsl #2
   3d8e0:	cmp	r0, #0
   3d8e4:	beq	3d968 <fb_name_table_visit@@Base+0x614>
   3d8e8:	cmp	r0, #2
   3d8ec:	beq	3d8d0 <fb_name_table_visit@@Base+0x57c>
   3d8f0:	ldrh	r2, [r1, #8]
   3d8f4:	ldrh	r3, [r0, #8]
   3d8f8:	cmp	r3, r2
   3d8fc:	bne	3d8d0 <fb_name_table_visit@@Base+0x57c>
   3d900:	cmp	r3, #5
   3d904:	beq	3d918 <fb_name_table_visit@@Base+0x5c4>
   3d908:	cmp	r3, #6
   3d90c:	beq	3d950 <fb_name_table_visit@@Base+0x5fc>
   3d910:	cmp	r3, #4
   3d914:	bne	3d8d0 <fb_name_table_visit@@Base+0x57c>
   3d918:	ldrd	r2, [r0]
   3d91c:	ldrd	r6, [r1]
   3d920:	cmp	r7, r3
   3d924:	cmpeq	r6, r2
   3d928:	moveq	r3, #1
   3d92c:	movne	r3, #0
   3d930:	cmp	r3, #0
   3d934:	beq	3d8d0 <fb_name_table_visit@@Base+0x57c>
   3d938:	ldr	r3, [r8, #8]
   3d93c:	mov	r2, #2
   3d940:	sub	r3, r3, #1
   3d944:	str	r2, [ip]
   3d948:	str	r3, [r8, #8]
   3d94c:	pop	{r4, r5, r6, r7, r8, pc}
   3d950:	ldrb	r3, [r1]
   3d954:	ldrb	r2, [r0]
   3d958:	sub	r3, r3, r2
   3d95c:	clz	r3, r3
   3d960:	lsr	r3, r3, #5
   3d964:	b	3d930 <fb_name_table_visit@@Base+0x5dc>
   3d968:	pop	{r4, r5, r6, r7, r8, pc}
   3d96c:	mov	r0, r4
   3d970:	pop	{r4, r5, r6, r7, r8, pc}

0003d974 <fb_value_set_clear@@Base>:
   3d974:	b	3d3b4 <fb_name_table_visit@@Base+0x60>

0003d978 <fb_value_set_destroy@@Base>:
   3d978:	push	{r4, r5, r6, r7, r8, lr}
   3d97c:	subs	r7, r1, #0
   3d980:	mov	r6, r0
   3d984:	beq	3d9d8 <fb_value_set_destroy@@Base+0x60>
   3d988:	ldr	r3, [r0, #12]
   3d98c:	ldr	r5, [r0]
   3d990:	cmp	r3, #0
   3d994:	beq	3d9d8 <fb_value_set_destroy@@Base+0x60>
   3d998:	mov	r8, r2
   3d99c:	sub	r5, r5, #4
   3d9a0:	mov	r4, #0
   3d9a4:	b	3d9b0 <fb_value_set_destroy@@Base+0x38>
   3d9a8:	cmp	r4, r3
   3d9ac:	bcs	3d9d8 <fb_value_set_destroy@@Base+0x60>
   3d9b0:	ldr	r1, [r5, #4]!
   3d9b4:	add	r4, r4, #1
   3d9b8:	cmp	r1, #0
   3d9bc:	cmpne	r1, #2
   3d9c0:	beq	3d9a8 <fb_value_set_destroy@@Base+0x30>
   3d9c4:	mov	r0, r8
   3d9c8:	blx	r7
   3d9cc:	ldr	r3, [r6, #12]
   3d9d0:	cmp	r4, r3
   3d9d4:	bcc	3d9b0 <fb_value_set_destroy@@Base+0x38>
   3d9d8:	mov	r0, r6
   3d9dc:	pop	{r4, r5, r6, r7, r8, lr}
   3d9e0:	b	3d3b4 <fb_name_table_visit@@Base+0x60>

0003d9e4 <fb_value_set_init@@Base>:
   3d9e4:	cmp	r1, #2
   3d9e8:	push	{r4, r5, r6, lr}
   3d9ec:	mov	r4, #4
   3d9f0:	mov	r5, r0
   3d9f4:	bls	3da0c <fb_value_set_init@@Base+0x28>
   3d9f8:	mov	r2, #179	; 0xb3
   3d9fc:	lsl	r4, r4, #1
   3da00:	mul	r3, r2, r4
   3da04:	cmp	r1, r3, lsr #8
   3da08:	bhi	3d9fc <fb_value_set_init@@Base+0x18>
   3da0c:	mov	r1, #4
   3da10:	mov	r0, r4
   3da14:	bl	13e98 <calloc@plt>
   3da18:	cmp	r0, #0
   3da1c:	str	r0, [r5]
   3da20:	movne	r0, #0
   3da24:	strne	r4, [r5, #12]
   3da28:	strne	r0, [r5, #4]
   3da2c:	strne	r0, [r5, #8]
   3da30:	mvneq	r0, #0
   3da34:	pop	{r4, r5, r6, pc}

0003da38 <fb_value_set_resize@@Base>:
   3da38:	b	3d6c4 <fb_name_table_visit@@Base+0x370>

0003da3c <fb_value_set_insert@@Base>:
   3da3c:	mov	r2, r3
   3da40:	ldr	r3, [sp]
   3da44:	b	3d460 <fb_name_table_visit@@Base+0x10c>

0003da48 <fb_value_set_insert_item@@Base>:
   3da48:	mov	r3, r2
   3da4c:	mov	r2, r1
   3da50:	b	3d460 <fb_name_table_visit@@Base+0x10c>

0003da54 <fb_value_set_find@@Base>:
   3da54:	mov	r3, r0
   3da58:	mov	r2, r1
   3da5c:	ldr	r0, [r0]
   3da60:	add	r1, r3, #12
   3da64:	b	3d7bc <fb_name_table_visit@@Base+0x468>

0003da68 <fb_value_set_find_item@@Base>:
   3da68:	mov	r3, r0
   3da6c:	mov	r2, r1
   3da70:	ldr	r0, [r0]
   3da74:	add	r1, r3, #12
   3da78:	b	3d7bc <fb_name_table_visit@@Base+0x468>

0003da7c <fb_value_set_remove@@Base>:
   3da7c:	b	3d88c <fb_name_table_visit@@Base+0x538>

0003da80 <fb_value_set_remove_item@@Base>:
   3da80:	b	3d88c <fb_name_table_visit@@Base+0x538>

0003da84 <fb_value_set_visit@@Base>:
   3da84:	ldr	r3, [r0, #12]
   3da88:	push	{r4, r5, r6, r7, r8, lr}
   3da8c:	cmp	r3, #0
   3da90:	ldr	r5, [r0]
   3da94:	popeq	{r4, r5, r6, r7, r8, pc}
   3da98:	mov	r7, r2
   3da9c:	mov	r6, r1
   3daa0:	mov	r8, r0
   3daa4:	sub	r5, r5, #4
   3daa8:	mov	r4, #0
   3daac:	b	3dab8 <fb_value_set_visit@@Base+0x34>
   3dab0:	cmp	r4, r3
   3dab4:	bcs	3dae0 <fb_value_set_visit@@Base+0x5c>
   3dab8:	ldr	r1, [r5, #4]!
   3dabc:	add	r4, r4, #1
   3dac0:	cmp	r1, #0
   3dac4:	cmpne	r1, #2
   3dac8:	beq	3dab0 <fb_value_set_visit@@Base+0x2c>
   3dacc:	mov	r0, r7
   3dad0:	blx	r6
   3dad4:	ldr	r3, [r8, #12]
   3dad8:	cmp	r4, r3
   3dadc:	bcc	3dab8 <fb_value_set_visit@@Base+0x34>
   3dae0:	pop	{r4, r5, r6, r7, r8, pc}
   3dae4:	eor	r1, r1, #-2147483648	; 0x80000000
   3dae8:	b	3daf0 <fb_value_set_visit@@Base+0x6c>
   3daec:	eor	r3, r3, #-2147483648	; 0x80000000
   3daf0:	push	{r4, r5, lr}
   3daf4:	lsl	r4, r1, #1
   3daf8:	lsl	r5, r3, #1
   3dafc:	teq	r4, r5
   3db00:	teqeq	r0, r2
   3db04:	orrsne	ip, r4, r0
   3db08:	orrsne	ip, r5, r2
   3db0c:	mvnsne	ip, r4, asr #21
   3db10:	mvnsne	ip, r5, asr #21
   3db14:	beq	3dd00 <fb_value_set_visit@@Base+0x27c>
   3db18:	lsr	r4, r4, #21
   3db1c:	rsbs	r5, r4, r5, lsr #21
   3db20:	rsblt	r5, r5, #0
   3db24:	ble	3db44 <fb_value_set_visit@@Base+0xc0>
   3db28:	add	r4, r4, r5
   3db2c:	eor	r2, r0, r2
   3db30:	eor	r3, r1, r3
   3db34:	eor	r0, r2, r0
   3db38:	eor	r1, r3, r1
   3db3c:	eor	r2, r0, r2
   3db40:	eor	r3, r1, r3
   3db44:	cmp	r5, #54	; 0x36
   3db48:	pophi	{r4, r5, pc}
   3db4c:	tst	r1, #-2147483648	; 0x80000000
   3db50:	lsl	r1, r1, #12
   3db54:	mov	ip, #1048576	; 0x100000
   3db58:	orr	r1, ip, r1, lsr #12
   3db5c:	beq	3db68 <fb_value_set_visit@@Base+0xe4>
   3db60:	rsbs	r0, r0, #0
   3db64:	rsc	r1, r1, #0
   3db68:	tst	r3, #-2147483648	; 0x80000000
   3db6c:	lsl	r3, r3, #12
   3db70:	orr	r3, ip, r3, lsr #12
   3db74:	beq	3db80 <fb_value_set_visit@@Base+0xfc>
   3db78:	rsbs	r2, r2, #0
   3db7c:	rsc	r3, r3, #0
   3db80:	teq	r4, r5
   3db84:	beq	3dce8 <fb_value_set_visit@@Base+0x264>
   3db88:	sub	r4, r4, #1
   3db8c:	rsbs	lr, r5, #32
   3db90:	blt	3dbac <fb_value_set_visit@@Base+0x128>
   3db94:	lsl	ip, r2, lr
   3db98:	adds	r0, r0, r2, lsr r5
   3db9c:	adc	r1, r1, #0
   3dba0:	adds	r0, r0, r3, lsl lr
   3dba4:	adcs	r1, r1, r3, asr r5
   3dba8:	b	3dbc8 <fb_value_set_visit@@Base+0x144>
   3dbac:	sub	r5, r5, #32
   3dbb0:	add	lr, lr, #32
   3dbb4:	cmp	r2, #1
   3dbb8:	lsl	ip, r3, lr
   3dbbc:	orrcs	ip, ip, #2
   3dbc0:	adds	r0, r0, r3, asr r5
   3dbc4:	adcs	r1, r1, r3, asr #31
   3dbc8:	and	r5, r1, #-2147483648	; 0x80000000
   3dbcc:	bpl	3dbdc <fb_value_set_visit@@Base+0x158>
   3dbd0:	rsbs	ip, ip, #0
   3dbd4:	rscs	r0, r0, #0
   3dbd8:	rsc	r1, r1, #0
   3dbdc:	cmp	r1, #1048576	; 0x100000
   3dbe0:	bcc	3dc20 <fb_value_set_visit@@Base+0x19c>
   3dbe4:	cmp	r1, #2097152	; 0x200000
   3dbe8:	bcc	3dc08 <fb_value_set_visit@@Base+0x184>
   3dbec:	lsrs	r1, r1, #1
   3dbf0:	rrxs	r0, r0
   3dbf4:	rrx	ip, ip
   3dbf8:	add	r4, r4, #1
   3dbfc:	lsl	r2, r4, #21
   3dc00:	cmn	r2, #4194304	; 0x400000
   3dc04:	bcs	3dd60 <fb_value_set_visit@@Base+0x2dc>
   3dc08:	cmp	ip, #-2147483648	; 0x80000000
   3dc0c:	lsrseq	ip, r0, #1
   3dc10:	adcs	r0, r0, #0
   3dc14:	adc	r1, r1, r4, lsl #20
   3dc18:	orr	r1, r1, r5
   3dc1c:	pop	{r4, r5, pc}
   3dc20:	lsls	ip, ip, #1
   3dc24:	adcs	r0, r0, r0
   3dc28:	adc	r1, r1, r1
   3dc2c:	tst	r1, #1048576	; 0x100000
   3dc30:	sub	r4, r4, #1
   3dc34:	bne	3dc08 <fb_value_set_visit@@Base+0x184>
   3dc38:	teq	r1, #0
   3dc3c:	moveq	r1, r0
   3dc40:	moveq	r0, #0
   3dc44:	clz	r3, r1
   3dc48:	addeq	r3, r3, #32
   3dc4c:	sub	r3, r3, #11
   3dc50:	subs	r2, r3, #32
   3dc54:	bge	3dc78 <fb_value_set_visit@@Base+0x1f4>
   3dc58:	adds	r2, r2, #12
   3dc5c:	ble	3dc74 <fb_value_set_visit@@Base+0x1f0>
   3dc60:	add	ip, r2, #20
   3dc64:	rsb	r2, r2, #12
   3dc68:	lsl	r0, r1, ip
   3dc6c:	lsr	r1, r1, r2
   3dc70:	b	3dc88 <fb_value_set_visit@@Base+0x204>
   3dc74:	add	r2, r2, #20
   3dc78:	rsble	ip, r2, #32
   3dc7c:	lsl	r1, r1, r2
   3dc80:	orrle	r1, r1, r0, lsr ip
   3dc84:	lslle	r0, r0, r2
   3dc88:	subs	r4, r4, r3
   3dc8c:	addge	r1, r1, r4, lsl #20
   3dc90:	orrge	r1, r1, r5
   3dc94:	popge	{r4, r5, pc}
   3dc98:	mvn	r4, r4
   3dc9c:	subs	r4, r4, #31
   3dca0:	bge	3dcdc <fb_value_set_visit@@Base+0x258>
   3dca4:	adds	r4, r4, #12
   3dca8:	bgt	3dcc4 <fb_value_set_visit@@Base+0x240>
   3dcac:	add	r4, r4, #20
   3dcb0:	rsb	r2, r4, #32
   3dcb4:	lsr	r0, r0, r4
   3dcb8:	orr	r0, r0, r1, lsl r2
   3dcbc:	orr	r1, r5, r1, lsr r4
   3dcc0:	pop	{r4, r5, pc}
   3dcc4:	rsb	r4, r4, #12
   3dcc8:	rsb	r2, r4, #32
   3dccc:	lsr	r0, r0, r2
   3dcd0:	orr	r0, r0, r1, lsl r4
   3dcd4:	mov	r1, r5
   3dcd8:	pop	{r4, r5, pc}
   3dcdc:	lsr	r0, r1, r4
   3dce0:	mov	r1, r5
   3dce4:	pop	{r4, r5, pc}
   3dce8:	teq	r4, #0
   3dcec:	eor	r3, r3, #1048576	; 0x100000
   3dcf0:	eoreq	r1, r1, #1048576	; 0x100000
   3dcf4:	addeq	r4, r4, #1
   3dcf8:	subne	r5, r5, #1
   3dcfc:	b	3db88 <fb_value_set_visit@@Base+0x104>
   3dd00:	mvns	ip, r4, asr #21
   3dd04:	mvnsne	ip, r5, asr #21
   3dd08:	beq	3dd70 <fb_value_set_visit@@Base+0x2ec>
   3dd0c:	teq	r4, r5
   3dd10:	teqeq	r0, r2
   3dd14:	beq	3dd28 <fb_value_set_visit@@Base+0x2a4>
   3dd18:	orrs	ip, r4, r0
   3dd1c:	moveq	r1, r3
   3dd20:	moveq	r0, r2
   3dd24:	pop	{r4, r5, pc}
   3dd28:	teq	r1, r3
   3dd2c:	movne	r1, #0
   3dd30:	movne	r0, #0
   3dd34:	popne	{r4, r5, pc}
   3dd38:	lsrs	ip, r4, #21
   3dd3c:	bne	3dd50 <fb_value_set_visit@@Base+0x2cc>
   3dd40:	lsls	r0, r0, #1
   3dd44:	adcs	r1, r1, r1
   3dd48:	orrcs	r1, r1, #-2147483648	; 0x80000000
   3dd4c:	pop	{r4, r5, pc}
   3dd50:	adds	r4, r4, #4194304	; 0x400000
   3dd54:	addcc	r1, r1, #1048576	; 0x100000
   3dd58:	popcc	{r4, r5, pc}
   3dd5c:	and	r5, r1, #-2147483648	; 0x80000000
   3dd60:	orr	r1, r5, #2130706432	; 0x7f000000
   3dd64:	orr	r1, r1, #15728640	; 0xf00000
   3dd68:	mov	r0, #0
   3dd6c:	pop	{r4, r5, pc}
   3dd70:	mvns	ip, r4, asr #21
   3dd74:	movne	r1, r3
   3dd78:	movne	r0, r2
   3dd7c:	mvnseq	ip, r5, asr #21
   3dd80:	movne	r3, r1
   3dd84:	movne	r2, r0
   3dd88:	orrs	r4, r0, r1, lsl #12
   3dd8c:	orrseq	r5, r2, r3, lsl #12
   3dd90:	teqeq	r1, r3
   3dd94:	orrne	r1, r1, #524288	; 0x80000
   3dd98:	pop	{r4, r5, pc}
   3dd9c:	teq	r0, #0
   3dda0:	moveq	r1, #0
   3dda4:	bxeq	lr
   3dda8:	push	{r4, r5, lr}
   3ddac:	mov	r4, #1024	; 0x400
   3ddb0:	add	r4, r4, #50	; 0x32
   3ddb4:	mov	r5, #0
   3ddb8:	mov	r1, #0
   3ddbc:	b	3dc38 <fb_value_set_visit@@Base+0x1b4>
   3ddc0:	teq	r0, #0
   3ddc4:	moveq	r1, #0
   3ddc8:	bxeq	lr
   3ddcc:	push	{r4, r5, lr}
   3ddd0:	mov	r4, #1024	; 0x400
   3ddd4:	add	r4, r4, #50	; 0x32
   3ddd8:	ands	r5, r0, #-2147483648	; 0x80000000
   3dddc:	rsbmi	r0, r0, #0
   3dde0:	mov	r1, #0
   3dde4:	b	3dc38 <fb_value_set_visit@@Base+0x1b4>
   3dde8:	lsls	r2, r0, #1
   3ddec:	asr	r1, r2, #3
   3ddf0:	rrx	r1, r1
   3ddf4:	lsl	r0, r2, #28
   3ddf8:	andsne	r3, r2, #-16777216	; 0xff000000
   3ddfc:	teqne	r3, #-16777216	; 0xff000000
   3de00:	eorne	r1, r1, #939524096	; 0x38000000
   3de04:	bxne	lr
   3de08:	teq	r2, #0
   3de0c:	teqne	r3, #-16777216	; 0xff000000
   3de10:	bxeq	lr
   3de14:	push	{r4, r5, lr}
   3de18:	mov	r4, #896	; 0x380
   3de1c:	and	r5, r1, #-2147483648	; 0x80000000
   3de20:	bic	r1, r1, #-2147483648	; 0x80000000
   3de24:	b	3dc38 <fb_value_set_visit@@Base+0x1b4>
   3de28:	orrs	r2, r0, r1
   3de2c:	bxeq	lr
   3de30:	push	{r4, r5, lr}
   3de34:	mov	r5, #0
   3de38:	b	3de58 <fb_value_set_visit@@Base+0x3d4>
   3de3c:	orrs	r2, r0, r1
   3de40:	bxeq	lr
   3de44:	push	{r4, r5, lr}
   3de48:	ands	r5, r1, #-2147483648	; 0x80000000
   3de4c:	bpl	3de58 <fb_value_set_visit@@Base+0x3d4>
   3de50:	rsbs	r0, r0, #0
   3de54:	rsc	r1, r1, #0
   3de58:	mov	r4, #1024	; 0x400
   3de5c:	add	r4, r4, #50	; 0x32
   3de60:	lsrs	ip, r1, #22
   3de64:	beq	3dbdc <fb_value_set_visit@@Base+0x158>
   3de68:	mov	r2, #3
   3de6c:	lsrs	ip, ip, #3
   3de70:	addne	r2, r2, #3
   3de74:	lsrs	ip, ip, #3
   3de78:	addne	r2, r2, #3
   3de7c:	add	r2, r2, ip, lsr #3
   3de80:	rsb	r3, r2, #32
   3de84:	lsl	ip, r0, r3
   3de88:	lsr	r0, r0, r2
   3de8c:	orr	r0, r0, r1, lsl r3
   3de90:	lsr	r1, r1, r2
   3de94:	add	r4, r4, r2
   3de98:	b	3dbdc <fb_value_set_visit@@Base+0x158>
   3de9c:	eor	r0, r0, #-2147483648	; 0x80000000
   3dea0:	b	3dea8 <fb_value_set_visit@@Base+0x424>
   3dea4:	eor	r1, r1, #-2147483648	; 0x80000000
   3dea8:	lsls	r2, r0, #1
   3deac:	lslsne	r3, r1, #1
   3deb0:	teqne	r2, r3
   3deb4:	mvnsne	ip, r2, asr #24
   3deb8:	mvnsne	ip, r3, asr #24
   3debc:	beq	3dfb4 <fb_value_set_visit@@Base+0x530>
   3dec0:	lsr	r2, r2, #24
   3dec4:	rsbs	r3, r2, r3, lsr #24
   3dec8:	addgt	r2, r2, r3
   3decc:	eorgt	r1, r0, r1
   3ded0:	eorgt	r0, r1, r0
   3ded4:	eorgt	r1, r0, r1
   3ded8:	rsblt	r3, r3, #0
   3dedc:	cmp	r3, #25
   3dee0:	bxhi	lr
   3dee4:	tst	r0, #-2147483648	; 0x80000000
   3dee8:	orr	r0, r0, #8388608	; 0x800000
   3deec:	bic	r0, r0, #-16777216	; 0xff000000
   3def0:	rsbne	r0, r0, #0
   3def4:	tst	r1, #-2147483648	; 0x80000000
   3def8:	orr	r1, r1, #8388608	; 0x800000
   3defc:	bic	r1, r1, #-16777216	; 0xff000000
   3df00:	rsbne	r1, r1, #0
   3df04:	teq	r2, r3
   3df08:	beq	3df9c <fb_value_set_visit@@Base+0x518>
   3df0c:	sub	r2, r2, #1
   3df10:	adds	r0, r0, r1, asr r3
   3df14:	rsb	r3, r3, #32
   3df18:	lsl	r1, r1, r3
   3df1c:	and	r3, r0, #-2147483648	; 0x80000000
   3df20:	bpl	3df2c <fb_value_set_visit@@Base+0x4a8>
   3df24:	rsbs	r1, r1, #0
   3df28:	rsc	r0, r0, #0
   3df2c:	cmp	r0, #8388608	; 0x800000
   3df30:	bcc	3df64 <fb_value_set_visit@@Base+0x4e0>
   3df34:	cmp	r0, #16777216	; 0x1000000
   3df38:	bcc	3df50 <fb_value_set_visit@@Base+0x4cc>
   3df3c:	lsrs	r0, r0, #1
   3df40:	rrx	r1, r1
   3df44:	add	r2, r2, #1
   3df48:	cmp	r2, #254	; 0xfe
   3df4c:	bcs	3e008 <fb_value_set_visit@@Base+0x584>
   3df50:	cmp	r1, #-2147483648	; 0x80000000
   3df54:	adc	r0, r0, r2, lsl #23
   3df58:	biceq	r0, r0, #1
   3df5c:	orr	r0, r0, r3
   3df60:	bx	lr
   3df64:	lsls	r1, r1, #1
   3df68:	adc	r0, r0, r0
   3df6c:	tst	r0, #8388608	; 0x800000
   3df70:	sub	r2, r2, #1
   3df74:	bne	3df50 <fb_value_set_visit@@Base+0x4cc>
   3df78:	clz	ip, r0
   3df7c:	sub	ip, ip, #8
   3df80:	subs	r2, r2, ip
   3df84:	lsl	r0, r0, ip
   3df88:	addge	r0, r0, r2, lsl #23
   3df8c:	rsblt	r2, r2, #0
   3df90:	orrge	r0, r0, r3
   3df94:	orrlt	r0, r3, r0, lsr r2
   3df98:	bx	lr
   3df9c:	teq	r2, #0
   3dfa0:	eor	r1, r1, #8388608	; 0x800000
   3dfa4:	eoreq	r0, r0, #8388608	; 0x800000
   3dfa8:	addeq	r2, r2, #1
   3dfac:	subne	r3, r3, #1
   3dfb0:	b	3df0c <fb_value_set_visit@@Base+0x488>
   3dfb4:	lsl	r3, r1, #1
   3dfb8:	mvns	ip, r2, asr #24
   3dfbc:	mvnsne	ip, r3, asr #24
   3dfc0:	beq	3e014 <fb_value_set_visit@@Base+0x590>
   3dfc4:	teq	r2, r3
   3dfc8:	beq	3dfd8 <fb_value_set_visit@@Base+0x554>
   3dfcc:	teq	r2, #0
   3dfd0:	moveq	r0, r1
   3dfd4:	bx	lr
   3dfd8:	teq	r0, r1
   3dfdc:	movne	r0, #0
   3dfe0:	bxne	lr
   3dfe4:	tst	r2, #-16777216	; 0xff000000
   3dfe8:	bne	3dff8 <fb_value_set_visit@@Base+0x574>
   3dfec:	lsls	r0, r0, #1
   3dff0:	orrcs	r0, r0, #-2147483648	; 0x80000000
   3dff4:	bx	lr
   3dff8:	adds	r2, r2, #33554432	; 0x2000000
   3dffc:	addcc	r0, r0, #8388608	; 0x800000
   3e000:	bxcc	lr
   3e004:	and	r3, r0, #-2147483648	; 0x80000000
   3e008:	orr	r0, r3, #2130706432	; 0x7f000000
   3e00c:	orr	r0, r0, #8388608	; 0x800000
   3e010:	bx	lr
   3e014:	mvns	r2, r2, asr #24
   3e018:	movne	r0, r1
   3e01c:	mvnseq	r3, r3, asr #24
   3e020:	movne	r1, r0
   3e024:	lsls	r2, r0, #9
   3e028:	lslseq	r3, r1, #9
   3e02c:	teqeq	r0, r1
   3e030:	orrne	r0, r0, #4194304	; 0x400000
   3e034:	bx	lr
   3e038:	mov	r3, #0
   3e03c:	b	3e048 <fb_value_set_visit@@Base+0x5c4>
   3e040:	ands	r3, r0, #-2147483648	; 0x80000000
   3e044:	rsbmi	r0, r0, #0
   3e048:	movs	ip, r0
   3e04c:	bxeq	lr
   3e050:	orr	r3, r3, #1258291200	; 0x4b000000
   3e054:	mov	r1, r0
   3e058:	mov	r0, #0
   3e05c:	b	3e0a0 <fb_value_set_visit@@Base+0x61c>
   3e060:	orrs	r2, r0, r1
   3e064:	bxeq	lr
   3e068:	mov	r3, #0
   3e06c:	b	3e088 <fb_value_set_visit@@Base+0x604>
   3e070:	orrs	r2, r0, r1
   3e074:	bxeq	lr
   3e078:	ands	r3, r1, #-2147483648	; 0x80000000
   3e07c:	bpl	3e088 <fb_value_set_visit@@Base+0x604>
   3e080:	rsbs	r0, r0, #0
   3e084:	rsc	r1, r1, #0
   3e088:	movs	ip, r1
   3e08c:	moveq	ip, r0
   3e090:	moveq	r1, r0
   3e094:	moveq	r0, #0
   3e098:	orr	r3, r3, #1526726656	; 0x5b000000
   3e09c:	subeq	r3, r3, #268435456	; 0x10000000
   3e0a0:	sub	r3, r3, #8388608	; 0x800000
   3e0a4:	clz	r2, ip
   3e0a8:	subs	r2, r2, #8
   3e0ac:	sub	r3, r3, r2, lsl #23
   3e0b0:	blt	3e0d0 <fb_value_set_visit@@Base+0x64c>
   3e0b4:	add	r3, r3, r1, lsl r2
   3e0b8:	lsl	ip, r0, r2
   3e0bc:	rsb	r2, r2, #32
   3e0c0:	cmp	ip, #-2147483648	; 0x80000000
   3e0c4:	adc	r0, r3, r0, lsr r2
   3e0c8:	biceq	r0, r0, #1
   3e0cc:	bx	lr
   3e0d0:	add	r2, r2, #32
   3e0d4:	lsl	ip, r1, r2
   3e0d8:	rsb	r2, r2, #32
   3e0dc:	orrs	r0, r0, ip, lsl #1
   3e0e0:	adc	r0, r3, r1, lsr r2
   3e0e4:	biceq	r0, r0, ip, lsr #31
   3e0e8:	bx	lr
   3e0ec:	cmp	r3, #0
   3e0f0:	cmpeq	r2, #0
   3e0f4:	bne	3e10c <fb_value_set_visit@@Base+0x688>
   3e0f8:	cmp	r1, #0
   3e0fc:	cmpeq	r0, #0
   3e100:	mvnne	r1, #0
   3e104:	mvnne	r0, #0
   3e108:	b	3e128 <fb_value_set_visit@@Base+0x6a4>
   3e10c:	sub	sp, sp, #8
   3e110:	push	{sp, lr}
   3e114:	bl	3e220 <fb_value_set_visit@@Base+0x79c>
   3e118:	ldr	lr, [sp, #4]
   3e11c:	add	sp, sp, #8
   3e120:	pop	{r2, r3}
   3e124:	bx	lr
   3e128:	push	{r1, lr}
   3e12c:	mov	r0, #8
   3e130:	bl	13ea4 <raise@plt>
   3e134:	pop	{r1, pc}
   3e138:	vmov	s15, r0
   3e13c:	vcmpe.f32	s15, #0.0
   3e140:	vmrs	APSR_nzcv, fpscr
   3e144:	bmi	3e14c <fb_value_set_visit@@Base+0x6c8>
   3e148:	b	3e190 <fb_value_set_visit@@Base+0x70c>
   3e14c:	push	{r4, lr}
   3e150:	eor	r0, r0, #-2147483648	; 0x80000000
   3e154:	bl	3e190 <fb_value_set_visit@@Base+0x70c>
   3e158:	rsbs	r0, r0, #0
   3e15c:	rsc	r1, r1, #0
   3e160:	pop	{r4, pc}
   3e164:	vmov	d7, r0, r1
   3e168:	vcmpe.f64	d7, #0.0
   3e16c:	vmrs	APSR_nzcv, fpscr
   3e170:	bmi	3e178 <fb_value_set_visit@@Base+0x6f4>
   3e174:	b	3e1d8 <fb_value_set_visit@@Base+0x754>
   3e178:	push	{r4, lr}
   3e17c:	eor	r1, r1, #-2147483648	; 0x80000000
   3e180:	bl	3e1d8 <fb_value_set_visit@@Base+0x754>
   3e184:	rsbs	r0, r0, #0
   3e188:	rsc	r1, r1, #0
   3e18c:	pop	{r4, pc}
   3e190:	vmov	s15, r0
   3e194:	vldr	d6, [pc, #44]	; 3e1c8 <fb_value_set_visit@@Base+0x744>
   3e198:	vldr	d5, [pc, #48]	; 3e1d0 <fb_value_set_visit@@Base+0x74c>
   3e19c:	mov	r0, #0
   3e1a0:	vcvt.f64.f32	d7, s15
   3e1a4:	vmul.f64	d6, d7, d6
   3e1a8:	vcvt.u32.f64	s12, d6
   3e1ac:	vcvt.f64.u32	d4, s12
   3e1b0:	vmov	r1, s12
   3e1b4:	vmls.f64	d7, d4, d5
   3e1b8:	vcvt.u32.f64	s14, d7
   3e1bc:	vmov	r3, s14
   3e1c0:	orr	r0, r0, r3
   3e1c4:	bx	lr
   3e1c8:	andeq	r0, r0, r0
   3e1cc:	ldclcc	0, cr0, [r0]
   3e1d0:	andeq	r0, r0, r0
   3e1d4:	mvnsmi	r0, r0
   3e1d8:	vmov	d7, r0, r1
   3e1dc:	vldr	d6, [pc, #44]	; 3e210 <fb_value_set_visit@@Base+0x78c>
   3e1e0:	vldr	d5, [pc, #48]	; 3e218 <fb_value_set_visit@@Base+0x794>
   3e1e4:	mov	r0, #0
   3e1e8:	vmul.f64	d6, d7, d6
   3e1ec:	vcvt.u32.f64	s12, d6
   3e1f0:	vcvt.f64.u32	d4, s12
   3e1f4:	vmov	r1, s12
   3e1f8:	vmls.f64	d7, d4, d5
   3e1fc:	vcvt.u32.f64	s14, d7
   3e200:	vmov	r3, s14
   3e204:	orr	r0, r0, r3
   3e208:	bx	lr
   3e20c:	nop			; (mov r0, r0)
   3e210:	andeq	r0, r0, r0
   3e214:	ldclcc	0, cr0, [r0]
   3e218:	andeq	r0, r0, r0
   3e21c:	mvnsmi	r0, r0
   3e220:	cmp	r1, r3
   3e224:	push	{r4, r5, r6, r7, r8, r9, lr}
   3e228:	cmpeq	r0, r2
   3e22c:	mov	r4, r0
   3e230:	mov	r5, r1
   3e234:	ldr	r9, [sp, #28]
   3e238:	movcc	r0, #0
   3e23c:	movcc	r1, #0
   3e240:	bcc	3e338 <fb_value_set_visit@@Base+0x8b4>
   3e244:	cmp	r3, #0
   3e248:	clzeq	ip, r2
   3e24c:	clzne	ip, r3
   3e250:	addeq	ip, ip, #32
   3e254:	cmp	r5, #0
   3e258:	clzeq	r1, r4
   3e25c:	addeq	r1, r1, #32
   3e260:	clzne	r1, r5
   3e264:	sub	ip, ip, r1
   3e268:	sub	lr, ip, #32
   3e26c:	lsl	r7, r3, ip
   3e270:	rsb	r8, ip, #32
   3e274:	orr	r7, r7, r2, lsl lr
   3e278:	orr	r7, r7, r2, lsr r8
   3e27c:	lsl	r6, r2, ip
   3e280:	cmp	r5, r7
   3e284:	cmpeq	r4, r6
   3e288:	movcc	r0, #0
   3e28c:	movcc	r1, #0
   3e290:	bcc	3e2ac <fb_value_set_visit@@Base+0x828>
   3e294:	mov	r3, #1
   3e298:	subs	r4, r4, r6
   3e29c:	lsl	r1, r3, lr
   3e2a0:	lsl	r0, r3, ip
   3e2a4:	orr	r1, r1, r3, lsr r8
   3e2a8:	sbc	r5, r5, r7
   3e2ac:	cmp	ip, #0
   3e2b0:	beq	3e338 <fb_value_set_visit@@Base+0x8b4>
   3e2b4:	lsrs	r3, r7, #1
   3e2b8:	rrx	r2, r6
   3e2bc:	mov	r6, ip
   3e2c0:	b	3e2e4 <fb_value_set_visit@@Base+0x860>
   3e2c4:	subs	r4, r4, r2
   3e2c8:	sbc	r5, r5, r3
   3e2cc:	adds	r4, r4, r4
   3e2d0:	adc	r5, r5, r5
   3e2d4:	adds	r4, r4, #1
   3e2d8:	adc	r5, r5, #0
   3e2dc:	subs	r6, r6, #1
   3e2e0:	beq	3e300 <fb_value_set_visit@@Base+0x87c>
   3e2e4:	cmp	r5, r3
   3e2e8:	cmpeq	r4, r2
   3e2ec:	bcs	3e2c4 <fb_value_set_visit@@Base+0x840>
   3e2f0:	adds	r4, r4, r4
   3e2f4:	adc	r5, r5, r5
   3e2f8:	subs	r6, r6, #1
   3e2fc:	bne	3e2e4 <fb_value_set_visit@@Base+0x860>
   3e300:	lsr	r6, r4, ip
   3e304:	lsr	r7, r5, ip
   3e308:	orr	r6, r6, r5, lsl r8
   3e30c:	adds	r2, r0, r4
   3e310:	orr	r6, r6, r5, lsr lr
   3e314:	adc	r3, r1, r5
   3e318:	lsl	r1, r7, ip
   3e31c:	orr	r1, r1, r6, lsl lr
   3e320:	lsl	r0, r6, ip
   3e324:	orr	r1, r1, r6, lsr r8
   3e328:	subs	r0, r2, r0
   3e32c:	mov	r4, r6
   3e330:	mov	r5, r7
   3e334:	sbc	r1, r3, r1
   3e338:	cmp	r9, #0
   3e33c:	popeq	{r4, r5, r6, r7, r8, r9, pc}
   3e340:	strd	r4, [r9]
   3e344:	pop	{r4, r5, r6, r7, r8, r9, pc}

0003e348 <__libc_csu_init@@Base>:
   3e348:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3e34c:	mov	r7, r0
   3e350:	ldr	r6, [pc, #72]	; 3e3a0 <__libc_csu_init@@Base+0x58>
   3e354:	ldr	r5, [pc, #72]	; 3e3a4 <__libc_csu_init@@Base+0x5c>
   3e358:	add	r6, pc, r6
   3e35c:	add	r5, pc, r5
   3e360:	sub	r6, r6, r5
   3e364:	mov	r8, r1
   3e368:	mov	r9, r2
   3e36c:	bl	13e78 <calloc@plt-0x20>
   3e370:	asrs	r6, r6, #2
   3e374:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   3e378:	mov	r4, #0
   3e37c:	add	r4, r4, #1
   3e380:	ldr	r3, [r5], #4
   3e384:	mov	r2, r9
   3e388:	mov	r1, r8
   3e38c:	mov	r0, r7
   3e390:	blx	r3
   3e394:	cmp	r6, r4
   3e398:	bne	3e37c <__libc_csu_init@@Base+0x34>
   3e39c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3e3a0:	andeq	fp, r2, r0, lsl #23
   3e3a4:	andeq	fp, r2, r8, ror fp

0003e3a8 <__libc_csu_fini@@Base>:
   3e3a8:	bx	lr

Disassembly of section .fini:

0003e3ac <.fini>:
   3e3ac:	push	{r3, lr}
   3e3b0:	pop	{r3, pc}
