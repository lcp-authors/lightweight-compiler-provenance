
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/test_json_parser:     file format elf32-littlearm


Disassembly of section .init:

00012a40 <.init>:
   12a40:	push	{r3, lr}
   12a44:	bl	12bcc <_start@@Base+0x3c>
   12a48:	pop	{r3, pc}

Disassembly of section .plt:

00012a4c <fopen@plt-0x14>:
   12a4c:	push	{lr}		; (str lr, [sp, #-4]!)
   12a50:	ldr	lr, [pc, #4]	; 12a5c <fopen@plt-0x4>
   12a54:	add	lr, pc, lr
   12a58:	ldr	pc, [lr, #8]!
   12a5c:	andeq	r1, r3, r4, lsr #11

00012a60 <fopen@plt>:
   12a60:	add	ip, pc, #0, 12
   12a64:	add	ip, ip, #200704	; 0x31000
   12a68:	ldr	pc, [ip, #1444]!	; 0x5a4

00012a6c <free@plt>:
   12a6c:	add	ip, pc, #0, 12
   12a70:	add	ip, ip, #200704	; 0x31000
   12a74:	ldr	pc, [ip, #1436]!	; 0x59c

00012a78 <memcpy@plt>:
   12a78:	add	ip, pc, #0, 12
   12a7c:	add	ip, ip, #200704	; 0x31000
   12a80:	ldr	pc, [ip, #1428]!	; 0x594

00012a84 <ftell@plt>:
   12a84:	add	ip, pc, #0, 12
   12a88:	add	ip, ip, #200704	; 0x31000
   12a8c:	ldr	pc, [ip, #1420]!	; 0x58c

00012a90 <memcmp@plt>:
   12a90:	add	ip, pc, #0, 12
   12a94:	add	ip, ip, #200704	; 0x31000
   12a98:	ldr	pc, [ip, #1412]!	; 0x584

00012a9c <rewind@plt>:
   12a9c:	add	ip, pc, #0, 12
   12aa0:	add	ip, ip, #200704	; 0x31000
   12aa4:	ldr	pc, [ip, #1404]!	; 0x57c

00012aa8 <__isinff@plt>:
   12aa8:	add	ip, pc, #0, 12
   12aac:	add	ip, ip, #200704	; 0x31000
   12ab0:	ldr	pc, [ip, #1396]!	; 0x574

00012ab4 <__isinf@plt>:
   12ab4:	add	ip, pc, #0, 12
   12ab8:	add	ip, ip, #200704	; 0x31000
   12abc:	ldr	pc, [ip, #1388]!	; 0x56c

00012ac0 <realloc@plt>:
   12ac0:	add	ip, pc, #0, 12
   12ac4:	add	ip, ip, #200704	; 0x31000
   12ac8:	ldr	pc, [ip, #1380]!	; 0x564

00012acc <fread@plt>:
   12acc:	add	ip, pc, #0, 12
   12ad0:	add	ip, ip, #200704	; 0x31000
   12ad4:	ldr	pc, [ip, #1372]!	; 0x55c

00012ad8 <malloc@plt>:
   12ad8:	add	ip, pc, #0, 12
   12adc:	add	ip, ip, #200704	; 0x31000
   12ae0:	ldr	pc, [ip, #1364]!	; 0x554

00012ae4 <__libc_start_main@plt>:
   12ae4:	add	ip, pc, #0, 12
   12ae8:	add	ip, ip, #200704	; 0x31000
   12aec:	ldr	pc, [ip, #1356]!	; 0x54c

00012af0 <__gmon_start__@plt>:
   12af0:	add	ip, pc, #0, 12
   12af4:	add	ip, ip, #200704	; 0x31000
   12af8:	ldr	pc, [ip, #1348]!	; 0x544

00012afc <exit@plt>:
   12afc:	add	ip, pc, #0, 12
   12b00:	add	ip, ip, #200704	; 0x31000
   12b04:	ldr	pc, [ip, #1340]!	; 0x53c

00012b08 <strlen@plt>:
   12b08:	add	ip, pc, #0, 12
   12b0c:	add	ip, ip, #200704	; 0x31000
   12b10:	ldr	pc, [ip, #1332]!	; 0x534

00012b14 <fprintf@plt>:
   12b14:	add	ip, pc, #0, 12
   12b18:	add	ip, ip, #200704	; 0x31000
   12b1c:	ldr	pc, [ip, #1324]!	; 0x52c

00012b20 <posix_memalign@plt>:
   12b20:	add	ip, pc, #0, 12
   12b24:	add	ip, ip, #200704	; 0x31000
   12b28:	ldr	pc, [ip, #1316]!	; 0x524

00012b2c <memset@plt>:
   12b2c:	add	ip, pc, #0, 12
   12b30:	add	ip, ip, #200704	; 0x31000
   12b34:	ldr	pc, [ip, #1308]!	; 0x51c

00012b38 <strncpy@plt>:
   12b38:	add	ip, pc, #0, 12
   12b3c:	add	ip, ip, #200704	; 0x31000
   12b40:	ldr	pc, [ip, #1300]!	; 0x514

00012b44 <strtod@plt>:
   12b44:	add	ip, pc, #0, 12
   12b48:	add	ip, ip, #200704	; 0x31000
   12b4c:	ldr	pc, [ip, #1292]!	; 0x50c

00012b50 <memchr@plt>:
   12b50:	add	ip, pc, #0, 12
   12b54:	add	ip, ip, #200704	; 0x31000
   12b58:	ldr	pc, [ip, #1284]!	; 0x504

00012b5c <fclose@plt>:
   12b5c:	add	ip, pc, #0, 12
   12b60:	add	ip, ip, #200704	; 0x31000
   12b64:	ldr	pc, [ip, #1276]!	; 0x4fc

00012b68 <fseek@plt>:
   12b68:	add	ip, pc, #0, 12
   12b6c:	add	ip, ip, #200704	; 0x31000
   12b70:	ldr	pc, [ip, #1268]!	; 0x4f4

00012b74 <abort@plt>:
   12b74:	add	ip, pc, #0, 12
   12b78:	add	ip, ip, #200704	; 0x31000
   12b7c:	ldr	pc, [ip, #1260]!	; 0x4ec

00012b80 <__assert_fail@plt>:
   12b80:	add	ip, pc, #0, 12
   12b84:	add	ip, ip, #200704	; 0x31000
   12b88:	ldr	pc, [ip, #1252]!	; 0x4e4

Disassembly of section .text:

00012b90 <_start@@Base>:
   12b90:	mov	fp, #0
   12b94:	mov	lr, #0
   12b98:	pop	{r1}		; (ldr r1, [sp], #4)
   12b9c:	mov	r2, sp
   12ba0:	push	{r2}		; (str r2, [sp, #-4]!)
   12ba4:	push	{r0}		; (str r0, [sp, #-4]!)
   12ba8:	ldr	ip, [pc, #16]	; 12bc0 <_start@@Base+0x30>
   12bac:	push	{ip}		; (str ip, [sp, #-4]!)
   12bb0:	ldr	r0, [pc, #12]	; 12bc4 <_start@@Base+0x34>
   12bb4:	ldr	r3, [pc, #12]	; 12bc8 <_start@@Base+0x38>
   12bb8:	bl	12ae4 <__libc_start_main@plt>
   12bbc:	bl	12b74 <abort@plt>
   12bc0:	muleq	r3, r0, pc	; <UNPREDICTABLE>
   12bc4:	andeq	r3, r1, ip, ror ip
   12bc8:	andeq	r0, r3, r0, lsr pc
   12bcc:	ldr	r3, [pc, #20]	; 12be8 <_start@@Base+0x58>
   12bd0:	ldr	r2, [pc, #20]	; 12bec <_start@@Base+0x5c>
   12bd4:	add	r3, pc, r3
   12bd8:	ldr	r2, [r3, r2]
   12bdc:	cmp	r2, #0
   12be0:	bxeq	lr
   12be4:	b	12af0 <__gmon_start__@plt>
   12be8:	andeq	r1, r3, r4, lsr #8
   12bec:	andeq	r0, r0, r8, ror r0
   12bf0:	ldr	r0, [pc, #24]	; 12c10 <_start@@Base+0x80>
   12bf4:	ldr	r3, [pc, #24]	; 12c14 <_start@@Base+0x84>
   12bf8:	cmp	r3, r0
   12bfc:	bxeq	lr
   12c00:	ldr	r3, [pc, #16]	; 12c18 <_start@@Base+0x88>
   12c04:	cmp	r3, #0
   12c08:	bxeq	lr
   12c0c:	bx	r3
   12c10:	ldrdeq	r4, [r4], -r8
   12c14:	ldrdeq	r4, [r4], -r8
   12c18:	andeq	r0, r0, r0
   12c1c:	ldr	r0, [pc, #36]	; 12c48 <_start@@Base+0xb8>
   12c20:	ldr	r1, [pc, #36]	; 12c4c <_start@@Base+0xbc>
   12c24:	sub	r1, r1, r0
   12c28:	asr	r1, r1, #2
   12c2c:	add	r1, r1, r1, lsr #31
   12c30:	asrs	r1, r1, #1
   12c34:	bxeq	lr
   12c38:	ldr	r3, [pc, #16]	; 12c50 <_start@@Base+0xc0>
   12c3c:	cmp	r3, #0
   12c40:	bxeq	lr
   12c44:	bx	r3
   12c48:	ldrdeq	r4, [r4], -r8
   12c4c:	ldrdeq	r4, [r4], -r8
   12c50:	andeq	r0, r0, r0
   12c54:	push	{r4, lr}
   12c58:	ldr	r4, [pc, #24]	; 12c78 <_start@@Base+0xe8>
   12c5c:	ldrb	r3, [r4]
   12c60:	cmp	r3, #0
   12c64:	popne	{r4, pc}
   12c68:	bl	12bf0 <_start@@Base+0x60>
   12c6c:	mov	r3, #1
   12c70:	strb	r3, [r4]
   12c74:	pop	{r4, pc}
   12c78:	ldrdeq	r4, [r4], -r8
   12c7c:	b	12c1c <_start@@Base+0x8c>

00012c80 <verify_parse@@Base>:
   12c80:	push	{fp, lr}
   12c84:	mov	fp, sp
   12c88:	sub	sp, sp, #16
   12c8c:	ldr	r1, [pc, #592]	; 12ee4 <verify_parse@@Base+0x264>
   12c90:	add	r1, pc, r1
   12c94:	str	r0, [fp, #-4]
   12c98:	ldr	r0, [fp, #-4]
   12c9c:	bl	12f54 <verify_parse@@Base+0x2d4>
   12ca0:	str	r0, [sp]
   12ca4:	ldr	r0, [sp]
   12ca8:	bl	12fc4 <verify_parse@@Base+0x344>
   12cac:	str	r0, [sp, #4]
   12cb0:	ldr	r0, [sp, #4]
   12cb4:	movw	r1, #0
   12cb8:	cmp	r0, r1
   12cbc:	bne	12ce0 <verify_parse@@Base+0x60>
   12cc0:	ldr	r0, [pc, #544]	; 12ee8 <verify_parse@@Base+0x268>
   12cc4:	add	r0, pc, r0
   12cc8:	ldr	r1, [pc, #540]	; 12eec <verify_parse@@Base+0x26c>
   12ccc:	add	r1, pc, r1
   12cd0:	ldr	r2, [pc, #536]	; 12ef0 <verify_parse@@Base+0x270>
   12cd4:	add	r3, pc, r2
   12cd8:	movw	r2, #45	; 0x2d
   12cdc:	bl	12b80 <__assert_fail@plt>
   12ce0:	b	12ce4 <verify_parse@@Base+0x64>
   12ce4:	b	12ce8 <verify_parse@@Base+0x68>
   12ce8:	ldr	r0, [sp, #4]
   12cec:	bl	130a8 <verify_parse@@Base+0x428>
   12cf0:	vmov.f32	s2, #112	; 0x3f800000  1.0
   12cf4:	vcmp.f32	s0, s2
   12cf8:	vmrs	APSR_nzcv, fpscr
   12cfc:	beq	12d20 <verify_parse@@Base+0xa0>
   12d00:	ldr	r0, [pc, #492]	; 12ef4 <verify_parse@@Base+0x274>
   12d04:	add	r0, pc, r0
   12d08:	ldr	r1, [pc, #488]	; 12ef8 <verify_parse@@Base+0x278>
   12d0c:	add	r1, pc, r1
   12d10:	ldr	r2, [pc, #484]	; 12efc <verify_parse@@Base+0x27c>
   12d14:	add	r3, pc, r2
   12d18:	movw	r2, #46	; 0x2e
   12d1c:	bl	12b80 <__assert_fail@plt>
   12d20:	b	12d24 <verify_parse@@Base+0xa4>
   12d24:	b	12d28 <verify_parse@@Base+0xa8>
   12d28:	ldr	r0, [sp, #4]
   12d2c:	bl	130f4 <verify_parse@@Base+0x474>
   12d30:	vmov.f32	s2, #0	; 0x40000000  2.0
   12d34:	vcmp.f32	s0, s2
   12d38:	vmrs	APSR_nzcv, fpscr
   12d3c:	beq	12d60 <verify_parse@@Base+0xe0>
   12d40:	ldr	r0, [pc, #440]	; 12f00 <verify_parse@@Base+0x280>
   12d44:	add	r0, pc, r0
   12d48:	ldr	r1, [pc, #436]	; 12f04 <verify_parse@@Base+0x284>
   12d4c:	add	r1, pc, r1
   12d50:	ldr	r2, [pc, #432]	; 12f08 <verify_parse@@Base+0x288>
   12d54:	add	r3, pc, r2
   12d58:	movw	r2, #47	; 0x2f
   12d5c:	bl	12b80 <__assert_fail@plt>
   12d60:	b	12d64 <verify_parse@@Base+0xe4>
   12d64:	b	12d68 <verify_parse@@Base+0xe8>
   12d68:	ldr	r0, [sp, #4]
   12d6c:	bl	13144 <verify_parse@@Base+0x4c4>
   12d70:	vmov.f32	s2, #8	; 0x40400000  3.0
   12d74:	vcmp.f32	s0, s2
   12d78:	vmrs	APSR_nzcv, fpscr
   12d7c:	beq	12da0 <verify_parse@@Base+0x120>
   12d80:	ldr	r0, [pc, #388]	; 12f0c <verify_parse@@Base+0x28c>
   12d84:	add	r0, pc, r0
   12d88:	ldr	r1, [pc, #384]	; 12f10 <verify_parse@@Base+0x290>
   12d8c:	add	r1, pc, r1
   12d90:	ldr	r2, [pc, #380]	; 12f14 <verify_parse@@Base+0x294>
   12d94:	add	r3, pc, r2
   12d98:	movw	r2, #48	; 0x30
   12d9c:	bl	12b80 <__assert_fail@plt>
   12da0:	b	12da4 <verify_parse@@Base+0x124>
   12da4:	b	12da8 <verify_parse@@Base+0x128>
   12da8:	ldr	r0, [sp, #4]
   12dac:	bl	13198 <verify_parse@@Base+0x518>
   12db0:	vmov.f64	d16, #8	; 0x40400000  3.0
   12db4:	vcmp.f64	d0, d16
   12db8:	vmrs	APSR_nzcv, fpscr
   12dbc:	beq	12de0 <verify_parse@@Base+0x160>
   12dc0:	ldr	r0, [pc, #336]	; 12f18 <verify_parse@@Base+0x298>
   12dc4:	add	r0, pc, r0
   12dc8:	ldr	r1, [pc, #332]	; 12f1c <verify_parse@@Base+0x29c>
   12dcc:	add	r1, pc, r1
   12dd0:	ldr	r2, [pc, #328]	; 12f20 <verify_parse@@Base+0x2a0>
   12dd4:	add	r3, pc, r2
   12dd8:	movw	r2, #49	; 0x31
   12ddc:	bl	12b80 <__assert_fail@plt>
   12de0:	b	12de4 <verify_parse@@Base+0x164>
   12de4:	b	12de8 <verify_parse@@Base+0x168>
   12de8:	ldr	r0, [sp, #4]
   12dec:	bl	131f0 <verify_parse@@Base+0x570>
   12df0:	sxtb	r0, r0
   12df4:	cmp	r0, #2
   12df8:	beq	12e1c <verify_parse@@Base+0x19c>
   12dfc:	ldr	r0, [pc, #288]	; 12f24 <verify_parse@@Base+0x2a4>
   12e00:	add	r0, pc, r0
   12e04:	ldr	r1, [pc, #284]	; 12f28 <verify_parse@@Base+0x2a8>
   12e08:	add	r1, pc, r1
   12e0c:	ldr	r2, [pc, #280]	; 12f2c <verify_parse@@Base+0x2ac>
   12e10:	add	r3, pc, r2
   12e14:	movw	r2, #50	; 0x32
   12e18:	bl	12b80 <__assert_fail@plt>
   12e1c:	b	12e20 <verify_parse@@Base+0x1a0>
   12e20:	ldr	r0, [sp, #4]
   12e24:	bl	13244 <verify_parse@@Base+0x5c4>
   12e28:	str	r0, [sp, #8]
   12e2c:	ldr	r0, [sp, #8]
   12e30:	movw	r1, #0
   12e34:	cmp	r0, r1
   12e38:	bne	12e5c <verify_parse@@Base+0x1dc>
   12e3c:	ldr	r0, [pc, #236]	; 12f30 <verify_parse@@Base+0x2b0>
   12e40:	add	r0, pc, r0
   12e44:	ldr	r1, [pc, #232]	; 12f34 <verify_parse@@Base+0x2b4>
   12e48:	add	r1, pc, r1
   12e4c:	ldr	r2, [pc, #228]	; 12f38 <verify_parse@@Base+0x2b8>
   12e50:	add	r3, pc, r2
   12e54:	movw	r2, #52	; 0x34
   12e58:	bl	12b80 <__assert_fail@plt>
   12e5c:	b	12e60 <verify_parse@@Base+0x1e0>
   12e60:	b	12e64 <verify_parse@@Base+0x1e4>
   12e64:	ldr	r0, [sp, #8]
   12e68:	bl	13284 <verify_parse@@Base+0x604>
   12e6c:	sxth	r0, r0
   12e70:	cmp	r0, #5
   12e74:	beq	12e98 <verify_parse@@Base+0x218>
   12e78:	ldr	r0, [pc, #188]	; 12f3c <verify_parse@@Base+0x2bc>
   12e7c:	add	r0, pc, r0
   12e80:	ldr	r1, [pc, #184]	; 12f40 <verify_parse@@Base+0x2c0>
   12e84:	add	r1, pc, r1
   12e88:	ldr	r2, [pc, #180]	; 12f44 <verify_parse@@Base+0x2c4>
   12e8c:	add	r3, pc, r2
   12e90:	movw	r2, #53	; 0x35
   12e94:	bl	12b80 <__assert_fail@plt>
   12e98:	b	12e9c <verify_parse@@Base+0x21c>
   12e9c:	b	12ea0 <verify_parse@@Base+0x220>
   12ea0:	ldr	r0, [sp, #8]
   12ea4:	bl	132d4 <verify_parse@@Base+0x654>
   12ea8:	sxtb	r0, r0
   12eac:	cmp	r0, #6
   12eb0:	beq	12ed4 <verify_parse@@Base+0x254>
   12eb4:	ldr	r0, [pc, #140]	; 12f48 <verify_parse@@Base+0x2c8>
   12eb8:	add	r0, pc, r0
   12ebc:	ldr	r1, [pc, #136]	; 12f4c <verify_parse@@Base+0x2cc>
   12ec0:	add	r1, pc, r1
   12ec4:	ldr	r2, [pc, #132]	; 12f50 <verify_parse@@Base+0x2d0>
   12ec8:	add	r3, pc, r2
   12ecc:	movw	r2, #54	; 0x36
   12ed0:	bl	12b80 <__assert_fail@plt>
   12ed4:	b	12ed8 <verify_parse@@Base+0x258>
   12ed8:	movw	r0, #0
   12edc:	mov	sp, fp
   12ee0:	pop	{fp, pc}
   12ee4:	andeq	lr, r1, ip, lsl #6
   12ee8:	andeq	pc, r1, pc, ror r9	; <UNPREDICTABLE>
   12eec:	ldrdeq	lr, [r1], -r5
   12ef0:	andeq	lr, r1, r6, lsr r3
   12ef4:	andeq	pc, r1, pc, lsr r9	; <UNPREDICTABLE>
   12ef8:	muleq	r1, r5, r2
   12efc:	strdeq	lr, [r1], -r6
   12f00:	strdeq	pc, [r1], -pc	; <UNPREDICTABLE>
   12f04:	andeq	lr, r1, r5, asr r2
   12f08:			; <UNDEFINED> instruction: 0x0001e2b6
   12f0c:			; <UNDEFINED> instruction: 0x0001f8bf
   12f10:	andeq	lr, r1, r5, lsl r2
   12f14:	andeq	lr, r1, r6, ror r2
   12f18:	andeq	pc, r1, pc, ror r8	; <UNPREDICTABLE>
   12f1c:	ldrdeq	lr, [r1], -r5
   12f20:	andeq	lr, r1, r6, lsr r2
   12f24:	andeq	pc, r1, r3, asr #16
   12f28:	muleq	r1, r9, r1
   12f2c:	strdeq	lr, [r1], -sl
   12f30:	andeq	pc, r1, r3, lsl #16
   12f34:	andeq	lr, r1, r9, asr r1
   12f38:			; <UNDEFINED> instruction: 0x0001e1ba
   12f3c:	andeq	pc, r1, r7, asr #15
   12f40:	andeq	lr, r1, sp, lsl r1
   12f44:	andeq	lr, r1, lr, ror r1
   12f48:	andeq	pc, r1, fp, lsl #15
   12f4c:	andeq	lr, r1, r1, ror #1
   12f50:	andeq	lr, r1, r2, asr #2
   12f54:	push	{fp, lr}
   12f58:	mov	fp, sp
   12f5c:	sub	sp, sp, #16
   12f60:	str	r0, [fp, #-4]
   12f64:	str	r1, [sp, #8]
   12f68:	ldr	r0, [fp, #-4]
   12f6c:	movw	r1, #0
   12f70:	cmp	r0, r1
   12f74:	beq	12f8c <verify_parse@@Base+0x30c>
   12f78:	ldr	r0, [fp, #-4]
   12f7c:	ldr	r1, [sp, #8]
   12f80:	bl	13d38 <main@@Base+0xbc>
   12f84:	cmp	r0, #0
   12f88:	bne	12f98 <verify_parse@@Base+0x318>
   12f8c:	movw	r0, #0
   12f90:	str	r0, [sp, #4]
   12f94:	b	12fb8 <verify_parse@@Base+0x338>
   12f98:	ldr	r0, [fp, #-4]
   12f9c:	ldr	r1, [fp, #-4]
   12fa0:	str	r0, [sp]
   12fa4:	mov	r0, r1
   12fa8:	bl	13de4 <main@@Base+0x168>
   12fac:	ldr	r1, [sp]
   12fb0:	add	r0, r1, r0
   12fb4:	str	r0, [sp, #4]
   12fb8:	ldr	r0, [sp, #4]
   12fbc:	mov	sp, fp
   12fc0:	pop	{fp, pc}
   12fc4:	push	{fp, lr}
   12fc8:	mov	fp, sp
   12fcc:	sub	sp, sp, #24
   12fd0:	str	r0, [fp, #-8]
   12fd4:	movw	r0, #0
   12fd8:	strh	r0, [fp, #-10]
   12fdc:	ldr	r0, [fp, #-8]
   12fe0:	movw	r1, #0
   12fe4:	cmp	r0, r1
   12fe8:	beq	12ff4 <verify_parse@@Base+0x374>
   12fec:	b	12ff0 <verify_parse@@Base+0x370>
   12ff0:	b	13014 <verify_parse@@Base+0x394>
   12ff4:	ldr	r0, [pc, #160]	; 1309c <verify_parse@@Base+0x41c>
   12ff8:	add	r0, pc, r0
   12ffc:	ldr	r1, [pc, #156]	; 130a0 <verify_parse@@Base+0x420>
   13000:	add	r1, pc, r1
   13004:	ldr	r2, [pc, #152]	; 130a4 <verify_parse@@Base+0x424>
   13008:	add	r3, pc, r2
   1300c:	movw	r2, #696	; 0x2b8
   13010:	bl	12b80 <__assert_fail@plt>
   13014:	mov	r0, #0
   13018:	strh	r0, [sp, #12]
   1301c:	ldr	r0, [fp, #-8]
   13020:	str	r0, [sp, #4]
   13024:	bl	13e68 <main@@Base+0x1ec>
   13028:	ldr	lr, [sp, #4]
   1302c:	sub	r0, lr, r0
   13030:	str	r0, [sp, #8]
   13034:	ldr	r0, [sp, #8]
   13038:	bl	13e8c <main@@Base+0x210>
   1303c:	ldrh	lr, [sp, #12]
   13040:	add	lr, lr, #3
   13044:	lsl	lr, lr, #1
   13048:	cmp	r0, lr
   1304c:	bcc	13068 <verify_parse@@Base+0x3e8>
   13050:	ldr	r0, [sp, #8]
   13054:	ldrh	r1, [sp, #12]
   13058:	add	r0, r0, r1, lsl #1
   1305c:	add	r0, r0, #4
   13060:	bl	13e8c <main@@Base+0x210>
   13064:	strh	r0, [fp, #-10]
   13068:	ldrsh	r0, [fp, #-10]
   1306c:	cmp	r0, #0
   13070:	beq	13088 <verify_parse@@Base+0x408>
   13074:	ldr	r0, [fp, #-8]
   13078:	ldrh	r1, [fp, #-10]
   1307c:	add	r0, r0, r1
   13080:	str	r0, [fp, #-4]
   13084:	b	13090 <verify_parse@@Base+0x410>
   13088:	movw	r0, #0
   1308c:	str	r0, [fp, #-4]
   13090:	ldr	r0, [fp, #-4]
   13094:	mov	sp, fp
   13098:	pop	{fp, pc}
   1309c:	andeq	lr, r1, ip, lsr #2
   130a0:	andeq	lr, r1, sl, asr #2
   130a4:			; <UNDEFINED> instruction: 0x0001e1b8
   130a8:	push	{fp, lr}
   130ac:	mov	fp, sp
   130b0:	sub	sp, sp, #8
   130b4:	str	r0, [sp, #4]
   130b8:	ldr	r0, [sp, #4]
   130bc:	movw	r1, #0
   130c0:	cmp	r0, r1
   130c4:	beq	130d8 <verify_parse@@Base+0x458>
   130c8:	ldr	r0, [sp, #4]
   130cc:	bl	13edc <main@@Base+0x260>
   130d0:	vstr	s0, [sp]
   130d4:	b	130e4 <verify_parse@@Base+0x464>
   130d8:	vldr	s0, [pc, #16]	; 130f0 <verify_parse@@Base+0x470>
   130dc:	vstr	s0, [sp]
   130e0:	b	130e4 <verify_parse@@Base+0x464>
   130e4:	vldr	s0, [sp]
   130e8:	mov	sp, fp
   130ec:	pop	{fp, pc}
   130f0:	andeq	r0, r0, r0
   130f4:	push	{fp, lr}
   130f8:	mov	fp, sp
   130fc:	sub	sp, sp, #8
   13100:	str	r0, [sp, #4]
   13104:	ldr	r0, [sp, #4]
   13108:	movw	r1, #0
   1310c:	cmp	r0, r1
   13110:	beq	13128 <verify_parse@@Base+0x4a8>
   13114:	ldr	r0, [sp, #4]
   13118:	add	r0, r0, #4
   1311c:	bl	13edc <main@@Base+0x260>
   13120:	vstr	s0, [sp]
   13124:	b	13134 <verify_parse@@Base+0x4b4>
   13128:	vldr	s0, [pc, #16]	; 13140 <verify_parse@@Base+0x4c0>
   1312c:	vstr	s0, [sp]
   13130:	b	13134 <verify_parse@@Base+0x4b4>
   13134:	vldr	s0, [sp]
   13138:	mov	sp, fp
   1313c:	pop	{fp, pc}
   13140:	andeq	r0, r0, r0
   13144:	push	{fp, lr}
   13148:	mov	fp, sp
   1314c:	sub	sp, sp, #8
   13150:	str	r0, [sp, #4]
   13154:	ldr	r0, [sp, #4]
   13158:	movw	r1, #0
   1315c:	cmp	r0, r1
   13160:	beq	13178 <verify_parse@@Base+0x4f8>
   13164:	ldr	r0, [sp, #4]
   13168:	add	r0, r0, #8
   1316c:	bl	13edc <main@@Base+0x260>
   13170:	vstr	s0, [sp]
   13174:	b	13184 <verify_parse@@Base+0x504>
   13178:	vldr	s0, [pc, #16]	; 13190 <verify_parse@@Base+0x510>
   1317c:	vstr	s0, [sp]
   13180:	b	13184 <verify_parse@@Base+0x504>
   13184:	vldr	s0, [sp]
   13188:	mov	sp, fp
   1318c:	pop	{fp, pc}
   13190:	andeq	r0, r0, r0
   13194:	nop	{0}
   13198:	push	{fp, lr}
   1319c:	mov	fp, sp
   131a0:	sub	sp, sp, #16
   131a4:	str	r0, [fp, #-4]
   131a8:	ldr	r0, [fp, #-4]
   131ac:	movw	r1, #0
   131b0:	cmp	r0, r1
   131b4:	beq	131cc <verify_parse@@Base+0x54c>
   131b8:	ldr	r0, [fp, #-4]
   131bc:	add	r0, r0, #16
   131c0:	bl	13f24 <main@@Base+0x2a8>
   131c4:	vstr	d0, [sp]
   131c8:	b	131d8 <verify_parse@@Base+0x558>
   131cc:	vldr	d16, [pc, #20]	; 131e8 <verify_parse@@Base+0x568>
   131d0:	vstr	d16, [sp]
   131d4:	b	131d8 <verify_parse@@Base+0x558>
   131d8:	vldr	d16, [sp]
   131dc:	vmov.f64	d0, d16
   131e0:	mov	sp, fp
   131e4:	pop	{fp, pc}
	...
   131f0:	push	{fp, lr}
   131f4:	mov	fp, sp
   131f8:	sub	sp, sp, #8
   131fc:	str	r0, [sp, #4]
   13200:	ldr	r0, [sp, #4]
   13204:	movw	r1, #0
   13208:	cmp	r0, r1
   1320c:	beq	13228 <verify_parse@@Base+0x5a8>
   13210:	ldr	r0, [sp, #4]
   13214:	add	r0, r0, #24
   13218:	bl	13f64 <main@@Base+0x2e8>
   1321c:	sxtb	r0, r0
   13220:	str	r0, [sp]
   13224:	b	13234 <verify_parse@@Base+0x5b4>
   13228:	movw	r0, #0
   1322c:	str	r0, [sp]
   13230:	b	13234 <verify_parse@@Base+0x5b4>
   13234:	ldr	r0, [sp]
   13238:	sxtb	r0, r0
   1323c:	mov	sp, fp
   13240:	pop	{fp, pc}
   13244:	sub	sp, sp, #8
   13248:	str	r0, [sp, #4]
   1324c:	ldr	r0, [sp, #4]
   13250:	movw	r1, #0
   13254:	cmp	r0, r1
   13258:	beq	1326c <verify_parse@@Base+0x5ec>
   1325c:	ldr	r0, [sp, #4]
   13260:	add	r0, r0, #26
   13264:	str	r0, [sp]
   13268:	b	13278 <verify_parse@@Base+0x5f8>
   1326c:	movw	r0, #0
   13270:	str	r0, [sp]
   13274:	b	13278 <verify_parse@@Base+0x5f8>
   13278:	ldr	r0, [sp]
   1327c:	add	sp, sp, #8
   13280:	bx	lr
   13284:	push	{fp, lr}
   13288:	mov	fp, sp
   1328c:	sub	sp, sp, #8
   13290:	str	r0, [sp, #4]
   13294:	ldr	r0, [sp, #4]
   13298:	movw	r1, #0
   1329c:	cmp	r0, r1
   132a0:	beq	132b8 <verify_parse@@Base+0x638>
   132a4:	ldr	r0, [sp, #4]
   132a8:	bl	13fa0 <main@@Base+0x324>
   132ac:	sxth	r0, r0
   132b0:	str	r0, [sp]
   132b4:	b	132c4 <verify_parse@@Base+0x644>
   132b8:	movw	r0, #0
   132bc:	str	r0, [sp]
   132c0:	b	132c4 <verify_parse@@Base+0x644>
   132c4:	ldr	r0, [sp]
   132c8:	sxth	r0, r0
   132cc:	mov	sp, fp
   132d0:	pop	{fp, pc}
   132d4:	push	{fp, lr}
   132d8:	mov	fp, sp
   132dc:	sub	sp, sp, #8
   132e0:	str	r0, [sp, #4]
   132e4:	ldr	r0, [sp, #4]
   132e8:	movw	r1, #0
   132ec:	cmp	r0, r1
   132f0:	beq	1330c <verify_parse@@Base+0x68c>
   132f4:	ldr	r0, [sp, #4]
   132f8:	add	r0, r0, #2
   132fc:	bl	13fdc <main@@Base+0x360>
   13300:	sxtb	r0, r0
   13304:	str	r0, [sp]
   13308:	b	13318 <verify_parse@@Base+0x698>
   1330c:	movw	r0, #0
   13310:	str	r0, [sp]
   13314:	b	13318 <verify_parse@@Base+0x698>
   13318:	ldr	r0, [sp]
   1331c:	sxtb	r0, r0
   13320:	mov	sp, fp
   13324:	pop	{fp, pc}

00013328 <test_parse@@Base>:
   13328:	push	{r4, r5, fp, lr}
   1332c:	add	fp, sp, #8
   13330:	sub	sp, sp, #392	; 0x188
   13334:	movw	r0, #0
   13338:	str	r0, [fp, #-20]	; 0xffffffec
   1333c:	add	r1, sp, #96	; 0x60
   13340:	str	r1, [sp, #92]	; 0x5c
   13344:	mvn	r1, #0
   13348:	str	r1, [sp, #88]	; 0x58
   1334c:	str	r0, [sp, #84]	; 0x54
   13350:	ldr	r0, [sp, #92]	; 0x5c
   13354:	bl	237f0 <flatcc_builder_init@@Base>
   13358:	ldr	r1, [pc, #624]	; 135d0 <test_parse@@Base+0x2a8>
   1335c:	ldr	r1, [pc, r1]
   13360:	ldr	r1, [r1]
   13364:	str	r0, [sp, #80]	; 0x50
   13368:	mov	r0, r1
   1336c:	movw	r1, #10240	; 0x2800
   13370:	sub	r2, fp, #24
   13374:	bl	13610 <test_parse@@Base+0x2e8>
   13378:	str	r0, [fp, #-16]
   1337c:	ldr	r0, [fp, #-16]
   13380:	movw	r1, #0
   13384:	cmp	r0, r1
   13388:	bne	133cc <test_parse@@Base+0xa4>
   1338c:	ldr	r0, [pc, #576]	; 135d4 <test_parse@@Base+0x2ac>
   13390:	add	r1, pc, r0
   13394:	ldr	r0, [pc, #572]	; 135d8 <test_parse@@Base+0x2b0>
   13398:	ldr	r0, [pc, r0]
   1339c:	ldr	r2, [pc, #568]	; 135dc <test_parse@@Base+0x2b4>
   133a0:	ldr	r2, [pc, r2]
   133a4:	ldr	r2, [r2]
   133a8:	ldr	r0, [r0]
   133ac:	str	r0, [sp, #76]	; 0x4c
   133b0:	mov	r0, r2
   133b4:	ldr	r2, [sp, #76]	; 0x4c
   133b8:	bl	12b14 <fprintf@plt>
   133bc:	mvn	r1, #0
   133c0:	str	r1, [fp, #-12]
   133c4:	str	r0, [sp, #72]	; 0x48
   133c8:	b	135c4 <test_parse@@Base+0x29c>
   133cc:	ldr	r0, [sp, #92]	; 0x5c
   133d0:	ldr	r2, [fp, #-16]
   133d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   133d8:	ldr	r1, [sp, #84]	; 0x54
   133dc:	sub	ip, fp, #72	; 0x48
   133e0:	str	r1, [sp, #68]	; 0x44
   133e4:	mov	r1, ip
   133e8:	ldr	ip, [sp, #68]	; 0x44
   133ec:	str	ip, [sp]
   133f0:	bl	13800 <test_parse@@Base+0x4d8>
   133f4:	cmp	r0, #0
   133f8:	beq	13400 <test_parse@@Base+0xd8>
   133fc:	b	13544 <test_parse@@Base+0x21c>
   13400:	ldr	r0, [pc, #496]	; 135f8 <test_parse@@Base+0x2d0>
   13404:	add	r1, pc, r0
   13408:	ldr	r0, [pc, #492]	; 135fc <test_parse@@Base+0x2d4>
   1340c:	ldr	r0, [pc, r0]
   13410:	ldr	r2, [pc, #488]	; 13600 <test_parse@@Base+0x2d8>
   13414:	ldr	r2, [pc, r2]
   13418:	ldr	r2, [r2]
   1341c:	ldr	r0, [r0]
   13420:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13424:	str	r0, [sp, #64]	; 0x40
   13428:	mov	r0, r2
   1342c:	ldr	r2, [sp, #64]	; 0x40
   13430:	bl	12b14 <fprintf@plt>
   13434:	ldr	r1, [sp, #92]	; 0x5c
   13438:	str	r0, [sp, #60]	; 0x3c
   1343c:	mov	r0, r1
   13440:	sub	r1, fp, #28
   13444:	bl	28f08 <flatcc_builder_finalize_aligned_buffer@@Base>
   13448:	ldr	r1, [pc, #416]	; 135f0 <test_parse@@Base+0x2c8>
   1344c:	add	r1, pc, r1
   13450:	ldr	r2, [pc, #412]	; 135f4 <test_parse@@Base+0x2cc>
   13454:	ldr	r2, [pc, r2]
   13458:	str	r0, [fp, #-20]	; 0xffffffec
   1345c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13460:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13464:	ldr	r2, [r2]
   13468:	str	r0, [sp, #56]	; 0x38
   1346c:	mov	r0, r1
   13470:	ldr	r1, [sp, #56]	; 0x38
   13474:	str	r2, [sp, #52]	; 0x34
   13478:	mov	r2, r3
   1347c:	ldr	r3, [sp, #52]	; 0x34
   13480:	bl	1392c <test_parse@@Base+0x604>
   13484:	ldr	r0, [pc, #348]	; 135e8 <test_parse@@Base+0x2c0>
   13488:	add	r1, pc, r0
   1348c:	ldr	r0, [pc, #344]	; 135ec <test_parse@@Base+0x2c4>
   13490:	ldr	r0, [pc, r0]
   13494:	ldr	r0, [r0]
   13498:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1349c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   134a0:	bl	12b14 <fprintf@plt>
   134a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   134a8:	str	r0, [sp, #48]	; 0x30
   134ac:	mov	r0, r1
   134b0:	bl	12c80 <verify_parse@@Base>
   134b4:	ldr	r1, [pc, #292]	; 135e0 <test_parse@@Base+0x2b8>
   134b8:	add	r1, pc, r1
   134bc:	ldr	r2, [pc, #288]	; 135e4 <test_parse@@Base+0x2bc>
   134c0:	ldr	r2, [pc, r2]
   134c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   134c8:	ldr	lr, [fp, #-28]	; 0xffffffe4
   134cc:	ldr	r2, [r2]
   134d0:	str	r0, [sp, #44]	; 0x2c
   134d4:	mov	r0, r1
   134d8:	mov	r1, r3
   134dc:	str	r2, [sp, #40]	; 0x28
   134e0:	mov	r2, lr
   134e4:	ldr	r3, [sp, #40]	; 0x28
   134e8:	bl	13b3c <test_parse@@Base+0x814>
   134ec:	ldr	r0, [sp, #92]	; 0x5c
   134f0:	bl	23a70 <flatcc_builder_reset@@Base>
   134f4:	movw	r1, #0
   134f8:	str	r1, [sp, #88]	; 0x58
   134fc:	str	r0, [sp, #36]	; 0x24
   13500:	ldr	r0, [fp, #-20]	; 0xffffffec
   13504:	movw	r1, #0
   13508:	cmp	r0, r1
   1350c:	beq	13518 <test_parse@@Base+0x1f0>
   13510:	ldr	r0, [fp, #-20]	; 0xffffffec
   13514:	bl	290b0 <flatcc_builder_aligned_free@@Base>
   13518:	ldr	r0, [fp, #-16]
   1351c:	movw	r1, #0
   13520:	cmp	r0, r1
   13524:	beq	13530 <test_parse@@Base+0x208>
   13528:	ldr	r0, [fp, #-16]
   1352c:	bl	12a6c <free@plt>
   13530:	ldr	r0, [sp, #92]	; 0x5c
   13534:	bl	23a9c <flatcc_builder_clear@@Base>
   13538:	ldr	r0, [sp, #88]	; 0x58
   1353c:	str	r0, [fp, #-12]
   13540:	b	135c4 <test_parse@@Base+0x29c>
   13544:	ldr	r0, [pc, #188]	; 13608 <test_parse@@Base+0x2e0>
   13548:	ldr	r0, [pc, r0]
   1354c:	ldr	r1, [pc, #184]	; 1360c <test_parse@@Base+0x2e4>
   13550:	ldr	r1, [pc, r1]
   13554:	ldr	r1, [r1]
   13558:	ldr	r2, [r0]
   1355c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13560:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13564:	ldr	ip, [fp, #-68]	; 0xffffffbc
   13568:	sub	r0, r0, ip
   1356c:	add	r0, r0, #1
   13570:	ldr	ip, [fp, #-48]	; 0xffffffd0
   13574:	str	r0, [sp, #32]
   13578:	mov	r0, ip
   1357c:	str	r1, [sp, #28]
   13580:	str	r2, [sp, #24]
   13584:	str	r3, [sp, #20]
   13588:	bl	2ab04 <flatcc_json_parser_error_string@@Base>
   1358c:	ldr	r1, [pc, #112]	; 13604 <test_parse@@Base+0x2dc>
   13590:	add	r1, pc, r1
   13594:	ldr	r2, [sp, #28]
   13598:	str	r0, [sp, #16]
   1359c:	mov	r0, r2
   135a0:	ldr	r2, [sp, #24]
   135a4:	ldr	r3, [sp, #20]
   135a8:	ldr	ip, [sp, #32]
   135ac:	str	ip, [sp]
   135b0:	ldr	lr, [sp, #16]
   135b4:	str	lr, [sp, #4]
   135b8:	bl	12b14 <fprintf@plt>
   135bc:	str	r0, [sp, #12]
   135c0:	b	13500 <test_parse@@Base+0x1d8>
   135c4:	ldr	r0, [fp, #-12]
   135c8:	sub	sp, fp, #8
   135cc:	pop	{r4, r5, fp, pc}
   135d0:	andeq	r0, r3, r8, lsl sp
   135d4:	muleq	r1, r3, ip
   135d8:	ldrdeq	r0, [r3], -ip
   135dc:	andeq	r0, r3, ip, asr #25
   135e0:	andeq	sp, r1, r9, asr #23
   135e4:			; <UNDEFINED> instruction: 0x00030bbc
   135e8:	andeq	sp, r1, r0, lsl #24
   135ec:	ldrdeq	r0, [r3], -ip
   135f0:	andeq	sp, r1, sp, lsl ip
   135f4:	andeq	r0, r3, r8, lsr #24
   135f8:	andeq	sp, r1, r3, asr #24
   135fc:	andeq	r0, r3, r8, ror #24
   13600:	andeq	r0, r3, r8, asr ip
   13604:	andeq	sp, r1, fp, lsl fp
   13608:	andeq	r0, r3, ip, lsr #22
   1360c:	andeq	r0, r3, ip, lsl fp
   13610:	push	{fp, lr}
   13614:	mov	fp, sp
   13618:	sub	sp, sp, #64	; 0x40
   1361c:	str	r0, [fp, #-8]
   13620:	str	r1, [fp, #-12]
   13624:	str	r2, [fp, #-16]
   13628:	ldr	r0, [fp, #-16]
   1362c:	movw	r1, #0
   13630:	cmp	r0, r1
   13634:	beq	13644 <test_parse@@Base+0x31c>
   13638:	ldr	r0, [fp, #-16]
   1363c:	str	r0, [sp, #20]
   13640:	b	13650 <test_parse@@Base+0x328>
   13644:	add	r0, sp, #28
   13648:	str	r0, [sp, #20]
   1364c:	b	13650 <test_parse@@Base+0x328>
   13650:	ldr	r0, [sp, #20]
   13654:	ldr	r1, [pc, #416]	; 137fc <test_parse@@Base+0x4d4>
   13658:	add	r1, pc, r1
   1365c:	str	r0, [fp, #-16]
   13660:	ldr	r0, [fp, #-8]
   13664:	bl	12a60 <fopen@plt>
   13668:	str	r0, [fp, #-20]	; 0xffffffec
   1366c:	movw	r0, #0
   13670:	str	r0, [fp, #-24]	; 0xffffffe8
   13674:	str	r0, [sp, #24]
   13678:	ldr	r1, [fp, #-20]	; 0xffffffec
   1367c:	cmp	r1, r0
   13680:	bne	13688 <test_parse@@Base+0x360>
   13684:	b	137a8 <test_parse@@Base+0x480>
   13688:	ldr	r0, [fp, #-20]	; 0xffffffec
   1368c:	movw	r1, #0
   13690:	movw	r2, #2
   13694:	bl	12b68 <fseek@plt>
   13698:	ldr	r1, [fp, #-20]	; 0xffffffec
   1369c:	str	r0, [sp, #16]
   136a0:	mov	r0, r1
   136a4:	bl	12a84 <ftell@plt>
   136a8:	str	r0, [fp, #-24]	; 0xffffffe8
   136ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   136b0:	ldr	r1, [fp, #-16]
   136b4:	str	r0, [r1]
   136b8:	ldr	r0, [fp, #-12]
   136bc:	cmp	r0, #0
   136c0:	bls	136d8 <test_parse@@Base+0x3b0>
   136c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   136c8:	ldr	r1, [fp, #-12]
   136cc:	cmp	r0, r1
   136d0:	bls	136d8 <test_parse@@Base+0x3b0>
   136d4:	b	137a8 <test_parse@@Base+0x480>
   136d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   136dc:	bl	12a9c <rewind@plt>
   136e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   136e4:	cmp	r0, #0
   136e8:	beq	136f8 <test_parse@@Base+0x3d0>
   136ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   136f0:	str	r0, [sp, #12]
   136f4:	b	13704 <test_parse@@Base+0x3dc>
   136f8:	movw	r0, #1
   136fc:	str	r0, [sp, #12]
   13700:	b	13704 <test_parse@@Base+0x3dc>
   13704:	ldr	r0, [sp, #12]
   13708:	bl	12ad8 <malloc@plt>
   1370c:	str	r0, [sp, #24]
   13710:	ldr	r0, [sp, #24]
   13714:	movw	lr, #0
   13718:	cmp	r0, lr
   1371c:	bne	13724 <test_parse@@Base+0x3fc>
   13720:	b	137a8 <test_parse@@Base+0x480>
   13724:	movw	r0, #0
   13728:	str	r0, [fp, #-28]	; 0xffffffe4
   1372c:	ldr	r0, [sp, #24]
   13730:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13734:	add	r0, r0, r1
   13738:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1373c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13740:	sub	r2, r1, r2
   13744:	ldr	r3, [fp, #-20]	; 0xffffffec
   13748:	movw	r1, #1
   1374c:	bl	12acc <fread@plt>
   13750:	str	r0, [sp, #32]
   13754:	cmp	r0, #0
   13758:	beq	13770 <test_parse@@Base+0x448>
   1375c:	ldr	r0, [sp, #32]
   13760:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13764:	add	r0, r1, r0
   13768:	str	r0, [fp, #-28]	; 0xffffffe4
   1376c:	b	1372c <test_parse@@Base+0x404>
   13770:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13774:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13778:	cmp	r0, r1
   1377c:	beq	13784 <test_parse@@Base+0x45c>
   13780:	b	137a8 <test_parse@@Base+0x480>
   13784:	ldr	r0, [fp, #-20]	; 0xffffffec
   13788:	bl	12b5c <fclose@plt>
   1378c:	ldr	lr, [fp, #-24]	; 0xffffffe8
   13790:	ldr	r1, [fp, #-16]
   13794:	str	lr, [r1]
   13798:	ldr	r1, [sp, #24]
   1379c:	str	r1, [fp, #-4]
   137a0:	str	r0, [sp, #8]
   137a4:	b	137f0 <test_parse@@Base+0x4c8>
   137a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   137ac:	movw	r1, #0
   137b0:	cmp	r0, r1
   137b4:	beq	137c4 <test_parse@@Base+0x49c>
   137b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   137bc:	bl	12b5c <fclose@plt>
   137c0:	str	r0, [sp, #4]
   137c4:	ldr	r0, [sp, #24]
   137c8:	movw	r1, #0
   137cc:	cmp	r0, r1
   137d0:	beq	137dc <test_parse@@Base+0x4b4>
   137d4:	ldr	r0, [sp, #24]
   137d8:	bl	12a6c <free@plt>
   137dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   137e0:	ldr	r1, [fp, #-16]
   137e4:	str	r0, [r1]
   137e8:	movw	r0, #0
   137ec:	str	r0, [fp, #-4]
   137f0:	ldr	r0, [fp, #-4]
   137f4:	mov	sp, fp
   137f8:	pop	{fp, pc}
   137fc:	andeq	sp, r1, r0, asr #23
   13800:	push	{fp, lr}
   13804:	mov	fp, sp
   13808:	sub	sp, sp, #88	; 0x58
   1380c:	ldr	ip, [fp, #8]
   13810:	str	r0, [fp, #-8]
   13814:	str	r1, [fp, #-12]
   13818:	str	r2, [fp, #-16]
   1381c:	str	r3, [fp, #-20]	; 0xffffffec
   13820:	ldr	r0, [fp, #-12]
   13824:	movw	r1, #0
   13828:	cmp	r0, r1
   1382c:	str	ip, [sp, #16]
   13830:	beq	13840 <test_parse@@Base+0x518>
   13834:	ldr	r0, [fp, #-12]
   13838:	str	r0, [sp, #12]
   1383c:	b	1384c <test_parse@@Base+0x524>
   13840:	add	r0, sp, #24
   13844:	str	r0, [sp, #12]
   13848:	b	1384c <test_parse@@Base+0x524>
   1384c:	ldr	r0, [sp, #12]
   13850:	str	r0, [fp, #-12]
   13854:	ldr	r0, [fp, #-12]
   13858:	ldr	r1, [fp, #-8]
   1385c:	ldr	r2, [fp, #-16]
   13860:	ldr	r3, [fp, #-16]
   13864:	ldr	ip, [fp, #-20]	; 0xffffffec
   13868:	add	r3, r3, ip
   1386c:	ldr	ip, [fp, #8]
   13870:	str	ip, [sp]
   13874:	bl	14018 <main@@Base+0x39c>
   13878:	ldr	r0, [pc, #168]	; 13928 <test_parse@@Base+0x600>
   1387c:	add	r1, pc, r0
   13880:	ldr	r0, [fp, #-8]
   13884:	movw	r2, #0
   13888:	uxth	r2, r2
   1388c:	movw	r3, #0
   13890:	bl	24934 <flatcc_builder_start_buffer@@Base>
   13894:	cmp	r0, #0
   13898:	beq	138a8 <test_parse@@Base+0x580>
   1389c:	mvn	r0, #0
   138a0:	str	r0, [fp, #-4]
   138a4:	b	1391c <test_parse@@Base+0x5f4>
   138a8:	ldr	r0, [fp, #-12]
   138ac:	ldr	r1, [fp, #-16]
   138b0:	ldr	r2, [fp, #-16]
   138b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   138b8:	add	r2, r2, r3
   138bc:	add	r3, sp, #20
   138c0:	bl	140b0 <main@@Base+0x434>
   138c4:	ldr	r1, [fp, #-12]
   138c8:	ldr	r1, [r1, #24]
   138cc:	cmp	r1, #0
   138d0:	str	r0, [sp, #8]
   138d4:	beq	138e8 <test_parse@@Base+0x5c0>
   138d8:	ldr	r0, [fp, #-12]
   138dc:	ldr	r0, [r0, #24]
   138e0:	str	r0, [fp, #-4]
   138e4:	b	1391c <test_parse@@Base+0x5f4>
   138e8:	ldr	r0, [fp, #-8]
   138ec:	ldr	r1, [sp, #20]
   138f0:	bl	24c78 <flatcc_builder_end_buffer@@Base>
   138f4:	cmp	r0, #0
   138f8:	bne	13908 <test_parse@@Base+0x5e0>
   138fc:	mvn	r0, #0
   13900:	str	r0, [fp, #-4]
   13904:	b	1391c <test_parse@@Base+0x5f4>
   13908:	ldr	r0, [fp, #-16]
   1390c:	ldr	r1, [fp, #-12]
   13910:	str	r0, [r1, #40]	; 0x28
   13914:	movw	r0, #0
   13918:	str	r0, [fp, #-4]
   1391c:	ldr	r0, [fp, #-4]
   13920:	mov	sp, fp
   13924:	pop	{fp, pc}
   13928:	andeq	sp, r1, r0, lsr #14
   1392c:	push	{fp, lr}
   13930:	mov	fp, sp
   13934:	sub	sp, sp, #72	; 0x48
   13938:	str	r0, [fp, #-4]
   1393c:	str	r1, [fp, #-8]
   13940:	str	r2, [fp, #-12]
   13944:	str	r3, [fp, #-16]
   13948:	ldr	r0, [fp, #-8]
   1394c:	str	r0, [sp, #28]
   13950:	ldr	r0, [fp, #-4]
   13954:	movw	r1, #0
   13958:	cmp	r0, r1
   1395c:	beq	13978 <test_parse@@Base+0x650>
   13960:	ldr	r0, [pc, #440]	; 13b20 <test_parse@@Base+0x7f8>
   13964:	add	r1, pc, r0
   13968:	ldr	r0, [fp, #-16]
   1396c:	ldr	r2, [fp, #-4]
   13970:	bl	12b14 <fprintf@plt>
   13974:	str	r0, [sp, #24]
   13978:	movw	r0, #0
   1397c:	str	r0, [fp, #-20]	; 0xffffffec
   13980:	ldr	r0, [fp, #-20]	; 0xffffffec
   13984:	ldr	r1, [fp, #-12]
   13988:	cmp	r0, r1
   1398c:	bcs	13ac8 <test_parse@@Base+0x7a0>
   13990:	ldr	r0, [fp, #-20]	; 0xffffffec
   13994:	and	r0, r0, #15
   13998:	cmp	r0, #0
   1399c:	bne	139e0 <test_parse@@Base+0x6b8>
   139a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   139a4:	cmp	r0, #0
   139a8:	beq	139c4 <test_parse@@Base+0x69c>
   139ac:	ldr	r0, [pc, #380]	; 13b30 <test_parse@@Base+0x808>
   139b0:	add	r1, pc, r0
   139b4:	add	r2, sp, #35	; 0x23
   139b8:	ldr	r0, [fp, #-16]
   139bc:	bl	12b14 <fprintf@plt>
   139c0:	str	r0, [sp, #20]
   139c4:	ldr	r0, [pc, #360]	; 13b34 <test_parse@@Base+0x80c>
   139c8:	add	r1, pc, r0
   139cc:	ldr	r0, [fp, #-16]
   139d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   139d4:	bl	12b14 <fprintf@plt>
   139d8:	str	r0, [sp, #16]
   139dc:	b	13a08 <test_parse@@Base+0x6e0>
   139e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   139e4:	and	r0, r0, #7
   139e8:	cmp	r0, #0
   139ec:	bne	13a04 <test_parse@@Base+0x6dc>
   139f0:	ldr	r0, [pc, #308]	; 13b2c <test_parse@@Base+0x804>
   139f4:	add	r1, pc, r0
   139f8:	ldr	r0, [fp, #-16]
   139fc:	bl	12b14 <fprintf@plt>
   13a00:	str	r0, [sp, #12]
   13a04:	b	13a08 <test_parse@@Base+0x6e0>
   13a08:	ldr	r0, [pc, #296]	; 13b38 <test_parse@@Base+0x810>
   13a0c:	add	r1, pc, r0
   13a10:	ldr	r0, [fp, #-16]
   13a14:	ldr	r2, [sp, #28]
   13a18:	ldr	r3, [fp, #-20]	; 0xffffffec
   13a1c:	add	r2, r2, r3
   13a20:	ldrb	r2, [r2]
   13a24:	bl	12b14 <fprintf@plt>
   13a28:	ldr	r1, [sp, #28]
   13a2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13a30:	add	r1, r1, r2
   13a34:	ldrb	r1, [r1]
   13a38:	cmp	r1, #32
   13a3c:	str	r0, [sp, #8]
   13a40:	blt	13a5c <test_parse@@Base+0x734>
   13a44:	ldr	r0, [sp, #28]
   13a48:	ldr	r1, [fp, #-20]	; 0xffffffec
   13a4c:	add	r0, r0, r1
   13a50:	ldrb	r0, [r0]
   13a54:	cmp	r0, #126	; 0x7e
   13a58:	ble	13a78 <test_parse@@Base+0x750>
   13a5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a60:	and	r0, r0, #15
   13a64:	add	r1, sp, #35	; 0x23
   13a68:	add	r0, r1, r0
   13a6c:	movw	r1, #46	; 0x2e
   13a70:	strb	r1, [r0]
   13a74:	b	13a9c <test_parse@@Base+0x774>
   13a78:	ldr	r0, [sp, #28]
   13a7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13a80:	add	r0, r0, r1
   13a84:	ldrb	r0, [r0]
   13a88:	ldr	r1, [fp, #-20]	; 0xffffffec
   13a8c:	and	r1, r1, #15
   13a90:	add	r2, sp, #35	; 0x23
   13a94:	add	r1, r2, r1
   13a98:	strb	r0, [r1]
   13a9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13aa0:	and	r0, r0, #15
   13aa4:	add	r0, r0, #1
   13aa8:	add	r1, sp, #35	; 0x23
   13aac:	add	r0, r1, r0
   13ab0:	movw	r1, #0
   13ab4:	strb	r1, [r0]
   13ab8:	ldr	r0, [fp, #-20]	; 0xffffffec
   13abc:	add	r0, r0, #1
   13ac0:	str	r0, [fp, #-20]	; 0xffffffec
   13ac4:	b	13980 <test_parse@@Base+0x658>
   13ac8:	b	13acc <test_parse@@Base+0x7a4>
   13acc:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ad0:	and	r0, r0, #15
   13ad4:	cmp	r0, #0
   13ad8:	beq	13b00 <test_parse@@Base+0x7d8>
   13adc:	ldr	r0, [pc, #68]	; 13b28 <test_parse@@Base+0x800>
   13ae0:	add	r1, pc, r0
   13ae4:	ldr	r0, [fp, #-16]
   13ae8:	bl	12b14 <fprintf@plt>
   13aec:	ldr	r1, [fp, #-20]	; 0xffffffec
   13af0:	add	r1, r1, #1
   13af4:	str	r1, [fp, #-20]	; 0xffffffec
   13af8:	str	r0, [sp, #4]
   13afc:	b	13acc <test_parse@@Base+0x7a4>
   13b00:	ldr	r0, [pc, #28]	; 13b24 <test_parse@@Base+0x7fc>
   13b04:	add	r1, pc, r0
   13b08:	add	r2, sp, #35	; 0x23
   13b0c:	ldr	r0, [fp, #-16]
   13b10:	bl	12b14 <fprintf@plt>
   13b14:	str	r0, [sp]
   13b18:	mov	sp, fp
   13b1c:	pop	{fp, pc}
   13b20:	andeq	sp, r1, r2, asr #17
   13b24:	andeq	sp, r1, r7, lsr #14
   13b28:	andeq	sp, r1, r2, lsl #15
   13b2c:	andeq	sp, r1, r0, ror r8
   13b30:	andeq	sp, r1, fp, ror r8
   13b34:	andeq	sp, r1, r9, ror #16
   13b38:	andeq	sp, r1, sp, lsr #16
   13b3c:	push	{fp, lr}
   13b40:	mov	fp, sp
   13b44:	sub	sp, sp, #72	; 0x48
   13b48:	str	r0, [fp, #-4]
   13b4c:	str	r1, [fp, #-8]
   13b50:	str	r2, [fp, #-12]
   13b54:	str	r3, [fp, #-16]
   13b58:	ldr	r0, [fp, #-8]
   13b5c:	str	r0, [sp, #28]
   13b60:	ldr	r0, [fp, #-4]
   13b64:	movw	r1, #0
   13b68:	cmp	r0, r1
   13b6c:	beq	13b7c <test_parse@@Base+0x854>
   13b70:	ldr	r0, [fp, #-4]
   13b74:	str	r0, [sp, #24]
   13b78:	b	13b8c <test_parse@@Base+0x864>
   13b7c:	ldr	r0, [pc, #224]	; 13c64 <test_parse@@Base+0x93c>
   13b80:	add	r0, pc, r0
   13b84:	str	r0, [sp, #24]
   13b88:	b	13b8c <test_parse@@Base+0x864>
   13b8c:	ldr	r0, [sp, #24]
   13b90:	ldr	r1, [pc, #208]	; 13c68 <test_parse@@Base+0x940>
   13b94:	add	r1, pc, r1
   13b98:	str	r0, [fp, #-4]
   13b9c:	ldr	r0, [fp, #-16]
   13ba0:	ldr	r2, [fp, #-4]
   13ba4:	bl	12b14 <fprintf@plt>
   13ba8:	movw	r1, #0
   13bac:	str	r1, [fp, #-20]	; 0xffffffec
   13bb0:	str	r0, [sp, #20]
   13bb4:	ldr	r0, [fp, #-20]	; 0xffffffec
   13bb8:	ldr	r1, [fp, #-12]
   13bbc:	cmp	r0, r1
   13bc0:	bcs	13c48 <test_parse@@Base+0x920>
   13bc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   13bc8:	and	r0, r0, #15
   13bcc:	cmp	r0, #0
   13bd0:	bne	13bec <test_parse@@Base+0x8c4>
   13bd4:	ldr	r0, [pc, #152]	; 13c74 <test_parse@@Base+0x94c>
   13bd8:	add	r1, pc, r0
   13bdc:	ldr	r0, [fp, #-16]
   13be0:	bl	12b14 <fprintf@plt>
   13be4:	str	r0, [sp, #16]
   13be8:	b	13c14 <test_parse@@Base+0x8ec>
   13bec:	ldr	r0, [fp, #-20]	; 0xffffffec
   13bf0:	and	r0, r0, #7
   13bf4:	cmp	r0, #0
   13bf8:	bne	13c10 <test_parse@@Base+0x8e8>
   13bfc:	ldr	r0, [pc, #108]	; 13c70 <test_parse@@Base+0x948>
   13c00:	add	r1, pc, r0
   13c04:	ldr	r0, [fp, #-16]
   13c08:	bl	12b14 <fprintf@plt>
   13c0c:	str	r0, [sp, #12]
   13c10:	b	13c14 <test_parse@@Base+0x8ec>
   13c14:	ldr	r0, [pc, #92]	; 13c78 <test_parse@@Base+0x950>
   13c18:	add	r1, pc, r0
   13c1c:	ldr	r0, [fp, #-16]
   13c20:	ldr	r2, [sp, #28]
   13c24:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c28:	add	r2, r2, r3
   13c2c:	ldrb	r2, [r2]
   13c30:	bl	12b14 <fprintf@plt>
   13c34:	str	r0, [sp, #8]
   13c38:	ldr	r0, [fp, #-20]	; 0xffffffec
   13c3c:	add	r0, r0, #1
   13c40:	str	r0, [fp, #-20]	; 0xffffffec
   13c44:	b	13bb4 <test_parse@@Base+0x88c>
   13c48:	ldr	r0, [pc, #28]	; 13c6c <test_parse@@Base+0x944>
   13c4c:	add	r1, pc, r0
   13c50:	ldr	r0, [fp, #-16]
   13c54:	bl	12b14 <fprintf@plt>
   13c58:	str	r0, [sp, #4]
   13c5c:	mov	sp, fp
   13c60:	pop	{fp, pc}
   13c64:			; <UNDEFINED> instruction: 0x0001d6bf
   13c68:			; <UNDEFINED> instruction: 0x0001d6b0
   13c6c:	andeq	sp, r1, r3, lsr #12
   13c70:	andeq	sp, r1, r2, ror #12
   13c74:	andeq	sp, r1, r9, lsl #13
   13c78:	andeq	sp, r1, lr, asr #12

00013c7c <main@@Base>:
   13c7c:	push	{fp, lr}
   13c80:	mov	fp, sp
   13c84:	sub	sp, sp, #24
   13c88:	ldr	r2, [pc, #148]	; 13d24 <main@@Base+0xa8>
   13c8c:	add	r2, pc, r2
   13c90:	ldr	r3, [pc, #144]	; 13d28 <main@@Base+0xac>
   13c94:	ldr	r3, [pc, r3]
   13c98:	movw	ip, #0
   13c9c:	str	ip, [fp, #-4]
   13ca0:	str	r0, [fp, #-8]
   13ca4:	str	r1, [sp, #12]
   13ca8:	ldr	r0, [r3]
   13cac:	mov	r1, r2
   13cb0:	bl	12b14 <fprintf@plt>
   13cb4:	ldr	r1, [fp, #-8]
   13cb8:	cmp	r1, #1
   13cbc:	str	r0, [sp, #8]
   13cc0:	beq	13cf8 <main@@Base+0x7c>
   13cc4:	ldr	r0, [fp, #-8]
   13cc8:	cmp	r0, #2
   13ccc:	beq	13cf8 <main@@Base+0x7c>
   13cd0:	ldr	r0, [pc, #88]	; 13d30 <main@@Base+0xb4>
   13cd4:	add	r1, pc, r0
   13cd8:	ldr	r0, [pc, #84]	; 13d34 <main@@Base+0xb8>
   13cdc:	ldr	r0, [pc, r0]
   13ce0:	ldr	r0, [r0]
   13ce4:	bl	12b14 <fprintf@plt>
   13ce8:	movw	r1, #1
   13cec:	str	r0, [sp, #4]
   13cf0:	mov	r0, r1
   13cf4:	bl	12afc <exit@plt>
   13cf8:	ldr	r0, [fp, #-8]
   13cfc:	cmp	r0, #2
   13d00:	bne	13d18 <main@@Base+0x9c>
   13d04:	ldr	r0, [pc, #32]	; 13d2c <main@@Base+0xb0>
   13d08:	ldr	r0, [pc, r0]
   13d0c:	ldr	r1, [sp, #12]
   13d10:	ldr	r1, [r1, #4]
   13d14:	str	r1, [r0]
   13d18:	bl	13328 <test_parse@@Base>
   13d1c:	mov	sp, fp
   13d20:	pop	{fp, pc}
   13d24:	andeq	sp, r1, sp, lsr #8
   13d28:	ldrdeq	r0, [r3], -r8
   13d2c:	andeq	r0, r3, ip, ror #6
   13d30:	strdeq	sp, [r1], -r6
   13d34:	muleq	r3, r0, r3
   13d38:	push	{fp, lr}
   13d3c:	mov	fp, sp
   13d40:	sub	sp, sp, #32
   13d44:	str	r0, [fp, #-8]
   13d48:	str	r1, [fp, #-12]
   13d4c:	movw	r0, #0
   13d50:	str	r0, [sp, #12]
   13d54:	ldr	r1, [fp, #-12]
   13d58:	cmp	r1, r0
   13d5c:	bne	13d6c <main@@Base+0xf0>
   13d60:	movw	r0, #1
   13d64:	str	r0, [fp, #-4]
   13d68:	b	13dd8 <main@@Base+0x15c>
   13d6c:	add	r0, sp, #12
   13d70:	ldr	r1, [fp, #-12]
   13d74:	movw	r2, #4
   13d78:	bl	12b38 <strncpy@plt>
   13d7c:	ldr	r1, [sp, #12]
   13d80:	str	r0, [sp, #8]
   13d84:	mov	r0, r1
   13d88:	bl	13e08 <main@@Base+0x18c>
   13d8c:	str	r0, [sp, #12]
   13d90:	ldr	r0, [fp, #-8]
   13d94:	add	r0, r0, #4
   13d98:	bl	13e1c <main@@Base+0x1a0>
   13d9c:	str	r0, [sp, #16]
   13da0:	ldr	r0, [sp, #12]
   13da4:	cmp	r0, #0
   13da8:	movw	r0, #1
   13dac:	str	r0, [sp, #4]
   13db0:	beq	13dcc <main@@Base+0x150>
   13db4:	ldr	r0, [sp, #16]
   13db8:	ldr	r1, [sp, #12]
   13dbc:	cmp	r0, r1
   13dc0:	movw	r0, #0
   13dc4:	moveq	r0, #1
   13dc8:	str	r0, [sp, #4]
   13dcc:	ldr	r0, [sp, #4]
   13dd0:	and	r0, r0, #1
   13dd4:	str	r0, [fp, #-4]
   13dd8:	ldr	r0, [fp, #-4]
   13ddc:	mov	sp, fp
   13de0:	pop	{fp, pc}
   13de4:	push	{fp, lr}
   13de8:	mov	fp, sp
   13dec:	sub	sp, sp, #8
   13df0:	str	r0, [sp, #4]
   13df4:	ldr	r0, [sp, #4]
   13df8:	ldr	r0, [r0]
   13dfc:	bl	13e54 <main@@Base+0x1d8>
   13e00:	mov	sp, fp
   13e04:	pop	{fp, pc}
   13e08:	sub	sp, sp, #4
   13e0c:	str	r0, [sp]
   13e10:	ldr	r0, [sp]
   13e14:	add	sp, sp, #4
   13e18:	bx	lr
   13e1c:	push	{fp, lr}
   13e20:	mov	fp, sp
   13e24:	sub	sp, sp, #8
   13e28:	str	r0, [sp, #4]
   13e2c:	ldr	r0, [sp, #4]
   13e30:	ldr	r0, [r0]
   13e34:	bl	13e40 <main@@Base+0x1c4>
   13e38:	mov	sp, fp
   13e3c:	pop	{fp, pc}
   13e40:	sub	sp, sp, #4
   13e44:	str	r0, [sp]
   13e48:	ldr	r0, [sp]
   13e4c:	add	sp, sp, #4
   13e50:	bx	lr
   13e54:	sub	sp, sp, #4
   13e58:	str	r0, [sp]
   13e5c:	ldr	r0, [sp]
   13e60:	add	sp, sp, #4
   13e64:	bx	lr
   13e68:	push	{fp, lr}
   13e6c:	mov	fp, sp
   13e70:	sub	sp, sp, #8
   13e74:	str	r0, [sp, #4]
   13e78:	ldr	r0, [sp, #4]
   13e7c:	ldr	r0, [r0]
   13e80:	bl	13eb4 <main@@Base+0x238>
   13e84:	mov	sp, fp
   13e88:	pop	{fp, pc}
   13e8c:	push	{fp, lr}
   13e90:	mov	fp, sp
   13e94:	sub	sp, sp, #8
   13e98:	str	r0, [sp, #4]
   13e9c:	ldr	r0, [sp, #4]
   13ea0:	ldrh	r0, [r0]
   13ea4:	bl	13ec8 <main@@Base+0x24c>
   13ea8:	uxth	r0, r0
   13eac:	mov	sp, fp
   13eb0:	pop	{fp, pc}
   13eb4:	sub	sp, sp, #4
   13eb8:	str	r0, [sp]
   13ebc:	ldr	r0, [sp]
   13ec0:	add	sp, sp, #4
   13ec4:	bx	lr
   13ec8:	sub	sp, sp, #4
   13ecc:	strh	r0, [sp, #2]
   13ed0:	ldrh	r0, [sp, #2]
   13ed4:	add	sp, sp, #4
   13ed8:	bx	lr
   13edc:	push	{fp, lr}
   13ee0:	mov	fp, sp
   13ee4:	sub	sp, sp, #8
   13ee8:	str	r0, [sp, #4]
   13eec:	ldr	r0, [sp, #4]
   13ef0:	vldr	s0, [r0]
   13ef4:	bl	13f00 <main@@Base+0x284>
   13ef8:	mov	sp, fp
   13efc:	pop	{fp, pc}
   13f00:	sub	sp, sp, #8
   13f04:	vstr	s0, [sp, #4]
   13f08:	vldr	s0, [sp, #4]
   13f0c:	vstr	s0, [sp]
   13f10:	ldr	r0, [sp]
   13f14:	str	r0, [sp]
   13f18:	vldr	s0, [sp]
   13f1c:	add	sp, sp, #8
   13f20:	bx	lr
   13f24:	push	{fp, lr}
   13f28:	mov	fp, sp
   13f2c:	sub	sp, sp, #8
   13f30:	str	r0, [sp, #4]
   13f34:	ldr	r0, [sp, #4]
   13f38:	vldr	d0, [r0]
   13f3c:	bl	13f48 <main@@Base+0x2cc>
   13f40:	mov	sp, fp
   13f44:	pop	{fp, pc}
   13f48:	sub	sp, sp, #16
   13f4c:	vstr	d0, [sp, #8]
   13f50:	vldr	d0, [sp, #8]
   13f54:	vstr	d0, [sp]
   13f58:	vldr	d0, [sp]
   13f5c:	add	sp, sp, #16
   13f60:	bx	lr
   13f64:	push	{fp, lr}
   13f68:	mov	fp, sp
   13f6c:	sub	sp, sp, #8
   13f70:	str	r0, [sp, #4]
   13f74:	ldr	r0, [sp, #4]
   13f78:	ldrsb	r0, [r0]
   13f7c:	bl	13f8c <main@@Base+0x310>
   13f80:	sxtb	r0, r0
   13f84:	mov	sp, fp
   13f88:	pop	{fp, pc}
   13f8c:	sub	sp, sp, #4
   13f90:	strb	r0, [sp, #3]
   13f94:	ldrsb	r0, [sp, #3]
   13f98:	add	sp, sp, #4
   13f9c:	bx	lr
   13fa0:	push	{fp, lr}
   13fa4:	mov	fp, sp
   13fa8:	sub	sp, sp, #8
   13fac:	str	r0, [sp, #4]
   13fb0:	ldr	r0, [sp, #4]
   13fb4:	ldrsh	r0, [r0]
   13fb8:	bl	13fc8 <main@@Base+0x34c>
   13fbc:	sxth	r0, r0
   13fc0:	mov	sp, fp
   13fc4:	pop	{fp, pc}
   13fc8:	sub	sp, sp, #4
   13fcc:	strh	r0, [sp, #2]
   13fd0:	ldrsh	r0, [sp, #2]
   13fd4:	add	sp, sp, #4
   13fd8:	bx	lr
   13fdc:	push	{fp, lr}
   13fe0:	mov	fp, sp
   13fe4:	sub	sp, sp, #8
   13fe8:	str	r0, [sp, #4]
   13fec:	ldr	r0, [sp, #4]
   13ff0:	ldrsb	r0, [r0]
   13ff4:	bl	14004 <main@@Base+0x388>
   13ff8:	sxtb	r0, r0
   13ffc:	mov	sp, fp
   14000:	pop	{fp, pc}
   14004:	sub	sp, sp, #4
   14008:	strb	r0, [sp, #3]
   1400c:	ldrsb	r0, [sp, #3]
   14010:	add	sp, sp, #4
   14014:	bx	lr
   14018:	push	{fp, lr}
   1401c:	mov	fp, sp
   14020:	sub	sp, sp, #24
   14024:	ldr	ip, [fp, #8]
   14028:	str	r0, [fp, #-4]
   1402c:	str	r1, [fp, #-8]
   14030:	str	r2, [sp, #12]
   14034:	str	r3, [sp, #8]
   14038:	ldr	r0, [fp, #-4]
   1403c:	movw	r1, #0
   14040:	and	r1, r1, #255	; 0xff
   14044:	movw	r2, #44	; 0x2c
   14048:	str	ip, [sp, #4]
   1404c:	bl	12b2c <memset@plt>
   14050:	ldr	r0, [fp, #-8]
   14054:	ldr	r1, [fp, #-4]
   14058:	str	r0, [r1]
   1405c:	ldr	r0, [sp, #12]
   14060:	ldr	r1, [fp, #-4]
   14064:	str	r0, [r1, #4]
   14068:	ldr	r0, [fp, #-4]
   1406c:	movw	r1, #1
   14070:	str	r1, [r0, #16]
   14074:	ldr	r0, [fp, #8]
   14078:	ldr	r1, [fp, #-4]
   1407c:	str	r0, [r1, #8]
   14080:	ldr	r0, [sp, #12]
   14084:	ldr	r1, [fp, #-4]
   14088:	str	r0, [r1, #28]
   1408c:	ldr	r0, [sp, #8]
   14090:	ldr	r1, [fp, #-4]
   14094:	str	r0, [r1, #32]
   14098:	ldr	r0, [sp, #12]
   1409c:	ldr	r1, [fp, #-4]
   140a0:	str	r0, [r1, #36]	; 0x24
   140a4:	mov	sp, fp
   140a8:	pop	{fp, pc}
   140ac:	nop	{0}
   140b0:	push	{r4, r5, fp, lr}
   140b4:	add	fp, sp, #8
   140b8:	sub	sp, sp, #280	; 0x118
   140bc:	str	r0, [fp, #-16]
   140c0:	str	r1, [fp, #-20]	; 0xffffffec
   140c4:	str	r2, [fp, #-24]	; 0xffffffe8
   140c8:	str	r3, [fp, #-28]	; 0xffffffe4
   140cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   140d0:	movw	r1, #0
   140d4:	str	r1, [r0]
   140d8:	ldr	r0, [fp, #-16]
   140dc:	ldr	r0, [r0]
   140e0:	movw	r1, #36	; 0x24
   140e4:	bl	26068 <flatcc_builder_start_table@@Base>
   140e8:	cmp	r0, #0
   140ec:	beq	140f4 <main@@Base+0x478>
   140f0:	b	17ad4 <main@@Base+0x3e58>
   140f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   140f8:	ldr	r1, [fp, #-16]
   140fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   14100:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14104:	str	r0, [sp, #124]	; 0x7c
   14108:	mov	r0, r1
   1410c:	mov	r1, r2
   14110:	mov	r2, r3
   14114:	movw	r3, #1
   14118:	sub	ip, fp, #60	; 0x3c
   1411c:	str	ip, [sp]
   14120:	bl	2e1b4 <flatcc_json_parser_prepare_unions@@Base>
   14124:	ldr	r1, [sp, #124]	; 0x7c
   14128:	cmp	r1, r0
   1412c:	bne	14134 <main@@Base+0x4b8>
   14130:	b	17ad4 <main@@Base+0x3e58>
   14134:	ldr	r0, [fp, #-16]
   14138:	ldr	r1, [fp, #-20]	; 0xffffffec
   1413c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14140:	sub	r3, fp, #32
   14144:	bl	17b1c <main@@Base+0x3ea0>
   14148:	str	r0, [fp, #-20]	; 0xffffffec
   1414c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14150:	cmp	r0, #0
   14154:	beq	17a3c <main@@Base+0x3dc0>
   14158:	ldr	r0, [fp, #-16]
   1415c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14160:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14164:	bl	17c00 <main@@Base+0x3f84>
   14168:	str	r0, [fp, #-20]	; 0xffffffec
   1416c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14170:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14174:	bl	17cac <main@@Base+0x4030>
   14178:	str	r1, [fp, #-52]	; 0xffffffcc
   1417c:	str	r0, [fp, #-56]	; 0xffffffc8
   14180:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14184:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14188:	movw	r2, #29280	; 0x7260
   1418c:	movt	r2, #24946	; 0x6172
   14190:	subs	r0, r2, r0
   14194:	movw	r2, #29556	; 0x7374
   14198:	movt	r2, #29797	; 0x7465
   1419c:	sbcs	r1, r2, r1
   141a0:	str	r0, [sp, #120]	; 0x78
   141a4:	str	r1, [sp, #116]	; 0x74
   141a8:	bcc	15354 <main@@Base+0x16d8>
   141ac:	b	141b0 <main@@Base+0x534>
   141b0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   141b4:	movw	r1, #28004	; 0x6d64
   141b8:	movt	r1, #28257	; 0x6e61
   141bc:	cmp	r0, r1
   141c0:	bhi	14b34 <main@@Base+0xeb8>
   141c4:	b	141c8 <main@@Base+0x54c>
   141c8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   141cc:	movw	r1, #25975	; 0x6577
   141d0:	movt	r1, #26220	; 0x666c
   141d4:	cmp	r0, r1
   141d8:	bhi	14418 <main@@Base+0x79c>
   141dc:	b	141e0 <main@@Base+0x564>
   141e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   141e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   141e8:	and	r0, r0, #-16777216	; 0xff000000
   141ec:	movw	r2, #25965	; 0x656d
   141f0:	movt	r2, #25966	; 0x656e
   141f4:	eor	r1, r1, r2
   141f8:	eor	r0, r0, #2030043136	; 0x79000000
   141fc:	orr	r0, r0, r1
   14200:	cmp	r0, #0
   14204:	bne	142a8 <main@@Base+0x62c>
   14208:	b	1420c <main@@Base+0x590>
   1420c:	ldr	r0, [fp, #-16]
   14210:	ldr	r1, [fp, #-20]	; 0xffffffec
   14214:	str	r1, [fp, #-48]	; 0xffffffd0
   14218:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1421c:	movw	r3, #5
   14220:	bl	17ce4 <main@@Base+0x4068>
   14224:	str	r0, [fp, #-20]	; 0xffffffec
   14228:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1422c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14230:	cmp	r0, r1
   14234:	beq	14290 <main@@Base+0x614>
   14238:	ldr	r0, [fp, #-16]
   1423c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14240:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14244:	sub	r3, fp, #40	; 0x28
   14248:	bl	140b0 <main@@Base+0x434>
   1424c:	str	r0, [fp, #-20]	; 0xffffffec
   14250:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14254:	cmp	r0, #0
   14258:	beq	1427c <main@@Base+0x600>
   1425c:	ldr	r0, [fp, #-16]
   14260:	ldr	r0, [r0]
   14264:	movw	r1, #12
   14268:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   1426c:	str	r0, [fp, #-44]	; 0xffffffd4
   14270:	movw	r1, #0
   14274:	cmp	r0, r1
   14278:	bne	14280 <main@@Base+0x604>
   1427c:	b	17ad4 <main@@Base+0x3e58>
   14280:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14284:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14288:	str	r0, [r1]
   1428c:	b	142a4 <main@@Base+0x628>
   14290:	ldr	r0, [fp, #-16]
   14294:	ldr	r1, [fp, #-20]	; 0xffffffec
   14298:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1429c:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   142a0:	str	r0, [fp, #-20]	; 0xffffffec
   142a4:	b	14414 <main@@Base+0x798>
   142a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   142ac:	ldr	r1, [fp, #-52]	; 0xffffffcc
   142b0:	and	r0, r0, #-16777216	; 0xff000000
   142b4:	movw	r2, #27759	; 0x6c6f
   142b8:	movt	r2, #25455	; 0x636f
   142bc:	eor	r1, r1, r2
   142c0:	eor	r0, r0, #1912602624	; 0x72000000
   142c4:	orr	r0, r0, r1
   142c8:	cmp	r0, #0
   142cc:	bne	143fc <main@@Base+0x780>
   142d0:	b	142d4 <main@@Base+0x658>
   142d4:	ldr	r0, [fp, #-16]
   142d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   142dc:	str	r1, [fp, #-48]	; 0xffffffd0
   142e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   142e4:	movw	r3, #5
   142e8:	bl	17ce4 <main@@Base+0x4068>
   142ec:	str	r0, [fp, #-20]	; 0xffffffec
   142f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   142f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   142f8:	cmp	r0, r1
   142fc:	beq	143e4 <main@@Base+0x768>
   14300:	movw	r0, #0
   14304:	strb	r0, [fp, #-61]	; 0xffffffc3
   14308:	ldr	r0, [fp, #-16]
   1430c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14310:	str	r1, [fp, #-48]	; 0xffffffd0
   14314:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14318:	sub	r3, fp, #61	; 0x3d
   1431c:	bl	19260 <main@@Base+0x55e4>
   14320:	str	r0, [fp, #-20]	; 0xffffffec
   14324:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14328:	ldr	r1, [fp, #-20]	; 0xffffffec
   1432c:	cmp	r0, r1
   14330:	bne	14384 <main@@Base+0x708>
   14334:	ldr	r0, [pc, #4076]	; 15328 <main@@Base+0x16ac>
   14338:	add	r3, pc, r0
   1433c:	ldr	r0, [fp, #-16]
   14340:	ldr	r1, [fp, #-20]	; 0xffffffec
   14344:	str	r1, [fp, #-48]	; 0xffffffd0
   14348:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1434c:	sub	ip, fp, #61	; 0x3d
   14350:	str	ip, [sp]
   14354:	bl	1933c <main@@Base+0x56c0>
   14358:	str	r0, [fp, #-20]	; 0xffffffec
   1435c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14360:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14364:	cmp	r0, r1
   14368:	beq	1437c <main@@Base+0x700>
   1436c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14370:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14374:	cmp	r0, r1
   14378:	bne	14380 <main@@Base+0x704>
   1437c:	b	17ad4 <main@@Base+0x3e58>
   14380:	b	14384 <main@@Base+0x708>
   14384:	ldrsb	r0, [fp, #-61]	; 0xffffffc3
   14388:	cmp	r0, #8
   1438c:	bne	143a4 <main@@Base+0x728>
   14390:	ldr	r0, [fp, #-16]
   14394:	ldr	r0, [r0, #8]
   14398:	and	r0, r0, #2
   1439c:	cmp	r0, #0
   143a0:	beq	143e0 <main@@Base+0x764>
   143a4:	ldr	r0, [fp, #-16]
   143a8:	ldr	r0, [r0]
   143ac:	movw	r1, #6
   143b0:	movw	r2, #1
   143b4:	movw	r3, #1
   143b8:	uxth	r3, r3
   143bc:	bl	27920 <flatcc_builder_table_add@@Base>
   143c0:	str	r0, [fp, #-36]	; 0xffffffdc
   143c4:	movw	r1, #0
   143c8:	cmp	r0, r1
   143cc:	bne	143d4 <main@@Base+0x758>
   143d0:	b	17ad4 <main@@Base+0x3e58>
   143d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   143d8:	ldrsb	r1, [fp, #-61]	; 0xffffffc3
   143dc:	bl	19568 <main@@Base+0x58ec>
   143e0:	b	143f8 <main@@Base+0x77c>
   143e4:	ldr	r0, [fp, #-16]
   143e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   143ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   143f0:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   143f4:	str	r0, [fp, #-20]	; 0xffffffec
   143f8:	b	14410 <main@@Base+0x794>
   143fc:	ldr	r0, [fp, #-16]
   14400:	ldr	r1, [fp, #-20]	; 0xffffffec
   14404:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14408:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1440c:	str	r0, [fp, #-20]	; 0xffffffec
   14410:	b	14414 <main@@Base+0x798>
   14414:	b	14b30 <main@@Base+0xeb4>
   14418:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1441c:	movw	r1, #65535	; 0xffff
   14420:	movt	r1, #26735	; 0x686f
   14424:	cmp	r0, r1
   14428:	bhi	14610 <main@@Base+0x994>
   1442c:	b	14430 <main@@Base+0x7b4>
   14430:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14434:	movw	r1, #25976	; 0x6578
   14438:	movt	r1, #26220	; 0x666c
   1443c:	teq	r0, r1
   14440:	bne	145f8 <main@@Base+0x97c>
   14444:	b	14448 <main@@Base+0x7cc>
   14448:	ldr	r0, [fp, #-16]
   1444c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14450:	str	r1, [fp, #-48]	; 0xffffffd0
   14454:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14458:	movw	r3, #4
   1445c:	bl	17ce4 <main@@Base+0x4068>
   14460:	str	r0, [fp, #-20]	; 0xffffffec
   14464:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14468:	ldr	r1, [fp, #-20]	; 0xffffffec
   1446c:	cmp	r0, r1
   14470:	beq	145e0 <main@@Base+0x964>
   14474:	ldr	r0, [fp, #-16]
   14478:	ldr	r0, [r0]
   1447c:	movw	r1, #1
   14480:	movw	r2, #1
   14484:	uxth	r2, r2
   14488:	mvn	r3, #0
   1448c:	bl	25bf4 <flatcc_builder_start_vector@@Base>
   14490:	cmp	r0, #0
   14494:	beq	1449c <main@@Base+0x820>
   14498:	b	17ad4 <main@@Base+0x3e58>
   1449c:	ldr	r0, [fp, #-16]
   144a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   144a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   144a8:	sub	r3, fp, #32
   144ac:	bl	19594 <main@@Base+0x5918>
   144b0:	str	r0, [fp, #-20]	; 0xffffffec
   144b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   144b8:	cmp	r0, #0
   144bc:	beq	14590 <main@@Base+0x914>
   144c0:	movw	r0, #0
   144c4:	strb	r0, [fp, #-62]	; 0xffffffc2
   144c8:	ldr	r0, [fp, #-16]
   144cc:	ldr	r0, [r0]
   144d0:	movw	r1, #1
   144d4:	bl	250f8 <flatcc_builder_extend_vector@@Base>
   144d8:	str	r0, [fp, #-36]	; 0xffffffdc
   144dc:	movw	r1, #0
   144e0:	cmp	r0, r1
   144e4:	bne	144ec <main@@Base+0x870>
   144e8:	b	17ad4 <main@@Base+0x3e58>
   144ec:	ldr	r0, [fp, #-16]
   144f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   144f4:	str	r1, [fp, #-48]	; 0xffffffd0
   144f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   144fc:	sub	r3, fp, #62	; 0x3e
   14500:	bl	19678 <main@@Base+0x59fc>
   14504:	str	r0, [fp, #-20]	; 0xffffffec
   14508:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1450c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14510:	cmp	r0, r1
   14514:	bne	14568 <main@@Base+0x8ec>
   14518:	ldr	r0, [pc, #4024]	; 154d8 <main@@Base+0x185c>
   1451c:	add	r3, pc, r0
   14520:	ldr	r0, [fp, #-16]
   14524:	ldr	r1, [fp, #-20]	; 0xffffffec
   14528:	str	r1, [fp, #-48]	; 0xffffffd0
   1452c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14530:	sub	ip, fp, #62	; 0x3e
   14534:	str	ip, [sp]
   14538:	bl	19754 <main@@Base+0x5ad8>
   1453c:	str	r0, [fp, #-20]	; 0xffffffec
   14540:	ldr	r0, [fp, #-20]	; 0xffffffec
   14544:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14548:	cmp	r0, r1
   1454c:	beq	14560 <main@@Base+0x8e4>
   14550:	ldr	r0, [fp, #-20]	; 0xffffffec
   14554:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14558:	cmp	r0, r1
   1455c:	bne	14564 <main@@Base+0x8e8>
   14560:	b	17ad4 <main@@Base+0x3e58>
   14564:	b	14568 <main@@Base+0x8ec>
   14568:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1456c:	ldrb	r1, [fp, #-62]	; 0xffffffc2
   14570:	bl	19980 <main@@Base+0x5d04>
   14574:	ldr	r0, [fp, #-16]
   14578:	ldr	r1, [fp, #-20]	; 0xffffffec
   1457c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14580:	sub	r3, fp, #32
   14584:	bl	199ac <main@@Base+0x5d30>
   14588:	str	r0, [fp, #-20]	; 0xffffffec
   1458c:	b	144b4 <main@@Base+0x838>
   14590:	ldr	r0, [fp, #-16]
   14594:	ldr	r0, [r0]
   14598:	bl	270e8 <flatcc_builder_end_vector@@Base>
   1459c:	str	r0, [fp, #-40]	; 0xffffffd8
   145a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   145a4:	cmp	r0, #0
   145a8:	beq	145cc <main@@Base+0x950>
   145ac:	ldr	r0, [fp, #-16]
   145b0:	ldr	r0, [r0]
   145b4:	movw	r1, #30
   145b8:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   145bc:	str	r0, [fp, #-44]	; 0xffffffd4
   145c0:	movw	r1, #0
   145c4:	cmp	r0, r1
   145c8:	bne	145d0 <main@@Base+0x954>
   145cc:	b	17ad4 <main@@Base+0x3e58>
   145d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   145d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   145d8:	str	r0, [r1]
   145dc:	b	145f4 <main@@Base+0x978>
   145e0:	ldr	r0, [fp, #-16]
   145e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   145e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   145ec:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   145f0:	str	r0, [fp, #-20]	; 0xffffffec
   145f4:	b	1460c <main@@Base+0x990>
   145f8:	ldr	r0, [fp, #-16]
   145fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   14600:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14604:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   14608:	str	r0, [fp, #-20]	; 0xffffffec
   1460c:	b	14b2c <main@@Base+0xeb0>
   14610:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14614:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14618:	movw	r2, #28529	; 0x6f71
   1461c:	movt	r2, #28276	; 0x6e74
   14620:	subs	r0, r2, r0
   14624:	movw	r2, #30309	; 0x7665
   14628:	movt	r2, #26990	; 0x696e
   1462c:	sbcs	r1, r2, r1
   14630:	str	r0, [sp, #112]	; 0x70
   14634:	str	r1, [sp, #108]	; 0x6c
   14638:	bcc	147a0 <main@@Base+0xb24>
   1463c:	b	14640 <main@@Base+0x9c4>
   14640:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14644:	bfc	r0, #0, #16
   14648:	movw	r1, #0
   1464c:	movt	r1, #26736	; 0x6870
   14650:	teq	r0, r1
   14654:	bne	14788 <main@@Base+0xb0c>
   14658:	b	1465c <main@@Base+0x9e0>
   1465c:	ldr	r0, [fp, #-16]
   14660:	ldr	r1, [fp, #-20]	; 0xffffffec
   14664:	str	r1, [fp, #-48]	; 0xffffffd0
   14668:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1466c:	movw	r3, #2
   14670:	bl	17ce4 <main@@Base+0x4068>
   14674:	str	r0, [fp, #-20]	; 0xffffffec
   14678:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1467c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14680:	cmp	r0, r1
   14684:	beq	14770 <main@@Base+0xaf4>
   14688:	movw	r0, #0
   1468c:	strh	r0, [fp, #-64]	; 0xffffffc0
   14690:	ldr	r0, [fp, #-16]
   14694:	ldr	r1, [fp, #-20]	; 0xffffffec
   14698:	str	r1, [fp, #-48]	; 0xffffffd0
   1469c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   146a0:	sub	r3, fp, #64	; 0x40
   146a4:	bl	19b10 <main@@Base+0x5e94>
   146a8:	str	r0, [fp, #-20]	; 0xffffffec
   146ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   146b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   146b4:	cmp	r0, r1
   146b8:	bne	1470c <main@@Base+0xa90>
   146bc:	ldr	r0, [pc, #4088]	; 156bc <main@@Base+0x1a40>
   146c0:	add	r3, pc, r0
   146c4:	ldr	r0, [fp, #-16]
   146c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   146cc:	str	r1, [fp, #-48]	; 0xffffffd0
   146d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   146d4:	sub	ip, fp, #64	; 0x40
   146d8:	str	ip, [sp]
   146dc:	bl	19bec <main@@Base+0x5f70>
   146e0:	str	r0, [fp, #-20]	; 0xffffffec
   146e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   146e8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   146ec:	cmp	r0, r1
   146f0:	beq	14704 <main@@Base+0xa88>
   146f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   146f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   146fc:	cmp	r0, r1
   14700:	bne	14708 <main@@Base+0xa8c>
   14704:	b	17ad4 <main@@Base+0x3e58>
   14708:	b	1470c <main@@Base+0xa90>
   1470c:	ldrsh	r0, [fp, #-64]	; 0xffffffc0
   14710:	cmp	r0, #100	; 0x64
   14714:	bne	1472c <main@@Base+0xab0>
   14718:	ldr	r0, [fp, #-16]
   1471c:	ldr	r0, [r0, #8]
   14720:	and	r0, r0, #2
   14724:	cmp	r0, #0
   14728:	beq	1476c <main@@Base+0xaf0>
   1472c:	ldr	r0, [fp, #-16]
   14730:	ldr	r0, [r0]
   14734:	movw	r1, #2
   14738:	str	r1, [sp, #104]	; 0x68
   1473c:	ldr	r2, [sp, #104]	; 0x68
   14740:	movw	r3, #2
   14744:	uxth	r3, r3
   14748:	bl	27920 <flatcc_builder_table_add@@Base>
   1474c:	str	r0, [fp, #-36]	; 0xffffffdc
   14750:	movw	r1, #0
   14754:	cmp	r0, r1
   14758:	bne	14760 <main@@Base+0xae4>
   1475c:	b	17ad4 <main@@Base+0x3e58>
   14760:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14764:	ldrsh	r1, [fp, #-64]	; 0xffffffc0
   14768:	bl	19e18 <main@@Base+0x619c>
   1476c:	b	14784 <main@@Base+0xb08>
   14770:	ldr	r0, [fp, #-16]
   14774:	ldr	r1, [fp, #-20]	; 0xffffffec
   14778:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1477c:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   14780:	str	r0, [fp, #-20]	; 0xffffffec
   14784:	b	1479c <main@@Base+0xb20>
   14788:	ldr	r0, [fp, #-16]
   1478c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14790:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14794:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   14798:	str	r0, [fp, #-20]	; 0xffffffec
   1479c:	b	14b28 <main@@Base+0xeac>
   147a0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   147a4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   147a8:	movw	r2, #30309	; 0x7665
   147ac:	movt	r2, #26990	; 0x696e
   147b0:	eor	r1, r1, r2
   147b4:	movw	r2, #28530	; 0x6f72
   147b8:	movt	r2, #28276	; 0x6e74
   147bc:	eor	r0, r0, r2
   147c0:	orr	r0, r0, r1
   147c4:	cmp	r0, #0
   147c8:	bne	149cc <main@@Base+0xd50>
   147cc:	b	147d0 <main@@Base+0xb54>
   147d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   147d4:	add	r0, r0, #8
   147d8:	str	r0, [fp, #-20]	; 0xffffffec
   147dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   147e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   147e4:	bl	17cac <main@@Base+0x4030>
   147e8:	str	r1, [fp, #-52]	; 0xffffffcc
   147ec:	str	r0, [fp, #-56]	; 0xffffffc8
   147f0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   147f4:	and	r0, r0, #-16777216	; 0xff000000
   147f8:	teq	r0, #2030043136	; 0x79000000
   147fc:	bne	149b4 <main@@Base+0xd38>
   14800:	b	14804 <main@@Base+0xb88>
   14804:	ldr	r0, [fp, #-16]
   14808:	ldr	r1, [fp, #-20]	; 0xffffffec
   1480c:	str	r1, [fp, #-48]	; 0xffffffd0
   14810:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14814:	movw	r3, #1
   14818:	bl	17ce4 <main@@Base+0x4068>
   1481c:	str	r0, [fp, #-20]	; 0xffffffec
   14820:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14824:	ldr	r1, [fp, #-20]	; 0xffffffec
   14828:	cmp	r0, r1
   1482c:	beq	1499c <main@@Base+0xd20>
   14830:	ldr	r0, [fp, #-16]
   14834:	ldr	r0, [r0]
   14838:	movw	r1, #1
   1483c:	movw	r2, #1
   14840:	uxth	r2, r2
   14844:	mvn	r3, #0
   14848:	bl	25bf4 <flatcc_builder_start_vector@@Base>
   1484c:	cmp	r0, #0
   14850:	beq	14858 <main@@Base+0xbdc>
   14854:	b	17ad4 <main@@Base+0x3e58>
   14858:	ldr	r0, [fp, #-16]
   1485c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14860:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14864:	sub	r3, fp, #32
   14868:	bl	19594 <main@@Base+0x5918>
   1486c:	str	r0, [fp, #-20]	; 0xffffffec
   14870:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14874:	cmp	r0, #0
   14878:	beq	1494c <main@@Base+0xcd0>
   1487c:	movw	r0, #0
   14880:	strb	r0, [fp, #-65]	; 0xffffffbf
   14884:	ldr	r0, [fp, #-16]
   14888:	ldr	r0, [r0]
   1488c:	movw	r1, #1
   14890:	bl	250f8 <flatcc_builder_extend_vector@@Base>
   14894:	str	r0, [fp, #-36]	; 0xffffffdc
   14898:	movw	r1, #0
   1489c:	cmp	r0, r1
   148a0:	bne	148a8 <main@@Base+0xc2c>
   148a4:	b	17ad4 <main@@Base+0x3e58>
   148a8:	ldr	r0, [fp, #-16]
   148ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   148b0:	str	r1, [fp, #-48]	; 0xffffffd0
   148b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   148b8:	sub	r3, fp, #65	; 0x41
   148bc:	bl	19678 <main@@Base+0x59fc>
   148c0:	str	r0, [fp, #-20]	; 0xffffffec
   148c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   148c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   148cc:	cmp	r0, r1
   148d0:	bne	14924 <main@@Base+0xca8>
   148d4:	ldr	r0, [pc, #4012]	; 15888 <main@@Base+0x1c0c>
   148d8:	add	r3, pc, r0
   148dc:	ldr	r0, [fp, #-16]
   148e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   148e4:	str	r1, [fp, #-48]	; 0xffffffd0
   148e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   148ec:	sub	ip, fp, #65	; 0x41
   148f0:	str	ip, [sp]
   148f4:	bl	19754 <main@@Base+0x5ad8>
   148f8:	str	r0, [fp, #-20]	; 0xffffffec
   148fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   14900:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14904:	cmp	r0, r1
   14908:	beq	1491c <main@@Base+0xca0>
   1490c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14910:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14914:	cmp	r0, r1
   14918:	bne	14920 <main@@Base+0xca4>
   1491c:	b	17ad4 <main@@Base+0x3e58>
   14920:	b	14924 <main@@Base+0xca8>
   14924:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14928:	ldrb	r1, [fp, #-65]	; 0xffffffbf
   1492c:	bl	19980 <main@@Base+0x5d04>
   14930:	ldr	r0, [fp, #-16]
   14934:	ldr	r1, [fp, #-20]	; 0xffffffec
   14938:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1493c:	sub	r3, fp, #32
   14940:	bl	199ac <main@@Base+0x5d30>
   14944:	str	r0, [fp, #-20]	; 0xffffffec
   14948:	b	14870 <main@@Base+0xbf4>
   1494c:	ldr	r0, [fp, #-16]
   14950:	ldr	r0, [r0]
   14954:	bl	270e8 <flatcc_builder_end_vector@@Base>
   14958:	str	r0, [fp, #-40]	; 0xffffffd8
   1495c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14960:	cmp	r0, #0
   14964:	beq	14988 <main@@Base+0xd0c>
   14968:	ldr	r0, [fp, #-16]
   1496c:	ldr	r0, [r0]
   14970:	movw	r1, #5
   14974:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   14978:	str	r0, [fp, #-44]	; 0xffffffd4
   1497c:	movw	r1, #0
   14980:	cmp	r0, r1
   14984:	bne	1498c <main@@Base+0xd10>
   14988:	b	17ad4 <main@@Base+0x3e58>
   1498c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14990:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14994:	str	r0, [r1]
   14998:	b	149b0 <main@@Base+0xd34>
   1499c:	ldr	r0, [fp, #-16]
   149a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   149a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   149a8:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   149ac:	str	r0, [fp, #-20]	; 0xffffffec
   149b0:	b	149c8 <main@@Base+0xd4c>
   149b4:	ldr	r0, [fp, #-16]
   149b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   149bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   149c0:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   149c4:	str	r0, [fp, #-20]	; 0xffffffec
   149c8:	b	14b24 <main@@Base+0xea8>
   149cc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   149d0:	movw	r1, #28257	; 0x6e61
   149d4:	movt	r1, #28001	; 0x6d61
   149d8:	teq	r0, r1
   149dc:	bne	14b0c <main@@Base+0xe90>
   149e0:	b	149e4 <main@@Base+0xd68>
   149e4:	ldr	r0, [fp, #-16]
   149e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   149ec:	str	r1, [fp, #-48]	; 0xffffffd0
   149f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   149f4:	movw	r3, #4
   149f8:	bl	17ce4 <main@@Base+0x4068>
   149fc:	str	r0, [fp, #-20]	; 0xffffffec
   14a00:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14a04:	ldr	r1, [fp, #-20]	; 0xffffffec
   14a08:	cmp	r0, r1
   14a0c:	beq	14af4 <main@@Base+0xe78>
   14a10:	movw	r0, #0
   14a14:	strh	r0, [fp, #-68]	; 0xffffffbc
   14a18:	ldr	r0, [fp, #-16]
   14a1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14a20:	str	r1, [fp, #-48]	; 0xffffffd0
   14a24:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14a28:	sub	r3, fp, #68	; 0x44
   14a2c:	bl	19b10 <main@@Base+0x5e94>
   14a30:	str	r0, [fp, #-20]	; 0xffffffec
   14a34:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14a38:	ldr	r1, [fp, #-20]	; 0xffffffec
   14a3c:	cmp	r0, r1
   14a40:	bne	14a94 <main@@Base+0xe18>
   14a44:	ldr	r0, [pc, #3988]	; 159e0 <main@@Base+0x1d64>
   14a48:	add	r3, pc, r0
   14a4c:	ldr	r0, [fp, #-16]
   14a50:	ldr	r1, [fp, #-20]	; 0xffffffec
   14a54:	str	r1, [fp, #-48]	; 0xffffffd0
   14a58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14a5c:	sub	ip, fp, #68	; 0x44
   14a60:	str	ip, [sp]
   14a64:	bl	19bec <main@@Base+0x5f70>
   14a68:	str	r0, [fp, #-20]	; 0xffffffec
   14a6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14a70:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14a74:	cmp	r0, r1
   14a78:	beq	14a8c <main@@Base+0xe10>
   14a7c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14a80:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14a84:	cmp	r0, r1
   14a88:	bne	14a90 <main@@Base+0xe14>
   14a8c:	b	17ad4 <main@@Base+0x3e58>
   14a90:	b	14a94 <main@@Base+0xe18>
   14a94:	ldrsh	r0, [fp, #-68]	; 0xffffffbc
   14a98:	cmp	r0, #150	; 0x96
   14a9c:	bne	14ab4 <main@@Base+0xe38>
   14aa0:	ldr	r0, [fp, #-16]
   14aa4:	ldr	r0, [r0, #8]
   14aa8:	and	r0, r0, #2
   14aac:	cmp	r0, #0
   14ab0:	beq	14af0 <main@@Base+0xe74>
   14ab4:	ldr	r0, [fp, #-16]
   14ab8:	ldr	r0, [r0]
   14abc:	movw	r1, #1
   14ac0:	movw	r2, #2
   14ac4:	movw	r3, #2
   14ac8:	uxth	r3, r3
   14acc:	bl	27920 <flatcc_builder_table_add@@Base>
   14ad0:	str	r0, [fp, #-36]	; 0xffffffdc
   14ad4:	movw	r1, #0
   14ad8:	cmp	r0, r1
   14adc:	bne	14ae4 <main@@Base+0xe68>
   14ae0:	b	17ad4 <main@@Base+0x3e58>
   14ae4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14ae8:	ldrsh	r1, [fp, #-68]	; 0xffffffbc
   14aec:	bl	19e18 <main@@Base+0x619c>
   14af0:	b	14b08 <main@@Base+0xe8c>
   14af4:	ldr	r0, [fp, #-16]
   14af8:	ldr	r1, [fp, #-20]	; 0xffffffec
   14afc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14b00:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   14b04:	str	r0, [fp, #-20]	; 0xffffffec
   14b08:	b	14b20 <main@@Base+0xea4>
   14b0c:	ldr	r0, [fp, #-16]
   14b10:	ldr	r1, [fp, #-20]	; 0xffffffec
   14b14:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14b18:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   14b1c:	str	r0, [fp, #-20]	; 0xffffffec
   14b20:	b	14b24 <main@@Base+0xea8>
   14b24:	b	14b28 <main@@Base+0xeac>
   14b28:	b	14b2c <main@@Base+0xeb0>
   14b2c:	b	14b30 <main@@Base+0xeb4>
   14b30:	b	15350 <main@@Base+0x16d4>
   14b34:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14b38:	movw	r1, #29555	; 0x7373
   14b3c:	movt	r1, #29797	; 0x7465
   14b40:	cmp	r0, r1
   14b44:	bhi	14eac <main@@Base+0x1230>
   14b48:	b	14b4c <main@@Base+0xed0>
   14b4c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14b50:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14b54:	movw	r2, #24429	; 0x5f6d
   14b58:	movt	r2, #28276	; 0x6e74
   14b5c:	subs	r0, r2, r0
   14b60:	movw	r2, #29285	; 0x7265
   14b64:	movt	r2, #28769	; 0x7061
   14b68:	sbcs	r1, r2, r1
   14b6c:	str	r0, [sp, #100]	; 0x64
   14b70:	str	r1, [sp, #96]	; 0x60
   14b74:	bcc	14c48 <main@@Base+0xfcc>
   14b78:	b	14b7c <main@@Base+0xf00>
   14b7c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14b80:	movw	r1, #28005	; 0x6d65
   14b84:	movt	r1, #28257	; 0x6e61
   14b88:	teq	r0, r1
   14b8c:	bne	14c30 <main@@Base+0xfb4>
   14b90:	b	14b94 <main@@Base+0xf18>
   14b94:	ldr	r0, [fp, #-16]
   14b98:	ldr	r1, [fp, #-20]	; 0xffffffec
   14b9c:	str	r1, [fp, #-48]	; 0xffffffd0
   14ba0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14ba4:	movw	r3, #4
   14ba8:	bl	17ce4 <main@@Base+0x4068>
   14bac:	str	r0, [fp, #-20]	; 0xffffffec
   14bb0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14bb4:	ldr	r1, [fp, #-20]	; 0xffffffec
   14bb8:	cmp	r0, r1
   14bbc:	beq	14c18 <main@@Base+0xf9c>
   14bc0:	ldr	r0, [fp, #-16]
   14bc4:	ldr	r1, [fp, #-20]	; 0xffffffec
   14bc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14bcc:	sub	r3, fp, #40	; 0x28
   14bd0:	bl	2dfac <flatcc_json_parser_build_string@@Base>
   14bd4:	str	r0, [fp, #-20]	; 0xffffffec
   14bd8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14bdc:	cmp	r0, #0
   14be0:	beq	14c04 <main@@Base+0xf88>
   14be4:	ldr	r0, [fp, #-16]
   14be8:	ldr	r0, [r0]
   14bec:	movw	r1, #3
   14bf0:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   14bf4:	str	r0, [fp, #-44]	; 0xffffffd4
   14bf8:	movw	r1, #0
   14bfc:	cmp	r0, r1
   14c00:	bne	14c08 <main@@Base+0xf8c>
   14c04:	b	17ad4 <main@@Base+0x3e58>
   14c08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14c0c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14c10:	str	r0, [r1]
   14c14:	b	14c2c <main@@Base+0xfb0>
   14c18:	ldr	r0, [fp, #-16]
   14c1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14c20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14c24:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   14c28:	str	r0, [fp, #-20]	; 0xffffffec
   14c2c:	b	14c44 <main@@Base+0xfc8>
   14c30:	ldr	r0, [fp, #-16]
   14c34:	ldr	r1, [fp, #-20]	; 0xffffffec
   14c38:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14c3c:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   14c40:	str	r0, [fp, #-20]	; 0xffffffec
   14c44:	b	14ea8 <main@@Base+0x122c>
   14c48:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14c4c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14c50:	movw	r2, #29285	; 0x7265
   14c54:	movt	r2, #28769	; 0x7061
   14c58:	eor	r1, r1, r2
   14c5c:	movw	r2, #24430	; 0x5f6e
   14c60:	movt	r2, #28276	; 0x6e74
   14c64:	eor	r0, r0, r2
   14c68:	orr	r0, r0, r1
   14c6c:	cmp	r0, #0
   14c70:	bne	14de0 <main@@Base+0x1164>
   14c74:	b	14c78 <main@@Base+0xffc>
   14c78:	ldr	r0, [fp, #-20]	; 0xffffffec
   14c7c:	add	r0, r0, #8
   14c80:	str	r0, [fp, #-20]	; 0xffffffec
   14c84:	ldr	r0, [fp, #-20]	; 0xffffffec
   14c88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14c8c:	bl	17cac <main@@Base+0x4030>
   14c90:	str	r1, [fp, #-52]	; 0xffffffcc
   14c94:	str	r0, [fp, #-56]	; 0xffffffc8
   14c98:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14c9c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14ca0:	movw	lr, #25971	; 0x6573
   14ca4:	movt	lr, #24941	; 0x616d
   14ca8:	eor	r1, r1, lr
   14cac:	movw	lr, #25445	; 0x6365
   14cb0:	movt	lr, #28769	; 0x7061
   14cb4:	eor	r0, r0, lr
   14cb8:	orr	r0, r0, r1
   14cbc:	cmp	r0, #0
   14cc0:	bne	14dc8 <main@@Base+0x114c>
   14cc4:	b	14cc8 <main@@Base+0x104c>
   14cc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   14ccc:	add	r0, r0, #8
   14cd0:	str	r0, [fp, #-20]	; 0xffffffec
   14cd4:	ldr	r0, [fp, #-20]	; 0xffffffec
   14cd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14cdc:	bl	17cac <main@@Base+0x4030>
   14ce0:	str	r1, [fp, #-52]	; 0xffffffcc
   14ce4:	str	r0, [fp, #-56]	; 0xffffffc8
   14ce8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14cec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14cf0:	and	r0, r0, #-16777216	; 0xff000000
   14cf4:	movw	lr, #25971	; 0x6573
   14cf8:	movt	lr, #24436	; 0x5f74
   14cfc:	eor	r1, r1, lr
   14d00:	eor	r0, r0, #1946157056	; 0x74000000
   14d04:	orr	r0, r0, r1
   14d08:	cmp	r0, #0
   14d0c:	bne	14db0 <main@@Base+0x1134>
   14d10:	b	14d14 <main@@Base+0x1098>
   14d14:	ldr	r0, [fp, #-16]
   14d18:	ldr	r1, [fp, #-20]	; 0xffffffec
   14d1c:	str	r1, [fp, #-48]	; 0xffffffd0
   14d20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14d24:	movw	r3, #5
   14d28:	bl	17ce4 <main@@Base+0x4068>
   14d2c:	str	r0, [fp, #-20]	; 0xffffffec
   14d30:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14d34:	ldr	r1, [fp, #-20]	; 0xffffffec
   14d38:	cmp	r0, r1
   14d3c:	beq	14d98 <main@@Base+0x111c>
   14d40:	ldr	r0, [fp, #-16]
   14d44:	ldr	r1, [fp, #-20]	; 0xffffffec
   14d48:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14d4c:	sub	r3, fp, #40	; 0x28
   14d50:	bl	19e44 <main@@Base+0x61c8>
   14d54:	str	r0, [fp, #-20]	; 0xffffffec
   14d58:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14d5c:	cmp	r0, #0
   14d60:	beq	14d84 <main@@Base+0x1108>
   14d64:	ldr	r0, [fp, #-16]
   14d68:	ldr	r0, [r0]
   14d6c:	movw	r1, #34	; 0x22
   14d70:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   14d74:	str	r0, [fp, #-44]	; 0xffffffd4
   14d78:	movw	r1, #0
   14d7c:	cmp	r0, r1
   14d80:	bne	14d88 <main@@Base+0x110c>
   14d84:	b	17ad4 <main@@Base+0x3e58>
   14d88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14d8c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14d90:	str	r0, [r1]
   14d94:	b	14dac <main@@Base+0x1130>
   14d98:	ldr	r0, [fp, #-16]
   14d9c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14da0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14da4:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   14da8:	str	r0, [fp, #-20]	; 0xffffffec
   14dac:	b	14dc4 <main@@Base+0x1148>
   14db0:	ldr	r0, [fp, #-16]
   14db4:	ldr	r1, [fp, #-20]	; 0xffffffec
   14db8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14dbc:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   14dc0:	str	r0, [fp, #-20]	; 0xffffffec
   14dc4:	b	14ddc <main@@Base+0x1160>
   14dc8:	ldr	r0, [fp, #-16]
   14dcc:	ldr	r1, [fp, #-20]	; 0xffffffec
   14dd0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14dd4:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   14dd8:	str	r0, [fp, #-20]	; 0xffffffec
   14ddc:	b	14ea4 <main@@Base+0x1228>
   14de0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14de4:	bic	r0, r0, #255	; 0xff
   14de8:	movw	r1, #29440	; 0x7300
   14dec:	movt	r1, #28783	; 0x706f
   14df0:	teq	r0, r1
   14df4:	bne	14e8c <main@@Base+0x1210>
   14df8:	b	14dfc <main@@Base+0x1180>
   14dfc:	ldr	r0, [fp, #-16]
   14e00:	ldr	r1, [fp, #-20]	; 0xffffffec
   14e04:	str	r1, [fp, #-48]	; 0xffffffd0
   14e08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14e0c:	movw	r3, #3
   14e10:	bl	17ce4 <main@@Base+0x4068>
   14e14:	str	r0, [fp, #-20]	; 0xffffffec
   14e18:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14e1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14e20:	cmp	r0, r1
   14e24:	beq	14e74 <main@@Base+0x11f8>
   14e28:	ldr	r0, [fp, #-16]
   14e2c:	ldr	r0, [r0]
   14e30:	movw	r1, #0
   14e34:	movw	r2, #32
   14e38:	movw	r3, #16
   14e3c:	uxth	r3, r3
   14e40:	bl	27920 <flatcc_builder_table_add@@Base>
   14e44:	str	r0, [fp, #-36]	; 0xffffffdc
   14e48:	movw	r1, #0
   14e4c:	cmp	r0, r1
   14e50:	bne	14e58 <main@@Base+0x11dc>
   14e54:	b	17ad4 <main@@Base+0x3e58>
   14e58:	ldr	r0, [fp, #-16]
   14e5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14e60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14e64:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14e68:	bl	19f50 <main@@Base+0x62d4>
   14e6c:	str	r0, [fp, #-20]	; 0xffffffec
   14e70:	b	14e88 <main@@Base+0x120c>
   14e74:	ldr	r0, [fp, #-16]
   14e78:	ldr	r1, [fp, #-20]	; 0xffffffec
   14e7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14e80:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   14e84:	str	r0, [fp, #-20]	; 0xffffffec
   14e88:	b	14ea0 <main@@Base+0x1224>
   14e8c:	ldr	r0, [fp, #-16]
   14e90:	ldr	r1, [fp, #-20]	; 0xffffffec
   14e94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14e98:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   14e9c:	str	r0, [fp, #-20]	; 0xffffffec
   14ea0:	b	14ea4 <main@@Base+0x1228>
   14ea4:	b	14ea8 <main@@Base+0x122c>
   14ea8:	b	1534c <main@@Base+0x16d0>
   14eac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14eb0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14eb4:	and	r0, r0, #-16777216	; 0xff000000
   14eb8:	movw	r2, #29556	; 0x7374
   14ebc:	movt	r2, #29797	; 0x7465
   14ec0:	eor	r1, r1, r2
   14ec4:	eor	r0, r0, #872415232	; 0x34000000
   14ec8:	orr	r0, r0, r1
   14ecc:	cmp	r0, #0
   14ed0:	bne	15000 <main@@Base+0x1384>
   14ed4:	b	14ed8 <main@@Base+0x125c>
   14ed8:	ldr	r0, [fp, #-16]
   14edc:	ldr	r1, [fp, #-20]	; 0xffffffec
   14ee0:	str	r1, [fp, #-48]	; 0xffffffd0
   14ee4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14ee8:	movw	r3, #5
   14eec:	bl	17ce4 <main@@Base+0x4068>
   14ef0:	str	r0, [fp, #-20]	; 0xffffffec
   14ef4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14ef8:	ldr	r1, [fp, #-20]	; 0xffffffec
   14efc:	cmp	r0, r1
   14f00:	beq	14ff8 <main@@Base+0x137c>
   14f04:	ldr	r3, [pc, #4088]	; 15f04 <main@@Base+0x2288>
   14f08:	ldr	r0, [fp, #-16]
   14f0c:	ldr	r0, [r0]
   14f10:	movw	r1, #4
   14f14:	movw	r2, #2
   14f18:	uxth	r2, r2
   14f1c:	bl	25bf4 <flatcc_builder_start_vector@@Base>
   14f20:	cmp	r0, #0
   14f24:	beq	14f2c <main@@Base+0x12b0>
   14f28:	b	17ad4 <main@@Base+0x3e58>
   14f2c:	ldr	r0, [fp, #-16]
   14f30:	ldr	r1, [fp, #-20]	; 0xffffffec
   14f34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14f38:	sub	r3, fp, #32
   14f3c:	bl	19594 <main@@Base+0x5918>
   14f40:	str	r0, [fp, #-20]	; 0xffffffec
   14f44:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14f48:	cmp	r0, #0
   14f4c:	beq	14fa8 <main@@Base+0x132c>
   14f50:	ldr	r0, [fp, #-16]
   14f54:	ldr	r0, [r0]
   14f58:	movw	r1, #1
   14f5c:	bl	250f8 <flatcc_builder_extend_vector@@Base>
   14f60:	str	r0, [fp, #-36]	; 0xffffffdc
   14f64:	movw	r1, #0
   14f68:	cmp	r0, r1
   14f6c:	bne	14f74 <main@@Base+0x12f8>
   14f70:	b	17ad4 <main@@Base+0x3e58>
   14f74:	ldr	r0, [fp, #-16]
   14f78:	ldr	r1, [fp, #-20]	; 0xffffffec
   14f7c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14f80:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14f84:	bl	1a684 <main@@Base+0x6a08>
   14f88:	str	r0, [fp, #-20]	; 0xffffffec
   14f8c:	ldr	r0, [fp, #-16]
   14f90:	ldr	r1, [fp, #-20]	; 0xffffffec
   14f94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14f98:	sub	r3, fp, #32
   14f9c:	bl	199ac <main@@Base+0x5d30>
   14fa0:	str	r0, [fp, #-20]	; 0xffffffec
   14fa4:	b	14f44 <main@@Base+0x12c8>
   14fa8:	ldr	r0, [fp, #-16]
   14fac:	ldr	r0, [r0]
   14fb0:	bl	270e8 <flatcc_builder_end_vector@@Base>
   14fb4:	str	r0, [fp, #-40]	; 0xffffffd8
   14fb8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14fbc:	cmp	r0, #0
   14fc0:	beq	14fe4 <main@@Base+0x1368>
   14fc4:	ldr	r0, [fp, #-16]
   14fc8:	ldr	r0, [r0]
   14fcc:	movw	r1, #9
   14fd0:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   14fd4:	str	r0, [fp, #-44]	; 0xffffffd4
   14fd8:	movw	r1, #0
   14fdc:	cmp	r0, r1
   14fe0:	bne	14fe8 <main@@Base+0x136c>
   14fe4:	b	17ad4 <main@@Base+0x3e58>
   14fe8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14fec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14ff0:	str	r0, [r1]
   14ff4:	b	14ffc <main@@Base+0x1380>
   14ff8:	b	150a8 <main@@Base+0x142c>
   14ffc:	b	150a4 <main@@Base+0x1428>
   15000:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15004:	movw	r1, #29556	; 0x7374
   15008:	movt	r1, #29797	; 0x7465
   1500c:	teq	r0, r1
   15010:	bne	1509c <main@@Base+0x1420>
   15014:	b	15018 <main@@Base+0x139c>
   15018:	ldr	r0, [fp, #-16]
   1501c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15020:	str	r1, [fp, #-48]	; 0xffffffd0
   15024:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15028:	movw	r3, #4
   1502c:	bl	17ce4 <main@@Base+0x4068>
   15030:	str	r0, [fp, #-20]	; 0xffffffec
   15034:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15038:	ldr	r1, [fp, #-20]	; 0xffffffec
   1503c:	cmp	r0, r1
   15040:	beq	15094 <main@@Base+0x1418>
   15044:	ldr	r0, [pc, #4068]	; 16030 <main@@Base+0x23b4>
   15048:	add	r0, pc, r0
   1504c:	ldr	r1, [fp, #-16]
   15050:	ldr	r2, [fp, #-20]	; 0xffffffec
   15054:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15058:	ldr	ip, [fp, #-60]	; 0xffffffc4
   1505c:	str	r0, [sp, #92]	; 0x5c
   15060:	mov	r0, r1
   15064:	mov	r1, r2
   15068:	mov	r2, r3
   1506c:	movw	r3, #0
   15070:	movw	lr, #8
   15074:	uxth	lr, lr
   15078:	str	lr, [sp]
   1507c:	str	ip, [sp, #4]
   15080:	ldr	ip, [sp, #92]	; 0x5c
   15084:	str	ip, [sp, #8]
   15088:	bl	2e2d8 <flatcc_json_parser_union@@Base>
   1508c:	str	r0, [fp, #-20]	; 0xffffffec
   15090:	b	15098 <main@@Base+0x141c>
   15094:	b	150a8 <main@@Base+0x142c>
   15098:	b	150a0 <main@@Base+0x1424>
   1509c:	b	150a8 <main@@Base+0x142c>
   150a0:	b	150a4 <main@@Base+0x1428>
   150a4:	b	15348 <main@@Base+0x16cc>
   150a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   150ac:	ldr	r1, [fp, #-52]	; 0xffffffcc
   150b0:	and	r0, r0, #-16777216	; 0xff000000
   150b4:	movw	r2, #29556	; 0x7374
   150b8:	movt	r2, #29797	; 0x7465
   150bc:	eor	r1, r1, r2
   150c0:	eor	r0, r0, #889192448	; 0x35000000
   150c4:	orr	r0, r0, r1
   150c8:	cmp	r0, #0
   150cc:	bne	151fc <main@@Base+0x1580>
   150d0:	b	150d4 <main@@Base+0x1458>
   150d4:	ldr	r0, [fp, #-16]
   150d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   150dc:	str	r1, [fp, #-48]	; 0xffffffd0
   150e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   150e4:	movw	r3, #5
   150e8:	bl	17ce4 <main@@Base+0x4068>
   150ec:	str	r0, [fp, #-20]	; 0xffffffec
   150f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   150f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   150f8:	cmp	r0, r1
   150fc:	beq	151f4 <main@@Base+0x1578>
   15100:	ldr	r3, [pc, #3580]	; 15f04 <main@@Base+0x2288>
   15104:	ldr	r0, [fp, #-16]
   15108:	ldr	r0, [r0]
   1510c:	movw	r1, #4
   15110:	movw	r2, #2
   15114:	uxth	r2, r2
   15118:	bl	25bf4 <flatcc_builder_start_vector@@Base>
   1511c:	cmp	r0, #0
   15120:	beq	15128 <main@@Base+0x14ac>
   15124:	b	17ad4 <main@@Base+0x3e58>
   15128:	ldr	r0, [fp, #-16]
   1512c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15130:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15134:	sub	r3, fp, #32
   15138:	bl	19594 <main@@Base+0x5918>
   1513c:	str	r0, [fp, #-20]	; 0xffffffec
   15140:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15144:	cmp	r0, #0
   15148:	beq	151a4 <main@@Base+0x1528>
   1514c:	ldr	r0, [fp, #-16]
   15150:	ldr	r0, [r0]
   15154:	movw	r1, #1
   15158:	bl	250f8 <flatcc_builder_extend_vector@@Base>
   1515c:	str	r0, [fp, #-36]	; 0xffffffdc
   15160:	movw	r1, #0
   15164:	cmp	r0, r1
   15168:	bne	15170 <main@@Base+0x14f4>
   1516c:	b	17ad4 <main@@Base+0x3e58>
   15170:	ldr	r0, [fp, #-16]
   15174:	ldr	r1, [fp, #-20]	; 0xffffffec
   15178:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1517c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15180:	bl	1a684 <main@@Base+0x6a08>
   15184:	str	r0, [fp, #-20]	; 0xffffffec
   15188:	ldr	r0, [fp, #-16]
   1518c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15190:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15194:	sub	r3, fp, #32
   15198:	bl	199ac <main@@Base+0x5d30>
   1519c:	str	r0, [fp, #-20]	; 0xffffffec
   151a0:	b	15140 <main@@Base+0x14c4>
   151a4:	ldr	r0, [fp, #-16]
   151a8:	ldr	r0, [r0]
   151ac:	bl	270e8 <flatcc_builder_end_vector@@Base>
   151b0:	str	r0, [fp, #-40]	; 0xffffffd8
   151b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   151b8:	cmp	r0, #0
   151bc:	beq	151e0 <main@@Base+0x1564>
   151c0:	ldr	r0, [fp, #-16]
   151c4:	ldr	r0, [r0]
   151c8:	movw	r1, #31
   151cc:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   151d0:	str	r0, [fp, #-44]	; 0xffffffd4
   151d4:	movw	r1, #0
   151d8:	cmp	r0, r1
   151dc:	bne	151e4 <main@@Base+0x1568>
   151e0:	b	17ad4 <main@@Base+0x3e58>
   151e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   151e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   151ec:	str	r0, [r1]
   151f0:	b	151f8 <main@@Base+0x157c>
   151f4:	b	15204 <main@@Base+0x1588>
   151f8:	b	15200 <main@@Base+0x1584>
   151fc:	b	15204 <main@@Base+0x1588>
   15200:	b	15344 <main@@Base+0x16c8>
   15204:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15208:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1520c:	movw	r2, #29556	; 0x7374
   15210:	movt	r2, #29797	; 0x7465
   15214:	eor	r1, r1, r2
   15218:	movw	r2, #31088	; 0x7970
   1521c:	movt	r2, #24436	; 0x5f74
   15220:	eor	r0, r0, r2
   15224:	orr	r0, r0, r1
   15228:	cmp	r0, #0
   1522c:	bne	1532c <main@@Base+0x16b0>
   15230:	b	15234 <main@@Base+0x15b8>
   15234:	ldr	r0, [fp, #-20]	; 0xffffffec
   15238:	add	r0, r0, #8
   1523c:	str	r0, [fp, #-20]	; 0xffffffec
   15240:	ldr	r0, [fp, #-20]	; 0xffffffec
   15244:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15248:	bl	17cac <main@@Base+0x4030>
   1524c:	str	r1, [fp, #-52]	; 0xffffffcc
   15250:	str	r0, [fp, #-56]	; 0xffffffc8
   15254:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15258:	and	r0, r0, #-16777216	; 0xff000000
   1525c:	teq	r0, #1694498816	; 0x65000000
   15260:	bne	15310 <main@@Base+0x1694>
   15264:	b	15268 <main@@Base+0x15ec>
   15268:	ldr	r0, [fp, #-16]
   1526c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15270:	str	r1, [fp, #-48]	; 0xffffffd0
   15274:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15278:	movw	r3, #1
   1527c:	bl	17ce4 <main@@Base+0x4068>
   15280:	str	r0, [fp, #-20]	; 0xffffffec
   15284:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15288:	ldr	r1, [fp, #-20]	; 0xffffffec
   1528c:	cmp	r0, r1
   15290:	beq	152f8 <main@@Base+0x167c>
   15294:	ldr	r0, [pc, #4084]	; 16290 <main@@Base+0x2614>
   15298:	add	r0, pc, r0
   1529c:	ldr	r1, [pc, #4080]	; 16294 <main@@Base+0x2618>
   152a0:	add	r1, pc, r1
   152a4:	ldr	r2, [fp, #-16]
   152a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   152ac:	ldr	ip, [fp, #-24]	; 0xffffffe8
   152b0:	ldr	lr, [fp, #-60]	; 0xffffffc4
   152b4:	str	r0, [sp, #88]	; 0x58
   152b8:	mov	r0, r2
   152bc:	str	r1, [sp, #84]	; 0x54
   152c0:	mov	r1, r3
   152c4:	mov	r2, ip
   152c8:	movw	r3, #0
   152cc:	movw	ip, #8
   152d0:	uxth	ip, ip
   152d4:	str	ip, [sp]
   152d8:	str	lr, [sp, #4]
   152dc:	ldr	ip, [sp, #88]	; 0x58
   152e0:	str	ip, [sp, #8]
   152e4:	ldr	lr, [sp, #84]	; 0x54
   152e8:	str	lr, [sp, #12]
   152ec:	bl	2e4c4 <flatcc_json_parser_union_type@@Base>
   152f0:	str	r0, [fp, #-20]	; 0xffffffec
   152f4:	b	1530c <main@@Base+0x1690>
   152f8:	ldr	r0, [fp, #-16]
   152fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   15300:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15304:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   15308:	str	r0, [fp, #-20]	; 0xffffffec
   1530c:	b	15324 <main@@Base+0x16a8>
   15310:	ldr	r0, [fp, #-16]
   15314:	ldr	r1, [fp, #-20]	; 0xffffffec
   15318:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1531c:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   15320:	str	r0, [fp, #-20]	; 0xffffffec
   15324:	b	15340 <main@@Base+0x16c4>
   15328:	andeq	pc, r2, ip, asr sp	; <UNPREDICTABLE>
   1532c:	ldr	r0, [fp, #-16]
   15330:	ldr	r1, [fp, #-20]	; 0xffffffec
   15334:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15338:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1533c:	str	r0, [fp, #-20]	; 0xffffffec
   15340:	b	15344 <main@@Base+0x16c8>
   15344:	b	15348 <main@@Base+0x16cc>
   15348:	b	1534c <main@@Base+0x16d0>
   1534c:	b	15350 <main@@Base+0x16d4>
   15350:	b	17a20 <main@@Base+0x3da4>
   15354:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15358:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1535c:	movw	r2, #65535	; 0xffff
   15360:	movt	r2, #26162	; 0x6632
   15364:	subs	r0, r2, r0
   15368:	movw	r2, #29556	; 0x7374
   1536c:	movt	r2, #29797	; 0x7465
   15370:	sbcs	r1, r2, r1
   15374:	str	r0, [sp, #80]	; 0x50
   15378:	str	r1, [sp, #76]	; 0x4c
   1537c:	bcc	163f4 <main@@Base+0x2778>
   15380:	b	15384 <main@@Base+0x1708>
   15384:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15388:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1538c:	movw	r2, #29556	; 0x7374
   15390:	movt	r2, #29797	; 0x7465
   15394:	eor	r1, r1, r2
   15398:	movw	r2, #29281	; 0x7261
   1539c:	movt	r2, #24946	; 0x6172
   153a0:	eor	r0, r0, r2
   153a4:	orr	r0, r0, r1
   153a8:	cmp	r0, #0
   153ac:	bne	15cd8 <main@@Base+0x205c>
   153b0:	b	153b4 <main@@Base+0x1738>
   153b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   153b8:	add	r0, r0, #8
   153bc:	str	r0, [fp, #-20]	; 0xffffffec
   153c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   153c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   153c8:	bl	17cac <main@@Base+0x4030>
   153cc:	str	r1, [fp, #-52]	; 0xffffffcc
   153d0:	str	r0, [fp, #-56]	; 0xffffffc8
   153d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   153d8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   153dc:	movw	lr, #26989	; 0x696d
   153e0:	movt	lr, #29810	; 0x7472
   153e4:	subs	r0, lr, r0
   153e8:	movw	lr, #26227	; 0x6673
   153ec:	movt	lr, #31087	; 0x796f
   153f0:	sbcs	r1, lr, r1
   153f4:	str	r0, [sp, #72]	; 0x48
   153f8:	str	r1, [sp, #68]	; 0x44
   153fc:	bcc	157d8 <main@@Base+0x1b5c>
   15400:	b	15404 <main@@Base+0x1788>
   15404:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15408:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1540c:	movw	r2, #26210	; 0x6662
   15410:	movt	r2, #31087	; 0x796f
   15414:	eor	r1, r1, r2
   15418:	movw	r2, #27763	; 0x6c73
   1541c:	movt	r2, #28527	; 0x6f6f
   15420:	eor	r0, r0, r2
   15424:	orr	r0, r0, r1
   15428:	cmp	r0, #0
   1542c:	bne	155d8 <main@@Base+0x195c>
   15430:	b	15434 <main@@Base+0x17b8>
   15434:	ldr	r0, [fp, #-16]
   15438:	ldr	r1, [fp, #-20]	; 0xffffffec
   1543c:	str	r1, [fp, #-48]	; 0xffffffd0
   15440:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15444:	movw	r3, #8
   15448:	bl	17ce4 <main@@Base+0x4068>
   1544c:	str	r0, [fp, #-20]	; 0xffffffec
   15450:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15454:	ldr	r1, [fp, #-20]	; 0xffffffec
   15458:	cmp	r0, r1
   1545c:	beq	155d0 <main@@Base+0x1954>
   15460:	ldr	r0, [fp, #-16]
   15464:	ldr	r0, [r0]
   15468:	movw	r1, #1
   1546c:	movw	r2, #1
   15470:	uxth	r2, r2
   15474:	mvn	r3, #0
   15478:	bl	25bf4 <flatcc_builder_start_vector@@Base>
   1547c:	cmp	r0, #0
   15480:	beq	15488 <main@@Base+0x180c>
   15484:	b	17ad4 <main@@Base+0x3e58>
   15488:	ldr	r0, [fp, #-16]
   1548c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15490:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15494:	sub	r3, fp, #32
   15498:	bl	19594 <main@@Base+0x5918>
   1549c:	str	r0, [fp, #-20]	; 0xffffffec
   154a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   154a4:	cmp	r0, #0
   154a8:	beq	15580 <main@@Base+0x1904>
   154ac:	movw	r0, #0
   154b0:	strb	r0, [fp, #-69]	; 0xffffffbb
   154b4:	ldr	r0, [fp, #-16]
   154b8:	ldr	r0, [r0]
   154bc:	movw	r1, #1
   154c0:	bl	250f8 <flatcc_builder_extend_vector@@Base>
   154c4:	str	r0, [fp, #-36]	; 0xffffffdc
   154c8:	movw	r1, #0
   154cc:	cmp	r0, r1
   154d0:	bne	154dc <main@@Base+0x1860>
   154d4:	b	17ad4 <main@@Base+0x3e58>
   154d8:	andeq	pc, r2, r8, lsl #23
   154dc:	ldr	r0, [fp, #-16]
   154e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   154e4:	str	r1, [fp, #-48]	; 0xffffffd0
   154e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   154ec:	sub	r3, fp, #69	; 0x45
   154f0:	bl	1af60 <main@@Base+0x72e4>
   154f4:	str	r0, [fp, #-20]	; 0xffffffec
   154f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   154fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   15500:	cmp	r0, r1
   15504:	bne	15558 <main@@Base+0x18dc>
   15508:	ldr	r0, [pc, #4080]	; 16500 <main@@Base+0x2884>
   1550c:	add	r3, pc, r0
   15510:	ldr	r0, [fp, #-16]
   15514:	ldr	r1, [fp, #-20]	; 0xffffffec
   15518:	str	r1, [fp, #-48]	; 0xffffffd0
   1551c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15520:	sub	ip, fp, #69	; 0x45
   15524:	str	ip, [sp]
   15528:	bl	1b088 <main@@Base+0x740c>
   1552c:	str	r0, [fp, #-20]	; 0xffffffec
   15530:	ldr	r0, [fp, #-20]	; 0xffffffec
   15534:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15538:	cmp	r0, r1
   1553c:	beq	15550 <main@@Base+0x18d4>
   15540:	ldr	r0, [fp, #-20]	; 0xffffffec
   15544:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15548:	cmp	r0, r1
   1554c:	bne	15554 <main@@Base+0x18d8>
   15550:	b	17ad4 <main@@Base+0x3e58>
   15554:	b	15558 <main@@Base+0x18dc>
   15558:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1555c:	ldrb	r1, [fp, #-69]	; 0xffffffbb
   15560:	bl	1b2b4 <main@@Base+0x7638>
   15564:	ldr	r0, [fp, #-16]
   15568:	ldr	r1, [fp, #-20]	; 0xffffffec
   1556c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15570:	sub	r3, fp, #32
   15574:	bl	199ac <main@@Base+0x5d30>
   15578:	str	r0, [fp, #-20]	; 0xffffffec
   1557c:	b	154a0 <main@@Base+0x1824>
   15580:	ldr	r0, [fp, #-16]
   15584:	ldr	r0, [r0]
   15588:	bl	270e8 <flatcc_builder_end_vector@@Base>
   1558c:	str	r0, [fp, #-40]	; 0xffffffd8
   15590:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15594:	cmp	r0, #0
   15598:	beq	155bc <main@@Base+0x1940>
   1559c:	ldr	r0, [fp, #-16]
   155a0:	ldr	r0, [r0]
   155a4:	movw	r1, #24
   155a8:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   155ac:	str	r0, [fp, #-44]	; 0xffffffd4
   155b0:	movw	r1, #0
   155b4:	cmp	r0, r1
   155b8:	bne	155c0 <main@@Base+0x1944>
   155bc:	b	17ad4 <main@@Base+0x3e58>
   155c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   155c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   155c8:	str	r0, [r1]
   155cc:	b	155d4 <main@@Base+0x1958>
   155d0:	b	155e0 <main@@Base+0x1964>
   155d4:	b	155dc <main@@Base+0x1960>
   155d8:	b	155e0 <main@@Base+0x1964>
   155dc:	b	157d4 <main@@Base+0x1b58>
   155e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   155e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   155e8:	movw	r2, #26227	; 0x6673
   155ec:	movt	r2, #31087	; 0x796f
   155f0:	eor	r1, r1, r2
   155f4:	movw	r2, #29797	; 0x7465
   155f8:	movt	r2, #28530	; 0x6f72
   155fc:	eor	r0, r0, r2
   15600:	orr	r0, r0, r1
   15604:	cmp	r0, #0
   15608:	bne	157bc <main@@Base+0x1b40>
   1560c:	b	15610 <main@@Base+0x1994>
   15610:	ldr	r0, [fp, #-20]	; 0xffffffec
   15614:	add	r0, r0, #8
   15618:	str	r0, [fp, #-20]	; 0xffffffec
   1561c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15620:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15624:	bl	17cac <main@@Base+0x4030>
   15628:	str	r1, [fp, #-52]	; 0xffffffcc
   1562c:	str	r0, [fp, #-56]	; 0xffffffc8
   15630:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15634:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15638:	movw	lr, #29556	; 0x7374
   1563c:	movt	lr, #100	; 0x64
   15640:	eor	lr, lr, r1, lsr #8
   15644:	lsr	r0, r0, #8
   15648:	orr	r0, r0, r1, lsl #24
   1564c:	movw	r1, #25460	; 0x6374
   15650:	movt	r1, #29301	; 0x7275
   15654:	eor	r0, r0, r1
   15658:	orr	r0, r0, lr
   1565c:	cmp	r0, #0
   15660:	bne	157a4 <main@@Base+0x1b28>
   15664:	b	15668 <main@@Base+0x19ec>
   15668:	ldr	r0, [fp, #-16]
   1566c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15670:	str	r1, [fp, #-48]	; 0xffffffd0
   15674:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15678:	movw	r3, #7
   1567c:	bl	17ce4 <main@@Base+0x4068>
   15680:	str	r0, [fp, #-20]	; 0xffffffec
   15684:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15688:	ldr	r1, [fp, #-20]	; 0xffffffec
   1568c:	cmp	r0, r1
   15690:	beq	1578c <main@@Base+0x1b10>
   15694:	ldr	r3, [pc, #4024]	; 16654 <main@@Base+0x29d8>
   15698:	ldr	r0, [fp, #-16]
   1569c:	ldr	r0, [r0]
   156a0:	movw	r1, #8
   156a4:	movw	r2, #4
   156a8:	uxth	r2, r2
   156ac:	bl	25bf4 <flatcc_builder_start_vector@@Base>
   156b0:	cmp	r0, #0
   156b4:	beq	156c0 <main@@Base+0x1a44>
   156b8:	b	17ad4 <main@@Base+0x3e58>
   156bc:	strdeq	pc, [r2], -r0
   156c0:	ldr	r0, [fp, #-16]
   156c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   156c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   156cc:	sub	r3, fp, #32
   156d0:	bl	19594 <main@@Base+0x5918>
   156d4:	str	r0, [fp, #-20]	; 0xffffffec
   156d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   156dc:	cmp	r0, #0
   156e0:	beq	1573c <main@@Base+0x1ac0>
   156e4:	ldr	r0, [fp, #-16]
   156e8:	ldr	r0, [r0]
   156ec:	movw	r1, #1
   156f0:	bl	250f8 <flatcc_builder_extend_vector@@Base>
   156f4:	str	r0, [fp, #-36]	; 0xffffffdc
   156f8:	movw	r1, #0
   156fc:	cmp	r0, r1
   15700:	bne	15708 <main@@Base+0x1a8c>
   15704:	b	17ad4 <main@@Base+0x3e58>
   15708:	ldr	r0, [fp, #-16]
   1570c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15710:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15714:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15718:	bl	1b2e0 <main@@Base+0x7664>
   1571c:	str	r0, [fp, #-20]	; 0xffffffec
   15720:	ldr	r0, [fp, #-16]
   15724:	ldr	r1, [fp, #-20]	; 0xffffffec
   15728:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1572c:	sub	r3, fp, #32
   15730:	bl	199ac <main@@Base+0x5d30>
   15734:	str	r0, [fp, #-20]	; 0xffffffec
   15738:	b	156d8 <main@@Base+0x1a5c>
   1573c:	ldr	r0, [fp, #-16]
   15740:	ldr	r0, [r0]
   15744:	bl	270e8 <flatcc_builder_end_vector@@Base>
   15748:	str	r0, [fp, #-40]	; 0xffffffd8
   1574c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15750:	cmp	r0, #0
   15754:	beq	15778 <main@@Base+0x1afc>
   15758:	ldr	r0, [fp, #-16]
   1575c:	ldr	r0, [r0]
   15760:	movw	r1, #29
   15764:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   15768:	str	r0, [fp, #-44]	; 0xffffffd4
   1576c:	movw	r1, #0
   15770:	cmp	r0, r1
   15774:	bne	1577c <main@@Base+0x1b00>
   15778:	b	17ad4 <main@@Base+0x3e58>
   1577c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15780:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15784:	str	r0, [r1]
   15788:	b	157a0 <main@@Base+0x1b24>
   1578c:	ldr	r0, [fp, #-16]
   15790:	ldr	r1, [fp, #-20]	; 0xffffffec
   15794:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15798:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1579c:	str	r0, [fp, #-20]	; 0xffffffec
   157a0:	b	157b8 <main@@Base+0x1b3c>
   157a4:	ldr	r0, [fp, #-16]
   157a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   157ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   157b0:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   157b4:	str	r0, [fp, #-20]	; 0xffffffec
   157b8:	b	157d0 <main@@Base+0x1b54>
   157bc:	ldr	r0, [fp, #-16]
   157c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   157c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   157c8:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   157cc:	str	r0, [fp, #-20]	; 0xffffffec
   157d0:	b	157d4 <main@@Base+0x1b58>
   157d4:	b	15cd4 <main@@Base+0x2058>
   157d8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   157dc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   157e0:	movw	r2, #26227	; 0x6673
   157e4:	movt	r2, #31087	; 0x796f
   157e8:	eor	r1, r1, r2
   157ec:	movw	r2, #26990	; 0x696e
   157f0:	movt	r2, #29810	; 0x7472
   157f4:	eor	r0, r0, r2
   157f8:	orr	r0, r0, r1
   157fc:	cmp	r0, #0
   15800:	bne	15afc <main@@Base+0x1e80>
   15804:	b	15808 <main@@Base+0x1b8c>
   15808:	ldr	r0, [fp, #-20]	; 0xffffffec
   1580c:	add	r0, r0, #8
   15810:	str	r0, [fp, #-20]	; 0xffffffec
   15814:	ldr	r0, [fp, #-20]	; 0xffffffec
   15818:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1581c:	bl	17cac <main@@Base+0x4030>
   15820:	str	r1, [fp, #-52]	; 0xffffffcc
   15824:	str	r0, [fp, #-56]	; 0xffffffc8
   15828:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1582c:	bfc	r0, #0, #16
   15830:	movw	r1, #0
   15834:	movt	r1, #26418	; 0x6732
   15838:	teq	r0, r1
   1583c:	bne	15988 <main@@Base+0x1d0c>
   15840:	b	15844 <main@@Base+0x1bc8>
   15844:	ldr	r0, [fp, #-16]
   15848:	ldr	r1, [fp, #-20]	; 0xffffffec
   1584c:	str	r1, [fp, #-48]	; 0xffffffd0
   15850:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15854:	movw	r3, #2
   15858:	bl	17ce4 <main@@Base+0x4068>
   1585c:	str	r0, [fp, #-20]	; 0xffffffec
   15860:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15864:	ldr	r1, [fp, #-20]	; 0xffffffec
   15868:	cmp	r0, r1
   1586c:	beq	15970 <main@@Base+0x1cf4>
   15870:	ldr	r0, [fp, #-16]
   15874:	ldr	r0, [r0]
   15878:	bl	25cd4 <flatcc_builder_start_offset_vector@@Base>
   1587c:	cmp	r0, #0
   15880:	beq	1588c <main@@Base+0x1c10>
   15884:	b	17ad4 <main@@Base+0x3e58>
   15888:	andeq	pc, r2, r4, ror #15
   1588c:	ldr	r0, [fp, #-16]
   15890:	ldr	r1, [fp, #-20]	; 0xffffffec
   15894:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15898:	sub	r3, fp, #32
   1589c:	bl	19594 <main@@Base+0x5918>
   158a0:	str	r0, [fp, #-20]	; 0xffffffec
   158a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   158a8:	cmp	r0, #0
   158ac:	beq	15920 <main@@Base+0x1ca4>
   158b0:	ldr	r0, [fp, #-16]
   158b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   158b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   158bc:	sub	r3, fp, #40	; 0x28
   158c0:	bl	2dfac <flatcc_json_parser_build_string@@Base>
   158c4:	str	r0, [fp, #-20]	; 0xffffffec
   158c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   158cc:	cmp	r0, #0
   158d0:	beq	158f4 <main@@Base+0x1c78>
   158d4:	ldr	r0, [fp, #-16]
   158d8:	ldr	r0, [r0]
   158dc:	movw	r1, #1
   158e0:	bl	25468 <flatcc_builder_extend_offset_vector@@Base>
   158e4:	str	r0, [fp, #-44]	; 0xffffffd4
   158e8:	movw	r1, #0
   158ec:	cmp	r0, r1
   158f0:	bne	158f8 <main@@Base+0x1c7c>
   158f4:	b	17ad4 <main@@Base+0x3e58>
   158f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   158fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15900:	str	r0, [r1]
   15904:	ldr	r0, [fp, #-16]
   15908:	ldr	r1, [fp, #-20]	; 0xffffffec
   1590c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15910:	sub	r3, fp, #32
   15914:	bl	199ac <main@@Base+0x5d30>
   15918:	str	r0, [fp, #-20]	; 0xffffffec
   1591c:	b	158a4 <main@@Base+0x1c28>
   15920:	ldr	r0, [fp, #-16]
   15924:	ldr	r0, [r0]
   15928:	bl	25de0 <flatcc_builder_end_offset_vector@@Base>
   1592c:	str	r0, [fp, #-40]	; 0xffffffd8
   15930:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15934:	cmp	r0, #0
   15938:	beq	1595c <main@@Base+0x1ce0>
   1593c:	ldr	r0, [fp, #-16]
   15940:	ldr	r0, [r0]
   15944:	movw	r1, #28
   15948:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   1594c:	str	r0, [fp, #-44]	; 0xffffffd4
   15950:	movw	r1, #0
   15954:	cmp	r0, r1
   15958:	bne	15960 <main@@Base+0x1ce4>
   1595c:	b	17ad4 <main@@Base+0x3e58>
   15960:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15964:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15968:	str	r0, [r1]
   1596c:	b	15984 <main@@Base+0x1d08>
   15970:	ldr	r0, [fp, #-16]
   15974:	ldr	r1, [fp, #-20]	; 0xffffffec
   15978:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1597c:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   15980:	str	r0, [fp, #-20]	; 0xffffffec
   15984:	b	15af8 <main@@Base+0x1e7c>
   15988:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1598c:	and	r0, r0, #-16777216	; 0xff000000
   15990:	teq	r0, #1728053248	; 0x67000000
   15994:	bne	15ae0 <main@@Base+0x1e64>
   15998:	b	1599c <main@@Base+0x1d20>
   1599c:	ldr	r0, [fp, #-16]
   159a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   159a4:	str	r1, [fp, #-48]	; 0xffffffd0
   159a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   159ac:	movw	r3, #1
   159b0:	bl	17ce4 <main@@Base+0x4068>
   159b4:	str	r0, [fp, #-20]	; 0xffffffec
   159b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   159bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   159c0:	cmp	r0, r1
   159c4:	beq	15ac8 <main@@Base+0x1e4c>
   159c8:	ldr	r0, [fp, #-16]
   159cc:	ldr	r0, [r0]
   159d0:	bl	25cd4 <flatcc_builder_start_offset_vector@@Base>
   159d4:	cmp	r0, #0
   159d8:	beq	159e4 <main@@Base+0x1d68>
   159dc:	b	17ad4 <main@@Base+0x3e58>
   159e0:	andeq	pc, r2, r0, lsl #13
   159e4:	ldr	r0, [fp, #-16]
   159e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   159ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   159f0:	sub	r3, fp, #32
   159f4:	bl	19594 <main@@Base+0x5918>
   159f8:	str	r0, [fp, #-20]	; 0xffffffec
   159fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15a00:	cmp	r0, #0
   15a04:	beq	15a78 <main@@Base+0x1dfc>
   15a08:	ldr	r0, [fp, #-16]
   15a0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15a10:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15a14:	sub	r3, fp, #40	; 0x28
   15a18:	bl	2dfac <flatcc_json_parser_build_string@@Base>
   15a1c:	str	r0, [fp, #-20]	; 0xffffffec
   15a20:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15a24:	cmp	r0, #0
   15a28:	beq	15a4c <main@@Base+0x1dd0>
   15a2c:	ldr	r0, [fp, #-16]
   15a30:	ldr	r0, [r0]
   15a34:	movw	r1, #1
   15a38:	bl	25468 <flatcc_builder_extend_offset_vector@@Base>
   15a3c:	str	r0, [fp, #-44]	; 0xffffffd4
   15a40:	movw	r1, #0
   15a44:	cmp	r0, r1
   15a48:	bne	15a50 <main@@Base+0x1dd4>
   15a4c:	b	17ad4 <main@@Base+0x3e58>
   15a50:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15a54:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15a58:	str	r0, [r1]
   15a5c:	ldr	r0, [fp, #-16]
   15a60:	ldr	r1, [fp, #-20]	; 0xffffffec
   15a64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15a68:	sub	r3, fp, #32
   15a6c:	bl	199ac <main@@Base+0x5d30>
   15a70:	str	r0, [fp, #-20]	; 0xffffffec
   15a74:	b	159fc <main@@Base+0x1d80>
   15a78:	ldr	r0, [fp, #-16]
   15a7c:	ldr	r0, [r0]
   15a80:	bl	25de0 <flatcc_builder_end_offset_vector@@Base>
   15a84:	str	r0, [fp, #-40]	; 0xffffffd8
   15a88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15a8c:	cmp	r0, #0
   15a90:	beq	15ab4 <main@@Base+0x1e38>
   15a94:	ldr	r0, [fp, #-16]
   15a98:	ldr	r0, [r0]
   15a9c:	movw	r1, #10
   15aa0:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   15aa4:	str	r0, [fp, #-44]	; 0xffffffd4
   15aa8:	movw	r1, #0
   15aac:	cmp	r0, r1
   15ab0:	bne	15ab8 <main@@Base+0x1e3c>
   15ab4:	b	17ad4 <main@@Base+0x3e58>
   15ab8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15abc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15ac0:	str	r0, [r1]
   15ac4:	b	15adc <main@@Base+0x1e60>
   15ac8:	ldr	r0, [fp, #-16]
   15acc:	ldr	r1, [fp, #-20]	; 0xffffffec
   15ad0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15ad4:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   15ad8:	str	r0, [fp, #-20]	; 0xffffffec
   15adc:	b	15af4 <main@@Base+0x1e78>
   15ae0:	ldr	r0, [fp, #-16]
   15ae4:	ldr	r1, [fp, #-20]	; 0xffffffec
   15ae8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15aec:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   15af0:	str	r0, [fp, #-20]	; 0xffffffec
   15af4:	b	15af8 <main@@Base+0x1e7c>
   15af8:	b	15cd0 <main@@Base+0x2054>
   15afc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15b00:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15b04:	movw	r2, #26228	; 0x6674
   15b08:	movt	r2, #31087	; 0x796f
   15b0c:	eor	r1, r1, r2
   15b10:	movw	r2, #27749	; 0x6c65
   15b14:	movt	r2, #24930	; 0x6162
   15b18:	eor	r0, r0, r2
   15b1c:	orr	r0, r0, r1
   15b20:	cmp	r0, #0
   15b24:	bne	15cb8 <main@@Base+0x203c>
   15b28:	b	15b2c <main@@Base+0x1eb0>
   15b2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15b30:	add	r0, r0, #8
   15b34:	str	r0, [fp, #-20]	; 0xffffffec
   15b38:	ldr	r0, [fp, #-20]	; 0xffffffec
   15b3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15b40:	bl	17cac <main@@Base+0x4030>
   15b44:	str	r1, [fp, #-52]	; 0xffffffcc
   15b48:	str	r0, [fp, #-56]	; 0xffffffc8
   15b4c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15b50:	and	r0, r0, #-16777216	; 0xff000000
   15b54:	teq	r0, #1929379840	; 0x73000000
   15b58:	bne	15ca0 <main@@Base+0x2024>
   15b5c:	b	15b60 <main@@Base+0x1ee4>
   15b60:	ldr	r0, [fp, #-16]
   15b64:	ldr	r1, [fp, #-20]	; 0xffffffec
   15b68:	str	r1, [fp, #-48]	; 0xffffffd0
   15b6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15b70:	movw	r3, #1
   15b74:	bl	17ce4 <main@@Base+0x4068>
   15b78:	str	r0, [fp, #-20]	; 0xffffffec
   15b7c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15b80:	ldr	r1, [fp, #-20]	; 0xffffffec
   15b84:	cmp	r0, r1
   15b88:	beq	15c88 <main@@Base+0x200c>
   15b8c:	ldr	r0, [fp, #-16]
   15b90:	ldr	r0, [r0]
   15b94:	bl	25cd4 <flatcc_builder_start_offset_vector@@Base>
   15b98:	cmp	r0, #0
   15b9c:	beq	15ba4 <main@@Base+0x1f28>
   15ba0:	b	17ad4 <main@@Base+0x3e58>
   15ba4:	ldr	r0, [fp, #-16]
   15ba8:	ldr	r1, [fp, #-20]	; 0xffffffec
   15bac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15bb0:	sub	r3, fp, #32
   15bb4:	bl	19594 <main@@Base+0x5918>
   15bb8:	str	r0, [fp, #-20]	; 0xffffffec
   15bbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15bc0:	cmp	r0, #0
   15bc4:	beq	15c38 <main@@Base+0x1fbc>
   15bc8:	ldr	r0, [fp, #-16]
   15bcc:	ldr	r1, [fp, #-20]	; 0xffffffec
   15bd0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15bd4:	sub	r3, fp, #40	; 0x28
   15bd8:	bl	140b0 <main@@Base+0x434>
   15bdc:	str	r0, [fp, #-20]	; 0xffffffec
   15be0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15be4:	cmp	r0, #0
   15be8:	beq	15c0c <main@@Base+0x1f90>
   15bec:	ldr	r0, [fp, #-16]
   15bf0:	ldr	r0, [r0]
   15bf4:	movw	r1, #1
   15bf8:	bl	25468 <flatcc_builder_extend_offset_vector@@Base>
   15bfc:	str	r0, [fp, #-44]	; 0xffffffd4
   15c00:	movw	r1, #0
   15c04:	cmp	r0, r1
   15c08:	bne	15c10 <main@@Base+0x1f94>
   15c0c:	b	17ad4 <main@@Base+0x3e58>
   15c10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15c14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15c18:	str	r0, [r1]
   15c1c:	ldr	r0, [fp, #-16]
   15c20:	ldr	r1, [fp, #-20]	; 0xffffffec
   15c24:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15c28:	sub	r3, fp, #32
   15c2c:	bl	199ac <main@@Base+0x5d30>
   15c30:	str	r0, [fp, #-20]	; 0xffffffec
   15c34:	b	15bbc <main@@Base+0x1f40>
   15c38:	ldr	r0, [fp, #-16]
   15c3c:	ldr	r0, [r0]
   15c40:	bl	25de0 <flatcc_builder_end_offset_vector@@Base>
   15c44:	str	r0, [fp, #-40]	; 0xffffffd8
   15c48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15c4c:	cmp	r0, #0
   15c50:	beq	15c74 <main@@Base+0x1ff8>
   15c54:	ldr	r0, [fp, #-16]
   15c58:	ldr	r0, [r0]
   15c5c:	movw	r1, #11
   15c60:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   15c64:	str	r0, [fp, #-44]	; 0xffffffd4
   15c68:	movw	r1, #0
   15c6c:	cmp	r0, r1
   15c70:	bne	15c78 <main@@Base+0x1ffc>
   15c74:	b	17ad4 <main@@Base+0x3e58>
   15c78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15c7c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15c80:	str	r0, [r1]
   15c84:	b	15c9c <main@@Base+0x2020>
   15c88:	ldr	r0, [fp, #-16]
   15c8c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15c90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15c94:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   15c98:	str	r0, [fp, #-20]	; 0xffffffec
   15c9c:	b	15cb4 <main@@Base+0x2038>
   15ca0:	ldr	r0, [fp, #-16]
   15ca4:	ldr	r1, [fp, #-20]	; 0xffffffec
   15ca8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15cac:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   15cb0:	str	r0, [fp, #-20]	; 0xffffffec
   15cb4:	b	15ccc <main@@Base+0x2050>
   15cb8:	ldr	r0, [fp, #-16]
   15cbc:	ldr	r1, [fp, #-20]	; 0xffffffec
   15cc0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15cc4:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   15cc8:	str	r0, [fp, #-20]	; 0xffffffec
   15ccc:	b	15cd0 <main@@Base+0x2054>
   15cd0:	b	15cd4 <main@@Base+0x2058>
   15cd4:	b	163f0 <main@@Base+0x2774>
   15cd8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15cdc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15ce0:	movw	r2, #28787	; 0x7073
   15ce4:	movt	r2, #25965	; 0x656d
   15ce8:	subs	r0, r2, r0
   15cec:	movw	r2, #29556	; 0x7374
   15cf0:	movt	r2, #29797	; 0x7465
   15cf4:	sbcs	r1, r2, r1
   15cf8:	str	r0, [sp, #64]	; 0x40
   15cfc:	str	r1, [sp, #60]	; 0x3c
   15d00:	bcc	15fa0 <main@@Base+0x2324>
   15d04:	b	15d08 <main@@Base+0x208c>
   15d08:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15d0c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15d10:	movw	r2, #29556	; 0x7374
   15d14:	movt	r2, #29797	; 0x7465
   15d18:	eor	r1, r1, r2
   15d1c:	movw	r2, #29541	; 0x7365
   15d20:	movt	r2, #25185	; 0x6261
   15d24:	eor	r0, r0, r2
   15d28:	orr	r0, r0, r1
   15d2c:	cmp	r0, #0
   15d30:	bne	15e28 <main@@Base+0x21ac>
   15d34:	b	15d38 <main@@Base+0x20bc>
   15d38:	ldr	r0, [fp, #-20]	; 0xffffffec
   15d3c:	add	r0, r0, #8
   15d40:	str	r0, [fp, #-20]	; 0xffffffec
   15d44:	ldr	r0, [fp, #-20]	; 0xffffffec
   15d48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15d4c:	bl	17cac <main@@Base+0x4030>
   15d50:	str	r1, [fp, #-52]	; 0xffffffcc
   15d54:	str	r0, [fp, #-56]	; 0xffffffc8
   15d58:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15d5c:	bfc	r0, #0, #16
   15d60:	movw	r1, #0
   15d64:	movt	r1, #13876	; 0x3634
   15d68:	teq	r0, r1
   15d6c:	bne	15e10 <main@@Base+0x2194>
   15d70:	b	15d74 <main@@Base+0x20f8>
   15d74:	ldr	r0, [fp, #-16]
   15d78:	ldr	r1, [fp, #-20]	; 0xffffffec
   15d7c:	str	r1, [fp, #-48]	; 0xffffffd0
   15d80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15d84:	movw	r3, #2
   15d88:	bl	17ce4 <main@@Base+0x4068>
   15d8c:	str	r0, [fp, #-20]	; 0xffffffec
   15d90:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15d94:	ldr	r1, [fp, #-20]	; 0xffffffec
   15d98:	cmp	r0, r1
   15d9c:	beq	15df8 <main@@Base+0x217c>
   15da0:	ldr	r0, [fp, #-16]
   15da4:	ldr	r1, [fp, #-20]	; 0xffffffec
   15da8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15dac:	sub	r3, fp, #40	; 0x28
   15db0:	bl	1b5c8 <main@@Base+0x794c>
   15db4:	str	r0, [fp, #-20]	; 0xffffffec
   15db8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15dbc:	cmp	r0, #0
   15dc0:	beq	15de4 <main@@Base+0x2168>
   15dc4:	ldr	r0, [fp, #-16]
   15dc8:	ldr	r0, [r0]
   15dcc:	movw	r1, #35	; 0x23
   15dd0:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   15dd4:	str	r0, [fp, #-44]	; 0xffffffd4
   15dd8:	movw	r1, #0
   15ddc:	cmp	r0, r1
   15de0:	bne	15de8 <main@@Base+0x216c>
   15de4:	b	17ad4 <main@@Base+0x3e58>
   15de8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15dec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15df0:	str	r0, [r1]
   15df4:	b	15e0c <main@@Base+0x2190>
   15df8:	ldr	r0, [fp, #-16]
   15dfc:	ldr	r1, [fp, #-20]	; 0xffffffec
   15e00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15e04:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   15e08:	str	r0, [fp, #-20]	; 0xffffffec
   15e0c:	b	15e24 <main@@Base+0x21a8>
   15e10:	ldr	r0, [fp, #-16]
   15e14:	ldr	r1, [fp, #-20]	; 0xffffffec
   15e18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15e1c:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   15e20:	str	r0, [fp, #-20]	; 0xffffffec
   15e24:	b	15f9c <main@@Base+0x2320>
   15e28:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15e2c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15e30:	movw	r2, #29556	; 0x7374
   15e34:	movt	r2, #29797	; 0x7465
   15e38:	eor	r1, r1, r2
   15e3c:	movw	r2, #28524	; 0x6f6c
   15e40:	movt	r2, #25199	; 0x626f
   15e44:	eor	r0, r0, r2
   15e48:	orr	r0, r0, r1
   15e4c:	cmp	r0, #0
   15e50:	bne	15f84 <main@@Base+0x2308>
   15e54:	b	15e58 <main@@Base+0x21dc>
   15e58:	ldr	r0, [fp, #-16]
   15e5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   15e60:	str	r1, [fp, #-48]	; 0xffffffd0
   15e64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15e68:	movw	r3, #8
   15e6c:	bl	17ce4 <main@@Base+0x4068>
   15e70:	str	r0, [fp, #-20]	; 0xffffffec
   15e74:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15e78:	ldr	r1, [fp, #-20]	; 0xffffffec
   15e7c:	cmp	r0, r1
   15e80:	beq	15f6c <main@@Base+0x22f0>
   15e84:	movw	r0, #0
   15e88:	strb	r0, [fp, #-70]	; 0xffffffba
   15e8c:	ldr	r0, [fp, #-16]
   15e90:	ldr	r1, [fp, #-20]	; 0xffffffec
   15e94:	str	r1, [fp, #-48]	; 0xffffffd0
   15e98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15e9c:	sub	r3, fp, #70	; 0x46
   15ea0:	bl	1af60 <main@@Base+0x72e4>
   15ea4:	str	r0, [fp, #-20]	; 0xffffffec
   15ea8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15eac:	ldr	r1, [fp, #-20]	; 0xffffffec
   15eb0:	cmp	r0, r1
   15eb4:	bne	15f0c <main@@Base+0x2290>
   15eb8:	ldr	r0, [pc, #4080]	; 16eb0 <main@@Base+0x3234>
   15ebc:	add	r3, pc, r0
   15ec0:	ldr	r0, [fp, #-16]
   15ec4:	ldr	r1, [fp, #-20]	; 0xffffffec
   15ec8:	str	r1, [fp, #-48]	; 0xffffffd0
   15ecc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15ed0:	sub	ip, fp, #70	; 0x46
   15ed4:	str	ip, [sp]
   15ed8:	bl	1b088 <main@@Base+0x740c>
   15edc:	str	r0, [fp, #-20]	; 0xffffffec
   15ee0:	ldr	r0, [fp, #-20]	; 0xffffffec
   15ee4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15ee8:	cmp	r0, r1
   15eec:	beq	15f00 <main@@Base+0x2284>
   15ef0:	ldr	r0, [fp, #-20]	; 0xffffffec
   15ef4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15ef8:	cmp	r0, r1
   15efc:	bne	15f08 <main@@Base+0x228c>
   15f00:	b	17ad4 <main@@Base+0x3e58>
   15f04:	svccc	0x00ffffff
   15f08:	b	15f0c <main@@Base+0x2290>
   15f0c:	ldrb	r0, [fp, #-70]	; 0xffffffba
   15f10:	cmp	r0, #1
   15f14:	bne	15f2c <main@@Base+0x22b0>
   15f18:	ldr	r0, [fp, #-16]
   15f1c:	ldr	r0, [r0, #8]
   15f20:	and	r0, r0, #2
   15f24:	cmp	r0, #0
   15f28:	beq	15f68 <main@@Base+0x22ec>
   15f2c:	ldr	r0, [fp, #-16]
   15f30:	ldr	r0, [r0]
   15f34:	movw	r1, #15
   15f38:	movw	r2, #1
   15f3c:	movw	r3, #1
   15f40:	uxth	r3, r3
   15f44:	bl	27920 <flatcc_builder_table_add@@Base>
   15f48:	str	r0, [fp, #-36]	; 0xffffffdc
   15f4c:	movw	r1, #0
   15f50:	cmp	r0, r1
   15f54:	bne	15f5c <main@@Base+0x22e0>
   15f58:	b	17ad4 <main@@Base+0x3e58>
   15f5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15f60:	ldrb	r1, [fp, #-70]	; 0xffffffba
   15f64:	bl	1b2b4 <main@@Base+0x7638>
   15f68:	b	15f80 <main@@Base+0x2304>
   15f6c:	ldr	r0, [fp, #-16]
   15f70:	ldr	r1, [fp, #-20]	; 0xffffffec
   15f74:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15f78:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   15f7c:	str	r0, [fp, #-20]	; 0xffffffec
   15f80:	b	15f98 <main@@Base+0x231c>
   15f84:	ldr	r0, [fp, #-16]
   15f88:	ldr	r1, [fp, #-20]	; 0xffffffec
   15f8c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15f90:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   15f94:	str	r0, [fp, #-20]	; 0xffffffec
   15f98:	b	15f9c <main@@Base+0x2320>
   15f9c:	b	163ec <main@@Base+0x2770>
   15fa0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15fa4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15fa8:	mvn	r2, #-1711276032	; 0x9a000000
   15fac:	subs	r0, r2, r0
   15fb0:	movw	r2, #29556	; 0x7374
   15fb4:	movt	r2, #29797	; 0x7465
   15fb8:	sbcs	r1, r2, r1
   15fbc:	str	r0, [sp, #56]	; 0x38
   15fc0:	str	r1, [sp, #52]	; 0x34
   15fc4:	bcc	16100 <main@@Base+0x2484>
   15fc8:	b	15fcc <main@@Base+0x2350>
   15fcc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15fd0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15fd4:	movw	r2, #29556	; 0x7374
   15fd8:	movt	r2, #29797	; 0x7465
   15fdc:	eor	r1, r1, r2
   15fe0:	movw	r2, #28788	; 0x7074
   15fe4:	movt	r2, #25965	; 0x656d
   15fe8:	eor	r0, r0, r2
   15fec:	orr	r0, r0, r1
   15ff0:	cmp	r0, #0
   15ff4:	bne	160e8 <main@@Base+0x246c>
   15ff8:	b	15ffc <main@@Base+0x2380>
   15ffc:	ldr	r0, [fp, #-20]	; 0xffffffec
   16000:	add	r0, r0, #8
   16004:	str	r0, [fp, #-20]	; 0xffffffec
   16008:	ldr	r0, [fp, #-20]	; 0xffffffec
   1600c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16010:	bl	17cac <main@@Base+0x4030>
   16014:	str	r1, [fp, #-52]	; 0xffffffcc
   16018:	str	r0, [fp, #-56]	; 0xffffffc8
   1601c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16020:	and	r0, r0, #-16777216	; 0xff000000
   16024:	teq	r0, #2030043136	; 0x79000000
   16028:	bne	160d0 <main@@Base+0x2454>
   1602c:	b	16034 <main@@Base+0x23b8>
   16030:	strdeq	r5, [r0], -r8
   16034:	ldr	r0, [fp, #-16]
   16038:	ldr	r1, [fp, #-20]	; 0xffffffec
   1603c:	str	r1, [fp, #-48]	; 0xffffffd0
   16040:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16044:	movw	r3, #1
   16048:	bl	17ce4 <main@@Base+0x4068>
   1604c:	str	r0, [fp, #-20]	; 0xffffffec
   16050:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16054:	ldr	r1, [fp, #-20]	; 0xffffffec
   16058:	cmp	r0, r1
   1605c:	beq	160b8 <main@@Base+0x243c>
   16060:	ldr	r0, [fp, #-16]
   16064:	ldr	r1, [fp, #-20]	; 0xffffffec
   16068:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1606c:	sub	r3, fp, #40	; 0x28
   16070:	bl	1b9a8 <main@@Base+0x7d2c>
   16074:	str	r0, [fp, #-20]	; 0xffffffec
   16078:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1607c:	cmp	r0, #0
   16080:	beq	160a4 <main@@Base+0x2428>
   16084:	ldr	r0, [fp, #-16]
   16088:	ldr	r0, [r0]
   1608c:	movw	r1, #14
   16090:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   16094:	str	r0, [fp, #-44]	; 0xffffffd4
   16098:	movw	r1, #0
   1609c:	cmp	r0, r1
   160a0:	bne	160a8 <main@@Base+0x242c>
   160a4:	b	17ad4 <main@@Base+0x3e58>
   160a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   160ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   160b0:	str	r0, [r1]
   160b4:	b	160cc <main@@Base+0x2450>
   160b8:	ldr	r0, [fp, #-16]
   160bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   160c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   160c4:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   160c8:	str	r0, [fp, #-20]	; 0xffffffec
   160cc:	b	160e4 <main@@Base+0x2468>
   160d0:	ldr	r0, [fp, #-16]
   160d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   160d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   160dc:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   160e0:	str	r0, [fp, #-20]	; 0xffffffec
   160e4:	b	160fc <main@@Base+0x2480>
   160e8:	ldr	r0, [fp, #-16]
   160ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   160f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   160f4:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   160f8:	str	r0, [fp, #-20]	; 0xffffffec
   160fc:	b	163e8 <main@@Base+0x276c>
   16100:	ldrh	r0, [fp, #-54]	; 0xffffffca
   16104:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16108:	movw	r2, #29797	; 0x7465
   1610c:	eor	r2, r2, r1, lsr #16
   16110:	orr	r0, r0, r1, lsl #16
   16114:	movw	r1, #26162	; 0x6632
   16118:	movt	r1, #29556	; 0x7374
   1611c:	eor	r0, r0, r1
   16120:	orr	r0, r0, r2
   16124:	cmp	r0, #0
   16128:	bne	16264 <main@@Base+0x25e8>
   1612c:	b	16130 <main@@Base+0x24b4>
   16130:	ldr	r0, [fp, #-16]
   16134:	ldr	r1, [fp, #-20]	; 0xffffffec
   16138:	str	r1, [fp, #-48]	; 0xffffffd0
   1613c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16140:	movw	r3, #6
   16144:	bl	17ce4 <main@@Base+0x4068>
   16148:	str	r0, [fp, #-20]	; 0xffffffec
   1614c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16150:	ldr	r1, [fp, #-20]	; 0xffffffec
   16154:	cmp	r0, r1
   16158:	beq	1624c <main@@Base+0x25d0>
   1615c:	vldr	s0, [pc, #928]	; 16504 <main@@Base+0x2888>
   16160:	vstr	s0, [fp, #-76]	; 0xffffffb4
   16164:	ldr	r0, [fp, #-16]
   16168:	ldr	r1, [fp, #-20]	; 0xffffffec
   1616c:	str	r1, [fp, #-48]	; 0xffffffd0
   16170:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16174:	sub	r3, fp, #76	; 0x4c
   16178:	bl	2ca78 <flatcc_json_parser_float@@Base>
   1617c:	str	r0, [fp, #-20]	; 0xffffffec
   16180:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16184:	ldr	r1, [fp, #-20]	; 0xffffffec
   16188:	cmp	r0, r1
   1618c:	bne	161e0 <main@@Base+0x2564>
   16190:	ldr	r0, [pc, #4092]	; 17194 <main@@Base+0x3518>
   16194:	add	r3, pc, r0
   16198:	ldr	r0, [fp, #-16]
   1619c:	ldr	r1, [fp, #-20]	; 0xffffffec
   161a0:	str	r1, [fp, #-48]	; 0xffffffd0
   161a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   161a8:	sub	ip, fp, #76	; 0x4c
   161ac:	str	ip, [sp]
   161b0:	bl	1be74 <main@@Base+0x81f8>
   161b4:	str	r0, [fp, #-20]	; 0xffffffec
   161b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   161bc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   161c0:	cmp	r0, r1
   161c4:	beq	161d8 <main@@Base+0x255c>
   161c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   161cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   161d0:	cmp	r0, r1
   161d4:	bne	161dc <main@@Base+0x2560>
   161d8:	b	17ad4 <main@@Base+0x3e58>
   161dc:	b	161e0 <main@@Base+0x2564>
   161e0:	vldr	s0, [fp, #-76]	; 0xffffffb4
   161e4:	vcvt.f64.f32	d16, s0
   161e8:	vmov.f64	d17, #8	; 0x40400000  3.0
   161ec:	vcmp.f64	d16, d17
   161f0:	vmrs	APSR_nzcv, fpscr
   161f4:	bne	1620c <main@@Base+0x2590>
   161f8:	ldr	r0, [fp, #-16]
   161fc:	ldr	r0, [r0, #8]
   16200:	and	r0, r0, #2
   16204:	cmp	r0, #0
   16208:	beq	16248 <main@@Base+0x25cc>
   1620c:	ldr	r0, [fp, #-16]
   16210:	ldr	r0, [r0]
   16214:	movw	r1, #26
   16218:	movw	r2, #4
   1621c:	movw	r3, #4
   16220:	uxth	r3, r3
   16224:	bl	27920 <flatcc_builder_table_add@@Base>
   16228:	str	r0, [fp, #-36]	; 0xffffffdc
   1622c:	movw	r1, #0
   16230:	cmp	r0, r1
   16234:	bne	1623c <main@@Base+0x25c0>
   16238:	b	17ad4 <main@@Base+0x3e58>
   1623c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16240:	vldr	s0, [fp, #-76]	; 0xffffffb4
   16244:	bl	1c0a4 <main@@Base+0x8428>
   16248:	b	16260 <main@@Base+0x25e4>
   1624c:	ldr	r0, [fp, #-16]
   16250:	ldr	r1, [fp, #-20]	; 0xffffffec
   16254:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16258:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1625c:	str	r0, [fp, #-20]	; 0xffffffec
   16260:	b	163e4 <main@@Base+0x2768>
   16264:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16268:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1626c:	and	r0, r0, #-16777216	; 0xff000000
   16270:	movw	r2, #29556	; 0x7374
   16274:	movt	r2, #29797	; 0x7465
   16278:	eor	r1, r1, r2
   1627c:	eor	r0, r0, #1711276032	; 0x66000000
   16280:	orr	r0, r0, r1
   16284:	cmp	r0, #0
   16288:	bne	163cc <main@@Base+0x2750>
   1628c:	b	16298 <main@@Base+0x261c>
   16290:	andeq	lr, r2, ip, lsr lr
   16294:	andeq	r5, r0, r0, lsr #13
   16298:	ldr	r0, [fp, #-16]
   1629c:	ldr	r1, [fp, #-20]	; 0xffffffec
   162a0:	str	r1, [fp, #-48]	; 0xffffffd0
   162a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   162a8:	movw	r3, #5
   162ac:	bl	17ce4 <main@@Base+0x4068>
   162b0:	str	r0, [fp, #-20]	; 0xffffffec
   162b4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   162b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   162bc:	cmp	r0, r1
   162c0:	beq	163b4 <main@@Base+0x2738>
   162c4:	vldr	s0, [pc, #568]	; 16504 <main@@Base+0x2888>
   162c8:	vstr	s0, [fp, #-80]	; 0xffffffb0
   162cc:	ldr	r0, [fp, #-16]
   162d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   162d4:	str	r1, [fp, #-48]	; 0xffffffd0
   162d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   162dc:	sub	r3, fp, #80	; 0x50
   162e0:	bl	2ca78 <flatcc_json_parser_float@@Base>
   162e4:	str	r0, [fp, #-20]	; 0xffffffec
   162e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   162ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   162f0:	cmp	r0, r1
   162f4:	bne	16348 <main@@Base+0x26cc>
   162f8:	ldr	r0, [pc, #4056]	; 172d8 <main@@Base+0x365c>
   162fc:	add	r3, pc, r0
   16300:	ldr	r0, [fp, #-16]
   16304:	ldr	r1, [fp, #-20]	; 0xffffffec
   16308:	str	r1, [fp, #-48]	; 0xffffffd0
   1630c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16310:	sub	ip, fp, #80	; 0x50
   16314:	str	ip, [sp]
   16318:	bl	1be74 <main@@Base+0x81f8>
   1631c:	str	r0, [fp, #-20]	; 0xffffffec
   16320:	ldr	r0, [fp, #-20]	; 0xffffffec
   16324:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16328:	cmp	r0, r1
   1632c:	beq	16340 <main@@Base+0x26c4>
   16330:	ldr	r0, [fp, #-20]	; 0xffffffec
   16334:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16338:	cmp	r0, r1
   1633c:	bne	16344 <main@@Base+0x26c8>
   16340:	b	17ad4 <main@@Base+0x3e58>
   16344:	b	16348 <main@@Base+0x26cc>
   16348:	vldr	d16, [pc, #952]	; 16708 <main@@Base+0x2a8c>
   1634c:	vldr	s0, [fp, #-80]	; 0xffffffb0
   16350:	vcvt.f64.f32	d17, s0
   16354:	vcmp.f64	d17, d16
   16358:	vmrs	APSR_nzcv, fpscr
   1635c:	bne	16374 <main@@Base+0x26f8>
   16360:	ldr	r0, [fp, #-16]
   16364:	ldr	r0, [r0, #8]
   16368:	and	r0, r0, #2
   1636c:	cmp	r0, #0
   16370:	beq	163b0 <main@@Base+0x2734>
   16374:	ldr	r0, [fp, #-16]
   16378:	ldr	r0, [r0]
   1637c:	movw	r1, #25
   16380:	movw	r2, #4
   16384:	movw	r3, #4
   16388:	uxth	r3, r3
   1638c:	bl	27920 <flatcc_builder_table_add@@Base>
   16390:	str	r0, [fp, #-36]	; 0xffffffdc
   16394:	movw	r1, #0
   16398:	cmp	r0, r1
   1639c:	bne	163a4 <main@@Base+0x2728>
   163a0:	b	17ad4 <main@@Base+0x3e58>
   163a4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   163a8:	vldr	s0, [fp, #-80]	; 0xffffffb0
   163ac:	bl	1c0a4 <main@@Base+0x8428>
   163b0:	b	163c8 <main@@Base+0x274c>
   163b4:	ldr	r0, [fp, #-16]
   163b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   163bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   163c0:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   163c4:	str	r0, [fp, #-20]	; 0xffffffec
   163c8:	b	163e0 <main@@Base+0x2764>
   163cc:	ldr	r0, [fp, #-16]
   163d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   163d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   163d8:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   163dc:	str	r0, [fp, #-20]	; 0xffffffec
   163e0:	b	163e4 <main@@Base+0x2768>
   163e4:	b	163e8 <main@@Base+0x276c>
   163e8:	b	163ec <main@@Base+0x2770>
   163ec:	b	163f0 <main@@Base+0x2774>
   163f0:	b	17a1c <main@@Base+0x3da0>
   163f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   163f8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   163fc:	movw	r2, #29543	; 0x7367
   16400:	movt	r2, #26721	; 0x6861
   16404:	subs	r0, r2, r0
   16408:	movw	r2, #29556	; 0x7374
   1640c:	movt	r2, #29797	; 0x7465
   16410:	sbcs	r1, r2, r1
   16414:	str	r0, [sp, #48]	; 0x30
   16418:	str	r1, [sp, #44]	; 0x2c
   1641c:	bcc	165a4 <main@@Base+0x2928>
   16420:	b	16424 <main@@Base+0x27a8>
   16424:	ldrh	r0, [fp, #-54]	; 0xffffffca
   16428:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1642c:	movw	r2, #29797	; 0x7465
   16430:	eor	r2, r2, r1, lsr #16
   16434:	orr	r0, r0, r1, lsl #16
   16438:	movw	r1, #26163	; 0x6633
   1643c:	movt	r1, #29556	; 0x7374
   16440:	eor	r0, r0, r1
   16444:	orr	r0, r0, r2
   16448:	cmp	r0, #0
   1644c:	bne	1658c <main@@Base+0x2910>
   16450:	b	16454 <main@@Base+0x27d8>
   16454:	ldr	r0, [fp, #-16]
   16458:	ldr	r1, [fp, #-20]	; 0xffffffec
   1645c:	str	r1, [fp, #-48]	; 0xffffffd0
   16460:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16464:	movw	r3, #6
   16468:	bl	17ce4 <main@@Base+0x4068>
   1646c:	str	r0, [fp, #-20]	; 0xffffffec
   16470:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16474:	ldr	r1, [fp, #-20]	; 0xffffffec
   16478:	cmp	r0, r1
   1647c:	beq	16574 <main@@Base+0x28f8>
   16480:	vldr	s0, [pc, #124]	; 16504 <main@@Base+0x2888>
   16484:	vstr	s0, [fp, #-84]	; 0xffffffac
   16488:	ldr	r0, [fp, #-16]
   1648c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16490:	str	r1, [fp, #-48]	; 0xffffffd0
   16494:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16498:	sub	r3, fp, #84	; 0x54
   1649c:	bl	2ca78 <flatcc_json_parser_float@@Base>
   164a0:	str	r0, [fp, #-20]	; 0xffffffec
   164a4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   164a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   164ac:	cmp	r0, r1
   164b0:	bne	1650c <main@@Base+0x2890>
   164b4:	ldr	r0, [pc, #4080]	; 174ac <main@@Base+0x3830>
   164b8:	add	r3, pc, r0
   164bc:	ldr	r0, [fp, #-16]
   164c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   164c4:	str	r1, [fp, #-48]	; 0xffffffd0
   164c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   164cc:	sub	ip, fp, #84	; 0x54
   164d0:	str	ip, [sp]
   164d4:	bl	1be74 <main@@Base+0x81f8>
   164d8:	str	r0, [fp, #-20]	; 0xffffffec
   164dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   164e0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   164e4:	cmp	r0, r1
   164e8:	beq	164fc <main@@Base+0x2880>
   164ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   164f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   164f4:	cmp	r0, r1
   164f8:	bne	16508 <main@@Base+0x288c>
   164fc:	b	17ad4 <main@@Base+0x3e58>
   16500:	ldrdeq	lr, [r2], -r8
   16504:	andeq	r0, r0, r0
   16508:	b	1650c <main@@Base+0x2890>
   1650c:	vldr	s0, [fp, #-84]	; 0xffffffac
   16510:	vcvt.f64.f32	d16, s0
   16514:	vcmp.f64	d16, #0.0
   16518:	vmrs	APSR_nzcv, fpscr
   1651c:	bne	16534 <main@@Base+0x28b8>
   16520:	ldr	r0, [fp, #-16]
   16524:	ldr	r0, [r0, #8]
   16528:	and	r0, r0, #2
   1652c:	cmp	r0, #0
   16530:	beq	16570 <main@@Base+0x28f4>
   16534:	ldr	r0, [fp, #-16]
   16538:	ldr	r0, [r0]
   1653c:	movw	r1, #27
   16540:	movw	r2, #4
   16544:	movw	r3, #4
   16548:	uxth	r3, r3
   1654c:	bl	27920 <flatcc_builder_table_add@@Base>
   16550:	str	r0, [fp, #-36]	; 0xffffffdc
   16554:	movw	r1, #0
   16558:	cmp	r0, r1
   1655c:	bne	16564 <main@@Base+0x28e8>
   16560:	b	17ad4 <main@@Base+0x3e58>
   16564:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16568:	vldr	s0, [fp, #-84]	; 0xffffffac
   1656c:	bl	1c0a4 <main@@Base+0x8428>
   16570:	b	16588 <main@@Base+0x290c>
   16574:	ldr	r0, [fp, #-16]
   16578:	ldr	r1, [fp, #-20]	; 0xffffffec
   1657c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16580:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   16584:	str	r0, [fp, #-20]	; 0xffffffec
   16588:	b	165a0 <main@@Base+0x2924>
   1658c:	ldr	r0, [fp, #-16]
   16590:	ldr	r1, [fp, #-20]	; 0xffffffec
   16594:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16598:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1659c:	str	r0, [fp, #-20]	; 0xffffffec
   165a0:	b	17a18 <main@@Base+0x3d9c>
   165a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   165a8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   165ac:	movw	r2, #29556	; 0x7374
   165b0:	movt	r2, #29797	; 0x7465
   165b4:	eor	r1, r1, r2
   165b8:	movw	r2, #29544	; 0x7368
   165bc:	movt	r2, #26721	; 0x6861
   165c0:	eor	r0, r0, r2
   165c4:	orr	r0, r0, r1
   165c8:	cmp	r0, #0
   165cc:	bne	171f0 <main@@Base+0x3574>
   165d0:	b	165d4 <main@@Base+0x2958>
   165d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   165d8:	add	r0, r0, #8
   165dc:	str	r0, [fp, #-20]	; 0xffffffec
   165e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   165e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   165e8:	bl	17cac <main@@Base+0x4030>
   165ec:	str	r1, [fp, #-52]	; 0xffffffcc
   165f0:	str	r0, [fp, #-56]	; 0xffffffc8
   165f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   165f8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   165fc:	movw	lr, #30256	; 0x7630
   16600:	movt	lr, #26222	; 0x666e
   16604:	subs	r0, lr, r0
   16608:	movw	lr, #13407	; 0x345f
   1660c:	movt	lr, #29494	; 0x7336
   16610:	sbcs	r1, lr, r1
   16614:	str	r0, [sp, #40]	; 0x28
   16618:	str	r1, [sp, #36]	; 0x24
   1661c:	bcc	16904 <main@@Base+0x2c88>
   16620:	b	16624 <main@@Base+0x29a8>
   16624:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16628:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1662c:	movw	r2, #12895	; 0x325f
   16630:	movt	r2, #29491	; 0x7333
   16634:	eor	r1, r1, r2
   16638:	movw	r2, #30257	; 0x7631
   1663c:	movt	r2, #26222	; 0x666e
   16640:	eor	r0, r0, r2
   16644:	orr	r0, r0, r1
   16648:	cmp	r0, #0
   1664c:	bne	168ec <main@@Base+0x2c70>
   16650:	b	16658 <main@@Base+0x29dc>
   16654:	svcne	0x00ffffff
   16658:	ldr	r0, [fp, #-16]
   1665c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16660:	str	r1, [fp, #-48]	; 0xffffffd0
   16664:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16668:	movw	r3, #8
   1666c:	bl	17ce4 <main@@Base+0x4068>
   16670:	str	r0, [fp, #-20]	; 0xffffffec
   16674:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16678:	ldr	r1, [fp, #-20]	; 0xffffffec
   1667c:	cmp	r0, r1
   16680:	beq	16774 <main@@Base+0x2af8>
   16684:	movw	r0, #0
   16688:	str	r0, [fp, #-88]	; 0xffffffa8
   1668c:	ldr	r0, [fp, #-16]
   16690:	ldr	r1, [fp, #-20]	; 0xffffffec
   16694:	str	r1, [fp, #-48]	; 0xffffffd0
   16698:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1669c:	sub	r3, fp, #88	; 0x58
   166a0:	bl	1c0d0 <main@@Base+0x8454>
   166a4:	str	r0, [fp, #-20]	; 0xffffffec
   166a8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   166ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   166b0:	cmp	r0, r1
   166b4:	bne	16714 <main@@Base+0x2a98>
   166b8:	ldr	r0, [pc, #4092]	; 176bc <main@@Base+0x3a40>
   166bc:	add	r3, pc, r0
   166c0:	ldr	r0, [fp, #-16]
   166c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   166c8:	str	r1, [fp, #-48]	; 0xffffffd0
   166cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   166d0:	sub	ip, fp, #88	; 0x58
   166d4:	str	ip, [sp]
   166d8:	bl	1c1a8 <main@@Base+0x852c>
   166dc:	str	r0, [fp, #-20]	; 0xffffffec
   166e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   166e4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   166e8:	cmp	r0, r1
   166ec:	beq	16700 <main@@Base+0x2a84>
   166f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   166f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   166f8:	cmp	r0, r1
   166fc:	bne	16710 <main@@Base+0x2a94>
   16700:	b	17ad4 <main@@Base+0x3e58>
   16704:	nop	{0}
   16708:	andeq	r0, r0, r0
   1670c:			; <UNDEFINED> instruction: 0x41132cbc
   16710:	b	16714 <main@@Base+0x2a98>
   16714:	ldr	r0, [fp, #-88]	; 0xffffffa8
   16718:	cmp	r0, #0
   1671c:	bne	16734 <main@@Base+0x2ab8>
   16720:	ldr	r0, [fp, #-16]
   16724:	ldr	r0, [r0, #8]
   16728:	and	r0, r0, #2
   1672c:	cmp	r0, #0
   16730:	beq	16770 <main@@Base+0x2af4>
   16734:	ldr	r0, [fp, #-16]
   16738:	ldr	r0, [r0]
   1673c:	movw	r1, #16
   16740:	movw	r2, #4
   16744:	movw	r3, #4
   16748:	uxth	r3, r3
   1674c:	bl	27920 <flatcc_builder_table_add@@Base>
   16750:	str	r0, [fp, #-36]	; 0xffffffdc
   16754:	movw	r1, #0
   16758:	cmp	r0, r1
   1675c:	bne	16764 <main@@Base+0x2ae8>
   16760:	b	17ad4 <main@@Base+0x3e58>
   16764:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16768:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1676c:	bl	1c3d0 <main@@Base+0x8754>
   16770:	b	168e8 <main@@Base+0x2c6c>
   16774:	ldr	r0, [fp, #-20]	; 0xffffffec
   16778:	add	r0, r0, #8
   1677c:	str	r0, [fp, #-20]	; 0xffffffec
   16780:	ldr	r0, [fp, #-20]	; 0xffffffec
   16784:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16788:	bl	17cac <main@@Base+0x4030>
   1678c:	str	r1, [fp, #-52]	; 0xffffffcc
   16790:	str	r0, [fp, #-56]	; 0xffffffc8
   16794:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16798:	and	r0, r0, #-16777216	; 0xff000000
   1679c:	teq	r0, #1627389952	; 0x61000000
   167a0:	bne	168d0 <main@@Base+0x2c54>
   167a4:	b	167a8 <main@@Base+0x2b2c>
   167a8:	ldr	r0, [fp, #-16]
   167ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   167b0:	str	r1, [fp, #-48]	; 0xffffffd0
   167b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   167b8:	movw	r3, #1
   167bc:	bl	17ce4 <main@@Base+0x4068>
   167c0:	str	r0, [fp, #-20]	; 0xffffffec
   167c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   167c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   167cc:	cmp	r0, r1
   167d0:	beq	168b8 <main@@Base+0x2c3c>
   167d4:	movw	r0, #0
   167d8:	str	r0, [fp, #-92]	; 0xffffffa4
   167dc:	ldr	r0, [fp, #-16]
   167e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   167e4:	str	r1, [fp, #-48]	; 0xffffffd0
   167e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   167ec:	sub	r3, fp, #92	; 0x5c
   167f0:	bl	1c0d0 <main@@Base+0x8454>
   167f4:	str	r0, [fp, #-20]	; 0xffffffec
   167f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   167fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   16800:	cmp	r0, r1
   16804:	bne	16858 <main@@Base+0x2bdc>
   16808:	ldr	r0, [pc, #4052]	; 177e4 <main@@Base+0x3b68>
   1680c:	add	r3, pc, r0
   16810:	ldr	r0, [fp, #-16]
   16814:	ldr	r1, [fp, #-20]	; 0xffffffec
   16818:	str	r1, [fp, #-48]	; 0xffffffd0
   1681c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16820:	sub	ip, fp, #92	; 0x5c
   16824:	str	ip, [sp]
   16828:	bl	1c1a8 <main@@Base+0x852c>
   1682c:	str	r0, [fp, #-20]	; 0xffffffec
   16830:	ldr	r0, [fp, #-20]	; 0xffffffec
   16834:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16838:	cmp	r0, r1
   1683c:	beq	16850 <main@@Base+0x2bd4>
   16840:	ldr	r0, [fp, #-20]	; 0xffffffec
   16844:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16848:	cmp	r0, r1
   1684c:	bne	16854 <main@@Base+0x2bd8>
   16850:	b	17ad4 <main@@Base+0x3e58>
   16854:	b	16858 <main@@Base+0x2bdc>
   16858:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1685c:	cmp	r0, #0
   16860:	bne	16878 <main@@Base+0x2bfc>
   16864:	ldr	r0, [fp, #-16]
   16868:	ldr	r0, [r0, #8]
   1686c:	and	r0, r0, #2
   16870:	cmp	r0, #0
   16874:	beq	168b4 <main@@Base+0x2c38>
   16878:	ldr	r0, [fp, #-16]
   1687c:	ldr	r0, [r0]
   16880:	movw	r1, #20
   16884:	movw	r2, #4
   16888:	movw	r3, #4
   1688c:	uxth	r3, r3
   16890:	bl	27920 <flatcc_builder_table_add@@Base>
   16894:	str	r0, [fp, #-36]	; 0xffffffdc
   16898:	movw	r1, #0
   1689c:	cmp	r0, r1
   168a0:	bne	168a8 <main@@Base+0x2c2c>
   168a4:	b	17ad4 <main@@Base+0x3e58>
   168a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   168ac:	ldr	r1, [fp, #-92]	; 0xffffffa4
   168b0:	bl	1c3d0 <main@@Base+0x8754>
   168b4:	b	168cc <main@@Base+0x2c50>
   168b8:	ldr	r0, [fp, #-16]
   168bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   168c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   168c4:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   168c8:	str	r0, [fp, #-20]	; 0xffffffec
   168cc:	b	168e4 <main@@Base+0x2c68>
   168d0:	ldr	r0, [fp, #-16]
   168d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   168d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   168dc:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   168e0:	str	r0, [fp, #-20]	; 0xffffffec
   168e4:	b	168e8 <main@@Base+0x2c6c>
   168e8:	b	16900 <main@@Base+0x2c84>
   168ec:	ldr	r0, [fp, #-16]
   168f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   168f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   168f8:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   168fc:	str	r0, [fp, #-20]	; 0xffffffec
   16900:	b	171ec <main@@Base+0x3570>
   16904:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16908:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1690c:	movw	r2, #30256	; 0x7630
   16910:	movt	r2, #26222	; 0x666e
   16914:	subs	r0, r2, r0
   16918:	movw	r2, #12895	; 0x325f
   1691c:	movt	r2, #30003	; 0x7533
   16920:	sbcs	r1, r2, r1
   16924:	str	r0, [sp, #32]
   16928:	str	r1, [sp, #28]
   1692c:	bcc	16c2c <main@@Base+0x2fb0>
   16930:	b	16934 <main@@Base+0x2cb8>
   16934:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16938:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1693c:	movw	r2, #13407	; 0x345f
   16940:	movt	r2, #29494	; 0x7336
   16944:	eor	r1, r1, r2
   16948:	movw	r2, #30257	; 0x7631
   1694c:	movt	r2, #26222	; 0x666e
   16950:	eor	r0, r0, r2
   16954:	orr	r0, r0, r1
   16958:	cmp	r0, #0
   1695c:	bne	16c14 <main@@Base+0x2f98>
   16960:	b	16964 <main@@Base+0x2ce8>
   16964:	ldr	r0, [fp, #-16]
   16968:	ldr	r1, [fp, #-20]	; 0xffffffec
   1696c:	str	r1, [fp, #-48]	; 0xffffffd0
   16970:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16974:	movw	r3, #8
   16978:	bl	17ce4 <main@@Base+0x4068>
   1697c:	str	r0, [fp, #-20]	; 0xffffffec
   16980:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16984:	ldr	r1, [fp, #-20]	; 0xffffffec
   16988:	cmp	r0, r1
   1698c:	beq	16a88 <main@@Base+0x2e0c>
   16990:	mov	r0, #0
   16994:	str	r0, [fp, #-100]	; 0xffffff9c
   16998:	str	r0, [fp, #-104]	; 0xffffff98
   1699c:	ldr	r0, [fp, #-16]
   169a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   169a4:	str	r1, [fp, #-48]	; 0xffffffd0
   169a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   169ac:	sub	r3, fp, #104	; 0x68
   169b0:	bl	1c3fc <main@@Base+0x8780>
   169b4:	str	r0, [fp, #-20]	; 0xffffffec
   169b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   169bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   169c0:	cmp	r0, r1
   169c4:	bne	16a18 <main@@Base+0x2d9c>
   169c8:	ldr	r0, [pc, #4080]	; 179c0 <main@@Base+0x3d44>
   169cc:	add	r3, pc, r0
   169d0:	ldr	r0, [fp, #-16]
   169d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   169d8:	str	r1, [fp, #-48]	; 0xffffffd0
   169dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   169e0:	sub	ip, fp, #104	; 0x68
   169e4:	str	ip, [sp]
   169e8:	bl	1c4d4 <main@@Base+0x8858>
   169ec:	str	r0, [fp, #-20]	; 0xffffffec
   169f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   169f4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   169f8:	cmp	r0, r1
   169fc:	beq	16a10 <main@@Base+0x2d94>
   16a00:	ldr	r0, [fp, #-20]	; 0xffffffec
   16a04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a08:	cmp	r0, r1
   16a0c:	bne	16a14 <main@@Base+0x2d98>
   16a10:	b	17ad4 <main@@Base+0x3e58>
   16a14:	b	16a18 <main@@Base+0x2d9c>
   16a18:	ldr	r0, [fp, #-104]	; 0xffffff98
   16a1c:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16a20:	orr	r0, r0, r1
   16a24:	cmp	r0, #0
   16a28:	bne	16a44 <main@@Base+0x2dc8>
   16a2c:	b	16a30 <main@@Base+0x2db4>
   16a30:	ldr	r0, [fp, #-16]
   16a34:	ldr	r0, [r0, #8]
   16a38:	and	r0, r0, #2
   16a3c:	cmp	r0, #0
   16a40:	beq	16a84 <main@@Base+0x2e08>
   16a44:	ldr	r0, [fp, #-16]
   16a48:	ldr	r0, [r0]
   16a4c:	movw	r1, #18
   16a50:	movw	r2, #8
   16a54:	movw	r3, #8
   16a58:	uxth	r3, r3
   16a5c:	bl	27920 <flatcc_builder_table_add@@Base>
   16a60:	str	r0, [fp, #-36]	; 0xffffffdc
   16a64:	movw	r1, #0
   16a68:	cmp	r0, r1
   16a6c:	bne	16a74 <main@@Base+0x2df8>
   16a70:	b	17ad4 <main@@Base+0x3e58>
   16a74:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16a78:	ldr	r2, [fp, #-104]	; 0xffffff98
   16a7c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16a80:	bl	1c714 <main@@Base+0x8a98>
   16a84:	b	16c10 <main@@Base+0x2f94>
   16a88:	ldr	r0, [fp, #-20]	; 0xffffffec
   16a8c:	add	r0, r0, #8
   16a90:	str	r0, [fp, #-20]	; 0xffffffec
   16a94:	ldr	r0, [fp, #-20]	; 0xffffffec
   16a98:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a9c:	bl	17cac <main@@Base+0x4030>
   16aa0:	str	r1, [fp, #-52]	; 0xffffffcc
   16aa4:	str	r0, [fp, #-56]	; 0xffffffc8
   16aa8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16aac:	and	r0, r0, #-16777216	; 0xff000000
   16ab0:	teq	r0, #1627389952	; 0x61000000
   16ab4:	bne	16bf8 <main@@Base+0x2f7c>
   16ab8:	b	16abc <main@@Base+0x2e40>
   16abc:	ldr	r0, [fp, #-16]
   16ac0:	ldr	r1, [fp, #-20]	; 0xffffffec
   16ac4:	str	r1, [fp, #-48]	; 0xffffffd0
   16ac8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16acc:	movw	r3, #1
   16ad0:	bl	17ce4 <main@@Base+0x4068>
   16ad4:	str	r0, [fp, #-20]	; 0xffffffec
   16ad8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16adc:	ldr	r1, [fp, #-20]	; 0xffffffec
   16ae0:	cmp	r0, r1
   16ae4:	beq	16be0 <main@@Base+0x2f64>
   16ae8:	mov	r0, #0
   16aec:	str	r0, [fp, #-108]	; 0xffffff94
   16af0:	str	r0, [fp, #-112]	; 0xffffff90
   16af4:	ldr	r0, [fp, #-16]
   16af8:	ldr	r1, [fp, #-20]	; 0xffffffec
   16afc:	str	r1, [fp, #-48]	; 0xffffffd0
   16b00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16b04:	sub	r3, fp, #112	; 0x70
   16b08:	bl	1c3fc <main@@Base+0x8780>
   16b0c:	str	r0, [fp, #-20]	; 0xffffffec
   16b10:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16b14:	ldr	r1, [fp, #-20]	; 0xffffffec
   16b18:	cmp	r0, r1
   16b1c:	bne	16b70 <main@@Base+0x2ef4>
   16b20:	ldr	r0, [pc, #4080]	; 17b18 <main@@Base+0x3e9c>
   16b24:	add	r3, pc, r0
   16b28:	ldr	r0, [fp, #-16]
   16b2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16b30:	str	r1, [fp, #-48]	; 0xffffffd0
   16b34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16b38:	sub	ip, fp, #112	; 0x70
   16b3c:	str	ip, [sp]
   16b40:	bl	1c4d4 <main@@Base+0x8858>
   16b44:	str	r0, [fp, #-20]	; 0xffffffec
   16b48:	ldr	r0, [fp, #-20]	; 0xffffffec
   16b4c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16b50:	cmp	r0, r1
   16b54:	beq	16b68 <main@@Base+0x2eec>
   16b58:	ldr	r0, [fp, #-20]	; 0xffffffec
   16b5c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b60:	cmp	r0, r1
   16b64:	bne	16b6c <main@@Base+0x2ef0>
   16b68:	b	17ad4 <main@@Base+0x3e58>
   16b6c:	b	16b70 <main@@Base+0x2ef4>
   16b70:	ldr	r0, [fp, #-112]	; 0xffffff90
   16b74:	ldr	r1, [fp, #-108]	; 0xffffff94
   16b78:	orr	r0, r0, r1
   16b7c:	cmp	r0, #0
   16b80:	bne	16b9c <main@@Base+0x2f20>
   16b84:	b	16b88 <main@@Base+0x2f0c>
   16b88:	ldr	r0, [fp, #-16]
   16b8c:	ldr	r0, [r0, #8]
   16b90:	and	r0, r0, #2
   16b94:	cmp	r0, #0
   16b98:	beq	16bdc <main@@Base+0x2f60>
   16b9c:	ldr	r0, [fp, #-16]
   16ba0:	ldr	r0, [r0]
   16ba4:	movw	r1, #22
   16ba8:	movw	r2, #8
   16bac:	movw	r3, #8
   16bb0:	uxth	r3, r3
   16bb4:	bl	27920 <flatcc_builder_table_add@@Base>
   16bb8:	str	r0, [fp, #-36]	; 0xffffffdc
   16bbc:	movw	r1, #0
   16bc0:	cmp	r0, r1
   16bc4:	bne	16bcc <main@@Base+0x2f50>
   16bc8:	b	17ad4 <main@@Base+0x3e58>
   16bcc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16bd0:	ldr	r2, [fp, #-112]	; 0xffffff90
   16bd4:	ldr	r3, [fp, #-108]	; 0xffffff94
   16bd8:	bl	1c714 <main@@Base+0x8a98>
   16bdc:	b	16bf4 <main@@Base+0x2f78>
   16be0:	ldr	r0, [fp, #-16]
   16be4:	ldr	r1, [fp, #-20]	; 0xffffffec
   16be8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16bec:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   16bf0:	str	r0, [fp, #-20]	; 0xffffffec
   16bf4:	b	16c0c <main@@Base+0x2f90>
   16bf8:	ldr	r0, [fp, #-16]
   16bfc:	ldr	r1, [fp, #-20]	; 0xffffffec
   16c00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16c04:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   16c08:	str	r0, [fp, #-20]	; 0xffffffec
   16c0c:	b	16c10 <main@@Base+0x2f94>
   16c10:	b	16c28 <main@@Base+0x2fac>
   16c14:	ldr	r0, [fp, #-16]
   16c18:	ldr	r1, [fp, #-20]	; 0xffffffec
   16c1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16c20:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   16c24:	str	r0, [fp, #-20]	; 0xffffffec
   16c28:	b	171e8 <main@@Base+0x356c>
   16c2c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16c30:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16c34:	movw	r2, #12895	; 0x325f
   16c38:	movt	r2, #30003	; 0x7533
   16c3c:	eor	r1, r1, r2
   16c40:	movw	r2, #30257	; 0x7631
   16c44:	movt	r2, #26222	; 0x666e
   16c48:	eor	r0, r0, r2
   16c4c:	orr	r0, r0, r1
   16c50:	cmp	r0, #0
   16c54:	bne	16ee8 <main@@Base+0x326c>
   16c58:	b	16c5c <main@@Base+0x2fe0>
   16c5c:	ldr	r0, [fp, #-16]
   16c60:	ldr	r1, [fp, #-20]	; 0xffffffec
   16c64:	str	r1, [fp, #-48]	; 0xffffffd0
   16c68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16c6c:	movw	r3, #8
   16c70:	bl	17ce4 <main@@Base+0x4068>
   16c74:	str	r0, [fp, #-20]	; 0xffffffec
   16c78:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16c7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16c80:	cmp	r0, r1
   16c84:	beq	16d6c <main@@Base+0x30f0>
   16c88:	movw	r0, #0
   16c8c:	str	r0, [fp, #-116]	; 0xffffff8c
   16c90:	ldr	r0, [fp, #-16]
   16c94:	ldr	r1, [fp, #-20]	; 0xffffffec
   16c98:	str	r1, [fp, #-48]	; 0xffffffd0
   16c9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16ca0:	sub	r3, fp, #116	; 0x74
   16ca4:	bl	1c74c <main@@Base+0x8ad0>
   16ca8:	str	r0, [fp, #-20]	; 0xffffffec
   16cac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16cb0:	ldr	r1, [fp, #-20]	; 0xffffffec
   16cb4:	cmp	r0, r1
   16cb8:	bne	16d0c <main@@Base+0x3090>
   16cbc:	ldr	r0, [pc, #3664]	; 17b14 <main@@Base+0x3e98>
   16cc0:	add	r3, pc, r0
   16cc4:	ldr	r0, [fp, #-16]
   16cc8:	ldr	r1, [fp, #-20]	; 0xffffffec
   16ccc:	str	r1, [fp, #-48]	; 0xffffffd0
   16cd0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16cd4:	sub	ip, fp, #116	; 0x74
   16cd8:	str	ip, [sp]
   16cdc:	bl	1c824 <main@@Base+0x8ba8>
   16ce0:	str	r0, [fp, #-20]	; 0xffffffec
   16ce4:	ldr	r0, [fp, #-20]	; 0xffffffec
   16ce8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16cec:	cmp	r0, r1
   16cf0:	beq	16d04 <main@@Base+0x3088>
   16cf4:	ldr	r0, [fp, #-20]	; 0xffffffec
   16cf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16cfc:	cmp	r0, r1
   16d00:	bne	16d08 <main@@Base+0x308c>
   16d04:	b	17ad4 <main@@Base+0x3e58>
   16d08:	b	16d0c <main@@Base+0x3090>
   16d0c:	ldr	r0, [fp, #-116]	; 0xffffff8c
   16d10:	cmp	r0, #0
   16d14:	bne	16d2c <main@@Base+0x30b0>
   16d18:	ldr	r0, [fp, #-16]
   16d1c:	ldr	r0, [r0, #8]
   16d20:	and	r0, r0, #2
   16d24:	cmp	r0, #0
   16d28:	beq	16d68 <main@@Base+0x30ec>
   16d2c:	ldr	r0, [fp, #-16]
   16d30:	ldr	r0, [r0]
   16d34:	movw	r1, #17
   16d38:	movw	r2, #4
   16d3c:	movw	r3, #4
   16d40:	uxth	r3, r3
   16d44:	bl	27920 <flatcc_builder_table_add@@Base>
   16d48:	str	r0, [fp, #-36]	; 0xffffffdc
   16d4c:	movw	r1, #0
   16d50:	cmp	r0, r1
   16d54:	bne	16d5c <main@@Base+0x30e0>
   16d58:	b	17ad4 <main@@Base+0x3e58>
   16d5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16d60:	ldr	r1, [fp, #-116]	; 0xffffff8c
   16d64:	bl	1ca4c <main@@Base+0x8dd0>
   16d68:	b	16ee4 <main@@Base+0x3268>
   16d6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16d70:	add	r0, r0, #8
   16d74:	str	r0, [fp, #-20]	; 0xffffffec
   16d78:	ldr	r0, [fp, #-20]	; 0xffffffec
   16d7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d80:	bl	17cac <main@@Base+0x4030>
   16d84:	str	r1, [fp, #-52]	; 0xffffffcc
   16d88:	str	r0, [fp, #-56]	; 0xffffffc8
   16d8c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16d90:	and	r0, r0, #-16777216	; 0xff000000
   16d94:	teq	r0, #1627389952	; 0x61000000
   16d98:	bne	16ecc <main@@Base+0x3250>
   16d9c:	b	16da0 <main@@Base+0x3124>
   16da0:	ldr	r0, [fp, #-16]
   16da4:	ldr	r1, [fp, #-20]	; 0xffffffec
   16da8:	str	r1, [fp, #-48]	; 0xffffffd0
   16dac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16db0:	movw	r3, #1
   16db4:	bl	17ce4 <main@@Base+0x4068>
   16db8:	str	r0, [fp, #-20]	; 0xffffffec
   16dbc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16dc0:	ldr	r1, [fp, #-20]	; 0xffffffec
   16dc4:	cmp	r0, r1
   16dc8:	beq	16eb4 <main@@Base+0x3238>
   16dcc:	movw	r0, #0
   16dd0:	str	r0, [fp, #-120]	; 0xffffff88
   16dd4:	ldr	r0, [fp, #-16]
   16dd8:	ldr	r1, [fp, #-20]	; 0xffffffec
   16ddc:	str	r1, [fp, #-48]	; 0xffffffd0
   16de0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16de4:	sub	r3, fp, #120	; 0x78
   16de8:	bl	1c74c <main@@Base+0x8ad0>
   16dec:	str	r0, [fp, #-20]	; 0xffffffec
   16df0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16df4:	ldr	r1, [fp, #-20]	; 0xffffffec
   16df8:	cmp	r0, r1
   16dfc:	bne	16e50 <main@@Base+0x31d4>
   16e00:	ldr	r0, [pc, #3336]	; 17b10 <main@@Base+0x3e94>
   16e04:	add	r3, pc, r0
   16e08:	ldr	r0, [fp, #-16]
   16e0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16e10:	str	r1, [fp, #-48]	; 0xffffffd0
   16e14:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16e18:	sub	ip, fp, #120	; 0x78
   16e1c:	str	ip, [sp]
   16e20:	bl	1c824 <main@@Base+0x8ba8>
   16e24:	str	r0, [fp, #-20]	; 0xffffffec
   16e28:	ldr	r0, [fp, #-20]	; 0xffffffec
   16e2c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16e30:	cmp	r0, r1
   16e34:	beq	16e48 <main@@Base+0x31cc>
   16e38:	ldr	r0, [fp, #-20]	; 0xffffffec
   16e3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16e40:	cmp	r0, r1
   16e44:	bne	16e4c <main@@Base+0x31d0>
   16e48:	b	17ad4 <main@@Base+0x3e58>
   16e4c:	b	16e50 <main@@Base+0x31d4>
   16e50:	ldr	r0, [fp, #-120]	; 0xffffff88
   16e54:	cmp	r0, #0
   16e58:	bne	16e70 <main@@Base+0x31f4>
   16e5c:	ldr	r0, [fp, #-16]
   16e60:	ldr	r0, [r0, #8]
   16e64:	and	r0, r0, #2
   16e68:	cmp	r0, #0
   16e6c:	beq	16eac <main@@Base+0x3230>
   16e70:	ldr	r0, [fp, #-16]
   16e74:	ldr	r0, [r0]
   16e78:	movw	r1, #21
   16e7c:	movw	r2, #4
   16e80:	movw	r3, #4
   16e84:	uxth	r3, r3
   16e88:	bl	27920 <flatcc_builder_table_add@@Base>
   16e8c:	str	r0, [fp, #-36]	; 0xffffffdc
   16e90:	movw	r1, #0
   16e94:	cmp	r0, r1
   16e98:	bne	16ea0 <main@@Base+0x3224>
   16e9c:	b	17ad4 <main@@Base+0x3e58>
   16ea0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16ea4:	ldr	r1, [fp, #-120]	; 0xffffff88
   16ea8:	bl	1ca4c <main@@Base+0x8dd0>
   16eac:	b	16ec8 <main@@Base+0x324c>
   16eb0:	andeq	lr, r2, r4, lsr r2
   16eb4:	ldr	r0, [fp, #-16]
   16eb8:	ldr	r1, [fp, #-20]	; 0xffffffec
   16ebc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16ec0:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   16ec4:	str	r0, [fp, #-20]	; 0xffffffec
   16ec8:	b	16ee0 <main@@Base+0x3264>
   16ecc:	ldr	r0, [fp, #-16]
   16ed0:	ldr	r1, [fp, #-20]	; 0xffffffec
   16ed4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16ed8:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   16edc:	str	r0, [fp, #-20]	; 0xffffffec
   16ee0:	b	16ee4 <main@@Base+0x3268>
   16ee4:	b	171e4 <main@@Base+0x3568>
   16ee8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16eec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   16ef0:	movw	r2, #13407	; 0x345f
   16ef4:	movt	r2, #30006	; 0x7536
   16ef8:	eor	r1, r1, r2
   16efc:	movw	r2, #30257	; 0x7631
   16f00:	movt	r2, #26222	; 0x666e
   16f04:	eor	r0, r0, r2
   16f08:	orr	r0, r0, r1
   16f0c:	cmp	r0, #0
   16f10:	bne	171cc <main@@Base+0x3550>
   16f14:	b	16f18 <main@@Base+0x329c>
   16f18:	ldr	r0, [fp, #-16]
   16f1c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16f20:	str	r1, [fp, #-48]	; 0xffffffd0
   16f24:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16f28:	movw	r3, #8
   16f2c:	bl	17ce4 <main@@Base+0x4068>
   16f30:	str	r0, [fp, #-20]	; 0xffffffec
   16f34:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16f38:	ldr	r1, [fp, #-20]	; 0xffffffec
   16f3c:	cmp	r0, r1
   16f40:	beq	1703c <main@@Base+0x33c0>
   16f44:	mov	r0, #0
   16f48:	str	r0, [fp, #-124]	; 0xffffff84
   16f4c:	str	r0, [fp, #-128]	; 0xffffff80
   16f50:	ldr	r0, [fp, #-16]
   16f54:	ldr	r1, [fp, #-20]	; 0xffffffec
   16f58:	str	r1, [fp, #-48]	; 0xffffffd0
   16f5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16f60:	sub	r3, fp, #128	; 0x80
   16f64:	bl	1ca78 <main@@Base+0x8dfc>
   16f68:	str	r0, [fp, #-20]	; 0xffffffec
   16f6c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16f70:	ldr	r1, [fp, #-20]	; 0xffffffec
   16f74:	cmp	r0, r1
   16f78:	bne	16fcc <main@@Base+0x3350>
   16f7c:	ldr	r0, [pc, #2952]	; 17b0c <main@@Base+0x3e90>
   16f80:	add	r3, pc, r0
   16f84:	ldr	r0, [fp, #-16]
   16f88:	ldr	r1, [fp, #-20]	; 0xffffffec
   16f8c:	str	r1, [fp, #-48]	; 0xffffffd0
   16f90:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16f94:	sub	ip, fp, #128	; 0x80
   16f98:	str	ip, [sp]
   16f9c:	bl	1cb50 <main@@Base+0x8ed4>
   16fa0:	str	r0, [fp, #-20]	; 0xffffffec
   16fa4:	ldr	r0, [fp, #-20]	; 0xffffffec
   16fa8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   16fac:	cmp	r0, r1
   16fb0:	beq	16fc4 <main@@Base+0x3348>
   16fb4:	ldr	r0, [fp, #-20]	; 0xffffffec
   16fb8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16fbc:	cmp	r0, r1
   16fc0:	bne	16fc8 <main@@Base+0x334c>
   16fc4:	b	17ad4 <main@@Base+0x3e58>
   16fc8:	b	16fcc <main@@Base+0x3350>
   16fcc:	ldr	r0, [fp, #-128]	; 0xffffff80
   16fd0:	ldr	r1, [fp, #-124]	; 0xffffff84
   16fd4:	orr	r0, r0, r1
   16fd8:	cmp	r0, #0
   16fdc:	bne	16ff8 <main@@Base+0x337c>
   16fe0:	b	16fe4 <main@@Base+0x3368>
   16fe4:	ldr	r0, [fp, #-16]
   16fe8:	ldr	r0, [r0, #8]
   16fec:	and	r0, r0, #2
   16ff0:	cmp	r0, #0
   16ff4:	beq	17038 <main@@Base+0x33bc>
   16ff8:	ldr	r0, [fp, #-16]
   16ffc:	ldr	r0, [r0]
   17000:	movw	r1, #19
   17004:	movw	r2, #8
   17008:	movw	r3, #8
   1700c:	uxth	r3, r3
   17010:	bl	27920 <flatcc_builder_table_add@@Base>
   17014:	str	r0, [fp, #-36]	; 0xffffffdc
   17018:	movw	r1, #0
   1701c:	cmp	r0, r1
   17020:	bne	17028 <main@@Base+0x33ac>
   17024:	b	17ad4 <main@@Base+0x3e58>
   17028:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1702c:	ldr	r2, [fp, #-128]	; 0xffffff80
   17030:	ldr	r3, [fp, #-124]	; 0xffffff84
   17034:	bl	1cd90 <main@@Base+0x9114>
   17038:	b	171c8 <main@@Base+0x354c>
   1703c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17040:	add	r0, r0, #8
   17044:	str	r0, [fp, #-20]	; 0xffffffec
   17048:	ldr	r0, [fp, #-20]	; 0xffffffec
   1704c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17050:	bl	17cac <main@@Base+0x4030>
   17054:	str	r1, [fp, #-52]	; 0xffffffcc
   17058:	str	r0, [fp, #-56]	; 0xffffffc8
   1705c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17060:	and	r0, r0, #-16777216	; 0xff000000
   17064:	teq	r0, #1627389952	; 0x61000000
   17068:	bne	171b0 <main@@Base+0x3534>
   1706c:	b	17070 <main@@Base+0x33f4>
   17070:	ldr	r0, [fp, #-16]
   17074:	ldr	r1, [fp, #-20]	; 0xffffffec
   17078:	str	r1, [fp, #-48]	; 0xffffffd0
   1707c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17080:	movw	r3, #1
   17084:	bl	17ce4 <main@@Base+0x4068>
   17088:	str	r0, [fp, #-20]	; 0xffffffec
   1708c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17090:	ldr	r1, [fp, #-20]	; 0xffffffec
   17094:	cmp	r0, r1
   17098:	beq	17198 <main@@Base+0x351c>
   1709c:	mov	r0, #0
   170a0:	str	r0, [fp, #-132]	; 0xffffff7c
   170a4:	str	r0, [fp, #-136]	; 0xffffff78
   170a8:	ldr	r0, [fp, #-16]
   170ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   170b0:	str	r1, [fp, #-48]	; 0xffffffd0
   170b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   170b8:	sub	r3, fp, #136	; 0x88
   170bc:	bl	1ca78 <main@@Base+0x8dfc>
   170c0:	str	r0, [fp, #-20]	; 0xffffffec
   170c4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   170c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   170cc:	cmp	r0, r1
   170d0:	bne	17124 <main@@Base+0x34a8>
   170d4:	ldr	r0, [pc, #2604]	; 17b08 <main@@Base+0x3e8c>
   170d8:	add	r3, pc, r0
   170dc:	ldr	r0, [fp, #-16]
   170e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   170e4:	str	r1, [fp, #-48]	; 0xffffffd0
   170e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   170ec:	sub	ip, fp, #136	; 0x88
   170f0:	str	ip, [sp]
   170f4:	bl	1cb50 <main@@Base+0x8ed4>
   170f8:	str	r0, [fp, #-20]	; 0xffffffec
   170fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   17100:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17104:	cmp	r0, r1
   17108:	beq	1711c <main@@Base+0x34a0>
   1710c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17110:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17114:	cmp	r0, r1
   17118:	bne	17120 <main@@Base+0x34a4>
   1711c:	b	17ad4 <main@@Base+0x3e58>
   17120:	b	17124 <main@@Base+0x34a8>
   17124:	ldr	r0, [fp, #-136]	; 0xffffff78
   17128:	ldr	r1, [fp, #-132]	; 0xffffff7c
   1712c:	orr	r0, r0, r1
   17130:	cmp	r0, #0
   17134:	bne	17150 <main@@Base+0x34d4>
   17138:	b	1713c <main@@Base+0x34c0>
   1713c:	ldr	r0, [fp, #-16]
   17140:	ldr	r0, [r0, #8]
   17144:	and	r0, r0, #2
   17148:	cmp	r0, #0
   1714c:	beq	17190 <main@@Base+0x3514>
   17150:	ldr	r0, [fp, #-16]
   17154:	ldr	r0, [r0]
   17158:	movw	r1, #23
   1715c:	movw	r2, #8
   17160:	movw	r3, #8
   17164:	uxth	r3, r3
   17168:	bl	27920 <flatcc_builder_table_add@@Base>
   1716c:	str	r0, [fp, #-36]	; 0xffffffdc
   17170:	movw	r1, #0
   17174:	cmp	r0, r1
   17178:	bne	17180 <main@@Base+0x3504>
   1717c:	b	17ad4 <main@@Base+0x3e58>
   17180:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17184:	ldr	r2, [fp, #-136]	; 0xffffff78
   17188:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1718c:	bl	1cd90 <main@@Base+0x9114>
   17190:	b	171ac <main@@Base+0x3530>
   17194:	andeq	sp, r2, r8, ror #30
   17198:	ldr	r0, [fp, #-16]
   1719c:	ldr	r1, [fp, #-20]	; 0xffffffec
   171a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   171a4:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   171a8:	str	r0, [fp, #-20]	; 0xffffffec
   171ac:	b	171c4 <main@@Base+0x3548>
   171b0:	ldr	r0, [fp, #-16]
   171b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   171b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   171bc:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   171c0:	str	r0, [fp, #-20]	; 0xffffffec
   171c4:	b	171c8 <main@@Base+0x354c>
   171c8:	b	171e0 <main@@Base+0x3564>
   171cc:	ldr	r0, [fp, #-16]
   171d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   171d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   171d8:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   171dc:	str	r0, [fp, #-20]	; 0xffffffec
   171e0:	b	171e4 <main@@Base+0x3568>
   171e4:	b	171e8 <main@@Base+0x356c>
   171e8:	b	171ec <main@@Base+0x3570>
   171ec:	b	17a14 <main@@Base+0x3d98>
   171f0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   171f4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   171f8:	movw	r2, #24430	; 0x5f6e
   171fc:	movt	r2, #28530	; 0x6f72
   17200:	subs	r0, r2, r0
   17204:	movw	r2, #25460	; 0x6374
   17208:	movt	r2, #30309	; 0x7665
   1720c:	sbcs	r1, r2, r1
   17210:	str	r0, [sp, #24]
   17214:	str	r1, [sp, #20]
   17218:	bcc	17564 <main@@Base+0x38e8>
   1721c:	b	17220 <main@@Base+0x35a4>
   17220:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17224:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17228:	movw	r2, #29556	; 0x7374
   1722c:	movt	r2, #29797	; 0x7465
   17230:	eor	r1, r1, r2
   17234:	movw	r2, #29556	; 0x7374
   17238:	movt	r2, #28261	; 0x6e65
   1723c:	eor	r0, r0, r2
   17240:	orr	r0, r0, r1
   17244:	cmp	r0, #0
   17248:	bne	1754c <main@@Base+0x38d0>
   1724c:	b	17250 <main@@Base+0x35d4>
   17250:	ldr	r0, [fp, #-20]	; 0xffffffec
   17254:	add	r0, r0, #8
   17258:	str	r0, [fp, #-20]	; 0xffffffec
   1725c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17260:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17264:	bl	17cac <main@@Base+0x4030>
   17268:	str	r1, [fp, #-52]	; 0xffffffcc
   1726c:	str	r0, [fp, #-56]	; 0xffffffc8
   17270:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17274:	ldr	r1, [fp, #-52]	; 0xffffffcc
   17278:	movw	lr, #26220	; 0x666c
   1727c:	movt	lr, #25956	; 0x6564
   17280:	eor	r1, r1, lr
   17284:	movw	lr, #25205	; 0x6275
   17288:	movt	lr, #24948	; 0x6174
   1728c:	eor	r0, r0, lr
   17290:	orr	r0, r0, r1
   17294:	cmp	r0, #0
   17298:	bne	17534 <main@@Base+0x38b8>
   1729c:	b	172a0 <main@@Base+0x3624>
   172a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   172a4:	add	r0, r0, #8
   172a8:	str	r0, [fp, #-20]	; 0xffffffec
   172ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   172b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   172b4:	bl	17cac <main@@Base+0x4030>
   172b8:	str	r1, [fp, #-52]	; 0xffffffcc
   172bc:	str	r0, [fp, #-56]	; 0xffffffc8
   172c0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   172c4:	movw	r1, #25970	; 0x6572
   172c8:	movt	r1, #26214	; 0x6666
   172cc:	teq	r0, r1
   172d0:	bne	1751c <main@@Base+0x38a0>
   172d4:	b	172dc <main@@Base+0x3660>
   172d8:	andeq	sp, r2, ip, lsl #28
   172dc:	ldr	r0, [fp, #-16]
   172e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   172e4:	str	r1, [fp, #-48]	; 0xffffffd0
   172e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   172ec:	movw	r3, #4
   172f0:	bl	17ce4 <main@@Base+0x4068>
   172f4:	str	r0, [fp, #-20]	; 0xffffffec
   172f8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   172fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   17300:	cmp	r0, r1
   17304:	beq	17504 <main@@Base+0x3888>
   17308:	ldr	r0, [fp, #-20]	; 0xffffffec
   1730c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17310:	cmp	r0, r1
   17314:	beq	17458 <main@@Base+0x37dc>
   17318:	ldr	r0, [fp, #-20]	; 0xffffffec
   1731c:	ldrb	r0, [r0]
   17320:	cmp	r0, #91	; 0x5b
   17324:	bne	17458 <main@@Base+0x37dc>
   17328:	ldr	r0, [fp, #-16]
   1732c:	ldr	r0, [r0]
   17330:	movw	r1, #1
   17334:	movw	r2, #1
   17338:	uxth	r2, r2
   1733c:	mvn	r3, #0
   17340:	bl	25bf4 <flatcc_builder_start_vector@@Base>
   17344:	cmp	r0, #0
   17348:	beq	17350 <main@@Base+0x36d4>
   1734c:	b	17ad4 <main@@Base+0x3e58>
   17350:	ldr	r0, [fp, #-16]
   17354:	ldr	r1, [fp, #-20]	; 0xffffffec
   17358:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1735c:	sub	r3, fp, #32
   17360:	bl	19594 <main@@Base+0x5918>
   17364:	str	r0, [fp, #-20]	; 0xffffffec
   17368:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1736c:	cmp	r0, #0
   17370:	beq	17444 <main@@Base+0x37c8>
   17374:	movw	r0, #0
   17378:	strb	r0, [fp, #-137]	; 0xffffff77
   1737c:	ldr	r0, [fp, #-16]
   17380:	ldr	r0, [r0]
   17384:	movw	r1, #1
   17388:	bl	250f8 <flatcc_builder_extend_vector@@Base>
   1738c:	str	r0, [fp, #-36]	; 0xffffffdc
   17390:	movw	r1, #0
   17394:	cmp	r0, r1
   17398:	bne	173a0 <main@@Base+0x3724>
   1739c:	b	17ad4 <main@@Base+0x3e58>
   173a0:	ldr	r0, [fp, #-16]
   173a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   173a8:	str	r1, [fp, #-48]	; 0xffffffd0
   173ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   173b0:	sub	r3, fp, #137	; 0x89
   173b4:	bl	19678 <main@@Base+0x59fc>
   173b8:	str	r0, [fp, #-20]	; 0xffffffec
   173bc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   173c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   173c4:	cmp	r0, r1
   173c8:	bne	1741c <main@@Base+0x37a0>
   173cc:	ldr	r0, [pc, #1840]	; 17b04 <main@@Base+0x3e88>
   173d0:	add	r3, pc, r0
   173d4:	ldr	r0, [fp, #-16]
   173d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   173dc:	str	r1, [fp, #-48]	; 0xffffffd0
   173e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   173e4:	sub	ip, fp, #137	; 0x89
   173e8:	str	ip, [sp]
   173ec:	bl	19754 <main@@Base+0x5ad8>
   173f0:	str	r0, [fp, #-20]	; 0xffffffec
   173f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   173f8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   173fc:	cmp	r0, r1
   17400:	beq	17414 <main@@Base+0x3798>
   17404:	ldr	r0, [fp, #-20]	; 0xffffffec
   17408:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1740c:	cmp	r0, r1
   17410:	bne	17418 <main@@Base+0x379c>
   17414:	b	17ad4 <main@@Base+0x3e58>
   17418:	b	1741c <main@@Base+0x37a0>
   1741c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17420:	ldrb	r1, [fp, #-137]	; 0xffffff77
   17424:	bl	19980 <main@@Base+0x5d04>
   17428:	ldr	r0, [fp, #-16]
   1742c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17430:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17434:	sub	r3, fp, #32
   17438:	bl	199ac <main@@Base+0x5d30>
   1743c:	str	r0, [fp, #-20]	; 0xffffffec
   17440:	b	17368 <main@@Base+0x36ec>
   17444:	ldr	r0, [fp, #-16]
   17448:	ldr	r0, [r0]
   1744c:	bl	270e8 <flatcc_builder_end_vector@@Base>
   17450:	str	r0, [fp, #-40]	; 0xffffffd8
   17454:	b	174c4 <main@@Base+0x3848>
   17458:	ldr	r0, [fp, #-16]
   1745c:	ldr	r0, [r0]
   17460:	movw	r1, #0
   17464:	str	r1, [sp, #16]
   17468:	movw	r2, #0
   1746c:	uxth	r2, r2
   17470:	ldr	r3, [sp, #16]
   17474:	bl	24934 <flatcc_builder_start_buffer@@Base>
   17478:	cmp	r0, #0
   1747c:	beq	17484 <main@@Base+0x3808>
   17480:	b	17ad4 <main@@Base+0x3e58>
   17484:	ldr	r0, [fp, #-16]
   17488:	ldr	r1, [fp, #-20]	; 0xffffffec
   1748c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17490:	sub	r3, fp, #40	; 0x28
   17494:	bl	140b0 <main@@Base+0x434>
   17498:	str	r0, [fp, #-20]	; 0xffffffec
   1749c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   174a0:	cmp	r0, #0
   174a4:	bne	174b0 <main@@Base+0x3834>
   174a8:	b	17ad4 <main@@Base+0x3e58>
   174ac:	andeq	sp, r2, ip, asr ip
   174b0:	ldr	r0, [fp, #-16]
   174b4:	ldr	r0, [r0]
   174b8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   174bc:	bl	24c78 <flatcc_builder_end_buffer@@Base>
   174c0:	str	r0, [fp, #-40]	; 0xffffffd8
   174c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   174c8:	cmp	r0, #0
   174cc:	beq	174f0 <main@@Base+0x3874>
   174d0:	ldr	r0, [fp, #-16]
   174d4:	ldr	r0, [r0]
   174d8:	movw	r1, #13
   174dc:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   174e0:	str	r0, [fp, #-44]	; 0xffffffd4
   174e4:	movw	r1, #0
   174e8:	cmp	r0, r1
   174ec:	bne	174f4 <main@@Base+0x3878>
   174f0:	b	17ad4 <main@@Base+0x3e58>
   174f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   174f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   174fc:	str	r0, [r1]
   17500:	b	17518 <main@@Base+0x389c>
   17504:	ldr	r0, [fp, #-16]
   17508:	ldr	r1, [fp, #-20]	; 0xffffffec
   1750c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17510:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   17514:	str	r0, [fp, #-20]	; 0xffffffec
   17518:	b	17530 <main@@Base+0x38b4>
   1751c:	ldr	r0, [fp, #-16]
   17520:	ldr	r1, [fp, #-20]	; 0xffffffec
   17524:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17528:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1752c:	str	r0, [fp, #-20]	; 0xffffffec
   17530:	b	17548 <main@@Base+0x38cc>
   17534:	ldr	r0, [fp, #-16]
   17538:	ldr	r1, [fp, #-20]	; 0xffffffec
   1753c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17540:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   17544:	str	r0, [fp, #-20]	; 0xffffffec
   17548:	b	17560 <main@@Base+0x38e4>
   1754c:	ldr	r0, [fp, #-16]
   17550:	ldr	r1, [fp, #-20]	; 0xffffffec
   17554:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17558:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1755c:	str	r0, [fp, #-20]	; 0xffffffec
   17560:	b	17a10 <main@@Base+0x3d94>
   17564:	ldr	r0, [fp, #-56]	; 0xffffffc8
   17568:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1756c:	movw	r2, #25460	; 0x6374
   17570:	movt	r2, #30309	; 0x7665
   17574:	eor	r1, r1, r2
   17578:	movw	r2, #24431	; 0x5f6f
   1757c:	movt	r2, #28530	; 0x6f72
   17580:	eor	r0, r0, r2
   17584:	orr	r0, r0, r1
   17588:	cmp	r0, #0
   1758c:	bne	179f8 <main@@Base+0x3d7c>
   17590:	b	17594 <main@@Base+0x3918>
   17594:	ldr	r0, [fp, #-20]	; 0xffffffec
   17598:	add	r0, r0, #8
   1759c:	str	r0, [fp, #-20]	; 0xffffffec
   175a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   175a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   175a8:	bl	17cac <main@@Base+0x4030>
   175ac:	str	r1, [fp, #-52]	; 0xffffffcc
   175b0:	str	r0, [fp, #-56]	; 0xffffffc8
   175b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   175b8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   175bc:	movw	lr, #25711	; 0x646f
   175c0:	movt	lr, #26207	; 0x665f
   175c4:	eor	r1, r1, lr
   175c8:	movw	lr, #27749	; 0x6c65
   175cc:	movt	lr, #30050	; 0x7562
   175d0:	eor	r0, r0, lr
   175d4:	orr	r0, r0, r1
   175d8:	cmp	r0, #0
   175dc:	bne	177e8 <main@@Base+0x3b6c>
   175e0:	b	175e4 <main@@Base+0x3968>
   175e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   175e8:	add	r0, r0, #8
   175ec:	str	r0, [fp, #-20]	; 0xffffffec
   175f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   175f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   175f8:	bl	17cac <main@@Base+0x4030>
   175fc:	str	r1, [fp, #-52]	; 0xffffffcc
   17600:	str	r0, [fp, #-56]	; 0xffffffc8
   17604:	ldr	r0, [fp, #-52]	; 0xffffffcc
   17608:	and	r0, r0, #-16777216	; 0xff000000
   1760c:	teq	r0, #1929379840	; 0x73000000
   17610:	bne	177cc <main@@Base+0x3b50>
   17614:	b	17618 <main@@Base+0x399c>
   17618:	ldr	r0, [fp, #-16]
   1761c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17620:	str	r1, [fp, #-48]	; 0xffffffd0
   17624:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17628:	movw	r3, #1
   1762c:	bl	17ce4 <main@@Base+0x4068>
   17630:	str	r0, [fp, #-20]	; 0xffffffec
   17634:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17638:	ldr	r1, [fp, #-20]	; 0xffffffec
   1763c:	cmp	r0, r1
   17640:	beq	177b4 <main@@Base+0x3b38>
   17644:	ldr	r3, [pc, #1196]	; 17af8 <main@@Base+0x3e7c>
   17648:	ldr	r0, [fp, #-16]
   1764c:	ldr	r0, [r0]
   17650:	movw	r1, #8
   17654:	movw	r2, #8
   17658:	uxth	r2, r2
   1765c:	bl	25bf4 <flatcc_builder_start_vector@@Base>
   17660:	cmp	r0, #0
   17664:	beq	1766c <main@@Base+0x39f0>
   17668:	b	17ad4 <main@@Base+0x3e58>
   1766c:	ldr	r0, [fp, #-16]
   17670:	ldr	r1, [fp, #-20]	; 0xffffffec
   17674:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17678:	sub	r3, fp, #32
   1767c:	bl	19594 <main@@Base+0x5918>
   17680:	str	r0, [fp, #-20]	; 0xffffffec
   17684:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17688:	cmp	r0, #0
   1768c:	beq	17764 <main@@Base+0x3ae8>
   17690:	vldr	d16, [pc, #1008]	; 17a88 <main@@Base+0x3e0c>
   17694:	vstr	d16, [sp, #136]	; 0x88
   17698:	ldr	r0, [fp, #-16]
   1769c:	ldr	r0, [r0]
   176a0:	movw	r1, #1
   176a4:	bl	250f8 <flatcc_builder_extend_vector@@Base>
   176a8:	str	r0, [fp, #-36]	; 0xffffffdc
   176ac:	movw	r1, #0
   176b0:	cmp	r0, r1
   176b4:	bne	176c0 <main@@Base+0x3a44>
   176b8:	b	17ad4 <main@@Base+0x3e58>
   176bc:	andeq	sp, r2, r4, ror #20
   176c0:	ldr	r0, [fp, #-16]
   176c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   176c8:	str	r1, [fp, #-48]	; 0xffffffd0
   176cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   176d0:	add	r3, sp, #136	; 0x88
   176d4:	bl	2c8b8 <flatcc_json_parser_double@@Base>
   176d8:	str	r0, [fp, #-20]	; 0xffffffec
   176dc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   176e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   176e4:	cmp	r0, r1
   176e8:	bne	1773c <main@@Base+0x3ac0>
   176ec:	ldr	r0, [pc, #1036]	; 17b00 <main@@Base+0x3e84>
   176f0:	add	r3, pc, r0
   176f4:	ldr	r0, [fp, #-16]
   176f8:	ldr	r1, [fp, #-20]	; 0xffffffec
   176fc:	str	r1, [fp, #-48]	; 0xffffffd0
   17700:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17704:	add	ip, sp, #136	; 0x88
   17708:	str	ip, [sp]
   1770c:	bl	1cdc8 <main@@Base+0x914c>
   17710:	str	r0, [fp, #-20]	; 0xffffffec
   17714:	ldr	r0, [fp, #-20]	; 0xffffffec
   17718:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1771c:	cmp	r0, r1
   17720:	beq	17734 <main@@Base+0x3ab8>
   17724:	ldr	r0, [fp, #-20]	; 0xffffffec
   17728:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1772c:	cmp	r0, r1
   17730:	bne	17738 <main@@Base+0x3abc>
   17734:	b	17ad4 <main@@Base+0x3e58>
   17738:	b	1773c <main@@Base+0x3ac0>
   1773c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17740:	vldr	d0, [sp, #136]	; 0x88
   17744:	bl	1d000 <main@@Base+0x9384>
   17748:	ldr	r0, [fp, #-16]
   1774c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17750:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17754:	sub	r3, fp, #32
   17758:	bl	199ac <main@@Base+0x5d30>
   1775c:	str	r0, [fp, #-20]	; 0xffffffec
   17760:	b	17684 <main@@Base+0x3a08>
   17764:	ldr	r0, [fp, #-16]
   17768:	ldr	r0, [r0]
   1776c:	bl	270e8 <flatcc_builder_end_vector@@Base>
   17770:	str	r0, [fp, #-40]	; 0xffffffd8
   17774:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17778:	cmp	r0, #0
   1777c:	beq	177a0 <main@@Base+0x3b24>
   17780:	ldr	r0, [fp, #-16]
   17784:	ldr	r0, [r0]
   17788:	movw	r1, #33	; 0x21
   1778c:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   17790:	str	r0, [fp, #-44]	; 0xffffffd4
   17794:	movw	r1, #0
   17798:	cmp	r0, r1
   1779c:	bne	177a4 <main@@Base+0x3b28>
   177a0:	b	17ad4 <main@@Base+0x3e58>
   177a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   177a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   177ac:	str	r0, [r1]
   177b0:	b	177c8 <main@@Base+0x3b4c>
   177b4:	ldr	r0, [fp, #-16]
   177b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   177bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   177c0:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   177c4:	str	r0, [fp, #-20]	; 0xffffffec
   177c8:	b	177e0 <main@@Base+0x3b64>
   177cc:	ldr	r0, [fp, #-16]
   177d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   177d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   177d8:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   177dc:	str	r0, [fp, #-20]	; 0xffffffec
   177e0:	b	179f4 <main@@Base+0x3d78>
   177e4:	andeq	sp, r2, r0, lsr #18
   177e8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   177ec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   177f0:	movw	r2, #24428	; 0x5f6c
   177f4:	movt	r2, #102	; 0x66
   177f8:	eor	r2, r2, r1, lsr #8
   177fc:	lsr	r0, r0, #8
   17800:	orr	r0, r0, r1, lsl #24
   17804:	movw	r1, #26483	; 0x6773
   17808:	movt	r1, #28526	; 0x6f6e
   1780c:	eor	r0, r0, r1
   17810:	orr	r0, r0, r2
   17814:	cmp	r0, #0
   17818:	bne	179dc <main@@Base+0x3d60>
   1781c:	b	17820 <main@@Base+0x3ba4>
   17820:	ldr	r0, [fp, #-16]
   17824:	ldr	r1, [fp, #-20]	; 0xffffffec
   17828:	str	r1, [fp, #-48]	; 0xffffffd0
   1782c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17830:	movw	r3, #7
   17834:	bl	17ce4 <main@@Base+0x4068>
   17838:	str	r0, [fp, #-20]	; 0xffffffec
   1783c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17840:	ldr	r1, [fp, #-20]	; 0xffffffec
   17844:	cmp	r0, r1
   17848:	beq	179c4 <main@@Base+0x3d48>
   1784c:	ldr	r3, [pc, #676]	; 17af8 <main@@Base+0x3e7c>
   17850:	ldr	r0, [fp, #-16]
   17854:	ldr	r0, [r0]
   17858:	movw	r1, #8
   1785c:	movw	r2, #8
   17860:	uxth	r2, r2
   17864:	bl	25bf4 <flatcc_builder_start_vector@@Base>
   17868:	cmp	r0, #0
   1786c:	beq	17874 <main@@Base+0x3bf8>
   17870:	b	17ad4 <main@@Base+0x3e58>
   17874:	ldr	r0, [fp, #-16]
   17878:	ldr	r1, [fp, #-20]	; 0xffffffec
   1787c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17880:	sub	r3, fp, #32
   17884:	bl	19594 <main@@Base+0x5918>
   17888:	str	r0, [fp, #-20]	; 0xffffffec
   1788c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17890:	cmp	r0, #0
   17894:	beq	17970 <main@@Base+0x3cf4>
   17898:	mov	r0, #0
   1789c:	str	r0, [sp, #132]	; 0x84
   178a0:	str	r0, [sp, #128]	; 0x80
   178a4:	ldr	r0, [fp, #-16]
   178a8:	ldr	r0, [r0]
   178ac:	movw	r1, #1
   178b0:	bl	250f8 <flatcc_builder_extend_vector@@Base>
   178b4:	str	r0, [fp, #-36]	; 0xffffffdc
   178b8:	movw	r1, #0
   178bc:	cmp	r0, r1
   178c0:	bne	178c8 <main@@Base+0x3c4c>
   178c4:	b	17ad4 <main@@Base+0x3e58>
   178c8:	ldr	r0, [fp, #-16]
   178cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   178d0:	str	r1, [fp, #-48]	; 0xffffffd0
   178d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   178d8:	add	r3, sp, #128	; 0x80
   178dc:	bl	1c3fc <main@@Base+0x8780>
   178e0:	str	r0, [fp, #-20]	; 0xffffffec
   178e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   178e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   178ec:	cmp	r0, r1
   178f0:	bne	17944 <main@@Base+0x3cc8>
   178f4:	ldr	r0, [pc, #512]	; 17afc <main@@Base+0x3e80>
   178f8:	add	r3, pc, r0
   178fc:	ldr	r0, [fp, #-16]
   17900:	ldr	r1, [fp, #-20]	; 0xffffffec
   17904:	str	r1, [fp, #-48]	; 0xffffffd0
   17908:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1790c:	add	ip, sp, #128	; 0x80
   17910:	str	ip, [sp]
   17914:	bl	1c4d4 <main@@Base+0x8858>
   17918:	str	r0, [fp, #-20]	; 0xffffffec
   1791c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17920:	ldr	r1, [fp, #-48]	; 0xffffffd0
   17924:	cmp	r0, r1
   17928:	beq	1793c <main@@Base+0x3cc0>
   1792c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17930:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17934:	cmp	r0, r1
   17938:	bne	17940 <main@@Base+0x3cc4>
   1793c:	b	17ad4 <main@@Base+0x3e58>
   17940:	b	17944 <main@@Base+0x3cc8>
   17944:	ldr	r0, [fp, #-36]	; 0xffffffdc
   17948:	ldr	r2, [sp, #128]	; 0x80
   1794c:	ldr	r3, [sp, #132]	; 0x84
   17950:	bl	1c714 <main@@Base+0x8a98>
   17954:	ldr	r0, [fp, #-16]
   17958:	ldr	r1, [fp, #-20]	; 0xffffffec
   1795c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17960:	sub	r3, fp, #32
   17964:	bl	199ac <main@@Base+0x5d30>
   17968:	str	r0, [fp, #-20]	; 0xffffffec
   1796c:	b	1788c <main@@Base+0x3c10>
   17970:	ldr	r0, [fp, #-16]
   17974:	ldr	r0, [r0]
   17978:	bl	270e8 <flatcc_builder_end_vector@@Base>
   1797c:	str	r0, [fp, #-40]	; 0xffffffd8
   17980:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17984:	cmp	r0, #0
   17988:	beq	179ac <main@@Base+0x3d30>
   1798c:	ldr	r0, [fp, #-16]
   17990:	ldr	r0, [r0]
   17994:	movw	r1, #32
   17998:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   1799c:	str	r0, [fp, #-44]	; 0xffffffd4
   179a0:	movw	r1, #0
   179a4:	cmp	r0, r1
   179a8:	bne	179b0 <main@@Base+0x3d34>
   179ac:	b	17ad4 <main@@Base+0x3e58>
   179b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   179b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   179b8:	str	r0, [r1]
   179bc:	b	179d8 <main@@Base+0x3d5c>
   179c0:	andeq	sp, r2, ip, ror #14
   179c4:	ldr	r0, [fp, #-16]
   179c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   179cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   179d0:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   179d4:	str	r0, [fp, #-20]	; 0xffffffec
   179d8:	b	179f0 <main@@Base+0x3d74>
   179dc:	ldr	r0, [fp, #-16]
   179e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   179e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   179e8:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   179ec:	str	r0, [fp, #-20]	; 0xffffffec
   179f0:	b	179f4 <main@@Base+0x3d78>
   179f4:	b	17a0c <main@@Base+0x3d90>
   179f8:	ldr	r0, [fp, #-16]
   179fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   17a00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17a04:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   17a08:	str	r0, [fp, #-20]	; 0xffffffec
   17a0c:	b	17a10 <main@@Base+0x3d94>
   17a10:	b	17a14 <main@@Base+0x3d98>
   17a14:	b	17a18 <main@@Base+0x3d9c>
   17a18:	b	17a1c <main@@Base+0x3da0>
   17a1c:	b	17a20 <main@@Base+0x3da4>
   17a20:	ldr	r0, [fp, #-16]
   17a24:	ldr	r1, [fp, #-20]	; 0xffffffec
   17a28:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17a2c:	sub	r3, fp, #32
   17a30:	bl	1d02c <main@@Base+0x93b0>
   17a34:	str	r0, [fp, #-20]	; 0xffffffec
   17a38:	b	1414c <main@@Base+0x4d0>
   17a3c:	ldr	r0, [fp, #-16]
   17a40:	ldr	r0, [r0, #24]
   17a44:	cmp	r0, #0
   17a48:	beq	17a50 <main@@Base+0x3dd4>
   17a4c:	b	17ad4 <main@@Base+0x3e58>
   17a50:	ldr	r0, [fp, #-16]
   17a54:	ldr	r0, [r0]
   17a58:	movw	r1, #3
   17a5c:	uxth	r1, r1
   17a60:	bl	269ec <flatcc_builder_check_required_field@@Base>
   17a64:	cmp	r0, #0
   17a68:	bne	17a90 <main@@Base+0x3e14>
   17a6c:	ldr	r0, [fp, #-16]
   17a70:	ldr	r1, [fp, #-20]	; 0xffffffec
   17a74:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17a78:	movw	r3, #29
   17a7c:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   17a80:	str	r0, [fp, #-20]	; 0xffffffec
   17a84:	b	17ad4 <main@@Base+0x3e58>
	...
   17a90:	ldr	r0, [fp, #-16]
   17a94:	ldr	r1, [fp, #-20]	; 0xffffffec
   17a98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17a9c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17aa0:	bl	2e25c <flatcc_json_parser_finalize_unions@@Base>
   17aa4:	str	r0, [fp, #-20]	; 0xffffffec
   17aa8:	ldr	r0, [fp, #-16]
   17aac:	ldr	r0, [r0]
   17ab0:	bl	26ce0 <flatcc_builder_end_table@@Base>
   17ab4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17ab8:	str	r0, [r1]
   17abc:	cmp	r0, #0
   17ac0:	bne	17ac8 <main@@Base+0x3e4c>
   17ac4:	b	17ad4 <main@@Base+0x3e58>
   17ac8:	ldr	r0, [fp, #-20]	; 0xffffffec
   17acc:	str	r0, [fp, #-12]
   17ad0:	b	17aec <main@@Base+0x3e70>
   17ad4:	ldr	r0, [fp, #-16]
   17ad8:	ldr	r1, [fp, #-20]	; 0xffffffec
   17adc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17ae0:	movw	r3, #33	; 0x21
   17ae4:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   17ae8:	str	r0, [fp, #-12]
   17aec:	ldr	r0, [fp, #-12]
   17af0:	sub	sp, fp, #8
   17af4:	pop	{r4, r5, fp, pc}
   17af8:	svcne	0x00ffffff
   17afc:	andeq	ip, r2, r0, lsr #17
   17b00:	muleq	r2, ip, sl
   17b04:			; <UNDEFINED> instruction: 0x0002cdb0
   17b08:	muleq	r2, ip, r0
   17b0c:	andeq	sp, r2, r8, ror #3
   17b10:	andeq	sp, r2, r8, asr r3
   17b14:	muleq	r2, r0, r4
   17b18:	andeq	sp, r2, r0, lsr #12
   17b1c:	push	{fp, lr}
   17b20:	mov	fp, sp
   17b24:	sub	sp, sp, #24
   17b28:	str	r0, [fp, #-8]
   17b2c:	str	r1, [sp, #12]
   17b30:	str	r2, [sp, #8]
   17b34:	str	r3, [sp, #4]
   17b38:	ldr	r0, [sp, #12]
   17b3c:	ldr	r1, [sp, #8]
   17b40:	cmp	r0, r1
   17b44:	beq	17b58 <main@@Base+0x3edc>
   17b48:	ldr	r0, [sp, #12]
   17b4c:	ldrb	r0, [r0]
   17b50:	cmp	r0, #123	; 0x7b
   17b54:	beq	17b80 <main@@Base+0x3f04>
   17b58:	ldr	r0, [sp, #4]
   17b5c:	movw	r1, #0
   17b60:	str	r1, [r0]
   17b64:	ldr	r0, [fp, #-8]
   17b68:	ldr	r1, [sp, #12]
   17b6c:	ldr	r2, [sp, #8]
   17b70:	movw	r3, #21
   17b74:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   17b78:	str	r0, [fp, #-4]
   17b7c:	b	17bf4 <main@@Base+0x3f78>
   17b80:	ldr	r0, [fp, #-8]
   17b84:	ldr	r1, [sp, #12]
   17b88:	add	r1, r1, #1
   17b8c:	ldr	r2, [sp, #8]
   17b90:	bl	1d190 <main@@Base+0x9514>
   17b94:	str	r0, [sp, #12]
   17b98:	ldr	r0, [sp, #12]
   17b9c:	ldr	r1, [sp, #8]
   17ba0:	cmp	r0, r1
   17ba4:	beq	17be0 <main@@Base+0x3f64>
   17ba8:	ldr	r0, [sp, #12]
   17bac:	ldrb	r0, [r0]
   17bb0:	cmp	r0, #125	; 0x7d
   17bb4:	bne	17be0 <main@@Base+0x3f64>
   17bb8:	ldr	r0, [sp, #4]
   17bbc:	movw	r1, #0
   17bc0:	str	r1, [r0]
   17bc4:	ldr	r0, [fp, #-8]
   17bc8:	ldr	r1, [sp, #12]
   17bcc:	add	r1, r1, #1
   17bd0:	ldr	r2, [sp, #8]
   17bd4:	bl	1d190 <main@@Base+0x9514>
   17bd8:	str	r0, [fp, #-4]
   17bdc:	b	17bf4 <main@@Base+0x3f78>
   17be0:	ldr	r0, [sp, #4]
   17be4:	movw	r1, #1
   17be8:	str	r1, [r0]
   17bec:	ldr	r0, [sp, #12]
   17bf0:	str	r0, [fp, #-4]
   17bf4:	ldr	r0, [fp, #-4]
   17bf8:	mov	sp, fp
   17bfc:	pop	{fp, pc}
   17c00:	push	{fp, lr}
   17c04:	mov	fp, sp
   17c08:	sub	sp, sp, #16
   17c0c:	str	r0, [sp, #8]
   17c10:	str	r1, [sp, #4]
   17c14:	str	r2, [sp]
   17c18:	ldr	r0, [sp, #4]
   17c1c:	ldr	r1, [sp]
   17c20:	cmp	r0, r1
   17c24:	bne	17c34 <main@@Base+0x3fb8>
   17c28:	ldr	r0, [sp, #4]
   17c2c:	str	r0, [fp, #-4]
   17c30:	b	17ca0 <main@@Base+0x4024>
   17c34:	ldr	r0, [sp, #4]
   17c38:	ldrb	r0, [r0]
   17c3c:	cmp	r0, #34	; 0x22
   17c40:	bne	17c60 <main@@Base+0x3fe4>
   17c44:	ldr	r0, [sp, #4]
   17c48:	add	r0, r0, #1
   17c4c:	str	r0, [sp, #4]
   17c50:	ldr	r0, [sp, #8]
   17c54:	movw	r1, #0
   17c58:	str	r1, [r0, #12]
   17c5c:	b	17c98 <main@@Base+0x401c>
   17c60:	ldr	r0, [sp, #4]
   17c64:	ldrb	r0, [r0]
   17c68:	cmp	r0, #46	; 0x2e
   17c6c:	bne	17c8c <main@@Base+0x4010>
   17c70:	ldr	r0, [sp, #8]
   17c74:	ldr	r1, [sp, #4]
   17c78:	ldr	r2, [sp]
   17c7c:	movw	r3, #5
   17c80:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   17c84:	str	r0, [fp, #-4]
   17c88:	b	17ca0 <main@@Base+0x4024>
   17c8c:	ldr	r0, [sp, #8]
   17c90:	movw	r1, #1
   17c94:	str	r1, [r0, #12]
   17c98:	ldr	r0, [sp, #4]
   17c9c:	str	r0, [fp, #-4]
   17ca0:	ldr	r0, [fp, #-4]
   17ca4:	mov	sp, fp
   17ca8:	pop	{fp, pc}
   17cac:	push	{fp, lr}
   17cb0:	mov	fp, sp
   17cb4:	sub	sp, sp, #16
   17cb8:	str	r0, [fp, #-4]
   17cbc:	str	r1, [sp, #8]
   17cc0:	ldr	r0, [sp, #8]
   17cc4:	ldr	r1, [fp, #-4]
   17cc8:	sub	r0, r0, r1
   17ccc:	str	r0, [sp, #4]
   17cd0:	ldr	r0, [fp, #-4]
   17cd4:	ldr	r1, [sp, #8]
   17cd8:	bl	1d22c <main@@Base+0x95b0>
   17cdc:	mov	sp, fp
   17ce0:	pop	{fp, pc}
   17ce4:	push	{fp, lr}
   17ce8:	mov	fp, sp
   17cec:	sub	sp, sp, #24
   17cf0:	str	r0, [fp, #-8]
   17cf4:	str	r1, [sp, #12]
   17cf8:	str	r2, [sp, #8]
   17cfc:	str	r3, [sp, #4]
   17d00:	ldr	r0, [sp, #12]
   17d04:	str	r0, [sp]
   17d08:	ldr	r0, [sp, #8]
   17d0c:	ldr	r1, [sp, #12]
   17d10:	sub	r0, r0, r1
   17d14:	ldr	r1, [sp, #4]
   17d18:	cmp	r0, r1
   17d1c:	bgt	17d2c <main@@Base+0x40b0>
   17d20:	ldr	r0, [sp]
   17d24:	str	r0, [fp, #-4]
   17d28:	b	17e40 <main@@Base+0x41c4>
   17d2c:	ldr	r0, [fp, #-8]
   17d30:	ldr	r0, [r0, #12]
   17d34:	cmp	r0, #0
   17d38:	beq	17d98 <main@@Base+0x411c>
   17d3c:	ldr	r0, [sp, #12]
   17d40:	ldr	r1, [sp, #4]
   17d44:	add	r0, r0, r1
   17d48:	ldrb	r0, [r0]
   17d4c:	cmp	r0, #32
   17d50:	ble	17d78 <main@@Base+0x40fc>
   17d54:	ldr	r0, [sp, #12]
   17d58:	ldr	r1, [sp, #4]
   17d5c:	add	r0, r0, r1
   17d60:	ldrb	r0, [r0]
   17d64:	cmp	r0, #58	; 0x3a
   17d68:	beq	17d78 <main@@Base+0x40fc>
   17d6c:	ldr	r0, [sp]
   17d70:	str	r0, [fp, #-4]
   17d74:	b	17e40 <main@@Base+0x41c4>
   17d78:	ldr	r0, [sp, #4]
   17d7c:	ldr	r1, [sp, #12]
   17d80:	add	r0, r1, r0
   17d84:	str	r0, [sp, #12]
   17d88:	ldr	r0, [fp, #-8]
   17d8c:	movw	r1, #0
   17d90:	str	r1, [r0, #12]
   17d94:	b	17dd0 <main@@Base+0x4154>
   17d98:	ldr	r0, [sp, #12]
   17d9c:	ldr	r1, [sp, #4]
   17da0:	add	r0, r0, r1
   17da4:	ldrb	r0, [r0]
   17da8:	cmp	r0, #34	; 0x22
   17dac:	beq	17dbc <main@@Base+0x4140>
   17db0:	ldr	r0, [sp]
   17db4:	str	r0, [fp, #-4]
   17db8:	b	17e40 <main@@Base+0x41c4>
   17dbc:	ldr	r0, [sp, #4]
   17dc0:	add	r0, r0, #1
   17dc4:	ldr	r1, [sp, #12]
   17dc8:	add	r0, r1, r0
   17dcc:	str	r0, [sp, #12]
   17dd0:	ldr	r0, [fp, #-8]
   17dd4:	ldr	r1, [sp, #12]
   17dd8:	ldr	r2, [sp, #8]
   17ddc:	bl	1d190 <main@@Base+0x9514>
   17de0:	str	r0, [sp, #12]
   17de4:	ldr	r0, [sp, #12]
   17de8:	ldr	r1, [sp, #8]
   17dec:	cmp	r0, r1
   17df0:	beq	17e28 <main@@Base+0x41ac>
   17df4:	ldr	r0, [sp, #12]
   17df8:	ldrb	r0, [r0]
   17dfc:	cmp	r0, #58	; 0x3a
   17e00:	bne	17e28 <main@@Base+0x41ac>
   17e04:	ldr	r0, [sp, #12]
   17e08:	add	r0, r0, #1
   17e0c:	str	r0, [sp, #12]
   17e10:	ldr	r0, [fp, #-8]
   17e14:	ldr	r1, [sp, #12]
   17e18:	ldr	r2, [sp, #8]
   17e1c:	bl	1d190 <main@@Base+0x9514>
   17e20:	str	r0, [fp, #-4]
   17e24:	b	17e40 <main@@Base+0x41c4>
   17e28:	ldr	r0, [fp, #-8]
   17e2c:	ldr	r1, [sp, #12]
   17e30:	ldr	r2, [sp, #8]
   17e34:	movw	r3, #4
   17e38:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   17e3c:	str	r0, [fp, #-4]
   17e40:	ldr	r0, [fp, #-4]
   17e44:	mov	sp, fp
   17e48:	pop	{fp, pc}
   17e4c:	push	{fp, lr}
   17e50:	mov	fp, sp
   17e54:	sub	sp, sp, #72	; 0x48
   17e58:	ldr	ip, [fp, #12]
   17e5c:	ldr	lr, [fp, #8]
   17e60:	str	r0, [fp, #-8]
   17e64:	str	r1, [fp, #-12]
   17e68:	str	r2, [fp, #-16]
   17e6c:	str	r3, [fp, #-20]	; 0xffffffec
   17e70:	ldr	r0, [fp, #-12]
   17e74:	str	r0, [fp, #-24]	; 0xffffffe8
   17e78:	ldr	r0, [fp, #-12]
   17e7c:	ldr	r1, [fp, #-16]
   17e80:	str	lr, [sp, #28]
   17e84:	str	ip, [sp, #24]
   17e88:	bl	17cac <main@@Base+0x4030>
   17e8c:	str	r1, [sp, #36]	; 0x24
   17e90:	str	r0, [sp, #32]
   17e94:	ldr	r0, [sp, #32]
   17e98:	ldr	r1, [sp, #36]	; 0x24
   17e9c:	mvn	r2, #-1845493760	; 0x92000000
   17ea0:	subs	r0, r2, r0
   17ea4:	movw	r2, #25957	; 0x6565
   17ea8:	movt	r2, #18290	; 0x4772
   17eac:	sbcs	r1, r2, r1
   17eb0:	str	r0, [sp, #20]
   17eb4:	str	r1, [sp, #16]
   17eb8:	bcc	17f5c <main@@Base+0x42e0>
   17ebc:	b	17ec0 <main@@Base+0x4244>
   17ec0:	ldr	r0, [sp, #36]	; 0x24
   17ec4:	movw	r1, #30053	; 0x7565
   17ec8:	movt	r1, #17004	; 0x426c
   17ecc:	teq	r0, r1
   17ed0:	bne	17f4c <main@@Base+0x42d0>
   17ed4:	b	17ed8 <main@@Base+0x425c>
   17ed8:	ldr	r0, [fp, #-8]
   17edc:	ldr	r1, [fp, #-12]
   17ee0:	str	r1, [fp, #-28]	; 0xffffffe4
   17ee4:	ldr	r2, [fp, #-16]
   17ee8:	ldr	r3, [fp, #12]
   17eec:	movw	ip, #4
   17ef0:	str	r3, [sp, #12]
   17ef4:	mov	r3, ip
   17ef8:	ldr	ip, [sp, #12]
   17efc:	str	ip, [sp]
   17f00:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   17f04:	str	r0, [fp, #-12]
   17f08:	ldr	r0, [fp, #-12]
   17f0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17f10:	cmp	r0, r1
   17f14:	beq	17f3c <main@@Base+0x42c0>
   17f18:	ldr	r0, [fp, #8]
   17f1c:	mov	r1, #0
   17f20:	str	r1, [r0, #4]
   17f24:	mov	r1, #8
   17f28:	str	r1, [r0]
   17f2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17f30:	movw	r1, #0
   17f34:	str	r1, [r0]
   17f38:	b	17f48 <main@@Base+0x42cc>
   17f3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f40:	str	r0, [fp, #-4]
   17f44:	b	180a8 <main@@Base+0x442c>
   17f48:	b	17f58 <main@@Base+0x42dc>
   17f4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f50:	str	r0, [fp, #-4]
   17f54:	b	180a8 <main@@Base+0x442c>
   17f58:	b	180a0 <main@@Base+0x4424>
   17f5c:	ldr	r0, [sp, #36]	; 0x24
   17f60:	bic	r0, r0, #255	; 0xff
   17f64:	movw	r1, #25600	; 0x6400
   17f68:	movt	r1, #21093	; 0x5265
   17f6c:	teq	r0, r1
   17f70:	bne	17fec <main@@Base+0x4370>
   17f74:	b	17f78 <main@@Base+0x42fc>
   17f78:	ldr	r0, [fp, #-8]
   17f7c:	ldr	r1, [fp, #-12]
   17f80:	str	r1, [fp, #-28]	; 0xffffffe4
   17f84:	ldr	r2, [fp, #-16]
   17f88:	ldr	r3, [fp, #12]
   17f8c:	movw	ip, #3
   17f90:	str	r3, [sp, #8]
   17f94:	mov	r3, ip
   17f98:	ldr	ip, [sp, #8]
   17f9c:	str	ip, [sp]
   17fa0:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   17fa4:	str	r0, [fp, #-12]
   17fa8:	ldr	r0, [fp, #-12]
   17fac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17fb0:	cmp	r0, r1
   17fb4:	beq	17fdc <main@@Base+0x4360>
   17fb8:	ldr	r0, [fp, #8]
   17fbc:	mov	r1, #0
   17fc0:	str	r1, [r0, #4]
   17fc4:	mov	r1, #1
   17fc8:	str	r1, [r0]
   17fcc:	ldr	r0, [fp, #-20]	; 0xffffffec
   17fd0:	movw	r1, #0
   17fd4:	str	r1, [r0]
   17fd8:	b	17fe8 <main@@Base+0x436c>
   17fdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fe0:	str	r0, [fp, #-4]
   17fe4:	b	180a8 <main@@Base+0x442c>
   17fe8:	b	1809c <main@@Base+0x4420>
   17fec:	ldr	r0, [sp, #32]
   17ff0:	ldr	r1, [sp, #36]	; 0x24
   17ff4:	and	r0, r0, #-16777216	; 0xff000000
   17ff8:	movw	r2, #25957	; 0x6565
   17ffc:	movt	r2, #18290	; 0x4772
   18000:	eor	r1, r1, r2
   18004:	eor	r0, r0, #1845493760	; 0x6e000000
   18008:	orr	r0, r0, r1
   1800c:	cmp	r0, #0
   18010:	bne	1808c <main@@Base+0x4410>
   18014:	b	18018 <main@@Base+0x439c>
   18018:	ldr	r0, [fp, #-8]
   1801c:	ldr	r1, [fp, #-12]
   18020:	str	r1, [fp, #-28]	; 0xffffffe4
   18024:	ldr	r2, [fp, #-16]
   18028:	ldr	r3, [fp, #12]
   1802c:	movw	ip, #5
   18030:	str	r3, [sp, #4]
   18034:	mov	r3, ip
   18038:	ldr	ip, [sp, #4]
   1803c:	str	ip, [sp]
   18040:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   18044:	str	r0, [fp, #-12]
   18048:	ldr	r0, [fp, #-12]
   1804c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18050:	cmp	r0, r1
   18054:	beq	1807c <main@@Base+0x4400>
   18058:	ldr	r0, [fp, #8]
   1805c:	mov	r1, #0
   18060:	str	r1, [r0, #4]
   18064:	mov	r1, #2
   18068:	str	r1, [r0]
   1806c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18070:	movw	r1, #0
   18074:	str	r1, [r0]
   18078:	b	18088 <main@@Base+0x440c>
   1807c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18080:	str	r0, [fp, #-4]
   18084:	b	180a8 <main@@Base+0x442c>
   18088:	b	18098 <main@@Base+0x441c>
   1808c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18090:	str	r0, [fp, #-4]
   18094:	b	180a8 <main@@Base+0x442c>
   18098:	b	1809c <main@@Base+0x4420>
   1809c:	b	180a0 <main@@Base+0x4424>
   180a0:	ldr	r0, [fp, #-12]
   180a4:	str	r0, [fp, #-4]
   180a8:	ldr	r0, [fp, #-4]
   180ac:	mov	sp, fp
   180b0:	pop	{fp, pc}
   180b4:	push	{fp, lr}
   180b8:	mov	fp, sp
   180bc:	sub	sp, sp, #88	; 0x58
   180c0:	ldr	ip, [fp, #12]
   180c4:	ldr	lr, [fp, #8]
   180c8:	str	r0, [fp, #-8]
   180cc:	str	r1, [fp, #-12]
   180d0:	str	r2, [fp, #-16]
   180d4:	str	r3, [fp, #-20]	; 0xffffffec
   180d8:	ldr	r0, [fp, #-12]
   180dc:	str	r0, [fp, #-24]	; 0xffffffe8
   180e0:	ldr	r0, [fp, #-12]
   180e4:	ldr	r1, [fp, #-16]
   180e8:	str	lr, [sp, #44]	; 0x2c
   180ec:	str	ip, [sp, #40]	; 0x28
   180f0:	bl	17cac <main@@Base+0x4030>
   180f4:	str	r1, [fp, #-36]	; 0xffffffdc
   180f8:	str	r0, [fp, #-40]	; 0xffffffd8
   180fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18100:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18104:	movw	r2, #30060	; 0x756c
   18108:	movt	r2, #25966	; 0x656e
   1810c:	subs	r0, r2, r0
   18110:	movw	r2, #30815	; 0x785f
   18114:	movt	r2, #26725	; 0x6865
   18118:	sbcs	r1, r2, r1
   1811c:	str	r0, [sp, #36]	; 0x24
   18120:	str	r1, [sp, #32]
   18124:	bcc	1831c <main@@Base+0x46a0>
   18128:	b	1812c <main@@Base+0x44b0>
   1812c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18130:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18134:	mvn	r2, #-1912602624	; 0x8e000000
   18138:	subs	r0, r2, r0
   1813c:	movw	r2, #27759	; 0x6c6f
   18140:	movt	r2, #17263	; 0x436f
   18144:	sbcs	r1, r2, r1
   18148:	str	r0, [sp, #28]
   1814c:	str	r1, [sp, #24]
   18150:	bcc	181ec <main@@Base+0x4570>
   18154:	b	18158 <main@@Base+0x44dc>
   18158:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1815c:	bic	r0, r0, #255	; 0xff
   18160:	movw	r1, #30976	; 0x7900
   18164:	movt	r1, #16750	; 0x416e
   18168:	teq	r0, r1
   1816c:	bne	181dc <main@@Base+0x4560>
   18170:	b	18174 <main@@Base+0x44f8>
   18174:	ldr	r0, [fp, #-8]
   18178:	ldr	r1, [fp, #-12]
   1817c:	str	r1, [fp, #-28]	; 0xffffffe4
   18180:	ldr	r2, [fp, #-16]
   18184:	movw	r3, #3
   18188:	bl	1d3a0 <main@@Base+0x9724>
   1818c:	str	r0, [fp, #-12]
   18190:	ldr	r0, [fp, #-12]
   18194:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18198:	cmp	r0, r1
   1819c:	beq	181cc <main@@Base+0x4550>
   181a0:	ldr	r0, [fp, #-8]
   181a4:	ldr	r1, [fp, #-12]
   181a8:	ldr	r2, [fp, #-16]
   181ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   181b0:	ldr	ip, [fp, #8]
   181b4:	ldr	lr, [fp, #12]
   181b8:	str	ip, [sp]
   181bc:	str	lr, [sp, #4]
   181c0:	bl	1aadc <main@@Base+0x6e60>
   181c4:	str	r0, [fp, #-12]
   181c8:	b	181d8 <main@@Base+0x455c>
   181cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181d0:	str	r0, [fp, #-4]
   181d4:	b	18668 <main@@Base+0x49ec>
   181d8:	b	181e8 <main@@Base+0x456c>
   181dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181e0:	str	r0, [fp, #-4]
   181e4:	b	18668 <main@@Base+0x49ec>
   181e8:	b	18318 <main@@Base+0x469c>
   181ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   181f0:	bic	r0, r0, #255	; 0xff
   181f4:	movw	r1, #28416	; 0x6f00
   181f8:	movt	r1, #18031	; 0x466f
   181fc:	teq	r0, r1
   18200:	bne	18270 <main@@Base+0x45f4>
   18204:	b	18208 <main@@Base+0x458c>
   18208:	ldr	r0, [fp, #-8]
   1820c:	ldr	r1, [fp, #-12]
   18210:	str	r1, [fp, #-28]	; 0xffffffe4
   18214:	ldr	r2, [fp, #-16]
   18218:	movw	r3, #3
   1821c:	bl	1d3a0 <main@@Base+0x9724>
   18220:	str	r0, [fp, #-12]
   18224:	ldr	r0, [fp, #-12]
   18228:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1822c:	cmp	r0, r1
   18230:	beq	18260 <main@@Base+0x45e4>
   18234:	ldr	r0, [fp, #-8]
   18238:	ldr	r1, [fp, #-12]
   1823c:	ldr	r2, [fp, #-16]
   18240:	ldr	r3, [fp, #-20]	; 0xffffffec
   18244:	ldr	ip, [fp, #8]
   18248:	ldr	lr, [fp, #12]
   1824c:	str	ip, [sp]
   18250:	str	lr, [sp, #4]
   18254:	bl	1d424 <main@@Base+0x97a8>
   18258:	str	r0, [fp, #-12]
   1825c:	b	1826c <main@@Base+0x45f0>
   18260:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18264:	str	r0, [fp, #-4]
   18268:	b	18668 <main@@Base+0x49ec>
   1826c:	b	18314 <main@@Base+0x4698>
   18270:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18274:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18278:	and	r0, r0, #-16777216	; 0xff000000
   1827c:	movw	r2, #27759	; 0x6c6f
   18280:	movt	r2, #17263	; 0x436f
   18284:	eor	r1, r1, r2
   18288:	eor	r0, r0, #1912602624	; 0x72000000
   1828c:	orr	r0, r0, r1
   18290:	cmp	r0, #0
   18294:	bne	18304 <main@@Base+0x4688>
   18298:	b	1829c <main@@Base+0x4620>
   1829c:	ldr	r0, [fp, #-8]
   182a0:	ldr	r1, [fp, #-12]
   182a4:	str	r1, [fp, #-28]	; 0xffffffe4
   182a8:	ldr	r2, [fp, #-16]
   182ac:	movw	r3, #5
   182b0:	bl	1d3a0 <main@@Base+0x9724>
   182b4:	str	r0, [fp, #-12]
   182b8:	ldr	r0, [fp, #-12]
   182bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   182c0:	cmp	r0, r1
   182c4:	beq	182f4 <main@@Base+0x4678>
   182c8:	ldr	r0, [fp, #-8]
   182cc:	ldr	r1, [fp, #-12]
   182d0:	ldr	r2, [fp, #-16]
   182d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   182d8:	ldr	ip, [fp, #8]
   182dc:	ldr	lr, [fp, #12]
   182e0:	str	ip, [sp]
   182e4:	str	lr, [sp, #4]
   182e8:	bl	17e4c <main@@Base+0x41d0>
   182ec:	str	r0, [fp, #-12]
   182f0:	b	18300 <main@@Base+0x4684>
   182f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182f8:	str	r0, [fp, #-4]
   182fc:	b	18668 <main@@Base+0x49ec>
   18300:	b	18310 <main@@Base+0x4694>
   18304:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18308:	str	r0, [fp, #-4]
   1830c:	b	18668 <main@@Base+0x49ec>
   18310:	b	18314 <main@@Base+0x4698>
   18314:	b	18318 <main@@Base+0x469c>
   18318:	b	18660 <main@@Base+0x49e4>
   1831c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18320:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18324:	movw	r2, #30060	; 0x756c
   18328:	movt	r2, #25966	; 0x656e
   1832c:	subs	r0, r2, r0
   18330:	movw	r2, #29791	; 0x745f
   18334:	movt	r2, #26990	; 0x696e
   18338:	sbcs	r1, r2, r1
   1833c:	str	r0, [sp, #20]
   18340:	str	r1, [sp, #16]
   18344:	bcc	183f4 <main@@Base+0x4778>
   18348:	b	1834c <main@@Base+0x46d0>
   1834c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18350:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18354:	movw	r2, #30815	; 0x785f
   18358:	movt	r2, #26725	; 0x6865
   1835c:	eor	r1, r1, r2
   18360:	movw	r2, #30061	; 0x756d
   18364:	movt	r2, #25966	; 0x656e
   18368:	eor	r0, r0, r2
   1836c:	orr	r0, r0, r1
   18370:	cmp	r0, #0
   18374:	bne	183e4 <main@@Base+0x4768>
   18378:	b	1837c <main@@Base+0x4700>
   1837c:	ldr	r0, [fp, #-8]
   18380:	ldr	r1, [fp, #-12]
   18384:	str	r1, [fp, #-28]	; 0xffffffe4
   18388:	ldr	r2, [fp, #-16]
   1838c:	movw	r3, #8
   18390:	bl	1d3a0 <main@@Base+0x9724>
   18394:	str	r0, [fp, #-12]
   18398:	ldr	r0, [fp, #-12]
   1839c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   183a0:	cmp	r0, r1
   183a4:	beq	183d4 <main@@Base+0x4758>
   183a8:	ldr	r0, [fp, #-8]
   183ac:	ldr	r1, [fp, #-12]
   183b0:	ldr	r2, [fp, #-16]
   183b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   183b8:	ldr	ip, [fp, #8]
   183bc:	ldr	lr, [fp, #12]
   183c0:	str	ip, [sp]
   183c4:	str	lr, [sp, #4]
   183c8:	bl	1d660 <main@@Base+0x99e4>
   183cc:	str	r0, [fp, #-12]
   183d0:	b	183e0 <main@@Base+0x4764>
   183d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183d8:	str	r0, [fp, #-4]
   183dc:	b	18668 <main@@Base+0x49ec>
   183e0:	b	183f0 <main@@Base+0x4774>
   183e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183e8:	str	r0, [fp, #-4]
   183ec:	b	18668 <main@@Base+0x49ec>
   183f0:	b	1865c <main@@Base+0x49e0>
   183f4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   183f8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   183fc:	movw	r2, #30060	; 0x756c
   18400:	movt	r2, #25966	; 0x656e
   18404:	subs	r0, r2, r0
   18408:	movw	r2, #26463	; 0x675f
   1840c:	movt	r2, #28261	; 0x6e65
   18410:	sbcs	r1, r2, r1
   18414:	str	r0, [sp, #12]
   18418:	str	r1, [sp, #8]
   1841c:	bcc	184cc <main@@Base+0x4850>
   18420:	b	18424 <main@@Base+0x47a8>
   18424:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18428:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1842c:	movw	r2, #29791	; 0x745f
   18430:	movt	r2, #26990	; 0x696e
   18434:	eor	r1, r1, r2
   18438:	movw	r2, #30061	; 0x756d
   1843c:	movt	r2, #25966	; 0x656e
   18440:	eor	r0, r0, r2
   18444:	orr	r0, r0, r1
   18448:	cmp	r0, #0
   1844c:	bne	184bc <main@@Base+0x4840>
   18450:	b	18454 <main@@Base+0x47d8>
   18454:	ldr	r0, [fp, #-8]
   18458:	ldr	r1, [fp, #-12]
   1845c:	str	r1, [fp, #-28]	; 0xffffffe4
   18460:	ldr	r2, [fp, #-16]
   18464:	movw	r3, #8
   18468:	bl	1d3a0 <main@@Base+0x9724>
   1846c:	str	r0, [fp, #-12]
   18470:	ldr	r0, [fp, #-12]
   18474:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18478:	cmp	r0, r1
   1847c:	beq	184ac <main@@Base+0x4830>
   18480:	ldr	r0, [fp, #-8]
   18484:	ldr	r1, [fp, #-12]
   18488:	ldr	r2, [fp, #-16]
   1848c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18490:	ldr	ip, [fp, #8]
   18494:	ldr	lr, [fp, #12]
   18498:	str	ip, [sp]
   1849c:	str	lr, [sp, #4]
   184a0:	bl	1d8b8 <main@@Base+0x9c3c>
   184a4:	str	r0, [fp, #-12]
   184a8:	b	184b8 <main@@Base+0x483c>
   184ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184b0:	str	r0, [fp, #-4]
   184b4:	b	18668 <main@@Base+0x49ec>
   184b8:	b	184c8 <main@@Base+0x484c>
   184bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184c0:	str	r0, [fp, #-4]
   184c4:	b	18668 <main@@Base+0x49ec>
   184c8:	b	18658 <main@@Base+0x49dc>
   184cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   184d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   184d4:	movw	r2, #26463	; 0x675f
   184d8:	movt	r2, #28261	; 0x6e65
   184dc:	eor	r1, r1, r2
   184e0:	movw	r2, #30061	; 0x756d
   184e4:	movt	r2, #25966	; 0x656e
   184e8:	eor	r0, r0, r2
   184ec:	orr	r0, r0, r1
   184f0:	cmp	r0, #0
   184f4:	bne	1855c <main@@Base+0x48e0>
   184f8:	b	184fc <main@@Base+0x4880>
   184fc:	ldr	r0, [fp, #-8]
   18500:	ldr	r1, [fp, #-12]
   18504:	str	r1, [fp, #-28]	; 0xffffffe4
   18508:	ldr	r2, [fp, #-16]
   1850c:	movw	r3, #8
   18510:	bl	1d3a0 <main@@Base+0x9724>
   18514:	str	r0, [fp, #-12]
   18518:	ldr	r0, [fp, #-12]
   1851c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18520:	cmp	r0, r1
   18524:	beq	18554 <main@@Base+0x48d8>
   18528:	ldr	r0, [fp, #-8]
   1852c:	ldr	r1, [fp, #-12]
   18530:	ldr	r2, [fp, #-16]
   18534:	ldr	r3, [fp, #-20]	; 0xffffffec
   18538:	ldr	ip, [fp, #8]
   1853c:	ldr	lr, [fp, #12]
   18540:	str	ip, [sp]
   18544:	str	lr, [sp, #4]
   18548:	bl	1dbf8 <main@@Base+0x9f7c>
   1854c:	str	r0, [fp, #-12]
   18550:	b	18558 <main@@Base+0x48dc>
   18554:	b	18564 <main@@Base+0x48e8>
   18558:	b	18560 <main@@Base+0x48e4>
   1855c:	b	18564 <main@@Base+0x48e8>
   18560:	b	18654 <main@@Base+0x49d8>
   18564:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18568:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1856c:	movw	r2, #29797	; 0x7465
   18570:	movt	r2, #28271	; 0x6e6f
   18574:	eor	r1, r1, r2
   18578:	movw	r2, #29817	; 0x7479
   1857c:	movt	r2, #28016	; 0x6d70
   18580:	eor	r0, r0, r2
   18584:	orr	r0, r0, r1
   18588:	cmp	r0, #0
   1858c:	bne	18644 <main@@Base+0x49c8>
   18590:	b	18594 <main@@Base+0x4918>
   18594:	ldr	r0, [fp, #-12]
   18598:	add	r0, r0, #8
   1859c:	str	r0, [fp, #-12]
   185a0:	ldr	r0, [fp, #-12]
   185a4:	ldr	r1, [fp, #-16]
   185a8:	bl	17cac <main@@Base+0x4030>
   185ac:	str	r1, [fp, #-36]	; 0xffffffdc
   185b0:	str	r0, [fp, #-40]	; 0xffffffd8
   185b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   185b8:	movw	r1, #30061	; 0x756d
   185bc:	movt	r1, #25966	; 0x656e
   185c0:	teq	r0, r1
   185c4:	bne	18634 <main@@Base+0x49b8>
   185c8:	b	185cc <main@@Base+0x4950>
   185cc:	ldr	r0, [fp, #-8]
   185d0:	ldr	r1, [fp, #-12]
   185d4:	str	r1, [fp, #-28]	; 0xffffffe4
   185d8:	ldr	r2, [fp, #-16]
   185dc:	movw	r3, #4
   185e0:	bl	1d3a0 <main@@Base+0x9724>
   185e4:	str	r0, [fp, #-12]
   185e8:	ldr	r0, [fp, #-12]
   185ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   185f0:	cmp	r0, r1
   185f4:	beq	18624 <main@@Base+0x49a8>
   185f8:	ldr	r0, [fp, #-8]
   185fc:	ldr	r1, [fp, #-12]
   18600:	ldr	r2, [fp, #-16]
   18604:	ldr	r3, [fp, #-20]	; 0xffffffec
   18608:	ldr	ip, [fp, #8]
   1860c:	ldr	lr, [fp, #12]
   18610:	str	ip, [sp]
   18614:	str	lr, [sp, #4]
   18618:	bl	1de34 <main@@Base+0xa1b8>
   1861c:	str	r0, [fp, #-12]
   18620:	b	18630 <main@@Base+0x49b4>
   18624:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18628:	str	r0, [fp, #-4]
   1862c:	b	18668 <main@@Base+0x49ec>
   18630:	b	18640 <main@@Base+0x49c4>
   18634:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18638:	str	r0, [fp, #-4]
   1863c:	b	18668 <main@@Base+0x49ec>
   18640:	b	18650 <main@@Base+0x49d4>
   18644:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18648:	str	r0, [fp, #-4]
   1864c:	b	18668 <main@@Base+0x49ec>
   18650:	b	18654 <main@@Base+0x49d8>
   18654:	b	18658 <main@@Base+0x49dc>
   18658:	b	1865c <main@@Base+0x49e0>
   1865c:	b	18660 <main@@Base+0x49e4>
   18660:	ldr	r0, [fp, #-12]
   18664:	str	r0, [fp, #-4]
   18668:	ldr	r0, [fp, #-4]
   1866c:	mov	sp, fp
   18670:	pop	{fp, pc}
   18674:	push	{fp, lr}
   18678:	mov	fp, sp
   1867c:	sub	sp, sp, #96	; 0x60
   18680:	ldr	ip, [fp, #12]
   18684:	ldr	lr, [fp, #8]
   18688:	str	r0, [fp, #-8]
   1868c:	str	r1, [fp, #-12]
   18690:	str	r2, [fp, #-16]
   18694:	str	r3, [fp, #-20]	; 0xffffffec
   18698:	ldr	r0, [fp, #-12]
   1869c:	str	r0, [fp, #-24]	; 0xffffffe8
   186a0:	ldr	r0, [fp, #-12]
   186a4:	ldr	r1, [fp, #-16]
   186a8:	str	lr, [fp, #-44]	; 0xffffffd4
   186ac:	str	ip, [sp, #48]	; 0x30
   186b0:	bl	17cac <main@@Base+0x4030>
   186b4:	str	r1, [fp, #-36]	; 0xffffffdc
   186b8:	str	r0, [fp, #-40]	; 0xffffffd8
   186bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   186c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   186c4:	movw	r2, #11844	; 0x2e44
   186c8:	movt	r2, #28005	; 0x6d65
   186cc:	subs	r0, r2, r0
   186d0:	movw	r2, #18273	; 0x4761
   186d4:	movt	r2, #19833	; 0x4d79
   186d8:	sbcs	r1, r2, r1
   186dc:	str	r0, [sp, #44]	; 0x2c
   186e0:	str	r1, [sp, #40]	; 0x28
   186e4:	bcc	18838 <main@@Base+0x4bbc>
   186e8:	b	186ec <main@@Base+0x4a70>
   186ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   186f0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   186f4:	movw	r2, #28276	; 0x6e74
   186f8:	movt	r2, #18017	; 0x4661
   186fc:	eor	r1, r1, r2
   18700:	movw	r2, #31022	; 0x792e
   18704:	movt	r2, #24947	; 0x6173
   18708:	eor	r0, r0, r2
   1870c:	orr	r0, r0, r1
   18710:	cmp	r0, #0
   18714:	bne	18828 <main@@Base+0x4bac>
   18718:	b	1871c <main@@Base+0x4aa0>
   1871c:	ldr	r0, [fp, #-12]
   18720:	add	r0, r0, #8
   18724:	str	r0, [fp, #-12]
   18728:	ldr	r0, [fp, #-12]
   1872c:	ldr	r1, [fp, #-16]
   18730:	bl	17cac <main@@Base+0x4030>
   18734:	str	r1, [fp, #-36]	; 0xffffffdc
   18738:	str	r0, [fp, #-40]	; 0xffffffd8
   1873c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18740:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18744:	movw	lr, #24946	; 0x6172
   18748:	movt	lr, #17256	; 0x4368
   1874c:	eor	r1, r1, lr
   18750:	movw	lr, #29797	; 0x7465
   18754:	movt	lr, #24931	; 0x6163
   18758:	eor	r0, r0, lr
   1875c:	orr	r0, r0, r1
   18760:	cmp	r0, #0
   18764:	bne	18818 <main@@Base+0x4b9c>
   18768:	b	1876c <main@@Base+0x4af0>
   1876c:	ldr	r0, [fp, #-12]
   18770:	add	r0, r0, #8
   18774:	str	r0, [fp, #-12]
   18778:	ldr	r0, [fp, #-12]
   1877c:	ldr	r1, [fp, #-16]
   18780:	bl	17cac <main@@Base+0x4030>
   18784:	str	r1, [fp, #-36]	; 0xffffffdc
   18788:	str	r0, [fp, #-40]	; 0xffffffd8
   1878c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18790:	and	r0, r0, #-16777216	; 0xff000000
   18794:	teq	r0, #1912602624	; 0x72000000
   18798:	bne	18808 <main@@Base+0x4b8c>
   1879c:	b	187a0 <main@@Base+0x4b24>
   187a0:	ldr	r0, [fp, #-8]
   187a4:	ldr	r1, [fp, #-12]
   187a8:	str	r1, [fp, #-28]	; 0xffffffe4
   187ac:	ldr	r2, [fp, #-16]
   187b0:	movw	r3, #1
   187b4:	bl	1d3a0 <main@@Base+0x9724>
   187b8:	str	r0, [fp, #-12]
   187bc:	ldr	r0, [fp, #-12]
   187c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   187c4:	cmp	r0, r1
   187c8:	beq	187f8 <main@@Base+0x4b7c>
   187cc:	ldr	r0, [fp, #-8]
   187d0:	ldr	r1, [fp, #-12]
   187d4:	ldr	r2, [fp, #-16]
   187d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   187dc:	ldr	ip, [fp, #8]
   187e0:	ldr	lr, [fp, #12]
   187e4:	str	ip, [sp]
   187e8:	str	lr, [sp, #4]
   187ec:	bl	1df20 <main@@Base+0xa2a4>
   187f0:	str	r0, [fp, #-12]
   187f4:	b	18804 <main@@Base+0x4b88>
   187f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187fc:	str	r0, [fp, #-4]
   18800:	b	19254 <main@@Base+0x55d8>
   18804:	b	18814 <main@@Base+0x4b98>
   18808:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1880c:	str	r0, [fp, #-4]
   18810:	b	19254 <main@@Base+0x55d8>
   18814:	b	18824 <main@@Base+0x4ba8>
   18818:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1881c:	str	r0, [fp, #-4]
   18820:	b	19254 <main@@Base+0x55d8>
   18824:	b	18834 <main@@Base+0x4bb8>
   18828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1882c:	str	r0, [fp, #-4]
   18830:	b	19254 <main@@Base+0x55d8>
   18834:	b	1924c <main@@Base+0x55d0>
   18838:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1883c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18840:	movw	r2, #18273	; 0x4761
   18844:	movt	r2, #19833	; 0x4d79
   18848:	eor	r1, r1, r2
   1884c:	movw	r2, #11845	; 0x2e45
   18850:	movt	r2, #28005	; 0x6d65
   18854:	eor	r0, r0, r2
   18858:	orr	r0, r0, r1
   1885c:	cmp	r0, #0
   18860:	bne	1903c <main@@Base+0x53c0>
   18864:	b	18868 <main@@Base+0x4bec>
   18868:	ldr	r0, [fp, #-12]
   1886c:	add	r0, r0, #8
   18870:	str	r0, [fp, #-12]
   18874:	ldr	r0, [fp, #-12]
   18878:	ldr	r1, [fp, #-16]
   1887c:	bl	17cac <main@@Base+0x4030>
   18880:	str	r1, [fp, #-36]	; 0xffffffdc
   18884:	str	r0, [fp, #-40]	; 0xffffffd8
   18888:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1888c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18890:	movw	lr, #11879	; 0x2e67
   18894:	movt	lr, #27749	; 0x6c65
   18898:	subs	r0, lr, r0
   1889c:	movw	lr, #28016	; 0x6d70
   188a0:	movt	lr, #30817	; 0x7861
   188a4:	sbcs	r1, lr, r1
   188a8:	str	r0, [sp, #36]	; 0x24
   188ac:	str	r1, [sp, #32]
   188b0:	bcc	18bb8 <main@@Base+0x4f3c>
   188b4:	b	188b8 <main@@Base+0x4c3c>
   188b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   188bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   188c0:	movw	r2, #11842	; 0x2e42
   188c4:	movt	r2, #27749	; 0x6c65
   188c8:	subs	r0, r2, r0
   188cc:	movw	r2, #28016	; 0x6d70
   188d0:	movt	r2, #30817	; 0x7861
   188d4:	sbcs	r1, r2, r1
   188d8:	str	r0, [sp, #28]
   188dc:	str	r1, [sp, #24]
   188e0:	bcc	189dc <main@@Base+0x4d60>
   188e4:	b	188e8 <main@@Base+0x4c6c>
   188e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   188ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   188f0:	movw	r2, #28016	; 0x6d70
   188f4:	movt	r2, #30817	; 0x7861
   188f8:	eor	r1, r1, r2
   188fc:	movw	r2, #11841	; 0x2e41
   18900:	movt	r2, #27749	; 0x6c65
   18904:	eor	r0, r0, r2
   18908:	orr	r0, r0, r1
   1890c:	cmp	r0, #0
   18910:	bne	189cc <main@@Base+0x4d50>
   18914:	b	18918 <main@@Base+0x4c9c>
   18918:	ldr	r0, [fp, #-12]
   1891c:	add	r0, r0, #8
   18920:	str	r0, [fp, #-12]
   18924:	ldr	r0, [fp, #-12]
   18928:	ldr	r1, [fp, #-16]
   1892c:	bl	17cac <main@@Base+0x4030>
   18930:	str	r1, [fp, #-36]	; 0xffffffdc
   18934:	str	r0, [fp, #-40]	; 0xffffffd8
   18938:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1893c:	bfc	r0, #0, #16
   18940:	movw	r1, #0
   18944:	movt	r1, #28281	; 0x6e79
   18948:	teq	r0, r1
   1894c:	bne	189bc <main@@Base+0x4d40>
   18950:	b	18954 <main@@Base+0x4cd8>
   18954:	ldr	r0, [fp, #-8]
   18958:	ldr	r1, [fp, #-12]
   1895c:	str	r1, [fp, #-28]	; 0xffffffe4
   18960:	ldr	r2, [fp, #-16]
   18964:	movw	r3, #2
   18968:	bl	1d3a0 <main@@Base+0x9724>
   1896c:	str	r0, [fp, #-12]
   18970:	ldr	r0, [fp, #-12]
   18974:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18978:	cmp	r0, r1
   1897c:	beq	189ac <main@@Base+0x4d30>
   18980:	ldr	r0, [fp, #-8]
   18984:	ldr	r1, [fp, #-12]
   18988:	ldr	r2, [fp, #-16]
   1898c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18990:	ldr	ip, [fp, #8]
   18994:	ldr	lr, [fp, #12]
   18998:	str	ip, [sp]
   1899c:	str	lr, [sp, #4]
   189a0:	bl	1aadc <main@@Base+0x6e60>
   189a4:	str	r0, [fp, #-12]
   189a8:	b	189b8 <main@@Base+0x4d3c>
   189ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189b0:	str	r0, [fp, #-4]
   189b4:	b	19254 <main@@Base+0x55d8>
   189b8:	b	189c8 <main@@Base+0x4d4c>
   189bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189c0:	str	r0, [fp, #-4]
   189c4:	b	19254 <main@@Base+0x55d8>
   189c8:	b	189d8 <main@@Base+0x4d5c>
   189cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189d0:	str	r0, [fp, #-4]
   189d4:	b	19254 <main@@Base+0x55d8>
   189d8:	b	18bb4 <main@@Base+0x4f38>
   189dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   189e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   189e4:	movw	r2, #28016	; 0x6d70
   189e8:	movt	r2, #30817	; 0x7861
   189ec:	eor	r1, r1, r2
   189f0:	movw	r2, #11843	; 0x2e43
   189f4:	movt	r2, #27749	; 0x6c65
   189f8:	eor	r0, r0, r2
   189fc:	orr	r0, r0, r1
   18a00:	cmp	r0, #0
   18a04:	bne	18abc <main@@Base+0x4e40>
   18a08:	b	18a0c <main@@Base+0x4d90>
   18a0c:	ldr	r0, [fp, #-12]
   18a10:	add	r0, r0, #8
   18a14:	str	r0, [fp, #-12]
   18a18:	ldr	r0, [fp, #-12]
   18a1c:	ldr	r1, [fp, #-16]
   18a20:	bl	17cac <main@@Base+0x4030>
   18a24:	str	r1, [fp, #-36]	; 0xffffffdc
   18a28:	str	r0, [fp, #-40]	; 0xffffffd8
   18a2c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18a30:	movw	r1, #28530	; 0x6f72
   18a34:	movt	r1, #28524	; 0x6f6c
   18a38:	teq	r0, r1
   18a3c:	bne	18aac <main@@Base+0x4e30>
   18a40:	b	18a44 <main@@Base+0x4dc8>
   18a44:	ldr	r0, [fp, #-8]
   18a48:	ldr	r1, [fp, #-12]
   18a4c:	str	r1, [fp, #-28]	; 0xffffffe4
   18a50:	ldr	r2, [fp, #-16]
   18a54:	movw	r3, #4
   18a58:	bl	1d3a0 <main@@Base+0x9724>
   18a5c:	str	r0, [fp, #-12]
   18a60:	ldr	r0, [fp, #-12]
   18a64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18a68:	cmp	r0, r1
   18a6c:	beq	18a9c <main@@Base+0x4e20>
   18a70:	ldr	r0, [fp, #-8]
   18a74:	ldr	r1, [fp, #-12]
   18a78:	ldr	r2, [fp, #-16]
   18a7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18a80:	ldr	ip, [fp, #8]
   18a84:	ldr	lr, [fp, #12]
   18a88:	str	ip, [sp]
   18a8c:	str	lr, [sp, #4]
   18a90:	bl	17e4c <main@@Base+0x41d0>
   18a94:	str	r0, [fp, #-12]
   18a98:	b	18aa8 <main@@Base+0x4e2c>
   18a9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18aa0:	str	r0, [fp, #-4]
   18aa4:	b	19254 <main@@Base+0x55d8>
   18aa8:	b	18ab8 <main@@Base+0x4e3c>
   18aac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ab0:	str	r0, [fp, #-4]
   18ab4:	b	19254 <main@@Base+0x55d8>
   18ab8:	b	18bb0 <main@@Base+0x4f34>
   18abc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18ac0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18ac4:	movw	r2, #28016	; 0x6d70
   18ac8:	movt	r2, #30817	; 0x7861
   18acc:	eor	r1, r1, r2
   18ad0:	movw	r2, #11846	; 0x2e46
   18ad4:	movt	r2, #27749	; 0x6c65
   18ad8:	eor	r0, r0, r2
   18adc:	orr	r0, r0, r1
   18ae0:	cmp	r0, #0
   18ae4:	bne	18ba0 <main@@Base+0x4f24>
   18ae8:	b	18aec <main@@Base+0x4e70>
   18aec:	ldr	r0, [fp, #-12]
   18af0:	add	r0, r0, #8
   18af4:	str	r0, [fp, #-12]
   18af8:	ldr	r0, [fp, #-12]
   18afc:	ldr	r1, [fp, #-16]
   18b00:	bl	17cac <main@@Base+0x4030>
   18b04:	str	r1, [fp, #-36]	; 0xffffffdc
   18b08:	str	r0, [fp, #-40]	; 0xffffffd8
   18b0c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18b10:	bfc	r0, #0, #16
   18b14:	movw	r1, #0
   18b18:	movt	r1, #28527	; 0x6f6f
   18b1c:	teq	r0, r1
   18b20:	bne	18b90 <main@@Base+0x4f14>
   18b24:	b	18b28 <main@@Base+0x4eac>
   18b28:	ldr	r0, [fp, #-8]
   18b2c:	ldr	r1, [fp, #-12]
   18b30:	str	r1, [fp, #-28]	; 0xffffffe4
   18b34:	ldr	r2, [fp, #-16]
   18b38:	movw	r3, #2
   18b3c:	bl	1d3a0 <main@@Base+0x9724>
   18b40:	str	r0, [fp, #-12]
   18b44:	ldr	r0, [fp, #-12]
   18b48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18b4c:	cmp	r0, r1
   18b50:	beq	18b80 <main@@Base+0x4f04>
   18b54:	ldr	r0, [fp, #-8]
   18b58:	ldr	r1, [fp, #-12]
   18b5c:	ldr	r2, [fp, #-16]
   18b60:	ldr	r3, [fp, #-20]	; 0xffffffec
   18b64:	ldr	ip, [fp, #8]
   18b68:	ldr	lr, [fp, #12]
   18b6c:	str	ip, [sp]
   18b70:	str	lr, [sp, #4]
   18b74:	bl	1d424 <main@@Base+0x97a8>
   18b78:	str	r0, [fp, #-12]
   18b7c:	b	18b8c <main@@Base+0x4f10>
   18b80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b84:	str	r0, [fp, #-4]
   18b88:	b	19254 <main@@Base+0x55d8>
   18b8c:	b	18b9c <main@@Base+0x4f20>
   18b90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b94:	str	r0, [fp, #-4]
   18b98:	b	19254 <main@@Base+0x55d8>
   18b9c:	b	18bac <main@@Base+0x4f30>
   18ba0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ba4:	str	r0, [fp, #-4]
   18ba8:	b	19254 <main@@Base+0x55d8>
   18bac:	b	18bb0 <main@@Base+0x4f34>
   18bb0:	b	18bb4 <main@@Base+0x4f38>
   18bb4:	b	19038 <main@@Base+0x53bc>
   18bb8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18bbc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18bc0:	movw	r2, #11880	; 0x2e68
   18bc4:	movt	r2, #27749	; 0x6c65
   18bc8:	subs	r0, r2, r0
   18bcc:	movw	r2, #28016	; 0x6d70
   18bd0:	movt	r2, #30817	; 0x7861
   18bd4:	sbcs	r1, r2, r1
   18bd8:	str	r0, [sp, #20]
   18bdc:	str	r1, [sp, #16]
   18be0:	bcc	18cf8 <main@@Base+0x507c>
   18be4:	b	18be8 <main@@Base+0x4f6c>
   18be8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18bec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18bf0:	movw	r2, #28016	; 0x6d70
   18bf4:	movt	r2, #30817	; 0x7861
   18bf8:	eor	r1, r1, r2
   18bfc:	movw	r2, #11880	; 0x2e68
   18c00:	movt	r2, #27749	; 0x6c65
   18c04:	eor	r0, r0, r2
   18c08:	orr	r0, r0, r1
   18c0c:	cmp	r0, #0
   18c10:	bne	18ce8 <main@@Base+0x506c>
   18c14:	b	18c18 <main@@Base+0x4f9c>
   18c18:	ldr	r0, [fp, #-12]
   18c1c:	add	r0, r0, #8
   18c20:	str	r0, [fp, #-12]
   18c24:	ldr	r0, [fp, #-12]
   18c28:	ldr	r1, [fp, #-16]
   18c2c:	bl	17cac <main@@Base+0x4030>
   18c30:	str	r1, [fp, #-36]	; 0xffffffdc
   18c34:	str	r0, [fp, #-40]	; 0xffffffd8
   18c38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18c3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18c40:	movw	lr, #30815	; 0x785f
   18c44:	movt	lr, #101	; 0x65
   18c48:	eor	lr, lr, r1, lsr #8
   18c4c:	lsr	r0, r0, #8
   18c50:	orr	r0, r0, r1, lsl #24
   18c54:	movw	r1, #30061	; 0x756d
   18c58:	movt	r1, #25966	; 0x656e
   18c5c:	eor	r0, r0, r1
   18c60:	orr	r0, r0, lr
   18c64:	cmp	r0, #0
   18c68:	bne	18cd8 <main@@Base+0x505c>
   18c6c:	b	18c70 <main@@Base+0x4ff4>
   18c70:	ldr	r0, [fp, #-8]
   18c74:	ldr	r1, [fp, #-12]
   18c78:	str	r1, [fp, #-28]	; 0xffffffe4
   18c7c:	ldr	r2, [fp, #-16]
   18c80:	movw	r3, #7
   18c84:	bl	1d3a0 <main@@Base+0x9724>
   18c88:	str	r0, [fp, #-12]
   18c8c:	ldr	r0, [fp, #-12]
   18c90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18c94:	cmp	r0, r1
   18c98:	beq	18cc8 <main@@Base+0x504c>
   18c9c:	ldr	r0, [fp, #-8]
   18ca0:	ldr	r1, [fp, #-12]
   18ca4:	ldr	r2, [fp, #-16]
   18ca8:	ldr	r3, [fp, #-20]	; 0xffffffec
   18cac:	ldr	ip, [fp, #8]
   18cb0:	ldr	lr, [fp, #12]
   18cb4:	str	ip, [sp]
   18cb8:	str	lr, [sp, #4]
   18cbc:	bl	1d660 <main@@Base+0x99e4>
   18cc0:	str	r0, [fp, #-12]
   18cc4:	b	18cd4 <main@@Base+0x5058>
   18cc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ccc:	str	r0, [fp, #-4]
   18cd0:	b	19254 <main@@Base+0x55d8>
   18cd4:	b	18ce4 <main@@Base+0x5068>
   18cd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cdc:	str	r0, [fp, #-4]
   18ce0:	b	19254 <main@@Base+0x55d8>
   18ce4:	b	18cf4 <main@@Base+0x5078>
   18ce8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cec:	str	r0, [fp, #-4]
   18cf0:	b	19254 <main@@Base+0x55d8>
   18cf4:	b	19034 <main@@Base+0x53b8>
   18cf8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18cfc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18d00:	movw	r2, #11885	; 0x2e6d
   18d04:	movt	r2, #27749	; 0x6c65
   18d08:	subs	r0, r2, r0
   18d0c:	movw	r2, #28016	; 0x6d70
   18d10:	movt	r2, #30817	; 0x7861
   18d14:	sbcs	r1, r2, r1
   18d18:	str	r0, [sp, #12]
   18d1c:	str	r1, [sp, #8]
   18d20:	bcc	18e38 <main@@Base+0x51bc>
   18d24:	b	18d28 <main@@Base+0x50ac>
   18d28:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18d2c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18d30:	movw	r2, #28016	; 0x6d70
   18d34:	movt	r2, #30817	; 0x7861
   18d38:	eor	r1, r1, r2
   18d3c:	movw	r2, #11881	; 0x2e69
   18d40:	movt	r2, #27749	; 0x6c65
   18d44:	eor	r0, r0, r2
   18d48:	orr	r0, r0, r1
   18d4c:	cmp	r0, #0
   18d50:	bne	18e28 <main@@Base+0x51ac>
   18d54:	b	18d58 <main@@Base+0x50dc>
   18d58:	ldr	r0, [fp, #-12]
   18d5c:	add	r0, r0, #8
   18d60:	str	r0, [fp, #-12]
   18d64:	ldr	r0, [fp, #-12]
   18d68:	ldr	r1, [fp, #-16]
   18d6c:	bl	17cac <main@@Base+0x4030>
   18d70:	str	r1, [fp, #-36]	; 0xffffffdc
   18d74:	str	r0, [fp, #-40]	; 0xffffffd8
   18d78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18d7c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18d80:	movw	lr, #29791	; 0x745f
   18d84:	movt	lr, #110	; 0x6e
   18d88:	eor	lr, lr, r1, lsr #8
   18d8c:	lsr	r0, r0, #8
   18d90:	orr	r0, r0, r1, lsl #24
   18d94:	movw	r1, #30061	; 0x756d
   18d98:	movt	r1, #25966	; 0x656e
   18d9c:	eor	r0, r0, r1
   18da0:	orr	r0, r0, lr
   18da4:	cmp	r0, #0
   18da8:	bne	18e18 <main@@Base+0x519c>
   18dac:	b	18db0 <main@@Base+0x5134>
   18db0:	ldr	r0, [fp, #-8]
   18db4:	ldr	r1, [fp, #-12]
   18db8:	str	r1, [fp, #-28]	; 0xffffffe4
   18dbc:	ldr	r2, [fp, #-16]
   18dc0:	movw	r3, #7
   18dc4:	bl	1d3a0 <main@@Base+0x9724>
   18dc8:	str	r0, [fp, #-12]
   18dcc:	ldr	r0, [fp, #-12]
   18dd0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18dd4:	cmp	r0, r1
   18dd8:	beq	18e08 <main@@Base+0x518c>
   18ddc:	ldr	r0, [fp, #-8]
   18de0:	ldr	r1, [fp, #-12]
   18de4:	ldr	r2, [fp, #-16]
   18de8:	ldr	r3, [fp, #-20]	; 0xffffffec
   18dec:	ldr	ip, [fp, #8]
   18df0:	ldr	lr, [fp, #12]
   18df4:	str	ip, [sp]
   18df8:	str	lr, [sp, #4]
   18dfc:	bl	1d8b8 <main@@Base+0x9c3c>
   18e00:	str	r0, [fp, #-12]
   18e04:	b	18e14 <main@@Base+0x5198>
   18e08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e0c:	str	r0, [fp, #-4]
   18e10:	b	19254 <main@@Base+0x55d8>
   18e14:	b	18e24 <main@@Base+0x51a8>
   18e18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e1c:	str	r0, [fp, #-4]
   18e20:	b	19254 <main@@Base+0x55d8>
   18e24:	b	18e34 <main@@Base+0x51b8>
   18e28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e2c:	str	r0, [fp, #-4]
   18e30:	b	19254 <main@@Base+0x55d8>
   18e34:	b	19030 <main@@Base+0x53b4>
   18e38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18e3c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18e40:	movw	r2, #28016	; 0x6d70
   18e44:	movt	r2, #30817	; 0x7861
   18e48:	eor	r1, r1, r2
   18e4c:	movw	r2, #11886	; 0x2e6e
   18e50:	movt	r2, #27749	; 0x6c65
   18e54:	eor	r0, r0, r2
   18e58:	orr	r0, r0, r1
   18e5c:	cmp	r0, #0
   18e60:	bne	19020 <main@@Base+0x53a4>
   18e64:	b	18e68 <main@@Base+0x51ec>
   18e68:	ldr	r0, [fp, #-12]
   18e6c:	add	r0, r0, #8
   18e70:	str	r0, [fp, #-12]
   18e74:	ldr	r0, [fp, #-12]
   18e78:	ldr	r1, [fp, #-16]
   18e7c:	bl	17cac <main@@Base+0x4030>
   18e80:	str	r1, [fp, #-36]	; 0xffffffdc
   18e84:	str	r0, [fp, #-40]	; 0xffffffd8
   18e88:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18e8c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18e90:	movw	lr, #26463	; 0x675f
   18e94:	movt	lr, #101	; 0x65
   18e98:	eor	lr, lr, r1, lsr #8
   18e9c:	lsr	r0, r0, #8
   18ea0:	orr	r0, r0, r1, lsl #24
   18ea4:	movw	r1, #30061	; 0x756d
   18ea8:	movt	r1, #25966	; 0x656e
   18eac:	eor	r0, r0, r1
   18eb0:	orr	r0, r0, lr
   18eb4:	cmp	r0, #0
   18eb8:	bne	18f20 <main@@Base+0x52a4>
   18ebc:	b	18ec0 <main@@Base+0x5244>
   18ec0:	ldr	r0, [fp, #-8]
   18ec4:	ldr	r1, [fp, #-12]
   18ec8:	str	r1, [fp, #-28]	; 0xffffffe4
   18ecc:	ldr	r2, [fp, #-16]
   18ed0:	movw	r3, #7
   18ed4:	bl	1d3a0 <main@@Base+0x9724>
   18ed8:	str	r0, [fp, #-12]
   18edc:	ldr	r0, [fp, #-12]
   18ee0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18ee4:	cmp	r0, r1
   18ee8:	beq	18f18 <main@@Base+0x529c>
   18eec:	ldr	r0, [fp, #-8]
   18ef0:	ldr	r1, [fp, #-12]
   18ef4:	ldr	r2, [fp, #-16]
   18ef8:	ldr	r3, [fp, #-20]	; 0xffffffec
   18efc:	ldr	ip, [fp, #8]
   18f00:	ldr	lr, [fp, #12]
   18f04:	str	ip, [sp]
   18f08:	str	lr, [sp, #4]
   18f0c:	bl	1dbf8 <main@@Base+0x9f7c>
   18f10:	str	r0, [fp, #-12]
   18f14:	b	18f1c <main@@Base+0x52a0>
   18f18:	b	18f28 <main@@Base+0x52ac>
   18f1c:	b	18f24 <main@@Base+0x52a8>
   18f20:	b	18f28 <main@@Base+0x52ac>
   18f24:	b	1901c <main@@Base+0x53a0>
   18f28:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18f2c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   18f30:	movw	r2, #25965	; 0x656d
   18f34:	movt	r2, #28532	; 0x6f74
   18f38:	eor	r1, r1, r2
   18f3c:	movw	r2, #31077	; 0x7965
   18f40:	movt	r2, #28788	; 0x7074
   18f44:	eor	r0, r0, r2
   18f48:	orr	r0, r0, r1
   18f4c:	cmp	r0, #0
   18f50:	bne	1900c <main@@Base+0x5390>
   18f54:	b	18f58 <main@@Base+0x52dc>
   18f58:	ldr	r0, [fp, #-12]
   18f5c:	add	r0, r0, #8
   18f60:	str	r0, [fp, #-12]
   18f64:	ldr	r0, [fp, #-12]
   18f68:	ldr	r1, [fp, #-16]
   18f6c:	bl	17cac <main@@Base+0x4030>
   18f70:	str	r1, [fp, #-36]	; 0xffffffdc
   18f74:	str	r0, [fp, #-40]	; 0xffffffd8
   18f78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   18f7c:	bic	r0, r0, #255	; 0xff
   18f80:	movw	r1, #27904	; 0x6d00
   18f84:	movt	r1, #28277	; 0x6e75
   18f88:	teq	r0, r1
   18f8c:	bne	18ffc <main@@Base+0x5380>
   18f90:	b	18f94 <main@@Base+0x5318>
   18f94:	ldr	r0, [fp, #-8]
   18f98:	ldr	r1, [fp, #-12]
   18f9c:	str	r1, [fp, #-28]	; 0xffffffe4
   18fa0:	ldr	r2, [fp, #-16]
   18fa4:	movw	r3, #3
   18fa8:	bl	1d3a0 <main@@Base+0x9724>
   18fac:	str	r0, [fp, #-12]
   18fb0:	ldr	r0, [fp, #-12]
   18fb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18fb8:	cmp	r0, r1
   18fbc:	beq	18fec <main@@Base+0x5370>
   18fc0:	ldr	r0, [fp, #-8]
   18fc4:	ldr	r1, [fp, #-12]
   18fc8:	ldr	r2, [fp, #-16]
   18fcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   18fd0:	ldr	ip, [fp, #8]
   18fd4:	ldr	lr, [fp, #12]
   18fd8:	str	ip, [sp]
   18fdc:	str	lr, [sp, #4]
   18fe0:	bl	1de34 <main@@Base+0xa1b8>
   18fe4:	str	r0, [fp, #-12]
   18fe8:	b	18ff8 <main@@Base+0x537c>
   18fec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ff0:	str	r0, [fp, #-4]
   18ff4:	b	19254 <main@@Base+0x55d8>
   18ff8:	b	19008 <main@@Base+0x538c>
   18ffc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19000:	str	r0, [fp, #-4]
   19004:	b	19254 <main@@Base+0x55d8>
   19008:	b	19018 <main@@Base+0x539c>
   1900c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19010:	str	r0, [fp, #-4]
   19014:	b	19254 <main@@Base+0x55d8>
   19018:	b	1901c <main@@Base+0x53a0>
   1901c:	b	1902c <main@@Base+0x53b0>
   19020:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19024:	str	r0, [fp, #-4]
   19028:	b	19254 <main@@Base+0x55d8>
   1902c:	b	19030 <main@@Base+0x53b4>
   19030:	b	19034 <main@@Base+0x53b8>
   19034:	b	19038 <main@@Base+0x53bc>
   19038:	b	19248 <main@@Base+0x55cc>
   1903c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19040:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19044:	movw	r2, #18273	; 0x4761
   19048:	movt	r2, #19833	; 0x4d79
   1904c:	eor	r1, r1, r2
   19050:	movw	r2, #11855	; 0x2e4f
   19054:	movt	r2, #28005	; 0x6d65
   19058:	eor	r0, r0, r2
   1905c:	orr	r0, r0, r1
   19060:	cmp	r0, #0
   19064:	bne	19238 <main@@Base+0x55bc>
   19068:	b	1906c <main@@Base+0x53f0>
   1906c:	ldr	r0, [fp, #-12]
   19070:	add	r0, r0, #8
   19074:	str	r0, [fp, #-12]
   19078:	ldr	r0, [fp, #-12]
   1907c:	ldr	r1, [fp, #-16]
   19080:	bl	17cac <main@@Base+0x4030>
   19084:	str	r1, [fp, #-36]	; 0xffffffdc
   19088:	str	r0, [fp, #-40]	; 0xffffffd8
   1908c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19090:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19094:	movw	lr, #25970	; 0x6572
   19098:	movt	lr, #29800	; 0x7468
   1909c:	eor	r1, r1, lr
   190a0:	movw	lr, #28005	; 0x6d65
   190a4:	movt	lr, #20065	; 0x4e61
   190a8:	eor	r0, r0, lr
   190ac:	orr	r0, r0, r1
   190b0:	cmp	r0, #0
   190b4:	bne	19228 <main@@Base+0x55ac>
   190b8:	b	190bc <main@@Base+0x5440>
   190bc:	ldr	r0, [fp, #-12]
   190c0:	add	r0, r0, #8
   190c4:	str	r0, [fp, #-12]
   190c8:	ldr	r0, [fp, #-12]
   190cc:	ldr	r1, [fp, #-16]
   190d0:	bl	17cac <main@@Base+0x4030>
   190d4:	str	r1, [fp, #-36]	; 0xffffffdc
   190d8:	str	r0, [fp, #-40]	; 0xffffffd8
   190dc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   190e0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   190e4:	movw	lr, #24931	; 0x6163
   190e8:	movt	lr, #21360	; 0x5370
   190ec:	eor	r1, r1, lr
   190f0:	movw	lr, #18034	; 0x4672
   190f4:	movt	lr, #25902	; 0x652e
   190f8:	eor	r0, r0, lr
   190fc:	orr	r0, r0, r1
   19100:	cmp	r0, #0
   19104:	bne	19218 <main@@Base+0x559c>
   19108:	b	1910c <main@@Base+0x5490>
   1910c:	ldr	r0, [fp, #-12]
   19110:	add	r0, r0, #8
   19114:	str	r0, [fp, #-12]
   19118:	ldr	r0, [fp, #-12]
   1911c:	ldr	r1, [fp, #-16]
   19120:	bl	17cac <main@@Base+0x4030>
   19124:	str	r1, [fp, #-36]	; 0xffffffdc
   19128:	str	r0, [fp, #-40]	; 0xffffffd8
   1912c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19130:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19134:	movw	lr, #18798	; 0x496e
   19138:	movt	lr, #28525	; 0x6f6d
   1913c:	eor	r1, r1, lr
   19140:	movw	lr, #30052	; 0x7564
   19144:	movt	lr, #25452	; 0x636c
   19148:	eor	r0, r0, lr
   1914c:	orr	r0, r0, r1
   19150:	cmp	r0, #0
   19154:	bne	19208 <main@@Base+0x558c>
   19158:	b	1915c <main@@Base+0x54e0>
   1915c:	ldr	r0, [fp, #-12]
   19160:	add	r0, r0, #8
   19164:	str	r0, [fp, #-12]
   19168:	ldr	r0, [fp, #-12]
   1916c:	ldr	r1, [fp, #-16]
   19170:	bl	17cac <main@@Base+0x4030>
   19174:	str	r1, [fp, #-36]	; 0xffffffdc
   19178:	str	r0, [fp, #-40]	; 0xffffffd8
   1917c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19180:	and	r0, r0, #-16777216	; 0xff000000
   19184:	teq	r0, #1694498816	; 0x65000000
   19188:	bne	191f8 <main@@Base+0x557c>
   1918c:	b	19190 <main@@Base+0x5514>
   19190:	ldr	r0, [fp, #-8]
   19194:	ldr	r1, [fp, #-12]
   19198:	str	r1, [fp, #-28]	; 0xffffffe4
   1919c:	ldr	r2, [fp, #-16]
   191a0:	movw	r3, #1
   191a4:	bl	1d3a0 <main@@Base+0x9724>
   191a8:	str	r0, [fp, #-12]
   191ac:	ldr	r0, [fp, #-12]
   191b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   191b4:	cmp	r0, r1
   191b8:	beq	191e8 <main@@Base+0x556c>
   191bc:	ldr	r0, [fp, #-8]
   191c0:	ldr	r1, [fp, #-12]
   191c4:	ldr	r2, [fp, #-16]
   191c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   191cc:	ldr	ip, [fp, #8]
   191d0:	ldr	lr, [fp, #12]
   191d4:	str	ip, [sp]
   191d8:	str	lr, [sp, #4]
   191dc:	bl	1e4e0 <main@@Base+0xa864>
   191e0:	str	r0, [fp, #-12]
   191e4:	b	191f4 <main@@Base+0x5578>
   191e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191ec:	str	r0, [fp, #-4]
   191f0:	b	19254 <main@@Base+0x55d8>
   191f4:	b	19204 <main@@Base+0x5588>
   191f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191fc:	str	r0, [fp, #-4]
   19200:	b	19254 <main@@Base+0x55d8>
   19204:	b	19214 <main@@Base+0x5598>
   19208:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1920c:	str	r0, [fp, #-4]
   19210:	b	19254 <main@@Base+0x55d8>
   19214:	b	19224 <main@@Base+0x55a8>
   19218:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1921c:	str	r0, [fp, #-4]
   19220:	b	19254 <main@@Base+0x55d8>
   19224:	b	19234 <main@@Base+0x55b8>
   19228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1922c:	str	r0, [fp, #-4]
   19230:	b	19254 <main@@Base+0x55d8>
   19234:	b	19244 <main@@Base+0x55c8>
   19238:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1923c:	str	r0, [fp, #-4]
   19240:	b	19254 <main@@Base+0x55d8>
   19244:	b	19248 <main@@Base+0x55cc>
   19248:	b	1924c <main@@Base+0x55d0>
   1924c:	ldr	r0, [fp, #-12]
   19250:	str	r0, [fp, #-4]
   19254:	ldr	r0, [fp, #-4]
   19258:	mov	sp, fp
   1925c:	pop	{fp, pc}
   19260:	push	{r4, r5, fp, lr}
   19264:	add	fp, sp, #8
   19268:	sub	sp, sp, #56	; 0x38
   1926c:	str	r0, [fp, #-16]
   19270:	str	r1, [fp, #-20]	; 0xffffffec
   19274:	str	r2, [fp, #-24]	; 0xffffffe8
   19278:	str	r3, [fp, #-28]	; 0xffffffe4
   1927c:	mov	r0, #0
   19280:	str	r0, [sp, #28]
   19284:	str	r0, [sp, #24]
   19288:	movw	r0, #0
   1928c:	str	r0, [sp, #20]
   19290:	ldr	r0, [fp, #-20]	; 0xffffffec
   19294:	str	r0, [sp, #16]
   19298:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1929c:	movw	r1, #0
   192a0:	strb	r1, [r0]
   192a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   192a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   192ac:	cmp	r0, r1
   192b0:	bne	192c0 <main@@Base+0x5644>
   192b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   192b8:	str	r0, [fp, #-12]
   192bc:	b	19330 <main@@Base+0x56b4>
   192c0:	ldr	r0, [fp, #-16]
   192c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   192c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   192cc:	add	r3, sp, #20
   192d0:	add	ip, sp, #24
   192d4:	str	ip, [sp]
   192d8:	bl	2d564 <flatcc_json_parser_integer@@Base>
   192dc:	str	r0, [fp, #-20]	; 0xffffffec
   192e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   192e4:	ldr	r1, [sp, #16]
   192e8:	cmp	r0, r1
   192ec:	beq	19328 <main@@Base+0x56ac>
   192f0:	ldr	r0, [fp, #-16]
   192f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   192f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   192fc:	ldr	r3, [sp, #20]
   19300:	ldr	ip, [sp, #24]
   19304:	ldr	lr, [sp, #28]
   19308:	ldr	r4, [fp, #-28]	; 0xffffffe4
   1930c:	mov	r5, sp
   19310:	str	r4, [r5, #8]
   19314:	str	lr, [r5, #4]
   19318:	str	ip, [r5]
   1931c:	bl	1e6c8 <main@@Base+0xaa4c>
   19320:	str	r0, [fp, #-12]
   19324:	b	19330 <main@@Base+0x56b4>
   19328:	ldr	r0, [fp, #-20]	; 0xffffffec
   1932c:	str	r0, [fp, #-12]
   19330:	ldr	r0, [fp, #-12]
   19334:	sub	sp, fp, #8
   19338:	pop	{r4, r5, fp, pc}
   1933c:	push	{r4, r5, r6, sl, fp, lr}
   19340:	add	fp, sp, #16
   19344:	sub	sp, sp, #88	; 0x58
   19348:	ldr	ip, [fp, #8]
   1934c:	str	r0, [fp, #-24]	; 0xffffffe8
   19350:	str	r1, [fp, #-28]	; 0xffffffe4
   19354:	str	r2, [fp, #-32]	; 0xffffffe0
   19358:	str	r3, [fp, #-36]	; 0xffffffdc
   1935c:	movw	r0, #0
   19360:	strb	r0, [fp, #-45]	; 0xffffffd3
   19364:	movw	r1, #0
   19368:	str	r1, [sp, #36]	; 0x24
   1936c:	ldr	r1, [fp, #8]
   19370:	strb	r0, [r1]
   19374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19378:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1937c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19380:	str	ip, [sp, #32]
   19384:	bl	1e7b4 <main@@Base+0xab38>
   19388:	str	r0, [fp, #-28]	; 0xffffffe4
   1938c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19390:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19394:	cmp	r0, r1
   19398:	bne	193a8 <main@@Base+0x572c>
   1939c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   193a0:	str	r0, [fp, #-20]	; 0xffffffec
   193a4:	b	1955c <main@@Base+0x58e0>
   193a8:	b	193ac <main@@Base+0x5730>
   193ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   193b0:	str	r0, [fp, #-40]	; 0xffffffd8
   193b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   193b8:	ldr	r0, [r0]
   193bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   193c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   193c4:	str	r2, [fp, #-44]	; 0xffffffd4
   193c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   193cc:	str	r0, [sp, #28]
   193d0:	mov	r0, r1
   193d4:	mov	r1, r2
   193d8:	mov	r2, r3
   193dc:	add	r3, sp, #44	; 0x2c
   193e0:	add	ip, sp, #48	; 0x30
   193e4:	str	ip, [sp]
   193e8:	add	ip, sp, #40	; 0x28
   193ec:	str	ip, [sp, #4]
   193f0:	ldr	ip, [sp, #28]
   193f4:	blx	ip
   193f8:	str	r0, [fp, #-28]	; 0xffffffe4
   193fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19400:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19404:	cmp	r0, r1
   19408:	bne	19418 <main@@Base+0x579c>
   1940c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19410:	str	r0, [fp, #-20]	; 0xffffffec
   19414:	b	1955c <main@@Base+0x58e0>
   19418:	b	1941c <main@@Base+0x57a0>
   1941c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19420:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19424:	cmp	r0, r1
   19428:	movw	r0, #0
   1942c:	str	r0, [sp, #24]
   19430:	bne	19458 <main@@Base+0x57dc>
   19434:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19438:	add	r1, r0, #4
   1943c:	str	r1, [fp, #-40]	; 0xffffffd8
   19440:	ldr	r0, [r0, #4]
   19444:	movw	r1, #0
   19448:	cmp	r0, r1
   1944c:	movw	r0, #0
   19450:	movne	r0, #1
   19454:	str	r0, [sp, #24]
   19458:	ldr	r0, [sp, #24]
   1945c:	tst	r0, #1
   19460:	bne	193b4 <main@@Base+0x5738>
   19464:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19468:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1946c:	cmp	r0, r1
   19470:	bne	19490 <main@@Base+0x5814>
   19474:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19478:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1947c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19480:	movw	r3, #23
   19484:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   19488:	str	r0, [fp, #-20]	; 0xffffffec
   1948c:	b	1955c <main@@Base+0x58e0>
   19490:	ldr	r0, [sp, #36]	; 0x24
   19494:	add	r1, r0, #1
   19498:	str	r1, [sp, #36]	; 0x24
   1949c:	cmp	r0, #0
   194a0:	beq	194d0 <main@@Base+0x5854>
   194a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194a8:	ldr	r0, [r0, #12]
   194ac:	cmp	r0, #0
   194b0:	beq	194d0 <main@@Base+0x5854>
   194b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   194b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   194bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   194c0:	movw	r3, #14
   194c4:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   194c8:	str	r0, [fp, #-20]	; 0xffffffec
   194cc:	b	1955c <main@@Base+0x58e0>
   194d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   194d4:	mov	r1, r0
   194d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   194dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   194e0:	ldr	ip, [sp, #44]	; 0x2c
   194e4:	ldr	lr, [sp, #48]	; 0x30
   194e8:	ldr	r4, [sp, #52]	; 0x34
   194ec:	mov	r5, sp
   194f0:	sub	r6, fp, #45	; 0x2d
   194f4:	str	r6, [r5, #8]
   194f8:	str	r4, [r5, #4]
   194fc:	str	lr, [r5]
   19500:	str	r0, [sp, #20]
   19504:	mov	r0, r2
   19508:	str	r1, [sp, #16]
   1950c:	mov	r1, r3
   19510:	ldr	r2, [sp, #20]
   19514:	mov	r3, ip
   19518:	bl	1e6c8 <main@@Base+0xaa4c>
   1951c:	ldr	r1, [sp, #16]
   19520:	cmp	r1, r0
   19524:	bne	19534 <main@@Base+0x58b8>
   19528:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1952c:	str	r0, [fp, #-20]	; 0xffffffec
   19530:	b	1955c <main@@Base+0x58e0>
   19534:	ldrsb	r0, [fp, #-45]	; 0xffffffd3
   19538:	ldr	r1, [fp, #8]
   1953c:	ldrsb	r2, [r1]
   19540:	add	r0, r2, r0
   19544:	strb	r0, [r1]
   19548:	ldr	r0, [sp, #40]	; 0x28
   1954c:	cmp	r0, #0
   19550:	bne	193ac <main@@Base+0x5730>
   19554:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19558:	str	r0, [fp, #-20]	; 0xffffffec
   1955c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19560:	sub	sp, fp, #16
   19564:	pop	{r4, r5, r6, sl, fp, pc}
   19568:	push	{fp, lr}
   1956c:	mov	fp, sp
   19570:	sub	sp, sp, #8
   19574:	str	r0, [sp, #4]
   19578:	strb	r1, [sp, #3]
   1957c:	ldrsb	r0, [sp, #3]
   19580:	bl	1e810 <main@@Base+0xab94>
   19584:	ldr	r1, [sp, #4]
   19588:	strb	r0, [r1]
   1958c:	mov	sp, fp
   19590:	pop	{fp, pc}
   19594:	push	{fp, lr}
   19598:	mov	fp, sp
   1959c:	sub	sp, sp, #24
   195a0:	str	r0, [fp, #-8]
   195a4:	str	r1, [sp, #12]
   195a8:	str	r2, [sp, #8]
   195ac:	str	r3, [sp, #4]
   195b0:	ldr	r0, [sp, #12]
   195b4:	ldr	r1, [sp, #8]
   195b8:	cmp	r0, r1
   195bc:	beq	195d0 <main@@Base+0x5954>
   195c0:	ldr	r0, [sp, #12]
   195c4:	ldrb	r0, [r0]
   195c8:	cmp	r0, #91	; 0x5b
   195cc:	beq	195f8 <main@@Base+0x597c>
   195d0:	ldr	r0, [sp, #4]
   195d4:	movw	r1, #0
   195d8:	str	r1, [r0]
   195dc:	ldr	r0, [fp, #-8]
   195e0:	ldr	r1, [sp, #12]
   195e4:	ldr	r2, [sp, #8]
   195e8:	movw	r3, #22
   195ec:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   195f0:	str	r0, [fp, #-4]
   195f4:	b	1966c <main@@Base+0x59f0>
   195f8:	ldr	r0, [fp, #-8]
   195fc:	ldr	r1, [sp, #12]
   19600:	add	r1, r1, #1
   19604:	ldr	r2, [sp, #8]
   19608:	bl	1d190 <main@@Base+0x9514>
   1960c:	str	r0, [sp, #12]
   19610:	ldr	r0, [sp, #12]
   19614:	ldr	r1, [sp, #8]
   19618:	cmp	r0, r1
   1961c:	beq	19658 <main@@Base+0x59dc>
   19620:	ldr	r0, [sp, #12]
   19624:	ldrb	r0, [r0]
   19628:	cmp	r0, #93	; 0x5d
   1962c:	bne	19658 <main@@Base+0x59dc>
   19630:	ldr	r0, [sp, #4]
   19634:	movw	r1, #0
   19638:	str	r1, [r0]
   1963c:	ldr	r0, [fp, #-8]
   19640:	ldr	r1, [sp, #12]
   19644:	add	r1, r1, #1
   19648:	ldr	r2, [sp, #8]
   1964c:	bl	1d190 <main@@Base+0x9514>
   19650:	str	r0, [fp, #-4]
   19654:	b	1966c <main@@Base+0x59f0>
   19658:	ldr	r0, [sp, #4]
   1965c:	movw	r1, #1
   19660:	str	r1, [r0]
   19664:	ldr	r0, [sp, #12]
   19668:	str	r0, [fp, #-4]
   1966c:	ldr	r0, [fp, #-4]
   19670:	mov	sp, fp
   19674:	pop	{fp, pc}
   19678:	push	{r4, r5, fp, lr}
   1967c:	add	fp, sp, #8
   19680:	sub	sp, sp, #56	; 0x38
   19684:	str	r0, [fp, #-16]
   19688:	str	r1, [fp, #-20]	; 0xffffffec
   1968c:	str	r2, [fp, #-24]	; 0xffffffe8
   19690:	str	r3, [fp, #-28]	; 0xffffffe4
   19694:	mov	r0, #0
   19698:	str	r0, [sp, #28]
   1969c:	str	r0, [sp, #24]
   196a0:	movw	r0, #0
   196a4:	str	r0, [sp, #20]
   196a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   196ac:	str	r0, [sp, #16]
   196b0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   196b4:	movw	r1, #0
   196b8:	strb	r1, [r0]
   196bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   196c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   196c4:	cmp	r0, r1
   196c8:	bne	196d8 <main@@Base+0x5a5c>
   196cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   196d0:	str	r0, [fp, #-12]
   196d4:	b	19748 <main@@Base+0x5acc>
   196d8:	ldr	r0, [fp, #-16]
   196dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   196e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   196e4:	add	r3, sp, #20
   196e8:	add	ip, sp, #24
   196ec:	str	ip, [sp]
   196f0:	bl	2d564 <flatcc_json_parser_integer@@Base>
   196f4:	str	r0, [fp, #-20]	; 0xffffffec
   196f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   196fc:	ldr	r1, [sp, #16]
   19700:	cmp	r0, r1
   19704:	beq	19740 <main@@Base+0x5ac4>
   19708:	ldr	r0, [fp, #-16]
   1970c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19710:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19714:	ldr	r3, [sp, #20]
   19718:	ldr	ip, [sp, #24]
   1971c:	ldr	lr, [sp, #28]
   19720:	ldr	r4, [fp, #-28]	; 0xffffffe4
   19724:	mov	r5, sp
   19728:	str	r4, [r5, #8]
   1972c:	str	lr, [r5, #4]
   19730:	str	ip, [r5]
   19734:	bl	1e824 <main@@Base+0xaba8>
   19738:	str	r0, [fp, #-12]
   1973c:	b	19748 <main@@Base+0x5acc>
   19740:	ldr	r0, [fp, #-20]	; 0xffffffec
   19744:	str	r0, [fp, #-12]
   19748:	ldr	r0, [fp, #-12]
   1974c:	sub	sp, fp, #8
   19750:	pop	{r4, r5, fp, pc}
   19754:	push	{r4, r5, r6, sl, fp, lr}
   19758:	add	fp, sp, #16
   1975c:	sub	sp, sp, #88	; 0x58
   19760:	ldr	ip, [fp, #8]
   19764:	str	r0, [fp, #-24]	; 0xffffffe8
   19768:	str	r1, [fp, #-28]	; 0xffffffe4
   1976c:	str	r2, [fp, #-32]	; 0xffffffe0
   19770:	str	r3, [fp, #-36]	; 0xffffffdc
   19774:	movw	r0, #0
   19778:	strb	r0, [fp, #-45]	; 0xffffffd3
   1977c:	movw	r1, #0
   19780:	str	r1, [sp, #36]	; 0x24
   19784:	ldr	r1, [fp, #8]
   19788:	strb	r0, [r1]
   1978c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19790:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19794:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19798:	str	ip, [sp, #32]
   1979c:	bl	1e7b4 <main@@Base+0xab38>
   197a0:	str	r0, [fp, #-28]	; 0xffffffe4
   197a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   197a8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   197ac:	cmp	r0, r1
   197b0:	bne	197c0 <main@@Base+0x5b44>
   197b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   197b8:	str	r0, [fp, #-20]	; 0xffffffec
   197bc:	b	19974 <main@@Base+0x5cf8>
   197c0:	b	197c4 <main@@Base+0x5b48>
   197c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   197c8:	str	r0, [fp, #-40]	; 0xffffffd8
   197cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   197d0:	ldr	r0, [r0]
   197d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   197d8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   197dc:	str	r2, [fp, #-44]	; 0xffffffd4
   197e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   197e4:	str	r0, [sp, #28]
   197e8:	mov	r0, r1
   197ec:	mov	r1, r2
   197f0:	mov	r2, r3
   197f4:	add	r3, sp, #44	; 0x2c
   197f8:	add	ip, sp, #48	; 0x30
   197fc:	str	ip, [sp]
   19800:	add	ip, sp, #40	; 0x28
   19804:	str	ip, [sp, #4]
   19808:	ldr	ip, [sp, #28]
   1980c:	blx	ip
   19810:	str	r0, [fp, #-28]	; 0xffffffe4
   19814:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19818:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1981c:	cmp	r0, r1
   19820:	bne	19830 <main@@Base+0x5bb4>
   19824:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19828:	str	r0, [fp, #-20]	; 0xffffffec
   1982c:	b	19974 <main@@Base+0x5cf8>
   19830:	b	19834 <main@@Base+0x5bb8>
   19834:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19838:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1983c:	cmp	r0, r1
   19840:	movw	r0, #0
   19844:	str	r0, [sp, #24]
   19848:	bne	19870 <main@@Base+0x5bf4>
   1984c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19850:	add	r1, r0, #4
   19854:	str	r1, [fp, #-40]	; 0xffffffd8
   19858:	ldr	r0, [r0, #4]
   1985c:	movw	r1, #0
   19860:	cmp	r0, r1
   19864:	movw	r0, #0
   19868:	movne	r0, #1
   1986c:	str	r0, [sp, #24]
   19870:	ldr	r0, [sp, #24]
   19874:	tst	r0, #1
   19878:	bne	197cc <main@@Base+0x5b50>
   1987c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19880:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19884:	cmp	r0, r1
   19888:	bne	198a8 <main@@Base+0x5c2c>
   1988c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19890:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19894:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19898:	movw	r3, #23
   1989c:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   198a0:	str	r0, [fp, #-20]	; 0xffffffec
   198a4:	b	19974 <main@@Base+0x5cf8>
   198a8:	ldr	r0, [sp, #36]	; 0x24
   198ac:	add	r1, r0, #1
   198b0:	str	r1, [sp, #36]	; 0x24
   198b4:	cmp	r0, #0
   198b8:	beq	198e8 <main@@Base+0x5c6c>
   198bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198c0:	ldr	r0, [r0, #12]
   198c4:	cmp	r0, #0
   198c8:	beq	198e8 <main@@Base+0x5c6c>
   198cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   198d4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   198d8:	movw	r3, #14
   198dc:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   198e0:	str	r0, [fp, #-20]	; 0xffffffec
   198e4:	b	19974 <main@@Base+0x5cf8>
   198e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   198ec:	mov	r1, r0
   198f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   198f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   198f8:	ldr	ip, [sp, #44]	; 0x2c
   198fc:	ldr	lr, [sp, #48]	; 0x30
   19900:	ldr	r4, [sp, #52]	; 0x34
   19904:	mov	r5, sp
   19908:	sub	r6, fp, #45	; 0x2d
   1990c:	str	r6, [r5, #8]
   19910:	str	r4, [r5, #4]
   19914:	str	lr, [r5]
   19918:	str	r0, [sp, #20]
   1991c:	mov	r0, r2
   19920:	str	r1, [sp, #16]
   19924:	mov	r1, r3
   19928:	ldr	r2, [sp, #20]
   1992c:	mov	r3, ip
   19930:	bl	1e824 <main@@Base+0xaba8>
   19934:	ldr	r1, [sp, #16]
   19938:	cmp	r1, r0
   1993c:	bne	1994c <main@@Base+0x5cd0>
   19940:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19944:	str	r0, [fp, #-20]	; 0xffffffec
   19948:	b	19974 <main@@Base+0x5cf8>
   1994c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   19950:	ldr	r1, [fp, #8]
   19954:	ldrb	r2, [r1]
   19958:	add	r0, r2, r0
   1995c:	strb	r0, [r1]
   19960:	ldr	r0, [sp, #40]	; 0x28
   19964:	cmp	r0, #0
   19968:	bne	197c4 <main@@Base+0x5b48>
   1996c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19970:	str	r0, [fp, #-20]	; 0xffffffec
   19974:	ldr	r0, [fp, #-20]	; 0xffffffec
   19978:	sub	sp, fp, #16
   1997c:	pop	{r4, r5, r6, sl, fp, pc}
   19980:	push	{fp, lr}
   19984:	mov	fp, sp
   19988:	sub	sp, sp, #8
   1998c:	str	r0, [sp, #4]
   19990:	strb	r1, [sp, #3]
   19994:	ldrb	r0, [sp, #3]
   19998:	bl	1e8dc <main@@Base+0xac60>
   1999c:	ldr	r1, [sp, #4]
   199a0:	strb	r0, [r1]
   199a4:	mov	sp, fp
   199a8:	pop	{fp, pc}
   199ac:	push	{fp, lr}
   199b0:	mov	fp, sp
   199b4:	sub	sp, sp, #24
   199b8:	str	r0, [fp, #-8]
   199bc:	str	r1, [sp, #12]
   199c0:	str	r2, [sp, #8]
   199c4:	str	r3, [sp, #4]
   199c8:	ldr	r0, [fp, #-8]
   199cc:	ldr	r1, [sp, #12]
   199d0:	ldr	r2, [sp, #8]
   199d4:	bl	1d190 <main@@Base+0x9514>
   199d8:	str	r0, [sp, #12]
   199dc:	ldr	r0, [sp, #12]
   199e0:	ldr	r1, [sp, #8]
   199e4:	cmp	r0, r1
   199e8:	bne	19a04 <main@@Base+0x5d88>
   199ec:	ldr	r0, [sp, #4]
   199f0:	movw	r1, #0
   199f4:	str	r1, [r0]
   199f8:	ldr	r0, [sp, #12]
   199fc:	str	r0, [fp, #-4]
   19a00:	b	19b04 <main@@Base+0x5e88>
   19a04:	ldr	r0, [sp, #12]
   19a08:	ldrb	r0, [r0]
   19a0c:	cmp	r0, #44	; 0x2c
   19a10:	beq	19a68 <main@@Base+0x5dec>
   19a14:	ldr	r0, [sp, #4]
   19a18:	movw	r1, #0
   19a1c:	str	r1, [r0]
   19a20:	ldr	r0, [sp, #12]
   19a24:	ldrb	r0, [r0]
   19a28:	cmp	r0, #93	; 0x5d
   19a2c:	beq	19a4c <main@@Base+0x5dd0>
   19a30:	ldr	r0, [fp, #-8]
   19a34:	ldr	r1, [sp, #12]
   19a38:	ldr	r2, [sp, #8]
   19a3c:	movw	r3, #9
   19a40:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   19a44:	str	r0, [fp, #-4]
   19a48:	b	19b04 <main@@Base+0x5e88>
   19a4c:	ldr	r0, [fp, #-8]
   19a50:	ldr	r1, [sp, #12]
   19a54:	add	r1, r1, #1
   19a58:	ldr	r2, [sp, #8]
   19a5c:	bl	1d190 <main@@Base+0x9514>
   19a60:	str	r0, [fp, #-4]
   19a64:	b	19b04 <main@@Base+0x5e88>
   19a68:	ldr	r0, [fp, #-8]
   19a6c:	ldr	r1, [sp, #12]
   19a70:	add	r1, r1, #1
   19a74:	ldr	r2, [sp, #8]
   19a78:	bl	1d190 <main@@Base+0x9514>
   19a7c:	str	r0, [sp, #12]
   19a80:	ldr	r0, [sp, #12]
   19a84:	ldr	r1, [sp, #8]
   19a88:	cmp	r0, r1
   19a8c:	bne	19ab8 <main@@Base+0x5e3c>
   19a90:	ldr	r0, [sp, #4]
   19a94:	movw	r1, #0
   19a98:	str	r1, [r0]
   19a9c:	ldr	r0, [fp, #-8]
   19aa0:	ldr	r1, [sp, #12]
   19aa4:	ldr	r2, [sp, #8]
   19aa8:	movw	r3, #9
   19aac:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   19ab0:	str	r0, [fp, #-4]
   19ab4:	b	19b04 <main@@Base+0x5e88>
   19ab8:	ldr	r0, [sp, #12]
   19abc:	ldrb	r0, [r0]
   19ac0:	cmp	r0, #93	; 0x5d
   19ac4:	bne	19af0 <main@@Base+0x5e74>
   19ac8:	ldr	r0, [sp, #4]
   19acc:	movw	r1, #0
   19ad0:	str	r1, [r0]
   19ad4:	ldr	r0, [fp, #-8]
   19ad8:	ldr	r1, [sp, #12]
   19adc:	add	r1, r1, #1
   19ae0:	ldr	r2, [sp, #8]
   19ae4:	bl	1d190 <main@@Base+0x9514>
   19ae8:	str	r0, [fp, #-4]
   19aec:	b	19b04 <main@@Base+0x5e88>
   19af0:	ldr	r0, [sp, #4]
   19af4:	movw	r1, #1
   19af8:	str	r1, [r0]
   19afc:	ldr	r0, [sp, #12]
   19b00:	str	r0, [fp, #-4]
   19b04:	ldr	r0, [fp, #-4]
   19b08:	mov	sp, fp
   19b0c:	pop	{fp, pc}
   19b10:	push	{r4, r5, fp, lr}
   19b14:	add	fp, sp, #8
   19b18:	sub	sp, sp, #56	; 0x38
   19b1c:	str	r0, [fp, #-16]
   19b20:	str	r1, [fp, #-20]	; 0xffffffec
   19b24:	str	r2, [fp, #-24]	; 0xffffffe8
   19b28:	str	r3, [fp, #-28]	; 0xffffffe4
   19b2c:	mov	r0, #0
   19b30:	str	r0, [sp, #28]
   19b34:	str	r0, [sp, #24]
   19b38:	movw	r0, #0
   19b3c:	str	r0, [sp, #20]
   19b40:	ldr	r0, [fp, #-20]	; 0xffffffec
   19b44:	str	r0, [sp, #16]
   19b48:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19b4c:	movw	r1, #0
   19b50:	strh	r1, [r0]
   19b54:	ldr	r0, [fp, #-20]	; 0xffffffec
   19b58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19b5c:	cmp	r0, r1
   19b60:	bne	19b70 <main@@Base+0x5ef4>
   19b64:	ldr	r0, [fp, #-20]	; 0xffffffec
   19b68:	str	r0, [fp, #-12]
   19b6c:	b	19be0 <main@@Base+0x5f64>
   19b70:	ldr	r0, [fp, #-16]
   19b74:	ldr	r1, [fp, #-20]	; 0xffffffec
   19b78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19b7c:	add	r3, sp, #20
   19b80:	add	ip, sp, #24
   19b84:	str	ip, [sp]
   19b88:	bl	2d564 <flatcc_json_parser_integer@@Base>
   19b8c:	str	r0, [fp, #-20]	; 0xffffffec
   19b90:	ldr	r0, [fp, #-20]	; 0xffffffec
   19b94:	ldr	r1, [sp, #16]
   19b98:	cmp	r0, r1
   19b9c:	beq	19bd8 <main@@Base+0x5f5c>
   19ba0:	ldr	r0, [fp, #-16]
   19ba4:	ldr	r1, [fp, #-20]	; 0xffffffec
   19ba8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19bac:	ldr	r3, [sp, #20]
   19bb0:	ldr	ip, [sp, #24]
   19bb4:	ldr	lr, [sp, #28]
   19bb8:	ldr	r4, [fp, #-28]	; 0xffffffe4
   19bbc:	mov	r5, sp
   19bc0:	str	r4, [r5, #8]
   19bc4:	str	lr, [r5, #4]
   19bc8:	str	ip, [r5]
   19bcc:	bl	1e8f0 <main@@Base+0xac74>
   19bd0:	str	r0, [fp, #-12]
   19bd4:	b	19be0 <main@@Base+0x5f64>
   19bd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   19bdc:	str	r0, [fp, #-12]
   19be0:	ldr	r0, [fp, #-12]
   19be4:	sub	sp, fp, #8
   19be8:	pop	{r4, r5, fp, pc}
   19bec:	push	{r4, r5, r6, sl, fp, lr}
   19bf0:	add	fp, sp, #16
   19bf4:	sub	sp, sp, #88	; 0x58
   19bf8:	ldr	ip, [fp, #8]
   19bfc:	str	r0, [fp, #-24]	; 0xffffffe8
   19c00:	str	r1, [fp, #-28]	; 0xffffffe4
   19c04:	str	r2, [fp, #-32]	; 0xffffffe0
   19c08:	str	r3, [fp, #-36]	; 0xffffffdc
   19c0c:	movw	r0, #0
   19c10:	strh	r0, [fp, #-46]	; 0xffffffd2
   19c14:	movw	r1, #0
   19c18:	str	r1, [sp, #36]	; 0x24
   19c1c:	ldr	r1, [fp, #8]
   19c20:	strh	r0, [r1]
   19c24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19c28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19c2c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19c30:	str	ip, [sp, #32]
   19c34:	bl	1e7b4 <main@@Base+0xab38>
   19c38:	str	r0, [fp, #-28]	; 0xffffffe4
   19c3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19c40:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19c44:	cmp	r0, r1
   19c48:	bne	19c58 <main@@Base+0x5fdc>
   19c4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19c50:	str	r0, [fp, #-20]	; 0xffffffec
   19c54:	b	19e0c <main@@Base+0x6190>
   19c58:	b	19c5c <main@@Base+0x5fe0>
   19c5c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19c60:	str	r0, [fp, #-40]	; 0xffffffd8
   19c64:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19c68:	ldr	r0, [r0]
   19c6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19c70:	ldr	r2, [fp, #-28]	; 0xffffffe4
   19c74:	str	r2, [fp, #-44]	; 0xffffffd4
   19c78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19c7c:	str	r0, [sp, #28]
   19c80:	mov	r0, r1
   19c84:	mov	r1, r2
   19c88:	mov	r2, r3
   19c8c:	add	r3, sp, #44	; 0x2c
   19c90:	add	ip, sp, #48	; 0x30
   19c94:	str	ip, [sp]
   19c98:	add	ip, sp, #40	; 0x28
   19c9c:	str	ip, [sp, #4]
   19ca0:	ldr	ip, [sp, #28]
   19ca4:	blx	ip
   19ca8:	str	r0, [fp, #-28]	; 0xffffffe4
   19cac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19cb0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19cb4:	cmp	r0, r1
   19cb8:	bne	19cc8 <main@@Base+0x604c>
   19cbc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19cc0:	str	r0, [fp, #-20]	; 0xffffffec
   19cc4:	b	19e0c <main@@Base+0x6190>
   19cc8:	b	19ccc <main@@Base+0x6050>
   19ccc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19cd0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19cd4:	cmp	r0, r1
   19cd8:	movw	r0, #0
   19cdc:	str	r0, [sp, #24]
   19ce0:	bne	19d08 <main@@Base+0x608c>
   19ce4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19ce8:	add	r1, r0, #4
   19cec:	str	r1, [fp, #-40]	; 0xffffffd8
   19cf0:	ldr	r0, [r0, #4]
   19cf4:	movw	r1, #0
   19cf8:	cmp	r0, r1
   19cfc:	movw	r0, #0
   19d00:	movne	r0, #1
   19d04:	str	r0, [sp, #24]
   19d08:	ldr	r0, [sp, #24]
   19d0c:	tst	r0, #1
   19d10:	bne	19c64 <main@@Base+0x5fe8>
   19d14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19d18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19d1c:	cmp	r0, r1
   19d20:	bne	19d40 <main@@Base+0x60c4>
   19d24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19d2c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19d30:	movw	r3, #23
   19d34:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   19d38:	str	r0, [fp, #-20]	; 0xffffffec
   19d3c:	b	19e0c <main@@Base+0x6190>
   19d40:	ldr	r0, [sp, #36]	; 0x24
   19d44:	add	r1, r0, #1
   19d48:	str	r1, [sp, #36]	; 0x24
   19d4c:	cmp	r0, #0
   19d50:	beq	19d80 <main@@Base+0x6104>
   19d54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d58:	ldr	r0, [r0, #12]
   19d5c:	cmp	r0, #0
   19d60:	beq	19d80 <main@@Base+0x6104>
   19d64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19d6c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19d70:	movw	r3, #14
   19d74:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   19d78:	str	r0, [fp, #-20]	; 0xffffffec
   19d7c:	b	19e0c <main@@Base+0x6190>
   19d80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19d84:	mov	r1, r0
   19d88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19d8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19d90:	ldr	ip, [sp, #44]	; 0x2c
   19d94:	ldr	lr, [sp, #48]	; 0x30
   19d98:	ldr	r4, [sp, #52]	; 0x34
   19d9c:	mov	r5, sp
   19da0:	sub	r6, fp, #46	; 0x2e
   19da4:	str	r6, [r5, #8]
   19da8:	str	r4, [r5, #4]
   19dac:	str	lr, [r5]
   19db0:	str	r0, [sp, #20]
   19db4:	mov	r0, r2
   19db8:	str	r1, [sp, #16]
   19dbc:	mov	r1, r3
   19dc0:	ldr	r2, [sp, #20]
   19dc4:	mov	r3, ip
   19dc8:	bl	1e8f0 <main@@Base+0xac74>
   19dcc:	ldr	r1, [sp, #16]
   19dd0:	cmp	r1, r0
   19dd4:	bne	19de4 <main@@Base+0x6168>
   19dd8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19ddc:	str	r0, [fp, #-20]	; 0xffffffec
   19de0:	b	19e0c <main@@Base+0x6190>
   19de4:	ldrsh	r0, [fp, #-46]	; 0xffffffd2
   19de8:	ldr	r1, [fp, #8]
   19dec:	ldrsh	r2, [r1]
   19df0:	add	r0, r2, r0
   19df4:	strh	r0, [r1]
   19df8:	ldr	r0, [sp, #40]	; 0x28
   19dfc:	cmp	r0, #0
   19e00:	bne	19c5c <main@@Base+0x5fe0>
   19e04:	ldr	r0, [fp, #-28]	; 0xffffffe4
   19e08:	str	r0, [fp, #-20]	; 0xffffffec
   19e0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19e10:	sub	sp, fp, #16
   19e14:	pop	{r4, r5, r6, sl, fp, pc}
   19e18:	push	{fp, lr}
   19e1c:	mov	fp, sp
   19e20:	sub	sp, sp, #8
   19e24:	str	r0, [sp, #4]
   19e28:	strh	r1, [sp, #2]
   19e2c:	ldrsh	r0, [sp, #2]
   19e30:	bl	1e9e0 <main@@Base+0xad64>
   19e34:	ldr	r1, [sp, #4]
   19e38:	strh	r0, [r1]
   19e3c:	mov	sp, fp
   19e40:	pop	{fp, pc}
   19e44:	push	{fp, lr}
   19e48:	mov	fp, sp
   19e4c:	sub	sp, sp, #24
   19e50:	str	r0, [fp, #-8]
   19e54:	str	r1, [sp, #12]
   19e58:	str	r2, [sp, #8]
   19e5c:	str	r3, [sp, #4]
   19e60:	ldr	r0, [sp, #4]
   19e64:	movw	r1, #0
   19e68:	str	r1, [r0]
   19e6c:	ldr	r0, [fp, #-8]
   19e70:	ldr	r0, [r0]
   19e74:	bl	26068 <flatcc_builder_start_table@@Base>
   19e78:	cmp	r0, #0
   19e7c:	beq	19e84 <main@@Base+0x6208>
   19e80:	b	19f2c <main@@Base+0x62b0>
   19e84:	ldr	r0, [fp, #-8]
   19e88:	ldr	r1, [sp, #12]
   19e8c:	ldr	r2, [sp, #8]
   19e90:	mov	r3, sp
   19e94:	bl	17b1c <main@@Base+0x3ea0>
   19e98:	str	r0, [sp, #12]
   19e9c:	ldr	r0, [sp]
   19ea0:	cmp	r0, #0
   19ea4:	beq	19eec <main@@Base+0x6270>
   19ea8:	ldr	r0, [fp, #-8]
   19eac:	ldr	r1, [sp, #12]
   19eb0:	ldr	r2, [sp, #8]
   19eb4:	bl	17c00 <main@@Base+0x3f84>
   19eb8:	str	r0, [sp, #12]
   19ebc:	ldr	r0, [fp, #-8]
   19ec0:	ldr	r1, [sp, #12]
   19ec4:	ldr	r2, [sp, #8]
   19ec8:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   19ecc:	str	r0, [sp, #12]
   19ed0:	ldr	r0, [fp, #-8]
   19ed4:	ldr	r1, [sp, #12]
   19ed8:	ldr	r2, [sp, #8]
   19edc:	mov	r3, sp
   19ee0:	bl	1d02c <main@@Base+0x93b0>
   19ee4:	str	r0, [sp, #12]
   19ee8:	b	19e9c <main@@Base+0x6220>
   19eec:	ldr	r0, [fp, #-8]
   19ef0:	ldr	r0, [r0, #24]
   19ef4:	cmp	r0, #0
   19ef8:	beq	19f00 <main@@Base+0x6284>
   19efc:	b	19f2c <main@@Base+0x62b0>
   19f00:	ldr	r0, [fp, #-8]
   19f04:	ldr	r0, [r0]
   19f08:	bl	26ce0 <flatcc_builder_end_table@@Base>
   19f0c:	ldr	lr, [sp, #4]
   19f10:	str	r0, [lr]
   19f14:	cmp	r0, #0
   19f18:	bne	19f20 <main@@Base+0x62a4>
   19f1c:	b	19f2c <main@@Base+0x62b0>
   19f20:	ldr	r0, [sp, #12]
   19f24:	str	r0, [fp, #-4]
   19f28:	b	19f44 <main@@Base+0x62c8>
   19f2c:	ldr	r0, [fp, #-8]
   19f30:	ldr	r1, [sp, #12]
   19f34:	ldr	r2, [sp, #8]
   19f38:	movw	r3, #33	; 0x21
   19f3c:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   19f40:	str	r0, [fp, #-4]
   19f44:	ldr	r0, [fp, #-4]
   19f48:	mov	sp, fp
   19f4c:	pop	{fp, pc}
   19f50:	push	{fp, lr}
   19f54:	mov	fp, sp
   19f58:	sub	sp, sp, #88	; 0x58
   19f5c:	str	r0, [fp, #-8]
   19f60:	str	r1, [fp, #-12]
   19f64:	str	r2, [fp, #-16]
   19f68:	str	r3, [fp, #-20]	; 0xffffffec
   19f6c:	ldr	r0, [fp, #-8]
   19f70:	ldr	r1, [fp, #-12]
   19f74:	ldr	r2, [fp, #-16]
   19f78:	sub	r3, fp, #24
   19f7c:	bl	17b1c <main@@Base+0x3ea0>
   19f80:	str	r0, [fp, #-12]
   19f84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f88:	cmp	r0, #0
   19f8c:	beq	1a63c <main@@Base+0x69c0>
   19f90:	ldr	r0, [fp, #-8]
   19f94:	ldr	r1, [fp, #-12]
   19f98:	ldr	r2, [fp, #-16]
   19f9c:	bl	17c00 <main@@Base+0x3f84>
   19fa0:	str	r0, [fp, #-12]
   19fa4:	ldr	r0, [fp, #-12]
   19fa8:	ldr	r1, [fp, #-16]
   19fac:	bl	17cac <main@@Base+0x4030>
   19fb0:	str	r1, [sp, #44]	; 0x2c
   19fb4:	str	r0, [sp, #40]	; 0x28
   19fb8:	ldr	r0, [sp, #40]	; 0x28
   19fbc:	ldr	r1, [sp, #44]	; 0x2c
   19fc0:	mvn	r2, #-855638016	; 0xcd000000
   19fc4:	subs	r0, r2, r0
   19fc8:	movw	r2, #29556	; 0x7374
   19fcc:	movt	r2, #29797	; 0x7465
   19fd0:	sbcs	r1, r2, r1
   19fd4:	str	r0, [sp, #8]
   19fd8:	str	r1, [sp, #4]
   19fdc:	bcc	1a220 <main@@Base+0x65a4>
   19fe0:	b	19fe4 <main@@Base+0x6368>
   19fe4:	ldr	r0, [sp, #40]	; 0x28
   19fe8:	ldr	r1, [sp, #44]	; 0x2c
   19fec:	and	r0, r0, #-16777216	; 0xff000000
   19ff0:	movw	r2, #29556	; 0x7374
   19ff4:	movt	r2, #29797	; 0x7465
   19ff8:	eor	r1, r1, r2
   19ffc:	eor	r0, r0, #838860800	; 0x32000000
   1a000:	orr	r0, r0, r1
   1a004:	cmp	r0, #0
   1a008:	bne	1a0f4 <main@@Base+0x6478>
   1a00c:	b	1a010 <main@@Base+0x6394>
   1a010:	ldr	r0, [fp, #-8]
   1a014:	ldr	r1, [fp, #-12]
   1a018:	str	r1, [fp, #-36]	; 0xffffffdc
   1a01c:	ldr	r2, [fp, #-16]
   1a020:	movw	r3, #5
   1a024:	bl	17ce4 <main@@Base+0x4068>
   1a028:	str	r0, [fp, #-12]
   1a02c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a030:	ldr	r1, [fp, #-12]
   1a034:	cmp	r0, r1
   1a038:	beq	1a0dc <main@@Base+0x6460>
   1a03c:	movw	r0, #0
   1a040:	strb	r0, [sp, #39]	; 0x27
   1a044:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a048:	add	r0, r0, #24
   1a04c:	str	r0, [fp, #-32]	; 0xffffffe0
   1a050:	ldr	r0, [fp, #-8]
   1a054:	ldr	r1, [fp, #-12]
   1a058:	str	r1, [fp, #-36]	; 0xffffffdc
   1a05c:	ldr	r2, [fp, #-16]
   1a060:	add	r3, sp, #39	; 0x27
   1a064:	bl	19260 <main@@Base+0x55e4>
   1a068:	str	r0, [fp, #-12]
   1a06c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a070:	ldr	r1, [fp, #-12]
   1a074:	cmp	r0, r1
   1a078:	bne	1a0cc <main@@Base+0x6450>
   1a07c:	ldr	r0, [pc, #1532]	; 1a680 <main@@Base+0x6a04>
   1a080:	add	r3, pc, r0
   1a084:	ldr	r0, [fp, #-8]
   1a088:	ldr	r1, [fp, #-12]
   1a08c:	str	r1, [fp, #-36]	; 0xffffffdc
   1a090:	ldr	r2, [fp, #-16]
   1a094:	add	ip, sp, #39	; 0x27
   1a098:	str	ip, [sp]
   1a09c:	bl	1933c <main@@Base+0x56c0>
   1a0a0:	str	r0, [fp, #-12]
   1a0a4:	ldr	r0, [fp, #-12]
   1a0a8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a0ac:	cmp	r0, r1
   1a0b0:	beq	1a0c4 <main@@Base+0x6448>
   1a0b4:	ldr	r0, [fp, #-12]
   1a0b8:	ldr	r1, [fp, #-16]
   1a0bc:	cmp	r0, r1
   1a0c0:	bne	1a0c8 <main@@Base+0x644c>
   1a0c4:	b	1a648 <main@@Base+0x69cc>
   1a0c8:	b	1a0cc <main@@Base+0x6450>
   1a0cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a0d0:	ldrsb	r1, [sp, #39]	; 0x27
   1a0d4:	bl	19568 <main@@Base+0x58ec>
   1a0d8:	b	1a0f0 <main@@Base+0x6474>
   1a0dc:	ldr	r0, [fp, #-8]
   1a0e0:	ldr	r1, [fp, #-12]
   1a0e4:	ldr	r2, [fp, #-16]
   1a0e8:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1a0ec:	str	r0, [fp, #-12]
   1a0f0:	b	1a21c <main@@Base+0x65a0>
   1a0f4:	ldr	r0, [sp, #40]	; 0x28
   1a0f8:	ldr	r1, [sp, #44]	; 0x2c
   1a0fc:	and	r0, r0, #-16777216	; 0xff000000
   1a100:	movw	r2, #29556	; 0x7374
   1a104:	movt	r2, #29797	; 0x7465
   1a108:	eor	r1, r1, r2
   1a10c:	eor	r0, r0, #822083584	; 0x31000000
   1a110:	orr	r0, r0, r1
   1a114:	cmp	r0, #0
   1a118:	bne	1a204 <main@@Base+0x6588>
   1a11c:	b	1a120 <main@@Base+0x64a4>
   1a120:	ldr	r0, [fp, #-8]
   1a124:	ldr	r1, [fp, #-12]
   1a128:	str	r1, [fp, #-36]	; 0xffffffdc
   1a12c:	ldr	r2, [fp, #-16]
   1a130:	movw	r3, #5
   1a134:	bl	17ce4 <main@@Base+0x4068>
   1a138:	str	r0, [fp, #-12]
   1a13c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a140:	ldr	r1, [fp, #-12]
   1a144:	cmp	r0, r1
   1a148:	beq	1a1ec <main@@Base+0x6570>
   1a14c:	vldr	d16, [pc, #956]	; 1a510 <main@@Base+0x6894>
   1a150:	vstr	d16, [sp, #24]
   1a154:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a158:	add	r0, r0, #16
   1a15c:	str	r0, [fp, #-32]	; 0xffffffe0
   1a160:	ldr	r0, [fp, #-8]
   1a164:	ldr	r1, [fp, #-12]
   1a168:	str	r1, [fp, #-36]	; 0xffffffdc
   1a16c:	ldr	r2, [fp, #-16]
   1a170:	add	r3, sp, #24
   1a174:	bl	2c8b8 <flatcc_json_parser_double@@Base>
   1a178:	str	r0, [fp, #-12]
   1a17c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a180:	ldr	r1, [fp, #-12]
   1a184:	cmp	r0, r1
   1a188:	bne	1a1dc <main@@Base+0x6560>
   1a18c:	ldr	r0, [pc, #1256]	; 1a67c <main@@Base+0x6a00>
   1a190:	add	r3, pc, r0
   1a194:	ldr	r0, [fp, #-8]
   1a198:	ldr	r1, [fp, #-12]
   1a19c:	str	r1, [fp, #-36]	; 0xffffffdc
   1a1a0:	ldr	r2, [fp, #-16]
   1a1a4:	add	ip, sp, #24
   1a1a8:	str	ip, [sp]
   1a1ac:	bl	1cdc8 <main@@Base+0x914c>
   1a1b0:	str	r0, [fp, #-12]
   1a1b4:	ldr	r0, [fp, #-12]
   1a1b8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a1bc:	cmp	r0, r1
   1a1c0:	beq	1a1d4 <main@@Base+0x6558>
   1a1c4:	ldr	r0, [fp, #-12]
   1a1c8:	ldr	r1, [fp, #-16]
   1a1cc:	cmp	r0, r1
   1a1d0:	bne	1a1d8 <main@@Base+0x655c>
   1a1d4:	b	1a648 <main@@Base+0x69cc>
   1a1d8:	b	1a1dc <main@@Base+0x6560>
   1a1dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a1e0:	vldr	d0, [sp, #24]
   1a1e4:	bl	1d000 <main@@Base+0x9384>
   1a1e8:	b	1a200 <main@@Base+0x6584>
   1a1ec:	ldr	r0, [fp, #-8]
   1a1f0:	ldr	r1, [fp, #-12]
   1a1f4:	ldr	r2, [fp, #-16]
   1a1f8:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1a1fc:	str	r0, [fp, #-12]
   1a200:	b	1a218 <main@@Base+0x659c>
   1a204:	ldr	r0, [fp, #-8]
   1a208:	ldr	r1, [fp, #-12]
   1a20c:	ldr	r2, [fp, #-16]
   1a210:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1a214:	str	r0, [fp, #-12]
   1a218:	b	1a21c <main@@Base+0x65a0>
   1a21c:	b	1a620 <main@@Base+0x69a4>
   1a220:	ldr	r0, [sp, #44]	; 0x2c
   1a224:	cmn	r0, #-2013265919	; 0x88000001
   1a228:	bhi	1a2e0 <main@@Base+0x6664>
   1a22c:	b	1a230 <main@@Base+0x65b4>
   1a230:	ldr	r0, [sp, #40]	; 0x28
   1a234:	ldr	r1, [sp, #44]	; 0x2c
   1a238:	and	r0, r0, #-16777216	; 0xff000000
   1a23c:	movw	r2, #29556	; 0x7374
   1a240:	movt	r2, #29797	; 0x7465
   1a244:	eor	r1, r1, r2
   1a248:	eor	r0, r0, #855638016	; 0x33000000
   1a24c:	orr	r0, r0, r1
   1a250:	cmp	r0, #0
   1a254:	bne	1a2c8 <main@@Base+0x664c>
   1a258:	b	1a25c <main@@Base+0x65e0>
   1a25c:	ldr	r0, [fp, #-8]
   1a260:	ldr	r1, [fp, #-12]
   1a264:	str	r1, [fp, #-36]	; 0xffffffdc
   1a268:	ldr	r2, [fp, #-16]
   1a26c:	movw	r3, #5
   1a270:	bl	17ce4 <main@@Base+0x4068>
   1a274:	str	r0, [fp, #-12]
   1a278:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a27c:	ldr	r1, [fp, #-12]
   1a280:	cmp	r0, r1
   1a284:	beq	1a2b0 <main@@Base+0x6634>
   1a288:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a28c:	add	r0, r0, #26
   1a290:	str	r0, [fp, #-32]	; 0xffffffe0
   1a294:	ldr	r0, [fp, #-8]
   1a298:	ldr	r1, [fp, #-12]
   1a29c:	ldr	r2, [fp, #-16]
   1a2a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a2a4:	bl	1a684 <main@@Base+0x6a08>
   1a2a8:	str	r0, [fp, #-12]
   1a2ac:	b	1a2c4 <main@@Base+0x6648>
   1a2b0:	ldr	r0, [fp, #-8]
   1a2b4:	ldr	r1, [fp, #-12]
   1a2b8:	ldr	r2, [fp, #-16]
   1a2bc:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1a2c0:	str	r0, [fp, #-12]
   1a2c4:	b	1a2dc <main@@Base+0x6660>
   1a2c8:	ldr	r0, [fp, #-8]
   1a2cc:	ldr	r1, [fp, #-12]
   1a2d0:	ldr	r2, [fp, #-16]
   1a2d4:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1a2d8:	str	r0, [fp, #-12]
   1a2dc:	b	1a61c <main@@Base+0x69a0>
   1a2e0:	ldrb	r0, [sp, #47]	; 0x2f
   1a2e4:	cmp	r0, #120	; 0x78
   1a2e8:	bhi	1a400 <main@@Base+0x6784>
   1a2ec:	b	1a2f0 <main@@Base+0x6674>
   1a2f0:	ldr	r0, [sp, #44]	; 0x2c
   1a2f4:	and	r0, r0, #-16777216	; 0xff000000
   1a2f8:	teq	r0, #2013265920	; 0x78000000
   1a2fc:	bne	1a3e8 <main@@Base+0x676c>
   1a300:	b	1a304 <main@@Base+0x6688>
   1a304:	ldr	r0, [fp, #-8]
   1a308:	ldr	r1, [fp, #-12]
   1a30c:	str	r1, [fp, #-36]	; 0xffffffdc
   1a310:	ldr	r2, [fp, #-16]
   1a314:	movw	r3, #1
   1a318:	bl	17ce4 <main@@Base+0x4068>
   1a31c:	str	r0, [fp, #-12]
   1a320:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a324:	ldr	r1, [fp, #-12]
   1a328:	cmp	r0, r1
   1a32c:	beq	1a3d0 <main@@Base+0x6754>
   1a330:	vldr	s0, [pc, #820]	; 1a66c <main@@Base+0x69f0>
   1a334:	vstr	s0, [sp, #20]
   1a338:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a33c:	add	r0, r0, #0
   1a340:	str	r0, [fp, #-32]	; 0xffffffe0
   1a344:	ldr	r0, [fp, #-8]
   1a348:	ldr	r1, [fp, #-12]
   1a34c:	str	r1, [fp, #-36]	; 0xffffffdc
   1a350:	ldr	r2, [fp, #-16]
   1a354:	add	r3, sp, #20
   1a358:	bl	2ca78 <flatcc_json_parser_float@@Base>
   1a35c:	str	r0, [fp, #-12]
   1a360:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a364:	ldr	r1, [fp, #-12]
   1a368:	cmp	r0, r1
   1a36c:	bne	1a3c0 <main@@Base+0x6744>
   1a370:	ldr	r0, [pc, #768]	; 1a678 <main@@Base+0x69fc>
   1a374:	add	r3, pc, r0
   1a378:	ldr	r0, [fp, #-8]
   1a37c:	ldr	r1, [fp, #-12]
   1a380:	str	r1, [fp, #-36]	; 0xffffffdc
   1a384:	ldr	r2, [fp, #-16]
   1a388:	add	ip, sp, #20
   1a38c:	str	ip, [sp]
   1a390:	bl	1be74 <main@@Base+0x81f8>
   1a394:	str	r0, [fp, #-12]
   1a398:	ldr	r0, [fp, #-12]
   1a39c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a3a0:	cmp	r0, r1
   1a3a4:	beq	1a3b8 <main@@Base+0x673c>
   1a3a8:	ldr	r0, [fp, #-12]
   1a3ac:	ldr	r1, [fp, #-16]
   1a3b0:	cmp	r0, r1
   1a3b4:	bne	1a3bc <main@@Base+0x6740>
   1a3b8:	b	1a648 <main@@Base+0x69cc>
   1a3bc:	b	1a3c0 <main@@Base+0x6744>
   1a3c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a3c4:	vldr	s0, [sp, #20]
   1a3c8:	bl	1c0a4 <main@@Base+0x8428>
   1a3cc:	b	1a3e4 <main@@Base+0x6768>
   1a3d0:	ldr	r0, [fp, #-8]
   1a3d4:	ldr	r1, [fp, #-12]
   1a3d8:	ldr	r2, [fp, #-16]
   1a3dc:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1a3e0:	str	r0, [fp, #-12]
   1a3e4:	b	1a3fc <main@@Base+0x6780>
   1a3e8:	ldr	r0, [fp, #-8]
   1a3ec:	ldr	r1, [fp, #-12]
   1a3f0:	ldr	r2, [fp, #-16]
   1a3f4:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1a3f8:	str	r0, [fp, #-12]
   1a3fc:	b	1a618 <main@@Base+0x699c>
   1a400:	ldr	r0, [sp, #44]	; 0x2c
   1a404:	and	r0, r0, #-16777216	; 0xff000000
   1a408:	teq	r0, #2046820352	; 0x7a000000
   1a40c:	bne	1a4f8 <main@@Base+0x687c>
   1a410:	b	1a414 <main@@Base+0x6798>
   1a414:	ldr	r0, [fp, #-8]
   1a418:	ldr	r1, [fp, #-12]
   1a41c:	str	r1, [fp, #-36]	; 0xffffffdc
   1a420:	ldr	r2, [fp, #-16]
   1a424:	movw	r3, #1
   1a428:	bl	17ce4 <main@@Base+0x4068>
   1a42c:	str	r0, [fp, #-12]
   1a430:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a434:	ldr	r1, [fp, #-12]
   1a438:	cmp	r0, r1
   1a43c:	beq	1a4e0 <main@@Base+0x6864>
   1a440:	vldr	s0, [pc, #548]	; 1a66c <main@@Base+0x69f0>
   1a444:	vstr	s0, [sp, #16]
   1a448:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a44c:	add	r0, r0, #8
   1a450:	str	r0, [fp, #-32]	; 0xffffffe0
   1a454:	ldr	r0, [fp, #-8]
   1a458:	ldr	r1, [fp, #-12]
   1a45c:	str	r1, [fp, #-36]	; 0xffffffdc
   1a460:	ldr	r2, [fp, #-16]
   1a464:	add	r3, sp, #16
   1a468:	bl	2ca78 <flatcc_json_parser_float@@Base>
   1a46c:	str	r0, [fp, #-12]
   1a470:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a474:	ldr	r1, [fp, #-12]
   1a478:	cmp	r0, r1
   1a47c:	bne	1a4d0 <main@@Base+0x6854>
   1a480:	ldr	r0, [pc, #492]	; 1a674 <main@@Base+0x69f8>
   1a484:	add	r3, pc, r0
   1a488:	ldr	r0, [fp, #-8]
   1a48c:	ldr	r1, [fp, #-12]
   1a490:	str	r1, [fp, #-36]	; 0xffffffdc
   1a494:	ldr	r2, [fp, #-16]
   1a498:	add	ip, sp, #16
   1a49c:	str	ip, [sp]
   1a4a0:	bl	1be74 <main@@Base+0x81f8>
   1a4a4:	str	r0, [fp, #-12]
   1a4a8:	ldr	r0, [fp, #-12]
   1a4ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a4b0:	cmp	r0, r1
   1a4b4:	beq	1a4c8 <main@@Base+0x684c>
   1a4b8:	ldr	r0, [fp, #-12]
   1a4bc:	ldr	r1, [fp, #-16]
   1a4c0:	cmp	r0, r1
   1a4c4:	bne	1a4cc <main@@Base+0x6850>
   1a4c8:	b	1a648 <main@@Base+0x69cc>
   1a4cc:	b	1a4d0 <main@@Base+0x6854>
   1a4d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a4d4:	vldr	s0, [sp, #16]
   1a4d8:	bl	1c0a4 <main@@Base+0x8428>
   1a4dc:	b	1a4f4 <main@@Base+0x6878>
   1a4e0:	ldr	r0, [fp, #-8]
   1a4e4:	ldr	r1, [fp, #-12]
   1a4e8:	ldr	r2, [fp, #-16]
   1a4ec:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1a4f0:	str	r0, [fp, #-12]
   1a4f4:	b	1a614 <main@@Base+0x6998>
   1a4f8:	ldr	r0, [sp, #44]	; 0x2c
   1a4fc:	and	r0, r0, #-16777216	; 0xff000000
   1a500:	teq	r0, #2030043136	; 0x79000000
   1a504:	bne	1a5fc <main@@Base+0x6980>
   1a508:	b	1a518 <main@@Base+0x689c>
   1a50c:	nop	{0}
	...
   1a518:	ldr	r0, [fp, #-8]
   1a51c:	ldr	r1, [fp, #-12]
   1a520:	str	r1, [fp, #-36]	; 0xffffffdc
   1a524:	ldr	r2, [fp, #-16]
   1a528:	movw	r3, #1
   1a52c:	bl	17ce4 <main@@Base+0x4068>
   1a530:	str	r0, [fp, #-12]
   1a534:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a538:	ldr	r1, [fp, #-12]
   1a53c:	cmp	r0, r1
   1a540:	beq	1a5e4 <main@@Base+0x6968>
   1a544:	vldr	s0, [pc, #288]	; 1a66c <main@@Base+0x69f0>
   1a548:	vstr	s0, [sp, #12]
   1a54c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a550:	add	r0, r0, #4
   1a554:	str	r0, [fp, #-32]	; 0xffffffe0
   1a558:	ldr	r0, [fp, #-8]
   1a55c:	ldr	r1, [fp, #-12]
   1a560:	str	r1, [fp, #-36]	; 0xffffffdc
   1a564:	ldr	r2, [fp, #-16]
   1a568:	add	r3, sp, #12
   1a56c:	bl	2ca78 <flatcc_json_parser_float@@Base>
   1a570:	str	r0, [fp, #-12]
   1a574:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a578:	ldr	r1, [fp, #-12]
   1a57c:	cmp	r0, r1
   1a580:	bne	1a5d4 <main@@Base+0x6958>
   1a584:	ldr	r0, [pc, #228]	; 1a670 <main@@Base+0x69f4>
   1a588:	add	r3, pc, r0
   1a58c:	ldr	r0, [fp, #-8]
   1a590:	ldr	r1, [fp, #-12]
   1a594:	str	r1, [fp, #-36]	; 0xffffffdc
   1a598:	ldr	r2, [fp, #-16]
   1a59c:	add	ip, sp, #12
   1a5a0:	str	ip, [sp]
   1a5a4:	bl	1be74 <main@@Base+0x81f8>
   1a5a8:	str	r0, [fp, #-12]
   1a5ac:	ldr	r0, [fp, #-12]
   1a5b0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a5b4:	cmp	r0, r1
   1a5b8:	beq	1a5cc <main@@Base+0x6950>
   1a5bc:	ldr	r0, [fp, #-12]
   1a5c0:	ldr	r1, [fp, #-16]
   1a5c4:	cmp	r0, r1
   1a5c8:	bne	1a5d0 <main@@Base+0x6954>
   1a5cc:	b	1a648 <main@@Base+0x69cc>
   1a5d0:	b	1a5d4 <main@@Base+0x6958>
   1a5d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a5d8:	vldr	s0, [sp, #12]
   1a5dc:	bl	1c0a4 <main@@Base+0x8428>
   1a5e0:	b	1a5f8 <main@@Base+0x697c>
   1a5e4:	ldr	r0, [fp, #-8]
   1a5e8:	ldr	r1, [fp, #-12]
   1a5ec:	ldr	r2, [fp, #-16]
   1a5f0:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1a5f4:	str	r0, [fp, #-12]
   1a5f8:	b	1a610 <main@@Base+0x6994>
   1a5fc:	ldr	r0, [fp, #-8]
   1a600:	ldr	r1, [fp, #-12]
   1a604:	ldr	r2, [fp, #-16]
   1a608:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1a60c:	str	r0, [fp, #-12]
   1a610:	b	1a614 <main@@Base+0x6998>
   1a614:	b	1a618 <main@@Base+0x699c>
   1a618:	b	1a61c <main@@Base+0x69a0>
   1a61c:	b	1a620 <main@@Base+0x69a4>
   1a620:	ldr	r0, [fp, #-8]
   1a624:	ldr	r1, [fp, #-12]
   1a628:	ldr	r2, [fp, #-16]
   1a62c:	sub	r3, fp, #24
   1a630:	bl	1d02c <main@@Base+0x93b0>
   1a634:	str	r0, [fp, #-12]
   1a638:	b	19f84 <main@@Base+0x6308>
   1a63c:	ldr	r0, [fp, #-12]
   1a640:	str	r0, [fp, #-4]
   1a644:	b	1a660 <main@@Base+0x69e4>
   1a648:	ldr	r0, [fp, #-8]
   1a64c:	ldr	r1, [fp, #-12]
   1a650:	ldr	r2, [fp, #-16]
   1a654:	movw	r3, #33	; 0x21
   1a658:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1a65c:	str	r0, [fp, #-4]
   1a660:	ldr	r0, [fp, #-4]
   1a664:	mov	sp, fp
   1a668:	pop	{fp, pc}
   1a66c:	andeq	r0, r0, r0
   1a670:	andeq	r9, r2, r0, asr ip
   1a674:	andeq	r9, r2, r8, asr #26
   1a678:	andeq	r9, r2, ip, asr #28
   1a67c:	andeq	sl, r2, r4, lsr #32
   1a680:	andeq	sl, r2, r4, lsr #2
   1a684:	push	{fp, lr}
   1a688:	mov	fp, sp
   1a68c:	sub	sp, sp, #56	; 0x38
   1a690:	str	r0, [fp, #-8]
   1a694:	str	r1, [fp, #-12]
   1a698:	str	r2, [fp, #-16]
   1a69c:	str	r3, [fp, #-20]	; 0xffffffec
   1a6a0:	ldr	r0, [fp, #-8]
   1a6a4:	ldr	r1, [fp, #-12]
   1a6a8:	ldr	r2, [fp, #-16]
   1a6ac:	sub	r3, fp, #24
   1a6b0:	bl	17b1c <main@@Base+0x3ea0>
   1a6b4:	str	r0, [fp, #-12]
   1a6b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a6bc:	cmp	r0, #0
   1a6c0:	beq	1a910 <main@@Base+0x6c94>
   1a6c4:	ldr	r0, [fp, #-8]
   1a6c8:	ldr	r1, [fp, #-12]
   1a6cc:	ldr	r2, [fp, #-16]
   1a6d0:	bl	17c00 <main@@Base+0x3f84>
   1a6d4:	str	r0, [fp, #-12]
   1a6d8:	ldr	r0, [fp, #-12]
   1a6dc:	ldr	r1, [fp, #-16]
   1a6e0:	bl	17cac <main@@Base+0x4030>
   1a6e4:	str	r1, [sp, #12]
   1a6e8:	str	r0, [sp, #8]
   1a6ec:	ldr	r0, [sp, #12]
   1a6f0:	and	r0, r0, #-16777216	; 0xff000000
   1a6f4:	teq	r0, #1644167168	; 0x62000000
   1a6f8:	bne	1a7e4 <main@@Base+0x6b68>
   1a6fc:	b	1a700 <main@@Base+0x6a84>
   1a700:	ldr	r0, [fp, #-8]
   1a704:	ldr	r1, [fp, #-12]
   1a708:	str	r1, [sp, #20]
   1a70c:	ldr	r2, [fp, #-16]
   1a710:	movw	r3, #1
   1a714:	bl	17ce4 <main@@Base+0x4068>
   1a718:	str	r0, [fp, #-12]
   1a71c:	ldr	r0, [sp, #20]
   1a720:	ldr	r1, [fp, #-12]
   1a724:	cmp	r0, r1
   1a728:	beq	1a7cc <main@@Base+0x6b50>
   1a72c:	movw	r0, #0
   1a730:	strb	r0, [sp, #7]
   1a734:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a738:	add	r0, r0, #2
   1a73c:	str	r0, [sp, #24]
   1a740:	ldr	r0, [fp, #-8]
   1a744:	ldr	r1, [fp, #-12]
   1a748:	str	r1, [sp, #20]
   1a74c:	ldr	r2, [fp, #-16]
   1a750:	add	r3, sp, #7
   1a754:	bl	19260 <main@@Base+0x55e4>
   1a758:	str	r0, [fp, #-12]
   1a75c:	ldr	r0, [sp, #20]
   1a760:	ldr	r1, [fp, #-12]
   1a764:	cmp	r0, r1
   1a768:	bne	1a7bc <main@@Base+0x6b40>
   1a76c:	ldr	r0, [pc, #464]	; 1a944 <main@@Base+0x6cc8>
   1a770:	add	r3, pc, r0
   1a774:	ldr	r0, [fp, #-8]
   1a778:	ldr	r1, [fp, #-12]
   1a77c:	str	r1, [sp, #20]
   1a780:	ldr	r2, [fp, #-16]
   1a784:	add	ip, sp, #7
   1a788:	str	ip, [sp]
   1a78c:	bl	1933c <main@@Base+0x56c0>
   1a790:	str	r0, [fp, #-12]
   1a794:	ldr	r0, [fp, #-12]
   1a798:	ldr	r1, [sp, #20]
   1a79c:	cmp	r0, r1
   1a7a0:	beq	1a7b4 <main@@Base+0x6b38>
   1a7a4:	ldr	r0, [fp, #-12]
   1a7a8:	ldr	r1, [fp, #-16]
   1a7ac:	cmp	r0, r1
   1a7b0:	bne	1a7b8 <main@@Base+0x6b3c>
   1a7b4:	b	1a91c <main@@Base+0x6ca0>
   1a7b8:	b	1a7bc <main@@Base+0x6b40>
   1a7bc:	ldr	r0, [sp, #24]
   1a7c0:	ldrsb	r1, [sp, #7]
   1a7c4:	bl	19568 <main@@Base+0x58ec>
   1a7c8:	b	1a7e0 <main@@Base+0x6b64>
   1a7cc:	ldr	r0, [fp, #-8]
   1a7d0:	ldr	r1, [fp, #-12]
   1a7d4:	ldr	r2, [fp, #-16]
   1a7d8:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1a7dc:	str	r0, [fp, #-12]
   1a7e0:	b	1a8f4 <main@@Base+0x6c78>
   1a7e4:	ldr	r0, [sp, #12]
   1a7e8:	and	r0, r0, #-16777216	; 0xff000000
   1a7ec:	teq	r0, #1627389952	; 0x61000000
   1a7f0:	bne	1a8dc <main@@Base+0x6c60>
   1a7f4:	b	1a7f8 <main@@Base+0x6b7c>
   1a7f8:	ldr	r0, [fp, #-8]
   1a7fc:	ldr	r1, [fp, #-12]
   1a800:	str	r1, [sp, #20]
   1a804:	ldr	r2, [fp, #-16]
   1a808:	movw	r3, #1
   1a80c:	bl	17ce4 <main@@Base+0x4068>
   1a810:	str	r0, [fp, #-12]
   1a814:	ldr	r0, [sp, #20]
   1a818:	ldr	r1, [fp, #-12]
   1a81c:	cmp	r0, r1
   1a820:	beq	1a8c4 <main@@Base+0x6c48>
   1a824:	movw	r0, #0
   1a828:	strh	r0, [sp, #4]
   1a82c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a830:	add	r0, r0, #0
   1a834:	str	r0, [sp, #24]
   1a838:	ldr	r0, [fp, #-8]
   1a83c:	ldr	r1, [fp, #-12]
   1a840:	str	r1, [sp, #20]
   1a844:	ldr	r2, [fp, #-16]
   1a848:	add	r3, sp, #4
   1a84c:	bl	19b10 <main@@Base+0x5e94>
   1a850:	str	r0, [fp, #-12]
   1a854:	ldr	r0, [sp, #20]
   1a858:	ldr	r1, [fp, #-12]
   1a85c:	cmp	r0, r1
   1a860:	bne	1a8b4 <main@@Base+0x6c38>
   1a864:	ldr	r0, [pc, #212]	; 1a940 <main@@Base+0x6cc4>
   1a868:	add	r3, pc, r0
   1a86c:	ldr	r0, [fp, #-8]
   1a870:	ldr	r1, [fp, #-12]
   1a874:	str	r1, [sp, #20]
   1a878:	ldr	r2, [fp, #-16]
   1a87c:	add	ip, sp, #4
   1a880:	str	ip, [sp]
   1a884:	bl	19bec <main@@Base+0x5f70>
   1a888:	str	r0, [fp, #-12]
   1a88c:	ldr	r0, [fp, #-12]
   1a890:	ldr	r1, [sp, #20]
   1a894:	cmp	r0, r1
   1a898:	beq	1a8ac <main@@Base+0x6c30>
   1a89c:	ldr	r0, [fp, #-12]
   1a8a0:	ldr	r1, [fp, #-16]
   1a8a4:	cmp	r0, r1
   1a8a8:	bne	1a8b0 <main@@Base+0x6c34>
   1a8ac:	b	1a91c <main@@Base+0x6ca0>
   1a8b0:	b	1a8b4 <main@@Base+0x6c38>
   1a8b4:	ldr	r0, [sp, #24]
   1a8b8:	ldrsh	r1, [sp, #4]
   1a8bc:	bl	19e18 <main@@Base+0x619c>
   1a8c0:	b	1a8d8 <main@@Base+0x6c5c>
   1a8c4:	ldr	r0, [fp, #-8]
   1a8c8:	ldr	r1, [fp, #-12]
   1a8cc:	ldr	r2, [fp, #-16]
   1a8d0:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1a8d4:	str	r0, [fp, #-12]
   1a8d8:	b	1a8f0 <main@@Base+0x6c74>
   1a8dc:	ldr	r0, [fp, #-8]
   1a8e0:	ldr	r1, [fp, #-12]
   1a8e4:	ldr	r2, [fp, #-16]
   1a8e8:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1a8ec:	str	r0, [fp, #-12]
   1a8f0:	b	1a8f4 <main@@Base+0x6c78>
   1a8f4:	ldr	r0, [fp, #-8]
   1a8f8:	ldr	r1, [fp, #-12]
   1a8fc:	ldr	r2, [fp, #-16]
   1a900:	sub	r3, fp, #24
   1a904:	bl	1d02c <main@@Base+0x93b0>
   1a908:	str	r0, [fp, #-12]
   1a90c:	b	1a6b8 <main@@Base+0x6a3c>
   1a910:	ldr	r0, [fp, #-12]
   1a914:	str	r0, [fp, #-4]
   1a918:	b	1a934 <main@@Base+0x6cb8>
   1a91c:	ldr	r0, [fp, #-8]
   1a920:	ldr	r1, [fp, #-12]
   1a924:	ldr	r2, [fp, #-16]
   1a928:	movw	r3, #33	; 0x21
   1a92c:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1a930:	str	r0, [fp, #-4]
   1a934:	ldr	r0, [fp, #-4]
   1a938:	mov	sp, fp
   1a93c:	pop	{fp, pc}
   1a940:	andeq	r9, r2, r8, lsl #19
   1a944:	andeq	r9, r2, r4, ror sl
   1a948:	push	{fp, lr}
   1a94c:	mov	fp, sp
   1a950:	sub	sp, sp, #32
   1a954:	ldr	ip, [fp, #8]
   1a958:	str	r0, [fp, #-8]
   1a95c:	str	r1, [fp, #-12]
   1a960:	str	r2, [sp, #16]
   1a964:	strb	r3, [sp, #15]
   1a968:	ldr	r0, [fp, #8]
   1a96c:	mov	r1, #0
   1a970:	str	r1, [r0]
   1a974:	ldrb	r0, [sp, #15]
   1a978:	mov	r1, r0
   1a97c:	cmp	r0, #4
   1a980:	str	ip, [sp, #8]
   1a984:	str	r1, [sp, #4]
   1a988:	bhi	1aa38 <main@@Base+0x6dbc>
   1a98c:	add	r0, pc, #8
   1a990:	ldr	r1, [sp, #4]
   1a994:	ldr	r2, [r0, r1, lsl #2]
   1a998:	add	pc, r0, r2
   1a99c:	andeq	r0, r0, r4, lsl r0
   1a9a0:	andeq	r0, r0, ip, lsr #32
   1a9a4:	andeq	r0, r0, r8, asr #32
   1a9a8:	andeq	r0, r0, r4, rrx
   1a9ac:	andeq	r0, r0, r0, lsl #1
   1a9b0:	ldr	r0, [fp, #-8]
   1a9b4:	ldr	r1, [fp, #-12]
   1a9b8:	ldr	r2, [sp, #16]
   1a9bc:	bl	1e9f4 <main@@Base+0xad78>
   1a9c0:	str	r0, [fp, #-4]
   1a9c4:	b	1aad0 <main@@Base+0x6e54>
   1a9c8:	ldr	r0, [fp, #-8]
   1a9cc:	ldr	r1, [fp, #-12]
   1a9d0:	ldr	r2, [sp, #16]
   1a9d4:	ldr	r3, [fp, #8]
   1a9d8:	bl	140b0 <main@@Base+0x434>
   1a9dc:	str	r0, [fp, #-12]
   1a9e0:	b	1aa80 <main@@Base+0x6e04>
   1a9e4:	ldr	r0, [fp, #-8]
   1a9e8:	ldr	r1, [fp, #-12]
   1a9ec:	ldr	r2, [sp, #16]
   1a9f0:	ldr	r3, [fp, #8]
   1a9f4:	bl	1ea80 <main@@Base+0xae04>
   1a9f8:	str	r0, [fp, #-12]
   1a9fc:	b	1aa80 <main@@Base+0x6e04>
   1aa00:	ldr	r0, [fp, #-8]
   1aa04:	ldr	r1, [fp, #-12]
   1aa08:	ldr	r2, [sp, #16]
   1aa0c:	ldr	r3, [fp, #8]
   1aa10:	bl	1f0e0 <main@@Base+0xb464>
   1aa14:	str	r0, [fp, #-12]
   1aa18:	b	1aa80 <main@@Base+0x6e04>
   1aa1c:	ldr	r0, [fp, #-8]
   1aa20:	ldr	r1, [fp, #-12]
   1aa24:	ldr	r2, [sp, #16]
   1aa28:	ldr	r3, [fp, #8]
   1aa2c:	bl	1f1ec <main@@Base+0xb570>
   1aa30:	str	r0, [fp, #-12]
   1aa34:	b	1aa80 <main@@Base+0x6e04>
   1aa38:	ldr	r0, [fp, #-8]
   1aa3c:	ldr	r0, [r0, #8]
   1aa40:	and	r0, r0, #1
   1aa44:	cmp	r0, #0
   1aa48:	bne	1aa68 <main@@Base+0x6dec>
   1aa4c:	ldr	r0, [fp, #-8]
   1aa50:	ldr	r1, [fp, #-12]
   1aa54:	ldr	r2, [sp, #16]
   1aa58:	movw	r3, #15
   1aa5c:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1aa60:	str	r0, [fp, #-4]
   1aa64:	b	1aad0 <main@@Base+0x6e54>
   1aa68:	ldr	r0, [fp, #-8]
   1aa6c:	ldr	r1, [fp, #-12]
   1aa70:	ldr	r2, [sp, #16]
   1aa74:	bl	2c2c0 <flatcc_json_parser_generic_json@@Base>
   1aa78:	str	r0, [fp, #-4]
   1aa7c:	b	1aad0 <main@@Base+0x6e54>
   1aa80:	ldr	r0, [fp, #-8]
   1aa84:	ldr	r0, [r0, #24]
   1aa88:	cmp	r0, #0
   1aa8c:	beq	1aa9c <main@@Base+0x6e20>
   1aa90:	ldr	r0, [fp, #-12]
   1aa94:	str	r0, [fp, #-4]
   1aa98:	b	1aad0 <main@@Base+0x6e54>
   1aa9c:	ldr	r0, [fp, #8]
   1aaa0:	ldr	r0, [r0]
   1aaa4:	cmp	r0, #0
   1aaa8:	bne	1aac8 <main@@Base+0x6e4c>
   1aaac:	ldr	r0, [fp, #-8]
   1aab0:	ldr	r1, [fp, #-12]
   1aab4:	ldr	r2, [sp, #16]
   1aab8:	movw	r3, #33	; 0x21
   1aabc:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1aac0:	str	r0, [fp, #-4]
   1aac4:	b	1aad0 <main@@Base+0x6e54>
   1aac8:	ldr	r0, [fp, #-12]
   1aacc:	str	r0, [fp, #-4]
   1aad0:	ldr	r0, [fp, #-4]
   1aad4:	mov	sp, fp
   1aad8:	pop	{fp, pc}
   1aadc:	push	{fp, lr}
   1aae0:	mov	fp, sp
   1aae4:	sub	sp, sp, #80	; 0x50
   1aae8:	ldr	ip, [fp, #12]
   1aaec:	ldr	lr, [fp, #8]
   1aaf0:	str	r0, [fp, #-8]
   1aaf4:	str	r1, [fp, #-12]
   1aaf8:	str	r2, [fp, #-16]
   1aafc:	str	r3, [fp, #-20]	; 0xffffffec
   1ab00:	ldr	r0, [fp, #-12]
   1ab04:	str	r0, [fp, #-24]	; 0xffffffe8
   1ab08:	ldr	r0, [fp, #-12]
   1ab0c:	ldr	r1, [fp, #-16]
   1ab10:	str	lr, [sp, #36]	; 0x24
   1ab14:	str	ip, [sp, #32]
   1ab18:	bl	17cac <main@@Base+0x4030>
   1ab1c:	str	r1, [sp, #44]	; 0x2c
   1ab20:	str	r0, [sp, #40]	; 0x28
   1ab24:	ldr	r0, [sp, #40]	; 0x28
   1ab28:	ldr	r1, [sp, #44]	; 0x2c
   1ab2c:	movw	r2, #29183	; 0x71ff
   1ab30:	movt	r2, #29797	; 0x7465
   1ab34:	subs	r0, r2, r0
   1ab38:	movw	r2, #28275	; 0x6e73
   1ab3c:	movt	r2, #19823	; 0x4d6f
   1ab40:	sbcs	r1, r2, r1
   1ab44:	str	r0, [sp, #28]
   1ab48:	str	r1, [sp, #24]
   1ab4c:	bcc	1abf4 <main@@Base+0x6f78>
   1ab50:	b	1ab54 <main@@Base+0x6ed8>
   1ab54:	ldr	r0, [sp, #44]	; 0x2c
   1ab58:	bic	r0, r0, #255	; 0xff
   1ab5c:	movw	r1, #29696	; 0x7400
   1ab60:	movt	r1, #16748	; 0x416c
   1ab64:	teq	r0, r1
   1ab68:	bne	1abe4 <main@@Base+0x6f68>
   1ab6c:	b	1ab70 <main@@Base+0x6ef4>
   1ab70:	ldr	r0, [fp, #-8]
   1ab74:	ldr	r1, [fp, #-12]
   1ab78:	str	r1, [fp, #-28]	; 0xffffffe4
   1ab7c:	ldr	r2, [fp, #-16]
   1ab80:	ldr	r3, [fp, #12]
   1ab84:	movw	ip, #3
   1ab88:	str	r3, [sp, #20]
   1ab8c:	mov	r3, ip
   1ab90:	ldr	ip, [sp, #20]
   1ab94:	str	ip, [sp]
   1ab98:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   1ab9c:	str	r0, [fp, #-12]
   1aba0:	ldr	r0, [fp, #-12]
   1aba4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aba8:	cmp	r0, r1
   1abac:	beq	1abd4 <main@@Base+0x6f58>
   1abb0:	ldr	r0, [fp, #8]
   1abb4:	mov	r1, #0
   1abb8:	str	r1, [r0, #4]
   1abbc:	mov	r1, #4
   1abc0:	str	r1, [r0]
   1abc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1abc8:	movw	r1, #0
   1abcc:	str	r1, [r0]
   1abd0:	b	1abe0 <main@@Base+0x6f64>
   1abd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1abd8:	str	r0, [fp, #-4]
   1abdc:	b	1af54 <main@@Base+0x72d8>
   1abe0:	b	1abf0 <main@@Base+0x6f74>
   1abe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1abe8:	str	r0, [fp, #-4]
   1abec:	b	1af54 <main@@Base+0x72d8>
   1abf0:	b	1af4c <main@@Base+0x72d0>
   1abf4:	ldr	r0, [sp, #40]	; 0x28
   1abf8:	ldr	r1, [sp, #44]	; 0x2c
   1abfc:	movw	r2, #28275	; 0x6e73
   1ac00:	movt	r2, #19823	; 0x4d6f
   1ac04:	eor	r1, r1, r2
   1ac08:	movw	r2, #29234	; 0x7232
   1ac0c:	movt	r2, #29797	; 0x7465
   1ac10:	eor	r0, r0, r2
   1ac14:	orr	r0, r0, r1
   1ac18:	cmp	r0, #0
   1ac1c:	bne	1ac90 <main@@Base+0x7014>
   1ac20:	b	1ac24 <main@@Base+0x6fa8>
   1ac24:	ldr	r0, [fp, #-8]
   1ac28:	ldr	r1, [fp, #-12]
   1ac2c:	str	r1, [fp, #-28]	; 0xffffffe4
   1ac30:	ldr	r2, [fp, #-16]
   1ac34:	ldr	r3, [fp, #12]
   1ac38:	movw	ip, #8
   1ac3c:	str	r3, [sp, #16]
   1ac40:	mov	r3, ip
   1ac44:	ldr	ip, [sp, #16]
   1ac48:	str	ip, [sp]
   1ac4c:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   1ac50:	str	r0, [fp, #-12]
   1ac54:	ldr	r0, [fp, #-12]
   1ac58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ac5c:	cmp	r0, r1
   1ac60:	beq	1ac88 <main@@Base+0x700c>
   1ac64:	ldr	r0, [fp, #8]
   1ac68:	mov	r1, #0
   1ac6c:	str	r1, [r0, #4]
   1ac70:	mov	r1, #3
   1ac74:	str	r1, [r0]
   1ac78:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ac7c:	movw	r1, #0
   1ac80:	str	r1, [r0]
   1ac84:	b	1ac8c <main@@Base+0x7010>
   1ac88:	b	1ad40 <main@@Base+0x70c4>
   1ac8c:	b	1ad3c <main@@Base+0x70c0>
   1ac90:	ldr	r0, [sp, #40]	; 0x28
   1ac94:	ldr	r1, [sp, #44]	; 0x2c
   1ac98:	movw	r2, #28526	; 0x6f6e
   1ac9c:	movt	r2, #77	; 0x4d
   1aca0:	eor	r2, r2, r1, lsr #8
   1aca4:	lsr	r0, r0, #8
   1aca8:	orr	r0, r0, r1, lsl #24
   1acac:	movw	r1, #25970	; 0x6572
   1acb0:	movt	r1, #29556	; 0x7374
   1acb4:	eor	r0, r0, r1
   1acb8:	orr	r0, r0, r2
   1acbc:	cmp	r0, #0
   1acc0:	bne	1ad34 <main@@Base+0x70b8>
   1acc4:	b	1acc8 <main@@Base+0x704c>
   1acc8:	ldr	r0, [fp, #-8]
   1accc:	ldr	r1, [fp, #-12]
   1acd0:	str	r1, [fp, #-28]	; 0xffffffe4
   1acd4:	ldr	r2, [fp, #-16]
   1acd8:	ldr	r3, [fp, #12]
   1acdc:	movw	ip, #7
   1ace0:	str	r3, [sp, #12]
   1ace4:	mov	r3, ip
   1ace8:	ldr	ip, [sp, #12]
   1acec:	str	ip, [sp]
   1acf0:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   1acf4:	str	r0, [fp, #-12]
   1acf8:	ldr	r0, [fp, #-12]
   1acfc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ad00:	cmp	r0, r1
   1ad04:	beq	1ad2c <main@@Base+0x70b0>
   1ad08:	ldr	r0, [fp, #8]
   1ad0c:	mov	r1, #0
   1ad10:	str	r1, [r0, #4]
   1ad14:	mov	r1, #1
   1ad18:	str	r1, [r0]
   1ad1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ad20:	movw	r1, #0
   1ad24:	str	r1, [r0]
   1ad28:	b	1ad30 <main@@Base+0x70b4>
   1ad2c:	b	1ad40 <main@@Base+0x70c4>
   1ad30:	b	1ad38 <main@@Base+0x70bc>
   1ad34:	b	1ad40 <main@@Base+0x70c4>
   1ad38:	b	1ad3c <main@@Base+0x70c0>
   1ad3c:	b	1af48 <main@@Base+0x72cc>
   1ad40:	ldr	r0, [sp, #44]	; 0x2c
   1ad44:	movw	r1, #20037	; 0x4e45
   1ad48:	movt	r1, #20047	; 0x4e4f
   1ad4c:	teq	r0, r1
   1ad50:	bne	1adc0 <main@@Base+0x7144>
   1ad54:	b	1ad58 <main@@Base+0x70dc>
   1ad58:	ldr	r0, [fp, #-8]
   1ad5c:	ldr	r1, [fp, #-12]
   1ad60:	str	r1, [fp, #-28]	; 0xffffffe4
   1ad64:	ldr	r2, [fp, #-16]
   1ad68:	ldr	r3, [fp, #12]
   1ad6c:	movw	ip, #4
   1ad70:	str	r3, [sp, #8]
   1ad74:	mov	r3, ip
   1ad78:	ldr	ip, [sp, #8]
   1ad7c:	str	ip, [sp]
   1ad80:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   1ad84:	str	r0, [fp, #-12]
   1ad88:	ldr	r0, [fp, #-12]
   1ad8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ad90:	cmp	r0, r1
   1ad94:	beq	1adb8 <main@@Base+0x713c>
   1ad98:	ldr	r0, [fp, #8]
   1ad9c:	mov	r1, #0
   1ada0:	str	r1, [r0, #4]
   1ada4:	str	r1, [r0]
   1ada8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1adac:	movw	r1, #0
   1adb0:	str	r1, [r0]
   1adb4:	b	1adbc <main@@Base+0x7140>
   1adb8:	b	1adc8 <main@@Base+0x714c>
   1adbc:	b	1adc4 <main@@Base+0x7148>
   1adc0:	b	1adc8 <main@@Base+0x714c>
   1adc4:	b	1af44 <main@@Base+0x72c8>
   1adc8:	ldr	r0, [sp, #40]	; 0x28
   1adcc:	ldr	r1, [sp, #44]	; 0x2c
   1add0:	movw	r2, #29556	; 0x7374
   1add4:	movt	r2, #21605	; 0x5465
   1add8:	eor	r1, r1, r2
   1addc:	movw	r2, #28016	; 0x6d70
   1ade0:	movt	r2, #21353	; 0x5369
   1ade4:	eor	r0, r0, r2
   1ade8:	orr	r0, r0, r1
   1adec:	cmp	r0, #0
   1adf0:	bne	1af34 <main@@Base+0x72b8>
   1adf4:	b	1adf8 <main@@Base+0x717c>
   1adf8:	ldr	r0, [fp, #-12]
   1adfc:	add	r0, r0, #8
   1ae00:	str	r0, [fp, #-12]
   1ae04:	ldr	r0, [fp, #-12]
   1ae08:	ldr	r1, [fp, #-16]
   1ae0c:	bl	17cac <main@@Base+0x4030>
   1ae10:	str	r1, [sp, #44]	; 0x2c
   1ae14:	str	r0, [sp, #40]	; 0x28
   1ae18:	ldr	r0, [sp, #40]	; 0x28
   1ae1c:	ldr	r1, [sp, #44]	; 0x2c
   1ae20:	movw	lr, #21601	; 0x5461
   1ae24:	movt	lr, #27749	; 0x6c65
   1ae28:	eor	r1, r1, lr
   1ae2c:	movw	lr, #25943	; 0x6557
   1ae30:	movt	lr, #25196	; 0x626c
   1ae34:	eor	r0, r0, lr
   1ae38:	orr	r0, r0, r1
   1ae3c:	cmp	r0, #0
   1ae40:	bne	1af24 <main@@Base+0x72a8>
   1ae44:	b	1ae48 <main@@Base+0x71cc>
   1ae48:	ldr	r0, [fp, #-12]
   1ae4c:	add	r0, r0, #8
   1ae50:	str	r0, [fp, #-12]
   1ae54:	ldr	r0, [fp, #-12]
   1ae58:	ldr	r1, [fp, #-16]
   1ae5c:	bl	17cac <main@@Base+0x4030>
   1ae60:	str	r1, [sp, #44]	; 0x2c
   1ae64:	str	r0, [sp, #40]	; 0x28
   1ae68:	ldr	r0, [sp, #40]	; 0x28
   1ae6c:	ldr	r1, [sp, #44]	; 0x2c
   1ae70:	movw	lr, #29800	; 0x7468
   1ae74:	movt	lr, #105	; 0x69
   1ae78:	eor	lr, lr, r1, lsr #8
   1ae7c:	lsr	r0, r0, #8
   1ae80:	orr	r0, r0, r1, lsl #24
   1ae84:	movw	r1, #30061	; 0x756d
   1ae88:	movt	r1, #17774	; 0x456e
   1ae8c:	eor	r0, r0, r1
   1ae90:	orr	r0, r0, lr
   1ae94:	cmp	r0, #0
   1ae98:	bne	1af14 <main@@Base+0x7298>
   1ae9c:	b	1aea0 <main@@Base+0x7224>
   1aea0:	ldr	r0, [fp, #-8]
   1aea4:	ldr	r1, [fp, #-12]
   1aea8:	str	r1, [fp, #-28]	; 0xffffffe4
   1aeac:	ldr	r2, [fp, #-16]
   1aeb0:	ldr	r3, [fp, #12]
   1aeb4:	movw	ip, #7
   1aeb8:	str	r3, [sp, #4]
   1aebc:	mov	r3, ip
   1aec0:	ldr	ip, [sp, #4]
   1aec4:	str	ip, [sp]
   1aec8:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   1aecc:	str	r0, [fp, #-12]
   1aed0:	ldr	r0, [fp, #-12]
   1aed4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aed8:	cmp	r0, r1
   1aedc:	beq	1af04 <main@@Base+0x7288>
   1aee0:	ldr	r0, [fp, #8]
   1aee4:	mov	r1, #0
   1aee8:	str	r1, [r0, #4]
   1aeec:	mov	r1, #2
   1aef0:	str	r1, [r0]
   1aef4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1aef8:	movw	r1, #0
   1aefc:	str	r1, [r0]
   1af00:	b	1af10 <main@@Base+0x7294>
   1af04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af08:	str	r0, [fp, #-4]
   1af0c:	b	1af54 <main@@Base+0x72d8>
   1af10:	b	1af20 <main@@Base+0x72a4>
   1af14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af18:	str	r0, [fp, #-4]
   1af1c:	b	1af54 <main@@Base+0x72d8>
   1af20:	b	1af30 <main@@Base+0x72b4>
   1af24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af28:	str	r0, [fp, #-4]
   1af2c:	b	1af54 <main@@Base+0x72d8>
   1af30:	b	1af40 <main@@Base+0x72c4>
   1af34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1af38:	str	r0, [fp, #-4]
   1af3c:	b	1af54 <main@@Base+0x72d8>
   1af40:	b	1af44 <main@@Base+0x72c8>
   1af44:	b	1af48 <main@@Base+0x72cc>
   1af48:	b	1af4c <main@@Base+0x72d0>
   1af4c:	ldr	r0, [fp, #-12]
   1af50:	str	r0, [fp, #-4]
   1af54:	ldr	r0, [fp, #-4]
   1af58:	mov	sp, fp
   1af5c:	pop	{fp, pc}
   1af60:	push	{fp, lr}
   1af64:	mov	fp, sp
   1af68:	sub	sp, sp, #32
   1af6c:	str	r0, [fp, #-8]
   1af70:	str	r1, [fp, #-12]
   1af74:	str	r2, [sp, #16]
   1af78:	str	r3, [sp, #12]
   1af7c:	ldr	r0, [fp, #-12]
   1af80:	str	r0, [sp, #8]
   1af84:	ldr	r0, [sp, #16]
   1af88:	ldr	r1, [fp, #-12]
   1af8c:	sub	r0, r0, r1
   1af90:	cmp	r0, #4
   1af94:	blt	1afe0 <main@@Base+0x7364>
   1af98:	ldr	r0, [fp, #-12]
   1af9c:	ldr	r0, [r0]
   1afa0:	movw	r1, #36236	; 0x8d8c
   1afa4:	movt	r1, #39562	; 0x9a8a
   1afa8:	add	r1, r0, r1
   1afac:	movw	r2, #29300	; 0x7274
   1afb0:	movt	r2, #25973	; 0x6575
   1afb4:	cmp	r0, r2
   1afb8:	movwne	r1, #1
   1afbc:	cmp	r1, #0
   1afc0:	bne	1afe0 <main@@Base+0x7364>
   1afc4:	ldr	r0, [sp, #12]
   1afc8:	movw	r1, #1
   1afcc:	strb	r1, [r0]
   1afd0:	ldr	r0, [sp, #8]
   1afd4:	add	r0, r0, #4
   1afd8:	str	r0, [fp, #-4]
   1afdc:	b	1b078 <main@@Base+0x73fc>
   1afe0:	ldr	r0, [sp, #16]
   1afe4:	ldr	r1, [fp, #-12]
   1afe8:	sub	r0, r0, r1
   1afec:	cmp	r0, #5
   1aff0:	blt	1b02c <main@@Base+0x73b0>
   1aff4:	ldr	r0, [fp, #-12]
   1aff8:	ldr	r1, [pc, #132]	; 1b084 <main@@Base+0x7408>
   1affc:	add	r1, pc, r1
   1b000:	mov	r2, #5
   1b004:	bl	12a90 <memcmp@plt>
   1b008:	cmp	r0, #0
   1b00c:	bne	1b02c <main@@Base+0x73b0>
   1b010:	ldr	r0, [sp, #12]
   1b014:	movw	r1, #0
   1b018:	strb	r1, [r0]
   1b01c:	ldr	r0, [sp, #8]
   1b020:	add	r0, r0, #5
   1b024:	str	r0, [fp, #-4]
   1b028:	b	1b078 <main@@Base+0x73fc>
   1b02c:	b	1b030 <main@@Base+0x73b4>
   1b030:	ldr	r0, [fp, #-8]
   1b034:	ldr	r1, [fp, #-12]
   1b038:	ldr	r2, [sp, #16]
   1b03c:	add	r3, sp, #7
   1b040:	bl	19678 <main@@Base+0x59fc>
   1b044:	str	r0, [fp, #-12]
   1b048:	ldrsb	r0, [sp, #7]
   1b04c:	cmp	r0, #0
   1b050:	movw	r0, #0
   1b054:	movne	r0, #1
   1b058:	mvn	r1, #0
   1b05c:	eor	r0, r0, r1
   1b060:	eor	r0, r0, r1
   1b064:	and	r0, r0, #1
   1b068:	ldr	r1, [sp, #12]
   1b06c:	strb	r0, [r1]
   1b070:	ldr	r0, [fp, #-12]
   1b074:	str	r0, [fp, #-4]
   1b078:	ldr	r0, [fp, #-4]
   1b07c:	mov	sp, fp
   1b080:	pop	{fp, pc}
   1b084:	andeq	r6, r1, r4, lsr #4
   1b088:	push	{r4, r5, r6, sl, fp, lr}
   1b08c:	add	fp, sp, #16
   1b090:	sub	sp, sp, #88	; 0x58
   1b094:	ldr	ip, [fp, #8]
   1b098:	str	r0, [fp, #-24]	; 0xffffffe8
   1b09c:	str	r1, [fp, #-28]	; 0xffffffe4
   1b0a0:	str	r2, [fp, #-32]	; 0xffffffe0
   1b0a4:	str	r3, [fp, #-36]	; 0xffffffdc
   1b0a8:	movw	r0, #0
   1b0ac:	strb	r0, [fp, #-45]	; 0xffffffd3
   1b0b0:	movw	r1, #0
   1b0b4:	str	r1, [sp, #36]	; 0x24
   1b0b8:	ldr	r1, [fp, #8]
   1b0bc:	strb	r0, [r1]
   1b0c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b0c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b0c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b0cc:	str	ip, [sp, #32]
   1b0d0:	bl	1e7b4 <main@@Base+0xab38>
   1b0d4:	str	r0, [fp, #-28]	; 0xffffffe4
   1b0d8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b0dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b0e0:	cmp	r0, r1
   1b0e4:	bne	1b0f4 <main@@Base+0x7478>
   1b0e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b0ec:	str	r0, [fp, #-20]	; 0xffffffec
   1b0f0:	b	1b2a8 <main@@Base+0x762c>
   1b0f4:	b	1b0f8 <main@@Base+0x747c>
   1b0f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b0fc:	str	r0, [fp, #-40]	; 0xffffffd8
   1b100:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b104:	ldr	r0, [r0]
   1b108:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b10c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1b110:	str	r2, [fp, #-44]	; 0xffffffd4
   1b114:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b118:	str	r0, [sp, #28]
   1b11c:	mov	r0, r1
   1b120:	mov	r1, r2
   1b124:	mov	r2, r3
   1b128:	add	r3, sp, #44	; 0x2c
   1b12c:	add	ip, sp, #48	; 0x30
   1b130:	str	ip, [sp]
   1b134:	add	ip, sp, #40	; 0x28
   1b138:	str	ip, [sp, #4]
   1b13c:	ldr	ip, [sp, #28]
   1b140:	blx	ip
   1b144:	str	r0, [fp, #-28]	; 0xffffffe4
   1b148:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b14c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1b150:	cmp	r0, r1
   1b154:	bne	1b164 <main@@Base+0x74e8>
   1b158:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b15c:	str	r0, [fp, #-20]	; 0xffffffec
   1b160:	b	1b2a8 <main@@Base+0x762c>
   1b164:	b	1b168 <main@@Base+0x74ec>
   1b168:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b16c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b170:	cmp	r0, r1
   1b174:	movw	r0, #0
   1b178:	str	r0, [sp, #24]
   1b17c:	bne	1b1a4 <main@@Base+0x7528>
   1b180:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b184:	add	r1, r0, #4
   1b188:	str	r1, [fp, #-40]	; 0xffffffd8
   1b18c:	ldr	r0, [r0, #4]
   1b190:	movw	r1, #0
   1b194:	cmp	r0, r1
   1b198:	movw	r0, #0
   1b19c:	movne	r0, #1
   1b1a0:	str	r0, [sp, #24]
   1b1a4:	ldr	r0, [sp, #24]
   1b1a8:	tst	r0, #1
   1b1ac:	bne	1b100 <main@@Base+0x7484>
   1b1b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b1b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b1b8:	cmp	r0, r1
   1b1bc:	bne	1b1dc <main@@Base+0x7560>
   1b1c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b1c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b1c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b1cc:	movw	r3, #23
   1b1d0:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1b1d4:	str	r0, [fp, #-20]	; 0xffffffec
   1b1d8:	b	1b2a8 <main@@Base+0x762c>
   1b1dc:	ldr	r0, [sp, #36]	; 0x24
   1b1e0:	add	r1, r0, #1
   1b1e4:	str	r1, [sp, #36]	; 0x24
   1b1e8:	cmp	r0, #0
   1b1ec:	beq	1b21c <main@@Base+0x75a0>
   1b1f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b1f4:	ldr	r0, [r0, #12]
   1b1f8:	cmp	r0, #0
   1b1fc:	beq	1b21c <main@@Base+0x75a0>
   1b200:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b204:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b208:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b20c:	movw	r3, #14
   1b210:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1b214:	str	r0, [fp, #-20]	; 0xffffffec
   1b218:	b	1b2a8 <main@@Base+0x762c>
   1b21c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b220:	mov	r1, r0
   1b224:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b228:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b22c:	ldr	ip, [sp, #44]	; 0x2c
   1b230:	ldr	lr, [sp, #48]	; 0x30
   1b234:	ldr	r4, [sp, #52]	; 0x34
   1b238:	mov	r5, sp
   1b23c:	sub	r6, fp, #45	; 0x2d
   1b240:	str	r6, [r5, #8]
   1b244:	str	r4, [r5, #4]
   1b248:	str	lr, [r5]
   1b24c:	str	r0, [sp, #20]
   1b250:	mov	r0, r2
   1b254:	str	r1, [sp, #16]
   1b258:	mov	r1, r3
   1b25c:	ldr	r2, [sp, #20]
   1b260:	mov	r3, ip
   1b264:	bl	22f64 <main@@Base+0xf2e8>
   1b268:	ldr	r1, [sp, #16]
   1b26c:	cmp	r1, r0
   1b270:	bne	1b280 <main@@Base+0x7604>
   1b274:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b278:	str	r0, [fp, #-20]	; 0xffffffec
   1b27c:	b	1b2a8 <main@@Base+0x762c>
   1b280:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1b284:	ldr	r1, [fp, #8]
   1b288:	ldrb	r2, [r1]
   1b28c:	add	r0, r2, r0
   1b290:	strb	r0, [r1]
   1b294:	ldr	r0, [sp, #40]	; 0x28
   1b298:	cmp	r0, #0
   1b29c:	bne	1b0f8 <main@@Base+0x747c>
   1b2a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b2a4:	str	r0, [fp, #-20]	; 0xffffffec
   1b2a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b2ac:	sub	sp, fp, #16
   1b2b0:	pop	{r4, r5, r6, sl, fp, pc}
   1b2b4:	push	{fp, lr}
   1b2b8:	mov	fp, sp
   1b2bc:	sub	sp, sp, #8
   1b2c0:	str	r0, [sp, #4]
   1b2c4:	strb	r1, [sp, #3]
   1b2c8:	ldrb	r0, [sp, #3]
   1b2cc:	bl	23000 <main@@Base+0xf384>
   1b2d0:	ldr	r1, [sp, #4]
   1b2d4:	strb	r0, [r1]
   1b2d8:	mov	sp, fp
   1b2dc:	pop	{fp, pc}
   1b2e0:	push	{fp, lr}
   1b2e4:	mov	fp, sp
   1b2e8:	sub	sp, sp, #64	; 0x40
   1b2ec:	str	r0, [fp, #-8]
   1b2f0:	str	r1, [fp, #-12]
   1b2f4:	str	r2, [fp, #-16]
   1b2f8:	str	r3, [fp, #-20]	; 0xffffffec
   1b2fc:	ldr	r0, [fp, #-8]
   1b300:	ldr	r1, [fp, #-12]
   1b304:	ldr	r2, [fp, #-16]
   1b308:	sub	r3, fp, #24
   1b30c:	bl	17b1c <main@@Base+0x3ea0>
   1b310:	str	r0, [fp, #-12]
   1b314:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b318:	cmp	r0, #0
   1b31c:	beq	1b590 <main@@Base+0x7914>
   1b320:	ldr	r0, [fp, #-8]
   1b324:	ldr	r1, [fp, #-12]
   1b328:	ldr	r2, [fp, #-16]
   1b32c:	bl	17c00 <main@@Base+0x3f84>
   1b330:	str	r0, [fp, #-12]
   1b334:	ldr	r0, [fp, #-12]
   1b338:	ldr	r1, [fp, #-16]
   1b33c:	bl	17cac <main@@Base+0x4030>
   1b340:	str	r1, [sp, #20]
   1b344:	str	r0, [sp, #16]
   1b348:	ldr	r0, [sp, #20]
   1b34c:	bfc	r0, #0, #16
   1b350:	movw	r1, #0
   1b354:	movt	r1, #26980	; 0x6964
   1b358:	teq	r0, r1
   1b35c:	bne	1b448 <main@@Base+0x77cc>
   1b360:	b	1b364 <main@@Base+0x76e8>
   1b364:	ldr	r0, [fp, #-8]
   1b368:	ldr	r1, [fp, #-12]
   1b36c:	str	r1, [sp, #28]
   1b370:	ldr	r2, [fp, #-16]
   1b374:	movw	r3, #2
   1b378:	bl	17ce4 <main@@Base+0x4068>
   1b37c:	str	r0, [fp, #-12]
   1b380:	ldr	r0, [sp, #28]
   1b384:	ldr	r1, [fp, #-12]
   1b388:	cmp	r0, r1
   1b38c:	beq	1b430 <main@@Base+0x77b4>
   1b390:	movw	r0, #0
   1b394:	str	r0, [sp, #12]
   1b398:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b39c:	add	r0, r0, #0
   1b3a0:	str	r0, [sp, #32]
   1b3a4:	ldr	r0, [fp, #-8]
   1b3a8:	ldr	r1, [fp, #-12]
   1b3ac:	str	r1, [sp, #28]
   1b3b0:	ldr	r2, [fp, #-16]
   1b3b4:	add	r3, sp, #12
   1b3b8:	bl	1c74c <main@@Base+0x8ad0>
   1b3bc:	str	r0, [fp, #-12]
   1b3c0:	ldr	r0, [sp, #28]
   1b3c4:	ldr	r1, [fp, #-12]
   1b3c8:	cmp	r0, r1
   1b3cc:	bne	1b420 <main@@Base+0x77a4>
   1b3d0:	ldr	r0, [pc, #492]	; 1b5c4 <main@@Base+0x7948>
   1b3d4:	add	r3, pc, r0
   1b3d8:	ldr	r0, [fp, #-8]
   1b3dc:	ldr	r1, [fp, #-12]
   1b3e0:	str	r1, [sp, #28]
   1b3e4:	ldr	r2, [fp, #-16]
   1b3e8:	add	ip, sp, #12
   1b3ec:	str	ip, [sp]
   1b3f0:	bl	1c824 <main@@Base+0x8ba8>
   1b3f4:	str	r0, [fp, #-12]
   1b3f8:	ldr	r0, [fp, #-12]
   1b3fc:	ldr	r1, [sp, #28]
   1b400:	cmp	r0, r1
   1b404:	beq	1b418 <main@@Base+0x779c>
   1b408:	ldr	r0, [fp, #-12]
   1b40c:	ldr	r1, [fp, #-16]
   1b410:	cmp	r0, r1
   1b414:	bne	1b41c <main@@Base+0x77a0>
   1b418:	b	1b59c <main@@Base+0x7920>
   1b41c:	b	1b420 <main@@Base+0x77a4>
   1b420:	ldr	r0, [sp, #32]
   1b424:	ldr	r1, [sp, #12]
   1b428:	bl	1ca4c <main@@Base+0x8dd0>
   1b42c:	b	1b444 <main@@Base+0x77c8>
   1b430:	ldr	r0, [fp, #-8]
   1b434:	ldr	r1, [fp, #-12]
   1b438:	ldr	r2, [fp, #-16]
   1b43c:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1b440:	str	r0, [fp, #-12]
   1b444:	b	1b574 <main@@Base+0x78f8>
   1b448:	ldr	r0, [sp, #16]
   1b44c:	ldr	r1, [sp, #20]
   1b450:	movw	r2, #29556	; 0x7374
   1b454:	movt	r2, #25705	; 0x6469
   1b458:	eor	r1, r1, r2
   1b45c:	movw	r2, #25445	; 0x6365
   1b460:	movt	r2, #24942	; 0x616e
   1b464:	eor	r0, r0, r2
   1b468:	orr	r0, r0, r1
   1b46c:	cmp	r0, #0
   1b470:	bne	1b55c <main@@Base+0x78e0>
   1b474:	b	1b478 <main@@Base+0x77fc>
   1b478:	ldr	r0, [fp, #-8]
   1b47c:	ldr	r1, [fp, #-12]
   1b480:	str	r1, [sp, #28]
   1b484:	ldr	r2, [fp, #-16]
   1b488:	movw	r3, #8
   1b48c:	bl	17ce4 <main@@Base+0x4068>
   1b490:	str	r0, [fp, #-12]
   1b494:	ldr	r0, [sp, #28]
   1b498:	ldr	r1, [fp, #-12]
   1b49c:	cmp	r0, r1
   1b4a0:	beq	1b544 <main@@Base+0x78c8>
   1b4a4:	movw	r0, #0
   1b4a8:	str	r0, [sp, #8]
   1b4ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b4b0:	add	r0, r0, #4
   1b4b4:	str	r0, [sp, #32]
   1b4b8:	ldr	r0, [fp, #-8]
   1b4bc:	ldr	r1, [fp, #-12]
   1b4c0:	str	r1, [sp, #28]
   1b4c4:	ldr	r2, [fp, #-16]
   1b4c8:	add	r3, sp, #8
   1b4cc:	bl	1c74c <main@@Base+0x8ad0>
   1b4d0:	str	r0, [fp, #-12]
   1b4d4:	ldr	r0, [sp, #28]
   1b4d8:	ldr	r1, [fp, #-12]
   1b4dc:	cmp	r0, r1
   1b4e0:	bne	1b534 <main@@Base+0x78b8>
   1b4e4:	ldr	r0, [pc, #212]	; 1b5c0 <main@@Base+0x7944>
   1b4e8:	add	r3, pc, r0
   1b4ec:	ldr	r0, [fp, #-8]
   1b4f0:	ldr	r1, [fp, #-12]
   1b4f4:	str	r1, [sp, #28]
   1b4f8:	ldr	r2, [fp, #-16]
   1b4fc:	add	ip, sp, #8
   1b500:	str	ip, [sp]
   1b504:	bl	1c824 <main@@Base+0x8ba8>
   1b508:	str	r0, [fp, #-12]
   1b50c:	ldr	r0, [fp, #-12]
   1b510:	ldr	r1, [sp, #28]
   1b514:	cmp	r0, r1
   1b518:	beq	1b52c <main@@Base+0x78b0>
   1b51c:	ldr	r0, [fp, #-12]
   1b520:	ldr	r1, [fp, #-16]
   1b524:	cmp	r0, r1
   1b528:	bne	1b530 <main@@Base+0x78b4>
   1b52c:	b	1b59c <main@@Base+0x7920>
   1b530:	b	1b534 <main@@Base+0x78b8>
   1b534:	ldr	r0, [sp, #32]
   1b538:	ldr	r1, [sp, #8]
   1b53c:	bl	1ca4c <main@@Base+0x8dd0>
   1b540:	b	1b558 <main@@Base+0x78dc>
   1b544:	ldr	r0, [fp, #-8]
   1b548:	ldr	r1, [fp, #-12]
   1b54c:	ldr	r2, [fp, #-16]
   1b550:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1b554:	str	r0, [fp, #-12]
   1b558:	b	1b570 <main@@Base+0x78f4>
   1b55c:	ldr	r0, [fp, #-8]
   1b560:	ldr	r1, [fp, #-12]
   1b564:	ldr	r2, [fp, #-16]
   1b568:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1b56c:	str	r0, [fp, #-12]
   1b570:	b	1b574 <main@@Base+0x78f8>
   1b574:	ldr	r0, [fp, #-8]
   1b578:	ldr	r1, [fp, #-12]
   1b57c:	ldr	r2, [fp, #-16]
   1b580:	sub	r3, fp, #24
   1b584:	bl	1d02c <main@@Base+0x93b0>
   1b588:	str	r0, [fp, #-12]
   1b58c:	b	1b314 <main@@Base+0x7698>
   1b590:	ldr	r0, [fp, #-12]
   1b594:	str	r0, [fp, #-4]
   1b598:	b	1b5b4 <main@@Base+0x7938>
   1b59c:	ldr	r0, [fp, #-8]
   1b5a0:	ldr	r1, [fp, #-12]
   1b5a4:	ldr	r2, [fp, #-16]
   1b5a8:	movw	r3, #33	; 0x21
   1b5ac:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1b5b0:	str	r0, [fp, #-4]
   1b5b4:	ldr	r0, [fp, #-4]
   1b5b8:	mov	sp, fp
   1b5bc:	pop	{fp, pc}
   1b5c0:	andeq	r8, r2, r4, asr lr
   1b5c4:	andeq	r8, r2, ip, asr pc
   1b5c8:	push	{fp, lr}
   1b5cc:	mov	fp, sp
   1b5d0:	sub	sp, sp, #64	; 0x40
   1b5d4:	str	r0, [fp, #-8]
   1b5d8:	str	r1, [fp, #-12]
   1b5dc:	str	r2, [fp, #-16]
   1b5e0:	str	r3, [fp, #-20]	; 0xffffffec
   1b5e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b5e8:	movw	r1, #0
   1b5ec:	str	r1, [r0]
   1b5f0:	ldr	r0, [fp, #-8]
   1b5f4:	ldr	r0, [r0]
   1b5f8:	movw	r1, #3
   1b5fc:	bl	26068 <flatcc_builder_start_table@@Base>
   1b600:	cmp	r0, #0
   1b604:	beq	1b60c <main@@Base+0x7990>
   1b608:	b	1b984 <main@@Base+0x7d08>
   1b60c:	ldr	r0, [fp, #-8]
   1b610:	ldr	r1, [fp, #-12]
   1b614:	ldr	r2, [fp, #-16]
   1b618:	sub	r3, fp, #24
   1b61c:	bl	17b1c <main@@Base+0x3ea0>
   1b620:	str	r0, [fp, #-12]
   1b624:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1b628:	cmp	r0, #0
   1b62c:	beq	1b944 <main@@Base+0x7cc8>
   1b630:	ldr	r0, [fp, #-8]
   1b634:	ldr	r1, [fp, #-12]
   1b638:	ldr	r2, [fp, #-16]
   1b63c:	bl	17c00 <main@@Base+0x3f84>
   1b640:	str	r0, [fp, #-12]
   1b644:	ldr	r0, [fp, #-12]
   1b648:	ldr	r1, [fp, #-16]
   1b64c:	bl	17cac <main@@Base+0x4030>
   1b650:	str	r1, [sp, #20]
   1b654:	str	r0, [sp, #16]
   1b658:	ldr	r0, [sp, #16]
   1b65c:	ldr	r1, [sp, #20]
   1b660:	movw	r2, #65535	; 0xffff
   1b664:	movt	r2, #25955	; 0x6563
   1b668:	subs	r0, r2, r0
   1b66c:	movw	r2, #29556	; 0x7374
   1b670:	movt	r2, #28261	; 0x6e65
   1b674:	sbcs	r1, r2, r1
   1b678:	str	r0, [sp, #12]
   1b67c:	str	r1, [sp, #8]
   1b680:	bcc	1b75c <main@@Base+0x7ae0>
   1b684:	b	1b688 <main@@Base+0x7a0c>
   1b688:	ldr	r0, [sp, #20]
   1b68c:	movw	r1, #29793	; 0x7461
   1b690:	movt	r1, #25697	; 0x6461
   1b694:	teq	r0, r1
   1b698:	bne	1b744 <main@@Base+0x7ac8>
   1b69c:	b	1b6a0 <main@@Base+0x7a24>
   1b6a0:	ldr	r0, [fp, #-8]
   1b6a4:	ldr	r1, [fp, #-12]
   1b6a8:	str	r1, [sp, #24]
   1b6ac:	ldr	r2, [fp, #-16]
   1b6b0:	movw	r3, #4
   1b6b4:	bl	17ce4 <main@@Base+0x4068>
   1b6b8:	str	r0, [fp, #-12]
   1b6bc:	ldr	r0, [sp, #24]
   1b6c0:	ldr	r1, [fp, #-12]
   1b6c4:	cmp	r0, r1
   1b6c8:	beq	1b72c <main@@Base+0x7ab0>
   1b6cc:	ldr	r0, [fp, #-8]
   1b6d0:	ldr	r1, [fp, #-12]
   1b6d4:	ldr	r2, [fp, #-16]
   1b6d8:	add	r3, sp, #32
   1b6dc:	movw	ip, #0
   1b6e0:	str	ip, [sp]
   1b6e4:	bl	2d790 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1b6e8:	str	r0, [fp, #-12]
   1b6ec:	ldr	r0, [sp, #32]
   1b6f0:	cmp	r0, #0
   1b6f4:	beq	1b718 <main@@Base+0x7a9c>
   1b6f8:	ldr	r0, [fp, #-8]
   1b6fc:	ldr	r0, [r0]
   1b700:	movw	r1, #0
   1b704:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   1b708:	str	r0, [sp, #28]
   1b70c:	movw	r1, #0
   1b710:	cmp	r0, r1
   1b714:	bne	1b71c <main@@Base+0x7aa0>
   1b718:	b	1b984 <main@@Base+0x7d08>
   1b71c:	ldr	r0, [sp, #32]
   1b720:	ldr	r1, [sp, #28]
   1b724:	str	r0, [r1]
   1b728:	b	1b740 <main@@Base+0x7ac4>
   1b72c:	ldr	r0, [fp, #-8]
   1b730:	ldr	r1, [fp, #-12]
   1b734:	ldr	r2, [fp, #-16]
   1b738:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1b73c:	str	r0, [fp, #-12]
   1b740:	b	1b758 <main@@Base+0x7adc>
   1b744:	ldr	r0, [fp, #-8]
   1b748:	ldr	r1, [fp, #-12]
   1b74c:	ldr	r2, [fp, #-16]
   1b750:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1b754:	str	r0, [fp, #-12]
   1b758:	b	1b928 <main@@Base+0x7cac>
   1b75c:	ldr	r0, [sp, #16]
   1b760:	ldr	r1, [sp, #20]
   1b764:	movw	r2, #29292	; 0x726c
   1b768:	movt	r2, #117	; 0x75
   1b76c:	eor	r2, r2, r1, lsr #8
   1b770:	lsr	r0, r0, #8
   1b774:	orr	r0, r0, r1, lsl #24
   1b778:	movw	r1, #29793	; 0x7461
   1b77c:	movt	r1, #25697	; 0x6461
   1b780:	eor	r0, r0, r1
   1b784:	orr	r0, r0, r2
   1b788:	cmp	r0, #0
   1b78c:	bne	1b838 <main@@Base+0x7bbc>
   1b790:	b	1b794 <main@@Base+0x7b18>
   1b794:	ldr	r0, [fp, #-8]
   1b798:	ldr	r1, [fp, #-12]
   1b79c:	str	r1, [sp, #24]
   1b7a0:	ldr	r2, [fp, #-16]
   1b7a4:	movw	r3, #7
   1b7a8:	bl	17ce4 <main@@Base+0x4068>
   1b7ac:	str	r0, [fp, #-12]
   1b7b0:	ldr	r0, [sp, #24]
   1b7b4:	ldr	r1, [fp, #-12]
   1b7b8:	cmp	r0, r1
   1b7bc:	beq	1b820 <main@@Base+0x7ba4>
   1b7c0:	ldr	r0, [fp, #-8]
   1b7c4:	ldr	r1, [fp, #-12]
   1b7c8:	ldr	r2, [fp, #-16]
   1b7cc:	add	r3, sp, #32
   1b7d0:	movw	ip, #1
   1b7d4:	str	ip, [sp]
   1b7d8:	bl	2d790 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1b7dc:	str	r0, [fp, #-12]
   1b7e0:	ldr	r0, [sp, #32]
   1b7e4:	cmp	r0, #0
   1b7e8:	beq	1b80c <main@@Base+0x7b90>
   1b7ec:	ldr	r0, [fp, #-8]
   1b7f0:	ldr	r0, [r0]
   1b7f4:	movw	r1, #1
   1b7f8:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   1b7fc:	str	r0, [sp, #28]
   1b800:	movw	r1, #0
   1b804:	cmp	r0, r1
   1b808:	bne	1b810 <main@@Base+0x7b94>
   1b80c:	b	1b984 <main@@Base+0x7d08>
   1b810:	ldr	r0, [sp, #32]
   1b814:	ldr	r1, [sp, #28]
   1b818:	str	r0, [r1]
   1b81c:	b	1b834 <main@@Base+0x7bb8>
   1b820:	ldr	r0, [fp, #-8]
   1b824:	ldr	r1, [fp, #-12]
   1b828:	ldr	r2, [fp, #-16]
   1b82c:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1b830:	str	r0, [fp, #-12]
   1b834:	b	1b924 <main@@Base+0x7ca8>
   1b838:	ldrh	r0, [sp, #18]
   1b83c:	ldr	r1, [sp, #20]
   1b840:	movw	r2, #28261	; 0x6e65
   1b844:	eor	r2, r2, r1, lsr #16
   1b848:	orr	r0, r0, r1, lsl #16
   1b84c:	movw	r1, #25956	; 0x6564
   1b850:	movt	r1, #29556	; 0x7374
   1b854:	eor	r0, r0, r1
   1b858:	orr	r0, r0, r2
   1b85c:	cmp	r0, #0
   1b860:	bne	1b90c <main@@Base+0x7c90>
   1b864:	b	1b868 <main@@Base+0x7bec>
   1b868:	ldr	r0, [fp, #-8]
   1b86c:	ldr	r1, [fp, #-12]
   1b870:	str	r1, [sp, #24]
   1b874:	ldr	r2, [fp, #-16]
   1b878:	movw	r3, #6
   1b87c:	bl	17ce4 <main@@Base+0x4068>
   1b880:	str	r0, [fp, #-12]
   1b884:	ldr	r0, [sp, #24]
   1b888:	ldr	r1, [fp, #-12]
   1b88c:	cmp	r0, r1
   1b890:	beq	1b8f4 <main@@Base+0x7c78>
   1b894:	ldr	r0, [fp, #-8]
   1b898:	ldr	r1, [fp, #-12]
   1b89c:	ldr	r2, [fp, #-16]
   1b8a0:	add	r3, sp, #32
   1b8a4:	movw	ip, #0
   1b8a8:	str	ip, [sp]
   1b8ac:	bl	2d790 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1b8b0:	str	r0, [fp, #-12]
   1b8b4:	ldr	r0, [sp, #32]
   1b8b8:	cmp	r0, #0
   1b8bc:	beq	1b8e0 <main@@Base+0x7c64>
   1b8c0:	ldr	r0, [fp, #-8]
   1b8c4:	ldr	r0, [r0]
   1b8c8:	movw	r1, #2
   1b8cc:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   1b8d0:	str	r0, [sp, #28]
   1b8d4:	movw	r1, #0
   1b8d8:	cmp	r0, r1
   1b8dc:	bne	1b8e4 <main@@Base+0x7c68>
   1b8e0:	b	1b984 <main@@Base+0x7d08>
   1b8e4:	ldr	r0, [sp, #32]
   1b8e8:	ldr	r1, [sp, #28]
   1b8ec:	str	r0, [r1]
   1b8f0:	b	1b908 <main@@Base+0x7c8c>
   1b8f4:	ldr	r0, [fp, #-8]
   1b8f8:	ldr	r1, [fp, #-12]
   1b8fc:	ldr	r2, [fp, #-16]
   1b900:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1b904:	str	r0, [fp, #-12]
   1b908:	b	1b920 <main@@Base+0x7ca4>
   1b90c:	ldr	r0, [fp, #-8]
   1b910:	ldr	r1, [fp, #-12]
   1b914:	ldr	r2, [fp, #-16]
   1b918:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1b91c:	str	r0, [fp, #-12]
   1b920:	b	1b924 <main@@Base+0x7ca8>
   1b924:	b	1b928 <main@@Base+0x7cac>
   1b928:	ldr	r0, [fp, #-8]
   1b92c:	ldr	r1, [fp, #-12]
   1b930:	ldr	r2, [fp, #-16]
   1b934:	sub	r3, fp, #24
   1b938:	bl	1d02c <main@@Base+0x93b0>
   1b93c:	str	r0, [fp, #-12]
   1b940:	b	1b624 <main@@Base+0x79a8>
   1b944:	ldr	r0, [fp, #-8]
   1b948:	ldr	r0, [r0, #24]
   1b94c:	cmp	r0, #0
   1b950:	beq	1b958 <main@@Base+0x7cdc>
   1b954:	b	1b984 <main@@Base+0x7d08>
   1b958:	ldr	r0, [fp, #-8]
   1b95c:	ldr	r0, [r0]
   1b960:	bl	26ce0 <flatcc_builder_end_table@@Base>
   1b964:	ldr	lr, [fp, #-20]	; 0xffffffec
   1b968:	str	r0, [lr]
   1b96c:	cmp	r0, #0
   1b970:	bne	1b978 <main@@Base+0x7cfc>
   1b974:	b	1b984 <main@@Base+0x7d08>
   1b978:	ldr	r0, [fp, #-12]
   1b97c:	str	r0, [fp, #-4]
   1b980:	b	1b99c <main@@Base+0x7d20>
   1b984:	ldr	r0, [fp, #-8]
   1b988:	ldr	r1, [fp, #-12]
   1b98c:	ldr	r2, [fp, #-16]
   1b990:	movw	r3, #33	; 0x21
   1b994:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1b998:	str	r0, [fp, #-4]
   1b99c:	ldr	r0, [fp, #-4]
   1b9a0:	mov	sp, fp
   1b9a4:	pop	{fp, pc}
   1b9a8:	push	{fp, lr}
   1b9ac:	mov	fp, sp
   1b9b0:	sub	sp, sp, #72	; 0x48
   1b9b4:	str	r0, [fp, #-8]
   1b9b8:	str	r1, [fp, #-12]
   1b9bc:	str	r2, [fp, #-16]
   1b9c0:	str	r3, [fp, #-20]	; 0xffffffec
   1b9c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b9c8:	movw	r1, #0
   1b9cc:	str	r1, [r0]
   1b9d0:	ldr	r0, [fp, #-8]
   1b9d4:	ldr	r0, [r0]
   1b9d8:	movw	r1, #3
   1b9dc:	bl	26068 <flatcc_builder_start_table@@Base>
   1b9e0:	cmp	r0, #0
   1b9e4:	beq	1b9ec <main@@Base+0x7d70>
   1b9e8:	b	1be48 <main@@Base+0x81cc>
   1b9ec:	ldr	r0, [fp, #-8]
   1b9f0:	ldr	r1, [fp, #-12]
   1b9f4:	ldr	r2, [fp, #-16]
   1b9f8:	sub	r3, fp, #24
   1b9fc:	bl	17b1c <main@@Base+0x3ea0>
   1ba00:	str	r0, [fp, #-12]
   1ba04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ba08:	cmp	r0, #0
   1ba0c:	beq	1be08 <main@@Base+0x818c>
   1ba10:	ldr	r0, [fp, #-8]
   1ba14:	ldr	r1, [fp, #-12]
   1ba18:	ldr	r2, [fp, #-16]
   1ba1c:	bl	17c00 <main@@Base+0x3f84>
   1ba20:	str	r0, [fp, #-12]
   1ba24:	ldr	r0, [fp, #-12]
   1ba28:	ldr	r1, [fp, #-16]
   1ba2c:	bl	17cac <main@@Base+0x4030>
   1ba30:	str	r1, [sp, #28]
   1ba34:	str	r0, [sp, #24]
   1ba38:	ldr	r0, [sp, #28]
   1ba3c:	movw	r1, #65535	; 0xffff
   1ba40:	movt	r1, #26979	; 0x6963
   1ba44:	cmp	r0, r1
   1ba48:	bhi	1bbc0 <main@@Base+0x7f44>
   1ba4c:	b	1ba50 <main@@Base+0x7dd4>
   1ba50:	ldr	r0, [sp, #24]
   1ba54:	ldr	r1, [sp, #28]
   1ba58:	and	r0, r0, #-16777216	; 0xff000000
   1ba5c:	movw	r2, #30062	; 0x756e
   1ba60:	movt	r2, #25455	; 0x636f
   1ba64:	eor	r1, r1, r2
   1ba68:	eor	r0, r0, #1946157056	; 0x74000000
   1ba6c:	orr	r0, r0, r1
   1ba70:	cmp	r0, #0
   1ba74:	bne	1bba8 <main@@Base+0x7f2c>
   1ba78:	b	1ba7c <main@@Base+0x7e00>
   1ba7c:	ldr	r0, [fp, #-8]
   1ba80:	ldr	r1, [fp, #-12]
   1ba84:	str	r1, [sp, #32]
   1ba88:	ldr	r2, [fp, #-16]
   1ba8c:	movw	r3, #5
   1ba90:	bl	17ce4 <main@@Base+0x4068>
   1ba94:	str	r0, [fp, #-12]
   1ba98:	ldr	r0, [sp, #32]
   1ba9c:	ldr	r1, [fp, #-12]
   1baa0:	cmp	r0, r1
   1baa4:	beq	1bb90 <main@@Base+0x7f14>
   1baa8:	movw	r0, #0
   1baac:	strh	r0, [sp, #22]
   1bab0:	ldr	r0, [fp, #-8]
   1bab4:	ldr	r1, [fp, #-12]
   1bab8:	str	r1, [sp, #32]
   1babc:	ldr	r2, [fp, #-16]
   1bac0:	add	r3, sp, #22
   1bac4:	bl	22930 <main@@Base+0xecb4>
   1bac8:	str	r0, [fp, #-12]
   1bacc:	ldr	r0, [sp, #32]
   1bad0:	ldr	r1, [fp, #-12]
   1bad4:	cmp	r0, r1
   1bad8:	bne	1bb2c <main@@Base+0x7eb0>
   1badc:	ldr	r0, [pc, #908]	; 1be70 <main@@Base+0x81f4>
   1bae0:	add	r3, pc, r0
   1bae4:	ldr	r0, [fp, #-8]
   1bae8:	ldr	r1, [fp, #-12]
   1baec:	str	r1, [sp, #32]
   1baf0:	ldr	r2, [fp, #-16]
   1baf4:	add	ip, sp, #22
   1baf8:	str	ip, [sp]
   1bafc:	bl	22a0c <main@@Base+0xed90>
   1bb00:	str	r0, [fp, #-12]
   1bb04:	ldr	r0, [fp, #-12]
   1bb08:	ldr	r1, [sp, #32]
   1bb0c:	cmp	r0, r1
   1bb10:	beq	1bb24 <main@@Base+0x7ea8>
   1bb14:	ldr	r0, [fp, #-12]
   1bb18:	ldr	r1, [fp, #-16]
   1bb1c:	cmp	r0, r1
   1bb20:	bne	1bb28 <main@@Base+0x7eac>
   1bb24:	b	1be48 <main@@Base+0x81cc>
   1bb28:	b	1bb2c <main@@Base+0x7eb0>
   1bb2c:	ldrh	r0, [sp, #22]
   1bb30:	cmp	r0, #0
   1bb34:	bne	1bb4c <main@@Base+0x7ed0>
   1bb38:	ldr	r0, [fp, #-8]
   1bb3c:	ldr	r0, [r0, #8]
   1bb40:	and	r0, r0, #2
   1bb44:	cmp	r0, #0
   1bb48:	beq	1bb8c <main@@Base+0x7f10>
   1bb4c:	ldr	r0, [fp, #-8]
   1bb50:	ldr	r0, [r0]
   1bb54:	movw	r1, #2
   1bb58:	str	r1, [sp, #4]
   1bb5c:	ldr	r2, [sp, #4]
   1bb60:	movw	r3, #2
   1bb64:	uxth	r3, r3
   1bb68:	bl	27920 <flatcc_builder_table_add@@Base>
   1bb6c:	str	r0, [fp, #-28]	; 0xffffffe4
   1bb70:	movw	r1, #0
   1bb74:	cmp	r0, r1
   1bb78:	bne	1bb80 <main@@Base+0x7f04>
   1bb7c:	b	1be48 <main@@Base+0x81cc>
   1bb80:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bb84:	ldrh	r1, [sp, #22]
   1bb88:	bl	22c38 <main@@Base+0xefbc>
   1bb8c:	b	1bba4 <main@@Base+0x7f28>
   1bb90:	ldr	r0, [fp, #-8]
   1bb94:	ldr	r1, [fp, #-12]
   1bb98:	ldr	r2, [fp, #-16]
   1bb9c:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1bba0:	str	r0, [fp, #-12]
   1bba4:	b	1bbbc <main@@Base+0x7f40>
   1bba8:	ldr	r0, [fp, #-8]
   1bbac:	ldr	r1, [fp, #-12]
   1bbb0:	ldr	r2, [fp, #-16]
   1bbb4:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1bbb8:	str	r0, [fp, #-12]
   1bbbc:	b	1bdec <main@@Base+0x8170>
   1bbc0:	ldr	r0, [sp, #28]
   1bbc4:	bic	r0, r0, #255	; 0xff
   1bbc8:	movw	r1, #27648	; 0x6c00
   1bbcc:	movt	r1, #30305	; 0x7661
   1bbd0:	teq	r0, r1
   1bbd4:	bne	1bd18 <main@@Base+0x809c>
   1bbd8:	b	1bbdc <main@@Base+0x7f60>
   1bbdc:	ldr	r0, [fp, #-8]
   1bbe0:	ldr	r1, [fp, #-12]
   1bbe4:	str	r1, [sp, #32]
   1bbe8:	ldr	r2, [fp, #-16]
   1bbec:	movw	r3, #3
   1bbf0:	bl	17ce4 <main@@Base+0x4068>
   1bbf4:	str	r0, [fp, #-12]
   1bbf8:	ldr	r0, [sp, #32]
   1bbfc:	ldr	r1, [fp, #-12]
   1bc00:	cmp	r0, r1
   1bc04:	beq	1bd00 <main@@Base+0x8084>
   1bc08:	mov	r0, #0
   1bc0c:	str	r0, [sp, #12]
   1bc10:	str	r0, [sp, #8]
   1bc14:	ldr	r0, [fp, #-8]
   1bc18:	ldr	r1, [fp, #-12]
   1bc1c:	str	r1, [sp, #32]
   1bc20:	ldr	r2, [fp, #-16]
   1bc24:	add	r3, sp, #8
   1bc28:	bl	1c3fc <main@@Base+0x8780>
   1bc2c:	str	r0, [fp, #-12]
   1bc30:	ldr	r0, [sp, #32]
   1bc34:	ldr	r1, [fp, #-12]
   1bc38:	cmp	r0, r1
   1bc3c:	bne	1bc90 <main@@Base+0x8014>
   1bc40:	ldr	r0, [pc, #548]	; 1be6c <main@@Base+0x81f0>
   1bc44:	add	r3, pc, r0
   1bc48:	ldr	r0, [fp, #-8]
   1bc4c:	ldr	r1, [fp, #-12]
   1bc50:	str	r1, [sp, #32]
   1bc54:	ldr	r2, [fp, #-16]
   1bc58:	add	ip, sp, #8
   1bc5c:	str	ip, [sp]
   1bc60:	bl	1c4d4 <main@@Base+0x8858>
   1bc64:	str	r0, [fp, #-12]
   1bc68:	ldr	r0, [fp, #-12]
   1bc6c:	ldr	r1, [sp, #32]
   1bc70:	cmp	r0, r1
   1bc74:	beq	1bc88 <main@@Base+0x800c>
   1bc78:	ldr	r0, [fp, #-12]
   1bc7c:	ldr	r1, [fp, #-16]
   1bc80:	cmp	r0, r1
   1bc84:	bne	1bc8c <main@@Base+0x8010>
   1bc88:	b	1be48 <main@@Base+0x81cc>
   1bc8c:	b	1bc90 <main@@Base+0x8014>
   1bc90:	ldr	r0, [sp, #8]
   1bc94:	ldr	r1, [sp, #12]
   1bc98:	orr	r0, r0, r1
   1bc9c:	cmp	r0, #0
   1bca0:	bne	1bcbc <main@@Base+0x8040>
   1bca4:	b	1bca8 <main@@Base+0x802c>
   1bca8:	ldr	r0, [fp, #-8]
   1bcac:	ldr	r0, [r0, #8]
   1bcb0:	and	r0, r0, #2
   1bcb4:	cmp	r0, #0
   1bcb8:	beq	1bcfc <main@@Base+0x8080>
   1bcbc:	ldr	r0, [fp, #-8]
   1bcc0:	ldr	r0, [r0]
   1bcc4:	movw	r1, #1
   1bcc8:	movw	r2, #8
   1bccc:	movw	r3, #8
   1bcd0:	uxth	r3, r3
   1bcd4:	bl	27920 <flatcc_builder_table_add@@Base>
   1bcd8:	str	r0, [fp, #-28]	; 0xffffffe4
   1bcdc:	movw	r1, #0
   1bce0:	cmp	r0, r1
   1bce4:	bne	1bcec <main@@Base+0x8070>
   1bce8:	b	1be48 <main@@Base+0x81cc>
   1bcec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bcf0:	ldr	r2, [sp, #8]
   1bcf4:	ldr	r3, [sp, #12]
   1bcf8:	bl	1c714 <main@@Base+0x8a98>
   1bcfc:	b	1bd14 <main@@Base+0x8098>
   1bd00:	ldr	r0, [fp, #-8]
   1bd04:	ldr	r1, [fp, #-12]
   1bd08:	ldr	r2, [fp, #-16]
   1bd0c:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1bd10:	str	r0, [fp, #-12]
   1bd14:	b	1bde8 <main@@Base+0x816c>
   1bd18:	ldr	r0, [sp, #28]
   1bd1c:	bfc	r0, #0, #16
   1bd20:	movw	r1, #0
   1bd24:	movt	r1, #26980	; 0x6964
   1bd28:	teq	r0, r1
   1bd2c:	bne	1bdd0 <main@@Base+0x8154>
   1bd30:	b	1bd34 <main@@Base+0x80b8>
   1bd34:	ldr	r0, [fp, #-8]
   1bd38:	ldr	r1, [fp, #-12]
   1bd3c:	str	r1, [sp, #32]
   1bd40:	ldr	r2, [fp, #-16]
   1bd44:	movw	r3, #2
   1bd48:	bl	17ce4 <main@@Base+0x4068>
   1bd4c:	str	r0, [fp, #-12]
   1bd50:	ldr	r0, [sp, #32]
   1bd54:	ldr	r1, [fp, #-12]
   1bd58:	cmp	r0, r1
   1bd5c:	beq	1bdb8 <main@@Base+0x813c>
   1bd60:	ldr	r0, [fp, #-8]
   1bd64:	ldr	r1, [fp, #-12]
   1bd68:	ldr	r2, [fp, #-16]
   1bd6c:	sub	r3, fp, #32
   1bd70:	bl	2dfac <flatcc_json_parser_build_string@@Base>
   1bd74:	str	r0, [fp, #-12]
   1bd78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bd7c:	cmp	r0, #0
   1bd80:	beq	1bda4 <main@@Base+0x8128>
   1bd84:	ldr	r0, [fp, #-8]
   1bd88:	ldr	r0, [r0]
   1bd8c:	movw	r1, #0
   1bd90:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   1bd94:	str	r0, [sp, #36]	; 0x24
   1bd98:	movw	r1, #0
   1bd9c:	cmp	r0, r1
   1bda0:	bne	1bda8 <main@@Base+0x812c>
   1bda4:	b	1be48 <main@@Base+0x81cc>
   1bda8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bdac:	ldr	r1, [sp, #36]	; 0x24
   1bdb0:	str	r0, [r1]
   1bdb4:	b	1bdcc <main@@Base+0x8150>
   1bdb8:	ldr	r0, [fp, #-8]
   1bdbc:	ldr	r1, [fp, #-12]
   1bdc0:	ldr	r2, [fp, #-16]
   1bdc4:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1bdc8:	str	r0, [fp, #-12]
   1bdcc:	b	1bde4 <main@@Base+0x8168>
   1bdd0:	ldr	r0, [fp, #-8]
   1bdd4:	ldr	r1, [fp, #-12]
   1bdd8:	ldr	r2, [fp, #-16]
   1bddc:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1bde0:	str	r0, [fp, #-12]
   1bde4:	b	1bde8 <main@@Base+0x816c>
   1bde8:	b	1bdec <main@@Base+0x8170>
   1bdec:	ldr	r0, [fp, #-8]
   1bdf0:	ldr	r1, [fp, #-12]
   1bdf4:	ldr	r2, [fp, #-16]
   1bdf8:	sub	r3, fp, #24
   1bdfc:	bl	1d02c <main@@Base+0x93b0>
   1be00:	str	r0, [fp, #-12]
   1be04:	b	1ba04 <main@@Base+0x7d88>
   1be08:	ldr	r0, [fp, #-8]
   1be0c:	ldr	r0, [r0, #24]
   1be10:	cmp	r0, #0
   1be14:	beq	1be1c <main@@Base+0x81a0>
   1be18:	b	1be48 <main@@Base+0x81cc>
   1be1c:	ldr	r0, [fp, #-8]
   1be20:	ldr	r0, [r0]
   1be24:	bl	26ce0 <flatcc_builder_end_table@@Base>
   1be28:	ldr	lr, [fp, #-20]	; 0xffffffec
   1be2c:	str	r0, [lr]
   1be30:	cmp	r0, #0
   1be34:	bne	1be3c <main@@Base+0x81c0>
   1be38:	b	1be48 <main@@Base+0x81cc>
   1be3c:	ldr	r0, [fp, #-12]
   1be40:	str	r0, [fp, #-4]
   1be44:	b	1be60 <main@@Base+0x81e4>
   1be48:	ldr	r0, [fp, #-8]
   1be4c:	ldr	r1, [fp, #-12]
   1be50:	ldr	r2, [fp, #-16]
   1be54:	movw	r3, #33	; 0x21
   1be58:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1be5c:	str	r0, [fp, #-4]
   1be60:	ldr	r0, [fp, #-4]
   1be64:	mov	sp, fp
   1be68:	pop	{fp, pc}
   1be6c:	andeq	r8, r2, r0, lsl r7
   1be70:	andeq	r8, r2, r8, ror #16
   1be74:	push	{r4, r5, r6, sl, fp, lr}
   1be78:	add	fp, sp, #16
   1be7c:	sub	sp, sp, #88	; 0x58
   1be80:	ldr	ip, [fp, #8]
   1be84:	vldr	s0, [pc, #532]	; 1c0a0 <main@@Base+0x8424>
   1be88:	str	r0, [fp, #-24]	; 0xffffffe8
   1be8c:	str	r1, [fp, #-28]	; 0xffffffe4
   1be90:	str	r2, [fp, #-32]	; 0xffffffe0
   1be94:	str	r3, [fp, #-36]	; 0xffffffdc
   1be98:	vstr	s0, [fp, #-48]	; 0xffffffd0
   1be9c:	movw	r0, #0
   1bea0:	str	r0, [sp, #36]	; 0x24
   1bea4:	ldr	r0, [fp, #8]
   1bea8:	vstr	s0, [r0]
   1beac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1beb0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1beb4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1beb8:	str	ip, [sp, #32]
   1bebc:	bl	1e7b4 <main@@Base+0xab38>
   1bec0:	str	r0, [fp, #-28]	; 0xffffffe4
   1bec4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bec8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1becc:	cmp	r0, r1
   1bed0:	bne	1bee0 <main@@Base+0x8264>
   1bed4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bed8:	str	r0, [fp, #-20]	; 0xffffffec
   1bedc:	b	1c094 <main@@Base+0x8418>
   1bee0:	b	1bee4 <main@@Base+0x8268>
   1bee4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bee8:	str	r0, [fp, #-40]	; 0xffffffd8
   1beec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bef0:	ldr	r0, [r0]
   1bef4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1bef8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1befc:	str	r2, [fp, #-44]	; 0xffffffd4
   1bf00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1bf04:	str	r0, [sp, #28]
   1bf08:	mov	r0, r1
   1bf0c:	mov	r1, r2
   1bf10:	mov	r2, r3
   1bf14:	add	r3, sp, #44	; 0x2c
   1bf18:	add	ip, sp, #48	; 0x30
   1bf1c:	str	ip, [sp]
   1bf20:	add	ip, sp, #40	; 0x28
   1bf24:	str	ip, [sp, #4]
   1bf28:	ldr	ip, [sp, #28]
   1bf2c:	blx	ip
   1bf30:	str	r0, [fp, #-28]	; 0xffffffe4
   1bf34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bf38:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bf3c:	cmp	r0, r1
   1bf40:	bne	1bf50 <main@@Base+0x82d4>
   1bf44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bf48:	str	r0, [fp, #-20]	; 0xffffffec
   1bf4c:	b	1c094 <main@@Base+0x8418>
   1bf50:	b	1bf54 <main@@Base+0x82d8>
   1bf54:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1bf58:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1bf5c:	cmp	r0, r1
   1bf60:	movw	r0, #0
   1bf64:	str	r0, [sp, #24]
   1bf68:	bne	1bf90 <main@@Base+0x8314>
   1bf6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bf70:	add	r1, r0, #4
   1bf74:	str	r1, [fp, #-40]	; 0xffffffd8
   1bf78:	ldr	r0, [r0, #4]
   1bf7c:	movw	r1, #0
   1bf80:	cmp	r0, r1
   1bf84:	movw	r0, #0
   1bf88:	movne	r0, #1
   1bf8c:	str	r0, [sp, #24]
   1bf90:	ldr	r0, [sp, #24]
   1bf94:	tst	r0, #1
   1bf98:	bne	1beec <main@@Base+0x8270>
   1bf9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1bfa0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bfa4:	cmp	r0, r1
   1bfa8:	bne	1bfc8 <main@@Base+0x834c>
   1bfac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bfb0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bfb4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1bfb8:	movw	r3, #23
   1bfbc:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1bfc0:	str	r0, [fp, #-20]	; 0xffffffec
   1bfc4:	b	1c094 <main@@Base+0x8418>
   1bfc8:	ldr	r0, [sp, #36]	; 0x24
   1bfcc:	add	r1, r0, #1
   1bfd0:	str	r1, [sp, #36]	; 0x24
   1bfd4:	cmp	r0, #0
   1bfd8:	beq	1c008 <main@@Base+0x838c>
   1bfdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bfe0:	ldr	r0, [r0, #12]
   1bfe4:	cmp	r0, #0
   1bfe8:	beq	1c008 <main@@Base+0x838c>
   1bfec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bff0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bff4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1bff8:	movw	r3, #14
   1bffc:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1c000:	str	r0, [fp, #-20]	; 0xffffffec
   1c004:	b	1c094 <main@@Base+0x8418>
   1c008:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c00c:	mov	r1, r0
   1c010:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c014:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c018:	ldr	ip, [sp, #44]	; 0x2c
   1c01c:	ldr	lr, [sp, #48]	; 0x30
   1c020:	ldr	r4, [sp, #52]	; 0x34
   1c024:	mov	r5, sp
   1c028:	sub	r6, fp, #48	; 0x30
   1c02c:	str	r6, [r5, #8]
   1c030:	str	r4, [r5, #4]
   1c034:	str	lr, [r5]
   1c038:	str	r0, [sp, #20]
   1c03c:	mov	r0, r2
   1c040:	str	r1, [sp, #16]
   1c044:	mov	r1, r3
   1c048:	ldr	r2, [sp, #20]
   1c04c:	mov	r3, ip
   1c050:	bl	23014 <main@@Base+0xf398>
   1c054:	ldr	r1, [sp, #16]
   1c058:	cmp	r1, r0
   1c05c:	bne	1c06c <main@@Base+0x83f0>
   1c060:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c064:	str	r0, [fp, #-20]	; 0xffffffec
   1c068:	b	1c094 <main@@Base+0x8418>
   1c06c:	vldr	s0, [fp, #-48]	; 0xffffffd0
   1c070:	ldr	r0, [fp, #8]
   1c074:	vldr	s2, [r0]
   1c078:	vadd.f32	s0, s2, s0
   1c07c:	vstr	s0, [r0]
   1c080:	ldr	r0, [sp, #40]	; 0x28
   1c084:	cmp	r0, #0
   1c088:	bne	1bee4 <main@@Base+0x8268>
   1c08c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c090:	str	r0, [fp, #-20]	; 0xffffffec
   1c094:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c098:	sub	sp, fp, #16
   1c09c:	pop	{r4, r5, r6, sl, fp, pc}
   1c0a0:	andeq	r0, r0, r0
   1c0a4:	push	{fp, lr}
   1c0a8:	mov	fp, sp
   1c0ac:	sub	sp, sp, #8
   1c0b0:	str	r0, [sp, #4]
   1c0b4:	vstr	s0, [sp]
   1c0b8:	vldr	s0, [sp]
   1c0bc:	bl	2309c <main@@Base+0xf420>
   1c0c0:	ldr	r0, [sp, #4]
   1c0c4:	vstr	s0, [r0]
   1c0c8:	mov	sp, fp
   1c0cc:	pop	{fp, pc}
   1c0d0:	push	{r4, r5, fp, lr}
   1c0d4:	add	fp, sp, #8
   1c0d8:	sub	sp, sp, #56	; 0x38
   1c0dc:	str	r0, [fp, #-16]
   1c0e0:	str	r1, [fp, #-20]	; 0xffffffec
   1c0e4:	str	r2, [fp, #-24]	; 0xffffffe8
   1c0e8:	str	r3, [fp, #-28]	; 0xffffffe4
   1c0ec:	mov	r0, #0
   1c0f0:	str	r0, [sp, #28]
   1c0f4:	str	r0, [sp, #24]
   1c0f8:	movw	r0, #0
   1c0fc:	str	r0, [sp, #20]
   1c100:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c104:	str	r1, [sp, #16]
   1c108:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c10c:	str	r0, [r1]
   1c110:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c114:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c118:	cmp	r0, r1
   1c11c:	bne	1c12c <main@@Base+0x84b0>
   1c120:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c124:	str	r0, [fp, #-12]
   1c128:	b	1c19c <main@@Base+0x8520>
   1c12c:	ldr	r0, [fp, #-16]
   1c130:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c134:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c138:	add	r3, sp, #20
   1c13c:	add	ip, sp, #24
   1c140:	str	ip, [sp]
   1c144:	bl	2d564 <flatcc_json_parser_integer@@Base>
   1c148:	str	r0, [fp, #-20]	; 0xffffffec
   1c14c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c150:	ldr	r1, [sp, #16]
   1c154:	cmp	r0, r1
   1c158:	beq	1c194 <main@@Base+0x8518>
   1c15c:	ldr	r0, [fp, #-16]
   1c160:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c164:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c168:	ldr	r3, [sp, #20]
   1c16c:	ldr	ip, [sp, #24]
   1c170:	ldr	lr, [sp, #28]
   1c174:	ldr	r4, [fp, #-28]	; 0xffffffe4
   1c178:	mov	r5, sp
   1c17c:	str	r4, [r5, #8]
   1c180:	str	lr, [r5, #4]
   1c184:	str	ip, [r5]
   1c188:	bl	230c0 <main@@Base+0xf444>
   1c18c:	str	r0, [fp, #-12]
   1c190:	b	1c19c <main@@Base+0x8520>
   1c194:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c198:	str	r0, [fp, #-12]
   1c19c:	ldr	r0, [fp, #-12]
   1c1a0:	sub	sp, fp, #8
   1c1a4:	pop	{r4, r5, fp, pc}
   1c1a8:	push	{r4, r5, r6, sl, fp, lr}
   1c1ac:	add	fp, sp, #16
   1c1b0:	sub	sp, sp, #88	; 0x58
   1c1b4:	ldr	ip, [fp, #8]
   1c1b8:	str	r0, [fp, #-24]	; 0xffffffe8
   1c1bc:	str	r1, [fp, #-28]	; 0xffffffe4
   1c1c0:	str	r2, [fp, #-32]	; 0xffffffe0
   1c1c4:	str	r3, [fp, #-36]	; 0xffffffdc
   1c1c8:	movw	r0, #0
   1c1cc:	str	r0, [fp, #-48]	; 0xffffffd0
   1c1d0:	str	r0, [sp, #36]	; 0x24
   1c1d4:	ldr	r1, [fp, #8]
   1c1d8:	str	r0, [r1]
   1c1dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c1e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c1e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c1e8:	str	ip, [sp, #32]
   1c1ec:	bl	1e7b4 <main@@Base+0xab38>
   1c1f0:	str	r0, [fp, #-28]	; 0xffffffe4
   1c1f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c1f8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c1fc:	cmp	r0, r1
   1c200:	bne	1c210 <main@@Base+0x8594>
   1c204:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c208:	str	r0, [fp, #-20]	; 0xffffffec
   1c20c:	b	1c3c4 <main@@Base+0x8748>
   1c210:	b	1c214 <main@@Base+0x8598>
   1c214:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c218:	str	r0, [fp, #-40]	; 0xffffffd8
   1c21c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c220:	ldr	r0, [r0]
   1c224:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c228:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c22c:	str	r2, [fp, #-44]	; 0xffffffd4
   1c230:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c234:	str	r0, [sp, #28]
   1c238:	mov	r0, r1
   1c23c:	mov	r1, r2
   1c240:	mov	r2, r3
   1c244:	add	r3, sp, #44	; 0x2c
   1c248:	add	ip, sp, #48	; 0x30
   1c24c:	str	ip, [sp]
   1c250:	add	ip, sp, #40	; 0x28
   1c254:	str	ip, [sp, #4]
   1c258:	ldr	ip, [sp, #28]
   1c25c:	blx	ip
   1c260:	str	r0, [fp, #-28]	; 0xffffffe4
   1c264:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c268:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c26c:	cmp	r0, r1
   1c270:	bne	1c280 <main@@Base+0x8604>
   1c274:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c278:	str	r0, [fp, #-20]	; 0xffffffec
   1c27c:	b	1c3c4 <main@@Base+0x8748>
   1c280:	b	1c284 <main@@Base+0x8608>
   1c284:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c288:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c28c:	cmp	r0, r1
   1c290:	movw	r0, #0
   1c294:	str	r0, [sp, #24]
   1c298:	bne	1c2c0 <main@@Base+0x8644>
   1c29c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c2a0:	add	r1, r0, #4
   1c2a4:	str	r1, [fp, #-40]	; 0xffffffd8
   1c2a8:	ldr	r0, [r0, #4]
   1c2ac:	movw	r1, #0
   1c2b0:	cmp	r0, r1
   1c2b4:	movw	r0, #0
   1c2b8:	movne	r0, #1
   1c2bc:	str	r0, [sp, #24]
   1c2c0:	ldr	r0, [sp, #24]
   1c2c4:	tst	r0, #1
   1c2c8:	bne	1c21c <main@@Base+0x85a0>
   1c2cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c2d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c2d4:	cmp	r0, r1
   1c2d8:	bne	1c2f8 <main@@Base+0x867c>
   1c2dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c2e0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c2e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c2e8:	movw	r3, #23
   1c2ec:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1c2f0:	str	r0, [fp, #-20]	; 0xffffffec
   1c2f4:	b	1c3c4 <main@@Base+0x8748>
   1c2f8:	ldr	r0, [sp, #36]	; 0x24
   1c2fc:	add	r1, r0, #1
   1c300:	str	r1, [sp, #36]	; 0x24
   1c304:	cmp	r0, #0
   1c308:	beq	1c338 <main@@Base+0x86bc>
   1c30c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c310:	ldr	r0, [r0, #12]
   1c314:	cmp	r0, #0
   1c318:	beq	1c338 <main@@Base+0x86bc>
   1c31c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c320:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c324:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c328:	movw	r3, #14
   1c32c:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1c330:	str	r0, [fp, #-20]	; 0xffffffec
   1c334:	b	1c3c4 <main@@Base+0x8748>
   1c338:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c33c:	mov	r1, r0
   1c340:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c344:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c348:	ldr	ip, [sp, #44]	; 0x2c
   1c34c:	ldr	lr, [sp, #48]	; 0x30
   1c350:	ldr	r4, [sp, #52]	; 0x34
   1c354:	mov	r5, sp
   1c358:	sub	r6, fp, #48	; 0x30
   1c35c:	str	r6, [r5, #8]
   1c360:	str	r4, [r5, #4]
   1c364:	str	lr, [r5]
   1c368:	str	r0, [sp, #20]
   1c36c:	mov	r0, r2
   1c370:	str	r1, [sp, #16]
   1c374:	mov	r1, r3
   1c378:	ldr	r2, [sp, #20]
   1c37c:	mov	r3, ip
   1c380:	bl	230c0 <main@@Base+0xf444>
   1c384:	ldr	r1, [sp, #16]
   1c388:	cmp	r1, r0
   1c38c:	bne	1c39c <main@@Base+0x8720>
   1c390:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c394:	str	r0, [fp, #-20]	; 0xffffffec
   1c398:	b	1c3c4 <main@@Base+0x8748>
   1c39c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c3a0:	ldr	r1, [fp, #8]
   1c3a4:	ldr	r2, [r1]
   1c3a8:	add	r0, r2, r0
   1c3ac:	str	r0, [r1]
   1c3b0:	ldr	r0, [sp, #40]	; 0x28
   1c3b4:	cmp	r0, #0
   1c3b8:	bne	1c214 <main@@Base+0x8598>
   1c3bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c3c0:	str	r0, [fp, #-20]	; 0xffffffec
   1c3c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c3c8:	sub	sp, fp, #16
   1c3cc:	pop	{r4, r5, r6, sl, fp, pc}
   1c3d0:	push	{fp, lr}
   1c3d4:	mov	fp, sp
   1c3d8:	sub	sp, sp, #8
   1c3dc:	str	r0, [sp, #4]
   1c3e0:	str	r1, [sp]
   1c3e4:	ldr	r0, [sp]
   1c3e8:	bl	231ac <main@@Base+0xf530>
   1c3ec:	ldr	r1, [sp, #4]
   1c3f0:	str	r0, [r1]
   1c3f4:	mov	sp, fp
   1c3f8:	pop	{fp, pc}
   1c3fc:	push	{r4, r5, fp, lr}
   1c400:	add	fp, sp, #8
   1c404:	sub	sp, sp, #56	; 0x38
   1c408:	str	r0, [fp, #-16]
   1c40c:	str	r1, [fp, #-20]	; 0xffffffec
   1c410:	str	r2, [fp, #-24]	; 0xffffffe8
   1c414:	str	r3, [fp, #-28]	; 0xffffffe4
   1c418:	mov	r0, #0
   1c41c:	str	r0, [sp, #28]
   1c420:	str	r0, [sp, #24]
   1c424:	str	r0, [sp, #20]
   1c428:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c42c:	str	r1, [sp, #16]
   1c430:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c434:	str	r0, [r1, #4]
   1c438:	str	r0, [r1]
   1c43c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c440:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c444:	cmp	r0, r1
   1c448:	bne	1c458 <main@@Base+0x87dc>
   1c44c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c450:	str	r0, [fp, #-12]
   1c454:	b	1c4c8 <main@@Base+0x884c>
   1c458:	ldr	r0, [fp, #-16]
   1c45c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c460:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c464:	add	r3, sp, #20
   1c468:	add	ip, sp, #24
   1c46c:	str	ip, [sp]
   1c470:	bl	2d564 <flatcc_json_parser_integer@@Base>
   1c474:	str	r0, [fp, #-20]	; 0xffffffec
   1c478:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c47c:	ldr	r1, [sp, #16]
   1c480:	cmp	r0, r1
   1c484:	beq	1c4c0 <main@@Base+0x8844>
   1c488:	ldr	r0, [fp, #-16]
   1c48c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c490:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c494:	ldr	r3, [sp, #20]
   1c498:	ldr	ip, [sp, #24]
   1c49c:	ldr	lr, [sp, #28]
   1c4a0:	ldr	r4, [fp, #-28]	; 0xffffffe4
   1c4a4:	mov	r5, sp
   1c4a8:	str	r4, [r5, #8]
   1c4ac:	str	lr, [r5, #4]
   1c4b0:	str	ip, [r5]
   1c4b4:	bl	231c0 <main@@Base+0xf544>
   1c4b8:	str	r0, [fp, #-12]
   1c4bc:	b	1c4c8 <main@@Base+0x884c>
   1c4c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c4c4:	str	r0, [fp, #-12]
   1c4c8:	ldr	r0, [fp, #-12]
   1c4cc:	sub	sp, fp, #8
   1c4d0:	pop	{r4, r5, fp, pc}
   1c4d4:	push	{r4, r5, r6, sl, fp, lr}
   1c4d8:	add	fp, sp, #16
   1c4dc:	sub	sp, sp, #96	; 0x60
   1c4e0:	ldr	ip, [fp, #8]
   1c4e4:	str	r0, [fp, #-24]	; 0xffffffe8
   1c4e8:	str	r1, [fp, #-28]	; 0xffffffe4
   1c4ec:	str	r2, [fp, #-32]	; 0xffffffe0
   1c4f0:	str	r3, [fp, #-36]	; 0xffffffdc
   1c4f4:	mov	r0, #0
   1c4f8:	str	r0, [sp, #60]	; 0x3c
   1c4fc:	str	r0, [sp, #56]	; 0x38
   1c500:	str	r0, [sp, #36]	; 0x24
   1c504:	ldr	r1, [fp, #8]
   1c508:	str	r0, [r1, #4]
   1c50c:	str	r0, [r1]
   1c510:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c514:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c518:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c51c:	str	ip, [sp, #32]
   1c520:	bl	1e7b4 <main@@Base+0xab38>
   1c524:	str	r0, [fp, #-28]	; 0xffffffe4
   1c528:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c52c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c530:	cmp	r0, r1
   1c534:	bne	1c544 <main@@Base+0x88c8>
   1c538:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c53c:	str	r0, [fp, #-20]	; 0xffffffec
   1c540:	b	1c708 <main@@Base+0x8a8c>
   1c544:	b	1c548 <main@@Base+0x88cc>
   1c548:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c54c:	str	r0, [fp, #-40]	; 0xffffffd8
   1c550:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c554:	ldr	r0, [r0]
   1c558:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c55c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c560:	str	r2, [fp, #-44]	; 0xffffffd4
   1c564:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c568:	str	r0, [sp, #28]
   1c56c:	mov	r0, r1
   1c570:	mov	r1, r2
   1c574:	mov	r2, r3
   1c578:	add	r3, sp, #44	; 0x2c
   1c57c:	add	ip, sp, #48	; 0x30
   1c580:	str	ip, [sp]
   1c584:	add	ip, sp, #40	; 0x28
   1c588:	str	ip, [sp, #4]
   1c58c:	ldr	ip, [sp, #28]
   1c590:	blx	ip
   1c594:	str	r0, [fp, #-28]	; 0xffffffe4
   1c598:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c59c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c5a0:	cmp	r0, r1
   1c5a4:	bne	1c5b4 <main@@Base+0x8938>
   1c5a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c5ac:	str	r0, [fp, #-20]	; 0xffffffec
   1c5b0:	b	1c708 <main@@Base+0x8a8c>
   1c5b4:	b	1c5b8 <main@@Base+0x893c>
   1c5b8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c5bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c5c0:	cmp	r0, r1
   1c5c4:	movw	r0, #0
   1c5c8:	str	r0, [sp, #24]
   1c5cc:	bne	1c5f4 <main@@Base+0x8978>
   1c5d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c5d4:	add	r1, r0, #4
   1c5d8:	str	r1, [fp, #-40]	; 0xffffffd8
   1c5dc:	ldr	r0, [r0, #4]
   1c5e0:	movw	r1, #0
   1c5e4:	cmp	r0, r1
   1c5e8:	movw	r0, #0
   1c5ec:	movne	r0, #1
   1c5f0:	str	r0, [sp, #24]
   1c5f4:	ldr	r0, [sp, #24]
   1c5f8:	tst	r0, #1
   1c5fc:	bne	1c550 <main@@Base+0x88d4>
   1c600:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c604:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c608:	cmp	r0, r1
   1c60c:	bne	1c62c <main@@Base+0x89b0>
   1c610:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c614:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c618:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c61c:	movw	r3, #23
   1c620:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1c624:	str	r0, [fp, #-20]	; 0xffffffec
   1c628:	b	1c708 <main@@Base+0x8a8c>
   1c62c:	ldr	r0, [sp, #36]	; 0x24
   1c630:	add	r1, r0, #1
   1c634:	str	r1, [sp, #36]	; 0x24
   1c638:	cmp	r0, #0
   1c63c:	beq	1c66c <main@@Base+0x89f0>
   1c640:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c644:	ldr	r0, [r0, #12]
   1c648:	cmp	r0, #0
   1c64c:	beq	1c66c <main@@Base+0x89f0>
   1c650:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c654:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c658:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c65c:	movw	r3, #14
   1c660:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1c664:	str	r0, [fp, #-20]	; 0xffffffec
   1c668:	b	1c708 <main@@Base+0x8a8c>
   1c66c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c670:	mov	r1, r0
   1c674:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c678:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c67c:	ldr	ip, [sp, #44]	; 0x2c
   1c680:	ldr	lr, [sp, #48]	; 0x30
   1c684:	ldr	r4, [sp, #52]	; 0x34
   1c688:	mov	r5, sp
   1c68c:	add	r6, sp, #56	; 0x38
   1c690:	str	r6, [r5, #8]
   1c694:	str	r4, [r5, #4]
   1c698:	str	lr, [r5]
   1c69c:	str	r0, [sp, #20]
   1c6a0:	mov	r0, r2
   1c6a4:	str	r1, [sp, #16]
   1c6a8:	mov	r1, r3
   1c6ac:	ldr	r2, [sp, #20]
   1c6b0:	mov	r3, ip
   1c6b4:	bl	231c0 <main@@Base+0xf544>
   1c6b8:	ldr	r1, [sp, #16]
   1c6bc:	cmp	r1, r0
   1c6c0:	bne	1c6d0 <main@@Base+0x8a54>
   1c6c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c6c8:	str	r0, [fp, #-20]	; 0xffffffec
   1c6cc:	b	1c708 <main@@Base+0x8a8c>
   1c6d0:	ldr	r0, [sp, #56]	; 0x38
   1c6d4:	ldr	r1, [sp, #60]	; 0x3c
   1c6d8:	ldr	r2, [fp, #8]
   1c6dc:	ldr	r3, [r2]
   1c6e0:	ldr	ip, [r2, #4]
   1c6e4:	adds	r0, r3, r0
   1c6e8:	adc	r1, ip, r1
   1c6ec:	str	r0, [r2]
   1c6f0:	str	r1, [r2, #4]
   1c6f4:	ldr	r0, [sp, #40]	; 0x28
   1c6f8:	cmp	r0, #0
   1c6fc:	bne	1c548 <main@@Base+0x88cc>
   1c700:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c704:	str	r0, [fp, #-20]	; 0xffffffec
   1c708:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c70c:	sub	sp, fp, #16
   1c710:	pop	{r4, r5, r6, sl, fp, pc}
   1c714:	push	{fp, lr}
   1c718:	mov	fp, sp
   1c71c:	sub	sp, sp, #16
   1c720:	str	r0, [fp, #-4]
   1c724:	str	r3, [sp, #4]
   1c728:	str	r2, [sp]
   1c72c:	ldr	r0, [sp]
   1c730:	ldr	r1, [sp, #4]
   1c734:	bl	232b0 <main@@Base+0xf634>
   1c738:	ldr	r2, [fp, #-4]
   1c73c:	str	r1, [r2, #4]
   1c740:	str	r0, [r2]
   1c744:	mov	sp, fp
   1c748:	pop	{fp, pc}
   1c74c:	push	{r4, r5, fp, lr}
   1c750:	add	fp, sp, #8
   1c754:	sub	sp, sp, #56	; 0x38
   1c758:	str	r0, [fp, #-16]
   1c75c:	str	r1, [fp, #-20]	; 0xffffffec
   1c760:	str	r2, [fp, #-24]	; 0xffffffe8
   1c764:	str	r3, [fp, #-28]	; 0xffffffe4
   1c768:	mov	r0, #0
   1c76c:	str	r0, [sp, #28]
   1c770:	str	r0, [sp, #24]
   1c774:	movw	r0, #0
   1c778:	str	r0, [sp, #20]
   1c77c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c780:	str	r1, [sp, #16]
   1c784:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c788:	str	r0, [r1]
   1c78c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c790:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c794:	cmp	r0, r1
   1c798:	bne	1c7a8 <main@@Base+0x8b2c>
   1c79c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c7a0:	str	r0, [fp, #-12]
   1c7a4:	b	1c818 <main@@Base+0x8b9c>
   1c7a8:	ldr	r0, [fp, #-16]
   1c7ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c7b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c7b4:	add	r3, sp, #20
   1c7b8:	add	ip, sp, #24
   1c7bc:	str	ip, [sp]
   1c7c0:	bl	2d564 <flatcc_json_parser_integer@@Base>
   1c7c4:	str	r0, [fp, #-20]	; 0xffffffec
   1c7c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c7cc:	ldr	r1, [sp, #16]
   1c7d0:	cmp	r0, r1
   1c7d4:	beq	1c810 <main@@Base+0x8b94>
   1c7d8:	ldr	r0, [fp, #-16]
   1c7dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c7e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c7e4:	ldr	r3, [sp, #20]
   1c7e8:	ldr	ip, [sp, #24]
   1c7ec:	ldr	lr, [sp, #28]
   1c7f0:	ldr	r4, [fp, #-28]	; 0xffffffe4
   1c7f4:	mov	r5, sp
   1c7f8:	str	r4, [r5, #8]
   1c7fc:	str	lr, [r5, #4]
   1c800:	str	ip, [r5]
   1c804:	bl	232cc <main@@Base+0xf650>
   1c808:	str	r0, [fp, #-12]
   1c80c:	b	1c818 <main@@Base+0x8b9c>
   1c810:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c814:	str	r0, [fp, #-12]
   1c818:	ldr	r0, [fp, #-12]
   1c81c:	sub	sp, fp, #8
   1c820:	pop	{r4, r5, fp, pc}
   1c824:	push	{r4, r5, r6, sl, fp, lr}
   1c828:	add	fp, sp, #16
   1c82c:	sub	sp, sp, #88	; 0x58
   1c830:	ldr	ip, [fp, #8]
   1c834:	str	r0, [fp, #-24]	; 0xffffffe8
   1c838:	str	r1, [fp, #-28]	; 0xffffffe4
   1c83c:	str	r2, [fp, #-32]	; 0xffffffe0
   1c840:	str	r3, [fp, #-36]	; 0xffffffdc
   1c844:	movw	r0, #0
   1c848:	str	r0, [fp, #-48]	; 0xffffffd0
   1c84c:	str	r0, [sp, #36]	; 0x24
   1c850:	ldr	r1, [fp, #8]
   1c854:	str	r0, [r1]
   1c858:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c85c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c860:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c864:	str	ip, [sp, #32]
   1c868:	bl	1e7b4 <main@@Base+0xab38>
   1c86c:	str	r0, [fp, #-28]	; 0xffffffe4
   1c870:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c874:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c878:	cmp	r0, r1
   1c87c:	bne	1c88c <main@@Base+0x8c10>
   1c880:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c884:	str	r0, [fp, #-20]	; 0xffffffec
   1c888:	b	1ca40 <main@@Base+0x8dc4>
   1c88c:	b	1c890 <main@@Base+0x8c14>
   1c890:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c894:	str	r0, [fp, #-40]	; 0xffffffd8
   1c898:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c89c:	ldr	r0, [r0]
   1c8a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c8a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c8a8:	str	r2, [fp, #-44]	; 0xffffffd4
   1c8ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c8b0:	str	r0, [sp, #28]
   1c8b4:	mov	r0, r1
   1c8b8:	mov	r1, r2
   1c8bc:	mov	r2, r3
   1c8c0:	add	r3, sp, #44	; 0x2c
   1c8c4:	add	ip, sp, #48	; 0x30
   1c8c8:	str	ip, [sp]
   1c8cc:	add	ip, sp, #40	; 0x28
   1c8d0:	str	ip, [sp, #4]
   1c8d4:	ldr	ip, [sp, #28]
   1c8d8:	blx	ip
   1c8dc:	str	r0, [fp, #-28]	; 0xffffffe4
   1c8e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c8e4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c8e8:	cmp	r0, r1
   1c8ec:	bne	1c8fc <main@@Base+0x8c80>
   1c8f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c8f4:	str	r0, [fp, #-20]	; 0xffffffec
   1c8f8:	b	1ca40 <main@@Base+0x8dc4>
   1c8fc:	b	1c900 <main@@Base+0x8c84>
   1c900:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1c904:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1c908:	cmp	r0, r1
   1c90c:	movw	r0, #0
   1c910:	str	r0, [sp, #24]
   1c914:	bne	1c93c <main@@Base+0x8cc0>
   1c918:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1c91c:	add	r1, r0, #4
   1c920:	str	r1, [fp, #-40]	; 0xffffffd8
   1c924:	ldr	r0, [r0, #4]
   1c928:	movw	r1, #0
   1c92c:	cmp	r0, r1
   1c930:	movw	r0, #0
   1c934:	movne	r0, #1
   1c938:	str	r0, [sp, #24]
   1c93c:	ldr	r0, [sp, #24]
   1c940:	tst	r0, #1
   1c944:	bne	1c898 <main@@Base+0x8c1c>
   1c948:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1c94c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c950:	cmp	r0, r1
   1c954:	bne	1c974 <main@@Base+0x8cf8>
   1c958:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c95c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c960:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c964:	movw	r3, #23
   1c968:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1c96c:	str	r0, [fp, #-20]	; 0xffffffec
   1c970:	b	1ca40 <main@@Base+0x8dc4>
   1c974:	ldr	r0, [sp, #36]	; 0x24
   1c978:	add	r1, r0, #1
   1c97c:	str	r1, [sp, #36]	; 0x24
   1c980:	cmp	r0, #0
   1c984:	beq	1c9b4 <main@@Base+0x8d38>
   1c988:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c98c:	ldr	r0, [r0, #12]
   1c990:	cmp	r0, #0
   1c994:	beq	1c9b4 <main@@Base+0x8d38>
   1c998:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c99c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c9a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c9a4:	movw	r3, #14
   1c9a8:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1c9ac:	str	r0, [fp, #-20]	; 0xffffffec
   1c9b0:	b	1ca40 <main@@Base+0x8dc4>
   1c9b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c9b8:	mov	r1, r0
   1c9bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c9c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c9c4:	ldr	ip, [sp, #44]	; 0x2c
   1c9c8:	ldr	lr, [sp, #48]	; 0x30
   1c9cc:	ldr	r4, [sp, #52]	; 0x34
   1c9d0:	mov	r5, sp
   1c9d4:	sub	r6, fp, #48	; 0x30
   1c9d8:	str	r6, [r5, #8]
   1c9dc:	str	r4, [r5, #4]
   1c9e0:	str	lr, [r5]
   1c9e4:	str	r0, [sp, #20]
   1c9e8:	mov	r0, r2
   1c9ec:	str	r1, [sp, #16]
   1c9f0:	mov	r1, r3
   1c9f4:	ldr	r2, [sp, #20]
   1c9f8:	mov	r3, ip
   1c9fc:	bl	232cc <main@@Base+0xf650>
   1ca00:	ldr	r1, [sp, #16]
   1ca04:	cmp	r1, r0
   1ca08:	bne	1ca18 <main@@Base+0x8d9c>
   1ca0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ca10:	str	r0, [fp, #-20]	; 0xffffffec
   1ca14:	b	1ca40 <main@@Base+0x8dc4>
   1ca18:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ca1c:	ldr	r1, [fp, #8]
   1ca20:	ldr	r2, [r1]
   1ca24:	add	r0, r2, r0
   1ca28:	str	r0, [r1]
   1ca2c:	ldr	r0, [sp, #40]	; 0x28
   1ca30:	cmp	r0, #0
   1ca34:	bne	1c890 <main@@Base+0x8c14>
   1ca38:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ca3c:	str	r0, [fp, #-20]	; 0xffffffec
   1ca40:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ca44:	sub	sp, fp, #16
   1ca48:	pop	{r4, r5, r6, sl, fp, pc}
   1ca4c:	push	{fp, lr}
   1ca50:	mov	fp, sp
   1ca54:	sub	sp, sp, #8
   1ca58:	str	r0, [sp, #4]
   1ca5c:	str	r1, [sp]
   1ca60:	ldr	r0, [sp]
   1ca64:	bl	23374 <main@@Base+0xf6f8>
   1ca68:	ldr	r1, [sp, #4]
   1ca6c:	str	r0, [r1]
   1ca70:	mov	sp, fp
   1ca74:	pop	{fp, pc}
   1ca78:	push	{r4, r5, fp, lr}
   1ca7c:	add	fp, sp, #8
   1ca80:	sub	sp, sp, #56	; 0x38
   1ca84:	str	r0, [fp, #-16]
   1ca88:	str	r1, [fp, #-20]	; 0xffffffec
   1ca8c:	str	r2, [fp, #-24]	; 0xffffffe8
   1ca90:	str	r3, [fp, #-28]	; 0xffffffe4
   1ca94:	mov	r0, #0
   1ca98:	str	r0, [sp, #28]
   1ca9c:	str	r0, [sp, #24]
   1caa0:	str	r0, [sp, #20]
   1caa4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1caa8:	str	r1, [sp, #16]
   1caac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cab0:	str	r0, [r1, #4]
   1cab4:	str	r0, [r1]
   1cab8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cabc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cac0:	cmp	r0, r1
   1cac4:	bne	1cad4 <main@@Base+0x8e58>
   1cac8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cacc:	str	r0, [fp, #-12]
   1cad0:	b	1cb44 <main@@Base+0x8ec8>
   1cad4:	ldr	r0, [fp, #-16]
   1cad8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1cadc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cae0:	add	r3, sp, #20
   1cae4:	add	ip, sp, #24
   1cae8:	str	ip, [sp]
   1caec:	bl	2d564 <flatcc_json_parser_integer@@Base>
   1caf0:	str	r0, [fp, #-20]	; 0xffffffec
   1caf4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1caf8:	ldr	r1, [sp, #16]
   1cafc:	cmp	r0, r1
   1cb00:	beq	1cb3c <main@@Base+0x8ec0>
   1cb04:	ldr	r0, [fp, #-16]
   1cb08:	ldr	r1, [fp, #-20]	; 0xffffffec
   1cb0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cb10:	ldr	r3, [sp, #20]
   1cb14:	ldr	ip, [sp, #24]
   1cb18:	ldr	lr, [sp, #28]
   1cb1c:	ldr	r4, [fp, #-28]	; 0xffffffe4
   1cb20:	mov	r5, sp
   1cb24:	str	r4, [r5, #8]
   1cb28:	str	lr, [r5, #4]
   1cb2c:	str	ip, [r5]
   1cb30:	bl	23388 <main@@Base+0xf70c>
   1cb34:	str	r0, [fp, #-12]
   1cb38:	b	1cb44 <main@@Base+0x8ec8>
   1cb3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cb40:	str	r0, [fp, #-12]
   1cb44:	ldr	r0, [fp, #-12]
   1cb48:	sub	sp, fp, #8
   1cb4c:	pop	{r4, r5, fp, pc}
   1cb50:	push	{r4, r5, r6, sl, fp, lr}
   1cb54:	add	fp, sp, #16
   1cb58:	sub	sp, sp, #96	; 0x60
   1cb5c:	ldr	ip, [fp, #8]
   1cb60:	str	r0, [fp, #-24]	; 0xffffffe8
   1cb64:	str	r1, [fp, #-28]	; 0xffffffe4
   1cb68:	str	r2, [fp, #-32]	; 0xffffffe0
   1cb6c:	str	r3, [fp, #-36]	; 0xffffffdc
   1cb70:	mov	r0, #0
   1cb74:	str	r0, [sp, #60]	; 0x3c
   1cb78:	str	r0, [sp, #56]	; 0x38
   1cb7c:	str	r0, [sp, #36]	; 0x24
   1cb80:	ldr	r1, [fp, #8]
   1cb84:	str	r0, [r1, #4]
   1cb88:	str	r0, [r1]
   1cb8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cb94:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1cb98:	str	ip, [sp, #32]
   1cb9c:	bl	1e7b4 <main@@Base+0xab38>
   1cba0:	str	r0, [fp, #-28]	; 0xffffffe4
   1cba4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cba8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1cbac:	cmp	r0, r1
   1cbb0:	bne	1cbc0 <main@@Base+0x8f44>
   1cbb4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cbb8:	str	r0, [fp, #-20]	; 0xffffffec
   1cbbc:	b	1cd84 <main@@Base+0x9108>
   1cbc0:	b	1cbc4 <main@@Base+0x8f48>
   1cbc4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1cbc8:	str	r0, [fp, #-40]	; 0xffffffd8
   1cbcc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cbd0:	ldr	r0, [r0]
   1cbd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cbd8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1cbdc:	str	r2, [fp, #-44]	; 0xffffffd4
   1cbe0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1cbe4:	str	r0, [sp, #28]
   1cbe8:	mov	r0, r1
   1cbec:	mov	r1, r2
   1cbf0:	mov	r2, r3
   1cbf4:	add	r3, sp, #44	; 0x2c
   1cbf8:	add	ip, sp, #48	; 0x30
   1cbfc:	str	ip, [sp]
   1cc00:	add	ip, sp, #40	; 0x28
   1cc04:	str	ip, [sp, #4]
   1cc08:	ldr	ip, [sp, #28]
   1cc0c:	blx	ip
   1cc10:	str	r0, [fp, #-28]	; 0xffffffe4
   1cc14:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cc18:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1cc1c:	cmp	r0, r1
   1cc20:	bne	1cc30 <main@@Base+0x8fb4>
   1cc24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cc28:	str	r0, [fp, #-20]	; 0xffffffec
   1cc2c:	b	1cd84 <main@@Base+0x9108>
   1cc30:	b	1cc34 <main@@Base+0x8fb8>
   1cc34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cc38:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1cc3c:	cmp	r0, r1
   1cc40:	movw	r0, #0
   1cc44:	str	r0, [sp, #24]
   1cc48:	bne	1cc70 <main@@Base+0x8ff4>
   1cc4c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cc50:	add	r1, r0, #4
   1cc54:	str	r1, [fp, #-40]	; 0xffffffd8
   1cc58:	ldr	r0, [r0, #4]
   1cc5c:	movw	r1, #0
   1cc60:	cmp	r0, r1
   1cc64:	movw	r0, #0
   1cc68:	movne	r0, #1
   1cc6c:	str	r0, [sp, #24]
   1cc70:	ldr	r0, [sp, #24]
   1cc74:	tst	r0, #1
   1cc78:	bne	1cbcc <main@@Base+0x8f50>
   1cc7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1cc80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cc84:	cmp	r0, r1
   1cc88:	bne	1cca8 <main@@Base+0x902c>
   1cc8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cc90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cc94:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1cc98:	movw	r3, #23
   1cc9c:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1cca0:	str	r0, [fp, #-20]	; 0xffffffec
   1cca4:	b	1cd84 <main@@Base+0x9108>
   1cca8:	ldr	r0, [sp, #36]	; 0x24
   1ccac:	add	r1, r0, #1
   1ccb0:	str	r1, [sp, #36]	; 0x24
   1ccb4:	cmp	r0, #0
   1ccb8:	beq	1cce8 <main@@Base+0x906c>
   1ccbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ccc0:	ldr	r0, [r0, #12]
   1ccc4:	cmp	r0, #0
   1ccc8:	beq	1cce8 <main@@Base+0x906c>
   1cccc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ccd0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ccd4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ccd8:	movw	r3, #14
   1ccdc:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1cce0:	str	r0, [fp, #-20]	; 0xffffffec
   1cce4:	b	1cd84 <main@@Base+0x9108>
   1cce8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ccec:	mov	r1, r0
   1ccf0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ccf4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ccf8:	ldr	ip, [sp, #44]	; 0x2c
   1ccfc:	ldr	lr, [sp, #48]	; 0x30
   1cd00:	ldr	r4, [sp, #52]	; 0x34
   1cd04:	mov	r5, sp
   1cd08:	add	r6, sp, #56	; 0x38
   1cd0c:	str	r6, [r5, #8]
   1cd10:	str	r4, [r5, #4]
   1cd14:	str	lr, [r5]
   1cd18:	str	r0, [sp, #20]
   1cd1c:	mov	r0, r2
   1cd20:	str	r1, [sp, #16]
   1cd24:	mov	r1, r3
   1cd28:	ldr	r2, [sp, #20]
   1cd2c:	mov	r3, ip
   1cd30:	bl	23388 <main@@Base+0xf70c>
   1cd34:	ldr	r1, [sp, #16]
   1cd38:	cmp	r1, r0
   1cd3c:	bne	1cd4c <main@@Base+0x90d0>
   1cd40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cd44:	str	r0, [fp, #-20]	; 0xffffffec
   1cd48:	b	1cd84 <main@@Base+0x9108>
   1cd4c:	ldr	r0, [sp, #56]	; 0x38
   1cd50:	ldr	r1, [sp, #60]	; 0x3c
   1cd54:	ldr	r2, [fp, #8]
   1cd58:	ldr	r3, [r2]
   1cd5c:	ldr	ip, [r2, #4]
   1cd60:	adds	r0, r3, r0
   1cd64:	adc	r1, ip, r1
   1cd68:	str	r0, [r2]
   1cd6c:	str	r1, [r2, #4]
   1cd70:	ldr	r0, [sp, #40]	; 0x28
   1cd74:	cmp	r0, #0
   1cd78:	bne	1cbc4 <main@@Base+0x8f48>
   1cd7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cd80:	str	r0, [fp, #-20]	; 0xffffffec
   1cd84:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cd88:	sub	sp, fp, #16
   1cd8c:	pop	{r4, r5, r6, sl, fp, pc}
   1cd90:	push	{fp, lr}
   1cd94:	mov	fp, sp
   1cd98:	sub	sp, sp, #16
   1cd9c:	str	r0, [fp, #-4]
   1cda0:	str	r3, [sp, #4]
   1cda4:	str	r2, [sp]
   1cda8:	ldr	r0, [sp]
   1cdac:	ldr	r1, [sp, #4]
   1cdb0:	bl	2340c <main@@Base+0xf790>
   1cdb4:	ldr	r2, [fp, #-4]
   1cdb8:	str	r1, [r2, #4]
   1cdbc:	str	r0, [r2]
   1cdc0:	mov	sp, fp
   1cdc4:	pop	{fp, pc}
   1cdc8:	push	{r4, r5, r6, sl, fp, lr}
   1cdcc:	add	fp, sp, #16
   1cdd0:	sub	sp, sp, #96	; 0x60
   1cdd4:	ldr	ip, [fp, #8]
   1cdd8:	vldr	d16, [pc, #536]	; 1cff8 <main@@Base+0x937c>
   1cddc:	str	r0, [fp, #-24]	; 0xffffffe8
   1cde0:	str	r1, [fp, #-28]	; 0xffffffe4
   1cde4:	str	r2, [fp, #-32]	; 0xffffffe0
   1cde8:	str	r3, [fp, #-36]	; 0xffffffdc
   1cdec:	vstr	d16, [sp, #56]	; 0x38
   1cdf0:	movw	r0, #0
   1cdf4:	str	r0, [sp, #36]	; 0x24
   1cdf8:	ldr	r0, [fp, #8]
   1cdfc:	vstr	d16, [r0]
   1ce00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ce08:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ce0c:	str	ip, [sp, #32]
   1ce10:	bl	1e7b4 <main@@Base+0xab38>
   1ce14:	str	r0, [fp, #-28]	; 0xffffffe4
   1ce18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ce1c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ce20:	cmp	r0, r1
   1ce24:	bne	1ce34 <main@@Base+0x91b8>
   1ce28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ce2c:	str	r0, [fp, #-20]	; 0xffffffec
   1ce30:	b	1cfe8 <main@@Base+0x936c>
   1ce34:	b	1ce38 <main@@Base+0x91bc>
   1ce38:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ce3c:	str	r0, [fp, #-40]	; 0xffffffd8
   1ce40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ce44:	ldr	r0, [r0]
   1ce48:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ce4c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ce50:	str	r2, [fp, #-44]	; 0xffffffd4
   1ce54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ce58:	str	r0, [sp, #28]
   1ce5c:	mov	r0, r1
   1ce60:	mov	r1, r2
   1ce64:	mov	r2, r3
   1ce68:	add	r3, sp, #44	; 0x2c
   1ce6c:	add	ip, sp, #48	; 0x30
   1ce70:	str	ip, [sp]
   1ce74:	add	ip, sp, #40	; 0x28
   1ce78:	str	ip, [sp, #4]
   1ce7c:	ldr	ip, [sp, #28]
   1ce80:	blx	ip
   1ce84:	str	r0, [fp, #-28]	; 0xffffffe4
   1ce88:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ce8c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1ce90:	cmp	r0, r1
   1ce94:	bne	1cea4 <main@@Base+0x9228>
   1ce98:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ce9c:	str	r0, [fp, #-20]	; 0xffffffec
   1cea0:	b	1cfe8 <main@@Base+0x936c>
   1cea4:	b	1cea8 <main@@Base+0x922c>
   1cea8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ceac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ceb0:	cmp	r0, r1
   1ceb4:	movw	r0, #0
   1ceb8:	str	r0, [sp, #24]
   1cebc:	bne	1cee4 <main@@Base+0x9268>
   1cec0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1cec4:	add	r1, r0, #4
   1cec8:	str	r1, [fp, #-40]	; 0xffffffd8
   1cecc:	ldr	r0, [r0, #4]
   1ced0:	movw	r1, #0
   1ced4:	cmp	r0, r1
   1ced8:	movw	r0, #0
   1cedc:	movne	r0, #1
   1cee0:	str	r0, [sp, #24]
   1cee4:	ldr	r0, [sp, #24]
   1cee8:	tst	r0, #1
   1ceec:	bne	1ce40 <main@@Base+0x91c4>
   1cef0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1cef4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cef8:	cmp	r0, r1
   1cefc:	bne	1cf1c <main@@Base+0x92a0>
   1cf00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cf08:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1cf0c:	movw	r3, #23
   1cf10:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1cf14:	str	r0, [fp, #-20]	; 0xffffffec
   1cf18:	b	1cfe8 <main@@Base+0x936c>
   1cf1c:	ldr	r0, [sp, #36]	; 0x24
   1cf20:	add	r1, r0, #1
   1cf24:	str	r1, [sp, #36]	; 0x24
   1cf28:	cmp	r0, #0
   1cf2c:	beq	1cf5c <main@@Base+0x92e0>
   1cf30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf34:	ldr	r0, [r0, #12]
   1cf38:	cmp	r0, #0
   1cf3c:	beq	1cf5c <main@@Base+0x92e0>
   1cf40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1cf48:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1cf4c:	movw	r3, #14
   1cf50:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1cf54:	str	r0, [fp, #-20]	; 0xffffffec
   1cf58:	b	1cfe8 <main@@Base+0x936c>
   1cf5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cf60:	mov	r1, r0
   1cf64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cf68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cf6c:	ldr	ip, [sp, #44]	; 0x2c
   1cf70:	ldr	lr, [sp, #48]	; 0x30
   1cf74:	ldr	r4, [sp, #52]	; 0x34
   1cf78:	mov	r5, sp
   1cf7c:	add	r6, sp, #56	; 0x38
   1cf80:	str	r6, [r5, #8]
   1cf84:	str	r4, [r5, #4]
   1cf88:	str	lr, [r5]
   1cf8c:	str	r0, [sp, #20]
   1cf90:	mov	r0, r2
   1cf94:	str	r1, [sp, #16]
   1cf98:	mov	r1, r3
   1cf9c:	ldr	r2, [sp, #20]
   1cfa0:	mov	r3, ip
   1cfa4:	bl	23428 <main@@Base+0xf7ac>
   1cfa8:	ldr	r1, [sp, #16]
   1cfac:	cmp	r1, r0
   1cfb0:	bne	1cfc0 <main@@Base+0x9344>
   1cfb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cfb8:	str	r0, [fp, #-20]	; 0xffffffec
   1cfbc:	b	1cfe8 <main@@Base+0x936c>
   1cfc0:	vldr	d16, [sp, #56]	; 0x38
   1cfc4:	ldr	r0, [fp, #8]
   1cfc8:	vldr	d17, [r0]
   1cfcc:	vadd.f64	d16, d17, d16
   1cfd0:	vstr	d16, [r0]
   1cfd4:	ldr	r0, [sp, #40]	; 0x28
   1cfd8:	cmp	r0, #0
   1cfdc:	bne	1ce38 <main@@Base+0x91bc>
   1cfe0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1cfe4:	str	r0, [fp, #-20]	; 0xffffffec
   1cfe8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1cfec:	sub	sp, fp, #16
   1cff0:	pop	{r4, r5, r6, sl, fp, pc}
   1cff4:	nop	{0}
	...
   1d000:	push	{fp, lr}
   1d004:	mov	fp, sp
   1d008:	sub	sp, sp, #16
   1d00c:	str	r0, [fp, #-4]
   1d010:	vstr	d0, [sp]
   1d014:	vldr	d0, [sp]
   1d018:	bl	234b0 <main@@Base+0xf834>
   1d01c:	ldr	r0, [fp, #-4]
   1d020:	vstr	d0, [r0]
   1d024:	mov	sp, fp
   1d028:	pop	{fp, pc}
   1d02c:	push	{fp, lr}
   1d030:	mov	fp, sp
   1d034:	sub	sp, sp, #24
   1d038:	str	r0, [fp, #-8]
   1d03c:	str	r1, [sp, #12]
   1d040:	str	r2, [sp, #8]
   1d044:	str	r3, [sp, #4]
   1d048:	ldr	r0, [fp, #-8]
   1d04c:	ldr	r1, [sp, #12]
   1d050:	ldr	r2, [sp, #8]
   1d054:	bl	1d190 <main@@Base+0x9514>
   1d058:	str	r0, [sp, #12]
   1d05c:	ldr	r0, [sp, #12]
   1d060:	ldr	r1, [sp, #8]
   1d064:	cmp	r0, r1
   1d068:	bne	1d084 <main@@Base+0x9408>
   1d06c:	ldr	r0, [sp, #4]
   1d070:	movw	r1, #0
   1d074:	str	r1, [r0]
   1d078:	ldr	r0, [sp, #12]
   1d07c:	str	r0, [fp, #-4]
   1d080:	b	1d184 <main@@Base+0x9508>
   1d084:	ldr	r0, [sp, #12]
   1d088:	ldrb	r0, [r0]
   1d08c:	cmp	r0, #44	; 0x2c
   1d090:	beq	1d0e8 <main@@Base+0x946c>
   1d094:	ldr	r0, [sp, #4]
   1d098:	movw	r1, #0
   1d09c:	str	r1, [r0]
   1d0a0:	ldr	r0, [sp, #12]
   1d0a4:	ldrb	r0, [r0]
   1d0a8:	cmp	r0, #125	; 0x7d
   1d0ac:	beq	1d0cc <main@@Base+0x9450>
   1d0b0:	ldr	r0, [fp, #-8]
   1d0b4:	ldr	r1, [sp, #12]
   1d0b8:	ldr	r2, [sp, #8]
   1d0bc:	movw	r3, #10
   1d0c0:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1d0c4:	str	r0, [fp, #-4]
   1d0c8:	b	1d184 <main@@Base+0x9508>
   1d0cc:	ldr	r0, [fp, #-8]
   1d0d0:	ldr	r1, [sp, #12]
   1d0d4:	add	r1, r1, #1
   1d0d8:	ldr	r2, [sp, #8]
   1d0dc:	bl	1d190 <main@@Base+0x9514>
   1d0e0:	str	r0, [fp, #-4]
   1d0e4:	b	1d184 <main@@Base+0x9508>
   1d0e8:	ldr	r0, [fp, #-8]
   1d0ec:	ldr	r1, [sp, #12]
   1d0f0:	add	r1, r1, #1
   1d0f4:	ldr	r2, [sp, #8]
   1d0f8:	bl	1d190 <main@@Base+0x9514>
   1d0fc:	str	r0, [sp, #12]
   1d100:	ldr	r0, [sp, #12]
   1d104:	ldr	r1, [sp, #8]
   1d108:	cmp	r0, r1
   1d10c:	bne	1d138 <main@@Base+0x94bc>
   1d110:	ldr	r0, [sp, #4]
   1d114:	movw	r1, #0
   1d118:	str	r1, [r0]
   1d11c:	ldr	r0, [fp, #-8]
   1d120:	ldr	r1, [sp, #12]
   1d124:	ldr	r2, [sp, #8]
   1d128:	movw	r3, #10
   1d12c:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1d130:	str	r0, [fp, #-4]
   1d134:	b	1d184 <main@@Base+0x9508>
   1d138:	ldr	r0, [sp, #12]
   1d13c:	ldrb	r0, [r0]
   1d140:	cmp	r0, #125	; 0x7d
   1d144:	bne	1d170 <main@@Base+0x94f4>
   1d148:	ldr	r0, [sp, #4]
   1d14c:	movw	r1, #0
   1d150:	str	r1, [r0]
   1d154:	ldr	r0, [fp, #-8]
   1d158:	ldr	r1, [sp, #12]
   1d15c:	add	r1, r1, #1
   1d160:	ldr	r2, [sp, #8]
   1d164:	bl	1d190 <main@@Base+0x9514>
   1d168:	str	r0, [fp, #-4]
   1d16c:	b	1d184 <main@@Base+0x9508>
   1d170:	ldr	r0, [sp, #4]
   1d174:	movw	r1, #1
   1d178:	str	r1, [r0]
   1d17c:	ldr	r0, [sp, #12]
   1d180:	str	r0, [fp, #-4]
   1d184:	ldr	r0, [fp, #-4]
   1d188:	mov	sp, fp
   1d18c:	pop	{fp, pc}
   1d190:	push	{fp, lr}
   1d194:	mov	fp, sp
   1d198:	sub	sp, sp, #16
   1d19c:	str	r0, [sp, #8]
   1d1a0:	str	r1, [sp, #4]
   1d1a4:	str	r2, [sp]
   1d1a8:	ldr	r0, [sp]
   1d1ac:	ldr	r1, [sp, #4]
   1d1b0:	sub	r0, r0, r1
   1d1b4:	cmp	r0, #1
   1d1b8:	ble	1d20c <main@@Base+0x9590>
   1d1bc:	ldr	r0, [sp, #4]
   1d1c0:	ldrb	r0, [r0]
   1d1c4:	cmp	r0, #32
   1d1c8:	ble	1d1d8 <main@@Base+0x955c>
   1d1cc:	ldr	r0, [sp, #4]
   1d1d0:	str	r0, [fp, #-4]
   1d1d4:	b	1d220 <main@@Base+0x95a4>
   1d1d8:	ldr	r0, [sp, #4]
   1d1dc:	ldrb	r0, [r0]
   1d1e0:	cmp	r0, #32
   1d1e4:	bne	1d208 <main@@Base+0x958c>
   1d1e8:	ldr	r0, [sp, #4]
   1d1ec:	ldrb	r0, [r0, #1]
   1d1f0:	cmp	r0, #32
   1d1f4:	ble	1d208 <main@@Base+0x958c>
   1d1f8:	ldr	r0, [sp, #4]
   1d1fc:	add	r0, r0, #1
   1d200:	str	r0, [fp, #-4]
   1d204:	b	1d220 <main@@Base+0x95a4>
   1d208:	b	1d20c <main@@Base+0x9590>
   1d20c:	ldr	r0, [sp, #8]
   1d210:	ldr	r1, [sp, #4]
   1d214:	ldr	r2, [sp]
   1d218:	bl	2b010 <flatcc_json_parser_space_ext@@Base>
   1d21c:	str	r0, [fp, #-4]
   1d220:	ldr	r0, [fp, #-4]
   1d224:	mov	sp, fp
   1d228:	pop	{fp, pc}
   1d22c:	sub	sp, sp, #24
   1d230:	str	r0, [sp, #20]
   1d234:	str	r1, [sp, #16]
   1d238:	mov	r0, #0
   1d23c:	str	r0, [sp, #12]
   1d240:	str	r0, [sp, #8]
   1d244:	ldr	r0, [sp, #16]
   1d248:	ldr	r1, [sp, #20]
   1d24c:	sub	r0, r0, r1
   1d250:	str	r0, [sp, #4]
   1d254:	ldr	r0, [sp, #4]
   1d258:	cmp	r0, #8
   1d25c:	bls	1d268 <main@@Base+0x95ec>
   1d260:	movw	r0, #8
   1d264:	str	r0, [sp, #4]
   1d268:	ldr	r0, [sp, #4]
   1d26c:	cmp	r0, #8
   1d270:	str	r0, [sp]
   1d274:	bhi	1d390 <main@@Base+0x9714>
   1d278:	add	r0, pc, #8
   1d27c:	ldr	r1, [sp]
   1d280:	ldr	r2, [r0, r1, lsl #2]
   1d284:	add	pc, r0, r2
   1d288:	andeq	r0, r0, r4, lsl #2
   1d28c:	andeq	r0, r0, r8, ror #1
   1d290:	andeq	r0, r0, ip, asr #1
   1d294:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   1d298:	muleq	r0, r4, r0
   1d29c:	andeq	r0, r0, r8, ror r0
   1d2a0:	andeq	r0, r0, ip, asr r0
   1d2a4:	andeq	r0, r0, r0, asr #32
   1d2a8:	andeq	r0, r0, r4, lsr #32
   1d2ac:	ldr	r0, [sp, #20]
   1d2b0:	ldrb	r0, [r0, #7]
   1d2b4:	ldr	r1, [sp, #8]
   1d2b8:	ldr	r2, [sp, #12]
   1d2bc:	orr	r0, r1, r0
   1d2c0:	str	r2, [sp, #12]
   1d2c4:	str	r0, [sp, #8]
   1d2c8:	ldr	r0, [sp, #20]
   1d2cc:	ldrb	r0, [r0, #6]
   1d2d0:	ldr	r1, [sp, #8]
   1d2d4:	ldr	r2, [sp, #12]
   1d2d8:	orr	r0, r1, r0, lsl #8
   1d2dc:	str	r2, [sp, #12]
   1d2e0:	str	r0, [sp, #8]
   1d2e4:	ldr	r0, [sp, #20]
   1d2e8:	ldrb	r0, [r0, #5]
   1d2ec:	ldr	r1, [sp, #8]
   1d2f0:	ldr	r2, [sp, #12]
   1d2f4:	orr	r0, r1, r0, lsl #16
   1d2f8:	str	r2, [sp, #12]
   1d2fc:	str	r0, [sp, #8]
   1d300:	ldr	r0, [sp, #20]
   1d304:	ldrb	r0, [r0, #4]
   1d308:	ldr	r1, [sp, #8]
   1d30c:	ldr	r2, [sp, #12]
   1d310:	orr	r0, r1, r0, lsl #24
   1d314:	str	r2, [sp, #12]
   1d318:	str	r0, [sp, #8]
   1d31c:	ldr	r0, [sp, #20]
   1d320:	ldrb	r0, [r0, #3]
   1d324:	ldr	r1, [sp, #8]
   1d328:	ldr	r2, [sp, #12]
   1d32c:	orr	r0, r2, r0
   1d330:	str	r1, [sp, #8]
   1d334:	str	r0, [sp, #12]
   1d338:	ldr	r0, [sp, #20]
   1d33c:	ldrb	r0, [r0, #2]
   1d340:	ldr	r1, [sp, #8]
   1d344:	ldr	r2, [sp, #12]
   1d348:	orr	r0, r2, r0, lsl #8
   1d34c:	str	r1, [sp, #8]
   1d350:	str	r0, [sp, #12]
   1d354:	ldr	r0, [sp, #20]
   1d358:	ldrb	r0, [r0, #1]
   1d35c:	ldr	r1, [sp, #8]
   1d360:	ldr	r2, [sp, #12]
   1d364:	orr	r0, r2, r0, lsl #16
   1d368:	str	r1, [sp, #8]
   1d36c:	str	r0, [sp, #12]
   1d370:	ldr	r0, [sp, #20]
   1d374:	ldrb	r0, [r0]
   1d378:	ldr	r1, [sp, #8]
   1d37c:	ldr	r2, [sp, #12]
   1d380:	orr	r0, r2, r0, lsl #24
   1d384:	str	r1, [sp, #8]
   1d388:	str	r0, [sp, #12]
   1d38c:	b	1d390 <main@@Base+0x9714>
   1d390:	ldr	r0, [sp, #8]
   1d394:	ldr	r1, [sp, #12]
   1d398:	add	sp, sp, #24
   1d39c:	bx	lr
   1d3a0:	sub	sp, sp, #24
   1d3a4:	str	r0, [sp, #16]
   1d3a8:	str	r1, [sp, #12]
   1d3ac:	str	r2, [sp, #8]
   1d3b0:	str	r3, [sp, #4]
   1d3b4:	ldr	r0, [sp, #12]
   1d3b8:	str	r0, [sp]
   1d3bc:	ldr	r0, [sp, #8]
   1d3c0:	ldr	r1, [sp, #12]
   1d3c4:	sub	r0, r0, r1
   1d3c8:	ldr	r1, [sp, #4]
   1d3cc:	cmp	r0, r1
   1d3d0:	bgt	1d3e0 <main@@Base+0x9764>
   1d3d4:	ldr	r0, [sp]
   1d3d8:	str	r0, [sp, #20]
   1d3dc:	b	1d418 <main@@Base+0x979c>
   1d3e0:	ldr	r0, [sp, #12]
   1d3e4:	ldr	r1, [sp, #4]
   1d3e8:	add	r0, r0, r1
   1d3ec:	ldrb	r0, [r0]
   1d3f0:	cmp	r0, #46	; 0x2e
   1d3f4:	beq	1d404 <main@@Base+0x9788>
   1d3f8:	ldr	r0, [sp]
   1d3fc:	str	r0, [sp, #20]
   1d400:	b	1d418 <main@@Base+0x979c>
   1d404:	ldr	r0, [sp, #12]
   1d408:	ldr	r1, [sp, #4]
   1d40c:	add	r0, r0, r1
   1d410:	add	r0, r0, #1
   1d414:	str	r0, [sp, #20]
   1d418:	ldr	r0, [sp, #20]
   1d41c:	add	sp, sp, #24
   1d420:	bx	lr
   1d424:	push	{fp, lr}
   1d428:	mov	fp, sp
   1d42c:	sub	sp, sp, #64	; 0x40
   1d430:	ldr	ip, [fp, #12]
   1d434:	ldr	lr, [fp, #8]
   1d438:	str	r0, [fp, #-8]
   1d43c:	str	r1, [fp, #-12]
   1d440:	str	r2, [fp, #-16]
   1d444:	str	r3, [fp, #-20]	; 0xffffffec
   1d448:	ldr	r0, [fp, #-12]
   1d44c:	str	r0, [fp, #-24]	; 0xffffffe8
   1d450:	ldr	r0, [fp, #-12]
   1d454:	ldr	r1, [fp, #-16]
   1d458:	str	lr, [sp, #20]
   1d45c:	str	ip, [sp, #16]
   1d460:	bl	17cac <main@@Base+0x4030>
   1d464:	str	r1, [sp, #28]
   1d468:	str	r0, [sp, #24]
   1d46c:	ldr	r0, [sp, #24]
   1d470:	ldr	r1, [sp, #28]
   1d474:	movw	r2, #20577	; 0x5061
   1d478:	movt	r2, #18798	; 0x496e
   1d47c:	eor	r1, r1, r2
   1d480:	movw	r2, #28276	; 0x6e74
   1d484:	movt	r2, #29285	; 0x7265
   1d488:	eor	r0, r0, r2
   1d48c:	orr	r0, r0, r1
   1d490:	cmp	r0, #0
   1d494:	bne	1d5b4 <main@@Base+0x9938>
   1d498:	b	1d49c <main@@Base+0x9820>
   1d49c:	ldr	r0, [fp, #-12]
   1d4a0:	add	r0, r0, #8
   1d4a4:	str	r0, [fp, #-12]
   1d4a8:	ldr	r0, [fp, #-12]
   1d4ac:	ldr	r1, [fp, #-16]
   1d4b0:	bl	17cac <main@@Base+0x4030>
   1d4b4:	str	r1, [sp, #28]
   1d4b8:	str	r0, [sp, #24]
   1d4bc:	ldr	r0, [sp, #24]
   1d4c0:	ldr	r1, [sp, #28]
   1d4c4:	movw	lr, #28005	; 0x6d65
   1d4c8:	movt	lr, #20065	; 0x4e61
   1d4cc:	eor	r1, r1, lr
   1d4d0:	movw	lr, #24931	; 0x6163
   1d4d4:	movt	lr, #29552	; 0x7370
   1d4d8:	eor	r0, r0, lr
   1d4dc:	orr	r0, r0, r1
   1d4e0:	cmp	r0, #0
   1d4e4:	bne	1d5a4 <main@@Base+0x9928>
   1d4e8:	b	1d4ec <main@@Base+0x9870>
   1d4ec:	ldr	r0, [fp, #-12]
   1d4f0:	add	r0, r0, #8
   1d4f4:	str	r0, [fp, #-12]
   1d4f8:	ldr	r0, [fp, #-12]
   1d4fc:	ldr	r1, [fp, #-16]
   1d500:	bl	17cac <main@@Base+0x4030>
   1d504:	str	r1, [sp, #28]
   1d508:	str	r0, [sp, #24]
   1d50c:	ldr	r0, [sp, #28]
   1d510:	and	r0, r0, #-16777216	; 0xff000000
   1d514:	teq	r0, #1694498816	; 0x65000000
   1d518:	bne	1d594 <main@@Base+0x9918>
   1d51c:	b	1d520 <main@@Base+0x98a4>
   1d520:	ldr	r0, [fp, #-8]
   1d524:	ldr	r1, [fp, #-12]
   1d528:	str	r1, [fp, #-28]	; 0xffffffe4
   1d52c:	ldr	r2, [fp, #-16]
   1d530:	ldr	r3, [fp, #12]
   1d534:	movw	ip, #1
   1d538:	str	r3, [sp, #12]
   1d53c:	mov	r3, ip
   1d540:	ldr	ip, [sp, #12]
   1d544:	str	ip, [sp]
   1d548:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   1d54c:	str	r0, [fp, #-12]
   1d550:	ldr	r0, [fp, #-12]
   1d554:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d558:	cmp	r0, r1
   1d55c:	beq	1d584 <main@@Base+0x9908>
   1d560:	ldr	r0, [fp, #8]
   1d564:	mov	r1, #0
   1d568:	str	r1, [r0, #4]
   1d56c:	mov	r1, #1
   1d570:	str	r1, [r0]
   1d574:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d578:	movw	r1, #0
   1d57c:	str	r1, [r0]
   1d580:	b	1d590 <main@@Base+0x9914>
   1d584:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d588:	str	r0, [fp, #-4]
   1d58c:	b	1d654 <main@@Base+0x99d8>
   1d590:	b	1d5a0 <main@@Base+0x9924>
   1d594:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d598:	str	r0, [fp, #-4]
   1d59c:	b	1d654 <main@@Base+0x99d8>
   1d5a0:	b	1d5b0 <main@@Base+0x9934>
   1d5a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5a8:	str	r0, [fp, #-4]
   1d5ac:	b	1d654 <main@@Base+0x99d8>
   1d5b0:	b	1d64c <main@@Base+0x99d0>
   1d5b4:	ldr	r0, [sp, #28]
   1d5b8:	movw	r1, #20037	; 0x4e45
   1d5bc:	movt	r1, #20047	; 0x4e4f
   1d5c0:	teq	r0, r1
   1d5c4:	bne	1d63c <main@@Base+0x99c0>
   1d5c8:	b	1d5cc <main@@Base+0x9950>
   1d5cc:	ldr	r0, [fp, #-8]
   1d5d0:	ldr	r1, [fp, #-12]
   1d5d4:	str	r1, [fp, #-28]	; 0xffffffe4
   1d5d8:	ldr	r2, [fp, #-16]
   1d5dc:	ldr	r3, [fp, #12]
   1d5e0:	movw	ip, #4
   1d5e4:	str	r3, [sp, #8]
   1d5e8:	mov	r3, ip
   1d5ec:	ldr	ip, [sp, #8]
   1d5f0:	str	ip, [sp]
   1d5f4:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   1d5f8:	str	r0, [fp, #-12]
   1d5fc:	ldr	r0, [fp, #-12]
   1d600:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d604:	cmp	r0, r1
   1d608:	beq	1d62c <main@@Base+0x99b0>
   1d60c:	ldr	r0, [fp, #8]
   1d610:	mov	r1, #0
   1d614:	str	r1, [r0, #4]
   1d618:	str	r1, [r0]
   1d61c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d620:	movw	r1, #0
   1d624:	str	r1, [r0]
   1d628:	b	1d638 <main@@Base+0x99bc>
   1d62c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d630:	str	r0, [fp, #-4]
   1d634:	b	1d654 <main@@Base+0x99d8>
   1d638:	b	1d648 <main@@Base+0x99cc>
   1d63c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d640:	str	r0, [fp, #-4]
   1d644:	b	1d654 <main@@Base+0x99d8>
   1d648:	b	1d64c <main@@Base+0x99d0>
   1d64c:	ldr	r0, [fp, #-12]
   1d650:	str	r0, [fp, #-4]
   1d654:	ldr	r0, [fp, #-4]
   1d658:	mov	sp, fp
   1d65c:	pop	{fp, pc}
   1d660:	push	{fp, lr}
   1d664:	mov	fp, sp
   1d668:	sub	sp, sp, #64	; 0x40
   1d66c:	ldr	ip, [fp, #12]
   1d670:	ldr	lr, [fp, #8]
   1d674:	str	r0, [fp, #-8]
   1d678:	str	r1, [fp, #-12]
   1d67c:	str	r2, [fp, #-16]
   1d680:	str	r3, [fp, #-20]	; 0xffffffec
   1d684:	ldr	r0, [fp, #-12]
   1d688:	str	r0, [fp, #-24]	; 0xffffffe8
   1d68c:	ldr	r0, [fp, #-12]
   1d690:	ldr	r1, [fp, #-16]
   1d694:	str	lr, [sp, #20]
   1d698:	str	ip, [sp, #16]
   1d69c:	bl	17cac <main@@Base+0x4030>
   1d6a0:	str	r1, [sp, #28]
   1d6a4:	str	r0, [sp, #24]
   1d6a8:	ldr	r0, [sp, #28]
   1d6ac:	movw	r1, #30769	; 0x7831
   1d6b0:	movt	r1, #26725	; 0x6865
   1d6b4:	cmp	r0, r1
   1d6b8:	bhi	1d75c <main@@Base+0x9ae0>
   1d6bc:	b	1d6c0 <main@@Base+0x9a44>
   1d6c0:	ldr	r0, [sp, #28]
   1d6c4:	movw	r1, #30769	; 0x7831
   1d6c8:	movt	r1, #26725	; 0x6865
   1d6cc:	teq	r0, r1
   1d6d0:	bne	1d74c <main@@Base+0x9ad0>
   1d6d4:	b	1d6d8 <main@@Base+0x9a5c>
   1d6d8:	ldr	r0, [fp, #-8]
   1d6dc:	ldr	r1, [fp, #-12]
   1d6e0:	str	r1, [fp, #-28]	; 0xffffffe4
   1d6e4:	ldr	r2, [fp, #-16]
   1d6e8:	ldr	r3, [fp, #12]
   1d6ec:	movw	ip, #4
   1d6f0:	str	r3, [sp, #12]
   1d6f4:	mov	r3, ip
   1d6f8:	ldr	ip, [sp, #12]
   1d6fc:	str	ip, [sp]
   1d700:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   1d704:	str	r0, [fp, #-12]
   1d708:	ldr	r0, [fp, #-12]
   1d70c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d710:	cmp	r0, r1
   1d714:	beq	1d73c <main@@Base+0x9ac0>
   1d718:	ldr	r0, [fp, #8]
   1d71c:	mov	r1, #0
   1d720:	str	r1, [r0, #4]
   1d724:	mov	r1, #3
   1d728:	str	r1, [r0]
   1d72c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d730:	movw	r1, #0
   1d734:	str	r1, [r0]
   1d738:	b	1d748 <main@@Base+0x9acc>
   1d73c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d740:	str	r0, [fp, #-4]
   1d744:	b	1d8ac <main@@Base+0x9c30>
   1d748:	b	1d758 <main@@Base+0x9adc>
   1d74c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d750:	str	r0, [fp, #-4]
   1d754:	b	1d8ac <main@@Base+0x9c30>
   1d758:	b	1d8a4 <main@@Base+0x9c28>
   1d75c:	ldrh	r0, [sp, #26]
   1d760:	ldr	r1, [sp, #28]
   1d764:	movw	r2, #26725	; 0x6865
   1d768:	eor	r2, r2, r1, lsr #16
   1d76c:	orr	r0, r0, r1, lsl #16
   1d770:	movw	r1, #25959	; 0x6567
   1d774:	movt	r1, #30830	; 0x786e
   1d778:	eor	r0, r0, r1
   1d77c:	orr	r0, r0, r2
   1d780:	cmp	r0, #0
   1d784:	bne	1d800 <main@@Base+0x9b84>
   1d788:	b	1d78c <main@@Base+0x9b10>
   1d78c:	ldr	r0, [fp, #-8]
   1d790:	ldr	r1, [fp, #-12]
   1d794:	str	r1, [fp, #-28]	; 0xffffffe4
   1d798:	ldr	r2, [fp, #-16]
   1d79c:	ldr	r3, [fp, #12]
   1d7a0:	movw	ip, #6
   1d7a4:	str	r3, [sp, #8]
   1d7a8:	mov	r3, ip
   1d7ac:	ldr	ip, [sp, #8]
   1d7b0:	str	ip, [sp]
   1d7b4:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   1d7b8:	str	r0, [fp, #-12]
   1d7bc:	ldr	r0, [fp, #-12]
   1d7c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d7c4:	cmp	r0, r1
   1d7c8:	beq	1d7f0 <main@@Base+0x9b74>
   1d7cc:	ldr	r0, [fp, #8]
   1d7d0:	mvn	r1, #0
   1d7d4:	str	r1, [r0, #4]
   1d7d8:	mvn	r1, #1
   1d7dc:	str	r1, [r0]
   1d7e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d7e4:	movw	r1, #1
   1d7e8:	str	r1, [r0]
   1d7ec:	b	1d7fc <main@@Base+0x9b80>
   1d7f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d7f4:	str	r0, [fp, #-4]
   1d7f8:	b	1d8ac <main@@Base+0x9c30>
   1d7fc:	b	1d8a0 <main@@Base+0x9c24>
   1d800:	ldr	r0, [sp, #28]
   1d804:	movw	r1, #30770	; 0x7832
   1d808:	movt	r1, #26725	; 0x6865
   1d80c:	teq	r0, r1
   1d810:	bne	1d890 <main@@Base+0x9c14>
   1d814:	b	1d818 <main@@Base+0x9b9c>
   1d818:	ldr	r0, [fp, #-8]
   1d81c:	ldr	r1, [fp, #-12]
   1d820:	str	r1, [fp, #-28]	; 0xffffffe4
   1d824:	ldr	r2, [fp, #-16]
   1d828:	ldr	r3, [fp, #12]
   1d82c:	movw	ip, #4
   1d830:	str	r3, [sp, #4]
   1d834:	mov	r3, ip
   1d838:	ldr	ip, [sp, #4]
   1d83c:	str	ip, [sp]
   1d840:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   1d844:	str	r0, [fp, #-12]
   1d848:	ldr	r0, [fp, #-12]
   1d84c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d850:	cmp	r0, r1
   1d854:	beq	1d880 <main@@Base+0x9c04>
   1d858:	ldr	r0, [fp, #8]
   1d85c:	mov	r1, #0
   1d860:	str	r1, [r0, #4]
   1d864:	movw	r1, #48815	; 0xbeaf
   1d868:	movt	r1, #32431	; 0x7eaf
   1d86c:	str	r1, [r0]
   1d870:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d874:	movw	r1, #0
   1d878:	str	r1, [r0]
   1d87c:	b	1d88c <main@@Base+0x9c10>
   1d880:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d884:	str	r0, [fp, #-4]
   1d888:	b	1d8ac <main@@Base+0x9c30>
   1d88c:	b	1d89c <main@@Base+0x9c20>
   1d890:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d894:	str	r0, [fp, #-4]
   1d898:	b	1d8ac <main@@Base+0x9c30>
   1d89c:	b	1d8a0 <main@@Base+0x9c24>
   1d8a0:	b	1d8a4 <main@@Base+0x9c28>
   1d8a4:	ldr	r0, [fp, #-12]
   1d8a8:	str	r0, [fp, #-4]
   1d8ac:	ldr	r0, [fp, #-4]
   1d8b0:	mov	sp, fp
   1d8b4:	pop	{fp, pc}
   1d8b8:	push	{fp, lr}
   1d8bc:	mov	fp, sp
   1d8c0:	sub	sp, sp, #80	; 0x50
   1d8c4:	ldr	ip, [fp, #12]
   1d8c8:	ldr	lr, [fp, #8]
   1d8cc:	str	r0, [fp, #-8]
   1d8d0:	str	r1, [fp, #-12]
   1d8d4:	str	r2, [fp, #-16]
   1d8d8:	str	r3, [fp, #-20]	; 0xffffffec
   1d8dc:	ldr	r0, [fp, #-12]
   1d8e0:	str	r0, [fp, #-24]	; 0xffffffe8
   1d8e4:	ldr	r0, [fp, #-12]
   1d8e8:	ldr	r1, [fp, #-16]
   1d8ec:	str	lr, [sp, #36]	; 0x24
   1d8f0:	str	ip, [sp, #32]
   1d8f4:	bl	17cac <main@@Base+0x4030>
   1d8f8:	str	r1, [sp, #44]	; 0x2c
   1d8fc:	str	r0, [sp, #40]	; 0x28
   1d900:	ldr	r0, [sp, #44]	; 0x2c
   1d904:	movw	r1, #29745	; 0x7431
   1d908:	movt	r1, #26990	; 0x696e
   1d90c:	cmp	r0, r1
   1d910:	bhi	1d9b4 <main@@Base+0x9d38>
   1d914:	b	1d918 <main@@Base+0x9c9c>
   1d918:	ldr	r0, [sp, #44]	; 0x2c
   1d91c:	movw	r1, #29745	; 0x7431
   1d920:	movt	r1, #26990	; 0x696e
   1d924:	teq	r0, r1
   1d928:	bne	1d9a4 <main@@Base+0x9d28>
   1d92c:	b	1d930 <main@@Base+0x9cb4>
   1d930:	ldr	r0, [fp, #-8]
   1d934:	ldr	r1, [fp, #-12]
   1d938:	str	r1, [fp, #-28]	; 0xffffffe4
   1d93c:	ldr	r2, [fp, #-16]
   1d940:	ldr	r3, [fp, #12]
   1d944:	movw	ip, #4
   1d948:	str	r3, [sp, #28]
   1d94c:	mov	r3, ip
   1d950:	ldr	ip, [sp, #28]
   1d954:	str	ip, [sp]
   1d958:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   1d95c:	str	r0, [fp, #-12]
   1d960:	ldr	r0, [fp, #-12]
   1d964:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1d968:	cmp	r0, r1
   1d96c:	beq	1d994 <main@@Base+0x9d18>
   1d970:	ldr	r0, [fp, #8]
   1d974:	mov	r1, #0
   1d978:	str	r1, [r0, #4]
   1d97c:	mov	r1, #2
   1d980:	str	r1, [r0]
   1d984:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d988:	movw	r1, #0
   1d98c:	str	r1, [r0]
   1d990:	b	1d9a0 <main@@Base+0x9d24>
   1d994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d998:	str	r0, [fp, #-4]
   1d99c:	b	1dbec <main@@Base+0x9f70>
   1d9a0:	b	1d9b0 <main@@Base+0x9d34>
   1d9a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d9a8:	str	r0, [fp, #-4]
   1d9ac:	b	1dbec <main@@Base+0x9f70>
   1d9b0:	b	1dbe4 <main@@Base+0x9f68>
   1d9b4:	ldr	r0, [sp, #40]	; 0x28
   1d9b8:	ldr	r1, [sp, #44]	; 0x2c
   1d9bc:	movw	r2, #65535	; 0xffff
   1d9c0:	movt	r2, #25958	; 0x6566
   1d9c4:	subs	r0, r2, r0
   1d9c8:	movw	r2, #29806	; 0x746e
   1d9cc:	movt	r2, #26990	; 0x696e
   1d9d0:	sbcs	r1, r2, r1
   1d9d4:	str	r0, [sp, #24]
   1d9d8:	str	r1, [sp, #20]
   1d9dc:	bcc	1da80 <main@@Base+0x9e04>
   1d9e0:	b	1d9e4 <main@@Base+0x9d68>
   1d9e4:	ldr	r0, [sp, #44]	; 0x2c
   1d9e8:	movw	r1, #29746	; 0x7432
   1d9ec:	movt	r1, #26990	; 0x696e
   1d9f0:	teq	r0, r1
   1d9f4:	bne	1da70 <main@@Base+0x9df4>
   1d9f8:	b	1d9fc <main@@Base+0x9d80>
   1d9fc:	ldr	r0, [fp, #-8]
   1da00:	ldr	r1, [fp, #-12]
   1da04:	str	r1, [fp, #-28]	; 0xffffffe4
   1da08:	ldr	r2, [fp, #-16]
   1da0c:	ldr	r3, [fp, #12]
   1da10:	movw	ip, #4
   1da14:	str	r3, [sp, #16]
   1da18:	mov	r3, ip
   1da1c:	ldr	ip, [sp, #16]
   1da20:	str	ip, [sp]
   1da24:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   1da28:	str	r0, [fp, #-12]
   1da2c:	ldr	r0, [fp, #-12]
   1da30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1da34:	cmp	r0, r1
   1da38:	beq	1da60 <main@@Base+0x9de4>
   1da3c:	ldr	r0, [fp, #8]
   1da40:	mov	r1, #0
   1da44:	str	r1, [r0, #4]
   1da48:	mov	r1, #42	; 0x2a
   1da4c:	str	r1, [r0]
   1da50:	ldr	r0, [fp, #-20]	; 0xffffffec
   1da54:	movw	r1, #0
   1da58:	str	r1, [r0]
   1da5c:	b	1da6c <main@@Base+0x9df0>
   1da60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da64:	str	r0, [fp, #-4]
   1da68:	b	1dbec <main@@Base+0x9f70>
   1da6c:	b	1da7c <main@@Base+0x9e00>
   1da70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da74:	str	r0, [fp, #-4]
   1da78:	b	1dbec <main@@Base+0x9f70>
   1da7c:	b	1dbe0 <main@@Base+0x9f64>
   1da80:	ldr	r0, [sp, #40]	; 0x28
   1da84:	ldr	r1, [sp, #44]	; 0x2c
   1da88:	movw	r2, #28276	; 0x6e74
   1da8c:	movt	r2, #105	; 0x69
   1da90:	eor	r2, r2, r1, lsr #8
   1da94:	lsr	r0, r0, #8
   1da98:	orr	r0, r0, r1, lsl #24
   1da9c:	movw	r1, #26418	; 0x6732
   1daa0:	movt	r1, #28261	; 0x6e65
   1daa4:	eor	r0, r0, r1
   1daa8:	orr	r0, r0, r2
   1daac:	cmp	r0, #0
   1dab0:	bne	1db28 <main@@Base+0x9eac>
   1dab4:	b	1dab8 <main@@Base+0x9e3c>
   1dab8:	ldr	r0, [fp, #-8]
   1dabc:	ldr	r1, [fp, #-12]
   1dac0:	str	r1, [fp, #-28]	; 0xffffffe4
   1dac4:	ldr	r2, [fp, #-16]
   1dac8:	ldr	r3, [fp, #12]
   1dacc:	movw	ip, #7
   1dad0:	str	r3, [sp, #12]
   1dad4:	mov	r3, ip
   1dad8:	ldr	ip, [sp, #12]
   1dadc:	str	ip, [sp]
   1dae0:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   1dae4:	str	r0, [fp, #-12]
   1dae8:	ldr	r0, [fp, #-12]
   1daec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1daf0:	cmp	r0, r1
   1daf4:	beq	1db18 <main@@Base+0x9e9c>
   1daf8:	ldr	r0, [fp, #8]
   1dafc:	mvn	r1, #0
   1db00:	str	r1, [r0, #4]
   1db04:	str	r1, [r0]
   1db08:	ldr	r0, [fp, #-20]	; 0xffffffec
   1db0c:	movw	r1, #1
   1db10:	str	r1, [r0]
   1db14:	b	1db24 <main@@Base+0x9ea8>
   1db18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db1c:	str	r0, [fp, #-4]
   1db20:	b	1dbec <main@@Base+0x9f70>
   1db24:	b	1dbdc <main@@Base+0x9f60>
   1db28:	ldrh	r0, [sp, #42]	; 0x2a
   1db2c:	ldr	r1, [sp, #44]	; 0x2c
   1db30:	movw	r2, #26990	; 0x696e
   1db34:	eor	r2, r2, r1, lsr #16
   1db38:	orr	r0, r0, r1, lsl #16
   1db3c:	movw	r1, #25959	; 0x6567
   1db40:	movt	r1, #29806	; 0x746e
   1db44:	eor	r0, r0, r1
   1db48:	orr	r0, r0, r2
   1db4c:	cmp	r0, #0
   1db50:	bne	1dbcc <main@@Base+0x9f50>
   1db54:	b	1db58 <main@@Base+0x9edc>
   1db58:	ldr	r0, [fp, #-8]
   1db5c:	ldr	r1, [fp, #-12]
   1db60:	str	r1, [fp, #-28]	; 0xffffffe4
   1db64:	ldr	r2, [fp, #-16]
   1db68:	ldr	r3, [fp, #12]
   1db6c:	movw	ip, #6
   1db70:	str	r3, [sp, #8]
   1db74:	mov	r3, ip
   1db78:	ldr	ip, [sp, #8]
   1db7c:	str	ip, [sp]
   1db80:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   1db84:	str	r0, [fp, #-12]
   1db88:	ldr	r0, [fp, #-12]
   1db8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1db90:	cmp	r0, r1
   1db94:	beq	1dbbc <main@@Base+0x9f40>
   1db98:	ldr	r0, [fp, #8]
   1db9c:	mvn	r1, #0
   1dba0:	str	r1, [r0, #4]
   1dba4:	mvn	r1, #1
   1dba8:	str	r1, [r0]
   1dbac:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dbb0:	movw	r1, #1
   1dbb4:	str	r1, [r0]
   1dbb8:	b	1dbc8 <main@@Base+0x9f4c>
   1dbbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dbc0:	str	r0, [fp, #-4]
   1dbc4:	b	1dbec <main@@Base+0x9f70>
   1dbc8:	b	1dbd8 <main@@Base+0x9f5c>
   1dbcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dbd0:	str	r0, [fp, #-4]
   1dbd4:	b	1dbec <main@@Base+0x9f70>
   1dbd8:	b	1dbdc <main@@Base+0x9f60>
   1dbdc:	b	1dbe0 <main@@Base+0x9f64>
   1dbe0:	b	1dbe4 <main@@Base+0x9f68>
   1dbe4:	ldr	r0, [fp, #-12]
   1dbe8:	str	r0, [fp, #-4]
   1dbec:	ldr	r0, [fp, #-4]
   1dbf0:	mov	sp, fp
   1dbf4:	pop	{fp, pc}
   1dbf8:	push	{fp, lr}
   1dbfc:	mov	fp, sp
   1dc00:	sub	sp, sp, #64	; 0x40
   1dc04:	ldr	ip, [fp, #12]
   1dc08:	ldr	lr, [fp, #8]
   1dc0c:	str	r0, [fp, #-8]
   1dc10:	str	r1, [fp, #-12]
   1dc14:	str	r2, [fp, #-16]
   1dc18:	str	r3, [fp, #-20]	; 0xffffffec
   1dc1c:	ldr	r0, [fp, #-12]
   1dc20:	str	r0, [fp, #-24]	; 0xffffffe8
   1dc24:	ldr	r0, [fp, #-12]
   1dc28:	ldr	r1, [fp, #-16]
   1dc2c:	str	lr, [sp, #20]
   1dc30:	str	ip, [sp, #16]
   1dc34:	bl	17cac <main@@Base+0x4030>
   1dc38:	str	r1, [sp, #28]
   1dc3c:	str	r0, [sp, #24]
   1dc40:	ldr	r0, [sp, #28]
   1dc44:	movw	r1, #26417	; 0x6731
   1dc48:	movt	r1, #28261	; 0x6e65
   1dc4c:	cmp	r0, r1
   1dc50:	bhi	1dcf4 <main@@Base+0xa078>
   1dc54:	b	1dc58 <main@@Base+0x9fdc>
   1dc58:	ldr	r0, [sp, #28]
   1dc5c:	movw	r1, #26417	; 0x6731
   1dc60:	movt	r1, #28261	; 0x6e65
   1dc64:	teq	r0, r1
   1dc68:	bne	1dce4 <main@@Base+0xa068>
   1dc6c:	b	1dc70 <main@@Base+0x9ff4>
   1dc70:	ldr	r0, [fp, #-8]
   1dc74:	ldr	r1, [fp, #-12]
   1dc78:	str	r1, [fp, #-28]	; 0xffffffe4
   1dc7c:	ldr	r2, [fp, #-16]
   1dc80:	ldr	r3, [fp, #12]
   1dc84:	movw	ip, #4
   1dc88:	str	r3, [sp, #12]
   1dc8c:	mov	r3, ip
   1dc90:	ldr	ip, [sp, #12]
   1dc94:	str	ip, [sp]
   1dc98:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   1dc9c:	str	r0, [fp, #-12]
   1dca0:	ldr	r0, [fp, #-12]
   1dca4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1dca8:	cmp	r0, r1
   1dcac:	beq	1dcd4 <main@@Base+0xa058>
   1dcb0:	ldr	r0, [fp, #8]
   1dcb4:	mvn	r1, #0
   1dcb8:	str	r1, [r0, #4]
   1dcbc:	mvn	r1, #11
   1dcc0:	str	r1, [r0]
   1dcc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dcc8:	movw	r1, #1
   1dccc:	str	r1, [r0]
   1dcd0:	b	1dce0 <main@@Base+0xa064>
   1dcd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dcd8:	str	r0, [fp, #-4]
   1dcdc:	b	1de28 <main@@Base+0xa1ac>
   1dce0:	b	1dcf0 <main@@Base+0xa074>
   1dce4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dce8:	str	r0, [fp, #-4]
   1dcec:	b	1de28 <main@@Base+0xa1ac>
   1dcf0:	b	1de20 <main@@Base+0xa1a4>
   1dcf4:	ldr	r0, [sp, #28]
   1dcf8:	movw	r1, #26419	; 0x6733
   1dcfc:	movt	r1, #28261	; 0x6e65
   1dd00:	teq	r0, r1
   1dd04:	bne	1dd80 <main@@Base+0xa104>
   1dd08:	b	1dd0c <main@@Base+0xa090>
   1dd0c:	ldr	r0, [fp, #-8]
   1dd10:	ldr	r1, [fp, #-12]
   1dd14:	str	r1, [fp, #-28]	; 0xffffffe4
   1dd18:	ldr	r2, [fp, #-16]
   1dd1c:	ldr	r3, [fp, #12]
   1dd20:	movw	ip, #4
   1dd24:	str	r3, [sp, #8]
   1dd28:	mov	r3, ip
   1dd2c:	ldr	ip, [sp, #8]
   1dd30:	str	ip, [sp]
   1dd34:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   1dd38:	str	r0, [fp, #-12]
   1dd3c:	ldr	r0, [fp, #-12]
   1dd40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1dd44:	cmp	r0, r1
   1dd48:	beq	1dd70 <main@@Base+0xa0f4>
   1dd4c:	ldr	r0, [fp, #8]
   1dd50:	mvn	r1, #0
   1dd54:	str	r1, [r0, #4]
   1dd58:	mvn	r1, #9
   1dd5c:	str	r1, [r0]
   1dd60:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dd64:	movw	r1, #1
   1dd68:	str	r1, [r0]
   1dd6c:	b	1dd7c <main@@Base+0xa100>
   1dd70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd74:	str	r0, [fp, #-4]
   1dd78:	b	1de28 <main@@Base+0xa1ac>
   1dd7c:	b	1de1c <main@@Base+0xa1a0>
   1dd80:	ldr	r0, [sp, #28]
   1dd84:	movw	r1, #26418	; 0x6732
   1dd88:	movt	r1, #28261	; 0x6e65
   1dd8c:	teq	r0, r1
   1dd90:	bne	1de0c <main@@Base+0xa190>
   1dd94:	b	1dd98 <main@@Base+0xa11c>
   1dd98:	ldr	r0, [fp, #-8]
   1dd9c:	ldr	r1, [fp, #-12]
   1dda0:	str	r1, [fp, #-28]	; 0xffffffe4
   1dda4:	ldr	r2, [fp, #-16]
   1dda8:	ldr	r3, [fp, #12]
   1ddac:	movw	ip, #4
   1ddb0:	str	r3, [sp, #4]
   1ddb4:	mov	r3, ip
   1ddb8:	ldr	ip, [sp, #4]
   1ddbc:	str	ip, [sp]
   1ddc0:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   1ddc4:	str	r0, [fp, #-12]
   1ddc8:	ldr	r0, [fp, #-12]
   1ddcc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ddd0:	cmp	r0, r1
   1ddd4:	beq	1ddfc <main@@Base+0xa180>
   1ddd8:	ldr	r0, [fp, #8]
   1dddc:	mvn	r1, #0
   1dde0:	str	r1, [r0, #4]
   1dde4:	mvn	r1, #10
   1dde8:	str	r1, [r0]
   1ddec:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ddf0:	movw	r1, #1
   1ddf4:	str	r1, [r0]
   1ddf8:	b	1de08 <main@@Base+0xa18c>
   1ddfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de00:	str	r0, [fp, #-4]
   1de04:	b	1de28 <main@@Base+0xa1ac>
   1de08:	b	1de18 <main@@Base+0xa19c>
   1de0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de10:	str	r0, [fp, #-4]
   1de14:	b	1de28 <main@@Base+0xa1ac>
   1de18:	b	1de1c <main@@Base+0xa1a0>
   1de1c:	b	1de20 <main@@Base+0xa1a4>
   1de20:	ldr	r0, [fp, #-12]
   1de24:	str	r0, [fp, #-4]
   1de28:	ldr	r0, [fp, #-4]
   1de2c:	mov	sp, fp
   1de30:	pop	{fp, pc}
   1de34:	push	{fp, lr}
   1de38:	mov	fp, sp
   1de3c:	sub	sp, sp, #56	; 0x38
   1de40:	ldr	ip, [fp, #12]
   1de44:	ldr	lr, [fp, #8]
   1de48:	str	r0, [fp, #-8]
   1de4c:	str	r1, [fp, #-12]
   1de50:	str	r2, [fp, #-16]
   1de54:	str	r3, [fp, #-20]	; 0xffffffec
   1de58:	ldr	r0, [fp, #-12]
   1de5c:	str	r0, [fp, #-24]	; 0xffffffe8
   1de60:	ldr	r0, [fp, #-12]
   1de64:	ldr	r1, [fp, #-16]
   1de68:	str	lr, [sp, #12]
   1de6c:	str	ip, [sp, #8]
   1de70:	bl	17cac <main@@Base+0x4030>
   1de74:	str	r1, [sp, #20]
   1de78:	str	r0, [sp, #16]
   1de7c:	ldr	r0, [sp, #20]
   1de80:	and	r0, r0, #-16777216	; 0xff000000
   1de84:	teq	r0, #2013265920	; 0x78000000
   1de88:	bne	1df00 <main@@Base+0xa284>
   1de8c:	b	1de90 <main@@Base+0xa214>
   1de90:	ldr	r0, [fp, #-8]
   1de94:	ldr	r1, [fp, #-12]
   1de98:	str	r1, [sp, #28]
   1de9c:	ldr	r2, [fp, #-16]
   1dea0:	ldr	r3, [fp, #12]
   1dea4:	movw	ip, #1
   1dea8:	str	r3, [sp, #4]
   1deac:	mov	r3, ip
   1deb0:	ldr	ip, [sp, #4]
   1deb4:	str	ip, [sp]
   1deb8:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   1debc:	str	r0, [fp, #-12]
   1dec0:	ldr	r0, [fp, #-12]
   1dec4:	ldr	r1, [sp, #28]
   1dec8:	cmp	r0, r1
   1decc:	beq	1def0 <main@@Base+0xa274>
   1ded0:	ldr	r0, [fp, #8]
   1ded4:	mov	r1, #0
   1ded8:	str	r1, [r0, #4]
   1dedc:	str	r1, [r0]
   1dee0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dee4:	movw	r1, #0
   1dee8:	str	r1, [r0]
   1deec:	b	1defc <main@@Base+0xa280>
   1def0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1def4:	str	r0, [fp, #-4]
   1def8:	b	1df14 <main@@Base+0xa298>
   1defc:	b	1df0c <main@@Base+0xa290>
   1df00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df04:	str	r0, [fp, #-4]
   1df08:	b	1df14 <main@@Base+0xa298>
   1df0c:	ldr	r0, [fp, #-12]
   1df10:	str	r0, [fp, #-4]
   1df14:	ldr	r0, [fp, #-4]
   1df18:	mov	sp, fp
   1df1c:	pop	{fp, pc}
   1df20:	push	{fp, lr}
   1df24:	mov	fp, sp
   1df28:	sub	sp, sp, #104	; 0x68
   1df2c:	ldr	ip, [fp, #12]
   1df30:	ldr	lr, [fp, #8]
   1df34:	str	r0, [fp, #-8]
   1df38:	str	r1, [fp, #-12]
   1df3c:	str	r2, [fp, #-16]
   1df40:	str	r3, [fp, #-20]	; 0xffffffec
   1df44:	ldr	r0, [fp, #-12]
   1df48:	str	r0, [fp, #-24]	; 0xffffffe8
   1df4c:	ldr	r0, [fp, #-12]
   1df50:	ldr	r1, [fp, #-16]
   1df54:	str	lr, [fp, #-44]	; 0xffffffd4
   1df58:	str	ip, [fp, #-48]	; 0xffffffd0
   1df5c:	bl	17cac <main@@Base+0x4030>
   1df60:	str	r1, [fp, #-36]	; 0xffffffdc
   1df64:	str	r0, [fp, #-40]	; 0xffffffd8
   1df68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1df6c:	movw	r1, #20036	; 0x4e44
   1df70:	movt	r1, #20047	; 0x4e4f
   1df74:	cmp	r0, r1
   1df78:	bhi	1e1c4 <main@@Base+0xa548>
   1df7c:	b	1df80 <main@@Base+0xa304>
   1df80:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1df84:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1df88:	movw	r2, #28159	; 0x6dff
   1df8c:	movt	r2, #18017	; 0x4661
   1df90:	subs	r0, r2, r0
   1df94:	movw	r2, #28523	; 0x6f6b
   1df98:	movt	r2, #17007	; 0x426f
   1df9c:	sbcs	r1, r2, r1
   1dfa0:	str	r0, [sp, #52]	; 0x34
   1dfa4:	str	r1, [sp, #48]	; 0x30
   1dfa8:	bcc	1e060 <main@@Base+0xa3e4>
   1dfac:	b	1dfb0 <main@@Base+0xa334>
   1dfb0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1dfb4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1dfb8:	and	r0, r0, #-16777216	; 0xff000000
   1dfbc:	movw	r2, #27756	; 0x6c6c
   1dfc0:	movt	r2, #16997	; 0x4265
   1dfc4:	eor	r1, r1, r2
   1dfc8:	eor	r0, r0, #1694498816	; 0x65000000
   1dfcc:	orr	r0, r0, r1
   1dfd0:	cmp	r0, #0
   1dfd4:	bne	1e050 <main@@Base+0xa3d4>
   1dfd8:	b	1dfdc <main@@Base+0xa360>
   1dfdc:	ldr	r0, [fp, #-8]
   1dfe0:	ldr	r1, [fp, #-12]
   1dfe4:	str	r1, [fp, #-28]	; 0xffffffe4
   1dfe8:	ldr	r2, [fp, #-16]
   1dfec:	ldr	r3, [fp, #12]
   1dff0:	movw	ip, #5
   1dff4:	str	r3, [sp, #44]	; 0x2c
   1dff8:	mov	r3, ip
   1dffc:	ldr	ip, [sp, #44]	; 0x2c
   1e000:	str	ip, [sp]
   1e004:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   1e008:	str	r0, [fp, #-12]
   1e00c:	ldr	r0, [fp, #-12]
   1e010:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e014:	cmp	r0, r1
   1e018:	beq	1e040 <main@@Base+0xa3c4>
   1e01c:	ldr	r0, [fp, #8]
   1e020:	mov	r1, #0
   1e024:	str	r1, [r0, #4]
   1e028:	mov	r1, #9
   1e02c:	str	r1, [r0]
   1e030:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e034:	movw	r1, #0
   1e038:	str	r1, [r0]
   1e03c:	b	1e04c <main@@Base+0xa3d0>
   1e040:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e044:	str	r0, [fp, #-4]
   1e048:	b	1e4d4 <main@@Base+0xa858>
   1e04c:	b	1e05c <main@@Base+0xa3e0>
   1e050:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e054:	str	r0, [fp, #-4]
   1e058:	b	1e4d4 <main@@Base+0xa858>
   1e05c:	b	1e1c0 <main@@Base+0xa544>
   1e060:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e064:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e068:	and	r0, r0, #-16777216	; 0xff000000
   1e06c:	movw	r2, #19553	; 0x4c61
   1e070:	movt	r2, #19829	; 0x4d75
   1e074:	eor	r1, r1, r2
   1e078:	eor	r0, r0, #1845493760	; 0x6e000000
   1e07c:	orr	r0, r0, r1
   1e080:	cmp	r0, #0
   1e084:	bne	1e100 <main@@Base+0xa484>
   1e088:	b	1e08c <main@@Base+0xa410>
   1e08c:	ldr	r0, [fp, #-8]
   1e090:	ldr	r1, [fp, #-12]
   1e094:	str	r1, [fp, #-28]	; 0xffffffe4
   1e098:	ldr	r2, [fp, #-16]
   1e09c:	ldr	r3, [fp, #12]
   1e0a0:	movw	ip, #5
   1e0a4:	str	r3, [sp, #40]	; 0x28
   1e0a8:	mov	r3, ip
   1e0ac:	ldr	ip, [sp, #40]	; 0x28
   1e0b0:	str	ip, [sp]
   1e0b4:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   1e0b8:	str	r0, [fp, #-12]
   1e0bc:	ldr	r0, [fp, #-12]
   1e0c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e0c4:	cmp	r0, r1
   1e0c8:	beq	1e0f0 <main@@Base+0xa474>
   1e0cc:	ldr	r0, [fp, #8]
   1e0d0:	mov	r1, #0
   1e0d4:	str	r1, [r0, #4]
   1e0d8:	mov	r1, #2
   1e0dc:	str	r1, [r0]
   1e0e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e0e4:	movw	r1, #0
   1e0e8:	str	r1, [r0]
   1e0ec:	b	1e0fc <main@@Base+0xa480>
   1e0f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e0f4:	str	r0, [fp, #-4]
   1e0f8:	b	1e4d4 <main@@Base+0xa858>
   1e0fc:	b	1e1bc <main@@Base+0xa540>
   1e100:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e104:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e108:	movw	r2, #28527	; 0x6f6f
   1e10c:	movt	r2, #66	; 0x42
   1e110:	eor	r2, r2, r1, lsr #8
   1e114:	lsr	r0, r0, #8
   1e118:	orr	r0, r0, r1, lsl #24
   1e11c:	movw	r1, #24942	; 0x616e
   1e120:	movt	r1, #27462	; 0x6b46
   1e124:	eor	r0, r0, r1
   1e128:	orr	r0, r0, r2
   1e12c:	cmp	r0, #0
   1e130:	bne	1e1ac <main@@Base+0xa530>
   1e134:	b	1e138 <main@@Base+0xa4bc>
   1e138:	ldr	r0, [fp, #-8]
   1e13c:	ldr	r1, [fp, #-12]
   1e140:	str	r1, [fp, #-28]	; 0xffffffe4
   1e144:	ldr	r2, [fp, #-16]
   1e148:	ldr	r3, [fp, #12]
   1e14c:	movw	ip, #7
   1e150:	str	r3, [sp, #36]	; 0x24
   1e154:	mov	r3, ip
   1e158:	ldr	ip, [sp, #36]	; 0x24
   1e15c:	str	ip, [sp]
   1e160:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   1e164:	str	r0, [fp, #-12]
   1e168:	ldr	r0, [fp, #-12]
   1e16c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e170:	cmp	r0, r1
   1e174:	beq	1e19c <main@@Base+0xa520>
   1e178:	ldr	r0, [fp, #8]
   1e17c:	mov	r1, #0
   1e180:	str	r1, [r0, #4]
   1e184:	mov	r1, #10
   1e188:	str	r1, [r0]
   1e18c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e190:	movw	r1, #0
   1e194:	str	r1, [r0]
   1e198:	b	1e1a8 <main@@Base+0xa52c>
   1e19c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1a0:	str	r0, [fp, #-4]
   1e1a4:	b	1e4d4 <main@@Base+0xa858>
   1e1a8:	b	1e1b8 <main@@Base+0xa53c>
   1e1ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1b0:	str	r0, [fp, #-4]
   1e1b4:	b	1e4d4 <main@@Base+0xa858>
   1e1b8:	b	1e1bc <main@@Base+0xa540>
   1e1bc:	b	1e1c0 <main@@Base+0xa544>
   1e1c0:	b	1e4cc <main@@Base+0xa850>
   1e1c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e1c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e1cc:	mvn	r2, #-1912602624	; 0x8e000000
   1e1d0:	subs	r0, r2, r0
   1e1d4:	movw	r2, #26725	; 0x6865
   1e1d8:	movt	r2, #20340	; 0x4f74
   1e1dc:	sbcs	r1, r2, r1
   1e1e0:	str	r0, [sp, #32]
   1e1e4:	str	r1, [sp, #28]
   1e1e8:	bcc	1e288 <main@@Base+0xa60c>
   1e1ec:	b	1e1f0 <main@@Base+0xa574>
   1e1f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1e1f4:	movw	r1, #20037	; 0x4e45
   1e1f8:	movt	r1, #20047	; 0x4e4f
   1e1fc:	teq	r0, r1
   1e200:	bne	1e278 <main@@Base+0xa5fc>
   1e204:	b	1e208 <main@@Base+0xa58c>
   1e208:	ldr	r0, [fp, #-8]
   1e20c:	ldr	r1, [fp, #-12]
   1e210:	str	r1, [fp, #-28]	; 0xffffffe4
   1e214:	ldr	r2, [fp, #-16]
   1e218:	ldr	r3, [fp, #12]
   1e21c:	movw	ip, #4
   1e220:	str	r3, [sp, #24]
   1e224:	mov	r3, ip
   1e228:	ldr	ip, [sp, #24]
   1e22c:	str	ip, [sp]
   1e230:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   1e234:	str	r0, [fp, #-12]
   1e238:	ldr	r0, [fp, #-12]
   1e23c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e240:	cmp	r0, r1
   1e244:	beq	1e268 <main@@Base+0xa5ec>
   1e248:	ldr	r0, [fp, #8]
   1e24c:	mov	r1, #0
   1e250:	str	r1, [r0, #4]
   1e254:	str	r1, [r0]
   1e258:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e25c:	movw	r1, #0
   1e260:	str	r1, [r0]
   1e264:	b	1e274 <main@@Base+0xa5f8>
   1e268:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e26c:	str	r0, [fp, #-4]
   1e270:	b	1e4d4 <main@@Base+0xa858>
   1e274:	b	1e284 <main@@Base+0xa608>
   1e278:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e27c:	str	r0, [fp, #-4]
   1e280:	b	1e4d4 <main@@Base+0xa858>
   1e284:	b	1e4c8 <main@@Base+0xa84c>
   1e288:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e28c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e290:	movw	r2, #25963	; 0x656b
   1e294:	movt	r2, #28282	; 0x6e7a
   1e298:	subs	r0, r2, r0
   1e29c:	movw	r2, #28789	; 0x7075
   1e2a0:	movt	r2, #21089	; 0x5261
   1e2a4:	sbcs	r1, r2, r1
   1e2a8:	str	r0, [sp, #20]
   1e2ac:	str	r1, [sp, #16]
   1e2b0:	bcc	1e368 <main@@Base+0xa6ec>
   1e2b4:	b	1e2b8 <main@@Base+0xa63c>
   1e2b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e2bc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e2c0:	and	r0, r0, #-16777216	; 0xff000000
   1e2c4:	movw	r2, #26725	; 0x6865
   1e2c8:	movt	r2, #20340	; 0x4f74
   1e2cc:	eor	r1, r1, r2
   1e2d0:	eor	r0, r0, #1912602624	; 0x72000000
   1e2d4:	orr	r0, r0, r1
   1e2d8:	cmp	r0, #0
   1e2dc:	bne	1e358 <main@@Base+0xa6dc>
   1e2e0:	b	1e2e4 <main@@Base+0xa668>
   1e2e4:	ldr	r0, [fp, #-8]
   1e2e8:	ldr	r1, [fp, #-12]
   1e2ec:	str	r1, [fp, #-28]	; 0xffffffe4
   1e2f0:	ldr	r2, [fp, #-16]
   1e2f4:	ldr	r3, [fp, #12]
   1e2f8:	movw	ip, #5
   1e2fc:	str	r3, [sp, #12]
   1e300:	mov	r3, ip
   1e304:	ldr	ip, [sp, #12]
   1e308:	str	ip, [sp]
   1e30c:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   1e310:	str	r0, [fp, #-12]
   1e314:	ldr	r0, [fp, #-12]
   1e318:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e31c:	cmp	r0, r1
   1e320:	beq	1e348 <main@@Base+0xa6cc>
   1e324:	ldr	r0, [fp, #8]
   1e328:	mov	r1, #0
   1e32c:	str	r1, [r0, #4]
   1e330:	mov	r1, #11
   1e334:	str	r1, [r0]
   1e338:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e33c:	movw	r1, #0
   1e340:	str	r1, [r0]
   1e344:	b	1e354 <main@@Base+0xa6d8>
   1e348:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e34c:	str	r0, [fp, #-4]
   1e350:	b	1e4d4 <main@@Base+0xa858>
   1e354:	b	1e364 <main@@Base+0xa6e8>
   1e358:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e35c:	str	r0, [fp, #-4]
   1e360:	b	1e4d4 <main@@Base+0xa858>
   1e364:	b	1e4c4 <main@@Base+0xa848>
   1e368:	ldrh	r0, [fp, #-38]	; 0xffffffda
   1e36c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e370:	movw	r2, #21870	; 0x556e
   1e374:	eor	r2, r2, r1, lsr #16
   1e378:	orr	r0, r0, r1, lsl #16
   1e37c:	movw	r1, #25956	; 0x6564
   1e380:	movt	r1, #30067	; 0x7573
   1e384:	eor	r0, r0, r1
   1e388:	orr	r0, r0, r2
   1e38c:	cmp	r0, #0
   1e390:	bne	1e40c <main@@Base+0xa790>
   1e394:	b	1e398 <main@@Base+0xa71c>
   1e398:	ldr	r0, [fp, #-8]
   1e39c:	ldr	r1, [fp, #-12]
   1e3a0:	str	r1, [fp, #-28]	; 0xffffffe4
   1e3a4:	ldr	r2, [fp, #-16]
   1e3a8:	ldr	r3, [fp, #12]
   1e3ac:	movw	ip, #6
   1e3b0:	str	r3, [sp, #8]
   1e3b4:	mov	r3, ip
   1e3b8:	ldr	ip, [sp, #8]
   1e3bc:	str	ip, [sp]
   1e3c0:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   1e3c4:	str	r0, [fp, #-12]
   1e3c8:	ldr	r0, [fp, #-12]
   1e3cc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e3d0:	cmp	r0, r1
   1e3d4:	beq	1e3fc <main@@Base+0xa780>
   1e3d8:	ldr	r0, [fp, #8]
   1e3dc:	mov	r1, #0
   1e3e0:	str	r1, [r0, #4]
   1e3e4:	mov	r1, #255	; 0xff
   1e3e8:	str	r1, [r0]
   1e3ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e3f0:	movw	r1, #0
   1e3f4:	str	r1, [r0]
   1e3f8:	b	1e408 <main@@Base+0xa78c>
   1e3fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e400:	str	r0, [fp, #-4]
   1e404:	b	1e4d4 <main@@Base+0xa858>
   1e408:	b	1e4c0 <main@@Base+0xa844>
   1e40c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1e410:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1e414:	movw	r2, #28789	; 0x7075
   1e418:	movt	r2, #21089	; 0x5261
   1e41c:	eor	r1, r1, r2
   1e420:	movw	r2, #25964	; 0x656c
   1e424:	movt	r2, #28282	; 0x6e7a
   1e428:	eor	r0, r0, r2
   1e42c:	orr	r0, r0, r1
   1e430:	cmp	r0, #0
   1e434:	bne	1e4b0 <main@@Base+0xa834>
   1e438:	b	1e43c <main@@Base+0xa7c0>
   1e43c:	ldr	r0, [fp, #-8]
   1e440:	ldr	r1, [fp, #-12]
   1e444:	str	r1, [fp, #-28]	; 0xffffffe4
   1e448:	ldr	r2, [fp, #-16]
   1e44c:	ldr	r3, [fp, #12]
   1e450:	movw	ip, #8
   1e454:	str	r3, [sp, #4]
   1e458:	mov	r3, ip
   1e45c:	ldr	ip, [sp, #4]
   1e460:	str	ip, [sp]
   1e464:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   1e468:	str	r0, [fp, #-12]
   1e46c:	ldr	r0, [fp, #-12]
   1e470:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e474:	cmp	r0, r1
   1e478:	beq	1e4a0 <main@@Base+0xa824>
   1e47c:	ldr	r0, [fp, #8]
   1e480:	mov	r1, #0
   1e484:	str	r1, [r0, #4]
   1e488:	mov	r1, #8
   1e48c:	str	r1, [r0]
   1e490:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e494:	movw	r1, #0
   1e498:	str	r1, [r0]
   1e49c:	b	1e4ac <main@@Base+0xa830>
   1e4a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4a4:	str	r0, [fp, #-4]
   1e4a8:	b	1e4d4 <main@@Base+0xa858>
   1e4ac:	b	1e4bc <main@@Base+0xa840>
   1e4b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4b4:	str	r0, [fp, #-4]
   1e4b8:	b	1e4d4 <main@@Base+0xa858>
   1e4bc:	b	1e4c0 <main@@Base+0xa844>
   1e4c0:	b	1e4c4 <main@@Base+0xa848>
   1e4c4:	b	1e4c8 <main@@Base+0xa84c>
   1e4c8:	b	1e4cc <main@@Base+0xa850>
   1e4cc:	ldr	r0, [fp, #-12]
   1e4d0:	str	r0, [fp, #-4]
   1e4d4:	ldr	r0, [fp, #-4]
   1e4d8:	mov	sp, fp
   1e4dc:	pop	{fp, pc}
   1e4e0:	push	{fp, lr}
   1e4e4:	mov	fp, sp
   1e4e8:	sub	sp, sp, #64	; 0x40
   1e4ec:	ldr	ip, [fp, #12]
   1e4f0:	ldr	lr, [fp, #8]
   1e4f4:	str	r0, [fp, #-8]
   1e4f8:	str	r1, [fp, #-12]
   1e4fc:	str	r2, [fp, #-16]
   1e500:	str	r3, [fp, #-20]	; 0xffffffec
   1e504:	ldr	r0, [fp, #-12]
   1e508:	str	r0, [fp, #-24]	; 0xffffffe8
   1e50c:	ldr	r0, [fp, #-12]
   1e510:	ldr	r1, [fp, #-16]
   1e514:	str	lr, [sp, #20]
   1e518:	str	ip, [sp, #16]
   1e51c:	bl	17cac <main@@Base+0x4030>
   1e520:	str	r1, [sp, #28]
   1e524:	str	r0, [sp, #24]
   1e528:	ldr	r0, [sp, #28]
   1e52c:	bic	r0, r0, #255	; 0xff
   1e530:	movw	r1, #28416	; 0x6f00
   1e534:	movt	r1, #18031	; 0x466f
   1e538:	teq	r0, r1
   1e53c:	bne	1e5b0 <main@@Base+0xa934>
   1e540:	b	1e544 <main@@Base+0xa8c8>
   1e544:	ldr	r0, [fp, #-8]
   1e548:	ldr	r1, [fp, #-12]
   1e54c:	str	r1, [fp, #-28]	; 0xffffffe4
   1e550:	ldr	r2, [fp, #-16]
   1e554:	ldr	r3, [fp, #12]
   1e558:	movw	ip, #3
   1e55c:	str	r3, [sp, #12]
   1e560:	mov	r3, ip
   1e564:	ldr	ip, [sp, #12]
   1e568:	str	ip, [sp]
   1e56c:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   1e570:	str	r0, [fp, #-12]
   1e574:	ldr	r0, [fp, #-12]
   1e578:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e57c:	cmp	r0, r1
   1e580:	beq	1e5a8 <main@@Base+0xa92c>
   1e584:	ldr	r0, [fp, #8]
   1e588:	mov	r1, #0
   1e58c:	str	r1, [r0, #4]
   1e590:	mov	r1, #17
   1e594:	str	r1, [r0]
   1e598:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e59c:	movw	r1, #0
   1e5a0:	str	r1, [r0]
   1e5a4:	b	1e5ac <main@@Base+0xa930>
   1e5a8:	b	1e5b8 <main@@Base+0xa93c>
   1e5ac:	b	1e5b4 <main@@Base+0xa938>
   1e5b0:	b	1e5b8 <main@@Base+0xa93c>
   1e5b4:	b	1e6b4 <main@@Base+0xaa38>
   1e5b8:	ldr	r0, [sp, #24]
   1e5bc:	ldr	r1, [sp, #28]
   1e5c0:	movw	r2, #25452	; 0x636c
   1e5c4:	movt	r2, #18798	; 0x496e
   1e5c8:	eor	r1, r1, r2
   1e5cc:	movw	r2, #25942	; 0x6556
   1e5d0:	movt	r2, #30052	; 0x7564
   1e5d4:	eor	r0, r0, r2
   1e5d8:	orr	r0, r0, r1
   1e5dc:	cmp	r0, #0
   1e5e0:	bne	1e6a4 <main@@Base+0xaa28>
   1e5e4:	b	1e5e8 <main@@Base+0xa96c>
   1e5e8:	ldr	r0, [fp, #-12]
   1e5ec:	add	r0, r0, #8
   1e5f0:	str	r0, [fp, #-12]
   1e5f4:	ldr	r0, [fp, #-12]
   1e5f8:	ldr	r1, [fp, #-16]
   1e5fc:	bl	17cac <main@@Base+0x4030>
   1e600:	str	r1, [sp, #28]
   1e604:	str	r0, [sp, #24]
   1e608:	ldr	r0, [sp, #28]
   1e60c:	bfc	r0, #0, #16
   1e610:	movw	r1, #0
   1e614:	movt	r1, #24940	; 0x616c
   1e618:	teq	r0, r1
   1e61c:	bne	1e694 <main@@Base+0xaa18>
   1e620:	b	1e624 <main@@Base+0xa9a8>
   1e624:	ldr	r0, [fp, #-8]
   1e628:	ldr	r1, [fp, #-12]
   1e62c:	str	r1, [fp, #-28]	; 0xffffffe4
   1e630:	ldr	r2, [fp, #-16]
   1e634:	ldr	r3, [fp, #12]
   1e638:	movw	ip, #2
   1e63c:	str	r3, [sp, #8]
   1e640:	mov	r3, ip
   1e644:	ldr	ip, [sp, #8]
   1e648:	str	ip, [sp]
   1e64c:	bl	2bcb8 <flatcc_json_parser_match_constant@@Base>
   1e650:	str	r0, [fp, #-12]
   1e654:	ldr	r0, [fp, #-12]
   1e658:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1e65c:	cmp	r0, r1
   1e660:	beq	1e684 <main@@Base+0xaa08>
   1e664:	ldr	r0, [fp, #8]
   1e668:	mov	r1, #0
   1e66c:	str	r1, [r0, #4]
   1e670:	str	r1, [r0]
   1e674:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e678:	movw	r1, #0
   1e67c:	str	r1, [r0]
   1e680:	b	1e690 <main@@Base+0xaa14>
   1e684:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e688:	str	r0, [fp, #-4]
   1e68c:	b	1e6bc <main@@Base+0xaa40>
   1e690:	b	1e6a0 <main@@Base+0xaa24>
   1e694:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e698:	str	r0, [fp, #-4]
   1e69c:	b	1e6bc <main@@Base+0xaa40>
   1e6a0:	b	1e6b0 <main@@Base+0xaa34>
   1e6a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e6a8:	str	r0, [fp, #-4]
   1e6ac:	b	1e6bc <main@@Base+0xaa40>
   1e6b0:	b	1e6b4 <main@@Base+0xaa38>
   1e6b4:	ldr	r0, [fp, #-12]
   1e6b8:	str	r0, [fp, #-4]
   1e6bc:	ldr	r0, [fp, #-4]
   1e6c0:	mov	sp, fp
   1e6c4:	pop	{fp, pc}
   1e6c8:	push	{r4, sl, fp, lr}
   1e6cc:	add	fp, sp, #8
   1e6d0:	sub	sp, sp, #56	; 0x38
   1e6d4:	ldr	ip, [fp, #12]
   1e6d8:	ldr	lr, [fp, #8]
   1e6dc:	ldr	r4, [fp, #16]
   1e6e0:	str	r0, [fp, #-16]
   1e6e4:	str	r1, [fp, #-20]	; 0xffffffec
   1e6e8:	str	r2, [fp, #-24]	; 0xffffffe8
   1e6ec:	str	r3, [fp, #-28]	; 0xffffffe4
   1e6f0:	str	ip, [sp, #28]
   1e6f4:	str	lr, [sp, #24]
   1e6f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e6fc:	cmp	r0, #0
   1e700:	str	r4, [sp, #20]
   1e704:	beq	1e758 <main@@Base+0xaadc>
   1e708:	ldr	r0, [sp, #24]
   1e70c:	ldr	r1, [sp, #28]
   1e710:	subs	r0, r0, #129	; 0x81
   1e714:	sbcs	r1, r1, #0
   1e718:	str	r0, [sp, #16]
   1e71c:	str	r1, [sp, #12]
   1e720:	bcc	1e744 <main@@Base+0xaac8>
   1e724:	b	1e728 <main@@Base+0xaaac>
   1e728:	ldr	r0, [fp, #-16]
   1e72c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e730:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e734:	movw	r3, #8
   1e738:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1e73c:	str	r0, [fp, #-12]
   1e740:	b	1e7a8 <main@@Base+0xab2c>
   1e744:	ldr	r0, [sp, #24]
   1e748:	rsb	r0, r0, #0
   1e74c:	ldr	r1, [fp, #16]
   1e750:	strb	r0, [r1]
   1e754:	b	1e7a0 <main@@Base+0xab24>
   1e758:	ldr	r0, [sp, #24]
   1e75c:	ldr	r1, [sp, #28]
   1e760:	subs	r0, r0, #128	; 0x80
   1e764:	sbcs	r1, r1, #0
   1e768:	str	r0, [sp, #8]
   1e76c:	str	r1, [sp, #4]
   1e770:	bcc	1e794 <main@@Base+0xab18>
   1e774:	b	1e778 <main@@Base+0xaafc>
   1e778:	ldr	r0, [fp, #-16]
   1e77c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e780:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e784:	movw	r3, #7
   1e788:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1e78c:	str	r0, [fp, #-12]
   1e790:	b	1e7a8 <main@@Base+0xab2c>
   1e794:	ldrb	r0, [sp, #24]
   1e798:	ldr	r1, [fp, #16]
   1e79c:	strb	r0, [r1]
   1e7a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e7a4:	str	r0, [fp, #-12]
   1e7a8:	ldr	r0, [fp, #-12]
   1e7ac:	sub	sp, fp, #8
   1e7b0:	pop	{r4, sl, fp, pc}
   1e7b4:	push	{fp, lr}
   1e7b8:	mov	fp, sp
   1e7bc:	sub	sp, sp, #16
   1e7c0:	str	r0, [fp, #-4]
   1e7c4:	str	r1, [sp, #8]
   1e7c8:	str	r2, [sp, #4]
   1e7cc:	ldr	r0, [fp, #-4]
   1e7d0:	ldr	r1, [sp, #8]
   1e7d4:	ldr	r2, [sp, #4]
   1e7d8:	bl	17c00 <main@@Base+0x3f84>
   1e7dc:	str	r0, [sp, #8]
   1e7e0:	ldr	r0, [fp, #-4]
   1e7e4:	ldr	r0, [r0, #12]
   1e7e8:	cmp	r0, #0
   1e7ec:	bne	1e804 <main@@Base+0xab88>
   1e7f0:	ldr	r0, [fp, #-4]
   1e7f4:	ldr	r1, [sp, #8]
   1e7f8:	ldr	r2, [sp, #4]
   1e7fc:	bl	1d190 <main@@Base+0x9514>
   1e800:	str	r0, [sp, #8]
   1e804:	ldr	r0, [sp, #8]
   1e808:	mov	sp, fp
   1e80c:	pop	{fp, pc}
   1e810:	sub	sp, sp, #4
   1e814:	strb	r0, [sp, #3]
   1e818:	ldrsb	r0, [sp, #3]
   1e81c:	add	sp, sp, #4
   1e820:	bx	lr
   1e824:	push	{r4, sl, fp, lr}
   1e828:	add	fp, sp, #8
   1e82c:	sub	sp, sp, #48	; 0x30
   1e830:	ldr	ip, [fp, #12]
   1e834:	ldr	lr, [fp, #8]
   1e838:	ldr	r4, [fp, #16]
   1e83c:	str	r0, [fp, #-16]
   1e840:	str	r1, [fp, #-20]	; 0xffffffec
   1e844:	str	r2, [fp, #-24]	; 0xffffffe8
   1e848:	str	r3, [sp, #28]
   1e84c:	str	ip, [sp, #20]
   1e850:	str	lr, [sp, #16]
   1e854:	ldr	r0, [sp, #28]
   1e858:	cmp	r0, #0
   1e85c:	str	r4, [sp, #12]
   1e860:	beq	1e880 <main@@Base+0xac04>
   1e864:	ldr	r0, [fp, #-16]
   1e868:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e86c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e870:	movw	r3, #8
   1e874:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1e878:	str	r0, [fp, #-12]
   1e87c:	b	1e8d0 <main@@Base+0xac54>
   1e880:	ldr	r0, [sp, #16]
   1e884:	ldr	r1, [sp, #20]
   1e888:	subs	r0, r0, #256	; 0x100
   1e88c:	sbcs	r1, r1, #0
   1e890:	str	r0, [sp, #8]
   1e894:	str	r1, [sp, #4]
   1e898:	bcc	1e8bc <main@@Base+0xac40>
   1e89c:	b	1e8a0 <main@@Base+0xac24>
   1e8a0:	ldr	r0, [fp, #-16]
   1e8a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e8a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e8ac:	movw	r3, #7
   1e8b0:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1e8b4:	str	r0, [fp, #-12]
   1e8b8:	b	1e8d0 <main@@Base+0xac54>
   1e8bc:	ldrb	r0, [sp, #16]
   1e8c0:	ldr	r1, [fp, #16]
   1e8c4:	strb	r0, [r1]
   1e8c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e8cc:	str	r0, [fp, #-12]
   1e8d0:	ldr	r0, [fp, #-12]
   1e8d4:	sub	sp, fp, #8
   1e8d8:	pop	{r4, sl, fp, pc}
   1e8dc:	sub	sp, sp, #4
   1e8e0:	strb	r0, [sp, #3]
   1e8e4:	ldrb	r0, [sp, #3]
   1e8e8:	add	sp, sp, #4
   1e8ec:	bx	lr
   1e8f0:	push	{r4, sl, fp, lr}
   1e8f4:	add	fp, sp, #8
   1e8f8:	sub	sp, sp, #56	; 0x38
   1e8fc:	ldr	ip, [fp, #12]
   1e900:	ldr	lr, [fp, #8]
   1e904:	ldr	r4, [fp, #16]
   1e908:	str	r0, [fp, #-16]
   1e90c:	str	r1, [fp, #-20]	; 0xffffffec
   1e910:	str	r2, [fp, #-24]	; 0xffffffe8
   1e914:	str	r3, [fp, #-28]	; 0xffffffe4
   1e918:	str	ip, [sp, #28]
   1e91c:	str	lr, [sp, #24]
   1e920:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1e924:	cmp	r0, #0
   1e928:	str	r4, [sp, #20]
   1e92c:	beq	1e984 <main@@Base+0xad08>
   1e930:	ldr	r0, [sp, #24]
   1e934:	ldr	r1, [sp, #28]
   1e938:	movw	r2, #32769	; 0x8001
   1e93c:	subs	r0, r0, r2
   1e940:	sbcs	r1, r1, #0
   1e944:	str	r0, [sp, #16]
   1e948:	str	r1, [sp, #12]
   1e94c:	bcc	1e970 <main@@Base+0xacf4>
   1e950:	b	1e954 <main@@Base+0xacd8>
   1e954:	ldr	r0, [fp, #-16]
   1e958:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e95c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e960:	movw	r3, #8
   1e964:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1e968:	str	r0, [fp, #-12]
   1e96c:	b	1e9d4 <main@@Base+0xad58>
   1e970:	ldr	r0, [sp, #24]
   1e974:	rsb	r0, r0, #0
   1e978:	ldr	r1, [fp, #16]
   1e97c:	strh	r0, [r1]
   1e980:	b	1e9cc <main@@Base+0xad50>
   1e984:	ldr	r0, [sp, #24]
   1e988:	ldr	r1, [sp, #28]
   1e98c:	subs	r0, r0, #32768	; 0x8000
   1e990:	sbcs	r1, r1, #0
   1e994:	str	r0, [sp, #8]
   1e998:	str	r1, [sp, #4]
   1e99c:	bcc	1e9c0 <main@@Base+0xad44>
   1e9a0:	b	1e9a4 <main@@Base+0xad28>
   1e9a4:	ldr	r0, [fp, #-16]
   1e9a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e9ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e9b0:	movw	r3, #7
   1e9b4:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1e9b8:	str	r0, [fp, #-12]
   1e9bc:	b	1e9d4 <main@@Base+0xad58>
   1e9c0:	ldrh	r0, [sp, #24]
   1e9c4:	ldr	r1, [fp, #16]
   1e9c8:	strh	r0, [r1]
   1e9cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   1e9d0:	str	r0, [fp, #-12]
   1e9d4:	ldr	r0, [fp, #-12]
   1e9d8:	sub	sp, fp, #8
   1e9dc:	pop	{r4, sl, fp, pc}
   1e9e0:	sub	sp, sp, #4
   1e9e4:	strh	r0, [sp, #2]
   1e9e8:	ldrsh	r0, [sp, #2]
   1e9ec:	add	sp, sp, #4
   1e9f0:	bx	lr
   1e9f4:	push	{fp, lr}
   1e9f8:	mov	fp, sp
   1e9fc:	sub	sp, sp, #16
   1ea00:	str	r0, [sp, #8]
   1ea04:	str	r1, [sp, #4]
   1ea08:	str	r2, [sp]
   1ea0c:	ldr	r0, [sp]
   1ea10:	ldr	r1, [sp, #4]
   1ea14:	sub	r0, r0, r1
   1ea18:	cmp	r0, #4
   1ea1c:	blt	1ea5c <main@@Base+0xade0>
   1ea20:	ldr	r0, [sp, #4]
   1ea24:	ldr	r0, [r0]
   1ea28:	movw	r1, #35474	; 0x8a92
   1ea2c:	movt	r1, #37779	; 0x9393
   1ea30:	add	r1, r0, r1
   1ea34:	movw	r2, #30062	; 0x756e
   1ea38:	movt	r2, #27756	; 0x6c6c
   1ea3c:	cmp	r0, r2
   1ea40:	movwne	r1, #1
   1ea44:	cmp	r1, #0
   1ea48:	bne	1ea5c <main@@Base+0xade0>
   1ea4c:	ldr	r0, [sp, #4]
   1ea50:	add	r0, r0, #4
   1ea54:	str	r0, [fp, #-4]
   1ea58:	b	1ea74 <main@@Base+0xadf8>
   1ea5c:	ldr	r0, [sp, #8]
   1ea60:	ldr	r1, [sp, #4]
   1ea64:	ldr	r2, [sp]
   1ea68:	movw	r3, #26
   1ea6c:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1ea70:	str	r0, [fp, #-4]
   1ea74:	ldr	r0, [fp, #-4]
   1ea78:	mov	sp, fp
   1ea7c:	pop	{fp, pc}
   1ea80:	push	{fp, lr}
   1ea84:	mov	fp, sp
   1ea88:	sub	sp, sp, #64	; 0x40
   1ea8c:	str	r0, [fp, #-8]
   1ea90:	str	r1, [fp, #-12]
   1ea94:	str	r2, [fp, #-16]
   1ea98:	str	r3, [fp, #-20]	; 0xffffffec
   1ea9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1eaa0:	movw	r1, #0
   1eaa4:	str	r1, [r0]
   1eaa8:	ldr	r0, [fp, #-8]
   1eaac:	ldr	r0, [r0]
   1eab0:	movw	r1, #4
   1eab4:	bl	26068 <flatcc_builder_start_table@@Base>
   1eab8:	cmp	r0, #0
   1eabc:	beq	1eac4 <main@@Base+0xae48>
   1eac0:	b	1f0ac <main@@Base+0xb430>
   1eac4:	ldr	r0, [fp, #-8]
   1eac8:	ldr	r1, [fp, #-12]
   1eacc:	ldr	r2, [fp, #-16]
   1ead0:	sub	r3, fp, #24
   1ead4:	bl	17b1c <main@@Base+0x3ea0>
   1ead8:	str	r0, [fp, #-12]
   1eadc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eae0:	cmp	r0, #0
   1eae4:	beq	1f06c <main@@Base+0xb3f0>
   1eae8:	ldr	r0, [fp, #-8]
   1eaec:	ldr	r1, [fp, #-12]
   1eaf0:	ldr	r2, [fp, #-16]
   1eaf4:	bl	17c00 <main@@Base+0x3f84>
   1eaf8:	str	r0, [fp, #-12]
   1eafc:	ldr	r0, [fp, #-12]
   1eb00:	ldr	r1, [fp, #-16]
   1eb04:	bl	17cac <main@@Base+0x4030>
   1eb08:	str	r1, [sp, #20]
   1eb0c:	str	r0, [sp, #16]
   1eb10:	ldrh	r0, [sp, #18]
   1eb14:	ldr	r1, [sp, #20]
   1eb18:	movw	r2, #25455	; 0x636f
   1eb1c:	eor	r2, r2, r1, lsr #16
   1eb20:	orr	r0, r0, r1, lsl #16
   1eb24:	movw	r1, #29234	; 0x7232
   1eb28:	movt	r1, #27759	; 0x6c6f
   1eb2c:	eor	r0, r0, r1
   1eb30:	orr	r0, r0, r2
   1eb34:	cmp	r0, #0
   1eb38:	bne	1ec5c <main@@Base+0xafe0>
   1eb3c:	b	1eb40 <main@@Base+0xaec4>
   1eb40:	ldr	r0, [fp, #-8]
   1eb44:	ldr	r1, [fp, #-12]
   1eb48:	str	r1, [sp, #24]
   1eb4c:	ldr	r2, [fp, #-16]
   1eb50:	movw	r3, #6
   1eb54:	bl	17ce4 <main@@Base+0x4068>
   1eb58:	str	r0, [fp, #-12]
   1eb5c:	ldr	r0, [sp, #24]
   1eb60:	ldr	r1, [fp, #-12]
   1eb64:	cmp	r0, r1
   1eb68:	beq	1ec54 <main@@Base+0xafd8>
   1eb6c:	movw	r0, #0
   1eb70:	strb	r0, [sp, #15]
   1eb74:	ldr	r0, [fp, #-8]
   1eb78:	ldr	r1, [fp, #-12]
   1eb7c:	str	r1, [sp, #24]
   1eb80:	ldr	r2, [fp, #-16]
   1eb84:	add	r3, sp, #15
   1eb88:	bl	19260 <main@@Base+0x55e4>
   1eb8c:	str	r0, [fp, #-12]
   1eb90:	ldr	r0, [sp, #24]
   1eb94:	ldr	r1, [fp, #-12]
   1eb98:	cmp	r0, r1
   1eb9c:	bne	1ebf0 <main@@Base+0xaf74>
   1eba0:	ldr	r0, [pc, #1332]	; 1f0dc <main@@Base+0xb460>
   1eba4:	add	r3, pc, r0
   1eba8:	ldr	r0, [fp, #-8]
   1ebac:	ldr	r1, [fp, #-12]
   1ebb0:	str	r1, [sp, #24]
   1ebb4:	ldr	r2, [fp, #-16]
   1ebb8:	add	ip, sp, #15
   1ebbc:	str	ip, [sp]
   1ebc0:	bl	1933c <main@@Base+0x56c0>
   1ebc4:	str	r0, [fp, #-12]
   1ebc8:	ldr	r0, [fp, #-12]
   1ebcc:	ldr	r1, [sp, #24]
   1ebd0:	cmp	r0, r1
   1ebd4:	beq	1ebe8 <main@@Base+0xaf6c>
   1ebd8:	ldr	r0, [fp, #-12]
   1ebdc:	ldr	r1, [fp, #-16]
   1ebe0:	cmp	r0, r1
   1ebe4:	bne	1ebec <main@@Base+0xaf70>
   1ebe8:	b	1f0ac <main@@Base+0xb430>
   1ebec:	b	1ebf0 <main@@Base+0xaf74>
   1ebf0:	ldrsb	r0, [sp, #15]
   1ebf4:	cmp	r0, #2
   1ebf8:	bne	1ec10 <main@@Base+0xaf94>
   1ebfc:	ldr	r0, [fp, #-8]
   1ec00:	ldr	r0, [r0, #8]
   1ec04:	and	r0, r0, #2
   1ec08:	cmp	r0, #0
   1ec0c:	beq	1ec50 <main@@Base+0xafd4>
   1ec10:	ldr	r0, [fp, #-8]
   1ec14:	ldr	r0, [r0]
   1ec18:	movw	r1, #1
   1ec1c:	str	r1, [sp, #8]
   1ec20:	ldr	r2, [sp, #8]
   1ec24:	movw	r3, #1
   1ec28:	uxth	r3, r3
   1ec2c:	bl	27920 <flatcc_builder_table_add@@Base>
   1ec30:	str	r0, [fp, #-28]	; 0xffffffe4
   1ec34:	movw	r1, #0
   1ec38:	cmp	r0, r1
   1ec3c:	bne	1ec44 <main@@Base+0xafc8>
   1ec40:	b	1f0ac <main@@Base+0xb430>
   1ec44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ec48:	ldrsb	r1, [sp, #15]
   1ec4c:	bl	19568 <main@@Base+0x58ec>
   1ec50:	b	1ec58 <main@@Base+0xafdc>
   1ec54:	b	1edac <main@@Base+0xb130>
   1ec58:	b	1eda8 <main@@Base+0xb12c>
   1ec5c:	ldr	r0, [sp, #16]
   1ec60:	ldr	r1, [sp, #20]
   1ec64:	and	r0, r0, #-16777216	; 0xff000000
   1ec68:	movw	r2, #27759	; 0x6c6f
   1ec6c:	movt	r2, #25455	; 0x636f
   1ec70:	eor	r1, r1, r2
   1ec74:	eor	r0, r0, #1912602624	; 0x72000000
   1ec78:	orr	r0, r0, r1
   1ec7c:	cmp	r0, #0
   1ec80:	bne	1eda0 <main@@Base+0xb124>
   1ec84:	b	1ec88 <main@@Base+0xb00c>
   1ec88:	ldr	r0, [fp, #-8]
   1ec8c:	ldr	r1, [fp, #-12]
   1ec90:	str	r1, [sp, #24]
   1ec94:	ldr	r2, [fp, #-16]
   1ec98:	movw	r3, #5
   1ec9c:	bl	17ce4 <main@@Base+0x4068>
   1eca0:	str	r0, [fp, #-12]
   1eca4:	ldr	r0, [sp, #24]
   1eca8:	ldr	r1, [fp, #-12]
   1ecac:	cmp	r0, r1
   1ecb0:	beq	1ed98 <main@@Base+0xb11c>
   1ecb4:	movw	r0, #0
   1ecb8:	strb	r0, [sp, #14]
   1ecbc:	ldr	r0, [fp, #-8]
   1ecc0:	ldr	r1, [fp, #-12]
   1ecc4:	str	r1, [sp, #24]
   1ecc8:	ldr	r2, [fp, #-16]
   1eccc:	add	r3, sp, #14
   1ecd0:	bl	19260 <main@@Base+0x55e4>
   1ecd4:	str	r0, [fp, #-12]
   1ecd8:	ldr	r0, [sp, #24]
   1ecdc:	ldr	r1, [fp, #-12]
   1ece0:	cmp	r0, r1
   1ece4:	bne	1ed38 <main@@Base+0xb0bc>
   1ece8:	ldr	r0, [pc, #992]	; 1f0d0 <main@@Base+0xb454>
   1ecec:	add	r3, pc, r0
   1ecf0:	ldr	r0, [fp, #-8]
   1ecf4:	ldr	r1, [fp, #-12]
   1ecf8:	str	r1, [sp, #24]
   1ecfc:	ldr	r2, [fp, #-16]
   1ed00:	add	ip, sp, #14
   1ed04:	str	ip, [sp]
   1ed08:	bl	1933c <main@@Base+0x56c0>
   1ed0c:	str	r0, [fp, #-12]
   1ed10:	ldr	r0, [fp, #-12]
   1ed14:	ldr	r1, [sp, #24]
   1ed18:	cmp	r0, r1
   1ed1c:	beq	1ed30 <main@@Base+0xb0b4>
   1ed20:	ldr	r0, [fp, #-12]
   1ed24:	ldr	r1, [fp, #-16]
   1ed28:	cmp	r0, r1
   1ed2c:	bne	1ed34 <main@@Base+0xb0b8>
   1ed30:	b	1f0ac <main@@Base+0xb430>
   1ed34:	b	1ed38 <main@@Base+0xb0bc>
   1ed38:	ldrsb	r0, [sp, #14]
   1ed3c:	cmp	r0, #2
   1ed40:	bne	1ed58 <main@@Base+0xb0dc>
   1ed44:	ldr	r0, [fp, #-8]
   1ed48:	ldr	r0, [r0, #8]
   1ed4c:	and	r0, r0, #2
   1ed50:	cmp	r0, #0
   1ed54:	beq	1ed94 <main@@Base+0xb118>
   1ed58:	ldr	r0, [fp, #-8]
   1ed5c:	ldr	r0, [r0]
   1ed60:	movw	r1, #0
   1ed64:	movw	r2, #1
   1ed68:	movw	r3, #1
   1ed6c:	uxth	r3, r3
   1ed70:	bl	27920 <flatcc_builder_table_add@@Base>
   1ed74:	str	r0, [fp, #-28]	; 0xffffffe4
   1ed78:	movw	r1, #0
   1ed7c:	cmp	r0, r1
   1ed80:	bne	1ed88 <main@@Base+0xb10c>
   1ed84:	b	1f0ac <main@@Base+0xb430>
   1ed88:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ed8c:	ldrsb	r1, [sp, #14]
   1ed90:	bl	19568 <main@@Base+0x58ec>
   1ed94:	b	1ed9c <main@@Base+0xb120>
   1ed98:	b	1edac <main@@Base+0xb130>
   1ed9c:	b	1eda4 <main@@Base+0xb128>
   1eda0:	b	1edac <main@@Base+0xb130>
   1eda4:	b	1eda8 <main@@Base+0xb12c>
   1eda8:	b	1f050 <main@@Base+0xb3d4>
   1edac:	ldr	r0, [sp, #20]
   1edb0:	bic	r0, r0, #255	; 0xff
   1edb4:	movw	r1, #12800	; 0x3200
   1edb8:	movt	r1, #30051	; 0x7563
   1edbc:	teq	r0, r1
   1edc0:	bne	1eef0 <main@@Base+0xb274>
   1edc4:	b	1edc8 <main@@Base+0xb14c>
   1edc8:	ldr	r0, [fp, #-8]
   1edcc:	ldr	r1, [fp, #-12]
   1edd0:	str	r1, [sp, #24]
   1edd4:	ldr	r2, [fp, #-16]
   1edd8:	movw	r3, #3
   1eddc:	bl	17ce4 <main@@Base+0x4068>
   1ede0:	str	r0, [fp, #-12]
   1ede4:	ldr	r0, [sp, #24]
   1ede8:	ldr	r1, [fp, #-12]
   1edec:	cmp	r0, r1
   1edf0:	beq	1eed8 <main@@Base+0xb25c>
   1edf4:	movw	r0, #0
   1edf8:	strb	r0, [sp, #13]
   1edfc:	ldr	r0, [fp, #-8]
   1ee00:	ldr	r1, [fp, #-12]
   1ee04:	str	r1, [sp, #24]
   1ee08:	ldr	r2, [fp, #-16]
   1ee0c:	add	r3, sp, #13
   1ee10:	bl	19678 <main@@Base+0x59fc>
   1ee14:	str	r0, [fp, #-12]
   1ee18:	ldr	r0, [sp, #24]
   1ee1c:	ldr	r1, [fp, #-12]
   1ee20:	cmp	r0, r1
   1ee24:	bne	1ee78 <main@@Base+0xb1fc>
   1ee28:	ldr	r0, [pc, #680]	; 1f0d8 <main@@Base+0xb45c>
   1ee2c:	add	r3, pc, r0
   1ee30:	ldr	r0, [fp, #-8]
   1ee34:	ldr	r1, [fp, #-12]
   1ee38:	str	r1, [sp, #24]
   1ee3c:	ldr	r2, [fp, #-16]
   1ee40:	add	ip, sp, #13
   1ee44:	str	ip, [sp]
   1ee48:	bl	19754 <main@@Base+0x5ad8>
   1ee4c:	str	r0, [fp, #-12]
   1ee50:	ldr	r0, [fp, #-12]
   1ee54:	ldr	r1, [sp, #24]
   1ee58:	cmp	r0, r1
   1ee5c:	beq	1ee70 <main@@Base+0xb1f4>
   1ee60:	ldr	r0, [fp, #-12]
   1ee64:	ldr	r1, [fp, #-16]
   1ee68:	cmp	r0, r1
   1ee6c:	bne	1ee74 <main@@Base+0xb1f8>
   1ee70:	b	1f0ac <main@@Base+0xb430>
   1ee74:	b	1ee78 <main@@Base+0xb1fc>
   1ee78:	ldrb	r0, [sp, #13]
   1ee7c:	cmp	r0, #2
   1ee80:	bne	1ee98 <main@@Base+0xb21c>
   1ee84:	ldr	r0, [fp, #-8]
   1ee88:	ldr	r0, [r0, #8]
   1ee8c:	and	r0, r0, #2
   1ee90:	cmp	r0, #0
   1ee94:	beq	1eed4 <main@@Base+0xb258>
   1ee98:	ldr	r0, [fp, #-8]
   1ee9c:	ldr	r0, [r0]
   1eea0:	movw	r1, #3
   1eea4:	movw	r2, #1
   1eea8:	movw	r3, #1
   1eeac:	uxth	r3, r3
   1eeb0:	bl	27920 <flatcc_builder_table_add@@Base>
   1eeb4:	str	r0, [fp, #-28]	; 0xffffffe4
   1eeb8:	movw	r1, #0
   1eebc:	cmp	r0, r1
   1eec0:	bne	1eec8 <main@@Base+0xb24c>
   1eec4:	b	1f0ac <main@@Base+0xb430>
   1eec8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1eecc:	ldrb	r1, [sp, #13]
   1eed0:	bl	19980 <main@@Base+0x5d04>
   1eed4:	b	1eeec <main@@Base+0xb270>
   1eed8:	ldr	r0, [fp, #-8]
   1eedc:	ldr	r1, [fp, #-12]
   1eee0:	ldr	r2, [fp, #-16]
   1eee4:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1eee8:	str	r0, [fp, #-12]
   1eeec:	b	1f04c <main@@Base+0xb3d0>
   1eef0:	ldr	r0, [sp, #20]
   1eef4:	bfc	r0, #0, #16
   1eef8:	movw	r1, #0
   1eefc:	movt	r1, #30051	; 0x7563
   1ef00:	teq	r0, r1
   1ef04:	bne	1f034 <main@@Base+0xb3b8>
   1ef08:	b	1ef0c <main@@Base+0xb290>
   1ef0c:	ldr	r0, [fp, #-8]
   1ef10:	ldr	r1, [fp, #-12]
   1ef14:	str	r1, [sp, #24]
   1ef18:	ldr	r2, [fp, #-16]
   1ef1c:	movw	r3, #2
   1ef20:	bl	17ce4 <main@@Base+0x4068>
   1ef24:	str	r0, [fp, #-12]
   1ef28:	ldr	r0, [sp, #24]
   1ef2c:	ldr	r1, [fp, #-12]
   1ef30:	cmp	r0, r1
   1ef34:	beq	1f01c <main@@Base+0xb3a0>
   1ef38:	movw	r0, #0
   1ef3c:	strb	r0, [sp, #12]
   1ef40:	ldr	r0, [fp, #-8]
   1ef44:	ldr	r1, [fp, #-12]
   1ef48:	str	r1, [sp, #24]
   1ef4c:	ldr	r2, [fp, #-16]
   1ef50:	add	r3, sp, #12
   1ef54:	bl	19678 <main@@Base+0x59fc>
   1ef58:	str	r0, [fp, #-12]
   1ef5c:	ldr	r0, [sp, #24]
   1ef60:	ldr	r1, [fp, #-12]
   1ef64:	cmp	r0, r1
   1ef68:	bne	1efbc <main@@Base+0xb340>
   1ef6c:	ldr	r0, [pc, #352]	; 1f0d4 <main@@Base+0xb458>
   1ef70:	add	r3, pc, r0
   1ef74:	ldr	r0, [fp, #-8]
   1ef78:	ldr	r1, [fp, #-12]
   1ef7c:	str	r1, [sp, #24]
   1ef80:	ldr	r2, [fp, #-16]
   1ef84:	add	ip, sp, #12
   1ef88:	str	ip, [sp]
   1ef8c:	bl	19754 <main@@Base+0x5ad8>
   1ef90:	str	r0, [fp, #-12]
   1ef94:	ldr	r0, [fp, #-12]
   1ef98:	ldr	r1, [sp, #24]
   1ef9c:	cmp	r0, r1
   1efa0:	beq	1efb4 <main@@Base+0xb338>
   1efa4:	ldr	r0, [fp, #-12]
   1efa8:	ldr	r1, [fp, #-16]
   1efac:	cmp	r0, r1
   1efb0:	bne	1efb8 <main@@Base+0xb33c>
   1efb4:	b	1f0ac <main@@Base+0xb430>
   1efb8:	b	1efbc <main@@Base+0xb340>
   1efbc:	ldrb	r0, [sp, #12]
   1efc0:	cmp	r0, #2
   1efc4:	bne	1efdc <main@@Base+0xb360>
   1efc8:	ldr	r0, [fp, #-8]
   1efcc:	ldr	r0, [r0, #8]
   1efd0:	and	r0, r0, #2
   1efd4:	cmp	r0, #0
   1efd8:	beq	1f018 <main@@Base+0xb39c>
   1efdc:	ldr	r0, [fp, #-8]
   1efe0:	ldr	r0, [r0]
   1efe4:	movw	r1, #2
   1efe8:	movw	r2, #1
   1efec:	movw	r3, #1
   1eff0:	uxth	r3, r3
   1eff4:	bl	27920 <flatcc_builder_table_add@@Base>
   1eff8:	str	r0, [fp, #-28]	; 0xffffffe4
   1effc:	movw	r1, #0
   1f000:	cmp	r0, r1
   1f004:	bne	1f00c <main@@Base+0xb390>
   1f008:	b	1f0ac <main@@Base+0xb430>
   1f00c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f010:	ldrb	r1, [sp, #12]
   1f014:	bl	19980 <main@@Base+0x5d04>
   1f018:	b	1f030 <main@@Base+0xb3b4>
   1f01c:	ldr	r0, [fp, #-8]
   1f020:	ldr	r1, [fp, #-12]
   1f024:	ldr	r2, [fp, #-16]
   1f028:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1f02c:	str	r0, [fp, #-12]
   1f030:	b	1f048 <main@@Base+0xb3cc>
   1f034:	ldr	r0, [fp, #-8]
   1f038:	ldr	r1, [fp, #-12]
   1f03c:	ldr	r2, [fp, #-16]
   1f040:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1f044:	str	r0, [fp, #-12]
   1f048:	b	1f04c <main@@Base+0xb3d0>
   1f04c:	b	1f050 <main@@Base+0xb3d4>
   1f050:	ldr	r0, [fp, #-8]
   1f054:	ldr	r1, [fp, #-12]
   1f058:	ldr	r2, [fp, #-16]
   1f05c:	sub	r3, fp, #24
   1f060:	bl	1d02c <main@@Base+0x93b0>
   1f064:	str	r0, [fp, #-12]
   1f068:	b	1eadc <main@@Base+0xae60>
   1f06c:	ldr	r0, [fp, #-8]
   1f070:	ldr	r0, [r0, #24]
   1f074:	cmp	r0, #0
   1f078:	beq	1f080 <main@@Base+0xb404>
   1f07c:	b	1f0ac <main@@Base+0xb430>
   1f080:	ldr	r0, [fp, #-8]
   1f084:	ldr	r0, [r0]
   1f088:	bl	26ce0 <flatcc_builder_end_table@@Base>
   1f08c:	ldr	lr, [fp, #-20]	; 0xffffffec
   1f090:	str	r0, [lr]
   1f094:	cmp	r0, #0
   1f098:	bne	1f0a0 <main@@Base+0xb424>
   1f09c:	b	1f0ac <main@@Base+0xb430>
   1f0a0:	ldr	r0, [fp, #-12]
   1f0a4:	str	r0, [fp, #-4]
   1f0a8:	b	1f0c4 <main@@Base+0xb448>
   1f0ac:	ldr	r0, [fp, #-8]
   1f0b0:	ldr	r1, [fp, #-12]
   1f0b4:	ldr	r2, [fp, #-16]
   1f0b8:	movw	r3, #33	; 0x21
   1f0bc:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1f0c0:	str	r0, [fp, #-4]
   1f0c4:	ldr	r0, [fp, #-4]
   1f0c8:	mov	sp, fp
   1f0cc:	pop	{fp, pc}
   1f0d0:	andeq	r5, r2, r0, lsr #10
   1f0d4:			; <UNDEFINED> instruction: 0x000252b8
   1f0d8:	strdeq	r5, [r2], -r0
   1f0dc:	andeq	r5, r2, r8, asr r6
   1f0e0:	push	{fp, lr}
   1f0e4:	mov	fp, sp
   1f0e8:	sub	sp, sp, #24
   1f0ec:	str	r0, [fp, #-8]
   1f0f0:	str	r1, [sp, #12]
   1f0f4:	str	r2, [sp, #8]
   1f0f8:	str	r3, [sp, #4]
   1f0fc:	ldr	r0, [sp, #4]
   1f100:	movw	r1, #0
   1f104:	str	r1, [r0]
   1f108:	ldr	r0, [fp, #-8]
   1f10c:	ldr	r0, [r0]
   1f110:	bl	26068 <flatcc_builder_start_table@@Base>
   1f114:	cmp	r0, #0
   1f118:	beq	1f120 <main@@Base+0xb4a4>
   1f11c:	b	1f1c8 <main@@Base+0xb54c>
   1f120:	ldr	r0, [fp, #-8]
   1f124:	ldr	r1, [sp, #12]
   1f128:	ldr	r2, [sp, #8]
   1f12c:	mov	r3, sp
   1f130:	bl	17b1c <main@@Base+0x3ea0>
   1f134:	str	r0, [sp, #12]
   1f138:	ldr	r0, [sp]
   1f13c:	cmp	r0, #0
   1f140:	beq	1f188 <main@@Base+0xb50c>
   1f144:	ldr	r0, [fp, #-8]
   1f148:	ldr	r1, [sp, #12]
   1f14c:	ldr	r2, [sp, #8]
   1f150:	bl	17c00 <main@@Base+0x3f84>
   1f154:	str	r0, [sp, #12]
   1f158:	ldr	r0, [fp, #-8]
   1f15c:	ldr	r1, [sp, #12]
   1f160:	ldr	r2, [sp, #8]
   1f164:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1f168:	str	r0, [sp, #12]
   1f16c:	ldr	r0, [fp, #-8]
   1f170:	ldr	r1, [sp, #12]
   1f174:	ldr	r2, [sp, #8]
   1f178:	mov	r3, sp
   1f17c:	bl	1d02c <main@@Base+0x93b0>
   1f180:	str	r0, [sp, #12]
   1f184:	b	1f138 <main@@Base+0xb4bc>
   1f188:	ldr	r0, [fp, #-8]
   1f18c:	ldr	r0, [r0, #24]
   1f190:	cmp	r0, #0
   1f194:	beq	1f19c <main@@Base+0xb520>
   1f198:	b	1f1c8 <main@@Base+0xb54c>
   1f19c:	ldr	r0, [fp, #-8]
   1f1a0:	ldr	r0, [r0]
   1f1a4:	bl	26ce0 <flatcc_builder_end_table@@Base>
   1f1a8:	ldr	lr, [sp, #4]
   1f1ac:	str	r0, [lr]
   1f1b0:	cmp	r0, #0
   1f1b4:	bne	1f1bc <main@@Base+0xb540>
   1f1b8:	b	1f1c8 <main@@Base+0xb54c>
   1f1bc:	ldr	r0, [sp, #12]
   1f1c0:	str	r0, [fp, #-4]
   1f1c4:	b	1f1e0 <main@@Base+0xb564>
   1f1c8:	ldr	r0, [fp, #-8]
   1f1cc:	ldr	r1, [sp, #12]
   1f1d0:	ldr	r2, [sp, #8]
   1f1d4:	movw	r3, #33	; 0x21
   1f1d8:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1f1dc:	str	r0, [fp, #-4]
   1f1e0:	ldr	r0, [fp, #-4]
   1f1e4:	mov	sp, fp
   1f1e8:	pop	{fp, pc}
   1f1ec:	push	{r4, sl, fp, lr}
   1f1f0:	add	fp, sp, #8
   1f1f4:	sub	sp, sp, #96	; 0x60
   1f1f8:	str	r0, [fp, #-16]
   1f1fc:	str	r1, [fp, #-20]	; 0xffffffec
   1f200:	str	r2, [fp, #-24]	; 0xffffffe8
   1f204:	str	r3, [fp, #-28]	; 0xffffffe4
   1f208:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f20c:	movw	r1, #0
   1f210:	str	r1, [r0]
   1f214:	ldr	r0, [fp, #-16]
   1f218:	ldr	r0, [r0]
   1f21c:	movw	r1, #4
   1f220:	bl	26068 <flatcc_builder_start_table@@Base>
   1f224:	cmp	r0, #0
   1f228:	beq	1f230 <main@@Base+0xb5b4>
   1f22c:	b	1f6e4 <main@@Base+0xba68>
   1f230:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f234:	ldr	r1, [fp, #-16]
   1f238:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f23c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f240:	str	r0, [sp, #40]	; 0x28
   1f244:	mov	r0, r1
   1f248:	mov	r1, r2
   1f24c:	mov	r2, r3
   1f250:	movw	r3, #1
   1f254:	add	ip, sp, #44	; 0x2c
   1f258:	str	ip, [sp]
   1f25c:	bl	2e1b4 <flatcc_json_parser_prepare_unions@@Base>
   1f260:	ldr	r1, [sp, #40]	; 0x28
   1f264:	cmp	r1, r0
   1f268:	bne	1f270 <main@@Base+0xb5f4>
   1f26c:	b	1f6e4 <main@@Base+0xba68>
   1f270:	ldr	r0, [fp, #-16]
   1f274:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f278:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f27c:	sub	r3, fp, #32
   1f280:	bl	17b1c <main@@Base+0x3ea0>
   1f284:	str	r0, [fp, #-20]	; 0xffffffec
   1f288:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f28c:	cmp	r0, #0
   1f290:	beq	1f68c <main@@Base+0xba10>
   1f294:	ldr	r0, [fp, #-16]
   1f298:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f29c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f2a0:	bl	17c00 <main@@Base+0x3f84>
   1f2a4:	str	r0, [fp, #-20]	; 0xffffffec
   1f2a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f2ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f2b0:	bl	17cac <main@@Base+0x4030>
   1f2b4:	str	r1, [sp, #52]	; 0x34
   1f2b8:	str	r0, [sp, #48]	; 0x30
   1f2bc:	ldr	r0, [sp, #48]	; 0x30
   1f2c0:	ldr	r1, [sp, #52]	; 0x34
   1f2c4:	movw	r2, #28281	; 0x6e79
   1f2c8:	movt	r2, #28001	; 0x6d61
   1f2cc:	eor	r1, r1, r2
   1f2d0:	movw	r2, #31071	; 0x795f
   1f2d4:	movt	r2, #24942	; 0x616e
   1f2d8:	eor	r0, r0, r2
   1f2dc:	orr	r0, r0, r1
   1f2e0:	cmp	r0, #0
   1f2e4:	bne	1f3f8 <main@@Base+0xb77c>
   1f2e8:	b	1f2ec <main@@Base+0xb670>
   1f2ec:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f2f0:	add	r0, r0, #8
   1f2f4:	str	r0, [fp, #-20]	; 0xffffffec
   1f2f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f2fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f300:	bl	17cac <main@@Base+0x4030>
   1f304:	str	r1, [sp, #52]	; 0x34
   1f308:	str	r0, [sp, #48]	; 0x30
   1f30c:	ldr	r0, [sp, #52]	; 0x34
   1f310:	movw	r1, #28773	; 0x7065
   1f314:	movt	r1, #29817	; 0x7479
   1f318:	teq	r0, r1
   1f31c:	bne	1f3e0 <main@@Base+0xb764>
   1f320:	b	1f324 <main@@Base+0xb6a8>
   1f324:	ldr	r0, [fp, #-16]
   1f328:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f32c:	str	r1, [fp, #-48]	; 0xffffffd0
   1f330:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f334:	movw	r3, #4
   1f338:	bl	17ce4 <main@@Base+0x4068>
   1f33c:	str	r0, [fp, #-20]	; 0xffffffec
   1f340:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f344:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f348:	cmp	r0, r1
   1f34c:	beq	1f3c8 <main@@Base+0xb74c>
   1f350:	ldr	r0, [pc, #948]	; 1f70c <main@@Base+0xba90>
   1f354:	add	r0, pc, r0
   1f358:	ldr	r1, [pc, #944]	; 1f710 <main@@Base+0xba94>
   1f35c:	add	r1, pc, r1
   1f360:	ldr	r2, [pc, #940]	; 1f714 <main@@Base+0xba98>
   1f364:	add	r2, pc, r2
   1f368:	ldr	r3, [fp, #-16]
   1f36c:	ldr	ip, [fp, #-20]	; 0xffffffec
   1f370:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1f374:	ldr	r4, [sp, #44]	; 0x2c
   1f378:	str	r0, [sp, #36]	; 0x24
   1f37c:	mov	r0, r3
   1f380:	str	r1, [sp, #32]
   1f384:	mov	r1, ip
   1f388:	str	r2, [sp, #28]
   1f38c:	mov	r2, lr
   1f390:	movw	r3, #0
   1f394:	movw	ip, #3
   1f398:	uxth	ip, ip
   1f39c:	str	ip, [sp]
   1f3a0:	str	r4, [sp, #4]
   1f3a4:	ldr	ip, [sp, #36]	; 0x24
   1f3a8:	str	ip, [sp, #8]
   1f3ac:	ldr	lr, [sp, #32]
   1f3b0:	str	lr, [sp, #12]
   1f3b4:	ldr	r4, [sp, #28]
   1f3b8:	str	r4, [sp, #16]
   1f3bc:	bl	2edfc <flatcc_json_parser_union_type_vector@@Base>
   1f3c0:	str	r0, [fp, #-20]	; 0xffffffec
   1f3c4:	b	1f3dc <main@@Base+0xb760>
   1f3c8:	ldr	r0, [fp, #-16]
   1f3cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f3d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f3d4:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1f3d8:	str	r0, [fp, #-20]	; 0xffffffec
   1f3dc:	b	1f3f4 <main@@Base+0xb778>
   1f3e0:	ldr	r0, [fp, #-16]
   1f3e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f3e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f3ec:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1f3f0:	str	r0, [fp, #-20]	; 0xffffffec
   1f3f4:	b	1f670 <main@@Base+0xb9f4>
   1f3f8:	ldr	r0, [sp, #48]	; 0x30
   1f3fc:	ldr	r1, [sp, #52]	; 0x34
   1f400:	movw	r2, #24942	; 0x616e
   1f404:	movt	r2, #109	; 0x6d
   1f408:	eor	r2, r2, r1, lsr #8
   1f40c:	lsr	r0, r0, #8
   1f410:	orr	r0, r0, r1, lsl #24
   1f414:	movw	r1, #28281	; 0x6e79
   1f418:	movt	r1, #31073	; 0x7961
   1f41c:	eor	r0, r0, r1
   1f420:	orr	r0, r0, r2
   1f424:	cmp	r0, #0
   1f428:	bne	1f4b4 <main@@Base+0xb838>
   1f42c:	b	1f430 <main@@Base+0xb7b4>
   1f430:	ldr	r0, [fp, #-16]
   1f434:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f438:	str	r1, [fp, #-48]	; 0xffffffd0
   1f43c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f440:	movw	r3, #7
   1f444:	bl	17ce4 <main@@Base+0x4068>
   1f448:	str	r0, [fp, #-20]	; 0xffffffec
   1f44c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f450:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f454:	cmp	r0, r1
   1f458:	beq	1f4ac <main@@Base+0xb830>
   1f45c:	ldr	r0, [pc, #676]	; 1f708 <main@@Base+0xba8c>
   1f460:	add	r0, pc, r0
   1f464:	ldr	r1, [fp, #-16]
   1f468:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f46c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f470:	ldr	ip, [sp, #44]	; 0x2c
   1f474:	str	r0, [sp, #24]
   1f478:	mov	r0, r1
   1f47c:	mov	r1, r2
   1f480:	mov	r2, r3
   1f484:	movw	r3, #0
   1f488:	movw	lr, #3
   1f48c:	uxth	lr, lr
   1f490:	str	lr, [sp]
   1f494:	str	ip, [sp, #4]
   1f498:	ldr	ip, [sp, #24]
   1f49c:	str	ip, [sp, #8]
   1f4a0:	bl	2ea70 <flatcc_json_parser_union_vector@@Base>
   1f4a4:	str	r0, [fp, #-20]	; 0xffffffec
   1f4a8:	b	1f4b0 <main@@Base+0xb834>
   1f4ac:	b	1f4bc <main@@Base+0xb840>
   1f4b0:	b	1f4b8 <main@@Base+0xb83c>
   1f4b4:	b	1f4bc <main@@Base+0xb840>
   1f4b8:	b	1f66c <main@@Base+0xb9f0>
   1f4bc:	ldrh	r0, [sp, #50]	; 0x32
   1f4c0:	ldr	r1, [sp, #52]	; 0x34
   1f4c4:	movw	r2, #28786	; 0x7072
   1f4c8:	eor	r2, r2, r1, lsr #16
   1f4cc:	orr	r0, r0, r1, lsl #16
   1f4d0:	movw	r1, #27000	; 0x6978
   1f4d4:	movt	r1, #25958	; 0x6566
   1f4d8:	eor	r0, r0, r1
   1f4dc:	orr	r0, r0, r2
   1f4e0:	cmp	r0, #0
   1f4e4:	bne	1f588 <main@@Base+0xb90c>
   1f4e8:	b	1f4ec <main@@Base+0xb870>
   1f4ec:	ldr	r0, [fp, #-16]
   1f4f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f4f4:	str	r1, [fp, #-48]	; 0xffffffd0
   1f4f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f4fc:	movw	r3, #6
   1f500:	bl	17ce4 <main@@Base+0x4068>
   1f504:	str	r0, [fp, #-20]	; 0xffffffec
   1f508:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f50c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f510:	cmp	r0, r1
   1f514:	beq	1f570 <main@@Base+0xb8f4>
   1f518:	ldr	r0, [fp, #-16]
   1f51c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f520:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f524:	sub	r3, fp, #40	; 0x28
   1f528:	bl	1f7a8 <main@@Base+0xbb2c>
   1f52c:	str	r0, [fp, #-20]	; 0xffffffec
   1f530:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f534:	cmp	r0, #0
   1f538:	beq	1f55c <main@@Base+0xb8e0>
   1f53c:	ldr	r0, [fp, #-16]
   1f540:	ldr	r0, [r0]
   1f544:	movw	r1, #0
   1f548:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   1f54c:	str	r0, [fp, #-44]	; 0xffffffd4
   1f550:	movw	r1, #0
   1f554:	cmp	r0, r1
   1f558:	bne	1f560 <main@@Base+0xb8e4>
   1f55c:	b	1f6e4 <main@@Base+0xba68>
   1f560:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f564:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1f568:	str	r0, [r1]
   1f56c:	b	1f584 <main@@Base+0xb908>
   1f570:	ldr	r0, [fp, #-16]
   1f574:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f578:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f57c:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1f580:	str	r0, [fp, #-20]	; 0xffffffec
   1f584:	b	1f668 <main@@Base+0xb9ec>
   1f588:	ldr	r0, [sp, #48]	; 0x30
   1f58c:	ldr	r1, [sp, #52]	; 0x34
   1f590:	and	r0, r0, #-16777216	; 0xff000000
   1f594:	movw	r2, #30313	; 0x7669
   1f598:	movt	r2, #28015	; 0x6d6f
   1f59c:	eor	r1, r1, r2
   1f5a0:	eor	r0, r0, #1694498816	; 0x65000000
   1f5a4:	orr	r0, r0, r1
   1f5a8:	cmp	r0, #0
   1f5ac:	bne	1f650 <main@@Base+0xb9d4>
   1f5b0:	b	1f5b4 <main@@Base+0xb938>
   1f5b4:	ldr	r0, [fp, #-16]
   1f5b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f5bc:	str	r1, [fp, #-48]	; 0xffffffd0
   1f5c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f5c4:	movw	r3, #5
   1f5c8:	bl	17ce4 <main@@Base+0x4068>
   1f5cc:	str	r0, [fp, #-20]	; 0xffffffec
   1f5d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f5d4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f5d8:	cmp	r0, r1
   1f5dc:	beq	1f638 <main@@Base+0xb9bc>
   1f5e0:	ldr	r0, [fp, #-16]
   1f5e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f5e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f5ec:	sub	r3, fp, #40	; 0x28
   1f5f0:	bl	1fbec <main@@Base+0xbf70>
   1f5f4:	str	r0, [fp, #-20]	; 0xffffffec
   1f5f8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f5fc:	cmp	r0, #0
   1f600:	beq	1f624 <main@@Base+0xb9a8>
   1f604:	ldr	r0, [fp, #-16]
   1f608:	ldr	r0, [r0]
   1f60c:	movw	r1, #1
   1f610:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   1f614:	str	r0, [fp, #-44]	; 0xffffffd4
   1f618:	movw	r1, #0
   1f61c:	cmp	r0, r1
   1f620:	bne	1f628 <main@@Base+0xb9ac>
   1f624:	b	1f6e4 <main@@Base+0xba68>
   1f628:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1f62c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1f630:	str	r0, [r1]
   1f634:	b	1f64c <main@@Base+0xb9d0>
   1f638:	ldr	r0, [fp, #-16]
   1f63c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f640:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f644:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1f648:	str	r0, [fp, #-20]	; 0xffffffec
   1f64c:	b	1f664 <main@@Base+0xb9e8>
   1f650:	ldr	r0, [fp, #-16]
   1f654:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f658:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f65c:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1f660:	str	r0, [fp, #-20]	; 0xffffffec
   1f664:	b	1f668 <main@@Base+0xb9ec>
   1f668:	b	1f66c <main@@Base+0xb9f0>
   1f66c:	b	1f670 <main@@Base+0xb9f4>
   1f670:	ldr	r0, [fp, #-16]
   1f674:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f678:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f67c:	sub	r3, fp, #32
   1f680:	bl	1d02c <main@@Base+0x93b0>
   1f684:	str	r0, [fp, #-20]	; 0xffffffec
   1f688:	b	1f288 <main@@Base+0xb60c>
   1f68c:	ldr	r0, [fp, #-16]
   1f690:	ldr	r0, [r0, #24]
   1f694:	cmp	r0, #0
   1f698:	beq	1f6a0 <main@@Base+0xba24>
   1f69c:	b	1f6e4 <main@@Base+0xba68>
   1f6a0:	ldr	r0, [fp, #-16]
   1f6a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f6a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f6ac:	ldr	r3, [sp, #44]	; 0x2c
   1f6b0:	bl	2e25c <flatcc_json_parser_finalize_unions@@Base>
   1f6b4:	str	r0, [fp, #-20]	; 0xffffffec
   1f6b8:	ldr	r0, [fp, #-16]
   1f6bc:	ldr	r0, [r0]
   1f6c0:	bl	26ce0 <flatcc_builder_end_table@@Base>
   1f6c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f6c8:	str	r0, [r1]
   1f6cc:	cmp	r0, #0
   1f6d0:	bne	1f6d8 <main@@Base+0xba5c>
   1f6d4:	b	1f6e4 <main@@Base+0xba68>
   1f6d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f6dc:	str	r0, [fp, #-12]
   1f6e0:	b	1f6fc <main@@Base+0xba80>
   1f6e4:	ldr	r0, [fp, #-16]
   1f6e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f6ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f6f0:	movw	r3, #33	; 0x21
   1f6f4:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1f6f8:	str	r0, [fp, #-12]
   1f6fc:	ldr	r0, [fp, #-12]
   1f700:	sub	sp, fp, #8
   1f704:	pop	{r4, sl, fp, pc}
   1f708:			; <UNDEFINED> instruction: 0xffffb4e0
   1f70c:	andeq	r4, r2, r0, ror #29
   1f710:			; <UNDEFINED> instruction: 0xffffb5e4
   1f714:	andeq	r0, r0, ip, lsr #7
   1f718:	sub	sp, sp, #12
   1f71c:	strb	r0, [sp, #7]
   1f720:	ldrb	r0, [sp, #7]
   1f724:	mov	r1, r0
   1f728:	cmp	r0, #4
   1f72c:	str	r1, [sp]
   1f730:	bhi	1f794 <main@@Base+0xbb18>
   1f734:	add	r0, pc, #8
   1f738:	ldr	r1, [sp]
   1f73c:	ldr	r2, [r0, r1, lsl #2]
   1f740:	add	pc, r0, r2
   1f744:	andeq	r0, r0, r4, lsl r0
   1f748:	andeq	r0, r0, r0, lsr #32
   1f74c:	andeq	r0, r0, ip, lsr #32
   1f750:	andeq	r0, r0, r8, lsr r0
   1f754:	andeq	r0, r0, r4, asr #32
   1f758:	movw	r0, #1
   1f75c:	str	r0, [sp, #8]
   1f760:	b	1f79c <main@@Base+0xbb20>
   1f764:	movw	r0, #1
   1f768:	str	r0, [sp, #8]
   1f76c:	b	1f79c <main@@Base+0xbb20>
   1f770:	movw	r0, #1
   1f774:	str	r0, [sp, #8]
   1f778:	b	1f79c <main@@Base+0xbb20>
   1f77c:	movw	r0, #1
   1f780:	str	r0, [sp, #8]
   1f784:	b	1f79c <main@@Base+0xbb20>
   1f788:	movw	r0, #1
   1f78c:	str	r0, [sp, #8]
   1f790:	b	1f79c <main@@Base+0xbb20>
   1f794:	movw	r0, #0
   1f798:	str	r0, [sp, #8]
   1f79c:	ldr	r0, [sp, #8]
   1f7a0:	add	sp, sp, #12
   1f7a4:	bx	lr
   1f7a8:	push	{fp, lr}
   1f7ac:	mov	fp, sp
   1f7b0:	sub	sp, sp, #48	; 0x30
   1f7b4:	str	r0, [fp, #-8]
   1f7b8:	str	r1, [fp, #-12]
   1f7bc:	str	r2, [fp, #-16]
   1f7c0:	str	r3, [fp, #-20]	; 0xffffffec
   1f7c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f7c8:	movw	r1, #0
   1f7cc:	str	r1, [r0]
   1f7d0:	ldr	r0, [fp, #-8]
   1f7d4:	ldr	r0, [r0]
   1f7d8:	movw	r1, #3
   1f7dc:	bl	26068 <flatcc_builder_start_table@@Base>
   1f7e0:	cmp	r0, #0
   1f7e4:	beq	1f7ec <main@@Base+0xbb70>
   1f7e8:	b	1fbc8 <main@@Base+0xbf4c>
   1f7ec:	ldr	r0, [fp, #-8]
   1f7f0:	ldr	r1, [fp, #-12]
   1f7f4:	ldr	r2, [fp, #-16]
   1f7f8:	add	r3, sp, #24
   1f7fc:	bl	17b1c <main@@Base+0x3ea0>
   1f800:	str	r0, [fp, #-12]
   1f804:	ldr	r0, [sp, #24]
   1f808:	cmp	r0, #0
   1f80c:	beq	1fb88 <main@@Base+0xbf0c>
   1f810:	ldr	r0, [fp, #-8]
   1f814:	ldr	r1, [fp, #-12]
   1f818:	ldr	r2, [fp, #-16]
   1f81c:	bl	17c00 <main@@Base+0x3f84>
   1f820:	str	r0, [fp, #-12]
   1f824:	ldr	r0, [fp, #-12]
   1f828:	ldr	r1, [fp, #-16]
   1f82c:	bl	17cac <main@@Base+0x4030>
   1f830:	str	r1, [sp, #4]
   1f834:	str	r0, [sp]
   1f838:	ldr	r0, [sp]
   1f83c:	ldr	r1, [sp, #4]
   1f840:	movw	r2, #29556	; 0x7374
   1f844:	movt	r2, #29797	; 0x7465
   1f848:	eor	r1, r1, r2
   1f84c:	movw	r2, #28526	; 0x6f6e
   1f850:	movt	r2, #27251	; 0x6a73
   1f854:	eor	r0, r0, r2
   1f858:	orr	r0, r0, r1
   1f85c:	cmp	r0, #0
   1f860:	bne	1fb58 <main@@Base+0xbedc>
   1f864:	b	1f868 <main@@Base+0xbbec>
   1f868:	ldr	r0, [fp, #-12]
   1f86c:	add	r0, r0, #8
   1f870:	str	r0, [fp, #-12]
   1f874:	ldr	r0, [fp, #-12]
   1f878:	ldr	r1, [fp, #-16]
   1f87c:	bl	17cac <main@@Base+0x4030>
   1f880:	str	r1, [sp, #4]
   1f884:	str	r0, [sp]
   1f888:	ldr	r0, [sp]
   1f88c:	ldr	r1, [sp, #4]
   1f890:	movw	lr, #25958	; 0x6566
   1f894:	movt	lr, #28786	; 0x7072
   1f898:	eor	r1, r1, lr
   1f89c:	movw	lr, #28769	; 0x7061
   1f8a0:	movt	lr, #27000	; 0x6978
   1f8a4:	eor	r0, r0, lr
   1f8a8:	orr	r0, r0, r1
   1f8ac:	cmp	r0, #0
   1f8b0:	bne	1fb40 <main@@Base+0xbec4>
   1f8b4:	b	1f8b8 <main@@Base+0xbc3c>
   1f8b8:	ldr	r0, [fp, #-12]
   1f8bc:	add	r0, r0, #8
   1f8c0:	str	r0, [fp, #-12]
   1f8c4:	ldr	r0, [fp, #-12]
   1f8c8:	ldr	r1, [fp, #-16]
   1f8cc:	bl	17cac <main@@Base+0x4030>
   1f8d0:	str	r1, [sp, #4]
   1f8d4:	str	r0, [sp]
   1f8d8:	ldrh	r0, [sp, #2]
   1f8dc:	ldr	r1, [sp, #4]
   1f8e0:	movw	lr, #29299	; 0x7273
   1f8e4:	eor	lr, lr, r1, lsr #16
   1f8e8:	orr	r0, r0, r1, lsl #16
   1f8ec:	movw	r1, #26418	; 0x6732
   1f8f0:	movt	r1, #26990	; 0x696e
   1f8f4:	eor	r0, r0, r1
   1f8f8:	orr	r0, r0, lr
   1f8fc:	cmp	r0, #0
   1f900:	bne	1f994 <main@@Base+0xbd18>
   1f904:	b	1f908 <main@@Base+0xbc8c>
   1f908:	ldr	r0, [fp, #-8]
   1f90c:	ldr	r1, [fp, #-12]
   1f910:	str	r1, [sp, #8]
   1f914:	ldr	r2, [fp, #-16]
   1f918:	movw	r3, #6
   1f91c:	bl	17ce4 <main@@Base+0x4068>
   1f920:	str	r0, [fp, #-12]
   1f924:	ldr	r0, [sp, #8]
   1f928:	ldr	r1, [fp, #-12]
   1f92c:	cmp	r0, r1
   1f930:	beq	1f98c <main@@Base+0xbd10>
   1f934:	ldr	r0, [fp, #-8]
   1f938:	ldr	r1, [fp, #-12]
   1f93c:	ldr	r2, [fp, #-16]
   1f940:	add	r3, sp, #16
   1f944:	bl	2088c <main@@Base+0xcc10>
   1f948:	str	r0, [fp, #-12]
   1f94c:	ldr	r0, [sp, #16]
   1f950:	cmp	r0, #0
   1f954:	beq	1f978 <main@@Base+0xbcfc>
   1f958:	ldr	r0, [fp, #-8]
   1f95c:	ldr	r0, [r0]
   1f960:	movw	r1, #1
   1f964:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   1f968:	str	r0, [sp, #12]
   1f96c:	movw	r1, #0
   1f970:	cmp	r0, r1
   1f974:	bne	1f97c <main@@Base+0xbd00>
   1f978:	b	1fbc8 <main@@Base+0xbf4c>
   1f97c:	ldr	r0, [sp, #16]
   1f980:	ldr	r1, [sp, #12]
   1f984:	str	r0, [r1]
   1f988:	b	1f990 <main@@Base+0xbd14>
   1f98c:	b	1fa58 <main@@Base+0xbddc>
   1f990:	b	1fa54 <main@@Base+0xbdd8>
   1f994:	ldr	r0, [sp]
   1f998:	ldr	r1, [sp, #4]
   1f99c:	and	r0, r0, #-16777216	; 0xff000000
   1f9a0:	movw	r2, #26990	; 0x696e
   1f9a4:	movt	r2, #29299	; 0x7273
   1f9a8:	eor	r1, r1, r2
   1f9ac:	eor	r0, r0, #1728053248	; 0x67000000
   1f9b0:	orr	r0, r0, r1
   1f9b4:	cmp	r0, #0
   1f9b8:	bne	1fa4c <main@@Base+0xbdd0>
   1f9bc:	b	1f9c0 <main@@Base+0xbd44>
   1f9c0:	ldr	r0, [fp, #-8]
   1f9c4:	ldr	r1, [fp, #-12]
   1f9c8:	str	r1, [sp, #8]
   1f9cc:	ldr	r2, [fp, #-16]
   1f9d0:	movw	r3, #5
   1f9d4:	bl	17ce4 <main@@Base+0x4068>
   1f9d8:	str	r0, [fp, #-12]
   1f9dc:	ldr	r0, [sp, #8]
   1f9e0:	ldr	r1, [fp, #-12]
   1f9e4:	cmp	r0, r1
   1f9e8:	beq	1fa44 <main@@Base+0xbdc8>
   1f9ec:	ldr	r0, [fp, #-8]
   1f9f0:	ldr	r1, [fp, #-12]
   1f9f4:	ldr	r2, [fp, #-16]
   1f9f8:	add	r3, sp, #16
   1f9fc:	bl	20cf0 <main@@Base+0xd074>
   1fa00:	str	r0, [fp, #-12]
   1fa04:	ldr	r0, [sp, #16]
   1fa08:	cmp	r0, #0
   1fa0c:	beq	1fa30 <main@@Base+0xbdb4>
   1fa10:	ldr	r0, [fp, #-8]
   1fa14:	ldr	r0, [r0]
   1fa18:	movw	r1, #0
   1fa1c:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   1fa20:	str	r0, [sp, #12]
   1fa24:	movw	r1, #0
   1fa28:	cmp	r0, r1
   1fa2c:	bne	1fa34 <main@@Base+0xbdb8>
   1fa30:	b	1fbc8 <main@@Base+0xbf4c>
   1fa34:	ldr	r0, [sp, #16]
   1fa38:	ldr	r1, [sp, #12]
   1fa3c:	str	r0, [r1]
   1fa40:	b	1fa48 <main@@Base+0xbdcc>
   1fa44:	b	1fa58 <main@@Base+0xbddc>
   1fa48:	b	1fa50 <main@@Base+0xbdd4>
   1fa4c:	b	1fa58 <main@@Base+0xbddc>
   1fa50:	b	1fa54 <main@@Base+0xbdd8>
   1fa54:	b	1fb3c <main@@Base+0xbec0>
   1fa58:	ldrh	r0, [sp, #2]
   1fa5c:	ldr	r1, [sp, #4]
   1fa60:	movw	r2, #29299	; 0x7273
   1fa64:	eor	r2, r2, r1, lsr #16
   1fa68:	orr	r0, r0, r1, lsl #16
   1fa6c:	movw	r1, #26419	; 0x6733
   1fa70:	movt	r1, #26990	; 0x696e
   1fa74:	eor	r0, r0, r1
   1fa78:	orr	r0, r0, r2
   1fa7c:	cmp	r0, #0
   1fa80:	bne	1fb24 <main@@Base+0xbea8>
   1fa84:	b	1fa88 <main@@Base+0xbe0c>
   1fa88:	ldr	r0, [fp, #-8]
   1fa8c:	ldr	r1, [fp, #-12]
   1fa90:	str	r1, [sp, #8]
   1fa94:	ldr	r2, [fp, #-16]
   1fa98:	movw	r3, #6
   1fa9c:	bl	17ce4 <main@@Base+0x4068>
   1faa0:	str	r0, [fp, #-12]
   1faa4:	ldr	r0, [sp, #8]
   1faa8:	ldr	r1, [fp, #-12]
   1faac:	cmp	r0, r1
   1fab0:	beq	1fb0c <main@@Base+0xbe90>
   1fab4:	ldr	r0, [fp, #-8]
   1fab8:	ldr	r1, [fp, #-12]
   1fabc:	ldr	r2, [fp, #-16]
   1fac0:	add	r3, sp, #16
   1fac4:	bl	21928 <main@@Base+0xdcac>
   1fac8:	str	r0, [fp, #-12]
   1facc:	ldr	r0, [sp, #16]
   1fad0:	cmp	r0, #0
   1fad4:	beq	1faf8 <main@@Base+0xbe7c>
   1fad8:	ldr	r0, [fp, #-8]
   1fadc:	ldr	r0, [r0]
   1fae0:	movw	r1, #2
   1fae4:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   1fae8:	str	r0, [sp, #12]
   1faec:	movw	r1, #0
   1faf0:	cmp	r0, r1
   1faf4:	bne	1fafc <main@@Base+0xbe80>
   1faf8:	b	1fbc8 <main@@Base+0xbf4c>
   1fafc:	ldr	r0, [sp, #16]
   1fb00:	ldr	r1, [sp, #12]
   1fb04:	str	r0, [r1]
   1fb08:	b	1fb20 <main@@Base+0xbea4>
   1fb0c:	ldr	r0, [fp, #-8]
   1fb10:	ldr	r1, [fp, #-12]
   1fb14:	ldr	r2, [fp, #-16]
   1fb18:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1fb1c:	str	r0, [fp, #-12]
   1fb20:	b	1fb38 <main@@Base+0xbebc>
   1fb24:	ldr	r0, [fp, #-8]
   1fb28:	ldr	r1, [fp, #-12]
   1fb2c:	ldr	r2, [fp, #-16]
   1fb30:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1fb34:	str	r0, [fp, #-12]
   1fb38:	b	1fb3c <main@@Base+0xbec0>
   1fb3c:	b	1fb54 <main@@Base+0xbed8>
   1fb40:	ldr	r0, [fp, #-8]
   1fb44:	ldr	r1, [fp, #-12]
   1fb48:	ldr	r2, [fp, #-16]
   1fb4c:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1fb50:	str	r0, [fp, #-12]
   1fb54:	b	1fb6c <main@@Base+0xbef0>
   1fb58:	ldr	r0, [fp, #-8]
   1fb5c:	ldr	r1, [fp, #-12]
   1fb60:	ldr	r2, [fp, #-16]
   1fb64:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1fb68:	str	r0, [fp, #-12]
   1fb6c:	ldr	r0, [fp, #-8]
   1fb70:	ldr	r1, [fp, #-12]
   1fb74:	ldr	r2, [fp, #-16]
   1fb78:	add	r3, sp, #24
   1fb7c:	bl	1d02c <main@@Base+0x93b0>
   1fb80:	str	r0, [fp, #-12]
   1fb84:	b	1f804 <main@@Base+0xbb88>
   1fb88:	ldr	r0, [fp, #-8]
   1fb8c:	ldr	r0, [r0, #24]
   1fb90:	cmp	r0, #0
   1fb94:	beq	1fb9c <main@@Base+0xbf20>
   1fb98:	b	1fbc8 <main@@Base+0xbf4c>
   1fb9c:	ldr	r0, [fp, #-8]
   1fba0:	ldr	r0, [r0]
   1fba4:	bl	26ce0 <flatcc_builder_end_table@@Base>
   1fba8:	ldr	lr, [fp, #-20]	; 0xffffffec
   1fbac:	str	r0, [lr]
   1fbb0:	cmp	r0, #0
   1fbb4:	bne	1fbbc <main@@Base+0xbf40>
   1fbb8:	b	1fbc8 <main@@Base+0xbf4c>
   1fbbc:	ldr	r0, [fp, #-12]
   1fbc0:	str	r0, [fp, #-4]
   1fbc4:	b	1fbe0 <main@@Base+0xbf64>
   1fbc8:	ldr	r0, [fp, #-8]
   1fbcc:	ldr	r1, [fp, #-12]
   1fbd0:	ldr	r2, [fp, #-16]
   1fbd4:	movw	r3, #33	; 0x21
   1fbd8:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   1fbdc:	str	r0, [fp, #-4]
   1fbe0:	ldr	r0, [fp, #-4]
   1fbe4:	mov	sp, fp
   1fbe8:	pop	{fp, pc}
   1fbec:	push	{r4, sl, fp, lr}
   1fbf0:	add	fp, sp, #8
   1fbf4:	sub	sp, sp, #160	; 0xa0
   1fbf8:	str	r0, [fp, #-16]
   1fbfc:	str	r1, [fp, #-20]	; 0xffffffec
   1fc00:	str	r2, [fp, #-24]	; 0xffffffe8
   1fc04:	str	r3, [fp, #-28]	; 0xffffffe4
   1fc08:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fc0c:	movw	r1, #0
   1fc10:	str	r1, [r0]
   1fc14:	ldr	r0, [fp, #-16]
   1fc18:	ldr	r0, [r0]
   1fc1c:	movw	r1, #10
   1fc20:	bl	26068 <flatcc_builder_start_table@@Base>
   1fc24:	cmp	r0, #0
   1fc28:	beq	1fc30 <main@@Base+0xbfb4>
   1fc2c:	b	20828 <main@@Base+0xcbac>
   1fc30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1fc34:	ldr	r1, [fp, #-16]
   1fc38:	ldr	r2, [fp, #-20]	; 0xffffffec
   1fc3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fc40:	str	r0, [fp, #-64]	; 0xffffffc0
   1fc44:	mov	r0, r1
   1fc48:	mov	r1, r2
   1fc4c:	mov	r2, r3
   1fc50:	movw	r3, #5
   1fc54:	sub	ip, fp, #60	; 0x3c
   1fc58:	str	ip, [sp]
   1fc5c:	bl	2e1b4 <flatcc_json_parser_prepare_unions@@Base>
   1fc60:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1fc64:	cmp	r1, r0
   1fc68:	bne	1fc70 <main@@Base+0xbff4>
   1fc6c:	b	20828 <main@@Base+0xcbac>
   1fc70:	ldr	r0, [fp, #-16]
   1fc74:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fc78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fc7c:	sub	r3, fp, #32
   1fc80:	bl	17b1c <main@@Base+0x3ea0>
   1fc84:	str	r0, [fp, #-20]	; 0xffffffec
   1fc88:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fc8c:	cmp	r0, #0
   1fc90:	beq	207d0 <main@@Base+0xcb54>
   1fc94:	ldr	r0, [fp, #-16]
   1fc98:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fc9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fca0:	bl	17c00 <main@@Base+0x3f84>
   1fca4:	str	r0, [fp, #-20]	; 0xffffffec
   1fca8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fcac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fcb0:	bl	17cac <main@@Base+0x4030>
   1fcb4:	str	r1, [fp, #-52]	; 0xffffffcc
   1fcb8:	str	r0, [fp, #-56]	; 0xffffffc8
   1fcbc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1fcc0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1fcc4:	movw	r2, #29796	; 0x7464
   1fcc8:	movt	r2, #24931	; 0x6163
   1fccc:	subs	r0, r2, r0
   1fcd0:	movw	r2, #24946	; 0x6172
   1fcd4:	movt	r2, #25448	; 0x6368
   1fcd8:	sbcs	r1, r2, r1
   1fcdc:	str	r0, [fp, #-68]	; 0xffffffbc
   1fce0:	str	r1, [fp, #-72]	; 0xffffffb8
   1fce4:	bcc	200f4 <main@@Base+0xc478>
   1fce8:	b	1fcec <main@@Base+0xc070>
   1fcec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1fcf0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1fcf4:	movw	r2, #29793	; 0x7461
   1fcf8:	movt	r2, #24942	; 0x616e
   1fcfc:	eor	r1, r1, r2
   1fd00:	movw	r2, #28265	; 0x6e69
   1fd04:	movt	r2, #26479	; 0x676f
   1fd08:	eor	r0, r0, r2
   1fd0c:	orr	r0, r0, r1
   1fd10:	cmp	r0, #0
   1fd14:	bne	1fee8 <main@@Base+0xc26c>
   1fd18:	b	1fd1c <main@@Base+0xc0a0>
   1fd1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fd20:	add	r0, r0, #8
   1fd24:	str	r0, [fp, #-20]	; 0xffffffec
   1fd28:	ldr	r0, [fp, #-20]	; 0xffffffec
   1fd2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fd30:	bl	17cac <main@@Base+0x4030>
   1fd34:	str	r1, [fp, #-52]	; 0xffffffcc
   1fd38:	str	r0, [fp, #-56]	; 0xffffffc8
   1fd3c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1fd40:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1fd44:	movw	lr, #29791	; 0x745f
   1fd48:	movt	lr, #115	; 0x73
   1fd4c:	eor	lr, lr, r1, lsr #8
   1fd50:	lsr	r0, r0, #8
   1fd54:	orr	r0, r0, r1, lsl #24
   1fd58:	movw	r1, #28773	; 0x7065
   1fd5c:	movt	r1, #29817	; 0x7479
   1fd60:	eor	r0, r0, r1
   1fd64:	orr	r0, r0, lr
   1fd68:	cmp	r0, #0
   1fd6c:	bne	1fe1c <main@@Base+0xc1a0>
   1fd70:	b	1fd74 <main@@Base+0xc0f8>
   1fd74:	ldr	r0, [fp, #-16]
   1fd78:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fd7c:	str	r1, [fp, #-48]	; 0xffffffd0
   1fd80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fd84:	movw	r3, #7
   1fd88:	bl	17ce4 <main@@Base+0x4068>
   1fd8c:	str	r0, [fp, #-20]	; 0xffffffec
   1fd90:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1fd94:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fd98:	cmp	r0, r1
   1fd9c:	beq	1fe04 <main@@Base+0xc188>
   1fda0:	ldr	r0, [pc, #2780]	; 20884 <main@@Base+0xcc08>
   1fda4:	add	r0, pc, r0
   1fda8:	ldr	r1, [pc, #2776]	; 20888 <main@@Base+0xcc0c>
   1fdac:	add	r1, pc, r1
   1fdb0:	ldr	r2, [fp, #-16]
   1fdb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fdb8:	ldr	ip, [fp, #-24]	; 0xffffffe8
   1fdbc:	ldr	lr, [fp, #-60]	; 0xffffffc4
   1fdc0:	str	r0, [fp, #-76]	; 0xffffffb4
   1fdc4:	mov	r0, r2
   1fdc8:	str	r1, [fp, #-80]	; 0xffffffb0
   1fdcc:	mov	r1, r3
   1fdd0:	mov	r2, ip
   1fdd4:	movw	r3, #1
   1fdd8:	movw	ip, #3
   1fddc:	uxth	ip, ip
   1fde0:	str	ip, [sp]
   1fde4:	str	lr, [sp, #4]
   1fde8:	ldr	ip, [fp, #-76]	; 0xffffffb4
   1fdec:	str	ip, [sp, #8]
   1fdf0:	ldr	lr, [fp, #-80]	; 0xffffffb0
   1fdf4:	str	lr, [sp, #12]
   1fdf8:	bl	2e4c4 <flatcc_json_parser_union_type@@Base>
   1fdfc:	str	r0, [fp, #-20]	; 0xffffffec
   1fe00:	b	1fe18 <main@@Base+0xc19c>
   1fe04:	ldr	r0, [fp, #-16]
   1fe08:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fe0c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fe10:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1fe14:	str	r0, [fp, #-20]	; 0xffffffec
   1fe18:	b	1fee4 <main@@Base+0xc268>
   1fe1c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1fe20:	bfc	r0, #0, #16
   1fe24:	movw	r1, #0
   1fe28:	movt	r1, #29556	; 0x7374
   1fe2c:	teq	r0, r1
   1fe30:	bne	1fecc <main@@Base+0xc250>
   1fe34:	b	1fe38 <main@@Base+0xc1bc>
   1fe38:	ldr	r0, [fp, #-16]
   1fe3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fe40:	str	r1, [fp, #-48]	; 0xffffffd0
   1fe44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fe48:	movw	r3, #2
   1fe4c:	bl	17ce4 <main@@Base+0x4068>
   1fe50:	str	r0, [fp, #-20]	; 0xffffffec
   1fe54:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1fe58:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fe5c:	cmp	r0, r1
   1fe60:	beq	1feb4 <main@@Base+0xc238>
   1fe64:	ldr	r0, [pc, #2580]	; 20880 <main@@Base+0xcc04>
   1fe68:	add	r0, pc, r0
   1fe6c:	ldr	r1, [fp, #-16]
   1fe70:	ldr	r2, [fp, #-20]	; 0xffffffec
   1fe74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fe78:	ldr	ip, [fp, #-60]	; 0xffffffc4
   1fe7c:	str	r0, [sp, #84]	; 0x54
   1fe80:	mov	r0, r1
   1fe84:	mov	r1, r2
   1fe88:	mov	r2, r3
   1fe8c:	movw	r3, #1
   1fe90:	movw	lr, #3
   1fe94:	uxth	lr, lr
   1fe98:	str	lr, [sp]
   1fe9c:	str	ip, [sp, #4]
   1fea0:	ldr	ip, [sp, #84]	; 0x54
   1fea4:	str	ip, [sp, #8]
   1fea8:	bl	2e2d8 <flatcc_json_parser_union@@Base>
   1feac:	str	r0, [fp, #-20]	; 0xffffffec
   1feb0:	b	1fec8 <main@@Base+0xc24c>
   1feb4:	ldr	r0, [fp, #-16]
   1feb8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1febc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fec0:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1fec4:	str	r0, [fp, #-20]	; 0xffffffec
   1fec8:	b	1fee0 <main@@Base+0xc264>
   1fecc:	ldr	r0, [fp, #-16]
   1fed0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1fed4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fed8:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1fedc:	str	r0, [fp, #-20]	; 0xffffffec
   1fee0:	b	1fee4 <main@@Base+0xc268>
   1fee4:	b	200f0 <main@@Base+0xc474>
   1fee8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1feec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1fef0:	movw	r2, #28005	; 0x6d65
   1fef4:	movt	r2, #25441	; 0x6361
   1fef8:	eor	r1, r1, r2
   1fefc:	movw	r2, #29817	; 0x7479
   1ff00:	movt	r2, #28511	; 0x6f5f
   1ff04:	eor	r0, r0, r2
   1ff08:	orr	r0, r0, r1
   1ff0c:	cmp	r0, #0
   1ff10:	bne	20014 <main@@Base+0xc398>
   1ff14:	b	1ff18 <main@@Base+0xc29c>
   1ff18:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ff1c:	add	r0, r0, #8
   1ff20:	str	r0, [fp, #-20]	; 0xffffffec
   1ff24:	ldr	r0, [fp, #-20]	; 0xffffffec
   1ff28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ff2c:	bl	17cac <main@@Base+0x4030>
   1ff30:	str	r1, [fp, #-52]	; 0xffffffcc
   1ff34:	str	r0, [fp, #-56]	; 0xffffffc8
   1ff38:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1ff3c:	bfc	r0, #0, #16
   1ff40:	movw	r1, #0
   1ff44:	movt	r1, #28773	; 0x7065
   1ff48:	teq	r0, r1
   1ff4c:	bne	1fffc <main@@Base+0xc380>
   1ff50:	b	1ff54 <main@@Base+0xc2d8>
   1ff54:	ldr	r0, [fp, #-16]
   1ff58:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ff5c:	str	r1, [fp, #-48]	; 0xffffffd0
   1ff60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ff64:	movw	r3, #2
   1ff68:	bl	17ce4 <main@@Base+0x4068>
   1ff6c:	str	r0, [fp, #-20]	; 0xffffffec
   1ff70:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ff74:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ff78:	cmp	r0, r1
   1ff7c:	beq	1ffe4 <main@@Base+0xc368>
   1ff80:	ldr	r0, [pc, #2288]	; 20878 <main@@Base+0xcbfc>
   1ff84:	add	r0, pc, r0
   1ff88:	ldr	r1, [pc, #2284]	; 2087c <main@@Base+0xcc00>
   1ff8c:	add	r1, pc, r1
   1ff90:	ldr	r2, [fp, #-16]
   1ff94:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ff98:	ldr	ip, [fp, #-24]	; 0xffffffe8
   1ff9c:	ldr	lr, [fp, #-60]	; 0xffffffc4
   1ffa0:	str	r0, [sp, #80]	; 0x50
   1ffa4:	mov	r0, r2
   1ffa8:	str	r1, [sp, #76]	; 0x4c
   1ffac:	mov	r1, r3
   1ffb0:	mov	r2, ip
   1ffb4:	movw	r3, #3
   1ffb8:	movw	ip, #7
   1ffbc:	uxth	ip, ip
   1ffc0:	str	ip, [sp]
   1ffc4:	str	lr, [sp, #4]
   1ffc8:	ldr	ip, [sp, #80]	; 0x50
   1ffcc:	str	ip, [sp, #8]
   1ffd0:	ldr	lr, [sp, #76]	; 0x4c
   1ffd4:	str	lr, [sp, #12]
   1ffd8:	bl	2e4c4 <flatcc_json_parser_union_type@@Base>
   1ffdc:	str	r0, [fp, #-20]	; 0xffffffec
   1ffe0:	b	1fff8 <main@@Base+0xc37c>
   1ffe4:	ldr	r0, [fp, #-16]
   1ffe8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1ffec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fff0:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   1fff4:	str	r0, [fp, #-20]	; 0xffffffec
   1fff8:	b	20010 <main@@Base+0xc394>
   1fffc:	ldr	r0, [fp, #-16]
   20000:	ldr	r1, [fp, #-20]	; 0xffffffec
   20004:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20008:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   2000c:	str	r0, [fp, #-20]	; 0xffffffec
   20010:	b	200ec <main@@Base+0xc470>
   20014:	ldr	r0, [fp, #-56]	; 0xffffffc8
   20018:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2001c:	and	r0, r0, #-16777216	; 0xff000000
   20020:	movw	r2, #28005	; 0x6d65
   20024:	movt	r2, #25441	; 0x6361
   20028:	eor	r1, r1, r2
   2002c:	eor	r0, r0, #1862270976	; 0x6f000000
   20030:	orr	r0, r0, r1
   20034:	cmp	r0, #0
   20038:	bne	200d4 <main@@Base+0xc458>
   2003c:	b	20040 <main@@Base+0xc3c4>
   20040:	ldr	r0, [fp, #-16]
   20044:	ldr	r1, [fp, #-20]	; 0xffffffec
   20048:	str	r1, [fp, #-48]	; 0xffffffd0
   2004c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20050:	movw	r3, #5
   20054:	bl	17ce4 <main@@Base+0x4068>
   20058:	str	r0, [fp, #-20]	; 0xffffffec
   2005c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   20060:	ldr	r1, [fp, #-20]	; 0xffffffec
   20064:	cmp	r0, r1
   20068:	beq	200bc <main@@Base+0xc440>
   2006c:	ldr	r0, [pc, #2048]	; 20874 <main@@Base+0xcbf8>
   20070:	add	r0, pc, r0
   20074:	ldr	r1, [fp, #-16]
   20078:	ldr	r2, [fp, #-20]	; 0xffffffec
   2007c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20080:	ldr	ip, [fp, #-60]	; 0xffffffc4
   20084:	str	r0, [sp, #72]	; 0x48
   20088:	mov	r0, r1
   2008c:	mov	r1, r2
   20090:	mov	r2, r3
   20094:	movw	r3, #3
   20098:	movw	lr, #7
   2009c:	uxth	lr, lr
   200a0:	str	lr, [sp]
   200a4:	str	ip, [sp, #4]
   200a8:	ldr	ip, [sp, #72]	; 0x48
   200ac:	str	ip, [sp, #8]
   200b0:	bl	2e2d8 <flatcc_json_parser_union@@Base>
   200b4:	str	r0, [fp, #-20]	; 0xffffffec
   200b8:	b	200d0 <main@@Base+0xc454>
   200bc:	ldr	r0, [fp, #-16]
   200c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   200c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   200c8:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   200cc:	str	r0, [fp, #-20]	; 0xffffffec
   200d0:	b	200e8 <main@@Base+0xc46c>
   200d4:	ldr	r0, [fp, #-16]
   200d8:	ldr	r1, [fp, #-20]	; 0xffffffec
   200dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   200e0:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   200e4:	str	r0, [fp, #-20]	; 0xffffffec
   200e8:	b	200ec <main@@Base+0xc470>
   200ec:	b	200f0 <main@@Base+0xc474>
   200f0:	b	207b4 <main@@Base+0xcb38>
   200f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   200f8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   200fc:	movw	r2, #26720	; 0x6860
   20100:	movt	r2, #24419	; 0x5f63
   20104:	subs	r0, r2, r0
   20108:	movw	r2, #26990	; 0x696e
   2010c:	movt	r2, #28001	; 0x6d61
   20110:	sbcs	r1, r2, r1
   20114:	str	r0, [sp, #68]	; 0x44
   20118:	str	r1, [sp, #64]	; 0x40
   2011c:	bcc	2034c <main@@Base+0xc6d0>
   20120:	b	20124 <main@@Base+0xc4a8>
   20124:	ldr	r0, [fp, #-56]	; 0xffffffc8
   20128:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2012c:	movw	r2, #24946	; 0x6172
   20130:	movt	r2, #25448	; 0x6368
   20134:	eor	r1, r1, r2
   20138:	movw	r2, #29797	; 0x7465
   2013c:	movt	r2, #24931	; 0x6163
   20140:	eor	r0, r0, r2
   20144:	orr	r0, r0, r1
   20148:	cmp	r0, #0
   2014c:	bne	20334 <main@@Base+0xc6b8>
   20150:	b	20154 <main@@Base+0xc4d8>
   20154:	ldr	r0, [fp, #-20]	; 0xffffffec
   20158:	add	r0, r0, #8
   2015c:	str	r0, [fp, #-20]	; 0xffffffec
   20160:	ldr	r0, [fp, #-20]	; 0xffffffec
   20164:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20168:	bl	17cac <main@@Base+0x4030>
   2016c:	str	r1, [fp, #-52]	; 0xffffffcc
   20170:	str	r0, [fp, #-56]	; 0xffffffc8
   20174:	ldr	r0, [fp, #-56]	; 0xffffffc8
   20178:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2017c:	movw	lr, #29535	; 0x735f
   20180:	movt	lr, #114	; 0x72
   20184:	eor	lr, lr, r1, lsr #8
   20188:	lsr	r0, r0, #8
   2018c:	orr	r0, r0, r1, lsl #24
   20190:	movw	r1, #28773	; 0x7065
   20194:	movt	r1, #29817	; 0x7479
   20198:	eor	r0, r0, r1
   2019c:	orr	r0, r0, lr
   201a0:	cmp	r0, #0
   201a4:	bne	20268 <main@@Base+0xc5ec>
   201a8:	b	201ac <main@@Base+0xc530>
   201ac:	ldr	r0, [fp, #-16]
   201b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   201b4:	str	r1, [fp, #-48]	; 0xffffffd0
   201b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   201bc:	movw	r3, #7
   201c0:	bl	17ce4 <main@@Base+0x4068>
   201c4:	str	r0, [fp, #-20]	; 0xffffffec
   201c8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   201cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   201d0:	cmp	r0, r1
   201d4:	beq	20250 <main@@Base+0xc5d4>
   201d8:	ldr	r0, [pc, #1672]	; 20868 <main@@Base+0xcbec>
   201dc:	add	r0, pc, r0
   201e0:	ldr	r1, [pc, #1668]	; 2086c <main@@Base+0xcbf0>
   201e4:	add	r1, pc, r1
   201e8:	ldr	r2, [pc, #1664]	; 20870 <main@@Base+0xcbf4>
   201ec:	add	r2, pc, r2
   201f0:	ldr	r3, [fp, #-16]
   201f4:	ldr	ip, [fp, #-20]	; 0xffffffec
   201f8:	ldr	lr, [fp, #-24]	; 0xffffffe8
   201fc:	ldr	r4, [fp, #-60]	; 0xffffffc4
   20200:	str	r0, [sp, #60]	; 0x3c
   20204:	mov	r0, r3
   20208:	str	r1, [sp, #56]	; 0x38
   2020c:	mov	r1, ip
   20210:	str	r2, [sp, #52]	; 0x34
   20214:	mov	r2, lr
   20218:	movw	r3, #4
   2021c:	movw	ip, #9
   20220:	uxth	ip, ip
   20224:	str	ip, [sp]
   20228:	str	r4, [sp, #4]
   2022c:	ldr	ip, [sp, #60]	; 0x3c
   20230:	str	ip, [sp, #8]
   20234:	ldr	lr, [sp, #56]	; 0x38
   20238:	str	lr, [sp, #12]
   2023c:	ldr	r4, [sp, #52]	; 0x34
   20240:	str	r4, [sp, #16]
   20244:	bl	2edfc <flatcc_json_parser_union_type_vector@@Base>
   20248:	str	r0, [fp, #-20]	; 0xffffffec
   2024c:	b	20264 <main@@Base+0xc5e8>
   20250:	ldr	r0, [fp, #-16]
   20254:	ldr	r1, [fp, #-20]	; 0xffffffec
   20258:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2025c:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   20260:	str	r0, [fp, #-20]	; 0xffffffec
   20264:	b	20330 <main@@Base+0xc6b4>
   20268:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2026c:	bfc	r0, #0, #16
   20270:	movw	r1, #0
   20274:	movt	r1, #29299	; 0x7273
   20278:	teq	r0, r1
   2027c:	bne	20318 <main@@Base+0xc69c>
   20280:	b	20284 <main@@Base+0xc608>
   20284:	ldr	r0, [fp, #-16]
   20288:	ldr	r1, [fp, #-20]	; 0xffffffec
   2028c:	str	r1, [fp, #-48]	; 0xffffffd0
   20290:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20294:	movw	r3, #2
   20298:	bl	17ce4 <main@@Base+0x4068>
   2029c:	str	r0, [fp, #-20]	; 0xffffffec
   202a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   202a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   202a8:	cmp	r0, r1
   202ac:	beq	20300 <main@@Base+0xc684>
   202b0:	ldr	r0, [pc, #1452]	; 20864 <main@@Base+0xcbe8>
   202b4:	add	r0, pc, r0
   202b8:	ldr	r1, [fp, #-16]
   202bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   202c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   202c4:	ldr	ip, [fp, #-60]	; 0xffffffc4
   202c8:	str	r0, [sp, #48]	; 0x30
   202cc:	mov	r0, r1
   202d0:	mov	r1, r2
   202d4:	mov	r2, r3
   202d8:	movw	r3, #4
   202dc:	movw	lr, #9
   202e0:	uxth	lr, lr
   202e4:	str	lr, [sp]
   202e8:	str	ip, [sp, #4]
   202ec:	ldr	ip, [sp, #48]	; 0x30
   202f0:	str	ip, [sp, #8]
   202f4:	bl	2ea70 <flatcc_json_parser_union_vector@@Base>
   202f8:	str	r0, [fp, #-20]	; 0xffffffec
   202fc:	b	20314 <main@@Base+0xc698>
   20300:	ldr	r0, [fp, #-16]
   20304:	ldr	r1, [fp, #-20]	; 0xffffffec
   20308:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2030c:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   20310:	str	r0, [fp, #-20]	; 0xffffffec
   20314:	b	2032c <main@@Base+0xc6b0>
   20318:	ldr	r0, [fp, #-16]
   2031c:	ldr	r1, [fp, #-20]	; 0xffffffec
   20320:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20324:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   20328:	str	r0, [fp, #-20]	; 0xffffffec
   2032c:	b	20330 <main@@Base+0xc6b4>
   20330:	b	20348 <main@@Base+0xc6cc>
   20334:	ldr	r0, [fp, #-16]
   20338:	ldr	r1, [fp, #-20]	; 0xffffffec
   2033c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20340:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   20344:	str	r0, [fp, #-20]	; 0xffffffec
   20348:	b	207b0 <main@@Base+0xcb34>
   2034c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   20350:	ldr	r1, [fp, #-52]	; 0xffffffcc
   20354:	movw	r2, #26990	; 0x696e
   20358:	movt	r2, #28001	; 0x6d61
   2035c:	eor	r1, r1, r2
   20360:	movw	r2, #26721	; 0x6861
   20364:	movt	r2, #24419	; 0x5f63
   20368:	eor	r0, r0, r2
   2036c:	orr	r0, r0, r1
   20370:	cmp	r0, #0
   20374:	bne	205a8 <main@@Base+0xc92c>
   20378:	b	2037c <main@@Base+0xc700>
   2037c:	ldr	r0, [fp, #-20]	; 0xffffffec
   20380:	add	r0, r0, #8
   20384:	str	r0, [fp, #-20]	; 0xffffffec
   20388:	ldr	r0, [fp, #-20]	; 0xffffffec
   2038c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   20390:	bl	17cac <main@@Base+0x4030>
   20394:	str	r1, [fp, #-52]	; 0xffffffcc
   20398:	str	r0, [fp, #-56]	; 0xffffffc8
   2039c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   203a0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   203a4:	movw	lr, #25460	; 0x6374
   203a8:	movt	lr, #29281	; 0x7261
   203ac:	eor	r1, r1, lr
   203b0:	movw	lr, #24436	; 0x5f74
   203b4:	movt	lr, #25970	; 0x6572
   203b8:	eor	r0, r0, lr
   203bc:	orr	r0, r0, r1
   203c0:	cmp	r0, #0
   203c4:	bne	204c8 <main@@Base+0xc84c>
   203c8:	b	203cc <main@@Base+0xc750>
   203cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   203d0:	add	r0, r0, #8
   203d4:	str	r0, [fp, #-20]	; 0xffffffec
   203d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   203dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   203e0:	bl	17cac <main@@Base+0x4030>
   203e4:	str	r1, [fp, #-52]	; 0xffffffcc
   203e8:	str	r0, [fp, #-56]	; 0xffffffc8
   203ec:	ldr	r0, [fp, #-52]	; 0xffffffcc
   203f0:	bic	r0, r0, #255	; 0xff
   203f4:	movw	r1, #25856	; 0x6500
   203f8:	movt	r1, #31088	; 0x7970
   203fc:	teq	r0, r1
   20400:	bne	204b0 <main@@Base+0xc834>
   20404:	b	20408 <main@@Base+0xc78c>
   20408:	ldr	r0, [fp, #-16]
   2040c:	ldr	r1, [fp, #-20]	; 0xffffffec
   20410:	str	r1, [fp, #-48]	; 0xffffffd0
   20414:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20418:	movw	r3, #3
   2041c:	bl	17ce4 <main@@Base+0x4068>
   20420:	str	r0, [fp, #-20]	; 0xffffffec
   20424:	ldr	r0, [fp, #-48]	; 0xffffffd0
   20428:	ldr	r1, [fp, #-20]	; 0xffffffec
   2042c:	cmp	r0, r1
   20430:	beq	20498 <main@@Base+0xc81c>
   20434:	ldr	r0, [pc, #1056]	; 2085c <main@@Base+0xcbe0>
   20438:	add	r0, pc, r0
   2043c:	ldr	r1, [pc, #1052]	; 20860 <main@@Base+0xcbe4>
   20440:	add	r1, pc, r1
   20444:	ldr	r2, [fp, #-16]
   20448:	ldr	r3, [fp, #-20]	; 0xffffffec
   2044c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   20450:	ldr	lr, [fp, #-60]	; 0xffffffc4
   20454:	str	r0, [sp, #44]	; 0x2c
   20458:	mov	r0, r2
   2045c:	str	r1, [sp, #40]	; 0x28
   20460:	mov	r1, r3
   20464:	mov	r2, ip
   20468:	movw	r3, #0
   2046c:	movw	ip, #1
   20470:	uxth	ip, ip
   20474:	str	ip, [sp]
   20478:	str	lr, [sp, #4]
   2047c:	ldr	ip, [sp, #44]	; 0x2c
   20480:	str	ip, [sp, #8]
   20484:	ldr	lr, [sp, #40]	; 0x28
   20488:	str	lr, [sp, #12]
   2048c:	bl	2e4c4 <flatcc_json_parser_union_type@@Base>
   20490:	str	r0, [fp, #-20]	; 0xffffffec
   20494:	b	204ac <main@@Base+0xc830>
   20498:	ldr	r0, [fp, #-16]
   2049c:	ldr	r1, [fp, #-20]	; 0xffffffec
   204a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   204a4:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   204a8:	str	r0, [fp, #-20]	; 0xffffffec
   204ac:	b	204c4 <main@@Base+0xc848>
   204b0:	ldr	r0, [fp, #-16]
   204b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   204b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   204bc:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   204c0:	str	r0, [fp, #-20]	; 0xffffffec
   204c4:	b	205a4 <main@@Base+0xc928>
   204c8:	ldrh	r0, [fp, #-54]	; 0xffffffca
   204cc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   204d0:	movw	r2, #29281	; 0x7261
   204d4:	eor	r2, r2, r1, lsr #16
   204d8:	orr	r0, r0, r1, lsl #16
   204dc:	movw	r1, #25970	; 0x6572
   204e0:	movt	r1, #25460	; 0x6374
   204e4:	eor	r0, r0, r1
   204e8:	orr	r0, r0, r2
   204ec:	cmp	r0, #0
   204f0:	bne	2058c <main@@Base+0xc910>
   204f4:	b	204f8 <main@@Base+0xc87c>
   204f8:	ldr	r0, [fp, #-16]
   204fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   20500:	str	r1, [fp, #-48]	; 0xffffffd0
   20504:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20508:	movw	r3, #6
   2050c:	bl	17ce4 <main@@Base+0x4068>
   20510:	str	r0, [fp, #-20]	; 0xffffffec
   20514:	ldr	r0, [fp, #-48]	; 0xffffffd0
   20518:	ldr	r1, [fp, #-20]	; 0xffffffec
   2051c:	cmp	r0, r1
   20520:	beq	20574 <main@@Base+0xc8f8>
   20524:	ldr	r0, [pc, #812]	; 20858 <main@@Base+0xcbdc>
   20528:	add	r0, pc, r0
   2052c:	ldr	r1, [fp, #-16]
   20530:	ldr	r2, [fp, #-20]	; 0xffffffec
   20534:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20538:	ldr	ip, [fp, #-60]	; 0xffffffc4
   2053c:	str	r0, [sp, #36]	; 0x24
   20540:	mov	r0, r1
   20544:	mov	r1, r2
   20548:	mov	r2, r3
   2054c:	movw	r3, #0
   20550:	movw	lr, #1
   20554:	uxth	lr, lr
   20558:	str	lr, [sp]
   2055c:	str	ip, [sp, #4]
   20560:	ldr	ip, [sp, #36]	; 0x24
   20564:	str	ip, [sp, #8]
   20568:	bl	2e2d8 <flatcc_json_parser_union@@Base>
   2056c:	str	r0, [fp, #-20]	; 0xffffffec
   20570:	b	20588 <main@@Base+0xc90c>
   20574:	ldr	r0, [fp, #-16]
   20578:	ldr	r1, [fp, #-20]	; 0xffffffec
   2057c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20580:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   20584:	str	r0, [fp, #-20]	; 0xffffffec
   20588:	b	205a0 <main@@Base+0xc924>
   2058c:	ldr	r0, [fp, #-16]
   20590:	ldr	r1, [fp, #-20]	; 0xffffffec
   20594:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20598:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   2059c:	str	r0, [fp, #-20]	; 0xffffffec
   205a0:	b	205a4 <main@@Base+0xc928>
   205a4:	b	207ac <main@@Base+0xcb30>
   205a8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   205ac:	ldr	r1, [fp, #-52]	; 0xffffffcc
   205b0:	movw	r2, #25701	; 0x6465
   205b4:	movt	r2, #29545	; 0x7369
   205b8:	eor	r1, r1, r2
   205bc:	movw	r2, #26979	; 0x6963
   205c0:	movt	r2, #24427	; 0x5f6b
   205c4:	eor	r0, r0, r2
   205c8:	orr	r0, r0, r1
   205cc:	cmp	r0, #0
   205d0:	bne	20794 <main@@Base+0xcb18>
   205d4:	b	205d8 <main@@Base+0xc95c>
   205d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   205dc:	add	r0, r0, #8
   205e0:	str	r0, [fp, #-20]	; 0xffffffec
   205e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   205e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   205ec:	bl	17cac <main@@Base+0x4030>
   205f0:	str	r1, [fp, #-52]	; 0xffffffcc
   205f4:	str	r0, [fp, #-56]	; 0xffffffc8
   205f8:	ldrh	r0, [fp, #-54]	; 0xffffffca
   205fc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   20600:	movw	lr, #27487	; 0x6b5f
   20604:	eor	lr, lr, r1, lsr #16
   20608:	orr	r0, r0, r1, lsl #16
   2060c:	movw	r1, #28773	; 0x7065
   20610:	movt	r1, #29817	; 0x7479
   20614:	eor	r0, r0, r1
   20618:	orr	r0, r0, lr
   2061c:	cmp	r0, #0
   20620:	bne	206d0 <main@@Base+0xca54>
   20624:	b	20628 <main@@Base+0xc9ac>
   20628:	ldr	r0, [fp, #-16]
   2062c:	ldr	r1, [fp, #-20]	; 0xffffffec
   20630:	str	r1, [fp, #-48]	; 0xffffffd0
   20634:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20638:	movw	r3, #6
   2063c:	bl	17ce4 <main@@Base+0x4068>
   20640:	str	r0, [fp, #-20]	; 0xffffffec
   20644:	ldr	r0, [fp, #-48]	; 0xffffffd0
   20648:	ldr	r1, [fp, #-20]	; 0xffffffec
   2064c:	cmp	r0, r1
   20650:	beq	206b8 <main@@Base+0xca3c>
   20654:	ldr	r0, [pc, #500]	; 20850 <main@@Base+0xcbd4>
   20658:	add	r0, pc, r0
   2065c:	ldr	r1, [pc, #496]	; 20854 <main@@Base+0xcbd8>
   20660:	add	r1, pc, r1
   20664:	ldr	r2, [fp, #-16]
   20668:	ldr	r3, [fp, #-20]	; 0xffffffec
   2066c:	ldr	ip, [fp, #-24]	; 0xffffffe8
   20670:	ldr	lr, [fp, #-60]	; 0xffffffc4
   20674:	str	r0, [sp, #32]
   20678:	mov	r0, r2
   2067c:	str	r1, [sp, #28]
   20680:	mov	r1, r3
   20684:	mov	r2, ip
   20688:	movw	r3, #2
   2068c:	movw	ip, #5
   20690:	uxth	ip, ip
   20694:	str	ip, [sp]
   20698:	str	lr, [sp, #4]
   2069c:	ldr	ip, [sp, #32]
   206a0:	str	ip, [sp, #8]
   206a4:	ldr	lr, [sp, #28]
   206a8:	str	lr, [sp, #12]
   206ac:	bl	2e4c4 <flatcc_json_parser_union_type@@Base>
   206b0:	str	r0, [fp, #-20]	; 0xffffffec
   206b4:	b	206cc <main@@Base+0xca50>
   206b8:	ldr	r0, [fp, #-16]
   206bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   206c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   206c4:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   206c8:	str	r0, [fp, #-20]	; 0xffffffec
   206cc:	b	20790 <main@@Base+0xcb14>
   206d0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   206d4:	and	r0, r0, #-16777216	; 0xff000000
   206d8:	teq	r0, #1795162112	; 0x6b000000
   206dc:	bne	20778 <main@@Base+0xcafc>
   206e0:	b	206e4 <main@@Base+0xca68>
   206e4:	ldr	r0, [fp, #-16]
   206e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   206ec:	str	r1, [fp, #-48]	; 0xffffffd0
   206f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   206f4:	movw	r3, #1
   206f8:	bl	17ce4 <main@@Base+0x4068>
   206fc:	str	r0, [fp, #-20]	; 0xffffffec
   20700:	ldr	r0, [fp, #-48]	; 0xffffffd0
   20704:	ldr	r1, [fp, #-20]	; 0xffffffec
   20708:	cmp	r0, r1
   2070c:	beq	20760 <main@@Base+0xcae4>
   20710:	ldr	r0, [pc, #308]	; 2084c <main@@Base+0xcbd0>
   20714:	add	r0, pc, r0
   20718:	ldr	r1, [fp, #-16]
   2071c:	ldr	r2, [fp, #-20]	; 0xffffffec
   20720:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20724:	ldr	ip, [fp, #-60]	; 0xffffffc4
   20728:	str	r0, [sp, #24]
   2072c:	mov	r0, r1
   20730:	mov	r1, r2
   20734:	mov	r2, r3
   20738:	movw	r3, #2
   2073c:	movw	lr, #5
   20740:	uxth	lr, lr
   20744:	str	lr, [sp]
   20748:	str	ip, [sp, #4]
   2074c:	ldr	ip, [sp, #24]
   20750:	str	ip, [sp, #8]
   20754:	bl	2e2d8 <flatcc_json_parser_union@@Base>
   20758:	str	r0, [fp, #-20]	; 0xffffffec
   2075c:	b	20774 <main@@Base+0xcaf8>
   20760:	ldr	r0, [fp, #-16]
   20764:	ldr	r1, [fp, #-20]	; 0xffffffec
   20768:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2076c:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   20770:	str	r0, [fp, #-20]	; 0xffffffec
   20774:	b	2078c <main@@Base+0xcb10>
   20778:	ldr	r0, [fp, #-16]
   2077c:	ldr	r1, [fp, #-20]	; 0xffffffec
   20780:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20784:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   20788:	str	r0, [fp, #-20]	; 0xffffffec
   2078c:	b	20790 <main@@Base+0xcb14>
   20790:	b	207a8 <main@@Base+0xcb2c>
   20794:	ldr	r0, [fp, #-16]
   20798:	ldr	r1, [fp, #-20]	; 0xffffffec
   2079c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   207a0:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   207a4:	str	r0, [fp, #-20]	; 0xffffffec
   207a8:	b	207ac <main@@Base+0xcb30>
   207ac:	b	207b0 <main@@Base+0xcb34>
   207b0:	b	207b4 <main@@Base+0xcb38>
   207b4:	ldr	r0, [fp, #-16]
   207b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   207bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   207c0:	sub	r3, fp, #32
   207c4:	bl	1d02c <main@@Base+0x93b0>
   207c8:	str	r0, [fp, #-20]	; 0xffffffec
   207cc:	b	1fc88 <main@@Base+0xc00c>
   207d0:	ldr	r0, [fp, #-16]
   207d4:	ldr	r0, [r0, #24]
   207d8:	cmp	r0, #0
   207dc:	beq	207e4 <main@@Base+0xcb68>
   207e0:	b	20828 <main@@Base+0xcbac>
   207e4:	ldr	r0, [fp, #-16]
   207e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   207ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   207f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   207f4:	bl	2e25c <flatcc_json_parser_finalize_unions@@Base>
   207f8:	str	r0, [fp, #-20]	; 0xffffffec
   207fc:	ldr	r0, [fp, #-16]
   20800:	ldr	r0, [r0]
   20804:	bl	26ce0 <flatcc_builder_end_table@@Base>
   20808:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2080c:	str	r0, [r1]
   20810:	cmp	r0, #0
   20814:	bne	2081c <main@@Base+0xcba0>
   20818:	b	20828 <main@@Base+0xcbac>
   2081c:	ldr	r0, [fp, #-20]	; 0xffffffec
   20820:	str	r0, [fp, #-12]
   20824:	b	20840 <main@@Base+0xcbc4>
   20828:	ldr	r0, [fp, #-16]
   2082c:	ldr	r1, [fp, #-20]	; 0xffffffec
   20830:	ldr	r2, [fp, #-24]	; 0xffffffe8
   20834:	movw	r3, #33	; 0x21
   20838:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2083c:	str	r0, [fp, #-12]
   20840:	ldr	r0, [fp, #-12]
   20844:	sub	sp, fp, #8
   20848:	pop	{r4, sl, fp, pc}
   2084c:	andeq	r1, r0, r8, lsl r8
   20850:	andeq	r3, r2, r4, lsr #25
   20854:	andeq	r1, r0, ip, asr #17
   20858:	andeq	r1, r0, r4, lsl #20
   2085c:			; <UNDEFINED> instruction: 0x00023eb4
   20860:	andeq	r1, r0, ip, ror #21
   20864:	andeq	r1, r0, r8, ror ip
   20868:	andeq	r4, r2, r0, lsl #2
   2086c:	andeq	r1, r0, r8, asr #26
   20870:	andeq	r1, r0, ip, asr #30
   20874:			; <UNDEFINED> instruction: 0x00001ebc
   20878:	andeq	r4, r2, r8, asr #6
   2087c:	andeq	r1, r0, r0, lsr #31
   20880:	andeq	r2, r0, r4, asr #1
   20884:	andeq	r4, r2, r8, lsl r5
   20888:	andeq	r2, r0, r0, lsl #3
   2088c:	push	{fp, lr}
   20890:	mov	fp, sp
   20894:	sub	sp, sp, #64	; 0x40
   20898:	str	r0, [fp, #-8]
   2089c:	str	r1, [fp, #-12]
   208a0:	str	r2, [fp, #-16]
   208a4:	str	r3, [fp, #-20]	; 0xffffffec
   208a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   208ac:	movw	r1, #0
   208b0:	str	r1, [r0]
   208b4:	ldr	r0, [fp, #-8]
   208b8:	ldr	r0, [r0]
   208bc:	movw	r1, #2
   208c0:	bl	26068 <flatcc_builder_start_table@@Base>
   208c4:	cmp	r0, #0
   208c8:	beq	208d0 <main@@Base+0xcc54>
   208cc:	b	20cc4 <main@@Base+0xd048>
   208d0:	ldr	r0, [fp, #-8]
   208d4:	ldr	r1, [fp, #-12]
   208d8:	ldr	r2, [fp, #-16]
   208dc:	sub	r3, fp, #24
   208e0:	bl	17b1c <main@@Base+0x3ea0>
   208e4:	str	r0, [fp, #-12]
   208e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   208ec:	cmp	r0, #0
   208f0:	beq	20c84 <main@@Base+0xd008>
   208f4:	ldr	r0, [fp, #-8]
   208f8:	ldr	r1, [fp, #-12]
   208fc:	ldr	r2, [fp, #-16]
   20900:	bl	17c00 <main@@Base+0x3f84>
   20904:	str	r0, [fp, #-12]
   20908:	ldr	r0, [fp, #-12]
   2090c:	ldr	r1, [fp, #-16]
   20910:	bl	17cac <main@@Base+0x4030>
   20914:	str	r1, [sp, #20]
   20918:	str	r0, [sp, #16]
   2091c:	ldr	r0, [sp, #16]
   20920:	ldr	r1, [sp, #20]
   20924:	movw	r2, #24929	; 0x6161
   20928:	movt	r2, #24929	; 0x6161
   2092c:	eor	r1, r1, r2
   20930:	movw	r2, #25186	; 0x6262
   20934:	movt	r2, #24418	; 0x5f62
   20938:	eor	r0, r0, r2
   2093c:	orr	r0, r0, r1
   20940:	cmp	r0, #0
   20944:	bne	20c54 <main@@Base+0xcfd8>
   20948:	b	2094c <main@@Base+0xccd0>
   2094c:	ldr	r0, [fp, #-12]
   20950:	add	r0, r0, #8
   20954:	str	r0, [fp, #-12]
   20958:	ldr	r0, [fp, #-12]
   2095c:	ldr	r1, [fp, #-16]
   20960:	bl	17cac <main@@Base+0x4030>
   20964:	str	r1, [sp, #20]
   20968:	str	r0, [sp, #16]
   2096c:	ldr	r0, [sp, #16]
   20970:	ldr	r1, [sp, #20]
   20974:	movw	lr, #24435	; 0x5f73
   20978:	movt	lr, #98	; 0x62
   2097c:	eor	lr, lr, r1, lsr #8
   20980:	lsr	r0, r0, #8
   20984:	orr	r0, r0, r1, lsl #24
   20988:	movw	r1, #28787	; 0x7073
   2098c:	movt	r1, #29797	; 0x7465
   20990:	eor	r0, r0, r1
   20994:	orr	r0, r0, lr
   20998:	cmp	r0, #0
   2099c:	bne	20ae0 <main@@Base+0xce64>
   209a0:	b	209a4 <main@@Base+0xcd28>
   209a4:	ldr	r0, [fp, #-8]
   209a8:	ldr	r1, [fp, #-12]
   209ac:	str	r1, [sp, #24]
   209b0:	ldr	r2, [fp, #-16]
   209b4:	movw	r3, #7
   209b8:	bl	17ce4 <main@@Base+0x4068>
   209bc:	str	r0, [fp, #-12]
   209c0:	ldr	r0, [sp, #24]
   209c4:	ldr	r1, [fp, #-12]
   209c8:	cmp	r0, r1
   209cc:	beq	20ac8 <main@@Base+0xce4c>
   209d0:	mov	r0, #0
   209d4:	str	r0, [sp, #12]
   209d8:	str	r0, [sp, #8]
   209dc:	ldr	r0, [fp, #-8]
   209e0:	ldr	r1, [fp, #-12]
   209e4:	str	r1, [sp, #24]
   209e8:	ldr	r2, [fp, #-16]
   209ec:	add	r3, sp, #8
   209f0:	bl	1c3fc <main@@Base+0x8780>
   209f4:	str	r0, [fp, #-12]
   209f8:	ldr	r0, [sp, #24]
   209fc:	ldr	r1, [fp, #-12]
   20a00:	cmp	r0, r1
   20a04:	bne	20a58 <main@@Base+0xcddc>
   20a08:	ldr	r0, [pc, #732]	; 20cec <main@@Base+0xd070>
   20a0c:	add	r3, pc, r0
   20a10:	ldr	r0, [fp, #-8]
   20a14:	ldr	r1, [fp, #-12]
   20a18:	str	r1, [sp, #24]
   20a1c:	ldr	r2, [fp, #-16]
   20a20:	add	ip, sp, #8
   20a24:	str	ip, [sp]
   20a28:	bl	1c4d4 <main@@Base+0x8858>
   20a2c:	str	r0, [fp, #-12]
   20a30:	ldr	r0, [fp, #-12]
   20a34:	ldr	r1, [sp, #24]
   20a38:	cmp	r0, r1
   20a3c:	beq	20a50 <main@@Base+0xcdd4>
   20a40:	ldr	r0, [fp, #-12]
   20a44:	ldr	r1, [fp, #-16]
   20a48:	cmp	r0, r1
   20a4c:	bne	20a54 <main@@Base+0xcdd8>
   20a50:	b	20cc4 <main@@Base+0xd048>
   20a54:	b	20a58 <main@@Base+0xcddc>
   20a58:	ldr	r0, [sp, #8]
   20a5c:	ldr	r1, [sp, #12]
   20a60:	orr	r0, r0, r1
   20a64:	cmp	r0, #0
   20a68:	bne	20a84 <main@@Base+0xce08>
   20a6c:	b	20a70 <main@@Base+0xcdf4>
   20a70:	ldr	r0, [fp, #-8]
   20a74:	ldr	r0, [r0, #8]
   20a78:	and	r0, r0, #2
   20a7c:	cmp	r0, #0
   20a80:	beq	20ac4 <main@@Base+0xce48>
   20a84:	ldr	r0, [fp, #-8]
   20a88:	ldr	r0, [r0]
   20a8c:	movw	r1, #0
   20a90:	movw	r2, #8
   20a94:	movw	r3, #8
   20a98:	uxth	r3, r3
   20a9c:	bl	27920 <flatcc_builder_table_add@@Base>
   20aa0:	str	r0, [fp, #-28]	; 0xffffffe4
   20aa4:	movw	r1, #0
   20aa8:	cmp	r0, r1
   20aac:	bne	20ab4 <main@@Base+0xce38>
   20ab0:	b	20cc4 <main@@Base+0xd048>
   20ab4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20ab8:	ldr	r2, [sp, #8]
   20abc:	ldr	r3, [sp, #12]
   20ac0:	bl	1c714 <main@@Base+0x8a98>
   20ac4:	b	20adc <main@@Base+0xce60>
   20ac8:	ldr	r0, [fp, #-8]
   20acc:	ldr	r1, [fp, #-12]
   20ad0:	ldr	r2, [fp, #-16]
   20ad4:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   20ad8:	str	r0, [fp, #-12]
   20adc:	b	20c50 <main@@Base+0xcfd4>
   20ae0:	ldr	r0, [sp, #16]
   20ae4:	ldr	r1, [sp, #20]
   20ae8:	movw	r2, #29556	; 0x7374
   20aec:	movt	r2, #25183	; 0x625f
   20af0:	eor	r1, r1, r2
   20af4:	movw	r2, #29791	; 0x745f
   20af8:	movt	r2, #24946	; 0x6172
   20afc:	eor	r0, r0, r2
   20b00:	orr	r0, r0, r1
   20b04:	cmp	r0, #0
   20b08:	bne	20c38 <main@@Base+0xcfbc>
   20b0c:	b	20b10 <main@@Base+0xce94>
   20b10:	ldr	r0, [fp, #-8]
   20b14:	ldr	r1, [fp, #-12]
   20b18:	str	r1, [sp, #24]
   20b1c:	ldr	r2, [fp, #-16]
   20b20:	movw	r3, #8
   20b24:	bl	17ce4 <main@@Base+0x4068>
   20b28:	str	r0, [fp, #-12]
   20b2c:	ldr	r0, [sp, #24]
   20b30:	ldr	r1, [fp, #-12]
   20b34:	cmp	r0, r1
   20b38:	beq	20c20 <main@@Base+0xcfa4>
   20b3c:	movw	r0, #0
   20b40:	str	r0, [sp, #4]
   20b44:	ldr	r0, [fp, #-8]
   20b48:	ldr	r1, [fp, #-12]
   20b4c:	str	r1, [sp, #24]
   20b50:	ldr	r2, [fp, #-16]
   20b54:	add	r3, sp, #4
   20b58:	bl	1c74c <main@@Base+0x8ad0>
   20b5c:	str	r0, [fp, #-12]
   20b60:	ldr	r0, [sp, #24]
   20b64:	ldr	r1, [fp, #-12]
   20b68:	cmp	r0, r1
   20b6c:	bne	20bc0 <main@@Base+0xcf44>
   20b70:	ldr	r0, [pc, #368]	; 20ce8 <main@@Base+0xd06c>
   20b74:	add	r3, pc, r0
   20b78:	ldr	r0, [fp, #-8]
   20b7c:	ldr	r1, [fp, #-12]
   20b80:	str	r1, [sp, #24]
   20b84:	ldr	r2, [fp, #-16]
   20b88:	add	ip, sp, #4
   20b8c:	str	ip, [sp]
   20b90:	bl	1c824 <main@@Base+0x8ba8>
   20b94:	str	r0, [fp, #-12]
   20b98:	ldr	r0, [fp, #-12]
   20b9c:	ldr	r1, [sp, #24]
   20ba0:	cmp	r0, r1
   20ba4:	beq	20bb8 <main@@Base+0xcf3c>
   20ba8:	ldr	r0, [fp, #-12]
   20bac:	ldr	r1, [fp, #-16]
   20bb0:	cmp	r0, r1
   20bb4:	bne	20bbc <main@@Base+0xcf40>
   20bb8:	b	20cc4 <main@@Base+0xd048>
   20bbc:	b	20bc0 <main@@Base+0xcf44>
   20bc0:	ldr	r0, [sp, #4]
   20bc4:	cmp	r0, #0
   20bc8:	bne	20be0 <main@@Base+0xcf64>
   20bcc:	ldr	r0, [fp, #-8]
   20bd0:	ldr	r0, [r0, #8]
   20bd4:	and	r0, r0, #2
   20bd8:	cmp	r0, #0
   20bdc:	beq	20c1c <main@@Base+0xcfa0>
   20be0:	ldr	r0, [fp, #-8]
   20be4:	ldr	r0, [r0]
   20be8:	movw	r1, #1
   20bec:	movw	r2, #4
   20bf0:	movw	r3, #4
   20bf4:	uxth	r3, r3
   20bf8:	bl	27920 <flatcc_builder_table_add@@Base>
   20bfc:	str	r0, [fp, #-28]	; 0xffffffe4
   20c00:	movw	r1, #0
   20c04:	cmp	r0, r1
   20c08:	bne	20c10 <main@@Base+0xcf94>
   20c0c:	b	20cc4 <main@@Base+0xd048>
   20c10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20c14:	ldr	r1, [sp, #4]
   20c18:	bl	1ca4c <main@@Base+0x8dd0>
   20c1c:	b	20c34 <main@@Base+0xcfb8>
   20c20:	ldr	r0, [fp, #-8]
   20c24:	ldr	r1, [fp, #-12]
   20c28:	ldr	r2, [fp, #-16]
   20c2c:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   20c30:	str	r0, [fp, #-12]
   20c34:	b	20c4c <main@@Base+0xcfd0>
   20c38:	ldr	r0, [fp, #-8]
   20c3c:	ldr	r1, [fp, #-12]
   20c40:	ldr	r2, [fp, #-16]
   20c44:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   20c48:	str	r0, [fp, #-12]
   20c4c:	b	20c50 <main@@Base+0xcfd4>
   20c50:	b	20c68 <main@@Base+0xcfec>
   20c54:	ldr	r0, [fp, #-8]
   20c58:	ldr	r1, [fp, #-12]
   20c5c:	ldr	r2, [fp, #-16]
   20c60:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   20c64:	str	r0, [fp, #-12]
   20c68:	ldr	r0, [fp, #-8]
   20c6c:	ldr	r1, [fp, #-12]
   20c70:	ldr	r2, [fp, #-16]
   20c74:	sub	r3, fp, #24
   20c78:	bl	1d02c <main@@Base+0x93b0>
   20c7c:	str	r0, [fp, #-12]
   20c80:	b	208e8 <main@@Base+0xcc6c>
   20c84:	ldr	r0, [fp, #-8]
   20c88:	ldr	r0, [r0, #24]
   20c8c:	cmp	r0, #0
   20c90:	beq	20c98 <main@@Base+0xd01c>
   20c94:	b	20cc4 <main@@Base+0xd048>
   20c98:	ldr	r0, [fp, #-8]
   20c9c:	ldr	r0, [r0]
   20ca0:	bl	26ce0 <flatcc_builder_end_table@@Base>
   20ca4:	ldr	lr, [fp, #-20]	; 0xffffffec
   20ca8:	str	r0, [lr]
   20cac:	cmp	r0, #0
   20cb0:	bne	20cb8 <main@@Base+0xd03c>
   20cb4:	b	20cc4 <main@@Base+0xd048>
   20cb8:	ldr	r0, [fp, #-12]
   20cbc:	str	r0, [fp, #-4]
   20cc0:	b	20cdc <main@@Base+0xd060>
   20cc4:	ldr	r0, [fp, #-8]
   20cc8:	ldr	r1, [fp, #-12]
   20ccc:	ldr	r2, [fp, #-16]
   20cd0:	movw	r3, #33	; 0x21
   20cd4:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   20cd8:	str	r0, [fp, #-4]
   20cdc:	ldr	r0, [fp, #-4]
   20ce0:	mov	sp, fp
   20ce4:	pop	{fp, pc}
   20ce8:	ldrdeq	r3, [r2], -ip
   20cec:	andeq	r3, r2, r8, lsr r8
   20cf0:	push	{fp, lr}
   20cf4:	mov	fp, sp
   20cf8:	sub	sp, sp, #96	; 0x60
   20cfc:	str	r0, [fp, #-8]
   20d00:	str	r1, [fp, #-12]
   20d04:	str	r2, [fp, #-16]
   20d08:	str	r3, [fp, #-20]	; 0xffffffec
   20d0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   20d10:	movw	r1, #0
   20d14:	str	r1, [r0]
   20d18:	ldr	r0, [fp, #-8]
   20d1c:	ldr	r0, [r0]
   20d20:	movw	r1, #9
   20d24:	bl	26068 <flatcc_builder_start_table@@Base>
   20d28:	cmp	r0, #0
   20d2c:	beq	20d34 <main@@Base+0xd0b8>
   20d30:	b	218ec <main@@Base+0xdc70>
   20d34:	ldr	r0, [fp, #-8]
   20d38:	ldr	r1, [fp, #-12]
   20d3c:	ldr	r2, [fp, #-16]
   20d40:	sub	r3, fp, #24
   20d44:	bl	17b1c <main@@Base+0x3ea0>
   20d48:	str	r0, [fp, #-12]
   20d4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20d50:	cmp	r0, #0
   20d54:	beq	218ac <main@@Base+0xdc30>
   20d58:	ldr	r0, [fp, #-8]
   20d5c:	ldr	r1, [fp, #-12]
   20d60:	ldr	r2, [fp, #-16]
   20d64:	bl	17c00 <main@@Base+0x3f84>
   20d68:	str	r0, [fp, #-12]
   20d6c:	ldr	r0, [fp, #-12]
   20d70:	ldr	r1, [fp, #-16]
   20d74:	bl	17cac <main@@Base+0x4030>
   20d78:	str	r1, [sp, #52]	; 0x34
   20d7c:	str	r0, [sp, #48]	; 0x30
   20d80:	ldr	r0, [sp, #52]	; 0x34
   20d84:	movw	r1, #25442	; 0x6362
   20d88:	movt	r1, #25443	; 0x6363
   20d8c:	cmp	r0, r1
   20d90:	bhi	2122c <main@@Base+0xd5b0>
   20d94:	b	20d98 <main@@Base+0xd11c>
   20d98:	ldr	r0, [sp, #48]	; 0x30
   20d9c:	ldr	r1, [sp, #52]	; 0x34
   20da0:	movw	r2, #24929	; 0x6161
   20da4:	movt	r2, #24929	; 0x6161
   20da8:	eor	r1, r1, r2
   20dac:	movw	r2, #13108	; 0x3334
   20db0:	movt	r2, #12594	; 0x3132
   20db4:	eor	r0, r0, r2
   20db8:	orr	r0, r0, r1
   20dbc:	cmp	r0, #0
   20dc0:	bne	20f3c <main@@Base+0xd2c0>
   20dc4:	b	20dc8 <main@@Base+0xd14c>
   20dc8:	ldr	r0, [fp, #-12]
   20dcc:	add	r0, r0, #8
   20dd0:	str	r0, [fp, #-12]
   20dd4:	ldr	r0, [fp, #-12]
   20dd8:	ldr	r1, [fp, #-16]
   20ddc:	bl	17cac <main@@Base+0x4030>
   20de0:	str	r1, [sp, #52]	; 0x34
   20de4:	str	r0, [sp, #48]	; 0x30
   20de8:	ldr	r0, [sp, #52]	; 0x34
   20dec:	and	r0, r0, #-16777216	; 0xff000000
   20df0:	teq	r0, #889192448	; 0x35000000
   20df4:	bne	20f24 <main@@Base+0xd2a8>
   20df8:	b	20dfc <main@@Base+0xd180>
   20dfc:	ldr	r0, [fp, #-8]
   20e00:	ldr	r1, [fp, #-12]
   20e04:	str	r1, [fp, #-40]	; 0xffffffd8
   20e08:	ldr	r2, [fp, #-16]
   20e0c:	movw	r3, #1
   20e10:	bl	17ce4 <main@@Base+0x4068>
   20e14:	str	r0, [fp, #-12]
   20e18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20e1c:	ldr	r1, [fp, #-12]
   20e20:	cmp	r0, r1
   20e24:	beq	20f0c <main@@Base+0xd290>
   20e28:	movw	r0, #0
   20e2c:	str	r0, [sp, #44]	; 0x2c
   20e30:	ldr	r0, [fp, #-8]
   20e34:	ldr	r1, [fp, #-12]
   20e38:	str	r1, [fp, #-40]	; 0xffffffd8
   20e3c:	ldr	r2, [fp, #-16]
   20e40:	add	r3, sp, #44	; 0x2c
   20e44:	bl	1c74c <main@@Base+0x8ad0>
   20e48:	str	r0, [fp, #-12]
   20e4c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20e50:	ldr	r1, [fp, #-12]
   20e54:	cmp	r0, r1
   20e58:	bne	20eac <main@@Base+0xd230>
   20e5c:	ldr	r0, [pc, #2752]	; 21924 <main@@Base+0xdca8>
   20e60:	add	r3, pc, r0
   20e64:	ldr	r0, [fp, #-8]
   20e68:	ldr	r1, [fp, #-12]
   20e6c:	str	r1, [fp, #-40]	; 0xffffffd8
   20e70:	ldr	r2, [fp, #-16]
   20e74:	add	ip, sp, #44	; 0x2c
   20e78:	str	ip, [sp]
   20e7c:	bl	1c824 <main@@Base+0x8ba8>
   20e80:	str	r0, [fp, #-12]
   20e84:	ldr	r0, [fp, #-12]
   20e88:	ldr	r1, [fp, #-40]	; 0xffffffd8
   20e8c:	cmp	r0, r1
   20e90:	beq	20ea4 <main@@Base+0xd228>
   20e94:	ldr	r0, [fp, #-12]
   20e98:	ldr	r1, [fp, #-16]
   20e9c:	cmp	r0, r1
   20ea0:	bne	20ea8 <main@@Base+0xd22c>
   20ea4:	b	218ec <main@@Base+0xdc70>
   20ea8:	b	20eac <main@@Base+0xd230>
   20eac:	ldr	r0, [sp, #44]	; 0x2c
   20eb0:	cmp	r0, #0
   20eb4:	bne	20ecc <main@@Base+0xd250>
   20eb8:	ldr	r0, [fp, #-8]
   20ebc:	ldr	r0, [r0, #8]
   20ec0:	and	r0, r0, #2
   20ec4:	cmp	r0, #0
   20ec8:	beq	20f08 <main@@Base+0xd28c>
   20ecc:	ldr	r0, [fp, #-8]
   20ed0:	ldr	r0, [r0]
   20ed4:	movw	r1, #1
   20ed8:	movw	r2, #4
   20edc:	movw	r3, #4
   20ee0:	uxth	r3, r3
   20ee4:	bl	27920 <flatcc_builder_table_add@@Base>
   20ee8:	str	r0, [fp, #-28]	; 0xffffffe4
   20eec:	movw	r1, #0
   20ef0:	cmp	r0, r1
   20ef4:	bne	20efc <main@@Base+0xd280>
   20ef8:	b	218ec <main@@Base+0xdc70>
   20efc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20f00:	ldr	r1, [sp, #44]	; 0x2c
   20f04:	bl	1ca4c <main@@Base+0x8dd0>
   20f08:	b	20f20 <main@@Base+0xd2a4>
   20f0c:	ldr	r0, [fp, #-8]
   20f10:	ldr	r1, [fp, #-12]
   20f14:	ldr	r2, [fp, #-16]
   20f18:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   20f1c:	str	r0, [fp, #-12]
   20f20:	b	20f38 <main@@Base+0xd2bc>
   20f24:	ldr	r0, [fp, #-8]
   20f28:	ldr	r1, [fp, #-12]
   20f2c:	ldr	r2, [fp, #-16]
   20f30:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   20f34:	str	r0, [fp, #-12]
   20f38:	b	21228 <main@@Base+0xd5ac>
   20f3c:	ldr	r0, [sp, #52]	; 0x34
   20f40:	movw	r1, #24929	; 0x6161
   20f44:	movt	r1, #24929	; 0x6161
   20f48:	teq	r0, r1
   20f4c:	bne	20fe0 <main@@Base+0xd364>
   20f50:	b	20f54 <main@@Base+0xd2d8>
   20f54:	ldr	r0, [fp, #-8]
   20f58:	ldr	r1, [fp, #-12]
   20f5c:	str	r1, [fp, #-40]	; 0xffffffd8
   20f60:	ldr	r2, [fp, #-16]
   20f64:	movw	r3, #4
   20f68:	bl	17ce4 <main@@Base+0x4068>
   20f6c:	str	r0, [fp, #-12]
   20f70:	ldr	r0, [fp, #-40]	; 0xffffffd8
   20f74:	ldr	r1, [fp, #-12]
   20f78:	cmp	r0, r1
   20f7c:	beq	20fd8 <main@@Base+0xd35c>
   20f80:	ldr	r0, [fp, #-8]
   20f84:	ldr	r1, [fp, #-12]
   20f88:	ldr	r2, [fp, #-16]
   20f8c:	sub	r3, fp, #32
   20f90:	bl	2dfac <flatcc_json_parser_build_string@@Base>
   20f94:	str	r0, [fp, #-12]
   20f98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20f9c:	cmp	r0, #0
   20fa0:	beq	20fc4 <main@@Base+0xd348>
   20fa4:	ldr	r0, [fp, #-8]
   20fa8:	ldr	r0, [r0]
   20fac:	movw	r1, #0
   20fb0:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   20fb4:	str	r0, [fp, #-36]	; 0xffffffdc
   20fb8:	movw	r1, #0
   20fbc:	cmp	r0, r1
   20fc0:	bne	20fc8 <main@@Base+0xd34c>
   20fc4:	b	218ec <main@@Base+0xdc70>
   20fc8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   20fcc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   20fd0:	str	r0, [r1]
   20fd4:	b	20fdc <main@@Base+0xd360>
   20fd8:	b	20fe8 <main@@Base+0xd36c>
   20fdc:	b	20fe4 <main@@Base+0xd368>
   20fe0:	b	20fe8 <main@@Base+0xd36c>
   20fe4:	b	21224 <main@@Base+0xd5a8>
   20fe8:	ldr	r0, [sp, #48]	; 0x30
   20fec:	ldr	r1, [sp, #52]	; 0x34
   20ff0:	movw	r2, #25186	; 0x6262
   20ff4:	movt	r2, #25186	; 0x6262
   20ff8:	eor	r1, r1, r2
   20ffc:	movw	r2, #13108	; 0x3334
   21000:	movt	r2, #12594	; 0x3132
   21004:	eor	r0, r0, r2
   21008:	orr	r0, r0, r1
   2100c:	cmp	r0, #0
   21010:	bne	21154 <main@@Base+0xd4d8>
   21014:	b	21018 <main@@Base+0xd39c>
   21018:	ldr	r0, [fp, #-8]
   2101c:	ldr	r1, [fp, #-12]
   21020:	str	r1, [fp, #-40]	; 0xffffffd8
   21024:	ldr	r2, [fp, #-16]
   21028:	movw	r3, #8
   2102c:	bl	17ce4 <main@@Base+0x4068>
   21030:	str	r0, [fp, #-12]
   21034:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21038:	ldr	r1, [fp, #-12]
   2103c:	cmp	r0, r1
   21040:	beq	2113c <main@@Base+0xd4c0>
   21044:	mov	r0, #0
   21048:	str	r0, [sp, #36]	; 0x24
   2104c:	str	r0, [sp, #32]
   21050:	ldr	r0, [fp, #-8]
   21054:	ldr	r1, [fp, #-12]
   21058:	str	r1, [fp, #-40]	; 0xffffffd8
   2105c:	ldr	r2, [fp, #-16]
   21060:	add	r3, sp, #32
   21064:	bl	1c3fc <main@@Base+0x8780>
   21068:	str	r0, [fp, #-12]
   2106c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21070:	ldr	r1, [fp, #-12]
   21074:	cmp	r0, r1
   21078:	bne	210cc <main@@Base+0xd450>
   2107c:	ldr	r0, [pc, #2204]	; 21920 <main@@Base+0xdca4>
   21080:	add	r3, pc, r0
   21084:	ldr	r0, [fp, #-8]
   21088:	ldr	r1, [fp, #-12]
   2108c:	str	r1, [fp, #-40]	; 0xffffffd8
   21090:	ldr	r2, [fp, #-16]
   21094:	add	ip, sp, #32
   21098:	str	ip, [sp]
   2109c:	bl	1c4d4 <main@@Base+0x8858>
   210a0:	str	r0, [fp, #-12]
   210a4:	ldr	r0, [fp, #-12]
   210a8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   210ac:	cmp	r0, r1
   210b0:	beq	210c4 <main@@Base+0xd448>
   210b4:	ldr	r0, [fp, #-12]
   210b8:	ldr	r1, [fp, #-16]
   210bc:	cmp	r0, r1
   210c0:	bne	210c8 <main@@Base+0xd44c>
   210c4:	b	218ec <main@@Base+0xdc70>
   210c8:	b	210cc <main@@Base+0xd450>
   210cc:	ldr	r0, [sp, #32]
   210d0:	ldr	r1, [sp, #36]	; 0x24
   210d4:	orr	r0, r0, r1
   210d8:	cmp	r0, #0
   210dc:	bne	210f8 <main@@Base+0xd47c>
   210e0:	b	210e4 <main@@Base+0xd468>
   210e4:	ldr	r0, [fp, #-8]
   210e8:	ldr	r0, [r0, #8]
   210ec:	and	r0, r0, #2
   210f0:	cmp	r0, #0
   210f4:	beq	21138 <main@@Base+0xd4bc>
   210f8:	ldr	r0, [fp, #-8]
   210fc:	ldr	r0, [r0]
   21100:	movw	r1, #3
   21104:	movw	r2, #8
   21108:	movw	r3, #8
   2110c:	uxth	r3, r3
   21110:	bl	27920 <flatcc_builder_table_add@@Base>
   21114:	str	r0, [fp, #-28]	; 0xffffffe4
   21118:	movw	r1, #0
   2111c:	cmp	r0, r1
   21120:	bne	21128 <main@@Base+0xd4ac>
   21124:	b	218ec <main@@Base+0xdc70>
   21128:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2112c:	ldr	r2, [sp, #32]
   21130:	ldr	r3, [sp, #36]	; 0x24
   21134:	bl	1c714 <main@@Base+0x8a98>
   21138:	b	21150 <main@@Base+0xd4d4>
   2113c:	ldr	r0, [fp, #-8]
   21140:	ldr	r1, [fp, #-12]
   21144:	ldr	r2, [fp, #-16]
   21148:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   2114c:	str	r0, [fp, #-12]
   21150:	b	21220 <main@@Base+0xd5a4>
   21154:	ldr	r0, [sp, #52]	; 0x34
   21158:	movw	r1, #25186	; 0x6262
   2115c:	movt	r1, #25186	; 0x6262
   21160:	teq	r0, r1
   21164:	bne	21208 <main@@Base+0xd58c>
   21168:	b	2116c <main@@Base+0xd4f0>
   2116c:	ldr	r0, [fp, #-8]
   21170:	ldr	r1, [fp, #-12]
   21174:	str	r1, [fp, #-40]	; 0xffffffd8
   21178:	ldr	r2, [fp, #-16]
   2117c:	movw	r3, #4
   21180:	bl	17ce4 <main@@Base+0x4068>
   21184:	str	r0, [fp, #-12]
   21188:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2118c:	ldr	r1, [fp, #-12]
   21190:	cmp	r0, r1
   21194:	beq	211f0 <main@@Base+0xd574>
   21198:	ldr	r0, [fp, #-8]
   2119c:	ldr	r1, [fp, #-12]
   211a0:	ldr	r2, [fp, #-16]
   211a4:	sub	r3, fp, #32
   211a8:	bl	2dfac <flatcc_json_parser_build_string@@Base>
   211ac:	str	r0, [fp, #-12]
   211b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   211b4:	cmp	r0, #0
   211b8:	beq	211dc <main@@Base+0xd560>
   211bc:	ldr	r0, [fp, #-8]
   211c0:	ldr	r0, [r0]
   211c4:	movw	r1, #2
   211c8:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   211cc:	str	r0, [fp, #-36]	; 0xffffffdc
   211d0:	movw	r1, #0
   211d4:	cmp	r0, r1
   211d8:	bne	211e0 <main@@Base+0xd564>
   211dc:	b	218ec <main@@Base+0xdc70>
   211e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   211e4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   211e8:	str	r0, [r1]
   211ec:	b	21204 <main@@Base+0xd588>
   211f0:	ldr	r0, [fp, #-8]
   211f4:	ldr	r1, [fp, #-12]
   211f8:	ldr	r2, [fp, #-16]
   211fc:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   21200:	str	r0, [fp, #-12]
   21204:	b	2121c <main@@Base+0xd5a0>
   21208:	ldr	r0, [fp, #-8]
   2120c:	ldr	r1, [fp, #-12]
   21210:	ldr	r2, [fp, #-16]
   21214:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   21218:	str	r0, [fp, #-12]
   2121c:	b	21220 <main@@Base+0xd5a4>
   21220:	b	21224 <main@@Base+0xd5a8>
   21224:	b	21228 <main@@Base+0xd5ac>
   21228:	b	21890 <main@@Base+0xdc14>
   2122c:	ldr	r0, [sp, #48]	; 0x30
   21230:	ldr	r1, [sp, #52]	; 0x34
   21234:	movw	r2, #25443	; 0x6363
   21238:	movt	r2, #25443	; 0x6363
   2123c:	eor	r1, r1, r2
   21240:	movw	r2, #13108	; 0x3334
   21244:	movt	r2, #12594	; 0x3132
   21248:	eor	r0, r0, r2
   2124c:	orr	r0, r0, r1
   21250:	cmp	r0, #0
   21254:	bne	214f8 <main@@Base+0xd87c>
   21258:	b	2125c <main@@Base+0xd5e0>
   2125c:	ldr	r0, [fp, #-8]
   21260:	ldr	r1, [fp, #-12]
   21264:	str	r1, [fp, #-40]	; 0xffffffd8
   21268:	ldr	r2, [fp, #-16]
   2126c:	movw	r3, #8
   21270:	bl	17ce4 <main@@Base+0x4068>
   21274:	str	r0, [fp, #-12]
   21278:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2127c:	ldr	r1, [fp, #-12]
   21280:	cmp	r0, r1
   21284:	beq	21380 <main@@Base+0xd704>
   21288:	mov	r0, #0
   2128c:	str	r0, [sp, #28]
   21290:	str	r0, [sp, #24]
   21294:	ldr	r0, [fp, #-8]
   21298:	ldr	r1, [fp, #-12]
   2129c:	str	r1, [fp, #-40]	; 0xffffffd8
   212a0:	ldr	r2, [fp, #-16]
   212a4:	add	r3, sp, #24
   212a8:	bl	1c3fc <main@@Base+0x8780>
   212ac:	str	r0, [fp, #-12]
   212b0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   212b4:	ldr	r1, [fp, #-12]
   212b8:	cmp	r0, r1
   212bc:	bne	21310 <main@@Base+0xd694>
   212c0:	ldr	r0, [pc, #1620]	; 2191c <main@@Base+0xdca0>
   212c4:	add	r3, pc, r0
   212c8:	ldr	r0, [fp, #-8]
   212cc:	ldr	r1, [fp, #-12]
   212d0:	str	r1, [fp, #-40]	; 0xffffffd8
   212d4:	ldr	r2, [fp, #-16]
   212d8:	add	ip, sp, #24
   212dc:	str	ip, [sp]
   212e0:	bl	1c4d4 <main@@Base+0x8858>
   212e4:	str	r0, [fp, #-12]
   212e8:	ldr	r0, [fp, #-12]
   212ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   212f0:	cmp	r0, r1
   212f4:	beq	21308 <main@@Base+0xd68c>
   212f8:	ldr	r0, [fp, #-12]
   212fc:	ldr	r1, [fp, #-16]
   21300:	cmp	r0, r1
   21304:	bne	2130c <main@@Base+0xd690>
   21308:	b	218ec <main@@Base+0xdc70>
   2130c:	b	21310 <main@@Base+0xd694>
   21310:	ldr	r0, [sp, #24]
   21314:	ldr	r1, [sp, #28]
   21318:	orr	r0, r0, r1
   2131c:	cmp	r0, #0
   21320:	bne	2133c <main@@Base+0xd6c0>
   21324:	b	21328 <main@@Base+0xd6ac>
   21328:	ldr	r0, [fp, #-8]
   2132c:	ldr	r0, [r0, #8]
   21330:	and	r0, r0, #2
   21334:	cmp	r0, #0
   21338:	beq	2137c <main@@Base+0xd700>
   2133c:	ldr	r0, [fp, #-8]
   21340:	ldr	r0, [r0]
   21344:	movw	r1, #5
   21348:	movw	r2, #8
   2134c:	movw	r3, #8
   21350:	uxth	r3, r3
   21354:	bl	27920 <flatcc_builder_table_add@@Base>
   21358:	str	r0, [fp, #-28]	; 0xffffffe4
   2135c:	movw	r1, #0
   21360:	cmp	r0, r1
   21364:	bne	2136c <main@@Base+0xd6f0>
   21368:	b	218ec <main@@Base+0xdc70>
   2136c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21370:	ldr	r2, [sp, #24]
   21374:	ldr	r3, [sp, #28]
   21378:	bl	1c714 <main@@Base+0x8a98>
   2137c:	b	214f4 <main@@Base+0xd878>
   21380:	ldr	r0, [fp, #-12]
   21384:	add	r0, r0, #8
   21388:	str	r0, [fp, #-12]
   2138c:	ldr	r0, [fp, #-12]
   21390:	ldr	r1, [fp, #-16]
   21394:	bl	17cac <main@@Base+0x4030>
   21398:	str	r1, [sp, #52]	; 0x34
   2139c:	str	r0, [sp, #48]	; 0x30
   213a0:	ldr	r0, [sp, #52]	; 0x34
   213a4:	and	r0, r0, #-16777216	; 0xff000000
   213a8:	teq	r0, #889192448	; 0x35000000
   213ac:	bne	214dc <main@@Base+0xd860>
   213b0:	b	213b4 <main@@Base+0xd738>
   213b4:	ldr	r0, [fp, #-8]
   213b8:	ldr	r1, [fp, #-12]
   213bc:	str	r1, [fp, #-40]	; 0xffffffd8
   213c0:	ldr	r2, [fp, #-16]
   213c4:	movw	r3, #1
   213c8:	bl	17ce4 <main@@Base+0x4068>
   213cc:	str	r0, [fp, #-12]
   213d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   213d4:	ldr	r1, [fp, #-12]
   213d8:	cmp	r0, r1
   213dc:	beq	214c4 <main@@Base+0xd848>
   213e0:	movw	r0, #0
   213e4:	str	r0, [sp, #20]
   213e8:	ldr	r0, [fp, #-8]
   213ec:	ldr	r1, [fp, #-12]
   213f0:	str	r1, [fp, #-40]	; 0xffffffd8
   213f4:	ldr	r2, [fp, #-16]
   213f8:	add	r3, sp, #20
   213fc:	bl	1c74c <main@@Base+0x8ad0>
   21400:	str	r0, [fp, #-12]
   21404:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21408:	ldr	r1, [fp, #-12]
   2140c:	cmp	r0, r1
   21410:	bne	21464 <main@@Base+0xd7e8>
   21414:	ldr	r0, [pc, #1276]	; 21918 <main@@Base+0xdc9c>
   21418:	add	r3, pc, r0
   2141c:	ldr	r0, [fp, #-8]
   21420:	ldr	r1, [fp, #-12]
   21424:	str	r1, [fp, #-40]	; 0xffffffd8
   21428:	ldr	r2, [fp, #-16]
   2142c:	add	ip, sp, #20
   21430:	str	ip, [sp]
   21434:	bl	1c824 <main@@Base+0x8ba8>
   21438:	str	r0, [fp, #-12]
   2143c:	ldr	r0, [fp, #-12]
   21440:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21444:	cmp	r0, r1
   21448:	beq	2145c <main@@Base+0xd7e0>
   2144c:	ldr	r0, [fp, #-12]
   21450:	ldr	r1, [fp, #-16]
   21454:	cmp	r0, r1
   21458:	bne	21460 <main@@Base+0xd7e4>
   2145c:	b	218ec <main@@Base+0xdc70>
   21460:	b	21464 <main@@Base+0xd7e8>
   21464:	ldr	r0, [sp, #20]
   21468:	cmp	r0, #0
   2146c:	bne	21484 <main@@Base+0xd808>
   21470:	ldr	r0, [fp, #-8]
   21474:	ldr	r0, [r0, #8]
   21478:	and	r0, r0, #2
   2147c:	cmp	r0, #0
   21480:	beq	214c0 <main@@Base+0xd844>
   21484:	ldr	r0, [fp, #-8]
   21488:	ldr	r0, [r0]
   2148c:	movw	r1, #6
   21490:	movw	r2, #4
   21494:	movw	r3, #4
   21498:	uxth	r3, r3
   2149c:	bl	27920 <flatcc_builder_table_add@@Base>
   214a0:	str	r0, [fp, #-28]	; 0xffffffe4
   214a4:	movw	r1, #0
   214a8:	cmp	r0, r1
   214ac:	bne	214b4 <main@@Base+0xd838>
   214b0:	b	218ec <main@@Base+0xdc70>
   214b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   214b8:	ldr	r1, [sp, #20]
   214bc:	bl	1ca4c <main@@Base+0x8dd0>
   214c0:	b	214d8 <main@@Base+0xd85c>
   214c4:	ldr	r0, [fp, #-8]
   214c8:	ldr	r1, [fp, #-12]
   214cc:	ldr	r2, [fp, #-16]
   214d0:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   214d4:	str	r0, [fp, #-12]
   214d8:	b	214f0 <main@@Base+0xd874>
   214dc:	ldr	r0, [fp, #-8]
   214e0:	ldr	r1, [fp, #-12]
   214e4:	ldr	r2, [fp, #-16]
   214e8:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   214ec:	str	r0, [fp, #-12]
   214f0:	b	214f4 <main@@Base+0xd878>
   214f4:	b	2188c <main@@Base+0xdc10>
   214f8:	ldr	r0, [sp, #52]	; 0x34
   214fc:	movw	r1, #25443	; 0x6363
   21500:	movt	r1, #25443	; 0x6363
   21504:	teq	r0, r1
   21508:	bne	2159c <main@@Base+0xd920>
   2150c:	b	21510 <main@@Base+0xd894>
   21510:	ldr	r0, [fp, #-8]
   21514:	ldr	r1, [fp, #-12]
   21518:	str	r1, [fp, #-40]	; 0xffffffd8
   2151c:	ldr	r2, [fp, #-16]
   21520:	movw	r3, #4
   21524:	bl	17ce4 <main@@Base+0x4068>
   21528:	str	r0, [fp, #-12]
   2152c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21530:	ldr	r1, [fp, #-12]
   21534:	cmp	r0, r1
   21538:	beq	21594 <main@@Base+0xd918>
   2153c:	ldr	r0, [fp, #-8]
   21540:	ldr	r1, [fp, #-12]
   21544:	ldr	r2, [fp, #-16]
   21548:	sub	r3, fp, #32
   2154c:	bl	2dfac <flatcc_json_parser_build_string@@Base>
   21550:	str	r0, [fp, #-12]
   21554:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21558:	cmp	r0, #0
   2155c:	beq	21580 <main@@Base+0xd904>
   21560:	ldr	r0, [fp, #-8]
   21564:	ldr	r0, [r0]
   21568:	movw	r1, #4
   2156c:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   21570:	str	r0, [fp, #-36]	; 0xffffffdc
   21574:	movw	r1, #0
   21578:	cmp	r0, r1
   2157c:	bne	21584 <main@@Base+0xd908>
   21580:	b	218ec <main@@Base+0xdc70>
   21584:	ldr	r0, [fp, #-32]	; 0xffffffe0
   21588:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2158c:	str	r0, [r1]
   21590:	b	21598 <main@@Base+0xd91c>
   21594:	b	215a4 <main@@Base+0xd928>
   21598:	b	215a0 <main@@Base+0xd924>
   2159c:	b	215a4 <main@@Base+0xd928>
   215a0:	b	21888 <main@@Base+0xdc0c>
   215a4:	ldr	r0, [sp, #48]	; 0x30
   215a8:	ldr	r1, [sp, #52]	; 0x34
   215ac:	movw	r2, #25700	; 0x6464
   215b0:	movt	r2, #25700	; 0x6464
   215b4:	eor	r1, r1, r2
   215b8:	movw	r2, #13108	; 0x3334
   215bc:	movt	r2, #12594	; 0x3132
   215c0:	eor	r0, r0, r2
   215c4:	orr	r0, r0, r1
   215c8:	cmp	r0, #0
   215cc:	bne	21870 <main@@Base+0xdbf4>
   215d0:	b	215d4 <main@@Base+0xd958>
   215d4:	ldr	r0, [fp, #-8]
   215d8:	ldr	r1, [fp, #-12]
   215dc:	str	r1, [fp, #-40]	; 0xffffffd8
   215e0:	ldr	r2, [fp, #-16]
   215e4:	movw	r3, #8
   215e8:	bl	17ce4 <main@@Base+0x4068>
   215ec:	str	r0, [fp, #-12]
   215f0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   215f4:	ldr	r1, [fp, #-12]
   215f8:	cmp	r0, r1
   215fc:	beq	216f8 <main@@Base+0xda7c>
   21600:	mov	r0, #0
   21604:	str	r0, [sp, #12]
   21608:	str	r0, [sp, #8]
   2160c:	ldr	r0, [fp, #-8]
   21610:	ldr	r1, [fp, #-12]
   21614:	str	r1, [fp, #-40]	; 0xffffffd8
   21618:	ldr	r2, [fp, #-16]
   2161c:	add	r3, sp, #8
   21620:	bl	1c3fc <main@@Base+0x8780>
   21624:	str	r0, [fp, #-12]
   21628:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2162c:	ldr	r1, [fp, #-12]
   21630:	cmp	r0, r1
   21634:	bne	21688 <main@@Base+0xda0c>
   21638:	ldr	r0, [pc, #724]	; 21914 <main@@Base+0xdc98>
   2163c:	add	r3, pc, r0
   21640:	ldr	r0, [fp, #-8]
   21644:	ldr	r1, [fp, #-12]
   21648:	str	r1, [fp, #-40]	; 0xffffffd8
   2164c:	ldr	r2, [fp, #-16]
   21650:	add	ip, sp, #8
   21654:	str	ip, [sp]
   21658:	bl	1c4d4 <main@@Base+0x8858>
   2165c:	str	r0, [fp, #-12]
   21660:	ldr	r0, [fp, #-12]
   21664:	ldr	r1, [fp, #-40]	; 0xffffffd8
   21668:	cmp	r0, r1
   2166c:	beq	21680 <main@@Base+0xda04>
   21670:	ldr	r0, [fp, #-12]
   21674:	ldr	r1, [fp, #-16]
   21678:	cmp	r0, r1
   2167c:	bne	21684 <main@@Base+0xda08>
   21680:	b	218ec <main@@Base+0xdc70>
   21684:	b	21688 <main@@Base+0xda0c>
   21688:	ldr	r0, [sp, #8]
   2168c:	ldr	r1, [sp, #12]
   21690:	orr	r0, r0, r1
   21694:	cmp	r0, #0
   21698:	bne	216b4 <main@@Base+0xda38>
   2169c:	b	216a0 <main@@Base+0xda24>
   216a0:	ldr	r0, [fp, #-8]
   216a4:	ldr	r0, [r0, #8]
   216a8:	and	r0, r0, #2
   216ac:	cmp	r0, #0
   216b0:	beq	216f4 <main@@Base+0xda78>
   216b4:	ldr	r0, [fp, #-8]
   216b8:	ldr	r0, [r0]
   216bc:	movw	r1, #7
   216c0:	movw	r2, #8
   216c4:	movw	r3, #8
   216c8:	uxth	r3, r3
   216cc:	bl	27920 <flatcc_builder_table_add@@Base>
   216d0:	str	r0, [fp, #-28]	; 0xffffffe4
   216d4:	movw	r1, #0
   216d8:	cmp	r0, r1
   216dc:	bne	216e4 <main@@Base+0xda68>
   216e0:	b	218ec <main@@Base+0xdc70>
   216e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   216e8:	ldr	r2, [sp, #8]
   216ec:	ldr	r3, [sp, #12]
   216f0:	bl	1c714 <main@@Base+0x8a98>
   216f4:	b	2186c <main@@Base+0xdbf0>
   216f8:	ldr	r0, [fp, #-12]
   216fc:	add	r0, r0, #8
   21700:	str	r0, [fp, #-12]
   21704:	ldr	r0, [fp, #-12]
   21708:	ldr	r1, [fp, #-16]
   2170c:	bl	17cac <main@@Base+0x4030>
   21710:	str	r1, [sp, #52]	; 0x34
   21714:	str	r0, [sp, #48]	; 0x30
   21718:	ldr	r0, [sp, #52]	; 0x34
   2171c:	and	r0, r0, #-16777216	; 0xff000000
   21720:	teq	r0, #889192448	; 0x35000000
   21724:	bne	21854 <main@@Base+0xdbd8>
   21728:	b	2172c <main@@Base+0xdab0>
   2172c:	ldr	r0, [fp, #-8]
   21730:	ldr	r1, [fp, #-12]
   21734:	str	r1, [fp, #-40]	; 0xffffffd8
   21738:	ldr	r2, [fp, #-16]
   2173c:	movw	r3, #1
   21740:	bl	17ce4 <main@@Base+0x4068>
   21744:	str	r0, [fp, #-12]
   21748:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2174c:	ldr	r1, [fp, #-12]
   21750:	cmp	r0, r1
   21754:	beq	2183c <main@@Base+0xdbc0>
   21758:	movw	r0, #0
   2175c:	str	r0, [sp, #4]
   21760:	ldr	r0, [fp, #-8]
   21764:	ldr	r1, [fp, #-12]
   21768:	str	r1, [fp, #-40]	; 0xffffffd8
   2176c:	ldr	r2, [fp, #-16]
   21770:	add	r3, sp, #4
   21774:	bl	1c74c <main@@Base+0x8ad0>
   21778:	str	r0, [fp, #-12]
   2177c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   21780:	ldr	r1, [fp, #-12]
   21784:	cmp	r0, r1
   21788:	bne	217dc <main@@Base+0xdb60>
   2178c:	ldr	r0, [pc, #380]	; 21910 <main@@Base+0xdc94>
   21790:	add	r3, pc, r0
   21794:	ldr	r0, [fp, #-8]
   21798:	ldr	r1, [fp, #-12]
   2179c:	str	r1, [fp, #-40]	; 0xffffffd8
   217a0:	ldr	r2, [fp, #-16]
   217a4:	add	ip, sp, #4
   217a8:	str	ip, [sp]
   217ac:	bl	1c824 <main@@Base+0x8ba8>
   217b0:	str	r0, [fp, #-12]
   217b4:	ldr	r0, [fp, #-12]
   217b8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   217bc:	cmp	r0, r1
   217c0:	beq	217d4 <main@@Base+0xdb58>
   217c4:	ldr	r0, [fp, #-12]
   217c8:	ldr	r1, [fp, #-16]
   217cc:	cmp	r0, r1
   217d0:	bne	217d8 <main@@Base+0xdb5c>
   217d4:	b	218ec <main@@Base+0xdc70>
   217d8:	b	217dc <main@@Base+0xdb60>
   217dc:	ldr	r0, [sp, #4]
   217e0:	cmp	r0, #0
   217e4:	bne	217fc <main@@Base+0xdb80>
   217e8:	ldr	r0, [fp, #-8]
   217ec:	ldr	r0, [r0, #8]
   217f0:	and	r0, r0, #2
   217f4:	cmp	r0, #0
   217f8:	beq	21838 <main@@Base+0xdbbc>
   217fc:	ldr	r0, [fp, #-8]
   21800:	ldr	r0, [r0]
   21804:	movw	r1, #8
   21808:	movw	r2, #4
   2180c:	movw	r3, #4
   21810:	uxth	r3, r3
   21814:	bl	27920 <flatcc_builder_table_add@@Base>
   21818:	str	r0, [fp, #-28]	; 0xffffffe4
   2181c:	movw	r1, #0
   21820:	cmp	r0, r1
   21824:	bne	2182c <main@@Base+0xdbb0>
   21828:	b	218ec <main@@Base+0xdc70>
   2182c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21830:	ldr	r1, [sp, #4]
   21834:	bl	1ca4c <main@@Base+0x8dd0>
   21838:	b	21850 <main@@Base+0xdbd4>
   2183c:	ldr	r0, [fp, #-8]
   21840:	ldr	r1, [fp, #-12]
   21844:	ldr	r2, [fp, #-16]
   21848:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   2184c:	str	r0, [fp, #-12]
   21850:	b	21868 <main@@Base+0xdbec>
   21854:	ldr	r0, [fp, #-8]
   21858:	ldr	r1, [fp, #-12]
   2185c:	ldr	r2, [fp, #-16]
   21860:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   21864:	str	r0, [fp, #-12]
   21868:	b	2186c <main@@Base+0xdbf0>
   2186c:	b	21884 <main@@Base+0xdc08>
   21870:	ldr	r0, [fp, #-8]
   21874:	ldr	r1, [fp, #-12]
   21878:	ldr	r2, [fp, #-16]
   2187c:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   21880:	str	r0, [fp, #-12]
   21884:	b	21888 <main@@Base+0xdc0c>
   21888:	b	2188c <main@@Base+0xdc10>
   2188c:	b	21890 <main@@Base+0xdc14>
   21890:	ldr	r0, [fp, #-8]
   21894:	ldr	r1, [fp, #-12]
   21898:	ldr	r2, [fp, #-16]
   2189c:	sub	r3, fp, #24
   218a0:	bl	1d02c <main@@Base+0x93b0>
   218a4:	str	r0, [fp, #-12]
   218a8:	b	20d4c <main@@Base+0xd0d0>
   218ac:	ldr	r0, [fp, #-8]
   218b0:	ldr	r0, [r0, #24]
   218b4:	cmp	r0, #0
   218b8:	beq	218c0 <main@@Base+0xdc44>
   218bc:	b	218ec <main@@Base+0xdc70>
   218c0:	ldr	r0, [fp, #-8]
   218c4:	ldr	r0, [r0]
   218c8:	bl	26ce0 <flatcc_builder_end_table@@Base>
   218cc:	ldr	lr, [fp, #-20]	; 0xffffffec
   218d0:	str	r0, [lr]
   218d4:	cmp	r0, #0
   218d8:	bne	218e0 <main@@Base+0xdc64>
   218dc:	b	218ec <main@@Base+0xdc70>
   218e0:	ldr	r0, [fp, #-12]
   218e4:	str	r0, [fp, #-4]
   218e8:	b	21904 <main@@Base+0xdc88>
   218ec:	ldr	r0, [fp, #-8]
   218f0:	ldr	r1, [fp, #-12]
   218f4:	ldr	r2, [fp, #-16]
   218f8:	movw	r3, #33	; 0x21
   218fc:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   21900:	str	r0, [fp, #-4]
   21904:	ldr	r0, [fp, #-4]
   21908:	mov	sp, fp
   2190c:	pop	{fp, pc}
   21910:	andeq	r2, r2, r8, lsl #22
   21914:	andeq	r2, r2, r0, asr ip
   21918:	andeq	r2, r2, r8, ror #28
   2191c:			; <UNDEFINED> instruction: 0x00022fb0
   21920:	andeq	r3, r2, r8, ror #3
   21924:	strdeq	r3, [r2], -ip
   21928:	push	{fp, lr}
   2192c:	mov	fp, sp
   21930:	sub	sp, sp, #72	; 0x48
   21934:	str	r0, [fp, #-8]
   21938:	str	r1, [fp, #-12]
   2193c:	str	r2, [fp, #-16]
   21940:	str	r3, [fp, #-20]	; 0xffffffec
   21944:	ldr	r0, [fp, #-20]	; 0xffffffec
   21948:	movw	r1, #0
   2194c:	str	r1, [r0]
   21950:	ldr	r0, [fp, #-8]
   21954:	ldr	r0, [r0]
   21958:	movw	r1, #2
   2195c:	bl	26068 <flatcc_builder_start_table@@Base>
   21960:	cmp	r0, #0
   21964:	beq	2196c <main@@Base+0xdcf0>
   21968:	b	21dc4 <main@@Base+0xe148>
   2196c:	ldr	r0, [fp, #-8]
   21970:	ldr	r1, [fp, #-12]
   21974:	ldr	r2, [fp, #-16]
   21978:	sub	r3, fp, #24
   2197c:	bl	17b1c <main@@Base+0x3ea0>
   21980:	str	r0, [fp, #-12]
   21984:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21988:	cmp	r0, #0
   2198c:	beq	21d84 <main@@Base+0xe108>
   21990:	ldr	r0, [fp, #-8]
   21994:	ldr	r1, [fp, #-12]
   21998:	ldr	r2, [fp, #-16]
   2199c:	bl	17c00 <main@@Base+0x3f84>
   219a0:	str	r0, [fp, #-12]
   219a4:	ldr	r0, [fp, #-12]
   219a8:	ldr	r1, [fp, #-16]
   219ac:	bl	17cac <main@@Base+0x4030>
   219b0:	str	r1, [sp, #28]
   219b4:	str	r0, [sp, #24]
   219b8:	ldr	r0, [sp, #24]
   219bc:	ldr	r1, [sp, #28]
   219c0:	movw	r2, #24929	; 0x6161
   219c4:	movt	r2, #24929	; 0x6161
   219c8:	eor	r1, r1, r2
   219cc:	movw	r2, #25186	; 0x6262
   219d0:	movt	r2, #24418	; 0x5f62
   219d4:	eor	r0, r0, r2
   219d8:	orr	r0, r0, r1
   219dc:	cmp	r0, #0
   219e0:	bne	21d54 <main@@Base+0xe0d8>
   219e4:	b	219e8 <main@@Base+0xdd6c>
   219e8:	ldr	r0, [fp, #-12]
   219ec:	add	r0, r0, #8
   219f0:	str	r0, [fp, #-12]
   219f4:	ldr	r0, [fp, #-12]
   219f8:	ldr	r1, [fp, #-16]
   219fc:	bl	17cac <main@@Base+0x4030>
   21a00:	str	r1, [sp, #28]
   21a04:	str	r0, [sp, #24]
   21a08:	ldr	r0, [sp, #24]
   21a0c:	ldr	r1, [sp, #28]
   21a10:	movw	lr, #29556	; 0x7374
   21a14:	movt	lr, #25183	; 0x625f
   21a18:	eor	r1, r1, lr
   21a1c:	movw	lr, #29791	; 0x745f
   21a20:	movt	lr, #24946	; 0x6172
   21a24:	eor	r0, r0, lr
   21a28:	orr	r0, r0, r1
   21a2c:	cmp	r0, #0
   21a30:	bne	21bc4 <main@@Base+0xdf48>
   21a34:	b	21a38 <main@@Base+0xddbc>
   21a38:	ldr	r0, [fp, #-12]
   21a3c:	add	r0, r0, #8
   21a40:	str	r0, [fp, #-12]
   21a44:	ldr	r0, [fp, #-12]
   21a48:	ldr	r1, [fp, #-16]
   21a4c:	bl	17cac <main@@Base+0x4030>
   21a50:	str	r1, [sp, #28]
   21a54:	str	r0, [sp, #24]
   21a58:	ldr	r0, [sp, #24]
   21a5c:	ldr	r1, [sp, #28]
   21a60:	and	r0, r0, #-16777216	; 0xff000000
   21a64:	movw	lr, #25968	; 0x6570
   21a68:	movt	lr, #29556	; 0x7374
   21a6c:	eor	r1, r1, lr
   21a70:	eor	r0, r0, #1929379840	; 0x73000000
   21a74:	orr	r0, r0, r1
   21a78:	cmp	r0, #0
   21a7c:	bne	21bac <main@@Base+0xdf30>
   21a80:	b	21a84 <main@@Base+0xde08>
   21a84:	ldr	r0, [fp, #-8]
   21a88:	ldr	r1, [fp, #-12]
   21a8c:	str	r1, [sp, #32]
   21a90:	ldr	r2, [fp, #-16]
   21a94:	movw	r3, #5
   21a98:	bl	17ce4 <main@@Base+0x4068>
   21a9c:	str	r0, [fp, #-12]
   21aa0:	ldr	r0, [sp, #32]
   21aa4:	ldr	r1, [fp, #-12]
   21aa8:	cmp	r0, r1
   21aac:	beq	21b94 <main@@Base+0xdf18>
   21ab0:	movw	r0, #0
   21ab4:	str	r0, [sp, #20]
   21ab8:	ldr	r0, [fp, #-8]
   21abc:	ldr	r1, [fp, #-12]
   21ac0:	str	r1, [sp, #32]
   21ac4:	ldr	r2, [fp, #-16]
   21ac8:	add	r3, sp, #20
   21acc:	bl	1c74c <main@@Base+0x8ad0>
   21ad0:	str	r0, [fp, #-12]
   21ad4:	ldr	r0, [sp, #32]
   21ad8:	ldr	r1, [fp, #-12]
   21adc:	cmp	r0, r1
   21ae0:	bne	21b34 <main@@Base+0xdeb8>
   21ae4:	ldr	r0, [pc, #768]	; 21dec <main@@Base+0xe170>
   21ae8:	add	r3, pc, r0
   21aec:	ldr	r0, [fp, #-8]
   21af0:	ldr	r1, [fp, #-12]
   21af4:	str	r1, [sp, #32]
   21af8:	ldr	r2, [fp, #-16]
   21afc:	add	ip, sp, #20
   21b00:	str	ip, [sp]
   21b04:	bl	1c824 <main@@Base+0x8ba8>
   21b08:	str	r0, [fp, #-12]
   21b0c:	ldr	r0, [fp, #-12]
   21b10:	ldr	r1, [sp, #32]
   21b14:	cmp	r0, r1
   21b18:	beq	21b2c <main@@Base+0xdeb0>
   21b1c:	ldr	r0, [fp, #-12]
   21b20:	ldr	r1, [fp, #-16]
   21b24:	cmp	r0, r1
   21b28:	bne	21b30 <main@@Base+0xdeb4>
   21b2c:	b	21dc4 <main@@Base+0xe148>
   21b30:	b	21b34 <main@@Base+0xdeb8>
   21b34:	ldr	r0, [sp, #20]
   21b38:	cmp	r0, #0
   21b3c:	bne	21b54 <main@@Base+0xded8>
   21b40:	ldr	r0, [fp, #-8]
   21b44:	ldr	r0, [r0, #8]
   21b48:	and	r0, r0, #2
   21b4c:	cmp	r0, #0
   21b50:	beq	21b90 <main@@Base+0xdf14>
   21b54:	ldr	r0, [fp, #-8]
   21b58:	ldr	r0, [r0]
   21b5c:	movw	r1, #1
   21b60:	movw	r2, #4
   21b64:	movw	r3, #4
   21b68:	uxth	r3, r3
   21b6c:	bl	27920 <flatcc_builder_table_add@@Base>
   21b70:	str	r0, [fp, #-28]	; 0xffffffe4
   21b74:	movw	r1, #0
   21b78:	cmp	r0, r1
   21b7c:	bne	21b84 <main@@Base+0xdf08>
   21b80:	b	21dc4 <main@@Base+0xe148>
   21b84:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21b88:	ldr	r1, [sp, #20]
   21b8c:	bl	1ca4c <main@@Base+0x8dd0>
   21b90:	b	21ba8 <main@@Base+0xdf2c>
   21b94:	ldr	r0, [fp, #-8]
   21b98:	ldr	r1, [fp, #-12]
   21b9c:	ldr	r2, [fp, #-16]
   21ba0:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   21ba4:	str	r0, [fp, #-12]
   21ba8:	b	21bc0 <main@@Base+0xdf44>
   21bac:	ldr	r0, [fp, #-8]
   21bb0:	ldr	r1, [fp, #-12]
   21bb4:	ldr	r2, [fp, #-16]
   21bb8:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   21bbc:	str	r0, [fp, #-12]
   21bc0:	b	21d50 <main@@Base+0xe0d4>
   21bc4:	ldr	r0, [sp, #24]
   21bc8:	ldr	r1, [sp, #28]
   21bcc:	movw	r2, #24435	; 0x5f73
   21bd0:	movt	r2, #98	; 0x62
   21bd4:	eor	r2, r2, r1, lsr #8
   21bd8:	lsr	r0, r0, #8
   21bdc:	orr	r0, r0, r1, lsl #24
   21be0:	movw	r1, #28787	; 0x7073
   21be4:	movt	r1, #29797	; 0x7465
   21be8:	eor	r0, r0, r1
   21bec:	orr	r0, r0, r2
   21bf0:	cmp	r0, #0
   21bf4:	bne	21d38 <main@@Base+0xe0bc>
   21bf8:	b	21bfc <main@@Base+0xdf80>
   21bfc:	ldr	r0, [fp, #-8]
   21c00:	ldr	r1, [fp, #-12]
   21c04:	str	r1, [sp, #32]
   21c08:	ldr	r2, [fp, #-16]
   21c0c:	movw	r3, #7
   21c10:	bl	17ce4 <main@@Base+0x4068>
   21c14:	str	r0, [fp, #-12]
   21c18:	ldr	r0, [sp, #32]
   21c1c:	ldr	r1, [fp, #-12]
   21c20:	cmp	r0, r1
   21c24:	beq	21d20 <main@@Base+0xe0a4>
   21c28:	mov	r0, #0
   21c2c:	str	r0, [sp, #12]
   21c30:	str	r0, [sp, #8]
   21c34:	ldr	r0, [fp, #-8]
   21c38:	ldr	r1, [fp, #-12]
   21c3c:	str	r1, [sp, #32]
   21c40:	ldr	r2, [fp, #-16]
   21c44:	add	r3, sp, #8
   21c48:	bl	1c3fc <main@@Base+0x8780>
   21c4c:	str	r0, [fp, #-12]
   21c50:	ldr	r0, [sp, #32]
   21c54:	ldr	r1, [fp, #-12]
   21c58:	cmp	r0, r1
   21c5c:	bne	21cb0 <main@@Base+0xe034>
   21c60:	ldr	r0, [pc, #384]	; 21de8 <main@@Base+0xe16c>
   21c64:	add	r3, pc, r0
   21c68:	ldr	r0, [fp, #-8]
   21c6c:	ldr	r1, [fp, #-12]
   21c70:	str	r1, [sp, #32]
   21c74:	ldr	r2, [fp, #-16]
   21c78:	add	ip, sp, #8
   21c7c:	str	ip, [sp]
   21c80:	bl	1c4d4 <main@@Base+0x8858>
   21c84:	str	r0, [fp, #-12]
   21c88:	ldr	r0, [fp, #-12]
   21c8c:	ldr	r1, [sp, #32]
   21c90:	cmp	r0, r1
   21c94:	beq	21ca8 <main@@Base+0xe02c>
   21c98:	ldr	r0, [fp, #-12]
   21c9c:	ldr	r1, [fp, #-16]
   21ca0:	cmp	r0, r1
   21ca4:	bne	21cac <main@@Base+0xe030>
   21ca8:	b	21dc4 <main@@Base+0xe148>
   21cac:	b	21cb0 <main@@Base+0xe034>
   21cb0:	ldr	r0, [sp, #8]
   21cb4:	ldr	r1, [sp, #12]
   21cb8:	orr	r0, r0, r1
   21cbc:	cmp	r0, #0
   21cc0:	bne	21cdc <main@@Base+0xe060>
   21cc4:	b	21cc8 <main@@Base+0xe04c>
   21cc8:	ldr	r0, [fp, #-8]
   21ccc:	ldr	r0, [r0, #8]
   21cd0:	and	r0, r0, #2
   21cd4:	cmp	r0, #0
   21cd8:	beq	21d1c <main@@Base+0xe0a0>
   21cdc:	ldr	r0, [fp, #-8]
   21ce0:	ldr	r0, [r0]
   21ce4:	movw	r1, #0
   21ce8:	movw	r2, #8
   21cec:	movw	r3, #8
   21cf0:	uxth	r3, r3
   21cf4:	bl	27920 <flatcc_builder_table_add@@Base>
   21cf8:	str	r0, [fp, #-28]	; 0xffffffe4
   21cfc:	movw	r1, #0
   21d00:	cmp	r0, r1
   21d04:	bne	21d0c <main@@Base+0xe090>
   21d08:	b	21dc4 <main@@Base+0xe148>
   21d0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   21d10:	ldr	r2, [sp, #8]
   21d14:	ldr	r3, [sp, #12]
   21d18:	bl	1c714 <main@@Base+0x8a98>
   21d1c:	b	21d34 <main@@Base+0xe0b8>
   21d20:	ldr	r0, [fp, #-8]
   21d24:	ldr	r1, [fp, #-12]
   21d28:	ldr	r2, [fp, #-16]
   21d2c:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   21d30:	str	r0, [fp, #-12]
   21d34:	b	21d4c <main@@Base+0xe0d0>
   21d38:	ldr	r0, [fp, #-8]
   21d3c:	ldr	r1, [fp, #-12]
   21d40:	ldr	r2, [fp, #-16]
   21d44:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   21d48:	str	r0, [fp, #-12]
   21d4c:	b	21d50 <main@@Base+0xe0d4>
   21d50:	b	21d68 <main@@Base+0xe0ec>
   21d54:	ldr	r0, [fp, #-8]
   21d58:	ldr	r1, [fp, #-12]
   21d5c:	ldr	r2, [fp, #-16]
   21d60:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   21d64:	str	r0, [fp, #-12]
   21d68:	ldr	r0, [fp, #-8]
   21d6c:	ldr	r1, [fp, #-12]
   21d70:	ldr	r2, [fp, #-16]
   21d74:	sub	r3, fp, #24
   21d78:	bl	1d02c <main@@Base+0x93b0>
   21d7c:	str	r0, [fp, #-12]
   21d80:	b	21984 <main@@Base+0xdd08>
   21d84:	ldr	r0, [fp, #-8]
   21d88:	ldr	r0, [r0, #24]
   21d8c:	cmp	r0, #0
   21d90:	beq	21d98 <main@@Base+0xe11c>
   21d94:	b	21dc4 <main@@Base+0xe148>
   21d98:	ldr	r0, [fp, #-8]
   21d9c:	ldr	r0, [r0]
   21da0:	bl	26ce0 <flatcc_builder_end_table@@Base>
   21da4:	ldr	lr, [fp, #-20]	; 0xffffffec
   21da8:	str	r0, [lr]
   21dac:	cmp	r0, #0
   21db0:	bne	21db8 <main@@Base+0xe13c>
   21db4:	b	21dc4 <main@@Base+0xe148>
   21db8:	ldr	r0, [fp, #-12]
   21dbc:	str	r0, [fp, #-4]
   21dc0:	b	21ddc <main@@Base+0xe160>
   21dc4:	ldr	r0, [fp, #-8]
   21dc8:	ldr	r1, [fp, #-12]
   21dcc:	ldr	r2, [fp, #-16]
   21dd0:	movw	r3, #33	; 0x21
   21dd4:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   21dd8:	str	r0, [fp, #-4]
   21ddc:	ldr	r0, [fp, #-4]
   21de0:	mov	sp, fp
   21de4:	pop	{fp, pc}
   21de8:	andeq	r2, r2, ip, asr #12
   21dec:			; <UNDEFINED> instruction: 0x000227bc
   21df0:	push	{fp, lr}
   21df4:	mov	fp, sp
   21df8:	sub	sp, sp, #56	; 0x38
   21dfc:	ldr	ip, [fp, #12]
   21e00:	ldr	lr, [fp, #8]
   21e04:	str	r0, [fp, #-8]
   21e08:	str	r1, [fp, #-12]
   21e0c:	str	r2, [fp, #-16]
   21e10:	str	r3, [fp, #-20]	; 0xffffffec
   21e14:	ldr	r0, [fp, #-12]
   21e18:	str	r0, [fp, #-24]	; 0xffffffe8
   21e1c:	ldr	r0, [fp, #-12]
   21e20:	ldr	r1, [fp, #-16]
   21e24:	str	lr, [sp, #12]
   21e28:	str	ip, [sp, #8]
   21e2c:	bl	17cac <main@@Base+0x4030>
   21e30:	str	r1, [sp, #20]
   21e34:	str	r0, [sp, #16]
   21e38:	ldr	r0, [sp, #16]
   21e3c:	ldr	r1, [sp, #20]
   21e40:	movw	r2, #24946	; 0x6172
   21e44:	movt	r2, #17256	; 0x4368
   21e48:	eor	r1, r1, r2
   21e4c:	movw	r2, #29797	; 0x7465
   21e50:	movt	r2, #24931	; 0x6163
   21e54:	eor	r0, r0, r2
   21e58:	orr	r0, r0, r1
   21e5c:	cmp	r0, #0
   21e60:	bne	21f14 <main@@Base+0xe298>
   21e64:	b	21e68 <main@@Base+0xe1ec>
   21e68:	ldr	r0, [fp, #-12]
   21e6c:	add	r0, r0, #8
   21e70:	str	r0, [fp, #-12]
   21e74:	ldr	r0, [fp, #-12]
   21e78:	ldr	r1, [fp, #-16]
   21e7c:	bl	17cac <main@@Base+0x4030>
   21e80:	str	r1, [sp, #20]
   21e84:	str	r0, [sp, #16]
   21e88:	ldr	r0, [sp, #20]
   21e8c:	and	r0, r0, #-16777216	; 0xff000000
   21e90:	teq	r0, #1912602624	; 0x72000000
   21e94:	bne	21f04 <main@@Base+0xe288>
   21e98:	b	21e9c <main@@Base+0xe220>
   21e9c:	ldr	r0, [fp, #-8]
   21ea0:	ldr	r1, [fp, #-12]
   21ea4:	str	r1, [sp, #28]
   21ea8:	ldr	r2, [fp, #-16]
   21eac:	movw	r3, #1
   21eb0:	bl	1d3a0 <main@@Base+0x9724>
   21eb4:	str	r0, [fp, #-12]
   21eb8:	ldr	r0, [fp, #-12]
   21ebc:	ldr	r1, [sp, #28]
   21ec0:	cmp	r0, r1
   21ec4:	beq	21ef4 <main@@Base+0xe278>
   21ec8:	ldr	r0, [fp, #-8]
   21ecc:	ldr	r1, [fp, #-12]
   21ed0:	ldr	r2, [fp, #-16]
   21ed4:	ldr	r3, [fp, #-20]	; 0xffffffec
   21ed8:	ldr	ip, [fp, #8]
   21edc:	ldr	lr, [fp, #12]
   21ee0:	str	ip, [sp]
   21ee4:	str	lr, [sp, #4]
   21ee8:	bl	1df20 <main@@Base+0xa2a4>
   21eec:	str	r0, [fp, #-12]
   21ef0:	b	21f00 <main@@Base+0xe284>
   21ef4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21ef8:	str	r0, [fp, #-4]
   21efc:	b	21f28 <main@@Base+0xe2ac>
   21f00:	b	21f10 <main@@Base+0xe294>
   21f04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21f08:	str	r0, [fp, #-4]
   21f0c:	b	21f28 <main@@Base+0xe2ac>
   21f10:	b	21f20 <main@@Base+0xe2a4>
   21f14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21f18:	str	r0, [fp, #-4]
   21f1c:	b	21f28 <main@@Base+0xe2ac>
   21f20:	ldr	r0, [fp, #-12]
   21f24:	str	r0, [fp, #-4]
   21f28:	ldr	r0, [fp, #-4]
   21f2c:	mov	sp, fp
   21f30:	pop	{fp, pc}
   21f34:	push	{fp, lr}
   21f38:	mov	fp, sp
   21f3c:	sub	sp, sp, #32
   21f40:	ldr	ip, [fp, #8]
   21f44:	str	r0, [fp, #-8]
   21f48:	str	r1, [fp, #-12]
   21f4c:	str	r2, [sp, #16]
   21f50:	strb	r3, [sp, #15]
   21f54:	ldr	r0, [fp, #8]
   21f58:	mov	r1, #0
   21f5c:	str	r1, [r0]
   21f60:	ldrb	r0, [sp, #15]
   21f64:	mov	r1, r0
   21f68:	cmp	r0, #0
   21f6c:	str	ip, [sp, #8]
   21f70:	str	r1, [sp, #4]
   21f74:	beq	21fdc <main@@Base+0xe360>
   21f78:	b	21f7c <main@@Base+0xe300>
   21f7c:	ldr	r0, [sp, #4]
   21f80:	cmp	r0, #2
   21f84:	beq	21ff4 <main@@Base+0xe378>
   21f88:	b	21f8c <main@@Base+0xe310>
   21f8c:	ldr	r0, [sp, #4]
   21f90:	cmp	r0, #8
   21f94:	beq	22010 <main@@Base+0xe394>
   21f98:	b	21f9c <main@@Base+0xe320>
   21f9c:	ldr	r0, [sp, #4]
   21fa0:	cmp	r0, #9
   21fa4:	beq	2202c <main@@Base+0xe3b0>
   21fa8:	b	21fac <main@@Base+0xe330>
   21fac:	ldr	r0, [sp, #4]
   21fb0:	cmp	r0, #10
   21fb4:	beq	22048 <main@@Base+0xe3cc>
   21fb8:	b	21fbc <main@@Base+0xe340>
   21fbc:	ldr	r0, [sp, #4]
   21fc0:	cmp	r0, #11
   21fc4:	beq	22064 <main@@Base+0xe3e8>
   21fc8:	b	21fcc <main@@Base+0xe350>
   21fcc:	ldr	r0, [sp, #4]
   21fd0:	cmp	r0, #255	; 0xff
   21fd4:	beq	22080 <main@@Base+0xe404>
   21fd8:	b	2209c <main@@Base+0xe420>
   21fdc:	ldr	r0, [fp, #-8]
   21fe0:	ldr	r1, [fp, #-12]
   21fe4:	ldr	r2, [sp, #16]
   21fe8:	bl	1e9f4 <main@@Base+0xad78>
   21fec:	str	r0, [fp, #-4]
   21ff0:	b	22134 <main@@Base+0xe4b8>
   21ff4:	ldr	r0, [fp, #-8]
   21ff8:	ldr	r1, [fp, #-12]
   21ffc:	ldr	r2, [sp, #16]
   22000:	ldr	r3, [fp, #8]
   22004:	bl	22228 <main@@Base+0xe5ac>
   22008:	str	r0, [fp, #-12]
   2200c:	b	220e4 <main@@Base+0xe468>
   22010:	ldr	r0, [fp, #-8]
   22014:	ldr	r1, [fp, #-12]
   22018:	ldr	r2, [sp, #16]
   2201c:	ldr	r3, [fp, #8]
   22020:	bl	22564 <main@@Base+0xe8e8>
   22024:	str	r0, [fp, #-12]
   22028:	b	220e4 <main@@Base+0xe468>
   2202c:	ldr	r0, [fp, #-8]
   22030:	ldr	r1, [fp, #-12]
   22034:	ldr	r2, [sp, #16]
   22038:	ldr	r3, [fp, #8]
   2203c:	bl	22630 <main@@Base+0xe9b4>
   22040:	str	r0, [fp, #-12]
   22044:	b	220e4 <main@@Base+0xe468>
   22048:	ldr	r0, [fp, #-8]
   2204c:	ldr	r1, [fp, #-12]
   22050:	ldr	r2, [sp, #16]
   22054:	ldr	r3, [fp, #8]
   22058:	bl	22630 <main@@Base+0xe9b4>
   2205c:	str	r0, [fp, #-12]
   22060:	b	220e4 <main@@Base+0xe468>
   22064:	ldr	r0, [fp, #-8]
   22068:	ldr	r1, [fp, #-12]
   2206c:	ldr	r2, [sp, #16]
   22070:	ldr	r3, [fp, #8]
   22074:	bl	2dfac <flatcc_json_parser_build_string@@Base>
   22078:	str	r0, [fp, #-12]
   2207c:	b	220e4 <main@@Base+0xe468>
   22080:	ldr	r0, [fp, #-8]
   22084:	ldr	r1, [fp, #-12]
   22088:	ldr	r2, [sp, #16]
   2208c:	ldr	r3, [fp, #8]
   22090:	bl	2dfac <flatcc_json_parser_build_string@@Base>
   22094:	str	r0, [fp, #-12]
   22098:	b	220e4 <main@@Base+0xe468>
   2209c:	ldr	r0, [fp, #-8]
   220a0:	ldr	r0, [r0, #8]
   220a4:	and	r0, r0, #1
   220a8:	cmp	r0, #0
   220ac:	bne	220cc <main@@Base+0xe450>
   220b0:	ldr	r0, [fp, #-8]
   220b4:	ldr	r1, [fp, #-12]
   220b8:	ldr	r2, [sp, #16]
   220bc:	movw	r3, #15
   220c0:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   220c4:	str	r0, [fp, #-4]
   220c8:	b	22134 <main@@Base+0xe4b8>
   220cc:	ldr	r0, [fp, #-8]
   220d0:	ldr	r1, [fp, #-12]
   220d4:	ldr	r2, [sp, #16]
   220d8:	bl	2c2c0 <flatcc_json_parser_generic_json@@Base>
   220dc:	str	r0, [fp, #-4]
   220e0:	b	22134 <main@@Base+0xe4b8>
   220e4:	ldr	r0, [fp, #-8]
   220e8:	ldr	r0, [r0, #24]
   220ec:	cmp	r0, #0
   220f0:	beq	22100 <main@@Base+0xe484>
   220f4:	ldr	r0, [fp, #-12]
   220f8:	str	r0, [fp, #-4]
   220fc:	b	22134 <main@@Base+0xe4b8>
   22100:	ldr	r0, [fp, #8]
   22104:	ldr	r0, [r0]
   22108:	cmp	r0, #0
   2210c:	bne	2212c <main@@Base+0xe4b0>
   22110:	ldr	r0, [fp, #-8]
   22114:	ldr	r1, [fp, #-12]
   22118:	ldr	r2, [sp, #16]
   2211c:	movw	r3, #33	; 0x21
   22120:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   22124:	str	r0, [fp, #-4]
   22128:	b	22134 <main@@Base+0xe4b8>
   2212c:	ldr	r0, [fp, #-12]
   22130:	str	r0, [fp, #-4]
   22134:	ldr	r0, [fp, #-4]
   22138:	mov	sp, fp
   2213c:	pop	{fp, pc}
   22140:	sub	sp, sp, #12
   22144:	strb	r0, [sp, #7]
   22148:	ldrb	r0, [sp, #7]
   2214c:	mov	r1, r0
   22150:	cmp	r0, #0
   22154:	str	r1, [sp]
   22158:	beq	221c0 <main@@Base+0xe544>
   2215c:	b	22160 <main@@Base+0xe4e4>
   22160:	ldr	r0, [sp]
   22164:	cmp	r0, #2
   22168:	beq	221cc <main@@Base+0xe550>
   2216c:	b	22170 <main@@Base+0xe4f4>
   22170:	ldr	r0, [sp]
   22174:	cmp	r0, #8
   22178:	beq	221d8 <main@@Base+0xe55c>
   2217c:	b	22180 <main@@Base+0xe504>
   22180:	ldr	r0, [sp]
   22184:	cmp	r0, #9
   22188:	beq	221e4 <main@@Base+0xe568>
   2218c:	b	22190 <main@@Base+0xe514>
   22190:	ldr	r0, [sp]
   22194:	cmp	r0, #10
   22198:	beq	221f0 <main@@Base+0xe574>
   2219c:	b	221a0 <main@@Base+0xe524>
   221a0:	ldr	r0, [sp]
   221a4:	cmp	r0, #11
   221a8:	beq	221fc <main@@Base+0xe580>
   221ac:	b	221b0 <main@@Base+0xe534>
   221b0:	ldr	r0, [sp]
   221b4:	cmp	r0, #255	; 0xff
   221b8:	beq	22208 <main@@Base+0xe58c>
   221bc:	b	22214 <main@@Base+0xe598>
   221c0:	movw	r0, #1
   221c4:	str	r0, [sp, #8]
   221c8:	b	2221c <main@@Base+0xe5a0>
   221cc:	movw	r0, #1
   221d0:	str	r0, [sp, #8]
   221d4:	b	2221c <main@@Base+0xe5a0>
   221d8:	movw	r0, #1
   221dc:	str	r0, [sp, #8]
   221e0:	b	2221c <main@@Base+0xe5a0>
   221e4:	movw	r0, #1
   221e8:	str	r0, [sp, #8]
   221ec:	b	2221c <main@@Base+0xe5a0>
   221f0:	movw	r0, #1
   221f4:	str	r0, [sp, #8]
   221f8:	b	2221c <main@@Base+0xe5a0>
   221fc:	movw	r0, #1
   22200:	str	r0, [sp, #8]
   22204:	b	2221c <main@@Base+0xe5a0>
   22208:	movw	r0, #1
   2220c:	str	r0, [sp, #8]
   22210:	b	2221c <main@@Base+0xe5a0>
   22214:	movw	r0, #0
   22218:	str	r0, [sp, #8]
   2221c:	ldr	r0, [sp, #8]
   22220:	add	sp, sp, #12
   22224:	bx	lr
   22228:	push	{fp, lr}
   2222c:	mov	fp, sp
   22230:	sub	sp, sp, #56	; 0x38
   22234:	str	r0, [fp, #-8]
   22238:	str	r1, [fp, #-12]
   2223c:	str	r2, [fp, #-16]
   22240:	str	r3, [fp, #-20]	; 0xffffffec
   22244:	ldr	r0, [fp, #-20]	; 0xffffffec
   22248:	movw	r1, #0
   2224c:	str	r1, [r0]
   22250:	ldr	r0, [fp, #-8]
   22254:	ldr	r0, [r0]
   22258:	movw	r1, #1
   2225c:	bl	26068 <flatcc_builder_start_table@@Base>
   22260:	cmp	r0, #0
   22264:	beq	2226c <main@@Base+0xe5f0>
   22268:	b	2253c <main@@Base+0xe8c0>
   2226c:	ldr	r0, [fp, #-8]
   22270:	ldr	r1, [fp, #-12]
   22274:	ldr	r2, [fp, #-16]
   22278:	sub	r3, fp, #24
   2227c:	bl	17b1c <main@@Base+0x3ea0>
   22280:	str	r0, [fp, #-12]
   22284:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22288:	cmp	r0, #0
   2228c:	beq	224fc <main@@Base+0xe880>
   22290:	ldr	r0, [fp, #-8]
   22294:	ldr	r1, [fp, #-12]
   22298:	ldr	r2, [fp, #-16]
   2229c:	bl	17c00 <main@@Base+0x3f84>
   222a0:	str	r0, [fp, #-12]
   222a4:	ldr	r0, [fp, #-12]
   222a8:	ldr	r1, [fp, #-16]
   222ac:	bl	17cac <main@@Base+0x4030>
   222b0:	str	r1, [sp, #12]
   222b4:	str	r0, [sp, #8]
   222b8:	ldr	r0, [sp, #8]
   222bc:	ldr	r1, [sp, #12]
   222c0:	movw	r2, #28530	; 0x6f72
   222c4:	movt	r2, #29559	; 0x7377
   222c8:	eor	r1, r1, r2
   222cc:	movw	r2, #24948	; 0x6174
   222d0:	movt	r2, #25695	; 0x645f
   222d4:	eor	r0, r0, r2
   222d8:	orr	r0, r0, r1
   222dc:	cmp	r0, #0
   222e0:	bne	224cc <main@@Base+0xe850>
   222e4:	b	222e8 <main@@Base+0xe66c>
   222e8:	ldr	r0, [fp, #-12]
   222ec:	add	r0, r0, #8
   222f0:	str	r0, [fp, #-12]
   222f4:	ldr	r0, [fp, #-12]
   222f8:	ldr	r1, [fp, #-16]
   222fc:	bl	17cac <main@@Base+0x4030>
   22300:	str	r1, [sp, #12]
   22304:	str	r0, [sp, #8]
   22308:	ldr	r0, [sp, #8]
   2230c:	ldr	r1, [sp, #12]
   22310:	movw	lr, #25451	; 0x636b
   22314:	movt	lr, #29793	; 0x7461
   22318:	eor	r1, r1, lr
   2231c:	movw	lr, #24941	; 0x616d
   22320:	movt	lr, #24420	; 0x5f64
   22324:	eor	r0, r0, lr
   22328:	orr	r0, r0, r1
   2232c:	cmp	r0, #0
   22330:	bne	224b4 <main@@Base+0xe838>
   22334:	b	22338 <main@@Base+0xe6bc>
   22338:	ldr	r0, [fp, #-12]
   2233c:	add	r0, r0, #8
   22340:	str	r0, [fp, #-12]
   22344:	ldr	r0, [fp, #-12]
   22348:	ldr	r1, [fp, #-16]
   2234c:	bl	17cac <main@@Base+0x4030>
   22350:	str	r1, [sp, #12]
   22354:	str	r0, [sp, #8]
   22358:	ldr	r0, [sp, #12]
   2235c:	bic	r0, r0, #255	; 0xff
   22360:	movw	r1, #25856	; 0x6500
   22364:	movt	r1, #24935	; 0x6167
   22368:	teq	r0, r1
   2236c:	bne	2249c <main@@Base+0xe820>
   22370:	b	22374 <main@@Base+0xe6f8>
   22374:	ldr	r0, [fp, #-8]
   22378:	ldr	r1, [fp, #-12]
   2237c:	str	r1, [sp, #16]
   22380:	ldr	r2, [fp, #-16]
   22384:	movw	r3, #3
   22388:	bl	17ce4 <main@@Base+0x4068>
   2238c:	str	r0, [fp, #-12]
   22390:	ldr	r0, [sp, #16]
   22394:	ldr	r1, [fp, #-12]
   22398:	cmp	r0, r1
   2239c:	beq	22484 <main@@Base+0xe808>
   223a0:	movw	r0, #0
   223a4:	str	r0, [sp, #4]
   223a8:	ldr	r0, [fp, #-8]
   223ac:	ldr	r1, [fp, #-12]
   223b0:	str	r1, [sp, #16]
   223b4:	ldr	r2, [fp, #-16]
   223b8:	add	r3, sp, #4
   223bc:	bl	1c0d0 <main@@Base+0x8454>
   223c0:	str	r0, [fp, #-12]
   223c4:	ldr	r0, [sp, #16]
   223c8:	ldr	r1, [fp, #-12]
   223cc:	cmp	r0, r1
   223d0:	bne	22424 <main@@Base+0xe7a8>
   223d4:	ldr	r0, [pc, #388]	; 22560 <main@@Base+0xe8e4>
   223d8:	add	r3, pc, r0
   223dc:	ldr	r0, [fp, #-8]
   223e0:	ldr	r1, [fp, #-12]
   223e4:	str	r1, [sp, #16]
   223e8:	ldr	r2, [fp, #-16]
   223ec:	add	ip, sp, #4
   223f0:	str	ip, [sp]
   223f4:	bl	1c1a8 <main@@Base+0x852c>
   223f8:	str	r0, [fp, #-12]
   223fc:	ldr	r0, [fp, #-12]
   22400:	ldr	r1, [sp, #16]
   22404:	cmp	r0, r1
   22408:	beq	2241c <main@@Base+0xe7a0>
   2240c:	ldr	r0, [fp, #-12]
   22410:	ldr	r1, [fp, #-16]
   22414:	cmp	r0, r1
   22418:	bne	22420 <main@@Base+0xe7a4>
   2241c:	b	2253c <main@@Base+0xe8c0>
   22420:	b	22424 <main@@Base+0xe7a8>
   22424:	ldr	r0, [sp, #4]
   22428:	cmp	r0, #0
   2242c:	bne	22444 <main@@Base+0xe7c8>
   22430:	ldr	r0, [fp, #-8]
   22434:	ldr	r0, [r0, #8]
   22438:	and	r0, r0, #2
   2243c:	cmp	r0, #0
   22440:	beq	22480 <main@@Base+0xe804>
   22444:	ldr	r0, [fp, #-8]
   22448:	ldr	r0, [r0]
   2244c:	movw	r1, #0
   22450:	movw	r2, #4
   22454:	movw	r3, #4
   22458:	uxth	r3, r3
   2245c:	bl	27920 <flatcc_builder_table_add@@Base>
   22460:	str	r0, [sp, #28]
   22464:	movw	r1, #0
   22468:	cmp	r0, r1
   2246c:	bne	22474 <main@@Base+0xe7f8>
   22470:	b	2253c <main@@Base+0xe8c0>
   22474:	ldr	r0, [sp, #28]
   22478:	ldr	r1, [sp, #4]
   2247c:	bl	1c3d0 <main@@Base+0x8754>
   22480:	b	22498 <main@@Base+0xe81c>
   22484:	ldr	r0, [fp, #-8]
   22488:	ldr	r1, [fp, #-12]
   2248c:	ldr	r2, [fp, #-16]
   22490:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   22494:	str	r0, [fp, #-12]
   22498:	b	224b0 <main@@Base+0xe834>
   2249c:	ldr	r0, [fp, #-8]
   224a0:	ldr	r1, [fp, #-12]
   224a4:	ldr	r2, [fp, #-16]
   224a8:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   224ac:	str	r0, [fp, #-12]
   224b0:	b	224c8 <main@@Base+0xe84c>
   224b4:	ldr	r0, [fp, #-8]
   224b8:	ldr	r1, [fp, #-12]
   224bc:	ldr	r2, [fp, #-16]
   224c0:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   224c4:	str	r0, [fp, #-12]
   224c8:	b	224e0 <main@@Base+0xe864>
   224cc:	ldr	r0, [fp, #-8]
   224d0:	ldr	r1, [fp, #-12]
   224d4:	ldr	r2, [fp, #-16]
   224d8:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   224dc:	str	r0, [fp, #-12]
   224e0:	ldr	r0, [fp, #-8]
   224e4:	ldr	r1, [fp, #-12]
   224e8:	ldr	r2, [fp, #-16]
   224ec:	sub	r3, fp, #24
   224f0:	bl	1d02c <main@@Base+0x93b0>
   224f4:	str	r0, [fp, #-12]
   224f8:	b	22284 <main@@Base+0xe608>
   224fc:	ldr	r0, [fp, #-8]
   22500:	ldr	r0, [r0, #24]
   22504:	cmp	r0, #0
   22508:	beq	22510 <main@@Base+0xe894>
   2250c:	b	2253c <main@@Base+0xe8c0>
   22510:	ldr	r0, [fp, #-8]
   22514:	ldr	r0, [r0]
   22518:	bl	26ce0 <flatcc_builder_end_table@@Base>
   2251c:	ldr	lr, [fp, #-20]	; 0xffffffec
   22520:	str	r0, [lr]
   22524:	cmp	r0, #0
   22528:	bne	22530 <main@@Base+0xe8b4>
   2252c:	b	2253c <main@@Base+0xe8c0>
   22530:	ldr	r0, [fp, #-12]
   22534:	str	r0, [fp, #-4]
   22538:	b	22554 <main@@Base+0xe8d8>
   2253c:	ldr	r0, [fp, #-8]
   22540:	ldr	r1, [fp, #-12]
   22544:	ldr	r2, [fp, #-16]
   22548:	movw	r3, #33	; 0x21
   2254c:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   22550:	str	r0, [fp, #-4]
   22554:	ldr	r0, [fp, #-4]
   22558:	mov	sp, fp
   2255c:	pop	{fp, pc}
   22560:	andeq	r1, r2, r4, lsr pc
   22564:	push	{fp, lr}
   22568:	mov	fp, sp
   2256c:	sub	sp, sp, #24
   22570:	str	r0, [fp, #-8]
   22574:	str	r1, [sp, #12]
   22578:	str	r2, [sp, #8]
   2257c:	str	r3, [sp, #4]
   22580:	ldr	r0, [sp, #4]
   22584:	movw	r1, #0
   22588:	str	r1, [r0]
   2258c:	ldr	r0, [fp, #-8]
   22590:	ldr	r0, [r0]
   22594:	movw	r1, #2
   22598:	movw	r2, #2
   2259c:	uxth	r2, r2
   225a0:	bl	24ea4 <flatcc_builder_start_struct@@Base>
   225a4:	str	r0, [sp]
   225a8:	movw	r1, #0
   225ac:	cmp	r0, r1
   225b0:	bne	225b8 <main@@Base+0xe93c>
   225b4:	b	2260c <main@@Base+0xe990>
   225b8:	ldr	r0, [fp, #-8]
   225bc:	ldr	r1, [sp, #12]
   225c0:	ldr	r2, [sp, #8]
   225c4:	ldr	r3, [sp]
   225c8:	bl	226fc <main@@Base+0xea80>
   225cc:	str	r0, [sp, #12]
   225d0:	ldr	r0, [sp, #12]
   225d4:	ldr	r1, [sp, #8]
   225d8:	cmp	r0, r1
   225dc:	beq	225fc <main@@Base+0xe980>
   225e0:	ldr	r0, [fp, #-8]
   225e4:	ldr	r0, [r0]
   225e8:	bl	2504c <flatcc_builder_end_struct@@Base>
   225ec:	ldr	lr, [sp, #4]
   225f0:	str	r0, [lr]
   225f4:	cmp	r0, #0
   225f8:	bne	22600 <main@@Base+0xe984>
   225fc:	b	2260c <main@@Base+0xe990>
   22600:	ldr	r0, [sp, #12]
   22604:	str	r0, [fp, #-4]
   22608:	b	22624 <main@@Base+0xe9a8>
   2260c:	ldr	r0, [fp, #-8]
   22610:	ldr	r1, [sp, #12]
   22614:	ldr	r2, [sp, #8]
   22618:	movw	r3, #33	; 0x21
   2261c:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   22620:	str	r0, [fp, #-4]
   22624:	ldr	r0, [fp, #-4]
   22628:	mov	sp, fp
   2262c:	pop	{fp, pc}
   22630:	push	{fp, lr}
   22634:	mov	fp, sp
   22638:	sub	sp, sp, #24
   2263c:	str	r0, [fp, #-8]
   22640:	str	r1, [sp, #12]
   22644:	str	r2, [sp, #8]
   22648:	str	r3, [sp, #4]
   2264c:	ldr	r0, [sp, #4]
   22650:	movw	r1, #0
   22654:	str	r1, [r0]
   22658:	ldr	r0, [fp, #-8]
   2265c:	ldr	r0, [r0]
   22660:	movw	r1, #4
   22664:	movw	r2, #4
   22668:	uxth	r2, r2
   2266c:	bl	24ea4 <flatcc_builder_start_struct@@Base>
   22670:	str	r0, [sp]
   22674:	movw	r1, #0
   22678:	cmp	r0, r1
   2267c:	bne	22684 <main@@Base+0xea08>
   22680:	b	226d8 <main@@Base+0xea5c>
   22684:	ldr	r0, [fp, #-8]
   22688:	ldr	r1, [sp, #12]
   2268c:	ldr	r2, [sp, #8]
   22690:	ldr	r3, [sp]
   22694:	bl	22d30 <main@@Base+0xf0b4>
   22698:	str	r0, [sp, #12]
   2269c:	ldr	r0, [sp, #12]
   226a0:	ldr	r1, [sp, #8]
   226a4:	cmp	r0, r1
   226a8:	beq	226c8 <main@@Base+0xea4c>
   226ac:	ldr	r0, [fp, #-8]
   226b0:	ldr	r0, [r0]
   226b4:	bl	2504c <flatcc_builder_end_struct@@Base>
   226b8:	ldr	lr, [sp, #4]
   226bc:	str	r0, [lr]
   226c0:	cmp	r0, #0
   226c4:	bne	226cc <main@@Base+0xea50>
   226c8:	b	226d8 <main@@Base+0xea5c>
   226cc:	ldr	r0, [sp, #12]
   226d0:	str	r0, [fp, #-4]
   226d4:	b	226f0 <main@@Base+0xea74>
   226d8:	ldr	r0, [fp, #-8]
   226dc:	ldr	r1, [sp, #12]
   226e0:	ldr	r2, [sp, #8]
   226e4:	movw	r3, #33	; 0x21
   226e8:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   226ec:	str	r0, [fp, #-4]
   226f0:	ldr	r0, [fp, #-4]
   226f4:	mov	sp, fp
   226f8:	pop	{fp, pc}
   226fc:	push	{fp, lr}
   22700:	mov	fp, sp
   22704:	sub	sp, sp, #56	; 0x38
   22708:	str	r0, [fp, #-8]
   2270c:	str	r1, [fp, #-12]
   22710:	str	r2, [fp, #-16]
   22714:	str	r3, [fp, #-20]	; 0xffffffec
   22718:	ldr	r0, [fp, #-8]
   2271c:	ldr	r1, [fp, #-12]
   22720:	ldr	r2, [fp, #-16]
   22724:	sub	r3, fp, #24
   22728:	bl	17b1c <main@@Base+0x3ea0>
   2272c:	str	r0, [fp, #-12]
   22730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22734:	cmp	r0, #0
   22738:	beq	228fc <main@@Base+0xec80>
   2273c:	ldr	r0, [fp, #-8]
   22740:	ldr	r1, [fp, #-12]
   22744:	ldr	r2, [fp, #-16]
   22748:	bl	17c00 <main@@Base+0x3f84>
   2274c:	str	r0, [fp, #-12]
   22750:	ldr	r0, [fp, #-12]
   22754:	ldr	r1, [fp, #-16]
   22758:	bl	17cac <main@@Base+0x4030>
   2275c:	str	r1, [sp, #12]
   22760:	str	r0, [sp, #8]
   22764:	ldr	r0, [sp, #8]
   22768:	ldr	r1, [sp, #12]
   2276c:	movw	r2, #26994	; 0x6972
   22770:	movt	r2, #26721	; 0x6861
   22774:	eor	r1, r1, r2
   22778:	movw	r2, #25966	; 0x656e
   2277c:	movt	r2, #24428	; 0x5f6c
   22780:	eor	r0, r0, r2
   22784:	orr	r0, r0, r1
   22788:	cmp	r0, #0
   2278c:	bne	228cc <main@@Base+0xec50>
   22790:	b	22794 <main@@Base+0xeb18>
   22794:	ldr	r0, [fp, #-12]
   22798:	add	r0, r0, #8
   2279c:	str	r0, [fp, #-12]
   227a0:	ldr	r0, [fp, #-12]
   227a4:	ldr	r1, [fp, #-16]
   227a8:	bl	17cac <main@@Base+0x4030>
   227ac:	str	r1, [sp, #12]
   227b0:	str	r0, [sp, #8]
   227b4:	ldr	r0, [sp, #12]
   227b8:	bic	r0, r0, #255	; 0xff
   227bc:	movw	r1, #26624	; 0x6800
   227c0:	movt	r1, #26484	; 0x6774
   227c4:	teq	r0, r1
   227c8:	bne	228b4 <main@@Base+0xec38>
   227cc:	b	227d0 <main@@Base+0xeb54>
   227d0:	ldr	r0, [fp, #-8]
   227d4:	ldr	r1, [fp, #-12]
   227d8:	str	r1, [sp, #20]
   227dc:	ldr	r2, [fp, #-16]
   227e0:	movw	r3, #3
   227e4:	bl	17ce4 <main@@Base+0x4068>
   227e8:	str	r0, [fp, #-12]
   227ec:	ldr	r0, [sp, #20]
   227f0:	ldr	r1, [fp, #-12]
   227f4:	cmp	r0, r1
   227f8:	beq	2289c <main@@Base+0xec20>
   227fc:	movw	r0, #0
   22800:	strh	r0, [sp, #6]
   22804:	ldr	r0, [fp, #-20]	; 0xffffffec
   22808:	add	r0, r0, #0
   2280c:	str	r0, [sp, #24]
   22810:	ldr	r0, [fp, #-8]
   22814:	ldr	r1, [fp, #-12]
   22818:	str	r1, [sp, #20]
   2281c:	ldr	r2, [fp, #-16]
   22820:	add	r3, sp, #6
   22824:	bl	22930 <main@@Base+0xecb4>
   22828:	str	r0, [fp, #-12]
   2282c:	ldr	r0, [sp, #20]
   22830:	ldr	r1, [fp, #-12]
   22834:	cmp	r0, r1
   22838:	bne	2288c <main@@Base+0xec10>
   2283c:	ldr	r0, [pc, #232]	; 2292c <main@@Base+0xecb0>
   22840:	add	r3, pc, r0
   22844:	ldr	r0, [fp, #-8]
   22848:	ldr	r1, [fp, #-12]
   2284c:	str	r1, [sp, #20]
   22850:	ldr	r2, [fp, #-16]
   22854:	add	ip, sp, #6
   22858:	str	ip, [sp]
   2285c:	bl	22a0c <main@@Base+0xed90>
   22860:	str	r0, [fp, #-12]
   22864:	ldr	r0, [fp, #-12]
   22868:	ldr	r1, [sp, #20]
   2286c:	cmp	r0, r1
   22870:	beq	22884 <main@@Base+0xec08>
   22874:	ldr	r0, [fp, #-12]
   22878:	ldr	r1, [fp, #-16]
   2287c:	cmp	r0, r1
   22880:	bne	22888 <main@@Base+0xec0c>
   22884:	b	22908 <main@@Base+0xec8c>
   22888:	b	2288c <main@@Base+0xec10>
   2288c:	ldr	r0, [sp, #24]
   22890:	ldrh	r1, [sp, #6]
   22894:	bl	22c38 <main@@Base+0xefbc>
   22898:	b	228b0 <main@@Base+0xec34>
   2289c:	ldr	r0, [fp, #-8]
   228a0:	ldr	r1, [fp, #-12]
   228a4:	ldr	r2, [fp, #-16]
   228a8:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   228ac:	str	r0, [fp, #-12]
   228b0:	b	228c8 <main@@Base+0xec4c>
   228b4:	ldr	r0, [fp, #-8]
   228b8:	ldr	r1, [fp, #-12]
   228bc:	ldr	r2, [fp, #-16]
   228c0:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   228c4:	str	r0, [fp, #-12]
   228c8:	b	228e0 <main@@Base+0xec64>
   228cc:	ldr	r0, [fp, #-8]
   228d0:	ldr	r1, [fp, #-12]
   228d4:	ldr	r2, [fp, #-16]
   228d8:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   228dc:	str	r0, [fp, #-12]
   228e0:	ldr	r0, [fp, #-8]
   228e4:	ldr	r1, [fp, #-12]
   228e8:	ldr	r2, [fp, #-16]
   228ec:	sub	r3, fp, #24
   228f0:	bl	1d02c <main@@Base+0x93b0>
   228f4:	str	r0, [fp, #-12]
   228f8:	b	22730 <main@@Base+0xeab4>
   228fc:	ldr	r0, [fp, #-12]
   22900:	str	r0, [fp, #-4]
   22904:	b	22920 <main@@Base+0xeca4>
   22908:	ldr	r0, [fp, #-8]
   2290c:	ldr	r1, [fp, #-12]
   22910:	ldr	r2, [fp, #-16]
   22914:	movw	r3, #33	; 0x21
   22918:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2291c:	str	r0, [fp, #-4]
   22920:	ldr	r0, [fp, #-4]
   22924:	mov	sp, fp
   22928:	pop	{fp, pc}
   2292c:	ldrdeq	r1, [r2], -r8
   22930:	push	{r4, r5, fp, lr}
   22934:	add	fp, sp, #8
   22938:	sub	sp, sp, #56	; 0x38
   2293c:	str	r0, [fp, #-16]
   22940:	str	r1, [fp, #-20]	; 0xffffffec
   22944:	str	r2, [fp, #-24]	; 0xffffffe8
   22948:	str	r3, [fp, #-28]	; 0xffffffe4
   2294c:	mov	r0, #0
   22950:	str	r0, [sp, #28]
   22954:	str	r0, [sp, #24]
   22958:	movw	r0, #0
   2295c:	str	r0, [sp, #20]
   22960:	ldr	r0, [fp, #-20]	; 0xffffffec
   22964:	str	r0, [sp, #16]
   22968:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2296c:	movw	r1, #0
   22970:	strh	r1, [r0]
   22974:	ldr	r0, [fp, #-20]	; 0xffffffec
   22978:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2297c:	cmp	r0, r1
   22980:	bne	22990 <main@@Base+0xed14>
   22984:	ldr	r0, [fp, #-20]	; 0xffffffec
   22988:	str	r0, [fp, #-12]
   2298c:	b	22a00 <main@@Base+0xed84>
   22990:	ldr	r0, [fp, #-16]
   22994:	ldr	r1, [fp, #-20]	; 0xffffffec
   22998:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2299c:	add	r3, sp, #20
   229a0:	add	ip, sp, #24
   229a4:	str	ip, [sp]
   229a8:	bl	2d564 <flatcc_json_parser_integer@@Base>
   229ac:	str	r0, [fp, #-20]	; 0xffffffec
   229b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   229b4:	ldr	r1, [sp, #16]
   229b8:	cmp	r0, r1
   229bc:	beq	229f8 <main@@Base+0xed7c>
   229c0:	ldr	r0, [fp, #-16]
   229c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   229c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   229cc:	ldr	r3, [sp, #20]
   229d0:	ldr	ip, [sp, #24]
   229d4:	ldr	lr, [sp, #28]
   229d8:	ldr	r4, [fp, #-28]	; 0xffffffe4
   229dc:	mov	r5, sp
   229e0:	str	r4, [r5, #8]
   229e4:	str	lr, [r5, #4]
   229e8:	str	ip, [r5]
   229ec:	bl	22c64 <main@@Base+0xefe8>
   229f0:	str	r0, [fp, #-12]
   229f4:	b	22a00 <main@@Base+0xed84>
   229f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   229fc:	str	r0, [fp, #-12]
   22a00:	ldr	r0, [fp, #-12]
   22a04:	sub	sp, fp, #8
   22a08:	pop	{r4, r5, fp, pc}
   22a0c:	push	{r4, r5, r6, sl, fp, lr}
   22a10:	add	fp, sp, #16
   22a14:	sub	sp, sp, #88	; 0x58
   22a18:	ldr	ip, [fp, #8]
   22a1c:	str	r0, [fp, #-24]	; 0xffffffe8
   22a20:	str	r1, [fp, #-28]	; 0xffffffe4
   22a24:	str	r2, [fp, #-32]	; 0xffffffe0
   22a28:	str	r3, [fp, #-36]	; 0xffffffdc
   22a2c:	movw	r0, #0
   22a30:	strh	r0, [fp, #-46]	; 0xffffffd2
   22a34:	movw	r1, #0
   22a38:	str	r1, [sp, #36]	; 0x24
   22a3c:	ldr	r1, [fp, #8]
   22a40:	strh	r0, [r1]
   22a44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22a48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22a4c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22a50:	str	ip, [sp, #32]
   22a54:	bl	1e7b4 <main@@Base+0xab38>
   22a58:	str	r0, [fp, #-28]	; 0xffffffe4
   22a5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22a60:	ldr	r1, [fp, #-32]	; 0xffffffe0
   22a64:	cmp	r0, r1
   22a68:	bne	22a78 <main@@Base+0xedfc>
   22a6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22a70:	str	r0, [fp, #-20]	; 0xffffffec
   22a74:	b	22c2c <main@@Base+0xefb0>
   22a78:	b	22a7c <main@@Base+0xee00>
   22a7c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22a80:	str	r0, [fp, #-40]	; 0xffffffd8
   22a84:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22a88:	ldr	r0, [r0]
   22a8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22a90:	ldr	r2, [fp, #-28]	; 0xffffffe4
   22a94:	str	r2, [fp, #-44]	; 0xffffffd4
   22a98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   22a9c:	str	r0, [sp, #28]
   22aa0:	mov	r0, r1
   22aa4:	mov	r1, r2
   22aa8:	mov	r2, r3
   22aac:	add	r3, sp, #44	; 0x2c
   22ab0:	add	ip, sp, #48	; 0x30
   22ab4:	str	ip, [sp]
   22ab8:	add	ip, sp, #40	; 0x28
   22abc:	str	ip, [sp, #4]
   22ac0:	ldr	ip, [sp, #28]
   22ac4:	blx	ip
   22ac8:	str	r0, [fp, #-28]	; 0xffffffe4
   22acc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22ad0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   22ad4:	cmp	r0, r1
   22ad8:	bne	22ae8 <main@@Base+0xee6c>
   22adc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22ae0:	str	r0, [fp, #-20]	; 0xffffffec
   22ae4:	b	22c2c <main@@Base+0xefb0>
   22ae8:	b	22aec <main@@Base+0xee70>
   22aec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22af0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   22af4:	cmp	r0, r1
   22af8:	movw	r0, #0
   22afc:	str	r0, [sp, #24]
   22b00:	bne	22b28 <main@@Base+0xeeac>
   22b04:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22b08:	add	r1, r0, #4
   22b0c:	str	r1, [fp, #-40]	; 0xffffffd8
   22b10:	ldr	r0, [r0, #4]
   22b14:	movw	r1, #0
   22b18:	cmp	r0, r1
   22b1c:	movw	r0, #0
   22b20:	movne	r0, #1
   22b24:	str	r0, [sp, #24]
   22b28:	ldr	r0, [sp, #24]
   22b2c:	tst	r0, #1
   22b30:	bne	22a84 <main@@Base+0xee08>
   22b34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22b38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22b3c:	cmp	r0, r1
   22b40:	bne	22b60 <main@@Base+0xeee4>
   22b44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22b48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22b4c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22b50:	movw	r3, #23
   22b54:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   22b58:	str	r0, [fp, #-20]	; 0xffffffec
   22b5c:	b	22c2c <main@@Base+0xefb0>
   22b60:	ldr	r0, [sp, #36]	; 0x24
   22b64:	add	r1, r0, #1
   22b68:	str	r1, [sp, #36]	; 0x24
   22b6c:	cmp	r0, #0
   22b70:	beq	22ba0 <main@@Base+0xef24>
   22b74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22b78:	ldr	r0, [r0, #12]
   22b7c:	cmp	r0, #0
   22b80:	beq	22ba0 <main@@Base+0xef24>
   22b84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22b88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22b8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22b90:	movw	r3, #14
   22b94:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   22b98:	str	r0, [fp, #-20]	; 0xffffffec
   22b9c:	b	22c2c <main@@Base+0xefb0>
   22ba0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22ba4:	mov	r1, r0
   22ba8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22bac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22bb0:	ldr	ip, [sp, #44]	; 0x2c
   22bb4:	ldr	lr, [sp, #48]	; 0x30
   22bb8:	ldr	r4, [sp, #52]	; 0x34
   22bbc:	mov	r5, sp
   22bc0:	sub	r6, fp, #46	; 0x2e
   22bc4:	str	r6, [r5, #8]
   22bc8:	str	r4, [r5, #4]
   22bcc:	str	lr, [r5]
   22bd0:	str	r0, [sp, #20]
   22bd4:	mov	r0, r2
   22bd8:	str	r1, [sp, #16]
   22bdc:	mov	r1, r3
   22be0:	ldr	r2, [sp, #20]
   22be4:	mov	r3, ip
   22be8:	bl	22c64 <main@@Base+0xefe8>
   22bec:	ldr	r1, [sp, #16]
   22bf0:	cmp	r1, r0
   22bf4:	bne	22c04 <main@@Base+0xef88>
   22bf8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22bfc:	str	r0, [fp, #-20]	; 0xffffffec
   22c00:	b	22c2c <main@@Base+0xefb0>
   22c04:	ldrh	r0, [fp, #-46]	; 0xffffffd2
   22c08:	ldr	r1, [fp, #8]
   22c0c:	ldrh	r2, [r1]
   22c10:	add	r0, r2, r0
   22c14:	strh	r0, [r1]
   22c18:	ldr	r0, [sp, #40]	; 0x28
   22c1c:	cmp	r0, #0
   22c20:	bne	22a7c <main@@Base+0xee00>
   22c24:	ldr	r0, [fp, #-28]	; 0xffffffe4
   22c28:	str	r0, [fp, #-20]	; 0xffffffec
   22c2c:	ldr	r0, [fp, #-20]	; 0xffffffec
   22c30:	sub	sp, fp, #16
   22c34:	pop	{r4, r5, r6, sl, fp, pc}
   22c38:	push	{fp, lr}
   22c3c:	mov	fp, sp
   22c40:	sub	sp, sp, #8
   22c44:	str	r0, [sp, #4]
   22c48:	strh	r1, [sp, #2]
   22c4c:	ldrh	r0, [sp, #2]
   22c50:	bl	22d1c <main@@Base+0xf0a0>
   22c54:	ldr	r1, [sp, #4]
   22c58:	strh	r0, [r1]
   22c5c:	mov	sp, fp
   22c60:	pop	{fp, pc}
   22c64:	push	{r4, sl, fp, lr}
   22c68:	add	fp, sp, #8
   22c6c:	sub	sp, sp, #48	; 0x30
   22c70:	ldr	ip, [fp, #12]
   22c74:	ldr	lr, [fp, #8]
   22c78:	ldr	r4, [fp, #16]
   22c7c:	str	r0, [fp, #-16]
   22c80:	str	r1, [fp, #-20]	; 0xffffffec
   22c84:	str	r2, [fp, #-24]	; 0xffffffe8
   22c88:	str	r3, [sp, #28]
   22c8c:	str	ip, [sp, #20]
   22c90:	str	lr, [sp, #16]
   22c94:	ldr	r0, [sp, #28]
   22c98:	cmp	r0, #0
   22c9c:	str	r4, [sp, #12]
   22ca0:	beq	22cc0 <main@@Base+0xf044>
   22ca4:	ldr	r0, [fp, #-16]
   22ca8:	ldr	r1, [fp, #-20]	; 0xffffffec
   22cac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22cb0:	movw	r3, #8
   22cb4:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   22cb8:	str	r0, [fp, #-12]
   22cbc:	b	22d10 <main@@Base+0xf094>
   22cc0:	ldr	r0, [sp, #16]
   22cc4:	ldr	r1, [sp, #20]
   22cc8:	subs	r0, r0, #65536	; 0x10000
   22ccc:	sbcs	r1, r1, #0
   22cd0:	str	r0, [sp, #8]
   22cd4:	str	r1, [sp, #4]
   22cd8:	bcc	22cfc <main@@Base+0xf080>
   22cdc:	b	22ce0 <main@@Base+0xf064>
   22ce0:	ldr	r0, [fp, #-16]
   22ce4:	ldr	r1, [fp, #-20]	; 0xffffffec
   22ce8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   22cec:	movw	r3, #7
   22cf0:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   22cf4:	str	r0, [fp, #-12]
   22cf8:	b	22d10 <main@@Base+0xf094>
   22cfc:	ldrh	r0, [sp, #16]
   22d00:	ldr	r1, [fp, #16]
   22d04:	strh	r0, [r1]
   22d08:	ldr	r0, [fp, #-20]	; 0xffffffec
   22d0c:	str	r0, [fp, #-12]
   22d10:	ldr	r0, [fp, #-12]
   22d14:	sub	sp, fp, #8
   22d18:	pop	{r4, sl, fp, pc}
   22d1c:	sub	sp, sp, #4
   22d20:	strh	r0, [sp, #2]
   22d24:	ldrh	r0, [sp, #2]
   22d28:	add	sp, sp, #4
   22d2c:	bx	lr
   22d30:	push	{fp, lr}
   22d34:	mov	fp, sp
   22d38:	sub	sp, sp, #56	; 0x38
   22d3c:	str	r0, [fp, #-8]
   22d40:	str	r1, [fp, #-12]
   22d44:	str	r2, [fp, #-16]
   22d48:	str	r3, [fp, #-20]	; 0xffffffec
   22d4c:	ldr	r0, [fp, #-8]
   22d50:	ldr	r1, [fp, #-12]
   22d54:	ldr	r2, [fp, #-16]
   22d58:	sub	r3, fp, #24
   22d5c:	bl	17b1c <main@@Base+0x3ea0>
   22d60:	str	r0, [fp, #-12]
   22d64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22d68:	cmp	r0, #0
   22d6c:	beq	22f30 <main@@Base+0xf2b4>
   22d70:	ldr	r0, [fp, #-8]
   22d74:	ldr	r1, [fp, #-12]
   22d78:	ldr	r2, [fp, #-16]
   22d7c:	bl	17c00 <main@@Base+0x3f84>
   22d80:	str	r0, [fp, #-12]
   22d84:	ldr	r0, [fp, #-12]
   22d88:	ldr	r1, [fp, #-16]
   22d8c:	bl	17cac <main@@Base+0x4030>
   22d90:	str	r1, [sp, #12]
   22d94:	str	r0, [sp, #8]
   22d98:	ldr	r0, [sp, #8]
   22d9c:	ldr	r1, [sp, #12]
   22da0:	movw	r2, #28523	; 0x6f6b
   22da4:	movt	r2, #25199	; 0x626f
   22da8:	eor	r1, r1, r2
   22dac:	movw	r2, #29285	; 0x7265
   22db0:	movt	r2, #29535	; 0x735f
   22db4:	eor	r0, r0, r2
   22db8:	orr	r0, r0, r1
   22dbc:	cmp	r0, #0
   22dc0:	bne	22f00 <main@@Base+0xf284>
   22dc4:	b	22dc8 <main@@Base+0xf14c>
   22dc8:	ldr	r0, [fp, #-12]
   22dcc:	add	r0, r0, #8
   22dd0:	str	r0, [fp, #-12]
   22dd4:	ldr	r0, [fp, #-12]
   22dd8:	ldr	r1, [fp, #-16]
   22ddc:	bl	17cac <main@@Base+0x4030>
   22de0:	str	r1, [sp, #12]
   22de4:	str	r0, [sp, #8]
   22de8:	ldr	r0, [sp, #12]
   22dec:	bfc	r0, #0, #16
   22df0:	movw	r1, #0
   22df4:	movt	r1, #24932	; 0x6164
   22df8:	teq	r0, r1
   22dfc:	bne	22ee8 <main@@Base+0xf26c>
   22e00:	b	22e04 <main@@Base+0xf188>
   22e04:	ldr	r0, [fp, #-8]
   22e08:	ldr	r1, [fp, #-12]
   22e0c:	str	r1, [sp, #20]
   22e10:	ldr	r2, [fp, #-16]
   22e14:	movw	r3, #2
   22e18:	bl	17ce4 <main@@Base+0x4068>
   22e1c:	str	r0, [fp, #-12]
   22e20:	ldr	r0, [sp, #20]
   22e24:	ldr	r1, [fp, #-12]
   22e28:	cmp	r0, r1
   22e2c:	beq	22ed0 <main@@Base+0xf254>
   22e30:	movw	r0, #0
   22e34:	str	r0, [sp, #4]
   22e38:	ldr	r0, [fp, #-20]	; 0xffffffec
   22e3c:	add	r0, r0, #0
   22e40:	str	r0, [sp, #24]
   22e44:	ldr	r0, [fp, #-8]
   22e48:	ldr	r1, [fp, #-12]
   22e4c:	str	r1, [sp, #20]
   22e50:	ldr	r2, [fp, #-16]
   22e54:	add	r3, sp, #4
   22e58:	bl	1c0d0 <main@@Base+0x8454>
   22e5c:	str	r0, [fp, #-12]
   22e60:	ldr	r0, [sp, #20]
   22e64:	ldr	r1, [fp, #-12]
   22e68:	cmp	r0, r1
   22e6c:	bne	22ec0 <main@@Base+0xf244>
   22e70:	ldr	r0, [pc, #232]	; 22f60 <main@@Base+0xf2e4>
   22e74:	add	r3, pc, r0
   22e78:	ldr	r0, [fp, #-8]
   22e7c:	ldr	r1, [fp, #-12]
   22e80:	str	r1, [sp, #20]
   22e84:	ldr	r2, [fp, #-16]
   22e88:	add	ip, sp, #4
   22e8c:	str	ip, [sp]
   22e90:	bl	1c1a8 <main@@Base+0x852c>
   22e94:	str	r0, [fp, #-12]
   22e98:	ldr	r0, [fp, #-12]
   22e9c:	ldr	r1, [sp, #20]
   22ea0:	cmp	r0, r1
   22ea4:	beq	22eb8 <main@@Base+0xf23c>
   22ea8:	ldr	r0, [fp, #-12]
   22eac:	ldr	r1, [fp, #-16]
   22eb0:	cmp	r0, r1
   22eb4:	bne	22ebc <main@@Base+0xf240>
   22eb8:	b	22f3c <main@@Base+0xf2c0>
   22ebc:	b	22ec0 <main@@Base+0xf244>
   22ec0:	ldr	r0, [sp, #24]
   22ec4:	ldr	r1, [sp, #4]
   22ec8:	bl	1c3d0 <main@@Base+0x8754>
   22ecc:	b	22ee4 <main@@Base+0xf268>
   22ed0:	ldr	r0, [fp, #-8]
   22ed4:	ldr	r1, [fp, #-12]
   22ed8:	ldr	r2, [fp, #-16]
   22edc:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   22ee0:	str	r0, [fp, #-12]
   22ee4:	b	22efc <main@@Base+0xf280>
   22ee8:	ldr	r0, [fp, #-8]
   22eec:	ldr	r1, [fp, #-12]
   22ef0:	ldr	r2, [fp, #-16]
   22ef4:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   22ef8:	str	r0, [fp, #-12]
   22efc:	b	22f14 <main@@Base+0xf298>
   22f00:	ldr	r0, [fp, #-8]
   22f04:	ldr	r1, [fp, #-12]
   22f08:	ldr	r2, [fp, #-16]
   22f0c:	bl	2bfbc <flatcc_json_parser_unmatched_symbol@@Base>
   22f10:	str	r0, [fp, #-12]
   22f14:	ldr	r0, [fp, #-8]
   22f18:	ldr	r1, [fp, #-12]
   22f1c:	ldr	r2, [fp, #-16]
   22f20:	sub	r3, fp, #24
   22f24:	bl	1d02c <main@@Base+0x93b0>
   22f28:	str	r0, [fp, #-12]
   22f2c:	b	22d64 <main@@Base+0xf0e8>
   22f30:	ldr	r0, [fp, #-12]
   22f34:	str	r0, [fp, #-4]
   22f38:	b	22f54 <main@@Base+0xf2d8>
   22f3c:	ldr	r0, [fp, #-8]
   22f40:	ldr	r1, [fp, #-12]
   22f44:	ldr	r2, [fp, #-16]
   22f48:	movw	r3, #33	; 0x21
   22f4c:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   22f50:	str	r0, [fp, #-4]
   22f54:	ldr	r0, [fp, #-4]
   22f58:	mov	sp, fp
   22f5c:	pop	{fp, pc}
   22f60:			; <UNDEFINED> instruction: 0x000214b0
   22f64:	push	{r4, sl, fp, lr}
   22f68:	add	fp, sp, #8
   22f6c:	sub	sp, sp, #40	; 0x28
   22f70:	ldr	ip, [fp, #12]
   22f74:	ldr	lr, [fp, #8]
   22f78:	ldr	r4, [fp, #16]
   22f7c:	str	r0, [fp, #-16]
   22f80:	str	r1, [fp, #-20]	; 0xffffffec
   22f84:	str	r2, [sp, #24]
   22f88:	str	r3, [sp, #20]
   22f8c:	str	ip, [sp, #12]
   22f90:	str	lr, [sp, #8]
   22f94:	ldr	r0, [sp, #20]
   22f98:	cmp	r0, #0
   22f9c:	str	r4, [sp, #4]
   22fa0:	beq	22fc0 <main@@Base+0xf344>
   22fa4:	ldr	r0, [fp, #-16]
   22fa8:	ldr	r1, [fp, #-20]	; 0xffffffec
   22fac:	ldr	r2, [sp, #24]
   22fb0:	movw	r3, #8
   22fb4:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   22fb8:	str	r0, [fp, #-12]
   22fbc:	b	22ff4 <main@@Base+0xf378>
   22fc0:	ldr	r0, [sp, #8]
   22fc4:	ldr	r1, [sp, #12]
   22fc8:	orr	r0, r0, r1
   22fcc:	cmp	r0, #0
   22fd0:	movwne	r0, #1
   22fd4:	mvn	r1, #0
   22fd8:	eor	r0, r0, r1
   22fdc:	eor	r0, r0, r1
   22fe0:	and	r0, r0, #1
   22fe4:	ldr	r1, [fp, #16]
   22fe8:	strb	r0, [r1]
   22fec:	ldr	r0, [fp, #-20]	; 0xffffffec
   22ff0:	str	r0, [fp, #-12]
   22ff4:	ldr	r0, [fp, #-12]
   22ff8:	sub	sp, fp, #8
   22ffc:	pop	{r4, sl, fp, pc}
   23000:	sub	sp, sp, #4
   23004:	strb	r0, [sp, #3]
   23008:	ldrb	r0, [sp, #3]
   2300c:	add	sp, sp, #4
   23010:	bx	lr
   23014:	push	{r4, sl, fp, lr}
   23018:	add	fp, sp, #8
   2301c:	sub	sp, sp, #32
   23020:	ldr	ip, [fp, #12]
   23024:	ldr	lr, [fp, #8]
   23028:	ldr	r4, [fp, #16]
   2302c:	str	r0, [fp, #-12]
   23030:	str	r1, [fp, #-16]
   23034:	str	r2, [sp, #20]
   23038:	str	r3, [sp, #16]
   2303c:	str	ip, [sp, #12]
   23040:	str	lr, [sp, #8]
   23044:	ldr	r0, [sp, #16]
   23048:	cmp	r0, #0
   2304c:	str	r4, [sp, #4]
   23050:	beq	23070 <main@@Base+0xf3f4>
   23054:	ldr	r0, [sp, #8]
   23058:	ldr	r1, [sp, #12]
   2305c:	bl	30ea4 <flatcc_json_parser_struct_as_root@@Base+0x1908>
   23060:	vmov	s0, r0
   23064:	vneg.f32	s0, s0
   23068:	vstr	s0, [sp]
   2306c:	b	23084 <main@@Base+0xf408>
   23070:	ldr	r0, [sp, #8]
   23074:	ldr	r1, [sp, #12]
   23078:	bl	30ea4 <flatcc_json_parser_struct_as_root@@Base+0x1908>
   2307c:	vmov	s0, r0
   23080:	vstr	s0, [sp]
   23084:	vldr	s0, [sp]
   23088:	ldr	r0, [fp, #16]
   2308c:	vstr	s0, [r0]
   23090:	ldr	r0, [fp, #-16]
   23094:	sub	sp, fp, #8
   23098:	pop	{r4, sl, fp, pc}
   2309c:	sub	sp, sp, #8
   230a0:	vstr	s0, [sp, #4]
   230a4:	vldr	s0, [sp, #4]
   230a8:	vstr	s0, [sp]
   230ac:	ldr	r0, [sp]
   230b0:	str	r0, [sp]
   230b4:	vldr	s0, [sp]
   230b8:	add	sp, sp, #8
   230bc:	bx	lr
   230c0:	push	{r4, sl, fp, lr}
   230c4:	add	fp, sp, #8
   230c8:	sub	sp, sp, #56	; 0x38
   230cc:	ldr	ip, [fp, #12]
   230d0:	ldr	lr, [fp, #8]
   230d4:	ldr	r4, [fp, #16]
   230d8:	str	r0, [fp, #-16]
   230dc:	str	r1, [fp, #-20]	; 0xffffffec
   230e0:	str	r2, [fp, #-24]	; 0xffffffe8
   230e4:	str	r3, [fp, #-28]	; 0xffffffe4
   230e8:	str	ip, [sp, #28]
   230ec:	str	lr, [sp, #24]
   230f0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   230f4:	cmp	r0, #0
   230f8:	str	r4, [sp, #20]
   230fc:	beq	23150 <main@@Base+0xf4d4>
   23100:	ldr	r0, [sp, #24]
   23104:	ldr	r1, [sp, #28]
   23108:	subs	r0, r0, #-2147483647	; 0x80000001
   2310c:	sbcs	r1, r1, #0
   23110:	str	r0, [sp, #16]
   23114:	str	r1, [sp, #12]
   23118:	bcc	2313c <main@@Base+0xf4c0>
   2311c:	b	23120 <main@@Base+0xf4a4>
   23120:	ldr	r0, [fp, #-16]
   23124:	ldr	r1, [fp, #-20]	; 0xffffffec
   23128:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2312c:	movw	r3, #8
   23130:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   23134:	str	r0, [fp, #-12]
   23138:	b	231a0 <main@@Base+0xf524>
   2313c:	ldr	r0, [sp, #24]
   23140:	rsb	r0, r0, #0
   23144:	ldr	r1, [fp, #16]
   23148:	str	r0, [r1]
   2314c:	b	23198 <main@@Base+0xf51c>
   23150:	ldr	r0, [sp, #24]
   23154:	ldr	r1, [sp, #28]
   23158:	subs	r0, r0, #-2147483648	; 0x80000000
   2315c:	sbcs	r1, r1, #0
   23160:	str	r0, [sp, #8]
   23164:	str	r1, [sp, #4]
   23168:	bcc	2318c <main@@Base+0xf510>
   2316c:	b	23170 <main@@Base+0xf4f4>
   23170:	ldr	r0, [fp, #-16]
   23174:	ldr	r1, [fp, #-20]	; 0xffffffec
   23178:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2317c:	movw	r3, #7
   23180:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   23184:	str	r0, [fp, #-12]
   23188:	b	231a0 <main@@Base+0xf524>
   2318c:	ldr	r0, [sp, #24]
   23190:	ldr	r1, [fp, #16]
   23194:	str	r0, [r1]
   23198:	ldr	r0, [fp, #-20]	; 0xffffffec
   2319c:	str	r0, [fp, #-12]
   231a0:	ldr	r0, [fp, #-12]
   231a4:	sub	sp, fp, #8
   231a8:	pop	{r4, sl, fp, pc}
   231ac:	sub	sp, sp, #4
   231b0:	str	r0, [sp]
   231b4:	ldr	r0, [sp]
   231b8:	add	sp, sp, #4
   231bc:	bx	lr
   231c0:	push	{r4, sl, fp, lr}
   231c4:	add	fp, sp, #8
   231c8:	sub	sp, sp, #48	; 0x30
   231cc:	ldr	ip, [fp, #12]
   231d0:	ldr	lr, [fp, #8]
   231d4:	ldr	r4, [fp, #16]
   231d8:	str	r0, [fp, #-16]
   231dc:	str	r1, [fp, #-20]	; 0xffffffec
   231e0:	str	r2, [fp, #-24]	; 0xffffffe8
   231e4:	str	r3, [sp, #28]
   231e8:	str	ip, [sp, #20]
   231ec:	str	lr, [sp, #16]
   231f0:	ldr	r0, [sp, #28]
   231f4:	cmp	r0, #0
   231f8:	str	r4, [sp, #12]
   231fc:	beq	2325c <main@@Base+0xf5e0>
   23200:	ldr	r0, [sp, #16]
   23204:	ldr	r1, [sp, #20]
   23208:	subs	r0, r0, #1
   2320c:	sbcs	r1, r1, #-2147483648	; 0x80000000
   23210:	str	r0, [sp, #8]
   23214:	str	r1, [sp, #4]
   23218:	bcc	2323c <main@@Base+0xf5c0>
   2321c:	b	23220 <main@@Base+0xf5a4>
   23220:	ldr	r0, [fp, #-16]
   23224:	ldr	r1, [fp, #-20]	; 0xffffffec
   23228:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2322c:	movw	r3, #8
   23230:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   23234:	str	r0, [fp, #-12]
   23238:	b	232a4 <main@@Base+0xf628>
   2323c:	ldr	r0, [sp, #16]
   23240:	ldr	r1, [sp, #20]
   23244:	rsbs	r0, r0, #0
   23248:	rsc	r1, r1, #0
   2324c:	ldr	r2, [fp, #16]
   23250:	str	r0, [r2]
   23254:	str	r1, [r2, #4]
   23258:	b	2329c <main@@Base+0xf620>
   2325c:	ldr	r0, [sp, #20]
   23260:	cmn	r0, #1
   23264:	bgt	23288 <main@@Base+0xf60c>
   23268:	b	2326c <main@@Base+0xf5f0>
   2326c:	ldr	r0, [fp, #-16]
   23270:	ldr	r1, [fp, #-20]	; 0xffffffec
   23274:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23278:	movw	r3, #7
   2327c:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   23280:	str	r0, [fp, #-12]
   23284:	b	232a4 <main@@Base+0xf628>
   23288:	ldr	r0, [sp, #16]
   2328c:	ldr	r1, [sp, #20]
   23290:	ldr	r2, [fp, #16]
   23294:	str	r1, [r2, #4]
   23298:	str	r0, [r2]
   2329c:	ldr	r0, [fp, #-20]	; 0xffffffec
   232a0:	str	r0, [fp, #-12]
   232a4:	ldr	r0, [fp, #-12]
   232a8:	sub	sp, fp, #8
   232ac:	pop	{r4, sl, fp, pc}
   232b0:	sub	sp, sp, #8
   232b4:	str	r0, [sp]
   232b8:	str	r1, [sp, #4]
   232bc:	ldr	r0, [sp]
   232c0:	ldr	r1, [sp, #4]
   232c4:	add	sp, sp, #8
   232c8:	bx	lr
   232cc:	push	{r4, sl, fp, lr}
   232d0:	add	fp, sp, #8
   232d4:	sub	sp, sp, #40	; 0x28
   232d8:	ldr	ip, [fp, #12]
   232dc:	ldr	lr, [fp, #8]
   232e0:	ldr	r4, [fp, #16]
   232e4:	str	r0, [fp, #-16]
   232e8:	str	r1, [fp, #-20]	; 0xffffffec
   232ec:	str	r2, [sp, #24]
   232f0:	str	r3, [sp, #20]
   232f4:	str	ip, [sp, #12]
   232f8:	str	lr, [sp, #8]
   232fc:	ldr	r0, [sp, #20]
   23300:	cmp	r0, #0
   23304:	str	r4, [sp, #4]
   23308:	beq	23328 <main@@Base+0xf6ac>
   2330c:	ldr	r0, [fp, #-16]
   23310:	ldr	r1, [fp, #-20]	; 0xffffffec
   23314:	ldr	r2, [sp, #24]
   23318:	movw	r3, #8
   2331c:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   23320:	str	r0, [fp, #-12]
   23324:	b	23368 <main@@Base+0xf6ec>
   23328:	ldr	r0, [sp, #12]
   2332c:	cmp	r0, #0
   23330:	beq	23354 <main@@Base+0xf6d8>
   23334:	b	23338 <main@@Base+0xf6bc>
   23338:	ldr	r0, [fp, #-16]
   2333c:	ldr	r1, [fp, #-20]	; 0xffffffec
   23340:	ldr	r2, [sp, #24]
   23344:	movw	r3, #7
   23348:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2334c:	str	r0, [fp, #-12]
   23350:	b	23368 <main@@Base+0xf6ec>
   23354:	ldr	r0, [sp, #8]
   23358:	ldr	r1, [fp, #16]
   2335c:	str	r0, [r1]
   23360:	ldr	r0, [fp, #-20]	; 0xffffffec
   23364:	str	r0, [fp, #-12]
   23368:	ldr	r0, [fp, #-12]
   2336c:	sub	sp, fp, #8
   23370:	pop	{r4, sl, fp, pc}
   23374:	sub	sp, sp, #4
   23378:	str	r0, [sp]
   2337c:	ldr	r0, [sp]
   23380:	add	sp, sp, #4
   23384:	bx	lr
   23388:	push	{r4, sl, fp, lr}
   2338c:	add	fp, sp, #8
   23390:	sub	sp, sp, #40	; 0x28
   23394:	ldr	ip, [fp, #12]
   23398:	ldr	lr, [fp, #8]
   2339c:	ldr	r4, [fp, #16]
   233a0:	str	r0, [fp, #-16]
   233a4:	str	r1, [fp, #-20]	; 0xffffffec
   233a8:	str	r2, [sp, #24]
   233ac:	str	r3, [sp, #20]
   233b0:	str	ip, [sp, #12]
   233b4:	str	lr, [sp, #8]
   233b8:	ldr	r0, [sp, #20]
   233bc:	cmp	r0, #0
   233c0:	str	r4, [sp, #4]
   233c4:	beq	233e4 <main@@Base+0xf768>
   233c8:	ldr	r0, [fp, #-16]
   233cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   233d0:	ldr	r2, [sp, #24]
   233d4:	movw	r3, #8
   233d8:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   233dc:	str	r0, [fp, #-12]
   233e0:	b	23400 <main@@Base+0xf784>
   233e4:	ldr	r0, [sp, #8]
   233e8:	ldr	r1, [sp, #12]
   233ec:	ldr	r2, [fp, #16]
   233f0:	str	r1, [r2, #4]
   233f4:	str	r0, [r2]
   233f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   233fc:	str	r0, [fp, #-12]
   23400:	ldr	r0, [fp, #-12]
   23404:	sub	sp, fp, #8
   23408:	pop	{r4, sl, fp, pc}
   2340c:	sub	sp, sp, #8
   23410:	str	r0, [sp]
   23414:	str	r1, [sp, #4]
   23418:	ldr	r0, [sp]
   2341c:	ldr	r1, [sp, #4]
   23420:	add	sp, sp, #8
   23424:	bx	lr
   23428:	push	{r4, sl, fp, lr}
   2342c:	add	fp, sp, #8
   23430:	sub	sp, sp, #40	; 0x28
   23434:	ldr	ip, [fp, #12]
   23438:	ldr	lr, [fp, #8]
   2343c:	ldr	r4, [fp, #16]
   23440:	str	r0, [fp, #-12]
   23444:	str	r1, [fp, #-16]
   23448:	str	r2, [fp, #-20]	; 0xffffffec
   2344c:	str	r3, [sp, #24]
   23450:	str	ip, [sp, #20]
   23454:	str	lr, [sp, #16]
   23458:	ldr	r0, [sp, #24]
   2345c:	cmp	r0, #0
   23460:	str	r4, [sp, #12]
   23464:	beq	23484 <main@@Base+0xf808>
   23468:	ldr	r0, [sp, #16]
   2346c:	ldr	r1, [sp, #20]
   23470:	bl	30c6c <flatcc_json_parser_struct_as_root@@Base+0x16d0>
   23474:	vmov	d16, r0, r1
   23478:	vneg.f64	d16, d16
   2347c:	vstr	d16, [sp]
   23480:	b	23498 <main@@Base+0xf81c>
   23484:	ldr	r0, [sp, #16]
   23488:	ldr	r1, [sp, #20]
   2348c:	bl	30c6c <flatcc_json_parser_struct_as_root@@Base+0x16d0>
   23490:	vmov	d16, r0, r1
   23494:	vstr	d16, [sp]
   23498:	vldr	d16, [sp]
   2349c:	ldr	r0, [fp, #16]
   234a0:	vstr	d16, [r0]
   234a4:	ldr	r0, [fp, #-16]
   234a8:	sub	sp, fp, #8
   234ac:	pop	{r4, sl, fp, pc}
   234b0:	sub	sp, sp, #16
   234b4:	vstr	d0, [sp, #8]
   234b8:	vldr	d0, [sp, #8]
   234bc:	vstr	d0, [sp]
   234c0:	vldr	d0, [sp]
   234c4:	add	sp, sp, #16
   234c8:	bx	lr

000234cc <flatcc_builder_default_alloc@@Base>:
   234cc:	push	{fp, lr}
   234d0:	mov	fp, sp
   234d4:	sub	sp, sp, #40	; 0x28
   234d8:	ldr	ip, [fp, #8]
   234dc:	str	r0, [fp, #-8]
   234e0:	str	r1, [fp, #-12]
   234e4:	str	r2, [fp, #-16]
   234e8:	str	r3, [sp, #20]
   234ec:	ldr	r0, [fp, #-16]
   234f0:	cmp	r0, #0
   234f4:	str	ip, [sp, #8]
   234f8:	bne	2353c <flatcc_builder_default_alloc@@Base+0x70>
   234fc:	ldr	r0, [fp, #-12]
   23500:	ldr	r0, [r0]
   23504:	movw	r1, #0
   23508:	cmp	r0, r1
   2350c:	beq	23530 <flatcc_builder_default_alloc@@Base+0x64>
   23510:	ldr	r0, [fp, #-12]
   23514:	ldr	r0, [r0]
   23518:	bl	12a6c <free@plt>
   2351c:	ldr	r0, [fp, #-12]
   23520:	movw	lr, #0
   23524:	str	lr, [r0]
   23528:	ldr	r0, [fp, #-12]
   2352c:	str	lr, [r0, #4]
   23530:	movw	r0, #0
   23534:	str	r0, [fp, #-4]
   23538:	b	236a8 <flatcc_builder_default_alloc@@Base+0x1dc>
   2353c:	ldr	r0, [fp, #8]
   23540:	sub	r0, r0, #1
   23544:	cmp	r0, #6
   23548:	str	r0, [sp, #4]
   2354c:	bhi	235ac <flatcc_builder_default_alloc@@Base+0xe0>
   23550:	add	r0, pc, #8
   23554:	ldr	r1, [sp, #4]
   23558:	ldr	r2, [r0, r1, lsl #2]
   2355c:	add	pc, r0, r2
   23560:	andeq	r0, r0, ip, lsl r0
   23564:	andeq	r0, r0, ip, asr #32
   23568:	andeq	r0, r0, ip, asr #32
   2356c:	andeq	r0, r0, r4, lsr r0
   23570:	andeq	r0, r0, r8, lsr #32
   23574:	andeq	r0, r0, ip, asr #32
   23578:	andeq	r0, r0, r0, asr #32
   2357c:	movw	r0, #256	; 0x100
   23580:	str	r0, [sp, #12]
   23584:	b	235b4 <flatcc_builder_default_alloc@@Base+0xe8>
   23588:	ldr	r0, [fp, #-16]
   2358c:	str	r0, [sp, #12]
   23590:	b	235b4 <flatcc_builder_default_alloc@@Base+0xe8>
   23594:	movw	r0, #288	; 0x120
   23598:	str	r0, [sp, #12]
   2359c:	b	235b4 <flatcc_builder_default_alloc@@Base+0xe8>
   235a0:	movw	r0, #64	; 0x40
   235a4:	str	r0, [sp, #12]
   235a8:	b	235b4 <flatcc_builder_default_alloc@@Base+0xe8>
   235ac:	movw	r0, #32
   235b0:	str	r0, [sp, #12]
   235b4:	b	235b8 <flatcc_builder_default_alloc@@Base+0xec>
   235b8:	ldr	r0, [sp, #12]
   235bc:	ldr	r1, [fp, #-16]
   235c0:	cmp	r0, r1
   235c4:	bcs	235d8 <flatcc_builder_default_alloc@@Base+0x10c>
   235c8:	ldr	r0, [sp, #12]
   235cc:	lsl	r0, r0, #1
   235d0:	str	r0, [sp, #12]
   235d4:	b	235b8 <flatcc_builder_default_alloc@@Base+0xec>
   235d8:	ldr	r0, [fp, #-16]
   235dc:	ldr	r1, [fp, #-12]
   235e0:	ldr	r1, [r1, #4]
   235e4:	cmp	r0, r1
   235e8:	bhi	23610 <flatcc_builder_default_alloc@@Base+0x144>
   235ec:	ldr	r0, [fp, #-12]
   235f0:	ldr	r0, [r0, #4]
   235f4:	lsr	r0, r0, #1
   235f8:	ldr	r1, [sp, #12]
   235fc:	cmp	r0, r1
   23600:	bcc	23610 <flatcc_builder_default_alloc@@Base+0x144>
   23604:	movw	r0, #0
   23608:	str	r0, [fp, #-4]
   2360c:	b	236a8 <flatcc_builder_default_alloc@@Base+0x1dc>
   23610:	ldr	r0, [fp, #-12]
   23614:	ldr	r0, [r0]
   23618:	ldr	r1, [sp, #12]
   2361c:	bl	12ac0 <realloc@plt>
   23620:	str	r0, [sp, #16]
   23624:	movw	r1, #0
   23628:	cmp	r0, r1
   2362c:	bne	2363c <flatcc_builder_default_alloc@@Base+0x170>
   23630:	mvn	r0, #0
   23634:	str	r0, [fp, #-4]
   23638:	b	236a8 <flatcc_builder_default_alloc@@Base+0x1dc>
   2363c:	ldr	r0, [sp, #20]
   23640:	cmp	r0, #0
   23644:	beq	23688 <flatcc_builder_default_alloc@@Base+0x1bc>
   23648:	ldr	r0, [fp, #-12]
   2364c:	ldr	r0, [r0, #4]
   23650:	ldr	r1, [sp, #12]
   23654:	cmp	r0, r1
   23658:	bcs	23688 <flatcc_builder_default_alloc@@Base+0x1bc>
   2365c:	ldr	r0, [sp, #16]
   23660:	ldr	r1, [fp, #-12]
   23664:	ldr	r1, [r1, #4]
   23668:	add	r0, r0, r1
   2366c:	ldr	r1, [sp, #12]
   23670:	ldr	r2, [fp, #-12]
   23674:	ldr	r2, [r2, #4]
   23678:	sub	r2, r1, r2
   2367c:	movw	r1, #0
   23680:	and	r1, r1, #255	; 0xff
   23684:	bl	12b2c <memset@plt>
   23688:	ldr	r0, [sp, #16]
   2368c:	ldr	r1, [fp, #-12]
   23690:	str	r0, [r1]
   23694:	ldr	r0, [sp, #12]
   23698:	ldr	r1, [fp, #-12]
   2369c:	str	r0, [r1, #4]
   236a0:	movw	r0, #0
   236a4:	str	r0, [fp, #-4]
   236a8:	ldr	r0, [fp, #-4]
   236ac:	mov	sp, fp
   236b0:	pop	{fp, pc}

000236b4 <flatcc_builder_flush_vtable_cache@@Base>:
   236b4:	push	{fp, lr}
   236b8:	mov	fp, sp
   236bc:	sub	sp, sp, #8
   236c0:	str	r0, [sp, #4]
   236c4:	ldr	r0, [sp, #4]
   236c8:	add	r0, r0, #52	; 0x34
   236cc:	add	r0, r0, #40	; 0x28
   236d0:	str	r0, [sp]
   236d4:	ldr	r0, [sp, #4]
   236d8:	ldr	r0, [r0, #116]	; 0x74
   236dc:	cmp	r0, #0
   236e0:	bne	236e8 <flatcc_builder_flush_vtable_cache@@Base+0x34>
   236e4:	b	2371c <flatcc_builder_flush_vtable_cache@@Base+0x68>
   236e8:	ldr	r0, [sp]
   236ec:	ldr	r0, [r0]
   236f0:	ldr	r1, [sp]
   236f4:	ldr	r2, [r1, #4]
   236f8:	movw	r1, #0
   236fc:	and	r1, r1, #255	; 0xff
   23700:	bl	12b2c <memset@plt>
   23704:	ldr	r0, [sp, #4]
   23708:	movw	r1, #16
   2370c:	str	r1, [r0, #124]	; 0x7c
   23710:	ldr	r0, [sp, #4]
   23714:	movw	r1, #0
   23718:	str	r1, [r0, #120]	; 0x78
   2371c:	mov	sp, fp
   23720:	pop	{fp, pc}

00023724 <flatcc_builder_custom_init@@Base>:
   23724:	push	{fp, lr}
   23728:	mov	fp, sp
   2372c:	sub	sp, sp, #24
   23730:	ldr	ip, [fp, #8]
   23734:	str	r0, [fp, #-4]
   23738:	str	r1, [fp, #-8]
   2373c:	str	r2, [sp, #12]
   23740:	str	r3, [sp, #8]
   23744:	ldr	r0, [fp, #-4]
   23748:	movw	r1, #0
   2374c:	and	r1, r1, #255	; 0xff
   23750:	movw	r2, #232	; 0xe8
   23754:	str	ip, [sp, #4]
   23758:	bl	12b2c <memset@plt>
   2375c:	ldr	r0, [fp, #-8]
   23760:	movw	r1, #0
   23764:	cmp	r0, r1
   23768:	bne	23790 <flatcc_builder_custom_init@@Base+0x6c>
   2376c:	ldr	r0, [pc, #116]	; 237e8 <flatcc_builder_custom_init@@Base+0xc4>
   23770:	ldr	r0, [pc, r0]
   23774:	ldr	r1, [fp, #-4]
   23778:	movw	r2, #1
   2377c:	str	r2, [r1, #184]	; 0xb8
   23780:	str	r0, [fp, #-8]
   23784:	ldr	r0, [fp, #-4]
   23788:	add	r0, r0, #188	; 0xbc
   2378c:	str	r0, [sp, #12]
   23790:	ldr	r0, [sp, #8]
   23794:	movw	r1, #0
   23798:	cmp	r0, r1
   2379c:	bne	237ac <flatcc_builder_custom_init@@Base+0x88>
   237a0:	ldr	r0, [pc, #68]	; 237ec <flatcc_builder_custom_init@@Base+0xc8>
   237a4:	ldr	r0, [pc, r0]
   237a8:	str	r0, [sp, #8]
   237ac:	ldr	r0, [fp, #8]
   237b0:	ldr	r1, [fp, #-4]
   237b4:	str	r0, [r1, #40]	; 0x28
   237b8:	ldr	r0, [sp, #8]
   237bc:	ldr	r1, [fp, #-4]
   237c0:	str	r0, [r1, #48]	; 0x30
   237c4:	ldr	r0, [sp, #12]
   237c8:	ldr	r1, [fp, #-4]
   237cc:	str	r0, [r1, #36]	; 0x24
   237d0:	ldr	r0, [fp, #-8]
   237d4:	ldr	r1, [fp, #-4]
   237d8:	str	r0, [r1, #44]	; 0x2c
   237dc:	movw	r0, #0
   237e0:	mov	sp, fp
   237e4:	pop	{fp, pc}
   237e8:	andeq	r0, r2, r0, lsl r9
   237ec:	ldrdeq	r0, [r2], -r4

000237f0 <flatcc_builder_init@@Base>:
   237f0:	push	{fp, lr}
   237f4:	mov	fp, sp
   237f8:	sub	sp, sp, #16
   237fc:	str	r0, [fp, #-4]
   23800:	ldr	r0, [fp, #-4]
   23804:	movw	r1, #0
   23808:	str	r1, [sp, #8]
   2380c:	ldr	r2, [sp, #8]
   23810:	ldr	r3, [sp, #8]
   23814:	ldr	ip, [sp, #8]
   23818:	str	ip, [sp]
   2381c:	bl	23724 <flatcc_builder_custom_init@@Base>
   23820:	mov	sp, fp
   23824:	pop	{fp, pc}

00023828 <flatcc_builder_custom_reset@@Base>:
   23828:	push	{r4, sl, fp, lr}
   2382c:	add	fp, sp, #8
   23830:	sub	sp, sp, #40	; 0x28
   23834:	str	r0, [fp, #-16]
   23838:	str	r1, [fp, #-20]	; 0xffffffec
   2383c:	str	r2, [sp, #24]
   23840:	movw	r0, #0
   23844:	str	r0, [sp, #16]
   23848:	ldr	r0, [sp, #16]
   2384c:	cmp	r0, #8
   23850:	bge	2395c <flatcc_builder_custom_reset@@Base+0x134>
   23854:	ldr	r0, [fp, #-16]
   23858:	add	r0, r0, #52	; 0x34
   2385c:	ldr	r1, [sp, #16]
   23860:	add	r0, r0, r1, lsl #3
   23864:	str	r0, [sp, #20]
   23868:	ldr	r0, [sp, #20]
   2386c:	ldr	r0, [r0]
   23870:	movw	r1, #0
   23874:	cmp	r0, r1
   23878:	beq	23910 <flatcc_builder_custom_reset@@Base+0xe8>
   2387c:	ldr	r0, [sp, #16]
   23880:	cmp	r0, #5
   23884:	beq	238f0 <flatcc_builder_custom_reset@@Base+0xc8>
   23888:	ldr	r0, [sp, #24]
   2388c:	cmp	r0, #0
   23890:	beq	238f0 <flatcc_builder_custom_reset@@Base+0xc8>
   23894:	ldr	r0, [fp, #-16]
   23898:	ldr	r0, [r0, #48]	; 0x30
   2389c:	ldr	r1, [fp, #-16]
   238a0:	ldr	r1, [r1, #40]	; 0x28
   238a4:	ldr	r2, [sp, #20]
   238a8:	ldr	r3, [sp, #16]
   238ac:	str	r0, [sp, #12]
   238b0:	mov	r0, r1
   238b4:	mov	r1, r2
   238b8:	movw	r2, #1
   238bc:	str	r2, [sp, #8]
   238c0:	ldr	ip, [sp, #8]
   238c4:	str	r3, [sp, #4]
   238c8:	mov	r3, ip
   238cc:	ldr	lr, [sp, #4]
   238d0:	str	lr, [sp]
   238d4:	ldr	r4, [sp, #12]
   238d8:	blx	r4
   238dc:	cmp	r0, #0
   238e0:	beq	238f0 <flatcc_builder_custom_reset@@Base+0xc8>
   238e4:	mvn	r0, #0
   238e8:	str	r0, [fp, #-12]
   238ec:	b	23a58 <flatcc_builder_custom_reset@@Base+0x230>
   238f0:	ldr	r0, [sp, #20]
   238f4:	ldr	r0, [r0]
   238f8:	ldr	r1, [sp, #20]
   238fc:	ldr	r2, [r1, #4]
   23900:	movw	r1, #0
   23904:	and	r1, r1, #255	; 0xff
   23908:	bl	12b2c <memset@plt>
   2390c:	b	23948 <flatcc_builder_custom_reset@@Base+0x120>
   23910:	ldr	r0, [sp, #20]
   23914:	ldr	r0, [r0, #4]
   23918:	cmp	r0, #0
   2391c:	bne	23924 <flatcc_builder_custom_reset@@Base+0xfc>
   23920:	b	23944 <flatcc_builder_custom_reset@@Base+0x11c>
   23924:	ldr	r0, [pc, #312]	; 23a64 <flatcc_builder_custom_reset@@Base+0x23c>
   23928:	add	r0, pc, r0
   2392c:	ldr	r1, [pc, #308]	; 23a68 <flatcc_builder_custom_reset@@Base+0x240>
   23930:	add	r1, pc, r1
   23934:	ldr	r2, [pc, #304]	; 23a6c <flatcc_builder_custom_reset@@Base+0x244>
   23938:	add	r3, pc, r2
   2393c:	movw	r2, #434	; 0x1b2
   23940:	bl	12b80 <__assert_fail@plt>
   23944:	b	23948 <flatcc_builder_custom_reset@@Base+0x120>
   23948:	b	2394c <flatcc_builder_custom_reset@@Base+0x124>
   2394c:	ldr	r0, [sp, #16]
   23950:	add	r0, r0, #1
   23954:	str	r0, [sp, #16]
   23958:	b	23848 <flatcc_builder_custom_reset@@Base+0x20>
   2395c:	ldr	r0, [fp, #-16]
   23960:	movw	r1, #0
   23964:	str	r1, [r0, #120]	; 0x78
   23968:	ldr	r0, [fp, #-16]
   2396c:	ldr	r0, [r0, #124]	; 0x7c
   23970:	cmp	r0, #0
   23974:	bls	23984 <flatcc_builder_custom_reset@@Base+0x15c>
   23978:	ldr	r0, [fp, #-16]
   2397c:	movw	r1, #16
   23980:	str	r1, [r0, #124]	; 0x7c
   23984:	ldr	r0, [fp, #-16]
   23988:	movw	r1, #0
   2398c:	strh	r1, [r0, #128]	; 0x80
   23990:	ldr	r0, [fp, #-16]
   23994:	movw	r1, #0
   23998:	str	r1, [r0, #136]	; 0x88
   2399c:	ldr	r0, [fp, #-16]
   239a0:	str	r1, [r0, #140]	; 0x8c
   239a4:	ldr	r0, [fp, #-16]
   239a8:	str	r1, [r0, #156]	; 0x9c
   239ac:	ldr	r0, [fp, #-16]
   239b0:	str	r1, [r0, #160]	; 0xa0
   239b4:	ldr	r0, [fp, #-16]
   239b8:	str	r1, [r0, #20]
   239bc:	ldr	r0, [fp, #-16]
   239c0:	str	r1, [r0, #24]
   239c4:	ldr	r0, [fp, #-16]
   239c8:	str	r1, [r0, #148]	; 0x94
   239cc:	ldr	r0, [fp, #-16]
   239d0:	str	r1, [r0, #152]	; 0x98
   239d4:	ldr	r0, [fp, #-16]
   239d8:	ldr	r0, [r0, #60]	; 0x3c
   239dc:	ldr	r2, [fp, #-16]
   239e0:	str	r0, [r2, #16]
   239e4:	ldr	r0, [fp, #-16]
   239e8:	ldr	r0, [r0, #76]	; 0x4c
   239ec:	ldr	r2, [fp, #-16]
   239f0:	str	r0, [r2]
   239f4:	ldr	r0, [fp, #-16]
   239f8:	ldr	r0, [r0, #52]	; 0x34
   239fc:	ldr	r2, [fp, #-16]
   23a00:	str	r0, [r2, #4]
   23a04:	ldr	r0, [fp, #-16]
   23a08:	str	r1, [r0, #32]
   23a0c:	ldr	r0, [fp, #-20]	; 0xffffffec
   23a10:	cmp	r0, #0
   23a14:	beq	23a34 <flatcc_builder_custom_reset@@Base+0x20c>
   23a18:	ldr	r0, [fp, #-16]
   23a1c:	movw	r1, #0
   23a20:	str	r1, [r0, #172]	; 0xac
   23a24:	ldr	r0, [fp, #-16]
   23a28:	str	r1, [r0, #176]	; 0xb0
   23a2c:	ldr	r0, [fp, #-16]
   23a30:	str	r1, [r0, #180]	; 0xb4
   23a34:	ldr	r0, [fp, #-16]
   23a38:	ldr	r0, [r0, #184]	; 0xb8
   23a3c:	cmp	r0, #0
   23a40:	beq	23a50 <flatcc_builder_custom_reset@@Base+0x228>
   23a44:	ldr	r0, [fp, #-16]
   23a48:	add	r0, r0, #188	; 0xbc
   23a4c:	bl	29400 <flatcc_emitter_reset@@Base>
   23a50:	movw	r0, #0
   23a54:	str	r0, [fp, #-12]
   23a58:	ldr	r0, [fp, #-12]
   23a5c:	sub	sp, fp, #8
   23a60:	pop	{r4, sl, fp, pc}
   23a64:	andeq	sp, r0, ip, asr #22
   23a68:	andeq	sp, r0, r6, asr fp
   23a6c:	andeq	sp, r0, fp, lsr #23

00023a70 <flatcc_builder_reset@@Base>:
   23a70:	push	{fp, lr}
   23a74:	mov	fp, sp
   23a78:	sub	sp, sp, #8
   23a7c:	str	r0, [sp, #4]
   23a80:	ldr	r0, [sp, #4]
   23a84:	movw	r1, #0
   23a88:	str	r1, [sp]
   23a8c:	ldr	r2, [sp]
   23a90:	bl	23828 <flatcc_builder_custom_reset@@Base>
   23a94:	mov	sp, fp
   23a98:	pop	{fp, pc}

00023a9c <flatcc_builder_clear@@Base>:
   23a9c:	push	{r4, sl, fp, lr}
   23aa0:	add	fp, sp, #8
   23aa4:	sub	sp, sp, #32
   23aa8:	str	r0, [fp, #-12]
   23aac:	movw	r0, #0
   23ab0:	str	r0, [sp, #20]
   23ab4:	ldr	r0, [sp, #20]
   23ab8:	cmp	r0, #8
   23abc:	bge	23b30 <flatcc_builder_clear@@Base+0x94>
   23ac0:	ldr	r0, [fp, #-12]
   23ac4:	add	r0, r0, #52	; 0x34
   23ac8:	ldr	r1, [sp, #20]
   23acc:	add	r0, r0, r1, lsl #3
   23ad0:	str	r0, [fp, #-16]
   23ad4:	ldr	r0, [fp, #-12]
   23ad8:	ldr	r0, [r0, #48]	; 0x30
   23adc:	ldr	r1, [fp, #-12]
   23ae0:	ldr	r1, [r1, #40]	; 0x28
   23ae4:	ldr	r2, [fp, #-16]
   23ae8:	ldr	r3, [sp, #20]
   23aec:	str	r0, [sp, #16]
   23af0:	mov	r0, r1
   23af4:	mov	r1, r2
   23af8:	movw	r2, #0
   23afc:	str	r2, [sp, #12]
   23b00:	ldr	ip, [sp, #12]
   23b04:	str	r3, [sp, #8]
   23b08:	mov	r3, ip
   23b0c:	ldr	lr, [sp, #8]
   23b10:	str	lr, [sp]
   23b14:	ldr	r4, [sp, #16]
   23b18:	blx	r4
   23b1c:	str	r0, [sp, #4]
   23b20:	ldr	r0, [sp, #20]
   23b24:	add	r0, r0, #1
   23b28:	str	r0, [sp, #20]
   23b2c:	b	23ab4 <flatcc_builder_clear@@Base+0x18>
   23b30:	ldr	r0, [fp, #-12]
   23b34:	ldr	r0, [r0, #184]	; 0xb8
   23b38:	cmp	r0, #0
   23b3c:	beq	23b4c <flatcc_builder_clear@@Base+0xb0>
   23b40:	ldr	r0, [fp, #-12]
   23b44:	add	r0, r0, #188	; 0xbc
   23b48:	bl	29598 <flatcc_emitter_clear@@Base>
   23b4c:	ldr	r0, [fp, #-12]
   23b50:	movw	r1, #0
   23b54:	and	r1, r1, #255	; 0xff
   23b58:	movw	r2, #232	; 0xe8
   23b5c:	bl	12b2c <memset@plt>
   23b60:	sub	sp, fp, #8
   23b64:	pop	{r4, sl, fp, pc}

00023b68 <flatcc_builder_enter_user_frame_ptr@@Base>:
   23b68:	push	{fp, lr}
   23b6c:	mov	fp, sp
   23b70:	sub	sp, sp, #24
   23b74:	str	r0, [fp, #-8]
   23b78:	str	r1, [sp, #12]
   23b7c:	ldr	r0, [sp, #12]
   23b80:	add	r0, r0, #4
   23b84:	sub	r0, r0, #1
   23b88:	mvn	r1, #3
   23b8c:	and	r0, r0, r1
   23b90:	add	r0, r0, #4
   23b94:	str	r0, [sp, #12]
   23b98:	ldr	r0, [fp, #-8]
   23b9c:	ldr	r1, [fp, #-8]
   23ba0:	ldr	r2, [r1, #228]	; 0xe4
   23ba4:	ldr	r3, [sp, #12]
   23ba8:	movw	r1, #7
   23bac:	movw	ip, #0
   23bb0:	str	ip, [sp]
   23bb4:	bl	23c3c <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   23bb8:	str	r0, [sp, #8]
   23bbc:	movw	r1, #0
   23bc0:	cmp	r0, r1
   23bc4:	bne	23bd4 <flatcc_builder_enter_user_frame_ptr@@Base+0x6c>
   23bc8:	movw	r0, #0
   23bcc:	str	r0, [fp, #-4]
   23bd0:	b	23c30 <flatcc_builder_enter_user_frame_ptr@@Base+0xc8>
   23bd4:	ldr	r0, [sp, #8]
   23bd8:	ldr	r2, [sp, #12]
   23bdc:	movw	r1, #0
   23be0:	and	r1, r1, #255	; 0xff
   23be4:	bl	12b2c <memset@plt>
   23be8:	ldr	r0, [fp, #-8]
   23bec:	ldr	r0, [r0, #224]	; 0xe0
   23bf0:	ldr	r1, [sp, #8]
   23bf4:	add	r2, r1, #4
   23bf8:	str	r2, [sp, #8]
   23bfc:	str	r0, [r1]
   23c00:	ldr	r0, [fp, #-8]
   23c04:	ldr	r0, [r0, #228]	; 0xe4
   23c08:	add	r0, r0, #4
   23c0c:	ldr	r1, [fp, #-8]
   23c10:	str	r0, [r1, #224]	; 0xe0
   23c14:	ldr	r0, [sp, #12]
   23c18:	ldr	r1, [fp, #-8]
   23c1c:	ldr	r2, [r1, #228]	; 0xe4
   23c20:	add	r0, r2, r0
   23c24:	str	r0, [r1, #228]	; 0xe4
   23c28:	ldr	r0, [sp, #8]
   23c2c:	str	r0, [fp, #-4]
   23c30:	ldr	r0, [fp, #-4]
   23c34:	mov	sp, fp
   23c38:	pop	{fp, pc}
   23c3c:	push	{fp, lr}
   23c40:	mov	fp, sp
   23c44:	sub	sp, sp, #32
   23c48:	ldr	ip, [fp, #8]
   23c4c:	str	r0, [fp, #-4]
   23c50:	str	r1, [fp, #-8]
   23c54:	str	r2, [fp, #-12]
   23c58:	str	r3, [sp, #16]
   23c5c:	ldr	r0, [fp, #-4]
   23c60:	add	r0, r0, #52	; 0x34
   23c64:	ldr	r1, [fp, #-8]
   23c68:	add	r0, r0, r1, lsl #3
   23c6c:	str	r0, [sp, #12]
   23c70:	ldr	r0, [fp, #-12]
   23c74:	ldr	r1, [sp, #16]
   23c78:	add	r0, r0, r1
   23c7c:	ldr	r1, [sp, #12]
   23c80:	ldr	r1, [r1, #4]
   23c84:	cmp	r0, r1
   23c88:	str	ip, [sp, #8]
   23c8c:	bls	23d04 <flatcc_builder_enter_user_frame_ptr@@Base+0x19c>
   23c90:	ldr	r0, [fp, #-4]
   23c94:	ldr	r0, [r0, #48]	; 0x30
   23c98:	ldr	r1, [fp, #-4]
   23c9c:	ldr	r1, [r1, #40]	; 0x28
   23ca0:	ldr	r2, [sp, #12]
   23ca4:	ldr	r3, [fp, #-12]
   23ca8:	ldr	ip, [sp, #16]
   23cac:	add	r3, r3, ip
   23cb0:	ldr	ip, [fp, #8]
   23cb4:	ldr	lr, [fp, #-8]
   23cb8:	str	r0, [sp, #4]
   23cbc:	mov	r0, r1
   23cc0:	mov	r1, r2
   23cc4:	mov	r2, r3
   23cc8:	mov	r3, ip
   23ccc:	str	lr, [sp]
   23cd0:	ldr	ip, [sp, #4]
   23cd4:	blx	ip
   23cd8:	cmp	r0, #0
   23cdc:	beq	23d00 <flatcc_builder_enter_user_frame_ptr@@Base+0x198>
   23ce0:	ldr	r0, [pc, #52]	; 23d1c <flatcc_builder_enter_user_frame_ptr@@Base+0x1b4>
   23ce4:	add	r0, pc, r0
   23ce8:	ldr	r1, [pc, #48]	; 23d20 <flatcc_builder_enter_user_frame_ptr@@Base+0x1b8>
   23cec:	add	r1, pc, r1
   23cf0:	ldr	r2, [pc, #44]	; 23d24 <flatcc_builder_enter_user_frame_ptr@@Base+0x1bc>
   23cf4:	add	r3, pc, r2
   23cf8:	movw	r2, #308	; 0x134
   23cfc:	bl	12b80 <__assert_fail@plt>
   23d00:	b	23d04 <flatcc_builder_enter_user_frame_ptr@@Base+0x19c>
   23d04:	ldr	r0, [sp, #12]
   23d08:	ldr	r0, [r0]
   23d0c:	ldr	r1, [fp, #-12]
   23d10:	add	r0, r0, r1
   23d14:	mov	sp, fp
   23d18:	pop	{fp, pc}
   23d1c:	andeq	lr, r0, pc, asr r9
   23d20:	muleq	r0, sl, r7
   23d24:	andeq	lr, r0, r9, lsl #15

00023d28 <flatcc_builder_enter_user_frame@@Base>:
   23d28:	push	{fp, lr}
   23d2c:	mov	fp, sp
   23d30:	sub	sp, sp, #24
   23d34:	str	r0, [fp, #-8]
   23d38:	str	r1, [sp, #12]
   23d3c:	ldr	r0, [sp, #12]
   23d40:	add	r0, r0, #4
   23d44:	sub	r0, r0, #1
   23d48:	mvn	r1, #3
   23d4c:	and	r0, r0, r1
   23d50:	add	r0, r0, #4
   23d54:	str	r0, [sp, #12]
   23d58:	ldr	r0, [fp, #-8]
   23d5c:	ldr	r1, [fp, #-8]
   23d60:	ldr	r2, [r1, #228]	; 0xe4
   23d64:	ldr	r3, [sp, #12]
   23d68:	movw	r1, #7
   23d6c:	movw	ip, #0
   23d70:	str	ip, [sp]
   23d74:	bl	23c3c <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   23d78:	str	r0, [sp, #8]
   23d7c:	movw	r1, #0
   23d80:	cmp	r0, r1
   23d84:	bne	23d94 <flatcc_builder_enter_user_frame@@Base+0x6c>
   23d88:	movw	r0, #0
   23d8c:	str	r0, [fp, #-4]
   23d90:	b	23df4 <flatcc_builder_enter_user_frame@@Base+0xcc>
   23d94:	ldr	r0, [sp, #8]
   23d98:	ldr	r2, [sp, #12]
   23d9c:	movw	r1, #0
   23da0:	and	r1, r1, #255	; 0xff
   23da4:	bl	12b2c <memset@plt>
   23da8:	ldr	r0, [fp, #-8]
   23dac:	ldr	r0, [r0, #224]	; 0xe0
   23db0:	ldr	r1, [sp, #8]
   23db4:	add	r2, r1, #4
   23db8:	str	r2, [sp, #8]
   23dbc:	str	r0, [r1]
   23dc0:	ldr	r0, [fp, #-8]
   23dc4:	ldr	r0, [r0, #228]	; 0xe4
   23dc8:	add	r0, r0, #4
   23dcc:	ldr	r1, [fp, #-8]
   23dd0:	str	r0, [r1, #224]	; 0xe0
   23dd4:	ldr	r0, [sp, #12]
   23dd8:	ldr	r1, [fp, #-8]
   23ddc:	ldr	r2, [r1, #228]	; 0xe4
   23de0:	add	r0, r2, r0
   23de4:	str	r0, [r1, #228]	; 0xe4
   23de8:	ldr	r0, [fp, #-8]
   23dec:	ldr	r0, [r0, #224]	; 0xe0
   23df0:	str	r0, [fp, #-4]
   23df4:	ldr	r0, [fp, #-4]
   23df8:	mov	sp, fp
   23dfc:	pop	{fp, pc}

00023e00 <flatcc_builder_exit_user_frame@@Base>:
   23e00:	push	{fp, lr}
   23e04:	mov	fp, sp
   23e08:	sub	sp, sp, #8
   23e0c:	str	r0, [sp, #4]
   23e10:	ldr	r0, [sp, #4]
   23e14:	ldr	r0, [r0, #224]	; 0xe0
   23e18:	cmp	r0, #0
   23e1c:	bls	23e24 <flatcc_builder_exit_user_frame@@Base+0x24>
   23e20:	b	23e44 <flatcc_builder_exit_user_frame@@Base+0x44>
   23e24:	ldr	r0, [pc, #100]	; 23e90 <flatcc_builder_exit_user_frame@@Base+0x90>
   23e28:	add	r0, pc, r0
   23e2c:	ldr	r1, [pc, #96]	; 23e94 <flatcc_builder_exit_user_frame@@Base+0x94>
   23e30:	add	r1, pc, r1
   23e34:	ldr	r2, [pc, #92]	; 23e98 <flatcc_builder_exit_user_frame@@Base+0x98>
   23e38:	add	r3, pc, r2
   23e3c:	movw	r2, #542	; 0x21e
   23e40:	bl	12b80 <__assert_fail@plt>
   23e44:	ldr	r0, [sp, #4]
   23e48:	ldr	r0, [r0, #108]	; 0x6c
   23e4c:	ldr	r1, [sp, #4]
   23e50:	ldr	r1, [r1, #224]	; 0xe0
   23e54:	add	r0, r0, r1
   23e58:	str	r0, [sp]
   23e5c:	ldr	r0, [sp, #4]
   23e60:	ldr	r0, [r0, #224]	; 0xe0
   23e64:	sub	r0, r0, #4
   23e68:	ldr	r1, [sp, #4]
   23e6c:	str	r0, [r1, #228]	; 0xe4
   23e70:	ldr	r0, [sp]
   23e74:	mvn	r1, #3
   23e78:	add	r0, r0, r1
   23e7c:	ldr	r0, [r0]
   23e80:	ldr	r1, [sp, #4]
   23e84:	str	r0, [r1, #224]	; 0xe0
   23e88:	mov	sp, fp
   23e8c:	pop	{fp, pc}
   23e90:	strdeq	sp, [r0], -r9
   23e94:	andeq	sp, r0, r6, asr r6
   23e98:	andeq	sp, r0, r2, lsl #14

00023e9c <flatcc_builder_exit_user_frame_at@@Base>:
   23e9c:	push	{fp, lr}
   23ea0:	mov	fp, sp
   23ea4:	sub	sp, sp, #8
   23ea8:	str	r0, [sp, #4]
   23eac:	str	r1, [sp]
   23eb0:	ldr	r0, [sp, #4]
   23eb4:	ldr	r0, [r0, #224]	; 0xe0
   23eb8:	ldr	r1, [sp]
   23ebc:	cmp	r0, r1
   23ec0:	bcc	23ec8 <flatcc_builder_exit_user_frame_at@@Base+0x2c>
   23ec4:	b	23ee8 <flatcc_builder_exit_user_frame_at@@Base+0x4c>
   23ec8:	ldr	r0, [pc, #52]	; 23f04 <flatcc_builder_exit_user_frame_at@@Base+0x68>
   23ecc:	add	r0, pc, r0
   23ed0:	ldr	r1, [pc, #48]	; 23f08 <flatcc_builder_exit_user_frame_at@@Base+0x6c>
   23ed4:	add	r1, pc, r1
   23ed8:	ldr	r2, [pc, #44]	; 23f0c <flatcc_builder_exit_user_frame_at@@Base+0x70>
   23edc:	add	r3, pc, r2
   23ee0:	movw	r2, #551	; 0x227
   23ee4:	bl	12b80 <__assert_fail@plt>
   23ee8:	ldr	r0, [sp]
   23eec:	ldr	r1, [sp, #4]
   23ef0:	str	r0, [r1, #224]	; 0xe0
   23ef4:	ldr	r0, [sp, #4]
   23ef8:	bl	23e00 <flatcc_builder_exit_user_frame@@Base>
   23efc:	mov	sp, fp
   23f00:	pop	{fp, pc}
   23f04:	andeq	sp, r0, r8, lsr #13
   23f08:			; <UNDEFINED> instruction: 0x0000d5b2
   23f0c:			; <UNDEFINED> instruction: 0x0000d6b7

00023f10 <flatcc_builder_get_current_user_frame@@Base>:
   23f10:	sub	sp, sp, #4
   23f14:	str	r0, [sp]
   23f18:	ldr	r0, [sp]
   23f1c:	ldr	r0, [r0, #224]	; 0xe0
   23f20:	add	sp, sp, #4
   23f24:	bx	lr

00023f28 <flatcc_builder_get_user_frame_ptr@@Base>:
   23f28:	sub	sp, sp, #8
   23f2c:	str	r0, [sp, #4]
   23f30:	str	r1, [sp]
   23f34:	ldr	r0, [sp, #4]
   23f38:	ldr	r0, [r0, #108]	; 0x6c
   23f3c:	ldr	r1, [sp]
   23f40:	add	r0, r0, r1
   23f44:	add	sp, sp, #8
   23f48:	bx	lr

00023f4c <flatcc_builder_embed_buffer@@Base>:
   23f4c:	push	{fp, lr}
   23f50:	mov	fp, sp
   23f54:	sub	sp, sp, #120	; 0x78
   23f58:	ldr	ip, [fp, #12]
   23f5c:	ldr	lr, [fp, #8]
   23f60:	str	r0, [fp, #-8]
   23f64:	strh	r1, [fp, #-10]
   23f68:	str	r2, [fp, #-16]
   23f6c:	str	r3, [fp, #-20]	; 0xffffffec
   23f70:	strh	lr, [fp, #-22]	; 0xffffffea
   23f74:	ldr	r0, [fp, #12]
   23f78:	and	r0, r0, #2
   23f7c:	str	r0, [sp, #12]
   23f80:	ldr	r0, [fp, #-8]
   23f84:	ldrh	r1, [fp, #-10]
   23f88:	ldr	r2, [fp, #-8]
   23f8c:	ldr	r2, [r2, #152]	; 0x98
   23f90:	cmp	r2, #0
   23f94:	movw	r2, #0
   23f98:	moveq	r2, #1
   23f9c:	mvn	r3, #0
   23fa0:	eor	r2, r2, r3
   23fa4:	and	r3, r2, #1
   23fa8:	sub	r2, fp, #22
   23fac:	str	r1, [sp, #8]
   23fb0:	mov	r1, r2
   23fb4:	ldr	r2, [sp, #8]
   23fb8:	uxth	r2, r2
   23fbc:	str	ip, [sp, #4]
   23fc0:	bl	24134 <flatcc_builder_embed_buffer@@Base+0x1e8>
   23fc4:	cmp	r0, #0
   23fc8:	beq	23fd8 <flatcc_builder_embed_buffer@@Base+0x8c>
   23fcc:	movw	r0, #0
   23fd0:	str	r0, [fp, #-4]
   23fd4:	b	24124 <flatcc_builder_embed_buffer@@Base+0x1d8>
   23fd8:	ldr	r0, [fp, #-8]
   23fdc:	ldr	r1, [fp, #-20]	; 0xffffffec
   23fe0:	ldr	r2, [sp, #12]
   23fe4:	cmp	r2, #0
   23fe8:	movw	r2, #0
   23fec:	movne	r2, #1
   23ff0:	tst	r2, #1
   23ff4:	movw	r2, #4
   23ff8:	moveq	r2, #0
   23ffc:	add	r1, r1, r2
   24000:	ldrh	r2, [fp, #-22]	; 0xffffffea
   24004:	bl	242a0 <flatcc_builder_embed_buffer@@Base+0x354>
   24008:	str	r0, [fp, #-32]	; 0xffffffe0
   2400c:	ldr	r0, [fp, #-20]	; 0xffffffec
   24010:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24014:	add	r0, r0, r1
   24018:	bl	242d4 <flatcc_builder_embed_buffer@@Base+0x388>
   2401c:	str	r0, [fp, #-28]	; 0xffffffe4
   24020:	movw	r0, #0
   24024:	str	r0, [sp, #16]
   24028:	str	r0, [sp, #20]
   2402c:	ldr	r0, [fp, #-8]
   24030:	ldr	r0, [r0, #152]	; 0x98
   24034:	cmp	r0, #0
   24038:	beq	24078 <flatcc_builder_embed_buffer@@Base+0x12c>
   2403c:	ldr	r0, [sp, #16]
   24040:	add	r0, r0, #4
   24044:	str	r0, [sp, #16]
   24048:	add	r0, sp, #16
   2404c:	add	r0, r0, #8
   24050:	ldr	r1, [sp, #20]
   24054:	sub	r2, fp, #28
   24058:	str	r2, [r0, r1, lsl #3]
   2405c:	ldr	r1, [sp, #20]
   24060:	add	r0, r0, r1, lsl #3
   24064:	movw	r1, #4
   24068:	str	r1, [r0, #4]
   2406c:	ldr	r0, [sp, #20]
   24070:	add	r0, r0, #1
   24074:	str	r0, [sp, #20]
   24078:	ldr	r0, [fp, #-20]	; 0xffffffec
   2407c:	cmp	r0, #0
   24080:	bls	240c4 <flatcc_builder_embed_buffer@@Base+0x178>
   24084:	ldr	r0, [fp, #-20]	; 0xffffffec
   24088:	ldr	r1, [sp, #16]
   2408c:	add	r0, r1, r0
   24090:	str	r0, [sp, #16]
   24094:	ldr	r0, [fp, #-16]
   24098:	add	r1, sp, #16
   2409c:	add	r1, r1, #8
   240a0:	ldr	r2, [sp, #20]
   240a4:	str	r0, [r1, r2, lsl #3]
   240a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   240ac:	ldr	r2, [sp, #20]
   240b0:	add	r1, r1, r2, lsl #3
   240b4:	str	r0, [r1, #4]
   240b8:	ldr	r0, [sp, #20]
   240bc:	add	r0, r0, #1
   240c0:	str	r0, [sp, #20]
   240c4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   240c8:	cmp	r0, #0
   240cc:	bls	24114 <flatcc_builder_embed_buffer@@Base+0x1c8>
   240d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   240d4:	ldr	r1, [sp, #16]
   240d8:	add	r0, r1, r0
   240dc:	str	r0, [sp, #16]
   240e0:	add	r0, sp, #16
   240e4:	add	r0, r0, #8
   240e8:	ldr	r1, [sp, #20]
   240ec:	ldr	r2, [pc, #60]	; 24130 <flatcc_builder_embed_buffer@@Base+0x1e4>
   240f0:	ldr	r2, [pc, r2]
   240f4:	str	r2, [r0, r1, lsl #3]
   240f8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   240fc:	ldr	r2, [sp, #20]
   24100:	add	r0, r0, r2, lsl #3
   24104:	str	r1, [r0, #4]
   24108:	ldr	r0, [sp, #20]
   2410c:	add	r0, r0, #1
   24110:	str	r0, [sp, #20]
   24114:	ldr	r0, [fp, #-8]
   24118:	add	r1, sp, #16
   2411c:	bl	242e8 <flatcc_builder_embed_buffer@@Base+0x39c>
   24120:	str	r0, [fp, #-4]
   24124:	ldr	r0, [fp, #-4]
   24128:	mov	sp, fp
   2412c:	pop	{fp, pc}
   24130:	andeq	pc, r1, r8, ror pc	; <UNPREDICTABLE>
   24134:	push	{fp, lr}
   24138:	mov	fp, sp
   2413c:	sub	sp, sp, #104	; 0x68
   24140:	str	r0, [fp, #-4]
   24144:	str	r1, [fp, #-8]
   24148:	strh	r2, [fp, #-10]
   2414c:	str	r3, [fp, #-16]
   24150:	ldrh	r0, [fp, #-10]
   24154:	cmp	r0, #0
   24158:	beq	24168 <flatcc_builder_embed_buffer@@Base+0x21c>
   2415c:	ldrh	r0, [fp, #-10]
   24160:	str	r0, [sp, #8]
   24164:	b	2419c <flatcc_builder_embed_buffer@@Base+0x250>
   24168:	ldr	r0, [fp, #-4]
   2416c:	ldrh	r0, [r0, #132]	; 0x84
   24170:	cmp	r0, #0
   24174:	beq	24188 <flatcc_builder_embed_buffer@@Base+0x23c>
   24178:	ldr	r0, [fp, #-4]
   2417c:	ldrh	r0, [r0, #132]	; 0x84
   24180:	str	r0, [sp, #4]
   24184:	b	24194 <flatcc_builder_embed_buffer@@Base+0x248>
   24188:	movw	r0, #1
   2418c:	str	r0, [sp, #4]
   24190:	b	24194 <flatcc_builder_embed_buffer@@Base+0x248>
   24194:	ldr	r0, [sp, #4]
   24198:	str	r0, [sp, #8]
   2419c:	ldr	r0, [sp, #8]
   241a0:	strh	r0, [fp, #-10]
   241a4:	ldr	r0, [fp, #-8]
   241a8:	movw	r1, #4
   241ac:	uxth	r1, r1
   241b0:	bl	25ca0 <flatcc_builder_start_vector@@Base+0xac>
   241b4:	ldr	r0, [fp, #-8]
   241b8:	ldrh	r1, [fp, #-10]
   241bc:	bl	25ca0 <flatcc_builder_start_vector@@Base+0xac>
   241c0:	ldr	r0, [fp, #-16]
   241c4:	cmp	r0, #0
   241c8:	bne	24284 <flatcc_builder_embed_buffer@@Base+0x338>
   241cc:	ldr	r0, [fp, #-4]
   241d0:	ldrh	r1, [fp, #-10]
   241d4:	bl	290e8 <flatcc_builder_get_emit_context@@Base+0x18>
   241d8:	str	r0, [fp, #-20]	; 0xffffffec
   241dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   241e0:	cmp	r0, #0
   241e4:	beq	24280 <flatcc_builder_embed_buffer@@Base+0x334>
   241e8:	movw	r0, #0
   241ec:	str	r0, [sp, #12]
   241f0:	str	r0, [sp, #16]
   241f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   241f8:	cmp	r0, #0
   241fc:	bls	24244 <flatcc_builder_embed_buffer@@Base+0x2f8>
   24200:	ldr	r0, [fp, #-20]	; 0xffffffec
   24204:	ldr	r1, [sp, #12]
   24208:	add	r0, r1, r0
   2420c:	str	r0, [sp, #12]
   24210:	add	r0, sp, #12
   24214:	add	r0, r0, #8
   24218:	ldr	r1, [sp, #16]
   2421c:	ldr	r2, [pc, #120]	; 2429c <flatcc_builder_embed_buffer@@Base+0x350>
   24220:	ldr	r2, [pc, r2]
   24224:	str	r2, [r0, r1, lsl #3]
   24228:	ldr	r1, [fp, #-20]	; 0xffffffec
   2422c:	ldr	r2, [sp, #16]
   24230:	add	r0, r0, r2, lsl #3
   24234:	str	r1, [r0, #4]
   24238:	ldr	r0, [sp, #16]
   2423c:	add	r0, r0, #1
   24240:	str	r0, [sp, #16]
   24244:	ldr	r0, [fp, #-4]
   24248:	add	r1, sp, #12
   2424c:	bl	26284 <flatcc_builder_create_vtable@@Base+0x104>
   24250:	movw	r1, #0
   24254:	cmp	r1, r0
   24258:	bne	2427c <flatcc_builder_embed_buffer@@Base+0x330>
   2425c:	ldr	r0, [pc, #44]	; 24290 <flatcc_builder_embed_buffer@@Base+0x344>
   24260:	add	r0, pc, r0
   24264:	ldr	r1, [pc, #40]	; 24294 <flatcc_builder_embed_buffer@@Base+0x348>
   24268:	add	r1, pc, r1
   2426c:	ldr	r2, [pc, #36]	; 24298 <flatcc_builder_embed_buffer@@Base+0x34c>
   24270:	add	r3, pc, r2
   24274:	movw	r2, #702	; 0x2be
   24278:	bl	12b80 <__assert_fail@plt>
   2427c:	b	24280 <flatcc_builder_embed_buffer@@Base+0x334>
   24280:	b	24284 <flatcc_builder_embed_buffer@@Base+0x338>
   24284:	movw	r0, #0
   24288:	mov	sp, fp
   2428c:	pop	{fp, pc}
   24290:	andeq	lr, r0, r3, ror #7
   24294:	andeq	sp, r0, lr, lsl r2
   24298:	andeq	lr, r0, r0, asr r2
   2429c:	andeq	pc, r1, r8, asr #28
   242a0:	sub	sp, sp, #12
   242a4:	str	r0, [sp, #8]
   242a8:	str	r1, [sp, #4]
   242ac:	strh	r2, [sp, #2]
   242b0:	ldr	r0, [sp, #8]
   242b4:	ldr	r0, [r0, #136]	; 0x88
   242b8:	ldr	r1, [sp, #4]
   242bc:	sub	r0, r0, r1
   242c0:	ldrh	r1, [sp, #2]
   242c4:	sub	r1, r1, #1
   242c8:	and	r0, r0, r1
   242cc:	add	sp, sp, #12
   242d0:	bx	lr
   242d4:	sub	sp, sp, #4
   242d8:	str	r0, [sp]
   242dc:	ldr	r0, [sp]
   242e0:	add	sp, sp, #4
   242e4:	bx	lr
   242e8:	push	{fp, lr}
   242ec:	mov	fp, sp
   242f0:	sub	sp, sp, #24
   242f4:	str	r0, [fp, #-4]
   242f8:	str	r1, [fp, #-8]
   242fc:	ldr	r0, [fp, #-4]
   24300:	ldr	r0, [r0, #136]	; 0x88
   24304:	ldr	r1, [fp, #-8]
   24308:	ldr	r1, [r1]
   2430c:	sub	r0, r0, r1
   24310:	str	r0, [sp, #12]
   24314:	ldr	r0, [fp, #-8]
   24318:	ldr	r0, [r0]
   2431c:	cmp	r0, #16
   24320:	bls	24338 <flatcc_builder_embed_buffer@@Base+0x3ec>
   24324:	ldr	r0, [fp, #-8]
   24328:	ldr	r0, [r0]
   2432c:	sub	r0, r0, #16
   24330:	cmn	r0, #1
   24334:	bhi	2434c <flatcc_builder_embed_buffer@@Base+0x400>
   24338:	ldr	r0, [sp, #12]
   2433c:	ldr	r1, [fp, #-4]
   24340:	ldr	r1, [r1, #136]	; 0x88
   24344:	cmp	r0, r1
   24348:	blt	2436c <flatcc_builder_embed_buffer@@Base+0x420>
   2434c:	ldr	r0, [pc, #172]	; 24400 <flatcc_builder_embed_buffer@@Base+0x4b4>
   24350:	add	r0, pc, r0
   24354:	ldr	r1, [pc, #168]	; 24404 <flatcc_builder_embed_buffer@@Base+0x4b8>
   24358:	add	r1, pc, r1
   2435c:	ldr	r2, [pc, #164]	; 24408 <flatcc_builder_embed_buffer@@Base+0x4bc>
   24360:	add	r3, pc, r2
   24364:	movw	r2, #647	; 0x287
   24368:	bl	12b80 <__assert_fail@plt>
   2436c:	ldr	r0, [fp, #-4]
   24370:	ldr	r0, [r0, #44]	; 0x2c
   24374:	ldr	r1, [fp, #-4]
   24378:	ldr	r1, [r1, #36]	; 0x24
   2437c:	ldr	r2, [fp, #-8]
   24380:	add	r2, r2, #8
   24384:	ldr	r3, [fp, #-8]
   24388:	ldr	r3, [r3, #4]
   2438c:	ldr	ip, [sp, #12]
   24390:	ldr	lr, [fp, #-8]
   24394:	ldr	lr, [lr]
   24398:	str	r0, [sp, #8]
   2439c:	mov	r0, r1
   243a0:	mov	r1, r2
   243a4:	mov	r2, r3
   243a8:	mov	r3, ip
   243ac:	str	lr, [sp]
   243b0:	ldr	ip, [sp, #8]
   243b4:	blx	ip
   243b8:	cmp	r0, #0
   243bc:	beq	243e0 <flatcc_builder_embed_buffer@@Base+0x494>
   243c0:	ldr	r0, [pc, #44]	; 243f4 <flatcc_builder_embed_buffer@@Base+0x4a8>
   243c4:	add	r0, pc, r0
   243c8:	ldr	r1, [pc, #40]	; 243f8 <flatcc_builder_embed_buffer@@Base+0x4ac>
   243cc:	add	r1, pc, r1
   243d0:	ldr	r2, [pc, #36]	; 243fc <flatcc_builder_embed_buffer@@Base+0x4b0>
   243d4:	add	r3, pc, r2
   243d8:	movw	r2, #651	; 0x28b
   243dc:	bl	12b80 <__assert_fail@plt>
   243e0:	ldr	r0, [sp, #12]
   243e4:	ldr	r1, [fp, #-4]
   243e8:	str	r0, [r1, #136]	; 0x88
   243ec:	mov	sp, fp
   243f0:	pop	{fp, pc}
   243f4:	andeq	lr, r0, pc, ror r2
   243f8:	strheq	sp, [r0], -sl
   243fc:	andeq	lr, r0, lr, lsr #2
   24400:	strdeq	lr, [r0], -r3
   24404:	andeq	sp, r0, lr, lsr #2
   24408:	andeq	lr, r0, r2, lsr #3

0002440c <flatcc_builder_create_buffer@@Base>:
   2440c:	push	{fp, lr}
   24410:	mov	fp, sp
   24414:	sub	sp, sp, #152	; 0x98
   24418:	ldr	ip, [fp, #12]
   2441c:	ldr	lr, [fp, #8]
   24420:	str	r0, [fp, #-8]
   24424:	str	r1, [fp, #-12]
   24428:	strh	r2, [fp, #-14]
   2442c:	str	r3, [fp, #-20]	; 0xffffffec
   24430:	strh	lr, [fp, #-22]	; 0xffffffea
   24434:	movw	r0, #0
   24438:	str	r0, [fp, #-36]	; 0xffffffdc
   2443c:	str	r0, [sp, #28]
   24440:	ldr	r0, [fp, #12]
   24444:	and	r0, r0, #1
   24448:	cmp	r0, #0
   2444c:	movw	r0, #0
   24450:	movne	r0, #1
   24454:	and	r0, r0, #1
   24458:	str	r0, [sp, #24]
   2445c:	ldr	r0, [fp, #12]
   24460:	and	r0, r0, #2
   24464:	cmp	r0, #0
   24468:	movw	r0, #0
   2446c:	movne	r0, #1
   24470:	and	r0, r0, #1
   24474:	str	r0, [sp, #20]
   24478:	ldr	r0, [fp, #-8]
   2447c:	ldrh	r1, [fp, #-14]
   24480:	ldr	r3, [sp, #24]
   24484:	sub	r2, fp, #22
   24488:	str	r1, [sp, #16]
   2448c:	mov	r1, r2
   24490:	ldr	r2, [sp, #16]
   24494:	uxth	r2, r2
   24498:	str	ip, [sp, #12]
   2449c:	bl	24134 <flatcc_builder_embed_buffer@@Base+0x1e8>
   244a0:	cmp	r0, #0
   244a4:	beq	244b4 <flatcc_builder_create_buffer@@Base+0xa8>
   244a8:	movw	r0, #0
   244ac:	str	r0, [fp, #-4]
   244b0:	b	24798 <flatcc_builder_create_buffer@@Base+0x38c>
   244b4:	ldr	r0, [fp, #-8]
   244b8:	ldrh	r1, [fp, #-22]	; 0xffffffea
   244bc:	bl	247b4 <flatcc_builder_create_buffer@@Base+0x3a8>
   244c0:	ldr	r0, [fp, #-12]
   244c4:	movw	r1, #0
   244c8:	cmp	r0, r1
   244cc:	beq	2450c <flatcc_builder_create_buffer@@Base+0x100>
   244d0:	ldr	r0, [fp, #-12]
   244d4:	ldrb	r1, [r0]
   244d8:	strb	r1, [sp, #28]
   244dc:	ldrb	r1, [r0, #1]
   244e0:	strb	r1, [sp, #29]
   244e4:	ldrb	r1, [r0, #2]
   244e8:	strb	r1, [sp, #30]
   244ec:	ldrb	r0, [r0, #3]
   244f0:	strb	r0, [sp, #31]
   244f4:	ldr	r0, [sp, #28]
   244f8:	bl	247e8 <flatcc_builder_create_buffer@@Base+0x3dc>
   244fc:	str	r0, [sp, #28]
   24500:	ldr	r0, [sp, #28]
   24504:	bl	242d4 <flatcc_builder_embed_buffer@@Base+0x388>
   24508:	str	r0, [sp, #28]
   2450c:	ldr	r0, [sp, #28]
   24510:	cmp	r0, #0
   24514:	movw	r0, #0
   24518:	movne	r0, #1
   2451c:	tst	r0, #1
   24520:	movw	r0, #4
   24524:	mov	r1, r0
   24528:	moveq	r1, #0
   2452c:	str	r1, [fp, #-36]	; 0xffffffdc
   24530:	ldr	r1, [fp, #-8]
   24534:	ldr	r2, [fp, #-36]	; 0xffffffdc
   24538:	add	r2, r2, #4
   2453c:	ldr	r3, [sp, #20]
   24540:	cmp	r3, #0
   24544:	movw	r3, #0
   24548:	movne	r3, #1
   2454c:	tst	r3, #1
   24550:	moveq	r0, #0
   24554:	add	r0, r2, r0
   24558:	str	r0, [sp, #8]
   2455c:	mov	r0, r1
   24560:	ldr	r1, [sp, #8]
   24564:	ldrh	r2, [fp, #-22]	; 0xffffffea
   24568:	bl	242a0 <flatcc_builder_embed_buffer@@Base+0x354>
   2456c:	str	r0, [fp, #-32]	; 0xffffffe0
   24570:	movw	r0, #0
   24574:	str	r0, [sp, #32]
   24578:	str	r0, [sp, #36]	; 0x24
   2457c:	ldr	r0, [sp, #24]
   24580:	cmp	r0, #0
   24584:	bne	24594 <flatcc_builder_create_buffer@@Base+0x188>
   24588:	ldr	r0, [sp, #20]
   2458c:	cmp	r0, #0
   24590:	beq	245d0 <flatcc_builder_create_buffer@@Base+0x1c4>
   24594:	ldr	r0, [sp, #32]
   24598:	add	r0, r0, #4
   2459c:	str	r0, [sp, #32]
   245a0:	add	r0, sp, #32
   245a4:	add	r0, r0, #8
   245a8:	ldr	r1, [sp, #36]	; 0x24
   245ac:	sub	r2, fp, #44	; 0x2c
   245b0:	str	r2, [r0, r1, lsl #3]
   245b4:	ldr	r1, [sp, #36]	; 0x24
   245b8:	add	r0, r0, r1, lsl #3
   245bc:	movw	r1, #4
   245c0:	str	r1, [r0, #4]
   245c4:	ldr	r0, [sp, #36]	; 0x24
   245c8:	add	r0, r0, #1
   245cc:	str	r0, [sp, #36]	; 0x24
   245d0:	ldr	r0, [sp, #32]
   245d4:	add	r0, r0, #4
   245d8:	str	r0, [sp, #32]
   245dc:	add	r0, sp, #32
   245e0:	add	r0, r0, #8
   245e4:	ldr	r1, [sp, #36]	; 0x24
   245e8:	sub	r2, fp, #40	; 0x28
   245ec:	str	r2, [r0, r1, lsl #3]
   245f0:	ldr	r1, [sp, #36]	; 0x24
   245f4:	add	r0, r0, r1, lsl #3
   245f8:	movw	r1, #4
   245fc:	str	r1, [r0, #4]
   24600:	ldr	r0, [sp, #36]	; 0x24
   24604:	add	r0, r0, #1
   24608:	str	r0, [sp, #36]	; 0x24
   2460c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   24610:	cmp	r0, #0
   24614:	bls	24658 <flatcc_builder_create_buffer@@Base+0x24c>
   24618:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2461c:	ldr	r1, [sp, #32]
   24620:	add	r0, r1, r0
   24624:	str	r0, [sp, #32]
   24628:	add	r0, sp, #32
   2462c:	add	r0, r0, #8
   24630:	ldr	r1, [sp, #36]	; 0x24
   24634:	add	r2, sp, #28
   24638:	str	r2, [r0, r1, lsl #3]
   2463c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   24640:	ldr	r2, [sp, #36]	; 0x24
   24644:	add	r0, r0, r2, lsl #3
   24648:	str	r1, [r0, #4]
   2464c:	ldr	r0, [sp, #36]	; 0x24
   24650:	add	r0, r0, #1
   24654:	str	r0, [sp, #36]	; 0x24
   24658:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2465c:	cmp	r0, #0
   24660:	bls	246a8 <flatcc_builder_create_buffer@@Base+0x29c>
   24664:	ldr	r0, [fp, #-32]	; 0xffffffe0
   24668:	ldr	r1, [sp, #32]
   2466c:	add	r0, r1, r0
   24670:	str	r0, [sp, #32]
   24674:	add	r0, sp, #32
   24678:	add	r0, r0, #8
   2467c:	ldr	r1, [sp, #36]	; 0x24
   24680:	ldr	r2, [pc, #296]	; 247b0 <flatcc_builder_create_buffer@@Base+0x3a4>
   24684:	ldr	r2, [pc, r2]
   24688:	str	r2, [r0, r1, lsl #3]
   2468c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   24690:	ldr	r2, [sp, #36]	; 0x24
   24694:	add	r0, r0, r2, lsl #3
   24698:	str	r1, [r0, #4]
   2469c:	ldr	r0, [sp, #36]	; 0x24
   246a0:	add	r0, r0, #1
   246a4:	str	r0, [sp, #36]	; 0x24
   246a8:	ldr	r0, [fp, #-8]
   246ac:	ldr	r0, [r0, #136]	; 0x88
   246b0:	ldr	r1, [sp, #32]
   246b4:	sub	r0, r0, r1
   246b8:	ldr	r1, [sp, #24]
   246bc:	cmp	r1, #0
   246c0:	movw	r1, #1
   246c4:	str	r0, [sp, #4]
   246c8:	str	r1, [sp]
   246cc:	bne	246e4 <flatcc_builder_create_buffer@@Base+0x2d8>
   246d0:	ldr	r0, [sp, #20]
   246d4:	cmp	r0, #0
   246d8:	movw	r0, #0
   246dc:	movne	r0, #1
   246e0:	str	r0, [sp]
   246e4:	ldr	r0, [sp]
   246e8:	tst	r0, #1
   246ec:	movw	r0, #4
   246f0:	moveq	r0, #0
   246f4:	ldr	r1, [sp, #4]
   246f8:	add	r0, r1, r0
   246fc:	str	r0, [fp, #-48]	; 0xffffffd0
   24700:	ldr	r0, [sp, #24]
   24704:	cmp	r0, #0
   24708:	beq	24728 <flatcc_builder_create_buffer@@Base+0x31c>
   2470c:	ldr	r0, [fp, #-8]
   24710:	ldr	r0, [r0, #144]	; 0x90
   24714:	ldr	r1, [fp, #-48]	; 0xffffffd0
   24718:	sub	r0, r0, r1
   2471c:	bl	242d4 <flatcc_builder_embed_buffer@@Base+0x388>
   24720:	str	r0, [fp, #-44]	; 0xffffffd4
   24724:	b	24740 <flatcc_builder_create_buffer@@Base+0x334>
   24728:	ldr	r0, [fp, #-8]
   2472c:	ldr	r0, [r0, #140]	; 0x8c
   24730:	ldr	r1, [fp, #-48]	; 0xffffffd0
   24734:	sub	r0, r0, r1
   24738:	bl	242d4 <flatcc_builder_embed_buffer@@Base+0x388>
   2473c:	str	r0, [fp, #-44]	; 0xffffffd4
   24740:	ldr	r0, [fp, #-20]	; 0xffffffec
   24744:	ldr	r1, [fp, #-48]	; 0xffffffd0
   24748:	sub	r0, r0, r1
   2474c:	bl	242d4 <flatcc_builder_embed_buffer@@Base+0x388>
   24750:	str	r0, [fp, #-40]	; 0xffffffd8
   24754:	ldr	r0, [fp, #-8]
   24758:	add	r1, sp, #32
   2475c:	bl	242e8 <flatcc_builder_embed_buffer@@Base+0x39c>
   24760:	str	r0, [fp, #-28]	; 0xffffffe4
   24764:	movw	r1, #0
   24768:	cmp	r1, r0
   2476c:	bne	24790 <flatcc_builder_create_buffer@@Base+0x384>
   24770:	ldr	r0, [pc, #44]	; 247a4 <flatcc_builder_create_buffer@@Base+0x398>
   24774:	add	r0, pc, r0
   24778:	ldr	r1, [pc, #40]	; 247a8 <flatcc_builder_create_buffer@@Base+0x39c>
   2477c:	add	r1, pc, r1
   24780:	ldr	r2, [pc, #36]	; 247ac <flatcc_builder_create_buffer@@Base+0x3a0>
   24784:	add	r3, pc, r2
   24788:	movw	r2, #772	; 0x304
   2478c:	bl	12b80 <__assert_fail@plt>
   24790:	ldr	r0, [fp, #-28]	; 0xffffffe4
   24794:	str	r0, [fp, #-4]
   24798:	ldr	r0, [fp, #-4]
   2479c:	mov	sp, fp
   247a0:	pop	{fp, pc}
   247a4:	andeq	sp, r0, pc, asr #29
   247a8:	andeq	ip, r0, sl, lsl #26
   247ac:	andeq	ip, r0, r4, asr lr
   247b0:	andeq	pc, r1, r4, ror #19
   247b4:	sub	sp, sp, #8
   247b8:	str	r0, [sp, #4]
   247bc:	strh	r1, [sp, #2]
   247c0:	ldr	r0, [sp, #4]
   247c4:	ldrh	r0, [r0, #128]	; 0x80
   247c8:	ldrh	r1, [sp, #2]
   247cc:	cmp	r0, r1
   247d0:	bge	247e0 <flatcc_builder_create_buffer@@Base+0x3d4>
   247d4:	ldrh	r0, [sp, #2]
   247d8:	ldr	r1, [sp, #4]
   247dc:	strh	r0, [r1, #128]	; 0x80
   247e0:	add	sp, sp, #8
   247e4:	bx	lr
   247e8:	sub	sp, sp, #4
   247ec:	str	r0, [sp]
   247f0:	ldr	r0, [sp]
   247f4:	add	sp, sp, #4
   247f8:	bx	lr

000247fc <flatcc_builder_create_struct@@Base>:
   247fc:	push	{fp, lr}
   24800:	mov	fp, sp
   24804:	sub	sp, sp, #96	; 0x60
   24808:	str	r0, [fp, #-4]
   2480c:	str	r1, [fp, #-8]
   24810:	str	r2, [fp, #-12]
   24814:	strh	r3, [fp, #-14]
   24818:	ldrh	r0, [fp, #-14]
   2481c:	cmp	r0, #1
   24820:	blt	24828 <flatcc_builder_create_struct@@Base+0x2c>
   24824:	b	24848 <flatcc_builder_create_struct@@Base+0x4c>
   24828:	ldr	r0, [pc, #244]	; 24924 <flatcc_builder_create_struct@@Base+0x128>
   2482c:	add	r0, pc, r0
   24830:	ldr	r1, [pc, #240]	; 24928 <flatcc_builder_create_struct@@Base+0x12c>
   24834:	add	r1, pc, r1
   24838:	ldr	r2, [pc, #236]	; 2492c <flatcc_builder_create_struct@@Base+0x130>
   2483c:	add	r3, pc, r2
   24840:	movw	r2, #783	; 0x30f
   24844:	bl	12b80 <__assert_fail@plt>
   24848:	ldr	r0, [fp, #-4]
   2484c:	ldrh	r1, [fp, #-14]
   24850:	bl	247b4 <flatcc_builder_create_buffer@@Base+0x3a8>
   24854:	ldr	r0, [fp, #-4]
   24858:	ldr	r1, [fp, #-12]
   2485c:	ldrh	r2, [fp, #-14]
   24860:	bl	242a0 <flatcc_builder_embed_buffer@@Base+0x354>
   24864:	str	r0, [fp, #-20]	; 0xffffffec
   24868:	movw	r0, #0
   2486c:	str	r0, [sp, #4]
   24870:	str	r0, [sp, #8]
   24874:	ldr	r0, [fp, #-12]
   24878:	cmp	r0, #0
   2487c:	bls	248c0 <flatcc_builder_create_struct@@Base+0xc4>
   24880:	ldr	r0, [fp, #-12]
   24884:	ldr	r1, [sp, #4]
   24888:	add	r0, r1, r0
   2488c:	str	r0, [sp, #4]
   24890:	ldr	r0, [fp, #-8]
   24894:	add	r1, sp, #4
   24898:	add	r1, r1, #8
   2489c:	ldr	r2, [sp, #8]
   248a0:	str	r0, [r1, r2, lsl #3]
   248a4:	ldr	r0, [fp, #-12]
   248a8:	ldr	r2, [sp, #8]
   248ac:	add	r1, r1, r2, lsl #3
   248b0:	str	r0, [r1, #4]
   248b4:	ldr	r0, [sp, #8]
   248b8:	add	r0, r0, #1
   248bc:	str	r0, [sp, #8]
   248c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   248c4:	cmp	r0, #0
   248c8:	bls	24910 <flatcc_builder_create_struct@@Base+0x114>
   248cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   248d0:	ldr	r1, [sp, #4]
   248d4:	add	r0, r1, r0
   248d8:	str	r0, [sp, #4]
   248dc:	add	r0, sp, #4
   248e0:	add	r0, r0, #8
   248e4:	ldr	r1, [sp, #8]
   248e8:	ldr	r2, [pc, #64]	; 24930 <flatcc_builder_create_struct@@Base+0x134>
   248ec:	ldr	r2, [pc, r2]
   248f0:	str	r2, [r0, r1, lsl #3]
   248f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   248f8:	ldr	r2, [sp, #8]
   248fc:	add	r0, r0, r2, lsl #3
   24900:	str	r1, [r0, #4]
   24904:	ldr	r0, [sp, #8]
   24908:	add	r0, r0, #1
   2490c:	str	r0, [sp, #8]
   24910:	ldr	r0, [fp, #-4]
   24914:	add	r1, sp, #4
   24918:	bl	242e8 <flatcc_builder_embed_buffer@@Base+0x39c>
   2491c:	mov	sp, fp
   24920:	pop	{fp, pc}
   24924:	andeq	ip, r0, pc, lsr #28
   24928:	andeq	ip, r0, r2, asr ip
   2492c:	andeq	ip, r0, sl, lsr #28
   24930:	andeq	pc, r1, ip, ror r7	; <UNPREDICTABLE>

00024934 <flatcc_builder_start_buffer@@Base>:
   24934:	push	{fp, lr}
   24938:	mov	fp, sp
   2493c:	sub	sp, sp, #32
   24940:	str	r0, [fp, #-8]
   24944:	str	r1, [fp, #-12]
   24948:	strh	r2, [fp, #-14]
   2494c:	str	r3, [sp, #12]
   24950:	ldr	r0, [fp, #-8]
   24954:	ldr	r1, [fp, #-8]
   24958:	ldrh	r1, [r1, #128]	; 0x80
   2495c:	bl	24aac <flatcc_builder_start_buffer@@Base+0x178>
   24960:	cmp	r0, #0
   24964:	beq	24974 <flatcc_builder_start_buffer@@Base+0x40>
   24968:	mvn	r0, #0
   2496c:	str	r0, [fp, #-4]
   24970:	b	24a9c <flatcc_builder_start_buffer@@Base+0x168>
   24974:	ldr	r0, [fp, #-8]
   24978:	movw	r1, #1
   2497c:	strh	r1, [r0, #128]	; 0x80
   24980:	ldr	r0, [fp, #-8]
   24984:	ldrh	r0, [r0, #132]	; 0x84
   24988:	ldr	r1, [fp, #-8]
   2498c:	ldr	r1, [r1, #32]
   24990:	strh	r0, [r1, #34]	; 0x22
   24994:	ldrh	r0, [fp, #-14]
   24998:	ldr	r1, [fp, #-8]
   2499c:	strh	r0, [r1, #132]	; 0x84
   249a0:	ldr	r0, [fp, #-8]
   249a4:	ldrh	r0, [r0, #164]	; 0xa4
   249a8:	ldr	r1, [fp, #-8]
   249ac:	ldr	r1, [r1, #32]
   249b0:	strh	r0, [r1, #32]
   249b4:	ldr	r0, [sp, #12]
   249b8:	ldr	r1, [fp, #-8]
   249bc:	strh	r0, [r1, #164]	; 0xa4
   249c0:	ldr	r0, [fp, #-8]
   249c4:	ldr	r0, [r0, #144]	; 0x90
   249c8:	ldr	r1, [fp, #-8]
   249cc:	ldr	r1, [r1, #32]
   249d0:	str	r0, [r1, #20]
   249d4:	ldr	r0, [fp, #-8]
   249d8:	ldr	r0, [r0, #152]	; 0x98
   249dc:	ldr	r1, [fp, #-8]
   249e0:	ldr	r1, [r1, #32]
   249e4:	str	r0, [r1, #28]
   249e8:	ldr	r0, [fp, #-8]
   249ec:	ldr	r0, [r0, #136]	; 0x88
   249f0:	ldr	r1, [fp, #-8]
   249f4:	str	r0, [r1, #144]	; 0x90
   249f8:	ldr	r0, [fp, #-8]
   249fc:	ldr	r1, [r0, #148]	; 0x94
   24a00:	add	r2, r1, #1
   24a04:	str	r2, [r0, #148]	; 0x94
   24a08:	ldr	r0, [fp, #-8]
   24a0c:	str	r1, [r0, #152]	; 0x98
   24a10:	ldr	r0, [fp, #-8]
   24a14:	ldr	r0, [r0, #168]	; 0xa8
   24a18:	ldr	r1, [fp, #-8]
   24a1c:	ldr	r1, [r1, #32]
   24a20:	str	r0, [r1, #16]
   24a24:	ldr	r0, [fp, #-8]
   24a28:	add	r0, r0, #168	; 0xa8
   24a2c:	ldr	r1, [fp, #-12]
   24a30:	movw	r2, #0
   24a34:	cmp	r1, r2
   24a38:	str	r0, [sp, #8]
   24a3c:	beq	24a4c <flatcc_builder_start_buffer@@Base+0x118>
   24a40:	ldr	r0, [fp, #-12]
   24a44:	str	r0, [sp, #4]
   24a48:	b	24a5c <flatcc_builder_start_buffer@@Base+0x128>
   24a4c:	ldr	r0, [pc, #84]	; 24aa8 <flatcc_builder_start_buffer@@Base+0x174>
   24a50:	ldr	r0, [pc, r0]
   24a54:	str	r0, [sp, #4]
   24a58:	b	24a5c <flatcc_builder_start_buffer@@Base+0x128>
   24a5c:	ldr	r0, [sp, #4]
   24a60:	ldrb	r1, [r0]
   24a64:	ldr	r2, [sp, #8]
   24a68:	strb	r1, [r2]
   24a6c:	ldrb	r1, [r0, #1]
   24a70:	strb	r1, [r2, #1]
   24a74:	ldrb	r1, [r0, #2]
   24a78:	strb	r1, [r2, #2]
   24a7c:	ldrb	r0, [r0, #3]
   24a80:	strb	r0, [r2, #3]
   24a84:	ldr	r0, [fp, #-8]
   24a88:	ldr	r0, [r0, #32]
   24a8c:	movw	r1, #1
   24a90:	strh	r1, [r0, #14]
   24a94:	movw	r0, #0
   24a98:	str	r0, [fp, #-4]
   24a9c:	ldr	r0, [fp, #-4]
   24aa0:	mov	sp, fp
   24aa4:	pop	{fp, pc}
   24aa8:	andeq	pc, r1, r8, lsl r6	; <UNPREDICTABLE>
   24aac:	push	{fp, lr}
   24ab0:	mov	fp, sp
   24ab4:	sub	sp, sp, #24
   24ab8:	str	r0, [fp, #-8]
   24abc:	strh	r1, [fp, #-10]
   24ac0:	ldr	r0, [fp, #-8]
   24ac4:	ldr	r1, [r0, #156]	; 0x9c
   24ac8:	add	r1, r1, #1
   24acc:	str	r1, [r0, #156]	; 0x9c
   24ad0:	ldr	r0, [fp, #-8]
   24ad4:	ldr	r0, [r0, #160]	; 0xa0
   24ad8:	cmp	r1, r0
   24adc:	ble	24bc8 <flatcc_builder_start_buffer@@Base+0x294>
   24ae0:	ldr	r0, [fp, #-8]
   24ae4:	ldr	r0, [r0, #176]	; 0xb0
   24ae8:	cmp	r0, #0
   24aec:	ble	24b14 <flatcc_builder_start_buffer@@Base+0x1e0>
   24af0:	ldr	r0, [fp, #-8]
   24af4:	ldr	r0, [r0, #156]	; 0x9c
   24af8:	ldr	r1, [fp, #-8]
   24afc:	ldr	r1, [r1, #176]	; 0xb0
   24b00:	cmp	r0, r1
   24b04:	ble	24b14 <flatcc_builder_start_buffer@@Base+0x1e0>
   24b08:	mvn	r0, #0
   24b0c:	str	r0, [fp, #-4]
   24b10:	b	24c6c <flatcc_builder_start_buffer@@Base+0x338>
   24b14:	ldr	r0, [fp, #-8]
   24b18:	ldr	r1, [fp, #-8]
   24b1c:	ldr	r1, [r1, #156]	; 0x9c
   24b20:	sub	r1, r1, #1
   24b24:	movw	r2, #36	; 0x24
   24b28:	mul	r1, r1, r2
   24b2c:	movw	r3, #4
   24b30:	str	r1, [sp, #8]
   24b34:	mov	r1, r3
   24b38:	ldr	r3, [sp, #8]
   24b3c:	str	r2, [sp, #4]
   24b40:	mov	r2, r3
   24b44:	ldr	r3, [sp, #4]
   24b48:	movw	ip, #0
   24b4c:	str	ip, [sp]
   24b50:	bl	23c3c <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   24b54:	ldr	r1, [fp, #-8]
   24b58:	str	r0, [r1, #32]
   24b5c:	movw	r1, #0
   24b60:	cmp	r0, r1
   24b64:	bne	24b74 <flatcc_builder_start_buffer@@Base+0x240>
   24b68:	mvn	r0, #0
   24b6c:	str	r0, [fp, #-4]
   24b70:	b	24c6c <flatcc_builder_start_buffer@@Base+0x338>
   24b74:	ldr	r0, [fp, #-8]
   24b78:	ldr	r0, [r0, #88]	; 0x58
   24b7c:	movw	r1, #36	; 0x24
   24b80:	udiv	r0, r0, r1
   24b84:	ldr	r1, [fp, #-8]
   24b88:	str	r0, [r1, #160]	; 0xa0
   24b8c:	ldr	r0, [fp, #-8]
   24b90:	ldr	r0, [r0, #176]	; 0xb0
   24b94:	cmp	r0, #0
   24b98:	ble	24bc4 <flatcc_builder_start_buffer@@Base+0x290>
   24b9c:	ldr	r0, [fp, #-8]
   24ba0:	ldr	r0, [r0, #176]	; 0xb0
   24ba4:	ldr	r1, [fp, #-8]
   24ba8:	ldr	r1, [r1, #160]	; 0xa0
   24bac:	cmp	r0, r1
   24bb0:	bge	24bc4 <flatcc_builder_start_buffer@@Base+0x290>
   24bb4:	ldr	r0, [fp, #-8]
   24bb8:	ldr	r0, [r0, #176]	; 0xb0
   24bbc:	ldr	r1, [fp, #-8]
   24bc0:	str	r0, [r1, #160]	; 0xa0
   24bc4:	b	24bd8 <flatcc_builder_start_buffer@@Base+0x2a4>
   24bc8:	ldr	r0, [fp, #-8]
   24bcc:	ldr	r1, [r0, #32]
   24bd0:	add	r1, r1, #36	; 0x24
   24bd4:	str	r1, [r0, #32]
   24bd8:	ldr	r0, [fp, #-8]
   24bdc:	ldr	r0, [r0, #20]
   24be0:	ldr	r1, [fp, #-8]
   24be4:	ldr	r1, [r1, #32]
   24be8:	str	r0, [r1, #8]
   24bec:	ldr	r0, [fp, #-8]
   24bf0:	ldrh	r0, [r0, #130]	; 0x82
   24bf4:	ldr	r1, [fp, #-8]
   24bf8:	ldr	r1, [r1, #32]
   24bfc:	strh	r0, [r1, #12]
   24c00:	ldrh	r0, [fp, #-10]
   24c04:	ldr	r1, [fp, #-8]
   24c08:	strh	r0, [r1, #130]	; 0x82
   24c0c:	ldr	r0, [fp, #-8]
   24c10:	ldr	r0, [r0, #28]
   24c14:	ldr	r1, [fp, #-8]
   24c18:	ldr	r1, [r1, #32]
   24c1c:	str	r0, [r1]
   24c20:	ldr	r0, [fp, #-8]
   24c24:	ldr	r0, [r0, #32]
   24c28:	mvn	r1, #3
   24c2c:	str	r1, [r0, #4]
   24c30:	ldr	r0, [fp, #-8]
   24c34:	ldr	r0, [r0, #28]
   24c38:	ldr	r1, [fp, #-8]
   24c3c:	ldr	r1, [r1, #20]
   24c40:	add	r0, r0, r1
   24c44:	add	r0, r0, #8
   24c48:	sub	r0, r0, #1
   24c4c:	mvn	r1, #7
   24c50:	and	r0, r0, r1
   24c54:	ldr	r1, [fp, #-8]
   24c58:	str	r0, [r1, #28]
   24c5c:	ldr	r0, [fp, #-8]
   24c60:	movw	r1, #0
   24c64:	str	r1, [r0, #20]
   24c68:	str	r1, [fp, #-4]
   24c6c:	ldr	r0, [fp, #-4]
   24c70:	mov	sp, fp
   24c74:	pop	{fp, pc}

00024c78 <flatcc_builder_end_buffer@@Base>:
   24c78:	push	{r4, sl, fp, lr}
   24c7c:	add	fp, sp, #8
   24c80:	sub	sp, sp, #32
   24c84:	str	r0, [fp, #-16]
   24c88:	str	r1, [sp, #20]
   24c8c:	ldr	r0, [fp, #-16]
   24c90:	ldrh	r0, [r0, #164]	; 0xa4
   24c94:	and	r0, r0, #2
   24c98:	str	r0, [sp, #12]
   24c9c:	ldr	r0, [fp, #-16]
   24ca0:	ldr	r0, [r0, #152]	; 0x98
   24ca4:	cmp	r0, #0
   24ca8:	movw	r0, #0
   24cac:	moveq	r0, #1
   24cb0:	tst	r0, #1
   24cb4:	movw	r0, #0
   24cb8:	moveq	r0, #1
   24cbc:	ldr	r1, [sp, #12]
   24cc0:	orr	r0, r1, r0
   24cc4:	str	r0, [sp, #12]
   24cc8:	ldr	r0, [fp, #-16]
   24ccc:	ldr	r0, [r0, #32]
   24cd0:	ldrh	r0, [r0, #14]
   24cd4:	cmp	r0, #1
   24cd8:	bne	24ce0 <flatcc_builder_end_buffer@@Base+0x68>
   24cdc:	b	24d00 <flatcc_builder_end_buffer@@Base+0x88>
   24ce0:	ldr	r0, [pc, #244]	; 24ddc <flatcc_builder_end_buffer@@Base+0x164>
   24ce4:	add	r0, pc, r0
   24ce8:	ldr	r1, [pc, #240]	; 24de0 <flatcc_builder_end_buffer@@Base+0x168>
   24cec:	add	r1, pc, r1
   24cf0:	ldr	r2, [pc, #236]	; 24de4 <flatcc_builder_end_buffer@@Base+0x16c>
   24cf4:	add	r3, pc, r2
   24cf8:	movw	r2, #838	; 0x346
   24cfc:	bl	12b80 <__assert_fail@plt>
   24d00:	ldr	r0, [fp, #-16]
   24d04:	ldr	r1, [fp, #-16]
   24d08:	ldrh	r1, [r1, #132]	; 0x84
   24d0c:	bl	247b4 <flatcc_builder_create_buffer@@Base+0x3a8>
   24d10:	ldr	r0, [fp, #-16]
   24d14:	ldr	r1, [fp, #-16]
   24d18:	add	r1, r1, #168	; 0xa8
   24d1c:	ldr	lr, [fp, #-16]
   24d20:	ldrh	lr, [lr, #132]	; 0x84
   24d24:	ldr	r3, [sp, #20]
   24d28:	ldr	r2, [fp, #-16]
   24d2c:	ldrh	r2, [r2, #128]	; 0x80
   24d30:	ldr	ip, [sp, #12]
   24d34:	uxth	lr, lr
   24d38:	str	r2, [sp, #8]
   24d3c:	mov	r2, lr
   24d40:	ldr	lr, [sp, #8]
   24d44:	uxth	r4, lr
   24d48:	str	r4, [sp]
   24d4c:	str	ip, [sp, #4]
   24d50:	bl	2440c <flatcc_builder_create_buffer@@Base>
   24d54:	str	r0, [sp, #16]
   24d58:	movw	r1, #0
   24d5c:	cmp	r1, r0
   24d60:	bne	24d70 <flatcc_builder_end_buffer@@Base+0xf8>
   24d64:	movw	r0, #0
   24d68:	str	r0, [fp, #-12]
   24d6c:	b	24dd0 <flatcc_builder_end_buffer@@Base+0x158>
   24d70:	ldr	r0, [fp, #-16]
   24d74:	ldr	r0, [r0, #32]
   24d78:	ldr	r0, [r0, #20]
   24d7c:	ldr	r1, [fp, #-16]
   24d80:	str	r0, [r1, #144]	; 0x90
   24d84:	ldr	r0, [fp, #-16]
   24d88:	ldr	r0, [r0, #32]
   24d8c:	ldr	r0, [r0, #28]
   24d90:	ldr	r1, [fp, #-16]
   24d94:	str	r0, [r1, #152]	; 0x98
   24d98:	ldr	r0, [fp, #-16]
   24d9c:	ldr	r0, [r0, #32]
   24da0:	ldr	r0, [r0, #16]
   24da4:	ldr	r1, [fp, #-16]
   24da8:	str	r0, [r1, #168]	; 0xa8
   24dac:	ldr	r0, [fp, #-16]
   24db0:	ldr	r0, [r0, #32]
   24db4:	ldrh	r0, [r0, #32]
   24db8:	ldr	r1, [fp, #-16]
   24dbc:	strh	r0, [r1, #164]	; 0xa4
   24dc0:	ldr	r0, [fp, #-16]
   24dc4:	bl	24de8 <flatcc_builder_end_buffer@@Base+0x170>
   24dc8:	ldr	r0, [sp, #16]
   24dcc:	str	r0, [fp, #-12]
   24dd0:	ldr	r0, [fp, #-12]
   24dd4:	sub	sp, fp, #8
   24dd8:	pop	{r4, sl, fp, pc}
   24ddc:	andeq	ip, r0, r8, ror #19
   24de0:	muleq	r0, sl, r7
   24de4:	andeq	ip, r0, r4, lsl #20
   24de8:	push	{fp, lr}
   24dec:	mov	fp, sp
   24df0:	sub	sp, sp, #8
   24df4:	str	r0, [sp, #4]
   24df8:	ldr	r0, [sp, #4]
   24dfc:	ldr	r0, [r0, #16]
   24e00:	ldr	r1, [sp, #4]
   24e04:	ldr	r2, [r1, #20]
   24e08:	movw	r1, #0
   24e0c:	and	r1, r1, #255	; 0xff
   24e10:	bl	12b2c <memset@plt>
   24e14:	ldr	r0, [sp, #4]
   24e18:	ldr	r0, [r0, #32]
   24e1c:	ldr	r0, [r0, #8]
   24e20:	ldr	r1, [sp, #4]
   24e24:	str	r0, [r1, #20]
   24e28:	ldr	r0, [sp, #4]
   24e2c:	ldr	r0, [r0, #32]
   24e30:	ldr	r0, [r0]
   24e34:	ldr	r1, [sp, #4]
   24e38:	str	r0, [r1, #28]
   24e3c:	ldr	r0, [sp, #4]
   24e40:	ldr	r1, [sp, #4]
   24e44:	ldr	r1, [r1, #32]
   24e48:	ldr	r1, [r1, #4]
   24e4c:	bl	24f14 <flatcc_builder_start_struct@@Base+0x70>
   24e50:	ldr	r0, [sp, #4]
   24e54:	ldr	r1, [sp, #4]
   24e58:	ldrh	r1, [r1, #130]	; 0x82
   24e5c:	bl	247b4 <flatcc_builder_create_buffer@@Base+0x3a8>
   24e60:	ldr	r0, [sp, #4]
   24e64:	ldr	r0, [r0, #32]
   24e68:	ldrh	r0, [r0, #12]
   24e6c:	ldr	r1, [sp, #4]
   24e70:	strh	r0, [r1, #130]	; 0x82
   24e74:	ldr	r0, [sp, #4]
   24e78:	ldr	r1, [r0, #32]
   24e7c:	mvn	r2, #35	; 0x23
   24e80:	add	r1, r1, r2
   24e84:	str	r1, [r0, #32]
   24e88:	ldr	r0, [sp, #4]
   24e8c:	ldr	r1, [r0, #156]	; 0x9c
   24e90:	mvn	r2, #0
   24e94:	add	r1, r1, r2
   24e98:	str	r1, [r0, #156]	; 0x9c
   24e9c:	mov	sp, fp
   24ea0:	pop	{fp, pc}

00024ea4 <flatcc_builder_start_struct@@Base>:
   24ea4:	push	{fp, lr}
   24ea8:	mov	fp, sp
   24eac:	sub	sp, sp, #16
   24eb0:	str	r0, [sp, #8]
   24eb4:	str	r1, [sp, #4]
   24eb8:	strh	r2, [sp, #2]
   24ebc:	ldr	r0, [sp, #8]
   24ec0:	ldrh	r1, [sp, #2]
   24ec4:	bl	24aac <flatcc_builder_start_buffer@@Base+0x178>
   24ec8:	cmp	r0, #0
   24ecc:	beq	24edc <flatcc_builder_start_struct@@Base+0x38>
   24ed0:	movw	r0, #0
   24ed4:	str	r0, [fp, #-4]
   24ed8:	b	24f08 <flatcc_builder_start_struct@@Base+0x64>
   24edc:	ldr	r0, [sp, #8]
   24ee0:	ldr	r0, [r0, #32]
   24ee4:	movw	r1, #2
   24ee8:	strh	r1, [r0, #14]
   24eec:	ldr	r0, [sp, #8]
   24ef0:	mvn	r1, #3
   24ef4:	bl	24f14 <flatcc_builder_start_struct@@Base+0x70>
   24ef8:	ldr	r0, [sp, #8]
   24efc:	ldr	r1, [sp, #4]
   24f00:	bl	24fa0 <flatcc_builder_start_struct@@Base+0xfc>
   24f04:	str	r0, [fp, #-4]
   24f08:	ldr	r0, [fp, #-4]
   24f0c:	mov	sp, fp
   24f10:	pop	{fp, pc}
   24f14:	sub	sp, sp, #12
   24f18:	str	r0, [sp, #8]
   24f1c:	str	r1, [sp, #4]
   24f20:	ldr	r0, [sp, #8]
   24f24:	add	r0, r0, #52	; 0x34
   24f28:	add	r0, r0, #8
   24f2c:	str	r0, [sp]
   24f30:	ldr	r0, [sp, #8]
   24f34:	ldr	r0, [r0, #60]	; 0x3c
   24f38:	ldr	r1, [sp, #8]
   24f3c:	ldr	r1, [r1, #28]
   24f40:	add	r0, r0, r1
   24f44:	ldr	r1, [sp, #8]
   24f48:	str	r0, [r1, #16]
   24f4c:	ldr	r0, [sp]
   24f50:	ldr	r0, [r0, #4]
   24f54:	ldr	r1, [sp, #8]
   24f58:	ldr	r1, [r1, #28]
   24f5c:	sub	r0, r0, r1
   24f60:	ldr	r1, [sp, #8]
   24f64:	str	r0, [r1, #24]
   24f68:	ldr	r0, [sp, #8]
   24f6c:	ldr	r0, [r0, #24]
   24f70:	ldr	r1, [sp, #4]
   24f74:	cmp	r0, r1
   24f78:	bls	24f88 <flatcc_builder_start_struct@@Base+0xe4>
   24f7c:	ldr	r0, [sp, #4]
   24f80:	ldr	r1, [sp, #8]
   24f84:	str	r0, [r1, #24]
   24f88:	ldr	r0, [sp, #4]
   24f8c:	ldr	r1, [sp, #8]
   24f90:	ldr	r1, [r1, #32]
   24f94:	str	r0, [r1, #4]
   24f98:	add	sp, sp, #12
   24f9c:	bx	lr
   24fa0:	push	{fp, lr}
   24fa4:	mov	fp, sp
   24fa8:	sub	sp, sp, #16
   24fac:	str	r0, [sp, #8]
   24fb0:	str	r1, [sp, #4]
   24fb4:	ldr	r0, [sp, #8]
   24fb8:	ldr	r0, [r0, #20]
   24fbc:	str	r0, [sp]
   24fc0:	ldr	r0, [sp, #4]
   24fc4:	ldr	r1, [sp, #8]
   24fc8:	ldr	r2, [r1, #20]
   24fcc:	add	r0, r2, r0
   24fd0:	str	r0, [r1, #20]
   24fd4:	ldr	r1, [sp, #8]
   24fd8:	ldr	r1, [r1, #24]
   24fdc:	cmp	r0, r1
   24fe0:	bcc	25014 <flatcc_builder_start_struct@@Base+0x170>
   24fe4:	ldr	r0, [sp, #8]
   24fe8:	ldr	r1, [sp, #8]
   24fec:	ldr	r1, [r1, #20]
   24ff0:	add	r1, r1, #1
   24ff4:	mvn	r2, #3
   24ff8:	bl	29110 <flatcc_builder_get_emit_context@@Base+0x40>
   24ffc:	cmp	r0, #0
   25000:	beq	25010 <flatcc_builder_start_struct@@Base+0x16c>
   25004:	movw	r0, #0
   25008:	str	r0, [fp, #-4]
   2500c:	b	25028 <flatcc_builder_start_struct@@Base+0x184>
   25010:	b	25014 <flatcc_builder_start_struct@@Base+0x170>
   25014:	ldr	r0, [sp, #8]
   25018:	ldr	r0, [r0, #16]
   2501c:	ldr	r1, [sp]
   25020:	add	r0, r0, r1
   25024:	str	r0, [fp, #-4]
   25028:	ldr	r0, [fp, #-4]
   2502c:	mov	sp, fp
   25030:	pop	{fp, pc}

00025034 <flatcc_builder_struct_edit@@Base>:
   25034:	sub	sp, sp, #4
   25038:	str	r0, [sp]
   2503c:	ldr	r0, [sp]
   25040:	ldr	r0, [r0, #16]
   25044:	add	sp, sp, #4
   25048:	bx	lr

0002504c <flatcc_builder_end_struct@@Base>:
   2504c:	push	{fp, lr}
   25050:	mov	fp, sp
   25054:	sub	sp, sp, #16
   25058:	str	r0, [sp, #8]
   2505c:	ldr	r0, [sp, #8]
   25060:	ldr	r0, [r0, #32]
   25064:	ldrh	r0, [r0, #14]
   25068:	cmp	r0, #2
   2506c:	bne	25074 <flatcc_builder_end_struct@@Base+0x28>
   25070:	b	25094 <flatcc_builder_end_struct@@Base+0x48>
   25074:	ldr	r0, [pc, #112]	; 250ec <flatcc_builder_end_struct@@Base+0xa0>
   25078:	add	r0, pc, r0
   2507c:	ldr	r1, [pc, #108]	; 250f0 <flatcc_builder_end_struct@@Base+0xa4>
   25080:	add	r1, pc, r1
   25084:	ldr	r2, [pc, #104]	; 250f4 <flatcc_builder_end_struct@@Base+0xa8>
   25088:	add	r3, pc, r2
   2508c:	movw	r2, #872	; 0x368
   25090:	bl	12b80 <__assert_fail@plt>
   25094:	ldr	r0, [sp, #8]
   25098:	ldr	r1, [sp, #8]
   2509c:	ldr	r1, [r1, #16]
   250a0:	ldr	r2, [sp, #8]
   250a4:	ldr	r2, [r2, #20]
   250a8:	ldr	r3, [sp, #8]
   250ac:	ldrh	r3, [r3, #130]	; 0x82
   250b0:	bl	247fc <flatcc_builder_create_struct@@Base>
   250b4:	str	r0, [sp, #4]
   250b8:	movw	r1, #0
   250bc:	cmp	r1, r0
   250c0:	bne	250d0 <flatcc_builder_end_struct@@Base+0x84>
   250c4:	movw	r0, #0
   250c8:	str	r0, [fp, #-4]
   250cc:	b	250e0 <flatcc_builder_end_struct@@Base+0x94>
   250d0:	ldr	r0, [sp, #8]
   250d4:	bl	24de8 <flatcc_builder_end_buffer@@Base+0x170>
   250d8:	ldr	r0, [sp, #4]
   250dc:	str	r0, [fp, #-4]
   250e0:	ldr	r0, [fp, #-4]
   250e4:	mov	sp, fp
   250e8:	pop	{fp, pc}
   250ec:	ldrdeq	ip, [r0], -r9
   250f0:	andeq	ip, r0, r6, lsl #8
   250f4:	strdeq	ip, [r0], -r5

000250f8 <flatcc_builder_extend_vector@@Base>:
   250f8:	push	{fp, lr}
   250fc:	mov	fp, sp
   25100:	sub	sp, sp, #16
   25104:	str	r0, [sp, #8]
   25108:	str	r1, [sp, #4]
   2510c:	ldr	r0, [sp, #8]
   25110:	ldr	r1, [sp, #4]
   25114:	ldr	r2, [sp, #8]
   25118:	ldr	r2, [r2, #32]
   2511c:	ldr	r2, [r2, #24]
   25120:	bl	25164 <flatcc_builder_extend_vector@@Base+0x6c>
   25124:	cmp	r0, #0
   25128:	beq	25138 <flatcc_builder_extend_vector@@Base+0x40>
   2512c:	movw	r0, #0
   25130:	str	r0, [fp, #-4]
   25134:	b	25158 <flatcc_builder_extend_vector@@Base+0x60>
   25138:	ldr	r0, [sp, #8]
   2513c:	ldr	r1, [sp, #8]
   25140:	ldr	r1, [r1, #32]
   25144:	ldr	r1, [r1, #16]
   25148:	ldr	r2, [sp, #4]
   2514c:	mul	r1, r1, r2
   25150:	bl	24fa0 <flatcc_builder_start_struct@@Base+0xfc>
   25154:	str	r0, [fp, #-4]
   25158:	ldr	r0, [fp, #-4]
   2515c:	mov	sp, fp
   25160:	pop	{fp, pc}
   25164:	push	{fp, lr}
   25168:	mov	fp, sp
   2516c:	sub	sp, sp, #24
   25170:	str	r0, [fp, #-8]
   25174:	str	r1, [sp, #12]
   25178:	str	r2, [sp, #8]
   2517c:	ldr	r0, [fp, #-8]
   25180:	ldr	r0, [r0, #32]
   25184:	ldr	r0, [r0, #20]
   25188:	str	r0, [sp, #4]
   2518c:	ldr	r0, [sp, #4]
   25190:	ldr	r1, [sp, #12]
   25194:	add	r0, r0, r1
   25198:	str	r0, [sp]
   2519c:	ldr	r0, [sp, #4]
   251a0:	ldr	r1, [sp]
   251a4:	cmp	r0, r1
   251a8:	bhi	251bc <flatcc_builder_extend_vector@@Base+0xc4>
   251ac:	ldr	r0, [sp]
   251b0:	ldr	r1, [sp, #8]
   251b4:	cmp	r0, r1
   251b8:	bls	2520c <flatcc_builder_extend_vector@@Base+0x114>
   251bc:	ldr	r0, [sp, #4]
   251c0:	ldr	r1, [sp]
   251c4:	cmp	r0, r1
   251c8:	bhi	251e0 <flatcc_builder_extend_vector@@Base+0xe8>
   251cc:	ldr	r0, [sp]
   251d0:	ldr	r1, [sp, #8]
   251d4:	cmp	r0, r1
   251d8:	bhi	251e0 <flatcc_builder_extend_vector@@Base+0xe8>
   251dc:	b	25200 <flatcc_builder_extend_vector@@Base+0x108>
   251e0:	ldr	r0, [pc, #72]	; 25230 <flatcc_builder_extend_vector@@Base+0x138>
   251e4:	add	r0, pc, r0
   251e8:	ldr	r1, [pc, #68]	; 25234 <flatcc_builder_extend_vector@@Base+0x13c>
   251ec:	add	r1, pc, r1
   251f0:	ldr	r2, [pc, #64]	; 25238 <flatcc_builder_extend_vector@@Base+0x140>
   251f4:	add	r3, pc, r2
   251f8:	movw	r2, #892	; 0x37c
   251fc:	bl	12b80 <__assert_fail@plt>
   25200:	mvn	r0, #0
   25204:	str	r0, [fp, #-4]
   25208:	b	25224 <flatcc_builder_extend_vector@@Base+0x12c>
   2520c:	ldr	r0, [sp]
   25210:	ldr	r1, [fp, #-8]
   25214:	ldr	r1, [r1, #32]
   25218:	str	r0, [r1, #20]
   2521c:	movw	r0, #0
   25220:	str	r0, [fp, #-4]
   25224:	ldr	r0, [fp, #-4]
   25228:	mov	sp, fp
   2522c:	pop	{fp, pc}
   25230:	andeq	sp, r0, r8, ror #6
   25234:	muleq	r0, sl, r2
   25238:	andeq	sp, r0, r3, ror r3

0002523c <flatcc_builder_vector_push@@Base>:
   2523c:	push	{fp, lr}
   25240:	mov	fp, sp
   25244:	sub	sp, sp, #16
   25248:	str	r0, [sp, #8]
   2524c:	str	r1, [sp, #4]
   25250:	ldr	r0, [sp, #8]
   25254:	ldr	r0, [r0, #32]
   25258:	ldrh	r0, [r0, #14]
   2525c:	cmp	r0, #4
   25260:	bne	25268 <flatcc_builder_vector_push@@Base+0x2c>
   25264:	b	25288 <flatcc_builder_vector_push@@Base+0x4c>
   25268:	ldr	r0, [pc, #196]	; 25334 <flatcc_builder_vector_push@@Base+0xf8>
   2526c:	add	r0, pc, r0
   25270:	ldr	r1, [pc, #192]	; 25338 <flatcc_builder_vector_push@@Base+0xfc>
   25274:	add	r1, pc, r1
   25278:	ldr	r2, [pc, #188]	; 2533c <flatcc_builder_vector_push@@Base+0x100>
   2527c:	add	r3, pc, r2
   25280:	movw	r2, #907	; 0x38b
   25284:	bl	12b80 <__assert_fail@plt>
   25288:	ldr	r0, [sp, #8]
   2528c:	ldr	r0, [r0, #32]
   25290:	ldr	r0, [r0, #20]
   25294:	ldr	r1, [sp, #8]
   25298:	ldr	r1, [r1, #32]
   2529c:	ldr	r1, [r1, #24]
   252a0:	cmp	r0, r1
   252a4:	bls	252f8 <flatcc_builder_vector_push@@Base+0xbc>
   252a8:	ldr	r0, [sp, #8]
   252ac:	ldr	r0, [r0, #32]
   252b0:	ldr	r0, [r0, #20]
   252b4:	ldr	r1, [sp, #8]
   252b8:	ldr	r1, [r1, #32]
   252bc:	ldr	r1, [r1, #24]
   252c0:	cmp	r0, r1
   252c4:	bhi	252cc <flatcc_builder_vector_push@@Base+0x90>
   252c8:	b	252ec <flatcc_builder_vector_push@@Base+0xb0>
   252cc:	ldr	r0, [pc, #108]	; 25340 <flatcc_builder_vector_push@@Base+0x104>
   252d0:	add	r0, pc, r0
   252d4:	ldr	r1, [pc, #104]	; 25344 <flatcc_builder_vector_push@@Base+0x108>
   252d8:	add	r1, pc, r1
   252dc:	ldr	r2, [pc, #100]	; 25348 <flatcc_builder_vector_push@@Base+0x10c>
   252e0:	add	r3, pc, r2
   252e4:	movw	r2, #908	; 0x38c
   252e8:	bl	12b80 <__assert_fail@plt>
   252ec:	movw	r0, #0
   252f0:	str	r0, [fp, #-4]
   252f4:	b	25328 <flatcc_builder_vector_push@@Base+0xec>
   252f8:	ldr	r0, [sp, #8]
   252fc:	ldr	r0, [r0, #32]
   25300:	ldr	r1, [r0, #20]
   25304:	add	r1, r1, #1
   25308:	str	r1, [r0, #20]
   2530c:	ldr	r0, [sp, #8]
   25310:	ldr	r1, [sp, #4]
   25314:	ldr	r2, [sp, #8]
   25318:	ldr	r2, [r2, #32]
   2531c:	ldr	r2, [r2, #16]
   25320:	bl	2534c <flatcc_builder_vector_push@@Base+0x110>
   25324:	str	r0, [fp, #-4]
   25328:	ldr	r0, [fp, #-4]
   2532c:	mov	sp, fp
   25330:	pop	{fp, pc}
   25334:	andeq	ip, r0, r4, asr r5
   25338:	andeq	ip, r0, r2, lsl r2
   2533c:	andeq	ip, r0, r0, ror r5
   25340:	andeq	ip, r0, pc, asr r5
   25344:	andeq	ip, r0, lr, lsr #3
   25348:	andeq	ip, r0, ip, lsl #10
   2534c:	push	{fp, lr}
   25350:	mov	fp, sp
   25354:	sub	sp, sp, #24
   25358:	str	r0, [fp, #-8]
   2535c:	str	r1, [sp, #12]
   25360:	str	r2, [sp, #8]
   25364:	ldr	r0, [fp, #-8]
   25368:	ldr	r1, [sp, #8]
   2536c:	bl	24fa0 <flatcc_builder_start_struct@@Base+0xfc>
   25370:	str	r0, [sp, #4]
   25374:	movw	r1, #0
   25378:	cmp	r0, r1
   2537c:	bne	2538c <flatcc_builder_vector_push@@Base+0x150>
   25380:	movw	r0, #0
   25384:	str	r0, [fp, #-4]
   25388:	b	253a4 <flatcc_builder_vector_push@@Base+0x168>
   2538c:	ldr	r0, [sp, #4]
   25390:	ldr	r1, [sp, #12]
   25394:	ldr	r2, [sp, #8]
   25398:	bl	12a78 <memcpy@plt>
   2539c:	ldr	r0, [sp, #4]
   253a0:	str	r0, [fp, #-4]
   253a4:	ldr	r0, [fp, #-4]
   253a8:	mov	sp, fp
   253ac:	pop	{fp, pc}

000253b0 <flatcc_builder_append_vector@@Base>:
   253b0:	push	{fp, lr}
   253b4:	mov	fp, sp
   253b8:	sub	sp, sp, #16
   253bc:	str	r0, [sp, #8]
   253c0:	str	r1, [sp, #4]
   253c4:	str	r2, [sp]
   253c8:	ldr	r0, [sp, #8]
   253cc:	ldr	r0, [r0, #32]
   253d0:	ldrh	r0, [r0, #14]
   253d4:	cmp	r0, #4
   253d8:	bne	253e0 <flatcc_builder_append_vector@@Base+0x30>
   253dc:	b	25400 <flatcc_builder_append_vector@@Base+0x50>
   253e0:	ldr	r0, [pc, #116]	; 2545c <flatcc_builder_append_vector@@Base+0xac>
   253e4:	add	r0, pc, r0
   253e8:	ldr	r1, [pc, #112]	; 25460 <flatcc_builder_append_vector@@Base+0xb0>
   253ec:	add	r1, pc, r1
   253f0:	ldr	r2, [pc, #108]	; 25464 <flatcc_builder_append_vector@@Base+0xb4>
   253f4:	add	r3, pc, r2
   253f8:	movw	r2, #915	; 0x393
   253fc:	bl	12b80 <__assert_fail@plt>
   25400:	ldr	r0, [sp, #8]
   25404:	ldr	r1, [sp]
   25408:	ldr	r2, [sp, #8]
   2540c:	ldr	r2, [r2, #32]
   25410:	ldr	r2, [r2, #24]
   25414:	bl	25164 <flatcc_builder_extend_vector@@Base+0x6c>
   25418:	cmp	r0, #0
   2541c:	beq	2542c <flatcc_builder_append_vector@@Base+0x7c>
   25420:	movw	r0, #0
   25424:	str	r0, [fp, #-4]
   25428:	b	25450 <flatcc_builder_append_vector@@Base+0xa0>
   2542c:	ldr	r0, [sp, #8]
   25430:	ldr	r1, [sp, #4]
   25434:	ldr	r2, [sp, #8]
   25438:	ldr	r2, [r2, #32]
   2543c:	ldr	r2, [r2, #16]
   25440:	ldr	r3, [sp]
   25444:	mul	r2, r2, r3
   25448:	bl	2534c <flatcc_builder_vector_push@@Base+0x110>
   2544c:	str	r0, [fp, #-4]
   25450:	ldr	r0, [fp, #-4]
   25454:	mov	sp, fp
   25458:	pop	{fp, pc}
   2545c:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   25460:	muleq	r0, sl, r0
   25464:	andeq	ip, r0, r8, ror r4

00025468 <flatcc_builder_extend_offset_vector@@Base>:
   25468:	push	{fp, lr}
   2546c:	mov	fp, sp
   25470:	sub	sp, sp, #16
   25474:	ldr	r2, [pc, #68]	; 254c0 <flatcc_builder_extend_offset_vector@@Base+0x58>
   25478:	str	r0, [sp, #8]
   2547c:	str	r1, [sp, #4]
   25480:	ldr	r0, [sp, #8]
   25484:	ldr	r1, [sp, #4]
   25488:	bl	25164 <flatcc_builder_extend_vector@@Base+0x6c>
   2548c:	cmp	r0, #0
   25490:	beq	254a0 <flatcc_builder_extend_offset_vector@@Base+0x38>
   25494:	movw	r0, #0
   25498:	str	r0, [fp, #-4]
   2549c:	b	254b4 <flatcc_builder_extend_offset_vector@@Base+0x4c>
   254a0:	ldr	r0, [sp, #8]
   254a4:	ldr	r1, [sp, #4]
   254a8:	lsl	r1, r1, #2
   254ac:	bl	24fa0 <flatcc_builder_start_struct@@Base+0xfc>
   254b0:	str	r0, [fp, #-4]
   254b4:	ldr	r0, [fp, #-4]
   254b8:	mov	sp, fp
   254bc:	pop	{fp, pc}
   254c0:	svccc	0x00ffffff

000254c4 <flatcc_builder_offset_vector_push@@Base>:
   254c4:	push	{fp, lr}
   254c8:	mov	fp, sp
   254cc:	sub	sp, sp, #16
   254d0:	str	r0, [sp, #8]
   254d4:	str	r1, [sp, #4]
   254d8:	ldr	r0, [sp, #8]
   254dc:	ldr	r0, [r0, #32]
   254e0:	ldrh	r0, [r0, #14]
   254e4:	cmp	r0, #5
   254e8:	bne	254f0 <flatcc_builder_offset_vector_push@@Base+0x2c>
   254ec:	b	25510 <flatcc_builder_offset_vector_push@@Base+0x4c>
   254f0:	ldr	r0, [pc, #152]	; 25590 <flatcc_builder_offset_vector_push@@Base+0xcc>
   254f4:	add	r0, pc, r0
   254f8:	ldr	r1, [pc, #148]	; 25594 <flatcc_builder_offset_vector_push@@Base+0xd0>
   254fc:	add	r1, pc, r1
   25500:	ldr	r2, [pc, #144]	; 25598 <flatcc_builder_offset_vector_push@@Base+0xd4>
   25504:	add	r3, pc, r2
   25508:	movw	r2, #934	; 0x3a6
   2550c:	bl	12b80 <__assert_fail@plt>
   25510:	ldr	r0, [pc, #132]	; 2559c <flatcc_builder_offset_vector_push@@Base+0xd8>
   25514:	ldr	r1, [sp, #8]
   25518:	ldr	r1, [r1, #32]
   2551c:	ldr	r1, [r1, #20]
   25520:	cmp	r1, r0
   25524:	bne	25534 <flatcc_builder_offset_vector_push@@Base+0x70>
   25528:	movw	r0, #0
   2552c:	str	r0, [fp, #-4]
   25530:	b	25584 <flatcc_builder_offset_vector_push@@Base+0xc0>
   25534:	ldr	r0, [sp, #8]
   25538:	ldr	r0, [r0, #32]
   2553c:	ldr	r1, [r0, #20]
   25540:	add	r1, r1, #1
   25544:	str	r1, [r0, #20]
   25548:	ldr	r0, [sp, #8]
   2554c:	movw	r1, #4
   25550:	bl	24fa0 <flatcc_builder_start_struct@@Base+0xfc>
   25554:	str	r0, [sp]
   25558:	movw	r1, #0
   2555c:	cmp	r1, r0
   25560:	bne	25570 <flatcc_builder_offset_vector_push@@Base+0xac>
   25564:	movw	r0, #0
   25568:	str	r0, [fp, #-4]
   2556c:	b	25584 <flatcc_builder_offset_vector_push@@Base+0xc0>
   25570:	ldr	r0, [sp, #4]
   25574:	ldr	r1, [sp]
   25578:	str	r0, [r1]
   2557c:	ldr	r0, [sp]
   25580:	str	r0, [fp, #-4]
   25584:	ldr	r0, [fp, #-4]
   25588:	mov	sp, fp
   2558c:	pop	{fp, pc}
   25590:	andeq	ip, r0, r5, asr #7
   25594:	andeq	fp, r0, sl, lsl #31
   25598:	andeq	ip, r0, r8, ror #7
   2559c:	svccc	0x00ffffff

000255a0 <flatcc_builder_append_offset_vector@@Base>:
   255a0:	push	{fp, lr}
   255a4:	mov	fp, sp
   255a8:	sub	sp, sp, #16
   255ac:	str	r0, [sp, #8]
   255b0:	str	r1, [sp, #4]
   255b4:	str	r2, [sp]
   255b8:	ldr	r0, [sp, #8]
   255bc:	ldr	r0, [r0, #32]
   255c0:	ldrh	r0, [r0, #14]
   255c4:	cmp	r0, #5
   255c8:	bne	255d0 <flatcc_builder_append_offset_vector@@Base+0x30>
   255cc:	b	255f0 <flatcc_builder_append_offset_vector@@Base+0x50>
   255d0:	ldr	r0, [pc, #96]	; 25638 <flatcc_builder_append_offset_vector@@Base+0x98>
   255d4:	add	r0, pc, r0
   255d8:	ldr	r1, [pc, #92]	; 2563c <flatcc_builder_append_offset_vector@@Base+0x9c>
   255dc:	add	r1, pc, r1
   255e0:	ldr	r2, [pc, #88]	; 25640 <flatcc_builder_append_offset_vector@@Base+0xa0>
   255e4:	add	r3, pc, r2
   255e8:	movw	r2, #948	; 0x3b4
   255ec:	bl	12b80 <__assert_fail@plt>
   255f0:	ldr	r2, [pc, #76]	; 25644 <flatcc_builder_append_offset_vector@@Base+0xa4>
   255f4:	ldr	r0, [sp, #8]
   255f8:	ldr	r1, [sp]
   255fc:	bl	25164 <flatcc_builder_extend_vector@@Base+0x6c>
   25600:	cmp	r0, #0
   25604:	beq	25614 <flatcc_builder_append_offset_vector@@Base+0x74>
   25608:	movw	r0, #0
   2560c:	str	r0, [fp, #-4]
   25610:	b	2562c <flatcc_builder_append_offset_vector@@Base+0x8c>
   25614:	ldr	r0, [sp, #8]
   25618:	ldr	r1, [sp, #4]
   2561c:	ldr	r2, [sp]
   25620:	lsl	r2, r2, #2
   25624:	bl	2534c <flatcc_builder_vector_push@@Base+0x110>
   25628:	str	r0, [fp, #-4]
   2562c:	ldr	r0, [fp, #-4]
   25630:	mov	sp, fp
   25634:	pop	{fp, pc}
   25638:	andeq	ip, r0, r5, ror #5
   2563c:	andeq	fp, r0, sl, lsr #29
   25640:	andeq	ip, r0, sl, ror #6
   25644:	svccc	0x00ffffff

00025648 <flatcc_builder_extend_string@@Base>:
   25648:	push	{fp, lr}
   2564c:	mov	fp, sp
   25650:	sub	sp, sp, #16
   25654:	str	r0, [sp, #8]
   25658:	str	r1, [sp, #4]
   2565c:	ldr	r0, [sp, #8]
   25660:	ldr	r0, [r0, #32]
   25664:	ldrh	r0, [r0, #14]
   25668:	cmp	r0, #6
   2566c:	bne	25674 <flatcc_builder_extend_string@@Base+0x2c>
   25670:	b	25694 <flatcc_builder_extend_string@@Base+0x4c>
   25674:	ldr	r0, [pc, #88]	; 256d4 <flatcc_builder_extend_string@@Base+0x8c>
   25678:	add	r0, pc, r0
   2567c:	ldr	r1, [pc, #84]	; 256d8 <flatcc_builder_extend_string@@Base+0x90>
   25680:	add	r1, pc, r1
   25684:	ldr	r2, [pc, #80]	; 256dc <flatcc_builder_extend_string@@Base+0x94>
   25688:	add	r3, pc, r2
   2568c:	movw	r2, #957	; 0x3bd
   25690:	bl	12b80 <__assert_fail@plt>
   25694:	ldr	r0, [sp, #8]
   25698:	ldr	r1, [sp, #4]
   2569c:	mvn	r2, #0
   256a0:	bl	25164 <flatcc_builder_extend_vector@@Base+0x6c>
   256a4:	cmp	r0, #0
   256a8:	beq	256b8 <flatcc_builder_extend_string@@Base+0x70>
   256ac:	movw	r0, #0
   256b0:	str	r0, [fp, #-4]
   256b4:	b	256c8 <flatcc_builder_extend_string@@Base+0x80>
   256b8:	ldr	r0, [sp, #8]
   256bc:	ldr	r1, [sp, #4]
   256c0:	bl	24fa0 <flatcc_builder_start_struct@@Base+0xfc>
   256c4:	str	r0, [fp, #-4]
   256c8:	ldr	r0, [fp, #-4]
   256cc:	mov	sp, fp
   256d0:	pop	{fp, pc}
   256d4:	andeq	ip, r0, sl, asr #6
   256d8:	andeq	fp, r0, r6, lsl #28
   256dc:	andeq	ip, r0, r6, ror #6

000256e0 <flatcc_builder_append_string@@Base>:
   256e0:	push	{fp, lr}
   256e4:	mov	fp, sp
   256e8:	sub	sp, sp, #16
   256ec:	str	r0, [sp, #8]
   256f0:	str	r1, [sp, #4]
   256f4:	str	r2, [sp]
   256f8:	ldr	r0, [sp, #8]
   256fc:	ldr	r0, [r0, #32]
   25700:	ldrh	r0, [r0, #14]
   25704:	cmp	r0, #6
   25708:	bne	25710 <flatcc_builder_append_string@@Base+0x30>
   2570c:	b	25730 <flatcc_builder_append_string@@Base+0x50>
   25710:	ldr	r0, [pc, #92]	; 25774 <flatcc_builder_append_string@@Base+0x94>
   25714:	add	r0, pc, r0
   25718:	ldr	r1, [pc, #88]	; 25778 <flatcc_builder_append_string@@Base+0x98>
   2571c:	add	r1, pc, r1
   25720:	ldr	r2, [pc, #84]	; 2577c <flatcc_builder_append_string@@Base+0x9c>
   25724:	add	r3, pc, r2
   25728:	movw	r2, #966	; 0x3c6
   2572c:	bl	12b80 <__assert_fail@plt>
   25730:	ldr	r0, [sp, #8]
   25734:	ldr	r1, [sp]
   25738:	mvn	r2, #0
   2573c:	bl	25164 <flatcc_builder_extend_vector@@Base+0x6c>
   25740:	cmp	r0, #0
   25744:	beq	25754 <flatcc_builder_append_string@@Base+0x74>
   25748:	movw	r0, #0
   2574c:	str	r0, [fp, #-4]
   25750:	b	25768 <flatcc_builder_append_string@@Base+0x88>
   25754:	ldr	r0, [sp, #8]
   25758:	ldr	r1, [sp, #4]
   2575c:	ldr	r2, [sp]
   25760:	bl	2534c <flatcc_builder_vector_push@@Base+0x110>
   25764:	str	r0, [fp, #-4]
   25768:	ldr	r0, [fp, #-4]
   2576c:	mov	sp, fp
   25770:	pop	{fp, pc}
   25774:	andeq	ip, r0, lr, lsr #5
   25778:	andeq	fp, r0, sl, ror #26
   2577c:	andeq	ip, r0, r9, lsl #6

00025780 <flatcc_builder_append_string_str@@Base>:
   25780:	push	{fp, lr}
   25784:	mov	fp, sp
   25788:	sub	sp, sp, #24
   2578c:	str	r0, [fp, #-4]
   25790:	str	r1, [fp, #-8]
   25794:	ldr	r0, [fp, #-4]
   25798:	ldr	r1, [fp, #-8]
   2579c:	ldr	r2, [fp, #-8]
   257a0:	str	r0, [sp, #12]
   257a4:	mov	r0, r2
   257a8:	str	r1, [sp, #8]
   257ac:	bl	12b08 <strlen@plt>
   257b0:	ldr	r1, [sp, #12]
   257b4:	str	r0, [sp, #4]
   257b8:	mov	r0, r1
   257bc:	ldr	r1, [sp, #8]
   257c0:	ldr	r2, [sp, #4]
   257c4:	bl	256e0 <flatcc_builder_append_string@@Base>
   257c8:	mov	sp, fp
   257cc:	pop	{fp, pc}

000257d0 <flatcc_builder_append_string_strn@@Base>:
   257d0:	push	{fp, lr}
   257d4:	mov	fp, sp
   257d8:	sub	sp, sp, #24
   257dc:	str	r0, [fp, #-4]
   257e0:	str	r1, [fp, #-8]
   257e4:	str	r2, [sp, #12]
   257e8:	ldr	r0, [fp, #-4]
   257ec:	ldr	r1, [fp, #-8]
   257f0:	ldr	r2, [fp, #-8]
   257f4:	ldr	r3, [sp, #12]
   257f8:	str	r0, [sp, #8]
   257fc:	mov	r0, r2
   25800:	str	r1, [sp, #4]
   25804:	mov	r1, r3
   25808:	bl	2582c <flatcc_builder_append_string_strn@@Base+0x5c>
   2580c:	ldr	r1, [sp, #8]
   25810:	str	r0, [sp]
   25814:	mov	r0, r1
   25818:	ldr	r1, [sp, #4]
   2581c:	ldr	r2, [sp]
   25820:	bl	256e0 <flatcc_builder_append_string@@Base>
   25824:	mov	sp, fp
   25828:	pop	{fp, pc}
   2582c:	push	{fp, lr}
   25830:	mov	fp, sp
   25834:	sub	sp, sp, #16
   25838:	str	r0, [fp, #-4]
   2583c:	str	r1, [sp, #8]
   25840:	ldr	r0, [fp, #-4]
   25844:	ldr	r2, [sp, #8]
   25848:	mov	r1, #0
   2584c:	bl	12b50 <memchr@plt>
   25850:	str	r0, [sp, #4]
   25854:	ldr	r0, [sp, #4]
   25858:	movw	r1, #0
   2585c:	cmp	r0, r1
   25860:	beq	25878 <flatcc_builder_append_string_strn@@Base+0xa8>
   25864:	ldr	r0, [sp, #4]
   25868:	ldr	r1, [fp, #-4]
   2586c:	sub	r0, r0, r1
   25870:	str	r0, [sp]
   25874:	b	25880 <flatcc_builder_append_string_strn@@Base+0xb0>
   25878:	ldr	r0, [sp, #8]
   2587c:	str	r0, [sp]
   25880:	ldr	r0, [sp]
   25884:	mov	sp, fp
   25888:	pop	{fp, pc}

0002588c <flatcc_builder_truncate_vector@@Base>:
   2588c:	push	{fp, lr}
   25890:	mov	fp, sp
   25894:	sub	sp, sp, #16
   25898:	str	r0, [sp, #8]
   2589c:	str	r1, [sp, #4]
   258a0:	ldr	r0, [sp, #8]
   258a4:	ldr	r0, [r0, #32]
   258a8:	ldrh	r0, [r0, #14]
   258ac:	cmp	r0, #4
   258b0:	bne	258b8 <flatcc_builder_truncate_vector@@Base+0x2c>
   258b4:	b	258d8 <flatcc_builder_truncate_vector@@Base+0x4c>
   258b8:	ldr	r0, [pc, #192]	; 25980 <flatcc_builder_truncate_vector@@Base+0xf4>
   258bc:	add	r0, pc, r0
   258c0:	ldr	r1, [pc, #188]	; 25984 <flatcc_builder_truncate_vector@@Base+0xf8>
   258c4:	add	r1, pc, r1
   258c8:	ldr	r2, [pc, #184]	; 25988 <flatcc_builder_truncate_vector@@Base+0xfc>
   258cc:	add	r3, pc, r2
   258d0:	movw	r2, #985	; 0x3d9
   258d4:	bl	12b80 <__assert_fail@plt>
   258d8:	ldr	r0, [sp, #8]
   258dc:	ldr	r0, [r0, #32]
   258e0:	ldr	r0, [r0, #20]
   258e4:	ldr	r1, [sp, #4]
   258e8:	cmp	r0, r1
   258ec:	bcs	25938 <flatcc_builder_truncate_vector@@Base+0xac>
   258f0:	ldr	r0, [sp, #8]
   258f4:	ldr	r0, [r0, #32]
   258f8:	ldr	r0, [r0, #20]
   258fc:	ldr	r1, [sp, #4]
   25900:	cmp	r0, r1
   25904:	bcc	2590c <flatcc_builder_truncate_vector@@Base+0x80>
   25908:	b	2592c <flatcc_builder_truncate_vector@@Base+0xa0>
   2590c:	ldr	r0, [pc, #120]	; 2598c <flatcc_builder_truncate_vector@@Base+0x100>
   25910:	add	r0, pc, r0
   25914:	ldr	r1, [pc, #116]	; 25990 <flatcc_builder_truncate_vector@@Base+0x104>
   25918:	add	r1, pc, r1
   2591c:	ldr	r2, [pc, #112]	; 25994 <flatcc_builder_truncate_vector@@Base+0x108>
   25920:	add	r3, pc, r2
   25924:	movw	r2, #986	; 0x3da
   25928:	bl	12b80 <__assert_fail@plt>
   2592c:	mvn	r0, #0
   25930:	str	r0, [fp, #-4]
   25934:	b	25974 <flatcc_builder_truncate_vector@@Base+0xe8>
   25938:	ldr	r0, [sp, #4]
   2593c:	ldr	r1, [sp, #8]
   25940:	ldr	r1, [r1, #32]
   25944:	ldr	r2, [r1, #20]
   25948:	sub	r0, r2, r0
   2594c:	str	r0, [r1, #20]
   25950:	ldr	r0, [sp, #8]
   25954:	ldr	r1, [sp, #8]
   25958:	ldr	r1, [r1, #32]
   2595c:	ldr	r1, [r1, #16]
   25960:	ldr	r2, [sp, #4]
   25964:	mul	r1, r1, r2
   25968:	bl	25998 <flatcc_builder_truncate_vector@@Base+0x10c>
   2596c:	movw	r0, #0
   25970:	str	r0, [fp, #-4]
   25974:	ldr	r0, [fp, #-4]
   25978:	mov	sp, fp
   2597c:	pop	{fp, pc}
   25980:	andeq	fp, r0, r4, lsl #30
   25984:	andeq	fp, r0, r2, asr #23
   25988:	andeq	ip, r0, lr, lsr #3
   2598c:	andeq	ip, r0, r9, lsr #3
   25990:	andeq	fp, r0, lr, ror #22
   25994:	andeq	ip, r0, sl, asr r1
   25998:	push	{fp, lr}
   2599c:	mov	fp, sp
   259a0:	sub	sp, sp, #8
   259a4:	str	r0, [sp, #4]
   259a8:	str	r1, [sp]
   259ac:	ldr	r0, [sp]
   259b0:	ldr	r1, [sp, #4]
   259b4:	ldr	r2, [r1, #20]
   259b8:	sub	r0, r2, r0
   259bc:	str	r0, [r1, #20]
   259c0:	ldr	r0, [sp, #4]
   259c4:	ldr	r0, [r0, #16]
   259c8:	ldr	r1, [sp, #4]
   259cc:	ldr	r1, [r1, #20]
   259d0:	add	r0, r0, r1
   259d4:	ldr	r2, [sp]
   259d8:	movw	r1, #0
   259dc:	and	r1, r1, #255	; 0xff
   259e0:	bl	12b2c <memset@plt>
   259e4:	mov	sp, fp
   259e8:	pop	{fp, pc}

000259ec <flatcc_builder_truncate_offset_vector@@Base>:
   259ec:	push	{fp, lr}
   259f0:	mov	fp, sp
   259f4:	sub	sp, sp, #16
   259f8:	str	r0, [sp, #8]
   259fc:	str	r1, [sp, #4]
   25a00:	ldr	r0, [sp, #8]
   25a04:	ldr	r0, [r0, #32]
   25a08:	ldrh	r0, [r0, #14]
   25a0c:	cmp	r0, #5
   25a10:	bne	25a18 <flatcc_builder_truncate_offset_vector@@Base+0x2c>
   25a14:	b	25a38 <flatcc_builder_truncate_offset_vector@@Base+0x4c>
   25a18:	ldr	r0, [pc, #192]	; 25ae0 <flatcc_builder_truncate_offset_vector@@Base+0xf4>
   25a1c:	add	r0, pc, r0
   25a20:	ldr	r1, [pc, #188]	; 25ae4 <flatcc_builder_truncate_offset_vector@@Base+0xf8>
   25a24:	add	r1, pc, r1
   25a28:	ldr	r2, [pc, #184]	; 25ae8 <flatcc_builder_truncate_offset_vector@@Base+0xfc>
   25a2c:	add	r3, pc, r2
   25a30:	movw	r2, #994	; 0x3e2
   25a34:	bl	12b80 <__assert_fail@plt>
   25a38:	ldr	r0, [sp, #8]
   25a3c:	ldr	r0, [r0, #32]
   25a40:	ldr	r0, [r0, #20]
   25a44:	ldr	r1, [sp, #4]
   25a48:	cmp	r0, r1
   25a4c:	bcs	25a98 <flatcc_builder_truncate_offset_vector@@Base+0xac>
   25a50:	ldr	r0, [sp, #8]
   25a54:	ldr	r0, [r0, #32]
   25a58:	ldr	r0, [r0, #20]
   25a5c:	ldr	r1, [sp, #4]
   25a60:	cmp	r0, r1
   25a64:	bcc	25a6c <flatcc_builder_truncate_offset_vector@@Base+0x80>
   25a68:	b	25a8c <flatcc_builder_truncate_offset_vector@@Base+0xa0>
   25a6c:	ldr	r0, [pc, #120]	; 25aec <flatcc_builder_truncate_offset_vector@@Base+0x100>
   25a70:	add	r0, pc, r0
   25a74:	ldr	r1, [pc, #116]	; 25af0 <flatcc_builder_truncate_offset_vector@@Base+0x104>
   25a78:	add	r1, pc, r1
   25a7c:	ldr	r2, [pc, #112]	; 25af4 <flatcc_builder_truncate_offset_vector@@Base+0x108>
   25a80:	add	r3, pc, r2
   25a84:	movw	r2, #995	; 0x3e3
   25a88:	bl	12b80 <__assert_fail@plt>
   25a8c:	mvn	r0, #0
   25a90:	str	r0, [fp, #-4]
   25a94:	b	25ad4 <flatcc_builder_truncate_offset_vector@@Base+0xe8>
   25a98:	ldr	r0, [sp, #4]
   25a9c:	ldr	r1, [sp, #8]
   25aa0:	ldr	r1, [r1, #32]
   25aa4:	ldr	r2, [r1, #20]
   25aa8:	sub	r0, r2, r0
   25aac:	str	r0, [r1, #20]
   25ab0:	ldr	r0, [sp, #8]
   25ab4:	ldr	r1, [sp, #8]
   25ab8:	ldr	r1, [r1, #32]
   25abc:	ldr	r1, [r1, #16]
   25ac0:	ldr	r2, [sp, #4]
   25ac4:	mul	r1, r1, r2
   25ac8:	bl	25998 <flatcc_builder_truncate_vector@@Base+0x10c>
   25acc:	movw	r0, #0
   25ad0:	str	r0, [fp, #-4]
   25ad4:	ldr	r0, [fp, #-4]
   25ad8:	mov	sp, fp
   25adc:	pop	{fp, pc}
   25ae0:	muleq	r0, sp, lr
   25ae4:	andeq	fp, r0, r2, ror #20
   25ae8:	strheq	ip, [r0], -r1
   25aec:	strheq	ip, [r0], -r3
   25af0:	andeq	fp, r0, lr, lsl #20
   25af4:	andeq	ip, r0, sp, asr r0

00025af8 <flatcc_builder_truncate_string@@Base>:
   25af8:	push	{fp, lr}
   25afc:	mov	fp, sp
   25b00:	sub	sp, sp, #16
   25b04:	str	r0, [sp, #8]
   25b08:	str	r1, [sp, #4]
   25b0c:	ldr	r0, [sp, #8]
   25b10:	ldr	r0, [r0, #32]
   25b14:	ldrh	r0, [r0, #14]
   25b18:	cmp	r0, #6
   25b1c:	bne	25b24 <flatcc_builder_truncate_string@@Base+0x2c>
   25b20:	b	25b44 <flatcc_builder_truncate_string@@Base+0x4c>
   25b24:	ldr	r0, [pc, #176]	; 25bdc <flatcc_builder_truncate_string@@Base+0xe4>
   25b28:	add	r0, pc, r0
   25b2c:	ldr	r1, [pc, #172]	; 25be0 <flatcc_builder_truncate_string@@Base+0xe8>
   25b30:	add	r1, pc, r1
   25b34:	ldr	r2, [pc, #168]	; 25be4 <flatcc_builder_truncate_string@@Base+0xec>
   25b38:	add	r3, pc, r2
   25b3c:	movw	r2, #1003	; 0x3eb
   25b40:	bl	12b80 <__assert_fail@plt>
   25b44:	ldr	r0, [sp, #8]
   25b48:	ldr	r0, [r0, #32]
   25b4c:	ldr	r0, [r0, #20]
   25b50:	ldr	r1, [sp, #4]
   25b54:	cmp	r0, r1
   25b58:	bcs	25ba4 <flatcc_builder_truncate_string@@Base+0xac>
   25b5c:	ldr	r0, [sp, #8]
   25b60:	ldr	r0, [r0, #32]
   25b64:	ldr	r0, [r0, #20]
   25b68:	ldr	r1, [sp, #4]
   25b6c:	cmp	r0, r1
   25b70:	bcc	25b78 <flatcc_builder_truncate_string@@Base+0x80>
   25b74:	b	25b98 <flatcc_builder_truncate_string@@Base+0xa0>
   25b78:	ldr	r0, [pc, #104]	; 25be8 <flatcc_builder_truncate_string@@Base+0xf0>
   25b7c:	add	r0, pc, r0
   25b80:	ldr	r1, [pc, #100]	; 25bec <flatcc_builder_truncate_string@@Base+0xf4>
   25b84:	add	r1, pc, r1
   25b88:	ldr	r2, [pc, #96]	; 25bf0 <flatcc_builder_truncate_string@@Base+0xf8>
   25b8c:	add	r3, pc, r2
   25b90:	movw	r2, #1004	; 0x3ec
   25b94:	bl	12b80 <__assert_fail@plt>
   25b98:	mvn	r0, #0
   25b9c:	str	r0, [fp, #-4]
   25ba0:	b	25bd0 <flatcc_builder_truncate_string@@Base+0xd8>
   25ba4:	ldr	r0, [sp, #4]
   25ba8:	ldr	r1, [sp, #8]
   25bac:	ldr	r1, [r1, #32]
   25bb0:	ldr	r2, [r1, #20]
   25bb4:	sub	r0, r2, r0
   25bb8:	str	r0, [r1, #20]
   25bbc:	ldr	r0, [sp, #8]
   25bc0:	ldr	r1, [sp, #4]
   25bc4:	bl	25998 <flatcc_builder_truncate_vector@@Base+0x10c>
   25bc8:	movw	r0, #0
   25bcc:	str	r0, [fp, #-4]
   25bd0:	ldr	r0, [fp, #-4]
   25bd4:	mov	sp, fp
   25bd8:	pop	{fp, pc}
   25bdc:	muleq	r0, sl, lr
   25be0:	andeq	fp, r0, r6, asr r9
   25be4:	andeq	ip, r0, r6, lsr #32
   25be8:	andeq	ip, r0, r1, lsr #32
   25bec:	andeq	fp, r0, r2, lsl #18
   25bf0:	ldrdeq	fp, [r0], -r2

00025bf4 <flatcc_builder_start_vector@@Base>:
   25bf4:	push	{fp, lr}
   25bf8:	mov	fp, sp
   25bfc:	sub	sp, sp, #24
   25c00:	str	r0, [fp, #-8]
   25c04:	str	r1, [sp, #12]
   25c08:	strh	r2, [sp, #10]
   25c0c:	str	r3, [sp, #4]
   25c10:	add	r0, sp, #10
   25c14:	movw	r1, #4
   25c18:	uxth	r1, r1
   25c1c:	bl	25ca0 <flatcc_builder_start_vector@@Base+0xac>
   25c20:	ldr	r0, [fp, #-8]
   25c24:	ldrh	r1, [sp, #10]
   25c28:	bl	24aac <flatcc_builder_start_buffer@@Base+0x178>
   25c2c:	cmp	r0, #0
   25c30:	beq	25c40 <flatcc_builder_start_vector@@Base+0x4c>
   25c34:	mvn	r0, #0
   25c38:	str	r0, [fp, #-4]
   25c3c:	b	25c94 <flatcc_builder_start_vector@@Base+0xa0>
   25c40:	ldr	r0, [sp, #12]
   25c44:	ldr	r1, [fp, #-8]
   25c48:	ldr	r1, [r1, #32]
   25c4c:	str	r0, [r1, #16]
   25c50:	ldr	r0, [fp, #-8]
   25c54:	ldr	r0, [r0, #32]
   25c58:	movw	r1, #0
   25c5c:	str	r1, [r0, #20]
   25c60:	ldr	r0, [sp, #4]
   25c64:	ldr	r1, [fp, #-8]
   25c68:	ldr	r1, [r1, #32]
   25c6c:	str	r0, [r1, #24]
   25c70:	ldr	r0, [fp, #-8]
   25c74:	ldr	r0, [r0, #32]
   25c78:	movw	r1, #4
   25c7c:	strh	r1, [r0, #14]
   25c80:	ldr	r0, [fp, #-8]
   25c84:	mvn	r1, #3
   25c88:	bl	24f14 <flatcc_builder_start_struct@@Base+0x70>
   25c8c:	movw	r0, #0
   25c90:	str	r0, [fp, #-4]
   25c94:	ldr	r0, [fp, #-4]
   25c98:	mov	sp, fp
   25c9c:	pop	{fp, pc}
   25ca0:	sub	sp, sp, #8
   25ca4:	str	r0, [sp, #4]
   25ca8:	strh	r1, [sp, #2]
   25cac:	ldr	r0, [sp, #4]
   25cb0:	ldrh	r0, [r0]
   25cb4:	ldrh	r1, [sp, #2]
   25cb8:	cmp	r0, r1
   25cbc:	bge	25ccc <flatcc_builder_start_vector@@Base+0xd8>
   25cc0:	ldrh	r0, [sp, #2]
   25cc4:	ldr	r1, [sp, #4]
   25cc8:	strh	r0, [r1]
   25ccc:	add	sp, sp, #8
   25cd0:	bx	lr

00025cd4 <flatcc_builder_start_offset_vector@@Base>:
   25cd4:	push	{fp, lr}
   25cd8:	mov	fp, sp
   25cdc:	sub	sp, sp, #8
   25ce0:	str	r0, [sp]
   25ce4:	ldr	r0, [sp]
   25ce8:	movw	r1, #4
   25cec:	uxth	r1, r1
   25cf0:	bl	24aac <flatcc_builder_start_buffer@@Base+0x178>
   25cf4:	cmp	r0, #0
   25cf8:	beq	25d08 <flatcc_builder_start_offset_vector@@Base+0x34>
   25cfc:	mvn	r0, #0
   25d00:	str	r0, [sp, #4]
   25d04:	b	25d4c <flatcc_builder_start_offset_vector@@Base+0x78>
   25d08:	ldr	r0, [sp]
   25d0c:	ldr	r0, [r0, #32]
   25d10:	movw	r1, #4
   25d14:	str	r1, [r0, #16]
   25d18:	ldr	r0, [sp]
   25d1c:	ldr	r0, [r0, #32]
   25d20:	movw	r1, #0
   25d24:	str	r1, [r0, #20]
   25d28:	ldr	r0, [sp]
   25d2c:	ldr	r0, [r0, #32]
   25d30:	movw	r1, #5
   25d34:	strh	r1, [r0, #14]
   25d38:	ldr	r0, [sp]
   25d3c:	mvn	r1, #3
   25d40:	bl	24f14 <flatcc_builder_start_struct@@Base+0x70>
   25d44:	movw	r0, #0
   25d48:	str	r0, [sp, #4]
   25d4c:	ldr	r0, [sp, #4]
   25d50:	mov	sp, fp
   25d54:	pop	{fp, pc}

00025d58 <flatcc_builder_create_offset_vector@@Base>:
   25d58:	push	{fp, lr}
   25d5c:	mov	fp, sp
   25d60:	sub	sp, sp, #24
   25d64:	str	r0, [fp, #-8]
   25d68:	str	r1, [sp, #12]
   25d6c:	str	r2, [sp, #8]
   25d70:	ldr	r0, [fp, #-8]
   25d74:	bl	25cd4 <flatcc_builder_start_offset_vector@@Base>
   25d78:	cmp	r0, #0
   25d7c:	beq	25d8c <flatcc_builder_create_offset_vector@@Base+0x34>
   25d80:	movw	r0, #0
   25d84:	str	r0, [fp, #-4]
   25d88:	b	25dd4 <flatcc_builder_create_offset_vector@@Base+0x7c>
   25d8c:	ldr	r0, [fp, #-8]
   25d90:	ldr	r1, [sp, #8]
   25d94:	bl	25468 <flatcc_builder_extend_offset_vector@@Base>
   25d98:	str	r0, [sp, #4]
   25d9c:	movw	r1, #0
   25da0:	cmp	r0, r1
   25da4:	bne	25db4 <flatcc_builder_create_offset_vector@@Base+0x5c>
   25da8:	movw	r0, #0
   25dac:	str	r0, [fp, #-4]
   25db0:	b	25dd4 <flatcc_builder_create_offset_vector@@Base+0x7c>
   25db4:	ldr	r0, [sp, #4]
   25db8:	ldr	r1, [sp, #12]
   25dbc:	ldr	r2, [sp, #8]
   25dc0:	lsl	r2, r2, #2
   25dc4:	bl	12a78 <memcpy@plt>
   25dc8:	ldr	r0, [fp, #-8]
   25dcc:	bl	25de0 <flatcc_builder_end_offset_vector@@Base>
   25dd0:	str	r0, [fp, #-4]
   25dd4:	ldr	r0, [fp, #-4]
   25dd8:	mov	sp, fp
   25ddc:	pop	{fp, pc}

00025de0 <flatcc_builder_end_offset_vector@@Base>:
   25de0:	push	{fp, lr}
   25de4:	mov	fp, sp
   25de8:	sub	sp, sp, #16
   25dec:	str	r0, [sp, #8]
   25df0:	ldr	r0, [sp, #8]
   25df4:	ldr	r0, [r0, #32]
   25df8:	ldrh	r0, [r0, #14]
   25dfc:	cmp	r0, #5
   25e00:	bne	25e08 <flatcc_builder_end_offset_vector@@Base+0x28>
   25e04:	b	25e28 <flatcc_builder_end_offset_vector@@Base+0x48>
   25e08:	ldr	r0, [pc, #108]	; 25e7c <flatcc_builder_end_offset_vector@@Base+0x9c>
   25e0c:	add	r0, pc, r0
   25e10:	ldr	r1, [pc, #104]	; 25e80 <flatcc_builder_end_offset_vector@@Base+0xa0>
   25e14:	add	r1, pc, r1
   25e18:	ldr	r2, [pc, #100]	; 25e84 <flatcc_builder_end_offset_vector@@Base+0xa4>
   25e1c:	add	r3, pc, r2
   25e20:	movw	r2, #1480	; 0x5c8
   25e24:	bl	12b80 <__assert_fail@plt>
   25e28:	ldr	r0, [sp, #8]
   25e2c:	ldr	r1, [sp, #8]
   25e30:	ldr	r1, [r1, #16]
   25e34:	ldr	r2, [sp, #8]
   25e38:	ldr	r2, [r2, #32]
   25e3c:	ldr	r2, [r2, #20]
   25e40:	bl	271f0 <flatcc_builder_create_offset_vector_direct@@Base>
   25e44:	str	r0, [sp, #4]
   25e48:	movw	r1, #0
   25e4c:	cmp	r1, r0
   25e50:	bne	25e60 <flatcc_builder_end_offset_vector@@Base+0x80>
   25e54:	movw	r0, #0
   25e58:	str	r0, [fp, #-4]
   25e5c:	b	25e70 <flatcc_builder_end_offset_vector@@Base+0x90>
   25e60:	ldr	r0, [sp, #8]
   25e64:	bl	24de8 <flatcc_builder_end_buffer@@Base+0x170>
   25e68:	ldr	r0, [sp, #4]
   25e6c:	str	r0, [fp, #-4]
   25e70:	ldr	r0, [fp, #-4]
   25e74:	mov	sp, fp
   25e78:	pop	{fp, pc}
   25e7c:	andeq	fp, r0, sp, lsr #21
   25e80:	andeq	fp, r0, r2, ror r6
   25e84:	andeq	ip, r0, ip, asr #1

00025e88 <flatcc_builder_start_string@@Base>:
   25e88:	push	{fp, lr}
   25e8c:	mov	fp, sp
   25e90:	sub	sp, sp, #8
   25e94:	str	r0, [sp]
   25e98:	ldr	r0, [sp]
   25e9c:	movw	r1, #1
   25ea0:	uxth	r1, r1
   25ea4:	bl	24aac <flatcc_builder_start_buffer@@Base+0x178>
   25ea8:	cmp	r0, #0
   25eac:	beq	25ebc <flatcc_builder_start_string@@Base+0x34>
   25eb0:	mvn	r0, #0
   25eb4:	str	r0, [sp, #4]
   25eb8:	b	25f00 <flatcc_builder_start_string@@Base+0x78>
   25ebc:	ldr	r0, [sp]
   25ec0:	ldr	r0, [r0, #32]
   25ec4:	movw	r1, #1
   25ec8:	str	r1, [r0, #16]
   25ecc:	ldr	r0, [sp]
   25ed0:	ldr	r0, [r0, #32]
   25ed4:	movw	r1, #0
   25ed8:	str	r1, [r0, #20]
   25edc:	ldr	r0, [sp]
   25ee0:	ldr	r0, [r0, #32]
   25ee4:	movw	r1, #6
   25ee8:	strh	r1, [r0, #14]
   25eec:	ldr	r0, [sp]
   25ef0:	mvn	r1, #3
   25ef4:	bl	24f14 <flatcc_builder_start_struct@@Base+0x70>
   25ef8:	movw	r0, #0
   25efc:	str	r0, [sp, #4]
   25f00:	ldr	r0, [sp, #4]
   25f04:	mov	sp, fp
   25f08:	pop	{fp, pc}

00025f0c <flatcc_builder_reserve_table@@Base>:
   25f0c:	push	{fp, lr}
   25f10:	mov	fp, sp
   25f14:	sub	sp, sp, #8
   25f18:	str	r0, [sp, #4]
   25f1c:	str	r1, [sp]
   25f20:	ldr	r0, [sp]
   25f24:	cmp	r0, #0
   25f28:	blt	25f30 <flatcc_builder_reserve_table@@Base+0x24>
   25f2c:	b	25f50 <flatcc_builder_reserve_table@@Base+0x44>
   25f30:	ldr	r0, [pc, #44]	; 25f64 <flatcc_builder_reserve_table@@Base+0x58>
   25f34:	add	r0, pc, r0
   25f38:	ldr	r1, [pc, #40]	; 25f68 <flatcc_builder_reserve_table@@Base+0x5c>
   25f3c:	add	r1, pc, r1
   25f40:	ldr	r2, [pc, #36]	; 25f6c <flatcc_builder_reserve_table@@Base+0x60>
   25f44:	add	r3, pc, r2
   25f48:	movw	r2, #1065	; 0x429
   25f4c:	bl	12b80 <__assert_fail@plt>
   25f50:	ldr	r0, [sp, #4]
   25f54:	ldr	r1, [sp]
   25f58:	bl	25f70 <flatcc_builder_reserve_table@@Base+0x64>
   25f5c:	mov	sp, fp
   25f60:	pop	{fp, pc}
   25f64:	andeq	fp, r0, ip, asr #25
   25f68:	andeq	fp, r0, sl, asr #10
   25f6c:	andeq	fp, r0, fp, ror ip
   25f70:	push	{fp, lr}
   25f74:	mov	fp, sp
   25f78:	sub	sp, sp, #24
   25f7c:	str	r0, [fp, #-8]
   25f80:	str	r1, [sp, #12]
   25f84:	ldr	r0, [fp, #-8]
   25f88:	ldr	r0, [r0, #32]
   25f8c:	ldr	r1, [r0, #16]
   25f90:	ldrh	r0, [r0, #28]
   25f94:	add	r0, r1, r0, lsl #1
   25f98:	str	r0, [sp, #8]
   25f9c:	ldr	r0, [sp, #12]
   25fa0:	add	r0, r0, #2
   25fa4:	lsl	r0, r0, #1
   25fa8:	str	r0, [sp, #4]
   25fac:	ldr	r0, [fp, #-8]
   25fb0:	ldr	r2, [sp, #8]
   25fb4:	ldr	r3, [sp, #4]
   25fb8:	movw	r1, #0
   25fbc:	movw	ip, #1
   25fc0:	str	ip, [sp]
   25fc4:	bl	23c3c <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   25fc8:	ldr	r1, [fp, #-8]
   25fcc:	str	r0, [r1, #4]
   25fd0:	movw	r1, #0
   25fd4:	cmp	r0, r1
   25fd8:	bne	25fe8 <flatcc_builder_reserve_table@@Base+0xdc>
   25fdc:	mvn	r0, #0
   25fe0:	str	r0, [fp, #-4]
   25fe4:	b	2605c <flatcc_builder_reserve_table@@Base+0x150>
   25fe8:	ldr	r0, [fp, #-8]
   25fec:	ldr	r1, [r0, #4]
   25ff0:	add	r1, r1, #4
   25ff4:	str	r1, [r0, #4]
   25ff8:	ldr	r0, [fp, #-8]
   25ffc:	ldr	r0, [r0, #32]
   26000:	ldr	r0, [r0, #20]
   26004:	str	r0, [sp, #8]
   26008:	ldr	r0, [sp, #12]
   2600c:	lsl	r0, r0, #1
   26010:	add	r0, r0, #1
   26014:	str	r0, [sp, #4]
   26018:	ldr	r0, [fp, #-8]
   2601c:	ldr	r2, [sp, #8]
   26020:	ldr	r3, [sp, #4]
   26024:	movw	r1, #3
   26028:	movw	ip, #0
   2602c:	str	ip, [sp]
   26030:	bl	23c3c <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   26034:	ldr	r1, [fp, #-8]
   26038:	str	r0, [r1]
   2603c:	movw	r1, #0
   26040:	cmp	r0, r1
   26044:	bne	26054 <flatcc_builder_reserve_table@@Base+0x148>
   26048:	mvn	r0, #0
   2604c:	str	r0, [fp, #-4]
   26050:	b	2605c <flatcc_builder_reserve_table@@Base+0x150>
   26054:	movw	r0, #0
   26058:	str	r0, [fp, #-4]
   2605c:	ldr	r0, [fp, #-4]
   26060:	mov	sp, fp
   26064:	pop	{fp, pc}

00026068 <flatcc_builder_start_table@@Base>:
   26068:	push	{fp, lr}
   2606c:	mov	fp, sp
   26070:	sub	sp, sp, #16
   26074:	str	r0, [sp, #8]
   26078:	str	r1, [sp, #4]
   2607c:	ldr	r0, [sp, #8]
   26080:	movw	r1, #4
   26084:	uxth	r1, r1
   26088:	bl	24aac <flatcc_builder_start_buffer@@Base+0x178>
   2608c:	cmp	r0, #0
   26090:	beq	260a0 <flatcc_builder_start_table@@Base+0x38>
   26094:	mvn	r0, #0
   26098:	str	r0, [fp, #-4]
   2609c:	b	26170 <flatcc_builder_start_table@@Base+0x108>
   260a0:	ldr	r0, [pc, #212]	; 2617c <flatcc_builder_start_table@@Base+0x114>
   260a4:	ldr	r1, [sp, #8]
   260a8:	ldr	r1, [r1, #4]
   260ac:	ldr	r2, [sp, #8]
   260b0:	ldr	r2, [r2, #52]	; 0x34
   260b4:	sub	r1, r1, r2
   260b8:	ldr	r2, [sp, #8]
   260bc:	ldr	r2, [r2, #32]
   260c0:	str	r1, [r2, #16]
   260c4:	ldr	r1, [sp, #8]
   260c8:	ldr	r1, [r1]
   260cc:	ldr	r2, [sp, #8]
   260d0:	ldr	r2, [r2, #76]	; 0x4c
   260d4:	sub	r1, r1, r2
   260d8:	ldr	r2, [sp, #8]
   260dc:	ldr	r2, [r2, #32]
   260e0:	str	r1, [r2, #20]
   260e4:	ldr	r1, [sp, #8]
   260e8:	ldr	r1, [r1, #12]
   260ec:	ldr	r2, [sp, #8]
   260f0:	ldr	r2, [r2, #32]
   260f4:	str	r1, [r2, #24]
   260f8:	ldr	r1, [sp, #8]
   260fc:	ldrh	r1, [r1, #8]
   26100:	ldr	r2, [sp, #8]
   26104:	ldr	r2, [r2, #32]
   26108:	strh	r1, [r2, #28]
   2610c:	ldr	r1, [sp, #8]
   26110:	movw	r2, #0
   26114:	str	r2, [r1, #12]
   26118:	ldr	r1, [sp, #8]
   2611c:	str	r0, [r1, #12]
   26120:	ldr	r0, [sp, #8]
   26124:	movw	r1, #0
   26128:	strh	r1, [r0, #8]
   2612c:	ldr	r0, [sp, #8]
   26130:	ldr	r0, [r0, #32]
   26134:	movw	r1, #3
   26138:	strh	r1, [r0, #14]
   2613c:	ldr	r0, [sp, #8]
   26140:	ldr	r1, [sp, #4]
   26144:	bl	25f70 <flatcc_builder_reserve_table@@Base+0x64>
   26148:	cmp	r0, #0
   2614c:	beq	2615c <flatcc_builder_start_table@@Base+0xf4>
   26150:	mvn	r0, #0
   26154:	str	r0, [fp, #-4]
   26158:	b	26170 <flatcc_builder_start_table@@Base+0x108>
   2615c:	ldr	r0, [sp, #8]
   26160:	movw	r1, #65532	; 0xfffc
   26164:	bl	24f14 <flatcc_builder_start_struct@@Base+0x70>
   26168:	movw	r0, #0
   2616c:	str	r0, [fp, #-4]
   26170:	ldr	r0, [fp, #-4]
   26174:	mov	sp, fp
   26178:	pop	{fp, pc}
   2617c:	svccs	0x00693b52

00026180 <flatcc_builder_create_vtable@@Base>:
   26180:	push	{fp, lr}
   26184:	mov	fp, sp
   26188:	sub	sp, sp, #104	; 0x68
   2618c:	str	r0, [fp, #-8]
   26190:	str	r1, [fp, #-12]
   26194:	strh	r2, [fp, #-14]
   26198:	movw	r0, #0
   2619c:	str	r0, [sp, #12]
   261a0:	str	r0, [sp, #16]
   261a4:	ldrh	r0, [fp, #-14]
   261a8:	cmp	r0, #0
   261ac:	ble	261f0 <flatcc_builder_create_vtable@@Base+0x70>
   261b0:	ldrh	r0, [fp, #-14]
   261b4:	ldr	r1, [sp, #12]
   261b8:	add	r0, r1, r0
   261bc:	str	r0, [sp, #12]
   261c0:	ldr	r0, [fp, #-12]
   261c4:	add	r1, sp, #12
   261c8:	add	r1, r1, #8
   261cc:	ldr	r2, [sp, #16]
   261d0:	str	r0, [r1, r2, lsl #3]
   261d4:	ldrh	r0, [fp, #-14]
   261d8:	ldr	r2, [sp, #16]
   261dc:	add	r1, r1, r2, lsl #3
   261e0:	str	r0, [r1, #4]
   261e4:	ldr	r0, [sp, #16]
   261e8:	add	r0, r0, #1
   261ec:	str	r0, [sp, #16]
   261f0:	ldr	r0, [fp, #-8]
   261f4:	ldr	r0, [r0, #152]	; 0x98
   261f8:	cmp	r0, #0
   261fc:	bne	2623c <flatcc_builder_create_vtable@@Base+0xbc>
   26200:	ldr	r0, [fp, #-8]
   26204:	ldr	r0, [r0, #180]	; 0xb4
   26208:	cmp	r0, #0
   2620c:	bne	2623c <flatcc_builder_create_vtable@@Base+0xbc>
   26210:	ldr	r0, [fp, #-8]
   26214:	add	r1, sp, #12
   26218:	bl	26284 <flatcc_builder_create_vtable@@Base+0x104>
   2621c:	str	r0, [fp, #-20]	; 0xffffffec
   26220:	movw	r1, #0
   26224:	cmp	r1, r0
   26228:	bne	26238 <flatcc_builder_create_vtable@@Base+0xb8>
   2622c:	movw	r0, #0
   26230:	str	r0, [fp, #-4]
   26234:	b	26278 <flatcc_builder_create_vtable@@Base+0xf8>
   26238:	b	26270 <flatcc_builder_create_vtable@@Base+0xf0>
   2623c:	ldr	r0, [fp, #-8]
   26240:	add	r1, sp, #12
   26244:	bl	242e8 <flatcc_builder_embed_buffer@@Base+0x39c>
   26248:	str	r0, [fp, #-20]	; 0xffffffec
   2624c:	movw	r1, #0
   26250:	cmp	r1, r0
   26254:	bne	26264 <flatcc_builder_create_vtable@@Base+0xe4>
   26258:	movw	r0, #0
   2625c:	str	r0, [fp, #-4]
   26260:	b	26278 <flatcc_builder_create_vtable@@Base+0xf8>
   26264:	ldr	r0, [fp, #-20]	; 0xffffffec
   26268:	add	r0, r0, #1
   2626c:	str	r0, [fp, #-20]	; 0xffffffec
   26270:	ldr	r0, [fp, #-20]	; 0xffffffec
   26274:	str	r0, [fp, #-4]
   26278:	ldr	r0, [fp, #-4]
   2627c:	mov	sp, fp
   26280:	pop	{fp, pc}
   26284:	push	{fp, lr}
   26288:	mov	fp, sp
   2628c:	sub	sp, sp, #24
   26290:	str	r0, [fp, #-4]
   26294:	str	r1, [fp, #-8]
   26298:	ldr	r0, [fp, #-4]
   2629c:	ldr	r0, [r0, #140]	; 0x8c
   262a0:	str	r0, [sp, #12]
   262a4:	ldr	r0, [sp, #12]
   262a8:	ldr	r1, [fp, #-8]
   262ac:	ldr	r1, [r1]
   262b0:	add	r0, r0, r1
   262b4:	ldr	r1, [fp, #-4]
   262b8:	str	r0, [r1, #140]	; 0x8c
   262bc:	ldr	r0, [fp, #-4]
   262c0:	ldr	r0, [r0, #140]	; 0x8c
   262c4:	ldr	r1, [sp, #12]
   262c8:	cmp	r0, r1
   262cc:	bge	262f0 <flatcc_builder_create_vtable@@Base+0x170>
   262d0:	ldr	r0, [pc, #168]	; 26380 <flatcc_builder_create_vtable@@Base+0x200>
   262d4:	add	r0, pc, r0
   262d8:	ldr	r1, [pc, #164]	; 26384 <flatcc_builder_create_vtable@@Base+0x204>
   262dc:	add	r1, pc, r1
   262e0:	ldr	r2, [pc, #160]	; 26388 <flatcc_builder_create_vtable@@Base+0x208>
   262e4:	add	r3, pc, r2
   262e8:	movw	r2, #673	; 0x2a1
   262ec:	bl	12b80 <__assert_fail@plt>
   262f0:	ldr	r0, [fp, #-4]
   262f4:	ldr	r0, [r0, #44]	; 0x2c
   262f8:	ldr	r1, [fp, #-4]
   262fc:	ldr	r1, [r1, #36]	; 0x24
   26300:	ldr	r2, [fp, #-8]
   26304:	add	r2, r2, #8
   26308:	ldr	r3, [fp, #-8]
   2630c:	ldr	r3, [r3, #4]
   26310:	ldr	ip, [sp, #12]
   26314:	ldr	lr, [fp, #-8]
   26318:	ldr	lr, [lr]
   2631c:	str	r0, [sp, #8]
   26320:	mov	r0, r1
   26324:	mov	r1, r2
   26328:	mov	r2, r3
   2632c:	mov	r3, ip
   26330:	str	lr, [sp]
   26334:	ldr	ip, [sp, #8]
   26338:	blx	ip
   2633c:	cmp	r0, #0
   26340:	beq	26364 <flatcc_builder_create_vtable@@Base+0x1e4>
   26344:	ldr	r0, [pc, #40]	; 26374 <flatcc_builder_create_vtable@@Base+0x1f4>
   26348:	add	r0, pc, r0
   2634c:	ldr	r1, [pc, #36]	; 26378 <flatcc_builder_create_vtable@@Base+0x1f8>
   26350:	add	r1, pc, r1
   26354:	ldr	r2, [pc, #32]	; 2637c <flatcc_builder_create_vtable@@Base+0x1fc>
   26358:	add	r3, pc, r2
   2635c:	movw	r2, #677	; 0x2a5
   26360:	bl	12b80 <__assert_fail@plt>
   26364:	ldr	r0, [sp, #12]
   26368:	add	r0, r0, #1
   2636c:	mov	sp, fp
   26370:	pop	{fp, pc}
   26374:	strdeq	ip, [r0], -fp
   26378:	andeq	fp, r0, r6, lsr r1
   2637c:	andeq	ip, r0, r6, ror #4
   26380:	andeq	ip, r0, pc, ror #6
   26384:	andeq	fp, r0, sl, lsr #3
   26388:	ldrdeq	ip, [r0], -sl

0002638c <flatcc_builder_create_cached_vtable@@Base>:
   2638c:	push	{fp, lr}
   26390:	mov	fp, sp
   26394:	sub	sp, sp, #48	; 0x30
   26398:	str	r0, [fp, #-8]
   2639c:	str	r1, [fp, #-12]
   263a0:	strh	r2, [fp, #-14]
   263a4:	str	r3, [fp, #-20]	; 0xffffffec
   263a8:	ldr	r0, [fp, #-8]
   263ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   263b0:	bl	26698 <flatcc_builder_create_cached_vtable@@Base+0x30c>
   263b4:	str	r0, [sp, #12]
   263b8:	movw	r1, #0
   263bc:	cmp	r0, r1
   263c0:	bne	263d0 <flatcc_builder_create_cached_vtable@@Base+0x44>
   263c4:	movw	r0, #0
   263c8:	str	r0, [fp, #-4]
   263cc:	b	2668c <flatcc_builder_create_cached_vtable@@Base+0x300>
   263d0:	ldr	r0, [sp, #12]
   263d4:	str	r0, [sp, #16]
   263d8:	ldr	r0, [sp, #16]
   263dc:	ldr	r0, [r0]
   263e0:	str	r0, [sp, #8]
   263e4:	movw	r0, #0
   263e8:	str	r0, [sp, #20]
   263ec:	ldr	r0, [sp, #8]
   263f0:	cmp	r0, #0
   263f4:	beq	264f8 <flatcc_builder_create_cached_vtable@@Base+0x16c>
   263f8:	ldr	r0, [fp, #-8]
   263fc:	ldr	r0, [r0, #100]	; 0x64
   26400:	ldr	r1, [sp, #8]
   26404:	add	r0, r0, r1
   26408:	str	r0, [sp, #24]
   2640c:	ldr	r0, [fp, #-8]
   26410:	ldr	r0, [r0, #68]	; 0x44
   26414:	ldr	r1, [sp, #24]
   26418:	ldr	r1, [r1, #8]
   2641c:	add	r0, r0, r1
   26420:	str	r0, [sp, #4]
   26424:	ldr	r0, [sp, #4]
   26428:	ldrh	r0, [r0]
   2642c:	ldrh	r1, [fp, #-14]
   26430:	cmp	r0, r1
   26434:	bne	26454 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   26438:	ldr	r0, [fp, #-12]
   2643c:	ldr	r1, [sp, #4]
   26440:	ldrh	r2, [fp, #-14]
   26444:	bl	12a90 <memcmp@plt>
   26448:	movw	r1, #0
   2644c:	cmp	r1, r0
   26450:	beq	26470 <flatcc_builder_create_cached_vtable@@Base+0xe4>
   26454:	ldr	r0, [sp, #24]
   26458:	add	r0, r0, #12
   2645c:	str	r0, [sp, #16]
   26460:	ldr	r0, [sp, #24]
   26464:	ldr	r0, [r0, #12]
   26468:	str	r0, [sp, #8]
   2646c:	b	263ec <flatcc_builder_create_cached_vtable@@Base+0x60>
   26470:	ldr	r0, [sp, #24]
   26474:	ldr	r0, [r0, #4]
   26478:	ldr	r1, [fp, #-8]
   2647c:	ldr	r1, [r1, #152]	; 0x98
   26480:	cmp	r0, r1
   26484:	beq	264ac <flatcc_builder_create_cached_vtable@@Base+0x120>
   26488:	ldr	r0, [sp, #24]
   2648c:	str	r0, [sp, #20]
   26490:	ldr	r0, [sp, #24]
   26494:	add	r0, r0, #12
   26498:	str	r0, [sp, #16]
   2649c:	ldr	r0, [sp, #24]
   264a0:	ldr	r0, [r0, #12]
   264a4:	str	r0, [sp, #8]
   264a8:	b	263ec <flatcc_builder_create_cached_vtable@@Base+0x60>
   264ac:	ldr	r0, [sp, #16]
   264b0:	ldr	r1, [sp, #12]
   264b4:	cmp	r0, r1
   264b8:	beq	264e8 <flatcc_builder_create_cached_vtable@@Base+0x15c>
   264bc:	ldr	r0, [sp, #24]
   264c0:	ldr	r0, [r0, #12]
   264c4:	ldr	r1, [sp, #16]
   264c8:	str	r0, [r1]
   264cc:	ldr	r0, [sp, #12]
   264d0:	ldr	r0, [r0]
   264d4:	ldr	r1, [sp, #24]
   264d8:	str	r0, [r1, #12]
   264dc:	ldr	r0, [sp, #8]
   264e0:	ldr	r1, [sp, #12]
   264e4:	str	r0, [r1]
   264e8:	ldr	r0, [sp, #24]
   264ec:	ldr	r0, [r0]
   264f0:	str	r0, [fp, #-4]
   264f4:	b	2668c <flatcc_builder_create_cached_vtable@@Base+0x300>
   264f8:	ldr	r0, [fp, #-8]
   264fc:	ldr	r1, [fp, #-8]
   26500:	ldr	r2, [r1, #124]	; 0x7c
   26504:	movw	r1, #6
   26508:	movw	r3, #16
   2650c:	movw	ip, #0
   26510:	str	ip, [sp]
   26514:	bl	23c3c <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   26518:	str	r0, [sp, #24]
   2651c:	movw	r1, #0
   26520:	cmp	r0, r1
   26524:	bne	26534 <flatcc_builder_create_cached_vtable@@Base+0x1a8>
   26528:	movw	r0, #0
   2652c:	str	r0, [fp, #-4]
   26530:	b	2668c <flatcc_builder_create_cached_vtable@@Base+0x300>
   26534:	ldr	r0, [fp, #-8]
   26538:	ldr	r0, [r0, #124]	; 0x7c
   2653c:	str	r0, [sp, #8]
   26540:	ldr	r0, [fp, #-8]
   26544:	ldr	r1, [r0, #124]	; 0x7c
   26548:	add	r1, r1, #16
   2654c:	str	r1, [r0, #124]	; 0x7c
   26550:	ldr	r0, [fp, #-8]
   26554:	ldr	r0, [r0, #152]	; 0x98
   26558:	ldr	r1, [sp, #24]
   2655c:	str	r0, [r1, #4]
   26560:	ldr	r0, [sp, #12]
   26564:	ldr	r0, [r0]
   26568:	ldr	r1, [sp, #24]
   2656c:	str	r0, [r1, #12]
   26570:	ldr	r0, [sp, #8]
   26574:	ldr	r1, [sp, #12]
   26578:	str	r0, [r1]
   2657c:	ldr	r0, [fp, #-8]
   26580:	ldr	r1, [fp, #-12]
   26584:	ldrh	r2, [fp, #-14]
   26588:	bl	26180 <flatcc_builder_create_vtable@@Base>
   2658c:	ldr	r1, [sp, #24]
   26590:	str	r0, [r1]
   26594:	movw	r1, #0
   26598:	cmp	r1, r0
   2659c:	bne	265ac <flatcc_builder_create_cached_vtable@@Base+0x220>
   265a0:	movw	r0, #0
   265a4:	str	r0, [fp, #-4]
   265a8:	b	2668c <flatcc_builder_create_cached_vtable@@Base+0x300>
   265ac:	ldr	r0, [sp, #20]
   265b0:	movw	r1, #0
   265b4:	cmp	r0, r1
   265b8:	beq	265d0 <flatcc_builder_create_cached_vtable@@Base+0x244>
   265bc:	ldr	r0, [sp, #20]
   265c0:	ldr	r0, [r0, #8]
   265c4:	ldr	r1, [sp, #24]
   265c8:	str	r0, [r1, #8]
   265cc:	b	26680 <flatcc_builder_create_cached_vtable@@Base+0x2f4>
   265d0:	ldr	r0, [fp, #-8]
   265d4:	ldr	r0, [r0, #172]	; 0xac
   265d8:	cmp	r0, #0
   265dc:	beq	2660c <flatcc_builder_create_cached_vtable@@Base+0x280>
   265e0:	ldr	r0, [fp, #-8]
   265e4:	ldr	r0, [r0, #172]	; 0xac
   265e8:	ldr	r1, [fp, #-8]
   265ec:	ldr	r1, [r1, #120]	; 0x78
   265f0:	ldrh	r2, [fp, #-14]
   265f4:	add	r1, r1, r2
   265f8:	cmp	r0, r1
   265fc:	bcs	2660c <flatcc_builder_create_cached_vtable@@Base+0x280>
   26600:	ldr	r0, [fp, #-8]
   26604:	bl	236b4 <flatcc_builder_flush_vtable_cache@@Base>
   26608:	b	2667c <flatcc_builder_create_cached_vtable@@Base+0x2f0>
   2660c:	ldr	r0, [fp, #-8]
   26610:	ldr	r1, [fp, #-8]
   26614:	ldr	r2, [r1, #120]	; 0x78
   26618:	ldrh	r3, [fp, #-14]
   2661c:	movw	r1, #2
   26620:	movw	ip, #0
   26624:	str	ip, [sp]
   26628:	bl	23c3c <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   2662c:	str	r0, [sp, #4]
   26630:	movw	r1, #0
   26634:	cmp	r0, r1
   26638:	bne	26648 <flatcc_builder_create_cached_vtable@@Base+0x2bc>
   2663c:	mvn	r0, #0
   26640:	str	r0, [fp, #-4]
   26644:	b	2668c <flatcc_builder_create_cached_vtable@@Base+0x300>
   26648:	ldr	r0, [fp, #-8]
   2664c:	ldr	r0, [r0, #120]	; 0x78
   26650:	ldr	r1, [sp, #24]
   26654:	str	r0, [r1, #8]
   26658:	ldrh	r0, [fp, #-14]
   2665c:	ldr	r1, [fp, #-8]
   26660:	ldr	r2, [r1, #120]	; 0x78
   26664:	add	r0, r2, r0
   26668:	str	r0, [r1, #120]	; 0x78
   2666c:	ldr	r0, [sp, #4]
   26670:	ldr	r1, [fp, #-12]
   26674:	ldrh	r2, [fp, #-14]
   26678:	bl	12a78 <memcpy@plt>
   2667c:	b	26680 <flatcc_builder_create_cached_vtable@@Base+0x2f4>
   26680:	ldr	r0, [sp, #24]
   26684:	ldr	r0, [r0]
   26688:	str	r0, [fp, #-4]
   2668c:	ldr	r0, [fp, #-4]
   26690:	mov	sp, fp
   26694:	pop	{fp, pc}
   26698:	push	{fp, lr}
   2669c:	mov	fp, sp
   266a0:	sub	sp, sp, #24
   266a4:	str	r0, [fp, #-8]
   266a8:	str	r1, [sp, #12]
   266ac:	ldr	r0, [fp, #-8]
   266b0:	ldr	r0, [r0, #116]	; 0x74
   266b4:	cmp	r0, #0
   266b8:	bne	266dc <flatcc_builder_create_cached_vtable@@Base+0x350>
   266bc:	ldr	r0, [fp, #-8]
   266c0:	bl	291b8 <flatcc_builder_get_emit_context@@Base+0xe8>
   266c4:	cmp	r0, #0
   266c8:	beq	266d8 <flatcc_builder_create_cached_vtable@@Base+0x34c>
   266cc:	movw	r0, #0
   266d0:	str	r0, [fp, #-4]
   266d4:	b	26710 <flatcc_builder_create_cached_vtable@@Base+0x384>
   266d8:	b	266dc <flatcc_builder_create_cached_vtable@@Base+0x350>
   266dc:	ldr	r0, [fp, #-8]
   266e0:	ldr	r0, [r0, #92]	; 0x5c
   266e4:	str	r0, [sp, #8]
   266e8:	ldr	r0, [sp, #8]
   266ec:	ldr	r1, [sp, #12]
   266f0:	ldr	r2, [fp, #-8]
   266f4:	ldr	r2, [r2, #116]	; 0x74
   266f8:	rsb	r2, r2, #32
   266fc:	lsr	r1, r1, r2
   26700:	mov	r2, r1
   26704:	add	r0, r0, r1, lsl #2
   26708:	str	r0, [fp, #-4]
   2670c:	str	r2, [sp, #4]
   26710:	ldr	r0, [fp, #-4]
   26714:	mov	sp, fp
   26718:	pop	{fp, pc}

0002671c <flatcc_builder_create_table@@Base>:
   2671c:	push	{r4, sl, fp, lr}
   26720:	add	fp, sp, #8
   26724:	sub	sp, sp, #136	; 0x88
   26728:	ldr	ip, [fp, #16]
   2672c:	ldr	lr, [fp, #12]
   26730:	ldr	r4, [fp, #8]
   26734:	str	r0, [fp, #-16]
   26738:	str	r1, [fp, #-20]	; 0xffffffec
   2673c:	str	r2, [fp, #-24]	; 0xffffffe8
   26740:	strh	r3, [fp, #-26]	; 0xffffffe6
   26744:	ldr	r0, [fp, #12]
   26748:	cmp	r0, #0
   2674c:	str	r4, [sp, #8]
   26750:	str	lr, [sp, #4]
   26754:	str	ip, [sp]
   26758:	blt	26760 <flatcc_builder_create_table@@Base+0x44>
   2675c:	b	26780 <flatcc_builder_create_table@@Base+0x64>
   26760:	ldr	r0, [pc, #616]	; 269d0 <flatcc_builder_create_table@@Base+0x2b4>
   26764:	add	r0, pc, r0
   26768:	ldr	r1, [pc, #612]	; 269d4 <flatcc_builder_create_table@@Base+0x2b8>
   2676c:	add	r1, pc, r1
   26770:	ldr	r2, [pc, #608]	; 269d8 <flatcc_builder_create_table@@Base+0x2bc>
   26774:	add	r3, pc, r2
   26778:	movw	r2, #1237	; 0x4d5
   2677c:	bl	12b80 <__assert_fail@plt>
   26780:	ldr	r0, [fp, #16]
   26784:	and	r0, r0, #1
   26788:	cmp	r0, #0
   2678c:	beq	26794 <flatcc_builder_create_table@@Base+0x78>
   26790:	b	267b4 <flatcc_builder_create_table@@Base+0x98>
   26794:	ldr	r0, [pc, #576]	; 269dc <flatcc_builder_create_table@@Base+0x2c0>
   26798:	add	r0, pc, r0
   2679c:	ldr	r1, [pc, #572]	; 269e0 <flatcc_builder_create_table@@Base+0x2c4>
   267a0:	add	r1, pc, r1
   267a4:	ldr	r2, [pc, #568]	; 269e4 <flatcc_builder_create_table@@Base+0x2c8>
   267a8:	add	r3, pc, r2
   267ac:	movw	r2, #1243	; 0x4db
   267b0:	bl	12b80 <__assert_fail@plt>
   267b4:	sub	r0, fp, #26
   267b8:	movw	r1, #4
   267bc:	uxth	r1, r1
   267c0:	bl	25ca0 <flatcc_builder_start_vector@@Base+0xac>
   267c4:	ldr	r0, [fp, #-16]
   267c8:	ldrh	r1, [fp, #-26]	; 0xffffffe6
   267cc:	bl	247b4 <flatcc_builder_create_buffer@@Base+0x3a8>
   267d0:	ldr	r0, [fp, #-16]
   267d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   267d8:	ldrh	r2, [fp, #-26]	; 0xffffffe6
   267dc:	bl	242a0 <flatcc_builder_embed_buffer@@Base+0x354>
   267e0:	str	r0, [fp, #-36]	; 0xffffffdc
   267e4:	ldr	r0, [fp, #-16]
   267e8:	ldr	r0, [r0, #136]	; 0x88
   267ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   267f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   267f4:	add	r1, r1, r2
   267f8:	add	r1, r1, #4
   267fc:	sub	r0, r0, r1
   26800:	str	r0, [fp, #-52]	; 0xffffffcc
   26804:	ldr	r0, [fp, #16]
   26808:	sub	r0, r0, #1
   2680c:	str	r0, [fp, #-48]	; 0xffffffd0
   26810:	ldr	r0, [fp, #-52]	; 0xffffffcc
   26814:	ldr	r1, [fp, #-48]	; 0xffffffd0
   26818:	sub	r0, r0, r1
   2681c:	str	r0, [fp, #-40]	; 0xffffffd8
   26820:	ldr	r0, [fp, #-52]	; 0xffffffcc
   26824:	ldr	r1, [fp, #-40]	; 0xffffffd8
   26828:	sub	r0, r0, r1
   2682c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   26830:	cmp	r0, r1
   26834:	beq	26844 <flatcc_builder_create_table@@Base+0x128>
   26838:	mvn	r0, #0
   2683c:	str	r0, [fp, #-12]
   26840:	b	269c4 <flatcc_builder_create_table@@Base+0x2a8>
   26844:	ldr	r0, [fp, #-40]	; 0xffffffd8
   26848:	bl	242d4 <flatcc_builder_embed_buffer@@Base+0x388>
   2684c:	str	r0, [fp, #-44]	; 0xffffffd4
   26850:	movw	r0, #0
   26854:	str	r0, [fp, #-32]	; 0xffffffe0
   26858:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2685c:	ldr	r1, [fp, #12]
   26860:	cmp	r0, r1
   26864:	bge	268d0 <flatcc_builder_create_table@@Base+0x1b4>
   26868:	ldr	r0, [fp, #-20]	; 0xffffffec
   2686c:	ldr	r1, [fp, #8]
   26870:	ldr	r2, [fp, #-32]	; 0xffffffe0
   26874:	add	r1, r1, r2, lsl #1
   26878:	ldrh	r1, [r1]
   2687c:	add	r0, r0, r1
   26880:	str	r0, [fp, #-60]	; 0xffffffc4
   26884:	ldr	r0, [fp, #-60]	; 0xffffffc4
   26888:	ldr	r0, [r0]
   2688c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   26890:	sub	r0, r0, r1
   26894:	ldr	r1, [fp, #8]
   26898:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2689c:	add	r1, r1, r2, lsl #1
   268a0:	ldrh	r1, [r1]
   268a4:	sub	r0, r0, r1
   268a8:	sub	r0, r0, #4
   268ac:	str	r0, [fp, #-56]	; 0xffffffc8
   268b0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   268b4:	bl	242d4 <flatcc_builder_embed_buffer@@Base+0x388>
   268b8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   268bc:	str	r0, [r1]
   268c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   268c4:	add	r0, r0, #1
   268c8:	str	r0, [fp, #-32]	; 0xffffffe0
   268cc:	b	26858 <flatcc_builder_create_table@@Base+0x13c>
   268d0:	mov	r0, #0
   268d4:	str	r0, [sp, #12]
   268d8:	str	r0, [sp, #16]
   268dc:	ldr	r0, [sp, #12]
   268e0:	add	r0, r0, #4
   268e4:	str	r0, [sp, #12]
   268e8:	add	r0, sp, #12
   268ec:	add	r0, r0, #8
   268f0:	ldr	r1, [sp, #16]
   268f4:	sub	r2, fp, #44	; 0x2c
   268f8:	str	r2, [r0, r1, lsl #3]
   268fc:	ldr	r1, [sp, #16]
   26900:	add	r0, r0, r1, lsl #3
   26904:	movw	r1, #4
   26908:	str	r1, [r0, #4]
   2690c:	ldr	r0, [sp, #16]
   26910:	add	r0, r0, #1
   26914:	str	r0, [sp, #16]
   26918:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2691c:	cmp	r0, #0
   26920:	bls	26964 <flatcc_builder_create_table@@Base+0x248>
   26924:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26928:	ldr	r1, [sp, #12]
   2692c:	add	r0, r1, r0
   26930:	str	r0, [sp, #12]
   26934:	ldr	r0, [fp, #-20]	; 0xffffffec
   26938:	add	r1, sp, #12
   2693c:	add	r1, r1, #8
   26940:	ldr	r2, [sp, #16]
   26944:	str	r0, [r1, r2, lsl #3]
   26948:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2694c:	ldr	r2, [sp, #16]
   26950:	add	r1, r1, r2, lsl #3
   26954:	str	r0, [r1, #4]
   26958:	ldr	r0, [sp, #16]
   2695c:	add	r0, r0, #1
   26960:	str	r0, [sp, #16]
   26964:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26968:	cmp	r0, #0
   2696c:	bls	269b4 <flatcc_builder_create_table@@Base+0x298>
   26970:	ldr	r0, [fp, #-36]	; 0xffffffdc
   26974:	ldr	r1, [sp, #12]
   26978:	add	r0, r1, r0
   2697c:	str	r0, [sp, #12]
   26980:	add	r0, sp, #12
   26984:	add	r0, r0, #8
   26988:	ldr	r1, [sp, #16]
   2698c:	ldr	r2, [pc, #84]	; 269e8 <flatcc_builder_create_table@@Base+0x2cc>
   26990:	ldr	r2, [pc, r2]
   26994:	str	r2, [r0, r1, lsl #3]
   26998:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2699c:	ldr	r2, [sp, #16]
   269a0:	add	r0, r0, r2, lsl #3
   269a4:	str	r1, [r0, #4]
   269a8:	ldr	r0, [sp, #16]
   269ac:	add	r0, r0, #1
   269b0:	str	r0, [sp, #16]
   269b4:	ldr	r0, [fp, #-16]
   269b8:	add	r1, sp, #12
   269bc:	bl	242e8 <flatcc_builder_embed_buffer@@Base+0x39c>
   269c0:	str	r0, [fp, #-12]
   269c4:	ldr	r0, [fp, #-12]
   269c8:	sub	sp, fp, #8
   269cc:	pop	{r4, sl, fp, pc}
   269d0:	muleq	r0, r5, r4
   269d4:	andeq	sl, r0, sl, lsl sp
   269d8:	muleq	r0, r7, r4
   269dc:	andeq	fp, r0, pc, lsl #10
   269e0:	andeq	sl, r0, r6, ror #25
   269e4:	andeq	fp, r0, r3, ror #8
   269e8:	ldrdeq	sp, [r1], -r8

000269ec <flatcc_builder_check_required_field@@Base>:
   269ec:	push	{fp, lr}
   269f0:	mov	fp, sp
   269f4:	sub	sp, sp, #16
   269f8:	str	r0, [fp, #-4]
   269fc:	strh	r1, [fp, #-6]
   26a00:	ldr	r0, [fp, #-4]
   26a04:	ldr	r0, [r0, #32]
   26a08:	ldrh	r0, [r0, #14]
   26a0c:	cmp	r0, #3
   26a10:	bne	26a18 <flatcc_builder_check_required_field@@Base+0x2c>
   26a14:	b	26a38 <flatcc_builder_check_required_field@@Base+0x4c>
   26a18:	ldr	r0, [pc, #104]	; 26a88 <flatcc_builder_check_required_field@@Base+0x9c>
   26a1c:	add	r0, pc, r0
   26a20:	ldr	r1, [pc, #100]	; 26a8c <flatcc_builder_check_required_field@@Base+0xa0>
   26a24:	add	r1, pc, r1
   26a28:	ldr	r2, [pc, #96]	; 26a90 <flatcc_builder_check_required_field@@Base+0xa4>
   26a2c:	add	r3, pc, r2
   26a30:	movw	r2, #1272	; 0x4f8
   26a34:	bl	12b80 <__assert_fail@plt>
   26a38:	ldrh	r0, [fp, #-6]
   26a3c:	ldr	r1, [fp, #-4]
   26a40:	ldrh	r1, [r1, #8]
   26a44:	cmp	r0, r1
   26a48:	movw	r0, #0
   26a4c:	str	r0, [sp, #4]
   26a50:	bge	26a78 <flatcc_builder_check_required_field@@Base+0x8c>
   26a54:	ldr	r0, [fp, #-4]
   26a58:	ldr	r0, [r0, #4]
   26a5c:	ldrh	r1, [fp, #-6]
   26a60:	add	r0, r0, r1, lsl #1
   26a64:	ldrh	r0, [r0]
   26a68:	cmp	r0, #0
   26a6c:	movw	r0, #0
   26a70:	movne	r0, #1
   26a74:	str	r0, [sp, #4]
   26a78:	ldr	r0, [sp, #4]
   26a7c:	and	r0, r0, #1
   26a80:	mov	sp, fp
   26a84:	pop	{fp, pc}
   26a88:	muleq	r0, r6, r2
   26a8c:	andeq	sl, r0, r2, ror #20
   26a90:			; <UNDEFINED> instruction: 0x0000b2b1

00026a94 <flatcc_builder_check_union_field@@Base>:
   26a94:	push	{fp, lr}
   26a98:	mov	fp, sp
   26a9c:	sub	sp, sp, #16
   26aa0:	str	r0, [sp, #8]
   26aa4:	strh	r1, [sp, #6]
   26aa8:	ldr	r0, [sp, #8]
   26aac:	ldr	r0, [r0, #32]
   26ab0:	ldrh	r0, [r0, #14]
   26ab4:	cmp	r0, #3
   26ab8:	bne	26ac0 <flatcc_builder_check_union_field@@Base+0x2c>
   26abc:	b	26ae0 <flatcc_builder_check_union_field@@Base+0x4c>
   26ac0:	ldr	r0, [pc, #284]	; 26be4 <flatcc_builder_check_union_field@@Base+0x150>
   26ac4:	add	r0, pc, r0
   26ac8:	ldr	r1, [pc, #280]	; 26be8 <flatcc_builder_check_union_field@@Base+0x154>
   26acc:	add	r1, pc, r1
   26ad0:	ldr	r2, [pc, #276]	; 26bec <flatcc_builder_check_union_field@@Base+0x158>
   26ad4:	add	r3, pc, r2
   26ad8:	movw	r2, #1279	; 0x4ff
   26adc:	bl	12b80 <__assert_fail@plt>
   26ae0:	ldrh	r0, [sp, #6]
   26ae4:	cmp	r0, #0
   26ae8:	beq	26b00 <flatcc_builder_check_union_field@@Base+0x6c>
   26aec:	ldrh	r0, [sp, #6]
   26af0:	ldr	r1, [sp, #8]
   26af4:	ldrh	r1, [r1, #8]
   26af8:	cmp	r0, r1
   26afc:	blt	26b0c <flatcc_builder_check_union_field@@Base+0x78>
   26b00:	movw	r0, #0
   26b04:	str	r0, [fp, #-4]
   26b08:	b	26bd8 <flatcc_builder_check_union_field@@Base+0x144>
   26b0c:	ldr	r0, [sp, #8]
   26b10:	ldr	r0, [r0, #4]
   26b14:	ldrh	r1, [sp, #6]
   26b18:	sub	r1, r1, #1
   26b1c:	add	r0, r0, r1, lsl #1
   26b20:	ldrh	r0, [r0]
   26b24:	cmp	r0, #0
   26b28:	bne	26b58 <flatcc_builder_check_union_field@@Base+0xc4>
   26b2c:	ldr	r0, [sp, #8]
   26b30:	ldr	r0, [r0, #4]
   26b34:	ldrh	r1, [sp, #6]
   26b38:	add	r0, r0, r1, lsl #1
   26b3c:	ldrh	r0, [r0]
   26b40:	cmp	r0, #0
   26b44:	movw	r0, #0
   26b48:	moveq	r0, #1
   26b4c:	and	r0, r0, #1
   26b50:	str	r0, [fp, #-4]
   26b54:	b	26bd8 <flatcc_builder_check_union_field@@Base+0x144>
   26b58:	ldr	r0, [sp, #8]
   26b5c:	ldr	r1, [r0, #4]
   26b60:	ldr	r0, [r0, #16]
   26b64:	ldrh	r2, [sp, #6]
   26b68:	sub	r2, r2, #1
   26b6c:	add	r1, r1, r2, lsl #1
   26b70:	ldrh	r1, [r1]
   26b74:	add	r0, r0, r1
   26b78:	ldrsb	r0, [r0]
   26b7c:	cmp	r0, #0
   26b80:	beq	26bb0 <flatcc_builder_check_union_field@@Base+0x11c>
   26b84:	ldr	r0, [sp, #8]
   26b88:	ldr	r0, [r0, #4]
   26b8c:	ldrh	r1, [sp, #6]
   26b90:	add	r0, r0, r1, lsl #1
   26b94:	ldrh	r0, [r0]
   26b98:	cmp	r0, #0
   26b9c:	movw	r0, #0
   26ba0:	movne	r0, #1
   26ba4:	and	r0, r0, #1
   26ba8:	str	r0, [fp, #-4]
   26bac:	b	26bd8 <flatcc_builder_check_union_field@@Base+0x144>
   26bb0:	ldr	r0, [sp, #8]
   26bb4:	ldr	r0, [r0, #4]
   26bb8:	ldrh	r1, [sp, #6]
   26bbc:	add	r0, r0, r1, lsl #1
   26bc0:	ldrh	r0, [r0]
   26bc4:	cmp	r0, #0
   26bc8:	movw	r0, #0
   26bcc:	moveq	r0, #1
   26bd0:	and	r0, r0, #1
   26bd4:	str	r0, [fp, #-4]
   26bd8:	ldr	r0, [fp, #-4]
   26bdc:	mov	sp, fp
   26be0:	pop	{fp, pc}
   26be4:	andeq	fp, r0, lr, ror #3
   26be8:			; <UNDEFINED> instruction: 0x0000a9ba
   26bec:	andeq	fp, r0, ip, asr r2

00026bf0 <flatcc_builder_check_required@@Base>:
   26bf0:	push	{fp, lr}
   26bf4:	mov	fp, sp
   26bf8:	sub	sp, sp, #24
   26bfc:	str	r0, [fp, #-8]
   26c00:	str	r1, [sp, #12]
   26c04:	str	r2, [sp, #8]
   26c08:	ldr	r0, [fp, #-8]
   26c0c:	ldr	r0, [r0, #32]
   26c10:	ldrh	r0, [r0, #14]
   26c14:	cmp	r0, #3
   26c18:	bne	26c20 <flatcc_builder_check_required@@Base+0x30>
   26c1c:	b	26c40 <flatcc_builder_check_required@@Base+0x50>
   26c20:	ldr	r0, [pc, #172]	; 26cd4 <flatcc_builder_check_required@@Base+0xe4>
   26c24:	add	r0, pc, r0
   26c28:	ldr	r1, [pc, #168]	; 26cd8 <flatcc_builder_check_required@@Base+0xe8>
   26c2c:	add	r1, pc, r1
   26c30:	ldr	r2, [pc, #164]	; 26cdc <flatcc_builder_check_required@@Base+0xec>
   26c34:	add	r3, pc, r2
   26c38:	movw	r2, #1297	; 0x511
   26c3c:	bl	12b80 <__assert_fail@plt>
   26c40:	ldr	r0, [fp, #-8]
   26c44:	ldrh	r0, [r0, #8]
   26c48:	ldr	r1, [sp, #8]
   26c4c:	cmp	r0, r1
   26c50:	bge	26c60 <flatcc_builder_check_required@@Base+0x70>
   26c54:	movw	r0, #0
   26c58:	str	r0, [fp, #-4]
   26c5c:	b	26cc8 <flatcc_builder_check_required@@Base+0xd8>
   26c60:	movw	r0, #0
   26c64:	str	r0, [sp, #4]
   26c68:	ldr	r0, [sp, #4]
   26c6c:	ldr	r1, [sp, #8]
   26c70:	cmp	r0, r1
   26c74:	bge	26cc0 <flatcc_builder_check_required@@Base+0xd0>
   26c78:	ldr	r0, [fp, #-8]
   26c7c:	ldr	r0, [r0, #4]
   26c80:	ldr	r1, [sp, #12]
   26c84:	ldr	r2, [sp, #4]
   26c88:	add	r1, r1, r2, lsl #1
   26c8c:	ldrh	r1, [r1]
   26c90:	add	r0, r0, r1, lsl #1
   26c94:	ldrh	r0, [r0]
   26c98:	cmp	r0, #0
   26c9c:	bne	26cac <flatcc_builder_check_required@@Base+0xbc>
   26ca0:	movw	r0, #0
   26ca4:	str	r0, [fp, #-4]
   26ca8:	b	26cc8 <flatcc_builder_check_required@@Base+0xd8>
   26cac:	b	26cb0 <flatcc_builder_check_required@@Base+0xc0>
   26cb0:	ldr	r0, [sp, #4]
   26cb4:	add	r0, r0, #1
   26cb8:	str	r0, [sp, #4]
   26cbc:	b	26c68 <flatcc_builder_check_required@@Base+0x78>
   26cc0:	movw	r0, #1
   26cc4:	str	r0, [fp, #-4]
   26cc8:	ldr	r0, [fp, #-4]
   26ccc:	mov	sp, fp
   26cd0:	pop	{fp, pc}
   26cd4:	andeq	fp, r0, lr, lsl #1
   26cd8:	andeq	sl, r0, sl, asr r8
   26cdc:	andeq	fp, r0, ip, asr #2

00026ce0 <flatcc_builder_end_table@@Base>:
   26ce0:	push	{r4, r5, fp, lr}
   26ce4:	add	fp, sp, #8
   26ce8:	sub	sp, sp, #48	; 0x30
   26cec:	str	r0, [fp, #-16]
   26cf0:	ldr	r0, [fp, #-16]
   26cf4:	ldr	r0, [r0, #32]
   26cf8:	ldrh	r0, [r0, #14]
   26cfc:	cmp	r0, #3
   26d00:	bne	26d08 <flatcc_builder_end_table@@Base+0x28>
   26d04:	b	26d28 <flatcc_builder_end_table@@Base+0x48>
   26d08:	ldr	r0, [pc, #500]	; 26f04 <flatcc_builder_end_table@@Base+0x224>
   26d0c:	add	r0, pc, r0
   26d10:	ldr	r1, [pc, #496]	; 26f08 <flatcc_builder_end_table@@Base+0x228>
   26d14:	add	r1, pc, r1
   26d18:	ldr	r2, [pc, #492]	; 26f0c <flatcc_builder_end_table@@Base+0x22c>
   26d1c:	add	r3, pc, r2
   26d20:	movw	r2, #1317	; 0x525
   26d24:	bl	12b80 <__assert_fail@plt>
   26d28:	ldr	r0, [pc, #480]	; 26f10 <flatcc_builder_end_table@@Base+0x230>
   26d2c:	ldr	r1, [fp, #-16]
   26d30:	ldr	r1, [r1, #4]
   26d34:	sub	r1, r1, #4
   26d38:	str	r1, [fp, #-20]	; 0xffffffec
   26d3c:	ldr	r1, [fp, #-16]
   26d40:	ldrh	r1, [r1, #8]
   26d44:	add	r1, r1, #2
   26d48:	lsl	r1, r1, #1
   26d4c:	strh	r1, [fp, #-22]	; 0xffffffea
   26d50:	ldrh	r1, [fp, #-22]	; 0xffffffea
   26d54:	ldr	r2, [fp, #-20]	; 0xffffffec
   26d58:	strh	r1, [r2]
   26d5c:	ldr	r1, [fp, #-16]
   26d60:	ldr	r1, [r1, #20]
   26d64:	uxth	r1, r1
   26d68:	add	r1, r1, #4
   26d6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   26d70:	strh	r1, [r2, #2]
   26d74:	ldr	r1, [fp, #-20]	; 0xffffffec
   26d78:	ldrh	r1, [r1]
   26d7c:	ldr	r2, [fp, #-16]
   26d80:	ldr	r2, [r2, #12]
   26d84:	eor	r1, r1, r2
   26d88:	mul	r1, r1, r0
   26d8c:	ldr	r2, [fp, #-20]	; 0xffffffec
   26d90:	ldrh	r2, [r2, #2]
   26d94:	eor	r1, r1, r2
   26d98:	mul	r0, r1, r0
   26d9c:	ldr	r1, [fp, #-16]
   26da0:	str	r0, [r1, #12]
   26da4:	ldr	r0, [fp, #-16]
   26da8:	ldr	r1, [fp, #-20]	; 0xffffffec
   26dac:	ldrh	r2, [fp, #-22]	; 0xffffffea
   26db0:	ldr	r3, [fp, #-16]
   26db4:	ldr	r3, [r3, #12]
   26db8:	uxth	r2, r2
   26dbc:	bl	2638c <flatcc_builder_create_cached_vtable@@Base>
   26dc0:	str	r0, [sp, #24]
   26dc4:	cmp	r0, #0
   26dc8:	bne	26dd8 <flatcc_builder_end_table@@Base+0xf8>
   26dcc:	movw	r0, #0
   26dd0:	str	r0, [fp, #-12]
   26dd4:	b	26ef8 <flatcc_builder_end_table@@Base+0x218>
   26dd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   26ddc:	ldrh	r2, [fp, #-22]	; 0xffffffea
   26de0:	mov	r1, #0
   26de4:	bl	12b2c <memset@plt>
   26de8:	ldr	r1, [fp, #-16]
   26dec:	ldr	r2, [r1, #32]
   26df0:	ldr	r1, [r1, #76]	; 0x4c
   26df4:	ldr	r2, [r2, #20]
   26df8:	add	r1, r1, r2
   26dfc:	str	r1, [sp, #16]
   26e00:	ldr	r1, [fp, #-16]
   26e04:	ldr	r1, [r1]
   26e08:	ldr	r2, [sp, #16]
   26e0c:	sub	r1, r1, r2
   26e10:	asr	r1, r1, #1
   26e14:	str	r1, [sp, #20]
   26e18:	ldr	r1, [fp, #-16]
   26e1c:	ldr	r2, [fp, #-16]
   26e20:	ldr	r2, [r2, #16]
   26e24:	ldr	lr, [fp, #-16]
   26e28:	ldr	lr, [lr, #20]
   26e2c:	ldr	r3, [fp, #-16]
   26e30:	ldrh	r3, [r3, #130]	; 0x82
   26e34:	ldr	ip, [sp, #16]
   26e38:	ldr	r4, [sp, #20]
   26e3c:	ldr	r5, [sp, #24]
   26e40:	str	r0, [sp, #12]
   26e44:	mov	r0, r1
   26e48:	mov	r1, r2
   26e4c:	mov	r2, lr
   26e50:	uxth	r3, r3
   26e54:	str	ip, [sp]
   26e58:	str	r4, [sp, #4]
   26e5c:	str	r5, [sp, #8]
   26e60:	bl	2671c <flatcc_builder_create_table@@Base>
   26e64:	str	r0, [sp, #28]
   26e68:	movw	r1, #0
   26e6c:	cmp	r1, r0
   26e70:	bne	26e80 <flatcc_builder_end_table@@Base+0x1a0>
   26e74:	movw	r0, #0
   26e78:	str	r0, [fp, #-12]
   26e7c:	b	26ef8 <flatcc_builder_end_table@@Base+0x218>
   26e80:	ldr	r0, [fp, #-16]
   26e84:	ldr	r0, [r0, #32]
   26e88:	ldr	r0, [r0, #24]
   26e8c:	ldr	r1, [fp, #-16]
   26e90:	str	r0, [r1, #12]
   26e94:	ldr	r0, [fp, #-16]
   26e98:	ldr	r0, [r0, #32]
   26e9c:	ldrh	r0, [r0, #28]
   26ea0:	ldr	r1, [fp, #-16]
   26ea4:	strh	r0, [r1, #8]
   26ea8:	ldr	r0, [fp, #-16]
   26eac:	ldr	r0, [r0, #52]	; 0x34
   26eb0:	ldr	r1, [fp, #-16]
   26eb4:	ldr	r1, [r1, #32]
   26eb8:	ldr	r1, [r1, #16]
   26ebc:	add	r0, r0, r1
   26ec0:	ldr	r1, [fp, #-16]
   26ec4:	str	r0, [r1, #4]
   26ec8:	ldr	r0, [fp, #-16]
   26ecc:	ldr	r0, [r0, #76]	; 0x4c
   26ed0:	ldr	r1, [fp, #-16]
   26ed4:	ldr	r1, [r1, #32]
   26ed8:	ldr	r1, [r1, #20]
   26edc:	add	r0, r0, r1
   26ee0:	ldr	r1, [fp, #-16]
   26ee4:	str	r0, [r1]
   26ee8:	ldr	r0, [fp, #-16]
   26eec:	bl	24de8 <flatcc_builder_end_buffer@@Base+0x170>
   26ef0:	ldr	r0, [sp, #28]
   26ef4:	str	r0, [fp, #-12]
   26ef8:	ldr	r0, [fp, #-12]
   26efc:	sub	sp, fp, #8
   26f00:	pop	{r4, r5, fp, pc}
   26f04:	andeq	sl, r0, r6, lsr #31
   26f08:	andeq	sl, r0, r2, ror r7
   26f0c:	strheq	fp, [r0], -lr
   26f10:			; <UNDEFINED> instruction: 0x9e3779b1

00026f14 <flatcc_builder_create_vector@@Base>:
   26f14:	push	{fp, lr}
   26f18:	mov	fp, sp
   26f1c:	sub	sp, sp, #112	; 0x70
   26f20:	ldr	ip, [fp, #12]
   26f24:	ldr	lr, [fp, #8]
   26f28:	str	r0, [fp, #-8]
   26f2c:	str	r1, [fp, #-12]
   26f30:	str	r2, [fp, #-16]
   26f34:	str	r3, [fp, #-20]	; 0xffffffec
   26f38:	strh	lr, [fp, #-22]	; 0xffffffea
   26f3c:	ldr	r0, [fp, #-16]
   26f40:	ldr	r1, [fp, #12]
   26f44:	cmp	r0, r1
   26f48:	str	ip, [sp]
   26f4c:	bls	26f90 <flatcc_builder_create_vector@@Base+0x7c>
   26f50:	ldr	r0, [fp, #-16]
   26f54:	ldr	r1, [fp, #12]
   26f58:	cmp	r0, r1
   26f5c:	bhi	26f64 <flatcc_builder_create_vector@@Base+0x50>
   26f60:	b	26f84 <flatcc_builder_create_vector@@Base+0x70>
   26f64:	ldr	r0, [pc, #364]	; 270d8 <flatcc_builder_create_vector@@Base+0x1c4>
   26f68:	add	r0, pc, r0
   26f6c:	ldr	r1, [pc, #360]	; 270dc <flatcc_builder_create_vector@@Base+0x1c8>
   26f70:	add	r1, pc, r1
   26f74:	ldr	r2, [pc, #356]	; 270e0 <flatcc_builder_create_vector@@Base+0x1cc>
   26f78:	add	r3, pc, r2
   26f7c:	movw	r2, #1365	; 0x555
   26f80:	bl	12b80 <__assert_fail@plt>
   26f84:	movw	r0, #0
   26f88:	str	r0, [fp, #-4]
   26f8c:	b	270cc <flatcc_builder_create_vector@@Base+0x1b8>
   26f90:	sub	r0, fp, #22
   26f94:	mov	r1, #4
   26f98:	bl	25ca0 <flatcc_builder_start_vector@@Base+0xac>
   26f9c:	ldr	r0, [fp, #-8]
   26fa0:	ldrh	r1, [fp, #-22]	; 0xffffffea
   26fa4:	bl	247b4 <flatcc_builder_create_buffer@@Base+0x3a8>
   26fa8:	ldr	r0, [fp, #-16]
   26fac:	ldr	r1, [fp, #-20]	; 0xffffffec
   26fb0:	mul	r0, r0, r1
   26fb4:	str	r0, [fp, #-28]	; 0xffffffe4
   26fb8:	ldr	r0, [fp, #-16]
   26fbc:	bl	242d4 <flatcc_builder_embed_buffer@@Base+0x388>
   26fc0:	str	r0, [fp, #-36]	; 0xffffffdc
   26fc4:	ldr	r0, [fp, #-8]
   26fc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26fcc:	ldrh	r2, [fp, #-22]	; 0xffffffea
   26fd0:	bl	242a0 <flatcc_builder_embed_buffer@@Base+0x354>
   26fd4:	str	r0, [fp, #-32]	; 0xffffffe0
   26fd8:	mov	r0, #0
   26fdc:	str	r0, [sp, #4]
   26fe0:	str	r0, [sp, #8]
   26fe4:	ldr	r0, [sp, #4]
   26fe8:	add	r0, r0, #4
   26fec:	str	r0, [sp, #4]
   26ff0:	add	r0, sp, #4
   26ff4:	add	r0, r0, #8
   26ff8:	ldr	r1, [sp, #8]
   26ffc:	sub	r2, fp, #36	; 0x24
   27000:	str	r2, [r0, r1, lsl #3]
   27004:	ldr	r1, [sp, #8]
   27008:	add	r0, r0, r1, lsl #3
   2700c:	movw	r1, #4
   27010:	str	r1, [r0, #4]
   27014:	ldr	r0, [sp, #8]
   27018:	add	r0, r0, #1
   2701c:	str	r0, [sp, #8]
   27020:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27024:	cmp	r0, #0
   27028:	bls	2706c <flatcc_builder_create_vector@@Base+0x158>
   2702c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27030:	ldr	r1, [sp, #4]
   27034:	add	r0, r1, r0
   27038:	str	r0, [sp, #4]
   2703c:	ldr	r0, [fp, #-12]
   27040:	add	r1, sp, #4
   27044:	add	r1, r1, #8
   27048:	ldr	r2, [sp, #8]
   2704c:	str	r0, [r1, r2, lsl #3]
   27050:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27054:	ldr	r2, [sp, #8]
   27058:	add	r1, r1, r2, lsl #3
   2705c:	str	r0, [r1, #4]
   27060:	ldr	r0, [sp, #8]
   27064:	add	r0, r0, #1
   27068:	str	r0, [sp, #8]
   2706c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27070:	cmp	r0, #0
   27074:	bls	270bc <flatcc_builder_create_vector@@Base+0x1a8>
   27078:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2707c:	ldr	r1, [sp, #4]
   27080:	add	r0, r1, r0
   27084:	str	r0, [sp, #4]
   27088:	add	r0, sp, #4
   2708c:	add	r0, r0, #8
   27090:	ldr	r1, [sp, #8]
   27094:	ldr	r2, [pc, #72]	; 270e4 <flatcc_builder_create_vector@@Base+0x1d0>
   27098:	ldr	r2, [pc, r2]
   2709c:	str	r2, [r0, r1, lsl #3]
   270a0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   270a4:	ldr	r2, [sp, #8]
   270a8:	add	r0, r0, r2, lsl #3
   270ac:	str	r1, [r0, #4]
   270b0:	ldr	r0, [sp, #8]
   270b4:	add	r0, r0, #1
   270b8:	str	r0, [sp, #8]
   270bc:	ldr	r0, [fp, #-8]
   270c0:	add	r1, sp, #4
   270c4:	bl	242e8 <flatcc_builder_embed_buffer@@Base+0x39c>
   270c8:	str	r0, [fp, #-4]
   270cc:	ldr	r0, [fp, #-4]
   270d0:	mov	sp, fp
   270d4:	pop	{fp, pc}
   270d8:			; <UNDEFINED> instruction: 0x0000aeb4
   270dc:	andeq	sl, r0, r6, lsl r5
   270e0:			; <UNDEFINED> instruction: 0x0000aeb7
   270e4:	ldrdeq	ip, [r1], -r0

000270e8 <flatcc_builder_end_vector@@Base>:
   270e8:	push	{fp, lr}
   270ec:	mov	fp, sp
   270f0:	sub	sp, sp, #24
   270f4:	str	r0, [fp, #-8]
   270f8:	ldr	r0, [fp, #-8]
   270fc:	ldr	r0, [r0, #32]
   27100:	ldrh	r0, [r0, #14]
   27104:	cmp	r0, #4
   27108:	bne	27110 <flatcc_builder_end_vector@@Base+0x28>
   2710c:	b	27130 <flatcc_builder_end_vector@@Base+0x48>
   27110:	ldr	r0, [pc, #152]	; 271b0 <flatcc_builder_end_vector@@Base+0xc8>
   27114:	add	r0, pc, r0
   27118:	ldr	r1, [pc, #148]	; 271b4 <flatcc_builder_end_vector@@Base+0xcc>
   2711c:	add	r1, pc, r1
   27120:	ldr	r2, [pc, #144]	; 271b8 <flatcc_builder_end_vector@@Base+0xd0>
   27124:	add	r3, pc, r2
   27128:	movw	r2, #1400	; 0x578
   2712c:	bl	12b80 <__assert_fail@plt>
   27130:	ldr	r0, [fp, #-8]
   27134:	ldr	r1, [fp, #-8]
   27138:	ldr	r1, [r1, #16]
   2713c:	ldr	r2, [fp, #-8]
   27140:	ldr	r2, [r2, #32]
   27144:	ldr	r2, [r2, #20]
   27148:	ldr	r3, [fp, #-8]
   2714c:	ldr	r3, [r3, #32]
   27150:	ldr	r3, [r3, #16]
   27154:	ldr	ip, [fp, #-8]
   27158:	ldrh	ip, [ip, #130]	; 0x82
   2715c:	ldr	lr, [fp, #-8]
   27160:	ldr	lr, [lr, #32]
   27164:	ldr	lr, [lr, #24]
   27168:	uxth	ip, ip
   2716c:	str	ip, [sp]
   27170:	str	lr, [sp, #4]
   27174:	bl	26f14 <flatcc_builder_create_vector@@Base>
   27178:	str	r0, [sp, #12]
   2717c:	movw	r1, #0
   27180:	cmp	r1, r0
   27184:	bne	27194 <flatcc_builder_end_vector@@Base+0xac>
   27188:	movw	r0, #0
   2718c:	str	r0, [fp, #-4]
   27190:	b	271a4 <flatcc_builder_end_vector@@Base+0xbc>
   27194:	ldr	r0, [fp, #-8]
   27198:	bl	24de8 <flatcc_builder_end_buffer@@Base+0x170>
   2719c:	ldr	r0, [sp, #12]
   271a0:	str	r0, [fp, #-4]
   271a4:	ldr	r0, [fp, #-4]
   271a8:	mov	sp, fp
   271ac:	pop	{fp, pc}
   271b0:	andeq	sl, r0, ip, lsr #13
   271b4:	andeq	sl, r0, sl, ror #6
   271b8:	andeq	sl, r0, r1, lsl #27

000271bc <flatcc_builder_vector_count@@Base>:
   271bc:	sub	sp, sp, #4
   271c0:	str	r0, [sp]
   271c4:	ldr	r0, [sp]
   271c8:	ldr	r0, [r0, #32]
   271cc:	ldr	r0, [r0, #20]
   271d0:	add	sp, sp, #4
   271d4:	bx	lr

000271d8 <flatcc_builder_vector_edit@@Base>:
   271d8:	sub	sp, sp, #4
   271dc:	str	r0, [sp]
   271e0:	ldr	r0, [sp]
   271e4:	ldr	r0, [r0, #16]
   271e8:	add	sp, sp, #4
   271ec:	bx	lr

000271f0 <flatcc_builder_create_offset_vector_direct@@Base>:
   271f0:	push	{fp, lr}
   271f4:	mov	fp, sp
   271f8:	sub	sp, sp, #16
   271fc:	str	r0, [fp, #-4]
   27200:	str	r1, [sp, #8]
   27204:	str	r2, [sp, #4]
   27208:	ldr	r0, [fp, #-4]
   2720c:	ldr	r1, [sp, #8]
   27210:	ldr	r2, [sp, #4]
   27214:	movw	r3, #0
   27218:	bl	27224 <flatcc_builder_create_offset_vector_direct@@Base+0x34>
   2721c:	mov	sp, fp
   27220:	pop	{fp, pc}
   27224:	push	{fp, lr}
   27228:	mov	fp, sp
   2722c:	sub	sp, sp, #120	; 0x78
   27230:	ldr	ip, [pc, #696]	; 274f0 <flatcc_builder_create_offset_vector_direct@@Base+0x300>
   27234:	str	r0, [fp, #-8]
   27238:	str	r1, [fp, #-12]
   2723c:	str	r2, [fp, #-16]
   27240:	str	r3, [fp, #-20]	; 0xffffffec
   27244:	ldr	r0, [fp, #-16]
   27248:	cmp	r0, ip
   2724c:	bls	2725c <flatcc_builder_create_offset_vector_direct@@Base+0x6c>
   27250:	movw	r0, #0
   27254:	str	r0, [fp, #-4]
   27258:	b	274e4 <flatcc_builder_create_offset_vector_direct@@Base+0x2f4>
   2725c:	ldr	r0, [fp, #-8]
   27260:	mov	r1, #4
   27264:	str	r1, [sp]
   27268:	bl	247b4 <flatcc_builder_create_buffer@@Base+0x3a8>
   2726c:	ldr	r0, [fp, #-16]
   27270:	lsl	r0, r0, #2
   27274:	str	r0, [fp, #-24]	; 0xffffffe8
   27278:	ldr	r0, [fp, #-16]
   2727c:	bl	242d4 <flatcc_builder_embed_buffer@@Base+0x388>
   27280:	str	r0, [fp, #-32]	; 0xffffffe0
   27284:	ldr	r0, [fp, #-8]
   27288:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2728c:	ldr	r2, [sp]
   27290:	bl	242a0 <flatcc_builder_embed_buffer@@Base+0x354>
   27294:	str	r0, [fp, #-28]	; 0xffffffe4
   27298:	mov	r0, #0
   2729c:	str	r0, [sp, #4]
   272a0:	str	r0, [sp, #8]
   272a4:	ldr	r0, [sp, #4]
   272a8:	add	r0, r0, #4
   272ac:	str	r0, [sp, #4]
   272b0:	add	r0, sp, #4
   272b4:	add	r0, r0, #8
   272b8:	ldr	r1, [sp, #8]
   272bc:	sub	r2, fp, #32
   272c0:	str	r2, [r0, r1, lsl #3]
   272c4:	ldr	r1, [sp, #8]
   272c8:	add	r0, r0, r1, lsl #3
   272cc:	movw	r1, #4
   272d0:	str	r1, [r0, #4]
   272d4:	ldr	r0, [sp, #8]
   272d8:	add	r0, r0, #1
   272dc:	str	r0, [sp, #8]
   272e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   272e4:	cmp	r0, #0
   272e8:	bls	2732c <flatcc_builder_create_offset_vector_direct@@Base+0x13c>
   272ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   272f0:	ldr	r1, [sp, #4]
   272f4:	add	r0, r1, r0
   272f8:	str	r0, [sp, #4]
   272fc:	ldr	r0, [fp, #-12]
   27300:	add	r1, sp, #4
   27304:	add	r1, r1, #8
   27308:	ldr	r2, [sp, #8]
   2730c:	str	r0, [r1, r2, lsl #3]
   27310:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27314:	ldr	r2, [sp, #8]
   27318:	add	r1, r1, r2, lsl #3
   2731c:	str	r0, [r1, #4]
   27320:	ldr	r0, [sp, #8]
   27324:	add	r0, r0, #1
   27328:	str	r0, [sp, #8]
   2732c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27330:	cmp	r0, #0
   27334:	bls	2737c <flatcc_builder_create_offset_vector_direct@@Base+0x18c>
   27338:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2733c:	ldr	r1, [sp, #4]
   27340:	add	r0, r1, r0
   27344:	str	r0, [sp, #4]
   27348:	add	r0, sp, #4
   2734c:	add	r0, r0, #8
   27350:	ldr	r1, [sp, #8]
   27354:	ldr	r2, [pc, #444]	; 27518 <flatcc_builder_create_offset_vector_direct@@Base+0x328>
   27358:	ldr	r2, [pc, r2]
   2735c:	str	r2, [r0, r1, lsl #3]
   27360:	ldr	r1, [fp, #-28]	; 0xffffffe4
   27364:	ldr	r2, [sp, #8]
   27368:	add	r0, r0, r2, lsl #3
   2736c:	str	r1, [r0, #4]
   27370:	ldr	r0, [sp, #8]
   27374:	add	r0, r0, #1
   27378:	str	r0, [sp, #8]
   2737c:	ldr	r0, [fp, #-8]
   27380:	ldr	r0, [r0, #136]	; 0x88
   27384:	ldr	r1, [sp, #4]
   27388:	sub	r0, r0, r1
   2738c:	str	r0, [fp, #-36]	; 0xffffffdc
   27390:	movw	r0, #0
   27394:	str	r0, [fp, #-44]	; 0xffffffd4
   27398:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2739c:	ldr	r1, [fp, #-16]
   273a0:	cmp	r0, r1
   273a4:	bcs	274d4 <flatcc_builder_create_offset_vector_direct@@Base+0x2e4>
   273a8:	ldr	r0, [fp, #-12]
   273ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   273b0:	add	r0, r0, r1, lsl #2
   273b4:	ldr	r0, [r0]
   273b8:	cmp	r0, #0
   273bc:	beq	2744c <flatcc_builder_create_offset_vector_direct@@Base+0x25c>
   273c0:	ldr	r0, [fp, #-12]
   273c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   273c8:	ldr	r0, [r0, r1, lsl #2]
   273cc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   273d0:	sub	r0, r0, r2
   273d4:	sub	r0, r0, r1, lsl #2
   273d8:	sub	r0, r0, #4
   273dc:	str	r0, [fp, #-40]	; 0xffffffd8
   273e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   273e4:	bl	242d4 <flatcc_builder_embed_buffer@@Base+0x388>
   273e8:	ldr	r1, [fp, #-12]
   273ec:	ldr	r2, [fp, #-44]	; 0xffffffd4
   273f0:	add	r1, r1, r2, lsl #2
   273f4:	str	r0, [r1]
   273f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   273fc:	movw	r1, #0
   27400:	cmp	r0, r1
   27404:	beq	27448 <flatcc_builder_create_offset_vector_direct@@Base+0x258>
   27408:	ldr	r0, [fp, #-20]	; 0xffffffec
   2740c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   27410:	add	r0, r0, r1
   27414:	ldrb	r0, [r0]
   27418:	cmp	r0, #0
   2741c:	beq	27424 <flatcc_builder_create_offset_vector_direct@@Base+0x234>
   27420:	b	27444 <flatcc_builder_create_offset_vector_direct@@Base+0x254>
   27424:	ldr	r0, [pc, #224]	; 2750c <flatcc_builder_create_offset_vector_direct@@Base+0x31c>
   27428:	add	r0, pc, r0
   2742c:	ldr	r1, [pc, #220]	; 27510 <flatcc_builder_create_offset_vector_direct@@Base+0x320>
   27430:	add	r1, pc, r1
   27434:	ldr	r2, [pc, #216]	; 27514 <flatcc_builder_create_offset_vector_direct@@Base+0x324>
   27438:	add	r3, pc, r2
   2743c:	movw	r2, #1457	; 0x5b1
   27440:	bl	12b80 <__assert_fail@plt>
   27444:	b	27448 <flatcc_builder_create_offset_vector_direct@@Base+0x258>
   27448:	b	274c0 <flatcc_builder_create_offset_vector_direct@@Base+0x2d0>
   2744c:	ldr	r0, [fp, #-20]	; 0xffffffec
   27450:	movw	r1, #0
   27454:	cmp	r0, r1
   27458:	beq	2749c <flatcc_builder_create_offset_vector_direct@@Base+0x2ac>
   2745c:	ldr	r0, [fp, #-20]	; 0xffffffec
   27460:	ldr	r1, [fp, #-44]	; 0xffffffd4
   27464:	add	r0, r0, r1
   27468:	ldrb	r0, [r0]
   2746c:	cmp	r0, #0
   27470:	bne	27478 <flatcc_builder_create_offset_vector_direct@@Base+0x288>
   27474:	b	27498 <flatcc_builder_create_offset_vector_direct@@Base+0x2a8>
   27478:	ldr	r0, [pc, #128]	; 27500 <flatcc_builder_create_offset_vector_direct@@Base+0x310>
   2747c:	add	r0, pc, r0
   27480:	ldr	r1, [pc, #124]	; 27504 <flatcc_builder_create_offset_vector_direct@@Base+0x314>
   27484:	add	r1, pc, r1
   27488:	ldr	r2, [pc, #120]	; 27508 <flatcc_builder_create_offset_vector_direct@@Base+0x318>
   2748c:	add	r3, pc, r2
   27490:	movw	r2, #1461	; 0x5b5
   27494:	bl	12b80 <__assert_fail@plt>
   27498:	b	274bc <flatcc_builder_create_offset_vector_direct@@Base+0x2cc>
   2749c:	ldr	r0, [pc, #80]	; 274f4 <flatcc_builder_create_offset_vector_direct@@Base+0x304>
   274a0:	add	r0, pc, r0
   274a4:	ldr	r1, [pc, #76]	; 274f8 <flatcc_builder_create_offset_vector_direct@@Base+0x308>
   274a8:	add	r1, pc, r1
   274ac:	ldr	r2, [pc, #72]	; 274fc <flatcc_builder_create_offset_vector_direct@@Base+0x30c>
   274b0:	add	r3, pc, r2
   274b4:	movw	r2, #1463	; 0x5b7
   274b8:	bl	12b80 <__assert_fail@plt>
   274bc:	b	274c0 <flatcc_builder_create_offset_vector_direct@@Base+0x2d0>
   274c0:	b	274c4 <flatcc_builder_create_offset_vector_direct@@Base+0x2d4>
   274c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   274c8:	add	r0, r0, #1
   274cc:	str	r0, [fp, #-44]	; 0xffffffd4
   274d0:	b	27398 <flatcc_builder_create_offset_vector_direct@@Base+0x1a8>
   274d4:	ldr	r0, [fp, #-8]
   274d8:	add	r1, sp, #4
   274dc:	bl	242e8 <flatcc_builder_embed_buffer@@Base+0x39c>
   274e0:	str	r0, [fp, #-4]
   274e4:	ldr	r0, [fp, #-4]
   274e8:	mov	sp, fp
   274ec:	pop	{fp, pc}
   274f0:	svccc	0x00ffffff
   274f4:	andeq	fp, r0, r3, lsr #3
   274f8:	ldrdeq	r9, [r0], -lr
   274fc:	muleq	r0, r5, r1
   27500:	andeq	fp, r0, ip, asr #4
   27504:	andeq	sl, r0, r2
   27508:			; <UNDEFINED> instruction: 0x0000b1b9
   2750c:	andeq	fp, r0, pc, lsl #4
   27510:	andeq	sl, r0, r6, asr r0
   27514:	andeq	fp, r0, sp, lsl #4
   27518:	andeq	ip, r1, r0, lsl sp

0002751c <flatcc_builder_end_offset_vector_for_unions@@Base>:
   2751c:	push	{fp, lr}
   27520:	mov	fp, sp
   27524:	sub	sp, sp, #16
   27528:	str	r0, [sp, #8]
   2752c:	str	r1, [sp, #4]
   27530:	ldr	r0, [sp, #8]
   27534:	ldr	r0, [r0, #32]
   27538:	ldrh	r0, [r0, #14]
   2753c:	cmp	r0, #5
   27540:	bne	27548 <flatcc_builder_end_offset_vector_for_unions@@Base+0x2c>
   27544:	b	27568 <flatcc_builder_end_offset_vector_for_unions@@Base+0x4c>
   27548:	ldr	r0, [pc, #112]	; 275c0 <flatcc_builder_end_offset_vector_for_unions@@Base+0xa4>
   2754c:	add	r0, pc, r0
   27550:	ldr	r1, [pc, #108]	; 275c4 <flatcc_builder_end_offset_vector_for_unions@@Base+0xa8>
   27554:	add	r1, pc, r1
   27558:	ldr	r2, [pc, #104]	; 275c8 <flatcc_builder_end_offset_vector_for_unions@@Base+0xac>
   2755c:	add	r3, pc, r2
   27560:	movw	r2, #1493	; 0x5d5
   27564:	bl	12b80 <__assert_fail@plt>
   27568:	ldr	r0, [sp, #8]
   2756c:	ldr	r1, [sp, #8]
   27570:	ldr	r1, [r1, #16]
   27574:	ldr	r2, [sp, #8]
   27578:	ldr	r2, [r2, #32]
   2757c:	ldr	r2, [r2, #20]
   27580:	ldr	r3, [sp, #4]
   27584:	bl	27224 <flatcc_builder_create_offset_vector_direct@@Base+0x34>
   27588:	str	r0, [sp]
   2758c:	movw	r1, #0
   27590:	cmp	r1, r0
   27594:	bne	275a4 <flatcc_builder_end_offset_vector_for_unions@@Base+0x88>
   27598:	movw	r0, #0
   2759c:	str	r0, [fp, #-4]
   275a0:	b	275b4 <flatcc_builder_end_offset_vector_for_unions@@Base+0x98>
   275a4:	ldr	r0, [sp, #8]
   275a8:	bl	24de8 <flatcc_builder_end_buffer@@Base+0x170>
   275ac:	ldr	r0, [sp]
   275b0:	str	r0, [fp, #-4]
   275b4:	ldr	r0, [fp, #-4]
   275b8:	mov	sp, fp
   275bc:	pop	{fp, pc}
   275c0:	andeq	sl, r0, sp, ror #6
   275c4:	andeq	r9, r0, r2, lsr pc
   275c8:	ldrdeq	sl, [r0], -r6

000275cc <flatcc_builder_offset_vector_edit@@Base>:
   275cc:	sub	sp, sp, #4
   275d0:	str	r0, [sp]
   275d4:	ldr	r0, [sp]
   275d8:	ldr	r0, [r0, #16]
   275dc:	add	sp, sp, #4
   275e0:	bx	lr

000275e4 <flatcc_builder_offset_vector_count@@Base>:
   275e4:	sub	sp, sp, #4
   275e8:	str	r0, [sp]
   275ec:	ldr	r0, [sp]
   275f0:	ldr	r0, [r0, #32]
   275f4:	ldr	r0, [r0, #20]
   275f8:	add	sp, sp, #4
   275fc:	bx	lr

00027600 <flatcc_builder_table_add_union@@Base>:
   27600:	push	{fp, lr}
   27604:	mov	fp, sp
   27608:	sub	sp, sp, #32
   2760c:	str	r2, [fp, #-12]
   27610:	str	r3, [fp, #-8]
   27614:	str	r0, [sp, #16]
   27618:	str	r1, [sp, #12]
   2761c:	ldr	r0, [sp, #16]
   27620:	ldr	r0, [r0, #32]
   27624:	ldrh	r0, [r0, #14]
   27628:	cmp	r0, #3
   2762c:	bne	27634 <flatcc_builder_table_add_union@@Base+0x34>
   27630:	b	27654 <flatcc_builder_table_add_union@@Base+0x54>
   27634:	ldr	r0, [pc, #388]	; 277c0 <flatcc_builder_table_add_union@@Base+0x1c0>
   27638:	add	r0, pc, r0
   2763c:	ldr	r1, [pc, #384]	; 277c4 <flatcc_builder_table_add_union@@Base+0x1c4>
   27640:	add	r1, pc, r1
   27644:	ldr	r2, [pc, #380]	; 277c8 <flatcc_builder_table_add_union@@Base+0x1c8>
   27648:	add	r3, pc, r2
   2764c:	movw	r2, #1518	; 0x5ee
   27650:	bl	12b80 <__assert_fail@plt>
   27654:	ldrb	r0, [fp, #-12]
   27658:	cmp	r0, #0
   2765c:	bne	276b4 <flatcc_builder_table_add_union@@Base+0xb4>
   27660:	ldr	r0, [fp, #-8]
   27664:	cmp	r0, #0
   27668:	beq	276b4 <flatcc_builder_table_add_union@@Base+0xb4>
   2766c:	ldrb	r0, [fp, #-12]
   27670:	cmp	r0, #0
   27674:	bne	27684 <flatcc_builder_table_add_union@@Base+0x84>
   27678:	ldr	r0, [fp, #-8]
   2767c:	cmp	r0, #0
   27680:	bne	27688 <flatcc_builder_table_add_union@@Base+0x88>
   27684:	b	276a8 <flatcc_builder_table_add_union@@Base+0xa8>
   27688:	ldr	r0, [pc, #316]	; 277cc <flatcc_builder_table_add_union@@Base+0x1cc>
   2768c:	add	r0, pc, r0
   27690:	ldr	r1, [pc, #312]	; 277d0 <flatcc_builder_table_add_union@@Base+0x1d0>
   27694:	add	r1, pc, r1
   27698:	ldr	r2, [pc, #308]	; 277d4 <flatcc_builder_table_add_union@@Base+0x1d4>
   2769c:	add	r3, pc, r2
   276a0:	movw	r2, #1519	; 0x5ef
   276a4:	bl	12b80 <__assert_fail@plt>
   276a8:	mvn	r0, #0
   276ac:	str	r0, [fp, #-4]
   276b0:	b	277b4 <flatcc_builder_table_add_union@@Base+0x1b4>
   276b4:	ldr	r0, [fp, #-8]
   276b8:	cmp	r0, #0
   276bc:	beq	2772c <flatcc_builder_table_add_union@@Base+0x12c>
   276c0:	ldr	r0, [sp, #16]
   276c4:	ldr	r1, [sp, #12]
   276c8:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   276cc:	str	r0, [sp, #8]
   276d0:	ldr	r0, [sp, #8]
   276d4:	movw	r1, #0
   276d8:	cmp	r0, r1
   276dc:	bne	27720 <flatcc_builder_table_add_union@@Base+0x120>
   276e0:	ldr	r0, [sp, #8]
   276e4:	movw	r1, #0
   276e8:	cmp	r0, r1
   276ec:	beq	276f4 <flatcc_builder_table_add_union@@Base+0xf4>
   276f0:	b	27714 <flatcc_builder_table_add_union@@Base+0x114>
   276f4:	ldr	r0, [pc, #220]	; 277d8 <flatcc_builder_table_add_union@@Base+0x1d8>
   276f8:	add	r0, pc, r0
   276fc:	ldr	r1, [pc, #216]	; 277dc <flatcc_builder_table_add_union@@Base+0x1dc>
   27700:	add	r1, pc, r1
   27704:	ldr	r2, [pc, #212]	; 277e0 <flatcc_builder_table_add_union@@Base+0x1e0>
   27708:	add	r3, pc, r2
   2770c:	movw	r2, #1522	; 0x5f2
   27710:	bl	12b80 <__assert_fail@plt>
   27714:	mvn	r0, #0
   27718:	str	r0, [fp, #-4]
   2771c:	b	277b4 <flatcc_builder_table_add_union@@Base+0x1b4>
   27720:	ldr	r0, [fp, #-8]
   27724:	ldr	r1, [sp, #8]
   27728:	str	r0, [r1]
   2772c:	ldr	r0, [sp, #16]
   27730:	ldr	r1, [sp, #12]
   27734:	sub	r1, r1, #1
   27738:	movw	r2, #1
   2773c:	movw	r3, #1
   27740:	uxth	r3, r3
   27744:	bl	27920 <flatcc_builder_table_add@@Base>
   27748:	str	r0, [sp, #4]
   2774c:	ldr	r0, [sp, #4]
   27750:	movw	r1, #0
   27754:	cmp	r0, r1
   27758:	bne	2779c <flatcc_builder_table_add_union@@Base+0x19c>
   2775c:	ldr	r0, [sp, #4]
   27760:	movw	r1, #0
   27764:	cmp	r0, r1
   27768:	beq	27770 <flatcc_builder_table_add_union@@Base+0x170>
   2776c:	b	27790 <flatcc_builder_table_add_union@@Base+0x190>
   27770:	ldr	r0, [pc, #108]	; 277e4 <flatcc_builder_table_add_union@@Base+0x1e4>
   27774:	add	r0, pc, r0
   27778:	ldr	r1, [pc, #104]	; 277e8 <flatcc_builder_table_add_union@@Base+0x1e8>
   2777c:	add	r1, pc, r1
   27780:	ldr	r2, [pc, #100]	; 277ec <flatcc_builder_table_add_union@@Base+0x1ec>
   27784:	add	r3, pc, r2
   27788:	movw	r2, #1526	; 0x5f6
   2778c:	bl	12b80 <__assert_fail@plt>
   27790:	mvn	r0, #0
   27794:	str	r0, [fp, #-4]
   27798:	b	277b4 <flatcc_builder_table_add_union@@Base+0x1b4>
   2779c:	ldrb	r0, [fp, #-12]
   277a0:	bl	27a88 <flatcc_builder_table_add@@Base+0x168>
   277a4:	ldr	lr, [sp, #4]
   277a8:	strb	r0, [lr]
   277ac:	movw	r0, #0
   277b0:	str	r0, [fp, #-4]
   277b4:	ldr	r0, [fp, #-4]
   277b8:	mov	sp, fp
   277bc:	pop	{fp, pc}
   277c0:	andeq	sl, r0, sl, ror r6
   277c4:	andeq	r9, r0, r6, asr #28
   277c8:	andeq	sl, r0, ip, asr r9
   277cc:	andeq	sl, r0, r0, ror r9
   277d0:	strdeq	r9, [r0], -r2
   277d4:	andeq	sl, r0, r8, lsl #18
   277d8:	andeq	sl, r0, r6, lsr #18
   277dc:	andeq	r9, r0, r6, lsl #27
   277e0:	muleq	r0, ip, r8
   277e4:			; <UNDEFINED> instruction: 0x0000a8b4
   277e8:	andeq	r9, r0, sl, lsl #26
   277ec:	andeq	sl, r0, r0, lsr #16

000277f0 <flatcc_builder_table_add_offset@@Base>:
   277f0:	push	{fp, lr}
   277f4:	mov	fp, sp
   277f8:	sub	sp, sp, #8
   277fc:	str	r0, [sp, #4]
   27800:	str	r1, [sp]
   27804:	ldr	r0, [sp, #4]
   27808:	ldr	r0, [r0, #32]
   2780c:	ldrh	r0, [r0, #14]
   27810:	cmp	r0, #3
   27814:	bne	2781c <flatcc_builder_table_add_offset@@Base+0x2c>
   27818:	b	2783c <flatcc_builder_table_add_offset@@Base+0x4c>
   2781c:	ldr	r0, [pc, #212]	; 278f8 <flatcc_builder_table_add_offset@@Base+0x108>
   27820:	add	r0, pc, r0
   27824:	ldr	r1, [pc, #208]	; 278fc <flatcc_builder_table_add_offset@@Base+0x10c>
   27828:	add	r1, pc, r1
   2782c:	ldr	r2, [pc, #204]	; 27900 <flatcc_builder_table_add_offset@@Base+0x110>
   27830:	add	r3, pc, r2
   27834:	movw	r2, #1811	; 0x713
   27838:	bl	12b80 <__assert_fail@plt>
   2783c:	ldr	r0, [sp]
   27840:	cmp	r0, #0
   27844:	blt	2785c <flatcc_builder_table_add_offset@@Base+0x6c>
   27848:	ldr	r0, [sp]
   2784c:	movw	r1, #32764	; 0x7ffc
   27850:	cmp	r0, r1
   27854:	bgt	2785c <flatcc_builder_table_add_offset@@Base+0x6c>
   27858:	b	2787c <flatcc_builder_table_add_offset@@Base+0x8c>
   2785c:	ldr	r0, [pc, #160]	; 27904 <flatcc_builder_table_add_offset@@Base+0x114>
   27860:	add	r0, pc, r0
   27864:	ldr	r1, [pc, #156]	; 27908 <flatcc_builder_table_add_offset@@Base+0x118>
   27868:	add	r1, pc, r1
   2786c:	ldr	r2, [pc, #152]	; 2790c <flatcc_builder_table_add_offset@@Base+0x11c>
   27870:	add	r3, pc, r2
   27874:	movw	r2, #1812	; 0x714
   27878:	bl	12b80 <__assert_fail@plt>
   2787c:	ldr	r0, [sp, #4]
   27880:	ldr	r0, [r0, #4]
   27884:	ldr	r1, [sp]
   27888:	add	r0, r0, r1, lsl #1
   2788c:	ldrh	r0, [r0]
   27890:	cmp	r0, #0
   27894:	beq	278b8 <flatcc_builder_table_add_offset@@Base+0xc8>
   27898:	ldr	r0, [pc, #116]	; 27914 <flatcc_builder_table_add_offset@@Base+0x124>
   2789c:	add	r0, pc, r0
   278a0:	ldr	r1, [pc, #112]	; 27918 <flatcc_builder_table_add_offset@@Base+0x128>
   278a4:	add	r1, pc, r1
   278a8:	ldr	r2, [pc, #108]	; 2791c <flatcc_builder_table_add_offset@@Base+0x12c>
   278ac:	add	r3, pc, r2
   278b0:	movw	r2, #1819	; 0x71b
   278b4:	bl	12b80 <__assert_fail@plt>
   278b8:	ldr	r0, [pc, #80]	; 27910 <flatcc_builder_table_add_offset@@Base+0x120>
   278bc:	ldr	r1, [sp]
   278c0:	ldr	r2, [sp, #4]
   278c4:	ldr	r2, [r2, #12]
   278c8:	eor	r1, r1, r2
   278cc:	mul	r1, r1, r0
   278d0:	eor	r1, r1, #4
   278d4:	mul	r0, r1, r0
   278d8:	ldr	r1, [sp, #4]
   278dc:	str	r0, [r1, #12]
   278e0:	ldr	r0, [sp, #4]
   278e4:	ldr	r1, [sp]
   278e8:	uxth	r1, r1
   278ec:	bl	288b0 <flatcc_builder_table_add_copy@@Base+0x64>
   278f0:	mov	sp, fp
   278f4:	pop	{fp, pc}
   278f8:	muleq	r0, r2, r4
   278fc:	andeq	r9, r0, lr, asr ip
   27900:	andeq	sl, r0, r6, ror fp
   27904:	andeq	sl, r0, r6, asr #21
   27908:	andeq	r9, r0, lr, lsl ip
   2790c:	andeq	sl, r0, r6, lsr fp
   27910:			; <UNDEFINED> instruction: 0x9e3779b1
   27914:	andeq	sl, r0, r7, lsr #27
   27918:	andeq	r9, r0, r2, ror #23
   2791c:	strdeq	sl, [r0], -sl	; <UNPREDICTABLE>

00027920 <flatcc_builder_table_add@@Base>:
   27920:	push	{fp, lr}
   27924:	mov	fp, sp
   27928:	sub	sp, sp, #16
   2792c:	str	r0, [fp, #-4]
   27930:	str	r1, [sp, #8]
   27934:	str	r2, [sp, #4]
   27938:	strh	r3, [sp, #2]
   2793c:	ldr	r0, [fp, #-4]
   27940:	ldr	r0, [r0, #32]
   27944:	ldrh	r0, [r0, #14]
   27948:	cmp	r0, #3
   2794c:	bne	27954 <flatcc_builder_table_add@@Base+0x34>
   27950:	b	27974 <flatcc_builder_table_add@@Base+0x54>
   27954:	ldr	r0, [pc, #260]	; 27a60 <flatcc_builder_table_add@@Base+0x140>
   27958:	add	r0, pc, r0
   2795c:	ldr	r1, [pc, #256]	; 27a64 <flatcc_builder_table_add@@Base+0x144>
   27960:	add	r1, pc, r1
   27964:	ldr	r2, [pc, #252]	; 27a68 <flatcc_builder_table_add@@Base+0x148>
   27968:	add	r3, pc, r2
   2796c:	movw	r2, #1773	; 0x6ed
   27970:	bl	12b80 <__assert_fail@plt>
   27974:	ldr	r0, [sp, #8]
   27978:	cmp	r0, #0
   2797c:	blt	27994 <flatcc_builder_table_add@@Base+0x74>
   27980:	ldr	r0, [sp, #8]
   27984:	movw	r1, #32764	; 0x7ffc
   27988:	cmp	r0, r1
   2798c:	bgt	27994 <flatcc_builder_table_add@@Base+0x74>
   27990:	b	279b4 <flatcc_builder_table_add@@Base+0x94>
   27994:	ldr	r0, [pc, #208]	; 27a6c <flatcc_builder_table_add@@Base+0x14c>
   27998:	add	r0, pc, r0
   2799c:	ldr	r1, [pc, #204]	; 27a70 <flatcc_builder_table_add@@Base+0x150>
   279a0:	add	r1, pc, r1
   279a4:	ldr	r2, [pc, #200]	; 27a74 <flatcc_builder_table_add@@Base+0x154>
   279a8:	add	r3, pc, r2
   279ac:	movw	r2, #1774	; 0x6ee
   279b0:	bl	12b80 <__assert_fail@plt>
   279b4:	ldrh	r0, [sp, #2]
   279b8:	ldr	r1, [fp, #-4]
   279bc:	ldrh	r1, [r1, #130]	; 0x82
   279c0:	cmp	r0, r1
   279c4:	ble	279d4 <flatcc_builder_table_add@@Base+0xb4>
   279c8:	ldrh	r0, [sp, #2]
   279cc:	ldr	r1, [fp, #-4]
   279d0:	strh	r0, [r1, #130]	; 0x82
   279d4:	ldr	r0, [fp, #-4]
   279d8:	ldr	r0, [r0, #4]
   279dc:	ldr	r1, [sp, #8]
   279e0:	add	r0, r0, r1, lsl #1
   279e4:	ldrh	r0, [r0]
   279e8:	cmp	r0, #0
   279ec:	beq	27a10 <flatcc_builder_table_add@@Base+0xf0>
   279f0:	ldr	r0, [pc, #132]	; 27a7c <flatcc_builder_table_add@@Base+0x15c>
   279f4:	add	r0, pc, r0
   279f8:	ldr	r1, [pc, #128]	; 27a80 <flatcc_builder_table_add@@Base+0x160>
   279fc:	add	r1, pc, r1
   27a00:	ldr	r2, [pc, #124]	; 27a84 <flatcc_builder_table_add@@Base+0x164>
   27a04:	add	r3, pc, r2
   27a08:	movw	r2, #1784	; 0x6f8
   27a0c:	bl	12b80 <__assert_fail@plt>
   27a10:	ldr	r0, [pc, #96]	; 27a78 <flatcc_builder_table_add@@Base+0x158>
   27a14:	ldr	r1, [sp, #8]
   27a18:	ldr	r2, [fp, #-4]
   27a1c:	ldr	r2, [r2, #12]
   27a20:	eor	r1, r1, r2
   27a24:	mul	r1, r1, r0
   27a28:	ldr	r2, [sp, #4]
   27a2c:	eor	r1, r1, r2
   27a30:	mul	r0, r1, r0
   27a34:	ldr	r1, [fp, #-4]
   27a38:	str	r0, [r1, #12]
   27a3c:	ldr	r0, [fp, #-4]
   27a40:	ldr	r1, [sp, #4]
   27a44:	ldrh	r2, [sp, #2]
   27a48:	ldr	r3, [sp, #8]
   27a4c:	uxth	r2, r2
   27a50:	uxth	r3, r3
   27a54:	bl	286cc <flatcc_builder_string_len@@Base+0x1c>
   27a58:	mov	sp, fp
   27a5c:	pop	{fp, pc}
   27a60:	andeq	sl, r0, sl, asr r3
   27a64:	andeq	r9, r0, r6, lsr #22
   27a68:	andeq	sl, r0, r4, ror r9
   27a6c:	andeq	sl, r0, lr, lsl #19
   27a70:	andeq	r9, r0, r6, ror #21
   27a74:	andeq	sl, r0, r4, lsr r9
   27a78:			; <UNDEFINED> instruction: 0x9e3779b1
   27a7c:	andeq	sl, r0, pc, asr #24
   27a80:	andeq	r9, r0, sl, lsl #21
   27a84:	ldrdeq	sl, [r0], -r8
   27a88:	sub	sp, sp, #4
   27a8c:	strb	r0, [sp, #3]
   27a90:	ldrb	r0, [sp, #3]
   27a94:	add	sp, sp, #4
   27a98:	bx	lr

00027a9c <flatcc_builder_table_add_union_vector@@Base>:
   27a9c:	push	{fp, lr}
   27aa0:	mov	fp, sp
   27aa4:	sub	sp, sp, #24
   27aa8:	str	r2, [sp, #12]
   27aac:	str	r3, [sp, #16]
   27ab0:	str	r0, [sp, #8]
   27ab4:	str	r1, [sp, #4]
   27ab8:	ldr	r0, [sp, #8]
   27abc:	ldr	r0, [r0, #32]
   27ac0:	ldrh	r0, [r0, #14]
   27ac4:	cmp	r0, #3
   27ac8:	bne	27ad0 <flatcc_builder_table_add_union_vector@@Base+0x34>
   27acc:	b	27af0 <flatcc_builder_table_add_union_vector@@Base+0x54>
   27ad0:	ldr	r0, [pc, #420]	; 27c7c <flatcc_builder_table_add_union_vector@@Base+0x1e0>
   27ad4:	add	r0, pc, r0
   27ad8:	ldr	r1, [pc, #416]	; 27c80 <flatcc_builder_table_add_union_vector@@Base+0x1e4>
   27adc:	add	r1, pc, r1
   27ae0:	ldr	r2, [pc, #412]	; 27c84 <flatcc_builder_table_add_union_vector@@Base+0x1e8>
   27ae4:	add	r3, pc, r2
   27ae8:	movw	r2, #1536	; 0x600
   27aec:	bl	12b80 <__assert_fail@plt>
   27af0:	ldr	r0, [sp, #12]
   27af4:	cmp	r0, #0
   27af8:	movw	r0, #0
   27afc:	moveq	r0, #1
   27b00:	and	r0, r0, #1
   27b04:	ldr	r1, [sp, #16]
   27b08:	cmp	r1, #0
   27b0c:	movw	r1, #0
   27b10:	moveq	r1, #1
   27b14:	and	r1, r1, #1
   27b18:	cmp	r0, r1
   27b1c:	beq	27b80 <flatcc_builder_table_add_union_vector@@Base+0xe4>
   27b20:	ldr	r0, [sp, #12]
   27b24:	cmp	r0, #0
   27b28:	movw	r0, #0
   27b2c:	moveq	r0, #1
   27b30:	and	r0, r0, #1
   27b34:	ldr	r1, [sp, #16]
   27b38:	cmp	r1, #0
   27b3c:	movw	r1, #0
   27b40:	moveq	r1, #1
   27b44:	and	r1, r1, #1
   27b48:	cmp	r0, r1
   27b4c:	bne	27b54 <flatcc_builder_table_add_union_vector@@Base+0xb8>
   27b50:	b	27b74 <flatcc_builder_table_add_union_vector@@Base+0xd8>
   27b54:	ldr	r0, [pc, #300]	; 27c88 <flatcc_builder_table_add_union_vector@@Base+0x1ec>
   27b58:	add	r0, pc, r0
   27b5c:	ldr	r1, [pc, #296]	; 27c8c <flatcc_builder_table_add_union_vector@@Base+0x1f0>
   27b60:	add	r1, pc, r1
   27b64:	ldr	r2, [pc, #292]	; 27c90 <flatcc_builder_table_add_union_vector@@Base+0x1f4>
   27b68:	add	r3, pc, r2
   27b6c:	movw	r2, #1537	; 0x601
   27b70:	bl	12b80 <__assert_fail@plt>
   27b74:	mvn	r0, #0
   27b78:	str	r0, [fp, #-4]
   27b7c:	b	27c70 <flatcc_builder_table_add_union_vector@@Base+0x1d4>
   27b80:	ldr	r0, [sp, #12]
   27b84:	cmp	r0, #0
   27b88:	beq	27c68 <flatcc_builder_table_add_union_vector@@Base+0x1cc>
   27b8c:	ldr	r0, [sp, #8]
   27b90:	ldr	r1, [sp, #4]
   27b94:	sub	r1, r1, #1
   27b98:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   27b9c:	str	r0, [sp]
   27ba0:	ldr	r0, [sp]
   27ba4:	movw	r1, #0
   27ba8:	cmp	r0, r1
   27bac:	bne	27bf0 <flatcc_builder_table_add_union_vector@@Base+0x154>
   27bb0:	ldr	r0, [sp]
   27bb4:	movw	r1, #0
   27bb8:	cmp	r0, r1
   27bbc:	beq	27bc4 <flatcc_builder_table_add_union_vector@@Base+0x128>
   27bc0:	b	27be4 <flatcc_builder_table_add_union_vector@@Base+0x148>
   27bc4:	ldr	r0, [pc, #200]	; 27c94 <flatcc_builder_table_add_union_vector@@Base+0x1f8>
   27bc8:	add	r0, pc, r0
   27bcc:	ldr	r1, [pc, #196]	; 27c98 <flatcc_builder_table_add_union_vector@@Base+0x1fc>
   27bd0:	add	r1, pc, r1
   27bd4:	ldr	r2, [pc, #192]	; 27c9c <flatcc_builder_table_add_union_vector@@Base+0x200>
   27bd8:	add	r3, pc, r2
   27bdc:	movw	r2, #1540	; 0x604
   27be0:	bl	12b80 <__assert_fail@plt>
   27be4:	mvn	r0, #0
   27be8:	str	r0, [fp, #-4]
   27bec:	b	27c70 <flatcc_builder_table_add_union_vector@@Base+0x1d4>
   27bf0:	ldr	r0, [sp, #12]
   27bf4:	ldr	r1, [sp]
   27bf8:	str	r0, [r1]
   27bfc:	ldr	r0, [sp, #8]
   27c00:	ldr	r1, [sp, #4]
   27c04:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   27c08:	str	r0, [sp]
   27c0c:	ldr	r0, [sp]
   27c10:	movw	r1, #0
   27c14:	cmp	r0, r1
   27c18:	bne	27c5c <flatcc_builder_table_add_union_vector@@Base+0x1c0>
   27c1c:	ldr	r0, [sp]
   27c20:	movw	r1, #0
   27c24:	cmp	r0, r1
   27c28:	beq	27c30 <flatcc_builder_table_add_union_vector@@Base+0x194>
   27c2c:	b	27c50 <flatcc_builder_table_add_union_vector@@Base+0x1b4>
   27c30:	ldr	r0, [pc, #104]	; 27ca0 <flatcc_builder_table_add_union_vector@@Base+0x204>
   27c34:	add	r0, pc, r0
   27c38:	ldr	r1, [pc, #100]	; 27ca4 <flatcc_builder_table_add_union_vector@@Base+0x208>
   27c3c:	add	r1, pc, r1
   27c40:	ldr	r2, [pc, #96]	; 27ca8 <flatcc_builder_table_add_union_vector@@Base+0x20c>
   27c44:	add	r3, pc, r2
   27c48:	movw	r2, #1544	; 0x608
   27c4c:	bl	12b80 <__assert_fail@plt>
   27c50:	mvn	r0, #0
   27c54:	str	r0, [fp, #-4]
   27c58:	b	27c70 <flatcc_builder_table_add_union_vector@@Base+0x1d4>
   27c5c:	ldr	r0, [sp, #16]
   27c60:	ldr	r1, [sp]
   27c64:	str	r0, [r1]
   27c68:	movw	r0, #0
   27c6c:	str	r0, [fp, #-4]
   27c70:	ldr	r0, [fp, #-4]
   27c74:	mov	sp, fp
   27c78:	pop	{fp, pc}
   27c7c:	ldrdeq	sl, [r0], -lr
   27c80:	andeq	r9, r0, sl, lsr #19
   27c84:	andeq	sl, r0, r0, asr r5
   27c88:	andeq	sl, r0, pc, lsr r5
   27c8c:	andeq	r9, r0, r6, lsr #18
   27c90:	andeq	sl, r0, ip, asr #9
   27c94:	andeq	sl, r0, r6, asr r4
   27c98:			; <UNDEFINED> instruction: 0x000098b6
   27c9c:	andeq	sl, r0, ip, asr r4
   27ca0:	andeq	sl, r0, sl, ror #7
   27ca4:	andeq	r9, r0, sl, asr #16
   27ca8:	strdeq	sl, [r0], -r0

00027cac <flatcc_builder_create_union_vector@@Base>:
   27cac:	push	{fp, lr}
   27cb0:	mov	fp, sp
   27cb4:	sub	sp, sp, #48	; 0x30
   27cb8:	str	r1, [fp, #-4]
   27cbc:	str	r2, [fp, #-8]
   27cc0:	str	r3, [fp, #-12]
   27cc4:	mov	r1, r0
   27cc8:	str	r0, [sp, #12]
   27ccc:	mov	r0, r1
   27cd0:	movw	r1, #0
   27cd4:	and	r1, r1, #255	; 0xff
   27cd8:	movw	r2, #8
   27cdc:	bl	12b2c <memset@plt>
   27ce0:	ldr	r0, [fp, #-4]
   27ce4:	bl	25cd4 <flatcc_builder_start_offset_vector@@Base>
   27ce8:	cmp	r0, #0
   27cec:	beq	27cf4 <flatcc_builder_create_union_vector@@Base+0x48>
   27cf0:	b	27dd8 <flatcc_builder_create_union_vector@@Base+0x12c>
   27cf4:	ldr	r0, [fp, #-4]
   27cf8:	ldr	r1, [fp, #-12]
   27cfc:	bl	25468 <flatcc_builder_extend_offset_vector@@Base>
   27d00:	movw	r1, #0
   27d04:	cmp	r1, r0
   27d08:	bne	27d10 <flatcc_builder_create_union_vector@@Base+0x64>
   27d0c:	b	27dd8 <flatcc_builder_create_union_vector@@Base+0x12c>
   27d10:	ldr	r0, [fp, #-4]
   27d14:	ldr	r1, [fp, #-12]
   27d18:	mov	r2, r1
   27d1c:	str	r2, [sp, #8]
   27d20:	bl	24fa0 <flatcc_builder_start_struct@@Base+0xfc>
   27d24:	str	r0, [fp, #-16]
   27d28:	movw	r1, #0
   27d2c:	cmp	r1, r0
   27d30:	bne	27d38 <flatcc_builder_create_union_vector@@Base+0x8c>
   27d34:	b	27dd8 <flatcc_builder_create_union_vector@@Base+0x12c>
   27d38:	ldr	r0, [fp, #-4]
   27d3c:	bl	275cc <flatcc_builder_offset_vector_edit@@Base>
   27d40:	str	r0, [fp, #-20]	; 0xffffffec
   27d44:	movw	r0, #0
   27d48:	str	r0, [sp, #24]
   27d4c:	ldr	r0, [sp, #24]
   27d50:	ldr	r1, [fp, #-12]
   27d54:	cmp	r0, r1
   27d58:	bcs	27d9c <flatcc_builder_create_union_vector@@Base+0xf0>
   27d5c:	ldr	r0, [fp, #-8]
   27d60:	ldr	r1, [sp, #24]
   27d64:	ldrb	r0, [r0, r1, lsl #3]
   27d68:	ldr	r2, [fp, #-16]
   27d6c:	strb	r0, [r2, r1]
   27d70:	ldr	r0, [fp, #-8]
   27d74:	ldr	r1, [sp, #24]
   27d78:	add	r0, r0, r1, lsl #3
   27d7c:	ldr	r0, [r0, #4]
   27d80:	ldr	r2, [fp, #-20]	; 0xffffffec
   27d84:	add	r1, r2, r1, lsl #2
   27d88:	str	r0, [r1]
   27d8c:	ldr	r0, [sp, #24]
   27d90:	add	r0, r0, #1
   27d94:	str	r0, [sp, #24]
   27d98:	b	27d4c <flatcc_builder_create_union_vector@@Base+0xa0>
   27d9c:	ldr	r1, [fp, #-4]
   27da0:	ldr	r2, [fp, #-16]
   27da4:	ldr	r3, [fp, #-20]	; 0xffffffec
   27da8:	ldr	r0, [fp, #-12]
   27dac:	mov	ip, sp
   27db0:	str	r0, [ip]
   27db4:	add	r0, sp, #16
   27db8:	bl	27de0 <flatcc_builder_create_union_vector_direct@@Base>
   27dbc:	ldr	r0, [sp, #16]
   27dc0:	ldr	r1, [sp, #12]
   27dc4:	str	r0, [r1]
   27dc8:	ldr	r0, [sp, #20]
   27dcc:	str	r0, [r1, #4]
   27dd0:	ldr	r0, [fp, #-4]
   27dd4:	bl	24de8 <flatcc_builder_end_buffer@@Base+0x170>
   27dd8:	mov	sp, fp
   27ddc:	pop	{fp, pc}

00027de0 <flatcc_builder_create_union_vector_direct@@Base>:
   27de0:	push	{fp, lr}
   27de4:	mov	fp, sp
   27de8:	sub	sp, sp, #32
   27dec:	ldr	ip, [fp, #8]
   27df0:	str	r1, [fp, #-4]
   27df4:	str	r2, [fp, #-8]
   27df8:	str	r3, [fp, #-12]
   27dfc:	mov	r1, r0
   27e00:	str	r0, [sp, #16]
   27e04:	mov	r0, r1
   27e08:	movw	r1, #0
   27e0c:	and	r1, r1, #255	; 0xff
   27e10:	movw	r2, #8
   27e14:	str	ip, [sp, #12]
   27e18:	bl	12b2c <memset@plt>
   27e1c:	ldr	r0, [fp, #-4]
   27e20:	ldr	r1, [fp, #-12]
   27e24:	ldr	r2, [fp, #8]
   27e28:	ldr	r3, [fp, #-8]
   27e2c:	bl	27224 <flatcc_builder_create_offset_vector_direct@@Base+0x34>
   27e30:	ldr	r1, [sp, #16]
   27e34:	str	r0, [r1, #4]
   27e38:	movw	r2, #0
   27e3c:	cmp	r2, r0
   27e40:	bne	27e48 <flatcc_builder_create_union_vector_direct@@Base+0x68>
   27e44:	b	27e8c <flatcc_builder_create_union_vector_direct@@Base+0xac>
   27e48:	ldr	r0, [fp, #-4]
   27e4c:	ldr	r1, [fp, #-8]
   27e50:	ldr	r2, [fp, #8]
   27e54:	movw	r3, #1
   27e58:	movw	ip, #1
   27e5c:	uxth	ip, ip
   27e60:	str	ip, [sp]
   27e64:	mvn	ip, #0
   27e68:	str	ip, [sp, #4]
   27e6c:	bl	26f14 <flatcc_builder_create_vector@@Base>
   27e70:	ldr	r1, [sp, #16]
   27e74:	str	r0, [r1]
   27e78:	movw	r2, #0
   27e7c:	cmp	r2, r0
   27e80:	bne	27e88 <flatcc_builder_create_union_vector_direct@@Base+0xa8>
   27e84:	b	27e8c <flatcc_builder_create_union_vector_direct@@Base+0xac>
   27e88:	b	27e8c <flatcc_builder_create_union_vector_direct@@Base+0xac>
   27e8c:	mov	sp, fp
   27e90:	pop	{fp, pc}

00027e94 <flatcc_builder_start_union_vector@@Base>:
   27e94:	push	{fp, lr}
   27e98:	mov	fp, sp
   27e9c:	sub	sp, sp, #8
   27ea0:	str	r0, [sp]
   27ea4:	ldr	r0, [sp]
   27ea8:	movw	r1, #4
   27eac:	uxth	r1, r1
   27eb0:	bl	24aac <flatcc_builder_start_buffer@@Base+0x178>
   27eb4:	cmp	r0, #0
   27eb8:	beq	27ec8 <flatcc_builder_start_union_vector@@Base+0x34>
   27ebc:	mvn	r0, #0
   27ec0:	str	r0, [sp, #4]
   27ec4:	b	27f0c <flatcc_builder_start_union_vector@@Base+0x78>
   27ec8:	ldr	r0, [sp]
   27ecc:	ldr	r0, [r0, #32]
   27ed0:	movw	r1, #8
   27ed4:	str	r1, [r0, #16]
   27ed8:	ldr	r0, [sp]
   27edc:	ldr	r0, [r0, #32]
   27ee0:	movw	r1, #0
   27ee4:	str	r1, [r0, #20]
   27ee8:	ldr	r0, [sp]
   27eec:	ldr	r0, [r0, #32]
   27ef0:	movw	r1, #7
   27ef4:	strh	r1, [r0, #14]
   27ef8:	ldr	r0, [sp]
   27efc:	mvn	r1, #3
   27f00:	bl	24f14 <flatcc_builder_start_struct@@Base+0x70>
   27f04:	movw	r0, #0
   27f08:	str	r0, [sp, #4]
   27f0c:	ldr	r0, [sp, #4]
   27f10:	mov	sp, fp
   27f14:	pop	{fp, pc}

00027f18 <flatcc_builder_end_union_vector@@Base>:
   27f18:	push	{fp, lr}
   27f1c:	mov	fp, sp
   27f20:	sub	sp, sp, #40	; 0x28
   27f24:	str	r1, [fp, #-4]
   27f28:	mov	r1, r0
   27f2c:	str	r0, [sp, #4]
   27f30:	mov	r0, r1
   27f34:	movw	r1, #0
   27f38:	and	r1, r1, #255	; 0xff
   27f3c:	movw	r2, #8
   27f40:	bl	12b2c <memset@plt>
   27f44:	ldr	r0, [fp, #-4]
   27f48:	ldr	r0, [r0, #32]
   27f4c:	ldrh	r0, [r0, #14]
   27f50:	cmp	r0, #7
   27f54:	bne	27f5c <flatcc_builder_end_union_vector@@Base+0x44>
   27f58:	b	27f7c <flatcc_builder_end_union_vector@@Base+0x64>
   27f5c:	ldr	r0, [pc, #260]	; 28068 <flatcc_builder_end_union_vector@@Base+0x150>
   27f60:	add	r0, pc, r0
   27f64:	ldr	r1, [pc, #256]	; 2806c <flatcc_builder_end_union_vector@@Base+0x154>
   27f68:	add	r1, pc, r1
   27f6c:	ldr	r2, [pc, #252]	; 28070 <flatcc_builder_end_union_vector@@Base+0x158>
   27f70:	add	r3, pc, r2
   27f74:	movw	r2, #1617	; 0x651
   27f78:	bl	12b80 <__assert_fail@plt>
   27f7c:	ldr	r0, [fp, #-4]
   27f80:	bl	28074 <flatcc_builder_union_vector_count@@Base>
   27f84:	str	r0, [sp, #16]
   27f88:	ldr	r0, [fp, #-4]
   27f8c:	ldr	lr, [sp, #16]
   27f90:	movw	r1, #5
   27f94:	mul	r1, lr, r1
   27f98:	bl	24fa0 <flatcc_builder_start_struct@@Base+0xfc>
   27f9c:	str	r0, [fp, #-16]
   27fa0:	movw	r1, #0
   27fa4:	cmp	r1, r0
   27fa8:	bne	27fb0 <flatcc_builder_end_union_vector@@Base+0x98>
   27fac:	b	28060 <flatcc_builder_end_union_vector@@Base+0x148>
   27fb0:	ldr	r0, [fp, #-16]
   27fb4:	ldr	r1, [sp, #16]
   27fb8:	add	r0, r0, r1, lsl #2
   27fbc:	str	r0, [fp, #-8]
   27fc0:	ldr	r0, [fp, #-4]
   27fc4:	bl	28090 <flatcc_builder_union_vector_edit@@Base>
   27fc8:	str	r0, [fp, #-12]
   27fcc:	movw	r0, #0
   27fd0:	str	r0, [sp, #20]
   27fd4:	ldr	r0, [sp, #20]
   27fd8:	ldr	r1, [sp, #16]
   27fdc:	cmp	r0, r1
   27fe0:	bcs	28024 <flatcc_builder_end_union_vector@@Base+0x10c>
   27fe4:	ldr	r0, [fp, #-12]
   27fe8:	ldr	r1, [sp, #20]
   27fec:	ldrb	r0, [r0, r1, lsl #3]
   27ff0:	ldr	r2, [fp, #-8]
   27ff4:	strb	r0, [r2, r1]
   27ff8:	ldr	r0, [fp, #-12]
   27ffc:	ldr	r1, [sp, #20]
   28000:	add	r0, r0, r1, lsl #3
   28004:	ldr	r0, [r0, #4]
   28008:	ldr	r2, [fp, #-16]
   2800c:	add	r1, r2, r1, lsl #2
   28010:	str	r0, [r1]
   28014:	ldr	r0, [sp, #20]
   28018:	add	r0, r0, #1
   2801c:	str	r0, [sp, #20]
   28020:	b	27fd4 <flatcc_builder_end_union_vector@@Base+0xbc>
   28024:	ldr	r1, [fp, #-4]
   28028:	ldr	r2, [fp, #-8]
   2802c:	ldr	r3, [fp, #-16]
   28030:	ldr	r0, [sp, #16]
   28034:	mov	ip, sp
   28038:	str	r0, [ip]
   2803c:	add	r0, sp, #8
   28040:	bl	27de0 <flatcc_builder_create_union_vector_direct@@Base>
   28044:	ldr	r0, [sp, #8]
   28048:	ldr	r1, [sp, #4]
   2804c:	str	r0, [r1]
   28050:	ldr	r0, [sp, #12]
   28054:	str	r0, [r1, #4]
   28058:	ldr	r0, [fp, #-4]
   2805c:	bl	24de8 <flatcc_builder_end_buffer@@Base+0x170>
   28060:	mov	sp, fp
   28064:	pop	{fp, pc}
   28068:	andeq	sl, r0, pc, asr r1
   2806c:	andeq	r9, r0, lr, lsl r5
   28070:	andeq	sl, r0, r1, lsl #3

00028074 <flatcc_builder_union_vector_count@@Base>:
   28074:	sub	sp, sp, #4
   28078:	str	r0, [sp]
   2807c:	ldr	r0, [sp]
   28080:	ldr	r0, [r0, #32]
   28084:	ldr	r0, [r0, #20]
   28088:	add	sp, sp, #4
   2808c:	bx	lr

00028090 <flatcc_builder_union_vector_edit@@Base>:
   28090:	sub	sp, sp, #4
   28094:	str	r0, [sp]
   28098:	ldr	r0, [sp]
   2809c:	ldr	r0, [r0, #16]
   280a0:	add	sp, sp, #4
   280a4:	bx	lr

000280a8 <flatcc_builder_extend_union_vector@@Base>:
   280a8:	push	{fp, lr}
   280ac:	mov	fp, sp
   280b0:	sub	sp, sp, #16
   280b4:	ldr	r2, [pc, #68]	; 28100 <flatcc_builder_extend_union_vector@@Base+0x58>
   280b8:	str	r0, [sp, #8]
   280bc:	str	r1, [sp, #4]
   280c0:	ldr	r0, [sp, #8]
   280c4:	ldr	r1, [sp, #4]
   280c8:	bl	25164 <flatcc_builder_extend_vector@@Base+0x6c>
   280cc:	cmp	r0, #0
   280d0:	beq	280e0 <flatcc_builder_extend_union_vector@@Base+0x38>
   280d4:	movw	r0, #0
   280d8:	str	r0, [fp, #-4]
   280dc:	b	280f4 <flatcc_builder_extend_union_vector@@Base+0x4c>
   280e0:	ldr	r0, [sp, #8]
   280e4:	ldr	r1, [sp, #4]
   280e8:	lsl	r1, r1, #3
   280ec:	bl	24fa0 <flatcc_builder_start_struct@@Base+0xfc>
   280f0:	str	r0, [fp, #-4]
   280f4:	ldr	r0, [fp, #-4]
   280f8:	mov	sp, fp
   280fc:	pop	{fp, pc}
   28100:	svcne	0x00ffffff

00028104 <flatcc_builder_truncate_union_vector@@Base>:
   28104:	push	{fp, lr}
   28108:	mov	fp, sp
   2810c:	sub	sp, sp, #16
   28110:	str	r0, [sp, #8]
   28114:	str	r1, [sp, #4]
   28118:	ldr	r0, [sp, #8]
   2811c:	ldr	r0, [r0, #32]
   28120:	ldrh	r0, [r0, #14]
   28124:	cmp	r0, #7
   28128:	bne	28130 <flatcc_builder_truncate_union_vector@@Base+0x2c>
   2812c:	b	28150 <flatcc_builder_truncate_union_vector@@Base+0x4c>
   28130:	ldr	r0, [pc, #192]	; 281f8 <flatcc_builder_truncate_union_vector@@Base+0xf4>
   28134:	add	r0, pc, r0
   28138:	ldr	r1, [pc, #188]	; 281fc <flatcc_builder_truncate_union_vector@@Base+0xf8>
   2813c:	add	r1, pc, r1
   28140:	ldr	r2, [pc, #184]	; 28200 <flatcc_builder_truncate_union_vector@@Base+0xfc>
   28144:	add	r3, pc, r2
   28148:	movw	r2, #1665	; 0x681
   2814c:	bl	12b80 <__assert_fail@plt>
   28150:	ldr	r0, [sp, #8]
   28154:	ldr	r0, [r0, #32]
   28158:	ldr	r0, [r0, #20]
   2815c:	ldr	r1, [sp, #4]
   28160:	cmp	r0, r1
   28164:	bcs	281b0 <flatcc_builder_truncate_union_vector@@Base+0xac>
   28168:	ldr	r0, [sp, #8]
   2816c:	ldr	r0, [r0, #32]
   28170:	ldr	r0, [r0, #20]
   28174:	ldr	r1, [sp, #4]
   28178:	cmp	r0, r1
   2817c:	bcc	28184 <flatcc_builder_truncate_union_vector@@Base+0x80>
   28180:	b	281a4 <flatcc_builder_truncate_union_vector@@Base+0xa0>
   28184:	ldr	r0, [pc, #120]	; 28204 <flatcc_builder_truncate_union_vector@@Base+0x100>
   28188:	add	r0, pc, r0
   2818c:	ldr	r1, [pc, #116]	; 28208 <flatcc_builder_truncate_union_vector@@Base+0x104>
   28190:	add	r1, pc, r1
   28194:	ldr	r2, [pc, #112]	; 2820c <flatcc_builder_truncate_union_vector@@Base+0x108>
   28198:	add	r3, pc, r2
   2819c:	movw	r2, #1666	; 0x682
   281a0:	bl	12b80 <__assert_fail@plt>
   281a4:	mvn	r0, #0
   281a8:	str	r0, [fp, #-4]
   281ac:	b	281ec <flatcc_builder_truncate_union_vector@@Base+0xe8>
   281b0:	ldr	r0, [sp, #4]
   281b4:	ldr	r1, [sp, #8]
   281b8:	ldr	r1, [r1, #32]
   281bc:	ldr	r2, [r1, #20]
   281c0:	sub	r0, r2, r0
   281c4:	str	r0, [r1, #20]
   281c8:	ldr	r0, [sp, #8]
   281cc:	ldr	r1, [sp, #8]
   281d0:	ldr	r1, [r1, #32]
   281d4:	ldr	r1, [r1, #16]
   281d8:	ldr	r2, [sp, #4]
   281dc:	mul	r1, r1, r2
   281e0:	bl	25998 <flatcc_builder_truncate_vector@@Base+0x10c>
   281e4:	movw	r0, #0
   281e8:	str	r0, [fp, #-4]
   281ec:	ldr	r0, [fp, #-4]
   281f0:	mov	sp, fp
   281f4:	pop	{fp, pc}
   281f8:	andeq	r9, r0, fp, lsl #31
   281fc:	andeq	r9, r0, sl, asr #6
   28200:	andeq	sl, r0, r0
   28204:	muleq	r0, fp, r9
   28208:	strdeq	r9, [r0], -r6
   2820c:	andeq	r9, r0, ip, lsr #31

00028210 <flatcc_builder_union_vector_push@@Base>:
   28210:	push	{fp, lr}
   28214:	mov	fp, sp
   28218:	sub	sp, sp, #24
   2821c:	str	r1, [sp, #12]
   28220:	str	r2, [sp, #16]
   28224:	str	r0, [sp, #8]
   28228:	ldr	r0, [sp, #8]
   2822c:	ldr	r0, [r0, #32]
   28230:	ldrh	r0, [r0, #14]
   28234:	cmp	r0, #7
   28238:	bne	28240 <flatcc_builder_union_vector_push@@Base+0x30>
   2823c:	b	28260 <flatcc_builder_union_vector_push@@Base+0x50>
   28240:	ldr	r0, [pc, #160]	; 282e8 <flatcc_builder_union_vector_push@@Base+0xd8>
   28244:	add	r0, pc, r0
   28248:	ldr	r1, [pc, #156]	; 282ec <flatcc_builder_union_vector_push@@Base+0xdc>
   2824c:	add	r1, pc, r1
   28250:	ldr	r2, [pc, #152]	; 282f0 <flatcc_builder_union_vector_push@@Base+0xe0>
   28254:	add	r3, pc, r2
   28258:	movw	r2, #1677	; 0x68d
   2825c:	bl	12b80 <__assert_fail@plt>
   28260:	ldr	r0, [pc, #140]	; 282f4 <flatcc_builder_union_vector_push@@Base+0xe4>
   28264:	ldr	r1, [sp, #8]
   28268:	ldr	r1, [r1, #32]
   2826c:	ldr	r1, [r1, #20]
   28270:	cmp	r1, r0
   28274:	bne	28284 <flatcc_builder_union_vector_push@@Base+0x74>
   28278:	movw	r0, #0
   2827c:	str	r0, [fp, #-4]
   28280:	b	282dc <flatcc_builder_union_vector_push@@Base+0xcc>
   28284:	ldr	r0, [sp, #8]
   28288:	ldr	r0, [r0, #32]
   2828c:	ldr	r1, [r0, #20]
   28290:	add	r1, r1, #1
   28294:	str	r1, [r0, #20]
   28298:	ldr	r0, [sp, #8]
   2829c:	movw	r1, #8
   282a0:	bl	24fa0 <flatcc_builder_start_struct@@Base+0xfc>
   282a4:	str	r0, [sp, #4]
   282a8:	movw	r1, #0
   282ac:	cmp	r1, r0
   282b0:	bne	282c0 <flatcc_builder_union_vector_push@@Base+0xb0>
   282b4:	movw	r0, #0
   282b8:	str	r0, [fp, #-4]
   282bc:	b	282dc <flatcc_builder_union_vector_push@@Base+0xcc>
   282c0:	ldr	r0, [sp, #4]
   282c4:	ldr	r1, [sp, #12]
   282c8:	str	r1, [r0]
   282cc:	ldr	r1, [sp, #16]
   282d0:	str	r1, [r0, #4]
   282d4:	ldr	r0, [sp, #4]
   282d8:	str	r0, [fp, #-4]
   282dc:	ldr	r0, [fp, #-4]
   282e0:	mov	sp, fp
   282e4:	pop	{fp, pc}
   282e8:	andeq	r9, r0, fp, ror lr
   282ec:	andeq	r9, r0, sl, lsr r2
   282f0:	andeq	r9, r0, r5, lsr pc
   282f4:	svcne	0x00ffffff

000282f8 <flatcc_builder_append_union_vector@@Base>:
   282f8:	push	{fp, lr}
   282fc:	mov	fp, sp
   28300:	sub	sp, sp, #16
   28304:	str	r0, [sp, #8]
   28308:	str	r1, [sp, #4]
   2830c:	str	r2, [sp]
   28310:	ldr	r0, [sp, #8]
   28314:	ldr	r0, [r0, #32]
   28318:	ldrh	r0, [r0, #14]
   2831c:	cmp	r0, #7
   28320:	bne	28328 <flatcc_builder_append_union_vector@@Base+0x30>
   28324:	b	28348 <flatcc_builder_append_union_vector@@Base+0x50>
   28328:	ldr	r0, [pc, #96]	; 28390 <flatcc_builder_append_union_vector@@Base+0x98>
   2832c:	add	r0, pc, r0
   28330:	ldr	r1, [pc, #92]	; 28394 <flatcc_builder_append_union_vector@@Base+0x9c>
   28334:	add	r1, pc, r1
   28338:	ldr	r2, [pc, #88]	; 28398 <flatcc_builder_append_union_vector@@Base+0xa0>
   2833c:	add	r3, pc, r2
   28340:	movw	r2, #1692	; 0x69c
   28344:	bl	12b80 <__assert_fail@plt>
   28348:	ldr	r2, [pc, #76]	; 2839c <flatcc_builder_append_union_vector@@Base+0xa4>
   2834c:	ldr	r0, [sp, #8]
   28350:	ldr	r1, [sp]
   28354:	bl	25164 <flatcc_builder_extend_vector@@Base+0x6c>
   28358:	cmp	r0, #0
   2835c:	beq	2836c <flatcc_builder_append_union_vector@@Base+0x74>
   28360:	movw	r0, #0
   28364:	str	r0, [fp, #-4]
   28368:	b	28384 <flatcc_builder_append_union_vector@@Base+0x8c>
   2836c:	ldr	r0, [sp, #8]
   28370:	ldr	r1, [sp, #4]
   28374:	ldr	r2, [sp]
   28378:	lsl	r2, r2, #3
   2837c:	bl	2534c <flatcc_builder_vector_push@@Base+0x110>
   28380:	str	r0, [fp, #-4]
   28384:	ldr	r0, [fp, #-4]
   28388:	mov	sp, fp
   2838c:	pop	{fp, pc}
   28390:	muleq	r0, r3, sp
   28394:	andeq	r9, r0, r2, asr r1
   28398:			; <UNDEFINED> instruction: 0x00009eba
   2839c:	svcne	0x00ffffff

000283a0 <flatcc_builder_create_string@@Base>:
   283a0:	push	{fp, lr}
   283a4:	mov	fp, sp
   283a8:	sub	sp, sp, #96	; 0x60
   283ac:	str	r0, [fp, #-8]
   283b0:	str	r1, [fp, #-12]
   283b4:	str	r2, [fp, #-16]
   283b8:	ldr	r0, [fp, #-16]
   283bc:	cmn	r0, #1
   283c0:	bls	283d0 <flatcc_builder_create_string@@Base+0x30>
   283c4:	movw	r0, #0
   283c8:	str	r0, [fp, #-4]
   283cc:	b	284ec <flatcc_builder_create_string@@Base+0x14c>
   283d0:	ldr	r0, [fp, #-16]
   283d4:	bl	242d4 <flatcc_builder_embed_buffer@@Base+0x388>
   283d8:	str	r0, [fp, #-24]	; 0xffffffe8
   283dc:	ldr	r0, [fp, #-8]
   283e0:	ldr	lr, [fp, #-16]
   283e4:	add	r1, lr, #1
   283e8:	mov	r2, #4
   283ec:	bl	242a0 <flatcc_builder_embed_buffer@@Base+0x354>
   283f0:	add	r0, r0, #1
   283f4:	str	r0, [fp, #-20]	; 0xffffffec
   283f8:	mov	r0, #0
   283fc:	str	r0, [sp]
   28400:	str	r0, [sp, #4]
   28404:	ldr	r0, [sp]
   28408:	add	r0, r0, #4
   2840c:	str	r0, [sp]
   28410:	mov	r0, sp
   28414:	add	r0, r0, #8
   28418:	ldr	r1, [sp, #4]
   2841c:	sub	r2, fp, #24
   28420:	str	r2, [r0, r1, lsl #3]
   28424:	ldr	r1, [sp, #4]
   28428:	add	r0, r0, r1, lsl #3
   2842c:	movw	r1, #4
   28430:	str	r1, [r0, #4]
   28434:	ldr	r0, [sp, #4]
   28438:	add	r0, r0, #1
   2843c:	str	r0, [sp, #4]
   28440:	ldr	r0, [fp, #-16]
   28444:	cmp	r0, #0
   28448:	bls	2848c <flatcc_builder_create_string@@Base+0xec>
   2844c:	ldr	r0, [fp, #-16]
   28450:	ldr	r1, [sp]
   28454:	add	r0, r1, r0
   28458:	str	r0, [sp]
   2845c:	ldr	r0, [fp, #-12]
   28460:	mov	r1, sp
   28464:	add	r1, r1, #8
   28468:	ldr	r2, [sp, #4]
   2846c:	str	r0, [r1, r2, lsl #3]
   28470:	ldr	r0, [fp, #-16]
   28474:	ldr	r2, [sp, #4]
   28478:	add	r1, r1, r2, lsl #3
   2847c:	str	r0, [r1, #4]
   28480:	ldr	r0, [sp, #4]
   28484:	add	r0, r0, #1
   28488:	str	r0, [sp, #4]
   2848c:	ldr	r0, [fp, #-20]	; 0xffffffec
   28490:	cmp	r0, #0
   28494:	bls	284dc <flatcc_builder_create_string@@Base+0x13c>
   28498:	ldr	r0, [fp, #-20]	; 0xffffffec
   2849c:	ldr	r1, [sp]
   284a0:	add	r0, r1, r0
   284a4:	str	r0, [sp]
   284a8:	mov	r0, sp
   284ac:	add	r0, r0, #8
   284b0:	ldr	r1, [sp, #4]
   284b4:	ldr	r2, [pc, #60]	; 284f8 <flatcc_builder_create_string@@Base+0x158>
   284b8:	ldr	r2, [pc, r2]
   284bc:	str	r2, [r0, r1, lsl #3]
   284c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   284c4:	ldr	r2, [sp, #4]
   284c8:	add	r0, r0, r2, lsl #3
   284cc:	str	r1, [r0, #4]
   284d0:	ldr	r0, [sp, #4]
   284d4:	add	r0, r0, #1
   284d8:	str	r0, [sp, #4]
   284dc:	ldr	r0, [fp, #-8]
   284e0:	mov	r1, sp
   284e4:	bl	242e8 <flatcc_builder_embed_buffer@@Base+0x39c>
   284e8:	str	r0, [fp, #-4]
   284ec:	ldr	r0, [fp, #-4]
   284f0:	mov	sp, fp
   284f4:	pop	{fp, pc}
   284f8:			; <UNDEFINED> instruction: 0x0001bbb0

000284fc <flatcc_builder_create_string_str@@Base>:
   284fc:	push	{fp, lr}
   28500:	mov	fp, sp
   28504:	sub	sp, sp, #24
   28508:	str	r0, [fp, #-4]
   2850c:	str	r1, [fp, #-8]
   28510:	ldr	r0, [fp, #-4]
   28514:	ldr	r1, [fp, #-8]
   28518:	ldr	r2, [fp, #-8]
   2851c:	str	r0, [sp, #12]
   28520:	mov	r0, r2
   28524:	str	r1, [sp, #8]
   28528:	bl	12b08 <strlen@plt>
   2852c:	ldr	r1, [sp, #12]
   28530:	str	r0, [sp, #4]
   28534:	mov	r0, r1
   28538:	ldr	r1, [sp, #8]
   2853c:	ldr	r2, [sp, #4]
   28540:	bl	283a0 <flatcc_builder_create_string@@Base>
   28544:	mov	sp, fp
   28548:	pop	{fp, pc}

0002854c <flatcc_builder_create_string_strn@@Base>:
   2854c:	push	{fp, lr}
   28550:	mov	fp, sp
   28554:	sub	sp, sp, #24
   28558:	str	r0, [fp, #-4]
   2855c:	str	r1, [fp, #-8]
   28560:	str	r2, [sp, #12]
   28564:	ldr	r0, [fp, #-4]
   28568:	ldr	r1, [fp, #-8]
   2856c:	ldr	r2, [fp, #-8]
   28570:	ldr	r3, [sp, #12]
   28574:	str	r0, [sp, #8]
   28578:	mov	r0, r2
   2857c:	str	r1, [sp, #4]
   28580:	mov	r1, r3
   28584:	bl	2582c <flatcc_builder_append_string_strn@@Base+0x5c>
   28588:	ldr	r1, [sp, #8]
   2858c:	str	r0, [sp]
   28590:	mov	r0, r1
   28594:	ldr	r1, [sp, #4]
   28598:	ldr	r2, [sp]
   2859c:	bl	283a0 <flatcc_builder_create_string@@Base>
   285a0:	mov	sp, fp
   285a4:	pop	{fp, pc}

000285a8 <flatcc_builder_end_string@@Base>:
   285a8:	push	{fp, lr}
   285ac:	mov	fp, sp
   285b0:	sub	sp, sp, #16
   285b4:	str	r0, [sp, #8]
   285b8:	ldr	r0, [sp, #8]
   285bc:	ldr	r0, [r0, #32]
   285c0:	ldrh	r0, [r0, #14]
   285c4:	cmp	r0, #6
   285c8:	bne	285d0 <flatcc_builder_end_string@@Base+0x28>
   285cc:	b	285f0 <flatcc_builder_end_string@@Base+0x48>
   285d0:	ldr	r0, [pc, #168]	; 28680 <flatcc_builder_end_string@@Base+0xd8>
   285d4:	add	r0, pc, r0
   285d8:	ldr	r1, [pc, #164]	; 28684 <flatcc_builder_end_string@@Base+0xdc>
   285dc:	add	r1, pc, r1
   285e0:	ldr	r2, [pc, #160]	; 28688 <flatcc_builder_end_string@@Base+0xe0>
   285e4:	add	r3, pc, r2
   285e8:	movw	r2, #1732	; 0x6c4
   285ec:	bl	12b80 <__assert_fail@plt>
   285f0:	ldr	r0, [sp, #8]
   285f4:	ldr	r0, [r0, #32]
   285f8:	ldr	r0, [r0, #20]
   285fc:	ldr	r1, [sp, #8]
   28600:	ldr	r1, [r1, #20]
   28604:	cmp	r0, r1
   28608:	bne	28610 <flatcc_builder_end_string@@Base+0x68>
   2860c:	b	28630 <flatcc_builder_end_string@@Base+0x88>
   28610:	ldr	r0, [pc, #116]	; 2868c <flatcc_builder_end_string@@Base+0xe4>
   28614:	add	r0, pc, r0
   28618:	ldr	r1, [pc, #112]	; 28690 <flatcc_builder_end_string@@Base+0xe8>
   2861c:	add	r1, pc, r1
   28620:	ldr	r2, [pc, #108]	; 28694 <flatcc_builder_end_string@@Base+0xec>
   28624:	add	r3, pc, r2
   28628:	movw	r2, #1733	; 0x6c5
   2862c:	bl	12b80 <__assert_fail@plt>
   28630:	ldr	r0, [sp, #8]
   28634:	ldr	r1, [sp, #8]
   28638:	ldr	r1, [r1, #16]
   2863c:	ldr	r2, [sp, #8]
   28640:	ldr	r2, [r2, #20]
   28644:	bl	283a0 <flatcc_builder_create_string@@Base>
   28648:	str	r0, [sp, #4]
   2864c:	movw	r1, #0
   28650:	cmp	r1, r0
   28654:	bne	28664 <flatcc_builder_end_string@@Base+0xbc>
   28658:	movw	r0, #0
   2865c:	str	r0, [fp, #-4]
   28660:	b	28674 <flatcc_builder_end_string@@Base+0xcc>
   28664:	ldr	r0, [sp, #8]
   28668:	bl	24de8 <flatcc_builder_end_buffer@@Base+0x170>
   2866c:	ldr	r0, [sp, #4]
   28670:	str	r0, [fp, #-4]
   28674:	ldr	r0, [fp, #-4]
   28678:	mov	sp, fp
   2867c:	pop	{fp, pc}
   28680:	andeq	r9, r0, lr, ror #7
   28684:	andeq	r8, r0, sl, lsr #29
   28688:	muleq	r0, r1, ip
   2868c:	andeq	r9, r0, r4, lsr #25
   28690:	andeq	r8, r0, sl, ror #28
   28694:	andeq	r9, r0, r1, asr ip

00028698 <flatcc_builder_string_edit@@Base>:
   28698:	sub	sp, sp, #4
   2869c:	str	r0, [sp]
   286a0:	ldr	r0, [sp]
   286a4:	ldr	r0, [r0, #16]
   286a8:	add	sp, sp, #4
   286ac:	bx	lr

000286b0 <flatcc_builder_string_len@@Base>:
   286b0:	sub	sp, sp, #4
   286b4:	str	r0, [sp]
   286b8:	ldr	r0, [sp]
   286bc:	ldr	r0, [r0, #32]
   286c0:	ldr	r0, [r0, #20]
   286c4:	add	sp, sp, #4
   286c8:	bx	lr
   286cc:	push	{fp, lr}
   286d0:	mov	fp, sp
   286d4:	sub	sp, sp, #24
   286d8:	str	r0, [fp, #-8]
   286dc:	str	r1, [sp, #12]
   286e0:	strh	r2, [sp, #10]
   286e4:	strh	r3, [sp, #8]
   286e8:	ldr	r0, [fp, #-8]
   286ec:	ldr	r0, [r0, #20]
   286f0:	ldrh	r1, [sp, #10]
   286f4:	add	r0, r0, r1
   286f8:	sub	r0, r0, #1
   286fc:	ldrh	r1, [sp, #10]
   28700:	sub	r1, r1, #1
   28704:	mvn	r2, #0
   28708:	eor	r1, r1, r2
   2870c:	and	r0, r0, r1
   28710:	str	r0, [sp, #4]
   28714:	ldr	r0, [sp, #4]
   28718:	ldr	r1, [sp, #12]
   2871c:	add	r0, r0, r1
   28720:	ldr	r1, [fp, #-8]
   28724:	str	r0, [r1, #20]
   28728:	ldr	r1, [fp, #-8]
   2872c:	ldr	r1, [r1, #24]
   28730:	cmp	r0, r1
   28734:	bcc	28768 <flatcc_builder_string_len@@Base+0xb8>
   28738:	ldr	r0, [fp, #-8]
   2873c:	ldr	r1, [fp, #-8]
   28740:	ldr	r1, [r1, #20]
   28744:	add	r1, r1, #1
   28748:	movw	r2, #65532	; 0xfffc
   2874c:	bl	29110 <flatcc_builder_get_emit_context@@Base+0x40>
   28750:	cmp	r0, #0
   28754:	beq	28764 <flatcc_builder_string_len@@Base+0xb4>
   28758:	movw	r0, #0
   2875c:	str	r0, [fp, #-4]
   28760:	b	287bc <flatcc_builder_string_len@@Base+0x10c>
   28764:	b	28768 <flatcc_builder_string_len@@Base+0xb8>
   28768:	ldr	r0, [sp, #4]
   2876c:	add	r0, r0, #4
   28770:	ldr	r1, [fp, #-8]
   28774:	ldr	r1, [r1, #4]
   28778:	ldrh	r2, [sp, #8]
   2877c:	add	r1, r1, r2, lsl #1
   28780:	strh	r0, [r1]
   28784:	ldrh	r0, [sp, #8]
   28788:	ldr	r1, [fp, #-8]
   2878c:	ldrh	r1, [r1, #8]
   28790:	cmp	r0, r1
   28794:	blt	287a8 <flatcc_builder_string_len@@Base+0xf8>
   28798:	ldrh	r0, [sp, #8]
   2879c:	add	r0, r0, #1
   287a0:	ldr	r1, [fp, #-8]
   287a4:	strh	r0, [r1, #8]
   287a8:	ldr	r0, [fp, #-8]
   287ac:	ldr	r0, [r0, #16]
   287b0:	ldr	r1, [sp, #4]
   287b4:	add	r0, r0, r1
   287b8:	str	r0, [fp, #-4]
   287bc:	ldr	r0, [fp, #-4]
   287c0:	mov	sp, fp
   287c4:	pop	{fp, pc}

000287c8 <flatcc_builder_table_edit@@Base>:
   287c8:	push	{fp, lr}
   287cc:	mov	fp, sp
   287d0:	sub	sp, sp, #8
   287d4:	str	r0, [sp, #4]
   287d8:	str	r1, [sp]
   287dc:	ldr	r0, [sp, #4]
   287e0:	ldr	r0, [r0, #32]
   287e4:	ldrh	r0, [r0, #14]
   287e8:	cmp	r0, #3
   287ec:	bne	287f4 <flatcc_builder_table_edit@@Base+0x2c>
   287f0:	b	28814 <flatcc_builder_table_edit@@Base+0x4c>
   287f4:	ldr	r0, [pc, #68]	; 28840 <flatcc_builder_table_edit@@Base+0x78>
   287f8:	add	r0, pc, r0
   287fc:	ldr	r1, [pc, #64]	; 28844 <flatcc_builder_table_edit@@Base+0x7c>
   28800:	add	r1, pc, r1
   28804:	ldr	r2, [pc, #60]	; 28848 <flatcc_builder_table_edit@@Base+0x80>
   28808:	add	r3, pc, r2
   2880c:	movw	r2, #1794	; 0x702
   28810:	bl	12b80 <__assert_fail@plt>
   28814:	ldr	r0, [sp, #4]
   28818:	ldr	r0, [r0, #16]
   2881c:	ldr	r1, [sp, #4]
   28820:	ldr	r1, [r1, #20]
   28824:	add	r0, r0, r1
   28828:	ldr	r1, [sp]
   2882c:	movw	r2, #0
   28830:	sub	r1, r2, r1
   28834:	add	r0, r0, r1
   28838:	mov	sp, fp
   2883c:	pop	{fp, pc}
   28840:			; <UNDEFINED> instruction: 0x000094ba
   28844:	andeq	r8, r0, r6, lsl #25
   28848:	andeq	r9, r0, r2, ror #22

0002884c <flatcc_builder_table_add_copy@@Base>:
   2884c:	push	{fp, lr}
   28850:	mov	fp, sp
   28854:	sub	sp, sp, #24
   28858:	ldr	ip, [fp, #8]
   2885c:	str	r0, [fp, #-4]
   28860:	str	r1, [fp, #-8]
   28864:	str	r2, [sp, #12]
   28868:	str	r3, [sp, #8]
   2886c:	strh	ip, [sp, #6]
   28870:	ldr	r0, [fp, #-4]
   28874:	ldr	r1, [fp, #-8]
   28878:	ldr	r2, [sp, #8]
   2887c:	ldrh	r3, [sp, #6]
   28880:	bl	27920 <flatcc_builder_table_add@@Base>
   28884:	str	r0, [sp]
   28888:	movw	r1, #0
   2888c:	cmp	r0, r1
   28890:	beq	288a4 <flatcc_builder_table_add_copy@@Base+0x58>
   28894:	ldr	r0, [sp]
   28898:	ldr	r1, [sp, #12]
   2889c:	ldr	r2, [sp, #8]
   288a0:	bl	12a78 <memcpy@plt>
   288a4:	ldr	r0, [sp]
   288a8:	mov	sp, fp
   288ac:	pop	{fp, pc}
   288b0:	push	{fp, lr}
   288b4:	mov	fp, sp
   288b8:	sub	sp, sp, #16
   288bc:	str	r0, [sp, #8]
   288c0:	strh	r1, [sp, #6]
   288c4:	ldr	r0, [sp, #8]
   288c8:	ldr	r0, [r0, #20]
   288cc:	add	r0, r0, #4
   288d0:	sub	r0, r0, #1
   288d4:	mvn	r1, #3
   288d8:	and	r0, r0, r1
   288dc:	str	r0, [sp]
   288e0:	ldr	r0, [sp]
   288e4:	add	r0, r0, #4
   288e8:	ldr	r1, [sp, #8]
   288ec:	str	r0, [r1, #20]
   288f0:	ldr	r1, [sp, #8]
   288f4:	ldr	r1, [r1, #24]
   288f8:	cmp	r0, r1
   288fc:	bls	2892c <flatcc_builder_table_add_copy@@Base+0xe0>
   28900:	ldr	r0, [sp, #8]
   28904:	ldr	r1, [sp, #8]
   28908:	ldr	r1, [r1, #20]
   2890c:	movw	r2, #65532	; 0xfffc
   28910:	bl	29110 <flatcc_builder_get_emit_context@@Base+0x40>
   28914:	cmp	r0, #0
   28918:	beq	28928 <flatcc_builder_table_add_copy@@Base+0xdc>
   2891c:	movw	r0, #0
   28920:	str	r0, [fp, #-4]
   28924:	b	28998 <flatcc_builder_table_add_copy@@Base+0x14c>
   28928:	b	2892c <flatcc_builder_table_add_copy@@Base+0xe0>
   2892c:	ldr	r0, [sp]
   28930:	add	r0, r0, #4
   28934:	ldr	r1, [sp, #8]
   28938:	ldr	r1, [r1, #4]
   2893c:	ldrh	r2, [sp, #6]
   28940:	add	r1, r1, r2, lsl #1
   28944:	strh	r0, [r1]
   28948:	ldrh	r0, [sp, #6]
   2894c:	ldr	r1, [sp, #8]
   28950:	ldrh	r1, [r1, #8]
   28954:	cmp	r0, r1
   28958:	blt	2896c <flatcc_builder_table_add_copy@@Base+0x120>
   2895c:	ldrh	r0, [sp, #6]
   28960:	add	r0, r0, #1
   28964:	ldr	r1, [sp, #8]
   28968:	strh	r0, [r1, #8]
   2896c:	ldr	r0, [sp]
   28970:	ldr	r1, [sp, #8]
   28974:	ldr	r2, [r1]
   28978:	add	r3, r2, #2
   2897c:	str	r3, [r1]
   28980:	strh	r0, [r2]
   28984:	ldr	r0, [sp, #8]
   28988:	ldr	r0, [r0, #16]
   2898c:	ldr	r1, [sp]
   28990:	add	r0, r0, r1
   28994:	str	r0, [fp, #-4]
   28998:	ldr	r0, [fp, #-4]
   2899c:	mov	sp, fp
   289a0:	pop	{fp, pc}

000289a4 <flatcc_builder_push_buffer_alignment@@Base>:
   289a4:	sub	sp, sp, #8
   289a8:	str	r0, [sp, #4]
   289ac:	ldr	r0, [sp, #4]
   289b0:	ldrh	r0, [r0, #128]	; 0x80
   289b4:	strh	r0, [sp, #2]
   289b8:	ldr	r0, [sp, #4]
   289bc:	movw	r1, #4
   289c0:	strh	r1, [r0, #128]	; 0x80
   289c4:	ldrh	r0, [sp, #2]
   289c8:	add	sp, sp, #8
   289cc:	bx	lr

000289d0 <flatcc_builder_pop_buffer_alignment@@Base>:
   289d0:	push	{fp, lr}
   289d4:	mov	fp, sp
   289d8:	sub	sp, sp, #8
   289dc:	str	r0, [sp, #4]
   289e0:	strh	r1, [sp, #2]
   289e4:	ldr	r0, [sp, #4]
   289e8:	ldrh	r1, [sp, #2]
   289ec:	bl	247b4 <flatcc_builder_create_buffer@@Base+0x3a8>
   289f0:	mov	sp, fp
   289f4:	pop	{fp, pc}

000289f8 <flatcc_builder_get_buffer_alignment@@Base>:
   289f8:	sub	sp, sp, #4
   289fc:	str	r0, [sp]
   28a00:	ldr	r0, [sp]
   28a04:	ldrh	r0, [r0, #128]	; 0x80
   28a08:	add	sp, sp, #4
   28a0c:	bx	lr

00028a10 <flatcc_builder_set_vtable_clustering@@Base>:
   28a10:	sub	sp, sp, #8
   28a14:	str	r0, [sp, #4]
   28a18:	str	r1, [sp]
   28a1c:	ldr	r0, [sp]
   28a20:	cmp	r0, #0
   28a24:	movw	r0, #0
   28a28:	movne	r0, #1
   28a2c:	mvn	r1, #0
   28a30:	eor	r0, r0, r1
   28a34:	and	r0, r0, #1
   28a38:	ldr	r1, [sp, #4]
   28a3c:	str	r0, [r1, #180]	; 0xb4
   28a40:	add	sp, sp, #8
   28a44:	bx	lr

00028a48 <flatcc_builder_set_block_align@@Base>:
   28a48:	sub	sp, sp, #8
   28a4c:	str	r0, [sp, #4]
   28a50:	strh	r1, [sp, #2]
   28a54:	ldrh	r0, [sp, #2]
   28a58:	ldr	r1, [sp, #4]
   28a5c:	strh	r0, [r1, #132]	; 0x84
   28a60:	add	sp, sp, #8
   28a64:	bx	lr

00028a68 <flatcc_builder_get_level@@Base>:
   28a68:	sub	sp, sp, #4
   28a6c:	str	r0, [sp]
   28a70:	ldr	r0, [sp]
   28a74:	ldr	r0, [r0, #156]	; 0x9c
   28a78:	add	sp, sp, #4
   28a7c:	bx	lr

00028a80 <flatcc_builder_set_max_level@@Base>:
   28a80:	sub	sp, sp, #8
   28a84:	str	r0, [sp, #4]
   28a88:	str	r1, [sp]
   28a8c:	ldr	r0, [sp]
   28a90:	ldr	r1, [sp, #4]
   28a94:	str	r0, [r1, #176]	; 0xb0
   28a98:	ldr	r0, [sp, #4]
   28a9c:	ldr	r0, [r0, #160]	; 0xa0
   28aa0:	ldr	r1, [sp, #4]
   28aa4:	ldr	r1, [r1, #176]	; 0xb0
   28aa8:	cmp	r0, r1
   28aac:	bge	28ac0 <flatcc_builder_set_max_level@@Base+0x40>
   28ab0:	ldr	r0, [sp, #4]
   28ab4:	ldr	r0, [r0, #176]	; 0xb0
   28ab8:	ldr	r1, [sp, #4]
   28abc:	str	r0, [r1, #160]	; 0xa0
   28ac0:	add	sp, sp, #8
   28ac4:	bx	lr

00028ac8 <flatcc_builder_get_buffer_size@@Base>:
   28ac8:	sub	sp, sp, #4
   28acc:	str	r0, [sp]
   28ad0:	ldr	r0, [sp]
   28ad4:	ldr	r0, [r0, #140]	; 0x8c
   28ad8:	ldr	r1, [sp]
   28adc:	ldr	r1, [r1, #136]	; 0x88
   28ae0:	sub	r0, r0, r1
   28ae4:	add	sp, sp, #4
   28ae8:	bx	lr

00028aec <flatcc_builder_get_buffer_start@@Base>:
   28aec:	sub	sp, sp, #4
   28af0:	str	r0, [sp]
   28af4:	ldr	r0, [sp]
   28af8:	ldr	r0, [r0, #136]	; 0x88
   28afc:	add	sp, sp, #4
   28b00:	bx	lr

00028b04 <flatcc_builder_get_buffer_end@@Base>:
   28b04:	sub	sp, sp, #4
   28b08:	str	r0, [sp]
   28b0c:	ldr	r0, [sp]
   28b10:	ldr	r0, [r0, #140]	; 0x8c
   28b14:	add	sp, sp, #4
   28b18:	bx	lr

00028b1c <flatcc_builder_set_vtable_cache_limit@@Base>:
   28b1c:	sub	sp, sp, #8
   28b20:	str	r0, [sp, #4]
   28b24:	str	r1, [sp]
   28b28:	ldr	r0, [sp]
   28b2c:	ldr	r1, [sp, #4]
   28b30:	str	r0, [r1, #172]	; 0xac
   28b34:	add	sp, sp, #8
   28b38:	bx	lr

00028b3c <flatcc_builder_set_identifier@@Base>:
   28b3c:	sub	sp, sp, #16
   28b40:	str	r0, [sp, #12]
   28b44:	str	r1, [sp, #8]
   28b48:	ldr	r0, [sp, #12]
   28b4c:	add	r0, r0, #168	; 0xa8
   28b50:	ldr	r1, [sp, #8]
   28b54:	movw	r2, #0
   28b58:	cmp	r1, r2
   28b5c:	str	r0, [sp, #4]
   28b60:	beq	28b70 <flatcc_builder_set_identifier@@Base+0x34>
   28b64:	ldr	r0, [sp, #8]
   28b68:	str	r0, [sp]
   28b6c:	b	28b80 <flatcc_builder_set_identifier@@Base+0x44>
   28b70:	ldr	r0, [pc, #56]	; 28bb0 <flatcc_builder_set_identifier@@Base+0x74>
   28b74:	ldr	r0, [pc, r0]
   28b78:	str	r0, [sp]
   28b7c:	b	28b80 <flatcc_builder_set_identifier@@Base+0x44>
   28b80:	ldr	r0, [sp]
   28b84:	ldrb	r1, [r0]
   28b88:	ldr	r2, [sp, #4]
   28b8c:	strb	r1, [r2]
   28b90:	ldrb	r1, [r0, #1]
   28b94:	strb	r1, [r2, #1]
   28b98:	ldrb	r1, [r0, #2]
   28b9c:	strb	r1, [r2, #2]
   28ba0:	ldrb	r0, [r0, #3]
   28ba4:	strb	r0, [r2, #3]
   28ba8:	add	sp, sp, #16
   28bac:	bx	lr
   28bb0:	strdeq	fp, [r1], -r4

00028bb4 <flatcc_builder_get_type@@Base>:
   28bb4:	sub	sp, sp, #8
   28bb8:	str	r0, [sp, #4]
   28bbc:	ldr	r0, [sp, #4]
   28bc0:	ldr	r0, [r0, #32]
   28bc4:	movw	r1, #0
   28bc8:	cmp	r0, r1
   28bcc:	beq	28be4 <flatcc_builder_get_type@@Base+0x30>
   28bd0:	ldr	r0, [sp, #4]
   28bd4:	ldr	r0, [r0, #32]
   28bd8:	ldrh	r0, [r0, #14]
   28bdc:	str	r0, [sp]
   28be0:	b	28bf0 <flatcc_builder_get_type@@Base+0x3c>
   28be4:	movw	r0, #0
   28be8:	str	r0, [sp]
   28bec:	b	28bf0 <flatcc_builder_get_type@@Base+0x3c>
   28bf0:	ldr	r0, [sp]
   28bf4:	add	sp, sp, #8
   28bf8:	bx	lr

00028bfc <flatcc_builder_get_type_at@@Base>:
   28bfc:	sub	sp, sp, #12
   28c00:	str	r0, [sp, #4]
   28c04:	str	r1, [sp]
   28c08:	ldr	r0, [sp]
   28c0c:	cmp	r0, #1
   28c10:	blt	28c28 <flatcc_builder_get_type_at@@Base+0x2c>
   28c14:	ldr	r0, [sp]
   28c18:	ldr	r1, [sp, #4]
   28c1c:	ldr	r1, [r1, #156]	; 0x9c
   28c20:	cmp	r0, r1
   28c24:	ble	28c34 <flatcc_builder_get_type_at@@Base+0x38>
   28c28:	movw	r0, #0
   28c2c:	str	r0, [sp, #8]
   28c30:	b	28c60 <flatcc_builder_get_type_at@@Base+0x64>
   28c34:	ldr	r0, [sp, #4]
   28c38:	ldr	r0, [r0, #32]
   28c3c:	ldr	r1, [sp]
   28c40:	ldr	r2, [sp, #4]
   28c44:	ldr	r2, [r2, #156]	; 0x9c
   28c48:	sub	r1, r1, r2
   28c4c:	movw	r2, #36	; 0x24
   28c50:	mul	r1, r1, r2
   28c54:	add	r0, r0, r1
   28c58:	ldrh	r0, [r0, #14]
   28c5c:	str	r0, [sp, #8]
   28c60:	ldr	r0, [sp, #8]
   28c64:	add	sp, sp, #12
   28c68:	bx	lr

00028c6c <flatcc_builder_get_direct_buffer@@Base>:
   28c6c:	push	{fp, lr}
   28c70:	mov	fp, sp
   28c74:	sub	sp, sp, #16
   28c78:	str	r0, [sp, #8]
   28c7c:	str	r1, [sp, #4]
   28c80:	ldr	r0, [sp, #8]
   28c84:	ldr	r0, [r0, #184]	; 0xb8
   28c88:	cmp	r0, #0
   28c8c:	beq	28ca8 <flatcc_builder_get_direct_buffer@@Base+0x3c>
   28c90:	ldr	r0, [sp, #8]
   28c94:	add	r0, r0, #188	; 0xbc
   28c98:	ldr	r1, [sp, #4]
   28c9c:	bl	28cdc <flatcc_builder_get_direct_buffer@@Base+0x70>
   28ca0:	str	r0, [fp, #-4]
   28ca4:	b	28cd0 <flatcc_builder_get_direct_buffer@@Base+0x64>
   28ca8:	ldr	r0, [sp, #4]
   28cac:	movw	r1, #0
   28cb0:	cmp	r0, r1
   28cb4:	beq	28cc4 <flatcc_builder_get_direct_buffer@@Base+0x58>
   28cb8:	ldr	r0, [sp, #4]
   28cbc:	movw	r1, #0
   28cc0:	str	r1, [r0]
   28cc4:	b	28cc8 <flatcc_builder_get_direct_buffer@@Base+0x5c>
   28cc8:	movw	r0, #0
   28ccc:	str	r0, [fp, #-4]
   28cd0:	ldr	r0, [fp, #-4]
   28cd4:	mov	sp, fp
   28cd8:	pop	{fp, pc}
   28cdc:	sub	sp, sp, #12
   28ce0:	str	r0, [sp, #4]
   28ce4:	str	r1, [sp]
   28ce8:	ldr	r0, [sp, #4]
   28cec:	ldr	r0, [r0]
   28cf0:	ldr	r1, [sp, #4]
   28cf4:	ldr	r1, [r1, #4]
   28cf8:	cmp	r0, r1
   28cfc:	bne	28d30 <flatcc_builder_get_direct_buffer@@Base+0xc4>
   28d00:	ldr	r0, [sp]
   28d04:	movw	r1, #0
   28d08:	cmp	r0, r1
   28d0c:	beq	28d20 <flatcc_builder_get_direct_buffer@@Base+0xb4>
   28d10:	ldr	r0, [sp, #4]
   28d14:	ldr	r0, [r0, #24]
   28d18:	ldr	r1, [sp]
   28d1c:	str	r0, [r1]
   28d20:	ldr	r0, [sp, #4]
   28d24:	ldr	r0, [r0, #8]
   28d28:	str	r0, [sp, #8]
   28d2c:	b	28d54 <flatcc_builder_get_direct_buffer@@Base+0xe8>
   28d30:	ldr	r0, [sp]
   28d34:	movw	r1, #0
   28d38:	cmp	r0, r1
   28d3c:	beq	28d4c <flatcc_builder_get_direct_buffer@@Base+0xe0>
   28d40:	ldr	r0, [sp]
   28d44:	movw	r1, #0
   28d48:	str	r1, [r0]
   28d4c:	movw	r0, #0
   28d50:	str	r0, [sp, #8]
   28d54:	ldr	r0, [sp, #8]
   28d58:	add	sp, sp, #12
   28d5c:	bx	lr

00028d60 <flatcc_builder_copy_buffer@@Base>:
   28d60:	push	{fp, lr}
   28d64:	mov	fp, sp
   28d68:	sub	sp, sp, #16
   28d6c:	str	r0, [sp, #8]
   28d70:	str	r1, [sp, #4]
   28d74:	str	r2, [sp]
   28d78:	ldr	r0, [sp, #8]
   28d7c:	ldr	r0, [r0, #184]	; 0xb8
   28d80:	cmp	r0, #0
   28d84:	bne	28d94 <flatcc_builder_copy_buffer@@Base+0x34>
   28d88:	movw	r0, #0
   28d8c:	str	r0, [fp, #-4]
   28d90:	b	28de8 <flatcc_builder_copy_buffer@@Base+0x88>
   28d94:	ldr	r0, [sp, #8]
   28d98:	add	r0, r0, #188	; 0xbc
   28d9c:	ldr	r1, [sp, #4]
   28da0:	ldr	r2, [sp]
   28da4:	bl	29a54 <flatcc_emitter_copy_buffer@@Base>
   28da8:	str	r0, [sp, #4]
   28dac:	ldr	r0, [sp, #4]
   28db0:	movw	r1, #0
   28db4:	cmp	r0, r1
   28db8:	beq	28dc0 <flatcc_builder_copy_buffer@@Base+0x60>
   28dbc:	b	28de0 <flatcc_builder_copy_buffer@@Base+0x80>
   28dc0:	ldr	r0, [pc, #44]	; 28df4 <flatcc_builder_copy_buffer@@Base+0x94>
   28dc4:	add	r0, pc, r0
   28dc8:	ldr	r1, [pc, #40]	; 28df8 <flatcc_builder_copy_buffer@@Base+0x98>
   28dcc:	add	r1, pc, r1
   28dd0:	ldr	r2, [pc, #36]	; 28dfc <flatcc_builder_copy_buffer@@Base+0x9c>
   28dd4:	add	r3, pc, r2
   28dd8:	movw	r2, #1926	; 0x786
   28ddc:	bl	12b80 <__assert_fail@plt>
   28de0:	ldr	r0, [sp, #4]
   28de4:	str	r0, [fp, #-4]
   28de8:	ldr	r0, [fp, #-4]
   28dec:	mov	sp, fp
   28df0:	pop	{fp, pc}
   28df4:	andeq	r8, r0, sp, lsr #18
   28df8:			; <UNDEFINED> instruction: 0x000086ba
   28dfc:	andeq	r9, r0, r1, lsr #12

00028e00 <flatcc_builder_finalize_buffer@@Base>:
   28e00:	push	{fp, lr}
   28e04:	mov	fp, sp
   28e08:	sub	sp, sp, #16
   28e0c:	str	r0, [fp, #-4]
   28e10:	str	r1, [sp, #8]
   28e14:	ldr	r0, [fp, #-4]
   28e18:	bl	28ac8 <flatcc_builder_get_buffer_size@@Base>
   28e1c:	str	r0, [sp]
   28e20:	ldr	r0, [sp, #8]
   28e24:	movw	r1, #0
   28e28:	cmp	r0, r1
   28e2c:	beq	28e3c <flatcc_builder_finalize_buffer@@Base+0x3c>
   28e30:	ldr	r0, [sp]
   28e34:	ldr	r1, [sp, #8]
   28e38:	str	r0, [r1]
   28e3c:	ldr	r0, [sp]
   28e40:	bl	12ad8 <malloc@plt>
   28e44:	str	r0, [sp, #4]
   28e48:	ldr	r0, [sp, #4]
   28e4c:	movw	lr, #0
   28e50:	cmp	r0, lr
   28e54:	bne	28e78 <flatcc_builder_finalize_buffer@@Base+0x78>
   28e58:	ldr	r0, [pc, #144]	; 28ef0 <flatcc_builder_finalize_buffer@@Base+0xf0>
   28e5c:	add	r0, pc, r0
   28e60:	ldr	r1, [pc, #140]	; 28ef4 <flatcc_builder_finalize_buffer@@Base+0xf4>
   28e64:	add	r1, pc, r1
   28e68:	ldr	r2, [pc, #136]	; 28ef8 <flatcc_builder_finalize_buffer@@Base+0xf8>
   28e6c:	add	r3, pc, r2
   28e70:	movw	r2, #1944	; 0x798
   28e74:	bl	12b80 <__assert_fail@plt>
   28e78:	ldr	r0, [fp, #-4]
   28e7c:	ldr	r1, [sp, #4]
   28e80:	ldr	r2, [sp]
   28e84:	bl	28d60 <flatcc_builder_copy_buffer@@Base>
   28e88:	movw	r1, #0
   28e8c:	cmp	r0, r1
   28e90:	bne	28eb4 <flatcc_builder_finalize_buffer@@Base+0xb4>
   28e94:	ldr	r0, [pc, #96]	; 28efc <flatcc_builder_finalize_buffer@@Base+0xfc>
   28e98:	add	r0, pc, r0
   28e9c:	ldr	r1, [pc, #92]	; 28f00 <flatcc_builder_finalize_buffer@@Base+0x100>
   28ea0:	add	r1, pc, r1
   28ea4:	ldr	r2, [pc, #88]	; 28f04 <flatcc_builder_finalize_buffer@@Base+0x104>
   28ea8:	add	r3, pc, r2
   28eac:	movw	r2, #1948	; 0x79c
   28eb0:	bl	12b80 <__assert_fail@plt>
   28eb4:	b	28eb8 <flatcc_builder_finalize_buffer@@Base+0xb8>
   28eb8:	ldr	r0, [sp, #4]
   28ebc:	movw	r1, #0
   28ec0:	cmp	r0, r1
   28ec4:	bne	28ee4 <flatcc_builder_finalize_buffer@@Base+0xe4>
   28ec8:	ldr	r0, [sp, #8]
   28ecc:	movw	r1, #0
   28ed0:	cmp	r0, r1
   28ed4:	beq	28ee4 <flatcc_builder_finalize_buffer@@Base+0xe4>
   28ed8:	ldr	r0, [sp, #8]
   28edc:	movw	r1, #0
   28ee0:	str	r1, [r0]
   28ee4:	ldr	r0, [sp, #4]
   28ee8:	mov	sp, fp
   28eec:	pop	{fp, pc}
   28ef0:	andeq	r9, r0, r7, ror #15
   28ef4:	andeq	r8, r0, r2, lsr #12
   28ef8:	andeq	r9, r0, lr, asr #11
   28efc:	andeq	r9, r0, fp, lsr #15
   28f00:	andeq	r8, r0, r6, ror #11
   28f04:	muleq	r0, r2, r5

00028f08 <flatcc_builder_finalize_aligned_buffer@@Base>:
   28f08:	push	{fp, lr}
   28f0c:	mov	fp, sp
   28f10:	sub	sp, sp, #24
   28f14:	str	r0, [fp, #-4]
   28f18:	str	r1, [fp, #-8]
   28f1c:	ldr	r0, [fp, #-4]
   28f20:	bl	28ac8 <flatcc_builder_get_buffer_size@@Base>
   28f24:	str	r0, [sp, #4]
   28f28:	ldr	r0, [fp, #-8]
   28f2c:	movw	r1, #0
   28f30:	cmp	r0, r1
   28f34:	beq	28f44 <flatcc_builder_finalize_aligned_buffer@@Base+0x3c>
   28f38:	ldr	r0, [sp, #4]
   28f3c:	ldr	r1, [fp, #-8]
   28f40:	str	r0, [r1]
   28f44:	ldr	r0, [fp, #-4]
   28f48:	bl	289f8 <flatcc_builder_get_buffer_alignment@@Base>
   28f4c:	uxth	r0, r0
   28f50:	str	r0, [sp, #8]
   28f54:	ldr	r0, [sp, #4]
   28f58:	ldr	lr, [sp, #8]
   28f5c:	add	r0, r0, lr
   28f60:	sub	r0, r0, #1
   28f64:	ldr	lr, [sp, #8]
   28f68:	sub	lr, lr, #1
   28f6c:	mvn	r1, #0
   28f70:	eor	r1, lr, r1
   28f74:	and	r0, r0, r1
   28f78:	str	r0, [sp, #4]
   28f7c:	ldr	r0, [sp, #8]
   28f80:	ldr	r1, [sp, #4]
   28f84:	bl	2900c <flatcc_builder_finalize_aligned_buffer@@Base+0x104>
   28f88:	str	r0, [sp, #12]
   28f8c:	ldr	r0, [sp, #12]
   28f90:	movw	r1, #0
   28f94:	cmp	r0, r1
   28f98:	bne	28fa0 <flatcc_builder_finalize_aligned_buffer@@Base+0x98>
   28f9c:	b	28fd4 <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
   28fa0:	ldr	r0, [fp, #-4]
   28fa4:	ldr	r1, [sp, #12]
   28fa8:	ldr	r2, [sp, #4]
   28fac:	bl	28d60 <flatcc_builder_copy_buffer@@Base>
   28fb0:	movw	r1, #0
   28fb4:	cmp	r0, r1
   28fb8:	bne	28fd0 <flatcc_builder_finalize_aligned_buffer@@Base+0xc8>
   28fbc:	ldr	r0, [sp, #12]
   28fc0:	bl	12a6c <free@plt>
   28fc4:	movw	r0, #0
   28fc8:	str	r0, [sp, #12]
   28fcc:	b	28fd4 <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
   28fd0:	b	28fd4 <flatcc_builder_finalize_aligned_buffer@@Base+0xcc>
   28fd4:	ldr	r0, [sp, #12]
   28fd8:	movw	r1, #0
   28fdc:	cmp	r0, r1
   28fe0:	bne	29000 <flatcc_builder_finalize_aligned_buffer@@Base+0xf8>
   28fe4:	ldr	r0, [fp, #-8]
   28fe8:	movw	r1, #0
   28fec:	cmp	r0, r1
   28ff0:	beq	29000 <flatcc_builder_finalize_aligned_buffer@@Base+0xf8>
   28ff4:	ldr	r0, [fp, #-8]
   28ff8:	movw	r1, #0
   28ffc:	str	r1, [r0]
   29000:	ldr	r0, [sp, #12]
   29004:	mov	sp, fp
   29008:	pop	{fp, pc}
   2900c:	push	{fp, lr}
   29010:	mov	fp, sp
   29014:	sub	sp, sp, #16
   29018:	str	r0, [fp, #-4]
   2901c:	str	r1, [sp, #8]
   29020:	movw	r0, #0
   29024:	str	r0, [sp]
   29028:	ldr	r0, [fp, #-4]
   2902c:	cmp	r0, #4
   29030:	bcs	2903c <flatcc_builder_finalize_aligned_buffer@@Base+0x134>
   29034:	movw	r0, #4
   29038:	str	r0, [fp, #-4]
   2903c:	ldr	r1, [fp, #-4]
   29040:	ldr	r2, [sp, #8]
   29044:	mov	r0, sp
   29048:	bl	12b20 <posix_memalign@plt>
   2904c:	str	r0, [sp, #4]
   29050:	ldr	r0, [sp, #4]
   29054:	cmp	r0, #0
   29058:	beq	2907c <flatcc_builder_finalize_aligned_buffer@@Base+0x174>
   2905c:	ldr	r0, [sp]
   29060:	movw	r1, #0
   29064:	cmp	r0, r1
   29068:	beq	2907c <flatcc_builder_finalize_aligned_buffer@@Base+0x174>
   2906c:	ldr	r0, [sp]
   29070:	bl	12a6c <free@plt>
   29074:	movw	r0, #0
   29078:	str	r0, [sp]
   2907c:	ldr	r0, [sp]
   29080:	mov	sp, fp
   29084:	pop	{fp, pc}

00029088 <flatcc_builder_aligned_alloc@@Base>:
   29088:	push	{fp, lr}
   2908c:	mov	fp, sp
   29090:	sub	sp, sp, #8
   29094:	str	r0, [sp, #4]
   29098:	str	r1, [sp]
   2909c:	ldr	r0, [sp, #4]
   290a0:	ldr	r1, [sp]
   290a4:	bl	2900c <flatcc_builder_finalize_aligned_buffer@@Base+0x104>
   290a8:	mov	sp, fp
   290ac:	pop	{fp, pc}

000290b0 <flatcc_builder_aligned_free@@Base>:
   290b0:	push	{fp, lr}
   290b4:	mov	fp, sp
   290b8:	sub	sp, sp, #8
   290bc:	str	r0, [sp, #4]
   290c0:	ldr	r0, [sp, #4]
   290c4:	bl	12a6c <free@plt>
   290c8:	mov	sp, fp
   290cc:	pop	{fp, pc}

000290d0 <flatcc_builder_get_emit_context@@Base>:
   290d0:	sub	sp, sp, #4
   290d4:	str	r0, [sp]
   290d8:	ldr	r0, [sp]
   290dc:	ldr	r0, [r0, #36]	; 0x24
   290e0:	add	sp, sp, #4
   290e4:	bx	lr
   290e8:	sub	sp, sp, #8
   290ec:	str	r0, [sp, #4]
   290f0:	strh	r1, [sp, #2]
   290f4:	ldr	r0, [sp, #4]
   290f8:	ldr	r0, [r0, #140]	; 0x8c
   290fc:	ldrh	r1, [sp, #2]
   29100:	sub	r1, r1, #1
   29104:	and	r0, r0, r1
   29108:	add	sp, sp, #8
   2910c:	bx	lr
   29110:	push	{fp, lr}
   29114:	mov	fp, sp
   29118:	sub	sp, sp, #32
   2911c:	str	r0, [fp, #-8]
   29120:	str	r1, [fp, #-12]
   29124:	str	r2, [sp, #16]
   29128:	ldr	r0, [fp, #-8]
   2912c:	add	r0, r0, #52	; 0x34
   29130:	add	r0, r0, #8
   29134:	str	r0, [sp, #12]
   29138:	ldr	r0, [fp, #-8]
   2913c:	ldr	r0, [r0, #48]	; 0x30
   29140:	ldr	r1, [fp, #-8]
   29144:	ldr	r1, [r1, #40]	; 0x28
   29148:	ldr	r2, [sp, #12]
   2914c:	ldr	r3, [fp, #-8]
   29150:	ldr	r3, [r3, #28]
   29154:	ldr	ip, [fp, #-12]
   29158:	add	r3, r3, ip
   2915c:	str	r0, [sp, #8]
   29160:	mov	r0, r1
   29164:	mov	r1, r2
   29168:	mov	r2, r3
   2916c:	movw	r3, #1
   29170:	str	r3, [sp, #4]
   29174:	ldr	ip, [sp, #4]
   29178:	str	ip, [sp]
   2917c:	ldr	lr, [sp, #8]
   29180:	blx	lr
   29184:	cmp	r0, #0
   29188:	beq	29198 <flatcc_builder_get_emit_context@@Base+0xc8>
   2918c:	mvn	r0, #0
   29190:	str	r0, [fp, #-4]
   29194:	b	291ac <flatcc_builder_get_emit_context@@Base+0xdc>
   29198:	ldr	r0, [fp, #-8]
   2919c:	ldr	r1, [sp, #16]
   291a0:	bl	24f14 <flatcc_builder_start_struct@@Base+0x70>
   291a4:	movw	r0, #0
   291a8:	str	r0, [fp, #-4]
   291ac:	ldr	r0, [fp, #-4]
   291b0:	mov	sp, fp
   291b4:	pop	{fp, pc}
   291b8:	push	{fp, lr}
   291bc:	mov	fp, sp
   291c0:	sub	sp, sp, #32
   291c4:	str	r0, [fp, #-8]
   291c8:	ldr	r0, [fp, #-8]
   291cc:	add	r0, r0, #52	; 0x34
   291d0:	add	r0, r0, #40	; 0x28
   291d4:	str	r0, [fp, #-12]
   291d8:	ldr	r0, [fp, #-8]
   291dc:	ldr	r0, [r0, #124]	; 0x7c
   291e0:	cmp	r0, #0
   291e4:	bne	291ec <flatcc_builder_get_emit_context@@Base+0x11c>
   291e8:	b	2920c <flatcc_builder_get_emit_context@@Base+0x13c>
   291ec:	ldr	r0, [pc, #320]	; 29334 <flatcc_builder_get_emit_context@@Base+0x264>
   291f0:	add	r0, pc, r0
   291f4:	ldr	r1, [pc, #316]	; 29338 <flatcc_builder_get_emit_context@@Base+0x268>
   291f8:	add	r1, pc, r1
   291fc:	ldr	r2, [pc, #312]	; 2933c <flatcc_builder_get_emit_context@@Base+0x26c>
   29200:	add	r3, pc, r2
   29204:	movw	r2, #342	; 0x156
   29208:	bl	12b80 <__assert_fail@plt>
   2920c:	ldr	r0, [fp, #-8]
   29210:	ldr	r1, [fp, #-8]
   29214:	ldr	r2, [r1, #124]	; 0x7c
   29218:	movw	r1, #6
   2921c:	movw	r3, #16
   29220:	movw	ip, #0
   29224:	str	ip, [sp]
   29228:	bl	23c3c <flatcc_builder_enter_user_frame_ptr@@Base+0xd4>
   2922c:	movw	r1, #0
   29230:	cmp	r0, r1
   29234:	bne	29244 <flatcc_builder_get_emit_context@@Base+0x174>
   29238:	mvn	r0, #0
   2923c:	str	r0, [fp, #-4]
   29240:	b	29328 <flatcc_builder_get_emit_context@@Base+0x258>
   29244:	ldr	r0, [fp, #-8]
   29248:	movw	r1, #16
   2924c:	str	r1, [r0, #124]	; 0x7c
   29250:	movw	r0, #256	; 0x100
   29254:	str	r0, [sp, #16]
   29258:	ldr	r0, [fp, #-8]
   2925c:	ldr	r0, [r0, #48]	; 0x30
   29260:	ldr	r1, [fp, #-8]
   29264:	ldr	r1, [r1, #40]	; 0x28
   29268:	ldr	r2, [fp, #-12]
   2926c:	ldr	r3, [sp, #16]
   29270:	str	r0, [sp, #8]
   29274:	mov	r0, r1
   29278:	mov	r1, r2
   2927c:	mov	r2, r3
   29280:	movw	r3, #1
   29284:	movw	ip, #5
   29288:	str	ip, [sp]
   2928c:	ldr	ip, [sp, #8]
   29290:	blx	ip
   29294:	cmp	r0, #0
   29298:	beq	292a8 <flatcc_builder_get_emit_context@@Base+0x1d8>
   2929c:	mvn	r0, #0
   292a0:	str	r0, [fp, #-4]
   292a4:	b	29328 <flatcc_builder_get_emit_context@@Base+0x258>
   292a8:	b	292ac <flatcc_builder_get_emit_context@@Base+0x1dc>
   292ac:	ldr	r0, [sp, #16]
   292b0:	lsl	r0, r0, #1
   292b4:	ldr	r1, [fp, #-12]
   292b8:	ldr	r1, [r1, #4]
   292bc:	cmp	r0, r1
   292c0:	bhi	292d4 <flatcc_builder_get_emit_context@@Base+0x204>
   292c4:	ldr	r0, [sp, #16]
   292c8:	lsl	r0, r0, #1
   292cc:	str	r0, [sp, #16]
   292d0:	b	292ac <flatcc_builder_get_emit_context@@Base+0x1dc>
   292d4:	ldr	r0, [sp, #16]
   292d8:	lsr	r0, r0, #2
   292dc:	str	r0, [sp, #16]
   292e0:	movw	r0, #0
   292e4:	str	r0, [sp, #12]
   292e8:	ldr	r0, [sp, #12]
   292ec:	movw	r1, #1
   292f0:	lsl	r0, r1, r0
   292f4:	ldr	r1, [sp, #16]
   292f8:	cmp	r0, r1
   292fc:	bcs	29314 <flatcc_builder_get_emit_context@@Base+0x244>
   29300:	b	29304 <flatcc_builder_get_emit_context@@Base+0x234>
   29304:	ldr	r0, [sp, #12]
   29308:	add	r0, r0, #1
   2930c:	str	r0, [sp, #12]
   29310:	b	292e8 <flatcc_builder_get_emit_context@@Base+0x218>
   29314:	ldr	r0, [sp, #12]
   29318:	ldr	r1, [fp, #-8]
   2931c:	str	r0, [r1, #116]	; 0x74
   29320:	movw	r0, #0
   29324:	str	r0, [fp, #-4]
   29328:	ldr	r0, [fp, #-4]
   2932c:	mov	sp, fp
   29330:	pop	{fp, pc}
   29334:	andeq	r9, r0, r7, lsl r4
   29338:	andeq	r8, r0, lr, lsl #5
   2933c:	andeq	r9, r0, r6, lsl r4

00029340 <flatcc_emitter_recycle_page@@Base>:
   29340:	sub	sp, sp, #12
   29344:	str	r0, [sp, #4]
   29348:	str	r1, [sp]
   2934c:	ldr	r0, [sp]
   29350:	ldr	r1, [sp, #4]
   29354:	ldr	r1, [r1]
   29358:	cmp	r0, r1
   2935c:	beq	29374 <flatcc_emitter_recycle_page@@Base+0x34>
   29360:	ldr	r0, [sp]
   29364:	ldr	r1, [sp, #4]
   29368:	ldr	r1, [r1, #4]
   2936c:	cmp	r0, r1
   29370:	bne	29380 <flatcc_emitter_recycle_page@@Base+0x40>
   29374:	mvn	r0, #0
   29378:	str	r0, [sp, #8]
   2937c:	b	293f4 <flatcc_emitter_recycle_page@@Base+0xb4>
   29380:	ldr	r0, [sp]
   29384:	ldr	r0, [r0, #2948]	; 0xb84
   29388:	ldr	r1, [sp]
   2938c:	ldr	r1, [r1, #2944]	; 0xb80
   29390:	str	r0, [r1, #2948]	; 0xb84
   29394:	ldr	r0, [sp]
   29398:	ldr	r0, [r0, #2944]	; 0xb80
   2939c:	ldr	r1, [sp]
   293a0:	ldr	r1, [r1, #2948]	; 0xb84
   293a4:	str	r0, [r1, #2944]	; 0xb80
   293a8:	ldr	r0, [sp, #4]
   293ac:	ldr	r0, [r0]
   293b0:	ldr	r0, [r0, #2948]	; 0xb84
   293b4:	ldr	r1, [sp]
   293b8:	str	r0, [r1, #2948]	; 0xb84
   293bc:	ldr	r0, [sp, #4]
   293c0:	ldr	r0, [r0]
   293c4:	ldr	r1, [sp]
   293c8:	str	r0, [r1, #2944]	; 0xb80
   293cc:	ldr	r0, [sp]
   293d0:	ldr	r1, [sp]
   293d4:	ldr	r1, [r1, #2948]	; 0xb84
   293d8:	str	r0, [r1, #2944]	; 0xb80
   293dc:	ldr	r0, [sp]
   293e0:	ldr	r1, [sp]
   293e4:	ldr	r1, [r1, #2944]	; 0xb80
   293e8:	str	r0, [r1, #2948]	; 0xb84
   293ec:	movw	r0, #0
   293f0:	str	r0, [sp, #8]
   293f4:	ldr	r0, [sp, #8]
   293f8:	add	sp, sp, #12
   293fc:	bx	lr

00029400 <flatcc_emitter_reset@@Base>:
   29400:	push	{fp, lr}
   29404:	mov	fp, sp
   29408:	sub	sp, sp, #16
   2940c:	str	r0, [fp, #-4]
   29410:	ldr	r0, [fp, #-4]
   29414:	ldr	r0, [r0]
   29418:	str	r0, [sp, #8]
   2941c:	ldr	r0, [fp, #-4]
   29420:	ldr	r0, [r0]
   29424:	movw	r1, #0
   29428:	cmp	r0, r1
   2942c:	bne	29434 <flatcc_emitter_reset@@Base+0x34>
   29430:	b	29590 <flatcc_emitter_reset@@Base+0x190>
   29434:	ldr	r0, [fp, #-4]
   29438:	ldr	r0, [r0]
   2943c:	ldr	r1, [fp, #-4]
   29440:	str	r0, [r1, #4]
   29444:	ldr	r0, [fp, #-4]
   29448:	ldr	r0, [r0]
   2944c:	add	r0, r0, #1472	; 0x5c0
   29450:	ldr	r1, [fp, #-4]
   29454:	str	r0, [r1, #8]
   29458:	ldr	r0, [fp, #-4]
   2945c:	ldr	r0, [r0, #8]
   29460:	ldr	r1, [fp, #-4]
   29464:	str	r0, [r1, #16]
   29468:	ldr	r0, [fp, #-4]
   2946c:	movw	r1, #1472	; 0x5c0
   29470:	str	r1, [r0, #12]
   29474:	ldr	r0, [fp, #-4]
   29478:	str	r1, [r0, #20]
   2947c:	ldr	r0, [fp, #-4]
   29480:	ldr	r0, [r0, #12]
   29484:	movw	r1, #0
   29488:	sub	r0, r1, r0
   2948c:	ldr	r1, [fp, #-4]
   29490:	ldr	r1, [r1]
   29494:	str	r0, [r1, #2952]	; 0xb88
   29498:	ldr	r0, [fp, #-4]
   2949c:	ldr	r0, [r0, #32]
   294a0:	cmp	r0, #0
   294a4:	bne	294b8 <flatcc_emitter_reset@@Base+0xb8>
   294a8:	ldr	r0, [fp, #-4]
   294ac:	ldr	r0, [r0, #24]
   294b0:	ldr	r1, [fp, #-4]
   294b4:	str	r0, [r1, #32]
   294b8:	ldr	r0, [fp, #-4]
   294bc:	ldr	r1, [r0, #24]
   294c0:	ldr	r0, [r0, #32]
   294c4:	add	r0, r0, r0, lsl #1
   294c8:	lsr	r0, r0, #2
   294cc:	lsr	r1, r1, #2
   294d0:	add	r0, r0, r1
   294d4:	ldr	r1, [fp, #-4]
   294d8:	str	r0, [r1, #32]
   294dc:	ldr	r0, [fp, #-4]
   294e0:	movw	r1, #0
   294e4:	str	r1, [r0, #24]
   294e8:	ldr	r0, [fp, #-4]
   294ec:	ldr	r0, [r0, #32]
   294f0:	lsl	r0, r0, #1
   294f4:	ldr	r1, [fp, #-4]
   294f8:	ldr	r1, [r1, #28]
   294fc:	cmp	r0, r1
   29500:	movw	r0, #0
   29504:	str	r0, [sp, #4]
   29508:	bcs	29530 <flatcc_emitter_reset@@Base+0x130>
   2950c:	ldr	r0, [fp, #-4]
   29510:	ldr	r0, [r0, #4]
   29514:	ldr	r0, [r0, #2944]	; 0xb80
   29518:	ldr	r1, [fp, #-4]
   2951c:	ldr	r1, [r1]
   29520:	cmp	r0, r1
   29524:	movw	r0, #0
   29528:	movne	r0, #1
   2952c:	str	r0, [sp, #4]
   29530:	ldr	r0, [sp, #4]
   29534:	tst	r0, #1
   29538:	beq	29590 <flatcc_emitter_reset@@Base+0x190>
   2953c:	ldr	r0, [fp, #-4]
   29540:	ldr	r0, [r0, #4]
   29544:	ldr	r0, [r0, #2944]	; 0xb80
   29548:	str	r0, [sp, #8]
   2954c:	ldr	r0, [sp, #8]
   29550:	ldr	r0, [r0, #2944]	; 0xb80
   29554:	ldr	r1, [fp, #-4]
   29558:	ldr	r1, [r1, #4]
   2955c:	str	r0, [r1, #2944]	; 0xb80
   29560:	ldr	r0, [fp, #-4]
   29564:	ldr	r0, [r0, #4]
   29568:	ldr	r1, [sp, #8]
   2956c:	ldr	r1, [r1, #2944]	; 0xb80
   29570:	str	r0, [r1, #2948]	; 0xb84
   29574:	ldr	r0, [sp, #8]
   29578:	bl	12a6c <free@plt>
   2957c:	ldr	r0, [fp, #-4]
   29580:	ldr	r1, [r0, #28]
   29584:	sub	r1, r1, #2944	; 0xb80
   29588:	str	r1, [r0, #28]
   2958c:	b	294e8 <flatcc_emitter_reset@@Base+0xe8>
   29590:	mov	sp, fp
   29594:	pop	{fp, pc}

00029598 <flatcc_emitter_clear@@Base>:
   29598:	push	{fp, lr}
   2959c:	mov	fp, sp
   295a0:	sub	sp, sp, #8
   295a4:	str	r0, [sp, #4]
   295a8:	ldr	r0, [sp, #4]
   295ac:	ldr	r0, [r0]
   295b0:	str	r0, [sp]
   295b4:	ldr	r0, [sp]
   295b8:	movw	r1, #0
   295bc:	cmp	r0, r1
   295c0:	bne	295c8 <flatcc_emitter_clear@@Base+0x30>
   295c4:	b	29624 <flatcc_emitter_clear@@Base+0x8c>
   295c8:	ldr	r0, [sp]
   295cc:	ldr	r0, [r0, #2948]	; 0xb84
   295d0:	movw	r1, #0
   295d4:	str	r1, [r0, #2944]	; 0xb80
   295d8:	ldr	r0, [sp]
   295dc:	ldr	r0, [r0, #2944]	; 0xb80
   295e0:	movw	r1, #0
   295e4:	cmp	r0, r1
   295e8:	beq	29608 <flatcc_emitter_clear@@Base+0x70>
   295ec:	ldr	r0, [sp]
   295f0:	ldr	r0, [r0, #2944]	; 0xb80
   295f4:	str	r0, [sp]
   295f8:	ldr	r0, [sp]
   295fc:	ldr	r0, [r0, #2948]	; 0xb84
   29600:	bl	12a6c <free@plt>
   29604:	b	295d8 <flatcc_emitter_clear@@Base+0x40>
   29608:	ldr	r0, [sp]
   2960c:	bl	12a6c <free@plt>
   29610:	ldr	r0, [sp, #4]
   29614:	movw	lr, #0
   29618:	and	r1, lr, #255	; 0xff
   2961c:	movw	r2, #36	; 0x24
   29620:	bl	12b2c <memset@plt>
   29624:	mov	sp, fp
   29628:	pop	{fp, pc}

0002962c <flatcc_emitter@@Base>:
   2962c:	push	{fp, lr}
   29630:	mov	fp, sp
   29634:	sub	sp, sp, #32
   29638:	ldr	ip, [fp, #8]
   2963c:	str	r0, [fp, #-8]
   29640:	str	r1, [fp, #-12]
   29644:	str	r2, [sp, #16]
   29648:	str	r3, [sp, #12]
   2964c:	ldr	r0, [fp, #-8]
   29650:	str	r0, [sp, #8]
   29654:	ldr	r0, [fp, #8]
   29658:	ldr	r1, [sp, #8]
   2965c:	ldr	r2, [r1, #24]
   29660:	add	r0, r2, r0
   29664:	str	r0, [r1, #24]
   29668:	ldr	r0, [sp, #12]
   2966c:	cmp	r0, #0
   29670:	str	ip, [sp]
   29674:	bge	29738 <flatcc_emitter@@Base+0x10c>
   29678:	ldr	r0, [fp, #8]
   2967c:	ldr	r1, [sp, #8]
   29680:	ldr	r1, [r1, #12]
   29684:	cmp	r0, r1
   29688:	bhi	296cc <flatcc_emitter@@Base+0xa0>
   2968c:	ldr	r0, [fp, #8]
   29690:	ldr	r1, [sp, #8]
   29694:	ldr	r2, [r1, #8]
   29698:	movw	r3, #0
   2969c:	sub	r0, r3, r0
   296a0:	add	r0, r2, r0
   296a4:	str	r0, [r1, #8]
   296a8:	ldr	r0, [fp, #8]
   296ac:	ldr	r1, [sp, #8]
   296b0:	ldr	r2, [r1, #12]
   296b4:	sub	r0, r2, r0
   296b8:	str	r0, [r1, #12]
   296bc:	ldr	r0, [sp, #8]
   296c0:	ldr	r0, [r0, #8]
   296c4:	str	r0, [sp, #4]
   296c8:	b	297ec <flatcc_emitter@@Base+0x1c0>
   296cc:	ldr	r0, [sp, #16]
   296d0:	ldr	r1, [fp, #-12]
   296d4:	add	r0, r1, r0, lsl #3
   296d8:	str	r0, [fp, #-12]
   296dc:	ldr	r0, [sp, #16]
   296e0:	mvn	r1, #0
   296e4:	add	r1, r0, r1
   296e8:	str	r1, [sp, #16]
   296ec:	cmp	r0, #0
   296f0:	beq	29734 <flatcc_emitter@@Base+0x108>
   296f4:	ldr	r0, [fp, #-12]
   296f8:	mvn	r1, #7
   296fc:	add	r0, r0, r1
   29700:	str	r0, [fp, #-12]
   29704:	ldr	r0, [sp, #8]
   29708:	ldr	r1, [fp, #-12]
   2970c:	ldr	r1, [r1]
   29710:	ldr	r2, [fp, #-12]
   29714:	ldr	r2, [r2, #4]
   29718:	bl	29858 <flatcc_emitter@@Base+0x22c>
   2971c:	cmp	r0, #0
   29720:	beq	29730 <flatcc_emitter@@Base+0x104>
   29724:	mvn	r0, #0
   29728:	str	r0, [fp, #-4]
   2972c:	b	2984c <flatcc_emitter@@Base+0x220>
   29730:	b	296dc <flatcc_emitter@@Base+0xb0>
   29734:	b	297e0 <flatcc_emitter@@Base+0x1b4>
   29738:	ldr	r0, [fp, #8]
   2973c:	ldr	r1, [sp, #8]
   29740:	ldr	r1, [r1, #20]
   29744:	cmp	r0, r1
   29748:	bhi	29784 <flatcc_emitter@@Base+0x158>
   2974c:	ldr	r0, [sp, #8]
   29750:	ldr	r0, [r0, #16]
   29754:	str	r0, [sp, #4]
   29758:	ldr	r0, [fp, #8]
   2975c:	ldr	r1, [sp, #8]
   29760:	ldr	r2, [r1, #16]
   29764:	add	r0, r2, r0
   29768:	str	r0, [r1, #16]
   2976c:	ldr	r0, [fp, #8]
   29770:	ldr	r1, [sp, #8]
   29774:	ldr	r2, [r1, #20]
   29778:	sub	r0, r2, r0
   2977c:	str	r0, [r1, #20]
   29780:	b	297ec <flatcc_emitter@@Base+0x1c0>
   29784:	b	29788 <flatcc_emitter@@Base+0x15c>
   29788:	ldr	r0, [sp, #16]
   2978c:	mvn	r1, #0
   29790:	add	r1, r0, r1
   29794:	str	r1, [sp, #16]
   29798:	cmp	r0, #0
   2979c:	beq	297dc <flatcc_emitter@@Base+0x1b0>
   297a0:	ldr	r0, [sp, #8]
   297a4:	ldr	r1, [fp, #-12]
   297a8:	ldr	r1, [r1]
   297ac:	ldr	r2, [fp, #-12]
   297b0:	ldr	r2, [r2, #4]
   297b4:	bl	29964 <flatcc_emitter@@Base+0x338>
   297b8:	cmp	r0, #0
   297bc:	beq	297cc <flatcc_emitter@@Base+0x1a0>
   297c0:	mvn	r0, #0
   297c4:	str	r0, [fp, #-4]
   297c8:	b	2984c <flatcc_emitter@@Base+0x220>
   297cc:	ldr	r0, [fp, #-12]
   297d0:	add	r0, r0, #8
   297d4:	str	r0, [fp, #-12]
   297d8:	b	29788 <flatcc_emitter@@Base+0x15c>
   297dc:	b	297e0 <flatcc_emitter@@Base+0x1b4>
   297e0:	movw	r0, #0
   297e4:	str	r0, [fp, #-4]
   297e8:	b	2984c <flatcc_emitter@@Base+0x220>
   297ec:	b	297f0 <flatcc_emitter@@Base+0x1c4>
   297f0:	ldr	r0, [sp, #16]
   297f4:	mvn	r1, #0
   297f8:	add	r1, r0, r1
   297fc:	str	r1, [sp, #16]
   29800:	cmp	r0, #0
   29804:	beq	29844 <flatcc_emitter@@Base+0x218>
   29808:	ldr	r0, [sp, #4]
   2980c:	ldr	r1, [fp, #-12]
   29810:	ldr	r1, [r1]
   29814:	ldr	r2, [fp, #-12]
   29818:	ldr	r2, [r2, #4]
   2981c:	bl	12a78 <memcpy@plt>
   29820:	ldr	r0, [fp, #-12]
   29824:	ldr	r0, [r0, #4]
   29828:	ldr	r1, [sp, #4]
   2982c:	add	r0, r1, r0
   29830:	str	r0, [sp, #4]
   29834:	ldr	r0, [fp, #-12]
   29838:	add	r0, r0, #8
   2983c:	str	r0, [fp, #-12]
   29840:	b	297f0 <flatcc_emitter@@Base+0x1c4>
   29844:	movw	r0, #0
   29848:	str	r0, [fp, #-4]
   2984c:	ldr	r0, [fp, #-4]
   29850:	mov	sp, fp
   29854:	pop	{fp, pc}
   29858:	push	{fp, lr}
   2985c:	mov	fp, sp
   29860:	sub	sp, sp, #24
   29864:	str	r0, [fp, #-8]
   29868:	str	r1, [sp, #12]
   2986c:	str	r2, [sp, #8]
   29870:	ldr	r0, [sp, #8]
   29874:	ldr	r1, [sp, #12]
   29878:	add	r0, r1, r0
   2987c:	str	r0, [sp, #12]
   29880:	ldr	r0, [sp, #8]
   29884:	cmp	r0, #0
   29888:	beq	29950 <flatcc_emitter@@Base+0x324>
   2988c:	ldr	r0, [sp, #8]
   29890:	str	r0, [sp, #4]
   29894:	ldr	r0, [sp, #4]
   29898:	ldr	r1, [fp, #-8]
   2989c:	ldr	r1, [r1, #12]
   298a0:	cmp	r0, r1
   298a4:	bls	298e4 <flatcc_emitter@@Base+0x2b8>
   298a8:	ldr	r0, [fp, #-8]
   298ac:	ldr	r0, [r0, #12]
   298b0:	str	r0, [sp, #4]
   298b4:	ldr	r0, [sp, #4]
   298b8:	cmp	r0, #0
   298bc:	bne	298e0 <flatcc_emitter@@Base+0x2b4>
   298c0:	ldr	r0, [fp, #-8]
   298c4:	bl	29ba0 <flatcc_emitter_copy_buffer@@Base+0x14c>
   298c8:	cmp	r0, #0
   298cc:	beq	298dc <flatcc_emitter@@Base+0x2b0>
   298d0:	mvn	r0, #0
   298d4:	str	r0, [fp, #-4]
   298d8:	b	29958 <flatcc_emitter@@Base+0x32c>
   298dc:	b	29880 <flatcc_emitter@@Base+0x254>
   298e0:	b	298e4 <flatcc_emitter@@Base+0x2b8>
   298e4:	ldr	r0, [sp, #4]
   298e8:	ldr	r1, [fp, #-8]
   298ec:	ldr	r2, [r1, #8]
   298f0:	movw	r3, #0
   298f4:	sub	r0, r3, r0
   298f8:	add	r0, r2, r0
   298fc:	str	r0, [r1, #8]
   29900:	ldr	r0, [sp, #4]
   29904:	ldr	r1, [fp, #-8]
   29908:	ldr	r2, [r1, #12]
   2990c:	sub	r0, r2, r0
   29910:	str	r0, [r1, #12]
   29914:	ldr	r0, [sp, #4]
   29918:	ldr	r1, [sp, #12]
   2991c:	sub	r0, r3, r0
   29920:	add	r0, r1, r0
   29924:	str	r0, [sp, #12]
   29928:	ldr	r0, [sp, #4]
   2992c:	ldr	r1, [sp, #8]
   29930:	sub	r0, r1, r0
   29934:	str	r0, [sp, #8]
   29938:	ldr	r0, [fp, #-8]
   2993c:	ldr	r0, [r0, #8]
   29940:	ldr	r1, [sp, #12]
   29944:	ldr	r2, [sp, #4]
   29948:	bl	12a78 <memcpy@plt>
   2994c:	b	29880 <flatcc_emitter@@Base+0x254>
   29950:	movw	r0, #0
   29954:	str	r0, [fp, #-4]
   29958:	ldr	r0, [fp, #-4]
   2995c:	mov	sp, fp
   29960:	pop	{fp, pc}
   29964:	push	{fp, lr}
   29968:	mov	fp, sp
   2996c:	sub	sp, sp, #24
   29970:	str	r0, [fp, #-8]
   29974:	str	r1, [sp, #12]
   29978:	str	r2, [sp, #8]
   2997c:	ldr	r0, [sp, #8]
   29980:	cmp	r0, #0
   29984:	beq	29a40 <flatcc_emitter@@Base+0x414>
   29988:	ldr	r0, [sp, #8]
   2998c:	str	r0, [sp, #4]
   29990:	ldr	r0, [sp, #4]
   29994:	ldr	r1, [fp, #-8]
   29998:	ldr	r1, [r1, #20]
   2999c:	cmp	r0, r1
   299a0:	bls	299e0 <flatcc_emitter@@Base+0x3b4>
   299a4:	ldr	r0, [fp, #-8]
   299a8:	ldr	r0, [r0, #20]
   299ac:	str	r0, [sp, #4]
   299b0:	ldr	r0, [sp, #4]
   299b4:	cmp	r0, #0
   299b8:	bne	299dc <flatcc_emitter@@Base+0x3b0>
   299bc:	ldr	r0, [fp, #-8]
   299c0:	bl	29da0 <flatcc_emitter_copy_buffer@@Base+0x34c>
   299c4:	cmp	r0, #0
   299c8:	beq	299d8 <flatcc_emitter@@Base+0x3ac>
   299cc:	mvn	r0, #0
   299d0:	str	r0, [fp, #-4]
   299d4:	b	29a48 <flatcc_emitter@@Base+0x41c>
   299d8:	b	2997c <flatcc_emitter@@Base+0x350>
   299dc:	b	299e0 <flatcc_emitter@@Base+0x3b4>
   299e0:	ldr	r0, [fp, #-8]
   299e4:	ldr	r0, [r0, #16]
   299e8:	ldr	r1, [sp, #12]
   299ec:	ldr	r2, [sp, #4]
   299f0:	bl	12a78 <memcpy@plt>
   299f4:	ldr	r0, [sp, #4]
   299f8:	ldr	r1, [sp, #8]
   299fc:	sub	r0, r1, r0
   29a00:	str	r0, [sp, #8]
   29a04:	ldr	r0, [sp, #4]
   29a08:	ldr	r1, [sp, #12]
   29a0c:	add	r0, r1, r0
   29a10:	str	r0, [sp, #12]
   29a14:	ldr	r0, [sp, #4]
   29a18:	ldr	r1, [fp, #-8]
   29a1c:	ldr	r2, [r1, #16]
   29a20:	add	r0, r2, r0
   29a24:	str	r0, [r1, #16]
   29a28:	ldr	r0, [sp, #4]
   29a2c:	ldr	r1, [fp, #-8]
   29a30:	ldr	r2, [r1, #20]
   29a34:	sub	r0, r2, r0
   29a38:	str	r0, [r1, #20]
   29a3c:	b	2997c <flatcc_emitter@@Base+0x350>
   29a40:	movw	r0, #0
   29a44:	str	r0, [fp, #-4]
   29a48:	ldr	r0, [fp, #-4]
   29a4c:	mov	sp, fp
   29a50:	pop	{fp, pc}

00029a54 <flatcc_emitter_copy_buffer@@Base>:
   29a54:	push	{fp, lr}
   29a58:	mov	fp, sp
   29a5c:	sub	sp, sp, #24
   29a60:	str	r0, [fp, #-8]
   29a64:	str	r1, [sp, #12]
   29a68:	str	r2, [sp, #8]
   29a6c:	ldr	r0, [sp, #8]
   29a70:	ldr	r1, [fp, #-8]
   29a74:	ldr	r1, [r1, #24]
   29a78:	cmp	r0, r1
   29a7c:	bcs	29a8c <flatcc_emitter_copy_buffer@@Base+0x38>
   29a80:	movw	r0, #0
   29a84:	str	r0, [fp, #-4]
   29a88:	b	29b94 <flatcc_emitter_copy_buffer@@Base+0x140>
   29a8c:	ldr	r0, [fp, #-8]
   29a90:	ldr	r0, [r0]
   29a94:	movw	r1, #0
   29a98:	cmp	r0, r1
   29a9c:	bne	29aac <flatcc_emitter_copy_buffer@@Base+0x58>
   29aa0:	movw	r0, #0
   29aa4:	str	r0, [fp, #-4]
   29aa8:	b	29b94 <flatcc_emitter_copy_buffer@@Base+0x140>
   29aac:	ldr	r0, [fp, #-8]
   29ab0:	ldr	r0, [r0]
   29ab4:	ldr	r1, [fp, #-8]
   29ab8:	ldr	r1, [r1, #4]
   29abc:	cmp	r0, r1
   29ac0:	bne	29ae8 <flatcc_emitter_copy_buffer@@Base+0x94>
   29ac4:	ldr	r0, [sp, #12]
   29ac8:	ldr	r1, [fp, #-8]
   29acc:	ldr	r1, [r1, #8]
   29ad0:	ldr	r2, [fp, #-8]
   29ad4:	ldr	r2, [r2, #24]
   29ad8:	bl	12a78 <memcpy@plt>
   29adc:	ldr	r0, [sp, #12]
   29ae0:	str	r0, [fp, #-4]
   29ae4:	b	29b94 <flatcc_emitter_copy_buffer@@Base+0x140>
   29ae8:	ldr	r0, [fp, #-8]
   29aec:	ldr	r0, [r0, #12]
   29af0:	movw	r1, #2944	; 0xb80
   29af4:	sub	r0, r1, r0
   29af8:	str	r0, [sp]
   29afc:	ldr	r0, [sp, #12]
   29b00:	ldr	r1, [fp, #-8]
   29b04:	ldr	r1, [r1, #8]
   29b08:	ldr	r2, [sp]
   29b0c:	bl	12a78 <memcpy@plt>
   29b10:	ldr	r0, [sp, #12]
   29b14:	ldr	r1, [sp]
   29b18:	add	r0, r0, r1
   29b1c:	str	r0, [sp, #12]
   29b20:	ldr	r0, [fp, #-8]
   29b24:	ldr	r0, [r0]
   29b28:	ldr	r0, [r0, #2944]	; 0xb80
   29b2c:	str	r0, [sp, #4]
   29b30:	ldr	r0, [sp, #4]
   29b34:	ldr	r1, [fp, #-8]
   29b38:	ldr	r1, [r1, #4]
   29b3c:	cmp	r0, r1
   29b40:	beq	29b70 <flatcc_emitter_copy_buffer@@Base+0x11c>
   29b44:	ldr	r0, [sp, #12]
   29b48:	ldr	r1, [sp, #4]
   29b4c:	movw	r2, #2944	; 0xb80
   29b50:	bl	12a78 <memcpy@plt>
   29b54:	ldr	r0, [sp, #12]
   29b58:	add	r0, r0, #2944	; 0xb80
   29b5c:	str	r0, [sp, #12]
   29b60:	ldr	r0, [sp, #4]
   29b64:	ldr	r0, [r0, #2944]	; 0xb80
   29b68:	str	r0, [sp, #4]
   29b6c:	b	29b30 <flatcc_emitter_copy_buffer@@Base+0xdc>
   29b70:	ldr	r0, [sp, #12]
   29b74:	ldr	r1, [sp, #4]
   29b78:	ldr	r2, [fp, #-8]
   29b7c:	ldr	r2, [r2, #20]
   29b80:	movw	r3, #2944	; 0xb80
   29b84:	sub	r2, r3, r2
   29b88:	bl	12a78 <memcpy@plt>
   29b8c:	ldr	r0, [sp, #12]
   29b90:	str	r0, [fp, #-4]
   29b94:	ldr	r0, [fp, #-4]
   29b98:	mov	sp, fp
   29b9c:	pop	{fp, pc}
   29ba0:	push	{fp, lr}
   29ba4:	mov	fp, sp
   29ba8:	sub	sp, sp, #16
   29bac:	str	r0, [sp, #8]
   29bb0:	movw	r0, #0
   29bb4:	str	r0, [sp, #4]
   29bb8:	ldr	r1, [sp, #8]
   29bbc:	ldr	r1, [r1]
   29bc0:	cmp	r1, r0
   29bc4:	beq	29c1c <flatcc_emitter_copy_buffer@@Base+0x1c8>
   29bc8:	ldr	r0, [sp, #8]
   29bcc:	ldr	r0, [r0]
   29bd0:	ldr	r0, [r0, #2948]	; 0xb84
   29bd4:	ldr	r1, [sp, #8]
   29bd8:	ldr	r1, [r1, #4]
   29bdc:	cmp	r0, r1
   29be0:	beq	29c1c <flatcc_emitter_copy_buffer@@Base+0x1c8>
   29be4:	ldr	r0, [sp, #8]
   29be8:	ldr	r0, [r0]
   29bec:	ldr	r0, [r0, #2952]	; 0xb88
   29bf0:	sub	r0, r0, #2944	; 0xb80
   29bf4:	ldr	r1, [sp, #8]
   29bf8:	ldr	r1, [r1]
   29bfc:	ldr	r1, [r1, #2948]	; 0xb84
   29c00:	str	r0, [r1, #2952]	; 0xb88
   29c04:	ldr	r0, [sp, #8]
   29c08:	ldr	r0, [r0]
   29c0c:	ldr	r0, [r0, #2948]	; 0xb84
   29c10:	ldr	r1, [sp, #8]
   29c14:	str	r0, [r1]
   29c18:	b	29d4c <flatcc_emitter_copy_buffer@@Base+0x2f8>
   29c1c:	movw	r0, #2956	; 0xb8c
   29c20:	bl	12ad8 <malloc@plt>
   29c24:	str	r0, [sp, #4]
   29c28:	movw	lr, #0
   29c2c:	cmp	r0, lr
   29c30:	bne	29c40 <flatcc_emitter_copy_buffer@@Base+0x1ec>
   29c34:	mvn	r0, #0
   29c38:	str	r0, [fp, #-4]
   29c3c:	b	29d94 <flatcc_emitter_copy_buffer@@Base+0x340>
   29c40:	ldr	r0, [sp, #8]
   29c44:	ldr	r1, [r0, #28]
   29c48:	add	r1, r1, #2944	; 0xb80
   29c4c:	str	r1, [r0, #28]
   29c50:	ldr	r0, [sp, #8]
   29c54:	ldr	r0, [r0]
   29c58:	movw	r1, #0
   29c5c:	cmp	r0, r1
   29c60:	beq	29cb4 <flatcc_emitter_copy_buffer@@Base+0x260>
   29c64:	ldr	r0, [sp, #8]
   29c68:	ldr	r0, [r0, #4]
   29c6c:	ldr	r1, [sp, #4]
   29c70:	str	r0, [r1, #2948]	; 0xb84
   29c74:	ldr	r0, [sp, #8]
   29c78:	ldr	r0, [r0]
   29c7c:	ldr	r1, [sp, #4]
   29c80:	str	r0, [r1, #2944]	; 0xb80
   29c84:	ldr	r0, [sp, #4]
   29c88:	ldr	r1, [sp, #8]
   29c8c:	ldr	r1, [r1]
   29c90:	str	r0, [r1, #2948]	; 0xb84
   29c94:	ldr	r0, [sp, #4]
   29c98:	ldr	r1, [sp, #8]
   29c9c:	ldr	r1, [r1, #4]
   29ca0:	str	r0, [r1, #2944]	; 0xb80
   29ca4:	ldr	r0, [sp, #4]
   29ca8:	ldr	r1, [sp, #8]
   29cac:	str	r0, [r1]
   29cb0:	b	29d4c <flatcc_emitter_copy_buffer@@Base+0x2f8>
   29cb4:	ldr	r0, [sp, #4]
   29cb8:	ldr	r1, [sp, #8]
   29cbc:	str	r0, [r1]
   29cc0:	ldr	r0, [sp, #4]
   29cc4:	ldr	r1, [sp, #8]
   29cc8:	str	r0, [r1, #4]
   29ccc:	ldr	r0, [sp, #4]
   29cd0:	ldr	r1, [sp, #4]
   29cd4:	str	r0, [r1, #2944]	; 0xb80
   29cd8:	ldr	r0, [sp, #4]
   29cdc:	ldr	r1, [sp, #4]
   29ce0:	str	r0, [r1, #2948]	; 0xb84
   29ce4:	ldr	r0, [sp, #8]
   29ce8:	ldr	r0, [r0]
   29cec:	add	r0, r0, #1472	; 0x5c0
   29cf0:	ldr	r1, [sp, #8]
   29cf4:	str	r0, [r1, #8]
   29cf8:	ldr	r0, [sp, #8]
   29cfc:	ldr	r0, [r0, #8]
   29d00:	ldr	r1, [sp, #8]
   29d04:	str	r0, [r1, #16]
   29d08:	ldr	r0, [sp, #8]
   29d0c:	movw	r1, #1472	; 0x5c0
   29d10:	str	r1, [r0, #12]
   29d14:	ldr	r0, [sp, #8]
   29d18:	ldr	r0, [r0, #12]
   29d1c:	movw	r1, #2944	; 0xb80
   29d20:	sub	r0, r1, r0
   29d24:	ldr	r1, [sp, #8]
   29d28:	str	r0, [r1, #20]
   29d2c:	ldr	r0, [sp, #8]
   29d30:	ldr	r0, [r0, #12]
   29d34:	movw	r1, #0
   29d38:	sub	r0, r1, r0
   29d3c:	ldr	r2, [sp, #4]
   29d40:	str	r0, [r2, #2952]	; 0xb88
   29d44:	str	r1, [fp, #-4]
   29d48:	b	29d94 <flatcc_emitter_copy_buffer@@Base+0x340>
   29d4c:	ldr	r0, [sp, #8]
   29d50:	ldr	r0, [r0]
   29d54:	add	r0, r0, #2944	; 0xb80
   29d58:	ldr	r1, [sp, #8]
   29d5c:	str	r0, [r1, #8]
   29d60:	ldr	r0, [sp, #8]
   29d64:	movw	r1, #2944	; 0xb80
   29d68:	str	r1, [r0, #12]
   29d6c:	ldr	r0, [sp, #8]
   29d70:	ldr	r0, [r0]
   29d74:	ldr	r0, [r0, #2944]	; 0xb80
   29d78:	ldr	r0, [r0, #2952]	; 0xb88
   29d7c:	sub	r0, r0, #2944	; 0xb80
   29d80:	ldr	r1, [sp, #8]
   29d84:	ldr	r1, [r1]
   29d88:	str	r0, [r1, #2952]	; 0xb88
   29d8c:	movw	r0, #0
   29d90:	str	r0, [fp, #-4]
   29d94:	ldr	r0, [fp, #-4]
   29d98:	mov	sp, fp
   29d9c:	pop	{fp, pc}
   29da0:	push	{fp, lr}
   29da4:	mov	fp, sp
   29da8:	sub	sp, sp, #16
   29dac:	str	r0, [sp, #8]
   29db0:	movw	r0, #0
   29db4:	str	r0, [sp, #4]
   29db8:	ldr	r1, [sp, #8]
   29dbc:	ldr	r1, [r1, #4]
   29dc0:	cmp	r1, r0
   29dc4:	beq	29dfc <flatcc_emitter_copy_buffer@@Base+0x3a8>
   29dc8:	ldr	r0, [sp, #8]
   29dcc:	ldr	r0, [r0, #4]
   29dd0:	ldr	r0, [r0, #2944]	; 0xb80
   29dd4:	ldr	r1, [sp, #8]
   29dd8:	ldr	r1, [r1]
   29ddc:	cmp	r0, r1
   29de0:	beq	29dfc <flatcc_emitter_copy_buffer@@Base+0x3a8>
   29de4:	ldr	r0, [sp, #8]
   29de8:	ldr	r0, [r0, #4]
   29dec:	ldr	r0, [r0, #2944]	; 0xb80
   29df0:	ldr	r1, [sp, #8]
   29df4:	str	r0, [r1, #4]
   29df8:	b	29f2c <flatcc_emitter_copy_buffer@@Base+0x4d8>
   29dfc:	movw	r0, #2956	; 0xb8c
   29e00:	bl	12ad8 <malloc@plt>
   29e04:	str	r0, [sp, #4]
   29e08:	movw	lr, #0
   29e0c:	cmp	r0, lr
   29e10:	bne	29e20 <flatcc_emitter_copy_buffer@@Base+0x3cc>
   29e14:	mvn	r0, #0
   29e18:	str	r0, [fp, #-4]
   29e1c:	b	29f70 <flatcc_emitter_copy_buffer@@Base+0x51c>
   29e20:	ldr	r0, [sp, #8]
   29e24:	ldr	r1, [r0, #28]
   29e28:	add	r1, r1, #2944	; 0xb80
   29e2c:	str	r1, [r0, #28]
   29e30:	ldr	r0, [sp, #8]
   29e34:	ldr	r0, [r0, #4]
   29e38:	movw	r1, #0
   29e3c:	cmp	r0, r1
   29e40:	beq	29e94 <flatcc_emitter_copy_buffer@@Base+0x440>
   29e44:	ldr	r0, [sp, #8]
   29e48:	ldr	r0, [r0, #4]
   29e4c:	ldr	r1, [sp, #4]
   29e50:	str	r0, [r1, #2948]	; 0xb84
   29e54:	ldr	r0, [sp, #8]
   29e58:	ldr	r0, [r0]
   29e5c:	ldr	r1, [sp, #4]
   29e60:	str	r0, [r1, #2944]	; 0xb80
   29e64:	ldr	r0, [sp, #4]
   29e68:	ldr	r1, [sp, #8]
   29e6c:	ldr	r1, [r1]
   29e70:	str	r0, [r1, #2948]	; 0xb84
   29e74:	ldr	r0, [sp, #4]
   29e78:	ldr	r1, [sp, #8]
   29e7c:	ldr	r1, [r1, #4]
   29e80:	str	r0, [r1, #2944]	; 0xb80
   29e84:	ldr	r0, [sp, #4]
   29e88:	ldr	r1, [sp, #8]
   29e8c:	str	r0, [r1, #4]
   29e90:	b	29f2c <flatcc_emitter_copy_buffer@@Base+0x4d8>
   29e94:	ldr	r0, [sp, #4]
   29e98:	ldr	r1, [sp, #8]
   29e9c:	str	r0, [r1]
   29ea0:	ldr	r0, [sp, #4]
   29ea4:	ldr	r1, [sp, #8]
   29ea8:	str	r0, [r1, #4]
   29eac:	ldr	r0, [sp, #4]
   29eb0:	ldr	r1, [sp, #4]
   29eb4:	str	r0, [r1, #2944]	; 0xb80
   29eb8:	ldr	r0, [sp, #4]
   29ebc:	ldr	r1, [sp, #4]
   29ec0:	str	r0, [r1, #2948]	; 0xb84
   29ec4:	ldr	r0, [sp, #8]
   29ec8:	ldr	r0, [r0]
   29ecc:	add	r0, r0, #1472	; 0x5c0
   29ed0:	ldr	r1, [sp, #8]
   29ed4:	str	r0, [r1, #8]
   29ed8:	ldr	r0, [sp, #8]
   29edc:	ldr	r0, [r0, #8]
   29ee0:	ldr	r1, [sp, #8]
   29ee4:	str	r0, [r1, #16]
   29ee8:	ldr	r0, [sp, #8]
   29eec:	movw	r1, #1472	; 0x5c0
   29ef0:	str	r1, [r0, #12]
   29ef4:	ldr	r0, [sp, #8]
   29ef8:	ldr	r0, [r0, #12]
   29efc:	movw	r1, #2944	; 0xb80
   29f00:	sub	r0, r1, r0
   29f04:	ldr	r1, [sp, #8]
   29f08:	str	r0, [r1, #20]
   29f0c:	ldr	r0, [sp, #8]
   29f10:	ldr	r0, [r0, #12]
   29f14:	movw	r1, #0
   29f18:	sub	r0, r1, r0
   29f1c:	ldr	r2, [sp, #4]
   29f20:	str	r0, [r2, #2952]	; 0xb88
   29f24:	str	r1, [fp, #-4]
   29f28:	b	29f70 <flatcc_emitter_copy_buffer@@Base+0x51c>
   29f2c:	ldr	r0, [sp, #8]
   29f30:	ldr	r0, [r0, #4]
   29f34:	ldr	r1, [sp, #8]
   29f38:	str	r0, [r1, #16]
   29f3c:	ldr	r0, [sp, #8]
   29f40:	movw	r1, #2944	; 0xb80
   29f44:	str	r1, [r0, #20]
   29f48:	ldr	r0, [sp, #8]
   29f4c:	ldr	r0, [r0, #4]
   29f50:	ldr	r0, [r0, #2948]	; 0xb84
   29f54:	ldr	r0, [r0, #2952]	; 0xb88
   29f58:	add	r0, r0, #2944	; 0xb80
   29f5c:	ldr	r1, [sp, #8]
   29f60:	ldr	r1, [r1, #4]
   29f64:	str	r0, [r1, #2952]	; 0xb88
   29f68:	movw	r0, #0
   29f6c:	str	r0, [fp, #-4]
   29f70:	ldr	r0, [fp, #-4]
   29f74:	mov	sp, fp
   29f78:	pop	{fp, pc}
   29f7c:	andeq	r0, r0, r0

00029f80 <grisu3_diy_fp_encode_double@@Base>:
   29f80:	push	{r4, r5, r6, sl, fp, lr}
   29f84:	add	fp, sp, #16
   29f88:	sub	sp, sp, #256	; 0x100
   29f8c:	ldr	ip, [fp, #12]
   29f90:	ldr	lr, [fp, #8]
   29f94:	str	r0, [fp, #-24]	; 0xffffffe8
   29f98:	str	r1, [fp, #-20]	; 0xffffffec
   29f9c:	str	r2, [fp, #-28]	; 0xffffffe4
   29fa0:	str	r3, [fp, #-32]	; 0xffffffe0
   29fa4:	mov	r0, #3
   29fa8:	str	r0, [fp, #-36]	; 0xffffffdc
   29fac:	mov	r0, #8
   29fb0:	str	r0, [fp, #-40]	; 0xffffffd8
   29fb4:	movw	r0, #64462	; 0xfbce
   29fb8:	movt	r0, #65535	; 0xffff
   29fbc:	str	r0, [fp, #-44]	; 0xffffffd4
   29fc0:	mov	r0, #1048576	; 0x100000
   29fc4:	str	r0, [fp, #-52]	; 0xffffffcc
   29fc8:	mov	r0, #0
   29fcc:	str	r0, [fp, #-56]	; 0xffffffc8
   29fd0:	mov	r1, #64	; 0x40
   29fd4:	str	r1, [fp, #-60]	; 0xffffffc4
   29fd8:	mov	r1, #19
   29fdc:	str	r1, [fp, #-64]	; 0xffffffc0
   29fe0:	ldr	r1, [fp, #8]
   29fe4:	cmp	r1, #0
   29fe8:	movwne	r1, #1
   29fec:	lsl	r1, r1, #2
   29ff0:	str	r1, [fp, #-68]	; 0xffffffbc
   29ff4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29ff8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   29ffc:	sub	r1, r1, r2
   2a000:	str	r1, [fp, #-72]	; 0xffffffb8
   2a004:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a008:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a00c:	str	r2, [fp, #-92]	; 0xffffffa4
   2a010:	str	r1, [fp, #-96]	; 0xffffffa0
   2a014:	str	r0, [fp, #-88]	; 0xffffffa8
   2a018:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2a01c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2a020:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2a024:	ldr	r1, [fp, #-84]	; 0xffffffac
   2a028:	mov	r4, sp
   2a02c:	str	r0, [r4]
   2a030:	str	r1, [r4, #4]
   2a034:	add	r0, sp, #112	; 0x70
   2a038:	str	lr, [sp, #48]	; 0x30
   2a03c:	str	ip, [sp, #44]	; 0x2c
   2a040:	bl	2a4d8 <grisu3_diy_fp_encode_double@@Base+0x558>
   2a044:	ldr	r0, [sp, #112]	; 0x70
   2a048:	str	r0, [fp, #-96]	; 0xffffffa0
   2a04c:	ldr	r0, [sp, #116]	; 0x74
   2a050:	str	r0, [fp, #-92]	; 0xffffffa4
   2a054:	ldr	r0, [sp, #120]	; 0x78
   2a058:	str	r0, [fp, #-88]	; 0xffffffa8
   2a05c:	ldr	r0, [sp, #124]	; 0x7c
   2a060:	str	r0, [fp, #-84]	; 0xffffffac
   2a064:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2a068:	movw	r1, #0
   2a06c:	sub	r0, r1, r0
   2a070:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2a074:	lsl	r0, r1, r0
   2a078:	str	r0, [fp, #-68]	; 0xffffffbc
   2a07c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2a080:	sub	r1, fp, #112	; 0x70
   2a084:	bl	2a614 <grisu3_diy_fp_encode_double@@Base+0x694>
   2a088:	str	r0, [fp, #-76]	; 0xffffffb4
   2a08c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   2a090:	ldr	r1, [fp, #-72]	; 0xffffffb8
   2a094:	cmp	r0, r1
   2a098:	beq	2a184 <grisu3_diy_fp_encode_double@@Base+0x204>
   2a09c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2a0a0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   2a0a4:	sub	r0, r0, r1
   2a0a8:	sub	r0, r0, #1
   2a0ac:	str	r0, [sp, #108]	; 0x6c
   2a0b0:	ldr	r0, [sp, #108]	; 0x6c
   2a0b4:	cmp	r0, #0
   2a0b8:	blt	2a0cc <grisu3_diy_fp_encode_double@@Base+0x14c>
   2a0bc:	ldr	r0, [sp, #108]	; 0x6c
   2a0c0:	cmp	r0, #7
   2a0c4:	bge	2a0cc <grisu3_diy_fp_encode_double@@Base+0x14c>
   2a0c8:	b	2a0ec <grisu3_diy_fp_encode_double@@Base+0x16c>
   2a0cc:	ldr	r0, [pc, #1004]	; 2a4c0 <grisu3_diy_fp_encode_double@@Base+0x540>
   2a0d0:	add	r0, pc, r0
   2a0d4:	ldr	r1, [pc, #1000]	; 2a4c4 <grisu3_diy_fp_encode_double@@Base+0x544>
   2a0d8:	add	r1, pc, r1
   2a0dc:	ldr	r2, [pc, #996]	; 2a4c8 <grisu3_diy_fp_encode_double@@Base+0x548>
   2a0e0:	add	r3, pc, r2
   2a0e4:	movw	r2, #185	; 0xb9
   2a0e8:	bl	12b80 <__assert_fail@plt>
   2a0ec:	ldr	r0, [sp, #108]	; 0x6c
   2a0f0:	ldr	r1, [pc, #988]	; 2a4d4 <grisu3_diy_fp_encode_double@@Base+0x554>
   2a0f4:	add	r1, pc, r1
   2a0f8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2a0fc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2a100:	ldr	ip, [fp, #-88]	; 0xffffffa8
   2a104:	ldr	lr, [fp, #-84]	; 0xffffffac
   2a108:	ldr	r0, [r1, r0, lsl #4]!
   2a10c:	ldr	r4, [r1, #4]
   2a110:	ldr	r5, [r1, #8]
   2a114:	ldr	r1, [r1, #12]
   2a118:	mov	r6, sp
   2a11c:	str	r4, [r6, #12]
   2a120:	str	r0, [r6, #8]
   2a124:	str	r5, [r6, #16]
   2a128:	str	ip, [r6]
   2a12c:	str	r1, [r6, #20]
   2a130:	str	lr, [r6, #4]
   2a134:	add	r0, sp, #88	; 0x58
   2a138:	bl	2a7bc <grisu3_diy_fp_encode_double@@Base+0x83c>
   2a13c:	ldr	r0, [sp, #88]	; 0x58
   2a140:	str	r0, [fp, #-96]	; 0xffffffa0
   2a144:	ldr	r0, [sp, #92]	; 0x5c
   2a148:	str	r0, [fp, #-92]	; 0xffffffa4
   2a14c:	ldr	r0, [sp, #96]	; 0x60
   2a150:	str	r0, [fp, #-88]	; 0xffffffa8
   2a154:	ldr	r0, [sp, #100]	; 0x64
   2a158:	str	r0, [fp, #-84]	; 0xffffffac
   2a15c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2a160:	add	r0, r0, #1
   2a164:	ldr	r1, [sp, #108]	; 0x6c
   2a168:	add	r0, r0, r1
   2a16c:	cmp	r0, #19
   2a170:	ble	2a180 <grisu3_diy_fp_encode_double@@Base+0x200>
   2a174:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2a178:	add	r0, r0, #4
   2a17c:	str	r0, [fp, #-68]	; 0xffffffbc
   2a180:	b	2a184 <grisu3_diy_fp_encode_double@@Base+0x204>
   2a184:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2a188:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2a18c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2a190:	ldr	r1, [fp, #-84]	; 0xffffffac
   2a194:	ldr	ip, [fp, #-112]	; 0xffffff90
   2a198:	ldr	lr, [fp, #-108]	; 0xffffff94
   2a19c:	ldr	r4, [fp, #-104]	; 0xffffff98
   2a1a0:	ldr	r5, [fp, #-100]	; 0xffffff9c
   2a1a4:	mov	r6, sp
   2a1a8:	str	r5, [r6, #20]
   2a1ac:	str	r4, [r6, #16]
   2a1b0:	str	lr, [r6, #12]
   2a1b4:	str	ip, [r6, #8]
   2a1b8:	str	r1, [r6, #4]
   2a1bc:	str	r0, [r6]
   2a1c0:	add	r0, sp, #72	; 0x48
   2a1c4:	str	r0, [sp, #40]	; 0x28
   2a1c8:	bl	2a7bc <grisu3_diy_fp_encode_double@@Base+0x83c>
   2a1cc:	ldr	r0, [sp, #40]	; 0x28
   2a1d0:	vld1.64	{d16-d17}, [r0]
   2a1d4:	sub	r1, fp, #96	; 0x60
   2a1d8:	vst1.64	{d16-d17}, [r1]
   2a1dc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2a1e0:	add	r2, r1, #1
   2a1e4:	cmp	r1, #0
   2a1e8:	movne	r1, r2
   2a1ec:	add	r1, r1, #8
   2a1f0:	str	r1, [fp, #-68]	; 0xffffffbc
   2a1f4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2a1f8:	str	r1, [fp, #-80]	; 0xffffffb0
   2a1fc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2a200:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2a204:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2a208:	ldr	ip, [fp, #-84]	; 0xffffffac
   2a20c:	mov	lr, sp
   2a210:	str	r1, [lr]
   2a214:	str	ip, [lr, #4]
   2a218:	add	r0, sp, #56	; 0x38
   2a21c:	bl	2a4d8 <grisu3_diy_fp_encode_double@@Base+0x558>
   2a220:	ldr	r0, [pc, #676]	; 2a4cc <grisu3_diy_fp_encode_double@@Base+0x54c>
   2a224:	ldr	r1, [sp, #56]	; 0x38
   2a228:	str	r1, [fp, #-96]	; 0xffffffa0
   2a22c:	ldr	r1, [sp, #60]	; 0x3c
   2a230:	str	r1, [fp, #-92]	; 0xffffffa4
   2a234:	ldr	r1, [sp, #64]	; 0x40
   2a238:	str	r1, [fp, #-88]	; 0xffffffa8
   2a23c:	ldr	r1, [sp, #68]	; 0x44
   2a240:	str	r1, [fp, #-84]	; 0xffffffac
   2a244:	ldr	r1, [fp, #-80]	; 0xffffffb0
   2a248:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2a24c:	sub	r1, r1, r2
   2a250:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2a254:	lsl	r1, r2, r1
   2a258:	str	r1, [fp, #-68]	; 0xffffffbc
   2a25c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2a260:	add	r1, r1, #64	; 0x40
   2a264:	str	r1, [fp, #-132]	; 0xffffff7c
   2a268:	ldr	r1, [fp, #-132]	; 0xffffff7c
   2a26c:	cmp	r1, r0
   2a270:	blt	2a280 <grisu3_diy_fp_encode_double@@Base+0x300>
   2a274:	movw	r0, #64	; 0x40
   2a278:	str	r0, [sp, #36]	; 0x24
   2a27c:	b	2a2b4 <grisu3_diy_fp_encode_double@@Base+0x334>
   2a280:	ldr	r0, [pc, #584]	; 2a4d0 <grisu3_diy_fp_encode_double@@Base+0x550>
   2a284:	ldr	r1, [fp, #-132]	; 0xffffff7c
   2a288:	cmp	r1, r0
   2a28c:	bgt	2a29c <grisu3_diy_fp_encode_double@@Base+0x31c>
   2a290:	movw	r0, #0
   2a294:	str	r0, [sp, #32]
   2a298:	b	2a2ac <grisu3_diy_fp_encode_double@@Base+0x32c>
   2a29c:	ldr	r0, [pc, #556]	; 2a4d0 <grisu3_diy_fp_encode_double@@Base+0x550>
   2a2a0:	ldr	r1, [fp, #-132]	; 0xffffff7c
   2a2a4:	sub	r0, r1, r0
   2a2a8:	str	r0, [sp, #32]
   2a2ac:	ldr	r0, [sp, #32]
   2a2b0:	str	r0, [sp, #36]	; 0x24
   2a2b4:	ldr	r0, [sp, #36]	; 0x24
   2a2b8:	str	r0, [fp, #-132]	; 0xffffff7c
   2a2bc:	ldr	r0, [fp, #-132]	; 0xffffff7c
   2a2c0:	movw	r1, #64	; 0x40
   2a2c4:	sub	r0, r1, r0
   2a2c8:	str	r0, [sp, #136]	; 0x88
   2a2cc:	ldr	r0, [sp, #136]	; 0x88
   2a2d0:	add	r0, r0, #3
   2a2d4:	cmp	r0, #64	; 0x40
   2a2d8:	blt	2a358 <grisu3_diy_fp_encode_double@@Base+0x3d8>
   2a2dc:	ldr	r0, [sp, #136]	; 0x88
   2a2e0:	sub	r0, r0, #62	; 0x3e
   2a2e4:	str	r0, [sp, #52]	; 0x34
   2a2e8:	ldr	r0, [sp, #52]	; 0x34
   2a2ec:	ldr	r1, [fp, #-96]	; 0xffffffa0
   2a2f0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   2a2f4:	lsr	r1, r1, r0
   2a2f8:	rsb	r3, r0, #32
   2a2fc:	orr	r1, r1, r2, lsl r3
   2a300:	sub	r3, r0, #32
   2a304:	cmp	r3, #0
   2a308:	lsrge	r1, r2, r3
   2a30c:	lsr	r0, r2, r0
   2a310:	cmp	r3, #0
   2a314:	movwge	r0, #0
   2a318:	str	r0, [fp, #-92]	; 0xffffffa4
   2a31c:	str	r1, [fp, #-96]	; 0xffffffa0
   2a320:	ldr	r0, [sp, #52]	; 0x34
   2a324:	ldr	r1, [fp, #-88]	; 0xffffffa8
   2a328:	add	r0, r1, r0
   2a32c:	str	r0, [fp, #-88]	; 0xffffffa8
   2a330:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2a334:	ldr	r1, [sp, #52]	; 0x34
   2a338:	asr	r0, r0, r1
   2a33c:	add	r0, r0, #1
   2a340:	add	r0, r0, #8
   2a344:	str	r0, [fp, #-68]	; 0xffffffbc
   2a348:	ldr	r0, [sp, #52]	; 0x34
   2a34c:	ldr	r1, [sp, #136]	; 0x88
   2a350:	sub	r0, r1, r0
   2a354:	str	r0, [sp, #136]	; 0x88
   2a358:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2a35c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   2a360:	ldr	r2, [sp, #136]	; 0x88
   2a364:	lsr	r0, r0, r2
   2a368:	rsb	r3, r2, #32
   2a36c:	orr	r0, r0, r1, lsl r3
   2a370:	sub	r3, r2, #32
   2a374:	cmp	r3, #0
   2a378:	lsrge	r0, r1, r3
   2a37c:	lsr	r1, r1, r2
   2a380:	cmp	r3, #0
   2a384:	movwge	r1, #0
   2a388:	str	r1, [fp, #-124]	; 0xffffff84
   2a38c:	str	r0, [fp, #-128]	; 0xffffff80
   2a390:	ldr	r0, [fp, #-88]	; 0xffffffa8
   2a394:	ldr	r1, [sp, #136]	; 0x88
   2a398:	add	r0, r0, r1
   2a39c:	str	r0, [fp, #-120]	; 0xffffff88
   2a3a0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2a3a4:	ldr	r1, [sp, #136]	; 0x88
   2a3a8:	sub	r2, r1, #1
   2a3ac:	mov	r3, #1
   2a3b0:	lsl	r2, r3, r2
   2a3b4:	sub	r1, r1, #33	; 0x21
   2a3b8:	cmp	r1, #0
   2a3bc:	movwge	r2, #0
   2a3c0:	and	r0, r0, r2
   2a3c4:	lsl	r0, r0, #3
   2a3c8:	str	r0, [sp, #132]	; 0x84
   2a3cc:	ldr	r0, [sp, #136]	; 0x88
   2a3d0:	sub	r1, r0, #1
   2a3d4:	lsl	r1, r3, r1
   2a3d8:	sub	r0, r0, #33	; 0x21
   2a3dc:	cmp	r0, #0
   2a3e0:	movwge	r1, #0
   2a3e4:	lsl	r0, r1, #3
   2a3e8:	str	r0, [sp, #128]	; 0x80
   2a3ec:	ldr	r0, [sp, #136]	; 0x88
   2a3f0:	ldr	r1, [sp, #128]	; 0x80
   2a3f4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2a3f8:	add	r1, r1, r2
   2a3fc:	cmp	r0, r1
   2a400:	blt	2a454 <grisu3_diy_fp_encode_double@@Base+0x4d4>
   2a404:	ldr	r0, [fp, #-128]	; 0xffffff80
   2a408:	ldr	r1, [fp, #-124]	; 0xffffff84
   2a40c:	adds	r0, r0, #1
   2a410:	adc	r1, r1, #0
   2a414:	str	r0, [fp, #-128]	; 0xffffff80
   2a418:	str	r1, [fp, #-124]	; 0xffffff84
   2a41c:	ldrb	r0, [fp, #-122]	; 0xffffff86
   2a420:	tst	r0, #32
   2a424:	beq	2a450 <grisu3_diy_fp_encode_double@@Base+0x4d0>
   2a428:	b	2a42c <grisu3_diy_fp_encode_double@@Base+0x4ac>
   2a42c:	ldr	r0, [fp, #-128]	; 0xffffff80
   2a430:	ldr	r1, [fp, #-124]	; 0xffffff84
   2a434:	lsrs	r1, r1, #1
   2a438:	rrx	r0, r0
   2a43c:	str	r1, [fp, #-124]	; 0xffffff84
   2a440:	str	r0, [fp, #-128]	; 0xffffff80
   2a444:	ldr	r0, [fp, #-120]	; 0xffffff88
   2a448:	add	r0, r0, #1
   2a44c:	str	r0, [fp, #-120]	; 0xffffff88
   2a450:	b	2a454 <grisu3_diy_fp_encode_double@@Base+0x4d4>
   2a454:	ldr	r0, [fp, #-128]	; 0xffffff80
   2a458:	ldr	r1, [fp, #-124]	; 0xffffff84
   2a45c:	ldr	r2, [fp, #-120]	; 0xffffff88
   2a460:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2a464:	bl	2a950 <grisu3_diy_fp_encode_double@@Base+0x9d0>
   2a468:	ldr	r0, [fp, #12]
   2a46c:	vstr	d0, [r0]
   2a470:	ldr	r0, [sp, #128]	; 0x80
   2a474:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2a478:	sub	r0, r0, r1
   2a47c:	ldr	r1, [sp, #132]	; 0x84
   2a480:	cmp	r0, r1
   2a484:	movw	r0, #1
   2a488:	str	r0, [sp, #28]
   2a48c:	bge	2a4b0 <grisu3_diy_fp_encode_double@@Base+0x530>
   2a490:	ldr	r0, [sp, #132]	; 0x84
   2a494:	ldr	r1, [sp, #128]	; 0x80
   2a498:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2a49c:	add	r1, r1, r2
   2a4a0:	cmp	r0, r1
   2a4a4:	movw	r0, #0
   2a4a8:	movge	r0, #1
   2a4ac:	str	r0, [sp, #28]
   2a4b0:	ldr	r0, [sp, #28]
   2a4b4:	and	r0, r0, #1
   2a4b8:	sub	sp, fp, #16
   2a4bc:	pop	{r4, r5, r6, sl, fp, pc}
   2a4c0:	andeq	r8, r0, r6, lsl #12
   2a4c4:	andeq	r8, r0, sl, lsl r6
   2a4c8:	andeq	r8, r0, r0, lsl #13
   2a4cc:			; <UNDEFINED> instruction: 0xfffffc0e
   2a4d0:			; <UNDEFINED> instruction: 0xfffffbce
   2a4d4:	andeq	sl, r1, ip, ror #4
   2a4d8:	push	{fp, lr}
   2a4dc:	mov	fp, sp
   2a4e0:	sub	sp, sp, #24
   2a4e4:	ldr	r1, [fp, #12]
   2a4e8:	ldr	ip, [fp, #8]
   2a4ec:	str	r2, [sp, #8]
   2a4f0:	str	r3, [sp, #12]
   2a4f4:	str	ip, [sp, #16]
   2a4f8:	str	r1, [sp, #20]
   2a4fc:	ldr	r1, [sp, #8]
   2a500:	ldr	r2, [sp, #12]
   2a504:	orr	r1, r1, r2
   2a508:	cmp	r1, #0
   2a50c:	str	r0, [sp, #4]
   2a510:	beq	2a51c <grisu3_diy_fp_encode_double@@Base+0x59c>
   2a514:	b	2a518 <grisu3_diy_fp_encode_double@@Base+0x598>
   2a518:	b	2a53c <grisu3_diy_fp_encode_double@@Base+0x5bc>
   2a51c:	ldr	r0, [pc, #228]	; 2a608 <grisu3_diy_fp_encode_double@@Base+0x688>
   2a520:	add	r0, pc, r0
   2a524:	ldr	r1, [pc, #224]	; 2a60c <grisu3_diy_fp_encode_double@@Base+0x68c>
   2a528:	add	r1, pc, r1
   2a52c:	ldr	r2, [pc, #220]	; 2a610 <grisu3_diy_fp_encode_double@@Base+0x690>
   2a530:	add	r3, pc, r2
   2a534:	movw	r2, #260	; 0x104
   2a538:	bl	12b80 <__assert_fail@plt>
   2a53c:	b	2a540 <grisu3_diy_fp_encode_double@@Base+0x5c0>
   2a540:	ldrh	r0, [sp, #14]
   2a544:	movw	r1, #65472	; 0xffc0
   2a548:	and	r0, r0, r1
   2a54c:	cmp	r0, #0
   2a550:	movwne	r0, #1
   2a554:	mvn	r1, #0
   2a558:	eor	r0, r0, r1
   2a55c:	tst	r0, #1
   2a560:	beq	2a590 <grisu3_diy_fp_encode_double@@Base+0x610>
   2a564:	ldr	r0, [sp, #8]
   2a568:	ldr	r1, [sp, #12]
   2a56c:	lsl	r1, r1, #10
   2a570:	orr	r1, r1, r0, lsr #22
   2a574:	lsl	r0, r0, #10
   2a578:	str	r0, [sp, #8]
   2a57c:	str	r1, [sp, #12]
   2a580:	ldr	r0, [sp, #16]
   2a584:	sub	r0, r0, #10
   2a588:	str	r0, [sp, #16]
   2a58c:	b	2a540 <grisu3_diy_fp_encode_double@@Base+0x5c0>
   2a590:	b	2a594 <grisu3_diy_fp_encode_double@@Base+0x614>
   2a594:	ldrb	r0, [sp, #15]
   2a598:	lsr	r0, r0, #7
   2a59c:	mvn	r1, #0
   2a5a0:	eor	r0, r0, r1
   2a5a4:	tst	r0, #1
   2a5a8:	beq	2a5dc <grisu3_diy_fp_encode_double@@Base+0x65c>
   2a5ac:	ldr	r0, [sp, #8]
   2a5b0:	ldr	r1, [sp, #12]
   2a5b4:	lsl	r1, r1, #1
   2a5b8:	orr	r1, r1, r0, lsr #31
   2a5bc:	lsl	r0, r0, #1
   2a5c0:	str	r0, [sp, #8]
   2a5c4:	str	r1, [sp, #12]
   2a5c8:	ldr	r0, [sp, #16]
   2a5cc:	mvn	r1, #0
   2a5d0:	add	r0, r0, r1
   2a5d4:	str	r0, [sp, #16]
   2a5d8:	b	2a594 <grisu3_diy_fp_encode_double@@Base+0x614>
   2a5dc:	ldr	r0, [sp, #8]
   2a5e0:	ldr	r1, [sp, #4]
   2a5e4:	str	r0, [r1]
   2a5e8:	ldr	r0, [sp, #12]
   2a5ec:	str	r0, [r1, #4]
   2a5f0:	ldr	r0, [sp, #16]
   2a5f4:	str	r0, [r1, #8]
   2a5f8:	ldr	r0, [sp, #20]
   2a5fc:	str	r0, [r1, #12]
   2a600:	mov	sp, fp
   2a604:	pop	{fp, pc}
   2a608:	andeq	r8, r0, r3, asr #14
   2a60c:	andeq	r8, r0, r4, asr #14
   2a610:	andeq	r8, r0, r9, lsr #15
   2a614:	push	{fp, lr}
   2a618:	mov	fp, sp
   2a61c:	sub	sp, sp, #32
   2a620:	ldr	r2, [pc, #344]	; 2a780 <grisu3_diy_fp_encode_double@@Base+0x800>
   2a624:	str	r0, [fp, #-4]
   2a628:	str	r1, [fp, #-8]
   2a62c:	movw	r0, #348	; 0x15c
   2a630:	str	r0, [fp, #-12]
   2a634:	movw	r0, #8
   2a638:	str	r0, [sp, #16]
   2a63c:	ldr	r0, [fp, #-4]
   2a640:	cmp	r2, r0
   2a644:	bgt	2a64c <grisu3_diy_fp_encode_double@@Base+0x6cc>
   2a648:	b	2a66c <grisu3_diy_fp_encode_double@@Base+0x6ec>
   2a64c:	ldr	r0, [pc, #304]	; 2a784 <grisu3_diy_fp_encode_double@@Base+0x804>
   2a650:	add	r0, pc, r0
   2a654:	ldr	r1, [pc, #300]	; 2a788 <grisu3_diy_fp_encode_double@@Base+0x808>
   2a658:	add	r1, pc, r1
   2a65c:	ldr	r2, [pc, #296]	; 2a78c <grisu3_diy_fp_encode_double@@Base+0x80c>
   2a660:	add	r3, pc, r2
   2a664:	movw	r2, #80	; 0x50
   2a668:	bl	12b80 <__assert_fail@plt>
   2a66c:	ldr	r0, [fp, #-4]
   2a670:	cmp	r0, #348	; 0x15c
   2a674:	bge	2a67c <grisu3_diy_fp_encode_double@@Base+0x6fc>
   2a678:	b	2a69c <grisu3_diy_fp_encode_double@@Base+0x71c>
   2a67c:	ldr	r0, [pc, #268]	; 2a790 <grisu3_diy_fp_encode_double@@Base+0x810>
   2a680:	add	r0, pc, r0
   2a684:	ldr	r1, [pc, #264]	; 2a794 <grisu3_diy_fp_encode_double@@Base+0x814>
   2a688:	add	r1, pc, r1
   2a68c:	ldr	r2, [pc, #260]	; 2a798 <grisu3_diy_fp_encode_double@@Base+0x818>
   2a690:	add	r3, pc, r2
   2a694:	movw	r2, #81	; 0x51
   2a698:	bl	12b80 <__assert_fail@plt>
   2a69c:	ldr	r0, [pc, #248]	; 2a79c <grisu3_diy_fp_encode_double@@Base+0x81c>
   2a6a0:	add	r0, pc, r0
   2a6a4:	ldr	r1, [fp, #-4]
   2a6a8:	add	r1, r1, #348	; 0x15c
   2a6ac:	asr	r2, r1, #31
   2a6b0:	add	r1, r1, r2, lsr #29
   2a6b4:	asr	r1, r1, #3
   2a6b8:	str	r1, [sp, #12]
   2a6bc:	ldr	r1, [sp, #12]
   2a6c0:	ldr	r2, [pc, #240]	; 2a7b8 <grisu3_diy_fp_encode_double@@Base+0x838>
   2a6c4:	add	r2, pc, r2
   2a6c8:	add	r1, r2, r1, lsl #4
   2a6cc:	ldrsh	r1, [r1, #10]
   2a6d0:	str	r1, [sp, #8]
   2a6d4:	ldr	r1, [sp, #12]
   2a6d8:	mov	r3, r2
   2a6dc:	ldr	r1, [r3, r1, lsl #4]!
   2a6e0:	ldr	r3, [r3, #4]
   2a6e4:	ldr	ip, [fp, #-8]
   2a6e8:	str	r3, [ip, #4]
   2a6ec:	str	r1, [ip]
   2a6f0:	ldr	r1, [sp, #12]
   2a6f4:	add	r1, r2, r1, lsl #4
   2a6f8:	ldrsh	r1, [r1, #8]
   2a6fc:	ldr	r2, [fp, #-8]
   2a700:	str	r1, [r2, #8]
   2a704:	ldr	r1, [sp, #8]
   2a708:	ldr	r2, [fp, #-4]
   2a70c:	cmp	r1, r2
   2a710:	str	r0, [sp, #4]
   2a714:	bgt	2a71c <grisu3_diy_fp_encode_double@@Base+0x79c>
   2a718:	b	2a73c <grisu3_diy_fp_encode_double@@Base+0x7bc>
   2a71c:	ldr	r0, [pc, #124]	; 2a7a0 <grisu3_diy_fp_encode_double@@Base+0x820>
   2a720:	add	r0, pc, r0
   2a724:	ldr	r1, [pc, #120]	; 2a7a4 <grisu3_diy_fp_encode_double@@Base+0x824>
   2a728:	add	r1, pc, r1
   2a72c:	ldr	r2, [pc, #116]	; 2a7a8 <grisu3_diy_fp_encode_double@@Base+0x828>
   2a730:	add	r3, pc, r2
   2a734:	movw	r2, #88	; 0x58
   2a738:	bl	12b80 <__assert_fail@plt>
   2a73c:	ldr	r0, [fp, #-4]
   2a740:	ldr	r1, [sp, #8]
   2a744:	add	r1, r1, #8
   2a748:	cmp	r0, r1
   2a74c:	bge	2a754 <grisu3_diy_fp_encode_double@@Base+0x7d4>
   2a750:	b	2a774 <grisu3_diy_fp_encode_double@@Base+0x7f4>
   2a754:	ldr	r0, [pc, #80]	; 2a7ac <grisu3_diy_fp_encode_double@@Base+0x82c>
   2a758:	add	r0, pc, r0
   2a75c:	ldr	r1, [pc, #76]	; 2a7b0 <grisu3_diy_fp_encode_double@@Base+0x830>
   2a760:	add	r1, pc, r1
   2a764:	ldr	r2, [pc, #72]	; 2a7b4 <grisu3_diy_fp_encode_double@@Base+0x834>
   2a768:	add	r3, pc, r2
   2a76c:	movw	r2, #89	; 0x59
   2a770:	bl	12b80 <__assert_fail@plt>
   2a774:	ldr	r0, [sp, #8]
   2a778:	mov	sp, fp
   2a77c:	pop	{fp, pc}
   2a780:			; <UNDEFINED> instruction: 0xfffffea4
   2a784:	andeq	r8, r0, r2, asr #13
   2a788:	muleq	r0, sl, r0
   2a78c:	ldrdeq	r8, [r0], -r1
   2a790:	andeq	r8, r0, sl, ror #13
   2a794:	andeq	r8, r0, sl, rrx
   2a798:	andeq	r8, r0, r1, lsr #13
   2a79c:	andeq	r8, r0, r0, lsr #14
   2a7a0:	andeq	r8, r0, r5, ror r6
   2a7a4:	andeq	r7, r0, sl, asr #31
   2a7a8:	andeq	r8, r0, r1, lsl #12
   2a7ac:	andeq	r8, r0, ip, asr #12
   2a7b0:	muleq	r0, r2, pc	; <UNPREDICTABLE>
   2a7b4:	andeq	r8, r0, r9, asr #11
   2a7b8:	strdeq	r8, [r0], -ip
   2a7bc:	push	{r4, r5, r6, sl, fp, lr}
   2a7c0:	add	fp, sp, #16
   2a7c4:	sub	sp, sp, #104	; 0x68
   2a7c8:	ldr	r1, [fp, #28]
   2a7cc:	ldr	ip, [fp, #24]
   2a7d0:	ldr	lr, [fp, #20]
   2a7d4:	ldr	r4, [fp, #16]
   2a7d8:	ldr	r5, [fp, #12]
   2a7dc:	ldr	r6, [fp, #8]
   2a7e0:	str	r2, [fp, #-32]	; 0xffffffe0
   2a7e4:	str	r3, [fp, #-28]	; 0xffffffe4
   2a7e8:	str	r6, [fp, #-24]	; 0xffffffe8
   2a7ec:	str	r5, [fp, #-20]	; 0xffffffec
   2a7f0:	str	r1, [fp, #-36]	; 0xffffffdc
   2a7f4:	str	ip, [fp, #-40]	; 0xffffffd8
   2a7f8:	str	lr, [fp, #-44]	; 0xffffffd4
   2a7fc:	str	r4, [fp, #-48]	; 0xffffffd0
   2a800:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2a804:	mov	r2, #0
   2a808:	str	r2, [fp, #-52]	; 0xffffffcc
   2a80c:	str	r1, [fp, #-56]	; 0xffffffc8
   2a810:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a814:	str	r2, [sp, #60]	; 0x3c
   2a818:	str	r1, [sp, #56]	; 0x38
   2a81c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a820:	str	r2, [sp, #52]	; 0x34
   2a824:	str	r1, [sp, #48]	; 0x30
   2a828:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2a82c:	str	r2, [sp, #44]	; 0x2c
   2a830:	str	r1, [sp, #40]	; 0x28
   2a834:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2a838:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2a83c:	ldr	ip, [sp, #48]	; 0x30
   2a840:	ldr	lr, [sp, #52]	; 0x34
   2a844:	umull	r4, r5, r1, ip
   2a848:	mla	r1, r1, lr, r5
   2a84c:	mla	r1, r3, ip, r1
   2a850:	str	r4, [sp, #32]
   2a854:	str	r1, [sp, #36]	; 0x24
   2a858:	ldr	r1, [sp, #56]	; 0x38
   2a85c:	ldr	r3, [sp, #60]	; 0x3c
   2a860:	ldr	ip, [sp, #48]	; 0x30
   2a864:	ldr	lr, [sp, #52]	; 0x34
   2a868:	umull	r4, r5, r1, ip
   2a86c:	mla	r1, r1, lr, r5
   2a870:	mla	r1, r3, ip, r1
   2a874:	str	r4, [sp, #24]
   2a878:	str	r1, [sp, #28]
   2a87c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2a880:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2a884:	ldr	ip, [sp, #40]	; 0x28
   2a888:	ldr	lr, [sp, #44]	; 0x2c
   2a88c:	umull	r4, r5, r1, ip
   2a890:	mla	r1, r1, lr, r5
   2a894:	mla	r1, r3, ip, r1
   2a898:	str	r4, [sp, #16]
   2a89c:	str	r1, [sp, #20]
   2a8a0:	ldr	r1, [sp, #56]	; 0x38
   2a8a4:	ldr	r3, [sp, #60]	; 0x3c
   2a8a8:	ldr	ip, [sp, #40]	; 0x28
   2a8ac:	ldr	lr, [sp, #44]	; 0x2c
   2a8b0:	umull	r4, r5, r1, ip
   2a8b4:	mla	r1, r1, lr, r5
   2a8b8:	mla	r1, r3, ip, r1
   2a8bc:	str	r4, [sp, #8]
   2a8c0:	str	r1, [sp, #12]
   2a8c4:	ldr	r1, [sp, #12]
   2a8c8:	ldr	r3, [sp, #16]
   2a8cc:	adds	r1, r1, r3
   2a8d0:	adc	r2, r2, #0
   2a8d4:	ldr	r3, [sp, #24]
   2a8d8:	adds	r1, r1, r3
   2a8dc:	adc	r2, r2, #0
   2a8e0:	str	r1, [sp]
   2a8e4:	str	r2, [sp, #4]
   2a8e8:	ldr	r1, [sp]
   2a8ec:	ldr	r2, [sp, #4]
   2a8f0:	adds	r1, r1, #-2147483648	; 0x80000000
   2a8f4:	adc	r2, r2, #0
   2a8f8:	str	r1, [sp]
   2a8fc:	str	r2, [sp, #4]
   2a900:	ldr	r1, [sp, #32]
   2a904:	ldr	r2, [sp, #36]	; 0x24
   2a908:	ldr	r3, [sp, #20]
   2a90c:	adds	r1, r1, r3
   2a910:	adc	r2, r2, #0
   2a914:	ldr	r3, [sp, #28]
   2a918:	adds	r1, r1, r3
   2a91c:	adc	r2, r2, #0
   2a920:	ldr	r3, [sp, #4]
   2a924:	adds	r1, r1, r3
   2a928:	adc	r2, r2, #0
   2a92c:	str	r1, [r0]
   2a930:	str	r2, [r0, #4]
   2a934:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a938:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2a93c:	add	r1, r1, r2
   2a940:	add	r1, r1, #64	; 0x40
   2a944:	str	r1, [r0, #8]
   2a948:	sub	sp, fp, #16
   2a94c:	pop	{r4, r5, r6, sl, fp, pc}
   2a950:	push	{fp, lr}
   2a954:	mov	fp, sp
   2a958:	sub	sp, sp, #88	; 0x58
   2a95c:	ldr	ip, [pc, #412]	; 2ab00 <grisu3_diy_fp_encode_double@@Base+0xb80>
   2a960:	str	r0, [fp, #-24]	; 0xffffffe8
   2a964:	str	r1, [fp, #-20]	; 0xffffffec
   2a968:	str	r2, [fp, #-16]
   2a96c:	str	r3, [fp, #-12]
   2a970:	mov	r0, #1048576	; 0x100000
   2a974:	str	r0, [fp, #-28]	; 0xffffffe4
   2a978:	mov	r0, #0
   2a97c:	str	r0, [fp, #-32]	; 0xffffffe0
   2a980:	movw	r0, #65535	; 0xffff
   2a984:	movt	r0, #15
   2a988:	str	r0, [fp, #-36]	; 0xffffffdc
   2a98c:	mvn	r0, #0
   2a990:	str	r0, [fp, #-40]	; 0xffffffd8
   2a994:	str	ip, [sp, #44]	; 0x2c
   2a998:	movw	r0, #1075	; 0x433
   2a99c:	str	r0, [sp, #40]	; 0x28
   2a9a0:	movw	r0, #52	; 0x34
   2a9a4:	str	r0, [sp, #36]	; 0x24
   2a9a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2a9ac:	str	r0, [sp, #16]
   2a9b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2a9b4:	str	r0, [sp, #20]
   2a9b8:	ldr	r0, [fp, #-16]
   2a9bc:	str	r0, [sp, #24]
   2a9c0:	ldr	r0, [fp, #-12]
   2a9c4:	str	r0, [sp, #28]
   2a9c8:	ldr	r0, [sp, #20]
   2a9cc:	cmp	r0, #2097152	; 0x200000
   2a9d0:	bcc	2aa00 <grisu3_diy_fp_encode_double@@Base+0xa80>
   2a9d4:	b	2a9d8 <grisu3_diy_fp_encode_double@@Base+0xa58>
   2a9d8:	ldr	r0, [sp, #16]
   2a9dc:	ldr	r1, [sp, #20]
   2a9e0:	lsrs	r1, r1, #1
   2a9e4:	rrx	r0, r0
   2a9e8:	str	r1, [sp, #20]
   2a9ec:	str	r0, [sp, #16]
   2a9f0:	ldr	r0, [sp, #24]
   2a9f4:	add	r0, r0, #1
   2a9f8:	str	r0, [sp, #24]
   2a9fc:	b	2a9c8 <grisu3_diy_fp_encode_double@@Base+0xa48>
   2aa00:	ldr	r0, [pc, #248]	; 2ab00 <grisu3_diy_fp_encode_double@@Base+0xb80>
   2aa04:	ldr	r1, [sp, #24]
   2aa08:	cmp	r1, r0
   2aa0c:	bge	2aa1c <grisu3_diy_fp_encode_double@@Base+0xa9c>
   2aa10:	vldr	d16, [pc, #224]	; 2aaf8 <grisu3_diy_fp_encode_double@@Base+0xb78>
   2aa14:	vstr	d16, [fp, #-8]
   2aa18:	b	2aaec <grisu3_diy_fp_encode_double@@Base+0xb6c>
   2aa1c:	b	2aa20 <grisu3_diy_fp_encode_double@@Base+0xaa0>
   2aa20:	ldr	r0, [pc, #216]	; 2ab00 <grisu3_diy_fp_encode_double@@Base+0xb80>
   2aa24:	ldr	r1, [sp, #24]
   2aa28:	cmp	r1, r0
   2aa2c:	movw	r0, #0
   2aa30:	str	r0, [sp, #4]
   2aa34:	ble	2aa4c <grisu3_diy_fp_encode_double@@Base+0xacc>
   2aa38:	ldrb	r0, [sp, #22]
   2aa3c:	and	r0, r0, #16
   2aa40:	mov	r1, #1
   2aa44:	eor	r0, r1, r0, lsr #4
   2aa48:	str	r0, [sp, #4]
   2aa4c:	ldr	r0, [sp, #4]
   2aa50:	tst	r0, #1
   2aa54:	beq	2aa88 <grisu3_diy_fp_encode_double@@Base+0xb08>
   2aa58:	ldr	r0, [sp, #16]
   2aa5c:	ldr	r1, [sp, #20]
   2aa60:	lsl	r1, r1, #1
   2aa64:	orr	r1, r1, r0, lsr #31
   2aa68:	lsl	r0, r0, #1
   2aa6c:	str	r0, [sp, #16]
   2aa70:	str	r1, [sp, #20]
   2aa74:	ldr	r0, [sp, #24]
   2aa78:	mvn	r1, #0
   2aa7c:	add	r0, r0, r1
   2aa80:	str	r0, [sp, #24]
   2aa84:	b	2aa20 <grisu3_diy_fp_encode_double@@Base+0xaa0>
   2aa88:	ldr	r0, [pc, #112]	; 2ab00 <grisu3_diy_fp_encode_double@@Base+0xb80>
   2aa8c:	ldr	r1, [sp, #24]
   2aa90:	cmp	r1, r0
   2aa94:	bne	2aab8 <grisu3_diy_fp_encode_double@@Base+0xb38>
   2aa98:	ldrb	r0, [sp, #22]
   2aa9c:	tst	r0, #16
   2aaa0:	bne	2aab8 <grisu3_diy_fp_encode_double@@Base+0xb38>
   2aaa4:	b	2aaa8 <grisu3_diy_fp_encode_double@@Base+0xb28>
   2aaa8:	mov	r0, #0
   2aaac:	str	r0, [sp, #12]
   2aab0:	str	r0, [sp, #8]
   2aab4:	b	2aad0 <grisu3_diy_fp_encode_double@@Base+0xb50>
   2aab8:	ldr	r0, [sp, #24]
   2aabc:	movw	r1, #1075	; 0x433
   2aac0:	add	r0, r0, r1
   2aac4:	asr	r1, r0, #31
   2aac8:	str	r0, [sp, #8]
   2aacc:	str	r1, [sp, #12]
   2aad0:	ldr	r0, [sp, #16]
   2aad4:	ldr	r1, [sp, #20]
   2aad8:	bfc	r1, #20, #12
   2aadc:	ldr	r2, [sp, #8]
   2aae0:	orr	r1, r1, r2, lsl #20
   2aae4:	bl	2f70c <flatcc_json_parser_struct_as_root@@Base+0x170>
   2aae8:	vstr	d0, [fp, #-8]
   2aaec:	vldr	d0, [fp, #-8]
   2aaf0:	mov	sp, fp
   2aaf4:	pop	{fp, pc}
	...
   2ab00:			; <UNDEFINED> instruction: 0xfffffbce

0002ab04 <flatcc_json_parser_error_string@@Base>:
   2ab04:	sub	sp, sp, #12
   2ab08:	str	r0, [sp, #4]
   2ab0c:	ldr	r0, [sp, #4]
   2ab10:	cmp	r0, #34	; 0x22
   2ab14:	str	r0, [sp]
   2ab18:	bhi	2ade8 <flatcc_json_parser_error_string@@Base+0x2e4>
   2ab1c:	add	r0, pc, #8
   2ab20:	ldr	r1, [sp]
   2ab24:	ldr	r2, [r0, r1, lsl #2]
   2ab28:	add	pc, r0, r2
   2ab2c:	andeq	r0, r0, ip, lsl #1
   2ab30:	muleq	r0, ip, r0
   2ab34:	andeq	r0, r0, ip, lsr #1
   2ab38:	strheq	r0, [r0], -ip
   2ab3c:	andeq	r0, r0, ip, asr #1
   2ab40:	ldrdeq	r0, [r0], -ip
   2ab44:	andeq	r0, r0, ip, ror #1
   2ab48:	strdeq	r0, [r0], -ip
   2ab4c:	andeq	r0, r0, ip, lsl #2
   2ab50:	andeq	r0, r0, ip, lsl r1
   2ab54:	andeq	r0, r0, ip, lsr #2
   2ab58:	andeq	r0, r0, ip, lsr r1
   2ab5c:	andeq	r0, r0, ip, asr #2
   2ab60:	andeq	r0, r0, ip, asr r1
   2ab64:	andeq	r0, r0, ip, ror #2
   2ab68:	andeq	r0, r0, ip, ror r1
   2ab6c:	andeq	r0, r0, ip, lsl #3
   2ab70:	muleq	r0, ip, r1
   2ab74:	andeq	r0, r0, ip, lsr #3
   2ab78:			; <UNDEFINED> instruction: 0x000001bc
   2ab7c:	andeq	r0, r0, ip, asr #3
   2ab80:	ldrdeq	r0, [r0], -ip
   2ab84:	andeq	r0, r0, ip, ror #3
   2ab88:	strdeq	r0, [r0], -ip
   2ab8c:	andeq	r0, r0, ip, lsl #4
   2ab90:	andeq	r0, r0, ip, lsl r2
   2ab94:	andeq	r0, r0, ip, lsr #4
   2ab98:	andeq	r0, r0, ip, lsr r2
   2ab9c:	andeq	r0, r0, ip, asr #4
   2aba0:	andeq	r0, r0, ip, asr r2
   2aba4:	andeq	r0, r0, ip, ror #4
   2aba8:	andeq	r0, r0, ip, ror r2
   2abac:	andeq	r0, r0, ip, lsl #5
   2abb0:	muleq	r0, ip, r2
   2abb4:	andeq	r0, r0, ip, lsr #5
   2abb8:	ldr	r0, [pc, #712]	; 2ae88 <flatcc_json_parser_error_string@@Base+0x384>
   2abbc:	add	r0, pc, r0
   2abc0:	str	r0, [sp, #8]
   2abc4:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2abc8:	ldr	r0, [pc, #692]	; 2ae84 <flatcc_json_parser_error_string@@Base+0x380>
   2abcc:	add	r0, pc, r0
   2abd0:	str	r0, [sp, #8]
   2abd4:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2abd8:	ldr	r0, [pc, #672]	; 2ae80 <flatcc_json_parser_error_string@@Base+0x37c>
   2abdc:	add	r0, pc, r0
   2abe0:	str	r0, [sp, #8]
   2abe4:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2abe8:	ldr	r0, [pc, #652]	; 2ae7c <flatcc_json_parser_error_string@@Base+0x378>
   2abec:	add	r0, pc, r0
   2abf0:	str	r0, [sp, #8]
   2abf4:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2abf8:	ldr	r0, [pc, #632]	; 2ae78 <flatcc_json_parser_error_string@@Base+0x374>
   2abfc:	add	r0, pc, r0
   2ac00:	str	r0, [sp, #8]
   2ac04:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2ac08:	ldr	r0, [pc, #612]	; 2ae74 <flatcc_json_parser_error_string@@Base+0x370>
   2ac0c:	add	r0, pc, r0
   2ac10:	str	r0, [sp, #8]
   2ac14:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2ac18:	ldr	r0, [pc, #592]	; 2ae70 <flatcc_json_parser_error_string@@Base+0x36c>
   2ac1c:	add	r0, pc, r0
   2ac20:	str	r0, [sp, #8]
   2ac24:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2ac28:	ldr	r0, [pc, #572]	; 2ae6c <flatcc_json_parser_error_string@@Base+0x368>
   2ac2c:	add	r0, pc, r0
   2ac30:	str	r0, [sp, #8]
   2ac34:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2ac38:	ldr	r0, [pc, #552]	; 2ae68 <flatcc_json_parser_error_string@@Base+0x364>
   2ac3c:	add	r0, pc, r0
   2ac40:	str	r0, [sp, #8]
   2ac44:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2ac48:	ldr	r0, [pc, #532]	; 2ae64 <flatcc_json_parser_error_string@@Base+0x360>
   2ac4c:	add	r0, pc, r0
   2ac50:	str	r0, [sp, #8]
   2ac54:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2ac58:	ldr	r0, [pc, #512]	; 2ae60 <flatcc_json_parser_error_string@@Base+0x35c>
   2ac5c:	add	r0, pc, r0
   2ac60:	str	r0, [sp, #8]
   2ac64:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2ac68:	ldr	r0, [pc, #492]	; 2ae5c <flatcc_json_parser_error_string@@Base+0x358>
   2ac6c:	add	r0, pc, r0
   2ac70:	str	r0, [sp, #8]
   2ac74:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2ac78:	ldr	r0, [pc, #472]	; 2ae58 <flatcc_json_parser_error_string@@Base+0x354>
   2ac7c:	add	r0, pc, r0
   2ac80:	str	r0, [sp, #8]
   2ac84:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2ac88:	ldr	r0, [pc, #452]	; 2ae54 <flatcc_json_parser_error_string@@Base+0x350>
   2ac8c:	add	r0, pc, r0
   2ac90:	str	r0, [sp, #8]
   2ac94:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2ac98:	ldr	r0, [pc, #432]	; 2ae50 <flatcc_json_parser_error_string@@Base+0x34c>
   2ac9c:	add	r0, pc, r0
   2aca0:	str	r0, [sp, #8]
   2aca4:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2aca8:	ldr	r0, [pc, #412]	; 2ae4c <flatcc_json_parser_error_string@@Base+0x348>
   2acac:	add	r0, pc, r0
   2acb0:	str	r0, [sp, #8]
   2acb4:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2acb8:	ldr	r0, [pc, #392]	; 2ae48 <flatcc_json_parser_error_string@@Base+0x344>
   2acbc:	add	r0, pc, r0
   2acc0:	str	r0, [sp, #8]
   2acc4:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2acc8:	ldr	r0, [pc, #372]	; 2ae44 <flatcc_json_parser_error_string@@Base+0x340>
   2accc:	add	r0, pc, r0
   2acd0:	str	r0, [sp, #8]
   2acd4:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2acd8:	ldr	r0, [pc, #352]	; 2ae40 <flatcc_json_parser_error_string@@Base+0x33c>
   2acdc:	add	r0, pc, r0
   2ace0:	str	r0, [sp, #8]
   2ace4:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2ace8:	ldr	r0, [pc, #332]	; 2ae3c <flatcc_json_parser_error_string@@Base+0x338>
   2acec:	add	r0, pc, r0
   2acf0:	str	r0, [sp, #8]
   2acf4:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2acf8:	ldr	r0, [pc, #312]	; 2ae38 <flatcc_json_parser_error_string@@Base+0x334>
   2acfc:	add	r0, pc, r0
   2ad00:	str	r0, [sp, #8]
   2ad04:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2ad08:	ldr	r0, [pc, #292]	; 2ae34 <flatcc_json_parser_error_string@@Base+0x330>
   2ad0c:	add	r0, pc, r0
   2ad10:	str	r0, [sp, #8]
   2ad14:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2ad18:	ldr	r0, [pc, #272]	; 2ae30 <flatcc_json_parser_error_string@@Base+0x32c>
   2ad1c:	add	r0, pc, r0
   2ad20:	str	r0, [sp, #8]
   2ad24:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2ad28:	ldr	r0, [pc, #252]	; 2ae2c <flatcc_json_parser_error_string@@Base+0x328>
   2ad2c:	add	r0, pc, r0
   2ad30:	str	r0, [sp, #8]
   2ad34:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2ad38:	ldr	r0, [pc, #232]	; 2ae28 <flatcc_json_parser_error_string@@Base+0x324>
   2ad3c:	add	r0, pc, r0
   2ad40:	str	r0, [sp, #8]
   2ad44:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2ad48:	ldr	r0, [pc, #212]	; 2ae24 <flatcc_json_parser_error_string@@Base+0x320>
   2ad4c:	add	r0, pc, r0
   2ad50:	str	r0, [sp, #8]
   2ad54:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2ad58:	ldr	r0, [pc, #192]	; 2ae20 <flatcc_json_parser_error_string@@Base+0x31c>
   2ad5c:	add	r0, pc, r0
   2ad60:	str	r0, [sp, #8]
   2ad64:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2ad68:	ldr	r0, [pc, #172]	; 2ae1c <flatcc_json_parser_error_string@@Base+0x318>
   2ad6c:	add	r0, pc, r0
   2ad70:	str	r0, [sp, #8]
   2ad74:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2ad78:	ldr	r0, [pc, #152]	; 2ae18 <flatcc_json_parser_error_string@@Base+0x314>
   2ad7c:	add	r0, pc, r0
   2ad80:	str	r0, [sp, #8]
   2ad84:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2ad88:	ldr	r0, [pc, #132]	; 2ae14 <flatcc_json_parser_error_string@@Base+0x310>
   2ad8c:	add	r0, pc, r0
   2ad90:	str	r0, [sp, #8]
   2ad94:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2ad98:	ldr	r0, [pc, #112]	; 2ae10 <flatcc_json_parser_error_string@@Base+0x30c>
   2ad9c:	add	r0, pc, r0
   2ada0:	str	r0, [sp, #8]
   2ada4:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2ada8:	ldr	r0, [pc, #92]	; 2ae0c <flatcc_json_parser_error_string@@Base+0x308>
   2adac:	add	r0, pc, r0
   2adb0:	str	r0, [sp, #8]
   2adb4:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2adb8:	ldr	r0, [pc, #72]	; 2ae08 <flatcc_json_parser_error_string@@Base+0x304>
   2adbc:	add	r0, pc, r0
   2adc0:	str	r0, [sp, #8]
   2adc4:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2adc8:	ldr	r0, [pc, #52]	; 2ae04 <flatcc_json_parser_error_string@@Base+0x300>
   2adcc:	add	r0, pc, r0
   2add0:	str	r0, [sp, #8]
   2add4:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2add8:	ldr	r0, [pc, #32]	; 2ae00 <flatcc_json_parser_error_string@@Base+0x2fc>
   2addc:	add	r0, pc, r0
   2ade0:	str	r0, [sp, #8]
   2ade4:	b	2adf4 <flatcc_json_parser_error_string@@Base+0x2f0>
   2ade8:	ldr	r0, [pc, #156]	; 2ae8c <flatcc_json_parser_error_string@@Base+0x388>
   2adec:	add	r0, pc, r0
   2adf0:	str	r0, [sp, #8]
   2adf4:	ldr	r0, [sp, #8]
   2adf8:	add	sp, sp, #12
   2adfc:	bx	lr
   2ae00:	andeq	r7, r0, ip, lsr ip
   2ae04:	andeq	r7, r0, lr, lsr ip
   2ae08:	andeq	r7, r0, r4, lsr ip
   2ae0c:	andeq	r7, r0, sp, lsr #24
   2ae10:	andeq	r7, r0, r0, lsr #24
   2ae14:	andeq	r7, r0, r9, lsl ip
   2ae18:	andeq	r7, r0, pc, lsl #24
   2ae1c:	andeq	r7, r0, r4, lsl #24
   2ae20:	strdeq	r7, [r0], -r5
   2ae24:	andeq	r7, r0, r8, ror #23
   2ae28:	andeq	r7, r0, r4, ror #23
   2ae2c:	ldrdeq	r7, [r0], -r0
   2ae30:	ldrdeq	r7, [r0], -r1
   2ae34:	ldrdeq	r7, [r0], -r1
   2ae38:	andeq	r7, r0, sp, asr #23
   2ae3c:	ldrdeq	r7, [r0], -r0
   2ae40:	ldrdeq	r7, [r0], -r1
   2ae44:	andeq	r7, r0, pc, asr #23
   2ae48:	andeq	r7, r0, pc, asr #23
   2ae4c:	andeq	r7, r0, ip, asr #23
   2ae50:	andeq	r7, r0, r3, asr #23
   2ae54:	andeq	r7, r0, r4, asr #23
   2ae58:	andeq	r7, r0, r3, asr #23
   2ae5c:	andeq	r7, r0, r4, asr #23
   2ae60:	andeq	r7, r0, r2, asr #23
   2ae64:	andeq	r7, r0, r1, asr #23
   2ae68:	andeq	r7, r0, r7, asr #23
   2ae6c:	andeq	r7, r0, lr, asr #23
   2ae70:	andeq	r7, r0, lr, asr #23
   2ae74:	andeq	r7, r0, r9, asr #23
   2ae78:	andeq	r7, r0, sl, asr #23
   2ae7c:	andeq	r7, r0, fp, asr #23
   2ae80:	andeq	r7, r0, lr, asr #23
   2ae84:	ldrdeq	r7, [r0], -sl
   2ae88:	andeq	r7, r0, r7, ror #23
   2ae8c:	andeq	r7, r0, sl, lsr ip

0002ae90 <flatcc_json_parser_set_error@@Base>:
   2ae90:	sub	sp, sp, #16
   2ae94:	str	r0, [sp, #12]
   2ae98:	str	r1, [sp, #8]
   2ae9c:	str	r2, [sp, #4]
   2aea0:	str	r3, [sp]
   2aea4:	ldr	r0, [sp, #12]
   2aea8:	ldr	r0, [r0, #24]
   2aeac:	cmp	r0, #0
   2aeb0:	bne	2aee8 <flatcc_json_parser_set_error@@Base+0x58>
   2aeb4:	ldr	r0, [sp]
   2aeb8:	ldr	r1, [sp, #12]
   2aebc:	str	r0, [r1, #24]
   2aec0:	ldr	r0, [sp, #8]
   2aec4:	ldr	r1, [sp, #12]
   2aec8:	ldr	r1, [r1, #4]
   2aecc:	sub	r0, r0, r1
   2aed0:	add	r0, r0, #1
   2aed4:	ldr	r1, [sp, #12]
   2aed8:	str	r0, [r1, #20]
   2aedc:	ldr	r0, [sp, #8]
   2aee0:	ldr	r1, [sp, #12]
   2aee4:	str	r0, [r1, #36]	; 0x24
   2aee8:	ldr	r0, [sp, #4]
   2aeec:	add	sp, sp, #16
   2aef0:	bx	lr

0002aef4 <flatcc_json_parser_string_part@@Base>:
   2aef4:	push	{fp, lr}
   2aef8:	mov	fp, sp
   2aefc:	sub	sp, sp, #24
   2af00:	str	r0, [fp, #-8]
   2af04:	str	r1, [sp, #12]
   2af08:	str	r2, [sp, #8]
   2af0c:	ldr	r0, [sp, #12]
   2af10:	ldr	r1, [sp, #8]
   2af14:	cmp	r0, r1
   2af18:	movw	r0, #0
   2af1c:	str	r0, [sp, #4]
   2af20:	beq	2af6c <flatcc_json_parser_string_part@@Base+0x78>
   2af24:	ldr	r0, [sp, #12]
   2af28:	ldrb	r0, [r0]
   2af2c:	cmp	r0, #34	; 0x22
   2af30:	movw	r0, #0
   2af34:	str	r0, [sp, #4]
   2af38:	beq	2af6c <flatcc_json_parser_string_part@@Base+0x78>
   2af3c:	ldr	r0, [sp, #12]
   2af40:	ldrb	r0, [r0]
   2af44:	cmp	r0, #32
   2af48:	movw	r0, #0
   2af4c:	str	r0, [sp, #4]
   2af50:	blt	2af6c <flatcc_json_parser_string_part@@Base+0x78>
   2af54:	ldr	r0, [sp, #12]
   2af58:	ldrb	r0, [r0]
   2af5c:	cmp	r0, #92	; 0x5c
   2af60:	movw	r0, #0
   2af64:	movne	r0, #1
   2af68:	str	r0, [sp, #4]
   2af6c:	ldr	r0, [sp, #4]
   2af70:	tst	r0, #1
   2af74:	beq	2af88 <flatcc_json_parser_string_part@@Base+0x94>
   2af78:	ldr	r0, [sp, #12]
   2af7c:	add	r0, r0, #1
   2af80:	str	r0, [sp, #12]
   2af84:	b	2af0c <flatcc_json_parser_string_part@@Base+0x18>
   2af88:	ldr	r0, [sp, #12]
   2af8c:	ldr	r1, [sp, #8]
   2af90:	cmp	r0, r1
   2af94:	bne	2afb4 <flatcc_json_parser_string_part@@Base+0xc0>
   2af98:	ldr	r0, [fp, #-8]
   2af9c:	ldr	r1, [sp, #12]
   2afa0:	ldr	r2, [sp, #8]
   2afa4:	movw	r3, #20
   2afa8:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2afac:	str	r0, [fp, #-4]
   2afb0:	b	2b004 <flatcc_json_parser_string_part@@Base+0x110>
   2afb4:	ldr	r0, [sp, #12]
   2afb8:	ldrb	r0, [r0]
   2afbc:	cmp	r0, #34	; 0x22
   2afc0:	bne	2afd0 <flatcc_json_parser_string_part@@Base+0xdc>
   2afc4:	ldr	r0, [sp, #12]
   2afc8:	str	r0, [fp, #-4]
   2afcc:	b	2b004 <flatcc_json_parser_string_part@@Base+0x110>
   2afd0:	ldr	r0, [sp, #12]
   2afd4:	ldrb	r0, [r0]
   2afd8:	cmp	r0, #32
   2afdc:	bge	2affc <flatcc_json_parser_string_part@@Base+0x108>
   2afe0:	ldr	r0, [fp, #-8]
   2afe4:	ldr	r1, [sp, #12]
   2afe8:	ldr	r2, [sp, #8]
   2afec:	movw	r3, #17
   2aff0:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2aff4:	str	r0, [fp, #-4]
   2aff8:	b	2b004 <flatcc_json_parser_string_part@@Base+0x110>
   2affc:	ldr	r0, [sp, #12]
   2b000:	str	r0, [fp, #-4]
   2b004:	ldr	r0, [fp, #-4]
   2b008:	mov	sp, fp
   2b00c:	pop	{fp, pc}

0002b010 <flatcc_json_parser_space_ext@@Base>:
   2b010:	push	{fp, lr}
   2b014:	mov	fp, sp
   2b018:	sub	sp, sp, #32
   2b01c:	str	r0, [fp, #-8]
   2b020:	str	r1, [fp, #-12]
   2b024:	str	r2, [sp, #16]
   2b028:	b	2b02c <flatcc_json_parser_space_ext@@Base+0x1c>
   2b02c:	ldr	r0, [fp, #-12]
   2b030:	ldr	r1, [sp, #16]
   2b034:	cmp	r0, r1
   2b038:	movw	r0, #0
   2b03c:	str	r0, [sp, #12]
   2b040:	beq	2b05c <flatcc_json_parser_space_ext@@Base+0x4c>
   2b044:	ldr	r0, [fp, #-12]
   2b048:	ldrb	r0, [r0]
   2b04c:	cmp	r0, #32
   2b050:	movw	r0, #0
   2b054:	moveq	r0, #1
   2b058:	str	r0, [sp, #12]
   2b05c:	ldr	r0, [sp, #12]
   2b060:	tst	r0, #1
   2b064:	beq	2b078 <flatcc_json_parser_space_ext@@Base+0x68>
   2b068:	ldr	r0, [fp, #-12]
   2b06c:	add	r0, r0, #1
   2b070:	str	r0, [fp, #-12]
   2b074:	b	2b02c <flatcc_json_parser_space_ext@@Base+0x1c>
   2b078:	b	2b07c <flatcc_json_parser_space_ext@@Base+0x6c>
   2b07c:	ldr	r0, [fp, #-12]
   2b080:	ldr	r1, [sp, #16]
   2b084:	cmp	r0, r1
   2b088:	movw	r0, #0
   2b08c:	str	r0, [sp, #8]
   2b090:	beq	2b0ac <flatcc_json_parser_space_ext@@Base+0x9c>
   2b094:	ldr	r0, [fp, #-12]
   2b098:	ldrb	r0, [r0]
   2b09c:	cmp	r0, #32
   2b0a0:	movw	r0, #0
   2b0a4:	movle	r0, #1
   2b0a8:	str	r0, [sp, #8]
   2b0ac:	ldr	r0, [sp, #8]
   2b0b0:	tst	r0, #1
   2b0b4:	beq	2b1e0 <flatcc_json_parser_space_ext@@Base+0x1d0>
   2b0b8:	ldr	r0, [fp, #-12]
   2b0bc:	ldrb	r0, [r0]
   2b0c0:	sub	r0, r0, #9
   2b0c4:	cmp	r0, #23
   2b0c8:	str	r0, [sp, #4]
   2b0cc:	bhi	2b1c4 <flatcc_json_parser_space_ext@@Base+0x1b4>
   2b0d0:	add	r0, pc, #8
   2b0d4:	ldr	r1, [sp, #4]
   2b0d8:	ldr	r2, [r0, r1, lsl #2]
   2b0dc:	add	pc, r0, r2
   2b0e0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   2b0e4:	andeq	r0, r0, r8, lsr #1
   2b0e8:	andeq	r0, r0, r4, ror #1
   2b0ec:	andeq	r0, r0, r4, ror #1
   2b0f0:	andeq	r0, r0, r0, rrx
   2b0f4:	andeq	r0, r0, r4, ror #1
   2b0f8:	andeq	r0, r0, r4, ror #1
   2b0fc:	andeq	r0, r0, r4, ror #1
   2b100:	andeq	r0, r0, r4, ror #1
   2b104:	andeq	r0, r0, r4, ror #1
   2b108:	andeq	r0, r0, r4, ror #1
   2b10c:	andeq	r0, r0, r4, ror #1
   2b110:	andeq	r0, r0, r4, ror #1
   2b114:	andeq	r0, r0, r4, ror #1
   2b118:	andeq	r0, r0, r4, ror #1
   2b11c:	andeq	r0, r0, r4, ror #1
   2b120:	andeq	r0, r0, r4, ror #1
   2b124:	andeq	r0, r0, r4, ror #1
   2b128:	andeq	r0, r0, r4, ror #1
   2b12c:	andeq	r0, r0, r4, ror #1
   2b130:	andeq	r0, r0, r4, ror #1
   2b134:	andeq	r0, r0, r4, ror #1
   2b138:	andeq	r0, r0, r4, ror #1
   2b13c:	andeq	r0, r0, r0, ror #1
   2b140:	ldr	r0, [sp, #16]
   2b144:	ldr	r1, [fp, #-12]
   2b148:	sub	r0, r0, r1
   2b14c:	cmp	r0, #1
   2b150:	movw	r0, #0
   2b154:	str	r0, [sp]
   2b158:	ble	2b174 <flatcc_json_parser_space_ext@@Base+0x164>
   2b15c:	ldr	r0, [fp, #-12]
   2b160:	ldrb	r0, [r0, #1]
   2b164:	cmp	r0, #10
   2b168:	movw	r0, #0
   2b16c:	moveq	r0, #1
   2b170:	str	r0, [sp]
   2b174:	ldr	r0, [sp]
   2b178:	and	r0, r0, #1
   2b17c:	ldr	r1, [fp, #-12]
   2b180:	add	r0, r1, r0
   2b184:	str	r0, [fp, #-12]
   2b188:	ldr	r0, [fp, #-8]
   2b18c:	ldr	r1, [r0, #16]
   2b190:	add	r1, r1, #1
   2b194:	str	r1, [r0, #16]
   2b198:	ldr	r0, [fp, #-12]
   2b19c:	add	r0, r0, #1
   2b1a0:	str	r0, [fp, #-12]
   2b1a4:	ldr	r1, [fp, #-8]
   2b1a8:	str	r0, [r1, #4]
   2b1ac:	b	2b07c <flatcc_json_parser_space_ext@@Base+0x6c>
   2b1b0:	ldr	r0, [fp, #-12]
   2b1b4:	add	r0, r0, #1
   2b1b8:	str	r0, [fp, #-12]
   2b1bc:	b	2b07c <flatcc_json_parser_space_ext@@Base+0x6c>
   2b1c0:	b	2b028 <flatcc_json_parser_space_ext@@Base+0x18>
   2b1c4:	ldr	r0, [fp, #-8]
   2b1c8:	ldr	r1, [fp, #-12]
   2b1cc:	ldr	r2, [sp, #16]
   2b1d0:	movw	r3, #5
   2b1d4:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2b1d8:	str	r0, [fp, #-4]
   2b1dc:	b	2b1e8 <flatcc_json_parser_space_ext@@Base+0x1d8>
   2b1e0:	ldr	r0, [fp, #-12]
   2b1e4:	str	r0, [fp, #-4]
   2b1e8:	ldr	r0, [fp, #-4]
   2b1ec:	mov	sp, fp
   2b1f0:	pop	{fp, pc}

0002b1f4 <flatcc_json_parser_string_escape@@Base>:
   2b1f4:	push	{fp, lr}
   2b1f8:	mov	fp, sp
   2b1fc:	sub	sp, sp, #32
   2b200:	str	r0, [fp, #-8]
   2b204:	str	r1, [fp, #-12]
   2b208:	str	r2, [sp, #16]
   2b20c:	str	r3, [sp, #12]
   2b210:	ldr	r0, [sp, #16]
   2b214:	ldr	r1, [fp, #-12]
   2b218:	sub	r0, r0, r1
   2b21c:	cmp	r0, #2
   2b220:	blt	2b234 <flatcc_json_parser_string_escape@@Base+0x40>
   2b224:	ldr	r0, [fp, #-12]
   2b228:	ldrb	r0, [r0]
   2b22c:	cmp	r0, #92	; 0x5c
   2b230:	beq	2b25c <flatcc_json_parser_string_escape@@Base+0x68>
   2b234:	ldr	r0, [sp, #12]
   2b238:	movw	r1, #0
   2b23c:	strb	r1, [r0]
   2b240:	ldr	r0, [fp, #-8]
   2b244:	ldr	r1, [fp, #-12]
   2b248:	ldr	r2, [sp, #16]
   2b24c:	movw	r3, #18
   2b250:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2b254:	str	r0, [fp, #-4]
   2b258:	b	2bb0c <flatcc_json_parser_string_escape@@Base+0x918>
   2b25c:	ldr	r0, [fp, #-12]
   2b260:	ldrb	r0, [r0, #1]
   2b264:	sub	r0, r0, #34	; 0x22
   2b268:	cmp	r0, #86	; 0x56
   2b26c:	str	r0, [sp]
   2b270:	bhi	2bae8 <flatcc_json_parser_string_escape@@Base+0x8f4>
   2b274:	add	r0, pc, #8
   2b278:	ldr	r1, [sp]
   2b27c:	ldr	r2, [r0, r1, lsl #2]
   2b280:	add	pc, r0, r2
   2b284:	andeq	r0, r0, ip, ror #15
   2b288:	andeq	r0, r0, r4, ror #16
   2b28c:	andeq	r0, r0, r4, ror #16
   2b290:	andeq	r0, r0, r4, ror #16
   2b294:	andeq	r0, r0, r4, ror #16
   2b298:	andeq	r0, r0, r4, ror #16
   2b29c:	andeq	r0, r0, r4, ror #16
   2b2a0:	andeq	r0, r0, r4, ror #16
   2b2a4:	andeq	r0, r0, r4, ror #16
   2b2a8:	andeq	r0, r0, r4, ror #16
   2b2ac:	andeq	r0, r0, r4, ror #16
   2b2b0:	andeq	r0, r0, r4, ror #16
   2b2b4:	andeq	r0, r0, r4, ror #16
   2b2b8:	andeq	r0, r0, ip, lsr r8
   2b2bc:	andeq	r0, r0, r4, ror #16
   2b2c0:	andeq	r0, r0, r4, ror #16
   2b2c4:	andeq	r0, r0, r4, ror #16
   2b2c8:	andeq	r0, r0, r4, ror #16
   2b2cc:	andeq	r0, r0, r4, ror #16
   2b2d0:	andeq	r0, r0, r4, ror #16
   2b2d4:	andeq	r0, r0, r4, ror #16
   2b2d8:	andeq	r0, r0, r4, ror #16
   2b2dc:	andeq	r0, r0, r4, ror #16
   2b2e0:	andeq	r0, r0, r4, ror #16
   2b2e4:	andeq	r0, r0, r4, ror #16
   2b2e8:	andeq	r0, r0, r4, ror #16
   2b2ec:	andeq	r0, r0, r4, ror #16
   2b2f0:	andeq	r0, r0, r4, ror #16
   2b2f4:	andeq	r0, r0, r4, ror #16
   2b2f8:	andeq	r0, r0, r4, ror #16
   2b2fc:	andeq	r0, r0, r4, ror #16
   2b300:	andeq	r0, r0, r4, ror #16
   2b304:	andeq	r0, r0, r4, ror #16
   2b308:	andeq	r0, r0, r4, ror #16
   2b30c:	andeq	r0, r0, r4, ror #16
   2b310:	andeq	r0, r0, r4, ror #16
   2b314:	andeq	r0, r0, r4, ror #16
   2b318:	andeq	r0, r0, r4, ror #16
   2b31c:	andeq	r0, r0, r4, ror #16
   2b320:	andeq	r0, r0, r4, ror #16
   2b324:	andeq	r0, r0, r4, ror #16
   2b328:	andeq	r0, r0, r4, ror #16
   2b32c:	andeq	r0, r0, r4, ror #16
   2b330:	andeq	r0, r0, r4, ror #16
   2b334:	andeq	r0, r0, r4, ror #16
   2b338:	andeq	r0, r0, r4, ror #16
   2b33c:	andeq	r0, r0, r4, ror #16
   2b340:	andeq	r0, r0, r4, ror #16
   2b344:	andeq	r0, r0, r4, ror #16
   2b348:	andeq	r0, r0, r4, ror #16
   2b34c:	andeq	r0, r0, r4, ror #16
   2b350:	andeq	r0, r0, r4, ror #16
   2b354:	andeq	r0, r0, r4, ror #16
   2b358:	andeq	r0, r0, r4, ror #16
   2b35c:	andeq	r0, r0, r4, ror #16
   2b360:	andeq	r0, r0, r4, ror #16
   2b364:	andeq	r0, r0, r4, ror #16
   2b368:	andeq	r0, r0, r4, ror #16
   2b36c:	andeq	r0, r0, r4, lsl r8
   2b370:	andeq	r0, r0, r4, ror #16
   2b374:	andeq	r0, r0, r4, ror #16
   2b378:	andeq	r0, r0, r4, ror #16
   2b37c:	andeq	r0, r0, r4, ror #16
   2b380:	andeq	r0, r0, r4, ror #16
   2b384:	muleq	r0, ip, r7
   2b388:	andeq	r0, r0, r4, ror #16
   2b38c:	andeq	r0, r0, r4, ror #16
   2b390:	andeq	r0, r0, r4, ror #16
   2b394:	andeq	r0, r0, r4, asr #15
   2b398:	andeq	r0, r0, r4, ror #16
   2b39c:	andeq	r0, r0, r4, ror #16
   2b3a0:	andeq	r0, r0, r4, ror #16
   2b3a4:	andeq	r0, r0, r4, ror #16
   2b3a8:	andeq	r0, r0, r4, ror #16
   2b3ac:	andeq	r0, r0, r4, ror #16
   2b3b0:	andeq	r0, r0, r4, ror #16
   2b3b4:	andeq	r0, r0, ip, asr #14
   2b3b8:	andeq	r0, r0, r4, ror #16
   2b3bc:	andeq	r0, r0, r4, ror #16
   2b3c0:	andeq	r0, r0, r4, ror #16
   2b3c4:	andeq	r0, r0, r4, ror r7
   2b3c8:	andeq	r0, r0, r4, ror #16
   2b3cc:	andeq	r0, r0, r4, lsr #14
   2b3d0:	andeq	r0, r0, r0, lsr #6
   2b3d4:	andeq	r0, r0, r4, ror #16
   2b3d8:	andeq	r0, r0, r4, ror #16
   2b3dc:	andeq	r0, r0, ip, asr r1
   2b3e0:	movw	r0, #0
   2b3e4:	strb	r0, [sp, #10]
   2b3e8:	ldr	r0, [sp, #12]
   2b3ec:	movw	r1, #1
   2b3f0:	strb	r1, [r0]
   2b3f4:	ldr	r0, [sp, #16]
   2b3f8:	ldr	r1, [fp, #-12]
   2b3fc:	sub	r0, r0, r1
   2b400:	cmp	r0, #4
   2b404:	bge	2b430 <flatcc_json_parser_string_escape@@Base+0x23c>
   2b408:	ldr	r0, [sp, #12]
   2b40c:	movw	r1, #0
   2b410:	strb	r1, [r0]
   2b414:	ldr	r0, [fp, #-8]
   2b418:	ldr	r1, [fp, #-12]
   2b41c:	ldr	r2, [sp, #16]
   2b420:	movw	r3, #18
   2b424:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2b428:	str	r0, [fp, #-4]
   2b42c:	b	2bb0c <flatcc_json_parser_string_escape@@Base+0x918>
   2b430:	ldr	r0, [fp, #-12]
   2b434:	ldrb	r0, [r0, #2]
   2b438:	strb	r0, [sp, #11]
   2b43c:	ldrb	r0, [sp, #11]
   2b440:	cmp	r0, #48	; 0x30
   2b444:	blt	2b470 <flatcc_json_parser_string_escape@@Base+0x27c>
   2b448:	ldrb	r0, [sp, #11]
   2b44c:	cmp	r0, #57	; 0x39
   2b450:	bgt	2b470 <flatcc_json_parser_string_escape@@Base+0x27c>
   2b454:	ldrb	r0, [sp, #11]
   2b458:	sub	r0, r0, #48	; 0x30
   2b45c:	lsl	r0, r0, #4
   2b460:	ldrb	r1, [sp, #10]
   2b464:	orr	r0, r1, r0
   2b468:	strb	r0, [sp, #10]
   2b46c:	b	2b4e0 <flatcc_json_parser_string_escape@@Base+0x2ec>
   2b470:	ldrb	r0, [sp, #11]
   2b474:	orr	r0, r0, #32
   2b478:	strb	r0, [sp, #11]
   2b47c:	ldrb	r0, [sp, #11]
   2b480:	cmp	r0, #97	; 0x61
   2b484:	blt	2b4b4 <flatcc_json_parser_string_escape@@Base+0x2c0>
   2b488:	ldrb	r0, [sp, #11]
   2b48c:	cmp	r0, #102	; 0x66
   2b490:	bgt	2b4b4 <flatcc_json_parser_string_escape@@Base+0x2c0>
   2b494:	ldrb	r0, [sp, #11]
   2b498:	sub	r0, r0, #97	; 0x61
   2b49c:	add	r0, r0, #10
   2b4a0:	lsl	r0, r0, #4
   2b4a4:	ldrb	r1, [sp, #10]
   2b4a8:	orr	r0, r1, r0
   2b4ac:	strb	r0, [sp, #10]
   2b4b0:	b	2b4dc <flatcc_json_parser_string_escape@@Base+0x2e8>
   2b4b4:	ldr	r0, [sp, #12]
   2b4b8:	movw	r1, #0
   2b4bc:	strb	r1, [r0]
   2b4c0:	ldr	r0, [fp, #-8]
   2b4c4:	ldr	r1, [fp, #-12]
   2b4c8:	ldr	r2, [sp, #16]
   2b4cc:	movw	r3, #18
   2b4d0:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2b4d4:	str	r0, [fp, #-4]
   2b4d8:	b	2bb0c <flatcc_json_parser_string_escape@@Base+0x918>
   2b4dc:	b	2b4e0 <flatcc_json_parser_string_escape@@Base+0x2ec>
   2b4e0:	ldr	r0, [fp, #-12]
   2b4e4:	ldrb	r0, [r0, #3]
   2b4e8:	strb	r0, [sp, #11]
   2b4ec:	ldrb	r0, [sp, #11]
   2b4f0:	cmp	r0, #48	; 0x30
   2b4f4:	blt	2b51c <flatcc_json_parser_string_escape@@Base+0x328>
   2b4f8:	ldrb	r0, [sp, #11]
   2b4fc:	cmp	r0, #57	; 0x39
   2b500:	bgt	2b51c <flatcc_json_parser_string_escape@@Base+0x328>
   2b504:	ldrb	r0, [sp, #11]
   2b508:	sub	r0, r0, #48	; 0x30
   2b50c:	ldrb	r1, [sp, #10]
   2b510:	orr	r0, r1, r0
   2b514:	strb	r0, [sp, #10]
   2b518:	b	2b588 <flatcc_json_parser_string_escape@@Base+0x394>
   2b51c:	ldrb	r0, [sp, #11]
   2b520:	orr	r0, r0, #32
   2b524:	strb	r0, [sp, #11]
   2b528:	ldrb	r0, [sp, #11]
   2b52c:	cmp	r0, #97	; 0x61
   2b530:	blt	2b55c <flatcc_json_parser_string_escape@@Base+0x368>
   2b534:	ldrb	r0, [sp, #11]
   2b538:	cmp	r0, #102	; 0x66
   2b53c:	bgt	2b55c <flatcc_json_parser_string_escape@@Base+0x368>
   2b540:	ldrb	r0, [sp, #11]
   2b544:	sub	r0, r0, #97	; 0x61
   2b548:	add	r0, r0, #10
   2b54c:	ldrb	r1, [sp, #10]
   2b550:	orr	r0, r1, r0
   2b554:	strb	r0, [sp, #10]
   2b558:	b	2b584 <flatcc_json_parser_string_escape@@Base+0x390>
   2b55c:	ldr	r0, [sp, #12]
   2b560:	movw	r1, #0
   2b564:	strb	r1, [r0]
   2b568:	ldr	r0, [fp, #-8]
   2b56c:	ldr	r1, [fp, #-12]
   2b570:	ldr	r2, [sp, #16]
   2b574:	movw	r3, #18
   2b578:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2b57c:	str	r0, [fp, #-4]
   2b580:	b	2bb0c <flatcc_json_parser_string_escape@@Base+0x918>
   2b584:	b	2b588 <flatcc_json_parser_string_escape@@Base+0x394>
   2b588:	ldrb	r0, [sp, #10]
   2b58c:	ldr	r1, [sp, #12]
   2b590:	strb	r0, [r1, #1]
   2b594:	ldr	r0, [fp, #-12]
   2b598:	add	r0, r0, #4
   2b59c:	str	r0, [fp, #-4]
   2b5a0:	b	2bb0c <flatcc_json_parser_string_escape@@Base+0x918>
   2b5a4:	ldr	r0, [sp, #16]
   2b5a8:	ldr	r1, [fp, #-12]
   2b5ac:	sub	r0, r0, r1
   2b5b0:	cmp	r0, #6
   2b5b4:	bge	2b5e0 <flatcc_json_parser_string_escape@@Base+0x3ec>
   2b5b8:	ldr	r0, [sp, #12]
   2b5bc:	movw	r1, #0
   2b5c0:	strb	r1, [r0]
   2b5c4:	ldr	r0, [fp, #-8]
   2b5c8:	ldr	r1, [fp, #-12]
   2b5cc:	ldr	r2, [sp, #16]
   2b5d0:	movw	r3, #18
   2b5d4:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2b5d8:	str	r0, [fp, #-4]
   2b5dc:	b	2bb0c <flatcc_json_parser_string_escape@@Base+0x918>
   2b5e0:	movw	r0, #0
   2b5e4:	strh	r0, [sp, #8]
   2b5e8:	ldr	r0, [fp, #-12]
   2b5ec:	ldrb	r0, [r0, #2]
   2b5f0:	strb	r0, [sp, #11]
   2b5f4:	ldrb	r0, [sp, #11]
   2b5f8:	cmp	r0, #48	; 0x30
   2b5fc:	blt	2b628 <flatcc_json_parser_string_escape@@Base+0x434>
   2b600:	ldrb	r0, [sp, #11]
   2b604:	cmp	r0, #57	; 0x39
   2b608:	bgt	2b628 <flatcc_json_parser_string_escape@@Base+0x434>
   2b60c:	ldrb	r0, [sp, #11]
   2b610:	sub	r0, r0, #48	; 0x30
   2b614:	strh	r0, [sp, #6]
   2b618:	ldrh	r0, [sp, #6]
   2b61c:	lsl	r0, r0, #12
   2b620:	strh	r0, [sp, #8]
   2b624:	b	2b6a0 <flatcc_json_parser_string_escape@@Base+0x4ac>
   2b628:	ldrb	r0, [sp, #11]
   2b62c:	orr	r0, r0, #32
   2b630:	strb	r0, [sp, #11]
   2b634:	ldrb	r0, [sp, #11]
   2b638:	cmp	r0, #97	; 0x61
   2b63c:	blt	2b674 <flatcc_json_parser_string_escape@@Base+0x480>
   2b640:	ldrb	r0, [sp, #11]
   2b644:	cmp	r0, #102	; 0x66
   2b648:	bgt	2b674 <flatcc_json_parser_string_escape@@Base+0x480>
   2b64c:	ldrb	r0, [sp, #11]
   2b650:	sub	r0, r0, #97	; 0x61
   2b654:	add	r0, r0, #10
   2b658:	strh	r0, [sp, #6]
   2b65c:	ldrh	r0, [sp, #6]
   2b660:	lsl	r0, r0, #12
   2b664:	ldrh	r1, [sp, #8]
   2b668:	orr	r0, r1, r0
   2b66c:	strh	r0, [sp, #8]
   2b670:	b	2b69c <flatcc_json_parser_string_escape@@Base+0x4a8>
   2b674:	ldr	r0, [sp, #12]
   2b678:	movw	r1, #0
   2b67c:	strb	r1, [r0]
   2b680:	ldr	r0, [fp, #-8]
   2b684:	ldr	r1, [fp, #-12]
   2b688:	ldr	r2, [sp, #16]
   2b68c:	movw	r3, #18
   2b690:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2b694:	str	r0, [fp, #-4]
   2b698:	b	2bb0c <flatcc_json_parser_string_escape@@Base+0x918>
   2b69c:	b	2b6a0 <flatcc_json_parser_string_escape@@Base+0x4ac>
   2b6a0:	ldr	r0, [fp, #-12]
   2b6a4:	ldrb	r0, [r0, #3]
   2b6a8:	strb	r0, [sp, #11]
   2b6ac:	ldrb	r0, [sp, #11]
   2b6b0:	cmp	r0, #48	; 0x30
   2b6b4:	blt	2b6e8 <flatcc_json_parser_string_escape@@Base+0x4f4>
   2b6b8:	ldrb	r0, [sp, #11]
   2b6bc:	cmp	r0, #57	; 0x39
   2b6c0:	bgt	2b6e8 <flatcc_json_parser_string_escape@@Base+0x4f4>
   2b6c4:	ldrb	r0, [sp, #11]
   2b6c8:	sub	r0, r0, #48	; 0x30
   2b6cc:	strh	r0, [sp, #6]
   2b6d0:	ldrh	r0, [sp, #6]
   2b6d4:	lsl	r0, r0, #8
   2b6d8:	ldrh	r1, [sp, #8]
   2b6dc:	orr	r0, r1, r0
   2b6e0:	strh	r0, [sp, #8]
   2b6e4:	b	2b760 <flatcc_json_parser_string_escape@@Base+0x56c>
   2b6e8:	ldrb	r0, [sp, #11]
   2b6ec:	orr	r0, r0, #32
   2b6f0:	strb	r0, [sp, #11]
   2b6f4:	ldrb	r0, [sp, #11]
   2b6f8:	cmp	r0, #97	; 0x61
   2b6fc:	blt	2b734 <flatcc_json_parser_string_escape@@Base+0x540>
   2b700:	ldrb	r0, [sp, #11]
   2b704:	cmp	r0, #102	; 0x66
   2b708:	bgt	2b734 <flatcc_json_parser_string_escape@@Base+0x540>
   2b70c:	ldrb	r0, [sp, #11]
   2b710:	sub	r0, r0, #97	; 0x61
   2b714:	add	r0, r0, #10
   2b718:	strh	r0, [sp, #6]
   2b71c:	ldrh	r0, [sp, #6]
   2b720:	lsl	r0, r0, #8
   2b724:	ldrh	r1, [sp, #8]
   2b728:	orr	r0, r1, r0
   2b72c:	strh	r0, [sp, #8]
   2b730:	b	2b75c <flatcc_json_parser_string_escape@@Base+0x568>
   2b734:	ldr	r0, [sp, #12]
   2b738:	movw	r1, #0
   2b73c:	strb	r1, [r0]
   2b740:	ldr	r0, [fp, #-8]
   2b744:	ldr	r1, [fp, #-12]
   2b748:	ldr	r2, [sp, #16]
   2b74c:	movw	r3, #18
   2b750:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2b754:	str	r0, [fp, #-4]
   2b758:	b	2bb0c <flatcc_json_parser_string_escape@@Base+0x918>
   2b75c:	b	2b760 <flatcc_json_parser_string_escape@@Base+0x56c>
   2b760:	ldr	r0, [fp, #-12]
   2b764:	ldrb	r0, [r0, #4]
   2b768:	strb	r0, [sp, #11]
   2b76c:	ldrb	r0, [sp, #11]
   2b770:	cmp	r0, #48	; 0x30
   2b774:	blt	2b7a8 <flatcc_json_parser_string_escape@@Base+0x5b4>
   2b778:	ldrb	r0, [sp, #11]
   2b77c:	cmp	r0, #57	; 0x39
   2b780:	bgt	2b7a8 <flatcc_json_parser_string_escape@@Base+0x5b4>
   2b784:	ldrb	r0, [sp, #11]
   2b788:	sub	r0, r0, #48	; 0x30
   2b78c:	strh	r0, [sp, #6]
   2b790:	ldrh	r0, [sp, #6]
   2b794:	lsl	r0, r0, #4
   2b798:	ldrh	r1, [sp, #8]
   2b79c:	orr	r0, r1, r0
   2b7a0:	strh	r0, [sp, #8]
   2b7a4:	b	2b820 <flatcc_json_parser_string_escape@@Base+0x62c>
   2b7a8:	ldrb	r0, [sp, #11]
   2b7ac:	orr	r0, r0, #32
   2b7b0:	strb	r0, [sp, #11]
   2b7b4:	ldrb	r0, [sp, #11]
   2b7b8:	cmp	r0, #97	; 0x61
   2b7bc:	blt	2b7f4 <flatcc_json_parser_string_escape@@Base+0x600>
   2b7c0:	ldrb	r0, [sp, #11]
   2b7c4:	cmp	r0, #102	; 0x66
   2b7c8:	bgt	2b7f4 <flatcc_json_parser_string_escape@@Base+0x600>
   2b7cc:	ldrb	r0, [sp, #11]
   2b7d0:	sub	r0, r0, #97	; 0x61
   2b7d4:	add	r0, r0, #10
   2b7d8:	strh	r0, [sp, #6]
   2b7dc:	ldrh	r0, [sp, #6]
   2b7e0:	lsl	r0, r0, #4
   2b7e4:	ldrh	r1, [sp, #8]
   2b7e8:	orr	r0, r1, r0
   2b7ec:	strh	r0, [sp, #8]
   2b7f0:	b	2b81c <flatcc_json_parser_string_escape@@Base+0x628>
   2b7f4:	ldr	r0, [sp, #12]
   2b7f8:	movw	r1, #0
   2b7fc:	strb	r1, [r0]
   2b800:	ldr	r0, [fp, #-8]
   2b804:	ldr	r1, [fp, #-12]
   2b808:	ldr	r2, [sp, #16]
   2b80c:	movw	r3, #18
   2b810:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2b814:	str	r0, [fp, #-4]
   2b818:	b	2bb0c <flatcc_json_parser_string_escape@@Base+0x918>
   2b81c:	b	2b820 <flatcc_json_parser_string_escape@@Base+0x62c>
   2b820:	ldr	r0, [fp, #-12]
   2b824:	ldrb	r0, [r0, #5]
   2b828:	strb	r0, [sp, #11]
   2b82c:	ldrb	r0, [sp, #11]
   2b830:	cmp	r0, #48	; 0x30
   2b834:	blt	2b864 <flatcc_json_parser_string_escape@@Base+0x670>
   2b838:	ldrb	r0, [sp, #11]
   2b83c:	cmp	r0, #57	; 0x39
   2b840:	bgt	2b864 <flatcc_json_parser_string_escape@@Base+0x670>
   2b844:	ldrb	r0, [sp, #11]
   2b848:	sub	r0, r0, #48	; 0x30
   2b84c:	strh	r0, [sp, #6]
   2b850:	ldrh	r0, [sp, #6]
   2b854:	ldrh	r1, [sp, #8]
   2b858:	orr	r0, r1, r0
   2b85c:	strh	r0, [sp, #8]
   2b860:	b	2b8d8 <flatcc_json_parser_string_escape@@Base+0x6e4>
   2b864:	ldrb	r0, [sp, #11]
   2b868:	orr	r0, r0, #32
   2b86c:	strb	r0, [sp, #11]
   2b870:	ldrb	r0, [sp, #11]
   2b874:	cmp	r0, #97	; 0x61
   2b878:	blt	2b8ac <flatcc_json_parser_string_escape@@Base+0x6b8>
   2b87c:	ldrb	r0, [sp, #11]
   2b880:	cmp	r0, #102	; 0x66
   2b884:	bgt	2b8ac <flatcc_json_parser_string_escape@@Base+0x6b8>
   2b888:	ldrb	r0, [sp, #11]
   2b88c:	sub	r0, r0, #97	; 0x61
   2b890:	add	r0, r0, #10
   2b894:	strh	r0, [sp, #6]
   2b898:	ldrh	r0, [sp, #6]
   2b89c:	ldrh	r1, [sp, #8]
   2b8a0:	orr	r0, r1, r0
   2b8a4:	strh	r0, [sp, #8]
   2b8a8:	b	2b8d4 <flatcc_json_parser_string_escape@@Base+0x6e0>
   2b8ac:	ldr	r0, [sp, #12]
   2b8b0:	movw	r1, #0
   2b8b4:	strb	r1, [r0]
   2b8b8:	ldr	r0, [fp, #-8]
   2b8bc:	ldr	r1, [fp, #-12]
   2b8c0:	ldr	r2, [sp, #16]
   2b8c4:	movw	r3, #18
   2b8c8:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2b8cc:	str	r0, [fp, #-4]
   2b8d0:	b	2bb0c <flatcc_json_parser_string_escape@@Base+0x918>
   2b8d4:	b	2b8d8 <flatcc_json_parser_string_escape@@Base+0x6e4>
   2b8d8:	ldrh	r0, [sp, #8]
   2b8dc:	cmp	r0, #127	; 0x7f
   2b8e0:	bgt	2b900 <flatcc_json_parser_string_escape@@Base+0x70c>
   2b8e4:	ldr	r0, [sp, #12]
   2b8e8:	movw	r1, #1
   2b8ec:	strb	r1, [r0]
   2b8f0:	ldrh	r0, [sp, #8]
   2b8f4:	ldr	r1, [sp, #12]
   2b8f8:	strb	r0, [r1, #1]
   2b8fc:	b	2b998 <flatcc_json_parser_string_escape@@Base+0x7a4>
   2b900:	ldrh	r0, [sp, #8]
   2b904:	movw	r1, #2047	; 0x7ff
   2b908:	cmp	r0, r1
   2b90c:	bgt	2b948 <flatcc_json_parser_string_escape@@Base+0x754>
   2b910:	ldr	r0, [sp, #12]
   2b914:	movw	r1, #2
   2b918:	strb	r1, [r0]
   2b91c:	ldrh	r0, [sp, #8]
   2b920:	asr	r0, r0, #6
   2b924:	orr	r0, r0, #192	; 0xc0
   2b928:	ldr	r1, [sp, #12]
   2b92c:	strb	r0, [r1, #1]
   2b930:	ldrh	r0, [sp, #8]
   2b934:	and	r0, r0, #63	; 0x3f
   2b938:	orr	r0, r0, #128	; 0x80
   2b93c:	ldr	r1, [sp, #12]
   2b940:	strb	r0, [r1, #2]
   2b944:	b	2b994 <flatcc_json_parser_string_escape@@Base+0x7a0>
   2b948:	ldr	r0, [sp, #12]
   2b94c:	movw	r1, #3
   2b950:	strb	r1, [r0]
   2b954:	ldrh	r0, [sp, #8]
   2b958:	asr	r0, r0, #12
   2b95c:	orr	r0, r0, #224	; 0xe0
   2b960:	ldr	r1, [sp, #12]
   2b964:	strb	r0, [r1, #1]
   2b968:	ldrh	r0, [sp, #8]
   2b96c:	asr	r0, r0, #6
   2b970:	and	r0, r0, #63	; 0x3f
   2b974:	orr	r0, r0, #128	; 0x80
   2b978:	ldr	r1, [sp, #12]
   2b97c:	strb	r0, [r1, #2]
   2b980:	ldrh	r0, [sp, #8]
   2b984:	and	r0, r0, #63	; 0x3f
   2b988:	orr	r0, r0, #128	; 0x80
   2b98c:	ldr	r1, [sp, #12]
   2b990:	strb	r0, [r1, #3]
   2b994:	b	2b998 <flatcc_json_parser_string_escape@@Base+0x7a4>
   2b998:	ldr	r0, [fp, #-12]
   2b99c:	add	r0, r0, #6
   2b9a0:	str	r0, [fp, #-4]
   2b9a4:	b	2bb0c <flatcc_json_parser_string_escape@@Base+0x918>
   2b9a8:	ldr	r0, [sp, #12]
   2b9ac:	movw	r1, #1
   2b9b0:	strb	r1, [r0]
   2b9b4:	ldr	r0, [sp, #12]
   2b9b8:	movw	r1, #9
   2b9bc:	strb	r1, [r0, #1]
   2b9c0:	ldr	r0, [fp, #-12]
   2b9c4:	add	r0, r0, #2
   2b9c8:	str	r0, [fp, #-4]
   2b9cc:	b	2bb0c <flatcc_json_parser_string_escape@@Base+0x918>
   2b9d0:	ldr	r0, [sp, #12]
   2b9d4:	movw	r1, #1
   2b9d8:	strb	r1, [r0]
   2b9dc:	ldr	r0, [sp, #12]
   2b9e0:	movw	r1, #10
   2b9e4:	strb	r1, [r0, #1]
   2b9e8:	ldr	r0, [fp, #-12]
   2b9ec:	add	r0, r0, #2
   2b9f0:	str	r0, [fp, #-4]
   2b9f4:	b	2bb0c <flatcc_json_parser_string_escape@@Base+0x918>
   2b9f8:	ldr	r0, [sp, #12]
   2b9fc:	movw	r1, #1
   2ba00:	strb	r1, [r0]
   2ba04:	ldr	r0, [sp, #12]
   2ba08:	movw	r1, #13
   2ba0c:	strb	r1, [r0, #1]
   2ba10:	ldr	r0, [fp, #-12]
   2ba14:	add	r0, r0, #2
   2ba18:	str	r0, [fp, #-4]
   2ba1c:	b	2bb0c <flatcc_json_parser_string_escape@@Base+0x918>
   2ba20:	ldr	r0, [sp, #12]
   2ba24:	movw	r1, #1
   2ba28:	strb	r1, [r0]
   2ba2c:	ldr	r0, [sp, #12]
   2ba30:	movw	r1, #8
   2ba34:	strb	r1, [r0, #1]
   2ba38:	ldr	r0, [fp, #-12]
   2ba3c:	add	r0, r0, #2
   2ba40:	str	r0, [fp, #-4]
   2ba44:	b	2bb0c <flatcc_json_parser_string_escape@@Base+0x918>
   2ba48:	ldr	r0, [sp, #12]
   2ba4c:	movw	r1, #1
   2ba50:	strb	r1, [r0]
   2ba54:	ldr	r0, [sp, #12]
   2ba58:	movw	r1, #12
   2ba5c:	strb	r1, [r0, #1]
   2ba60:	ldr	r0, [fp, #-12]
   2ba64:	add	r0, r0, #2
   2ba68:	str	r0, [fp, #-4]
   2ba6c:	b	2bb0c <flatcc_json_parser_string_escape@@Base+0x918>
   2ba70:	ldr	r0, [sp, #12]
   2ba74:	movw	r1, #1
   2ba78:	strb	r1, [r0]
   2ba7c:	ldr	r0, [sp, #12]
   2ba80:	movw	r1, #34	; 0x22
   2ba84:	strb	r1, [r0, #1]
   2ba88:	ldr	r0, [fp, #-12]
   2ba8c:	add	r0, r0, #2
   2ba90:	str	r0, [fp, #-4]
   2ba94:	b	2bb0c <flatcc_json_parser_string_escape@@Base+0x918>
   2ba98:	ldr	r0, [sp, #12]
   2ba9c:	movw	r1, #1
   2baa0:	strb	r1, [r0]
   2baa4:	ldr	r0, [sp, #12]
   2baa8:	movw	r1, #92	; 0x5c
   2baac:	strb	r1, [r0, #1]
   2bab0:	ldr	r0, [fp, #-12]
   2bab4:	add	r0, r0, #2
   2bab8:	str	r0, [fp, #-4]
   2babc:	b	2bb0c <flatcc_json_parser_string_escape@@Base+0x918>
   2bac0:	ldr	r0, [sp, #12]
   2bac4:	movw	r1, #1
   2bac8:	strb	r1, [r0]
   2bacc:	ldr	r0, [sp, #12]
   2bad0:	movw	r1, #47	; 0x2f
   2bad4:	strb	r1, [r0, #1]
   2bad8:	ldr	r0, [fp, #-12]
   2badc:	add	r0, r0, #2
   2bae0:	str	r0, [fp, #-4]
   2bae4:	b	2bb0c <flatcc_json_parser_string_escape@@Base+0x918>
   2bae8:	ldr	r0, [sp, #12]
   2baec:	movw	r1, #0
   2baf0:	strb	r1, [r0]
   2baf4:	ldr	r0, [fp, #-8]
   2baf8:	ldr	r1, [fp, #-12]
   2bafc:	ldr	r2, [sp, #16]
   2bb00:	movw	r3, #18
   2bb04:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2bb08:	str	r0, [fp, #-4]
   2bb0c:	ldr	r0, [fp, #-4]
   2bb10:	mov	sp, fp
   2bb14:	pop	{fp, pc}

0002bb18 <flatcc_json_parser_skip_constant@@Base>:
   2bb18:	push	{fp, lr}
   2bb1c:	mov	fp, sp
   2bb20:	sub	sp, sp, #24
   2bb24:	str	r0, [fp, #-8]
   2bb28:	str	r1, [sp, #12]
   2bb2c:	str	r2, [sp, #8]
   2bb30:	ldr	r0, [sp, #12]
   2bb34:	ldr	r1, [sp, #8]
   2bb38:	cmp	r0, r1
   2bb3c:	beq	2bc08 <flatcc_json_parser_skip_constant@@Base+0xf0>
   2bb40:	ldr	r0, [sp, #12]
   2bb44:	ldrb	r0, [r0]
   2bb48:	strb	r0, [sp, #7]
   2bb4c:	ldrb	r0, [sp, #7]
   2bb50:	and	r0, r0, #128	; 0x80
   2bb54:	cmp	r0, #0
   2bb58:	bne	2bb8c <flatcc_json_parser_skip_constant@@Base+0x74>
   2bb5c:	ldrb	r0, [sp, #7]
   2bb60:	cmp	r0, #95	; 0x5f
   2bb64:	beq	2bb8c <flatcc_json_parser_skip_constant@@Base+0x74>
   2bb68:	ldrb	r0, [sp, #7]
   2bb6c:	cmp	r0, #48	; 0x30
   2bb70:	blt	2bb80 <flatcc_json_parser_skip_constant@@Base+0x68>
   2bb74:	ldrb	r0, [sp, #7]
   2bb78:	cmp	r0, #57	; 0x39
   2bb7c:	ble	2bb8c <flatcc_json_parser_skip_constant@@Base+0x74>
   2bb80:	ldrb	r0, [sp, #7]
   2bb84:	cmp	r0, #46	; 0x2e
   2bb88:	bne	2bb9c <flatcc_json_parser_skip_constant@@Base+0x84>
   2bb8c:	ldr	r0, [sp, #12]
   2bb90:	add	r0, r0, #1
   2bb94:	str	r0, [sp, #12]
   2bb98:	b	2bb30 <flatcc_json_parser_skip_constant@@Base+0x18>
   2bb9c:	ldrb	r0, [sp, #7]
   2bba0:	orr	r0, r0, #32
   2bba4:	strb	r0, [sp, #7]
   2bba8:	ldrb	r0, [sp, #7]
   2bbac:	cmp	r0, #97	; 0x61
   2bbb0:	blt	2bbd0 <flatcc_json_parser_skip_constant@@Base+0xb8>
   2bbb4:	ldrb	r0, [sp, #7]
   2bbb8:	cmp	r0, #122	; 0x7a
   2bbbc:	bgt	2bbd0 <flatcc_json_parser_skip_constant@@Base+0xb8>
   2bbc0:	ldr	r0, [sp, #12]
   2bbc4:	add	r0, r0, #1
   2bbc8:	str	r0, [sp, #12]
   2bbcc:	b	2bb30 <flatcc_json_parser_skip_constant@@Base+0x18>
   2bbd0:	ldr	r0, [fp, #-8]
   2bbd4:	ldr	r1, [sp, #12]
   2bbd8:	str	r1, [sp]
   2bbdc:	ldr	r2, [sp, #8]
   2bbe0:	bl	2bc1c <flatcc_json_parser_skip_constant@@Base+0x104>
   2bbe4:	str	r0, [sp, #12]
   2bbe8:	ldr	r0, [sp, #12]
   2bbec:	ldr	r1, [sp]
   2bbf0:	cmp	r0, r1
   2bbf4:	bne	2bc04 <flatcc_json_parser_skip_constant@@Base+0xec>
   2bbf8:	ldr	r0, [sp, #12]
   2bbfc:	str	r0, [fp, #-4]
   2bc00:	b	2bc10 <flatcc_json_parser_skip_constant@@Base+0xf8>
   2bc04:	b	2bb30 <flatcc_json_parser_skip_constant@@Base+0x18>
   2bc08:	ldr	r0, [sp, #12]
   2bc0c:	str	r0, [fp, #-4]
   2bc10:	ldr	r0, [fp, #-4]
   2bc14:	mov	sp, fp
   2bc18:	pop	{fp, pc}
   2bc1c:	push	{fp, lr}
   2bc20:	mov	fp, sp
   2bc24:	sub	sp, sp, #16
   2bc28:	str	r0, [sp, #8]
   2bc2c:	str	r1, [sp, #4]
   2bc30:	str	r2, [sp]
   2bc34:	ldr	r0, [sp]
   2bc38:	ldr	r1, [sp, #4]
   2bc3c:	sub	r0, r0, r1
   2bc40:	cmp	r0, #1
   2bc44:	ble	2bc98 <flatcc_json_parser_skip_constant@@Base+0x180>
   2bc48:	ldr	r0, [sp, #4]
   2bc4c:	ldrb	r0, [r0]
   2bc50:	cmp	r0, #32
   2bc54:	ble	2bc64 <flatcc_json_parser_skip_constant@@Base+0x14c>
   2bc58:	ldr	r0, [sp, #4]
   2bc5c:	str	r0, [fp, #-4]
   2bc60:	b	2bcac <flatcc_json_parser_skip_constant@@Base+0x194>
   2bc64:	ldr	r0, [sp, #4]
   2bc68:	ldrb	r0, [r0]
   2bc6c:	cmp	r0, #32
   2bc70:	bne	2bc94 <flatcc_json_parser_skip_constant@@Base+0x17c>
   2bc74:	ldr	r0, [sp, #4]
   2bc78:	ldrb	r0, [r0, #1]
   2bc7c:	cmp	r0, #32
   2bc80:	ble	2bc94 <flatcc_json_parser_skip_constant@@Base+0x17c>
   2bc84:	ldr	r0, [sp, #4]
   2bc88:	add	r0, r0, #1
   2bc8c:	str	r0, [fp, #-4]
   2bc90:	b	2bcac <flatcc_json_parser_skip_constant@@Base+0x194>
   2bc94:	b	2bc98 <flatcc_json_parser_skip_constant@@Base+0x180>
   2bc98:	ldr	r0, [sp, #8]
   2bc9c:	ldr	r1, [sp, #4]
   2bca0:	ldr	r2, [sp]
   2bca4:	bl	2b010 <flatcc_json_parser_space_ext@@Base>
   2bca8:	str	r0, [fp, #-4]
   2bcac:	ldr	r0, [fp, #-4]
   2bcb0:	mov	sp, fp
   2bcb4:	pop	{fp, pc}

0002bcb8 <flatcc_json_parser_match_constant@@Base>:
   2bcb8:	push	{fp, lr}
   2bcbc:	mov	fp, sp
   2bcc0:	sub	sp, sp, #48	; 0x30
   2bcc4:	ldr	ip, [fp, #8]
   2bcc8:	str	r0, [fp, #-8]
   2bccc:	str	r1, [fp, #-12]
   2bcd0:	str	r2, [fp, #-16]
   2bcd4:	str	r3, [fp, #-20]	; 0xffffffec
   2bcd8:	ldr	r0, [fp, #-12]
   2bcdc:	str	r0, [sp, #24]
   2bce0:	ldr	r0, [fp, #-12]
   2bce4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2bce8:	add	r0, r0, r1
   2bcec:	str	r0, [sp, #20]
   2bcf0:	ldr	r0, [fp, #-16]
   2bcf4:	ldr	r1, [fp, #-12]
   2bcf8:	sub	r0, r0, r1
   2bcfc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2bd00:	cmp	r0, r1
   2bd04:	str	ip, [sp, #12]
   2bd08:	bgt	2bd24 <flatcc_json_parser_match_constant@@Base+0x6c>
   2bd0c:	ldr	r0, [fp, #8]
   2bd10:	movw	r1, #0
   2bd14:	str	r1, [r0]
   2bd18:	ldr	r0, [fp, #-12]
   2bd1c:	str	r0, [fp, #-4]
   2bd20:	b	2bfb0 <flatcc_json_parser_match_constant@@Base+0x2f8>
   2bd24:	ldr	r0, [fp, #-8]
   2bd28:	ldr	r0, [r0, #12]
   2bd2c:	cmp	r0, #0
   2bd30:	beq	2be54 <flatcc_json_parser_match_constant@@Base+0x19c>
   2bd34:	ldr	r0, [fp, #-8]
   2bd38:	ldr	r1, [sp, #20]
   2bd3c:	ldr	r2, [fp, #-16]
   2bd40:	bl	2bc1c <flatcc_json_parser_skip_constant@@Base+0x104>
   2bd44:	str	r0, [fp, #-12]
   2bd48:	ldr	r0, [fp, #-12]
   2bd4c:	ldr	r1, [fp, #-16]
   2bd50:	cmp	r0, r1
   2bd54:	bne	2bd70 <flatcc_json_parser_match_constant@@Base+0xb8>
   2bd58:	ldr	r0, [fp, #8]
   2bd5c:	movw	r1, #0
   2bd60:	str	r1, [r0]
   2bd64:	ldr	r0, [fp, #-12]
   2bd68:	str	r0, [fp, #-4]
   2bd6c:	b	2bfb0 <flatcc_json_parser_match_constant@@Base+0x2f8>
   2bd70:	ldr	r0, [fp, #-12]
   2bd74:	ldr	r1, [sp, #20]
   2bd78:	cmp	r0, r1
   2bd7c:	beq	2be00 <flatcc_json_parser_match_constant@@Base+0x148>
   2bd80:	ldr	r0, [fp, #-12]
   2bd84:	ldrb	r0, [r0]
   2bd88:	strb	r0, [sp, #19]
   2bd8c:	ldrb	r0, [sp, #19]
   2bd90:	cmp	r0, #95	; 0x5f
   2bd94:	beq	2bda8 <flatcc_json_parser_match_constant@@Base+0xf0>
   2bd98:	ldrb	r0, [sp, #19]
   2bd9c:	and	r0, r0, #128	; 0x80
   2bda0:	cmp	r0, #0
   2bda4:	beq	2bdc0 <flatcc_json_parser_match_constant@@Base+0x108>
   2bda8:	ldr	r0, [fp, #8]
   2bdac:	movw	r1, #1
   2bdb0:	str	r1, [r0]
   2bdb4:	ldr	r0, [fp, #-12]
   2bdb8:	str	r0, [fp, #-4]
   2bdbc:	b	2bfb0 <flatcc_json_parser_match_constant@@Base+0x2f8>
   2bdc0:	ldrb	r0, [sp, #19]
   2bdc4:	orr	r0, r0, #32
   2bdc8:	strb	r0, [sp, #19]
   2bdcc:	ldrb	r0, [sp, #19]
   2bdd0:	cmp	r0, #97	; 0x61
   2bdd4:	blt	2bdfc <flatcc_json_parser_match_constant@@Base+0x144>
   2bdd8:	ldrb	r0, [sp, #19]
   2bddc:	cmp	r0, #122	; 0x7a
   2bde0:	bgt	2bdfc <flatcc_json_parser_match_constant@@Base+0x144>
   2bde4:	ldr	r0, [fp, #8]
   2bde8:	movw	r1, #1
   2bdec:	str	r1, [r0]
   2bdf0:	ldr	r0, [fp, #-12]
   2bdf4:	str	r0, [fp, #-4]
   2bdf8:	b	2bfb0 <flatcc_json_parser_match_constant@@Base+0x2f8>
   2bdfc:	b	2be00 <flatcc_json_parser_match_constant@@Base+0x148>
   2be00:	ldr	r0, [fp, #8]
   2be04:	movw	r1, #0
   2be08:	str	r1, [r0]
   2be0c:	ldr	r0, [fp, #-12]
   2be10:	ldrb	r0, [r0]
   2be14:	cmp	r0, #44	; 0x2c
   2be18:	beq	2be3c <flatcc_json_parser_match_constant@@Base+0x184>
   2be1c:	ldr	r0, [fp, #-12]
   2be20:	ldrb	r0, [r0]
   2be24:	cmp	r0, #125	; 0x7d
   2be28:	beq	2be3c <flatcc_json_parser_match_constant@@Base+0x184>
   2be2c:	ldr	r0, [fp, #-12]
   2be30:	ldrb	r0, [r0]
   2be34:	cmp	r0, #93	; 0x5d
   2be38:	bne	2be48 <flatcc_json_parser_match_constant@@Base+0x190>
   2be3c:	ldr	r0, [fp, #-12]
   2be40:	str	r0, [fp, #-4]
   2be44:	b	2bfb0 <flatcc_json_parser_match_constant@@Base+0x2f8>
   2be48:	ldr	r0, [sp, #24]
   2be4c:	str	r0, [fp, #-4]
   2be50:	b	2bfb0 <flatcc_json_parser_match_constant@@Base+0x2f8>
   2be54:	ldr	r0, [sp, #20]
   2be58:	str	r0, [fp, #-12]
   2be5c:	ldr	r0, [fp, #-12]
   2be60:	ldrb	r0, [r0]
   2be64:	cmp	r0, #32
   2be68:	bne	2bf18 <flatcc_json_parser_match_constant@@Base+0x260>
   2be6c:	ldr	r0, [fp, #-12]
   2be70:	add	r0, r0, #1
   2be74:	str	r0, [fp, #-12]
   2be78:	ldr	r0, [fp, #-12]
   2be7c:	ldr	r1, [fp, #-16]
   2be80:	cmp	r0, r1
   2be84:	movw	r0, #0
   2be88:	str	r0, [sp, #8]
   2be8c:	beq	2bea8 <flatcc_json_parser_match_constant@@Base+0x1f0>
   2be90:	ldr	r0, [fp, #-12]
   2be94:	ldrb	r0, [r0]
   2be98:	cmp	r0, #32
   2be9c:	movw	r0, #0
   2bea0:	moveq	r0, #1
   2bea4:	str	r0, [sp, #8]
   2bea8:	ldr	r0, [sp, #8]
   2beac:	tst	r0, #1
   2beb0:	beq	2bec4 <flatcc_json_parser_match_constant@@Base+0x20c>
   2beb4:	ldr	r0, [fp, #-12]
   2beb8:	add	r0, r0, #1
   2bebc:	str	r0, [fp, #-12]
   2bec0:	b	2be78 <flatcc_json_parser_match_constant@@Base+0x1c0>
   2bec4:	ldr	r0, [fp, #-12]
   2bec8:	ldr	r1, [fp, #-16]
   2becc:	cmp	r0, r1
   2bed0:	bne	2beec <flatcc_json_parser_match_constant@@Base+0x234>
   2bed4:	ldr	r0, [fp, #8]
   2bed8:	movw	r1, #0
   2bedc:	str	r1, [r0]
   2bee0:	ldr	r0, [fp, #-12]
   2bee4:	str	r0, [fp, #-4]
   2bee8:	b	2bfb0 <flatcc_json_parser_match_constant@@Base+0x2f8>
   2beec:	ldr	r0, [fp, #-12]
   2bef0:	ldrb	r0, [r0]
   2bef4:	cmp	r0, #34	; 0x22
   2bef8:	beq	2bf14 <flatcc_json_parser_match_constant@@Base+0x25c>
   2befc:	ldr	r0, [fp, #8]
   2bf00:	movw	r1, #1
   2bf04:	str	r1, [r0]
   2bf08:	ldr	r0, [fp, #-12]
   2bf0c:	str	r0, [fp, #-4]
   2bf10:	b	2bfb0 <flatcc_json_parser_match_constant@@Base+0x2f8>
   2bf14:	b	2bf18 <flatcc_json_parser_match_constant@@Base+0x260>
   2bf18:	ldr	r0, [fp, #-12]
   2bf1c:	ldrb	r0, [r0]
   2bf20:	mov	r1, r0
   2bf24:	cmp	r0, #34	; 0x22
   2bf28:	str	r1, [sp, #4]
   2bf2c:	beq	2bf6c <flatcc_json_parser_match_constant@@Base+0x2b4>
   2bf30:	b	2bf34 <flatcc_json_parser_match_constant@@Base+0x27c>
   2bf34:	ldr	r0, [sp, #4]
   2bf38:	cmp	r0, #92	; 0x5c
   2bf3c:	bne	2bf9c <flatcc_json_parser_match_constant@@Base+0x2e4>
   2bf40:	b	2bf44 <flatcc_json_parser_match_constant@@Base+0x28c>
   2bf44:	ldr	r0, [fp, #8]
   2bf48:	movw	r1, #0
   2bf4c:	str	r1, [r0]
   2bf50:	ldr	r0, [fp, #-8]
   2bf54:	ldr	r1, [fp, #-12]
   2bf58:	ldr	r2, [fp, #-16]
   2bf5c:	movw	r3, #18
   2bf60:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2bf64:	str	r0, [fp, #-4]
   2bf68:	b	2bfb0 <flatcc_json_parser_match_constant@@Base+0x2f8>
   2bf6c:	ldr	r0, [fp, #-8]
   2bf70:	ldr	r1, [fp, #-12]
   2bf74:	add	r1, r1, #1
   2bf78:	movw	r2, #0
   2bf7c:	bl	2bc1c <flatcc_json_parser_skip_constant@@Base+0x104>
   2bf80:	str	r0, [fp, #-12]
   2bf84:	ldr	r0, [fp, #8]
   2bf88:	movw	r1, #0
   2bf8c:	str	r1, [r0]
   2bf90:	ldr	r0, [fp, #-12]
   2bf94:	str	r0, [fp, #-4]
   2bf98:	b	2bfb0 <flatcc_json_parser_match_constant@@Base+0x2f8>
   2bf9c:	ldr	r0, [fp, #8]
   2bfa0:	movw	r1, #0
   2bfa4:	str	r1, [r0]
   2bfa8:	ldr	r0, [sp, #24]
   2bfac:	str	r0, [fp, #-4]
   2bfb0:	ldr	r0, [fp, #-4]
   2bfb4:	mov	sp, fp
   2bfb8:	pop	{fp, pc}

0002bfbc <flatcc_json_parser_unmatched_symbol@@Base>:
   2bfbc:	push	{fp, lr}
   2bfc0:	mov	fp, sp
   2bfc4:	sub	sp, sp, #16
   2bfc8:	str	r0, [sp, #8]
   2bfcc:	str	r1, [sp, #4]
   2bfd0:	str	r2, [sp]
   2bfd4:	ldr	r0, [sp, #8]
   2bfd8:	ldr	r0, [r0, #8]
   2bfdc:	and	r0, r0, #1
   2bfe0:	cmp	r0, #0
   2bfe4:	beq	2c088 <flatcc_json_parser_unmatched_symbol@@Base+0xcc>
   2bfe8:	ldr	r0, [sp, #8]
   2bfec:	ldr	r1, [sp, #4]
   2bff0:	ldr	r2, [sp]
   2bff4:	bl	2c0ac <flatcc_json_parser_unmatched_symbol@@Base+0xf0>
   2bff8:	str	r0, [sp, #4]
   2bffc:	ldr	r0, [sp, #8]
   2c000:	ldr	r1, [sp, #4]
   2c004:	ldr	r2, [sp]
   2c008:	bl	2bc1c <flatcc_json_parser_skip_constant@@Base+0x104>
   2c00c:	str	r0, [sp, #4]
   2c010:	ldr	r0, [sp, #4]
   2c014:	ldr	r1, [sp]
   2c018:	cmp	r0, r1
   2c01c:	beq	2c054 <flatcc_json_parser_unmatched_symbol@@Base+0x98>
   2c020:	ldr	r0, [sp, #4]
   2c024:	ldrb	r0, [r0]
   2c028:	cmp	r0, #58	; 0x3a
   2c02c:	bne	2c054 <flatcc_json_parser_unmatched_symbol@@Base+0x98>
   2c030:	ldr	r0, [sp, #4]
   2c034:	add	r0, r0, #1
   2c038:	str	r0, [sp, #4]
   2c03c:	ldr	r0, [sp, #8]
   2c040:	ldr	r1, [sp, #4]
   2c044:	ldr	r2, [sp]
   2c048:	bl	2bc1c <flatcc_json_parser_skip_constant@@Base+0x104>
   2c04c:	str	r0, [sp, #4]
   2c050:	b	2c070 <flatcc_json_parser_unmatched_symbol@@Base+0xb4>
   2c054:	ldr	r0, [sp, #8]
   2c058:	ldr	r1, [sp, #4]
   2c05c:	ldr	r2, [sp]
   2c060:	movw	r3, #4
   2c064:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2c068:	str	r0, [fp, #-4]
   2c06c:	b	2c0a0 <flatcc_json_parser_unmatched_symbol@@Base+0xe4>
   2c070:	ldr	r0, [sp, #8]
   2c074:	ldr	r1, [sp, #4]
   2c078:	ldr	r2, [sp]
   2c07c:	bl	2c2c0 <flatcc_json_parser_generic_json@@Base>
   2c080:	str	r0, [fp, #-4]
   2c084:	b	2c0a0 <flatcc_json_parser_unmatched_symbol@@Base+0xe4>
   2c088:	ldr	r0, [sp, #8]
   2c08c:	ldr	r1, [sp, #4]
   2c090:	ldr	r2, [sp]
   2c094:	movw	r3, #13
   2c098:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2c09c:	str	r0, [fp, #-4]
   2c0a0:	ldr	r0, [fp, #-4]
   2c0a4:	mov	sp, fp
   2c0a8:	pop	{fp, pc}
   2c0ac:	push	{fp, lr}
   2c0b0:	mov	fp, sp
   2c0b4:	sub	sp, sp, #32
   2c0b8:	str	r0, [fp, #-8]
   2c0bc:	str	r1, [fp, #-12]
   2c0c0:	str	r2, [sp, #16]
   2c0c4:	movw	r0, #0
   2c0c8:	strb	r0, [sp, #14]
   2c0cc:	ldr	r0, [fp, #-8]
   2c0d0:	ldr	r0, [r0, #12]
   2c0d4:	cmp	r0, #0
   2c0d8:	beq	2c1e0 <flatcc_json_parser_unmatched_symbol@@Base+0x224>
   2c0dc:	b	2c0e0 <flatcc_json_parser_unmatched_symbol@@Base+0x124>
   2c0e0:	ldr	r0, [fp, #-12]
   2c0e4:	ldr	r1, [sp, #16]
   2c0e8:	cmp	r0, r1
   2c0ec:	movw	r0, #0
   2c0f0:	str	r0, [sp, #8]
   2c0f4:	beq	2c110 <flatcc_json_parser_unmatched_symbol@@Base+0x154>
   2c0f8:	ldr	r0, [fp, #-12]
   2c0fc:	ldrb	r0, [r0]
   2c100:	cmp	r0, #32
   2c104:	movw	r0, #0
   2c108:	movgt	r0, #1
   2c10c:	str	r0, [sp, #8]
   2c110:	ldr	r0, [sp, #8]
   2c114:	tst	r0, #1
   2c118:	beq	2c1b4 <flatcc_json_parser_unmatched_symbol@@Base+0x1f8>
   2c11c:	ldr	r0, [fp, #-12]
   2c120:	ldrb	r0, [r0]
   2c124:	strb	r0, [sp, #15]
   2c128:	strb	r0, [sp, #14]
   2c12c:	ldrb	r0, [sp, #15]
   2c130:	cmp	r0, #95	; 0x5f
   2c134:	beq	2c16c <flatcc_json_parser_unmatched_symbol@@Base+0x1b0>
   2c138:	ldrb	r0, [sp, #15]
   2c13c:	cmp	r0, #46	; 0x2e
   2c140:	beq	2c16c <flatcc_json_parser_unmatched_symbol@@Base+0x1b0>
   2c144:	ldrb	r0, [sp, #15]
   2c148:	and	r0, r0, #128	; 0x80
   2c14c:	cmp	r0, #0
   2c150:	bne	2c16c <flatcc_json_parser_unmatched_symbol@@Base+0x1b0>
   2c154:	ldrb	r0, [sp, #15]
   2c158:	cmp	r0, #48	; 0x30
   2c15c:	blt	2c17c <flatcc_json_parser_unmatched_symbol@@Base+0x1c0>
   2c160:	ldrb	r0, [sp, #15]
   2c164:	cmp	r0, #57	; 0x39
   2c168:	bgt	2c17c <flatcc_json_parser_unmatched_symbol@@Base+0x1c0>
   2c16c:	ldr	r0, [fp, #-12]
   2c170:	add	r0, r0, #1
   2c174:	str	r0, [fp, #-12]
   2c178:	b	2c0e0 <flatcc_json_parser_unmatched_symbol@@Base+0x124>
   2c17c:	ldrb	r0, [sp, #15]
   2c180:	orr	r0, r0, #32
   2c184:	strb	r0, [sp, #15]
   2c188:	ldrb	r0, [sp, #15]
   2c18c:	cmp	r0, #97	; 0x61
   2c190:	blt	2c1b0 <flatcc_json_parser_unmatched_symbol@@Base+0x1f4>
   2c194:	ldrb	r0, [sp, #15]
   2c198:	cmp	r0, #122	; 0x7a
   2c19c:	bgt	2c1b0 <flatcc_json_parser_unmatched_symbol@@Base+0x1f4>
   2c1a0:	ldr	r0, [fp, #-12]
   2c1a4:	add	r0, r0, #1
   2c1a8:	str	r0, [fp, #-12]
   2c1ac:	b	2c0e0 <flatcc_json_parser_unmatched_symbol@@Base+0x124>
   2c1b0:	b	2c1b4 <flatcc_json_parser_unmatched_symbol@@Base+0x1f8>
   2c1b4:	ldrb	r0, [sp, #14]
   2c1b8:	cmp	r0, #46	; 0x2e
   2c1bc:	bne	2c1dc <flatcc_json_parser_unmatched_symbol@@Base+0x220>
   2c1c0:	ldr	r0, [fp, #-8]
   2c1c4:	ldr	r1, [fp, #-12]
   2c1c8:	ldr	r2, [sp, #16]
   2c1cc:	movw	r3, #5
   2c1d0:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2c1d4:	str	r0, [fp, #-4]
   2c1d8:	b	2c2b4 <flatcc_json_parser_unmatched_symbol@@Base+0x2f8>
   2c1dc:	b	2c2ac <flatcc_json_parser_unmatched_symbol@@Base+0x2f0>
   2c1e0:	b	2c1e4 <flatcc_json_parser_unmatched_symbol@@Base+0x228>
   2c1e4:	ldr	r0, [fp, #-12]
   2c1e8:	ldr	r1, [sp, #16]
   2c1ec:	cmp	r0, r1
   2c1f0:	movw	r0, #0
   2c1f4:	str	r0, [sp, #4]
   2c1f8:	beq	2c214 <flatcc_json_parser_unmatched_symbol@@Base+0x258>
   2c1fc:	ldr	r0, [fp, #-12]
   2c200:	ldrb	r0, [r0]
   2c204:	cmp	r0, #34	; 0x22
   2c208:	movw	r0, #0
   2c20c:	movne	r0, #1
   2c210:	str	r0, [sp, #4]
   2c214:	ldr	r0, [sp, #4]
   2c218:	tst	r0, #1
   2c21c:	beq	2c264 <flatcc_json_parser_unmatched_symbol@@Base+0x2a8>
   2c220:	ldr	r0, [fp, #-12]
   2c224:	ldrb	r0, [r0]
   2c228:	cmp	r0, #92	; 0x5c
   2c22c:	bne	2c254 <flatcc_json_parser_unmatched_symbol@@Base+0x298>
   2c230:	ldr	r0, [sp, #16]
   2c234:	ldr	r1, [fp, #-12]
   2c238:	sub	r0, r0, r1
   2c23c:	cmp	r0, #2
   2c240:	bge	2c248 <flatcc_json_parser_unmatched_symbol@@Base+0x28c>
   2c244:	b	2c264 <flatcc_json_parser_unmatched_symbol@@Base+0x2a8>
   2c248:	ldr	r0, [fp, #-12]
   2c24c:	add	r0, r0, #1
   2c250:	str	r0, [fp, #-12]
   2c254:	ldr	r0, [fp, #-12]
   2c258:	add	r0, r0, #1
   2c25c:	str	r0, [fp, #-12]
   2c260:	b	2c1e4 <flatcc_json_parser_unmatched_symbol@@Base+0x228>
   2c264:	ldr	r0, [fp, #-12]
   2c268:	ldr	r1, [sp, #16]
   2c26c:	cmp	r0, r1
   2c270:	beq	2c284 <flatcc_json_parser_unmatched_symbol@@Base+0x2c8>
   2c274:	ldr	r0, [fp, #-12]
   2c278:	ldrb	r0, [r0]
   2c27c:	cmp	r0, #34	; 0x22
   2c280:	beq	2c2a0 <flatcc_json_parser_unmatched_symbol@@Base+0x2e4>
   2c284:	ldr	r0, [fp, #-8]
   2c288:	ldr	r1, [fp, #-12]
   2c28c:	ldr	r2, [sp, #16]
   2c290:	movw	r3, #20
   2c294:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2c298:	str	r0, [fp, #-4]
   2c29c:	b	2c2b4 <flatcc_json_parser_unmatched_symbol@@Base+0x2f8>
   2c2a0:	ldr	r0, [fp, #-12]
   2c2a4:	add	r0, r0, #1
   2c2a8:	str	r0, [fp, #-12]
   2c2ac:	ldr	r0, [fp, #-12]
   2c2b0:	str	r0, [fp, #-4]
   2c2b4:	ldr	r0, [fp, #-4]
   2c2b8:	mov	sp, fp
   2c2bc:	pop	{fp, pc}

0002c2c0 <flatcc_json_parser_generic_json@@Base>:
   2c2c0:	push	{r4, r5, fp, lr}
   2c2c4:	add	fp, sp, #8
   2c2c8:	sub	sp, sp, #560	; 0x230
   2c2cc:	add	r3, sp, #32
   2c2d0:	str	r0, [fp, #-16]
   2c2d4:	str	r1, [fp, #-20]	; 0xffffffec
   2c2d8:	str	r2, [fp, #-24]	; 0xffffffe8
   2c2dc:	movw	r0, #0
   2c2e0:	str	r0, [sp, #12]
   2c2e4:	str	r3, [sp, #28]
   2c2e8:	ldr	r0, [sp, #28]
   2c2ec:	add	r0, r0, #512	; 0x200
   2c2f0:	str	r0, [sp, #24]
   2c2f4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c2f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c2fc:	cmp	r0, r1
   2c300:	bne	2c310 <flatcc_json_parser_generic_json@@Base+0x50>
   2c304:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c308:	str	r0, [fp, #-12]
   2c30c:	b	2c8ac <flatcc_json_parser_generic_json@@Base+0x5ec>
   2c310:	add	r0, sp, #32
   2c314:	ldr	r1, [sp, #28]
   2c318:	cmp	r1, r0
   2c31c:	beq	2c3e4 <flatcc_json_parser_generic_json@@Base+0x124>
   2c320:	ldr	r0, [sp, #28]
   2c324:	mvn	r1, #0
   2c328:	add	r0, r0, r1
   2c32c:	ldrb	r0, [r0]
   2c330:	cmp	r0, #125	; 0x7d
   2c334:	bne	2c3e4 <flatcc_json_parser_generic_json@@Base+0x124>
   2c338:	ldr	r0, [fp, #-16]
   2c33c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c340:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c344:	bl	2cccc <flatcc_json_parser_float@@Base+0x254>
   2c348:	str	r0, [fp, #-20]	; 0xffffffec
   2c34c:	ldr	r0, [fp, #-16]
   2c350:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c354:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c358:	bl	2c0ac <flatcc_json_parser_unmatched_symbol@@Base+0xf0>
   2c35c:	str	r0, [fp, #-20]	; 0xffffffec
   2c360:	ldr	r0, [fp, #-16]
   2c364:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c368:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c36c:	bl	2bc1c <flatcc_json_parser_skip_constant@@Base+0x104>
   2c370:	str	r0, [fp, #-20]	; 0xffffffec
   2c374:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c378:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c37c:	cmp	r0, r1
   2c380:	bne	2c3a0 <flatcc_json_parser_generic_json@@Base+0xe0>
   2c384:	ldr	r0, [fp, #-16]
   2c388:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c38c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c390:	movw	r3, #10
   2c394:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2c398:	str	r0, [fp, #-12]
   2c39c:	b	2c8ac <flatcc_json_parser_generic_json@@Base+0x5ec>
   2c3a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c3a4:	ldrb	r0, [r0]
   2c3a8:	cmp	r0, #58	; 0x3a
   2c3ac:	beq	2c3cc <flatcc_json_parser_generic_json@@Base+0x10c>
   2c3b0:	ldr	r0, [fp, #-16]
   2c3b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c3b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c3bc:	movw	r3, #4
   2c3c0:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2c3c4:	str	r0, [fp, #-12]
   2c3c8:	b	2c8ac <flatcc_json_parser_generic_json@@Base+0x5ec>
   2c3cc:	ldr	r0, [fp, #-16]
   2c3d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c3d4:	add	r1, r1, #1
   2c3d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c3dc:	bl	2bc1c <flatcc_json_parser_skip_constant@@Base+0x104>
   2c3e0:	str	r0, [fp, #-20]	; 0xffffffec
   2c3e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c3e8:	ldrb	r0, [r0]
   2c3ec:	sub	r0, r0, #34	; 0x22
   2c3f0:	cmp	r0, #89	; 0x59
   2c3f4:	str	r0, [sp, #8]
   2c3f8:	bhi	2c748 <flatcc_json_parser_generic_json@@Base+0x488>
   2c3fc:	add	r0, pc, #8
   2c400:	ldr	r1, [sp, #8]
   2c404:	ldr	r2, [r0, r1, lsl #2]
   2c408:	add	pc, r0, r2
   2c40c:	andeq	r0, r0, r8, ror #2
   2c410:	andeq	r0, r0, ip, lsr r3
   2c414:	andeq	r0, r0, ip, lsr r3
   2c418:	andeq	r0, r0, ip, lsr r3
   2c41c:	andeq	r0, r0, ip, lsr r3
   2c420:	andeq	r0, r0, ip, lsr r3
   2c424:	andeq	r0, r0, ip, lsr r3
   2c428:	andeq	r0, r0, ip, lsr r3
   2c42c:	andeq	r0, r0, ip, lsr r3
   2c430:	andeq	r0, r0, ip, lsr r3
   2c434:	andeq	r0, r0, ip, lsr r3
   2c438:	andeq	r0, r0, r4, lsr #4
   2c43c:	andeq	r0, r0, ip, lsr r3
   2c440:	andeq	r0, r0, ip, lsr r3
   2c444:	andeq	r0, r0, r4, lsr #4
   2c448:	andeq	r0, r0, r4, lsr #4
   2c44c:	andeq	r0, r0, r4, lsr #4
   2c450:	andeq	r0, r0, r4, lsr #4
   2c454:	andeq	r0, r0, r4, lsr #4
   2c458:	andeq	r0, r0, r4, lsr #4
   2c45c:	andeq	r0, r0, r4, lsr #4
   2c460:	andeq	r0, r0, r4, lsr #4
   2c464:	andeq	r0, r0, r4, lsr #4
   2c468:	andeq	r0, r0, r4, lsr #4
   2c46c:	andeq	r0, r0, ip, lsr r3
   2c470:	andeq	r0, r0, ip, lsr r3
   2c474:	andeq	r0, r0, ip, lsr r3
   2c478:	andeq	r0, r0, ip, lsr r3
   2c47c:	andeq	r0, r0, ip, lsr r3
   2c480:	andeq	r0, r0, ip, lsr r3
   2c484:	andeq	r0, r0, ip, lsr r3
   2c488:	andeq	r0, r0, ip, lsr r3
   2c48c:	andeq	r0, r0, ip, lsr r3
   2c490:	andeq	r0, r0, ip, lsr r3
   2c494:	andeq	r0, r0, ip, lsr r3
   2c498:	andeq	r0, r0, ip, lsr r3
   2c49c:	andeq	r0, r0, ip, lsr r3
   2c4a0:	andeq	r0, r0, ip, lsr r3
   2c4a4:	andeq	r0, r0, ip, lsr r3
   2c4a8:	andeq	r0, r0, ip, lsr r3
   2c4ac:	andeq	r0, r0, ip, lsr r3
   2c4b0:	andeq	r0, r0, ip, lsr r3
   2c4b4:	andeq	r0, r0, ip, lsr r3
   2c4b8:	andeq	r0, r0, ip, lsr r3
   2c4bc:	andeq	r0, r0, ip, lsr r3
   2c4c0:	andeq	r0, r0, ip, lsr r3
   2c4c4:	andeq	r0, r0, ip, lsr r3
   2c4c8:	andeq	r0, r0, ip, lsr r3
   2c4cc:	andeq	r0, r0, ip, lsr r3
   2c4d0:	andeq	r0, r0, ip, lsr r3
   2c4d4:	andeq	r0, r0, ip, lsr r3
   2c4d8:	andeq	r0, r0, ip, lsr r3
   2c4dc:	andeq	r0, r0, ip, lsr r3
   2c4e0:	andeq	r0, r0, ip, lsr r3
   2c4e4:	andeq	r0, r0, ip, lsr r3
   2c4e8:	andeq	r0, r0, ip, lsr r3
   2c4ec:	andeq	r0, r0, ip, lsr r3
   2c4f0:	andeq	r0, r0, ip, lsr r2
   2c4f4:	andeq	r0, r0, ip, lsr r3
   2c4f8:	andeq	r0, r0, ip, lsr r3
   2c4fc:	andeq	r0, r0, ip, lsr r3
   2c500:	andeq	r0, r0, ip, lsr r3
   2c504:	andeq	r0, r0, ip, lsr r3
   2c508:	andeq	r0, r0, ip, lsr r3
   2c50c:	andeq	r0, r0, ip, lsr r3
   2c510:	andeq	r0, r0, ip, lsr r3
   2c514:	andeq	r0, r0, ip, lsr r3
   2c518:	andeq	r0, r0, ip, lsr r3
   2c51c:	andeq	r0, r0, ip, lsr r3
   2c520:	andeq	r0, r0, ip, lsr r3
   2c524:	andeq	r0, r0, ip, lsr r3
   2c528:	andeq	r0, r0, ip, lsr r3
   2c52c:	andeq	r0, r0, ip, lsr r3
   2c530:	andeq	r0, r0, ip, lsr r3
   2c534:	andeq	r0, r0, ip, lsr r3
   2c538:	andeq	r0, r0, ip, lsr r3
   2c53c:	andeq	r0, r0, ip, lsr r3
   2c540:	andeq	r0, r0, ip, lsr r3
   2c544:	andeq	r0, r0, ip, lsr r3
   2c548:	andeq	r0, r0, ip, lsr r3
   2c54c:	andeq	r0, r0, ip, lsr r3
   2c550:	andeq	r0, r0, ip, lsr r3
   2c554:	andeq	r0, r0, ip, lsr r3
   2c558:	andeq	r0, r0, ip, lsr r3
   2c55c:	andeq	r0, r0, ip, lsr r3
   2c560:	andeq	r0, r0, ip, lsr r3
   2c564:	andeq	r0, r0, ip, lsr r3
   2c568:	andeq	r0, r0, ip, lsr r3
   2c56c:	andeq	r0, r0, ip, lsr r3
   2c570:			; <UNDEFINED> instruction: 0x000002bc
   2c574:	ldr	r0, [fp, #-16]
   2c578:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c57c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c580:	bl	2cd78 <flatcc_json_parser_float@@Base+0x300>
   2c584:	str	r0, [fp, #-20]	; 0xffffffec
   2c588:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c58c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c590:	cmp	r0, r1
   2c594:	movw	r0, #0
   2c598:	str	r0, [sp, #4]
   2c59c:	beq	2c5b8 <flatcc_json_parser_generic_json@@Base+0x2f8>
   2c5a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c5a4:	ldrb	r0, [r0]
   2c5a8:	cmp	r0, #34	; 0x22
   2c5ac:	movw	r0, #0
   2c5b0:	movne	r0, #1
   2c5b4:	str	r0, [sp, #4]
   2c5b8:	ldr	r0, [sp, #4]
   2c5bc:	tst	r0, #1
   2c5c0:	beq	2c618 <flatcc_json_parser_generic_json@@Base+0x358>
   2c5c4:	ldr	r0, [fp, #-16]
   2c5c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c5cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c5d0:	bl	2aef4 <flatcc_json_parser_string_part@@Base>
   2c5d4:	str	r0, [fp, #-20]	; 0xffffffec
   2c5d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c5dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c5e0:	cmp	r0, r1
   2c5e4:	beq	2c5fc <flatcc_json_parser_generic_json@@Base+0x33c>
   2c5e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c5ec:	ldrb	r0, [r0]
   2c5f0:	cmp	r0, #34	; 0x22
   2c5f4:	bne	2c5fc <flatcc_json_parser_generic_json@@Base+0x33c>
   2c5f8:	b	2c618 <flatcc_json_parser_generic_json@@Base+0x358>
   2c5fc:	add	r3, sp, #16
   2c600:	ldr	r0, [fp, #-16]
   2c604:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c608:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c60c:	bl	2b1f4 <flatcc_json_parser_string_escape@@Base>
   2c610:	str	r0, [fp, #-20]	; 0xffffffec
   2c614:	b	2c588 <flatcc_json_parser_generic_json@@Base+0x2c8>
   2c618:	ldr	r0, [fp, #-16]
   2c61c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c620:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c624:	bl	2cde8 <flatcc_json_parser_float@@Base+0x370>
   2c628:	str	r0, [fp, #-20]	; 0xffffffec
   2c62c:	b	2c790 <flatcc_json_parser_generic_json@@Base+0x4d0>
   2c630:	ldr	r0, [fp, #-16]
   2c634:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c638:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c63c:	bl	2ce58 <flatcc_json_parser_float@@Base+0x3e0>
   2c640:	str	r0, [fp, #-20]	; 0xffffffec
   2c644:	b	2c790 <flatcc_json_parser_generic_json@@Base+0x4d0>
   2c648:	ldr	r0, [sp, #28]
   2c64c:	ldr	r1, [sp, #24]
   2c650:	cmp	r0, r1
   2c654:	bne	2c674 <flatcc_json_parser_generic_json@@Base+0x3b4>
   2c658:	ldr	r0, [fp, #-16]
   2c65c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c660:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c664:	movw	r3, #2
   2c668:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2c66c:	str	r0, [fp, #-12]
   2c670:	b	2c8ac <flatcc_json_parser_generic_json@@Base+0x5ec>
   2c674:	ldr	r0, [sp, #28]
   2c678:	add	r1, r0, #1
   2c67c:	str	r1, [sp, #28]
   2c680:	movw	r1, #93	; 0x5d
   2c684:	strb	r1, [r0]
   2c688:	ldr	r0, [fp, #-16]
   2c68c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c690:	add	r1, r1, #1
   2c694:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c698:	bl	2bc1c <flatcc_json_parser_skip_constant@@Base+0x104>
   2c69c:	str	r0, [fp, #-20]	; 0xffffffec
   2c6a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c6a4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c6a8:	cmp	r0, r1
   2c6ac:	beq	2c6c4 <flatcc_json_parser_generic_json@@Base+0x404>
   2c6b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c6b4:	ldrb	r0, [r0]
   2c6b8:	cmp	r0, #93	; 0x5d
   2c6bc:	bne	2c6c4 <flatcc_json_parser_generic_json@@Base+0x404>
   2c6c0:	b	2c790 <flatcc_json_parser_generic_json@@Base+0x4d0>
   2c6c4:	b	2c2f4 <flatcc_json_parser_generic_json@@Base+0x34>
   2c6c8:	ldr	r0, [sp, #28]
   2c6cc:	ldr	r1, [sp, #24]
   2c6d0:	cmp	r0, r1
   2c6d4:	bne	2c6f4 <flatcc_json_parser_generic_json@@Base+0x434>
   2c6d8:	ldr	r0, [fp, #-16]
   2c6dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c6e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c6e4:	movw	r3, #2
   2c6e8:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2c6ec:	str	r0, [fp, #-12]
   2c6f0:	b	2c8ac <flatcc_json_parser_generic_json@@Base+0x5ec>
   2c6f4:	ldr	r0, [sp, #28]
   2c6f8:	add	r1, r0, #1
   2c6fc:	str	r1, [sp, #28]
   2c700:	movw	r1, #125	; 0x7d
   2c704:	strb	r1, [r0]
   2c708:	ldr	r0, [fp, #-16]
   2c70c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c710:	add	r1, r1, #1
   2c714:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c718:	bl	2bc1c <flatcc_json_parser_skip_constant@@Base+0x104>
   2c71c:	str	r0, [fp, #-20]	; 0xffffffec
   2c720:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c724:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c728:	cmp	r0, r1
   2c72c:	beq	2c744 <flatcc_json_parser_generic_json@@Base+0x484>
   2c730:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c734:	ldrb	r0, [r0]
   2c738:	cmp	r0, #125	; 0x7d
   2c73c:	bne	2c744 <flatcc_json_parser_generic_json@@Base+0x484>
   2c740:	b	2c790 <flatcc_json_parser_generic_json@@Base+0x4d0>
   2c744:	b	2c2f4 <flatcc_json_parser_generic_json@@Base+0x34>
   2c748:	ldr	r0, [fp, #-16]
   2c74c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c750:	str	r1, [sp, #20]
   2c754:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c758:	bl	2bb18 <flatcc_json_parser_skip_constant@@Base>
   2c75c:	str	r0, [fp, #-20]	; 0xffffffec
   2c760:	ldr	r0, [sp, #20]
   2c764:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c768:	cmp	r0, r1
   2c76c:	bne	2c78c <flatcc_json_parser_generic_json@@Base+0x4cc>
   2c770:	ldr	r0, [fp, #-16]
   2c774:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c778:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c77c:	movw	r3, #5
   2c780:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2c784:	str	r0, [fp, #-12]
   2c788:	b	2c8ac <flatcc_json_parser_generic_json@@Base+0x5ec>
   2c78c:	b	2c790 <flatcc_json_parser_generic_json@@Base+0x4d0>
   2c790:	b	2c794 <flatcc_json_parser_generic_json@@Base+0x4d4>
   2c794:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c798:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c79c:	cmp	r0, r1
   2c7a0:	movw	r0, #0
   2c7a4:	str	r0, [sp]
   2c7a8:	beq	2c7c4 <flatcc_json_parser_generic_json@@Base+0x504>
   2c7ac:	add	r0, sp, #32
   2c7b0:	ldr	r1, [sp, #28]
   2c7b4:	cmp	r1, r0
   2c7b8:	movw	r0, #0
   2c7bc:	movne	r0, #1
   2c7c0:	str	r0, [sp]
   2c7c4:	ldr	r0, [sp]
   2c7c8:	tst	r0, #1
   2c7cc:	beq	2c844 <flatcc_json_parser_generic_json@@Base+0x584>
   2c7d0:	ldr	r0, [sp, #28]
   2c7d4:	mvn	r1, #0
   2c7d8:	add	r0, r0, r1
   2c7dc:	str	r0, [sp, #28]
   2c7e0:	ldr	r0, [sp, #28]
   2c7e4:	ldrb	r0, [r0]
   2c7e8:	cmp	r0, #93	; 0x5d
   2c7ec:	bne	2c80c <flatcc_json_parser_generic_json@@Base+0x54c>
   2c7f0:	ldr	r0, [fp, #-16]
   2c7f4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c7f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c7fc:	add	r3, sp, #12
   2c800:	bl	2d29c <flatcc_json_parser_float@@Base+0x824>
   2c804:	str	r0, [fp, #-20]	; 0xffffffec
   2c808:	b	2c824 <flatcc_json_parser_generic_json@@Base+0x564>
   2c80c:	ldr	r0, [fp, #-16]
   2c810:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c814:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c818:	add	r3, sp, #12
   2c81c:	bl	2d400 <flatcc_json_parser_float@@Base+0x988>
   2c820:	str	r0, [fp, #-20]	; 0xffffffec
   2c824:	ldr	r0, [sp, #12]
   2c828:	cmp	r0, #0
   2c82c:	beq	2c840 <flatcc_json_parser_generic_json@@Base+0x580>
   2c830:	ldr	r0, [sp, #28]
   2c834:	add	r0, r0, #1
   2c838:	str	r0, [sp, #28]
   2c83c:	b	2c2f4 <flatcc_json_parser_generic_json@@Base+0x34>
   2c840:	b	2c794 <flatcc_json_parser_generic_json@@Base+0x4d4>
   2c844:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c848:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2c84c:	cmp	r0, r1
   2c850:	bne	2c8a4 <flatcc_json_parser_generic_json@@Base+0x5e4>
   2c854:	add	r0, sp, #32
   2c858:	ldr	r1, [sp, #28]
   2c85c:	cmp	r1, r0
   2c860:	beq	2c8a4 <flatcc_json_parser_generic_json@@Base+0x5e4>
   2c864:	ldr	r0, [fp, #-16]
   2c868:	ldr	r1, [fp, #-20]	; 0xffffffec
   2c86c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c870:	ldr	r3, [sp, #28]
   2c874:	mvn	ip, #0
   2c878:	add	r3, r3, ip
   2c87c:	ldrb	r3, [r3]
   2c880:	cmp	r3, #93	; 0x5d
   2c884:	movw	r3, #0
   2c888:	moveq	r3, #1
   2c88c:	tst	r3, #1
   2c890:	movw	r3, #9
   2c894:	moveq	r3, #10
   2c898:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2c89c:	str	r0, [fp, #-12]
   2c8a0:	b	2c8ac <flatcc_json_parser_generic_json@@Base+0x5ec>
   2c8a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2c8a8:	str	r0, [fp, #-12]
   2c8ac:	ldr	r0, [fp, #-12]
   2c8b0:	sub	sp, fp, #8
   2c8b4:	pop	{r4, r5, fp, pc}

0002c8b8 <flatcc_json_parser_double@@Base>:
   2c8b8:	push	{fp, lr}
   2c8bc:	mov	fp, sp
   2c8c0:	sub	sp, sp, #32
   2c8c4:	vldr	d16, [pc, #372]	; 2ca40 <flatcc_json_parser_double@@Base+0x188>
   2c8c8:	str	r0, [fp, #-8]
   2c8cc:	str	r1, [fp, #-12]
   2c8d0:	str	r2, [sp, #16]
   2c8d4:	str	r3, [sp, #12]
   2c8d8:	ldr	r0, [sp, #12]
   2c8dc:	vstr	d16, [r0]
   2c8e0:	ldr	r0, [fp, #-12]
   2c8e4:	ldr	r1, [sp, #16]
   2c8e8:	cmp	r0, r1
   2c8ec:	bne	2c8fc <flatcc_json_parser_double@@Base+0x44>
   2c8f0:	ldr	r0, [fp, #-12]
   2c8f4:	str	r0, [fp, #-4]
   2c8f8:	b	2ca30 <flatcc_json_parser_double@@Base+0x178>
   2c8fc:	ldr	r0, [fp, #-12]
   2c900:	str	r0, [sp, #4]
   2c904:	ldr	r0, [fp, #-12]
   2c908:	ldrb	r0, [r0]
   2c90c:	cmp	r0, #45	; 0x2d
   2c910:	bne	2c920 <flatcc_json_parser_double@@Base+0x68>
   2c914:	ldr	r0, [sp, #4]
   2c918:	add	r0, r0, #1
   2c91c:	str	r0, [sp, #4]
   2c920:	ldr	r0, [sp, #16]
   2c924:	ldr	r1, [sp, #4]
   2c928:	sub	r0, r0, r1
   2c92c:	cmp	r0, #1
   2c930:	ble	2c980 <flatcc_json_parser_double@@Base+0xc8>
   2c934:	ldr	r0, [sp, #4]
   2c938:	ldrb	r0, [r0]
   2c93c:	cmp	r0, #46	; 0x2e
   2c940:	beq	2c964 <flatcc_json_parser_double@@Base+0xac>
   2c944:	ldr	r0, [sp, #4]
   2c948:	ldrb	r0, [r0]
   2c94c:	cmp	r0, #48	; 0x30
   2c950:	bne	2c980 <flatcc_json_parser_double@@Base+0xc8>
   2c954:	ldr	r0, [sp, #4]
   2c958:	ldrb	r0, [r0, #1]
   2c95c:	cmp	r0, #48	; 0x30
   2c960:	bne	2c980 <flatcc_json_parser_double@@Base+0xc8>
   2c964:	ldr	r0, [fp, #-8]
   2c968:	ldr	r1, [fp, #-12]
   2c96c:	ldr	r2, [sp, #16]
   2c970:	movw	r3, #6
   2c974:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2c978:	str	r0, [fp, #-4]
   2c97c:	b	2ca30 <flatcc_json_parser_double@@Base+0x178>
   2c980:	ldr	r0, [fp, #-12]
   2c984:	ldr	r1, [sp, #16]
   2c988:	ldr	r2, [fp, #-12]
   2c98c:	sub	r1, r1, r2
   2c990:	ldr	r2, [sp, #12]
   2c994:	bl	2ca48 <flatcc_json_parser_double@@Base+0x190>
   2c998:	str	r0, [sp, #8]
   2c99c:	ldr	r0, [sp, #8]
   2c9a0:	movw	r1, #0
   2c9a4:	cmp	r0, r1
   2c9a8:	beq	2c9bc <flatcc_json_parser_double@@Base+0x104>
   2c9ac:	ldr	r0, [sp, #8]
   2c9b0:	ldr	r1, [fp, #-12]
   2c9b4:	cmp	r0, r1
   2c9b8:	bne	2ca28 <flatcc_json_parser_double@@Base+0x170>
   2c9bc:	b	2c9dc <flatcc_json_parser_double@@Base+0x124>
   2c9c0:	ldr	r0, [sp, #12]
   2c9c4:	vldr	d16, [r0]
   2c9c8:	vcvt.f32.f64	s0, d16
   2c9cc:	bl	12aa8 <__isinff@plt>
   2c9d0:	cmp	r0, #0
   2c9d4:	bne	2c9f0 <flatcc_json_parser_double@@Base+0x138>
   2c9d8:	b	2ca0c <flatcc_json_parser_double@@Base+0x154>
   2c9dc:	ldr	r0, [sp, #12]
   2c9e0:	vldr	d0, [r0]
   2c9e4:	bl	12ab4 <__isinf@plt>
   2c9e8:	cmp	r0, #0
   2c9ec:	beq	2ca0c <flatcc_json_parser_double@@Base+0x154>
   2c9f0:	ldr	r0, [fp, #-8]
   2c9f4:	ldr	r1, [fp, #-12]
   2c9f8:	ldr	r2, [sp, #16]
   2c9fc:	movw	r3, #7
   2ca00:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2ca04:	str	r0, [fp, #-4]
   2ca08:	b	2ca30 <flatcc_json_parser_double@@Base+0x178>
   2ca0c:	ldr	r0, [fp, #-8]
   2ca10:	ldr	r1, [fp, #-12]
   2ca14:	ldr	r2, [sp, #16]
   2ca18:	movw	r3, #6
   2ca1c:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2ca20:	str	r0, [fp, #-4]
   2ca24:	b	2ca30 <flatcc_json_parser_double@@Base+0x178>
   2ca28:	ldr	r0, [sp, #8]
   2ca2c:	str	r0, [fp, #-4]
   2ca30:	ldr	r0, [fp, #-4]
   2ca34:	mov	sp, fp
   2ca38:	pop	{fp, pc}
   2ca3c:	nop	{0}
	...
   2ca48:	push	{fp, lr}
   2ca4c:	mov	fp, sp
   2ca50:	sub	sp, sp, #16
   2ca54:	str	r0, [fp, #-4]
   2ca58:	str	r1, [sp, #8]
   2ca5c:	str	r2, [sp, #4]
   2ca60:	ldr	r0, [fp, #-4]
   2ca64:	ldr	r1, [sp, #8]
   2ca68:	ldr	r2, [sp, #4]
   2ca6c:	bl	2f738 <flatcc_json_parser_struct_as_root@@Base+0x19c>
   2ca70:	mov	sp, fp
   2ca74:	pop	{fp, pc}

0002ca78 <flatcc_json_parser_float@@Base>:
   2ca78:	push	{fp, lr}
   2ca7c:	mov	fp, sp
   2ca80:	sub	sp, sp, #32
   2ca84:	vldr	s0, [pc, #368]	; 2cbfc <flatcc_json_parser_float@@Base+0x184>
   2ca88:	str	r0, [fp, #-8]
   2ca8c:	str	r1, [fp, #-12]
   2ca90:	str	r2, [sp, #16]
   2ca94:	str	r3, [sp, #12]
   2ca98:	ldr	r0, [sp, #12]
   2ca9c:	vstr	s0, [r0]
   2caa0:	ldr	r0, [fp, #-12]
   2caa4:	ldr	r1, [sp, #16]
   2caa8:	cmp	r0, r1
   2caac:	bne	2cabc <flatcc_json_parser_float@@Base+0x44>
   2cab0:	ldr	r0, [fp, #-12]
   2cab4:	str	r0, [fp, #-4]
   2cab8:	b	2cbf0 <flatcc_json_parser_float@@Base+0x178>
   2cabc:	ldr	r0, [fp, #-12]
   2cac0:	str	r0, [sp, #4]
   2cac4:	ldr	r0, [fp, #-12]
   2cac8:	ldrb	r0, [r0]
   2cacc:	cmp	r0, #45	; 0x2d
   2cad0:	bne	2cae0 <flatcc_json_parser_float@@Base+0x68>
   2cad4:	ldr	r0, [sp, #4]
   2cad8:	add	r0, r0, #1
   2cadc:	str	r0, [sp, #4]
   2cae0:	ldr	r0, [sp, #16]
   2cae4:	ldr	r1, [sp, #4]
   2cae8:	sub	r0, r0, r1
   2caec:	cmp	r0, #1
   2caf0:	ble	2cb40 <flatcc_json_parser_float@@Base+0xc8>
   2caf4:	ldr	r0, [sp, #4]
   2caf8:	ldrb	r0, [r0]
   2cafc:	cmp	r0, #46	; 0x2e
   2cb00:	beq	2cb24 <flatcc_json_parser_float@@Base+0xac>
   2cb04:	ldr	r0, [sp, #4]
   2cb08:	ldrb	r0, [r0]
   2cb0c:	cmp	r0, #48	; 0x30
   2cb10:	bne	2cb40 <flatcc_json_parser_float@@Base+0xc8>
   2cb14:	ldr	r0, [sp, #4]
   2cb18:	ldrb	r0, [r0, #1]
   2cb1c:	cmp	r0, #48	; 0x30
   2cb20:	bne	2cb40 <flatcc_json_parser_float@@Base+0xc8>
   2cb24:	ldr	r0, [fp, #-8]
   2cb28:	ldr	r1, [fp, #-12]
   2cb2c:	ldr	r2, [sp, #16]
   2cb30:	movw	r3, #6
   2cb34:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2cb38:	str	r0, [fp, #-4]
   2cb3c:	b	2cbf0 <flatcc_json_parser_float@@Base+0x178>
   2cb40:	ldr	r0, [fp, #-12]
   2cb44:	ldr	r1, [sp, #16]
   2cb48:	ldr	r2, [fp, #-12]
   2cb4c:	sub	r1, r1, r2
   2cb50:	ldr	r2, [sp, #12]
   2cb54:	bl	2cc00 <flatcc_json_parser_float@@Base+0x188>
   2cb58:	str	r0, [sp, #8]
   2cb5c:	ldr	r0, [sp, #8]
   2cb60:	movw	r1, #0
   2cb64:	cmp	r0, r1
   2cb68:	beq	2cb7c <flatcc_json_parser_float@@Base+0x104>
   2cb6c:	ldr	r0, [sp, #8]
   2cb70:	ldr	r1, [fp, #-12]
   2cb74:	cmp	r0, r1
   2cb78:	bne	2cbe8 <flatcc_json_parser_float@@Base+0x170>
   2cb7c:	b	2cb80 <flatcc_json_parser_float@@Base+0x108>
   2cb80:	ldr	r0, [sp, #12]
   2cb84:	vldr	s0, [r0]
   2cb88:	bl	12aa8 <__isinff@plt>
   2cb8c:	cmp	r0, #0
   2cb90:	bne	2cbb0 <flatcc_json_parser_float@@Base+0x138>
   2cb94:	b	2cbcc <flatcc_json_parser_float@@Base+0x154>
   2cb98:	ldr	r0, [sp, #12]
   2cb9c:	vldr	s0, [r0]
   2cba0:	vcvt.f64.f32	d0, s0
   2cba4:	bl	12ab4 <__isinf@plt>
   2cba8:	cmp	r0, #0
   2cbac:	beq	2cbcc <flatcc_json_parser_float@@Base+0x154>
   2cbb0:	ldr	r0, [fp, #-8]
   2cbb4:	ldr	r1, [fp, #-12]
   2cbb8:	ldr	r2, [sp, #16]
   2cbbc:	movw	r3, #7
   2cbc0:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2cbc4:	str	r0, [fp, #-4]
   2cbc8:	b	2cbf0 <flatcc_json_parser_float@@Base+0x178>
   2cbcc:	ldr	r0, [fp, #-8]
   2cbd0:	ldr	r1, [fp, #-12]
   2cbd4:	ldr	r2, [sp, #16]
   2cbd8:	movw	r3, #6
   2cbdc:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2cbe0:	str	r0, [fp, #-4]
   2cbe4:	b	2cbf0 <flatcc_json_parser_float@@Base+0x178>
   2cbe8:	ldr	r0, [sp, #8]
   2cbec:	str	r0, [fp, #-4]
   2cbf0:	ldr	r0, [fp, #-4]
   2cbf4:	mov	sp, fp
   2cbf8:	pop	{fp, pc}
   2cbfc:	andeq	r0, r0, r0
   2cc00:	push	{fp, lr}
   2cc04:	mov	fp, sp
   2cc08:	sub	sp, sp, #40	; 0x28
   2cc0c:	ldr	r3, [pc, #180]	; 2ccc8 <flatcc_json_parser_float@@Base+0x250>
   2cc10:	str	r0, [fp, #-8]
   2cc14:	str	r1, [fp, #-12]
   2cc18:	str	r2, [fp, #-16]
   2cc1c:	str	r3, [sp, #4]
   2cc20:	ldr	r0, [fp, #-8]
   2cc24:	ldr	r1, [fp, #-12]
   2cc28:	add	r2, sp, #8
   2cc2c:	bl	2ca48 <flatcc_json_parser_double@@Base+0x190>
   2cc30:	str	r0, [sp, #20]
   2cc34:	vldr	d16, [sp, #8]
   2cc38:	vcvt.f32.f64	s0, d16
   2cc3c:	ldr	r0, [fp, #-16]
   2cc40:	vstr	s0, [r0]
   2cc44:	ldr	r0, [fp, #-16]
   2cc48:	vldr	s0, [r0]
   2cc4c:	bl	12aa8 <__isinff@plt>
   2cc50:	cmp	r0, #0
   2cc54:	bne	2cc74 <flatcc_json_parser_float@@Base+0x1fc>
   2cc58:	b	2ccb4 <flatcc_json_parser_float@@Base+0x23c>
   2cc5c:	ldr	r0, [fp, #-16]
   2cc60:	vldr	s0, [r0]
   2cc64:	vcvt.f64.f32	d0, s0
   2cc68:	bl	12ab4 <__isinf@plt>
   2cc6c:	cmp	r0, #0
   2cc70:	beq	2ccb4 <flatcc_json_parser_float@@Base+0x23c>
   2cc74:	vldr	d16, [sp, #8]
   2cc78:	vcmpe.f64	d16, #0.0
   2cc7c:	vmrs	APSR_nzcv, fpscr
   2cc80:	bpl	2cc94 <flatcc_json_parser_float@@Base+0x21c>
   2cc84:	vldr	s0, [sp, #4]
   2cc88:	vneg.f32	s0, s0
   2cc8c:	vstr	s0, [sp]
   2cc90:	b	2cc9c <flatcc_json_parser_float@@Base+0x224>
   2cc94:	vldr	s0, [sp, #4]
   2cc98:	vstr	s0, [sp]
   2cc9c:	vldr	s0, [sp]
   2cca0:	ldr	r0, [fp, #-16]
   2cca4:	vstr	s0, [r0]
   2cca8:	ldr	r0, [fp, #-8]
   2ccac:	str	r0, [fp, #-4]
   2ccb0:	b	2ccbc <flatcc_json_parser_float@@Base+0x244>
   2ccb4:	ldr	r0, [sp, #20]
   2ccb8:	str	r0, [fp, #-4]
   2ccbc:	ldr	r0, [fp, #-4]
   2ccc0:	mov	sp, fp
   2ccc4:	pop	{fp, pc}
   2ccc8:	svcvc	0x00800000
   2cccc:	push	{fp, lr}
   2ccd0:	mov	fp, sp
   2ccd4:	sub	sp, sp, #16
   2ccd8:	str	r0, [sp, #8]
   2ccdc:	str	r1, [sp, #4]
   2cce0:	str	r2, [sp]
   2cce4:	ldr	r0, [sp, #4]
   2cce8:	ldr	r1, [sp]
   2ccec:	cmp	r0, r1
   2ccf0:	bne	2cd00 <flatcc_json_parser_float@@Base+0x288>
   2ccf4:	ldr	r0, [sp, #4]
   2ccf8:	str	r0, [fp, #-4]
   2ccfc:	b	2cd6c <flatcc_json_parser_float@@Base+0x2f4>
   2cd00:	ldr	r0, [sp, #4]
   2cd04:	ldrb	r0, [r0]
   2cd08:	cmp	r0, #34	; 0x22
   2cd0c:	bne	2cd2c <flatcc_json_parser_float@@Base+0x2b4>
   2cd10:	ldr	r0, [sp, #4]
   2cd14:	add	r0, r0, #1
   2cd18:	str	r0, [sp, #4]
   2cd1c:	ldr	r0, [sp, #8]
   2cd20:	movw	r1, #0
   2cd24:	str	r1, [r0, #12]
   2cd28:	b	2cd64 <flatcc_json_parser_float@@Base+0x2ec>
   2cd2c:	ldr	r0, [sp, #4]
   2cd30:	ldrb	r0, [r0]
   2cd34:	cmp	r0, #46	; 0x2e
   2cd38:	bne	2cd58 <flatcc_json_parser_float@@Base+0x2e0>
   2cd3c:	ldr	r0, [sp, #8]
   2cd40:	ldr	r1, [sp, #4]
   2cd44:	ldr	r2, [sp]
   2cd48:	movw	r3, #5
   2cd4c:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2cd50:	str	r0, [fp, #-4]
   2cd54:	b	2cd6c <flatcc_json_parser_float@@Base+0x2f4>
   2cd58:	ldr	r0, [sp, #8]
   2cd5c:	movw	r1, #1
   2cd60:	str	r1, [r0, #12]
   2cd64:	ldr	r0, [sp, #4]
   2cd68:	str	r0, [fp, #-4]
   2cd6c:	ldr	r0, [fp, #-4]
   2cd70:	mov	sp, fp
   2cd74:	pop	{fp, pc}
   2cd78:	push	{fp, lr}
   2cd7c:	mov	fp, sp
   2cd80:	sub	sp, sp, #16
   2cd84:	str	r0, [sp, #8]
   2cd88:	str	r1, [sp, #4]
   2cd8c:	str	r2, [sp]
   2cd90:	ldr	r0, [sp, #4]
   2cd94:	ldr	r1, [sp]
   2cd98:	cmp	r0, r1
   2cd9c:	beq	2cdb0 <flatcc_json_parser_float@@Base+0x338>
   2cda0:	ldr	r0, [sp, #4]
   2cda4:	ldrb	r0, [r0]
   2cda8:	cmp	r0, #34	; 0x22
   2cdac:	beq	2cdcc <flatcc_json_parser_float@@Base+0x354>
   2cdb0:	ldr	r0, [sp, #8]
   2cdb4:	ldr	r1, [sp, #4]
   2cdb8:	ldr	r2, [sp]
   2cdbc:	movw	r3, #16
   2cdc0:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2cdc4:	str	r0, [fp, #-4]
   2cdc8:	b	2cddc <flatcc_json_parser_float@@Base+0x364>
   2cdcc:	ldr	r0, [sp, #4]
   2cdd0:	add	r0, r0, #1
   2cdd4:	str	r0, [sp, #4]
   2cdd8:	str	r0, [fp, #-4]
   2cddc:	ldr	r0, [fp, #-4]
   2cde0:	mov	sp, fp
   2cde4:	pop	{fp, pc}
   2cde8:	push	{fp, lr}
   2cdec:	mov	fp, sp
   2cdf0:	sub	sp, sp, #16
   2cdf4:	str	r0, [sp, #8]
   2cdf8:	str	r1, [sp, #4]
   2cdfc:	str	r2, [sp]
   2ce00:	ldr	r0, [sp, #4]
   2ce04:	ldr	r1, [sp]
   2ce08:	cmp	r0, r1
   2ce0c:	beq	2ce20 <flatcc_json_parser_float@@Base+0x3a8>
   2ce10:	ldr	r0, [sp, #4]
   2ce14:	ldrb	r0, [r0]
   2ce18:	cmp	r0, #34	; 0x22
   2ce1c:	beq	2ce3c <flatcc_json_parser_float@@Base+0x3c4>
   2ce20:	ldr	r0, [sp, #8]
   2ce24:	ldr	r1, [sp, #4]
   2ce28:	ldr	r2, [sp]
   2ce2c:	movw	r3, #20
   2ce30:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2ce34:	str	r0, [fp, #-4]
   2ce38:	b	2ce4c <flatcc_json_parser_float@@Base+0x3d4>
   2ce3c:	ldr	r0, [sp, #4]
   2ce40:	add	r0, r0, #1
   2ce44:	str	r0, [sp, #4]
   2ce48:	str	r0, [fp, #-4]
   2ce4c:	ldr	r0, [fp, #-4]
   2ce50:	mov	sp, fp
   2ce54:	pop	{fp, pc}
   2ce58:	push	{fp, lr}
   2ce5c:	mov	fp, sp
   2ce60:	sub	sp, sp, #32
   2ce64:	str	r0, [fp, #-8]
   2ce68:	str	r1, [fp, #-12]
   2ce6c:	str	r2, [sp, #16]
   2ce70:	ldr	r0, [fp, #-12]
   2ce74:	ldr	r1, [sp, #16]
   2ce78:	cmp	r0, r1
   2ce7c:	bne	2ce8c <flatcc_json_parser_float@@Base+0x414>
   2ce80:	ldr	r0, [fp, #-12]
   2ce84:	str	r0, [fp, #-4]
   2ce88:	b	2d290 <flatcc_json_parser_float@@Base+0x818>
   2ce8c:	ldr	r0, [fp, #-12]
   2ce90:	ldrb	r0, [r0]
   2ce94:	cmp	r0, #45	; 0x2d
   2ce98:	bne	2ced8 <flatcc_json_parser_float@@Base+0x460>
   2ce9c:	ldr	r0, [fp, #-12]
   2cea0:	add	r0, r0, #1
   2cea4:	str	r0, [fp, #-12]
   2cea8:	ldr	r0, [fp, #-12]
   2ceac:	ldr	r1, [sp, #16]
   2ceb0:	cmp	r0, r1
   2ceb4:	bne	2ced4 <flatcc_json_parser_float@@Base+0x45c>
   2ceb8:	ldr	r0, [fp, #-8]
   2cebc:	ldr	r1, [fp, #-12]
   2cec0:	ldr	r2, [sp, #16]
   2cec4:	movw	r3, #6
   2cec8:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2cecc:	str	r0, [fp, #-4]
   2ced0:	b	2d290 <flatcc_json_parser_float@@Base+0x818>
   2ced4:	b	2ced8 <flatcc_json_parser_float@@Base+0x460>
   2ced8:	ldr	r0, [fp, #-12]
   2cedc:	ldrb	r0, [r0]
   2cee0:	cmp	r0, #48	; 0x30
   2cee4:	bne	2cef8 <flatcc_json_parser_float@@Base+0x480>
   2cee8:	ldr	r0, [fp, #-12]
   2ceec:	add	r0, r0, #1
   2cef0:	str	r0, [fp, #-12]
   2cef4:	b	2cfa8 <flatcc_json_parser_float@@Base+0x530>
   2cef8:	ldr	r0, [fp, #-12]
   2cefc:	ldrb	r0, [r0]
   2cf00:	cmp	r0, #49	; 0x31
   2cf04:	blt	2cf18 <flatcc_json_parser_float@@Base+0x4a0>
   2cf08:	ldr	r0, [fp, #-12]
   2cf0c:	ldrb	r0, [r0]
   2cf10:	cmp	r0, #57	; 0x39
   2cf14:	ble	2cf34 <flatcc_json_parser_float@@Base+0x4bc>
   2cf18:	ldr	r0, [fp, #-8]
   2cf1c:	ldr	r1, [fp, #-12]
   2cf20:	ldr	r2, [sp, #16]
   2cf24:	movw	r3, #6
   2cf28:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2cf2c:	str	r0, [fp, #-4]
   2cf30:	b	2d290 <flatcc_json_parser_float@@Base+0x818>
   2cf34:	ldr	r0, [fp, #-12]
   2cf38:	add	r0, r0, #1
   2cf3c:	str	r0, [fp, #-12]
   2cf40:	ldr	r0, [fp, #-12]
   2cf44:	ldr	r1, [sp, #16]
   2cf48:	cmp	r0, r1
   2cf4c:	movw	r0, #0
   2cf50:	str	r0, [sp, #12]
   2cf54:	beq	2cf88 <flatcc_json_parser_float@@Base+0x510>
   2cf58:	ldr	r0, [fp, #-12]
   2cf5c:	ldrb	r0, [r0]
   2cf60:	cmp	r0, #48	; 0x30
   2cf64:	movw	r0, #0
   2cf68:	str	r0, [sp, #12]
   2cf6c:	blt	2cf88 <flatcc_json_parser_float@@Base+0x510>
   2cf70:	ldr	r0, [fp, #-12]
   2cf74:	ldrb	r0, [r0]
   2cf78:	cmp	r0, #57	; 0x39
   2cf7c:	movw	r0, #0
   2cf80:	movle	r0, #1
   2cf84:	str	r0, [sp, #12]
   2cf88:	ldr	r0, [sp, #12]
   2cf8c:	tst	r0, #1
   2cf90:	beq	2cfa4 <flatcc_json_parser_float@@Base+0x52c>
   2cf94:	ldr	r0, [fp, #-12]
   2cf98:	add	r0, r0, #1
   2cf9c:	str	r0, [fp, #-12]
   2cfa0:	b	2cf40 <flatcc_json_parser_float@@Base+0x4c8>
   2cfa4:	b	2cfa8 <flatcc_json_parser_float@@Base+0x530>
   2cfa8:	ldr	r0, [fp, #-12]
   2cfac:	ldr	r1, [sp, #16]
   2cfb0:	cmp	r0, r1
   2cfb4:	beq	2d088 <flatcc_json_parser_float@@Base+0x610>
   2cfb8:	ldr	r0, [fp, #-12]
   2cfbc:	ldrb	r0, [r0]
   2cfc0:	cmp	r0, #46	; 0x2e
   2cfc4:	bne	2d084 <flatcc_json_parser_float@@Base+0x60c>
   2cfc8:	ldr	r0, [fp, #-12]
   2cfcc:	add	r0, r0, #1
   2cfd0:	str	r0, [fp, #-12]
   2cfd4:	ldr	r0, [fp, #-12]
   2cfd8:	ldrb	r0, [r0]
   2cfdc:	cmp	r0, #48	; 0x30
   2cfe0:	blt	2cff4 <flatcc_json_parser_float@@Base+0x57c>
   2cfe4:	ldr	r0, [fp, #-12]
   2cfe8:	ldrb	r0, [r0]
   2cfec:	cmp	r0, #57	; 0x39
   2cff0:	ble	2d010 <flatcc_json_parser_float@@Base+0x598>
   2cff4:	ldr	r0, [fp, #-8]
   2cff8:	ldr	r1, [fp, #-12]
   2cffc:	ldr	r2, [sp, #16]
   2d000:	movw	r3, #6
   2d004:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2d008:	str	r0, [fp, #-4]
   2d00c:	b	2d290 <flatcc_json_parser_float@@Base+0x818>
   2d010:	ldr	r0, [fp, #-12]
   2d014:	add	r0, r0, #1
   2d018:	str	r0, [fp, #-12]
   2d01c:	ldr	r0, [fp, #-12]
   2d020:	ldr	r1, [sp, #16]
   2d024:	cmp	r0, r1
   2d028:	movw	r0, #0
   2d02c:	str	r0, [sp, #8]
   2d030:	beq	2d064 <flatcc_json_parser_float@@Base+0x5ec>
   2d034:	ldr	r0, [fp, #-12]
   2d038:	ldrb	r0, [r0]
   2d03c:	cmp	r0, #48	; 0x30
   2d040:	movw	r0, #0
   2d044:	str	r0, [sp, #8]
   2d048:	blt	2d064 <flatcc_json_parser_float@@Base+0x5ec>
   2d04c:	ldr	r0, [fp, #-12]
   2d050:	ldrb	r0, [r0]
   2d054:	cmp	r0, #57	; 0x39
   2d058:	movw	r0, #0
   2d05c:	movle	r0, #1
   2d060:	str	r0, [sp, #8]
   2d064:	ldr	r0, [sp, #8]
   2d068:	tst	r0, #1
   2d06c:	beq	2d080 <flatcc_json_parser_float@@Base+0x608>
   2d070:	ldr	r0, [fp, #-12]
   2d074:	add	r0, r0, #1
   2d078:	str	r0, [fp, #-12]
   2d07c:	b	2d01c <flatcc_json_parser_float@@Base+0x5a4>
   2d080:	b	2d084 <flatcc_json_parser_float@@Base+0x60c>
   2d084:	b	2d088 <flatcc_json_parser_float@@Base+0x610>
   2d088:	ldr	r0, [fp, #-12]
   2d08c:	ldr	r1, [sp, #16]
   2d090:	cmp	r0, r1
   2d094:	beq	2d1dc <flatcc_json_parser_float@@Base+0x764>
   2d098:	ldr	r0, [fp, #-12]
   2d09c:	ldrb	r0, [r0]
   2d0a0:	cmp	r0, #101	; 0x65
   2d0a4:	beq	2d0b8 <flatcc_json_parser_float@@Base+0x640>
   2d0a8:	ldr	r0, [fp, #-12]
   2d0ac:	ldrb	r0, [r0]
   2d0b0:	cmp	r0, #69	; 0x45
   2d0b4:	bne	2d1dc <flatcc_json_parser_float@@Base+0x764>
   2d0b8:	ldr	r0, [fp, #-12]
   2d0bc:	add	r0, r0, #1
   2d0c0:	str	r0, [fp, #-12]
   2d0c4:	ldr	r0, [fp, #-12]
   2d0c8:	ldr	r1, [sp, #16]
   2d0cc:	cmp	r0, r1
   2d0d0:	bne	2d0f0 <flatcc_json_parser_float@@Base+0x678>
   2d0d4:	ldr	r0, [fp, #-8]
   2d0d8:	ldr	r1, [fp, #-12]
   2d0dc:	ldr	r2, [sp, #16]
   2d0e0:	movw	r3, #6
   2d0e4:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2d0e8:	str	r0, [fp, #-4]
   2d0ec:	b	2d290 <flatcc_json_parser_float@@Base+0x818>
   2d0f0:	ldr	r0, [fp, #-12]
   2d0f4:	ldrb	r0, [r0]
   2d0f8:	cmp	r0, #43	; 0x2b
   2d0fc:	beq	2d110 <flatcc_json_parser_float@@Base+0x698>
   2d100:	ldr	r0, [fp, #-12]
   2d104:	ldrb	r0, [r0]
   2d108:	cmp	r0, #45	; 0x2d
   2d10c:	bne	2d11c <flatcc_json_parser_float@@Base+0x6a4>
   2d110:	ldr	r0, [fp, #-12]
   2d114:	add	r0, r0, #1
   2d118:	str	r0, [fp, #-12]
   2d11c:	ldr	r0, [fp, #-12]
   2d120:	ldr	r1, [sp, #16]
   2d124:	cmp	r0, r1
   2d128:	beq	2d14c <flatcc_json_parser_float@@Base+0x6d4>
   2d12c:	ldr	r0, [fp, #-12]
   2d130:	ldrb	r0, [r0]
   2d134:	cmp	r0, #48	; 0x30
   2d138:	blt	2d14c <flatcc_json_parser_float@@Base+0x6d4>
   2d13c:	ldr	r0, [fp, #-12]
   2d140:	ldrb	r0, [r0]
   2d144:	cmp	r0, #57	; 0x39
   2d148:	ble	2d168 <flatcc_json_parser_float@@Base+0x6f0>
   2d14c:	ldr	r0, [fp, #-8]
   2d150:	ldr	r1, [fp, #-12]
   2d154:	ldr	r2, [sp, #16]
   2d158:	movw	r3, #6
   2d15c:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2d160:	str	r0, [fp, #-4]
   2d164:	b	2d290 <flatcc_json_parser_float@@Base+0x818>
   2d168:	ldr	r0, [fp, #-12]
   2d16c:	add	r0, r0, #1
   2d170:	str	r0, [fp, #-12]
   2d174:	ldr	r0, [fp, #-12]
   2d178:	ldr	r1, [sp, #16]
   2d17c:	cmp	r0, r1
   2d180:	movw	r0, #0
   2d184:	str	r0, [sp, #4]
   2d188:	beq	2d1bc <flatcc_json_parser_float@@Base+0x744>
   2d18c:	ldr	r0, [fp, #-12]
   2d190:	ldrb	r0, [r0]
   2d194:	cmp	r0, #48	; 0x30
   2d198:	movw	r0, #0
   2d19c:	str	r0, [sp, #4]
   2d1a0:	blt	2d1bc <flatcc_json_parser_float@@Base+0x744>
   2d1a4:	ldr	r0, [fp, #-12]
   2d1a8:	ldrb	r0, [r0]
   2d1ac:	cmp	r0, #57	; 0x39
   2d1b0:	movw	r0, #0
   2d1b4:	movle	r0, #1
   2d1b8:	str	r0, [sp, #4]
   2d1bc:	ldr	r0, [sp, #4]
   2d1c0:	tst	r0, #1
   2d1c4:	beq	2d1d8 <flatcc_json_parser_float@@Base+0x760>
   2d1c8:	ldr	r0, [fp, #-12]
   2d1cc:	add	r0, r0, #1
   2d1d0:	str	r0, [fp, #-12]
   2d1d4:	b	2d174 <flatcc_json_parser_float@@Base+0x6fc>
   2d1d8:	b	2d1dc <flatcc_json_parser_float@@Base+0x764>
   2d1dc:	ldr	r0, [fp, #-12]
   2d1e0:	ldr	r1, [sp, #16]
   2d1e4:	cmp	r0, r1
   2d1e8:	beq	2d278 <flatcc_json_parser_float@@Base+0x800>
   2d1ec:	ldr	r0, [fp, #-12]
   2d1f0:	ldrb	r0, [r0]
   2d1f4:	sub	r1, r0, #9
   2d1f8:	cmp	r1, #3
   2d1fc:	str	r0, [sp]
   2d200:	bcc	2d268 <flatcc_json_parser_float@@Base+0x7f0>
   2d204:	b	2d208 <flatcc_json_parser_float@@Base+0x790>
   2d208:	ldr	r0, [sp]
   2d20c:	cmp	r0, #13
   2d210:	beq	2d268 <flatcc_json_parser_float@@Base+0x7f0>
   2d214:	b	2d218 <flatcc_json_parser_float@@Base+0x7a0>
   2d218:	ldr	r0, [sp]
   2d21c:	cmp	r0, #32
   2d220:	beq	2d268 <flatcc_json_parser_float@@Base+0x7f0>
   2d224:	b	2d228 <flatcc_json_parser_float@@Base+0x7b0>
   2d228:	ldr	r0, [sp]
   2d22c:	cmp	r0, #44	; 0x2c
   2d230:	beq	2d268 <flatcc_json_parser_float@@Base+0x7f0>
   2d234:	b	2d238 <flatcc_json_parser_float@@Base+0x7c0>
   2d238:	ldr	r0, [sp]
   2d23c:	cmp	r0, #58	; 0x3a
   2d240:	beq	2d268 <flatcc_json_parser_float@@Base+0x7f0>
   2d244:	b	2d248 <flatcc_json_parser_float@@Base+0x7d0>
   2d248:	ldr	r0, [sp]
   2d24c:	cmp	r0, #93	; 0x5d
   2d250:	beq	2d268 <flatcc_json_parser_float@@Base+0x7f0>
   2d254:	b	2d258 <flatcc_json_parser_float@@Base+0x7e0>
   2d258:	ldr	r0, [sp]
   2d25c:	cmp	r0, #125	; 0x7d
   2d260:	bne	2d274 <flatcc_json_parser_float@@Base+0x7fc>
   2d264:	b	2d268 <flatcc_json_parser_float@@Base+0x7f0>
   2d268:	ldr	r0, [fp, #-12]
   2d26c:	str	r0, [fp, #-4]
   2d270:	b	2d290 <flatcc_json_parser_float@@Base+0x818>
   2d274:	b	2d278 <flatcc_json_parser_float@@Base+0x800>
   2d278:	ldr	r0, [fp, #-8]
   2d27c:	ldr	r1, [fp, #-12]
   2d280:	ldr	r2, [sp, #16]
   2d284:	movw	r3, #6
   2d288:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2d28c:	str	r0, [fp, #-4]
   2d290:	ldr	r0, [fp, #-4]
   2d294:	mov	sp, fp
   2d298:	pop	{fp, pc}
   2d29c:	push	{fp, lr}
   2d2a0:	mov	fp, sp
   2d2a4:	sub	sp, sp, #24
   2d2a8:	str	r0, [fp, #-8]
   2d2ac:	str	r1, [sp, #12]
   2d2b0:	str	r2, [sp, #8]
   2d2b4:	str	r3, [sp, #4]
   2d2b8:	ldr	r0, [fp, #-8]
   2d2bc:	ldr	r1, [sp, #12]
   2d2c0:	ldr	r2, [sp, #8]
   2d2c4:	bl	2bc1c <flatcc_json_parser_skip_constant@@Base+0x104>
   2d2c8:	str	r0, [sp, #12]
   2d2cc:	ldr	r0, [sp, #12]
   2d2d0:	ldr	r1, [sp, #8]
   2d2d4:	cmp	r0, r1
   2d2d8:	bne	2d2f4 <flatcc_json_parser_float@@Base+0x87c>
   2d2dc:	ldr	r0, [sp, #4]
   2d2e0:	movw	r1, #0
   2d2e4:	str	r1, [r0]
   2d2e8:	ldr	r0, [sp, #12]
   2d2ec:	str	r0, [fp, #-4]
   2d2f0:	b	2d3f4 <flatcc_json_parser_float@@Base+0x97c>
   2d2f4:	ldr	r0, [sp, #12]
   2d2f8:	ldrb	r0, [r0]
   2d2fc:	cmp	r0, #44	; 0x2c
   2d300:	beq	2d358 <flatcc_json_parser_float@@Base+0x8e0>
   2d304:	ldr	r0, [sp, #4]
   2d308:	movw	r1, #0
   2d30c:	str	r1, [r0]
   2d310:	ldr	r0, [sp, #12]
   2d314:	ldrb	r0, [r0]
   2d318:	cmp	r0, #93	; 0x5d
   2d31c:	beq	2d33c <flatcc_json_parser_float@@Base+0x8c4>
   2d320:	ldr	r0, [fp, #-8]
   2d324:	ldr	r1, [sp, #12]
   2d328:	ldr	r2, [sp, #8]
   2d32c:	movw	r3, #9
   2d330:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2d334:	str	r0, [fp, #-4]
   2d338:	b	2d3f4 <flatcc_json_parser_float@@Base+0x97c>
   2d33c:	ldr	r0, [fp, #-8]
   2d340:	ldr	r1, [sp, #12]
   2d344:	add	r1, r1, #1
   2d348:	ldr	r2, [sp, #8]
   2d34c:	bl	2bc1c <flatcc_json_parser_skip_constant@@Base+0x104>
   2d350:	str	r0, [fp, #-4]
   2d354:	b	2d3f4 <flatcc_json_parser_float@@Base+0x97c>
   2d358:	ldr	r0, [fp, #-8]
   2d35c:	ldr	r1, [sp, #12]
   2d360:	add	r1, r1, #1
   2d364:	ldr	r2, [sp, #8]
   2d368:	bl	2bc1c <flatcc_json_parser_skip_constant@@Base+0x104>
   2d36c:	str	r0, [sp, #12]
   2d370:	ldr	r0, [sp, #12]
   2d374:	ldr	r1, [sp, #8]
   2d378:	cmp	r0, r1
   2d37c:	bne	2d3a8 <flatcc_json_parser_float@@Base+0x930>
   2d380:	ldr	r0, [sp, #4]
   2d384:	movw	r1, #0
   2d388:	str	r1, [r0]
   2d38c:	ldr	r0, [fp, #-8]
   2d390:	ldr	r1, [sp, #12]
   2d394:	ldr	r2, [sp, #8]
   2d398:	movw	r3, #9
   2d39c:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2d3a0:	str	r0, [fp, #-4]
   2d3a4:	b	2d3f4 <flatcc_json_parser_float@@Base+0x97c>
   2d3a8:	ldr	r0, [sp, #12]
   2d3ac:	ldrb	r0, [r0]
   2d3b0:	cmp	r0, #93	; 0x5d
   2d3b4:	bne	2d3e0 <flatcc_json_parser_float@@Base+0x968>
   2d3b8:	ldr	r0, [sp, #4]
   2d3bc:	movw	r1, #0
   2d3c0:	str	r1, [r0]
   2d3c4:	ldr	r0, [fp, #-8]
   2d3c8:	ldr	r1, [sp, #12]
   2d3cc:	add	r1, r1, #1
   2d3d0:	ldr	r2, [sp, #8]
   2d3d4:	bl	2bc1c <flatcc_json_parser_skip_constant@@Base+0x104>
   2d3d8:	str	r0, [fp, #-4]
   2d3dc:	b	2d3f4 <flatcc_json_parser_float@@Base+0x97c>
   2d3e0:	ldr	r0, [sp, #4]
   2d3e4:	movw	r1, #1
   2d3e8:	str	r1, [r0]
   2d3ec:	ldr	r0, [sp, #12]
   2d3f0:	str	r0, [fp, #-4]
   2d3f4:	ldr	r0, [fp, #-4]
   2d3f8:	mov	sp, fp
   2d3fc:	pop	{fp, pc}
   2d400:	push	{fp, lr}
   2d404:	mov	fp, sp
   2d408:	sub	sp, sp, #24
   2d40c:	str	r0, [fp, #-8]
   2d410:	str	r1, [sp, #12]
   2d414:	str	r2, [sp, #8]
   2d418:	str	r3, [sp, #4]
   2d41c:	ldr	r0, [fp, #-8]
   2d420:	ldr	r1, [sp, #12]
   2d424:	ldr	r2, [sp, #8]
   2d428:	bl	2bc1c <flatcc_json_parser_skip_constant@@Base+0x104>
   2d42c:	str	r0, [sp, #12]
   2d430:	ldr	r0, [sp, #12]
   2d434:	ldr	r1, [sp, #8]
   2d438:	cmp	r0, r1
   2d43c:	bne	2d458 <flatcc_json_parser_float@@Base+0x9e0>
   2d440:	ldr	r0, [sp, #4]
   2d444:	movw	r1, #0
   2d448:	str	r1, [r0]
   2d44c:	ldr	r0, [sp, #12]
   2d450:	str	r0, [fp, #-4]
   2d454:	b	2d558 <flatcc_json_parser_float@@Base+0xae0>
   2d458:	ldr	r0, [sp, #12]
   2d45c:	ldrb	r0, [r0]
   2d460:	cmp	r0, #44	; 0x2c
   2d464:	beq	2d4bc <flatcc_json_parser_float@@Base+0xa44>
   2d468:	ldr	r0, [sp, #4]
   2d46c:	movw	r1, #0
   2d470:	str	r1, [r0]
   2d474:	ldr	r0, [sp, #12]
   2d478:	ldrb	r0, [r0]
   2d47c:	cmp	r0, #125	; 0x7d
   2d480:	beq	2d4a0 <flatcc_json_parser_float@@Base+0xa28>
   2d484:	ldr	r0, [fp, #-8]
   2d488:	ldr	r1, [sp, #12]
   2d48c:	ldr	r2, [sp, #8]
   2d490:	movw	r3, #10
   2d494:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2d498:	str	r0, [fp, #-4]
   2d49c:	b	2d558 <flatcc_json_parser_float@@Base+0xae0>
   2d4a0:	ldr	r0, [fp, #-8]
   2d4a4:	ldr	r1, [sp, #12]
   2d4a8:	add	r1, r1, #1
   2d4ac:	ldr	r2, [sp, #8]
   2d4b0:	bl	2bc1c <flatcc_json_parser_skip_constant@@Base+0x104>
   2d4b4:	str	r0, [fp, #-4]
   2d4b8:	b	2d558 <flatcc_json_parser_float@@Base+0xae0>
   2d4bc:	ldr	r0, [fp, #-8]
   2d4c0:	ldr	r1, [sp, #12]
   2d4c4:	add	r1, r1, #1
   2d4c8:	ldr	r2, [sp, #8]
   2d4cc:	bl	2bc1c <flatcc_json_parser_skip_constant@@Base+0x104>
   2d4d0:	str	r0, [sp, #12]
   2d4d4:	ldr	r0, [sp, #12]
   2d4d8:	ldr	r1, [sp, #8]
   2d4dc:	cmp	r0, r1
   2d4e0:	bne	2d50c <flatcc_json_parser_float@@Base+0xa94>
   2d4e4:	ldr	r0, [sp, #4]
   2d4e8:	movw	r1, #0
   2d4ec:	str	r1, [r0]
   2d4f0:	ldr	r0, [fp, #-8]
   2d4f4:	ldr	r1, [sp, #12]
   2d4f8:	ldr	r2, [sp, #8]
   2d4fc:	movw	r3, #10
   2d500:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2d504:	str	r0, [fp, #-4]
   2d508:	b	2d558 <flatcc_json_parser_float@@Base+0xae0>
   2d50c:	ldr	r0, [sp, #12]
   2d510:	ldrb	r0, [r0]
   2d514:	cmp	r0, #125	; 0x7d
   2d518:	bne	2d544 <flatcc_json_parser_float@@Base+0xacc>
   2d51c:	ldr	r0, [sp, #4]
   2d520:	movw	r1, #0
   2d524:	str	r1, [r0]
   2d528:	ldr	r0, [fp, #-8]
   2d52c:	ldr	r1, [sp, #12]
   2d530:	add	r1, r1, #1
   2d534:	ldr	r2, [sp, #8]
   2d538:	bl	2bc1c <flatcc_json_parser_skip_constant@@Base+0x104>
   2d53c:	str	r0, [fp, #-4]
   2d540:	b	2d558 <flatcc_json_parser_float@@Base+0xae0>
   2d544:	ldr	r0, [sp, #4]
   2d548:	movw	r1, #1
   2d54c:	str	r1, [r0]
   2d550:	ldr	r0, [sp, #12]
   2d554:	str	r0, [fp, #-4]
   2d558:	ldr	r0, [fp, #-4]
   2d55c:	mov	sp, fp
   2d560:	pop	{fp, pc}

0002d564 <flatcc_json_parser_integer@@Base>:
   2d564:	push	{fp, lr}
   2d568:	mov	fp, sp
   2d56c:	sub	sp, sp, #64	; 0x40
   2d570:	ldr	ip, [fp, #8]
   2d574:	str	r0, [fp, #-8]
   2d578:	str	r1, [fp, #-12]
   2d57c:	str	r2, [fp, #-16]
   2d580:	str	r3, [fp, #-20]	; 0xffffffec
   2d584:	mov	r0, #0
   2d588:	str	r0, [sp, #28]
   2d58c:	str	r0, [sp, #24]
   2d590:	ldr	r0, [fp, #-12]
   2d594:	ldr	r1, [fp, #-16]
   2d598:	cmp	r0, r1
   2d59c:	str	ip, [sp, #16]
   2d5a0:	bne	2d5b0 <flatcc_json_parser_integer@@Base+0x4c>
   2d5a4:	ldr	r0, [fp, #-12]
   2d5a8:	str	r0, [fp, #-4]
   2d5ac:	b	2d784 <flatcc_json_parser_integer@@Base+0x220>
   2d5b0:	ldr	r0, [fp, #-12]
   2d5b4:	str	r0, [sp, #20]
   2d5b8:	ldr	r0, [fp, #-12]
   2d5bc:	ldrb	r0, [r0]
   2d5c0:	cmp	r0, #45	; 0x2d
   2d5c4:	movw	r0, #0
   2d5c8:	moveq	r0, #1
   2d5cc:	and	r0, r0, #1
   2d5d0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2d5d4:	str	r0, [r1]
   2d5d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2d5dc:	ldr	r0, [r0]
   2d5e0:	ldr	r1, [fp, #-12]
   2d5e4:	add	r0, r1, r0
   2d5e8:	str	r0, [fp, #-12]
   2d5ec:	ldr	r0, [fp, #-12]
   2d5f0:	ldr	r1, [fp, #-16]
   2d5f4:	cmp	r0, r1
   2d5f8:	movw	r0, #0
   2d5fc:	str	r0, [sp, #12]
   2d600:	beq	2d634 <flatcc_json_parser_integer@@Base+0xd0>
   2d604:	ldr	r0, [fp, #-12]
   2d608:	ldrb	r0, [r0]
   2d60c:	cmp	r0, #48	; 0x30
   2d610:	movw	r0, #0
   2d614:	str	r0, [sp, #12]
   2d618:	blt	2d634 <flatcc_json_parser_integer@@Base+0xd0>
   2d61c:	ldr	r0, [fp, #-12]
   2d620:	ldrb	r0, [r0]
   2d624:	cmp	r0, #57	; 0x39
   2d628:	movw	r0, #0
   2d62c:	movle	r0, #1
   2d630:	str	r0, [sp, #12]
   2d634:	ldr	r0, [sp, #12]
   2d638:	tst	r0, #1
   2d63c:	beq	2d6f0 <flatcc_json_parser_integer@@Base+0x18c>
   2d640:	ldr	r0, [sp, #24]
   2d644:	ldr	r1, [sp, #28]
   2d648:	str	r1, [sp, #36]	; 0x24
   2d64c:	str	r0, [sp, #32]
   2d650:	ldr	r0, [sp, #24]
   2d654:	ldr	r1, [sp, #28]
   2d658:	add	r1, r1, r1, lsl #2
   2d65c:	lsl	r1, r1, #1
   2d660:	ldr	r2, [fp, #-12]
   2d664:	ldrb	r2, [r2]
   2d668:	mov	r3, #10
   2d66c:	umlal	r2, r1, r0, r3
   2d670:	subs	r0, r2, #48	; 0x30
   2d674:	sbc	r1, r1, #0
   2d678:	str	r0, [sp, #24]
   2d67c:	str	r1, [sp, #28]
   2d680:	ldr	r0, [sp, #32]
   2d684:	ldr	r1, [sp, #36]	; 0x24
   2d688:	ldr	r2, [sp, #24]
   2d68c:	ldr	r3, [sp, #28]
   2d690:	subs	r0, r2, r0
   2d694:	sbcs	r1, r3, r1
   2d698:	str	r0, [sp, #8]
   2d69c:	str	r1, [sp, #4]
   2d6a0:	bcs	2d6e0 <flatcc_json_parser_integer@@Base+0x17c>
   2d6a4:	b	2d6a8 <flatcc_json_parser_integer@@Base+0x144>
   2d6a8:	ldr	r0, [fp, #-8]
   2d6ac:	ldr	r1, [fp, #-12]
   2d6b0:	ldr	r2, [fp, #-16]
   2d6b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d6b8:	movw	ip, #0
   2d6bc:	cmp	r3, ip
   2d6c0:	movw	r3, #0
   2d6c4:	movne	r3, #1
   2d6c8:	tst	r3, #1
   2d6cc:	movw	r3, #8
   2d6d0:	moveq	r3, #7
   2d6d4:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2d6d8:	str	r0, [fp, #-4]
   2d6dc:	b	2d784 <flatcc_json_parser_integer@@Base+0x220>
   2d6e0:	ldr	r0, [fp, #-12]
   2d6e4:	add	r0, r0, #1
   2d6e8:	str	r0, [fp, #-12]
   2d6ec:	b	2d5ec <flatcc_json_parser_integer@@Base+0x88>
   2d6f0:	ldr	r0, [fp, #-12]
   2d6f4:	ldr	r1, [sp, #20]
   2d6f8:	cmp	r0, r1
   2d6fc:	bne	2d70c <flatcc_json_parser_integer@@Base+0x1a8>
   2d700:	ldr	r0, [fp, #-12]
   2d704:	str	r0, [fp, #-4]
   2d708:	b	2d784 <flatcc_json_parser_integer@@Base+0x220>
   2d70c:	ldr	r0, [fp, #-12]
   2d710:	ldr	r1, [fp, #-16]
   2d714:	cmp	r0, r1
   2d718:	beq	2d768 <flatcc_json_parser_integer@@Base+0x204>
   2d71c:	ldr	r0, [fp, #-12]
   2d720:	ldrb	r0, [r0]
   2d724:	cmp	r0, #101	; 0x65
   2d728:	beq	2d74c <flatcc_json_parser_integer@@Base+0x1e8>
   2d72c:	ldr	r0, [fp, #-12]
   2d730:	ldrb	r0, [r0]
   2d734:	cmp	r0, #69	; 0x45
   2d738:	beq	2d74c <flatcc_json_parser_integer@@Base+0x1e8>
   2d73c:	ldr	r0, [fp, #-12]
   2d740:	ldrb	r0, [r0]
   2d744:	cmp	r0, #46	; 0x2e
   2d748:	bne	2d768 <flatcc_json_parser_integer@@Base+0x204>
   2d74c:	ldr	r0, [fp, #-8]
   2d750:	ldr	r1, [fp, #-12]
   2d754:	ldr	r2, [fp, #-16]
   2d758:	movw	r3, #12
   2d75c:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2d760:	str	r0, [fp, #-4]
   2d764:	b	2d784 <flatcc_json_parser_integer@@Base+0x220>
   2d768:	ldr	r0, [sp, #24]
   2d76c:	ldr	r1, [sp, #28]
   2d770:	ldr	r2, [fp, #8]
   2d774:	str	r1, [r2, #4]
   2d778:	str	r0, [r2]
   2d77c:	ldr	r0, [fp, #-12]
   2d780:	str	r0, [fp, #-4]
   2d784:	ldr	r0, [fp, #-4]
   2d788:	mov	sp, fp
   2d78c:	pop	{fp, pc}

0002d790 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   2d790:	push	{fp, lr}
   2d794:	mov	fp, sp
   2d798:	sub	sp, sp, #64	; 0x40
   2d79c:	ldr	ip, [fp, #8]
   2d7a0:	str	r0, [fp, #-8]
   2d7a4:	str	r1, [fp, #-12]
   2d7a8:	str	r2, [fp, #-16]
   2d7ac:	str	r3, [fp, #-20]	; 0xffffffec
   2d7b0:	ldr	r0, [fp, #8]
   2d7b4:	cmp	r0, #0
   2d7b8:	movw	r0, #0
   2d7bc:	movne	r0, #1
   2d7c0:	tst	r0, #1
   2d7c4:	movw	r0, #1
   2d7c8:	moveq	r0, #0
   2d7cc:	str	r0, [sp, #20]
   2d7d0:	ldr	r0, [fp, #-8]
   2d7d4:	ldr	r1, [fp, #-12]
   2d7d8:	ldr	r2, [fp, #-16]
   2d7dc:	str	ip, [sp, #12]
   2d7e0:	bl	2cd78 <flatcc_json_parser_float@@Base+0x300>
   2d7e4:	str	r0, [fp, #-12]
   2d7e8:	ldr	r0, [fp, #-8]
   2d7ec:	ldr	r1, [fp, #-12]
   2d7f0:	str	r1, [fp, #-24]	; 0xffffffe8
   2d7f4:	ldr	r2, [fp, #-16]
   2d7f8:	bl	2aef4 <flatcc_json_parser_string_part@@Base>
   2d7fc:	str	r0, [fp, #-12]
   2d800:	ldr	r0, [fp, #-12]
   2d804:	ldr	r1, [fp, #-16]
   2d808:	cmp	r0, r1
   2d80c:	beq	2d820 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x90>
   2d810:	ldr	r0, [fp, #-12]
   2d814:	ldrb	r0, [r0]
   2d818:	cmp	r0, #34	; 0x22
   2d81c:	beq	2d824 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x94>
   2d820:	b	2d9a8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x218>
   2d824:	ldr	r0, [fp, #-12]
   2d828:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d82c:	sub	r0, r0, r1
   2d830:	bl	2d9f0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x260>
   2d834:	str	r0, [sp, #32]
   2d838:	ldr	r0, [fp, #-8]
   2d83c:	ldr	r0, [r0]
   2d840:	movw	r1, #1
   2d844:	movw	lr, #1
   2d848:	uxth	r2, lr
   2d84c:	mvn	r3, #0
   2d850:	bl	25bf4 <flatcc_builder_start_vector@@Base>
   2d854:	cmp	r0, #0
   2d858:	beq	2d860 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd0>
   2d85c:	b	2d980 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
   2d860:	ldr	r0, [fp, #-8]
   2d864:	ldr	r0, [r0]
   2d868:	ldr	r1, [sp, #32]
   2d86c:	bl	250f8 <flatcc_builder_extend_vector@@Base>
   2d870:	str	r0, [fp, #-28]	; 0xffffffe4
   2d874:	movw	r1, #0
   2d878:	cmp	r0, r1
   2d87c:	bne	2d884 <flatcc_json_parser_build_uint8_vector_base64@@Base+0xf4>
   2d880:	b	2d980 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
   2d884:	ldr	r0, [fp, #-12]
   2d888:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d88c:	sub	r0, r0, r1
   2d890:	str	r0, [sp, #24]
   2d894:	ldr	r0, [sp, #32]
   2d898:	str	r0, [sp, #28]
   2d89c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2d8a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2d8a4:	ldr	r2, [sp, #20]
   2d8a8:	add	r3, sp, #28
   2d8ac:	str	r2, [sp, #8]
   2d8b0:	mov	r2, r3
   2d8b4:	add	r3, sp, #24
   2d8b8:	ldr	ip, [sp, #8]
   2d8bc:	str	ip, [sp]
   2d8c0:	bl	2da80 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2f0>
   2d8c4:	str	r0, [sp, #16]
   2d8c8:	cmp	r0, #0
   2d8cc:	beq	2d8e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x154>
   2d8d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d8d4:	ldr	r1, [sp, #24]
   2d8d8:	add	r0, r0, r1
   2d8dc:	str	r0, [fp, #-12]
   2d8e0:	b	2d9a8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x218>
   2d8e4:	ldr	r0, [sp, #24]
   2d8e8:	ldr	r1, [fp, #-12]
   2d8ec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2d8f0:	sub	r1, r1, r2
   2d8f4:	cmp	r0, r1
   2d8f8:	beq	2d910 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x180>
   2d8fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d900:	ldr	r1, [sp, #24]
   2d904:	add	r0, r0, r1
   2d908:	str	r0, [fp, #-12]
   2d90c:	b	2d9a8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x218>
   2d910:	ldr	r0, [sp, #28]
   2d914:	ldr	r1, [sp, #32]
   2d918:	cmp	r0, r1
   2d91c:	bcs	2d948 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b8>
   2d920:	ldr	r0, [fp, #-8]
   2d924:	ldr	r0, [r0]
   2d928:	ldr	r1, [sp, #32]
   2d92c:	ldr	r2, [sp, #28]
   2d930:	sub	r1, r1, r2
   2d934:	bl	2588c <flatcc_builder_truncate_vector@@Base>
   2d938:	cmp	r0, #0
   2d93c:	beq	2d944 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b4>
   2d940:	b	2d980 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
   2d944:	b	2d948 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b8>
   2d948:	ldr	r0, [fp, #-8]
   2d94c:	ldr	r0, [r0]
   2d950:	bl	270e8 <flatcc_builder_end_vector@@Base>
   2d954:	ldr	lr, [fp, #-20]	; 0xffffffec
   2d958:	str	r0, [lr]
   2d95c:	cmp	r0, #0
   2d960:	bne	2d968 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1d8>
   2d964:	b	2d980 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1f0>
   2d968:	ldr	r0, [fp, #-8]
   2d96c:	ldr	r1, [fp, #-12]
   2d970:	ldr	r2, [fp, #-16]
   2d974:	bl	2cde8 <flatcc_json_parser_float@@Base+0x370>
   2d978:	str	r0, [fp, #-4]
   2d97c:	b	2d9e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x254>
   2d980:	ldr	r0, [fp, #-20]	; 0xffffffec
   2d984:	movw	r1, #0
   2d988:	str	r1, [r0]
   2d98c:	ldr	r0, [fp, #-8]
   2d990:	ldr	r1, [fp, #-12]
   2d994:	ldr	r2, [fp, #-16]
   2d998:	movw	r3, #33	; 0x21
   2d99c:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2d9a0:	str	r0, [fp, #-4]
   2d9a4:	b	2d9e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x254>
   2d9a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2d9ac:	movw	r1, #0
   2d9b0:	str	r1, [r0]
   2d9b4:	ldr	r0, [fp, #-8]
   2d9b8:	ldr	r1, [fp, #-12]
   2d9bc:	ldr	r2, [fp, #-16]
   2d9c0:	ldr	r3, [fp, #8]
   2d9c4:	cmp	r3, #0
   2d9c8:	movw	r3, #0
   2d9cc:	movne	r3, #1
   2d9d0:	tst	r3, #1
   2d9d4:	movw	r3, #32
   2d9d8:	moveq	r3, #31
   2d9dc:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2d9e0:	str	r0, [fp, #-4]
   2d9e4:	ldr	r0, [fp, #-4]
   2d9e8:	mov	sp, fp
   2d9ec:	pop	{fp, pc}
   2d9f0:	sub	sp, sp, #20
   2d9f4:	str	r0, [sp, #12]
   2d9f8:	ldr	r0, [sp, #12]
   2d9fc:	and	r0, r0, #3
   2da00:	str	r0, [sp, #8]
   2da04:	ldr	r0, [sp, #12]
   2da08:	lsr	r0, r0, #2
   2da0c:	add	r0, r0, r0, lsl #1
   2da10:	str	r0, [sp, #4]
   2da14:	ldr	r0, [sp, #8]
   2da18:	cmp	r0, #2
   2da1c:	str	r0, [sp]
   2da20:	bcc	2da68 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2d8>
   2da24:	b	2da28 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x298>
   2da28:	ldr	r0, [sp]
   2da2c:	cmp	r0, #2
   2da30:	beq	2da58 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c8>
   2da34:	b	2da38 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2a8>
   2da38:	ldr	r0, [sp]
   2da3c:	cmp	r0, #3
   2da40:	bne	2da6c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2dc>
   2da44:	b	2da48 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2b8>
   2da48:	ldr	r0, [sp, #4]
   2da4c:	add	r0, r0, #2
   2da50:	str	r0, [sp, #16]
   2da54:	b	2da74 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2e4>
   2da58:	ldr	r0, [sp, #4]
   2da5c:	add	r0, r0, #1
   2da60:	str	r0, [sp, #16]
   2da64:	b	2da74 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2e4>
   2da68:	b	2da6c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2dc>
   2da6c:	ldr	r0, [sp, #4]
   2da70:	str	r0, [sp, #16]
   2da74:	ldr	r0, [sp, #16]
   2da78:	add	sp, sp, #20
   2da7c:	bx	lr
   2da80:	push	{fp, lr}
   2da84:	mov	fp, sp
   2da88:	sub	sp, sp, #72	; 0x48
   2da8c:	ldr	ip, [fp, #8]
   2da90:	ldr	lr, [pc, #1280]	; 2df98 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x808>
   2da94:	add	lr, pc, lr
   2da98:	str	r0, [fp, #-4]
   2da9c:	str	r1, [fp, #-8]
   2daa0:	str	r2, [fp, #-12]
   2daa4:	str	r3, [fp, #-16]
   2daa8:	movw	r0, #0
   2daac:	str	r0, [fp, #-20]	; 0xffffffec
   2dab0:	ldr	r1, [fp, #-4]
   2dab4:	str	r1, [sp, #36]	; 0x24
   2dab8:	mvn	r1, #0
   2dabc:	str	r1, [sp, #32]
   2dac0:	str	r1, [sp, #28]
   2dac4:	str	lr, [sp, #20]
   2dac8:	ldr	r1, [fp, #8]
   2dacc:	and	r1, r1, #32
   2dad0:	str	r1, [sp, #16]
   2dad4:	ldr	r1, [fp, #-16]
   2dad8:	cmp	r1, r0
   2dadc:	str	ip, [sp, #12]
   2dae0:	beq	2daf0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x360>
   2dae4:	ldr	r0, [fp, #-16]
   2dae8:	ldr	r0, [r0]
   2daec:	str	r0, [sp, #28]
   2daf0:	ldr	r0, [sp, #28]
   2daf4:	str	r0, [sp, #24]
   2daf8:	ldr	r0, [fp, #8]
   2dafc:	bic	r0, r0, #224	; 0xe0
   2db00:	str	r0, [fp, #8]
   2db04:	ldr	r0, [fp, #8]
   2db08:	cmp	r0, #0
   2db0c:	str	r0, [sp, #8]
   2db10:	beq	2db28 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x398>
   2db14:	b	2db18 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x388>
   2db18:	ldr	r0, [sp, #8]
   2db1c:	cmp	r0, #1
   2db20:	beq	2db58 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3c8>
   2db24:	b	2db88 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3f8>
   2db28:	ldr	r0, [pc, #1140]	; 2dfa4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x814>
   2db2c:	add	r0, pc, r0
   2db30:	ldr	r1, [pc, #1136]	; 2dfa8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x818>
   2db34:	add	r1, pc, r1
   2db38:	ldr	r2, [sp, #16]
   2db3c:	cmp	r2, #0
   2db40:	movw	r2, #0
   2db44:	movne	r2, #1
   2db48:	tst	r2, #1
   2db4c:	movne	r1, r0
   2db50:	str	r1, [sp, #20]
   2db54:	b	2db94 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x404>
   2db58:	ldr	r0, [pc, #1084]	; 2df9c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x80c>
   2db5c:	add	r0, pc, r0
   2db60:	ldr	r1, [pc, #1080]	; 2dfa0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x810>
   2db64:	add	r1, pc, r1
   2db68:	ldr	r2, [sp, #16]
   2db6c:	cmp	r2, #0
   2db70:	movw	r2, #0
   2db74:	movne	r2, #1
   2db78:	tst	r2, #1
   2db7c:	movne	r1, r0
   2db80:	str	r1, [sp, #20]
   2db84:	b	2db94 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x404>
   2db88:	movw	r0, #3
   2db8c:	str	r0, [fp, #-20]	; 0xffffffec
   2db90:	b	2de18 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x688>
   2db94:	ldr	r0, [fp, #-12]
   2db98:	movw	r1, #0
   2db9c:	cmp	r0, r1
   2dba0:	beq	2dbc0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x430>
   2dba4:	ldr	r0, [fp, #-12]
   2dba8:	ldr	r0, [r0]
   2dbac:	cmp	r0, #0
   2dbb0:	bls	2dbc0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x430>
   2dbb4:	ldr	r0, [fp, #-12]
   2dbb8:	ldr	r0, [r0]
   2dbbc:	str	r0, [sp, #32]
   2dbc0:	b	2dbc4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x434>
   2dbc4:	ldr	r0, [sp, #32]
   2dbc8:	cmp	r0, #0
   2dbcc:	bls	2de14 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x684>
   2dbd0:	movw	r0, #0
   2dbd4:	str	r0, [fp, #-24]	; 0xffffffe8
   2dbd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dbdc:	cmp	r0, #4
   2dbe0:	bcs	2dd78 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5e8>
   2dbe4:	ldr	r0, [sp, #28]
   2dbe8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2dbec:	cmp	r0, r1
   2dbf0:	bne	2dc10 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x480>
   2dbf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dbf8:	str	r0, [fp, #-28]	; 0xffffffe4
   2dbfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dc00:	ldr	r1, [sp, #28]
   2dc04:	sub	r0, r1, r0
   2dc08:	str	r0, [sp, #28]
   2dc0c:	b	2de6c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6dc>
   2dc10:	ldr	r0, [sp, #20]
   2dc14:	ldr	r1, [fp, #-8]
   2dc18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2dc1c:	add	r1, r1, r2
   2dc20:	ldrb	r1, [r1]
   2dc24:	add	r0, r0, r1
   2dc28:	ldrb	r0, [r0]
   2dc2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2dc30:	sub	r2, fp, #32
   2dc34:	add	r1, r2, r1
   2dc38:	strb	r0, [r1]
   2dc3c:	and	r0, r0, #255	; 0xff
   2dc40:	cmp	r0, #64	; 0x40
   2dc44:	blt	2dd64 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5d4>
   2dc48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dc4c:	sub	r1, fp, #32
   2dc50:	add	r0, r1, r0
   2dc54:	ldrb	r0, [r0]
   2dc58:	cmp	r0, #65	; 0x41
   2dc5c:	bne	2dc8c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x4fc>
   2dc60:	ldr	r0, [fp, #-8]
   2dc64:	add	r0, r0, #1
   2dc68:	str	r0, [fp, #-8]
   2dc6c:	ldr	r0, [sp, #28]
   2dc70:	mvn	r1, #0
   2dc74:	add	r0, r0, r1
   2dc78:	str	r0, [sp, #28]
   2dc7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dc80:	add	r0, r0, r1
   2dc84:	str	r0, [fp, #-24]	; 0xffffffe8
   2dc88:	b	2dd68 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5d8>
   2dc8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dc90:	str	r0, [fp, #-28]	; 0xffffffe4
   2dc94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dc98:	sub	r1, fp, #32
   2dc9c:	add	r0, r1, r0
   2dca0:	ldrb	r0, [r0]
   2dca4:	cmp	r0, #66	; 0x42
   2dca8:	bne	2dd50 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5c0>
   2dcac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dcb0:	add	r0, r0, #1
   2dcb4:	str	r0, [fp, #-24]	; 0xffffffe8
   2dcb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dcbc:	ldr	r1, [sp, #28]
   2dcc0:	cmp	r0, r1
   2dcc4:	movw	r0, #0
   2dcc8:	str	r0, [sp, #4]
   2dccc:	bcs	2dce4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x554>
   2dcd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dcd4:	cmp	r0, #8
   2dcd8:	movw	r0, #0
   2dcdc:	movcc	r0, #1
   2dce0:	str	r0, [sp, #4]
   2dce4:	ldr	r0, [sp, #4]
   2dce8:	tst	r0, #1
   2dcec:	beq	2dd4c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5bc>
   2dcf0:	ldr	r0, [sp, #20]
   2dcf4:	ldr	r1, [fp, #-8]
   2dcf8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2dcfc:	add	r1, r1, r2
   2dd00:	ldrb	r1, [r1]
   2dd04:	add	r0, r0, r1
   2dd08:	ldrb	r0, [r0]
   2dd0c:	cmp	r0, #66	; 0x42
   2dd10:	beq	2dd3c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5ac>
   2dd14:	ldr	r0, [sp, #20]
   2dd18:	ldr	r1, [fp, #-8]
   2dd1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2dd20:	add	r1, r1, r2
   2dd24:	ldrb	r1, [r1]
   2dd28:	add	r0, r0, r1
   2dd2c:	ldrb	r0, [r0]
   2dd30:	cmp	r0, #65	; 0x41
   2dd34:	beq	2dd3c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5ac>
   2dd38:	b	2dd4c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5bc>
   2dd3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dd40:	add	r0, r0, #1
   2dd44:	str	r0, [fp, #-24]	; 0xffffffe8
   2dd48:	b	2dcb8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x528>
   2dd4c:	b	2dd50 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5c0>
   2dd50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dd54:	ldr	r1, [sp, #28]
   2dd58:	sub	r0, r1, r0
   2dd5c:	str	r0, [sp, #28]
   2dd60:	b	2de6c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6dc>
   2dd64:	b	2dd68 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5d8>
   2dd68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2dd6c:	add	r0, r0, #1
   2dd70:	str	r0, [fp, #-24]	; 0xffffffe8
   2dd74:	b	2dbd8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x448>
   2dd78:	ldr	r0, [sp, #32]
   2dd7c:	cmp	r0, #3
   2dd80:	bcs	2dd88 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x5f8>
   2dd84:	b	2df8c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7fc>
   2dd88:	ldrb	r0, [fp, #-32]	; 0xffffffe0
   2dd8c:	lsl	r0, r0, #2
   2dd90:	ldrb	r1, [fp, #-31]	; 0xffffffe1
   2dd94:	asr	r1, r1, #4
   2dd98:	orr	r0, r0, r1
   2dd9c:	ldr	r1, [fp, #-4]
   2dda0:	strb	r0, [r1]
   2dda4:	ldrb	r0, [fp, #-31]	; 0xffffffe1
   2dda8:	lsl	r0, r0, #4
   2ddac:	ldrb	r1, [fp, #-30]	; 0xffffffe2
   2ddb0:	asr	r1, r1, #2
   2ddb4:	orr	r0, r0, r1
   2ddb8:	ldr	r1, [fp, #-4]
   2ddbc:	strb	r0, [r1, #1]
   2ddc0:	ldrb	r0, [fp, #-30]	; 0xffffffe2
   2ddc4:	lsl	r0, r0, #6
   2ddc8:	ldrb	r1, [fp, #-29]	; 0xffffffe3
   2ddcc:	orr	r0, r0, r1
   2ddd0:	ldr	r1, [fp, #-4]
   2ddd4:	strb	r0, [r1, #2]
   2ddd8:	ldr	r0, [fp, #-4]
   2dddc:	add	r0, r0, #3
   2dde0:	str	r0, [fp, #-4]
   2dde4:	ldr	r0, [fp, #-8]
   2dde8:	add	r0, r0, #4
   2ddec:	str	r0, [fp, #-8]
   2ddf0:	ldr	r0, [sp, #32]
   2ddf4:	sub	r0, r0, #3
   2ddf8:	str	r0, [sp, #32]
   2ddfc:	ldr	r0, [sp, #28]
   2de00:	sub	r0, r0, #4
   2de04:	str	r0, [sp, #28]
   2de08:	ldr	r0, [sp, #28]
   2de0c:	str	r0, [sp, #24]
   2de10:	b	2dbc4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x434>
   2de14:	b	2de18 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x688>
   2de18:	ldr	r0, [fp, #-12]
   2de1c:	movw	r1, #0
   2de20:	cmp	r0, r1
   2de24:	beq	2de3c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6ac>
   2de28:	ldr	r0, [fp, #-4]
   2de2c:	ldr	r1, [sp, #36]	; 0x24
   2de30:	sub	r0, r0, r1
   2de34:	ldr	r1, [fp, #-12]
   2de38:	str	r0, [r1]
   2de3c:	ldr	r0, [fp, #-16]
   2de40:	movw	r1, #0
   2de44:	cmp	r0, r1
   2de48:	beq	2de60 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6d0>
   2de4c:	ldr	r0, [sp, #24]
   2de50:	ldr	r1, [fp, #-16]
   2de54:	ldr	r2, [r1]
   2de58:	sub	r0, r2, r0
   2de5c:	str	r0, [r1]
   2de60:	ldr	r0, [fp, #-20]	; 0xffffffec
   2de64:	mov	sp, fp
   2de68:	pop	{fp, pc}
   2de6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2de70:	cmp	r0, #0
   2de74:	str	r0, [sp]
   2de78:	beq	2dea0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x710>
   2de7c:	b	2de80 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x6f0>
   2de80:	ldr	r0, [sp]
   2de84:	cmp	r0, #2
   2de88:	beq	2dea4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x714>
   2de8c:	b	2de90 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x700>
   2de90:	ldr	r0, [sp]
   2de94:	cmp	r0, #3
   2de98:	beq	2def8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x768>
   2de9c:	b	2df68 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7d8>
   2dea0:	b	2df74 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7e4>
   2dea4:	ldrb	r0, [fp, #-31]	; 0xffffffe1
   2dea8:	lsl	r0, r0, #4
   2deac:	and	r0, r0, #255	; 0xff
   2deb0:	cmp	r0, #0
   2deb4:	beq	2debc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x72c>
   2deb8:	b	2df80 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7f0>
   2debc:	ldr	r0, [sp, #32]
   2dec0:	cmp	r0, #1
   2dec4:	bcs	2decc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x73c>
   2dec8:	b	2df8c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7fc>
   2decc:	ldrb	r0, [fp, #-32]	; 0xffffffe0
   2ded0:	lsl	r0, r0, #2
   2ded4:	ldrb	r1, [fp, #-31]	; 0xffffffe1
   2ded8:	asr	r1, r1, #4
   2dedc:	orr	r0, r0, r1
   2dee0:	ldr	r1, [fp, #-4]
   2dee4:	strb	r0, [r1]
   2dee8:	ldr	r0, [fp, #-4]
   2deec:	add	r0, r0, #1
   2def0:	str	r0, [fp, #-4]
   2def4:	b	2df74 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7e4>
   2def8:	ldrb	r0, [fp, #-30]	; 0xffffffe2
   2defc:	lsl	r0, r0, #6
   2df00:	and	r0, r0, #255	; 0xff
   2df04:	cmp	r0, #0
   2df08:	beq	2df10 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x780>
   2df0c:	b	2df80 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7f0>
   2df10:	ldr	r0, [sp, #32]
   2df14:	cmp	r0, #2
   2df18:	bcs	2df20 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x790>
   2df1c:	b	2df8c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7fc>
   2df20:	ldrb	r0, [fp, #-32]	; 0xffffffe0
   2df24:	lsl	r0, r0, #2
   2df28:	ldrb	r1, [fp, #-31]	; 0xffffffe1
   2df2c:	asr	r1, r1, #4
   2df30:	orr	r0, r0, r1
   2df34:	ldr	r1, [fp, #-4]
   2df38:	strb	r0, [r1]
   2df3c:	ldrb	r0, [fp, #-31]	; 0xffffffe1
   2df40:	lsl	r0, r0, #4
   2df44:	ldrb	r1, [fp, #-30]	; 0xffffffe2
   2df48:	asr	r1, r1, #2
   2df4c:	orr	r0, r0, r1
   2df50:	ldr	r1, [fp, #-4]
   2df54:	strb	r0, [r1, #1]
   2df58:	ldr	r0, [fp, #-4]
   2df5c:	add	r0, r0, #2
   2df60:	str	r0, [fp, #-4]
   2df64:	b	2df74 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x7e4>
   2df68:	movw	r0, #4
   2df6c:	str	r0, [fp, #-20]	; 0xffffffec
   2df70:	b	2de18 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x688>
   2df74:	ldr	r0, [sp, #28]
   2df78:	str	r0, [sp, #24]
   2df7c:	b	2de18 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x688>
   2df80:	movw	r0, #5
   2df84:	str	r0, [fp, #-20]	; 0xffffffec
   2df88:	b	2de18 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x688>
   2df8c:	movw	r0, #1
   2df90:	str	r0, [fp, #-20]	; 0xffffffec
   2df94:	b	2de18 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x688>
   2df98:	muleq	r0, pc, r8	; <UNPREDICTABLE>
   2df9c:	ldrdeq	r5, [r0], -r7
   2dfa0:	andeq	r5, r0, pc, asr #17
   2dfa4:	andeq	r5, r0, r7, lsl #20
   2dfa8:	strdeq	r5, [r0], -pc	; <UNPREDICTABLE>

0002dfac <flatcc_json_parser_build_string@@Base>:
   2dfac:	push	{fp, lr}
   2dfb0:	mov	fp, sp
   2dfb4:	sub	sp, sp, #40	; 0x28
   2dfb8:	str	r0, [fp, #-8]
   2dfbc:	str	r1, [fp, #-12]
   2dfc0:	str	r2, [fp, #-16]
   2dfc4:	str	r3, [sp, #20]
   2dfc8:	ldr	r0, [fp, #-8]
   2dfcc:	ldr	r1, [fp, #-12]
   2dfd0:	ldr	r2, [fp, #-16]
   2dfd4:	bl	2cd78 <flatcc_json_parser_float@@Base+0x300>
   2dfd8:	str	r0, [fp, #-12]
   2dfdc:	ldr	r0, [fp, #-8]
   2dfe0:	ldr	r1, [fp, #-12]
   2dfe4:	str	r1, [sp, #12]
   2dfe8:	ldr	r2, [fp, #-16]
   2dfec:	bl	2aef4 <flatcc_json_parser_string_part@@Base>
   2dff0:	str	r0, [fp, #-12]
   2dff4:	ldr	r0, [fp, #-12]
   2dff8:	ldr	r1, [fp, #-16]
   2dffc:	cmp	r0, r1
   2e000:	beq	2e03c <flatcc_json_parser_build_string@@Base+0x90>
   2e004:	ldr	r0, [fp, #-12]
   2e008:	ldrb	r0, [r0]
   2e00c:	cmp	r0, #34	; 0x22
   2e010:	bne	2e03c <flatcc_json_parser_build_string@@Base+0x90>
   2e014:	ldr	r0, [fp, #-8]
   2e018:	ldr	r0, [r0]
   2e01c:	ldr	r1, [sp, #12]
   2e020:	ldr	r2, [fp, #-12]
   2e024:	ldr	r3, [sp, #12]
   2e028:	sub	r2, r2, r3
   2e02c:	bl	283a0 <flatcc_builder_create_string@@Base>
   2e030:	ldr	r1, [sp, #20]
   2e034:	str	r0, [r1]
   2e038:	b	2e17c <flatcc_json_parser_build_string@@Base+0x1d0>
   2e03c:	ldr	r0, [fp, #-8]
   2e040:	ldr	r0, [r0]
   2e044:	bl	25e88 <flatcc_builder_start_string@@Base>
   2e048:	cmp	r0, #0
   2e04c:	bne	2e078 <flatcc_json_parser_build_string@@Base+0xcc>
   2e050:	ldr	r0, [fp, #-8]
   2e054:	ldr	r0, [r0]
   2e058:	ldr	r1, [sp, #12]
   2e05c:	ldr	r2, [fp, #-12]
   2e060:	ldr	r3, [sp, #12]
   2e064:	sub	r2, r2, r3
   2e068:	bl	256e0 <flatcc_builder_append_string@@Base>
   2e06c:	movw	r1, #0
   2e070:	cmp	r1, r0
   2e074:	bne	2e07c <flatcc_json_parser_build_string@@Base+0xd0>
   2e078:	b	2e194 <flatcc_json_parser_build_string@@Base+0x1e8>
   2e07c:	b	2e080 <flatcc_json_parser_build_string@@Base+0xd4>
   2e080:	ldr	r0, [fp, #-12]
   2e084:	ldr	r1, [fp, #-16]
   2e088:	cmp	r0, r1
   2e08c:	movw	r0, #0
   2e090:	str	r0, [sp, #8]
   2e094:	beq	2e0b0 <flatcc_json_parser_build_string@@Base+0x104>
   2e098:	ldr	r0, [fp, #-12]
   2e09c:	ldrb	r0, [r0]
   2e0a0:	cmp	r0, #34	; 0x22
   2e0a4:	movw	r0, #0
   2e0a8:	movne	r0, #1
   2e0ac:	str	r0, [sp, #8]
   2e0b0:	ldr	r0, [sp, #8]
   2e0b4:	tst	r0, #1
   2e0b8:	beq	2e168 <flatcc_json_parser_build_string@@Base+0x1bc>
   2e0bc:	add	r3, sp, #16
   2e0c0:	ldr	r0, [fp, #-8]
   2e0c4:	ldr	r1, [fp, #-12]
   2e0c8:	ldr	r2, [fp, #-16]
   2e0cc:	bl	2b1f4 <flatcc_json_parser_string_escape@@Base>
   2e0d0:	add	r1, sp, #16
   2e0d4:	str	r0, [fp, #-12]
   2e0d8:	ldr	r0, [fp, #-8]
   2e0dc:	ldr	r0, [r0]
   2e0e0:	add	r1, r1, #1
   2e0e4:	ldrb	r2, [sp, #16]
   2e0e8:	bl	256e0 <flatcc_builder_append_string@@Base>
   2e0ec:	movw	r1, #0
   2e0f0:	cmp	r1, r0
   2e0f4:	bne	2e0fc <flatcc_json_parser_build_string@@Base+0x150>
   2e0f8:	b	2e194 <flatcc_json_parser_build_string@@Base+0x1e8>
   2e0fc:	ldr	r0, [fp, #-16]
   2e100:	ldr	r1, [fp, #-8]
   2e104:	ldr	r2, [fp, #-12]
   2e108:	str	r2, [sp, #12]
   2e10c:	ldr	r3, [fp, #-16]
   2e110:	str	r0, [sp, #4]
   2e114:	mov	r0, r1
   2e118:	mov	r1, r2
   2e11c:	mov	r2, r3
   2e120:	bl	2aef4 <flatcc_json_parser_string_part@@Base>
   2e124:	str	r0, [fp, #-12]
   2e128:	ldr	r1, [sp, #4]
   2e12c:	cmp	r1, r0
   2e130:	beq	2e164 <flatcc_json_parser_build_string@@Base+0x1b8>
   2e134:	ldr	r0, [fp, #-8]
   2e138:	ldr	r0, [r0]
   2e13c:	ldr	r1, [sp, #12]
   2e140:	ldr	r2, [fp, #-12]
   2e144:	ldr	r3, [sp, #12]
   2e148:	sub	r2, r2, r3
   2e14c:	bl	256e0 <flatcc_builder_append_string@@Base>
   2e150:	movw	r1, #0
   2e154:	cmp	r1, r0
   2e158:	bne	2e160 <flatcc_json_parser_build_string@@Base+0x1b4>
   2e15c:	b	2e194 <flatcc_json_parser_build_string@@Base+0x1e8>
   2e160:	b	2e164 <flatcc_json_parser_build_string@@Base+0x1b8>
   2e164:	b	2e080 <flatcc_json_parser_build_string@@Base+0xd4>
   2e168:	ldr	r0, [fp, #-8]
   2e16c:	ldr	r0, [r0]
   2e170:	bl	285a8 <flatcc_builder_end_string@@Base>
   2e174:	ldr	lr, [sp, #20]
   2e178:	str	r0, [lr]
   2e17c:	ldr	r0, [fp, #-8]
   2e180:	ldr	r1, [fp, #-12]
   2e184:	ldr	r2, [fp, #-16]
   2e188:	bl	2cde8 <flatcc_json_parser_float@@Base+0x370>
   2e18c:	str	r0, [fp, #-4]
   2e190:	b	2e1a8 <flatcc_json_parser_build_string@@Base+0x1fc>
   2e194:	ldr	r0, [sp, #20]
   2e198:	movw	r1, #0
   2e19c:	str	r1, [r0]
   2e1a0:	ldr	r0, [fp, #-12]
   2e1a4:	str	r0, [fp, #-4]
   2e1a8:	ldr	r0, [fp, #-4]
   2e1ac:	mov	sp, fp
   2e1b0:	pop	{fp, pc}

0002e1b4 <flatcc_json_parser_prepare_unions@@Base>:
   2e1b4:	push	{fp, lr}
   2e1b8:	mov	fp, sp
   2e1bc:	sub	sp, sp, #32
   2e1c0:	ldr	ip, [fp, #8]
   2e1c4:	str	r0, [fp, #-8]
   2e1c8:	str	r1, [fp, #-12]
   2e1cc:	str	r2, [sp, #16]
   2e1d0:	str	r3, [sp, #12]
   2e1d4:	ldr	r0, [fp, #-8]
   2e1d8:	ldr	r0, [r0]
   2e1dc:	ldr	r1, [sp, #12]
   2e1e0:	sub	r1, r1, #1
   2e1e4:	movw	r2, #24
   2e1e8:	mul	r1, r1, r2
   2e1ec:	add	r1, r1, #32
   2e1f0:	str	ip, [sp, #4]
   2e1f4:	bl	23d28 <flatcc_builder_enter_user_frame@@Base>
   2e1f8:	ldr	r1, [fp, #8]
   2e1fc:	str	r0, [r1]
   2e200:	cmp	r0, #0
   2e204:	bne	2e224 <flatcc_json_parser_prepare_unions@@Base+0x70>
   2e208:	ldr	r0, [fp, #-8]
   2e20c:	ldr	r1, [fp, #-12]
   2e210:	ldr	r2, [sp, #16]
   2e214:	movw	r3, #33	; 0x21
   2e218:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2e21c:	str	r0, [fp, #-4]
   2e220:	b	2e250 <flatcc_json_parser_prepare_unions@@Base+0x9c>
   2e224:	ldr	r0, [fp, #-8]
   2e228:	ldr	r0, [r0]
   2e22c:	ldr	r1, [fp, #8]
   2e230:	ldr	r1, [r1]
   2e234:	bl	23f28 <flatcc_builder_get_user_frame_ptr@@Base>
   2e238:	str	r0, [sp, #8]
   2e23c:	ldr	r0, [sp, #12]
   2e240:	ldr	r1, [sp, #8]
   2e244:	str	r0, [r1]
   2e248:	ldr	r0, [fp, #-12]
   2e24c:	str	r0, [fp, #-4]
   2e250:	ldr	r0, [fp, #-4]
   2e254:	mov	sp, fp
   2e258:	pop	{fp, pc}

0002e25c <flatcc_json_parser_finalize_unions@@Base>:
   2e25c:	push	{fp, lr}
   2e260:	mov	fp, sp
   2e264:	sub	sp, sp, #24
   2e268:	str	r0, [fp, #-4]
   2e26c:	str	r1, [fp, #-8]
   2e270:	str	r2, [sp, #12]
   2e274:	str	r3, [sp, #8]
   2e278:	ldr	r0, [fp, #-4]
   2e27c:	ldr	r0, [r0]
   2e280:	ldr	r1, [sp, #8]
   2e284:	bl	23f28 <flatcc_builder_get_user_frame_ptr@@Base>
   2e288:	str	r0, [sp, #4]
   2e28c:	ldr	r0, [sp, #4]
   2e290:	ldr	r0, [r0, #4]
   2e294:	cmp	r0, #0
   2e298:	beq	2e2b4 <flatcc_json_parser_finalize_unions@@Base+0x58>
   2e29c:	ldr	r0, [fp, #-4]
   2e2a0:	ldr	r1, [fp, #-8]
   2e2a4:	ldr	r2, [sp, #12]
   2e2a8:	movw	r3, #27
   2e2ac:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2e2b0:	str	r0, [fp, #-8]
   2e2b4:	ldr	r0, [fp, #-4]
   2e2b8:	ldr	r0, [r0]
   2e2bc:	ldr	r1, [sp, #8]
   2e2c0:	bl	23e9c <flatcc_builder_exit_user_frame_at@@Base>
   2e2c4:	ldr	r1, [fp, #-8]
   2e2c8:	str	r0, [sp]
   2e2cc:	mov	r0, r1
   2e2d0:	mov	sp, fp
   2e2d4:	pop	{fp, pc}

0002e2d8 <flatcc_json_parser_union@@Base>:
   2e2d8:	push	{r4, sl, fp, lr}
   2e2dc:	add	fp, sp, #8
   2e2e0:	sub	sp, sp, #56	; 0x38
   2e2e4:	ldr	ip, [fp, #16]
   2e2e8:	ldr	lr, [fp, #12]
   2e2ec:	ldr	r4, [fp, #8]
   2e2f0:	str	r0, [fp, #-16]
   2e2f4:	str	r1, [fp, #-20]	; 0xffffffec
   2e2f8:	str	r2, [fp, #-24]	; 0xffffffe8
   2e2fc:	str	r3, [fp, #-28]	; 0xffffffe4
   2e300:	strh	r4, [fp, #-30]	; 0xffffffe2
   2e304:	ldr	r0, [fp, #-16]
   2e308:	ldr	r0, [r0]
   2e30c:	ldr	r1, [fp, #12]
   2e310:	str	ip, [sp, #12]
   2e314:	str	lr, [sp, #8]
   2e318:	bl	23f28 <flatcc_builder_get_user_frame_ptr@@Base>
   2e31c:	str	r0, [sp, #28]
   2e320:	ldr	r0, [sp, #28]
   2e324:	add	r0, r0, #8
   2e328:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2e32c:	movw	r2, #24
   2e330:	mul	r1, r1, r2
   2e334:	add	r0, r0, r1
   2e338:	str	r0, [sp, #24]
   2e33c:	ldr	r0, [sp, #24]
   2e340:	ldr	r0, [r0]
   2e344:	movw	r1, #0
   2e348:	cmp	r0, r1
   2e34c:	beq	2e36c <flatcc_json_parser_union@@Base+0x94>
   2e350:	ldr	r0, [fp, #-16]
   2e354:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e358:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e35c:	movw	r3, #28
   2e360:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2e364:	str	r0, [fp, #-12]
   2e368:	b	2e4b8 <flatcc_json_parser_union@@Base+0x1e0>
   2e36c:	ldr	r0, [sp, #24]
   2e370:	ldrsb	r0, [r0, #12]
   2e374:	cmp	r0, #0
   2e378:	bne	2e3cc <flatcc_json_parser_union@@Base+0xf4>
   2e37c:	ldr	r0, [sp, #28]
   2e380:	ldr	r1, [r0, #4]
   2e384:	add	r1, r1, #1
   2e388:	str	r1, [r0, #4]
   2e38c:	ldr	r0, [fp, #-16]
   2e390:	ldr	r0, [r0, #16]
   2e394:	ldr	r1, [sp, #24]
   2e398:	str	r0, [r1, #8]
   2e39c:	ldr	r0, [fp, #-16]
   2e3a0:	ldr	r0, [r0, #4]
   2e3a4:	ldr	r1, [sp, #24]
   2e3a8:	str	r0, [r1, #4]
   2e3ac:	ldr	r0, [fp, #-16]
   2e3b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e3b4:	ldr	r2, [sp, #24]
   2e3b8:	str	r1, [r2]
   2e3bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e3c0:	bl	2c2c0 <flatcc_json_parser_generic_json@@Base>
   2e3c4:	str	r0, [fp, #-20]	; 0xffffffec
   2e3c8:	b	2e4b0 <flatcc_json_parser_union@@Base+0x1d8>
   2e3cc:	ldr	r0, [sp, #24]
   2e3d0:	ldrb	r0, [r0, #13]
   2e3d4:	strb	r0, [sp, #16]
   2e3d8:	ldr	r0, [sp, #24]
   2e3dc:	ldrb	r0, [r0, #13]
   2e3e0:	cmp	r0, #0
   2e3e4:	bne	2e404 <flatcc_json_parser_union@@Base+0x12c>
   2e3e8:	ldr	r0, [fp, #-16]
   2e3ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e3f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e3f4:	movw	r3, #25
   2e3f8:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2e3fc:	str	r0, [fp, #-12]
   2e400:	b	2e4b8 <flatcc_json_parser_union@@Base+0x1e0>
   2e404:	ldr	r0, [sp, #28]
   2e408:	ldr	r1, [r0, #4]
   2e40c:	mvn	r2, #0
   2e410:	add	r1, r1, r2
   2e414:	str	r1, [r0, #4]
   2e418:	ldr	r0, [fp, #16]
   2e41c:	ldr	r1, [fp, #-16]
   2e420:	ldr	r2, [fp, #-20]	; 0xffffffec
   2e424:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e428:	ldr	ip, [sp, #24]
   2e42c:	ldrb	ip, [ip, #13]
   2e430:	add	lr, sp, #16
   2e434:	add	lr, lr, #4
   2e438:	str	r0, [sp, #4]
   2e43c:	mov	r0, r1
   2e440:	mov	r1, r2
   2e444:	mov	r2, r3
   2e448:	and	r3, ip, #255	; 0xff
   2e44c:	str	lr, [sp]
   2e450:	ldr	ip, [sp, #4]
   2e454:	blx	ip
   2e458:	str	r0, [fp, #-20]	; 0xffffffec
   2e45c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e460:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e464:	cmp	r0, r1
   2e468:	beq	2e4ac <flatcc_json_parser_union@@Base+0x1d4>
   2e46c:	ldr	r0, [fp, #-16]
   2e470:	ldr	r0, [r0]
   2e474:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   2e478:	ldr	r2, [sp, #16]
   2e47c:	ldr	r3, [sp, #20]
   2e480:	bl	27600 <flatcc_builder_table_add_union@@Base>
   2e484:	cmp	r0, #0
   2e488:	beq	2e4a8 <flatcc_json_parser_union@@Base+0x1d0>
   2e48c:	ldr	r0, [fp, #-16]
   2e490:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e494:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e498:	movw	r3, #28
   2e49c:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2e4a0:	str	r0, [fp, #-12]
   2e4a4:	b	2e4b8 <flatcc_json_parser_union@@Base+0x1e0>
   2e4a8:	b	2e4ac <flatcc_json_parser_union@@Base+0x1d4>
   2e4ac:	b	2e4b0 <flatcc_json_parser_union@@Base+0x1d8>
   2e4b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e4b4:	str	r0, [fp, #-12]
   2e4b8:	ldr	r0, [fp, #-12]
   2e4bc:	sub	sp, fp, #8
   2e4c0:	pop	{r4, sl, fp, pc}

0002e4c4 <flatcc_json_parser_union_type@@Base>:
   2e4c4:	push	{r4, r5, fp, lr}
   2e4c8:	add	fp, sp, #8
   2e4cc:	sub	sp, sp, #80	; 0x50
   2e4d0:	ldr	ip, [fp, #20]
   2e4d4:	ldr	lr, [fp, #16]
   2e4d8:	ldr	r4, [fp, #12]
   2e4dc:	ldr	r5, [fp, #8]
   2e4e0:	str	r0, [fp, #-16]
   2e4e4:	str	r1, [fp, #-20]	; 0xffffffec
   2e4e8:	str	r2, [fp, #-24]	; 0xffffffe8
   2e4ec:	str	r3, [fp, #-28]	; 0xffffffe4
   2e4f0:	strh	r5, [fp, #-30]	; 0xffffffe2
   2e4f4:	ldr	r0, [fp, #-16]
   2e4f8:	ldr	r0, [r0]
   2e4fc:	ldr	r1, [fp, #12]
   2e500:	str	r4, [sp, #24]
   2e504:	str	ip, [sp, #20]
   2e508:	str	lr, [sp, #16]
   2e50c:	bl	23f28 <flatcc_builder_get_user_frame_ptr@@Base>
   2e510:	str	r0, [fp, #-36]	; 0xffffffdc
   2e514:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2e518:	add	r0, r0, #8
   2e51c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2e520:	movw	r2, #24
   2e524:	mul	r1, r1, r2
   2e528:	add	r0, r0, r1
   2e52c:	str	r0, [fp, #-40]	; 0xffffffd8
   2e530:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e534:	ldrsb	r0, [r0, #12]
   2e538:	cmp	r0, #0
   2e53c:	beq	2e55c <flatcc_json_parser_union_type@@Base+0x98>
   2e540:	ldr	r0, [fp, #-16]
   2e544:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e548:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e54c:	movw	r3, #28
   2e550:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2e554:	str	r0, [fp, #-12]
   2e558:	b	2e750 <flatcc_json_parser_union_type@@Base+0x28c>
   2e55c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e560:	movw	r1, #1
   2e564:	strb	r1, [r0, #12]
   2e568:	ldr	r0, [fp, #-16]
   2e56c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e570:	str	r1, [sp, #36]	; 0x24
   2e574:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e578:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e57c:	add	r3, r3, #13
   2e580:	bl	2e768 <flatcc_json_parser_union_type@@Base+0x2a4>
   2e584:	str	r0, [fp, #-20]	; 0xffffffec
   2e588:	ldr	r0, [sp, #36]	; 0x24
   2e58c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e590:	cmp	r0, r1
   2e594:	bne	2e5bc <flatcc_json_parser_union_type@@Base+0xf8>
   2e598:	ldr	r0, [fp, #-16]
   2e59c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e5a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e5a4:	ldr	r3, [fp, #16]
   2e5a8:	ldr	ip, [fp, #-40]	; 0xffffffd8
   2e5ac:	add	ip, ip, #13
   2e5b0:	str	ip, [sp]
   2e5b4:	bl	2e844 <flatcc_json_parser_union_type@@Base+0x380>
   2e5b8:	str	r0, [fp, #-20]	; 0xffffffec
   2e5bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e5c0:	ldr	r0, [r0]
   2e5c4:	movw	r1, #0
   2e5c8:	cmp	r0, r1
   2e5cc:	bne	2e604 <flatcc_json_parser_union_type@@Base+0x140>
   2e5d0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e5d4:	ldrb	r0, [r0, #13]
   2e5d8:	cmp	r0, #0
   2e5dc:	movw	r0, #0
   2e5e0:	movne	r0, #1
   2e5e4:	and	r0, r0, #1
   2e5e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2e5ec:	ldr	r2, [r1, #4]
   2e5f0:	add	r0, r2, r0
   2e5f4:	str	r0, [r1, #4]
   2e5f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e5fc:	str	r0, [fp, #-12]
   2e600:	b	2e750 <flatcc_json_parser_union_type@@Base+0x28c>
   2e604:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2e608:	ldr	r0, [r0, #4]
   2e60c:	cmp	r0, #0
   2e610:	beq	2e618 <flatcc_json_parser_union_type@@Base+0x154>
   2e614:	b	2e638 <flatcc_json_parser_union_type@@Base+0x174>
   2e618:	ldr	r0, [pc, #316]	; 2e75c <flatcc_json_parser_union_type@@Base+0x298>
   2e61c:	add	r0, pc, r0
   2e620:	ldr	r1, [pc, #312]	; 2e760 <flatcc_json_parser_union_type@@Base+0x29c>
   2e624:	add	r1, pc, r1
   2e628:	ldr	r2, [pc, #308]	; 2e764 <flatcc_json_parser_union_type@@Base+0x2a0>
   2e62c:	add	r3, pc, r2
   2e630:	movw	r2, #965	; 0x3c5
   2e634:	bl	12b80 <__assert_fail@plt>
   2e638:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2e63c:	ldr	r1, [r0, #4]
   2e640:	mvn	r2, #0
   2e644:	add	r1, r1, r2
   2e648:	str	r1, [r0, #4]
   2e64c:	ldr	r0, [fp, #-16]
   2e650:	ldr	r0, [r0, #16]
   2e654:	str	r0, [sp, #32]
   2e658:	ldr	r0, [fp, #-16]
   2e65c:	ldr	r0, [r0, #4]
   2e660:	str	r0, [sp, #28]
   2e664:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e668:	ldr	r0, [r0, #8]
   2e66c:	ldr	r1, [fp, #-16]
   2e670:	str	r0, [r1, #16]
   2e674:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e678:	ldr	r0, [r0, #4]
   2e67c:	ldr	r1, [fp, #-16]
   2e680:	str	r0, [r1, #4]
   2e684:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e688:	ldrb	r0, [r0, #13]
   2e68c:	strb	r0, [sp, #40]	; 0x28
   2e690:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e694:	ldr	r1, [fp, #20]
   2e698:	ldr	r2, [fp, #-16]
   2e69c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e6a0:	ldr	r3, [r3]
   2e6a4:	ldr	ip, [fp, #-24]	; 0xffffffe8
   2e6a8:	ldr	lr, [fp, #-40]	; 0xffffffd8
   2e6ac:	ldrb	lr, [lr, #13]
   2e6b0:	add	r4, sp, #40	; 0x28
   2e6b4:	add	r4, r4, #4
   2e6b8:	str	r0, [sp, #12]
   2e6bc:	mov	r0, r2
   2e6c0:	str	r1, [sp, #8]
   2e6c4:	mov	r1, r3
   2e6c8:	mov	r2, ip
   2e6cc:	and	r3, lr, #255	; 0xff
   2e6d0:	str	r4, [sp]
   2e6d4:	ldr	ip, [sp, #8]
   2e6d8:	blx	ip
   2e6dc:	ldr	r1, [sp, #12]
   2e6e0:	cmp	r1, r0
   2e6e4:	bne	2e6f4 <flatcc_json_parser_union_type@@Base+0x230>
   2e6e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e6ec:	str	r0, [fp, #-12]
   2e6f0:	b	2e750 <flatcc_json_parser_union_type@@Base+0x28c>
   2e6f4:	ldr	r0, [fp, #-16]
   2e6f8:	ldr	r0, [r0]
   2e6fc:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   2e700:	ldr	r2, [sp, #40]	; 0x28
   2e704:	ldr	r3, [sp, #44]	; 0x2c
   2e708:	bl	27600 <flatcc_builder_table_add_union@@Base>
   2e70c:	cmp	r0, #0
   2e710:	beq	2e730 <flatcc_json_parser_union_type@@Base+0x26c>
   2e714:	ldr	r0, [fp, #-16]
   2e718:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e71c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e720:	movw	r3, #28
   2e724:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2e728:	str	r0, [fp, #-12]
   2e72c:	b	2e750 <flatcc_json_parser_union_type@@Base+0x28c>
   2e730:	ldr	r0, [sp, #32]
   2e734:	ldr	r1, [fp, #-16]
   2e738:	str	r0, [r1, #16]
   2e73c:	ldr	r0, [sp, #28]
   2e740:	ldr	r1, [fp, #-16]
   2e744:	str	r0, [r1, #4]
   2e748:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e74c:	str	r0, [fp, #-12]
   2e750:	ldr	r0, [fp, #-12]
   2e754:	sub	sp, fp, #8
   2e758:	pop	{r4, r5, fp, pc}
   2e75c:	andeq	r4, r0, r2, lsl r4
   2e760:	andeq	r4, r0, r9, lsl r4
   2e764:	andeq	r4, r0, r2, ror r4
   2e768:	push	{r4, r5, fp, lr}
   2e76c:	add	fp, sp, #8
   2e770:	sub	sp, sp, #56	; 0x38
   2e774:	str	r0, [fp, #-16]
   2e778:	str	r1, [fp, #-20]	; 0xffffffec
   2e77c:	str	r2, [fp, #-24]	; 0xffffffe8
   2e780:	str	r3, [fp, #-28]	; 0xffffffe4
   2e784:	mov	r0, #0
   2e788:	str	r0, [sp, #28]
   2e78c:	str	r0, [sp, #24]
   2e790:	movw	r0, #0
   2e794:	str	r0, [sp, #20]
   2e798:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e79c:	str	r0, [sp, #16]
   2e7a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2e7a4:	movw	r1, #0
   2e7a8:	strb	r1, [r0]
   2e7ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e7b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e7b4:	cmp	r0, r1
   2e7b8:	bne	2e7c8 <flatcc_json_parser_union_type@@Base+0x304>
   2e7bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e7c0:	str	r0, [fp, #-12]
   2e7c4:	b	2e838 <flatcc_json_parser_union_type@@Base+0x374>
   2e7c8:	ldr	r0, [fp, #-16]
   2e7cc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e7d0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e7d4:	add	r3, sp, #20
   2e7d8:	add	ip, sp, #24
   2e7dc:	str	ip, [sp]
   2e7e0:	bl	2d564 <flatcc_json_parser_integer@@Base>
   2e7e4:	str	r0, [fp, #-20]	; 0xffffffec
   2e7e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e7ec:	ldr	r1, [sp, #16]
   2e7f0:	cmp	r0, r1
   2e7f4:	beq	2e830 <flatcc_json_parser_union_type@@Base+0x36c>
   2e7f8:	ldr	r0, [fp, #-16]
   2e7fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2e800:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e804:	ldr	r3, [sp, #20]
   2e808:	ldr	ip, [sp, #24]
   2e80c:	ldr	lr, [sp, #28]
   2e810:	ldr	r4, [fp, #-28]	; 0xffffffe4
   2e814:	mov	r5, sp
   2e818:	str	r4, [r5, #8]
   2e81c:	str	lr, [r5, #4]
   2e820:	str	ip, [r5]
   2e824:	bl	307f8 <flatcc_json_parser_struct_as_root@@Base+0x125c>
   2e828:	str	r0, [fp, #-12]
   2e82c:	b	2e838 <flatcc_json_parser_union_type@@Base+0x374>
   2e830:	ldr	r0, [fp, #-20]	; 0xffffffec
   2e834:	str	r0, [fp, #-12]
   2e838:	ldr	r0, [fp, #-12]
   2e83c:	sub	sp, fp, #8
   2e840:	pop	{r4, r5, fp, pc}
   2e844:	push	{r4, r5, r6, sl, fp, lr}
   2e848:	add	fp, sp, #16
   2e84c:	sub	sp, sp, #88	; 0x58
   2e850:	ldr	ip, [fp, #8]
   2e854:	str	r0, [fp, #-24]	; 0xffffffe8
   2e858:	str	r1, [fp, #-28]	; 0xffffffe4
   2e85c:	str	r2, [fp, #-32]	; 0xffffffe0
   2e860:	str	r3, [fp, #-36]	; 0xffffffdc
   2e864:	movw	r0, #0
   2e868:	strb	r0, [fp, #-45]	; 0xffffffd3
   2e86c:	movw	r1, #0
   2e870:	str	r1, [sp, #36]	; 0x24
   2e874:	ldr	r1, [fp, #8]
   2e878:	strb	r0, [r1]
   2e87c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e880:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2e884:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2e888:	str	ip, [sp, #32]
   2e88c:	bl	308b0 <flatcc_json_parser_struct_as_root@@Base+0x1314>
   2e890:	str	r0, [fp, #-28]	; 0xffffffe4
   2e894:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2e898:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2e89c:	cmp	r0, r1
   2e8a0:	bne	2e8b0 <flatcc_json_parser_union_type@@Base+0x3ec>
   2e8a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2e8a8:	str	r0, [fp, #-20]	; 0xffffffec
   2e8ac:	b	2ea64 <flatcc_json_parser_union_type@@Base+0x5a0>
   2e8b0:	b	2e8b4 <flatcc_json_parser_union_type@@Base+0x3f0>
   2e8b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2e8b8:	str	r0, [fp, #-40]	; 0xffffffd8
   2e8bc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e8c0:	ldr	r0, [r0]
   2e8c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e8c8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2e8cc:	str	r2, [fp, #-44]	; 0xffffffd4
   2e8d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e8d4:	str	r0, [sp, #28]
   2e8d8:	mov	r0, r1
   2e8dc:	mov	r1, r2
   2e8e0:	mov	r2, r3
   2e8e4:	add	r3, sp, #44	; 0x2c
   2e8e8:	add	ip, sp, #48	; 0x30
   2e8ec:	str	ip, [sp]
   2e8f0:	add	ip, sp, #40	; 0x28
   2e8f4:	str	ip, [sp, #4]
   2e8f8:	ldr	ip, [sp, #28]
   2e8fc:	blx	ip
   2e900:	str	r0, [fp, #-28]	; 0xffffffe4
   2e904:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2e908:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2e90c:	cmp	r0, r1
   2e910:	bne	2e920 <flatcc_json_parser_union_type@@Base+0x45c>
   2e914:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2e918:	str	r0, [fp, #-20]	; 0xffffffec
   2e91c:	b	2ea64 <flatcc_json_parser_union_type@@Base+0x5a0>
   2e920:	b	2e924 <flatcc_json_parser_union_type@@Base+0x460>
   2e924:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2e928:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2e92c:	cmp	r0, r1
   2e930:	movw	r0, #0
   2e934:	str	r0, [sp, #24]
   2e938:	bne	2e960 <flatcc_json_parser_union_type@@Base+0x49c>
   2e93c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e940:	add	r1, r0, #4
   2e944:	str	r1, [fp, #-40]	; 0xffffffd8
   2e948:	ldr	r0, [r0, #4]
   2e94c:	movw	r1, #0
   2e950:	cmp	r0, r1
   2e954:	movw	r0, #0
   2e958:	movne	r0, #1
   2e95c:	str	r0, [sp, #24]
   2e960:	ldr	r0, [sp, #24]
   2e964:	tst	r0, #1
   2e968:	bne	2e8bc <flatcc_json_parser_union_type@@Base+0x3f8>
   2e96c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2e970:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2e974:	cmp	r0, r1
   2e978:	bne	2e998 <flatcc_json_parser_union_type@@Base+0x4d4>
   2e97c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e980:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2e984:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2e988:	movw	r3, #23
   2e98c:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2e990:	str	r0, [fp, #-20]	; 0xffffffec
   2e994:	b	2ea64 <flatcc_json_parser_union_type@@Base+0x5a0>
   2e998:	ldr	r0, [sp, #36]	; 0x24
   2e99c:	add	r1, r0, #1
   2e9a0:	str	r1, [sp, #36]	; 0x24
   2e9a4:	cmp	r0, #0
   2e9a8:	beq	2e9d8 <flatcc_json_parser_union_type@@Base+0x514>
   2e9ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e9b0:	ldr	r0, [r0, #12]
   2e9b4:	cmp	r0, #0
   2e9b8:	beq	2e9d8 <flatcc_json_parser_union_type@@Base+0x514>
   2e9bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e9c0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2e9c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2e9c8:	movw	r3, #14
   2e9cc:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2e9d0:	str	r0, [fp, #-20]	; 0xffffffec
   2e9d4:	b	2ea64 <flatcc_json_parser_union_type@@Base+0x5a0>
   2e9d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e9dc:	mov	r1, r0
   2e9e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e9e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e9e8:	ldr	ip, [sp, #44]	; 0x2c
   2e9ec:	ldr	lr, [sp, #48]	; 0x30
   2e9f0:	ldr	r4, [sp, #52]	; 0x34
   2e9f4:	mov	r5, sp
   2e9f8:	sub	r6, fp, #45	; 0x2d
   2e9fc:	str	r6, [r5, #8]
   2ea00:	str	r4, [r5, #4]
   2ea04:	str	lr, [r5]
   2ea08:	str	r0, [sp, #20]
   2ea0c:	mov	r0, r2
   2ea10:	str	r1, [sp, #16]
   2ea14:	mov	r1, r3
   2ea18:	ldr	r2, [sp, #20]
   2ea1c:	mov	r3, ip
   2ea20:	bl	307f8 <flatcc_json_parser_struct_as_root@@Base+0x125c>
   2ea24:	ldr	r1, [sp, #16]
   2ea28:	cmp	r1, r0
   2ea2c:	bne	2ea3c <flatcc_json_parser_union_type@@Base+0x578>
   2ea30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ea34:	str	r0, [fp, #-20]	; 0xffffffec
   2ea38:	b	2ea64 <flatcc_json_parser_union_type@@Base+0x5a0>
   2ea3c:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   2ea40:	ldr	r1, [fp, #8]
   2ea44:	ldrb	r2, [r1]
   2ea48:	add	r0, r2, r0
   2ea4c:	strb	r0, [r1]
   2ea50:	ldr	r0, [sp, #40]	; 0x28
   2ea54:	cmp	r0, #0
   2ea58:	bne	2e8b4 <flatcc_json_parser_union_type@@Base+0x3f0>
   2ea5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ea60:	str	r0, [fp, #-20]	; 0xffffffec
   2ea64:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ea68:	sub	sp, fp, #16
   2ea6c:	pop	{r4, r5, r6, sl, fp, pc}

0002ea70 <flatcc_json_parser_union_vector@@Base>:
   2ea70:	push	{r4, sl, fp, lr}
   2ea74:	add	fp, sp, #8
   2ea78:	sub	sp, sp, #56	; 0x38
   2ea7c:	ldr	ip, [fp, #16]
   2ea80:	ldr	lr, [fp, #12]
   2ea84:	ldr	r4, [fp, #8]
   2ea88:	str	r0, [fp, #-16]
   2ea8c:	str	r1, [fp, #-20]	; 0xffffffec
   2ea90:	str	r2, [fp, #-24]	; 0xffffffe8
   2ea94:	str	r3, [fp, #-28]	; 0xffffffe4
   2ea98:	strh	r4, [fp, #-30]	; 0xffffffe2
   2ea9c:	ldr	r0, [fp, #-16]
   2eaa0:	ldr	r0, [r0]
   2eaa4:	ldr	r1, [fp, #12]
   2eaa8:	str	ip, [sp, #20]
   2eaac:	str	lr, [sp, #16]
   2eab0:	bl	23f28 <flatcc_builder_get_user_frame_ptr@@Base>
   2eab4:	str	r0, [sp, #28]
   2eab8:	ldr	r0, [sp, #28]
   2eabc:	add	r0, r0, #8
   2eac0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2eac4:	movw	r2, #24
   2eac8:	mul	r1, r1, r2
   2eacc:	add	r0, r0, r1
   2ead0:	str	r0, [sp, #24]
   2ead4:	ldr	r0, [sp, #24]
   2ead8:	ldr	r0, [r0]
   2eadc:	movw	r1, #0
   2eae0:	cmp	r0, r1
   2eae4:	beq	2eb04 <flatcc_json_parser_union_vector@@Base+0x94>
   2eae8:	ldr	r0, [fp, #-16]
   2eaec:	ldr	r1, [fp, #-20]	; 0xffffffec
   2eaf0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2eaf4:	movw	r3, #28
   2eaf8:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2eafc:	str	r0, [fp, #-12]
   2eb00:	b	2ebbc <flatcc_json_parser_union_vector@@Base+0x14c>
   2eb04:	ldr	r0, [sp, #24]
   2eb08:	ldrsb	r0, [r0, #12]
   2eb0c:	cmp	r0, #0
   2eb10:	bne	2eb64 <flatcc_json_parser_union_vector@@Base+0xf4>
   2eb14:	ldr	r0, [sp, #28]
   2eb18:	ldr	r1, [r0, #4]
   2eb1c:	add	r1, r1, #1
   2eb20:	str	r1, [r0, #4]
   2eb24:	ldr	r0, [fp, #-16]
   2eb28:	ldr	r0, [r0, #16]
   2eb2c:	ldr	r1, [sp, #24]
   2eb30:	str	r0, [r1, #8]
   2eb34:	ldr	r0, [fp, #-16]
   2eb38:	ldr	r0, [r0, #4]
   2eb3c:	ldr	r1, [sp, #24]
   2eb40:	str	r0, [r1, #4]
   2eb44:	ldr	r0, [fp, #-16]
   2eb48:	ldr	r1, [fp, #-20]	; 0xffffffec
   2eb4c:	ldr	r2, [sp, #24]
   2eb50:	str	r1, [r2]
   2eb54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2eb58:	bl	2c2c0 <flatcc_json_parser_generic_json@@Base>
   2eb5c:	str	r0, [fp, #-20]	; 0xffffffec
   2eb60:	b	2ebb4 <flatcc_json_parser_union_vector@@Base+0x144>
   2eb64:	ldr	r0, [sp, #28]
   2eb68:	ldr	r1, [r0, #4]
   2eb6c:	mvn	r2, #0
   2eb70:	add	r1, r1, r2
   2eb74:	str	r1, [r0, #4]
   2eb78:	ldr	r0, [fp, #-16]
   2eb7c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2eb80:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2eb84:	ldr	r3, [sp, #24]
   2eb88:	ldr	r3, [r3, #20]
   2eb8c:	ldr	ip, [sp, #24]
   2eb90:	ldr	ip, [ip, #16]
   2eb94:	ldrh	lr, [fp, #-30]	; 0xffffffe2
   2eb98:	ldr	r4, [fp, #16]
   2eb9c:	str	ip, [sp]
   2eba0:	uxth	ip, lr
   2eba4:	str	ip, [sp, #4]
   2eba8:	str	r4, [sp, #8]
   2ebac:	bl	2ebc8 <flatcc_json_parser_union_vector@@Base+0x158>
   2ebb0:	str	r0, [fp, #-20]	; 0xffffffec
   2ebb4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ebb8:	str	r0, [fp, #-12]
   2ebbc:	ldr	r0, [fp, #-12]
   2ebc0:	sub	sp, fp, #8
   2ebc4:	pop	{r4, sl, fp, pc}
   2ebc8:	push	{r4, sl, fp, lr}
   2ebcc:	add	fp, sp, #8
   2ebd0:	sub	sp, sp, #64	; 0x40
   2ebd4:	ldr	ip, [fp, #16]
   2ebd8:	ldr	lr, [fp, #12]
   2ebdc:	ldr	r4, [fp, #8]
   2ebe0:	str	r0, [fp, #-16]
   2ebe4:	str	r1, [fp, #-20]	; 0xffffffec
   2ebe8:	str	r2, [fp, #-24]	; 0xffffffe8
   2ebec:	str	r3, [fp, #-28]	; 0xffffffe4
   2ebf0:	strh	lr, [fp, #-30]	; 0xffffffe2
   2ebf4:	movw	r0, #0
   2ebf8:	str	r0, [sp, #36]	; 0x24
   2ebfc:	ldr	r0, [fp, #-16]
   2ec00:	ldr	r0, [r0]
   2ec04:	str	r4, [sp, #16]
   2ec08:	str	ip, [sp, #12]
   2ec0c:	bl	25cd4 <flatcc_builder_start_offset_vector@@Base>
   2ec10:	cmp	r0, #0
   2ec14:	beq	2ec1c <flatcc_json_parser_union_vector@@Base+0x1ac>
   2ec18:	b	2edd8 <flatcc_json_parser_union_vector@@Base+0x368>
   2ec1c:	ldr	r0, [fp, #-16]
   2ec20:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ec24:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ec28:	add	r3, sp, #24
   2ec2c:	bl	2f288 <flatcc_json_parser_union_type_vector@@Base+0x48c>
   2ec30:	str	r0, [fp, #-20]	; 0xffffffec
   2ec34:	movw	r0, #0
   2ec38:	str	r0, [sp, #20]
   2ec3c:	ldr	r0, [sp, #24]
   2ec40:	cmp	r0, #0
   2ec44:	beq	2ed3c <flatcc_json_parser_union_vector@@Base+0x2cc>
   2ec48:	ldr	r0, [sp, #20]
   2ec4c:	ldr	r1, [fp, #8]
   2ec50:	cmp	r0, r1
   2ec54:	bne	2ec74 <flatcc_json_parser_union_vector@@Base+0x204>
   2ec58:	ldr	r0, [fp, #-16]
   2ec5c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ec60:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ec64:	movw	r3, #30
   2ec68:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2ec6c:	str	r0, [fp, #-12]
   2ec70:	b	2edf0 <flatcc_json_parser_union_vector@@Base+0x380>
   2ec74:	ldr	r0, [fp, #-16]
   2ec78:	ldr	r0, [r0]
   2ec7c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2ec80:	bl	23f28 <flatcc_builder_get_user_frame_ptr@@Base>
   2ec84:	str	r0, [sp, #28]
   2ec88:	ldr	r0, [fp, #16]
   2ec8c:	ldr	r1, [fp, #-16]
   2ec90:	ldr	lr, [fp, #-20]	; 0xffffffec
   2ec94:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ec98:	ldr	r3, [sp, #28]
   2ec9c:	ldr	ip, [sp, #20]
   2eca0:	add	r3, r3, ip
   2eca4:	str	r0, [sp, #8]
   2eca8:	mov	r0, r1
   2ecac:	mov	r1, lr
   2ecb0:	ldrb	r3, [r3]
   2ecb4:	add	ip, sp, #36	; 0x24
   2ecb8:	str	ip, [sp]
   2ecbc:	ldr	ip, [sp, #8]
   2ecc0:	blx	ip
   2ecc4:	str	r0, [fp, #-20]	; 0xffffffec
   2ecc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2eccc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ecd0:	cmp	r0, r1
   2ecd4:	bne	2ece4 <flatcc_json_parser_union_vector@@Base+0x274>
   2ecd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ecdc:	str	r0, [fp, #-12]
   2ece0:	b	2edf0 <flatcc_json_parser_union_vector@@Base+0x380>
   2ece4:	ldr	r0, [fp, #-16]
   2ece8:	ldr	r0, [r0]
   2ecec:	movw	r1, #1
   2ecf0:	bl	25468 <flatcc_builder_extend_offset_vector@@Base>
   2ecf4:	str	r0, [sp, #32]
   2ecf8:	movw	r1, #0
   2ecfc:	cmp	r0, r1
   2ed00:	bne	2ed08 <flatcc_json_parser_union_vector@@Base+0x298>
   2ed04:	b	2edd8 <flatcc_json_parser_union_vector@@Base+0x368>
   2ed08:	ldr	r0, [sp, #36]	; 0x24
   2ed0c:	ldr	r1, [sp, #32]
   2ed10:	str	r0, [r1]
   2ed14:	ldr	r0, [fp, #-16]
   2ed18:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ed1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ed20:	add	r3, sp, #24
   2ed24:	bl	2d29c <flatcc_json_parser_float@@Base+0x824>
   2ed28:	str	r0, [fp, #-20]	; 0xffffffec
   2ed2c:	ldr	r0, [sp, #20]
   2ed30:	add	r0, r0, #1
   2ed34:	str	r0, [sp, #20]
   2ed38:	b	2ec3c <flatcc_json_parser_union_vector@@Base+0x1cc>
   2ed3c:	ldr	r0, [sp, #20]
   2ed40:	ldr	r1, [fp, #8]
   2ed44:	cmp	r0, r1
   2ed48:	beq	2ed68 <flatcc_json_parser_union_vector@@Base+0x2f8>
   2ed4c:	ldr	r0, [fp, #-16]
   2ed50:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ed54:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ed58:	movw	r3, #30
   2ed5c:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2ed60:	str	r0, [fp, #-12]
   2ed64:	b	2edf0 <flatcc_json_parser_union_vector@@Base+0x380>
   2ed68:	ldr	r0, [fp, #-16]
   2ed6c:	ldr	r0, [r0]
   2ed70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2ed74:	bl	23f28 <flatcc_builder_get_user_frame_ptr@@Base>
   2ed78:	str	r0, [sp, #28]
   2ed7c:	ldr	r0, [fp, #-16]
   2ed80:	ldr	r0, [r0]
   2ed84:	ldr	r1, [sp, #28]
   2ed88:	bl	2751c <flatcc_builder_end_offset_vector_for_unions@@Base>
   2ed8c:	str	r0, [sp, #36]	; 0x24
   2ed90:	cmp	r0, #0
   2ed94:	bne	2ed9c <flatcc_json_parser_union_vector@@Base+0x32c>
   2ed98:	b	2edd8 <flatcc_json_parser_union_vector@@Base+0x368>
   2ed9c:	ldr	r0, [fp, #-16]
   2eda0:	ldr	r0, [r0]
   2eda4:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   2eda8:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   2edac:	str	r0, [sp, #32]
   2edb0:	movw	r1, #0
   2edb4:	cmp	r0, r1
   2edb8:	bne	2edc0 <flatcc_json_parser_union_vector@@Base+0x350>
   2edbc:	b	2edd8 <flatcc_json_parser_union_vector@@Base+0x368>
   2edc0:	ldr	r0, [sp, #36]	; 0x24
   2edc4:	ldr	r1, [sp, #32]
   2edc8:	str	r0, [r1]
   2edcc:	ldr	r0, [fp, #-20]	; 0xffffffec
   2edd0:	str	r0, [fp, #-12]
   2edd4:	b	2edf0 <flatcc_json_parser_union_vector@@Base+0x380>
   2edd8:	ldr	r0, [fp, #-16]
   2eddc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ede0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ede4:	movw	r3, #33	; 0x21
   2ede8:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2edec:	str	r0, [fp, #-12]
   2edf0:	ldr	r0, [fp, #-12]
   2edf4:	sub	sp, fp, #8
   2edf8:	pop	{r4, sl, fp, pc}

0002edfc <flatcc_json_parser_union_type_vector@@Base>:
   2edfc:	push	{r4, r5, r6, sl, fp, lr}
   2ee00:	add	fp, sp, #16
   2ee04:	sub	sp, sp, #128	; 0x80
   2ee08:	ldr	ip, [fp, #24]
   2ee0c:	ldr	lr, [fp, #20]
   2ee10:	ldr	r4, [fp, #16]
   2ee14:	ldr	r5, [fp, #12]
   2ee18:	ldr	r6, [fp, #8]
   2ee1c:	str	r0, [fp, #-24]	; 0xffffffe8
   2ee20:	str	r1, [fp, #-28]	; 0xffffffe4
   2ee24:	str	r2, [fp, #-32]	; 0xffffffe0
   2ee28:	str	r3, [fp, #-36]	; 0xffffffdc
   2ee2c:	strh	r6, [fp, #-38]	; 0xffffffda
   2ee30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ee34:	ldr	r0, [r0]
   2ee38:	ldr	r1, [fp, #12]
   2ee3c:	str	ip, [sp, #44]	; 0x2c
   2ee40:	str	lr, [sp, #40]	; 0x28
   2ee44:	str	r4, [sp, #36]	; 0x24
   2ee48:	str	r5, [sp, #32]
   2ee4c:	bl	23f28 <flatcc_builder_get_user_frame_ptr@@Base>
   2ee50:	str	r0, [fp, #-44]	; 0xffffffd4
   2ee54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2ee58:	add	r0, r0, #8
   2ee5c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2ee60:	movw	r2, #24
   2ee64:	mul	r1, r1, r2
   2ee68:	add	r0, r0, r1
   2ee6c:	str	r0, [fp, #-48]	; 0xffffffd0
   2ee70:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2ee74:	ldrsb	r0, [r0, #12]
   2ee78:	cmp	r0, #0
   2ee7c:	beq	2ee9c <flatcc_json_parser_union_type_vector@@Base+0xa0>
   2ee80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ee84:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2ee88:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2ee8c:	movw	r3, #28
   2ee90:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2ee94:	str	r0, [fp, #-20]	; 0xffffffec
   2ee98:	b	2f270 <flatcc_json_parser_union_type_vector@@Base+0x474>
   2ee9c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2eea0:	movw	r1, #1
   2eea4:	strb	r1, [r0, #12]
   2eea8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eeac:	ldr	r0, [r0]
   2eeb0:	movw	r1, #1
   2eeb4:	movw	r2, #1
   2eeb8:	uxth	r2, r2
   2eebc:	mvn	r3, #0
   2eec0:	bl	25bf4 <flatcc_builder_start_vector@@Base>
   2eec4:	cmp	r0, #0
   2eec8:	beq	2eed0 <flatcc_json_parser_union_type_vector@@Base+0xd4>
   2eecc:	b	2f258 <flatcc_json_parser_union_type_vector@@Base+0x45c>
   2eed0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eed4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2eed8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2eedc:	sub	r3, fp, #64	; 0x40
   2eee0:	bl	2f288 <flatcc_json_parser_union_type_vector@@Base+0x48c>
   2eee4:	str	r0, [fp, #-28]	; 0xffffffe4
   2eee8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2eeec:	cmp	r0, #0
   2eef0:	beq	2f010 <flatcc_json_parser_union_type_vector@@Base+0x214>
   2eef4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eef8:	ldr	r0, [r0]
   2eefc:	movw	r1, #1
   2ef00:	bl	250f8 <flatcc_builder_extend_vector@@Base>
   2ef04:	str	r0, [sp, #72]	; 0x48
   2ef08:	movw	r1, #0
   2ef0c:	cmp	r0, r1
   2ef10:	bne	2ef18 <flatcc_json_parser_union_type_vector@@Base+0x11c>
   2ef14:	b	2f258 <flatcc_json_parser_union_type_vector@@Base+0x45c>
   2ef18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ef1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2ef20:	str	r1, [fp, #-52]	; 0xffffffcc
   2ef24:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2ef28:	sub	r3, fp, #65	; 0x41
   2ef2c:	bl	2e768 <flatcc_json_parser_union_type@@Base+0x2a4>
   2ef30:	str	r0, [fp, #-28]	; 0xffffffe4
   2ef34:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2ef38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2ef3c:	cmp	r0, r1
   2ef40:	bne	2ef90 <flatcc_json_parser_union_type_vector@@Base+0x194>
   2ef44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ef48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2ef4c:	str	r1, [fp, #-52]	; 0xffffffcc
   2ef50:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2ef54:	ldr	r3, [fp, #16]
   2ef58:	sub	ip, fp, #65	; 0x41
   2ef5c:	str	ip, [sp]
   2ef60:	bl	2e844 <flatcc_json_parser_union_type@@Base+0x380>
   2ef64:	str	r0, [fp, #-28]	; 0xffffffe4
   2ef68:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ef6c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2ef70:	cmp	r0, r1
   2ef74:	beq	2ef88 <flatcc_json_parser_union_type_vector@@Base+0x18c>
   2ef78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2ef7c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2ef80:	cmp	r0, r1
   2ef84:	bne	2ef8c <flatcc_json_parser_union_type_vector@@Base+0x190>
   2ef88:	b	2f258 <flatcc_json_parser_union_type_vector@@Base+0x45c>
   2ef8c:	b	2ef90 <flatcc_json_parser_union_type_vector@@Base+0x194>
   2ef90:	ldr	r0, [fp, #24]
   2ef94:	ldrb	r1, [fp, #-65]	; 0xffffffbf
   2ef98:	str	r0, [sp, #28]
   2ef9c:	mov	r0, r1
   2efa0:	ldr	r1, [sp, #28]
   2efa4:	blx	r1
   2efa8:	cmp	r0, #0
   2efac:	bne	2efe8 <flatcc_json_parser_union_type_vector@@Base+0x1ec>
   2efb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2efb4:	ldr	r0, [r0, #8]
   2efb8:	and	r0, r0, #1
   2efbc:	cmp	r0, #0
   2efc0:	bne	2efe0 <flatcc_json_parser_union_type_vector@@Base+0x1e4>
   2efc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2efc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2efcc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2efd0:	movw	r3, #15
   2efd4:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2efd8:	str	r0, [fp, #-20]	; 0xffffffec
   2efdc:	b	2f270 <flatcc_json_parser_union_type_vector@@Base+0x474>
   2efe0:	movw	r0, #0
   2efe4:	strb	r0, [fp, #-65]	; 0xffffffbf
   2efe8:	ldr	r0, [sp, #72]	; 0x48
   2efec:	ldrb	r1, [fp, #-65]	; 0xffffffbf
   2eff0:	bl	2f36c <flatcc_json_parser_union_type_vector@@Base+0x570>
   2eff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2eff8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2effc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f000:	sub	r3, fp, #64	; 0x40
   2f004:	bl	2d29c <flatcc_json_parser_float@@Base+0x824>
   2f008:	str	r0, [fp, #-28]	; 0xffffffe4
   2f00c:	b	2eee8 <flatcc_json_parser_union_type_vector@@Base+0xec>
   2f010:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f014:	ldr	r0, [r0]
   2f018:	bl	271bc <flatcc_builder_vector_count@@Base>
   2f01c:	str	r0, [sp, #48]	; 0x30
   2f020:	ldr	r0, [sp, #48]	; 0x30
   2f024:	ldr	lr, [fp, #-48]	; 0xffffffd0
   2f028:	str	r0, [lr, #16]
   2f02c:	ldr	r0, [sp, #48]	; 0x30
   2f030:	mov	lr, r0
   2f034:	str	r0, [sp, #56]	; 0x38
   2f038:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f03c:	ldr	r0, [r0]
   2f040:	ldr	r1, [sp, #56]	; 0x38
   2f044:	str	lr, [sp, #24]
   2f048:	bl	23d28 <flatcc_builder_enter_user_frame@@Base>
   2f04c:	str	r0, [sp, #52]	; 0x34
   2f050:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f054:	ldr	r0, [r0]
   2f058:	ldr	r1, [sp, #52]	; 0x34
   2f05c:	bl	23f28 <flatcc_builder_get_user_frame_ptr@@Base>
   2f060:	str	r0, [sp, #60]	; 0x3c
   2f064:	ldr	r0, [sp, #60]	; 0x3c
   2f068:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f06c:	ldr	r1, [r1]
   2f070:	str	r0, [sp, #20]
   2f074:	mov	r0, r1
   2f078:	bl	271d8 <flatcc_builder_vector_edit@@Base>
   2f07c:	ldr	r2, [sp, #56]	; 0x38
   2f080:	ldr	r1, [sp, #20]
   2f084:	str	r0, [sp, #16]
   2f088:	mov	r0, r1
   2f08c:	ldr	r1, [sp, #16]
   2f090:	bl	12a78 <memcpy@plt>
   2f094:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f098:	ldr	r0, [r0]
   2f09c:	bl	270e8 <flatcc_builder_end_vector@@Base>
   2f0a0:	str	r0, [sp, #68]	; 0x44
   2f0a4:	cmp	r0, #0
   2f0a8:	bne	2f0b0 <flatcc_json_parser_union_type_vector@@Base+0x2b4>
   2f0ac:	b	2f258 <flatcc_json_parser_union_type_vector@@Base+0x45c>
   2f0b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f0b4:	ldr	r0, [r0]
   2f0b8:	ldrh	r1, [fp, #-38]	; 0xffffffda
   2f0bc:	sub	r1, r1, #1
   2f0c0:	bl	277f0 <flatcc_builder_table_add_offset@@Base>
   2f0c4:	str	r0, [sp, #64]	; 0x40
   2f0c8:	movw	r1, #0
   2f0cc:	cmp	r0, r1
   2f0d0:	bne	2f0d8 <flatcc_json_parser_union_type_vector@@Base+0x2dc>
   2f0d4:	b	2f258 <flatcc_json_parser_union_type_vector@@Base+0x45c>
   2f0d8:	ldr	r0, [sp, #68]	; 0x44
   2f0dc:	ldr	r1, [sp, #64]	; 0x40
   2f0e0:	str	r0, [r1]
   2f0e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f0e8:	ldr	r0, [r0]
   2f0ec:	ldr	r1, [fp, #12]
   2f0f0:	bl	23f28 <flatcc_builder_get_user_frame_ptr@@Base>
   2f0f4:	str	r0, [fp, #-44]	; 0xffffffd4
   2f0f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2f0fc:	add	r0, r0, #8
   2f100:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2f104:	movw	lr, #24
   2f108:	mul	r1, r1, lr
   2f10c:	add	r0, r0, r1
   2f110:	str	r0, [fp, #-48]	; 0xffffffd0
   2f114:	ldr	r0, [sp, #52]	; 0x34
   2f118:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2f11c:	str	r0, [r1, #20]
   2f120:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f124:	ldr	r0, [r0]
   2f128:	movw	r1, #0
   2f12c:	cmp	r0, r1
   2f130:	bne	2f150 <flatcc_json_parser_union_type_vector@@Base+0x354>
   2f134:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2f138:	ldr	r1, [r0, #4]
   2f13c:	add	r1, r1, #1
   2f140:	str	r1, [r0, #4]
   2f144:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2f148:	str	r0, [fp, #-20]	; 0xffffffec
   2f14c:	b	2f270 <flatcc_json_parser_union_type_vector@@Base+0x474>
   2f150:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2f154:	ldr	r0, [r0, #4]
   2f158:	cmp	r0, #0
   2f15c:	beq	2f164 <flatcc_json_parser_union_type_vector@@Base+0x368>
   2f160:	b	2f184 <flatcc_json_parser_union_type_vector@@Base+0x388>
   2f164:	ldr	r0, [pc, #272]	; 2f27c <flatcc_json_parser_union_type_vector@@Base+0x480>
   2f168:	add	r0, pc, r0
   2f16c:	ldr	r1, [pc, #268]	; 2f280 <flatcc_json_parser_union_type_vector@@Base+0x484>
   2f170:	add	r1, pc, r1
   2f174:	ldr	r2, [pc, #264]	; 2f284 <flatcc_json_parser_union_type_vector@@Base+0x488>
   2f178:	add	r3, pc, r2
   2f17c:	movw	r2, #1122	; 0x462
   2f180:	bl	12b80 <__assert_fail@plt>
   2f184:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2f188:	ldr	r1, [r0, #4]
   2f18c:	mvn	r2, #0
   2f190:	add	r1, r1, r2
   2f194:	str	r1, [r0, #4]
   2f198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f19c:	ldr	r0, [r0, #16]
   2f1a0:	str	r0, [fp, #-56]	; 0xffffffc8
   2f1a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f1a8:	ldr	r0, [r0, #4]
   2f1ac:	str	r0, [fp, #-60]	; 0xffffffc4
   2f1b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f1b4:	ldr	r0, [r0, #8]
   2f1b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f1bc:	str	r0, [r1, #16]
   2f1c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f1c4:	ldr	r0, [r0, #4]
   2f1c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f1cc:	str	r0, [r1, #4]
   2f1d0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f1d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f1d8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2f1dc:	ldr	r2, [r2]
   2f1e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f1e4:	ldr	ip, [sp, #52]	; 0x34
   2f1e8:	ldr	lr, [sp, #48]	; 0x30
   2f1ec:	ldrh	r4, [fp, #-38]	; 0xffffffda
   2f1f0:	ldr	r5, [fp, #20]
   2f1f4:	str	r0, [sp, #12]
   2f1f8:	mov	r0, r1
   2f1fc:	mov	r1, r2
   2f200:	mov	r2, r3
   2f204:	mov	r3, ip
   2f208:	str	lr, [sp]
   2f20c:	uxth	ip, r4
   2f210:	str	ip, [sp, #4]
   2f214:	str	r5, [sp, #8]
   2f218:	bl	2ebc8 <flatcc_json_parser_union_vector@@Base+0x158>
   2f21c:	ldr	r1, [sp, #12]
   2f220:	cmp	r1, r0
   2f224:	bne	2f234 <flatcc_json_parser_union_type_vector@@Base+0x438>
   2f228:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f22c:	str	r0, [fp, #-20]	; 0xffffffec
   2f230:	b	2f270 <flatcc_json_parser_union_type_vector@@Base+0x474>
   2f234:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2f238:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f23c:	str	r0, [r1, #16]
   2f240:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2f244:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f248:	str	r0, [r1, #4]
   2f24c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2f250:	str	r0, [fp, #-20]	; 0xffffffec
   2f254:	b	2f270 <flatcc_json_parser_union_type_vector@@Base+0x474>
   2f258:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f25c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2f260:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f264:	movw	r3, #33	; 0x21
   2f268:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2f26c:	str	r0, [fp, #-20]	; 0xffffffec
   2f270:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f274:	sub	sp, fp, #16
   2f278:	pop	{r4, r5, r6, sl, fp, pc}
   2f27c:	andeq	r3, r0, r6, asr #17
   2f280:	andeq	r3, r0, sp, asr #17
   2f284:	strdeq	r3, [r0], -r2
   2f288:	push	{fp, lr}
   2f28c:	mov	fp, sp
   2f290:	sub	sp, sp, #24
   2f294:	str	r0, [fp, #-8]
   2f298:	str	r1, [sp, #12]
   2f29c:	str	r2, [sp, #8]
   2f2a0:	str	r3, [sp, #4]
   2f2a4:	ldr	r0, [sp, #12]
   2f2a8:	ldr	r1, [sp, #8]
   2f2ac:	cmp	r0, r1
   2f2b0:	beq	2f2c4 <flatcc_json_parser_union_type_vector@@Base+0x4c8>
   2f2b4:	ldr	r0, [sp, #12]
   2f2b8:	ldrb	r0, [r0]
   2f2bc:	cmp	r0, #91	; 0x5b
   2f2c0:	beq	2f2ec <flatcc_json_parser_union_type_vector@@Base+0x4f0>
   2f2c4:	ldr	r0, [sp, #4]
   2f2c8:	movw	r1, #0
   2f2cc:	str	r1, [r0]
   2f2d0:	ldr	r0, [fp, #-8]
   2f2d4:	ldr	r1, [sp, #12]
   2f2d8:	ldr	r2, [sp, #8]
   2f2dc:	movw	r3, #22
   2f2e0:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   2f2e4:	str	r0, [fp, #-4]
   2f2e8:	b	2f360 <flatcc_json_parser_union_type_vector@@Base+0x564>
   2f2ec:	ldr	r0, [fp, #-8]
   2f2f0:	ldr	r1, [sp, #12]
   2f2f4:	add	r1, r1, #1
   2f2f8:	ldr	r2, [sp, #8]
   2f2fc:	bl	2bc1c <flatcc_json_parser_skip_constant@@Base+0x104>
   2f300:	str	r0, [sp, #12]
   2f304:	ldr	r0, [sp, #12]
   2f308:	ldr	r1, [sp, #8]
   2f30c:	cmp	r0, r1
   2f310:	beq	2f34c <flatcc_json_parser_union_type_vector@@Base+0x550>
   2f314:	ldr	r0, [sp, #12]
   2f318:	ldrb	r0, [r0]
   2f31c:	cmp	r0, #93	; 0x5d
   2f320:	bne	2f34c <flatcc_json_parser_union_type_vector@@Base+0x550>
   2f324:	ldr	r0, [sp, #4]
   2f328:	movw	r1, #0
   2f32c:	str	r1, [r0]
   2f330:	ldr	r0, [fp, #-8]
   2f334:	ldr	r1, [sp, #12]
   2f338:	add	r1, r1, #1
   2f33c:	ldr	r2, [sp, #8]
   2f340:	bl	2bc1c <flatcc_json_parser_skip_constant@@Base+0x104>
   2f344:	str	r0, [fp, #-4]
   2f348:	b	2f360 <flatcc_json_parser_union_type_vector@@Base+0x564>
   2f34c:	ldr	r0, [sp, #4]
   2f350:	movw	r1, #1
   2f354:	str	r1, [r0]
   2f358:	ldr	r0, [sp, #12]
   2f35c:	str	r0, [fp, #-4]
   2f360:	ldr	r0, [fp, #-4]
   2f364:	mov	sp, fp
   2f368:	pop	{fp, pc}
   2f36c:	push	{fp, lr}
   2f370:	mov	fp, sp
   2f374:	sub	sp, sp, #8
   2f378:	str	r0, [sp, #4]
   2f37c:	strb	r1, [sp, #3]
   2f380:	ldrb	r0, [sp, #3]
   2f384:	bl	3090c <flatcc_json_parser_struct_as_root@@Base+0x1370>
   2f388:	ldr	r1, [sp, #4]
   2f38c:	strb	r0, [r1]
   2f390:	mov	sp, fp
   2f394:	pop	{fp, pc}

0002f398 <flatcc_json_parser_table_as_root@@Base>:
   2f398:	push	{r4, sl, fp, lr}
   2f39c:	add	fp, sp, #8
   2f3a0:	sub	sp, sp, #104	; 0x68
   2f3a4:	ldr	ip, [fp, #16]
   2f3a8:	ldr	lr, [fp, #12]
   2f3ac:	ldr	r4, [fp, #8]
   2f3b0:	str	r0, [fp, #-16]
   2f3b4:	str	r1, [fp, #-20]	; 0xffffffec
   2f3b8:	str	r2, [fp, #-24]	; 0xffffffe8
   2f3bc:	str	r3, [fp, #-28]	; 0xffffffe4
   2f3c0:	ldr	r0, [fp, #8]
   2f3c4:	and	r0, r0, #4
   2f3c8:	cmp	r0, #0
   2f3cc:	movw	r0, #0
   2f3d0:	movne	r0, #1
   2f3d4:	tst	r0, #1
   2f3d8:	movw	r0, #2
   2f3dc:	moveq	r0, #0
   2f3e0:	str	r0, [sp, #32]
   2f3e4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f3e8:	movw	r1, #0
   2f3ec:	cmp	r0, r1
   2f3f0:	str	r4, [sp, #28]
   2f3f4:	str	lr, [sp, #24]
   2f3f8:	str	ip, [sp, #20]
   2f3fc:	beq	2f40c <flatcc_json_parser_table_as_root@@Base+0x74>
   2f400:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f404:	str	r0, [sp, #16]
   2f408:	b	2f418 <flatcc_json_parser_table_as_root@@Base+0x80>
   2f40c:	add	r0, sp, #40	; 0x28
   2f410:	str	r0, [sp, #16]
   2f414:	b	2f418 <flatcc_json_parser_table_as_root@@Base+0x80>
   2f418:	ldr	r0, [sp, #16]
   2f41c:	str	r0, [fp, #-20]	; 0xffffffec
   2f420:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f424:	ldr	r1, [fp, #-16]
   2f428:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f42c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f430:	ldr	ip, [fp, #-28]	; 0xffffffe4
   2f434:	add	r3, r3, ip
   2f438:	ldr	ip, [fp, #8]
   2f43c:	str	ip, [sp]
   2f440:	bl	2f508 <flatcc_json_parser_table_as_root@@Base+0x170>
   2f444:	ldr	r0, [fp, #-16]
   2f448:	ldr	r1, [fp, #12]
   2f44c:	ldr	r3, [sp, #32]
   2f450:	movw	r2, #0
   2f454:	uxth	r2, r2
   2f458:	bl	24934 <flatcc_builder_start_buffer@@Base>
   2f45c:	cmp	r0, #0
   2f460:	beq	2f470 <flatcc_json_parser_table_as_root@@Base+0xd8>
   2f464:	mvn	r0, #0
   2f468:	str	r0, [fp, #-12]
   2f46c:	b	2f4fc <flatcc_json_parser_table_as_root@@Base+0x164>
   2f470:	ldr	r0, [fp, #16]
   2f474:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f478:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f47c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f480:	ldr	ip, [fp, #-28]	; 0xffffffe4
   2f484:	add	r3, r3, ip
   2f488:	str	r0, [sp, #12]
   2f48c:	mov	r0, r1
   2f490:	mov	r1, r2
   2f494:	mov	r2, r3
   2f498:	add	r3, sp, #36	; 0x24
   2f49c:	ldr	ip, [sp, #12]
   2f4a0:	blx	ip
   2f4a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f4a8:	ldr	r1, [r1, #24]
   2f4ac:	cmp	r1, #0
   2f4b0:	str	r0, [sp, #8]
   2f4b4:	beq	2f4c8 <flatcc_json_parser_table_as_root@@Base+0x130>
   2f4b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f4bc:	ldr	r0, [r0, #24]
   2f4c0:	str	r0, [fp, #-12]
   2f4c4:	b	2f4fc <flatcc_json_parser_table_as_root@@Base+0x164>
   2f4c8:	ldr	r0, [fp, #-16]
   2f4cc:	ldr	r1, [sp, #36]	; 0x24
   2f4d0:	bl	24c78 <flatcc_builder_end_buffer@@Base>
   2f4d4:	cmp	r0, #0
   2f4d8:	bne	2f4e8 <flatcc_json_parser_table_as_root@@Base+0x150>
   2f4dc:	mvn	r0, #0
   2f4e0:	str	r0, [fp, #-12]
   2f4e4:	b	2f4fc <flatcc_json_parser_table_as_root@@Base+0x164>
   2f4e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f4ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f4f0:	str	r0, [r1, #40]	; 0x28
   2f4f4:	movw	r0, #0
   2f4f8:	str	r0, [fp, #-12]
   2f4fc:	ldr	r0, [fp, #-12]
   2f500:	sub	sp, fp, #8
   2f504:	pop	{r4, sl, fp, pc}
   2f508:	push	{fp, lr}
   2f50c:	mov	fp, sp
   2f510:	sub	sp, sp, #24
   2f514:	ldr	ip, [fp, #8]
   2f518:	str	r0, [fp, #-4]
   2f51c:	str	r1, [fp, #-8]
   2f520:	str	r2, [sp, #12]
   2f524:	str	r3, [sp, #8]
   2f528:	ldr	r0, [fp, #-4]
   2f52c:	movw	r1, #0
   2f530:	and	r1, r1, #255	; 0xff
   2f534:	movw	r2, #44	; 0x2c
   2f538:	str	ip, [sp, #4]
   2f53c:	bl	12b2c <memset@plt>
   2f540:	ldr	r0, [fp, #-8]
   2f544:	ldr	r1, [fp, #-4]
   2f548:	str	r0, [r1]
   2f54c:	ldr	r0, [sp, #12]
   2f550:	ldr	r1, [fp, #-4]
   2f554:	str	r0, [r1, #4]
   2f558:	ldr	r0, [fp, #-4]
   2f55c:	movw	r1, #1
   2f560:	str	r1, [r0, #16]
   2f564:	ldr	r0, [fp, #8]
   2f568:	ldr	r1, [fp, #-4]
   2f56c:	str	r0, [r1, #8]
   2f570:	ldr	r0, [sp, #12]
   2f574:	ldr	r1, [fp, #-4]
   2f578:	str	r0, [r1, #28]
   2f57c:	ldr	r0, [sp, #8]
   2f580:	ldr	r1, [fp, #-4]
   2f584:	str	r0, [r1, #32]
   2f588:	ldr	r0, [sp, #12]
   2f58c:	ldr	r1, [fp, #-4]
   2f590:	str	r0, [r1, #36]	; 0x24
   2f594:	mov	sp, fp
   2f598:	pop	{fp, pc}

0002f59c <flatcc_json_parser_struct_as_root@@Base>:
   2f59c:	push	{r4, sl, fp, lr}
   2f5a0:	add	fp, sp, #8
   2f5a4:	sub	sp, sp, #104	; 0x68
   2f5a8:	ldr	ip, [fp, #16]
   2f5ac:	ldr	lr, [fp, #12]
   2f5b0:	ldr	r4, [fp, #8]
   2f5b4:	str	r0, [fp, #-16]
   2f5b8:	str	r1, [fp, #-20]	; 0xffffffec
   2f5bc:	str	r2, [fp, #-24]	; 0xffffffe8
   2f5c0:	str	r3, [fp, #-28]	; 0xffffffe4
   2f5c4:	ldr	r0, [fp, #8]
   2f5c8:	and	r0, r0, #4
   2f5cc:	cmp	r0, #0
   2f5d0:	movw	r0, #0
   2f5d4:	movne	r0, #1
   2f5d8:	tst	r0, #1
   2f5dc:	movw	r0, #2
   2f5e0:	moveq	r0, #0
   2f5e4:	str	r0, [sp, #32]
   2f5e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f5ec:	movw	r1, #0
   2f5f0:	cmp	r0, r1
   2f5f4:	str	r4, [sp, #28]
   2f5f8:	str	lr, [sp, #24]
   2f5fc:	str	ip, [sp, #20]
   2f600:	beq	2f610 <flatcc_json_parser_struct_as_root@@Base+0x74>
   2f604:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f608:	str	r0, [sp, #16]
   2f60c:	b	2f61c <flatcc_json_parser_struct_as_root@@Base+0x80>
   2f610:	add	r0, sp, #40	; 0x28
   2f614:	str	r0, [sp, #16]
   2f618:	b	2f61c <flatcc_json_parser_struct_as_root@@Base+0x80>
   2f61c:	ldr	r0, [sp, #16]
   2f620:	str	r0, [fp, #-20]	; 0xffffffec
   2f624:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f628:	ldr	r1, [fp, #-16]
   2f62c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f630:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f634:	ldr	ip, [fp, #-28]	; 0xffffffe4
   2f638:	add	r3, r3, ip
   2f63c:	ldr	ip, [fp, #8]
   2f640:	str	ip, [sp]
   2f644:	bl	2f508 <flatcc_json_parser_table_as_root@@Base+0x170>
   2f648:	ldr	r0, [fp, #-16]
   2f64c:	ldr	r1, [fp, #12]
   2f650:	ldr	r3, [sp, #32]
   2f654:	movw	r2, #0
   2f658:	uxth	r2, r2
   2f65c:	bl	24934 <flatcc_builder_start_buffer@@Base>
   2f660:	cmp	r0, #0
   2f664:	beq	2f674 <flatcc_json_parser_struct_as_root@@Base+0xd8>
   2f668:	mvn	r0, #0
   2f66c:	str	r0, [fp, #-12]
   2f670:	b	2f700 <flatcc_json_parser_struct_as_root@@Base+0x164>
   2f674:	ldr	r0, [fp, #16]
   2f678:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f67c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f680:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f684:	ldr	ip, [fp, #-28]	; 0xffffffe4
   2f688:	add	r3, r3, ip
   2f68c:	str	r0, [sp, #12]
   2f690:	mov	r0, r1
   2f694:	mov	r1, r2
   2f698:	mov	r2, r3
   2f69c:	add	r3, sp, #36	; 0x24
   2f6a0:	ldr	ip, [sp, #12]
   2f6a4:	blx	ip
   2f6a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f6ac:	ldr	r1, [r1, #24]
   2f6b0:	cmp	r1, #0
   2f6b4:	str	r0, [sp, #8]
   2f6b8:	beq	2f6cc <flatcc_json_parser_struct_as_root@@Base+0x130>
   2f6bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   2f6c0:	ldr	r0, [r0, #24]
   2f6c4:	str	r0, [fp, #-12]
   2f6c8:	b	2f700 <flatcc_json_parser_struct_as_root@@Base+0x164>
   2f6cc:	ldr	r0, [fp, #-16]
   2f6d0:	ldr	r1, [sp, #36]	; 0x24
   2f6d4:	bl	24c78 <flatcc_builder_end_buffer@@Base>
   2f6d8:	cmp	r0, #0
   2f6dc:	bne	2f6ec <flatcc_json_parser_struct_as_root@@Base+0x150>
   2f6e0:	mvn	r0, #0
   2f6e4:	str	r0, [fp, #-12]
   2f6e8:	b	2f700 <flatcc_json_parser_struct_as_root@@Base+0x164>
   2f6ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f6f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2f6f4:	str	r0, [r1, #40]	; 0x28
   2f6f8:	movw	r0, #0
   2f6fc:	str	r0, [fp, #-12]
   2f700:	ldr	r0, [fp, #-12]
   2f704:	sub	sp, fp, #8
   2f708:	pop	{r4, sl, fp, pc}
   2f70c:	sub	sp, sp, #16
   2f710:	str	r0, [sp, #8]
   2f714:	str	r1, [sp, #12]
   2f718:	ldr	r0, [sp, #8]
   2f71c:	ldr	r1, [sp, #12]
   2f720:	str	r1, [sp, #4]
   2f724:	str	r0, [sp]
   2f728:	vldr	d0, [sp]
   2f72c:	add	sp, sp, #16
   2f730:	bx	lr
   2f734:	nop	{0}
   2f738:	push	{r4, r5, r6, r7, fp, lr}
   2f73c:	add	fp, sp, #16
   2f740:	sub	sp, sp, #152	; 0x98
   2f744:	vldr	d16, [pc, #892]	; 2fac8 <flatcc_json_parser_struct_as_root@@Base+0x52c>
   2f748:	str	r0, [fp, #-24]	; 0xffffffe8
   2f74c:	str	r1, [fp, #-28]	; 0xffffffe4
   2f750:	str	r2, [fp, #-32]	; 0xffffffe0
   2f754:	mov	r0, #0
   2f758:	str	r0, [fp, #-48]	; 0xffffffd0
   2f75c:	str	r0, [fp, #-52]	; 0xffffffcc
   2f760:	str	r0, [fp, #-60]	; 0xffffffc4
   2f764:	str	r0, [fp, #-64]	; 0xffffffc0
   2f768:	movw	r0, #0
   2f76c:	str	r0, [fp, #-68]	; 0xffffffbc
   2f770:	str	r0, [fp, #-72]	; 0xffffffb8
   2f774:	str	r0, [fp, #-76]	; 0xffffffb4
   2f778:	str	r0, [fp, #-80]	; 0xffffffb0
   2f77c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f780:	vstr	d16, [r0]
   2f784:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f788:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2f78c:	add	r0, r0, r1
   2f790:	add	r0, r0, #1
   2f794:	str	r0, [fp, #-44]	; 0xffffffd4
   2f798:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2f79c:	cmp	r0, #1000	; 0x3e8
   2f7a0:	ble	2f7b4 <flatcc_json_parser_struct_as_root@@Base+0x218>
   2f7a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f7a8:	add	r0, r0, #1000	; 0x3e8
   2f7ac:	add	r0, r0, #1
   2f7b0:	str	r0, [fp, #-44]	; 0xffffffd4
   2f7b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f7b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2f7bc:	cmp	r0, r1
   2f7c0:	bne	2f7d0 <flatcc_json_parser_struct_as_root@@Base+0x234>
   2f7c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f7c8:	str	r0, [fp, #-20]	; 0xffffffec
   2f7cc:	b	30094 <flatcc_json_parser_struct_as_root@@Base+0xaf8>
   2f7d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f7d4:	str	r0, [fp, #-36]	; 0xffffffdc
   2f7d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f7dc:	ldrb	r0, [r0]
   2f7e0:	cmp	r0, #45	; 0x2d
   2f7e4:	bne	2f81c <flatcc_json_parser_struct_as_root@@Base+0x280>
   2f7e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f7ec:	add	r0, r0, #1
   2f7f0:	str	r0, [fp, #-24]	; 0xffffffe8
   2f7f4:	movw	r0, #1
   2f7f8:	str	r0, [fp, #-48]	; 0xffffffd0
   2f7fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f800:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2f804:	cmp	r0, r1
   2f808:	bne	2f818 <flatcc_json_parser_struct_as_root@@Base+0x27c>
   2f80c:	movw	r0, #0
   2f810:	str	r0, [fp, #-20]	; 0xffffffec
   2f814:	b	30094 <flatcc_json_parser_struct_as_root@@Base+0xaf8>
   2f818:	b	2f81c <flatcc_json_parser_struct_as_root@@Base+0x280>
   2f81c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f820:	ldrb	r0, [r0]
   2f824:	cmp	r0, #48	; 0x30
   2f828:	bne	2f8f0 <flatcc_json_parser_struct_as_root@@Base+0x354>
   2f82c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f830:	add	r0, r0, #1
   2f834:	str	r0, [fp, #-24]	; 0xffffffe8
   2f838:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f83c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2f840:	cmp	r0, r1
   2f844:	beq	2f89c <flatcc_json_parser_struct_as_root@@Base+0x300>
   2f848:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f84c:	ldrb	r0, [r0]
   2f850:	orr	r0, r0, #32
   2f854:	cmp	r0, #120	; 0x78
   2f858:	bne	2f89c <flatcc_json_parser_struct_as_root@@Base+0x300>
   2f85c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f860:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2f864:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2f868:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f86c:	bl	300a0 <flatcc_json_parser_struct_as_root@@Base+0xb04>
   2f870:	str	r0, [fp, #-40]	; 0xffffffd8
   2f874:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2f878:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2f87c:	cmp	r0, r1
   2f880:	bne	2f890 <flatcc_json_parser_struct_as_root@@Base+0x2f4>
   2f884:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2f888:	str	r0, [fp, #-20]	; 0xffffffec
   2f88c:	b	30094 <flatcc_json_parser_struct_as_root@@Base+0xaf8>
   2f890:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2f894:	str	r0, [fp, #-20]	; 0xffffffec
   2f898:	b	30094 <flatcc_json_parser_struct_as_root@@Base+0xaf8>
   2f89c:	b	2f8a0 <flatcc_json_parser_struct_as_root@@Base+0x304>
   2f8a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f8a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2f8a8:	cmp	r0, r1
   2f8ac:	movw	r0, #0
   2f8b0:	str	r0, [sp, #84]	; 0x54
   2f8b4:	beq	2f8d0 <flatcc_json_parser_struct_as_root@@Base+0x334>
   2f8b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f8bc:	ldrb	r0, [r0]
   2f8c0:	cmp	r0, #48	; 0x30
   2f8c4:	movw	r0, #0
   2f8c8:	moveq	r0, #1
   2f8cc:	str	r0, [sp, #84]	; 0x54
   2f8d0:	ldr	r0, [sp, #84]	; 0x54
   2f8d4:	tst	r0, #1
   2f8d8:	beq	2f8ec <flatcc_json_parser_struct_as_root@@Base+0x350>
   2f8dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f8e0:	add	r0, r0, #1
   2f8e4:	str	r0, [fp, #-24]	; 0xffffffe8
   2f8e8:	b	2f8a0 <flatcc_json_parser_struct_as_root@@Base+0x304>
   2f8ec:	b	2f95c <flatcc_json_parser_struct_as_root@@Base+0x3c0>
   2f8f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f8f4:	ldrb	r0, [r0]
   2f8f8:	cmp	r0, #49	; 0x31
   2f8fc:	blt	2f910 <flatcc_json_parser_struct_as_root@@Base+0x374>
   2f900:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f904:	ldrb	r0, [r0]
   2f908:	cmp	r0, #57	; 0x39
   2f90c:	ble	2f93c <flatcc_json_parser_struct_as_root@@Base+0x3a0>
   2f910:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2f914:	cmp	r0, #0
   2f918:	beq	2f928 <flatcc_json_parser_struct_as_root@@Base+0x38c>
   2f91c:	movw	r0, #0
   2f920:	str	r0, [sp, #80]	; 0x50
   2f924:	b	2f930 <flatcc_json_parser_struct_as_root@@Base+0x394>
   2f928:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2f92c:	str	r0, [sp, #80]	; 0x50
   2f930:	ldr	r0, [sp, #80]	; 0x50
   2f934:	str	r0, [fp, #-20]	; 0xffffffec
   2f938:	b	30094 <flatcc_json_parser_struct_as_root@@Base+0xaf8>
   2f93c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f940:	add	r1, r0, #1
   2f944:	str	r1, [fp, #-24]	; 0xffffffe8
   2f948:	ldrb	r0, [r0]
   2f94c:	sub	r0, r0, #48	; 0x30
   2f950:	asr	r1, r0, #31
   2f954:	str	r0, [fp, #-64]	; 0xffffffc0
   2f958:	str	r1, [fp, #-60]	; 0xffffffc4
   2f95c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f960:	str	r0, [fp, #-40]	; 0xffffffd8
   2f964:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f968:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2f96c:	cmp	r0, r1
   2f970:	movw	r0, #0
   2f974:	str	r0, [sp, #76]	; 0x4c
   2f978:	beq	2f9ac <flatcc_json_parser_struct_as_root@@Base+0x410>
   2f97c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f980:	ldrb	r0, [r0]
   2f984:	cmp	r0, #48	; 0x30
   2f988:	movw	r0, #0
   2f98c:	str	r0, [sp, #76]	; 0x4c
   2f990:	blt	2f9ac <flatcc_json_parser_struct_as_root@@Base+0x410>
   2f994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f998:	ldrb	r0, [r0]
   2f99c:	cmp	r0, #57	; 0x39
   2f9a0:	movw	r0, #0
   2f9a4:	movle	r0, #1
   2f9a8:	str	r0, [sp, #76]	; 0x4c
   2f9ac:	ldr	r0, [sp, #76]	; 0x4c
   2f9b0:	tst	r0, #1
   2f9b4:	beq	2fa60 <flatcc_json_parser_struct_as_root@@Base+0x4c4>
   2f9b8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f9bc:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2f9c0:	movw	r2, #39321	; 0x9999
   2f9c4:	movt	r2, #39321	; 0x9999
   2f9c8:	subs	r0, r0, r2
   2f9cc:	movw	r2, #39321	; 0x9999
   2f9d0:	movt	r2, #6553	; 0x1999
   2f9d4:	sbcs	r1, r1, r2
   2f9d8:	str	r0, [sp, #72]	; 0x48
   2f9dc:	str	r1, [sp, #68]	; 0x44
   2f9e0:	bcc	2fa24 <flatcc_json_parser_struct_as_root@@Base+0x488>
   2f9e4:	b	2f9e8 <flatcc_json_parser_struct_as_root@@Base+0x44c>
   2f9e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2f9ec:	ldrb	r0, [r0]
   2f9f0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2f9f4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2f9f8:	adds	r3, r1, #1
   2f9fc:	adc	ip, r2, #0
   2fa00:	cmp	r0, #52	; 0x34
   2fa04:	movgt	r1, r3
   2fa08:	cmp	r0, #52	; 0x34
   2fa0c:	movgt	r2, ip
   2fa10:	str	r1, [fp, #-64]	; 0xffffffc0
   2fa14:	str	r2, [fp, #-60]	; 0xffffffc4
   2fa18:	movw	r0, #1
   2fa1c:	str	r0, [fp, #-80]	; 0xffffffb0
   2fa20:	b	2fa60 <flatcc_json_parser_struct_as_root@@Base+0x4c4>
   2fa24:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2fa28:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2fa2c:	add	r1, r1, r1, lsl #2
   2fa30:	lsl	r1, r1, #1
   2fa34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2fa38:	add	r3, r2, #1
   2fa3c:	str	r3, [fp, #-24]	; 0xffffffe8
   2fa40:	ldrb	r2, [r2]
   2fa44:	mov	r3, #10
   2fa48:	umlal	r2, r1, r0, r3
   2fa4c:	subs	r0, r2, #48	; 0x30
   2fa50:	sbc	r1, r1, #0
   2fa54:	str	r0, [fp, #-64]	; 0xffffffc0
   2fa58:	str	r1, [fp, #-60]	; 0xffffffc4
   2fa5c:	b	2f964 <flatcc_json_parser_struct_as_root@@Base+0x3c8>
   2fa60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fa64:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2fa68:	sub	r0, r0, r1
   2fa6c:	str	r0, [fp, #-76]	; 0xffffffb4
   2fa70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fa74:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2fa78:	cmp	r0, r1
   2fa7c:	movw	r0, #0
   2fa80:	str	r0, [sp, #64]	; 0x40
   2fa84:	beq	2faa0 <flatcc_json_parser_struct_as_root@@Base+0x504>
   2fa88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fa8c:	ldrb	r0, [r0]
   2fa90:	cmp	r0, #48	; 0x30
   2fa94:	movw	r0, #0
   2fa98:	moveq	r0, #1
   2fa9c:	str	r0, [sp, #64]	; 0x40
   2faa0:	ldr	r0, [sp, #64]	; 0x40
   2faa4:	tst	r0, #1
   2faa8:	beq	2fad0 <flatcc_json_parser_struct_as_root@@Base+0x534>
   2faac:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2fab0:	add	r0, r0, #1
   2fab4:	str	r0, [fp, #-68]	; 0xffffffbc
   2fab8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fabc:	add	r0, r0, #1
   2fac0:	str	r0, [fp, #-24]	; 0xffffffe8
   2fac4:	b	2fa70 <flatcc_json_parser_struct_as_root@@Base+0x4d4>
	...
   2fad0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fad4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2fad8:	cmp	r0, r1
   2fadc:	beq	2fb94 <flatcc_json_parser_struct_as_root@@Base+0x5f8>
   2fae0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fae4:	ldrb	r0, [r0]
   2fae8:	cmp	r0, #49	; 0x31
   2faec:	blt	2fb94 <flatcc_json_parser_struct_as_root@@Base+0x5f8>
   2faf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2faf4:	ldrb	r0, [r0]
   2faf8:	cmp	r0, #57	; 0x39
   2fafc:	bgt	2fb94 <flatcc_json_parser_struct_as_root@@Base+0x5f8>
   2fb00:	movw	r0, #1
   2fb04:	str	r0, [fp, #-80]	; 0xffffffb0
   2fb08:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2fb0c:	add	r0, r0, #1
   2fb10:	str	r0, [fp, #-68]	; 0xffffffbc
   2fb14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fb18:	add	r0, r0, #1
   2fb1c:	str	r0, [fp, #-24]	; 0xffffffe8
   2fb20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fb24:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2fb28:	cmp	r0, r1
   2fb2c:	movw	r0, #0
   2fb30:	str	r0, [sp, #60]	; 0x3c
   2fb34:	beq	2fb68 <flatcc_json_parser_struct_as_root@@Base+0x5cc>
   2fb38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fb3c:	ldrb	r0, [r0]
   2fb40:	cmp	r0, #48	; 0x30
   2fb44:	movw	r0, #0
   2fb48:	str	r0, [sp, #60]	; 0x3c
   2fb4c:	blt	2fb68 <flatcc_json_parser_struct_as_root@@Base+0x5cc>
   2fb50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fb54:	ldrb	r0, [r0]
   2fb58:	cmp	r0, #57	; 0x39
   2fb5c:	movw	r0, #0
   2fb60:	movle	r0, #1
   2fb64:	str	r0, [sp, #60]	; 0x3c
   2fb68:	ldr	r0, [sp, #60]	; 0x3c
   2fb6c:	tst	r0, #1
   2fb70:	beq	2fb90 <flatcc_json_parser_struct_as_root@@Base+0x5f4>
   2fb74:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2fb78:	add	r0, r0, #1
   2fb7c:	str	r0, [fp, #-68]	; 0xffffffbc
   2fb80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fb84:	add	r0, r0, #1
   2fb88:	str	r0, [fp, #-24]	; 0xffffffe8
   2fb8c:	b	2fb20 <flatcc_json_parser_struct_as_root@@Base+0x584>
   2fb90:	b	2fb94 <flatcc_json_parser_struct_as_root@@Base+0x5f8>
   2fb94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fb98:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2fb9c:	cmp	r0, r1
   2fba0:	beq	2fe30 <flatcc_json_parser_struct_as_root@@Base+0x894>
   2fba4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fba8:	ldrb	r0, [r0]
   2fbac:	cmp	r0, #46	; 0x2e
   2fbb0:	bne	2fe30 <flatcc_json_parser_struct_as_root@@Base+0x894>
   2fbb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fbb8:	add	r0, r0, #1
   2fbbc:	str	r0, [fp, #-24]	; 0xffffffe8
   2fbc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fbc4:	str	r0, [fp, #-40]	; 0xffffffd8
   2fbc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fbcc:	ldrb	r0, [r0]
   2fbd0:	cmp	r0, #48	; 0x30
   2fbd4:	blt	2fbe8 <flatcc_json_parser_struct_as_root@@Base+0x64c>
   2fbd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fbdc:	ldrb	r0, [r0]
   2fbe0:	cmp	r0, #57	; 0x39
   2fbe4:	ble	2fbf4 <flatcc_json_parser_struct_as_root@@Base+0x658>
   2fbe8:	movw	r0, #0
   2fbec:	str	r0, [fp, #-20]	; 0xffffffec
   2fbf0:	b	30094 <flatcc_json_parser_struct_as_root@@Base+0xaf8>
   2fbf4:	b	2fbf8 <flatcc_json_parser_struct_as_root@@Base+0x65c>
   2fbf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fbfc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2fc00:	cmp	r0, r1
   2fc04:	movw	r0, #0
   2fc08:	str	r0, [sp, #56]	; 0x38
   2fc0c:	beq	2fc40 <flatcc_json_parser_struct_as_root@@Base+0x6a4>
   2fc10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fc14:	ldrb	r0, [r0]
   2fc18:	cmp	r0, #48	; 0x30
   2fc1c:	movw	r0, #0
   2fc20:	str	r0, [sp, #56]	; 0x38
   2fc24:	blt	2fc40 <flatcc_json_parser_struct_as_root@@Base+0x6a4>
   2fc28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fc2c:	ldrb	r0, [r0]
   2fc30:	cmp	r0, #57	; 0x39
   2fc34:	movw	r0, #0
   2fc38:	movle	r0, #1
   2fc3c:	str	r0, [sp, #56]	; 0x38
   2fc40:	ldr	r0, [sp, #56]	; 0x38
   2fc44:	tst	r0, #1
   2fc48:	beq	2fd10 <flatcc_json_parser_struct_as_root@@Base+0x774>
   2fc4c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2fc50:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2fc54:	movw	r2, #39321	; 0x9999
   2fc58:	movt	r2, #39321	; 0x9999
   2fc5c:	subs	r0, r0, r2
   2fc60:	movw	r2, #39321	; 0x9999
   2fc64:	movt	r2, #6553	; 0x1999
   2fc68:	sbcs	r1, r1, r2
   2fc6c:	str	r0, [sp, #52]	; 0x34
   2fc70:	str	r1, [sp, #48]	; 0x30
   2fc74:	bcc	2fcc4 <flatcc_json_parser_struct_as_root@@Base+0x728>
   2fc78:	b	2fc7c <flatcc_json_parser_struct_as_root@@Base+0x6e0>
   2fc7c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   2fc80:	cmp	r0, #0
   2fc84:	bne	2fcc0 <flatcc_json_parser_struct_as_root@@Base+0x724>
   2fc88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fc8c:	ldrb	r0, [r0]
   2fc90:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2fc94:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2fc98:	adds	r3, r1, #1
   2fc9c:	adc	ip, r2, #0
   2fca0:	cmp	r0, #52	; 0x34
   2fca4:	movgt	r1, r3
   2fca8:	cmp	r0, #52	; 0x34
   2fcac:	movgt	r2, ip
   2fcb0:	str	r1, [fp, #-64]	; 0xffffffc0
   2fcb4:	str	r2, [fp, #-60]	; 0xffffffc4
   2fcb8:	movw	r0, #1
   2fcbc:	str	r0, [fp, #-80]	; 0xffffffb0
   2fcc0:	b	2fd10 <flatcc_json_parser_struct_as_root@@Base+0x774>
   2fcc4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2fcc8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2fccc:	add	r1, r1, r1, lsl #2
   2fcd0:	lsl	r1, r1, #1
   2fcd4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2fcd8:	add	r3, r2, #1
   2fcdc:	str	r3, [fp, #-24]	; 0xffffffe8
   2fce0:	ldrb	r2, [r2]
   2fce4:	mov	r3, #10
   2fce8:	umlal	r2, r1, r0, r3
   2fcec:	subs	r0, r2, #48	; 0x30
   2fcf0:	sbc	r1, r1, #0
   2fcf4:	str	r0, [fp, #-64]	; 0xffffffc0
   2fcf8:	str	r1, [fp, #-60]	; 0xffffffc4
   2fcfc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2fd00:	mvn	r1, #0
   2fd04:	add	r0, r0, r1
   2fd08:	str	r0, [fp, #-68]	; 0xffffffbc
   2fd0c:	b	2fbf8 <flatcc_json_parser_struct_as_root@@Base+0x65c>
   2fd10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fd14:	ldr	r1, [fp, #-40]	; 0xffffffd8
   2fd18:	sub	r0, r0, r1
   2fd1c:	ldr	r1, [fp, #-76]	; 0xffffffb4
   2fd20:	add	r0, r1, r0
   2fd24:	str	r0, [fp, #-76]	; 0xffffffb4
   2fd28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fd2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2fd30:	cmp	r0, r1
   2fd34:	movw	r0, #0
   2fd38:	str	r0, [sp, #44]	; 0x2c
   2fd3c:	beq	2fd58 <flatcc_json_parser_struct_as_root@@Base+0x7bc>
   2fd40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fd44:	ldrb	r0, [r0]
   2fd48:	cmp	r0, #48	; 0x30
   2fd4c:	movw	r0, #0
   2fd50:	moveq	r0, #1
   2fd54:	str	r0, [sp, #44]	; 0x2c
   2fd58:	ldr	r0, [sp, #44]	; 0x2c
   2fd5c:	tst	r0, #1
   2fd60:	beq	2fd80 <flatcc_json_parser_struct_as_root@@Base+0x7e4>
   2fd64:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2fd68:	add	r0, r0, #1
   2fd6c:	str	r0, [fp, #-68]	; 0xffffffbc
   2fd70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fd74:	add	r0, r0, #1
   2fd78:	str	r0, [fp, #-24]	; 0xffffffe8
   2fd7c:	b	2fd28 <flatcc_json_parser_struct_as_root@@Base+0x78c>
   2fd80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fd84:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2fd88:	cmp	r0, r1
   2fd8c:	beq	2fe2c <flatcc_json_parser_struct_as_root@@Base+0x890>
   2fd90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fd94:	ldrb	r0, [r0]
   2fd98:	cmp	r0, #49	; 0x31
   2fd9c:	blt	2fe2c <flatcc_json_parser_struct_as_root@@Base+0x890>
   2fda0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fda4:	ldrb	r0, [r0]
   2fda8:	cmp	r0, #57	; 0x39
   2fdac:	bgt	2fe2c <flatcc_json_parser_struct_as_root@@Base+0x890>
   2fdb0:	movw	r0, #1
   2fdb4:	str	r0, [fp, #-80]	; 0xffffffb0
   2fdb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fdbc:	add	r0, r0, #1
   2fdc0:	str	r0, [fp, #-24]	; 0xffffffe8
   2fdc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fdc8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2fdcc:	cmp	r0, r1
   2fdd0:	movw	r0, #0
   2fdd4:	str	r0, [sp, #40]	; 0x28
   2fdd8:	beq	2fe0c <flatcc_json_parser_struct_as_root@@Base+0x870>
   2fddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fde0:	ldrb	r0, [r0]
   2fde4:	cmp	r0, #48	; 0x30
   2fde8:	movw	r0, #0
   2fdec:	str	r0, [sp, #40]	; 0x28
   2fdf0:	blt	2fe0c <flatcc_json_parser_struct_as_root@@Base+0x870>
   2fdf4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fdf8:	ldrb	r0, [r0]
   2fdfc:	cmp	r0, #57	; 0x39
   2fe00:	movw	r0, #0
   2fe04:	movle	r0, #1
   2fe08:	str	r0, [sp, #40]	; 0x28
   2fe0c:	ldr	r0, [sp, #40]	; 0x28
   2fe10:	tst	r0, #1
   2fe14:	beq	2fe28 <flatcc_json_parser_struct_as_root@@Base+0x88c>
   2fe18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fe1c:	add	r0, r0, #1
   2fe20:	str	r0, [fp, #-24]	; 0xffffffe8
   2fe24:	b	2fdc4 <flatcc_json_parser_struct_as_root@@Base+0x828>
   2fe28:	b	2fe2c <flatcc_json_parser_struct_as_root@@Base+0x890>
   2fe2c:	b	2fe30 <flatcc_json_parser_struct_as_root@@Base+0x894>
   2fe30:	ldr	r0, [fp, #-76]	; 0xffffffb4
   2fe34:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2fe38:	add	r0, r1, r0
   2fe3c:	str	r0, [fp, #-68]	; 0xffffffbc
   2fe40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fe44:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2fe48:	cmp	r0, r1
   2fe4c:	beq	2fff0 <flatcc_json_parser_struct_as_root@@Base+0xa54>
   2fe50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fe54:	ldrb	r0, [r0]
   2fe58:	orr	r0, r0, #32
   2fe5c:	cmp	r0, #101	; 0x65
   2fe60:	bne	2fff0 <flatcc_json_parser_struct_as_root@@Base+0xa54>
   2fe64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2fe68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2fe6c:	sub	r0, r0, r1
   2fe70:	cmp	r0, #2
   2fe74:	bge	2fe84 <flatcc_json_parser_struct_as_root@@Base+0x8e8>
   2fe78:	movw	r0, #0
   2fe7c:	str	r0, [fp, #-20]	; 0xffffffec
   2fe80:	b	30094 <flatcc_json_parser_struct_as_root@@Base+0xaf8>
   2fe84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fe88:	add	r0, r0, #1
   2fe8c:	str	r0, [fp, #-24]	; 0xffffffe8
   2fe90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fe94:	ldrb	r0, [r0]
   2fe98:	cmp	r0, #43	; 0x2b
   2fe9c:	bne	2fecc <flatcc_json_parser_struct_as_root@@Base+0x930>
   2fea0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fea4:	add	r0, r0, #1
   2fea8:	str	r0, [fp, #-24]	; 0xffffffe8
   2feac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2feb0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2feb4:	cmp	r0, r1
   2feb8:	bne	2fec8 <flatcc_json_parser_struct_as_root@@Base+0x92c>
   2febc:	movw	r0, #0
   2fec0:	str	r0, [fp, #-20]	; 0xffffffec
   2fec4:	b	30094 <flatcc_json_parser_struct_as_root@@Base+0xaf8>
   2fec8:	b	2ff14 <flatcc_json_parser_struct_as_root@@Base+0x978>
   2fecc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fed0:	ldrb	r0, [r0]
   2fed4:	cmp	r0, #45	; 0x2d
   2fed8:	bne	2ff10 <flatcc_json_parser_struct_as_root@@Base+0x974>
   2fedc:	movw	r0, #1
   2fee0:	str	r0, [fp, #-52]	; 0xffffffcc
   2fee4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fee8:	add	r0, r0, #1
   2feec:	str	r0, [fp, #-24]	; 0xffffffe8
   2fef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fef4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2fef8:	cmp	r0, r1
   2fefc:	bne	2ff0c <flatcc_json_parser_struct_as_root@@Base+0x970>
   2ff00:	movw	r0, #0
   2ff04:	str	r0, [fp, #-20]	; 0xffffffec
   2ff08:	b	30094 <flatcc_json_parser_struct_as_root@@Base+0xaf8>
   2ff0c:	b	2ff10 <flatcc_json_parser_struct_as_root@@Base+0x974>
   2ff10:	b	2ff14 <flatcc_json_parser_struct_as_root@@Base+0x978>
   2ff14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ff18:	ldrb	r0, [r0]
   2ff1c:	cmp	r0, #48	; 0x30
   2ff20:	blt	2ff34 <flatcc_json_parser_struct_as_root@@Base+0x998>
   2ff24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ff28:	ldrb	r0, [r0]
   2ff2c:	cmp	r0, #57	; 0x39
   2ff30:	ble	2ff40 <flatcc_json_parser_struct_as_root@@Base+0x9a4>
   2ff34:	movw	r0, #0
   2ff38:	str	r0, [fp, #-20]	; 0xffffffec
   2ff3c:	b	30094 <flatcc_json_parser_struct_as_root@@Base+0xaf8>
   2ff40:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ff44:	add	r1, r0, #1
   2ff48:	str	r1, [fp, #-24]	; 0xffffffe8
   2ff4c:	ldrb	r0, [r0]
   2ff50:	sub	r0, r0, #48	; 0x30
   2ff54:	str	r0, [fp, #-72]	; 0xffffffb8
   2ff58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ff5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2ff60:	cmp	r0, r1
   2ff64:	movw	r0, #0
   2ff68:	str	r0, [sp, #36]	; 0x24
   2ff6c:	beq	2ffa0 <flatcc_json_parser_struct_as_root@@Base+0xa04>
   2ff70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ff74:	ldrb	r0, [r0]
   2ff78:	cmp	r0, #48	; 0x30
   2ff7c:	movw	r0, #0
   2ff80:	str	r0, [sp, #36]	; 0x24
   2ff84:	blt	2ffa0 <flatcc_json_parser_struct_as_root@@Base+0xa04>
   2ff88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ff8c:	ldrb	r0, [r0]
   2ff90:	cmp	r0, #57	; 0x39
   2ff94:	movw	r0, #0
   2ff98:	movle	r0, #1
   2ff9c:	str	r0, [sp, #36]	; 0x24
   2ffa0:	ldr	r0, [sp, #36]	; 0x24
   2ffa4:	tst	r0, #1
   2ffa8:	beq	2ffec <flatcc_json_parser_struct_as_root@@Base+0xa50>
   2ffac:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2ffb0:	movw	r1, #32767	; 0x7fff
   2ffb4:	cmp	r0, r1
   2ffb8:	bgt	2ffdc <flatcc_json_parser_struct_as_root@@Base+0xa40>
   2ffbc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2ffc0:	movw	r1, #10
   2ffc4:	mul	r0, r0, r1
   2ffc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ffcc:	ldrb	r1, [r1]
   2ffd0:	add	r0, r0, r1
   2ffd4:	sub	r0, r0, #48	; 0x30
   2ffd8:	str	r0, [fp, #-72]	; 0xffffffb8
   2ffdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2ffe0:	add	r0, r0, #1
   2ffe4:	str	r0, [fp, #-24]	; 0xffffffe8
   2ffe8:	b	2ff58 <flatcc_json_parser_struct_as_root@@Base+0x9bc>
   2ffec:	b	2fff0 <flatcc_json_parser_struct_as_root@@Base+0xa54>
   2fff0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2fff4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2fff8:	cmp	r1, #0
   2fffc:	str	r0, [sp, #32]
   30000:	beq	30018 <flatcc_json_parser_struct_as_root@@Base+0xa7c>
   30004:	ldr	r0, [fp, #-72]	; 0xffffffb8
   30008:	movw	r1, #0
   3000c:	sub	r0, r1, r0
   30010:	str	r0, [sp, #28]
   30014:	b	30020 <flatcc_json_parser_struct_as_root@@Base+0xa84>
   30018:	ldr	r0, [fp, #-72]	; 0xffffffb8
   3001c:	str	r0, [sp, #28]
   30020:	ldr	r0, [sp, #28]
   30024:	ldr	r1, [sp, #32]
   30028:	add	r0, r1, r0
   3002c:	str	r0, [fp, #-68]	; 0xffffffbc
   30030:	ldr	r0, [fp, #-24]	; 0xffffffe8
   30034:	ldr	r2, [fp, #-44]	; 0xffffffd4
   30038:	cmp	r0, r2
   3003c:	bne	3004c <flatcc_json_parser_struct_as_root@@Base+0xab0>
   30040:	movw	r0, #0
   30044:	str	r0, [fp, #-20]	; 0xffffffec
   30048:	b	30094 <flatcc_json_parser_struct_as_root@@Base+0xaf8>
   3004c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30050:	ldr	r1, [fp, #-24]	; 0xffffffe8
   30054:	ldr	r2, [fp, #-48]	; 0xffffffd0
   30058:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3005c:	ldr	ip, [fp, #-60]	; 0xffffffc4
   30060:	ldr	lr, [fp, #-68]	; 0xffffffbc
   30064:	ldr	r4, [fp, #-76]	; 0xffffffb4
   30068:	ldr	r5, [fp, #-80]	; 0xffffffb0
   3006c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   30070:	mov	r7, sp
   30074:	str	r6, [r7, #20]
   30078:	str	r5, [r7, #16]
   3007c:	str	r4, [r7, #12]
   30080:	str	lr, [r7, #8]
   30084:	str	ip, [r7, #4]
   30088:	str	r3, [r7]
   3008c:	bl	300d8 <flatcc_json_parser_struct_as_root@@Base+0xb3c>
   30090:	str	r0, [fp, #-20]	; 0xffffffec
   30094:	ldr	r0, [fp, #-20]	; 0xffffffec
   30098:	sub	sp, fp, #16
   3009c:	pop	{r4, r5, r6, r7, fp, pc}
   300a0:	sub	sp, sp, #16
   300a4:	vldr	d16, [pc, #36]	; 300d0 <flatcc_json_parser_struct_as_root@@Base+0xb34>
   300a8:	str	r0, [sp, #12]
   300ac:	str	r1, [sp, #8]
   300b0:	str	r2, [sp, #4]
   300b4:	str	r3, [sp]
   300b8:	ldr	r0, [sp]
   300bc:	vstr	d16, [r0]
   300c0:	ldr	r0, [sp, #12]
   300c4:	add	sp, sp, #16
   300c8:	bx	lr
   300cc:	nop	{0}
	...
   300d8:	push	{r4, r5, r6, sl, fp, lr}
   300dc:	add	fp, sp, #16
   300e0:	sub	sp, sp, #80	; 0x50
   300e4:	ldr	r3, [fp, #12]
   300e8:	ldr	ip, [fp, #8]
   300ec:	ldr	lr, [fp, #28]
   300f0:	ldr	r4, [fp, #24]
   300f4:	ldr	r5, [fp, #20]
   300f8:	ldr	r6, [fp, #16]
   300fc:	str	r0, [fp, #-24]	; 0xffffffe8
   30100:	str	r1, [fp, #-28]	; 0xffffffe4
   30104:	str	r2, [fp, #-32]	; 0xffffffe0
   30108:	str	r3, [fp, #-36]	; 0xffffffdc
   3010c:	str	ip, [fp, #-40]	; 0xffffffd8
   30110:	movw	r0, #309	; 0x135
   30114:	str	r0, [fp, #-44]	; 0xffffffd4
   30118:	movw	r0, #65212	; 0xfebc
   3011c:	movt	r0, #65535	; 0xffff
   30120:	str	r0, [sp, #48]	; 0x30
   30124:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30128:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3012c:	orr	r0, r0, r1
   30130:	cmp	r0, #0
   30134:	str	r6, [sp, #28]
   30138:	str	r4, [sp, #24]
   3013c:	str	r5, [sp, #20]
   30140:	str	lr, [sp, #16]
   30144:	beq	30158 <flatcc_json_parser_struct_as_root@@Base+0xbbc>
   30148:	b	3014c <flatcc_json_parser_struct_as_root@@Base+0xbb0>
   3014c:	ldr	r0, [fp, #16]
   30150:	cmn	r0, #324	; 0x144
   30154:	bge	30168 <flatcc_json_parser_struct_as_root@@Base+0xbcc>
   30158:	vldr	d16, [pc, #1008]	; 30550 <flatcc_json_parser_struct_as_root@@Base+0xfb4>
   3015c:	ldr	r0, [fp, #28]
   30160:	vstr	d16, [r0]
   30164:	b	30718 <flatcc_json_parser_struct_as_root@@Base+0x117c>
   30168:	ldr	r0, [fp, #16]
   3016c:	sub	r0, r0, #1
   30170:	movw	r1, #309	; 0x135
   30174:	cmp	r0, r1
   30178:	ble	30198 <flatcc_json_parser_struct_as_root@@Base+0xbfc>
   3017c:	mov	r0, #0
   30180:	movw	r1, #0
   30184:	movt	r1, #32752	; 0x7ff0
   30188:	bl	2f70c <flatcc_json_parser_struct_as_root@@Base+0x170>
   3018c:	ldr	r0, [fp, #28]
   30190:	vstr	d0, [r0]
   30194:	b	30718 <flatcc_json_parser_struct_as_root@@Base+0x117c>
   30198:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3019c:	mov	r1, #0
   301a0:	cmp	r1, r0, lsr #21
   301a4:	bne	306a8 <flatcc_json_parser_struct_as_root@@Base+0x110c>
   301a8:	b	301ac <flatcc_json_parser_struct_as_root@@Base+0xc10>
   301ac:	ldr	r0, [fp, #16]
   301b0:	cmp	r0, #0
   301b4:	blt	306a8 <flatcc_json_parser_struct_as_root@@Base+0x110c>
   301b8:	ldr	r0, [fp, #16]
   301bc:	cmp	r0, #22
   301c0:	bgt	306a8 <flatcc_json_parser_struct_as_root@@Base+0x110c>
   301c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   301c8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   301cc:	bl	30c6c <flatcc_json_parser_struct_as_root@@Base+0x16d0>
   301d0:	str	r0, [sp, #32]
   301d4:	str	r1, [sp, #36]	; 0x24
   301d8:	ldr	r0, [fp, #16]
   301dc:	ldr	r1, [fp, #20]
   301e0:	sub	r0, r0, r1
   301e4:	add	r0, r0, #22
   301e8:	cmp	r0, #44	; 0x2c
   301ec:	str	r0, [sp, #12]
   301f0:	bhi	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   301f4:	add	r0, pc, #8
   301f8:	ldr	r1, [sp, #12]
   301fc:	ldr	r2, [r0, r1, lsl #2]
   30200:	add	pc, r0, r2
   30204:	strheq	r0, [r0], -r4
   30208:	andeq	r0, r0, r8, asr #1
   3020c:	ldrdeq	r0, [r0], -ip
   30210:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   30214:	andeq	r0, r0, r4, lsl #2
   30218:	andeq	r0, r0, r8, lsl r1
   3021c:	andeq	r0, r0, ip, lsr #2
   30220:	andeq	r0, r0, r0, asr #2
   30224:	andeq	r0, r0, r4, asr r1
   30228:	andeq	r0, r0, r8, ror #2
   3022c:	andeq	r0, r0, ip, ror r1
   30230:	muleq	r0, r0, r1
   30234:	andeq	r0, r0, r4, lsr #3
   30238:			; <UNDEFINED> instruction: 0x000001b8
   3023c:	andeq	r0, r0, ip, asr #3
   30240:	andeq	r0, r0, r0, ror #3
   30244:	strdeq	r0, [r0], -r4
   30248:	andeq	r0, r0, r8, lsl #4
   3024c:	andeq	r0, r0, ip, lsl r2
   30250:	andeq	r0, r0, r0, lsr r2
   30254:	andeq	r0, r0, r4, asr #4
   30258:	andeq	r0, r0, r8, asr r2
   3025c:	andeq	r0, r0, ip, ror #4
   30260:	andeq	r0, r0, r0, ror r2
   30264:	andeq	r0, r0, r4, lsl #5
   30268:	muleq	r0, r8, r2
   3026c:	andeq	r0, r0, ip, lsr #5
   30270:	andeq	r0, r0, r0, asr #5
   30274:	ldrdeq	r0, [r0], -r4
   30278:	andeq	r0, r0, r8, ror #5
   3027c:	strdeq	r0, [r0], -ip
   30280:	andeq	r0, r0, r0, lsl r3
   30284:	andeq	r0, r0, r4, lsr #6
   30288:	andeq	r0, r0, r8, lsr r3
   3028c:			; <UNDEFINED> instruction: 0x000003bc
   30290:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   30294:	andeq	r0, r0, r4, ror #7
   30298:	strdeq	r0, [r0], -r8
   3029c:	andeq	r0, r0, ip, lsl #8
   302a0:	andeq	r0, r0, r0, lsr #8
   302a4:	andeq	r0, r0, r4, lsr r4
   302a8:	andeq	r0, r0, r8, asr #8
   302ac:	andeq	r0, r0, ip, asr r4
   302b0:	andeq	r0, r0, r0, ror r4
   302b4:	andeq	r0, r0, r4, lsl #9
   302b8:	vldr	d16, [pc, #664]	; 30558 <flatcc_json_parser_struct_as_root@@Base+0xfbc>
   302bc:	vldr	d17, [sp, #32]
   302c0:	vdiv.f64	d16, d17, d16
   302c4:	vstr	d16, [sp, #32]
   302c8:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   302cc:	vldr	d16, [pc, #652]	; 30560 <flatcc_json_parser_struct_as_root@@Base+0xfc4>
   302d0:	vldr	d17, [sp, #32]
   302d4:	vdiv.f64	d16, d17, d16
   302d8:	vstr	d16, [sp, #32]
   302dc:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   302e0:	vldr	d16, [pc, #640]	; 30568 <flatcc_json_parser_struct_as_root@@Base+0xfcc>
   302e4:	vldr	d17, [sp, #32]
   302e8:	vdiv.f64	d16, d17, d16
   302ec:	vstr	d16, [sp, #32]
   302f0:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   302f4:	vldr	d16, [pc, #628]	; 30570 <flatcc_json_parser_struct_as_root@@Base+0xfd4>
   302f8:	vldr	d17, [sp, #32]
   302fc:	vdiv.f64	d16, d17, d16
   30300:	vstr	d16, [sp, #32]
   30304:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   30308:	vldr	d16, [pc, #616]	; 30578 <flatcc_json_parser_struct_as_root@@Base+0xfdc>
   3030c:	vldr	d17, [sp, #32]
   30310:	vdiv.f64	d16, d17, d16
   30314:	vstr	d16, [sp, #32]
   30318:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   3031c:	vldr	d16, [pc, #604]	; 30580 <flatcc_json_parser_struct_as_root@@Base+0xfe4>
   30320:	vldr	d17, [sp, #32]
   30324:	vdiv.f64	d16, d17, d16
   30328:	vstr	d16, [sp, #32]
   3032c:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   30330:	vldr	d16, [pc, #592]	; 30588 <flatcc_json_parser_struct_as_root@@Base+0xfec>
   30334:	vldr	d17, [sp, #32]
   30338:	vdiv.f64	d16, d17, d16
   3033c:	vstr	d16, [sp, #32]
   30340:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   30344:	vldr	d16, [pc, #580]	; 30590 <flatcc_json_parser_struct_as_root@@Base+0xff4>
   30348:	vldr	d17, [sp, #32]
   3034c:	vdiv.f64	d16, d17, d16
   30350:	vstr	d16, [sp, #32]
   30354:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   30358:	vldr	d16, [pc, #568]	; 30598 <flatcc_json_parser_struct_as_root@@Base+0xffc>
   3035c:	vldr	d17, [sp, #32]
   30360:	vdiv.f64	d16, d17, d16
   30364:	vstr	d16, [sp, #32]
   30368:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   3036c:	vldr	d16, [pc, #556]	; 305a0 <flatcc_json_parser_struct_as_root@@Base+0x1004>
   30370:	vldr	d17, [sp, #32]
   30374:	vdiv.f64	d16, d17, d16
   30378:	vstr	d16, [sp, #32]
   3037c:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   30380:	vldr	d16, [pc, #544]	; 305a8 <flatcc_json_parser_struct_as_root@@Base+0x100c>
   30384:	vldr	d17, [sp, #32]
   30388:	vdiv.f64	d16, d17, d16
   3038c:	vstr	d16, [sp, #32]
   30390:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   30394:	vldr	d16, [pc, #532]	; 305b0 <flatcc_json_parser_struct_as_root@@Base+0x1014>
   30398:	vldr	d17, [sp, #32]
   3039c:	vdiv.f64	d16, d17, d16
   303a0:	vstr	d16, [sp, #32]
   303a4:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   303a8:	vldr	d16, [pc, #520]	; 305b8 <flatcc_json_parser_struct_as_root@@Base+0x101c>
   303ac:	vldr	d17, [sp, #32]
   303b0:	vdiv.f64	d16, d17, d16
   303b4:	vstr	d16, [sp, #32]
   303b8:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   303bc:	vldr	d16, [pc, #1012]	; 307b8 <flatcc_json_parser_struct_as_root@@Base+0x121c>
   303c0:	vldr	d17, [sp, #32]
   303c4:	vdiv.f64	d16, d17, d16
   303c8:	vstr	d16, [sp, #32]
   303cc:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   303d0:	vldr	d16, [pc, #1000]	; 307c0 <flatcc_json_parser_struct_as_root@@Base+0x1224>
   303d4:	vldr	d17, [sp, #32]
   303d8:	vdiv.f64	d16, d17, d16
   303dc:	vstr	d16, [sp, #32]
   303e0:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   303e4:	vldr	d16, [pc, #988]	; 307c8 <flatcc_json_parser_struct_as_root@@Base+0x122c>
   303e8:	vldr	d17, [sp, #32]
   303ec:	vdiv.f64	d16, d17, d16
   303f0:	vstr	d16, [sp, #32]
   303f4:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   303f8:	vldr	d16, [pc, #976]	; 307d0 <flatcc_json_parser_struct_as_root@@Base+0x1234>
   303fc:	vldr	d17, [sp, #32]
   30400:	vdiv.f64	d16, d17, d16
   30404:	vstr	d16, [sp, #32]
   30408:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   3040c:	vldr	d16, [pc, #964]	; 307d8 <flatcc_json_parser_struct_as_root@@Base+0x123c>
   30410:	vldr	d17, [sp, #32]
   30414:	vdiv.f64	d16, d17, d16
   30418:	vstr	d16, [sp, #32]
   3041c:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   30420:	vldr	d16, [pc, #952]	; 307e0 <flatcc_json_parser_struct_as_root@@Base+0x1244>
   30424:	vldr	d17, [sp, #32]
   30428:	vdiv.f64	d16, d17, d16
   3042c:	vstr	d16, [sp, #32]
   30430:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   30434:	vldr	d16, [pc, #940]	; 307e8 <flatcc_json_parser_struct_as_root@@Base+0x124c>
   30438:	vldr	d17, [sp, #32]
   3043c:	vdiv.f64	d16, d17, d16
   30440:	vstr	d16, [sp, #32]
   30444:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   30448:	vldr	d16, [pc, #928]	; 307f0 <flatcc_json_parser_struct_as_root@@Base+0x1254>
   3044c:	vldr	d17, [sp, #32]
   30450:	vdiv.f64	d16, d17, d16
   30454:	vstr	d16, [sp, #32]
   30458:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   3045c:	vldr	d16, [sp, #32]
   30460:	vmov.f64	d17, #36	; 0x41200000  10.0
   30464:	vdiv.f64	d16, d16, d17
   30468:	vstr	d16, [sp, #32]
   3046c:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   30470:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   30474:	vldr	d16, [sp, #32]
   30478:	vmov.f64	d17, #36	; 0x41200000  10.0
   3047c:	vmul.f64	d16, d16, d17
   30480:	vstr	d16, [sp, #32]
   30484:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   30488:	vldr	d16, [pc, #864]	; 307f0 <flatcc_json_parser_struct_as_root@@Base+0x1254>
   3048c:	vldr	d17, [sp, #32]
   30490:	vmul.f64	d16, d17, d16
   30494:	vstr	d16, [sp, #32]
   30498:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   3049c:	vldr	d16, [pc, #836]	; 307e8 <flatcc_json_parser_struct_as_root@@Base+0x124c>
   304a0:	vldr	d17, [sp, #32]
   304a4:	vmul.f64	d16, d17, d16
   304a8:	vstr	d16, [sp, #32]
   304ac:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   304b0:	vldr	d16, [pc, #808]	; 307e0 <flatcc_json_parser_struct_as_root@@Base+0x1244>
   304b4:	vldr	d17, [sp, #32]
   304b8:	vmul.f64	d16, d17, d16
   304bc:	vstr	d16, [sp, #32]
   304c0:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   304c4:	vldr	d16, [pc, #780]	; 307d8 <flatcc_json_parser_struct_as_root@@Base+0x123c>
   304c8:	vldr	d17, [sp, #32]
   304cc:	vmul.f64	d16, d17, d16
   304d0:	vstr	d16, [sp, #32]
   304d4:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   304d8:	vldr	d16, [pc, #752]	; 307d0 <flatcc_json_parser_struct_as_root@@Base+0x1234>
   304dc:	vldr	d17, [sp, #32]
   304e0:	vmul.f64	d16, d17, d16
   304e4:	vstr	d16, [sp, #32]
   304e8:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   304ec:	vldr	d16, [pc, #724]	; 307c8 <flatcc_json_parser_struct_as_root@@Base+0x122c>
   304f0:	vldr	d17, [sp, #32]
   304f4:	vmul.f64	d16, d17, d16
   304f8:	vstr	d16, [sp, #32]
   304fc:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   30500:	vldr	d16, [pc, #696]	; 307c0 <flatcc_json_parser_struct_as_root@@Base+0x1224>
   30504:	vldr	d17, [sp, #32]
   30508:	vmul.f64	d16, d17, d16
   3050c:	vstr	d16, [sp, #32]
   30510:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   30514:	vldr	d16, [pc, #668]	; 307b8 <flatcc_json_parser_struct_as_root@@Base+0x121c>
   30518:	vldr	d17, [sp, #32]
   3051c:	vmul.f64	d16, d17, d16
   30520:	vstr	d16, [sp, #32]
   30524:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   30528:	vldr	d16, [pc, #640]	; 307b0 <flatcc_json_parser_struct_as_root@@Base+0x1214>
   3052c:	vldr	d17, [sp, #32]
   30530:	vmul.f64	d16, d17, d16
   30534:	vstr	d16, [sp, #32]
   30538:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   3053c:	vldr	d16, [pc, #612]	; 307a8 <flatcc_json_parser_struct_as_root@@Base+0x120c>
   30540:	vldr	d17, [sp, #32]
   30544:	vmul.f64	d16, d17, d16
   30548:	vstr	d16, [sp, #32]
   3054c:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
	...
   30558:			; <UNDEFINED> instruction: 0x064dd592
   3055c:	strmi	pc, [r0], #207	; 0xcf
   30560:	usatle	lr, #2, r0, asr #30
   30564:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   30568:	ldmvc	r5!, {r6, sl, fp, pc}
   3056c:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   30570:	addsvs	r3, r1, r0, lsl #26
   30574:	mvnmi	r5, #228, 16	; 0xe40000
   30578:	strbvs	ip, [lr, -r0, lsl #16]
   3057c:			; <UNDEFINED> instruction: 0x43abc16d
   30580:	ldrbhi	sl, [r8]
   30584:	cmnmi	r6, #1459617792	; 0x57000000
   30588:	strbcc	r8, [r0, r0]!
   3058c:	movtmi	ip, #4985	; 0x1379
   30590:	ldrtcs	r0, [r4], -r0
   30594:	movwmi	r6, #52213	; 0xcbf5
   30598:	cdpne	0, 9, cr0, cr0, cr0, {0}
   3059c:	sbcsmi	fp, r6, #196, 24	; 0xc400
   305a0:	strb	r0, [r0, #-0]
   305a4:	adcmi	r3, r2, #156	; 0x9c
   305a8:	andge	r0, r0, #0
   305ac:	rsbmi	r1, sp, #148, 20	; 0x94000
   305b0:	stmda	r0, {}	; <UNPREDICTABLE>
   305b4:	eorsmi	r4, r7, #7733248	; 0x760000
   305b8:	andcs	r0, r0, r0
   305bc:	andmi	sl, r2, #95	; 0x5f
   305c0:	vldr	d16, [pc, #472]	; 307a0 <flatcc_json_parser_struct_as_root@@Base+0x1204>
   305c4:	vldr	d17, [sp, #32]
   305c8:	vmul.f64	d16, d17, d16
   305cc:	vstr	d16, [sp, #32]
   305d0:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   305d4:	vldr	d16, [pc, #444]	; 30798 <flatcc_json_parser_struct_as_root@@Base+0x11fc>
   305d8:	vldr	d17, [sp, #32]
   305dc:	vmul.f64	d16, d17, d16
   305e0:	vstr	d16, [sp, #32]
   305e4:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   305e8:	vldr	d16, [pc, #416]	; 30790 <flatcc_json_parser_struct_as_root@@Base+0x11f4>
   305ec:	vldr	d17, [sp, #32]
   305f0:	vmul.f64	d16, d17, d16
   305f4:	vstr	d16, [sp, #32]
   305f8:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   305fc:	vldr	d16, [pc, #388]	; 30788 <flatcc_json_parser_struct_as_root@@Base+0x11ec>
   30600:	vldr	d17, [sp, #32]
   30604:	vmul.f64	d16, d17, d16
   30608:	vstr	d16, [sp, #32]
   3060c:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   30610:	vldr	d16, [pc, #360]	; 30780 <flatcc_json_parser_struct_as_root@@Base+0x11e4>
   30614:	vldr	d17, [sp, #32]
   30618:	vmul.f64	d16, d17, d16
   3061c:	vstr	d16, [sp, #32]
   30620:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   30624:	vldr	d16, [pc, #332]	; 30778 <flatcc_json_parser_struct_as_root@@Base+0x11dc>
   30628:	vldr	d17, [sp, #32]
   3062c:	vmul.f64	d16, d17, d16
   30630:	vstr	d16, [sp, #32]
   30634:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   30638:	vldr	d16, [pc, #304]	; 30770 <flatcc_json_parser_struct_as_root@@Base+0x11d4>
   3063c:	vldr	d17, [sp, #32]
   30640:	vmul.f64	d16, d17, d16
   30644:	vstr	d16, [sp, #32]
   30648:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   3064c:	vldr	d16, [pc, #276]	; 30768 <flatcc_json_parser_struct_as_root@@Base+0x11cc>
   30650:	vldr	d17, [sp, #32]
   30654:	vmul.f64	d16, d17, d16
   30658:	vstr	d16, [sp, #32]
   3065c:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   30660:	vldr	d16, [pc, #248]	; 30760 <flatcc_json_parser_struct_as_root@@Base+0x11c4>
   30664:	vldr	d17, [sp, #32]
   30668:	vmul.f64	d16, d17, d16
   3066c:	vstr	d16, [sp, #32]
   30670:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   30674:	vldr	d16, [pc, #220]	; 30758 <flatcc_json_parser_struct_as_root@@Base+0x11bc>
   30678:	vldr	d17, [sp, #32]
   3067c:	vmul.f64	d16, d17, d16
   30680:	vstr	d16, [sp, #32]
   30684:	b	30698 <flatcc_json_parser_struct_as_root@@Base+0x10fc>
   30688:	vldr	d16, [pc, #192]	; 30750 <flatcc_json_parser_struct_as_root@@Base+0x11b4>
   3068c:	vldr	d17, [sp, #32]
   30690:	vmul.f64	d16, d17, d16
   30694:	vstr	d16, [sp, #32]
   30698:	vldr	d16, [sp, #32]
   3069c:	ldr	r0, [fp, #28]
   306a0:	vstr	d16, [r0]
   306a4:	b	30718 <flatcc_json_parser_struct_as_root@@Base+0x117c>
   306a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   306ac:	ldr	r1, [fp, #-36]	; 0xffffffdc
   306b0:	ldr	r2, [fp, #16]
   306b4:	ldr	r3, [fp, #20]
   306b8:	ldr	ip, [fp, #24]
   306bc:	ldr	lr, [fp, #28]
   306c0:	mov	r4, sp
   306c4:	str	lr, [r4, #4]
   306c8:	str	ip, [r4]
   306cc:	bl	29f80 <grisu3_diy_fp_encode_double@@Base>
   306d0:	cmp	r0, #0
   306d4:	beq	306dc <flatcc_json_parser_struct_as_root@@Base+0x1140>
   306d8:	b	30718 <flatcc_json_parser_struct_as_root@@Base+0x117c>
   306dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   306e0:	add	r1, sp, #44	; 0x2c
   306e4:	bl	12b44 <strtod@plt>
   306e8:	ldr	r0, [fp, #28]
   306ec:	vstr	d0, [r0]
   306f0:	ldr	r0, [sp, #44]	; 0x2c
   306f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   306f8:	cmp	r0, r1
   306fc:	bcs	3070c <flatcc_json_parser_struct_as_root@@Base+0x1170>
   30700:	ldr	r0, [sp, #44]	; 0x2c
   30704:	str	r0, [fp, #-20]	; 0xffffffec
   30708:	b	30740 <flatcc_json_parser_struct_as_root@@Base+0x11a4>
   3070c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   30710:	str	r0, [fp, #-20]	; 0xffffffec
   30714:	b	30740 <flatcc_json_parser_struct_as_root@@Base+0x11a4>
   30718:	ldr	r0, [fp, #-32]	; 0xffffffe0
   3071c:	cmp	r0, #0
   30720:	beq	30738 <flatcc_json_parser_struct_as_root@@Base+0x119c>
   30724:	ldr	r0, [fp, #28]
   30728:	vldr	d16, [r0]
   3072c:	vneg.f64	d16, d16
   30730:	ldr	r0, [fp, #28]
   30734:	vstr	d16, [r0]
   30738:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3073c:	str	r0, [fp, #-20]	; 0xffffffec
   30740:	ldr	r0, [fp, #-20]	; 0xffffffec
   30744:	sub	sp, fp, #16
   30748:	pop	{r4, r5, r6, sl, fp, pc}
   3074c:	nop	{0}
   30750:			; <UNDEFINED> instruction: 0x064dd592
   30754:	strmi	pc, [r0], #207	; 0xcf
   30758:	usatle	lr, #2, r0, asr #30
   3075c:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   30760:	ldmvc	r5!, {r6, sl, fp, pc}
   30764:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   30768:	addsvs	r3, r1, r0, lsl #26
   3076c:	mvnmi	r5, #228, 16	; 0xe40000
   30770:	strbvs	ip, [lr, -r0, lsl #16]
   30774:			; <UNDEFINED> instruction: 0x43abc16d
   30778:	ldrbhi	sl, [r8]
   3077c:	cmnmi	r6, #1459617792	; 0x57000000
   30780:	strbcc	r8, [r0, r0]!
   30784:	movtmi	ip, #4985	; 0x1379
   30788:	ldrtcs	r0, [r4], -r0
   3078c:	movwmi	r6, #52213	; 0xcbf5
   30790:	cdpne	0, 9, cr0, cr0, cr0, {0}
   30794:	sbcsmi	fp, r6, #196, 24	; 0xc400
   30798:	strb	r0, [r0, #-0]
   3079c:	adcmi	r3, r2, #156	; 0x9c
   307a0:	andge	r0, r0, #0
   307a4:	rsbmi	r1, sp, #148, 20	; 0x94000
   307a8:	stmda	r0, {}	; <UNPREDICTABLE>
   307ac:	eorsmi	r4, r7, #7733248	; 0x760000
   307b0:	andcs	r0, r0, r0
   307b4:	andmi	sl, r2, #95	; 0x5f
   307b8:	andeq	r0, r0, r0
   307bc:	bicmi	ip, sp, r5, ror #26
   307c0:	andeq	r0, r0, r0
   307c4:	orrsmi	sp, r7, r4, lsl #15
   307c8:	andeq	r0, r0, r0
   307cc:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   307d0:	andeq	r0, r0, r0
   307d4:	smlawbmi	lr, r0, r4, r8
   307d8:	andeq	r0, r0, r0
   307dc:	rscsmi	r6, r8, r0, lsl #20
   307e0:	andeq	r0, r0, r0
   307e4:	sbcmi	r8, r3, r0, lsl #16
   307e8:	andeq	r0, r0, r0
   307ec:	addmi	r4, pc, r0
   307f0:	andeq	r0, r0, r0
   307f4:	subsmi	r0, r9, r0
   307f8:	push	{r4, sl, fp, lr}
   307fc:	add	fp, sp, #8
   30800:	sub	sp, sp, #48	; 0x30
   30804:	ldr	ip, [fp, #12]
   30808:	ldr	lr, [fp, #8]
   3080c:	ldr	r4, [fp, #16]
   30810:	str	r0, [fp, #-16]
   30814:	str	r1, [fp, #-20]	; 0xffffffec
   30818:	str	r2, [fp, #-24]	; 0xffffffe8
   3081c:	str	r3, [sp, #28]
   30820:	str	ip, [sp, #20]
   30824:	str	lr, [sp, #16]
   30828:	ldr	r0, [sp, #28]
   3082c:	cmp	r0, #0
   30830:	str	r4, [sp, #12]
   30834:	beq	30854 <flatcc_json_parser_struct_as_root@@Base+0x12b8>
   30838:	ldr	r0, [fp, #-16]
   3083c:	ldr	r1, [fp, #-20]	; 0xffffffec
   30840:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30844:	movw	r3, #8
   30848:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   3084c:	str	r0, [fp, #-12]
   30850:	b	308a4 <flatcc_json_parser_struct_as_root@@Base+0x1308>
   30854:	ldr	r0, [sp, #16]
   30858:	ldr	r1, [sp, #20]
   3085c:	subs	r0, r0, #256	; 0x100
   30860:	sbcs	r1, r1, #0
   30864:	str	r0, [sp, #8]
   30868:	str	r1, [sp, #4]
   3086c:	bcc	30890 <flatcc_json_parser_struct_as_root@@Base+0x12f4>
   30870:	b	30874 <flatcc_json_parser_struct_as_root@@Base+0x12d8>
   30874:	ldr	r0, [fp, #-16]
   30878:	ldr	r1, [fp, #-20]	; 0xffffffec
   3087c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30880:	movw	r3, #7
   30884:	bl	2ae90 <flatcc_json_parser_set_error@@Base>
   30888:	str	r0, [fp, #-12]
   3088c:	b	308a4 <flatcc_json_parser_struct_as_root@@Base+0x1308>
   30890:	ldrb	r0, [sp, #16]
   30894:	ldr	r1, [fp, #16]
   30898:	strb	r0, [r1]
   3089c:	ldr	r0, [fp, #-20]	; 0xffffffec
   308a0:	str	r0, [fp, #-12]
   308a4:	ldr	r0, [fp, #-12]
   308a8:	sub	sp, fp, #8
   308ac:	pop	{r4, sl, fp, pc}
   308b0:	push	{fp, lr}
   308b4:	mov	fp, sp
   308b8:	sub	sp, sp, #16
   308bc:	str	r0, [fp, #-4]
   308c0:	str	r1, [sp, #8]
   308c4:	str	r2, [sp, #4]
   308c8:	ldr	r0, [fp, #-4]
   308cc:	ldr	r1, [sp, #8]
   308d0:	ldr	r2, [sp, #4]
   308d4:	bl	2cccc <flatcc_json_parser_float@@Base+0x254>
   308d8:	str	r0, [sp, #8]
   308dc:	ldr	r0, [fp, #-4]
   308e0:	ldr	r0, [r0, #12]
   308e4:	cmp	r0, #0
   308e8:	bne	30900 <flatcc_json_parser_struct_as_root@@Base+0x1364>
   308ec:	ldr	r0, [fp, #-4]
   308f0:	ldr	r1, [sp, #8]
   308f4:	ldr	r2, [sp, #4]
   308f8:	bl	2bc1c <flatcc_json_parser_skip_constant@@Base+0x104>
   308fc:	str	r0, [sp, #8]
   30900:	ldr	r0, [sp, #8]
   30904:	mov	sp, fp
   30908:	pop	{fp, pc}
   3090c:	sub	sp, sp, #4
   30910:	strb	r0, [sp, #3]
   30914:	ldrb	r0, [sp, #3]
   30918:	add	sp, sp, #4
   3091c:	bx	lr
   30920:	eor	r1, r1, #-2147483648	; 0x80000000
   30924:	b	3092c <flatcc_json_parser_struct_as_root@@Base+0x1390>
   30928:	eor	r3, r3, #-2147483648	; 0x80000000
   3092c:	push	{r4, r5, lr}
   30930:	lsl	r4, r1, #1
   30934:	lsl	r5, r3, #1
   30938:	teq	r4, r5
   3093c:	teqeq	r0, r2
   30940:	orrsne	ip, r4, r0
   30944:	orrsne	ip, r5, r2
   30948:	mvnsne	ip, r4, asr #21
   3094c:	mvnsne	ip, r5, asr #21
   30950:	beq	30b3c <flatcc_json_parser_struct_as_root@@Base+0x15a0>
   30954:	lsr	r4, r4, #21
   30958:	rsbs	r5, r4, r5, lsr #21
   3095c:	rsblt	r5, r5, #0
   30960:	ble	30980 <flatcc_json_parser_struct_as_root@@Base+0x13e4>
   30964:	add	r4, r4, r5
   30968:	eor	r2, r0, r2
   3096c:	eor	r3, r1, r3
   30970:	eor	r0, r2, r0
   30974:	eor	r1, r3, r1
   30978:	eor	r2, r0, r2
   3097c:	eor	r3, r1, r3
   30980:	cmp	r5, #54	; 0x36
   30984:	pophi	{r4, r5, pc}
   30988:	tst	r1, #-2147483648	; 0x80000000
   3098c:	lsl	r1, r1, #12
   30990:	mov	ip, #1048576	; 0x100000
   30994:	orr	r1, ip, r1, lsr #12
   30998:	beq	309a4 <flatcc_json_parser_struct_as_root@@Base+0x1408>
   3099c:	rsbs	r0, r0, #0
   309a0:	rsc	r1, r1, #0
   309a4:	tst	r3, #-2147483648	; 0x80000000
   309a8:	lsl	r3, r3, #12
   309ac:	orr	r3, ip, r3, lsr #12
   309b0:	beq	309bc <flatcc_json_parser_struct_as_root@@Base+0x1420>
   309b4:	rsbs	r2, r2, #0
   309b8:	rsc	r3, r3, #0
   309bc:	teq	r4, r5
   309c0:	beq	30b24 <flatcc_json_parser_struct_as_root@@Base+0x1588>
   309c4:	sub	r4, r4, #1
   309c8:	rsbs	lr, r5, #32
   309cc:	blt	309e8 <flatcc_json_parser_struct_as_root@@Base+0x144c>
   309d0:	lsl	ip, r2, lr
   309d4:	adds	r0, r0, r2, lsr r5
   309d8:	adc	r1, r1, #0
   309dc:	adds	r0, r0, r3, lsl lr
   309e0:	adcs	r1, r1, r3, asr r5
   309e4:	b	30a04 <flatcc_json_parser_struct_as_root@@Base+0x1468>
   309e8:	sub	r5, r5, #32
   309ec:	add	lr, lr, #32
   309f0:	cmp	r2, #1
   309f4:	lsl	ip, r3, lr
   309f8:	orrcs	ip, ip, #2
   309fc:	adds	r0, r0, r3, asr r5
   30a00:	adcs	r1, r1, r3, asr #31
   30a04:	and	r5, r1, #-2147483648	; 0x80000000
   30a08:	bpl	30a18 <flatcc_json_parser_struct_as_root@@Base+0x147c>
   30a0c:	rsbs	ip, ip, #0
   30a10:	rscs	r0, r0, #0
   30a14:	rsc	r1, r1, #0
   30a18:	cmp	r1, #1048576	; 0x100000
   30a1c:	bcc	30a5c <flatcc_json_parser_struct_as_root@@Base+0x14c0>
   30a20:	cmp	r1, #2097152	; 0x200000
   30a24:	bcc	30a44 <flatcc_json_parser_struct_as_root@@Base+0x14a8>
   30a28:	lsrs	r1, r1, #1
   30a2c:	rrxs	r0, r0
   30a30:	rrx	ip, ip
   30a34:	add	r4, r4, #1
   30a38:	lsl	r2, r4, #21
   30a3c:	cmn	r2, #4194304	; 0x400000
   30a40:	bcs	30b9c <flatcc_json_parser_struct_as_root@@Base+0x1600>
   30a44:	cmp	ip, #-2147483648	; 0x80000000
   30a48:	lsrseq	ip, r0, #1
   30a4c:	adcs	r0, r0, #0
   30a50:	adc	r1, r1, r4, lsl #20
   30a54:	orr	r1, r1, r5
   30a58:	pop	{r4, r5, pc}
   30a5c:	lsls	ip, ip, #1
   30a60:	adcs	r0, r0, r0
   30a64:	adc	r1, r1, r1
   30a68:	tst	r1, #1048576	; 0x100000
   30a6c:	sub	r4, r4, #1
   30a70:	bne	30a44 <flatcc_json_parser_struct_as_root@@Base+0x14a8>
   30a74:	teq	r1, #0
   30a78:	moveq	r1, r0
   30a7c:	moveq	r0, #0
   30a80:	clz	r3, r1
   30a84:	addeq	r3, r3, #32
   30a88:	sub	r3, r3, #11
   30a8c:	subs	r2, r3, #32
   30a90:	bge	30ab4 <flatcc_json_parser_struct_as_root@@Base+0x1518>
   30a94:	adds	r2, r2, #12
   30a98:	ble	30ab0 <flatcc_json_parser_struct_as_root@@Base+0x1514>
   30a9c:	add	ip, r2, #20
   30aa0:	rsb	r2, r2, #12
   30aa4:	lsl	r0, r1, ip
   30aa8:	lsr	r1, r1, r2
   30aac:	b	30ac4 <flatcc_json_parser_struct_as_root@@Base+0x1528>
   30ab0:	add	r2, r2, #20
   30ab4:	rsble	ip, r2, #32
   30ab8:	lsl	r1, r1, r2
   30abc:	orrle	r1, r1, r0, lsr ip
   30ac0:	lslle	r0, r0, r2
   30ac4:	subs	r4, r4, r3
   30ac8:	addge	r1, r1, r4, lsl #20
   30acc:	orrge	r1, r1, r5
   30ad0:	popge	{r4, r5, pc}
   30ad4:	mvn	r4, r4
   30ad8:	subs	r4, r4, #31
   30adc:	bge	30b18 <flatcc_json_parser_struct_as_root@@Base+0x157c>
   30ae0:	adds	r4, r4, #12
   30ae4:	bgt	30b00 <flatcc_json_parser_struct_as_root@@Base+0x1564>
   30ae8:	add	r4, r4, #20
   30aec:	rsb	r2, r4, #32
   30af0:	lsr	r0, r0, r4
   30af4:	orr	r0, r0, r1, lsl r2
   30af8:	orr	r1, r5, r1, lsr r4
   30afc:	pop	{r4, r5, pc}
   30b00:	rsb	r4, r4, #12
   30b04:	rsb	r2, r4, #32
   30b08:	lsr	r0, r0, r2
   30b0c:	orr	r0, r0, r1, lsl r4
   30b10:	mov	r1, r5
   30b14:	pop	{r4, r5, pc}
   30b18:	lsr	r0, r1, r4
   30b1c:	mov	r1, r5
   30b20:	pop	{r4, r5, pc}
   30b24:	teq	r4, #0
   30b28:	eor	r3, r3, #1048576	; 0x100000
   30b2c:	eoreq	r1, r1, #1048576	; 0x100000
   30b30:	addeq	r4, r4, #1
   30b34:	subne	r5, r5, #1
   30b38:	b	309c4 <flatcc_json_parser_struct_as_root@@Base+0x1428>
   30b3c:	mvns	ip, r4, asr #21
   30b40:	mvnsne	ip, r5, asr #21
   30b44:	beq	30bac <flatcc_json_parser_struct_as_root@@Base+0x1610>
   30b48:	teq	r4, r5
   30b4c:	teqeq	r0, r2
   30b50:	beq	30b64 <flatcc_json_parser_struct_as_root@@Base+0x15c8>
   30b54:	orrs	ip, r4, r0
   30b58:	moveq	r1, r3
   30b5c:	moveq	r0, r2
   30b60:	pop	{r4, r5, pc}
   30b64:	teq	r1, r3
   30b68:	movne	r1, #0
   30b6c:	movne	r0, #0
   30b70:	popne	{r4, r5, pc}
   30b74:	lsrs	ip, r4, #21
   30b78:	bne	30b8c <flatcc_json_parser_struct_as_root@@Base+0x15f0>
   30b7c:	lsls	r0, r0, #1
   30b80:	adcs	r1, r1, r1
   30b84:	orrcs	r1, r1, #-2147483648	; 0x80000000
   30b88:	pop	{r4, r5, pc}
   30b8c:	adds	r4, r4, #4194304	; 0x400000
   30b90:	addcc	r1, r1, #1048576	; 0x100000
   30b94:	popcc	{r4, r5, pc}
   30b98:	and	r5, r1, #-2147483648	; 0x80000000
   30b9c:	orr	r1, r5, #2130706432	; 0x7f000000
   30ba0:	orr	r1, r1, #15728640	; 0xf00000
   30ba4:	mov	r0, #0
   30ba8:	pop	{r4, r5, pc}
   30bac:	mvns	ip, r4, asr #21
   30bb0:	movne	r1, r3
   30bb4:	movne	r0, r2
   30bb8:	mvnseq	ip, r5, asr #21
   30bbc:	movne	r3, r1
   30bc0:	movne	r2, r0
   30bc4:	orrs	r4, r0, r1, lsl #12
   30bc8:	orrseq	r5, r2, r3, lsl #12
   30bcc:	teqeq	r1, r3
   30bd0:	orrne	r1, r1, #524288	; 0x80000
   30bd4:	pop	{r4, r5, pc}
   30bd8:	teq	r0, #0
   30bdc:	moveq	r1, #0
   30be0:	bxeq	lr
   30be4:	push	{r4, r5, lr}
   30be8:	mov	r4, #1024	; 0x400
   30bec:	add	r4, r4, #50	; 0x32
   30bf0:	mov	r5, #0
   30bf4:	mov	r1, #0
   30bf8:	b	30a74 <flatcc_json_parser_struct_as_root@@Base+0x14d8>
   30bfc:	teq	r0, #0
   30c00:	moveq	r1, #0
   30c04:	bxeq	lr
   30c08:	push	{r4, r5, lr}
   30c0c:	mov	r4, #1024	; 0x400
   30c10:	add	r4, r4, #50	; 0x32
   30c14:	ands	r5, r0, #-2147483648	; 0x80000000
   30c18:	rsbmi	r0, r0, #0
   30c1c:	mov	r1, #0
   30c20:	b	30a74 <flatcc_json_parser_struct_as_root@@Base+0x14d8>
   30c24:	lsls	r2, r0, #1
   30c28:	asr	r1, r2, #3
   30c2c:	rrx	r1, r1
   30c30:	lsl	r0, r2, #28
   30c34:	andsne	r3, r2, #-16777216	; 0xff000000
   30c38:	teqne	r3, #-16777216	; 0xff000000
   30c3c:	eorne	r1, r1, #939524096	; 0x38000000
   30c40:	bxne	lr
   30c44:	bics	r2, r2, #-16777216	; 0xff000000
   30c48:	bxeq	lr
   30c4c:	teq	r3, #-16777216	; 0xff000000
   30c50:	orreq	r1, r1, #524288	; 0x80000
   30c54:	bxeq	lr
   30c58:	push	{r4, r5, lr}
   30c5c:	mov	r4, #896	; 0x380
   30c60:	and	r5, r1, #-2147483648	; 0x80000000
   30c64:	bic	r1, r1, #-2147483648	; 0x80000000
   30c68:	b	30a74 <flatcc_json_parser_struct_as_root@@Base+0x14d8>
   30c6c:	orrs	r2, r0, r1
   30c70:	bxeq	lr
   30c74:	push	{r4, r5, lr}
   30c78:	mov	r5, #0
   30c7c:	b	30c9c <flatcc_json_parser_struct_as_root@@Base+0x1700>
   30c80:	orrs	r2, r0, r1
   30c84:	bxeq	lr
   30c88:	push	{r4, r5, lr}
   30c8c:	ands	r5, r1, #-2147483648	; 0x80000000
   30c90:	bpl	30c9c <flatcc_json_parser_struct_as_root@@Base+0x1700>
   30c94:	rsbs	r0, r0, #0
   30c98:	rsc	r1, r1, #0
   30c9c:	mov	r4, #1024	; 0x400
   30ca0:	add	r4, r4, #50	; 0x32
   30ca4:	lsrs	ip, r1, #22
   30ca8:	beq	30a18 <flatcc_json_parser_struct_as_root@@Base+0x147c>
   30cac:	mov	r2, #3
   30cb0:	lsrs	ip, ip, #3
   30cb4:	addne	r2, r2, #3
   30cb8:	lsrs	ip, ip, #3
   30cbc:	addne	r2, r2, #3
   30cc0:	add	r2, r2, ip, lsr #3
   30cc4:	rsb	r3, r2, #32
   30cc8:	lsl	ip, r0, r3
   30ccc:	lsr	r0, r0, r2
   30cd0:	orr	r0, r0, r1, lsl r3
   30cd4:	lsr	r1, r1, r2
   30cd8:	add	r4, r4, r2
   30cdc:	b	30a18 <flatcc_json_parser_struct_as_root@@Base+0x147c>
   30ce0:	eor	r0, r0, #-2147483648	; 0x80000000
   30ce4:	b	30cec <flatcc_json_parser_struct_as_root@@Base+0x1750>
   30ce8:	eor	r1, r1, #-2147483648	; 0x80000000
   30cec:	lsls	r2, r0, #1
   30cf0:	lslsne	r3, r1, #1
   30cf4:	teqne	r2, r3
   30cf8:	mvnsne	ip, r2, asr #24
   30cfc:	mvnsne	ip, r3, asr #24
   30d00:	beq	30df8 <flatcc_json_parser_struct_as_root@@Base+0x185c>
   30d04:	lsr	r2, r2, #24
   30d08:	rsbs	r3, r2, r3, lsr #24
   30d0c:	addgt	r2, r2, r3
   30d10:	eorgt	r1, r0, r1
   30d14:	eorgt	r0, r1, r0
   30d18:	eorgt	r1, r0, r1
   30d1c:	rsblt	r3, r3, #0
   30d20:	cmp	r3, #25
   30d24:	bxhi	lr
   30d28:	tst	r0, #-2147483648	; 0x80000000
   30d2c:	orr	r0, r0, #8388608	; 0x800000
   30d30:	bic	r0, r0, #-16777216	; 0xff000000
   30d34:	rsbne	r0, r0, #0
   30d38:	tst	r1, #-2147483648	; 0x80000000
   30d3c:	orr	r1, r1, #8388608	; 0x800000
   30d40:	bic	r1, r1, #-16777216	; 0xff000000
   30d44:	rsbne	r1, r1, #0
   30d48:	teq	r2, r3
   30d4c:	beq	30de0 <flatcc_json_parser_struct_as_root@@Base+0x1844>
   30d50:	sub	r2, r2, #1
   30d54:	adds	r0, r0, r1, asr r3
   30d58:	rsb	r3, r3, #32
   30d5c:	lsl	r1, r1, r3
   30d60:	and	r3, r0, #-2147483648	; 0x80000000
   30d64:	bpl	30d70 <flatcc_json_parser_struct_as_root@@Base+0x17d4>
   30d68:	rsbs	r1, r1, #0
   30d6c:	rsc	r0, r0, #0
   30d70:	cmp	r0, #8388608	; 0x800000
   30d74:	bcc	30da8 <flatcc_json_parser_struct_as_root@@Base+0x180c>
   30d78:	cmp	r0, #16777216	; 0x1000000
   30d7c:	bcc	30d94 <flatcc_json_parser_struct_as_root@@Base+0x17f8>
   30d80:	lsrs	r0, r0, #1
   30d84:	rrx	r1, r1
   30d88:	add	r2, r2, #1
   30d8c:	cmp	r2, #254	; 0xfe
   30d90:	bcs	30e4c <flatcc_json_parser_struct_as_root@@Base+0x18b0>
   30d94:	cmp	r1, #-2147483648	; 0x80000000
   30d98:	adc	r0, r0, r2, lsl #23
   30d9c:	biceq	r0, r0, #1
   30da0:	orr	r0, r0, r3
   30da4:	bx	lr
   30da8:	lsls	r1, r1, #1
   30dac:	adc	r0, r0, r0
   30db0:	tst	r0, #8388608	; 0x800000
   30db4:	sub	r2, r2, #1
   30db8:	bne	30d94 <flatcc_json_parser_struct_as_root@@Base+0x17f8>
   30dbc:	clz	ip, r0
   30dc0:	sub	ip, ip, #8
   30dc4:	subs	r2, r2, ip
   30dc8:	lsl	r0, r0, ip
   30dcc:	addge	r0, r0, r2, lsl #23
   30dd0:	rsblt	r2, r2, #0
   30dd4:	orrge	r0, r0, r3
   30dd8:	orrlt	r0, r3, r0, lsr r2
   30ddc:	bx	lr
   30de0:	teq	r2, #0
   30de4:	eor	r1, r1, #8388608	; 0x800000
   30de8:	eoreq	r0, r0, #8388608	; 0x800000
   30dec:	addeq	r2, r2, #1
   30df0:	subne	r3, r3, #1
   30df4:	b	30d50 <flatcc_json_parser_struct_as_root@@Base+0x17b4>
   30df8:	lsl	r3, r1, #1
   30dfc:	mvns	ip, r2, asr #24
   30e00:	mvnsne	ip, r3, asr #24
   30e04:	beq	30e58 <flatcc_json_parser_struct_as_root@@Base+0x18bc>
   30e08:	teq	r2, r3
   30e0c:	beq	30e1c <flatcc_json_parser_struct_as_root@@Base+0x1880>
   30e10:	teq	r2, #0
   30e14:	moveq	r0, r1
   30e18:	bx	lr
   30e1c:	teq	r0, r1
   30e20:	movne	r0, #0
   30e24:	bxne	lr
   30e28:	tst	r2, #-16777216	; 0xff000000
   30e2c:	bne	30e3c <flatcc_json_parser_struct_as_root@@Base+0x18a0>
   30e30:	lsls	r0, r0, #1
   30e34:	orrcs	r0, r0, #-2147483648	; 0x80000000
   30e38:	bx	lr
   30e3c:	adds	r2, r2, #33554432	; 0x2000000
   30e40:	addcc	r0, r0, #8388608	; 0x800000
   30e44:	bxcc	lr
   30e48:	and	r3, r0, #-2147483648	; 0x80000000
   30e4c:	orr	r0, r3, #2130706432	; 0x7f000000
   30e50:	orr	r0, r0, #8388608	; 0x800000
   30e54:	bx	lr
   30e58:	mvns	r2, r2, asr #24
   30e5c:	movne	r0, r1
   30e60:	mvnseq	r3, r3, asr #24
   30e64:	movne	r1, r0
   30e68:	lsls	r2, r0, #9
   30e6c:	lslseq	r3, r1, #9
   30e70:	teqeq	r0, r1
   30e74:	orrne	r0, r0, #4194304	; 0x400000
   30e78:	bx	lr
   30e7c:	mov	r3, #0
   30e80:	b	30e8c <flatcc_json_parser_struct_as_root@@Base+0x18f0>
   30e84:	ands	r3, r0, #-2147483648	; 0x80000000
   30e88:	rsbmi	r0, r0, #0
   30e8c:	movs	ip, r0
   30e90:	bxeq	lr
   30e94:	orr	r3, r3, #1258291200	; 0x4b000000
   30e98:	mov	r1, r0
   30e9c:	mov	r0, #0
   30ea0:	b	30ee4 <flatcc_json_parser_struct_as_root@@Base+0x1948>
   30ea4:	orrs	r2, r0, r1
   30ea8:	bxeq	lr
   30eac:	mov	r3, #0
   30eb0:	b	30ecc <flatcc_json_parser_struct_as_root@@Base+0x1930>
   30eb4:	orrs	r2, r0, r1
   30eb8:	bxeq	lr
   30ebc:	ands	r3, r1, #-2147483648	; 0x80000000
   30ec0:	bpl	30ecc <flatcc_json_parser_struct_as_root@@Base+0x1930>
   30ec4:	rsbs	r0, r0, #0
   30ec8:	rsc	r1, r1, #0
   30ecc:	movs	ip, r1
   30ed0:	moveq	ip, r0
   30ed4:	moveq	r1, r0
   30ed8:	moveq	r0, #0
   30edc:	orr	r3, r3, #1526726656	; 0x5b000000
   30ee0:	subeq	r3, r3, #268435456	; 0x10000000
   30ee4:	sub	r3, r3, #8388608	; 0x800000
   30ee8:	clz	r2, ip
   30eec:	subs	r2, r2, #8
   30ef0:	sub	r3, r3, r2, lsl #23
   30ef4:	blt	30f14 <flatcc_json_parser_struct_as_root@@Base+0x1978>
   30ef8:	add	r3, r3, r1, lsl r2
   30efc:	lsl	ip, r0, r2
   30f00:	rsb	r2, r2, #32
   30f04:	cmp	ip, #-2147483648	; 0x80000000
   30f08:	adc	r0, r3, r0, lsr r2
   30f0c:	biceq	r0, r0, #1
   30f10:	bx	lr
   30f14:	add	r2, r2, #32
   30f18:	lsl	ip, r1, r2
   30f1c:	rsb	r2, r2, #32
   30f20:	orrs	r0, r0, ip, lsl #1
   30f24:	adc	r0, r3, r1, lsr r2
   30f28:	biceq	r0, r0, ip, lsr #31
   30f2c:	bx	lr

00030f30 <__libc_csu_init@@Base>:
   30f30:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   30f34:	mov	r7, r0
   30f38:	ldr	r6, [pc, #72]	; 30f88 <__libc_csu_init@@Base+0x58>
   30f3c:	ldr	r5, [pc, #72]	; 30f8c <__libc_csu_init@@Base+0x5c>
   30f40:	add	r6, pc, r6
   30f44:	add	r5, pc, r5
   30f48:	sub	r6, r6, r5
   30f4c:	mov	r8, r1
   30f50:	mov	r9, r2
   30f54:	bl	12a40 <fopen@plt-0x20>
   30f58:	asrs	r6, r6, #2
   30f5c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   30f60:	mov	r4, #0
   30f64:	add	r4, r4, #1
   30f68:	ldr	r3, [r5], #4
   30f6c:	mov	r2, r9
   30f70:	mov	r1, r8
   30f74:	mov	r0, r7
   30f78:	blx	r3
   30f7c:	cmp	r6, r4
   30f80:	bne	30f64 <__libc_csu_init@@Base+0x34>
   30f84:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   30f88:	andeq	r2, r1, r4, asr #31
   30f8c:			; <UNDEFINED> instruction: 0x00012fbc

00030f90 <__libc_csu_fini@@Base>:
   30f90:	bx	lr

Disassembly of section .fini:

00030f94 <.fini>:
   30f94:	push	{r3, lr}
   30f98:	pop	{r3, pc}
