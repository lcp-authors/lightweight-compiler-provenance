
../repos/Snaipe-Mimick-1dc4659/test/mmk_test:     file format elf32-littlearm


Disassembly of section .init:

000114d8 <.init>:
   114d8:	push	{r3, lr}
   114dc:	bl	1163c <_start@@Base+0x3c>
   114e0:	pop	{r3, pc}

Disassembly of section .plt:

000114e4 <strstr@plt-0x14>:
   114e4:	push	{lr}		; (str lr, [sp, #-4]!)
   114e8:	ldr	lr, [pc, #4]	; 114f4 <strstr@plt-0x4>
   114ec:	add	lr, pc, lr
   114f0:	ldr	pc, [lr, #8]!
   114f4:	andeq	r5, r1, ip, lsl #22

000114f8 <strstr@plt>:
   114f8:	add	ip, pc, #0, 12
   114fc:	add	ip, ip, #86016	; 0x15000
   11500:	ldr	pc, [ip, #2828]!	; 0xb0c

00011504 <strcmp@plt>:
   11504:	add	ip, pc, #0, 12
   11508:	add	ip, ip, #86016	; 0x15000
   1150c:	ldr	pc, [ip, #2820]!	; 0xb04

00011510 <mprotect@plt>:
   11510:	add	ip, pc, #0, 12
   11514:	add	ip, ip, #86016	; 0x15000
   11518:	ldr	pc, [ip, #2812]!	; 0xafc

0001151c <free@plt>:
   1151c:	add	ip, pc, #0, 12
   11520:	add	ip, ip, #86016	; 0x15000
   11524:	ldr	pc, [ip, #2804]!	; 0xaf4

00011528 <memcpy@plt>:
   11528:	add	ip, pc, #0, 12
   1152c:	add	ip, ip, #86016	; 0x15000
   11530:	ldr	pc, [ip, #2796]!	; 0xaec

00011534 <fn_vv@plt>:
   11534:	add	ip, pc, #0, 12
   11538:	add	ip, ip, #86016	; 0x15000
   1153c:	ldr	pc, [ip, #2788]!	; 0xae4

00011540 <realloc@plt>:
   11540:	add	ip, pc, #0, 12
   11544:	add	ip, ip, #86016	; 0x15000
   11548:	ldr	pc, [ip, #2780]!	; 0xadc

0001154c <fn_ii@plt>:
   1154c:	add	ip, pc, #0, 12
   11550:	add	ip, ip, #86016	; 0x15000
   11554:	ldr	pc, [ip, #2772]!	; 0xad4

00011558 <fn_ii_va@plt>:
   11558:	add	ip, pc, #0, 12
   1155c:	add	ip, ip, #86016	; 0x15000
   11560:	ldr	pc, [ip, #2764]!	; 0xacc

00011564 <malloc@plt>:
   11564:	add	ip, pc, #0, 12
   11568:	add	ip, ip, #86016	; 0x15000
   1156c:	ldr	pc, [ip, #2756]!	; 0xac4

00011570 <__libc_start_main@plt>:
   11570:	add	ip, pc, #0, 12
   11574:	add	ip, ip, #86016	; 0x15000
   11578:	ldr	pc, [ip, #2748]!	; 0xabc

0001157c <__gmon_start__@plt>:
   1157c:	add	ip, pc, #0, 12
   11580:	add	ip, ip, #86016	; 0x15000
   11584:	ldr	pc, [ip, #2740]!	; 0xab4

00011588 <strlen@plt>:
   11588:	add	ip, pc, #0, 12
   1158c:	add	ip, ip, #86016	; 0x15000
   11590:	ldr	pc, [ip, #2732]!	; 0xaac

00011594 <mmap@plt>:
   11594:	add	ip, pc, #0, 12
   11598:	add	ip, ip, #86016	; 0x15000
   1159c:	ldr	pc, [ip, #2724]!	; 0xaa4

000115a0 <strchr@plt>:
   115a0:	add	ip, pc, #0, 12
   115a4:	add	ip, ip, #86016	; 0x15000
   115a8:	ldr	pc, [ip, #2716]!	; 0xa9c

000115ac <fprintf@plt>:
   115ac:	add	ip, pc, #0, 12
   115b0:	add	ip, ip, #86016	; 0x15000
   115b4:	ldr	pc, [ip, #2708]!	; 0xa94

000115b8 <__errno_location@plt>:
   115b8:	add	ip, pc, #0, 12
   115bc:	add	ip, ip, #86016	; 0x15000
   115c0:	ldr	pc, [ip, #2700]!	; 0xa8c

000115c4 <snprintf@plt>:
   115c4:	add	ip, pc, #0, 12
   115c8:	add	ip, ip, #86016	; 0x15000
   115cc:	ldr	pc, [ip, #2692]!	; 0xa84

000115d0 <munmap@plt>:
   115d0:	add	ip, pc, #0, 12
   115d4:	add	ip, ip, #86016	; 0x15000
   115d8:	ldr	pc, [ip, #2684]!	; 0xa7c

000115dc <__tls_get_addr@plt>:
   115dc:	add	ip, pc, #0, 12
   115e0:	add	ip, ip, #86016	; 0x15000
   115e4:	ldr	pc, [ip, #2676]!	; 0xa74

000115e8 <strncmp@plt>:
   115e8:	add	ip, pc, #0, 12
   115ec:	add	ip, ip, #86016	; 0x15000
   115f0:	ldr	pc, [ip, #2668]!	; 0xa6c

000115f4 <abort@plt>:
   115f4:	add	ip, pc, #0, 12
   115f8:	add	ip, ip, #86016	; 0x15000
   115fc:	ldr	pc, [ip, #2660]!	; 0xa64

Disassembly of section .text:

00011600 <_start@@Base>:
   11600:	mov	fp, #0
   11604:	mov	lr, #0
   11608:	pop	{r1}		; (ldr r1, [sp], #4)
   1160c:	mov	r2, sp
   11610:	push	{r2}		; (str r2, [sp, #-4]!)
   11614:	push	{r0}		; (str r0, [sp, #-4]!)
   11618:	ldr	ip, [pc, #16]	; 11630 <_start@@Base+0x30>
   1161c:	push	{ip}		; (str ip, [sp, #-4]!)
   11620:	ldr	r0, [pc, #12]	; 11634 <_start@@Base+0x34>
   11624:	ldr	r3, [pc, #12]	; 11638 <_start@@Base+0x38>
   11628:	bl	11570 <__libc_start_main@plt>
   1162c:	bl	115f4 <abort@plt>
   11630:	strdeq	r5, [r1], -ip
   11634:	andeq	r1, r1, r8, lsl #14
   11638:	muleq	r1, ip, ip
   1163c:	ldr	r3, [pc, #20]	; 11658 <_start@@Base+0x58>
   11640:	ldr	r2, [pc, #20]	; 1165c <_start@@Base+0x5c>
   11644:	add	r3, pc, r3
   11648:	ldr	r2, [r3, r2]
   1164c:	cmp	r2, #0
   11650:	bxeq	lr
   11654:	b	1157c <__gmon_start__@plt>
   11658:			; <UNDEFINED> instruction: 0x000159b4
   1165c:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
   11660:	ldr	r0, [pc, #24]	; 11680 <_start@@Base+0x80>
   11664:	ldr	r3, [pc, #24]	; 11684 <_start@@Base+0x84>
   11668:	cmp	r3, r0
   1166c:	bxeq	lr
   11670:	ldr	r3, [pc, #16]	; 11688 <_start@@Base+0x88>
   11674:	cmp	r3, #0
   11678:	bxeq	lr
   1167c:	bx	r3
   11680:	ldrdeq	r7, [r2], -r8
   11684:	ldrdeq	r7, [r2], -r8
   11688:	andeq	r0, r0, r0
   1168c:	ldr	r0, [pc, #36]	; 116b8 <_start@@Base+0xb8>
   11690:	ldr	r1, [pc, #36]	; 116bc <_start@@Base+0xbc>
   11694:	sub	r1, r1, r0
   11698:	asr	r1, r1, #2
   1169c:	add	r1, r1, r1, lsr #31
   116a0:	asrs	r1, r1, #1
   116a4:	bxeq	lr
   116a8:	ldr	r3, [pc, #16]	; 116c0 <_start@@Base+0xc0>
   116ac:	cmp	r3, #0
   116b0:	bxeq	lr
   116b4:	bx	r3
   116b8:	ldrdeq	r7, [r2], -r8
   116bc:	ldrdeq	r7, [r2], -r8
   116c0:	andeq	r0, r0, r0
   116c4:	push	{r4, lr}
   116c8:	ldr	r4, [pc, #24]	; 116e8 <_start@@Base+0xe8>
   116cc:	ldrb	r3, [r4]
   116d0:	cmp	r3, #0
   116d4:	popne	{r4, pc}
   116d8:	bl	11660 <_start@@Base+0x60>
   116dc:	mov	r3, #1
   116e0:	strb	r3, [r4]
   116e4:	pop	{r4, pc}
   116e8:	ldrdeq	r7, [r2], -r8
   116ec:	b	1168c <_start@@Base+0x8c>

000116f0 <set_valid@@Base>:
   116f0:	ldr	r0, [pc, #12]	; 11704 <set_valid@@Base+0x14>
   116f4:	add	r0, pc, r0
   116f8:	movw	r1, #1
   116fc:	str	r1, [r0]
   11700:	bx	lr
   11704:	andeq	r5, r1, r0, ror #19

00011708 <main@@Base>:
   11708:	push	{r4, r5, fp, lr}
   1170c:	add	fp, sp, #8
   11710:	sub	sp, sp, #672	; 0x2a0
   11714:	ldr	r0, [pc, #3016]	; 122e4 <main@@Base+0xbdc>
   11718:	add	r0, pc, r0
   1171c:	movw	r1, #0
   11720:	str	r1, [fp, #-12]
   11724:	bl	12444 <main@@Base+0xd3c>
   11728:	movw	r1, #0
   1172c:	str	r0, [sp, #204]	; 0xcc
   11730:	mov	r0, r1
   11734:	bl	1394c <mmk_matcher_init@@Base>
   11738:	ldr	r0, [pc, #2976]	; 122e0 <main@@Base+0xbd8>
   1173c:	ldr	r0, [pc, r0]
   11740:	sub	r1, fp, #32
   11744:	mov	r2, r1
   11748:	vmov.i32	q8, #0	; 0x00000000
   1174c:	vst1.32	{d16-d17}, [r2]!
   11750:	mov	r3, #0
   11754:	str	r3, [r2]
   11758:	str	r0, [fp, #-20]	; 0xffffffec
   1175c:	mov	r0, r1
   11760:	bl	15b94 <mmk_when_init@@Base>
   11764:	bl	11534 <fn_vv@plt>
   11768:	bl	139bc <mmk_matcher_term@@Base>
   1176c:	movw	r0, #1
   11770:	bl	1394c <mmk_matcher_init@@Base>
   11774:	bl	11534 <fn_vv@plt>
   11778:	bl	139bc <mmk_matcher_term@@Base>
   1177c:	movw	r0, #1
   11780:	str	r0, [fp, #-56]	; 0xffffffc8
   11784:	str	r0, [fp, #-52]	; 0xffffffcc
   11788:	movw	r0, #0
   1178c:	str	r0, [fp, #-48]	; 0xffffffd0
   11790:	str	r0, [fp, #-44]	; 0xffffffd4
   11794:	str	r0, [fp, #-40]	; 0xffffffd8
   11798:	str	r0, [fp, #-36]	; 0xffffffdc
   1179c:	sub	r0, fp, #56	; 0x38
   117a0:	bl	15074 <mmk_verify_times@@Base>
   117a4:	cmp	r0, #0
   117a8:	bne	117f0 <main@@Base+0xe8>
   117ac:	ldr	r0, [pc, #2868]	; 122e8 <main@@Base+0xbe0>
   117b0:	add	r1, pc, r0
   117b4:	ldr	r0, [pc, #2864]	; 122ec <main@@Base+0xbe4>
   117b8:	add	r2, pc, r0
   117bc:	ldr	r0, [pc, #2860]	; 122f0 <main@@Base+0xbe8>
   117c0:	add	r0, pc, r0
   117c4:	ldr	r3, [pc, #2856]	; 122f4 <main@@Base+0xbec>
   117c8:	ldr	r3, [pc, r3]
   117cc:	ldr	r3, [r3]
   117d0:	str	r0, [sp, #200]	; 0xc8
   117d4:	mov	r0, r3
   117d8:	movw	r3, #42	; 0x2a
   117dc:	ldr	ip, [sp, #200]	; 0xc8
   117e0:	str	ip, [sp]
   117e4:	bl	115ac <fprintf@plt>
   117e8:	str	r0, [sp, #196]	; 0xc4
   117ec:	bl	115f4 <abort@plt>
   117f0:	b	117f4 <main@@Base+0xec>
   117f4:	b	117f8 <main@@Base+0xf0>
   117f8:	movw	r0, #1
   117fc:	bl	1394c <mmk_matcher_init@@Base>
   11800:	bl	11534 <fn_vv@plt>
   11804:	bl	139bc <mmk_matcher_term@@Base>
   11808:	movw	r0, #1
   1180c:	str	r0, [fp, #-80]	; 0xffffffb0
   11810:	movw	r1, #0
   11814:	str	r1, [fp, #-76]	; 0xffffffb4
   11818:	str	r1, [fp, #-72]	; 0xffffffb8
   1181c:	str	r0, [fp, #-68]	; 0xffffffbc
   11820:	str	r1, [fp, #-64]	; 0xffffffc0
   11824:	str	r1, [fp, #-60]	; 0xffffffc4
   11828:	sub	r0, fp, #80	; 0x50
   1182c:	bl	15074 <mmk_verify_times@@Base>
   11830:	cmp	r0, #0
   11834:	bne	1187c <main@@Base+0x174>
   11838:	ldr	r0, [pc, #2744]	; 122f8 <main@@Base+0xbf0>
   1183c:	add	r1, pc, r0
   11840:	ldr	r0, [pc, #2740]	; 122fc <main@@Base+0xbf4>
   11844:	add	r2, pc, r0
   11848:	ldr	r0, [pc, #2736]	; 12300 <main@@Base+0xbf8>
   1184c:	add	r0, pc, r0
   11850:	ldr	r3, [pc, #2732]	; 12304 <main@@Base+0xbfc>
   11854:	ldr	r3, [pc, r3]
   11858:	ldr	r3, [r3]
   1185c:	str	r0, [sp, #192]	; 0xc0
   11860:	mov	r0, r3
   11864:	movw	r3, #43	; 0x2b
   11868:	ldr	ip, [sp, #192]	; 0xc0
   1186c:	str	ip, [sp]
   11870:	bl	115ac <fprintf@plt>
   11874:	str	r0, [sp, #188]	; 0xbc
   11878:	bl	115f4 <abort@plt>
   1187c:	b	11880 <main@@Base+0x178>
   11880:	b	11884 <main@@Base+0x17c>
   11884:	movw	r0, #1
   11888:	bl	1394c <mmk_matcher_init@@Base>
   1188c:	bl	11534 <fn_vv@plt>
   11890:	bl	139bc <mmk_matcher_term@@Base>
   11894:	movw	r0, #1
   11898:	str	r0, [fp, #-104]	; 0xffffff98
   1189c:	movw	r1, #0
   118a0:	str	r1, [fp, #-100]	; 0xffffff9c
   118a4:	str	r1, [fp, #-96]	; 0xffffffa0
   118a8:	str	r1, [fp, #-92]	; 0xffffffa4
   118ac:	str	r0, [fp, #-88]	; 0xffffffa8
   118b0:	str	r1, [fp, #-84]	; 0xffffffac
   118b4:	sub	r0, fp, #104	; 0x68
   118b8:	bl	15074 <mmk_verify_times@@Base>
   118bc:	cmp	r0, #0
   118c0:	beq	11908 <main@@Base+0x200>
   118c4:	ldr	r0, [pc, #2920]	; 12434 <main@@Base+0xd2c>
   118c8:	add	r1, pc, r0
   118cc:	ldr	r0, [pc, #2916]	; 12438 <main@@Base+0xd30>
   118d0:	add	r2, pc, r0
   118d4:	ldr	r0, [pc, #2912]	; 1243c <main@@Base+0xd34>
   118d8:	add	r0, pc, r0
   118dc:	ldr	r3, [pc, #2908]	; 12440 <main@@Base+0xd38>
   118e0:	ldr	r3, [pc, r3]
   118e4:	ldr	r3, [r3]
   118e8:	str	r0, [sp, #184]	; 0xb8
   118ec:	mov	r0, r3
   118f0:	movw	r3, #45	; 0x2d
   118f4:	ldr	ip, [sp, #184]	; 0xb8
   118f8:	str	ip, [sp]
   118fc:	bl	115ac <fprintf@plt>
   11900:	str	r0, [sp, #180]	; 0xb4
   11904:	bl	115f4 <abort@plt>
   11908:	b	1190c <main@@Base+0x204>
   1190c:	b	11910 <main@@Base+0x208>
   11910:	movw	r0, #1
   11914:	bl	1394c <mmk_matcher_init@@Base>
   11918:	bl	11534 <fn_vv@plt>
   1191c:	bl	139bc <mmk_matcher_term@@Base>
   11920:	movw	r0, #1
   11924:	str	r0, [fp, #-128]	; 0xffffff80
   11928:	movw	r1, #0
   1192c:	str	r1, [fp, #-124]	; 0xffffff84
   11930:	str	r0, [fp, #-120]	; 0xffffff88
   11934:	str	r1, [fp, #-116]	; 0xffffff8c
   11938:	str	r1, [fp, #-112]	; 0xffffff90
   1193c:	str	r1, [fp, #-108]	; 0xffffff94
   11940:	sub	r0, fp, #128	; 0x80
   11944:	bl	15074 <mmk_verify_times@@Base>
   11948:	cmp	r0, #0
   1194c:	beq	11994 <main@@Base+0x28c>
   11950:	ldr	r0, [pc, #2764]	; 12424 <main@@Base+0xd1c>
   11954:	add	r1, pc, r0
   11958:	ldr	r0, [pc, #2760]	; 12428 <main@@Base+0xd20>
   1195c:	add	r2, pc, r0
   11960:	ldr	r0, [pc, #2756]	; 1242c <main@@Base+0xd24>
   11964:	add	r0, pc, r0
   11968:	ldr	r3, [pc, #2752]	; 12430 <main@@Base+0xd28>
   1196c:	ldr	r3, [pc, r3]
   11970:	ldr	r3, [r3]
   11974:	str	r0, [sp, #176]	; 0xb0
   11978:	mov	r0, r3
   1197c:	movw	r3, #46	; 0x2e
   11980:	ldr	ip, [sp, #176]	; 0xb0
   11984:	str	ip, [sp]
   11988:	bl	115ac <fprintf@plt>
   1198c:	str	r0, [sp, #172]	; 0xac
   11990:	bl	115f4 <abort@plt>
   11994:	b	11998 <main@@Base+0x290>
   11998:	b	1199c <main@@Base+0x294>
   1199c:	movw	r0, #1
   119a0:	bl	1394c <mmk_matcher_init@@Base>
   119a4:	bl	11534 <fn_vv@plt>
   119a8:	bl	139bc <mmk_matcher_term@@Base>
   119ac:	movw	r0, #1
   119b0:	str	r0, [fp, #-152]	; 0xffffff68
   119b4:	movw	r1, #0
   119b8:	str	r1, [fp, #-148]	; 0xffffff6c
   119bc:	str	r0, [fp, #-144]	; 0xffffff70
   119c0:	str	r0, [fp, #-140]	; 0xffffff74
   119c4:	str	r1, [fp, #-136]	; 0xffffff78
   119c8:	str	r1, [fp, #-132]	; 0xffffff7c
   119cc:	sub	r0, fp, #152	; 0x98
   119d0:	bl	15074 <mmk_verify_times@@Base>
   119d4:	cmp	r0, #0
   119d8:	beq	11a20 <main@@Base+0x318>
   119dc:	ldr	r0, [pc, #2608]	; 12414 <main@@Base+0xd0c>
   119e0:	add	r1, pc, r0
   119e4:	ldr	r0, [pc, #2604]	; 12418 <main@@Base+0xd10>
   119e8:	add	r2, pc, r0
   119ec:	ldr	r0, [pc, #2600]	; 1241c <main@@Base+0xd14>
   119f0:	add	r0, pc, r0
   119f4:	ldr	r3, [pc, #2596]	; 12420 <main@@Base+0xd18>
   119f8:	ldr	r3, [pc, r3]
   119fc:	ldr	r3, [r3]
   11a00:	str	r0, [sp, #168]	; 0xa8
   11a04:	mov	r0, r3
   11a08:	movw	r3, #47	; 0x2f
   11a0c:	ldr	ip, [sp, #168]	; 0xa8
   11a10:	str	ip, [sp]
   11a14:	bl	115ac <fprintf@plt>
   11a18:	str	r0, [sp, #164]	; 0xa4
   11a1c:	bl	115f4 <abort@plt>
   11a20:	b	11a24 <main@@Base+0x31c>
   11a24:	bl	11534 <fn_vv@plt>
   11a28:	ldr	r0, [pc, #2264]	; 12308 <main@@Base+0xc00>
   11a2c:	add	r0, pc, r0
   11a30:	ldr	r0, [r0]
   11a34:	cmp	r0, #0
   11a38:	bne	11a80 <main@@Base+0x378>
   11a3c:	ldr	r0, [pc, #2248]	; 1230c <main@@Base+0xc04>
   11a40:	add	r1, pc, r0
   11a44:	ldr	r0, [pc, #2244]	; 12310 <main@@Base+0xc08>
   11a48:	add	r2, pc, r0
   11a4c:	ldr	r0, [pc, #2240]	; 12314 <main@@Base+0xc0c>
   11a50:	add	r0, pc, r0
   11a54:	ldr	r3, [pc, #2236]	; 12318 <main@@Base+0xc10>
   11a58:	ldr	r3, [pc, r3]
   11a5c:	ldr	r3, [r3]
   11a60:	str	r0, [sp, #160]	; 0xa0
   11a64:	mov	r0, r3
   11a68:	movw	r3, #50	; 0x32
   11a6c:	ldr	ip, [sp, #160]	; 0xa0
   11a70:	str	ip, [sp]
   11a74:	bl	115ac <fprintf@plt>
   11a78:	str	r0, [sp, #156]	; 0x9c
   11a7c:	bl	115f4 <abort@plt>
   11a80:	b	11a84 <main@@Base+0x37c>
   11a84:	b	11a88 <main@@Base+0x380>
   11a88:	movw	r0, #1
   11a8c:	bl	1394c <mmk_matcher_init@@Base>
   11a90:	bl	11534 <fn_vv@plt>
   11a94:	bl	139bc <mmk_matcher_term@@Base>
   11a98:	movw	r0, #1
   11a9c:	str	r0, [fp, #-176]	; 0xffffff50
   11aa0:	movw	r1, #0
   11aa4:	str	r1, [fp, #-172]	; 0xffffff54
   11aa8:	str	r1, [fp, #-168]	; 0xffffff58
   11aac:	str	r1, [fp, #-164]	; 0xffffff5c
   11ab0:	str	r0, [fp, #-160]	; 0xffffff60
   11ab4:	str	r1, [fp, #-156]	; 0xffffff64
   11ab8:	sub	r0, fp, #176	; 0xb0
   11abc:	bl	15074 <mmk_verify_times@@Base>
   11ac0:	cmp	r0, #0
   11ac4:	bne	11b0c <main@@Base+0x404>
   11ac8:	ldr	r0, [pc, #2124]	; 1231c <main@@Base+0xc14>
   11acc:	add	r1, pc, r0
   11ad0:	ldr	r0, [pc, #2120]	; 12320 <main@@Base+0xc18>
   11ad4:	add	r2, pc, r0
   11ad8:	ldr	r0, [pc, #2116]	; 12324 <main@@Base+0xc1c>
   11adc:	add	r0, pc, r0
   11ae0:	ldr	r3, [pc, #2112]	; 12328 <main@@Base+0xc20>
   11ae4:	ldr	r3, [pc, r3]
   11ae8:	ldr	r3, [r3]
   11aec:	str	r0, [sp, #152]	; 0x98
   11af0:	mov	r0, r3
   11af4:	movw	r3, #51	; 0x33
   11af8:	ldr	ip, [sp, #152]	; 0x98
   11afc:	str	ip, [sp]
   11b00:	bl	115ac <fprintf@plt>
   11b04:	str	r0, [sp, #148]	; 0x94
   11b08:	bl	115f4 <abort@plt>
   11b0c:	b	11b10 <main@@Base+0x408>
   11b10:	b	11b14 <main@@Base+0x40c>
   11b14:	movw	r0, #1
   11b18:	bl	1394c <mmk_matcher_init@@Base>
   11b1c:	bl	11534 <fn_vv@plt>
   11b20:	bl	139bc <mmk_matcher_term@@Base>
   11b24:	movw	r0, #1
   11b28:	str	r0, [fp, #-200]	; 0xffffff38
   11b2c:	movw	r1, #0
   11b30:	str	r1, [fp, #-196]	; 0xffffff3c
   11b34:	str	r0, [fp, #-192]	; 0xffffff40
   11b38:	str	r1, [fp, #-188]	; 0xffffff44
   11b3c:	str	r1, [fp, #-184]	; 0xffffff48
   11b40:	str	r1, [fp, #-180]	; 0xffffff4c
   11b44:	sub	r0, fp, #200	; 0xc8
   11b48:	bl	15074 <mmk_verify_times@@Base>
   11b4c:	cmp	r0, #0
   11b50:	bne	11b98 <main@@Base+0x490>
   11b54:	ldr	r0, [pc, #2000]	; 1232c <main@@Base+0xc24>
   11b58:	add	r1, pc, r0
   11b5c:	ldr	r0, [pc, #1996]	; 12330 <main@@Base+0xc28>
   11b60:	add	r2, pc, r0
   11b64:	ldr	r0, [pc, #1992]	; 12334 <main@@Base+0xc2c>
   11b68:	add	r0, pc, r0
   11b6c:	ldr	r3, [pc, #1988]	; 12338 <main@@Base+0xc30>
   11b70:	ldr	r3, [pc, r3]
   11b74:	ldr	r3, [r3]
   11b78:	str	r0, [sp, #144]	; 0x90
   11b7c:	mov	r0, r3
   11b80:	movw	r3, #52	; 0x34
   11b84:	ldr	ip, [sp, #144]	; 0x90
   11b88:	str	ip, [sp]
   11b8c:	bl	115ac <fprintf@plt>
   11b90:	str	r0, [sp, #140]	; 0x8c
   11b94:	bl	115f4 <abort@plt>
   11b98:	b	11b9c <main@@Base+0x494>
   11b9c:	b	11ba0 <main@@Base+0x498>
   11ba0:	movw	r0, #1
   11ba4:	bl	1394c <mmk_matcher_init@@Base>
   11ba8:	bl	11534 <fn_vv@plt>
   11bac:	bl	139bc <mmk_matcher_term@@Base>
   11bb0:	movw	r0, #1
   11bb4:	str	r0, [fp, #-224]	; 0xffffff20
   11bb8:	movw	r1, #0
   11bbc:	str	r1, [fp, #-220]	; 0xffffff24
   11bc0:	str	r1, [fp, #-216]	; 0xffffff28
   11bc4:	str	r0, [fp, #-212]	; 0xffffff2c
   11bc8:	str	r1, [fp, #-208]	; 0xffffff30
   11bcc:	str	r1, [fp, #-204]	; 0xffffff34
   11bd0:	sub	r0, fp, #224	; 0xe0
   11bd4:	bl	15074 <mmk_verify_times@@Base>
   11bd8:	cmp	r0, #0
   11bdc:	bne	11c24 <main@@Base+0x51c>
   11be0:	ldr	r0, [pc, #1876]	; 1233c <main@@Base+0xc34>
   11be4:	add	r1, pc, r0
   11be8:	ldr	r0, [pc, #1872]	; 12340 <main@@Base+0xc38>
   11bec:	add	r2, pc, r0
   11bf0:	ldr	r0, [pc, #1868]	; 12344 <main@@Base+0xc3c>
   11bf4:	add	r0, pc, r0
   11bf8:	ldr	r3, [pc, #1864]	; 12348 <main@@Base+0xc40>
   11bfc:	ldr	r3, [pc, r3]
   11c00:	ldr	r3, [r3]
   11c04:	str	r0, [sp, #136]	; 0x88
   11c08:	mov	r0, r3
   11c0c:	movw	r3, #53	; 0x35
   11c10:	ldr	ip, [sp, #136]	; 0x88
   11c14:	str	ip, [sp]
   11c18:	bl	115ac <fprintf@plt>
   11c1c:	str	r0, [sp, #132]	; 0x84
   11c20:	bl	115f4 <abort@plt>
   11c24:	b	11c28 <main@@Base+0x520>
   11c28:	b	11c2c <main@@Base+0x524>
   11c2c:	movw	r0, #1
   11c30:	bl	1394c <mmk_matcher_init@@Base>
   11c34:	bl	11534 <fn_vv@plt>
   11c38:	bl	139bc <mmk_matcher_term@@Base>
   11c3c:	movw	r0, #1
   11c40:	str	r0, [fp, #-248]	; 0xffffff08
   11c44:	movw	r1, #0
   11c48:	str	r1, [fp, #-244]	; 0xffffff0c
   11c4c:	str	r0, [fp, #-240]	; 0xffffff10
   11c50:	str	r0, [fp, #-236]	; 0xffffff14
   11c54:	str	r1, [fp, #-232]	; 0xffffff18
   11c58:	str	r1, [fp, #-228]	; 0xffffff1c
   11c5c:	sub	r0, fp, #248	; 0xf8
   11c60:	bl	15074 <mmk_verify_times@@Base>
   11c64:	cmp	r0, #0
   11c68:	bne	11cb0 <main@@Base+0x5a8>
   11c6c:	ldr	r0, [pc, #1752]	; 1234c <main@@Base+0xc44>
   11c70:	add	r1, pc, r0
   11c74:	ldr	r0, [pc, #1748]	; 12350 <main@@Base+0xc48>
   11c78:	add	r2, pc, r0
   11c7c:	ldr	r0, [pc, #1744]	; 12354 <main@@Base+0xc4c>
   11c80:	add	r0, pc, r0
   11c84:	ldr	r3, [pc, #1740]	; 12358 <main@@Base+0xc50>
   11c88:	ldr	r3, [pc, r3]
   11c8c:	ldr	r3, [r3]
   11c90:	str	r0, [sp, #128]	; 0x80
   11c94:	mov	r0, r3
   11c98:	movw	r3, #54	; 0x36
   11c9c:	ldr	ip, [sp, #128]	; 0x80
   11ca0:	str	ip, [sp]
   11ca4:	bl	115ac <fprintf@plt>
   11ca8:	str	r0, [sp, #124]	; 0x7c
   11cac:	bl	115f4 <abort@plt>
   11cb0:	b	11cb4 <main@@Base+0x5ac>
   11cb4:	b	11cb8 <main@@Base+0x5b0>
   11cb8:	movw	r0, #1
   11cbc:	bl	1394c <mmk_matcher_init@@Base>
   11cc0:	bl	11534 <fn_vv@plt>
   11cc4:	bl	139bc <mmk_matcher_term@@Base>
   11cc8:	movw	r0, #1
   11ccc:	str	r0, [fp, #-272]	; 0xfffffef0
   11cd0:	str	r0, [fp, #-268]	; 0xfffffef4
   11cd4:	movw	r0, #0
   11cd8:	str	r0, [fp, #-264]	; 0xfffffef8
   11cdc:	str	r0, [fp, #-260]	; 0xfffffefc
   11ce0:	str	r0, [fp, #-256]	; 0xffffff00
   11ce4:	str	r0, [fp, #-252]	; 0xffffff04
   11ce8:	sub	r0, fp, #272	; 0x110
   11cec:	bl	15074 <mmk_verify_times@@Base>
   11cf0:	cmp	r0, #0
   11cf4:	beq	11d3c <main@@Base+0x634>
   11cf8:	ldr	r0, [pc, #1796]	; 12404 <main@@Base+0xcfc>
   11cfc:	add	r1, pc, r0
   11d00:	ldr	r0, [pc, #1792]	; 12408 <main@@Base+0xd00>
   11d04:	add	r2, pc, r0
   11d08:	ldr	r0, [pc, #1788]	; 1240c <main@@Base+0xd04>
   11d0c:	add	r0, pc, r0
   11d10:	ldr	r3, [pc, #1784]	; 12410 <main@@Base+0xd08>
   11d14:	ldr	r3, [pc, r3]
   11d18:	ldr	r3, [r3]
   11d1c:	str	r0, [sp, #120]	; 0x78
   11d20:	mov	r0, r3
   11d24:	movw	r3, #55	; 0x37
   11d28:	ldr	ip, [sp, #120]	; 0x78
   11d2c:	str	ip, [sp]
   11d30:	bl	115ac <fprintf@plt>
   11d34:	str	r0, [sp, #116]	; 0x74
   11d38:	bl	115f4 <abort@plt>
   11d3c:	b	11d40 <main@@Base+0x638>
   11d40:	b	11d44 <main@@Base+0x63c>
   11d44:	movw	r0, #1
   11d48:	bl	1394c <mmk_matcher_init@@Base>
   11d4c:	bl	11534 <fn_vv@plt>
   11d50:	bl	139bc <mmk_matcher_term@@Base>
   11d54:	movw	r0, #1
   11d58:	str	r0, [fp, #-296]	; 0xfffffed8
   11d5c:	movw	r0, #0
   11d60:	str	r0, [fp, #-292]	; 0xfffffedc
   11d64:	str	r0, [fp, #-288]	; 0xfffffee0
   11d68:	str	r0, [fp, #-284]	; 0xfffffee4
   11d6c:	movw	r1, #2
   11d70:	str	r1, [fp, #-280]	; 0xfffffee8
   11d74:	str	r0, [fp, #-276]	; 0xfffffeec
   11d78:	sub	r0, fp, #296	; 0x128
   11d7c:	bl	15074 <mmk_verify_times@@Base>
   11d80:	cmp	r0, #0
   11d84:	beq	11dcc <main@@Base+0x6c4>
   11d88:	ldr	r0, [pc, #1636]	; 123f4 <main@@Base+0xcec>
   11d8c:	add	r1, pc, r0
   11d90:	ldr	r0, [pc, #1632]	; 123f8 <main@@Base+0xcf0>
   11d94:	add	r2, pc, r0
   11d98:	ldr	r0, [pc, #1628]	; 123fc <main@@Base+0xcf4>
   11d9c:	add	r0, pc, r0
   11da0:	ldr	r3, [pc, #1624]	; 12400 <main@@Base+0xcf8>
   11da4:	ldr	r3, [pc, r3]
   11da8:	ldr	r3, [r3]
   11dac:	str	r0, [sp, #112]	; 0x70
   11db0:	mov	r0, r3
   11db4:	movw	r3, #56	; 0x38
   11db8:	ldr	ip, [sp, #112]	; 0x70
   11dbc:	str	ip, [sp]
   11dc0:	bl	115ac <fprintf@plt>
   11dc4:	str	r0, [sp, #108]	; 0x6c
   11dc8:	bl	115f4 <abort@plt>
   11dcc:	b	11dd0 <main@@Base+0x6c8>
   11dd0:	b	11dd4 <main@@Base+0x6cc>
   11dd4:	movw	r0, #1
   11dd8:	bl	1394c <mmk_matcher_init@@Base>
   11ddc:	bl	11534 <fn_vv@plt>
   11de0:	bl	139bc <mmk_matcher_term@@Base>
   11de4:	movw	r0, #1
   11de8:	str	r0, [fp, #-320]	; 0xfffffec0
   11dec:	movw	r0, #0
   11df0:	str	r0, [fp, #-316]	; 0xfffffec4
   11df4:	movw	r1, #2
   11df8:	str	r1, [fp, #-312]	; 0xfffffec8
   11dfc:	str	r0, [fp, #-308]	; 0xfffffecc
   11e00:	str	r0, [fp, #-304]	; 0xfffffed0
   11e04:	str	r0, [fp, #-300]	; 0xfffffed4
   11e08:	sub	r0, fp, #320	; 0x140
   11e0c:	bl	15074 <mmk_verify_times@@Base>
   11e10:	cmp	r0, #0
   11e14:	beq	11e5c <main@@Base+0x754>
   11e18:	ldr	r0, [pc, #1476]	; 123e4 <main@@Base+0xcdc>
   11e1c:	add	r1, pc, r0
   11e20:	ldr	r0, [pc, #1472]	; 123e8 <main@@Base+0xce0>
   11e24:	add	r2, pc, r0
   11e28:	ldr	r0, [pc, #1468]	; 123ec <main@@Base+0xce4>
   11e2c:	add	r0, pc, r0
   11e30:	ldr	r3, [pc, #1464]	; 123f0 <main@@Base+0xce8>
   11e34:	ldr	r3, [pc, r3]
   11e38:	ldr	r3, [r3]
   11e3c:	str	r0, [sp, #104]	; 0x68
   11e40:	mov	r0, r3
   11e44:	movw	r3, #57	; 0x39
   11e48:	ldr	ip, [sp, #104]	; 0x68
   11e4c:	str	ip, [sp]
   11e50:	bl	115ac <fprintf@plt>
   11e54:	str	r0, [sp, #100]	; 0x64
   11e58:	bl	115f4 <abort@plt>
   11e5c:	b	11e60 <main@@Base+0x758>
   11e60:	ldr	r0, [pc, #1276]	; 12364 <main@@Base+0xc5c>
   11e64:	ldr	r0, [pc, r0]
   11e68:	bl	13900 <mmk_reset@@Base>
   11e6c:	ldr	r0, [pc, #1256]	; 1235c <main@@Base+0xc54>
   11e70:	add	r0, pc, r0
   11e74:	ldr	r1, [pc, #1252]	; 12360 <main@@Base+0xc58>
   11e78:	str	r1, [fp, #-324]	; 0xfffffebc
   11e7c:	bl	12470 <main@@Base+0xd68>
   11e80:	movw	r1, #0
   11e84:	str	r0, [sp, #96]	; 0x60
   11e88:	mov	r0, r1
   11e8c:	bl	1394c <mmk_matcher_init@@Base>
   11e90:	movw	r0, #0
   11e94:	str	r0, [sp, #336]	; 0x150
   11e98:	ldr	r1, [fp, #-324]	; 0xfffffebc
   11e9c:	str	r1, [sp, #340]	; 0x154
   11ea0:	movw	r1, #1
   11ea4:	str	r1, [sp, #332]	; 0x14c
   11ea8:	add	r1, sp, #332	; 0x14c
   11eac:	str	r1, [sp, #344]	; 0x158
   11eb0:	str	r0, [sp, #348]	; 0x15c
   11eb4:	str	r0, [sp, #352]	; 0x160
   11eb8:	add	r0, sp, #336	; 0x150
   11ebc:	bl	15b94 <mmk_when_init@@Base>
   11ec0:	movw	r0, #1
   11ec4:	bl	1154c <fn_ii@plt>
   11ec8:	str	r0, [sp, #92]	; 0x5c
   11ecc:	bl	139bc <mmk_matcher_term@@Base>
   11ed0:	movw	r0, #1
   11ed4:	bl	1154c <fn_ii@plt>
   11ed8:	cmp	r0, #1
   11edc:	bne	11ef4 <main@@Base+0x7ec>
   11ee0:	bl	115b8 <__errno_location@plt>
   11ee4:	ldr	r0, [r0]
   11ee8:	ldr	r1, [fp, #-324]	; 0xfffffebc
   11eec:	cmp	r0, r1
   11ef0:	beq	11f38 <main@@Base+0x830>
   11ef4:	ldr	r0, [pc, #1132]	; 12368 <main@@Base+0xc60>
   11ef8:	add	r1, pc, r0
   11efc:	ldr	r0, [pc, #1128]	; 1236c <main@@Base+0xc64>
   11f00:	add	r2, pc, r0
   11f04:	ldr	r0, [pc, #1124]	; 12370 <main@@Base+0xc68>
   11f08:	add	r0, pc, r0
   11f0c:	ldr	r3, [pc, #1120]	; 12374 <main@@Base+0xc6c>
   11f10:	ldr	r3, [pc, r3]
   11f14:	ldr	r3, [r3]
   11f18:	str	r0, [sp, #88]	; 0x58
   11f1c:	mov	r0, r3
   11f20:	movw	r3, #64	; 0x40
   11f24:	ldr	ip, [sp, #88]	; 0x58
   11f28:	str	ip, [sp]
   11f2c:	bl	115ac <fprintf@plt>
   11f30:	str	r0, [sp, #84]	; 0x54
   11f34:	bl	115f4 <abort@plt>
   11f38:	b	11f3c <main@@Base+0x834>
   11f3c:	b	11f40 <main@@Base+0x838>
   11f40:	movw	r0, #42	; 0x2a
   11f44:	bl	1154c <fn_ii@plt>
   11f48:	cmp	r0, #0
   11f4c:	beq	11f94 <main@@Base+0x88c>
   11f50:	ldr	r0, [pc, #1056]	; 12378 <main@@Base+0xc70>
   11f54:	add	r1, pc, r0
   11f58:	ldr	r0, [pc, #1052]	; 1237c <main@@Base+0xc74>
   11f5c:	add	r2, pc, r0
   11f60:	ldr	r0, [pc, #1048]	; 12380 <main@@Base+0xc78>
   11f64:	add	r0, pc, r0
   11f68:	ldr	r3, [pc, #1044]	; 12384 <main@@Base+0xc7c>
   11f6c:	ldr	r3, [pc, r3]
   11f70:	ldr	r3, [r3]
   11f74:	str	r0, [sp, #80]	; 0x50
   11f78:	mov	r0, r3
   11f7c:	movw	r3, #65	; 0x41
   11f80:	ldr	ip, [sp, #80]	; 0x50
   11f84:	str	ip, [sp]
   11f88:	bl	115ac <fprintf@plt>
   11f8c:	str	r0, [sp, #76]	; 0x4c
   11f90:	bl	115f4 <abort@plt>
   11f94:	b	11f98 <main@@Base+0x890>
   11f98:	b	11f9c <main@@Base+0x894>
   11f9c:	movw	r0, #1
   11fa0:	bl	1394c <mmk_matcher_init@@Base>
   11fa4:	movw	r0, #0
   11fa8:	str	r0, [sp, #72]	; 0x48
   11fac:	ldr	r1, [sp, #72]	; 0x48
   11fb0:	bl	13a00 <mmk_matcher_add@@Base>
   11fb4:	movw	r0, #0
   11fb8:	str	r0, [sp, #328]	; 0x148
   11fbc:	ldr	r0, [sp, #328]	; 0x148
   11fc0:	bl	1154c <fn_ii@plt>
   11fc4:	str	r0, [sp, #68]	; 0x44
   11fc8:	bl	139bc <mmk_matcher_term@@Base>
   11fcc:	movw	r0, #1
   11fd0:	str	r0, [sp, #304]	; 0x130
   11fd4:	movw	r0, #0
   11fd8:	str	r0, [sp, #308]	; 0x134
   11fdc:	str	r0, [sp, #312]	; 0x138
   11fe0:	str	r0, [sp, #316]	; 0x13c
   11fe4:	movw	r1, #2
   11fe8:	str	r1, [sp, #320]	; 0x140
   11fec:	str	r0, [sp, #324]	; 0x144
   11ff0:	add	r0, sp, #304	; 0x130
   11ff4:	bl	15074 <mmk_verify_times@@Base>
   11ff8:	cmp	r0, #0
   11ffc:	bne	12044 <main@@Base+0x93c>
   12000:	ldr	r0, [pc, #896]	; 12388 <main@@Base+0xc80>
   12004:	add	r1, pc, r0
   12008:	ldr	r0, [pc, #892]	; 1238c <main@@Base+0xc84>
   1200c:	add	r2, pc, r0
   12010:	ldr	r0, [pc, #888]	; 12390 <main@@Base+0xc88>
   12014:	add	r0, pc, r0
   12018:	ldr	r3, [pc, #884]	; 12394 <main@@Base+0xc8c>
   1201c:	ldr	r3, [pc, r3]
   12020:	ldr	r3, [r3]
   12024:	str	r0, [sp, #64]	; 0x40
   12028:	mov	r0, r3
   1202c:	movw	r3, #67	; 0x43
   12030:	ldr	ip, [sp, #64]	; 0x40
   12034:	str	ip, [sp]
   12038:	bl	115ac <fprintf@plt>
   1203c:	str	r0, [sp, #60]	; 0x3c
   12040:	bl	115f4 <abort@plt>
   12044:	b	12048 <main@@Base+0x940>
   12048:	b	1204c <main@@Base+0x944>
   1204c:	movw	r0, #1
   12050:	bl	1394c <mmk_matcher_init@@Base>
   12054:	movw	r0, #1
   12058:	bl	1154c <fn_ii@plt>
   1205c:	str	r0, [sp, #56]	; 0x38
   12060:	bl	139bc <mmk_matcher_term@@Base>
   12064:	movw	r0, #1
   12068:	str	r0, [sp, #280]	; 0x118
   1206c:	movw	r1, #0
   12070:	str	r1, [sp, #284]	; 0x11c
   12074:	str	r1, [sp, #288]	; 0x120
   12078:	str	r1, [sp, #292]	; 0x124
   1207c:	str	r0, [sp, #296]	; 0x128
   12080:	str	r1, [sp, #300]	; 0x12c
   12084:	add	r0, sp, #280	; 0x118
   12088:	bl	15074 <mmk_verify_times@@Base>
   1208c:	cmp	r0, #0
   12090:	bne	120d8 <main@@Base+0x9d0>
   12094:	ldr	r0, [pc, #764]	; 12398 <main@@Base+0xc90>
   12098:	add	r1, pc, r0
   1209c:	ldr	r0, [pc, #760]	; 1239c <main@@Base+0xc94>
   120a0:	add	r2, pc, r0
   120a4:	ldr	r0, [pc, #756]	; 123a0 <main@@Base+0xc98>
   120a8:	add	r0, pc, r0
   120ac:	ldr	r3, [pc, #752]	; 123a4 <main@@Base+0xc9c>
   120b0:	ldr	r3, [pc, r3]
   120b4:	ldr	r3, [r3]
   120b8:	str	r0, [sp, #52]	; 0x34
   120bc:	mov	r0, r3
   120c0:	movw	r3, #68	; 0x44
   120c4:	ldr	ip, [sp, #52]	; 0x34
   120c8:	str	ip, [sp]
   120cc:	bl	115ac <fprintf@plt>
   120d0:	str	r0, [sp, #48]	; 0x30
   120d4:	bl	115f4 <abort@plt>
   120d8:	b	120dc <main@@Base+0x9d4>
   120dc:	b	120e0 <main@@Base+0x9d8>
   120e0:	movw	r0, #1
   120e4:	bl	1394c <mmk_matcher_init@@Base>
   120e8:	movw	r0, #42	; 0x2a
   120ec:	bl	1154c <fn_ii@plt>
   120f0:	str	r0, [sp, #44]	; 0x2c
   120f4:	bl	139bc <mmk_matcher_term@@Base>
   120f8:	movw	r0, #1
   120fc:	str	r0, [sp, #256]	; 0x100
   12100:	movw	r1, #0
   12104:	str	r1, [sp, #260]	; 0x104
   12108:	str	r1, [sp, #264]	; 0x108
   1210c:	str	r1, [sp, #268]	; 0x10c
   12110:	str	r0, [sp, #272]	; 0x110
   12114:	str	r1, [sp, #276]	; 0x114
   12118:	add	r0, sp, #256	; 0x100
   1211c:	bl	15074 <mmk_verify_times@@Base>
   12120:	cmp	r0, #0
   12124:	bne	1216c <main@@Base+0xa64>
   12128:	ldr	r0, [pc, #632]	; 123a8 <main@@Base+0xca0>
   1212c:	add	r1, pc, r0
   12130:	ldr	r0, [pc, #628]	; 123ac <main@@Base+0xca4>
   12134:	add	r2, pc, r0
   12138:	ldr	r0, [pc, #624]	; 123b0 <main@@Base+0xca8>
   1213c:	add	r0, pc, r0
   12140:	ldr	r3, [pc, #620]	; 123b4 <main@@Base+0xcac>
   12144:	ldr	r3, [pc, r3]
   12148:	ldr	r3, [r3]
   1214c:	str	r0, [sp, #40]	; 0x28
   12150:	mov	r0, r3
   12154:	movw	r3, #69	; 0x45
   12158:	ldr	ip, [sp, #40]	; 0x28
   1215c:	str	ip, [sp]
   12160:	bl	115ac <fprintf@plt>
   12164:	str	r0, [sp, #36]	; 0x24
   12168:	bl	115f4 <abort@plt>
   1216c:	b	12170 <main@@Base+0xa68>
   12170:	b	12174 <main@@Base+0xa6c>
   12174:	movw	r0, #1
   12178:	bl	1394c <mmk_matcher_init@@Base>
   1217c:	movw	r0, #12
   12180:	bl	1154c <fn_ii@plt>
   12184:	str	r0, [sp, #32]
   12188:	bl	139bc <mmk_matcher_term@@Base>
   1218c:	movw	r0, #1
   12190:	str	r0, [sp, #232]	; 0xe8
   12194:	str	r0, [sp, #236]	; 0xec
   12198:	movw	r0, #0
   1219c:	str	r0, [sp, #240]	; 0xf0
   121a0:	str	r0, [sp, #244]	; 0xf4
   121a4:	str	r0, [sp, #248]	; 0xf8
   121a8:	str	r0, [sp, #252]	; 0xfc
   121ac:	add	r0, sp, #232	; 0xe8
   121b0:	bl	15074 <mmk_verify_times@@Base>
   121b4:	cmp	r0, #0
   121b8:	bne	12200 <main@@Base+0xaf8>
   121bc:	ldr	r0, [pc, #500]	; 123b8 <main@@Base+0xcb0>
   121c0:	add	r1, pc, r0
   121c4:	ldr	r0, [pc, #496]	; 123bc <main@@Base+0xcb4>
   121c8:	add	r2, pc, r0
   121cc:	ldr	r0, [pc, #492]	; 123c0 <main@@Base+0xcb8>
   121d0:	add	r0, pc, r0
   121d4:	ldr	r3, [pc, #488]	; 123c4 <main@@Base+0xcbc>
   121d8:	ldr	r3, [pc, r3]
   121dc:	ldr	r3, [r3]
   121e0:	str	r0, [sp, #28]
   121e4:	mov	r0, r3
   121e8:	movw	r3, #70	; 0x46
   121ec:	ldr	ip, [sp, #28]
   121f0:	str	ip, [sp]
   121f4:	bl	115ac <fprintf@plt>
   121f8:	str	r0, [sp, #24]
   121fc:	bl	115f4 <abort@plt>
   12200:	b	12204 <main@@Base+0xafc>
   12204:	ldr	r0, [pc, #448]	; 123cc <main@@Base+0xcc4>
   12208:	ldr	r0, [pc, r0]
   1220c:	bl	13900 <mmk_reset@@Base>
   12210:	ldr	r0, [pc, #432]	; 123c8 <main@@Base+0xcc0>
   12214:	add	r0, pc, r0
   12218:	bl	1249c <main@@Base+0xd94>
   1221c:	movw	r1, #0
   12220:	str	r0, [sp, #20]
   12224:	mov	r0, r1
   12228:	bl	1394c <mmk_matcher_init@@Base>
   1222c:	add	r0, sp, #212	; 0xd4
   12230:	mov	r1, r0
   12234:	vmov.i32	q8, #0	; 0x00000000
   12238:	vst1.32	{d16-d17}, [r1]!
   1223c:	mov	r2, #0
   12240:	str	r2, [r1]
   12244:	movw	r1, #1
   12248:	str	r1, [sp, #208]	; 0xd0
   1224c:	add	r1, sp, #208	; 0xd0
   12250:	str	r1, [sp, #220]	; 0xdc
   12254:	bl	15b94 <mmk_when_init@@Base>
   12258:	movw	r0, #1
   1225c:	movw	r1, #42	; 0x2a
   12260:	bl	11558 <fn_ii_va@plt>
   12264:	str	r0, [sp, #16]
   12268:	bl	139bc <mmk_matcher_term@@Base>
   1226c:	movw	r0, #1
   12270:	movw	r1, #42	; 0x2a
   12274:	bl	11558 <fn_ii_va@plt>
   12278:	cmp	r0, #1
   1227c:	beq	122c4 <main@@Base+0xbbc>
   12280:	ldr	r0, [pc, #328]	; 123d0 <main@@Base+0xcc8>
   12284:	add	r1, pc, r0
   12288:	ldr	r0, [pc, #324]	; 123d4 <main@@Base+0xccc>
   1228c:	add	r2, pc, r0
   12290:	ldr	r0, [pc, #320]	; 123d8 <main@@Base+0xcd0>
   12294:	add	r0, pc, r0
   12298:	ldr	r3, [pc, #316]	; 123dc <main@@Base+0xcd4>
   1229c:	ldr	r3, [pc, r3]
   122a0:	ldr	r3, [r3]
   122a4:	str	r0, [sp, #12]
   122a8:	mov	r0, r3
   122ac:	movw	r3, #77	; 0x4d
   122b0:	ldr	ip, [sp, #12]
   122b4:	str	ip, [sp]
   122b8:	bl	115ac <fprintf@plt>
   122bc:	str	r0, [sp, #8]
   122c0:	bl	115f4 <abort@plt>
   122c4:	b	122c8 <main@@Base+0xbc0>
   122c8:	ldr	r0, [pc, #272]	; 123e0 <main@@Base+0xcd8>
   122cc:	ldr	r0, [pc, r0]
   122d0:	bl	13900 <mmk_reset@@Base>
   122d4:	movw	r0, #0
   122d8:	sub	sp, fp, #8
   122dc:	pop	{r4, r5, fp, pc}
   122e0:	andeq	r5, r1, r0, asr r9
   122e4:	andeq	r4, r0, ip, ror #11
   122e8:	andeq	r4, r0, sl, asr r5
   122ec:	andeq	r4, r0, pc, ror #10
   122f0:	andeq	r4, r0, r7, asr r6
   122f4:	andeq	r5, r1, ip, asr #17
   122f8:	andeq	r4, r0, lr, asr #9
   122fc:	andeq	r4, r0, r3, ror #9
   12300:	andeq	r4, r0, fp, lsr #10
   12304:	andeq	r5, r1, r0, asr #16
   12308:	andeq	r5, r1, r8, lsr #13
   1230c:	andeq	r4, r0, sl, asr #5
   12310:	ldrdeq	r4, [r0], -pc	; <UNPREDICTABLE>
   12314:	andeq	r4, r0, r0, asr #7
   12318:	andeq	r5, r1, ip, lsr r6
   1231c:	andeq	r4, r0, lr, lsr r2
   12320:	andeq	r4, r0, r3, asr r2
   12324:			; <UNDEFINED> instruction: 0x000042be
   12328:			; <UNDEFINED> instruction: 0x000155b0
   1232c:			; <UNDEFINED> instruction: 0x000041b2
   12330:	andeq	r4, r0, r7, asr #3
   12334:	andeq	r4, r0, r3, asr r2
   12338:	andeq	r5, r1, r4, lsr #10
   1233c:	andeq	r4, r0, r6, lsr #2
   12340:	andeq	r4, r0, fp, lsr r1
   12344:	andeq	r4, r0, r3, lsl #3
   12348:	muleq	r1, r8, r4
   1234c:	muleq	r0, sl, r0
   12350:	andeq	r4, r0, pc, lsr #1
   12354:	andeq	r4, r0, pc, asr r1
   12358:	andeq	r5, r1, ip, lsl #8
   1235c:	andeq	r4, r0, ip
   12360:	mrc2	14, 7, pc, cr14, cr14, {7}
   12364:	andeq	r5, r1, r0, lsr #4
   12368:	andeq	r3, r0, r2, lsl lr
   1236c:	andeq	r3, r0, r7, lsr #28
   12370:	andeq	r3, r0, sl, ror pc
   12374:	andeq	r5, r1, r4, lsl #3
   12378:			; <UNDEFINED> instruction: 0x00003db6
   1237c:	andeq	r3, r0, fp, asr #27
   12380:	andeq	r3, r0, ip, lsr pc
   12384:	andeq	r5, r1, r8, lsr #2
   12388:	andeq	r3, r0, r6, lsl #26
   1238c:	andeq	r3, r0, fp, lsl sp
   12390:	muleq	r0, fp, lr
   12394:	andeq	r5, r1, r8, ror r0
   12398:	andeq	r3, r0, r2, ror ip
   1239c:	andeq	r3, r0, r7, lsl #25
   123a0:	andeq	r3, r0, r3, lsr lr
   123a4:	andeq	r4, r1, r4, ror #31
   123a8:	ldrdeq	r3, [r0], -lr
   123ac:	strdeq	r3, [r0], -r3	; <UNPREDICTABLE>
   123b0:	andeq	r3, r0, r0, asr #27
   123b4:	andeq	r4, r1, r0, asr pc
   123b8:	andeq	r3, r0, sl, asr #22
   123bc:	andeq	r3, r0, pc, asr fp
   123c0:	andeq	r3, r0, lr, asr #26
   123c4:			; <UNDEFINED> instruction: 0x00014ebc
   123c8:	andeq	r3, r0, ip, lsr #26
   123cc:	andeq	r4, r1, r8, lsl #29
   123d0:	andeq	r3, r0, r6, lsl #21
   123d4:	muleq	r0, fp, sl
   123d8:			; <UNDEFINED> instruction: 0x00003cb5
   123dc:	strdeq	r4, [r1], -r8
   123e0:	andeq	r4, r1, ip, asr #27
   123e4:	andeq	r3, r0, lr, ror #29
   123e8:	andeq	r3, r0, r3, lsl #30
   123ec:	andeq	r4, r0, ip, lsr #32
   123f0:	andeq	r5, r1, r0, ror #4
   123f4:	andeq	r3, r0, lr, ror pc
   123f8:	muleq	r0, r3, pc	; <UNPREDICTABLE>
   123fc:	muleq	r0, fp, r0
   12400:	strdeq	r5, [r1], -r0
   12404:	andeq	r4, r0, lr
   12408:	andeq	r4, r0, r3, lsr #32
   1240c:	andeq	r4, r0, sl, lsl #2
   12410:	andeq	r5, r1, r0, lsl #7
   12414:	andeq	r4, r0, sl, lsr #6
   12418:	andeq	r4, r0, pc, lsr r3
   1241c:	andeq	r4, r0, lr, ror #7
   12420:	muleq	r1, ip, r6
   12424:			; <UNDEFINED> instruction: 0x000043b6
   12428:	andeq	r4, r0, fp, asr #7
   1242c:	andeq	r4, r0, r6, asr r4
   12430:	andeq	r5, r1, r8, lsr #14
   12434:	andeq	r4, r0, r2, asr #8
   12438:	andeq	r4, r0, r7, asr r4
   1243c:	andeq	r4, r0, r1, asr #9
   12440:			; <UNDEFINED> instruction: 0x000157b4
   12444:	push	{fp, lr}
   12448:	mov	fp, sp
   1244c:	sub	sp, sp, #8
   12450:	ldr	r1, [pc, #20]	; 1246c <main@@Base+0xd64>
   12454:	add	r1, pc, r1
   12458:	str	r0, [sp, #4]
   1245c:	ldr	r0, [sp, #4]
   12460:	bl	13b0c <mmk_mock_create_internal@@Base>
   12464:	mov	sp, fp
   12468:	pop	{fp, pc}
   1246c:	andeq	r0, r0, ip, rrx
   12470:	push	{fp, lr}
   12474:	mov	fp, sp
   12478:	sub	sp, sp, #8
   1247c:	ldr	r1, [pc, #20]	; 12498 <main@@Base+0xd90>
   12480:	add	r1, pc, r1
   12484:	str	r0, [sp, #4]
   12488:	ldr	r0, [sp, #4]
   1248c:	bl	13b0c <mmk_mock_create_internal@@Base>
   12490:	mov	sp, fp
   12494:	pop	{fp, pc}
   12498:	andeq	r0, r0, r8, ror #5
   1249c:	push	{fp, lr}
   124a0:	mov	fp, sp
   124a4:	sub	sp, sp, #8
   124a8:	ldr	r1, [pc, #20]	; 124c4 <main@@Base+0xdbc>
   124ac:	add	r1, pc, r1
   124b0:	str	r0, [sp, #4]
   124b4:	ldr	r0, [sp, #4]
   124b8:	bl	13b0c <mmk_mock_create_internal@@Base>
   124bc:	mov	sp, fp
   124c0:	pop	{fp, pc}
   124c4:	andeq	r0, r0, r8, lsr #17
   124c8:	push	{fp, lr}
   124cc:	mov	fp, sp
   124d0:	sub	sp, sp, #72	; 0x48
   124d4:	b	124d8 <main@@Base+0xdd0>
   124d8:	b	124dc <main@@Base+0xdd4>
   124dc:	b	124e0 <main@@Base+0xdd8>
   124e0:	bl	139e0 <mmk_matcher_ctx@@Base>
   124e4:	str	r0, [fp, #-4]
   124e8:	ldr	r0, [fp, #-4]
   124ec:	movw	r1, #0
   124f0:	cmp	r0, r1
   124f4:	beq	12618 <main@@Base+0xf10>
   124f8:	bl	14d2c <mmk_ctx@@Base>
   124fc:	bl	14a7c <mmk_stub_context@@Base>
   12500:	str	r0, [fp, #-8]
   12504:	ldr	r0, [fp, #-4]
   12508:	ldr	r0, [r0]
   1250c:	cmp	r0, #0
   12510:	bne	1255c <main@@Base+0xe54>
   12514:	movw	r0, #40	; 0x28
   12518:	bl	15908 <mmk_malloc@@Base>
   1251c:	str	r0, [fp, #-12]
   12520:	ldr	r0, [fp, #-12]
   12524:	add	r0, r0, #8
   12528:	str	r0, [sp, #8]
   1252c:	bl	15bd0 <mmk_when_get_result@@Base>
   12530:	ldr	r1, [sp, #8]
   12534:	str	r0, [sp, #4]
   12538:	mov	r0, r1
   1253c:	ldr	r1, [sp, #4]
   12540:	movw	r2, #20
   12544:	bl	11528 <memcpy@plt>
   12548:	b	1254c <main@@Base+0xe44>
   1254c:	ldr	r0, [fp, #-8]
   12550:	ldr	r1, [fp, #-12]
   12554:	bl	15bf0 <mmk_when_impl@@Base>
   12558:	b	1260c <main@@Base+0xf04>
   1255c:	ldr	r0, [fp, #-4]
   12560:	ldr	r0, [r0]
   12564:	cmp	r0, #1
   12568:	bne	12608 <main@@Base+0xf00>
   1256c:	movw	r0, #0
   12570:	str	r0, [fp, #-16]
   12574:	ldr	r0, [fp, #-8]
   12578:	bl	13dfc <mmk_mock_params_begin@@Base>
   1257c:	str	r0, [fp, #-20]	; 0xffffffec
   12580:	ldr	r0, [fp, #-20]	; 0xffffffec
   12584:	movw	r1, #0
   12588:	cmp	r0, r1
   1258c:	beq	125c8 <main@@Base+0xec0>
   12590:	ldr	r0, [fp, #-4]
   12594:	str	r0, [fp, #-24]	; 0xffffffe8
   12598:	b	1259c <main@@Base+0xe94>
   1259c:	ldr	r0, [fp, #-20]	; 0xffffffec
   125a0:	ldr	r0, [r0]
   125a4:	ldr	r1, [fp, #-16]
   125a8:	add	r0, r1, r0
   125ac:	str	r0, [fp, #-16]
   125b0:	b	125b4 <main@@Base+0xeac>
   125b4:	ldr	r0, [fp, #-8]
   125b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   125bc:	bl	13e50 <mmk_mock_params_next@@Base>
   125c0:	str	r0, [fp, #-20]	; 0xffffffec
   125c4:	b	12580 <main@@Base+0xe78>
   125c8:	ldr	r0, [fp, #-4]
   125cc:	str	r0, [fp, #-28]	; 0xffffffe4
   125d0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   125d4:	movw	r1, #0
   125d8:	cmp	r0, r1
   125dc:	beq	12600 <main@@Base+0xef8>
   125e0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   125e4:	ldr	r0, [r0, #8]
   125e8:	str	r0, [fp, #-32]	; 0xffffffe0
   125ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   125f0:	bl	1598c <mmk_free@@Base>
   125f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   125f8:	str	r0, [fp, #-28]	; 0xffffffe4
   125fc:	b	125d0 <main@@Base+0xec8>
   12600:	ldr	r0, [fp, #-16]
   12604:	bl	15038 <mmk_verify_set_times@@Base>
   12608:	b	1260c <main@@Base+0xf04>
   1260c:	b	12610 <main@@Base+0xf08>
   12610:	b	12614 <main@@Base+0xf0c>
   12614:	b	12768 <main@@Base+0x1060>
   12618:	movw	r0, #0
   1261c:	str	r0, [sp, #24]
   12620:	str	r0, [sp, #28]
   12624:	str	r0, [sp, #32]
   12628:	add	r0, sp, #24
   1262c:	str	r0, [sp, #36]	; 0x24
   12630:	b	12634 <main@@Base+0xf2c>
   12634:	ldr	r0, [sp, #36]	; 0x24
   12638:	movw	r1, #12
   1263c:	bl	151c0 <mmk_verify_register_call@@Base>
   12640:	bl	13ecc <mmk_mock_get_params@@Base>
   12644:	str	r0, [sp, #20]
   12648:	ldr	r0, [sp, #20]
   1264c:	movw	r1, #0
   12650:	cmp	r0, r1
   12654:	beq	1275c <main@@Base+0x1054>
   12658:	ldr	r0, [sp, #20]
   1265c:	str	r0, [sp, #16]
   12660:	ldr	r0, [sp, #20]
   12664:	ldr	r0, [r0]
   12668:	str	r0, [sp, #12]
   1266c:	ldr	r0, [sp, #16]
   12670:	ldr	r0, [r0, #12]
   12674:	cmp	r0, #0
   12678:	beq	12694 <main@@Base+0xf8c>
   1267c:	ldr	r0, [sp, #16]
   12680:	ldr	r0, [r0, #12]
   12684:	str	r0, [sp]
   12688:	bl	115b8 <__errno_location@plt>
   1268c:	ldr	r1, [sp]
   12690:	str	r1, [r0]
   12694:	ldr	r0, [sp, #16]
   12698:	ldr	r0, [r0, #20]
   1269c:	movw	r1, #0
   126a0:	cmp	r0, r1
   126a4:	beq	126e4 <main@@Base+0xfdc>
   126a8:	ldr	r0, [sp, #16]
   126ac:	ldr	r0, [r0, #16]
   126b0:	movw	r1, #0
   126b4:	cmp	r0, r1
   126b8:	bne	126e4 <main@@Base+0xfdc>
   126bc:	b	126c0 <main@@Base+0xfb8>
   126c0:	b	126c4 <main@@Base+0xfbc>
   126c4:	b	126c8 <main@@Base+0xfc0>
   126c8:	ldr	r0, [sp, #16]
   126cc:	ldr	r0, [r0, #20]
   126d0:	blx	r0
   126d4:	b	126d8 <main@@Base+0xfd0>
   126d8:	b	126dc <main@@Base+0xfd4>
   126dc:	b	126e0 <main@@Base+0xfd8>
   126e0:	b	12768 <main@@Base+0x1060>
   126e4:	ldr	r0, [sp, #16]
   126e8:	ldr	r0, [r0, #20]
   126ec:	movw	r1, #0
   126f0:	cmp	r0, r1
   126f4:	beq	12730 <main@@Base+0x1028>
   126f8:	ldr	r0, [sp, #16]
   126fc:	ldr	r0, [r0, #16]
   12700:	movw	r1, #0
   12704:	cmp	r0, r1
   12708:	beq	12730 <main@@Base+0x1028>
   1270c:	b	12710 <main@@Base+0x1008>
   12710:	b	12714 <main@@Base+0x100c>
   12714:	ldr	r0, [sp, #16]
   12718:	ldr	r0, [r0, #20]
   1271c:	blx	r0
   12720:	b	12724 <main@@Base+0x101c>
   12724:	b	12728 <main@@Base+0x1020>
   12728:	b	1272c <main@@Base+0x1024>
   1272c:	b	12768 <main@@Base+0x1060>
   12730:	ldr	r0, [sp, #16]
   12734:	ldr	r0, [r0, #16]
   12738:	movw	r1, #0
   1273c:	cmp	r0, r1
   12740:	beq	12750 <main@@Base+0x1048>
   12744:	b	12748 <main@@Base+0x1040>
   12748:	b	1274c <main@@Base+0x1044>
   1274c:	b	12768 <main@@Base+0x1060>
   12750:	b	12754 <main@@Base+0x104c>
   12754:	b	12758 <main@@Base+0x1050>
   12758:	b	12768 <main@@Base+0x1060>
   1275c:	b	12760 <main@@Base+0x1058>
   12760:	b	12764 <main@@Base+0x105c>
   12764:	b	12768 <main@@Base+0x1060>
   12768:	mov	sp, fp
   1276c:	pop	{fp, pc}
   12770:	push	{fp, lr}
   12774:	mov	fp, sp
   12778:	sub	sp, sp, #128	; 0x80
   1277c:	str	r0, [fp, #-8]
   12780:	b	12784 <main@@Base+0x107c>
   12784:	bl	139e0 <mmk_matcher_ctx@@Base>
   12788:	str	r0, [fp, #-12]
   1278c:	ldr	r0, [fp, #-12]
   12790:	movw	r1, #0
   12794:	cmp	r0, r1
   12798:	beq	12a24 <main@@Base+0x131c>
   1279c:	bl	14d2c <mmk_ctx@@Base>
   127a0:	bl	14a7c <mmk_stub_context@@Base>
   127a4:	str	r0, [fp, #-16]
   127a8:	ldr	r0, [fp, #-12]
   127ac:	ldr	r0, [r0]
   127b0:	cmp	r0, #0
   127b4:	bne	1280c <main@@Base+0x1104>
   127b8:	movw	r0, #44	; 0x2c
   127bc:	bl	15908 <mmk_malloc@@Base>
   127c0:	str	r0, [fp, #-20]	; 0xffffffec
   127c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   127c8:	add	r0, r0, #8
   127cc:	str	r0, [sp, #32]
   127d0:	bl	15bd0 <mmk_when_get_result@@Base>
   127d4:	ldr	r1, [sp, #32]
   127d8:	str	r0, [sp, #28]
   127dc:	mov	r0, r1
   127e0:	ldr	r1, [sp, #28]
   127e4:	movw	r2, #20
   127e8:	bl	11528 <memcpy@plt>
   127ec:	ldr	r0, [fp, #-8]
   127f0:	ldr	r1, [fp, #-20]	; 0xffffffec
   127f4:	str	r0, [r1, #40]	; 0x28
   127f8:	b	127fc <main@@Base+0x10f4>
   127fc:	ldr	r0, [fp, #-16]
   12800:	ldr	r1, [fp, #-20]	; 0xffffffec
   12804:	bl	15bf0 <mmk_when_impl@@Base>
   12808:	b	12a08 <main@@Base+0x1300>
   1280c:	ldr	r0, [fp, #-12]
   12810:	ldr	r0, [r0]
   12814:	cmp	r0, #1
   12818:	bne	12a04 <main@@Base+0x12fc>
   1281c:	movw	r0, #0
   12820:	str	r0, [fp, #-24]	; 0xffffffe8
   12824:	ldr	r0, [fp, #-16]
   12828:	bl	13dfc <mmk_mock_params_begin@@Base>
   1282c:	str	r0, [fp, #-28]	; 0xffffffe4
   12830:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12834:	movw	r1, #0
   12838:	cmp	r0, r1
   1283c:	beq	129c4 <main@@Base+0x12bc>
   12840:	ldr	r0, [fp, #-12]
   12844:	str	r0, [fp, #-32]	; 0xffffffe0
   12848:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1284c:	ldr	r0, [r0, #8]
   12850:	movw	r1, #0
   12854:	cmp	r0, r1
   12858:	beq	1296c <main@@Base+0x1264>
   1285c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12860:	ldr	r0, [r0, #8]
   12864:	str	r0, [fp, #-32]	; 0xffffffe0
   12868:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1286c:	ldr	r0, [r0]
   12870:	cmp	r0, #0
   12874:	bne	1287c <main@@Base+0x1174>
   12878:	b	12968 <main@@Base+0x1260>
   1287c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12880:	ldr	r0, [r0]
   12884:	and	r0, r0, #-2147483648	; 0x80000000
   12888:	cmp	r0, #0
   1288c:	beq	12918 <main@@Base+0x1210>
   12890:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12894:	add	r0, r0, #12
   12898:	sub	r1, fp, #8
   1289c:	movw	r2, #4
   128a0:	bl	154c8 <mmk_memcmp@@Base>
   128a4:	str	r0, [fp, #-36]	; 0xffffffdc
   128a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   128ac:	cmp	r0, #0
   128b0:	bne	128cc <main@@Base+0x11c4>
   128b4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   128b8:	ldr	r0, [r0]
   128bc:	and	r0, r0, #2
   128c0:	cmp	r0, #0
   128c4:	bne	128cc <main@@Base+0x11c4>
   128c8:	b	129ac <main@@Base+0x12a4>
   128cc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   128d0:	cmp	r0, #0
   128d4:	bge	128f0 <main@@Base+0x11e8>
   128d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   128dc:	ldr	r0, [r0]
   128e0:	and	r0, r0, #4
   128e4:	cmp	r0, #0
   128e8:	bne	128f0 <main@@Base+0x11e8>
   128ec:	b	129ac <main@@Base+0x12a4>
   128f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   128f4:	cmp	r0, #0
   128f8:	ble	12914 <main@@Base+0x120c>
   128fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12900:	ldr	r0, [r0]
   12904:	and	r0, r0, #8
   12908:	cmp	r0, #0
   1290c:	bne	12914 <main@@Base+0x120c>
   12910:	b	129ac <main@@Base+0x12a4>
   12914:	b	12964 <main@@Base+0x125c>
   12918:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1291c:	ldr	r0, [r0]
   12920:	cmp	r0, #1
   12924:	bne	12960 <main@@Base+0x1258>
   12928:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1292c:	bl	13af4 <mmk_matcher_get_predicate@@Base>
   12930:	str	r0, [fp, #-40]	; 0xffffffd8
   12934:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12938:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1293c:	ldr	r1, [r1, #12]
   12940:	str	r0, [sp, #24]
   12944:	mov	r0, r1
   12948:	ldr	r1, [sp, #24]
   1294c:	blx	r1
   12950:	cmp	r0, #0
   12954:	bne	1295c <main@@Base+0x1254>
   12958:	b	129ac <main@@Base+0x12a4>
   1295c:	b	12960 <main@@Base+0x1258>
   12960:	b	12964 <main@@Base+0x125c>
   12964:	b	12968 <main@@Base+0x1260>
   12968:	b	12990 <main@@Base+0x1288>
   1296c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12970:	add	r0, r0, #12
   12974:	sub	r1, fp, #8
   12978:	movw	r2, #4
   1297c:	bl	154c8 <mmk_memcmp@@Base>
   12980:	cmp	r0, #0
   12984:	beq	1298c <main@@Base+0x1284>
   12988:	b	129ac <main@@Base+0x12a4>
   1298c:	b	12990 <main@@Base+0x1288>
   12990:	b	12994 <main@@Base+0x128c>
   12994:	b	12998 <main@@Base+0x1290>
   12998:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1299c:	ldr	r0, [r0]
   129a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   129a4:	add	r0, r1, r0
   129a8:	str	r0, [fp, #-24]	; 0xffffffe8
   129ac:	b	129b0 <main@@Base+0x12a8>
   129b0:	ldr	r0, [fp, #-16]
   129b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   129b8:	bl	13e50 <mmk_mock_params_next@@Base>
   129bc:	str	r0, [fp, #-28]	; 0xffffffe4
   129c0:	b	12830 <main@@Base+0x1128>
   129c4:	ldr	r0, [fp, #-12]
   129c8:	str	r0, [fp, #-44]	; 0xffffffd4
   129cc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   129d0:	movw	r1, #0
   129d4:	cmp	r0, r1
   129d8:	beq	129fc <main@@Base+0x12f4>
   129dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   129e0:	ldr	r0, [r0, #8]
   129e4:	str	r0, [fp, #-48]	; 0xffffffd0
   129e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   129ec:	bl	1598c <mmk_free@@Base>
   129f0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   129f4:	str	r0, [fp, #-44]	; 0xffffffd4
   129f8:	b	129cc <main@@Base+0x12c4>
   129fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12a00:	bl	15038 <mmk_verify_set_times@@Base>
   12a04:	b	12a08 <main@@Base+0x1300>
   12a08:	b	12a0c <main@@Base+0x1304>
   12a0c:	b	12a10 <main@@Base+0x1308>
   12a10:	ldr	r0, [pc, #832]	; 12d58 <main@@Base+0x1650>
   12a14:	add	r0, pc, r0
   12a18:	ldr	r0, [r0]
   12a1c:	str	r0, [fp, #-4]
   12a20:	b	12d44 <main@@Base+0x163c>
   12a24:	movw	r0, #0
   12a28:	str	r0, [sp, #60]	; 0x3c
   12a2c:	str	r0, [sp, #64]	; 0x40
   12a30:	str	r0, [sp, #68]	; 0x44
   12a34:	ldr	r0, [fp, #-8]
   12a38:	str	r0, [sp, #72]	; 0x48
   12a3c:	add	r0, sp, #60	; 0x3c
   12a40:	str	r0, [fp, #-52]	; 0xffffffcc
   12a44:	b	12a48 <main@@Base+0x1340>
   12a48:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12a4c:	movw	r1, #16
   12a50:	bl	151c0 <mmk_verify_register_call@@Base>
   12a54:	bl	13ecc <mmk_mock_get_params@@Base>
   12a58:	str	r0, [sp, #56]	; 0x38
   12a5c:	ldr	r0, [sp, #56]	; 0x38
   12a60:	movw	r1, #0
   12a64:	cmp	r0, r1
   12a68:	beq	12d2c <main@@Base+0x1624>
   12a6c:	ldr	r0, [sp, #56]	; 0x38
   12a70:	str	r0, [sp, #52]	; 0x34
   12a74:	ldr	r0, [sp, #56]	; 0x38
   12a78:	ldr	r0, [r0]
   12a7c:	str	r0, [sp, #48]	; 0x30
   12a80:	ldr	r0, [sp, #48]	; 0x30
   12a84:	ldr	r0, [r0, #8]
   12a88:	movw	r1, #0
   12a8c:	cmp	r0, r1
   12a90:	beq	12ba8 <main@@Base+0x14a0>
   12a94:	ldr	r0, [sp, #48]	; 0x30
   12a98:	ldr	r0, [r0, #8]
   12a9c:	str	r0, [sp, #48]	; 0x30
   12aa0:	ldr	r0, [sp, #48]	; 0x30
   12aa4:	ldr	r0, [r0]
   12aa8:	cmp	r0, #0
   12aac:	bne	12ab4 <main@@Base+0x13ac>
   12ab0:	b	12ba4 <main@@Base+0x149c>
   12ab4:	ldr	r0, [sp, #48]	; 0x30
   12ab8:	ldr	r0, [r0]
   12abc:	and	r0, r0, #-2147483648	; 0x80000000
   12ac0:	cmp	r0, #0
   12ac4:	beq	12b58 <main@@Base+0x1450>
   12ac8:	sub	r0, fp, #8
   12acc:	mov	r1, r0
   12ad0:	str	r0, [sp, #20]
   12ad4:	mov	r0, r1
   12ad8:	ldr	r1, [sp, #20]
   12adc:	movw	r2, #4
   12ae0:	bl	154c8 <mmk_memcmp@@Base>
   12ae4:	str	r0, [sp, #44]	; 0x2c
   12ae8:	ldr	r0, [sp, #44]	; 0x2c
   12aec:	cmp	r0, #0
   12af0:	bne	12b0c <main@@Base+0x1404>
   12af4:	ldr	r0, [sp, #48]	; 0x30
   12af8:	ldr	r0, [r0]
   12afc:	and	r0, r0, #2
   12b00:	cmp	r0, #0
   12b04:	bne	12b0c <main@@Base+0x1404>
   12b08:	b	12d1c <main@@Base+0x1614>
   12b0c:	ldr	r0, [sp, #44]	; 0x2c
   12b10:	cmp	r0, #0
   12b14:	bge	12b30 <main@@Base+0x1428>
   12b18:	ldr	r0, [sp, #48]	; 0x30
   12b1c:	ldr	r0, [r0]
   12b20:	and	r0, r0, #4
   12b24:	cmp	r0, #0
   12b28:	bne	12b30 <main@@Base+0x1428>
   12b2c:	b	12d1c <main@@Base+0x1614>
   12b30:	ldr	r0, [sp, #44]	; 0x2c
   12b34:	cmp	r0, #0
   12b38:	ble	12b54 <main@@Base+0x144c>
   12b3c:	ldr	r0, [sp, #48]	; 0x30
   12b40:	ldr	r0, [r0]
   12b44:	and	r0, r0, #8
   12b48:	cmp	r0, #0
   12b4c:	bne	12b54 <main@@Base+0x144c>
   12b50:	b	12d1c <main@@Base+0x1614>
   12b54:	b	12ba0 <main@@Base+0x1498>
   12b58:	ldr	r0, [sp, #48]	; 0x30
   12b5c:	ldr	r0, [r0]
   12b60:	cmp	r0, #1
   12b64:	bne	12b9c <main@@Base+0x1494>
   12b68:	ldr	r0, [sp, #48]	; 0x30
   12b6c:	bl	13af4 <mmk_matcher_get_predicate@@Base>
   12b70:	str	r0, [sp, #40]	; 0x28
   12b74:	ldr	r0, [sp, #40]	; 0x28
   12b78:	ldr	r1, [fp, #-8]
   12b7c:	str	r0, [sp, #16]
   12b80:	mov	r0, r1
   12b84:	ldr	r1, [sp, #16]
   12b88:	blx	r1
   12b8c:	cmp	r0, #0
   12b90:	bne	12b98 <main@@Base+0x1490>
   12b94:	b	12d1c <main@@Base+0x1614>
   12b98:	b	12b9c <main@@Base+0x1494>
   12b9c:	b	12ba0 <main@@Base+0x1498>
   12ba0:	b	12ba4 <main@@Base+0x149c>
   12ba4:	b	12bd0 <main@@Base+0x14c8>
   12ba8:	sub	r0, fp, #8
   12bac:	ldr	r1, [sp, #52]	; 0x34
   12bb0:	add	r1, r1, #28
   12bb4:	add	r1, r1, #12
   12bb8:	movw	r2, #4
   12bbc:	bl	154c8 <mmk_memcmp@@Base>
   12bc0:	cmp	r0, #0
   12bc4:	beq	12bcc <main@@Base+0x14c4>
   12bc8:	b	12d1c <main@@Base+0x1614>
   12bcc:	b	12bd0 <main@@Base+0x14c8>
   12bd0:	ldr	r0, [sp, #52]	; 0x34
   12bd4:	ldr	r0, [r0, #12]
   12bd8:	cmp	r0, #0
   12bdc:	beq	12bf8 <main@@Base+0x14f0>
   12be0:	ldr	r0, [sp, #52]	; 0x34
   12be4:	ldr	r0, [r0, #12]
   12be8:	str	r0, [sp, #12]
   12bec:	bl	115b8 <__errno_location@plt>
   12bf0:	ldr	r1, [sp, #12]
   12bf4:	str	r1, [r0]
   12bf8:	ldr	r0, [sp, #52]	; 0x34
   12bfc:	ldr	r0, [r0, #20]
   12c00:	movw	r1, #0
   12c04:	cmp	r0, r1
   12c08:	beq	12c64 <main@@Base+0x155c>
   12c0c:	ldr	r0, [sp, #52]	; 0x34
   12c10:	ldr	r0, [r0, #16]
   12c14:	movw	r1, #0
   12c18:	cmp	r0, r1
   12c1c:	bne	12c64 <main@@Base+0x155c>
   12c20:	b	12c24 <main@@Base+0x151c>
   12c24:	b	12c28 <main@@Base+0x1520>
   12c28:	b	12c2c <main@@Base+0x1524>
   12c2c:	ldr	r0, [sp, #52]	; 0x34
   12c30:	ldr	r0, [r0, #20]
   12c34:	ldr	r1, [fp, #-8]
   12c38:	str	r0, [sp, #8]
   12c3c:	mov	r0, r1
   12c40:	ldr	r1, [sp, #8]
   12c44:	blx	r1
   12c48:	str	r0, [sp, #36]	; 0x24
   12c4c:	b	12c50 <main@@Base+0x1548>
   12c50:	b	12c54 <main@@Base+0x154c>
   12c54:	b	12c58 <main@@Base+0x1550>
   12c58:	ldr	r0, [sp, #36]	; 0x24
   12c5c:	str	r0, [fp, #-4]
   12c60:	b	12d44 <main@@Base+0x163c>
   12c64:	ldr	r0, [sp, #52]	; 0x34
   12c68:	ldr	r0, [r0, #20]
   12c6c:	movw	r1, #0
   12c70:	cmp	r0, r1
   12c74:	beq	12cd0 <main@@Base+0x15c8>
   12c78:	ldr	r0, [sp, #52]	; 0x34
   12c7c:	ldr	r0, [r0, #16]
   12c80:	movw	r1, #0
   12c84:	cmp	r0, r1
   12c88:	beq	12cd0 <main@@Base+0x15c8>
   12c8c:	b	12c90 <main@@Base+0x1588>
   12c90:	b	12c94 <main@@Base+0x158c>
   12c94:	ldr	r0, [sp, #52]	; 0x34
   12c98:	ldr	r0, [r0, #20]
   12c9c:	ldr	r1, [fp, #-8]
   12ca0:	str	r0, [sp, #4]
   12ca4:	mov	r0, r1
   12ca8:	ldr	r1, [sp, #4]
   12cac:	blx	r1
   12cb0:	b	12cb4 <main@@Base+0x15ac>
   12cb4:	b	12cb8 <main@@Base+0x15b0>
   12cb8:	b	12cbc <main@@Base+0x15b4>
   12cbc:	ldr	r0, [sp, #52]	; 0x34
   12cc0:	ldr	r0, [r0, #16]
   12cc4:	ldr	r0, [r0]
   12cc8:	str	r0, [fp, #-4]
   12ccc:	b	12d44 <main@@Base+0x163c>
   12cd0:	ldr	r0, [sp, #52]	; 0x34
   12cd4:	ldr	r0, [r0, #16]
   12cd8:	movw	r1, #0
   12cdc:	cmp	r0, r1
   12ce0:	beq	12d00 <main@@Base+0x15f8>
   12ce4:	b	12ce8 <main@@Base+0x15e0>
   12ce8:	b	12cec <main@@Base+0x15e4>
   12cec:	ldr	r0, [sp, #52]	; 0x34
   12cf0:	ldr	r0, [r0, #16]
   12cf4:	ldr	r0, [r0]
   12cf8:	str	r0, [fp, #-4]
   12cfc:	b	12d44 <main@@Base+0x163c>
   12d00:	b	12d04 <main@@Base+0x15fc>
   12d04:	b	12d08 <main@@Base+0x1600>
   12d08:	ldr	r0, [pc, #68]	; 12d54 <main@@Base+0x164c>
   12d0c:	add	r0, pc, r0
   12d10:	ldr	r0, [r0]
   12d14:	str	r0, [fp, #-4]
   12d18:	b	12d44 <main@@Base+0x163c>
   12d1c:	ldr	r0, [sp, #56]	; 0x38
   12d20:	ldr	r0, [r0, #4]
   12d24:	str	r0, [sp, #56]	; 0x38
   12d28:	b	12a5c <main@@Base+0x1354>
   12d2c:	b	12d30 <main@@Base+0x1628>
   12d30:	b	12d34 <main@@Base+0x162c>
   12d34:	ldr	r0, [pc, #20]	; 12d50 <main@@Base+0x1648>
   12d38:	add	r0, pc, r0
   12d3c:	ldr	r0, [r0]
   12d40:	str	r0, [fp, #-4]
   12d44:	ldr	r0, [fp, #-4]
   12d48:	mov	sp, fp
   12d4c:	pop	{fp, pc}
   12d50:	andeq	r4, r1, r0, lsr #7
   12d54:	andeq	r4, r1, ip, asr #7
   12d58:	andeq	r4, r1, r4, asr #13
   12d5c:	sub	sp, sp, #12
   12d60:	push	{fp, lr}
   12d64:	mov	fp, sp
   12d68:	sub	sp, sp, #212	; 0xd4
   12d6c:	str	r3, [fp, #16]
   12d70:	str	r2, [fp, #12]
   12d74:	str	r1, [fp, #8]
   12d78:	ldr	r1, [pc, #2300]	; 1367c <main@@Base+0x1f74>
   12d7c:	add	r1, pc, r1
   12d80:	str	r0, [fp, #-8]
   12d84:	str	r1, [fp, #-12]
   12d88:	sub	r0, fp, #16
   12d8c:	add	r1, fp, #8
   12d90:	str	r1, [r0]
   12d94:	bl	139e0 <mmk_matcher_ctx@@Base>
   12d98:	str	r0, [fp, #-24]	; 0xffffffe8
   12d9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12da0:	movw	r1, #0
   12da4:	cmp	r0, r1
   12da8:	beq	132dc <main@@Base+0x1bd4>
   12dac:	bl	14d2c <mmk_ctx@@Base>
   12db0:	bl	14a7c <mmk_stub_context@@Base>
   12db4:	str	r0, [fp, #-28]	; 0xffffffe4
   12db8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12dbc:	ldr	r0, [r0]
   12dc0:	cmp	r0, #0
   12dc4:	bne	12e8c <main@@Base+0x1784>
   12dc8:	movw	r0, #44	; 0x2c
   12dcc:	bl	15908 <mmk_malloc@@Base>
   12dd0:	str	r0, [fp, #-32]	; 0xffffffe0
   12dd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12dd8:	add	r0, r0, #8
   12ddc:	str	r0, [sp, #48]	; 0x30
   12de0:	bl	15bd0 <mmk_when_get_result@@Base>
   12de4:	ldr	r1, [sp, #48]	; 0x30
   12de8:	str	r0, [sp, #44]	; 0x2c
   12dec:	mov	r0, r1
   12df0:	ldr	r1, [sp, #44]	; 0x2c
   12df4:	movw	r2, #20
   12df8:	bl	11528 <memcpy@plt>
   12dfc:	ldr	r0, [fp, #-8]
   12e00:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12e04:	str	r0, [r1, #40]	; 0x28
   12e08:	mov	r0, #0
   12e0c:	str	r0, [fp, #-36]	; 0xffffffdc
   12e10:	str	r0, [fp, #-40]	; 0xffffffd8
   12e14:	ldr	r0, [fp, #-16]
   12e18:	str	r0, [fp, #-20]	; 0xffffffec
   12e1c:	ldr	r0, [fp, #-12]
   12e20:	ldr	r1, [fp, #-8]
   12e24:	ldr	r2, [fp, #-20]	; 0xffffffec
   12e28:	sub	r3, fp, #36	; 0x24
   12e2c:	sub	ip, fp, #40	; 0x28
   12e30:	str	r0, [sp, #40]	; 0x28
   12e34:	mov	r0, r1
   12e38:	mov	r1, r2
   12e3c:	mov	r2, r3
   12e40:	mov	r3, ip
   12e44:	ldr	ip, [sp, #40]	; 0x28
   12e48:	blx	ip
   12e4c:	str	r0, [fp, #-44]	; 0xffffffd4
   12e50:	sub	r0, fp, #20
   12e54:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12e58:	cmp	r1, #0
   12e5c:	beq	12e78 <main@@Base+0x1770>
   12e60:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12e64:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12e68:	str	r0, [r1, #32]
   12e6c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12e70:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12e74:	str	r0, [r1, #36]	; 0x24
   12e78:	b	12e7c <main@@Base+0x1774>
   12e7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12e80:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12e84:	bl	15bf0 <mmk_when_impl@@Base>
   12e88:	b	132c4 <main@@Base+0x1bbc>
   12e8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12e90:	ldr	r0, [r0]
   12e94:	cmp	r0, #1
   12e98:	bne	132c0 <main@@Base+0x1bb8>
   12e9c:	movw	r0, #0
   12ea0:	str	r0, [fp, #-48]	; 0xffffffd0
   12ea4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12ea8:	bl	13dfc <mmk_mock_params_begin@@Base>
   12eac:	str	r0, [fp, #-52]	; 0xffffffcc
   12eb0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12eb4:	movw	r1, #0
   12eb8:	cmp	r0, r1
   12ebc:	beq	13280 <main@@Base+0x1b78>
   12ec0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12ec4:	str	r0, [fp, #-56]	; 0xffffffc8
   12ec8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12ecc:	ldr	r0, [r0, #8]
   12ed0:	movw	r1, #0
   12ed4:	cmp	r0, r1
   12ed8:	beq	12fec <main@@Base+0x18e4>
   12edc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12ee0:	ldr	r0, [r0, #8]
   12ee4:	str	r0, [fp, #-56]	; 0xffffffc8
   12ee8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12eec:	ldr	r0, [r0]
   12ef0:	cmp	r0, #0
   12ef4:	bne	12efc <main@@Base+0x17f4>
   12ef8:	b	12fe8 <main@@Base+0x18e0>
   12efc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12f00:	ldr	r0, [r0]
   12f04:	and	r0, r0, #-2147483648	; 0x80000000
   12f08:	cmp	r0, #0
   12f0c:	beq	12f98 <main@@Base+0x1890>
   12f10:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12f14:	add	r0, r0, #12
   12f18:	sub	r1, fp, #8
   12f1c:	movw	r2, #4
   12f20:	bl	154c8 <mmk_memcmp@@Base>
   12f24:	str	r0, [fp, #-60]	; 0xffffffc4
   12f28:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12f2c:	cmp	r0, #0
   12f30:	bne	12f4c <main@@Base+0x1844>
   12f34:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12f38:	ldr	r0, [r0]
   12f3c:	and	r0, r0, #2
   12f40:	cmp	r0, #0
   12f44:	bne	12f4c <main@@Base+0x1844>
   12f48:	b	13268 <main@@Base+0x1b60>
   12f4c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12f50:	cmp	r0, #0
   12f54:	bge	12f70 <main@@Base+0x1868>
   12f58:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12f5c:	ldr	r0, [r0]
   12f60:	and	r0, r0, #4
   12f64:	cmp	r0, #0
   12f68:	bne	12f70 <main@@Base+0x1868>
   12f6c:	b	13268 <main@@Base+0x1b60>
   12f70:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12f74:	cmp	r0, #0
   12f78:	ble	12f94 <main@@Base+0x188c>
   12f7c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12f80:	ldr	r0, [r0]
   12f84:	and	r0, r0, #8
   12f88:	cmp	r0, #0
   12f8c:	bne	12f94 <main@@Base+0x188c>
   12f90:	b	13268 <main@@Base+0x1b60>
   12f94:	b	12fe4 <main@@Base+0x18dc>
   12f98:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12f9c:	ldr	r0, [r0]
   12fa0:	cmp	r0, #1
   12fa4:	bne	12fe0 <main@@Base+0x18d8>
   12fa8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   12fac:	bl	13af4 <mmk_matcher_get_predicate@@Base>
   12fb0:	str	r0, [fp, #-64]	; 0xffffffc0
   12fb4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   12fb8:	ldr	r1, [fp, #-52]	; 0xffffffcc
   12fbc:	ldr	r1, [r1, #12]
   12fc0:	str	r0, [sp, #36]	; 0x24
   12fc4:	mov	r0, r1
   12fc8:	ldr	r1, [sp, #36]	; 0x24
   12fcc:	blx	r1
   12fd0:	cmp	r0, #0
   12fd4:	bne	12fdc <main@@Base+0x18d4>
   12fd8:	b	13268 <main@@Base+0x1b60>
   12fdc:	b	12fe0 <main@@Base+0x18d8>
   12fe0:	b	12fe4 <main@@Base+0x18dc>
   12fe4:	b	12fe8 <main@@Base+0x18e0>
   12fe8:	b	13010 <main@@Base+0x1908>
   12fec:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12ff0:	add	r0, r0, #12
   12ff4:	sub	r1, fp, #8
   12ff8:	movw	r2, #4
   12ffc:	bl	154c8 <mmk_memcmp@@Base>
   13000:	cmp	r0, #0
   13004:	beq	1300c <main@@Base+0x1904>
   13008:	b	13268 <main@@Base+0x1b60>
   1300c:	b	13010 <main@@Base+0x1908>
   13010:	b	13014 <main@@Base+0x190c>
   13014:	mov	r0, #0
   13018:	str	r0, [fp, #-68]	; 0xffffffbc
   1301c:	str	r0, [fp, #-72]	; 0xffffffb8
   13020:	ldr	r0, [fp, #-16]
   13024:	str	r0, [fp, #-20]	; 0xffffffec
   13028:	ldr	r0, [fp, #-12]
   1302c:	ldr	r1, [fp, #-8]
   13030:	ldr	r2, [fp, #-20]	; 0xffffffec
   13034:	sub	r3, fp, #68	; 0x44
   13038:	sub	ip, fp, #72	; 0x48
   1303c:	str	r0, [sp, #32]
   13040:	mov	r0, r1
   13044:	mov	r1, r2
   13048:	mov	r2, r3
   1304c:	mov	r3, ip
   13050:	ldr	ip, [sp, #32]
   13054:	blx	ip
   13058:	str	r0, [fp, #-76]	; 0xffffffb4
   1305c:	sub	r0, fp, #20
   13060:	ldr	r1, [fp, #-76]	; 0xffffffb4
   13064:	cmp	r1, #0
   13068:	beq	13080 <main@@Base+0x1978>
   1306c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13070:	ldr	r0, [r0, #4]
   13074:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13078:	cmp	r0, r1
   1307c:	beq	13084 <main@@Base+0x197c>
   13080:	b	13268 <main@@Base+0x1b60>
   13084:	movw	r0, #0
   13088:	str	r0, [fp, #-80]	; 0xffffffb0
   1308c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13090:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13094:	cmp	r0, r1
   13098:	bcs	1324c <main@@Base+0x1b44>
   1309c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   130a0:	ldr	r0, [r0, #8]
   130a4:	ldr	r1, [fp, #-80]	; 0xffffffb0
   130a8:	ldr	r0, [r0, r1, lsl #2]
   130ac:	str	r0, [fp, #-84]	; 0xffffffac
   130b0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   130b4:	ldr	r1, [fp, #-80]	; 0xffffffb0
   130b8:	add	r0, r0, r1, lsl #2
   130bc:	ldr	r0, [r0]
   130c0:	str	r0, [fp, #-88]	; 0xffffffa8
   130c4:	ldr	r0, [fp, #-84]	; 0xffffffac
   130c8:	ldr	r0, [r0]
   130cc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   130d0:	ldr	r1, [r1]
   130d4:	cmp	r0, r1
   130d8:	beq	130e0 <main@@Base+0x19d8>
   130dc:	b	13268 <main@@Base+0x1b60>
   130e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   130e4:	ldr	r0, [r0, #8]
   130e8:	movw	r1, #0
   130ec:	cmp	r0, r1
   130f0:	beq	13208 <main@@Base+0x1b00>
   130f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   130f8:	ldr	r0, [r0, #8]
   130fc:	str	r0, [fp, #-56]	; 0xffffffc8
   13100:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13104:	ldr	r0, [r0]
   13108:	cmp	r0, #0
   1310c:	bne	13114 <main@@Base+0x1a0c>
   13110:	b	13204 <main@@Base+0x1afc>
   13114:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13118:	ldr	r0, [r0]
   1311c:	and	r0, r0, #-2147483648	; 0x80000000
   13120:	cmp	r0, #0
   13124:	beq	131b8 <main@@Base+0x1ab0>
   13128:	ldr	r0, [fp, #-84]	; 0xffffffac
   1312c:	add	r0, r0, #4
   13130:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13134:	add	r1, r1, #4
   13138:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1313c:	ldr	r2, [r2]
   13140:	bl	154c8 <mmk_memcmp@@Base>
   13144:	str	r0, [fp, #-92]	; 0xffffffa4
   13148:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1314c:	cmp	r0, #0
   13150:	bne	1316c <main@@Base+0x1a64>
   13154:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13158:	ldr	r0, [r0]
   1315c:	and	r0, r0, #2
   13160:	cmp	r0, #0
   13164:	bne	1316c <main@@Base+0x1a64>
   13168:	b	13268 <main@@Base+0x1b60>
   1316c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13170:	cmp	r0, #0
   13174:	bge	13190 <main@@Base+0x1a88>
   13178:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1317c:	ldr	r0, [r0]
   13180:	and	r0, r0, #4
   13184:	cmp	r0, #0
   13188:	bne	13190 <main@@Base+0x1a88>
   1318c:	b	13268 <main@@Base+0x1b60>
   13190:	ldr	r0, [fp, #-92]	; 0xffffffa4
   13194:	cmp	r0, #0
   13198:	ble	131b4 <main@@Base+0x1aac>
   1319c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   131a0:	ldr	r0, [r0]
   131a4:	and	r0, r0, #8
   131a8:	cmp	r0, #0
   131ac:	bne	131b4 <main@@Base+0x1aac>
   131b0:	b	13268 <main@@Base+0x1b60>
   131b4:	b	13200 <main@@Base+0x1af8>
   131b8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   131bc:	ldr	r0, [r0]
   131c0:	cmp	r0, #1
   131c4:	bne	131fc <main@@Base+0x1af4>
   131c8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   131cc:	bl	13af4 <mmk_matcher_get_predicate@@Base>
   131d0:	str	r0, [fp, #-96]	; 0xffffffa0
   131d4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   131d8:	ldr	r1, [fp, #-84]	; 0xffffffac
   131dc:	str	r0, [sp, #28]
   131e0:	mov	r0, r1
   131e4:	ldr	r1, [sp, #28]
   131e8:	blx	r1
   131ec:	cmp	r0, #0
   131f0:	bne	131f8 <main@@Base+0x1af0>
   131f4:	b	13268 <main@@Base+0x1b60>
   131f8:	b	131fc <main@@Base+0x1af4>
   131fc:	b	13200 <main@@Base+0x1af8>
   13200:	b	13204 <main@@Base+0x1afc>
   13204:	b	13234 <main@@Base+0x1b2c>
   13208:	ldr	r0, [fp, #-84]	; 0xffffffac
   1320c:	add	r0, r0, #4
   13210:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13214:	add	r1, r1, #4
   13218:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1321c:	ldr	r2, [r2]
   13220:	bl	154c8 <mmk_memcmp@@Base>
   13224:	cmp	r0, #0
   13228:	beq	13230 <main@@Base+0x1b28>
   1322c:	b	13268 <main@@Base+0x1b60>
   13230:	b	13234 <main@@Base+0x1b2c>
   13234:	ldr	r0, [fp, #-88]	; 0xffffffa8
   13238:	bl	1598c <mmk_free@@Base>
   1323c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13240:	add	r0, r0, #1
   13244:	str	r0, [fp, #-80]	; 0xffffffb0
   13248:	b	1308c <main@@Base+0x1984>
   1324c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13250:	bl	1598c <mmk_free@@Base>
   13254:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13258:	ldr	r0, [r0]
   1325c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   13260:	add	r0, r1, r0
   13264:	str	r0, [fp, #-48]	; 0xffffffd0
   13268:	b	1326c <main@@Base+0x1b64>
   1326c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13270:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13274:	bl	13e50 <mmk_mock_params_next@@Base>
   13278:	str	r0, [fp, #-52]	; 0xffffffcc
   1327c:	b	12eb0 <main@@Base+0x17a8>
   13280:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13284:	str	r0, [fp, #-100]	; 0xffffff9c
   13288:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1328c:	movw	r1, #0
   13290:	cmp	r0, r1
   13294:	beq	132b8 <main@@Base+0x1bb0>
   13298:	ldr	r0, [fp, #-100]	; 0xffffff9c
   1329c:	ldr	r0, [r0, #8]
   132a0:	str	r0, [fp, #-104]	; 0xffffff98
   132a4:	ldr	r0, [fp, #-100]	; 0xffffff9c
   132a8:	bl	1598c <mmk_free@@Base>
   132ac:	ldr	r0, [fp, #-104]	; 0xffffff98
   132b0:	str	r0, [fp, #-100]	; 0xffffff9c
   132b4:	b	13288 <main@@Base+0x1b80>
   132b8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   132bc:	bl	15038 <mmk_verify_set_times@@Base>
   132c0:	b	132c4 <main@@Base+0x1bbc>
   132c4:	ldr	r0, [pc, #956]	; 13688 <main@@Base+0x1f80>
   132c8:	add	r0, pc, r0
   132cc:	sub	r1, fp, #16
   132d0:	ldr	r0, [r0]
   132d4:	str	r0, [fp, #-4]
   132d8:	b	13668 <main@@Base+0x1f60>
   132dc:	movw	r0, #0
   132e0:	str	r0, [sp, #88]	; 0x58
   132e4:	str	r0, [sp, #92]	; 0x5c
   132e8:	str	r0, [sp, #96]	; 0x60
   132ec:	ldr	r0, [fp, #-8]
   132f0:	str	r0, [sp, #100]	; 0x64
   132f4:	add	r0, sp, #88	; 0x58
   132f8:	str	r0, [sp, #104]	; 0x68
   132fc:	mov	r0, #0
   13300:	str	r0, [sp, #84]	; 0x54
   13304:	str	r0, [sp, #80]	; 0x50
   13308:	ldr	r0, [fp, #-16]
   1330c:	str	r0, [fp, #-20]	; 0xffffffec
   13310:	ldr	r0, [fp, #-12]
   13314:	ldr	r1, [fp, #-8]
   13318:	ldr	r2, [fp, #-20]	; 0xffffffec
   1331c:	add	r3, sp, #84	; 0x54
   13320:	add	ip, sp, #80	; 0x50
   13324:	str	r0, [sp, #24]
   13328:	mov	r0, r1
   1332c:	mov	r1, r2
   13330:	mov	r2, r3
   13334:	mov	r3, ip
   13338:	ldr	ip, [sp, #24]
   1333c:	blx	ip
   13340:	str	r0, [sp, #76]	; 0x4c
   13344:	sub	r0, fp, #20
   13348:	ldr	r1, [sp, #76]	; 0x4c
   1334c:	cmp	r1, #0
   13350:	beq	1336c <main@@Base+0x1c64>
   13354:	ldr	r0, [sp, #84]	; 0x54
   13358:	ldr	r1, [sp, #104]	; 0x68
   1335c:	str	r0, [r1, #4]
   13360:	ldr	r0, [sp, #80]	; 0x50
   13364:	ldr	r1, [sp, #104]	; 0x68
   13368:	str	r0, [r1, #8]
   1336c:	b	13370 <main@@Base+0x1c68>
   13370:	ldr	r0, [sp, #104]	; 0x68
   13374:	movw	r1, #16
   13378:	bl	151c0 <mmk_verify_register_call@@Base>
   1337c:	bl	13ecc <mmk_mock_get_params@@Base>
   13380:	str	r0, [sp, #72]	; 0x48
   13384:	ldr	r0, [sp, #72]	; 0x48
   13388:	movw	r1, #0
   1338c:	cmp	r0, r1
   13390:	beq	13654 <main@@Base+0x1f4c>
   13394:	ldr	r0, [sp, #72]	; 0x48
   13398:	str	r0, [sp, #68]	; 0x44
   1339c:	ldr	r0, [sp, #72]	; 0x48
   133a0:	ldr	r0, [r0]
   133a4:	str	r0, [sp, #64]	; 0x40
   133a8:	ldr	r0, [sp, #64]	; 0x40
   133ac:	ldr	r0, [r0, #8]
   133b0:	movw	r1, #0
   133b4:	cmp	r0, r1
   133b8:	beq	134d0 <main@@Base+0x1dc8>
   133bc:	ldr	r0, [sp, #64]	; 0x40
   133c0:	ldr	r0, [r0, #8]
   133c4:	str	r0, [sp, #64]	; 0x40
   133c8:	ldr	r0, [sp, #64]	; 0x40
   133cc:	ldr	r0, [r0]
   133d0:	cmp	r0, #0
   133d4:	bne	133dc <main@@Base+0x1cd4>
   133d8:	b	134cc <main@@Base+0x1dc4>
   133dc:	ldr	r0, [sp, #64]	; 0x40
   133e0:	ldr	r0, [r0]
   133e4:	and	r0, r0, #-2147483648	; 0x80000000
   133e8:	cmp	r0, #0
   133ec:	beq	13480 <main@@Base+0x1d78>
   133f0:	sub	r0, fp, #8
   133f4:	mov	r1, r0
   133f8:	str	r0, [sp, #20]
   133fc:	mov	r0, r1
   13400:	ldr	r1, [sp, #20]
   13404:	movw	r2, #4
   13408:	bl	154c8 <mmk_memcmp@@Base>
   1340c:	str	r0, [sp, #60]	; 0x3c
   13410:	ldr	r0, [sp, #60]	; 0x3c
   13414:	cmp	r0, #0
   13418:	bne	13434 <main@@Base+0x1d2c>
   1341c:	ldr	r0, [sp, #64]	; 0x40
   13420:	ldr	r0, [r0]
   13424:	and	r0, r0, #2
   13428:	cmp	r0, #0
   1342c:	bne	13434 <main@@Base+0x1d2c>
   13430:	b	13644 <main@@Base+0x1f3c>
   13434:	ldr	r0, [sp, #60]	; 0x3c
   13438:	cmp	r0, #0
   1343c:	bge	13458 <main@@Base+0x1d50>
   13440:	ldr	r0, [sp, #64]	; 0x40
   13444:	ldr	r0, [r0]
   13448:	and	r0, r0, #4
   1344c:	cmp	r0, #0
   13450:	bne	13458 <main@@Base+0x1d50>
   13454:	b	13644 <main@@Base+0x1f3c>
   13458:	ldr	r0, [sp, #60]	; 0x3c
   1345c:	cmp	r0, #0
   13460:	ble	1347c <main@@Base+0x1d74>
   13464:	ldr	r0, [sp, #64]	; 0x40
   13468:	ldr	r0, [r0]
   1346c:	and	r0, r0, #8
   13470:	cmp	r0, #0
   13474:	bne	1347c <main@@Base+0x1d74>
   13478:	b	13644 <main@@Base+0x1f3c>
   1347c:	b	134c8 <main@@Base+0x1dc0>
   13480:	ldr	r0, [sp, #64]	; 0x40
   13484:	ldr	r0, [r0]
   13488:	cmp	r0, #1
   1348c:	bne	134c4 <main@@Base+0x1dbc>
   13490:	ldr	r0, [sp, #64]	; 0x40
   13494:	bl	13af4 <mmk_matcher_get_predicate@@Base>
   13498:	str	r0, [sp, #56]	; 0x38
   1349c:	ldr	r0, [sp, #56]	; 0x38
   134a0:	ldr	r1, [fp, #-8]
   134a4:	str	r0, [sp, #16]
   134a8:	mov	r0, r1
   134ac:	ldr	r1, [sp, #16]
   134b0:	blx	r1
   134b4:	cmp	r0, #0
   134b8:	bne	134c0 <main@@Base+0x1db8>
   134bc:	b	13644 <main@@Base+0x1f3c>
   134c0:	b	134c4 <main@@Base+0x1dbc>
   134c4:	b	134c8 <main@@Base+0x1dc0>
   134c8:	b	134cc <main@@Base+0x1dc4>
   134cc:	b	134f8 <main@@Base+0x1df0>
   134d0:	sub	r0, fp, #8
   134d4:	ldr	r1, [sp, #68]	; 0x44
   134d8:	add	r1, r1, #28
   134dc:	add	r1, r1, #12
   134e0:	movw	r2, #4
   134e4:	bl	154c8 <mmk_memcmp@@Base>
   134e8:	cmp	r0, #0
   134ec:	beq	134f4 <main@@Base+0x1dec>
   134f0:	b	13644 <main@@Base+0x1f3c>
   134f4:	b	134f8 <main@@Base+0x1df0>
   134f8:	ldr	r0, [sp, #68]	; 0x44
   134fc:	ldr	r0, [r0, #12]
   13500:	cmp	r0, #0
   13504:	beq	13520 <main@@Base+0x1e18>
   13508:	ldr	r0, [sp, #68]	; 0x44
   1350c:	ldr	r0, [r0, #12]
   13510:	str	r0, [sp, #12]
   13514:	bl	115b8 <__errno_location@plt>
   13518:	ldr	r1, [sp, #12]
   1351c:	str	r1, [r0]
   13520:	ldr	r0, [sp, #68]	; 0x44
   13524:	ldr	r0, [r0, #20]
   13528:	movw	r1, #0
   1352c:	cmp	r0, r1
   13530:	beq	13590 <main@@Base+0x1e88>
   13534:	ldr	r0, [sp, #68]	; 0x44
   13538:	ldr	r0, [r0, #16]
   1353c:	movw	r1, #0
   13540:	cmp	r0, r1
   13544:	bne	13590 <main@@Base+0x1e88>
   13548:	b	1354c <main@@Base+0x1e44>
   1354c:	ldr	r0, [fp, #-16]
   13550:	str	r0, [fp, #-20]	; 0xffffffec
   13554:	ldr	r0, [sp, #68]	; 0x44
   13558:	ldr	r0, [r0, #20]
   1355c:	ldr	r1, [fp, #-8]
   13560:	ldr	r2, [fp, #-20]	; 0xffffffec
   13564:	str	r0, [sp, #8]
   13568:	mov	r0, r1
   1356c:	mov	r1, r2
   13570:	ldr	r2, [sp, #8]
   13574:	blx	r2
   13578:	str	r0, [sp, #52]	; 0x34
   1357c:	sub	r0, fp, #20
   13580:	sub	r1, fp, #16
   13584:	ldr	r2, [sp, #52]	; 0x34
   13588:	str	r2, [fp, #-4]
   1358c:	b	13668 <main@@Base+0x1f60>
   13590:	ldr	r0, [sp, #68]	; 0x44
   13594:	ldr	r0, [r0, #20]
   13598:	movw	r1, #0
   1359c:	cmp	r0, r1
   135a0:	beq	13600 <main@@Base+0x1ef8>
   135a4:	ldr	r0, [sp, #68]	; 0x44
   135a8:	ldr	r0, [r0, #16]
   135ac:	movw	r1, #0
   135b0:	cmp	r0, r1
   135b4:	beq	13600 <main@@Base+0x1ef8>
   135b8:	ldr	r0, [fp, #-16]
   135bc:	str	r0, [fp, #-20]	; 0xffffffec
   135c0:	ldr	r0, [sp, #68]	; 0x44
   135c4:	ldr	r0, [r0, #20]
   135c8:	ldr	r1, [fp, #-8]
   135cc:	ldr	r2, [fp, #-20]	; 0xffffffec
   135d0:	str	r0, [sp, #4]
   135d4:	mov	r0, r1
   135d8:	mov	r1, r2
   135dc:	ldr	r2, [sp, #4]
   135e0:	blx	r2
   135e4:	sub	r1, fp, #20
   135e8:	sub	r2, fp, #16
   135ec:	ldr	r3, [sp, #68]	; 0x44
   135f0:	ldr	r3, [r3, #16]
   135f4:	ldr	r3, [r3]
   135f8:	str	r3, [fp, #-4]
   135fc:	b	13668 <main@@Base+0x1f60>
   13600:	ldr	r0, [sp, #68]	; 0x44
   13604:	ldr	r0, [r0, #16]
   13608:	movw	r1, #0
   1360c:	cmp	r0, r1
   13610:	beq	1362c <main@@Base+0x1f24>
   13614:	sub	r0, fp, #16
   13618:	ldr	r1, [sp, #68]	; 0x44
   1361c:	ldr	r1, [r1, #16]
   13620:	ldr	r1, [r1]
   13624:	str	r1, [fp, #-4]
   13628:	b	13668 <main@@Base+0x1f60>
   1362c:	ldr	r0, [pc, #80]	; 13684 <main@@Base+0x1f7c>
   13630:	add	r0, pc, r0
   13634:	sub	r1, fp, #16
   13638:	ldr	r0, [r0]
   1363c:	str	r0, [fp, #-4]
   13640:	b	13668 <main@@Base+0x1f60>
   13644:	ldr	r0, [sp, #72]	; 0x48
   13648:	ldr	r0, [r0, #4]
   1364c:	str	r0, [sp, #72]	; 0x48
   13650:	b	13384 <main@@Base+0x1c7c>
   13654:	ldr	r0, [pc, #36]	; 13680 <main@@Base+0x1f78>
   13658:	add	r0, pc, r0
   1365c:	sub	r1, fp, #16
   13660:	ldr	r0, [r0]
   13664:	str	r0, [fp, #-4]
   13668:	ldr	r0, [fp, #-4]
   1366c:	mov	sp, fp
   13670:	pop	{fp, lr}
   13674:	add	sp, sp, #12
   13678:	bx	lr
   1367c:	andeq	r0, r0, r8, lsl #18
   13680:	andeq	r3, r1, r4, lsl #21
   13684:	andeq	r3, r1, ip, lsr #21
   13688:	andeq	r3, r1, r4, lsl lr
   1368c:	push	{fp, lr}
   13690:	mov	fp, sp
   13694:	sub	sp, sp, #32
   13698:	str	r1, [fp, #-8]
   1369c:	str	r0, [fp, #-12]
   136a0:	str	r2, [sp, #16]
   136a4:	str	r3, [sp, #12]
   136a8:	ldr	r0, [fp, #-12]
   136ac:	cmp	r0, #0
   136b0:	bgt	136c0 <main@@Base+0x1fb8>
   136b4:	movw	r0, #0
   136b8:	str	r0, [fp, #-4]
   136bc:	b	1377c <main@@Base+0x2074>
   136c0:	ldr	r0, [fp, #-12]
   136c4:	lsl	r0, r0, #2
   136c8:	bl	15908 <mmk_malloc@@Base>
   136cc:	str	r0, [sp, #8]
   136d0:	movw	r0, #0
   136d4:	str	r0, [sp, #4]
   136d8:	ldr	r0, [sp, #4]
   136dc:	ldr	r1, [fp, #-12]
   136e0:	cmp	r0, r1
   136e4:	bge	1375c <main@@Base+0x2054>
   136e8:	b	136ec <main@@Base+0x1fe4>
   136ec:	mov	r0, #8
   136f0:	bl	15908 <mmk_malloc@@Base>
   136f4:	ldr	r1, [sp, #8]
   136f8:	ldr	r2, [sp, #4]
   136fc:	str	r0, [r1, r2, lsl #2]
   13700:	ldr	r0, [sp, #8]
   13704:	ldr	r1, [sp, #4]
   13708:	ldr	r0, [r0, r1, lsl #2]
   1370c:	mov	r1, #4
   13710:	str	r1, [r0]
   13714:	ldr	r0, [fp, #-8]
   13718:	add	r1, r0, #4
   1371c:	str	r1, [fp, #-8]
   13720:	ldr	r0, [r0]
   13724:	str	r0, [sp]
   13728:	ldr	r0, [sp, #8]
   1372c:	ldr	r1, [sp, #4]
   13730:	add	r0, r0, r1, lsl #2
   13734:	ldr	r0, [r0]
   13738:	add	r0, r0, #4
   1373c:	mov	r1, sp
   13740:	movw	r2, #4
   13744:	bl	15580 <mmk_memcpy@@Base>
   13748:	b	1374c <main@@Base+0x2044>
   1374c:	ldr	r0, [sp, #4]
   13750:	add	r0, r0, #1
   13754:	str	r0, [sp, #4]
   13758:	b	136d8 <main@@Base+0x1fd0>
   1375c:	ldr	r0, [fp, #-12]
   13760:	ldr	r1, [sp, #16]
   13764:	str	r0, [r1]
   13768:	ldr	r0, [sp, #8]
   1376c:	ldr	r1, [sp, #12]
   13770:	str	r0, [r1]
   13774:	movw	r0, #1
   13778:	str	r0, [fp, #-4]
   1377c:	ldr	r0, [fp, #-4]
   13780:	mov	sp, fp
   13784:	pop	{fp, pc}

00013788 <mmk_init@@Base>:
   13788:	push	{fp, lr}
   1378c:	mov	fp, sp
   13790:	sub	sp, sp, #16
   13794:	ldr	r0, [pc, #168]	; 13844 <mmk_init@@Base+0xbc>
   13798:	add	r0, pc, r0
   1379c:	ldr	r0, [r0]
   137a0:	cmp	r0, #0
   137a4:	beq	137ac <mmk_init@@Base+0x24>
   137a8:	b	1383c <mmk_init@@Base+0xb4>
   137ac:	bl	13ef4 <plt_init_ctx@@Base>
   137b0:	ldr	r1, [pc, #144]	; 13848 <mmk_init@@Base+0xc0>
   137b4:	add	r1, pc, r1
   137b8:	str	r0, [r1, #4]
   137bc:	ldr	r0, [pc, #136]	; 1384c <mmk_init@@Base+0xc4>
   137c0:	add	r0, pc, r0
   137c4:	ldr	r0, [r0, #4]
   137c8:	mvn	r1, #0
   137cc:	cmp	r0, r1
   137d0:	bne	13818 <mmk_init@@Base+0x90>
   137d4:	ldr	r0, [pc, #116]	; 13850 <mmk_init@@Base+0xc8>
   137d8:	add	r1, pc, r0
   137dc:	ldr	r0, [pc, #112]	; 13854 <mmk_init@@Base+0xcc>
   137e0:	add	r2, pc, r0
   137e4:	ldr	r0, [pc, #108]	; 13858 <mmk_init@@Base+0xd0>
   137e8:	add	r0, pc, r0
   137ec:	ldr	r3, [pc, #104]	; 1385c <mmk_init@@Base+0xd4>
   137f0:	ldr	r3, [pc, r3]
   137f4:	ldr	r3, [r3]
   137f8:	str	r0, [fp, #-4]
   137fc:	mov	r0, r3
   13800:	movw	r3, #45	; 0x2d
   13804:	ldr	ip, [fp, #-4]
   13808:	str	ip, [sp]
   1380c:	bl	115ac <fprintf@plt>
   13810:	str	r0, [sp, #8]
   13814:	bl	115f4 <abort@plt>
   13818:	b	1381c <mmk_init@@Base+0x94>
   1381c:	ldr	r0, [pc, #64]	; 13864 <mmk_init@@Base+0xdc>
   13820:	add	r0, pc, r0
   13824:	ldr	r0, [r0, #4]
   13828:	bl	159c8 <mmk_init_vital_functions@@Base>
   1382c:	ldr	r0, [pc, #44]	; 13860 <mmk_init@@Base+0xd8>
   13830:	add	r0, pc, r0
   13834:	movw	r1, #1
   13838:	str	r1, [r0]
   1383c:	mov	sp, fp
   13840:	pop	{fp, pc}
   13844:	andeq	r3, r1, r8, asr #18
   13848:	andeq	r3, r1, ip, lsr #18
   1384c:	andeq	r3, r1, r0, lsr #18
   13850:	andeq	r2, r0, r2, lsr r5
   13854:	andeq	r2, r0, lr, ror r7
   13858:	andeq	r2, r0, r5, asr #15
   1385c:	andeq	r3, r1, r4, lsr #17
   13860:			; <UNDEFINED> instruction: 0x000138b0
   13864:	andeq	r3, r1, r0, asr #17

00013868 <mmk_plt_ctx@@Base>:
   13868:	push	{fp, lr}
   1386c:	mov	fp, sp
   13870:	sub	sp, sp, #16
   13874:	b	13878 <mmk_plt_ctx@@Base+0x10>
   13878:	ldr	r0, [pc, #104]	; 138e8 <mmk_plt_ctx@@Base+0x80>
   1387c:	add	r0, pc, r0
   13880:	ldr	r0, [r0]
   13884:	cmp	r0, #0
   13888:	bne	138d0 <mmk_plt_ctx@@Base+0x68>
   1388c:	ldr	r0, [pc, #88]	; 138ec <mmk_plt_ctx@@Base+0x84>
   13890:	add	r1, pc, r0
   13894:	ldr	r0, [pc, #84]	; 138f0 <mmk_plt_ctx@@Base+0x88>
   13898:	add	r2, pc, r0
   1389c:	ldr	r0, [pc, #80]	; 138f4 <mmk_plt_ctx@@Base+0x8c>
   138a0:	add	r0, pc, r0
   138a4:	ldr	r3, [pc, #76]	; 138f8 <mmk_plt_ctx@@Base+0x90>
   138a8:	ldr	r3, [pc, r3]
   138ac:	ldr	r3, [r3]
   138b0:	str	r0, [fp, #-4]
   138b4:	mov	r0, r3
   138b8:	movw	r3, #54	; 0x36
   138bc:	ldr	ip, [fp, #-4]
   138c0:	str	ip, [sp]
   138c4:	bl	115ac <fprintf@plt>
   138c8:	str	r0, [sp, #8]
   138cc:	bl	115f4 <abort@plt>
   138d0:	b	138d4 <mmk_plt_ctx@@Base+0x6c>
   138d4:	ldr	r0, [pc, #32]	; 138fc <mmk_plt_ctx@@Base+0x94>
   138d8:	add	r0, pc, r0
   138dc:	ldr	r0, [r0, #4]
   138e0:	mov	sp, fp
   138e4:	pop	{fp, pc}
   138e8:	andeq	r3, r1, r4, ror #16
   138ec:	andeq	r2, r0, sl, ror r4
   138f0:	andeq	r2, r0, r6, asr #13
   138f4:	andeq	r2, r0, r4, lsr #14
   138f8:	andeq	r3, r1, ip, ror #15
   138fc:	andeq	r3, r1, r8, lsl #16

00013900 <mmk_reset@@Base>:
   13900:	push	{fp, lr}
   13904:	mov	fp, sp
   13908:	sub	sp, sp, #16
   1390c:	str	r0, [fp, #-4]
   13910:	ldr	r0, [fp, #-4]
   13914:	movw	r1, #0
   13918:	cmp	r0, r1
   1391c:	bne	13924 <mmk_reset@@Base+0x24>
   13920:	b	13944 <mmk_reset@@Base+0x44>
   13924:	ldr	r0, [fp, #-4]
   13928:	bl	14e40 <mmk_ask_ctx@@Base>
   1392c:	str	r0, [sp, #8]
   13930:	ldr	r0, [sp, #8]
   13934:	bl	14a7c <mmk_stub_context@@Base>
   13938:	str	r0, [sp, #4]
   1393c:	ldr	r0, [sp, #4]
   13940:	bl	13d1c <mmk_mock_destroy_internal@@Base>
   13944:	mov	sp, fp
   13948:	pop	{fp, pc}

0001394c <mmk_matcher_init@@Base>:
   1394c:	push	{fp, lr}
   13950:	mov	fp, sp
   13954:	sub	sp, sp, #24
   13958:	str	r0, [fp, #-4]
   1395c:	mov	r0, #12
   13960:	bl	15908 <mmk_malloc@@Base>
   13964:	str	r0, [fp, #-8]
   13968:	ldr	r0, [fp, #-8]
   1396c:	ldr	r1, [fp, #-4]
   13970:	str	r1, [sp, #4]
   13974:	mov	r1, #0
   13978:	str	r1, [sp, #8]
   1397c:	str	r1, [sp, #12]
   13980:	ldr	r1, [sp, #12]
   13984:	str	r1, [r0, #8]
   13988:	vldr	d16, [sp, #4]
   1398c:	vstr	d16, [r0]
   13990:	ldr	r0, [fp, #-8]
   13994:	ldr	r1, [pc, #28]	; 139b8 <mmk_matcher_init@@Base+0x6c>
   13998:	add	r1, pc, r1
   1399c:	str	r0, [sp]
   139a0:	mov	r0, r1
   139a4:	bl	115dc <__tls_get_addr@plt>
   139a8:	ldr	r1, [sp]
   139ac:	str	r1, [r0]
   139b0:	mov	sp, fp
   139b4:	pop	{fp, pc}
   139b8:	andeq	r3, r1, r4, asr #13

000139bc <mmk_matcher_term@@Base>:
   139bc:	push	{fp, lr}
   139c0:	mov	fp, sp
   139c4:	ldr	r0, [pc, #16]	; 139dc <mmk_matcher_term@@Base+0x20>
   139c8:	add	r0, pc, r0
   139cc:	bl	115dc <__tls_get_addr@plt>
   139d0:	mov	r1, #0
   139d4:	str	r1, [r0]
   139d8:	pop	{fp, pc}
   139dc:	muleq	r1, r4, r6

000139e0 <mmk_matcher_ctx@@Base>:
   139e0:	push	{fp, lr}
   139e4:	mov	fp, sp
   139e8:	ldr	r0, [pc, #12]	; 139fc <mmk_matcher_ctx@@Base+0x1c>
   139ec:	add	r0, pc, r0
   139f0:	bl	115dc <__tls_get_addr@plt>
   139f4:	ldr	r0, [r0]
   139f8:	pop	{fp, pc}
   139fc:	andeq	r3, r1, r0, ror r6

00013a00 <mmk_matcher_add@@Base>:
   13a00:	push	{fp, lr}
   13a04:	mov	fp, sp
   13a08:	sub	sp, sp, #40	; 0x28
   13a0c:	str	r0, [fp, #-4]
   13a10:	str	r1, [fp, #-8]
   13a14:	mov	r0, #12
   13a18:	bl	15908 <mmk_malloc@@Base>
   13a1c:	str	r0, [fp, #-12]
   13a20:	ldr	r0, [pc, #200]	; 13af0 <mmk_matcher_add@@Base+0xf0>
   13a24:	add	r0, pc, r0
   13a28:	bl	115dc <__tls_get_addr@plt>
   13a2c:	ldr	r1, [r0]
   13a30:	str	r1, [fp, #-16]
   13a34:	ldr	r1, [fp, #-12]
   13a38:	ldr	r2, [fp, #-4]
   13a3c:	str	r2, [sp, #12]
   13a40:	ldr	r2, [fp, #-8]
   13a44:	str	r2, [sp, #16]
   13a48:	mov	r2, #0
   13a4c:	str	r2, [sp, #20]
   13a50:	ldr	r2, [sp, #20]
   13a54:	str	r2, [r1, #8]
   13a58:	vldr	d16, [sp, #12]
   13a5c:	vstr	d16, [r1]
   13a60:	ldr	r0, [r0]
   13a64:	ldr	r0, [r0, #8]
   13a68:	str	r0, [sp, #8]
   13a6c:	ldr	r0, [sp, #8]
   13a70:	movw	r1, #0
   13a74:	cmp	r0, r1
   13a78:	movw	r0, #0
   13a7c:	str	r0, [sp, #4]
   13a80:	beq	13aa4 <mmk_matcher_add@@Base+0xa4>
   13a84:	ldr	r0, [sp, #8]
   13a88:	ldr	r0, [r0, #4]
   13a8c:	ldr	r1, [fp, #-12]
   13a90:	ldr	r1, [r1, #4]
   13a94:	cmp	r0, r1
   13a98:	movw	r0, #0
   13a9c:	movcc	r0, #1
   13aa0:	str	r0, [sp, #4]
   13aa4:	ldr	r0, [sp, #4]
   13aa8:	tst	r0, #1
   13aac:	beq	13acc <mmk_matcher_add@@Base+0xcc>
   13ab0:	b	13ab4 <mmk_matcher_add@@Base+0xb4>
   13ab4:	ldr	r0, [sp, #8]
   13ab8:	str	r0, [fp, #-16]
   13abc:	ldr	r0, [sp, #8]
   13ac0:	ldr	r0, [r0, #8]
   13ac4:	str	r0, [sp, #8]
   13ac8:	b	13a6c <mmk_matcher_add@@Base+0x6c>
   13acc:	ldr	r0, [fp, #-16]
   13ad0:	ldr	r0, [r0, #8]
   13ad4:	ldr	r1, [fp, #-12]
   13ad8:	str	r0, [r1, #8]
   13adc:	ldr	r0, [fp, #-12]
   13ae0:	ldr	r1, [fp, #-16]
   13ae4:	str	r0, [r1, #8]
   13ae8:	mov	sp, fp
   13aec:	pop	{fp, pc}
   13af0:	andeq	r3, r1, r8, lsr r6

00013af4 <mmk_matcher_get_predicate@@Base>:
   13af4:	sub	sp, sp, #4
   13af8:	str	r0, [sp]
   13afc:	ldr	r0, [sp]
   13b00:	add	r0, r0, #12
   13b04:	add	sp, sp, #4
   13b08:	bx	lr

00013b0c <mmk_mock_create_internal@@Base>:
   13b0c:	push	{fp, lr}
   13b10:	mov	fp, sp
   13b14:	sub	sp, sp, #72	; 0x48
   13b18:	str	r0, [fp, #-4]
   13b1c:	str	r1, [fp, #-8]
   13b20:	bl	13788 <mmk_init@@Base>
   13b24:	movw	r0, #20
   13b28:	bl	15908 <mmk_malloc@@Base>
   13b2c:	str	r0, [fp, #-12]
   13b30:	ldr	r0, [fp, #-12]
   13b34:	movw	r1, #0
   13b38:	cmp	r0, r1
   13b3c:	bne	13b84 <mmk_mock_create_internal@@Base+0x78>
   13b40:	ldr	r0, [pc, #440]	; 13d00 <mmk_mock_create_internal@@Base+0x1f4>
   13b44:	add	r1, pc, r0
   13b48:	ldr	r0, [pc, #436]	; 13d04 <mmk_mock_create_internal@@Base+0x1f8>
   13b4c:	add	r2, pc, r0
   13b50:	ldr	r0, [pc, #432]	; 13d08 <mmk_mock_create_internal@@Base+0x1fc>
   13b54:	add	r0, pc, r0
   13b58:	ldr	r3, [pc, #428]	; 13d0c <mmk_mock_create_internal@@Base+0x200>
   13b5c:	ldr	r3, [pc, r3]
   13b60:	ldr	r3, [r3]
   13b64:	str	r0, [sp, #20]
   13b68:	mov	r0, r3
   13b6c:	movw	r3, #36	; 0x24
   13b70:	ldr	ip, [sp, #20]
   13b74:	str	ip, [sp]
   13b78:	bl	115ac <fprintf@plt>
   13b7c:	str	r0, [sp, #16]
   13b80:	bl	115f4 <abort@plt>
   13b84:	b	13b88 <mmk_mock_create_internal@@Base+0x7c>
   13b88:	ldr	r0, [fp, #-12]
   13b8c:	sub	r1, fp, #32
   13b90:	mov	r2, r1
   13b94:	vmov.i32	q8, #0	; 0x00000000
   13b98:	vst1.32	{d16-d17}, [r2]!
   13b9c:	mov	r3, #0
   13ba0:	str	r3, [r2]
   13ba4:	movw	r2, #20
   13ba8:	bl	11528 <memcpy@plt>
   13bac:	ldr	r0, [fp, #-4]
   13bb0:	movw	r1, #64	; 0x40
   13bb4:	bl	156f4 <mmk_strchr@@Base>
   13bb8:	str	r0, [sp, #36]	; 0x24
   13bbc:	ldr	r0, [sp, #36]	; 0x24
   13bc0:	movw	r1, #0
   13bc4:	cmp	r0, r1
   13bc8:	bne	13bdc <mmk_mock_create_internal@@Base+0xd0>
   13bcc:	ldr	r0, [fp, #-4]
   13bd0:	bl	15854 <mmk_strlen@@Base>
   13bd4:	str	r0, [sp, #32]
   13bd8:	b	13bec <mmk_mock_create_internal@@Base+0xe0>
   13bdc:	ldr	r0, [sp, #36]	; 0x24
   13be0:	ldr	r1, [fp, #-4]
   13be4:	sub	r0, r0, r1
   13be8:	str	r0, [sp, #32]
   13bec:	ldr	r0, [sp, #32]
   13bf0:	add	r0, r0, #1
   13bf4:	bl	15908 <mmk_malloc@@Base>
   13bf8:	str	r0, [sp, #28]
   13bfc:	ldr	r0, [sp, #28]
   13c00:	ldr	r1, [fp, #-4]
   13c04:	ldr	r2, [sp, #32]
   13c08:	bl	157b8 <mmk_strncpy@@Base>
   13c0c:	ldr	r1, [sp, #28]
   13c10:	ldr	r2, [sp, #32]
   13c14:	add	r1, r1, r2
   13c18:	movw	r2, #0
   13c1c:	strb	r2, [r1]
   13c20:	ldr	r1, [sp, #36]	; 0x24
   13c24:	movw	r2, #0
   13c28:	cmp	r1, r2
   13c2c:	movw	r1, #1
   13c30:	str	r1, [sp, #12]
   13c34:	beq	13c60 <mmk_mock_create_internal@@Base+0x154>
   13c38:	ldr	r0, [pc, #208]	; 13d10 <mmk_mock_create_internal@@Base+0x204>
   13c3c:	add	r1, pc, r0
   13c40:	ldr	r0, [sp, #36]	; 0x24
   13c44:	add	r0, r0, #1
   13c48:	movw	r2, #4
   13c4c:	bl	155f4 <mmk_strneq@@Base>
   13c50:	cmp	r0, #0
   13c54:	movw	r0, #0
   13c58:	movne	r0, #1
   13c5c:	str	r0, [sp, #12]
   13c60:	ldr	r0, [sp, #12]
   13c64:	and	r0, r0, #1
   13c68:	str	r0, [sp, #24]
   13c6c:	ldr	r0, [fp, #-4]
   13c70:	ldr	r1, [fp, #-8]
   13c74:	ldr	r2, [fp, #-12]
   13c78:	bl	14d4c <mmk_stub_create@@Base>
   13c7c:	ldr	r1, [fp, #-12]
   13c80:	str	r0, [r1, #4]
   13c84:	ldr	r0, [fp, #-12]
   13c88:	ldr	r0, [r0, #4]
   13c8c:	movw	r1, #0
   13c90:	cmp	r0, r1
   13c94:	bne	13cbc <mmk_mock_create_internal@@Base+0x1b0>
   13c98:	ldr	r0, [pc, #116]	; 13d14 <mmk_mock_create_internal@@Base+0x208>
   13c9c:	add	r1, pc, r0
   13ca0:	ldr	r0, [pc, #112]	; 13d18 <mmk_mock_create_internal@@Base+0x20c>
   13ca4:	ldr	r0, [pc, r0]
   13ca8:	ldr	r0, [r0]
   13cac:	ldr	r2, [fp, #-4]
   13cb0:	bl	115ac <fprintf@plt>
   13cb4:	str	r0, [sp, #8]
   13cb8:	bl	115f4 <abort@plt>
   13cbc:	ldr	r0, [sp, #24]
   13cc0:	cmp	r0, #0
   13cc4:	bne	13ce4 <mmk_mock_create_internal@@Base+0x1d8>
   13cc8:	ldr	r0, [sp, #28]
   13ccc:	ldr	r1, [fp, #-8]
   13cd0:	ldr	r2, [fp, #-12]
   13cd4:	bl	14d4c <mmk_stub_create@@Base>
   13cd8:	ldr	r1, [fp, #-12]
   13cdc:	ldr	r1, [r1, #4]
   13ce0:	str	r0, [r1, #36]	; 0x24
   13ce4:	ldr	r0, [sp, #28]
   13ce8:	bl	1598c <mmk_free@@Base>
   13cec:	ldr	r0, [fp, #-12]
   13cf0:	ldr	r0, [r0, #4]
   13cf4:	ldr	r0, [r0, #32]
   13cf8:	mov	sp, fp
   13cfc:	pop	{fp, pc}
   13d00:	andeq	r2, r0, r6, asr #3
   13d04:	andeq	r2, r0, r9, lsl #9
   13d08:	ldrdeq	r2, [r0], -r0
   13d0c:	andeq	r3, r1, r8, lsr r5
   13d10:	andeq	r2, r0, ip, ror #7
   13d14:	muleq	r0, r1, r3
   13d18:	strdeq	r3, [r1], -r0

00013d1c <mmk_mock_destroy_internal@@Base>:
   13d1c:	push	{fp, lr}
   13d20:	mov	fp, sp
   13d24:	sub	sp, sp, #32
   13d28:	str	r0, [fp, #-4]
   13d2c:	ldr	r0, [fp, #-4]
   13d30:	ldr	r0, [r0, #4]
   13d34:	str	r0, [fp, #-8]
   13d38:	ldr	r0, [fp, #-8]
   13d3c:	movw	r1, #0
   13d40:	cmp	r0, r1
   13d44:	beq	13d68 <mmk_mock_destroy_internal@@Base+0x4c>
   13d48:	ldr	r0, [fp, #-8]
   13d4c:	ldr	r0, [r0, #36]	; 0x24
   13d50:	str	r0, [fp, #-12]
   13d54:	ldr	r0, [fp, #-8]
   13d58:	bl	14e18 <mmk_stub_destroy@@Base>
   13d5c:	ldr	r0, [fp, #-12]
   13d60:	str	r0, [fp, #-8]
   13d64:	b	13d38 <mmk_mock_destroy_internal@@Base+0x1c>
   13d68:	ldr	r0, [fp, #-4]
   13d6c:	ldr	r0, [r0, #8]
   13d70:	bl	1598c <mmk_free@@Base>
   13d74:	ldr	r0, [fp, #-4]
   13d78:	ldr	r0, [r0]
   13d7c:	str	r0, [sp, #16]
   13d80:	ldr	r0, [sp, #16]
   13d84:	movw	r1, #0
   13d88:	cmp	r0, r1
   13d8c:	beq	13dec <mmk_mock_destroy_internal@@Base+0xd0>
   13d90:	ldr	r0, [sp, #16]
   13d94:	ldr	r0, [r0, #4]
   13d98:	str	r0, [sp, #12]
   13d9c:	ldr	r0, [sp, #16]
   13da0:	ldr	r0, [r0]
   13da4:	str	r0, [sp, #8]
   13da8:	ldr	r0, [sp, #8]
   13dac:	movw	r1, #0
   13db0:	cmp	r0, r1
   13db4:	beq	13dd8 <mmk_mock_destroy_internal@@Base+0xbc>
   13db8:	ldr	r0, [sp, #8]
   13dbc:	ldr	r0, [r0, #8]
   13dc0:	str	r0, [sp, #4]
   13dc4:	ldr	r0, [sp, #8]
   13dc8:	bl	1598c <mmk_free@@Base>
   13dcc:	ldr	r0, [sp, #4]
   13dd0:	str	r0, [sp, #8]
   13dd4:	b	13da8 <mmk_mock_destroy_internal@@Base+0x8c>
   13dd8:	ldr	r0, [sp, #16]
   13ddc:	bl	1598c <mmk_free@@Base>
   13de0:	ldr	r0, [sp, #12]
   13de4:	str	r0, [sp, #16]
   13de8:	b	13d80 <mmk_mock_destroy_internal@@Base+0x64>
   13dec:	ldr	r0, [fp, #-4]
   13df0:	bl	1598c <mmk_free@@Base>
   13df4:	mov	sp, fp
   13df8:	pop	{fp, pc}

00013dfc <mmk_mock_params_begin@@Base>:
   13dfc:	sub	sp, sp, #8
   13e00:	str	r0, [sp]
   13e04:	ldr	r0, [sp]
   13e08:	ldr	r0, [r0, #8]
   13e0c:	movw	r1, #0
   13e10:	cmp	r0, r1
   13e14:	beq	13e28 <mmk_mock_params_begin@@Base+0x2c>
   13e18:	ldr	r0, [sp]
   13e1c:	ldr	r0, [r0, #12]
   13e20:	cmp	r0, #0
   13e24:	bne	13e34 <mmk_mock_params_begin@@Base+0x38>
   13e28:	movw	r0, #0
   13e2c:	str	r0, [sp, #4]
   13e30:	b	13e44 <mmk_mock_params_begin@@Base+0x48>
   13e34:	ldr	r0, [sp]
   13e38:	ldr	r0, [r0, #8]
   13e3c:	add	r0, r0, #4
   13e40:	str	r0, [sp, #4]
   13e44:	ldr	r0, [sp, #4]
   13e48:	add	sp, sp, #8
   13e4c:	bx	lr

00013e50 <mmk_mock_params_next@@Base>:
   13e50:	sub	sp, sp, #20
   13e54:	str	r0, [sp, #12]
   13e58:	str	r1, [sp, #8]
   13e5c:	ldr	r0, [sp, #8]
   13e60:	str	r0, [sp, #4]
   13e64:	ldr	r0, [sp, #4]
   13e68:	mvn	r1, #3
   13e6c:	add	r0, r0, r1
   13e70:	ldr	r0, [r0]
   13e74:	str	r0, [sp]
   13e78:	ldr	r0, [sp]
   13e7c:	add	r0, r0, #4
   13e80:	ldr	r1, [sp, #4]
   13e84:	add	r0, r1, r0
   13e88:	str	r0, [sp, #4]
   13e8c:	ldr	r0, [sp, #4]
   13e90:	ldr	r1, [sp, #12]
   13e94:	ldr	r1, [r1, #8]
   13e98:	ldr	r2, [sp, #12]
   13e9c:	ldr	r2, [r2, #12]
   13ea0:	add	r1, r1, r2
   13ea4:	cmp	r0, r1
   13ea8:	bcc	13eb8 <mmk_mock_params_next@@Base+0x68>
   13eac:	movw	r0, #0
   13eb0:	str	r0, [sp, #16]
   13eb4:	b	13ec0 <mmk_mock_params_next@@Base+0x70>
   13eb8:	ldr	r0, [sp, #4]
   13ebc:	str	r0, [sp, #16]
   13ec0:	ldr	r0, [sp, #16]
   13ec4:	add	sp, sp, #20
   13ec8:	bx	lr

00013ecc <mmk_mock_get_params@@Base>:
   13ecc:	push	{fp, lr}
   13ed0:	mov	fp, sp
   13ed4:	sub	sp, sp, #8
   13ed8:	bl	14d2c <mmk_ctx@@Base>
   13edc:	bl	14a7c <mmk_stub_context@@Base>
   13ee0:	str	r0, [sp, #4]
   13ee4:	ldr	r0, [sp, #4]
   13ee8:	ldr	r0, [r0]
   13eec:	mov	sp, fp
   13ef0:	pop	{fp, pc}

00013ef4 <plt_init_ctx@@Base>:
   13ef4:	push	{fp, lr}
   13ef8:	mov	fp, sp
   13efc:	ldr	r0, [pc, #48]	; 13f34 <plt_init_ctx@@Base+0x40>
   13f00:	add	r0, pc, r0
   13f04:	ldr	r0, [r0]
   13f08:	mvn	r1, #0
   13f0c:	cmp	r0, r1
   13f10:	bne	13f24 <plt_init_ctx@@Base+0x30>
   13f14:	bl	13f40 <plt_init_ctx@@Base+0x4c>
   13f18:	ldr	r1, [pc, #24]	; 13f38 <plt_init_ctx@@Base+0x44>
   13f1c:	add	r1, pc, r1
   13f20:	str	r0, [r1]
   13f24:	ldr	r0, [pc, #16]	; 13f3c <plt_init_ctx@@Base+0x48>
   13f28:	add	r0, pc, r0
   13f2c:	ldr	r0, [r0]
   13f30:	pop	{fp, pc}
   13f34:	andeq	r3, r1, ip, asr #3
   13f38:			; <UNDEFINED> instruction: 0x000131b0
   13f3c:	andeq	r3, r1, r4, lsr #3
   13f40:	push	{fp, lr}
   13f44:	mov	fp, sp
   13f48:	sub	sp, sp, #24
   13f4c:	ldr	r0, [pc, #180]	; 14008 <plt_init_ctx@@Base+0x114>
   13f50:	ldr	r0, [pc, r0]
   13f54:	movw	r1, #0
   13f58:	str	r1, [fp, #-4]
   13f5c:	str	r0, [fp, #-4]
   13f60:	ldr	r0, [fp, #-4]
   13f64:	cmp	r0, r1
   13f68:	bne	13ffc <plt_init_ctx@@Base+0x108>
   13f6c:	ldr	r0, [pc, #152]	; 1400c <plt_init_ctx@@Base+0x118>
   13f70:	ldr	r0, [pc, r0]
   13f74:	ldr	r0, [r0]
   13f78:	str	r0, [fp, #-8]
   13f7c:	ldr	r0, [fp, #-8]
   13f80:	add	r1, r0, #4
   13f84:	str	r1, [fp, #-8]
   13f88:	ldr	r0, [r0]
   13f8c:	movw	r1, #0
   13f90:	cmp	r0, r1
   13f94:	beq	13f9c <plt_init_ctx@@Base+0xa8>
   13f98:	b	13f7c <plt_init_ctx@@Base+0x88>
   13f9c:	ldr	r0, [fp, #-8]
   13fa0:	str	r0, [sp, #12]
   13fa4:	ldr	r0, [sp, #12]
   13fa8:	movw	r1, #3
   13fac:	bl	1473c <plt_get_real_fn@@Base+0x88>
   13fb0:	str	r0, [sp, #8]
   13fb4:	ldr	r0, [sp, #12]
   13fb8:	movw	r1, #4
   13fbc:	bl	1473c <plt_get_real_fn@@Base+0x88>
   13fc0:	str	r0, [sp, #4]
   13fc4:	ldr	r0, [sp, #8]
   13fc8:	cmn	r0, #1
   13fcc:	beq	13ff8 <plt_init_ctx@@Base+0x104>
   13fd0:	ldr	r0, [sp, #4]
   13fd4:	cmn	r0, #1
   13fd8:	beq	13ff8 <plt_init_ctx@@Base+0x104>
   13fdc:	ldr	r0, [sp, #8]
   13fe0:	ldr	r1, [sp, #4]
   13fe4:	bl	147a4 <plt_get_real_fn@@Base+0xf0>
   13fe8:	str	r0, [sp]
   13fec:	ldr	r0, [sp]
   13ff0:	bl	14820 <plt_get_real_fn@@Base+0x16c>
   13ff4:	str	r0, [fp, #-4]
   13ff8:	b	13ffc <plt_init_ctx@@Base+0x108>
   13ffc:	ldr	r0, [fp, #-4]
   14000:	mov	sp, fp
   14004:	pop	{fp, pc}
   14008:	andeq	r3, r1, r8, ror #2
   1400c:	andeq	r3, r1, r0, asr r1

00014010 <plt_get_lib@@Base>:
   14010:	push	{r4, r5, fp, lr}
   14014:	add	fp, sp, #8
   14018:	sub	sp, sp, #80	; 0x50
   1401c:	str	r0, [fp, #-16]
   14020:	str	r1, [fp, #-20]	; 0xffffffec
   14024:	ldr	r0, [fp, #-20]	; 0xffffffec
   14028:	movw	r1, #0
   1402c:	cmp	r0, r1
   14030:	bne	14040 <plt_get_lib@@Base+0x30>
   14034:	ldr	r0, [pc, #904]	; 143c4 <plt_get_lib@@Base+0x3b4>
   14038:	add	r0, pc, r0
   1403c:	str	r0, [fp, #-20]	; 0xffffffec
   14040:	ldr	r0, [pc, #896]	; 143c8 <plt_get_lib@@Base+0x3b8>
   14044:	add	r1, pc, r0
   14048:	movw	r0, #0
   1404c:	str	r0, [fp, #-24]	; 0xffffffe8
   14050:	ldr	r0, [fp, #-20]	; 0xffffffec
   14054:	movw	r2, #4
   14058:	bl	115e8 <strncmp@plt>
   1405c:	cmp	r0, #0
   14060:	bne	14070 <plt_get_lib@@Base+0x60>
   14064:	movw	r0, #1
   14068:	str	r0, [fp, #-24]	; 0xffffffe8
   1406c:	b	1416c <plt_get_lib@@Base+0x15c>
   14070:	ldr	r0, [pc, #852]	; 143cc <plt_get_lib@@Base+0x3bc>
   14074:	add	r1, pc, r0
   14078:	ldr	r0, [fp, #-20]	; 0xffffffec
   1407c:	movw	r2, #5
   14080:	bl	115e8 <strncmp@plt>
   14084:	cmp	r0, #0
   14088:	bne	14098 <plt_get_lib@@Base+0x88>
   1408c:	movw	r0, #2
   14090:	str	r0, [fp, #-24]	; 0xffffffe8
   14094:	b	14168 <plt_get_lib@@Base+0x158>
   14098:	ldr	r0, [pc, #816]	; 143d0 <plt_get_lib@@Base+0x3c0>
   1409c:	add	r1, pc, r0
   140a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   140a4:	movw	r2, #4
   140a8:	bl	115e8 <strncmp@plt>
   140ac:	cmp	r0, #0
   140b0:	bne	140c0 <plt_get_lib@@Base+0xb0>
   140b4:	movw	r0, #3
   140b8:	str	r0, [fp, #-24]	; 0xffffffe8
   140bc:	b	14164 <plt_get_lib@@Base+0x154>
   140c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   140c4:	ldr	r1, [pc, #808]	; 143f4 <plt_get_lib@@Base+0x3e4>
   140c8:	add	r1, pc, r1
   140cc:	bl	11504 <strcmp@plt>
   140d0:	cmp	r0, #0
   140d4:	bne	140e8 <plt_get_lib@@Base+0xd8>
   140d8:	ldr	r0, [pc, #756]	; 143d4 <plt_get_lib@@Base+0x3c4>
   140dc:	add	r0, pc, r0
   140e0:	str	r0, [fp, #-20]	; 0xffffffec
   140e4:	b	14160 <plt_get_lib@@Base+0x150>
   140e8:	ldr	r0, [fp, #-20]	; 0xffffffec
   140ec:	movw	r1, #58	; 0x3a
   140f0:	bl	115a0 <strchr@plt>
   140f4:	str	r0, [fp, #-28]	; 0xffffffe4
   140f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   140fc:	movw	r1, #0
   14100:	cmp	r0, r1
   14104:	beq	14140 <plt_get_lib@@Base+0x130>
   14108:	ldr	r0, [pc, #732]	; 143ec <plt_get_lib@@Base+0x3dc>
   1410c:	add	r1, pc, r0
   14110:	ldr	r0, [pc, #728]	; 143f0 <plt_get_lib@@Base+0x3e0>
   14114:	ldr	r0, [pc, r0]
   14118:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1411c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14120:	sub	r2, r2, r3
   14124:	add	r2, r2, #1
   14128:	str	r2, [fp, #-32]	; 0xffffffe0
   1412c:	ldr	r0, [r0]
   14130:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14134:	ldr	r3, [fp, #-20]	; 0xffffffec
   14138:	bl	115ac <fprintf@plt>
   1413c:	b	1415c <plt_get_lib@@Base+0x14c>
   14140:	ldr	r0, [pc, #668]	; 143e4 <plt_get_lib@@Base+0x3d4>
   14144:	add	r1, pc, r0
   14148:	ldr	r0, [pc, #664]	; 143e8 <plt_get_lib@@Base+0x3d8>
   1414c:	ldr	r0, [pc, r0]
   14150:	ldr	r0, [r0]
   14154:	ldr	r2, [fp, #-20]	; 0xffffffec
   14158:	bl	115ac <fprintf@plt>
   1415c:	bl	115f4 <abort@plt>
   14160:	b	14164 <plt_get_lib@@Base+0x154>
   14164:	b	14168 <plt_get_lib@@Base+0x158>
   14168:	b	1416c <plt_get_lib@@Base+0x15c>
   1416c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14170:	cmp	r0, #0
   14174:	bne	14184 <plt_get_lib@@Base+0x174>
   14178:	ldr	r0, [fp, #-20]	; 0xffffffec
   1417c:	str	r0, [fp, #-72]	; 0xffffffb8
   14180:	b	14198 <plt_get_lib@@Base+0x188>
   14184:	ldr	r0, [fp, #-20]	; 0xffffffec
   14188:	movw	r1, #58	; 0x3a
   1418c:	bl	115a0 <strchr@plt>
   14190:	add	r0, r0, #1
   14194:	str	r0, [fp, #-72]	; 0xffffffb8
   14198:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1419c:	str	r0, [fp, #-36]	; 0xffffffdc
   141a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   141a4:	bl	11588 <strlen@plt>
   141a8:	str	r0, [fp, #-40]	; 0xffffffd8
   141ac:	ldr	r0, [fp, #-36]	; 0xffffffdc
   141b0:	ldr	r1, [pc, #576]	; 143f8 <plt_get_lib@@Base+0x3e8>
   141b4:	add	r1, pc, r1
   141b8:	bl	11504 <strcmp@plt>
   141bc:	cmp	r0, #0
   141c0:	movw	r0, #0
   141c4:	movne	r0, #1
   141c8:	mvn	r1, #0
   141cc:	eor	r0, r0, r1
   141d0:	and	r0, r0, #1
   141d4:	str	r0, [fp, #-44]	; 0xffffffd4
   141d8:	ldr	r0, [fp, #-16]
   141dc:	ldr	r0, [r0, #4]
   141e0:	str	r0, [fp, #-48]	; 0xffffffd0
   141e4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   141e8:	movw	r1, #0
   141ec:	cmp	r0, r1
   141f0:	beq	143b0 <plt_get_lib@@Base+0x3a0>
   141f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   141f8:	cmp	r0, #1
   141fc:	bne	14318 <plt_get_lib@@Base+0x308>
   14200:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14204:	cmp	r0, #0
   14208:	beq	1425c <plt_get_lib@@Base+0x24c>
   1420c:	ldr	r0, [pc, #456]	; 143dc <plt_get_lib@@Base+0x3cc>
   14210:	add	r1, pc, r0
   14214:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14218:	ldr	r0, [r0, #4]
   1421c:	bl	114f8 <strstr@plt>
   14220:	movw	r1, #0
   14224:	cmp	r0, r1
   14228:	bne	1424c <plt_get_lib@@Base+0x23c>
   1422c:	ldr	r0, [pc, #428]	; 143e0 <plt_get_lib@@Base+0x3d0>
   14230:	add	r1, pc, r0
   14234:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14238:	ldr	r0, [r0, #4]
   1423c:	bl	114f8 <strstr@plt>
   14240:	movw	r1, #0
   14244:	cmp	r0, r1
   14248:	beq	14258 <plt_get_lib@@Base+0x248>
   1424c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14250:	str	r0, [fp, #-12]
   14254:	b	143b8 <plt_get_lib@@Base+0x3a8>
   14258:	b	14314 <plt_get_lib@@Base+0x304>
   1425c:	ldr	r0, [pc, #372]	; 143d8 <plt_get_lib@@Base+0x3c8>
   14260:	add	r2, pc, r0
   14264:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14268:	add	r0, r0, #8
   1426c:	str	r0, [fp, #-52]	; 0xffffffcc
   14270:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14274:	mov	r1, sp
   14278:	str	r1, [fp, #-56]	; 0xffffffc8
   1427c:	add	r1, r0, #7
   14280:	bic	r1, r1, #7
   14284:	mov	r3, sp
   14288:	sub	r1, r3, r1
   1428c:	mov	sp, r1
   14290:	str	r0, [fp, #-60]	; 0xffffffc4
   14294:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14298:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1429c:	str	r0, [fp, #-76]	; 0xffffffb4
   142a0:	mov	r0, r1
   142a4:	ldr	ip, [fp, #-76]	; 0xffffffb4
   142a8:	str	r1, [fp, #-80]	; 0xffffffb0
   142ac:	mov	r1, ip
   142b0:	bl	115c4 <snprintf@plt>
   142b4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   142b8:	ldr	r1, [r1, #4]
   142bc:	str	r0, [fp, #-84]	; 0xffffffac
   142c0:	mov	r0, r1
   142c4:	ldr	r1, [fp, #-80]	; 0xffffffb0
   142c8:	bl	114f8 <strstr@plt>
   142cc:	movw	r1, #0
   142d0:	cmp	r0, r1
   142d4:	beq	142ec <plt_get_lib@@Base+0x2dc>
   142d8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   142dc:	str	r0, [fp, #-12]
   142e0:	movw	r0, #1
   142e4:	str	r0, [fp, #-64]	; 0xffffffc0
   142e8:	b	142f4 <plt_get_lib@@Base+0x2e4>
   142ec:	movw	r0, #0
   142f0:	str	r0, [fp, #-64]	; 0xffffffc0
   142f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   142f8:	mov	sp, r0
   142fc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   14300:	cmp	r0, #0
   14304:	beq	14310 <plt_get_lib@@Base+0x300>
   14308:	b	1430c <plt_get_lib@@Base+0x2fc>
   1430c:	b	143b8 <plt_get_lib@@Base+0x3a8>
   14310:	b	14314 <plt_get_lib@@Base+0x304>
   14314:	b	1439c <plt_get_lib@@Base+0x38c>
   14318:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1431c:	cmp	r0, #0
   14320:	beq	14330 <plt_get_lib@@Base+0x320>
   14324:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14328:	cmp	r0, #2
   1432c:	bne	14358 <plt_get_lib@@Base+0x348>
   14330:	ldr	r0, [fp, #-20]	; 0xffffffec
   14334:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14338:	ldr	r1, [r1, #4]
   1433c:	bl	11504 <strcmp@plt>
   14340:	cmp	r0, #0
   14344:	bne	14354 <plt_get_lib@@Base+0x344>
   14348:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1434c:	str	r0, [fp, #-12]
   14350:	b	143b8 <plt_get_lib@@Base+0x3a8>
   14354:	b	14398 <plt_get_lib@@Base+0x388>
   14358:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1435c:	cmp	r0, #3
   14360:	bne	14394 <plt_get_lib@@Base+0x384>
   14364:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14368:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1436c:	bl	143fc <plt_get_lib@@Base+0x3ec>
   14370:	str	r0, [fp, #-68]	; 0xffffffbc
   14374:	ldr	r0, [fp, #-68]	; 0xffffffbc
   14378:	movw	r1, #0
   1437c:	cmp	r0, r1
   14380:	beq	14390 <plt_get_lib@@Base+0x380>
   14384:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14388:	str	r0, [fp, #-12]
   1438c:	b	143b8 <plt_get_lib@@Base+0x3a8>
   14390:	b	14394 <plt_get_lib@@Base+0x384>
   14394:	b	14398 <plt_get_lib@@Base+0x388>
   14398:	b	1439c <plt_get_lib@@Base+0x38c>
   1439c:	b	143a0 <plt_get_lib@@Base+0x390>
   143a0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   143a4:	ldr	r0, [r0, #12]
   143a8:	str	r0, [fp, #-48]	; 0xffffffd0
   143ac:	b	141e4 <plt_get_lib@@Base+0x1d4>
   143b0:	movw	r0, #0
   143b4:	str	r0, [fp, #-12]
   143b8:	ldr	r0, [fp, #-12]
   143bc:	sub	sp, fp, #8
   143c0:	pop	{r4, r5, fp, pc}
   143c4:	strdeq	r1, [r0], -r0
   143c8:	andeq	r2, r0, ip, lsl r0
   143cc:	strdeq	r1, [r0], -r1	; <UNPREDICTABLE>
   143d0:	andeq	r1, r0, pc, asr #31
   143d4:	ldrdeq	r1, [r0], -r8
   143d8:	andeq	r1, r0, r7, ror #28
   143dc:	andeq	r1, r0, r5, lsr #29
   143e0:	andeq	r1, r0, lr, lsl #29
   143e4:	andeq	r1, r0, lr, asr #30
   143e8:	andeq	r2, r1, r8, asr #30
   143ec:	andeq	r1, r0, r4, ror #30
   143f0:	andeq	r2, r1, r0, lsl #31
   143f4:	andeq	r1, r0, r0, ror #30
   143f8:	andeq	r1, r0, r0, ror pc
   143fc:	push	{fp, lr}
   14400:	mov	fp, sp
   14404:	sub	sp, sp, #56	; 0x38
   14408:	str	r0, [fp, #-8]
   1440c:	str	r1, [fp, #-12]
   14410:	ldr	r0, [fp, #-8]
   14414:	movw	r1, #6
   14418:	bl	14888 <plt_get_real_fn@@Base+0x1d4>
   1441c:	str	r0, [fp, #-16]
   14420:	ldr	r0, [fp, #-8]
   14424:	movw	r1, #5
   14428:	bl	14888 <plt_get_real_fn@@Base+0x1d4>
   1442c:	str	r0, [fp, #-20]	; 0xffffffec
   14430:	ldr	r0, [fp, #-8]
   14434:	movw	r1, #20
   14438:	bl	14934 <plt_get_real_fn@@Base+0x280>
   1443c:	str	r0, [fp, #-24]	; 0xffffffe8
   14440:	ldr	r0, [fp, #-8]
   14444:	movw	r1, #23
   14448:	bl	14888 <plt_get_real_fn@@Base+0x1d4>
   1444c:	str	r0, [sp, #28]
   14450:	ldr	r0, [fp, #-8]
   14454:	movw	r1, #2
   14458:	bl	14934 <plt_get_real_fn@@Base+0x280>
   1445c:	str	r0, [sp, #24]
   14460:	ldr	r0, [fp, #-8]
   14464:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14468:	add	r1, r1, #2
   1446c:	bl	14934 <plt_get_real_fn@@Base+0x280>
   14470:	str	r0, [sp, #20]
   14474:	ldr	r0, [fp, #-16]
   14478:	movw	r1, #0
   1447c:	cmp	r0, r1
   14480:	beq	144c8 <plt_get_lib@@Base+0x4b8>
   14484:	ldr	r0, [fp, #-20]	; 0xffffffec
   14488:	movw	r1, #0
   1448c:	cmp	r0, r1
   14490:	beq	144c8 <plt_get_lib@@Base+0x4b8>
   14494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14498:	cmp	r0, #0
   1449c:	beq	144c8 <plt_get_lib@@Base+0x4b8>
   144a0:	ldr	r0, [sp, #28]
   144a4:	movw	r1, #0
   144a8:	cmp	r0, r1
   144ac:	beq	144c8 <plt_get_lib@@Base+0x4b8>
   144b0:	ldr	r0, [sp, #24]
   144b4:	cmp	r0, #0
   144b8:	beq	144c8 <plt_get_lib@@Base+0x4b8>
   144bc:	ldr	r0, [sp, #20]
   144c0:	cmp	r0, #0
   144c4:	bne	144d4 <plt_get_lib@@Base+0x4c4>
   144c8:	movw	r0, #0
   144cc:	str	r0, [fp, #-4]
   144d0:	b	14538 <plt_get_lib@@Base+0x528>
   144d4:	ldr	r0, [sp, #28]
   144d8:	str	r0, [sp, #8]
   144dc:	ldr	r0, [sp, #24]
   144e0:	str	r0, [sp, #12]
   144e4:	ldr	r0, [sp, #20]
   144e8:	str	r0, [sp, #16]
   144ec:	ldr	r0, [fp, #-8]
   144f0:	ldr	r0, [r0]
   144f4:	str	r0, [sp, #4]
   144f8:	ldr	r1, [fp, #-16]
   144fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   14500:	ldr	r3, [fp, #-12]
   14504:	add	r0, sp, #8
   14508:	bl	149a8 <plt_get_real_fn@@Base+0x2f4>
   1450c:	str	r0, [sp]
   14510:	ldr	r0, [sp]
   14514:	cmp	r0, #0
   14518:	beq	14530 <plt_get_lib@@Base+0x520>
   1451c:	ldr	r0, [sp]
   14520:	ldr	r1, [sp, #4]
   14524:	add	r0, r0, r1
   14528:	str	r0, [fp, #-4]
   1452c:	b	14538 <plt_get_lib@@Base+0x528>
   14530:	movw	r0, #0
   14534:	str	r0, [fp, #-4]
   14538:	ldr	r0, [fp, #-4]
   1453c:	mov	sp, fp
   14540:	pop	{fp, pc}

00014544 <plt_get_offsets@@Base>:
   14544:	push	{fp, lr}
   14548:	mov	fp, sp
   1454c:	sub	sp, sp, #32
   14550:	str	r0, [fp, #-8]
   14554:	str	r1, [fp, #-12]
   14558:	str	r2, [sp, #16]
   1455c:	ldr	r0, [fp, #-8]
   14560:	ldr	r1, [fp, #-12]
   14564:	bl	143fc <plt_get_lib@@Base+0x3ec>
   14568:	str	r0, [sp, #12]
   1456c:	ldr	r0, [sp, #12]
   14570:	movw	r1, #0
   14574:	cmp	r0, r1
   14578:	beq	145c4 <plt_get_offsets@@Base+0x80>
   1457c:	movw	r0, #8
   14580:	bl	15908 <mmk_malloc@@Base>
   14584:	str	r0, [sp, #8]
   14588:	ldr	r0, [sp, #16]
   1458c:	movw	r1, #1
   14590:	str	r1, [r0]
   14594:	ldr	r0, [sp, #8]
   14598:	ldr	r1, [sp, #12]
   1459c:	str	r1, [sp]
   145a0:	movw	r1, #0
   145a4:	str	r1, [sp, #4]
   145a8:	ldr	r1, [sp]
   145ac:	str	r1, [r0]
   145b0:	ldr	r1, [sp, #4]
   145b4:	str	r1, [r0, #4]
   145b8:	ldr	r0, [sp, #8]
   145bc:	str	r0, [fp, #-4]
   145c0:	b	145cc <plt_get_offsets@@Base+0x88>
   145c4:	movw	r0, #0
   145c8:	str	r0, [fp, #-4]
   145cc:	ldr	r0, [fp, #-4]
   145d0:	mov	sp, fp
   145d4:	pop	{fp, pc}

000145d8 <plt_set_offsets@@Base>:
   145d8:	sub	sp, sp, #16
   145dc:	str	r0, [sp, #12]
   145e0:	str	r1, [sp, #8]
   145e4:	str	r2, [sp, #4]
   145e8:	movw	r0, #0
   145ec:	str	r0, [sp]
   145f0:	ldr	r0, [sp]
   145f4:	ldr	r1, [sp, #8]
   145f8:	cmp	r0, r1
   145fc:	bcs	14658 <plt_set_offsets@@Base+0x80>
   14600:	ldr	r0, [sp, #12]
   14604:	ldr	r1, [sp]
   14608:	add	r0, r0, r1, lsl #3
   1460c:	ldr	r0, [r0, #4]
   14610:	movw	r1, #0
   14614:	cmp	r0, r1
   14618:	bne	14630 <plt_set_offsets@@Base+0x58>
   1461c:	ldr	r0, [sp, #12]
   14620:	ldr	r1, [sp]
   14624:	ldr	r1, [r0, r1, lsl #3]!
   14628:	ldr	r1, [r1]
   1462c:	str	r1, [r0, #4]
   14630:	ldr	r0, [sp, #4]
   14634:	ldr	r1, [sp, #12]
   14638:	ldr	r2, [sp]
   1463c:	add	r1, r1, r2, lsl #3
   14640:	ldr	r1, [r1]
   14644:	str	r0, [r1]
   14648:	ldr	r0, [sp]
   1464c:	add	r0, r0, #1
   14650:	str	r0, [sp]
   14654:	b	145f0 <plt_set_offsets@@Base+0x18>
   14658:	add	sp, sp, #16
   1465c:	bx	lr

00014660 <plt_reset_offsets@@Base>:
   14660:	sub	sp, sp, #12
   14664:	str	r0, [sp, #8]
   14668:	str	r1, [sp, #4]
   1466c:	movw	r0, #0
   14670:	str	r0, [sp]
   14674:	ldr	r0, [sp]
   14678:	ldr	r1, [sp, #4]
   1467c:	cmp	r0, r1
   14680:	bcs	146ac <plt_reset_offsets@@Base+0x4c>
   14684:	ldr	r0, [sp, #8]
   14688:	ldr	r1, [sp]
   1468c:	add	r0, r0, r1, lsl #3
   14690:	ldr	r1, [r0, #4]
   14694:	ldr	r0, [r0]
   14698:	str	r1, [r0]
   1469c:	ldr	r0, [sp]
   146a0:	add	r0, r0, #1
   146a4:	str	r0, [sp]
   146a8:	b	14674 <plt_reset_offsets@@Base+0x14>
   146ac:	add	sp, sp, #12
   146b0:	bx	lr

000146b4 <plt_get_real_fn@@Base>:
   146b4:	push	{fp, lr}
   146b8:	mov	fp, sp
   146bc:	sub	sp, sp, #24
   146c0:	str	r0, [fp, #-8]
   146c4:	str	r1, [sp, #12]
   146c8:	ldr	r0, [fp, #-8]
   146cc:	ldr	r0, [r0, #4]
   146d0:	str	r0, [sp, #8]
   146d4:	ldr	r0, [sp, #8]
   146d8:	movw	r1, #0
   146dc:	cmp	r0, r1
   146e0:	beq	14728 <plt_get_real_fn@@Base+0x74>
   146e4:	ldr	r0, [sp, #8]
   146e8:	ldr	r1, [sp, #12]
   146ec:	bl	143fc <plt_get_lib@@Base+0x3ec>
   146f0:	str	r0, [sp, #4]
   146f4:	ldr	r0, [sp, #4]
   146f8:	movw	r1, #0
   146fc:	cmp	r0, r1
   14700:	beq	14714 <plt_get_real_fn@@Base+0x60>
   14704:	ldr	r0, [sp, #4]
   14708:	ldr	r0, [r0]
   1470c:	str	r0, [fp, #-4]
   14710:	b	14730 <plt_get_real_fn@@Base+0x7c>
   14714:	b	14718 <plt_get_real_fn@@Base+0x64>
   14718:	ldr	r0, [sp, #8]
   1471c:	ldr	r0, [r0, #12]
   14720:	str	r0, [sp, #8]
   14724:	b	146d4 <plt_get_real_fn@@Base+0x20>
   14728:	movw	r0, #0
   1472c:	str	r0, [fp, #-4]
   14730:	ldr	r0, [fp, #-4]
   14734:	mov	sp, fp
   14738:	pop	{fp, pc}
   1473c:	sub	sp, sp, #12
   14740:	str	r0, [sp, #4]
   14744:	str	r1, [sp]
   14748:	ldr	r0, [sp, #4]
   1474c:	ldr	r0, [r0]
   14750:	cmp	r0, #0
   14754:	beq	14790 <plt_get_real_fn@@Base+0xdc>
   14758:	ldr	r0, [sp, #4]
   1475c:	ldr	r0, [r0]
   14760:	ldr	r1, [sp]
   14764:	cmp	r0, r1
   14768:	bne	1477c <plt_get_real_fn@@Base+0xc8>
   1476c:	ldr	r0, [sp, #4]
   14770:	ldr	r0, [r0, #4]
   14774:	str	r0, [sp, #8]
   14778:	b	14798 <plt_get_real_fn@@Base+0xe4>
   1477c:	b	14780 <plt_get_real_fn@@Base+0xcc>
   14780:	ldr	r0, [sp, #4]
   14784:	add	r0, r0, #8
   14788:	str	r0, [sp, #4]
   1478c:	b	14748 <plt_get_real_fn@@Base+0x94>
   14790:	mvn	r0, #0
   14794:	str	r0, [sp, #8]
   14798:	ldr	r0, [sp, #8]
   1479c:	add	sp, sp, #12
   147a0:	bx	lr
   147a4:	sub	sp, sp, #16
   147a8:	str	r0, [sp, #8]
   147ac:	str	r1, [sp, #4]
   147b0:	movw	r0, #0
   147b4:	str	r0, [sp]
   147b8:	ldr	r0, [sp]
   147bc:	ldr	r1, [sp, #4]
   147c0:	cmp	r0, r1
   147c4:	bcs	1480c <plt_get_real_fn@@Base+0x158>
   147c8:	ldr	r0, [sp, #8]
   147cc:	ldr	r1, [sp]
   147d0:	add	r0, r0, r1, lsl #5
   147d4:	ldr	r0, [r0]
   147d8:	cmp	r0, #2
   147dc:	bne	147f8 <plt_get_real_fn@@Base+0x144>
   147e0:	ldr	r0, [sp, #8]
   147e4:	ldr	r1, [sp]
   147e8:	add	r0, r0, r1, lsl #5
   147ec:	ldr	r0, [r0, #8]
   147f0:	str	r0, [sp, #12]
   147f4:	b	14814 <plt_get_real_fn@@Base+0x160>
   147f8:	b	147fc <plt_get_real_fn@@Base+0x148>
   147fc:	ldr	r0, [sp]
   14800:	add	r0, r0, #1
   14804:	str	r0, [sp]
   14808:	b	147b8 <plt_get_real_fn@@Base+0x104>
   1480c:	movw	r0, #0
   14810:	str	r0, [sp, #12]
   14814:	ldr	r0, [sp, #12]
   14818:	add	sp, sp, #16
   1481c:	bx	lr
   14820:	sub	sp, sp, #12
   14824:	str	r0, [sp, #4]
   14828:	ldr	r0, [sp, #4]
   1482c:	str	r0, [sp]
   14830:	ldr	r0, [sp]
   14834:	ldr	r0, [r0]
   14838:	cmp	r0, #0
   1483c:	beq	14874 <plt_get_real_fn@@Base+0x1c0>
   14840:	ldr	r0, [sp]
   14844:	ldr	r0, [r0]
   14848:	cmp	r0, #21
   1484c:	bne	14860 <plt_get_real_fn@@Base+0x1ac>
   14850:	ldr	r0, [sp]
   14854:	ldr	r0, [r0, #4]
   14858:	str	r0, [sp, #8]
   1485c:	b	1487c <plt_get_real_fn@@Base+0x1c8>
   14860:	b	14864 <plt_get_real_fn@@Base+0x1b0>
   14864:	ldr	r0, [sp]
   14868:	add	r0, r0, #8
   1486c:	str	r0, [sp]
   14870:	b	14830 <plt_get_real_fn@@Base+0x17c>
   14874:	movw	r0, #0
   14878:	str	r0, [sp, #8]
   1487c:	ldr	r0, [sp, #8]
   14880:	add	sp, sp, #12
   14884:	bx	lr
   14888:	sub	sp, sp, #20
   1488c:	str	r0, [sp, #12]
   14890:	str	r1, [sp, #8]
   14894:	ldr	r0, [sp, #12]
   14898:	ldr	r0, [r0]
   1489c:	str	r0, [sp, #4]
   148a0:	ldr	r0, [sp, #12]
   148a4:	ldr	r0, [r0, #8]
   148a8:	str	r0, [sp]
   148ac:	ldr	r0, [sp]
   148b0:	ldr	r0, [r0]
   148b4:	cmp	r0, #0
   148b8:	beq	14920 <plt_get_real_fn@@Base+0x26c>
   148bc:	ldr	r0, [sp]
   148c0:	ldr	r0, [r0]
   148c4:	ldr	r1, [sp, #8]
   148c8:	cmp	r0, r1
   148cc:	bne	1490c <plt_get_real_fn@@Base+0x258>
   148d0:	ldr	r0, [sp]
   148d4:	ldr	r0, [r0, #4]
   148d8:	ldr	r1, [sp, #4]
   148dc:	cmp	r0, r1
   148e0:	bcc	148f4 <plt_get_real_fn@@Base+0x240>
   148e4:	ldr	r0, [sp]
   148e8:	ldr	r0, [r0, #4]
   148ec:	str	r0, [sp, #16]
   148f0:	b	14928 <plt_get_real_fn@@Base+0x274>
   148f4:	ldr	r0, [sp, #4]
   148f8:	ldr	r1, [sp]
   148fc:	ldr	r1, [r1, #4]
   14900:	add	r0, r0, r1
   14904:	str	r0, [sp, #16]
   14908:	b	14928 <plt_get_real_fn@@Base+0x274>
   1490c:	b	14910 <plt_get_real_fn@@Base+0x25c>
   14910:	ldr	r0, [sp]
   14914:	add	r0, r0, #8
   14918:	str	r0, [sp]
   1491c:	b	148ac <plt_get_real_fn@@Base+0x1f8>
   14920:	movw	r0, #0
   14924:	str	r0, [sp, #16]
   14928:	ldr	r0, [sp, #16]
   1492c:	add	sp, sp, #20
   14930:	bx	lr
   14934:	sub	sp, sp, #16
   14938:	str	r0, [sp, #8]
   1493c:	str	r1, [sp, #4]
   14940:	ldr	r0, [sp, #8]
   14944:	ldr	r0, [r0, #8]
   14948:	str	r0, [sp]
   1494c:	ldr	r0, [sp]
   14950:	ldr	r0, [r0]
   14954:	cmp	r0, #0
   14958:	beq	14994 <plt_get_real_fn@@Base+0x2e0>
   1495c:	ldr	r0, [sp]
   14960:	ldr	r0, [r0]
   14964:	ldr	r1, [sp, #4]
   14968:	cmp	r0, r1
   1496c:	bne	14980 <plt_get_real_fn@@Base+0x2cc>
   14970:	ldr	r0, [sp]
   14974:	ldr	r0, [r0, #4]
   14978:	str	r0, [sp, #12]
   1497c:	b	1499c <plt_get_real_fn@@Base+0x2e8>
   14980:	b	14984 <plt_get_real_fn@@Base+0x2d0>
   14984:	ldr	r0, [sp]
   14988:	add	r0, r0, #8
   1498c:	str	r0, [sp]
   14990:	b	1494c <plt_get_real_fn@@Base+0x298>
   14994:	movw	r0, #0
   14998:	str	r0, [sp, #12]
   1499c:	ldr	r0, [sp, #12]
   149a0:	add	sp, sp, #16
   149a4:	bx	lr
   149a8:	push	{fp, lr}
   149ac:	mov	fp, sp
   149b0:	sub	sp, sp, #32
   149b4:	str	r0, [fp, #-8]
   149b8:	str	r1, [fp, #-12]
   149bc:	str	r2, [sp, #16]
   149c0:	str	r3, [sp, #12]
   149c4:	ldr	r0, [fp, #-8]
   149c8:	ldr	r0, [r0]
   149cc:	str	r0, [sp, #8]
   149d0:	movw	r0, #0
   149d4:	str	r0, [sp, #4]
   149d8:	ldr	r0, [sp, #4]
   149dc:	ldr	r1, [fp, #-8]
   149e0:	ldr	r1, [r1, #4]
   149e4:	ldr	r2, [fp, #-8]
   149e8:	ldr	r2, [r2, #8]
   149ec:	udiv	r1, r1, r2
   149f0:	cmp	r0, r1
   149f4:	bcs	14a68 <plt_get_real_fn@@Base+0x3b4>
   149f8:	ldr	r0, [fp, #-12]
   149fc:	ldr	r1, [sp, #8]
   14a00:	ldr	r1, [r1, #4]
   14a04:	lsr	r1, r1, #8
   14a08:	add	r0, r0, r1, lsl #4
   14a0c:	str	r0, [sp]
   14a10:	ldr	r0, [sp, #16]
   14a14:	ldr	r1, [sp]
   14a18:	ldr	r1, [r1]
   14a1c:	add	r0, r0, r1
   14a20:	ldr	r1, [sp, #12]
   14a24:	bl	11504 <strcmp@plt>
   14a28:	cmp	r0, #0
   14a2c:	bne	14a40 <plt_get_real_fn@@Base+0x38c>
   14a30:	ldr	r0, [sp, #8]
   14a34:	ldr	r0, [r0]
   14a38:	str	r0, [fp, #-4]
   14a3c:	b	14a70 <plt_get_real_fn@@Base+0x3bc>
   14a40:	b	14a44 <plt_get_real_fn@@Base+0x390>
   14a44:	ldr	r0, [sp, #4]
   14a48:	add	r0, r0, #1
   14a4c:	str	r0, [sp, #4]
   14a50:	ldr	r0, [sp, #8]
   14a54:	ldr	r1, [fp, #-8]
   14a58:	ldr	r1, [r1, #8]
   14a5c:	add	r0, r0, r1
   14a60:	str	r0, [sp, #8]
   14a64:	b	149d8 <plt_get_real_fn@@Base+0x324>
   14a68:	movw	r0, #0
   14a6c:	str	r0, [fp, #-4]
   14a70:	ldr	r0, [fp, #-4]
   14a74:	mov	sp, fp
   14a78:	pop	{fp, pc}

00014a7c <mmk_stub_context@@Base>:
   14a7c:	sub	sp, sp, #8
   14a80:	str	r0, [sp]
   14a84:	ldr	r0, [sp]
   14a88:	movw	r1, #0
   14a8c:	cmp	r0, r1
   14a90:	bne	14aa0 <mmk_stub_context@@Base+0x24>
   14a94:	movw	r0, #0
   14a98:	str	r0, [sp, #4]
   14a9c:	b	14aac <mmk_stub_context@@Base+0x30>
   14aa0:	ldr	r0, [sp]
   14aa4:	ldr	r0, [r0, #12]
   14aa8:	str	r0, [sp, #4]
   14aac:	ldr	r0, [sp, #4]
   14ab0:	add	sp, sp, #8
   14ab4:	bx	lr

00014ab8 <mmk_stub_create_static@@Base>:
   14ab8:	push	{fp, lr}
   14abc:	mov	fp, sp
   14ac0:	sub	sp, sp, #96	; 0x60
   14ac4:	str	r0, [fp, #-8]
   14ac8:	str	r1, [fp, #-12]
   14acc:	str	r2, [fp, #-16]
   14ad0:	str	r3, [fp, #-20]	; 0xffffffec
   14ad4:	ldr	r0, [pc, #456]	; 14ca4 <mmk_stub_create_static@@Base+0x1ec>
   14ad8:	add	r0, pc, r0
   14adc:	bl	115dc <__tls_get_addr@plt>
   14ae0:	mov	r1, #0
   14ae4:	str	r1, [r0]
   14ae8:	ldr	r0, [pc, #440]	; 14ca8 <mmk_stub_create_static@@Base+0x1f0>
   14aec:	add	r0, pc, r0
   14af0:	str	r1, [sp, #8]
   14af4:	bl	115dc <__tls_get_addr@plt>
   14af8:	ldr	r1, [sp, #8]
   14afc:	str	r1, [r0]
   14b00:	ldr	r0, [fp, #-12]
   14b04:	bl	15854 <mmk_strlen@@Base>
   14b08:	add	r0, r0, #1
   14b0c:	bl	15908 <mmk_malloc@@Base>
   14b10:	str	r0, [fp, #-24]	; 0xffffffe8
   14b14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b18:	movw	r1, #0
   14b1c:	cmp	r0, r1
   14b20:	bne	14b30 <mmk_stub_create_static@@Base+0x78>
   14b24:	mvn	r0, #11
   14b28:	str	r0, [fp, #-4]
   14b2c:	b	14c98 <mmk_stub_create_static@@Base+0x1e0>
   14b30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b34:	ldr	r1, [fp, #-12]
   14b38:	bl	15758 <mmk_strcpy@@Base>
   14b3c:	movw	r1, #0
   14b40:	str	r1, [fp, #-28]	; 0xffffffe4
   14b44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14b48:	str	r0, [sp, #4]
   14b4c:	mov	r0, r1
   14b50:	movw	r1, #64	; 0x40
   14b54:	bl	156f4 <mmk_strchr@@Base>
   14b58:	str	r0, [fp, #-32]	; 0xffffffe0
   14b5c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14b60:	movw	r1, #0
   14b64:	cmp	r0, r1
   14b68:	beq	14b84 <mmk_stub_create_static@@Base+0xcc>
   14b6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14b70:	movw	r1, #0
   14b74:	strb	r1, [r0]
   14b78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14b7c:	add	r0, r0, #1
   14b80:	str	r0, [fp, #-28]	; 0xffffffe4
   14b84:	bl	13868 <mmk_plt_ctx@@Base>
   14b88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14b8c:	bl	14010 <plt_get_lib@@Base>
   14b90:	str	r0, [fp, #-36]	; 0xffffffdc
   14b94:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14b98:	movw	r1, #0
   14b9c:	cmp	r0, r1
   14ba0:	bne	14bb0 <mmk_stub_create_static@@Base+0xf8>
   14ba4:	mvn	r0, #1
   14ba8:	str	r0, [fp, #-4]
   14bac:	b	14c98 <mmk_stub_create_static@@Base+0x1e0>
   14bb0:	movw	r0, #0
   14bb4:	str	r0, [fp, #-40]	; 0xffffffd8
   14bb8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14bbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14bc0:	sub	r2, fp, #40	; 0x28
   14bc4:	bl	14544 <plt_get_offsets@@Base>
   14bc8:	str	r0, [fp, #-44]	; 0xffffffd4
   14bcc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14bd0:	movw	r1, #0
   14bd4:	cmp	r0, r1
   14bd8:	beq	14be8 <mmk_stub_create_static@@Base+0x130>
   14bdc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14be0:	cmp	r0, #0
   14be4:	bne	14bf4 <mmk_stub_create_static@@Base+0x13c>
   14be8:	mvn	r0, #1
   14bec:	str	r0, [fp, #-4]
   14bf0:	b	14c98 <mmk_stub_create_static@@Base+0x1e0>
   14bf4:	ldr	r0, [pc, #176]	; 14cac <mmk_stub_create_static@@Base+0x1f4>
   14bf8:	ldr	r0, [pc, r0]
   14bfc:	ldr	r1, [pc, #172]	; 14cb0 <mmk_stub_create_static@@Base+0x1f8>
   14c00:	ldr	r1, [pc, r1]
   14c04:	ldr	r2, [pc, #168]	; 14cb4 <mmk_stub_create_static@@Base+0x1fc>
   14c08:	ldr	r2, [pc, r2]
   14c0c:	ldr	r3, [fp, #-8]
   14c10:	str	r2, [sp, #12]
   14c14:	str	r1, [sp, #16]
   14c18:	str	r0, [sp, #20]
   14c1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14c20:	str	r0, [sp, #24]
   14c24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c28:	str	r0, [sp, #28]
   14c2c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14c30:	str	r0, [sp, #32]
   14c34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c38:	str	r0, [sp, #36]	; 0x24
   14c3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14c40:	str	r0, [sp, #40]	; 0x28
   14c44:	movw	r0, #0
   14c48:	str	r0, [sp, #44]	; 0x2c
   14c4c:	str	r0, [sp, #48]	; 0x30
   14c50:	add	r0, sp, #12
   14c54:	str	r0, [sp]
   14c58:	mov	r0, r3
   14c5c:	ldr	r1, [sp]
   14c60:	movw	r2, #40	; 0x28
   14c64:	bl	11528 <memcpy@plt>
   14c68:	ldr	r0, [fp, #-8]
   14c6c:	ldr	r1, [fp, #-16]
   14c70:	bl	14e78 <create_trampoline@@Base>
   14c74:	ldr	r1, [fp, #-8]
   14c78:	str	r0, [r1, #32]
   14c7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c80:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14c84:	ldr	r2, [fp, #-8]
   14c88:	ldr	r2, [r2, #32]
   14c8c:	bl	145d8 <plt_set_offsets@@Base>
   14c90:	movw	r0, #0
   14c94:	str	r0, [fp, #-4]
   14c98:	ldr	r0, [fp, #-4]
   14c9c:	mov	sp, fp
   14ca0:	pop	{fp, pc}
   14ca4:	andeq	r2, r1, ip, lsl #11
   14ca8:	andeq	r2, r1, r0, lsl #11
   14cac:			; <UNDEFINED> instruction: 0x000124b4
   14cb0:	andeq	r2, r1, r0, lsr #9
   14cb4:			; <UNDEFINED> instruction: 0x000124b4

00014cb8 <mmk_ctx_asked@@Base>:
   14cb8:	push	{fp, lr}
   14cbc:	mov	fp, sp
   14cc0:	sub	sp, sp, #8
   14cc4:	ldr	r0, [pc, #32]	; 14cec <mmk_ctx_asked@@Base+0x34>
   14cc8:	add	r0, pc, r0
   14ccc:	bl	115dc <__tls_get_addr@plt>
   14cd0:	ldr	r1, [r0]
   14cd4:	str	r1, [sp, #4]
   14cd8:	mov	r1, #0
   14cdc:	str	r1, [r0]
   14ce0:	ldr	r0, [sp, #4]
   14ce4:	mov	sp, fp
   14ce8:	pop	{fp, pc}
   14cec:	muleq	r1, ip, r3

00014cf0 <mmk_set_ctx@@Base>:
   14cf0:	push	{fp, lr}
   14cf4:	mov	fp, sp
   14cf8:	sub	sp, sp, #8
   14cfc:	str	r0, [sp, #4]
   14d00:	ldr	r0, [sp, #4]
   14d04:	ldr	r1, [pc, #28]	; 14d28 <mmk_set_ctx@@Base+0x38>
   14d08:	add	r1, pc, r1
   14d0c:	str	r0, [sp]
   14d10:	mov	r0, r1
   14d14:	bl	115dc <__tls_get_addr@plt>
   14d18:	ldr	r1, [sp]
   14d1c:	str	r1, [r0]
   14d20:	mov	sp, fp
   14d24:	pop	{fp, pc}
   14d28:	andeq	r2, r1, r4, ror #6

00014d2c <mmk_ctx@@Base>:
   14d2c:	push	{fp, lr}
   14d30:	mov	fp, sp
   14d34:	ldr	r0, [pc, #12]	; 14d48 <mmk_ctx@@Base+0x1c>
   14d38:	add	r0, pc, r0
   14d3c:	bl	115dc <__tls_get_addr@plt>
   14d40:	ldr	r0, [r0]
   14d44:	pop	{fp, pc}
   14d48:	andeq	r2, r1, r4, lsr r3

00014d4c <mmk_stub_create@@Base>:
   14d4c:	push	{fp, lr}
   14d50:	mov	fp, sp
   14d54:	sub	sp, sp, #24
   14d58:	str	r0, [fp, #-4]
   14d5c:	str	r1, [fp, #-8]
   14d60:	str	r2, [sp, #12]
   14d64:	bl	13788 <mmk_init@@Base>
   14d68:	movw	r0, #40	; 0x28
   14d6c:	bl	15908 <mmk_malloc@@Base>
   14d70:	str	r0, [sp, #8]
   14d74:	ldr	r0, [sp, #8]
   14d78:	ldr	r1, [fp, #-4]
   14d7c:	ldr	r2, [fp, #-8]
   14d80:	ldr	r3, [sp, #12]
   14d84:	bl	14ab8 <mmk_stub_create_static@@Base>
   14d88:	str	r0, [sp, #4]
   14d8c:	ldr	r0, [sp, #4]
   14d90:	cmp	r0, #0
   14d94:	bge	14dbc <mmk_stub_create@@Base+0x70>
   14d98:	ldr	r0, [sp, #8]
   14d9c:	bl	1598c <mmk_free@@Base>
   14da0:	ldr	r0, [sp, #4]
   14da4:	str	r0, [sp]
   14da8:	bl	115b8 <__errno_location@plt>
   14dac:	ldr	r1, [sp]
   14db0:	str	r1, [r0]
   14db4:	movw	r0, #0
   14db8:	str	r0, [sp, #8]
   14dbc:	ldr	r0, [sp, #8]
   14dc0:	mov	sp, fp
   14dc4:	pop	{fp, pc}

00014dc8 <mmk_stub_destroy_static@@Base>:
   14dc8:	push	{fp, lr}
   14dcc:	mov	fp, sp
   14dd0:	sub	sp, sp, #8
   14dd4:	str	r0, [sp, #4]
   14dd8:	ldr	r0, [sp, #4]
   14ddc:	ldr	r0, [r0, #24]
   14de0:	ldr	r1, [sp, #4]
   14de4:	ldr	r1, [r1, #28]
   14de8:	bl	14660 <plt_reset_offsets@@Base>
   14dec:	ldr	r0, [sp, #4]
   14df0:	ldr	r0, [r0, #24]
   14df4:	bl	1598c <mmk_free@@Base>
   14df8:	ldr	r0, [sp, #4]
   14dfc:	ldr	r0, [r0, #32]
   14e00:	bl	1500c <destroy_trampoline@@Base>
   14e04:	ldr	r0, [sp, #4]
   14e08:	ldr	r0, [r0, #16]
   14e0c:	bl	1598c <mmk_free@@Base>
   14e10:	mov	sp, fp
   14e14:	pop	{fp, pc}

00014e18 <mmk_stub_destroy@@Base>:
   14e18:	push	{fp, lr}
   14e1c:	mov	fp, sp
   14e20:	sub	sp, sp, #8
   14e24:	str	r0, [sp, #4]
   14e28:	ldr	r0, [sp, #4]
   14e2c:	bl	14dc8 <mmk_stub_destroy_static@@Base>
   14e30:	ldr	r0, [sp, #4]
   14e34:	bl	1598c <mmk_free@@Base>
   14e38:	mov	sp, fp
   14e3c:	pop	{fp, pc}

00014e40 <mmk_ask_ctx@@Base>:
   14e40:	push	{fp, lr}
   14e44:	mov	fp, sp
   14e48:	sub	sp, sp, #8
   14e4c:	str	r0, [sp, #4]
   14e50:	ldr	r0, [pc, #28]	; 14e74 <mmk_ask_ctx@@Base+0x34>
   14e54:	add	r0, pc, r0
   14e58:	bl	115dc <__tls_get_addr@plt>
   14e5c:	mov	r1, #1
   14e60:	str	r1, [r0]
   14e64:	ldr	r0, [sp, #4]
   14e68:	blx	r0
   14e6c:	mov	sp, fp
   14e70:	pop	{fp, pc}
   14e74:	andeq	r2, r1, r0, lsl r2

00014e78 <create_trampoline@@Base>:
   14e78:	push	{fp, lr}
   14e7c:	mov	fp, sp
   14e80:	sub	sp, sp, #56	; 0x38
   14e84:	ldr	r2, [pc, #340]	; 14fe0 <create_trampoline@@Base+0x168>
   14e88:	ldr	r2, [pc, r2]
   14e8c:	ldr	r3, [pc, #336]	; 14fe4 <create_trampoline@@Base+0x16c>
   14e90:	ldr	r3, [pc, r3]
   14e94:	sub	r2, r2, r3
   14e98:	str	r0, [fp, #-4]
   14e9c:	str	r1, [fp, #-8]
   14ea0:	str	r2, [fp, #-12]
   14ea4:	ldr	r0, [fp, #-12]
   14ea8:	cmp	r0, #4096	; 0x1000
   14eac:	bcc	14ef4 <create_trampoline@@Base+0x7c>
   14eb0:	ldr	r0, [pc, #304]	; 14fe8 <create_trampoline@@Base+0x170>
   14eb4:	add	r1, pc, r0
   14eb8:	ldr	r0, [pc, #300]	; 14fec <create_trampoline@@Base+0x174>
   14ebc:	add	r2, pc, r0
   14ec0:	ldr	r0, [pc, #296]	; 14ff0 <create_trampoline@@Base+0x178>
   14ec4:	add	r0, pc, r0
   14ec8:	ldr	r3, [pc, #292]	; 14ff4 <create_trampoline@@Base+0x17c>
   14ecc:	ldr	r3, [pc, r3]
   14ed0:	ldr	r3, [r3]
   14ed4:	str	r0, [fp, #-20]	; 0xffffffec
   14ed8:	mov	r0, r3
   14edc:	movw	r3, #45	; 0x2d
   14ee0:	ldr	ip, [fp, #-20]	; 0xffffffec
   14ee4:	str	ip, [sp]
   14ee8:	bl	115ac <fprintf@plt>
   14eec:	str	r0, [fp, #-24]	; 0xffffffe8
   14ef0:	bl	115f4 <abort@plt>
   14ef4:	b	14ef8 <create_trampoline@@Base+0x80>
   14ef8:	movw	r0, #0
   14efc:	str	r0, [sp, #28]
   14f00:	movw	r1, #4096	; 0x1000
   14f04:	movw	r2, #7
   14f08:	movw	r3, #34	; 0x22
   14f0c:	mvn	ip, #0
   14f10:	str	ip, [sp]
   14f14:	ldr	ip, [sp, #28]
   14f18:	str	ip, [sp, #4]
   14f1c:	bl	11594 <mmap@plt>
   14f20:	str	r0, [fp, #-16]
   14f24:	ldr	r0, [fp, #-16]
   14f28:	mvn	r1, #0
   14f2c:	cmp	r0, r1
   14f30:	bne	14f78 <create_trampoline@@Base+0x100>
   14f34:	ldr	r0, [pc, #188]	; 14ff8 <create_trampoline@@Base+0x180>
   14f38:	add	r1, pc, r0
   14f3c:	ldr	r0, [pc, #184]	; 14ffc <create_trampoline@@Base+0x184>
   14f40:	add	r2, pc, r0
   14f44:	ldr	r0, [pc, #180]	; 15000 <create_trampoline@@Base+0x188>
   14f48:	add	r0, pc, r0
   14f4c:	ldr	r3, [pc, #176]	; 15004 <create_trampoline@@Base+0x18c>
   14f50:	ldr	r3, [pc, r3]
   14f54:	ldr	r3, [r3]
   14f58:	str	r0, [sp, #24]
   14f5c:	mov	r0, r3
   14f60:	movw	r3, #69	; 0x45
   14f64:	ldr	ip, [sp, #24]
   14f68:	str	ip, [sp]
   14f6c:	bl	115ac <fprintf@plt>
   14f70:	str	r0, [sp, #20]
   14f74:	bl	115f4 <abort@plt>
   14f78:	b	14f7c <create_trampoline@@Base+0x104>
   14f7c:	ldr	r0, [pc, #132]	; 15008 <create_trampoline@@Base+0x190>
   14f80:	ldr	r0, [pc, r0]
   14f84:	ldr	r1, [fp, #-4]
   14f88:	ldr	r2, [fp, #-16]
   14f8c:	str	r1, [r2]
   14f90:	ldr	r1, [fp, #-8]
   14f94:	ldr	r2, [fp, #-16]
   14f98:	str	r1, [r2, #4]
   14f9c:	ldr	r1, [fp, #-16]
   14fa0:	add	r1, r1, #8
   14fa4:	ldr	r2, [fp, #-12]
   14fa8:	str	r0, [sp, #16]
   14fac:	mov	r0, r1
   14fb0:	ldr	r1, [sp, #16]
   14fb4:	bl	11528 <memcpy@plt>
   14fb8:	ldr	r0, [fp, #-16]
   14fbc:	movw	r1, #4096	; 0x1000
   14fc0:	movw	r2, #5
   14fc4:	bl	11510 <mprotect@plt>
   14fc8:	ldr	r1, [fp, #-16]
   14fcc:	add	r1, r1, #8
   14fd0:	str	r0, [sp, #12]
   14fd4:	mov	r0, r1
   14fd8:	mov	sp, fp
   14fdc:	pop	{fp, pc}
   14fe0:	andeq	r2, r1, r0, lsl #4
   14fe4:	andeq	r2, r1, ip, lsl #4
   14fe8:	andeq	r0, r0, r6, asr lr
   14fec:	andeq	r1, r0, r5, lsl r2
   14ff0:	andeq	r1, r0, r2, ror #4
   14ff4:	andeq	r2, r1, r8, asr #3
   14ff8:	ldrdeq	r0, [r0], -r2
   14ffc:	muleq	r0, r1, r1
   15000:	strdeq	r1, [r0], -r8
   15004:	andeq	r2, r1, r4, asr #2
   15008:	andeq	r2, r1, ip, lsl r1

0001500c <destroy_trampoline@@Base>:
   1500c:	push	{fp, lr}
   15010:	mov	fp, sp
   15014:	sub	sp, sp, #8
   15018:	str	r0, [sp, #4]
   1501c:	ldr	r0, [sp, #4]
   15020:	mvn	r1, #7
   15024:	add	r0, r0, r1
   15028:	movw	r1, #4096	; 0x1000
   1502c:	bl	115d0 <munmap@plt>
   15030:	mov	sp, fp
   15034:	pop	{fp, pc}

00015038 <mmk_verify_set_times@@Base>:
   15038:	push	{fp, lr}
   1503c:	mov	fp, sp
   15040:	sub	sp, sp, #8
   15044:	str	r0, [sp, #4]
   15048:	ldr	r0, [sp, #4]
   1504c:	ldr	r1, [pc, #28]	; 15070 <mmk_verify_set_times@@Base+0x38>
   15050:	add	r1, pc, r1
   15054:	str	r0, [sp]
   15058:	mov	r0, r1
   1505c:	bl	115dc <__tls_get_addr@plt>
   15060:	ldr	r1, [sp]
   15064:	str	r1, [r0]
   15068:	mov	sp, fp
   1506c:	pop	{fp, pc}
   15070:	andeq	r2, r1, r4, lsr #32

00015074 <mmk_verify_times@@Base>:
   15074:	push	{fp, lr}
   15078:	mov	fp, sp
   1507c:	sub	sp, sp, #32
   15080:	str	r0, [fp, #-8]
   15084:	ldr	r0, [pc, #304]	; 151bc <mmk_verify_times@@Base+0x148>
   15088:	add	r0, pc, r0
   1508c:	bl	115dc <__tls_get_addr@plt>
   15090:	ldr	r0, [r0]
   15094:	str	r0, [fp, #-12]
   15098:	ldr	r0, [fp, #-8]
   1509c:	ldr	r0, [r0, #4]
   150a0:	cmp	r0, #0
   150a4:	beq	150c4 <mmk_verify_times@@Base+0x50>
   150a8:	ldr	r0, [fp, #-12]
   150ac:	cmp	r0, #0
   150b0:	movw	r0, #0
   150b4:	moveq	r0, #1
   150b8:	and	r0, r0, #1
   150bc:	str	r0, [fp, #-4]
   150c0:	b	151b0 <mmk_verify_times@@Base+0x13c>
   150c4:	ldr	r0, [fp, #-8]
   150c8:	ldr	r0, [r0, #8]
   150cc:	cmp	r0, #0
   150d0:	bne	150e4 <mmk_verify_times@@Base+0x70>
   150d4:	ldr	r0, [fp, #-8]
   150d8:	ldr	r0, [r0, #12]
   150dc:	cmp	r0, #0
   150e0:	beq	15158 <mmk_verify_times@@Base+0xe4>
   150e4:	ldr	r0, [fp, #-8]
   150e8:	ldr	r0, [r0, #12]
   150ec:	cmp	r0, #0
   150f0:	beq	15104 <mmk_verify_times@@Base+0x90>
   150f4:	ldr	r0, [fp, #-8]
   150f8:	ldr	r0, [r0, #12]
   150fc:	str	r0, [sp, #12]
   15100:	b	1510c <mmk_verify_times@@Base+0x98>
   15104:	ldr	r0, [fp, #-12]
   15108:	str	r0, [sp, #12]
   1510c:	ldr	r0, [sp, #12]
   15110:	str	r0, [sp, #16]
   15114:	ldr	r0, [fp, #-12]
   15118:	ldr	r1, [fp, #-8]
   1511c:	ldr	r1, [r1, #8]
   15120:	cmp	r0, r1
   15124:	movw	r0, #0
   15128:	str	r0, [sp, #8]
   1512c:	bcc	15148 <mmk_verify_times@@Base+0xd4>
   15130:	ldr	r0, [fp, #-12]
   15134:	ldr	r1, [sp, #16]
   15138:	cmp	r0, r1
   1513c:	movw	r0, #0
   15140:	movls	r0, #1
   15144:	str	r0, [sp, #8]
   15148:	ldr	r0, [sp, #8]
   1514c:	and	r0, r0, #1
   15150:	str	r0, [fp, #-4]
   15154:	b	151b0 <mmk_verify_times@@Base+0x13c>
   15158:	ldr	r0, [fp, #-8]
   1515c:	ldr	r0, [r0, #20]
   15160:	movw	r1, #0
   15164:	cmp	r0, r1
   15168:	beq	15190 <mmk_verify_times@@Base+0x11c>
   1516c:	ldr	r0, [fp, #-8]
   15170:	ldr	r0, [r0, #20]
   15174:	ldr	r1, [fp, #-12]
   15178:	str	r0, [sp, #4]
   1517c:	mov	r0, r1
   15180:	ldr	r1, [sp, #4]
   15184:	blx	r1
   15188:	str	r0, [fp, #-4]
   1518c:	b	151b0 <mmk_verify_times@@Base+0x13c>
   15190:	ldr	r0, [fp, #-8]
   15194:	ldr	r0, [r0, #16]
   15198:	ldr	r1, [fp, #-12]
   1519c:	cmp	r0, r1
   151a0:	movw	r0, #0
   151a4:	moveq	r0, #1
   151a8:	and	r0, r0, #1
   151ac:	str	r0, [fp, #-4]
   151b0:	ldr	r0, [fp, #-4]
   151b4:	mov	sp, fp
   151b8:	pop	{fp, pc}
   151bc:	andeq	r1, r1, ip, ror #31

000151c0 <mmk_verify_register_call@@Base>:
   151c0:	push	{fp, lr}
   151c4:	mov	fp, sp
   151c8:	sub	sp, sp, #40	; 0x28
   151cc:	str	r0, [fp, #-4]
   151d0:	str	r1, [fp, #-8]
   151d4:	bl	14d2c <mmk_ctx@@Base>
   151d8:	bl	14a7c <mmk_stub_context@@Base>
   151dc:	str	r0, [fp, #-12]
   151e0:	ldr	r0, [fp, #-12]
   151e4:	ldr	r0, [r0, #8]
   151e8:	movw	r1, #0
   151ec:	cmp	r0, r1
   151f0:	bne	1526c <mmk_verify_register_call@@Base+0xac>
   151f4:	movw	r0, #4096	; 0x1000
   151f8:	bl	15908 <mmk_malloc@@Base>
   151fc:	ldr	r1, [fp, #-12]
   15200:	str	r0, [r1, #8]
   15204:	ldr	r0, [fp, #-12]
   15208:	ldr	r0, [r0, #8]
   1520c:	movw	r1, #0
   15210:	cmp	r0, r1
   15214:	bne	1525c <mmk_verify_register_call@@Base+0x9c>
   15218:	ldr	r0, [pc, #456]	; 153e8 <mmk_verify_register_call@@Base+0x228>
   1521c:	add	r1, pc, r0
   15220:	ldr	r0, [pc, #452]	; 153ec <mmk_verify_register_call@@Base+0x22c>
   15224:	add	r2, pc, r0
   15228:	ldr	r0, [pc, #448]	; 153f0 <mmk_verify_register_call@@Base+0x230>
   1522c:	add	r0, pc, r0
   15230:	ldr	r3, [pc, #444]	; 153f4 <mmk_verify_register_call@@Base+0x234>
   15234:	ldr	r3, [pc, r3]
   15238:	ldr	r3, [r3]
   1523c:	str	r0, [sp, #20]
   15240:	mov	r0, r3
   15244:	movw	r3, #79	; 0x4f
   15248:	ldr	ip, [sp, #20]
   1524c:	str	ip, [sp]
   15250:	bl	115ac <fprintf@plt>
   15254:	str	r0, [sp, #16]
   15258:	bl	115f4 <abort@plt>
   1525c:	b	15260 <mmk_verify_register_call@@Base+0xa0>
   15260:	ldr	r0, [fp, #-12]
   15264:	movw	r1, #4096	; 0x1000
   15268:	str	r1, [r0, #16]
   1526c:	ldr	r0, [fp, #-12]
   15270:	ldr	r1, [fp, #-4]
   15274:	ldr	r2, [fp, #-8]
   15278:	bl	15408 <mmk_verify_register_call@@Base+0x248>
   1527c:	cmp	r0, #0
   15280:	beq	15288 <mmk_verify_register_call@@Base+0xc8>
   15284:	b	153e0 <mmk_verify_register_call@@Base+0x220>
   15288:	ldr	r0, [fp, #-12]
   1528c:	ldr	r0, [r0, #12]
   15290:	ldr	r1, [fp, #-8]
   15294:	add	r0, r0, r1
   15298:	add	r0, r0, #4
   1529c:	ldr	r1, [fp, #-12]
   152a0:	ldr	r1, [r1, #16]
   152a4:	cmp	r0, r1
   152a8:	bcc	15364 <mmk_verify_register_call@@Base+0x1a4>
   152ac:	b	152b0 <mmk_verify_register_call@@Base+0xf0>
   152b0:	ldr	r0, [fp, #-12]
   152b4:	ldr	r0, [r0, #12]
   152b8:	ldr	r1, [fp, #-8]
   152bc:	add	r0, r0, r1
   152c0:	add	r0, r0, #4
   152c4:	ldr	r1, [fp, #-12]
   152c8:	ldr	r1, [r1, #16]
   152cc:	cmp	r0, r1
   152d0:	bcc	152e8 <mmk_verify_register_call@@Base+0x128>
   152d4:	ldr	r0, [fp, #-12]
   152d8:	ldr	r1, [r0, #16]
   152dc:	add	r1, r1, #4096	; 0x1000
   152e0:	str	r1, [r0, #16]
   152e4:	b	152b0 <mmk_verify_register_call@@Base+0xf0>
   152e8:	ldr	r0, [fp, #-12]
   152ec:	ldr	r0, [r0, #8]
   152f0:	ldr	r1, [fp, #-12]
   152f4:	ldr	r1, [r1, #16]
   152f8:	bl	15944 <mmk_realloc@@Base>
   152fc:	ldr	r1, [fp, #-12]
   15300:	str	r0, [r1, #8]
   15304:	ldr	r0, [fp, #-12]
   15308:	ldr	r0, [r0, #8]
   1530c:	movw	r1, #0
   15310:	cmp	r0, r1
   15314:	bne	1535c <mmk_verify_register_call@@Base+0x19c>
   15318:	ldr	r0, [pc, #216]	; 153f8 <mmk_verify_register_call@@Base+0x238>
   1531c:	add	r1, pc, r0
   15320:	ldr	r0, [pc, #212]	; 153fc <mmk_verify_register_call@@Base+0x23c>
   15324:	add	r2, pc, r0
   15328:	ldr	r0, [pc, #208]	; 15400 <mmk_verify_register_call@@Base+0x240>
   1532c:	add	r0, pc, r0
   15330:	ldr	r3, [pc, #204]	; 15404 <mmk_verify_register_call@@Base+0x244>
   15334:	ldr	r3, [pc, r3]
   15338:	ldr	r3, [r3]
   1533c:	str	r0, [sp, #12]
   15340:	mov	r0, r3
   15344:	movw	r3, #91	; 0x5b
   15348:	ldr	ip, [sp, #12]
   1534c:	str	ip, [sp]
   15350:	bl	115ac <fprintf@plt>
   15354:	str	r0, [sp, #8]
   15358:	bl	115f4 <abort@plt>
   1535c:	b	15360 <mmk_verify_register_call@@Base+0x1a0>
   15360:	b	15364 <mmk_verify_register_call@@Base+0x1a4>
   15364:	ldr	r0, [fp, #-12]
   15368:	ldr	r0, [r0, #8]
   1536c:	ldr	r1, [fp, #-12]
   15370:	ldr	r1, [r1, #12]
   15374:	add	r0, r0, r1
   15378:	sub	r1, fp, #8
   1537c:	movw	r2, #4
   15380:	bl	15580 <mmk_memcpy@@Base>
   15384:	ldr	r1, [fp, #-12]
   15388:	ldr	r1, [r1, #8]
   1538c:	ldr	r2, [fp, #-12]
   15390:	ldr	r2, [r2, #12]
   15394:	add	r1, r1, r2
   15398:	add	r1, r1, #4
   1539c:	ldr	r2, [fp, #-4]
   153a0:	ldr	r3, [fp, #-8]
   153a4:	str	r0, [sp, #4]
   153a8:	mov	r0, r1
   153ac:	mov	r1, r2
   153b0:	mov	r2, r3
   153b4:	bl	15580 <mmk_memcpy@@Base>
   153b8:	str	r0, [fp, #-16]
   153bc:	ldr	r0, [fp, #-16]
   153c0:	movw	r1, #1
   153c4:	str	r1, [r0]
   153c8:	ldr	r0, [fp, #-8]
   153cc:	add	r0, r0, #4
   153d0:	ldr	r1, [fp, #-12]
   153d4:	ldr	r2, [r1, #12]
   153d8:	add	r0, r2, r0
   153dc:	str	r0, [r1, #12]
   153e0:	mov	sp, fp
   153e4:	pop	{fp, pc}
   153e8:	andeq	r0, r0, lr, ror #21
   153ec:	andeq	r0, r0, lr, lsr #30
   153f0:	andeq	r0, r0, r7, ror pc
   153f4:	andeq	r1, r1, r0, ror #28
   153f8:	andeq	r0, r0, lr, ror #19
   153fc:	andeq	r0, r0, lr, lsr #28
   15400:	andeq	r0, r0, r7, ror lr
   15404:	andeq	r1, r1, r0, ror #26
   15408:	push	{fp, lr}
   1540c:	mov	fp, sp
   15410:	sub	sp, sp, #32
   15414:	str	r0, [fp, #-8]
   15418:	str	r1, [fp, #-12]
   1541c:	str	r2, [sp, #16]
   15420:	ldr	r0, [fp, #-12]
   15424:	add	r0, r0, #4
   15428:	str	r0, [fp, #-12]
   1542c:	ldr	r0, [sp, #16]
   15430:	sub	r0, r0, #4
   15434:	str	r0, [sp, #16]
   15438:	ldr	r0, [fp, #-8]
   1543c:	bl	13dfc <mmk_mock_params_begin@@Base>
   15440:	str	r0, [sp, #12]
   15444:	ldr	r0, [sp, #12]
   15448:	movw	r1, #0
   1544c:	cmp	r0, r1
   15450:	beq	154b4 <mmk_verify_register_call@@Base+0x2f4>
   15454:	ldr	r0, [sp, #12]
   15458:	add	r0, r0, #4
   1545c:	ldr	r1, [fp, #-12]
   15460:	ldr	r2, [sp, #16]
   15464:	bl	154c8 <mmk_memcmp@@Base>
   15468:	str	r0, [sp, #8]
   1546c:	ldr	r0, [sp, #8]
   15470:	cmp	r0, #0
   15474:	bne	1549c <mmk_verify_register_call@@Base+0x2dc>
   15478:	ldr	r0, [sp, #12]
   1547c:	str	r0, [sp, #4]
   15480:	ldr	r0, [sp, #4]
   15484:	ldr	r1, [r0]
   15488:	add	r1, r1, #1
   1548c:	str	r1, [r0]
   15490:	movw	r0, #1
   15494:	str	r0, [fp, #-4]
   15498:	b	154bc <mmk_verify_register_call@@Base+0x2fc>
   1549c:	b	154a0 <mmk_verify_register_call@@Base+0x2e0>
   154a0:	ldr	r0, [fp, #-8]
   154a4:	ldr	r1, [sp, #12]
   154a8:	bl	13e50 <mmk_mock_params_next@@Base>
   154ac:	str	r0, [sp, #12]
   154b0:	b	15444 <mmk_verify_register_call@@Base+0x284>
   154b4:	movw	r0, #0
   154b8:	str	r0, [fp, #-4]
   154bc:	ldr	r0, [fp, #-4]
   154c0:	mov	sp, fp
   154c4:	pop	{fp, pc}

000154c8 <mmk_memcmp@@Base>:
   154c8:	sub	sp, sp, #24
   154cc:	str	r0, [sp, #16]
   154d0:	str	r1, [sp, #12]
   154d4:	str	r2, [sp, #8]
   154d8:	ldr	r0, [sp, #16]
   154dc:	str	r0, [sp, #4]
   154e0:	ldr	r0, [sp, #12]
   154e4:	str	r0, [sp]
   154e8:	ldr	r0, [sp, #8]
   154ec:	cmp	r0, #0
   154f0:	beq	1556c <mmk_memcmp@@Base+0xa4>
   154f4:	ldr	r0, [sp, #4]
   154f8:	ldrb	r0, [r0]
   154fc:	ldr	r1, [sp]
   15500:	ldrb	r1, [r1]
   15504:	cmp	r0, r1
   15508:	beq	1553c <mmk_memcmp@@Base+0x74>
   1550c:	ldr	r0, [sp, #4]
   15510:	ldrb	r0, [r0]
   15514:	ldr	r1, [sp]
   15518:	ldrb	r1, [r1]
   1551c:	cmp	r0, r1
   15520:	movw	r0, #0
   15524:	movlt	r0, #1
   15528:	tst	r0, #1
   1552c:	mvn	r0, #0
   15530:	moveq	r0, #1
   15534:	str	r0, [sp, #20]
   15538:	b	15574 <mmk_memcmp@@Base+0xac>
   1553c:	b	15540 <mmk_memcmp@@Base+0x78>
   15540:	ldr	r0, [sp, #4]
   15544:	add	r0, r0, #1
   15548:	str	r0, [sp, #4]
   1554c:	ldr	r0, [sp]
   15550:	add	r0, r0, #1
   15554:	str	r0, [sp]
   15558:	ldr	r0, [sp, #8]
   1555c:	mvn	r1, #0
   15560:	add	r0, r0, r1
   15564:	str	r0, [sp, #8]
   15568:	b	154e8 <mmk_memcmp@@Base+0x20>
   1556c:	movw	r0, #0
   15570:	str	r0, [sp, #20]
   15574:	ldr	r0, [sp, #20]
   15578:	add	sp, sp, #24
   1557c:	bx	lr

00015580 <mmk_memcpy@@Base>:
   15580:	sub	sp, sp, #20
   15584:	str	r0, [sp, #16]
   15588:	str	r1, [sp, #12]
   1558c:	str	r2, [sp, #8]
   15590:	ldr	r0, [sp, #12]
   15594:	str	r0, [sp, #4]
   15598:	ldr	r0, [sp, #16]
   1559c:	str	r0, [sp]
   155a0:	ldr	r0, [sp, #8]
   155a4:	cmp	r0, #0
   155a8:	beq	155e8 <mmk_memcpy@@Base+0x68>
   155ac:	ldr	r0, [sp, #4]
   155b0:	ldrb	r0, [r0]
   155b4:	ldr	r1, [sp]
   155b8:	strb	r0, [r1]
   155bc:	ldr	r0, [sp]
   155c0:	add	r0, r0, #1
   155c4:	str	r0, [sp]
   155c8:	ldr	r0, [sp, #4]
   155cc:	add	r0, r0, #1
   155d0:	str	r0, [sp, #4]
   155d4:	ldr	r0, [sp, #8]
   155d8:	mvn	r1, #0
   155dc:	add	r0, r0, r1
   155e0:	str	r0, [sp, #8]
   155e4:	b	155a0 <mmk_memcpy@@Base+0x20>
   155e8:	ldr	r0, [sp, #16]
   155ec:	add	sp, sp, #20
   155f0:	bx	lr

000155f4 <mmk_strneq@@Base>:
   155f4:	sub	sp, sp, #24
   155f8:	str	r0, [sp, #16]
   155fc:	str	r1, [sp, #12]
   15600:	str	r2, [sp, #8]
   15604:	ldr	r0, [sp, #16]
   15608:	ldrb	r0, [r0]
   1560c:	cmp	r0, #0
   15610:	movw	r0, #0
   15614:	str	r0, [sp, #4]
   15618:	beq	15648 <mmk_strneq@@Base+0x54>
   1561c:	ldr	r0, [sp, #12]
   15620:	ldrb	r0, [r0]
   15624:	cmp	r0, #0
   15628:	movw	r0, #0
   1562c:	str	r0, [sp, #4]
   15630:	beq	15648 <mmk_strneq@@Base+0x54>
   15634:	ldr	r0, [sp, #8]
   15638:	cmp	r0, #0
   1563c:	movw	r0, #0
   15640:	movne	r0, #1
   15644:	str	r0, [sp, #4]
   15648:	ldr	r0, [sp, #4]
   1564c:	tst	r0, #1
   15650:	beq	156a8 <mmk_strneq@@Base+0xb4>
   15654:	ldr	r0, [sp, #16]
   15658:	ldrb	r0, [r0]
   1565c:	ldr	r1, [sp, #12]
   15660:	ldrb	r1, [r1]
   15664:	cmp	r0, r1
   15668:	beq	15678 <mmk_strneq@@Base+0x84>
   1566c:	movw	r0, #0
   15670:	str	r0, [sp, #20]
   15674:	b	156e8 <mmk_strneq@@Base+0xf4>
   15678:	b	1567c <mmk_strneq@@Base+0x88>
   1567c:	ldr	r0, [sp, #16]
   15680:	add	r0, r0, #1
   15684:	str	r0, [sp, #16]
   15688:	ldr	r0, [sp, #12]
   1568c:	add	r0, r0, #1
   15690:	str	r0, [sp, #12]
   15694:	ldr	r0, [sp, #8]
   15698:	mvn	r1, #0
   1569c:	add	r0, r0, r1
   156a0:	str	r0, [sp, #8]
   156a4:	b	15604 <mmk_strneq@@Base+0x10>
   156a8:	ldr	r0, [sp, #8]
   156ac:	cmp	r0, #0
   156b0:	movw	r0, #1
   156b4:	str	r0, [sp]
   156b8:	beq	156dc <mmk_strneq@@Base+0xe8>
   156bc:	ldr	r0, [sp, #12]
   156c0:	ldrsb	r0, [r0]
   156c4:	cmp	r0, #0
   156c8:	movw	r0, #0
   156cc:	movne	r0, #1
   156d0:	mvn	r1, #0
   156d4:	eor	r0, r0, r1
   156d8:	str	r0, [sp]
   156dc:	ldr	r0, [sp]
   156e0:	and	r0, r0, #1
   156e4:	str	r0, [sp, #20]
   156e8:	ldr	r0, [sp, #20]
   156ec:	add	sp, sp, #24
   156f0:	bx	lr

000156f4 <mmk_strchr@@Base>:
   156f4:	sub	sp, sp, #12
   156f8:	str	r0, [sp, #4]
   156fc:	str	r1, [sp]
   15700:	ldr	r0, [sp, #4]
   15704:	ldrsb	r0, [r0]
   15708:	cmp	r0, #0
   1570c:	beq	15744 <mmk_strchr@@Base+0x50>
   15710:	ldr	r0, [sp, #4]
   15714:	ldrb	r0, [r0]
   15718:	ldr	r1, [sp]
   1571c:	cmp	r0, r1
   15720:	bne	15730 <mmk_strchr@@Base+0x3c>
   15724:	ldr	r0, [sp, #4]
   15728:	str	r0, [sp, #8]
   1572c:	b	1574c <mmk_strchr@@Base+0x58>
   15730:	b	15734 <mmk_strchr@@Base+0x40>
   15734:	ldr	r0, [sp, #4]
   15738:	add	r0, r0, #1
   1573c:	str	r0, [sp, #4]
   15740:	b	15700 <mmk_strchr@@Base+0xc>
   15744:	movw	r0, #0
   15748:	str	r0, [sp, #8]
   1574c:	ldr	r0, [sp, #8]
   15750:	add	sp, sp, #12
   15754:	bx	lr

00015758 <mmk_strcpy@@Base>:
   15758:	sub	sp, sp, #8
   1575c:	str	r0, [sp, #4]
   15760:	str	r1, [sp]
   15764:	ldr	r0, [sp]
   15768:	ldrsb	r0, [r0]
   1576c:	cmp	r0, #0
   15770:	beq	157a0 <mmk_strcpy@@Base+0x48>
   15774:	ldr	r0, [sp]
   15778:	ldrb	r0, [r0]
   1577c:	ldr	r1, [sp, #4]
   15780:	strb	r0, [r1]
   15784:	ldr	r0, [sp, #4]
   15788:	add	r0, r0, #1
   1578c:	str	r0, [sp, #4]
   15790:	ldr	r0, [sp]
   15794:	add	r0, r0, #1
   15798:	str	r0, [sp]
   1579c:	b	15764 <mmk_strcpy@@Base+0xc>
   157a0:	ldr	r0, [sp, #4]
   157a4:	movw	r1, #0
   157a8:	strb	r1, [r0]
   157ac:	ldr	r0, [sp, #4]
   157b0:	add	sp, sp, #8
   157b4:	bx	lr

000157b8 <mmk_strncpy@@Base>:
   157b8:	sub	sp, sp, #16
   157bc:	str	r0, [sp, #12]
   157c0:	str	r1, [sp, #8]
   157c4:	str	r2, [sp, #4]
   157c8:	ldr	r0, [sp, #8]
   157cc:	ldrb	r0, [r0]
   157d0:	cmp	r0, #0
   157d4:	movw	r0, #0
   157d8:	str	r0, [sp]
   157dc:	beq	157f4 <mmk_strncpy@@Base+0x3c>
   157e0:	ldr	r0, [sp, #4]
   157e4:	cmp	r0, #0
   157e8:	movw	r0, #0
   157ec:	movne	r0, #1
   157f0:	str	r0, [sp]
   157f4:	ldr	r0, [sp]
   157f8:	tst	r0, #1
   157fc:	beq	1583c <mmk_strncpy@@Base+0x84>
   15800:	ldr	r0, [sp, #8]
   15804:	ldrb	r0, [r0]
   15808:	ldr	r1, [sp, #12]
   1580c:	strb	r0, [r1]
   15810:	ldr	r0, [sp, #12]
   15814:	add	r0, r0, #1
   15818:	str	r0, [sp, #12]
   1581c:	ldr	r0, [sp, #8]
   15820:	add	r0, r0, #1
   15824:	str	r0, [sp, #8]
   15828:	ldr	r0, [sp, #4]
   1582c:	mvn	r1, #0
   15830:	add	r0, r0, r1
   15834:	str	r0, [sp, #4]
   15838:	b	157c8 <mmk_strncpy@@Base+0x10>
   1583c:	ldr	r0, [sp, #12]
   15840:	movw	r1, #0
   15844:	strb	r1, [r0]
   15848:	ldr	r0, [sp, #12]
   1584c:	add	sp, sp, #16
   15850:	bx	lr

00015854 <mmk_strlen@@Base>:
   15854:	sub	sp, sp, #8
   15858:	str	r0, [sp, #4]
   1585c:	movw	r0, #0
   15860:	str	r0, [sp]
   15864:	ldr	r0, [sp, #4]
   15868:	ldrsb	r0, [r0]
   1586c:	cmp	r0, #0
   15870:	beq	15894 <mmk_strlen@@Base+0x40>
   15874:	b	15878 <mmk_strlen@@Base+0x24>
   15878:	ldr	r0, [sp]
   1587c:	add	r0, r0, #1
   15880:	str	r0, [sp]
   15884:	ldr	r0, [sp, #4]
   15888:	add	r0, r0, #1
   1588c:	str	r0, [sp, #4]
   15890:	b	15864 <mmk_strlen@@Base+0x10>
   15894:	ldr	r0, [sp]
   15898:	add	sp, sp, #8
   1589c:	bx	lr

000158a0 <mmk_isspace@@Base>:
   158a0:	sub	sp, sp, #8
   158a4:	str	r0, [sp, #4]
   158a8:	ldr	r0, [sp, #4]
   158ac:	cmp	r0, #32
   158b0:	movw	r0, #1
   158b4:	str	r0, [sp]
   158b8:	beq	158f8 <mmk_isspace@@Base+0x58>
   158bc:	ldr	r0, [sp, #4]
   158c0:	cmp	r0, #9
   158c4:	movw	r0, #1
   158c8:	str	r0, [sp]
   158cc:	beq	158f8 <mmk_isspace@@Base+0x58>
   158d0:	ldr	r0, [sp, #4]
   158d4:	cmp	r0, #13
   158d8:	movw	r0, #1
   158dc:	str	r0, [sp]
   158e0:	beq	158f8 <mmk_isspace@@Base+0x58>
   158e4:	ldr	r0, [sp, #4]
   158e8:	cmp	r0, #10
   158ec:	movw	r0, #0
   158f0:	moveq	r0, #1
   158f4:	str	r0, [sp]
   158f8:	ldr	r0, [sp]
   158fc:	and	r0, r0, #1
   15900:	add	sp, sp, #8
   15904:	bx	lr

00015908 <mmk_malloc@@Base>:
   15908:	push	{fp, lr}
   1590c:	mov	fp, sp
   15910:	sub	sp, sp, #8
   15914:	ldr	r1, [pc, #36]	; 15940 <mmk_malloc@@Base+0x38>
   15918:	ldr	r1, [pc, r1]
   1591c:	str	r0, [sp, #4]
   15920:	ldr	r0, [r1]
   15924:	ldr	r1, [sp, #4]
   15928:	str	r0, [sp]
   1592c:	mov	r0, r1
   15930:	ldr	r1, [sp]
   15934:	blx	r1
   15938:	mov	sp, fp
   1593c:	pop	{fp, pc}
   15940:	muleq	r1, ip, r7

00015944 <mmk_realloc@@Base>:
   15944:	push	{fp, lr}
   15948:	mov	fp, sp
   1594c:	sub	sp, sp, #16
   15950:	ldr	r2, [pc, #48]	; 15988 <mmk_realloc@@Base+0x44>
   15954:	ldr	r2, [pc, r2]
   15958:	str	r0, [fp, #-4]
   1595c:	str	r1, [sp, #8]
   15960:	ldr	r0, [r2]
   15964:	ldr	r1, [fp, #-4]
   15968:	ldr	r2, [sp, #8]
   1596c:	str	r0, [sp, #4]
   15970:	mov	r0, r1
   15974:	mov	r1, r2
   15978:	ldr	r2, [sp, #4]
   1597c:	blx	r2
   15980:	mov	sp, fp
   15984:	pop	{fp, pc}
   15988:	andeq	r1, r1, r0, asr r7

0001598c <mmk_free@@Base>:
   1598c:	push	{fp, lr}
   15990:	mov	fp, sp
   15994:	sub	sp, sp, #8
   15998:	ldr	r1, [pc, #36]	; 159c4 <mmk_free@@Base+0x38>
   1599c:	ldr	r1, [pc, r1]
   159a0:	str	r0, [sp, #4]
   159a4:	ldr	r0, [r1]
   159a8:	ldr	r1, [sp, #4]
   159ac:	str	r0, [sp]
   159b0:	mov	r0, r1
   159b4:	ldr	r1, [sp]
   159b8:	blx	r1
   159bc:	mov	sp, fp
   159c0:	pop	{fp, pc}
   159c4:	andeq	r1, r1, r4, lsl r7

000159c8 <mmk_init_vital_functions@@Base>:
   159c8:	push	{fp, lr}
   159cc:	mov	fp, sp
   159d0:	sub	sp, sp, #32
   159d4:	str	r0, [fp, #-4]
   159d8:	movw	r0, #0
   159dc:	bl	11564 <malloc@plt>
   159e0:	movw	r1, #0
   159e4:	bl	11540 <realloc@plt>
   159e8:	bl	1151c <free@plt>
   159ec:	ldr	r0, [pc, #348]	; 15b50 <mmk_init_vital_functions@@Base+0x188>
   159f0:	add	r1, pc, r0
   159f4:	ldr	r0, [fp, #-4]
   159f8:	bl	146b4 <plt_get_real_fn@@Base>
   159fc:	ldr	r1, [pc, #328]	; 15b4c <mmk_init_vital_functions@@Base+0x184>
   15a00:	ldr	r1, [pc, r1]
   15a04:	str	r0, [r1]
   15a08:	movw	r1, #0
   15a0c:	cmp	r0, r1
   15a10:	bne	15a58 <mmk_init_vital_functions@@Base+0x90>
   15a14:	ldr	r0, [pc, #312]	; 15b54 <mmk_init_vital_functions@@Base+0x18c>
   15a18:	add	r1, pc, r0
   15a1c:	ldr	r0, [pc, #308]	; 15b58 <mmk_init_vital_functions@@Base+0x190>
   15a20:	add	r2, pc, r0
   15a24:	ldr	r0, [pc, #304]	; 15b5c <mmk_init_vital_functions@@Base+0x194>
   15a28:	add	r0, pc, r0
   15a2c:	ldr	r3, [pc, #300]	; 15b60 <mmk_init_vital_functions@@Base+0x198>
   15a30:	ldr	r3, [pc, r3]
   15a34:	ldr	r3, [r3]
   15a38:	str	r0, [fp, #-8]
   15a3c:	mov	r0, r3
   15a40:	movw	r3, #88	; 0x58
   15a44:	ldr	ip, [fp, #-8]
   15a48:	str	ip, [sp]
   15a4c:	bl	115ac <fprintf@plt>
   15a50:	str	r0, [fp, #-12]
   15a54:	bl	115f4 <abort@plt>
   15a58:	b	15a5c <mmk_init_vital_functions@@Base+0x94>
   15a5c:	b	15a60 <mmk_init_vital_functions@@Base+0x98>
   15a60:	ldr	r0, [pc, #256]	; 15b68 <mmk_init_vital_functions@@Base+0x1a0>
   15a64:	add	r1, pc, r0
   15a68:	ldr	r0, [fp, #-4]
   15a6c:	bl	146b4 <plt_get_real_fn@@Base>
   15a70:	ldr	r1, [pc, #236]	; 15b64 <mmk_init_vital_functions@@Base+0x19c>
   15a74:	ldr	r1, [pc, r1]
   15a78:	str	r0, [r1]
   15a7c:	movw	r1, #0
   15a80:	cmp	r0, r1
   15a84:	bne	15acc <mmk_init_vital_functions@@Base+0x104>
   15a88:	ldr	r0, [pc, #220]	; 15b6c <mmk_init_vital_functions@@Base+0x1a4>
   15a8c:	add	r1, pc, r0
   15a90:	ldr	r0, [pc, #216]	; 15b70 <mmk_init_vital_functions@@Base+0x1a8>
   15a94:	add	r2, pc, r0
   15a98:	ldr	r0, [pc, #212]	; 15b74 <mmk_init_vital_functions@@Base+0x1ac>
   15a9c:	add	r0, pc, r0
   15aa0:	ldr	r3, [pc, #208]	; 15b78 <mmk_init_vital_functions@@Base+0x1b0>
   15aa4:	ldr	r3, [pc, r3]
   15aa8:	ldr	r3, [r3]
   15aac:	str	r0, [sp, #16]
   15ab0:	mov	r0, r3
   15ab4:	movw	r3, #89	; 0x59
   15ab8:	ldr	ip, [sp, #16]
   15abc:	str	ip, [sp]
   15ac0:	bl	115ac <fprintf@plt>
   15ac4:	str	r0, [sp, #12]
   15ac8:	bl	115f4 <abort@plt>
   15acc:	b	15ad0 <mmk_init_vital_functions@@Base+0x108>
   15ad0:	b	15ad4 <mmk_init_vital_functions@@Base+0x10c>
   15ad4:	ldr	r0, [pc, #164]	; 15b80 <mmk_init_vital_functions@@Base+0x1b8>
   15ad8:	add	r1, pc, r0
   15adc:	ldr	r0, [fp, #-4]
   15ae0:	bl	146b4 <plt_get_real_fn@@Base>
   15ae4:	ldr	r1, [pc, #144]	; 15b7c <mmk_init_vital_functions@@Base+0x1b4>
   15ae8:	ldr	r1, [pc, r1]
   15aec:	str	r0, [r1]
   15af0:	movw	r1, #0
   15af4:	cmp	r0, r1
   15af8:	bne	15b40 <mmk_init_vital_functions@@Base+0x178>
   15afc:	ldr	r0, [pc, #128]	; 15b84 <mmk_init_vital_functions@@Base+0x1bc>
   15b00:	add	r1, pc, r0
   15b04:	ldr	r0, [pc, #124]	; 15b88 <mmk_init_vital_functions@@Base+0x1c0>
   15b08:	add	r2, pc, r0
   15b0c:	ldr	r0, [pc, #120]	; 15b8c <mmk_init_vital_functions@@Base+0x1c4>
   15b10:	add	r0, pc, r0
   15b14:	ldr	r3, [pc, #116]	; 15b90 <mmk_init_vital_functions@@Base+0x1c8>
   15b18:	ldr	r3, [pc, r3]
   15b1c:	ldr	r3, [r3]
   15b20:	str	r0, [sp, #8]
   15b24:	mov	r0, r3
   15b28:	movw	r3, #90	; 0x5a
   15b2c:	ldr	ip, [sp, #8]
   15b30:	str	ip, [sp]
   15b34:	bl	115ac <fprintf@plt>
   15b38:	str	r0, [sp, #4]
   15b3c:	bl	115f4 <abort@plt>
   15b40:	b	15b44 <mmk_init_vital_functions@@Base+0x17c>
   15b44:	mov	sp, fp
   15b48:	pop	{fp, pc}
   15b4c:			; <UNDEFINED> instruction: 0x000116b4
   15b50:	andeq	r0, r0, r3, asr #15
   15b54:	strdeq	r0, [r0], -r2
   15b58:	muleq	r0, sl, r7
   15b5c:	andeq	r0, r0, r3, ror #15
   15b60:	andeq	r1, r1, r4, ror #12
   15b64:	andeq	r1, r1, r0, lsr r6
   15b68:	ldrdeq	r0, [r0], -sp
   15b6c:	andeq	r0, r0, lr, ror r2
   15b70:	andeq	r0, r0, r6, lsr #14
   15b74:	andeq	r0, r0, sp, lsr #15
   15b78:	strdeq	r1, [r1], -r0
   15b7c:	andeq	r1, r1, r8, asr #11
   15b80:	andeq	r0, r0, r9, lsr #15
   15b84:	andeq	r0, r0, sl, lsl #4
   15b88:			; <UNDEFINED> instruction: 0x000006b2
   15b8c:	andeq	r0, r0, r6, ror r7
   15b90:	andeq	r1, r1, ip, ror r5

00015b94 <mmk_when_init@@Base>:
   15b94:	push	{fp, lr}
   15b98:	mov	fp, sp
   15b9c:	sub	sp, sp, #8
   15ba0:	str	r0, [sp, #4]
   15ba4:	ldr	r0, [sp, #4]
   15ba8:	ldr	r1, [pc, #28]	; 15bcc <mmk_when_init@@Base+0x38>
   15bac:	add	r1, pc, r1
   15bb0:	str	r0, [sp]
   15bb4:	mov	r0, r1
   15bb8:	bl	115dc <__tls_get_addr@plt>
   15bbc:	ldr	r1, [sp]
   15bc0:	str	r1, [r0]
   15bc4:	mov	sp, fp
   15bc8:	pop	{fp, pc}
   15bcc:	ldrdeq	r1, [r1], -r0

00015bd0 <mmk_when_get_result@@Base>:
   15bd0:	push	{fp, lr}
   15bd4:	mov	fp, sp
   15bd8:	ldr	r0, [pc, #12]	; 15bec <mmk_when_get_result@@Base+0x1c>
   15bdc:	add	r0, pc, r0
   15be0:	bl	115dc <__tls_get_addr@plt>
   15be4:	ldr	r0, [r0]
   15be8:	pop	{fp, pc}
   15bec:	andeq	r1, r1, r0, lsr #9

00015bf0 <mmk_when_impl@@Base>:
   15bf0:	push	{fp, lr}
   15bf4:	mov	fp, sp
   15bf8:	sub	sp, sp, #16
   15bfc:	str	r0, [fp, #-4]
   15c00:	str	r1, [sp, #8]
   15c04:	ldr	r0, [sp, #8]
   15c08:	str	r0, [sp, #4]
   15c0c:	bl	139e0 <mmk_matcher_ctx@@Base>
   15c10:	ldr	r1, [sp, #4]
   15c14:	str	r0, [r1]
   15c18:	ldr	r0, [fp, #-4]
   15c1c:	ldr	r0, [r0]
   15c20:	ldr	r1, [sp, #4]
   15c24:	str	r0, [r1, #4]
   15c28:	ldr	r0, [sp, #4]
   15c2c:	ldr	r1, [fp, #-4]
   15c30:	str	r0, [r1]
   15c34:	mov	sp, fp
   15c38:	pop	{fp, pc}

00015c3c <mmk_trampoline@@Base>:
   15c3c:	sub	ip, pc, #8
   15c40:	push	{r0, r1, r2, r3}
   15c44:	push	{ip, lr}
   15c48:	ldr	r0, [ip, #-8]
   15c4c:	ldr	ip, [r0, #4]
   15c50:	blx	ip
   15c54:	pop	{ip, lr}
   15c58:	push	{ip, lr}
   15c5c:	ldr	ip, [ip, #-8]
   15c60:	ldr	ip, [ip]
   15c64:	blx	ip
   15c68:	cmp	r0, #0
   15c6c:	bne	15c7c <mmk_trampoline@@Base+0x40>
   15c70:	pop	{ip, lr}
   15c74:	pop	{r0, r1, r2, r3}
   15c78:	ldr	pc, [ip, #-4]
   15c7c:	pop	{ip, lr}
   15c80:	pop	{r0, r1, r2, r3}
   15c84:	push	{ip, lr}
   15c88:	ldr	ip, [ip, #-8]
   15c8c:	ldr	ip, [ip, #8]
   15c90:	blx	ip
   15c94:	pop	{ip, pc}

00015c98 <mmk_trampoline_end@@Base>:
   15c98:	nop	{0}

00015c9c <__libc_csu_init@@Base>:
   15c9c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15ca0:	mov	r7, r0
   15ca4:	ldr	r6, [pc, #72]	; 15cf4 <__libc_csu_init@@Base+0x58>
   15ca8:	ldr	r5, [pc, #72]	; 15cf8 <__libc_csu_init@@Base+0x5c>
   15cac:	add	r6, pc, r6
   15cb0:	add	r5, pc, r5
   15cb4:	sub	r6, r6, r5
   15cb8:	mov	r8, r1
   15cbc:	mov	r9, r2
   15cc0:	bl	114d8 <strstr@plt-0x20>
   15cc4:	asrs	r6, r6, #2
   15cc8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15ccc:	mov	r4, #0
   15cd0:	add	r4, r4, #1
   15cd4:	ldr	r3, [r5], #4
   15cd8:	mov	r2, r9
   15cdc:	mov	r1, r8
   15ce0:	mov	r0, r7
   15ce4:	blx	r3
   15ce8:	cmp	r6, r4
   15cec:	bne	15cd0 <__libc_csu_init@@Base+0x34>
   15cf0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15cf4:	andeq	r1, r1, r0, asr #4
   15cf8:	andeq	r1, r1, r8, lsr r2

00015cfc <__libc_csu_fini@@Base>:
   15cfc:	bx	lr

Disassembly of section .fini:

00015d00 <.fini>:
   15d00:	push	{r3, lr}
   15d04:	pop	{r3, pc}
