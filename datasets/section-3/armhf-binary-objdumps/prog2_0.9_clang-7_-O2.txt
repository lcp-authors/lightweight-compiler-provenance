
../repos/prog2/0.9:     file format elf32-littlearm


Disassembly of section .init:

000106f8 <.init>:
   106f8:	push	{r3, lr}
   106fc:	bl	107b4 <_start@@Base+0x3c>
   10700:	pop	{r3, pc}

Disassembly of section .plt:

00010704 <strcmp@plt-0x14>:
   10704:	push	{lr}		; (str lr, [sp, #-4]!)
   10708:	ldr	lr, [pc, #4]	; 10714 <strcmp@plt-0x4>
   1070c:	add	lr, pc, lr
   10710:	ldr	pc, [lr, #8]!
   10714:	andeq	r0, r1, ip, ror #17

00010718 <strcmp@plt>:
   10718:	add	ip, pc, #0, 12
   1071c:	add	ip, ip, #16, 20	; 0x10000
   10720:	ldr	pc, [ip, #2284]!	; 0x8ec

00010724 <printf@plt>:
   10724:	add	ip, pc, #0, 12
   10728:	add	ip, ip, #16, 20	; 0x10000
   1072c:	ldr	pc, [ip, #2276]!	; 0x8e4

00010730 <strcat@plt>:
   10730:	add	ip, pc, #0, 12
   10734:	add	ip, ip, #16, 20	; 0x10000
   10738:	ldr	pc, [ip, #2268]!	; 0x8dc

0001073c <__libc_start_main@plt>:
   1073c:	add	ip, pc, #0, 12
   10740:	add	ip, ip, #16, 20	; 0x10000
   10744:	ldr	pc, [ip, #2260]!	; 0x8d4

00010748 <__gmon_start__@plt>:
   10748:	add	ip, pc, #0, 12
   1074c:	add	ip, ip, #16, 20	; 0x10000
   10750:	ldr	pc, [ip, #2252]!	; 0x8cc

00010754 <strlen@plt>:
   10754:	add	ip, pc, #0, 12
   10758:	add	ip, ip, #16, 20	; 0x10000
   1075c:	ldr	pc, [ip, #2244]!	; 0x8c4

00010760 <__isoc99_scanf@plt>:
   10760:	add	ip, pc, #0, 12
   10764:	add	ip, ip, #16, 20	; 0x10000
   10768:	ldr	pc, [ip, #2236]!	; 0x8bc

0001076c <abort@plt>:
   1076c:	add	ip, pc, #0, 12
   10770:	add	ip, ip, #16, 20	; 0x10000
   10774:	ldr	pc, [ip, #2228]!	; 0x8b4

Disassembly of section .text:

00010778 <_start@@Base>:
   10778:	mov	fp, #0
   1077c:	mov	lr, #0
   10780:	pop	{r1}		; (ldr r1, [sp], #4)
   10784:	mov	r2, sp
   10788:	push	{r2}		; (str r2, [sp, #-4]!)
   1078c:	push	{r0}		; (str r0, [sp, #-4]!)
   10790:	ldr	ip, [pc, #16]	; 107a8 <_start@@Base+0x30>
   10794:	push	{ip}		; (str ip, [sp, #-4]!)
   10798:	ldr	r0, [pc, #12]	; 107ac <_start@@Base+0x34>
   1079c:	ldr	r3, [pc, #12]	; 107b0 <_start@@Base+0x38>
   107a0:	bl	1073c <__libc_start_main@plt>
   107a4:	bl	1076c <abort@plt>
   107a8:	andeq	r0, r1, r0, ror #23
   107ac:	andeq	r0, r1, r0, lsr sl
   107b0:	andeq	r0, r1, r0, lsl #23
   107b4:	ldr	r3, [pc, #20]	; 107d0 <_start@@Base+0x58>
   107b8:	ldr	r2, [pc, #20]	; 107d4 <_start@@Base+0x5c>
   107bc:	add	r3, pc, r3
   107c0:	ldr	r2, [r3, r2]
   107c4:	cmp	r2, #0
   107c8:	bxeq	lr
   107cc:	b	10748 <__gmon_start__@plt>
   107d0:	andeq	r0, r1, ip, lsr r8
   107d4:	andeq	r0, r0, ip, lsr #32
   107d8:	ldr	r0, [pc, #24]	; 107f8 <_start@@Base+0x80>
   107dc:	ldr	r3, [pc, #24]	; 107fc <_start@@Base+0x84>
   107e0:	cmp	r3, r0
   107e4:	bxeq	lr
   107e8:	ldr	r3, [pc, #16]	; 10800 <_start@@Base+0x88>
   107ec:	cmp	r3, #0
   107f0:	bxeq	lr
   107f4:	bx	r3
   107f8:	andeq	r1, r2, r8, lsr r0
   107fc:	andeq	r1, r2, r8, lsr r0
   10800:	andeq	r0, r0, r0
   10804:	ldr	r0, [pc, #36]	; 10830 <_start@@Base+0xb8>
   10808:	ldr	r1, [pc, #36]	; 10834 <_start@@Base+0xbc>
   1080c:	sub	r1, r1, r0
   10810:	asr	r1, r1, #2
   10814:	add	r1, r1, r1, lsr #31
   10818:	asrs	r1, r1, #1
   1081c:	bxeq	lr
   10820:	ldr	r3, [pc, #16]	; 10838 <_start@@Base+0xc0>
   10824:	cmp	r3, #0
   10828:	bxeq	lr
   1082c:	bx	r3
   10830:	andeq	r1, r2, r8, lsr r0
   10834:	andeq	r1, r2, r8, lsr r0
   10838:	andeq	r0, r0, r0
   1083c:	push	{r4, lr}
   10840:	ldr	r4, [pc, #24]	; 10860 <_start@@Base+0xe8>
   10844:	ldrb	r3, [r4]
   10848:	cmp	r3, #0
   1084c:	popne	{r4, pc}
   10850:	bl	107d8 <_start@@Base+0x60>
   10854:	mov	r3, #1
   10858:	strb	r3, [r4]
   1085c:	pop	{r4, pc}
   10860:	andeq	r1, r2, r8, lsr r0
   10864:	b	10804 <_start@@Base+0x8c>

00010868 <ler_albuns@@Base>:
   10868:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1086c:	add	fp, sp, #24
   10870:	sub	sp, sp, #24
   10874:	mov	r7, r0
   10878:	mov	r4, #0
   1087c:	add	r0, r0, #204	; 0xcc
   10880:	add	r2, sp, #8
   10884:	add	r1, r7, #200	; 0xc8
   10888:	str	r4, [sp, #12]
   1088c:	str	r4, [sp, #8]
   10890:	str	r4, [sp, #19]
   10894:	str	r4, [sp, #15]
   10898:	str	r0, [sp, #4]
   1089c:	add	r3, r7, #100	; 0x64
   108a0:	str	r1, [sp]
   108a4:	mov	r1, r7
   108a8:	ldr	r0, [pc, #136]	; 10938 <ler_albuns@@Base+0xd0>
   108ac:	add	r0, pc, r0
   108b0:	bl	10760 <__isoc99_scanf@plt>
   108b4:	cmp	r0, #5
   108b8:	bne	1092c <ler_albuns@@Base+0xc4>
   108bc:	ldr	r8, [pc, #120]	; 1093c <ler_albuns@@Base+0xd4>
   108c0:	mov	r4, #0
   108c4:	mov	r9, #32
   108c8:	add	r6, sp, #8
   108cc:	add	r8, pc, r8
   108d0:	mov	r0, r7
   108d4:	bl	10754 <strlen@plt>
   108d8:	add	r0, r7, r0
   108dc:	mov	r1, r6
   108e0:	strh	r9, [r0]
   108e4:	mov	r0, r7
   108e8:	bl	10730 <strcat@plt>
   108ec:	add	r0, r7, #412	; 0x19c
   108f0:	add	r1, r7, #408	; 0x198
   108f4:	add	r5, r7, #208	; 0xd0
   108f8:	add	r3, r7, #308	; 0x134
   108fc:	mov	r2, r6
   10900:	str	r1, [sp]
   10904:	str	r0, [sp, #4]
   10908:	mov	r0, r8
   1090c:	mov	r1, r5
   10910:	bl	10760 <__isoc99_scanf@plt>
   10914:	add	r4, r4, #1
   10918:	cmp	r4, #99	; 0x63
   1091c:	bhi	1092c <ler_albuns@@Base+0xc4>
   10920:	cmp	r0, #5
   10924:	mov	r7, r5
   10928:	beq	108d0 <ler_albuns@@Base+0x68>
   1092c:	mov	r0, r4
   10930:	sub	sp, fp, #24
   10934:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   10938:	andeq	r0, r0, ip, lsr r3
   1093c:	andeq	r0, r0, ip, lsl r3

00010940 <lista_albuns@@Base>:
   10940:	push	{r4, r5, r6, sl, fp, lr}
   10944:	add	fp, sp, #16
   10948:	sub	sp, sp, #8
   1094c:	cmp	r1, #1
   10950:	blt	1098c <lista_albuns@@Base+0x4c>
   10954:	ldr	r6, [pc, #56]	; 10994 <lista_albuns@@Base+0x54>
   10958:	mov	r4, r1
   1095c:	mov	r5, r0
   10960:	add	r6, pc, r6
   10964:	ldr	r0, [r5, #204]	; 0xcc
   10968:	ldr	r3, [r5, #200]	; 0xc8
   1096c:	add	r2, r5, #100	; 0x64
   10970:	mov	r1, r5
   10974:	str	r0, [sp]
   10978:	mov	r0, r6
   1097c:	bl	10724 <printf@plt>
   10980:	add	r5, r5, #208	; 0xd0
   10984:	subs	r4, r4, #1
   10988:	bne	10964 <lista_albuns@@Base+0x24>
   1098c:	sub	sp, fp, #16
   10990:	pop	{r4, r5, r6, sl, fp, pc}
   10994:	muleq	r0, r7, r2

00010998 <albuns_artista@@Base>:
   10998:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1099c:	add	fp, sp, #24
   109a0:	mov	r4, r2
   109a4:	mov	r5, r1
   109a8:	mov	r6, r0
   109ac:	cmp	r3, #0
   109b0:	beq	109fc <albuns_artista@@Base+0x64>
   109b4:	cmp	r5, #1
   109b8:	movlt	r7, #0
   109bc:	movlt	r0, r7
   109c0:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
   109c4:	mov	r8, r3
   109c8:	mov	r7, #0
   109cc:	mov	r0, r4
   109d0:	mov	r1, r6
   109d4:	bl	10718 <strcmp@plt>
   109d8:	cmp	r0, #0
   109dc:	bne	109ec <albuns_artista@@Base+0x54>
   109e0:	ldr	r0, [r6, #204]	; 0xcc
   109e4:	cmp	r0, r8
   109e8:	addeq	r7, r7, #1
   109ec:	add	r6, r6, #208	; 0xd0
   109f0:	subs	r5, r5, #1
   109f4:	bne	109cc <albuns_artista@@Base+0x34>
   109f8:	b	10a28 <albuns_artista@@Base+0x90>
   109fc:	mov	r7, #0
   10a00:	cmp	r5, #1
   10a04:	blt	10a28 <albuns_artista@@Base+0x90>
   10a08:	mov	r0, r4
   10a0c:	mov	r1, r6
   10a10:	bl	10718 <strcmp@plt>
   10a14:	cmp	r0, #0
   10a18:	add	r6, r6, #208	; 0xd0
   10a1c:	addeq	r7, r7, #1
   10a20:	subs	r5, r5, #1
   10a24:	bne	10a08 <albuns_artista@@Base+0x70>
   10a28:	mov	r0, r7
   10a2c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00010a30 <main@@Base>:
   10a30:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10a34:	add	fp, sp, #24
   10a38:	sub	sp, sp, #328	; 0x148
   10a3c:	sub	sp, sp, #20480	; 0x5000
   10a40:	add	r5, sp, #8
   10a44:	mov	r0, r5
   10a48:	bl	10868 <ler_albuns@@Base>
   10a4c:	mov	r7, r0
   10a50:	cmp	r0, #1
   10a54:	blt	10b20 <main@@Base+0xf0>
   10a58:	ldr	r6, [pc, #256]	; 10b60 <main@@Base+0x130>
   10a5c:	mov	r4, r7
   10a60:	add	r6, pc, r6
   10a64:	ldr	r0, [r5, #204]	; 0xcc
   10a68:	ldr	r3, [r5, #200]	; 0xc8
   10a6c:	add	r2, r5, #100	; 0x64
   10a70:	mov	r1, r5
   10a74:	str	r0, [sp]
   10a78:	mov	r0, r6
   10a7c:	bl	10724 <printf@plt>
   10a80:	subs	r4, r4, #1
   10a84:	add	r5, r5, #208	; 0xd0
   10a88:	bne	10a64 <main@@Base+0x34>
   10a8c:	ldr	r0, [pc, #208]	; 10b64 <main@@Base+0x134>
   10a90:	mov	r1, r7
   10a94:	add	r0, pc, r0
   10a98:	bl	10724 <printf@plt>
   10a9c:	ldr	r8, [pc, #196]	; 10b68 <main@@Base+0x138>
   10aa0:	mov	r5, #0
   10aa4:	add	r6, sp, #8
   10aa8:	mov	r4, r7
   10aac:	add	r8, pc, r8
   10ab0:	mov	r0, r8
   10ab4:	mov	r1, r6
   10ab8:	bl	10718 <strcmp@plt>
   10abc:	cmp	r0, #0
   10ac0:	bne	10ad0 <main@@Base+0xa0>
   10ac4:	ldr	r0, [r6, #204]	; 0xcc
   10ac8:	cmp	r0, #1
   10acc:	addeq	r5, r5, #1
   10ad0:	subs	r4, r4, #1
   10ad4:	add	r6, r6, #208	; 0xd0
   10ad8:	bne	10ab0 <main@@Base+0x80>
   10adc:	ldr	r0, [pc, #136]	; 10b6c <main@@Base+0x13c>
   10ae0:	mov	r1, r5
   10ae4:	add	r0, pc, r0
   10ae8:	bl	10724 <printf@plt>
   10aec:	ldr	r4, [pc, #124]	; 10b70 <main@@Base+0x140>
   10af0:	mov	r5, #0
   10af4:	add	r6, sp, #8
   10af8:	add	r4, pc, r4
   10afc:	mov	r0, r4
   10b00:	mov	r1, r6
   10b04:	bl	10718 <strcmp@plt>
   10b08:	cmp	r0, #0
   10b0c:	add	r6, r6, #208	; 0xd0
   10b10:	addeq	r5, r5, #1
   10b14:	subs	r7, r7, #1
   10b18:	bne	10afc <main@@Base+0xcc>
   10b1c:	b	10b44 <main@@Base+0x114>
   10b20:	ldr	r0, [pc, #80]	; 10b78 <main@@Base+0x148>
   10b24:	mov	r1, r7
   10b28:	add	r0, pc, r0
   10b2c:	bl	10724 <printf@plt>
   10b30:	ldr	r0, [pc, #68]	; 10b7c <main@@Base+0x14c>
   10b34:	mov	r1, #0
   10b38:	mov	r5, #0
   10b3c:	add	r0, pc, r0
   10b40:	bl	10724 <printf@plt>
   10b44:	ldr	r0, [pc, #40]	; 10b74 <main@@Base+0x144>
   10b48:	mov	r1, r5
   10b4c:	add	r0, pc, r0
   10b50:	bl	10724 <printf@plt>
   10b54:	mov	r0, #0
   10b58:	sub	sp, fp, #24
   10b5c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   10b60:	muleq	r0, r7, r1
   10b64:	andeq	r0, r0, r0, ror r1
   10b68:	andeq	r0, r0, pc, lsr #3
   10b6c:	andeq	r0, r0, r0, asr #2
   10b70:	andeq	r0, r0, r3, ror #2
   10b74:	andeq	r0, r0, lr, lsl r1
   10b78:	ldrdeq	r0, [r0], -ip
   10b7c:	andeq	r0, r0, r8, ror #1

00010b80 <__libc_csu_init@@Base>:
   10b80:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b84:	mov	r7, r0
   10b88:	ldr	r6, [pc, #72]	; 10bd8 <__libc_csu_init@@Base+0x58>
   10b8c:	ldr	r5, [pc, #72]	; 10bdc <__libc_csu_init@@Base+0x5c>
   10b90:	add	r6, pc, r6
   10b94:	add	r5, pc, r5
   10b98:	sub	r6, r6, r5
   10b9c:	mov	r8, r1
   10ba0:	mov	r9, r2
   10ba4:	bl	106f8 <strcmp@plt-0x20>
   10ba8:	asrs	r6, r6, #2
   10bac:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bb0:	mov	r4, #0
   10bb4:	add	r4, r4, #1
   10bb8:	ldr	r3, [r5], #4
   10bbc:	mov	r2, r9
   10bc0:	mov	r1, r8
   10bc4:	mov	r0, r7
   10bc8:	blx	r3
   10bcc:	cmp	r6, r4
   10bd0:	bne	10bb4 <__libc_csu_init@@Base+0x34>
   10bd4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10bd8:	andeq	r0, r1, r4, ror r3
   10bdc:	andeq	r0, r1, ip, ror #6

00010be0 <__libc_csu_fini@@Base>:
   10be0:	bx	lr

Disassembly of section .fini:

00010be4 <.fini>:
   10be4:	push	{r3, lr}
   10be8:	pop	{r3, pc}
