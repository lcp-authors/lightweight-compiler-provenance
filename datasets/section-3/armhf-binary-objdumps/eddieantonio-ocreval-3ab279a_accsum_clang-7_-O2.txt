
../repos/eddieantonio-ocreval-3ab279a/accsum/accsum:     file format elf32-littlearm


Disassembly of section .init:

000109c4 <.init>:
   109c4:	push	{r3, lr}
   109c8:	bl	10b94 <getc@plt+0x48>
   109cc:	pop	{r3, pc}

Disassembly of section .plt:

000109d0 <calloc@plt-0x14>:
   109d0:	push	{lr}		; (str lr, [sp, #-4]!)
   109d4:	ldr	lr, [pc, #4]	; 109e0 <calloc@plt-0x4>
   109d8:	add	lr, pc, lr
   109dc:	ldr	pc, [lr, #8]!
   109e0:	andeq	r4, r1, r0, lsr #12

000109e4 <calloc@plt>:
   109e4:	add	ip, pc, #0, 12
   109e8:	add	ip, ip, #20, 20	; 0x14000
   109ec:	ldr	pc, [ip, #1568]!	; 0x620

000109f0 <strcmp@plt>:
   109f0:	add	ip, pc, #0, 12
   109f4:	add	ip, ip, #20, 20	; 0x14000
   109f8:	ldr	pc, [ip, #1560]!	; 0x618

000109fc <fopen@plt>:
   109fc:	add	ip, pc, #0, 12
   10a00:	add	ip, ip, #20, 20	; 0x14000
   10a04:	ldr	pc, [ip, #1552]!	; 0x610

00010a08 <free@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #20, 20	; 0x14000
   10a10:	ldr	pc, [ip, #1544]!	; 0x608

00010a14 <utf8proc_get_property@plt>:
   10a14:	add	ip, pc, #0, 12
   10a18:	add	ip, ip, #20, 20	; 0x14000
   10a1c:	ldr	pc, [ip, #1536]!	; 0x600

00010a20 <fgets@plt>:
   10a20:	add	ip, pc, #0, 12
   10a24:	add	ip, ip, #20, 20	; 0x14000
   10a28:	ldr	pc, [ip, #1528]!	; 0x5f8

00010a2c <utf8proc_encode_char@plt>:
   10a2c:	add	ip, pc, #0, 12
   10a30:	add	ip, ip, #20, 20	; 0x14000
   10a34:	ldr	pc, [ip, #1520]!	; 0x5f0

00010a38 <strdup@plt>:
   10a38:	add	ip, pc, #0, 12
   10a3c:	add	ip, ip, #20, 20	; 0x14000
   10a40:	ldr	pc, [ip, #1512]!	; 0x5e8

00010a44 <rewind@plt>:
   10a44:	add	ip, pc, #0, 12
   10a48:	add	ip, ip, #20, 20	; 0x14000
   10a4c:	ldr	pc, [ip, #1504]!	; 0x5e0

00010a50 <unlink@plt>:
   10a50:	add	ip, pc, #0, 12
   10a54:	add	ip, ip, #20, 20	; 0x14000
   10a58:	ldr	pc, [ip, #1496]!	; 0x5d8

00010a5c <utf8proc_tolower@plt>:
   10a5c:	add	ip, pc, #0, 12
   10a60:	add	ip, ip, #20, 20	; 0x14000
   10a64:	ldr	pc, [ip, #1488]!	; 0x5d0

00010a68 <__xstat@plt>:
   10a68:	add	ip, pc, #0, 12
   10a6c:	add	ip, ip, #20, 20	; 0x14000
   10a70:	ldr	pc, [ip, #1480]!	; 0x5c8

00010a74 <fwrite@plt>:
   10a74:	add	ip, pc, #0, 12
   10a78:	add	ip, ip, #20, 20	; 0x14000
   10a7c:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a80 <fread@plt>:
   10a80:	add	ip, pc, #0, 12
   10a84:	add	ip, ip, #20, 20	; 0x14000
   10a88:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a8c <utf8proc_iterate@plt>:
   10a8c:	add	ip, pc, #0, 12
   10a90:	add	ip, ip, #20, 20	; 0x14000
   10a94:	ldr	pc, [ip, #1456]!	; 0x5b0

00010a98 <__libc_start_main@plt>:
   10a98:	add	ip, pc, #0, 12
   10a9c:	add	ip, ip, #20, 20	; 0x14000
   10aa0:	ldr	pc, [ip, #1448]!	; 0x5a8

00010aa4 <__sysv_signal@plt>:
   10aa4:	add	ip, pc, #0, 12
   10aa8:	add	ip, ip, #20, 20	; 0x14000
   10aac:	ldr	pc, [ip, #1440]!	; 0x5a0

00010ab0 <__gmon_start__@plt>:
   10ab0:	add	ip, pc, #0, 12
   10ab4:	add	ip, ip, #20, 20	; 0x14000
   10ab8:	ldr	pc, [ip, #1432]!	; 0x598

00010abc <getpid@plt>:
   10abc:	add	ip, pc, #0, 12
   10ac0:	add	ip, ip, #20, 20	; 0x14000
   10ac4:	ldr	pc, [ip, #1424]!	; 0x590

00010ac8 <exit@plt>:
   10ac8:	add	ip, pc, #0, 12
   10acc:	add	ip, ip, #20, 20	; 0x14000
   10ad0:	ldr	pc, [ip, #1416]!	; 0x588

00010ad4 <utf8proc_category@plt>:
   10ad4:	add	ip, pc, #0, 12
   10ad8:	add	ip, ip, #20, 20	; 0x14000
   10adc:	ldr	pc, [ip, #1408]!	; 0x580

00010ae0 <strlen@plt>:
   10ae0:	add	ip, pc, #0, 12
   10ae4:	add	ip, ip, #20, 20	; 0x14000
   10ae8:	ldr	pc, [ip, #1400]!	; 0x578

00010aec <fprintf@plt>:
   10aec:	add	ip, pc, #0, 12
   10af0:	add	ip, ip, #20, 20	; 0x14000
   10af4:	ldr	pc, [ip, #1392]!	; 0x570

00010af8 <__isoc99_sscanf@plt>:
   10af8:	add	ip, pc, #0, 12
   10afc:	add	ip, ip, #20, 20	; 0x14000
   10b00:	ldr	pc, [ip, #1384]!	; 0x568

00010b04 <fclose@plt>:
   10b04:	add	ip, pc, #0, 12
   10b08:	add	ip, ip, #20, 20	; 0x14000
   10b0c:	ldr	pc, [ip, #1376]!	; 0x560

00010b10 <sprintf@plt>:
   10b10:	add	ip, pc, #0, 12
   10b14:	add	ip, ip, #20, 20	; 0x14000
   10b18:	ldr	pc, [ip, #1368]!	; 0x558

00010b1c <utf8proc_errmsg@plt>:
   10b1c:	add	ip, pc, #0, 12
   10b20:	add	ip, ip, #20, 20	; 0x14000
   10b24:	ldr	pc, [ip, #1360]!	; 0x550

00010b28 <fputs@plt>:
   10b28:	add	ip, pc, #0, 12
   10b2c:	add	ip, ip, #20, 20	; 0x14000
   10b30:	ldr	pc, [ip, #1352]!	; 0x548

00010b34 <strncmp@plt>:
   10b34:	add	ip, pc, #0, 12
   10b38:	add	ip, ip, #20, 20	; 0x14000
   10b3c:	ldr	pc, [ip, #1344]!	; 0x540

00010b40 <abort@plt>:
   10b40:	add	ip, pc, #0, 12
   10b44:	add	ip, ip, #20, 20	; 0x14000
   10b48:	ldr	pc, [ip, #1336]!	; 0x538

00010b4c <getc@plt>:
   10b4c:	add	ip, pc, #0, 12
   10b50:	add	ip, ip, #20, 20	; 0x14000
   10b54:	ldr	pc, [ip, #1328]!	; 0x530

Disassembly of section .text:

00010b58 <error@@Base-0x1ce0>:
   10b58:	mov	fp, #0
   10b5c:	mov	lr, #0
   10b60:	pop	{r1}		; (ldr r1, [sp], #4)
   10b64:	mov	r2, sp
   10b68:	push	{r2}		; (str r2, [sp, #-4]!)
   10b6c:	push	{r0}		; (str r0, [sp, #-4]!)
   10b70:	ldr	ip, [pc, #16]	; 10b88 <getc@plt+0x3c>
   10b74:	push	{ip}		; (str ip, [sp, #-4]!)
   10b78:	ldr	r0, [pc, #12]	; 10b8c <getc@plt+0x40>
   10b7c:	ldr	r3, [pc, #12]	; 10b90 <getc@plt+0x44>
   10b80:	bl	10a98 <__libc_start_main@plt>
   10b84:	bl	10b40 <abort@plt>
   10b88:	andeq	r3, r1, ip, ror #7
   10b8c:	andeq	r0, r1, r8, asr #24
   10b90:	andeq	r3, r1, ip, lsl #7
   10b94:	ldr	r3, [pc, #20]	; 10bb0 <getc@plt+0x64>
   10b98:	ldr	r2, [pc, #20]	; 10bb4 <getc@plt+0x68>
   10b9c:	add	r3, pc, r3
   10ba0:	ldr	r2, [r3, r2]
   10ba4:	cmp	r2, #0
   10ba8:	bxeq	lr
   10bac:	b	10ab0 <__gmon_start__@plt>
   10bb0:	andeq	r4, r1, ip, asr r4
   10bb4:	muleq	r0, r8, r0
   10bb8:	ldr	r0, [pc, #24]	; 10bd8 <getc@plt+0x8c>
   10bbc:	ldr	r3, [pc, #24]	; 10bdc <getc@plt+0x90>
   10bc0:	cmp	r3, r0
   10bc4:	bxeq	lr
   10bc8:	ldr	r3, [pc, #16]	; 10be0 <getc@plt+0x94>
   10bcc:	cmp	r3, #0
   10bd0:	bxeq	lr
   10bd4:	bx	r3
   10bd8:	andeq	r5, r2, r4, asr #1
   10bdc:	andeq	r5, r2, r4, asr #1
   10be0:	andeq	r0, r0, r0
   10be4:	ldr	r0, [pc, #36]	; 10c10 <getc@plt+0xc4>
   10be8:	ldr	r1, [pc, #36]	; 10c14 <getc@plt+0xc8>
   10bec:	sub	r1, r1, r0
   10bf0:	asr	r1, r1, #2
   10bf4:	add	r1, r1, r1, lsr #31
   10bf8:	asrs	r1, r1, #1
   10bfc:	bxeq	lr
   10c00:	ldr	r3, [pc, #16]	; 10c18 <getc@plt+0xcc>
   10c04:	cmp	r3, #0
   10c08:	bxeq	lr
   10c0c:	bx	r3
   10c10:	andeq	r5, r2, r4, asr #1
   10c14:	andeq	r5, r2, r4, asr #1
   10c18:	andeq	r0, r0, r0
   10c1c:	push	{r4, lr}
   10c20:	ldr	r4, [pc, #24]	; 10c40 <getc@plt+0xf4>
   10c24:	ldrb	r3, [r4]
   10c28:	cmp	r3, #0
   10c2c:	popne	{r4, pc}
   10c30:	bl	10bb8 <getc@plt+0x6c>
   10c34:	mov	r3, #1
   10c38:	strb	r3, [r4]
   10c3c:	pop	{r4, pc}
   10c40:	andeq	r5, r2, r4, asr #1
   10c44:	b	10be4 <getc@plt+0x98>
   10c48:	push	{fp, lr}
   10c4c:	mov	fp, sp
   10c50:	sub	sp, sp, #8
   10c54:	str	r0, [sp, #4]
   10c58:	add	r0, sp, #4
   10c5c:	mov	r3, #0
   10c60:	mov	r4, r1
   10c64:	mov	r6, #0
   10c68:	ldr	r2, [pc, #84]	; 10cc4 <getc@plt+0x178>
   10c6c:	add	r2, pc, r2
   10c70:	bl	125b0 <getc@plt+0x1a64>
   10c74:	ldr	r0, [sp, #4]
   10c78:	cmp	r0, #2
   10c7c:	blt	10cb8 <getc@plt+0x16c>
   10c80:	ldr	r5, [pc, #64]	; 10cc8 <getc@plt+0x17c>
   10c84:	ldr	r5, [pc, r5]
   10c88:	ldr	r1, [r4, r6, lsl #2]
   10c8c:	mov	r0, r5
   10c90:	bl	10dcc <getc@plt+0x280>
   10c94:	ldr	r0, [sp, #4]
   10c98:	add	r6, r6, #1
   10c9c:	cmp	r6, r0
   10ca0:	blt	10c88 <getc@plt+0x13c>
   10ca4:	ldr	r0, [pc, #32]	; 10ccc <getc@plt+0x180>
   10ca8:	mov	r1, #0
   10cac:	ldr	r0, [pc, r0]
   10cb0:	bl	11528 <getc@plt+0x9dc>
   10cb4:	bl	127f4 <getc@plt+0x1ca8>
   10cb8:	ldr	r0, [pc, #16]	; 10cd0 <getc@plt+0x184>
   10cbc:	add	r0, pc, r0
   10cc0:	bl	12838 <error@@Base>
   10cc4:	andeq	r2, r0, r8, lsl #15
   10cc8:	andeq	r4, r1, r0, lsl #8
   10ccc:	ldrdeq	r4, [r1], -r8
   10cd0:	andeq	r2, r0, pc, ror #14
   10cd4:	andeq	r0, r0, r0
   10cd8:	push	{r4, r5, r6, r7, fp, lr}
   10cdc:	add	fp, sp, #16
   10ce0:	mov	r7, r0
   10ce4:	mov	r0, r1
   10ce8:	mov	r4, r3
   10cec:	mov	r5, r2
   10cf0:	mov	r6, r1
   10cf4:	bl	1204c <getc@plt+0x1500>
   10cf8:	add	r0, r7, r0, lsl #3
   10cfc:	ldr	r1, [r0, #68]	; 0x44
   10d00:	ldr	r2, [r0, #72]	; 0x48
   10d04:	add	r1, r1, r5
   10d08:	add	r2, r2, r4
   10d0c:	str	r1, [r0, #68]	; 0x44
   10d10:	str	r2, [r0, #72]	; 0x48
   10d14:	ldr	r0, [r7, #2116]	; 0x844
   10d18:	ldr	r1, [r7, #2120]	; 0x848
   10d1c:	add	r0, r0, r5
   10d20:	add	r1, r1, r4
   10d24:	str	r0, [r7, #2116]	; 0x844
   10d28:	str	r1, [r7, #2120]	; 0x848
   10d2c:	add	r0, r7, r6, lsl #3
   10d30:	movw	r1, #10180	; 0x27c4
   10d34:	ldr	r1, [r0, r1]!
   10d38:	add	r1, r1, r5
   10d3c:	str	r1, [r0]
   10d40:	ldr	r1, [r0, #4]
   10d44:	add	r1, r1, r4
   10d48:	str	r1, [r0, #4]
   10d4c:	pop	{r4, r5, r6, r7, fp, pc}
   10d50:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10d54:	add	fp, sp, #24
   10d58:	mov	r7, r1
   10d5c:	movw	r1, #2124	; 0x84c
   10d60:	mov	r8, r3
   10d64:	mov	r5, r2
   10d68:	add	r6, r0, r1
   10d6c:	mov	r1, r7
   10d70:	mov	r0, r6
   10d74:	bl	11dc0 <getc@plt+0x1274>
   10d78:	cmp	r0, #0
   10d7c:	beq	10d9c <getc@plt+0x250>
   10d80:	ldr	r1, [r0, #12]
   10d84:	ldr	r2, [r0, #16]
   10d88:	add	r1, r1, r5
   10d8c:	add	r2, r2, r8
   10d90:	str	r1, [r0, #12]
   10d94:	str	r2, [r0, #16]
   10d98:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   10d9c:	mov	r0, #1
   10da0:	mov	r1, #20
   10da4:	bl	12378 <getc@plt+0x182c>
   10da8:	mov	r4, r0
   10dac:	mov	r0, r7
   10db0:	bl	10a38 <strdup@plt>
   10db4:	add	r1, r4, #8
   10db8:	stm	r1, {r0, r5, r8}
   10dbc:	mov	r0, r6
   10dc0:	mov	r1, r4
   10dc4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   10dc8:	b	11e50 <getc@plt+0x1304>
   10dcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10dd0:	add	fp, sp, #28
   10dd4:	sub	sp, sp, #76	; 0x4c
   10dd8:	bfc	sp, #0, #4
   10ddc:	mov	r8, r1
   10de0:	ldr	r1, [pc, #1664]	; 11468 <getc@plt+0x91c>
   10de4:	mov	r4, r0
   10de8:	mov	r0, r8
   10dec:	add	r1, pc, r1
   10df0:	bl	12418 <getc@plt+0x18cc>
   10df4:	mov	r7, r0
   10df8:	ldr	r0, [pc, #1644]	; 1146c <getc@plt+0x920>
   10dfc:	mov	r1, #99	; 0x63
   10e00:	mov	r2, r7
   10e04:	add	r0, pc, r0
   10e08:	bl	10a20 <fgets@plt>
   10e0c:	cmp	r0, #0
   10e10:	beq	1144c <getc@plt+0x900>
   10e14:	ldr	r0, [pc, #1620]	; 11470 <getc@plt+0x924>
   10e18:	ldr	r1, [pc, #1620]	; 11474 <getc@plt+0x928>
   10e1c:	mov	r2, #40	; 0x28
   10e20:	add	r0, pc, r0
   10e24:	add	r1, pc, r1
   10e28:	bl	10b34 <strncmp@plt>
   10e2c:	cmp	r0, #0
   10e30:	bne	1144c <getc@plt+0x900>
   10e34:	ldr	r0, [pc, #1596]	; 11478 <getc@plt+0x92c>
   10e38:	mov	r1, #99	; 0x63
   10e3c:	mov	r2, r7
   10e40:	add	r0, pc, r0
   10e44:	bl	10a20 <fgets@plt>
   10e48:	cmp	r0, #0
   10e4c:	beq	1144c <getc@plt+0x900>
   10e50:	ldr	r0, [pc, #1572]	; 1147c <getc@plt+0x930>
   10e54:	ldr	r1, [pc, #1572]	; 11480 <getc@plt+0x934>
   10e58:	add	r0, pc, r0
   10e5c:	add	r1, pc, r1
   10e60:	bl	109f0 <strcmp@plt>
   10e64:	cmp	r0, #0
   10e68:	bne	1144c <getc@plt+0x900>
   10e6c:	ldr	r0, [pc, #1552]	; 11484 <getc@plt+0x938>
   10e70:	mov	r1, #99	; 0x63
   10e74:	mov	r2, r7
   10e78:	add	r0, pc, r0
   10e7c:	bl	10a20 <fgets@plt>
   10e80:	cmp	r0, #0
   10e84:	beq	1144c <getc@plt+0x900>
   10e88:	ldr	r0, [pc, #1528]	; 11488 <getc@plt+0x93c>
   10e8c:	ldr	r1, [pc, #1528]	; 1148c <getc@plt+0x940>
   10e90:	add	r2, sp, #44	; 0x2c
   10e94:	add	r0, pc, r0
   10e98:	add	r1, pc, r1
   10e9c:	bl	10af8 <__isoc99_sscanf@plt>
   10ea0:	cmp	r0, #1
   10ea4:	bne	1144c <getc@plt+0x900>
   10ea8:	ldr	r0, [r4]
   10eac:	ldr	r1, [sp, #44]	; 0x2c
   10eb0:	mov	r2, r7
   10eb4:	add	r0, r0, r1
   10eb8:	mov	r1, #99	; 0x63
   10ebc:	str	r0, [r4]
   10ec0:	ldr	r0, [pc, #1480]	; 11490 <getc@plt+0x944>
   10ec4:	add	r0, pc, r0
   10ec8:	bl	10a20 <fgets@plt>
   10ecc:	cmp	r0, #0
   10ed0:	beq	1144c <getc@plt+0x900>
   10ed4:	ldr	r0, [pc, #1464]	; 11494 <getc@plt+0x948>
   10ed8:	ldr	r1, [pc, #1464]	; 11498 <getc@plt+0x94c>
   10edc:	add	r2, sp, #40	; 0x28
   10ee0:	add	r0, pc, r0
   10ee4:	add	r1, pc, r1
   10ee8:	bl	10af8 <__isoc99_sscanf@plt>
   10eec:	cmp	r0, #1
   10ef0:	bne	1144c <getc@plt+0x900>
   10ef4:	ldr	r0, [r4, #4]
   10ef8:	ldr	r1, [sp, #40]	; 0x28
   10efc:	mov	r2, r7
   10f00:	add	r0, r0, r1
   10f04:	mov	r1, #99	; 0x63
   10f08:	str	r0, [r4, #4]
   10f0c:	ldr	r0, [pc, #1416]	; 1149c <getc@plt+0x950>
   10f10:	add	r0, pc, r0
   10f14:	bl	10a20 <fgets@plt>
   10f18:	cmp	r0, #0
   10f1c:	beq	1144c <getc@plt+0x900>
   10f20:	ldr	r0, [pc, #1400]	; 114a0 <getc@plt+0x954>
   10f24:	mov	r1, #99	; 0x63
   10f28:	mov	r2, r7
   10f2c:	add	r0, pc, r0
   10f30:	bl	10a20 <fgets@plt>
   10f34:	cmp	r0, #0
   10f38:	beq	1144c <getc@plt+0x900>
   10f3c:	ldr	r0, [pc, #1376]	; 114a4 <getc@plt+0x958>
   10f40:	mov	r1, #99	; 0x63
   10f44:	mov	r2, r7
   10f48:	add	r0, pc, r0
   10f4c:	bl	10a20 <fgets@plt>
   10f50:	cmp	r0, #0
   10f54:	beq	1144c <getc@plt+0x900>
   10f58:	ldr	r0, [pc, #1352]	; 114a8 <getc@plt+0x95c>
   10f5c:	ldr	r1, [pc, #1352]	; 114ac <getc@plt+0x960>
   10f60:	add	r2, sp, #36	; 0x24
   10f64:	add	r0, pc, r0
   10f68:	add	r1, pc, r1
   10f6c:	bl	10af8 <__isoc99_sscanf@plt>
   10f70:	cmp	r0, #1
   10f74:	bne	1144c <getc@plt+0x900>
   10f78:	ldr	r0, [r4, #8]
   10f7c:	ldr	r1, [sp, #36]	; 0x24
   10f80:	mov	r2, r7
   10f84:	add	r0, r0, r1
   10f88:	mov	r1, #99	; 0x63
   10f8c:	str	r0, [r4, #8]
   10f90:	ldr	r0, [pc, #1304]	; 114b0 <getc@plt+0x964>
   10f94:	add	r0, pc, r0
   10f98:	bl	10a20 <fgets@plt>
   10f9c:	cmp	r0, #0
   10fa0:	beq	1144c <getc@plt+0x900>
   10fa4:	ldr	r0, [pc, #1288]	; 114b4 <getc@plt+0x968>
   10fa8:	ldr	r1, [pc, #1288]	; 114b8 <getc@plt+0x96c>
   10fac:	add	r2, sp, #36	; 0x24
   10fb0:	add	r0, pc, r0
   10fb4:	add	r1, pc, r1
   10fb8:	bl	10af8 <__isoc99_sscanf@plt>
   10fbc:	cmp	r0, #1
   10fc0:	bne	1144c <getc@plt+0x900>
   10fc4:	ldr	r0, [r4, #12]
   10fc8:	ldr	r1, [sp, #36]	; 0x24
   10fcc:	mov	r2, r7
   10fd0:	add	r0, r0, r1
   10fd4:	mov	r1, #99	; 0x63
   10fd8:	str	r0, [r4, #12]
   10fdc:	ldr	r0, [pc, #1240]	; 114bc <getc@plt+0x970>
   10fe0:	add	r0, pc, r0
   10fe4:	bl	10a20 <fgets@plt>
   10fe8:	cmp	r0, #0
   10fec:	beq	1144c <getc@plt+0x900>
   10ff0:	ldr	r0, [pc, #1224]	; 114c0 <getc@plt+0x974>
   10ff4:	ldr	r1, [pc, #1224]	; 114c4 <getc@plt+0x978>
   10ff8:	add	r2, sp, #36	; 0x24
   10ffc:	add	r0, pc, r0
   11000:	add	r1, pc, r1
   11004:	bl	10af8 <__isoc99_sscanf@plt>
   11008:	cmp	r0, #1
   1100c:	bne	1144c <getc@plt+0x900>
   11010:	ldr	r0, [r4, #16]
   11014:	ldr	r1, [sp, #36]	; 0x24
   11018:	mov	r2, r7
   1101c:	add	r0, r0, r1
   11020:	mov	r1, #99	; 0x63
   11024:	str	r0, [r4, #16]
   11028:	ldr	r0, [pc, #1176]	; 114c8 <getc@plt+0x97c>
   1102c:	add	r0, pc, r0
   11030:	bl	10a20 <fgets@plt>
   11034:	cmp	r0, #0
   11038:	beq	1144c <getc@plt+0x900>
   1103c:	ldr	r0, [pc, #1160]	; 114cc <getc@plt+0x980>
   11040:	mov	r1, #99	; 0x63
   11044:	mov	r2, r7
   11048:	add	r0, pc, r0
   1104c:	bl	10a20 <fgets@plt>
   11050:	cmp	r0, #0
   11054:	beq	1144c <getc@plt+0x900>
   11058:	ldr	r0, [pc, #1136]	; 114d0 <getc@plt+0x984>
   1105c:	mov	r1, #99	; 0x63
   11060:	mov	r2, r7
   11064:	add	r0, pc, r0
   11068:	bl	10a20 <fgets@plt>
   1106c:	cmp	r0, #0
   11070:	beq	1144c <getc@plt+0x900>
   11074:	ldr	r0, [pc, #1112]	; 114d4 <getc@plt+0x988>
   11078:	mov	r1, #99	; 0x63
   1107c:	mov	r2, r7
   11080:	add	r0, pc, r0
   11084:	bl	10a20 <fgets@plt>
   11088:	cmp	r0, #0
   1108c:	beq	1144c <getc@plt+0x900>
   11090:	ldr	r0, [pc, #1088]	; 114d8 <getc@plt+0x98c>
   11094:	mov	r1, #99	; 0x63
   11098:	mov	r2, r7
   1109c:	add	r0, pc, r0
   110a0:	bl	10a20 <fgets@plt>
   110a4:	cmp	r0, #0
   110a8:	beq	1144c <getc@plt+0x900>
   110ac:	add	r5, sp, #48	; 0x30
   110b0:	orr	r9, r5, #12
   110b4:	orr	r6, r5, #8
   110b8:	orr	sl, r5, #4
   110bc:	mov	r2, r5
   110c0:	stm	sp, {r6, r9}
   110c4:	mov	r3, sl
   110c8:	ldr	r0, [pc, #1036]	; 114dc <getc@plt+0x990>
   110cc:	ldr	r1, [pc, #1036]	; 114e0 <getc@plt+0x994>
   110d0:	add	r0, pc, r0
   110d4:	add	r1, pc, r1
   110d8:	bl	10af8 <__isoc99_sscanf@plt>
   110dc:	cmp	r0, #4
   110e0:	bne	1144c <getc@plt+0x900>
   110e4:	add	r0, r4, #20
   110e8:	vld1.64	{d16-d17}, [r5 :128]
   110ec:	mov	r1, #99	; 0x63
   110f0:	mov	r2, r7
   110f4:	vld1.32	{d18-d19}, [r0]
   110f8:	vadd.i32	q8, q9, q8
   110fc:	vst1.32	{d16-d17}, [r0]
   11100:	ldr	r0, [pc, #988]	; 114e4 <getc@plt+0x998>
   11104:	add	r0, pc, r0
   11108:	bl	10a20 <fgets@plt>
   1110c:	cmp	r0, #0
   11110:	beq	1144c <getc@plt+0x900>
   11114:	stm	sp, {r6, r9}
   11118:	mov	r2, r5
   1111c:	mov	r3, sl
   11120:	ldr	r0, [pc, #960]	; 114e8 <getc@plt+0x99c>
   11124:	ldr	r1, [pc, #960]	; 114ec <getc@plt+0x9a0>
   11128:	add	r0, pc, r0
   1112c:	add	r1, pc, r1
   11130:	bl	10af8 <__isoc99_sscanf@plt>
   11134:	cmp	r0, #4
   11138:	bne	1144c <getc@plt+0x900>
   1113c:	add	r0, r4, #36	; 0x24
   11140:	vld1.64	{d16-d17}, [r5 :128]
   11144:	mov	r1, #99	; 0x63
   11148:	mov	r2, r7
   1114c:	vld1.32	{d18-d19}, [r0]
   11150:	vadd.i32	q8, q9, q8
   11154:	vst1.32	{d16-d17}, [r0]
   11158:	ldr	r0, [pc, #912]	; 114f0 <getc@plt+0x9a4>
   1115c:	add	r0, pc, r0
   11160:	bl	10a20 <fgets@plt>
   11164:	cmp	r0, #0
   11168:	beq	1144c <getc@plt+0x900>
   1116c:	stm	sp, {r6, r9}
   11170:	mov	r2, r5
   11174:	mov	r3, sl
   11178:	ldr	r0, [pc, #884]	; 114f4 <getc@plt+0x9a8>
   1117c:	ldr	r1, [pc, #884]	; 114f8 <getc@plt+0x9ac>
   11180:	add	r0, pc, r0
   11184:	add	r1, pc, r1
   11188:	bl	10af8 <__isoc99_sscanf@plt>
   1118c:	cmp	r0, #4
   11190:	bne	1144c <getc@plt+0x900>
   11194:	add	r0, r4, #52	; 0x34
   11198:	vld1.64	{d16-d17}, [r5 :128]
   1119c:	mov	r1, #99	; 0x63
   111a0:	mov	r2, r7
   111a4:	vld1.32	{d18-d19}, [r0]
   111a8:	vadd.i32	q8, q9, q8
   111ac:	vst1.32	{d16-d17}, [r0]
   111b0:	ldr	r6, [pc, #836]	; 114fc <getc@plt+0x9b0>
   111b4:	add	r6, pc, r6
   111b8:	mov	r0, r6
   111bc:	bl	10a20 <fgets@plt>
   111c0:	cmp	r0, #0
   111c4:	beq	1144c <getc@plt+0x900>
   111c8:	str	r4, [sp, #20]
   111cc:	mov	r0, r6
   111d0:	mov	r1, #99	; 0x63
   111d4:	mov	r2, r7
   111d8:	bl	10a20 <fgets@plt>
   111dc:	cmp	r0, #0
   111e0:	ldrbne	r0, [r6]
   111e4:	cmpne	r0, #10
   111e8:	bne	111cc <getc@plt+0x680>
   111ec:	ldr	r0, [sp, #40]	; 0x28
   111f0:	cmp	r0, #1
   111f4:	blt	11304 <getc@plt+0x7b8>
   111f8:	ldr	r0, [pc, #768]	; 11500 <getc@plt+0x9b4>
   111fc:	mov	r1, #99	; 0x63
   11200:	mov	r2, r7
   11204:	add	r0, pc, r0
   11208:	bl	10a20 <fgets@plt>
   1120c:	cmp	r0, #0
   11210:	beq	11304 <getc@plt+0x7b8>
   11214:	ldr	r4, [pc, #744]	; 11504 <getc@plt+0x9b8>
   11218:	mov	r1, #99	; 0x63
   1121c:	mov	r2, r7
   11220:	add	r4, pc, r4
   11224:	mov	r0, r4
   11228:	bl	10a20 <fgets@plt>
   1122c:	cmp	r0, #0
   11230:	beq	11304 <getc@plt+0x7b8>
   11234:	ldr	r1, [sp, #20]
   11238:	movw	r0, #2124	; 0x84c
   1123c:	add	r8, sp, #36	; 0x24
   11240:	add	r0, r1, r0
   11244:	str	r0, [sp, #28]
   11248:	add	r0, r4, #20
   1124c:	ldr	r9, [pc, #692]	; 11508 <getc@plt+0x9bc>
   11250:	str	r0, [sp, #24]
   11254:	ldr	r5, [sp, #24]
   11258:	add	r9, pc, r9
   1125c:	mov	r0, r4
   11260:	mov	r1, r9
   11264:	mov	r2, r8
   11268:	add	r3, sp, #48	; 0x30
   1126c:	bl	10af8 <__isoc99_sscanf@plt>
   11270:	cmp	r0, #2
   11274:	bne	11304 <getc@plt+0x7b8>
   11278:	ldr	r0, [sp, #28]
   1127c:	ldr	sl, [sp, #48]	; 0x30
   11280:	ldr	r6, [sp, #36]	; 0x24
   11284:	mov	r1, r5
   11288:	bl	11dc0 <getc@plt+0x1274>
   1128c:	cmp	r0, #0
   11290:	beq	112b0 <getc@plt+0x764>
   11294:	ldr	r1, [r0, #12]
   11298:	ldr	r2, [r0, #16]
   1129c:	add	r1, r1, r6
   112a0:	add	r2, r2, sl
   112a4:	str	r1, [r0, #12]
   112a8:	str	r2, [r0, #16]
   112ac:	b	112ec <getc@plt+0x7a0>
   112b0:	mov	r0, #1
   112b4:	mov	r1, #20
   112b8:	bl	12378 <getc@plt+0x182c>
   112bc:	mov	r4, r9
   112c0:	mov	r9, r0
   112c4:	mov	r0, r5
   112c8:	bl	10a38 <strdup@plt>
   112cc:	add	r1, r9, #8
   112d0:	stm	r1, {r0, r6, sl}
   112d4:	mov	r1, r9
   112d8:	mov	r9, r4
   112dc:	ldr	r0, [sp, #28]
   112e0:	ldr	r4, [pc, #548]	; 1150c <getc@plt+0x9c0>
   112e4:	add	r4, pc, r4
   112e8:	bl	11e50 <getc@plt+0x1304>
   112ec:	mov	r0, r4
   112f0:	mov	r1, #99	; 0x63
   112f4:	mov	r2, r7
   112f8:	bl	10a20 <fgets@plt>
   112fc:	cmp	r0, #0
   11300:	bne	1125c <getc@plt+0x710>
   11304:	ldr	r0, [sp, #44]	; 0x2c
   11308:	ldr	r4, [sp, #20]
   1130c:	cmp	r0, #1
   11310:	blt	1143c <getc@plt+0x8f0>
   11314:	ldr	r0, [pc, #500]	; 11510 <getc@plt+0x9c4>
   11318:	mov	r1, #99	; 0x63
   1131c:	mov	r2, r7
   11320:	add	r0, pc, r0
   11324:	bl	10a20 <fgets@plt>
   11328:	cmp	r0, #0
   1132c:	beq	1143c <getc@plt+0x8f0>
   11330:	ldr	r6, [pc, #476]	; 11514 <getc@plt+0x9c8>
   11334:	mov	r1, #99	; 0x63
   11338:	mov	r2, r7
   1133c:	add	r6, pc, r6
   11340:	mov	r0, r6
   11344:	bl	10a20 <fgets@plt>
   11348:	cmp	r0, #0
   1134c:	beq	1143c <getc@plt+0x8f0>
   11350:	add	r5, sp, #48	; 0x30
   11354:	add	r0, r6, #31
   11358:	str	r0, [sp, #28]
   1135c:	ldr	r1, [pc, #436]	; 11518 <getc@plt+0x9cc>
   11360:	mov	r0, r6
   11364:	add	r2, sp, #36	; 0x24
   11368:	mov	r3, r5
   1136c:	add	r1, pc, r1
   11370:	bl	10af8 <__isoc99_sscanf@plt>
   11374:	cmp	r0, #2
   11378:	bne	1143c <getc@plt+0x8f0>
   1137c:	ldrb	r0, [r6, #31]
   11380:	cmp	r0, #92	; 0x5c
   11384:	beq	1139c <getc@plt+0x850>
   11388:	cmp	r0, #125	; 0x7d
   1138c:	bne	113a8 <getc@plt+0x85c>
   11390:	ldrb	sl, [r6, #30]
   11394:	str	sl, [sp, #32]
   11398:	b	113c0 <getc@plt+0x874>
   1139c:	mov	sl, #10
   113a0:	str	sl, [sp, #32]
   113a4:	b	113c0 <getc@plt+0x874>
   113a8:	ldr	r0, [sp, #28]
   113ac:	ldr	r1, [pc, #360]	; 1151c <getc@plt+0x9d0>
   113b0:	add	r2, sp, #32
   113b4:	add	r1, pc, r1
   113b8:	bl	10af8 <__isoc99_sscanf@plt>
   113bc:	ldr	sl, [sp, #32]
   113c0:	ldr	r8, [sp, #48]	; 0x30
   113c4:	ldr	r9, [sp, #36]	; 0x24
   113c8:	mov	r0, sl
   113cc:	bl	1204c <getc@plt+0x1500>
   113d0:	add	r0, r4, r0, lsl #3
   113d4:	ldr	r1, [r0, #68]	; 0x44
   113d8:	ldr	r2, [r0, #72]	; 0x48
   113dc:	add	r1, r1, r9
   113e0:	add	r2, r2, r8
   113e4:	str	r1, [r0, #68]	; 0x44
   113e8:	str	r2, [r0, #72]	; 0x48
   113ec:	mov	r2, r7
   113f0:	ldr	r0, [r4, #2116]	; 0x844
   113f4:	ldr	r1, [r4, #2120]	; 0x848
   113f8:	add	r0, r0, r9
   113fc:	add	r1, r1, r8
   11400:	str	r0, [r4, #2116]	; 0x844
   11404:	str	r1, [r4, #2120]	; 0x848
   11408:	add	r0, r4, sl, lsl #3
   1140c:	movw	r1, #10180	; 0x27c4
   11410:	ldr	r1, [r0, r1]!
   11414:	add	r1, r1, r9
   11418:	str	r1, [r0]
   1141c:	ldr	r1, [r0, #4]
   11420:	add	r1, r1, r8
   11424:	str	r1, [r0, #4]
   11428:	mov	r0, r6
   1142c:	mov	r1, #99	; 0x63
   11430:	bl	10a20 <fgets@plt>
   11434:	cmp	r0, #0
   11438:	bne	1135c <getc@plt+0x810>
   1143c:	mov	r0, r7
   11440:	bl	124a0 <getc@plt+0x1954>
   11444:	sub	sp, fp, #28
   11448:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1144c:	ldr	r1, [pc, #204]	; 11520 <getc@plt+0x9d4>
   11450:	ldr	r0, [pc, #204]	; 11524 <getc@plt+0x9d8>
   11454:	cmp	r8, #0
   11458:	add	r1, pc, r1
   1145c:	add	r0, pc, r0
   11460:	movne	r1, r8
   11464:	bl	12888 <error@@Base+0x50>
   11468:	andeq	r2, r0, r5, asr pc
   1146c:			; <UNDEFINED> instruction: 0x000142b9
   11470:	muleq	r1, sp, r2
   11474:	andeq	r2, r0, lr, lsl r6
   11478:	andeq	r4, r1, sp, ror r2
   1147c:	andeq	r4, r1, r5, ror #4
   11480:	andeq	r2, r0, r4, lsr #29
   11484:	andeq	r4, r1, r5, asr #4
   11488:	andeq	r4, r1, r9, lsr #4
   1148c:	strdeq	r2, [r0], -lr
   11490:	strdeq	r4, [r1], -r9
   11494:	ldrdeq	r4, [r1], -sp
   11498:			; <UNDEFINED> instruction: 0x000026b2
   1149c:	andeq	r4, r1, sp, lsr #3
   114a0:	muleq	r1, r1, r1
   114a4:	andeq	r4, r1, r5, ror r1
   114a8:	andeq	r4, r1, r9, asr r1
   114ac:	andeq	r2, r0, lr, lsr #12
   114b0:	andeq	r4, r1, r9, lsr #2
   114b4:	andeq	r4, r1, sp, lsl #2
   114b8:	andeq	r2, r0, r2, ror #11
   114bc:	ldrdeq	r4, [r1], -sp
   114c0:	andeq	r4, r1, r1, asr #1
   114c4:	muleq	r0, r6, r5
   114c8:	muleq	r1, r1, r0
   114cc:	andeq	r4, r1, r5, ror r0
   114d0:	andeq	r4, r1, r9, asr r0
   114d4:	andeq	r4, r1, sp, lsr r0
   114d8:	andeq	r4, r1, r1, lsr #32
   114dc:	andeq	r3, r1, sp, ror #31
   114e0:			; <UNDEFINED> instruction: 0x000024b6
   114e4:			; <UNDEFINED> instruction: 0x00013fb9
   114e8:	muleq	r1, r5, pc	; <UNPREDICTABLE>
   114ec:	andeq	r2, r0, lr, asr r4
   114f0:	andeq	r3, r1, r1, ror #30
   114f4:	andeq	r3, r1, sp, lsr pc
   114f8:	andeq	r2, r0, r6, lsl #8
   114fc:	andeq	r3, r1, r9, lsl #30
   11500:			; <UNDEFINED> instruction: 0x00013eb9
   11504:	muleq	r1, sp, lr
   11508:	andeq	r2, r0, sl, lsr r3
   1150c:	ldrdeq	r3, [r1], -r9
   11510:	muleq	r1, sp, sp
   11514:	andeq	r3, r1, r1, lsl #27
   11518:	andeq	r2, r0, r6, lsr #4
   1151c:	strheq	r2, [r0], -r9
   11520:	andeq	r2, r0, fp, lsr #32
   11524:	andeq	r2, r0, r5, lsl r0
   11528:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1152c:	add	fp, sp, #28
   11530:	sub	sp, sp, #4
   11534:	vpush	{d8}
   11538:	sub	sp, sp, #24
   1153c:	mov	r2, r1
   11540:	ldr	r1, [pc, #1512]	; 11b30 <getc@plt+0xfe4>
   11544:	mov	sl, r0
   11548:	mov	r0, r2
   1154c:	add	r1, pc, r1
   11550:	bl	12418 <getc@plt+0x18cc>
   11554:	ldr	r1, [pc, #1496]	; 11b34 <getc@plt+0xfe8>
   11558:	ldr	r2, [pc, #1496]	; 11b38 <getc@plt+0xfec>
   1155c:	ldr	r3, [pc, #1496]	; 11b3c <getc@plt+0xff0>
   11560:	mov	r4, r0
   11564:	add	r1, pc, r1
   11568:	add	r2, pc, r2
   1156c:	add	r3, pc, r3
   11570:	bl	10aec <fprintf@plt>
   11574:	ldr	r2, [sl]
   11578:	ldr	r6, [pc, #1472]	; 11b40 <getc@plt+0xff4>
   1157c:	ldr	r3, [pc, #1472]	; 11b44 <getc@plt+0xff8>
   11580:	mov	r0, r4
   11584:	add	r6, pc, r6
   11588:	add	r3, pc, r3
   1158c:	mov	r1, r6
   11590:	bl	10aec <fprintf@plt>
   11594:	ldr	r2, [sl, #4]
   11598:	ldr	r3, [pc, #1448]	; 11b48 <getc@plt+0xffc>
   1159c:	mov	r0, r4
   115a0:	mov	r1, r6
   115a4:	add	r3, pc, r3
   115a8:	bl	10aec <fprintf@plt>
   115ac:	ldr	r0, [sl]
   115b0:	cmp	r0, #0
   115b4:	beq	115f4 <getc@plt+0xaa8>
   115b8:	ldr	r1, [sl, #4]
   115bc:	vldr	d16, [pc, #900]	; 11948 <getc@plt+0xdfc>
   115c0:	vmov	s2, r0
   115c4:	sub	r1, r0, r1
   115c8:	mov	r0, r4
   115cc:	vmov	s0, r1
   115d0:	vcvt.f64.s32	d17, s0
   115d4:	vcvt.f64.s32	d18, s2
   115d8:	ldr	r1, [pc, #1392]	; 11b50 <getc@plt+0x1004>
   115dc:	vmul.f64	d16, d17, d16
   115e0:	vdiv.f64	d16, d16, d18
   115e4:	vmov	r2, r3, d16
   115e8:	add	r1, pc, r1
   115ec:	bl	10aec <fprintf@plt>
   115f0:	b	1160c <getc@plt+0xac0>
   115f4:	ldr	r0, [pc, #1360]	; 11b4c <getc@plt+0x1000>
   115f8:	mov	r1, #8
   115fc:	mov	r2, #1
   11600:	mov	r3, r4
   11604:	add	r0, pc, r0
   11608:	bl	10a74 <fwrite@plt>
   1160c:	ldr	r1, [pc, #1344]	; 11b54 <getc@plt+0x1008>
   11610:	mov	r0, r4
   11614:	add	r1, pc, r1
   11618:	bl	10aec <fprintf@plt>
   1161c:	ldr	r2, [sl, #8]
   11620:	ldr	r6, [pc, #1328]	; 11b58 <getc@plt+0x100c>
   11624:	ldr	r3, [pc, #1328]	; 11b5c <getc@plt+0x1010>
   11628:	mov	r0, r4
   1162c:	add	r6, pc, r6
   11630:	add	r3, pc, r3
   11634:	mov	r1, r6
   11638:	bl	10aec <fprintf@plt>
   1163c:	ldr	r2, [sl, #12]
   11640:	ldr	r3, [pc, #1304]	; 11b60 <getc@plt+0x1014>
   11644:	mov	r0, r4
   11648:	mov	r1, r6
   1164c:	add	r3, pc, r3
   11650:	bl	10aec <fprintf@plt>
   11654:	ldr	r2, [sl, #16]
   11658:	ldr	r3, [pc, #1284]	; 11b64 <getc@plt+0x1018>
   1165c:	mov	r0, r4
   11660:	mov	r1, r6
   11664:	add	r3, pc, r3
   11668:	bl	10aec <fprintf@plt>
   1166c:	ldr	r0, [sl]
   11670:	cmp	r0, #0
   11674:	beq	116b8 <getc@plt+0xb6c>
   11678:	ldr	r1, [sl, #8]
   1167c:	ldr	r2, [sl, #12]
   11680:	vldr	d16, [pc, #704]	; 11948 <getc@plt+0xdfc>
   11684:	vmov	s2, r0
   11688:	mov	r0, r4
   1168c:	add	r1, r2, r1
   11690:	vmov	s0, r1
   11694:	vcvt.f64.s32	d17, s0
   11698:	vcvt.f64.s32	d18, s2
   1169c:	ldr	r1, [pc, #1224]	; 11b6c <getc@plt+0x1020>
   116a0:	vmul.f64	d16, d17, d16
   116a4:	vdiv.f64	d16, d16, d18
   116a8:	vmov	r2, r3, d16
   116ac:	add	r1, pc, r1
   116b0:	bl	10aec <fprintf@plt>
   116b4:	b	116d0 <getc@plt+0xb84>
   116b8:	ldr	r0, [pc, #1192]	; 11b68 <getc@plt+0x101c>
   116bc:	mov	r1, #8
   116c0:	mov	r2, #1
   116c4:	mov	r3, r4
   116c8:	add	r0, pc, r0
   116cc:	bl	10a74 <fwrite@plt>
   116d0:	ldr	r1, [pc, #1176]	; 11b70 <getc@plt+0x1024>
   116d4:	mov	r0, r4
   116d8:	add	r1, pc, r1
   116dc:	bl	10aec <fprintf@plt>
   116e0:	ldr	r0, [sl]
   116e4:	cmp	r0, #0
   116e8:	beq	11728 <getc@plt+0xbdc>
   116ec:	ldr	r1, [sl, #48]	; 0x30
   116f0:	vldr	d16, [pc, #592]	; 11948 <getc@plt+0xdfc>
   116f4:	vmov	s2, r0
   116f8:	sub	r1, r0, r1
   116fc:	mov	r0, r4
   11700:	vmov	s0, r1
   11704:	vcvt.f64.s32	d17, s0
   11708:	vcvt.f64.s32	d18, s2
   1170c:	ldr	r1, [pc, #1124]	; 11b78 <getc@plt+0x102c>
   11710:	vmul.f64	d16, d17, d16
   11714:	vdiv.f64	d16, d16, d18
   11718:	vmov	r2, r3, d16
   1171c:	add	r1, pc, r1
   11720:	bl	10aec <fprintf@plt>
   11724:	b	11740 <getc@plt+0xbf4>
   11728:	ldr	r0, [pc, #1092]	; 11b74 <getc@plt+0x1028>
   1172c:	mov	r1, #8
   11730:	mov	r2, #1
   11734:	mov	r3, r4
   11738:	add	r0, pc, r0
   1173c:	bl	10a74 <fwrite@plt>
   11740:	ldr	r1, [pc, #1076]	; 11b7c <getc@plt+0x1030>
   11744:	mov	r0, r4
   11748:	add	r1, pc, r1
   1174c:	bl	10aec <fprintf@plt>
   11750:	ldr	r0, [pc, #1064]	; 11b80 <getc@plt+0x1034>
   11754:	mov	r1, #37	; 0x25
   11758:	mov	r2, #1
   1175c:	mov	r3, r4
   11760:	add	r0, pc, r0
   11764:	bl	10a74 <fwrite@plt>
   11768:	ldr	r2, [sl, #20]
   1176c:	ldr	r3, [sl, #24]
   11770:	ldr	r0, [sl, #28]
   11774:	ldr	r1, [sl, #32]
   11778:	ldr	r7, [pc, #1028]	; 11b84 <getc@plt+0x1038>
   1177c:	add	r7, pc, r7
   11780:	stm	sp, {r0, r1, r7}
   11784:	mov	r0, r4
   11788:	ldr	r6, [pc, #1016]	; 11b88 <getc@plt+0x103c>
   1178c:	add	r6, pc, r6
   11790:	mov	r1, r6
   11794:	bl	10aec <fprintf@plt>
   11798:	ldr	r2, [sl, #36]	; 0x24
   1179c:	ldr	r3, [sl, #40]	; 0x28
   117a0:	ldr	r0, [sl, #44]	; 0x2c
   117a4:	ldr	r1, [sl, #48]	; 0x30
   117a8:	ldr	r7, [pc, #988]	; 11b8c <getc@plt+0x1040>
   117ac:	add	r7, pc, r7
   117b0:	stm	sp, {r0, r1, r7}
   117b4:	mov	r0, r4
   117b8:	mov	r1, r6
   117bc:	bl	10aec <fprintf@plt>
   117c0:	ldr	r2, [sl, #52]	; 0x34
   117c4:	ldr	r3, [sl, #56]	; 0x38
   117c8:	ldr	r0, [sl, #60]	; 0x3c
   117cc:	ldr	r1, [sl, #64]	; 0x40
   117d0:	ldr	r7, [pc, #952]	; 11b90 <getc@plt+0x1044>
   117d4:	add	r7, pc, r7
   117d8:	stm	sp, {r0, r1, r7}
   117dc:	mov	r0, r4
   117e0:	mov	r1, r6
   117e4:	bl	10aec <fprintf@plt>
   117e8:	ldr	r1, [pc, #932]	; 11b94 <getc@plt+0x1048>
   117ec:	mov	r0, r4
   117f0:	add	r1, pc, r1
   117f4:	bl	10aec <fprintf@plt>
   117f8:	ldr	r7, [pc, #920]	; 11b98 <getc@plt+0x104c>
   117fc:	vldr	d8, [pc, #804]	; 11b28 <getc@plt+0xfdc>
   11800:	mov	r6, #0
   11804:	add	r9, sp, #15
   11808:	add	r7, pc, r7
   1180c:	add	r5, sl, r6, lsl #3
   11810:	ldr	r0, [r5, #68]	; 0x44
   11814:	cmp	r0, #1
   11818:	blt	118e0 <getc@plt+0xd94>
   1181c:	mov	r0, r6
   11820:	bl	121d4 <getc@plt+0x1688>
   11824:	ldr	r2, [r5, #68]	; 0x44
   11828:	ldr	r3, [r5, #72]	; 0x48
   1182c:	mov	r8, r0
   11830:	mov	r0, r4
   11834:	mov	r1, r7
   11838:	bl	10aec <fprintf@plt>
   1183c:	ldr	r0, [r5, #68]	; 0x44
   11840:	cmp	r0, #0
   11844:	beq	11898 <getc@plt+0xd4c>
   11848:	ldr	r1, [r5, #72]	; 0x48
   1184c:	vmov	s2, r0
   11850:	sub	r1, r0, r1
   11854:	mov	r0, r4
   11858:	vmov	s0, r1
   1185c:	vcvt.f64.s32	d16, s0
   11860:	vcvt.f64.s32	d17, s2
   11864:	ldr	r1, [pc, #820]	; 11ba0 <getc@plt+0x1054>
   11868:	vmul.f64	d16, d16, d8
   1186c:	vdiv.f64	d16, d16, d17
   11870:	vmov	r2, r3, d16
   11874:	add	r1, pc, r1
   11878:	bl	10aec <fprintf@plt>
   1187c:	cmp	r8, #0
   11880:	beq	118b8 <getc@plt+0xd6c>
   11884:	ldr	r1, [pc, #792]	; 11ba4 <getc@plt+0x1058>
   11888:	mov	r0, r4
   1188c:	mov	r2, r8
   11890:	add	r1, pc, r1
   11894:	b	118dc <getc@plt+0xd90>
   11898:	ldr	r0, [pc, #764]	; 11b9c <getc@plt+0x1050>
   1189c:	mov	r1, #8
   118a0:	mov	r2, #1
   118a4:	mov	r3, r4
   118a8:	add	r0, pc, r0
   118ac:	bl	10a74 <fwrite@plt>
   118b0:	cmp	r8, #0
   118b4:	bne	11884 <getc@plt+0xd38>
   118b8:	mov	r0, #0
   118bc:	mov	r1, #0
   118c0:	mov	r2, r9
   118c4:	mov	r3, #1
   118c8:	bl	12e4c <error@@Base+0x614>
   118cc:	ldr	r1, [pc, #724]	; 11ba8 <getc@plt+0x105c>
   118d0:	mov	r0, r4
   118d4:	mov	r2, r9
   118d8:	add	r1, pc, r1
   118dc:	bl	10aec <fprintf@plt>
   118e0:	add	r6, r6, #1
   118e4:	cmp	r6, #256	; 0x100
   118e8:	bne	1180c <getc@plt+0xcc0>
   118ec:	ldr	r2, [sl, #2116]	; 0x844
   118f0:	ldr	r3, [sl, #2120]	; 0x848
   118f4:	ldr	r1, [pc, #688]	; 11bac <getc@plt+0x1060>
   118f8:	mov	r0, r4
   118fc:	add	r1, pc, r1
   11900:	bl	10aec <fprintf@plt>
   11904:	ldr	r0, [sl, #2116]	; 0x844
   11908:	cmp	r0, #0
   1190c:	beq	11950 <getc@plt+0xe04>
   11910:	ldr	r1, [sl, #2120]	; 0x848
   11914:	vmov	s2, r0
   11918:	sub	r1, r0, r1
   1191c:	mov	r0, r4
   11920:	vmov	s0, r1
   11924:	vcvt.f64.s32	d16, s0
   11928:	vcvt.f64.s32	d17, s2
   1192c:	ldr	r1, [pc, #640]	; 11bb4 <getc@plt+0x1068>
   11930:	vmul.f64	d16, d16, d8
   11934:	vdiv.f64	d16, d16, d17
   11938:	vmov	r2, r3, d16
   1193c:	add	r1, pc, r1
   11940:	bl	10aec <fprintf@plt>
   11944:	b	11968 <getc@plt+0xe1c>
   11948:	andeq	r0, r0, r0
   1194c:	subsmi	r0, r9, r0
   11950:	ldr	r0, [pc, #600]	; 11bb0 <getc@plt+0x1064>
   11954:	mov	r1, #8
   11958:	mov	r2, #1
   1195c:	mov	r3, r4
   11960:	add	r0, pc, r0
   11964:	bl	10a74 <fwrite@plt>
   11968:	ldr	r1, [pc, #584]	; 11bb8 <getc@plt+0x106c>
   1196c:	ldr	r2, [pc, #584]	; 11bbc <getc@plt+0x1070>
   11970:	mov	r0, r4
   11974:	add	r1, pc, r1
   11978:	add	r2, pc, r2
   1197c:	bl	10aec <fprintf@plt>
   11980:	ldr	r0, [sl, #4]
   11984:	cmp	r0, #1
   11988:	blt	11a18 <getc@plt+0xecc>
   1198c:	movw	r0, #2124	; 0x84c
   11990:	add	r0, sl, r0
   11994:	bl	11f70 <getc@plt+0x1424>
   11998:	mov	r0, #10176	; 0x27c0
   1199c:	mov	r7, sl
   119a0:	ldr	r0, [r7, r0]!
   119a4:	mov	r5, r7
   119a8:	ldr	r1, [r5, #-4]!
   119ac:	ldr	r2, [pc, #524]	; 11bc0 <getc@plt+0x1074>
   119b0:	add	r2, pc, r2
   119b4:	bl	11c14 <getc@plt+0x10c8>
   119b8:	ldr	r0, [pc, #516]	; 11bc4 <getc@plt+0x1078>
   119bc:	mov	r1, #39	; 0x27
   119c0:	mov	r2, #1
   119c4:	mov	r3, r4
   119c8:	add	r0, pc, r0
   119cc:	bl	10a74 <fwrite@plt>
   119d0:	ldr	r0, [r7]
   119d4:	cmp	r0, #1
   119d8:	blt	11a18 <getc@plt+0xecc>
   119dc:	ldr	r8, [pc, #484]	; 11bc8 <getc@plt+0x107c>
   119e0:	mov	r6, #0
   119e4:	add	r8, pc, r8
   119e8:	ldr	r0, [r5]
   119ec:	ldr	r0, [r0, r6, lsl #2]
   119f0:	add	r3, r0, #8
   119f4:	mov	r0, r4
   119f8:	ldm	r3, {r1, r2, r3}
   119fc:	str	r1, [sp]
   11a00:	mov	r1, r8
   11a04:	bl	10aec <fprintf@plt>
   11a08:	ldr	r0, [r7]
   11a0c:	add	r6, r6, #1
   11a10:	cmp	r6, r0
   11a14:	blt	119e8 <getc@plt+0xe9c>
   11a18:	ldr	r0, [sl]
   11a1c:	cmp	r0, #1
   11a20:	blt	11b0c <getc@plt+0xfc0>
   11a24:	ldr	r1, [pc, #416]	; 11bcc <getc@plt+0x1080>
   11a28:	mov	r0, r4
   11a2c:	add	r1, pc, r1
   11a30:	bl	10aec <fprintf@plt>
   11a34:	ldr	r6, [pc, #404]	; 11bd0 <getc@plt+0x1084>
   11a38:	movw	r0, #10180	; 0x27c4
   11a3c:	movw	r9, #65535	; 0xffff
   11a40:	mov	r5, #0
   11a44:	add	r7, sp, #15
   11a48:	add	r8, sl, r0
   11a4c:	movw	r0, #10184	; 0x27c8
   11a50:	movt	r9, #16
   11a54:	add	sl, sl, r0
   11a58:	add	r6, pc, r6
   11a5c:	ldr	r2, [r8, r5, lsl #3]
   11a60:	cmp	r2, #1
   11a64:	blt	11b00 <getc@plt+0xfb4>
   11a68:	ldr	r3, [sl, r5, lsl #3]
   11a6c:	ldr	r1, [pc, #352]	; 11bd4 <getc@plt+0x1088>
   11a70:	mov	r0, r4
   11a74:	add	r1, pc, r1
   11a78:	bl	10aec <fprintf@plt>
   11a7c:	ldr	r0, [r8, r5, lsl #3]
   11a80:	cmp	r0, #0
   11a84:	beq	11ac4 <getc@plt+0xf78>
   11a88:	lsl	r1, r5, #1
   11a8c:	vmov	s2, r0
   11a90:	ldr	r1, [sl, r1, lsl #2]
   11a94:	sub	r1, r0, r1
   11a98:	mov	r0, r4
   11a9c:	vmov	s0, r1
   11aa0:	vcvt.f64.s32	d16, s0
   11aa4:	vcvt.f64.s32	d17, s2
   11aa8:	ldr	r1, [pc, #300]	; 11bdc <getc@plt+0x1090>
   11aac:	vmul.f64	d16, d16, d8
   11ab0:	vdiv.f64	d16, d16, d17
   11ab4:	vmov	r2, r3, d16
   11ab8:	add	r1, pc, r1
   11abc:	bl	10aec <fprintf@plt>
   11ac0:	b	11adc <getc@plt+0xf90>
   11ac4:	ldr	r0, [pc, #268]	; 11bd8 <getc@plt+0x108c>
   11ac8:	mov	r1, #8
   11acc:	mov	r2, #1
   11ad0:	mov	r3, r4
   11ad4:	add	r0, pc, r0
   11ad8:	bl	10a74 <fwrite@plt>
   11adc:	mov	r0, #0
   11ae0:	mov	r1, r5
   11ae4:	mov	r2, r7
   11ae8:	mov	r3, #1
   11aec:	bl	12e4c <error@@Base+0x614>
   11af0:	mov	r0, r4
   11af4:	mov	r1, r6
   11af8:	mov	r2, r7
   11afc:	bl	10aec <fprintf@plt>
   11b00:	add	r5, r5, #1
   11b04:	cmp	r5, r9
   11b08:	bne	11a5c <getc@plt+0xf10>
   11b0c:	mov	r0, r4
   11b10:	bl	124a0 <getc@plt+0x1954>
   11b14:	sub	sp, fp, #40	; 0x28
   11b18:	vpop	{d8}
   11b1c:	add	sp, sp, #4
   11b20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11b24:	nop	{0}
   11b28:	andeq	r0, r0, r0
   11b2c:	subsmi	r0, r9, r0
   11b30:	andeq	r2, r0, sl, lsl #5
   11b34:	andeq	r1, r0, r5, lsr #30
   11b38:	ldrdeq	r1, [r0], -sl
   11b3c:	muleq	r0, r4, r7
   11b40:	andeq	r2, r0, r4, lsr r0
   11b44:	andeq	r2, r0, r0, asr #2
   11b48:	andeq	r1, r0, sl, ror #29
   11b4c:	muleq	r0, r6, pc	; <UNPREDICTABLE>
   11b50:			; <UNDEFINED> instruction: 0x00001fbb
   11b54:	andeq	r1, r0, r1, lsl #29
   11b58:	andeq	r1, r0, ip, lsl #31
   11b5c:	andeq	r1, r0, r4, ror lr
   11b60:	andeq	r1, r0, sl, ror #28
   11b64:	andeq	r1, r0, r2, ror #28
   11b68:	ldrdeq	r1, [r0], -r2
   11b6c:	strdeq	r1, [r0], -r7
   11b70:	strdeq	r1, [r0], -sl
   11b74:	andeq	r1, r0, r2, ror #28
   11b78:	andeq	r1, r0, r7, lsl #29
   11b7c:	andeq	r1, r0, r1, lsr #27
   11b80:	andeq	r1, r0, r8, lsr #27
   11b84:			; <UNDEFINED> instruction: 0x00001db2
   11b88:	andeq	r1, r0, sp, lsl lr
   11b8c:	andeq	r1, r0, r9, lsl #27
   11b90:	andeq	r1, r0, sl, ror #26
   11b94:	andeq	r1, r0, r4, asr sp
   11b98:			; <UNDEFINED> instruction: 0x00001dbb
   11b9c:	strdeq	r1, [r0], -r2
   11ba0:	andeq	r1, r0, pc, lsr #26
   11ba4:	andeq	r1, r0, ip, lsr #26
   11ba8:	strdeq	r1, [r0], -r6
   11bac:	andeq	r1, r0, r7, asr #25
   11bb0:	andeq	r1, r0, sl, lsr ip
   11bb4:	andeq	r1, r0, r7, ror #24
   11bb8:	andeq	r1, r0, r8, asr #24
   11bbc:	andeq	r1, r0, r6, asr #23
   11bc0:	andeq	r0, r0, r8, lsr #4
   11bc4:	muleq	r0, sl, fp
   11bc8:	strdeq	r1, [r0], -r3
   11bcc:	andeq	r1, r0, r8, lsl fp
   11bd0:	andeq	r1, r0, r6, ror fp
   11bd4:	andeq	r1, r0, pc, asr #22
   11bd8:	andeq	r1, r0, r6, asr #21
   11bdc:	andeq	r1, r0, fp, ror #21
   11be0:	ldr	r2, [r1, #12]
   11be4:	ldr	r3, [r0, #12]
   11be8:	cmp	r2, r3
   11bec:	bne	11c0c <getc@plt+0x10c0>
   11bf0:	ldr	r2, [r1, #16]
   11bf4:	ldr	r3, [r0, #16]
   11bf8:	cmp	r2, r3
   11bfc:	bne	11c0c <getc@plt+0x10c0>
   11c00:	ldr	r1, [r1, #8]
   11c04:	ldr	r0, [r0, #8]
   11c08:	b	1239c <getc@plt+0x1850>
   11c0c:	sub	r0, r2, r3
   11c10:	bx	lr
   11c14:	cmp	r0, #2
   11c18:	bxlt	lr
   11c1c:	ldr	r3, [pc, #28]	; 11c40 <getc@plt+0x10f4>
   11c20:	add	r3, pc, r3
   11c24:	str	r2, [r3]
   11c28:	ldr	r2, [pc, #20]	; 11c44 <getc@plt+0x10f8>
   11c2c:	add	r2, pc, r2
   11c30:	str	r1, [r2]
   11c34:	sub	r1, r0, #1
   11c38:	mov	r0, #0
   11c3c:	b	11c48 <getc@plt+0x10fc>
   11c40:	andeq	r3, r1, r8, lsl #10
   11c44:	strdeq	r3, [r1], -r8
   11c48:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   11c4c:	add	fp, sp, #24
   11c50:	mov	r8, r1
   11c54:	mov	r5, r0
   11c58:	b	11c7c <getc@plt+0x1130>
   11c5c:	sub	r1, r4, #1
   11c60:	str	r6, [r0, r4, lsl #2]
   11c64:	cmp	r1, r5
   11c68:	movgt	r0, r5
   11c6c:	blgt	11c48 <getc@plt+0x10fc>
   11c70:	add	r5, r7, #1
   11c74:	cmp	r5, r8
   11c78:	popge	{r4, r5, r6, r7, r8, sl, fp, pc}
   11c7c:	ldr	r0, [pc, #220]	; 11d60 <getc@plt+0x1214>
   11c80:	cmp	r5, r8
   11c84:	mov	r4, r8
   11c88:	mov	r7, r5
   11c8c:	ldr	r0, [pc, r0]
   11c90:	ldr	r6, [r0, r5, lsl #2]
   11c94:	bge	11c5c <getc@plt+0x1110>
   11c98:	mov	r7, r5
   11c9c:	mov	r4, r8
   11ca0:	cmp	r7, r4
   11ca4:	blt	11cb8 <getc@plt+0x116c>
   11ca8:	b	11cdc <getc@plt+0x1190>
   11cac:	sub	r4, r4, #1
   11cb0:	cmp	r7, r4
   11cb4:	bge	11cdc <getc@plt+0x1190>
   11cb8:	ldr	r0, [pc, #164]	; 11d64 <getc@plt+0x1218>
   11cbc:	ldr	r0, [pc, r0]
   11cc0:	ldr	r1, [r0, r4, lsl #2]
   11cc4:	ldr	r2, [pc, #156]	; 11d68 <getc@plt+0x121c>
   11cc8:	mov	r0, r6
   11ccc:	ldr	r2, [pc, r2]
   11cd0:	blx	r2
   11cd4:	cmn	r0, #1
   11cd8:	ble	11cac <getc@plt+0x1160>
   11cdc:	cmp	r7, r4
   11ce0:	beq	11cf8 <getc@plt+0x11ac>
   11ce4:	ldr	r0, [pc, #128]	; 11d6c <getc@plt+0x1220>
   11ce8:	ldr	r0, [pc, r0]
   11cec:	ldr	r1, [r0, r4, lsl #2]
   11cf0:	str	r1, [r0, r7, lsl #2]
   11cf4:	add	r7, r7, #1
   11cf8:	cmp	r7, r4
   11cfc:	bge	11d24 <getc@plt+0x11d8>
   11d00:	ldr	r0, [pc, #104]	; 11d70 <getc@plt+0x1224>
   11d04:	ldr	r0, [pc, r0]
   11d08:	ldr	r1, [r0, r7, lsl #2]
   11d0c:	ldr	r2, [pc, #96]	; 11d74 <getc@plt+0x1228>
   11d10:	mov	r0, r6
   11d14:	ldr	r2, [pc, r2]
   11d18:	blx	r2
   11d1c:	cmp	r0, #1
   11d20:	bge	11cf4 <getc@plt+0x11a8>
   11d24:	cmp	r7, r4
   11d28:	bne	11d38 <getc@plt+0x11ec>
   11d2c:	cmp	r7, r4
   11d30:	blt	11cb0 <getc@plt+0x1164>
   11d34:	b	11d54 <getc@plt+0x1208>
   11d38:	ldr	r0, [pc, #56]	; 11d78 <getc@plt+0x122c>
   11d3c:	ldr	r0, [pc, r0]
   11d40:	ldr	r1, [r0, r7, lsl #2]
   11d44:	str	r1, [r0, r4, lsl #2]
   11d48:	sub	r4, r4, #1
   11d4c:	cmp	r7, r4
   11d50:	blt	11cb0 <getc@plt+0x1164>
   11d54:	ldr	r0, [pc, #32]	; 11d7c <getc@plt+0x1230>
   11d58:	ldr	r0, [pc, r0]
   11d5c:	b	11c5c <getc@plt+0x1110>
   11d60:	muleq	r1, r8, r4
   11d64:	andeq	r3, r1, r8, ror #8
   11d68:	andeq	r3, r1, ip, asr r4
   11d6c:	andeq	r3, r1, ip, lsr r4
   11d70:	andeq	r3, r1, r0, lsr #8
   11d74:	andeq	r3, r1, r4, lsl r4
   11d78:	andeq	r3, r1, r8, ror #7
   11d7c:	andeq	r3, r1, ip, asr #7
   11d80:	push	{r4, r5, r6, sl, fp, lr}
   11d84:	add	fp, sp, #16
   11d88:	mov	r4, r0
   11d8c:	movw	r6, #503	; 0x1f7
   11d90:	mov	r5, r0
   11d94:	mov	r0, r5
   11d98:	bl	130ec <error@@Base+0x8b4>
   11d9c:	subs	r6, r6, #1
   11da0:	add	r5, r5, #16
   11da4:	bne	11d94 <getc@plt+0x1248>
   11da8:	movw	r0, #8052	; 0x1f74
   11dac:	mov	r1, #0
   11db0:	str	r1, [r4, r0]
   11db4:	movw	r0, #8048	; 0x1f70
   11db8:	str	r1, [r4, r0]
   11dbc:	pop	{r4, r5, r6, sl, fp, pc}
   11dc0:	push	{r4, r5, r6, sl, fp, lr}
   11dc4:	add	fp, sp, #16
   11dc8:	mov	r5, r1
   11dcc:	ldrb	r1, [r1]
   11dd0:	mov	r4, #0
   11dd4:	mov	r2, #0
   11dd8:	cmp	r1, #0
   11ddc:	beq	11e10 <getc@plt+0x12c4>
   11de0:	add	r3, r5, #1
   11de4:	mov	r2, #0
   11de8:	uxtab	r2, r2, r1
   11dec:	ldrb	r1, [r3], #1
   11df0:	cmp	r1, #0
   11df4:	bne	11de8 <getc@plt+0x129c>
   11df8:	movw	r1, #20065	; 0x4e61
   11dfc:	movt	r1, #33354	; 0x824a
   11e00:	umull	r1, r3, r2, r1
   11e04:	lsr	r1, r3, #8
   11e08:	movw	r3, #503	; 0x1f7
   11e0c:	mls	r2, r1, r3, r2
   11e10:	ldr	r6, [r0, r2, lsl #4]
   11e14:	cmp	r6, #0
   11e18:	bne	11e30 <getc@plt+0x12e4>
   11e1c:	mov	r0, r4
   11e20:	pop	{r4, r5, r6, sl, fp, pc}
   11e24:	ldr	r6, [r6, #4]
   11e28:	cmp	r6, #0
   11e2c:	beq	11e1c <getc@plt+0x12d0>
   11e30:	ldr	r1, [r6, #8]
   11e34:	mov	r0, r5
   11e38:	bl	109f0 <strcmp@plt>
   11e3c:	cmp	r0, #0
   11e40:	bne	11e24 <getc@plt+0x12d8>
   11e44:	mov	r4, r6
   11e48:	mov	r0, r4
   11e4c:	pop	{r4, r5, r6, sl, fp, pc}
   11e50:	push	{r4, r5, fp, lr}
   11e54:	add	fp, sp, #8
   11e58:	mov	r4, r0
   11e5c:	ldr	r0, [r1, #8]
   11e60:	ldrb	r2, [r0]
   11e64:	cmp	r2, #0
   11e68:	beq	11ea0 <getc@plt+0x1354>
   11e6c:	add	r3, r0, #1
   11e70:	mov	r0, #0
   11e74:	uxtab	r0, r0, r2
   11e78:	ldrb	r2, [r3], #1
   11e7c:	cmp	r2, #0
   11e80:	bne	11e74 <getc@plt+0x1328>
   11e84:	movw	r2, #20065	; 0x4e61
   11e88:	movt	r2, #33354	; 0x824a
   11e8c:	umull	r2, r3, r0, r2
   11e90:	lsr	r2, r3, #8
   11e94:	movw	r3, #503	; 0x1f7
   11e98:	mls	r0, r2, r3, r0
   11e9c:	b	11ea4 <getc@plt+0x1358>
   11ea0:	mov	r0, #0
   11ea4:	add	r0, r4, r0, lsl #4
   11ea8:	bl	130f8 <error@@Base+0x8c0>
   11eac:	movw	r0, #8048	; 0x1f70
   11eb0:	mov	r5, r4
   11eb4:	ldr	r0, [r5, r0]!
   11eb8:	cmp	r0, #0
   11ebc:	beq	11ecc <getc@plt+0x1380>
   11ec0:	bl	10a08 <free@plt>
   11ec4:	mov	r0, #0
   11ec8:	str	r0, [r5]
   11ecc:	movw	r0, #8052	; 0x1f74
   11ed0:	ldr	r0, [r4, r0]!
   11ed4:	add	r0, r0, #1
   11ed8:	str	r0, [r4]
   11edc:	pop	{r4, r5, fp, pc}
   11ee0:	push	{r4, r5, fp, lr}
   11ee4:	add	fp, sp, #8
   11ee8:	mov	r4, r0
   11eec:	ldr	r0, [r1, #8]
   11ef0:	ldrb	r2, [r0]
   11ef4:	cmp	r2, #0
   11ef8:	beq	11f30 <getc@plt+0x13e4>
   11efc:	add	r3, r0, #1
   11f00:	mov	r0, #0
   11f04:	uxtab	r0, r0, r2
   11f08:	ldrb	r2, [r3], #1
   11f0c:	cmp	r2, #0
   11f10:	bne	11f04 <getc@plt+0x13b8>
   11f14:	movw	r2, #20065	; 0x4e61
   11f18:	movt	r2, #33354	; 0x824a
   11f1c:	umull	r2, r3, r0, r2
   11f20:	lsr	r2, r3, #8
   11f24:	movw	r3, #503	; 0x1f7
   11f28:	mls	r0, r2, r3, r0
   11f2c:	b	11f34 <getc@plt+0x13e8>
   11f30:	mov	r0, #0
   11f34:	add	r0, r4, r0, lsl #4
   11f38:	bl	13240 <error@@Base+0xa08>
   11f3c:	movw	r0, #8048	; 0x1f70
   11f40:	mov	r5, r4
   11f44:	ldr	r0, [r5, r0]!
   11f48:	cmp	r0, #0
   11f4c:	beq	11f5c <getc@plt+0x1410>
   11f50:	bl	10a08 <free@plt>
   11f54:	mov	r0, #0
   11f58:	str	r0, [r5]
   11f5c:	movw	r0, #8052	; 0x1f74
   11f60:	ldr	r0, [r4, r0]!
   11f64:	sub	r0, r0, #1
   11f68:	str	r0, [r4]
   11f6c:	pop	{r4, r5, fp, pc}
   11f70:	push	{r4, r5, fp, lr}
   11f74:	add	fp, sp, #8
   11f78:	mov	r4, r0
   11f7c:	movw	r0, #8048	; 0x1f70
   11f80:	mov	r5, r4
   11f84:	ldr	r0, [r5, r0]!
   11f88:	cmp	r0, #0
   11f8c:	bne	11fe8 <getc@plt+0x149c>
   11f90:	movw	r0, #8052	; 0x1f74
   11f94:	ldr	r0, [r4, r0]
   11f98:	cmp	r0, #0
   11f9c:	popeq	{r4, r5, fp, pc}
   11fa0:	mov	r1, #4
   11fa4:	bl	12378 <getc@plt+0x182c>
   11fa8:	str	r0, [r5]
   11fac:	mov	r0, #0
   11fb0:	movw	ip, #503	; 0x1f7
   11fb4:	mov	r2, #0
   11fb8:	ldr	r3, [r4, r2, lsl #4]
   11fbc:	cmp	r3, #0
   11fc0:	beq	11fdc <getc@plt+0x1490>
   11fc4:	ldr	r1, [r5]
   11fc8:	str	r3, [r1, r0, lsl #2]
   11fcc:	add	r0, r0, #1
   11fd0:	ldr	r3, [r3, #4]
   11fd4:	cmp	r3, #0
   11fd8:	bne	11fc4 <getc@plt+0x1478>
   11fdc:	add	r2, r2, #1
   11fe0:	cmp	r2, ip
   11fe4:	bne	11fb8 <getc@plt+0x146c>
   11fe8:	pop	{r4, r5, fp, pc}
   11fec:	push	{r4, r5, r6, r7, fp, lr}
   11ff0:	add	fp, sp, #16
   11ff4:	mov	r5, r1
   11ff8:	mov	r4, r0
   11ffc:	movw	r7, #503	; 0x1f7
   12000:	mov	r6, r0
   12004:	mov	r0, r6
   12008:	mov	r1, r5
   1200c:	bl	1330c <error@@Base+0xad4>
   12010:	subs	r7, r7, #1
   12014:	add	r6, r6, #16
   12018:	bne	12004 <getc@plt+0x14b8>
   1201c:	movw	r0, #8048	; 0x1f70
   12020:	mov	r5, r4
   12024:	ldr	r0, [r5, r0]!
   12028:	cmp	r0, #0
   1202c:	beq	1203c <getc@plt+0x14f0>
   12030:	bl	10a08 <free@plt>
   12034:	mov	r0, #0
   12038:	str	r0, [r5]
   1203c:	movw	r0, #8052	; 0x1f74
   12040:	mov	r1, #0
   12044:	str	r1, [r4, r0]
   12048:	pop	{r4, r5, r6, r7, fp, pc}
   1204c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12050:	add	fp, sp, #28
   12054:	push	{r0}		; (str r0, [sp, #-4]!)
   12058:	ldr	r0, [pc, #332]	; 121ac <getc@plt+0x1660>
   1205c:	add	r0, pc, r0
   12060:	ldrh	r0, [r0]
   12064:	cmp	r0, #0
   12068:	bne	12188 <getc@plt+0x163c>
   1206c:	ldr	r3, [pc, #316]	; 121b0 <getc@plt+0x1664>
   12070:	ldr	r6, [pc, #316]	; 121b4 <getc@plt+0x1668>
   12074:	mov	r4, #0
   12078:	mov	r7, #0
   1207c:	mov	r8, #0
   12080:	add	r3, pc, r3
   12084:	add	r6, pc, r6
   12088:	sxth	sl, r7
   1208c:	cmp	sl, #1
   12090:	blt	12100 <getc@plt+0x15b4>
   12094:	ldr	r1, [pc, #284]	; 121b8 <getc@plt+0x166c>
   12098:	add	r0, r8, r8, lsl #1
   1209c:	add	r0, r3, r0, lsl #2
   120a0:	ldr	r5, [r0, #8]
   120a4:	ldr	r1, [pc, r1]
   120a8:	mov	r0, r5
   120ac:	bl	109f0 <strcmp@plt>
   120b0:	cmp	r0, #0
   120b4:	mov	r0, r4
   120b8:	mov	r9, #0
   120bc:	beq	12108 <getc@plt+0x15bc>
   120c0:	ldr	r7, [pc, #244]	; 121bc <getc@plt+0x1670>
   120c4:	sxth	sl, r4
   120c8:	mov	r1, #1
   120cc:	add	r7, pc, r7
   120d0:	mov	r9, r1
   120d4:	cmp	r1, sl
   120d8:	bge	120f4 <getc@plt+0x15a8>
   120dc:	ldr	r1, [r7, r9, lsl #2]
   120e0:	mov	r0, r5
   120e4:	bl	109f0 <strcmp@plt>
   120e8:	add	r1, r9, #1
   120ec:	cmp	r0, #0
   120f0:	bne	120d0 <getc@plt+0x1584>
   120f4:	mov	r0, r4
   120f8:	mov	r7, r4
   120fc:	b	12108 <getc@plt+0x15bc>
   12100:	mov	r0, r7
   12104:	mov	r9, #0
   12108:	ldr	r3, [pc, #176]	; 121c0 <getc@plt+0x1674>
   1210c:	cmp	r9, sl
   12110:	add	r3, pc, r3
   12114:	bne	12150 <getc@plt+0x1604>
   12118:	uxth	r0, r7
   1211c:	cmp	r0, #256	; 0x100
   12120:	beq	121a0 <getc@plt+0x1654>
   12124:	ldr	r0, [pc, #152]	; 121c4 <getc@plt+0x1678>
   12128:	add	r4, r7, #1
   1212c:	add	r0, pc, r0
   12130:	strh	r4, [r0]
   12134:	add	r0, r8, r8, lsl #1
   12138:	add	r0, r3, r0, lsl #2
   1213c:	ldr	r1, [pc, #132]	; 121c8 <getc@plt+0x167c>
   12140:	ldr	r0, [r0, #8]
   12144:	add	r1, pc, r1
   12148:	str	r0, [r1, r9, lsl #2]
   1214c:	mov	r0, r4
   12150:	add	r1, r8, r8, lsl #1
   12154:	mov	r2, r3
   12158:	ldr	r1, [r2, r1, lsl #2]!
   1215c:	ldr	r2, [r2, #4]
   12160:	cmp	r1, r2
   12164:	bhi	12178 <getc@plt+0x162c>
   12168:	strb	r9, [r6, r1]
   1216c:	add	r1, r1, #1
   12170:	cmp	r1, r2
   12174:	bls	12168 <getc@plt+0x161c>
   12178:	add	r8, r8, #1
   1217c:	mov	r7, r0
   12180:	cmp	r8, #91	; 0x5b
   12184:	bcc	12088 <getc@plt+0x153c>
   12188:	ldr	r0, [pc, #60]	; 121cc <getc@plt+0x1680>
   1218c:	ldr	r1, [sp]
   12190:	add	r0, pc, r0
   12194:	ldrb	r0, [r0, r1]
   12198:	sub	sp, fp, #28
   1219c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121a0:	ldr	r0, [pc, #40]	; 121d0 <getc@plt+0x1684>
   121a4:	add	r0, pc, r0
   121a8:	bl	12838 <error@@Base>
   121ac:	ldrdeq	r3, [r1], -r0
   121b0:	andeq	r2, r1, r4, lsr sl
   121b4:	andeq	r3, r1, sl, lsr #1
   121b8:	andseq	r3, r2, ip, lsl #1
   121bc:	andseq	r3, r2, r4, rrx
   121c0:	andeq	r2, r1, r4, lsr #19
   121c4:	andeq	r3, r1, r0
   121c8:	andseq	r2, r2, ip, ror #31
   121cc:	muleq	r1, lr, pc	; <UNPREDICTABLE>
   121d0:	andeq	r1, r0, sl, asr r4
   121d4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121d8:	add	fp, sp, #28
   121dc:	push	{r0}		; (str r0, [sp, #-4]!)
   121e0:	ldr	r0, [pc, #356]	; 1234c <getc@plt+0x1800>
   121e4:	add	r0, pc, r0
   121e8:	ldrh	r6, [r0]
   121ec:	cmp	r6, #0
   121f0:	bne	12310 <getc@plt+0x17c4>
   121f4:	ldr	r3, [pc, #340]	; 12350 <getc@plt+0x1804>
   121f8:	ldr	r4, [pc, #340]	; 12354 <getc@plt+0x1808>
   121fc:	mov	r6, #0
   12200:	mov	r7, #0
   12204:	mov	r8, #0
   12208:	add	r3, pc, r3
   1220c:	add	r4, pc, r4
   12210:	sxth	sl, r7
   12214:	cmp	sl, #1
   12218:	blt	12288 <getc@plt+0x173c>
   1221c:	ldr	r1, [pc, #308]	; 12358 <getc@plt+0x180c>
   12220:	add	r0, r8, r8, lsl #1
   12224:	add	r0, r3, r0, lsl #2
   12228:	ldr	r5, [r0, #8]
   1222c:	ldr	r1, [pc, r1]
   12230:	mov	r0, r5
   12234:	bl	109f0 <strcmp@plt>
   12238:	cmp	r0, #0
   1223c:	mov	r0, r6
   12240:	mov	r9, #0
   12244:	beq	12290 <getc@plt+0x1744>
   12248:	ldr	r7, [pc, #268]	; 1235c <getc@plt+0x1810>
   1224c:	sxth	sl, r6
   12250:	mov	r1, #1
   12254:	add	r7, pc, r7
   12258:	mov	r9, r1
   1225c:	cmp	r1, sl
   12260:	bge	1227c <getc@plt+0x1730>
   12264:	ldr	r1, [r7, r9, lsl #2]
   12268:	mov	r0, r5
   1226c:	bl	109f0 <strcmp@plt>
   12270:	add	r1, r9, #1
   12274:	cmp	r0, #0
   12278:	bne	12258 <getc@plt+0x170c>
   1227c:	mov	r0, r6
   12280:	mov	r7, r6
   12284:	b	12290 <getc@plt+0x1744>
   12288:	mov	r0, r7
   1228c:	mov	r9, #0
   12290:	ldr	r3, [pc, #200]	; 12360 <getc@plt+0x1814>
   12294:	cmp	r9, sl
   12298:	add	r3, pc, r3
   1229c:	bne	122d8 <getc@plt+0x178c>
   122a0:	uxth	r0, r7
   122a4:	cmp	r0, #256	; 0x100
   122a8:	beq	12340 <getc@plt+0x17f4>
   122ac:	ldr	r0, [pc, #176]	; 12364 <getc@plt+0x1818>
   122b0:	add	r6, r7, #1
   122b4:	add	r0, pc, r0
   122b8:	strh	r6, [r0]
   122bc:	add	r0, r8, r8, lsl #1
   122c0:	add	r0, r3, r0, lsl #2
   122c4:	ldr	r1, [pc, #156]	; 12368 <getc@plt+0x181c>
   122c8:	ldr	r0, [r0, #8]
   122cc:	add	r1, pc, r1
   122d0:	str	r0, [r1, r9, lsl #2]
   122d4:	mov	r0, r6
   122d8:	add	r1, r8, r8, lsl #1
   122dc:	mov	r2, r3
   122e0:	ldr	r1, [r2, r1, lsl #2]!
   122e4:	ldr	r2, [r2, #4]
   122e8:	cmp	r1, r2
   122ec:	bhi	12300 <getc@plt+0x17b4>
   122f0:	strb	r9, [r4, r1]
   122f4:	add	r1, r1, #1
   122f8:	cmp	r1, r2
   122fc:	bls	122f0 <getc@plt+0x17a4>
   12300:	add	r8, r8, #1
   12304:	mov	r7, r0
   12308:	cmp	r8, #91	; 0x5b
   1230c:	bcc	12210 <getc@plt+0x16c4>
   12310:	ldr	r0, [sp]
   12314:	sxth	r1, r6
   12318:	uxtb	r0, r0
   1231c:	cmp	r0, r1
   12320:	ldrlt	r1, [pc, #68]	; 1236c <getc@plt+0x1820>
   12324:	addlt	r1, pc, r1
   12328:	ldrlt	r0, [r1, r0, lsl #2]
   1232c:	sublt	sp, fp, #28
   12330:	poplt	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12334:	ldr	r0, [pc, #56]	; 12374 <getc@plt+0x1828>
   12338:	add	r0, pc, r0
   1233c:	bl	12838 <error@@Base>
   12340:	ldr	r0, [pc, #40]	; 12370 <getc@plt+0x1824>
   12344:	add	r0, pc, r0
   12348:	bl	12838 <error@@Base>
   1234c:	andeq	r2, r1, r8, asr #30
   12350:	andeq	r2, r1, ip, lsr #17
   12354:	andeq	r2, r1, r2, lsr #30
   12358:	andseq	r2, r2, r4, lsl #30
   1235c:			; <UNDEFINED> instruction: 0x00122edc
   12360:	andeq	r2, r1, ip, lsl r8
   12364:	andeq	r2, r1, r8, ror lr
   12368:	andseq	r2, r2, r4, ror #28
   1236c:	andseq	r2, r2, ip, lsl #28
   12370:			; <UNDEFINED> instruction: 0x000012ba
   12374:	andeq	r1, r0, lr, lsr #5
   12378:	push	{fp, lr}
   1237c:	mov	fp, sp
   12380:	bl	109e4 <calloc@plt>
   12384:	cmp	r0, #0
   12388:	popne	{fp, pc}
   1238c:	ldr	r0, [pc, #4]	; 12398 <getc@plt+0x184c>
   12390:	add	r0, pc, r0
   12394:	bl	12838 <error@@Base>
   12398:	andeq	r1, r0, ip, lsr r8
   1239c:	push	{r4, r5, r6, sl, fp, lr}
   123a0:	add	fp, sp, #16
   123a4:	ldrb	r3, [r0]
   123a8:	ldrb	ip, [r1]
   123ac:	mov	r2, r0
   123b0:	mov	r0, #0
   123b4:	cmp	r3, #0
   123b8:	beq	123f0 <getc@plt+0x18a4>
   123bc:	add	r6, r2, #1
   123c0:	add	lr, r1, #1
   123c4:	mov	r2, #0
   123c8:	uxtb	r4, ip
   123cc:	uxtb	r5, r3
   123d0:	cmp	r5, r4
   123d4:	bne	12400 <getc@plt+0x18b4>
   123d8:	ldrb	r3, [r6, r2]
   123dc:	ldrb	ip, [lr, r2]
   123e0:	add	r2, r2, #1
   123e4:	cmp	r3, #0
   123e8:	bne	123c8 <getc@plt+0x187c>
   123ec:	b	123f4 <getc@plt+0x18a8>
   123f0:	mov	r2, #0
   123f4:	cmp	ip, #0
   123f8:	popeq	{r4, r5, r6, sl, fp, pc}
   123fc:	mov	r3, #0
   12400:	ldrb	r1, [r1, r2]
   12404:	uxtb	r2, r3
   12408:	mov	r0, #1
   1240c:	cmp	r2, r1
   12410:	mvncc	r0, #0
   12414:	pop	{r4, r5, r6, sl, fp, pc}
   12418:	push	{r4, r5, fp, lr}
   1241c:	add	fp, sp, #8
   12420:	mov	r5, r1
   12424:	cmp	r0, #0
   12428:	beq	1245c <getc@plt+0x1910>
   1242c:	mov	r1, r5
   12430:	mov	r4, r0
   12434:	bl	109fc <fopen@plt>
   12438:	cmp	r0, #0
   1243c:	popne	{r4, r5, fp, pc}
   12440:	ldrb	r0, [r5]
   12444:	cmp	r0, #119	; 0x77
   12448:	bne	12480 <getc@plt+0x1934>
   1244c:	ldr	r0, [pc, #72]	; 1249c <getc@plt+0x1950>
   12450:	mov	r1, r4
   12454:	add	r0, pc, r0
   12458:	bl	12888 <error@@Base+0x50>
   1245c:	ldrb	r0, [r5]
   12460:	ldr	r1, [pc, #40]	; 12490 <getc@plt+0x1944>
   12464:	ldr	r1, [pc, r1]
   12468:	ldr	r2, [pc, #36]	; 12494 <getc@plt+0x1948>
   1246c:	cmp	r0, #114	; 0x72
   12470:	ldr	r2, [pc, r2]
   12474:	moveq	r2, r1
   12478:	ldr	r0, [r2]
   1247c:	pop	{r4, r5, fp, pc}
   12480:	ldr	r0, [pc, #16]	; 12498 <getc@plt+0x194c>
   12484:	mov	r1, r4
   12488:	add	r0, pc, r0
   1248c:	bl	12888 <error@@Base+0x50>
   12490:	andeq	r2, r1, ip, lsr ip
   12494:	andeq	r2, r1, r4, lsr ip
   12498:	andeq	r1, r0, r4, ror r7
   1249c:	muleq	r0, r2, r7
   124a0:	ldr	r1, [pc, #32]	; 124c8 <getc@plt+0x197c>
   124a4:	ldr	r1, [pc, r1]
   124a8:	ldr	r1, [r1]
   124ac:	cmp	r1, r0
   124b0:	ldrne	r1, [pc, #20]	; 124cc <getc@plt+0x1980>
   124b4:	ldrne	r1, [pc, r1]
   124b8:	ldrne	r1, [r1]
   124bc:	cmpne	r1, r0
   124c0:	bxeq	lr
   124c4:	b	10b04 <fclose@plt>
   124c8:	strdeq	r2, [r1], -ip
   124cc:	strdeq	r2, [r1], -r0
   124d0:	push	{fp, lr}
   124d4:	mov	fp, sp
   124d8:	sub	sp, sp, #88	; 0x58
   124dc:	mov	r1, r0
   124e0:	mov	r2, sp
   124e4:	mov	r0, #3
   124e8:	bl	10a68 <__xstat@plt>
   124ec:	clz	r0, r0
   124f0:	lsr	r0, r0, #5
   124f4:	mov	sp, fp
   124f8:	pop	{fp, pc}
   124fc:	push	{r4, r5, fp, lr}
   12500:	add	fp, sp, #8
   12504:	sub	sp, sp, #104	; 0x68
   12508:	ldr	r0, [pc, #92]	; 1256c <getc@plt+0x1a20>
   1250c:	add	r0, pc, r0
   12510:	ldrh	r1, [r0]
   12514:	add	r5, r1, #1
   12518:	strh	r5, [r0]
   1251c:	ldr	r0, [pc, #76]	; 12570 <getc@plt+0x1a24>
   12520:	ldr	r0, [pc, r0]
   12524:	ldr	r4, [r0]
   12528:	bl	10abc <getpid@plt>
   1252c:	mov	r3, r0
   12530:	sxth	r0, r5
   12534:	add	r5, sp, #4
   12538:	mov	r2, r4
   1253c:	str	r0, [sp]
   12540:	mov	r0, r5
   12544:	ldr	r1, [pc, #40]	; 12574 <getc@plt+0x1a28>
   12548:	add	r1, pc, r1
   1254c:	bl	10b10 <sprintf@plt>
   12550:	mov	r0, r5
   12554:	bl	10a38 <strdup@plt>
   12558:	mov	r4, r0
   1255c:	bl	10a50 <unlink@plt>
   12560:	mov	r0, r4
   12564:	sub	sp, fp, #8
   12568:	pop	{r4, r5, fp, pc}
   1256c:	andseq	r3, r2, r4, lsr #32
   12570:	andeq	r2, r1, r4, ror fp
   12574:	ldrdeq	r1, [r0], -sp
   12578:	push	{r4, sl, fp, lr}
   1257c:	add	fp, sp, #8
   12580:	mov	r4, r0
   12584:	bl	10ae0 <strlen@plt>
   12588:	sub	r0, r0, #1
   1258c:	sxth	r0, r0
   12590:	cmp	r0, #0
   12594:	blt	125a4 <getc@plt+0x1a58>
   12598:	ldrb	r1, [r4, r0]
   1259c:	cmp	r1, #47	; 0x2f
   125a0:	bne	12588 <getc@plt+0x1a3c>
   125a4:	add	r0, r4, r0
   125a8:	add	r0, r0, #1
   125ac:	pop	{r4, sl, fp, pc}
   125b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   125b4:	add	fp, sp, #28
   125b8:	sub	sp, sp, #12
   125bc:	str	r2, [sp]
   125c0:	stmib	sp, {r0, r1}
   125c4:	mov	r6, r3
   125c8:	ldr	r4, [r1]
   125cc:	mov	r0, r4
   125d0:	bl	10ae0 <strlen@plt>
   125d4:	sub	r0, r0, #1
   125d8:	sxth	r0, r0
   125dc:	cmp	r0, #0
   125e0:	blt	125f0 <getc@plt+0x1aa4>
   125e4:	ldrb	r1, [r4, r0]
   125e8:	cmp	r1, #47	; 0x2f
   125ec:	bne	125d4 <getc@plt+0x1a88>
   125f0:	ldr	r1, [pc, #484]	; 127dc <getc@plt+0x1c90>
   125f4:	add	r0, r4, r0
   125f8:	add	r0, r0, #1
   125fc:	ldr	r1, [pc, r1]
   12600:	str	r0, [r1]
   12604:	mov	r0, #2
   12608:	ldr	r4, [pc, #464]	; 127e0 <getc@plt+0x1c94>
   1260c:	add	r4, pc, r4
   12610:	mov	r1, r4
   12614:	bl	10aa4 <__sysv_signal@plt>
   12618:	mov	r0, #15
   1261c:	mov	r1, r4
   12620:	bl	10aa4 <__sysv_signal@plt>
   12624:	ldr	r0, [sp, #4]
   12628:	ldr	r5, [r0]
   1262c:	cmp	r5, #1
   12630:	bne	12648 <getc@plt+0x1afc>
   12634:	ldr	r0, [pc, #424]	; 127e4 <getc@plt+0x1c98>
   12638:	ldr	r0, [pc, r0]
   1263c:	ldrb	r0, [r0]
   12640:	cmp	r0, #0
   12644:	bne	127c4 <getc@plt+0x1c78>
   12648:	ldr	ip, [sp, #8]
   1264c:	mov	r8, #0
   12650:	cmp	r5, #2
   12654:	blt	127a0 <getc@plt+0x1c54>
   12658:	mov	r8, #0
   1265c:	mov	r7, #1
   12660:	mov	r9, #1
   12664:	ldr	r4, [ip, r7, lsl #2]
   12668:	ldrb	r0, [r4]
   1266c:	cmp	r0, #45	; 0x2d
   12670:	bne	12748 <getc@plt+0x1bfc>
   12674:	ldrb	sl, [r4, #1]
   12678:	cmp	sl, #0
   1267c:	beq	12748 <getc@plt+0x1bfc>
   12680:	mov	r0, r4
   12684:	bl	10ae0 <strlen@plt>
   12688:	mov	r2, r0
   1268c:	ldr	r0, [pc, #340]	; 127e8 <getc@plt+0x1c9c>
   12690:	mov	r1, r4
   12694:	add	r0, pc, r0
   12698:	bl	10b34 <strncmp@plt>
   1269c:	cmp	r0, #0
   126a0:	beq	127c4 <getc@plt+0x1c78>
   126a4:	ldr	ip, [sp, #8]
   126a8:	add	r1, r7, #1
   126ac:	mov	r0, #0
   126b0:	cmp	r1, r5
   126b4:	ldrlt	r0, [ip, r1, lsl #2]
   126b8:	cmp	r6, #0
   126bc:	ldrbne	r2, [r6]
   126c0:	cmpne	r2, #0
   126c4:	beq	127b4 <getc@plt+0x1c68>
   126c8:	mov	r1, #0
   126cc:	cmp	sl, r2
   126d0:	beq	126f8 <getc@plt+0x1bac>
   126d4:	mov	r2, #1
   126d8:	sxth	r1, r2
   126dc:	add	r3, r1, r1, lsl #1
   126e0:	ldrb	r3, [r6, r3, lsl #2]
   126e4:	cmp	r3, #0
   126e8:	beq	127b4 <getc@plt+0x1c68>
   126ec:	add	r2, r2, #1
   126f0:	cmp	sl, r3
   126f4:	bne	126d8 <getc@plt+0x1b8c>
   126f8:	add	r1, r1, r1, lsl #1
   126fc:	add	r3, r6, r1, lsl #2
   12700:	ldr	r1, [r3, #4]
   12704:	cmp	r1, #0
   12708:	beq	12768 <getc@plt+0x1c1c>
   1270c:	mov	r2, r4
   12710:	cmp	r0, #0
   12714:	ldrb	r7, [r2, #2]!
   12718:	cmpeq	r7, #0
   1271c:	beq	12768 <getc@plt+0x1c1c>
   12720:	ldr	r3, [r1]
   12724:	cmp	r3, #0
   12728:	bne	127cc <getc@plt+0x1c80>
   1272c:	cmp	r7, #0
   12730:	movne	r0, r2
   12734:	str	r0, [r1]
   12738:	ldrb	r0, [r2]
   1273c:	cmp	r0, #0
   12740:	addeq	r9, r9, #1
   12744:	b	12754 <getc@plt+0x1c08>
   12748:	sxth	r0, r8
   1274c:	add	r8, r8, #1
   12750:	str	r4, [ip, r0, lsl #2]
   12754:	add	r9, r9, #1
   12758:	sxth	r7, r9
   1275c:	cmp	r5, r7
   12760:	bgt	12664 <getc@plt+0x1b18>
   12764:	b	127a0 <getc@plt+0x1c54>
   12768:	ldr	r0, [r3, #8]
   1276c:	cmp	r0, #0
   12770:	beq	127b4 <getc@plt+0x1c68>
   12774:	ldrb	r1, [r4, #2]
   12778:	cmp	r1, #0
   1277c:	bne	127b4 <getc@plt+0x1c68>
   12780:	ldrb	r1, [r0]
   12784:	cmp	r1, #0
   12788:	bne	127cc <getc@plt+0x1c80>
   1278c:	mov	r1, #1
   12790:	strb	r1, [r0]
   12794:	ldr	r0, [sp, #4]
   12798:	ldr	r5, [r0]
   1279c:	b	12754 <getc@plt+0x1c08>
   127a0:	ldr	r1, [sp, #4]
   127a4:	sxth	r0, r8
   127a8:	str	r0, [r1]
   127ac:	sub	sp, fp, #28
   127b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127b4:	ldr	r0, [pc, #52]	; 127f0 <getc@plt+0x1ca4>
   127b8:	mov	r1, r4
   127bc:	add	r0, pc, r0
   127c0:	bl	12888 <error@@Base+0x50>
   127c4:	ldr	r0, [sp]
   127c8:	bl	12964 <error@@Base+0x12c>
   127cc:	ldr	r0, [pc, #24]	; 127ec <getc@plt+0x1ca0>
   127d0:	mov	r1, r4
   127d4:	add	r0, pc, r0
   127d8:	bl	12888 <error@@Base+0x50>
   127dc:	muleq	r1, r8, sl
   127e0:	andeq	r0, r0, r8, lsl r3
   127e4:	andeq	r2, r1, r8, asr #20
   127e8:	andeq	r1, r0, lr, lsr #11
   127ec:	muleq	r0, r2, r4
   127f0:	muleq	r0, fp, r4
   127f4:	push	{fp, lr}
   127f8:	mov	fp, sp
   127fc:	mov	r0, #0
   12800:	bl	12804 <getc@plt+0x1cb8>
   12804:	push	{fp, lr}
   12808:	mov	fp, sp
   1280c:	mov	r4, r0
   12810:	ldr	r0, [pc, #28]	; 12834 <getc@plt+0x1ce8>
   12814:	ldr	r0, [pc, r0]
   12818:	ldr	r0, [r0]
   1281c:	cmp	r0, #0
   12820:	beq	12828 <getc@plt+0x1cdc>
   12824:	blx	r0
   12828:	bl	129c4 <error@@Base+0x18c>
   1282c:	mov	r0, r4
   12830:	bl	10ac8 <exit@plt>
   12834:	andeq	r2, r1, r4, lsl #17

00012838 <error@@Base>:
   12838:	push	{fp, lr}
   1283c:	mov	fp, sp
   12840:	mov	r3, r0
   12844:	ldr	r0, [pc, #44]	; 12878 <error@@Base+0x40>
   12848:	ldr	r0, [pc, r0]
   1284c:	ldr	r2, [r0]
   12850:	ldr	r0, [pc, #36]	; 1287c <error@@Base+0x44>
   12854:	ldr	r0, [pc, r0]
   12858:	ldr	r0, [r0]
   1285c:	ldr	r1, [pc, #28]	; 12880 <error@@Base+0x48>
   12860:	add	r1, pc, r1
   12864:	bl	10aec <fprintf@plt>
   12868:	ldr	r0, [pc, #20]	; 12884 <error@@Base+0x4c>
   1286c:	ldr	r0, [pc, r0]
   12870:	ldr	r0, [r0]
   12874:	bl	12804 <getc@plt+0x1cb8>
   12878:	andeq	r2, r1, ip, asr #16
   1287c:	andeq	r2, r1, r8, lsr r8
   12880:			; <UNDEFINED> instruction: 0x000013b0
   12884:	andeq	r2, r1, ip, lsr r8
   12888:	push	{fp, lr}
   1288c:	mov	fp, sp
   12890:	sub	sp, sp, #8
   12894:	mov	r3, r0
   12898:	ldr	r0, [pc, #48]	; 128d0 <error@@Base+0x98>
   1289c:	ldr	r0, [pc, r0]
   128a0:	ldr	r2, [r0]
   128a4:	ldr	r0, [pc, #40]	; 128d4 <error@@Base+0x9c>
   128a8:	ldr	r0, [pc, r0]
   128ac:	str	r1, [sp]
   128b0:	ldr	r0, [r0]
   128b4:	ldr	r1, [pc, #28]	; 128d8 <error@@Base+0xa0>
   128b8:	add	r1, pc, r1
   128bc:	bl	10aec <fprintf@plt>
   128c0:	ldr	r0, [pc, #20]	; 128dc <error@@Base+0xa4>
   128c4:	ldr	r0, [pc, r0]
   128c8:	ldr	r0, [r0]
   128cc:	bl	12804 <getc@plt+0x1cb8>
   128d0:	strdeq	r2, [r1], -r8
   128d4:	andeq	r2, r1, r4, ror #15
   128d8:	andeq	r1, r0, r0, ror #6
   128dc:	andeq	r2, r1, r4, ror #15
   128e0:	push	{fp, lr}
   128e4:	mov	fp, sp
   128e8:	sub	sp, sp, #8
   128ec:	mov	r3, r0
   128f0:	ldr	r0, [pc, #40]	; 12920 <error@@Base+0xe8>
   128f4:	ldr	r0, [pc, r0]
   128f8:	ldr	r2, [r0]
   128fc:	ldr	r0, [pc, #32]	; 12924 <error@@Base+0xec>
   12900:	ldr	r0, [pc, r0]
   12904:	str	r1, [sp]
   12908:	ldr	r0, [r0]
   1290c:	ldr	r1, [pc, #20]	; 12928 <error@@Base+0xf0>
   12910:	add	r1, pc, r1
   12914:	bl	10aec <fprintf@plt>
   12918:	mov	sp, fp
   1291c:	pop	{fp, pc}
   12920:	andeq	r2, r1, r0, lsr #15
   12924:	andeq	r2, r1, ip, lsl #15
   12928:	andeq	r1, r0, r8, lsl #6
   1292c:	ldr	r0, [pc, #40]	; 1295c <error@@Base+0x124>
   12930:	add	r0, pc, r0
   12934:	ldrb	r1, [r0]
   12938:	cmp	r1, #1
   1293c:	bxeq	lr
   12940:	push	{fp, lr}
   12944:	mov	fp, sp
   12948:	mov	r1, #1
   1294c:	strb	r1, [r0]
   12950:	ldr	r0, [pc, #8]	; 12960 <error@@Base+0x128>
   12954:	add	r0, pc, r0
   12958:	bl	12838 <error@@Base>
   1295c:	andseq	r2, r2, r2, lsl #24
   12960:	ldrdeq	r1, [r0], -pc	; <UNPREDICTABLE>
   12964:	push	{fp, lr}
   12968:	mov	fp, sp
   1296c:	mov	r3, r0
   12970:	ldr	r0, [pc, #60]	; 129b4 <error@@Base+0x17c>
   12974:	ldr	r0, [pc, r0]
   12978:	ldr	r0, [r0]
   1297c:	cmp	r0, #0
   12980:	bne	129ac <error@@Base+0x174>
   12984:	ldr	r0, [pc, #44]	; 129b8 <error@@Base+0x180>
   12988:	ldr	r0, [pc, r0]
   1298c:	ldr	r2, [r0]
   12990:	ldr	r0, [pc, #36]	; 129bc <error@@Base+0x184>
   12994:	ldr	r0, [pc, r0]
   12998:	ldr	r0, [r0]
   1299c:	ldr	r1, [pc, #28]	; 129c0 <error@@Base+0x188>
   129a0:	add	r1, pc, r1
   129a4:	bl	10aec <fprintf@plt>
   129a8:	bl	127f4 <getc@plt+0x1ca8>
   129ac:	blx	r0
   129b0:	bl	127f4 <getc@plt+0x1ca8>
   129b4:	andeq	r2, r1, r4, lsl r7
   129b8:	andeq	r2, r1, ip, lsl #14
   129bc:	strdeq	r2, [r1], -r8
   129c0:	andeq	r1, r0, r8, lsr #5
   129c4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   129c8:	add	fp, sp, #24
   129cc:	sub	sp, sp, #104	; 0x68
   129d0:	ldr	r8, [pc, #124]	; 12a54 <error@@Base+0x21c>
   129d4:	add	r8, pc, r8
   129d8:	ldrsh	r0, [r8]
   129dc:	cmp	r0, #1
   129e0:	blt	12a4c <error@@Base+0x214>
   129e4:	ldr	r9, [pc, #108]	; 12a58 <error@@Base+0x220>
   129e8:	mov	r7, #1
   129ec:	add	r4, sp, #4
   129f0:	ldr	r9, [pc, r9]
   129f4:	ldr	r5, [pc, #96]	; 12a5c <error@@Base+0x224>
   129f8:	add	r5, pc, r5
   129fc:	ldr	r6, [r9]
   12a00:	bl	10abc <getpid@plt>
   12a04:	mov	r3, r0
   12a08:	sxth	r0, r7
   12a0c:	mov	r1, r5
   12a10:	mov	r2, r6
   12a14:	str	r0, [sp]
   12a18:	mov	r0, r4
   12a1c:	bl	10b10 <sprintf@plt>
   12a20:	mov	r0, r4
   12a24:	bl	10a38 <strdup@plt>
   12a28:	mov	r6, r0
   12a2c:	bl	10a50 <unlink@plt>
   12a30:	mov	r0, r6
   12a34:	bl	10a08 <free@plt>
   12a38:	add	r0, r7, #1
   12a3c:	sxth	r7, r0
   12a40:	ldrsh	r0, [r8]
   12a44:	cmp	r7, r0
   12a48:	ble	129fc <error@@Base+0x1c4>
   12a4c:	sub	sp, fp, #24
   12a50:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   12a54:	andseq	r2, r2, ip, asr fp
   12a58:	andeq	r2, r1, r4, lsr #13
   12a5c:	andeq	r1, r0, sp, lsr #4
   12a60:	push	{r4, r5, r6, sl, fp, lr}
   12a64:	add	fp, sp, #16
   12a68:	mov	r5, r1
   12a6c:	mov	r6, r0
   12a70:	mov	r0, #1
   12a74:	mov	r1, #16
   12a78:	mov	r4, r2
   12a7c:	bl	12378 <getc@plt+0x182c>
   12a80:	strb	r5, [r0, #8]
   12a84:	mov	r1, r0
   12a88:	str	r4, [r0, #12]
   12a8c:	mov	r0, r6
   12a90:	pop	{r4, r5, r6, sl, fp, lr}
   12a94:	b	13148 <error@@Base+0x910>
   12a98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a9c:	add	fp, sp, #28
   12aa0:	sub	sp, sp, #124	; 0x7c
   12aa4:	mov	r4, r2
   12aa8:	mov	r2, r1
   12aac:	cmp	r1, #0
   12ab0:	str	r0, [sp, #16]
   12ab4:	bne	12ac4 <error@@Base+0x28c>
   12ab8:	ldrb	r0, [r4]
   12abc:	cmp	r0, #0
   12ac0:	bne	12df0 <error@@Base+0x5b8>
   12ac4:	ldr	r0, [sp, #16]
   12ac8:	ldr	r0, [r0, #4]
   12acc:	str	r0, [sp, #4]
   12ad0:	mov	r0, r2
   12ad4:	ldr	r1, [pc, #808]	; 12e04 <error@@Base+0x5cc>
   12ad8:	add	r1, pc, r1
   12adc:	bl	12418 <getc@plt+0x18cc>
   12ae0:	mov	r6, r0
   12ae4:	ldrb	r0, [r4]
   12ae8:	cmp	r0, #0
   12aec:	beq	12b34 <error@@Base+0x2fc>
   12af0:	add	r0, sp, #20
   12af4:	mov	r1, #99	; 0x63
   12af8:	mov	r2, r6
   12afc:	bl	10a20 <fgets@plt>
   12b00:	cmp	r0, #0
   12b04:	beq	12b24 <error@@Base+0x2ec>
   12b08:	ldr	r1, [pc, #760]	; 12e08 <error@@Base+0x5d0>
   12b0c:	add	r0, sp, #20
   12b10:	mov	r2, #51	; 0x33
   12b14:	add	r1, pc, r1
   12b18:	bl	10b34 <strncmp@plt>
   12b1c:	cmp	r0, #0
   12b20:	beq	12d80 <error@@Base+0x548>
   12b24:	mov	r0, r6
   12b28:	bl	10a44 <rewind@plt>
   12b2c:	mov	r5, #0
   12b30:	strb	r5, [r4, #11]
   12b34:	ldr	r9, [r4, #4]
   12b38:	ldrb	r8, [r4, #1]
   12b3c:	mov	r0, r6
   12b40:	str	r4, [sp, #8]
   12b44:	cmp	r9, #0
   12b48:	movweq	r9, #94	; 0x5e
   12b4c:	bl	10b4c <getc@plt>
   12b50:	cmn	r0, #1
   12b54:	beq	12c18 <error@@Base+0x3e0>
   12b58:	add	r1, sp, #20
   12b5c:	mov	sl, #0
   12b60:	sub	r4, fp, #32
   12b64:	add	r1, r1, #1
   12b68:	str	r1, [sp, #12]
   12b6c:	ldr	r1, [pc, #668]	; 12e10 <error@@Base+0x5d8>
   12b70:	ldr	r1, [pc, r1]
   12b74:	add	r1, r1, r0
   12b78:	ldrsb	r5, [r1]
   12b7c:	cmp	r5, #0
   12b80:	ble	12dd0 <error@@Base+0x598>
   12b84:	cmp	r5, #1
   12b88:	strb	r0, [sp, #20]
   12b8c:	beq	12bb0 <error@@Base+0x378>
   12b90:	ldr	r0, [sp, #12]
   12b94:	sub	r7, r5, #1
   12b98:	mov	r1, #1
   12b9c:	mov	r3, r6
   12ba0:	mov	r2, r7
   12ba4:	bl	10a80 <fread@plt>
   12ba8:	cmp	r0, r7
   12bac:	bne	12de4 <error@@Base+0x5ac>
   12bb0:	add	r0, sp, #20
   12bb4:	mov	r1, #4
   12bb8:	mov	r2, r4
   12bbc:	bl	10a8c <utf8proc_iterate@plt>
   12bc0:	cmp	r0, r5
   12bc4:	bne	12ddc <error@@Base+0x5a4>
   12bc8:	ldr	r5, [fp, #-32]	; 0xffffffe0
   12bcc:	cmp	r8, #0
   12bd0:	beq	12be0 <error@@Base+0x3a8>
   12bd4:	mov	r7, #1
   12bd8:	cmp	r5, r9
   12bdc:	beq	12c04 <error@@Base+0x3cc>
   12be0:	mov	r0, #1
   12be4:	mov	r1, #16
   12be8:	bl	12378 <getc@plt+0x182c>
   12bec:	strb	sl, [r0, #8]
   12bf0:	mov	r1, r0
   12bf4:	str	r5, [r0, #12]
   12bf8:	ldr	r0, [sp, #16]
   12bfc:	bl	13148 <error@@Base+0x910>
   12c00:	mov	r7, #0
   12c04:	mov	r0, r6
   12c08:	bl	10b4c <getc@plt>
   12c0c:	cmn	r0, #1
   12c10:	mov	sl, r7
   12c14:	bne	12b6c <error@@Base+0x334>
   12c18:	mov	r0, r6
   12c1c:	bl	124a0 <getc@plt+0x1954>
   12c20:	ldr	r8, [sp, #8]
   12c24:	ldr	r9, [sp, #4]
   12c28:	ldrb	r0, [r8, #9]
   12c2c:	cmp	r0, #0
   12c30:	beq	12d3c <error@@Base+0x504>
   12c34:	ldr	r0, [sp, #16]
   12c38:	cmp	r9, #0
   12c3c:	addne	r0, r9, #4
   12c40:	ldr	r6, [r0]
   12c44:	cmp	r6, #0
   12c48:	beq	12d3c <error@@Base+0x504>
   12c4c:	mov	r5, #32
   12c50:	mov	r7, r6
   12c54:	ldr	r4, [r7, #12]
   12c58:	mov	r0, r4
   12c5c:	bl	10a14 <utf8proc_get_property@plt>
   12c60:	cmp	r4, #10
   12c64:	ble	12c80 <error@@Base+0x448>
   12c68:	sub	r1, r4, #11
   12c6c:	cmp	r1, #3
   12c70:	bcc	12ca4 <error@@Base+0x46c>
   12c74:	cmp	r4, #160	; 0xa0
   12c78:	beq	12ca4 <error@@Base+0x46c>
   12c7c:	b	12c90 <error@@Base+0x458>
   12c80:	cmp	r4, #9
   12c84:	beq	12ca4 <error@@Base+0x46c>
   12c88:	cmp	r4, #10
   12c8c:	beq	12ca8 <error@@Base+0x470>
   12c90:	ldrsh	r0, [r0]
   12c94:	sub	r0, r0, #23
   12c98:	cmp	r0, #2
   12c9c:	strls	r5, [r7, #12]
   12ca0:	b	12ca8 <error@@Base+0x470>
   12ca4:	str	r5, [r7, #12]
   12ca8:	ldr	r7, [r7, #4]
   12cac:	cmp	r7, #0
   12cb0:	bne	12c54 <error@@Base+0x41c>
   12cb4:	mov	r4, #0
   12cb8:	ldr	r1, [r6, #12]
   12cbc:	ldr	r5, [r6, #4]
   12cc0:	cmp	r1, #32
   12cc4:	bne	12d00 <error@@Base+0x4c8>
   12cc8:	tst	r4, #255	; 0xff
   12ccc:	beq	12d1c <error@@Base+0x4e4>
   12cd0:	cmp	r5, #0
   12cd4:	ldrne	r1, [r5, #12]
   12cd8:	cmpne	r1, #10
   12cdc:	beq	12d1c <error@@Base+0x4e4>
   12ce0:	mov	r0, #1
   12ce4:	cmp	r1, #32
   12ce8:	bne	12d14 <error@@Base+0x4dc>
   12cec:	ldrb	r0, [r6, #8]
   12cf0:	ldrb	r1, [r5, #8]
   12cf4:	orr	r0, r1, r0
   12cf8:	strb	r0, [r5, #8]
   12cfc:	b	12d1c <error@@Base+0x4e4>
   12d00:	subs	r0, r1, #10
   12d04:	movwne	r0, #1
   12d08:	tst	r4, #255	; 0xff
   12d0c:	cmpeq	r1, #10
   12d10:	beq	12d1c <error@@Base+0x4e4>
   12d14:	mov	r4, r0
   12d18:	b	12d30 <error@@Base+0x4f8>
   12d1c:	ldr	r0, [sp, #16]
   12d20:	mov	r1, r6
   12d24:	bl	13240 <error@@Base+0xa08>
   12d28:	mov	r0, r6
   12d2c:	bl	10a08 <free@plt>
   12d30:	cmp	r5, #0
   12d34:	mov	r6, r5
   12d38:	bne	12cb8 <error@@Base+0x480>
   12d3c:	ldrb	r0, [r8, #10]
   12d40:	cmp	r0, #0
   12d44:	beq	12d78 <error@@Base+0x540>
   12d48:	ldr	r0, [sp, #16]
   12d4c:	cmp	r9, #0
   12d50:	addne	r0, r9, #4
   12d54:	ldr	r4, [r0]
   12d58:	cmp	r4, #0
   12d5c:	beq	12d78 <error@@Base+0x540>
   12d60:	ldr	r0, [r4, #12]
   12d64:	bl	10a5c <utf8proc_tolower@plt>
   12d68:	str	r0, [r4, #12]
   12d6c:	ldr	r4, [r4, #4]
   12d70:	cmp	r4, #0
   12d74:	bne	12d60 <error@@Base+0x528>
   12d78:	sub	sp, fp, #28
   12d7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12d80:	ldr	r8, [pc, #132]	; 12e0c <error@@Base+0x5d4>
   12d84:	mov	r7, #0
   12d88:	add	r9, sp, #20
   12d8c:	mov	r5, #1
   12d90:	add	r8, pc, r8
   12d94:	mov	r0, r9
   12d98:	mov	r1, #99	; 0x63
   12d9c:	mov	r2, r6
   12da0:	bl	10a20 <fgets@plt>
   12da4:	cmp	r0, #0
   12da8:	beq	12b30 <error@@Base+0x2f8>
   12dac:	mov	r0, r9
   12db0:	mov	r1, r8
   12db4:	bl	109f0 <strcmp@plt>
   12db8:	cmp	r0, #0
   12dbc:	addeq	r7, r7, #1
   12dc0:	sxth	r7, r7
   12dc4:	cmp	r7, #2
   12dc8:	blt	12d94 <error@@Base+0x55c>
   12dcc:	b	12b30 <error@@Base+0x2f8>
   12dd0:	ldr	r0, [pc, #68]	; 12e1c <error@@Base+0x5e4>
   12dd4:	add	r0, pc, r0
   12dd8:	bl	12838 <error@@Base>
   12ddc:	bl	10b1c <utf8proc_errmsg@plt>
   12de0:	bl	12838 <error@@Base>
   12de4:	ldr	r0, [pc, #52]	; 12e20 <error@@Base+0x5e8>
   12de8:	add	r0, pc, r0
   12dec:	bl	12838 <error@@Base>
   12df0:	ldr	r0, [pc, #28]	; 12e14 <error@@Base+0x5dc>
   12df4:	ldr	r1, [pc, #28]	; 12e18 <error@@Base+0x5e0>
   12df8:	add	r0, pc, r0
   12dfc:	add	r1, pc, r1
   12e00:	bl	12888 <error@@Base+0x50>
   12e04:	andeq	r1, r0, r9, ror #4
   12e08:	andeq	r1, r0, r7, lsr #3
   12e0c:	andeq	r0, r0, r3, ror #30
   12e10:	andeq	r2, r1, ip, lsr #10
   12e14:	andeq	r0, r0, pc, ror lr
   12e18:	andeq	r0, r0, fp, lsl #29
   12e1c:	andeq	r0, r0, r7, asr pc
   12e20:	andeq	r0, r0, fp, asr pc
   12e24:	push	{fp, lr}
   12e28:	mov	fp, sp
   12e2c:	bl	10a2c <utf8proc_encode_char@plt>
   12e30:	cmp	r0, #0
   12e34:	sxtbgt	r0, r0
   12e38:	popgt	{fp, pc}
   12e3c:	ldr	r0, [pc, #4]	; 12e48 <error@@Base+0x610>
   12e40:	add	r0, pc, r0
   12e44:	bl	12838 <error@@Base>
   12e48:	andeq	r0, r0, r1, asr lr
   12e4c:	push	{r4, r5, r6, r7, fp, lr}
   12e50:	add	fp, sp, #16
   12e54:	mov	r6, r3
   12e58:	mov	r4, r2
   12e5c:	mov	r5, r1
   12e60:	tst	r0, #255	; 0xff
   12e64:	beq	12eac <error@@Base+0x674>
   12e68:	mov	r0, #94	; 0x5e
   12e6c:	mov	r1, r4
   12e70:	bl	10a2c <utf8proc_encode_char@plt>
   12e74:	cmp	r0, #0
   12e78:	ble	12f24 <error@@Base+0x6ec>
   12e7c:	sxtb	r7, r0
   12e80:	cmp	r5, #10
   12e84:	bne	12eb8 <error@@Base+0x680>
   12e88:	ldr	r0, [pc, #224]	; 12f70 <error@@Base+0x738>
   12e8c:	ldr	r1, [pc, #224]	; 12f74 <error@@Base+0x73c>
   12e90:	tst	r6, #255	; 0xff
   12e94:	add	r0, pc, r0
   12e98:	add	r1, pc, r1
   12e9c:	moveq	r1, r0
   12ea0:	add	r0, r4, r7
   12ea4:	pop	{r4, r5, r6, r7, fp, lr}
   12ea8:	b	10b10 <sprintf@plt>
   12eac:	mov	r7, #0
   12eb0:	cmp	r5, #10
   12eb4:	beq	12e88 <error@@Base+0x650>
   12eb8:	mov	r0, r5
   12ebc:	bl	10a14 <utf8proc_get_property@plt>
   12ec0:	cmp	r5, #32
   12ec4:	beq	12ed8 <error@@Base+0x6a0>
   12ec8:	ldrsh	r0, [r0]
   12ecc:	sub	r1, r0, #1
   12ed0:	cmp	r1, #22
   12ed4:	bcs	12f30 <error@@Base+0x6f8>
   12ed8:	mov	r0, r5
   12edc:	bl	10ad4 <utf8proc_category@plt>
   12ee0:	sub	r0, r0, #6
   12ee4:	cmp	r0, #2
   12ee8:	bhi	12f04 <error@@Base+0x6cc>
   12eec:	add	r1, r4, r7
   12ef0:	movw	r0, #9676	; 0x25cc
   12ef4:	bl	10a2c <utf8proc_encode_char@plt>
   12ef8:	cmp	r0, #0
   12efc:	ble	12f24 <error@@Base+0x6ec>
   12f00:	sxtab	r7, r7, r0
   12f04:	add	r1, r4, r7
   12f08:	mov	r0, r5
   12f0c:	bl	10a2c <utf8proc_encode_char@plt>
   12f10:	cmp	r0, #0
   12f14:	sxtabgt	r0, r7, r0
   12f18:	movgt	r1, #0
   12f1c:	strbgt	r1, [r4, r0]
   12f20:	popgt	{r4, r5, r6, r7, fp, pc}
   12f24:	ldr	r0, [pc, #64]	; 12f6c <error@@Base+0x734>
   12f28:	add	r0, pc, r0
   12f2c:	bl	12838 <error@@Base>
   12f30:	cmp	r0, #29
   12f34:	beq	12ed8 <error@@Base+0x6a0>
   12f38:	add	r0, r4, r7
   12f3c:	cmp	r5, #255	; 0xff
   12f40:	bhi	12f50 <error@@Base+0x718>
   12f44:	ldr	r1, [pc, #24]	; 12f64 <error@@Base+0x72c>
   12f48:	add	r1, pc, r1
   12f4c:	b	12f58 <error@@Base+0x720>
   12f50:	ldr	r1, [pc, #16]	; 12f68 <error@@Base+0x730>
   12f54:	add	r1, pc, r1
   12f58:	mov	r2, r5
   12f5c:	pop	{r4, r5, r6, r7, fp, lr}
   12f60:	b	10b10 <sprintf@plt>
   12f64:	andeq	r0, r0, r5, ror #26
   12f68:	andeq	r0, r0, r0, ror #26
   12f6c:	andeq	r0, r0, r9, ror #26
   12f70:	andeq	r0, r0, lr, lsl #12
   12f74:	andeq	r0, r0, r0, lsl lr
   12f78:	push	{r4, r5, r6, r7, fp, lr}
   12f7c:	add	fp, sp, #16
   12f80:	sub	sp, sp, #16
   12f84:	mov	r6, r2
   12f88:	mov	r2, r1
   12f8c:	ldr	r1, [pc, #180]	; 13048 <error@@Base+0x810>
   12f90:	mov	r5, r0
   12f94:	mov	r0, r2
   12f98:	add	r1, pc, r1
   12f9c:	bl	12418 <getc@plt+0x18cc>
   12fa0:	mov	r4, r0
   12fa4:	cmp	r6, #0
   12fa8:	beq	12ffc <error@@Base+0x7c4>
   12fac:	ldr	r0, [pc, #152]	; 1304c <error@@Base+0x814>
   12fb0:	mov	r1, #55	; 0x37
   12fb4:	mov	r2, #1
   12fb8:	mov	r3, r4
   12fbc:	add	r0, pc, r0
   12fc0:	bl	10a74 <fwrite@plt>
   12fc4:	ldr	r7, [pc, #132]	; 13050 <error@@Base+0x818>
   12fc8:	mov	r1, #55	; 0x37
   12fcc:	mov	r2, #1
   12fd0:	mov	r3, r4
   12fd4:	add	r7, pc, r7
   12fd8:	mov	r0, r7
   12fdc:	bl	10a74 <fwrite@plt>
   12fe0:	mov	r0, r4
   12fe4:	blx	r6
   12fe8:	mov	r0, r7
   12fec:	mov	r1, #55	; 0x37
   12ff0:	mov	r2, #1
   12ff4:	mov	r3, r4
   12ff8:	bl	10a74 <fwrite@plt>
   12ffc:	ldr	r6, [r5]
   13000:	cmp	r6, #0
   13004:	beq	13038 <error@@Base+0x800>
   13008:	add	r5, sp, #7
   1300c:	ldr	r1, [r6, #12]
   13010:	ldrb	r0, [r6, #8]
   13014:	mov	r2, r5
   13018:	mov	r3, #0
   1301c:	bl	12e4c <error@@Base+0x614>
   13020:	mov	r0, r5
   13024:	mov	r1, r4
   13028:	bl	10b28 <fputs@plt>
   1302c:	ldr	r6, [r6, #4]
   13030:	cmp	r6, #0
   13034:	bne	1300c <error@@Base+0x7d4>
   13038:	mov	r0, r4
   1303c:	bl	124a0 <getc@plt+0x1954>
   13040:	sub	sp, fp, #16
   13044:	pop	{r4, r5, r6, r7, fp, pc}
   13048:	andeq	r0, r0, lr, lsr r8
   1304c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   13050:	andeq	r0, r0, pc, lsl sp
   13054:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13058:	add	fp, sp, #28
   1305c:	sub	sp, sp, #4
   13060:	mov	r9, #0
   13064:	mov	sl, r0
   13068:	str	r9, [sp]
   1306c:	ldrb	r0, [r1]
   13070:	cmp	r0, #0
   13074:	beq	130d4 <error@@Base+0x89c>
   13078:	mov	r4, r1
   1307c:	mov	r8, sp
   13080:	mov	r7, #1
   13084:	mov	r0, r4
   13088:	mvn	r1, #0
   1308c:	mov	r2, r8
   13090:	bl	10a8c <utf8proc_iterate@plt>
   13094:	cmp	r0, #1
   13098:	blt	130dc <error@@Base+0x8a4>
   1309c:	ldr	r5, [sp]
   130a0:	mov	r6, r0
   130a4:	mov	r0, #1
   130a8:	mov	r1, #16
   130ac:	bl	12378 <getc@plt+0x182c>
   130b0:	strb	r9, [r0, #8]
   130b4:	mov	r1, r0
   130b8:	str	r5, [r0, #12]
   130bc:	mov	r0, sl
   130c0:	bl	13148 <error@@Base+0x910>
   130c4:	ldrb	r0, [r4, r6]!
   130c8:	cmp	r0, #0
   130cc:	bne	13084 <error@@Base+0x84c>
   130d0:	b	130e0 <error@@Base+0x8a8>
   130d4:	mov	r7, #1
   130d8:	b	130e0 <error@@Base+0x8a8>
   130dc:	mov	r7, #0
   130e0:	mov	r0, r7
   130e4:	sub	sp, fp, #28
   130e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   130ec:	vmov.i32	q8, #0	; 0x00000000
   130f0:	vst1.32	{d16-d17}, [r0]
   130f4:	bx	lr
   130f8:	push	{r4, r5, fp, lr}
   130fc:	add	fp, sp, #8
   13100:	mov	r4, r0
   13104:	ldr	r0, [r0]
   13108:	mov	r5, #0
   1310c:	str	r5, [r1]
   13110:	cmp	r0, #0
   13114:	str	r0, [r1, #4]
   13118:	str	r1, [r4]
   1311c:	addeq	r0, r4, #4
   13120:	str	r1, [r0]
   13124:	ldr	r0, [r4, #8]
   13128:	cmp	r0, #0
   1312c:	beq	13138 <error@@Base+0x900>
   13130:	bl	10a08 <free@plt>
   13134:	str	r5, [r4, #8]
   13138:	ldr	r0, [r4, #12]
   1313c:	add	r0, r0, #1
   13140:	str	r0, [r4, #12]
   13144:	pop	{r4, r5, fp, pc}
   13148:	push	{r4, r5, fp, lr}
   1314c:	add	fp, sp, #8
   13150:	mov	r4, r0
   13154:	ldr	r0, [r0, #4]
   13158:	mov	r5, #0
   1315c:	mov	r2, r4
   13160:	cmp	r0, #0
   13164:	stm	r1, {r0, r5}
   13168:	addne	r2, r0, #4
   1316c:	str	r1, [r2]
   13170:	str	r1, [r4, #4]
   13174:	ldr	r0, [r4, #8]
   13178:	cmp	r0, #0
   1317c:	beq	13188 <error@@Base+0x950>
   13180:	bl	10a08 <free@plt>
   13184:	str	r5, [r4, #8]
   13188:	ldr	r0, [r4, #12]
   1318c:	add	r0, r0, #1
   13190:	str	r0, [r4, #12]
   13194:	pop	{r4, r5, fp, pc}
   13198:	push	{r4, sl, fp, lr}
   1319c:	add	fp, sp, #8
   131a0:	mov	r4, r0
   131a4:	ldr	r0, [r2]
   131a8:	mov	r3, r4
   131ac:	cmp	r0, #0
   131b0:	stm	r1, {r0, r2}
   131b4:	addne	r3, r0, #4
   131b8:	str	r1, [r3]
   131bc:	str	r1, [r2]
   131c0:	ldr	r0, [r4, #8]
   131c4:	cmp	r0, #0
   131c8:	beq	131d8 <error@@Base+0x9a0>
   131cc:	bl	10a08 <free@plt>
   131d0:	mov	r0, #0
   131d4:	str	r0, [r4, #8]
   131d8:	ldr	r0, [r4, #12]
   131dc:	add	r0, r0, #1
   131e0:	str	r0, [r4, #12]
   131e4:	pop	{r4, sl, fp, pc}
   131e8:	push	{r4, sl, fp, lr}
   131ec:	add	fp, sp, #8
   131f0:	mov	r4, r0
   131f4:	mov	r0, r1
   131f8:	cmp	r1, #0
   131fc:	ldr	r3, [r0, #4]!
   13200:	moveq	r0, r4
   13204:	cmp	r3, #0
   13208:	stm	r2, {r1, r3}
   1320c:	addeq	r3, r4, #4
   13210:	str	r2, [r0]
   13214:	str	r2, [r3]
   13218:	ldr	r0, [r4, #8]
   1321c:	cmp	r0, #0
   13220:	beq	13230 <error@@Base+0x9f8>
   13224:	bl	10a08 <free@plt>
   13228:	mov	r0, #0
   1322c:	str	r0, [r4, #8]
   13230:	ldr	r0, [r4, #12]
   13234:	add	r0, r0, #1
   13238:	str	r0, [r4, #12]
   1323c:	pop	{r4, sl, fp, pc}
   13240:	push	{r4, r5, fp, lr}
   13244:	add	fp, sp, #8
   13248:	mov	r4, r0
   1324c:	ldm	r1, {r0, r2}
   13250:	mov	r5, #0
   13254:	cmp	r0, #0
   13258:	streq	r2, [r4]
   1325c:	strne	r2, [r0, #4]
   13260:	ldrne	r2, [r1, #4]
   13264:	cmp	r2, #0
   13268:	addeq	r2, r4, #4
   1326c:	str	r0, [r2]
   13270:	str	r5, [r1]
   13274:	str	r5, [r1, #4]
   13278:	ldr	r0, [r4, #8]
   1327c:	cmp	r0, #0
   13280:	beq	1328c <error@@Base+0xa54>
   13284:	bl	10a08 <free@plt>
   13288:	str	r5, [r4, #8]
   1328c:	ldr	r0, [r4, #12]
   13290:	sub	r0, r0, #1
   13294:	str	r0, [r4, #12]
   13298:	pop	{r4, r5, fp, pc}
   1329c:	push	{r4, sl, fp, lr}
   132a0:	add	fp, sp, #8
   132a4:	mov	r4, r0
   132a8:	ldr	r0, [r0, #8]
   132ac:	cmp	r0, #0
   132b0:	beq	132b8 <error@@Base+0xa80>
   132b4:	pop	{r4, sl, fp, pc}
   132b8:	ldr	r0, [r4, #12]
   132bc:	cmp	r0, #0
   132c0:	beq	132b4 <error@@Base+0xa7c>
   132c4:	mov	r1, #4
   132c8:	bl	12378 <getc@plt+0x182c>
   132cc:	str	r0, [r4, #8]
   132d0:	ldr	r1, [r4]
   132d4:	cmp	r1, #0
   132d8:	beq	132b4 <error@@Base+0xa7c>
   132dc:	str	r1, [r0]
   132e0:	ldr	r0, [r1, #4]
   132e4:	cmp	r0, #0
   132e8:	popeq	{r4, sl, fp, pc}
   132ec:	mov	r1, #4
   132f0:	ldr	r2, [r4, #8]
   132f4:	str	r0, [r2, r1]
   132f8:	add	r1, r1, #4
   132fc:	ldr	r0, [r0, #4]
   13300:	cmp	r0, #0
   13304:	bne	132f0 <error@@Base+0xab8>
   13308:	b	132b4 <error@@Base+0xa7c>
   1330c:	push	{r4, r5, r6, r7, fp, lr}
   13310:	add	fp, sp, #16
   13314:	ldr	r6, [r0]
   13318:	cmp	r6, #0
   1331c:	popeq	{r4, r5, r6, r7, fp, pc}
   13320:	mov	r4, r1
   13324:	mov	r5, r0
   13328:	mov	r7, #0
   1332c:	ldm	r6, {r0, r1}
   13330:	cmp	r0, #0
   13334:	streq	r1, [r5]
   13338:	strne	r1, [r0, #4]
   1333c:	ldrne	r1, [r6, #4]
   13340:	cmp	r1, #0
   13344:	addeq	r1, r5, #4
   13348:	str	r0, [r1]
   1334c:	str	r7, [r6]
   13350:	str	r7, [r6, #4]
   13354:	ldr	r0, [r5, #8]
   13358:	cmp	r0, #0
   1335c:	beq	13368 <error@@Base+0xb30>
   13360:	bl	10a08 <free@plt>
   13364:	str	r7, [r5, #8]
   13368:	ldr	r0, [r5, #12]
   1336c:	sub	r0, r0, #1
   13370:	str	r0, [r5, #12]
   13374:	mov	r0, r6
   13378:	blx	r4
   1337c:	ldr	r6, [r5]
   13380:	cmp	r6, #0
   13384:	bne	1332c <error@@Base+0xaf4>
   13388:	pop	{r4, r5, r6, r7, fp, pc}
   1338c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13390:	mov	r7, r0
   13394:	ldr	r6, [pc, #72]	; 133e4 <error@@Base+0xbac>
   13398:	ldr	r5, [pc, #72]	; 133e8 <error@@Base+0xbb0>
   1339c:	add	r6, pc, r6
   133a0:	add	r5, pc, r5
   133a4:	sub	r6, r6, r5
   133a8:	mov	r8, r1
   133ac:	mov	r9, r2
   133b0:	bl	109c4 <calloc@plt-0x20>
   133b4:	asrs	r6, r6, #2
   133b8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   133bc:	mov	r4, #0
   133c0:	add	r4, r4, #1
   133c4:	ldr	r3, [r5], #4
   133c8:	mov	r2, r9
   133cc:	mov	r1, r8
   133d0:	mov	r0, r7
   133d4:	blx	r3
   133d8:	cmp	r6, r4
   133dc:	bne	133c0 <error@@Base+0xb88>
   133e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   133e4:	andeq	r1, r1, r4, lsl r7
   133e8:	andeq	r1, r1, ip, lsl #14
   133ec:	bx	lr

Disassembly of section .fini:

000133f0 <.fini>:
   133f0:	push	{r3, lr}
   133f4:	pop	{r3, pc}
