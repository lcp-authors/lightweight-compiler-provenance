
../repos/sgerbino-table-2fdd8d0/bin/table_binary_search_test:     file format elf32-littlearm


Disassembly of section .init:

00012928 <.init>:
   12928:	push	{r3, lr}
   1292c:	bl	12c50 <_start@@Base+0x3c>
   12930:	pop	{r3, pc}

Disassembly of section .plt:

00012934 <raise@plt-0x14>:
   12934:	push	{lr}		; (str lr, [sp, #-4]!)
   12938:	ldr	lr, [pc, #4]	; 12944 <raise@plt-0x4>
   1293c:	add	lr, pc, lr
   12940:	ldr	pc, [lr, #8]!
   12944:			; <UNDEFINED> instruction: 0x000146bc

00012948 <raise@plt>:
   12948:	add	ip, pc, #0, 12
   1294c:	add	ip, ip, #20, 20	; 0x14000
   12950:	ldr	pc, [ip, #1724]!	; 0x6bc

00012954 <strcmp@plt>:
   12954:	add	ip, pc, #0, 12
   12958:	add	ip, ip, #20, 20	; 0x14000
   1295c:	ldr	pc, [ip, #1716]!	; 0x6b4

00012960 <printf@plt>:
   12960:	add	ip, pc, #0, 12
   12964:	add	ip, ip, #20, 20	; 0x14000
   12968:	ldr	pc, [ip, #1708]!	; 0x6ac

0001296c <free@plt>:
   1296c:	add	ip, pc, #0, 12
   12970:	add	ip, ip, #20, 20	; 0x14000
   12974:	ldr	pc, [ip, #1700]!	; 0x6a4

00012978 <realloc@plt>:
   12978:	add	ip, pc, #0, 12
   1297c:	add	ip, ip, #20, 20	; 0x14000
   12980:	ldr	pc, [ip, #1692]!	; 0x69c

00012984 <strcpy@plt>:
   12984:	add	ip, pc, #0, 12
   12988:	add	ip, ip, #20, 20	; 0x14000
   1298c:	ldr	pc, [ip, #1684]!	; 0x694

00012990 <malloc@plt>:
   12990:	add	ip, pc, #0, 12
   12994:	add	ip, ip, #20, 20	; 0x14000
   12998:	ldr	pc, [ip, #1676]!	; 0x68c

0001299c <__libc_start_main@plt>:
   1299c:	add	ip, pc, #0, 12
   129a0:	add	ip, ip, #20, 20	; 0x14000
   129a4:	ldr	pc, [ip, #1668]!	; 0x684

000129a8 <__gmon_start__@plt>:
   129a8:	add	ip, pc, #0, 12
   129ac:	add	ip, ip, #20, 20	; 0x14000
   129b0:	ldr	pc, [ip, #1660]!	; 0x67c

000129b4 <strlen@plt>:
   129b4:	add	ip, pc, #0, 12
   129b8:	add	ip, ip, #20, 20	; 0x14000
   129bc:	ldr	pc, [ip, #1652]!	; 0x674

000129c0 <snprintf@plt>:
   129c0:	add	ip, pc, #0, 12
   129c4:	add	ip, ip, #20, 20	; 0x14000
   129c8:	ldr	pc, [ip, #1644]!	; 0x66c

000129cc <__isoc99_sscanf@plt>:
   129cc:	add	ip, pc, #0, 12
   129d0:	add	ip, ip, #20, 20	; 0x14000
   129d4:	ldr	pc, [ip, #1636]!	; 0x664

000129d8 <abort@plt>:
   129d8:	add	ip, pc, #0, 12
   129dc:	add	ip, ip, #20, 20	; 0x14000
   129e0:	ldr	pc, [ip, #1628]!	; 0x65c

Disassembly of section .text:

000129e4 <main@@Base>:
   129e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   129e8:	vpush	{d8}
   129ec:	mov	r4, #0
   129f0:	mov	r7, r4
   129f4:	mov	fp, r4
   129f8:	sub	sp, sp, #68	; 0x44
   129fc:	add	r5, sp, #8
   12a00:	mov	r0, r5
   12a04:	bl	12d3c <table_init@@Base>
   12a08:	ldr	r1, [pc, #488]	; 12bf8 <main@@Base+0x214>
   12a0c:	mov	r2, #0
   12a10:	add	r1, pc, r1
   12a14:	mov	r0, r5
   12a18:	bl	136b8 <table_add_column@@Base>
   12a1c:	ldr	r1, [pc, #472]	; 12bfc <main@@Base+0x218>
   12a20:	mov	r2, #16
   12a24:	add	r1, pc, r1
   12a28:	mov	r6, #1
   12a2c:	vldr	s16, [pc, #440]	; 12bec <main@@Base+0x208>
   12a30:	ldr	sl, [pc, #456]	; 12c00 <main@@Base+0x21c>
   12a34:	vldr	s17, [pc, #436]	; 12bf0 <main@@Base+0x20c>
   12a38:	mov	r9, r0
   12a3c:	mov	r0, r5
   12a40:	bl	136b8 <table_add_column@@Base>
   12a44:	mov	r8, r0
   12a48:	b	12a54 <main@@Base+0x70>
   12a4c:	add	r4, r4, #1
   12a50:	add	r6, r6, #1
   12a54:	smull	r2, r3, sl, r4
   12a58:	asr	r2, r4, #31
   12a5c:	rsb	r3, r2, r3, asr #2
   12a60:	cmp	r4, #0
   12a64:	add	r3, r3, r3, lsl #2
   12a68:	beq	12ba0 <main@@Base+0x1bc>
   12a6c:	cmp	r4, r3, lsl #1
   12a70:	vldreq	s16, [pc, #372]	; 12bec <main@@Base+0x208>
   12a74:	addeq	r7, r7, #1
   12a78:	tst	r4, #1
   12a7c:	mov	r0, r5
   12a80:	vaddeq.f32	s16, s16, s17
   12a84:	bl	14d64 <table_add_row@@Base>
   12a88:	mov	r3, r7
   12a8c:	mov	r2, r9
   12a90:	mov	r1, r4
   12a94:	mov	r0, r5
   12a98:	bl	15318 <table_set_int@@Base>
   12a9c:	mov	r2, r8
   12aa0:	vmov.f32	s0, s16
   12aa4:	mov	r1, r4
   12aa8:	mov	r0, r5
   12aac:	bl	15578 <table_set_float@@Base>
   12ab0:	cmp	r6, #100	; 0x64
   12ab4:	bne	12a4c <main@@Base+0x68>
   12ab8:	mov	r3, #0
   12abc:	mov	r2, #4
   12ac0:	mov	r1, r9
   12ac4:	mov	r0, r5
   12ac8:	bl	14554 <table_sorted_find_int@@Base>
   12acc:	mov	r1, r9
   12ad0:	mov	r3, #1
   12ad4:	mov	r2, #4
   12ad8:	mov	r4, r0
   12adc:	mov	r0, r5
   12ae0:	bl	14554 <table_sorted_find_int@@Base>
   12ae4:	cmp	r4, #40	; 0x28
   12ae8:	moveq	r7, #0
   12aec:	mov	r6, r0
   12af0:	beq	12b08 <main@@Base+0x124>
   12af4:	ldr	r0, [pc, #264]	; 12c04 <main@@Base+0x220>
   12af8:	mov	r1, r4
   12afc:	add	r0, pc, r0
   12b00:	bl	12960 <printf@plt>
   12b04:	mvn	r7, #0
   12b08:	cmp	r6, #49	; 0x31
   12b0c:	beq	12b24 <main@@Base+0x140>
   12b10:	ldr	r0, [pc, #240]	; 12c08 <main@@Base+0x224>
   12b14:	mov	r1, r6
   12b18:	add	r0, pc, r0
   12b1c:	bl	12960 <printf@plt>
   12b20:	mvn	r7, #0
   12b24:	mov	r3, r4
   12b28:	mov	r2, #0
   12b2c:	vldr	s0, [pc, #192]	; 12bf4 <main@@Base+0x210>
   12b30:	mov	r1, r8
   12b34:	str	r6, [sp]
   12b38:	mov	r0, r5
   12b3c:	bl	14b28 <table_sorted_subset_find_float@@Base>
   12b40:	mov	r3, r4
   12b44:	str	r6, [sp]
   12b48:	mov	r1, r8
   12b4c:	mov	r2, #1
   12b50:	vldr	s0, [pc, #156]	; 12bf4 <main@@Base+0x210>
   12b54:	mov	r9, r0
   12b58:	mov	r0, r5
   12b5c:	bl	14b28 <table_sorted_subset_find_float@@Base>
   12b60:	cmp	r9, #42	; 0x2a
   12b64:	mov	r4, r0
   12b68:	beq	12b80 <main@@Base+0x19c>
   12b6c:	ldr	r0, [pc, #152]	; 12c0c <main@@Base+0x228>
   12b70:	mov	r1, r9
   12b74:	add	r0, pc, r0
   12b78:	bl	12960 <printf@plt>
   12b7c:	mvn	r7, #0
   12b80:	cmp	r4, #43	; 0x2b
   12b84:	bne	12bd4 <main@@Base+0x1f0>
   12b88:	mov	r0, r5
   12b8c:	bl	12da0 <table_destroy@@Base>
   12b90:	mov	r0, r7
   12b94:	add	sp, sp, #68	; 0x44
   12b98:	vpop	{d8}
   12b9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12ba0:	mov	r0, r5
   12ba4:	bl	14d64 <table_add_row@@Base>
   12ba8:	mov	r2, r9
   12bac:	mov	r1, fp
   12bb0:	mov	r3, r7
   12bb4:	mov	r0, r5
   12bb8:	bl	15318 <table_set_int@@Base>
   12bbc:	vmov.f32	s0, s16
   12bc0:	mov	r2, r8
   12bc4:	mov	r1, fp
   12bc8:	mov	r0, r5
   12bcc:	bl	15578 <table_set_float@@Base>
   12bd0:	b	12a4c <main@@Base+0x68>
   12bd4:	ldr	r0, [pc, #52]	; 12c10 <main@@Base+0x22c>
   12bd8:	mov	r1, r4
   12bdc:	add	r0, pc, r0
   12be0:	bl	12960 <printf@plt>
   12be4:	mvn	r7, #0
   12be8:	b	12b88 <main@@Base+0x1a4>
   12bec:	andeq	r0, r0, r0
   12bf0:	cdpcc	0, 8, cr0, cr0, cr0, {0}
   12bf4:	svccc	0x00000000
   12bf8:	andeq	r3, r0, r4, lsr fp
   12bfc:	andeq	r3, r0, r4, lsr #22
   12c00:	strbtvs	r6, [r6], -r7, ror #12
   12c04:	andeq	r3, r0, r0, asr sl
   12c08:	andeq	r3, r0, ip, ror #20
   12c0c:	andeq	r3, r0, r8, asr #20
   12c10:	andeq	r3, r0, r0, lsr #20

00012c14 <_start@@Base>:
   12c14:	mov	fp, #0
   12c18:	mov	lr, #0
   12c1c:	pop	{r1}		; (ldr r1, [sp], #4)
   12c20:	mov	r2, sp
   12c24:	push	{r2}		; (str r2, [sp, #-4]!)
   12c28:	push	{r0}		; (str r0, [sp, #-4]!)
   12c2c:	ldr	ip, [pc, #16]	; 12c44 <_start@@Base+0x30>
   12c30:	push	{ip}		; (str ip, [sp, #-4]!)
   12c34:	ldr	r0, [pc, #12]	; 12c48 <_start@@Base+0x34>
   12c38:	ldr	r3, [pc, #12]	; 12c4c <_start@@Base+0x38>
   12c3c:	bl	1299c <__libc_start_main@plt>
   12c40:	bl	129d8 <abort@plt>
   12c44:	andeq	r6, r1, ip, lsr r5
   12c48:	andeq	r2, r1, r4, ror #19
   12c4c:	ldrdeq	r6, [r1], -ip
   12c50:	ldr	r3, [pc, #20]	; 12c6c <_start@@Base+0x58>
   12c54:	ldr	r2, [pc, #20]	; 12c70 <_start@@Base+0x5c>
   12c58:	add	r3, pc, r3
   12c5c:	ldr	r2, [r3, r2]
   12c60:	cmp	r2, #0
   12c64:	bxeq	lr
   12c68:	b	129a8 <__gmon_start__@plt>
   12c6c:	andeq	r4, r1, r0, lsr #7
   12c70:	andeq	r0, r0, r4, rrx
   12c74:	ldr	r3, [pc, #28]	; 12c98 <_start@@Base+0x84>
   12c78:	ldr	r0, [pc, #28]	; 12c9c <_start@@Base+0x88>
   12c7c:	sub	r3, r3, r0
   12c80:	cmp	r3, #6
   12c84:	bxls	lr
   12c88:	ldr	r3, [pc, #16]	; 12ca0 <_start@@Base+0x8c>
   12c8c:	cmp	r3, #0
   12c90:	bxeq	lr
   12c94:	bx	r3
   12c98:	andeq	r7, r2, pc, lsr #1
   12c9c:	andeq	r7, r2, ip, lsr #1
   12ca0:	andeq	r0, r0, r0
   12ca4:	ldr	r1, [pc, #36]	; 12cd0 <_start@@Base+0xbc>
   12ca8:	ldr	r0, [pc, #36]	; 12cd4 <_start@@Base+0xc0>
   12cac:	sub	r1, r1, r0
   12cb0:	asr	r1, r1, #2
   12cb4:	add	r1, r1, r1, lsr #31
   12cb8:	asrs	r1, r1, #1
   12cbc:	bxeq	lr
   12cc0:	ldr	r3, [pc, #16]	; 12cd8 <_start@@Base+0xc4>
   12cc4:	cmp	r3, #0
   12cc8:	bxeq	lr
   12ccc:	bx	r3
   12cd0:	andeq	r7, r2, ip, lsr #1
   12cd4:	andeq	r7, r2, ip, lsr #1
   12cd8:	andeq	r0, r0, r0
   12cdc:	push	{r4, lr}
   12ce0:	ldr	r4, [pc, #24]	; 12d00 <_start@@Base+0xec>
   12ce4:	ldrb	r3, [r4]
   12ce8:	cmp	r3, #0
   12cec:	popne	{r4, pc}
   12cf0:	bl	12c74 <_start@@Base+0x60>
   12cf4:	mov	r3, #1
   12cf8:	strb	r3, [r4]
   12cfc:	pop	{r4, pc}
   12d00:	andeq	r7, r2, ip, lsr #1
   12d04:	ldr	r0, [pc, #40]	; 12d34 <_start@@Base+0x120>
   12d08:	ldr	r3, [r0]
   12d0c:	cmp	r3, #0
   12d10:	bne	12d18 <_start@@Base+0x104>
   12d14:	b	12ca4 <_start@@Base+0x90>
   12d18:	ldr	r3, [pc, #24]	; 12d38 <_start@@Base+0x124>
   12d1c:	cmp	r3, #0
   12d20:	beq	12d14 <_start@@Base+0x100>
   12d24:	push	{r4, lr}
   12d28:	blx	r3
   12d2c:	pop	{r4, lr}
   12d30:	b	12ca4 <_start@@Base+0x90>
   12d34:	andeq	r6, r2, r4, lsl pc
   12d38:	andeq	r0, r0, r0

00012d3c <table_init@@Base>:
   12d3c:	mov	r3, #0
   12d40:	mov	r2, #10
   12d44:	mov	r1, #20
   12d48:	str	r1, [r0, #24]
   12d4c:	str	r3, [r0]
   12d50:	str	r3, [r0, #4]
   12d54:	str	r3, [r0, #12]
   12d58:	str	r3, [r0, #16]
   12d5c:	str	r3, [r0, #20]
   12d60:	str	r3, [r0, #28]
   12d64:	str	r3, [r0, #36]	; 0x24
   12d68:	str	r3, [r0, #40]	; 0x28
   12d6c:	str	r3, [r0, #44]	; 0x2c
   12d70:	str	r3, [r0, #32]
   12d74:	str	r3, [r0, #52]	; 0x34
   12d78:	str	r2, [r0, #8]
   12d7c:	str	r2, [r0, #48]	; 0x30
   12d80:	bx	lr

00012d84 <table_new@@Base>:
   12d84:	push	{r4, lr}
   12d88:	mov	r0, #56	; 0x38
   12d8c:	bl	12990 <malloc@plt>
   12d90:	mov	r4, r0
   12d94:	bl	12d3c <table_init@@Base>
   12d98:	mov	r0, r4
   12d9c:	pop	{r4, pc}

00012da0 <table_destroy@@Base>:
   12da0:	push	{r4, r5, r6, lr}
   12da4:	subs	r5, r0, #0
   12da8:	popeq	{r4, r5, r6, pc}
   12dac:	mvn	r2, #0
   12db0:	mov	r1, r2
   12db4:	mov	r3, #64	; 0x40
   12db8:	bl	135d0 <table_notify@@Base>
   12dbc:	mov	r0, r5
   12dc0:	bl	14d2c <table_get_row_length@@Base>
   12dc4:	subs	r6, r0, #0
   12dc8:	movgt	r4, #0
   12dcc:	ble	12de8 <table_destroy@@Base+0x48>
   12dd0:	mov	r1, r4
   12dd4:	mov	r0, r5
   12dd8:	add	r4, r4, #1
   12ddc:	bl	14e18 <table_row_destroy@@Base>
   12de0:	cmp	r6, r4
   12de4:	bne	12dd0 <table_destroy@@Base+0x30>
   12de8:	ldr	r0, [r5, #16]
   12dec:	cmp	r0, #0
   12df0:	beq	12df8 <table_destroy@@Base+0x58>
   12df4:	bl	1296c <free@plt>
   12df8:	mov	r0, r5
   12dfc:	bl	13658 <table_get_column_length@@Base>
   12e00:	subs	r6, r0, #0
   12e04:	movgt	r4, #0
   12e08:	ble	12e24 <table_destroy@@Base+0x84>
   12e0c:	mov	r1, r4
   12e10:	mov	r0, r5
   12e14:	add	r4, r4, #1
   12e18:	bl	137d8 <table_column_destroy@@Base>
   12e1c:	cmp	r6, r4
   12e20:	bne	12e0c <table_destroy@@Base+0x6c>
   12e24:	ldr	r0, [r5]
   12e28:	cmp	r0, #0
   12e2c:	beq	12e34 <table_destroy@@Base+0x94>
   12e30:	bl	1296c <free@plt>
   12e34:	ldr	r0, [r5, #36]	; 0x24
   12e38:	cmp	r0, #0
   12e3c:	beq	12e44 <table_destroy@@Base+0xa4>
   12e40:	bl	1296c <free@plt>
   12e44:	ldr	r0, [r5, #40]	; 0x28
   12e48:	cmp	r0, #0
   12e4c:	beq	12e54 <table_destroy@@Base+0xb4>
   12e50:	bl	1296c <free@plt>
   12e54:	ldr	r0, [r5, #44]	; 0x2c
   12e58:	cmp	r0, #0
   12e5c:	popeq	{r4, r5, r6, pc}
   12e60:	pop	{r4, r5, r6, lr}
   12e64:	b	1296c <free@plt>

00012e68 <table_delete@@Base>:
   12e68:	push	{r4, lr}
   12e6c:	mov	r4, r0
   12e70:	bl	12da0 <table_destroy@@Base>
   12e74:	mov	r0, r4
   12e78:	pop	{r4, lr}
   12e7c:	b	1296c <free@plt>

00012e80 <table_dupe@@Base>:
   12e80:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12e84:	sub	sp, sp, #16
   12e88:	mov	r6, r0
   12e8c:	bl	14d2c <table_get_row_length@@Base>
   12e90:	mov	r9, r0
   12e94:	mov	r0, r6
   12e98:	bl	13658 <table_get_column_length@@Base>
   12e9c:	mov	r7, r0
   12ea0:	bl	12d84 <table_new@@Base>
   12ea4:	cmp	r7, #0
   12ea8:	movgt	r4, #0
   12eac:	mov	r8, r0
   12eb0:	ble	12eec <table_dupe@@Base+0x6c>
   12eb4:	mov	r1, r4
   12eb8:	mov	r0, r6
   12ebc:	bl	13984 <table_get_column_name@@Base>
   12ec0:	mov	r1, r4
   12ec4:	add	r4, r4, #1
   12ec8:	mov	r5, r0
   12ecc:	mov	r0, r6
   12ed0:	bl	13974 <table_get_column_data_type@@Base>
   12ed4:	mov	r1, r5
   12ed8:	mov	r2, r0
   12edc:	mov	r0, r8
   12ee0:	bl	136b8 <table_add_column@@Base>
   12ee4:	cmp	r7, r4
   12ee8:	bne	12eb4 <table_dupe@@Base+0x34>
   12eec:	cmp	r9, #0
   12ef0:	movgt	r5, #0
   12ef4:	addgt	sl, sp, #12
   12ef8:	ble	12fc8 <table_dupe@@Base+0x148>
   12efc:	mov	r0, r8
   12f00:	bl	14d64 <table_add_row@@Base>
   12f04:	cmp	r7, #0
   12f08:	movgt	r4, #0
   12f0c:	ble	12fbc <table_dupe@@Base+0x13c>
   12f10:	mov	r1, r4
   12f14:	mov	r0, r6
   12f18:	bl	13974 <table_get_column_data_type@@Base>
   12f1c:	cmp	r0, #23
   12f20:	addls	pc, pc, r0, lsl #2
   12f24:	b	12fb0 <table_dupe@@Base+0x130>
   12f28:	b	13024 <table_dupe@@Base+0x1a4>
   12f2c:	b	13298 <table_dupe@@Base+0x418>
   12f30:	b	13270 <table_dupe@@Base+0x3f0>
   12f34:	b	13248 <table_dupe@@Base+0x3c8>
   12f38:	b	13220 <table_dupe@@Base+0x3a0>
   12f3c:	b	13338 <table_dupe@@Base+0x4b8>
   12f40:	b	13310 <table_dupe@@Base+0x490>
   12f44:	b	132e8 <table_dupe@@Base+0x468>
   12f48:	b	132c0 <table_dupe@@Base+0x440>
   12f4c:	b	131f8 <table_dupe@@Base+0x378>
   12f50:	b	131d0 <table_dupe@@Base+0x350>
   12f54:	b	131a8 <table_dupe@@Base+0x328>
   12f58:	b	13180 <table_dupe@@Base+0x300>
   12f5c:	b	13158 <table_dupe@@Base+0x2d8>
   12f60:	b	13130 <table_dupe@@Base+0x2b0>
   12f64:	b	13108 <table_dupe@@Base+0x288>
   12f68:	b	130e4 <table_dupe@@Base+0x264>
   12f6c:	b	130c0 <table_dupe@@Base+0x240>
   12f70:	b	1309c <table_dupe@@Base+0x21c>
   12f74:	b	13074 <table_dupe@@Base+0x1f4>
   12f78:	b	1304c <table_dupe@@Base+0x1cc>
   12f7c:	b	12ffc <table_dupe@@Base+0x17c>
   12f80:	b	12fd4 <table_dupe@@Base+0x154>
   12f84:	b	12f88 <table_dupe@@Base+0x108>
   12f88:	mov	r2, r4
   12f8c:	mov	r1, r5
   12f90:	mov	r0, r6
   12f94:	bl	14d28 <table_get_ptr@@Base>
   12f98:	mov	r3, sl
   12f9c:	mov	r2, r4
   12fa0:	mov	r1, r5
   12fa4:	str	r0, [sp, #12]
   12fa8:	mov	r0, r8
   12fac:	bl	15650 <table_set_ptr@@Base>
   12fb0:	add	r4, r4, #1
   12fb4:	cmp	r7, r4
   12fb8:	bne	12f10 <table_dupe@@Base+0x90>
   12fbc:	add	r5, r5, #1
   12fc0:	cmp	r9, r5
   12fc4:	bne	12efc <table_dupe@@Base+0x7c>
   12fc8:	mov	r0, r8
   12fcc:	add	sp, sp, #16
   12fd0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12fd4:	mov	r2, r4
   12fd8:	mov	r1, r5
   12fdc:	mov	r0, r6
   12fe0:	bl	14c24 <table_get_bool@@Base>
   12fe4:	mov	r2, r4
   12fe8:	mov	r1, r5
   12fec:	mov	r3, r0
   12ff0:	mov	r0, r8
   12ff4:	bl	152f0 <table_set_bool@@Base>
   12ff8:	b	12fb0 <table_dupe@@Base+0x130>
   12ffc:	mov	r2, r4
   13000:	mov	r1, r5
   13004:	mov	r0, r6
   13008:	bl	14d24 <table_get_string@@Base>
   1300c:	mov	r2, r4
   13010:	mov	r1, r5
   13014:	mov	r3, r0
   13018:	mov	r0, r8
   1301c:	bl	155e4 <table_set_string@@Base>
   13020:	b	12fb0 <table_dupe@@Base+0x130>
   13024:	mov	r2, r4
   13028:	mov	r1, r5
   1302c:	mov	r0, r6
   13030:	bl	14c54 <table_get_int@@Base>
   13034:	mov	r2, r4
   13038:	mov	r1, r5
   1303c:	mov	r3, r0
   13040:	mov	r0, r8
   13044:	bl	15318 <table_set_int@@Base>
   13048:	b	12fb0 <table_dupe@@Base+0x130>
   1304c:	mov	r2, r4
   13050:	mov	r1, r5
   13054:	mov	r0, r6
   13058:	bl	14d0c <table_get_uchar@@Base>
   1305c:	mov	r2, r4
   13060:	mov	r1, r5
   13064:	mov	r3, r0
   13068:	mov	r0, r8
   1306c:	bl	15628 <table_set_uchar@@Base>
   13070:	b	12fb0 <table_dupe@@Base+0x130>
   13074:	mov	r2, r4
   13078:	mov	r1, r5
   1307c:	mov	r0, r6
   13080:	bl	14d1c <table_get_char@@Base>
   13084:	mov	r2, r4
   13088:	mov	r1, r5
   1308c:	mov	r3, r0
   13090:	mov	r0, r8
   13094:	bl	15600 <table_set_char@@Base>
   13098:	b	12fb0 <table_dupe@@Base+0x130>
   1309c:	mov	r2, r4
   130a0:	mov	r1, r5
   130a4:	mov	r0, r6
   130a8:	bl	14cfc <table_get_ldouble@@Base>
   130ac:	mov	r2, r4
   130b0:	mov	r1, r5
   130b4:	mov	r0, r8
   130b8:	bl	155c0 <table_set_ldouble@@Base>
   130bc:	b	12fb0 <table_dupe@@Base+0x130>
   130c0:	mov	r2, r4
   130c4:	mov	r1, r5
   130c8:	mov	r0, r6
   130cc:	bl	14cec <table_get_double@@Base>
   130d0:	mov	r2, r4
   130d4:	mov	r1, r5
   130d8:	mov	r0, r8
   130dc:	bl	1559c <table_set_double@@Base>
   130e0:	b	12fb0 <table_dupe@@Base+0x130>
   130e4:	mov	r2, r4
   130e8:	mov	r1, r5
   130ec:	mov	r0, r6
   130f0:	bl	14cdc <table_get_float@@Base>
   130f4:	mov	r2, r4
   130f8:	mov	r1, r5
   130fc:	mov	r0, r8
   13100:	bl	15578 <table_set_float@@Base>
   13104:	b	12fb0 <table_dupe@@Base+0x130>
   13108:	mov	r2, r4
   1310c:	mov	r1, r5
   13110:	mov	r0, r6
   13114:	bl	14cc8 <table_get_ullong@@Base>
   13118:	mov	r2, r4
   1311c:	strd	r0, [sp]
   13120:	mov	r1, r5
   13124:	mov	r0, r8
   13128:	bl	15558 <table_set_ullong@@Base>
   1312c:	b	12fb0 <table_dupe@@Base+0x130>
   13130:	mov	r2, r4
   13134:	mov	r1, r5
   13138:	mov	r0, r6
   1313c:	bl	14cb4 <table_get_llong@@Base>
   13140:	mov	r2, r4
   13144:	strd	r0, [sp]
   13148:	mov	r1, r5
   1314c:	mov	r0, r8
   13150:	bl	15538 <table_set_llong@@Base>
   13154:	b	12fb0 <table_dupe@@Base+0x130>
   13158:	mov	r2, r4
   1315c:	mov	r1, r5
   13160:	mov	r0, r6
   13164:	bl	14ca4 <table_get_ulong@@Base>
   13168:	mov	r2, r4
   1316c:	mov	r1, r5
   13170:	mov	r3, r0
   13174:	mov	r0, r8
   13178:	bl	15510 <table_set_ulong@@Base>
   1317c:	b	12fb0 <table_dupe@@Base+0x130>
   13180:	mov	r2, r4
   13184:	mov	r1, r5
   13188:	mov	r0, r6
   1318c:	bl	14c94 <table_get_long@@Base>
   13190:	mov	r2, r4
   13194:	mov	r1, r5
   13198:	mov	r3, r0
   1319c:	mov	r0, r8
   131a0:	bl	154e8 <table_set_long@@Base>
   131a4:	b	12fb0 <table_dupe@@Base+0x130>
   131a8:	mov	r2, r4
   131ac:	mov	r1, r5
   131b0:	mov	r0, r6
   131b4:	bl	14c80 <table_get_ushort@@Base>
   131b8:	mov	r2, r4
   131bc:	mov	r1, r5
   131c0:	mov	r3, r0
   131c4:	mov	r0, r8
   131c8:	bl	154c0 <table_set_ushort@@Base>
   131cc:	b	12fb0 <table_dupe@@Base+0x130>
   131d0:	mov	r2, r4
   131d4:	mov	r1, r5
   131d8:	mov	r0, r6
   131dc:	bl	14c6c <table_get_short@@Base>
   131e0:	mov	r2, r4
   131e4:	mov	r1, r5
   131e8:	mov	r3, r0
   131ec:	mov	r0, r8
   131f0:	bl	15498 <table_set_short@@Base>
   131f4:	b	12fb0 <table_dupe@@Base+0x130>
   131f8:	mov	r2, r4
   131fc:	mov	r1, r5
   13200:	mov	r0, r6
   13204:	bl	14cd8 <table_get_uint64@@Base>
   13208:	mov	r2, r4
   1320c:	strd	r0, [sp]
   13210:	mov	r1, r5
   13214:	mov	r0, r8
   13218:	bl	15478 <table_set_uint64@@Base>
   1321c:	b	12fb0 <table_dupe@@Base+0x130>
   13220:	mov	r2, r4
   13224:	mov	r1, r5
   13228:	mov	r0, r6
   1322c:	bl	14c7c <table_get_int16@@Base>
   13230:	mov	r2, r4
   13234:	mov	r1, r5
   13238:	mov	r3, r0
   1323c:	mov	r0, r8
   13240:	bl	153b8 <table_set_int16@@Base>
   13244:	b	12fb0 <table_dupe@@Base+0x130>
   13248:	mov	r2, r4
   1324c:	mov	r1, r5
   13250:	mov	r0, r6
   13254:	bl	14d20 <table_get_uint8@@Base>
   13258:	mov	r2, r4
   1325c:	mov	r1, r5
   13260:	mov	r3, r0
   13264:	mov	r0, r8
   13268:	bl	15390 <table_set_uint8@@Base>
   1326c:	b	12fb0 <table_dupe@@Base+0x130>
   13270:	mov	r2, r4
   13274:	mov	r1, r5
   13278:	mov	r0, r6
   1327c:	bl	14c34 <table_get_int8@@Base>
   13280:	mov	r2, r4
   13284:	mov	r1, r5
   13288:	mov	r3, r0
   1328c:	mov	r0, r8
   13290:	bl	15368 <table_set_int8@@Base>
   13294:	b	12fb0 <table_dupe@@Base+0x130>
   13298:	mov	r2, r4
   1329c:	mov	r1, r5
   132a0:	mov	r0, r6
   132a4:	bl	14c68 <table_get_uint@@Base>
   132a8:	mov	r2, r4
   132ac:	mov	r1, r5
   132b0:	mov	r3, r0
   132b4:	mov	r0, r8
   132b8:	bl	15340 <table_set_uint@@Base>
   132bc:	b	12fb0 <table_dupe@@Base+0x130>
   132c0:	mov	r2, r4
   132c4:	mov	r1, r5
   132c8:	mov	r0, r6
   132cc:	bl	14cc4 <table_get_int64@@Base>
   132d0:	mov	r2, r4
   132d4:	strd	r0, [sp]
   132d8:	mov	r1, r5
   132dc:	mov	r0, r8
   132e0:	bl	15458 <table_set_int64@@Base>
   132e4:	b	12fb0 <table_dupe@@Base+0x130>
   132e8:	mov	r2, r4
   132ec:	mov	r1, r5
   132f0:	mov	r0, r6
   132f4:	bl	14c58 <table_get_uint32@@Base>
   132f8:	mov	r2, r4
   132fc:	mov	r1, r5
   13300:	mov	r3, r0
   13304:	mov	r0, r8
   13308:	bl	15430 <table_set_uint32@@Base>
   1330c:	b	12fb0 <table_dupe@@Base+0x130>
   13310:	mov	r2, r4
   13314:	mov	r1, r5
   13318:	mov	r0, r6
   1331c:	bl	14c44 <table_get_int32@@Base>
   13320:	mov	r2, r4
   13324:	mov	r1, r5
   13328:	mov	r3, r0
   1332c:	mov	r0, r8
   13330:	bl	15408 <table_set_int32@@Base>
   13334:	b	12fb0 <table_dupe@@Base+0x130>
   13338:	mov	r2, r4
   1333c:	mov	r1, r5
   13340:	mov	r0, r6
   13344:	bl	14c90 <table_get_uint16@@Base>
   13348:	mov	r2, r4
   1334c:	mov	r1, r5
   13350:	mov	r3, r0
   13354:	mov	r0, r8
   13358:	bl	153e0 <table_set_uint16@@Base>
   1335c:	b	12fb0 <table_dupe@@Base+0x130>

00013360 <table_get_major_version@@Base>:
   13360:	mov	r0, #0
   13364:	bx	lr

00013368 <table_get_minor_version@@Base>:
   13368:	mov	r0, #0
   1336c:	bx	lr

00013370 <table_get_patch_version@@Base>:
   13370:	mov	r0, #0
   13374:	bx	lr

00013378 <table_get_version@@Base>:
   13378:	ldr	r0, [pc, #4]	; 13384 <table_get_version@@Base+0xc>
   1337c:	add	r0, pc, r0
   13380:	bx	lr
   13384:			; <UNDEFINED> instruction: 0x000032bc

00013388 <table_get_callback_length@@Base>:
   13388:	ldr	r0, [r0, #32]
   1338c:	bx	lr

00013390 <table_register_callback@@Base>:
   13390:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13394:	ldr	r5, [r0, #32]
   13398:	cmp	r5, #0
   1339c:	ble	133f8 <table_register_callback@@Base+0x68>
   133a0:	ldr	lr, [r0, #36]	; 0x24
   133a4:	mov	ip, #0
   133a8:	sub	lr, lr, #4
   133ac:	b	133bc <table_register_callback@@Base+0x2c>
   133b0:	add	ip, ip, #1
   133b4:	cmp	ip, r5
   133b8:	beq	133f8 <table_register_callback@@Base+0x68>
   133bc:	ldr	r4, [lr, #4]!
   133c0:	lsl	r6, ip, #2
   133c4:	cmp	r1, r4
   133c8:	bne	133b0 <table_register_callback@@Base+0x20>
   133cc:	ldr	r4, [r0, #40]	; 0x28
   133d0:	ldr	r4, [r4, ip, lsl #2]
   133d4:	cmp	r2, r4
   133d8:	bne	133b0 <table_register_callback@@Base+0x20>
   133dc:	cmp	ip, #0
   133e0:	beq	133f8 <table_register_callback@@Base+0x68>
   133e4:	ldr	r1, [r0, #44]	; 0x2c
   133e8:	ldr	r2, [r1, r6]
   133ec:	orr	r3, r2, r3
   133f0:	str	r3, [r1, r6]
   133f4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   133f8:	ldr	r8, [r0, #48]	; 0x30
   133fc:	mov	r9, r1
   13400:	mov	r6, r0
   13404:	mov	r1, r8
   13408:	mov	r0, r5
   1340c:	mov	r7, r3
   13410:	mov	r4, r2
   13414:	bl	164ac <table_cell_nullify@@Base+0x218>
   13418:	cmp	r1, #0
   1341c:	beq	13450 <table_register_callback@@Base+0xc0>
   13420:	mov	r0, r6
   13424:	bl	13388 <table_get_callback_length@@Base>
   13428:	ldr	r3, [r6, #36]	; 0x24
   1342c:	str	r9, [r3, r0, lsl #2]
   13430:	ldr	r3, [r6, #40]	; 0x28
   13434:	str	r4, [r3, r0, lsl #2]
   13438:	ldr	r3, [r6, #44]	; 0x2c
   1343c:	str	r7, [r3, r0, lsl #2]
   13440:	ldr	r3, [r6, #32]
   13444:	add	r3, r3, #1
   13448:	str	r3, [r6, #32]
   1344c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13450:	ldr	r1, [r6, #52]	; 0x34
   13454:	ldr	r0, [r6, #36]	; 0x24
   13458:	add	r1, r8, r1
   1345c:	str	r1, [r6, #52]	; 0x34
   13460:	lsl	r1, r1, #2
   13464:	bl	12978 <realloc@plt>
   13468:	ldr	r1, [r6, #52]	; 0x34
   1346c:	lsl	r1, r1, #2
   13470:	str	r0, [r6, #36]	; 0x24
   13474:	ldr	r0, [r6, #40]	; 0x28
   13478:	bl	12978 <realloc@plt>
   1347c:	ldr	r1, [r6, #52]	; 0x34
   13480:	lsl	r1, r1, #2
   13484:	str	r0, [r6, #40]	; 0x28
   13488:	ldr	r0, [r6, #44]	; 0x2c
   1348c:	bl	12978 <realloc@plt>
   13490:	str	r0, [r6, #44]	; 0x2c
   13494:	b	13420 <table_register_callback@@Base+0x90>

00013498 <table_unregister_callback@@Base>:
   13498:	push	{r4, r5, r6, lr}
   1349c:	ldr	lr, [r0, #32]
   134a0:	cmp	lr, #0
   134a4:	pople	{r4, r5, r6, pc}
   134a8:	ldr	r6, [r0, #36]	; 0x24
   134ac:	mov	r3, #0
   134b0:	sub	r4, r6, #4
   134b4:	b	134c4 <table_unregister_callback@@Base+0x2c>
   134b8:	add	r3, r3, #1
   134bc:	cmp	r3, lr
   134c0:	beq	13590 <table_unregister_callback@@Base+0xf8>
   134c4:	ldr	r5, [r4, #4]!
   134c8:	lsl	ip, r3, #2
   134cc:	cmp	r1, r5
   134d0:	bne	134b8 <table_unregister_callback@@Base+0x20>
   134d4:	ldr	r5, [r0, #40]	; 0x28
   134d8:	ldr	r5, [r5, r3, lsl #2]
   134dc:	cmp	r2, r5
   134e0:	bne	134b8 <table_unregister_callback@@Base+0x20>
   134e4:	sub	lr, lr, #1
   134e8:	cmp	lr, r3
   134ec:	bgt	134f8 <table_unregister_callback@@Base+0x60>
   134f0:	b	13534 <table_unregister_callback@@Base+0x9c>
   134f4:	ldr	r6, [r0, #36]	; 0x24
   134f8:	add	r2, ip, #4
   134fc:	add	r3, r3, #1
   13500:	ldr	r1, [r6, r2]
   13504:	str	r1, [r6, ip]
   13508:	ldr	r1, [r0, #40]	; 0x28
   1350c:	ldr	lr, [r1, r2]
   13510:	str	lr, [r1, ip]
   13514:	ldr	r1, [r0, #44]	; 0x2c
   13518:	ldr	lr, [r1, r2]
   1351c:	str	lr, [r1, ip]
   13520:	ldr	lr, [r0, #32]
   13524:	mov	ip, r2
   13528:	sub	lr, lr, #1
   1352c:	cmp	lr, r3
   13530:	bgt	134f4 <table_unregister_callback@@Base+0x5c>
   13534:	ldr	r6, [r0, #48]	; 0x30
   13538:	str	lr, [r0, #32]
   1353c:	mov	r4, r0
   13540:	mov	r1, r6
   13544:	mov	r0, lr
   13548:	bl	164ac <table_cell_nullify@@Base+0x218>
   1354c:	cmp	r1, #0
   13550:	popne	{r4, r5, r6, pc}
   13554:	ldr	r5, [r4, #52]	; 0x34
   13558:	sub	r5, r5, r6
   1355c:	cmp	r5, #0
   13560:	str	r5, [r4, #52]	; 0x34
   13564:	bne	13594 <table_unregister_callback@@Base+0xfc>
   13568:	ldr	r0, [r4, #36]	; 0x24
   1356c:	bl	1296c <free@plt>
   13570:	ldr	r0, [r4, #40]	; 0x28
   13574:	bl	1296c <free@plt>
   13578:	ldr	r0, [r4, #44]	; 0x2c
   1357c:	bl	1296c <free@plt>
   13580:	str	r5, [r4, #36]	; 0x24
   13584:	str	r5, [r4, #40]	; 0x28
   13588:	str	r5, [r4, #44]	; 0x2c
   1358c:	pop	{r4, r5, r6, pc}
   13590:	pop	{r4, r5, r6, pc}
   13594:	lsl	r1, r5, #2
   13598:	ldr	r0, [r4, #36]	; 0x24
   1359c:	bl	12978 <realloc@plt>
   135a0:	ldr	r1, [r4, #52]	; 0x34
   135a4:	lsl	r1, r1, #2
   135a8:	str	r0, [r4, #36]	; 0x24
   135ac:	ldr	r0, [r4, #40]	; 0x28
   135b0:	bl	12978 <realloc@plt>
   135b4:	ldr	r1, [r4, #52]	; 0x34
   135b8:	lsl	r1, r1, #2
   135bc:	str	r0, [r4, #40]	; 0x28
   135c0:	ldr	r0, [r4, #44]	; 0x2c
   135c4:	bl	12978 <realloc@plt>
   135c8:	str	r0, [r4, #44]	; 0x2c
   135cc:	pop	{r4, r5, r6, pc}

000135d0 <table_notify@@Base>:
   135d0:	ldr	ip, [r0, #32]
   135d4:	cmp	ip, #0
   135d8:	bxle	lr
   135dc:	push	{r4, r5, r6, r7, r8, r9, lr}
   135e0:	mov	r6, r3
   135e4:	sub	sp, sp, #12
   135e8:	mov	r8, r2
   135ec:	mov	r7, r1
   135f0:	mov	r5, r0
   135f4:	mov	r4, #0
   135f8:	b	13608 <table_notify@@Base+0x38>
   135fc:	add	r4, r4, #1
   13600:	cmp	ip, r4
   13604:	ble	13650 <table_notify@@Base+0x80>
   13608:	ldr	r0, [r5, #44]	; 0x2c
   1360c:	ldr	r0, [r0, r4, lsl #2]
   13610:	tst	r6, r0
   13614:	beq	135fc <table_notify@@Base+0x2c>
   13618:	ldr	r2, [r5, #40]	; 0x28
   1361c:	ldr	r0, [r5, #36]	; 0x24
   13620:	mov	r3, r6
   13624:	ldr	r1, [r2, r4, lsl #2]
   13628:	mov	r2, r8
   1362c:	str	r1, [sp]
   13630:	mov	r1, r7
   13634:	ldr	r9, [r0, r4, lsl #2]
   13638:	mov	r0, r5
   1363c:	blx	r9
   13640:	ldr	ip, [r5, #32]
   13644:	add	r4, r4, #1
   13648:	cmp	ip, r4
   1364c:	bgt	13608 <table_notify@@Base+0x38>
   13650:	add	sp, sp, #12
   13654:	pop	{r4, r5, r6, r7, r8, r9, pc}

00013658 <table_get_column_length@@Base>:
   13658:	ldr	r0, [r0, #4]
   1365c:	bx	lr

00013660 <table_get_col_ptr@@Base>:
   13660:	add	r1, r1, r1, lsl #1
   13664:	ldr	r0, [r0]
   13668:	add	r0, r0, r1, lsl #2
   1366c:	bx	lr

00013670 <table_column_init@@Base>:
   13670:	push	{r4, r5, r6, r7, r8, lr}
   13674:	mov	r5, r2
   13678:	mov	r7, r3
   1367c:	ldr	r6, [sp, #24]
   13680:	bl	13660 <table_get_col_ptr@@Base>
   13684:	mov	r4, r0
   13688:	mov	r0, r5
   1368c:	bl	129b4 <strlen@plt>
   13690:	add	r0, r0, #1
   13694:	bl	12990 <malloc@plt>
   13698:	subs	r3, r0, #0
   1369c:	str	r0, [r4]
   136a0:	beq	136ac <table_column_init@@Base+0x3c>
   136a4:	mov	r1, r5
   136a8:	bl	12984 <strcpy@plt>
   136ac:	str	r7, [r4, #4]
   136b0:	str	r6, [r4, #8]
   136b4:	pop	{r4, r5, r6, r7, r8, pc}

000136b8 <table_add_column@@Base>:
   136b8:	push	{r4, r5, r6, r7, r8, r9, lr}
   136bc:	mov	r5, r0
   136c0:	sub	sp, sp, #12
   136c4:	mov	r9, r1
   136c8:	mov	r8, r2
   136cc:	bl	13658 <table_get_column_length@@Base>
   136d0:	ldr	r6, [r5, #8]
   136d4:	mov	r1, r6
   136d8:	bl	164ac <table_cell_nullify@@Base+0x218>
   136dc:	subs	r4, r1, #0
   136e0:	beq	13774 <table_add_column@@Base+0xbc>
   136e4:	mov	r0, r5
   136e8:	bl	14d2c <table_get_row_length@@Base>
   136ec:	mov	r6, r0
   136f0:	mov	r0, r5
   136f4:	bl	13658 <table_get_column_length@@Base>
   136f8:	mov	r7, r0
   136fc:	mov	r0, r8
   13700:	bl	13e38 <table_get_default_compare_function_for_data_type@@Base>
   13704:	mov	r3, r8
   13708:	mov	r2, r9
   1370c:	mov	r1, r7
   13710:	str	r0, [sp]
   13714:	mov	r0, r5
   13718:	bl	13670 <table_column_init@@Base>
   1371c:	cmp	r6, #0
   13720:	movgt	r4, #0
   13724:	ble	13744 <table_add_column@@Base+0x8c>
   13728:	mov	r1, r4
   1372c:	mov	r2, r7
   13730:	mov	r0, r5
   13734:	add	r4, r4, #1
   13738:	bl	1623c <table_cell_init@@Base>
   1373c:	cmp	r6, r4
   13740:	bne	13728 <table_add_column@@Base+0x70>
   13744:	mov	r0, r5
   13748:	bl	13658 <table_get_column_length@@Base>
   1374c:	mov	r3, #8
   13750:	mvn	r1, #0
   13754:	mov	r2, r0
   13758:	mov	r0, r5
   1375c:	bl	135d0 <table_notify@@Base>
   13760:	ldr	r0, [r5, #4]
   13764:	add	r3, r0, #1
   13768:	str	r3, [r5, #4]
   1376c:	add	sp, sp, #12
   13770:	pop	{r4, r5, r6, r7, r8, r9, pc}
   13774:	ldr	r1, [r5, #12]
   13778:	ldr	r0, [r5]
   1377c:	add	r6, r6, r1
   13780:	str	r6, [r5, #12]
   13784:	add	r6, r6, r6, lsl #1
   13788:	lsl	r1, r6, #2
   1378c:	bl	12978 <realloc@plt>
   13790:	str	r0, [r5]
   13794:	mov	r0, r5
   13798:	bl	14d2c <table_get_row_length@@Base>
   1379c:	subs	r7, r0, #0
   137a0:	ble	136e4 <table_add_column@@Base+0x2c>
   137a4:	mov	r1, r4
   137a8:	mov	r0, r5
   137ac:	bl	14d34 <table_get_row_ptr@@Base>
   137b0:	ldr	r1, [r5, #12]
   137b4:	add	r4, r4, #1
   137b8:	lsl	r1, r1, #2
   137bc:	mov	r6, r0
   137c0:	ldr	r0, [r0]
   137c4:	bl	12978 <realloc@plt>
   137c8:	cmp	r7, r4
   137cc:	str	r0, [r6]
   137d0:	bne	137a4 <table_add_column@@Base+0xec>
   137d4:	b	136e4 <table_add_column@@Base+0x2c>

000137d8 <table_column_destroy@@Base>:
   137d8:	push	{r4, lr}
   137dc:	bl	13660 <table_get_col_ptr@@Base>
   137e0:	ldr	r0, [r0]
   137e4:	cmp	r0, #0
   137e8:	popeq	{r4, pc}
   137ec:	pop	{r4, lr}
   137f0:	b	1296c <free@plt>

000137f4 <table_remove_column@@Base>:
   137f4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   137f8:	mov	r6, r0
   137fc:	mov	r9, r1
   13800:	bl	137d8 <table_column_destroy@@Base>
   13804:	mov	r0, r6
   13808:	bl	13658 <table_get_column_length@@Base>
   1380c:	sub	r4, r0, #1
   13810:	cmp	r9, r4
   13814:	addlt	r3, r9, r9, lsl #1
   13818:	movlt	r0, r9
   1381c:	lsllt	r3, r3, #2
   13820:	bge	1385c <table_remove_column@@Base+0x68>
   13824:	ldr	r2, [r6]
   13828:	add	ip, r3, #12
   1382c:	add	r1, r2, ip
   13830:	add	r0, r0, #1
   13834:	ldr	r5, [r1, #4]
   13838:	ldr	lr, [r1, #8]
   1383c:	ldr	r7, [r1]
   13840:	add	r1, r2, r3
   13844:	cmp	r0, r4
   13848:	str	r7, [r2, r3]
   1384c:	str	r5, [r1, #4]
   13850:	str	lr, [r1, #8]
   13854:	mov	r3, ip
   13858:	bne	13824 <table_remove_column@@Base+0x30>
   1385c:	mov	r0, r6
   13860:	bl	14d2c <table_get_row_length@@Base>
   13864:	subs	r7, r0, #0
   13868:	lslgt	r8, r9, #2
   1386c:	movgt	r5, #0
   13870:	ble	138cc <table_remove_column@@Base+0xd8>
   13874:	mov	r2, r9
   13878:	mov	r1, r5
   1387c:	mov	r0, r6
   13880:	bl	16250 <table_cell_destroy@@Base>
   13884:	mov	r1, r5
   13888:	mov	r0, r6
   1388c:	bl	14d34 <table_get_row_ptr@@Base>
   13890:	cmp	r9, r4
   13894:	movlt	r2, r8
   13898:	movlt	r3, r9
   1389c:	bge	138c0 <table_remove_column@@Base+0xcc>
   138a0:	ldr	ip, [r0]
   138a4:	add	r1, r2, #4
   138a8:	add	r3, r3, #1
   138ac:	ldr	lr, [ip, r1]
   138b0:	cmp	r3, r4
   138b4:	str	lr, [ip, r2]
   138b8:	mov	r2, r1
   138bc:	bne	138a0 <table_remove_column@@Base+0xac>
   138c0:	add	r5, r5, #1
   138c4:	cmp	r7, r5
   138c8:	bne	13874 <table_remove_column@@Base+0x80>
   138cc:	ldr	r3, [r6, #4]
   138d0:	mov	r0, r6
   138d4:	sub	r3, r3, #1
   138d8:	str	r3, [r6, #4]
   138dc:	bl	13658 <table_get_column_length@@Base>
   138e0:	ldr	r5, [r6, #8]
   138e4:	mov	r1, r5
   138e8:	bl	164ac <table_cell_nullify@@Base+0x218>
   138ec:	subs	r4, r1, #0
   138f0:	beq	13910 <table_remove_column@@Base+0x11c>
   138f4:	mov	r0, r6
   138f8:	mov	r2, r9
   138fc:	mov	r3, #16
   13900:	mvn	r1, #0
   13904:	bl	135d0 <table_notify@@Base>
   13908:	mov	r0, #0
   1390c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   13910:	ldr	r1, [r6, #12]
   13914:	ldr	r0, [r6]
   13918:	sub	r1, r1, r5
   1391c:	str	r1, [r6, #12]
   13920:	add	r1, r1, r1, lsl #1
   13924:	lsl	r1, r1, #2
   13928:	bl	12978 <realloc@plt>
   1392c:	str	r0, [r6]
   13930:	mov	r0, r6
   13934:	bl	14d2c <table_get_row_length@@Base>
   13938:	subs	r7, r0, #0
   1393c:	ble	138f4 <table_remove_column@@Base+0x100>
   13940:	mov	r1, r4
   13944:	mov	r0, r6
   13948:	bl	14d34 <table_get_row_ptr@@Base>
   1394c:	ldr	r1, [r6, #12]
   13950:	add	r4, r4, #1
   13954:	lsl	r1, r1, #2
   13958:	mov	r5, r0
   1395c:	ldr	r0, [r0]
   13960:	bl	12978 <realloc@plt>
   13964:	cmp	r7, r4
   13968:	str	r0, [r5]
   1396c:	bne	13940 <table_remove_column@@Base+0x14c>
   13970:	b	138f4 <table_remove_column@@Base+0x100>

00013974 <table_get_column_data_type@@Base>:
   13974:	push	{r4, lr}
   13978:	bl	13660 <table_get_col_ptr@@Base>
   1397c:	ldr	r0, [r0, #4]
   13980:	pop	{r4, pc}

00013984 <table_get_column_name@@Base>:
   13984:	push	{r4, lr}
   13988:	bl	13660 <table_get_col_ptr@@Base>
   1398c:	ldr	r0, [r0]
   13990:	pop	{r4, pc}

00013994 <table_get_column@@Base>:
   13994:	push	{r4, r5, r6, r7, r8, lr}
   13998:	mov	r6, r1
   1399c:	mov	r5, r0
   139a0:	bl	13658 <table_get_column_length@@Base>
   139a4:	subs	r7, r0, #0
   139a8:	ble	139f0 <table_get_column@@Base+0x5c>
   139ac:	mov	r4, #0
   139b0:	b	139c0 <table_get_column@@Base+0x2c>
   139b4:	add	r4, r4, #1
   139b8:	cmp	r7, r4
   139bc:	beq	139e4 <table_get_column@@Base+0x50>
   139c0:	mov	r1, r4
   139c4:	mov	r0, r5
   139c8:	bl	13984 <table_get_column_name@@Base>
   139cc:	mov	r1, r6
   139d0:	bl	12954 <strcmp@plt>
   139d4:	cmp	r0, #0
   139d8:	bne	139b4 <table_get_column@@Base+0x20>
   139dc:	mov	r0, r4
   139e0:	pop	{r4, r5, r6, r7, r8, pc}
   139e4:	mvn	r4, #0
   139e8:	mov	r0, r4
   139ec:	pop	{r4, r5, r6, r7, r8, pc}
   139f0:	mvneq	r4, #0
   139f4:	movne	r4, #0
   139f8:	b	139dc <table_get_column@@Base+0x48>

000139fc <table_get_column_compare_function@@Base>:
   139fc:	push	{r4, lr}
   13a00:	bl	13660 <table_get_col_ptr@@Base>
   13a04:	ldr	r0, [r0, #8]
   13a08:	pop	{r4, pc}

00013a0c <table_set_column_compare_function@@Base>:
   13a0c:	push	{r4, lr}
   13a10:	mov	r4, r2
   13a14:	bl	13660 <table_get_col_ptr@@Base>
   13a18:	str	r4, [r0, #8]
   13a1c:	pop	{r4, pc}

00013a20 <table_compare_bool@@Base>:
   13a20:	cmp	r0, #0
   13a24:	beq	13a54 <table_compare_bool@@Base+0x34>
   13a28:	cmp	r1, #0
   13a2c:	beq	13a4c <table_compare_bool@@Base+0x2c>
   13a30:	ldrb	r2, [r0]
   13a34:	ldrb	r3, [r1]
   13a38:	cmp	r2, r3
   13a3c:	bgt	13a4c <table_compare_bool@@Base+0x2c>
   13a40:	mvnlt	r0, #0
   13a44:	movge	r0, #0
   13a48:	bx	lr
   13a4c:	mov	r0, #1
   13a50:	bx	lr
   13a54:	adds	r0, r1, #0
   13a58:	mvnne	r0, #0
   13a5c:	bx	lr

00013a60 <table_compare_int8@@Base>:
   13a60:	cmp	r0, #0
   13a64:	beq	13a94 <table_compare_int8@@Base+0x34>
   13a68:	cmp	r1, #0
   13a6c:	beq	13a8c <table_compare_int8@@Base+0x2c>
   13a70:	ldrsb	r2, [r0]
   13a74:	ldrsb	r3, [r1]
   13a78:	cmp	r2, r3
   13a7c:	bgt	13a8c <table_compare_int8@@Base+0x2c>
   13a80:	mvnlt	r0, #0
   13a84:	movge	r0, #0
   13a88:	bx	lr
   13a8c:	mov	r0, #1
   13a90:	bx	lr
   13a94:	adds	r0, r1, #0
   13a98:	mvnne	r0, #0
   13a9c:	bx	lr

00013aa0 <table_compare_int32@@Base>:
   13aa0:	cmp	r0, #0
   13aa4:	beq	13ad4 <table_compare_int32@@Base+0x34>
   13aa8:	cmp	r1, #0
   13aac:	beq	13acc <table_compare_int32@@Base+0x2c>
   13ab0:	ldr	r2, [r0]
   13ab4:	ldr	r3, [r1]
   13ab8:	cmp	r2, r3
   13abc:	bgt	13acc <table_compare_int32@@Base+0x2c>
   13ac0:	mvnlt	r0, #0
   13ac4:	movge	r0, #0
   13ac8:	bx	lr
   13acc:	mov	r0, #1
   13ad0:	bx	lr
   13ad4:	adds	r0, r1, #0
   13ad8:	mvnne	r0, #0
   13adc:	bx	lr

00013ae0 <table_compare_uint32@@Base>:
   13ae0:	cmp	r0, #0
   13ae4:	beq	13b14 <table_compare_uint32@@Base+0x34>
   13ae8:	cmp	r1, #0
   13aec:	beq	13b0c <table_compare_uint32@@Base+0x2c>
   13af0:	ldr	r2, [r0]
   13af4:	ldr	r3, [r1]
   13af8:	cmp	r2, r3
   13afc:	bhi	13b0c <table_compare_uint32@@Base+0x2c>
   13b00:	mvncc	r0, #0
   13b04:	movcs	r0, #0
   13b08:	bx	lr
   13b0c:	mov	r0, #1
   13b10:	bx	lr
   13b14:	adds	r0, r1, #0
   13b18:	mvnne	r0, #0
   13b1c:	bx	lr

00013b20 <table_compare_uint64@@Base>:
   13b20:	cmp	r0, #0
   13b24:	beq	13b5c <table_compare_uint64@@Base+0x3c>
   13b28:	cmp	r1, #0
   13b2c:	beq	13b68 <table_compare_uint64@@Base+0x48>
   13b30:	ldrd	r2, [r1]
   13b34:	push	{r4, r5}
   13b38:	ldrd	r4, [r0]
   13b3c:	cmp	r5, r3
   13b40:	cmpeq	r4, r2
   13b44:	movhi	r0, #1
   13b48:	bhi	13b54 <table_compare_uint64@@Base+0x34>
   13b4c:	mvncc	r0, #0
   13b50:	movcs	r0, #0
   13b54:	pop	{r4, r5}
   13b58:	bx	lr
   13b5c:	adds	r0, r1, #0
   13b60:	mvnne	r0, #0
   13b64:	bx	lr
   13b68:	mov	r0, #1
   13b6c:	bx	lr

00013b70 <table_compare_short@@Base>:
   13b70:	cmp	r0, #0
   13b74:	beq	13ba4 <table_compare_short@@Base+0x34>
   13b78:	cmp	r1, #0
   13b7c:	beq	13b9c <table_compare_short@@Base+0x2c>
   13b80:	ldrsh	r2, [r0]
   13b84:	ldrsh	r3, [r1]
   13b88:	cmp	r2, r3
   13b8c:	bgt	13b9c <table_compare_short@@Base+0x2c>
   13b90:	mvnlt	r0, #0
   13b94:	movge	r0, #0
   13b98:	bx	lr
   13b9c:	mov	r0, #1
   13ba0:	bx	lr
   13ba4:	adds	r0, r1, #0
   13ba8:	mvnne	r0, #0
   13bac:	bx	lr

00013bb0 <table_compare_ushort@@Base>:
   13bb0:	cmp	r0, #0
   13bb4:	beq	13be4 <table_compare_ushort@@Base+0x34>
   13bb8:	cmp	r1, #0
   13bbc:	beq	13bdc <table_compare_ushort@@Base+0x2c>
   13bc0:	ldrh	r2, [r0]
   13bc4:	ldrh	r3, [r1]
   13bc8:	cmp	r2, r3
   13bcc:	bhi	13bdc <table_compare_ushort@@Base+0x2c>
   13bd0:	mvncc	r0, #0
   13bd4:	movcs	r0, #0
   13bd8:	bx	lr
   13bdc:	mov	r0, #1
   13be0:	bx	lr
   13be4:	adds	r0, r1, #0
   13be8:	mvnne	r0, #0
   13bec:	bx	lr

00013bf0 <table_compare_long@@Base>:
   13bf0:	cmp	r0, #0
   13bf4:	beq	13c24 <table_compare_long@@Base+0x34>
   13bf8:	cmp	r1, #0
   13bfc:	beq	13c1c <table_compare_long@@Base+0x2c>
   13c00:	ldr	r2, [r0]
   13c04:	ldr	r3, [r1]
   13c08:	cmp	r2, r3
   13c0c:	bgt	13c1c <table_compare_long@@Base+0x2c>
   13c10:	mvnlt	r0, #0
   13c14:	movge	r0, #0
   13c18:	bx	lr
   13c1c:	mov	r0, #1
   13c20:	bx	lr
   13c24:	adds	r0, r1, #0
   13c28:	mvnne	r0, #0
   13c2c:	bx	lr

00013c30 <table_compare_llong@@Base>:
   13c30:	cmp	r0, #0
   13c34:	beq	13c74 <table_compare_llong@@Base+0x44>
   13c38:	cmp	r1, #0
   13c3c:	beq	13c80 <table_compare_llong@@Base+0x50>
   13c40:	ldrd	r2, [r1]
   13c44:	push	{r4, r5}
   13c48:	ldrd	r4, [r0]
   13c4c:	cmp	r2, r4
   13c50:	sbcs	r1, r3, r5
   13c54:	movlt	r0, #1
   13c58:	blt	13c6c <table_compare_llong@@Base+0x3c>
   13c5c:	cmp	r4, r2
   13c60:	sbcs	r3, r5, r3
   13c64:	mvnlt	r0, #0
   13c68:	movge	r0, #0
   13c6c:	pop	{r4, r5}
   13c70:	bx	lr
   13c74:	adds	r0, r1, #0
   13c78:	mvnne	r0, #0
   13c7c:	bx	lr
   13c80:	mov	r0, #1
   13c84:	bx	lr

00013c88 <table_compare_ullong@@Base>:
   13c88:	cmp	r0, #0
   13c8c:	beq	13cbc <table_compare_ullong@@Base+0x34>
   13c90:	cmp	r1, #0
   13c94:	beq	13cb4 <table_compare_ullong@@Base+0x2c>
   13c98:	ldr	r2, [r0]
   13c9c:	ldr	r3, [r1]
   13ca0:	cmp	r2, r3
   13ca4:	bhi	13cb4 <table_compare_ullong@@Base+0x2c>
   13ca8:	mvncc	r0, #0
   13cac:	movcs	r0, #0
   13cb0:	bx	lr
   13cb4:	mov	r0, #1
   13cb8:	bx	lr
   13cbc:	adds	r0, r1, #0
   13cc0:	mvnne	r0, #0
   13cc4:	bx	lr

00013cc8 <table_compare_float@@Base>:
   13cc8:	cmp	r0, #0
   13ccc:	beq	13d00 <table_compare_float@@Base+0x38>
   13cd0:	cmp	r1, #0
   13cd4:	beq	13cf8 <table_compare_float@@Base+0x30>
   13cd8:	vldr	s14, [r0]
   13cdc:	vldr	s15, [r1]
   13ce0:	vcmpe.f32	s14, s15
   13ce4:	vmrs	APSR_nzcv, fpscr
   13ce8:	bgt	13cf8 <table_compare_float@@Base+0x30>
   13cec:	mvnmi	r0, #0
   13cf0:	movpl	r0, #0
   13cf4:	bx	lr
   13cf8:	mov	r0, #1
   13cfc:	bx	lr
   13d00:	adds	r0, r1, #0
   13d04:	mvnne	r0, #0
   13d08:	bx	lr

00013d0c <table_compare_double@@Base>:
   13d0c:	cmp	r0, #0
   13d10:	beq	13d44 <table_compare_double@@Base+0x38>
   13d14:	cmp	r1, #0
   13d18:	beq	13d3c <table_compare_double@@Base+0x30>
   13d1c:	vldr	d6, [r0]
   13d20:	vldr	d7, [r1]
   13d24:	vcmpe.f64	d6, d7
   13d28:	vmrs	APSR_nzcv, fpscr
   13d2c:	bgt	13d3c <table_compare_double@@Base+0x30>
   13d30:	mvnmi	r0, #0
   13d34:	movpl	r0, #0
   13d38:	bx	lr
   13d3c:	mov	r0, #1
   13d40:	bx	lr
   13d44:	adds	r0, r1, #0
   13d48:	mvnne	r0, #0
   13d4c:	bx	lr

00013d50 <table_compare_ldouble@@Base>:
   13d50:	cmp	r0, #0
   13d54:	beq	13d88 <table_compare_ldouble@@Base+0x38>
   13d58:	cmp	r1, #0
   13d5c:	beq	13d80 <table_compare_ldouble@@Base+0x30>
   13d60:	vldr	d6, [r0]
   13d64:	vldr	d7, [r1]
   13d68:	vcmpe.f64	d6, d7
   13d6c:	vmrs	APSR_nzcv, fpscr
   13d70:	bgt	13d80 <table_compare_ldouble@@Base+0x30>
   13d74:	mvnmi	r0, #0
   13d78:	movpl	r0, #0
   13d7c:	bx	lr
   13d80:	mov	r0, #1
   13d84:	bx	lr
   13d88:	adds	r0, r1, #0
   13d8c:	mvnne	r0, #0
   13d90:	bx	lr

00013d94 <table_compare_uchar@@Base>:
   13d94:	cmp	r0, #0
   13d98:	beq	13dc8 <table_compare_uchar@@Base+0x34>
   13d9c:	cmp	r1, #0
   13da0:	beq	13dc0 <table_compare_uchar@@Base+0x2c>
   13da4:	ldrb	r2, [r0]
   13da8:	ldrb	r3, [r1]
   13dac:	cmp	r2, r3
   13db0:	bhi	13dc0 <table_compare_uchar@@Base+0x2c>
   13db4:	mvncc	r0, #0
   13db8:	movcs	r0, #0
   13dbc:	bx	lr
   13dc0:	mov	r0, #1
   13dc4:	bx	lr
   13dc8:	adds	r0, r1, #0
   13dcc:	mvnne	r0, #0
   13dd0:	bx	lr

00013dd4 <table_compare_ptr@@Base>:
   13dd4:	cmp	r0, r1
   13dd8:	bhi	13de8 <table_compare_ptr@@Base+0x14>
   13ddc:	mvncc	r0, #0
   13de0:	movcs	r0, #0
   13de4:	bx	lr
   13de8:	mov	r0, #1
   13dec:	bx	lr

00013df0 <table_compare_string@@Base>:
   13df0:	cmp	r0, #0
   13df4:	beq	13e04 <table_compare_string@@Base+0x14>
   13df8:	cmp	r1, #0
   13dfc:	beq	13e10 <table_compare_string@@Base+0x20>
   13e00:	b	12954 <strcmp@plt>
   13e04:	adds	r0, r1, #0
   13e08:	mvnne	r0, #0
   13e0c:	bx	lr
   13e10:	mov	r0, #1
   13e14:	bx	lr

00013e18 <table_compare_uint16@@Base>:
   13e18:	b	13bb0 <table_compare_ushort@@Base>

00013e1c <table_compare_int16@@Base>:
   13e1c:	b	13b70 <table_compare_short@@Base>

00013e20 <table_compare_int64@@Base>:
   13e20:	b	13c30 <table_compare_llong@@Base>

00013e24 <table_compare_char@@Base>:
   13e24:	b	13d94 <table_compare_uchar@@Base>

00013e28 <table_compare_uint8@@Base>:
   13e28:	b	13d94 <table_compare_uchar@@Base>

00013e2c <table_compare_ulong@@Base>:
   13e2c:	b	13c88 <table_compare_ullong@@Base>

00013e30 <table_compare_uint@@Base>:
   13e30:	b	13ae0 <table_compare_uint32@@Base>

00013e34 <table_compare_int@@Base>:
   13e34:	b	13aa0 <table_compare_int32@@Base>

00013e38 <table_get_default_compare_function_for_data_type@@Base>:
   13e38:	ldr	r3, [pc, #404]	; 13fd4 <table_get_default_compare_function_for_data_type@@Base+0x19c>
   13e3c:	add	r3, pc, r3
   13e40:	cmp	r0, #23
   13e44:	addls	pc, pc, r0, lsl #2
   13e48:	b	13fcc <table_get_default_compare_function_for_data_type@@Base+0x194>
   13e4c:	b	13fc0 <table_get_default_compare_function_for_data_type@@Base+0x188>
   13e50:	b	13fb4 <table_get_default_compare_function_for_data_type@@Base+0x17c>
   13e54:	b	13fa8 <table_get_default_compare_function_for_data_type@@Base+0x170>
   13e58:	b	13f9c <table_get_default_compare_function_for_data_type@@Base+0x164>
   13e5c:	b	13f90 <table_get_default_compare_function_for_data_type@@Base+0x158>
   13e60:	b	13f84 <table_get_default_compare_function_for_data_type@@Base+0x14c>
   13e64:	b	13f78 <table_get_default_compare_function_for_data_type@@Base+0x140>
   13e68:	b	13f6c <table_get_default_compare_function_for_data_type@@Base+0x134>
   13e6c:	b	13f60 <table_get_default_compare_function_for_data_type@@Base+0x128>
   13e70:	b	13f54 <table_get_default_compare_function_for_data_type@@Base+0x11c>
   13e74:	b	13f48 <table_get_default_compare_function_for_data_type@@Base+0x110>
   13e78:	b	13f3c <table_get_default_compare_function_for_data_type@@Base+0x104>
   13e7c:	b	13f30 <table_get_default_compare_function_for_data_type@@Base+0xf8>
   13e80:	b	13f24 <table_get_default_compare_function_for_data_type@@Base+0xec>
   13e84:	b	13f18 <table_get_default_compare_function_for_data_type@@Base+0xe0>
   13e88:	b	13f0c <table_get_default_compare_function_for_data_type@@Base+0xd4>
   13e8c:	b	13f00 <table_get_default_compare_function_for_data_type@@Base+0xc8>
   13e90:	b	13ef4 <table_get_default_compare_function_for_data_type@@Base+0xbc>
   13e94:	b	13ee8 <table_get_default_compare_function_for_data_type@@Base+0xb0>
   13e98:	b	13edc <table_get_default_compare_function_for_data_type@@Base+0xa4>
   13e9c:	b	13ed0 <table_get_default_compare_function_for_data_type@@Base+0x98>
   13ea0:	b	13ec4 <table_get_default_compare_function_for_data_type@@Base+0x8c>
   13ea4:	b	13eb8 <table_get_default_compare_function_for_data_type@@Base+0x80>
   13ea8:	b	13eac <table_get_default_compare_function_for_data_type@@Base+0x74>
   13eac:	ldr	r2, [pc, #292]	; 13fd8 <table_get_default_compare_function_for_data_type@@Base+0x1a0>
   13eb0:	ldr	r0, [r3, r2]
   13eb4:	bx	lr
   13eb8:	ldr	r2, [pc, #284]	; 13fdc <table_get_default_compare_function_for_data_type@@Base+0x1a4>
   13ebc:	ldr	r0, [r3, r2]
   13ec0:	bx	lr
   13ec4:	ldr	r2, [pc, #276]	; 13fe0 <table_get_default_compare_function_for_data_type@@Base+0x1a8>
   13ec8:	ldr	r0, [r3, r2]
   13ecc:	bx	lr
   13ed0:	ldr	r2, [pc, #268]	; 13fe4 <table_get_default_compare_function_for_data_type@@Base+0x1ac>
   13ed4:	ldr	r0, [r3, r2]
   13ed8:	bx	lr
   13edc:	ldr	r2, [pc, #260]	; 13fe8 <table_get_default_compare_function_for_data_type@@Base+0x1b0>
   13ee0:	ldr	r0, [r3, r2]
   13ee4:	bx	lr
   13ee8:	ldr	r2, [pc, #252]	; 13fec <table_get_default_compare_function_for_data_type@@Base+0x1b4>
   13eec:	ldr	r0, [r3, r2]
   13ef0:	bx	lr
   13ef4:	ldr	r2, [pc, #244]	; 13ff0 <table_get_default_compare_function_for_data_type@@Base+0x1b8>
   13ef8:	ldr	r0, [r3, r2]
   13efc:	bx	lr
   13f00:	ldr	r2, [pc, #236]	; 13ff4 <table_get_default_compare_function_for_data_type@@Base+0x1bc>
   13f04:	ldr	r0, [r3, r2]
   13f08:	bx	lr
   13f0c:	ldr	r2, [pc, #228]	; 13ff8 <table_get_default_compare_function_for_data_type@@Base+0x1c0>
   13f10:	ldr	r0, [r3, r2]
   13f14:	bx	lr
   13f18:	ldr	r2, [pc, #220]	; 13ffc <table_get_default_compare_function_for_data_type@@Base+0x1c4>
   13f1c:	ldr	r0, [r3, r2]
   13f20:	bx	lr
   13f24:	ldr	r2, [pc, #212]	; 14000 <table_get_default_compare_function_for_data_type@@Base+0x1c8>
   13f28:	ldr	r0, [r3, r2]
   13f2c:	bx	lr
   13f30:	ldr	r2, [pc, #204]	; 14004 <table_get_default_compare_function_for_data_type@@Base+0x1cc>
   13f34:	ldr	r0, [r3, r2]
   13f38:	bx	lr
   13f3c:	ldr	r2, [pc, #196]	; 14008 <table_get_default_compare_function_for_data_type@@Base+0x1d0>
   13f40:	ldr	r0, [r3, r2]
   13f44:	bx	lr
   13f48:	ldr	r2, [pc, #188]	; 1400c <table_get_default_compare_function_for_data_type@@Base+0x1d4>
   13f4c:	ldr	r0, [r3, r2]
   13f50:	bx	lr
   13f54:	ldr	r2, [pc, #180]	; 14010 <table_get_default_compare_function_for_data_type@@Base+0x1d8>
   13f58:	ldr	r0, [r3, r2]
   13f5c:	bx	lr
   13f60:	ldr	r2, [pc, #172]	; 14014 <table_get_default_compare_function_for_data_type@@Base+0x1dc>
   13f64:	ldr	r0, [r3, r2]
   13f68:	bx	lr
   13f6c:	ldr	r2, [pc, #164]	; 14018 <table_get_default_compare_function_for_data_type@@Base+0x1e0>
   13f70:	ldr	r0, [r3, r2]
   13f74:	bx	lr
   13f78:	ldr	r2, [pc, #156]	; 1401c <table_get_default_compare_function_for_data_type@@Base+0x1e4>
   13f7c:	ldr	r0, [r3, r2]
   13f80:	bx	lr
   13f84:	ldr	r2, [pc, #148]	; 14020 <table_get_default_compare_function_for_data_type@@Base+0x1e8>
   13f88:	ldr	r0, [r3, r2]
   13f8c:	bx	lr
   13f90:	ldr	r2, [pc, #140]	; 14024 <table_get_default_compare_function_for_data_type@@Base+0x1ec>
   13f94:	ldr	r0, [r3, r2]
   13f98:	bx	lr
   13f9c:	ldr	r2, [pc, #132]	; 14028 <table_get_default_compare_function_for_data_type@@Base+0x1f0>
   13fa0:	ldr	r0, [r3, r2]
   13fa4:	bx	lr
   13fa8:	ldr	r2, [pc, #124]	; 1402c <table_get_default_compare_function_for_data_type@@Base+0x1f4>
   13fac:	ldr	r0, [r3, r2]
   13fb0:	bx	lr
   13fb4:	ldr	r2, [pc, #116]	; 14030 <table_get_default_compare_function_for_data_type@@Base+0x1f8>
   13fb8:	ldr	r0, [r3, r2]
   13fbc:	bx	lr
   13fc0:	ldr	r2, [pc, #108]	; 14034 <table_get_default_compare_function_for_data_type@@Base+0x1fc>
   13fc4:	ldr	r0, [r3, r2]
   13fc8:	bx	lr
   13fcc:	mov	r0, #0
   13fd0:	bx	lr
   13fd4:			; <UNDEFINED> instruction: 0x000131bc
   13fd8:	andeq	r0, r0, ip, rrx
   13fdc:	andeq	r0, r0, r8, asr #32
   13fe0:	muleq	r0, r4, r0
   13fe4:	muleq	r0, ip, r0
   13fe8:	andeq	r0, r0, ip, asr #32
   13fec:	andeq	r0, r0, r4, asr #32
   13ff0:	andeq	r0, r0, r0, asr r0
   13ff4:	andeq	r0, r0, r4, asr r0
   13ff8:	andeq	r0, r0, r4, lsl #1
   13ffc:	andeq	r0, r0, ip, ror r0
   14000:	andeq	r0, r0, r0, lsl #1
   14004:	andeq	r0, r0, r8, ror r0
   14008:	andeq	r0, r0, r8, asr r0
   1400c:	andeq	r0, r0, r0, rrx
   14010:	andeq	r0, r0, r0, ror r0
   14014:	muleq	r0, r8, r0
   14018:	andeq	r0, r0, ip, lsl #1
   1401c:	andeq	r0, r0, r4, ror r0
   14020:	andeq	r0, r0, ip, asr r0
   14024:	muleq	r0, r0, r0
   14028:	andeq	r0, r0, r8, lsl #1
   1402c:	andeq	r0, r0, r0, asr #32
   14030:	andeq	r0, r0, r0, lsr #1
   14034:	andeq	r0, r0, r8, rrx

00014038 <table_subset_find@@Base>:
   14038:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1403c:	mov	r4, r3
   14040:	mov	r8, r2
   14044:	mov	r6, r0
   14048:	mov	r7, r1
   1404c:	ldr	sl, [sp, #32]
   14050:	ldr	r9, [sp, #36]	; 0x24
   14054:	bl	139fc <table_get_column_compare_function@@Base>
   14058:	cmp	r4, #0
   1405c:	mov	r5, r0
   14060:	beq	140b4 <table_subset_find@@Base+0x7c>
   14064:	cmp	sl, r9
   14068:	movle	r4, r9
   1406c:	ble	14088 <table_subset_find@@Base+0x50>
   14070:	mvn	r4, #0
   14074:	mov	r0, r4
   14078:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1407c:	sub	r4, r4, #1
   14080:	cmp	sl, r4
   14084:	bgt	14070 <table_subset_find@@Base+0x38>
   14088:	mov	r2, r7
   1408c:	mov	r1, r4
   14090:	mov	r0, r6
   14094:	bl	14c14 <table_get@@Base>
   14098:	mov	r1, r0
   1409c:	mov	r0, r8
   140a0:	blx	r5
   140a4:	cmp	r0, #0
   140a8:	bne	1407c <table_subset_find@@Base+0x44>
   140ac:	mov	r0, r4
   140b0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   140b4:	cmp	sl, r9
   140b8:	bgt	14070 <table_subset_find@@Base+0x38>
   140bc:	mov	r4, sl
   140c0:	b	140d0 <table_subset_find@@Base+0x98>
   140c4:	add	r4, r4, #1
   140c8:	cmp	r9, r4
   140cc:	blt	14070 <table_subset_find@@Base+0x38>
   140d0:	mov	r2, r7
   140d4:	mov	r1, r4
   140d8:	mov	r0, r6
   140dc:	bl	14c14 <table_get@@Base>
   140e0:	mov	r1, r0
   140e4:	mov	r0, r8
   140e8:	blx	r5
   140ec:	cmp	r0, #0
   140f0:	bne	140c4 <table_subset_find@@Base+0x8c>
   140f4:	mov	r0, r4
   140f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

000140fc <table_find@@Base>:
   140fc:	push	{r4, r5, r6, r7, lr}
   14100:	sub	sp, sp, #12
   14104:	mov	r5, r1
   14108:	mov	r6, r2
   1410c:	mov	r7, r3
   14110:	mov	r4, r0
   14114:	bl	14d2c <table_get_row_length@@Base>
   14118:	mov	ip, #0
   1411c:	mov	r3, r7
   14120:	mov	r2, r6
   14124:	mov	r1, r5
   14128:	str	ip, [sp]
   1412c:	sub	r0, r0, #1
   14130:	str	r0, [sp, #4]
   14134:	mov	r0, r4
   14138:	bl	14038 <table_subset_find@@Base>
   1413c:	add	sp, sp, #12
   14140:	pop	{r4, r5, r6, r7, pc}

00014144 <table_find_bool@@Base>:
   14144:	push	{lr}		; (str lr, [sp, #-4]!)
   14148:	sub	sp, sp, #12
   1414c:	add	ip, sp, #8
   14150:	strb	r2, [ip, #-1]!
   14154:	mov	r2, ip
   14158:	bl	140fc <table_find@@Base>
   1415c:	add	sp, sp, #12
   14160:	pop	{pc}		; (ldr pc, [sp], #4)

00014164 <table_find_int@@Base>:
   14164:	push	{lr}		; (str lr, [sp, #-4]!)
   14168:	sub	sp, sp, #12
   1416c:	add	ip, sp, #8
   14170:	str	r2, [ip, #-4]!
   14174:	mov	r2, ip
   14178:	bl	140fc <table_find@@Base>
   1417c:	add	sp, sp, #12
   14180:	pop	{pc}		; (ldr pc, [sp], #4)

00014184 <table_find_uint@@Base>:
   14184:	push	{lr}		; (str lr, [sp, #-4]!)
   14188:	sub	sp, sp, #12
   1418c:	add	ip, sp, #8
   14190:	str	r2, [ip, #-4]!
   14194:	mov	r2, ip
   14198:	bl	140fc <table_find@@Base>
   1419c:	add	sp, sp, #12
   141a0:	pop	{pc}		; (ldr pc, [sp], #4)

000141a4 <table_find_int8@@Base>:
   141a4:	push	{lr}		; (str lr, [sp, #-4]!)
   141a8:	sub	sp, sp, #12
   141ac:	add	ip, sp, #8
   141b0:	strb	r2, [ip, #-1]!
   141b4:	mov	r2, ip
   141b8:	bl	140fc <table_find@@Base>
   141bc:	add	sp, sp, #12
   141c0:	pop	{pc}		; (ldr pc, [sp], #4)

000141c4 <table_find_uint8@@Base>:
   141c4:	push	{lr}		; (str lr, [sp, #-4]!)
   141c8:	sub	sp, sp, #12
   141cc:	add	ip, sp, #8
   141d0:	strb	r2, [ip, #-1]!
   141d4:	mov	r2, ip
   141d8:	bl	140fc <table_find@@Base>
   141dc:	add	sp, sp, #12
   141e0:	pop	{pc}		; (ldr pc, [sp], #4)

000141e4 <table_find_int16@@Base>:
   141e4:	push	{lr}		; (str lr, [sp, #-4]!)
   141e8:	sub	sp, sp, #12
   141ec:	add	ip, sp, #8
   141f0:	strh	r2, [ip, #-2]!
   141f4:	mov	r2, ip
   141f8:	bl	140fc <table_find@@Base>
   141fc:	add	sp, sp, #12
   14200:	pop	{pc}		; (ldr pc, [sp], #4)

00014204 <table_find_uint16@@Base>:
   14204:	push	{lr}		; (str lr, [sp, #-4]!)
   14208:	sub	sp, sp, #12
   1420c:	add	ip, sp, #8
   14210:	strh	r2, [ip, #-2]!
   14214:	mov	r2, ip
   14218:	bl	140fc <table_find@@Base>
   1421c:	add	sp, sp, #12
   14220:	pop	{pc}		; (ldr pc, [sp], #4)

00014224 <table_find_int32@@Base>:
   14224:	push	{lr}		; (str lr, [sp, #-4]!)
   14228:	sub	sp, sp, #12
   1422c:	add	ip, sp, #8
   14230:	str	r2, [ip, #-4]!
   14234:	mov	r2, ip
   14238:	bl	140fc <table_find@@Base>
   1423c:	add	sp, sp, #12
   14240:	pop	{pc}		; (ldr pc, [sp], #4)

00014244 <table_find_uint32@@Base>:
   14244:	push	{lr}		; (str lr, [sp, #-4]!)
   14248:	sub	sp, sp, #12
   1424c:	add	ip, sp, #8
   14250:	str	r2, [ip, #-4]!
   14254:	mov	r2, ip
   14258:	bl	140fc <table_find@@Base>
   1425c:	add	sp, sp, #12
   14260:	pop	{pc}		; (ldr pc, [sp], #4)

00014264 <table_find_int64@@Base>:
   14264:	push	{lr}		; (str lr, [sp, #-4]!)
   14268:	sub	sp, sp, #12
   1426c:	add	ip, sp, #8
   14270:	strd	r2, [ip, #-8]!
   14274:	ldr	r3, [sp, #16]
   14278:	mov	r2, ip
   1427c:	bl	140fc <table_find@@Base>
   14280:	add	sp, sp, #12
   14284:	pop	{pc}		; (ldr pc, [sp], #4)

00014288 <table_find_uint64@@Base>:
   14288:	push	{lr}		; (str lr, [sp, #-4]!)
   1428c:	sub	sp, sp, #12
   14290:	add	ip, sp, #8
   14294:	strd	r2, [ip, #-8]!
   14298:	ldr	r3, [sp, #16]
   1429c:	mov	r2, ip
   142a0:	bl	140fc <table_find@@Base>
   142a4:	add	sp, sp, #12
   142a8:	pop	{pc}		; (ldr pc, [sp], #4)

000142ac <table_find_short@@Base>:
   142ac:	push	{lr}		; (str lr, [sp, #-4]!)
   142b0:	sub	sp, sp, #12
   142b4:	add	ip, sp, #8
   142b8:	strh	r2, [ip, #-2]!
   142bc:	mov	r2, ip
   142c0:	bl	140fc <table_find@@Base>
   142c4:	add	sp, sp, #12
   142c8:	pop	{pc}		; (ldr pc, [sp], #4)

000142cc <table_find_ushort@@Base>:
   142cc:	push	{lr}		; (str lr, [sp, #-4]!)
   142d0:	sub	sp, sp, #12
   142d4:	add	ip, sp, #8
   142d8:	strh	r2, [ip, #-2]!
   142dc:	mov	r2, ip
   142e0:	bl	140fc <table_find@@Base>
   142e4:	add	sp, sp, #12
   142e8:	pop	{pc}		; (ldr pc, [sp], #4)

000142ec <table_find_long@@Base>:
   142ec:	push	{lr}		; (str lr, [sp, #-4]!)
   142f0:	sub	sp, sp, #12
   142f4:	add	ip, sp, #8
   142f8:	str	r2, [ip, #-4]!
   142fc:	mov	r2, ip
   14300:	bl	140fc <table_find@@Base>
   14304:	add	sp, sp, #12
   14308:	pop	{pc}		; (ldr pc, [sp], #4)

0001430c <table_find_ulong@@Base>:
   1430c:	push	{lr}		; (str lr, [sp, #-4]!)
   14310:	sub	sp, sp, #12
   14314:	add	ip, sp, #8
   14318:	str	r2, [ip, #-4]!
   1431c:	mov	r2, ip
   14320:	bl	140fc <table_find@@Base>
   14324:	add	sp, sp, #12
   14328:	pop	{pc}		; (ldr pc, [sp], #4)

0001432c <table_find_llong@@Base>:
   1432c:	push	{lr}		; (str lr, [sp, #-4]!)
   14330:	sub	sp, sp, #12
   14334:	add	ip, sp, #8
   14338:	strd	r2, [ip, #-8]!
   1433c:	ldr	r3, [sp, #16]
   14340:	mov	r2, ip
   14344:	bl	140fc <table_find@@Base>
   14348:	add	sp, sp, #12
   1434c:	pop	{pc}		; (ldr pc, [sp], #4)

00014350 <table_find_ullong@@Base>:
   14350:	push	{lr}		; (str lr, [sp, #-4]!)
   14354:	sub	sp, sp, #12
   14358:	add	ip, sp, #8
   1435c:	strd	r2, [ip, #-8]!
   14360:	ldr	r3, [sp, #16]
   14364:	mov	r2, ip
   14368:	bl	140fc <table_find@@Base>
   1436c:	add	sp, sp, #12
   14370:	pop	{pc}		; (ldr pc, [sp], #4)

00014374 <table_find_float@@Base>:
   14374:	push	{lr}		; (str lr, [sp, #-4]!)
   14378:	sub	sp, sp, #12
   1437c:	add	ip, sp, #8
   14380:	mov	r3, r2
   14384:	vstmdb	ip!, {s0}
   14388:	mov	r2, ip
   1438c:	bl	140fc <table_find@@Base>
   14390:	add	sp, sp, #12
   14394:	pop	{pc}		; (ldr pc, [sp], #4)

00014398 <table_find_double@@Base>:
   14398:	push	{lr}		; (str lr, [sp, #-4]!)
   1439c:	sub	sp, sp, #12
   143a0:	add	ip, sp, #8
   143a4:	mov	r3, r2
   143a8:	vstmdb	ip!, {d0}
   143ac:	mov	r2, ip
   143b0:	bl	140fc <table_find@@Base>
   143b4:	add	sp, sp, #12
   143b8:	pop	{pc}		; (ldr pc, [sp], #4)

000143bc <table_find_ldouble@@Base>:
   143bc:	push	{lr}		; (str lr, [sp, #-4]!)
   143c0:	sub	sp, sp, #12
   143c4:	add	ip, sp, #8
   143c8:	mov	r3, r2
   143cc:	vstmdb	ip!, {d0}
   143d0:	mov	r2, ip
   143d4:	bl	140fc <table_find@@Base>
   143d8:	add	sp, sp, #12
   143dc:	pop	{pc}		; (ldr pc, [sp], #4)

000143e0 <table_find_char@@Base>:
   143e0:	push	{lr}		; (str lr, [sp, #-4]!)
   143e4:	sub	sp, sp, #12
   143e8:	add	ip, sp, #8
   143ec:	strb	r2, [ip, #-1]!
   143f0:	mov	r2, ip
   143f4:	bl	140fc <table_find@@Base>
   143f8:	add	sp, sp, #12
   143fc:	pop	{pc}		; (ldr pc, [sp], #4)

00014400 <table_find_uchar@@Base>:
   14400:	push	{lr}		; (str lr, [sp, #-4]!)
   14404:	sub	sp, sp, #12
   14408:	add	ip, sp, #8
   1440c:	strb	r2, [ip, #-1]!
   14410:	mov	r2, ip
   14414:	bl	140fc <table_find@@Base>
   14418:	add	sp, sp, #12
   1441c:	pop	{pc}		; (ldr pc, [sp], #4)

00014420 <table_find_string@@Base>:
   14420:	push	{lr}		; (str lr, [sp, #-4]!)
   14424:	sub	sp, sp, #12
   14428:	add	ip, sp, #8
   1442c:	str	r2, [ip, #-4]!
   14430:	mov	r2, ip
   14434:	bl	140fc <table_find@@Base>
   14438:	add	sp, sp, #12
   1443c:	pop	{pc}		; (ldr pc, [sp], #4)

00014440 <table_find_ptr@@Base>:
   14440:	b	140fc <table_find@@Base>

00014444 <table_sorted_subset_find@@Base>:
   14444:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14448:	mov	r6, r0
   1444c:	ldr	r9, [sp, #40]	; 0x28
   14450:	ldr	fp, [sp, #44]	; 0x2c
   14454:	mov	r5, r1
   14458:	mov	r8, r2
   1445c:	mov	sl, r3
   14460:	mov	r1, r5
   14464:	mov	r0, r6
   14468:	bl	139fc <table_get_column_compare_function@@Base>
   1446c:	sub	r4, fp, r9
   14470:	mov	r2, r5
   14474:	add	r4, r4, r4, lsr #31
   14478:	add	r4, r9, r4, asr #1
   1447c:	mov	r1, r4
   14480:	mov	r7, r0
   14484:	mov	r0, r6
   14488:	bl	14c14 <table_get@@Base>
   1448c:	mov	r1, r0
   14490:	mov	r0, r8
   14494:	blx	r7
   14498:	cmp	fp, r9
   1449c:	blt	144b8 <table_sorted_subset_find@@Base+0x74>
   144a0:	cmp	r0, #0
   144a4:	beq	144c0 <table_sorted_subset_find@@Base+0x7c>
   144a8:	cmp	r0, #1
   144ac:	beq	14504 <table_sorted_subset_find@@Base+0xc0>
   144b0:	cmn	r0, #1
   144b4:	beq	144fc <table_sorted_subset_find@@Base+0xb8>
   144b8:	rsb	r0, r4, #0
   144bc:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   144c0:	cmp	sl, #0
   144c4:	subeq	r4, r4, #1
   144c8:	addne	r4, r4, #1
   144cc:	mov	r2, r5
   144d0:	mov	r1, r4
   144d4:	mov	r0, r6
   144d8:	bl	14c14 <table_get@@Base>
   144dc:	mov	r1, r8
   144e0:	blx	r7
   144e4:	cmp	r0, #0
   144e8:	beq	144c0 <table_sorted_subset_find@@Base+0x7c>
   144ec:	cmp	sl, #0
   144f0:	addeq	r0, r4, #1
   144f4:	subne	r0, r4, #1
   144f8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   144fc:	sub	fp, r4, #1
   14500:	b	14460 <table_sorted_subset_find@@Base+0x1c>
   14504:	mov	r9, r4
   14508:	b	14460 <table_sorted_subset_find@@Base+0x1c>

0001450c <table_sorted_find@@Base>:
   1450c:	push	{r4, r5, r6, r7, lr}
   14510:	sub	sp, sp, #12
   14514:	mov	r5, r1
   14518:	mov	r6, r2
   1451c:	mov	r7, r3
   14520:	mov	r4, r0
   14524:	bl	14d2c <table_get_row_length@@Base>
   14528:	mov	ip, #0
   1452c:	mov	r3, r7
   14530:	mov	r2, r6
   14534:	mov	r1, r5
   14538:	str	ip, [sp]
   1453c:	sub	r0, r0, #1
   14540:	str	r0, [sp, #4]
   14544:	mov	r0, r4
   14548:	bl	14444 <table_sorted_subset_find@@Base>
   1454c:	add	sp, sp, #12
   14550:	pop	{r4, r5, r6, r7, pc}

00014554 <table_sorted_find_int@@Base>:
   14554:	push	{lr}		; (str lr, [sp, #-4]!)
   14558:	sub	sp, sp, #12
   1455c:	add	ip, sp, #8
   14560:	str	r2, [ip, #-4]!
   14564:	mov	r2, ip
   14568:	bl	1450c <table_sorted_find@@Base>
   1456c:	add	sp, sp, #12
   14570:	pop	{pc}		; (ldr pc, [sp], #4)

00014574 <table_sorted_find_uint@@Base>:
   14574:	push	{lr}		; (str lr, [sp, #-4]!)
   14578:	sub	sp, sp, #12
   1457c:	add	ip, sp, #8
   14580:	str	r2, [ip, #-4]!
   14584:	mov	r2, ip
   14588:	bl	1450c <table_sorted_find@@Base>
   1458c:	add	sp, sp, #12
   14590:	pop	{pc}		; (ldr pc, [sp], #4)

00014594 <table_sorted_find_int8@@Base>:
   14594:	push	{lr}		; (str lr, [sp, #-4]!)
   14598:	sub	sp, sp, #12
   1459c:	add	ip, sp, #8
   145a0:	strb	r2, [ip, #-1]!
   145a4:	mov	r2, ip
   145a8:	bl	1450c <table_sorted_find@@Base>
   145ac:	add	sp, sp, #12
   145b0:	pop	{pc}		; (ldr pc, [sp], #4)

000145b4 <table_sorted_find_uint8@@Base>:
   145b4:	push	{lr}		; (str lr, [sp, #-4]!)
   145b8:	sub	sp, sp, #12
   145bc:	add	ip, sp, #8
   145c0:	strb	r2, [ip, #-1]!
   145c4:	mov	r2, ip
   145c8:	bl	1450c <table_sorted_find@@Base>
   145cc:	add	sp, sp, #12
   145d0:	pop	{pc}		; (ldr pc, [sp], #4)

000145d4 <table_sorted_find_int16@@Base>:
   145d4:	push	{lr}		; (str lr, [sp, #-4]!)
   145d8:	sub	sp, sp, #12
   145dc:	add	ip, sp, #8
   145e0:	strh	r2, [ip, #-2]!
   145e4:	mov	r2, ip
   145e8:	bl	1450c <table_sorted_find@@Base>
   145ec:	add	sp, sp, #12
   145f0:	pop	{pc}		; (ldr pc, [sp], #4)

000145f4 <table_sorted_find_uint16@@Base>:
   145f4:	push	{lr}		; (str lr, [sp, #-4]!)
   145f8:	sub	sp, sp, #12
   145fc:	add	ip, sp, #8
   14600:	strh	r2, [ip, #-2]!
   14604:	mov	r2, ip
   14608:	bl	1450c <table_sorted_find@@Base>
   1460c:	add	sp, sp, #12
   14610:	pop	{pc}		; (ldr pc, [sp], #4)

00014614 <table_sorted_find_int32@@Base>:
   14614:	push	{lr}		; (str lr, [sp, #-4]!)
   14618:	sub	sp, sp, #12
   1461c:	add	ip, sp, #8
   14620:	str	r2, [ip, #-4]!
   14624:	mov	r2, ip
   14628:	bl	1450c <table_sorted_find@@Base>
   1462c:	add	sp, sp, #12
   14630:	pop	{pc}		; (ldr pc, [sp], #4)

00014634 <table_sorted_find_uint32@@Base>:
   14634:	push	{lr}		; (str lr, [sp, #-4]!)
   14638:	sub	sp, sp, #12
   1463c:	add	ip, sp, #8
   14640:	str	r2, [ip, #-4]!
   14644:	mov	r2, ip
   14648:	bl	1450c <table_sorted_find@@Base>
   1464c:	add	sp, sp, #12
   14650:	pop	{pc}		; (ldr pc, [sp], #4)

00014654 <table_sorted_find_int64@@Base>:
   14654:	push	{lr}		; (str lr, [sp, #-4]!)
   14658:	sub	sp, sp, #12
   1465c:	add	ip, sp, #8
   14660:	strd	r2, [ip, #-8]!
   14664:	ldr	r3, [sp, #16]
   14668:	mov	r2, ip
   1466c:	bl	1450c <table_sorted_find@@Base>
   14670:	add	sp, sp, #12
   14674:	pop	{pc}		; (ldr pc, [sp], #4)

00014678 <table_sorted_find_uint64@@Base>:
   14678:	push	{lr}		; (str lr, [sp, #-4]!)
   1467c:	sub	sp, sp, #12
   14680:	add	ip, sp, #8
   14684:	strd	r2, [ip, #-8]!
   14688:	ldr	r3, [sp, #16]
   1468c:	mov	r2, ip
   14690:	bl	1450c <table_sorted_find@@Base>
   14694:	add	sp, sp, #12
   14698:	pop	{pc}		; (ldr pc, [sp], #4)

0001469c <table_sorted_find_short@@Base>:
   1469c:	push	{lr}		; (str lr, [sp, #-4]!)
   146a0:	sub	sp, sp, #12
   146a4:	add	ip, sp, #8
   146a8:	strh	r2, [ip, #-2]!
   146ac:	mov	r2, ip
   146b0:	bl	1450c <table_sorted_find@@Base>
   146b4:	add	sp, sp, #12
   146b8:	pop	{pc}		; (ldr pc, [sp], #4)

000146bc <table_sorted_find_ushort@@Base>:
   146bc:	push	{lr}		; (str lr, [sp, #-4]!)
   146c0:	sub	sp, sp, #12
   146c4:	add	ip, sp, #8
   146c8:	strh	r2, [ip, #-2]!
   146cc:	mov	r2, ip
   146d0:	bl	1450c <table_sorted_find@@Base>
   146d4:	add	sp, sp, #12
   146d8:	pop	{pc}		; (ldr pc, [sp], #4)

000146dc <table_sorted_find_long@@Base>:
   146dc:	push	{lr}		; (str lr, [sp, #-4]!)
   146e0:	sub	sp, sp, #12
   146e4:	add	ip, sp, #8
   146e8:	str	r2, [ip, #-4]!
   146ec:	mov	r2, ip
   146f0:	bl	1450c <table_sorted_find@@Base>
   146f4:	add	sp, sp, #12
   146f8:	pop	{pc}		; (ldr pc, [sp], #4)

000146fc <table_sorted_find_ulong@@Base>:
   146fc:	push	{lr}		; (str lr, [sp, #-4]!)
   14700:	sub	sp, sp, #12
   14704:	add	ip, sp, #8
   14708:	str	r2, [ip, #-4]!
   1470c:	mov	r2, ip
   14710:	bl	1450c <table_sorted_find@@Base>
   14714:	add	sp, sp, #12
   14718:	pop	{pc}		; (ldr pc, [sp], #4)

0001471c <table_sorted_find_llong@@Base>:
   1471c:	push	{lr}		; (str lr, [sp, #-4]!)
   14720:	sub	sp, sp, #12
   14724:	add	ip, sp, #8
   14728:	strd	r2, [ip, #-8]!
   1472c:	ldr	r3, [sp, #16]
   14730:	mov	r2, ip
   14734:	bl	1450c <table_sorted_find@@Base>
   14738:	add	sp, sp, #12
   1473c:	pop	{pc}		; (ldr pc, [sp], #4)

00014740 <table_sorted_find_ullong@@Base>:
   14740:	push	{lr}		; (str lr, [sp, #-4]!)
   14744:	sub	sp, sp, #12
   14748:	add	ip, sp, #8
   1474c:	strd	r2, [ip, #-8]!
   14750:	ldr	r3, [sp, #16]
   14754:	mov	r2, ip
   14758:	bl	1450c <table_sorted_find@@Base>
   1475c:	add	sp, sp, #12
   14760:	pop	{pc}		; (ldr pc, [sp], #4)

00014764 <table_sorted_find_float@@Base>:
   14764:	push	{lr}		; (str lr, [sp, #-4]!)
   14768:	sub	sp, sp, #12
   1476c:	add	ip, sp, #8
   14770:	mov	r3, r2
   14774:	vstmdb	ip!, {s0}
   14778:	mov	r2, ip
   1477c:	bl	1450c <table_sorted_find@@Base>
   14780:	add	sp, sp, #12
   14784:	pop	{pc}		; (ldr pc, [sp], #4)

00014788 <table_sorted_find_double@@Base>:
   14788:	push	{lr}		; (str lr, [sp, #-4]!)
   1478c:	sub	sp, sp, #12
   14790:	add	ip, sp, #8
   14794:	mov	r3, r2
   14798:	vstmdb	ip!, {d0}
   1479c:	mov	r2, ip
   147a0:	bl	1450c <table_sorted_find@@Base>
   147a4:	add	sp, sp, #12
   147a8:	pop	{pc}		; (ldr pc, [sp], #4)

000147ac <table_sorted_find_ldouble@@Base>:
   147ac:	push	{lr}		; (str lr, [sp, #-4]!)
   147b0:	sub	sp, sp, #12
   147b4:	add	ip, sp, #8
   147b8:	mov	r3, r2
   147bc:	vstmdb	ip!, {d0}
   147c0:	mov	r2, ip
   147c4:	bl	1450c <table_sorted_find@@Base>
   147c8:	add	sp, sp, #12
   147cc:	pop	{pc}		; (ldr pc, [sp], #4)

000147d0 <table_sorted_find_char@@Base>:
   147d0:	push	{lr}		; (str lr, [sp, #-4]!)
   147d4:	sub	sp, sp, #12
   147d8:	add	ip, sp, #8
   147dc:	strb	r2, [ip, #-1]!
   147e0:	mov	r2, ip
   147e4:	bl	1450c <table_sorted_find@@Base>
   147e8:	add	sp, sp, #12
   147ec:	pop	{pc}		; (ldr pc, [sp], #4)

000147f0 <table_sorted_find_uchar@@Base>:
   147f0:	push	{lr}		; (str lr, [sp, #-4]!)
   147f4:	sub	sp, sp, #12
   147f8:	add	ip, sp, #8
   147fc:	strb	r2, [ip, #-1]!
   14800:	mov	r2, ip
   14804:	bl	1450c <table_sorted_find@@Base>
   14808:	add	sp, sp, #12
   1480c:	pop	{pc}		; (ldr pc, [sp], #4)

00014810 <table_sorted_find_string@@Base>:
   14810:	b	1450c <table_sorted_find@@Base>

00014814 <table_sorted_find_ptr@@Base>:
   14814:	b	1450c <table_sorted_find@@Base>

00014818 <table_sorted_subset_find_int@@Base>:
   14818:	push	{r4, lr}
   1481c:	sub	sp, sp, #16
   14820:	add	ip, sp, #16
   14824:	ldr	r4, [sp, #24]
   14828:	ldr	lr, [sp, #28]
   1482c:	str	r2, [ip, #-4]!
   14830:	str	r4, [sp]
   14834:	mov	r2, ip
   14838:	str	lr, [sp, #4]
   1483c:	bl	14444 <table_sorted_subset_find@@Base>
   14840:	add	sp, sp, #16
   14844:	pop	{r4, pc}

00014848 <table_sorted_subset_find_uint@@Base>:
   14848:	push	{r4, lr}
   1484c:	sub	sp, sp, #16
   14850:	add	ip, sp, #16
   14854:	ldr	r4, [sp, #24]
   14858:	ldr	lr, [sp, #28]
   1485c:	str	r2, [ip, #-4]!
   14860:	str	r4, [sp]
   14864:	mov	r2, ip
   14868:	str	lr, [sp, #4]
   1486c:	bl	14444 <table_sorted_subset_find@@Base>
   14870:	add	sp, sp, #16
   14874:	pop	{r4, pc}

00014878 <table_sorted_subset_find_int8@@Base>:
   14878:	push	{r4, lr}
   1487c:	sub	sp, sp, #16
   14880:	add	ip, sp, #16
   14884:	ldr	r4, [sp, #24]
   14888:	ldr	lr, [sp, #28]
   1488c:	strb	r2, [ip, #-1]!
   14890:	str	r4, [sp]
   14894:	mov	r2, ip
   14898:	str	lr, [sp, #4]
   1489c:	bl	14444 <table_sorted_subset_find@@Base>
   148a0:	add	sp, sp, #16
   148a4:	pop	{r4, pc}

000148a8 <table_sorted_subset_find_uint8@@Base>:
   148a8:	push	{r4, lr}
   148ac:	sub	sp, sp, #16
   148b0:	add	ip, sp, #16
   148b4:	ldr	r4, [sp, #24]
   148b8:	ldr	lr, [sp, #28]
   148bc:	strb	r2, [ip, #-1]!
   148c0:	str	r4, [sp]
   148c4:	mov	r2, ip
   148c8:	str	lr, [sp, #4]
   148cc:	bl	14444 <table_sorted_subset_find@@Base>
   148d0:	add	sp, sp, #16
   148d4:	pop	{r4, pc}

000148d8 <table_sorted_subset_find_int16@@Base>:
   148d8:	push	{r4, lr}
   148dc:	sub	sp, sp, #16
   148e0:	add	ip, sp, #16
   148e4:	ldr	r4, [sp, #24]
   148e8:	ldr	lr, [sp, #28]
   148ec:	strh	r2, [ip, #-2]!
   148f0:	str	r4, [sp]
   148f4:	mov	r2, ip
   148f8:	str	lr, [sp, #4]
   148fc:	bl	14444 <table_sorted_subset_find@@Base>
   14900:	add	sp, sp, #16
   14904:	pop	{r4, pc}

00014908 <table_sorted_subset_find_uint16@@Base>:
   14908:	push	{r4, lr}
   1490c:	sub	sp, sp, #16
   14910:	add	ip, sp, #16
   14914:	ldr	r4, [sp, #24]
   14918:	ldr	lr, [sp, #28]
   1491c:	strh	r2, [ip, #-2]!
   14920:	str	r4, [sp]
   14924:	mov	r2, ip
   14928:	str	lr, [sp, #4]
   1492c:	bl	14444 <table_sorted_subset_find@@Base>
   14930:	add	sp, sp, #16
   14934:	pop	{r4, pc}

00014938 <table_sorted_subset_find_int32@@Base>:
   14938:	push	{r4, lr}
   1493c:	sub	sp, sp, #16
   14940:	add	ip, sp, #16
   14944:	ldr	r4, [sp, #24]
   14948:	ldr	lr, [sp, #28]
   1494c:	str	r2, [ip, #-4]!
   14950:	str	r4, [sp]
   14954:	mov	r2, ip
   14958:	str	lr, [sp, #4]
   1495c:	bl	14444 <table_sorted_subset_find@@Base>
   14960:	add	sp, sp, #16
   14964:	pop	{r4, pc}

00014968 <table_sorted_subset_find_uint32@@Base>:
   14968:	push	{r4, lr}
   1496c:	sub	sp, sp, #16
   14970:	add	ip, sp, #16
   14974:	ldr	r4, [sp, #24]
   14978:	ldr	lr, [sp, #28]
   1497c:	str	r2, [ip, #-4]!
   14980:	str	r4, [sp]
   14984:	mov	r2, ip
   14988:	str	lr, [sp, #4]
   1498c:	bl	14444 <table_sorted_subset_find@@Base>
   14990:	add	sp, sp, #16
   14994:	pop	{r4, pc}

00014998 <table_sorted_subset_find_int64@@Base>:
   14998:	push	{r4, lr}
   1499c:	sub	sp, sp, #16
   149a0:	add	ip, sp, #16
   149a4:	ldr	r4, [sp, #28]
   149a8:	ldr	lr, [sp, #32]
   149ac:	strd	r2, [ip, #-8]!
   149b0:	str	r4, [sp]
   149b4:	mov	r2, ip
   149b8:	str	lr, [sp, #4]
   149bc:	ldr	r3, [sp, #24]
   149c0:	bl	14444 <table_sorted_subset_find@@Base>
   149c4:	add	sp, sp, #16
   149c8:	pop	{r4, pc}

000149cc <table_sorted_subset_find_uint64@@Base>:
   149cc:	push	{r4, lr}
   149d0:	sub	sp, sp, #16
   149d4:	add	ip, sp, #16
   149d8:	ldr	r4, [sp, #28]
   149dc:	ldr	lr, [sp, #32]
   149e0:	strd	r2, [ip, #-8]!
   149e4:	str	r4, [sp]
   149e8:	mov	r2, ip
   149ec:	str	lr, [sp, #4]
   149f0:	ldr	r3, [sp, #24]
   149f4:	bl	14444 <table_sorted_subset_find@@Base>
   149f8:	add	sp, sp, #16
   149fc:	pop	{r4, pc}

00014a00 <table_sorted_subset_find_short@@Base>:
   14a00:	push	{r4, lr}
   14a04:	sub	sp, sp, #16
   14a08:	add	ip, sp, #16
   14a0c:	ldr	r4, [sp, #24]
   14a10:	ldr	lr, [sp, #28]
   14a14:	strh	r2, [ip, #-2]!
   14a18:	str	r4, [sp]
   14a1c:	mov	r2, ip
   14a20:	str	lr, [sp, #4]
   14a24:	bl	14444 <table_sorted_subset_find@@Base>
   14a28:	add	sp, sp, #16
   14a2c:	pop	{r4, pc}

00014a30 <table_sorted_subset_find_ushort@@Base>:
   14a30:	push	{r4, lr}
   14a34:	sub	sp, sp, #16
   14a38:	add	ip, sp, #16
   14a3c:	ldr	r4, [sp, #24]
   14a40:	ldr	lr, [sp, #28]
   14a44:	strh	r2, [ip, #-2]!
   14a48:	str	r4, [sp]
   14a4c:	mov	r2, ip
   14a50:	str	lr, [sp, #4]
   14a54:	bl	14444 <table_sorted_subset_find@@Base>
   14a58:	add	sp, sp, #16
   14a5c:	pop	{r4, pc}

00014a60 <table_sorted_subset_find_long@@Base>:
   14a60:	push	{r4, lr}
   14a64:	sub	sp, sp, #16
   14a68:	add	ip, sp, #16
   14a6c:	ldr	r4, [sp, #24]
   14a70:	ldr	lr, [sp, #28]
   14a74:	str	r2, [ip, #-4]!
   14a78:	str	r4, [sp]
   14a7c:	mov	r2, ip
   14a80:	str	lr, [sp, #4]
   14a84:	bl	14444 <table_sorted_subset_find@@Base>
   14a88:	add	sp, sp, #16
   14a8c:	pop	{r4, pc}

00014a90 <table_sorted_subset_find_ulong@@Base>:
   14a90:	push	{r4, lr}
   14a94:	sub	sp, sp, #16
   14a98:	add	ip, sp, #16
   14a9c:	ldr	r4, [sp, #24]
   14aa0:	ldr	lr, [sp, #28]
   14aa4:	str	r2, [ip, #-4]!
   14aa8:	str	r4, [sp]
   14aac:	mov	r2, ip
   14ab0:	str	lr, [sp, #4]
   14ab4:	bl	14444 <table_sorted_subset_find@@Base>
   14ab8:	add	sp, sp, #16
   14abc:	pop	{r4, pc}

00014ac0 <table_sorted_subset_find_llong@@Base>:
   14ac0:	push	{r4, lr}
   14ac4:	sub	sp, sp, #16
   14ac8:	add	ip, sp, #16
   14acc:	ldr	r4, [sp, #28]
   14ad0:	ldr	lr, [sp, #32]
   14ad4:	strd	r2, [ip, #-8]!
   14ad8:	str	r4, [sp]
   14adc:	mov	r2, ip
   14ae0:	str	lr, [sp, #4]
   14ae4:	ldr	r3, [sp, #24]
   14ae8:	bl	14444 <table_sorted_subset_find@@Base>
   14aec:	add	sp, sp, #16
   14af0:	pop	{r4, pc}

00014af4 <table_sorted_subset_find_ullong@@Base>:
   14af4:	push	{r4, lr}
   14af8:	sub	sp, sp, #16
   14afc:	add	ip, sp, #16
   14b00:	ldr	r4, [sp, #28]
   14b04:	ldr	lr, [sp, #32]
   14b08:	strd	r2, [ip, #-8]!
   14b0c:	str	r4, [sp]
   14b10:	mov	r2, ip
   14b14:	str	lr, [sp, #4]
   14b18:	ldr	r3, [sp, #24]
   14b1c:	bl	14444 <table_sorted_subset_find@@Base>
   14b20:	add	sp, sp, #16
   14b24:	pop	{r4, pc}

00014b28 <table_sorted_subset_find_float@@Base>:
   14b28:	push	{lr}		; (str lr, [sp, #-4]!)
   14b2c:	sub	sp, sp, #20
   14b30:	add	ip, sp, #16
   14b34:	ldr	lr, [sp, #24]
   14b38:	vstmdb	ip!, {s0}
   14b3c:	stm	sp, {r3, lr}
   14b40:	mov	r3, r2
   14b44:	mov	r2, ip
   14b48:	bl	14444 <table_sorted_subset_find@@Base>
   14b4c:	add	sp, sp, #20
   14b50:	pop	{pc}		; (ldr pc, [sp], #4)

00014b54 <table_sorted_subset_find_double@@Base>:
   14b54:	push	{lr}		; (str lr, [sp, #-4]!)
   14b58:	sub	sp, sp, #20
   14b5c:	add	ip, sp, #16
   14b60:	ldr	lr, [sp, #24]
   14b64:	vstmdb	ip!, {d0}
   14b68:	stm	sp, {r3, lr}
   14b6c:	mov	r3, r2
   14b70:	mov	r2, ip
   14b74:	bl	14444 <table_sorted_subset_find@@Base>
   14b78:	add	sp, sp, #20
   14b7c:	pop	{pc}		; (ldr pc, [sp], #4)

00014b80 <table_sorted_subset_find_ldouble@@Base>:
   14b80:	push	{lr}		; (str lr, [sp, #-4]!)
   14b84:	sub	sp, sp, #20
   14b88:	add	ip, sp, #16
   14b8c:	ldr	lr, [sp, #24]
   14b90:	vstmdb	ip!, {d0}
   14b94:	stm	sp, {r3, lr}
   14b98:	mov	r3, r2
   14b9c:	mov	r2, ip
   14ba0:	bl	14444 <table_sorted_subset_find@@Base>
   14ba4:	add	sp, sp, #20
   14ba8:	pop	{pc}		; (ldr pc, [sp], #4)

00014bac <table_sorted_subset_find_char@@Base>:
   14bac:	push	{r4, lr}
   14bb0:	sub	sp, sp, #16
   14bb4:	add	ip, sp, #16
   14bb8:	ldr	r4, [sp, #24]
   14bbc:	ldr	lr, [sp, #28]
   14bc0:	strb	r2, [ip, #-1]!
   14bc4:	str	r4, [sp]
   14bc8:	mov	r2, ip
   14bcc:	str	lr, [sp, #4]
   14bd0:	bl	14444 <table_sorted_subset_find@@Base>
   14bd4:	add	sp, sp, #16
   14bd8:	pop	{r4, pc}

00014bdc <table_sorted_subset_find_uchar@@Base>:
   14bdc:	push	{r4, lr}
   14be0:	sub	sp, sp, #16
   14be4:	add	ip, sp, #16
   14be8:	ldr	r4, [sp, #24]
   14bec:	ldr	lr, [sp, #28]
   14bf0:	strb	r2, [ip, #-1]!
   14bf4:	str	r4, [sp]
   14bf8:	mov	r2, ip
   14bfc:	str	lr, [sp, #4]
   14c00:	bl	14444 <table_sorted_subset_find@@Base>
   14c04:	add	sp, sp, #16
   14c08:	pop	{r4, pc}

00014c0c <table_sorted_subset_find_string@@Base>:
   14c0c:	b	14444 <table_sorted_subset_find@@Base>

00014c10 <table_sorted_subset_find_ptr@@Base>:
   14c10:	b	14444 <table_sorted_subset_find@@Base>

00014c14 <table_get@@Base>:
   14c14:	push	{r4, lr}
   14c18:	bl	16224 <table_get_cell_ptr@@Base>
   14c1c:	ldr	r0, [r0]
   14c20:	pop	{r4, pc}

00014c24 <table_get_bool@@Base>:
   14c24:	push	{r4, lr}
   14c28:	bl	14c14 <table_get@@Base>
   14c2c:	ldrb	r0, [r0]
   14c30:	pop	{r4, pc}

00014c34 <table_get_int8@@Base>:
   14c34:	push	{r4, lr}
   14c38:	bl	14c14 <table_get@@Base>
   14c3c:	ldrsb	r0, [r0]
   14c40:	pop	{r4, pc}

00014c44 <table_get_int32@@Base>:
   14c44:	push	{r4, lr}
   14c48:	bl	14c14 <table_get@@Base>
   14c4c:	ldr	r0, [r0]
   14c50:	pop	{r4, pc}

00014c54 <table_get_int@@Base>:
   14c54:	b	14c44 <table_get_int32@@Base>

00014c58 <table_get_uint32@@Base>:
   14c58:	push	{r4, lr}
   14c5c:	bl	14c14 <table_get@@Base>
   14c60:	ldr	r0, [r0]
   14c64:	pop	{r4, pc}

00014c68 <table_get_uint@@Base>:
   14c68:	b	14c58 <table_get_uint32@@Base>

00014c6c <table_get_short@@Base>:
   14c6c:	push	{r4, lr}
   14c70:	bl	14c14 <table_get@@Base>
   14c74:	ldrsh	r0, [r0]
   14c78:	pop	{r4, pc}

00014c7c <table_get_int16@@Base>:
   14c7c:	b	14c6c <table_get_short@@Base>

00014c80 <table_get_ushort@@Base>:
   14c80:	push	{r4, lr}
   14c84:	bl	14c14 <table_get@@Base>
   14c88:	ldrh	r0, [r0]
   14c8c:	pop	{r4, pc}

00014c90 <table_get_uint16@@Base>:
   14c90:	b	14c80 <table_get_ushort@@Base>

00014c94 <table_get_long@@Base>:
   14c94:	push	{r4, lr}
   14c98:	bl	14c14 <table_get@@Base>
   14c9c:	ldr	r0, [r0]
   14ca0:	pop	{r4, pc}

00014ca4 <table_get_ulong@@Base>:
   14ca4:	push	{r4, lr}
   14ca8:	bl	14c14 <table_get@@Base>
   14cac:	ldr	r0, [r0]
   14cb0:	pop	{r4, pc}

00014cb4 <table_get_llong@@Base>:
   14cb4:	push	{r4, lr}
   14cb8:	bl	14c14 <table_get@@Base>
   14cbc:	ldrd	r0, [r0]
   14cc0:	pop	{r4, pc}

00014cc4 <table_get_int64@@Base>:
   14cc4:	b	14cb4 <table_get_llong@@Base>

00014cc8 <table_get_ullong@@Base>:
   14cc8:	push	{r4, lr}
   14ccc:	bl	14c14 <table_get@@Base>
   14cd0:	ldrd	r0, [r0]
   14cd4:	pop	{r4, pc}

00014cd8 <table_get_uint64@@Base>:
   14cd8:	b	14cc8 <table_get_ullong@@Base>

00014cdc <table_get_float@@Base>:
   14cdc:	push	{r4, lr}
   14ce0:	bl	14c14 <table_get@@Base>
   14ce4:	vldr	s0, [r0]
   14ce8:	pop	{r4, pc}

00014cec <table_get_double@@Base>:
   14cec:	push	{r4, lr}
   14cf0:	bl	14c14 <table_get@@Base>
   14cf4:	vldr	d0, [r0]
   14cf8:	pop	{r4, pc}

00014cfc <table_get_ldouble@@Base>:
   14cfc:	push	{r4, lr}
   14d00:	bl	14c14 <table_get@@Base>
   14d04:	vldr	d0, [r0]
   14d08:	pop	{r4, pc}

00014d0c <table_get_uchar@@Base>:
   14d0c:	push	{r4, lr}
   14d10:	bl	14c14 <table_get@@Base>
   14d14:	ldrb	r0, [r0]
   14d18:	pop	{r4, pc}

00014d1c <table_get_char@@Base>:
   14d1c:	b	14d0c <table_get_uchar@@Base>

00014d20 <table_get_uint8@@Base>:
   14d20:	b	14d0c <table_get_uchar@@Base>

00014d24 <table_get_string@@Base>:
   14d24:	b	14c14 <table_get@@Base>

00014d28 <table_get_ptr@@Base>:
   14d28:	b	14c14 <table_get@@Base>

00014d2c <table_get_row_length@@Base>:
   14d2c:	ldr	r0, [r0, #20]
   14d30:	bx	lr

00014d34 <table_get_row_ptr@@Base>:
   14d34:	ldr	r0, [r0, #16]
   14d38:	add	r0, r0, r1, lsl #2
   14d3c:	bx	lr

00014d40 <table_row_init@@Base>:
   14d40:	push	{r4, r5, r6, lr}
   14d44:	mov	r5, r0
   14d48:	bl	14d34 <table_get_row_ptr@@Base>
   14d4c:	mov	r4, r0
   14d50:	ldr	r0, [r5, #12]
   14d54:	lsl	r0, r0, #2
   14d58:	bl	12990 <malloc@plt>
   14d5c:	str	r0, [r4]
   14d60:	pop	{r4, r5, r6, pc}

00014d64 <table_add_row@@Base>:
   14d64:	push	{r4, r5, r6, r7, r8, lr}
   14d68:	mov	r5, r0
   14d6c:	bl	14d2c <table_get_row_length@@Base>
   14d70:	ldr	r4, [r5, #24]
   14d74:	mov	r1, r4
   14d78:	bl	164ac <table_cell_nullify@@Base+0x218>
   14d7c:	cmp	r1, #0
   14d80:	bne	14da0 <table_add_row@@Base+0x3c>
   14d84:	ldr	r1, [r5, #28]
   14d88:	ldr	r0, [r5, #16]
   14d8c:	add	r1, r4, r1
   14d90:	str	r1, [r5, #28]
   14d94:	lsl	r1, r1, #2
   14d98:	bl	12978 <realloc@plt>
   14d9c:	str	r0, [r5, #16]
   14da0:	mov	r0, r5
   14da4:	bl	14d2c <table_get_row_length@@Base>
   14da8:	mov	r6, r0
   14dac:	mov	r0, r5
   14db0:	bl	13658 <table_get_column_length@@Base>
   14db4:	mov	r1, r6
   14db8:	mov	r7, r0
   14dbc:	mov	r0, r5
   14dc0:	bl	14d40 <table_row_init@@Base>
   14dc4:	cmp	r7, #0
   14dc8:	ble	14dec <table_add_row@@Base+0x88>
   14dcc:	mov	r4, #0
   14dd0:	mov	r2, r4
   14dd4:	mov	r1, r6
   14dd8:	add	r4, r4, #1
   14ddc:	mov	r0, r5
   14de0:	bl	1623c <table_cell_init@@Base>
   14de4:	cmp	r7, r4
   14de8:	bne	14dd0 <table_add_row@@Base+0x6c>
   14dec:	mov	r0, r5
   14df0:	bl	14d2c <table_get_row_length@@Base>
   14df4:	mov	r3, #2
   14df8:	mvn	r2, #0
   14dfc:	mov	r1, r0
   14e00:	mov	r0, r5
   14e04:	bl	135d0 <table_notify@@Base>
   14e08:	ldr	r0, [r5, #20]
   14e0c:	add	r3, r0, #1
   14e10:	str	r3, [r5, #20]
   14e14:	pop	{r4, r5, r6, r7, r8, pc}

00014e18 <table_row_destroy@@Base>:
   14e18:	push	{r4, r5, r6, r7, r8, lr}
   14e1c:	mov	r7, r1
   14e20:	mov	r6, r0
   14e24:	bl	13658 <table_get_column_length@@Base>
   14e28:	mov	r1, r7
   14e2c:	mov	r5, r0
   14e30:	mov	r0, r6
   14e34:	bl	14d34 <table_get_row_ptr@@Base>
   14e38:	cmp	r5, #0
   14e3c:	movgt	r4, #0
   14e40:	mov	r8, r0
   14e44:	ble	14e64 <table_row_destroy@@Base+0x4c>
   14e48:	mov	r2, r4
   14e4c:	mov	r1, r7
   14e50:	add	r4, r4, #1
   14e54:	mov	r0, r6
   14e58:	bl	16250 <table_cell_destroy@@Base>
   14e5c:	cmp	r5, r4
   14e60:	bne	14e48 <table_row_destroy@@Base+0x30>
   14e64:	ldr	r0, [r8]
   14e68:	cmp	r0, #0
   14e6c:	beq	14e78 <table_row_destroy@@Base+0x60>
   14e70:	pop	{r4, r5, r6, r7, r8, lr}
   14e74:	b	1296c <free@plt>
   14e78:	pop	{r4, r5, r6, r7, r8, pc}

00014e7c <table_remove_row@@Base>:
   14e7c:	push	{r4, r5, r6, r7, r8, lr}
   14e80:	mov	r5, r0
   14e84:	mov	r6, r1
   14e88:	bl	14d2c <table_get_row_length@@Base>
   14e8c:	mov	r7, r0
   14e90:	mov	r0, r5
   14e94:	bl	13658 <table_get_column_length@@Base>
   14e98:	subs	r8, r0, #0
   14e9c:	movgt	r4, #0
   14ea0:	ble	14ee4 <table_remove_row@@Base+0x68>
   14ea4:	mov	r1, r4
   14ea8:	mov	r0, r5
   14eac:	bl	13974 <table_get_column_data_type@@Base>
   14eb0:	mov	r2, r4
   14eb4:	mov	r1, r6
   14eb8:	add	r4, r4, #1
   14ebc:	cmp	r0, #23
   14ec0:	mov	r0, r5
   14ec4:	beq	14edc <table_remove_row@@Base+0x60>
   14ec8:	bl	16224 <table_get_cell_ptr@@Base>
   14ecc:	ldr	r3, [r0]
   14ed0:	subs	r0, r3, #0
   14ed4:	beq	14edc <table_remove_row@@Base+0x60>
   14ed8:	bl	1296c <free@plt>
   14edc:	cmp	r8, r4
   14ee0:	bne	14ea4 <table_remove_row@@Base+0x28>
   14ee4:	mov	r1, r6
   14ee8:	mov	r0, r5
   14eec:	bl	14d34 <table_get_row_ptr@@Base>
   14ef0:	ldr	r0, [r0]
   14ef4:	cmp	r0, #0
   14ef8:	beq	14f00 <table_remove_row@@Base+0x84>
   14efc:	bl	1296c <free@plt>
   14f00:	sub	r0, r7, #1
   14f04:	cmp	r6, r0
   14f08:	lsllt	r2, r6, #2
   14f0c:	movlt	r3, r6
   14f10:	bge	14f34 <table_remove_row@@Base+0xb8>
   14f14:	ldr	ip, [r5, #16]
   14f18:	add	r1, r2, #4
   14f1c:	add	r3, r3, #1
   14f20:	ldr	lr, [ip, r1]
   14f24:	cmp	r3, r0
   14f28:	str	lr, [ip, r2]
   14f2c:	mov	r2, r1
   14f30:	bne	14f14 <table_remove_row@@Base+0x98>
   14f34:	ldr	r3, [r5, #20]
   14f38:	mov	r0, r5
   14f3c:	sub	r3, r3, #1
   14f40:	str	r3, [r5, #20]
   14f44:	bl	14d2c <table_get_row_length@@Base>
   14f48:	ldr	r4, [r5, #24]
   14f4c:	mov	r1, r4
   14f50:	bl	164ac <table_cell_nullify@@Base+0x218>
   14f54:	cmp	r1, #0
   14f58:	bne	14f78 <table_remove_row@@Base+0xfc>
   14f5c:	ldr	r1, [r5, #28]
   14f60:	ldr	r0, [r5, #16]
   14f64:	sub	r1, r1, r4
   14f68:	str	r1, [r5, #28]
   14f6c:	lsl	r1, r1, #2
   14f70:	bl	12978 <realloc@plt>
   14f74:	str	r0, [r5, #16]
   14f78:	mov	r0, r5
   14f7c:	mov	r1, r6
   14f80:	mov	r3, #4
   14f84:	mvn	r2, #0
   14f88:	bl	135d0 <table_notify@@Base>
   14f8c:	mov	r0, #0
   14f90:	pop	{r4, r5, r6, r7, r8, pc}

00014f94 <table_set_row_ptr@@Base>:
   14f94:	ldr	r3, [r0, #16]
   14f98:	ldr	r2, [r2]
   14f9c:	str	r2, [r3, r1, lsl #2]
   14fa0:	bx	lr

00014fa4 <table_set@@Base>:
   14fa4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14fa8:	mov	r5, r0
   14fac:	mov	r6, r2
   14fb0:	ldr	r4, [sp, #32]
   14fb4:	mov	r9, r1
   14fb8:	mov	r7, r3
   14fbc:	bl	16224 <table_get_cell_ptr@@Base>
   14fc0:	mov	r1, r6
   14fc4:	mov	r8, r0
   14fc8:	mov	r0, r5
   14fcc:	bl	13660 <table_get_col_ptr@@Base>
   14fd0:	cmp	r4, #23
   14fd4:	addls	pc, pc, r4, lsl #2
   14fd8:	b	15050 <table_set@@Base+0xac>
   14fdc:	b	151f4 <table_set@@Base+0x250>
   14fe0:	b	151e4 <table_set@@Base+0x240>
   14fe4:	b	151d4 <table_set@@Base+0x230>
   14fe8:	b	151c4 <table_set@@Base+0x220>
   14fec:	b	151b4 <table_set@@Base+0x210>
   14ff0:	b	15190 <table_set@@Base+0x1ec>
   14ff4:	b	15180 <table_set@@Base+0x1dc>
   14ff8:	b	15170 <table_set@@Base+0x1cc>
   14ffc:	b	15234 <table_set@@Base+0x290>
   15000:	b	15224 <table_set@@Base+0x280>
   15004:	b	15214 <table_set@@Base+0x270>
   15008:	b	15204 <table_set@@Base+0x260>
   1500c:	b	15280 <table_set@@Base+0x2dc>
   15010:	b	15260 <table_set@@Base+0x2bc>
   15014:	b	15270 <table_set@@Base+0x2cc>
   15018:	b	15160 <table_set@@Base+0x1bc>
   1501c:	b	1513c <table_set@@Base+0x198>
   15020:	b	1512c <table_set@@Base+0x188>
   15024:	b	15100 <table_set@@Base+0x15c>
   15028:	b	150f0 <table_set@@Base+0x14c>
   1502c:	b	150e0 <table_set@@Base+0x13c>
   15030:	b	150a8 <table_set@@Base+0x104>
   15034:	b	15084 <table_set@@Base+0xe0>
   15038:	b	15058 <table_set@@Base+0xb4>
   1503c:	bl	12990 <malloc@plt>
   15040:	cmp	r0, #0
   15044:	mov	r3, r0
   15048:	str	r0, [r8]
   1504c:	bne	1524c <table_set@@Base+0x2a8>
   15050:	mvn	r0, #0
   15054:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15058:	ldr	r3, [r0, #4]
   1505c:	cmp	r3, #23
   15060:	bne	15050 <table_set@@Base+0xac>
   15064:	str	r7, [r8]
   15068:	mov	r0, r5
   1506c:	mov	r2, r6
   15070:	mov	r1, r9
   15074:	mov	r3, #1
   15078:	bl	135d0 <table_notify@@Base>
   1507c:	mov	r0, #0
   15080:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15084:	ldr	r3, [r0, #4]
   15088:	cmp	r3, #22
   1508c:	bne	15050 <table_set@@Base+0xac>
   15090:	ldr	r0, [r8]
   15094:	cmp	r0, #0
   15098:	beq	152a8 <table_set@@Base+0x304>
   1509c:	ldrb	r3, [r7]
   150a0:	strb	r3, [r0]
   150a4:	b	15068 <table_set@@Base+0xc4>
   150a8:	ldr	r3, [r0, #4]
   150ac:	cmp	r3, #21
   150b0:	bne	15050 <table_set@@Base+0xac>
   150b4:	mov	r0, r7
   150b8:	bl	129b4 <strlen@plt>
   150bc:	add	r1, r0, #1
   150c0:	ldr	r0, [r8]
   150c4:	bl	12978 <realloc@plt>
   150c8:	cmp	r0, #0
   150cc:	str	r0, [r8]
   150d0:	beq	15050 <table_set@@Base+0xac>
   150d4:	mov	r1, r7
   150d8:	bl	12984 <strcpy@plt>
   150dc:	b	15068 <table_set@@Base+0xc4>
   150e0:	ldr	r3, [r0, #4]
   150e4:	cmp	r3, #20
   150e8:	beq	15090 <table_set@@Base+0xec>
   150ec:	b	15050 <table_set@@Base+0xac>
   150f0:	ldr	r3, [r0, #4]
   150f4:	cmp	r3, #19
   150f8:	beq	15090 <table_set@@Base+0xec>
   150fc:	b	15050 <table_set@@Base+0xac>
   15100:	ldr	r3, [r0, #4]
   15104:	cmp	r3, #18
   15108:	bne	15050 <table_set@@Base+0xac>
   1510c:	ldr	r0, [r8]
   15110:	cmp	r0, #0
   15114:	beq	152c0 <table_set@@Base+0x31c>
   15118:	ldr	r2, [r7]
   1511c:	ldr	r3, [r7, #4]
   15120:	str	r2, [r0]
   15124:	str	r3, [r0, #4]
   15128:	b	15068 <table_set@@Base+0xc4>
   1512c:	ldr	r3, [r0, #4]
   15130:	cmp	r3, #17
   15134:	beq	1510c <table_set@@Base+0x168>
   15138:	b	15050 <table_set@@Base+0xac>
   1513c:	ldr	r3, [r0, #4]
   15140:	cmp	r3, #16
   15144:	bne	15050 <table_set@@Base+0xac>
   15148:	ldr	r0, [r8]
   1514c:	cmp	r0, #0
   15150:	beq	15290 <table_set@@Base+0x2ec>
   15154:	ldr	r3, [r7]
   15158:	str	r3, [r0]
   1515c:	b	15068 <table_set@@Base+0xc4>
   15160:	ldr	r3, [r0, #4]
   15164:	cmp	r3, #15
   15168:	beq	1510c <table_set@@Base+0x168>
   1516c:	b	15050 <table_set@@Base+0xac>
   15170:	ldr	r3, [r0, #4]
   15174:	cmp	r3, #7
   15178:	beq	15148 <table_set@@Base+0x1a4>
   1517c:	b	15050 <table_set@@Base+0xac>
   15180:	ldr	r3, [r0, #4]
   15184:	cmp	r3, #6
   15188:	beq	15148 <table_set@@Base+0x1a4>
   1518c:	b	15050 <table_set@@Base+0xac>
   15190:	ldr	r3, [r0, #4]
   15194:	cmp	r3, #5
   15198:	bne	15050 <table_set@@Base+0xac>
   1519c:	ldr	r0, [r8]
   151a0:	cmp	r0, #0
   151a4:	beq	152d8 <table_set@@Base+0x334>
   151a8:	ldrh	r3, [r7]
   151ac:	strh	r3, [r0]
   151b0:	b	15068 <table_set@@Base+0xc4>
   151b4:	ldr	r3, [r0, #4]
   151b8:	cmp	r3, #4
   151bc:	beq	1519c <table_set@@Base+0x1f8>
   151c0:	b	15050 <table_set@@Base+0xac>
   151c4:	ldr	r3, [r0, #4]
   151c8:	cmp	r3, #3
   151cc:	beq	15090 <table_set@@Base+0xec>
   151d0:	b	15050 <table_set@@Base+0xac>
   151d4:	ldr	r3, [r0, #4]
   151d8:	cmp	r3, #2
   151dc:	beq	15090 <table_set@@Base+0xec>
   151e0:	b	15050 <table_set@@Base+0xac>
   151e4:	ldr	r3, [r0, #4]
   151e8:	cmp	r3, #1
   151ec:	beq	15148 <table_set@@Base+0x1a4>
   151f0:	b	15050 <table_set@@Base+0xac>
   151f4:	ldr	r3, [r0, #4]
   151f8:	cmp	r3, #0
   151fc:	beq	15148 <table_set@@Base+0x1a4>
   15200:	b	15050 <table_set@@Base+0xac>
   15204:	ldr	r3, [r0, #4]
   15208:	cmp	r3, #11
   1520c:	beq	1519c <table_set@@Base+0x1f8>
   15210:	b	15050 <table_set@@Base+0xac>
   15214:	ldr	r3, [r0, #4]
   15218:	cmp	r3, #10
   1521c:	beq	1519c <table_set@@Base+0x1f8>
   15220:	b	15050 <table_set@@Base+0xac>
   15224:	ldr	r3, [r0, #4]
   15228:	cmp	r3, #9
   1522c:	beq	1510c <table_set@@Base+0x168>
   15230:	b	15050 <table_set@@Base+0xac>
   15234:	ldr	r0, [r0, #4]
   15238:	cmp	r0, #8
   1523c:	bne	15050 <table_set@@Base+0xac>
   15240:	ldr	r3, [r8]
   15244:	cmp	r3, #0
   15248:	beq	1503c <table_set@@Base+0x98>
   1524c:	ldr	r1, [r7]
   15250:	ldr	r2, [r7, #4]
   15254:	str	r1, [r3]
   15258:	str	r2, [r3, #4]
   1525c:	b	15068 <table_set@@Base+0xc4>
   15260:	ldr	r3, [r0, #4]
   15264:	cmp	r3, #13
   15268:	beq	15148 <table_set@@Base+0x1a4>
   1526c:	b	15050 <table_set@@Base+0xac>
   15270:	ldr	r3, [r0, #4]
   15274:	cmp	r3, #14
   15278:	beq	1510c <table_set@@Base+0x168>
   1527c:	b	15050 <table_set@@Base+0xac>
   15280:	ldr	r3, [r0, #4]
   15284:	cmp	r3, #12
   15288:	beq	15148 <table_set@@Base+0x1a4>
   1528c:	b	15050 <table_set@@Base+0xac>
   15290:	mov	r0, #4
   15294:	bl	12990 <malloc@plt>
   15298:	cmp	r0, #0
   1529c:	str	r0, [r8]
   152a0:	bne	15154 <table_set@@Base+0x1b0>
   152a4:	b	15050 <table_set@@Base+0xac>
   152a8:	mov	r0, #1
   152ac:	bl	12990 <malloc@plt>
   152b0:	cmp	r0, #0
   152b4:	str	r0, [r8]
   152b8:	bne	1509c <table_set@@Base+0xf8>
   152bc:	b	15050 <table_set@@Base+0xac>
   152c0:	mov	r0, #8
   152c4:	bl	12990 <malloc@plt>
   152c8:	cmp	r0, #0
   152cc:	str	r0, [r8]
   152d0:	bne	15118 <table_set@@Base+0x174>
   152d4:	b	15050 <table_set@@Base+0xac>
   152d8:	mov	r0, #2
   152dc:	bl	12990 <malloc@plt>
   152e0:	cmp	r0, #0
   152e4:	str	r0, [r8]
   152e8:	bne	151a8 <table_set@@Base+0x204>
   152ec:	b	15050 <table_set@@Base+0xac>

000152f0 <table_set_bool@@Base>:
   152f0:	push	{lr}		; (str lr, [sp, #-4]!)
   152f4:	sub	sp, sp, #20
   152f8:	add	ip, sp, #16
   152fc:	mov	lr, #22
   15300:	strb	r3, [ip, #-1]!
   15304:	str	lr, [sp]
   15308:	mov	r3, ip
   1530c:	bl	14fa4 <table_set@@Base>
   15310:	add	sp, sp, #20
   15314:	pop	{pc}		; (ldr pc, [sp], #4)

00015318 <table_set_int@@Base>:
   15318:	push	{lr}		; (str lr, [sp, #-4]!)
   1531c:	sub	sp, sp, #20
   15320:	add	ip, sp, #16
   15324:	mov	lr, #0
   15328:	str	r3, [ip, #-4]!
   1532c:	str	lr, [sp]
   15330:	mov	r3, ip
   15334:	bl	14fa4 <table_set@@Base>
   15338:	add	sp, sp, #20
   1533c:	pop	{pc}		; (ldr pc, [sp], #4)

00015340 <table_set_uint@@Base>:
   15340:	push	{lr}		; (str lr, [sp, #-4]!)
   15344:	sub	sp, sp, #20
   15348:	add	ip, sp, #16
   1534c:	mov	lr, #1
   15350:	str	r3, [ip, #-4]!
   15354:	str	lr, [sp]
   15358:	mov	r3, ip
   1535c:	bl	14fa4 <table_set@@Base>
   15360:	add	sp, sp, #20
   15364:	pop	{pc}		; (ldr pc, [sp], #4)

00015368 <table_set_int8@@Base>:
   15368:	push	{lr}		; (str lr, [sp, #-4]!)
   1536c:	sub	sp, sp, #20
   15370:	add	ip, sp, #16
   15374:	mov	lr, #2
   15378:	strb	r3, [ip, #-1]!
   1537c:	str	lr, [sp]
   15380:	mov	r3, ip
   15384:	bl	14fa4 <table_set@@Base>
   15388:	add	sp, sp, #20
   1538c:	pop	{pc}		; (ldr pc, [sp], #4)

00015390 <table_set_uint8@@Base>:
   15390:	push	{lr}		; (str lr, [sp, #-4]!)
   15394:	sub	sp, sp, #20
   15398:	add	ip, sp, #16
   1539c:	mov	lr, #3
   153a0:	strb	r3, [ip, #-1]!
   153a4:	str	lr, [sp]
   153a8:	mov	r3, ip
   153ac:	bl	14fa4 <table_set@@Base>
   153b0:	add	sp, sp, #20
   153b4:	pop	{pc}		; (ldr pc, [sp], #4)

000153b8 <table_set_int16@@Base>:
   153b8:	push	{lr}		; (str lr, [sp, #-4]!)
   153bc:	sub	sp, sp, #20
   153c0:	add	ip, sp, #16
   153c4:	mov	lr, #4
   153c8:	strh	r3, [ip, #-2]!
   153cc:	str	lr, [sp]
   153d0:	mov	r3, ip
   153d4:	bl	14fa4 <table_set@@Base>
   153d8:	add	sp, sp, #20
   153dc:	pop	{pc}		; (ldr pc, [sp], #4)

000153e0 <table_set_uint16@@Base>:
   153e0:	push	{lr}		; (str lr, [sp, #-4]!)
   153e4:	sub	sp, sp, #20
   153e8:	add	ip, sp, #16
   153ec:	mov	lr, #5
   153f0:	strh	r3, [ip, #-2]!
   153f4:	str	lr, [sp]
   153f8:	mov	r3, ip
   153fc:	bl	14fa4 <table_set@@Base>
   15400:	add	sp, sp, #20
   15404:	pop	{pc}		; (ldr pc, [sp], #4)

00015408 <table_set_int32@@Base>:
   15408:	push	{lr}		; (str lr, [sp, #-4]!)
   1540c:	sub	sp, sp, #20
   15410:	add	ip, sp, #16
   15414:	mov	lr, #6
   15418:	str	r3, [ip, #-4]!
   1541c:	str	lr, [sp]
   15420:	mov	r3, ip
   15424:	bl	14fa4 <table_set@@Base>
   15428:	add	sp, sp, #20
   1542c:	pop	{pc}		; (ldr pc, [sp], #4)

00015430 <table_set_uint32@@Base>:
   15430:	push	{lr}		; (str lr, [sp, #-4]!)
   15434:	sub	sp, sp, #20
   15438:	add	ip, sp, #16
   1543c:	mov	lr, #7
   15440:	str	r3, [ip, #-4]!
   15444:	str	lr, [sp]
   15448:	mov	r3, ip
   1544c:	bl	14fa4 <table_set@@Base>
   15450:	add	sp, sp, #20
   15454:	pop	{pc}		; (ldr pc, [sp], #4)

00015458 <table_set_int64@@Base>:
   15458:	push	{lr}		; (str lr, [sp, #-4]!)
   1545c:	sub	sp, sp, #12
   15460:	mov	r3, #8
   15464:	str	r3, [sp]
   15468:	add	r3, sp, #16
   1546c:	bl	14fa4 <table_set@@Base>
   15470:	add	sp, sp, #12
   15474:	pop	{pc}		; (ldr pc, [sp], #4)

00015478 <table_set_uint64@@Base>:
   15478:	push	{lr}		; (str lr, [sp, #-4]!)
   1547c:	sub	sp, sp, #12
   15480:	mov	r3, #9
   15484:	str	r3, [sp]
   15488:	add	r3, sp, #16
   1548c:	bl	14fa4 <table_set@@Base>
   15490:	add	sp, sp, #12
   15494:	pop	{pc}		; (ldr pc, [sp], #4)

00015498 <table_set_short@@Base>:
   15498:	push	{lr}		; (str lr, [sp, #-4]!)
   1549c:	sub	sp, sp, #20
   154a0:	add	ip, sp, #16
   154a4:	mov	lr, #10
   154a8:	strh	r3, [ip, #-2]!
   154ac:	str	lr, [sp]
   154b0:	mov	r3, ip
   154b4:	bl	14fa4 <table_set@@Base>
   154b8:	add	sp, sp, #20
   154bc:	pop	{pc}		; (ldr pc, [sp], #4)

000154c0 <table_set_ushort@@Base>:
   154c0:	push	{lr}		; (str lr, [sp, #-4]!)
   154c4:	sub	sp, sp, #20
   154c8:	add	ip, sp, #16
   154cc:	mov	lr, #11
   154d0:	strh	r3, [ip, #-2]!
   154d4:	str	lr, [sp]
   154d8:	mov	r3, ip
   154dc:	bl	14fa4 <table_set@@Base>
   154e0:	add	sp, sp, #20
   154e4:	pop	{pc}		; (ldr pc, [sp], #4)

000154e8 <table_set_long@@Base>:
   154e8:	push	{lr}		; (str lr, [sp, #-4]!)
   154ec:	sub	sp, sp, #20
   154f0:	add	ip, sp, #16
   154f4:	mov	lr, #12
   154f8:	str	r3, [ip, #-4]!
   154fc:	str	lr, [sp]
   15500:	mov	r3, ip
   15504:	bl	14fa4 <table_set@@Base>
   15508:	add	sp, sp, #20
   1550c:	pop	{pc}		; (ldr pc, [sp], #4)

00015510 <table_set_ulong@@Base>:
   15510:	push	{lr}		; (str lr, [sp, #-4]!)
   15514:	sub	sp, sp, #20
   15518:	add	ip, sp, #16
   1551c:	mov	lr, #13
   15520:	str	r3, [ip, #-4]!
   15524:	str	lr, [sp]
   15528:	mov	r3, ip
   1552c:	bl	14fa4 <table_set@@Base>
   15530:	add	sp, sp, #20
   15534:	pop	{pc}		; (ldr pc, [sp], #4)

00015538 <table_set_llong@@Base>:
   15538:	push	{lr}		; (str lr, [sp, #-4]!)
   1553c:	sub	sp, sp, #12
   15540:	mov	r3, #14
   15544:	str	r3, [sp]
   15548:	add	r3, sp, #16
   1554c:	bl	14fa4 <table_set@@Base>
   15550:	add	sp, sp, #12
   15554:	pop	{pc}		; (ldr pc, [sp], #4)

00015558 <table_set_ullong@@Base>:
   15558:	push	{lr}		; (str lr, [sp, #-4]!)
   1555c:	sub	sp, sp, #12
   15560:	mov	r3, #15
   15564:	str	r3, [sp]
   15568:	add	r3, sp, #16
   1556c:	bl	14fa4 <table_set@@Base>
   15570:	add	sp, sp, #12
   15574:	pop	{pc}		; (ldr pc, [sp], #4)

00015578 <table_set_float@@Base>:
   15578:	push	{lr}		; (str lr, [sp, #-4]!)
   1557c:	sub	sp, sp, #20
   15580:	add	r3, sp, #16
   15584:	mov	ip, #16
   15588:	vstmdb	r3!, {s0}
   1558c:	str	ip, [sp]
   15590:	bl	14fa4 <table_set@@Base>
   15594:	add	sp, sp, #20
   15598:	pop	{pc}		; (ldr pc, [sp], #4)

0001559c <table_set_double@@Base>:
   1559c:	push	{lr}		; (str lr, [sp, #-4]!)
   155a0:	sub	sp, sp, #20
   155a4:	add	r3, sp, #16
   155a8:	mov	ip, #17
   155ac:	vstmdb	r3!, {d0}
   155b0:	str	ip, [sp]
   155b4:	bl	14fa4 <table_set@@Base>
   155b8:	add	sp, sp, #20
   155bc:	pop	{pc}		; (ldr pc, [sp], #4)

000155c0 <table_set_ldouble@@Base>:
   155c0:	push	{lr}		; (str lr, [sp, #-4]!)
   155c4:	sub	sp, sp, #20
   155c8:	add	r3, sp, #16
   155cc:	mov	ip, #18
   155d0:	vstmdb	r3!, {d0}
   155d4:	str	ip, [sp]
   155d8:	bl	14fa4 <table_set@@Base>
   155dc:	add	sp, sp, #20
   155e0:	pop	{pc}		; (ldr pc, [sp], #4)

000155e4 <table_set_string@@Base>:
   155e4:	push	{lr}		; (str lr, [sp, #-4]!)
   155e8:	sub	sp, sp, #12
   155ec:	mov	ip, #21
   155f0:	str	ip, [sp]
   155f4:	bl	14fa4 <table_set@@Base>
   155f8:	add	sp, sp, #12
   155fc:	pop	{pc}		; (ldr pc, [sp], #4)

00015600 <table_set_char@@Base>:
   15600:	push	{lr}		; (str lr, [sp, #-4]!)
   15604:	sub	sp, sp, #20
   15608:	add	ip, sp, #16
   1560c:	mov	lr, #19
   15610:	strb	r3, [ip, #-1]!
   15614:	str	lr, [sp]
   15618:	mov	r3, ip
   1561c:	bl	14fa4 <table_set@@Base>
   15620:	add	sp, sp, #20
   15624:	pop	{pc}		; (ldr pc, [sp], #4)

00015628 <table_set_uchar@@Base>:
   15628:	push	{lr}		; (str lr, [sp, #-4]!)
   1562c:	sub	sp, sp, #20
   15630:	add	ip, sp, #16
   15634:	mov	lr, #20
   15638:	strb	r3, [ip, #-1]!
   1563c:	str	lr, [sp]
   15640:	mov	r3, ip
   15644:	bl	14fa4 <table_set@@Base>
   15648:	add	sp, sp, #20
   1564c:	pop	{pc}		; (ldr pc, [sp], #4)

00015650 <table_set_ptr@@Base>:
   15650:	push	{lr}		; (str lr, [sp, #-4]!)
   15654:	sub	sp, sp, #12
   15658:	mov	ip, #23
   1565c:	str	ip, [sp]
   15660:	bl	14fa4 <table_set@@Base>
   15664:	add	sp, sp, #12
   15668:	pop	{pc}		; (ldr pc, [sp], #4)

0001566c <table_cell_to_buffer@@Base>:
   1566c:	push	{r4, r5, r6, r7, lr}
   15670:	mov	r7, r1
   15674:	sub	sp, sp, #12
   15678:	mov	r1, r2
   1567c:	mov	r4, r2
   15680:	mov	r5, r3
   15684:	mov	r6, r0
   15688:	bl	13974 <table_get_column_data_type@@Base>
   1568c:	cmp	r0, #23
   15690:	addls	pc, pc, r0, lsl #2
   15694:	b	15720 <table_cell_to_buffer@@Base+0xb4>
   15698:	b	15af8 <table_cell_to_buffer@@Base+0x48c>
   1569c:	b	15acc <table_cell_to_buffer@@Base+0x460>
   156a0:	b	15aa0 <table_cell_to_buffer@@Base+0x434>
   156a4:	b	15a74 <table_cell_to_buffer@@Base+0x408>
   156a8:	b	15a48 <table_cell_to_buffer@@Base+0x3dc>
   156ac:	b	15a1c <table_cell_to_buffer@@Base+0x3b0>
   156b0:	b	159f0 <table_cell_to_buffer@@Base+0x384>
   156b4:	b	159c4 <table_cell_to_buffer@@Base+0x358>
   156b8:	b	15998 <table_cell_to_buffer@@Base+0x32c>
   156bc:	b	1596c <table_cell_to_buffer@@Base+0x300>
   156c0:	b	15940 <table_cell_to_buffer@@Base+0x2d4>
   156c4:	b	15914 <table_cell_to_buffer@@Base+0x2a8>
   156c8:	b	158e8 <table_cell_to_buffer@@Base+0x27c>
   156cc:	b	158bc <table_cell_to_buffer@@Base+0x250>
   156d0:	b	15890 <table_cell_to_buffer@@Base+0x224>
   156d4:	b	15864 <table_cell_to_buffer@@Base+0x1f8>
   156d8:	b	15834 <table_cell_to_buffer@@Base+0x1c8>
   156dc:	b	15808 <table_cell_to_buffer@@Base+0x19c>
   156e0:	b	157dc <table_cell_to_buffer@@Base+0x170>
   156e4:	b	157b0 <table_cell_to_buffer@@Base+0x144>
   156e8:	b	15784 <table_cell_to_buffer@@Base+0x118>
   156ec:	b	15758 <table_cell_to_buffer@@Base+0xec>
   156f0:	b	1572c <table_cell_to_buffer@@Base+0xc0>
   156f4:	b	156f8 <table_cell_to_buffer@@Base+0x8c>
   156f8:	mov	r2, r4
   156fc:	mov	r1, r7
   15700:	mov	r0, r6
   15704:	bl	14d28 <table_get_ptr@@Base>
   15708:	ldr	r2, [pc, #1044]	; 15b24 <table_cell_to_buffer@@Base+0x4b8>
   1570c:	ldr	r1, [sp, #32]
   15710:	add	r2, pc, r2
   15714:	mov	r3, r0
   15718:	mov	r0, r5
   1571c:	bl	129c0 <snprintf@plt>
   15720:	mov	r0, #0
   15724:	add	sp, sp, #12
   15728:	pop	{r4, r5, r6, r7, pc}
   1572c:	mov	r2, r4
   15730:	mov	r1, r7
   15734:	mov	r0, r6
   15738:	bl	14c24 <table_get_bool@@Base>
   1573c:	ldr	r2, [pc, #996]	; 15b28 <table_cell_to_buffer@@Base+0x4bc>
   15740:	ldr	r1, [sp, #32]
   15744:	add	r2, pc, r2
   15748:	mov	r3, r0
   1574c:	mov	r0, r5
   15750:	bl	129c0 <snprintf@plt>
   15754:	b	15720 <table_cell_to_buffer@@Base+0xb4>
   15758:	mov	r2, r4
   1575c:	mov	r1, r7
   15760:	mov	r0, r6
   15764:	bl	14d24 <table_get_string@@Base>
   15768:	ldr	r2, [pc, #956]	; 15b2c <table_cell_to_buffer@@Base+0x4c0>
   1576c:	ldr	r1, [sp, #32]
   15770:	add	r2, pc, r2
   15774:	mov	r3, r0
   15778:	mov	r0, r5
   1577c:	bl	129c0 <snprintf@plt>
   15780:	b	15720 <table_cell_to_buffer@@Base+0xb4>
   15784:	mov	r2, r4
   15788:	mov	r1, r7
   1578c:	mov	r0, r6
   15790:	bl	14d0c <table_get_uchar@@Base>
   15794:	ldr	r2, [pc, #916]	; 15b30 <table_cell_to_buffer@@Base+0x4c4>
   15798:	ldr	r1, [sp, #32]
   1579c:	add	r2, pc, r2
   157a0:	mov	r3, r0
   157a4:	mov	r0, r5
   157a8:	bl	129c0 <snprintf@plt>
   157ac:	b	15720 <table_cell_to_buffer@@Base+0xb4>
   157b0:	mov	r2, r4
   157b4:	mov	r1, r7
   157b8:	mov	r0, r6
   157bc:	bl	14d1c <table_get_char@@Base>
   157c0:	ldr	r2, [pc, #876]	; 15b34 <table_cell_to_buffer@@Base+0x4c8>
   157c4:	ldr	r1, [sp, #32]
   157c8:	add	r2, pc, r2
   157cc:	mov	r3, r0
   157d0:	mov	r0, r5
   157d4:	bl	129c0 <snprintf@plt>
   157d8:	b	15720 <table_cell_to_buffer@@Base+0xb4>
   157dc:	mov	r2, r4
   157e0:	mov	r1, r7
   157e4:	mov	r0, r6
   157e8:	bl	14cfc <table_get_ldouble@@Base>
   157ec:	ldr	r2, [pc, #836]	; 15b38 <table_cell_to_buffer@@Base+0x4cc>
   157f0:	mov	r0, r5
   157f4:	add	r2, pc, r2
   157f8:	ldr	r1, [sp, #32]
   157fc:	vstr	d0, [sp]
   15800:	bl	129c0 <snprintf@plt>
   15804:	b	15720 <table_cell_to_buffer@@Base+0xb4>
   15808:	mov	r2, r4
   1580c:	mov	r1, r7
   15810:	mov	r0, r6
   15814:	bl	14cec <table_get_double@@Base>
   15818:	ldr	r2, [pc, #796]	; 15b3c <table_cell_to_buffer@@Base+0x4d0>
   1581c:	mov	r0, r5
   15820:	add	r2, pc, r2
   15824:	ldr	r1, [sp, #32]
   15828:	vstr	d0, [sp]
   1582c:	bl	129c0 <snprintf@plt>
   15830:	b	15720 <table_cell_to_buffer@@Base+0xb4>
   15834:	mov	r2, r4
   15838:	mov	r1, r7
   1583c:	mov	r0, r6
   15840:	bl	14cdc <table_get_float@@Base>
   15844:	ldr	r2, [pc, #756]	; 15b40 <table_cell_to_buffer@@Base+0x4d4>
   15848:	mov	r0, r5
   1584c:	add	r2, pc, r2
   15850:	ldr	r1, [sp, #32]
   15854:	vcvt.f64.f32	d0, s0
   15858:	vstr	d0, [sp]
   1585c:	bl	129c0 <snprintf@plt>
   15860:	b	15720 <table_cell_to_buffer@@Base+0xb4>
   15864:	mov	r2, r4
   15868:	mov	r1, r7
   1586c:	mov	r0, r6
   15870:	bl	14cc8 <table_get_ullong@@Base>
   15874:	ldr	r2, [pc, #712]	; 15b44 <table_cell_to_buffer@@Base+0x4d8>
   15878:	add	r2, pc, r2
   1587c:	strd	r0, [sp]
   15880:	mov	r0, r5
   15884:	ldr	r1, [sp, #32]
   15888:	bl	129c0 <snprintf@plt>
   1588c:	b	15720 <table_cell_to_buffer@@Base+0xb4>
   15890:	mov	r2, r4
   15894:	mov	r1, r7
   15898:	mov	r0, r6
   1589c:	bl	14cb4 <table_get_llong@@Base>
   158a0:	ldr	r2, [pc, #672]	; 15b48 <table_cell_to_buffer@@Base+0x4dc>
   158a4:	add	r2, pc, r2
   158a8:	strd	r0, [sp]
   158ac:	mov	r0, r5
   158b0:	ldr	r1, [sp, #32]
   158b4:	bl	129c0 <snprintf@plt>
   158b8:	b	15720 <table_cell_to_buffer@@Base+0xb4>
   158bc:	mov	r2, r4
   158c0:	mov	r1, r7
   158c4:	mov	r0, r6
   158c8:	bl	14ca4 <table_get_ulong@@Base>
   158cc:	ldr	r2, [pc, #632]	; 15b4c <table_cell_to_buffer@@Base+0x4e0>
   158d0:	ldr	r1, [sp, #32]
   158d4:	add	r2, pc, r2
   158d8:	mov	r3, r0
   158dc:	mov	r0, r5
   158e0:	bl	129c0 <snprintf@plt>
   158e4:	b	15720 <table_cell_to_buffer@@Base+0xb4>
   158e8:	mov	r2, r4
   158ec:	mov	r1, r7
   158f0:	mov	r0, r6
   158f4:	bl	14c94 <table_get_long@@Base>
   158f8:	ldr	r2, [pc, #592]	; 15b50 <table_cell_to_buffer@@Base+0x4e4>
   158fc:	ldr	r1, [sp, #32]
   15900:	add	r2, pc, r2
   15904:	mov	r3, r0
   15908:	mov	r0, r5
   1590c:	bl	129c0 <snprintf@plt>
   15910:	b	15720 <table_cell_to_buffer@@Base+0xb4>
   15914:	mov	r2, r4
   15918:	mov	r1, r7
   1591c:	mov	r0, r6
   15920:	bl	14c80 <table_get_ushort@@Base>
   15924:	ldr	r2, [pc, #552]	; 15b54 <table_cell_to_buffer@@Base+0x4e8>
   15928:	ldr	r1, [sp, #32]
   1592c:	add	r2, pc, r2
   15930:	mov	r3, r0
   15934:	mov	r0, r5
   15938:	bl	129c0 <snprintf@plt>
   1593c:	b	15720 <table_cell_to_buffer@@Base+0xb4>
   15940:	mov	r2, r4
   15944:	mov	r1, r7
   15948:	mov	r0, r6
   1594c:	bl	14c6c <table_get_short@@Base>
   15950:	ldr	r2, [pc, #512]	; 15b58 <table_cell_to_buffer@@Base+0x4ec>
   15954:	ldr	r1, [sp, #32]
   15958:	add	r2, pc, r2
   1595c:	mov	r3, r0
   15960:	mov	r0, r5
   15964:	bl	129c0 <snprintf@plt>
   15968:	b	15720 <table_cell_to_buffer@@Base+0xb4>
   1596c:	mov	r2, r4
   15970:	mov	r1, r7
   15974:	mov	r0, r6
   15978:	bl	14cd8 <table_get_uint64@@Base>
   1597c:	ldr	r2, [pc, #472]	; 15b5c <table_cell_to_buffer@@Base+0x4f0>
   15980:	add	r2, pc, r2
   15984:	strd	r0, [sp]
   15988:	mov	r0, r5
   1598c:	ldr	r1, [sp, #32]
   15990:	bl	129c0 <snprintf@plt>
   15994:	b	15720 <table_cell_to_buffer@@Base+0xb4>
   15998:	mov	r2, r4
   1599c:	mov	r1, r7
   159a0:	mov	r0, r6
   159a4:	bl	14cc4 <table_get_int64@@Base>
   159a8:	ldr	r2, [pc, #432]	; 15b60 <table_cell_to_buffer@@Base+0x4f4>
   159ac:	add	r2, pc, r2
   159b0:	strd	r0, [sp]
   159b4:	mov	r0, r5
   159b8:	ldr	r1, [sp, #32]
   159bc:	bl	129c0 <snprintf@plt>
   159c0:	b	15720 <table_cell_to_buffer@@Base+0xb4>
   159c4:	mov	r2, r4
   159c8:	mov	r1, r7
   159cc:	mov	r0, r6
   159d0:	bl	14c58 <table_get_uint32@@Base>
   159d4:	ldr	r2, [pc, #392]	; 15b64 <table_cell_to_buffer@@Base+0x4f8>
   159d8:	ldr	r1, [sp, #32]
   159dc:	add	r2, pc, r2
   159e0:	mov	r3, r0
   159e4:	mov	r0, r5
   159e8:	bl	129c0 <snprintf@plt>
   159ec:	b	15720 <table_cell_to_buffer@@Base+0xb4>
   159f0:	mov	r2, r4
   159f4:	mov	r1, r7
   159f8:	mov	r0, r6
   159fc:	bl	14c44 <table_get_int32@@Base>
   15a00:	ldr	r2, [pc, #352]	; 15b68 <table_cell_to_buffer@@Base+0x4fc>
   15a04:	ldr	r1, [sp, #32]
   15a08:	add	r2, pc, r2
   15a0c:	mov	r3, r0
   15a10:	mov	r0, r5
   15a14:	bl	129c0 <snprintf@plt>
   15a18:	b	15720 <table_cell_to_buffer@@Base+0xb4>
   15a1c:	mov	r2, r4
   15a20:	mov	r1, r7
   15a24:	mov	r0, r6
   15a28:	bl	14c90 <table_get_uint16@@Base>
   15a2c:	ldr	r2, [pc, #312]	; 15b6c <table_cell_to_buffer@@Base+0x500>
   15a30:	ldr	r1, [sp, #32]
   15a34:	add	r2, pc, r2
   15a38:	mov	r3, r0
   15a3c:	mov	r0, r5
   15a40:	bl	129c0 <snprintf@plt>
   15a44:	b	15720 <table_cell_to_buffer@@Base+0xb4>
   15a48:	mov	r2, r4
   15a4c:	mov	r1, r7
   15a50:	mov	r0, r6
   15a54:	bl	14c7c <table_get_int16@@Base>
   15a58:	ldr	r2, [pc, #272]	; 15b70 <table_cell_to_buffer@@Base+0x504>
   15a5c:	ldr	r1, [sp, #32]
   15a60:	add	r2, pc, r2
   15a64:	mov	r3, r0
   15a68:	mov	r0, r5
   15a6c:	bl	129c0 <snprintf@plt>
   15a70:	b	15720 <table_cell_to_buffer@@Base+0xb4>
   15a74:	mov	r2, r4
   15a78:	mov	r1, r7
   15a7c:	mov	r0, r6
   15a80:	bl	14d20 <table_get_uint8@@Base>
   15a84:	ldr	r2, [pc, #232]	; 15b74 <table_cell_to_buffer@@Base+0x508>
   15a88:	ldr	r1, [sp, #32]
   15a8c:	add	r2, pc, r2
   15a90:	mov	r3, r0
   15a94:	mov	r0, r5
   15a98:	bl	129c0 <snprintf@plt>
   15a9c:	b	15720 <table_cell_to_buffer@@Base+0xb4>
   15aa0:	mov	r2, r4
   15aa4:	mov	r1, r7
   15aa8:	mov	r0, r6
   15aac:	bl	14c34 <table_get_int8@@Base>
   15ab0:	ldr	r2, [pc, #192]	; 15b78 <table_cell_to_buffer@@Base+0x50c>
   15ab4:	ldr	r1, [sp, #32]
   15ab8:	add	r2, pc, r2
   15abc:	mov	r3, r0
   15ac0:	mov	r0, r5
   15ac4:	bl	129c0 <snprintf@plt>
   15ac8:	b	15720 <table_cell_to_buffer@@Base+0xb4>
   15acc:	mov	r2, r4
   15ad0:	mov	r1, r7
   15ad4:	mov	r0, r6
   15ad8:	bl	14c68 <table_get_uint@@Base>
   15adc:	ldr	r2, [pc, #152]	; 15b7c <table_cell_to_buffer@@Base+0x510>
   15ae0:	ldr	r1, [sp, #32]
   15ae4:	add	r2, pc, r2
   15ae8:	mov	r3, r0
   15aec:	mov	r0, r5
   15af0:	bl	129c0 <snprintf@plt>
   15af4:	b	15720 <table_cell_to_buffer@@Base+0xb4>
   15af8:	mov	r2, r4
   15afc:	mov	r1, r7
   15b00:	mov	r0, r6
   15b04:	bl	14c54 <table_get_int@@Base>
   15b08:	ldr	r2, [pc, #112]	; 15b80 <table_cell_to_buffer@@Base+0x514>
   15b0c:	ldr	r1, [sp, #32]
   15b10:	add	r2, pc, r2
   15b14:	mov	r3, r0
   15b18:	mov	r0, r5
   15b1c:	bl	129c0 <snprintf@plt>
   15b20:	b	15720 <table_cell_to_buffer@@Base+0xb4>
   15b24:	andeq	r0, r0, r4, ror #30
   15b28:	andeq	r0, r0, r4, ror lr
   15b2c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   15b30:	ldrdeq	r0, [r0], -r4
   15b34:	andeq	r0, r0, r8, lsr #29
   15b38:	andeq	r0, r0, r8, ror lr
   15b3c:	andeq	r0, r0, r8, asr #28
   15b40:	andeq	r0, r0, r8, lsl lr
   15b44:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   15b48:	muleq	r0, ip, sp
   15b4c:	andeq	r0, r0, r8, lsl #27
   15b50:	andeq	r0, r0, r8, asr sp
   15b54:	andeq	r0, r0, r8, lsr #26
   15b58:	strdeq	r0, [r0], -r8
   15b5c:	andeq	r0, r0, r8, asr #25
   15b60:	muleq	r0, r4, ip
   15b64:	andeq	r0, r0, r0, ror #24
   15b68:			; <UNDEFINED> instruction: 0x00000bb0
   15b6c:	andeq	r0, r0, r8, lsl #24
   15b70:	andeq	r0, r0, r8, asr fp
   15b74:			; <UNDEFINED> instruction: 0x00000bb0
   15b78:	andeq	r0, r0, r0, lsl #22
   15b7c:	andeq	r0, r0, r8, asr fp
   15b80:	andeq	r0, r0, r8, lsr #21

00015b84 <table_cell_from_buffer@@Base>:
   15b84:	push	{r4, r5, r6, r7, r8, lr}
   15b88:	mov	r8, r1
   15b8c:	sub	sp, sp, #264	; 0x108
   15b90:	mov	r1, r2
   15b94:	mov	r4, r2
   15b98:	mov	r6, r3
   15b9c:	mov	r5, r0
   15ba0:	bl	13974 <table_get_column_data_type@@Base>
   15ba4:	cmp	r0, #23
   15ba8:	addls	pc, pc, r0, lsl #2
   15bac:	b	161bc <table_cell_from_buffer@@Base+0x638>
   15bb0:	b	16150 <table_cell_from_buffer@@Base+0x5cc>
   15bb4:	b	16118 <table_cell_from_buffer@@Base+0x594>
   15bb8:	b	160dc <table_cell_from_buffer@@Base+0x558>
   15bbc:	b	160a4 <table_cell_from_buffer@@Base+0x520>
   15bc0:	b	16068 <table_cell_from_buffer@@Base+0x4e4>
   15bc4:	b	1602c <table_cell_from_buffer@@Base+0x4a8>
   15bc8:	b	15ff4 <table_cell_from_buffer@@Base+0x470>
   15bcc:	b	15fbc <table_cell_from_buffer@@Base+0x438>
   15bd0:	b	15f7c <table_cell_from_buffer@@Base+0x3f8>
   15bd4:	b	15f3c <table_cell_from_buffer@@Base+0x3b8>
   15bd8:	b	15f00 <table_cell_from_buffer@@Base+0x37c>
   15bdc:	b	15ec4 <table_cell_from_buffer@@Base+0x340>
   15be0:	b	15e8c <table_cell_from_buffer@@Base+0x308>
   15be4:	b	15e54 <table_cell_from_buffer@@Base+0x2d0>
   15be8:	b	15e14 <table_cell_from_buffer@@Base+0x290>
   15bec:	b	15dd4 <table_cell_from_buffer@@Base+0x250>
   15bf0:	b	15d64 <table_cell_from_buffer@@Base+0x1e0>
   15bf4:	b	15d2c <table_cell_from_buffer@@Base+0x1a8>
   15bf8:	b	15d9c <table_cell_from_buffer@@Base+0x218>
   15bfc:	b	15c80 <table_cell_from_buffer@@Base+0xfc>
   15c00:	b	15cf4 <table_cell_from_buffer@@Base+0x170>
   15c04:	b	15cb8 <table_cell_from_buffer@@Base+0x134>
   15c08:	b	15c3c <table_cell_from_buffer@@Base+0xb8>
   15c0c:	b	15c10 <table_cell_from_buffer@@Base+0x8c>
   15c10:	ldr	r1, [pc, #1452]	; 161c4 <table_cell_from_buffer@@Base+0x640>
   15c14:	mov	r0, r6
   15c18:	add	r2, sp, #8
   15c1c:	add	r1, pc, r1
   15c20:	bl	129cc <__isoc99_sscanf@plt>
   15c24:	cmp	r0, #1
   15c28:	beq	161a0 <table_cell_from_buffer@@Base+0x61c>
   15c2c:	mvn	r6, #0
   15c30:	mov	r0, r6
   15c34:	add	sp, sp, #264	; 0x108
   15c38:	pop	{r4, r5, r6, r7, r8, pc}
   15c3c:	ldr	r1, [pc, #1412]	; 161c8 <table_cell_from_buffer@@Base+0x644>
   15c40:	mov	r0, r6
   15c44:	add	r2, sp, #8
   15c48:	add	r1, pc, r1
   15c4c:	bl	129cc <__isoc99_sscanf@plt>
   15c50:	cmp	r0, #1
   15c54:	bne	15c2c <table_cell_from_buffer@@Base+0xa8>
   15c58:	ldr	r6, [sp, #8]
   15c5c:	cmp	r6, #0
   15c60:	beq	16188 <table_cell_from_buffer@@Base+0x604>
   15c64:	mov	r3, r0
   15c68:	mov	r2, r4
   15c6c:	mov	r1, r8
   15c70:	mov	r0, r5
   15c74:	bl	152f0 <table_set_bool@@Base>
   15c78:	mov	r6, #0
   15c7c:	b	15c30 <table_cell_from_buffer@@Base+0xac>
   15c80:	ldr	r1, [pc, #1348]	; 161cc <table_cell_from_buffer@@Base+0x648>
   15c84:	mov	r0, r6
   15c88:	add	r2, sp, #8
   15c8c:	add	r1, pc, r1
   15c90:	bl	129cc <__isoc99_sscanf@plt>
   15c94:	cmp	r0, #1
   15c98:	bne	15c2c <table_cell_from_buffer@@Base+0xa8>
   15c9c:	mov	r2, r4
   15ca0:	mov	r1, r8
   15ca4:	mov	r0, r5
   15ca8:	ldrb	r3, [sp, #8]
   15cac:	bl	15600 <table_set_char@@Base>
   15cb0:	mov	r6, #0
   15cb4:	b	15c30 <table_cell_from_buffer@@Base+0xac>
   15cb8:	ldr	r1, [pc, #1296]	; 161d0 <table_cell_from_buffer@@Base+0x64c>
   15cbc:	add	r7, sp, #8
   15cc0:	mov	r0, r6
   15cc4:	mov	r2, r7
   15cc8:	add	r1, pc, r1
   15ccc:	bl	129cc <__isoc99_sscanf@plt>
   15cd0:	cmp	r0, #1
   15cd4:	bne	15c2c <table_cell_from_buffer@@Base+0xa8>
   15cd8:	mov	r3, r7
   15cdc:	mov	r2, r4
   15ce0:	mov	r1, r8
   15ce4:	mov	r0, r5
   15ce8:	bl	155e4 <table_set_string@@Base>
   15cec:	mov	r6, #0
   15cf0:	b	15c30 <table_cell_from_buffer@@Base+0xac>
   15cf4:	ldr	r1, [pc, #1240]	; 161d4 <table_cell_from_buffer@@Base+0x650>
   15cf8:	mov	r0, r6
   15cfc:	add	r2, sp, #8
   15d00:	add	r1, pc, r1
   15d04:	bl	129cc <__isoc99_sscanf@plt>
   15d08:	cmp	r0, #1
   15d0c:	bne	15c2c <table_cell_from_buffer@@Base+0xa8>
   15d10:	mov	r2, r4
   15d14:	mov	r1, r8
   15d18:	mov	r0, r5
   15d1c:	ldrb	r3, [sp, #8]
   15d20:	bl	15628 <table_set_uchar@@Base>
   15d24:	mov	r6, #0
   15d28:	b	15c30 <table_cell_from_buffer@@Base+0xac>
   15d2c:	ldr	r1, [pc, #1188]	; 161d8 <table_cell_from_buffer@@Base+0x654>
   15d30:	mov	r0, r6
   15d34:	add	r2, sp, #8
   15d38:	add	r1, pc, r1
   15d3c:	bl	129cc <__isoc99_sscanf@plt>
   15d40:	cmp	r0, #1
   15d44:	bne	15c2c <table_cell_from_buffer@@Base+0xa8>
   15d48:	mov	r2, r4
   15d4c:	mov	r1, r8
   15d50:	mov	r0, r5
   15d54:	vldr	d0, [sp, #8]
   15d58:	bl	1559c <table_set_double@@Base>
   15d5c:	mov	r6, #0
   15d60:	b	15c30 <table_cell_from_buffer@@Base+0xac>
   15d64:	ldr	r1, [pc, #1136]	; 161dc <table_cell_from_buffer@@Base+0x658>
   15d68:	mov	r0, r6
   15d6c:	add	r2, sp, #8
   15d70:	add	r1, pc, r1
   15d74:	bl	129cc <__isoc99_sscanf@plt>
   15d78:	cmp	r0, #1
   15d7c:	bne	15c2c <table_cell_from_buffer@@Base+0xa8>
   15d80:	mov	r2, r4
   15d84:	mov	r1, r8
   15d88:	mov	r0, r5
   15d8c:	vldr	s0, [sp, #8]
   15d90:	bl	15578 <table_set_float@@Base>
   15d94:	mov	r6, #0
   15d98:	b	15c30 <table_cell_from_buffer@@Base+0xac>
   15d9c:	ldr	r1, [pc, #1084]	; 161e0 <table_cell_from_buffer@@Base+0x65c>
   15da0:	mov	r0, r6
   15da4:	add	r2, sp, #8
   15da8:	add	r1, pc, r1
   15dac:	bl	129cc <__isoc99_sscanf@plt>
   15db0:	cmp	r0, #1
   15db4:	bne	15c2c <table_cell_from_buffer@@Base+0xa8>
   15db8:	mov	r2, r4
   15dbc:	mov	r1, r8
   15dc0:	mov	r0, r5
   15dc4:	vldr	d0, [sp, #8]
   15dc8:	bl	155c0 <table_set_ldouble@@Base>
   15dcc:	mov	r6, #0
   15dd0:	b	15c30 <table_cell_from_buffer@@Base+0xac>
   15dd4:	ldr	r1, [pc, #1032]	; 161e4 <table_cell_from_buffer@@Base+0x660>
   15dd8:	add	r7, sp, #8
   15ddc:	mov	r0, r6
   15de0:	mov	r2, r7
   15de4:	add	r1, pc, r1
   15de8:	bl	129cc <__isoc99_sscanf@plt>
   15dec:	cmp	r0, #1
   15df0:	bne	15c2c <table_cell_from_buffer@@Base+0xa8>
   15df4:	ldrd	r6, [r7]
   15df8:	mov	r2, r4
   15dfc:	mov	r1, r8
   15e00:	strd	r6, [sp]
   15e04:	mov	r0, r5
   15e08:	bl	15558 <table_set_ullong@@Base>
   15e0c:	mov	r6, #0
   15e10:	b	15c30 <table_cell_from_buffer@@Base+0xac>
   15e14:	ldr	r1, [pc, #972]	; 161e8 <table_cell_from_buffer@@Base+0x664>
   15e18:	add	r7, sp, #8
   15e1c:	mov	r0, r6
   15e20:	mov	r2, r7
   15e24:	add	r1, pc, r1
   15e28:	bl	129cc <__isoc99_sscanf@plt>
   15e2c:	cmp	r0, #1
   15e30:	bne	15c2c <table_cell_from_buffer@@Base+0xa8>
   15e34:	ldrd	r6, [r7]
   15e38:	mov	r2, r4
   15e3c:	mov	r1, r8
   15e40:	strd	r6, [sp]
   15e44:	mov	r0, r5
   15e48:	bl	15538 <table_set_llong@@Base>
   15e4c:	mov	r6, #0
   15e50:	b	15c30 <table_cell_from_buffer@@Base+0xac>
   15e54:	ldr	r1, [pc, #912]	; 161ec <table_cell_from_buffer@@Base+0x668>
   15e58:	mov	r0, r6
   15e5c:	add	r2, sp, #8
   15e60:	add	r1, pc, r1
   15e64:	bl	129cc <__isoc99_sscanf@plt>
   15e68:	cmp	r0, #1
   15e6c:	bne	15c2c <table_cell_from_buffer@@Base+0xa8>
   15e70:	mov	r2, r4
   15e74:	mov	r1, r8
   15e78:	mov	r0, r5
   15e7c:	ldr	r3, [sp, #8]
   15e80:	bl	15510 <table_set_ulong@@Base>
   15e84:	mov	r6, #0
   15e88:	b	15c30 <table_cell_from_buffer@@Base+0xac>
   15e8c:	ldr	r1, [pc, #860]	; 161f0 <table_cell_from_buffer@@Base+0x66c>
   15e90:	mov	r0, r6
   15e94:	add	r2, sp, #8
   15e98:	add	r1, pc, r1
   15e9c:	bl	129cc <__isoc99_sscanf@plt>
   15ea0:	cmp	r0, #1
   15ea4:	bne	15c2c <table_cell_from_buffer@@Base+0xa8>
   15ea8:	mov	r2, r4
   15eac:	mov	r1, r8
   15eb0:	mov	r0, r5
   15eb4:	ldr	r3, [sp, #8]
   15eb8:	bl	154e8 <table_set_long@@Base>
   15ebc:	mov	r6, #0
   15ec0:	b	15c30 <table_cell_from_buffer@@Base+0xac>
   15ec4:	ldr	r1, [pc, #808]	; 161f4 <table_cell_from_buffer@@Base+0x670>
   15ec8:	add	r7, sp, #8
   15ecc:	mov	r0, r6
   15ed0:	mov	r2, r7
   15ed4:	add	r1, pc, r1
   15ed8:	bl	129cc <__isoc99_sscanf@plt>
   15edc:	cmp	r0, #1
   15ee0:	bne	15c2c <table_cell_from_buffer@@Base+0xa8>
   15ee4:	ldrh	r3, [r7]
   15ee8:	mov	r2, r4
   15eec:	mov	r1, r8
   15ef0:	mov	r0, r5
   15ef4:	bl	154c0 <table_set_ushort@@Base>
   15ef8:	mov	r6, #0
   15efc:	b	15c30 <table_cell_from_buffer@@Base+0xac>
   15f00:	ldr	r1, [pc, #752]	; 161f8 <table_cell_from_buffer@@Base+0x674>
   15f04:	add	r7, sp, #8
   15f08:	mov	r0, r6
   15f0c:	mov	r2, r7
   15f10:	add	r1, pc, r1
   15f14:	bl	129cc <__isoc99_sscanf@plt>
   15f18:	cmp	r0, #1
   15f1c:	bne	15c2c <table_cell_from_buffer@@Base+0xa8>
   15f20:	ldrsh	r3, [r7]
   15f24:	mov	r2, r4
   15f28:	mov	r1, r8
   15f2c:	mov	r0, r5
   15f30:	bl	15498 <table_set_short@@Base>
   15f34:	mov	r6, #0
   15f38:	b	15c30 <table_cell_from_buffer@@Base+0xac>
   15f3c:	ldr	r1, [pc, #696]	; 161fc <table_cell_from_buffer@@Base+0x678>
   15f40:	add	r7, sp, #8
   15f44:	mov	r0, r6
   15f48:	mov	r2, r7
   15f4c:	add	r1, pc, r1
   15f50:	bl	129cc <__isoc99_sscanf@plt>
   15f54:	cmp	r0, #1
   15f58:	bne	15c2c <table_cell_from_buffer@@Base+0xa8>
   15f5c:	ldrd	r6, [r7]
   15f60:	mov	r2, r4
   15f64:	mov	r1, r8
   15f68:	strd	r6, [sp]
   15f6c:	mov	r0, r5
   15f70:	bl	15478 <table_set_uint64@@Base>
   15f74:	mov	r6, #0
   15f78:	b	15c30 <table_cell_from_buffer@@Base+0xac>
   15f7c:	ldr	r1, [pc, #636]	; 16200 <table_cell_from_buffer@@Base+0x67c>
   15f80:	add	r7, sp, #8
   15f84:	mov	r0, r6
   15f88:	mov	r2, r7
   15f8c:	add	r1, pc, r1
   15f90:	bl	129cc <__isoc99_sscanf@plt>
   15f94:	cmp	r0, #1
   15f98:	bne	15c2c <table_cell_from_buffer@@Base+0xa8>
   15f9c:	ldrd	r6, [r7]
   15fa0:	mov	r2, r4
   15fa4:	mov	r1, r8
   15fa8:	strd	r6, [sp]
   15fac:	mov	r0, r5
   15fb0:	bl	15458 <table_set_int64@@Base>
   15fb4:	mov	r6, #0
   15fb8:	b	15c30 <table_cell_from_buffer@@Base+0xac>
   15fbc:	ldr	r1, [pc, #576]	; 16204 <table_cell_from_buffer@@Base+0x680>
   15fc0:	mov	r0, r6
   15fc4:	add	r2, sp, #8
   15fc8:	add	r1, pc, r1
   15fcc:	bl	129cc <__isoc99_sscanf@plt>
   15fd0:	cmp	r0, #1
   15fd4:	bne	15c2c <table_cell_from_buffer@@Base+0xa8>
   15fd8:	mov	r2, r4
   15fdc:	mov	r1, r8
   15fe0:	mov	r0, r5
   15fe4:	ldr	r3, [sp, #8]
   15fe8:	bl	15430 <table_set_uint32@@Base>
   15fec:	mov	r6, #0
   15ff0:	b	15c30 <table_cell_from_buffer@@Base+0xac>
   15ff4:	ldr	r1, [pc, #524]	; 16208 <table_cell_from_buffer@@Base+0x684>
   15ff8:	mov	r0, r6
   15ffc:	add	r2, sp, #8
   16000:	add	r1, pc, r1
   16004:	bl	129cc <__isoc99_sscanf@plt>
   16008:	cmp	r0, #1
   1600c:	bne	15c2c <table_cell_from_buffer@@Base+0xa8>
   16010:	mov	r2, r4
   16014:	mov	r1, r8
   16018:	mov	r0, r5
   1601c:	ldr	r3, [sp, #8]
   16020:	bl	15408 <table_set_int32@@Base>
   16024:	mov	r6, #0
   16028:	b	15c30 <table_cell_from_buffer@@Base+0xac>
   1602c:	ldr	r1, [pc, #472]	; 1620c <table_cell_from_buffer@@Base+0x688>
   16030:	add	r7, sp, #8
   16034:	mov	r0, r6
   16038:	mov	r2, r7
   1603c:	add	r1, pc, r1
   16040:	bl	129cc <__isoc99_sscanf@plt>
   16044:	cmp	r0, #1
   16048:	bne	15c2c <table_cell_from_buffer@@Base+0xa8>
   1604c:	ldrh	r3, [r7]
   16050:	mov	r2, r4
   16054:	mov	r1, r8
   16058:	mov	r0, r5
   1605c:	bl	153e0 <table_set_uint16@@Base>
   16060:	mov	r6, #0
   16064:	b	15c30 <table_cell_from_buffer@@Base+0xac>
   16068:	ldr	r1, [pc, #416]	; 16210 <table_cell_from_buffer@@Base+0x68c>
   1606c:	add	r7, sp, #8
   16070:	mov	r0, r6
   16074:	mov	r2, r7
   16078:	add	r1, pc, r1
   1607c:	bl	129cc <__isoc99_sscanf@plt>
   16080:	cmp	r0, #1
   16084:	bne	15c2c <table_cell_from_buffer@@Base+0xa8>
   16088:	ldrsh	r3, [r7]
   1608c:	mov	r2, r4
   16090:	mov	r1, r8
   16094:	mov	r0, r5
   16098:	bl	153b8 <table_set_int16@@Base>
   1609c:	mov	r6, #0
   160a0:	b	15c30 <table_cell_from_buffer@@Base+0xac>
   160a4:	ldr	r1, [pc, #360]	; 16214 <table_cell_from_buffer@@Base+0x690>
   160a8:	mov	r0, r6
   160ac:	add	r2, sp, #8
   160b0:	add	r1, pc, r1
   160b4:	bl	129cc <__isoc99_sscanf@plt>
   160b8:	cmp	r0, #1
   160bc:	bne	15c2c <table_cell_from_buffer@@Base+0xa8>
   160c0:	mov	r2, r4
   160c4:	mov	r1, r8
   160c8:	mov	r0, r5
   160cc:	ldrb	r3, [sp, #8]
   160d0:	bl	15390 <table_set_uint8@@Base>
   160d4:	mov	r6, #0
   160d8:	b	15c30 <table_cell_from_buffer@@Base+0xac>
   160dc:	ldr	r1, [pc, #308]	; 16218 <table_cell_from_buffer@@Base+0x694>
   160e0:	add	r7, sp, #8
   160e4:	mov	r0, r6
   160e8:	mov	r2, r7
   160ec:	add	r1, pc, r1
   160f0:	bl	129cc <__isoc99_sscanf@plt>
   160f4:	cmp	r0, #1
   160f8:	bne	15c2c <table_cell_from_buffer@@Base+0xa8>
   160fc:	ldrsb	r3, [r7]
   16100:	mov	r2, r4
   16104:	mov	r1, r8
   16108:	mov	r0, r5
   1610c:	bl	15368 <table_set_int8@@Base>
   16110:	mov	r6, #0
   16114:	b	15c30 <table_cell_from_buffer@@Base+0xac>
   16118:	ldr	r1, [pc, #252]	; 1621c <table_cell_from_buffer@@Base+0x698>
   1611c:	mov	r0, r6
   16120:	add	r2, sp, #8
   16124:	add	r1, pc, r1
   16128:	bl	129cc <__isoc99_sscanf@plt>
   1612c:	cmp	r0, #1
   16130:	bne	15c2c <table_cell_from_buffer@@Base+0xa8>
   16134:	mov	r2, r4
   16138:	mov	r1, r8
   1613c:	mov	r0, r5
   16140:	ldr	r3, [sp, #8]
   16144:	bl	15340 <table_set_uint@@Base>
   16148:	mov	r6, #0
   1614c:	b	15c30 <table_cell_from_buffer@@Base+0xac>
   16150:	ldr	r1, [pc, #200]	; 16220 <table_cell_from_buffer@@Base+0x69c>
   16154:	mov	r0, r6
   16158:	add	r2, sp, #8
   1615c:	add	r1, pc, r1
   16160:	bl	129cc <__isoc99_sscanf@plt>
   16164:	cmp	r0, #1
   16168:	bne	15c2c <table_cell_from_buffer@@Base+0xa8>
   1616c:	mov	r2, r4
   16170:	mov	r1, r8
   16174:	mov	r0, r5
   16178:	ldr	r3, [sp, #8]
   1617c:	bl	15318 <table_set_int@@Base>
   16180:	mov	r6, #0
   16184:	b	15c30 <table_cell_from_buffer@@Base+0xac>
   16188:	mov	r2, r4
   1618c:	mov	r1, r8
   16190:	mov	r0, r5
   16194:	mov	r3, r6
   16198:	bl	152f0 <table_set_bool@@Base>
   1619c:	b	15c30 <table_cell_from_buffer@@Base+0xac>
   161a0:	mov	r2, r4
   161a4:	mov	r1, r8
   161a8:	mov	r0, r5
   161ac:	ldr	r3, [sp, #8]
   161b0:	bl	15650 <table_set_ptr@@Base>
   161b4:	mov	r6, #0
   161b8:	b	15c30 <table_cell_from_buffer@@Base+0xac>
   161bc:	mov	r6, #0
   161c0:	b	15c30 <table_cell_from_buffer@@Base+0xac>
   161c4:	andeq	r0, r0, r8, asr sl
   161c8:	andeq	r0, r0, r0, ror r9
   161cc:	andeq	r0, r0, r4, ror #19
   161d0:	muleq	r0, r8, r9
   161d4:	andeq	r0, r0, r0, ror r9
   161d8:	andeq	r0, r0, r0, lsr r9
   161dc:	strdeq	r0, [r0], -r4
   161e0:	andeq	r0, r0, r4, asr #17
   161e4:	andeq	r0, r0, r4, ror #16
   161e8:	andeq	r0, r0, ip, lsl r8
   161ec:	strdeq	r0, [r0], -ip
   161f0:	andeq	r0, r0, r0, asr #15
   161f4:	andeq	r0, r0, r0, lsl #15
   161f8:	andeq	r0, r0, r0, asr #14
   161fc:	strdeq	r0, [r0], -ip
   16200:			; <UNDEFINED> instruction: 0x000006b4
   16204:	andeq	r0, r0, r4, ror r6
   16208:			; <UNDEFINED> instruction: 0x000005b8
   1620c:	andeq	r0, r0, r8, lsl r6
   16210:	ldrdeq	r0, [r0], -r8
   16214:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   16218:	andeq	r0, r0, ip, lsl #11
   1621c:	andeq	r0, r0, r8, lsl r5
   16220:	andeq	r0, r0, ip, asr r4

00016224 <table_get_cell_ptr@@Base>:
   16224:	push	{r4, lr}
   16228:	mov	r4, r2
   1622c:	bl	14d34 <table_get_row_ptr@@Base>
   16230:	ldr	r0, [r0]
   16234:	add	r0, r0, r4, lsl #2
   16238:	pop	{r4, pc}

0001623c <table_cell_init@@Base>:
   1623c:	push	{r4, lr}
   16240:	bl	16224 <table_get_cell_ptr@@Base>
   16244:	mov	r3, #0
   16248:	str	r3, [r0]
   1624c:	pop	{r4, pc}

00016250 <table_cell_destroy@@Base>:
   16250:	push	{r4, r5, r6, lr}
   16254:	mov	r6, r1
   16258:	mov	r1, r2
   1625c:	mov	r4, r2
   16260:	mov	r5, r0
   16264:	bl	13974 <table_get_column_data_type@@Base>
   16268:	cmp	r0, #23
   1626c:	popeq	{r4, r5, r6, pc}
   16270:	mov	r2, r4
   16274:	mov	r1, r6
   16278:	mov	r0, r5
   1627c:	bl	16224 <table_get_cell_ptr@@Base>
   16280:	ldr	r0, [r0]
   16284:	cmp	r0, #0
   16288:	popeq	{r4, r5, r6, pc}
   1628c:	pop	{r4, r5, r6, lr}
   16290:	b	1296c <free@plt>

00016294 <table_cell_nullify@@Base>:
   16294:	push	{r4, lr}
   16298:	bl	16224 <table_get_cell_ptr@@Base>
   1629c:	mov	r4, r0
   162a0:	ldr	r0, [r0]
   162a4:	cmp	r0, #0
   162a8:	beq	162b8 <table_cell_nullify@@Base+0x24>
   162ac:	bl	1296c <free@plt>
   162b0:	mov	r3, #0
   162b4:	str	r3, [r4]
   162b8:	mov	r0, #0
   162bc:	pop	{r4, pc}
   162c0:	subs	r2, r1, #1
   162c4:	bxeq	lr
   162c8:	bcc	164a0 <table_cell_nullify@@Base+0x20c>
   162cc:	cmp	r0, r1
   162d0:	bls	16484 <table_cell_nullify@@Base+0x1f0>
   162d4:	tst	r1, r2
   162d8:	beq	16490 <table_cell_nullify@@Base+0x1fc>
   162dc:	clz	r3, r0
   162e0:	clz	r2, r1
   162e4:	sub	r3, r2, r3
   162e8:	rsbs	r3, r3, #31
   162ec:	addne	r3, r3, r3, lsl #1
   162f0:	mov	r2, #0
   162f4:	addne	pc, pc, r3, lsl #2
   162f8:	nop			; (mov r0, r0)
   162fc:	cmp	r0, r1, lsl #31
   16300:	adc	r2, r2, r2
   16304:	subcs	r0, r0, r1, lsl #31
   16308:	cmp	r0, r1, lsl #30
   1630c:	adc	r2, r2, r2
   16310:	subcs	r0, r0, r1, lsl #30
   16314:	cmp	r0, r1, lsl #29
   16318:	adc	r2, r2, r2
   1631c:	subcs	r0, r0, r1, lsl #29
   16320:	cmp	r0, r1, lsl #28
   16324:	adc	r2, r2, r2
   16328:	subcs	r0, r0, r1, lsl #28
   1632c:	cmp	r0, r1, lsl #27
   16330:	adc	r2, r2, r2
   16334:	subcs	r0, r0, r1, lsl #27
   16338:	cmp	r0, r1, lsl #26
   1633c:	adc	r2, r2, r2
   16340:	subcs	r0, r0, r1, lsl #26
   16344:	cmp	r0, r1, lsl #25
   16348:	adc	r2, r2, r2
   1634c:	subcs	r0, r0, r1, lsl #25
   16350:	cmp	r0, r1, lsl #24
   16354:	adc	r2, r2, r2
   16358:	subcs	r0, r0, r1, lsl #24
   1635c:	cmp	r0, r1, lsl #23
   16360:	adc	r2, r2, r2
   16364:	subcs	r0, r0, r1, lsl #23
   16368:	cmp	r0, r1, lsl #22
   1636c:	adc	r2, r2, r2
   16370:	subcs	r0, r0, r1, lsl #22
   16374:	cmp	r0, r1, lsl #21
   16378:	adc	r2, r2, r2
   1637c:	subcs	r0, r0, r1, lsl #21
   16380:	cmp	r0, r1, lsl #20
   16384:	adc	r2, r2, r2
   16388:	subcs	r0, r0, r1, lsl #20
   1638c:	cmp	r0, r1, lsl #19
   16390:	adc	r2, r2, r2
   16394:	subcs	r0, r0, r1, lsl #19
   16398:	cmp	r0, r1, lsl #18
   1639c:	adc	r2, r2, r2
   163a0:	subcs	r0, r0, r1, lsl #18
   163a4:	cmp	r0, r1, lsl #17
   163a8:	adc	r2, r2, r2
   163ac:	subcs	r0, r0, r1, lsl #17
   163b0:	cmp	r0, r1, lsl #16
   163b4:	adc	r2, r2, r2
   163b8:	subcs	r0, r0, r1, lsl #16
   163bc:	cmp	r0, r1, lsl #15
   163c0:	adc	r2, r2, r2
   163c4:	subcs	r0, r0, r1, lsl #15
   163c8:	cmp	r0, r1, lsl #14
   163cc:	adc	r2, r2, r2
   163d0:	subcs	r0, r0, r1, lsl #14
   163d4:	cmp	r0, r1, lsl #13
   163d8:	adc	r2, r2, r2
   163dc:	subcs	r0, r0, r1, lsl #13
   163e0:	cmp	r0, r1, lsl #12
   163e4:	adc	r2, r2, r2
   163e8:	subcs	r0, r0, r1, lsl #12
   163ec:	cmp	r0, r1, lsl #11
   163f0:	adc	r2, r2, r2
   163f4:	subcs	r0, r0, r1, lsl #11
   163f8:	cmp	r0, r1, lsl #10
   163fc:	adc	r2, r2, r2
   16400:	subcs	r0, r0, r1, lsl #10
   16404:	cmp	r0, r1, lsl #9
   16408:	adc	r2, r2, r2
   1640c:	subcs	r0, r0, r1, lsl #9
   16410:	cmp	r0, r1, lsl #8
   16414:	adc	r2, r2, r2
   16418:	subcs	r0, r0, r1, lsl #8
   1641c:	cmp	r0, r1, lsl #7
   16420:	adc	r2, r2, r2
   16424:	subcs	r0, r0, r1, lsl #7
   16428:	cmp	r0, r1, lsl #6
   1642c:	adc	r2, r2, r2
   16430:	subcs	r0, r0, r1, lsl #6
   16434:	cmp	r0, r1, lsl #5
   16438:	adc	r2, r2, r2
   1643c:	subcs	r0, r0, r1, lsl #5
   16440:	cmp	r0, r1, lsl #4
   16444:	adc	r2, r2, r2
   16448:	subcs	r0, r0, r1, lsl #4
   1644c:	cmp	r0, r1, lsl #3
   16450:	adc	r2, r2, r2
   16454:	subcs	r0, r0, r1, lsl #3
   16458:	cmp	r0, r1, lsl #2
   1645c:	adc	r2, r2, r2
   16460:	subcs	r0, r0, r1, lsl #2
   16464:	cmp	r0, r1, lsl #1
   16468:	adc	r2, r2, r2
   1646c:	subcs	r0, r0, r1, lsl #1
   16470:	cmp	r0, r1
   16474:	adc	r2, r2, r2
   16478:	subcs	r0, r0, r1
   1647c:	mov	r0, r2
   16480:	bx	lr
   16484:	moveq	r0, #1
   16488:	movne	r0, #0
   1648c:	bx	lr
   16490:	clz	r2, r1
   16494:	rsb	r2, r2, #31
   16498:	lsr	r0, r0, r2
   1649c:	bx	lr
   164a0:	cmp	r0, #0
   164a4:	mvnne	r0, #0
   164a8:	b	164cc <table_cell_nullify@@Base+0x238>
   164ac:	cmp	r1, #0
   164b0:	beq	164a0 <table_cell_nullify@@Base+0x20c>
   164b4:	push	{r0, r1, lr}
   164b8:	bl	162c0 <table_cell_nullify@@Base+0x2c>
   164bc:	pop	{r1, r2, lr}
   164c0:	mul	r3, r2, r0
   164c4:	sub	r1, r1, r3
   164c8:	bx	lr
   164cc:	push	{r1, lr}
   164d0:	mov	r0, #8
   164d4:	bl	12948 <raise@plt>
   164d8:	pop	{r1, pc}

000164dc <__libc_csu_init@@Base>:
   164dc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   164e0:	mov	r7, r0
   164e4:	ldr	r6, [pc, #72]	; 16534 <__libc_csu_init@@Base+0x58>
   164e8:	ldr	r5, [pc, #72]	; 16538 <__libc_csu_init@@Base+0x5c>
   164ec:	add	r6, pc, r6
   164f0:	add	r5, pc, r5
   164f4:	sub	r6, r6, r5
   164f8:	mov	r8, r1
   164fc:	mov	r9, r2
   16500:	bl	12928 <raise@plt-0x20>
   16504:	asrs	r6, r6, #2
   16508:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1650c:	mov	r4, #0
   16510:	add	r4, r4, #1
   16514:	ldr	r3, [r5], #4
   16518:	mov	r2, r9
   1651c:	mov	r1, r8
   16520:	mov	r0, r7
   16524:	blx	r3
   16528:	cmp	r6, r4
   1652c:	bne	16510 <__libc_csu_init@@Base+0x34>
   16530:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   16534:	andeq	r0, r1, ip, lsl sl
   16538:	andeq	r0, r1, r4, lsl sl

0001653c <__libc_csu_fini@@Base>:
   1653c:	bx	lr

Disassembly of section .fini:

00016540 <.fini>:
   16540:	push	{r3, lr}
   16544:	pop	{r3, pc}
