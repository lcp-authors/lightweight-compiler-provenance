
../repos/tbeu-matio-3dd266d/tools/.libs/matdump:     file format elf32-littlearm


Disassembly of section .init:

00010d88 <.init>:
   10d88:	push	{r3, lr}
   10d8c:	bl	11ca0 <Mat_VarReadNextInfo@plt+0xc7c>
   10d90:	pop	{r3, pc}

Disassembly of section .plt:

00010d94 <Mat_VarGetNumberOfFields@plt-0x14>:
   10d94:	push	{lr}		; (str lr, [sp, #-4]!)
   10d98:	ldr	lr, [pc, #4]	; 10da4 <Mat_VarGetNumberOfFields@plt-0x4>
   10d9c:	add	lr, pc, lr
   10da0:	ldr	pc, [lr, #8]!
   10da4:	andeq	r4, r1, ip, asr r2

00010da8 <Mat_VarGetNumberOfFields@plt>:
   10da8:	add	ip, pc, #0, 12
   10dac:	add	ip, ip, #20, 20	; 0x14000
   10db0:	ldr	pc, [ip, #604]!	; 0x25c

00010db4 <Mat_SetVerbose@plt>:
   10db4:	add	ip, pc, #0, 12
   10db8:	add	ip, ip, #20, 20	; 0x14000
   10dbc:	ldr	pc, [ip, #596]!	; 0x254

00010dc0 <raise@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #20, 20	; 0x14000
   10dc8:	ldr	pc, [ip, #588]!	; 0x24c

00010dcc <Mat_LogClose@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #20, 20	; 0x14000
   10dd4:	ldr	pc, [ip, #580]!	; 0x244

00010dd8 <Mat_VarReadNext@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #20, 20	; 0x14000
   10de0:	ldr	pc, [ip, #572]!	; 0x23c

00010de4 <strcmp@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #20, 20	; 0x14000
   10dec:	ldr	pc, [ip, #564]!	; 0x234

00010df0 <Mat_Open@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #20, 20	; 0x14000
   10df8:	ldr	pc, [ip, #556]!	; 0x22c

00010dfc <strtol@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #20, 20	; 0x14000
   10e04:	ldr	pc, [ip, #548]!	; 0x224

00010e08 <printf@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #20, 20	; 0x14000
   10e10:	ldr	pc, [ip, #540]!	; 0x21c

00010e14 <Mat_VarGetCells@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #20, 20	; 0x14000
   10e1c:	ldr	pc, [ip, #532]!	; 0x214

00010e20 <Mat_VarGetCell@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #20, 20	; 0x14000
   10e28:	ldr	pc, [ip, #524]!	; 0x20c

00010e2c <Mat_VarCreate@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #20, 20	; 0x14000
   10e34:	ldr	pc, [ip, #516]!	; 0x204

00010e38 <free@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #20, 20	; 0x14000
   10e40:	ldr	pc, [ip, #508]!	; 0x1fc

00010e44 <Mat_Warning@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #20, 20	; 0x14000
   10e4c:	ldr	pc, [ip, #500]!	; 0x1f4

00010e50 <Mat_VarReadDataLinear@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #20, 20	; 0x14000
   10e58:	ldr	pc, [ip, #492]!	; 0x1ec

00010e5c <Mat_Message@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #20, 20	; 0x14000
   10e64:	ldr	pc, [ip, #484]!	; 0x1e4

00010e68 <Mat_VarReadData@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #20, 20	; 0x14000
   10e70:	ldr	pc, [ip, #476]!	; 0x1dc

00010e74 <Mat_VarReadDataAll@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #20, 20	; 0x14000
   10e7c:	ldr	pc, [ip, #468]!	; 0x1d4

00010e80 <Mat_VarReadInfo@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #20, 20	; 0x14000
   10e88:	ldr	pc, [ip, #460]!	; 0x1cc

00010e8c <fwrite@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #20, 20	; 0x14000
   10e94:	ldr	pc, [ip, #452]!	; 0x1c4

00010e98 <Mat_VarGetStructFieldnames@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #20, 20	; 0x14000
   10ea0:	ldr	pc, [ip, #444]!	; 0x1bc

00010ea4 <floor@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #20, 20	; 0x14000
   10eac:	ldr	pc, [ip, #436]!	; 0x1b4

00010eb0 <getenv@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #20, 20	; 0x14000
   10eb8:	ldr	pc, [ip, #428]!	; 0x1ac

00010ebc <puts@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #20, 20	; 0x14000
   10ec4:	ldr	pc, [ip, #420]!	; 0x1a4

00010ec8 <malloc@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #20, 20	; 0x14000
   10ed0:	ldr	pc, [ip, #412]!	; 0x19c

00010ed4 <log10@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #20, 20	; 0x14000
   10edc:	ldr	pc, [ip, #404]!	; 0x194

00010ee0 <__libc_start_main@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #20, 20	; 0x14000
   10ee8:	ldr	pc, [ip, #396]!	; 0x18c

00010eec <__gmon_start__@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #20, 20	; 0x14000
   10ef4:	ldr	pc, [ip, #388]!	; 0x184

00010ef8 <exit@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #20, 20	; 0x14000
   10f00:	ldr	pc, [ip, #380]!	; 0x17c

00010f04 <Mat_VarFree@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #20, 20	; 0x14000
   10f0c:	ldr	pc, [ip, #372]!	; 0x174

00010f10 <Mat_SizeOf@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #20, 20	; 0x14000
   10f18:	ldr	pc, [ip, #364]!	; 0x16c

00010f1c <strlen@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #20, 20	; 0x14000
   10f24:	ldr	pc, [ip, #356]!	; 0x164

00010f28 <strchr@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #20, 20	; 0x14000
   10f30:	ldr	pc, [ip, #348]!	; 0x15c

00010f34 <warnx@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #20, 20	; 0x14000
   10f3c:	ldr	pc, [ip, #340]!	; 0x154

00010f40 <fprintf@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #20, 20	; 0x14000
   10f48:	ldr	pc, [ip, #332]!	; 0x14c

00010f4c <Mat_GetLibraryVersion@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #20, 20	; 0x14000
   10f54:	ldr	pc, [ip, #324]!	; 0x144

00010f58 <Mat_VarPrint@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #20, 20	; 0x14000
   10f60:	ldr	pc, [ip, #316]!	; 0x13c

00010f64 <memset@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #20, 20	; 0x14000
   10f6c:	ldr	pc, [ip, #308]!	; 0x134

00010f70 <putchar@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #20, 20	; 0x14000
   10f78:	ldr	pc, [ip, #300]!	; 0x12c

00010f7c <Mat_Close@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #20, 20	; 0x14000
   10f84:	ldr	pc, [ip, #292]!	; 0x124

00010f88 <Mat_Critical@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #20, 20	; 0x14000
   10f90:	ldr	pc, [ip, #284]!	; 0x11c

00010f94 <ceil@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #20, 20	; 0x14000
   10f9c:	ldr	pc, [ip, #276]!	; 0x114

00010fa0 <Mat_LogInitFunc@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #20, 20	; 0x14000
   10fa8:	ldr	pc, [ip, #268]!	; 0x10c

00010fac <Mat_VerbMessage@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #20, 20	; 0x14000
   10fb4:	ldr	pc, [ip, #260]!	; 0x104

00010fb8 <Mat_VarGetCellsLinear@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #20, 20	; 0x14000
   10fc0:	ldr	pc, [ip, #252]!	; 0xfc

00010fc4 <sprintf@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #20, 20	; 0x14000
   10fcc:	ldr	pc, [ip, #244]!	; 0xf4

00010fd0 <Mat_Help@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #20, 20	; 0x14000
   10fd8:	ldr	pc, [ip, #236]!	; 0xec

00010fdc <Mat_VarGetStructFieldByName@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #20, 20	; 0x14000
   10fe4:	ldr	pc, [ip, #228]!	; 0xe4

00010fe8 <Mat_SizeOfClass@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #20, 20	; 0x14000
   10ff0:	ldr	pc, [ip, #220]!	; 0xdc

00010ff4 <Mat_VarGetSize@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #20, 20	; 0x14000
   10ffc:	ldr	pc, [ip, #212]!	; 0xd4

00011000 <strncmp@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #20, 20	; 0x14000
   11008:	ldr	pc, [ip, #204]!	; 0xcc

0001100c <abort@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #20, 20	; 0x14000
   11014:	ldr	pc, [ip, #196]!	; 0xc4

00011018 <Mat_VarDuplicate@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #20, 20	; 0x14000
   11020:	ldr	pc, [ip, #188]!	; 0xbc

00011024 <Mat_VarReadNextInfo@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #20, 20	; 0x14000
   1102c:	ldr	pc, [ip, #180]!	; 0xb4

Disassembly of section .text:

00011030 <getopt@@Base-0x2ecc>:
   11030:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11034:	sub	sp, sp, #108	; 0x6c
   11038:	mov	r9, r0
   1103c:	mov	r4, r1
   11040:	add	r2, sp, #100	; 0x64
   11044:	add	r1, sp, #96	; 0x60
   11048:	add	r0, sp, #92	; 0x5c
   1104c:	bl	10f4c <Mat_GetLibraryVersion@plt>
   11050:	ldr	fp, [sp, #92]	; 0x5c
   11054:	ldr	sl, [pc, #2920]	; 11bc4 <Mat_VarReadNextInfo@plt+0xba0>
   11058:	cmp	fp, #1
   1105c:	add	sl, pc, sl
   11060:	bne	11070 <Mat_VarReadNextInfo@plt+0x4c>
   11064:	ldr	r3, [sp, #96]	; 0x60
   11068:	cmp	r3, #5
   1106c:	beq	110a0 <Mat_VarReadNextInfo@plt+0x7c>
   11070:	ldr	r3, [pc, #2896]	; 11bc8 <Mat_VarReadNextInfo@plt+0xba4>
   11074:	ldr	r0, [pc, #2896]	; 11bcc <Mat_VarReadNextInfo@plt+0xba8>
   11078:	mov	r1, #1
   1107c:	ldr	r3, [sl, r3]
   11080:	mov	r2, #55	; 0x37
   11084:	add	r0, pc, r0
   11088:	ldr	r3, [r3]
   1108c:	mov	fp, r1
   11090:	bl	10e8c <fwrite@plt>
   11094:	mov	r0, fp
   11098:	add	sp, sp, #108	; 0x6c
   1109c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   110a0:	ldr	r3, [sp, #100]	; 0x64
   110a4:	cmp	r3, #15
   110a8:	bne	11070 <Mat_VarReadNextInfo@plt+0x4c>
   110ac:	ldr	r1, [pc, #2844]	; 11bd0 <Mat_VarReadNextInfo@plt+0xbac>
   110b0:	ldr	r0, [pc, #2844]	; 11bd4 <Mat_VarReadNextInfo@plt+0xbb0>
   110b4:	add	r1, pc, r1
   110b8:	add	r0, pc, r0
   110bc:	bl	10fa0 <Mat_LogInitFunc@plt>
   110c0:	ldr	r3, [pc, #2832]	; 11bd8 <Mat_VarReadNextInfo@plt+0xbb4>
   110c4:	ldr	r2, [pc, #2832]	; 11bdc <Mat_VarReadNextInfo@plt+0xbb8>
   110c8:	add	r3, pc, r3
   110cc:	add	r2, pc, r2
   110d0:	str	r2, [r3, #12]
   110d4:	ldr	r3, [pc, #2820]	; 11be0 <Mat_VarReadNextInfo@plt+0xbbc>
   110d8:	ldr	r8, [pc, #2820]	; 11be4 <Mat_VarReadNextInfo@plt+0xbc0>
   110dc:	add	r3, pc, r3
   110e0:	str	r3, [sp, #16]
   110e4:	ldr	r3, [pc, #2812]	; 11be8 <Mat_VarReadNextInfo@plt+0xbc4>
   110e8:	ldr	r6, [pc, #2812]	; 11bec <Mat_VarReadNextInfo@plt+0xbc8>
   110ec:	add	r3, pc, r3
   110f0:	str	r3, [sp, #20]
   110f4:	ldr	r3, [pc, #2804]	; 11bf0 <Mat_VarReadNextInfo@plt+0xbcc>
   110f8:	add	r8, pc, r8
   110fc:	add	r3, pc, r3
   11100:	str	r3, [sp, #24]
   11104:	ldr	r3, [pc, #2792]	; 11bf4 <Mat_VarReadNextInfo@plt+0xbd0>
   11108:	add	r7, r8, #72	; 0x48
   1110c:	add	r6, pc, r6
   11110:	add	r3, pc, r3
   11114:	str	r3, [sp, #28]
   11118:	mov	r5, #0
   1111c:	str	r5, [sp]
   11120:	mov	r3, r7
   11124:	mov	r2, r6
   11128:	mov	r1, r4
   1112c:	mov	r0, r9
   11130:	bl	13f1c <getopt_long@@Base>
   11134:	cmn	r0, #1
   11138:	beq	11248 <Mat_VarReadNextInfo@plt+0x224>
   1113c:	cmp	r0, #100	; 0x64
   11140:	beq	111a4 <Mat_VarReadNextInfo@plt+0x180>
   11144:	ble	11170 <Mat_VarReadNextInfo@plt+0x14c>
   11148:	cmp	r0, #104	; 0x68
   1114c:	beq	11224 <Mat_VarReadNextInfo@plt+0x200>
   11150:	cmp	r0, #118	; 0x76
   11154:	beq	11214 <Mat_VarReadNextInfo@plt+0x1f0>
   11158:	cmp	r0, #102	; 0x66
   1115c:	beq	111d0 <Mat_VarReadNextInfo@plt+0x1ac>
   11160:	mov	r1, r0
   11164:	ldr	r0, [sp, #24]
   11168:	bl	10e08 <printf@plt>
   1116c:	b	11118 <Mat_VarReadNextInfo@plt+0xf4>
   11170:	cmp	r0, #72	; 0x48
   11174:	beq	111c0 <Mat_VarReadNextInfo@plt+0x19c>
   11178:	cmp	r0, #86	; 0x56
   1117c:	bne	11160 <Mat_VarReadNextInfo@plt+0x13c>
   11180:	ldr	r2, [pc, #2672]	; 11bf8 <Mat_VarReadNextInfo@plt+0xbd4>
   11184:	ldr	r1, [pc, #2672]	; 11bfc <Mat_VarReadNextInfo@plt+0xbd8>
   11188:	ldr	r0, [pc, #2672]	; 11c00 <Mat_VarReadNextInfo@plt+0xbdc>
   1118c:	add	r2, pc, r2
   11190:	add	r1, pc, r1
   11194:	add	r0, pc, r0
   11198:	bl	10e08 <printf@plt>
   1119c:	mov	r0, r5
   111a0:	bl	10ef8 <exit@plt>
   111a4:	ldr	r2, [sp, #16]
   111a8:	mov	r3, #1
   111ac:	mov	r0, r3
   111b0:	ldr	r1, [sp, #20]
   111b4:	str	r3, [r2, #8]
   111b8:	bl	10fac <Mat_VerbMessage@plt>
   111bc:	b	11118 <Mat_VarReadNextInfo@plt+0xf4>
   111c0:	mov	r0, r8
   111c4:	bl	10fd0 <Mat_Help@plt>
   111c8:	mov	r0, r5
   111cc:	bl	10ef8 <exit@plt>
   111d0:	ldr	r3, [pc, #2604]	; 11c04 <Mat_VarReadNextInfo@plt+0xbe0>
   111d4:	ldr	r3, [sl, r3]
   111d8:	ldr	r5, [r3]
   111dc:	cmp	r5, #0
   111e0:	beq	119b4 <Mat_VarReadNextInfo@plt+0x990>
   111e4:	ldr	r1, [pc, #2588]	; 11c08 <Mat_VarReadNextInfo@plt+0xbe4>
   111e8:	mov	r0, r5
   111ec:	add	r1, pc, r1
   111f0:	bl	10de4 <strcmp@plt>
   111f4:	cmp	r0, #0
   111f8:	bne	11234 <Mat_VarReadNextInfo@plt+0x210>
   111fc:	ldr	r3, [pc, #2568]	; 11c0c <Mat_VarReadNextInfo@plt+0xbe8>
   11200:	ldr	r2, [pc, #2568]	; 11c10 <Mat_VarReadNextInfo@plt+0xbec>
   11204:	add	r3, pc, r3
   11208:	add	r2, pc, r2
   1120c:	str	r2, [r3, #12]
   11210:	b	11118 <Mat_VarReadNextInfo@plt+0xf4>
   11214:	mov	r1, r5
   11218:	mov	r0, #1
   1121c:	bl	10db4 <Mat_SetVerbose@plt>
   11220:	b	11118 <Mat_VarReadNextInfo@plt+0xf4>
   11224:	ldr	r2, [sp, #28]
   11228:	mov	r3, #1
   1122c:	str	r3, [r2]
   11230:	b	11118 <Mat_VarReadNextInfo@plt+0xf4>
   11234:	ldr	r0, [pc, #2520]	; 11c14 <Mat_VarReadNextInfo@plt+0xbf0>
   11238:	mov	r1, r5
   1123c:	add	r0, pc, r0
   11240:	bl	10e44 <Mat_Warning@plt>
   11244:	b	11118 <Mat_VarReadNextInfo@plt+0xf4>
   11248:	ldr	r3, [pc, #2504]	; 11c18 <Mat_VarReadNextInfo@plt+0xbf4>
   1124c:	ldr	r6, [sl, r3]
   11250:	ldr	r3, [r6]
   11254:	sub	r2, r9, r3
   11258:	cmp	r2, r5
   1125c:	ble	11a9c <Mat_VarReadNextInfo@plt+0xa78>
   11260:	ldr	r0, [r4, r3, lsl #2]
   11264:	mov	r1, r5
   11268:	bl	10df0 <Mat_Open@plt>
   1126c:	subs	r3, r0, #0
   11270:	str	r3, [sp, #52]	; 0x34
   11274:	ldr	r3, [r6]
   11278:	beq	11b88 <Mat_VarReadNextInfo@plt+0xb64>
   1127c:	add	r2, r3, #1
   11280:	cmp	r9, r2
   11284:	str	r2, [sp, #36]	; 0x24
   11288:	str	r2, [r6]
   1128c:	ble	118bc <Mat_VarReadNextInfo@plt+0x898>
   11290:	ldr	r2, [pc, #2436]	; 11c1c <Mat_VarReadNextInfo@plt+0xbf8>
   11294:	add	r3, r4, r3, lsl #2
   11298:	add	r2, pc, r2
   1129c:	str	r2, [sp, #72]	; 0x48
   112a0:	ldr	r2, [pc, #2424]	; 11c20 <Mat_VarReadNextInfo@plt+0xbfc>
   112a4:	str	r3, [sp, #32]
   112a8:	add	r2, pc, r2
   112ac:	str	r2, [sp, #64]	; 0x40
   112b0:	ldr	r2, [pc, #2412]	; 11c24 <Mat_VarReadNextInfo@plt+0xc00>
   112b4:	str	fp, [sp, #48]	; 0x30
   112b8:	add	r2, pc, r2
   112bc:	str	r2, [sp, #68]	; 0x44
   112c0:	ldr	r2, [pc, #2400]	; 11c28 <Mat_VarReadNextInfo@plt+0xc04>
   112c4:	str	r9, [sp, #60]	; 0x3c
   112c8:	add	r2, pc, r2
   112cc:	str	r2, [sp, #76]	; 0x4c
   112d0:	ldr	r2, [pc, #2388]	; 11c2c <Mat_VarReadNextInfo@plt+0xc08>
   112d4:	str	sl, [sp, #40]	; 0x28
   112d8:	add	r2, pc, r2
   112dc:	str	r2, [sp, #80]	; 0x50
   112e0:	ldr	r2, [pc, #2376]	; 11c30 <Mat_VarReadNextInfo@plt+0xc0c>
   112e4:	add	r2, pc, r2
   112e8:	str	r2, [sp, #84]	; 0x54
   112ec:	b	1132c <Mat_VarReadNextInfo@plt+0x308>
   112f0:	mov	r1, r9
   112f4:	mov	r0, r6
   112f8:	bl	10e74 <Mat_VarReadDataAll@plt>
   112fc:	ldr	r3, [sp, #68]	; 0x44
   11300:	mov	r0, r9
   11304:	ldr	r3, [r3, #12]
   11308:	blx	r3
   1130c:	mov	r0, r9
   11310:	bl	10f04 <Mat_VarFree@plt>
   11314:	ldr	r3, [sp, #36]	; 0x24
   11318:	ldr	r2, [sp, #60]	; 0x3c
   1131c:	add	r3, r3, #1
   11320:	cmp	r2, r3
   11324:	str	r3, [sp, #36]	; 0x24
   11328:	beq	11900 <Mat_VarReadNextInfo@plt+0x8dc>
   1132c:	ldr	r3, [sp, #32]
   11330:	ldr	r4, [r3, #4]
   11334:	mov	r0, r4
   11338:	bl	12a18 <Mat_VarReadNextInfo@plt+0x19f4>
   1133c:	ldr	r6, [sp, #52]	; 0x34
   11340:	cmp	r4, r0
   11344:	movne	r3, #0
   11348:	ldrbne	r4, [r0]
   1134c:	strbne	r3, [r0]
   11350:	ldr	r3, [sp, #32]
   11354:	mov	r5, r0
   11358:	mov	r0, r6
   1135c:	ldr	r1, [r3, #4]!
   11360:	moveq	r4, #0
   11364:	str	r3, [sp, #32]
   11368:	bl	10e80 <Mat_VarReadInfo@plt>
   1136c:	subs	r9, r0, #0
   11370:	beq	11a0c <Mat_VarReadNextInfo@plt+0x9e8>
   11374:	ldr	r3, [sp, #64]	; 0x40
   11378:	ldr	r3, [r3, #8]
   1137c:	cmp	r3, #0
   11380:	beq	112fc <Mat_VarReadNextInfo@plt+0x2d8>
   11384:	cmp	r4, #0
   11388:	beq	112f0 <Mat_VarReadNextInfo@plt+0x2cc>
   1138c:	strb	r4, [r5]
   11390:	mov	r0, r5
   11394:	bl	12a18 <Mat_VarReadNextInfo@plt+0x19f4>
   11398:	mov	sl, #0
   1139c:	mov	r4, #1
   113a0:	ldrb	r3, [r0]
   113a4:	str	r0, [sp, #24]
   113a8:	str	r3, [sp, #16]
   113ac:	ldr	r3, [sp, #16]
   113b0:	cmp	r3, #40	; 0x28
   113b4:	beq	11680 <Mat_VarReadNextInfo@plt+0x65c>
   113b8:	ldr	r3, [sp, #16]
   113bc:	cmp	r3, #46	; 0x2e
   113c0:	beq	115b4 <Mat_VarReadNextInfo@plt+0x590>
   113c4:	ldr	r3, [sp, #16]
   113c8:	cmp	r3, #123	; 0x7b
   113cc:	bne	113ac <Mat_VarReadNextInfo@plt+0x388>
   113d0:	ldr	r3, [r9, #16]
   113d4:	cmp	r3, #1
   113d8:	bne	11b10 <Mat_VarReadNextInfo@plt+0xaec>
   113dc:	ldr	r3, [sp, #24]
   113e0:	mov	r1, #125	; 0x7d
   113e4:	add	r5, r3, #1
   113e8:	mov	r0, r5
   113ec:	bl	10f28 <strchr@plt>
   113f0:	mov	r6, r0
   113f4:	add	r0, r0, #1
   113f8:	bl	12a18 <Mat_VarReadNextInfo@plt+0x19f4>
   113fc:	ldrb	r3, [r0]
   11400:	str	r0, [sp, #44]	; 0x2c
   11404:	cmp	r3, #0
   11408:	strbne	sl, [r0]
   1140c:	ldreq	r3, [sp, #48]	; 0x30
   11410:	mov	r0, r5
   11414:	strne	r3, [sp, #16]
   11418:	strne	sl, [sp, #28]
   1141c:	streq	r3, [sp, #28]
   11420:	ldr	r5, [sp, #48]	; 0x30
   11424:	b	11434 <Mat_VarReadNextInfo@plt+0x410>
   11428:	ldrb	r3, [r0], #1
   1142c:	cmp	r3, #44	; 0x2c
   11430:	addeq	r5, r5, #1
   11434:	cmp	r6, r0
   11438:	bne	11428 <Mat_VarReadNextInfo@plt+0x404>
   1143c:	lsl	r8, r5, #2
   11440:	mov	r0, r8
   11444:	bl	10ec8 <malloc@plt>
   11448:	mov	r7, r0
   1144c:	mov	r0, r8
   11450:	bl	10ec8 <malloc@plt>
   11454:	mov	fp, r0
   11458:	mov	r0, r8
   1145c:	bl	10ec8 <malloc@plt>
   11460:	mov	r8, r6
   11464:	mov	r3, #0
   11468:	mov	r6, r0
   1146c:	str	sl, [r7, r3, lsl #2]
   11470:	str	r4, [fp, r3, lsl #2]
   11474:	str	r4, [r6, r3, lsl #2]
   11478:	add	r3, r3, #1
   1147c:	cmp	r5, r3
   11480:	bne	1146c <Mat_VarReadNextInfo@plt+0x448>
   11484:	mov	r1, r8
   11488:	ldr	r0, [sp, #24]
   1148c:	mov	r3, fp
   11490:	mov	r2, r7
   11494:	str	r6, [sp]
   11498:	bl	12a78 <Mat_VarReadNextInfo@plt+0x1a54>
   1149c:	add	r3, r9, #32
   114a0:	str	r3, [sp, #4]
   114a4:	ldr	r2, [r9, #4]
   114a8:	mov	r3, r6
   114ac:	str	r2, [sp]
   114b0:	mov	r1, r7
   114b4:	mov	r2, fp
   114b8:	mov	r0, r5
   114bc:	bl	12de4 <Mat_VarReadNextInfo@plt+0x1dc0>
   114c0:	subs	r3, r0, #0
   114c4:	str	r3, [sp, #24]
   114c8:	beq	11978 <Mat_VarReadNextInfo@plt+0x954>
   114cc:	cmp	r5, #1
   114d0:	beq	117f0 <Mat_VarReadNextInfo@plt+0x7cc>
   114d4:	mov	r3, r6
   114d8:	mov	r1, r7
   114dc:	mov	r2, fp
   114e0:	mov	r0, r9
   114e4:	bl	10e14 <Mat_VarGetCells@plt>
   114e8:	ldr	r1, [r9, #32]
   114ec:	mov	r3, #0
   114f0:	str	r0, [sp, #20]
   114f4:	ldr	r2, [r6, r3, lsl #2]
   114f8:	str	r2, [r1, r3, lsl #2]
   114fc:	add	r3, r3, #1
   11500:	cmp	r5, r3
   11504:	bne	114f4 <Mat_VarReadNextInfo@plt+0x4d0>
   11508:	ldr	r3, [sp, #20]
   1150c:	cmp	r3, #0
   11510:	beq	119c4 <Mat_VarReadNextInfo@plt+0x9a0>
   11514:	sub	r8, r3, #4
   11518:	str	r6, [sp, #56]	; 0x38
   1151c:	mov	r5, #0
   11520:	mov	r6, r8
   11524:	ldr	r8, [sp, #24]
   11528:	b	11540 <Mat_VarReadNextInfo@plt+0x51c>
   1152c:	ldr	r0, [r6, #4]
   11530:	mov	r1, r4
   11534:	bl	11018 <Mat_VarDuplicate@plt>
   11538:	add	r5, r5, #1
   1153c:	str	r0, [r6, #4]!
   11540:	cmp	r8, r5
   11544:	bgt	1152c <Mat_VarReadNextInfo@plt+0x508>
   11548:	ldr	r3, [sp, #20]
   1154c:	str	r4, [sp, #8]
   11550:	str	r3, [sp, #4]
   11554:	ldr	r3, [r9, #32]
   11558:	mov	r2, #21
   1155c:	mov	r1, #1
   11560:	str	r3, [sp]
   11564:	ldr	r3, [r9, #4]
   11568:	ldr	r0, [r9, #36]	; 0x24
   1156c:	ldr	r6, [sp, #56]	; 0x38
   11570:	bl	10e2c <Mat_VarCreate@plt>
   11574:	mov	r5, r0
   11578:	mov	r0, r9
   1157c:	bl	10f04 <Mat_VarFree@plt>
   11580:	mov	r0, r7
   11584:	bl	10e38 <free@plt>
   11588:	mov	r0, fp
   1158c:	bl	10e38 <free@plt>
   11590:	ldr	r3, [sp, #44]	; 0x2c
   11594:	mov	r0, r6
   11598:	str	r3, [sp, #24]
   1159c:	mov	r9, r5
   115a0:	bl	10e38 <free@plt>
   115a4:	ldr	r3, [sp, #28]
   115a8:	cmp	r3, #0
   115ac:	beq	113ac <Mat_VarReadNextInfo@plt+0x388>
   115b0:	b	112fc <Mat_VarReadNextInfo@plt+0x2d8>
   115b4:	ldr	r3, [r9, #16]
   115b8:	ldr	r2, [sp, #24]
   115bc:	cmp	r3, #2
   115c0:	add	r6, r2, #1
   115c4:	beq	11914 <Mat_VarReadNextInfo@plt+0x8f0>
   115c8:	cmp	r3, #1
   115cc:	bne	11aec <Mat_VarReadNextInfo@plt+0xac8>
   115d0:	ldr	r1, [r9, #12]
   115d4:	ldr	r0, [r9]
   115d8:	bl	13f64 <getopt_long_only@@Base+0x24>
   115dc:	mov	r5, #0
   115e0:	mov	r7, r0
   115e4:	mov	r0, r6
   115e8:	bl	12a18 <Mat_VarReadNextInfo@plt+0x19f4>
   115ec:	ldr	r2, [r9, #40]	; 0x28
   115f0:	str	r2, [sp, #20]
   115f4:	cmp	r6, r0
   115f8:	mov	r3, r0
   115fc:	ldrbne	r2, [r0]
   11600:	ldreq	r3, [sp, #48]	; 0x30
   11604:	str	r0, [sp, #24]
   11608:	strne	r2, [sp, #16]
   1160c:	strne	sl, [sp, #28]
   11610:	strbne	sl, [r0]
   11614:	streq	r3, [sp, #28]
   11618:	b	11670 <Mat_VarReadNextInfo@plt+0x64c>
   1161c:	mov	r1, r5
   11620:	mov	r0, r9
   11624:	bl	10e20 <Mat_VarGetCell@plt>
   11628:	subs	r8, r0, #0
   1162c:	beq	117a4 <Mat_VarReadNextInfo@plt+0x780>
   11630:	ldr	r3, [r8, #16]
   11634:	cmp	r3, #2
   11638:	bne	117a4 <Mat_VarReadNextInfo@plt+0x780>
   1163c:	mov	r2, sl
   11640:	mov	r1, r6
   11644:	bl	10fdc <Mat_VarGetStructFieldByName@plt>
   11648:	cmp	r0, #0
   1164c:	beq	117c8 <Mat_VarReadNextInfo@plt+0x7a4>
   11650:	mov	r1, r4
   11654:	bl	11018 <Mat_VarDuplicate@plt>
   11658:	mov	fp, r0
   1165c:	mov	r0, r8
   11660:	bl	10f04 <Mat_VarFree@plt>
   11664:	ldr	r3, [sp, #20]
   11668:	str	fp, [r3, r5, lsl #2]
   1166c:	add	r5, r5, #1
   11670:	cmp	r7, r5
   11674:	bgt	1161c <Mat_VarReadNextInfo@plt+0x5f8>
   11678:	beq	115a4 <Mat_VarReadNextInfo@plt+0x580>
   1167c:	b	112fc <Mat_VarReadNextInfo@plt+0x2d8>
   11680:	ldr	r3, [sp, #24]
   11684:	mov	r1, #41	; 0x29
   11688:	add	r4, r3, #1
   1168c:	mov	r0, r4
   11690:	bl	10f28 <strchr@plt>
   11694:	add	r5, r0, #1
   11698:	mov	r8, r0
   1169c:	mov	r0, r5
   116a0:	bl	12a18 <Mat_VarReadNextInfo@plt+0x19f4>
   116a4:	cmp	r5, r0
   116a8:	moveq	r3, r4
   116ac:	ldreq	r4, [sp, #48]	; 0x30
   116b0:	beq	116f0 <Mat_VarReadNextInfo@plt+0x6cc>
   116b4:	mov	r2, #0
   116b8:	strb	r2, [r0]
   116bc:	ldr	r3, [pc, #1284]	; 11bc8 <Mat_VarReadNextInfo@plt+0xba4>
   116c0:	ldr	r2, [sp, #40]	; 0x28
   116c4:	ldr	r0, [pc, #1384]	; 11c34 <Mat_VarReadNextInfo@plt+0xc10>
   116c8:	mov	r1, #1
   116cc:	ldr	r3, [r2, r3]
   116d0:	add	r0, pc, r0
   116d4:	mov	r2, #56	; 0x38
   116d8:	ldr	r3, [r3]
   116dc:	bl	10e8c <fwrite@plt>
   116e0:	b	112fc <Mat_VarReadNextInfo@plt+0x2d8>
   116e4:	ldrb	r2, [r3], #1
   116e8:	cmp	r2, #44	; 0x2c
   116ec:	addeq	r4, r4, #1
   116f0:	cmp	r8, r3
   116f4:	bne	116e4 <Mat_VarReadNextInfo@plt+0x6c0>
   116f8:	lsl	r5, r4, #2
   116fc:	mov	r0, r5
   11700:	bl	10ec8 <malloc@plt>
   11704:	mov	r7, r0
   11708:	mov	r0, r5
   1170c:	bl	10ec8 <malloc@plt>
   11710:	mov	r6, r0
   11714:	mov	r0, r5
   11718:	bl	10ec8 <malloc@plt>
   1171c:	mov	r3, #0
   11720:	mov	r1, r8
   11724:	mov	r2, #1
   11728:	mov	r5, r0
   1172c:	mov	r0, r3
   11730:	str	r0, [r7, r3, lsl #2]
   11734:	str	r2, [r6, r3, lsl #2]
   11738:	str	r2, [r5, r3, lsl #2]
   1173c:	add	r3, r3, #1
   11740:	cmp	r4, r3
   11744:	bne	11730 <Mat_VarReadNextInfo@plt+0x70c>
   11748:	ldr	r0, [sp, #24]
   1174c:	mov	r3, r6
   11750:	mov	r2, r7
   11754:	str	r5, [sp]
   11758:	bl	12a78 <Mat_VarReadNextInfo@plt+0x1a54>
   1175c:	add	r3, r9, #32
   11760:	str	r3, [sp, #4]
   11764:	ldr	r2, [r9, #4]
   11768:	mov	r3, r5
   1176c:	str	r2, [sp]
   11770:	mov	r1, r7
   11774:	mov	r2, r6
   11778:	mov	r0, r4
   1177c:	bl	12de4 <Mat_VarReadNextInfo@plt+0x1dc0>
   11780:	subs	r8, r0, #0
   11784:	bne	11828 <Mat_VarReadNextInfo@plt+0x804>
   11788:	mov	r0, r7
   1178c:	bl	10e38 <free@plt>
   11790:	mov	r0, r6
   11794:	bl	10e38 <free@plt>
   11798:	mov	r0, r5
   1179c:	bl	10e38 <free@plt>
   117a0:	b	112fc <Mat_VarReadNextInfo@plt+0x2d8>
   117a4:	ldr	r0, [sp, #40]	; 0x28
   117a8:	ldr	r3, [pc, #1048]	; 11bc8 <Mat_VarReadNextInfo@plt+0xba4>
   117ac:	ldr	r1, [pc, #1156]	; 11c38 <Mat_VarReadNextInfo@plt+0xc14>
   117b0:	mov	r2, r5
   117b4:	ldr	r3, [r0, r3]
   117b8:	add	r1, pc, r1
   117bc:	ldr	r0, [r3]
   117c0:	bl	10f40 <fprintf@plt>
   117c4:	b	112fc <Mat_VarReadNextInfo@plt+0x2d8>
   117c8:	ldr	r1, [pc, #1016]	; 11bc8 <Mat_VarReadNextInfo@plt+0xba4>
   117cc:	ldr	r0, [sp, #40]	; 0x28
   117d0:	mov	r2, r6
   117d4:	ldr	r3, [r9, #36]	; 0x24
   117d8:	ldr	r0, [r0, r1]
   117dc:	ldr	r1, [pc, #1112]	; 11c3c <Mat_VarReadNextInfo@plt+0xc18>
   117e0:	ldr	r0, [r0]
   117e4:	add	r1, pc, r1
   117e8:	bl	10f40 <fprintf@plt>
   117ec:	b	112fc <Mat_VarReadNextInfo@plt+0x2d8>
   117f0:	ldr	r3, [r6]
   117f4:	ldr	r2, [fp]
   117f8:	ldr	r1, [r7]
   117fc:	mov	r0, r9
   11800:	bl	10fb8 <Mat_VarGetCellsLinear@plt>
   11804:	ldr	r3, [r9, #4]
   11808:	cmp	r3, #2
   1180c:	ldr	r3, [r9, #32]
   11810:	str	r0, [sp, #20]
   11814:	beq	119e8 <Mat_VarReadNextInfo@plt+0x9c4>
   11818:	str	r4, [r9, #4]
   1181c:	ldr	r2, [r6]
   11820:	str	r2, [r3]
   11824:	b	11508 <Mat_VarReadNextInfo@plt+0x4e4>
   11828:	ldr	r0, [r9, #16]
   1182c:	bl	10fe8 <Mat_SizeOfClass@plt>
   11830:	ldr	r3, [r9, #20]
   11834:	cmp	r3, #0
   11838:	mul	r8, r0, r8
   1183c:	str	r0, [r9, #12]
   11840:	str	r8, [r9]
   11844:	beq	11968 <Mat_VarReadNextInfo@plt+0x944>
   11848:	mov	r0, #8
   1184c:	bl	10ec8 <malloc@plt>
   11850:	mov	sl, r0
   11854:	str	r0, [r9, #40]	; 0x28
   11858:	mov	r0, r8
   1185c:	bl	10ec8 <malloc@plt>
   11860:	str	r0, [sl]
   11864:	mov	r0, r8
   11868:	bl	10ec8 <malloc@plt>
   1186c:	str	r0, [sl, #4]
   11870:	ldr	r2, [r9, #40]	; 0x28
   11874:	cmp	r2, #0
   11878:	beq	11b34 <Mat_VarReadNextInfo@plt+0xb10>
   1187c:	cmp	r4, #1
   11880:	beq	11a20 <Mat_VarReadNextInfo@plt+0x9fc>
   11884:	mov	r3, r7
   11888:	mov	r1, r9
   1188c:	str	r5, [sp, #4]
   11890:	str	r6, [sp]
   11894:	ldr	r0, [sp, #52]	; 0x34
   11898:	bl	10e68 <Mat_VarReadData@plt>
   1189c:	ldr	r1, [r9, #32]
   118a0:	mov	r3, #0
   118a4:	ldr	r2, [r5, r3, lsl #2]
   118a8:	str	r2, [r1, r3, lsl #2]
   118ac:	add	r3, r3, #1
   118b0:	cmp	r4, r3
   118b4:	bne	118a4 <Mat_VarReadNextInfo@plt+0x880>
   118b8:	b	11788 <Mat_VarReadNextInfo@plt+0x764>
   118bc:	ldr	r3, [pc, #892]	; 11c40 <Mat_VarReadNextInfo@plt+0xc1c>
   118c0:	add	r3, pc, r3
   118c4:	ldr	r3, [r3, #8]
   118c8:	cmp	r3, #0
   118cc:	bne	11a68 <Mat_VarReadNextInfo@plt+0xa44>
   118d0:	ldr	r5, [pc, #876]	; 11c44 <Mat_VarReadNextInfo@plt+0xc20>
   118d4:	ldr	r6, [sp, #52]	; 0x34
   118d8:	add	r5, pc, r5
   118dc:	b	118f0 <Mat_VarReadNextInfo@plt+0x8cc>
   118e0:	ldr	r3, [r5, #12]
   118e4:	blx	r3
   118e8:	mov	r0, r4
   118ec:	bl	10f04 <Mat_VarFree@plt>
   118f0:	mov	r0, r6
   118f4:	bl	11024 <Mat_VarReadNextInfo@plt>
   118f8:	subs	r4, r0, #0
   118fc:	bne	118e0 <Mat_VarReadNextInfo@plt+0x8bc>
   11900:	ldr	r0, [sp, #52]	; 0x34
   11904:	bl	10f7c <Mat_Close@plt>
   11908:	mov	fp, #0
   1190c:	bl	10dcc <Mat_LogClose@plt>
   11910:	b	11094 <Mat_VarReadNextInfo@plt+0x70>
   11914:	mov	r0, r6
   11918:	bl	12a18 <Mat_VarReadNextInfo@plt+0x19f4>
   1191c:	cmp	r6, r0
   11920:	str	r0, [sp, #24]
   11924:	beq	11aac <Mat_VarReadNextInfo@plt+0xa88>
   11928:	ldrb	r2, [r0]
   1192c:	mov	r1, r6
   11930:	strb	sl, [r0]
   11934:	str	r2, [sp, #16]
   11938:	mov	r0, r9
   1193c:	mov	r2, sl
   11940:	bl	10fdc <Mat_VarGetStructFieldByName@plt>
   11944:	cmp	r0, #0
   11948:	beq	11b9c <Mat_VarReadNextInfo@plt+0xb78>
   1194c:	mov	r1, r4
   11950:	bl	11018 <Mat_VarDuplicate@plt>
   11954:	mov	r5, r0
   11958:	mov	r0, r9
   1195c:	bl	10f04 <Mat_VarFree@plt>
   11960:	mov	r9, r5
   11964:	b	113ac <Mat_VarReadNextInfo@plt+0x388>
   11968:	mov	r0, r8
   1196c:	bl	10ec8 <malloc@plt>
   11970:	str	r0, [r9, #40]	; 0x28
   11974:	b	11870 <Mat_VarReadNextInfo@plt+0x84c>
   11978:	ldr	r0, [sp, #40]	; 0x28
   1197c:	ldr	r3, [pc, #580]	; 11bc8 <Mat_VarReadNextInfo@plt+0xba4>
   11980:	mov	r2, #24
   11984:	mov	r1, #1
   11988:	ldr	r3, [r0, r3]
   1198c:	ldr	r0, [sp, #76]	; 0x4c
   11990:	ldr	r3, [r3]
   11994:	bl	10e8c <fwrite@plt>
   11998:	mov	r0, r7
   1199c:	bl	10e38 <free@plt>
   119a0:	mov	r0, fp
   119a4:	bl	10e38 <free@plt>
   119a8:	mov	r0, r6
   119ac:	bl	10e38 <free@plt>
   119b0:	b	112fc <Mat_VarReadNextInfo@plt+0x2d8>
   119b4:	ldr	r0, [pc, #652]	; 11c48 <Mat_VarReadNextInfo@plt+0xc24>
   119b8:	add	r0, pc, r0
   119bc:	bl	10e44 <Mat_Warning@plt>
   119c0:	b	11118 <Mat_VarReadNextInfo@plt+0xf4>
   119c4:	ldr	r0, [sp, #40]	; 0x28
   119c8:	ldr	r3, [pc, #504]	; 11bc8 <Mat_VarReadNextInfo@plt+0xba4>
   119cc:	mov	r2, #31
   119d0:	mov	r1, #1
   119d4:	ldr	r3, [r0, r3]
   119d8:	ldr	r0, [sp, #80]	; 0x50
   119dc:	ldr	r3, [r3]
   119e0:	bl	10e8c <fwrite@plt>
   119e4:	b	11998 <Mat_VarReadNextInfo@plt+0x974>
   119e8:	ldr	r2, [r3]
   119ec:	cmp	r2, #1
   119f0:	ldreq	r2, [r6]
   119f4:	streq	r2, [r3, #4]
   119f8:	beq	11508 <Mat_VarReadNextInfo@plt+0x4e4>
   119fc:	ldr	r2, [r3, #4]
   11a00:	cmp	r2, #1
   11a04:	bne	11818 <Mat_VarReadNextInfo@plt+0x7f4>
   11a08:	b	1181c <Mat_VarReadNextInfo@plt+0x7f8>
   11a0c:	ldr	r3, [sp, #32]
   11a10:	ldr	r0, [sp, #72]	; 0x48
   11a14:	ldr	r1, [r3]
   11a18:	bl	10e44 <Mat_Warning@plt>
   11a1c:	b	11314 <Mat_VarReadNextInfo@plt+0x2f0>
   11a20:	ldr	r1, [r5]
   11a24:	ldr	r3, [r6]
   11a28:	ldr	r0, [sp, #52]	; 0x34
   11a2c:	str	r1, [sp, #4]
   11a30:	str	r3, [sp]
   11a34:	mov	r1, r9
   11a38:	ldr	r3, [r7]
   11a3c:	bl	10e50 <Mat_VarReadDataLinear@plt>
   11a40:	ldr	r3, [r9, #4]
   11a44:	cmp	r3, #2
   11a48:	ldr	r3, [r9, #32]
   11a4c:	beq	11b5c <Mat_VarReadNextInfo@plt+0xb38>
   11a50:	mov	r2, #2
   11a54:	str	r2, [r9, #4]
   11a58:	ldr	r1, [r5]
   11a5c:	mov	r2, #1
   11a60:	stm	r3, {r1, r2}
   11a64:	b	11788 <Mat_VarReadNextInfo@plt+0x764>
   11a68:	ldr	r5, [pc, #476]	; 11c4c <Mat_VarReadNextInfo@plt+0xc28>
   11a6c:	ldr	r6, [sp, #52]	; 0x34
   11a70:	add	r5, pc, r5
   11a74:	b	11a88 <Mat_VarReadNextInfo@plt+0xa64>
   11a78:	ldr	r3, [r5, #12]
   11a7c:	blx	r3
   11a80:	mov	r0, r4
   11a84:	bl	10f04 <Mat_VarFree@plt>
   11a88:	mov	r0, r6
   11a8c:	bl	10dd8 <Mat_VarReadNext@plt>
   11a90:	subs	r4, r0, #0
   11a94:	bne	11a78 <Mat_VarReadNextInfo@plt+0xa54>
   11a98:	b	11900 <Mat_VarReadNextInfo@plt+0x8dc>
   11a9c:	ldr	r0, [pc, #428]	; 11c50 <Mat_VarReadNextInfo@plt+0xc2c>
   11aa0:	add	r0, pc, r0
   11aa4:	bl	10f88 <Mat_Critical@plt>
   11aa8:	b	11094 <Mat_VarReadNextInfo@plt+0x70>
   11aac:	ldr	r1, [sp, #24]
   11ab0:	mov	r2, #0
   11ab4:	mov	r0, r9
   11ab8:	bl	10fdc <Mat_VarGetStructFieldByName@plt>
   11abc:	cmp	r0, #0
   11ac0:	beq	11b9c <Mat_VarReadNextInfo@plt+0xb78>
   11ac4:	mov	r1, #1
   11ac8:	bl	11018 <Mat_VarDuplicate@plt>
   11acc:	mov	r4, r0
   11ad0:	mov	r0, r9
   11ad4:	bl	10f04 <Mat_VarFree@plt>
   11ad8:	mov	r1, r4
   11adc:	ldr	r0, [sp, #52]	; 0x34
   11ae0:	mov	r9, r4
   11ae4:	bl	10e74 <Mat_VarReadDataAll@plt>
   11ae8:	b	112fc <Mat_VarReadNextInfo@plt+0x2d8>
   11aec:	ldr	r0, [sp, #40]	; 0x28
   11af0:	ldr	r3, [pc, #208]	; 11bc8 <Mat_VarReadNextInfo@plt+0xba4>
   11af4:	ldr	r1, [pc, #344]	; 11c54 <Mat_VarReadNextInfo@plt+0xc30>
   11af8:	mov	r2, r6
   11afc:	ldr	r3, [r0, r3]
   11b00:	add	r1, pc, r1
   11b04:	ldr	r0, [r3]
   11b08:	bl	10f40 <fprintf@plt>
   11b0c:	b	112fc <Mat_VarReadNextInfo@plt+0x2d8>
   11b10:	ldr	r0, [sp, #40]	; 0x28
   11b14:	ldr	r3, [pc, #172]	; 11bc8 <Mat_VarReadNextInfo@plt+0xba4>
   11b18:	mov	r2, #34	; 0x22
   11b1c:	mov	r1, #1
   11b20:	ldr	r3, [r0, r3]
   11b24:	ldr	r0, [sp, #84]	; 0x54
   11b28:	ldr	r3, [r3]
   11b2c:	bl	10e8c <fwrite@plt>
   11b30:	b	112fc <Mat_VarReadNextInfo@plt+0x2d8>
   11b34:	ldr	r0, [sp, #40]	; 0x28
   11b38:	ldr	r3, [pc, #136]	; 11bc8 <Mat_VarReadNextInfo@plt+0xba4>
   11b3c:	mov	r2, #37	; 0x25
   11b40:	mov	r1, #1
   11b44:	ldr	r3, [r0, r3]
   11b48:	ldr	r0, [pc, #264]	; 11c58 <Mat_VarReadNextInfo@plt+0xc34>
   11b4c:	ldr	r3, [r3]
   11b50:	add	r0, pc, r0
   11b54:	bl	10e8c <fwrite@plt>
   11b58:	b	11788 <Mat_VarReadNextInfo@plt+0x764>
   11b5c:	ldr	r2, [r3]
   11b60:	cmp	r2, #1
   11b64:	ldreq	r2, [r5]
   11b68:	streq	r2, [r3, #4]
   11b6c:	beq	11788 <Mat_VarReadNextInfo@plt+0x764>
   11b70:	ldr	r2, [r3, #4]
   11b74:	cmp	r2, #1
   11b78:	ldreq	r2, [r5]
   11b7c:	streq	r2, [r3]
   11b80:	bne	11a50 <Mat_VarReadNextInfo@plt+0xa2c>
   11b84:	b	11788 <Mat_VarReadNextInfo@plt+0x764>
   11b88:	ldr	r0, [pc, #204]	; 11c5c <Mat_VarReadNextInfo@plt+0xc38>
   11b8c:	ldr	r1, [r4, r3, lsl #2]
   11b90:	add	r0, pc, r0
   11b94:	bl	10f88 <Mat_Critical@plt>
   11b98:	b	11094 <Mat_VarReadNextInfo@plt+0x70>
   11b9c:	ldr	r1, [pc, #36]	; 11bc8 <Mat_VarReadNextInfo@plt+0xba4>
   11ba0:	ldr	r0, [sp, #40]	; 0x28
   11ba4:	mov	r2, r6
   11ba8:	ldr	r3, [r9, #36]	; 0x24
   11bac:	ldr	r0, [r0, r1]
   11bb0:	ldr	r1, [pc, #168]	; 11c60 <Mat_VarReadNextInfo@plt+0xc3c>
   11bb4:	ldr	r0, [r0]
   11bb8:	add	r1, pc, r1
   11bbc:	bl	10f40 <fprintf@plt>
   11bc0:	b	112fc <Mat_VarReadNextInfo@plt+0x2d8>
   11bc4:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   11bc8:	andeq	r0, r0, ip, ror #1
   11bcc:	ldrdeq	r3, [r0], -ip
   11bd0:	andeq	r1, r0, r8, lsl #18
   11bd4:	andeq	r3, r0, r0, ror #11
   11bd8:	andeq	r4, r1, r4, lsl r1
   11bdc:	andeq	r1, r0, r0, lsl #1
   11be0:	andeq	r4, r1, r0, lsl #2
   11be4:	andeq	r4, r1, ip
   11be8:			; <UNDEFINED> instruction: 0x000035b4
   11bec:	andeq	r3, r0, r4, lsl #13
   11bf0:	andeq	r3, r0, ip, ror r6
   11bf4:	andeq	r4, r1, ip, asr #1
   11bf8:	andeq	r3, r0, ip, lsl #11
   11bfc:	andeq	r3, r0, r8, lsl #10
   11c00:	andeq	r3, r0, ip, lsl #11
   11c04:	strdeq	r0, [r0], -ip
   11c08:	andeq	r3, r0, r4, asr #9
   11c0c:	ldrdeq	r3, [r1], -r8
   11c10:	muleq	r0, r8, ip
   11c14:	andeq	r3, r0, ip, ror r4
   11c18:	strdeq	r0, [r0], -r4
   11c1c:	andeq	r3, r0, r0, ror #12
   11c20:	andeq	r3, r1, r4, lsr pc
   11c24:	andeq	r3, r1, r4, lsr #30
   11c28:	andeq	r3, r0, r4, lsl r6
   11c2c:	andeq	r3, r0, r4, ror #11
   11c30:			; <UNDEFINED> instruction: 0x000035b4
   11c34:	andeq	r3, r0, r0, lsl #2
   11c38:	andeq	r3, r0, r4, lsr #1
   11c3c:	andeq	r3, r0, r0, asr r0
   11c40:	andeq	r3, r1, ip, lsl r9
   11c44:	andeq	r3, r1, r4, lsl #18
   11c48:	andeq	r2, r0, r8, lsr sp
   11c4c:	andeq	r3, r1, ip, ror #14
   11c50:	strdeq	r2, [r0], -r8
   11c54:	andeq	r2, r0, r0, lsl #27
   11c58:			; <UNDEFINED> instruction: 0x00002cbc
   11c5c:	andeq	r2, r0, ip, lsr #24
   11c60:	andeq	r2, r0, ip, ror ip
   11c64:	mov	fp, #0
   11c68:	mov	lr, #0
   11c6c:	pop	{r1}		; (ldr r1, [sp], #4)
   11c70:	mov	r2, sp
   11c74:	push	{r2}		; (str r2, [sp, #-4]!)
   11c78:	push	{r0}		; (str r0, [sp, #-4]!)
   11c7c:	ldr	ip, [pc, #16]	; 11c94 <Mat_VarReadNextInfo@plt+0xc70>
   11c80:	push	{ip}		; (str ip, [sp, #-4]!)
   11c84:	ldr	r0, [pc, #12]	; 11c98 <Mat_VarReadNextInfo@plt+0xc74>
   11c88:	ldr	r3, [pc, #12]	; 11c9c <Mat_VarReadNextInfo@plt+0xc78>
   11c8c:	bl	10ee0 <__libc_start_main@plt>
   11c90:	bl	1100c <abort@plt>
   11c94:	andeq	r4, r1, r0, lsr #8
   11c98:	andeq	r1, r1, r0, lsr r0
   11c9c:	andeq	r4, r1, r0, asr #7
   11ca0:	ldr	r3, [pc, #20]	; 11cbc <Mat_VarReadNextInfo@plt+0xc98>
   11ca4:	ldr	r2, [pc, #20]	; 11cc0 <Mat_VarReadNextInfo@plt+0xc9c>
   11ca8:	add	r3, pc, r3
   11cac:	ldr	r2, [r3, r2]
   11cb0:	cmp	r2, #0
   11cb4:	bxeq	lr
   11cb8:	b	10eec <__gmon_start__@plt>
   11cbc:	andeq	r3, r1, r0, asr r3
   11cc0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11cc4:	ldr	r3, [pc, #28]	; 11ce8 <Mat_VarReadNextInfo@plt+0xcc4>
   11cc8:	ldr	r0, [pc, #28]	; 11cec <Mat_VarReadNextInfo@plt+0xcc8>
   11ccc:	sub	r3, r3, r0
   11cd0:	cmp	r3, #6
   11cd4:	bxls	lr
   11cd8:	ldr	r3, [pc, #16]	; 11cf0 <Mat_VarReadNextInfo@plt+0xccc>
   11cdc:	cmp	r3, #0
   11ce0:	bxeq	lr
   11ce4:	bx	r3
   11ce8:	andeq	r5, r2, r3, ror #3
   11cec:	andeq	r5, r2, r0, ror #3
   11cf0:	andeq	r0, r0, r0
   11cf4:	ldr	r1, [pc, #36]	; 11d20 <Mat_VarReadNextInfo@plt+0xcfc>
   11cf8:	ldr	r0, [pc, #36]	; 11d24 <Mat_VarReadNextInfo@plt+0xd00>
   11cfc:	sub	r1, r1, r0
   11d00:	asr	r1, r1, #2
   11d04:	add	r1, r1, r1, lsr #31
   11d08:	asrs	r1, r1, #1
   11d0c:	bxeq	lr
   11d10:	ldr	r3, [pc, #16]	; 11d28 <Mat_VarReadNextInfo@plt+0xd04>
   11d14:	cmp	r3, #0
   11d18:	bxeq	lr
   11d1c:	bx	r3
   11d20:	andeq	r5, r2, r0, ror #3
   11d24:	andeq	r5, r2, r0, ror #3
   11d28:	andeq	r0, r0, r0
   11d2c:	push	{r4, lr}
   11d30:	ldr	r4, [pc, #24]	; 11d50 <Mat_VarReadNextInfo@plt+0xd2c>
   11d34:	ldrb	r3, [r4]
   11d38:	cmp	r3, #0
   11d3c:	popne	{r4, pc}
   11d40:	bl	11cc4 <Mat_VarReadNextInfo@plt+0xca0>
   11d44:	mov	r3, #1
   11d48:	strb	r3, [r4]
   11d4c:	pop	{r4, pc}
   11d50:	andeq	r5, r2, r0, ror #3
   11d54:	ldr	r0, [pc, #40]	; 11d84 <Mat_VarReadNextInfo@plt+0xd60>
   11d58:	ldr	r3, [r0]
   11d5c:	cmp	r3, #0
   11d60:	bne	11d68 <Mat_VarReadNextInfo@plt+0xd44>
   11d64:	b	11cf4 <Mat_VarReadNextInfo@plt+0xcd0>
   11d68:	ldr	r3, [pc, #24]	; 11d88 <Mat_VarReadNextInfo@plt+0xd64>
   11d6c:	cmp	r3, #0
   11d70:	beq	11d64 <Mat_VarReadNextInfo@plt+0xd40>
   11d74:	push	{r4, lr}
   11d78:	blx	r3
   11d7c:	pop	{r4, lr}
   11d80:	b	11cf4 <Mat_VarReadNextInfo@plt+0xcd0>
   11d84:			; <UNDEFINED> instruction: 0x00024eb4
	...
   11d90:	sub	r0, r0, #1
   11d94:	cmp	r0, #12
   11d98:	addls	pc, pc, r0, lsl #2
   11d9c:	b	11e7c <Mat_VarReadNextInfo@plt+0xe58>
   11da0:	b	11de4 <Mat_VarReadNextInfo@plt+0xdc0>
   11da4:	b	11df4 <Mat_VarReadNextInfo@plt+0xdd0>
   11da8:	b	11e04 <Mat_VarReadNextInfo@plt+0xde0>
   11dac:	b	11e14 <Mat_VarReadNextInfo@plt+0xdf0>
   11db0:	b	11e24 <Mat_VarReadNextInfo@plt+0xe00>
   11db4:	b	11e34 <Mat_VarReadNextInfo@plt+0xe10>
   11db8:	b	11e44 <Mat_VarReadNextInfo@plt+0xe20>
   11dbc:	b	11e7c <Mat_VarReadNextInfo@plt+0xe58>
   11dc0:	b	11e5c <Mat_VarReadNextInfo@plt+0xe38>
   11dc4:	b	11e7c <Mat_VarReadNextInfo@plt+0xe58>
   11dc8:	b	11e7c <Mat_VarReadNextInfo@plt+0xe58>
   11dcc:	b	11e6c <Mat_VarReadNextInfo@plt+0xe48>
   11dd0:	b	11dd4 <Mat_VarReadNextInfo@plt+0xdb0>
   11dd4:	ldr	r0, [pc, #164]	; 11e80 <Mat_VarReadNextInfo@plt+0xe5c>
   11dd8:	ldrd	r2, [r1]
   11ddc:	add	r0, pc, r0
   11de0:	b	10e08 <printf@plt>
   11de4:	ldr	r0, [pc, #152]	; 11e84 <Mat_VarReadNextInfo@plt+0xe60>
   11de8:	ldrsb	r1, [r1]
   11dec:	add	r0, pc, r0
   11df0:	b	10e08 <printf@plt>
   11df4:	ldr	r0, [pc, #140]	; 11e88 <Mat_VarReadNextInfo@plt+0xe64>
   11df8:	ldrb	r1, [r1]
   11dfc:	add	r0, pc, r0
   11e00:	b	10e08 <printf@plt>
   11e04:	ldr	r0, [pc, #128]	; 11e8c <Mat_VarReadNextInfo@plt+0xe68>
   11e08:	ldrsh	r1, [r1]
   11e0c:	add	r0, pc, r0
   11e10:	b	10e08 <printf@plt>
   11e14:	ldr	r0, [pc, #116]	; 11e90 <Mat_VarReadNextInfo@plt+0xe6c>
   11e18:	ldrh	r1, [r1]
   11e1c:	add	r0, pc, r0
   11e20:	b	10e08 <printf@plt>
   11e24:	ldr	r0, [pc, #104]	; 11e94 <Mat_VarReadNextInfo@plt+0xe70>
   11e28:	ldr	r1, [r1]
   11e2c:	add	r0, pc, r0
   11e30:	b	10e08 <printf@plt>
   11e34:	ldr	r0, [pc, #92]	; 11e98 <Mat_VarReadNextInfo@plt+0xe74>
   11e38:	ldr	r1, [r1]
   11e3c:	add	r0, pc, r0
   11e40:	b	10e08 <printf@plt>
   11e44:	vldr	s15, [r1]
   11e48:	ldr	r0, [pc, #76]	; 11e9c <Mat_VarReadNextInfo@plt+0xe78>
   11e4c:	add	r0, pc, r0
   11e50:	vcvt.f64.f32	d7, s15
   11e54:	vmov	r2, r3, d7
   11e58:	b	10e08 <printf@plt>
   11e5c:	ldr	r0, [pc, #60]	; 11ea0 <Mat_VarReadNextInfo@plt+0xe7c>
   11e60:	ldrd	r2, [r1]
   11e64:	add	r0, pc, r0
   11e68:	b	10e08 <printf@plt>
   11e6c:	ldr	r0, [pc, #48]	; 11ea4 <Mat_VarReadNextInfo@plt+0xe80>
   11e70:	ldrd	r2, [r1]
   11e74:	add	r0, pc, r0
   11e78:	b	10e08 <printf@plt>
   11e7c:	bx	lr
   11e80:	andeq	r2, r0, r8, asr r6
   11e84:	andeq	r2, r0, ip, asr r6
   11e88:	andeq	r2, r0, r4, asr r6
   11e8c:	andeq	r2, r0, r4, lsr r6
   11e90:	andeq	r2, r0, r8, lsr #12
   11e94:	andeq	r2, r0, r0, lsr #14
   11e98:	andeq	r2, r0, r0, lsl #12
   11e9c:	ldrdeq	r2, [r0], -ip
   11ea0:	andeq	r2, r0, r4, asr #11
   11ea4:			; <UNDEFINED> instruction: 0x000025b8
   11ea8:	push	{r4, r5, r6, r7, r8, lr}
   11eac:	vpush	{d8-d9}
   11eb0:	ldr	r4, [pc, #592]	; 12108 <Mat_VarReadNextInfo@plt+0x10e4>
   11eb4:	mov	r5, r0
   11eb8:	add	r4, pc, r4
   11ebc:	sub	sp, sp, #40	; 0x28
   11ec0:	add	r7, sp, #8
   11ec4:	mov	r2, #32
   11ec8:	mov	r0, r7
   11ecc:	mov	r1, #0
   11ed0:	bl	10f64 <memset@plt>
   11ed4:	ldr	r3, [r4]
   11ed8:	cmp	r3, #0
   11edc:	bne	12038 <Mat_VarReadNextInfo@plt+0x1014>
   11ee0:	ldr	r0, [pc, #548]	; 1210c <Mat_VarReadNextInfo@plt+0x10e8>
   11ee4:	ldr	r1, [r5, #36]	; 0x24
   11ee8:	add	r0, pc, r0
   11eec:	bl	10e08 <printf@plt>
   11ef0:	ldr	r3, [r5, #4]
   11ef4:	cmp	r3, #0
   11ef8:	ble	12074 <Mat_VarReadNextInfo@plt+0x1050>
   11efc:	ldr	r3, [r5, #32]
   11f00:	ldr	r0, [pc, #520]	; 12110 <Mat_VarReadNextInfo@plt+0x10ec>
   11f04:	ldr	r1, [r3]
   11f08:	add	r0, pc, r0
   11f0c:	bl	10e08 <printf@plt>
   11f10:	ldr	r3, [r5, #4]
   11f14:	cmp	r3, #1
   11f18:	ble	11f98 <Mat_VarReadNextInfo@plt+0xf74>
   11f1c:	ldr	r8, [pc, #496]	; 12114 <Mat_VarReadNextInfo@plt+0x10f0>
   11f20:	vldr	d9, [pc, #440]	; 120e0 <Mat_VarReadNextInfo@plt+0x10bc>
   11f24:	vldr	d8, [pc, #444]	; 120e8 <Mat_VarReadNextInfo@plt+0x10c4>
   11f28:	add	r8, pc, r8
   11f2c:	mov	r6, #0
   11f30:	mov	r4, #1
   11f34:	b	11f48 <Mat_VarReadNextInfo@plt+0xf24>
   11f38:	ldr	r3, [r5, #4]
   11f3c:	add	r4, r4, #1
   11f40:	cmp	r3, r4
   11f44:	ble	11f98 <Mat_VarReadNextInfo@plt+0xf74>
   11f48:	ldr	r3, [r5, #32]
   11f4c:	ldr	r3, [r3, r4, lsl #2]
   11f50:	vmov	s0, r3
   11f54:	vcvt.f64.u32	d0, s0
   11f58:	bl	10ed4 <log10@plt>
   11f5c:	bl	10f94 <ceil@plt>
   11f60:	vadd.f64	d0, d0, d9
   11f64:	vcmpe.f64	d0, d8
   11f68:	vmrs	APSR_nzcv, fpscr
   11f6c:	bpl	11f38 <Mat_VarReadNextInfo@plt+0xf14>
   11f70:	ldr	r3, [r5, #32]
   11f74:	add	r0, r7, r6
   11f78:	mov	r1, r8
   11f7c:	ldr	r2, [r3, r4, lsl #2]
   11f80:	bl	10fc4 <sprintf@plt>
   11f84:	ldr	r3, [r5, #4]
   11f88:	add	r4, r4, #1
   11f8c:	cmp	r3, r4
   11f90:	add	r6, r6, r0
   11f94:	bgt	11f48 <Mat_VarReadNextInfo@plt+0xf24>
   11f98:	ldr	r0, [pc, #376]	; 12118 <Mat_VarReadNextInfo@plt+0x10f4>
   11f9c:	mov	r1, r7
   11fa0:	add	r0, pc, r0
   11fa4:	bl	10e08 <printf@plt>
   11fa8:	mov	r0, r5
   11fac:	bl	10ff4 <Mat_VarGetSize@plt>
   11fb0:	ldr	r3, [pc, #356]	; 1211c <Mat_VarReadNextInfo@plt+0x10f8>
   11fb4:	add	r3, pc, r3
   11fb8:	ldr	r3, [r3]
   11fbc:	cmp	r3, #0
   11fc0:	beq	12024 <Mat_VarReadNextInfo@plt+0x1000>
   11fc4:	cmp	r0, #1073741824	; 0x40000000
   11fc8:	bhi	120bc <Mat_VarReadNextInfo@plt+0x1098>
   11fcc:	cmp	r0, #1048576	; 0x100000
   11fd0:	bhi	12098 <Mat_VarReadNextInfo@plt+0x1074>
   11fd4:	cmp	r0, #1024	; 0x400
   11fd8:	bls	12084 <Mat_VarReadNextInfo@plt+0x1060>
   11fdc:	vmov	s15, r0
   11fe0:	vldr	d6, [pc, #264]	; 120f0 <Mat_VarReadNextInfo@plt+0x10cc>
   11fe4:	ldr	r0, [pc, #308]	; 12120 <Mat_VarReadNextInfo@plt+0x10fc>
   11fe8:	vcvt.f64.s32	d7, s15
   11fec:	add	r0, pc, r0
   11ff0:	vmul.f64	d7, d7, d6
   11ff4:	vmov	r2, r3, d7
   11ff8:	bl	10e08 <printf@plt>
   11ffc:	ldr	r3, [pc, #288]	; 12124 <Mat_VarReadNextInfo@plt+0x1100>
   12000:	ldr	r2, [r5, #16]
   12004:	add	r3, pc, r3
   12008:	ldr	r0, [pc, #280]	; 12128 <Mat_VarReadNextInfo@plt+0x1104>
   1200c:	ldr	r1, [r3, r2, lsl #2]
   12010:	add	r0, pc, r0
   12014:	bl	10e08 <printf@plt>
   12018:	add	sp, sp, #40	; 0x28
   1201c:	vpop	{d8-d9}
   12020:	pop	{r4, r5, r6, r7, r8, pc}
   12024:	mov	r1, r0
   12028:	ldr	r0, [pc, #252]	; 1212c <Mat_VarReadNextInfo@plt+0x1108>
   1202c:	add	r0, pc, r0
   12030:	bl	10e08 <printf@plt>
   12034:	b	11ffc <Mat_VarReadNextInfo@plt+0xfd8>
   12038:	ldr	r2, [pc, #240]	; 12130 <Mat_VarReadNextInfo@plt+0x110c>
   1203c:	ldr	r3, [pc, #240]	; 12134 <Mat_VarReadNextInfo@plt+0x1110>
   12040:	add	r2, pc, r2
   12044:	str	r2, [sp]
   12048:	ldr	r1, [pc, #232]	; 12138 <Mat_VarReadNextInfo@plt+0x1114>
   1204c:	ldr	r2, [pc, #232]	; 1213c <Mat_VarReadNextInfo@plt+0x1118>
   12050:	ldr	r0, [pc, #232]	; 12140 <Mat_VarReadNextInfo@plt+0x111c>
   12054:	add	r3, pc, r3
   12058:	add	r2, pc, r2
   1205c:	add	r1, pc, r1
   12060:	add	r0, pc, r0
   12064:	bl	10e08 <printf@plt>
   12068:	mov	r3, #0
   1206c:	str	r3, [r4]
   12070:	b	11ee0 <Mat_VarReadNextInfo@plt+0xebc>
   12074:	ldr	r0, [pc, #200]	; 12144 <Mat_VarReadNextInfo@plt+0x1120>
   12078:	add	r0, pc, r0
   1207c:	bl	10e08 <printf@plt>
   12080:	b	11fa8 <Mat_VarReadNextInfo@plt+0xf84>
   12084:	mov	r1, r0
   12088:	ldr	r0, [pc, #184]	; 12148 <Mat_VarReadNextInfo@plt+0x1124>
   1208c:	add	r0, pc, r0
   12090:	bl	10e08 <printf@plt>
   12094:	b	11ffc <Mat_VarReadNextInfo@plt+0xfd8>
   12098:	vmov	s15, r0
   1209c:	vldr	d6, [pc, #84]	; 120f8 <Mat_VarReadNextInfo@plt+0x10d4>
   120a0:	ldr	r0, [pc, #164]	; 1214c <Mat_VarReadNextInfo@plt+0x1128>
   120a4:	vcvt.f64.s32	d7, s15
   120a8:	add	r0, pc, r0
   120ac:	vmul.f64	d7, d7, d6
   120b0:	vmov	r2, r3, d7
   120b4:	bl	10e08 <printf@plt>
   120b8:	b	11ffc <Mat_VarReadNextInfo@plt+0xfd8>
   120bc:	vmov	s15, r0
   120c0:	vldr	d6, [pc, #56]	; 12100 <Mat_VarReadNextInfo@plt+0x10dc>
   120c4:	ldr	r0, [pc, #132]	; 12150 <Mat_VarReadNextInfo@plt+0x112c>
   120c8:	vcvt.f64.u32	d7, s15
   120cc:	add	r0, pc, r0
   120d0:	vmul.f64	d7, d7, d6
   120d4:	vmov	r2, r3, d7
   120d8:	bl	10e08 <printf@plt>
   120dc:	b	11ffc <Mat_VarReadNextInfo@plt+0xfd8>
   120e0:	andeq	r0, r0, r0
   120e4:	svccc	0x00f00000	; IMB
   120e8:	andeq	r0, r0, r0
   120ec:	submi	r0, r0, r0
   120f0:	andeq	r0, r0, r0
   120f4:	svccc	0x00500000
   120f8:	andeq	r0, r0, r0
   120fc:	cdpcc	0, 11, cr0, cr0, cr0, {0}
   12100:	andeq	r0, r0, r0
   12104:	cdpcc	0, 1, cr0, cr0, cr0, {0}
   12108:	andeq	r3, r1, r8, asr #4
   1210c:			; <UNDEFINED> instruction: 0x000025b8
   12110:	andeq	r2, r0, r0, lsr #11
   12114:	muleq	r0, r0, r5
   12118:	andeq	r2, r0, r0, lsl r5
   1211c:	andeq	r3, r1, r8, lsr #4
   12120:	andeq	r2, r0, r4, lsl #10
   12124:	andeq	r2, r1, ip, lsr #29
   12128:	strdeq	r2, [r0], -ip
   1212c:	ldrdeq	r2, [r0], -r8
   12130:	andeq	r2, r0, r8, asr r4
   12134:	andeq	r2, r0, r4, lsl #8
   12138:	andeq	r2, r0, ip, lsl #8
   1213c:	andeq	r2, r0, r8, lsl #8
   12140:	andeq	r2, r0, r0, lsl r4
   12144:	andeq	r2, r0, r8, asr #8
   12148:	andeq	r2, r0, r0, ror r4
   1214c:	andeq	r2, r0, ip, lsr r4
   12150:	andeq	r2, r0, ip, lsl #8
   12154:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12158:	subs	r4, r0, #0
   1215c:	sub	sp, sp, #36	; 0x24
   12160:	beq	121c8 <Mat_VarReadNextInfo@plt+0x11a4>
   12164:	ldr	r3, [r4, #16]
   12168:	sub	r3, r3, #1
   1216c:	cmp	r3, #14
   12170:	addls	pc, pc, r3, lsl #2
   12174:	b	123fc <Mat_VarReadNextInfo@plt+0x13d8>
   12178:	b	121d0 <Mat_VarReadNextInfo@plt+0x11ac>
   1217c:	b	122b8 <Mat_VarReadNextInfo@plt+0x1294>
   12180:	b	123fc <Mat_VarReadNextInfo@plt+0x13d8>
   12184:	b	123e0 <Mat_VarReadNextInfo@plt+0x13bc>
   12188:	b	123e0 <Mat_VarReadNextInfo@plt+0x13bc>
   1218c:	b	121b4 <Mat_VarReadNextInfo@plt+0x1190>
   12190:	b	121b4 <Mat_VarReadNextInfo@plt+0x1190>
   12194:	b	121b4 <Mat_VarReadNextInfo@plt+0x1190>
   12198:	b	121b4 <Mat_VarReadNextInfo@plt+0x1190>
   1219c:	b	121b4 <Mat_VarReadNextInfo@plt+0x1190>
   121a0:	b	121b4 <Mat_VarReadNextInfo@plt+0x1190>
   121a4:	b	121b4 <Mat_VarReadNextInfo@plt+0x1190>
   121a8:	b	121b4 <Mat_VarReadNextInfo@plt+0x1190>
   121ac:	b	121b4 <Mat_VarReadNextInfo@plt+0x1190>
   121b0:	b	121b4 <Mat_VarReadNextInfo@plt+0x1190>
   121b4:	ldr	r3, [r4, #4]
   121b8:	cmp	r3, #2
   121bc:	beq	12660 <Mat_VarReadNextInfo@plt+0x163c>
   121c0:	cmp	r3, #3
   121c4:	beq	12410 <Mat_VarReadNextInfo@plt+0x13ec>
   121c8:	add	sp, sp, #36	; 0x24
   121cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121d0:	ldr	r1, [r4, #36]	; 0x24
   121d4:	cmp	r1, #0
   121d8:	beq	121e8 <Mat_VarReadNextInfo@plt+0x11c4>
   121dc:	ldr	r0, [pc, #1848]	; 1291c <Mat_VarReadNextInfo@plt+0x18f8>
   121e0:	add	r0, pc, r0
   121e4:	bl	10e5c <Mat_Message@plt>
   121e8:	ldr	r0, [pc, #1840]	; 12920 <Mat_VarReadNextInfo@plt+0x18fc>
   121ec:	ldr	r1, [r4, #4]
   121f0:	add	r0, pc, r0
   121f4:	bl	10e5c <Mat_Message@plt>
   121f8:	ldr	r1, [r4, #4]
   121fc:	cmp	r1, #0
   12200:	beq	121c8 <Mat_VarReadNextInfo@plt+0x11a4>
   12204:	ldr	r3, [r4, #32]
   12208:	cmp	r1, #1
   1220c:	ldr	r5, [r3]
   12210:	ble	1222c <Mat_VarReadNextInfo@plt+0x1208>
   12214:	add	r1, r3, r1, lsl #2
   12218:	add	r3, r3, #4
   1221c:	ldr	r2, [r3], #4
   12220:	cmp	r3, r1
   12224:	mul	r5, r2, r5
   12228:	bne	1221c <Mat_VarReadNextInfo@plt+0x11f8>
   1222c:	ldr	r0, [pc, #1776]	; 12924 <Mat_VarReadNextInfo@plt+0x1900>
   12230:	add	r0, pc, r0
   12234:	bl	10e5c <Mat_Message@plt>
   12238:	ldr	r0, [pc, #1768]	; 12928 <Mat_VarReadNextInfo@plt+0x1904>
   1223c:	add	r0, pc, r0
   12240:	bl	10e5c <Mat_Message@plt>
   12244:	ldr	r2, [pc, #1760]	; 1292c <Mat_VarReadNextInfo@plt+0x1908>
   12248:	ldr	r6, [r4, #40]	; 0x28
   1224c:	add	r2, pc, r2
   12250:	cmp	r6, #0
   12254:	ldr	r3, [r2, #4]
   12258:	add	r3, r3, #1
   1225c:	str	r3, [r2, #4]
   12260:	beq	12294 <Mat_VarReadNextInfo@plt+0x1270>
   12264:	cmp	r5, #0
   12268:	beq	12294 <Mat_VarReadNextInfo@plt+0x1270>
   1226c:	sub	r6, r6, #4
   12270:	mov	r4, #0
   12274:	add	r4, r4, #1
   12278:	ldr	r0, [r6, #4]!
   1227c:	bl	12154 <Mat_VarReadNextInfo@plt+0x1130>
   12280:	cmp	r4, r5
   12284:	bne	12274 <Mat_VarReadNextInfo@plt+0x1250>
   12288:	ldr	r3, [pc, #1696]	; 12930 <Mat_VarReadNextInfo@plt+0x190c>
   1228c:	add	r3, pc, r3
   12290:	ldr	r3, [r3, #4]
   12294:	ldr	r2, [pc, #1688]	; 12934 <Mat_VarReadNextInfo@plt+0x1910>
   12298:	ldr	r0, [pc, #1688]	; 12938 <Mat_VarReadNextInfo@plt+0x1914>
   1229c:	add	r2, pc, r2
   122a0:	sub	r3, r3, #1
   122a4:	add	r0, pc, r0
   122a8:	str	r3, [r2, #4]
   122ac:	add	sp, sp, #36	; 0x24
   122b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   122b4:	b	10e5c <Mat_Message@plt>
   122b8:	ldr	r1, [r4, #36]	; 0x24
   122bc:	cmp	r1, #0
   122c0:	beq	122d0 <Mat_VarReadNextInfo@plt+0x12ac>
   122c4:	ldr	r0, [pc, #1648]	; 1293c <Mat_VarReadNextInfo@plt+0x1918>
   122c8:	add	r0, pc, r0
   122cc:	bl	10e5c <Mat_Message@plt>
   122d0:	ldr	r0, [pc, #1640]	; 12940 <Mat_VarReadNextInfo@plt+0x191c>
   122d4:	ldr	r1, [r4, #4]
   122d8:	add	r0, pc, r0
   122dc:	bl	10e5c <Mat_Message@plt>
   122e0:	ldr	r3, [r4, #4]
   122e4:	cmp	r3, #0
   122e8:	beq	121c8 <Mat_VarReadNextInfo@plt+0x11a4>
   122ec:	ldr	r0, [pc, #1616]	; 12944 <Mat_VarReadNextInfo@plt+0x1920>
   122f0:	add	r0, pc, r0
   122f4:	bl	10e5c <Mat_Message@plt>
   122f8:	mov	r0, r4
   122fc:	bl	10da8 <Mat_VarGetNumberOfFields@plt>
   12300:	ldr	r3, [r4, #32]
   12304:	ldr	r1, [r4, #4]
   12308:	cmp	r1, #1
   1230c:	ldr	r5, [r3]
   12310:	mov	r6, r0
   12314:	ble	12330 <Mat_VarReadNextInfo@plt+0x130c>
   12318:	add	r1, r3, r1, lsl #2
   1231c:	add	r3, r3, #4
   12320:	ldr	r2, [r3], #4
   12324:	cmp	r1, r3
   12328:	mul	r5, r2, r5
   1232c:	bne	12320 <Mat_VarReadNextInfo@plt+0x12fc>
   12330:	cmp	r6, #0
   12334:	movle	r3, #0
   12338:	movgt	r3, #1
   1233c:	cmp	r5, #0
   12340:	movne	r7, #0
   12344:	andeq	r7, r3, #1
   12348:	cmp	r7, #0
   1234c:	bne	125d8 <Mat_VarReadNextInfo@plt+0x15b4>
   12350:	cmp	r5, #0
   12354:	moveq	r3, #0
   12358:	andne	r3, r3, #1
   1235c:	cmp	r3, #0
   12360:	beq	121c8 <Mat_VarReadNextInfo@plt+0x11a4>
   12364:	ldr	r0, [pc, #1500]	; 12948 <Mat_VarReadNextInfo@plt+0x1924>
   12368:	mov	r1, r6
   1236c:	add	r0, pc, r0
   12370:	bl	10e5c <Mat_Message@plt>
   12374:	ldr	r1, [pc, #1488]	; 1294c <Mat_VarReadNextInfo@plt+0x1928>
   12378:	ldr	r3, [r4, #40]	; 0x28
   1237c:	add	r1, pc, r1
   12380:	cmp	r3, #0
   12384:	ldr	r2, [r1, #4]
   12388:	add	r2, r2, #1
   1238c:	str	r2, [r1, #4]
   12390:	beq	123c4 <Mat_VarReadNextInfo@plt+0x13a0>
   12394:	mul	r5, r5, r6
   12398:	cmp	r5, #0
   1239c:	beq	123c4 <Mat_VarReadNextInfo@plt+0x13a0>
   123a0:	sub	r6, r3, #4
   123a4:	add	r7, r7, #1
   123a8:	ldr	r0, [r6, #4]!
   123ac:	bl	12154 <Mat_VarReadNextInfo@plt+0x1130>
   123b0:	cmp	r7, r5
   123b4:	bne	123a4 <Mat_VarReadNextInfo@plt+0x1380>
   123b8:	ldr	r3, [pc, #1424]	; 12950 <Mat_VarReadNextInfo@plt+0x192c>
   123bc:	add	r3, pc, r3
   123c0:	ldr	r2, [r3, #4]
   123c4:	ldr	r3, [pc, #1416]	; 12954 <Mat_VarReadNextInfo@plt+0x1930>
   123c8:	ldr	r0, [pc, #1416]	; 12958 <Mat_VarReadNextInfo@plt+0x1934>
   123cc:	add	r3, pc, r3
   123d0:	sub	r2, r2, #1
   123d4:	add	r0, pc, r0
   123d8:	str	r2, [r3, #4]
   123dc:	b	12404 <Mat_VarReadNextInfo@plt+0x13e0>
   123e0:	ldr	r3, [pc, #1396]	; 1295c <Mat_VarReadNextInfo@plt+0x1938>
   123e4:	mov	r0, r4
   123e8:	add	r3, pc, r3
   123ec:	ldr	r1, [r3, #8]
   123f0:	add	sp, sp, #36	; 0x24
   123f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123f8:	b	10f58 <Mat_VarPrint@plt>
   123fc:	ldr	r0, [pc, #1372]	; 12960 <Mat_VarReadNextInfo@plt+0x193c>
   12400:	add	r0, pc, r0
   12404:	add	sp, sp, #36	; 0x24
   12408:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1240c:	b	10e5c <Mat_Message@plt>
   12410:	ldr	r3, [r4, #40]	; 0x28
   12414:	cmp	r3, #0
   12418:	beq	121c8 <Mat_VarReadNextInfo@plt+0x11a4>
   1241c:	ldr	r0, [r4, #8]
   12420:	bl	10f10 <Mat_SizeOf@plt>
   12424:	ldr	r6, [r4, #20]
   12428:	cmp	r6, #0
   1242c:	mov	sl, r0
   12430:	beq	12730 <Mat_VarReadNextInfo@plt+0x170c>
   12434:	ldr	r2, [r4, #32]
   12438:	ldr	r3, [r4, #40]	; 0x28
   1243c:	ldr	r2, [r2, #8]
   12440:	ldr	fp, [r3]
   12444:	ldr	r3, [r3, #4]
   12448:	cmp	r2, #0
   1244c:	str	r3, [sp]
   12450:	beq	121c8 <Mat_VarReadNextInfo@plt+0x11a4>
   12454:	ldr	r3, [pc, #1288]	; 12964 <Mat_VarReadNextInfo@plt+0x1940>
   12458:	ldr	r7, [pc, #1288]	; 12968 <Mat_VarReadNextInfo@plt+0x1944>
   1245c:	add	r3, pc, r3
   12460:	str	r3, [sp, #24]
   12464:	ldr	r3, [pc, #1280]	; 1296c <Mat_VarReadNextInfo@plt+0x1948>
   12468:	add	r7, pc, r7
   1246c:	add	r3, pc, r3
   12470:	str	r3, [sp, #28]
   12474:	ldr	r3, [pc, #1268]	; 12970 <Mat_VarReadNextInfo@plt+0x194c>
   12478:	mov	r6, #0
   1247c:	add	r3, pc, r3
   12480:	str	r3, [sp, #16]
   12484:	ldr	r3, [pc, #1256]	; 12974 <Mat_VarReadNextInfo@plt+0x1950>
   12488:	add	r3, pc, r3
   1248c:	str	r3, [sp, #20]
   12490:	ldr	r3, [pc, #1248]	; 12978 <Mat_VarReadNextInfo@plt+0x1954>
   12494:	add	r3, pc, r3
   12498:	str	r3, [sp, #4]
   1249c:	mov	r2, r6
   124a0:	ldr	r1, [r4, #36]	; 0x24
   124a4:	ldr	r0, [sp, #24]
   124a8:	bl	10e5c <Mat_Message@plt>
   124ac:	ldr	r0, [sp, #28]
   124b0:	ldr	r1, [r4, #32]
   124b4:	ldr	r3, [r0, #4]
   124b8:	ldr	r2, [r1]
   124bc:	add	r3, r3, #1
   124c0:	cmp	r2, #0
   124c4:	str	r3, [r0, #4]
   124c8:	beq	125a8 <Mat_VarReadNextInfo@plt+0x1584>
   124cc:	ldr	r2, [pc, #1192]	; 1297c <Mat_VarReadNextInfo@plt+0x1958>
   124d0:	mov	r5, #0
   124d4:	add	r2, pc, r2
   124d8:	str	r2, [sp, #12]
   124dc:	cmp	r3, #0
   124e0:	movne	r8, #0
   124e4:	ldrne	r9, [sp, #16]
   124e8:	beq	12508 <Mat_VarReadNextInfo@plt+0x14e4>
   124ec:	mov	r0, r9
   124f0:	bl	10e08 <printf@plt>
   124f4:	ldr	r3, [r7, #4]
   124f8:	add	r8, r8, #1
   124fc:	cmp	r8, r3
   12500:	bcc	124ec <Mat_VarReadNextInfo@plt+0x14c8>
   12504:	ldr	r1, [r4, #32]
   12508:	ldr	r3, [r1, #4]
   1250c:	cmp	r3, #0
   12510:	beq	12578 <Mat_VarReadNextInfo@plt+0x1554>
   12514:	mov	r8, #0
   12518:	ldr	r9, [sp, #20]
   1251c:	str	r7, [sp, #8]
   12520:	mov	r7, r8
   12524:	mla	r3, r3, r6, r7
   12528:	ldr	r1, [r1]
   1252c:	ldr	r0, [r4, #8]
   12530:	add	r7, r7, #1
   12534:	mla	r3, r1, r3, r5
   12538:	mul	r8, sl, r3
   1253c:	add	r1, fp, r8
   12540:	bl	11d90 <Mat_VarReadNextInfo@plt+0xd6c>
   12544:	mov	r0, r9
   12548:	bl	10e08 <printf@plt>
   1254c:	ldr	r3, [sp]
   12550:	ldr	r0, [r4, #8]
   12554:	add	r1, r3, r8
   12558:	bl	11d90 <Mat_VarReadNextInfo@plt+0xd6c>
   1255c:	ldr	r0, [sp, #4]
   12560:	bl	10e08 <printf@plt>
   12564:	ldr	r1, [r4, #32]
   12568:	ldr	r3, [r1, #4]
   1256c:	cmp	r3, r7
   12570:	bhi	12524 <Mat_VarReadNextInfo@plt+0x1500>
   12574:	ldr	r7, [sp, #8]
   12578:	mov	r0, #10
   1257c:	bl	10f70 <putchar@plt>
   12580:	ldr	r1, [r4, #32]
   12584:	add	r5, r5, #1
   12588:	ldr	r3, [r1]
   1258c:	cmp	r5, r3
   12590:	ldrcc	r3, [sp, #12]
   12594:	ldrcc	r3, [r3, #4]
   12598:	bcc	124dc <Mat_VarReadNextInfo@plt+0x14b8>
   1259c:	ldr	r3, [pc, #988]	; 12980 <Mat_VarReadNextInfo@plt+0x195c>
   125a0:	add	r3, pc, r3
   125a4:	ldr	r3, [r3, #4]
   125a8:	ldr	r2, [pc, #980]	; 12984 <Mat_VarReadNextInfo@plt+0x1960>
   125ac:	sub	r3, r3, #1
   125b0:	add	r2, pc, r2
   125b4:	mov	r0, #10
   125b8:	str	r3, [r2, #4]
   125bc:	bl	10f70 <putchar@plt>
   125c0:	ldr	r3, [r4, #32]
   125c4:	add	r6, r6, #1
   125c8:	ldr	r3, [r3, #8]
   125cc:	cmp	r6, r3
   125d0:	bcc	1249c <Mat_VarReadNextInfo@plt+0x1478>
   125d4:	b	121c8 <Mat_VarReadNextInfo@plt+0x11a4>
   125d8:	mov	r0, r4
   125dc:	bl	10e98 <Mat_VarGetStructFieldnames@plt>
   125e0:	mov	r1, r6
   125e4:	mov	r5, r0
   125e8:	ldr	r0, [pc, #920]	; 12988 <Mat_VarReadNextInfo@plt+0x1964>
   125ec:	add	r0, pc, r0
   125f0:	bl	10e5c <Mat_Message@plt>
   125f4:	ldr	r2, [pc, #912]	; 1298c <Mat_VarReadNextInfo@plt+0x1968>
   125f8:	cmp	r5, #0
   125fc:	add	r2, pc, r2
   12600:	ldr	r3, [r2, #4]
   12604:	add	r3, r3, #1
   12608:	str	r3, [r2, #4]
   1260c:	beq	12644 <Mat_VarReadNextInfo@plt+0x1620>
   12610:	ldr	r7, [pc, #888]	; 12990 <Mat_VarReadNextInfo@plt+0x196c>
   12614:	sub	r5, r5, #4
   12618:	add	r7, pc, r7
   1261c:	mov	r4, #0
   12620:	add	r4, r4, #1
   12624:	ldr	r1, [r5, #4]!
   12628:	mov	r0, r7
   1262c:	bl	10e5c <Mat_Message@plt>
   12630:	cmp	r6, r4
   12634:	bgt	12620 <Mat_VarReadNextInfo@plt+0x15fc>
   12638:	ldr	r3, [pc, #852]	; 12994 <Mat_VarReadNextInfo@plt+0x1970>
   1263c:	add	r3, pc, r3
   12640:	ldr	r3, [r3, #4]
   12644:	ldr	r2, [pc, #844]	; 12998 <Mat_VarReadNextInfo@plt+0x1974>
   12648:	ldr	r0, [pc, #844]	; 1299c <Mat_VarReadNextInfo@plt+0x1978>
   1264c:	add	r2, pc, r2
   12650:	sub	r3, r3, #1
   12654:	add	r0, pc, r0
   12658:	str	r3, [r2, #4]
   1265c:	b	12404 <Mat_VarReadNextInfo@plt+0x13e0>
   12660:	ldr	r3, [r4, #40]	; 0x28
   12664:	cmp	r3, #0
   12668:	beq	121c8 <Mat_VarReadNextInfo@plt+0x11a4>
   1266c:	ldr	r0, [r4, #8]
   12670:	bl	10f10 <Mat_SizeOf@plt>
   12674:	ldr	r7, [r4, #20]
   12678:	ldr	r3, [r4, #32]
   1267c:	cmp	r7, #0
   12680:	mov	r5, r0
   12684:	beq	128a4 <Mat_VarReadNextInfo@plt+0x1880>
   12688:	ldr	r2, [r4, #40]	; 0x28
   1268c:	ldr	r1, [r3]
   12690:	cmp	r1, #0
   12694:	ldr	r9, [r2]
   12698:	ldr	sl, [r2, #4]
   1269c:	beq	121c8 <Mat_VarReadNextInfo@plt+0x11a4>
   126a0:	ldr	r8, [pc, #760]	; 129a0 <Mat_VarReadNextInfo@plt+0x197c>
   126a4:	ldr	r2, [pc, #760]	; 129a4 <Mat_VarReadNextInfo@plt+0x1980>
   126a8:	add	r8, pc, r8
   126ac:	mov	r6, #0
   126b0:	add	r2, pc, r2
   126b4:	str	r2, [sp]
   126b8:	ldr	r2, [r3, #4]
   126bc:	cmp	r2, #0
   126c0:	movne	fp, #0
   126c4:	beq	12710 <Mat_VarReadNextInfo@plt+0x16ec>
   126c8:	ldr	r7, [r3]
   126cc:	ldr	r0, [r4, #8]
   126d0:	mla	r7, r7, fp, r6
   126d4:	add	fp, fp, #1
   126d8:	mul	r7, r5, r7
   126dc:	add	r1, r9, r7
   126e0:	bl	11d90 <Mat_VarReadNextInfo@plt+0xd6c>
   126e4:	mov	r0, r8
   126e8:	bl	10e08 <printf@plt>
   126ec:	add	r1, sl, r7
   126f0:	ldr	r0, [r4, #8]
   126f4:	bl	11d90 <Mat_VarReadNextInfo@plt+0xd6c>
   126f8:	ldr	r0, [sp]
   126fc:	bl	10e08 <printf@plt>
   12700:	ldr	r3, [r4, #32]
   12704:	ldr	r1, [r3, #4]
   12708:	cmp	fp, r1
   1270c:	bcc	126c8 <Mat_VarReadNextInfo@plt+0x16a4>
   12710:	mov	r0, #10
   12714:	bl	10f70 <putchar@plt>
   12718:	ldr	r3, [r4, #32]
   1271c:	add	r6, r6, #1
   12720:	ldr	r2, [r3]
   12724:	cmp	r6, r2
   12728:	bcc	126b8 <Mat_VarReadNextInfo@plt+0x1694>
   1272c:	b	121c8 <Mat_VarReadNextInfo@plt+0x11a4>
   12730:	ldr	r3, [r4, #32]
   12734:	ldr	fp, [r4, #40]	; 0x28
   12738:	ldr	r3, [r3, #8]
   1273c:	cmp	r3, #0
   12740:	beq	121c8 <Mat_VarReadNextInfo@plt+0x11a4>
   12744:	ldr	r3, [pc, #604]	; 129a8 <Mat_VarReadNextInfo@plt+0x1984>
   12748:	ldr	r8, [pc, #604]	; 129ac <Mat_VarReadNextInfo@plt+0x1988>
   1274c:	add	r3, pc, r3
   12750:	str	r3, [sp, #12]
   12754:	ldr	r3, [pc, #596]	; 129b0 <Mat_VarReadNextInfo@plt+0x198c>
   12758:	add	r8, pc, r8
   1275c:	add	r3, pc, r3
   12760:	str	r3, [sp, #16]
   12764:	ldr	r3, [pc, #584]	; 129b4 <Mat_VarReadNextInfo@plt+0x1990>
   12768:	add	r3, pc, r3
   1276c:	str	r3, [sp, #4]
   12770:	ldr	r3, [pc, #576]	; 129b8 <Mat_VarReadNextInfo@plt+0x1994>
   12774:	add	r3, pc, r3
   12778:	str	r3, [sp, #8]
   1277c:	ldr	r3, [pc, #568]	; 129bc <Mat_VarReadNextInfo@plt+0x1998>
   12780:	add	r3, pc, r3
   12784:	str	r3, [sp, #20]
   12788:	mov	r2, r6
   1278c:	ldr	r1, [r4, #36]	; 0x24
   12790:	ldr	r0, [sp, #12]
   12794:	bl	10e5c <Mat_Message@plt>
   12798:	ldr	r0, [sp, #16]
   1279c:	ldr	r2, [r4, #32]
   127a0:	ldr	r3, [r0, #4]
   127a4:	ldr	r1, [r2]
   127a8:	add	r3, r3, #1
   127ac:	cmp	r1, #0
   127b0:	str	r3, [r0, #4]
   127b4:	beq	12874 <Mat_VarReadNextInfo@plt+0x1850>
   127b8:	mov	r5, #0
   127bc:	mov	r7, #32
   127c0:	cmp	r3, #0
   127c4:	beq	12804 <Mat_VarReadNextInfo@plt+0x17e0>
   127c8:	str	r5, [sp]
   127cc:	mov	r5, r8
   127d0:	mov	r8, r4
   127d4:	ldr	r4, [sp, #4]
   127d8:	mov	r9, #0
   127dc:	mov	r0, r4
   127e0:	bl	10e08 <printf@plt>
   127e4:	ldr	r3, [r5, #4]
   127e8:	add	r9, r9, #1
   127ec:	cmp	r9, r3
   127f0:	bcc	127dc <Mat_VarReadNextInfo@plt+0x17b8>
   127f4:	mov	r4, r8
   127f8:	mov	r8, r5
   127fc:	ldr	r2, [r4, #32]
   12800:	ldr	r5, [sp]
   12804:	ldr	r1, [r2, #4]
   12808:	cmp	r1, #0
   1280c:	movne	r9, #0
   12810:	beq	12848 <Mat_VarReadNextInfo@plt+0x1824>
   12814:	mla	r1, r1, r6, r9
   12818:	ldr	r3, [r2]
   1281c:	ldr	r0, [r4, #8]
   12820:	add	r9, r9, #1
   12824:	mla	r1, r3, r1, r5
   12828:	mla	r1, sl, r1, fp
   1282c:	bl	11d90 <Mat_VarReadNextInfo@plt+0xd6c>
   12830:	mov	r0, r7
   12834:	bl	10f70 <putchar@plt>
   12838:	ldr	r2, [r4, #32]
   1283c:	ldr	r1, [r2, #4]
   12840:	cmp	r1, r9
   12844:	bhi	12814 <Mat_VarReadNextInfo@plt+0x17f0>
   12848:	mov	r0, #10
   1284c:	bl	10f70 <putchar@plt>
   12850:	ldr	r2, [r4, #32]
   12854:	add	r5, r5, #1
   12858:	ldr	r3, [r2]
   1285c:	cmp	r5, r3
   12860:	ldrcc	r3, [sp, #8]
   12864:	ldrcc	r3, [r3, #4]
   12868:	bcc	127c0 <Mat_VarReadNextInfo@plt+0x179c>
   1286c:	ldr	r3, [sp, #20]
   12870:	ldr	r3, [r3, #4]
   12874:	ldr	r2, [pc, #324]	; 129c0 <Mat_VarReadNextInfo@plt+0x199c>
   12878:	sub	r3, r3, #1
   1287c:	add	r2, pc, r2
   12880:	mov	r0, #10
   12884:	str	r3, [r2, #4]
   12888:	bl	10f70 <putchar@plt>
   1288c:	ldr	r3, [r4, #32]
   12890:	add	r6, r6, #1
   12894:	ldr	r3, [r3, #8]
   12898:	cmp	r6, r3
   1289c:	bcc	12788 <Mat_VarReadNextInfo@plt+0x1764>
   128a0:	b	121c8 <Mat_VarReadNextInfo@plt+0x11a4>
   128a4:	ldr	r2, [r3]
   128a8:	ldr	r9, [r4, #40]	; 0x28
   128ac:	cmp	r2, #0
   128b0:	movne	r8, #32
   128b4:	movne	sl, #10
   128b8:	beq	121c8 <Mat_VarReadNextInfo@plt+0x11a4>
   128bc:	ldr	r2, [r3, #4]
   128c0:	cmp	r2, #0
   128c4:	movne	r6, #0
   128c8:	beq	128fc <Mat_VarReadNextInfo@plt+0x18d8>
   128cc:	ldr	r1, [r3]
   128d0:	ldr	r0, [r4, #8]
   128d4:	mla	r1, r1, r6, r7
   128d8:	add	r6, r6, #1
   128dc:	mla	r1, r5, r1, r9
   128e0:	bl	11d90 <Mat_VarReadNextInfo@plt+0xd6c>
   128e4:	mov	r0, r8
   128e8:	bl	10f70 <putchar@plt>
   128ec:	ldr	r3, [r4, #32]
   128f0:	ldr	r2, [r3, #4]
   128f4:	cmp	r6, r2
   128f8:	bcc	128cc <Mat_VarReadNextInfo@plt+0x18a8>
   128fc:	mov	r0, sl
   12900:	bl	10f70 <putchar@plt>
   12904:	ldr	r3, [r4, #32]
   12908:	add	r7, r7, #1
   1290c:	ldr	r2, [r3]
   12910:	cmp	r7, r2
   12914:	bcc	128bc <Mat_VarReadNextInfo@plt+0x1898>
   12918:	b	121c8 <Mat_VarReadNextInfo@plt+0x11a4>
   1291c:	andeq	r2, r0, r0, asr r3
   12920:	andeq	r2, r0, r0, asr r3
   12924:	andeq	r2, r0, ip, asr r3
   12928:	andeq	r2, r0, r8, ror #6
   1292c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   12930:	andeq	r2, r1, r0, asr pc
   12934:	andeq	r2, r1, r0, asr #30
   12938:	andeq	r2, r0, r4, ror #5
   1293c:	andeq	r2, r0, r8, ror #4
   12940:	andeq	r2, r0, r8, ror #4
   12944:	andeq	r2, r0, r0, ror #4
   12948:	strdeq	r2, [r0], -ip
   1294c:	andeq	r2, r1, r0, ror #28
   12950:	andeq	r2, r1, r0, lsr #28
   12954:	andeq	r2, r1, r0, lsl lr
   12958:			; <UNDEFINED> instruction: 0x000021b4
   1295c:	strdeq	r2, [r1], -r4
   12960:	andeq	r2, r0, r8, lsr #3
   12964:	andeq	r2, r0, r4, asr #1
   12968:	andeq	r2, r1, r4, ror sp
   1296c:	andeq	r2, r1, r0, ror sp
   12970:	andeq	r2, r0, r4, asr r0
   12974:	muleq	r0, r0, r0
   12978:	andeq	r2, r0, r8, lsl #1
   1297c:	andeq	r2, r1, r8, lsl #26
   12980:	andeq	r2, r1, ip, lsr ip
   12984:	andeq	r2, r1, ip, lsr #24
   12988:	andeq	r1, r0, ip, ror pc
   1298c:	andeq	r2, r1, r0, ror #23
   12990:	andeq	r1, r0, r0, ror #30
   12994:	andeq	r2, r1, r0, lsr #23
   12998:	muleq	r1, r0, fp
   1299c:	andeq	r1, r0, r4, lsr pc
   129a0:	andeq	r1, r0, r0, ror lr
   129a4:	andeq	r1, r0, ip, ror #28
   129a8:	ldrdeq	r1, [r0], -r4
   129ac:	andeq	r2, r1, r4, lsl #21
   129b0:	andeq	r2, r1, r0, lsl #21
   129b4:	andeq	r1, r0, r8, ror #26
   129b8:	andeq	r2, r1, r8, ror #20
   129bc:	andeq	r2, r1, ip, asr sl
   129c0:	andeq	r2, r1, r0, ror #18
   129c4:	push	{r4, r5, r6, r7, r8, lr}
   129c8:	mov	r7, r1
   129cc:	ldr	r5, [pc, #60]	; 12a10 <Mat_VarReadNextInfo@plt+0x19ec>
   129d0:	ldr	r6, [pc, #60]	; 12a14 <Mat_VarReadNextInfo@plt+0x19f0>
   129d4:	add	r5, pc, r5
   129d8:	add	r6, pc, r6
   129dc:	ldr	r3, [r5, #4]
   129e0:	mov	r4, #0
   129e4:	cmp	r3, #0
   129e8:	ble	12a04 <Mat_VarReadNextInfo@plt+0x19e0>
   129ec:	mov	r0, r6
   129f0:	bl	10e08 <printf@plt>
   129f4:	ldr	r3, [r5, #4]
   129f8:	add	r4, r4, #1
   129fc:	cmp	r3, r4
   12a00:	bgt	129ec <Mat_VarReadNextInfo@plt+0x19c8>
   12a04:	mov	r0, r7
   12a08:	pop	{r4, r5, r6, r7, r8, lr}
   12a0c:	b	10ebc <puts@plt>
   12a10:	andeq	r2, r1, r8, lsl #16
   12a14:	strdeq	r1, [r0], -r8
   12a18:	push	{r4, r5, r6, lr}
   12a1c:	mov	r1, #40	; 0x28
   12a20:	ldr	r5, [pc, #76]	; 12a74 <Mat_VarReadNextInfo@plt+0x1a50>
   12a24:	mov	r6, r0
   12a28:	add	r5, pc, r5
   12a2c:	mov	r4, #0
   12a30:	mov	r0, r6
   12a34:	bl	10f28 <strchr@plt>
   12a38:	clz	r3, r4
   12a3c:	lsr	r3, r3, #5
   12a40:	cmp	r0, #0
   12a44:	beq	12a58 <Mat_VarReadNextInfo@plt+0x1a34>
   12a48:	cmp	r0, r4
   12a4c:	orrcc	r3, r3, #1
   12a50:	cmp	r3, #0
   12a54:	movne	r4, r0
   12a58:	ldrb	r1, [r5, #1]!
   12a5c:	cmp	r1, #0
   12a60:	bne	12a30 <Mat_VarReadNextInfo@plt+0x1a0c>
   12a64:	cmp	r4, #0
   12a68:	movne	r0, r4
   12a6c:	moveq	r0, r6
   12a70:	pop	{r4, r5, r6, pc}
   12a74:	andeq	r1, r0, r8, lsl #23
   12a78:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12a7c:	add	r4, r0, #1
   12a80:	mov	r6, r0
   12a84:	ldr	r0, [pc, #812]	; 12db8 <Mat_VarReadNextInfo@plt+0x1d94>
   12a88:	sub	sp, sp, #36	; 0x24
   12a8c:	add	r0, pc, r0
   12a90:	str	r0, [sp]
   12a94:	ldr	r0, [pc, #800]	; 12dbc <Mat_VarReadNextInfo@plt+0x1d98>
   12a98:	str	r3, [sp, #28]
   12a9c:	add	r0, pc, r0
   12aa0:	str	r0, [sp, #20]
   12aa4:	ldr	r0, [pc, #788]	; 12dc0 <Mat_VarReadNextInfo@plt+0x1d9c>
   12aa8:	ldr	r3, [pc, #788]	; 12dc4 <Mat_VarReadNextInfo@plt+0x1da0>
   12aac:	add	r0, pc, r0
   12ab0:	str	r0, [sp, #12]
   12ab4:	ldr	r0, [pc, #780]	; 12dc8 <Mat_VarReadNextInfo@plt+0x1da4>
   12ab8:	mov	r7, #0
   12abc:	add	r0, pc, r0
   12ac0:	str	r0, [sp, #4]
   12ac4:	ldr	r0, [pc, #768]	; 12dcc <Mat_VarReadNextInfo@plt+0x1da8>
   12ac8:	add	r3, pc, r3
   12acc:	add	r0, pc, r0
   12ad0:	str	r0, [sp, #24]
   12ad4:	ldr	r0, [pc, #756]	; 12dd0 <Mat_VarReadNextInfo@plt+0x1dac>
   12ad8:	mov	r8, r1
   12adc:	add	r0, pc, r0
   12ae0:	str	r0, [sp, #16]
   12ae4:	mov	sl, r2
   12ae8:	mov	fp, r4
   12aec:	mov	r5, r7
   12af0:	str	r3, [sp, #8]
   12af4:	b	12b58 <Mat_VarReadNextInfo@plt+0x1b34>
   12af8:	cmp	r2, #58	; 0x3a
   12afc:	beq	12bc8 <Mat_VarReadNextInfo@plt+0x1ba4>
   12b00:	cmp	r2, #125	; 0x7d
   12b04:	cmpne	r2, #41	; 0x29
   12b08:	bne	12b48 <Mat_VarReadNextInfo@plt+0x1b24>
   12b0c:	mov	r9, #0
   12b10:	strb	r9, [r4]
   12b14:	ldr	r1, [sp]
   12b18:	mov	r0, fp
   12b1c:	bl	10de4 <strcmp@plt>
   12b20:	cmp	r0, r9
   12b24:	bne	12c74 <Mat_VarReadNextInfo@plt+0x1c50>
   12b28:	cmp	r5, r9
   12b2c:	bne	12c24 <Mat_VarReadNextInfo@plt+0x1c00>
   12b30:	ldr	r2, [sp, #72]	; 0x48
   12b34:	mvn	r3, #0
   12b38:	str	r3, [sl, r7, lsl #2]
   12b3c:	str	r3, [r2, r7, lsl #2]
   12b40:	add	r5, r5, #1
   12b44:	add	fp, r6, #2
   12b48:	cmp	r4, r8
   12b4c:	mov	r6, r4
   12b50:	beq	12bc0 <Mat_VarReadNextInfo@plt+0x1b9c>
   12b54:	add	r4, r4, #1
   12b58:	ldrb	r2, [r4]
   12b5c:	cmp	r2, #44	; 0x2c
   12b60:	bne	12af8 <Mat_VarReadNextInfo@plt+0x1ad4>
   12b64:	cmp	r5, #2
   12b68:	beq	12c44 <Mat_VarReadNextInfo@plt+0x1c20>
   12b6c:	cmp	r5, #1
   12b70:	beq	12d0c <Mat_VarReadNextInfo@plt+0x1ce8>
   12b74:	cmp	r5, #0
   12b78:	bne	12ba8 <Mat_VarReadNextInfo@plt+0x1b84>
   12b7c:	ldr	r1, [pc, #592]	; 12dd4 <Mat_VarReadNextInfo@plt+0x1db0>
   12b80:	strb	r5, [r4]
   12b84:	add	r1, pc, r1
   12b88:	mov	r0, fp
   12b8c:	bl	10de4 <strcmp@plt>
   12b90:	cmp	r0, #0
   12b94:	bne	12d88 <Mat_VarReadNextInfo@plt+0x1d64>
   12b98:	ldr	r2, [sp, #72]	; 0x48
   12b9c:	mvn	r3, #0
   12ba0:	str	r3, [sl, r7, lsl #2]
   12ba4:	str	r3, [r2, r7, lsl #2]
   12ba8:	cmp	r4, r8
   12bac:	add	fp, r6, #2
   12bb0:	add	r7, r7, #1
   12bb4:	mov	r5, #0
   12bb8:	mov	r6, r4
   12bbc:	bne	12b54 <Mat_VarReadNextInfo@plt+0x1b30>
   12bc0:	add	sp, sp, #36	; 0x24
   12bc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12bc8:	mov	r9, #0
   12bcc:	strb	r9, [r4]
   12bd0:	ldr	r1, [sp, #4]
   12bd4:	mov	r0, fp
   12bd8:	bl	10de4 <strcmp@plt>
   12bdc:	cmp	r0, r9
   12be0:	bne	12cbc <Mat_VarReadNextInfo@plt+0x1c98>
   12be4:	cmp	r5, r9
   12be8:	mvneq	r3, #0
   12bec:	streq	r3, [sl, r7, lsl #2]
   12bf0:	beq	12b40 <Mat_VarReadNextInfo@plt+0x1b1c>
   12bf4:	cmp	r5, #1
   12bf8:	beq	12c34 <Mat_VarReadNextInfo@plt+0x1c10>
   12bfc:	cmp	r5, #2
   12c00:	beq	12c34 <Mat_VarReadNextInfo@plt+0x1c10>
   12c04:	ldr	r0, [sp, #8]
   12c08:	ldr	r3, [pc, #456]	; 12dd8 <Mat_VarReadNextInfo@plt+0x1db4>
   12c0c:	add	r2, r7, #1
   12c10:	ldr	r1, [sp, #16]
   12c14:	ldr	r3, [r0, r3]
   12c18:	ldr	r0, [r3]
   12c1c:	bl	10f40 <fprintf@plt>
   12c20:	b	12b40 <Mat_VarReadNextInfo@plt+0x1b1c>
   12c24:	cmp	r5, #1
   12c28:	beq	12c34 <Mat_VarReadNextInfo@plt+0x1c10>
   12c2c:	cmp	r5, #2
   12c30:	bne	12d5c <Mat_VarReadNextInfo@plt+0x1d38>
   12c34:	ldr	r2, [sp, #72]	; 0x48
   12c38:	mvn	r3, #0
   12c3c:	str	r3, [r2, r7, lsl #2]
   12c40:	b	12b40 <Mat_VarReadNextInfo@plt+0x1b1c>
   12c44:	ldr	r1, [pc, #400]	; 12ddc <Mat_VarReadNextInfo@plt+0x1db8>
   12c48:	mov	r5, #0
   12c4c:	strb	r5, [r4]
   12c50:	add	r1, pc, r1
   12c54:	mov	r0, fp
   12c58:	bl	10de4 <strcmp@plt>
   12c5c:	cmp	r0, r5
   12c60:	bne	12d2c <Mat_VarReadNextInfo@plt+0x1d08>
   12c64:	ldr	r2, [sp, #72]	; 0x48
   12c68:	mvn	r3, #0
   12c6c:	str	r3, [r2, r7, lsl #2]
   12c70:	b	12ba8 <Mat_VarReadNextInfo@plt+0x1b84>
   12c74:	mov	r1, r9
   12c78:	mov	r0, fp
   12c7c:	mov	r2, #10
   12c80:	bl	10dfc <strtol@plt>
   12c84:	cmp	r5, #0
   12c88:	beq	12d48 <Mat_VarReadNextInfo@plt+0x1d24>
   12c8c:	cmp	r5, #1
   12c90:	beq	12d7c <Mat_VarReadNextInfo@plt+0x1d58>
   12c94:	cmp	r5, #2
   12c98:	beq	12d7c <Mat_VarReadNextInfo@plt+0x1d58>
   12c9c:	ldr	r0, [sp, #8]
   12ca0:	ldr	r3, [pc, #304]	; 12dd8 <Mat_VarReadNextInfo@plt+0x1db4>
   12ca4:	add	r2, r7, #1
   12ca8:	ldr	r1, [sp, #20]
   12cac:	ldr	r3, [r0, r3]
   12cb0:	ldr	r0, [r3]
   12cb4:	bl	10f40 <fprintf@plt>
   12cb8:	b	12b40 <Mat_VarReadNextInfo@plt+0x1b1c>
   12cbc:	mov	r1, r9
   12cc0:	mov	r0, fp
   12cc4:	mov	r2, #10
   12cc8:	bl	10dfc <strtol@plt>
   12ccc:	cmp	r5, #0
   12cd0:	subeq	r0, r0, #1
   12cd4:	streq	r0, [sl, r7, lsl #2]
   12cd8:	beq	12b40 <Mat_VarReadNextInfo@plt+0x1b1c>
   12cdc:	cmp	r5, #1
   12ce0:	beq	12dac <Mat_VarReadNextInfo@plt+0x1d88>
   12ce4:	cmp	r5, #2
   12ce8:	beq	12d7c <Mat_VarReadNextInfo@plt+0x1d58>
   12cec:	ldr	r0, [sp, #8]
   12cf0:	ldr	r3, [pc, #224]	; 12dd8 <Mat_VarReadNextInfo@plt+0x1db4>
   12cf4:	add	r2, r7, #1
   12cf8:	ldr	r1, [sp, #24]
   12cfc:	ldr	r3, [r0, r3]
   12d00:	ldr	r0, [r3]
   12d04:	bl	10f40 <fprintf@plt>
   12d08:	b	12b40 <Mat_VarReadNextInfo@plt+0x1b1c>
   12d0c:	ldr	r1, [pc, #204]	; 12de0 <Mat_VarReadNextInfo@plt+0x1dbc>
   12d10:	mov	r5, #0
   12d14:	strb	r5, [r4]
   12d18:	add	r1, pc, r1
   12d1c:	mov	r0, fp
   12d20:	bl	10de4 <strcmp@plt>
   12d24:	cmp	r0, r5
   12d28:	beq	12c64 <Mat_VarReadNextInfo@plt+0x1c40>
   12d2c:	mov	r1, r5
   12d30:	mov	r0, fp
   12d34:	mov	r2, #10
   12d38:	bl	10dfc <strtol@plt>
   12d3c:	ldr	r3, [sp, #72]	; 0x48
   12d40:	str	r0, [r3, r7, lsl #2]
   12d44:	b	12ba8 <Mat_VarReadNextInfo@plt+0x1b84>
   12d48:	sub	r3, r0, #1
   12d4c:	str	r3, [sl, r7, lsl #2]
   12d50:	ldr	r3, [sp, #72]	; 0x48
   12d54:	str	r0, [r3, r7, lsl #2]
   12d58:	b	12b40 <Mat_VarReadNextInfo@plt+0x1b1c>
   12d5c:	ldr	r0, [sp, #8]
   12d60:	ldr	r3, [pc, #112]	; 12dd8 <Mat_VarReadNextInfo@plt+0x1db4>
   12d64:	add	r2, r7, #1
   12d68:	ldr	r1, [sp, #12]
   12d6c:	ldr	r3, [r0, r3]
   12d70:	ldr	r0, [r3]
   12d74:	bl	10f40 <fprintf@plt>
   12d78:	b	12b40 <Mat_VarReadNextInfo@plt+0x1b1c>
   12d7c:	ldr	r3, [sp, #72]	; 0x48
   12d80:	str	r0, [r3, r7, lsl #2]
   12d84:	b	12b40 <Mat_VarReadNextInfo@plt+0x1b1c>
   12d88:	mov	r1, r5
   12d8c:	mov	r0, fp
   12d90:	mov	r2, #10
   12d94:	bl	10dfc <strtol@plt>
   12d98:	sub	r3, r0, #1
   12d9c:	str	r3, [sl, r7, lsl #2]
   12da0:	ldr	r3, [sp, #72]	; 0x48
   12da4:	str	r0, [r3, r7, lsl #2]
   12da8:	b	12ba8 <Mat_VarReadNextInfo@plt+0x1b84>
   12dac:	ldr	r3, [sp, #28]
   12db0:	str	r0, [r3, r7, lsl #2]
   12db4:	b	12b40 <Mat_VarReadNextInfo@plt+0x1b1c>
   12db8:	andeq	r1, r0, ip, lsr #22
   12dbc:	andeq	r1, r0, r0, lsr #22
   12dc0:	andeq	r1, r0, r0, lsl fp
   12dc4:	andeq	r2, r1, r0, lsr r5
   12dc8:	strdeq	r1, [r0], -ip
   12dcc:	strdeq	r1, [r0], -r0
   12dd0:	andeq	r1, r0, r0, ror #21
   12dd4:	andeq	r1, r0, r4, lsr sl
   12dd8:	andeq	r0, r0, ip, ror #1
   12ddc:	andeq	r1, r0, r8, ror #18
   12de0:	andeq	r1, r0, r0, lsr #17
   12de4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12de8:	sub	sp, sp, #12
   12dec:	ldr	r7, [pc, #920]	; 1318c <Mat_VarReadNextInfo@plt+0x2168>
   12df0:	ldr	ip, [sp, #48]	; 0x30
   12df4:	add	r7, pc, r7
   12df8:	cmp	r0, ip
   12dfc:	cmpne	r0, #1
   12e00:	movne	r4, #1
   12e04:	moveq	r4, #0
   12e08:	beq	12e1c <Mat_VarReadNextInfo@plt+0x1df8>
   12e0c:	mov	r5, #0
   12e10:	mov	r0, r5
   12e14:	add	sp, sp, #12
   12e18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e1c:	cmp	r0, #1
   12e20:	mov	sl, r0
   12e24:	beq	12f8c <Mat_VarReadNextInfo@plt+0x1f68>
   12e28:	cmp	r0, #0
   12e2c:	ble	13154 <Mat_VarReadNextInfo@plt+0x2130>
   12e30:	ldr	r0, [r2]
   12e34:	cmp	r0, #0
   12e38:	ble	13014 <Mat_VarReadNextInfo@plt+0x1ff0>
   12e3c:	ldr	ip, [sp, #52]	; 0x34
   12e40:	mov	r5, #1
   12e44:	mov	fp, r3
   12e48:	ldr	r6, [ip]
   12e4c:	mov	r8, r2
   12e50:	mov	r9, r1
   12e54:	b	12f08 <Mat_VarReadNextInfo@plt+0x1ee4>
   12e58:	cmp	ip, #0
   12e5c:	blt	12f24 <Mat_VarReadNextInfo@plt+0x1f00>
   12e60:	ldr	r3, [r6, r3]
   12e64:	cmp	ip, r3
   12e68:	bhi	13060 <Mat_VarReadNextInfo@plt+0x203c>
   12e6c:	ldr	lr, [r9]
   12e70:	cmp	r3, lr
   12e74:	bls	1303c <Mat_VarReadNextInfo@plt+0x2018>
   12e78:	cmp	ip, #0
   12e7c:	movle	r3, #0
   12e80:	movgt	r3, #1
   12e84:	cmp	ip, lr
   12e88:	movge	r3, #0
   12e8c:	cmp	r3, #0
   12e90:	bne	1303c <Mat_VarReadNextInfo@plt+0x2018>
   12e94:	add	r3, lr, #1
   12e98:	cmp	ip, r3
   12e9c:	moveq	r3, #1
   12ea0:	streq	r3, [fp]
   12ea4:	moveq	ip, r3
   12ea8:	beq	12ee4 <Mat_VarReadNextInfo@plt+0x1ec0>
   12eac:	cmp	ip, #0
   12eb0:	ble	12ee4 <Mat_VarReadNextInfo@plt+0x1ec0>
   12eb4:	vmov	s15, r0
   12eb8:	sub	ip, ip, lr
   12ebc:	sub	ip, ip, #1
   12ec0:	vcvt.f64.s32	d0, s15
   12ec4:	vmov	s15, ip
   12ec8:	vcvt.f64.s32	d7, s15
   12ecc:	vdiv.f64	d0, d7, d0
   12ed0:	bl	10ea4 <floor@plt>
   12ed4:	vcvt.s32.f64	s0, d0
   12ed8:	vmov	r3, s0
   12edc:	add	ip, r3, #1
   12ee0:	str	ip, [fp]
   12ee4:	add	r4, r4, #1
   12ee8:	cmp	sl, r4
   12eec:	mul	r5, ip, r5
   12ef0:	beq	12e10 <Mat_VarReadNextInfo@plt+0x1dec>
   12ef4:	ldr	r0, [r8, #4]!
   12ef8:	add	fp, fp, #4
   12efc:	cmp	r0, #0
   12f00:	add	r9, r9, #4
   12f04:	ble	13014 <Mat_VarReadNextInfo@plt+0x1ff0>
   12f08:	ldr	ip, [fp]
   12f0c:	lsl	r3, r4, #2
   12f10:	cmn	ip, #1
   12f14:	bne	12e58 <Mat_VarReadNextInfo@plt+0x1e34>
   12f18:	ldr	ip, [r9]
   12f1c:	cmn	ip, #1
   12f20:	beq	12f50 <Mat_VarReadNextInfo@plt+0x1f2c>
   12f24:	cmp	r0, #1
   12f28:	beq	12f6c <Mat_VarReadNextInfo@plt+0x1f48>
   12f2c:	ldr	r3, [r6, r3]
   12f30:	vmov	s15, r0
   12f34:	ldr	ip, [r9]
   12f38:	sub	r3, r3, #1
   12f3c:	sub	r3, r3, ip
   12f40:	vcvt.f64.s32	d0, s15
   12f44:	vmov	s15, r3
   12f48:	vcvt.f64.u32	d7, s15
   12f4c:	b	12ecc <Mat_VarReadNextInfo@plt+0x1ea8>
   12f50:	mov	r2, #1
   12f54:	str	r2, [fp]
   12f58:	ldr	r3, [r6, r3]
   12f5c:	sub	r3, r3, #1
   12f60:	str	r3, [r9]
   12f64:	ldr	ip, [fp]
   12f68:	b	12ee4 <Mat_VarReadNextInfo@plt+0x1ec0>
   12f6c:	ldr	ip, [r6, r3]
   12f70:	str	ip, [fp]
   12f74:	ldr	r3, [r9]
   12f78:	cmp	r3, #0
   12f7c:	movlt	r3, #0
   12f80:	strlt	r3, [r9]
   12f84:	ldrlt	ip, [fp]
   12f88:	b	12ee4 <Mat_VarReadNextInfo@plt+0x1ec0>
   12f8c:	cmp	ip, #0
   12f90:	ble	12fb0 <Mat_VarReadNextInfo@plt+0x1f8c>
   12f94:	ldr	r0, [sp, #52]	; 0x34
   12f98:	ldr	r0, [r0]
   12f9c:	add	ip, r0, ip, lsl #2
   12fa0:	ldr	lr, [r0], #4
   12fa4:	cmp	ip, r0
   12fa8:	mul	sl, lr, sl
   12fac:	bne	12fa0 <Mat_VarReadNextInfo@plt+0x1f7c>
   12fb0:	ldr	r0, [r2]
   12fb4:	cmp	r0, #0
   12fb8:	ble	130f4 <Mat_VarReadNextInfo@plt+0x20d0>
   12fbc:	ldr	r5, [r3]
   12fc0:	cmp	r5, sl
   12fc4:	bgt	130d0 <Mat_VarReadNextInfo@plt+0x20ac>
   12fc8:	ldr	ip, [r1]
   12fcc:	cmp	ip, sl
   12fd0:	bge	12ff0 <Mat_VarReadNextInfo@plt+0x1fcc>
   12fd4:	cmp	r5, ip
   12fd8:	movge	lr, #0
   12fdc:	movlt	lr, #1
   12fe0:	cmp	r5, #0
   12fe4:	movle	lr, #0
   12fe8:	cmp	lr, #0
   12fec:	beq	13084 <Mat_VarReadNextInfo@plt+0x2060>
   12ff0:	ldr	r3, [pc, #408]	; 13190 <Mat_VarReadNextInfo@plt+0x216c>
   12ff4:	ldr	r0, [pc, #408]	; 13194 <Mat_VarReadNextInfo@plt+0x2170>
   12ff8:	mov	r2, #18
   12ffc:	ldr	r3, [r7, r3]
   13000:	mov	r1, #1
   13004:	add	r0, pc, r0
   13008:	ldr	r3, [r3]
   1300c:	bl	10e8c <fwrite@plt>
   13010:	b	12e0c <Mat_VarReadNextInfo@plt+0x1de8>
   13014:	ldr	r3, [pc, #372]	; 13190 <Mat_VarReadNextInfo@plt+0x216c>
   13018:	ldr	r0, [pc, #376]	; 13198 <Mat_VarReadNextInfo@plt+0x2174>
   1301c:	mov	r2, #23
   13020:	ldr	r3, [r7, r3]
   13024:	mov	r1, #1
   13028:	add	r0, pc, r0
   1302c:	ldr	r3, [r3]
   13030:	mov	r5, #0
   13034:	bl	10e8c <fwrite@plt>
   13038:	b	12e10 <Mat_VarReadNextInfo@plt+0x1dec>
   1303c:	ldr	r3, [pc, #332]	; 13190 <Mat_VarReadNextInfo@plt+0x216c>
   13040:	ldr	r1, [pc, #340]	; 1319c <Mat_VarReadNextInfo@plt+0x2178>
   13044:	add	r2, r4, #1
   13048:	ldr	r3, [r7, r3]
   1304c:	add	r1, pc, r1
   13050:	mov	r5, #0
   13054:	ldr	r0, [r3]
   13058:	bl	10f40 <fprintf@plt>
   1305c:	b	12e10 <Mat_VarReadNextInfo@plt+0x1dec>
   13060:	ldr	r3, [pc, #296]	; 13190 <Mat_VarReadNextInfo@plt+0x216c>
   13064:	ldr	r1, [pc, #308]	; 131a0 <Mat_VarReadNextInfo@plt+0x217c>
   13068:	add	r2, r4, #1
   1306c:	ldr	r3, [r7, r3]
   13070:	add	r1, pc, r1
   13074:	mov	r5, #0
   13078:	ldr	r0, [r3]
   1307c:	bl	10f40 <fprintf@plt>
   13080:	b	12e10 <Mat_VarReadNextInfo@plt+0x1dec>
   13084:	cmn	r5, #1
   13088:	beq	13118 <Mat_VarReadNextInfo@plt+0x20f4>
   1308c:	cmp	r5, #0
   13090:	str	r3, [sp, #4]
   13094:	ble	12e10 <Mat_VarReadNextInfo@plt+0x1dec>
   13098:	sub	ip, r5, ip
   1309c:	sub	ip, ip, #1
   130a0:	vmov	s15, r0
   130a4:	vmov	s13, ip
   130a8:	vcvt.f64.s32	d7, s15
   130ac:	vcvt.f64.s32	d0, s13
   130b0:	vdiv.f64	d0, d0, d7
   130b4:	bl	10ea4 <floor@plt>
   130b8:	vcvt.s32.f64	s0, d0
   130bc:	vmov	r3, s0
   130c0:	add	r5, r3, #1
   130c4:	ldr	r3, [sp, #4]
   130c8:	str	r5, [r3]
   130cc:	b	12e10 <Mat_VarReadNextInfo@plt+0x1dec>
   130d0:	ldr	r3, [pc, #184]	; 13190 <Mat_VarReadNextInfo@plt+0x216c>
   130d4:	ldr	r0, [pc, #200]	; 131a4 <Mat_VarReadNextInfo@plt+0x2180>
   130d8:	mov	r2, #17
   130dc:	ldr	r3, [r7, r3]
   130e0:	mov	r1, #1
   130e4:	add	r0, pc, r0
   130e8:	ldr	r3, [r3]
   130ec:	bl	10e8c <fwrite@plt>
   130f0:	b	12e0c <Mat_VarReadNextInfo@plt+0x1de8>
   130f4:	ldr	r3, [pc, #148]	; 13190 <Mat_VarReadNextInfo@plt+0x216c>
   130f8:	ldr	r0, [pc, #168]	; 131a8 <Mat_VarReadNextInfo@plt+0x2184>
   130fc:	mov	r2, #23
   13100:	ldr	r3, [r7, r3]
   13104:	mov	r1, #1
   13108:	add	r0, pc, r0
   1310c:	ldr	r3, [r3]
   13110:	bl	10e8c <fwrite@plt>
   13114:	b	12e0c <Mat_VarReadNextInfo@plt+0x1de8>
   13118:	cmn	ip, #1
   1311c:	beq	1315c <Mat_VarReadNextInfo@plt+0x2138>
   13120:	cmp	r0, #1
   13124:	str	sl, [r3]
   13128:	beq	13174 <Mat_VarReadNextInfo@plt+0x2150>
   1312c:	ldr	r1, [r1]
   13130:	vldr	s0, [r2]
   13134:	sub	sl, sl, r1
   13138:	sub	sl, sl, #1
   1313c:	str	r3, [sp, #4]
   13140:	vmov	s15, sl
   13144:	vcvt.f64.s32	d0, s0
   13148:	vcvt.f64.s32	d7, s15
   1314c:	vdiv.f64	d0, d7, d0
   13150:	b	130b4 <Mat_VarReadNextInfo@plt+0x2090>
   13154:	mov	r5, #1
   13158:	b	12e10 <Mat_VarReadNextInfo@plt+0x1dec>
   1315c:	sub	sl, sl, #1
   13160:	mov	r2, #1
   13164:	str	r2, [r3]
   13168:	str	sl, [r1]
   1316c:	ldr	r5, [r3]
   13170:	b	12e10 <Mat_VarReadNextInfo@plt+0x1dec>
   13174:	ldr	r2, [r1]
   13178:	cmp	r2, #0
   1317c:	movge	r5, sl
   13180:	strlt	lr, [r1]
   13184:	ldrlt	r5, [r3]
   13188:	b	12e10 <Mat_VarReadNextInfo@plt+0x1dec>
   1318c:	andeq	r2, r1, r4, lsl #4
   13190:	andeq	r0, r0, ip, ror #1
   13194:	andeq	r1, r0, r0, lsl #12
   13198:			; <UNDEFINED> instruction: 0x000015b0
   1319c:	strdeq	r1, [r0], -r0
   131a0:	andeq	r1, r0, r8, lsr #11
   131a4:	andeq	r1, r0, ip, lsl #10
   131a8:	ldrdeq	r1, [r0], -r0
   131ac:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   131b0:	sub	r7, r1, r0
   131b4:	sub	r6, r2, r1
   131b8:	mov	r9, r0
   131bc:	mov	r5, r1
   131c0:	mov	r0, r7
   131c4:	mov	r1, r6
   131c8:	mov	sl, r2
   131cc:	mov	r4, r3
   131d0:	bl	14390 <getopt_long_only@@Base+0x450>
   131d4:	subs	r8, r1, #0
   131d8:	beq	1326c <Mat_VarReadNextInfo@plt+0x2248>
   131dc:	mov	r0, r6
   131e0:	b	131e8 <Mat_VarReadNextInfo@plt+0x21c4>
   131e4:	mov	r8, r1
   131e8:	mov	r1, r8
   131ec:	bl	14390 <getopt_long_only@@Base+0x450>
   131f0:	mov	r0, r8
   131f4:	cmp	r1, #0
   131f8:	bne	131e4 <Mat_VarReadNextInfo@plt+0x21c0>
   131fc:	sub	r0, sl, r9
   13200:	mov	r1, r8
   13204:	bl	14170 <getopt_long_only@@Base+0x230>
   13208:	cmp	r8, #0
   1320c:	pople	{r4, r5, r6, r7, r8, r9, sl, pc}
   13210:	add	r8, r8, r5
   13214:	add	r3, r4, r5, lsl #2
   13218:	mov	r9, r5
   1321c:	cmp	r0, #0
   13220:	mov	r2, r9
   13224:	ldrgt	lr, [r3]
   13228:	movgt	r1, #0
   1322c:	ble	13258 <Mat_VarReadNextInfo@plt+0x2234>
   13230:	cmp	r5, r2
   13234:	suble	r2, r2, r7
   13238:	addgt	r2, r2, r6
   1323c:	add	r1, r1, #1
   13240:	ldr	ip, [r4, r2, lsl #2]
   13244:	cmp	r0, r1
   13248:	str	lr, [r4, r2, lsl #2]
   1324c:	str	ip, [r3]
   13250:	mov	lr, ip
   13254:	bne	13230 <Mat_VarReadNextInfo@plt+0x220c>
   13258:	add	r9, r9, #1
   1325c:	cmp	r9, r8
   13260:	add	r3, r3, #4
   13264:	bne	1321c <Mat_VarReadNextInfo@plt+0x21f8>
   13268:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1326c:	mov	r8, r6
   13270:	b	131fc <Mat_VarReadNextInfo@plt+0x21d8>
   13274:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13278:	sub	sp, sp, #52	; 0x34
   1327c:	ldr	lr, [pc, #1076]	; 136b8 <Mat_VarReadNextInfo@plt+0x2694>
   13280:	ldr	ip, [pc, #1076]	; 136bc <Mat_VarReadNextInfo@plt+0x2698>
   13284:	add	lr, pc, lr
   13288:	str	r0, [sp, #44]	; 0x2c
   1328c:	ldr	r0, [lr]
   13290:	add	ip, pc, ip
   13294:	ldr	fp, [pc, #1060]	; 136c0 <Mat_VarReadNextInfo@plt+0x269c>
   13298:	cmp	r0, #1
   1329c:	str	r1, [sp, #20]
   132a0:	str	r2, [sp, #8]
   132a4:	str	r3, [sp, #28]
   132a8:	ldr	r7, [ip]
   132ac:	add	fp, pc, fp
   132b0:	ldr	r8, [sp, #88]	; 0x58
   132b4:	beq	13480 <Mat_VarReadNextInfo@plt+0x245c>
   132b8:	cmp	r0, #2
   132bc:	beq	13470 <Mat_VarReadNextInfo@plt+0x244c>
   132c0:	cmp	r0, #0
   132c4:	beq	13434 <Mat_VarReadNextInfo@plt+0x2410>
   132c8:	ldr	r3, [pc, #1012]	; 136c4 <Mat_VarReadNextInfo@plt+0x26a0>
   132cc:	add	r3, pc, r3
   132d0:	str	r3, [sp, #24]
   132d4:	ldr	r3, [pc, #1004]	; 136c8 <Mat_VarReadNextInfo@plt+0x26a4>
   132d8:	mov	r1, #61	; 0x3d
   132dc:	mov	r0, r7
   132e0:	ldr	r3, [fp, r3]
   132e4:	str	r3, [sp, #32]
   132e8:	ldr	r2, [r3]
   132ec:	str	r2, [sp, #36]	; 0x24
   132f0:	add	r2, r2, #1
   132f4:	str	r2, [r3]
   132f8:	str	r2, [sp, #40]	; 0x28
   132fc:	bl	10f28 <strchr@plt>
   13300:	subs	r3, r0, #0
   13304:	str	r3, [sp, #16]
   13308:	beq	13528 <Mat_VarReadNextInfo@plt+0x2504>
   1330c:	sub	r6, r3, r7
   13310:	add	r3, r3, #1
   13314:	str	r3, [sp, #16]
   13318:	ldr	r3, [sp, #8]
   1331c:	ldr	sl, [r3]
   13320:	cmp	sl, #0
   13324:	beq	13570 <Mat_VarReadNextInfo@plt+0x254c>
   13328:	mov	r2, #0
   1332c:	mov	r4, r3
   13330:	ldr	r3, [sp, #92]	; 0x5c
   13334:	mov	r5, r2
   13338:	mvn	r9, #0
   1333c:	and	r3, r3, #4
   13340:	str	r2, [sp, #4]
   13344:	str	r3, [sp, #12]
   13348:	mov	r2, r6
   1334c:	mov	r1, sl
   13350:	mov	r0, r7
   13354:	bl	11000 <strncmp@plt>
   13358:	cmp	r0, #0
   1335c:	bne	133c0 <Mat_VarReadNextInfo@plt+0x239c>
   13360:	mov	r0, sl
   13364:	bl	10f1c <strlen@plt>
   13368:	cmp	r6, r0
   1336c:	beq	1349c <Mat_VarReadNextInfo@plt+0x2478>
   13370:	adds	r3, r8, #0
   13374:	movne	r3, #1
   13378:	cmp	r6, #1
   1337c:	movne	r3, #0
   13380:	cmp	r3, #0
   13384:	bne	133c0 <Mat_VarReadNextInfo@plt+0x239c>
   13388:	cmn	r9, #1
   1338c:	moveq	r9, r5
   13390:	beq	133c0 <Mat_VarReadNextInfo@plt+0x239c>
   13394:	ldr	r3, [sp, #12]
   13398:	cmp	r3, #0
   1339c:	bne	133b8 <Mat_VarReadNextInfo@plt+0x2394>
   133a0:	ldr	r3, [sp, #8]
   133a4:	ldr	r1, [r4, #4]
   133a8:	add	r3, r3, r9, lsl #4
   133ac:	ldr	r2, [r3, #4]
   133b0:	cmp	r1, r2
   133b4:	beq	13444 <Mat_VarReadNextInfo@plt+0x2420>
   133b8:	mov	r3, #1
   133bc:	str	r3, [sp, #4]
   133c0:	ldr	sl, [r4, #16]!
   133c4:	add	r5, r5, #1
   133c8:	cmp	sl, #0
   133cc:	bne	13348 <Mat_VarReadNextInfo@plt+0x2324>
   133d0:	ldr	r3, [sp, #4]
   133d4:	cmp	r3, #0
   133d8:	beq	13490 <Mat_VarReadNextInfo@plt+0x246c>
   133dc:	ldr	r3, [pc, #744]	; 136cc <Mat_VarReadNextInfo@plt+0x26a8>
   133e0:	ldr	r3, [fp, r3]
   133e4:	ldr	r3, [r3]
   133e8:	cmp	r3, #0
   133ec:	beq	13418 <Mat_VarReadNextInfo@plt+0x23f4>
   133f0:	ldr	r3, [sp, #20]
   133f4:	ldrb	r3, [r3]
   133f8:	cmp	r3, #58	; 0x3a
   133fc:	beq	13418 <Mat_VarReadNextInfo@plt+0x23f4>
   13400:	ldr	r0, [pc, #712]	; 136d0 <Mat_VarReadNextInfo@plt+0x26ac>
   13404:	mov	r3, r7
   13408:	mov	r2, r6
   1340c:	ldr	r1, [sp, #24]
   13410:	add	r0, pc, r0
   13414:	bl	10f34 <warnx@plt>
   13418:	ldr	r3, [pc, #692]	; 136d4 <Mat_VarReadNextInfo@plt+0x26b0>
   1341c:	mov	r0, #63	; 0x3f
   13420:	mov	r2, #0
   13424:	ldr	r3, [fp, r3]
   13428:	str	r2, [r3]
   1342c:	add	sp, sp, #52	; 0x34
   13430:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13434:	ldr	r3, [pc, #668]	; 136d8 <Mat_VarReadNextInfo@plt+0x26b4>
   13438:	add	r3, pc, r3
   1343c:	str	r3, [sp, #24]
   13440:	b	132d4 <Mat_VarReadNextInfo@plt+0x22b0>
   13444:	ldr	r1, [r4, #8]
   13448:	ldr	r2, [r3, #8]
   1344c:	cmp	r1, r2
   13450:	bne	133b8 <Mat_VarReadNextInfo@plt+0x2394>
   13454:	ldr	r3, [r3, #12]
   13458:	ldr	r2, [r4, #12]
   1345c:	ldr	r1, [sp, #4]
   13460:	cmp	r2, r3
   13464:	movne	r1, #1
   13468:	str	r1, [sp, #4]
   1346c:	b	133c0 <Mat_VarReadNextInfo@plt+0x239c>
   13470:	ldr	r3, [pc, #612]	; 136dc <Mat_VarReadNextInfo@plt+0x26b8>
   13474:	add	r3, pc, r3
   13478:	str	r3, [sp, #24]
   1347c:	b	132d4 <Mat_VarReadNextInfo@plt+0x22b0>
   13480:	ldr	r3, [pc, #600]	; 136e0 <Mat_VarReadNextInfo@plt+0x26bc>
   13484:	add	r3, pc, r3
   13488:	str	r3, [sp, #24]
   1348c:	b	132d4 <Mat_VarReadNextInfo@plt+0x22b0>
   13490:	cmn	r9, #1
   13494:	beq	13570 <Mat_VarReadNextInfo@plt+0x254c>
   13498:	mov	r5, r9
   1349c:	ldr	r3, [sp, #8]
   134a0:	ldr	r1, [sp, #16]
   134a4:	add	r4, r3, r5, lsl #4
   134a8:	cmp	r1, #0
   134ac:	ldr	r3, [r4, #4]
   134b0:	clz	r2, r3
   134b4:	lsr	r2, r2, #5
   134b8:	moveq	r2, #0
   134bc:	cmp	r2, #0
   134c0:	beq	13538 <Mat_VarReadNextInfo@plt+0x2514>
   134c4:	ldr	r3, [pc, #512]	; 136cc <Mat_VarReadNextInfo@plt+0x26a8>
   134c8:	ldr	r3, [fp, r3]
   134cc:	ldr	r3, [r3]
   134d0:	cmp	r3, #0
   134d4:	beq	13504 <Mat_VarReadNextInfo@plt+0x24e0>
   134d8:	ldr	r3, [sp, #20]
   134dc:	ldrb	r3, [r3]
   134e0:	cmp	r3, #58	; 0x3a
   134e4:	beq	13504 <Mat_VarReadNextInfo@plt+0x24e0>
   134e8:	ldr	r0, [pc, #500]	; 136e4 <Mat_VarReadNextInfo@plt+0x26c0>
   134ec:	mov	r3, r7
   134f0:	add	r0, pc, r0
   134f4:	mov	r2, r6
   134f8:	ldr	r1, [sp, #24]
   134fc:	add	r0, r0, #32
   13500:	bl	10f34 <warnx@plt>
   13504:	ldr	r3, [r4, #8]
   13508:	cmp	r3, #0
   1350c:	bne	13418 <Mat_VarReadNextInfo@plt+0x23f4>
   13510:	ldr	r3, [pc, #444]	; 136d4 <Mat_VarReadNextInfo@plt+0x26b0>
   13514:	ldr	r2, [r4, #12]
   13518:	mov	r0, #63	; 0x3f
   1351c:	ldr	r3, [fp, r3]
   13520:	str	r2, [r3]
   13524:	b	1342c <Mat_VarReadNextInfo@plt+0x2408>
   13528:	mov	r0, r7
   1352c:	bl	10f1c <strlen@plt>
   13530:	mov	r6, r0
   13534:	b	13318 <Mat_VarReadNextInfo@plt+0x22f4>
   13538:	sub	r2, r3, #1
   1353c:	cmp	r2, #1
   13540:	bls	135b8 <Mat_VarReadNextInfo@plt+0x2594>
   13544:	ldr	r3, [sp, #28]
   13548:	cmp	r3, #0
   1354c:	strne	r5, [r3]
   13550:	ldr	r3, [r4, #8]
   13554:	cmp	r3, #0
   13558:	movne	r0, #0
   1355c:	ldrne	r2, [r4, #12]
   13560:	ldreq	r0, [r4, #12]
   13564:	strne	r2, [r3]
   13568:	add	sp, sp, #52	; 0x34
   1356c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13570:	cmp	r8, #0
   13574:	bne	136a4 <Mat_VarReadNextInfo@plt+0x2680>
   13578:	ldr	r3, [pc, #332]	; 136cc <Mat_VarReadNextInfo@plt+0x26a8>
   1357c:	ldr	r3, [fp, r3]
   13580:	ldr	r3, [r3]
   13584:	cmp	r3, #0
   13588:	beq	13418 <Mat_VarReadNextInfo@plt+0x23f4>
   1358c:	ldr	r3, [sp, #20]
   13590:	ldrb	r3, [r3]
   13594:	cmp	r3, #58	; 0x3a
   13598:	beq	13418 <Mat_VarReadNextInfo@plt+0x23f4>
   1359c:	ldr	r0, [pc, #324]	; 136e8 <Mat_VarReadNextInfo@plt+0x26c4>
   135a0:	mov	r2, r7
   135a4:	add	r0, pc, r0
   135a8:	ldr	r1, [sp, #24]
   135ac:	add	r0, r0, #112	; 0x70
   135b0:	bl	10f34 <warnx@plt>
   135b4:	b	13418 <Mat_VarReadNextInfo@plt+0x23f4>
   135b8:	ldr	r1, [sp, #16]
   135bc:	cmp	r1, #0
   135c0:	mov	r2, r1
   135c4:	beq	1366c <Mat_VarReadNextInfo@plt+0x2648>
   135c8:	ldr	r2, [pc, #284]	; 136ec <Mat_VarReadNextInfo@plt+0x26c8>
   135cc:	cmp	r3, #1
   135d0:	ldr	r3, [fp, r2]
   135d4:	mov	r2, r1
   135d8:	str	r1, [r3]
   135dc:	bne	13544 <Mat_VarReadNextInfo@plt+0x2520>
   135e0:	ldr	r3, [sp, #16]
   135e4:	cmp	r3, #0
   135e8:	bne	13544 <Mat_VarReadNextInfo@plt+0x2520>
   135ec:	ldr	r3, [pc, #216]	; 136cc <Mat_VarReadNextInfo@plt+0x26a8>
   135f0:	ldr	r3, [fp, r3]
   135f4:	ldr	r3, [r3]
   135f8:	cmp	r3, #0
   135fc:	beq	13628 <Mat_VarReadNextInfo@plt+0x2604>
   13600:	ldr	r3, [sp, #20]
   13604:	ldrb	r3, [r3]
   13608:	cmp	r3, #58	; 0x3a
   1360c:	beq	13628 <Mat_VarReadNextInfo@plt+0x2604>
   13610:	ldr	r0, [pc, #216]	; 136f0 <Mat_VarReadNextInfo@plt+0x26cc>
   13614:	mov	r2, r7
   13618:	add	r0, pc, r0
   1361c:	ldr	r1, [sp, #24]
   13620:	add	r0, r0, #76	; 0x4c
   13624:	bl	10f34 <warnx@plt>
   13628:	ldr	r3, [r4, #8]
   1362c:	cmp	r3, #0
   13630:	ldr	r3, [pc, #156]	; 136d4 <Mat_VarReadNextInfo@plt+0x26b0>
   13634:	ldreq	r2, [r4, #12]
   13638:	movne	r2, #0
   1363c:	ldr	r3, [fp, r3]
   13640:	str	r2, [r3]
   13644:	ldr	r2, [sp, #32]
   13648:	ldr	r3, [r2]
   1364c:	sub	r3, r3, #1
   13650:	str	r3, [r2]
   13654:	ldr	r3, [sp, #20]
   13658:	ldrb	r0, [r3]
   1365c:	cmp	r0, #58	; 0x3a
   13660:	movne	r0, #63	; 0x3f
   13664:	moveq	r0, #58	; 0x3a
   13668:	b	1342c <Mat_VarReadNextInfo@plt+0x2408>
   1366c:	cmp	r3, #1
   13670:	bne	13544 <Mat_VarReadNextInfo@plt+0x2520>
   13674:	ldr	r1, [sp, #32]
   13678:	ldr	r2, [sp, #36]	; 0x24
   1367c:	ldr	r3, [pc, #104]	; 136ec <Mat_VarReadNextInfo@plt+0x26c8>
   13680:	add	r2, r2, #2
   13684:	str	r2, [r1]
   13688:	ldr	r2, [sp, #44]	; 0x2c
   1368c:	ldr	r1, [sp, #40]	; 0x28
   13690:	ldr	r3, [fp, r3]
   13694:	ldr	r2, [r2, r1, lsl #2]
   13698:	str	r2, [sp, #16]
   1369c:	str	r2, [r3]
   136a0:	b	135e0 <Mat_VarReadNextInfo@plt+0x25bc>
   136a4:	ldr	r3, [sp, #32]
   136a8:	ldr	r2, [sp, #36]	; 0x24
   136ac:	mvn	r0, #0
   136b0:	str	r2, [r3]
   136b4:	b	1342c <Mat_VarReadNextInfo@plt+0x2408>
   136b8:	andeq	r1, r1, r8, lsr pc
   136bc:	andeq	r1, r1, r4, asr #30
   136c0:	andeq	r1, r1, ip, asr #26
   136c4:	andeq	r1, r0, r8, asr #4
   136c8:	strdeq	r0, [r0], -r4
   136cc:	andeq	r0, r0, r8, ror #1
   136d0:	muleq	r0, r4, r8
   136d4:	strdeq	r0, [r0], -r8
   136d8:	andeq	r1, r0, ip, asr #18
   136dc:	andeq	r1, r0, r8, lsl r9
   136e0:	andeq	r1, r0, r4, lsl #18
   136e4:			; <UNDEFINED> instruction: 0x000017b4
   136e8:	andeq	r1, r0, r0, lsl #14
   136ec:	strdeq	r0, [r0], -ip
   136f0:	andeq	r1, r0, ip, lsl #13
   136f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136f8:	sub	sp, sp, #52	; 0x34
   136fc:	cmp	r2, #0
   13700:	str	r3, [sp, #36]	; 0x24
   13704:	ldr	r3, [pc, #1872]	; 13e5c <Mat_VarReadNextInfo@plt+0x2e38>
   13708:	str	r2, [sp, #28]
   1370c:	add	r3, pc, r3
   13710:	str	r0, [sp, #8]
   13714:	str	r3, [sp, #32]
   13718:	ldr	r8, [sp, #92]	; 0x5c
   1371c:	beq	139e4 <Mat_VarReadNextInfo@plt+0x29c0>
   13720:	ldr	r0, [pc, #1848]	; 13e60 <Mat_VarReadNextInfo@plt+0x2e3c>
   13724:	mov	sl, r1
   13728:	add	r0, pc, r0
   1372c:	bl	10eb0 <getenv@plt>
   13730:	ldr	r3, [sp, #28]
   13734:	ldrb	r3, [r3]
   13738:	cmp	r3, #45	; 0x2d
   1373c:	orreq	r8, r8, #2
   13740:	str	r0, [sp, #44]	; 0x2c
   13744:	beq	139d4 <Mat_VarReadNextInfo@plt+0x29b0>
   13748:	ldr	r2, [sp, #44]	; 0x2c
   1374c:	adds	r2, r2, #0
   13750:	movne	r2, #1
   13754:	cmp	r3, #43	; 0x2b
   13758:	orreq	r2, r2, #1
   1375c:	cmp	r2, #0
   13760:	sub	r3, r3, #43	; 0x2b
   13764:	bicne	r8, r8, #1
   13768:	tst	r3, #253	; 0xfd
   1376c:	beq	139d4 <Mat_VarReadNextInfo@plt+0x29b0>
   13770:	ldr	r3, [pc, #1772]	; 13e64 <Mat_VarReadNextInfo@plt+0x2e40>
   13774:	ldr	r0, [sp, #32]
   13778:	ldr	r7, [r0, r3]
   1377c:	ldr	r2, [r7]
   13780:	cmp	r2, #0
   13784:	beq	13990 <Mat_VarReadNextInfo@plt+0x296c>
   13788:	ldr	r2, [pc, #1752]	; 13e68 <Mat_VarReadNextInfo@plt+0x2e44>
   1378c:	ldr	r3, [pc, #1752]	; 13e6c <Mat_VarReadNextInfo@plt+0x2e48>
   13790:	mov	r1, #0
   13794:	ldr	r9, [r0, r2]
   13798:	ldr	r3, [r0, r3]
   1379c:	mov	r2, r3
   137a0:	str	r3, [sp, #40]	; 0x28
   137a4:	ldr	r3, [r9]
   137a8:	str	r1, [r2]
   137ac:	cmp	r3, r1
   137b0:	bne	139bc <Mat_VarReadNextInfo@plt+0x2998>
   137b4:	ldr	r2, [pc, #1716]	; 13e70 <Mat_VarReadNextInfo@plt+0x2e4c>
   137b8:	ldr	r6, [pc, #1716]	; 13e74 <Mat_VarReadNextInfo@plt+0x2e50>
   137bc:	add	r2, pc, r2
   137c0:	str	r2, [sp, #24]
   137c4:	ldr	r2, [pc, #1708]	; 13e78 <Mat_VarReadNextInfo@plt+0x2e54>
   137c8:	add	r6, pc, r6
   137cc:	add	r2, pc, r2
   137d0:	str	r2, [sp, #12]
   137d4:	ldr	r2, [pc, #1696]	; 13e7c <Mat_VarReadNextInfo@plt+0x2e58>
   137d8:	mov	fp, #0
   137dc:	add	r2, pc, r2
   137e0:	str	r2, [sp, #16]
   137e4:	ldr	r2, [pc, #1684]	; 13e80 <Mat_VarReadNextInfo@plt+0x2e5c>
   137e8:	add	r2, pc, r2
   137ec:	str	r2, [sp, #20]
   137f0:	b	13870 <Mat_VarReadNextInfo@plt+0x284c>
   137f4:	ldr	r3, [sp, #16]
   137f8:	ldr	r0, [sp, #20]
   137fc:	tst	r8, #2
   13800:	str	r0, [r3]
   13804:	bne	13a64 <Mat_VarReadNextInfo@plt+0x2a40>
   13808:	tst	r8, #1
   1380c:	beq	139e4 <Mat_VarReadNextInfo@plt+0x29c0>
   13810:	ldr	r5, [r6, #8]
   13814:	cmn	r5, #1
   13818:	addeq	r3, r2, #1
   1381c:	streq	r2, [r6, #8]
   13820:	streq	r3, [r7]
   13824:	beq	13878 <Mat_VarReadNextInfo@plt+0x2854>
   13828:	ldr	r4, [r6, #4]
   1382c:	cmn	r4, #1
   13830:	addeq	r2, r2, #1
   13834:	streq	r2, [r7]
   13838:	beq	13878 <Mat_VarReadNextInfo@plt+0x2854>
   1383c:	mov	r3, sl
   13840:	mov	r1, r4
   13844:	mov	r0, r5
   13848:	bl	131ac <Mat_VarReadNextInfo@plt+0x2188>
   1384c:	ldr	r3, [r7]
   13850:	sub	r4, r4, r5
   13854:	sub	r4, r3, r4
   13858:	add	r3, r3, #1
   1385c:	str	r3, [r7]
   13860:	ldr	r3, [r9]
   13864:	mvn	r2, #0
   13868:	str	r4, [r6, #8]
   1386c:	str	r2, [r6, #4]
   13870:	cmp	r3, #0
   13874:	bne	1388c <Mat_VarReadNextInfo@plt+0x2868>
   13878:	ldr	r3, [sp, #24]
   1387c:	ldr	r5, [r3]
   13880:	ldrb	r4, [r5]
   13884:	cmp	r4, #0
   13888:	bne	138fc <Mat_VarReadNextInfo@plt+0x28d8>
   1388c:	ldr	r2, [r7]
   13890:	ldr	r3, [sp, #8]
   13894:	str	fp, [r9]
   13898:	cmp	r2, r3
   1389c:	bge	139f4 <Mat_VarReadNextInfo@plt+0x29d0>
   138a0:	ldr	r1, [sl, r2, lsl #2]
   138a4:	ldr	r3, [sp, #12]
   138a8:	str	r1, [r3]
   138ac:	ldrb	r3, [r1]
   138b0:	cmp	r3, #45	; 0x2d
   138b4:	bne	137f4 <Mat_VarReadNextInfo@plt+0x27d0>
   138b8:	ldrb	r4, [r1, #1]
   138bc:	cmp	r4, #0
   138c0:	beq	137f4 <Mat_VarReadNextInfo@plt+0x27d0>
   138c4:	ldr	r3, [pc, #1464]	; 13e84 <Mat_VarReadNextInfo@plt+0x2e60>
   138c8:	add	r3, pc, r3
   138cc:	ldr	r9, [r3, #8]
   138d0:	cmn	r9, #1
   138d4:	beq	138e4 <Mat_VarReadNextInfo@plt+0x28c0>
   138d8:	ldr	r0, [r3, #4]
   138dc:	cmn	r0, #1
   138e0:	streq	r2, [r3, #4]
   138e4:	ldr	r3, [pc, #1436]	; 13e88 <Mat_VarReadNextInfo@plt+0x2e64>
   138e8:	add	r5, r1, #1
   138ec:	add	r3, pc, r3
   138f0:	cmp	r4, #45	; 0x2d
   138f4:	str	r5, [r3]
   138f8:	beq	13bb8 <Mat_VarReadNextInfo@plt+0x2b94>
   138fc:	ldr	r3, [sp, #36]	; 0x24
   13900:	cmp	r3, #0
   13904:	beq	13aa0 <Mat_VarReadNextInfo@plt+0x2a7c>
   13908:	ldr	r3, [r7]
   1390c:	ldr	r3, [sl, r3, lsl #2]
   13910:	cmp	r3, r5
   13914:	beq	13aa0 <Mat_VarReadNextInfo@plt+0x2a7c>
   13918:	cmp	r4, #45	; 0x2d
   1391c:	beq	13be0 <Mat_VarReadNextInfo@plt+0x2bbc>
   13920:	tst	r8, #4
   13924:	beq	13aa0 <Mat_VarReadNextInfo@plt+0x2a7c>
   13928:	ldr	r3, [pc, #1372]	; 13e8c <Mat_VarReadNextInfo@plt+0x2e68>
   1392c:	mov	r0, #0
   13930:	add	r3, pc, r3
   13934:	cmp	r4, #58	; 0x3a
   13938:	str	r0, [r3]
   1393c:	beq	13954 <Mat_VarReadNextInfo@plt+0x2930>
   13940:	mov	r1, r4
   13944:	ldr	r0, [sp, #28]
   13948:	bl	10f28 <strchr@plt>
   1394c:	adds	r0, r0, #0
   13950:	movne	r0, #1
   13954:	stm	sp, {r0, r8}
   13958:	ldr	r3, [sp, #88]	; 0x58
   1395c:	ldr	r2, [sp, #36]	; 0x24
   13960:	ldr	r1, [sp, #28]
   13964:	mov	r0, sl
   13968:	bl	13274 <Mat_VarReadNextInfo@plt+0x2250>
   1396c:	cmn	r0, #1
   13970:	mov	r9, r0
   13974:	beq	13a94 <Mat_VarReadNextInfo@plt+0x2a70>
   13978:	ldr	r3, [pc, #1296]	; 13e90 <Mat_VarReadNextInfo@plt+0x2e6c>
   1397c:	ldr	r2, [pc, #1296]	; 13e94 <Mat_VarReadNextInfo@plt+0x2e70>
   13980:	add	r3, pc, r3
   13984:	add	r2, pc, r2
   13988:	str	r2, [r3]
   1398c:	b	139e8 <Mat_VarReadNextInfo@plt+0x29c4>
   13990:	ldr	r3, [pc, #1232]	; 13e68 <Mat_VarReadNextInfo@plt+0x2e44>
   13994:	ldr	ip, [sp, #32]
   13998:	ldr	r1, [pc, #1228]	; 13e6c <Mat_VarReadNextInfo@plt+0x2e48>
   1399c:	mov	r0, #1
   139a0:	ldr	r9, [ip, r3]
   139a4:	str	r0, [r7]
   139a8:	mov	r3, r0
   139ac:	str	r0, [r9]
   139b0:	ldr	r1, [ip, r1]
   139b4:	str	r1, [sp, #40]	; 0x28
   139b8:	str	r2, [r1]
   139bc:	ldr	r2, [pc, #1236]	; 13e98 <Mat_VarReadNextInfo@plt+0x2e74>
   139c0:	mvn	r1, #0
   139c4:	add	r2, pc, r2
   139c8:	str	r1, [r2, #4]
   139cc:	str	r1, [r2, #8]
   139d0:	b	137b4 <Mat_VarReadNextInfo@plt+0x2790>
   139d4:	ldr	r3, [sp, #28]
   139d8:	add	r3, r3, #1
   139dc:	str	r3, [sp, #28]
   139e0:	b	13770 <Mat_VarReadNextInfo@plt+0x274c>
   139e4:	mvn	r9, #0
   139e8:	mov	r0, r9
   139ec:	add	sp, sp, #52	; 0x34
   139f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   139f4:	ldr	r0, [pc, #1184]	; 13e9c <Mat_VarReadNextInfo@plt+0x2e78>
   139f8:	ldr	r3, [pc, #1184]	; 13ea0 <Mat_VarReadNextInfo@plt+0x2e7c>
   139fc:	add	r0, pc, r0
   13a00:	ldr	r1, [pc, #1180]	; 13ea4 <Mat_VarReadNextInfo@plt+0x2e80>
   13a04:	ldr	r4, [r0, #4]
   13a08:	add	r3, pc, r3
   13a0c:	add	r1, pc, r1
   13a10:	cmn	r4, #1
   13a14:	str	r1, [r3]
   13a18:	beq	13a84 <Mat_VarReadNextInfo@plt+0x2a60>
   13a1c:	ldr	r5, [r0, #8]
   13a20:	mov	r3, sl
   13a24:	mov	r1, r4
   13a28:	mov	r0, r5
   13a2c:	bl	131ac <Mat_VarReadNextInfo@plt+0x2188>
   13a30:	ldr	r3, [r7]
   13a34:	sub	r4, r4, r5
   13a38:	sub	r4, r3, r4
   13a3c:	str	r4, [r7]
   13a40:	ldr	r3, [pc, #1120]	; 13ea8 <Mat_VarReadNextInfo@plt+0x2e84>
   13a44:	mvn	r2, #0
   13a48:	add	r3, pc, r3
   13a4c:	mov	r9, r2
   13a50:	mov	r0, r9
   13a54:	str	r2, [r3, #4]
   13a58:	str	r2, [r3, #8]
   13a5c:	add	sp, sp, #52	; 0x34
   13a60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a64:	ldr	r3, [sp, #40]	; 0x28
   13a68:	add	r2, r2, #1
   13a6c:	mov	r9, #1
   13a70:	mov	r0, r9
   13a74:	str	r2, [r7]
   13a78:	str	r1, [r3]
   13a7c:	add	sp, sp, #52	; 0x34
   13a80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a84:	ldr	r3, [r0, #8]
   13a88:	cmn	r3, #1
   13a8c:	strne	r3, [r7]
   13a90:	b	13a40 <Mat_VarReadNextInfo@plt+0x2a1c>
   13a94:	ldr	r3, [pc, #1040]	; 13eac <Mat_VarReadNextInfo@plt+0x2e88>
   13a98:	ldr	r5, [pc, r3]
   13a9c:	ldrb	r4, [r5]
   13aa0:	ldr	fp, [pc, #1032]	; 13eb0 <Mat_VarReadNextInfo@plt+0x2e8c>
   13aa4:	add	r6, r5, #1
   13aa8:	add	fp, pc, fp
   13aac:	cmp	r4, #58	; 0x3a
   13ab0:	str	r6, [fp]
   13ab4:	mov	r9, r4
   13ab8:	beq	13b24 <Mat_VarReadNextInfo@plt+0x2b00>
   13abc:	cmp	r4, #45	; 0x2d
   13ac0:	beq	13c10 <Mat_VarReadNextInfo@plt+0x2bec>
   13ac4:	mov	r1, r4
   13ac8:	ldr	r0, [sp, #28]
   13acc:	bl	10f28 <strchr@plt>
   13ad0:	cmp	r0, #0
   13ad4:	beq	13b24 <Mat_VarReadNextInfo@plt+0x2b00>
   13ad8:	ldr	r3, [sp, #36]	; 0x24
   13adc:	adds	r3, r3, #0
   13ae0:	movne	r3, #1
   13ae4:	cmp	r4, #87	; 0x57
   13ae8:	movne	r3, #0
   13aec:	cmp	r3, #0
   13af0:	beq	13bb0 <Mat_VarReadNextInfo@plt+0x2b8c>
   13af4:	ldrb	r3, [r0, #1]
   13af8:	cmp	r3, #59	; 0x3b
   13afc:	movne	r9, #87	; 0x57
   13b00:	beq	13c68 <Mat_VarReadNextInfo@plt+0x2c44>
   13b04:	cmp	r3, #58	; 0x3a
   13b08:	beq	13c24 <Mat_VarReadNextInfo@plt+0x2c00>
   13b0c:	ldrb	r3, [r5, #1]
   13b10:	cmp	r3, #0
   13b14:	ldreq	r3, [r7]
   13b18:	addeq	r3, r3, #1
   13b1c:	streq	r3, [r7]
   13b20:	b	139e8 <Mat_VarReadNextInfo@plt+0x29c4>
   13b24:	ldrb	r3, [r5, #1]
   13b28:	cmp	r3, #0
   13b2c:	ldreq	r3, [r7]
   13b30:	addeq	r3, r3, #1
   13b34:	streq	r3, [r7]
   13b38:	ldr	r3, [pc, #884]	; 13eb4 <Mat_VarReadNextInfo@plt+0x2e90>
   13b3c:	ldr	r2, [sp, #32]
   13b40:	ldr	r3, [r2, r3]
   13b44:	ldr	r3, [r3]
   13b48:	cmp	r3, #0
   13b4c:	beq	13b80 <Mat_VarReadNextInfo@plt+0x2b5c>
   13b50:	ldr	r3, [sp, #28]
   13b54:	ldrb	r3, [r3]
   13b58:	cmp	r3, #58	; 0x3a
   13b5c:	beq	13b80 <Mat_VarReadNextInfo@plt+0x2b5c>
   13b60:	ldr	r3, [sp, #44]	; 0x2c
   13b64:	cmp	r3, #0
   13b68:	beq	13df0 <Mat_VarReadNextInfo@plt+0x2dcc>
   13b6c:	ldr	r0, [pc, #836]	; 13eb8 <Mat_VarReadNextInfo@plt+0x2e94>
   13b70:	add	r0, pc, r0
   13b74:	add	r0, r0, #140	; 0x8c
   13b78:	mov	r1, r9
   13b7c:	bl	10f34 <warnx@plt>
   13b80:	ldr	r3, [pc, #820]	; 13ebc <Mat_VarReadNextInfo@plt+0x2e98>
   13b84:	ldr	r2, [sp, #32]
   13b88:	ldr	r3, [r2, r3]
   13b8c:	str	r9, [r3]
   13b90:	mov	r9, #63	; 0x3f
   13b94:	b	139e8 <Mat_VarReadNextInfo@plt+0x29c4>
   13b98:	mov	r1, #45	; 0x2d
   13b9c:	ldr	r0, [sp, #28]
   13ba0:	bl	10f28 <strchr@plt>
   13ba4:	cmp	r0, #0
   13ba8:	beq	139e4 <Mat_VarReadNextInfo@plt+0x29c0>
   13bac:	mov	r9, #45	; 0x2d
   13bb0:	ldrb	r3, [r0, #1]
   13bb4:	b	13b04 <Mat_VarReadNextInfo@plt+0x2ae0>
   13bb8:	ldrb	r0, [r1, #2]
   13bbc:	cmp	r0, #0
   13bc0:	beq	13e10 <Mat_VarReadNextInfo@plt+0x2dec>
   13bc4:	ldr	r2, [sp, #36]	; 0x24
   13bc8:	cmp	r2, #0
   13bcc:	beq	13c08 <Mat_VarReadNextInfo@plt+0x2be4>
   13bd0:	ldr	r3, [r7]
   13bd4:	ldr	r3, [sl, r3, lsl #2]
   13bd8:	cmp	r5, r3
   13bdc:	beq	13aa0 <Mat_VarReadNextInfo@plt+0x2a7c>
   13be0:	ldr	r2, [pc, #728]	; 13ec0 <Mat_VarReadNextInfo@plt+0x2e9c>
   13be4:	ldr	r3, [pc, #728]	; 13ec4 <Mat_VarReadNextInfo@plt+0x2ea0>
   13be8:	add	r2, pc, r2
   13bec:	add	r3, pc, r3
   13bf0:	add	r5, r5, #1
   13bf4:	str	r5, [r2]
   13bf8:	mov	r2, #1
   13bfc:	str	r2, [r3]
   13c00:	mov	r0, #0
   13c04:	b	13954 <Mat_VarReadNextInfo@plt+0x2930>
   13c08:	add	r6, r1, #2
   13c0c:	str	r6, [r3]
   13c10:	ldrb	r3, [r5, #1]
   13c14:	cmp	r3, #0
   13c18:	beq	13b98 <Mat_VarReadNextInfo@plt+0x2b74>
   13c1c:	mov	r9, #45	; 0x2d
   13c20:	b	13b38 <Mat_VarReadNextInfo@plt+0x2b14>
   13c24:	ldr	r2, [sp, #40]	; 0x28
   13c28:	mov	r3, #0
   13c2c:	str	r3, [r2]
   13c30:	ldrb	r3, [r5, #1]
   13c34:	cmp	r3, #0
   13c38:	beq	13d00 <Mat_VarReadNextInfo@plt+0x2cdc>
   13c3c:	ldr	r3, [r7]
   13c40:	str	r6, [r2]
   13c44:	ldr	r2, [pc, #636]	; 13ec8 <Mat_VarReadNextInfo@plt+0x2ea4>
   13c48:	add	r3, r3, #1
   13c4c:	add	r2, pc, r2
   13c50:	ldr	r1, [pc, #628]	; 13ecc <Mat_VarReadNextInfo@plt+0x2ea8>
   13c54:	str	r3, [r7]
   13c58:	mov	r3, r2
   13c5c:	add	r1, pc, r1
   13c60:	str	r1, [r3]
   13c64:	b	139e8 <Mat_VarReadNextInfo@plt+0x29c4>
   13c68:	ldrb	r3, [r5, #1]
   13c6c:	cmp	r3, #0
   13c70:	bne	13da4 <Mat_VarReadNextInfo@plt+0x2d80>
   13c74:	ldr	r3, [r7]
   13c78:	ldr	r2, [sp, #8]
   13c7c:	add	r3, r3, #1
   13c80:	cmp	r2, r3
   13c84:	str	r3, [r7]
   13c88:	bgt	13d9c <Mat_VarReadNextInfo@plt+0x2d78>
   13c8c:	ldr	r2, [pc, #572]	; 13ed0 <Mat_VarReadNextInfo@plt+0x2eac>
   13c90:	ldr	r3, [pc, #540]	; 13eb4 <Mat_VarReadNextInfo@plt+0x2e90>
   13c94:	add	r2, pc, r2
   13c98:	str	r2, [fp]
   13c9c:	ldr	r2, [sp, #32]
   13ca0:	ldr	r3, [r2, r3]
   13ca4:	ldr	r3, [r3]
   13ca8:	cmp	r3, #0
   13cac:	beq	13cd4 <Mat_VarReadNextInfo@plt+0x2cb0>
   13cb0:	ldr	r3, [sp, #28]
   13cb4:	ldrb	r3, [r3]
   13cb8:	cmp	r3, #58	; 0x3a
   13cbc:	beq	13cd4 <Mat_VarReadNextInfo@plt+0x2cb0>
   13cc0:	ldr	r0, [pc, #524]	; 13ed4 <Mat_VarReadNextInfo@plt+0x2eb0>
   13cc4:	mov	r1, #87	; 0x57
   13cc8:	add	r0, pc, r0
   13ccc:	add	r0, r0, #188	; 0xbc
   13cd0:	bl	10f34 <warnx@plt>
   13cd4:	ldr	r3, [pc, #480]	; 13ebc <Mat_VarReadNextInfo@plt+0x2e98>
   13cd8:	ldr	r1, [sp, #32]
   13cdc:	mov	r2, #87	; 0x57
   13ce0:	ldr	r3, [r1, r3]
   13ce4:	str	r2, [r3]
   13ce8:	ldr	r3, [sp, #28]
   13cec:	ldrb	r3, [r3]
   13cf0:	cmp	r3, #58	; 0x3a
   13cf4:	beq	13d94 <Mat_VarReadNextInfo@plt+0x2d70>
   13cf8:	mov	r9, #63	; 0x3f
   13cfc:	b	139e8 <Mat_VarReadNextInfo@plt+0x29c4>
   13d00:	ldrb	r3, [r0, #2]
   13d04:	cmp	r3, #58	; 0x3a
   13d08:	ldr	r3, [r7]
   13d0c:	beq	13c44 <Mat_VarReadNextInfo@plt+0x2c20>
   13d10:	ldr	r2, [sp, #8]
   13d14:	add	r3, r3, #1
   13d18:	cmp	r2, r3
   13d1c:	str	r3, [r7]
   13d20:	bgt	13e00 <Mat_VarReadNextInfo@plt+0x2ddc>
   13d24:	ldr	r2, [pc, #428]	; 13ed8 <Mat_VarReadNextInfo@plt+0x2eb4>
   13d28:	ldr	r1, [pc, #428]	; 13edc <Mat_VarReadNextInfo@plt+0x2eb8>
   13d2c:	add	r2, pc, r2
   13d30:	add	r1, pc, r1
   13d34:	str	r1, [r2]
   13d38:	ldr	r3, [pc, #372]	; 13eb4 <Mat_VarReadNextInfo@plt+0x2e90>
   13d3c:	ldr	r2, [sp, #32]
   13d40:	ldr	r3, [r2, r3]
   13d44:	ldr	r3, [r3]
   13d48:	cmp	r3, #0
   13d4c:	beq	13d74 <Mat_VarReadNextInfo@plt+0x2d50>
   13d50:	ldr	r3, [sp, #28]
   13d54:	ldrb	r3, [r3]
   13d58:	cmp	r3, #58	; 0x3a
   13d5c:	beq	13d74 <Mat_VarReadNextInfo@plt+0x2d50>
   13d60:	ldr	r0, [pc, #376]	; 13ee0 <Mat_VarReadNextInfo@plt+0x2ebc>
   13d64:	mov	r1, r9
   13d68:	add	r0, pc, r0
   13d6c:	add	r0, r0, #188	; 0xbc
   13d70:	bl	10f34 <warnx@plt>
   13d74:	ldr	r3, [pc, #320]	; 13ebc <Mat_VarReadNextInfo@plt+0x2e98>
   13d78:	ldr	r2, [sp, #32]
   13d7c:	ldr	r3, [r2, r3]
   13d80:	str	r9, [r3]
   13d84:	ldr	r3, [sp, #28]
   13d88:	ldrb	r3, [r3]
   13d8c:	cmp	r3, #58	; 0x3a
   13d90:	bne	13cf8 <Mat_VarReadNextInfo@plt+0x2cd4>
   13d94:	mov	r9, #58	; 0x3a
   13d98:	b	139e8 <Mat_VarReadNextInfo@plt+0x29c4>
   13d9c:	ldr	r3, [sl, r3, lsl #2]
   13da0:	str	r3, [fp]
   13da4:	ldr	ip, [pc, #312]	; 13ee4 <Mat_VarReadNextInfo@plt+0x2ec0>
   13da8:	mov	r3, #0
   13dac:	add	ip, pc, ip
   13db0:	mov	lr, #2
   13db4:	str	r3, [sp]
   13db8:	str	r8, [sp, #4]
   13dbc:	ldr	r2, [sp, #36]	; 0x24
   13dc0:	ldr	r3, [sp, #88]	; 0x58
   13dc4:	ldr	r1, [sp, #28]
   13dc8:	mov	r0, sl
   13dcc:	str	lr, [ip]
   13dd0:	bl	13274 <Mat_VarReadNextInfo@plt+0x2250>
   13dd4:	ldr	r3, [pc, #268]	; 13ee8 <Mat_VarReadNextInfo@plt+0x2ec4>
   13dd8:	ldr	r2, [pc, #268]	; 13eec <Mat_VarReadNextInfo@plt+0x2ec8>
   13ddc:	add	r3, pc, r3
   13de0:	add	r2, pc, r2
   13de4:	str	r2, [r3]
   13de8:	mov	r9, r0
   13dec:	b	139e8 <Mat_VarReadNextInfo@plt+0x29c4>
   13df0:	ldr	r0, [pc, #248]	; 13ef0 <Mat_VarReadNextInfo@plt+0x2ecc>
   13df4:	add	r0, pc, r0
   13df8:	add	r0, r0, #164	; 0xa4
   13dfc:	b	13b78 <Mat_VarReadNextInfo@plt+0x2b54>
   13e00:	ldr	r1, [sp, #40]	; 0x28
   13e04:	ldr	r2, [sl, r3, lsl #2]
   13e08:	str	r2, [r1]
   13e0c:	b	13c44 <Mat_VarReadNextInfo@plt+0x2c20>
   13e10:	ldr	r0, [pc, #220]	; 13ef4 <Mat_VarReadNextInfo@plt+0x2ed0>
   13e14:	ldr	r1, [pc, #220]	; 13ef8 <Mat_VarReadNextInfo@plt+0x2ed4>
   13e18:	add	r0, pc, r0
   13e1c:	add	r1, pc, r1
   13e20:	ldr	r4, [r0, #4]
   13e24:	add	r2, r2, #1
   13e28:	cmn	r4, #1
   13e2c:	str	r2, [r7]
   13e30:	str	r1, [r3]
   13e34:	beq	13a40 <Mat_VarReadNextInfo@plt+0x2a1c>
   13e38:	mov	r3, sl
   13e3c:	mov	r1, r4
   13e40:	mov	r0, r9
   13e44:	bl	131ac <Mat_VarReadNextInfo@plt+0x2188>
   13e48:	ldr	r3, [r7]
   13e4c:	sub	r4, r4, r9
   13e50:	sub	r4, r3, r4
   13e54:	str	r4, [r7]
   13e58:	b	13a40 <Mat_VarReadNextInfo@plt+0x2a1c>
   13e5c:	andeq	r1, r1, ip, ror #17
   13e60:	andeq	r1, r0, r8, ror #12
   13e64:	strdeq	r0, [r0], -r4
   13e68:	andeq	r0, r0, r4, ror #1
   13e6c:	strdeq	r0, [r0], -ip
   13e70:	andeq	r1, r1, r8, lsl sl
   13e74:	strdeq	r1, [r1], -r4
   13e78:	andeq	r1, r1, r8, lsl #20
   13e7c:	strdeq	r1, [r1], -r8
   13e80:	andeq	r0, r0, ip, lsr #26
   13e84:	strdeq	r1, [r1], -r4
   13e88:	andeq	r1, r1, r8, ror #17
   13e8c:	andeq	r1, r1, ip, lsl #17
   13e90:	andeq	r1, r1, r4, asr r8
   13e94:	muleq	r0, r0, fp
   13e98:	strdeq	r1, [r1], -r8
   13e9c:	andeq	r1, r1, r0, asr #15
   13ea0:	andeq	r1, r1, ip, asr #15
   13ea4:	andeq	r0, r0, r8, lsl #22
   13ea8:	andeq	r1, r1, r4, ror r7
   13eac:	andeq	r1, r1, ip, lsr r7
   13eb0:	andeq	r1, r1, ip, lsr #14
   13eb4:	andeq	r0, r0, r8, ror #1
   13eb8:	andeq	r1, r0, r4, lsr r1
   13ebc:	strdeq	r0, [r0], -r8
   13ec0:	andeq	r1, r1, ip, ror #11
   13ec4:	ldrdeq	r1, [r1], -r0
   13ec8:	andeq	r1, r1, r8, lsl #11
   13ecc:			; <UNDEFINED> instruction: 0x000008b8
   13ed0:	andeq	r0, r0, r0, lsl #17
   13ed4:	ldrdeq	r0, [r0], -ip
   13ed8:	andeq	r1, r1, r8, lsr #9
   13edc:	andeq	r0, r0, r4, ror #15
   13ee0:	andeq	r0, r0, ip, lsr pc
   13ee4:	andeq	r1, r1, r0, lsl r4
   13ee8:	strdeq	r1, [r1], -r8
   13eec:	andeq	r0, r0, r4, lsr r7
   13ef0:			; <UNDEFINED> instruction: 0x00000eb0
   13ef4:	andeq	r1, r1, r4, lsr #7
   13ef8:	strdeq	r0, [r0], -r8

00013efc <getopt@@Base>:
   13efc:	push	{lr}		; (str lr, [sp, #-4]!)
   13f00:	sub	sp, sp, #12
   13f04:	mov	r3, #0
   13f08:	str	r3, [sp, #4]
   13f0c:	str	r3, [sp]
   13f10:	bl	136f4 <Mat_VarReadNextInfo@plt+0x26d0>
   13f14:	add	sp, sp, #12
   13f18:	pop	{pc}		; (ldr pc, [sp], #4)

00013f1c <getopt_long@@Base>:
   13f1c:	push	{lr}		; (str lr, [sp, #-4]!)
   13f20:	sub	sp, sp, #12
   13f24:	mov	ip, #1
   13f28:	ldr	lr, [sp, #16]
   13f2c:	str	ip, [sp, #4]
   13f30:	str	lr, [sp]
   13f34:	bl	136f4 <Mat_VarReadNextInfo@plt+0x26d0>
   13f38:	add	sp, sp, #12
   13f3c:	pop	{pc}		; (ldr pc, [sp], #4)

00013f40 <getopt_long_only@@Base>:
   13f40:	push	{lr}		; (str lr, [sp, #-4]!)
   13f44:	sub	sp, sp, #12
   13f48:	mov	ip, #5
   13f4c:	ldr	lr, [sp, #16]
   13f50:	str	ip, [sp, #4]
   13f54:	str	lr, [sp]
   13f58:	bl	136f4 <Mat_VarReadNextInfo@plt+0x26d0>
   13f5c:	add	sp, sp, #12
   13f60:	pop	{pc}		; (ldr pc, [sp], #4)
   13f64:	subs	r2, r1, #1
   13f68:	bxeq	lr
   13f6c:	bcc	14144 <getopt_long_only@@Base+0x204>
   13f70:	cmp	r0, r1
   13f74:	bls	14128 <getopt_long_only@@Base+0x1e8>
   13f78:	tst	r1, r2
   13f7c:	beq	14134 <getopt_long_only@@Base+0x1f4>
   13f80:	clz	r3, r0
   13f84:	clz	r2, r1
   13f88:	sub	r3, r2, r3
   13f8c:	rsbs	r3, r3, #31
   13f90:	addne	r3, r3, r3, lsl #1
   13f94:	mov	r2, #0
   13f98:	addne	pc, pc, r3, lsl #2
   13f9c:	nop			; (mov r0, r0)
   13fa0:	cmp	r0, r1, lsl #31
   13fa4:	adc	r2, r2, r2
   13fa8:	subcs	r0, r0, r1, lsl #31
   13fac:	cmp	r0, r1, lsl #30
   13fb0:	adc	r2, r2, r2
   13fb4:	subcs	r0, r0, r1, lsl #30
   13fb8:	cmp	r0, r1, lsl #29
   13fbc:	adc	r2, r2, r2
   13fc0:	subcs	r0, r0, r1, lsl #29
   13fc4:	cmp	r0, r1, lsl #28
   13fc8:	adc	r2, r2, r2
   13fcc:	subcs	r0, r0, r1, lsl #28
   13fd0:	cmp	r0, r1, lsl #27
   13fd4:	adc	r2, r2, r2
   13fd8:	subcs	r0, r0, r1, lsl #27
   13fdc:	cmp	r0, r1, lsl #26
   13fe0:	adc	r2, r2, r2
   13fe4:	subcs	r0, r0, r1, lsl #26
   13fe8:	cmp	r0, r1, lsl #25
   13fec:	adc	r2, r2, r2
   13ff0:	subcs	r0, r0, r1, lsl #25
   13ff4:	cmp	r0, r1, lsl #24
   13ff8:	adc	r2, r2, r2
   13ffc:	subcs	r0, r0, r1, lsl #24
   14000:	cmp	r0, r1, lsl #23
   14004:	adc	r2, r2, r2
   14008:	subcs	r0, r0, r1, lsl #23
   1400c:	cmp	r0, r1, lsl #22
   14010:	adc	r2, r2, r2
   14014:	subcs	r0, r0, r1, lsl #22
   14018:	cmp	r0, r1, lsl #21
   1401c:	adc	r2, r2, r2
   14020:	subcs	r0, r0, r1, lsl #21
   14024:	cmp	r0, r1, lsl #20
   14028:	adc	r2, r2, r2
   1402c:	subcs	r0, r0, r1, lsl #20
   14030:	cmp	r0, r1, lsl #19
   14034:	adc	r2, r2, r2
   14038:	subcs	r0, r0, r1, lsl #19
   1403c:	cmp	r0, r1, lsl #18
   14040:	adc	r2, r2, r2
   14044:	subcs	r0, r0, r1, lsl #18
   14048:	cmp	r0, r1, lsl #17
   1404c:	adc	r2, r2, r2
   14050:	subcs	r0, r0, r1, lsl #17
   14054:	cmp	r0, r1, lsl #16
   14058:	adc	r2, r2, r2
   1405c:	subcs	r0, r0, r1, lsl #16
   14060:	cmp	r0, r1, lsl #15
   14064:	adc	r2, r2, r2
   14068:	subcs	r0, r0, r1, lsl #15
   1406c:	cmp	r0, r1, lsl #14
   14070:	adc	r2, r2, r2
   14074:	subcs	r0, r0, r1, lsl #14
   14078:	cmp	r0, r1, lsl #13
   1407c:	adc	r2, r2, r2
   14080:	subcs	r0, r0, r1, lsl #13
   14084:	cmp	r0, r1, lsl #12
   14088:	adc	r2, r2, r2
   1408c:	subcs	r0, r0, r1, lsl #12
   14090:	cmp	r0, r1, lsl #11
   14094:	adc	r2, r2, r2
   14098:	subcs	r0, r0, r1, lsl #11
   1409c:	cmp	r0, r1, lsl #10
   140a0:	adc	r2, r2, r2
   140a4:	subcs	r0, r0, r1, lsl #10
   140a8:	cmp	r0, r1, lsl #9
   140ac:	adc	r2, r2, r2
   140b0:	subcs	r0, r0, r1, lsl #9
   140b4:	cmp	r0, r1, lsl #8
   140b8:	adc	r2, r2, r2
   140bc:	subcs	r0, r0, r1, lsl #8
   140c0:	cmp	r0, r1, lsl #7
   140c4:	adc	r2, r2, r2
   140c8:	subcs	r0, r0, r1, lsl #7
   140cc:	cmp	r0, r1, lsl #6
   140d0:	adc	r2, r2, r2
   140d4:	subcs	r0, r0, r1, lsl #6
   140d8:	cmp	r0, r1, lsl #5
   140dc:	adc	r2, r2, r2
   140e0:	subcs	r0, r0, r1, lsl #5
   140e4:	cmp	r0, r1, lsl #4
   140e8:	adc	r2, r2, r2
   140ec:	subcs	r0, r0, r1, lsl #4
   140f0:	cmp	r0, r1, lsl #3
   140f4:	adc	r2, r2, r2
   140f8:	subcs	r0, r0, r1, lsl #3
   140fc:	cmp	r0, r1, lsl #2
   14100:	adc	r2, r2, r2
   14104:	subcs	r0, r0, r1, lsl #2
   14108:	cmp	r0, r1, lsl #1
   1410c:	adc	r2, r2, r2
   14110:	subcs	r0, r0, r1, lsl #1
   14114:	cmp	r0, r1
   14118:	adc	r2, r2, r2
   1411c:	subcs	r0, r0, r1
   14120:	mov	r0, r2
   14124:	bx	lr
   14128:	moveq	r0, #1
   1412c:	movne	r0, #0
   14130:	bx	lr
   14134:	clz	r2, r1
   14138:	rsb	r2, r2, #31
   1413c:	lsr	r0, r0, r2
   14140:	bx	lr
   14144:	cmp	r0, #0
   14148:	mvnne	r0, #0
   1414c:	b	143b0 <getopt_long_only@@Base+0x470>
   14150:	cmp	r1, #0
   14154:	beq	14144 <getopt_long_only@@Base+0x204>
   14158:	push	{r0, r1, lr}
   1415c:	bl	13f64 <getopt_long_only@@Base+0x24>
   14160:	pop	{r1, r2, lr}
   14164:	mul	r3, r2, r0
   14168:	sub	r1, r1, r3
   1416c:	bx	lr
   14170:	cmp	r1, #0
   14174:	beq	14380 <getopt_long_only@@Base+0x440>
   14178:	eor	ip, r0, r1
   1417c:	rsbmi	r1, r1, #0
   14180:	subs	r2, r1, #1
   14184:	beq	1434c <getopt_long_only@@Base+0x40c>
   14188:	movs	r3, r0
   1418c:	rsbmi	r3, r0, #0
   14190:	cmp	r3, r1
   14194:	bls	14358 <getopt_long_only@@Base+0x418>
   14198:	tst	r1, r2
   1419c:	beq	14368 <getopt_long_only@@Base+0x428>
   141a0:	clz	r2, r3
   141a4:	clz	r0, r1
   141a8:	sub	r2, r0, r2
   141ac:	rsbs	r2, r2, #31
   141b0:	addne	r2, r2, r2, lsl #1
   141b4:	mov	r0, #0
   141b8:	addne	pc, pc, r2, lsl #2
   141bc:	nop			; (mov r0, r0)
   141c0:	cmp	r3, r1, lsl #31
   141c4:	adc	r0, r0, r0
   141c8:	subcs	r3, r3, r1, lsl #31
   141cc:	cmp	r3, r1, lsl #30
   141d0:	adc	r0, r0, r0
   141d4:	subcs	r3, r3, r1, lsl #30
   141d8:	cmp	r3, r1, lsl #29
   141dc:	adc	r0, r0, r0
   141e0:	subcs	r3, r3, r1, lsl #29
   141e4:	cmp	r3, r1, lsl #28
   141e8:	adc	r0, r0, r0
   141ec:	subcs	r3, r3, r1, lsl #28
   141f0:	cmp	r3, r1, lsl #27
   141f4:	adc	r0, r0, r0
   141f8:	subcs	r3, r3, r1, lsl #27
   141fc:	cmp	r3, r1, lsl #26
   14200:	adc	r0, r0, r0
   14204:	subcs	r3, r3, r1, lsl #26
   14208:	cmp	r3, r1, lsl #25
   1420c:	adc	r0, r0, r0
   14210:	subcs	r3, r3, r1, lsl #25
   14214:	cmp	r3, r1, lsl #24
   14218:	adc	r0, r0, r0
   1421c:	subcs	r3, r3, r1, lsl #24
   14220:	cmp	r3, r1, lsl #23
   14224:	adc	r0, r0, r0
   14228:	subcs	r3, r3, r1, lsl #23
   1422c:	cmp	r3, r1, lsl #22
   14230:	adc	r0, r0, r0
   14234:	subcs	r3, r3, r1, lsl #22
   14238:	cmp	r3, r1, lsl #21
   1423c:	adc	r0, r0, r0
   14240:	subcs	r3, r3, r1, lsl #21
   14244:	cmp	r3, r1, lsl #20
   14248:	adc	r0, r0, r0
   1424c:	subcs	r3, r3, r1, lsl #20
   14250:	cmp	r3, r1, lsl #19
   14254:	adc	r0, r0, r0
   14258:	subcs	r3, r3, r1, lsl #19
   1425c:	cmp	r3, r1, lsl #18
   14260:	adc	r0, r0, r0
   14264:	subcs	r3, r3, r1, lsl #18
   14268:	cmp	r3, r1, lsl #17
   1426c:	adc	r0, r0, r0
   14270:	subcs	r3, r3, r1, lsl #17
   14274:	cmp	r3, r1, lsl #16
   14278:	adc	r0, r0, r0
   1427c:	subcs	r3, r3, r1, lsl #16
   14280:	cmp	r3, r1, lsl #15
   14284:	adc	r0, r0, r0
   14288:	subcs	r3, r3, r1, lsl #15
   1428c:	cmp	r3, r1, lsl #14
   14290:	adc	r0, r0, r0
   14294:	subcs	r3, r3, r1, lsl #14
   14298:	cmp	r3, r1, lsl #13
   1429c:	adc	r0, r0, r0
   142a0:	subcs	r3, r3, r1, lsl #13
   142a4:	cmp	r3, r1, lsl #12
   142a8:	adc	r0, r0, r0
   142ac:	subcs	r3, r3, r1, lsl #12
   142b0:	cmp	r3, r1, lsl #11
   142b4:	adc	r0, r0, r0
   142b8:	subcs	r3, r3, r1, lsl #11
   142bc:	cmp	r3, r1, lsl #10
   142c0:	adc	r0, r0, r0
   142c4:	subcs	r3, r3, r1, lsl #10
   142c8:	cmp	r3, r1, lsl #9
   142cc:	adc	r0, r0, r0
   142d0:	subcs	r3, r3, r1, lsl #9
   142d4:	cmp	r3, r1, lsl #8
   142d8:	adc	r0, r0, r0
   142dc:	subcs	r3, r3, r1, lsl #8
   142e0:	cmp	r3, r1, lsl #7
   142e4:	adc	r0, r0, r0
   142e8:	subcs	r3, r3, r1, lsl #7
   142ec:	cmp	r3, r1, lsl #6
   142f0:	adc	r0, r0, r0
   142f4:	subcs	r3, r3, r1, lsl #6
   142f8:	cmp	r3, r1, lsl #5
   142fc:	adc	r0, r0, r0
   14300:	subcs	r3, r3, r1, lsl #5
   14304:	cmp	r3, r1, lsl #4
   14308:	adc	r0, r0, r0
   1430c:	subcs	r3, r3, r1, lsl #4
   14310:	cmp	r3, r1, lsl #3
   14314:	adc	r0, r0, r0
   14318:	subcs	r3, r3, r1, lsl #3
   1431c:	cmp	r3, r1, lsl #2
   14320:	adc	r0, r0, r0
   14324:	subcs	r3, r3, r1, lsl #2
   14328:	cmp	r3, r1, lsl #1
   1432c:	adc	r0, r0, r0
   14330:	subcs	r3, r3, r1, lsl #1
   14334:	cmp	r3, r1
   14338:	adc	r0, r0, r0
   1433c:	subcs	r3, r3, r1
   14340:	cmp	ip, #0
   14344:	rsbmi	r0, r0, #0
   14348:	bx	lr
   1434c:	teq	ip, r0
   14350:	rsbmi	r0, r0, #0
   14354:	bx	lr
   14358:	movcc	r0, #0
   1435c:	asreq	r0, ip, #31
   14360:	orreq	r0, r0, #1
   14364:	bx	lr
   14368:	clz	r2, r1
   1436c:	rsb	r2, r2, #31
   14370:	cmp	ip, #0
   14374:	lsr	r0, r3, r2
   14378:	rsbmi	r0, r0, #0
   1437c:	bx	lr
   14380:	cmp	r0, #0
   14384:	mvngt	r0, #-2147483648	; 0x80000000
   14388:	movlt	r0, #-2147483648	; 0x80000000
   1438c:	b	143b0 <getopt_long_only@@Base+0x470>
   14390:	cmp	r1, #0
   14394:	beq	14380 <getopt_long_only@@Base+0x440>
   14398:	push	{r0, r1, lr}
   1439c:	bl	14178 <getopt_long_only@@Base+0x238>
   143a0:	pop	{r1, r2, lr}
   143a4:	mul	r3, r2, r0
   143a8:	sub	r1, r1, r3
   143ac:	bx	lr
   143b0:	push	{r1, lr}
   143b4:	mov	r0, #8
   143b8:	bl	10dc0 <raise@plt>
   143bc:	pop	{r1, pc}
   143c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   143c4:	mov	r7, r0
   143c8:	ldr	r6, [pc, #72]	; 14418 <getopt_long_only@@Base+0x4d8>
   143cc:	ldr	r5, [pc, #72]	; 1441c <getopt_long_only@@Base+0x4dc>
   143d0:	add	r6, pc, r6
   143d4:	add	r5, pc, r5
   143d8:	sub	r6, r6, r5
   143dc:	mov	r8, r1
   143e0:	mov	r9, r2
   143e4:	bl	10d88 <Mat_VarGetNumberOfFields@plt-0x20>
   143e8:	asrs	r6, r6, #2
   143ec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   143f0:	mov	r4, #0
   143f4:	add	r4, r4, #1
   143f8:	ldr	r3, [r5], #4
   143fc:	mov	r2, r9
   14400:	mov	r1, r8
   14404:	mov	r0, r7
   14408:	blx	r3
   1440c:	cmp	r6, r4
   14410:	bne	143f4 <getopt_long_only@@Base+0x4b4>
   14414:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14418:	ldrdeq	r0, [r1], -r8
   1441c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   14420:	bx	lr

Disassembly of section .fini:

00014424 <.fini>:
   14424:	push	{r3, lr}
   14428:	pop	{r3, pc}
