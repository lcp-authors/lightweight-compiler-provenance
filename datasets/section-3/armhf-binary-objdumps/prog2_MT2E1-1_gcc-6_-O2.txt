
../repos/prog2/MT2E1-1:     file format elf32-littlearm


Disassembly of section .init:

00010ccc <.init>:
   10ccc:	push	{r3, lr}
   10cd0:	bl	10fc0 <_start@@Base+0x3c>
   10cd4:	pop	{r3, pc}

Disassembly of section .plt:

00010cd8 <calloc@plt-0x14>:
   10cd8:	push	{lr}		; (str lr, [sp, #-4]!)
   10cdc:	ldr	lr, [pc, #4]	; 10ce8 <calloc@plt-0x4>
   10ce0:	add	lr, pc, lr
   10ce4:	ldr	pc, [lr, #8]!
   10ce8:	andeq	r2, r1, r8, lsl r3

00010cec <calloc@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #73728	; 0x12000
   10cf4:	ldr	pc, [ip, #792]!	; 0x318

00010cf8 <raise@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #73728	; 0x12000
   10d00:	ldr	pc, [ip, #784]!	; 0x310

00010d04 <strcmp@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #73728	; 0x12000
   10d0c:	ldr	pc, [ip, #776]!	; 0x308

00010d10 <printf@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #73728	; 0x12000
   10d18:	ldr	pc, [ip, #768]!	; 0x300

00010d1c <__isoc99_fscanf@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #73728	; 0x12000
   10d24:	ldr	pc, [ip, #760]!	; 0x2f8

00010d28 <fopen@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #73728	; 0x12000
   10d30:	ldr	pc, [ip, #752]!	; 0x2f0

00010d34 <free@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #73728	; 0x12000
   10d3c:	ldr	pc, [ip, #744]!	; 0x2e8

00010d40 <memcpy@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #73728	; 0x12000
   10d48:	ldr	pc, [ip, #736]!	; 0x2e0

00010d4c <realloc@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #73728	; 0x12000
   10d54:	ldr	pc, [ip, #728]!	; 0x2d8

00010d58 <strcpy@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #73728	; 0x12000
   10d60:	ldr	pc, [ip, #720]!	; 0x2d0

00010d64 <puts@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #73728	; 0x12000
   10d6c:	ldr	pc, [ip, #712]!	; 0x2c8

00010d70 <malloc@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #73728	; 0x12000
   10d78:	ldr	pc, [ip, #704]!	; 0x2c0

00010d7c <__libc_start_main@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #73728	; 0x12000
   10d84:	ldr	pc, [ip, #696]!	; 0x2b8

00010d88 <__gmon_start__@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #73728	; 0x12000
   10d90:	ldr	pc, [ip, #688]!	; 0x2b0

00010d94 <strlen@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #73728	; 0x12000
   10d9c:	ldr	pc, [ip, #680]!	; 0x2a8

00010da0 <setvbuf@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #73728	; 0x12000
   10da8:	ldr	pc, [ip, #672]!	; 0x2a0

00010dac <putchar@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #73728	; 0x12000
   10db4:	ldr	pc, [ip, #664]!	; 0x298

00010db8 <fclose@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #73728	; 0x12000
   10dc0:	ldr	pc, [ip, #656]!	; 0x290

00010dc4 <abort@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #73728	; 0x12000
   10dcc:	ldr	pc, [ip, #648]!	; 0x288

Disassembly of section .text:

00010dd0 <main@@Base>:
   10dd0:	push	{r4, r5, r6, r7, r8, r9, lr}
   10dd4:	mov	r3, #0
   10dd8:	ldr	r9, [pc, #360]	; 10f48 <main@@Base+0x178>
   10ddc:	ldr	r2, [pc, #360]	; 10f4c <main@@Base+0x17c>
   10de0:	add	r9, pc, r9
   10de4:	sub	sp, sp, #508	; 0x1fc
   10de8:	ldr	r0, [r9, r2]
   10dec:	mov	r1, r3
   10df0:	mov	r2, #2
   10df4:	ldr	r4, [pc, #340]	; 10f50 <main@@Base+0x180>
   10df8:	ldr	r0, [r0]
   10dfc:	bl	10da0 <setvbuf@plt>
   10e00:	ldr	r0, [pc, #332]	; 10f54 <main@@Base+0x184>
   10e04:	add	r4, pc, r4
   10e08:	mov	r1, r4
   10e0c:	add	r0, pc, r0
   10e10:	bl	10d28 <fopen@plt>
   10e14:	mov	r1, r4
   10e18:	ldr	r6, [pc, #312]	; 10f58 <main@@Base+0x188>
   10e1c:	add	r4, sp, #4
   10e20:	add	r6, pc, r6
   10e24:	mov	r8, r0
   10e28:	ldr	r0, [pc, #300]	; 10f5c <main@@Base+0x18c>
   10e2c:	add	r0, pc, r0
   10e30:	bl	10d28 <fopen@plt>
   10e34:	mov	r7, r0
   10e38:	ldr	r0, [pc, #288]	; 10f60 <main@@Base+0x190>
   10e3c:	add	r0, pc, r0
   10e40:	bl	10d64 <puts@plt>
   10e44:	bl	11170 <avl_nova@@Base>
   10e48:	mov	r5, r0
   10e4c:	b	10e54 <main@@Base+0x84>
   10e50:	bl	11474 <avl_insere@@Base>
   10e54:	mov	r1, r6
   10e58:	mov	r2, r4
   10e5c:	mov	r0, r8
   10e60:	bl	10d1c <__isoc99_fscanf@plt>
   10e64:	mov	r1, r4
   10e68:	cmp	r0, #1
   10e6c:	mov	r0, r5
   10e70:	beq	10e50 <main@@Base+0x80>
   10e74:	ldr	r0, [pc, #232]	; 10f64 <main@@Base+0x194>
   10e78:	add	r0, pc, r0
   10e7c:	bl	10d10 <printf@plt>
   10e80:	mov	r0, r5
   10e84:	bl	11784 <avl_imprime@@Base>
   10e88:	ldr	r0, [pc, #216]	; 10f68 <main@@Base+0x198>
   10e8c:	add	r0, pc, r0
   10e90:	bl	10d10 <printf@plt>
   10e94:	ldr	r1, [pc, #208]	; 10f6c <main@@Base+0x19c>
   10e98:	mov	r0, r5
   10e9c:	add	r1, pc, r1
   10ea0:	bl	110ac <avl_max_subarvore@@Base>
   10ea4:	mov	r0, r5
   10ea8:	bl	116d8 <avl_apaga@@Base>
   10eac:	ldr	r0, [pc, #188]	; 10f70 <main@@Base+0x1a0>
   10eb0:	add	r0, pc, r0
   10eb4:	bl	10d64 <puts@plt>
   10eb8:	ldr	r3, [pc, #180]	; 10f74 <main@@Base+0x1a4>
   10ebc:	ldr	r0, [pc, #180]	; 10f78 <main@@Base+0x1a8>
   10ec0:	ldr	r1, [r9, r3]
   10ec4:	bl	117a4 <tabela_nova@@Base>
   10ec8:	ldr	r9, [pc, #172]	; 10f7c <main@@Base+0x1ac>
   10ecc:	add	r9, pc, r9
   10ed0:	mov	r5, r0
   10ed4:	b	10edc <main@@Base+0x10c>
   10ed8:	bl	11874 <tabela_adiciona@@Base>
   10edc:	mov	r2, r4
   10ee0:	mov	r1, r6
   10ee4:	mov	r0, r7
   10ee8:	bl	10d1c <__isoc99_fscanf@plt>
   10eec:	mov	r2, r9
   10ef0:	mov	r1, r4
   10ef4:	cmp	r0, #1
   10ef8:	mov	r0, r5
   10efc:	beq	10ed8 <main@@Base+0x108>
   10f00:	bl	11c74 <mostraTabela@@Base>
   10f04:	ldr	r1, [pc, #116]	; 10f80 <main@@Base+0x1b0>
   10f08:	mov	r0, r5
   10f0c:	bl	110f8 <tabela_copia@@Base>
   10f10:	subs	r4, r0, #0
   10f14:	beq	10f1c <main@@Base+0x14c>
   10f18:	bl	11c74 <mostraTabela@@Base>
   10f1c:	mov	r0, r5
   10f20:	bl	11814 <tabela_apaga@@Base>
   10f24:	mov	r0, r4
   10f28:	bl	11814 <tabela_apaga@@Base>
   10f2c:	mov	r0, r8
   10f30:	bl	10db8 <fclose@plt>
   10f34:	mov	r0, r7
   10f38:	bl	10db8 <fclose@plt>
   10f3c:	mov	r0, #0
   10f40:	add	sp, sp, #508	; 0x1fc
   10f44:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10f48:	andeq	r2, r1, r8, lsl r2
   10f4c:	andeq	r0, r0, r0, rrx
   10f50:			; <UNDEFINED> instruction: 0x000011b0
   10f54:	andeq	r1, r0, ip, lsr #3
   10f58:	muleq	r0, r0, r1
   10f5c:	muleq	r0, r8, r1
   10f60:	muleq	r0, r4, r1
   10f64:	andeq	r1, r0, ip, ror #2
   10f68:	andeq	r1, r0, ip, ror #2
   10f6c:	andeq	r1, r0, r4, ror r1
   10f70:	andeq	r1, r0, r4, ror #2
   10f74:	andeq	r0, r0, r8, asr r0
   10f78:	andeq	r0, r0, r9, asr r2
   10f7c:	andeq	r1, r0, r4, lsl r1
   10f80:	andeq	r0, r0, fp, ror #4

00010f84 <_start@@Base>:
   10f84:	mov	fp, #0
   10f88:	mov	lr, #0
   10f8c:	pop	{r1}		; (ldr r1, [sp], #4)
   10f90:	mov	r2, sp
   10f94:	push	{r2}		; (str r2, [sp, #-4]!)
   10f98:	push	{r0}		; (str r0, [sp, #-4]!)
   10f9c:	ldr	ip, [pc, #16]	; 10fb4 <_start@@Base+0x30>
   10fa0:	push	{ip}		; (str ip, [sp, #-4]!)
   10fa4:	ldr	r0, [pc, #12]	; 10fb8 <_start@@Base+0x34>
   10fa8:	ldr	r3, [pc, #12]	; 10fbc <_start@@Base+0x38>
   10fac:	bl	10d7c <__libc_start_main@plt>
   10fb0:	bl	10dc4 <abort@plt>
   10fb4:	andeq	r1, r1, r8, lsr #31
   10fb8:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   10fbc:	andeq	r1, r1, r8, asr #30
   10fc0:	ldr	r3, [pc, #20]	; 10fdc <_start@@Base+0x58>
   10fc4:	ldr	r2, [pc, #20]	; 10fe0 <_start@@Base+0x5c>
   10fc8:	add	r3, pc, r3
   10fcc:	ldr	r2, [r3, r2]
   10fd0:	cmp	r2, #0
   10fd4:	bxeq	lr
   10fd8:	b	10d88 <__gmon_start__@plt>
   10fdc:	andeq	r2, r1, r0, lsr r0
   10fe0:	andeq	r0, r0, ip, asr r0
   10fe4:	ldr	r3, [pc, #28]	; 11008 <_start@@Base+0x84>
   10fe8:	ldr	r0, [pc, #28]	; 1100c <_start@@Base+0x88>
   10fec:	sub	r3, r3, r0
   10ff0:	cmp	r3, #6
   10ff4:	bxls	lr
   10ff8:	ldr	r3, [pc, #16]	; 11010 <_start@@Base+0x8c>
   10ffc:	cmp	r3, #0
   11000:	bxeq	lr
   11004:	bx	r3
   11008:	andeq	r3, r2, pc, rrx
   1100c:	andeq	r3, r2, ip, rrx
   11010:	andeq	r0, r0, r0
   11014:	ldr	r1, [pc, #36]	; 11040 <_start@@Base+0xbc>
   11018:	ldr	r0, [pc, #36]	; 11044 <_start@@Base+0xc0>
   1101c:	sub	r1, r1, r0
   11020:	asr	r1, r1, #2
   11024:	add	r1, r1, r1, lsr #31
   11028:	asrs	r1, r1, #1
   1102c:	bxeq	lr
   11030:	ldr	r3, [pc, #16]	; 11048 <_start@@Base+0xc4>
   11034:	cmp	r3, #0
   11038:	bxeq	lr
   1103c:	bx	r3
   11040:	andeq	r3, r2, ip, rrx
   11044:	andeq	r3, r2, ip, rrx
   11048:	andeq	r0, r0, r0
   1104c:	push	{r4, lr}
   11050:	ldr	r4, [pc, #24]	; 11070 <_start@@Base+0xec>
   11054:	ldrb	r3, [r4]
   11058:	cmp	r3, #0
   1105c:	popne	{r4, pc}
   11060:	bl	10fe4 <_start@@Base+0x60>
   11064:	mov	r3, #1
   11068:	strb	r3, [r4]
   1106c:	pop	{r4, pc}
   11070:	andeq	r3, r2, ip, rrx
   11074:	ldr	r0, [pc, #40]	; 110a4 <_start@@Base+0x120>
   11078:	ldr	r3, [r0]
   1107c:	cmp	r3, #0
   11080:	bne	11088 <_start@@Base+0x104>
   11084:	b	11014 <_start@@Base+0x90>
   11088:	ldr	r3, [pc, #24]	; 110a8 <_start@@Base+0x124>
   1108c:	cmp	r3, #0
   11090:	beq	11084 <_start@@Base+0x100>
   11094:	push	{r4, lr}
   11098:	blx	r3
   1109c:	pop	{r4, lr}
   110a0:	b	11014 <_start@@Base+0x90>
   110a4:	andeq	r2, r2, r4, lsl pc
   110a8:	andeq	r0, r0, r0

000110ac <avl_max_subarvore@@Base>:
   110ac:	push	{r4, r5, r6, lr}
   110b0:	mov	r5, r0
   110b4:	mov	r6, r1
   110b8:	bl	11170 <avl_nova@@Base>
   110bc:	mov	r1, r6
   110c0:	mov	r4, r0
   110c4:	mov	r0, r5
   110c8:	bl	11348 <avl_pesquisa@@Base>
   110cc:	str	r0, [r4]
   110d0:	mov	r0, r4
   110d4:	bl	114f8 <avl_max@@Base>
   110d8:	mov	r1, r0
   110dc:	ldr	r0, [pc, #16]	; 110f4 <avl_max_subarvore@@Base+0x48>
   110e0:	add	r0, pc, r0
   110e4:	bl	10d10 <printf@plt>
   110e8:	mov	r0, r4
   110ec:	pop	{r4, r5, r6, lr}
   110f0:	b	10d34 <free@plt>
   110f4:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>

000110f8 <tabela_copia@@Base>:
   110f8:	push	{r4, r5, r6, r7, lr}
   110fc:	mov	r4, r0
   11100:	sub	sp, sp, #12
   11104:	mov	r0, r1
   11108:	ldr	r1, [r4]
   1110c:	bl	117a4 <tabela_nova@@Base>
   11110:	add	r1, sp, #4
   11114:	mov	r6, r0
   11118:	mov	r0, r4
   1111c:	bl	11b64 <tabela_elementos@@Base>
   11120:	ldr	r3, [sp, #4]
   11124:	cmp	r3, #0
   11128:	mov	r7, r0
   1112c:	ble	1115c <tabela_copia@@Base+0x64>
   11130:	mov	r4, r0
   11134:	mov	r5, #0
   11138:	add	r2, r4, #50	; 0x32
   1113c:	mov	r1, r4
   11140:	mov	r0, r6
   11144:	bl	11874 <tabela_adiciona@@Base>
   11148:	ldr	r3, [sp, #4]
   1114c:	add	r5, r5, #1
   11150:	cmp	r3, r5
   11154:	add	r4, r4, #150	; 0x96
   11158:	bgt	11138 <tabela_copia@@Base+0x40>
   1115c:	mov	r0, r7
   11160:	bl	10d34 <free@plt>
   11164:	mov	r0, r6
   11168:	add	sp, sp, #12
   1116c:	pop	{r4, r5, r6, r7, pc}

00011170 <avl_nova@@Base>:
   11170:	push	{r4, lr}
   11174:	mov	r0, #4
   11178:	bl	10d70 <malloc@plt>
   1117c:	cmp	r0, #0
   11180:	movne	r3, #0
   11184:	strne	r3, [r0]
   11188:	pop	{r4, pc}

0001118c <avl_altura@@Base>:
   1118c:	cmp	r0, #0
   11190:	ldrne	r0, [r0, #12]
   11194:	mvneq	r0, #0
   11198:	bx	lr

0001119c <max@@Base>:
   1119c:	cmp	r1, r0
   111a0:	movge	r0, r1
   111a4:	bx	lr

000111a8 <avl_novo_no@@Base>:
   111a8:	push	{r4, r5, r6, lr}
   111ac:	mov	r5, r0
   111b0:	mov	r0, #16
   111b4:	bl	10d70 <malloc@plt>
   111b8:	mov	r4, r0
   111bc:	mov	r0, r5
   111c0:	bl	10d94 <strlen@plt>
   111c4:	add	r6, r0, #1
   111c8:	mov	r0, r6
   111cc:	bl	10d70 <malloc@plt>
   111d0:	mov	r2, r6
   111d4:	mov	r1, r5
   111d8:	str	r0, [r4]
   111dc:	bl	10d40 <memcpy@plt>
   111e0:	mov	r3, #0
   111e4:	str	r3, [r4, #4]
   111e8:	str	r3, [r4, #8]
   111ec:	str	r3, [r4, #12]
   111f0:	mov	r0, r4
   111f4:	pop	{r4, r5, r6, pc}

000111f8 <roda_direita@@Base>:
   111f8:	push	{r4, r5, r6, lr}
   111fc:	mov	r5, r0
   11200:	ldr	r4, [r0, #4]
   11204:	ldr	r3, [r4, #8]
   11208:	str	r0, [r4, #8]
   1120c:	str	r3, [r5, #4]
   11210:	mov	r0, r3
   11214:	bl	1118c <avl_altura@@Base>
   11218:	mov	r6, r0
   1121c:	ldr	r0, [r5, #8]
   11220:	bl	1118c <avl_altura@@Base>
   11224:	mov	r1, r0
   11228:	mov	r0, r6
   1122c:	bl	1119c <max@@Base>
   11230:	add	r0, r0, #1
   11234:	str	r0, [r5, #12]
   11238:	ldr	r0, [r4, #4]
   1123c:	bl	1118c <avl_altura@@Base>
   11240:	mov	r5, r0
   11244:	ldr	r0, [r4, #8]
   11248:	bl	1118c <avl_altura@@Base>
   1124c:	mov	r1, r0
   11250:	mov	r0, r5
   11254:	bl	1119c <max@@Base>
   11258:	add	r0, r0, #1
   1125c:	str	r0, [r4, #12]
   11260:	mov	r0, r4
   11264:	pop	{r4, r5, r6, pc}

00011268 <roda_esquerda@@Base>:
   11268:	push	{r4, r5, r6, lr}
   1126c:	mov	r5, r0
   11270:	ldr	r4, [r0, #8]
   11274:	ldr	r3, [r4, #4]
   11278:	str	r0, [r4, #4]
   1127c:	str	r3, [r0, #8]
   11280:	ldr	r0, [r0, #4]
   11284:	bl	1118c <avl_altura@@Base>
   11288:	mov	r6, r0
   1128c:	ldr	r0, [r5, #8]
   11290:	bl	1118c <avl_altura@@Base>
   11294:	mov	r1, r0
   11298:	mov	r0, r6
   1129c:	bl	1119c <max@@Base>
   112a0:	add	r0, r0, #1
   112a4:	str	r0, [r5, #12]
   112a8:	ldr	r0, [r4, #4]
   112ac:	bl	1118c <avl_altura@@Base>
   112b0:	mov	r5, r0
   112b4:	ldr	r0, [r4, #8]
   112b8:	bl	1118c <avl_altura@@Base>
   112bc:	mov	r1, r0
   112c0:	mov	r0, r5
   112c4:	bl	1119c <max@@Base>
   112c8:	add	r0, r0, #1
   112cc:	str	r0, [r4, #12]
   112d0:	mov	r0, r4
   112d4:	pop	{r4, r5, r6, pc}

000112d8 <calc_balanceamento@@Base>:
   112d8:	push	{r4, r5, r6, lr}
   112dc:	subs	r4, r0, #0
   112e0:	beq	11300 <calc_balanceamento@@Base+0x28>
   112e4:	ldr	r0, [r4, #8]
   112e8:	bl	1118c <avl_altura@@Base>
   112ec:	mov	r5, r0
   112f0:	ldr	r0, [r4, #4]
   112f4:	bl	1118c <avl_altura@@Base>
   112f8:	sub	r0, r5, r0
   112fc:	pop	{r4, r5, r6, pc}
   11300:	mov	r0, r4
   11304:	pop	{r4, r5, r6, pc}

00011308 <avl_pesquisa_impl@@Base>:
   11308:	push	{r4, r5, r6, lr}
   1130c:	subs	r4, r0, #0
   11310:	beq	11340 <avl_pesquisa_impl@@Base+0x38>
   11314:	mov	r5, r1
   11318:	ldr	r1, [r4]
   1131c:	mov	r0, r5
   11320:	bl	10d04 <strcmp@plt>
   11324:	cmp	r0, #0
   11328:	ldrlt	r4, [r4, #4]
   1132c:	blt	11338 <avl_pesquisa_impl@@Base+0x30>
   11330:	beq	11340 <avl_pesquisa_impl@@Base+0x38>
   11334:	ldr	r4, [r4, #8]
   11338:	cmp	r4, #0
   1133c:	bne	11318 <avl_pesquisa_impl@@Base+0x10>
   11340:	mov	r0, r4
   11344:	pop	{r4, r5, r6, pc}

00011348 <avl_pesquisa@@Base>:
   11348:	cmp	r1, #0
   1134c:	cmpne	r0, #0
   11350:	beq	1135c <avl_pesquisa@@Base+0x14>
   11354:	ldr	r0, [r0]
   11358:	b	11308 <avl_pesquisa_impl@@Base>
   1135c:	mov	r0, #0
   11360:	bx	lr

00011364 <avl_insere_impl@@Base>:
   11364:	push	{r4, r5, r6, lr}
   11368:	subs	r4, r0, #0
   1136c:	beq	11468 <avl_insere_impl@@Base+0x104>
   11370:	mov	r5, r1
   11374:	mov	r0, r5
   11378:	ldr	r1, [r4]
   1137c:	bl	10d04 <strcmp@plt>
   11380:	cmp	r0, #0
   11384:	blt	1142c <avl_insere_impl@@Base+0xc8>
   11388:	beq	113fc <avl_insere_impl@@Base+0x98>
   1138c:	mov	r1, r5
   11390:	ldr	r0, [r4, #8]
   11394:	bl	11364 <avl_insere_impl@@Base>
   11398:	ldr	r3, [r4, #4]
   1139c:	str	r0, [r4, #8]
   113a0:	mov	r0, r3
   113a4:	bl	1118c <avl_altura@@Base>
   113a8:	mov	r5, r0
   113ac:	ldr	r0, [r4, #8]
   113b0:	bl	1118c <avl_altura@@Base>
   113b4:	mov	r1, r0
   113b8:	mov	r0, r5
   113bc:	bl	1119c <max@@Base>
   113c0:	add	r0, r0, #1
   113c4:	str	r0, [r4, #12]
   113c8:	mov	r0, r4
   113cc:	bl	112d8 <calc_balanceamento@@Base>
   113d0:	cmp	r0, #1
   113d4:	ble	113f4 <avl_insere_impl@@Base+0x90>
   113d8:	ldr	r0, [r4, #8]
   113dc:	bl	112d8 <calc_balanceamento@@Base>
   113e0:	cmp	r0, #0
   113e4:	blt	11444 <avl_insere_impl@@Base+0xe0>
   113e8:	mov	r0, r4
   113ec:	pop	{r4, r5, r6, lr}
   113f0:	b	11268 <roda_esquerda@@Base>
   113f4:	cmn	r0, #1
   113f8:	blt	11404 <avl_insere_impl@@Base+0xa0>
   113fc:	mov	r0, r4
   11400:	pop	{r4, r5, r6, pc}
   11404:	ldr	r0, [r4, #4]
   11408:	bl	112d8 <calc_balanceamento@@Base>
   1140c:	cmp	r0, #0
   11410:	ble	1145c <avl_insere_impl@@Base+0xf8>
   11414:	ldr	r0, [r4, #4]
   11418:	bl	11268 <roda_esquerda@@Base>
   1141c:	str	r0, [r4, #4]
   11420:	mov	r0, r4
   11424:	pop	{r4, r5, r6, lr}
   11428:	b	111f8 <roda_direita@@Base>
   1142c:	mov	r1, r5
   11430:	ldr	r0, [r4, #4]
   11434:	bl	11364 <avl_insere_impl@@Base>
   11438:	mov	r3, r0
   1143c:	str	r0, [r4, #4]
   11440:	b	113a0 <avl_insere_impl@@Base+0x3c>
   11444:	ldr	r0, [r4, #8]
   11448:	bl	111f8 <roda_direita@@Base>
   1144c:	str	r0, [r4, #8]
   11450:	mov	r0, r4
   11454:	pop	{r4, r5, r6, lr}
   11458:	b	11268 <roda_esquerda@@Base>
   1145c:	mov	r0, r4
   11460:	pop	{r4, r5, r6, lr}
   11464:	b	111f8 <roda_direita@@Base>
   11468:	mov	r0, r1
   1146c:	pop	{r4, r5, r6, lr}
   11470:	b	111a8 <avl_novo_no@@Base>

00011474 <avl_insere@@Base>:
   11474:	cmp	r1, #0
   11478:	cmpne	r0, #0
   1147c:	push	{r4, r5, r6, lr}
   11480:	moveq	r5, #1
   11484:	movne	r5, #0
   11488:	beq	114a4 <avl_insere@@Base+0x30>
   1148c:	mov	r4, r0
   11490:	ldr	r0, [r0]
   11494:	bl	11364 <avl_insere_impl@@Base>
   11498:	str	r0, [r4]
   1149c:	mov	r0, r5
   114a0:	pop	{r4, r5, r6, pc}
   114a4:	mvn	r5, #0
   114a8:	b	1149c <avl_insere@@Base+0x28>

000114ac <avl_no_valormin@@Base>:
   114ac:	b	114b4 <avl_no_valormin@@Base+0x8>
   114b0:	mov	r0, r3
   114b4:	ldr	r3, [r0, #4]
   114b8:	cmp	r3, #0
   114bc:	bne	114b0 <avl_no_valormin@@Base+0x4>
   114c0:	bx	lr

000114c4 <avl_min@@Base>:
   114c4:	cmp	r0, #0
   114c8:	bxeq	lr
   114cc:	push	{r4, lr}
   114d0:	ldr	r0, [r0]
   114d4:	bl	114ac <avl_no_valormin@@Base>
   114d8:	ldr	r0, [r0]
   114dc:	pop	{r4, pc}

000114e0 <avl_no_valormax@@Base>:
   114e0:	b	114e8 <avl_no_valormax@@Base+0x8>
   114e4:	mov	r0, r3
   114e8:	ldr	r3, [r0, #8]
   114ec:	cmp	r3, #0
   114f0:	bne	114e4 <avl_no_valormax@@Base+0x4>
   114f4:	bx	lr

000114f8 <avl_max@@Base>:
   114f8:	cmp	r0, #0
   114fc:	bxeq	lr
   11500:	push	{r4, lr}
   11504:	ldr	r0, [r0]
   11508:	bl	114e0 <avl_no_valormax@@Base>
   1150c:	ldr	r0, [r0]
   11510:	pop	{r4, pc}

00011514 <avl_remove_impl@@Base>:
   11514:	push	{r4, r5, r6, lr}
   11518:	subs	r4, r0, #0
   1151c:	beq	11608 <avl_remove_impl@@Base+0xf4>
   11520:	ldr	r6, [r4]
   11524:	mov	r0, r1
   11528:	mov	r5, r1
   1152c:	mov	r1, r6
   11530:	bl	10d04 <strcmp@plt>
   11534:	cmp	r0, #0
   11538:	blt	1163c <avl_remove_impl@@Base+0x128>
   1153c:	beq	115a8 <avl_remove_impl@@Base+0x94>
   11540:	mov	r1, r5
   11544:	ldr	r0, [r4, #8]
   11548:	bl	11514 <avl_remove_impl@@Base>
   1154c:	ldr	r3, [r4, #4]
   11550:	str	r0, [r4, #8]
   11554:	mov	r0, r3
   11558:	bl	1118c <avl_altura@@Base>
   1155c:	mov	r5, r0
   11560:	ldr	r0, [r4, #8]
   11564:	bl	1118c <avl_altura@@Base>
   11568:	mov	r1, r0
   1156c:	mov	r0, r5
   11570:	bl	1119c <max@@Base>
   11574:	add	r0, r0, #1
   11578:	str	r0, [r4, #12]
   1157c:	mov	r0, r4
   11580:	bl	112d8 <calc_balanceamento@@Base>
   11584:	cmp	r0, #1
   11588:	ble	11600 <avl_remove_impl@@Base+0xec>
   1158c:	ldr	r0, [r4, #8]
   11590:	bl	112d8 <calc_balanceamento@@Base>
   11594:	cmp	r0, #0
   11598:	blt	11694 <avl_remove_impl@@Base+0x180>
   1159c:	mov	r0, r4
   115a0:	pop	{r4, r5, r6, lr}
   115a4:	b	11268 <roda_esquerda@@Base>
   115a8:	ldr	r5, [r4, #4]
   115ac:	cmp	r5, #0
   115b0:	beq	116b8 <avl_remove_impl@@Base+0x1a4>
   115b4:	ldr	r0, [r4, #8]
   115b8:	cmp	r0, #0
   115bc:	beq	11654 <avl_remove_impl@@Base+0x140>
   115c0:	bl	114ac <avl_no_valormin@@Base>
   115c4:	mov	r5, r0
   115c8:	ldr	r0, [r0]
   115cc:	bl	10d94 <strlen@plt>
   115d0:	add	r1, r0, #1
   115d4:	ldr	r0, [r4]
   115d8:	bl	10d4c <realloc@plt>
   115dc:	str	r0, [r4]
   115e0:	ldr	r1, [r5]
   115e4:	bl	10d58 <strcpy@plt>
   115e8:	ldr	r1, [r5]
   115ec:	ldr	r0, [r4, #8]
   115f0:	bl	11514 <avl_remove_impl@@Base>
   115f4:	ldr	r3, [r4, #4]
   115f8:	str	r0, [r4, #8]
   115fc:	b	11554 <avl_remove_impl@@Base+0x40>
   11600:	cmn	r0, #1
   11604:	blt	11614 <avl_remove_impl@@Base+0x100>
   11608:	mov	r5, r4
   1160c:	mov	r0, r5
   11610:	pop	{r4, r5, r6, pc}
   11614:	ldr	r0, [r4, #4]
   11618:	bl	112d8 <calc_balanceamento@@Base>
   1161c:	cmp	r0, #0
   11620:	ble	116ac <avl_remove_impl@@Base+0x198>
   11624:	ldr	r0, [r4, #4]
   11628:	bl	11268 <roda_esquerda@@Base>
   1162c:	str	r0, [r4, #4]
   11630:	mov	r0, r4
   11634:	pop	{r4, r5, r6, lr}
   11638:	b	111f8 <roda_direita@@Base>
   1163c:	mov	r1, r5
   11640:	ldr	r0, [r4, #4]
   11644:	bl	11514 <avl_remove_impl@@Base>
   11648:	mov	r3, r0
   1164c:	str	r0, [r4, #4]
   11650:	b	11554 <avl_remove_impl@@Base+0x40>
   11654:	ldr	r0, [r5]
   11658:	bl	10d94 <strlen@plt>
   1165c:	add	r1, r0, #1
   11660:	mov	r0, r6
   11664:	bl	10d4c <realloc@plt>
   11668:	str	r0, [r4]
   1166c:	ldr	r1, [r5]
   11670:	bl	10d58 <strcpy@plt>
   11674:	ldmib	r5, {r1, r2, r3}
   11678:	ldr	r0, [r5]
   1167c:	stmib	r4, {r1, r2, r3}
   11680:	bl	10d34 <free@plt>
   11684:	mov	r0, r5
   11688:	bl	10d34 <free@plt>
   1168c:	ldr	r3, [r4, #4]
   11690:	b	11554 <avl_remove_impl@@Base+0x40>
   11694:	ldr	r0, [r4, #8]
   11698:	bl	111f8 <roda_direita@@Base>
   1169c:	str	r0, [r4, #8]
   116a0:	mov	r0, r4
   116a4:	pop	{r4, r5, r6, lr}
   116a8:	b	11268 <roda_esquerda@@Base>
   116ac:	mov	r0, r4
   116b0:	pop	{r4, r5, r6, lr}
   116b4:	b	111f8 <roda_direita@@Base>
   116b8:	ldr	r5, [r4, #8]
   116bc:	cmp	r5, #0
   116c0:	bne	11654 <avl_remove_impl@@Base+0x140>
   116c4:	mov	r0, r6
   116c8:	bl	10d34 <free@plt>
   116cc:	mov	r0, r4
   116d0:	bl	10d34 <free@plt>
   116d4:	b	1160c <avl_remove_impl@@Base+0xf8>

000116d8 <avl_apaga@@Base>:
   116d8:	push	{r4, lr}
   116dc:	subs	r4, r0, #0
   116e0:	popeq	{r4, pc}
   116e4:	ldr	r0, [r4]
   116e8:	cmp	r0, #0
   116ec:	beq	11704 <avl_apaga@@Base+0x2c>
   116f0:	ldr	r1, [r0]
   116f4:	bl	11514 <avl_remove_impl@@Base>
   116f8:	cmp	r0, #0
   116fc:	str	r0, [r4]
   11700:	bne	116f0 <avl_apaga@@Base+0x18>
   11704:	mov	r0, r4
   11708:	pop	{r4, lr}
   1170c:	b	10d34 <free@plt>

00011710 <avl_remove@@Base>:
   11710:	cmp	r1, #0
   11714:	cmpne	r0, #0
   11718:	push	{r4, r5, r6, lr}
   1171c:	moveq	r5, #1
   11720:	movne	r5, #0
   11724:	beq	11740 <avl_remove@@Base+0x30>
   11728:	mov	r4, r0
   1172c:	ldr	r0, [r0]
   11730:	bl	11514 <avl_remove_impl@@Base>
   11734:	str	r0, [r4]
   11738:	mov	r0, r5
   1173c:	pop	{r4, r5, r6, pc}
   11740:	mvn	r5, #0
   11744:	b	11738 <avl_remove@@Base+0x28>

00011748 <avl_preordem_impl@@Base>:
   11748:	push	{r4, r5, r6, lr}
   1174c:	subs	r4, r0, #0
   11750:	popeq	{r4, r5, r6, pc}
   11754:	ldr	r5, [pc, #36]	; 11780 <avl_preordem_impl@@Base+0x38>
   11758:	add	r5, pc, r5
   1175c:	ldr	r1, [r4]
   11760:	mov	r0, r5
   11764:	bl	10d10 <printf@plt>
   11768:	ldr	r0, [r4, #4]
   1176c:	bl	11748 <avl_preordem_impl@@Base>
   11770:	ldr	r4, [r4, #8]
   11774:	cmp	r4, #0
   11778:	bne	1175c <avl_preordem_impl@@Base+0x14>
   1177c:	pop	{r4, r5, r6, pc}
   11780:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>

00011784 <avl_imprime@@Base>:
   11784:	cmp	r0, #0
   11788:	bxeq	lr
   1178c:	push	{r4, lr}
   11790:	ldr	r0, [r0]
   11794:	bl	11748 <avl_preordem_impl@@Base>
   11798:	mov	r0, #10
   1179c:	pop	{r4, lr}
   117a0:	b	10dac <putchar@plt>

000117a4 <tabela_nova@@Base>:
   117a4:	cmp	r1, #0
   117a8:	cmpne	r0, #0
   117ac:	push	{r4, r5, r6, r7, r8, lr}
   117b0:	ble	117f8 <tabela_nova@@Base+0x54>
   117b4:	mov	r5, r0
   117b8:	mov	r0, #12
   117bc:	mov	r6, r1
   117c0:	bl	10d70 <malloc@plt>
   117c4:	subs	r4, r0, #0
   117c8:	beq	117f8 <tabela_nova@@Base+0x54>
   117cc:	mov	r1, #4
   117d0:	mov	r0, r5
   117d4:	bl	10cec <calloc@plt>
   117d8:	cmp	r0, #0
   117dc:	mov	r7, r0
   117e0:	str	r0, [r4, #4]
   117e4:	strne	r5, [r4, #8]
   117e8:	strne	r6, [r4]
   117ec:	beq	11804 <tabela_nova@@Base+0x60>
   117f0:	mov	r0, r4
   117f4:	pop	{r4, r5, r6, r7, r8, pc}
   117f8:	mov	r4, #0
   117fc:	mov	r0, r4
   11800:	pop	{r4, r5, r6, r7, r8, pc}
   11804:	mov	r0, r4
   11808:	bl	10d34 <free@plt>
   1180c:	mov	r4, r7
   11810:	b	117f0 <tabela_nova@@Base+0x4c>

00011814 <tabela_apaga@@Base>:
   11814:	push	{r4, r5, r6, r7, r8, lr}
   11818:	subs	r7, r0, #0
   1181c:	popeq	{r4, r5, r6, r7, r8, pc}
   11820:	ldmib	r7, {r0, r3}
   11824:	cmp	r3, #0
   11828:	ble	11864 <tabela_apaga@@Base+0x50>
   1182c:	mov	r6, #0
   11830:	ldr	r4, [r0, r6, lsl #2]
   11834:	cmp	r4, #0
   11838:	beq	11858 <tabela_apaga@@Base+0x44>
   1183c:	ldm	r4, {r0, r5}
   11840:	bl	10d34 <free@plt>
   11844:	mov	r0, r4
   11848:	bl	10d34 <free@plt>
   1184c:	subs	r4, r5, #0
   11850:	bne	1183c <tabela_apaga@@Base+0x28>
   11854:	ldmib	r7, {r0, r3}
   11858:	add	r6, r6, #1
   1185c:	cmp	r3, r6
   11860:	bgt	11830 <tabela_apaga@@Base+0x1c>
   11864:	bl	10d34 <free@plt>
   11868:	mov	r0, r7
   1186c:	pop	{r4, r5, r6, r7, r8, lr}
   11870:	b	10d34 <free@plt>

00011874 <tabela_adiciona@@Base>:
   11874:	cmp	r2, #0
   11878:	cmpne	r1, #0
   1187c:	moveq	r3, #1
   11880:	movne	r3, #0
   11884:	cmp	r0, #0
   11888:	orreq	r3, r3, #1
   1188c:	cmp	r3, #0
   11890:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11894:	bne	11958 <tabela_adiciona@@Base+0xe4>
   11898:	mov	r6, r1
   1189c:	mov	r4, r0
   118a0:	ldr	r3, [r0]
   118a4:	ldr	r1, [r0, #8]
   118a8:	mov	r0, r6
   118ac:	mov	r8, r2
   118b0:	blx	r3
   118b4:	ldr	sl, [r4, #4]
   118b8:	ldr	r4, [sl, r0, lsl #2]
   118bc:	mov	r9, r0
   118c0:	cmp	r4, #0
   118c4:	bne	118d8 <tabela_adiciona@@Base+0x64>
   118c8:	b	11904 <tabela_adiciona@@Base+0x90>
   118cc:	ldr	r4, [r4, #4]
   118d0:	cmp	r4, #0
   118d4:	beq	11904 <tabela_adiciona@@Base+0x90>
   118d8:	ldr	r5, [r4]
   118dc:	mov	r1, r6
   118e0:	mov	r0, r5
   118e4:	bl	10d04 <strcmp@plt>
   118e8:	subs	r7, r0, #0
   118ec:	bne	118cc <tabela_adiciona@@Base+0x58>
   118f0:	mov	r1, r8
   118f4:	add	r0, r5, #50	; 0x32
   118f8:	bl	10d58 <strcpy@plt>
   118fc:	mov	r0, r7
   11900:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11904:	mov	r0, #8
   11908:	bl	10d70 <malloc@plt>
   1190c:	subs	r4, r0, #0
   11910:	beq	11958 <tabela_adiciona@@Base+0xe4>
   11914:	mov	r0, #150	; 0x96
   11918:	bl	10d70 <malloc@plt>
   1191c:	cmp	r0, #0
   11920:	mov	r5, r0
   11924:	str	r0, [r4]
   11928:	beq	11958 <tabela_adiciona@@Base+0xe4>
   1192c:	mov	r1, r6
   11930:	bl	10d58 <strcpy@plt>
   11934:	mov	r1, r8
   11938:	add	r0, r5, #50	; 0x32
   1193c:	bl	10d58 <strcpy@plt>
   11940:	ldr	r3, [sl, r9, lsl #2]
   11944:	mov	r7, #0
   11948:	str	r3, [r4, #4]
   1194c:	mov	r0, r7
   11950:	str	r4, [sl, r9, lsl #2]
   11954:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11958:	mvn	r7, #1
   1195c:	b	118fc <tabela_adiciona@@Base+0x88>

00011960 <tabela_remove@@Base>:
   11960:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11964:	subs	r4, r0, #0
   11968:	beq	119f4 <tabela_remove@@Base+0x94>
   1196c:	mov	r6, r1
   11970:	ldr	r3, [r4]
   11974:	ldr	r1, [r4, #8]
   11978:	mov	r0, r6
   1197c:	blx	r3
   11980:	ldr	sl, [r4, #4]
   11984:	ldr	r4, [sl, r0, lsl #2]
   11988:	mov	r9, r0
   1198c:	cmp	r4, #0
   11990:	beq	119e8 <tabela_remove@@Base+0x88>
   11994:	mov	r8, #0
   11998:	b	119a8 <tabela_remove@@Base+0x48>
   1199c:	mov	r8, r4
   119a0:	subs	r4, r3, #0
   119a4:	beq	119e8 <tabela_remove@@Base+0x88>
   119a8:	ldr	r5, [r4]
   119ac:	mov	r1, r6
   119b0:	mov	r0, r5
   119b4:	bl	10d04 <strcmp@plt>
   119b8:	ldr	r3, [r4, #4]
   119bc:	subs	r7, r0, #0
   119c0:	bne	1199c <tabela_remove@@Base+0x3c>
   119c4:	cmp	r8, #0
   119c8:	strne	r3, [r8, #4]
   119cc:	streq	r3, [sl, r9, lsl #2]
   119d0:	mov	r0, r5
   119d4:	bl	10d34 <free@plt>
   119d8:	mov	r0, r4
   119dc:	bl	10d34 <free@plt>
   119e0:	mov	r0, r7
   119e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   119e8:	mvn	r7, #2
   119ec:	mov	r0, r7
   119f0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   119f4:	mvn	r7, #1
   119f8:	b	119ec <tabela_remove@@Base+0x8c>

000119fc <tabela_valor@@Base>:
   119fc:	push	{r4, r5, r6, lr}
   11a00:	subs	r4, r0, #0
   11a04:	beq	11a5c <tabela_valor@@Base+0x60>
   11a08:	mov	r6, r1
   11a0c:	ldr	r3, [r4]
   11a10:	ldr	r1, [r4, #8]
   11a14:	mov	r0, r6
   11a18:	blx	r3
   11a1c:	ldr	r3, [r4, #4]
   11a20:	ldr	r4, [r3, r0, lsl #2]
   11a24:	cmp	r4, #0
   11a28:	bne	11a3c <tabela_valor@@Base+0x40>
   11a2c:	b	11a5c <tabela_valor@@Base+0x60>
   11a30:	ldr	r4, [r4, #4]
   11a34:	cmp	r4, #0
   11a38:	beq	11a5c <tabela_valor@@Base+0x60>
   11a3c:	ldr	r5, [r4]
   11a40:	mov	r1, r6
   11a44:	mov	r0, r5
   11a48:	bl	10d04 <strcmp@plt>
   11a4c:	cmp	r0, #0
   11a50:	bne	11a30 <tabela_valor@@Base+0x34>
   11a54:	add	r0, r5, #50	; 0x32
   11a58:	pop	{r4, r5, r6, pc}
   11a5c:	mov	r0, #0
   11a60:	pop	{r4, r5, r6, pc}

00011a64 <tabela_existe@@Base>:
   11a64:	cmp	r0, #0
   11a68:	cmpne	r1, #0
   11a6c:	beq	11a88 <tabela_existe@@Base+0x24>
   11a70:	push	{r4, lr}
   11a74:	bl	119fc <tabela_valor@@Base>
   11a78:	cmp	r0, #0
   11a7c:	mvneq	r0, #2
   11a80:	movne	r0, #1
   11a84:	pop	{r4, pc}
   11a88:	mvn	r0, #1
   11a8c:	bx	lr

00011a90 <tabela_esvazia@@Base>:
   11a90:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11a94:	subs	r8, r0, #0
   11a98:	beq	11b04 <tabela_esvazia@@Base+0x74>
   11a9c:	ldr	r1, [r8, #8]
   11aa0:	cmp	r1, #0
   11aa4:	ble	11afc <tabela_esvazia@@Base+0x6c>
   11aa8:	mov	r6, #0
   11aac:	ldr	r3, [r8, #4]
   11ab0:	mov	r9, r6
   11ab4:	ldr	r4, [r3, r6, lsl #2]
   11ab8:	lsl	r7, r6, #2
   11abc:	cmp	r4, #0
   11ac0:	add	r2, r3, r7
   11ac4:	beq	11aec <tabela_esvazia@@Base+0x5c>
   11ac8:	ldm	r4, {r0, r5}
   11acc:	bl	10d34 <free@plt>
   11ad0:	mov	r0, r4
   11ad4:	bl	10d34 <free@plt>
   11ad8:	subs	r4, r5, #0
   11adc:	bne	11ac8 <tabela_esvazia@@Base+0x38>
   11ae0:	ldr	r3, [r8, #4]
   11ae4:	ldr	r1, [r8, #8]
   11ae8:	add	r2, r3, r7
   11aec:	add	r6, r6, #1
   11af0:	cmp	r1, r6
   11af4:	str	r9, [r2]
   11af8:	bgt	11ab4 <tabela_esvazia@@Base+0x24>
   11afc:	mov	r0, #0
   11b00:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11b04:	mvn	r0, #1
   11b08:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00011b0c <tabela_numelementos@@Base>:
   11b0c:	cmp	r0, #0
   11b10:	beq	11b5c <tabela_numelementos@@Base+0x50>
   11b14:	ldr	r1, [r0, #8]
   11b18:	cmp	r1, #0
   11b1c:	ble	11b54 <tabela_numelementos@@Base+0x48>
   11b20:	ldr	r2, [r0, #4]
   11b24:	mov	r0, #0
   11b28:	add	r1, r2, r1, lsl #2
   11b2c:	ldr	r3, [r2], #4
   11b30:	cmp	r3, #0
   11b34:	beq	11b48 <tabela_numelementos@@Base+0x3c>
   11b38:	ldr	r3, [r3, #4]
   11b3c:	add	r0, r0, #1
   11b40:	cmp	r3, #0
   11b44:	bne	11b38 <tabela_numelementos@@Base+0x2c>
   11b48:	cmp	r2, r1
   11b4c:	bne	11b2c <tabela_numelementos@@Base+0x20>
   11b50:	bx	lr
   11b54:	mov	r0, #0
   11b58:	bx	lr
   11b5c:	mvn	r0, #1
   11b60:	bx	lr

00011b64 <tabela_elementos@@Base>:
   11b64:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11b68:	mov	r5, r1
   11b6c:	mov	r4, r0
   11b70:	bl	11b0c <tabela_numelementos@@Base>
   11b74:	cmp	r0, #0
   11b78:	str	r0, [r5]
   11b7c:	ble	11bf0 <tabela_elementos@@Base+0x8c>
   11b80:	mov	r6, #150	; 0x96
   11b84:	mul	r0, r6, r0
   11b88:	bl	10d70 <malloc@plt>
   11b8c:	subs	r9, r0, #0
   11b90:	beq	11bf0 <tabela_elementos@@Base+0x8c>
   11b94:	ldr	r8, [r4, #8]
   11b98:	cmp	r8, #0
   11b9c:	ble	11be8 <tabela_elementos@@Base+0x84>
   11ba0:	ldr	r7, [r4, #4]
   11ba4:	mov	r5, #0
   11ba8:	add	r8, r7, r8, lsl #2
   11bac:	ldr	r4, [r7], #4
   11bb0:	cmp	r4, #0
   11bb4:	beq	11be0 <tabela_elementos@@Base+0x7c>
   11bb8:	mla	r3, r6, r5, r9
   11bbc:	ldr	r1, [r4]
   11bc0:	mov	r0, r3
   11bc4:	mov	r2, r6
   11bc8:	bl	10d40 <memcpy@plt>
   11bcc:	ldr	r4, [r4, #4]
   11bd0:	add	r5, r5, #1
   11bd4:	cmp	r4, #0
   11bd8:	add	r3, r0, #150	; 0x96
   11bdc:	bne	11bbc <tabela_elementos@@Base+0x58>
   11be0:	cmp	r7, r8
   11be4:	bne	11bac <tabela_elementos@@Base+0x48>
   11be8:	mov	r0, r9
   11bec:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11bf0:	mov	r9, #0
   11bf4:	mov	r0, r9
   11bf8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00011bfc <hash_krm@@Base>:
   11bfc:	push	{r4, lr}
   11c00:	ldrb	r3, [r0]
   11c04:	cmp	r3, #0
   11c08:	beq	11c30 <hash_krm@@Base+0x34>
   11c0c:	mov	r2, r0
   11c10:	mov	r0, #7
   11c14:	add	r0, r0, r3
   11c18:	ldrb	r3, [r2, #1]!
   11c1c:	cmp	r3, #0
   11c20:	bne	11c14 <hash_krm@@Base+0x18>
   11c24:	bl	11f18 <mostraTabela@@Base+0x2a4>
   11c28:	mov	r0, r1
   11c2c:	pop	{r4, pc}
   11c30:	mov	r0, #7
   11c34:	b	11c24 <hash_krm@@Base+0x28>

00011c38 <hash_djbm@@Base>:
   11c38:	push	{r4, lr}
   11c3c:	ldrb	r2, [r0]
   11c40:	ldr	r3, [pc, #40]	; 11c70 <hash_djbm@@Base+0x38>
   11c44:	cmp	r2, #0
   11c48:	beq	11c60 <hash_djbm@@Base+0x28>
   11c4c:	rsb	r3, r3, r3, lsl #5
   11c50:	eor	r3, r3, r2
   11c54:	ldrb	r2, [r0, #1]!
   11c58:	cmp	r2, #0
   11c5c:	bne	11c4c <hash_djbm@@Base+0x14>
   11c60:	mov	r0, r3
   11c64:	bl	11f18 <mostraTabela@@Base+0x2a4>
   11c68:	mov	r0, r1
   11c6c:	pop	{r4, pc}
   11c70:	andeq	r1, r0, r3, ror #9

00011c74 <mostraTabela@@Base>:
   11c74:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11c78:	mov	r7, r0
   11c7c:	bl	11b0c <tabela_numelementos@@Base>
   11c80:	mov	r1, r0
   11c84:	ldr	r0, [pc, #148]	; 11d20 <mostraTabela@@Base+0xac>
   11c88:	add	r0, pc, r0
   11c8c:	bl	10d10 <printf@plt>
   11c90:	ldr	r2, [r7, #8]
   11c94:	cmp	r2, #0
   11c98:	ble	11d14 <mostraTabela@@Base+0xa0>
   11c9c:	ldr	r9, [pc, #128]	; 11d24 <mostraTabela@@Base+0xb0>
   11ca0:	ldr	r5, [pc, #128]	; 11d28 <mostraTabela@@Base+0xb4>
   11ca4:	add	r9, pc, r9
   11ca8:	add	r5, pc, r5
   11cac:	mov	r6, #0
   11cb0:	mov	r8, #10
   11cb4:	ldr	r3, [r7, #4]
   11cb8:	ldr	r3, [r3, r6, lsl #2]
   11cbc:	cmp	r3, #0
   11cc0:	beq	11d08 <mostraTabela@@Base+0x94>
   11cc4:	mov	r1, r6
   11cc8:	mov	r0, r9
   11ccc:	bl	10d10 <printf@plt>
   11cd0:	ldr	r3, [r7, #4]
   11cd4:	ldr	r4, [r3, r6, lsl #2]
   11cd8:	cmp	r4, #0
   11cdc:	beq	11cfc <mostraTabela@@Base+0x88>
   11ce0:	ldr	r1, [r4]
   11ce4:	mov	r0, r5
   11ce8:	add	r2, r1, #50	; 0x32
   11cec:	bl	10d10 <printf@plt>
   11cf0:	ldr	r4, [r4, #4]
   11cf4:	cmp	r4, #0
   11cf8:	bne	11ce0 <mostraTabela@@Base+0x6c>
   11cfc:	mov	r0, r8
   11d00:	bl	10dac <putchar@plt>
   11d04:	ldr	r2, [r7, #8]
   11d08:	add	r6, r6, #1
   11d0c:	cmp	r2, r6
   11d10:	bgt	11cb4 <mostraTabela@@Base+0x40>
   11d14:	mov	r0, #10
   11d18:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   11d1c:	b	10dac <putchar@plt>
   11d20:	andeq	r0, r0, r4, lsr #7
   11d24:	andeq	r0, r0, ip, lsr #7
   11d28:			; <UNDEFINED> instruction: 0x000003b0
   11d2c:	subs	r2, r1, #1
   11d30:	bxeq	lr
   11d34:	bcc	11f0c <mostraTabela@@Base+0x298>
   11d38:	cmp	r0, r1
   11d3c:	bls	11ef0 <mostraTabela@@Base+0x27c>
   11d40:	tst	r1, r2
   11d44:	beq	11efc <mostraTabela@@Base+0x288>
   11d48:	clz	r3, r0
   11d4c:	clz	r2, r1
   11d50:	sub	r3, r2, r3
   11d54:	rsbs	r3, r3, #31
   11d58:	addne	r3, r3, r3, lsl #1
   11d5c:	mov	r2, #0
   11d60:	addne	pc, pc, r3, lsl #2
   11d64:	nop			; (mov r0, r0)
   11d68:	cmp	r0, r1, lsl #31
   11d6c:	adc	r2, r2, r2
   11d70:	subcs	r0, r0, r1, lsl #31
   11d74:	cmp	r0, r1, lsl #30
   11d78:	adc	r2, r2, r2
   11d7c:	subcs	r0, r0, r1, lsl #30
   11d80:	cmp	r0, r1, lsl #29
   11d84:	adc	r2, r2, r2
   11d88:	subcs	r0, r0, r1, lsl #29
   11d8c:	cmp	r0, r1, lsl #28
   11d90:	adc	r2, r2, r2
   11d94:	subcs	r0, r0, r1, lsl #28
   11d98:	cmp	r0, r1, lsl #27
   11d9c:	adc	r2, r2, r2
   11da0:	subcs	r0, r0, r1, lsl #27
   11da4:	cmp	r0, r1, lsl #26
   11da8:	adc	r2, r2, r2
   11dac:	subcs	r0, r0, r1, lsl #26
   11db0:	cmp	r0, r1, lsl #25
   11db4:	adc	r2, r2, r2
   11db8:	subcs	r0, r0, r1, lsl #25
   11dbc:	cmp	r0, r1, lsl #24
   11dc0:	adc	r2, r2, r2
   11dc4:	subcs	r0, r0, r1, lsl #24
   11dc8:	cmp	r0, r1, lsl #23
   11dcc:	adc	r2, r2, r2
   11dd0:	subcs	r0, r0, r1, lsl #23
   11dd4:	cmp	r0, r1, lsl #22
   11dd8:	adc	r2, r2, r2
   11ddc:	subcs	r0, r0, r1, lsl #22
   11de0:	cmp	r0, r1, lsl #21
   11de4:	adc	r2, r2, r2
   11de8:	subcs	r0, r0, r1, lsl #21
   11dec:	cmp	r0, r1, lsl #20
   11df0:	adc	r2, r2, r2
   11df4:	subcs	r0, r0, r1, lsl #20
   11df8:	cmp	r0, r1, lsl #19
   11dfc:	adc	r2, r2, r2
   11e00:	subcs	r0, r0, r1, lsl #19
   11e04:	cmp	r0, r1, lsl #18
   11e08:	adc	r2, r2, r2
   11e0c:	subcs	r0, r0, r1, lsl #18
   11e10:	cmp	r0, r1, lsl #17
   11e14:	adc	r2, r2, r2
   11e18:	subcs	r0, r0, r1, lsl #17
   11e1c:	cmp	r0, r1, lsl #16
   11e20:	adc	r2, r2, r2
   11e24:	subcs	r0, r0, r1, lsl #16
   11e28:	cmp	r0, r1, lsl #15
   11e2c:	adc	r2, r2, r2
   11e30:	subcs	r0, r0, r1, lsl #15
   11e34:	cmp	r0, r1, lsl #14
   11e38:	adc	r2, r2, r2
   11e3c:	subcs	r0, r0, r1, lsl #14
   11e40:	cmp	r0, r1, lsl #13
   11e44:	adc	r2, r2, r2
   11e48:	subcs	r0, r0, r1, lsl #13
   11e4c:	cmp	r0, r1, lsl #12
   11e50:	adc	r2, r2, r2
   11e54:	subcs	r0, r0, r1, lsl #12
   11e58:	cmp	r0, r1, lsl #11
   11e5c:	adc	r2, r2, r2
   11e60:	subcs	r0, r0, r1, lsl #11
   11e64:	cmp	r0, r1, lsl #10
   11e68:	adc	r2, r2, r2
   11e6c:	subcs	r0, r0, r1, lsl #10
   11e70:	cmp	r0, r1, lsl #9
   11e74:	adc	r2, r2, r2
   11e78:	subcs	r0, r0, r1, lsl #9
   11e7c:	cmp	r0, r1, lsl #8
   11e80:	adc	r2, r2, r2
   11e84:	subcs	r0, r0, r1, lsl #8
   11e88:	cmp	r0, r1, lsl #7
   11e8c:	adc	r2, r2, r2
   11e90:	subcs	r0, r0, r1, lsl #7
   11e94:	cmp	r0, r1, lsl #6
   11e98:	adc	r2, r2, r2
   11e9c:	subcs	r0, r0, r1, lsl #6
   11ea0:	cmp	r0, r1, lsl #5
   11ea4:	adc	r2, r2, r2
   11ea8:	subcs	r0, r0, r1, lsl #5
   11eac:	cmp	r0, r1, lsl #4
   11eb0:	adc	r2, r2, r2
   11eb4:	subcs	r0, r0, r1, lsl #4
   11eb8:	cmp	r0, r1, lsl #3
   11ebc:	adc	r2, r2, r2
   11ec0:	subcs	r0, r0, r1, lsl #3
   11ec4:	cmp	r0, r1, lsl #2
   11ec8:	adc	r2, r2, r2
   11ecc:	subcs	r0, r0, r1, lsl #2
   11ed0:	cmp	r0, r1, lsl #1
   11ed4:	adc	r2, r2, r2
   11ed8:	subcs	r0, r0, r1, lsl #1
   11edc:	cmp	r0, r1
   11ee0:	adc	r2, r2, r2
   11ee4:	subcs	r0, r0, r1
   11ee8:	mov	r0, r2
   11eec:	bx	lr
   11ef0:	moveq	r0, #1
   11ef4:	movne	r0, #0
   11ef8:	bx	lr
   11efc:	clz	r2, r1
   11f00:	rsb	r2, r2, #31
   11f04:	lsr	r0, r0, r2
   11f08:	bx	lr
   11f0c:	cmp	r0, #0
   11f10:	mvnne	r0, #0
   11f14:	b	11f38 <mostraTabela@@Base+0x2c4>
   11f18:	cmp	r1, #0
   11f1c:	beq	11f0c <mostraTabela@@Base+0x298>
   11f20:	push	{r0, r1, lr}
   11f24:	bl	11d2c <mostraTabela@@Base+0xb8>
   11f28:	pop	{r1, r2, lr}
   11f2c:	mul	r3, r2, r0
   11f30:	sub	r1, r1, r3
   11f34:	bx	lr
   11f38:	push	{r1, lr}
   11f3c:	mov	r0, #8
   11f40:	bl	10cf8 <raise@plt>
   11f44:	pop	{r1, pc}

00011f48 <__libc_csu_init@@Base>:
   11f48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11f4c:	mov	r7, r0
   11f50:	ldr	r6, [pc, #72]	; 11fa0 <__libc_csu_init@@Base+0x58>
   11f54:	ldr	r5, [pc, #72]	; 11fa4 <__libc_csu_init@@Base+0x5c>
   11f58:	add	r6, pc, r6
   11f5c:	add	r5, pc, r5
   11f60:	sub	r6, r6, r5
   11f64:	mov	r8, r1
   11f68:	mov	r9, r2
   11f6c:	bl	10ccc <calloc@plt-0x20>
   11f70:	asrs	r6, r6, #2
   11f74:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11f78:	mov	r4, #0
   11f7c:	add	r4, r4, #1
   11f80:	ldr	r3, [r5], #4
   11f84:	mov	r2, r9
   11f88:	mov	r1, r8
   11f8c:	mov	r0, r7
   11f90:	blx	r3
   11f94:	cmp	r6, r4
   11f98:	bne	11f7c <__libc_csu_init@@Base+0x34>
   11f9c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11fa0:			; <UNDEFINED> instruction: 0x00010fb0
   11fa4:	andeq	r0, r1, r8, lsr #31

00011fa8 <__libc_csu_fini@@Base>:
   11fa8:	bx	lr

Disassembly of section .fini:

00011fac <.fini>:
   11fac:	push	{r3, lr}
   11fb0:	pop	{r3, pc}
