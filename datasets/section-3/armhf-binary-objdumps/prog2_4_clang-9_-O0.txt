
../repos/prog2/4:     file format elf32-littlearm


Disassembly of section .init:

00010a44 <.init>:
   10a44:	push	{r3, lr}
   10a48:	bl	10b24 <_start@@Base+0x3c>
   10a4c:	pop	{r3, pc}

Disassembly of section .plt:

00010a50 <strcmp@plt-0x14>:
   10a50:	push	{lr}		; (str lr, [sp, #-4]!)
   10a54:	ldr	lr, [pc, #4]	; 10a60 <strcmp@plt-0x4>
   10a58:	add	lr, pc, lr
   10a5c:	ldr	pc, [lr, #8]!
   10a60:	andeq	r2, r1, r0, lsr #11

00010a64 <strcmp@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #73728	; 0x12000
   10a6c:	ldr	pc, [ip, #1440]!	; 0x5a0

00010a70 <printf@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #73728	; 0x12000
   10a78:	ldr	pc, [ip, #1432]!	; 0x598

00010a7c <free@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #73728	; 0x12000
   10a84:	ldr	pc, [ip, #1424]!	; 0x590

00010a88 <strdup@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #73728	; 0x12000
   10a90:	ldr	pc, [ip, #1416]!	; 0x588

00010a94 <strcpy@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #73728	; 0x12000
   10a9c:	ldr	pc, [ip, #1408]!	; 0x580

00010aa0 <malloc@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #73728	; 0x12000
   10aa8:	ldr	pc, [ip, #1400]!	; 0x578

00010aac <__libc_start_main@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #73728	; 0x12000
   10ab4:	ldr	pc, [ip, #1392]!	; 0x570

00010ab8 <__gmon_start__@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #73728	; 0x12000
   10ac0:	ldr	pc, [ip, #1384]!	; 0x568

00010ac4 <strlen@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #73728	; 0x12000
   10acc:	ldr	pc, [ip, #1376]!	; 0x560

00010ad0 <setvbuf@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #73728	; 0x12000
   10ad8:	ldr	pc, [ip, #1368]!	; 0x558

00010adc <abort@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #73728	; 0x12000
   10ae4:	ldr	pc, [ip, #1360]!	; 0x550

Disassembly of section .text:

00010ae8 <_start@@Base>:
   10ae8:	mov	fp, #0
   10aec:	mov	lr, #0
   10af0:	pop	{r1}		; (ldr r1, [sp], #4)
   10af4:	mov	r2, sp
   10af8:	push	{r2}		; (str r2, [sp, #-4]!)
   10afc:	push	{r0}		; (str r0, [sp, #-4]!)
   10b00:	ldr	ip, [pc, #16]	; 10b18 <_start@@Base+0x30>
   10b04:	push	{ip}		; (str ip, [sp, #-4]!)
   10b08:	ldr	r0, [pc, #12]	; 10b1c <_start@@Base+0x34>
   10b0c:	ldr	r3, [pc, #12]	; 10b20 <_start@@Base+0x38>
   10b10:	bl	10aac <__libc_start_main@plt>
   10b14:	bl	10adc <abort@plt>
   10b18:	andeq	r2, r1, r4, ror #15
   10b1c:			; <UNDEFINED> instruction: 0x00011ebc
   10b20:	andeq	r2, r1, r4, lsl #15
   10b24:	ldr	r3, [pc, #20]	; 10b40 <_start@@Base+0x58>
   10b28:	ldr	r2, [pc, #20]	; 10b44 <_start@@Base+0x5c>
   10b2c:	add	r3, pc, r3
   10b30:	ldr	r2, [r3, r2]
   10b34:	cmp	r2, #0
   10b38:	bxeq	lr
   10b3c:	b	10ab8 <__gmon_start__@plt>
   10b40:	andeq	r2, r1, ip, asr #9
   10b44:	andeq	r0, r0, r0, asr #32
   10b48:	ldr	r0, [pc, #24]	; 10b68 <_start@@Base+0x80>
   10b4c:	ldr	r3, [pc, #24]	; 10b6c <_start@@Base+0x84>
   10b50:	cmp	r3, r0
   10b54:	bxeq	lr
   10b58:	ldr	r3, [pc, #16]	; 10b70 <_start@@Base+0x88>
   10b5c:	cmp	r3, #0
   10b60:	bxeq	lr
   10b64:	bx	r3
   10b68:	andeq	r3, r2, r0, asr r0
   10b6c:	andeq	r3, r2, r0, asr r0
   10b70:	andeq	r0, r0, r0
   10b74:	ldr	r0, [pc, #36]	; 10ba0 <_start@@Base+0xb8>
   10b78:	ldr	r1, [pc, #36]	; 10ba4 <_start@@Base+0xbc>
   10b7c:	sub	r1, r1, r0
   10b80:	asr	r1, r1, #2
   10b84:	add	r1, r1, r1, lsr #31
   10b88:	asrs	r1, r1, #1
   10b8c:	bxeq	lr
   10b90:	ldr	r3, [pc, #16]	; 10ba8 <_start@@Base+0xc0>
   10b94:	cmp	r3, #0
   10b98:	bxeq	lr
   10b9c:	bx	r3
   10ba0:	andeq	r3, r2, r0, asr r0
   10ba4:	andeq	r3, r2, r0, asr r0
   10ba8:	andeq	r0, r0, r0
   10bac:	push	{r4, lr}
   10bb0:	ldr	r4, [pc, #24]	; 10bd0 <_start@@Base+0xe8>
   10bb4:	ldrb	r3, [r4]
   10bb8:	cmp	r3, #0
   10bbc:	popne	{r4, pc}
   10bc0:	bl	10b48 <_start@@Base+0x60>
   10bc4:	mov	r3, #1
   10bc8:	strb	r3, [r4]
   10bcc:	pop	{r4, pc}
   10bd0:	andeq	r3, r2, r0, asr r0
   10bd4:	b	10b74 <_start@@Base+0x8c>

00010bd8 <_l@@Base>:
   10bd8:	sub	sp, sp, #12
   10bdc:	push	{fp, lr}
   10be0:	mov	fp, sp
   10be4:	sub	sp, sp, #28
   10be8:	str	r3, [fp, #16]
   10bec:	str	r2, [fp, #12]
   10bf0:	str	r1, [fp, #8]
   10bf4:	str	r0, [fp, #-4]
   10bf8:	movw	r0, #12
   10bfc:	bl	10aa0 <malloc@plt>
   10c00:	str	r0, [fp, #-12]
   10c04:	ldr	r0, [fp, #-12]
   10c08:	movw	r1, #0
   10c0c:	str	r1, [r0]
   10c10:	ldr	r0, [fp, #-12]
   10c14:	str	r1, [r0, #4]
   10c18:	ldr	r0, [fp, #-4]
   10c1c:	ldr	r2, [fp, #-12]
   10c20:	str	r0, [r2, #8]
   10c24:	sub	r0, fp, #8
   10c28:	add	r2, fp, #8
   10c2c:	str	r2, [r0]
   10c30:	str	r1, [sp, #8]
   10c34:	ldr	r0, [sp, #8]
   10c38:	ldr	r1, [fp, #-4]
   10c3c:	cmp	r0, r1
   10c40:	bge	10cf4 <_l@@Base+0x11c>
   10c44:	ldr	r0, [fp, #-8]
   10c48:	add	r1, r0, #4
   10c4c:	str	r1, [fp, #-8]
   10c50:	ldr	r0, [r0]
   10c54:	str	r0, [sp, #4]
   10c58:	ldr	r0, [sp, #8]
   10c5c:	cmp	r0, #0
   10c60:	bne	10c90 <_l@@Base+0xb8>
   10c64:	movw	r0, #12
   10c68:	bl	10aa0 <malloc@plt>
   10c6c:	ldr	r1, [fp, #-12]
   10c70:	str	r0, [r1]
   10c74:	ldr	r0, [fp, #-12]
   10c78:	ldr	r0, [r0]
   10c7c:	str	r0, [sp, #12]
   10c80:	ldr	r0, [sp, #12]
   10c84:	movw	r1, #0
   10c88:	str	r1, [r0, #8]
   10c8c:	b	10cbc <_l@@Base+0xe4>
   10c90:	movw	r0, #12
   10c94:	bl	10aa0 <malloc@plt>
   10c98:	ldr	r1, [sp, #12]
   10c9c:	str	r0, [r1, #4]
   10ca0:	ldr	r0, [sp, #12]
   10ca4:	ldr	r1, [sp, #12]
   10ca8:	ldr	r1, [r1, #4]
   10cac:	str	r0, [r1, #8]
   10cb0:	ldr	r0, [sp, #12]
   10cb4:	ldr	r0, [r0, #4]
   10cb8:	str	r0, [sp, #12]
   10cbc:	ldr	r0, [sp, #4]
   10cc0:	bl	10ac4 <strlen@plt>
   10cc4:	add	r0, r0, #1
   10cc8:	bl	10aa0 <malloc@plt>
   10ccc:	ldr	r1, [sp, #12]
   10cd0:	str	r0, [r1]
   10cd4:	ldr	r0, [sp, #12]
   10cd8:	ldr	r0, [r0]
   10cdc:	ldr	r1, [sp, #4]
   10ce0:	bl	10a94 <strcpy@plt>
   10ce4:	ldr	r0, [sp, #8]
   10ce8:	add	r0, r0, #1
   10cec:	str	r0, [sp, #8]
   10cf0:	b	10c34 <_l@@Base+0x5c>
   10cf4:	sub	r0, fp, #8
   10cf8:	ldr	r1, [sp, #12]
   10cfc:	movw	r2, #0
   10d00:	str	r2, [r1, #4]
   10d04:	ldr	r1, [sp, #12]
   10d08:	ldr	r2, [fp, #-12]
   10d0c:	str	r1, [r2, #4]
   10d10:	ldr	r1, [fp, #-12]
   10d14:	str	r0, [sp]
   10d18:	mov	r0, r1
   10d1c:	mov	sp, fp
   10d20:	pop	{fp, lr}
   10d24:	add	sp, sp, #12
   10d28:	bx	lr

00010d2c <_f@@Base>:
   10d2c:	sub	sp, sp, #24
   10d30:	str	r0, [sp, #16]
   10d34:	str	r1, [sp, #12]
   10d38:	ldr	r0, [sp, #16]
   10d3c:	movw	r1, #0
   10d40:	cmp	r0, r1
   10d44:	bne	10d54 <_f@@Base+0x28>
   10d48:	movw	r0, #0
   10d4c:	str	r0, [sp, #20]
   10d50:	b	10dec <_f@@Base+0xc0>
   10d54:	ldr	r0, [sp, #16]
   10d58:	ldr	r0, [r0]
   10d5c:	str	r0, [sp, #4]
   10d60:	movw	r0, #0
   10d64:	str	r0, [sp, #8]
   10d68:	ldr	r0, [sp, #8]
   10d6c:	ldr	r1, [sp, #12]
   10d70:	cmp	r0, r1
   10d74:	movw	r0, #0
   10d78:	str	r0, [sp]
   10d7c:	bge	10d98 <_f@@Base+0x6c>
   10d80:	ldr	r0, [sp, #4]
   10d84:	movw	r1, #0
   10d88:	cmp	r0, r1
   10d8c:	movw	r0, #0
   10d90:	movne	r0, #1
   10d94:	str	r0, [sp]
   10d98:	ldr	r0, [sp]
   10d9c:	tst	r0, #1
   10da0:	beq	10dc0 <_f@@Base+0x94>
   10da4:	ldr	r0, [sp, #4]
   10da8:	ldr	r0, [r0, #4]
   10dac:	str	r0, [sp, #4]
   10db0:	ldr	r0, [sp, #8]
   10db4:	add	r0, r0, #1
   10db8:	str	r0, [sp, #8]
   10dbc:	b	10d68 <_f@@Base+0x3c>
   10dc0:	ldr	r0, [sp, #12]
   10dc4:	ldr	r1, [sp, #8]
   10dc8:	cmp	r0, r1
   10dcc:	bne	10de0 <_f@@Base+0xb4>
   10dd0:	ldr	r0, [sp, #4]
   10dd4:	ldr	r0, [r0]
   10dd8:	str	r0, [sp, #20]
   10ddc:	b	10dec <_f@@Base+0xc0>
   10de0:	ldr	r0, [pc, #16]	; 10df8 <_f@@Base+0xcc>
   10de4:	add	r0, pc, r0
   10de8:	str	r0, [sp, #20]
   10dec:	ldr	r0, [sp, #20]
   10df0:	add	sp, sp, #24
   10df4:	bx	lr
   10df8:	andeq	r1, r0, sp, ror #29

00010dfc <teste_lista_nova@@Base>:
   10dfc:	push	{fp, lr}
   10e00:	mov	fp, sp
   10e04:	sub	sp, sp, #16
   10e08:	ldr	r0, [pc, #236]	; 10efc <teste_lista_nova@@Base+0x100>
   10e0c:	add	r0, pc, r0
   10e10:	movw	r1, #0
   10e14:	str	r1, [sp, #8]
   10e18:	bl	10a70 <printf@plt>
   10e1c:	ldr	r1, [pc, #212]	; 10ef8 <teste_lista_nova@@Base+0xfc>
   10e20:	ldr	r1, [pc, r1]
   10e24:	str	r0, [sp]
   10e28:	blx	r1
   10e2c:	str	r0, [sp, #4]
   10e30:	ldr	r0, [sp, #4]
   10e34:	movw	r1, #0
   10e38:	cmp	r0, r1
   10e3c:	bne	10e8c <teste_lista_nova@@Base+0x90>
   10e40:	ldr	r0, [pc, #184]	; 10f00 <teste_lista_nova@@Base+0x104>
   10e44:	add	r0, pc, r0
   10e48:	bl	10a70 <printf@plt>
   10e4c:	ldr	r1, [sp, #8]
   10e50:	add	r1, r1, #1
   10e54:	str	r1, [sp, #8]
   10e58:	ldr	r1, [sp, #8]
   10e5c:	cmp	r1, #0
   10e60:	bne	10e74 <teste_lista_nova@@Base+0x78>
   10e64:	ldr	r0, [pc, #152]	; 10f04 <teste_lista_nova@@Base+0x108>
   10e68:	add	r0, pc, r0
   10e6c:	bl	10a70 <printf@plt>
   10e70:	b	10e80 <teste_lista_nova@@Base+0x84>
   10e74:	ldr	r0, [pc, #140]	; 10f08 <teste_lista_nova@@Base+0x10c>
   10e78:	add	r0, pc, r0
   10e7c:	bl	10a70 <printf@plt>
   10e80:	ldr	r0, [sp, #8]
   10e84:	str	r0, [fp, #-4]
   10e88:	b	10eec <teste_lista_nova@@Base+0xf0>
   10e8c:	ldr	r0, [sp, #4]
   10e90:	ldr	r0, [r0, #8]
   10e94:	cmp	r0, #0
   10e98:	beq	10eb4 <teste_lista_nova@@Base+0xb8>
   10e9c:	ldr	r0, [pc, #104]	; 10f0c <teste_lista_nova@@Base+0x110>
   10ea0:	add	r0, pc, r0
   10ea4:	bl	10a70 <printf@plt>
   10ea8:	ldr	r1, [sp, #8]
   10eac:	add	r1, r1, #1
   10eb0:	str	r1, [sp, #8]
   10eb4:	ldr	r0, [sp, #4]
   10eb8:	bl	1201c <lista_apaga@@Base>
   10ebc:	ldr	r0, [sp, #8]
   10ec0:	cmp	r0, #0
   10ec4:	bne	10ed8 <teste_lista_nova@@Base+0xdc>
   10ec8:	ldr	r0, [pc, #64]	; 10f10 <teste_lista_nova@@Base+0x114>
   10ecc:	add	r0, pc, r0
   10ed0:	bl	10a70 <printf@plt>
   10ed4:	b	10ee4 <teste_lista_nova@@Base+0xe8>
   10ed8:	ldr	r0, [pc, #52]	; 10f14 <teste_lista_nova@@Base+0x118>
   10edc:	add	r0, pc, r0
   10ee0:	bl	10a70 <printf@plt>
   10ee4:	ldr	r0, [sp, #8]
   10ee8:	str	r0, [fp, #-4]
   10eec:	ldr	r0, [fp, #-4]
   10ef0:	mov	sp, fp
   10ef4:	pop	{fp, pc}
   10ef8:	andeq	r2, r1, r0, lsl r2
   10efc:	andeq	r1, r0, r0, ror #19
   10f00:			; <UNDEFINED> instruction: 0x000019b7
   10f04:	andeq	r1, r0, r9, lsr #19
   10f08:	andeq	r1, r0, r8, asr lr
   10f0c:	andeq	r1, r0, r5, ror r9
   10f10:	andeq	r1, r0, r5, asr #18
   10f14:	strdeq	r1, [r0], -r4

00010f18 <teste_lista_insere@@Base>:
   10f18:	push	{fp, lr}
   10f1c:	mov	fp, sp
   10f20:	sub	sp, sp, #32
   10f24:	ldr	r0, [pc, #1188]	; 113d0 <teste_lista_insere@@Base+0x4b8>
   10f28:	add	r0, pc, r0
   10f2c:	ldr	r1, [pc, #1184]	; 113d4 <teste_lista_insere@@Base+0x4bc>
   10f30:	add	r1, pc, r1
   10f34:	movw	r2, #0
   10f38:	str	r2, [fp, #-8]
   10f3c:	str	r1, [sp, #16]
   10f40:	str	r0, [sp, #12]
   10f44:	ldr	r1, [sp, #16]
   10f48:	ldr	r2, [sp, #16]
   10f4c:	movw	r0, #2
   10f50:	bl	10bd8 <_l@@Base>
   10f54:	ldr	r1, [pc, #1136]	; 113cc <teste_lista_insere@@Base+0x4b4>
   10f58:	add	r1, pc, r1
   10f5c:	str	r0, [sp, #8]
   10f60:	mov	r0, r1
   10f64:	bl	10a70 <printf@plt>
   10f68:	ldr	r1, [sp, #8]
   10f6c:	ldr	r2, [sp, #12]
   10f70:	ldr	r3, [sp, #8]
   10f74:	ldr	r3, [r3]
   10f78:	ldr	r3, [r3, #4]
   10f7c:	str	r0, [sp, #4]
   10f80:	mov	r0, r1
   10f84:	mov	r1, r2
   10f88:	mov	r2, r3
   10f8c:	bl	12188 <lista_insere@@Base>
   10f90:	str	r0, [fp, #-12]
   10f94:	ldr	r0, [fp, #-12]
   10f98:	movw	r1, #0
   10f9c:	cmp	r0, r1
   10fa0:	bne	10fbc <teste_lista_insere@@Base+0xa4>
   10fa4:	ldr	r0, [pc, #1068]	; 113d8 <teste_lista_insere@@Base+0x4c0>
   10fa8:	add	r0, pc, r0
   10fac:	bl	10a70 <printf@plt>
   10fb0:	ldr	r1, [fp, #-8]
   10fb4:	add	r1, r1, #1
   10fb8:	str	r1, [fp, #-8]
   10fbc:	ldr	r0, [sp, #8]
   10fc0:	ldr	r0, [r0, #8]
   10fc4:	cmp	r0, #3
   10fc8:	beq	10fe4 <teste_lista_insere@@Base+0xcc>
   10fcc:	ldr	r0, [pc, #1032]	; 113dc <teste_lista_insere@@Base+0x4c4>
   10fd0:	add	r0, pc, r0
   10fd4:	bl	10a70 <printf@plt>
   10fd8:	ldr	r1, [fp, #-8]
   10fdc:	add	r1, r1, #1
   10fe0:	str	r1, [fp, #-8]
   10fe4:	ldr	r0, [sp, #8]
   10fe8:	ldr	r0, [r0, #8]
   10fec:	cmp	r0, #3
   10ff0:	beq	11028 <teste_lista_insere@@Base+0x110>
   10ff4:	ldr	r0, [fp, #-8]
   10ff8:	cmp	r0, #0
   10ffc:	bne	11010 <teste_lista_insere@@Base+0xf8>
   11000:	ldr	r0, [pc, #1060]	; 1142c <teste_lista_insere@@Base+0x514>
   11004:	add	r0, pc, r0
   11008:	bl	10a70 <printf@plt>
   1100c:	b	1101c <teste_lista_insere@@Base+0x104>
   11010:	ldr	r0, [pc, #1048]	; 11430 <teste_lista_insere@@Base+0x518>
   11014:	add	r0, pc, r0
   11018:	bl	10a70 <printf@plt>
   1101c:	ldr	r0, [fp, #-8]
   11020:	str	r0, [fp, #-4]
   11024:	b	113c0 <teste_lista_insere@@Base+0x4a8>
   11028:	ldr	r0, [sp, #8]
   1102c:	ldr	r0, [r0]
   11030:	ldr	r0, [r0]
   11034:	ldr	r1, [sp, #16]
   11038:	bl	10a64 <strcmp@plt>
   1103c:	cmp	r0, #0
   11040:	bne	11088 <teste_lista_insere@@Base+0x170>
   11044:	ldr	r0, [sp, #8]
   11048:	ldr	r0, [r0]
   1104c:	ldr	r0, [r0, #4]
   11050:	ldr	r0, [r0]
   11054:	ldr	r1, [sp, #12]
   11058:	bl	10a64 <strcmp@plt>
   1105c:	cmp	r0, #0
   11060:	bne	11088 <teste_lista_insere@@Base+0x170>
   11064:	ldr	r0, [sp, #8]
   11068:	ldr	r0, [r0]
   1106c:	ldr	r0, [r0, #4]
   11070:	ldr	r0, [r0, #4]
   11074:	ldr	r0, [r0]
   11078:	ldr	r1, [sp, #16]
   1107c:	bl	10a64 <strcmp@plt>
   11080:	cmp	r0, #0
   11084:	beq	110a0 <teste_lista_insere@@Base+0x188>
   11088:	ldr	r0, [pc, #848]	; 113e0 <teste_lista_insere@@Base+0x4c8>
   1108c:	add	r0, pc, r0
   11090:	bl	10a70 <printf@plt>
   11094:	ldr	r1, [fp, #-8]
   11098:	add	r1, r1, #1
   1109c:	str	r1, [fp, #-8]
   110a0:	ldr	r0, [sp, #8]
   110a4:	ldr	r1, [sp, #12]
   110a8:	ldr	r2, [sp, #8]
   110ac:	ldr	r2, [r2]
   110b0:	bl	12188 <lista_insere@@Base>
   110b4:	str	r0, [fp, #-12]
   110b8:	ldr	r0, [fp, #-12]
   110bc:	ldr	r1, [sp, #8]
   110c0:	ldr	r1, [r1]
   110c4:	cmp	r0, r1
   110c8:	beq	110e4 <teste_lista_insere@@Base+0x1cc>
   110cc:	ldr	r0, [pc, #784]	; 113e4 <teste_lista_insere@@Base+0x4cc>
   110d0:	add	r0, pc, r0
   110d4:	bl	10a70 <printf@plt>
   110d8:	ldr	r1, [fp, #-8]
   110dc:	add	r1, r1, #1
   110e0:	str	r1, [fp, #-8]
   110e4:	ldr	r0, [sp, #8]
   110e8:	ldr	r0, [r0, #8]
   110ec:	cmp	r0, #4
   110f0:	beq	1110c <teste_lista_insere@@Base+0x1f4>
   110f4:	ldr	r0, [pc, #748]	; 113e8 <teste_lista_insere@@Base+0x4d0>
   110f8:	add	r0, pc, r0
   110fc:	bl	10a70 <printf@plt>
   11100:	ldr	r1, [fp, #-8]
   11104:	add	r1, r1, #1
   11108:	str	r1, [fp, #-8]
   1110c:	ldr	r0, [sp, #8]
   11110:	ldr	r0, [r0, #8]
   11114:	cmp	r0, #4
   11118:	beq	11150 <teste_lista_insere@@Base+0x238>
   1111c:	ldr	r0, [fp, #-8]
   11120:	cmp	r0, #0
   11124:	bne	11138 <teste_lista_insere@@Base+0x220>
   11128:	ldr	r0, [pc, #756]	; 11424 <teste_lista_insere@@Base+0x50c>
   1112c:	add	r0, pc, r0
   11130:	bl	10a70 <printf@plt>
   11134:	b	11144 <teste_lista_insere@@Base+0x22c>
   11138:	ldr	r0, [pc, #744]	; 11428 <teste_lista_insere@@Base+0x510>
   1113c:	add	r0, pc, r0
   11140:	bl	10a70 <printf@plt>
   11144:	ldr	r0, [fp, #-8]
   11148:	str	r0, [fp, #-4]
   1114c:	b	113c0 <teste_lista_insere@@Base+0x4a8>
   11150:	ldr	r0, [sp, #8]
   11154:	ldr	r0, [r0]
   11158:	ldr	r0, [r0]
   1115c:	ldr	r1, [sp, #12]
   11160:	bl	10a64 <strcmp@plt>
   11164:	cmp	r0, #0
   11168:	bne	111d8 <teste_lista_insere@@Base+0x2c0>
   1116c:	ldr	r0, [sp, #8]
   11170:	ldr	r0, [r0]
   11174:	ldr	r0, [r0, #4]
   11178:	ldr	r0, [r0]
   1117c:	ldr	r1, [sp, #16]
   11180:	bl	10a64 <strcmp@plt>
   11184:	cmp	r0, #0
   11188:	bne	111d8 <teste_lista_insere@@Base+0x2c0>
   1118c:	ldr	r0, [sp, #8]
   11190:	ldr	r0, [r0]
   11194:	ldr	r0, [r0, #4]
   11198:	ldr	r0, [r0, #4]
   1119c:	ldr	r0, [r0]
   111a0:	ldr	r1, [sp, #12]
   111a4:	bl	10a64 <strcmp@plt>
   111a8:	cmp	r0, #0
   111ac:	bne	111d8 <teste_lista_insere@@Base+0x2c0>
   111b0:	ldr	r0, [sp, #8]
   111b4:	ldr	r0, [r0]
   111b8:	ldr	r0, [r0, #4]
   111bc:	ldr	r0, [r0, #4]
   111c0:	ldr	r0, [r0, #4]
   111c4:	ldr	r0, [r0]
   111c8:	ldr	r1, [sp, #16]
   111cc:	bl	10a64 <strcmp@plt>
   111d0:	cmp	r0, #0
   111d4:	beq	111f0 <teste_lista_insere@@Base+0x2d8>
   111d8:	ldr	r0, [pc, #524]	; 113ec <teste_lista_insere@@Base+0x4d4>
   111dc:	add	r0, pc, r0
   111e0:	bl	10a70 <printf@plt>
   111e4:	ldr	r1, [fp, #-8]
   111e8:	add	r1, r1, #1
   111ec:	str	r1, [fp, #-8]
   111f0:	ldr	r0, [pc, #504]	; 113f0 <teste_lista_insere@@Base+0x4d8>
   111f4:	add	r1, pc, r0
   111f8:	ldr	r0, [sp, #8]
   111fc:	movw	r2, #0
   11200:	bl	12188 <lista_insere@@Base>
   11204:	ldr	r1, [sp, #8]
   11208:	ldr	r1, [r1, #8]
   1120c:	cmp	r1, #5
   11210:	beq	1122c <teste_lista_insere@@Base+0x314>
   11214:	ldr	r0, [pc, #472]	; 113f4 <teste_lista_insere@@Base+0x4dc>
   11218:	add	r0, pc, r0
   1121c:	bl	10a70 <printf@plt>
   11220:	ldr	r1, [fp, #-8]
   11224:	add	r1, r1, #1
   11228:	str	r1, [fp, #-8]
   1122c:	ldr	r0, [sp, #8]
   11230:	ldr	r0, [r0, #8]
   11234:	cmp	r0, #5
   11238:	beq	11270 <teste_lista_insere@@Base+0x358>
   1123c:	ldr	r0, [fp, #-8]
   11240:	cmp	r0, #0
   11244:	bne	11258 <teste_lista_insere@@Base+0x340>
   11248:	ldr	r0, [pc, #460]	; 1141c <teste_lista_insere@@Base+0x504>
   1124c:	add	r0, pc, r0
   11250:	bl	10a70 <printf@plt>
   11254:	b	11264 <teste_lista_insere@@Base+0x34c>
   11258:	ldr	r0, [pc, #448]	; 11420 <teste_lista_insere@@Base+0x508>
   1125c:	add	r0, pc, r0
   11260:	bl	10a70 <printf@plt>
   11264:	ldr	r0, [fp, #-8]
   11268:	str	r0, [fp, #-4]
   1126c:	b	113c0 <teste_lista_insere@@Base+0x4a8>
   11270:	ldr	r0, [sp, #8]
   11274:	ldr	r0, [r0]
   11278:	ldr	r0, [r0, #4]
   1127c:	ldr	r0, [r0, #4]
   11280:	ldr	r0, [r0, #4]
   11284:	ldr	r0, [r0, #4]
   11288:	ldr	r0, [r0]
   1128c:	ldr	r1, [pc, #416]	; 11434 <teste_lista_insere@@Base+0x51c>
   11290:	add	r1, pc, r1
   11294:	bl	10a64 <strcmp@plt>
   11298:	cmp	r0, #0
   1129c:	beq	112b8 <teste_lista_insere@@Base+0x3a0>
   112a0:	ldr	r0, [pc, #336]	; 113f8 <teste_lista_insere@@Base+0x4e0>
   112a4:	add	r0, pc, r0
   112a8:	bl	10a70 <printf@plt>
   112ac:	ldr	r1, [fp, #-8]
   112b0:	add	r1, r1, #1
   112b4:	str	r1, [fp, #-8]
   112b8:	ldr	r0, [sp, #8]
   112bc:	bl	1201c <lista_apaga@@Base>
   112c0:	ldr	r0, [pc, #312]	; 11400 <teste_lista_insere@@Base+0x4e8>
   112c4:	ldr	r0, [pc, r0]
   112c8:	blx	r0
   112cc:	ldr	r1, [pc, #296]	; 113fc <teste_lista_insere@@Base+0x4e4>
   112d0:	add	r1, pc, r1
   112d4:	str	r0, [sp, #8]
   112d8:	ldr	r0, [sp, #8]
   112dc:	movw	r2, #0
   112e0:	bl	12188 <lista_insere@@Base>
   112e4:	ldr	r1, [sp, #8]
   112e8:	ldr	r1, [r1, #8]
   112ec:	cmp	r1, #1
   112f0:	beq	1130c <teste_lista_insere@@Base+0x3f4>
   112f4:	ldr	r0, [pc, #264]	; 11404 <teste_lista_insere@@Base+0x4ec>
   112f8:	add	r0, pc, r0
   112fc:	bl	10a70 <printf@plt>
   11300:	ldr	r1, [fp, #-8]
   11304:	add	r1, r1, #1
   11308:	str	r1, [fp, #-8]
   1130c:	ldr	r0, [sp, #8]
   11310:	bl	120d4 <lista_tamanho@@Base>
   11314:	cmp	r0, #1
   11318:	beq	11350 <teste_lista_insere@@Base+0x438>
   1131c:	ldr	r0, [fp, #-8]
   11320:	cmp	r0, #0
   11324:	bne	11338 <teste_lista_insere@@Base+0x420>
   11328:	ldr	r0, [pc, #228]	; 11414 <teste_lista_insere@@Base+0x4fc>
   1132c:	add	r0, pc, r0
   11330:	bl	10a70 <printf@plt>
   11334:	b	11344 <teste_lista_insere@@Base+0x42c>
   11338:	ldr	r0, [pc, #216]	; 11418 <teste_lista_insere@@Base+0x500>
   1133c:	add	r0, pc, r0
   11340:	bl	10a70 <printf@plt>
   11344:	ldr	r0, [fp, #-8]
   11348:	str	r0, [fp, #-4]
   1134c:	b	113c0 <teste_lista_insere@@Base+0x4a8>
   11350:	ldr	r0, [sp, #8]
   11354:	ldr	r0, [r0]
   11358:	ldr	r0, [r0]
   1135c:	ldr	r1, [pc, #212]	; 11438 <teste_lista_insere@@Base+0x520>
   11360:	add	r1, pc, r1
   11364:	bl	10a64 <strcmp@plt>
   11368:	cmp	r0, #0
   1136c:	beq	11388 <teste_lista_insere@@Base+0x470>
   11370:	ldr	r0, [pc, #144]	; 11408 <teste_lista_insere@@Base+0x4f0>
   11374:	add	r0, pc, r0
   11378:	bl	10a70 <printf@plt>
   1137c:	ldr	r1, [fp, #-8]
   11380:	add	r1, r1, #1
   11384:	str	r1, [fp, #-8]
   11388:	ldr	r0, [sp, #8]
   1138c:	bl	1201c <lista_apaga@@Base>
   11390:	ldr	r0, [fp, #-8]
   11394:	cmp	r0, #0
   11398:	bne	113ac <teste_lista_insere@@Base+0x494>
   1139c:	ldr	r0, [pc, #104]	; 1140c <teste_lista_insere@@Base+0x4f4>
   113a0:	add	r0, pc, r0
   113a4:	bl	10a70 <printf@plt>
   113a8:	b	113b8 <teste_lista_insere@@Base+0x4a0>
   113ac:	ldr	r0, [pc, #92]	; 11410 <teste_lista_insere@@Base+0x4f8>
   113b0:	add	r0, pc, r0
   113b4:	bl	10a70 <printf@plt>
   113b8:	ldr	r0, [fp, #-8]
   113bc:	str	r0, [fp, #-4]
   113c0:	ldr	r0, [fp, #-4]
   113c4:	mov	sp, fp
   113c8:	pop	{fp, pc}
   113cc:	andeq	r1, r0, sl, ror #17
   113d0:	andeq	r1, r0, r4, lsl r9
   113d4:	andeq	r1, r0, r8, lsl #18
   113d8:	andeq	r1, r0, fp, lsr #17
   113dc:	andeq	r1, r0, sp, lsr #17
   113e0:	andeq	r1, r0, sp, lsr #16
   113e4:	andeq	r1, r0, pc, lsl r8
   113e8:	andeq	r1, r0, r7, lsr #16
   113ec:	ldrdeq	r1, [r0], -sp
   113f0:	andeq	r1, r0, r8, asr #12
   113f4:	andeq	r1, r0, r3, asr #14
   113f8:	andeq	r1, r0, r5, lsl r6
   113fc:	andeq	r1, r0, ip, ror #10
   11400:	andeq	r1, r1, ip, ror #26
   11404:	muleq	r0, pc, r6	; <UNPREDICTABLE>
   11408:	andeq	r1, r0, r5, asr #10
   1140c:	andeq	r1, r0, r1, ror r4
   11410:	andeq	r1, r0, r0, lsr #18
   11414:	andeq	r1, r0, r5, ror #9
   11418:	muleq	r0, r4, r9
   1141c:	andeq	r1, r0, r5, asr #11
   11420:	andeq	r1, r0, r4, ror sl
   11424:	andeq	r1, r0, r5, ror #13
   11428:	muleq	r0, r4, fp
   1142c:	andeq	r1, r0, sp, lsl #16
   11430:			; <UNDEFINED> instruction: 0x00001cbc
   11434:	andeq	r1, r0, ip, lsr #11
   11438:	ldrdeq	r1, [r0], -ip

0001143c <teste_lista_remove@@Base>:
   1143c:	push	{fp, lr}
   11440:	mov	fp, sp
   11444:	sub	sp, sp, #32
   11448:	ldr	r0, [pc, #512]	; 11650 <teste_lista_remove@@Base+0x214>
   1144c:	add	r1, pc, r0
   11450:	ldr	r0, [pc, #508]	; 11654 <teste_lista_remove@@Base+0x218>
   11454:	add	r2, pc, r0
   11458:	ldr	r0, [pc, #504]	; 11658 <teste_lista_remove@@Base+0x21c>
   1145c:	add	r3, pc, r0
   11460:	ldr	r0, [pc, #500]	; 1165c <teste_lista_remove@@Base+0x220>
   11464:	add	r0, pc, r0
   11468:	ldr	ip, [pc, #496]	; 11660 <teste_lista_remove@@Base+0x224>
   1146c:	add	ip, pc, ip
   11470:	movw	lr, #0
   11474:	str	lr, [fp, #-4]
   11478:	movw	lr, #5
   1147c:	str	r0, [sp, #16]
   11480:	mov	r0, lr
   11484:	ldr	lr, [sp, #16]
   11488:	str	lr, [sp]
   1148c:	str	ip, [sp, #4]
   11490:	bl	10bd8 <_l@@Base>
   11494:	ldr	r1, [pc, #432]	; 1164c <teste_lista_remove@@Base+0x210>
   11498:	add	r1, pc, r1
   1149c:	str	r0, [fp, #-12]
   114a0:	mov	r0, r1
   114a4:	bl	10a70 <printf@plt>
   114a8:	ldr	r1, [fp, #-12]
   114ac:	ldr	r2, [fp, #-12]
   114b0:	ldr	r2, [r2]
   114b4:	ldr	r2, [r2, #4]
   114b8:	ldr	r2, [r2, #4]
   114bc:	ldr	r2, [r2, #4]
   114c0:	str	r0, [sp, #12]
   114c4:	mov	r0, r1
   114c8:	mov	r1, r2
   114cc:	bl	12338 <lista_remove@@Base>
   114d0:	str	r0, [fp, #-8]
   114d4:	ldr	r0, [fp, #-8]
   114d8:	ldr	r1, [fp, #-12]
   114dc:	ldr	r1, [r1, #4]
   114e0:	cmp	r0, r1
   114e4:	beq	11500 <teste_lista_remove@@Base+0xc4>
   114e8:	ldr	r0, [pc, #372]	; 11664 <teste_lista_remove@@Base+0x228>
   114ec:	add	r0, pc, r0
   114f0:	bl	10a70 <printf@plt>
   114f4:	ldr	r1, [fp, #-4]
   114f8:	add	r1, r1, #1
   114fc:	str	r1, [fp, #-4]
   11500:	ldr	r0, [fp, #-12]
   11504:	ldr	r0, [r0, #8]
   11508:	cmp	r0, #4
   1150c:	beq	11528 <teste_lista_remove@@Base+0xec>
   11510:	ldr	r0, [pc, #336]	; 11668 <teste_lista_remove@@Base+0x22c>
   11514:	add	r0, pc, r0
   11518:	bl	10a70 <printf@plt>
   1151c:	ldr	r1, [fp, #-4]
   11520:	add	r1, r1, #1
   11524:	str	r1, [fp, #-4]
   11528:	ldr	r0, [fp, #-12]
   1152c:	ldr	r0, [r0]
   11530:	ldr	r0, [r0]
   11534:	ldr	r1, [pc, #320]	; 1167c <teste_lista_remove@@Base+0x240>
   11538:	add	r1, pc, r1
   1153c:	bl	10a64 <strcmp@plt>
   11540:	cmp	r0, #0
   11544:	bne	115c0 <teste_lista_remove@@Base+0x184>
   11548:	ldr	r0, [fp, #-12]
   1154c:	ldr	r0, [r0]
   11550:	ldr	r0, [r0, #4]
   11554:	ldr	r0, [r0]
   11558:	ldr	r1, [pc, #288]	; 11680 <teste_lista_remove@@Base+0x244>
   1155c:	add	r1, pc, r1
   11560:	bl	10a64 <strcmp@plt>
   11564:	cmp	r0, #0
   11568:	bne	115c0 <teste_lista_remove@@Base+0x184>
   1156c:	ldr	r0, [fp, #-12]
   11570:	ldr	r0, [r0]
   11574:	ldr	r0, [r0, #4]
   11578:	ldr	r0, [r0, #4]
   1157c:	ldr	r0, [r0]
   11580:	ldr	r1, [pc, #252]	; 11684 <teste_lista_remove@@Base+0x248>
   11584:	add	r1, pc, r1
   11588:	bl	10a64 <strcmp@plt>
   1158c:	cmp	r0, #0
   11590:	bne	115c0 <teste_lista_remove@@Base+0x184>
   11594:	ldr	r0, [fp, #-12]
   11598:	ldr	r0, [r0]
   1159c:	ldr	r0, [r0, #4]
   115a0:	ldr	r0, [r0, #4]
   115a4:	ldr	r0, [r0, #4]
   115a8:	ldr	r0, [r0]
   115ac:	ldr	r1, [pc, #212]	; 11688 <teste_lista_remove@@Base+0x24c>
   115b0:	add	r1, pc, r1
   115b4:	bl	10a64 <strcmp@plt>
   115b8:	cmp	r0, #0
   115bc:	beq	115d8 <teste_lista_remove@@Base+0x19c>
   115c0:	ldr	r0, [pc, #164]	; 1166c <teste_lista_remove@@Base+0x230>
   115c4:	add	r0, pc, r0
   115c8:	bl	10a70 <printf@plt>
   115cc:	ldr	r1, [fp, #-4]
   115d0:	add	r1, r1, #1
   115d4:	str	r1, [fp, #-4]
   115d8:	ldr	r0, [fp, #-12]
   115dc:	movw	r1, #0
   115e0:	bl	12338 <lista_remove@@Base>
   115e4:	str	r0, [fp, #-8]
   115e8:	ldr	r0, [fp, #-8]
   115ec:	movw	r1, #0
   115f0:	cmp	r0, r1
   115f4:	beq	11610 <teste_lista_remove@@Base+0x1d4>
   115f8:	ldr	r0, [pc, #112]	; 11670 <teste_lista_remove@@Base+0x234>
   115fc:	add	r0, pc, r0
   11600:	bl	10a70 <printf@plt>
   11604:	ldr	r1, [fp, #-4]
   11608:	add	r1, r1, #1
   1160c:	str	r1, [fp, #-4]
   11610:	ldr	r0, [fp, #-12]
   11614:	bl	1201c <lista_apaga@@Base>
   11618:	ldr	r0, [fp, #-4]
   1161c:	cmp	r0, #0
   11620:	bne	11634 <teste_lista_remove@@Base+0x1f8>
   11624:	ldr	r0, [pc, #72]	; 11674 <teste_lista_remove@@Base+0x238>
   11628:	add	r0, pc, r0
   1162c:	bl	10a70 <printf@plt>
   11630:	b	11640 <teste_lista_remove@@Base+0x204>
   11634:	ldr	r0, [pc, #60]	; 11678 <teste_lista_remove@@Base+0x23c>
   11638:	add	r0, pc, r0
   1163c:	bl	10a70 <printf@plt>
   11640:	ldr	r0, [fp, #-4]
   11644:	mov	sp, fp
   11648:	pop	{fp, pc}
   1164c:	andeq	r1, r0, sl, asr #10
   11650:	andeq	r1, r0, r7, lsl #11
   11654:	andeq	r1, r0, r2, lsl #11
   11658:	andeq	r1, r0, sp, ror r5
   1165c:	andeq	r1, r0, r8, ror r5
   11660:	andeq	r1, r0, r3, ror r5
   11664:	andeq	r1, r0, r7, lsl #10
   11668:	andeq	r1, r0, r8, lsl r5
   1166c:	andeq	r1, r0, r4, lsr #9
   11670:	andeq	r1, r0, r2, lsr #9
   11674:	andeq	r1, r0, r9, ror #3
   11678:	muleq	r0, r8, r6
   1167c:	muleq	r0, fp, r4
   11680:	andeq	r1, r0, sl, ror r4
   11684:	andeq	r1, r0, r5, asr r4
   11688:	andeq	r1, r0, pc, lsr #8

0001168c <teste_lista_pesquisa@@Base>:
   1168c:	push	{r4, r5, fp, lr}
   11690:	add	fp, sp, #8
   11694:	sub	sp, sp, #40	; 0x28
   11698:	ldr	r0, [pc, #448]	; 11860 <teste_lista_pesquisa@@Base+0x1d4>
   1169c:	add	r0, pc, r0
   116a0:	ldr	r1, [pc, #444]	; 11864 <teste_lista_pesquisa@@Base+0x1d8>
   116a4:	add	r1, pc, r1
   116a8:	movw	r2, #0
   116ac:	str	r2, [fp, #-12]
   116b0:	str	r1, [fp, #-16]
   116b4:	str	r0, [fp, #-20]	; 0xffffffec
   116b8:	ldr	r1, [fp, #-16]
   116bc:	ldr	r2, [fp, #-16]
   116c0:	ldr	r3, [fp, #-16]
   116c4:	ldr	r0, [fp, #-16]
   116c8:	ldr	ip, [fp, #-20]	; 0xffffffec
   116cc:	ldr	lr, [fp, #-16]
   116d0:	ldr	r4, [fp, #-16]
   116d4:	movw	r5, #7
   116d8:	str	r0, [sp, #20]
   116dc:	mov	r0, r5
   116e0:	ldr	r5, [sp, #20]
   116e4:	str	r5, [sp]
   116e8:	str	ip, [sp, #4]
   116ec:	str	lr, [sp, #8]
   116f0:	str	r4, [sp, #12]
   116f4:	bl	10bd8 <_l@@Base>
   116f8:	ldr	r1, [pc, #348]	; 1185c <teste_lista_pesquisa@@Base+0x1d0>
   116fc:	add	r1, pc, r1
   11700:	str	r0, [sp, #24]
   11704:	mov	r0, r1
   11708:	bl	10a70 <printf@plt>
   1170c:	ldr	r1, [sp, #24]
   11710:	ldr	r2, [fp, #-20]	; 0xffffffec
   11714:	str	r0, [sp, #16]
   11718:	mov	r0, r1
   1171c:	mov	r1, r2
   11720:	movw	r2, #0
   11724:	bl	1244c <lista_pesquisa@@Base>
   11728:	ldr	r1, [sp, #24]
   1172c:	ldr	r1, [r1]
   11730:	ldr	r1, [r1, #4]
   11734:	ldr	r1, [r1, #4]
   11738:	ldr	r1, [r1, #4]
   1173c:	ldr	r1, [r1, #4]
   11740:	cmp	r0, r1
   11744:	beq	11760 <teste_lista_pesquisa@@Base+0xd4>
   11748:	ldr	r0, [pc, #280]	; 11868 <teste_lista_pesquisa@@Base+0x1dc>
   1174c:	add	r0, pc, r0
   11750:	bl	10a70 <printf@plt>
   11754:	ldr	r1, [fp, #-12]
   11758:	add	r1, r1, #1
   1175c:	str	r1, [fp, #-12]
   11760:	ldr	r0, [pc, #260]	; 1186c <teste_lista_pesquisa@@Base+0x1e0>
   11764:	add	r1, pc, r0
   11768:	ldr	r0, [sp, #24]
   1176c:	movw	r2, #0
   11770:	bl	1244c <lista_pesquisa@@Base>
   11774:	movw	r1, #0
   11778:	cmp	r0, r1
   1177c:	beq	11798 <teste_lista_pesquisa@@Base+0x10c>
   11780:	ldr	r0, [pc, #232]	; 11870 <teste_lista_pesquisa@@Base+0x1e4>
   11784:	add	r0, pc, r0
   11788:	bl	10a70 <printf@plt>
   1178c:	ldr	r1, [fp, #-12]
   11790:	add	r1, r1, #1
   11794:	str	r1, [fp, #-12]
   11798:	ldr	r0, [sp, #24]
   1179c:	ldr	r1, [fp, #-16]
   117a0:	movw	r2, #1
   117a4:	bl	1244c <lista_pesquisa@@Base>
   117a8:	ldr	r1, [sp, #24]
   117ac:	ldr	r1, [r1]
   117b0:	ldr	r1, [r1, #4]
   117b4:	ldr	r1, [r1, #4]
   117b8:	ldr	r1, [r1, #4]
   117bc:	ldr	r1, [r1, #4]
   117c0:	ldr	r1, [r1, #4]
   117c4:	ldr	r1, [r1, #4]
   117c8:	cmp	r0, r1
   117cc:	beq	117e8 <teste_lista_pesquisa@@Base+0x15c>
   117d0:	ldr	r0, [pc, #156]	; 11874 <teste_lista_pesquisa@@Base+0x1e8>
   117d4:	add	r0, pc, r0
   117d8:	bl	10a70 <printf@plt>
   117dc:	ldr	r1, [fp, #-12]
   117e0:	add	r1, r1, #1
   117e4:	str	r1, [fp, #-12]
   117e8:	ldr	r0, [pc, #136]	; 11878 <teste_lista_pesquisa@@Base+0x1ec>
   117ec:	add	r1, pc, r0
   117f0:	ldr	r0, [sp, #24]
   117f4:	movw	r2, #1
   117f8:	bl	1244c <lista_pesquisa@@Base>
   117fc:	movw	r1, #0
   11800:	cmp	r0, r1
   11804:	beq	11820 <teste_lista_pesquisa@@Base+0x194>
   11808:	ldr	r0, [pc, #108]	; 1187c <teste_lista_pesquisa@@Base+0x1f0>
   1180c:	add	r0, pc, r0
   11810:	bl	10a70 <printf@plt>
   11814:	ldr	r1, [fp, #-12]
   11818:	add	r1, r1, #1
   1181c:	str	r1, [fp, #-12]
   11820:	ldr	r0, [sp, #24]
   11824:	bl	1201c <lista_apaga@@Base>
   11828:	ldr	r0, [fp, #-12]
   1182c:	cmp	r0, #0
   11830:	bne	11844 <teste_lista_pesquisa@@Base+0x1b8>
   11834:	ldr	r0, [pc, #68]	; 11880 <teste_lista_pesquisa@@Base+0x1f4>
   11838:	add	r0, pc, r0
   1183c:	bl	10a70 <printf@plt>
   11840:	b	11850 <teste_lista_pesquisa@@Base+0x1c4>
   11844:	ldr	r0, [pc, #56]	; 11884 <teste_lista_pesquisa@@Base+0x1f8>
   11848:	add	r0, pc, r0
   1184c:	bl	10a70 <printf@plt>
   11850:	ldr	r0, [fp, #-12]
   11854:	sub	sp, fp, #8
   11858:	pop	{r4, r5, fp, pc}
   1185c:	ldrdeq	r1, [r0], -r7
   11860:	andeq	r1, r0, r4, lsr r4
   11864:	muleq	r0, r4, r1
   11868:	muleq	r0, sl, r3
   1186c:	andeq	r1, r0, r9, asr #7
   11870:			; <UNDEFINED> instruction: 0x000013b0
   11874:	andeq	r1, r0, r2, lsl r3
   11878:	andeq	r1, r0, r1, asr #6
   1187c:	andeq	r1, r0, r8, lsr #6
   11880:	ldrdeq	r0, [r0], -r9
   11884:	andeq	r1, r0, r8, lsl #9

00011888 <teste_lista_ordena@@Base>:
   11888:	push	{fp, lr}
   1188c:	mov	fp, sp
   11890:	sub	sp, sp, #32
   11894:	ldr	r0, [pc, #676]	; 11b40 <teste_lista_ordena@@Base+0x2b8>
   11898:	add	r1, pc, r0
   1189c:	ldr	r0, [pc, #672]	; 11b44 <teste_lista_ordena@@Base+0x2bc>
   118a0:	add	r2, pc, r0
   118a4:	ldr	r0, [pc, #668]	; 11b48 <teste_lista_ordena@@Base+0x2c0>
   118a8:	add	r3, pc, r0
   118ac:	ldr	r0, [pc, #664]	; 11b4c <teste_lista_ordena@@Base+0x2c4>
   118b0:	add	r0, pc, r0
   118b4:	ldr	ip, [pc, #660]	; 11b50 <teste_lista_ordena@@Base+0x2c8>
   118b8:	add	ip, pc, ip
   118bc:	movw	lr, #0
   118c0:	str	lr, [fp, #-4]
   118c4:	movw	lr, #5
   118c8:	str	r0, [sp, #16]
   118cc:	mov	r0, lr
   118d0:	ldr	lr, [sp, #16]
   118d4:	str	lr, [sp]
   118d8:	str	ip, [sp, #4]
   118dc:	bl	10bd8 <_l@@Base>
   118e0:	ldr	r1, [pc, #596]	; 11b3c <teste_lista_ordena@@Base+0x2b4>
   118e4:	add	r1, pc, r1
   118e8:	str	r0, [fp, #-12]
   118ec:	mov	r0, r1
   118f0:	bl	10a70 <printf@plt>
   118f4:	movw	r1, #0
   118f8:	str	r0, [sp, #12]
   118fc:	mov	r0, r1
   11900:	bl	12588 <lista_ordena@@Base>
   11904:	str	r0, [fp, #-8]
   11908:	ldr	r0, [fp, #-8]
   1190c:	cmn	r0, #1
   11910:	beq	1192c <teste_lista_ordena@@Base+0xa4>
   11914:	ldr	r0, [pc, #568]	; 11b54 <teste_lista_ordena@@Base+0x2cc>
   11918:	add	r0, pc, r0
   1191c:	bl	10a70 <printf@plt>
   11920:	ldr	r1, [fp, #-4]
   11924:	add	r1, r1, #1
   11928:	str	r1, [fp, #-4]
   1192c:	ldr	r0, [fp, #-12]
   11930:	bl	12588 <lista_ordena@@Base>
   11934:	ldr	r1, [fp, #-12]
   11938:	ldr	r1, [r1]
   1193c:	ldr	r1, [r1]
   11940:	ldr	r2, [pc, #544]	; 11b68 <teste_lista_ordena@@Base+0x2e0>
   11944:	add	r2, pc, r2
   11948:	str	r0, [sp, #8]
   1194c:	mov	r0, r1
   11950:	mov	r1, r2
   11954:	bl	10a64 <strcmp@plt>
   11958:	cmp	r0, #0
   1195c:	bne	11a08 <teste_lista_ordena@@Base+0x180>
   11960:	ldr	r0, [fp, #-12]
   11964:	ldr	r0, [r0]
   11968:	ldr	r0, [r0, #4]
   1196c:	ldr	r0, [r0]
   11970:	ldr	r1, [pc, #500]	; 11b6c <teste_lista_ordena@@Base+0x2e4>
   11974:	add	r1, pc, r1
   11978:	bl	10a64 <strcmp@plt>
   1197c:	cmp	r0, #0
   11980:	bne	11a08 <teste_lista_ordena@@Base+0x180>
   11984:	ldr	r0, [fp, #-12]
   11988:	ldr	r0, [r0]
   1198c:	ldr	r0, [r0, #4]
   11990:	ldr	r0, [r0, #4]
   11994:	ldr	r0, [r0]
   11998:	ldr	r1, [pc, #464]	; 11b70 <teste_lista_ordena@@Base+0x2e8>
   1199c:	add	r1, pc, r1
   119a0:	bl	10a64 <strcmp@plt>
   119a4:	cmp	r0, #0
   119a8:	bne	11a08 <teste_lista_ordena@@Base+0x180>
   119ac:	ldr	r0, [fp, #-12]
   119b0:	ldr	r0, [r0]
   119b4:	ldr	r0, [r0, #4]
   119b8:	ldr	r0, [r0, #4]
   119bc:	ldr	r0, [r0, #4]
   119c0:	ldr	r0, [r0]
   119c4:	ldr	r1, [pc, #424]	; 11b74 <teste_lista_ordena@@Base+0x2ec>
   119c8:	add	r1, pc, r1
   119cc:	bl	10a64 <strcmp@plt>
   119d0:	cmp	r0, #0
   119d4:	bne	11a08 <teste_lista_ordena@@Base+0x180>
   119d8:	ldr	r0, [fp, #-12]
   119dc:	ldr	r0, [r0]
   119e0:	ldr	r0, [r0, #4]
   119e4:	ldr	r0, [r0, #4]
   119e8:	ldr	r0, [r0, #4]
   119ec:	ldr	r0, [r0, #4]
   119f0:	ldr	r0, [r0]
   119f4:	ldr	r1, [pc, #380]	; 11b78 <teste_lista_ordena@@Base+0x2f0>
   119f8:	add	r1, pc, r1
   119fc:	bl	10a64 <strcmp@plt>
   11a00:	cmp	r0, #0
   11a04:	beq	11a20 <teste_lista_ordena@@Base+0x198>
   11a08:	ldr	r0, [pc, #328]	; 11b58 <teste_lista_ordena@@Base+0x2d0>
   11a0c:	add	r0, pc, r0
   11a10:	bl	10a70 <printf@plt>
   11a14:	ldr	r1, [fp, #-4]
   11a18:	add	r1, r1, #1
   11a1c:	str	r1, [fp, #-4]
   11a20:	ldr	r0, [fp, #-12]
   11a24:	ldr	r0, [r0, #4]
   11a28:	ldr	r0, [r0]
   11a2c:	ldr	r1, [pc, #328]	; 11b7c <teste_lista_ordena@@Base+0x2f4>
   11a30:	add	r1, pc, r1
   11a34:	bl	10a64 <strcmp@plt>
   11a38:	cmp	r0, #0
   11a3c:	bne	11ae8 <teste_lista_ordena@@Base+0x260>
   11a40:	ldr	r0, [fp, #-12]
   11a44:	ldr	r0, [r0, #4]
   11a48:	ldr	r0, [r0, #8]
   11a4c:	ldr	r0, [r0]
   11a50:	ldr	r1, [pc, #296]	; 11b80 <teste_lista_ordena@@Base+0x2f8>
   11a54:	add	r1, pc, r1
   11a58:	bl	10a64 <strcmp@plt>
   11a5c:	cmp	r0, #0
   11a60:	bne	11ae8 <teste_lista_ordena@@Base+0x260>
   11a64:	ldr	r0, [fp, #-12]
   11a68:	ldr	r0, [r0, #4]
   11a6c:	ldr	r0, [r0, #8]
   11a70:	ldr	r0, [r0, #8]
   11a74:	ldr	r0, [r0]
   11a78:	ldr	r1, [pc, #260]	; 11b84 <teste_lista_ordena@@Base+0x2fc>
   11a7c:	add	r1, pc, r1
   11a80:	bl	10a64 <strcmp@plt>
   11a84:	cmp	r0, #0
   11a88:	bne	11ae8 <teste_lista_ordena@@Base+0x260>
   11a8c:	ldr	r0, [fp, #-12]
   11a90:	ldr	r0, [r0, #4]
   11a94:	ldr	r0, [r0, #8]
   11a98:	ldr	r0, [r0, #8]
   11a9c:	ldr	r0, [r0, #8]
   11aa0:	ldr	r0, [r0]
   11aa4:	ldr	r1, [pc, #220]	; 11b88 <teste_lista_ordena@@Base+0x300>
   11aa8:	add	r1, pc, r1
   11aac:	bl	10a64 <strcmp@plt>
   11ab0:	cmp	r0, #0
   11ab4:	bne	11ae8 <teste_lista_ordena@@Base+0x260>
   11ab8:	ldr	r0, [fp, #-12]
   11abc:	ldr	r0, [r0, #4]
   11ac0:	ldr	r0, [r0, #8]
   11ac4:	ldr	r0, [r0, #8]
   11ac8:	ldr	r0, [r0, #8]
   11acc:	ldr	r0, [r0, #8]
   11ad0:	ldr	r0, [r0]
   11ad4:	ldr	r1, [pc, #176]	; 11b8c <teste_lista_ordena@@Base+0x304>
   11ad8:	add	r1, pc, r1
   11adc:	bl	10a64 <strcmp@plt>
   11ae0:	cmp	r0, #0
   11ae4:	beq	11b00 <teste_lista_ordena@@Base+0x278>
   11ae8:	ldr	r0, [pc, #108]	; 11b5c <teste_lista_ordena@@Base+0x2d4>
   11aec:	add	r0, pc, r0
   11af0:	bl	10a70 <printf@plt>
   11af4:	ldr	r1, [fp, #-4]
   11af8:	add	r1, r1, #1
   11afc:	str	r1, [fp, #-4]
   11b00:	ldr	r0, [fp, #-12]
   11b04:	bl	1201c <lista_apaga@@Base>
   11b08:	ldr	r0, [fp, #-4]
   11b0c:	cmp	r0, #0
   11b10:	bne	11b24 <teste_lista_ordena@@Base+0x29c>
   11b14:	ldr	r0, [pc, #68]	; 11b60 <teste_lista_ordena@@Base+0x2d8>
   11b18:	add	r0, pc, r0
   11b1c:	bl	10a70 <printf@plt>
   11b20:	b	11b30 <teste_lista_ordena@@Base+0x2a8>
   11b24:	ldr	r0, [pc, #56]	; 11b64 <teste_lista_ordena@@Base+0x2dc>
   11b28:	add	r0, pc, r0
   11b2c:	bl	10a70 <printf@plt>
   11b30:	ldr	r0, [fp, #-4]
   11b34:	mov	sp, fp
   11b38:	pop	{fp, pc}
   11b3c:	muleq	r0, pc, r2	; <UNPREDICTABLE>
   11b40:	ldrdeq	r1, [r0], -ip
   11b44:	ldrdeq	r1, [r0], -r7
   11b48:	ldrdeq	r1, [r0], -r2
   11b4c:	andeq	r1, r0, sp, asr #5
   11b50:	andeq	r1, r0, r8, asr #5
   11b54:	andeq	r1, r0, ip, ror r2
   11b58:			; <UNDEFINED> instruction: 0x000011b6
   11b5c:	andeq	r1, r0, r3, lsl r1
   11b60:	strdeq	r0, [r0], -r9
   11b64:	andeq	r1, r0, r8, lsr #3
   11b68:	andeq	r1, r0, r0, lsr r2
   11b6c:	andeq	r1, r0, r3, lsl #4
   11b70:	andeq	r1, r0, r1, ror #3
   11b74:			; <UNDEFINED> instruction: 0x000011b8
   11b78:	andeq	r1, r0, r2, lsl #3
   11b7c:	andeq	r1, r0, sl, asr #2
   11b80:	andeq	r1, r0, ip, lsr #2
   11b84:	andeq	r1, r0, r1, lsl #2
   11b88:	andeq	r1, r0, pc, asr #1
   11b8c:	muleq	r0, ip, r0

00011b90 <teste_lista_inverte@@Base>:
   11b90:	push	{fp, lr}
   11b94:	mov	fp, sp
   11b98:	sub	sp, sp, #32
   11b9c:	ldr	r0, [pc, #708]	; 11e68 <teste_lista_inverte@@Base+0x2d8>
   11ba0:	add	r1, pc, r0
   11ba4:	ldr	r0, [pc, #704]	; 11e6c <teste_lista_inverte@@Base+0x2dc>
   11ba8:	add	r2, pc, r0
   11bac:	ldr	r0, [pc, #700]	; 11e70 <teste_lista_inverte@@Base+0x2e0>
   11bb0:	add	r3, pc, r0
   11bb4:	ldr	r0, [pc, #696]	; 11e74 <teste_lista_inverte@@Base+0x2e4>
   11bb8:	add	r0, pc, r0
   11bbc:	ldr	ip, [pc, #692]	; 11e78 <teste_lista_inverte@@Base+0x2e8>
   11bc0:	add	ip, pc, ip
   11bc4:	movw	lr, #0
   11bc8:	str	lr, [fp, #-4]
   11bcc:	movw	lr, #5
   11bd0:	str	r0, [sp, #16]
   11bd4:	mov	r0, lr
   11bd8:	ldr	lr, [sp, #16]
   11bdc:	str	lr, [sp]
   11be0:	str	ip, [sp, #4]
   11be4:	bl	10bd8 <_l@@Base>
   11be8:	ldr	r1, [pc, #628]	; 11e64 <teste_lista_inverte@@Base+0x2d4>
   11bec:	add	r1, pc, r1
   11bf0:	str	r0, [fp, #-12]
   11bf4:	mov	r0, r1
   11bf8:	bl	10a70 <printf@plt>
   11bfc:	movw	r1, #0
   11c00:	str	r0, [sp, #12]
   11c04:	mov	r0, r1
   11c08:	bl	12690 <lista_inverte@@Base>
   11c0c:	str	r0, [fp, #-8]
   11c10:	ldr	r0, [fp, #-8]
   11c14:	cmn	r0, #1
   11c18:	beq	11c34 <teste_lista_inverte@@Base+0xa4>
   11c1c:	ldr	r0, [pc, #600]	; 11e7c <teste_lista_inverte@@Base+0x2ec>
   11c20:	add	r0, pc, r0
   11c24:	bl	10a70 <printf@plt>
   11c28:	ldr	r1, [fp, #-4]
   11c2c:	add	r1, r1, #1
   11c30:	str	r1, [fp, #-4]
   11c34:	ldr	r0, [fp, #-12]
   11c38:	bl	12690 <lista_inverte@@Base>
   11c3c:	str	r0, [fp, #-8]
   11c40:	ldr	r0, [fp, #-12]
   11c44:	ldr	r0, [r0, #8]
   11c48:	cmp	r0, #5
   11c4c:	beq	11c68 <teste_lista_inverte@@Base+0xd8>
   11c50:	ldr	r0, [pc, #552]	; 11e80 <teste_lista_inverte@@Base+0x2f0>
   11c54:	add	r0, pc, r0
   11c58:	bl	10a70 <printf@plt>
   11c5c:	ldr	r1, [fp, #-4]
   11c60:	add	r1, r1, #1
   11c64:	str	r1, [fp, #-4]
   11c68:	ldr	r0, [fp, #-12]
   11c6c:	ldr	r0, [r0]
   11c70:	ldr	r0, [r0]
   11c74:	ldr	r1, [pc, #536]	; 11e94 <teste_lista_inverte@@Base+0x304>
   11c78:	add	r1, pc, r1
   11c7c:	bl	10a64 <strcmp@plt>
   11c80:	cmp	r0, #0
   11c84:	bne	11d30 <teste_lista_inverte@@Base+0x1a0>
   11c88:	ldr	r0, [fp, #-12]
   11c8c:	ldr	r0, [r0]
   11c90:	ldr	r0, [r0, #4]
   11c94:	ldr	r0, [r0]
   11c98:	ldr	r1, [pc, #504]	; 11e98 <teste_lista_inverte@@Base+0x308>
   11c9c:	add	r1, pc, r1
   11ca0:	bl	10a64 <strcmp@plt>
   11ca4:	cmp	r0, #0
   11ca8:	bne	11d30 <teste_lista_inverte@@Base+0x1a0>
   11cac:	ldr	r0, [fp, #-12]
   11cb0:	ldr	r0, [r0]
   11cb4:	ldr	r0, [r0, #4]
   11cb8:	ldr	r0, [r0, #4]
   11cbc:	ldr	r0, [r0]
   11cc0:	ldr	r1, [pc, #468]	; 11e9c <teste_lista_inverte@@Base+0x30c>
   11cc4:	add	r1, pc, r1
   11cc8:	bl	10a64 <strcmp@plt>
   11ccc:	cmp	r0, #0
   11cd0:	bne	11d30 <teste_lista_inverte@@Base+0x1a0>
   11cd4:	ldr	r0, [fp, #-12]
   11cd8:	ldr	r0, [r0]
   11cdc:	ldr	r0, [r0, #4]
   11ce0:	ldr	r0, [r0, #4]
   11ce4:	ldr	r0, [r0, #4]
   11ce8:	ldr	r0, [r0]
   11cec:	ldr	r1, [pc, #428]	; 11ea0 <teste_lista_inverte@@Base+0x310>
   11cf0:	add	r1, pc, r1
   11cf4:	bl	10a64 <strcmp@plt>
   11cf8:	cmp	r0, #0
   11cfc:	bne	11d30 <teste_lista_inverte@@Base+0x1a0>
   11d00:	ldr	r0, [fp, #-12]
   11d04:	ldr	r0, [r0]
   11d08:	ldr	r0, [r0, #4]
   11d0c:	ldr	r0, [r0, #4]
   11d10:	ldr	r0, [r0, #4]
   11d14:	ldr	r0, [r0, #4]
   11d18:	ldr	r0, [r0]
   11d1c:	ldr	r1, [pc, #384]	; 11ea4 <teste_lista_inverte@@Base+0x314>
   11d20:	add	r1, pc, r1
   11d24:	bl	10a64 <strcmp@plt>
   11d28:	cmp	r0, #0
   11d2c:	beq	11d48 <teste_lista_inverte@@Base+0x1b8>
   11d30:	ldr	r0, [pc, #332]	; 11e84 <teste_lista_inverte@@Base+0x2f4>
   11d34:	add	r0, pc, r0
   11d38:	bl	10a70 <printf@plt>
   11d3c:	ldr	r1, [fp, #-4]
   11d40:	add	r1, r1, #1
   11d44:	str	r1, [fp, #-4]
   11d48:	ldr	r0, [fp, #-12]
   11d4c:	ldr	r0, [r0, #4]
   11d50:	ldr	r0, [r0]
   11d54:	ldr	r1, [pc, #332]	; 11ea8 <teste_lista_inverte@@Base+0x318>
   11d58:	add	r1, pc, r1
   11d5c:	bl	10a64 <strcmp@plt>
   11d60:	cmp	r0, #0
   11d64:	bne	11e10 <teste_lista_inverte@@Base+0x280>
   11d68:	ldr	r0, [fp, #-12]
   11d6c:	ldr	r0, [r0, #4]
   11d70:	ldr	r0, [r0, #8]
   11d74:	ldr	r0, [r0]
   11d78:	ldr	r1, [pc, #300]	; 11eac <teste_lista_inverte@@Base+0x31c>
   11d7c:	add	r1, pc, r1
   11d80:	bl	10a64 <strcmp@plt>
   11d84:	cmp	r0, #0
   11d88:	bne	11e10 <teste_lista_inverte@@Base+0x280>
   11d8c:	ldr	r0, [fp, #-12]
   11d90:	ldr	r0, [r0, #4]
   11d94:	ldr	r0, [r0, #8]
   11d98:	ldr	r0, [r0, #8]
   11d9c:	ldr	r0, [r0]
   11da0:	ldr	r1, [pc, #264]	; 11eb0 <teste_lista_inverte@@Base+0x320>
   11da4:	add	r1, pc, r1
   11da8:	bl	10a64 <strcmp@plt>
   11dac:	cmp	r0, #0
   11db0:	bne	11e10 <teste_lista_inverte@@Base+0x280>
   11db4:	ldr	r0, [fp, #-12]
   11db8:	ldr	r0, [r0, #4]
   11dbc:	ldr	r0, [r0, #8]
   11dc0:	ldr	r0, [r0, #8]
   11dc4:	ldr	r0, [r0, #8]
   11dc8:	ldr	r0, [r0]
   11dcc:	ldr	r1, [pc, #224]	; 11eb4 <teste_lista_inverte@@Base+0x324>
   11dd0:	add	r1, pc, r1
   11dd4:	bl	10a64 <strcmp@plt>
   11dd8:	cmp	r0, #0
   11ddc:	bne	11e10 <teste_lista_inverte@@Base+0x280>
   11de0:	ldr	r0, [fp, #-12]
   11de4:	ldr	r0, [r0, #4]
   11de8:	ldr	r0, [r0, #8]
   11dec:	ldr	r0, [r0, #8]
   11df0:	ldr	r0, [r0, #8]
   11df4:	ldr	r0, [r0, #8]
   11df8:	ldr	r0, [r0]
   11dfc:	ldr	r1, [pc, #180]	; 11eb8 <teste_lista_inverte@@Base+0x328>
   11e00:	add	r1, pc, r1
   11e04:	bl	10a64 <strcmp@plt>
   11e08:	cmp	r0, #0
   11e0c:	beq	11e28 <teste_lista_inverte@@Base+0x298>
   11e10:	ldr	r0, [pc, #112]	; 11e88 <teste_lista_inverte@@Base+0x2f8>
   11e14:	add	r0, pc, r0
   11e18:	bl	10a70 <printf@plt>
   11e1c:	ldr	r1, [fp, #-4]
   11e20:	add	r1, r1, #1
   11e24:	str	r1, [fp, #-4]
   11e28:	ldr	r0, [fp, #-12]
   11e2c:	bl	1201c <lista_apaga@@Base>
   11e30:	ldr	r0, [fp, #-4]
   11e34:	cmp	r0, #0
   11e38:	bne	11e4c <teste_lista_inverte@@Base+0x2bc>
   11e3c:	ldr	r0, [pc, #72]	; 11e8c <teste_lista_inverte@@Base+0x2fc>
   11e40:	add	r0, pc, r0
   11e44:	bl	10a70 <printf@plt>
   11e48:	b	11e58 <teste_lista_inverte@@Base+0x2c8>
   11e4c:	ldr	r0, [pc, #60]	; 11e90 <teste_lista_inverte@@Base+0x300>
   11e50:	add	r0, pc, r0
   11e54:	bl	10a70 <printf@plt>
   11e58:	ldr	r0, [fp, #-4]
   11e5c:	mov	sp, fp
   11e60:	pop	{fp, pc}
   11e64:	andeq	r1, r0, r1, asr r0
   11e68:	ldrdeq	r0, [r0], -r4
   11e6c:	andeq	r0, r0, pc, asr #31
   11e70:	andeq	r0, r0, sl, asr #31
   11e74:	andeq	r0, r0, r5, asr #31
   11e78:	andeq	r0, r0, r0, asr #31
   11e7c:	andeq	r0, r0, r4, ror pc
   11e80:	strdeq	r0, [r0], -fp
   11e84:	andeq	r0, r0, r7, asr #30
   11e88:	andeq	r0, r0, fp, ror #27
   11e8c:	ldrdeq	r0, [r0], -r1
   11e90:	andeq	r0, r0, r0, lsl #29
   11e94:	andeq	r0, r0, r8, lsl #30
   11e98:	andeq	r0, r0, r1, ror #29
   11e9c:			; <UNDEFINED> instruction: 0x00000eb6
   11ea0:	andeq	r0, r0, r7, lsl #29
   11ea4:	andeq	r0, r0, r4, asr lr
   11ea8:	andeq	r0, r0, ip, lsl lr
   11eac:	strdeq	r0, [r0], -fp
   11eb0:	ldrdeq	r0, [r0], -r6
   11eb4:	andeq	r0, r0, sp, lsr #27
   11eb8:	andeq	r0, r0, r0, lsl #27

00011ebc <main@@Base>:
   11ebc:	push	{fp, lr}
   11ec0:	mov	fp, sp
   11ec4:	sub	sp, sp, #24
   11ec8:	ldr	r0, [pc, #236]	; 11fbc <main@@Base+0x100>
   11ecc:	ldr	r0, [pc, r0]
   11ed0:	movw	r1, #0
   11ed4:	str	r1, [fp, #-4]
   11ed8:	ldr	r0, [r0]
   11edc:	str	r1, [sp, #12]
   11ee0:	movw	r2, #2
   11ee4:	ldr	r3, [sp, #12]
   11ee8:	bl	10ad0 <setvbuf@plt>
   11eec:	ldr	r1, [pc, #196]	; 11fb8 <main@@Base+0xfc>
   11ef0:	ldr	r1, [pc, r1]
   11ef4:	ldr	r1, [r1]
   11ef8:	str	r0, [sp, #8]
   11efc:	mov	r0, r1
   11f00:	movw	r1, #0
   11f04:	str	r1, [sp, #4]
   11f08:	movw	r2, #2
   11f0c:	ldr	r3, [sp, #4]
   11f10:	bl	10ad0 <setvbuf@plt>
   11f14:	movw	r1, #0
   11f18:	str	r1, [fp, #-8]
   11f1c:	str	r0, [sp]
   11f20:	bl	10dfc <teste_lista_nova@@Base>
   11f24:	ldr	r1, [fp, #-8]
   11f28:	add	r0, r1, r0
   11f2c:	str	r0, [fp, #-8]
   11f30:	bl	10f18 <teste_lista_insere@@Base>
   11f34:	ldr	r1, [fp, #-8]
   11f38:	add	r0, r1, r0
   11f3c:	str	r0, [fp, #-8]
   11f40:	bl	1143c <teste_lista_remove@@Base>
   11f44:	ldr	r1, [fp, #-8]
   11f48:	add	r0, r1, r0
   11f4c:	str	r0, [fp, #-8]
   11f50:	bl	1168c <teste_lista_pesquisa@@Base>
   11f54:	ldr	r1, [fp, #-8]
   11f58:	add	r0, r1, r0
   11f5c:	str	r0, [fp, #-8]
   11f60:	bl	11888 <teste_lista_ordena@@Base>
   11f64:	ldr	r1, [fp, #-8]
   11f68:	add	r0, r1, r0
   11f6c:	str	r0, [fp, #-8]
   11f70:	bl	11b90 <teste_lista_inverte@@Base>
   11f74:	ldr	r1, [fp, #-8]
   11f78:	add	r0, r1, r0
   11f7c:	str	r0, [fp, #-8]
   11f80:	ldr	r0, [fp, #-8]
   11f84:	cmp	r0, #0
   11f88:	bne	11f9c <main@@Base+0xe0>
   11f8c:	ldr	r0, [pc, #44]	; 11fc0 <main@@Base+0x104>
   11f90:	add	r0, pc, r0
   11f94:	bl	10a70 <printf@plt>
   11f98:	b	11fac <main@@Base+0xf0>
   11f9c:	ldr	r0, [pc, #32]	; 11fc4 <main@@Base+0x108>
   11fa0:	add	r0, pc, r0
   11fa4:	ldr	r1, [fp, #-8]
   11fa8:	bl	10a70 <printf@plt>
   11fac:	movw	r0, #0
   11fb0:	mov	sp, fp
   11fb4:	pop	{fp, pc}
   11fb8:	andeq	r1, r1, r4, asr #2
   11fbc:	andeq	r1, r1, r0, ror r1
   11fc0:	andeq	r0, r0, r9, lsr #26
   11fc4:	andeq	r0, r0, r2, lsr sp

00011fc8 <lista_nova@@Base>:
   11fc8:	push	{fp, lr}
   11fcc:	mov	fp, sp
   11fd0:	sub	sp, sp, #8
   11fd4:	movw	r0, #12
   11fd8:	bl	10aa0 <malloc@plt>
   11fdc:	str	r0, [sp]
   11fe0:	ldr	r0, [sp]
   11fe4:	movw	r1, #0
   11fe8:	cmp	r0, r1
   11fec:	bne	11ffc <lista_nova@@Base+0x34>
   11ff0:	movw	r0, #0
   11ff4:	str	r0, [sp, #4]
   11ff8:	b	12010 <lista_nova@@Base+0x48>
   11ffc:	ldr	r0, [sp]
   12000:	movw	r1, #0
   12004:	str	r1, [r0, #8]
   12008:	ldr	r0, [sp]
   1200c:	str	r0, [sp, #4]
   12010:	ldr	r0, [sp, #4]
   12014:	mov	sp, fp
   12018:	pop	{fp, pc}

0001201c <lista_apaga@@Base>:
   1201c:	push	{fp, lr}
   12020:	mov	fp, sp
   12024:	sub	sp, sp, #16
   12028:	str	r0, [fp, #-4]
   1202c:	ldr	r0, [fp, #-4]
   12030:	movw	r1, #0
   12034:	cmp	r0, r1
   12038:	bne	12040 <lista_apaga@@Base+0x24>
   1203c:	b	120cc <lista_apaga@@Base+0xb0>
   12040:	ldr	r0, [fp, #-4]
   12044:	bl	120d4 <lista_tamanho@@Base>
   12048:	cmp	r0, #0
   1204c:	bne	1205c <lista_apaga@@Base+0x40>
   12050:	ldr	r0, [fp, #-4]
   12054:	bl	10a7c <free@plt>
   12058:	b	120cc <lista_apaga@@Base+0xb0>
   1205c:	ldr	r0, [fp, #-4]
   12060:	ldr	r0, [r0]
   12064:	str	r0, [sp, #8]
   12068:	ldr	r0, [sp, #8]
   1206c:	movw	r1, #0
   12070:	cmp	r0, r1
   12074:	beq	120c4 <lista_apaga@@Base+0xa8>
   12078:	ldr	r0, [sp, #8]
   1207c:	ldr	r0, [r0, #4]
   12080:	str	r0, [sp, #4]
   12084:	ldr	r0, [sp, #4]
   12088:	movw	r1, #0
   1208c:	cmp	r0, r1
   12090:	beq	120c0 <lista_apaga@@Base+0xa4>
   12094:	ldr	r0, [sp, #8]
   12098:	ldr	r0, [r0, #4]
   1209c:	str	r0, [sp, #4]
   120a0:	ldr	r0, [sp, #8]
   120a4:	ldr	r0, [r0]
   120a8:	bl	10a7c <free@plt>
   120ac:	ldr	r0, [sp, #8]
   120b0:	bl	10a7c <free@plt>
   120b4:	ldr	r0, [sp, #4]
   120b8:	str	r0, [sp, #8]
   120bc:	b	12084 <lista_apaga@@Base+0x68>
   120c0:	b	120c4 <lista_apaga@@Base+0xa8>
   120c4:	ldr	r0, [fp, #-4]
   120c8:	bl	10a7c <free@plt>
   120cc:	mov	sp, fp
   120d0:	pop	{fp, pc}

000120d4 <lista_tamanho@@Base>:
   120d4:	sub	sp, sp, #8
   120d8:	str	r0, [sp]
   120dc:	ldr	r0, [sp]
   120e0:	movw	r1, #0
   120e4:	cmp	r0, r1
   120e8:	bne	120f8 <lista_tamanho@@Base+0x24>
   120ec:	mvn	r0, #0
   120f0:	str	r0, [sp, #4]
   120f4:	b	12104 <lista_tamanho@@Base+0x30>
   120f8:	ldr	r0, [sp]
   120fc:	ldr	r0, [r0, #8]
   12100:	str	r0, [sp, #4]
   12104:	ldr	r0, [sp, #4]
   12108:	add	sp, sp, #8
   1210c:	bx	lr

00012110 <lista_inicio@@Base>:
   12110:	sub	sp, sp, #8
   12114:	str	r0, [sp]
   12118:	ldr	r0, [sp]
   1211c:	movw	r1, #0
   12120:	cmp	r0, r1
   12124:	bne	12134 <lista_inicio@@Base+0x24>
   12128:	movw	r0, #0
   1212c:	str	r0, [sp, #4]
   12130:	b	12140 <lista_inicio@@Base+0x30>
   12134:	ldr	r0, [sp]
   12138:	ldr	r0, [r0]
   1213c:	str	r0, [sp, #4]
   12140:	ldr	r0, [sp, #4]
   12144:	add	sp, sp, #8
   12148:	bx	lr

0001214c <lista_fim@@Base>:
   1214c:	sub	sp, sp, #8
   12150:	str	r0, [sp]
   12154:	ldr	r0, [sp]
   12158:	movw	r1, #0
   1215c:	cmp	r0, r1
   12160:	bne	12170 <lista_fim@@Base+0x24>
   12164:	movw	r0, #0
   12168:	str	r0, [sp, #4]
   1216c:	b	1217c <lista_fim@@Base+0x30>
   12170:	ldr	r0, [sp]
   12174:	ldr	r0, [r0, #4]
   12178:	str	r0, [sp, #4]
   1217c:	ldr	r0, [sp, #4]
   12180:	add	sp, sp, #8
   12184:	bx	lr

00012188 <lista_insere@@Base>:
   12188:	push	{fp, lr}
   1218c:	mov	fp, sp
   12190:	sub	sp, sp, #24
   12194:	str	r0, [fp, #-8]
   12198:	str	r1, [sp, #12]
   1219c:	str	r2, [sp, #8]
   121a0:	ldr	r0, [fp, #-8]
   121a4:	movw	r1, #0
   121a8:	cmp	r0, r1
   121ac:	bne	121bc <lista_insere@@Base+0x34>
   121b0:	movw	r0, #0
   121b4:	str	r0, [fp, #-4]
   121b8:	b	1232c <lista_insere@@Base+0x1a4>
   121bc:	mov	r0, #12
   121c0:	bl	10aa0 <malloc@plt>
   121c4:	str	r0, [sp, #4]
   121c8:	ldr	r0, [sp, #12]
   121cc:	bl	10ac4 <strlen@plt>
   121d0:	add	r0, r0, #1
   121d4:	mov	r1, r0
   121d8:	str	r1, [sp]
   121dc:	bl	10aa0 <malloc@plt>
   121e0:	ldr	r1, [sp, #4]
   121e4:	str	r0, [r1]
   121e8:	ldr	r0, [sp, #4]
   121ec:	ldr	r0, [r0]
   121f0:	ldr	r1, [sp, #12]
   121f4:	bl	10a94 <strcpy@plt>
   121f8:	ldr	r1, [fp, #-8]
   121fc:	ldr	r1, [r1, #8]
   12200:	cmp	r1, #0
   12204:	bne	12238 <lista_insere@@Base+0xb0>
   12208:	ldr	r0, [sp, #4]
   1220c:	movw	r1, #0
   12210:	str	r1, [r0, #8]
   12214:	ldr	r0, [sp, #4]
   12218:	str	r1, [r0, #4]
   1221c:	ldr	r0, [sp, #4]
   12220:	ldr	r1, [fp, #-8]
   12224:	str	r0, [r1]
   12228:	ldr	r0, [sp, #4]
   1222c:	ldr	r1, [fp, #-8]
   12230:	str	r0, [r1, #4]
   12234:	b	12314 <lista_insere@@Base+0x18c>
   12238:	ldr	r0, [sp, #8]
   1223c:	movw	r1, #0
   12240:	cmp	r0, r1
   12244:	bne	12284 <lista_insere@@Base+0xfc>
   12248:	ldr	r0, [sp, #4]
   1224c:	movw	r1, #0
   12250:	str	r1, [r0, #4]
   12254:	ldr	r0, [fp, #-8]
   12258:	ldr	r0, [r0, #4]
   1225c:	ldr	r1, [sp, #4]
   12260:	str	r0, [r1, #8]
   12264:	ldr	r0, [sp, #4]
   12268:	ldr	r1, [fp, #-8]
   1226c:	ldr	r1, [r1, #4]
   12270:	str	r0, [r1, #4]
   12274:	ldr	r0, [sp, #4]
   12278:	ldr	r1, [fp, #-8]
   1227c:	str	r0, [r1, #4]
   12280:	b	12310 <lista_insere@@Base+0x188>
   12284:	ldr	r0, [sp, #8]
   12288:	ldr	r1, [fp, #-8]
   1228c:	ldr	r1, [r1]
   12290:	cmp	r0, r1
   12294:	bne	122d4 <lista_insere@@Base+0x14c>
   12298:	ldr	r0, [sp, #4]
   1229c:	movw	r1, #0
   122a0:	str	r1, [r0, #8]
   122a4:	ldr	r0, [fp, #-8]
   122a8:	ldr	r0, [r0]
   122ac:	ldr	r1, [sp, #4]
   122b0:	str	r0, [r1, #4]
   122b4:	ldr	r0, [sp, #4]
   122b8:	ldr	r1, [fp, #-8]
   122bc:	str	r0, [r1]
   122c0:	ldr	r0, [sp, #4]
   122c4:	ldr	r1, [fp, #-8]
   122c8:	ldr	r1, [r1]
   122cc:	str	r0, [r1, #8]
   122d0:	b	1230c <lista_insere@@Base+0x184>
   122d4:	ldr	r0, [sp, #4]
   122d8:	ldr	r1, [sp, #8]
   122dc:	ldr	r1, [r1, #8]
   122e0:	str	r0, [r1, #4]
   122e4:	ldr	r0, [sp, #8]
   122e8:	ldr	r0, [r0, #8]
   122ec:	ldr	r1, [sp, #4]
   122f0:	str	r0, [r1, #8]
   122f4:	ldr	r0, [sp, #8]
   122f8:	ldr	r1, [sp, #4]
   122fc:	str	r0, [r1, #4]
   12300:	ldr	r0, [sp, #4]
   12304:	ldr	r1, [sp, #8]
   12308:	str	r0, [r1, #8]
   1230c:	b	12310 <lista_insere@@Base+0x188>
   12310:	b	12314 <lista_insere@@Base+0x18c>
   12314:	ldr	r0, [fp, #-8]
   12318:	ldr	r1, [r0, #8]
   1231c:	add	r1, r1, #1
   12320:	str	r1, [r0, #8]
   12324:	ldr	r0, [sp, #4]
   12328:	str	r0, [fp, #-4]
   1232c:	ldr	r0, [fp, #-4]
   12330:	mov	sp, fp
   12334:	pop	{fp, pc}

00012338 <lista_remove@@Base>:
   12338:	push	{fp, lr}
   1233c:	mov	fp, sp
   12340:	sub	sp, sp, #16
   12344:	str	r0, [sp, #8]
   12348:	str	r1, [sp, #4]
   1234c:	ldr	r0, [sp, #4]
   12350:	movw	r1, #0
   12354:	cmp	r0, r1
   12358:	bne	12368 <lista_remove@@Base+0x30>
   1235c:	movw	r0, #0
   12360:	str	r0, [fp, #-4]
   12364:	b	12440 <lista_remove@@Base+0x108>
   12368:	ldr	r0, [sp, #4]
   1236c:	ldr	r0, [r0, #4]
   12370:	str	r0, [sp]
   12374:	ldr	r0, [sp, #4]
   12378:	ldr	r1, [sp, #8]
   1237c:	ldr	r1, [r1]
   12380:	cmp	r0, r1
   12384:	bne	123ac <lista_remove@@Base+0x74>
   12388:	ldr	r0, [sp, #4]
   1238c:	ldr	r0, [r0, #4]
   12390:	movw	r1, #0
   12394:	str	r1, [r0, #8]
   12398:	ldr	r0, [sp, #4]
   1239c:	ldr	r0, [r0, #4]
   123a0:	ldr	r1, [sp, #8]
   123a4:	str	r0, [r1]
   123a8:	b	12410 <lista_remove@@Base+0xd8>
   123ac:	ldr	r0, [sp, #4]
   123b0:	ldr	r1, [sp, #8]
   123b4:	ldr	r1, [r1, #4]
   123b8:	cmp	r0, r1
   123bc:	bne	123e4 <lista_remove@@Base+0xac>
   123c0:	ldr	r0, [sp, #4]
   123c4:	ldr	r0, [r0, #8]
   123c8:	movw	r1, #0
   123cc:	str	r1, [r0, #4]
   123d0:	ldr	r0, [sp, #4]
   123d4:	ldr	r0, [r0, #8]
   123d8:	ldr	r1, [sp, #8]
   123dc:	str	r0, [r1, #4]
   123e0:	b	1240c <lista_remove@@Base+0xd4>
   123e4:	ldr	r0, [sp, #4]
   123e8:	ldr	r0, [r0, #4]
   123ec:	ldr	r1, [sp, #4]
   123f0:	ldr	r1, [r1, #8]
   123f4:	str	r0, [r1, #4]
   123f8:	ldr	r0, [sp, #4]
   123fc:	ldr	r0, [r0, #8]
   12400:	ldr	r1, [sp, #4]
   12404:	ldr	r1, [r1, #4]
   12408:	str	r0, [r1, #8]
   1240c:	b	12410 <lista_remove@@Base+0xd8>
   12410:	ldr	r0, [sp, #4]
   12414:	ldr	r0, [r0]
   12418:	bl	10a7c <free@plt>
   1241c:	ldr	r0, [sp, #4]
   12420:	bl	10a7c <free@plt>
   12424:	ldr	r0, [sp, #8]
   12428:	ldr	r1, [r0, #8]
   1242c:	mvn	r2, #0
   12430:	add	r1, r1, r2
   12434:	str	r1, [r0, #8]
   12438:	ldr	r0, [sp]
   1243c:	str	r0, [fp, #-4]
   12440:	ldr	r0, [fp, #-4]
   12444:	mov	sp, fp
   12448:	pop	{fp, pc}

0001244c <lista_pesquisa@@Base>:
   1244c:	push	{fp, lr}
   12450:	mov	fp, sp
   12454:	sub	sp, sp, #24
   12458:	str	r0, [fp, #-8]
   1245c:	str	r1, [sp, #12]
   12460:	str	r2, [sp, #8]
   12464:	ldr	r0, [fp, #-8]
   12468:	movw	r1, #0
   1246c:	cmp	r0, r1
   12470:	bne	12480 <lista_pesquisa@@Base+0x34>
   12474:	movw	r0, #0
   12478:	str	r0, [fp, #-4]
   1247c:	b	1257c <lista_pesquisa@@Base+0x130>
   12480:	ldr	r0, [sp, #8]
   12484:	cmp	r0, #0
   12488:	bne	124f8 <lista_pesquisa@@Base+0xac>
   1248c:	ldr	r0, [fp, #-8]
   12490:	ldr	r0, [r0]
   12494:	str	r0, [sp, #4]
   12498:	movw	r0, #0
   1249c:	str	r0, [sp]
   124a0:	ldr	r0, [sp]
   124a4:	ldr	r1, [fp, #-8]
   124a8:	ldr	r1, [r1, #8]
   124ac:	cmp	r0, r1
   124b0:	bge	124f4 <lista_pesquisa@@Base+0xa8>
   124b4:	ldr	r0, [sp, #4]
   124b8:	ldr	r0, [r0]
   124bc:	ldr	r1, [sp, #12]
   124c0:	bl	10a64 <strcmp@plt>
   124c4:	cmp	r0, #0
   124c8:	bne	124d8 <lista_pesquisa@@Base+0x8c>
   124cc:	ldr	r0, [sp, #4]
   124d0:	str	r0, [fp, #-4]
   124d4:	b	1257c <lista_pesquisa@@Base+0x130>
   124d8:	ldr	r0, [sp, #4]
   124dc:	ldr	r0, [r0, #4]
   124e0:	str	r0, [sp, #4]
   124e4:	ldr	r0, [sp]
   124e8:	add	r0, r0, #1
   124ec:	str	r0, [sp]
   124f0:	b	124a0 <lista_pesquisa@@Base+0x54>
   124f4:	b	12574 <lista_pesquisa@@Base+0x128>
   124f8:	ldr	r0, [sp, #8]
   124fc:	cmp	r0, #1
   12500:	bne	12570 <lista_pesquisa@@Base+0x124>
   12504:	ldr	r0, [fp, #-8]
   12508:	ldr	r0, [r0, #4]
   1250c:	str	r0, [sp, #4]
   12510:	movw	r0, #0
   12514:	str	r0, [sp]
   12518:	ldr	r0, [sp]
   1251c:	ldr	r1, [fp, #-8]
   12520:	ldr	r1, [r1, #8]
   12524:	cmp	r0, r1
   12528:	bge	1256c <lista_pesquisa@@Base+0x120>
   1252c:	ldr	r0, [sp, #4]
   12530:	ldr	r0, [r0]
   12534:	ldr	r1, [sp, #12]
   12538:	bl	10a64 <strcmp@plt>
   1253c:	cmp	r0, #0
   12540:	bne	12550 <lista_pesquisa@@Base+0x104>
   12544:	ldr	r0, [sp, #4]
   12548:	str	r0, [fp, #-4]
   1254c:	b	1257c <lista_pesquisa@@Base+0x130>
   12550:	ldr	r0, [sp, #4]
   12554:	ldr	r0, [r0, #8]
   12558:	str	r0, [sp, #4]
   1255c:	ldr	r0, [sp]
   12560:	add	r0, r0, #1
   12564:	str	r0, [sp]
   12568:	b	12518 <lista_pesquisa@@Base+0xcc>
   1256c:	b	12570 <lista_pesquisa@@Base+0x124>
   12570:	b	12574 <lista_pesquisa@@Base+0x128>
   12574:	movw	r0, #0
   12578:	str	r0, [fp, #-4]
   1257c:	ldr	r0, [fp, #-4]
   12580:	mov	sp, fp
   12584:	pop	{fp, pc}

00012588 <lista_ordena@@Base>:
   12588:	push	{fp, lr}
   1258c:	mov	fp, sp
   12590:	sub	sp, sp, #24
   12594:	str	r0, [fp, #-8]
   12598:	ldr	r0, [fp, #-8]
   1259c:	movw	r1, #0
   125a0:	cmp	r0, r1
   125a4:	bne	125b4 <lista_ordena@@Base+0x2c>
   125a8:	mvn	r0, #0
   125ac:	str	r0, [fp, #-4]
   125b0:	b	12684 <lista_ordena@@Base+0xfc>
   125b4:	ldr	r0, [fp, #-8]
   125b8:	ldr	r0, [r0, #8]
   125bc:	cmp	r0, #0
   125c0:	bne	125d0 <lista_ordena@@Base+0x48>
   125c4:	movw	r0, #0
   125c8:	str	r0, [fp, #-4]
   125cc:	b	12684 <lista_ordena@@Base+0xfc>
   125d0:	ldr	r0, [fp, #-8]
   125d4:	ldr	r0, [r0]
   125d8:	str	r0, [sp, #8]
   125dc:	ldr	r0, [sp, #8]
   125e0:	ldr	r1, [fp, #-8]
   125e4:	ldr	r1, [r1, #4]
   125e8:	cmp	r0, r1
   125ec:	beq	1267c <lista_ordena@@Base+0xf4>
   125f0:	ldr	r0, [sp, #8]
   125f4:	str	r0, [sp, #4]
   125f8:	ldr	r0, [sp, #8]
   125fc:	ldr	r0, [r0]
   12600:	ldr	r1, [sp, #8]
   12604:	ldr	r1, [r1, #4]
   12608:	ldr	r1, [r1]
   1260c:	bl	10a64 <strcmp@plt>
   12610:	cmp	r0, #0
   12614:	ble	1266c <lista_ordena@@Base+0xe4>
   12618:	ldr	r0, [sp, #8]
   1261c:	ldr	r0, [r0]
   12620:	str	r0, [sp, #12]
   12624:	ldr	r0, [sp, #8]
   12628:	ldr	r0, [r0, #4]
   1262c:	ldr	r0, [r0]
   12630:	ldr	r1, [sp, #8]
   12634:	str	r0, [r1]
   12638:	ldr	r0, [sp, #12]
   1263c:	ldr	r1, [sp, #8]
   12640:	ldr	r1, [r1, #4]
   12644:	str	r0, [r1]
   12648:	ldr	r0, [sp, #8]
   1264c:	ldr	r1, [fp, #-8]
   12650:	ldr	r1, [r1]
   12654:	cmp	r0, r1
   12658:	beq	12668 <lista_ordena@@Base+0xe0>
   1265c:	ldr	r0, [sp, #8]
   12660:	ldr	r0, [r0, #8]
   12664:	str	r0, [sp, #8]
   12668:	b	125f8 <lista_ordena@@Base+0x70>
   1266c:	ldr	r0, [sp, #4]
   12670:	ldr	r0, [r0, #4]
   12674:	str	r0, [sp, #8]
   12678:	b	125dc <lista_ordena@@Base+0x54>
   1267c:	movw	r0, #0
   12680:	str	r0, [fp, #-4]
   12684:	ldr	r0, [fp, #-4]
   12688:	mov	sp, fp
   1268c:	pop	{fp, pc}

00012690 <lista_inverte@@Base>:
   12690:	push	{fp, lr}
   12694:	mov	fp, sp
   12698:	sub	sp, sp, #24
   1269c:	str	r0, [fp, #-8]
   126a0:	ldr	r0, [fp, #-8]
   126a4:	movw	r1, #0
   126a8:	cmp	r0, r1
   126ac:	bne	126bc <lista_inverte@@Base+0x2c>
   126b0:	mvn	r0, #0
   126b4:	str	r0, [fp, #-4]
   126b8:	b	12778 <lista_inverte@@Base+0xe8>
   126bc:	ldr	r0, [fp, #-8]
   126c0:	ldr	r0, [r0, #8]
   126c4:	cmp	r0, #0
   126c8:	bne	126d8 <lista_inverte@@Base+0x48>
   126cc:	movw	r0, #0
   126d0:	str	r0, [fp, #-4]
   126d4:	b	12778 <lista_inverte@@Base+0xe8>
   126d8:	ldr	r0, [fp, #-8]
   126dc:	ldr	r0, [r0]
   126e0:	str	r0, [sp, #4]
   126e4:	ldr	r0, [fp, #-8]
   126e8:	ldr	r0, [r0, #4]
   126ec:	str	r0, [sp]
   126f0:	movw	r0, #0
   126f4:	str	r0, [sp, #12]
   126f8:	ldr	r0, [sp, #12]
   126fc:	ldr	r1, [fp, #-8]
   12700:	ldr	r1, [r1, #8]
   12704:	movw	r2, #2
   12708:	sdiv	r1, r1, r2
   1270c:	cmp	r0, r1
   12710:	bge	12770 <lista_inverte@@Base+0xe0>
   12714:	ldr	r0, [sp, #4]
   12718:	ldr	r0, [r0]
   1271c:	bl	10a88 <strdup@plt>
   12720:	str	r0, [sp, #8]
   12724:	ldr	r0, [sp]
   12728:	ldr	r0, [r0]
   1272c:	bl	10a88 <strdup@plt>
   12730:	ldr	r1, [sp, #4]
   12734:	str	r0, [r1]
   12738:	ldr	r0, [sp, #8]
   1273c:	bl	10a88 <strdup@plt>
   12740:	ldr	r1, [sp]
   12744:	str	r0, [r1]
   12748:	ldr	r0, [sp, #4]
   1274c:	ldr	r0, [r0, #4]
   12750:	str	r0, [sp, #4]
   12754:	ldr	r0, [sp]
   12758:	ldr	r0, [r0, #8]
   1275c:	str	r0, [sp]
   12760:	ldr	r0, [sp, #12]
   12764:	add	r0, r0, #1
   12768:	str	r0, [sp, #12]
   1276c:	b	126f8 <lista_inverte@@Base+0x68>
   12770:	movw	r0, #0
   12774:	str	r0, [fp, #-4]
   12778:	ldr	r0, [fp, #-4]
   1277c:	mov	sp, fp
   12780:	pop	{fp, pc}

00012784 <__libc_csu_init@@Base>:
   12784:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12788:	mov	r7, r0
   1278c:	ldr	r6, [pc, #72]	; 127dc <__libc_csu_init@@Base+0x58>
   12790:	ldr	r5, [pc, #72]	; 127e0 <__libc_csu_init@@Base+0x5c>
   12794:	add	r6, pc, r6
   12798:	add	r5, pc, r5
   1279c:	sub	r6, r6, r5
   127a0:	mov	r8, r1
   127a4:	mov	r9, r2
   127a8:	bl	10a44 <strcmp@plt-0x20>
   127ac:	asrs	r6, r6, #2
   127b0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   127b4:	mov	r4, #0
   127b8:	add	r4, r4, #1
   127bc:	ldr	r3, [r5], #4
   127c0:	mov	r2, r9
   127c4:	mov	r1, r8
   127c8:	mov	r0, r7
   127cc:	blx	r3
   127d0:	cmp	r6, r4
   127d4:	bne	127b8 <__libc_csu_init@@Base+0x34>
   127d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   127dc:	andeq	r0, r1, r0, ror r7
   127e0:	andeq	r0, r1, r8, ror #14

000127e4 <__libc_csu_fini@@Base>:
   127e4:	bx	lr

Disassembly of section .fini:

000127e8 <.fini>:
   127e8:	push	{r3, lr}
   127ec:	pop	{r3, pc}
