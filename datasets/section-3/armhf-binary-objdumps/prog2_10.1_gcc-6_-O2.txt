
../repos/prog2/10.1:     file format elf32-littlearm


Disassembly of section .init:

000108d4 <.init>:
   108d4:	push	{r3, lr}
   108d8:	bl	10a90 <_start@@Base+0x3c>
   108dc:	pop	{r3, pc}

Disassembly of section .plt:

000108e0 <calloc@plt-0x14>:
   108e0:	push	{lr}		; (str lr, [sp, #-4]!)
   108e4:	ldr	lr, [pc, #4]	; 108f0 <calloc@plt-0x4>
   108e8:	add	lr, pc, lr
   108ec:	ldr	pc, [lr, #8]!
   108f0:	andeq	r1, r1, r0, lsl r7

000108f4 <calloc@plt>:
   108f4:	add	ip, pc, #0, 12
   108f8:	add	ip, ip, #69632	; 0x11000
   108fc:	ldr	pc, [ip, #1808]!	; 0x710

00010900 <raise@plt>:
   10900:	add	ip, pc, #0, 12
   10904:	add	ip, ip, #69632	; 0x11000
   10908:	ldr	pc, [ip, #1800]!	; 0x708

0001090c <strcmp@plt>:
   1090c:	add	ip, pc, #0, 12
   10910:	add	ip, ip, #69632	; 0x11000
   10914:	ldr	pc, [ip, #1792]!	; 0x700

00010918 <printf@plt>:
   10918:	add	ip, pc, #0, 12
   1091c:	add	ip, ip, #69632	; 0x11000
   10920:	ldr	pc, [ip, #1784]!	; 0x6f8

00010924 <__isoc99_fscanf@plt>:
   10924:	add	ip, pc, #0, 12
   10928:	add	ip, ip, #69632	; 0x11000
   1092c:	ldr	pc, [ip, #1776]!	; 0x6f0

00010930 <fopen@plt>:
   10930:	add	ip, pc, #0, 12
   10934:	add	ip, ip, #69632	; 0x11000
   10938:	ldr	pc, [ip, #1768]!	; 0x6e8

0001093c <free@plt>:
   1093c:	add	ip, pc, #0, 12
   10940:	add	ip, ip, #69632	; 0x11000
   10944:	ldr	pc, [ip, #1760]!	; 0x6e0

00010948 <memcpy@plt>:
   10948:	add	ip, pc, #0, 12
   1094c:	add	ip, ip, #69632	; 0x11000
   10950:	ldr	pc, [ip, #1752]!	; 0x6d8

00010954 <strcpy@plt>:
   10954:	add	ip, pc, #0, 12
   10958:	add	ip, ip, #69632	; 0x11000
   1095c:	ldr	pc, [ip, #1744]!	; 0x6d0

00010960 <malloc@plt>:
   10960:	add	ip, pc, #0, 12
   10964:	add	ip, ip, #69632	; 0x11000
   10968:	ldr	pc, [ip, #1736]!	; 0x6c8

0001096c <__libc_start_main@plt>:
   1096c:	add	ip, pc, #0, 12
   10970:	add	ip, ip, #69632	; 0x11000
   10974:	ldr	pc, [ip, #1728]!	; 0x6c0

00010978 <__gmon_start__@plt>:
   10978:	add	ip, pc, #0, 12
   1097c:	add	ip, ip, #69632	; 0x11000
   10980:	ldr	pc, [ip, #1720]!	; 0x6b8

00010984 <putchar@plt>:
   10984:	add	ip, pc, #0, 12
   10988:	add	ip, ip, #69632	; 0x11000
   1098c:	ldr	pc, [ip, #1712]!	; 0x6b0

00010990 <abort@plt>:
   10990:	add	ip, pc, #0, 12
   10994:	add	ip, ip, #69632	; 0x11000
   10998:	ldr	pc, [ip, #1704]!	; 0x6a8

Disassembly of section .text:

0001099c <main@@Base>:
   1099c:	ldr	r1, [pc, #152]	; 10a3c <main@@Base+0xa0>
   109a0:	ldr	r0, [pc, #152]	; 10a40 <main@@Base+0xa4>
   109a4:	push	{r4, r5, r6, r7, r8, r9, lr}
   109a8:	sub	sp, sp, #1504	; 0x5e0
   109ac:	sub	sp, sp, #12
   109b0:	add	r1, pc, r1
   109b4:	add	r0, pc, r0
   109b8:	bl	10930 <fopen@plt>
   109bc:	ldr	r3, [pc, #128]	; 10a44 <main@@Base+0xa8>
   109c0:	ldr	r2, [pc, #128]	; 10a48 <main@@Base+0xac>
   109c4:	add	r3, pc, r3
   109c8:	ldr	r8, [pc, #124]	; 10a4c <main@@Base+0xb0>
   109cc:	ldr	r1, [r3, r2]
   109d0:	add	r6, sp, #12
   109d4:	add	r5, sp, #512	; 0x200
   109d8:	add	r4, sp, #1012	; 0x3f4
   109dc:	add	r8, pc, r8
   109e0:	mov	r9, r0
   109e4:	ldr	r0, [pc, #100]	; 10a50 <main@@Base+0xb4>
   109e8:	bl	10b7c <tabela_nova@@Base>
   109ec:	mov	r7, r0
   109f0:	b	109f8 <main@@Base+0x5c>
   109f4:	bl	10c40 <tabela_adiciona@@Base>
   109f8:	mov	r2, r5
   109fc:	mov	r1, r8
   10a00:	str	r4, [sp, #4]
   10a04:	str	r4, [sp]
   10a08:	mov	r3, r6
   10a0c:	mov	r0, r9
   10a10:	bl	10924 <__isoc99_fscanf@plt>
   10a14:	mov	r2, r5
   10a18:	mov	r1, r6
   10a1c:	cmp	r0, #4
   10a20:	mov	r0, r7
   10a24:	beq	109f4 <main@@Base+0x58>
   10a28:	bl	10f9c <mostraTabela@@Base>
   10a2c:	mov	r0, #0
   10a30:	add	sp, sp, #1504	; 0x5e0
   10a34:	add	sp, sp, #12
   10a38:	pop	{r4, r5, r6, r7, r8, r9, pc}
   10a3c:	andeq	r0, r0, r8, lsr #18
   10a40:	andeq	r0, r0, r8, lsr #18
   10a44:	andeq	r1, r1, r4, lsr r6
   10a48:	andeq	r0, r0, r4, asr #32
   10a4c:	andeq	r0, r0, r4, lsl r9
   10a50:	andeq	r2, r0, pc, lsl #14

00010a54 <_start@@Base>:
   10a54:	mov	fp, #0
   10a58:	mov	lr, #0
   10a5c:	pop	{r1}		; (ldr r1, [sp], #4)
   10a60:	mov	r2, sp
   10a64:	push	{r2}		; (str r2, [sp, #-4]!)
   10a68:	push	{r0}		; (str r0, [sp, #-4]!)
   10a6c:	ldr	ip, [pc, #16]	; 10a84 <_start@@Base+0x30>
   10a70:	push	{ip}		; (str ip, [sp, #-4]!)
   10a74:	ldr	r0, [pc, #12]	; 10a88 <_start@@Base+0x34>
   10a78:	ldr	r3, [pc, #12]	; 10a8c <_start@@Base+0x38>
   10a7c:	bl	1096c <__libc_start_main@plt>
   10a80:	bl	10990 <abort@plt>
   10a84:	ldrdeq	r1, [r1], -r0
   10a88:	muleq	r1, ip, r9
   10a8c:	andeq	r1, r1, r0, ror r2
   10a90:	ldr	r3, [pc, #20]	; 10aac <_start@@Base+0x58>
   10a94:	ldr	r2, [pc, #20]	; 10ab0 <_start@@Base+0x5c>
   10a98:	add	r3, pc, r3
   10a9c:	ldr	r2, [r3, r2]
   10aa0:	cmp	r2, #0
   10aa4:	bxeq	lr
   10aa8:	b	10978 <__gmon_start__@plt>
   10aac:	andeq	r1, r1, r0, ror #10
   10ab0:	andeq	r0, r0, r8, asr #32
   10ab4:	ldr	r3, [pc, #28]	; 10ad8 <_start@@Base+0x84>
   10ab8:	ldr	r0, [pc, #28]	; 10adc <_start@@Base+0x88>
   10abc:	sub	r3, r3, r0
   10ac0:	cmp	r3, #6
   10ac4:	bxls	lr
   10ac8:	ldr	r3, [pc, #16]	; 10ae0 <_start@@Base+0x8c>
   10acc:	cmp	r3, #0
   10ad0:	bxeq	lr
   10ad4:	bx	r3
   10ad8:	andeq	r2, r2, r7, asr r0
   10adc:	andeq	r2, r2, r4, asr r0
   10ae0:	andeq	r0, r0, r0
   10ae4:	ldr	r1, [pc, #36]	; 10b10 <_start@@Base+0xbc>
   10ae8:	ldr	r0, [pc, #36]	; 10b14 <_start@@Base+0xc0>
   10aec:	sub	r1, r1, r0
   10af0:	asr	r1, r1, #2
   10af4:	add	r1, r1, r1, lsr #31
   10af8:	asrs	r1, r1, #1
   10afc:	bxeq	lr
   10b00:	ldr	r3, [pc, #16]	; 10b18 <_start@@Base+0xc4>
   10b04:	cmp	r3, #0
   10b08:	bxeq	lr
   10b0c:	bx	r3
   10b10:	andeq	r2, r2, r4, asr r0
   10b14:	andeq	r2, r2, r4, asr r0
   10b18:	andeq	r0, r0, r0
   10b1c:	push	{r4, lr}
   10b20:	ldr	r4, [pc, #24]	; 10b40 <_start@@Base+0xec>
   10b24:	ldrb	r3, [r4]
   10b28:	cmp	r3, #0
   10b2c:	popne	{r4, pc}
   10b30:	bl	10ab4 <_start@@Base+0x60>
   10b34:	mov	r3, #1
   10b38:	strb	r3, [r4]
   10b3c:	pop	{r4, pc}
   10b40:	andeq	r2, r2, r4, asr r0
   10b44:	ldr	r0, [pc, #40]	; 10b74 <_start@@Base+0x120>
   10b48:	ldr	r3, [r0]
   10b4c:	cmp	r3, #0
   10b50:	bne	10b58 <_start@@Base+0x104>
   10b54:	b	10ae4 <_start@@Base+0x90>
   10b58:	ldr	r3, [pc, #24]	; 10b78 <_start@@Base+0x124>
   10b5c:	cmp	r3, #0
   10b60:	beq	10b54 <_start@@Base+0x100>
   10b64:	push	{r4, lr}
   10b68:	blx	r3
   10b6c:	pop	{r4, lr}
   10b70:	b	10ae4 <_start@@Base+0x90>
   10b74:	andeq	r1, r2, r4, lsl pc
   10b78:	andeq	r0, r0, r0

00010b7c <tabela_nova@@Base>:
   10b7c:	push	{r4, r5, r6, r7, r8, lr}
   10b80:	subs	r6, r1, #0
   10b84:	beq	10bc8 <tabela_nova@@Base+0x4c>
   10b88:	mov	r5, r0
   10b8c:	mov	r0, #12
   10b90:	bl	10960 <malloc@plt>
   10b94:	subs	r4, r0, #0
   10b98:	beq	10bc8 <tabela_nova@@Base+0x4c>
   10b9c:	mov	r1, #4
   10ba0:	mov	r0, r5
   10ba4:	bl	108f4 <calloc@plt>
   10ba8:	cmp	r0, #0
   10bac:	mov	r7, r0
   10bb0:	str	r0, [r4, #4]
   10bb4:	strne	r5, [r4, #8]
   10bb8:	strne	r6, [r4]
   10bbc:	beq	10bd0 <tabela_nova@@Base+0x54>
   10bc0:	mov	r0, r4
   10bc4:	pop	{r4, r5, r6, r7, r8, pc}
   10bc8:	mov	r4, #0
   10bcc:	b	10bc0 <tabela_nova@@Base+0x44>
   10bd0:	mov	r0, r4
   10bd4:	bl	1093c <free@plt>
   10bd8:	mov	r4, r7
   10bdc:	b	10bc0 <tabela_nova@@Base+0x44>

00010be0 <tabela_apaga@@Base>:
   10be0:	push	{r4, r5, r6, r7, r8, lr}
   10be4:	subs	r7, r0, #0
   10be8:	popeq	{r4, r5, r6, r7, r8, pc}
   10bec:	ldmib	r7, {r0, r3}
   10bf0:	cmp	r3, #0
   10bf4:	ble	10c30 <tabela_apaga@@Base+0x50>
   10bf8:	mov	r6, #0
   10bfc:	ldr	r4, [r0, r6, lsl #2]
   10c00:	cmp	r4, #0
   10c04:	beq	10c24 <tabela_apaga@@Base+0x44>
   10c08:	ldm	r4, {r0, r5}
   10c0c:	bl	1093c <free@plt>
   10c10:	mov	r0, r4
   10c14:	bl	1093c <free@plt>
   10c18:	subs	r4, r5, #0
   10c1c:	bne	10c08 <tabela_apaga@@Base+0x28>
   10c20:	ldmib	r7, {r0, r3}
   10c24:	add	r6, r6, #1
   10c28:	cmp	r3, r6
   10c2c:	bgt	10bfc <tabela_apaga@@Base+0x1c>
   10c30:	bl	1093c <free@plt>
   10c34:	mov	r0, r7
   10c38:	pop	{r4, r5, r6, r7, r8, lr}
   10c3c:	b	1093c <free@plt>

00010c40 <tabela_adiciona@@Base>:
   10c40:	cmp	r2, #0
   10c44:	cmpne	r0, #0
   10c48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10c4c:	beq	10d10 <tabela_adiciona@@Base+0xd0>
   10c50:	mov	r6, r1
   10c54:	mov	r4, r0
   10c58:	ldr	r3, [r0]
   10c5c:	ldr	r1, [r0, #8]
   10c60:	mov	r0, r6
   10c64:	mov	r8, r2
   10c68:	blx	r3
   10c6c:	ldr	sl, [r4, #4]
   10c70:	ldr	r4, [sl, r0, lsl #2]
   10c74:	mov	r9, r0
   10c78:	cmp	r4, #0
   10c7c:	bne	10c90 <tabela_adiciona@@Base+0x50>
   10c80:	b	10cbc <tabela_adiciona@@Base+0x7c>
   10c84:	ldr	r4, [r4, #4]
   10c88:	cmp	r4, #0
   10c8c:	beq	10cbc <tabela_adiciona@@Base+0x7c>
   10c90:	ldr	r5, [r4]
   10c94:	mov	r1, r6
   10c98:	mov	r0, r5
   10c9c:	bl	1090c <strcmp@plt>
   10ca0:	subs	r7, r0, #0
   10ca4:	bne	10c84 <tabela_adiciona@@Base+0x44>
   10ca8:	mov	r1, r8
   10cac:	add	r0, r5, #500	; 0x1f4
   10cb0:	bl	10954 <strcpy@plt>
   10cb4:	mov	r0, r7
   10cb8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10cbc:	mov	r0, #8
   10cc0:	bl	10960 <malloc@plt>
   10cc4:	subs	r4, r0, #0
   10cc8:	beq	10d10 <tabela_adiciona@@Base+0xd0>
   10ccc:	mov	r0, #1000	; 0x3e8
   10cd0:	bl	10960 <malloc@plt>
   10cd4:	cmp	r0, #0
   10cd8:	mov	r5, r0
   10cdc:	str	r0, [r4]
   10ce0:	beq	10d10 <tabela_adiciona@@Base+0xd0>
   10ce4:	mov	r1, r6
   10ce8:	bl	10954 <strcpy@plt>
   10cec:	mov	r1, r8
   10cf0:	add	r0, r5, #500	; 0x1f4
   10cf4:	bl	10954 <strcpy@plt>
   10cf8:	ldr	r3, [sl, r9, lsl #2]
   10cfc:	mov	r7, #0
   10d00:	str	r3, [r4, #4]
   10d04:	mov	r0, r7
   10d08:	str	r4, [sl, r9, lsl #2]
   10d0c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10d10:	mvn	r7, #1
   10d14:	mov	r0, r7
   10d18:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00010d1c <tabela_remove@@Base>:
   10d1c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10d20:	subs	r4, r0, #0
   10d24:	beq	10db0 <tabela_remove@@Base+0x94>
   10d28:	mov	r6, r1
   10d2c:	ldr	r3, [r4]
   10d30:	ldr	r1, [r4, #8]
   10d34:	mov	r0, r6
   10d38:	blx	r3
   10d3c:	ldr	sl, [r4, #4]
   10d40:	ldr	r4, [sl, r0, lsl #2]
   10d44:	mov	r9, r0
   10d48:	cmp	r4, #0
   10d4c:	beq	10da4 <tabela_remove@@Base+0x88>
   10d50:	mov	r8, #0
   10d54:	b	10d64 <tabela_remove@@Base+0x48>
   10d58:	mov	r8, r4
   10d5c:	subs	r4, r3, #0
   10d60:	beq	10da4 <tabela_remove@@Base+0x88>
   10d64:	ldr	r5, [r4]
   10d68:	mov	r1, r6
   10d6c:	mov	r0, r5
   10d70:	bl	1090c <strcmp@plt>
   10d74:	ldr	r3, [r4, #4]
   10d78:	subs	r7, r0, #0
   10d7c:	bne	10d58 <tabela_remove@@Base+0x3c>
   10d80:	cmp	r8, #0
   10d84:	strne	r3, [r8, #4]
   10d88:	streq	r3, [sl, r9, lsl #2]
   10d8c:	mov	r0, r5
   10d90:	bl	1093c <free@plt>
   10d94:	mov	r0, r4
   10d98:	bl	1093c <free@plt>
   10d9c:	mov	r0, r7
   10da0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10da4:	mvn	r7, #2
   10da8:	mov	r0, r7
   10dac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10db0:	mvn	r7, #1
   10db4:	b	10da8 <tabela_remove@@Base+0x8c>

00010db8 <tabela_valor@@Base>:
   10db8:	mov	r0, #0
   10dbc:	bx	lr

00010dc0 <tabela_existe@@Base>:
   10dc0:	cmp	r0, #0
   10dc4:	cmpne	r1, #0
   10dc8:	beq	10de4 <tabela_existe@@Base+0x24>
   10dcc:	push	{r4, lr}
   10dd0:	bl	10db8 <tabela_valor@@Base>
   10dd4:	cmp	r0, #0
   10dd8:	mvneq	r0, #2
   10ddc:	movne	r0, #1
   10de0:	pop	{r4, pc}
   10de4:	mvn	r0, #1
   10de8:	bx	lr

00010dec <tabela_esvazia@@Base>:
   10dec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10df0:	subs	r8, r0, #0
   10df4:	beq	10e60 <tabela_esvazia@@Base+0x74>
   10df8:	ldr	r1, [r8, #8]
   10dfc:	cmp	r1, #0
   10e00:	ble	10e58 <tabela_esvazia@@Base+0x6c>
   10e04:	mov	r6, #0
   10e08:	ldr	r3, [r8, #4]
   10e0c:	mov	r9, r6
   10e10:	ldr	r4, [r3, r6, lsl #2]
   10e14:	lsl	r7, r6, #2
   10e18:	cmp	r4, #0
   10e1c:	add	r2, r3, r7
   10e20:	beq	10e48 <tabela_esvazia@@Base+0x5c>
   10e24:	ldm	r4, {r0, r5}
   10e28:	bl	1093c <free@plt>
   10e2c:	mov	r0, r4
   10e30:	bl	1093c <free@plt>
   10e34:	subs	r4, r5, #0
   10e38:	bne	10e24 <tabela_esvazia@@Base+0x38>
   10e3c:	ldr	r3, [r8, #4]
   10e40:	ldr	r1, [r8, #8]
   10e44:	add	r2, r3, r7
   10e48:	add	r6, r6, #1
   10e4c:	cmp	r1, r6
   10e50:	str	r9, [r2]
   10e54:	bgt	10e10 <tabela_esvazia@@Base+0x24>
   10e58:	mov	r0, #0
   10e5c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10e60:	mvn	r0, #1
   10e64:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00010e68 <tabela_numelementos@@Base>:
   10e68:	cmp	r0, #0
   10e6c:	beq	10eb8 <tabela_numelementos@@Base+0x50>
   10e70:	ldr	r1, [r0, #8]
   10e74:	cmp	r1, #0
   10e78:	ble	10eb0 <tabela_numelementos@@Base+0x48>
   10e7c:	ldr	r2, [r0, #4]
   10e80:	mov	r0, #0
   10e84:	add	r1, r2, r1, lsl #2
   10e88:	ldr	r3, [r2], #4
   10e8c:	cmp	r3, #0
   10e90:	beq	10ea4 <tabela_numelementos@@Base+0x3c>
   10e94:	ldr	r3, [r3, #4]
   10e98:	add	r0, r0, #1
   10e9c:	cmp	r3, #0
   10ea0:	bne	10e94 <tabela_numelementos@@Base+0x2c>
   10ea4:	cmp	r2, r1
   10ea8:	bne	10e88 <tabela_numelementos@@Base+0x20>
   10eac:	bx	lr
   10eb0:	mov	r0, #0
   10eb4:	bx	lr
   10eb8:	mvn	r0, #1
   10ebc:	bx	lr

00010ec0 <tabela_elementos@@Base>:
   10ec0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10ec4:	mov	r5, r1
   10ec8:	mov	r4, r0
   10ecc:	bl	10e68 <tabela_numelementos@@Base>
   10ed0:	cmp	r0, #0
   10ed4:	str	r0, [r5]
   10ed8:	ble	10f4c <tabela_elementos@@Base+0x8c>
   10edc:	mov	r6, #1000	; 0x3e8
   10ee0:	mul	r0, r6, r0
   10ee4:	bl	10960 <malloc@plt>
   10ee8:	subs	r9, r0, #0
   10eec:	beq	10f4c <tabela_elementos@@Base+0x8c>
   10ef0:	ldr	r8, [r4, #8]
   10ef4:	cmp	r8, #0
   10ef8:	ble	10f44 <tabela_elementos@@Base+0x84>
   10efc:	ldr	r7, [r4, #4]
   10f00:	mov	r5, #0
   10f04:	add	r8, r7, r8, lsl #2
   10f08:	ldr	r4, [r7], #4
   10f0c:	cmp	r4, #0
   10f10:	beq	10f3c <tabela_elementos@@Base+0x7c>
   10f14:	mla	r3, r6, r5, r9
   10f18:	ldr	r1, [r4]
   10f1c:	mov	r0, r3
   10f20:	mov	r2, r6
   10f24:	bl	10948 <memcpy@plt>
   10f28:	ldr	r4, [r4, #4]
   10f2c:	add	r5, r5, #1
   10f30:	cmp	r4, #0
   10f34:	add	r3, r0, #1000	; 0x3e8
   10f38:	bne	10f18 <tabela_elementos@@Base+0x58>
   10f3c:	cmp	r7, r8
   10f40:	bne	10f08 <tabela_elementos@@Base+0x48>
   10f44:	mov	r0, r9
   10f48:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10f4c:	mov	r9, #0
   10f50:	mov	r0, r9
   10f54:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}

00010f58 <hash_krm@@Base>:
   10f58:	mov	r0, #0
   10f5c:	bx	lr

00010f60 <hash_djbm@@Base>:
   10f60:	push	{r4, lr}
   10f64:	ldrb	r2, [r0]
   10f68:	ldr	r3, [pc, #40]	; 10f98 <hash_djbm@@Base+0x38>
   10f6c:	cmp	r2, #0
   10f70:	beq	10f88 <hash_djbm@@Base+0x28>
   10f74:	rsb	r3, r3, r3, lsl #5
   10f78:	eor	r3, r3, r2
   10f7c:	ldrb	r2, [r0, #1]!
   10f80:	cmp	r2, #0
   10f84:	bne	10f74 <hash_djbm@@Base+0x14>
   10f88:	mov	r0, r3
   10f8c:	bl	11240 <mostraTabela@@Base+0x2a4>
   10f90:	mov	r0, r1
   10f94:	pop	{r4, pc}
   10f98:	andeq	r1, r0, r3, ror #9

00010f9c <mostraTabela@@Base>:
   10f9c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10fa0:	mov	r7, r0
   10fa4:	bl	10e68 <tabela_numelementos@@Base>
   10fa8:	mov	r1, r0
   10fac:	ldr	r0, [pc, #148]	; 11048 <mostraTabela@@Base+0xac>
   10fb0:	add	r0, pc, r0
   10fb4:	bl	10918 <printf@plt>
   10fb8:	ldr	r2, [r7, #8]
   10fbc:	cmp	r2, #0
   10fc0:	ble	1103c <mostraTabela@@Base+0xa0>
   10fc4:	ldr	r9, [pc, #128]	; 1104c <mostraTabela@@Base+0xb0>
   10fc8:	ldr	r5, [pc, #128]	; 11050 <mostraTabela@@Base+0xb4>
   10fcc:	add	r9, pc, r9
   10fd0:	add	r5, pc, r5
   10fd4:	mov	r6, #0
   10fd8:	mov	r8, #10
   10fdc:	ldr	r3, [r7, #4]
   10fe0:	ldr	r3, [r3, r6, lsl #2]
   10fe4:	cmp	r3, #0
   10fe8:	beq	11030 <mostraTabela@@Base+0x94>
   10fec:	mov	r1, r6
   10ff0:	mov	r0, r9
   10ff4:	bl	10918 <printf@plt>
   10ff8:	ldr	r3, [r7, #4]
   10ffc:	ldr	r4, [r3, r6, lsl #2]
   11000:	cmp	r4, #0
   11004:	beq	11024 <mostraTabela@@Base+0x88>
   11008:	ldr	r1, [r4]
   1100c:	mov	r0, r5
   11010:	add	r2, r1, #500	; 0x1f4
   11014:	bl	10918 <printf@plt>
   11018:	ldr	r4, [r4, #4]
   1101c:	cmp	r4, #0
   11020:	bne	11008 <mostraTabela@@Base+0x6c>
   11024:	mov	r0, r8
   11028:	bl	10984 <putchar@plt>
   1102c:	ldr	r2, [r7, #8]
   11030:	add	r6, r6, #1
   11034:	cmp	r2, r6
   11038:	bgt	10fdc <mostraTabela@@Base+0x40>
   1103c:	mov	r0, #10
   11040:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   11044:	b	10984 <putchar@plt>
   11048:	andeq	r0, r0, ip, asr #6
   1104c:	andeq	r0, r0, r4, asr r3
   11050:	andeq	r0, r0, r8, asr r3
   11054:	subs	r2, r1, #1
   11058:	bxeq	lr
   1105c:	bcc	11234 <mostraTabela@@Base+0x298>
   11060:	cmp	r0, r1
   11064:	bls	11218 <mostraTabela@@Base+0x27c>
   11068:	tst	r1, r2
   1106c:	beq	11224 <mostraTabela@@Base+0x288>
   11070:	clz	r3, r0
   11074:	clz	r2, r1
   11078:	sub	r3, r2, r3
   1107c:	rsbs	r3, r3, #31
   11080:	addne	r3, r3, r3, lsl #1
   11084:	mov	r2, #0
   11088:	addne	pc, pc, r3, lsl #2
   1108c:	nop			; (mov r0, r0)
   11090:	cmp	r0, r1, lsl #31
   11094:	adc	r2, r2, r2
   11098:	subcs	r0, r0, r1, lsl #31
   1109c:	cmp	r0, r1, lsl #30
   110a0:	adc	r2, r2, r2
   110a4:	subcs	r0, r0, r1, lsl #30
   110a8:	cmp	r0, r1, lsl #29
   110ac:	adc	r2, r2, r2
   110b0:	subcs	r0, r0, r1, lsl #29
   110b4:	cmp	r0, r1, lsl #28
   110b8:	adc	r2, r2, r2
   110bc:	subcs	r0, r0, r1, lsl #28
   110c0:	cmp	r0, r1, lsl #27
   110c4:	adc	r2, r2, r2
   110c8:	subcs	r0, r0, r1, lsl #27
   110cc:	cmp	r0, r1, lsl #26
   110d0:	adc	r2, r2, r2
   110d4:	subcs	r0, r0, r1, lsl #26
   110d8:	cmp	r0, r1, lsl #25
   110dc:	adc	r2, r2, r2
   110e0:	subcs	r0, r0, r1, lsl #25
   110e4:	cmp	r0, r1, lsl #24
   110e8:	adc	r2, r2, r2
   110ec:	subcs	r0, r0, r1, lsl #24
   110f0:	cmp	r0, r1, lsl #23
   110f4:	adc	r2, r2, r2
   110f8:	subcs	r0, r0, r1, lsl #23
   110fc:	cmp	r0, r1, lsl #22
   11100:	adc	r2, r2, r2
   11104:	subcs	r0, r0, r1, lsl #22
   11108:	cmp	r0, r1, lsl #21
   1110c:	adc	r2, r2, r2
   11110:	subcs	r0, r0, r1, lsl #21
   11114:	cmp	r0, r1, lsl #20
   11118:	adc	r2, r2, r2
   1111c:	subcs	r0, r0, r1, lsl #20
   11120:	cmp	r0, r1, lsl #19
   11124:	adc	r2, r2, r2
   11128:	subcs	r0, r0, r1, lsl #19
   1112c:	cmp	r0, r1, lsl #18
   11130:	adc	r2, r2, r2
   11134:	subcs	r0, r0, r1, lsl #18
   11138:	cmp	r0, r1, lsl #17
   1113c:	adc	r2, r2, r2
   11140:	subcs	r0, r0, r1, lsl #17
   11144:	cmp	r0, r1, lsl #16
   11148:	adc	r2, r2, r2
   1114c:	subcs	r0, r0, r1, lsl #16
   11150:	cmp	r0, r1, lsl #15
   11154:	adc	r2, r2, r2
   11158:	subcs	r0, r0, r1, lsl #15
   1115c:	cmp	r0, r1, lsl #14
   11160:	adc	r2, r2, r2
   11164:	subcs	r0, r0, r1, lsl #14
   11168:	cmp	r0, r1, lsl #13
   1116c:	adc	r2, r2, r2
   11170:	subcs	r0, r0, r1, lsl #13
   11174:	cmp	r0, r1, lsl #12
   11178:	adc	r2, r2, r2
   1117c:	subcs	r0, r0, r1, lsl #12
   11180:	cmp	r0, r1, lsl #11
   11184:	adc	r2, r2, r2
   11188:	subcs	r0, r0, r1, lsl #11
   1118c:	cmp	r0, r1, lsl #10
   11190:	adc	r2, r2, r2
   11194:	subcs	r0, r0, r1, lsl #10
   11198:	cmp	r0, r1, lsl #9
   1119c:	adc	r2, r2, r2
   111a0:	subcs	r0, r0, r1, lsl #9
   111a4:	cmp	r0, r1, lsl #8
   111a8:	adc	r2, r2, r2
   111ac:	subcs	r0, r0, r1, lsl #8
   111b0:	cmp	r0, r1, lsl #7
   111b4:	adc	r2, r2, r2
   111b8:	subcs	r0, r0, r1, lsl #7
   111bc:	cmp	r0, r1, lsl #6
   111c0:	adc	r2, r2, r2
   111c4:	subcs	r0, r0, r1, lsl #6
   111c8:	cmp	r0, r1, lsl #5
   111cc:	adc	r2, r2, r2
   111d0:	subcs	r0, r0, r1, lsl #5
   111d4:	cmp	r0, r1, lsl #4
   111d8:	adc	r2, r2, r2
   111dc:	subcs	r0, r0, r1, lsl #4
   111e0:	cmp	r0, r1, lsl #3
   111e4:	adc	r2, r2, r2
   111e8:	subcs	r0, r0, r1, lsl #3
   111ec:	cmp	r0, r1, lsl #2
   111f0:	adc	r2, r2, r2
   111f4:	subcs	r0, r0, r1, lsl #2
   111f8:	cmp	r0, r1, lsl #1
   111fc:	adc	r2, r2, r2
   11200:	subcs	r0, r0, r1, lsl #1
   11204:	cmp	r0, r1
   11208:	adc	r2, r2, r2
   1120c:	subcs	r0, r0, r1
   11210:	mov	r0, r2
   11214:	bx	lr
   11218:	moveq	r0, #1
   1121c:	movne	r0, #0
   11220:	bx	lr
   11224:	clz	r2, r1
   11228:	rsb	r2, r2, #31
   1122c:	lsr	r0, r0, r2
   11230:	bx	lr
   11234:	cmp	r0, #0
   11238:	mvnne	r0, #0
   1123c:	b	11260 <mostraTabela@@Base+0x2c4>
   11240:	cmp	r1, #0
   11244:	beq	11234 <mostraTabela@@Base+0x298>
   11248:	push	{r0, r1, lr}
   1124c:	bl	11054 <mostraTabela@@Base+0xb8>
   11250:	pop	{r1, r2, lr}
   11254:	mul	r3, r2, r0
   11258:	sub	r1, r1, r3
   1125c:	bx	lr
   11260:	push	{r1, lr}
   11264:	mov	r0, #8
   11268:	bl	10900 <raise@plt>
   1126c:	pop	{r1, pc}

00011270 <__libc_csu_init@@Base>:
   11270:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11274:	mov	r7, r0
   11278:	ldr	r6, [pc, #72]	; 112c8 <__libc_csu_init@@Base+0x58>
   1127c:	ldr	r5, [pc, #72]	; 112cc <__libc_csu_init@@Base+0x5c>
   11280:	add	r6, pc, r6
   11284:	add	r5, pc, r5
   11288:	sub	r6, r6, r5
   1128c:	mov	r8, r1
   11290:	mov	r9, r2
   11294:	bl	108d4 <calloc@plt-0x20>
   11298:	asrs	r6, r6, #2
   1129c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   112a0:	mov	r4, #0
   112a4:	add	r4, r4, #1
   112a8:	ldr	r3, [r5], #4
   112ac:	mov	r2, r9
   112b0:	mov	r1, r8
   112b4:	mov	r0, r7
   112b8:	blx	r3
   112bc:	cmp	r6, r4
   112c0:	bne	112a4 <__libc_csu_init@@Base+0x34>
   112c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   112c8:	andeq	r0, r1, r8, lsl #25
   112cc:	andeq	r0, r1, r0, lsl #25

000112d0 <__libc_csu_fini@@Base>:
   112d0:	bx	lr

Disassembly of section .fini:

000112d4 <.fini>:
   112d4:	push	{r3, lr}
   112d8:	pop	{r3, pc}
