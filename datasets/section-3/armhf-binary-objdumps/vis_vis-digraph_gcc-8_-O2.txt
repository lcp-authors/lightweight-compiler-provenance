
../repos/vis/vis-digraph:     file format elf32-littlearm


Disassembly of section .init:

000105bc <.init>:
   105bc:	push	{r3, lr}
   105c0:	bl	10ab0 <tcgetattr@plt+0x408>
   105c4:	pop	{r3, pc}

Disassembly of section .plt:

000105c8 <calloc@plt-0x14>:
   105c8:	push	{lr}		; (str lr, [sp, #-4]!)
   105cc:	ldr	lr, [pc, #4]	; 105d8 <calloc@plt-0x4>
   105d0:	add	lr, pc, lr
   105d4:	ldr	pc, [lr, #8]!
   105d8:	andeq	r5, r2, r8, asr #19

000105dc <calloc@plt>:
   105dc:	add	ip, pc, #0, 12
   105e0:	add	ip, ip, #151552	; 0x25000
   105e4:	ldr	pc, [ip, #2504]!	; 0x9c8

000105e8 <strcmp@plt>:
   105e8:	add	ip, pc, #0, 12
   105ec:	add	ip, ip, #151552	; 0x25000
   105f0:	ldr	pc, [ip, #2496]!	; 0x9c0

000105f4 <read@plt>:
   105f4:	add	ip, pc, #0, 12
   105f8:	add	ip, ip, #151552	; 0x25000
   105fc:	ldr	pc, [ip, #2488]!	; 0x9b8

00010600 <__stack_chk_fail@plt>:
   10600:	add	ip, pc, #0, 12
   10604:	add	ip, ip, #151552	; 0x25000
   10608:	ldr	pc, [ip, #2480]!	; 0x9b0

0001060c <perror@plt>:
   1060c:	add	ip, pc, #0, 12
   10610:	add	ip, ip, #151552	; 0x25000
   10614:	ldr	pc, [ip, #2472]!	; 0x9a8

00010618 <putwchar@plt>:
   10618:	add	ip, pc, #0, 12
   1061c:	add	ip, ip, #151552	; 0x25000
   10620:	ldr	pc, [ip, #2464]!	; 0x9a0

00010624 <fwrite@plt>:
   10624:	add	ip, pc, #0, 12
   10628:	add	ip, ip, #151552	; 0x25000
   1062c:	ldr	pc, [ip, #2456]!	; 0x998

00010630 <tcsetattr@plt>:
   10630:	add	ip, pc, #0, 12
   10634:	add	ip, ip, #151552	; 0x25000
   10638:	ldr	pc, [ip, #2448]!	; 0x990

0001063c <__libc_start_main@plt>:
   1063c:	add	ip, pc, #0, 12
   10640:	add	ip, ip, #151552	; 0x25000
   10644:	ldr	pc, [ip, #2440]!	; 0x988

00010648 <__gmon_start__@plt>:
   10648:	add	ip, pc, #0, 12
   1064c:	add	ip, ip, #151552	; 0x25000
   10650:	ldr	pc, [ip, #2432]!	; 0x980

00010654 <strlen@plt>:
   10654:	add	ip, pc, #0, 12
   10658:	add	ip, ip, #151552	; 0x25000
   1065c:	ldr	pc, [ip, #2424]!	; 0x978

00010660 <__errno_location@plt>:
   10660:	add	ip, pc, #0, 12
   10664:	add	ip, ip, #151552	; 0x25000
   10668:	ldr	pc, [ip, #2416]!	; 0x970

0001066c <__fprintf_chk@plt>:
   1066c:	add	ip, pc, #0, 12
   10670:	add	ip, ip, #151552	; 0x25000
   10674:	ldr	pc, [ip, #2408]!	; 0x968

00010678 <setlocale@plt>:
   10678:	add	ip, pc, #0, 12
   1067c:	add	ip, ip, #151552	; 0x25000
   10680:	ldr	pc, [ip, #2400]!	; 0x960

00010684 <__wprintf_chk@plt>:
   10684:	add	ip, pc, #0, 12
   10688:	add	ip, ip, #151552	; 0x25000
   1068c:	ldr	pc, [ip, #2392]!	; 0x958

00010690 <strncmp@plt>:
   10690:	add	ip, pc, #0, 12
   10694:	add	ip, ip, #151552	; 0x25000
   10698:	ldr	pc, [ip, #2384]!	; 0x950

0001069c <abort@plt>:
   1069c:	add	ip, pc, #0, 12
   106a0:	add	ip, ip, #151552	; 0x25000
   106a4:	ldr	pc, [ip, #2376]!	; 0x948

000106a8 <tcgetattr@plt>:
   106a8:	add	ip, pc, #0, 12
   106ac:	add	ip, ip, #151552	; 0x25000
   106b0:	ldr	pc, [ip, #2368]!	; 0x940

Disassembly of section .text:

000106b4 <.text>:
   106b4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   106b8:	mov	r4, r1
   106bc:	strd	r6, [sp, #8]
   106c0:	ldr	r7, [pc, #876]	; 10a34 <tcgetattr@plt+0x38c>
   106c4:	strd	r8, [sp, #16]
   106c8:	mov	r9, r0
   106cc:	mov	r0, #6
   106d0:	ldr	r3, [pc, #864]	; 10a38 <tcgetattr@plt+0x390>
   106d4:	strd	sl, [sp, #24]
   106d8:	str	lr, [sp, #32]
   106dc:	sub	sp, sp, #36	; 0x24
   106e0:	add	r7, pc, r7
   106e4:	ldr	r1, [pc, #848]	; 10a3c <tcgetattr@plt+0x394>
   106e8:	ldr	r8, [r7, r3]
   106ec:	add	r1, pc, r1
   106f0:	ldr	r3, [r8]
   106f4:	str	r3, [sp, #28]
   106f8:	bl	10678 <setlocale@plt>
   106fc:	cmp	r9, #1
   10700:	beq	10958 <tcgetattr@plt+0x2b0>
   10704:	ldr	r1, [pc, #820]	; 10a40 <tcgetattr@plt+0x398>
   10708:	ldr	r0, [r4, #4]
   1070c:	add	r1, pc, r1
   10710:	bl	105e8 <strcmp@plt>
   10714:	subs	r6, r0, #0
   10718:	beq	107ac <tcgetattr@plt+0x104>
   1071c:	sub	r3, r9, #1
   10720:	mov	r1, #4
   10724:	mov	r0, r3
   10728:	str	r3, [sp, #8]
   1072c:	bl	105dc <calloc@plt>
   10730:	subs	r6, r0, #0
   10734:	beq	10a08 <tcgetattr@plt+0x360>
   10738:	cmp	r9, #1
   1073c:	addgt	r4, r4, #4
   10740:	movgt	r5, r6
   10744:	movgt	fp, #1
   10748:	bgt	10768 <tcgetattr@plt+0xc0>
   1074c:	b	10998 <tcgetattr@plt+0x2f0>
   10750:	cmn	r0, #1
   10754:	beq	109c4 <tcgetattr@plt+0x31c>
   10758:	add	fp, fp, #1
   1075c:	add	r5, r5, #4
   10760:	cmp	r9, fp
   10764:	beq	10998 <tcgetattr@plt+0x2f0>
   10768:	mov	sl, r4
   1076c:	mov	r1, r5
   10770:	ldr	r0, [sl]
   10774:	add	r4, r4, #4
   10778:	bl	10b64 <tcgetattr@plt+0x4bc>
   1077c:	cmp	r0, #0
   10780:	bne	10750 <tcgetattr@plt+0xa8>
   10784:	ldr	r2, [pc, #696]	; 10a44 <tcgetattr@plt+0x39c>
   10788:	mov	r1, #1
   1078c:	mov	r6, r1
   10790:	ldr	r3, [sl]
   10794:	ldr	r0, [r7, r2]
   10798:	ldr	r2, [pc, #680]	; 10a48 <tcgetattr@plt+0x3a0>
   1079c:	ldr	r0, [r0]
   107a0:	add	r2, pc, r2
   107a4:	bl	1066c <__fprintf_chk@plt>
   107a8:	b	10928 <tcgetattr@plt+0x280>
   107ac:	ldr	r5, [pc, #664]	; 10a4c <tcgetattr@plt+0x3a4>
   107b0:	add	r9, sp, #20
   107b4:	add	fp, sp, #27
   107b8:	mov	r4, r9
   107bc:	add	sl, sp, #16
   107c0:	add	r5, pc, r5
   107c4:	mov	r1, r5
   107c8:	bl	106a8 <tcgetattr@plt>
   107cc:	ldr	r2, [pc, #636]	; 10a50 <tcgetattr@plt+0x3a8>
   107d0:	ldr	r3, [r5]
   107d4:	ldrd	r0, [r5, #8]
   107d8:	add	r2, pc, r2
   107dc:	bic	r3, r3, #1504	; 0x5e0
   107e0:	bic	r3, r3, #10
   107e4:	strd	r0, [r2, #8]
   107e8:	ldrd	r0, [r5, #16]
   107ec:	str	r3, [r2]
   107f0:	ldr	lr, [r2, #8]
   107f4:	ldr	ip, [r2, #12]
   107f8:	strd	r0, [r2, #16]
   107fc:	ldr	r1, [r5, #4]
   10800:	bic	lr, lr, #304	; 0x130
   10804:	ldr	r3, [r5, #56]	; 0x38
   10808:	orr	lr, lr, #48	; 0x30
   1080c:	bic	ip, ip, #32768	; 0x8000
   10810:	bic	ip, ip, #75	; 0x4b
   10814:	str	r1, [r2, #4]
   10818:	ldrd	r0, [r5, #24]
   1081c:	str	lr, [r2, #8]
   10820:	str	r3, [r2, #56]	; 0x38
   10824:	mov	r3, #1
   10828:	str	ip, [r2, #12]
   1082c:	strb	r3, [r2, #23]
   10830:	strd	r0, [r2, #24]
   10834:	ldrd	r0, [r5, #32]
   10838:	strd	r0, [r2, #32]
   1083c:	ldrd	r0, [r5, #40]	; 0x28
   10840:	strd	r0, [sp, #8]
   10844:	ldrd	r0, [r5, #48]	; 0x30
   10848:	strd	r0, [r2, #48]	; 0x30
   1084c:	ldrd	r0, [sp, #8]
   10850:	strd	r0, [r2, #40]	; 0x28
   10854:	mov	r1, r6
   10858:	mov	r0, r6
   1085c:	bl	10630 <tcsetattr@plt>
   10860:	str	r6, [sp, #20]
   10864:	str	r6, [sp, #24]
   10868:	mov	r2, #1
   1086c:	mov	r1, r4
   10870:	mov	r0, #0
   10874:	bl	105f4 <read@plt>
   10878:	cmn	r0, #1
   1087c:	mov	r5, r0
   10880:	bne	108d0 <tcgetattr@plt+0x228>
   10884:	bl	10660 <__errno_location@plt>
   10888:	ldr	r3, [r0]
   1088c:	cmp	r3, #4
   10890:	beq	10868 <tcgetattr@plt+0x1c0>
   10894:	ldr	r2, [pc, #440]	; 10a54 <tcgetattr@plt+0x3ac>
   10898:	mov	r1, #0
   1089c:	mov	r6, #3
   108a0:	mov	r0, r1
   108a4:	add	r2, pc, r2
   108a8:	bl	10630 <tcsetattr@plt>
   108ac:	ldr	r3, [pc, #400]	; 10a44 <tcgetattr@plt+0x39c>
   108b0:	mov	r2, #9
   108b4:	mov	r1, #1
   108b8:	ldr	r0, [pc, #408]	; 10a58 <tcgetattr@plt+0x3b0>
   108bc:	ldr	r3, [r7, r3]
   108c0:	add	r0, pc, r0
   108c4:	ldr	r3, [r3]
   108c8:	bl	10624 <fwrite@plt>
   108cc:	b	10928 <tcgetattr@plt+0x280>
   108d0:	mov	r1, sl
   108d4:	mov	r0, r9
   108d8:	bl	10b64 <tcgetattr@plt+0x4bc>
   108dc:	cmp	r0, #0
   108e0:	beq	109cc <tcgetattr@plt+0x324>
   108e4:	cmn	r0, #1
   108e8:	movne	r1, #0
   108ec:	moveq	r1, #1
   108f0:	cmp	r5, #0
   108f4:	movne	r1, #0
   108f8:	cmp	r1, #0
   108fc:	bne	109cc <tcgetattr@plt+0x324>
   10900:	cmp	r0, #1
   10904:	beq	10a14 <tcgetattr@plt+0x36c>
   10908:	add	r4, r4, #1
   1090c:	cmp	r4, fp
   10910:	bne	10868 <tcgetattr@plt+0x1c0>
   10914:	ldr	r2, [pc, #320]	; 10a5c <tcgetattr@plt+0x3b4>
   10918:	mov	r0, r1
   1091c:	mov	r6, #1
   10920:	add	r2, pc, r2
   10924:	bl	10630 <tcsetattr@plt>
   10928:	ldr	r2, [sp, #28]
   1092c:	mov	r0, r6
   10930:	ldr	r3, [r8]
   10934:	cmp	r2, r3
   10938:	bne	10a30 <tcgetattr@plt+0x388>
   1093c:	add	sp, sp, #36	; 0x24
   10940:	ldrd	r4, [sp]
   10944:	ldrd	r6, [sp, #8]
   10948:	ldrd	r8, [sp, #16]
   1094c:	ldrd	sl, [sp, #24]
   10950:	add	sp, sp, #32
   10954:	pop	{pc}		; (ldr pc, [sp], #4)
   10958:	ldr	r4, [pc, #256]	; 10a60 <tcgetattr@plt+0x3b8>
   1095c:	ldr	r5, [pc, #256]	; 10a64 <tcgetattr@plt+0x3bc>
   10960:	add	r4, pc, r4
   10964:	add	r5, pc, r5
   10968:	mov	r2, r4
   1096c:	mov	r1, r5
   10970:	ldr	r3, [r4, #8]
   10974:	mov	r0, #1
   10978:	ldr	ip, [r4, #12]
   1097c:	str	ip, [sp]
   10980:	bl	10684 <__wprintf_chk@plt>
   10984:	ldrb	r3, [r4, #16]!
   10988:	cmp	r3, #0
   1098c:	bne	10968 <tcgetattr@plt+0x2c0>
   10990:	mov	r6, #0
   10994:	b	10928 <tcgetattr@plt+0x280>
   10998:	ldr	r3, [sp, #8]
   1099c:	cmp	r3, #0
   109a0:	ble	10990 <tcgetattr@plt+0x2e8>
   109a4:	add	r9, r6, r9, lsl #2
   109a8:	sub	r6, r6, #4
   109ac:	sub	r9, r9, #8
   109b0:	ldr	r0, [r6, #4]!
   109b4:	bl	10618 <putwchar@plt>
   109b8:	cmp	r6, r9
   109bc:	bne	109b0 <tcgetattr@plt+0x308>
   109c0:	b	10990 <tcgetattr@plt+0x2e8>
   109c4:	mov	r6, #2
   109c8:	b	10928 <tcgetattr@plt+0x280>
   109cc:	ldr	r2, [pc, #148]	; 10a68 <tcgetattr@plt+0x3c0>
   109d0:	mov	r1, #0
   109d4:	mov	r6, #1
   109d8:	mov	r0, r1
   109dc:	add	r2, pc, r2
   109e0:	bl	10630 <tcsetattr@plt>
   109e4:	ldr	r0, [pc, #88]	; 10a44 <tcgetattr@plt+0x39c>
   109e8:	mov	r3, r9
   109ec:	mov	r1, r6
   109f0:	ldr	r2, [pc, #116]	; 10a6c <tcgetattr@plt+0x3c4>
   109f4:	ldr	r0, [r7, r0]
   109f8:	add	r2, pc, r2
   109fc:	ldr	r0, [r0]
   10a00:	bl	1066c <__fprintf_chk@plt>
   10a04:	b	10928 <tcgetattr@plt+0x280>
   10a08:	bl	1060c <perror@plt>
   10a0c:	mov	r6, #1
   10a10:	b	10928 <tcgetattr@plt+0x280>
   10a14:	ldr	r2, [pc, #84]	; 10a70 <tcgetattr@plt+0x3c8>
   10a18:	mov	r0, r1
   10a1c:	add	r2, pc, r2
   10a20:	bl	10630 <tcsetattr@plt>
   10a24:	ldr	r0, [sp, #16]
   10a28:	bl	10618 <putwchar@plt>
   10a2c:	b	10928 <tcgetattr@plt+0x280>
   10a30:	bl	10600 <__stack_chk_fail@plt>
   10a34:			; <UNDEFINED> instruction: 0x000258b8
   10a38:	andeq	r0, r0, r4, asr r0
   10a3c:	andeq	ip, r0, r8, asr pc
   10a40:	andeq	r0, r0, r8, ror r5
   10a44:	andeq	r0, r0, r8, asr r0
   10a48:	andeq	r0, r0, r8, ror #9
   10a4c:	andeq	r5, r2, r8, ror r8
   10a50:	andeq	r5, r2, r4, lsr #16
   10a54:	muleq	r2, r4, r7
   10a58:	andeq	r0, r0, r0, ror #7
   10a5c:	andeq	r5, r2, r8, lsl r7
   10a60:	andeq	sp, r1, r8, asr #29
   10a64:	andeq	r0, r0, r8, asr #6
   10a68:	andeq	r5, r2, ip, asr r6
   10a6c:	muleq	r0, r0, r2
   10a70:	andeq	r5, r2, ip, lsl r6
   10a74:	mov	fp, #0
   10a78:	mov	lr, #0
   10a7c:	pop	{r1}		; (ldr r1, [sp], #4)
   10a80:	mov	r2, sp
   10a84:	push	{r2}		; (str r2, [sp, #-4]!)
   10a88:	push	{r0}		; (str r0, [sp, #-4]!)
   10a8c:	ldr	ip, [pc, #16]	; 10aa4 <tcgetattr@plt+0x3fc>
   10a90:	push	{ip}		; (str ip, [sp, #-4]!)
   10a94:	ldr	r0, [pc, #12]	; 10aa8 <tcgetattr@plt+0x400>
   10a98:	ldr	r3, [pc, #12]	; 10aac <tcgetattr@plt+0x404>
   10a9c:	bl	1063c <__libc_start_main@plt>
   10aa0:	bl	1069c <abort@plt>
   10aa4:	andeq	r0, r1, r0, lsl #25
   10aa8:			; <UNDEFINED> instruction: 0x000106b4
   10aac:	andeq	r0, r1, r0, lsr #24
   10ab0:	ldr	r3, [pc, #20]	; 10acc <tcgetattr@plt+0x424>
   10ab4:	ldr	r2, [pc, #20]	; 10ad0 <tcgetattr@plt+0x428>
   10ab8:	add	r3, pc, r3
   10abc:	ldr	r2, [r3, r2]
   10ac0:	cmp	r2, #0
   10ac4:	bxeq	lr
   10ac8:	b	10648 <__gmon_start__@plt>
   10acc:	andeq	r5, r2, r0, ror #9
   10ad0:	andeq	r0, r0, ip, asr r0
   10ad4:	ldr	r0, [pc, #24]	; 10af4 <tcgetattr@plt+0x44c>
   10ad8:	ldr	r3, [pc, #24]	; 10af8 <tcgetattr@plt+0x450>
   10adc:	cmp	r3, r0
   10ae0:	bxeq	lr
   10ae4:	ldr	r3, [pc, #16]	; 10afc <tcgetattr@plt+0x454>
   10ae8:	cmp	r3, #0
   10aec:	bxeq	lr
   10af0:	bx	r3
   10af4:	andeq	r6, r3, r0
   10af8:	andeq	r6, r3, r0
   10afc:	andeq	r0, r0, r0
   10b00:	ldr	r0, [pc, #36]	; 10b2c <tcgetattr@plt+0x484>
   10b04:	ldr	r1, [pc, #36]	; 10b30 <tcgetattr@plt+0x488>
   10b08:	sub	r1, r1, r0
   10b0c:	asr	r1, r1, #2
   10b10:	add	r1, r1, r1, lsr #31
   10b14:	asrs	r1, r1, #1
   10b18:	bxeq	lr
   10b1c:	ldr	r3, [pc, #16]	; 10b34 <tcgetattr@plt+0x48c>
   10b20:	cmp	r3, #0
   10b24:	bxeq	lr
   10b28:	bx	r3
   10b2c:	andeq	r6, r3, r0
   10b30:	andeq	r6, r3, r0
   10b34:	andeq	r0, r0, r0
   10b38:	push	{r4, lr}
   10b3c:	ldr	r4, [pc, #24]	; 10b5c <tcgetattr@plt+0x4b4>
   10b40:	ldrb	r3, [r4]
   10b44:	cmp	r3, #0
   10b48:	popne	{r4, pc}
   10b4c:	bl	10ad4 <tcgetattr@plt+0x42c>
   10b50:	mov	r3, #1
   10b54:	strb	r3, [r4]
   10b58:	pop	{r4, pc}
   10b5c:	andeq	r6, r3, r0
   10b60:	b	10b00 <tcgetattr@plt+0x458>
   10b64:	ldr	r3, [pc, #168]	; 10c14 <tcgetattr@plt+0x56c>
   10b68:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10b6c:	ldr	r2, [pc, #164]	; 10c18 <tcgetattr@plt+0x570>
   10b70:	strd	r6, [sp, #8]
   10b74:	mov	r7, r1
   10b78:	mov	r6, r0
   10b7c:	str	r8, [sp, #16]
   10b80:	add	r3, pc, r3
   10b84:	str	lr, [sp, #20]
   10b88:	sub	sp, sp, #8
   10b8c:	ldr	r4, [pc, #136]	; 10c1c <tcgetattr@plt+0x574>
   10b90:	ldr	r8, [r3, r2]
   10b94:	add	r4, pc, r4
   10b98:	ldr	r3, [r8]
   10b9c:	str	r3, [sp, #4]
   10ba0:	bl	10654 <strlen@plt>
   10ba4:	mov	r5, r0
   10ba8:	b	10bb8 <tcgetattr@plt+0x510>
   10bac:	ldrb	r0, [r4, #16]!
   10bb0:	cmp	r0, #0
   10bb4:	beq	10be8 <tcgetattr@plt+0x540>
   10bb8:	mov	r2, r5
   10bbc:	mov	r1, r4
   10bc0:	mov	r0, r6
   10bc4:	bl	10690 <strncmp@plt>
   10bc8:	cmp	r0, #0
   10bcc:	bne	10bac <tcgetattr@plt+0x504>
   10bd0:	ldr	r3, [r4, #8]
   10bd4:	str	r3, [r7]
   10bd8:	ldrb	r3, [r4, r5]
   10bdc:	cmp	r3, #0
   10be0:	moveq	r0, #1
   10be4:	mvnne	r0, #0
   10be8:	ldr	r2, [sp, #4]
   10bec:	ldr	r3, [r8]
   10bf0:	cmp	r2, r3
   10bf4:	bne	10c10 <tcgetattr@plt+0x568>
   10bf8:	add	sp, sp, #8
   10bfc:	ldrd	r4, [sp]
   10c00:	ldrd	r6, [sp, #8]
   10c04:	ldr	r8, [sp, #16]
   10c08:	add	sp, sp, #20
   10c0c:	pop	{pc}		; (ldr pc, [sp], #4)
   10c10:	bl	10600 <__stack_chk_fail@plt>
   10c14:	andeq	r5, r2, r8, lsl r4
   10c18:	andeq	r0, r0, r4, asr r0
   10c1c:	muleq	r1, r4, ip
   10c20:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10c24:	mov	r7, r0
   10c28:	ldr	r6, [pc, #72]	; 10c78 <tcgetattr@plt+0x5d0>
   10c2c:	ldr	r5, [pc, #72]	; 10c7c <tcgetattr@plt+0x5d4>
   10c30:	add	r6, pc, r6
   10c34:	add	r5, pc, r5
   10c38:	sub	r6, r6, r5
   10c3c:	mov	r8, r1
   10c40:	mov	r9, r2
   10c44:	bl	105bc <calloc@plt-0x20>
   10c48:	asrs	r6, r6, #2
   10c4c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c50:	mov	r4, #0
   10c54:	add	r4, r4, #1
   10c58:	ldr	r3, [r5], #4
   10c5c:	mov	r2, r9
   10c60:	mov	r1, r8
   10c64:	mov	r0, r7
   10c68:	blx	r3
   10c6c:	cmp	r6, r4
   10c70:	bne	10c54 <tcgetattr@plt+0x5ac>
   10c74:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10c78:	strdeq	sp, [r1], -r4
   10c7c:	andeq	sp, r1, ip, ror #23
   10c80:	bx	lr

Disassembly of section .fini:

00010c84 <.fini>:
   10c84:	push	{r3, lr}
   10c88:	pop	{r3, pc}
