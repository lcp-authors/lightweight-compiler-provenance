
../repos/prog2/4:     file format elf32-littlearm


Disassembly of section .init:

00010958 <.init>:
   10958:	push	{r3, lr}
   1095c:	bl	10a50 <_start@@Base+0x3c>
   10960:	pop	{r3, pc}

Disassembly of section .plt:

00010964 <strcmp@plt-0x14>:
   10964:	push	{lr}		; (str lr, [sp, #-4]!)
   10968:	ldr	lr, [pc, #4]	; 10974 <strcmp@plt-0x4>
   1096c:	add	lr, pc, lr
   10970:	ldr	pc, [lr, #8]!
   10974:	andeq	r2, r1, ip, lsl #13

00010978 <strcmp@plt>:
   10978:	add	ip, pc, #0, 12
   1097c:	add	ip, ip, #73728	; 0x12000
   10980:	ldr	pc, [ip, #1676]!	; 0x68c

00010984 <printf@plt>:
   10984:	add	ip, pc, #0, 12
   10988:	add	ip, ip, #73728	; 0x12000
   1098c:	ldr	pc, [ip, #1668]!	; 0x684

00010990 <free@plt>:
   10990:	add	ip, pc, #0, 12
   10994:	add	ip, ip, #73728	; 0x12000
   10998:	ldr	pc, [ip, #1660]!	; 0x67c

0001099c <strdup@plt>:
   1099c:	add	ip, pc, #0, 12
   109a0:	add	ip, ip, #73728	; 0x12000
   109a4:	ldr	pc, [ip, #1652]!	; 0x674

000109a8 <strcpy@plt>:
   109a8:	add	ip, pc, #0, 12
   109ac:	add	ip, ip, #73728	; 0x12000
   109b0:	ldr	pc, [ip, #1644]!	; 0x66c

000109b4 <puts@plt>:
   109b4:	add	ip, pc, #0, 12
   109b8:	add	ip, ip, #73728	; 0x12000
   109bc:	ldr	pc, [ip, #1636]!	; 0x664

000109c0 <malloc@plt>:
   109c0:	add	ip, pc, #0, 12
   109c4:	add	ip, ip, #73728	; 0x12000
   109c8:	ldr	pc, [ip, #1628]!	; 0x65c

000109cc <__libc_start_main@plt>:
   109cc:	add	ip, pc, #0, 12
   109d0:	add	ip, ip, #73728	; 0x12000
   109d4:	ldr	pc, [ip, #1620]!	; 0x654

000109d8 <__gmon_start__@plt>:
   109d8:	add	ip, pc, #0, 12
   109dc:	add	ip, ip, #73728	; 0x12000
   109e0:	ldr	pc, [ip, #1612]!	; 0x64c

000109e4 <strlen@plt>:
   109e4:	add	ip, pc, #0, 12
   109e8:	add	ip, ip, #73728	; 0x12000
   109ec:	ldr	pc, [ip, #1604]!	; 0x644

000109f0 <setvbuf@plt>:
   109f0:	add	ip, pc, #0, 12
   109f4:	add	ip, ip, #73728	; 0x12000
   109f8:	ldr	pc, [ip, #1596]!	; 0x63c

000109fc <putchar@plt>:
   109fc:	add	ip, pc, #0, 12
   10a00:	add	ip, ip, #73728	; 0x12000
   10a04:	ldr	pc, [ip, #1588]!	; 0x634

00010a08 <abort@plt>:
   10a08:	add	ip, pc, #0, 12
   10a0c:	add	ip, ip, #73728	; 0x12000
   10a10:	ldr	pc, [ip, #1580]!	; 0x62c

Disassembly of section .text:

00010a14 <_start@@Base>:
   10a14:	mov	fp, #0
   10a18:	mov	lr, #0
   10a1c:	pop	{r1}		; (ldr r1, [sp], #4)
   10a20:	mov	r2, sp
   10a24:	push	{r2}		; (str r2, [sp, #-4]!)
   10a28:	push	{r0}		; (str r0, [sp, #-4]!)
   10a2c:	ldr	ip, [pc, #16]	; 10a44 <_start@@Base+0x30>
   10a30:	push	{ip}		; (str ip, [sp, #-4]!)
   10a34:	ldr	r0, [pc, #12]	; 10a48 <_start@@Base+0x34>
   10a38:	ldr	r3, [pc, #12]	; 10a4c <_start@@Base+0x38>
   10a3c:	bl	109cc <__libc_start_main@plt>
   10a40:	bl	10a08 <abort@plt>
   10a44:	andeq	r2, r1, r4, ror r8
   10a48:	andeq	r1, r1, r4, asr #30
   10a4c:	andeq	r2, r1, r4, lsl r8
   10a50:	ldr	r3, [pc, #20]	; 10a6c <_start@@Base+0x58>
   10a54:	ldr	r2, [pc, #20]	; 10a70 <_start@@Base+0x5c>
   10a58:	add	r3, pc, r3
   10a5c:	ldr	r2, [r3, r2]
   10a60:	cmp	r2, #0
   10a64:	bxeq	lr
   10a68:	b	109d8 <__gmon_start__@plt>
   10a6c:	andeq	r2, r1, r0, lsr #11
   10a70:	andeq	r0, r0, r4, asr #32
   10a74:	ldr	r3, [pc, #28]	; 10a98 <_start@@Base+0x84>
   10a78:	ldr	r0, [pc, #28]	; 10a9c <_start@@Base+0x88>
   10a7c:	sub	r3, r3, r0
   10a80:	cmp	r3, #6
   10a84:	bxls	lr
   10a88:	ldr	r3, [pc, #16]	; 10aa0 <_start@@Base+0x8c>
   10a8c:	cmp	r3, #0
   10a90:	bxeq	lr
   10a94:	bx	r3
   10a98:	andeq	r3, r2, r7, asr r0
   10a9c:	andeq	r3, r2, r4, asr r0
   10aa0:	andeq	r0, r0, r0
   10aa4:	ldr	r1, [pc, #36]	; 10ad0 <_start@@Base+0xbc>
   10aa8:	ldr	r0, [pc, #36]	; 10ad4 <_start@@Base+0xc0>
   10aac:	sub	r1, r1, r0
   10ab0:	asr	r1, r1, #2
   10ab4:	add	r1, r1, r1, lsr #31
   10ab8:	asrs	r1, r1, #1
   10abc:	bxeq	lr
   10ac0:	ldr	r3, [pc, #16]	; 10ad8 <_start@@Base+0xc4>
   10ac4:	cmp	r3, #0
   10ac8:	bxeq	lr
   10acc:	bx	r3
   10ad0:	andeq	r3, r2, r4, asr r0
   10ad4:	andeq	r3, r2, r4, asr r0
   10ad8:	andeq	r0, r0, r0
   10adc:	push	{r4, lr}
   10ae0:	ldr	r4, [pc, #24]	; 10b00 <_start@@Base+0xec>
   10ae4:	ldrb	r3, [r4]
   10ae8:	cmp	r3, #0
   10aec:	popne	{r4, pc}
   10af0:	bl	10a74 <_start@@Base+0x60>
   10af4:	mov	r3, #1
   10af8:	strb	r3, [r4]
   10afc:	pop	{r4, pc}
   10b00:	andeq	r3, r2, r4, asr r0
   10b04:	ldr	r0, [pc, #40]	; 10b34 <_start@@Base+0x120>
   10b08:	ldr	r3, [r0]
   10b0c:	cmp	r3, #0
   10b10:	bne	10b18 <_start@@Base+0x104>
   10b14:	b	10aa4 <_start@@Base+0x90>
   10b18:	ldr	r3, [pc, #24]	; 10b38 <_start@@Base+0x124>
   10b1c:	cmp	r3, #0
   10b20:	beq	10b14 <_start@@Base+0x100>
   10b24:	push	{r4, lr}
   10b28:	blx	r3
   10b2c:	pop	{r4, lr}
   10b30:	b	10aa4 <_start@@Base+0x90>
   10b34:	andeq	r2, r2, r4, lsl pc
   10b38:	andeq	r0, r0, r0

00010b3c <_l@@Base>:
   10b3c:	push	{r0, r1, r2, r3}
   10b40:	push	{fp, lr}
   10b44:	add	fp, sp, #4
   10b48:	sub	sp, sp, #24
   10b4c:	mov	r0, #12
   10b50:	bl	109c0 <malloc@plt>
   10b54:	mov	r3, r0
   10b58:	str	r3, [fp, #-16]
   10b5c:	ldr	r3, [fp, #-16]
   10b60:	mov	r2, #0
   10b64:	str	r2, [r3]
   10b68:	ldr	r3, [fp, #-16]
   10b6c:	mov	r2, #0
   10b70:	str	r2, [r3, #4]
   10b74:	ldr	r3, [fp, #-16]
   10b78:	ldr	r2, [fp, #4]
   10b7c:	str	r2, [r3, #8]
   10b80:	add	r3, fp, #8
   10b84:	str	r3, [fp, #-24]	; 0xffffffe8
   10b88:	mov	r3, #0
   10b8c:	str	r3, [fp, #-12]
   10b90:	b	10c64 <_l@@Base+0x128>
   10b94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10b98:	add	r2, r3, #4
   10b9c:	str	r2, [fp, #-24]	; 0xffffffe8
   10ba0:	ldr	r3, [r3]
   10ba4:	str	r3, [fp, #-20]	; 0xffffffec
   10ba8:	ldr	r3, [fp, #-12]
   10bac:	cmp	r3, #0
   10bb0:	bne	10be8 <_l@@Base+0xac>
   10bb4:	mov	r0, #12
   10bb8:	bl	109c0 <malloc@plt>
   10bbc:	mov	r3, r0
   10bc0:	mov	r2, r3
   10bc4:	ldr	r3, [fp, #-16]
   10bc8:	str	r2, [r3]
   10bcc:	ldr	r3, [fp, #-16]
   10bd0:	ldr	r3, [r3]
   10bd4:	str	r3, [fp, #-8]
   10bd8:	ldr	r3, [fp, #-8]
   10bdc:	mov	r2, #0
   10be0:	str	r2, [r3, #8]
   10be4:	b	10c1c <_l@@Base+0xe0>
   10be8:	mov	r0, #12
   10bec:	bl	109c0 <malloc@plt>
   10bf0:	mov	r3, r0
   10bf4:	mov	r2, r3
   10bf8:	ldr	r3, [fp, #-8]
   10bfc:	str	r2, [r3, #4]
   10c00:	ldr	r3, [fp, #-8]
   10c04:	ldr	r3, [r3, #4]
   10c08:	ldr	r2, [fp, #-8]
   10c0c:	str	r2, [r3, #8]
   10c10:	ldr	r3, [fp, #-8]
   10c14:	ldr	r3, [r3, #4]
   10c18:	str	r3, [fp, #-8]
   10c1c:	ldr	r0, [fp, #-20]	; 0xffffffec
   10c20:	bl	109e4 <strlen@plt>
   10c24:	mov	r3, r0
   10c28:	add	r3, r3, #1
   10c2c:	mov	r0, r3
   10c30:	bl	109c0 <malloc@plt>
   10c34:	mov	r3, r0
   10c38:	mov	r2, r3
   10c3c:	ldr	r3, [fp, #-8]
   10c40:	str	r2, [r3]
   10c44:	ldr	r3, [fp, #-8]
   10c48:	ldr	r3, [r3]
   10c4c:	ldr	r1, [fp, #-20]	; 0xffffffec
   10c50:	mov	r0, r3
   10c54:	bl	109a8 <strcpy@plt>
   10c58:	ldr	r3, [fp, #-12]
   10c5c:	add	r3, r3, #1
   10c60:	str	r3, [fp, #-12]
   10c64:	ldr	r2, [fp, #-12]
   10c68:	ldr	r3, [fp, #4]
   10c6c:	cmp	r2, r3
   10c70:	blt	10b94 <_l@@Base+0x58>
   10c74:	ldr	r3, [fp, #-8]
   10c78:	mov	r2, #0
   10c7c:	str	r2, [r3, #4]
   10c80:	ldr	r3, [fp, #-16]
   10c84:	ldr	r2, [fp, #-8]
   10c88:	str	r2, [r3, #4]
   10c8c:	ldr	r3, [fp, #-16]
   10c90:	mov	r0, r3
   10c94:	sub	sp, fp, #4
   10c98:	pop	{fp, lr}
   10c9c:	add	sp, sp, #16
   10ca0:	bx	lr

00010ca4 <_f@@Base>:
   10ca4:	push	{fp}		; (str fp, [sp, #-4]!)
   10ca8:	add	fp, sp, #0
   10cac:	sub	sp, sp, #20
   10cb0:	str	r0, [fp, #-16]
   10cb4:	str	r1, [fp, #-20]	; 0xffffffec
   10cb8:	ldr	r3, [fp, #-16]
   10cbc:	cmp	r3, #0
   10cc0:	bne	10ccc <_f@@Base+0x28>
   10cc4:	mov	r3, #0
   10cc8:	b	10d3c <_f@@Base+0x98>
   10ccc:	ldr	r3, [fp, #-16]
   10cd0:	ldr	r3, [r3]
   10cd4:	str	r3, [fp, #-12]
   10cd8:	mov	r3, #0
   10cdc:	str	r3, [fp, #-8]
   10ce0:	b	10cfc <_f@@Base+0x58>
   10ce4:	ldr	r3, [fp, #-12]
   10ce8:	ldr	r3, [r3, #4]
   10cec:	str	r3, [fp, #-12]
   10cf0:	ldr	r3, [fp, #-8]
   10cf4:	add	r3, r3, #1
   10cf8:	str	r3, [fp, #-8]
   10cfc:	ldr	r2, [fp, #-8]
   10d00:	ldr	r3, [fp, #-20]	; 0xffffffec
   10d04:	cmp	r2, r3
   10d08:	bge	10d18 <_f@@Base+0x74>
   10d0c:	ldr	r3, [fp, #-12]
   10d10:	cmp	r3, #0
   10d14:	bne	10ce4 <_f@@Base+0x40>
   10d18:	ldr	r2, [fp, #-20]	; 0xffffffec
   10d1c:	ldr	r3, [fp, #-8]
   10d20:	cmp	r2, r3
   10d24:	bne	10d34 <_f@@Base+0x90>
   10d28:	ldr	r3, [fp, #-12]
   10d2c:	ldr	r3, [r3]
   10d30:	b	10d3c <_f@@Base+0x98>
   10d34:	ldr	r3, [pc, #16]	; 10d4c <_f@@Base+0xa8>
   10d38:	add	r3, pc, r3
   10d3c:	mov	r0, r3
   10d40:	add	sp, fp, #0
   10d44:	pop	{fp}		; (ldr fp, [sp], #4)
   10d48:	bx	lr
   10d4c:	andeq	r1, r0, r4, asr #22

00010d50 <teste_lista_nova@@Base>:
   10d50:	push	{fp, lr}
   10d54:	add	fp, sp, #4
   10d58:	sub	sp, sp, #8
   10d5c:	mov	r3, #0
   10d60:	str	r3, [fp, #-8]
   10d64:	ldr	r3, [pc, #212]	; 10e40 <teste_lista_nova@@Base+0xf0>
   10d68:	add	r3, pc, r3
   10d6c:	mov	r0, r3
   10d70:	bl	10984 <printf@plt>
   10d74:	bl	12068 <lista_nova@@Base>
   10d78:	str	r0, [fp, #-12]
   10d7c:	ldr	r3, [fp, #-12]
   10d80:	cmp	r3, #0
   10d84:	bne	10dd4 <teste_lista_nova@@Base+0x84>
   10d88:	ldr	r3, [pc, #180]	; 10e44 <teste_lista_nova@@Base+0xf4>
   10d8c:	add	r3, pc, r3
   10d90:	mov	r0, r3
   10d94:	bl	10984 <printf@plt>
   10d98:	ldr	r3, [fp, #-8]
   10d9c:	add	r3, r3, #1
   10da0:	str	r3, [fp, #-8]
   10da4:	ldr	r3, [fp, #-8]
   10da8:	cmp	r3, #0
   10dac:	bne	10dc4 <teste_lista_nova@@Base+0x74>
   10db0:	ldr	r3, [pc, #144]	; 10e48 <teste_lista_nova@@Base+0xf8>
   10db4:	add	r3, pc, r3
   10db8:	mov	r0, r3
   10dbc:	bl	109b4 <puts@plt>
   10dc0:	b	10dcc <teste_lista_nova@@Base+0x7c>
   10dc4:	mov	r0, #10
   10dc8:	bl	109fc <putchar@plt>
   10dcc:	ldr	r3, [fp, #-8]
   10dd0:	b	10e34 <teste_lista_nova@@Base+0xe4>
   10dd4:	ldr	r3, [fp, #-12]
   10dd8:	ldr	r3, [r3, #8]
   10ddc:	cmp	r3, #0
   10de0:	beq	10e00 <teste_lista_nova@@Base+0xb0>
   10de4:	ldr	r3, [pc, #96]	; 10e4c <teste_lista_nova@@Base+0xfc>
   10de8:	add	r3, pc, r3
   10dec:	mov	r0, r3
   10df0:	bl	10984 <printf@plt>
   10df4:	ldr	r3, [fp, #-8]
   10df8:	add	r3, r3, #1
   10dfc:	str	r3, [fp, #-8]
   10e00:	ldr	r0, [fp, #-12]
   10e04:	bl	120b4 <lista_apaga@@Base>
   10e08:	ldr	r3, [fp, #-8]
   10e0c:	cmp	r3, #0
   10e10:	bne	10e28 <teste_lista_nova@@Base+0xd8>
   10e14:	ldr	r3, [pc, #52]	; 10e50 <teste_lista_nova@@Base+0x100>
   10e18:	add	r3, pc, r3
   10e1c:	mov	r0, r3
   10e20:	bl	109b4 <puts@plt>
   10e24:	b	10e30 <teste_lista_nova@@Base+0xe0>
   10e28:	mov	r0, #10
   10e2c:	bl	109fc <putchar@plt>
   10e30:	ldr	r3, [fp, #-8]
   10e34:	mov	r0, r3
   10e38:	sub	sp, fp, #4
   10e3c:	pop	{fp, pc}
   10e40:	andeq	r1, r0, r8, lsl fp
   10e44:	andeq	r1, r0, r4, lsl #22
   10e48:	strdeq	r1, [r0], -r4
   10e4c:	andeq	r1, r0, r4, asr #21
   10e50:	muleq	r0, r0, sl

00010e54 <teste_lista_insere@@Base>:
   10e54:	push	{fp, lr}
   10e58:	add	fp, sp, #4
   10e5c:	sub	sp, sp, #24
   10e60:	mov	r3, #0
   10e64:	str	r3, [fp, #-8]
   10e68:	ldr	r3, [pc, #1268]	; 11364 <teste_lista_insere@@Base+0x510>
   10e6c:	add	r3, pc, r3
   10e70:	str	r3, [fp, #-12]
   10e74:	ldr	r3, [pc, #1260]	; 11368 <teste_lista_insere@@Base+0x514>
   10e78:	add	r3, pc, r3
   10e7c:	str	r3, [fp, #-16]
   10e80:	ldr	r2, [fp, #-12]
   10e84:	ldr	r1, [fp, #-12]
   10e88:	mov	r0, #2
   10e8c:	bl	10b3c <_l@@Base>
   10e90:	str	r0, [fp, #-20]	; 0xffffffec
   10e94:	ldr	r3, [pc, #1232]	; 1136c <teste_lista_insere@@Base+0x518>
   10e98:	add	r3, pc, r3
   10e9c:	mov	r0, r3
   10ea0:	bl	10984 <printf@plt>
   10ea4:	ldr	r3, [fp, #-20]	; 0xffffffec
   10ea8:	ldr	r3, [r3]
   10eac:	ldr	r3, [r3, #4]
   10eb0:	mov	r2, r3
   10eb4:	ldr	r1, [fp, #-16]
   10eb8:	ldr	r0, [fp, #-20]	; 0xffffffec
   10ebc:	bl	12220 <lista_insere@@Base>
   10ec0:	str	r0, [fp, #-24]	; 0xffffffe8
   10ec4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10ec8:	cmp	r3, #0
   10ecc:	bne	10eec <teste_lista_insere@@Base+0x98>
   10ed0:	ldr	r3, [pc, #1176]	; 11370 <teste_lista_insere@@Base+0x51c>
   10ed4:	add	r3, pc, r3
   10ed8:	mov	r0, r3
   10edc:	bl	10984 <printf@plt>
   10ee0:	ldr	r3, [fp, #-8]
   10ee4:	add	r3, r3, #1
   10ee8:	str	r3, [fp, #-8]
   10eec:	ldr	r3, [fp, #-20]	; 0xffffffec
   10ef0:	ldr	r3, [r3, #8]
   10ef4:	cmp	r3, #3
   10ef8:	beq	10f18 <teste_lista_insere@@Base+0xc4>
   10efc:	ldr	r3, [pc, #1136]	; 11374 <teste_lista_insere@@Base+0x520>
   10f00:	add	r3, pc, r3
   10f04:	mov	r0, r3
   10f08:	bl	10984 <printf@plt>
   10f0c:	ldr	r3, [fp, #-8]
   10f10:	add	r3, r3, #1
   10f14:	str	r3, [fp, #-8]
   10f18:	ldr	r3, [fp, #-20]	; 0xffffffec
   10f1c:	ldr	r3, [r3, #8]
   10f20:	cmp	r3, #3
   10f24:	beq	10f58 <teste_lista_insere@@Base+0x104>
   10f28:	ldr	r3, [fp, #-8]
   10f2c:	cmp	r3, #0
   10f30:	bne	10f48 <teste_lista_insere@@Base+0xf4>
   10f34:	ldr	r3, [pc, #1084]	; 11378 <teste_lista_insere@@Base+0x524>
   10f38:	add	r3, pc, r3
   10f3c:	mov	r0, r3
   10f40:	bl	109b4 <puts@plt>
   10f44:	b	10f50 <teste_lista_insere@@Base+0xfc>
   10f48:	mov	r0, #10
   10f4c:	bl	109fc <putchar@plt>
   10f50:	ldr	r3, [fp, #-8]
   10f54:	b	11358 <teste_lista_insere@@Base+0x504>
   10f58:	ldr	r3, [fp, #-20]	; 0xffffffec
   10f5c:	ldr	r3, [r3]
   10f60:	ldr	r3, [r3]
   10f64:	ldr	r1, [fp, #-12]
   10f68:	mov	r0, r3
   10f6c:	bl	10978 <strcmp@plt>
   10f70:	mov	r3, r0
   10f74:	cmp	r3, #0
   10f78:	bne	10fd0 <teste_lista_insere@@Base+0x17c>
   10f7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   10f80:	ldr	r3, [r3]
   10f84:	ldr	r3, [r3, #4]
   10f88:	ldr	r3, [r3]
   10f8c:	ldr	r1, [fp, #-16]
   10f90:	mov	r0, r3
   10f94:	bl	10978 <strcmp@plt>
   10f98:	mov	r3, r0
   10f9c:	cmp	r3, #0
   10fa0:	bne	10fd0 <teste_lista_insere@@Base+0x17c>
   10fa4:	ldr	r3, [fp, #-20]	; 0xffffffec
   10fa8:	ldr	r3, [r3]
   10fac:	ldr	r3, [r3, #4]
   10fb0:	ldr	r3, [r3, #4]
   10fb4:	ldr	r3, [r3]
   10fb8:	ldr	r1, [fp, #-12]
   10fbc:	mov	r0, r3
   10fc0:	bl	10978 <strcmp@plt>
   10fc4:	mov	r3, r0
   10fc8:	cmp	r3, #0
   10fcc:	beq	10fec <teste_lista_insere@@Base+0x198>
   10fd0:	ldr	r3, [pc, #932]	; 1137c <teste_lista_insere@@Base+0x528>
   10fd4:	add	r3, pc, r3
   10fd8:	mov	r0, r3
   10fdc:	bl	10984 <printf@plt>
   10fe0:	ldr	r3, [fp, #-8]
   10fe4:	add	r3, r3, #1
   10fe8:	str	r3, [fp, #-8]
   10fec:	ldr	r3, [fp, #-20]	; 0xffffffec
   10ff0:	ldr	r3, [r3]
   10ff4:	mov	r2, r3
   10ff8:	ldr	r1, [fp, #-16]
   10ffc:	ldr	r0, [fp, #-20]	; 0xffffffec
   11000:	bl	12220 <lista_insere@@Base>
   11004:	str	r0, [fp, #-24]	; 0xffffffe8
   11008:	ldr	r3, [fp, #-20]	; 0xffffffec
   1100c:	ldr	r2, [r3]
   11010:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11014:	cmp	r2, r3
   11018:	beq	11038 <teste_lista_insere@@Base+0x1e4>
   1101c:	ldr	r3, [pc, #860]	; 11380 <teste_lista_insere@@Base+0x52c>
   11020:	add	r3, pc, r3
   11024:	mov	r0, r3
   11028:	bl	10984 <printf@plt>
   1102c:	ldr	r3, [fp, #-8]
   11030:	add	r3, r3, #1
   11034:	str	r3, [fp, #-8]
   11038:	ldr	r3, [fp, #-20]	; 0xffffffec
   1103c:	ldr	r3, [r3, #8]
   11040:	cmp	r3, #4
   11044:	beq	11064 <teste_lista_insere@@Base+0x210>
   11048:	ldr	r3, [pc, #820]	; 11384 <teste_lista_insere@@Base+0x530>
   1104c:	add	r3, pc, r3
   11050:	mov	r0, r3
   11054:	bl	10984 <printf@plt>
   11058:	ldr	r3, [fp, #-8]
   1105c:	add	r3, r3, #1
   11060:	str	r3, [fp, #-8]
   11064:	ldr	r3, [fp, #-20]	; 0xffffffec
   11068:	ldr	r3, [r3, #8]
   1106c:	cmp	r3, #4
   11070:	beq	110a4 <teste_lista_insere@@Base+0x250>
   11074:	ldr	r3, [fp, #-8]
   11078:	cmp	r3, #0
   1107c:	bne	11094 <teste_lista_insere@@Base+0x240>
   11080:	ldr	r3, [pc, #768]	; 11388 <teste_lista_insere@@Base+0x534>
   11084:	add	r3, pc, r3
   11088:	mov	r0, r3
   1108c:	bl	109b4 <puts@plt>
   11090:	b	1109c <teste_lista_insere@@Base+0x248>
   11094:	mov	r0, #10
   11098:	bl	109fc <putchar@plt>
   1109c:	ldr	r3, [fp, #-8]
   110a0:	b	11358 <teste_lista_insere@@Base+0x504>
   110a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   110a8:	ldr	r3, [r3]
   110ac:	ldr	r3, [r3]
   110b0:	ldr	r1, [fp, #-16]
   110b4:	mov	r0, r3
   110b8:	bl	10978 <strcmp@plt>
   110bc:	mov	r3, r0
   110c0:	cmp	r3, #0
   110c4:	bne	1114c <teste_lista_insere@@Base+0x2f8>
   110c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   110cc:	ldr	r3, [r3]
   110d0:	ldr	r3, [r3, #4]
   110d4:	ldr	r3, [r3]
   110d8:	ldr	r1, [fp, #-12]
   110dc:	mov	r0, r3
   110e0:	bl	10978 <strcmp@plt>
   110e4:	mov	r3, r0
   110e8:	cmp	r3, #0
   110ec:	bne	1114c <teste_lista_insere@@Base+0x2f8>
   110f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   110f4:	ldr	r3, [r3]
   110f8:	ldr	r3, [r3, #4]
   110fc:	ldr	r3, [r3, #4]
   11100:	ldr	r3, [r3]
   11104:	ldr	r1, [fp, #-16]
   11108:	mov	r0, r3
   1110c:	bl	10978 <strcmp@plt>
   11110:	mov	r3, r0
   11114:	cmp	r3, #0
   11118:	bne	1114c <teste_lista_insere@@Base+0x2f8>
   1111c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11120:	ldr	r3, [r3]
   11124:	ldr	r3, [r3, #4]
   11128:	ldr	r3, [r3, #4]
   1112c:	ldr	r3, [r3, #4]
   11130:	ldr	r3, [r3]
   11134:	ldr	r1, [fp, #-12]
   11138:	mov	r0, r3
   1113c:	bl	10978 <strcmp@plt>
   11140:	mov	r3, r0
   11144:	cmp	r3, #0
   11148:	beq	11168 <teste_lista_insere@@Base+0x314>
   1114c:	ldr	r3, [pc, #568]	; 1138c <teste_lista_insere@@Base+0x538>
   11150:	add	r3, pc, r3
   11154:	mov	r0, r3
   11158:	bl	10984 <printf@plt>
   1115c:	ldr	r3, [fp, #-8]
   11160:	add	r3, r3, #1
   11164:	str	r3, [fp, #-8]
   11168:	mov	r2, #0
   1116c:	ldr	r3, [pc, #540]	; 11390 <teste_lista_insere@@Base+0x53c>
   11170:	add	r3, pc, r3
   11174:	mov	r1, r3
   11178:	ldr	r0, [fp, #-20]	; 0xffffffec
   1117c:	bl	12220 <lista_insere@@Base>
   11180:	ldr	r3, [fp, #-20]	; 0xffffffec
   11184:	ldr	r3, [r3, #8]
   11188:	cmp	r3, #5
   1118c:	beq	111ac <teste_lista_insere@@Base+0x358>
   11190:	ldr	r3, [pc, #508]	; 11394 <teste_lista_insere@@Base+0x540>
   11194:	add	r3, pc, r3
   11198:	mov	r0, r3
   1119c:	bl	10984 <printf@plt>
   111a0:	ldr	r3, [fp, #-8]
   111a4:	add	r3, r3, #1
   111a8:	str	r3, [fp, #-8]
   111ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   111b0:	ldr	r3, [r3, #8]
   111b4:	cmp	r3, #5
   111b8:	beq	111ec <teste_lista_insere@@Base+0x398>
   111bc:	ldr	r3, [fp, #-8]
   111c0:	cmp	r3, #0
   111c4:	bne	111dc <teste_lista_insere@@Base+0x388>
   111c8:	ldr	r3, [pc, #456]	; 11398 <teste_lista_insere@@Base+0x544>
   111cc:	add	r3, pc, r3
   111d0:	mov	r0, r3
   111d4:	bl	109b4 <puts@plt>
   111d8:	b	111e4 <teste_lista_insere@@Base+0x390>
   111dc:	mov	r0, #10
   111e0:	bl	109fc <putchar@plt>
   111e4:	ldr	r3, [fp, #-8]
   111e8:	b	11358 <teste_lista_insere@@Base+0x504>
   111ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   111f0:	ldr	r3, [r3]
   111f4:	ldr	r3, [r3, #4]
   111f8:	ldr	r3, [r3, #4]
   111fc:	ldr	r3, [r3, #4]
   11200:	ldr	r3, [r3, #4]
   11204:	ldr	r3, [r3]
   11208:	ldr	r2, [pc, #396]	; 1139c <teste_lista_insere@@Base+0x548>
   1120c:	add	r2, pc, r2
   11210:	mov	r1, r2
   11214:	mov	r0, r3
   11218:	bl	10978 <strcmp@plt>
   1121c:	mov	r3, r0
   11220:	cmp	r3, #0
   11224:	beq	11244 <teste_lista_insere@@Base+0x3f0>
   11228:	ldr	r3, [pc, #368]	; 113a0 <teste_lista_insere@@Base+0x54c>
   1122c:	add	r3, pc, r3
   11230:	mov	r0, r3
   11234:	bl	10984 <printf@plt>
   11238:	ldr	r3, [fp, #-8]
   1123c:	add	r3, r3, #1
   11240:	str	r3, [fp, #-8]
   11244:	ldr	r0, [fp, #-20]	; 0xffffffec
   11248:	bl	120b4 <lista_apaga@@Base>
   1124c:	bl	12068 <lista_nova@@Base>
   11250:	str	r0, [fp, #-20]	; 0xffffffec
   11254:	mov	r2, #0
   11258:	ldr	r3, [pc, #324]	; 113a4 <teste_lista_insere@@Base+0x550>
   1125c:	add	r3, pc, r3
   11260:	mov	r1, r3
   11264:	ldr	r0, [fp, #-20]	; 0xffffffec
   11268:	bl	12220 <lista_insere@@Base>
   1126c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11270:	ldr	r3, [r3, #8]
   11274:	cmp	r3, #1
   11278:	beq	11298 <teste_lista_insere@@Base+0x444>
   1127c:	ldr	r3, [pc, #292]	; 113a8 <teste_lista_insere@@Base+0x554>
   11280:	add	r3, pc, r3
   11284:	mov	r0, r3
   11288:	bl	10984 <printf@plt>
   1128c:	ldr	r3, [fp, #-8]
   11290:	add	r3, r3, #1
   11294:	str	r3, [fp, #-8]
   11298:	ldr	r0, [fp, #-20]	; 0xffffffec
   1129c:	bl	1216c <lista_tamanho@@Base>
   112a0:	mov	r3, r0
   112a4:	cmp	r3, #1
   112a8:	beq	112dc <teste_lista_insere@@Base+0x488>
   112ac:	ldr	r3, [fp, #-8]
   112b0:	cmp	r3, #0
   112b4:	bne	112cc <teste_lista_insere@@Base+0x478>
   112b8:	ldr	r3, [pc, #236]	; 113ac <teste_lista_insere@@Base+0x558>
   112bc:	add	r3, pc, r3
   112c0:	mov	r0, r3
   112c4:	bl	109b4 <puts@plt>
   112c8:	b	112d4 <teste_lista_insere@@Base+0x480>
   112cc:	mov	r0, #10
   112d0:	bl	109fc <putchar@plt>
   112d4:	ldr	r3, [fp, #-8]
   112d8:	b	11358 <teste_lista_insere@@Base+0x504>
   112dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   112e0:	ldr	r3, [r3]
   112e4:	ldr	r3, [r3]
   112e8:	ldr	r2, [pc, #192]	; 113b0 <teste_lista_insere@@Base+0x55c>
   112ec:	add	r2, pc, r2
   112f0:	mov	r1, r2
   112f4:	mov	r0, r3
   112f8:	bl	10978 <strcmp@plt>
   112fc:	mov	r3, r0
   11300:	cmp	r3, #0
   11304:	beq	11324 <teste_lista_insere@@Base+0x4d0>
   11308:	ldr	r3, [pc, #164]	; 113b4 <teste_lista_insere@@Base+0x560>
   1130c:	add	r3, pc, r3
   11310:	mov	r0, r3
   11314:	bl	10984 <printf@plt>
   11318:	ldr	r3, [fp, #-8]
   1131c:	add	r3, r3, #1
   11320:	str	r3, [fp, #-8]
   11324:	ldr	r0, [fp, #-20]	; 0xffffffec
   11328:	bl	120b4 <lista_apaga@@Base>
   1132c:	ldr	r3, [fp, #-8]
   11330:	cmp	r3, #0
   11334:	bne	1134c <teste_lista_insere@@Base+0x4f8>
   11338:	ldr	r3, [pc, #120]	; 113b8 <teste_lista_insere@@Base+0x564>
   1133c:	add	r3, pc, r3
   11340:	mov	r0, r3
   11344:	bl	109b4 <puts@plt>
   11348:	b	11354 <teste_lista_insere@@Base+0x500>
   1134c:	mov	r0, #10
   11350:	bl	109fc <putchar@plt>
   11354:	ldr	r3, [fp, #-8]
   11358:	mov	r0, r3
   1135c:	sub	sp, fp, #4
   11360:	pop	{fp, pc}
   11364:	andeq	r1, r0, r4, ror #20
   11368:	andeq	r1, r0, ip, asr sl
   1136c:	andeq	r1, r0, r4, asr #20
   11370:	andeq	r1, r0, ip, lsl sl
   11374:	andeq	r1, r0, ip, lsl sl
   11378:	andeq	r1, r0, r0, ror r9
   1137c:	andeq	r1, r0, r4, lsl #19
   11380:	andeq	r1, r0, r0, ror r9
   11384:	andeq	r1, r0, r4, ror r9
   11388:	andeq	r1, r0, r4, lsr #16
   1138c:	andeq	r1, r0, r8, lsl #16
   11390:	andeq	r1, r0, r4, ror #14
   11394:	andeq	r1, r0, r8, ror #16
   11398:	ldrdeq	r1, [r0], -ip
   1139c:	andeq	r1, r0, r8, asr #13
   113a0:	andeq	r1, r0, ip, lsr #14
   113a4:	andeq	r1, r0, r8, ror r6
   113a8:			; <UNDEFINED> instruction: 0x000017b8
   113ac:	andeq	r1, r0, ip, ror #11
   113b0:	andeq	r1, r0, r8, ror #11
   113b4:	andeq	r1, r0, ip, asr #12
   113b8:	andeq	r1, r0, ip, ror #10

000113bc <teste_lista_remove@@Base>:
   113bc:	push	{fp, lr}
   113c0:	add	fp, sp, #4
   113c4:	sub	sp, sp, #24
   113c8:	mov	r3, #0
   113cc:	str	r3, [fp, #-8]
   113d0:	ldr	r3, [pc, #544]	; 115f8 <teste_lista_remove@@Base+0x23c>
   113d4:	add	r3, pc, r3
   113d8:	str	r3, [sp, #4]
   113dc:	ldr	r3, [pc, #536]	; 115fc <teste_lista_remove@@Base+0x240>
   113e0:	add	r3, pc, r3
   113e4:	str	r3, [sp]
   113e8:	ldr	r3, [pc, #528]	; 11600 <teste_lista_remove@@Base+0x244>
   113ec:	add	r3, pc, r3
   113f0:	ldr	r2, [pc, #524]	; 11604 <teste_lista_remove@@Base+0x248>
   113f4:	add	r2, pc, r2
   113f8:	ldr	r1, [pc, #520]	; 11608 <teste_lista_remove@@Base+0x24c>
   113fc:	add	r1, pc, r1
   11400:	mov	r0, #5
   11404:	bl	10b3c <_l@@Base>
   11408:	str	r0, [fp, #-12]
   1140c:	ldr	r3, [pc, #504]	; 1160c <teste_lista_remove@@Base+0x250>
   11410:	add	r3, pc, r3
   11414:	mov	r0, r3
   11418:	bl	10984 <printf@plt>
   1141c:	ldr	r3, [fp, #-12]
   11420:	ldr	r3, [r3]
   11424:	ldr	r3, [r3, #4]
   11428:	ldr	r3, [r3, #4]
   1142c:	ldr	r3, [r3, #4]
   11430:	mov	r1, r3
   11434:	ldr	r0, [fp, #-12]
   11438:	bl	123d0 <lista_remove@@Base>
   1143c:	str	r0, [fp, #-16]
   11440:	ldr	r3, [fp, #-12]
   11444:	ldr	r2, [r3, #4]
   11448:	ldr	r3, [fp, #-16]
   1144c:	cmp	r2, r3
   11450:	beq	11470 <teste_lista_remove@@Base+0xb4>
   11454:	ldr	r3, [pc, #436]	; 11610 <teste_lista_remove@@Base+0x254>
   11458:	add	r3, pc, r3
   1145c:	mov	r0, r3
   11460:	bl	10984 <printf@plt>
   11464:	ldr	r3, [fp, #-8]
   11468:	add	r3, r3, #1
   1146c:	str	r3, [fp, #-8]
   11470:	ldr	r3, [fp, #-12]
   11474:	ldr	r3, [r3, #8]
   11478:	cmp	r3, #4
   1147c:	beq	1149c <teste_lista_remove@@Base+0xe0>
   11480:	ldr	r3, [pc, #396]	; 11614 <teste_lista_remove@@Base+0x258>
   11484:	add	r3, pc, r3
   11488:	mov	r0, r3
   1148c:	bl	10984 <printf@plt>
   11490:	ldr	r3, [fp, #-8]
   11494:	add	r3, r3, #1
   11498:	str	r3, [fp, #-8]
   1149c:	ldr	r3, [fp, #-12]
   114a0:	ldr	r3, [r3]
   114a4:	ldr	r3, [r3]
   114a8:	ldr	r2, [pc, #360]	; 11618 <teste_lista_remove@@Base+0x25c>
   114ac:	add	r2, pc, r2
   114b0:	mov	r1, r2
   114b4:	mov	r0, r3
   114b8:	bl	10978 <strcmp@plt>
   114bc:	mov	r3, r0
   114c0:	cmp	r3, #0
   114c4:	bne	11564 <teste_lista_remove@@Base+0x1a8>
   114c8:	ldr	r3, [fp, #-12]
   114cc:	ldr	r3, [r3]
   114d0:	ldr	r3, [r3, #4]
   114d4:	ldr	r3, [r3]
   114d8:	ldr	r2, [pc, #316]	; 1161c <teste_lista_remove@@Base+0x260>
   114dc:	add	r2, pc, r2
   114e0:	mov	r1, r2
   114e4:	mov	r0, r3
   114e8:	bl	10978 <strcmp@plt>
   114ec:	mov	r3, r0
   114f0:	cmp	r3, #0
   114f4:	bne	11564 <teste_lista_remove@@Base+0x1a8>
   114f8:	ldr	r3, [fp, #-12]
   114fc:	ldr	r3, [r3]
   11500:	ldr	r3, [r3, #4]
   11504:	ldr	r3, [r3, #4]
   11508:	ldr	r3, [r3]
   1150c:	ldr	r2, [pc, #268]	; 11620 <teste_lista_remove@@Base+0x264>
   11510:	add	r2, pc, r2
   11514:	mov	r1, r2
   11518:	mov	r0, r3
   1151c:	bl	10978 <strcmp@plt>
   11520:	mov	r3, r0
   11524:	cmp	r3, #0
   11528:	bne	11564 <teste_lista_remove@@Base+0x1a8>
   1152c:	ldr	r3, [fp, #-12]
   11530:	ldr	r3, [r3]
   11534:	ldr	r3, [r3, #4]
   11538:	ldr	r3, [r3, #4]
   1153c:	ldr	r3, [r3, #4]
   11540:	ldr	r3, [r3]
   11544:	ldr	r2, [pc, #216]	; 11624 <teste_lista_remove@@Base+0x268>
   11548:	add	r2, pc, r2
   1154c:	mov	r1, r2
   11550:	mov	r0, r3
   11554:	bl	10978 <strcmp@plt>
   11558:	mov	r3, r0
   1155c:	cmp	r3, #0
   11560:	beq	11580 <teste_lista_remove@@Base+0x1c4>
   11564:	ldr	r3, [pc, #188]	; 11628 <teste_lista_remove@@Base+0x26c>
   11568:	add	r3, pc, r3
   1156c:	mov	r0, r3
   11570:	bl	10984 <printf@plt>
   11574:	ldr	r3, [fp, #-8]
   11578:	add	r3, r3, #1
   1157c:	str	r3, [fp, #-8]
   11580:	mov	r1, #0
   11584:	ldr	r0, [fp, #-12]
   11588:	bl	123d0 <lista_remove@@Base>
   1158c:	str	r0, [fp, #-16]
   11590:	ldr	r3, [fp, #-16]
   11594:	cmp	r3, #0
   11598:	beq	115b8 <teste_lista_remove@@Base+0x1fc>
   1159c:	ldr	r3, [pc, #136]	; 1162c <teste_lista_remove@@Base+0x270>
   115a0:	add	r3, pc, r3
   115a4:	mov	r0, r3
   115a8:	bl	10984 <printf@plt>
   115ac:	ldr	r3, [fp, #-8]
   115b0:	add	r3, r3, #1
   115b4:	str	r3, [fp, #-8]
   115b8:	ldr	r0, [fp, #-12]
   115bc:	bl	120b4 <lista_apaga@@Base>
   115c0:	ldr	r3, [fp, #-8]
   115c4:	cmp	r3, #0
   115c8:	bne	115e0 <teste_lista_remove@@Base+0x224>
   115cc:	ldr	r3, [pc, #92]	; 11630 <teste_lista_remove@@Base+0x274>
   115d0:	add	r3, pc, r3
   115d4:	mov	r0, r3
   115d8:	bl	109b4 <puts@plt>
   115dc:	b	115e8 <teste_lista_remove@@Base+0x22c>
   115e0:	mov	r0, #10
   115e4:	bl	109fc <putchar@plt>
   115e8:	ldr	r3, [fp, #-8]
   115ec:	mov	r0, r3
   115f0:	sub	sp, fp, #4
   115f4:	pop	{fp, pc}
   115f8:	andeq	r1, r0, ip, lsr #13
   115fc:	andeq	r1, r0, r4, lsr #13
   11600:	andeq	r1, r0, r8, lsl #13
   11604:	andeq	r1, r0, r4, lsl #13
   11608:	andeq	r1, r0, r0, lsl #13
   1160c:	andeq	r1, r0, r8, ror r6
   11610:	andeq	r1, r0, r4, asr #12
   11614:	andeq	r1, r0, r4, asr r6
   11618:	ldrdeq	r1, [r0], -r0
   1161c:	muleq	r0, ip, r5
   11620:	andeq	r1, r0, r4, ror #10
   11624:	andeq	r1, r0, r8, lsr r5
   11628:	andeq	r1, r0, ip, lsr #11
   1162c:	andeq	r1, r0, ip, lsr #11
   11630:	ldrdeq	r1, [r0], -r8

00011634 <teste_lista_pesquisa@@Base>:
   11634:	push	{fp, lr}
   11638:	add	fp, sp, #4
   1163c:	sub	sp, sp, #32
   11640:	mov	r3, #0
   11644:	str	r3, [fp, #-8]
   11648:	ldr	r3, [pc, #448]	; 11810 <teste_lista_pesquisa@@Base+0x1dc>
   1164c:	add	r3, pc, r3
   11650:	str	r3, [fp, #-12]
   11654:	ldr	r3, [pc, #440]	; 11814 <teste_lista_pesquisa@@Base+0x1e0>
   11658:	add	r3, pc, r3
   1165c:	str	r3, [fp, #-16]
   11660:	ldr	r3, [fp, #-12]
   11664:	str	r3, [sp, #12]
   11668:	ldr	r3, [fp, #-12]
   1166c:	str	r3, [sp, #8]
   11670:	ldr	r3, [fp, #-16]
   11674:	str	r3, [sp, #4]
   11678:	ldr	r3, [fp, #-12]
   1167c:	str	r3, [sp]
   11680:	ldr	r3, [fp, #-12]
   11684:	ldr	r2, [fp, #-12]
   11688:	ldr	r1, [fp, #-12]
   1168c:	mov	r0, #7
   11690:	bl	10b3c <_l@@Base>
   11694:	str	r0, [fp, #-20]	; 0xffffffec
   11698:	ldr	r3, [pc, #376]	; 11818 <teste_lista_pesquisa@@Base+0x1e4>
   1169c:	add	r3, pc, r3
   116a0:	mov	r0, r3
   116a4:	bl	10984 <printf@plt>
   116a8:	mov	r2, #0
   116ac:	ldr	r1, [fp, #-16]
   116b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   116b4:	bl	124d8 <lista_pesquisa@@Base>
   116b8:	mov	r2, r0
   116bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   116c0:	ldr	r3, [r3]
   116c4:	ldr	r3, [r3, #4]
   116c8:	ldr	r3, [r3, #4]
   116cc:	ldr	r3, [r3, #4]
   116d0:	ldr	r3, [r3, #4]
   116d4:	cmp	r2, r3
   116d8:	beq	116f8 <teste_lista_pesquisa@@Base+0xc4>
   116dc:	ldr	r3, [pc, #312]	; 1181c <teste_lista_pesquisa@@Base+0x1e8>
   116e0:	add	r3, pc, r3
   116e4:	mov	r0, r3
   116e8:	bl	10984 <printf@plt>
   116ec:	ldr	r3, [fp, #-8]
   116f0:	add	r3, r3, #1
   116f4:	str	r3, [fp, #-8]
   116f8:	mov	r2, #0
   116fc:	ldr	r3, [pc, #284]	; 11820 <teste_lista_pesquisa@@Base+0x1ec>
   11700:	add	r3, pc, r3
   11704:	mov	r1, r3
   11708:	ldr	r0, [fp, #-20]	; 0xffffffec
   1170c:	bl	124d8 <lista_pesquisa@@Base>
   11710:	mov	r3, r0
   11714:	cmp	r3, #0
   11718:	beq	11738 <teste_lista_pesquisa@@Base+0x104>
   1171c:	ldr	r3, [pc, #256]	; 11824 <teste_lista_pesquisa@@Base+0x1f0>
   11720:	add	r3, pc, r3
   11724:	mov	r0, r3
   11728:	bl	10984 <printf@plt>
   1172c:	ldr	r3, [fp, #-8]
   11730:	add	r3, r3, #1
   11734:	str	r3, [fp, #-8]
   11738:	mov	r2, #1
   1173c:	ldr	r1, [fp, #-12]
   11740:	ldr	r0, [fp, #-20]	; 0xffffffec
   11744:	bl	124d8 <lista_pesquisa@@Base>
   11748:	mov	r2, r0
   1174c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11750:	ldr	r3, [r3]
   11754:	ldr	r3, [r3, #4]
   11758:	ldr	r3, [r3, #4]
   1175c:	ldr	r3, [r3, #4]
   11760:	ldr	r3, [r3, #4]
   11764:	ldr	r3, [r3, #4]
   11768:	ldr	r3, [r3, #4]
   1176c:	cmp	r2, r3
   11770:	beq	11790 <teste_lista_pesquisa@@Base+0x15c>
   11774:	ldr	r3, [pc, #172]	; 11828 <teste_lista_pesquisa@@Base+0x1f4>
   11778:	add	r3, pc, r3
   1177c:	mov	r0, r3
   11780:	bl	10984 <printf@plt>
   11784:	ldr	r3, [fp, #-8]
   11788:	add	r3, r3, #1
   1178c:	str	r3, [fp, #-8]
   11790:	mov	r2, #1
   11794:	ldr	r3, [pc, #144]	; 1182c <teste_lista_pesquisa@@Base+0x1f8>
   11798:	add	r3, pc, r3
   1179c:	mov	r1, r3
   117a0:	ldr	r0, [fp, #-20]	; 0xffffffec
   117a4:	bl	124d8 <lista_pesquisa@@Base>
   117a8:	mov	r3, r0
   117ac:	cmp	r3, #0
   117b0:	beq	117d0 <teste_lista_pesquisa@@Base+0x19c>
   117b4:	ldr	r3, [pc, #116]	; 11830 <teste_lista_pesquisa@@Base+0x1fc>
   117b8:	add	r3, pc, r3
   117bc:	mov	r0, r3
   117c0:	bl	10984 <printf@plt>
   117c4:	ldr	r3, [fp, #-8]
   117c8:	add	r3, r3, #1
   117cc:	str	r3, [fp, #-8]
   117d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   117d4:	bl	120b4 <lista_apaga@@Base>
   117d8:	ldr	r3, [fp, #-8]
   117dc:	cmp	r3, #0
   117e0:	bne	117f8 <teste_lista_pesquisa@@Base+0x1c4>
   117e4:	ldr	r3, [pc, #72]	; 11834 <teste_lista_pesquisa@@Base+0x200>
   117e8:	add	r3, pc, r3
   117ec:	mov	r0, r3
   117f0:	bl	109b4 <puts@plt>
   117f4:	b	11800 <teste_lista_pesquisa@@Base+0x1cc>
   117f8:	mov	r0, #10
   117fc:	bl	109fc <putchar@plt>
   11800:	ldr	r3, [fp, #-8]
   11804:	mov	r0, r3
   11808:	sub	sp, fp, #4
   1180c:	pop	{fp, pc}
   11810:	andeq	r1, r0, r4, lsl #5
   11814:	andeq	r1, r0, r8, lsr #10
   11818:	andeq	r1, r0, r8, ror #9
   1181c:			; <UNDEFINED> instruction: 0x000014b8
   11820:	andeq	r1, r0, r0, ror #9
   11824:	andeq	r1, r0, r8, asr #9
   11828:	andeq	r1, r0, r0, lsr #8
   1182c:	andeq	r1, r0, r8, asr #8
   11830:	andeq	r1, r0, r0, lsr r4
   11834:	andeq	r1, r0, r0, asr #1

00011838 <teste_lista_ordena@@Base>:
   11838:	push	{fp, lr}
   1183c:	add	fp, sp, #4
   11840:	sub	sp, sp, #24
   11844:	mov	r3, #0
   11848:	str	r3, [fp, #-8]
   1184c:	ldr	r3, [pc, #768]	; 11b54 <teste_lista_ordena@@Base+0x31c>
   11850:	add	r3, pc, r3
   11854:	str	r3, [sp, #4]
   11858:	ldr	r3, [pc, #760]	; 11b58 <teste_lista_ordena@@Base+0x320>
   1185c:	add	r3, pc, r3
   11860:	str	r3, [sp]
   11864:	ldr	r3, [pc, #752]	; 11b5c <teste_lista_ordena@@Base+0x324>
   11868:	add	r3, pc, r3
   1186c:	ldr	r2, [pc, #748]	; 11b60 <teste_lista_ordena@@Base+0x328>
   11870:	add	r2, pc, r2
   11874:	ldr	r1, [pc, #744]	; 11b64 <teste_lista_ordena@@Base+0x32c>
   11878:	add	r1, pc, r1
   1187c:	mov	r0, #5
   11880:	bl	10b3c <_l@@Base>
   11884:	str	r0, [fp, #-12]
   11888:	ldr	r3, [pc, #728]	; 11b68 <teste_lista_ordena@@Base+0x330>
   1188c:	add	r3, pc, r3
   11890:	mov	r0, r3
   11894:	bl	10984 <printf@plt>
   11898:	mov	r0, #0
   1189c:	bl	12608 <lista_ordena@@Base>
   118a0:	str	r0, [fp, #-16]
   118a4:	ldr	r3, [fp, #-16]
   118a8:	cmn	r3, #1
   118ac:	beq	118cc <teste_lista_ordena@@Base+0x94>
   118b0:	ldr	r3, [pc, #692]	; 11b6c <teste_lista_ordena@@Base+0x334>
   118b4:	add	r3, pc, r3
   118b8:	mov	r0, r3
   118bc:	bl	10984 <printf@plt>
   118c0:	ldr	r3, [fp, #-8]
   118c4:	add	r3, r3, #1
   118c8:	str	r3, [fp, #-8]
   118cc:	ldr	r0, [fp, #-12]
   118d0:	bl	12608 <lista_ordena@@Base>
   118d4:	ldr	r3, [fp, #-12]
   118d8:	ldr	r3, [r3]
   118dc:	ldr	r3, [r3]
   118e0:	ldr	r2, [pc, #648]	; 11b70 <teste_lista_ordena@@Base+0x338>
   118e4:	add	r2, pc, r2
   118e8:	mov	r1, r2
   118ec:	mov	r0, r3
   118f0:	bl	10978 <strcmp@plt>
   118f4:	mov	r3, r0
   118f8:	cmp	r3, #0
   118fc:	bne	119d8 <teste_lista_ordena@@Base+0x1a0>
   11900:	ldr	r3, [fp, #-12]
   11904:	ldr	r3, [r3]
   11908:	ldr	r3, [r3, #4]
   1190c:	ldr	r3, [r3]
   11910:	ldr	r2, [pc, #604]	; 11b74 <teste_lista_ordena@@Base+0x33c>
   11914:	add	r2, pc, r2
   11918:	mov	r1, r2
   1191c:	mov	r0, r3
   11920:	bl	10978 <strcmp@plt>
   11924:	mov	r3, r0
   11928:	cmp	r3, #0
   1192c:	bne	119d8 <teste_lista_ordena@@Base+0x1a0>
   11930:	ldr	r3, [fp, #-12]
   11934:	ldr	r3, [r3]
   11938:	ldr	r3, [r3, #4]
   1193c:	ldr	r3, [r3, #4]
   11940:	ldr	r3, [r3]
   11944:	ldr	r2, [pc, #556]	; 11b78 <teste_lista_ordena@@Base+0x340>
   11948:	add	r2, pc, r2
   1194c:	mov	r1, r2
   11950:	mov	r0, r3
   11954:	bl	10978 <strcmp@plt>
   11958:	mov	r3, r0
   1195c:	cmp	r3, #0
   11960:	bne	119d8 <teste_lista_ordena@@Base+0x1a0>
   11964:	ldr	r3, [fp, #-12]
   11968:	ldr	r3, [r3]
   1196c:	ldr	r3, [r3, #4]
   11970:	ldr	r3, [r3, #4]
   11974:	ldr	r3, [r3, #4]
   11978:	ldr	r3, [r3]
   1197c:	ldr	r2, [pc, #504]	; 11b7c <teste_lista_ordena@@Base+0x344>
   11980:	add	r2, pc, r2
   11984:	mov	r1, r2
   11988:	mov	r0, r3
   1198c:	bl	10978 <strcmp@plt>
   11990:	mov	r3, r0
   11994:	cmp	r3, #0
   11998:	bne	119d8 <teste_lista_ordena@@Base+0x1a0>
   1199c:	ldr	r3, [fp, #-12]
   119a0:	ldr	r3, [r3]
   119a4:	ldr	r3, [r3, #4]
   119a8:	ldr	r3, [r3, #4]
   119ac:	ldr	r3, [r3, #4]
   119b0:	ldr	r3, [r3, #4]
   119b4:	ldr	r3, [r3]
   119b8:	ldr	r2, [pc, #448]	; 11b80 <teste_lista_ordena@@Base+0x348>
   119bc:	add	r2, pc, r2
   119c0:	mov	r1, r2
   119c4:	mov	r0, r3
   119c8:	bl	10978 <strcmp@plt>
   119cc:	mov	r3, r0
   119d0:	cmp	r3, #0
   119d4:	beq	119f4 <teste_lista_ordena@@Base+0x1bc>
   119d8:	ldr	r3, [pc, #420]	; 11b84 <teste_lista_ordena@@Base+0x34c>
   119dc:	add	r3, pc, r3
   119e0:	mov	r0, r3
   119e4:	bl	10984 <printf@plt>
   119e8:	ldr	r3, [fp, #-8]
   119ec:	add	r3, r3, #1
   119f0:	str	r3, [fp, #-8]
   119f4:	ldr	r3, [fp, #-12]
   119f8:	ldr	r3, [r3, #4]
   119fc:	ldr	r3, [r3]
   11a00:	ldr	r2, [pc, #384]	; 11b88 <teste_lista_ordena@@Base+0x350>
   11a04:	add	r2, pc, r2
   11a08:	mov	r1, r2
   11a0c:	mov	r0, r3
   11a10:	bl	10978 <strcmp@plt>
   11a14:	mov	r3, r0
   11a18:	cmp	r3, #0
   11a1c:	bne	11af8 <teste_lista_ordena@@Base+0x2c0>
   11a20:	ldr	r3, [fp, #-12]
   11a24:	ldr	r3, [r3, #4]
   11a28:	ldr	r3, [r3, #8]
   11a2c:	ldr	r3, [r3]
   11a30:	ldr	r2, [pc, #340]	; 11b8c <teste_lista_ordena@@Base+0x354>
   11a34:	add	r2, pc, r2
   11a38:	mov	r1, r2
   11a3c:	mov	r0, r3
   11a40:	bl	10978 <strcmp@plt>
   11a44:	mov	r3, r0
   11a48:	cmp	r3, #0
   11a4c:	bne	11af8 <teste_lista_ordena@@Base+0x2c0>
   11a50:	ldr	r3, [fp, #-12]
   11a54:	ldr	r3, [r3, #4]
   11a58:	ldr	r3, [r3, #8]
   11a5c:	ldr	r3, [r3, #8]
   11a60:	ldr	r3, [r3]
   11a64:	ldr	r2, [pc, #292]	; 11b90 <teste_lista_ordena@@Base+0x358>
   11a68:	add	r2, pc, r2
   11a6c:	mov	r1, r2
   11a70:	mov	r0, r3
   11a74:	bl	10978 <strcmp@plt>
   11a78:	mov	r3, r0
   11a7c:	cmp	r3, #0
   11a80:	bne	11af8 <teste_lista_ordena@@Base+0x2c0>
   11a84:	ldr	r3, [fp, #-12]
   11a88:	ldr	r3, [r3, #4]
   11a8c:	ldr	r3, [r3, #8]
   11a90:	ldr	r3, [r3, #8]
   11a94:	ldr	r3, [r3, #8]
   11a98:	ldr	r3, [r3]
   11a9c:	ldr	r2, [pc, #240]	; 11b94 <teste_lista_ordena@@Base+0x35c>
   11aa0:	add	r2, pc, r2
   11aa4:	mov	r1, r2
   11aa8:	mov	r0, r3
   11aac:	bl	10978 <strcmp@plt>
   11ab0:	mov	r3, r0
   11ab4:	cmp	r3, #0
   11ab8:	bne	11af8 <teste_lista_ordena@@Base+0x2c0>
   11abc:	ldr	r3, [fp, #-12]
   11ac0:	ldr	r3, [r3, #4]
   11ac4:	ldr	r3, [r3, #8]
   11ac8:	ldr	r3, [r3, #8]
   11acc:	ldr	r3, [r3, #8]
   11ad0:	ldr	r3, [r3, #8]
   11ad4:	ldr	r3, [r3]
   11ad8:	ldr	r2, [pc, #184]	; 11b98 <teste_lista_ordena@@Base+0x360>
   11adc:	add	r2, pc, r2
   11ae0:	mov	r1, r2
   11ae4:	mov	r0, r3
   11ae8:	bl	10978 <strcmp@plt>
   11aec:	mov	r3, r0
   11af0:	cmp	r3, #0
   11af4:	beq	11b14 <teste_lista_ordena@@Base+0x2dc>
   11af8:	ldr	r3, [pc, #156]	; 11b9c <teste_lista_ordena@@Base+0x364>
   11afc:	add	r3, pc, r3
   11b00:	mov	r0, r3
   11b04:	bl	10984 <printf@plt>
   11b08:	ldr	r3, [fp, #-8]
   11b0c:	add	r3, r3, #1
   11b10:	str	r3, [fp, #-8]
   11b14:	ldr	r0, [fp, #-12]
   11b18:	bl	120b4 <lista_apaga@@Base>
   11b1c:	ldr	r3, [fp, #-8]
   11b20:	cmp	r3, #0
   11b24:	bne	11b3c <teste_lista_ordena@@Base+0x304>
   11b28:	ldr	r3, [pc, #112]	; 11ba0 <teste_lista_ordena@@Base+0x368>
   11b2c:	add	r3, pc, r3
   11b30:	mov	r0, r3
   11b34:	bl	109b4 <puts@plt>
   11b38:	b	11b44 <teste_lista_ordena@@Base+0x30c>
   11b3c:	mov	r0, #10
   11b40:	bl	109fc <putchar@plt>
   11b44:	ldr	r3, [fp, #-8]
   11b48:	mov	r0, r3
   11b4c:	sub	sp, fp, #4
   11b50:	pop	{fp, pc}
   11b54:	andeq	r1, r0, r4, ror #7
   11b58:	ldrdeq	r1, [r0], -ip
   11b5c:	andeq	r1, r0, r0, asr #7
   11b60:			; <UNDEFINED> instruction: 0x000013bc
   11b64:			; <UNDEFINED> instruction: 0x000013b8
   11b68:			; <UNDEFINED> instruction: 0x000013b0
   11b6c:	muleq	r0, ip, r3
   11b70:	andeq	r1, r0, ip, asr #6
   11b74:	andeq	r1, r0, r8, lsl r3
   11b78:	strdeq	r1, [r0], -r0
   11b7c:			; <UNDEFINED> instruction: 0x000012b4
   11b80:	andeq	r1, r0, ip, ror #4
   11b84:	andeq	r1, r0, r4, lsr #5
   11b88:	andeq	r1, r0, r4, lsr #4
   11b8c:	andeq	r1, r0, r0, lsl #4
   11b90:	ldrdeq	r1, [r0], -r0
   11b94:	andeq	r1, r0, ip, lsl #3
   11b98:	andeq	r1, r0, r4, asr r1
   11b9c:	andeq	r1, r0, r4, asr #3
   11ba0:	andeq	r0, r0, ip, ror sp

00011ba4 <teste_lista_inverte@@Base>:
   11ba4:	push	{fp, lr}
   11ba8:	add	fp, sp, #4
   11bac:	sub	sp, sp, #24
   11bb0:	mov	r3, #0
   11bb4:	str	r3, [fp, #-8]
   11bb8:	ldr	r3, [pc, #816]	; 11ef0 <teste_lista_inverte@@Base+0x34c>
   11bbc:	add	r3, pc, r3
   11bc0:	str	r3, [sp, #4]
   11bc4:	ldr	r3, [pc, #808]	; 11ef4 <teste_lista_inverte@@Base+0x350>
   11bc8:	add	r3, pc, r3
   11bcc:	str	r3, [sp]
   11bd0:	ldr	r3, [pc, #800]	; 11ef8 <teste_lista_inverte@@Base+0x354>
   11bd4:	add	r3, pc, r3
   11bd8:	ldr	r2, [pc, #796]	; 11efc <teste_lista_inverte@@Base+0x358>
   11bdc:	add	r2, pc, r2
   11be0:	ldr	r1, [pc, #792]	; 11f00 <teste_lista_inverte@@Base+0x35c>
   11be4:	add	r1, pc, r1
   11be8:	mov	r0, #5
   11bec:	bl	10b3c <_l@@Base>
   11bf0:	str	r0, [fp, #-12]
   11bf4:	ldr	r3, [pc, #776]	; 11f04 <teste_lista_inverte@@Base+0x360>
   11bf8:	add	r3, pc, r3
   11bfc:	mov	r0, r3
   11c00:	bl	10984 <printf@plt>
   11c04:	mov	r0, #0
   11c08:	bl	1270c <lista_inverte@@Base>
   11c0c:	str	r0, [fp, #-16]
   11c10:	ldr	r3, [fp, #-16]
   11c14:	cmn	r3, #1
   11c18:	beq	11c38 <teste_lista_inverte@@Base+0x94>
   11c1c:	ldr	r3, [pc, #740]	; 11f08 <teste_lista_inverte@@Base+0x364>
   11c20:	add	r3, pc, r3
   11c24:	mov	r0, r3
   11c28:	bl	10984 <printf@plt>
   11c2c:	ldr	r3, [fp, #-8]
   11c30:	add	r3, r3, #1
   11c34:	str	r3, [fp, #-8]
   11c38:	ldr	r0, [fp, #-12]
   11c3c:	bl	1270c <lista_inverte@@Base>
   11c40:	str	r0, [fp, #-16]
   11c44:	ldr	r3, [fp, #-12]
   11c48:	ldr	r3, [r3, #8]
   11c4c:	cmp	r3, #5
   11c50:	beq	11c70 <teste_lista_inverte@@Base+0xcc>
   11c54:	ldr	r3, [pc, #688]	; 11f0c <teste_lista_inverte@@Base+0x368>
   11c58:	add	r3, pc, r3
   11c5c:	mov	r0, r3
   11c60:	bl	10984 <printf@plt>
   11c64:	ldr	r3, [fp, #-8]
   11c68:	add	r3, r3, #1
   11c6c:	str	r3, [fp, #-8]
   11c70:	ldr	r3, [fp, #-12]
   11c74:	ldr	r3, [r3]
   11c78:	ldr	r3, [r3]
   11c7c:	ldr	r2, [pc, #652]	; 11f10 <teste_lista_inverte@@Base+0x36c>
   11c80:	add	r2, pc, r2
   11c84:	mov	r1, r2
   11c88:	mov	r0, r3
   11c8c:	bl	10978 <strcmp@plt>
   11c90:	mov	r3, r0
   11c94:	cmp	r3, #0
   11c98:	bne	11d74 <teste_lista_inverte@@Base+0x1d0>
   11c9c:	ldr	r3, [fp, #-12]
   11ca0:	ldr	r3, [r3]
   11ca4:	ldr	r3, [r3, #4]
   11ca8:	ldr	r3, [r3]
   11cac:	ldr	r2, [pc, #608]	; 11f14 <teste_lista_inverte@@Base+0x370>
   11cb0:	add	r2, pc, r2
   11cb4:	mov	r1, r2
   11cb8:	mov	r0, r3
   11cbc:	bl	10978 <strcmp@plt>
   11cc0:	mov	r3, r0
   11cc4:	cmp	r3, #0
   11cc8:	bne	11d74 <teste_lista_inverte@@Base+0x1d0>
   11ccc:	ldr	r3, [fp, #-12]
   11cd0:	ldr	r3, [r3]
   11cd4:	ldr	r3, [r3, #4]
   11cd8:	ldr	r3, [r3, #4]
   11cdc:	ldr	r3, [r3]
   11ce0:	ldr	r2, [pc, #560]	; 11f18 <teste_lista_inverte@@Base+0x374>
   11ce4:	add	r2, pc, r2
   11ce8:	mov	r1, r2
   11cec:	mov	r0, r3
   11cf0:	bl	10978 <strcmp@plt>
   11cf4:	mov	r3, r0
   11cf8:	cmp	r3, #0
   11cfc:	bne	11d74 <teste_lista_inverte@@Base+0x1d0>
   11d00:	ldr	r3, [fp, #-12]
   11d04:	ldr	r3, [r3]
   11d08:	ldr	r3, [r3, #4]
   11d0c:	ldr	r3, [r3, #4]
   11d10:	ldr	r3, [r3, #4]
   11d14:	ldr	r3, [r3]
   11d18:	ldr	r2, [pc, #508]	; 11f1c <teste_lista_inverte@@Base+0x378>
   11d1c:	add	r2, pc, r2
   11d20:	mov	r1, r2
   11d24:	mov	r0, r3
   11d28:	bl	10978 <strcmp@plt>
   11d2c:	mov	r3, r0
   11d30:	cmp	r3, #0
   11d34:	bne	11d74 <teste_lista_inverte@@Base+0x1d0>
   11d38:	ldr	r3, [fp, #-12]
   11d3c:	ldr	r3, [r3]
   11d40:	ldr	r3, [r3, #4]
   11d44:	ldr	r3, [r3, #4]
   11d48:	ldr	r3, [r3, #4]
   11d4c:	ldr	r3, [r3, #4]
   11d50:	ldr	r3, [r3]
   11d54:	ldr	r2, [pc, #452]	; 11f20 <teste_lista_inverte@@Base+0x37c>
   11d58:	add	r2, pc, r2
   11d5c:	mov	r1, r2
   11d60:	mov	r0, r3
   11d64:	bl	10978 <strcmp@plt>
   11d68:	mov	r3, r0
   11d6c:	cmp	r3, #0
   11d70:	beq	11d90 <teste_lista_inverte@@Base+0x1ec>
   11d74:	ldr	r3, [pc, #424]	; 11f24 <teste_lista_inverte@@Base+0x380>
   11d78:	add	r3, pc, r3
   11d7c:	mov	r0, r3
   11d80:	bl	10984 <printf@plt>
   11d84:	ldr	r3, [fp, #-8]
   11d88:	add	r3, r3, #1
   11d8c:	str	r3, [fp, #-8]
   11d90:	ldr	r3, [fp, #-12]
   11d94:	ldr	r3, [r3, #4]
   11d98:	ldr	r3, [r3]
   11d9c:	ldr	r2, [pc, #388]	; 11f28 <teste_lista_inverte@@Base+0x384>
   11da0:	add	r2, pc, r2
   11da4:	mov	r1, r2
   11da8:	mov	r0, r3
   11dac:	bl	10978 <strcmp@plt>
   11db0:	mov	r3, r0
   11db4:	cmp	r3, #0
   11db8:	bne	11e94 <teste_lista_inverte@@Base+0x2f0>
   11dbc:	ldr	r3, [fp, #-12]
   11dc0:	ldr	r3, [r3, #4]
   11dc4:	ldr	r3, [r3, #8]
   11dc8:	ldr	r3, [r3]
   11dcc:	ldr	r2, [pc, #344]	; 11f2c <teste_lista_inverte@@Base+0x388>
   11dd0:	add	r2, pc, r2
   11dd4:	mov	r1, r2
   11dd8:	mov	r0, r3
   11ddc:	bl	10978 <strcmp@plt>
   11de0:	mov	r3, r0
   11de4:	cmp	r3, #0
   11de8:	bne	11e94 <teste_lista_inverte@@Base+0x2f0>
   11dec:	ldr	r3, [fp, #-12]
   11df0:	ldr	r3, [r3, #4]
   11df4:	ldr	r3, [r3, #8]
   11df8:	ldr	r3, [r3, #8]
   11dfc:	ldr	r3, [r3]
   11e00:	ldr	r2, [pc, #296]	; 11f30 <teste_lista_inverte@@Base+0x38c>
   11e04:	add	r2, pc, r2
   11e08:	mov	r1, r2
   11e0c:	mov	r0, r3
   11e10:	bl	10978 <strcmp@plt>
   11e14:	mov	r3, r0
   11e18:	cmp	r3, #0
   11e1c:	bne	11e94 <teste_lista_inverte@@Base+0x2f0>
   11e20:	ldr	r3, [fp, #-12]
   11e24:	ldr	r3, [r3, #4]
   11e28:	ldr	r3, [r3, #8]
   11e2c:	ldr	r3, [r3, #8]
   11e30:	ldr	r3, [r3, #8]
   11e34:	ldr	r3, [r3]
   11e38:	ldr	r2, [pc, #244]	; 11f34 <teste_lista_inverte@@Base+0x390>
   11e3c:	add	r2, pc, r2
   11e40:	mov	r1, r2
   11e44:	mov	r0, r3
   11e48:	bl	10978 <strcmp@plt>
   11e4c:	mov	r3, r0
   11e50:	cmp	r3, #0
   11e54:	bne	11e94 <teste_lista_inverte@@Base+0x2f0>
   11e58:	ldr	r3, [fp, #-12]
   11e5c:	ldr	r3, [r3, #4]
   11e60:	ldr	r3, [r3, #8]
   11e64:	ldr	r3, [r3, #8]
   11e68:	ldr	r3, [r3, #8]
   11e6c:	ldr	r3, [r3, #8]
   11e70:	ldr	r3, [r3]
   11e74:	ldr	r2, [pc, #188]	; 11f38 <teste_lista_inverte@@Base+0x394>
   11e78:	add	r2, pc, r2
   11e7c:	mov	r1, r2
   11e80:	mov	r0, r3
   11e84:	bl	10978 <strcmp@plt>
   11e88:	mov	r3, r0
   11e8c:	cmp	r3, #0
   11e90:	beq	11eb0 <teste_lista_inverte@@Base+0x30c>
   11e94:	ldr	r3, [pc, #160]	; 11f3c <teste_lista_inverte@@Base+0x398>
   11e98:	add	r3, pc, r3
   11e9c:	mov	r0, r3
   11ea0:	bl	10984 <printf@plt>
   11ea4:	ldr	r3, [fp, #-8]
   11ea8:	add	r3, r3, #1
   11eac:	str	r3, [fp, #-8]
   11eb0:	ldr	r0, [fp, #-12]
   11eb4:	bl	120b4 <lista_apaga@@Base>
   11eb8:	ldr	r3, [fp, #-8]
   11ebc:	cmp	r3, #0
   11ec0:	bne	11ed8 <teste_lista_inverte@@Base+0x334>
   11ec4:	ldr	r3, [pc, #116]	; 11f40 <teste_lista_inverte@@Base+0x39c>
   11ec8:	add	r3, pc, r3
   11ecc:	mov	r0, r3
   11ed0:	bl	109b4 <puts@plt>
   11ed4:	b	11ee0 <teste_lista_inverte@@Base+0x33c>
   11ed8:	mov	r0, #10
   11edc:	bl	109fc <putchar@plt>
   11ee0:	ldr	r3, [fp, #-8]
   11ee4:	mov	r0, r3
   11ee8:	sub	sp, fp, #4
   11eec:	pop	{fp, pc}
   11ef0:	andeq	r1, r0, r8, ror r0
   11ef4:	andeq	r1, r0, r0, ror r0
   11ef8:	andeq	r1, r0, r4, asr r0
   11efc:	andeq	r1, r0, r0, asr r0
   11f00:	andeq	r1, r0, ip, asr #32
   11f04:	andeq	r1, r0, r8, lsl #2
   11f08:	andeq	r1, r0, r0, lsr r0
   11f0c:	strheq	r1, [r0], -ip
   11f10:			; <UNDEFINED> instruction: 0x00000fb4
   11f14:	andeq	r0, r0, r8, lsl #31
   11f18:	andeq	r0, r0, r4, asr #30
   11f1c:	andeq	r0, r0, r0, lsl pc
   11f20:	ldrdeq	r0, [r0], -r8
   11f24:	andeq	r0, r0, r8, asr #31
   11f28:	muleq	r0, r0, lr
   11f2c:	andeq	r0, r0, ip, asr lr
   11f30:	andeq	r0, r0, r4, lsr #28
   11f34:	strdeq	r0, [r0], -ip
   11f38:			; <UNDEFINED> instruction: 0x00000dbc
   11f3c:	andeq	r0, r0, r8, lsr #28
   11f40:	andeq	r0, r0, r0, ror #19

00011f44 <main@@Base>:
   11f44:	push	{r4, fp, lr}
   11f48:	add	fp, sp, #8
   11f4c:	sub	sp, sp, #12
   11f50:	ldr	r4, [pc, #252]	; 12054 <main@@Base+0x110>
   11f54:	add	r4, pc, r4
   11f58:	ldr	r3, [pc, #248]	; 12058 <main@@Base+0x114>
   11f5c:	ldr	r3, [r4, r3]
   11f60:	ldr	r0, [r3]
   11f64:	mov	r3, #0
   11f68:	mov	r2, #2
   11f6c:	mov	r1, #0
   11f70:	bl	109f0 <setvbuf@plt>
   11f74:	ldr	r3, [pc, #224]	; 1205c <main@@Base+0x118>
   11f78:	ldr	r3, [r4, r3]
   11f7c:	ldr	r0, [r3]
   11f80:	mov	r3, #0
   11f84:	mov	r2, #2
   11f88:	mov	r1, #0
   11f8c:	bl	109f0 <setvbuf@plt>
   11f90:	mov	r3, #0
   11f94:	str	r3, [fp, #-16]
   11f98:	bl	10d50 <teste_lista_nova@@Base>
   11f9c:	mov	r2, r0
   11fa0:	ldr	r3, [fp, #-16]
   11fa4:	add	r3, r3, r2
   11fa8:	str	r3, [fp, #-16]
   11fac:	bl	10e54 <teste_lista_insere@@Base>
   11fb0:	mov	r2, r0
   11fb4:	ldr	r3, [fp, #-16]
   11fb8:	add	r3, r3, r2
   11fbc:	str	r3, [fp, #-16]
   11fc0:	bl	113bc <teste_lista_remove@@Base>
   11fc4:	mov	r2, r0
   11fc8:	ldr	r3, [fp, #-16]
   11fcc:	add	r3, r3, r2
   11fd0:	str	r3, [fp, #-16]
   11fd4:	bl	11634 <teste_lista_pesquisa@@Base>
   11fd8:	mov	r2, r0
   11fdc:	ldr	r3, [fp, #-16]
   11fe0:	add	r3, r3, r2
   11fe4:	str	r3, [fp, #-16]
   11fe8:	bl	11838 <teste_lista_ordena@@Base>
   11fec:	mov	r2, r0
   11ff0:	ldr	r3, [fp, #-16]
   11ff4:	add	r3, r3, r2
   11ff8:	str	r3, [fp, #-16]
   11ffc:	bl	11ba4 <teste_lista_inverte@@Base>
   12000:	mov	r2, r0
   12004:	ldr	r3, [fp, #-16]
   12008:	add	r3, r3, r2
   1200c:	str	r3, [fp, #-16]
   12010:	ldr	r3, [fp, #-16]
   12014:	cmp	r3, #0
   12018:	bne	12030 <main@@Base+0xec>
   1201c:	ldr	r3, [pc, #60]	; 12060 <main@@Base+0x11c>
   12020:	add	r3, pc, r3
   12024:	mov	r0, r3
   12028:	bl	109b4 <puts@plt>
   1202c:	b	12044 <main@@Base+0x100>
   12030:	ldr	r1, [fp, #-16]
   12034:	ldr	r3, [pc, #40]	; 12064 <main@@Base+0x120>
   12038:	add	r3, pc, r3
   1203c:	mov	r0, r3
   12040:	bl	10984 <printf@plt>
   12044:	mov	r3, #0
   12048:	mov	r0, r3
   1204c:	sub	sp, fp, #8
   12050:	pop	{r4, fp, pc}
   12054:	andeq	r1, r1, r4, lsr #1
   12058:	andeq	r0, r0, r8, asr #32
   1205c:	andeq	r0, r0, r0, asr #32
   12060:	andeq	r0, r0, r0, ror #26
   12064:	andeq	r0, r0, r0, ror #26

00012068 <lista_nova@@Base>:
   12068:	push	{fp, lr}
   1206c:	add	fp, sp, #4
   12070:	sub	sp, sp, #8
   12074:	mov	r0, #12
   12078:	bl	109c0 <malloc@plt>
   1207c:	mov	r3, r0
   12080:	str	r3, [fp, #-8]
   12084:	ldr	r3, [fp, #-8]
   12088:	cmp	r3, #0
   1208c:	bne	12098 <lista_nova@@Base+0x30>
   12090:	mov	r3, #0
   12094:	b	120a8 <lista_nova@@Base+0x40>
   12098:	ldr	r3, [fp, #-8]
   1209c:	mov	r2, #0
   120a0:	str	r2, [r3, #8]
   120a4:	ldr	r3, [fp, #-8]
   120a8:	mov	r0, r3
   120ac:	sub	sp, fp, #4
   120b0:	pop	{fp, pc}

000120b4 <lista_apaga@@Base>:
   120b4:	push	{fp, lr}
   120b8:	add	fp, sp, #4
   120bc:	sub	sp, sp, #16
   120c0:	str	r0, [fp, #-16]
   120c4:	ldr	r3, [fp, #-16]
   120c8:	cmp	r3, #0
   120cc:	beq	12160 <lista_apaga@@Base+0xac>
   120d0:	ldr	r0, [fp, #-16]
   120d4:	bl	1216c <lista_tamanho@@Base>
   120d8:	mov	r3, r0
   120dc:	cmp	r3, #0
   120e0:	bne	120f0 <lista_apaga@@Base+0x3c>
   120e4:	ldr	r0, [fp, #-16]
   120e8:	bl	10990 <free@plt>
   120ec:	b	12164 <lista_apaga@@Base+0xb0>
   120f0:	ldr	r3, [fp, #-16]
   120f4:	ldr	r3, [r3]
   120f8:	str	r3, [fp, #-8]
   120fc:	ldr	r3, [fp, #-8]
   12100:	cmp	r3, #0
   12104:	beq	12150 <lista_apaga@@Base+0x9c>
   12108:	ldr	r3, [fp, #-8]
   1210c:	ldr	r3, [r3, #4]
   12110:	str	r3, [fp, #-12]
   12114:	b	12144 <lista_apaga@@Base+0x90>
   12118:	ldr	r3, [fp, #-8]
   1211c:	ldr	r3, [r3, #4]
   12120:	str	r3, [fp, #-12]
   12124:	ldr	r3, [fp, #-8]
   12128:	ldr	r3, [r3]
   1212c:	mov	r0, r3
   12130:	bl	10990 <free@plt>
   12134:	ldr	r0, [fp, #-8]
   12138:	bl	10990 <free@plt>
   1213c:	ldr	r3, [fp, #-12]
   12140:	str	r3, [fp, #-8]
   12144:	ldr	r3, [fp, #-12]
   12148:	cmp	r3, #0
   1214c:	bne	12118 <lista_apaga@@Base+0x64>
   12150:	ldr	r0, [fp, #-16]
   12154:	bl	10990 <free@plt>
   12158:	nop			; (mov r0, r0)
   1215c:	b	12164 <lista_apaga@@Base+0xb0>
   12160:	nop			; (mov r0, r0)
   12164:	sub	sp, fp, #4
   12168:	pop	{fp, pc}

0001216c <lista_tamanho@@Base>:
   1216c:	push	{fp}		; (str fp, [sp, #-4]!)
   12170:	add	fp, sp, #0
   12174:	sub	sp, sp, #12
   12178:	str	r0, [fp, #-8]
   1217c:	ldr	r3, [fp, #-8]
   12180:	cmp	r3, #0
   12184:	bne	12190 <lista_tamanho@@Base+0x24>
   12188:	mvn	r3, #0
   1218c:	b	12198 <lista_tamanho@@Base+0x2c>
   12190:	ldr	r3, [fp, #-8]
   12194:	ldr	r3, [r3, #8]
   12198:	mov	r0, r3
   1219c:	add	sp, fp, #0
   121a0:	pop	{fp}		; (ldr fp, [sp], #4)
   121a4:	bx	lr

000121a8 <lista_inicio@@Base>:
   121a8:	push	{fp}		; (str fp, [sp, #-4]!)
   121ac:	add	fp, sp, #0
   121b0:	sub	sp, sp, #12
   121b4:	str	r0, [fp, #-8]
   121b8:	ldr	r3, [fp, #-8]
   121bc:	cmp	r3, #0
   121c0:	bne	121cc <lista_inicio@@Base+0x24>
   121c4:	mov	r3, #0
   121c8:	b	121d4 <lista_inicio@@Base+0x2c>
   121cc:	ldr	r3, [fp, #-8]
   121d0:	ldr	r3, [r3]
   121d4:	mov	r0, r3
   121d8:	add	sp, fp, #0
   121dc:	pop	{fp}		; (ldr fp, [sp], #4)
   121e0:	bx	lr

000121e4 <lista_fim@@Base>:
   121e4:	push	{fp}		; (str fp, [sp, #-4]!)
   121e8:	add	fp, sp, #0
   121ec:	sub	sp, sp, #12
   121f0:	str	r0, [fp, #-8]
   121f4:	ldr	r3, [fp, #-8]
   121f8:	cmp	r3, #0
   121fc:	bne	12208 <lista_fim@@Base+0x24>
   12200:	mov	r3, #0
   12204:	b	12210 <lista_fim@@Base+0x2c>
   12208:	ldr	r3, [fp, #-8]
   1220c:	ldr	r3, [r3, #4]
   12210:	mov	r0, r3
   12214:	add	sp, fp, #0
   12218:	pop	{fp}		; (ldr fp, [sp], #4)
   1221c:	bx	lr

00012220 <lista_insere@@Base>:
   12220:	push	{fp, lr}
   12224:	add	fp, sp, #4
   12228:	sub	sp, sp, #24
   1222c:	str	r0, [fp, #-16]
   12230:	str	r1, [fp, #-20]	; 0xffffffec
   12234:	str	r2, [fp, #-24]	; 0xffffffe8
   12238:	ldr	r3, [fp, #-16]
   1223c:	cmp	r3, #0
   12240:	bne	1224c <lista_insere@@Base+0x2c>
   12244:	mov	r3, #0
   12248:	b	123c4 <lista_insere@@Base+0x1a4>
   1224c:	mov	r0, #12
   12250:	bl	109c0 <malloc@plt>
   12254:	mov	r3, r0
   12258:	str	r3, [fp, #-8]
   1225c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12260:	bl	109e4 <strlen@plt>
   12264:	mov	r3, r0
   12268:	add	r3, r3, #1
   1226c:	mov	r0, r3
   12270:	bl	109c0 <malloc@plt>
   12274:	mov	r3, r0
   12278:	mov	r2, r3
   1227c:	ldr	r3, [fp, #-8]
   12280:	str	r2, [r3]
   12284:	ldr	r3, [fp, #-8]
   12288:	ldr	r3, [r3]
   1228c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12290:	mov	r0, r3
   12294:	bl	109a8 <strcpy@plt>
   12298:	ldr	r3, [fp, #-16]
   1229c:	ldr	r3, [r3, #8]
   122a0:	cmp	r3, #0
   122a4:	bne	122dc <lista_insere@@Base+0xbc>
   122a8:	ldr	r3, [fp, #-8]
   122ac:	mov	r2, #0
   122b0:	str	r2, [r3, #8]
   122b4:	ldr	r3, [fp, #-8]
   122b8:	mov	r2, #0
   122bc:	str	r2, [r3, #4]
   122c0:	ldr	r3, [fp, #-16]
   122c4:	ldr	r2, [fp, #-8]
   122c8:	str	r2, [r3]
   122cc:	ldr	r3, [fp, #-16]
   122d0:	ldr	r2, [fp, #-8]
   122d4:	str	r2, [r3, #4]
   122d8:	b	123ac <lista_insere@@Base+0x18c>
   122dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   122e0:	cmp	r3, #0
   122e4:	bne	12324 <lista_insere@@Base+0x104>
   122e8:	ldr	r3, [fp, #-8]
   122ec:	mov	r2, #0
   122f0:	str	r2, [r3, #4]
   122f4:	ldr	r3, [fp, #-16]
   122f8:	ldr	r2, [r3, #4]
   122fc:	ldr	r3, [fp, #-8]
   12300:	str	r2, [r3, #8]
   12304:	ldr	r3, [fp, #-16]
   12308:	ldr	r3, [r3, #4]
   1230c:	ldr	r2, [fp, #-8]
   12310:	str	r2, [r3, #4]
   12314:	ldr	r3, [fp, #-16]
   12318:	ldr	r2, [fp, #-8]
   1231c:	str	r2, [r3, #4]
   12320:	b	123ac <lista_insere@@Base+0x18c>
   12324:	ldr	r3, [fp, #-16]
   12328:	ldr	r2, [r3]
   1232c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12330:	cmp	r2, r3
   12334:	bne	12374 <lista_insere@@Base+0x154>
   12338:	ldr	r3, [fp, #-8]
   1233c:	mov	r2, #0
   12340:	str	r2, [r3, #8]
   12344:	ldr	r3, [fp, #-16]
   12348:	ldr	r2, [r3]
   1234c:	ldr	r3, [fp, #-8]
   12350:	str	r2, [r3, #4]
   12354:	ldr	r3, [fp, #-16]
   12358:	ldr	r2, [fp, #-8]
   1235c:	str	r2, [r3]
   12360:	ldr	r3, [fp, #-16]
   12364:	ldr	r3, [r3]
   12368:	ldr	r2, [fp, #-8]
   1236c:	str	r2, [r3, #8]
   12370:	b	123ac <lista_insere@@Base+0x18c>
   12374:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12378:	ldr	r3, [r3, #8]
   1237c:	ldr	r2, [fp, #-8]
   12380:	str	r2, [r3, #4]
   12384:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12388:	ldr	r2, [r3, #8]
   1238c:	ldr	r3, [fp, #-8]
   12390:	str	r2, [r3, #8]
   12394:	ldr	r3, [fp, #-8]
   12398:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1239c:	str	r2, [r3, #4]
   123a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   123a4:	ldr	r2, [fp, #-8]
   123a8:	str	r2, [r3, #8]
   123ac:	ldr	r3, [fp, #-16]
   123b0:	ldr	r3, [r3, #8]
   123b4:	add	r2, r3, #1
   123b8:	ldr	r3, [fp, #-16]
   123bc:	str	r2, [r3, #8]
   123c0:	ldr	r3, [fp, #-8]
   123c4:	mov	r0, r3
   123c8:	sub	sp, fp, #4
   123cc:	pop	{fp, pc}

000123d0 <lista_remove@@Base>:
   123d0:	push	{fp, lr}
   123d4:	add	fp, sp, #4
   123d8:	sub	sp, sp, #16
   123dc:	str	r0, [fp, #-16]
   123e0:	str	r1, [fp, #-20]	; 0xffffffec
   123e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   123e8:	cmp	r3, #0
   123ec:	bne	123f8 <lista_remove@@Base+0x28>
   123f0:	mov	r3, #0
   123f4:	b	124cc <lista_remove@@Base+0xfc>
   123f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   123fc:	ldr	r3, [r3, #4]
   12400:	str	r3, [fp, #-8]
   12404:	ldr	r3, [fp, #-16]
   12408:	ldr	r2, [r3]
   1240c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12410:	cmp	r2, r3
   12414:	bne	1243c <lista_remove@@Base+0x6c>
   12418:	ldr	r3, [fp, #-20]	; 0xffffffec
   1241c:	ldr	r3, [r3, #4]
   12420:	mov	r2, #0
   12424:	str	r2, [r3, #8]
   12428:	ldr	r3, [fp, #-20]	; 0xffffffec
   1242c:	ldr	r2, [r3, #4]
   12430:	ldr	r3, [fp, #-16]
   12434:	str	r2, [r3]
   12438:	b	1249c <lista_remove@@Base+0xcc>
   1243c:	ldr	r3, [fp, #-16]
   12440:	ldr	r2, [r3, #4]
   12444:	ldr	r3, [fp, #-20]	; 0xffffffec
   12448:	cmp	r2, r3
   1244c:	bne	12474 <lista_remove@@Base+0xa4>
   12450:	ldr	r3, [fp, #-20]	; 0xffffffec
   12454:	ldr	r3, [r3, #8]
   12458:	mov	r2, #0
   1245c:	str	r2, [r3, #4]
   12460:	ldr	r3, [fp, #-20]	; 0xffffffec
   12464:	ldr	r2, [r3, #8]
   12468:	ldr	r3, [fp, #-16]
   1246c:	str	r2, [r3, #4]
   12470:	b	1249c <lista_remove@@Base+0xcc>
   12474:	ldr	r3, [fp, #-20]	; 0xffffffec
   12478:	ldr	r3, [r3, #8]
   1247c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12480:	ldr	r2, [r2, #4]
   12484:	str	r2, [r3, #4]
   12488:	ldr	r3, [fp, #-20]	; 0xffffffec
   1248c:	ldr	r3, [r3, #4]
   12490:	ldr	r2, [fp, #-20]	; 0xffffffec
   12494:	ldr	r2, [r2, #8]
   12498:	str	r2, [r3, #8]
   1249c:	ldr	r3, [fp, #-20]	; 0xffffffec
   124a0:	ldr	r3, [r3]
   124a4:	mov	r0, r3
   124a8:	bl	10990 <free@plt>
   124ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   124b0:	bl	10990 <free@plt>
   124b4:	ldr	r3, [fp, #-16]
   124b8:	ldr	r3, [r3, #8]
   124bc:	sub	r2, r3, #1
   124c0:	ldr	r3, [fp, #-16]
   124c4:	str	r2, [r3, #8]
   124c8:	ldr	r3, [fp, #-8]
   124cc:	mov	r0, r3
   124d0:	sub	sp, fp, #4
   124d4:	pop	{fp, pc}

000124d8 <lista_pesquisa@@Base>:
   124d8:	push	{fp, lr}
   124dc:	add	fp, sp, #4
   124e0:	sub	sp, sp, #24
   124e4:	str	r0, [fp, #-16]
   124e8:	str	r1, [fp, #-20]	; 0xffffffec
   124ec:	str	r2, [fp, #-24]	; 0xffffffe8
   124f0:	ldr	r3, [fp, #-16]
   124f4:	cmp	r3, #0
   124f8:	bne	12504 <lista_pesquisa@@Base+0x2c>
   124fc:	mov	r3, #0
   12500:	b	125fc <lista_pesquisa@@Base+0x124>
   12504:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12508:	cmp	r3, #0
   1250c:	bne	12580 <lista_pesquisa@@Base+0xa8>
   12510:	ldr	r3, [fp, #-16]
   12514:	ldr	r3, [r3]
   12518:	str	r3, [fp, #-8]
   1251c:	mov	r3, #0
   12520:	str	r3, [fp, #-12]
   12524:	b	12568 <lista_pesquisa@@Base+0x90>
   12528:	ldr	r3, [fp, #-8]
   1252c:	ldr	r3, [r3]
   12530:	ldr	r1, [fp, #-20]	; 0xffffffec
   12534:	mov	r0, r3
   12538:	bl	10978 <strcmp@plt>
   1253c:	mov	r3, r0
   12540:	cmp	r3, #0
   12544:	bne	12550 <lista_pesquisa@@Base+0x78>
   12548:	ldr	r3, [fp, #-8]
   1254c:	b	125fc <lista_pesquisa@@Base+0x124>
   12550:	ldr	r3, [fp, #-8]
   12554:	ldr	r3, [r3, #4]
   12558:	str	r3, [fp, #-8]
   1255c:	ldr	r3, [fp, #-12]
   12560:	add	r3, r3, #1
   12564:	str	r3, [fp, #-12]
   12568:	ldr	r3, [fp, #-16]
   1256c:	ldr	r2, [r3, #8]
   12570:	ldr	r3, [fp, #-12]
   12574:	cmp	r2, r3
   12578:	bgt	12528 <lista_pesquisa@@Base+0x50>
   1257c:	b	125f8 <lista_pesquisa@@Base+0x120>
   12580:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12584:	cmp	r3, #1
   12588:	bne	125f8 <lista_pesquisa@@Base+0x120>
   1258c:	ldr	r3, [fp, #-16]
   12590:	ldr	r3, [r3, #4]
   12594:	str	r3, [fp, #-8]
   12598:	mov	r3, #0
   1259c:	str	r3, [fp, #-12]
   125a0:	b	125e4 <lista_pesquisa@@Base+0x10c>
   125a4:	ldr	r3, [fp, #-8]
   125a8:	ldr	r3, [r3]
   125ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   125b0:	mov	r0, r3
   125b4:	bl	10978 <strcmp@plt>
   125b8:	mov	r3, r0
   125bc:	cmp	r3, #0
   125c0:	bne	125cc <lista_pesquisa@@Base+0xf4>
   125c4:	ldr	r3, [fp, #-8]
   125c8:	b	125fc <lista_pesquisa@@Base+0x124>
   125cc:	ldr	r3, [fp, #-8]
   125d0:	ldr	r3, [r3, #8]
   125d4:	str	r3, [fp, #-8]
   125d8:	ldr	r3, [fp, #-12]
   125dc:	add	r3, r3, #1
   125e0:	str	r3, [fp, #-12]
   125e4:	ldr	r3, [fp, #-16]
   125e8:	ldr	r2, [r3, #8]
   125ec:	ldr	r3, [fp, #-12]
   125f0:	cmp	r2, r3
   125f4:	bgt	125a4 <lista_pesquisa@@Base+0xcc>
   125f8:	mov	r3, #0
   125fc:	mov	r0, r3
   12600:	sub	sp, fp, #4
   12604:	pop	{fp, pc}

00012608 <lista_ordena@@Base>:
   12608:	push	{fp, lr}
   1260c:	add	fp, sp, #4
   12610:	sub	sp, sp, #24
   12614:	str	r0, [fp, #-24]	; 0xffffffe8
   12618:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1261c:	cmp	r3, #0
   12620:	bne	1262c <lista_ordena@@Base+0x24>
   12624:	mvn	r3, #0
   12628:	b	12700 <lista_ordena@@Base+0xf8>
   1262c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12630:	ldr	r3, [r3, #8]
   12634:	cmp	r3, #0
   12638:	bne	12644 <lista_ordena@@Base+0x3c>
   1263c:	mov	r3, #0
   12640:	b	12700 <lista_ordena@@Base+0xf8>
   12644:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12648:	ldr	r3, [r3]
   1264c:	str	r3, [fp, #-8]
   12650:	b	126e8 <lista_ordena@@Base+0xe0>
   12654:	ldr	r3, [fp, #-8]
   12658:	str	r3, [fp, #-12]
   1265c:	b	126b0 <lista_ordena@@Base+0xa8>
   12660:	ldr	r3, [fp, #-8]
   12664:	ldr	r3, [r3]
   12668:	str	r3, [fp, #-16]
   1266c:	ldr	r3, [fp, #-8]
   12670:	ldr	r3, [r3, #4]
   12674:	ldr	r2, [r3]
   12678:	ldr	r3, [fp, #-8]
   1267c:	str	r2, [r3]
   12680:	ldr	r3, [fp, #-8]
   12684:	ldr	r3, [r3, #4]
   12688:	ldr	r2, [fp, #-16]
   1268c:	str	r2, [r3]
   12690:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12694:	ldr	r2, [r3]
   12698:	ldr	r3, [fp, #-8]
   1269c:	cmp	r2, r3
   126a0:	beq	126b0 <lista_ordena@@Base+0xa8>
   126a4:	ldr	r3, [fp, #-8]
   126a8:	ldr	r3, [r3, #8]
   126ac:	str	r3, [fp, #-8]
   126b0:	ldr	r3, [fp, #-8]
   126b4:	ldr	r2, [r3]
   126b8:	ldr	r3, [fp, #-8]
   126bc:	ldr	r3, [r3, #4]
   126c0:	ldr	r3, [r3]
   126c4:	mov	r1, r3
   126c8:	mov	r0, r2
   126cc:	bl	10978 <strcmp@plt>
   126d0:	mov	r3, r0
   126d4:	cmp	r3, #0
   126d8:	bgt	12660 <lista_ordena@@Base+0x58>
   126dc:	ldr	r3, [fp, #-12]
   126e0:	ldr	r3, [r3, #4]
   126e4:	str	r3, [fp, #-8]
   126e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   126ec:	ldr	r2, [r3, #4]
   126f0:	ldr	r3, [fp, #-8]
   126f4:	cmp	r2, r3
   126f8:	bne	12654 <lista_ordena@@Base+0x4c>
   126fc:	mov	r3, #0
   12700:	mov	r0, r3
   12704:	sub	sp, fp, #4
   12708:	pop	{fp, pc}

0001270c <lista_inverte@@Base>:
   1270c:	push	{fp, lr}
   12710:	add	fp, sp, #4
   12714:	sub	sp, sp, #24
   12718:	str	r0, [fp, #-24]	; 0xffffffe8
   1271c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12720:	cmp	r3, #0
   12724:	bne	12730 <lista_inverte@@Base+0x24>
   12728:	mvn	r3, #0
   1272c:	b	12808 <lista_inverte@@Base+0xfc>
   12730:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12734:	ldr	r3, [r3, #8]
   12738:	cmp	r3, #0
   1273c:	bne	12748 <lista_inverte@@Base+0x3c>
   12740:	mov	r3, #0
   12744:	b	12808 <lista_inverte@@Base+0xfc>
   12748:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1274c:	ldr	r3, [r3]
   12750:	str	r3, [fp, #-12]
   12754:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12758:	ldr	r3, [r3, #4]
   1275c:	str	r3, [fp, #-16]
   12760:	mov	r3, #0
   12764:	str	r3, [fp, #-8]
   12768:	b	127e0 <lista_inverte@@Base+0xd4>
   1276c:	ldr	r3, [fp, #-12]
   12770:	ldr	r3, [r3]
   12774:	mov	r0, r3
   12778:	bl	1099c <strdup@plt>
   1277c:	mov	r3, r0
   12780:	str	r3, [fp, #-20]	; 0xffffffec
   12784:	ldr	r3, [fp, #-16]
   12788:	ldr	r3, [r3]
   1278c:	mov	r0, r3
   12790:	bl	1099c <strdup@plt>
   12794:	mov	r3, r0
   12798:	mov	r2, r3
   1279c:	ldr	r3, [fp, #-12]
   127a0:	str	r2, [r3]
   127a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   127a8:	bl	1099c <strdup@plt>
   127ac:	mov	r3, r0
   127b0:	mov	r2, r3
   127b4:	ldr	r3, [fp, #-16]
   127b8:	str	r2, [r3]
   127bc:	ldr	r3, [fp, #-12]
   127c0:	ldr	r3, [r3, #4]
   127c4:	str	r3, [fp, #-12]
   127c8:	ldr	r3, [fp, #-16]
   127cc:	ldr	r3, [r3, #8]
   127d0:	str	r3, [fp, #-16]
   127d4:	ldr	r3, [fp, #-8]
   127d8:	add	r3, r3, #1
   127dc:	str	r3, [fp, #-8]
   127e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   127e4:	ldr	r3, [r3, #8]
   127e8:	lsr	r2, r3, #31
   127ec:	add	r3, r2, r3
   127f0:	asr	r3, r3, #1
   127f4:	mov	r2, r3
   127f8:	ldr	r3, [fp, #-8]
   127fc:	cmp	r2, r3
   12800:	bgt	1276c <lista_inverte@@Base+0x60>
   12804:	mov	r3, #0
   12808:	mov	r0, r3
   1280c:	sub	sp, fp, #4
   12810:	pop	{fp, pc}

00012814 <__libc_csu_init@@Base>:
   12814:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12818:	mov	r7, r0
   1281c:	ldr	r6, [pc, #72]	; 1286c <__libc_csu_init@@Base+0x58>
   12820:	ldr	r5, [pc, #72]	; 12870 <__libc_csu_init@@Base+0x5c>
   12824:	add	r6, pc, r6
   12828:	add	r5, pc, r5
   1282c:	sub	r6, r6, r5
   12830:	mov	r8, r1
   12834:	mov	r9, r2
   12838:	bl	10958 <strcmp@plt-0x20>
   1283c:	asrs	r6, r6, #2
   12840:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12844:	mov	r4, #0
   12848:	add	r4, r4, #1
   1284c:	ldr	r3, [r5], #4
   12850:	mov	r2, r9
   12854:	mov	r1, r8
   12858:	mov	r0, r7
   1285c:	blx	r3
   12860:	cmp	r6, r4
   12864:	bne	12848 <__libc_csu_init@@Base+0x34>
   12868:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1286c:	andeq	r0, r1, r4, ror #13
   12870:	ldrdeq	r0, [r1], -ip

00012874 <__libc_csu_fini@@Base>:
   12874:	bx	lr

Disassembly of section .fini:

00012878 <.fini>:
   12878:	push	{r3, lr}
   1287c:	pop	{r3, pc}
