
../repos/charybdis/ssld/.libs/ssld:     file format elf32-littlearm


Disassembly of section .init:

00010f4c <.init>:
   10f4c:	push	{r3, lr}
   10f50:	bl	112d8 <__errno_location@plt+0x48>
   10f54:	pop	{r3, pc}

Disassembly of section .plt:

00010f58 <open@plt-0x14>:
   10f58:	push	{lr}		; (str lr, [sp, #-4]!)
   10f5c:	ldr	lr, [pc, #4]	; 10f68 <open@plt-0x4>
   10f60:	add	lr, pc, lr
   10f64:	ldr	pc, [lr, #8]!
   10f68:	muleq	r1, r8, r0

00010f6c <open@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #20, 20	; 0x14000
   10f74:	ldr	pc, [ip, #152]!	; 0x98

00010f78 <rb_sleep@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #20, 20	; 0x14000
   10f80:	ldr	pc, [ip, #144]!	; 0x90

00010f84 <sigemptyset@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #20, 20	; 0x14000
   10f8c:	ldr	pc, [ip, #136]!	; 0x88

00010f90 <strerror@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #20, 20	; 0x14000
   10f98:	ldr	pc, [ip, #128]!	; 0x80

00010f9c <rb_get_type@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #20, 20	; 0x14000
   10fa4:	ldr	pc, [ip, #120]!	; 0x78

00010fa8 <zError@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #20, 20	; 0x14000
   10fb0:	ldr	pc, [ip, #112]!	; 0x70

00010fb4 <abort@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #20, 20	; 0x14000
   10fbc:	ldr	pc, [ip, #104]!	; 0x68

00010fc0 <rb_event_addish@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #20, 20	; 0x14000
   10fc8:	ldr	pc, [ip, #96]!	; 0x60

00010fcc <rb_ignore_errno@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #20, 20	; 0x14000
   10fd4:	ldr	pc, [ip, #88]!	; 0x58

00010fd8 <rb_lib_version@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #20, 20	; 0x14000
   10fe0:	ldr	pc, [ip, #80]!	; 0x50

00010fe4 <inflateEnd@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #20, 20	; 0x14000
   10fec:	ldr	pc, [ip, #72]!	; 0x48

00010ff0 <__libc_start_main@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #20, 20	; 0x14000
   10ff8:	ldr	pc, [ip, #64]!	; 0x40

00010ffc <rb_setselect@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #20, 20	; 0x14000
   11004:	ldr	pc, [ip, #56]!	; 0x38

00011008 <__gmon_start__@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #20, 20	; 0x14000
   11010:	ldr	pc, [ip, #48]!	; 0x30

00011014 <rb_ssl_handshake_count@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #20, 20	; 0x14000
   1101c:	ldr	pc, [ip, #40]!	; 0x28

00011020 <rb_send_fd_buf@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #20, 20	; 0x14000
   11028:	ldr	pc, [ip, #32]!

0001102c <vsnprintf@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #20, 20	; 0x14000
   11034:	ldr	pc, [ip, #24]!

00011038 <strncpy@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #20, 20	; 0x14000
   11040:	ldr	pc, [ip, #16]!

00011044 <getenv@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #20, 20	; 0x14000
   1104c:	ldr	pc, [ip, #8]!

00011050 <deflate@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #20, 20	; 0x14000
   11058:	ldr	pc, [ip, #0]!

0001105c <deflateInit_@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #77824	; 0x13000
   11064:	ldr	pc, [ip, #4088]!	; 0xff8

00011068 <calloc@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #77824	; 0x13000
   11070:	ldr	pc, [ip, #4080]!	; 0xff0

00011074 <rb_set_nb@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #77824	; 0x13000
   1107c:	ldr	pc, [ip, #4072]!	; 0xfe8

00011080 <memset@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #77824	; 0x13000
   11088:	ldr	pc, [ip, #4064]!	; 0xfe0

0001108c <__assert_fail@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #77824	; 0x13000
   11094:	ldr	pc, [ip, #4056]!	; 0xfd8

00011098 <rb_strlcpy@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #77824	; 0x13000
   110a0:	ldr	pc, [ip, #4048]!	; 0xfd0

000110a4 <rb_get_ssl_certfp@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #77824	; 0x13000
   110ac:	ldr	pc, [ip, #4040]!	; 0xfc8

000110b0 <inflate@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #77824	; 0x13000
   110b8:	ldr	pc, [ip, #4032]!	; 0xfc0

000110bc <rb_init_rawbuffers@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #77824	; 0x13000
   110c4:	ldr	pc, [ip, #4024]!	; 0xfb8

000110c8 <free@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #77824	; 0x13000
   110d0:	ldr	pc, [ip, #4016]!	; 0xfb0

000110d4 <rb_lib_loop@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #77824	; 0x13000
   110dc:	ldr	pc, [ip, #4008]!	; 0xfa8

000110e0 <deflateEnd@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #77824	; 0x13000
   110e8:	ldr	pc, [ip, #4000]!	; 0xfa0

000110ec <rb_read@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #77824	; 0x13000
   110f4:	ldr	pc, [ip, #3992]!	; 0xf98

000110f8 <rb_set_type@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #77824	; 0x13000
   11100:	ldr	pc, [ip, #3984]!	; 0xf90

00011104 <strlen@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #77824	; 0x13000
   1110c:	ldr	pc, [ip, #3976]!	; 0xf88

00011110 <rb_ssl_get_cipher@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #77824	; 0x13000
   11118:	ldr	pc, [ip, #3968]!	; 0xf80

0001111c <memcpy@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #77824	; 0x13000
   11124:	ldr	pc, [ip, #3960]!	; 0xf78

00011128 <rb_close@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #77824	; 0x13000
   11130:	ldr	pc, [ip, #3952]!	; 0xf70

00011134 <sigaddset@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #77824	; 0x13000
   1113c:	ldr	pc, [ip, #3944]!	; 0xf68

00011140 <strcpy@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #77824	; 0x13000
   11148:	ldr	pc, [ip, #3936]!	; 0xf60

0001114c <rb_ssl_clear_handshake_count@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #77824	; 0x13000
   11154:	ldr	pc, [ip, #3928]!	; 0xf58

00011158 <atoi@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #77824	; 0x13000
   11160:	ldr	pc, [ip, #3920]!	; 0xf50

00011164 <rb_rawbuf_length@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #77824	; 0x13000
   1116c:	ldr	pc, [ip, #3912]!	; 0xf48

00011170 <rb_free_rawbuffer@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #77824	; 0x13000
   11178:	ldr	pc, [ip, #3904]!	; 0xf40

0001117c <rb_get_ssl_strerror@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #77824	; 0x13000
   11184:	ldr	pc, [ip, #3896]!	; 0xf38

00011188 <close@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #77824	; 0x13000
   11190:	ldr	pc, [ip, #3888]!	; 0xf30

00011194 <fwrite@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #77824	; 0x13000
   1119c:	ldr	pc, [ip, #3880]!	; 0xf28

000111a0 <rb_init_prng@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #77824	; 0x13000
   111a8:	ldr	pc, [ip, #3872]!	; 0xf20

000111ac <rb_outofmemory@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #77824	; 0x13000
   111b4:	ldr	pc, [ip, #3864]!	; 0xf18

000111b8 <rb_supports_ssl@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #77824	; 0x13000
   111c0:	ldr	pc, [ip, #3856]!	; 0xf10

000111c4 <sigaction@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #77824	; 0x13000
   111cc:	ldr	pc, [ip, #3848]!	; 0xf08

000111d0 <rb_ssl_start_connected@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #77824	; 0x13000
   111d8:	ldr	pc, [ip, #3840]!	; 0xf00

000111dc <rb_lib_init@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #77824	; 0x13000
   111e4:	ldr	pc, [ip, #3832]!	; 0xef8

000111e8 <rb_new_rawbuffer@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #77824	; 0x13000
   111f0:	ldr	pc, [ip, #3824]!	; 0xef0

000111f4 <rb_open@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #77824	; 0x13000
   111fc:	ldr	pc, [ip, #3816]!	; 0xee8

00011200 <inflateInit_@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #77824	; 0x13000
   11208:	ldr	pc, [ip, #3808]!	; 0xee0

0001120c <rb_recv_fd_buf@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #77824	; 0x13000
   11214:	ldr	pc, [ip, #3800]!	; 0xed8

00011218 <rb_ssl_start_accepted@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #77824	; 0x13000
   11220:	ldr	pc, [ip, #3792]!	; 0xed0

00011224 <dup2@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #77824	; 0x13000
   1122c:	ldr	pc, [ip, #3784]!	; 0xec8

00011230 <rb_event_add@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #77824	; 0x13000
   11238:	ldr	pc, [ip, #3776]!	; 0xec0

0001123c <snprintf@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #77824	; 0x13000
   11244:	ldr	pc, [ip, #3768]!	; 0xeb8

00011248 <strncmp@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #77824	; 0x13000
   11250:	ldr	pc, [ip, #3760]!	; 0xeb0

00011254 <getrlimit@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #77824	; 0x13000
   1125c:	ldr	pc, [ip, #3752]!	; 0xea8

00011260 <rb_rawbuf_append@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #77824	; 0x13000
   11268:	ldr	pc, [ip, #3744]!	; 0xea0

0001126c <rb_rawbuf_flush@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #77824	; 0x13000
   11274:	ldr	pc, [ip, #3736]!	; 0xe98

00011278 <rb_setup_ssl_server@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #77824	; 0x13000
   11280:	ldr	pc, [ip, #3728]!	; 0xe90

00011284 <exit@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #77824	; 0x13000
   1128c:	ldr	pc, [ip, #3720]!	; 0xe88

00011290 <__errno_location@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #77824	; 0x13000
   11298:	ldr	pc, [ip, #3712]!	; 0xe80

Disassembly of section .text:

0001129c <.text>:
   1129c:	mov	fp, #0
   112a0:	mov	lr, #0
   112a4:	pop	{r1}		; (ldr r1, [sp], #4)
   112a8:	mov	r2, sp
   112ac:	push	{r2}		; (str r2, [sp, #-4]!)
   112b0:	push	{r0}		; (str r0, [sp, #-4]!)
   112b4:	ldr	ip, [pc, #16]	; 112cc <__errno_location@plt+0x3c>
   112b8:	push	{ip}		; (str ip, [sp, #-4]!)
   112bc:	ldr	r0, [pc, #12]	; 112d0 <__errno_location@plt+0x40>
   112c0:	ldr	r3, [pc, #12]	; 112d4 <__errno_location@plt+0x44>
   112c4:	bl	10ff0 <__libc_start_main@plt>
   112c8:	bl	10fb4 <abort@plt>
   112cc:	muleq	r1, ip, sl
   112d0:	andeq	r4, r1, ip, asr r4
   112d4:	andeq	r4, r1, ip, lsr sl
   112d8:	ldr	r3, [pc, #20]	; 112f4 <__errno_location@plt+0x64>
   112dc:	ldr	r2, [pc, #20]	; 112f8 <__errno_location@plt+0x68>
   112e0:	add	r3, pc, r3
   112e4:	ldr	r2, [r3, r2]
   112e8:	cmp	r2, #0
   112ec:	bxeq	lr
   112f0:	b	11008 <__gmon_start__@plt>
   112f4:	andeq	r3, r1, r8, lsl sp
   112f8:	andeq	r0, r0, ip, lsl r1
   112fc:	ldr	r3, [pc, #28]	; 11320 <__errno_location@plt+0x90>
   11300:	ldr	r0, [pc, #28]	; 11324 <__errno_location@plt+0x94>
   11304:	sub	r3, r3, r0
   11308:	cmp	r3, #6
   1130c:	bxls	lr
   11310:	ldr	r3, [pc, #16]	; 11328 <__errno_location@plt+0x98>
   11314:	cmp	r3, #0
   11318:	bxeq	lr
   1131c:	bx	r3
   11320:	andeq	r5, r2, r3, asr #2
   11324:	andeq	r5, r2, r0, asr #2
   11328:	andeq	r0, r0, r0
   1132c:	ldr	r1, [pc, #36]	; 11358 <__errno_location@plt+0xc8>
   11330:	ldr	r0, [pc, #36]	; 1135c <__errno_location@plt+0xcc>
   11334:	sub	r1, r1, r0
   11338:	asr	r1, r1, #2
   1133c:	add	r1, r1, r1, lsr #31
   11340:	asrs	r1, r1, #1
   11344:	bxeq	lr
   11348:	ldr	r3, [pc, #16]	; 11360 <__errno_location@plt+0xd0>
   1134c:	cmp	r3, #0
   11350:	bxeq	lr
   11354:	bx	r3
   11358:	andeq	r5, r2, r0, asr #2
   1135c:	andeq	r5, r2, r0, asr #2
   11360:	andeq	r0, r0, r0
   11364:	push	{r4, lr}
   11368:	ldr	r4, [pc, #24]	; 11388 <__errno_location@plt+0xf8>
   1136c:	ldrb	r3, [r4]
   11370:	cmp	r3, #0
   11374:	popne	{r4, pc}
   11378:	bl	112fc <__errno_location@plt+0x6c>
   1137c:	mov	r3, #1
   11380:	strb	r3, [r4]
   11384:	pop	{r4, pc}
   11388:	andeq	r5, r2, r0, asr #2
   1138c:	ldr	r0, [pc, #40]	; 113bc <__errno_location@plt+0x12c>
   11390:	ldr	r3, [r0]
   11394:	cmp	r3, #0
   11398:	bne	113a0 <__errno_location@plt+0x110>
   1139c:	b	1132c <__errno_location@plt+0x9c>
   113a0:	ldr	r3, [pc, #24]	; 113c0 <__errno_location@plt+0x130>
   113a4:	cmp	r3, #0
   113a8:	beq	1139c <__errno_location@plt+0x10c>
   113ac:	push	{r4, lr}
   113b0:	blx	r3
   113b4:	pop	{r4, lr}
   113b8:	b	1132c <__errno_location@plt+0x9c>
   113bc:	strdeq	r4, [r2], -r4	; <UNPREDICTABLE>
   113c0:	andeq	r0, r0, r0
   113c4:	push	{fp, lr}
   113c8:	add	fp, sp, #4
   113cc:	sub	sp, sp, #16
   113d0:	str	r0, [fp, #-8]
   113d4:	str	r1, [fp, #-12]
   113d8:	str	r2, [fp, #-16]
   113dc:	ldr	r3, [fp, #-8]
   113e0:	cmp	r3, #0
   113e4:	bne	11408 <__errno_location@plt+0x178>
   113e8:	ldr	r3, [pc, #260]	; 114f4 <__errno_location@plt+0x264>
   113ec:	add	r3, pc, r3
   113f0:	mov	r2, #143	; 0x8f
   113f4:	ldr	r1, [pc, #252]	; 114f8 <__errno_location@plt+0x268>
   113f8:	add	r1, pc, r1
   113fc:	ldr	r0, [pc, #248]	; 114fc <__errno_location@plt+0x26c>
   11400:	add	r0, pc, r0
   11404:	bl	1108c <__assert_fail@plt>
   11408:	ldr	r3, [fp, #-12]
   1140c:	cmp	r3, #0
   11410:	bne	11434 <__errno_location@plt+0x1a4>
   11414:	ldr	r3, [pc, #228]	; 11500 <__errno_location@plt+0x270>
   11418:	add	r3, pc, r3
   1141c:	mov	r2, #144	; 0x90
   11420:	ldr	r1, [pc, #220]	; 11504 <__errno_location@plt+0x274>
   11424:	add	r1, pc, r1
   11428:	ldr	r0, [pc, #216]	; 11508 <__errno_location@plt+0x278>
   1142c:	add	r0, pc, r0
   11430:	bl	1108c <__assert_fail@plt>
   11434:	ldr	r3, [fp, #-16]
   11438:	cmp	r3, #0
   1143c:	bne	11460 <__errno_location@plt+0x1d0>
   11440:	ldr	r3, [pc, #196]	; 1150c <__errno_location@plt+0x27c>
   11444:	add	r3, pc, r3
   11448:	mov	r2, #145	; 0x91
   1144c:	ldr	r1, [pc, #188]	; 11510 <__errno_location@plt+0x280>
   11450:	add	r1, pc, r1
   11454:	ldr	r0, [pc, #184]	; 11514 <__errno_location@plt+0x284>
   11458:	add	r0, pc, r0
   1145c:	bl	1108c <__assert_fail@plt>
   11460:	ldr	r3, [fp, #-12]
   11464:	ldr	r2, [fp, #-8]
   11468:	str	r2, [r3]
   1146c:	ldr	r3, [fp, #-12]
   11470:	mov	r2, #0
   11474:	str	r2, [r3, #4]
   11478:	ldr	r3, [fp, #-16]
   1147c:	ldr	r2, [r3]
   11480:	ldr	r3, [fp, #-12]
   11484:	str	r2, [r3, #8]
   11488:	ldr	r3, [fp, #-16]
   1148c:	ldr	r3, [r3]
   11490:	cmp	r3, #0
   11494:	beq	114ac <__errno_location@plt+0x21c>
   11498:	ldr	r3, [fp, #-16]
   1149c:	ldr	r3, [r3]
   114a0:	ldr	r2, [fp, #-12]
   114a4:	str	r2, [r3, #4]
   114a8:	b	114c8 <__errno_location@plt+0x238>
   114ac:	ldr	r3, [fp, #-16]
   114b0:	ldr	r3, [r3, #4]
   114b4:	cmp	r3, #0
   114b8:	bne	114c8 <__errno_location@plt+0x238>
   114bc:	ldr	r3, [fp, #-16]
   114c0:	ldr	r2, [fp, #-12]
   114c4:	str	r2, [r3, #4]
   114c8:	ldr	r3, [fp, #-16]
   114cc:	ldr	r2, [fp, #-12]
   114d0:	str	r2, [r3]
   114d4:	ldr	r3, [fp, #-16]
   114d8:	ldr	r3, [r3, #8]
   114dc:	add	r2, r3, #1
   114e0:	ldr	r3, [fp, #-16]
   114e4:	str	r2, [r3, #8]
   114e8:	nop			; (mov r0, r0)
   114ec:	sub	sp, fp, #4
   114f0:	pop	{fp, pc}
   114f4:	andeq	r3, r0, ip, ror r9
   114f8:	andeq	r3, r0, ip, lsr #13
   114fc:	andeq	r3, r0, r0, asr #13
   11500:	andeq	r3, r0, r0, asr r9
   11504:	andeq	r3, r0, r0, lsl #13
   11508:	andeq	r3, r0, r4, lsr #13
   1150c:	andeq	r3, r0, r4, lsr #18
   11510:	andeq	r3, r0, r4, asr r6
   11514:	andeq	r3, r0, r4, lsl #13
   11518:	push	{fp, lr}
   1151c:	add	fp, sp, #4
   11520:	sub	sp, sp, #16
   11524:	str	r0, [fp, #-8]
   11528:	str	r1, [fp, #-12]
   1152c:	str	r2, [fp, #-16]
   11530:	ldr	r3, [fp, #-12]
   11534:	cmp	r3, #0
   11538:	bne	1155c <__errno_location@plt+0x2cc>
   1153c:	ldr	r3, [pc, #260]	; 11648 <__errno_location@plt+0x3b8>
   11540:	add	r3, pc, r3
   11544:	mov	r2, #211	; 0xd3
   11548:	ldr	r1, [pc, #252]	; 1164c <__errno_location@plt+0x3bc>
   1154c:	add	r1, pc, r1
   11550:	ldr	r0, [pc, #248]	; 11650 <__errno_location@plt+0x3c0>
   11554:	add	r0, pc, r0
   11558:	bl	1108c <__assert_fail@plt>
   1155c:	ldr	r3, [fp, #-16]
   11560:	cmp	r3, #0
   11564:	bne	11588 <__errno_location@plt+0x2f8>
   11568:	ldr	r3, [pc, #228]	; 11654 <__errno_location@plt+0x3c4>
   1156c:	add	r3, pc, r3
   11570:	mov	r2, #212	; 0xd4
   11574:	ldr	r1, [pc, #220]	; 11658 <__errno_location@plt+0x3c8>
   11578:	add	r1, pc, r1
   1157c:	ldr	r0, [pc, #216]	; 1165c <__errno_location@plt+0x3cc>
   11580:	add	r0, pc, r0
   11584:	bl	1108c <__assert_fail@plt>
   11588:	ldr	r3, [fp, #-8]
   1158c:	cmp	r3, #0
   11590:	bne	115b4 <__errno_location@plt+0x324>
   11594:	ldr	r3, [pc, #196]	; 11660 <__errno_location@plt+0x3d0>
   11598:	add	r3, pc, r3
   1159c:	mov	r2, #213	; 0xd5
   115a0:	ldr	r1, [pc, #188]	; 11664 <__errno_location@plt+0x3d4>
   115a4:	add	r1, pc, r1
   115a8:	ldr	r0, [pc, #184]	; 11668 <__errno_location@plt+0x3d8>
   115ac:	add	r0, pc, r0
   115b0:	bl	1108c <__assert_fail@plt>
   115b4:	ldr	r3, [fp, #-12]
   115b8:	ldr	r2, [fp, #-8]
   115bc:	str	r2, [r3]
   115c0:	ldr	r3, [fp, #-12]
   115c4:	mov	r2, #0
   115c8:	str	r2, [r3, #8]
   115cc:	ldr	r3, [fp, #-16]
   115d0:	ldr	r2, [r3, #4]
   115d4:	ldr	r3, [fp, #-12]
   115d8:	str	r2, [r3, #4]
   115dc:	ldr	r3, [fp, #-16]
   115e0:	ldr	r3, [r3, #4]
   115e4:	cmp	r3, #0
   115e8:	beq	11600 <__errno_location@plt+0x370>
   115ec:	ldr	r3, [fp, #-16]
   115f0:	ldr	r3, [r3, #4]
   115f4:	ldr	r2, [fp, #-12]
   115f8:	str	r2, [r3, #8]
   115fc:	b	1161c <__errno_location@plt+0x38c>
   11600:	ldr	r3, [fp, #-16]
   11604:	ldr	r3, [r3]
   11608:	cmp	r3, #0
   1160c:	bne	1161c <__errno_location@plt+0x38c>
   11610:	ldr	r3, [fp, #-16]
   11614:	ldr	r2, [fp, #-12]
   11618:	str	r2, [r3]
   1161c:	ldr	r3, [fp, #-16]
   11620:	ldr	r2, [fp, #-12]
   11624:	str	r2, [r3, #4]
   11628:	ldr	r3, [fp, #-16]
   1162c:	ldr	r3, [r3, #8]
   11630:	add	r2, r3, #1
   11634:	ldr	r3, [fp, #-16]
   11638:	str	r2, [r3, #8]
   1163c:	nop			; (mov r0, r0)
   11640:	sub	sp, fp, #4
   11644:	pop	{fp, pc}
   11648:	andeq	r3, r0, r4, asr #16
   1164c:	andeq	r3, r0, r8, asr r5
   11650:	andeq	r3, r0, ip, ror r5
   11654:	andeq	r3, r0, r8, lsl r8
   11658:	andeq	r3, r0, ip, lsr #10
   1165c:	andeq	r3, r0, ip, asr r5
   11660:	andeq	r3, r0, ip, ror #15
   11664:	andeq	r3, r0, r0, lsl #10
   11668:	andeq	r3, r0, r4, lsl r5
   1166c:	push	{fp, lr}
   11670:	add	fp, sp, #4
   11674:	sub	sp, sp, #8
   11678:	str	r0, [fp, #-8]
   1167c:	str	r1, [fp, #-12]
   11680:	ldr	r3, [fp, #-8]
   11684:	cmp	r3, #0
   11688:	bne	116ac <__errno_location@plt+0x41c>
   1168c:	ldr	r3, [pc, #240]	; 11784 <__errno_location@plt+0x4f4>
   11690:	add	r3, pc, r3
   11694:	mov	r2, #235	; 0xeb
   11698:	ldr	r1, [pc, #232]	; 11788 <__errno_location@plt+0x4f8>
   1169c:	add	r1, pc, r1
   116a0:	ldr	r0, [pc, #228]	; 1178c <__errno_location@plt+0x4fc>
   116a4:	add	r0, pc, r0
   116a8:	bl	1108c <__assert_fail@plt>
   116ac:	ldr	r3, [fp, #-12]
   116b0:	cmp	r3, #0
   116b4:	bne	116d8 <__errno_location@plt+0x448>
   116b8:	ldr	r3, [pc, #208]	; 11790 <__errno_location@plt+0x500>
   116bc:	add	r3, pc, r3
   116c0:	mov	r2, #236	; 0xec
   116c4:	ldr	r1, [pc, #200]	; 11794 <__errno_location@plt+0x504>
   116c8:	add	r1, pc, r1
   116cc:	ldr	r0, [pc, #196]	; 11798 <__errno_location@plt+0x508>
   116d0:	add	r0, pc, r0
   116d4:	bl	1108c <__assert_fail@plt>
   116d8:	ldr	r3, [fp, #-8]
   116dc:	ldr	r3, [r3, #8]
   116e0:	cmp	r3, #0
   116e4:	beq	11700 <__errno_location@plt+0x470>
   116e8:	ldr	r3, [fp, #-8]
   116ec:	ldr	r3, [r3, #8]
   116f0:	ldr	r2, [fp, #-8]
   116f4:	ldr	r2, [r2, #4]
   116f8:	str	r2, [r3, #4]
   116fc:	b	11710 <__errno_location@plt+0x480>
   11700:	ldr	r3, [fp, #-8]
   11704:	ldr	r2, [r3, #4]
   11708:	ldr	r3, [fp, #-12]
   1170c:	str	r2, [r3, #4]
   11710:	ldr	r3, [fp, #-8]
   11714:	ldr	r3, [r3, #4]
   11718:	cmp	r3, #0
   1171c:	beq	11738 <__errno_location@plt+0x4a8>
   11720:	ldr	r3, [fp, #-8]
   11724:	ldr	r3, [r3, #4]
   11728:	ldr	r2, [fp, #-8]
   1172c:	ldr	r2, [r2, #8]
   11730:	str	r2, [r3, #8]
   11734:	b	11748 <__errno_location@plt+0x4b8>
   11738:	ldr	r3, [fp, #-8]
   1173c:	ldr	r2, [r3, #8]
   11740:	ldr	r3, [fp, #-12]
   11744:	str	r2, [r3]
   11748:	ldr	r3, [fp, #-8]
   1174c:	mov	r2, #0
   11750:	str	r2, [r3, #4]
   11754:	ldr	r3, [fp, #-8]
   11758:	ldr	r2, [r3, #4]
   1175c:	ldr	r3, [fp, #-8]
   11760:	str	r2, [r3, #8]
   11764:	ldr	r3, [fp, #-12]
   11768:	ldr	r3, [r3, #8]
   1176c:	sub	r2, r3, #1
   11770:	ldr	r3, [fp, #-12]
   11774:	str	r2, [r3, #8]
   11778:	nop			; (mov r0, r0)
   1177c:	sub	sp, fp, #4
   11780:	pop	{fp, pc}
   11784:	andeq	r3, r0, r4, ror #13
   11788:	andeq	r3, r0, r8, lsl #8
   1178c:	andeq	r3, r0, ip, lsr #8
   11790:			; <UNDEFINED> instruction: 0x000036b8
   11794:	ldrdeq	r3, [r0], -ip
   11798:	andeq	r3, r0, ip, lsl #8
   1179c:	push	{fp, lr}
   117a0:	add	fp, sp, #4
   117a4:	sub	sp, sp, #16
   117a8:	str	r0, [fp, #-16]
   117ac:	ldr	r1, [fp, #-16]
   117b0:	mov	r0, #1
   117b4:	bl	11068 <calloc@plt>
   117b8:	mov	r3, r0
   117bc:	str	r3, [fp, #-8]
   117c0:	ldr	r3, [fp, #-8]
   117c4:	cmp	r3, #0
   117c8:	moveq	r3, #1
   117cc:	movne	r3, #0
   117d0:	uxtb	r3, r3
   117d4:	cmp	r3, #0
   117d8:	beq	117e0 <__errno_location@plt+0x550>
   117dc:	bl	111ac <rb_outofmemory@plt>
   117e0:	ldr	r3, [fp, #-8]
   117e4:	mov	r0, r3
   117e8:	sub	sp, fp, #4
   117ec:	pop	{fp, pc}
   117f0:	push	{fp, lr}
   117f4:	add	fp, sp, #4
   117f8:	sub	sp, sp, #8
   117fc:	str	r0, [fp, #-8]
   11800:	ldr	r3, [fp, #-8]
   11804:	cmp	r3, #0
   11808:	movne	r3, #1
   1180c:	moveq	r3, #0
   11810:	uxtb	r3, r3
   11814:	cmp	r3, #0
   11818:	beq	11824 <__errno_location@plt+0x594>
   1181c:	ldr	r0, [fp, #-8]
   11820:	bl	110c8 <free@plt>
   11824:	nop			; (mov r0, r0)
   11828:	sub	sp, fp, #4
   1182c:	pop	{fp, pc}
   11830:	push	{fp}		; (str fp, [sp, #-4]!)
   11834:	add	fp, sp, #0
   11838:	sub	sp, sp, #20
   1183c:	str	r0, [fp, #-16]
   11840:	ldr	r3, [fp, #-16]
   11844:	ldr	r3, [r3]
   11848:	str	r3, [fp, #-8]
   1184c:	ldr	r3, [fp, #-8]
   11850:	mov	r0, r3
   11854:	add	sp, fp, #0
   11858:	pop	{fp}		; (ldr fp, [sp], #4)
   1185c:	bx	lr
   11860:	push	{fp}		; (str fp, [sp, #-4]!)
   11864:	add	fp, sp, #0
   11868:	sub	sp, sp, #12
   1186c:	str	r0, [fp, #-8]
   11870:	str	r1, [fp, #-12]
   11874:	ldr	r2, [fp, #-12]
   11878:	ldr	r3, [fp, #-8]
   1187c:	str	r2, [r3]
   11880:	nop			; (mov r0, r0)
   11884:	add	sp, fp, #0
   11888:	pop	{fp}		; (ldr fp, [sp], #4)
   1188c:	bx	lr
   11890:	push	{fp, lr}
   11894:	add	fp, sp, #4
   11898:	sub	sp, sp, #16
   1189c:	str	r0, [fp, #-8]
   118a0:	str	r1, [fp, #-12]
   118a4:	str	r2, [fp, #-16]
   118a8:	ldr	r3, [fp, #-12]
   118ac:	ldr	r2, [fp, #-16]
   118b0:	mul	r3, r2, r3
   118b4:	mov	r0, r3
   118b8:	bl	1179c <__errno_location@plt+0x50c>
   118bc:	mov	r3, r0
   118c0:	mov	r0, r3
   118c4:	sub	sp, fp, #4
   118c8:	pop	{fp, pc}
   118cc:	push	{fp, lr}
   118d0:	add	fp, sp, #4
   118d4:	sub	sp, sp, #8
   118d8:	str	r0, [fp, #-8]
   118dc:	str	r1, [fp, #-12]
   118e0:	ldr	r0, [fp, #-12]
   118e4:	bl	117f0 <__errno_location@plt+0x560>
   118e8:	nop			; (mov r0, r0)
   118ec:	sub	sp, fp, #4
   118f0:	pop	{fp, pc}
   118f4:	push	{fp}		; (str fp, [sp, #-4]!)
   118f8:	add	fp, sp, #0
   118fc:	sub	sp, sp, #20
   11900:	str	r0, [fp, #-16]
   11904:	ldr	r3, [fp, #-16]
   11908:	ldr	r2, [pc, #160]	; 119b0 <__errno_location@plt+0x720>
   1190c:	umull	r1, r2, r2, r3
   11910:	lsr	r2, r2, #7
   11914:	mov	r1, #2000	; 0x7d0
   11918:	mul	r2, r1, r2
   1191c:	sub	r2, r3, r2
   11920:	ldr	r1, [pc, #140]	; 119b4 <__errno_location@plt+0x724>
   11924:	add	r1, pc, r1
   11928:	mov	r3, r2
   1192c:	lsl	r3, r3, #1
   11930:	add	r3, r3, r2
   11934:	lsl	r3, r3, #2
   11938:	add	r3, r1, r3
   1193c:	ldr	r3, [r3]
   11940:	str	r3, [fp, #-8]
   11944:	b	11990 <__errno_location@plt+0x700>
   11948:	ldr	r3, [fp, #-8]
   1194c:	ldr	r3, [r3]
   11950:	str	r3, [fp, #-12]
   11954:	ldr	r3, [fp, #-12]
   11958:	ldr	r2, [r3, #24]
   1195c:	ldr	r3, [fp, #-16]
   11960:	cmp	r2, r3
   11964:	bne	11984 <__errno_location@plt+0x6f4>
   11968:	ldr	r3, [fp, #-12]
   1196c:	ldrb	r3, [r3, #72]	; 0x48
   11970:	and	r3, r3, #8
   11974:	cmp	r3, #0
   11978:	bne	11984 <__errno_location@plt+0x6f4>
   1197c:	ldr	r3, [fp, #-12]
   11980:	b	119a0 <__errno_location@plt+0x710>
   11984:	ldr	r3, [fp, #-8]
   11988:	ldr	r3, [r3, #8]
   1198c:	str	r3, [fp, #-8]
   11990:	ldr	r3, [fp, #-8]
   11994:	cmp	r3, #0
   11998:	bne	11948 <__errno_location@plt+0x6b8>
   1199c:	mov	r3, #0
   119a0:	mov	r0, r3
   119a4:	add	sp, fp, #0
   119a8:	pop	{fp}		; (ldr fp, [sp], #4)
   119ac:	bx	lr
   119b0:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   119b4:	andeq	r3, r1, r0, lsr #16
   119b8:	push	{fp, lr}
   119bc:	add	fp, sp, #4
   119c0:	sub	sp, sp, #8
   119c4:	str	r0, [fp, #-8]
   119c8:	str	r1, [fp, #-12]
   119cc:	ldr	r3, [fp, #-8]
   119d0:	ldr	r2, [fp, #-12]
   119d4:	str	r2, [r3, #24]
   119d8:	ldr	r0, [fp, #-8]
   119dc:	ldr	r3, [fp, #-12]
   119e0:	ldr	r2, [pc, #72]	; 11a30 <__errno_location@plt+0x7a0>
   119e4:	umull	r1, r2, r2, r3
   119e8:	lsr	r2, r2, #7
   119ec:	mov	r1, #2000	; 0x7d0
   119f0:	mul	r2, r1, r2
   119f4:	sub	r2, r3, r2
   119f8:	mov	r3, r2
   119fc:	lsl	r3, r3, #1
   11a00:	add	r3, r3, r2
   11a04:	lsl	r3, r3, #2
   11a08:	ldr	r2, [pc, #36]	; 11a34 <__errno_location@plt+0x7a4>
   11a0c:	add	r2, pc, r2
   11a10:	add	r3, r3, r2
   11a14:	mov	r2, r3
   11a18:	mov	r1, r0
   11a1c:	ldr	r0, [fp, #-8]
   11a20:	bl	113c4 <__errno_location@plt+0x134>
   11a24:	nop			; (mov r0, r0)
   11a28:	sub	sp, fp, #4
   11a2c:	pop	{fp, pc}
   11a30:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   11a34:	andeq	r3, r1, r8, lsr r7
   11a38:	push	{fp, lr}
   11a3c:	add	fp, sp, #4
   11a40:	sub	sp, sp, #16
   11a44:	str	r0, [fp, #-16]
   11a48:	ldr	r3, [fp, #-16]
   11a4c:	ldr	r3, [r3, #16]
   11a50:	mov	r0, r3
   11a54:	bl	11170 <rb_free_rawbuffer@plt>
   11a58:	ldr	r3, [fp, #-16]
   11a5c:	ldr	r3, [r3, #20]
   11a60:	mov	r0, r3
   11a64:	bl	11170 <rb_free_rawbuffer@plt>
   11a68:	ldr	r3, [fp, #-16]
   11a6c:	ldrb	r3, [r3, #72]	; 0x48
   11a70:	and	r3, r3, #2
   11a74:	cmp	r3, #0
   11a78:	beq	11aac <__errno_location@plt+0x81c>
   11a7c:	ldr	r3, [fp, #-16]
   11a80:	ldr	r3, [r3, #76]	; 0x4c
   11a84:	str	r3, [fp, #-8]
   11a88:	ldr	r3, [fp, #-8]
   11a8c:	mov	r0, r3
   11a90:	bl	10fe4 <inflateEnd@plt>
   11a94:	ldr	r3, [fp, #-8]
   11a98:	add	r3, r3, #56	; 0x38
   11a9c:	mov	r0, r3
   11aa0:	bl	110e0 <deflateEnd@plt>
   11aa4:	ldr	r0, [fp, #-8]
   11aa8:	bl	117f0 <__errno_location@plt+0x560>
   11aac:	ldr	r0, [fp, #-16]
   11ab0:	bl	117f0 <__errno_location@plt+0x560>
   11ab4:	nop			; (mov r0, r0)
   11ab8:	sub	sp, fp, #4
   11abc:	pop	{fp, pc}
   11ac0:	push	{fp, lr}
   11ac4:	add	fp, sp, #4
   11ac8:	sub	sp, sp, #24
   11acc:	str	r0, [fp, #-24]	; 0xffffffe8
   11ad0:	ldr	r3, [pc, #168]	; 11b80 <__errno_location@plt+0x8f0>
   11ad4:	add	r3, pc, r3
   11ad8:	ldr	r3, [r3]
   11adc:	str	r3, [fp, #-8]
   11ae0:	ldr	r3, [fp, #-8]
   11ae4:	cmp	r3, #0
   11ae8:	beq	11af8 <__errno_location@plt+0x868>
   11aec:	ldr	r3, [fp, #-8]
   11af0:	ldr	r3, [r3, #8]
   11af4:	b	11afc <__errno_location@plt+0x86c>
   11af8:	mov	r3, #0
   11afc:	str	r3, [fp, #-12]
   11b00:	b	11b40 <__errno_location@plt+0x8b0>
   11b04:	ldr	r3, [fp, #-8]
   11b08:	ldr	r3, [r3]
   11b0c:	str	r3, [fp, #-16]
   11b10:	ldr	r0, [fp, #-16]
   11b14:	bl	11a38 <__errno_location@plt+0x7a8>
   11b18:	ldr	r3, [fp, #-12]
   11b1c:	str	r3, [fp, #-8]
   11b20:	ldr	r3, [fp, #-8]
   11b24:	cmp	r3, #0
   11b28:	beq	11b38 <__errno_location@plt+0x8a8>
   11b2c:	ldr	r3, [fp, #-8]
   11b30:	ldr	r3, [r3, #8]
   11b34:	b	11b3c <__errno_location@plt+0x8ac>
   11b38:	mov	r3, #0
   11b3c:	str	r3, [fp, #-12]
   11b40:	ldr	r3, [fp, #-8]
   11b44:	cmp	r3, #0
   11b48:	bne	11b04 <__errno_location@plt+0x874>
   11b4c:	ldr	r3, [pc, #48]	; 11b84 <__errno_location@plt+0x8f4>
   11b50:	add	r3, pc, r3
   11b54:	mov	r2, #0
   11b58:	str	r2, [r3]
   11b5c:	ldr	r3, [pc, #36]	; 11b88 <__errno_location@plt+0x8f8>
   11b60:	add	r3, pc, r3
   11b64:	ldr	r2, [r3]
   11b68:	ldr	r3, [pc, #28]	; 11b8c <__errno_location@plt+0x8fc>
   11b6c:	add	r3, pc, r3
   11b70:	str	r2, [r3, #4]
   11b74:	nop			; (mov r0, r0)
   11b78:	sub	sp, fp, #4
   11b7c:	pop	{fp, pc}
   11b80:	andeq	r9, r1, r0, lsr r4
   11b84:			; <UNDEFINED> instruction: 0x000193b4
   11b88:	andeq	r9, r1, r4, lsr #7
   11b8c:	muleq	r1, r8, r3
   11b90:	push	{r2, r3}
   11b94:	push	{fp, lr}
   11b98:	add	fp, sp, #4
   11b9c:	sub	sp, sp, #400	; 0x190
   11ba0:	str	r0, [fp, #-400]	; 0xfffffe70
   11ba4:	str	r1, [fp, #-404]	; 0xfffffe6c
   11ba8:	ldr	r3, [fp, #-400]	; 0xfffffe70
   11bac:	ldrb	r3, [r3, #72]	; 0x48
   11bb0:	and	r3, r3, #8
   11bb4:	cmp	r3, #0
   11bb8:	bne	11d7c <__errno_location@plt+0xaec>
   11bbc:	ldr	r3, [fp, #-400]	; 0xfffffe70
   11bc0:	ldr	r2, [r3, #16]
   11bc4:	ldr	r3, [fp, #-400]	; 0xfffffe70
   11bc8:	ldr	r3, [r3, #28]
   11bcc:	mov	r1, r3
   11bd0:	mov	r0, r2
   11bd4:	bl	1126c <rb_rawbuf_flush@plt>
   11bd8:	ldr	r3, [fp, #-400]	; 0xfffffe70
   11bdc:	ldr	r2, [r3, #20]
   11be0:	ldr	r3, [fp, #-400]	; 0xfffffe70
   11be4:	ldr	r3, [r3, #32]
   11be8:	mov	r1, r3
   11bec:	mov	r0, r2
   11bf0:	bl	1126c <rb_rawbuf_flush@plt>
   11bf4:	ldr	r3, [fp, #-400]	; 0xfffffe70
   11bf8:	ldr	r3, [r3, #28]
   11bfc:	mov	r0, r3
   11c00:	bl	11128 <rb_close@plt>
   11c04:	ldr	r3, [fp, #-400]	; 0xfffffe70
   11c08:	ldrb	r3, [r3, #72]	; 0x48
   11c0c:	orr	r3, r3, #8
   11c10:	uxtb	r2, r3
   11c14:	ldr	r3, [fp, #-400]	; 0xfffffe70
   11c18:	strb	r2, [r3, #72]	; 0x48
   11c1c:	ldr	r3, [fp, #-400]	; 0xfffffe70
   11c20:	ldrb	r3, [r3, #72]	; 0x48
   11c24:	and	r3, r3, #64	; 0x40
   11c28:	cmp	r3, #0
   11c2c:	bne	11c78 <__errno_location@plt+0x9e8>
   11c30:	ldr	r0, [fp, #-400]	; 0xfffffe70
   11c34:	ldr	r3, [fp, #-400]	; 0xfffffe70
   11c38:	ldr	r3, [r3, #24]
   11c3c:	ldr	r2, [pc, #332]	; 11d90 <__errno_location@plt+0xb00>
   11c40:	umull	r1, r2, r2, r3
   11c44:	lsr	r2, r2, #7
   11c48:	mov	r1, #2000	; 0x7d0
   11c4c:	mul	r2, r1, r2
   11c50:	sub	r2, r3, r2
   11c54:	mov	r3, r2
   11c58:	lsl	r3, r3, #1
   11c5c:	add	r3, r3, r2
   11c60:	lsl	r3, r3, #2
   11c64:	ldr	r2, [pc, #296]	; 11d94 <__errno_location@plt+0xb04>
   11c68:	add	r2, pc, r2
   11c6c:	add	r3, r3, r2
   11c70:	mov	r1, r3
   11c74:	bl	1166c <__errno_location@plt+0x3dc>
   11c78:	ldr	r3, [fp, #-404]	; 0xfffffe6c
   11c7c:	cmp	r3, #0
   11c80:	beq	11c90 <__errno_location@plt+0xa00>
   11c84:	ldr	r3, [fp, #4]
   11c88:	cmp	r3, #0
   11c8c:	bne	11cbc <__errno_location@plt+0xa2c>
   11c90:	ldr	r3, [fp, #-400]	; 0xfffffe70
   11c94:	ldr	r3, [r3, #32]
   11c98:	mov	r0, r3
   11c9c:	bl	11128 <rb_close@plt>
   11ca0:	ldr	r3, [fp, #-400]	; 0xfffffe70
   11ca4:	ldr	r2, [pc, #236]	; 11d98 <__errno_location@plt+0xb08>
   11ca8:	add	r2, pc, r2
   11cac:	mov	r1, r3
   11cb0:	ldr	r0, [fp, #-400]	; 0xfffffe70
   11cb4:	bl	113c4 <__errno_location@plt+0x134>
   11cb8:	b	11d80 <__errno_location@plt+0xaf0>
   11cbc:	ldr	r3, [fp, #-400]	; 0xfffffe70
   11cc0:	ldr	r0, [r3, #32]
   11cc4:	ldr	r3, [fp, #-400]	; 0xfffffe70
   11cc8:	ldr	r2, [pc, #204]	; 11d9c <__errno_location@plt+0xb0c>
   11ccc:	add	r2, pc, r2
   11cd0:	mov	r1, #1
   11cd4:	bl	10ffc <rb_setselect@plt>
   11cd8:	ldr	r3, [fp, #-400]	; 0xfffffe70
   11cdc:	ldr	r0, [r3, #32]
   11ce0:	mov	r3, #0
   11ce4:	mov	r2, #0
   11ce8:	mov	r1, #2
   11cec:	bl	10ffc <rb_setselect@plt>
   11cf0:	add	r3, fp, #8
   11cf4:	str	r3, [fp, #-12]
   11cf8:	sub	r0, fp, #140	; 0x8c
   11cfc:	ldr	r3, [fp, #-12]
   11d00:	ldr	r2, [fp, #4]
   11d04:	mov	r1, #128	; 0x80
   11d08:	bl	1102c <vsnprintf@plt>
   11d0c:	mov	r3, #68	; 0x44
   11d10:	strb	r3, [fp, #-396]	; 0xfffffe74
   11d14:	ldr	r3, [fp, #-400]	; 0xfffffe70
   11d18:	ldr	r2, [r3, #24]
   11d1c:	sub	r3, fp, #396	; 0x18c
   11d20:	add	r3, r3, #1
   11d24:	mov	r1, r2
   11d28:	mov	r0, r3
   11d2c:	bl	11860 <__errno_location@plt+0x5d0>
   11d30:	sub	r1, fp, #140	; 0x8c
   11d34:	sub	r3, fp, #396	; 0x18c
   11d38:	add	r3, r3, #5
   11d3c:	mov	r2, #251	; 0xfb
   11d40:	mov	r0, r3
   11d44:	bl	11098 <rb_strlcpy@plt>
   11d48:	sub	r3, fp, #140	; 0x8c
   11d4c:	mov	r0, r3
   11d50:	bl	11104 <strlen@plt>
   11d54:	mov	r3, r0
   11d58:	add	r3, r3, #6
   11d5c:	str	r3, [fp, #-8]
   11d60:	ldr	r3, [fp, #-400]	; 0xfffffe70
   11d64:	ldr	r3, [r3, #12]
   11d68:	ldr	r2, [fp, #-8]
   11d6c:	sub	r1, fp, #396	; 0x18c
   11d70:	mov	r0, r3
   11d74:	bl	122fc <__errno_location@plt+0x106c>
   11d78:	b	11d80 <__errno_location@plt+0xaf0>
   11d7c:	nop			; (mov r0, r0)
   11d80:	sub	sp, fp, #4
   11d84:	pop	{fp, lr}
   11d88:	add	sp, sp, #8
   11d8c:	bx	lr
   11d90:	ldrdne	r4, [r2], #-211	; 0xffffff2d	; <UNPREDICTABLE>
   11d94:	ldrdeq	r3, [r1], -ip
   11d98:	andeq	r9, r1, ip, asr r2
   11d9c:	andeq	r0, r0, r0, ror #26
   11da0:	push	{fp, lr}
   11da4:	add	fp, sp, #4
   11da8:	sub	sp, sp, #24
   11dac:	str	r0, [fp, #-16]
   11db0:	str	r1, [fp, #-20]	; 0xffffffec
   11db4:	str	r2, [fp, #-24]	; 0xffffffe8
   11db8:	mov	r0, #80	; 0x50
   11dbc:	bl	1179c <__errno_location@plt+0x50c>
   11dc0:	str	r0, [fp, #-8]
   11dc4:	ldr	r3, [fp, #-8]
   11dc8:	ldr	r2, [fp, #-16]
   11dcc:	str	r2, [r3, #12]
   11dd0:	bl	111e8 <rb_new_rawbuffer@plt>
   11dd4:	mov	r2, r0
   11dd8:	ldr	r3, [fp, #-8]
   11ddc:	str	r2, [r3, #16]
   11de0:	bl	111e8 <rb_new_rawbuffer@plt>
   11de4:	mov	r2, r0
   11de8:	ldr	r3, [fp, #-8]
   11dec:	str	r2, [r3, #20]
   11df0:	ldr	r3, [fp, #-8]
   11df4:	ldr	r2, [fp, #-20]	; 0xffffffec
   11df8:	str	r2, [r3, #28]
   11dfc:	ldr	r3, [fp, #-8]
   11e00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11e04:	str	r2, [r3, #32]
   11e08:	ldr	r3, [fp, #-8]
   11e0c:	mvn	r2, #0
   11e10:	str	r2, [r3, #24]
   11e14:	ldr	r3, [fp, #-8]
   11e18:	mov	r2, #0
   11e1c:	str	r2, [r3, #76]	; 0x4c
   11e20:	ldr	r0, [fp, #-20]	; 0xffffffec
   11e24:	bl	11074 <rb_set_nb@plt>
   11e28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11e2c:	bl	11074 <rb_set_nb@plt>
   11e30:	ldr	r3, [fp, #-8]
   11e34:	mov	r0, r3
   11e38:	sub	sp, fp, #4
   11e3c:	pop	{fp, pc}
   11e40:	push	{fp, lr}
   11e44:	add	fp, sp, #4
   11e48:	sub	sp, sp, #32
   11e4c:	str	r0, [fp, #-32]	; 0xffffffe0
   11e50:	mov	r3, #0
   11e54:	str	r3, [fp, #-16]
   11e58:	b	11f5c <__errno_location@plt+0xccc>
   11e5c:	ldr	r1, [pc, #272]	; 11f74 <__errno_location@plt+0xce4>
   11e60:	add	r1, pc, r1
   11e64:	ldr	r2, [fp, #-16]
   11e68:	mov	r3, r2
   11e6c:	lsl	r3, r3, #1
   11e70:	add	r3, r3, r2
   11e74:	lsl	r3, r3, #2
   11e78:	add	r3, r1, r3
   11e7c:	ldr	r3, [r3]
   11e80:	str	r3, [fp, #-8]
   11e84:	ldr	r3, [fp, #-8]
   11e88:	cmp	r3, #0
   11e8c:	beq	11e9c <__errno_location@plt+0xc0c>
   11e90:	ldr	r3, [fp, #-8]
   11e94:	ldr	r3, [r3, #8]
   11e98:	b	11ea0 <__errno_location@plt+0xc10>
   11e9c:	mov	r3, #0
   11ea0:	str	r3, [fp, #-12]
   11ea4:	b	11f44 <__errno_location@plt+0xcb4>
   11ea8:	ldr	r3, [fp, #-8]
   11eac:	ldr	r3, [r3]
   11eb0:	str	r3, [fp, #-20]	; 0xffffffec
   11eb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   11eb8:	ldrb	r3, [r3, #72]	; 0x48
   11ebc:	and	r3, r3, #1
   11ec0:	cmp	r3, #0
   11ec4:	beq	11f18 <__errno_location@plt+0xc88>
   11ec8:	ldr	r3, [fp, #-20]	; 0xffffffec
   11ecc:	ldr	r3, [r3, #28]
   11ed0:	mov	r0, r3
   11ed4:	bl	11014 <rb_ssl_handshake_count@plt>
   11ed8:	str	r0, [fp, #-24]	; 0xffffffe8
   11edc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ee0:	cmp	r3, #2
   11ee4:	bls	11f04 <__errno_location@plt+0xc74>
   11ee8:	ldr	r3, [pc, #136]	; 11f78 <__errno_location@plt+0xce8>
   11eec:	add	r3, pc, r3
   11ef0:	mov	r2, r3
   11ef4:	mov	r1, #1
   11ef8:	ldr	r0, [fp, #-20]	; 0xffffffec
   11efc:	bl	11b90 <__errno_location@plt+0x900>
   11f00:	b	11f1c <__errno_location@plt+0xc8c>
   11f04:	ldr	r3, [fp, #-20]	; 0xffffffec
   11f08:	ldr	r3, [r3, #28]
   11f0c:	mov	r0, r3
   11f10:	bl	1114c <rb_ssl_clear_handshake_count@plt>
   11f14:	b	11f1c <__errno_location@plt+0xc8c>
   11f18:	nop			; (mov r0, r0)
   11f1c:	ldr	r3, [fp, #-12]
   11f20:	str	r3, [fp, #-8]
   11f24:	ldr	r3, [fp, #-8]
   11f28:	cmp	r3, #0
   11f2c:	beq	11f3c <__errno_location@plt+0xcac>
   11f30:	ldr	r3, [fp, #-8]
   11f34:	ldr	r3, [r3, #8]
   11f38:	b	11f40 <__errno_location@plt+0xcb0>
   11f3c:	mov	r3, #0
   11f40:	str	r3, [fp, #-12]
   11f44:	ldr	r3, [fp, #-8]
   11f48:	cmp	r3, #0
   11f4c:	bne	11ea8 <__errno_location@plt+0xc18>
   11f50:	ldr	r3, [fp, #-16]
   11f54:	add	r3, r3, #1
   11f58:	str	r3, [fp, #-16]
   11f5c:	ldr	r3, [fp, #-16]
   11f60:	cmp	r3, #2000	; 0x7d0
   11f64:	blt	11e5c <__errno_location@plt+0xbcc>
   11f68:	nop			; (mov r0, r0)
   11f6c:	sub	sp, fp, #4
   11f70:	pop	{fp, pc}
   11f74:	andeq	r3, r1, r4, ror #5
   11f78:	andeq	r2, r0, r4, lsr #24
   11f7c:	push	{fp, lr}
   11f80:	add	fp, sp, #4
   11f84:	sub	sp, sp, #24
   11f88:	str	r0, [fp, #-24]	; 0xffffffe8
   11f8c:	str	r1, [fp, #-28]	; 0xffffffe4
   11f90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11f94:	str	r3, [fp, #-12]
   11f98:	ldr	r3, [fp, #-12]
   11f9c:	ldrb	r3, [r3, #72]	; 0x48
   11fa0:	and	r3, r3, #8
   11fa4:	cmp	r3, #0
   11fa8:	bne	1222c <__errno_location@plt+0xf9c>
   11fac:	ldr	r3, [fp, #-12]
   11fb0:	ldrb	r3, [r3, #72]	; 0x48
   11fb4:	and	r3, r3, #16
   11fb8:	cmp	r3, #0
   11fbc:	beq	12028 <__errno_location@plt+0xd98>
   11fc0:	ldr	r3, [fp, #-12]
   11fc4:	ldrb	r3, [r3, #72]	; 0x48
   11fc8:	bic	r3, r3, #16
   11fcc:	uxtb	r2, r3
   11fd0:	ldr	r3, [fp, #-12]
   11fd4:	strb	r2, [r3, #72]	; 0x48
   11fd8:	ldr	r3, [fp, #-12]
   11fdc:	ldr	r3, [r3, #28]
   11fe0:	ldr	r1, [fp, #-12]
   11fe4:	mov	r0, r3
   11fe8:	bl	12b48 <__errno_location@plt+0x18b8>
   11fec:	ldr	r3, [fp, #-12]
   11ff0:	ldrb	r3, [r3, #72]	; 0x48
   11ff4:	and	r3, r3, #8
   11ff8:	cmp	r3, #0
   11ffc:	bne	12234 <__errno_location@plt+0xfa4>
   12000:	b	12028 <__errno_location@plt+0xd98>
   12004:	ldr	r3, [fp, #-12]
   12008:	ldrd	r0, [r3, #40]	; 0x28
   1200c:	ldr	r3, [fp, #-16]
   12010:	mov	r2, r3
   12014:	asr	r3, r2, #31
   12018:	adds	r2, r2, r0
   1201c:	adc	r3, r3, r1
   12020:	ldr	r1, [fp, #-12]
   12024:	strd	r2, [r1, #40]	; 0x28
   12028:	ldr	r3, [fp, #-12]
   1202c:	ldr	r3, [r3, #16]
   12030:	ldr	r1, [fp, #-24]	; 0xffffffe8
   12034:	mov	r0, r3
   12038:	bl	1126c <rb_rawbuf_flush@plt>
   1203c:	str	r0, [fp, #-16]
   12040:	ldr	r3, [fp, #-16]
   12044:	cmp	r3, #0
   12048:	bgt	12004 <__errno_location@plt+0xd74>
   1204c:	ldr	r3, [fp, #-16]
   12050:	cmp	r3, #0
   12054:	beq	12084 <__errno_location@plt+0xdf4>
   12058:	ldr	r3, [fp, #-16]
   1205c:	cmp	r3, #0
   12060:	bge	1211c <__errno_location@plt+0xe8c>
   12064:	bl	11290 <__errno_location@plt>
   12068:	mov	r3, r0
   1206c:	ldr	r3, [r3]
   12070:	mov	r0, r3
   12074:	bl	10fcc <rb_ignore_errno@plt>
   12078:	mov	r3, r0
   1207c:	cmp	r3, #0
   12080:	bne	1211c <__errno_location@plt+0xe8c>
   12084:	ldr	r3, [fp, #-16]
   12088:	cmp	r3, #0
   1208c:	bne	120b0 <__errno_location@plt+0xe20>
   12090:	ldr	r3, [pc, #424]	; 12240 <__errno_location@plt+0xfb0>
   12094:	add	r3, pc, r3
   12098:	ldr	r3, [r3]
   1209c:	ldr	r2, [pc, #416]	; 12244 <__errno_location@plt+0xfb4>
   120a0:	add	r2, pc, r2
   120a4:	mov	r1, #1
   120a8:	ldr	r0, [fp, #-12]
   120ac:	bl	11b90 <__errno_location@plt+0x900>
   120b0:	ldr	r3, [fp, #-12]
   120b4:	ldrb	r3, [r3, #72]	; 0x48
   120b8:	and	r3, r3, #1
   120bc:	cmp	r3, #0
   120c0:	beq	120e8 <__errno_location@plt+0xe58>
   120c4:	ldr	r3, [fp, #-16]
   120c8:	cmn	r3, #2
   120cc:	bne	120e8 <__errno_location@plt+0xe58>
   120d0:	ldr	r3, [fp, #-12]
   120d4:	ldr	r3, [r3, #28]
   120d8:	mov	r0, r3
   120dc:	bl	1117c <rb_get_ssl_strerror@plt>
   120e0:	str	r0, [fp, #-8]
   120e4:	b	12100 <__errno_location@plt+0xe70>
   120e8:	bl	11290 <__errno_location@plt>
   120ec:	mov	r3, r0
   120f0:	ldr	r3, [r3]
   120f4:	mov	r0, r3
   120f8:	bl	10f90 <strerror@plt>
   120fc:	str	r0, [fp, #-8]
   12100:	ldr	r3, [fp, #-8]
   12104:	ldr	r2, [pc, #316]	; 12248 <__errno_location@plt+0xfb8>
   12108:	add	r2, pc, r2
   1210c:	mov	r1, #1
   12110:	ldr	r0, [fp, #-12]
   12114:	bl	11b90 <__errno_location@plt+0x900>
   12118:	b	12238 <__errno_location@plt+0xfa8>
   1211c:	ldr	r3, [fp, #-12]
   12120:	ldr	r3, [r3, #16]
   12124:	mov	r0, r3
   12128:	bl	11164 <rb_rawbuf_length@plt>
   1212c:	mov	r3, r0
   12130:	cmp	r3, #0
   12134:	ble	121b4 <__errno_location@plt+0xf24>
   12138:	ldr	r3, [fp, #-16]
   1213c:	cmn	r3, #3
   12140:	beq	12164 <__errno_location@plt+0xed4>
   12144:	ldr	r3, [fp, #-12]
   12148:	ldr	r0, [r3, #28]
   1214c:	ldr	r3, [fp, #-12]
   12150:	ldr	r2, [pc, #244]	; 1224c <__errno_location@plt+0xfbc>
   12154:	add	r2, pc, r2
   12158:	mov	r1, #2
   1215c:	bl	10ffc <rb_setselect@plt>
   12160:	b	121cc <__errno_location@plt+0xf3c>
   12164:	ldr	r3, [fp, #-12]
   12168:	ldr	r0, [r3, #28]
   1216c:	ldr	r3, [fp, #-12]
   12170:	ldr	r2, [pc, #216]	; 12250 <__errno_location@plt+0xfc0>
   12174:	add	r2, pc, r2
   12178:	mov	r1, #1
   1217c:	bl	10ffc <rb_setselect@plt>
   12180:	ldr	r3, [fp, #-12]
   12184:	ldr	r0, [r3, #28]
   12188:	mov	r3, #0
   1218c:	mov	r2, #0
   12190:	mov	r1, #2
   12194:	bl	10ffc <rb_setselect@plt>
   12198:	ldr	r3, [fp, #-12]
   1219c:	ldrb	r3, [r3, #72]	; 0x48
   121a0:	orr	r3, r3, #16
   121a4:	uxtb	r2, r3
   121a8:	ldr	r3, [fp, #-12]
   121ac:	strb	r2, [r3, #72]	; 0x48
   121b0:	b	121cc <__errno_location@plt+0xf3c>
   121b4:	ldr	r3, [fp, #-12]
   121b8:	ldr	r0, [r3, #28]
   121bc:	mov	r3, #0
   121c0:	mov	r2, #0
   121c4:	mov	r1, #2
   121c8:	bl	10ffc <rb_setselect@plt>
   121cc:	ldr	r3, [fp, #-12]
   121d0:	ldrb	r3, [r3, #72]	; 0x48
   121d4:	and	r3, r3, #4
   121d8:	cmp	r3, #0
   121dc:	beq	12238 <__errno_location@plt+0xfa8>
   121e0:	ldr	r3, [fp, #-12]
   121e4:	ldr	r3, [r3, #16]
   121e8:	mov	r0, r3
   121ec:	bl	11164 <rb_rawbuf_length@plt>
   121f0:	mov	r3, r0
   121f4:	cmp	r3, #0
   121f8:	bne	12238 <__errno_location@plt+0xfa8>
   121fc:	ldr	r3, [fp, #-12]
   12200:	ldrb	r3, [r3, #72]	; 0x48
   12204:	bic	r3, r3, #4
   12208:	uxtb	r2, r3
   1220c:	ldr	r3, [fp, #-12]
   12210:	strb	r2, [r3, #72]	; 0x48
   12214:	ldr	r3, [fp, #-12]
   12218:	ldr	r3, [r3, #32]
   1221c:	ldr	r1, [fp, #-12]
   12220:	mov	r0, r3
   12224:	bl	12824 <__errno_location@plt+0x1594>
   12228:	b	12238 <__errno_location@plt+0xfa8>
   1222c:	nop			; (mov r0, r0)
   12230:	b	12238 <__errno_location@plt+0xfa8>
   12234:	nop			; (mov r0, r0)
   12238:	sub	sp, fp, #4
   1223c:	pop	{fp, pc}
   12240:	muleq	r1, r4, r0
   12244:	andeq	r2, r0, r4, lsl #21
   12248:	andeq	r2, r0, r0, lsr #20
   1224c:			; <UNDEFINED> instruction: 0xfffffe20
   12250:			; <UNDEFINED> instruction: 0xfffffe00
   12254:	push	{fp, lr}
   12258:	add	fp, sp, #4
   1225c:	sub	sp, sp, #16
   12260:	str	r0, [fp, #-8]
   12264:	str	r1, [fp, #-12]
   12268:	str	r2, [fp, #-16]
   1226c:	ldr	r3, [fp, #-8]
   12270:	ldrb	r3, [r3, #72]	; 0x48
   12274:	and	r3, r3, #8
   12278:	cmp	r3, #0
   1227c:	bne	1229c <__errno_location@plt+0x100c>
   12280:	ldr	r3, [fp, #-8]
   12284:	ldr	r3, [r3, #16]
   12288:	ldr	r2, [fp, #-16]
   1228c:	ldr	r1, [fp, #-12]
   12290:	mov	r0, r3
   12294:	bl	11260 <rb_rawbuf_append@plt>
   12298:	b	122a0 <__errno_location@plt+0x1010>
   1229c:	nop			; (mov r0, r0)
   122a0:	sub	sp, fp, #4
   122a4:	pop	{fp, pc}
   122a8:	push	{fp, lr}
   122ac:	add	fp, sp, #4
   122b0:	sub	sp, sp, #16
   122b4:	str	r0, [fp, #-8]
   122b8:	str	r1, [fp, #-12]
   122bc:	str	r2, [fp, #-16]
   122c0:	ldr	r3, [fp, #-8]
   122c4:	ldrb	r3, [r3, #72]	; 0x48
   122c8:	and	r3, r3, #8
   122cc:	cmp	r3, #0
   122d0:	bne	122f0 <__errno_location@plt+0x1060>
   122d4:	ldr	r3, [fp, #-8]
   122d8:	ldr	r3, [r3, #20]
   122dc:	ldr	r2, [fp, #-16]
   122e0:	ldr	r1, [fp, #-12]
   122e4:	mov	r0, r3
   122e8:	bl	11260 <rb_rawbuf_append@plt>
   122ec:	b	122f4 <__errno_location@plt+0x1064>
   122f0:	nop			; (mov r0, r0)
   122f4:	sub	sp, fp, #4
   122f8:	pop	{fp, pc}
   122fc:	push	{fp, lr}
   12300:	add	fp, sp, #4
   12304:	sub	sp, sp, #24
   12308:	str	r0, [fp, #-16]
   1230c:	str	r1, [fp, #-20]	; 0xffffffec
   12310:	str	r2, [fp, #-24]	; 0xffffffe8
   12314:	mov	r0, #40	; 0x28
   12318:	bl	1179c <__errno_location@plt+0x50c>
   1231c:	str	r0, [fp, #-8]
   12320:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12324:	bl	1179c <__errno_location@plt+0x50c>
   12328:	mov	r2, r0
   1232c:	ldr	r3, [fp, #-8]
   12330:	str	r2, [r3, #12]
   12334:	ldr	r3, [fp, #-8]
   12338:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1233c:	str	r2, [r3, #16]
   12340:	ldr	r3, [fp, #-8]
   12344:	ldr	r3, [r3, #12]
   12348:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1234c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12350:	mov	r0, r3
   12354:	bl	1111c <memcpy@plt>
   12358:	ldr	r3, [fp, #-8]
   1235c:	mov	r2, #0
   12360:	str	r2, [r3, #36]	; 0x24
   12364:	ldr	r1, [fp, #-8]
   12368:	ldr	r3, [fp, #-16]
   1236c:	add	r3, r3, #36	; 0x24
   12370:	mov	r2, r3
   12374:	ldr	r0, [fp, #-8]
   12378:	bl	11518 <__errno_location@plt+0x288>
   1237c:	ldr	r3, [fp, #-16]
   12380:	ldr	r3, [r3, #16]
   12384:	ldr	r1, [fp, #-16]
   12388:	mov	r0, r3
   1238c:	bl	141ac <__errno_location@plt+0x2f1c>
   12390:	nop			; (mov r0, r0)
   12394:	sub	sp, fp, #4
   12398:	pop	{fp, pc}
   1239c:	push	{fp, lr}
   123a0:	add	fp, sp, #4
   123a4:	sub	sp, sp, #16384	; 0x4000
   123a8:	sub	sp, sp, #32
   123ac:	sub	r3, fp, #16384	; 0x4000
   123b0:	sub	r3, r3, #4
   123b4:	str	r0, [r3, #-20]	; 0xffffffec
   123b8:	sub	r3, fp, #16384	; 0x4000
   123bc:	sub	r3, r3, #4
   123c0:	str	r1, [r3, #-24]	; 0xffffffe8
   123c4:	sub	r3, fp, #16384	; 0x4000
   123c8:	sub	r3, r3, #4
   123cc:	str	r2, [r3, #-28]	; 0xffffffe4
   123d0:	sub	r3, fp, #16384	; 0x4000
   123d4:	sub	r3, r3, #4
   123d8:	ldr	r3, [r3, #-20]	; 0xffffffec
   123dc:	ldr	r3, [r3, #76]	; 0x4c
   123e0:	add	r3, r3, #56	; 0x38
   123e4:	str	r3, [fp, #-8]
   123e8:	ldr	r3, [fp, #-8]
   123ec:	sub	r2, fp, #16384	; 0x4000
   123f0:	sub	r2, r2, #4
   123f4:	ldr	r2, [r2, #-24]	; 0xffffffe8
   123f8:	str	r2, [r3]
   123fc:	ldr	r3, [fp, #-8]
   12400:	sub	r2, fp, #16384	; 0x4000
   12404:	sub	r2, r2, #4
   12408:	ldr	r2, [r2, #-28]	; 0xffffffe4
   1240c:	str	r2, [r3, #4]
   12410:	ldr	r2, [fp, #-8]
   12414:	sub	r3, fp, #16384	; 0x4000
   12418:	sub	r3, r3, #4
   1241c:	sub	r3, r3, #12
   12420:	str	r3, [r2, #12]
   12424:	ldr	r3, [fp, #-8]
   12428:	mov	r2, #16384	; 0x4000
   1242c:	str	r2, [r3, #16]
   12430:	mov	r1, #2
   12434:	ldr	r0, [fp, #-8]
   12438:	bl	11050 <deflate@plt>
   1243c:	str	r0, [fp, #-12]
   12440:	ldr	r3, [fp, #-12]
   12444:	cmp	r3, #0
   12448:	beq	12480 <__errno_location@plt+0x11f0>
   1244c:	ldr	r0, [fp, #-12]
   12450:	bl	10fa8 <zError@plt>
   12454:	mov	r2, r0
   12458:	sub	r3, fp, #16384	; 0x4000
   1245c:	sub	r3, r3, #4
   12460:	mov	r0, r3
   12464:	mov	r3, r2
   12468:	ldr	r2, [pc, #176]	; 12520 <__errno_location@plt+0x1290>
   1246c:	add	r2, pc, r2
   12470:	mov	r1, #1
   12474:	ldr	r0, [r0, #-20]	; 0xffffffec
   12478:	bl	11b90 <__errno_location@plt+0x900>
   1247c:	b	12518 <__errno_location@plt+0x1288>
   12480:	ldr	r3, [fp, #-8]
   12484:	ldr	r3, [r3, #16]
   12488:	cmp	r3, #0
   1248c:	bne	124b0 <__errno_location@plt+0x1220>
   12490:	sub	r3, fp, #16384	; 0x4000
   12494:	sub	r3, r3, #4
   12498:	ldr	r2, [pc, #132]	; 12524 <__errno_location@plt+0x1294>
   1249c:	add	r2, pc, r2
   124a0:	mov	r1, #1
   124a4:	ldr	r0, [r3, #-20]	; 0xffffffec
   124a8:	bl	11b90 <__errno_location@plt+0x900>
   124ac:	b	12518 <__errno_location@plt+0x1288>
   124b0:	ldr	r3, [fp, #-8]
   124b4:	ldr	r3, [r3, #4]
   124b8:	cmp	r3, #0
   124bc:	beq	124e0 <__errno_location@plt+0x1250>
   124c0:	sub	r3, fp, #16384	; 0x4000
   124c4:	sub	r3, r3, #4
   124c8:	ldr	r2, [pc, #88]	; 12528 <__errno_location@plt+0x1298>
   124cc:	add	r2, pc, r2
   124d0:	mov	r1, #1
   124d4:	ldr	r0, [r3, #-20]	; 0xffffffec
   124d8:	bl	11b90 <__errno_location@plt+0x900>
   124dc:	b	12518 <__errno_location@plt+0x1288>
   124e0:	ldr	r3, [fp, #-8]
   124e4:	ldr	r3, [r3, #16]
   124e8:	rsb	r3, r3, #16384	; 0x4000
   124ec:	str	r3, [fp, #-16]
   124f0:	ldr	r2, [fp, #-16]
   124f4:	sub	r3, fp, #16384	; 0x4000
   124f8:	sub	r3, r3, #4
   124fc:	sub	r3, r3, #12
   12500:	sub	r1, fp, #16384	; 0x4000
   12504:	sub	r1, r1, #4
   12508:	mov	r0, r1
   1250c:	mov	r1, r3
   12510:	ldr	r0, [r0, #-20]	; 0xffffffec
   12514:	bl	12254 <__errno_location@plt+0xfc4>
   12518:	sub	sp, fp, #4
   1251c:	pop	{fp, pc}
   12520:	andeq	r2, r0, ip, asr #13
   12524:			; <UNDEFINED> instruction: 0x000026b0
   12528:	andeq	r2, r0, r8, lsr #13
   1252c:	push	{fp, lr}
   12530:	add	fp, sp, #4
   12534:	sub	sp, sp, #16384	; 0x4000
   12538:	sub	sp, sp, #24
   1253c:	sub	r3, fp, #16384	; 0x4000
   12540:	sub	r3, r3, #4
   12544:	str	r0, [r3, #-12]
   12548:	sub	r3, fp, #16384	; 0x4000
   1254c:	sub	r3, r3, #4
   12550:	str	r1, [r3, #-16]
   12554:	sub	r3, fp, #16384	; 0x4000
   12558:	sub	r3, r3, #4
   1255c:	str	r2, [r3, #-20]	; 0xffffffec
   12560:	mov	r3, #0
   12564:	str	r3, [fp, #-8]
   12568:	sub	r3, fp, #16384	; 0x4000
   1256c:	sub	r3, r3, #4
   12570:	ldr	r3, [r3, #-12]
   12574:	ldr	r3, [r3, #76]	; 0x4c
   12578:	sub	r2, fp, #16384	; 0x4000
   1257c:	sub	r2, r2, #4
   12580:	ldr	r2, [r2, #-16]
   12584:	str	r2, [r3]
   12588:	sub	r3, fp, #16384	; 0x4000
   1258c:	sub	r3, r3, #4
   12590:	ldr	r3, [r3, #-12]
   12594:	ldr	r3, [r3, #76]	; 0x4c
   12598:	sub	r2, fp, #16384	; 0x4000
   1259c:	sub	r2, r2, #4
   125a0:	ldr	r2, [r2, #-20]	; 0xffffffec
   125a4:	str	r2, [r3, #4]
   125a8:	sub	r3, fp, #16384	; 0x4000
   125ac:	sub	r3, r3, #4
   125b0:	ldr	r3, [r3, #-12]
   125b4:	ldr	r2, [r3, #76]	; 0x4c
   125b8:	sub	r3, fp, #16384	; 0x4000
   125bc:	sub	r3, r3, #4
   125c0:	sub	r3, r3, #8
   125c4:	str	r3, [r2, #12]
   125c8:	sub	r3, fp, #16384	; 0x4000
   125cc:	sub	r3, r3, #4
   125d0:	ldr	r3, [r3, #-12]
   125d4:	ldr	r3, [r3, #76]	; 0x4c
   125d8:	mov	r2, #16384	; 0x4000
   125dc:	str	r2, [r3, #16]
   125e0:	b	12730 <__errno_location@plt+0x14a0>
   125e4:	sub	r3, fp, #16384	; 0x4000
   125e8:	sub	r3, r3, #4
   125ec:	ldr	r3, [r3, #-12]
   125f0:	ldr	r3, [r3, #76]	; 0x4c
   125f4:	mov	r1, #0
   125f8:	mov	r0, r3
   125fc:	bl	110b0 <inflate@plt>
   12600:	str	r0, [fp, #-12]
   12604:	ldr	r3, [fp, #-12]
   12608:	cmp	r3, #0
   1260c:	beq	12690 <__errno_location@plt+0x1400>
   12610:	sub	r3, fp, #16384	; 0x4000
   12614:	sub	r3, r3, #4
   12618:	mov	r2, #6
   1261c:	ldr	r1, [r3, #-16]
   12620:	ldr	r3, [pc, #360]	; 12790 <__errno_location@plt+0x1500>
   12624:	add	r3, pc, r3
   12628:	mov	r0, r3
   1262c:	bl	11248 <strncmp@plt>
   12630:	mov	r3, r0
   12634:	cmp	r3, #0
   12638:	bne	1265c <__errno_location@plt+0x13cc>
   1263c:	sub	r3, fp, #16384	; 0x4000
   12640:	sub	r3, r3, #4
   12644:	ldr	r2, [pc, #328]	; 12794 <__errno_location@plt+0x1504>
   12648:	add	r2, pc, r2
   1264c:	mov	r1, #1
   12650:	ldr	r0, [r3, #-12]
   12654:	bl	11b90 <__errno_location@plt+0x900>
   12658:	b	12788 <__errno_location@plt+0x14f8>
   1265c:	ldr	r0, [fp, #-12]
   12660:	bl	10fa8 <zError@plt>
   12664:	mov	r2, r0
   12668:	sub	r3, fp, #16384	; 0x4000
   1266c:	sub	r3, r3, #4
   12670:	mov	r0, r3
   12674:	mov	r3, r2
   12678:	ldr	r2, [pc, #280]	; 12798 <__errno_location@plt+0x1508>
   1267c:	add	r2, pc, r2
   12680:	mov	r1, #1
   12684:	ldr	r0, [r0, #-12]
   12688:	bl	11b90 <__errno_location@plt+0x900>
   1268c:	b	12788 <__errno_location@plt+0x14f8>
   12690:	sub	r3, fp, #16384	; 0x4000
   12694:	sub	r3, r3, #4
   12698:	ldr	r3, [r3, #-12]
   1269c:	ldr	r3, [r3, #76]	; 0x4c
   126a0:	ldr	r3, [r3, #16]
   126a4:	rsb	r3, r3, #16384	; 0x4000
   126a8:	str	r3, [fp, #-8]
   126ac:	sub	r3, fp, #16384	; 0x4000
   126b0:	sub	r3, r3, #4
   126b4:	ldr	r3, [r3, #-12]
   126b8:	ldr	r3, [r3, #76]	; 0x4c
   126bc:	ldr	r3, [r3, #4]
   126c0:	cmp	r3, #0
   126c4:	beq	12730 <__errno_location@plt+0x14a0>
   126c8:	ldr	r2, [fp, #-8]
   126cc:	sub	r3, fp, #16384	; 0x4000
   126d0:	sub	r3, r3, #4
   126d4:	sub	r3, r3, #8
   126d8:	sub	r1, fp, #16384	; 0x4000
   126dc:	sub	r1, r1, #4
   126e0:	mov	r0, r1
   126e4:	mov	r1, r3
   126e8:	ldr	r0, [r0, #-12]
   126ec:	bl	122a8 <__errno_location@plt+0x1018>
   126f0:	mov	r3, #0
   126f4:	str	r3, [fp, #-8]
   126f8:	sub	r3, fp, #16384	; 0x4000
   126fc:	sub	r3, r3, #4
   12700:	ldr	r3, [r3, #-12]
   12704:	ldr	r2, [r3, #76]	; 0x4c
   12708:	sub	r3, fp, #16384	; 0x4000
   1270c:	sub	r3, r3, #4
   12710:	sub	r3, r3, #8
   12714:	str	r3, [r2, #12]
   12718:	sub	r3, fp, #16384	; 0x4000
   1271c:	sub	r3, r3, #4
   12720:	ldr	r3, [r3, #-12]
   12724:	ldr	r3, [r3, #76]	; 0x4c
   12728:	mov	r2, #16384	; 0x4000
   1272c:	str	r2, [r3, #16]
   12730:	sub	r3, fp, #16384	; 0x4000
   12734:	sub	r3, r3, #4
   12738:	ldr	r3, [r3, #-12]
   1273c:	ldr	r3, [r3, #76]	; 0x4c
   12740:	ldr	r3, [r3, #4]
   12744:	cmp	r3, #0
   12748:	bne	125e4 <__errno_location@plt+0x1354>
   1274c:	ldr	r3, [fp, #-8]
   12750:	cmp	r3, #0
   12754:	beq	12784 <__errno_location@plt+0x14f4>
   12758:	ldr	r2, [fp, #-8]
   1275c:	sub	r3, fp, #16384	; 0x4000
   12760:	sub	r3, r3, #4
   12764:	sub	r3, r3, #8
   12768:	sub	r1, fp, #16384	; 0x4000
   1276c:	sub	r1, r1, #4
   12770:	mov	r0, r1
   12774:	mov	r1, r3
   12778:	ldr	r0, [r0, #-12]
   1277c:	bl	122a8 <__errno_location@plt+0x1018>
   12780:	b	12788 <__errno_location@plt+0x14f8>
   12784:	nop			; (mov r0, r0)
   12788:	sub	sp, fp, #4
   1278c:	pop	{fp, pc}
   12790:	andeq	r2, r0, r8, ror r5
   12794:	andeq	r2, r0, ip, asr r5
   12798:	andeq	r2, r0, r4, asr #10
   1279c:	push	{fp, lr}
   127a0:	add	fp, sp, #4
   127a4:	sub	sp, sp, #8
   127a8:	str	r0, [fp, #-8]
   127ac:	ldr	r3, [fp, #-8]
   127b0:	ldr	r3, [r3, #16]
   127b4:	mov	r0, r3
   127b8:	bl	11164 <rb_rawbuf_length@plt>
   127bc:	mov	r3, r0
   127c0:	cmp	r3, #4096	; 0x1000
   127c4:	blt	12814 <__errno_location@plt+0x1584>
   127c8:	ldr	r3, [fp, #-8]
   127cc:	ldrb	r3, [r3, #72]	; 0x48
   127d0:	orr	r3, r3, #4
   127d4:	uxtb	r2, r3
   127d8:	ldr	r3, [fp, #-8]
   127dc:	strb	r2, [r3, #72]	; 0x48
   127e0:	ldr	r3, [fp, #-8]
   127e4:	ldr	r0, [r3, #32]
   127e8:	mov	r3, #0
   127ec:	mov	r2, #0
   127f0:	mov	r1, #1
   127f4:	bl	10ffc <rb_setselect@plt>
   127f8:	ldr	r3, [fp, #-8]
   127fc:	ldr	r3, [r3, #28]
   12800:	ldr	r1, [fp, #-8]
   12804:	mov	r0, r3
   12808:	bl	11f7c <__errno_location@plt+0xcec>
   1280c:	mov	r3, #1
   12810:	b	12818 <__errno_location@plt+0x1588>
   12814:	mov	r3, #0
   12818:	mov	r0, r3
   1281c:	sub	sp, fp, #4
   12820:	pop	{fp, pc}
   12824:	push	{fp, lr}
   12828:	add	fp, sp, #4
   1282c:	sub	sp, sp, #16384	; 0x4000
   12830:	sub	sp, sp, #16
   12834:	sub	r3, fp, #16384	; 0x4000
   12838:	sub	r3, r3, #4
   1283c:	str	r0, [r3, #-12]
   12840:	sub	r3, fp, #16384	; 0x4000
   12844:	sub	r3, r3, #4
   12848:	str	r1, [r3, #-16]
   1284c:	sub	r3, fp, #16384	; 0x4000
   12850:	sub	r3, r3, #4
   12854:	ldr	r3, [r3, #-16]
   12858:	str	r3, [fp, #-8]
   1285c:	mov	r3, #0
   12860:	str	r3, [fp, #-12]
   12864:	ldr	r3, [fp, #-8]
   12868:	cmp	r3, #0
   1286c:	beq	129fc <__errno_location@plt+0x176c>
   12870:	ldr	r3, [fp, #-8]
   12874:	ldrb	r3, [r3, #72]	; 0x48
   12878:	and	r3, r3, #8
   1287c:	cmp	r3, #0
   12880:	bne	12a04 <__errno_location@plt+0x1774>
   12884:	ldr	r0, [fp, #-8]
   12888:	bl	1279c <__errno_location@plt+0x150c>
   1288c:	mov	r3, r0
   12890:	cmp	r3, #0
   12894:	bne	12a0c <__errno_location@plt+0x177c>
   12898:	ldr	r3, [fp, #-8]
   1289c:	ldrb	r3, [r3, #72]	; 0x48
   128a0:	and	r3, r3, #8
   128a4:	cmp	r3, #0
   128a8:	bne	12a14 <__errno_location@plt+0x1784>
   128ac:	ldr	r3, [fp, #-8]
   128b0:	ldr	r0, [r3, #32]
   128b4:	sub	r3, fp, #16384	; 0x4000
   128b8:	sub	r3, r3, #4
   128bc:	sub	r3, r3, #8
   128c0:	mov	r2, #16384	; 0x4000
   128c4:	mov	r1, r3
   128c8:	bl	110ec <rb_read@plt>
   128cc:	str	r0, [fp, #-12]
   128d0:	ldr	r3, [fp, #-12]
   128d4:	cmp	r3, #0
   128d8:	beq	12908 <__errno_location@plt+0x1678>
   128dc:	ldr	r3, [fp, #-12]
   128e0:	cmp	r3, #0
   128e4:	bge	1291c <__errno_location@plt+0x168c>
   128e8:	bl	11290 <__errno_location@plt>
   128ec:	mov	r3, r0
   128f0:	ldr	r3, [r3]
   128f4:	mov	r0, r3
   128f8:	bl	10fcc <rb_ignore_errno@plt>
   128fc:	mov	r3, r0
   12900:	cmp	r3, #0
   12904:	bne	1291c <__errno_location@plt+0x168c>
   12908:	mov	r2, #0
   1290c:	mov	r1, #0
   12910:	ldr	r0, [fp, #-8]
   12914:	bl	11b90 <__errno_location@plt+0x900>
   12918:	b	12a28 <__errno_location@plt+0x1798>
   1291c:	ldr	r3, [fp, #-12]
   12920:	cmp	r3, #0
   12924:	bge	1295c <__errno_location@plt+0x16cc>
   12928:	ldr	r3, [fp, #-8]
   1292c:	ldr	r0, [r3, #32]
   12930:	ldr	r3, [fp, #-8]
   12934:	ldr	r2, [pc, #244]	; 12a30 <__errno_location@plt+0x17a0>
   12938:	add	r2, pc, r2
   1293c:	mov	r1, #1
   12940:	bl	10ffc <rb_setselect@plt>
   12944:	ldr	r3, [fp, #-8]
   12948:	ldr	r3, [r3, #28]
   1294c:	ldr	r1, [fp, #-8]
   12950:	mov	r0, r3
   12954:	bl	11f7c <__errno_location@plt+0xcec>
   12958:	b	12a28 <__errno_location@plt+0x1798>
   1295c:	ldr	r3, [fp, #-8]
   12960:	ldrd	r0, [r3, #56]	; 0x38
   12964:	ldr	r3, [fp, #-12]
   12968:	mov	r2, r3
   1296c:	asr	r3, r2, #31
   12970:	adds	r2, r2, r0
   12974:	adc	r3, r3, r1
   12978:	ldr	r1, [fp, #-8]
   1297c:	strd	r2, [r1, #56]	; 0x38
   12980:	ldr	r3, [fp, #-8]
   12984:	ldrb	r3, [r3, #72]	; 0x48
   12988:	and	r3, r3, #2
   1298c:	cmp	r3, #0
   12990:	beq	129b4 <__errno_location@plt+0x1724>
   12994:	ldr	r2, [fp, #-12]
   12998:	sub	r3, fp, #16384	; 0x4000
   1299c:	sub	r3, r3, #4
   129a0:	sub	r3, r3, #8
   129a4:	mov	r1, r3
   129a8:	ldr	r0, [fp, #-8]
   129ac:	bl	1239c <__errno_location@plt+0x110c>
   129b0:	b	129d0 <__errno_location@plt+0x1740>
   129b4:	ldr	r2, [fp, #-12]
   129b8:	sub	r3, fp, #16384	; 0x4000
   129bc:	sub	r3, r3, #4
   129c0:	sub	r3, r3, #8
   129c4:	mov	r1, r3
   129c8:	ldr	r0, [fp, #-8]
   129cc:	bl	12254 <__errno_location@plt+0xfc4>
   129d0:	ldr	r3, [fp, #-8]
   129d4:	ldrb	r3, [r3, #72]	; 0x48
   129d8:	and	r3, r3, #8
   129dc:	cmp	r3, #0
   129e0:	bne	12a1c <__errno_location@plt+0x178c>
   129e4:	ldr	r0, [fp, #-8]
   129e8:	bl	1279c <__errno_location@plt+0x150c>
   129ec:	mov	r3, r0
   129f0:	cmp	r3, #0
   129f4:	bne	12a24 <__errno_location@plt+0x1794>
   129f8:	b	12898 <__errno_location@plt+0x1608>
   129fc:	nop			; (mov r0, r0)
   12a00:	b	12a28 <__errno_location@plt+0x1798>
   12a04:	nop			; (mov r0, r0)
   12a08:	b	12a28 <__errno_location@plt+0x1798>
   12a0c:	nop			; (mov r0, r0)
   12a10:	b	12a28 <__errno_location@plt+0x1798>
   12a14:	nop			; (mov r0, r0)
   12a18:	b	12a28 <__errno_location@plt+0x1798>
   12a1c:	nop			; (mov r0, r0)
   12a20:	b	12a28 <__errno_location@plt+0x1798>
   12a24:	nop			; (mov r0, r0)
   12a28:	sub	sp, fp, #4
   12a2c:	pop	{fp, pc}
   12a30:			; <UNDEFINED> instruction: 0xfffffee4
   12a34:	push	{fp, lr}
   12a38:	add	fp, sp, #4
   12a3c:	sub	sp, sp, #16384	; 0x4000
   12a40:	sub	sp, sp, #16
   12a44:	sub	r3, fp, #16384	; 0x4000
   12a48:	sub	r3, r3, #4
   12a4c:	str	r0, [r3, #-12]
   12a50:	sub	r3, fp, #16384	; 0x4000
   12a54:	sub	r3, r3, #4
   12a58:	str	r1, [r3, #-16]
   12a5c:	sub	r3, fp, #16384	; 0x4000
   12a60:	sub	r3, r3, #4
   12a64:	ldr	r3, [r3, #-16]
   12a68:	str	r3, [fp, #-8]
   12a6c:	mov	r3, #0
   12a70:	str	r3, [fp, #-12]
   12a74:	ldr	r3, [fp, #-8]
   12a78:	cmp	r3, #0
   12a7c:	beq	12b34 <__errno_location@plt+0x18a4>
   12a80:	ldr	r3, [fp, #-8]
   12a84:	ldr	r0, [r3, #32]
   12a88:	sub	r3, fp, #16384	; 0x4000
   12a8c:	sub	r3, r3, #4
   12a90:	sub	r3, r3, #8
   12a94:	mov	r2, #16384	; 0x4000
   12a98:	mov	r1, r3
   12a9c:	bl	110ec <rb_read@plt>
   12aa0:	str	r0, [fp, #-12]
   12aa4:	ldr	r3, [fp, #-12]
   12aa8:	cmp	r3, #0
   12aac:	beq	12adc <__errno_location@plt+0x184c>
   12ab0:	ldr	r3, [fp, #-12]
   12ab4:	cmp	r3, #0
   12ab8:	bge	12b08 <__errno_location@plt+0x1878>
   12abc:	bl	11290 <__errno_location@plt>
   12ac0:	mov	r3, r0
   12ac4:	ldr	r3, [r3]
   12ac8:	mov	r0, r3
   12acc:	bl	10fcc <rb_ignore_errno@plt>
   12ad0:	mov	r3, r0
   12ad4:	cmp	r3, #0
   12ad8:	bne	12b08 <__errno_location@plt+0x1878>
   12adc:	ldr	r3, [fp, #-8]
   12ae0:	ldr	r3, [r3, #32]
   12ae4:	mov	r0, r3
   12ae8:	bl	11128 <rb_close@plt>
   12aec:	ldr	r3, [fp, #-8]
   12af0:	ldr	r2, [pc, #72]	; 12b40 <__errno_location@plt+0x18b0>
   12af4:	add	r2, pc, r2
   12af8:	mov	r1, r3
   12afc:	ldr	r0, [fp, #-8]
   12b00:	bl	113c4 <__errno_location@plt+0x134>
   12b04:	b	12b38 <__errno_location@plt+0x18a8>
   12b08:	ldr	r3, [fp, #-12]
   12b0c:	cmp	r3, #0
   12b10:	bge	12a80 <__errno_location@plt+0x17f0>
   12b14:	ldr	r3, [fp, #-8]
   12b18:	ldr	r0, [r3, #32]
   12b1c:	ldr	r3, [fp, #-8]
   12b20:	ldr	r2, [pc, #28]	; 12b44 <__errno_location@plt+0x18b4>
   12b24:	add	r2, pc, r2
   12b28:	mov	r1, #1
   12b2c:	bl	10ffc <rb_setselect@plt>
   12b30:	b	12b38 <__errno_location@plt+0x18a8>
   12b34:	nop			; (mov r0, r0)
   12b38:	sub	sp, fp, #4
   12b3c:	pop	{fp, pc}
   12b40:	andeq	r8, r1, r0, lsl r4
   12b44:			; <UNDEFINED> instruction: 0xffffff08
   12b48:	push	{fp, lr}
   12b4c:	add	fp, sp, #4
   12b50:	sub	sp, sp, #16384	; 0x4000
   12b54:	sub	sp, sp, #24
   12b58:	sub	r3, fp, #16384	; 0x4000
   12b5c:	sub	r3, r3, #4
   12b60:	str	r0, [r3, #-20]	; 0xffffffec
   12b64:	sub	r3, fp, #16384	; 0x4000
   12b68:	sub	r3, r3, #4
   12b6c:	str	r1, [r3, #-24]	; 0xffffffe8
   12b70:	sub	r3, fp, #16384	; 0x4000
   12b74:	sub	r3, r3, #4
   12b78:	ldr	r3, [r3, #-24]	; 0xffffffe8
   12b7c:	str	r3, [fp, #-12]
   12b80:	ldr	r3, [fp, #-12]
   12b84:	cmp	r3, #0
   12b88:	beq	12e14 <__errno_location@plt+0x1b84>
   12b8c:	ldr	r3, [fp, #-12]
   12b90:	ldrb	r3, [r3, #72]	; 0x48
   12b94:	and	r3, r3, #8
   12b98:	cmp	r3, #0
   12b9c:	bne	12e1c <__errno_location@plt+0x1b8c>
   12ba0:	ldr	r3, [fp, #-12]
   12ba4:	ldrb	r3, [r3, #72]	; 0x48
   12ba8:	and	r3, r3, #32
   12bac:	cmp	r3, #0
   12bb0:	beq	12bf4 <__errno_location@plt+0x1964>
   12bb4:	ldr	r3, [fp, #-12]
   12bb8:	ldrb	r3, [r3, #72]	; 0x48
   12bbc:	bic	r3, r3, #32
   12bc0:	uxtb	r2, r3
   12bc4:	ldr	r3, [fp, #-12]
   12bc8:	strb	r2, [r3, #72]	; 0x48
   12bcc:	ldr	r3, [fp, #-12]
   12bd0:	ldr	r3, [r3, #28]
   12bd4:	ldr	r1, [fp, #-12]
   12bd8:	mov	r0, r3
   12bdc:	bl	11f7c <__errno_location@plt+0xcec>
   12be0:	ldr	r3, [fp, #-12]
   12be4:	ldrb	r3, [r3, #72]	; 0x48
   12be8:	and	r3, r3, #8
   12bec:	cmp	r3, #0
   12bf0:	bne	12e24 <__errno_location@plt+0x1b94>
   12bf4:	ldr	r3, [fp, #-12]
   12bf8:	ldrb	r3, [r3, #72]	; 0x48
   12bfc:	and	r3, r3, #8
   12c00:	cmp	r3, #0
   12c04:	bne	12e2c <__errno_location@plt+0x1b9c>
   12c08:	ldr	r3, [fp, #-12]
   12c0c:	ldr	r0, [r3, #28]
   12c10:	sub	r3, fp, #16384	; 0x4000
   12c14:	sub	r3, r3, #4
   12c18:	sub	r3, r3, #12
   12c1c:	mov	r2, #16384	; 0x4000
   12c20:	mov	r1, r3
   12c24:	bl	110ec <rb_read@plt>
   12c28:	str	r0, [fp, #-16]
   12c2c:	ldr	r3, [fp, #-16]
   12c30:	cmp	r3, #0
   12c34:	beq	12c64 <__errno_location@plt+0x19d4>
   12c38:	ldr	r3, [fp, #-16]
   12c3c:	cmp	r3, #0
   12c40:	bge	12d00 <__errno_location@plt+0x1a70>
   12c44:	bl	11290 <__errno_location@plt>
   12c48:	mov	r3, r0
   12c4c:	ldr	r3, [r3]
   12c50:	mov	r0, r3
   12c54:	bl	10fcc <rb_ignore_errno@plt>
   12c58:	mov	r3, r0
   12c5c:	cmp	r3, #0
   12c60:	bne	12d00 <__errno_location@plt+0x1a70>
   12c64:	ldr	r3, [fp, #-16]
   12c68:	cmp	r3, #0
   12c6c:	bne	12c94 <__errno_location@plt+0x1a04>
   12c70:	ldr	r3, [pc, #448]	; 12e38 <__errno_location@plt+0x1ba8>
   12c74:	add	r3, pc, r3
   12c78:	ldr	r3, [r3]
   12c7c:	ldr	r2, [pc, #440]	; 12e3c <__errno_location@plt+0x1bac>
   12c80:	add	r2, pc, r2
   12c84:	mov	r1, #1
   12c88:	ldr	r0, [fp, #-12]
   12c8c:	bl	11b90 <__errno_location@plt+0x900>
   12c90:	b	12e30 <__errno_location@plt+0x1ba0>
   12c94:	ldr	r3, [fp, #-12]
   12c98:	ldrb	r3, [r3, #72]	; 0x48
   12c9c:	and	r3, r3, #1
   12ca0:	cmp	r3, #0
   12ca4:	beq	12ccc <__errno_location@plt+0x1a3c>
   12ca8:	ldr	r3, [fp, #-16]
   12cac:	cmn	r3, #2
   12cb0:	bne	12ccc <__errno_location@plt+0x1a3c>
   12cb4:	ldr	r3, [fp, #-12]
   12cb8:	ldr	r3, [r3, #28]
   12cbc:	mov	r0, r3
   12cc0:	bl	1117c <rb_get_ssl_strerror@plt>
   12cc4:	str	r0, [fp, #-8]
   12cc8:	b	12ce4 <__errno_location@plt+0x1a54>
   12ccc:	bl	11290 <__errno_location@plt>
   12cd0:	mov	r3, r0
   12cd4:	ldr	r3, [r3]
   12cd8:	mov	r0, r3
   12cdc:	bl	10f90 <strerror@plt>
   12ce0:	str	r0, [fp, #-8]
   12ce4:	ldr	r3, [fp, #-8]
   12ce8:	ldr	r2, [pc, #336]	; 12e40 <__errno_location@plt+0x1bb0>
   12cec:	add	r2, pc, r2
   12cf0:	mov	r1, #1
   12cf4:	ldr	r0, [fp, #-12]
   12cf8:	bl	11b90 <__errno_location@plt+0x900>
   12cfc:	b	12e30 <__errno_location@plt+0x1ba0>
   12d00:	ldr	r3, [fp, #-16]
   12d04:	cmp	r3, #0
   12d08:	bge	12d9c <__errno_location@plt+0x1b0c>
   12d0c:	ldr	r3, [fp, #-16]
   12d10:	cmn	r3, #4
   12d14:	beq	12d38 <__errno_location@plt+0x1aa8>
   12d18:	ldr	r3, [fp, #-12]
   12d1c:	ldr	r0, [r3, #28]
   12d20:	ldr	r3, [fp, #-12]
   12d24:	ldr	r2, [pc, #280]	; 12e44 <__errno_location@plt+0x1bb4>
   12d28:	add	r2, pc, r2
   12d2c:	mov	r1, #1
   12d30:	bl	10ffc <rb_setselect@plt>
   12d34:	b	12d84 <__errno_location@plt+0x1af4>
   12d38:	ldr	r3, [fp, #-12]
   12d3c:	ldr	r0, [r3, #28]
   12d40:	mov	r3, #0
   12d44:	mov	r2, #0
   12d48:	mov	r1, #1
   12d4c:	bl	10ffc <rb_setselect@plt>
   12d50:	ldr	r3, [fp, #-12]
   12d54:	ldr	r0, [r3, #28]
   12d58:	ldr	r3, [fp, #-12]
   12d5c:	ldr	r2, [pc, #228]	; 12e48 <__errno_location@plt+0x1bb8>
   12d60:	add	r2, pc, r2
   12d64:	mov	r1, #2
   12d68:	bl	10ffc <rb_setselect@plt>
   12d6c:	ldr	r3, [fp, #-12]
   12d70:	ldrb	r3, [r3, #72]	; 0x48
   12d74:	orr	r3, r3, #32
   12d78:	uxtb	r2, r3
   12d7c:	ldr	r3, [fp, #-12]
   12d80:	strb	r2, [r3, #72]	; 0x48
   12d84:	ldr	r3, [fp, #-12]
   12d88:	ldr	r3, [r3, #32]
   12d8c:	ldr	r1, [fp, #-12]
   12d90:	mov	r0, r3
   12d94:	bl	12e4c <__errno_location@plt+0x1bbc>
   12d98:	b	12e30 <__errno_location@plt+0x1ba0>
   12d9c:	ldr	r3, [fp, #-12]
   12da0:	ldrd	r0, [r3, #48]	; 0x30
   12da4:	ldr	r3, [fp, #-16]
   12da8:	mov	r2, r3
   12dac:	asr	r3, r2, #31
   12db0:	adds	r2, r2, r0
   12db4:	adc	r3, r3, r1
   12db8:	ldr	r1, [fp, #-12]
   12dbc:	strd	r2, [r1, #48]	; 0x30
   12dc0:	ldr	r3, [fp, #-12]
   12dc4:	ldrb	r3, [r3, #72]	; 0x48
   12dc8:	and	r3, r3, #2
   12dcc:	cmp	r3, #0
   12dd0:	beq	12df4 <__errno_location@plt+0x1b64>
   12dd4:	ldr	r2, [fp, #-16]
   12dd8:	sub	r3, fp, #16384	; 0x4000
   12ddc:	sub	r3, r3, #4
   12de0:	sub	r3, r3, #12
   12de4:	mov	r1, r3
   12de8:	ldr	r0, [fp, #-12]
   12dec:	bl	1252c <__errno_location@plt+0x129c>
   12df0:	b	12bf4 <__errno_location@plt+0x1964>
   12df4:	ldr	r2, [fp, #-16]
   12df8:	sub	r3, fp, #16384	; 0x4000
   12dfc:	sub	r3, r3, #4
   12e00:	sub	r3, r3, #12
   12e04:	mov	r1, r3
   12e08:	ldr	r0, [fp, #-12]
   12e0c:	bl	122a8 <__errno_location@plt+0x1018>
   12e10:	b	12bf4 <__errno_location@plt+0x1964>
   12e14:	nop			; (mov r0, r0)
   12e18:	b	12e30 <__errno_location@plt+0x1ba0>
   12e1c:	nop			; (mov r0, r0)
   12e20:	b	12e30 <__errno_location@plt+0x1ba0>
   12e24:	nop			; (mov r0, r0)
   12e28:	b	12e30 <__errno_location@plt+0x1ba0>
   12e2c:	nop			; (mov r0, r0)
   12e30:	sub	sp, fp, #4
   12e34:	pop	{fp, pc}
   12e38:			; <UNDEFINED> instruction: 0x000124b4
   12e3c:	andeq	r1, r0, r4, lsr #29
   12e40:	andeq	r1, r0, r8, ror #29
   12e44:			; <UNDEFINED> instruction: 0xfffffe18
   12e48:			; <UNDEFINED> instruction: 0xfffffde0
   12e4c:	push	{fp, lr}
   12e50:	add	fp, sp, #4
   12e54:	sub	sp, sp, #16
   12e58:	str	r0, [fp, #-16]
   12e5c:	str	r1, [fp, #-20]	; 0xffffffec
   12e60:	ldr	r3, [fp, #-20]	; 0xffffffec
   12e64:	str	r3, [fp, #-8]
   12e68:	ldr	r3, [fp, #-8]
   12e6c:	ldrb	r3, [r3, #72]	; 0x48
   12e70:	and	r3, r3, #8
   12e74:	cmp	r3, #0
   12e78:	bne	12f6c <__errno_location@plt+0x1cdc>
   12e7c:	b	12ea4 <__errno_location@plt+0x1c14>
   12e80:	ldr	r3, [fp, #-8]
   12e84:	ldrd	r0, [r3, #64]	; 0x40
   12e88:	ldr	r3, [fp, #-12]
   12e8c:	mov	r2, r3
   12e90:	asr	r3, r2, #31
   12e94:	adds	r2, r2, r0
   12e98:	adc	r3, r3, r1
   12e9c:	ldr	r1, [fp, #-8]
   12ea0:	strd	r2, [r1, #64]	; 0x40
   12ea4:	ldr	r3, [fp, #-8]
   12ea8:	ldr	r3, [r3, #20]
   12eac:	ldr	r1, [fp, #-16]
   12eb0:	mov	r0, r3
   12eb4:	bl	1126c <rb_rawbuf_flush@plt>
   12eb8:	str	r0, [fp, #-12]
   12ebc:	ldr	r3, [fp, #-12]
   12ec0:	cmp	r3, #0
   12ec4:	bgt	12e80 <__errno_location@plt+0x1bf0>
   12ec8:	ldr	r3, [fp, #-12]
   12ecc:	cmp	r3, #0
   12ed0:	beq	12f00 <__errno_location@plt+0x1c70>
   12ed4:	ldr	r3, [fp, #-12]
   12ed8:	cmp	r3, #0
   12edc:	bge	12f14 <__errno_location@plt+0x1c84>
   12ee0:	bl	11290 <__errno_location@plt>
   12ee4:	mov	r3, r0
   12ee8:	ldr	r3, [r3]
   12eec:	mov	r0, r3
   12ef0:	bl	10fcc <rb_ignore_errno@plt>
   12ef4:	mov	r3, r0
   12ef8:	cmp	r3, #0
   12efc:	bne	12f14 <__errno_location@plt+0x1c84>
   12f00:	mov	r2, #0
   12f04:	mov	r1, #0
   12f08:	ldr	r0, [fp, #-20]	; 0xffffffec
   12f0c:	bl	11b90 <__errno_location@plt+0x900>
   12f10:	b	12f70 <__errno_location@plt+0x1ce0>
   12f14:	ldr	r3, [fp, #-8]
   12f18:	ldr	r3, [r3, #20]
   12f1c:	mov	r0, r3
   12f20:	bl	11164 <rb_rawbuf_length@plt>
   12f24:	mov	r3, r0
   12f28:	cmp	r3, #0
   12f2c:	ble	12f50 <__errno_location@plt+0x1cc0>
   12f30:	ldr	r3, [fp, #-8]
   12f34:	ldr	r0, [r3, #32]
   12f38:	ldr	r3, [fp, #-8]
   12f3c:	ldr	r2, [pc, #52]	; 12f78 <__errno_location@plt+0x1ce8>
   12f40:	add	r2, pc, r2
   12f44:	mov	r1, #2
   12f48:	bl	10ffc <rb_setselect@plt>
   12f4c:	b	12f70 <__errno_location@plt+0x1ce0>
   12f50:	ldr	r3, [fp, #-8]
   12f54:	ldr	r0, [r3, #32]
   12f58:	mov	r3, #0
   12f5c:	mov	r2, #0
   12f60:	mov	r1, #2
   12f64:	bl	10ffc <rb_setselect@plt>
   12f68:	b	12f70 <__errno_location@plt+0x1ce0>
   12f6c:	nop			; (mov r0, r0)
   12f70:	sub	sp, fp, #4
   12f74:	pop	{fp, pc}
   12f78:			; <UNDEFINED> instruction: 0xffffff04
   12f7c:	push	{fp, lr}
   12f80:	add	fp, sp, #4
   12f84:	sub	sp, sp, #8
   12f88:	sub	r3, fp, #12
   12f8c:	mov	r1, r3
   12f90:	mov	r0, #7
   12f94:	bl	11254 <getrlimit@plt>
   12f98:	mov	r3, r0
   12f9c:	cmp	r3, #0
   12fa0:	bne	12fac <__errno_location@plt+0x1d1c>
   12fa4:	ldr	r3, [fp, #-12]
   12fa8:	b	12fb0 <__errno_location@plt+0x1d20>
   12fac:	ldr	r3, [pc, #8]	; 12fbc <__errno_location@plt+0x1d2c>
   12fb0:	mov	r0, r3
   12fb4:	sub	sp, fp, #4
   12fb8:	pop	{fp, pc}
   12fbc:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   12fc0:	push	{fp, lr}
   12fc4:	add	fp, sp, #4
   12fc8:	sub	sp, sp, #784	; 0x310
   12fcc:	str	r0, [fp, #-784]	; 0xfffffcf0
   12fd0:	ldr	r3, [fp, #-784]	; 0xfffffcf0
   12fd4:	ldrb	r3, [r3, #72]	; 0x48
   12fd8:	and	r3, r3, #1
   12fdc:	cmp	r3, #0
   12fe0:	beq	13088 <__errno_location@plt+0x1df8>
   12fe4:	ldr	r3, [fp, #-784]	; 0xfffffcf0
   12fe8:	ldr	r3, [r3, #28]
   12fec:	mov	r0, r3
   12ff0:	bl	11110 <rb_ssl_get_cipher@plt>
   12ff4:	str	r0, [fp, #-8]
   12ff8:	ldr	r3, [fp, #-8]
   12ffc:	cmp	r3, #0
   13000:	beq	13090 <__errno_location@plt+0x1e00>
   13004:	sub	r3, fp, #780	; 0x30c
   13008:	mov	r2, #256	; 0x100
   1300c:	ldr	r1, [fp, #-8]
   13010:	mov	r0, r3
   13014:	bl	11098 <rb_strlcpy@plt>
   13018:	mov	r3, #67	; 0x43
   1301c:	strb	r3, [fp, #-524]	; 0xfffffdf4
   13020:	ldr	r3, [fp, #-784]	; 0xfffffcf0
   13024:	ldr	r2, [r3, #24]
   13028:	sub	r3, fp, #524	; 0x20c
   1302c:	add	r3, r3, #1
   13030:	mov	r1, r2
   13034:	mov	r0, r3
   13038:	bl	11860 <__errno_location@plt+0x5d0>
   1303c:	sub	r2, fp, #780	; 0x30c
   13040:	sub	r3, fp, #524	; 0x20c
   13044:	add	r3, r3, #5
   13048:	mov	r1, r2
   1304c:	mov	r0, r3
   13050:	bl	11140 <strcpy@plt>
   13054:	sub	r3, fp, #780	; 0x30c
   13058:	mov	r0, r3
   1305c:	bl	11104 <strlen@plt>
   13060:	mov	r3, r0
   13064:	add	r3, r3, #6
   13068:	str	r3, [fp, #-12]
   1306c:	ldr	r3, [fp, #-784]	; 0xfffffcf0
   13070:	ldr	r3, [r3, #12]
   13074:	sub	r1, fp, #524	; 0x20c
   13078:	ldr	r2, [fp, #-12]
   1307c:	mov	r0, r3
   13080:	bl	122fc <__errno_location@plt+0x106c>
   13084:	b	13094 <__errno_location@plt+0x1e04>
   13088:	nop			; (mov r0, r0)
   1308c:	b	13094 <__errno_location@plt+0x1e04>
   13090:	nop			; (mov r0, r0)
   13094:	sub	sp, fp, #4
   13098:	pop	{fp, pc}
   1309c:	push	{fp, lr}
   130a0:	add	fp, sp, #4
   130a4:	sub	sp, sp, #96	; 0x60
   130a8:	str	r0, [fp, #-96]	; 0xffffffa0
   130ac:	ldr	r3, [fp, #-96]	; 0xffffffa0
   130b0:	ldr	r0, [r3, #28]
   130b4:	ldr	r3, [pc, #180]	; 13170 <__errno_location@plt+0x1ee0>
   130b8:	add	r3, pc, r3
   130bc:	ldr	r2, [r3]
   130c0:	sub	r3, fp, #88	; 0x58
   130c4:	add	r3, r3, #13
   130c8:	mov	r1, r3
   130cc:	bl	110a4 <rb_get_ssl_certfp@plt>
   130d0:	str	r0, [fp, #-8]
   130d4:	ldr	r3, [fp, #-8]
   130d8:	cmp	r3, #0
   130dc:	beq	13164 <__errno_location@plt+0x1ed4>
   130e0:	mov	r3, #70	; 0x46
   130e4:	strb	r3, [fp, #-88]	; 0xffffffa8
   130e8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   130ec:	ldr	r2, [r3, #24]
   130f0:	sub	r3, fp, #88	; 0x58
   130f4:	add	r3, r3, #1
   130f8:	mov	r1, r2
   130fc:	mov	r0, r3
   13100:	bl	11860 <__errno_location@plt+0x5d0>
   13104:	ldr	r3, [pc, #104]	; 13174 <__errno_location@plt+0x1ee4>
   13108:	add	r3, pc, r3
   1310c:	ldr	r3, [r3]
   13110:	mov	r2, r3
   13114:	sub	r3, fp, #88	; 0x58
   13118:	add	r3, r3, #5
   1311c:	mov	r1, r2
   13120:	mov	r0, r3
   13124:	bl	11860 <__errno_location@plt+0x5d0>
   13128:	ldr	r2, [fp, #-8]
   1312c:	sub	r3, fp, #88	; 0x58
   13130:	add	r3, r3, #9
   13134:	mov	r1, r2
   13138:	mov	r0, r3
   1313c:	bl	11860 <__errno_location@plt+0x5d0>
   13140:	ldr	r3, [fp, #-96]	; 0xffffffa0
   13144:	ldr	r0, [r3, #12]
   13148:	ldr	r3, [fp, #-8]
   1314c:	add	r3, r3, #13
   13150:	mov	r2, r3
   13154:	sub	r3, fp, #88	; 0x58
   13158:	mov	r1, r3
   1315c:	bl	122fc <__errno_location@plt+0x106c>
   13160:	b	13168 <__errno_location@plt+0x1ed8>
   13164:	nop			; (mov r0, r0)
   13168:	sub	sp, fp, #4
   1316c:	pop	{fp, pc}
   13170:	andeq	r7, r1, ip, asr lr
   13174:	andeq	r7, r1, ip, lsl #28
   13178:	push	{fp, lr}
   1317c:	add	fp, sp, #4
   13180:	sub	sp, sp, #16
   13184:	str	r0, [fp, #-16]
   13188:	mov	r3, #79	; 0x4f
   1318c:	strb	r3, [fp, #-12]
   13190:	ldr	r3, [fp, #-16]
   13194:	ldr	r2, [r3, #24]
   13198:	sub	r3, fp, #12
   1319c:	add	r3, r3, #1
   131a0:	mov	r1, r2
   131a4:	mov	r0, r3
   131a8:	bl	11860 <__errno_location@plt+0x5d0>
   131ac:	ldr	r3, [fp, #-16]
   131b0:	ldr	r3, [r3, #12]
   131b4:	sub	r1, fp, #12
   131b8:	mov	r2, #5
   131bc:	mov	r0, r3
   131c0:	bl	122fc <__errno_location@plt+0x106c>
   131c4:	nop			; (mov r0, r0)
   131c8:	sub	sp, fp, #4
   131cc:	pop	{fp, pc}
   131d0:	push	{fp, lr}
   131d4:	add	fp, sp, #4
   131d8:	sub	sp, sp, #24
   131dc:	str	r0, [fp, #-16]
   131e0:	str	r1, [fp, #-20]	; 0xffffffec
   131e4:	str	r2, [fp, #-24]	; 0xffffffe8
   131e8:	str	r3, [fp, #-28]	; 0xffffffe4
   131ec:	ldr	r3, [fp, #4]
   131f0:	str	r3, [fp, #-8]
   131f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   131f8:	cmp	r3, #0
   131fc:	bne	13244 <__errno_location@plt+0x1fb4>
   13200:	ldr	r0, [fp, #-8]
   13204:	bl	12fc0 <__errno_location@plt+0x1d30>
   13208:	ldr	r0, [fp, #-8]
   1320c:	bl	1309c <__errno_location@plt+0x1e0c>
   13210:	ldr	r0, [fp, #-8]
   13214:	bl	13178 <__errno_location@plt+0x1ee8>
   13218:	ldr	r3, [fp, #-8]
   1321c:	ldr	r3, [r3, #28]
   13220:	ldr	r1, [fp, #-8]
   13224:	mov	r0, r3
   13228:	bl	12b48 <__errno_location@plt+0x18b8>
   1322c:	ldr	r3, [fp, #-8]
   13230:	ldr	r3, [r3, #32]
   13234:	ldr	r1, [fp, #-8]
   13238:	mov	r0, r3
   1323c:	bl	12824 <__errno_location@plt+0x1594>
   13240:	b	13258 <__errno_location@plt+0x1fc8>
   13244:	mov	r2, #0
   13248:	mov	r1, #0
   1324c:	ldr	r0, [fp, #-8]
   13250:	bl	11b90 <__errno_location@plt+0x900>
   13254:	nop			; (mov r0, r0)
   13258:	sub	sp, fp, #4
   1325c:	pop	{fp, pc}
   13260:	push	{fp, lr}
   13264:	add	fp, sp, #4
   13268:	sub	sp, sp, #24
   1326c:	str	r0, [fp, #-16]
   13270:	str	r1, [fp, #-20]	; 0xffffffec
   13274:	str	r2, [fp, #-24]	; 0xffffffe8
   13278:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1327c:	str	r3, [fp, #-8]
   13280:	ldr	r3, [fp, #-20]	; 0xffffffec
   13284:	cmp	r3, #0
   13288:	bne	132d0 <__errno_location@plt+0x2040>
   1328c:	ldr	r0, [fp, #-8]
   13290:	bl	12fc0 <__errno_location@plt+0x1d30>
   13294:	ldr	r0, [fp, #-8]
   13298:	bl	1309c <__errno_location@plt+0x1e0c>
   1329c:	ldr	r0, [fp, #-8]
   132a0:	bl	13178 <__errno_location@plt+0x1ee8>
   132a4:	ldr	r3, [fp, #-8]
   132a8:	ldr	r3, [r3, #28]
   132ac:	ldr	r1, [fp, #-8]
   132b0:	mov	r0, r3
   132b4:	bl	12b48 <__errno_location@plt+0x18b8>
   132b8:	ldr	r3, [fp, #-8]
   132bc:	ldr	r3, [r3, #32]
   132c0:	ldr	r1, [fp, #-8]
   132c4:	mov	r0, r3
   132c8:	bl	12824 <__errno_location@plt+0x1594>
   132cc:	b	13348 <__errno_location@plt+0x20b8>
   132d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   132d4:	cmp	r3, #3
   132d8:	bne	132f8 <__errno_location@plt+0x2068>
   132dc:	ldr	r3, [pc, #112]	; 13354 <__errno_location@plt+0x20c4>
   132e0:	add	r3, pc, r3
   132e4:	mov	r2, r3
   132e8:	mov	r1, #1
   132ec:	ldr	r0, [fp, #-8]
   132f0:	bl	11b90 <__errno_location@plt+0x900>
   132f4:	b	13348 <__errno_location@plt+0x20b8>
   132f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   132fc:	cmp	r3, #6
   13300:	bne	13330 <__errno_location@plt+0x20a0>
   13304:	ldr	r3, [fp, #-8]
   13308:	ldr	r3, [r3, #28]
   1330c:	mov	r0, r3
   13310:	bl	1117c <rb_get_ssl_strerror@plt>
   13314:	mov	r3, r0
   13318:	ldr	r2, [pc, #56]	; 13358 <__errno_location@plt+0x20c8>
   1331c:	add	r2, pc, r2
   13320:	mov	r1, #1
   13324:	ldr	r0, [fp, #-8]
   13328:	bl	11b90 <__errno_location@plt+0x900>
   1332c:	b	13348 <__errno_location@plt+0x20b8>
   13330:	ldr	r3, [pc, #36]	; 1335c <__errno_location@plt+0x20cc>
   13334:	add	r3, pc, r3
   13338:	mov	r2, r3
   1333c:	mov	r1, #1
   13340:	ldr	r0, [fp, #-8]
   13344:	bl	11b90 <__errno_location@plt+0x900>
   13348:	nop			; (mov r0, r0)
   1334c:	sub	sp, fp, #4
   13350:	pop	{fp, pc}
   13354:	andeq	r1, r0, r4, lsl #18
   13358:	andeq	r1, r0, r8, lsl #16
   1335c:	andeq	r1, r0, r8, asr #17
   13360:	push	{fp, lr}
   13364:	add	fp, sp, #4
   13368:	sub	sp, sp, #16
   1336c:	str	r0, [fp, #-16]
   13370:	str	r1, [fp, #-20]	; 0xffffffec
   13374:	mov	r3, #0
   13378:	str	r3, [fp, #-8]
   1337c:	b	133ac <__errno_location@plt+0x211c>
   13380:	ldr	r2, [fp, #-20]	; 0xffffffec
   13384:	ldr	r3, [fp, #-8]
   13388:	add	r3, r3, #4
   1338c:	lsl	r3, r3, #2
   13390:	add	r3, r2, r3
   13394:	ldr	r3, [r3, #4]
   13398:	mov	r0, r3
   1339c:	bl	11128 <rb_close@plt>
   133a0:	ldr	r3, [fp, #-8]
   133a4:	add	r3, r3, #1
   133a8:	str	r3, [fp, #-8]
   133ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   133b0:	ldr	r2, [r3, #36]	; 0x24
   133b4:	ldr	r3, [fp, #-8]
   133b8:	cmp	r2, r3
   133bc:	bgt	13380 <__errno_location@plt+0x20f0>
   133c0:	nop			; (mov r0, r0)
   133c4:	sub	sp, fp, #4
   133c8:	pop	{fp, pc}
   133cc:	push	{fp, lr}
   133d0:	add	fp, sp, #4
   133d4:	sub	sp, sp, #16
   133d8:	str	r0, [fp, #-16]
   133dc:	str	r1, [fp, #-20]	; 0xffffffec
   133e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   133e4:	ldr	r1, [r3, #20]
   133e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   133ec:	ldr	r3, [r3, #24]
   133f0:	mov	r2, r3
   133f4:	ldr	r0, [fp, #-16]
   133f8:	bl	11da0 <__errno_location@plt+0xb10>
   133fc:	str	r0, [fp, #-8]
   13400:	ldr	r3, [fp, #-20]	; 0xffffffec
   13404:	ldr	r3, [r3, #12]
   13408:	add	r3, r3, #1
   1340c:	mov	r0, r3
   13410:	bl	11830 <__errno_location@plt+0x5a0>
   13414:	str	r0, [fp, #-12]
   13418:	ldr	r1, [fp, #-12]
   1341c:	ldr	r0, [fp, #-8]
   13420:	bl	119b8 <__errno_location@plt+0x728>
   13424:	ldr	r3, [fp, #-8]
   13428:	ldrb	r3, [r3, #72]	; 0x48
   1342c:	orr	r3, r3, #1
   13430:	uxtb	r2, r3
   13434:	ldr	r3, [fp, #-8]
   13438:	strb	r2, [r3, #72]	; 0x48
   1343c:	ldr	r3, [fp, #-8]
   13440:	ldr	r3, [r3, #28]
   13444:	mov	r0, r3
   13448:	bl	10f9c <rb_get_type@plt>
   1344c:	mov	r3, r0
   13450:	and	r3, r3, #64	; 0x40
   13454:	cmp	r3, #0
   13458:	beq	13470 <__errno_location@plt+0x21e0>
   1345c:	ldr	r3, [fp, #-8]
   13460:	ldr	r3, [r3, #28]
   13464:	mov	r1, #4
   13468:	mov	r0, r3
   1346c:	bl	110f8 <rb_set_type@plt>
   13470:	ldr	r3, [fp, #-8]
   13474:	ldr	r3, [r3, #32]
   13478:	mov	r0, r3
   1347c:	bl	10f9c <rb_get_type@plt>
   13480:	mov	r3, r0
   13484:	cmp	r3, #64	; 0x40
   13488:	bne	134a0 <__errno_location@plt+0x2210>
   1348c:	ldr	r3, [fp, #-8]
   13490:	ldr	r3, [r3, #32]
   13494:	mov	r1, #4
   13498:	mov	r0, r3
   1349c:	bl	110f8 <rb_set_type@plt>
   134a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   134a4:	ldr	r0, [r3, #20]
   134a8:	mov	r3, #10
   134ac:	ldr	r2, [fp, #-8]
   134b0:	ldr	r1, [pc, #16]	; 134c8 <__errno_location@plt+0x2238>
   134b4:	add	r1, pc, r1
   134b8:	bl	11218 <rb_ssl_start_accepted@plt>
   134bc:	nop			; (mov r0, r0)
   134c0:	sub	sp, fp, #4
   134c4:	pop	{fp, pc}
   134c8:			; <UNDEFINED> instruction: 0xfffffd14
   134cc:	push	{fp, lr}
   134d0:	add	fp, sp, #4
   134d4:	sub	sp, sp, #8
   134d8:	str	r0, [fp, #-8]
   134dc:	str	r1, [fp, #-12]
   134e0:	ldr	r3, [fp, #-12]
   134e4:	ldr	r3, [r3, #12]
   134e8:	add	r3, r3, #1
   134ec:	mov	r0, r3
   134f0:	bl	11830 <__errno_location@plt+0x5a0>
   134f4:	mov	r3, r0
   134f8:	mov	r2, r3
   134fc:	ldr	r3, [pc, #16]	; 13514 <__errno_location@plt+0x2284>
   13500:	add	r3, pc, r3
   13504:	str	r2, [r3]
   13508:	nop			; (mov r0, r0)
   1350c:	sub	sp, fp, #4
   13510:	pop	{fp, pc}
   13514:	andeq	r7, r1, r4, lsl sl
   13518:	push	{fp, lr}
   1351c:	add	fp, sp, #4
   13520:	sub	sp, sp, #16
   13524:	str	r0, [fp, #-16]
   13528:	str	r1, [fp, #-20]	; 0xffffffec
   1352c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13530:	ldr	r1, [r3, #20]
   13534:	ldr	r3, [fp, #-20]	; 0xffffffec
   13538:	ldr	r3, [r3, #24]
   1353c:	mov	r2, r3
   13540:	ldr	r0, [fp, #-16]
   13544:	bl	11da0 <__errno_location@plt+0xb10>
   13548:	str	r0, [fp, #-8]
   1354c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13550:	ldr	r3, [r3, #12]
   13554:	add	r3, r3, #1
   13558:	mov	r0, r3
   1355c:	bl	11830 <__errno_location@plt+0x5a0>
   13560:	str	r0, [fp, #-12]
   13564:	ldr	r1, [fp, #-12]
   13568:	ldr	r0, [fp, #-8]
   1356c:	bl	119b8 <__errno_location@plt+0x728>
   13570:	ldr	r3, [fp, #-8]
   13574:	ldrb	r3, [r3, #72]	; 0x48
   13578:	orr	r3, r3, #1
   1357c:	uxtb	r2, r3
   13580:	ldr	r3, [fp, #-8]
   13584:	strb	r2, [r3, #72]	; 0x48
   13588:	ldr	r3, [fp, #-8]
   1358c:	ldr	r3, [r3, #28]
   13590:	mov	r0, r3
   13594:	bl	10f9c <rb_get_type@plt>
   13598:	mov	r3, r0
   1359c:	cmp	r3, #64	; 0x40
   135a0:	bne	135b8 <__errno_location@plt+0x2328>
   135a4:	ldr	r3, [fp, #-8]
   135a8:	ldr	r3, [r3, #28]
   135ac:	mov	r1, #4
   135b0:	mov	r0, r3
   135b4:	bl	110f8 <rb_set_type@plt>
   135b8:	ldr	r3, [fp, #-8]
   135bc:	ldr	r3, [r3, #32]
   135c0:	mov	r0, r3
   135c4:	bl	10f9c <rb_get_type@plt>
   135c8:	mov	r3, r0
   135cc:	cmp	r3, #64	; 0x40
   135d0:	bne	135e8 <__errno_location@plt+0x2358>
   135d4:	ldr	r3, [fp, #-8]
   135d8:	ldr	r3, [r3, #32]
   135dc:	mov	r1, #4
   135e0:	mov	r0, r3
   135e4:	bl	110f8 <rb_set_type@plt>
   135e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   135ec:	ldr	r0, [r3, #20]
   135f0:	mov	r3, #10
   135f4:	ldr	r2, [fp, #-8]
   135f8:	ldr	r1, [pc, #16]	; 13610 <__errno_location@plt+0x2380>
   135fc:	add	r1, pc, r1
   13600:	bl	111d0 <rb_ssl_start_connected@plt>
   13604:	nop			; (mov r0, r0)
   13608:	sub	sp, fp, #4
   1360c:	pop	{fp, pc}
   13610:			; <UNDEFINED> instruction: 0xfffffc5c
   13614:	push	{r4, r5, r6, r7, fp, lr}
   13618:	add	fp, sp, #20
   1361c:	sub	sp, sp, #568	; 0x238
   13620:	str	r0, [fp, #-552]	; 0xfffffdd8
   13624:	str	r1, [fp, #-556]	; 0xfffffdd4
   13628:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   1362c:	ldr	r3, [r3, #12]
   13630:	add	r3, r3, #1
   13634:	mov	r0, r3
   13638:	bl	11830 <__errno_location@plt+0x5a0>
   1363c:	str	r0, [fp, #-24]	; 0xffffffe8
   13640:	ldr	r3, [fp, #-556]	; 0xfffffdd4
   13644:	ldr	r3, [r3, #12]
   13648:	add	r3, r3, #5
   1364c:	str	r3, [fp, #-28]	; 0xffffffe4
   13650:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13654:	bl	118f4 <__errno_location@plt+0x664>
   13658:	str	r0, [fp, #-32]	; 0xffffffe0
   1365c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13660:	cmp	r3, #0
   13664:	beq	1371c <__errno_location@plt+0x248c>
   13668:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1366c:	ldrd	r2, [r3, #64]	; 0x40
   13670:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13674:	ldrd	r0, [r1, #48]	; 0x30
   13678:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1367c:	ldrd	r4, [ip, #56]	; 0x38
   13680:	ldr	ip, [fp, #-32]	; 0xffffffe0
   13684:	ldrd	r6, [ip, #40]	; 0x28
   13688:	sub	ip, fp, #544	; 0x220
   1368c:	strd	r6, [sp, #24]
   13690:	strd	r4, [sp, #16]
   13694:	strd	r0, [sp, #8]
   13698:	strd	r2, [sp]
   1369c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   136a0:	ldr	r2, [pc, #128]	; 13728 <__errno_location@plt+0x2498>
   136a4:	add	r2, pc, r2
   136a8:	mov	r1, #512	; 0x200
   136ac:	mov	r0, ip
   136b0:	bl	1123c <snprintf@plt>
   136b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   136b8:	mov	r2, #0
   136bc:	mov	r3, #0
   136c0:	strd	r2, [r1, #64]	; 0x40
   136c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   136c8:	mov	r2, #0
   136cc:	mov	r3, #0
   136d0:	strd	r2, [r1, #56]	; 0x38
   136d4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   136d8:	mov	r2, #0
   136dc:	mov	r3, #0
   136e0:	strd	r2, [r1, #48]	; 0x30
   136e4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   136e8:	mov	r2, #0
   136ec:	mov	r3, #0
   136f0:	strd	r2, [r1, #40]	; 0x28
   136f4:	sub	r3, fp, #544	; 0x220
   136f8:	mov	r0, r3
   136fc:	bl	11104 <strlen@plt>
   13700:	mov	r3, r0
   13704:	add	r2, r3, #1
   13708:	sub	r3, fp, #544	; 0x220
   1370c:	mov	r1, r3
   13710:	ldr	r0, [fp, #-552]	; 0xfffffdd8
   13714:	bl	122fc <__errno_location@plt+0x106c>
   13718:	b	13720 <__errno_location@plt+0x2490>
   1371c:	nop			; (mov r0, r0)
   13720:	sub	sp, fp, #20
   13724:	pop	{r4, r5, r6, r7, fp, pc}
   13728:	andeq	r1, r0, r0, ror r5
   1372c:	push	{fp, lr}
   13730:	add	fp, sp, #4
   13734:	sub	sp, sp, #40	; 0x28
   13738:	str	r0, [fp, #-40]	; 0xffffffd8
   1373c:	str	r1, [fp, #-44]	; 0xffffffd4
   13740:	mov	r3, #6
   13744:	str	r3, [fp, #-12]
   13748:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1374c:	ldr	r1, [r3, #20]
   13750:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13754:	ldr	r3, [r3, #24]
   13758:	mov	r2, r3
   1375c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13760:	bl	11da0 <__errno_location@plt+0xb10>
   13764:	str	r0, [fp, #-16]
   13768:	ldr	r3, [fp, #-16]
   1376c:	ldr	r3, [r3, #28]
   13770:	mov	r0, r3
   13774:	bl	10f9c <rb_get_type@plt>
   13778:	mov	r3, r0
   1377c:	cmp	r3, #64	; 0x40
   13780:	bne	13798 <__errno_location@plt+0x2508>
   13784:	ldr	r3, [fp, #-16]
   13788:	ldr	r3, [r3, #28]
   1378c:	mov	r1, #4
   13790:	mov	r0, r3
   13794:	bl	110f8 <rb_set_type@plt>
   13798:	ldr	r3, [fp, #-16]
   1379c:	ldr	r3, [r3, #32]
   137a0:	mov	r0, r3
   137a4:	bl	10f9c <rb_get_type@plt>
   137a8:	mov	r3, r0
   137ac:	cmp	r3, #64	; 0x40
   137b0:	bne	137c8 <__errno_location@plt+0x2538>
   137b4:	ldr	r3, [fp, #-16]
   137b8:	ldr	r3, [r3, #32]
   137bc:	mov	r1, #4
   137c0:	mov	r0, r3
   137c4:	bl	110f8 <rb_set_type@plt>
   137c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   137cc:	ldr	r3, [r3, #12]
   137d0:	add	r3, r3, #1
   137d4:	mov	r0, r3
   137d8:	bl	11830 <__errno_location@plt+0x5a0>
   137dc:	str	r0, [fp, #-20]	; 0xffffffec
   137e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   137e4:	ldr	r0, [fp, #-16]
   137e8:	bl	119b8 <__errno_location@plt+0x728>
   137ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   137f0:	ldr	r3, [r3, #12]
   137f4:	add	r3, r3, #5
   137f8:	ldrb	r3, [r3]
   137fc:	strb	r3, [fp, #-5]
   13800:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13804:	ldr	r2, [r3, #16]
   13808:	ldr	r3, [fp, #-12]
   1380c:	sub	r3, r2, r3
   13810:	str	r3, [fp, #-24]	; 0xffffffe8
   13814:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13818:	ldr	r3, [r3, #12]
   1381c:	add	r3, r3, #6
   13820:	str	r3, [fp, #-28]	; 0xffffffe4
   13824:	ldr	r3, [fp, #-16]
   13828:	ldrb	r3, [r3, #72]	; 0x48
   1382c:	orr	r3, r3, #2
   13830:	uxtb	r2, r3
   13834:	ldr	r3, [fp, #-16]
   13838:	strb	r2, [r3, #72]	; 0x48
   1383c:	mov	r0, #112	; 0x70
   13840:	bl	1179c <__errno_location@plt+0x50c>
   13844:	mov	r2, r0
   13848:	ldr	r3, [fp, #-16]
   1384c:	str	r2, [r3, #76]	; 0x4c
   13850:	ldr	r3, [fp, #-16]
   13854:	ldr	r3, [r3, #76]	; 0x4c
   13858:	str	r3, [fp, #-32]	; 0xffffffe0
   1385c:	ldr	r3, [fp, #-16]
   13860:	ldr	r3, [r3, #76]	; 0x4c
   13864:	add	r3, r3, #56	; 0x38
   13868:	str	r3, [fp, #-36]	; 0xffffffdc
   1386c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13870:	mov	r2, #0
   13874:	str	r2, [r3, #8]
   13878:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1387c:	mov	r2, #0
   13880:	str	r2, [r3, #20]
   13884:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13888:	ldr	r2, [pc, #264]	; 13998 <__errno_location@plt+0x2708>
   1388c:	add	r2, pc, r2
   13890:	str	r2, [r3, #32]
   13894:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13898:	ldr	r2, [pc, #252]	; 1399c <__errno_location@plt+0x270c>
   1389c:	add	r2, pc, r2
   138a0:	str	r2, [r3, #36]	; 0x24
   138a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   138a8:	mov	r2, #1
   138ac:	str	r2, [r3, #44]	; 0x2c
   138b0:	ldr	r3, [fp, #-16]
   138b4:	ldr	r3, [r3, #76]	; 0x4c
   138b8:	mov	r0, r3
   138bc:	mov	r2, #56	; 0x38
   138c0:	ldr	r3, [pc, #216]	; 139a0 <__errno_location@plt+0x2710>
   138c4:	add	r3, pc, r3
   138c8:	mov	r1, r3
   138cc:	bl	11200 <inflateInit_@plt>
   138d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   138d4:	mov	r2, #0
   138d8:	str	r2, [r3, #8]
   138dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   138e0:	mov	r2, #0
   138e4:	str	r2, [r3, #20]
   138e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   138ec:	ldr	r2, [pc, #176]	; 139a4 <__errno_location@plt+0x2714>
   138f0:	add	r2, pc, r2
   138f4:	str	r2, [r3, #32]
   138f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   138fc:	ldr	r2, [pc, #164]	; 139a8 <__errno_location@plt+0x2718>
   13900:	add	r2, pc, r2
   13904:	str	r2, [r3, #36]	; 0x24
   13908:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1390c:	mov	r2, #1
   13910:	str	r2, [r3, #44]	; 0x2c
   13914:	ldrb	r3, [fp, #-5]
   13918:	cmp	r3, #9
   1391c:	bls	13928 <__errno_location@plt+0x2698>
   13920:	mvn	r3, #0
   13924:	strb	r3, [fp, #-5]
   13928:	ldr	r3, [fp, #-16]
   1392c:	ldr	r3, [r3, #76]	; 0x4c
   13930:	add	r0, r3, #56	; 0x38
   13934:	ldrb	r1, [fp, #-5]
   13938:	mov	r3, #56	; 0x38
   1393c:	ldr	r2, [pc, #104]	; 139ac <__errno_location@plt+0x271c>
   13940:	add	r2, pc, r2
   13944:	bl	1105c <deflateInit_@plt>
   13948:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1394c:	cmp	r3, #0
   13950:	beq	13964 <__errno_location@plt+0x26d4>
   13954:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13958:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1395c:	ldr	r0, [fp, #-16]
   13960:	bl	1252c <__errno_location@plt+0x129c>
   13964:	ldr	r3, [fp, #-16]
   13968:	ldr	r3, [r3, #28]
   1396c:	ldr	r1, [fp, #-16]
   13970:	mov	r0, r3
   13974:	bl	12b48 <__errno_location@plt+0x18b8>
   13978:	ldr	r3, [fp, #-16]
   1397c:	ldr	r3, [r3, #32]
   13980:	ldr	r1, [fp, #-16]
   13984:	mov	r0, r3
   13988:	bl	12824 <__errno_location@plt+0x1594>
   1398c:	nop			; (mov r0, r0)
   13990:	sub	sp, fp, #4
   13994:	pop	{fp, pc}
   13998:			; <UNDEFINED> instruction: 0xffffdffc
   1399c:			; <UNDEFINED> instruction: 0xffffe028
   139a0:	andeq	r1, r0, ip, ror #6
   139a4:			; <UNDEFINED> instruction: 0xffffdf98
   139a8:			; <UNDEFINED> instruction: 0xffffdfc4
   139ac:	strdeq	r1, [r0], -r0
   139b0:	push	{fp, lr}
   139b4:	add	fp, sp, #4
   139b8:	sub	sp, sp, #32
   139bc:	str	r0, [fp, #-32]	; 0xffffffe0
   139c0:	str	r1, [fp, #-36]	; 0xffffffdc
   139c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   139c8:	ldr	r3, [r3, #12]
   139cc:	add	r3, r3, #2
   139d0:	str	r3, [fp, #-20]	; 0xffffffec
   139d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   139d8:	str	r3, [fp, #-24]	; 0xffffffe8
   139dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   139e0:	bl	11104 <strlen@plt>
   139e4:	mov	r3, r0
   139e8:	add	r3, r3, #1
   139ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   139f0:	add	r3, r2, r3
   139f4:	str	r3, [fp, #-20]	; 0xffffffec
   139f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   139fc:	str	r3, [fp, #-8]
   13a00:	ldr	r0, [fp, #-8]
   13a04:	bl	11104 <strlen@plt>
   13a08:	mov	r3, r0
   13a0c:	add	r3, r3, #1
   13a10:	ldr	r2, [fp, #-20]	; 0xffffffec
   13a14:	add	r3, r2, r3
   13a18:	str	r3, [fp, #-20]	; 0xffffffec
   13a1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13a20:	str	r3, [fp, #-12]
   13a24:	ldr	r0, [fp, #-12]
   13a28:	bl	11104 <strlen@plt>
   13a2c:	mov	r3, r0
   13a30:	add	r3, r3, #1
   13a34:	ldr	r2, [fp, #-20]	; 0xffffffec
   13a38:	add	r3, r2, r3
   13a3c:	str	r3, [fp, #-20]	; 0xffffffec
   13a40:	ldr	r3, [fp, #-20]	; 0xffffffec
   13a44:	str	r3, [fp, #-16]
   13a48:	ldr	r3, [fp, #-8]
   13a4c:	ldrb	r3, [r3]
   13a50:	cmp	r3, #0
   13a54:	bne	13a60 <__errno_location@plt+0x27d0>
   13a58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13a5c:	str	r3, [fp, #-8]
   13a60:	ldr	r3, [fp, #-12]
   13a64:	ldrb	r3, [r3]
   13a68:	cmp	r3, #0
   13a6c:	bne	13a78 <__errno_location@plt+0x27e8>
   13a70:	mov	r3, #0
   13a74:	str	r3, [fp, #-12]
   13a78:	ldr	r3, [fp, #-16]
   13a7c:	ldrb	r3, [r3]
   13a80:	cmp	r3, #0
   13a84:	bne	13a90 <__errno_location@plt+0x2800>
   13a88:	mov	r3, #0
   13a8c:	str	r3, [fp, #-16]
   13a90:	ldr	r3, [fp, #-16]
   13a94:	ldr	r2, [fp, #-12]
   13a98:	ldr	r1, [fp, #-8]
   13a9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13aa0:	bl	11278 <rb_setup_ssl_server@plt>
   13aa4:	mov	r3, r0
   13aa8:	cmp	r3, #0
   13aac:	bne	13adc <__errno_location@plt+0x284c>
   13ab0:	ldr	r3, [pc, #44]	; 13ae4 <__errno_location@plt+0x2854>
   13ab4:	add	r3, pc, r3
   13ab8:	str	r3, [fp, #-28]	; 0xffffffe4
   13abc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13ac0:	bl	11104 <strlen@plt>
   13ac4:	mov	r3, r0
   13ac8:	mov	r2, r3
   13acc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13ad0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13ad4:	bl	122fc <__errno_location@plt+0x106c>
   13ad8:	nop			; (mov r0, r0)
   13adc:	sub	sp, fp, #4
   13ae0:	pop	{fp, pc}
   13ae4:	andeq	r1, r0, r4, lsl #3
   13ae8:	push	{r4, fp, lr}
   13aec:	add	fp, sp, #8
   13af0:	sub	sp, sp, #20
   13af4:	str	r0, [fp, #-24]	; 0xffffffe8
   13af8:	str	r1, [fp, #-28]	; 0xffffffe4
   13afc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13b00:	cmp	r3, #0
   13b04:	beq	13b64 <__errno_location@plt+0x28d4>
   13b08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13b0c:	ldr	r1, [r3, #20]
   13b10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13b14:	ldr	r3, [r3, #24]
   13b18:	mov	r2, r3
   13b1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b20:	bl	11da0 <__errno_location@plt+0xb10>
   13b24:	str	r0, [fp, #-16]
   13b28:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13b2c:	ldr	r3, [r3, #12]
   13b30:	add	r3, r3, #1
   13b34:	mov	r0, r3
   13b38:	bl	11830 <__errno_location@plt+0x5a0>
   13b3c:	str	r0, [fp, #-20]	; 0xffffffec
   13b40:	ldr	r1, [fp, #-20]	; 0xffffffec
   13b44:	ldr	r0, [fp, #-16]
   13b48:	bl	119b8 <__errno_location@plt+0x728>
   13b4c:	ldr	r3, [pc, #80]	; 13ba4 <__errno_location@plt+0x2914>
   13b50:	add	r3, pc, r3
   13b54:	mov	r2, r3
   13b58:	mov	r1, #1
   13b5c:	ldr	r0, [fp, #-16]
   13b60:	bl	11b90 <__errno_location@plt+0x900>
   13b64:	ldr	r3, [pc, #60]	; 13ba8 <__errno_location@plt+0x2918>
   13b68:	add	r3, pc, r3
   13b6c:	ldr	r4, [r3]
   13b70:	ldr	r3, [pc, #52]	; 13bac <__errno_location@plt+0x291c>
   13b74:	add	r3, pc, r3
   13b78:	ldr	r3, [r3]
   13b7c:	mov	r0, r3
   13b80:	bl	11104 <strlen@plt>
   13b84:	mov	r3, r0
   13b88:	mov	r2, r3
   13b8c:	mov	r1, r4
   13b90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13b94:	bl	122fc <__errno_location@plt+0x106c>
   13b98:	nop			; (mov r0, r0)
   13b9c:	sub	sp, fp, #8
   13ba0:	pop	{r4, fp, pc}
   13ba4:	andeq	r1, r0, ip, ror #1
   13ba8:	andeq	r1, r1, r4, asr #11
   13bac:			; <UNDEFINED> instruction: 0x000115b8
   13bb0:	push	{r4, fp, lr}
   13bb4:	add	fp, sp, #8
   13bb8:	sub	sp, sp, #12
   13bbc:	str	r0, [fp, #-16]
   13bc0:	ldr	r3, [pc, #56]	; 13c00 <__errno_location@plt+0x2970>
   13bc4:	add	r3, pc, r3
   13bc8:	ldr	r4, [r3]
   13bcc:	ldr	r3, [pc, #48]	; 13c04 <__errno_location@plt+0x2974>
   13bd0:	add	r3, pc, r3
   13bd4:	ldr	r3, [r3]
   13bd8:	mov	r0, r3
   13bdc:	bl	11104 <strlen@plt>
   13be0:	mov	r3, r0
   13be4:	mov	r2, r3
   13be8:	mov	r1, r4
   13bec:	ldr	r0, [fp, #-16]
   13bf0:	bl	122fc <__errno_location@plt+0x106c>
   13bf4:	nop			; (mov r0, r0)
   13bf8:	sub	sp, fp, #8
   13bfc:	pop	{r4, fp, pc}
   13c00:	andeq	r1, r1, ip, ror #10
   13c04:	andeq	r1, r1, r0, ror #10
   13c08:	push	{fp, lr}
   13c0c:	add	fp, sp, #4
   13c10:	sub	sp, sp, #264	; 0x108
   13c14:	str	r0, [fp, #-264]	; 0xfffffef8
   13c18:	sub	r3, fp, #260	; 0x104
   13c1c:	mov	r2, #256	; 0x100
   13c20:	mov	r1, #0
   13c24:	mov	r0, r3
   13c28:	bl	11080 <memset@plt>
   13c2c:	mov	r3, #86	; 0x56
   13c30:	strb	r3, [fp, #-260]	; 0xfffffefc
   13c34:	bl	10fd8 <rb_lib_version@plt>
   13c38:	mov	r1, r0
   13c3c:	sub	r3, fp, #260	; 0x104
   13c40:	add	r3, r3, #1
   13c44:	mov	r2, #254	; 0xfe
   13c48:	mov	r0, r3
   13c4c:	bl	11038 <strncpy@plt>
   13c50:	sub	r3, fp, #260	; 0x104
   13c54:	mov	r0, r3
   13c58:	bl	11104 <strlen@plt>
   13c5c:	mov	r2, r0
   13c60:	sub	r3, fp, #260	; 0x104
   13c64:	mov	r1, r3
   13c68:	ldr	r0, [fp, #-264]	; 0xfffffef8
   13c6c:	bl	122fc <__errno_location@plt+0x106c>
   13c70:	nop			; (mov r0, r0)
   13c74:	sub	sp, fp, #4
   13c78:	pop	{fp, pc}
   13c7c:	push	{r4, fp, lr}
   13c80:	add	fp, sp, #8
   13c84:	sub	sp, sp, #20
   13c88:	str	r0, [fp, #-24]	; 0xffffffe8
   13c8c:	str	r1, [fp, #-28]	; 0xffffffe4
   13c90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13c94:	cmp	r3, #0
   13c98:	beq	13cf8 <__errno_location@plt+0x2a68>
   13c9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13ca0:	ldr	r1, [r3, #20]
   13ca4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13ca8:	ldr	r3, [r3, #24]
   13cac:	mov	r2, r3
   13cb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13cb4:	bl	11da0 <__errno_location@plt+0xb10>
   13cb8:	str	r0, [fp, #-16]
   13cbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13cc0:	ldr	r3, [r3, #12]
   13cc4:	add	r3, r3, #1
   13cc8:	mov	r0, r3
   13ccc:	bl	11830 <__errno_location@plt+0x5a0>
   13cd0:	str	r0, [fp, #-20]	; 0xffffffec
   13cd4:	ldr	r1, [fp, #-20]	; 0xffffffec
   13cd8:	ldr	r0, [fp, #-16]
   13cdc:	bl	119b8 <__errno_location@plt+0x728>
   13ce0:	ldr	r3, [pc, #80]	; 13d38 <__errno_location@plt+0x2aa8>
   13ce4:	add	r3, pc, r3
   13ce8:	mov	r2, r3
   13cec:	mov	r1, #1
   13cf0:	ldr	r0, [fp, #-16]
   13cf4:	bl	11b90 <__errno_location@plt+0x900>
   13cf8:	ldr	r3, [pc, #60]	; 13d3c <__errno_location@plt+0x2aac>
   13cfc:	add	r3, pc, r3
   13d00:	ldr	r4, [r3]
   13d04:	ldr	r3, [pc, #52]	; 13d40 <__errno_location@plt+0x2ab0>
   13d08:	add	r3, pc, r3
   13d0c:	ldr	r3, [r3]
   13d10:	mov	r0, r3
   13d14:	bl	11104 <strlen@plt>
   13d18:	mov	r3, r0
   13d1c:	mov	r2, r3
   13d20:	mov	r1, r4
   13d24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d28:	bl	122fc <__errno_location@plt+0x106c>
   13d2c:	nop			; (mov r0, r0)
   13d30:	sub	sp, fp, #8
   13d34:	pop	{r4, fp, pc}
   13d38:	andeq	r0, r0, r0, lsl #31
   13d3c:	andeq	r1, r1, r8, lsr r4
   13d40:	andeq	r1, r1, ip, lsr #8
   13d44:	push	{fp, lr}
   13d48:	add	fp, sp, #4
   13d4c:	sub	sp, sp, #24
   13d50:	str	r0, [fp, #-24]	; 0xffffffe8
   13d54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13d58:	ldr	r3, [r3, #24]
   13d5c:	str	r3, [fp, #-8]
   13d60:	ldr	r3, [fp, #-8]
   13d64:	cmp	r3, #0
   13d68:	beq	13d78 <__errno_location@plt+0x2ae8>
   13d6c:	ldr	r3, [fp, #-8]
   13d70:	ldr	r3, [r3, #8]
   13d74:	b	13d7c <__errno_location@plt+0x2aec>
   13d78:	mov	r3, #0
   13d7c:	str	r3, [fp, #-12]
   13d80:	b	13ff0 <__errno_location@plt+0x2d60>
   13d84:	ldr	r3, [fp, #-8]
   13d88:	ldr	r3, [r3]
   13d8c:	str	r3, [fp, #-16]
   13d90:	ldr	r3, [fp, #-16]
   13d94:	ldr	r3, [r3, #12]
   13d98:	ldrb	r3, [r3]
   13d9c:	sub	r3, r3, #65	; 0x41
   13da0:	cmp	r3, #25
   13da4:	addls	pc, pc, r3, lsl #2
   13da8:	b	13f98 <__errno_location@plt+0x2d08>
   13dac:	b	13e14 <__errno_location@plt+0x2b84>
   13db0:	b	13f98 <__errno_location@plt+0x2d08>
   13db4:	b	13e80 <__errno_location@plt+0x2bf0>
   13db8:	b	13f98 <__errno_location@plt+0x2d08>
   13dbc:	b	13f98 <__errno_location@plt+0x2d08>
   13dc0:	b	13edc <__errno_location@plt+0x2c4c>
   13dc4:	b	13f98 <__errno_location@plt+0x2d08>
   13dc8:	b	13f98 <__errno_location@plt+0x2d08>
   13dcc:	b	13f98 <__errno_location@plt+0x2d08>
   13dd0:	b	13f98 <__errno_location@plt+0x2d08>
   13dd4:	b	13f0c <__errno_location@plt+0x2c7c>
   13dd8:	b	13f98 <__errno_location@plt+0x2d08>
   13ddc:	b	13f98 <__errno_location@plt+0x2d08>
   13de0:	b	13f98 <__errno_location@plt+0x2d08>
   13de4:	b	13f98 <__errno_location@plt+0x2d08>
   13de8:	b	13f98 <__errno_location@plt+0x2d08>
   13dec:	b	13f98 <__errno_location@plt+0x2d08>
   13df0:	b	13f98 <__errno_location@plt+0x2d08>
   13df4:	b	13f48 <__errno_location@plt+0x2cb8>
   13df8:	b	13f98 <__errno_location@plt+0x2d08>
   13dfc:	b	13f98 <__errno_location@plt+0x2d08>
   13e00:	b	13f98 <__errno_location@plt+0x2d08>
   13e04:	b	13f98 <__errno_location@plt+0x2d08>
   13e08:	b	13f98 <__errno_location@plt+0x2d08>
   13e0c:	b	13f98 <__errno_location@plt+0x2d08>
   13e10:	b	13f58 <__errno_location@plt+0x2cc8>
   13e14:	ldr	r3, [fp, #-16]
   13e18:	ldr	r3, [r3, #36]	; 0x24
   13e1c:	cmp	r3, #2
   13e20:	bne	13e34 <__errno_location@plt+0x2ba4>
   13e24:	ldr	r3, [fp, #-16]
   13e28:	ldr	r3, [r3, #16]
   13e2c:	cmp	r3, #5
   13e30:	beq	13e44 <__errno_location@plt+0x2bb4>
   13e34:	ldr	r1, [fp, #-16]
   13e38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e3c:	bl	13360 <__errno_location@plt+0x20d0>
   13e40:	b	13f9c <__errno_location@plt+0x2d0c>
   13e44:	ldr	r3, [pc, #444]	; 14008 <__errno_location@plt+0x2d78>
   13e48:	add	r3, pc, r3
   13e4c:	ldrb	r3, [r3]
   13e50:	eor	r3, r3, #1
   13e54:	uxtb	r3, r3
   13e58:	cmp	r3, #0
   13e5c:	beq	13e70 <__errno_location@plt+0x2be0>
   13e60:	ldr	r1, [fp, #-16]
   13e64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e68:	bl	13ae8 <__errno_location@plt+0x2858>
   13e6c:	b	13f9c <__errno_location@plt+0x2d0c>
   13e70:	ldr	r1, [fp, #-16]
   13e74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e78:	bl	133cc <__errno_location@plt+0x213c>
   13e7c:	b	13f9c <__errno_location@plt+0x2d0c>
   13e80:	ldr	r3, [fp, #-16]
   13e84:	ldr	r3, [r3, #16]
   13e88:	cmp	r3, #5
   13e8c:	beq	13ea0 <__errno_location@plt+0x2c10>
   13e90:	ldr	r1, [fp, #-16]
   13e94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13e98:	bl	13360 <__errno_location@plt+0x20d0>
   13e9c:	b	13f9c <__errno_location@plt+0x2d0c>
   13ea0:	ldr	r3, [pc, #356]	; 1400c <__errno_location@plt+0x2d7c>
   13ea4:	add	r3, pc, r3
   13ea8:	ldrb	r3, [r3]
   13eac:	eor	r3, r3, #1
   13eb0:	uxtb	r3, r3
   13eb4:	cmp	r3, #0
   13eb8:	beq	13ecc <__errno_location@plt+0x2c3c>
   13ebc:	ldr	r1, [fp, #-16]
   13ec0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13ec4:	bl	13ae8 <__errno_location@plt+0x2858>
   13ec8:	b	13f9c <__errno_location@plt+0x2d0c>
   13ecc:	ldr	r1, [fp, #-16]
   13ed0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13ed4:	bl	13518 <__errno_location@plt+0x2288>
   13ed8:	b	13f9c <__errno_location@plt+0x2d0c>
   13edc:	ldr	r3, [fp, #-16]
   13ee0:	ldr	r3, [r3, #16]
   13ee4:	cmp	r3, #5
   13ee8:	beq	13efc <__errno_location@plt+0x2c6c>
   13eec:	ldr	r1, [fp, #-16]
   13ef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13ef4:	bl	13360 <__errno_location@plt+0x20d0>
   13ef8:	b	13f9c <__errno_location@plt+0x2d0c>
   13efc:	ldr	r1, [fp, #-16]
   13f00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13f04:	bl	134cc <__errno_location@plt+0x223c>
   13f08:	b	13f9c <__errno_location@plt+0x2d0c>
   13f0c:	ldr	r3, [pc, #252]	; 14010 <__errno_location@plt+0x2d80>
   13f10:	add	r3, pc, r3
   13f14:	ldrb	r3, [r3]
   13f18:	eor	r3, r3, #1
   13f1c:	uxtb	r3, r3
   13f20:	cmp	r3, #0
   13f24:	beq	13f38 <__errno_location@plt+0x2ca8>
   13f28:	ldr	r1, [fp, #-16]
   13f2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13f30:	bl	13ae8 <__errno_location@plt+0x2858>
   13f34:	b	13f9c <__errno_location@plt+0x2d0c>
   13f38:	ldr	r1, [fp, #-16]
   13f3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13f40:	bl	139b0 <__errno_location@plt+0x2720>
   13f44:	b	13f9c <__errno_location@plt+0x2d0c>
   13f48:	ldr	r1, [fp, #-16]
   13f4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13f50:	bl	13614 <__errno_location@plt+0x2384>
   13f54:	b	13f9c <__errno_location@plt+0x2d0c>
   13f58:	ldr	r3, [fp, #-16]
   13f5c:	ldr	r3, [r3, #36]	; 0x24
   13f60:	cmp	r3, #2
   13f64:	bne	13f78 <__errno_location@plt+0x2ce8>
   13f68:	ldr	r3, [fp, #-16]
   13f6c:	ldr	r3, [r3, #16]
   13f70:	cmp	r3, #5
   13f74:	bhi	13f88 <__errno_location@plt+0x2cf8>
   13f78:	ldr	r1, [fp, #-16]
   13f7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13f80:	bl	13360 <__errno_location@plt+0x20d0>
   13f84:	b	13f9c <__errno_location@plt+0x2d0c>
   13f88:	ldr	r1, [fp, #-16]
   13f8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13f90:	bl	1372c <__errno_location@plt+0x249c>
   13f94:	b	13f9c <__errno_location@plt+0x2d0c>
   13f98:	nop			; (mov r0, r0)
   13f9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13fa0:	add	r3, r3, #24
   13fa4:	mov	r1, r3
   13fa8:	ldr	r0, [fp, #-8]
   13fac:	bl	1166c <__errno_location@plt+0x3dc>
   13fb0:	ldr	r3, [fp, #-16]
   13fb4:	ldr	r3, [r3, #12]
   13fb8:	mov	r0, r3
   13fbc:	bl	117f0 <__errno_location@plt+0x560>
   13fc0:	ldr	r0, [fp, #-16]
   13fc4:	bl	117f0 <__errno_location@plt+0x560>
   13fc8:	ldr	r3, [fp, #-12]
   13fcc:	str	r3, [fp, #-8]
   13fd0:	ldr	r3, [fp, #-8]
   13fd4:	cmp	r3, #0
   13fd8:	beq	13fe8 <__errno_location@plt+0x2d58>
   13fdc:	ldr	r3, [fp, #-8]
   13fe0:	ldr	r3, [r3, #8]
   13fe4:	b	13fec <__errno_location@plt+0x2d5c>
   13fe8:	mov	r3, #0
   13fec:	str	r3, [fp, #-12]
   13ff0:	ldr	r3, [fp, #-8]
   13ff4:	cmp	r3, #0
   13ff8:	bne	13d84 <__errno_location@plt+0x2af4>
   13ffc:	nop			; (mov r0, r0)
   14000:	sub	sp, fp, #4
   14004:	pop	{fp, pc}
   14008:	andeq	r7, r1, r8, asr #1
   1400c:	andeq	r7, r1, ip, rrx
   14010:	andeq	r7, r1, r0
   14014:	push	{fp, lr}
   14018:	add	fp, sp, #4
   1401c:	sub	sp, sp, #32
   14020:	str	r0, [fp, #-24]	; 0xffffffe8
   14024:	str	r1, [fp, #-28]	; 0xffffffe4
   14028:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1402c:	str	r3, [fp, #-12]
   14030:	mov	r0, #40	; 0x28
   14034:	bl	1179c <__errno_location@plt+0x50c>
   14038:	str	r0, [fp, #-16]
   1403c:	mov	r0, #16384	; 0x4000
   14040:	bl	1179c <__errno_location@plt+0x50c>
   14044:	mov	r2, r0
   14048:	ldr	r3, [fp, #-16]
   1404c:	str	r2, [r3, #12]
   14050:	ldr	r3, [fp, #-16]
   14054:	mov	r2, #16384	; 0x4000
   14058:	str	r2, [r3, #16]
   1405c:	ldr	r3, [fp, #-12]
   14060:	ldr	r0, [r3, #16]
   14064:	ldr	r3, [fp, #-16]
   14068:	ldr	r1, [r3, #12]
   1406c:	ldr	r3, [fp, #-16]
   14070:	ldr	r2, [r3, #16]
   14074:	ldr	r3, [fp, #-16]
   14078:	add	ip, r3, #20
   1407c:	mov	r3, #4
   14080:	str	r3, [sp]
   14084:	mov	r3, ip
   14088:	bl	1120c <rb_recv_fd_buf@plt>
   1408c:	str	r0, [fp, #-20]	; 0xffffffec
   14090:	ldr	r3, [fp, #-20]	; 0xffffffec
   14094:	cmp	r3, #0
   14098:	bgt	140b8 <__errno_location@plt+0x2e28>
   1409c:	ldr	r3, [fp, #-16]
   140a0:	ldr	r3, [r3, #12]
   140a4:	mov	r0, r3
   140a8:	bl	117f0 <__errno_location@plt+0x560>
   140ac:	ldr	r0, [fp, #-16]
   140b0:	bl	117f0 <__errno_location@plt+0x560>
   140b4:	b	1412c <__errno_location@plt+0x2e9c>
   140b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   140bc:	ldr	r3, [fp, #-16]
   140c0:	str	r2, [r3, #16]
   140c4:	ldr	r1, [fp, #-16]
   140c8:	ldr	r3, [fp, #-12]
   140cc:	add	r3, r3, #24
   140d0:	mov	r2, r3
   140d4:	ldr	r0, [fp, #-16]
   140d8:	bl	11518 <__errno_location@plt+0x288>
   140dc:	mov	r3, #0
   140e0:	str	r3, [fp, #-8]
   140e4:	b	140f4 <__errno_location@plt+0x2e64>
   140e8:	ldr	r3, [fp, #-8]
   140ec:	add	r3, r3, #1
   140f0:	str	r3, [fp, #-8]
   140f4:	ldr	r3, [fp, #-8]
   140f8:	cmp	r3, #3
   140fc:	bgt	14120 <__errno_location@plt+0x2e90>
   14100:	ldr	r2, [fp, #-16]
   14104:	ldr	r3, [fp, #-8]
   14108:	add	r3, r3, #4
   1410c:	lsl	r3, r3, #2
   14110:	add	r3, r2, r3
   14114:	ldr	r3, [r3, #4]
   14118:	cmp	r3, #0
   1411c:	bne	140e8 <__errno_location@plt+0x2e58>
   14120:	ldr	r3, [fp, #-16]
   14124:	ldr	r2, [fp, #-8]
   14128:	str	r2, [r3, #36]	; 0x24
   1412c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14130:	cmp	r3, #0
   14134:	bgt	14030 <__errno_location@plt+0x2da0>
   14138:	ldr	r3, [fp, #-20]	; 0xffffffec
   1413c:	cmp	r3, #0
   14140:	beq	14170 <__errno_location@plt+0x2ee0>
   14144:	ldr	r3, [fp, #-20]	; 0xffffffec
   14148:	cmp	r3, #0
   1414c:	bge	14178 <__errno_location@plt+0x2ee8>
   14150:	bl	11290 <__errno_location@plt>
   14154:	mov	r3, r0
   14158:	ldr	r3, [r3]
   1415c:	mov	r0, r3
   14160:	bl	10fcc <rb_ignore_errno@plt>
   14164:	mov	r3, r0
   14168:	cmp	r3, #0
   1416c:	bne	14178 <__errno_location@plt+0x2ee8>
   14170:	mov	r0, #0
   14174:	bl	11284 <exit@plt>
   14178:	ldr	r0, [fp, #-12]
   1417c:	bl	13d44 <__errno_location@plt+0x2ab4>
   14180:	ldr	r3, [fp, #-12]
   14184:	ldr	r0, [r3, #16]
   14188:	ldr	r3, [fp, #-12]
   1418c:	ldr	r2, [pc, #20]	; 141a8 <__errno_location@plt+0x2f18>
   14190:	add	r2, pc, r2
   14194:	mov	r1, #1
   14198:	bl	10ffc <rb_setselect@plt>
   1419c:	nop			; (mov r0, r0)
   141a0:	sub	sp, fp, #4
   141a4:	pop	{fp, pc}
   141a8:			; <UNDEFINED> instruction: 0xfffffe7c
   141ac:	push	{fp, lr}
   141b0:	add	fp, sp, #4
   141b4:	sub	sp, sp, #40	; 0x28
   141b8:	str	r0, [fp, #-32]	; 0xffffffe0
   141bc:	str	r1, [fp, #-36]	; 0xffffffdc
   141c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   141c4:	str	r3, [fp, #-20]	; 0xffffffec
   141c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   141cc:	ldr	r3, [r3, #36]	; 0x24
   141d0:	str	r3, [fp, #-8]
   141d4:	ldr	r3, [fp, #-8]
   141d8:	cmp	r3, #0
   141dc:	beq	141ec <__errno_location@plt+0x2f5c>
   141e0:	ldr	r3, [fp, #-8]
   141e4:	ldr	r3, [r3, #8]
   141e8:	b	141f0 <__errno_location@plt+0x2f60>
   141ec:	mov	r3, #0
   141f0:	str	r3, [fp, #-12]
   141f4:	b	1433c <__errno_location@plt+0x30ac>
   141f8:	ldr	r3, [fp, #-8]
   141fc:	ldr	r3, [r3]
   14200:	str	r3, [fp, #-24]	; 0xffffffe8
   14204:	ldr	r3, [fp, #-20]	; 0xffffffec
   14208:	ldr	r0, [r3, #16]
   1420c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14210:	add	r1, r3, #20
   14214:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14218:	ldr	ip, [r3, #36]	; 0x24
   1421c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14220:	ldr	lr, [r3, #12]
   14224:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14228:	ldr	r3, [r3, #16]
   1422c:	ldr	r2, [pc, #332]	; 14380 <__errno_location@plt+0x30f0>
   14230:	add	r2, pc, r2
   14234:	ldr	r2, [r2]
   14238:	str	r2, [sp, #4]
   1423c:	str	r3, [sp]
   14240:	mov	r3, lr
   14244:	mov	r2, ip
   14248:	bl	11020 <rb_send_fd_buf@plt>
   1424c:	str	r0, [fp, #-28]	; 0xffffffe4
   14250:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14254:	cmp	r3, #0
   14258:	ble	142d4 <__errno_location@plt+0x3044>
   1425c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14260:	add	r3, r3, #36	; 0x24
   14264:	mov	r1, r3
   14268:	ldr	r0, [fp, #-8]
   1426c:	bl	1166c <__errno_location@plt+0x3dc>
   14270:	mov	r3, #0
   14274:	str	r3, [fp, #-16]
   14278:	b	142a8 <__errno_location@plt+0x3018>
   1427c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14280:	ldr	r3, [fp, #-16]
   14284:	add	r3, r3, #4
   14288:	lsl	r3, r3, #2
   1428c:	add	r3, r2, r3
   14290:	ldr	r3, [r3, #4]
   14294:	mov	r0, r3
   14298:	bl	11128 <rb_close@plt>
   1429c:	ldr	r3, [fp, #-16]
   142a0:	add	r3, r3, #1
   142a4:	str	r3, [fp, #-16]
   142a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   142ac:	ldr	r2, [r3, #36]	; 0x24
   142b0:	ldr	r3, [fp, #-16]
   142b4:	cmp	r2, r3
   142b8:	bgt	1427c <__errno_location@plt+0x2fec>
   142bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   142c0:	ldr	r3, [r3, #12]
   142c4:	mov	r0, r3
   142c8:	bl	117f0 <__errno_location@plt+0x560>
   142cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   142d0:	bl	117f0 <__errno_location@plt+0x560>
   142d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   142d8:	cmp	r3, #0
   142dc:	beq	1430c <__errno_location@plt+0x307c>
   142e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   142e4:	cmp	r3, #0
   142e8:	bge	14314 <__errno_location@plt+0x3084>
   142ec:	bl	11290 <__errno_location@plt>
   142f0:	mov	r3, r0
   142f4:	ldr	r3, [r3]
   142f8:	mov	r0, r3
   142fc:	bl	10fcc <rb_ignore_errno@plt>
   14300:	mov	r3, r0
   14304:	cmp	r3, #0
   14308:	bne	14314 <__errno_location@plt+0x3084>
   1430c:	mov	r0, #0
   14310:	bl	11284 <exit@plt>
   14314:	ldr	r3, [fp, #-12]
   14318:	str	r3, [fp, #-8]
   1431c:	ldr	r3, [fp, #-8]
   14320:	cmp	r3, #0
   14324:	beq	14334 <__errno_location@plt+0x30a4>
   14328:	ldr	r3, [fp, #-8]
   1432c:	ldr	r3, [r3, #8]
   14330:	b	14338 <__errno_location@plt+0x30a8>
   14334:	mov	r3, #0
   14338:	str	r3, [fp, #-12]
   1433c:	ldr	r3, [fp, #-8]
   14340:	cmp	r3, #0
   14344:	bne	141f8 <__errno_location@plt+0x2f68>
   14348:	ldr	r3, [fp, #-20]	; 0xffffffec
   1434c:	ldr	r3, [r3, #44]	; 0x2c
   14350:	cmp	r3, #0
   14354:	beq	14374 <__errno_location@plt+0x30e4>
   14358:	ldr	r3, [fp, #-20]	; 0xffffffec
   1435c:	ldr	r0, [r3, #16]
   14360:	ldr	r3, [fp, #-20]	; 0xffffffec
   14364:	ldr	r2, [pc, #24]	; 14384 <__errno_location@plt+0x30f4>
   14368:	add	r2, pc, r2
   1436c:	mov	r1, #2
   14370:	bl	10ffc <rb_setselect@plt>
   14374:	nop			; (mov r0, r0)
   14378:	sub	sp, fp, #4
   1437c:	pop	{fp, pc}
   14380:	andeq	r0, r1, ip, lsl #30
   14384:			; <UNDEFINED> instruction: 0xfffffe3c
   14388:	push	{fp, lr}
   1438c:	add	fp, sp, #4
   14390:	sub	sp, sp, #16384	; 0x4000
   14394:	sub	sp, sp, #16
   14398:	sub	r3, fp, #16384	; 0x4000
   1439c:	sub	r3, r3, #4
   143a0:	str	r0, [r3, #-12]
   143a4:	sub	r3, fp, #16384	; 0x4000
   143a8:	sub	r3, r3, #4
   143ac:	str	r1, [r3, #-16]
   143b0:	sub	r3, fp, #16384	; 0x4000
   143b4:	sub	r3, r3, #4
   143b8:	sub	r3, r3, #4
   143bc:	sub	r2, fp, #16384	; 0x4000
   143c0:	sub	r2, r2, #4
   143c4:	mov	r0, r2
   143c8:	mov	r2, #16384	; 0x4000
   143cc:	mov	r1, r3
   143d0:	ldr	r0, [r0, #-12]
   143d4:	bl	110ec <rb_read@plt>
   143d8:	str	r0, [fp, #-8]
   143dc:	ldr	r3, [fp, #-8]
   143e0:	cmp	r3, #0
   143e4:	bgt	143b0 <__errno_location@plt+0x3120>
   143e8:	ldr	r3, [fp, #-8]
   143ec:	cmp	r3, #0
   143f0:	beq	14420 <__errno_location@plt+0x3190>
   143f4:	ldr	r3, [fp, #-8]
   143f8:	cmp	r3, #0
   143fc:	bge	14428 <__errno_location@plt+0x3198>
   14400:	bl	11290 <__errno_location@plt>
   14404:	mov	r3, r0
   14408:	ldr	r3, [r3]
   1440c:	mov	r0, r3
   14410:	bl	10fcc <rb_ignore_errno@plt>
   14414:	mov	r3, r0
   14418:	cmp	r3, #0
   1441c:	bne	14428 <__errno_location@plt+0x3198>
   14420:	mov	r0, #0
   14424:	bl	11284 <exit@plt>
   14428:	sub	r3, fp, #16384	; 0x4000
   1442c:	sub	r3, r3, #4
   14430:	mov	r0, r3
   14434:	mov	r3, #0
   14438:	ldr	r2, [pc, #24]	; 14458 <__errno_location@plt+0x31c8>
   1443c:	add	r2, pc, r2
   14440:	mov	r1, #1
   14444:	ldr	r0, [r0, #-12]
   14448:	bl	10ffc <rb_setselect@plt>
   1444c:	nop			; (mov r0, r0)
   14450:	sub	sp, fp, #4
   14454:	pop	{fp, pc}
   14458:			; <UNDEFINED> instruction: 0xffffff44
   1445c:	push	{r4, fp, lr}
   14460:	add	fp, sp, #8
   14464:	sub	sp, sp, #60	; 0x3c
   14468:	str	r0, [fp, #-48]	; 0xffffffd0
   1446c:	str	r1, [fp, #-52]	; 0xffffffcc
   14470:	ldr	r4, [pc, #1084]	; 148b4 <__errno_location@plt+0x3624>
   14474:	add	r4, pc, r4
   14478:	bl	12f7c <__errno_location@plt+0x1cec>
   1447c:	str	r0, [fp, #-20]	; 0xffffffec
   14480:	ldr	r3, [pc, #1072]	; 148b8 <__errno_location@plt+0x3628>
   14484:	add	r3, pc, r3
   14488:	mov	r0, r3
   1448c:	bl	11044 <getenv@plt>
   14490:	str	r0, [fp, #-24]	; 0xffffffe8
   14494:	ldr	r3, [pc, #1056]	; 148bc <__errno_location@plt+0x362c>
   14498:	add	r3, pc, r3
   1449c:	mov	r0, r3
   144a0:	bl	11044 <getenv@plt>
   144a4:	str	r0, [fp, #-28]	; 0xffffffe4
   144a8:	ldr	r3, [pc, #1040]	; 148c0 <__errno_location@plt+0x3630>
   144ac:	add	r3, pc, r3
   144b0:	mov	r0, r3
   144b4:	bl	11044 <getenv@plt>
   144b8:	str	r0, [fp, #-32]	; 0xffffffe0
   144bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   144c0:	cmp	r3, #0
   144c4:	beq	144e0 <__errno_location@plt+0x3250>
   144c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   144cc:	cmp	r3, #0
   144d0:	beq	144e0 <__errno_location@plt+0x3250>
   144d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   144d8:	cmp	r3, #0
   144dc:	bne	14528 <__errno_location@plt+0x3298>
   144e0:	ldr	r3, [pc, #988]	; 148c4 <__errno_location@plt+0x3634>
   144e4:	ldr	r3, [r4, r3]
   144e8:	ldr	r3, [r3]
   144ec:	mov	r2, #50	; 0x32
   144f0:	mov	r1, #1
   144f4:	ldr	r0, [pc, #972]	; 148c8 <__errno_location@plt+0x3638>
   144f8:	add	r0, pc, r0
   144fc:	bl	11194 <fwrite@plt>
   14500:	ldr	r3, [pc, #956]	; 148c4 <__errno_location@plt+0x3634>
   14504:	ldr	r3, [r4, r3]
   14508:	ldr	r3, [r3]
   1450c:	mov	r2, #49	; 0x31
   14510:	mov	r1, #1
   14514:	ldr	r0, [pc, #944]	; 148cc <__errno_location@plt+0x363c>
   14518:	add	r0, pc, r0
   1451c:	bl	11194 <fwrite@plt>
   14520:	mov	r0, #1
   14524:	bl	11284 <exit@plt>
   14528:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1452c:	bl	11158 <atoi@plt>
   14530:	str	r0, [fp, #-36]	; 0xffffffdc
   14534:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14538:	bl	11158 <atoi@plt>
   1453c:	str	r0, [fp, #-40]	; 0xffffffd8
   14540:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14544:	bl	11158 <atoi@plt>
   14548:	mov	r2, r0
   1454c:	ldr	r3, [pc, #892]	; 148d0 <__errno_location@plt+0x3640>
   14550:	add	r3, pc, r3
   14554:	str	r2, [r3]
   14558:	mov	r3, #3
   1455c:	str	r3, [fp, #-16]
   14560:	b	14598 <__errno_location@plt+0x3308>
   14564:	ldr	r2, [fp, #-16]
   14568:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1456c:	cmp	r2, r3
   14570:	beq	1458c <__errno_location@plt+0x32fc>
   14574:	ldr	r2, [fp, #-16]
   14578:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1457c:	cmp	r2, r3
   14580:	beq	1458c <__errno_location@plt+0x32fc>
   14584:	ldr	r0, [fp, #-16]
   14588:	bl	11188 <close@plt>
   1458c:	ldr	r3, [fp, #-16]
   14590:	add	r3, r3, #1
   14594:	str	r3, [fp, #-16]
   14598:	ldr	r2, [fp, #-16]
   1459c:	ldr	r3, [fp, #-20]	; 0xffffffec
   145a0:	cmp	r2, r3
   145a4:	blt	14564 <__errno_location@plt+0x32d4>
   145a8:	mov	r1, #2
   145ac:	ldr	r3, [pc, #800]	; 148d4 <__errno_location@plt+0x3644>
   145b0:	add	r3, pc, r3
   145b4:	mov	r0, r3
   145b8:	bl	10f6c <open@plt>
   145bc:	str	r0, [fp, #-16]
   145c0:	ldr	r3, [fp, #-16]
   145c4:	cmp	r3, #0
   145c8:	blt	1464c <__errno_location@plt+0x33bc>
   145cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   145d0:	cmp	r3, #0
   145d4:	beq	145f0 <__errno_location@plt+0x3360>
   145d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   145dc:	cmp	r3, #0
   145e0:	beq	145f0 <__errno_location@plt+0x3360>
   145e4:	mov	r1, #0
   145e8:	ldr	r0, [fp, #-16]
   145ec:	bl	11224 <dup2@plt>
   145f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   145f4:	cmp	r3, #1
   145f8:	beq	14614 <__errno_location@plt+0x3384>
   145fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14600:	cmp	r3, #1
   14604:	beq	14614 <__errno_location@plt+0x3384>
   14608:	mov	r1, #1
   1460c:	ldr	r0, [fp, #-16]
   14610:	bl	11224 <dup2@plt>
   14614:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14618:	cmp	r3, #2
   1461c:	beq	14638 <__errno_location@plt+0x33a8>
   14620:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14624:	cmp	r3, #2
   14628:	beq	14638 <__errno_location@plt+0x33a8>
   1462c:	mov	r1, #2
   14630:	ldr	r0, [fp, #-16]
   14634:	bl	11224 <dup2@plt>
   14638:	ldr	r3, [fp, #-16]
   1463c:	cmp	r3, #2
   14640:	ble	1464c <__errno_location@plt+0x33bc>
   14644:	ldr	r0, [fp, #-16]
   14648:	bl	11188 <close@plt>
   1464c:	bl	14954 <__errno_location@plt+0x36c4>
   14650:	mov	r3, #4096	; 0x1000
   14654:	str	r3, [sp, #8]
   14658:	mov	r3, #1024	; 0x400
   1465c:	str	r3, [sp, #4]
   14660:	ldr	r3, [fp, #-20]	; 0xffffffec
   14664:	str	r3, [sp]
   14668:	mov	r3, #0
   1466c:	mov	r2, #0
   14670:	mov	r1, #0
   14674:	mov	r0, #0
   14678:	bl	111dc <rb_lib_init@plt>
   1467c:	mov	r0, #1024	; 0x400
   14680:	bl	110bc <rb_init_rawbuffers@plt>
   14684:	mov	r1, #1
   14688:	mov	r0, #0
   1468c:	bl	111a0 <rb_init_prng@plt>
   14690:	bl	111b8 <rb_supports_ssl@plt>
   14694:	mov	r3, r0
   14698:	cmp	r3, #0
   1469c:	movne	r3, #1
   146a0:	moveq	r3, #0
   146a4:	uxtb	r2, r3
   146a8:	ldr	r3, [pc, #552]	; 148d8 <__errno_location@plt+0x3648>
   146ac:	add	r3, pc, r3
   146b0:	strb	r2, [r3]
   146b4:	mov	r0, #48	; 0x30
   146b8:	bl	1179c <__errno_location@plt+0x50c>
   146bc:	mov	r2, r0
   146c0:	ldr	r3, [pc, #532]	; 148dc <__errno_location@plt+0x364c>
   146c4:	add	r3, pc, r3
   146c8:	str	r2, [r3]
   146cc:	ldr	r3, [pc, #524]	; 148e0 <__errno_location@plt+0x3650>
   146d0:	add	r3, pc, r3
   146d4:	ldr	r4, [r3]
   146d8:	ldr	r3, [pc, #516]	; 148e4 <__errno_location@plt+0x3654>
   146dc:	add	r3, pc, r3
   146e0:	mov	r2, r3
   146e4:	mov	r1, #4
   146e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   146ec:	bl	111f4 <rb_open@plt>
   146f0:	mov	r3, r0
   146f4:	str	r3, [r4, #16]
   146f8:	ldr	r3, [pc, #488]	; 148e8 <__errno_location@plt+0x3658>
   146fc:	add	r3, pc, r3
   14700:	ldr	r4, [r3]
   14704:	ldr	r3, [pc, #480]	; 148ec <__errno_location@plt+0x365c>
   14708:	add	r3, pc, r3
   1470c:	mov	r2, r3
   14710:	mov	r1, #8
   14714:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14718:	bl	111f4 <rb_open@plt>
   1471c:	mov	r3, r0
   14720:	str	r3, [r4, #20]
   14724:	ldr	r3, [pc, #452]	; 148f0 <__errno_location@plt+0x3660>
   14728:	add	r3, pc, r3
   1472c:	ldr	r3, [r3]
   14730:	ldr	r3, [r3, #16]
   14734:	mov	r0, r3
   14738:	bl	11074 <rb_set_nb@plt>
   1473c:	ldr	r3, [pc, #432]	; 148f4 <__errno_location@plt+0x3664>
   14740:	add	r3, pc, r3
   14744:	ldr	r3, [r3]
   14748:	ldr	r3, [r3, #20]
   1474c:	mov	r0, r3
   14750:	bl	11074 <rb_set_nb@plt>
   14754:	mov	r3, #10
   14758:	mov	r2, #0
   1475c:	ldr	r1, [pc, #404]	; 148f8 <__errno_location@plt+0x3668>
   14760:	add	r1, pc, r1
   14764:	ldr	r0, [pc, #400]	; 148fc <__errno_location@plt+0x366c>
   14768:	add	r0, pc, r0
   1476c:	bl	10fc0 <rb_event_addish@plt>
   14770:	mov	r3, #10
   14774:	mov	r2, #0
   14778:	ldr	r1, [pc, #384]	; 14900 <__errno_location@plt+0x3670>
   1477c:	add	r1, pc, r1
   14780:	ldr	r0, [pc, #380]	; 14904 <__errno_location@plt+0x3674>
   14784:	add	r0, pc, r0
   14788:	bl	11230 <rb_event_add@plt>
   1478c:	ldr	r3, [pc, #372]	; 14908 <__errno_location@plt+0x3678>
   14790:	add	r3, pc, r3
   14794:	ldr	r3, [r3]
   14798:	ldr	r3, [r3, #20]
   1479c:	mov	r1, #0
   147a0:	mov	r0, r3
   147a4:	bl	14388 <__errno_location@plt+0x30f8>
   147a8:	ldr	r3, [pc, #348]	; 1490c <__errno_location@plt+0x367c>
   147ac:	add	r3, pc, r3
   147b0:	ldr	r3, [r3]
   147b4:	ldr	r2, [r3, #16]
   147b8:	ldr	r3, [pc, #336]	; 14910 <__errno_location@plt+0x3680>
   147bc:	add	r3, pc, r3
   147c0:	ldr	r3, [r3]
   147c4:	mov	r1, r3
   147c8:	mov	r0, r2
   147cc:	bl	14014 <__errno_location@plt+0x2d84>
   147d0:	ldr	r3, [pc, #316]	; 14914 <__errno_location@plt+0x3684>
   147d4:	add	r3, pc, r3
   147d8:	ldr	r3, [r3]
   147dc:	mov	r0, r3
   147e0:	bl	13c08 <__errno_location@plt+0x2978>
   147e4:	ldr	r3, [pc, #300]	; 14918 <__errno_location@plt+0x3688>
   147e8:	add	r3, pc, r3
   147ec:	ldrb	r3, [r3]
   147f0:	eor	r3, r3, #1
   147f4:	uxtb	r3, r3
   147f8:	cmp	r3, #0
   147fc:	beq	14844 <__errno_location@plt+0x35b4>
   14800:	ldr	r3, [pc, #276]	; 1491c <__errno_location@plt+0x368c>
   14804:	add	r3, pc, r3
   14808:	ldrb	r3, [r3]
   1480c:	eor	r3, r3, #1
   14810:	uxtb	r3, r3
   14814:	cmp	r3, #0
   14818:	beq	14844 <__errno_location@plt+0x35b4>
   1481c:	ldr	r3, [pc, #252]	; 14920 <__errno_location@plt+0x3690>
   14820:	add	r3, pc, r3
   14824:	ldr	r3, [r3]
   14828:	mov	r0, r3
   1482c:	bl	13bb0 <__errno_location@plt+0x2920>
   14830:	mov	r1, #0
   14834:	mov	r0, #1073741824	; 0x40000000
   14838:	bl	10f78 <rb_sleep@plt>
   1483c:	mov	r0, #1
   14840:	bl	11284 <exit@plt>
   14844:	ldr	r3, [pc, #216]	; 14924 <__errno_location@plt+0x3694>
   14848:	add	r3, pc, r3
   1484c:	ldrb	r3, [r3]
   14850:	eor	r3, r3, #1
   14854:	uxtb	r3, r3
   14858:	cmp	r3, #0
   1485c:	beq	14878 <__errno_location@plt+0x35e8>
   14860:	ldr	r3, [pc, #192]	; 14928 <__errno_location@plt+0x3698>
   14864:	add	r3, pc, r3
   14868:	ldr	r3, [r3]
   1486c:	mov	r1, #0
   14870:	mov	r0, r3
   14874:	bl	13c7c <__errno_location@plt+0x29ec>
   14878:	ldr	r3, [pc, #172]	; 1492c <__errno_location@plt+0x369c>
   1487c:	add	r3, pc, r3
   14880:	ldrb	r3, [r3]
   14884:	eor	r3, r3, #1
   14888:	uxtb	r3, r3
   1488c:	cmp	r3, #0
   14890:	beq	148ac <__errno_location@plt+0x361c>
   14894:	ldr	r3, [pc, #148]	; 14930 <__errno_location@plt+0x36a0>
   14898:	add	r3, pc, r3
   1489c:	ldr	r3, [r3]
   148a0:	mov	r1, #0
   148a4:	mov	r0, r3
   148a8:	bl	13ae8 <__errno_location@plt+0x2858>
   148ac:	mov	r0, #0
   148b0:	bl	110d4 <rb_lib_loop@plt>
   148b4:	andeq	r0, r1, r4, lsl #23
   148b8:	andeq	r0, r0, r4, lsl #16
   148bc:	strdeq	r0, [r0], -r8
   148c0:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   148c4:	andeq	r0, r0, r0, lsr #2
   148c8:			; <UNDEFINED> instruction: 0x000007b0
   148cc:	andeq	r0, r0, r4, asr #15
   148d0:	andeq	r0, r1, ip, ror #23
   148d4:	andeq	r0, r0, r0, ror #14
   148d8:	andeq	r6, r1, r4, ror #16
   148dc:	andeq	r0, r1, ip, ror sl
   148e0:	andeq	r0, r1, r0, ror sl
   148e4:	andeq	r0, r0, r0, asr #12
   148e8:	andeq	r0, r1, r4, asr #20
   148ec:	andeq	r0, r0, r8, lsr #12
   148f0:	andeq	r0, r1, r8, lsl sl
   148f4:	andeq	r0, r1, r0, lsl #20
   148f8:			; <UNDEFINED> instruction: 0xffffd358
   148fc:	ldrdeq	r0, [r0], -r4
   14900:			; <UNDEFINED> instruction: 0xffffd6bc
   14904:	andeq	r0, r0, ip, asr #11
   14908:			; <UNDEFINED> instruction: 0x000109b0
   1490c:	muleq	r1, r4, r9
   14910:	andeq	r0, r1, r4, lsl #19
   14914:	andeq	r0, r1, ip, ror #18
   14918:	andeq	r0, r1, ip, lsr r9
   1491c:	andeq	r6, r1, ip, lsl #14
   14920:	andeq	r0, r1, r0, lsr #18
   14924:	ldrdeq	r0, [r1], -ip
   14928:	ldrdeq	r0, [r1], -ip
   1492c:	muleq	r1, r4, r6
   14930:	andeq	r0, r1, r8, lsr #17
   14934:	push	{fp}		; (str fp, [sp, #-4]!)
   14938:	add	fp, sp, #0
   1493c:	sub	sp, sp, #12
   14940:	str	r0, [fp, #-8]
   14944:	nop			; (mov r0, r0)
   14948:	add	sp, fp, #0
   1494c:	pop	{fp}		; (ldr fp, [sp], #4)
   14950:	bx	lr
   14954:	push	{fp, lr}
   14958:	add	fp, sp, #4
   1495c:	sub	sp, sp, #144	; 0x90
   14960:	mov	r3, #0
   14964:	str	r3, [fp, #-12]
   14968:	mov	r3, #1
   1496c:	str	r3, [fp, #-144]	; 0xffffff70
   14970:	sub	r3, fp, #144	; 0x90
   14974:	add	r3, r3, #4
   14978:	mov	r0, r3
   1497c:	bl	10f84 <sigemptyset@plt>
   14980:	sub	r3, fp, #144	; 0x90
   14984:	add	r3, r3, #4
   14988:	mov	r1, #13
   1498c:	mov	r0, r3
   14990:	bl	11134 <sigaddset@plt>
   14994:	sub	r3, fp, #144	; 0x90
   14998:	add	r3, r3, #4
   1499c:	mov	r1, #14
   149a0:	mov	r0, r3
   149a4:	bl	11134 <sigaddset@plt>
   149a8:	sub	r3, fp, #144	; 0x90
   149ac:	add	r3, r3, #4
   149b0:	mov	r1, #5
   149b4:	mov	r0, r3
   149b8:	bl	11134 <sigaddset@plt>
   149bc:	sub	r3, fp, #144	; 0x90
   149c0:	add	r3, r3, #4
   149c4:	mov	r1, #28
   149c8:	mov	r0, r3
   149cc:	bl	11134 <sigaddset@plt>
   149d0:	sub	r3, fp, #144	; 0x90
   149d4:	mov	r2, #0
   149d8:	mov	r1, r3
   149dc:	mov	r0, #28
   149e0:	bl	111c4 <sigaction@plt>
   149e4:	sub	r3, fp, #144	; 0x90
   149e8:	mov	r2, #0
   149ec:	mov	r1, r3
   149f0:	mov	r0, #13
   149f4:	bl	111c4 <sigaction@plt>
   149f8:	sub	r3, fp, #144	; 0x90
   149fc:	mov	r2, #0
   14a00:	mov	r1, r3
   14a04:	mov	r0, #5
   14a08:	bl	111c4 <sigaction@plt>
   14a0c:	ldr	r3, [pc, #36]	; 14a38 <__errno_location@plt+0x37a8>
   14a10:	add	r3, pc, r3
   14a14:	str	r3, [fp, #-144]	; 0xffffff70
   14a18:	sub	r3, fp, #144	; 0x90
   14a1c:	mov	r2, #0
   14a20:	mov	r1, r3
   14a24:	mov	r0, #14
   14a28:	bl	111c4 <sigaction@plt>
   14a2c:	nop			; (mov r0, r0)
   14a30:	sub	sp, fp, #4
   14a34:	pop	{fp, pc}
   14a38:			; <UNDEFINED> instruction: 0xffffff1c
   14a3c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14a40:	mov	r7, r0
   14a44:	ldr	r6, [pc, #72]	; 14a94 <__errno_location@plt+0x3804>
   14a48:	ldr	r5, [pc, #72]	; 14a98 <__errno_location@plt+0x3808>
   14a4c:	add	r6, pc, r6
   14a50:	add	r5, pc, r5
   14a54:	sub	r6, r6, r5
   14a58:	mov	r8, r1
   14a5c:	mov	r9, r2
   14a60:	bl	10f4c <open@plt-0x20>
   14a64:	asrs	r6, r6, #2
   14a68:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14a6c:	mov	r4, #0
   14a70:	add	r4, r4, #1
   14a74:	ldr	r3, [r5], #4
   14a78:	mov	r2, r9
   14a7c:	mov	r1, r8
   14a80:	mov	r0, r7
   14a84:	blx	r3
   14a88:	cmp	r6, r4
   14a8c:	bne	14a70 <__errno_location@plt+0x37e0>
   14a90:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14a94:	muleq	r1, ip, r4
   14a98:	muleq	r1, r4, r4
   14a9c:	bx	lr

Disassembly of section .fini:

00014aa0 <.fini>:
   14aa0:	push	{r3, lr}
   14aa4:	pop	{r3, pc}
