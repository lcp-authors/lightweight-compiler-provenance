
../repos/prog2/MT1E1-2.2:     file format elf32-littlearm


Disassembly of section .init:

00010720 <.init>:
   10720:	push	{r3, lr}
   10724:	bl	10824 <_start@@Base+0x3c>
   10728:	pop	{r3, pc}

Disassembly of section .plt:

0001072c <strcmp@plt-0x14>:
   1072c:	push	{lr}		; (str lr, [sp, #-4]!)
   10730:	ldr	lr, [pc, #4]	; 1073c <strcmp@plt-0x4>
   10734:	add	lr, pc, lr
   10738:	ldr	pc, [lr, #8]!
   1073c:	andeq	r0, r1, r4, asr #17

00010740 <strcmp@plt>:
   10740:	add	ip, pc, #0, 12
   10744:	add	ip, ip, #16, 20	; 0x10000
   10748:	ldr	pc, [ip, #2244]!	; 0x8c4

0001074c <__isoc99_fscanf@plt>:
   1074c:	add	ip, pc, #0, 12
   10750:	add	ip, ip, #16, 20	; 0x10000
   10754:	ldr	pc, [ip, #2236]!	; 0x8bc

00010758 <fopen@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #16, 20	; 0x10000
   10760:	ldr	pc, [ip, #2228]!	; 0x8b4

00010764 <free@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #16, 20	; 0x10000
   1076c:	ldr	pc, [ip, #2220]!	; 0x8ac

00010770 <realloc@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #16, 20	; 0x10000
   10778:	ldr	pc, [ip, #2212]!	; 0x8a4

0001077c <fwrite@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #16, 20	; 0x10000
   10784:	ldr	pc, [ip, #2204]!	; 0x89c

00010788 <strcpy@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #16, 20	; 0x10000
   10790:	ldr	pc, [ip, #2196]!	; 0x894

00010794 <malloc@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #16, 20	; 0x10000
   1079c:	ldr	pc, [ip, #2188]!	; 0x88c

000107a0 <__libc_start_main@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #16, 20	; 0x10000
   107a8:	ldr	pc, [ip, #2180]!	; 0x884

000107ac <__gmon_start__@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #16, 20	; 0x10000
   107b4:	ldr	pc, [ip, #2172]!	; 0x87c

000107b8 <strlen@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #16, 20	; 0x10000
   107c0:	ldr	pc, [ip, #2164]!	; 0x874

000107c4 <fprintf@plt>:
   107c4:	add	ip, pc, #0, 12
   107c8:	add	ip, ip, #16, 20	; 0x10000
   107cc:	ldr	pc, [ip, #2156]!	; 0x86c

000107d0 <fclose@plt>:
   107d0:	add	ip, pc, #0, 12
   107d4:	add	ip, ip, #16, 20	; 0x10000
   107d8:	ldr	pc, [ip, #2148]!	; 0x864

000107dc <abort@plt>:
   107dc:	add	ip, pc, #0, 12
   107e0:	add	ip, ip, #16, 20	; 0x10000
   107e4:	ldr	pc, [ip, #2140]!	; 0x85c

Disassembly of section .text:

000107e8 <_start@@Base>:
   107e8:	mov	fp, #0
   107ec:	mov	lr, #0
   107f0:	pop	{r1}		; (ldr r1, [sp], #4)
   107f4:	mov	r2, sp
   107f8:	push	{r2}		; (str r2, [sp, #-4]!)
   107fc:	push	{r0}		; (str r0, [sp, #-4]!)
   10800:	ldr	ip, [pc, #16]	; 10818 <_start@@Base+0x30>
   10804:	push	{ip}		; (str ip, [sp, #-4]!)
   10808:	ldr	r0, [pc, #12]	; 1081c <_start@@Base+0x34>
   1080c:	ldr	r3, [pc, #12]	; 10820 <_start@@Base+0x38>
   10810:	bl	107a0 <__libc_start_main@plt>
   10814:	bl	107dc <abort@plt>
   10818:	andeq	r0, r1, r8, lsl #28
   1081c:	andeq	r0, r1, r8, ror #24
   10820:	andeq	r0, r1, r8, lsr #27
   10824:	ldr	r3, [pc, #20]	; 10840 <_start@@Base+0x58>
   10828:	ldr	r2, [pc, #20]	; 10844 <_start@@Base+0x5c>
   1082c:	add	r3, pc, r3
   10830:	ldr	r2, [r3, r2]
   10834:	cmp	r2, #0
   10838:	bxeq	lr
   1083c:	b	107ac <__gmon_start__@plt>
   10840:	andeq	r0, r1, ip, asr #15
   10844:	andeq	r0, r0, r8, asr #32
   10848:	ldr	r3, [pc, #28]	; 1086c <_start@@Base+0x84>
   1084c:	ldr	r0, [pc, #28]	; 10870 <_start@@Base+0x88>
   10850:	sub	r3, r3, r0
   10854:	cmp	r3, #6
   10858:	bxls	lr
   1085c:	ldr	r3, [pc, #16]	; 10874 <_start@@Base+0x8c>
   10860:	cmp	r3, #0
   10864:	bxeq	lr
   10868:	bx	r3
   1086c:	andeq	r1, r2, r7, asr r0
   10870:	andeq	r1, r2, r4, asr r0
   10874:	andeq	r0, r0, r0
   10878:	ldr	r1, [pc, #36]	; 108a4 <_start@@Base+0xbc>
   1087c:	ldr	r0, [pc, #36]	; 108a8 <_start@@Base+0xc0>
   10880:	sub	r1, r1, r0
   10884:	asr	r1, r1, #2
   10888:	add	r1, r1, r1, lsr #31
   1088c:	asrs	r1, r1, #1
   10890:	bxeq	lr
   10894:	ldr	r3, [pc, #16]	; 108ac <_start@@Base+0xc4>
   10898:	cmp	r3, #0
   1089c:	bxeq	lr
   108a0:	bx	r3
   108a4:	andeq	r1, r2, r4, asr r0
   108a8:	andeq	r1, r2, r4, asr r0
   108ac:	andeq	r0, r0, r0
   108b0:	push	{r4, lr}
   108b4:	ldr	r4, [pc, #24]	; 108d4 <_start@@Base+0xec>
   108b8:	ldrb	r3, [r4]
   108bc:	cmp	r3, #0
   108c0:	popne	{r4, pc}
   108c4:	bl	10848 <_start@@Base+0x60>
   108c8:	mov	r3, #1
   108cc:	strb	r3, [r4]
   108d0:	pop	{r4, pc}
   108d4:	andeq	r1, r2, r4, asr r0
   108d8:	ldr	r0, [pc, #40]	; 10908 <_start@@Base+0x120>
   108dc:	ldr	r3, [r0]
   108e0:	cmp	r3, #0
   108e4:	bne	108ec <_start@@Base+0x104>
   108e8:	b	10878 <_start@@Base+0x90>
   108ec:	ldr	r3, [pc, #24]	; 1090c <_start@@Base+0x124>
   108f0:	cmp	r3, #0
   108f4:	beq	108e8 <_start@@Base+0x100>
   108f8:	push	{r4, lr}
   108fc:	blx	r3
   10900:	pop	{r4, lr}
   10904:	b	10878 <_start@@Base+0x90>
   10908:	andeq	r0, r2, r4, lsl pc
   1090c:	andeq	r0, r0, r0

00010910 <conta_vitorias@@Base>:
   10910:	push	{fp, lr}
   10914:	add	fp, sp, #4
   10918:	sub	sp, sp, #64	; 0x40
   1091c:	str	r0, [fp, #-64]	; 0xffffffc0
   10920:	str	r1, [fp, #-68]	; 0xffffffbc
   10924:	mov	r0, #20
   10928:	bl	10794 <malloc@plt>
   1092c:	mov	r3, r0
   10930:	str	r3, [fp, #-8]
   10934:	ldr	r3, [fp, #-8]
   10938:	cmp	r3, #0
   1093c:	bne	10948 <conta_vitorias@@Base+0x38>
   10940:	mov	r3, #0
   10944:	b	10c58 <conta_vitorias@@Base+0x348>
   10948:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1094c:	mov	r2, #0
   10950:	str	r2, [r3]
   10954:	b	10ae4 <conta_vitorias@@Base+0x1d4>
   10958:	sub	r3, fp, #36	; 0x24
   1095c:	mov	r0, r3
   10960:	bl	107b8 <strlen@plt>
   10964:	mov	r3, r0
   10968:	sub	r2, fp, #4
   1096c:	add	r3, r2, r3
   10970:	mov	r2, #0
   10974:	strb	r2, [r3, #-32]	; 0xffffffe0
   10978:	mov	r3, #0
   1097c:	str	r3, [fp, #-20]	; 0xffffffec
   10980:	mov	r3, #0
   10984:	str	r3, [fp, #-12]
   10988:	b	10a10 <conta_vitorias@@Base+0x100>
   1098c:	ldr	r2, [fp, #-12]
   10990:	mov	r3, r2
   10994:	lsl	r3, r3, #2
   10998:	add	r3, r3, r2
   1099c:	lsl	r3, r3, #2
   109a0:	mov	r2, r3
   109a4:	ldr	r3, [fp, #-8]
   109a8:	add	r3, r3, r2
   109ac:	mov	r2, r3
   109b0:	sub	r3, fp, #36	; 0x24
   109b4:	mov	r1, r2
   109b8:	mov	r0, r3
   109bc:	bl	10740 <strcmp@plt>
   109c0:	mov	r3, r0
   109c4:	cmp	r3, #0
   109c8:	bne	10a04 <conta_vitorias@@Base+0xf4>
   109cc:	ldr	r2, [fp, #-12]
   109d0:	mov	r3, r2
   109d4:	lsl	r3, r3, #2
   109d8:	add	r3, r3, r2
   109dc:	lsl	r3, r3, #2
   109e0:	mov	r2, r3
   109e4:	ldr	r3, [fp, #-8]
   109e8:	add	r3, r3, r2
   109ec:	ldr	r2, [r3, #16]
   109f0:	add	r2, r2, #1
   109f4:	str	r2, [r3, #16]
   109f8:	mov	r3, #1
   109fc:	str	r3, [fp, #-20]	; 0xffffffec
   10a00:	b	10a24 <conta_vitorias@@Base+0x114>
   10a04:	ldr	r3, [fp, #-12]
   10a08:	add	r3, r3, #1
   10a0c:	str	r3, [fp, #-12]
   10a10:	ldr	r3, [fp, #-68]	; 0xffffffbc
   10a14:	ldr	r2, [r3]
   10a18:	ldr	r3, [fp, #-12]
   10a1c:	cmp	r2, r3
   10a20:	bgt	1098c <conta_vitorias@@Base+0x7c>
   10a24:	ldr	r3, [fp, #-20]	; 0xffffffec
   10a28:	cmp	r3, #0
   10a2c:	bne	10ae4 <conta_vitorias@@Base+0x1d4>
   10a30:	ldr	r3, [fp, #-68]	; 0xffffffbc
   10a34:	ldr	r3, [r3]
   10a38:	add	r3, r3, #1
   10a3c:	mov	r2, r3
   10a40:	mov	r3, r2
   10a44:	lsl	r3, r3, #2
   10a48:	add	r3, r3, r2
   10a4c:	lsl	r3, r3, #2
   10a50:	mov	r1, r3
   10a54:	ldr	r0, [fp, #-8]
   10a58:	bl	10770 <realloc@plt>
   10a5c:	str	r0, [fp, #-8]
   10a60:	ldr	r3, [fp, #-8]
   10a64:	cmp	r3, #0
   10a68:	bne	10a74 <conta_vitorias@@Base+0x164>
   10a6c:	mov	r3, #0
   10a70:	b	10c58 <conta_vitorias@@Base+0x348>
   10a74:	ldr	r2, [fp, #-12]
   10a78:	mov	r3, r2
   10a7c:	lsl	r3, r3, #2
   10a80:	add	r3, r3, r2
   10a84:	lsl	r3, r3, #2
   10a88:	mov	r2, r3
   10a8c:	ldr	r3, [fp, #-8]
   10a90:	add	r3, r3, r2
   10a94:	mov	r2, r3
   10a98:	sub	r3, fp, #36	; 0x24
   10a9c:	mov	r1, r3
   10aa0:	mov	r0, r2
   10aa4:	bl	10788 <strcpy@plt>
   10aa8:	ldr	r2, [fp, #-12]
   10aac:	mov	r3, r2
   10ab0:	lsl	r3, r3, #2
   10ab4:	add	r3, r3, r2
   10ab8:	lsl	r3, r3, #2
   10abc:	mov	r2, r3
   10ac0:	ldr	r3, [fp, #-8]
   10ac4:	add	r3, r3, r2
   10ac8:	mov	r2, #1
   10acc:	str	r2, [r3, #16]
   10ad0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   10ad4:	ldr	r3, [r3]
   10ad8:	add	r2, r3, #1
   10adc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   10ae0:	str	r2, [r3]
   10ae4:	sub	r3, fp, #36	; 0x24
   10ae8:	mov	r2, r3
   10aec:	ldr	r3, [pc, #368]	; 10c64 <conta_vitorias@@Base+0x354>
   10af0:	add	r3, pc, r3
   10af4:	mov	r1, r3
   10af8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   10afc:	bl	1074c <__isoc99_fscanf@plt>
   10b00:	mov	r3, r0
   10b04:	cmp	r3, #1
   10b08:	beq	10958 <conta_vitorias@@Base+0x48>
   10b0c:	mov	r3, #1
   10b10:	str	r3, [fp, #-12]
   10b14:	b	10c40 <conta_vitorias@@Base+0x330>
   10b18:	ldr	r2, [fp, #-12]
   10b1c:	mov	r3, r2
   10b20:	lsl	r3, r3, #2
   10b24:	add	r3, r3, r2
   10b28:	lsl	r3, r3, #2
   10b2c:	mov	r2, r3
   10b30:	ldr	r3, [fp, #-8]
   10b34:	add	r3, r3, r2
   10b38:	sub	ip, fp, #56	; 0x38
   10b3c:	mov	lr, r3
   10b40:	ldm	lr!, {r0, r1, r2, r3}
   10b44:	stmia	ip!, {r0, r1, r2, r3}
   10b48:	ldr	r3, [lr]
   10b4c:	str	r3, [ip]
   10b50:	ldr	r3, [fp, #-12]
   10b54:	str	r3, [fp, #-16]
   10b58:	b	10bc0 <conta_vitorias@@Base+0x2b0>
   10b5c:	ldr	r2, [fp, #-16]
   10b60:	mov	r3, r2
   10b64:	lsl	r3, r3, #2
   10b68:	add	r3, r3, r2
   10b6c:	lsl	r3, r3, #2
   10b70:	mov	r2, r3
   10b74:	ldr	r3, [fp, #-8]
   10b78:	add	r1, r3, r2
   10b7c:	ldr	r2, [fp, #-16]
   10b80:	mov	r3, r2
   10b84:	lsl	r3, r3, #2
   10b88:	add	r3, r3, r2
   10b8c:	lsl	r3, r3, #2
   10b90:	sub	r3, r3, #20
   10b94:	ldr	r2, [fp, #-8]
   10b98:	add	r3, r2, r3
   10b9c:	mov	ip, r1
   10ba0:	mov	lr, r3
   10ba4:	ldm	lr!, {r0, r1, r2, r3}
   10ba8:	stmia	ip!, {r0, r1, r2, r3}
   10bac:	ldr	r3, [lr]
   10bb0:	str	r3, [ip]
   10bb4:	ldr	r3, [fp, #-16]
   10bb8:	sub	r3, r3, #1
   10bbc:	str	r3, [fp, #-16]
   10bc0:	ldr	r3, [fp, #-16]
   10bc4:	cmp	r3, #0
   10bc8:	ble	10bfc <conta_vitorias@@Base+0x2ec>
   10bcc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10bd0:	ldr	r2, [fp, #-16]
   10bd4:	mov	r3, r2
   10bd8:	lsl	r3, r3, #2
   10bdc:	add	r3, r3, r2
   10be0:	lsl	r3, r3, #2
   10be4:	sub	r3, r3, #20
   10be8:	ldr	r2, [fp, #-8]
   10bec:	add	r3, r2, r3
   10bf0:	ldr	r3, [r3, #16]
   10bf4:	cmp	r1, r3
   10bf8:	bgt	10b5c <conta_vitorias@@Base+0x24c>
   10bfc:	ldr	r2, [fp, #-16]
   10c00:	mov	r3, r2
   10c04:	lsl	r3, r3, #2
   10c08:	add	r3, r3, r2
   10c0c:	lsl	r3, r3, #2
   10c10:	mov	r2, r3
   10c14:	ldr	r3, [fp, #-8]
   10c18:	add	r3, r3, r2
   10c1c:	mov	lr, r3
   10c20:	sub	ip, fp, #56	; 0x38
   10c24:	ldm	ip!, {r0, r1, r2, r3}
   10c28:	stmia	lr!, {r0, r1, r2, r3}
   10c2c:	ldr	r3, [ip]
   10c30:	str	r3, [lr]
   10c34:	ldr	r3, [fp, #-12]
   10c38:	add	r3, r3, #1
   10c3c:	str	r3, [fp, #-12]
   10c40:	ldr	r3, [fp, #-68]	; 0xffffffbc
   10c44:	ldr	r2, [r3]
   10c48:	ldr	r3, [fp, #-12]
   10c4c:	cmp	r2, r3
   10c50:	bgt	10b18 <conta_vitorias@@Base+0x208>
   10c54:	ldr	r3, [fp, #-8]
   10c58:	mov	r0, r3
   10c5c:	sub	sp, fp, #4
   10c60:	pop	{fp, pc}
   10c64:	andeq	r0, r0, r0, lsr #6

00010c68 <main@@Base>:
   10c68:	push	{r4, fp, lr}
   10c6c:	add	fp, sp, #8
   10c70:	sub	sp, sp, #20
   10c74:	ldr	r4, [pc, #276]	; 10d90 <main@@Base+0x128>
   10c78:	add	r4, pc, r4
   10c7c:	ldr	r3, [pc, #272]	; 10d94 <main@@Base+0x12c>
   10c80:	add	r3, pc, r3
   10c84:	mov	r1, r3
   10c88:	ldr	r3, [pc, #264]	; 10d98 <main@@Base+0x130>
   10c8c:	add	r3, pc, r3
   10c90:	mov	r0, r3
   10c94:	bl	10758 <fopen@plt>
   10c98:	str	r0, [fp, #-20]	; 0xffffffec
   10c9c:	mov	r3, #0
   10ca0:	str	r3, [fp, #-28]	; 0xffffffe4
   10ca4:	sub	r3, fp, #28
   10ca8:	mov	r1, r3
   10cac:	ldr	r0, [fp, #-20]	; 0xffffffec
   10cb0:	bl	10910 <conta_vitorias@@Base>
   10cb4:	str	r0, [fp, #-24]	; 0xffffffe8
   10cb8:	ldr	r3, [pc, #220]	; 10d9c <main@@Base+0x134>
   10cbc:	ldr	r3, [r4, r3]
   10cc0:	ldr	r3, [r3]
   10cc4:	mov	r2, #12
   10cc8:	mov	r1, #1
   10ccc:	ldr	r0, [pc, #204]	; 10da0 <main@@Base+0x138>
   10cd0:	add	r0, pc, r0
   10cd4:	bl	1077c <fwrite@plt>
   10cd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10cdc:	cmp	r3, #0
   10ce0:	beq	10d70 <main@@Base+0x108>
   10ce4:	mov	r3, #0
   10ce8:	str	r3, [fp, #-16]
   10cec:	b	10d60 <main@@Base+0xf8>
   10cf0:	ldr	r3, [pc, #164]	; 10d9c <main@@Base+0x134>
   10cf4:	ldr	r3, [r4, r3]
   10cf8:	ldr	r0, [r3]
   10cfc:	ldr	r2, [fp, #-16]
   10d00:	mov	r3, r2
   10d04:	lsl	r3, r3, #2
   10d08:	add	r3, r3, r2
   10d0c:	lsl	r3, r3, #2
   10d10:	mov	r2, r3
   10d14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10d18:	add	r3, r3, r2
   10d1c:	mov	r1, r3
   10d20:	ldr	r2, [fp, #-16]
   10d24:	mov	r3, r2
   10d28:	lsl	r3, r3, #2
   10d2c:	add	r3, r3, r2
   10d30:	lsl	r3, r3, #2
   10d34:	mov	r2, r3
   10d38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10d3c:	add	r3, r3, r2
   10d40:	ldr	r3, [r3, #16]
   10d44:	mov	r2, r1
   10d48:	ldr	r1, [pc, #84]	; 10da4 <main@@Base+0x13c>
   10d4c:	add	r1, pc, r1
   10d50:	bl	107c4 <fprintf@plt>
   10d54:	ldr	r3, [fp, #-16]
   10d58:	add	r3, r3, #1
   10d5c:	str	r3, [fp, #-16]
   10d60:	ldr	r3, [fp, #-28]	; 0xffffffe4
   10d64:	ldr	r2, [fp, #-16]
   10d68:	cmp	r2, r3
   10d6c:	blt	10cf0 <main@@Base+0x88>
   10d70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10d74:	bl	10764 <free@plt>
   10d78:	ldr	r0, [fp, #-20]	; 0xffffffec
   10d7c:	bl	107d0 <fclose@plt>
   10d80:	mov	r3, #0
   10d84:	mov	r0, r3
   10d88:	sub	sp, fp, #8
   10d8c:	pop	{r4, fp, pc}
   10d90:	andeq	r0, r1, r0, lsl #7
   10d94:	muleq	r0, r4, r1
   10d98:	andeq	r0, r0, ip, lsl #3
   10d9c:	andeq	r0, r0, r4, asr #32
   10da0:	andeq	r0, r0, r0, asr r1
   10da4:	andeq	r0, r0, r4, ror #1

00010da8 <__libc_csu_init@@Base>:
   10da8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10dac:	mov	r7, r0
   10db0:	ldr	r6, [pc, #72]	; 10e00 <__libc_csu_init@@Base+0x58>
   10db4:	ldr	r5, [pc, #72]	; 10e04 <__libc_csu_init@@Base+0x5c>
   10db8:	add	r6, pc, r6
   10dbc:	add	r5, pc, r5
   10dc0:	sub	r6, r6, r5
   10dc4:	mov	r8, r1
   10dc8:	mov	r9, r2
   10dcc:	bl	10720 <strcmp@plt-0x20>
   10dd0:	asrs	r6, r6, #2
   10dd4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10dd8:	mov	r4, #0
   10ddc:	add	r4, r4, #1
   10de0:	ldr	r3, [r5], #4
   10de4:	mov	r2, r9
   10de8:	mov	r1, r8
   10dec:	mov	r0, r7
   10df0:	blx	r3
   10df4:	cmp	r6, r4
   10df8:	bne	10ddc <__libc_csu_init@@Base+0x34>
   10dfc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10e00:	andeq	r0, r1, r0, asr r1
   10e04:	andeq	r0, r1, r8, asr #2

00010e08 <__libc_csu_fini@@Base>:
   10e08:	bx	lr

Disassembly of section .fini:

00010e0c <.fini>:
   10e0c:	push	{r3, lr}
   10e10:	pop	{r3, pc}
