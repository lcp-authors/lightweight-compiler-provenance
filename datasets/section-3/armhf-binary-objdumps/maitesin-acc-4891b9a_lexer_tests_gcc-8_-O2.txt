
../repos/maitesin-acc-4891b9a/bin/lexer_tests:     file format elf32-littlearm


Disassembly of section .init:

00011f6c <.init>:
   11f6c:	push	{r3, lr}
   11f70:	bl	12838 <_start@@Base+0x3c>
   11f74:	pop	{r3, pc}

Disassembly of section .plt:

00011f78 <fdopen@plt-0x14>:
   11f78:	push	{lr}		; (str lr, [sp, #-4]!)
   11f7c:	ldr	lr, [pc, #4]	; 11f88 <fdopen@plt-0x4>
   11f80:	add	lr, pc, lr
   11f84:	ldr	pc, [lr, #8]!
   11f88:	andeq	sp, r1, r8, ror r0

00011f8c <fdopen@plt>:
   11f8c:	add	ip, pc, #0, 12
   11f90:	add	ip, ip, #118784	; 0x1d000
   11f94:	ldr	pc, [ip, #120]!	; 0x78

00011f98 <raise@plt>:
   11f98:	add	ip, pc, #0, 12
   11f9c:	add	ip, ip, #118784	; 0x1d000
   11fa0:	ldr	pc, [ip, #112]!	; 0x70

00011fa4 <setbuf@plt>:
   11fa4:	add	ip, pc, #0, 12
   11fa8:	add	ip, ip, #118784	; 0x1d000
   11fac:	ldr	pc, [ip, #104]!	; 0x68

00011fb0 <strtol@plt>:
   11fb0:	add	ip, pc, #0, 12
   11fb4:	add	ip, ip, #118784	; 0x1d000
   11fb8:	ldr	pc, [ip, #96]!	; 0x60

00011fbc <longjmp@plt>:
   11fbc:	add	ip, pc, #0, 12
   11fc0:	add	ip, ip, #118784	; 0x1d000
   11fc4:	ldr	pc, [ip, #88]!	; 0x58

00011fc8 <_setjmp@plt>:
   11fc8:	add	ip, pc, #0, 12
   11fcc:	add	ip, ip, #118784	; 0x1d000
   11fd0:	ldr	pc, [ip, #80]!	; 0x50

00011fd4 <free@plt>:
   11fd4:	add	ip, pc, #0, 12
   11fd8:	add	ip, ip, #118784	; 0x1d000
   11fdc:	ldr	pc, [ip, #72]!	; 0x48

00011fe0 <memcpy@plt>:
   11fe0:	add	ip, pc, #0, 12
   11fe4:	add	ip, ip, #118784	; 0x1d000
   11fe8:	ldr	pc, [ip, #64]!	; 0x40

00011fec <ftell@plt>:
   11fec:	add	ip, pc, #0, 12
   11ff0:	add	ip, ip, #118784	; 0x1d000
   11ff4:	ldr	pc, [ip, #56]!	; 0x38

00011ff8 <fwrite@plt>:
   11ff8:	add	ip, pc, #0, 12
   11ffc:	add	ip, ip, #118784	; 0x1d000
   12000:	ldr	pc, [ip, #48]!	; 0x30

00012004 <strcpy@plt>:
   12004:	add	ip, pc, #0, 12
   12008:	add	ip, ip, #118784	; 0x1d000
   1200c:	ldr	pc, [ip, #40]!	; 0x28

00012010 <fread@plt>:
   12010:	add	ip, pc, #0, 12
   12014:	add	ip, ip, #118784	; 0x1d000
   12018:	ldr	pc, [ip, #32]!

0001201c <open64@plt>:
   1201c:	add	ip, pc, #0, 12
   12020:	add	ip, ip, #118784	; 0x1d000
   12024:	ldr	pc, [ip, #24]!

00012028 <getenv@plt>:
   12028:	add	ip, pc, #0, 12
   1202c:	add	ip, ip, #118784	; 0x1d000
   12030:	ldr	pc, [ip, #16]!

00012034 <malloc@plt>:
   12034:	add	ip, pc, #0, 12
   12038:	add	ip, ip, #118784	; 0x1d000
   1203c:	ldr	pc, [ip, #8]!

00012040 <__libc_start_main@plt>:
   12040:	add	ip, pc, #0, 12
   12044:	add	ip, ip, #118784	; 0x1d000
   12048:	ldr	pc, [ip, #0]!

0001204c <__gmon_start__@plt>:
   1204c:	add	ip, pc, #0, 12
   12050:	add	ip, ip, #28, 20	; 0x1c000
   12054:	ldr	pc, [ip, #4088]!	; 0xff8

00012058 <getpid@plt>:
   12058:	add	ip, pc, #0, 12
   1205c:	add	ip, ip, #28, 20	; 0x1c000
   12060:	ldr	pc, [ip, #4080]!	; 0xff0

00012064 <exit@plt>:
   12064:	add	ip, pc, #0, 12
   12068:	add	ip, ip, #28, 20	; 0x1c000
   1206c:	ldr	pc, [ip, #4072]!	; 0xfe8

00012070 <strlen@plt>:
   12070:	add	ip, pc, #0, 12
   12074:	add	ip, ip, #28, 20	; 0x1c000
   12078:	ldr	pc, [ip, #4064]!	; 0xfe0

0001207c <fprintf@plt>:
   1207c:	add	ip, pc, #0, 12
   12080:	add	ip, ip, #28, 20	; 0x1c000
   12084:	ldr	pc, [ip, #4056]!	; 0xfd8

00012088 <__errno_location@plt>:
   12088:	add	ip, pc, #0, 12
   1208c:	add	ip, ip, #28, 20	; 0x1c000
   12090:	ldr	pc, [ip, #4048]!	; 0xfd0

00012094 <mkdir@plt>:
   12094:	add	ip, pc, #0, 12
   12098:	add	ip, ip, #28, 20	; 0x1c000
   1209c:	ldr	pc, [ip, #4040]!	; 0xfc8

000120a0 <memset@plt>:
   120a0:	add	ip, pc, #0, 12
   120a4:	add	ip, ip, #28, 20	; 0x1c000
   120a8:	ldr	pc, [ip, #4032]!	; 0xfc0

000120ac <strncpy@plt>:
   120ac:	add	ip, pc, #0, 12
   120b0:	add	ip, ip, #28, 20	; 0x1c000
   120b4:	ldr	pc, [ip, #4024]!	; 0xfb8

000120b8 <access@plt>:
   120b8:	add	ip, pc, #0, 12
   120bc:	add	ip, ip, #28, 20	; 0x1c000
   120c0:	ldr	pc, [ip, #4016]!	; 0xfb0

000120c4 <fclose@plt>:
   120c4:	add	ip, pc, #0, 12
   120c8:	add	ip, ip, #28, 20	; 0x1c000
   120cc:	ldr	pc, [ip, #4008]!	; 0xfa8

000120d0 <fcntl64@plt>:
   120d0:	add	ip, pc, #0, 12
   120d4:	add	ip, ip, #28, 20	; 0x1c000
   120d8:	ldr	pc, [ip, #4000]!	; 0xfa0

000120dc <vfprintf@plt>:
   120dc:	add	ip, pc, #0, 12
   120e0:	add	ip, ip, #28, 20	; 0x1c000
   120e4:	ldr	pc, [ip, #3992]!	; 0xf98

000120e8 <putc@plt>:
   120e8:	add	ip, pc, #0, 12
   120ec:	add	ip, ip, #28, 20	; 0x1c000
   120f0:	ldr	pc, [ip, #3984]!	; 0xf90

000120f4 <atoi@plt>:
   120f4:	add	ip, pc, #0, 12
   120f8:	add	ip, ip, #28, 20	; 0x1c000
   120fc:	ldr	pc, [ip, #3976]!	; 0xf88

00012100 <fopen64@plt>:
   12100:	add	ip, pc, #0, 12
   12104:	add	ip, ip, #28, 20	; 0x1c000
   12108:	ldr	pc, [ip, #3968]!	; 0xf80

0001210c <fseek@plt>:
   1210c:	add	ip, pc, #0, 12
   12110:	add	ip, ip, #28, 20	; 0x1c000
   12114:	ldr	pc, [ip, #3960]!	; 0xf78

00012118 <abort@plt>:
   12118:	add	ip, pc, #0, 12
   1211c:	add	ip, ip, #28, 20	; 0x1c000
   12120:	ldr	pc, [ip, #3952]!	; 0xf70

00012124 <close@plt>:
   12124:	add	ip, pc, #0, 12
   12128:	add	ip, ip, #28, 20	; 0x1c000
   1212c:	ldr	pc, [ip, #3944]!	; 0xf68

Disassembly of section .text:

00012130 <main@@Base-0x10>:
   12130:	b	1df0c <__gcov_sort_n_vals@@Base+0x430>
   12134:	b	1df0c <__gcov_sort_n_vals@@Base+0x430>
   12138:	b	1df0c <__gcov_sort_n_vals@@Base+0x430>
   1213c:	b	1df0c <__gcov_sort_n_vals@@Base+0x430>

00012140 <main@@Base>:
   12140:	strd	r4, [sp, #-16]!
   12144:	ldr	r4, [pc, #1420]	; 126d8 <main@@Base+0x598>
   12148:	ldr	r0, [pc, #1420]	; 126dc <main@@Base+0x59c>
   1214c:	ldr	r5, [pc, #1420]	; 126e0 <main@@Base+0x5a0>
   12150:	add	r4, pc, r4
   12154:	add	r4, r4, #1984	; 0x7c0
   12158:	ldr	r3, [r4]
   1215c:	add	r0, pc, r0
   12160:	ldr	r2, [r4, #4]
   12164:	str	r6, [sp, #8]
   12168:	add	r5, pc, r5
   1216c:	str	lr, [sp, #12]
   12170:	adds	r3, r3, #1
   12174:	adc	r2, r2, #0
   12178:	str	r3, [r4]
   1217c:	str	r2, [r4, #4]
   12180:	bl	1a508 <UnityBegin@@Base>
   12184:	ldr	r3, [r4, #8]
   12188:	movw	r2, #629	; 0x275
   1218c:	ldr	ip, [r4, #12]
   12190:	ldr	r0, [pc, #1356]	; 126e4 <main@@Base+0x5a4>
   12194:	adds	r3, r3, #1
   12198:	ldr	r1, [pc, #1352]	; 126e8 <main@@Base+0x5a8>
   1219c:	adc	ip, ip, #0
   121a0:	str	r3, [r4, #8]
   121a4:	str	ip, [r4, #12]
   121a8:	ldr	r0, [r5, r0]
   121ac:	add	r1, pc, r1
   121b0:	bl	1a324 <UnityDefaultTestRun@@Base>
   121b4:	ldr	r3, [r4, #16]
   121b8:	movw	r2, #630	; 0x276
   121bc:	ldr	ip, [r4, #20]
   121c0:	ldr	r0, [pc, #1316]	; 126ec <main@@Base+0x5ac>
   121c4:	adds	r3, r3, #1
   121c8:	ldr	r1, [pc, #1312]	; 126f0 <main@@Base+0x5b0>
   121cc:	adc	ip, ip, #0
   121d0:	str	r3, [r4, #16]
   121d4:	str	ip, [r4, #20]
   121d8:	ldr	r0, [r5, r0]
   121dc:	add	r1, pc, r1
   121e0:	bl	1a324 <UnityDefaultTestRun@@Base>
   121e4:	ldr	r3, [r4, #24]
   121e8:	movw	r2, #631	; 0x277
   121ec:	ldr	ip, [r4, #28]
   121f0:	ldr	r0, [pc, #1276]	; 126f4 <main@@Base+0x5b4>
   121f4:	adds	r3, r3, #1
   121f8:	ldr	r1, [pc, #1272]	; 126f8 <main@@Base+0x5b8>
   121fc:	adc	ip, ip, #0
   12200:	str	r3, [r4, #24]
   12204:	str	ip, [r4, #28]
   12208:	ldr	r0, [r5, r0]
   1220c:	add	r1, pc, r1
   12210:	bl	1a324 <UnityDefaultTestRun@@Base>
   12214:	ldr	r3, [r4, #32]
   12218:	mov	r2, #632	; 0x278
   1221c:	ldr	ip, [r4, #36]	; 0x24
   12220:	ldr	r0, [pc, #1236]	; 126fc <main@@Base+0x5bc>
   12224:	adds	r3, r3, #1
   12228:	ldr	r1, [pc, #1232]	; 12700 <main@@Base+0x5c0>
   1222c:	adc	ip, ip, #0
   12230:	str	r3, [r4, #32]
   12234:	str	ip, [r4, #36]	; 0x24
   12238:	ldr	r0, [r5, r0]
   1223c:	add	r1, pc, r1
   12240:	bl	1a324 <UnityDefaultTestRun@@Base>
   12244:	ldr	r3, [r4, #40]	; 0x28
   12248:	movw	r2, #633	; 0x279
   1224c:	ldr	ip, [r4, #44]	; 0x2c
   12250:	ldr	r0, [pc, #1196]	; 12704 <main@@Base+0x5c4>
   12254:	adds	r3, r3, #1
   12258:	ldr	r1, [pc, #1192]	; 12708 <main@@Base+0x5c8>
   1225c:	adc	ip, ip, #0
   12260:	str	r3, [r4, #40]	; 0x28
   12264:	str	ip, [r4, #44]	; 0x2c
   12268:	ldr	r0, [r5, r0]
   1226c:	add	r1, pc, r1
   12270:	bl	1a324 <UnityDefaultTestRun@@Base>
   12274:	ldr	r3, [r4, #48]	; 0x30
   12278:	movw	r2, #634	; 0x27a
   1227c:	ldr	ip, [r4, #52]	; 0x34
   12280:	ldr	r0, [pc, #1156]	; 1270c <main@@Base+0x5cc>
   12284:	adds	r3, r3, #1
   12288:	ldr	r1, [pc, #1152]	; 12710 <main@@Base+0x5d0>
   1228c:	adc	ip, ip, #0
   12290:	str	r3, [r4, #48]	; 0x30
   12294:	str	ip, [r4, #52]	; 0x34
   12298:	ldr	r0, [r5, r0]
   1229c:	add	r1, pc, r1
   122a0:	bl	1a324 <UnityDefaultTestRun@@Base>
   122a4:	ldr	r3, [r4, #56]	; 0x38
   122a8:	movw	r2, #635	; 0x27b
   122ac:	ldr	ip, [r4, #60]	; 0x3c
   122b0:	ldr	r0, [pc, #1116]	; 12714 <main@@Base+0x5d4>
   122b4:	adds	r3, r3, #1
   122b8:	ldr	r1, [pc, #1112]	; 12718 <main@@Base+0x5d8>
   122bc:	adc	ip, ip, #0
   122c0:	str	r3, [r4, #56]	; 0x38
   122c4:	str	ip, [r4, #60]	; 0x3c
   122c8:	ldr	r0, [r5, r0]
   122cc:	add	r1, pc, r1
   122d0:	bl	1a324 <UnityDefaultTestRun@@Base>
   122d4:	ldr	r3, [r4, #64]	; 0x40
   122d8:	mov	r2, #636	; 0x27c
   122dc:	ldr	ip, [r4, #68]	; 0x44
   122e0:	ldr	r0, [pc, #1076]	; 1271c <main@@Base+0x5dc>
   122e4:	adds	r3, r3, #1
   122e8:	ldr	r1, [pc, #1072]	; 12720 <main@@Base+0x5e0>
   122ec:	adc	ip, ip, #0
   122f0:	str	r3, [r4, #64]	; 0x40
   122f4:	str	ip, [r4, #68]	; 0x44
   122f8:	ldr	r0, [r5, r0]
   122fc:	add	r1, pc, r1
   12300:	bl	1a324 <UnityDefaultTestRun@@Base>
   12304:	ldr	r3, [r4, #72]	; 0x48
   12308:	movw	r2, #637	; 0x27d
   1230c:	ldr	ip, [r4, #76]	; 0x4c
   12310:	ldr	r0, [pc, #1036]	; 12724 <main@@Base+0x5e4>
   12314:	adds	r3, r3, #1
   12318:	ldr	r1, [pc, #1032]	; 12728 <main@@Base+0x5e8>
   1231c:	adc	ip, ip, #0
   12320:	str	r3, [r4, #72]	; 0x48
   12324:	str	ip, [r4, #76]	; 0x4c
   12328:	ldr	r0, [r5, r0]
   1232c:	add	r1, pc, r1
   12330:	bl	1a324 <UnityDefaultTestRun@@Base>
   12334:	ldr	r3, [r4, #80]	; 0x50
   12338:	movw	r2, #638	; 0x27e
   1233c:	ldr	ip, [r4, #84]	; 0x54
   12340:	ldr	r0, [pc, #996]	; 1272c <main@@Base+0x5ec>
   12344:	adds	r3, r3, #1
   12348:	ldr	r1, [pc, #992]	; 12730 <main@@Base+0x5f0>
   1234c:	adc	ip, ip, #0
   12350:	str	r3, [r4, #80]	; 0x50
   12354:	str	ip, [r4, #84]	; 0x54
   12358:	ldr	r0, [r5, r0]
   1235c:	add	r1, pc, r1
   12360:	bl	1a324 <UnityDefaultTestRun@@Base>
   12364:	ldr	r3, [r4, #88]	; 0x58
   12368:	movw	r2, #639	; 0x27f
   1236c:	ldr	ip, [r4, #92]	; 0x5c
   12370:	ldr	r0, [pc, #956]	; 12734 <main@@Base+0x5f4>
   12374:	adds	r3, r3, #1
   12378:	ldr	r1, [pc, #952]	; 12738 <main@@Base+0x5f8>
   1237c:	adc	ip, ip, #0
   12380:	str	r3, [r4, #88]	; 0x58
   12384:	str	ip, [r4, #92]	; 0x5c
   12388:	ldr	r0, [r5, r0]
   1238c:	add	r1, pc, r1
   12390:	bl	1a324 <UnityDefaultTestRun@@Base>
   12394:	ldr	r3, [r4, #96]	; 0x60
   12398:	mov	r2, #640	; 0x280
   1239c:	ldr	ip, [r4, #100]	; 0x64
   123a0:	ldr	r0, [pc, #916]	; 1273c <main@@Base+0x5fc>
   123a4:	adds	r3, r3, #1
   123a8:	ldr	r1, [pc, #912]	; 12740 <main@@Base+0x600>
   123ac:	adc	ip, ip, #0
   123b0:	str	r3, [r4, #96]	; 0x60
   123b4:	str	ip, [r4, #100]	; 0x64
   123b8:	ldr	r0, [r5, r0]
   123bc:	add	r1, pc, r1
   123c0:	bl	1a324 <UnityDefaultTestRun@@Base>
   123c4:	ldr	r3, [r4, #104]	; 0x68
   123c8:	movw	r2, #641	; 0x281
   123cc:	ldr	ip, [r4, #108]	; 0x6c
   123d0:	ldr	r0, [pc, #876]	; 12744 <main@@Base+0x604>
   123d4:	adds	r3, r3, #1
   123d8:	ldr	r1, [pc, #872]	; 12748 <main@@Base+0x608>
   123dc:	adc	ip, ip, #0
   123e0:	str	r3, [r4, #104]	; 0x68
   123e4:	str	ip, [r4, #108]	; 0x6c
   123e8:	ldr	r0, [r5, r0]
   123ec:	add	r1, pc, r1
   123f0:	bl	1a324 <UnityDefaultTestRun@@Base>
   123f4:	ldr	r3, [r4, #112]	; 0x70
   123f8:	movw	r2, #642	; 0x282
   123fc:	ldr	ip, [r4, #116]	; 0x74
   12400:	ldr	r0, [pc, #836]	; 1274c <main@@Base+0x60c>
   12404:	adds	r3, r3, #1
   12408:	ldr	r1, [pc, #832]	; 12750 <main@@Base+0x610>
   1240c:	adc	ip, ip, #0
   12410:	str	r3, [r4, #112]	; 0x70
   12414:	str	ip, [r4, #116]	; 0x74
   12418:	ldr	r0, [r5, r0]
   1241c:	add	r1, pc, r1
   12420:	bl	1a324 <UnityDefaultTestRun@@Base>
   12424:	ldr	r3, [r4, #120]	; 0x78
   12428:	movw	r2, #643	; 0x283
   1242c:	ldr	ip, [r4, #124]	; 0x7c
   12430:	ldr	r0, [pc, #796]	; 12754 <main@@Base+0x614>
   12434:	adds	r3, r3, #1
   12438:	ldr	r1, [pc, #792]	; 12758 <main@@Base+0x618>
   1243c:	adc	ip, ip, #0
   12440:	str	r3, [r4, #120]	; 0x78
   12444:	str	ip, [r4, #124]	; 0x7c
   12448:	ldr	r0, [r5, r0]
   1244c:	add	r1, pc, r1
   12450:	bl	1a324 <UnityDefaultTestRun@@Base>
   12454:	ldr	r3, [r4, #128]	; 0x80
   12458:	mov	r2, #644	; 0x284
   1245c:	ldr	ip, [r4, #132]	; 0x84
   12460:	ldr	r0, [pc, #756]	; 1275c <main@@Base+0x61c>
   12464:	adds	r3, r3, #1
   12468:	ldr	r1, [pc, #752]	; 12760 <main@@Base+0x620>
   1246c:	adc	ip, ip, #0
   12470:	str	r3, [r4, #128]	; 0x80
   12474:	str	ip, [r4, #132]	; 0x84
   12478:	ldr	r0, [r5, r0]
   1247c:	add	r1, pc, r1
   12480:	bl	1a324 <UnityDefaultTestRun@@Base>
   12484:	ldr	r3, [r4, #136]	; 0x88
   12488:	movw	r2, #645	; 0x285
   1248c:	ldr	ip, [r4, #140]	; 0x8c
   12490:	ldr	r0, [pc, #716]	; 12764 <main@@Base+0x624>
   12494:	adds	r3, r3, #1
   12498:	ldr	r1, [pc, #712]	; 12768 <main@@Base+0x628>
   1249c:	adc	ip, ip, #0
   124a0:	str	r3, [r4, #136]	; 0x88
   124a4:	str	ip, [r4, #140]	; 0x8c
   124a8:	ldr	r0, [r5, r0]
   124ac:	add	r1, pc, r1
   124b0:	bl	1a324 <UnityDefaultTestRun@@Base>
   124b4:	ldr	r3, [r4, #144]	; 0x90
   124b8:	movw	r2, #646	; 0x286
   124bc:	ldr	ip, [r4, #148]	; 0x94
   124c0:	ldr	r0, [pc, #676]	; 1276c <main@@Base+0x62c>
   124c4:	adds	r3, r3, #1
   124c8:	ldr	r1, [pc, #672]	; 12770 <main@@Base+0x630>
   124cc:	adc	ip, ip, #0
   124d0:	str	r3, [r4, #144]	; 0x90
   124d4:	str	ip, [r4, #148]	; 0x94
   124d8:	ldr	r0, [r5, r0]
   124dc:	add	r1, pc, r1
   124e0:	bl	1a324 <UnityDefaultTestRun@@Base>
   124e4:	ldr	r3, [r4, #152]	; 0x98
   124e8:	movw	r2, #647	; 0x287
   124ec:	ldr	ip, [r4, #156]	; 0x9c
   124f0:	ldr	r0, [pc, #636]	; 12774 <main@@Base+0x634>
   124f4:	adds	r3, r3, #1
   124f8:	ldr	r1, [pc, #632]	; 12778 <main@@Base+0x638>
   124fc:	adc	ip, ip, #0
   12500:	str	r3, [r4, #152]	; 0x98
   12504:	str	ip, [r4, #156]	; 0x9c
   12508:	ldr	r0, [r5, r0]
   1250c:	add	r1, pc, r1
   12510:	bl	1a324 <UnityDefaultTestRun@@Base>
   12514:	ldr	r3, [r4, #160]	; 0xa0
   12518:	mov	r2, #648	; 0x288
   1251c:	ldr	ip, [r4, #164]	; 0xa4
   12520:	ldr	r0, [pc, #596]	; 1277c <main@@Base+0x63c>
   12524:	adds	r3, r3, #1
   12528:	ldr	r1, [pc, #592]	; 12780 <main@@Base+0x640>
   1252c:	adc	ip, ip, #0
   12530:	str	r3, [r4, #160]	; 0xa0
   12534:	str	ip, [r4, #164]	; 0xa4
   12538:	ldr	r0, [r5, r0]
   1253c:	add	r1, pc, r1
   12540:	bl	1a324 <UnityDefaultTestRun@@Base>
   12544:	ldr	r3, [r4, #168]	; 0xa8
   12548:	movw	r2, #649	; 0x289
   1254c:	ldr	ip, [r4, #172]	; 0xac
   12550:	ldr	r0, [pc, #556]	; 12784 <main@@Base+0x644>
   12554:	adds	r3, r3, #1
   12558:	ldr	r1, [pc, #552]	; 12788 <main@@Base+0x648>
   1255c:	adc	ip, ip, #0
   12560:	str	r3, [r4, #168]	; 0xa8
   12564:	str	ip, [r4, #172]	; 0xac
   12568:	ldr	r0, [r5, r0]
   1256c:	add	r1, pc, r1
   12570:	bl	1a324 <UnityDefaultTestRun@@Base>
   12574:	ldr	r3, [r4, #176]	; 0xb0
   12578:	movw	r2, #650	; 0x28a
   1257c:	ldr	ip, [r4, #180]	; 0xb4
   12580:	ldr	r0, [pc, #516]	; 1278c <main@@Base+0x64c>
   12584:	adds	r3, r3, #1
   12588:	ldr	r1, [pc, #512]	; 12790 <main@@Base+0x650>
   1258c:	adc	ip, ip, #0
   12590:	str	r3, [r4, #176]	; 0xb0
   12594:	str	ip, [r4, #180]	; 0xb4
   12598:	ldr	r0, [r5, r0]
   1259c:	add	r1, pc, r1
   125a0:	bl	1a324 <UnityDefaultTestRun@@Base>
   125a4:	ldr	r3, [r4, #184]	; 0xb8
   125a8:	movw	r2, #651	; 0x28b
   125ac:	ldr	ip, [r4, #188]	; 0xbc
   125b0:	ldr	r0, [pc, #476]	; 12794 <main@@Base+0x654>
   125b4:	adds	r3, r3, #1
   125b8:	ldr	r1, [pc, #472]	; 12798 <main@@Base+0x658>
   125bc:	adc	ip, ip, #0
   125c0:	str	r3, [r4, #184]	; 0xb8
   125c4:	str	ip, [r4, #188]	; 0xbc
   125c8:	ldr	r0, [r5, r0]
   125cc:	add	r1, pc, r1
   125d0:	bl	1a324 <UnityDefaultTestRun@@Base>
   125d4:	ldr	r3, [r4, #192]	; 0xc0
   125d8:	mov	r2, #652	; 0x28c
   125dc:	ldr	ip, [r4, #196]	; 0xc4
   125e0:	ldr	r0, [pc, #436]	; 1279c <main@@Base+0x65c>
   125e4:	adds	r3, r3, #1
   125e8:	ldr	r1, [pc, #432]	; 127a0 <main@@Base+0x660>
   125ec:	adc	ip, ip, #0
   125f0:	str	r3, [r4, #192]	; 0xc0
   125f4:	str	ip, [r4, #196]	; 0xc4
   125f8:	ldr	r0, [r5, r0]
   125fc:	add	r1, pc, r1
   12600:	bl	1a324 <UnityDefaultTestRun@@Base>
   12604:	ldr	r3, [r4, #200]	; 0xc8
   12608:	movw	r2, #653	; 0x28d
   1260c:	ldr	ip, [r4, #204]	; 0xcc
   12610:	ldr	r0, [pc, #396]	; 127a4 <main@@Base+0x664>
   12614:	adds	r3, r3, #1
   12618:	ldr	r1, [pc, #392]	; 127a8 <main@@Base+0x668>
   1261c:	adc	ip, ip, #0
   12620:	str	r3, [r4, #200]	; 0xc8
   12624:	str	ip, [r4, #204]	; 0xcc
   12628:	ldr	r0, [r5, r0]
   1262c:	add	r1, pc, r1
   12630:	bl	1a324 <UnityDefaultTestRun@@Base>
   12634:	ldr	r3, [r4, #208]	; 0xd0
   12638:	movw	r2, #654	; 0x28e
   1263c:	ldr	ip, [r4, #212]	; 0xd4
   12640:	ldr	r0, [pc, #356]	; 127ac <main@@Base+0x66c>
   12644:	adds	r3, r3, #1
   12648:	ldr	r1, [pc, #352]	; 127b0 <main@@Base+0x670>
   1264c:	adc	ip, ip, #0
   12650:	str	r3, [r4, #208]	; 0xd0
   12654:	str	ip, [r4, #212]	; 0xd4
   12658:	ldr	r0, [r5, r0]
   1265c:	add	r1, pc, r1
   12660:	bl	1a324 <UnityDefaultTestRun@@Base>
   12664:	ldr	r3, [r4, #216]	; 0xd8
   12668:	movw	r2, #655	; 0x28f
   1266c:	ldr	ip, [r4, #220]	; 0xdc
   12670:	ldr	r0, [pc, #316]	; 127b4 <main@@Base+0x674>
   12674:	adds	r3, r3, #1
   12678:	ldr	r1, [pc, #312]	; 127b8 <main@@Base+0x678>
   1267c:	adc	ip, ip, #0
   12680:	str	r3, [r4, #216]	; 0xd8
   12684:	str	ip, [r4, #220]	; 0xdc
   12688:	ldr	r0, [r5, r0]
   1268c:	add	r1, pc, r1
   12690:	bl	1a324 <UnityDefaultTestRun@@Base>
   12694:	ldr	r3, [r4, #224]	; 0xe0
   12698:	ldr	r2, [r4, #228]	; 0xe4
   1269c:	adds	r3, r3, #1
   126a0:	adc	r2, r2, #0
   126a4:	str	r3, [r4, #224]	; 0xe0
   126a8:	str	r2, [r4, #228]	; 0xe4
   126ac:	bl	1a580 <UnityEnd@@Base>
   126b0:	ldr	r3, [r4, #232]	; 0xe8
   126b4:	ldr	r2, [r4, #236]	; 0xec
   126b8:	ldr	r6, [sp, #8]
   126bc:	adds	r3, r3, #1
   126c0:	adc	r2, r2, #0
   126c4:	str	r3, [r4, #232]	; 0xe8
   126c8:	str	r2, [r4, #236]	; 0xec
   126cc:	ldrd	r4, [sp]
   126d0:	add	sp, sp, #12
   126d4:	pop	{pc}		; (ldr pc, [sp], #4)
   126d8:	andeq	sp, r1, r0, asr #23
   126dc:	andeq	ip, r0, r0, lsr #5
   126e0:	muleq	r1, r0, lr
   126e4:	andeq	r0, r0, r0, ror #2
   126e8:	andeq	ip, r0, ip, lsr #5
   126ec:	andeq	r0, r0, r0, ror r1
   126f0:	muleq	r0, r4, r2
   126f4:	andeq	r0, r0, r0, asr #2
   126f8:	andeq	ip, r0, r8, ror r2
   126fc:	andeq	r0, r0, r8, lsr #2
   12700:	andeq	ip, r0, r4, ror #4
   12704:	andeq	r0, r0, r8, asr r1
   12708:	andeq	ip, r0, r0, asr r2
   1270c:	strheq	r0, [r0], -ip
   12710:	andeq	ip, r0, r0, lsr r2
   12714:	andeq	r0, r0, r4, ror #1
   12718:	andeq	ip, r0, r0, lsl r2
   1271c:	andeq	r0, r0, r0, lsl r1
   12720:	strdeq	ip, [r0], -r4
   12724:	andeq	r0, r0, r8, ror #2
   12728:	ldrdeq	ip, [r0], -ip	; <UNPREDICTABLE>
   1272c:	strdeq	r0, [r0], -r8
   12730:	andeq	ip, r0, r0, asr #3
   12734:	andeq	r0, r0, r4, lsr r1
   12738:	andeq	ip, r0, r0, lsr #3
   1273c:	andeq	r0, r0, r0, lsr #1
   12740:	andeq	ip, r0, r0, lsl #3
   12744:	andeq	r0, r0, ip, asr r1
   12748:	andeq	ip, r0, r0, ror #2
   1274c:	andeq	r0, r0, ip, lsr #2
   12750:	andeq	ip, r0, r0, asr #2
   12754:	andeq	r0, r0, r0, ror #1
   12758:	andeq	ip, r0, r4, lsr #2
   1275c:	andeq	r0, r0, r4, lsr #1
   12760:	andeq	ip, r0, ip, lsl #2
   12764:	andeq	r0, r0, ip, ror #1
   12768:	andeq	ip, r0, ip, ror #1
   1276c:	andeq	r0, r0, ip, asr #2
   12770:	andeq	ip, r0, ip, asr #1
   12774:	andeq	r0, r0, r4, ror r1
   12778:	andeq	ip, r0, ip, lsr #1
   1277c:	andeq	r0, r0, ip, ror #2
   12780:	muleq	r0, r4, r0
   12784:	muleq	r0, r8, r0
   12788:	andeq	ip, r0, r8, ror r0
   1278c:	strdeq	r0, [r0], -ip
   12790:	andeq	ip, r0, r4, rrx
   12794:	strheq	r0, [r0], -r4
   12798:	andeq	ip, r0, r0, asr r0
   1279c:	andeq	r0, r0, r0, asr #1
   127a0:	andeq	ip, r0, r0, lsr r0
   127a4:	andeq	r0, r0, r0, asr r1
   127a8:	andeq	ip, r0, r4, lsl r0
   127ac:	ldrdeq	r0, [r0], -r4
   127b0:	strdeq	fp, [r0], -r8
   127b4:	andeq	r0, r0, r4, lsl r1
   127b8:	andeq	fp, r0, r0, ror #31
   127bc:	ldr	r0, [pc, #4]	; 127c8 <main@@Base+0x688>
   127c0:	add	r0, pc, r0
   127c4:	b	1df7c <__gcov_sort_n_vals@@Base+0x4a0>
   127c8:	andeq	ip, r1, r0, asr #19
   127cc:	ldr	r0, [pc, #4]	; 127d8 <main@@Base+0x698>
   127d0:	add	r0, pc, r0
   127d4:	b	1df7c <__gcov_sort_n_vals@@Base+0x4a0>
   127d8:	andeq	ip, r1, ip, lsl #26
   127dc:	ldr	r0, [pc, #4]	; 127e8 <main@@Base+0x6a8>
   127e0:	add	r0, pc, r0
   127e4:	b	1df7c <__gcov_sort_n_vals@@Base+0x4a0>
   127e8:	strdeq	sp, [r1], -r0
   127ec:	ldr	r0, [pc, #4]	; 127f8 <main@@Base+0x6b8>
   127f0:	add	r0, pc, r0
   127f4:	b	1df7c <__gcov_sort_n_vals@@Base+0x4a0>
   127f8:	strdeq	sp, [r1], -r4

000127fc <_start@@Base>:
   127fc:	mov	fp, #0
   12800:	mov	lr, #0
   12804:	pop	{r1}		; (ldr r1, [sp], #4)
   12808:	mov	r2, sp
   1280c:	push	{r2}		; (str r2, [sp, #-4]!)
   12810:	push	{r0}		; (str r0, [sp, #-4]!)
   12814:	ldr	ip, [pc, #16]	; 1282c <_start@@Base+0x30>
   12818:	push	{ip}		; (str ip, [sp, #-4]!)
   1281c:	ldr	r0, [pc, #12]	; 12830 <_start@@Base+0x34>
   12820:	ldr	r3, [pc, #12]	; 12834 <_start@@Base+0x38>
   12824:	bl	12040 <__libc_start_main@plt>
   12828:	bl	12118 <abort@plt>
   1282c:	strdeq	lr, [r1], -r4
   12830:	andeq	r2, r1, r0, asr #2
   12834:	muleq	r1, r4, r2
   12838:	ldr	r3, [pc, #20]	; 12854 <_start@@Base+0x58>
   1283c:	ldr	r2, [pc, #20]	; 12858 <_start@@Base+0x5c>
   12840:	add	r3, pc, r3
   12844:	ldr	r2, [r3, r2]
   12848:	cmp	r2, #0
   1284c:	bxeq	lr
   12850:	b	1204c <__gmon_start__@plt>
   12854:			; <UNDEFINED> instruction: 0x0001c7b8
   12858:	andeq	r0, r0, r8, lsl #2
   1285c:	ldr	r0, [pc, #24]	; 1287c <_start@@Base+0x80>
   12860:	ldr	r3, [pc, #24]	; 12880 <_start@@Base+0x84>
   12864:	cmp	r3, r0
   12868:	bxeq	lr
   1286c:	ldr	r3, [pc, #16]	; 12884 <_start@@Base+0x88>
   12870:	cmp	r3, #0
   12874:	bxeq	lr
   12878:	bx	r3
   1287c:	andeq	pc, r2, r0, lsl sp	; <UNPREDICTABLE>
   12880:	andeq	pc, r2, r0, lsl sp	; <UNPREDICTABLE>
   12884:	andeq	r0, r0, r0
   12888:	ldr	r0, [pc, #36]	; 128b4 <_start@@Base+0xb8>
   1288c:	ldr	r1, [pc, #36]	; 128b8 <_start@@Base+0xbc>
   12890:	sub	r1, r1, r0
   12894:	asr	r1, r1, #2
   12898:	add	r1, r1, r1, lsr #31
   1289c:	asrs	r1, r1, #1
   128a0:	bxeq	lr
   128a4:	ldr	r3, [pc, #16]	; 128bc <_start@@Base+0xc0>
   128a8:	cmp	r3, #0
   128ac:	bxeq	lr
   128b0:	bx	r3
   128b4:	andeq	pc, r2, r0, lsl sp	; <UNPREDICTABLE>
   128b8:	andeq	pc, r2, r0, lsl sp	; <UNPREDICTABLE>
   128bc:	andeq	r0, r0, r0
   128c0:	push	{r4, lr}
   128c4:	ldr	r4, [pc, #24]	; 128e4 <_start@@Base+0xe8>
   128c8:	ldrb	r3, [r4]
   128cc:	cmp	r3, #0
   128d0:	popne	{r4, pc}
   128d4:	bl	1285c <_start@@Base+0x60>
   128d8:	mov	r3, #1
   128dc:	strb	r3, [r4]
   128e0:	pop	{r4, pc}
   128e4:	andeq	pc, r2, r0, lsl sp	; <UNPREDICTABLE>
   128e8:	b	12888 <_start@@Base+0x8c>

000128ec <read_token_not@@Base>:
   128ec:	strd	r4, [sp, #-12]!
   128f0:	ldr	r4, [pc, #208]	; 129c8 <read_token_not@@Base+0xdc>
   128f4:	ldr	r1, [pc, #208]	; 129cc <read_token_not@@Base+0xe0>
   128f8:	add	r4, pc, r4
   128fc:	ldr	r3, [r4]
   12900:	add	r1, pc, r1
   12904:	ldr	r2, [r4, #4]
   12908:	str	lr, [sp, #8]
   1290c:	sub	sp, sp, #28
   12910:	add	r5, sp, #12
   12914:	adds	r3, r3, #1
   12918:	mov	r0, r5
   1291c:	adc	r2, r2, #0
   12920:	str	r3, [r4]
   12924:	str	r2, [r4, #4]
   12928:	bl	1acc8 <init_lexer@@Base>
   1292c:	ldr	r3, [r4, #8]
   12930:	mov	r0, r5
   12934:	ldr	r2, [r4, #12]
   12938:	adds	r3, r3, #1
   1293c:	adc	r2, r2, #0
   12940:	str	r3, [r4, #8]
   12944:	str	r2, [r4, #12]
   12948:	bl	1af6c <next@@Base>
   1294c:	mov	lr, #148	; 0x94
   12950:	ldr	ip, [r4, #16]
   12954:	mov	r2, #0
   12958:	mov	r3, #620	; 0x26c
   1295c:	ldr	r1, [r0]
   12960:	mov	r0, #12
   12964:	str	lr, [sp]
   12968:	ldr	lr, [r4, #20]
   1296c:	adds	ip, ip, #1
   12970:	str	ip, [r4, #16]
   12974:	adc	lr, lr, r2
   12978:	str	lr, [r4, #20]
   1297c:	bl	16d3c <UnityAssertEqualNumber@@Base>
   12980:	ldr	r3, [r4, #24]
   12984:	mov	r0, r5
   12988:	ldr	r2, [r4, #28]
   1298c:	adds	r3, r3, #1
   12990:	adc	r2, r2, #0
   12994:	str	r3, [r4, #24]
   12998:	str	r2, [r4, #28]
   1299c:	bl	1ad24 <destroy_lexer@@Base>
   129a0:	ldr	r3, [r4, #32]
   129a4:	ldr	r2, [r4, #36]	; 0x24
   129a8:	adds	r3, r3, #1
   129ac:	adc	r2, r2, #0
   129b0:	str	r3, [r4, #32]
   129b4:	str	r2, [r4, #36]	; 0x24
   129b8:	add	sp, sp, #28
   129bc:	ldrd	r4, [sp]
   129c0:	add	sp, sp, #8
   129c4:	pop	{pc}		; (ldr pc, [sp], #4)
   129c8:	andeq	sp, r1, r8, lsl r4
   129cc:	strdeq	fp, [r0], -ip

000129d0 <read_token_greaterthan@@Base>:
   129d0:	strd	r4, [sp, #-12]!
   129d4:	ldr	r4, [pc, #208]	; 12aac <read_token_greaterthan@@Base+0xdc>
   129d8:	ldr	r1, [pc, #208]	; 12ab0 <read_token_greaterthan@@Base+0xe0>
   129dc:	add	r4, pc, r4
   129e0:	ldr	r3, [r4, #40]	; 0x28
   129e4:	add	r1, pc, r1
   129e8:	ldr	r2, [r4, #44]	; 0x2c
   129ec:	str	lr, [sp, #8]
   129f0:	sub	sp, sp, #28
   129f4:	add	r5, sp, #12
   129f8:	adds	r3, r3, #1
   129fc:	mov	r0, r5
   12a00:	adc	r2, r2, #0
   12a04:	str	r3, [r4, #40]	; 0x28
   12a08:	str	r2, [r4, #44]	; 0x2c
   12a0c:	bl	1acc8 <init_lexer@@Base>
   12a10:	ldr	r3, [r4, #48]	; 0x30
   12a14:	mov	r0, r5
   12a18:	ldr	r2, [r4, #52]	; 0x34
   12a1c:	adds	r3, r3, #1
   12a20:	adc	r2, r2, #0
   12a24:	str	r3, [r4, #48]	; 0x30
   12a28:	str	r2, [r4, #52]	; 0x34
   12a2c:	bl	1af6c <next@@Base>
   12a30:	mov	lr, #148	; 0x94
   12a34:	ldr	ip, [r4, #56]	; 0x38
   12a38:	mov	r2, #0
   12a3c:	movw	r3, #603	; 0x25b
   12a40:	ldr	r1, [r0]
   12a44:	mov	r0, #12
   12a48:	str	lr, [sp]
   12a4c:	ldr	lr, [r4, #60]	; 0x3c
   12a50:	adds	ip, ip, #1
   12a54:	str	ip, [r4, #56]	; 0x38
   12a58:	adc	lr, lr, r2
   12a5c:	str	lr, [r4, #60]	; 0x3c
   12a60:	bl	16d3c <UnityAssertEqualNumber@@Base>
   12a64:	ldr	r3, [r4, #64]	; 0x40
   12a68:	mov	r0, r5
   12a6c:	ldr	r2, [r4, #68]	; 0x44
   12a70:	adds	r3, r3, #1
   12a74:	adc	r2, r2, #0
   12a78:	str	r3, [r4, #64]	; 0x40
   12a7c:	str	r2, [r4, #68]	; 0x44
   12a80:	bl	1ad24 <destroy_lexer@@Base>
   12a84:	ldr	r3, [r4, #72]	; 0x48
   12a88:	ldr	r2, [r4, #76]	; 0x4c
   12a8c:	adds	r3, r3, #1
   12a90:	adc	r2, r2, #0
   12a94:	str	r3, [r4, #72]	; 0x48
   12a98:	str	r2, [r4, #76]	; 0x4c
   12a9c:	add	sp, sp, #28
   12aa0:	ldrd	r4, [sp]
   12aa4:	add	sp, sp, #8
   12aa8:	pop	{pc}		; (ldr pc, [sp], #4)
   12aac:	andeq	sp, r1, r4, lsr r3
   12ab0:	andeq	fp, r0, ip, lsl r9

00012ab4 <read_token_lessthan@@Base>:
   12ab4:	strd	r4, [sp, #-12]!
   12ab8:	ldr	r4, [pc, #208]	; 12b90 <read_token_lessthan@@Base+0xdc>
   12abc:	ldr	r1, [pc, #208]	; 12b94 <read_token_lessthan@@Base+0xe0>
   12ac0:	add	r4, pc, r4
   12ac4:	ldr	r3, [r4, #80]	; 0x50
   12ac8:	add	r1, pc, r1
   12acc:	ldr	r2, [r4, #84]	; 0x54
   12ad0:	str	lr, [sp, #8]
   12ad4:	sub	sp, sp, #28
   12ad8:	add	r5, sp, #12
   12adc:	adds	r3, r3, #1
   12ae0:	mov	r0, r5
   12ae4:	adc	r2, r2, #0
   12ae8:	str	r3, [r4, #80]	; 0x50
   12aec:	str	r2, [r4, #84]	; 0x54
   12af0:	bl	1acc8 <init_lexer@@Base>
   12af4:	ldr	r3, [r4, #88]	; 0x58
   12af8:	mov	r0, r5
   12afc:	ldr	r2, [r4, #92]	; 0x5c
   12b00:	adds	r3, r3, #1
   12b04:	adc	r2, r2, #0
   12b08:	str	r3, [r4, #88]	; 0x58
   12b0c:	str	r2, [r4, #92]	; 0x5c
   12b10:	bl	1af6c <next@@Base>
   12b14:	mov	lr, #148	; 0x94
   12b18:	ldr	ip, [r4, #96]	; 0x60
   12b1c:	mov	r2, #0
   12b20:	movw	r3, #586	; 0x24a
   12b24:	ldr	r1, [r0]
   12b28:	mov	r0, #12
   12b2c:	str	lr, [sp]
   12b30:	ldr	lr, [r4, #100]	; 0x64
   12b34:	adds	ip, ip, #1
   12b38:	str	ip, [r4, #96]	; 0x60
   12b3c:	adc	lr, lr, r2
   12b40:	str	lr, [r4, #100]	; 0x64
   12b44:	bl	16d3c <UnityAssertEqualNumber@@Base>
   12b48:	ldr	r3, [r4, #104]	; 0x68
   12b4c:	mov	r0, r5
   12b50:	ldr	r2, [r4, #108]	; 0x6c
   12b54:	adds	r3, r3, #1
   12b58:	adc	r2, r2, #0
   12b5c:	str	r3, [r4, #104]	; 0x68
   12b60:	str	r2, [r4, #108]	; 0x6c
   12b64:	bl	1ad24 <destroy_lexer@@Base>
   12b68:	ldr	r3, [r4, #112]	; 0x70
   12b6c:	ldr	r2, [r4, #116]	; 0x74
   12b70:	adds	r3, r3, #1
   12b74:	adc	r2, r2, #0
   12b78:	str	r3, [r4, #112]	; 0x70
   12b7c:	str	r2, [r4, #116]	; 0x74
   12b80:	add	sp, sp, #28
   12b84:	ldrd	r4, [sp]
   12b88:	add	sp, sp, #8
   12b8c:	pop	{pc}		; (ldr pc, [sp], #4)
   12b90:	andeq	sp, r1, r0, asr r2
   12b94:	andeq	fp, r0, ip, lsr r8

00012b98 <read_token_greaterequalthan@@Base>:
   12b98:	strd	r4, [sp, #-12]!
   12b9c:	ldr	r4, [pc, #208]	; 12c74 <read_token_greaterequalthan@@Base+0xdc>
   12ba0:	ldr	r1, [pc, #208]	; 12c78 <read_token_greaterequalthan@@Base+0xe0>
   12ba4:	add	r4, pc, r4
   12ba8:	ldr	r3, [r4, #120]	; 0x78
   12bac:	add	r1, pc, r1
   12bb0:	ldr	r2, [r4, #124]	; 0x7c
   12bb4:	str	lr, [sp, #8]
   12bb8:	sub	sp, sp, #28
   12bbc:	add	r5, sp, #12
   12bc0:	adds	r3, r3, #1
   12bc4:	mov	r0, r5
   12bc8:	adc	r2, r2, #0
   12bcc:	str	r3, [r4, #120]	; 0x78
   12bd0:	str	r2, [r4, #124]	; 0x7c
   12bd4:	bl	1acc8 <init_lexer@@Base>
   12bd8:	ldr	r3, [r4, #128]	; 0x80
   12bdc:	mov	r0, r5
   12be0:	ldr	r2, [r4, #132]	; 0x84
   12be4:	adds	r3, r3, #1
   12be8:	adc	r2, r2, #0
   12bec:	str	r3, [r4, #128]	; 0x80
   12bf0:	str	r2, [r4, #132]	; 0x84
   12bf4:	bl	1af6c <next@@Base>
   12bf8:	mov	lr, #148	; 0x94
   12bfc:	ldr	ip, [r4, #136]	; 0x88
   12c00:	mov	r2, #0
   12c04:	movw	r3, #569	; 0x239
   12c08:	ldr	r1, [r0]
   12c0c:	mov	r0, #12
   12c10:	str	lr, [sp]
   12c14:	ldr	lr, [r4, #140]	; 0x8c
   12c18:	adds	ip, ip, #1
   12c1c:	str	ip, [r4, #136]	; 0x88
   12c20:	adc	lr, lr, r2
   12c24:	str	lr, [r4, #140]	; 0x8c
   12c28:	bl	16d3c <UnityAssertEqualNumber@@Base>
   12c2c:	ldr	r3, [r4, #144]	; 0x90
   12c30:	mov	r0, r5
   12c34:	ldr	r2, [r4, #148]	; 0x94
   12c38:	adds	r3, r3, #1
   12c3c:	adc	r2, r2, #0
   12c40:	str	r3, [r4, #144]	; 0x90
   12c44:	str	r2, [r4, #148]	; 0x94
   12c48:	bl	1ad24 <destroy_lexer@@Base>
   12c4c:	ldr	r3, [r4, #152]	; 0x98
   12c50:	ldr	r2, [r4, #156]	; 0x9c
   12c54:	adds	r3, r3, #1
   12c58:	adc	r2, r2, #0
   12c5c:	str	r3, [r4, #152]	; 0x98
   12c60:	str	r2, [r4, #156]	; 0x9c
   12c64:	add	sp, sp, #28
   12c68:	ldrd	r4, [sp]
   12c6c:	add	sp, sp, #8
   12c70:	pop	{pc}		; (ldr pc, [sp], #4)
   12c74:	andeq	sp, r1, ip, ror #2
   12c78:	andeq	fp, r0, ip, asr r7

00012c7c <read_token_andand@@Base>:
   12c7c:	strd	r4, [sp, #-12]!
   12c80:	ldr	r4, [pc, #208]	; 12d58 <read_token_andand@@Base+0xdc>
   12c84:	ldr	r1, [pc, #208]	; 12d5c <read_token_andand@@Base+0xe0>
   12c88:	add	r4, pc, r4
   12c8c:	ldr	r3, [r4, #160]	; 0xa0
   12c90:	add	r1, pc, r1
   12c94:	ldr	r2, [r4, #164]	; 0xa4
   12c98:	str	lr, [sp, #8]
   12c9c:	sub	sp, sp, #28
   12ca0:	add	r5, sp, #12
   12ca4:	adds	r3, r3, #1
   12ca8:	mov	r0, r5
   12cac:	adc	r2, r2, #0
   12cb0:	str	r3, [r4, #160]	; 0xa0
   12cb4:	str	r2, [r4, #164]	; 0xa4
   12cb8:	bl	1acc8 <init_lexer@@Base>
   12cbc:	ldr	r3, [r4, #168]	; 0xa8
   12cc0:	mov	r0, r5
   12cc4:	ldr	r2, [r4, #172]	; 0xac
   12cc8:	adds	r3, r3, #1
   12ccc:	adc	r2, r2, #0
   12cd0:	str	r3, [r4, #168]	; 0xa8
   12cd4:	str	r2, [r4, #172]	; 0xac
   12cd8:	bl	1af6c <next@@Base>
   12cdc:	mov	lr, #148	; 0x94
   12ce0:	ldr	ip, [r4, #176]	; 0xb0
   12ce4:	mov	r2, #0
   12ce8:	mov	r3, #552	; 0x228
   12cec:	ldr	r1, [r0]
   12cf0:	mov	r0, #12
   12cf4:	str	lr, [sp]
   12cf8:	ldr	lr, [r4, #180]	; 0xb4
   12cfc:	adds	ip, ip, #1
   12d00:	str	ip, [r4, #176]	; 0xb0
   12d04:	adc	lr, lr, r2
   12d08:	str	lr, [r4, #180]	; 0xb4
   12d0c:	bl	16d3c <UnityAssertEqualNumber@@Base>
   12d10:	ldr	r3, [r4, #184]	; 0xb8
   12d14:	mov	r0, r5
   12d18:	ldr	r2, [r4, #188]	; 0xbc
   12d1c:	adds	r3, r3, #1
   12d20:	adc	r2, r2, #0
   12d24:	str	r3, [r4, #184]	; 0xb8
   12d28:	str	r2, [r4, #188]	; 0xbc
   12d2c:	bl	1ad24 <destroy_lexer@@Base>
   12d30:	ldr	r3, [r4, #192]	; 0xc0
   12d34:	ldr	r2, [r4, #196]	; 0xc4
   12d38:	adds	r3, r3, #1
   12d3c:	adc	r2, r2, #0
   12d40:	str	r3, [r4, #192]	; 0xc0
   12d44:	str	r2, [r4, #196]	; 0xc4
   12d48:	add	sp, sp, #28
   12d4c:	ldrd	r4, [sp]
   12d50:	add	sp, sp, #8
   12d54:	pop	{pc}		; (ldr pc, [sp], #4)
   12d58:	andeq	sp, r1, r8, lsl #1
   12d5c:	andeq	fp, r0, ip, ror r6

00012d60 <read_token_oror@@Base>:
   12d60:	strd	r4, [sp, #-12]!
   12d64:	ldr	r4, [pc, #208]	; 12e3c <read_token_oror@@Base+0xdc>
   12d68:	ldr	r1, [pc, #208]	; 12e40 <read_token_oror@@Base+0xe0>
   12d6c:	add	r4, pc, r4
   12d70:	ldr	r3, [r4, #200]	; 0xc8
   12d74:	add	r1, pc, r1
   12d78:	ldr	r2, [r4, #204]	; 0xcc
   12d7c:	str	lr, [sp, #8]
   12d80:	sub	sp, sp, #28
   12d84:	add	r5, sp, #12
   12d88:	adds	r3, r3, #1
   12d8c:	mov	r0, r5
   12d90:	adc	r2, r2, #0
   12d94:	str	r3, [r4, #200]	; 0xc8
   12d98:	str	r2, [r4, #204]	; 0xcc
   12d9c:	bl	1acc8 <init_lexer@@Base>
   12da0:	ldr	r3, [r4, #208]	; 0xd0
   12da4:	mov	r0, r5
   12da8:	ldr	r2, [r4, #212]	; 0xd4
   12dac:	adds	r3, r3, #1
   12db0:	adc	r2, r2, #0
   12db4:	str	r3, [r4, #208]	; 0xd0
   12db8:	str	r2, [r4, #212]	; 0xd4
   12dbc:	bl	1af6c <next@@Base>
   12dc0:	mov	lr, #148	; 0x94
   12dc4:	ldr	ip, [r4, #216]	; 0xd8
   12dc8:	mov	r2, #0
   12dcc:	movw	r3, #535	; 0x217
   12dd0:	ldr	r1, [r0]
   12dd4:	mov	r0, #12
   12dd8:	str	lr, [sp]
   12ddc:	ldr	lr, [r4, #220]	; 0xdc
   12de0:	adds	ip, ip, #1
   12de4:	str	ip, [r4, #216]	; 0xd8
   12de8:	adc	lr, lr, r2
   12dec:	str	lr, [r4, #220]	; 0xdc
   12df0:	bl	16d3c <UnityAssertEqualNumber@@Base>
   12df4:	ldr	r3, [r4, #224]	; 0xe0
   12df8:	mov	r0, r5
   12dfc:	ldr	r2, [r4, #228]	; 0xe4
   12e00:	adds	r3, r3, #1
   12e04:	adc	r2, r2, #0
   12e08:	str	r3, [r4, #224]	; 0xe0
   12e0c:	str	r2, [r4, #228]	; 0xe4
   12e10:	bl	1ad24 <destroy_lexer@@Base>
   12e14:	ldr	r3, [r4, #232]	; 0xe8
   12e18:	ldr	r2, [r4, #236]	; 0xec
   12e1c:	adds	r3, r3, #1
   12e20:	adc	r2, r2, #0
   12e24:	str	r3, [r4, #232]	; 0xe8
   12e28:	str	r2, [r4, #236]	; 0xec
   12e2c:	add	sp, sp, #28
   12e30:	ldrd	r4, [sp]
   12e34:	add	sp, sp, #8
   12e38:	pop	{pc}		; (ldr pc, [sp], #4)
   12e3c:	andeq	ip, r1, r4, lsr #31
   12e40:	muleq	r0, ip, r5

00012e44 <read_token_lessequalthan@@Base>:
   12e44:	strd	r4, [sp, #-16]!
   12e48:	ldr	r4, [pc, #220]	; 12f2c <read_token_lessequalthan@@Base+0xe8>
   12e4c:	ldr	r1, [pc, #220]	; 12f30 <read_token_lessequalthan@@Base+0xec>
   12e50:	add	r4, pc, r4
   12e54:	ldr	r3, [r4, #240]	; 0xf0
   12e58:	add	r5, r4, #272	; 0x110
   12e5c:	add	r1, pc, r1
   12e60:	ldr	r2, [r4, #244]	; 0xf4
   12e64:	str	r6, [sp, #8]
   12e68:	str	lr, [sp, #12]
   12e6c:	sub	sp, sp, #24
   12e70:	adds	r3, r3, #1
   12e74:	add	r6, sp, #12
   12e78:	mov	r0, r6
   12e7c:	adc	r2, r2, #0
   12e80:	str	r3, [r4, #240]	; 0xf0
   12e84:	str	r2, [r4, #244]	; 0xf4
   12e88:	bl	1acc8 <init_lexer@@Base>
   12e8c:	ldr	r3, [r4, #248]	; 0xf8
   12e90:	mov	r0, r6
   12e94:	ldr	r2, [r4, #252]	; 0xfc
   12e98:	adds	r3, r3, #1
   12e9c:	adc	r2, r2, #0
   12ea0:	str	r3, [r4, #248]	; 0xf8
   12ea4:	str	r2, [r4, #252]	; 0xfc
   12ea8:	bl	1af6c <next@@Base>
   12eac:	mov	r2, #148	; 0x94
   12eb0:	ldr	ip, [r4, #256]	; 0x100
   12eb4:	movw	r3, #518	; 0x206
   12eb8:	ldr	r1, [r0]
   12ebc:	mov	r0, #12
   12ec0:	str	r2, [sp]
   12ec4:	mov	r2, #0
   12ec8:	ldr	lr, [r4, #260]	; 0x104
   12ecc:	adds	ip, ip, #1
   12ed0:	str	ip, [r4, #256]	; 0x100
   12ed4:	adc	lr, lr, r2
   12ed8:	str	lr, [r4, #260]	; 0x104
   12edc:	bl	16d3c <UnityAssertEqualNumber@@Base>
   12ee0:	ldr	r3, [r5, #-8]
   12ee4:	mov	r0, r6
   12ee8:	ldr	r2, [r5, #-4]
   12eec:	adds	r3, r3, #1
   12ef0:	adc	r2, r2, #0
   12ef4:	str	r3, [r5, #-8]
   12ef8:	str	r2, [r5, #-4]
   12efc:	bl	1ad24 <destroy_lexer@@Base>
   12f00:	ldr	r3, [r5]
   12f04:	ldr	r2, [r5, #4]
   12f08:	adds	r3, r3, #1
   12f0c:	adc	r2, r2, #0
   12f10:	str	r3, [r5]
   12f14:	str	r2, [r5, #4]
   12f18:	add	sp, sp, #24
   12f1c:	ldrd	r4, [sp]
   12f20:	ldr	r6, [sp, #8]
   12f24:	add	sp, sp, #12
   12f28:	pop	{pc}		; (ldr pc, [sp], #4)
   12f2c:	andeq	ip, r1, r0, asr #29
   12f30:			; <UNDEFINED> instruction: 0x0000b4b8

00012f34 <read_token_notequal@@Base>:
   12f34:	strd	r4, [sp, #-12]!
   12f38:	ldr	r4, [pc, #212]	; 13014 <read_token_notequal@@Base+0xe0>
   12f3c:	ldr	r1, [pc, #212]	; 13018 <read_token_notequal@@Base+0xe4>
   12f40:	add	r4, pc, r4
   12f44:	add	r4, r4, #288	; 0x120
   12f48:	ldr	r3, [r4, #-8]
   12f4c:	add	r1, pc, r1
   12f50:	ldr	r2, [r4, #-4]
   12f54:	str	lr, [sp, #8]
   12f58:	sub	sp, sp, #28
   12f5c:	add	r5, sp, #12
   12f60:	adds	r3, r3, #1
   12f64:	mov	r0, r5
   12f68:	adc	r2, r2, #0
   12f6c:	str	r3, [r4, #-8]
   12f70:	str	r2, [r4, #-4]
   12f74:	bl	1acc8 <init_lexer@@Base>
   12f78:	ldr	r3, [r4]
   12f7c:	mov	r0, r5
   12f80:	ldr	r2, [r4, #4]
   12f84:	adds	r3, r3, #1
   12f88:	adc	r2, r2, #0
   12f8c:	str	r3, [r4]
   12f90:	str	r2, [r4, #4]
   12f94:	bl	1af6c <next@@Base>
   12f98:	mov	lr, #148	; 0x94
   12f9c:	ldr	ip, [r4, #8]
   12fa0:	mov	r2, #0
   12fa4:	movw	r3, #501	; 0x1f5
   12fa8:	ldr	r1, [r0]
   12fac:	mov	r0, #12
   12fb0:	str	lr, [sp]
   12fb4:	ldr	lr, [r4, #12]
   12fb8:	adds	ip, ip, #1
   12fbc:	str	ip, [r4, #8]
   12fc0:	adc	lr, lr, r2
   12fc4:	str	lr, [r4, #12]
   12fc8:	bl	16d3c <UnityAssertEqualNumber@@Base>
   12fcc:	ldr	r3, [r4, #16]
   12fd0:	mov	r0, r5
   12fd4:	ldr	r2, [r4, #20]
   12fd8:	adds	r3, r3, #1
   12fdc:	adc	r2, r2, #0
   12fe0:	str	r3, [r4, #16]
   12fe4:	str	r2, [r4, #20]
   12fe8:	bl	1ad24 <destroy_lexer@@Base>
   12fec:	ldr	r3, [r4, #24]
   12ff0:	ldr	r2, [r4, #28]
   12ff4:	adds	r3, r3, #1
   12ff8:	adc	r2, r2, #0
   12ffc:	str	r3, [r4, #24]
   13000:	str	r2, [r4, #28]
   13004:	add	sp, sp, #28
   13008:	ldrd	r4, [sp]
   1300c:	add	sp, sp, #8
   13010:	pop	{pc}		; (ldr pc, [sp], #4)
   13014:	ldrdeq	ip, [r1], -r0
   13018:	andeq	fp, r0, ip, asr #7

0001301c <read_token_equalequal@@Base>:
   1301c:	strd	r4, [sp, #-12]!
   13020:	ldr	r4, [pc, #212]	; 130fc <read_token_equalequal@@Base+0xe0>
   13024:	ldr	r1, [pc, #212]	; 13100 <read_token_equalequal@@Base+0xe4>
   13028:	add	r4, pc, r4
   1302c:	add	r4, r4, #320	; 0x140
   13030:	ldr	r3, [r4]
   13034:	add	r1, pc, r1
   13038:	ldr	r2, [r4, #4]
   1303c:	str	lr, [sp, #8]
   13040:	sub	sp, sp, #28
   13044:	add	r5, sp, #12
   13048:	adds	r3, r3, #1
   1304c:	mov	r0, r5
   13050:	adc	r2, r2, #0
   13054:	str	r3, [r4]
   13058:	str	r2, [r4, #4]
   1305c:	bl	1acc8 <init_lexer@@Base>
   13060:	ldr	r3, [r4, #8]
   13064:	mov	r0, r5
   13068:	ldr	r2, [r4, #12]
   1306c:	adds	r3, r3, #1
   13070:	adc	r2, r2, #0
   13074:	str	r3, [r4, #8]
   13078:	str	r2, [r4, #12]
   1307c:	bl	1af6c <next@@Base>
   13080:	mov	lr, #148	; 0x94
   13084:	ldr	ip, [r4, #16]
   13088:	mov	r2, #0
   1308c:	mov	r3, #484	; 0x1e4
   13090:	ldr	r1, [r0]
   13094:	mov	r0, #12
   13098:	str	lr, [sp]
   1309c:	ldr	lr, [r4, #20]
   130a0:	adds	ip, ip, #1
   130a4:	str	ip, [r4, #16]
   130a8:	adc	lr, lr, r2
   130ac:	str	lr, [r4, #20]
   130b0:	bl	16d3c <UnityAssertEqualNumber@@Base>
   130b4:	ldr	r3, [r4, #24]
   130b8:	mov	r0, r5
   130bc:	ldr	r2, [r4, #28]
   130c0:	adds	r3, r3, #1
   130c4:	adc	r2, r2, #0
   130c8:	str	r3, [r4, #24]
   130cc:	str	r2, [r4, #28]
   130d0:	bl	1ad24 <destroy_lexer@@Base>
   130d4:	ldr	r3, [r4, #32]
   130d8:	ldr	r2, [r4, #36]	; 0x24
   130dc:	adds	r3, r3, #1
   130e0:	adc	r2, r2, #0
   130e4:	str	r3, [r4, #32]
   130e8:	str	r2, [r4, #36]	; 0x24
   130ec:	add	sp, sp, #28
   130f0:	ldrd	r4, [sp]
   130f4:	add	sp, sp, #8
   130f8:	pop	{pc}		; (ldr pc, [sp], #4)
   130fc:	andeq	ip, r1, r8, ror #25
   13100:	andeq	fp, r0, r8, ror #5

00013104 <read_token_else@@Base>:
   13104:	strd	r4, [sp, #-12]!
   13108:	ldr	r4, [pc, #212]	; 131e4 <read_token_else@@Base+0xe0>
   1310c:	ldr	r1, [pc, #212]	; 131e8 <read_token_else@@Base+0xe4>
   13110:	add	r4, pc, r4
   13114:	add	r4, r4, #368	; 0x170
   13118:	ldr	r3, [r4, #-8]
   1311c:	add	r1, pc, r1
   13120:	ldr	r2, [r4, #-4]
   13124:	str	lr, [sp, #8]
   13128:	sub	sp, sp, #28
   1312c:	add	r5, sp, #12
   13130:	adds	r3, r3, #1
   13134:	mov	r0, r5
   13138:	adc	r2, r2, #0
   1313c:	str	r3, [r4, #-8]
   13140:	str	r2, [r4, #-4]
   13144:	bl	1acc8 <init_lexer@@Base>
   13148:	ldr	r3, [r4]
   1314c:	mov	r0, r5
   13150:	ldr	r2, [r4, #4]
   13154:	adds	r3, r3, #1
   13158:	adc	r2, r2, #0
   1315c:	str	r3, [r4]
   13160:	str	r2, [r4, #4]
   13164:	bl	1af6c <next@@Base>
   13168:	mov	lr, #148	; 0x94
   1316c:	ldr	ip, [r4, #8]
   13170:	mov	r2, #0
   13174:	movw	r3, #467	; 0x1d3
   13178:	ldr	r1, [r0]
   1317c:	mov	r0, #11
   13180:	str	lr, [sp]
   13184:	ldr	lr, [r4, #12]
   13188:	adds	ip, ip, #1
   1318c:	str	ip, [r4, #8]
   13190:	adc	lr, lr, r2
   13194:	str	lr, [r4, #12]
   13198:	bl	16d3c <UnityAssertEqualNumber@@Base>
   1319c:	ldr	r3, [r4, #16]
   131a0:	mov	r0, r5
   131a4:	ldr	r2, [r4, #20]
   131a8:	adds	r3, r3, #1
   131ac:	adc	r2, r2, #0
   131b0:	str	r3, [r4, #16]
   131b4:	str	r2, [r4, #20]
   131b8:	bl	1ad24 <destroy_lexer@@Base>
   131bc:	ldr	r3, [r4, #24]
   131c0:	ldr	r2, [r4, #28]
   131c4:	adds	r3, r3, #1
   131c8:	adc	r2, r2, #0
   131cc:	str	r3, [r4, #24]
   131d0:	str	r2, [r4, #28]
   131d4:	add	sp, sp, #28
   131d8:	ldrd	r4, [sp]
   131dc:	add	sp, sp, #8
   131e0:	pop	{pc}		; (ldr pc, [sp], #4)
   131e4:	andeq	ip, r1, r0, lsl #24
   131e8:			; <UNDEFINED> instruction: 0x0000b3b8

000131ec <read_token_if@@Base>:
   131ec:	strd	r4, [sp, #-12]!
   131f0:	ldr	r4, [pc, #212]	; 132cc <read_token_if@@Base+0xe0>
   131f4:	ldr	r1, [pc, #212]	; 132d0 <read_token_if@@Base+0xe4>
   131f8:	add	r4, pc, r4
   131fc:	add	r4, r4, #400	; 0x190
   13200:	ldr	r3, [r4]
   13204:	add	r1, pc, r1
   13208:	ldr	r2, [r4, #4]
   1320c:	str	lr, [sp, #8]
   13210:	sub	sp, sp, #28
   13214:	add	r5, sp, #12
   13218:	adds	r3, r3, #1
   1321c:	mov	r0, r5
   13220:	adc	r2, r2, #0
   13224:	str	r3, [r4]
   13228:	str	r2, [r4, #4]
   1322c:	bl	1acc8 <init_lexer@@Base>
   13230:	ldr	r3, [r4, #8]
   13234:	mov	r0, r5
   13238:	ldr	r2, [r4, #12]
   1323c:	adds	r3, r3, #1
   13240:	adc	r2, r2, #0
   13244:	str	r3, [r4, #8]
   13248:	str	r2, [r4, #12]
   1324c:	bl	1af6c <next@@Base>
   13250:	mov	lr, #148	; 0x94
   13254:	ldr	ip, [r4, #16]
   13258:	mov	r2, #0
   1325c:	movw	r3, #450	; 0x1c2
   13260:	ldr	r1, [r0]
   13264:	mov	r0, #10
   13268:	str	lr, [sp]
   1326c:	ldr	lr, [r4, #20]
   13270:	adds	ip, ip, #1
   13274:	str	ip, [r4, #16]
   13278:	adc	lr, lr, r2
   1327c:	str	lr, [r4, #20]
   13280:	bl	16d3c <UnityAssertEqualNumber@@Base>
   13284:	ldr	r3, [r4, #24]
   13288:	mov	r0, r5
   1328c:	ldr	r2, [r4, #28]
   13290:	adds	r3, r3, #1
   13294:	adc	r2, r2, #0
   13298:	str	r3, [r4, #24]
   1329c:	str	r2, [r4, #28]
   132a0:	bl	1ad24 <destroy_lexer@@Base>
   132a4:	ldr	r3, [r4, #32]
   132a8:	ldr	r2, [r4, #36]	; 0x24
   132ac:	adds	r3, r3, #1
   132b0:	adc	r2, r2, #0
   132b4:	str	r3, [r4, #32]
   132b8:	str	r2, [r4, #36]	; 0x24
   132bc:	add	sp, sp, #28
   132c0:	ldrd	r4, [sp]
   132c4:	add	sp, sp, #8
   132c8:	pop	{pc}		; (ldr pc, [sp], #4)
   132cc:	andeq	ip, r1, r8, lsl fp
   132d0:	andeq	fp, r0, ip, lsl r1

000132d4 <read_token_eof@@Base>:
   132d4:	strd	r4, [sp, #-12]!
   132d8:	ldr	r4, [pc, #212]	; 133b4 <read_token_eof@@Base+0xe0>
   132dc:	ldr	r1, [pc, #212]	; 133b8 <read_token_eof@@Base+0xe4>
   132e0:	add	r4, pc, r4
   132e4:	add	r4, r4, #448	; 0x1c0
   132e8:	ldr	r3, [r4, #-8]
   132ec:	add	r1, pc, r1
   132f0:	ldr	r2, [r4, #-4]
   132f4:	str	lr, [sp, #8]
   132f8:	sub	sp, sp, #28
   132fc:	add	r5, sp, #12
   13300:	adds	r3, r3, #1
   13304:	mov	r0, r5
   13308:	adc	r2, r2, #0
   1330c:	str	r3, [r4, #-8]
   13310:	str	r2, [r4, #-4]
   13314:	bl	1acc8 <init_lexer@@Base>
   13318:	ldr	r3, [r4]
   1331c:	mov	r0, r5
   13320:	ldr	r2, [r4, #4]
   13324:	adds	r3, r3, #1
   13328:	adc	r2, r2, #0
   1332c:	str	r3, [r4]
   13330:	str	r2, [r4, #4]
   13334:	bl	1af6c <next@@Base>
   13338:	mov	lr, #148	; 0x94
   1333c:	ldr	ip, [r4, #8]
   13340:	mov	r2, #0
   13344:	movw	r3, #433	; 0x1b1
   13348:	ldr	r1, [r0]
   1334c:	mov	r0, #9
   13350:	str	lr, [sp]
   13354:	ldr	lr, [r4, #12]
   13358:	adds	ip, ip, #1
   1335c:	str	ip, [r4, #8]
   13360:	adc	lr, lr, r2
   13364:	str	lr, [r4, #12]
   13368:	bl	16d3c <UnityAssertEqualNumber@@Base>
   1336c:	ldr	r3, [r4, #16]
   13370:	mov	r0, r5
   13374:	ldr	r2, [r4, #20]
   13378:	adds	r3, r3, #1
   1337c:	adc	r2, r2, #0
   13380:	str	r3, [r4, #16]
   13384:	str	r2, [r4, #20]
   13388:	bl	1ad24 <destroy_lexer@@Base>
   1338c:	ldr	r3, [r4, #24]
   13390:	ldr	r2, [r4, #28]
   13394:	adds	r3, r3, #1
   13398:	adc	r2, r2, #0
   1339c:	str	r3, [r4, #24]
   133a0:	str	r2, [r4, #28]
   133a4:	add	sp, sp, #28
   133a8:	ldrd	r4, [sp]
   133ac:	add	sp, sp, #8
   133b0:	pop	{pc}		; (ldr pc, [sp], #4)
   133b4:	andeq	ip, r1, r0, lsr sl
   133b8:	andeq	fp, r0, r0, lsl #18

000133bc <read_token_semicolon@@Base>:
   133bc:	strd	r4, [sp, #-12]!
   133c0:	ldr	r4, [pc, #212]	; 1349c <read_token_semicolon@@Base+0xe0>
   133c4:	ldr	r1, [pc, #212]	; 134a0 <read_token_semicolon@@Base+0xe4>
   133c8:	add	r4, pc, r4
   133cc:	add	r4, r4, #480	; 0x1e0
   133d0:	ldr	r3, [r4]
   133d4:	add	r1, pc, r1
   133d8:	ldr	r2, [r4, #4]
   133dc:	str	lr, [sp, #8]
   133e0:	sub	sp, sp, #28
   133e4:	add	r5, sp, #12
   133e8:	adds	r3, r3, #1
   133ec:	mov	r0, r5
   133f0:	adc	r2, r2, #0
   133f4:	str	r3, [r4]
   133f8:	str	r2, [r4, #4]
   133fc:	bl	1acc8 <init_lexer@@Base>
   13400:	ldr	r3, [r4, #8]
   13404:	mov	r0, r5
   13408:	ldr	r2, [r4, #12]
   1340c:	adds	r3, r3, #1
   13410:	adc	r2, r2, #0
   13414:	str	r3, [r4, #8]
   13418:	str	r2, [r4, #12]
   1341c:	bl	1af6c <next@@Base>
   13420:	mov	lr, #148	; 0x94
   13424:	ldr	ip, [r4, #16]
   13428:	mov	r2, #0
   1342c:	mov	r3, #416	; 0x1a0
   13430:	ldr	r1, [r0]
   13434:	mov	r0, #8
   13438:	str	lr, [sp]
   1343c:	ldr	lr, [r4, #20]
   13440:	adds	ip, ip, #1
   13444:	str	ip, [r4, #16]
   13448:	adc	lr, lr, r2
   1344c:	str	lr, [r4, #20]
   13450:	bl	16d3c <UnityAssertEqualNumber@@Base>
   13454:	ldr	r3, [r4, #24]
   13458:	mov	r0, r5
   1345c:	ldr	r2, [r4, #28]
   13460:	adds	r3, r3, #1
   13464:	adc	r2, r2, #0
   13468:	str	r3, [r4, #24]
   1346c:	str	r2, [r4, #28]
   13470:	bl	1ad24 <destroy_lexer@@Base>
   13474:	ldr	r3, [r4, #32]
   13478:	ldr	r2, [r4, #36]	; 0x24
   1347c:	adds	r3, r3, #1
   13480:	adc	r2, r2, #0
   13484:	str	r3, [r4, #32]
   13488:	str	r2, [r4, #36]	; 0x24
   1348c:	add	sp, sp, #28
   13490:	ldrd	r4, [sp]
   13494:	add	sp, sp, #8
   13498:	pop	{pc}		; (ldr pc, [sp], #4)
   1349c:	andeq	ip, r1, r8, asr #18
   134a0:	andeq	sl, r0, r0, asr pc

000134a4 <read_token_return@@Base>:
   134a4:	strd	r4, [sp, #-12]!
   134a8:	ldr	r4, [pc, #212]	; 13584 <read_token_return@@Base+0xe0>
   134ac:	ldr	r1, [pc, #212]	; 13588 <read_token_return@@Base+0xe4>
   134b0:	add	r4, pc, r4
   134b4:	add	r4, r4, #528	; 0x210
   134b8:	ldr	r3, [r4, #-8]
   134bc:	add	r1, pc, r1
   134c0:	ldr	r2, [r4, #-4]
   134c4:	str	lr, [sp, #8]
   134c8:	sub	sp, sp, #28
   134cc:	add	r5, sp, #12
   134d0:	adds	r3, r3, #1
   134d4:	mov	r0, r5
   134d8:	adc	r2, r2, #0
   134dc:	str	r3, [r4, #-8]
   134e0:	str	r2, [r4, #-4]
   134e4:	bl	1acc8 <init_lexer@@Base>
   134e8:	ldr	r3, [r4]
   134ec:	mov	r0, r5
   134f0:	ldr	r2, [r4, #4]
   134f4:	adds	r3, r3, #1
   134f8:	adc	r2, r2, #0
   134fc:	str	r3, [r4]
   13500:	str	r2, [r4, #4]
   13504:	bl	1af6c <next@@Base>
   13508:	mov	lr, #148	; 0x94
   1350c:	ldr	ip, [r4, #8]
   13510:	mov	r2, #0
   13514:	movw	r3, #399	; 0x18f
   13518:	ldr	r1, [r0]
   1351c:	mov	r0, #7
   13520:	str	lr, [sp]
   13524:	ldr	lr, [r4, #12]
   13528:	adds	ip, ip, #1
   1352c:	str	ip, [r4, #8]
   13530:	adc	lr, lr, r2
   13534:	str	lr, [r4, #12]
   13538:	bl	16d3c <UnityAssertEqualNumber@@Base>
   1353c:	ldr	r3, [r4, #16]
   13540:	mov	r0, r5
   13544:	ldr	r2, [r4, #20]
   13548:	adds	r3, r3, #1
   1354c:	adc	r2, r2, #0
   13550:	str	r3, [r4, #16]
   13554:	str	r2, [r4, #20]
   13558:	bl	1ad24 <destroy_lexer@@Base>
   1355c:	ldr	r3, [r4, #24]
   13560:	ldr	r2, [r4, #28]
   13564:	adds	r3, r3, #1
   13568:	adc	r2, r2, #0
   1356c:	str	r3, [r4, #24]
   13570:	str	r2, [r4, #28]
   13574:	add	sp, sp, #28
   13578:	ldrd	r4, [sp]
   1357c:	add	sp, sp, #8
   13580:	pop	{pc}		; (ldr pc, [sp], #4)
   13584:	andeq	ip, r1, r0, ror #16
   13588:	andeq	sl, r0, ip, ror #28

0001358c <read_token_cbra@@Base>:
   1358c:	strd	r4, [sp, #-12]!
   13590:	ldr	r4, [pc, #212]	; 1366c <read_token_cbra@@Base+0xe0>
   13594:	ldr	r1, [pc, #212]	; 13670 <read_token_cbra@@Base+0xe4>
   13598:	add	r4, pc, r4
   1359c:	add	r4, r4, #560	; 0x230
   135a0:	ldr	r3, [r4]
   135a4:	add	r1, pc, r1
   135a8:	ldr	r2, [r4, #4]
   135ac:	str	lr, [sp, #8]
   135b0:	sub	sp, sp, #28
   135b4:	add	r5, sp, #12
   135b8:	adds	r3, r3, #1
   135bc:	mov	r0, r5
   135c0:	adc	r2, r2, #0
   135c4:	str	r3, [r4]
   135c8:	str	r2, [r4, #4]
   135cc:	bl	1acc8 <init_lexer@@Base>
   135d0:	ldr	r3, [r4, #8]
   135d4:	mov	r0, r5
   135d8:	ldr	r2, [r4, #12]
   135dc:	adds	r3, r3, #1
   135e0:	adc	r2, r2, #0
   135e4:	str	r3, [r4, #8]
   135e8:	str	r2, [r4, #12]
   135ec:	bl	1af6c <next@@Base>
   135f0:	mov	lr, #148	; 0x94
   135f4:	ldr	ip, [r4, #16]
   135f8:	mov	r2, #0
   135fc:	movw	r3, #382	; 0x17e
   13600:	ldr	r1, [r0]
   13604:	mov	r0, #6
   13608:	str	lr, [sp]
   1360c:	ldr	lr, [r4, #20]
   13610:	adds	ip, ip, #1
   13614:	str	ip, [r4, #16]
   13618:	adc	lr, lr, r2
   1361c:	str	lr, [r4, #20]
   13620:	bl	16d3c <UnityAssertEqualNumber@@Base>
   13624:	ldr	r3, [r4, #24]
   13628:	mov	r0, r5
   1362c:	ldr	r2, [r4, #28]
   13630:	adds	r3, r3, #1
   13634:	adc	r2, r2, #0
   13638:	str	r3, [r4, #24]
   1363c:	str	r2, [r4, #28]
   13640:	bl	1ad24 <destroy_lexer@@Base>
   13644:	ldr	r3, [r4, #32]
   13648:	ldr	r2, [r4, #36]	; 0x24
   1364c:	adds	r3, r3, #1
   13650:	adc	r2, r2, #0
   13654:	str	r3, [r4, #32]
   13658:	str	r2, [r4, #36]	; 0x24
   1365c:	add	sp, sp, #28
   13660:	ldrd	r4, [sp]
   13664:	add	sp, sp, #8
   13668:	pop	{pc}		; (ldr pc, [sp], #4)
   1366c:	andeq	ip, r1, r8, ror r7
   13670:	andeq	sl, r0, r4, asr lr

00013674 <read_token_obra@@Base>:
   13674:	strd	r4, [sp, #-12]!
   13678:	ldr	r4, [pc, #212]	; 13754 <read_token_obra@@Base+0xe0>
   1367c:	ldr	r1, [pc, #212]	; 13758 <read_token_obra@@Base+0xe4>
   13680:	add	r4, pc, r4
   13684:	add	r4, r4, #608	; 0x260
   13688:	ldr	r3, [r4, #-8]
   1368c:	add	r1, pc, r1
   13690:	ldr	r2, [r4, #-4]
   13694:	str	lr, [sp, #8]
   13698:	sub	sp, sp, #28
   1369c:	add	r5, sp, #12
   136a0:	adds	r3, r3, #1
   136a4:	mov	r0, r5
   136a8:	adc	r2, r2, #0
   136ac:	str	r3, [r4, #-8]
   136b0:	str	r2, [r4, #-4]
   136b4:	bl	1acc8 <init_lexer@@Base>
   136b8:	ldr	r3, [r4]
   136bc:	mov	r0, r5
   136c0:	ldr	r2, [r4, #4]
   136c4:	adds	r3, r3, #1
   136c8:	adc	r2, r2, #0
   136cc:	str	r3, [r4]
   136d0:	str	r2, [r4, #4]
   136d4:	bl	1af6c <next@@Base>
   136d8:	mov	lr, #148	; 0x94
   136dc:	ldr	ip, [r4, #8]
   136e0:	mov	r2, #0
   136e4:	mov	r3, #364	; 0x16c
   136e8:	ldr	r1, [r0]
   136ec:	mov	r0, #5
   136f0:	str	lr, [sp]
   136f4:	ldr	lr, [r4, #12]
   136f8:	adds	ip, ip, #1
   136fc:	str	ip, [r4, #8]
   13700:	adc	lr, lr, r2
   13704:	str	lr, [r4, #12]
   13708:	bl	16d3c <UnityAssertEqualNumber@@Base>
   1370c:	ldr	r3, [r4, #16]
   13710:	mov	r0, r5
   13714:	ldr	r2, [r4, #20]
   13718:	adds	r3, r3, #1
   1371c:	adc	r2, r2, #0
   13720:	str	r3, [r4, #16]
   13724:	str	r2, [r4, #20]
   13728:	bl	1ad24 <destroy_lexer@@Base>
   1372c:	ldr	r3, [r4, #24]
   13730:	ldr	r2, [r4, #28]
   13734:	adds	r3, r3, #1
   13738:	adc	r2, r2, #0
   1373c:	str	r3, [r4, #24]
   13740:	str	r2, [r4, #28]
   13744:	add	sp, sp, #28
   13748:	ldrd	r4, [sp]
   1374c:	add	sp, sp, #8
   13750:	pop	{pc}		; (ldr pc, [sp], #4)
   13754:	muleq	r1, r0, r6
   13758:	andeq	sl, r0, r4, lsr #25

0001375c <read_token_cpar@@Base>:
   1375c:	strd	r4, [sp, #-12]!
   13760:	ldr	r4, [pc, #212]	; 1383c <read_token_cpar@@Base+0xe0>
   13764:	ldr	r1, [pc, #212]	; 13840 <read_token_cpar@@Base+0xe4>
   13768:	add	r4, pc, r4
   1376c:	add	r4, r4, #640	; 0x280
   13770:	ldr	r3, [r4]
   13774:	add	r1, pc, r1
   13778:	ldr	r2, [r4, #4]
   1377c:	str	lr, [sp, #8]
   13780:	sub	sp, sp, #28
   13784:	add	r5, sp, #12
   13788:	adds	r3, r3, #1
   1378c:	mov	r0, r5
   13790:	adc	r2, r2, #0
   13794:	str	r3, [r4]
   13798:	str	r2, [r4, #4]
   1379c:	bl	1acc8 <init_lexer@@Base>
   137a0:	ldr	r3, [r4, #8]
   137a4:	mov	r0, r5
   137a8:	ldr	r2, [r4, #12]
   137ac:	adds	r3, r3, #1
   137b0:	adc	r2, r2, #0
   137b4:	str	r3, [r4, #8]
   137b8:	str	r2, [r4, #12]
   137bc:	bl	1af6c <next@@Base>
   137c0:	mov	lr, #148	; 0x94
   137c4:	ldr	ip, [r4, #16]
   137c8:	mov	r2, #0
   137cc:	movw	r3, #347	; 0x15b
   137d0:	ldr	r1, [r0]
   137d4:	mov	r0, #4
   137d8:	str	lr, [sp]
   137dc:	ldr	lr, [r4, #20]
   137e0:	adds	ip, ip, #1
   137e4:	str	ip, [r4, #16]
   137e8:	adc	lr, lr, r2
   137ec:	str	lr, [r4, #20]
   137f0:	bl	16d3c <UnityAssertEqualNumber@@Base>
   137f4:	ldr	r3, [r4, #24]
   137f8:	mov	r0, r5
   137fc:	ldr	r2, [r4, #28]
   13800:	adds	r3, r3, #1
   13804:	adc	r2, r2, #0
   13808:	str	r3, [r4, #24]
   1380c:	str	r2, [r4, #28]
   13810:	bl	1ad24 <destroy_lexer@@Base>
   13814:	ldr	r3, [r4, #32]
   13818:	ldr	r2, [r4, #36]	; 0x24
   1381c:	adds	r3, r3, #1
   13820:	adc	r2, r2, #0
   13824:	str	r3, [r4, #32]
   13828:	str	r2, [r4, #36]	; 0x24
   1382c:	add	sp, sp, #28
   13830:	ldrd	r4, [sp]
   13834:	add	sp, sp, #8
   13838:	pop	{pc}		; (ldr pc, [sp], #4)
   1383c:	andeq	ip, r1, r8, lsr #11
   13840:	andeq	sl, r0, r0, asr #23

00013844 <read_token_opar@@Base>:
   13844:	strd	r4, [sp, #-12]!
   13848:	ldr	r4, [pc, #212]	; 13924 <read_token_opar@@Base+0xe0>
   1384c:	ldr	r1, [pc, #212]	; 13928 <read_token_opar@@Base+0xe4>
   13850:	add	r4, pc, r4
   13854:	add	r4, r4, #688	; 0x2b0
   13858:	ldr	r3, [r4, #-8]
   1385c:	add	r1, pc, r1
   13860:	ldr	r2, [r4, #-4]
   13864:	str	lr, [sp, #8]
   13868:	sub	sp, sp, #28
   1386c:	add	r5, sp, #12
   13870:	adds	r3, r3, #1
   13874:	mov	r0, r5
   13878:	adc	r2, r2, #0
   1387c:	str	r3, [r4, #-8]
   13880:	str	r2, [r4, #-4]
   13884:	bl	1acc8 <init_lexer@@Base>
   13888:	ldr	r3, [r4]
   1388c:	mov	r0, r5
   13890:	ldr	r2, [r4, #4]
   13894:	adds	r3, r3, #1
   13898:	adc	r2, r2, #0
   1389c:	str	r3, [r4]
   138a0:	str	r2, [r4, #4]
   138a4:	bl	1af6c <next@@Base>
   138a8:	mov	lr, #148	; 0x94
   138ac:	ldr	ip, [r4, #8]
   138b0:	mov	r2, #0
   138b4:	movw	r3, #330	; 0x14a
   138b8:	ldr	r1, [r0]
   138bc:	mov	r0, #3
   138c0:	str	lr, [sp]
   138c4:	ldr	lr, [r4, #12]
   138c8:	adds	ip, ip, #1
   138cc:	str	ip, [r4, #8]
   138d0:	adc	lr, lr, r2
   138d4:	str	lr, [r4, #12]
   138d8:	bl	16d3c <UnityAssertEqualNumber@@Base>
   138dc:	ldr	r3, [r4, #16]
   138e0:	mov	r0, r5
   138e4:	ldr	r2, [r4, #20]
   138e8:	adds	r3, r3, #1
   138ec:	adc	r2, r2, #0
   138f0:	str	r3, [r4, #16]
   138f4:	str	r2, [r4, #20]
   138f8:	bl	1ad24 <destroy_lexer@@Base>
   138fc:	ldr	r3, [r4, #24]
   13900:	ldr	r2, [r4, #28]
   13904:	adds	r3, r3, #1
   13908:	adc	r2, r2, #0
   1390c:	str	r3, [r4, #24]
   13910:	str	r2, [r4, #28]
   13914:	add	sp, sp, #28
   13918:	ldrd	r4, [sp]
   1391c:	add	sp, sp, #8
   13920:	pop	{pc}		; (ldr pc, [sp], #4)
   13924:	andeq	ip, r1, r0, asr #9
   13928:	ldrdeq	sl, [r0], -ip

0001392c <read_token_function@@Base>:
   1392c:	strd	r4, [sp, #-12]!
   13930:	ldr	r4, [pc, #212]	; 13a0c <read_token_function@@Base+0xe0>
   13934:	ldr	r1, [pc, #212]	; 13a10 <read_token_function@@Base+0xe4>
   13938:	add	r4, pc, r4
   1393c:	add	r4, r4, #720	; 0x2d0
   13940:	ldr	r3, [r4]
   13944:	add	r1, pc, r1
   13948:	ldr	r2, [r4, #4]
   1394c:	str	lr, [sp, #8]
   13950:	sub	sp, sp, #28
   13954:	add	r5, sp, #12
   13958:	adds	r3, r3, #1
   1395c:	mov	r0, r5
   13960:	adc	r2, r2, #0
   13964:	str	r3, [r4]
   13968:	str	r2, [r4, #4]
   1396c:	bl	1acc8 <init_lexer@@Base>
   13970:	ldr	r3, [r4, #8]
   13974:	mov	r0, r5
   13978:	ldr	r2, [r4, #12]
   1397c:	adds	r3, r3, #1
   13980:	adc	r2, r2, #0
   13984:	str	r3, [r4, #8]
   13988:	str	r2, [r4, #12]
   1398c:	bl	1af6c <next@@Base>
   13990:	mov	lr, #148	; 0x94
   13994:	ldr	ip, [r4, #16]
   13998:	mov	r2, #0
   1399c:	movw	r3, #313	; 0x139
   139a0:	ldr	r1, [r0]
   139a4:	mov	r0, #2
   139a8:	str	lr, [sp]
   139ac:	ldr	lr, [r4, #20]
   139b0:	adds	ip, ip, #1
   139b4:	str	ip, [r4, #16]
   139b8:	adc	lr, lr, r2
   139bc:	str	lr, [r4, #20]
   139c0:	bl	16d3c <UnityAssertEqualNumber@@Base>
   139c4:	ldr	r3, [r4, #24]
   139c8:	mov	r0, r5
   139cc:	ldr	r2, [r4, #28]
   139d0:	adds	r3, r3, #1
   139d4:	adc	r2, r2, #0
   139d8:	str	r3, [r4, #24]
   139dc:	str	r2, [r4, #28]
   139e0:	bl	1ad24 <destroy_lexer@@Base>
   139e4:	ldr	r3, [r4, #32]
   139e8:	ldr	r2, [r4, #36]	; 0x24
   139ec:	adds	r3, r3, #1
   139f0:	adc	r2, r2, #0
   139f4:	str	r3, [r4, #32]
   139f8:	str	r2, [r4, #36]	; 0x24
   139fc:	add	sp, sp, #28
   13a00:	ldrd	r4, [sp]
   13a04:	add	sp, sp, #8
   13a08:	pop	{pc}		; (ldr pc, [sp], #4)
   13a0c:	ldrdeq	ip, [r1], -r8
   13a10:	strdeq	sl, [r0], -r8

00013a14 <read_token_int_value@@Base>:
   13a14:	strd	r4, [sp, #-12]!
   13a18:	ldr	r4, [pc, #212]	; 13af4 <read_token_int_value@@Base+0xe0>
   13a1c:	ldr	r1, [pc, #212]	; 13af8 <read_token_int_value@@Base+0xe4>
   13a20:	add	r4, pc, r4
   13a24:	add	r4, r4, #768	; 0x300
   13a28:	ldr	r3, [r4, #-8]
   13a2c:	add	r1, pc, r1
   13a30:	ldr	r2, [r4, #-4]
   13a34:	str	lr, [sp, #8]
   13a38:	sub	sp, sp, #28
   13a3c:	add	r5, sp, #12
   13a40:	adds	r3, r3, #1
   13a44:	mov	r0, r5
   13a48:	adc	r2, r2, #0
   13a4c:	str	r3, [r4, #-8]
   13a50:	str	r2, [r4, #-4]
   13a54:	bl	1acc8 <init_lexer@@Base>
   13a58:	ldr	r3, [r4]
   13a5c:	mov	r0, r5
   13a60:	ldr	r2, [r4, #4]
   13a64:	adds	r3, r3, #1
   13a68:	adc	r2, r2, #0
   13a6c:	str	r3, [r4]
   13a70:	str	r2, [r4, #4]
   13a74:	bl	1af6c <next@@Base>
   13a78:	mov	lr, #148	; 0x94
   13a7c:	ldr	ip, [r4, #8]
   13a80:	mov	r2, #0
   13a84:	mov	r3, #296	; 0x128
   13a88:	ldr	r1, [r0]
   13a8c:	mov	r0, #1
   13a90:	str	lr, [sp]
   13a94:	ldr	lr, [r4, #12]
   13a98:	adds	ip, ip, r0
   13a9c:	str	ip, [r4, #8]
   13aa0:	adc	lr, lr, r2
   13aa4:	str	lr, [r4, #12]
   13aa8:	bl	16d3c <UnityAssertEqualNumber@@Base>
   13aac:	ldr	r3, [r4, #16]
   13ab0:	mov	r0, r5
   13ab4:	ldr	r2, [r4, #20]
   13ab8:	adds	r3, r3, #1
   13abc:	adc	r2, r2, #0
   13ac0:	str	r3, [r4, #16]
   13ac4:	str	r2, [r4, #20]
   13ac8:	bl	1ad24 <destroy_lexer@@Base>
   13acc:	ldr	r3, [r4, #24]
   13ad0:	ldr	r2, [r4, #28]
   13ad4:	adds	r3, r3, #1
   13ad8:	adc	r2, r2, #0
   13adc:	str	r3, [r4, #24]
   13ae0:	str	r2, [r4, #28]
   13ae4:	add	sp, sp, #28
   13ae8:	ldrd	r4, [sp]
   13aec:	add	sp, sp, #8
   13af0:	pop	{pc}		; (ldr pc, [sp], #4)
   13af4:	strdeq	ip, [r1], -r0
   13af8:	andeq	sl, r0, r8, lsl r9

00013afc <read_token_int_type@@Base>:
   13afc:	strd	r4, [sp, #-12]!
   13b00:	ldr	r4, [pc, #212]	; 13bdc <read_token_int_type@@Base+0xe0>
   13b04:	ldr	r1, [pc, #212]	; 13be0 <read_token_int_type@@Base+0xe4>
   13b08:	add	r4, pc, r4
   13b0c:	add	r4, r4, #800	; 0x320
   13b10:	ldr	r3, [r4]
   13b14:	add	r1, pc, r1
   13b18:	ldr	r2, [r4, #4]
   13b1c:	str	lr, [sp, #8]
   13b20:	sub	sp, sp, #28
   13b24:	add	r5, sp, #12
   13b28:	adds	r3, r3, #1
   13b2c:	mov	r0, r5
   13b30:	adc	r2, r2, #0
   13b34:	str	r3, [r4]
   13b38:	str	r2, [r4, #4]
   13b3c:	bl	1acc8 <init_lexer@@Base>
   13b40:	ldr	r3, [r4, #8]
   13b44:	mov	r0, r5
   13b48:	ldr	r2, [r4, #12]
   13b4c:	adds	r3, r3, #1
   13b50:	adc	r2, r2, #0
   13b54:	str	r3, [r4, #8]
   13b58:	str	r2, [r4, #12]
   13b5c:	bl	1af6c <next@@Base>
   13b60:	mov	lr, #148	; 0x94
   13b64:	ldr	ip, [r4, #16]
   13b68:	mov	r2, #0
   13b6c:	movw	r3, #279	; 0x117
   13b70:	ldr	r1, [r0]
   13b74:	mov	r0, r2
   13b78:	str	lr, [sp]
   13b7c:	ldr	lr, [r4, #20]
   13b80:	adds	ip, ip, #1
   13b84:	str	ip, [r4, #16]
   13b88:	adc	lr, lr, r2
   13b8c:	str	lr, [r4, #20]
   13b90:	bl	16d3c <UnityAssertEqualNumber@@Base>
   13b94:	ldr	r3, [r4, #24]
   13b98:	mov	r0, r5
   13b9c:	ldr	r2, [r4, #28]
   13ba0:	adds	r3, r3, #1
   13ba4:	adc	r2, r2, #0
   13ba8:	str	r3, [r4, #24]
   13bac:	str	r2, [r4, #28]
   13bb0:	bl	1ad24 <destroy_lexer@@Base>
   13bb4:	ldr	r3, [r4, #32]
   13bb8:	ldr	r2, [r4, #36]	; 0x24
   13bbc:	adds	r3, r3, #1
   13bc0:	adc	r2, r2, #0
   13bc4:	str	r3, [r4, #32]
   13bc8:	str	r2, [r4, #36]	; 0x24
   13bcc:	add	sp, sp, #28
   13bd0:	ldrd	r4, [sp]
   13bd4:	add	sp, sp, #8
   13bd8:	pop	{pc}		; (ldr pc, [sp], #4)
   13bdc:	andeq	ip, r1, r8, lsl #4
   13be0:	andeq	sl, r0, r8, lsr r8

00013be4 <if_with_else@@Base>:
   13be4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13be8:	strd	r6, [sp, #8]
   13bec:	mov	r6, #148	; 0x94
   13bf0:	ldr	r7, [pc, #2308]	; 144fc <if_with_else@@Base+0x918>
   13bf4:	strd	r8, [sp, #16]
   13bf8:	ldr	r1, [pc, #2304]	; 14500 <if_with_else@@Base+0x91c>
   13bfc:	strd	sl, [sp, #24]
   13c00:	str	lr, [sp, #32]
   13c04:	sub	sp, sp, #28
   13c08:	add	r7, pc, r7
   13c0c:	add	r5, sp, #12
   13c10:	add	r4, r7, #848	; 0x350
   13c14:	ldr	r3, [r4, #-8]
   13c18:	mov	r0, r5
   13c1c:	add	r1, pc, r1
   13c20:	ldr	r2, [r4, #-4]
   13c24:	adds	r3, r3, #1
   13c28:	adc	r2, r2, #0
   13c2c:	str	r3, [r4, #-8]
   13c30:	str	r2, [r4, #-4]
   13c34:	bl	1acc8 <init_lexer@@Base>
   13c38:	ldr	r3, [r4]
   13c3c:	mov	r0, r5
   13c40:	ldr	r2, [r4, #4]
   13c44:	adds	r3, r3, #1
   13c48:	adc	r2, r2, #0
   13c4c:	str	r3, [r4]
   13c50:	str	r2, [r4, #4]
   13c54:	bl	1af6c <next@@Base>
   13c58:	ldr	ip, [r4, #8]
   13c5c:	mov	r2, #0
   13c60:	mov	r3, #210	; 0xd2
   13c64:	ldr	r1, [r0]
   13c68:	str	r6, [sp]
   13c6c:	ldr	r0, [r4, #12]
   13c70:	adds	ip, ip, #1
   13c74:	str	ip, [r4, #8]
   13c78:	adc	ip, r0, r2
   13c7c:	mov	r0, r2
   13c80:	str	ip, [r4, #12]
   13c84:	bl	16d3c <UnityAssertEqualNumber@@Base>
   13c88:	ldr	r3, [r4, #16]
   13c8c:	mov	r0, r5
   13c90:	ldr	r2, [r4, #20]
   13c94:	adds	r3, r3, #1
   13c98:	adc	r2, r2, #0
   13c9c:	str	r3, [r4, #16]
   13ca0:	str	r2, [r4, #20]
   13ca4:	bl	1af6c <next@@Base>
   13ca8:	ldr	ip, [r4, #24]
   13cac:	mov	r2, #0
   13cb0:	mov	r3, #212	; 0xd4
   13cb4:	ldr	r1, [r0]
   13cb8:	str	r6, [sp]
   13cbc:	ldr	r0, [r4, #28]
   13cc0:	adds	ip, ip, #1
   13cc4:	str	ip, [r4, #24]
   13cc8:	adc	ip, r0, r2
   13ccc:	mov	r0, #2
   13cd0:	str	ip, [r4, #28]
   13cd4:	bl	16d3c <UnityAssertEqualNumber@@Base>
   13cd8:	ldr	r3, [r4, #32]
   13cdc:	mov	r0, r5
   13ce0:	ldr	r2, [r4, #36]	; 0x24
   13ce4:	adds	r3, r3, #1
   13ce8:	adc	r2, r2, #0
   13cec:	str	r3, [r4, #32]
   13cf0:	str	r2, [r4, #36]	; 0x24
   13cf4:	bl	1af6c <next@@Base>
   13cf8:	ldr	ip, [r4, #40]	; 0x28
   13cfc:	mov	r2, #0
   13d00:	mov	r3, #214	; 0xd6
   13d04:	ldr	r1, [r0]
   13d08:	str	r6, [sp]
   13d0c:	ldr	r0, [r4, #44]	; 0x2c
   13d10:	adds	ip, ip, #1
   13d14:	str	ip, [r4, #40]	; 0x28
   13d18:	adc	ip, r0, r2
   13d1c:	mov	r0, #3
   13d20:	str	ip, [r4, #44]	; 0x2c
   13d24:	bl	16d3c <UnityAssertEqualNumber@@Base>
   13d28:	ldr	r3, [r4, #48]	; 0x30
   13d2c:	mov	r0, r5
   13d30:	ldr	r2, [r4, #52]	; 0x34
   13d34:	adds	r3, r3, #1
   13d38:	adc	r2, r2, #0
   13d3c:	str	r3, [r4, #48]	; 0x30
   13d40:	str	r2, [r4, #52]	; 0x34
   13d44:	bl	1af6c <next@@Base>
   13d48:	ldr	ip, [r4, #56]	; 0x38
   13d4c:	mov	r2, #0
   13d50:	mov	r3, #216	; 0xd8
   13d54:	ldr	r1, [r0]
   13d58:	str	r6, [sp]
   13d5c:	ldr	r0, [r4, #60]	; 0x3c
   13d60:	adds	ip, ip, #1
   13d64:	str	ip, [r4, #56]	; 0x38
   13d68:	adc	ip, r0, r2
   13d6c:	mov	r0, #4
   13d70:	str	ip, [r4, #60]	; 0x3c
   13d74:	bl	16d3c <UnityAssertEqualNumber@@Base>
   13d78:	ldr	r3, [r4, #64]	; 0x40
   13d7c:	mov	r0, r5
   13d80:	ldr	r2, [r4, #68]	; 0x44
   13d84:	adds	r3, r3, #1
   13d88:	adc	r2, r2, #0
   13d8c:	str	r3, [r4, #64]	; 0x40
   13d90:	str	r2, [r4, #68]	; 0x44
   13d94:	bl	1af6c <next@@Base>
   13d98:	ldr	ip, [r4, #72]	; 0x48
   13d9c:	mov	r2, #0
   13da0:	mov	r3, #218	; 0xda
   13da4:	ldr	r1, [r0]
   13da8:	str	r6, [sp]
   13dac:	ldr	r0, [r4, #76]	; 0x4c
   13db0:	adds	ip, ip, #1
   13db4:	str	ip, [r4, #72]	; 0x48
   13db8:	adc	ip, r0, r2
   13dbc:	mov	r0, #5
   13dc0:	str	ip, [r4, #76]	; 0x4c
   13dc4:	bl	16d3c <UnityAssertEqualNumber@@Base>
   13dc8:	ldr	r3, [r4, #80]	; 0x50
   13dcc:	mov	r0, r5
   13dd0:	ldr	r2, [r4, #84]	; 0x54
   13dd4:	adds	r3, r3, #1
   13dd8:	adc	r2, r2, #0
   13ddc:	str	r3, [r4, #80]	; 0x50
   13de0:	str	r2, [r4, #84]	; 0x54
   13de4:	bl	1af6c <next@@Base>
   13de8:	ldr	ip, [r4, #88]	; 0x58
   13dec:	mov	r2, #0
   13df0:	mov	r3, #220	; 0xdc
   13df4:	ldr	r1, [r0]
   13df8:	str	r6, [sp]
   13dfc:	ldr	r0, [r4, #92]	; 0x5c
   13e00:	adds	ip, ip, #1
   13e04:	str	ip, [r4, #88]	; 0x58
   13e08:	adc	ip, r0, r2
   13e0c:	mov	r0, #10
   13e10:	str	ip, [r4, #92]	; 0x5c
   13e14:	bl	16d3c <UnityAssertEqualNumber@@Base>
   13e18:	ldr	r3, [r4, #96]	; 0x60
   13e1c:	mov	r0, r5
   13e20:	ldr	r2, [r4, #100]	; 0x64
   13e24:	adds	r3, r3, #1
   13e28:	adc	r2, r2, #0
   13e2c:	str	r3, [r4, #96]	; 0x60
   13e30:	str	r2, [r4, #100]	; 0x64
   13e34:	bl	1af6c <next@@Base>
   13e38:	ldr	ip, [r4, #104]	; 0x68
   13e3c:	mov	r2, #0
   13e40:	mov	r3, #222	; 0xde
   13e44:	ldr	r1, [r0]
   13e48:	str	r6, [sp]
   13e4c:	ldr	r0, [r4, #108]	; 0x6c
   13e50:	adds	ip, ip, #1
   13e54:	str	ip, [r4, #104]	; 0x68
   13e58:	adc	ip, r0, r2
   13e5c:	mov	r0, #3
   13e60:	str	ip, [r4, #108]	; 0x6c
   13e64:	bl	16d3c <UnityAssertEqualNumber@@Base>
   13e68:	ldr	r3, [r4, #112]	; 0x70
   13e6c:	mov	r0, r5
   13e70:	ldr	r2, [r4, #116]	; 0x74
   13e74:	adds	r3, r3, #1
   13e78:	adc	r2, r2, #0
   13e7c:	str	r3, [r4, #112]	; 0x70
   13e80:	str	r2, [r4, #116]	; 0x74
   13e84:	bl	1af6c <next@@Base>
   13e88:	ldr	ip, [r4, #120]	; 0x78
   13e8c:	mov	r2, #0
   13e90:	mov	r3, #224	; 0xe0
   13e94:	ldr	r1, [r0]
   13e98:	str	r6, [sp]
   13e9c:	ldr	r0, [r4, #124]	; 0x7c
   13ea0:	adds	ip, ip, #1
   13ea4:	str	ip, [r4, #120]	; 0x78
   13ea8:	adc	ip, r0, r2
   13eac:	mov	r0, #1
   13eb0:	str	ip, [r4, #124]	; 0x7c
   13eb4:	bl	16d3c <UnityAssertEqualNumber@@Base>
   13eb8:	ldr	r3, [r4, #128]	; 0x80
   13ebc:	mov	r0, r5
   13ec0:	ldr	r2, [r4, #132]	; 0x84
   13ec4:	adds	r3, r3, #1
   13ec8:	adc	r2, r2, #0
   13ecc:	str	r3, [r4, #128]	; 0x80
   13ed0:	str	r2, [r4, #132]	; 0x84
   13ed4:	bl	1af6c <next@@Base>
   13ed8:	ldr	ip, [r4, #136]	; 0x88
   13edc:	mov	r2, #0
   13ee0:	mov	r3, #226	; 0xe2
   13ee4:	ldr	r1, [r0]
   13ee8:	str	r6, [sp]
   13eec:	ldr	r0, [r4, #140]	; 0x8c
   13ef0:	adds	ip, ip, #1
   13ef4:	str	ip, [r4, #136]	; 0x88
   13ef8:	adc	ip, r0, r2
   13efc:	mov	r0, #12
   13f00:	str	ip, [r4, #140]	; 0x8c
   13f04:	bl	16d3c <UnityAssertEqualNumber@@Base>
   13f08:	ldr	r3, [r4, #144]	; 0x90
   13f0c:	mov	r0, r5
   13f10:	ldr	r2, [r4, #148]	; 0x94
   13f14:	adds	r3, r3, #1
   13f18:	adc	r2, r2, #0
   13f1c:	str	r3, [r4, #144]	; 0x90
   13f20:	str	r2, [r4, #148]	; 0x94
   13f24:	bl	1af6c <next@@Base>
   13f28:	ldr	ip, [r4, #152]	; 0x98
   13f2c:	mov	r2, #0
   13f30:	mov	r3, #228	; 0xe4
   13f34:	ldr	r1, [r0]
   13f38:	str	r6, [sp]
   13f3c:	ldr	r0, [r4, #156]	; 0x9c
   13f40:	adds	ip, ip, #1
   13f44:	str	ip, [r4, #152]	; 0x98
   13f48:	adc	ip, r0, r2
   13f4c:	mov	r0, #1
   13f50:	str	ip, [r4, #156]	; 0x9c
   13f54:	bl	16d3c <UnityAssertEqualNumber@@Base>
   13f58:	ldr	r3, [r4, #160]	; 0xa0
   13f5c:	mov	r0, r5
   13f60:	ldr	r2, [r4, #164]	; 0xa4
   13f64:	adds	r3, r3, #1
   13f68:	adc	r2, r2, #0
   13f6c:	str	r3, [r4, #160]	; 0xa0
   13f70:	str	r2, [r4, #164]	; 0xa4
   13f74:	bl	1af6c <next@@Base>
   13f78:	ldr	ip, [r4, #168]	; 0xa8
   13f7c:	mov	r2, #0
   13f80:	mov	r3, #230	; 0xe6
   13f84:	ldr	r1, [r0]
   13f88:	str	r6, [sp]
   13f8c:	ldr	r0, [r4, #172]	; 0xac
   13f90:	adds	ip, ip, #1
   13f94:	str	ip, [r4, #168]	; 0xa8
   13f98:	adc	ip, r0, r2
   13f9c:	mov	r0, #4
   13fa0:	str	ip, [r4, #172]	; 0xac
   13fa4:	bl	16d3c <UnityAssertEqualNumber@@Base>
   13fa8:	ldr	r3, [r4, #176]	; 0xb0
   13fac:	mov	r0, r5
   13fb0:	ldr	r2, [r4, #180]	; 0xb4
   13fb4:	adds	r3, r3, #1
   13fb8:	adc	r2, r2, #0
   13fbc:	str	r3, [r4, #176]	; 0xb0
   13fc0:	str	r2, [r4, #180]	; 0xb4
   13fc4:	bl	1af6c <next@@Base>
   13fc8:	ldr	ip, [r4, #184]	; 0xb8
   13fcc:	mov	r2, #0
   13fd0:	mov	r3, #232	; 0xe8
   13fd4:	ldr	r1, [r0]
   13fd8:	str	r6, [sp]
   13fdc:	ldr	r0, [r4, #188]	; 0xbc
   13fe0:	adds	ip, ip, #1
   13fe4:	str	ip, [r4, #184]	; 0xb8
   13fe8:	adc	ip, r0, r2
   13fec:	mov	r0, #5
   13ff0:	str	ip, [r4, #188]	; 0xbc
   13ff4:	bl	16d3c <UnityAssertEqualNumber@@Base>
   13ff8:	ldr	r3, [r4, #192]	; 0xc0
   13ffc:	mov	r0, r5
   14000:	ldr	r2, [r4, #196]	; 0xc4
   14004:	adds	r3, r3, #1
   14008:	adc	r2, r2, #0
   1400c:	str	r3, [r4, #192]	; 0xc0
   14010:	str	r2, [r4, #196]	; 0xc4
   14014:	bl	1af6c <next@@Base>
   14018:	ldr	ip, [r4, #200]	; 0xc8
   1401c:	mov	r2, #0
   14020:	mov	r3, #234	; 0xea
   14024:	ldr	r1, [r0]
   14028:	str	r6, [sp]
   1402c:	ldr	r0, [r4, #204]	; 0xcc
   14030:	adds	ip, ip, #1
   14034:	str	ip, [r4, #200]	; 0xc8
   14038:	adc	ip, r0, r2
   1403c:	mov	r0, #7
   14040:	str	ip, [r4, #204]	; 0xcc
   14044:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14048:	ldr	r3, [r4, #208]	; 0xd0
   1404c:	mov	r0, r5
   14050:	ldr	r2, [r4, #212]	; 0xd4
   14054:	adds	r3, r3, #1
   14058:	adc	r2, r2, #0
   1405c:	str	r3, [r4, #208]	; 0xd0
   14060:	str	r2, [r4, #212]	; 0xd4
   14064:	bl	1af6c <next@@Base>
   14068:	ldr	ip, [r4, #216]	; 0xd8
   1406c:	mov	r2, #0
   14070:	mov	r3, #236	; 0xec
   14074:	ldr	r1, [r0]
   14078:	str	r6, [sp]
   1407c:	ldr	r0, [r4, #220]	; 0xdc
   14080:	adds	ip, ip, #1
   14084:	str	ip, [r4, #216]	; 0xd8
   14088:	adc	ip, r0, r2
   1408c:	mov	r0, #1
   14090:	str	ip, [r4, #220]	; 0xdc
   14094:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14098:	ldr	r3, [r4, #224]	; 0xe0
   1409c:	mov	r0, r5
   140a0:	ldr	r2, [r4, #228]	; 0xe4
   140a4:	adds	r3, r3, #1
   140a8:	adc	r2, r2, #0
   140ac:	str	r3, [r4, #224]	; 0xe0
   140b0:	str	r2, [r4, #228]	; 0xe4
   140b4:	bl	1af6c <next@@Base>
   140b8:	ldr	ip, [r4, #232]	; 0xe8
   140bc:	mov	r2, #0
   140c0:	mov	r3, #238	; 0xee
   140c4:	ldr	r1, [r0]
   140c8:	str	r6, [sp]
   140cc:	ldr	r0, [r4, #236]	; 0xec
   140d0:	adds	ip, ip, #1
   140d4:	str	ip, [r4, #232]	; 0xe8
   140d8:	adc	ip, r0, r2
   140dc:	mov	r0, #8
   140e0:	str	ip, [r4, #236]	; 0xec
   140e4:	bl	16d3c <UnityAssertEqualNumber@@Base>
   140e8:	ldr	r3, [r4, #240]	; 0xf0
   140ec:	mov	r0, r5
   140f0:	ldr	r2, [r4, #244]	; 0xf4
   140f4:	adds	r3, r3, #1
   140f8:	adc	r2, r2, #0
   140fc:	str	r3, [r4, #240]	; 0xf0
   14100:	str	r2, [r4, #244]	; 0xf4
   14104:	bl	1af6c <next@@Base>
   14108:	ldr	r2, [r4, #248]	; 0xf8
   1410c:	mov	r3, #240	; 0xf0
   14110:	ldr	r1, [r0]
   14114:	str	r6, [sp]
   14118:	ldr	r0, [r4, #252]	; 0xfc
   1411c:	adds	r2, r2, #1
   14120:	str	r2, [r4, #248]	; 0xf8
   14124:	mov	r2, #0
   14128:	adc	r0, r0, #0
   1412c:	str	r0, [r4, #252]	; 0xfc
   14130:	mov	r0, #6
   14134:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14138:	ldr	r3, [r7, #1104]	; 0x450
   1413c:	mov	r0, r5
   14140:	ldr	r1, [r7, #1108]	; 0x454
   14144:	adds	r3, r3, #1
   14148:	adc	r1, r1, #0
   1414c:	str	r3, [r7, #1104]	; 0x450
   14150:	str	r1, [r7, #1108]	; 0x454
   14154:	bl	1af6c <next@@Base>
   14158:	ldr	ip, [r7, #1112]	; 0x458
   1415c:	mov	r2, #0
   14160:	mov	r3, #242	; 0xf2
   14164:	ldr	r1, [r0]
   14168:	str	r6, [sp]
   1416c:	ldr	r0, [r7, #1116]	; 0x45c
   14170:	adds	ip, ip, #1
   14174:	str	ip, [r7, #1112]	; 0x458
   14178:	adc	ip, r0, r2
   1417c:	mov	r0, #11
   14180:	str	ip, [r7, #1116]	; 0x45c
   14184:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14188:	ldr	r3, [r7, #1120]	; 0x460
   1418c:	mov	r0, r5
   14190:	ldr	r2, [r7, #1124]	; 0x464
   14194:	adds	r3, r3, #1
   14198:	adc	r2, r2, #0
   1419c:	str	r3, [r7, #1120]	; 0x460
   141a0:	str	r2, [r7, #1124]	; 0x464
   141a4:	bl	1af6c <next@@Base>
   141a8:	ldr	ip, [r7, #1128]	; 0x468
   141ac:	mov	r2, #0
   141b0:	mov	r3, #244	; 0xf4
   141b4:	ldr	r1, [r0]
   141b8:	str	r6, [sp]
   141bc:	ldr	r0, [r7, #1132]	; 0x46c
   141c0:	adds	ip, ip, #1
   141c4:	str	ip, [r7, #1128]	; 0x468
   141c8:	adc	ip, r0, r2
   141cc:	mov	r0, #5
   141d0:	str	ip, [r7, #1132]	; 0x46c
   141d4:	bl	16d3c <UnityAssertEqualNumber@@Base>
   141d8:	ldr	r3, [r7, #1136]	; 0x470
   141dc:	mov	r0, r5
   141e0:	ldr	r2, [r7, #1140]	; 0x474
   141e4:	adds	r3, r3, #1
   141e8:	adc	r2, r2, #0
   141ec:	str	r3, [r7, #1136]	; 0x470
   141f0:	str	r2, [r7, #1140]	; 0x474
   141f4:	bl	1af6c <next@@Base>
   141f8:	ldr	ip, [r7, #1144]	; 0x478
   141fc:	mov	r2, #0
   14200:	mov	r3, #246	; 0xf6
   14204:	ldr	r1, [r0]
   14208:	str	r6, [sp]
   1420c:	ldr	r0, [r7, #1148]	; 0x47c
   14210:	adds	ip, ip, #1
   14214:	str	ip, [r7, #1144]	; 0x478
   14218:	adc	ip, r0, r2
   1421c:	mov	r0, #7
   14220:	str	ip, [r7, #1148]	; 0x47c
   14224:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14228:	ldr	r3, [r7, #1152]	; 0x480
   1422c:	mov	r0, r5
   14230:	ldr	r2, [r7, #1156]	; 0x484
   14234:	adds	r3, r3, #1
   14238:	adc	r2, r2, #0
   1423c:	str	r3, [r7, #1152]	; 0x480
   14240:	str	r2, [r7, #1156]	; 0x484
   14244:	bl	1af6c <next@@Base>
   14248:	ldr	ip, [r7, #1160]	; 0x488
   1424c:	mov	r2, #0
   14250:	mov	r3, #248	; 0xf8
   14254:	ldr	r1, [r0]
   14258:	str	r6, [sp]
   1425c:	ldr	r0, [r7, #1164]	; 0x48c
   14260:	adds	ip, ip, #1
   14264:	str	ip, [r7, #1160]	; 0x488
   14268:	adc	ip, r0, r2
   1426c:	mov	r0, #1
   14270:	str	ip, [r7, #1164]	; 0x48c
   14274:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14278:	ldr	r3, [r7, #1168]	; 0x490
   1427c:	mov	r0, r5
   14280:	ldr	r2, [r7, #1172]	; 0x494
   14284:	adds	r3, r3, #1
   14288:	adc	r2, r2, #0
   1428c:	str	r3, [r7, #1168]	; 0x490
   14290:	str	r2, [r7, #1172]	; 0x494
   14294:	bl	1af6c <next@@Base>
   14298:	ldr	ip, [r7, #1176]	; 0x498
   1429c:	mov	r2, #0
   142a0:	mov	r3, #250	; 0xfa
   142a4:	ldr	r1, [r0]
   142a8:	str	r6, [sp]
   142ac:	ldr	r0, [r7, #1180]	; 0x49c
   142b0:	adds	ip, ip, #1
   142b4:	str	ip, [r7, #1176]	; 0x498
   142b8:	adc	ip, r0, r2
   142bc:	mov	r0, #8
   142c0:	str	ip, [r7, #1180]	; 0x49c
   142c4:	bl	16d3c <UnityAssertEqualNumber@@Base>
   142c8:	ldr	r3, [r7, #1184]	; 0x4a0
   142cc:	mov	r0, r5
   142d0:	ldr	r2, [r7, #1188]	; 0x4a4
   142d4:	adds	r3, r3, #1
   142d8:	adc	r2, r2, #0
   142dc:	str	r3, [r7, #1184]	; 0x4a0
   142e0:	str	r2, [r7, #1188]	; 0x4a4
   142e4:	bl	1af6c <next@@Base>
   142e8:	ldr	ip, [r7, #1192]	; 0x4a8
   142ec:	mov	r2, #0
   142f0:	mov	r3, #252	; 0xfc
   142f4:	ldr	r1, [r0]
   142f8:	str	r6, [sp]
   142fc:	ldr	r0, [r7, #1196]	; 0x4ac
   14300:	adds	ip, ip, #1
   14304:	str	ip, [r7, #1192]	; 0x4a8
   14308:	adc	ip, r0, r2
   1430c:	mov	r0, #6
   14310:	str	ip, [r7, #1196]	; 0x4ac
   14314:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14318:	ldr	r3, [r7, #1200]	; 0x4b0
   1431c:	mov	r0, r5
   14320:	ldr	r2, [r7, #1204]	; 0x4b4
   14324:	adds	r3, r3, #1
   14328:	adc	r2, r2, #0
   1432c:	str	r3, [r7, #1200]	; 0x4b0
   14330:	str	r2, [r7, #1204]	; 0x4b4
   14334:	bl	1af6c <next@@Base>
   14338:	ldr	ip, [r7, #1208]	; 0x4b8
   1433c:	mov	r2, #0
   14340:	mov	r3, #254	; 0xfe
   14344:	ldr	r1, [r0]
   14348:	str	r6, [sp]
   1434c:	ldr	r0, [r7, #1212]	; 0x4bc
   14350:	adds	ip, ip, #1
   14354:	str	ip, [r7, #1208]	; 0x4b8
   14358:	adc	ip, r0, r2
   1435c:	mov	r0, #7
   14360:	str	ip, [r7, #1212]	; 0x4bc
   14364:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14368:	ldr	r3, [r7, #1216]	; 0x4c0
   1436c:	mov	r0, r5
   14370:	ldr	r2, [r7, #1220]	; 0x4c4
   14374:	adds	r3, r3, #1
   14378:	adc	r2, r2, #0
   1437c:	str	r3, [r7, #1216]	; 0x4c0
   14380:	str	r2, [r7, #1220]	; 0x4c4
   14384:	bl	1af6c <next@@Base>
   14388:	ldr	ip, [r7, #1224]	; 0x4c8
   1438c:	mov	r2, #0
   14390:	mov	r3, #256	; 0x100
   14394:	ldr	r1, [r0]
   14398:	str	r6, [sp]
   1439c:	ldr	r0, [r7, #1228]	; 0x4cc
   143a0:	adds	ip, ip, #1
   143a4:	str	ip, [r7, #1224]	; 0x4c8
   143a8:	adc	ip, r0, r2
   143ac:	mov	r0, #1
   143b0:	str	ip, [r7, #1228]	; 0x4cc
   143b4:	bl	16d3c <UnityAssertEqualNumber@@Base>
   143b8:	ldr	r3, [r7, #1232]	; 0x4d0
   143bc:	mov	r0, r5
   143c0:	ldr	r2, [r7, #1236]	; 0x4d4
   143c4:	adds	r3, r3, #1
   143c8:	adc	r2, r2, #0
   143cc:	str	r3, [r7, #1232]	; 0x4d0
   143d0:	str	r2, [r7, #1236]	; 0x4d4
   143d4:	bl	1af6c <next@@Base>
   143d8:	ldr	ip, [r7, #1240]	; 0x4d8
   143dc:	mov	r2, #0
   143e0:	movw	r3, #258	; 0x102
   143e4:	ldr	r1, [r0]
   143e8:	mov	r0, #8
   143ec:	str	r6, [sp]
   143f0:	ldr	lr, [r7, #1244]	; 0x4dc
   143f4:	adds	ip, ip, #1
   143f8:	str	ip, [r7, #1240]	; 0x4d8
   143fc:	adc	lr, lr, r2
   14400:	str	lr, [r7, #1244]	; 0x4dc
   14404:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14408:	ldr	r3, [r7, #1248]	; 0x4e0
   1440c:	mov	r0, r5
   14410:	ldr	r2, [r7, #1252]	; 0x4e4
   14414:	adds	r3, r3, #1
   14418:	adc	r2, r2, #0
   1441c:	str	r3, [r7, #1248]	; 0x4e0
   14420:	str	r2, [r7, #1252]	; 0x4e4
   14424:	bl	1af6c <next@@Base>
   14428:	ldr	ip, [r7, #1256]	; 0x4e8
   1442c:	mov	r2, #0
   14430:	mov	r3, #260	; 0x104
   14434:	ldr	r1, [r0]
   14438:	mov	r0, #6
   1443c:	str	r6, [sp]
   14440:	ldr	lr, [r7, #1260]	; 0x4ec
   14444:	adds	ip, ip, #1
   14448:	str	ip, [r7, #1256]	; 0x4e8
   1444c:	adc	lr, lr, r2
   14450:	str	lr, [r7, #1260]	; 0x4ec
   14454:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14458:	ldr	r3, [r7, #1264]	; 0x4f0
   1445c:	mov	r0, r5
   14460:	ldr	r2, [r7, #1268]	; 0x4f4
   14464:	adds	r3, r3, #1
   14468:	adc	r2, r2, #0
   1446c:	str	r3, [r7, #1264]	; 0x4f0
   14470:	str	r2, [r7, #1268]	; 0x4f4
   14474:	bl	1af6c <next@@Base>
   14478:	ldr	ip, [r7, #1272]	; 0x4f8
   1447c:	mov	r2, #0
   14480:	movw	r3, #262	; 0x106
   14484:	ldr	lr, [r7, #1276]	; 0x4fc
   14488:	ldr	r1, [r0]
   1448c:	mov	r0, #9
   14490:	adds	ip, ip, #1
   14494:	str	r6, [sp]
   14498:	adc	lr, lr, r2
   1449c:	str	ip, [r7, #1272]	; 0x4f8
   144a0:	str	lr, [r7, #1276]	; 0x4fc
   144a4:	bl	16d3c <UnityAssertEqualNumber@@Base>
   144a8:	ldr	r3, [r7, #1280]	; 0x500
   144ac:	mov	r0, r5
   144b0:	ldr	r2, [r7, #1284]	; 0x504
   144b4:	adds	r3, r3, #1
   144b8:	adc	r2, r2, #0
   144bc:	str	r3, [r7, #1280]	; 0x500
   144c0:	str	r2, [r7, #1284]	; 0x504
   144c4:	bl	1ad24 <destroy_lexer@@Base>
   144c8:	ldr	r3, [r7, #1288]	; 0x508
   144cc:	ldr	r2, [r7, #1292]	; 0x50c
   144d0:	adds	r3, r3, #1
   144d4:	adc	r2, r2, #0
   144d8:	str	r3, [r7, #1288]	; 0x508
   144dc:	str	r2, [r7, #1292]	; 0x50c
   144e0:	add	sp, sp, #28
   144e4:	ldrd	r4, [sp]
   144e8:	ldrd	r6, [sp, #8]
   144ec:	ldrd	r8, [sp, #16]
   144f0:	ldrd	sl, [sp, #24]
   144f4:	add	sp, sp, #32
   144f8:	pop	{pc}		; (ldr pc, [sp], #4)
   144fc:	andeq	ip, r1, r8, lsl #2
   14500:	andeq	sl, r0, r4, lsr r7

00014504 <if_without_else@@Base>:
   14504:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14508:	strd	r6, [sp, #8]
   1450c:	mov	r6, #148	; 0x94
   14510:	ldr	r7, [pc, #1828]	; 14c3c <if_without_else@@Base+0x738>
   14514:	strd	r8, [sp, #16]
   14518:	ldr	r1, [pc, #1824]	; 14c40 <if_without_else@@Base+0x73c>
   1451c:	strd	sl, [sp, #24]
   14520:	str	lr, [sp, #32]
   14524:	sub	sp, sp, #28
   14528:	add	r7, pc, r7
   1452c:	add	r5, sp, #12
   14530:	add	r4, r7, #1296	; 0x510
   14534:	ldr	r3, [r4]
   14538:	mov	r0, r5
   1453c:	add	r1, pc, r1
   14540:	ldr	r2, [r4, #4]
   14544:	adds	r3, r3, #1
   14548:	adc	r2, r2, #0
   1454c:	str	r3, [r4]
   14550:	str	r2, [r4, #4]
   14554:	bl	1acc8 <init_lexer@@Base>
   14558:	ldr	r3, [r4, #8]
   1455c:	mov	r0, r5
   14560:	ldr	r2, [r4, #12]
   14564:	adds	r3, r3, #1
   14568:	adc	r2, r2, #0
   1456c:	str	r3, [r4, #8]
   14570:	str	r2, [r4, #12]
   14574:	bl	1af6c <next@@Base>
   14578:	ldr	ip, [r4, #16]
   1457c:	mov	r2, #0
   14580:	mov	r3, #140	; 0x8c
   14584:	ldr	r1, [r0]
   14588:	str	r6, [sp]
   1458c:	ldr	r0, [r4, #20]
   14590:	adds	ip, ip, #1
   14594:	str	ip, [r4, #16]
   14598:	adc	ip, r0, r2
   1459c:	mov	r0, r2
   145a0:	str	ip, [r4, #20]
   145a4:	bl	16d3c <UnityAssertEqualNumber@@Base>
   145a8:	ldr	r3, [r4, #24]
   145ac:	mov	r0, r5
   145b0:	ldr	r2, [r4, #28]
   145b4:	adds	r3, r3, #1
   145b8:	adc	r2, r2, #0
   145bc:	str	r3, [r4, #24]
   145c0:	str	r2, [r4, #28]
   145c4:	bl	1af6c <next@@Base>
   145c8:	ldr	ip, [r4, #32]
   145cc:	mov	r2, #0
   145d0:	mov	r3, #142	; 0x8e
   145d4:	ldr	r1, [r0]
   145d8:	str	r6, [sp]
   145dc:	ldr	r0, [r4, #36]	; 0x24
   145e0:	adds	ip, ip, #1
   145e4:	str	ip, [r4, #32]
   145e8:	adc	ip, r0, r2
   145ec:	mov	r0, #2
   145f0:	str	ip, [r4, #36]	; 0x24
   145f4:	bl	16d3c <UnityAssertEqualNumber@@Base>
   145f8:	ldr	r3, [r4, #40]	; 0x28
   145fc:	mov	r0, r5
   14600:	ldr	r2, [r4, #44]	; 0x2c
   14604:	adds	r3, r3, #1
   14608:	adc	r2, r2, #0
   1460c:	str	r3, [r4, #40]	; 0x28
   14610:	str	r2, [r4, #44]	; 0x2c
   14614:	bl	1af6c <next@@Base>
   14618:	ldr	ip, [r4, #48]	; 0x30
   1461c:	mov	r2, #0
   14620:	mov	r3, #144	; 0x90
   14624:	ldr	r1, [r0]
   14628:	str	r6, [sp]
   1462c:	ldr	r0, [r4, #52]	; 0x34
   14630:	adds	ip, ip, #1
   14634:	str	ip, [r4, #48]	; 0x30
   14638:	adc	ip, r0, r2
   1463c:	mov	r0, #3
   14640:	str	ip, [r4, #52]	; 0x34
   14644:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14648:	ldr	r3, [r4, #56]	; 0x38
   1464c:	mov	r0, r5
   14650:	ldr	r2, [r4, #60]	; 0x3c
   14654:	adds	r3, r3, #1
   14658:	adc	r2, r2, #0
   1465c:	str	r3, [r4, #56]	; 0x38
   14660:	str	r2, [r4, #60]	; 0x3c
   14664:	bl	1af6c <next@@Base>
   14668:	ldr	ip, [r4, #64]	; 0x40
   1466c:	mov	r2, #0
   14670:	mov	r3, #146	; 0x92
   14674:	ldr	r1, [r0]
   14678:	str	r6, [sp]
   1467c:	ldr	r0, [r4, #68]	; 0x44
   14680:	adds	ip, ip, #1
   14684:	str	ip, [r4, #64]	; 0x40
   14688:	adc	ip, r0, r2
   1468c:	mov	r0, #4
   14690:	str	ip, [r4, #68]	; 0x44
   14694:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14698:	ldr	r3, [r4, #72]	; 0x48
   1469c:	mov	r0, r5
   146a0:	ldr	r2, [r4, #76]	; 0x4c
   146a4:	adds	r3, r3, #1
   146a8:	adc	r2, r2, #0
   146ac:	str	r3, [r4, #72]	; 0x48
   146b0:	str	r2, [r4, #76]	; 0x4c
   146b4:	bl	1af6c <next@@Base>
   146b8:	ldr	ip, [r4, #80]	; 0x50
   146bc:	mov	r2, #0
   146c0:	mov	r3, r6
   146c4:	ldr	r1, [r0]
   146c8:	str	r6, [sp]
   146cc:	ldr	r0, [r4, #84]	; 0x54
   146d0:	adds	ip, ip, #1
   146d4:	str	ip, [r4, #80]	; 0x50
   146d8:	adc	ip, r0, r2
   146dc:	mov	r0, #5
   146e0:	str	ip, [r4, #84]	; 0x54
   146e4:	bl	16d3c <UnityAssertEqualNumber@@Base>
   146e8:	ldr	r3, [r4, #88]	; 0x58
   146ec:	mov	r0, r5
   146f0:	ldr	r2, [r4, #92]	; 0x5c
   146f4:	adds	r3, r3, #1
   146f8:	adc	r2, r2, #0
   146fc:	str	r3, [r4, #88]	; 0x58
   14700:	str	r2, [r4, #92]	; 0x5c
   14704:	bl	1af6c <next@@Base>
   14708:	ldr	ip, [r4, #96]	; 0x60
   1470c:	mov	r2, #0
   14710:	mov	r3, #150	; 0x96
   14714:	ldr	r1, [r0]
   14718:	str	r6, [sp]
   1471c:	ldr	r0, [r4, #100]	; 0x64
   14720:	adds	ip, ip, #1
   14724:	str	ip, [r4, #96]	; 0x60
   14728:	adc	ip, r0, r2
   1472c:	mov	r0, #10
   14730:	str	ip, [r4, #100]	; 0x64
   14734:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14738:	ldr	r3, [r4, #104]	; 0x68
   1473c:	mov	r0, r5
   14740:	ldr	r2, [r4, #108]	; 0x6c
   14744:	adds	r3, r3, #1
   14748:	adc	r2, r2, #0
   1474c:	str	r3, [r4, #104]	; 0x68
   14750:	str	r2, [r4, #108]	; 0x6c
   14754:	bl	1af6c <next@@Base>
   14758:	ldr	ip, [r4, #112]	; 0x70
   1475c:	mov	r2, #0
   14760:	mov	r3, #152	; 0x98
   14764:	ldr	r1, [r0]
   14768:	str	r6, [sp]
   1476c:	ldr	r0, [r4, #116]	; 0x74
   14770:	adds	ip, ip, #1
   14774:	str	ip, [r4, #112]	; 0x70
   14778:	adc	ip, r0, r2
   1477c:	mov	r0, #3
   14780:	str	ip, [r4, #116]	; 0x74
   14784:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14788:	ldr	r3, [r4, #120]	; 0x78
   1478c:	mov	r0, r5
   14790:	ldr	r2, [r4, #124]	; 0x7c
   14794:	adds	r3, r3, #1
   14798:	adc	r2, r2, #0
   1479c:	str	r3, [r4, #120]	; 0x78
   147a0:	str	r2, [r4, #124]	; 0x7c
   147a4:	bl	1af6c <next@@Base>
   147a8:	ldr	ip, [r4, #128]	; 0x80
   147ac:	mov	r2, #0
   147b0:	mov	r3, #154	; 0x9a
   147b4:	ldr	r1, [r0]
   147b8:	str	r6, [sp]
   147bc:	ldr	r0, [r4, #132]	; 0x84
   147c0:	adds	ip, ip, #1
   147c4:	str	ip, [r4, #128]	; 0x80
   147c8:	adc	ip, r0, r2
   147cc:	mov	r0, #1
   147d0:	str	ip, [r4, #132]	; 0x84
   147d4:	bl	16d3c <UnityAssertEqualNumber@@Base>
   147d8:	ldr	r3, [r4, #136]	; 0x88
   147dc:	mov	r0, r5
   147e0:	ldr	r2, [r4, #140]	; 0x8c
   147e4:	adds	r3, r3, #1
   147e8:	adc	r2, r2, #0
   147ec:	str	r3, [r4, #136]	; 0x88
   147f0:	str	r2, [r4, #140]	; 0x8c
   147f4:	bl	1af6c <next@@Base>
   147f8:	ldr	ip, [r4, #144]	; 0x90
   147fc:	mov	r2, #0
   14800:	mov	r3, #156	; 0x9c
   14804:	ldr	r1, [r0]
   14808:	str	r6, [sp]
   1480c:	ldr	r0, [r4, #148]	; 0x94
   14810:	adds	ip, ip, #1
   14814:	str	ip, [r4, #144]	; 0x90
   14818:	adc	ip, r0, r2
   1481c:	mov	r0, #12
   14820:	str	ip, [r4, #148]	; 0x94
   14824:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14828:	ldr	r3, [r4, #152]	; 0x98
   1482c:	mov	r0, r5
   14830:	ldr	r2, [r4, #156]	; 0x9c
   14834:	adds	r3, r3, #1
   14838:	adc	r2, r2, #0
   1483c:	str	r3, [r4, #152]	; 0x98
   14840:	str	r2, [r4, #156]	; 0x9c
   14844:	bl	1af6c <next@@Base>
   14848:	ldr	ip, [r4, #160]	; 0xa0
   1484c:	mov	r2, #0
   14850:	mov	r3, #158	; 0x9e
   14854:	ldr	r1, [r0]
   14858:	str	r6, [sp]
   1485c:	ldr	r0, [r4, #164]	; 0xa4
   14860:	adds	ip, ip, #1
   14864:	str	ip, [r4, #160]	; 0xa0
   14868:	adc	ip, r0, r2
   1486c:	mov	r0, #1
   14870:	str	ip, [r4, #164]	; 0xa4
   14874:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14878:	ldr	r3, [r4, #168]	; 0xa8
   1487c:	mov	r0, r5
   14880:	ldr	r2, [r4, #172]	; 0xac
   14884:	adds	r3, r3, #1
   14888:	adc	r2, r2, #0
   1488c:	str	r3, [r4, #168]	; 0xa8
   14890:	str	r2, [r4, #172]	; 0xac
   14894:	bl	1af6c <next@@Base>
   14898:	ldr	ip, [r4, #176]	; 0xb0
   1489c:	mov	r2, #0
   148a0:	mov	r3, #160	; 0xa0
   148a4:	ldr	r1, [r0]
   148a8:	str	r6, [sp]
   148ac:	ldr	r0, [r4, #180]	; 0xb4
   148b0:	adds	ip, ip, #1
   148b4:	str	ip, [r4, #176]	; 0xb0
   148b8:	adc	ip, r0, r2
   148bc:	mov	r0, #4
   148c0:	str	ip, [r4, #180]	; 0xb4
   148c4:	bl	16d3c <UnityAssertEqualNumber@@Base>
   148c8:	ldr	r3, [r4, #184]	; 0xb8
   148cc:	mov	r0, r5
   148d0:	ldr	r2, [r4, #188]	; 0xbc
   148d4:	adds	r3, r3, #1
   148d8:	adc	r2, r2, #0
   148dc:	str	r3, [r4, #184]	; 0xb8
   148e0:	str	r2, [r4, #188]	; 0xbc
   148e4:	bl	1af6c <next@@Base>
   148e8:	ldr	ip, [r4, #192]	; 0xc0
   148ec:	mov	r2, #0
   148f0:	mov	r3, #162	; 0xa2
   148f4:	ldr	r1, [r0]
   148f8:	str	r6, [sp]
   148fc:	ldr	r0, [r4, #196]	; 0xc4
   14900:	adds	ip, ip, #1
   14904:	str	ip, [r4, #192]	; 0xc0
   14908:	adc	ip, r0, r2
   1490c:	mov	r0, #5
   14910:	str	ip, [r4, #196]	; 0xc4
   14914:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14918:	ldr	r3, [r4, #200]	; 0xc8
   1491c:	mov	r0, r5
   14920:	ldr	r2, [r4, #204]	; 0xcc
   14924:	adds	r3, r3, #1
   14928:	adc	r2, r2, #0
   1492c:	str	r3, [r4, #200]	; 0xc8
   14930:	str	r2, [r4, #204]	; 0xcc
   14934:	bl	1af6c <next@@Base>
   14938:	ldr	ip, [r4, #208]	; 0xd0
   1493c:	mov	r2, #0
   14940:	mov	r3, #164	; 0xa4
   14944:	ldr	r1, [r0]
   14948:	str	r6, [sp]
   1494c:	ldr	r0, [r4, #212]	; 0xd4
   14950:	adds	ip, ip, #1
   14954:	str	ip, [r4, #208]	; 0xd0
   14958:	adc	ip, r0, r2
   1495c:	mov	r0, #7
   14960:	str	ip, [r4, #212]	; 0xd4
   14964:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14968:	ldr	r3, [r4, #216]	; 0xd8
   1496c:	mov	r0, r5
   14970:	ldr	r2, [r4, #220]	; 0xdc
   14974:	adds	r3, r3, #1
   14978:	adc	r2, r2, #0
   1497c:	str	r3, [r4, #216]	; 0xd8
   14980:	str	r2, [r4, #220]	; 0xdc
   14984:	bl	1af6c <next@@Base>
   14988:	ldr	ip, [r4, #224]	; 0xe0
   1498c:	mov	r2, #0
   14990:	mov	r3, #166	; 0xa6
   14994:	ldr	r1, [r0]
   14998:	str	r6, [sp]
   1499c:	ldr	r0, [r4, #228]	; 0xe4
   149a0:	adds	ip, ip, #1
   149a4:	str	ip, [r4, #224]	; 0xe0
   149a8:	adc	ip, r0, r2
   149ac:	mov	r0, #1
   149b0:	str	ip, [r4, #228]	; 0xe4
   149b4:	bl	16d3c <UnityAssertEqualNumber@@Base>
   149b8:	ldr	r3, [r4, #232]	; 0xe8
   149bc:	mov	r0, r5
   149c0:	ldr	r2, [r4, #236]	; 0xec
   149c4:	adds	r3, r3, #1
   149c8:	adc	r2, r2, #0
   149cc:	str	r3, [r4, #232]	; 0xe8
   149d0:	str	r2, [r4, #236]	; 0xec
   149d4:	bl	1af6c <next@@Base>
   149d8:	ldr	ip, [r4, #240]	; 0xf0
   149dc:	mov	r2, #0
   149e0:	mov	r3, #168	; 0xa8
   149e4:	ldr	r1, [r0]
   149e8:	str	r6, [sp]
   149ec:	ldr	r0, [r4, #244]	; 0xf4
   149f0:	adds	ip, ip, #1
   149f4:	str	ip, [r4, #240]	; 0xf0
   149f8:	adc	ip, r0, r2
   149fc:	mov	r0, #8
   14a00:	str	ip, [r4, #244]	; 0xf4
   14a04:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14a08:	ldr	r3, [r4, #248]	; 0xf8
   14a0c:	mov	r0, r5
   14a10:	ldr	r2, [r4, #252]	; 0xfc
   14a14:	adds	r3, r3, #1
   14a18:	adc	r2, r2, #0
   14a1c:	str	r3, [r4, #248]	; 0xf8
   14a20:	str	r2, [r4, #252]	; 0xfc
   14a24:	bl	1af6c <next@@Base>
   14a28:	ldr	r1, [r0]
   14a2c:	mov	r2, #0
   14a30:	mov	r3, #170	; 0xaa
   14a34:	str	r6, [sp]
   14a38:	ldr	r0, [r7, #1552]	; 0x610
   14a3c:	ldr	lr, [r7, #1556]	; 0x614
   14a40:	adds	r0, r0, #1
   14a44:	adc	lr, lr, r2
   14a48:	str	r0, [r7, #1552]	; 0x610
   14a4c:	mov	r0, #6
   14a50:	str	lr, [r7, #1556]	; 0x614
   14a54:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14a58:	ldr	r3, [r7, #1560]	; 0x618
   14a5c:	mov	r0, r5
   14a60:	ldr	r2, [r7, #1564]	; 0x61c
   14a64:	adds	r3, r3, #1
   14a68:	adc	r2, r2, #0
   14a6c:	str	r3, [r7, #1560]	; 0x618
   14a70:	str	r2, [r7, #1564]	; 0x61c
   14a74:	bl	1af6c <next@@Base>
   14a78:	ldr	r2, [r7, #1568]	; 0x620
   14a7c:	mov	r3, #172	; 0xac
   14a80:	ldr	r1, [r0]
   14a84:	str	r6, [sp]
   14a88:	ldr	r0, [r7, #1572]	; 0x624
   14a8c:	adds	r2, r2, #1
   14a90:	str	r2, [r7, #1568]	; 0x620
   14a94:	mov	r2, #0
   14a98:	adc	r0, r0, #0
   14a9c:	str	r0, [r7, #1572]	; 0x624
   14aa0:	mov	r0, #7
   14aa4:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14aa8:	ldr	r3, [r7, #1576]	; 0x628
   14aac:	mov	r0, r5
   14ab0:	ldr	r2, [r7, #1580]	; 0x62c
   14ab4:	adds	r3, r3, #1
   14ab8:	adc	r2, r2, #0
   14abc:	str	r3, [r7, #1576]	; 0x628
   14ac0:	str	r2, [r7, #1580]	; 0x62c
   14ac4:	bl	1af6c <next@@Base>
   14ac8:	ldr	r2, [r7, #1584]	; 0x630
   14acc:	mov	r3, #174	; 0xae
   14ad0:	ldr	r1, [r0]
   14ad4:	str	r6, [sp]
   14ad8:	ldr	ip, [r7, #1588]	; 0x634
   14adc:	adds	r0, r2, #1
   14ae0:	mov	r2, #0
   14ae4:	str	r0, [r7, #1584]	; 0x630
   14ae8:	mov	r0, #1
   14aec:	adc	ip, ip, r2
   14af0:	str	ip, [r7, #1588]	; 0x634
   14af4:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14af8:	ldr	r3, [r7, #1592]	; 0x638
   14afc:	mov	r0, r5
   14b00:	ldr	r2, [r7, #1596]	; 0x63c
   14b04:	adds	r3, r3, #1
   14b08:	adc	r2, r2, #0
   14b0c:	str	r3, [r7, #1592]	; 0x638
   14b10:	str	r2, [r7, #1596]	; 0x63c
   14b14:	bl	1af6c <next@@Base>
   14b18:	ldr	ip, [r7, #1600]	; 0x640
   14b1c:	mov	r2, #0
   14b20:	mov	r3, #176	; 0xb0
   14b24:	ldr	r1, [r0]
   14b28:	mov	r0, #8
   14b2c:	str	r6, [sp]
   14b30:	ldr	lr, [r7, #1604]	; 0x644
   14b34:	adds	ip, ip, #1
   14b38:	str	ip, [r7, #1600]	; 0x640
   14b3c:	adc	lr, lr, r2
   14b40:	str	lr, [r7, #1604]	; 0x644
   14b44:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14b48:	ldr	r3, [r7, #1608]	; 0x648
   14b4c:	mov	r0, r5
   14b50:	ldr	r2, [r7, #1612]	; 0x64c
   14b54:	adds	r3, r3, #1
   14b58:	adc	r2, r2, #0
   14b5c:	str	r3, [r7, #1608]	; 0x648
   14b60:	str	r2, [r7, #1612]	; 0x64c
   14b64:	bl	1af6c <next@@Base>
   14b68:	ldr	ip, [r7, #1616]	; 0x650
   14b6c:	mov	r2, #0
   14b70:	mov	r3, #178	; 0xb2
   14b74:	ldr	r1, [r0]
   14b78:	mov	r0, #6
   14b7c:	str	r6, [sp]
   14b80:	ldr	lr, [r7, #1620]	; 0x654
   14b84:	adds	ip, ip, #1
   14b88:	str	ip, [r7, #1616]	; 0x650
   14b8c:	adc	lr, lr, r2
   14b90:	str	lr, [r7, #1620]	; 0x654
   14b94:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14b98:	ldr	r3, [r7, #1624]	; 0x658
   14b9c:	mov	r0, r5
   14ba0:	ldr	r2, [r7, #1628]	; 0x65c
   14ba4:	adds	r3, r3, #1
   14ba8:	adc	r2, r2, #0
   14bac:	str	r3, [r7, #1624]	; 0x658
   14bb0:	str	r2, [r7, #1628]	; 0x65c
   14bb4:	bl	1af6c <next@@Base>
   14bb8:	ldr	ip, [r7, #1632]	; 0x660
   14bbc:	mov	r2, #0
   14bc0:	mov	r3, #180	; 0xb4
   14bc4:	ldr	lr, [r7, #1636]	; 0x664
   14bc8:	ldr	r1, [r0]
   14bcc:	mov	r0, #9
   14bd0:	adds	ip, ip, #1
   14bd4:	str	r6, [sp]
   14bd8:	adc	lr, lr, r2
   14bdc:	str	ip, [r7, #1632]	; 0x660
   14be0:	str	lr, [r7, #1636]	; 0x664
   14be4:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14be8:	ldr	r3, [r7, #1640]	; 0x668
   14bec:	mov	r0, r5
   14bf0:	ldr	r2, [r7, #1644]	; 0x66c
   14bf4:	adds	r3, r3, #1
   14bf8:	adc	r2, r2, #0
   14bfc:	str	r3, [r7, #1640]	; 0x668
   14c00:	str	r2, [r7, #1644]	; 0x66c
   14c04:	bl	1ad24 <destroy_lexer@@Base>
   14c08:	ldr	r3, [r7, #1648]	; 0x670
   14c0c:	ldr	r2, [r7, #1652]	; 0x674
   14c10:	adds	r3, r3, #1
   14c14:	adc	r2, r2, #0
   14c18:	str	r3, [r7, #1648]	; 0x670
   14c1c:	str	r2, [r7, #1652]	; 0x674
   14c20:	add	sp, sp, #28
   14c24:	ldrd	r4, [sp]
   14c28:	ldrd	r6, [sp, #8]
   14c2c:	ldrd	r8, [sp, #16]
   14c30:	ldrd	sl, [sp, #24]
   14c34:	add	sp, sp, #32
   14c38:	pop	{pc}		; (ldr pc, [sp], #4)
   14c3c:	andeq	fp, r1, r8, ror #15
   14c40:	andeq	r9, r0, r8, ror #28

00014c44 <simple_file_only_main@@Base>:
   14c44:	strd	r4, [sp, #-16]!
   14c48:	ldr	r4, [pc, #940]	; 14ffc <simple_file_only_main@@Base+0x3b8>
   14c4c:	ldr	r1, [pc, #940]	; 15000 <simple_file_only_main@@Base+0x3bc>
   14c50:	add	r4, pc, r4
   14c54:	add	r4, r4, #1664	; 0x680
   14c58:	ldr	r3, [r4, #-8]
   14c5c:	add	r1, pc, r1
   14c60:	ldr	r2, [r4, #-4]
   14c64:	str	r6, [sp, #8]
   14c68:	mov	r6, #148	; 0x94
   14c6c:	str	lr, [sp, #12]
   14c70:	sub	sp, sp, #24
   14c74:	adds	r3, r3, #1
   14c78:	add	r5, sp, #12
   14c7c:	mov	r0, r5
   14c80:	adc	r2, r2, #0
   14c84:	str	r3, [r4, #-8]
   14c88:	str	r2, [r4, #-4]
   14c8c:	bl	1acc8 <init_lexer@@Base>
   14c90:	ldr	r3, [r4]
   14c94:	mov	r0, r5
   14c98:	ldr	r2, [r4, #4]
   14c9c:	adds	r3, r3, #1
   14ca0:	adc	r2, r2, #0
   14ca4:	str	r3, [r4]
   14ca8:	str	r2, [r4, #4]
   14cac:	bl	1af6c <next@@Base>
   14cb0:	ldr	ip, [r4, #8]
   14cb4:	mov	r2, #0
   14cb8:	mov	r3, #23
   14cbc:	ldr	lr, [r4, #12]
   14cc0:	ldr	r1, [r0]
   14cc4:	mov	r0, r2
   14cc8:	adds	ip, ip, #1
   14ccc:	str	r6, [sp]
   14cd0:	adc	lr, lr, r2
   14cd4:	str	ip, [r4, #8]
   14cd8:	str	lr, [r4, #12]
   14cdc:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14ce0:	ldr	r3, [r4, #16]
   14ce4:	mov	r0, r5
   14ce8:	ldr	r2, [r4, #20]
   14cec:	adds	r3, r3, #1
   14cf0:	adc	r2, r2, #0
   14cf4:	str	r3, [r4, #16]
   14cf8:	str	r2, [r4, #20]
   14cfc:	bl	1af6c <next@@Base>
   14d00:	ldr	ip, [r4, #24]
   14d04:	mov	r2, #0
   14d08:	mov	r3, #25
   14d0c:	ldr	lr, [r4, #28]
   14d10:	ldr	r1, [r0]
   14d14:	mov	r0, #2
   14d18:	adds	ip, ip, #1
   14d1c:	str	r6, [sp]
   14d20:	adc	lr, lr, r2
   14d24:	str	ip, [r4, #24]
   14d28:	str	lr, [r4, #28]
   14d2c:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14d30:	ldr	r3, [r4, #32]
   14d34:	mov	r0, r5
   14d38:	ldr	r2, [r4, #36]	; 0x24
   14d3c:	adds	r3, r3, #1
   14d40:	adc	r2, r2, #0
   14d44:	str	r3, [r4, #32]
   14d48:	str	r2, [r4, #36]	; 0x24
   14d4c:	bl	1af6c <next@@Base>
   14d50:	ldr	ip, [r4, #40]	; 0x28
   14d54:	mov	r2, #0
   14d58:	mov	r3, #27
   14d5c:	ldr	lr, [r4, #44]	; 0x2c
   14d60:	ldr	r1, [r0]
   14d64:	mov	r0, #3
   14d68:	adds	ip, ip, #1
   14d6c:	str	r6, [sp]
   14d70:	adc	lr, lr, r2
   14d74:	str	ip, [r4, #40]	; 0x28
   14d78:	str	lr, [r4, #44]	; 0x2c
   14d7c:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14d80:	ldr	r3, [r4, #48]	; 0x30
   14d84:	mov	r0, r5
   14d88:	ldr	r2, [r4, #52]	; 0x34
   14d8c:	adds	r3, r3, #1
   14d90:	adc	r2, r2, #0
   14d94:	str	r3, [r4, #48]	; 0x30
   14d98:	str	r2, [r4, #52]	; 0x34
   14d9c:	bl	1af6c <next@@Base>
   14da0:	ldr	ip, [r4, #56]	; 0x38
   14da4:	mov	r2, #0
   14da8:	mov	r3, #29
   14dac:	ldr	lr, [r4, #60]	; 0x3c
   14db0:	ldr	r1, [r0]
   14db4:	mov	r0, #4
   14db8:	adds	ip, ip, #1
   14dbc:	str	r6, [sp]
   14dc0:	adc	lr, lr, r2
   14dc4:	str	ip, [r4, #56]	; 0x38
   14dc8:	str	lr, [r4, #60]	; 0x3c
   14dcc:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14dd0:	ldr	r3, [r4, #64]	; 0x40
   14dd4:	mov	r0, r5
   14dd8:	ldr	r2, [r4, #68]	; 0x44
   14ddc:	adds	r3, r3, #1
   14de0:	adc	r2, r2, #0
   14de4:	str	r3, [r4, #64]	; 0x40
   14de8:	str	r2, [r4, #68]	; 0x44
   14dec:	bl	1af6c <next@@Base>
   14df0:	ldr	ip, [r4, #72]	; 0x48
   14df4:	mov	r2, #0
   14df8:	mov	r3, #31
   14dfc:	ldr	lr, [r4, #76]	; 0x4c
   14e00:	ldr	r1, [r0]
   14e04:	mov	r0, #5
   14e08:	adds	ip, ip, #1
   14e0c:	str	r6, [sp]
   14e10:	adc	lr, lr, r2
   14e14:	str	ip, [r4, #72]	; 0x48
   14e18:	str	lr, [r4, #76]	; 0x4c
   14e1c:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14e20:	ldr	r3, [r4, #80]	; 0x50
   14e24:	mov	r0, r5
   14e28:	ldr	r2, [r4, #84]	; 0x54
   14e2c:	adds	r3, r3, #1
   14e30:	adc	r2, r2, #0
   14e34:	str	r3, [r4, #80]	; 0x50
   14e38:	str	r2, [r4, #84]	; 0x54
   14e3c:	bl	1af6c <next@@Base>
   14e40:	ldr	ip, [r4, #88]	; 0x58
   14e44:	mov	r2, #0
   14e48:	mov	r3, #33	; 0x21
   14e4c:	ldr	lr, [r4, #92]	; 0x5c
   14e50:	ldr	r1, [r0]
   14e54:	mov	r0, #7
   14e58:	adds	ip, ip, #1
   14e5c:	str	r6, [sp]
   14e60:	adc	lr, lr, r2
   14e64:	str	ip, [r4, #88]	; 0x58
   14e68:	str	lr, [r4, #92]	; 0x5c
   14e6c:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14e70:	ldr	r3, [r4, #96]	; 0x60
   14e74:	mov	r0, r5
   14e78:	ldr	r2, [r4, #100]	; 0x64
   14e7c:	adds	r3, r3, #1
   14e80:	adc	r2, r2, #0
   14e84:	str	r3, [r4, #96]	; 0x60
   14e88:	str	r2, [r4, #100]	; 0x64
   14e8c:	bl	1af6c <next@@Base>
   14e90:	ldr	ip, [r4, #104]	; 0x68
   14e94:	mov	r2, #0
   14e98:	mov	r3, #35	; 0x23
   14e9c:	ldr	lr, [r4, #108]	; 0x6c
   14ea0:	ldr	r1, [r0]
   14ea4:	mov	r0, #1
   14ea8:	adds	ip, ip, #1
   14eac:	str	r6, [sp]
   14eb0:	adc	lr, lr, r2
   14eb4:	str	ip, [r4, #104]	; 0x68
   14eb8:	str	lr, [r4, #108]	; 0x6c
   14ebc:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14ec0:	ldr	r3, [r4, #112]	; 0x70
   14ec4:	mov	r0, r5
   14ec8:	ldr	r2, [r4, #116]	; 0x74
   14ecc:	adds	r3, r3, #1
   14ed0:	adc	r2, r2, #0
   14ed4:	str	r3, [r4, #112]	; 0x70
   14ed8:	str	r2, [r4, #116]	; 0x74
   14edc:	bl	1af6c <next@@Base>
   14ee0:	ldr	ip, [r4, #120]	; 0x78
   14ee4:	mov	r2, #0
   14ee8:	mov	r3, #37	; 0x25
   14eec:	ldr	lr, [r4, #124]	; 0x7c
   14ef0:	ldr	r1, [r0]
   14ef4:	mov	r0, #8
   14ef8:	adds	ip, ip, #1
   14efc:	str	r6, [sp]
   14f00:	adc	lr, lr, r2
   14f04:	str	ip, [r4, #120]	; 0x78
   14f08:	str	lr, [r4, #124]	; 0x7c
   14f0c:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14f10:	ldr	r3, [r4, #128]	; 0x80
   14f14:	mov	r0, r5
   14f18:	ldr	r2, [r4, #132]	; 0x84
   14f1c:	adds	r3, r3, #1
   14f20:	adc	r2, r2, #0
   14f24:	str	r3, [r4, #128]	; 0x80
   14f28:	str	r2, [r4, #132]	; 0x84
   14f2c:	bl	1af6c <next@@Base>
   14f30:	ldr	ip, [r4, #136]	; 0x88
   14f34:	mov	r2, #0
   14f38:	mov	r3, #39	; 0x27
   14f3c:	ldr	lr, [r4, #140]	; 0x8c
   14f40:	ldr	r1, [r0]
   14f44:	mov	r0, #6
   14f48:	adds	ip, ip, #1
   14f4c:	str	r6, [sp]
   14f50:	adc	lr, lr, r2
   14f54:	str	ip, [r4, #136]	; 0x88
   14f58:	str	lr, [r4, #140]	; 0x8c
   14f5c:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14f60:	ldr	r3, [r4, #144]	; 0x90
   14f64:	mov	r0, r5
   14f68:	ldr	r2, [r4, #148]	; 0x94
   14f6c:	adds	r3, r3, #1
   14f70:	adc	r2, r2, #0
   14f74:	str	r3, [r4, #144]	; 0x90
   14f78:	str	r2, [r4, #148]	; 0x94
   14f7c:	bl	1af6c <next@@Base>
   14f80:	ldr	ip, [r4, #152]	; 0x98
   14f84:	mov	r2, #0
   14f88:	mov	r3, #41	; 0x29
   14f8c:	ldr	lr, [r4, #156]	; 0x9c
   14f90:	ldr	r1, [r0]
   14f94:	mov	r0, #9
   14f98:	adds	ip, ip, #1
   14f9c:	str	r6, [sp]
   14fa0:	adc	lr, lr, r2
   14fa4:	str	ip, [r4, #152]	; 0x98
   14fa8:	str	lr, [r4, #156]	; 0x9c
   14fac:	bl	16d3c <UnityAssertEqualNumber@@Base>
   14fb0:	ldr	r3, [r4, #160]	; 0xa0
   14fb4:	mov	r0, r5
   14fb8:	ldr	r2, [r4, #164]	; 0xa4
   14fbc:	adds	r3, r3, #1
   14fc0:	adc	r2, r2, #0
   14fc4:	str	r3, [r4, #160]	; 0xa0
   14fc8:	str	r2, [r4, #164]	; 0xa4
   14fcc:	bl	1ad24 <destroy_lexer@@Base>
   14fd0:	ldr	r3, [r4, #168]	; 0xa8
   14fd4:	ldr	r2, [r4, #172]	; 0xac
   14fd8:	adds	r3, r3, #1
   14fdc:	adc	r2, r2, #0
   14fe0:	str	r3, [r4, #168]	; 0xa8
   14fe4:	str	r2, [r4, #172]	; 0xac
   14fe8:	add	sp, sp, #24
   14fec:	ldrd	r4, [sp]
   14ff0:	ldr	r6, [sp, #8]
   14ff4:	add	sp, sp, #12
   14ff8:	pop	{pc}		; (ldr pc, [sp], #4)
   14ffc:	andeq	fp, r1, r0, asr #1
   15000:	andeq	r9, r0, r4, lsl #15

00015004 <push_token_and_call_next@@Base>:
   15004:	strd	r4, [sp, #-16]!
   15008:	ldr	r4, [pc, #276]	; 15124 <push_token_and_call_next@@Base+0x120>
   1500c:	ldr	r1, [pc, #276]	; 15128 <push_token_and_call_next@@Base+0x124>
   15010:	add	r4, pc, r4
   15014:	add	r4, r4, #1840	; 0x730
   15018:	ldr	r3, [r4]
   1501c:	add	r1, pc, r1
   15020:	ldr	r2, [r4, #4]
   15024:	str	r6, [sp, #8]
   15028:	str	lr, [sp, #12]
   1502c:	sub	sp, sp, #24
   15030:	adds	r3, r3, #1
   15034:	add	r6, sp, #12
   15038:	mov	r0, r6
   1503c:	adc	r2, r2, #0
   15040:	str	r3, [r4]
   15044:	str	r2, [r4, #4]
   15048:	bl	1acc8 <init_lexer@@Base>
   1504c:	ldr	r3, [r4, #8]
   15050:	mov	r0, #8
   15054:	ldr	r2, [r4, #12]
   15058:	adds	r3, r3, #1
   1505c:	adc	r2, r2, #0
   15060:	str	r3, [r4, #8]
   15064:	str	r2, [r4, #12]
   15068:	bl	12034 <malloc@plt>
   1506c:	mov	r5, r0
   15070:	mov	r1, r0
   15074:	mov	r0, r6
   15078:	bl	1adac <push_back@@Base>
   1507c:	ldr	r3, [r4, #16]
   15080:	mov	r0, r6
   15084:	ldr	r2, [r4, #20]
   15088:	adds	r3, r3, #1
   1508c:	adc	r2, r2, #0
   15090:	str	r3, [r4, #16]
   15094:	str	r2, [r4, #20]
   15098:	bl	1af6c <next@@Base>
   1509c:	ldr	ip, [r4, #24]
   150a0:	mov	r2, #148	; 0x94
   150a4:	mov	r1, r0
   150a8:	mov	r3, #113	; 0x71
   150ac:	mov	r0, r5
   150b0:	ldr	lr, [r4, #28]
   150b4:	str	r2, [sp]
   150b8:	mov	r2, #0
   150bc:	adds	ip, ip, #1
   150c0:	adc	lr, lr, r2
   150c4:	str	ip, [r4, #24]
   150c8:	str	lr, [r4, #28]
   150cc:	bl	16d3c <UnityAssertEqualNumber@@Base>
   150d0:	ldr	r3, [r4, #32]
   150d4:	mov	r0, r6
   150d8:	ldr	r2, [r4, #36]	; 0x24
   150dc:	adds	r3, r3, #1
   150e0:	adc	r2, r2, #0
   150e4:	str	r3, [r4, #32]
   150e8:	str	r2, [r4, #36]	; 0x24
   150ec:	bl	1ad24 <destroy_lexer@@Base>
   150f0:	ldr	r3, [r4, #40]	; 0x28
   150f4:	mov	r0, r5
   150f8:	ldr	r2, [r4, #44]	; 0x2c
   150fc:	adds	r3, r3, #1
   15100:	adc	r2, r2, #0
   15104:	str	r3, [r4, #40]	; 0x28
   15108:	str	r2, [r4, #44]	; 0x2c
   1510c:	add	sp, sp, #24
   15110:	ldrd	r4, [sp]
   15114:	ldr	r6, [sp, #8]
   15118:	ldr	lr, [sp, #12]
   1511c:	add	sp, sp, #16
   15120:	b	11fd4 <free@plt>
   15124:	andeq	sl, r1, r0, lsl #26
   15128:	andeq	r9, r0, r4, asr #7

0001512c <push_two_tokens_to_stack@@Base>:
   1512c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15130:	ldr	r4, [pc, #364]	; 152a4 <push_two_tokens_to_stack@@Base+0x178>
   15134:	ldr	r1, [pc, #364]	; 152a8 <push_two_tokens_to_stack@@Base+0x17c>
   15138:	add	r4, pc, r4
   1513c:	add	r4, r4, #1888	; 0x760
   15140:	ldr	r3, [r4]
   15144:	add	r1, pc, r1
   15148:	ldr	r2, [r4, #4]
   1514c:	strd	r6, [sp, #8]
   15150:	str	r8, [sp, #16]
   15154:	mov	r8, #148	; 0x94
   15158:	adds	r3, r3, #1
   1515c:	str	lr, [sp, #20]
   15160:	sub	sp, sp, #24
   15164:	add	r5, sp, #12
   15168:	adc	r2, r2, #0
   1516c:	mov	r0, r5
   15170:	str	r3, [r4]
   15174:	str	r2, [r4, #4]
   15178:	bl	1acc8 <init_lexer@@Base>
   1517c:	ldr	r3, [r4, #8]
   15180:	mov	r0, #8
   15184:	ldr	r2, [r4, #12]
   15188:	adds	r3, r3, #1
   1518c:	adc	r2, r2, #0
   15190:	str	r3, [r4, #8]
   15194:	str	r2, [r4, #12]
   15198:	bl	12034 <malloc@plt>
   1519c:	mov	r7, r0
   151a0:	mov	r0, #8
   151a4:	bl	12034 <malloc@plt>
   151a8:	mov	r6, r0
   151ac:	mov	r1, r7
   151b0:	mov	r0, r5
   151b4:	bl	1adac <push_back@@Base>
   151b8:	ldr	ip, [r4, #16]
   151bc:	mov	r2, #0
   151c0:	mov	r1, r7
   151c4:	mov	r3, #86	; 0x56
   151c8:	ldr	lr, [r4, #20]
   151cc:	ldr	r0, [sp, #16]
   151d0:	adds	ip, ip, #1
   151d4:	adc	lr, lr, r2
   151d8:	ldr	r0, [r0, #4]
   151dc:	str	r8, [sp]
   151e0:	str	ip, [r4, #16]
   151e4:	str	lr, [r4, #20]
   151e8:	bl	16d3c <UnityAssertEqualNumber@@Base>
   151ec:	ldr	r3, [r4, #24]
   151f0:	mov	r1, r6
   151f4:	mov	r0, r5
   151f8:	ldr	r2, [r4, #28]
   151fc:	adds	r3, r3, #1
   15200:	adc	r2, r2, #0
   15204:	str	r3, [r4, #24]
   15208:	str	r2, [r4, #28]
   1520c:	bl	1adac <push_back@@Base>
   15210:	ldr	ip, [r4, #32]
   15214:	mov	r2, #0
   15218:	mov	r1, r6
   1521c:	mov	r3, #88	; 0x58
   15220:	ldr	lr, [r4, #36]	; 0x24
   15224:	ldr	r0, [sp, #16]
   15228:	adds	ip, ip, #1
   1522c:	adc	lr, lr, r2
   15230:	ldr	r0, [r0, #4]
   15234:	str	r8, [sp]
   15238:	str	ip, [r4, #32]
   1523c:	str	lr, [r4, #36]	; 0x24
   15240:	bl	16d3c <UnityAssertEqualNumber@@Base>
   15244:	ldr	r3, [r4, #40]	; 0x28
   15248:	mov	r0, r5
   1524c:	ldr	r2, [r4, #44]	; 0x2c
   15250:	adds	r3, r3, #1
   15254:	adc	r2, r2, #0
   15258:	str	r3, [r4, #40]	; 0x28
   1525c:	str	r2, [r4, #44]	; 0x2c
   15260:	bl	1ad24 <destroy_lexer@@Base>
   15264:	ldr	r3, [r4, #48]	; 0x30
   15268:	mov	r0, r7
   1526c:	ldr	r2, [r4, #52]	; 0x34
   15270:	adds	r3, r3, #1
   15274:	adc	r2, r2, #0
   15278:	str	r3, [r4, #48]	; 0x30
   1527c:	str	r2, [r4, #52]	; 0x34
   15280:	bl	11fd4 <free@plt>
   15284:	mov	r0, r6
   15288:	add	sp, sp, #24
   1528c:	ldrd	r4, [sp]
   15290:	ldrd	r6, [sp, #8]
   15294:	ldr	r8, [sp, #16]
   15298:	ldr	lr, [sp, #20]
   1529c:	add	sp, sp, #24
   152a0:	b	11fd4 <free@plt>
   152a4:	ldrdeq	sl, [r1], -r8
   152a8:	muleq	r0, ip, r2

000152ac <push_token_to_stack@@Base>:
   152ac:	strd	r4, [sp, #-20]!	; 0xffffffec
   152b0:	ldr	r4, [pc, #248]	; 153b0 <push_token_to_stack@@Base+0x104>
   152b4:	ldr	r1, [pc, #248]	; 153b4 <push_token_to_stack@@Base+0x108>
   152b8:	add	r4, pc, r4
   152bc:	add	r4, r4, #1952	; 0x7a0
   152c0:	ldr	r3, [r4, #-8]
   152c4:	add	r1, pc, r1
   152c8:	ldr	r2, [r4, #-4]
   152cc:	strd	r6, [sp, #8]
   152d0:	mov	r7, #148	; 0x94
   152d4:	str	lr, [sp, #16]
   152d8:	sub	sp, sp, #28
   152dc:	adds	r3, r3, #1
   152e0:	add	r5, sp, #12
   152e4:	mov	r0, r5
   152e8:	adc	r2, r2, #0
   152ec:	str	r3, [r4, #-8]
   152f0:	str	r2, [r4, #-4]
   152f4:	bl	1acc8 <init_lexer@@Base>
   152f8:	ldr	r3, [r4]
   152fc:	mov	r0, #8
   15300:	ldr	r2, [r4, #4]
   15304:	adds	r3, r3, #1
   15308:	adc	r2, r2, #0
   1530c:	str	r3, [r4]
   15310:	str	r2, [r4, #4]
   15314:	bl	12034 <malloc@plt>
   15318:	mov	r6, r0
   1531c:	mov	r1, r0
   15320:	mov	r0, r5
   15324:	bl	1adac <push_back@@Base>
   15328:	ldr	r2, [r4, #8]
   1532c:	mov	r1, r6
   15330:	mov	r3, #62	; 0x3e
   15334:	ldr	lr, [r4, #12]
   15338:	ldr	r0, [sp, #16]
   1533c:	adds	ip, r2, #1
   15340:	mov	r2, #0
   15344:	adc	lr, lr, r2
   15348:	ldr	r0, [r0, #4]
   1534c:	str	r7, [sp]
   15350:	str	ip, [r4, #8]
   15354:	str	lr, [r4, #12]
   15358:	bl	16d3c <UnityAssertEqualNumber@@Base>
   1535c:	ldr	r3, [r4, #16]
   15360:	mov	r0, r5
   15364:	ldr	r2, [r4, #20]
   15368:	adds	r3, r3, #1
   1536c:	adc	r2, r2, #0
   15370:	str	r3, [r4, #16]
   15374:	str	r2, [r4, #20]
   15378:	bl	1ad24 <destroy_lexer@@Base>
   1537c:	ldr	r3, [r4, #24]
   15380:	mov	r0, r6
   15384:	ldr	r2, [r4, #28]
   15388:	adds	r3, r3, #1
   1538c:	adc	r2, r2, #0
   15390:	str	r3, [r4, #24]
   15394:	str	r2, [r4, #28]
   15398:	add	sp, sp, #28
   1539c:	ldrd	r4, [sp]
   153a0:	ldrd	r6, [sp, #8]
   153a4:	ldr	lr, [sp, #16]
   153a8:	add	sp, sp, #20
   153ac:	b	11fd4 <free@plt>
   153b0:	andeq	sl, r1, r8, asr sl
   153b4:	andeq	r9, r0, ip, lsl r1

000153b8 <UnityPrintNumber@@Base>:
   153b8:	ldr	r1, [pc, #468]	; 15594 <UnityPrintNumber@@Base+0x1dc>
   153bc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   153c0:	strd	r6, [sp, #8]
   153c4:	subs	r6, r0, #0
   153c8:	strd	r8, [sp, #16]
   153cc:	str	sl, [sp, #24]
   153d0:	add	r1, pc, r1
   153d4:	str	lr, [sp, #28]
   153d8:	blt	1553c <UnityPrintNumber@@Base+0x184>
   153dc:	ldr	r2, [pc, #436]	; 15598 <UnityPrintNumber@@Base+0x1e0>
   153e0:	ldr	r0, [pc, #436]	; 1559c <UnityPrintNumber@@Base+0x1e4>
   153e4:	add	r2, pc, r2
   153e8:	ldr	r3, [r2, #8]
   153ec:	ldr	ip, [r2, #12]
   153f0:	adds	r3, r3, #1
   153f4:	adc	ip, ip, #0
   153f8:	str	r3, [r2, #8]
   153fc:	str	ip, [r2, #12]
   15400:	ldr	r7, [r1, r0]
   15404:	cmp	r6, #9
   15408:	bls	15588 <UnityPrintNumber@@Base+0x1d0>
   1540c:	ldr	r2, [pc, #396]	; 155a0 <UnityPrintNumber@@Base+0x1e8>
   15410:	mov	sl, #10
   15414:	add	r2, pc, r2
   15418:	ldr	r3, [r2, #24]
   1541c:	ldr	r2, [r2, #28]
   15420:	adds	r4, r3, #1
   15424:	adc	r5, r2, #0
   15428:	adds	r8, r3, #11
   1542c:	adc	r9, r2, #0
   15430:	b	15438 <UnityPrintNumber@@Base+0x80>
   15434:	mov	sl, r2
   15438:	udiv	r3, r6, sl
   1543c:	mov	r0, r4
   15440:	mov	r1, r5
   15444:	add	r2, sl, sl, lsl #2
   15448:	lsl	r2, r2, #1
   1544c:	cmp	r3, #9
   15450:	bls	1550c <UnityPrintNumber@@Base+0x154>
   15454:	adds	r4, r4, #1
   15458:	adc	r5, r5, #0
   1545c:	cmp	r9, r5
   15460:	cmpeq	r8, r4
   15464:	bne	15434 <UnityPrintNumber@@Base+0x7c>
   15468:	ldr	r2, [pc, #308]	; 155a4 <UnityPrintNumber@@Base+0x1ec>
   1546c:	add	r2, pc, r2
   15470:	strd	r0, [r2, #24]
   15474:	ldr	r4, [pc, #300]	; 155a8 <UnityPrintNumber@@Base+0x1f0>
   15478:	movw	r5, #52429	; 0xcccd
   1547c:	movt	r5, #52428	; 0xcccc
   15480:	add	r4, pc, r4
   15484:	b	154a4 <UnityPrintNumber@@Base+0xec>
   15488:	udiv	r3, r6, sl
   1548c:	ldr	r2, [r4, #48]	; 0x30
   15490:	ldr	r1, [r4, #52]	; 0x34
   15494:	adds	r2, r2, #1
   15498:	adc	r1, r1, #0
   1549c:	str	r2, [r4, #48]	; 0x30
   154a0:	str	r1, [r4, #52]	; 0x34
   154a4:	umull	r2, r0, r5, r3
   154a8:	ldr	r1, [r7]
   154ac:	lsr	r0, r0, #3
   154b0:	add	r0, r0, r0, lsl #2
   154b4:	sub	r0, r3, r0, lsl #1
   154b8:	add	r0, r0, #48	; 0x30
   154bc:	uxtb	r0, r0
   154c0:	bl	120e8 <putc@plt>
   154c4:	umull	r2, r3, r5, sl
   154c8:	cmp	sl, #9
   154cc:	lsr	sl, r3, #3
   154d0:	bhi	15488 <UnityPrintNumber@@Base+0xd0>
   154d4:	ldr	r2, [pc, #208]	; 155ac <UnityPrintNumber@@Base+0x1f4>
   154d8:	ldrd	r4, [sp]
   154dc:	ldrd	r6, [sp, #8]
   154e0:	add	r2, pc, r2
   154e4:	ldr	r3, [r2, #40]	; 0x28
   154e8:	ldr	r1, [r2, #44]	; 0x2c
   154ec:	ldrd	r8, [sp, #16]
   154f0:	adds	r3, r3, #1
   154f4:	ldr	sl, [sp, #24]
   154f8:	add	sp, sp, #28
   154fc:	adc	r1, r1, #0
   15500:	str	r3, [r2, #40]	; 0x28
   15504:	str	r1, [r2, #44]	; 0x2c
   15508:	pop	{pc}		; (ldr pc, [sp], #4)
   1550c:	ldr	r2, [pc, #156]	; 155b0 <UnityPrintNumber@@Base+0x1f8>
   15510:	add	r2, pc, r2
   15514:	strd	r4, [r2, #24]
   15518:	ldr	r1, [pc, #148]	; 155b4 <UnityPrintNumber@@Base+0x1fc>
   1551c:	add	r1, pc, r1
   15520:	ldr	r2, [r1, #32]
   15524:	ldr	r0, [r1, #36]	; 0x24
   15528:	adds	r2, r2, #1
   1552c:	adc	r0, r0, #0
   15530:	str	r2, [r1, #32]
   15534:	str	r0, [r1, #36]	; 0x24
   15538:	b	15474 <UnityPrintNumber@@Base+0xbc>
   1553c:	ldr	sl, [pc, #116]	; 155b8 <UnityPrintNumber@@Base+0x200>
   15540:	mov	r0, #45	; 0x2d
   15544:	rsb	r6, r6, #0
   15548:	ldr	r2, [pc, #76]	; 1559c <UnityPrintNumber@@Base+0x1e4>
   1554c:	add	sl, pc, sl
   15550:	ldm	sl, {r3, ip}
   15554:	adds	r3, r3, #1
   15558:	adc	ip, ip, #0
   1555c:	stm	sl, {r3, ip}
   15560:	ldr	r7, [r1, r2]
   15564:	ldr	r1, [r7]
   15568:	bl	120e8 <putc@plt>
   1556c:	ldr	r3, [sl, #16]
   15570:	ldr	r2, [sl, #20]
   15574:	adds	r3, r3, #1
   15578:	adc	r2, r2, #0
   1557c:	str	r3, [sl, #16]
   15580:	str	r2, [sl, #20]
   15584:	b	15404 <UnityPrintNumber@@Base+0x4c>
   15588:	mov	sl, #1
   1558c:	mov	r3, r6
   15590:	b	15518 <UnityPrintNumber@@Base+0x160>
   15594:	andeq	r9, r1, r8, lsr #24
   15598:	ldrdeq	fp, [r1], -ip
   1559c:	andeq	r0, r0, ip, lsr r1
   155a0:	andeq	fp, r1, ip, lsr #3
   155a4:	andeq	fp, r1, r4, asr r1
   155a8:	andeq	fp, r1, r0, asr #2
   155ac:	andeq	fp, r1, r0, ror #1
   155b0:	strheq	fp, [r1], -r0
   155b4:	andeq	fp, r1, r4, lsr #1
   155b8:	andeq	fp, r1, r4, ror r0

000155bc <UnityPrintNumberUnsigned@@Base>:
   155bc:	ldr	r1, [pc, #372]	; 15738 <UnityPrintNumberUnsigned@@Base+0x17c>
   155c0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   155c4:	mov	r5, r0
   155c8:	add	r1, pc, r1
   155cc:	ldr	r0, [r1, #56]	; 0x38
   155d0:	ldr	ip, [r1, #60]	; 0x3c
   155d4:	strd	r6, [sp, #8]
   155d8:	str	lr, [sp, #20]
   155dc:	ldr	lr, [pc, #344]	; 1573c <UnityPrintNumberUnsigned@@Base+0x180>
   155e0:	adds	r0, r0, #1
   155e4:	str	r8, [sp, #16]
   155e8:	adc	ip, ip, #0
   155ec:	cmp	r5, #9
   155f0:	str	r0, [r1, #56]	; 0x38
   155f4:	str	ip, [r1, #60]	; 0x3c
   155f8:	add	lr, pc, lr
   155fc:	bls	1572c <UnityPrintNumberUnsigned@@Base+0x170>
   15600:	ldrd	r0, [r1, #64]	; 0x40
   15604:	mov	r4, #10
   15608:	adds	r2, r0, #1
   1560c:	adc	r3, r1, #0
   15610:	adds	r6, r0, #11
   15614:	adc	r7, r1, #0
   15618:	b	15620 <UnityPrintNumberUnsigned@@Base+0x64>
   1561c:	mov	r4, r1
   15620:	udiv	ip, r5, r4
   15624:	mov	r8, r2
   15628:	mov	r0, r3
   1562c:	add	r1, r4, r4, lsl #2
   15630:	lsl	r1, r1, #1
   15634:	cmp	ip, #9
   15638:	bls	156fc <UnityPrintNumberUnsigned@@Base+0x140>
   1563c:	adds	r2, r2, #1
   15640:	adc	r3, r3, #0
   15644:	cmp	r7, r3
   15648:	cmpeq	r6, r2
   1564c:	bne	1561c <UnityPrintNumberUnsigned@@Base+0x60>
   15650:	ldr	r3, [pc, #232]	; 15740 <UnityPrintNumberUnsigned@@Base+0x184>
   15654:	add	r3, pc, r3
   15658:	str	r8, [r3, #64]	; 0x40
   1565c:	str	r0, [r3, #68]	; 0x44
   15660:	ldr	r3, [pc, #220]	; 15744 <UnityPrintNumberUnsigned@@Base+0x188>
   15664:	movw	r8, #52429	; 0xcccd
   15668:	movt	r8, #52428	; 0xcccc
   1566c:	ldr	r7, [pc, #212]	; 15748 <UnityPrintNumberUnsigned@@Base+0x18c>
   15670:	ldr	r6, [lr, r3]
   15674:	add	r7, pc, r7
   15678:	b	15698 <UnityPrintNumberUnsigned@@Base+0xdc>
   1567c:	udiv	ip, r5, r4
   15680:	ldr	r3, [r7, #88]	; 0x58
   15684:	ldr	r2, [r7, #92]	; 0x5c
   15688:	adds	r3, r3, #1
   1568c:	adc	r2, r2, #0
   15690:	str	r3, [r7, #88]	; 0x58
   15694:	str	r2, [r7, #92]	; 0x5c
   15698:	umull	r3, r0, r8, ip
   1569c:	ldr	r1, [r6]
   156a0:	lsr	r0, r0, #3
   156a4:	add	r0, r0, r0, lsl #2
   156a8:	sub	r0, ip, r0, lsl #1
   156ac:	add	r0, r0, #48	; 0x30
   156b0:	uxtb	r0, r0
   156b4:	bl	120e8 <putc@plt>
   156b8:	umull	r2, r3, r8, r4
   156bc:	cmp	r4, #9
   156c0:	lsr	r4, r3, #3
   156c4:	bhi	1567c <UnityPrintNumberUnsigned@@Base+0xc0>
   156c8:	ldr	r2, [pc, #124]	; 1574c <UnityPrintNumberUnsigned@@Base+0x190>
   156cc:	ldrd	r4, [sp]
   156d0:	ldrd	r6, [sp, #8]
   156d4:	add	r2, pc, r2
   156d8:	ldr	r3, [r2, #80]	; 0x50
   156dc:	ldr	r1, [r2, #84]	; 0x54
   156e0:	ldr	r8, [sp, #16]
   156e4:	add	sp, sp, #20
   156e8:	adds	r3, r3, #1
   156ec:	adc	r1, r1, #0
   156f0:	str	r3, [r2, #80]	; 0x50
   156f4:	str	r1, [r2, #84]	; 0x54
   156f8:	pop	{pc}		; (ldr pc, [sp], #4)
   156fc:	ldr	r1, [pc, #76]	; 15750 <UnityPrintNumberUnsigned@@Base+0x194>
   15700:	add	r1, pc, r1
   15704:	strd	r2, [r1, #64]	; 0x40
   15708:	ldr	r2, [pc, #68]	; 15754 <UnityPrintNumberUnsigned@@Base+0x198>
   1570c:	add	r2, pc, r2
   15710:	ldr	r3, [r2, #72]	; 0x48
   15714:	ldr	r1, [r2, #76]	; 0x4c
   15718:	adds	r3, r3, #1
   1571c:	adc	r1, r1, #0
   15720:	str	r3, [r2, #72]	; 0x48
   15724:	str	r1, [r2, #76]	; 0x4c
   15728:	b	15660 <UnityPrintNumberUnsigned@@Base+0xa4>
   1572c:	mov	r4, #1
   15730:	mov	ip, r5
   15734:	b	15708 <UnityPrintNumberUnsigned@@Base+0x14c>
   15738:	strdeq	sl, [r1], -r8
   1573c:	andeq	r9, r1, r0, lsl #20
   15740:	andeq	sl, r1, ip, ror #30
   15744:	andeq	r0, r0, ip, lsr r1
   15748:	andeq	sl, r1, ip, asr #30
   1574c:	andeq	sl, r1, ip, ror #29
   15750:	andeq	sl, r1, r0, asr #29
   15754:			; <UNDEFINED> instruction: 0x0001aeb4

00015758 <UnityPrintNumberHex@@Base>:
   15758:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1575c:	mov	r4, r1
   15760:	ldr	r5, [pc, #348]	; 158c4 <UnityPrintNumberHex@@Base+0x16c>
   15764:	ldr	ip, [pc, #348]	; 158c8 <UnityPrintNumberHex@@Base+0x170>
   15768:	ldr	r2, [pc, #348]	; 158cc <UnityPrintNumberHex@@Base+0x174>
   1576c:	add	r5, pc, r5
   15770:	ldr	r3, [r5, #96]	; 0x60
   15774:	add	ip, pc, ip
   15778:	ldr	r1, [r5, #100]	; 0x64
   1577c:	strd	r6, [sp, #8]
   15780:	mov	r7, r0
   15784:	mov	r0, #48	; 0x30
   15788:	str	r8, [sp, #16]
   1578c:	adds	r3, r3, #1
   15790:	str	lr, [sp, #20]
   15794:	adc	r1, r1, #0
   15798:	str	r3, [r5, #96]	; 0x60
   1579c:	str	r1, [r5, #100]	; 0x64
   157a0:	ldr	r6, [ip, r2]
   157a4:	ldr	r1, [r6]
   157a8:	bl	120e8 <putc@plt>
   157ac:	ldr	r3, [r5, #104]	; 0x68
   157b0:	mov	r0, #120	; 0x78
   157b4:	ldr	r2, [r5, #108]	; 0x6c
   157b8:	ldr	r1, [r6]
   157bc:	adds	r3, r3, #1
   157c0:	adc	r2, r2, #0
   157c4:	str	r3, [r5, #104]	; 0x68
   157c8:	str	r2, [r5, #108]	; 0x6c
   157cc:	bl	120e8 <putc@plt>
   157d0:	ldr	r3, [r5, #112]	; 0x70
   157d4:	ldr	r2, [r5, #116]	; 0x74
   157d8:	adds	r3, r3, #1
   157dc:	adc	r2, r2, #0
   157e0:	cmp	r4, #0
   157e4:	str	r3, [r5, #112]	; 0x70
   157e8:	str	r2, [r5, #116]	; 0x74
   157ec:	beq	15890 <UnityPrintNumberHex@@Base+0x138>
   157f0:	ldr	r8, [pc, #216]	; 158d0 <UnityPrintNumberHex@@Base+0x178>
   157f4:	sub	r4, r4, #1
   157f8:	uxtb	r4, r4
   157fc:	ldr	r5, [pc, #208]	; 158d4 <UnityPrintNumberHex@@Base+0x17c>
   15800:	lsl	r4, r4, #2
   15804:	add	r8, pc, r8
   15808:	add	r5, pc, r5
   1580c:	b	15850 <UnityPrintNumberHex@@Base+0xf8>
   15810:	ldr	r3, [r5, #120]	; 0x78
   15814:	sub	r4, r4, #4
   15818:	ldr	r2, [r5, #124]	; 0x7c
   1581c:	adds	r3, r3, #1
   15820:	adc	r2, r2, #0
   15824:	str	r3, [r5, #120]	; 0x78
   15828:	str	r2, [r5, #124]	; 0x7c
   1582c:	bl	120e8 <putc@plt>
   15830:	ldr	r3, [r5, #136]	; 0x88
   15834:	ldr	r2, [r5, #140]	; 0x8c
   15838:	adds	r3, r3, #1
   1583c:	adc	r2, r2, #0
   15840:	cmn	r4, #4
   15844:	str	r3, [r5, #136]	; 0x88
   15848:	str	r2, [r5, #140]	; 0x8c
   1584c:	beq	15890 <UnityPrintNumberHex@@Base+0x138>
   15850:	lsr	r0, r7, r4
   15854:	ldr	r1, [r6]
   15858:	and	r0, r0, #15
   1585c:	cmp	r0, #9
   15860:	uxtb	r3, r0
   15864:	add	r0, r3, #48	; 0x30
   15868:	bls	15810 <UnityPrintNumberHex@@Base+0xb8>
   1586c:	add	r0, r3, #55	; 0x37
   15870:	ldrd	r2, [r8, #128]	; 0x80
   15874:	sub	r4, r4, #4
   15878:	adds	r2, r2, #1
   1587c:	adc	r3, r3, #0
   15880:	strd	r2, [r8, #128]	; 0x80
   15884:	bl	120e8 <putc@plt>
   15888:	cmn	r4, #4
   1588c:	bne	15850 <UnityPrintNumberHex@@Base+0xf8>
   15890:	ldr	r2, [pc, #64]	; 158d8 <UnityPrintNumberHex@@Base+0x180>
   15894:	ldrd	r4, [sp]
   15898:	ldrd	r6, [sp, #8]
   1589c:	add	r2, pc, r2
   158a0:	ldr	r3, [r2, #144]	; 0x90
   158a4:	ldr	r1, [r2, #148]	; 0x94
   158a8:	ldr	r8, [sp, #16]
   158ac:	add	sp, sp, #20
   158b0:	adds	r3, r3, #1
   158b4:	adc	r1, r1, #0
   158b8:	str	r3, [r2, #144]	; 0x90
   158bc:	str	r1, [r2, #148]	; 0x94
   158c0:	pop	{pc}		; (ldr pc, [sp], #4)
   158c4:	andeq	sl, r1, r4, asr lr
   158c8:	andeq	r9, r1, r4, lsl #17
   158cc:	andeq	r0, r0, ip, lsr r1
   158d0:			; <UNDEFINED> instruction: 0x0001adbc
   158d4:			; <UNDEFINED> instruction: 0x0001adb8
   158d8:	andeq	sl, r1, r4, lsr #26

000158dc <UnityPrintNumberByStyle@@Base>:
   158dc:	ldr	r3, [pc, #276]	; 159f8 <UnityPrintNumberByStyle@@Base+0x11c>
   158e0:	tst	r1, #16
   158e4:	str	r4, [sp, #-8]!
   158e8:	str	lr, [sp, #4]
   158ec:	add	r3, pc, r3
   158f0:	bne	159b0 <UnityPrintNumberByStyle@@Base+0xd4>
   158f4:	tst	r1, #32
   158f8:	bne	1594c <UnityPrintNumberByStyle@@Base+0x70>
   158fc:	ldr	r4, [pc, #248]	; 159fc <UnityPrintNumberByStyle@@Base+0x120>
   15900:	lsl	r1, r1, #1
   15904:	and	r1, r1, #30
   15908:	add	r4, pc, r4
   1590c:	ldr	r3, [r4, #176]	; 0xb0
   15910:	ldr	r2, [r4, #180]	; 0xb4
   15914:	adds	r3, r3, #1
   15918:	adc	r2, r2, #0
   1591c:	str	r3, [r4, #176]	; 0xb0
   15920:	str	r2, [r4, #180]	; 0xb4
   15924:	bl	15758 <UnityPrintNumberHex@@Base>
   15928:	ldr	r3, [r4, #192]	; 0xc0
   1592c:	ldr	r2, [r4, #196]	; 0xc4
   15930:	adds	r3, r3, #1
   15934:	adc	r2, r2, #0
   15938:	str	r3, [r4, #192]	; 0xc0
   1593c:	str	r2, [r4, #196]	; 0xc4
   15940:	ldr	r4, [sp]
   15944:	add	sp, sp, #4
   15948:	pop	{pc}		; (ldr pc, [sp], #4)
   1594c:	ldr	r4, [pc, #172]	; 15a00 <UnityPrintNumberByStyle@@Base+0x124>
   15950:	mov	lr, r0
   15954:	and	r1, r1, #15
   15958:	sub	r1, r1, #1
   1595c:	ldr	r0, [pc, #160]	; 15a04 <UnityPrintNumberByStyle@@Base+0x128>
   15960:	add	r4, pc, r4
   15964:	ldr	r2, [r4, #168]	; 0xa8
   15968:	ldr	ip, [r4, #172]	; 0xac
   1596c:	adds	r2, r2, #1
   15970:	adc	ip, ip, #0
   15974:	str	r2, [r4, #168]	; 0xa8
   15978:	str	ip, [r4, #172]	; 0xac
   1597c:	ldr	r3, [r3, r0]
   15980:	ldr	r0, [r3, r1, lsl #2]
   15984:	and	r0, r0, lr
   15988:	bl	155bc <UnityPrintNumberUnsigned@@Base>
   1598c:	ldr	r3, [r4, #184]	; 0xb8
   15990:	ldr	r2, [r4, #188]	; 0xbc
   15994:	adds	r3, r3, #1
   15998:	adc	r2, r2, #0
   1599c:	str	r3, [r4, #184]	; 0xb8
   159a0:	str	r2, [r4, #188]	; 0xbc
   159a4:	ldr	r4, [sp]
   159a8:	add	sp, sp, #4
   159ac:	pop	{pc}		; (ldr pc, [sp], #4)
   159b0:	ldr	r4, [pc, #80]	; 15a08 <UnityPrintNumberByStyle@@Base+0x12c>
   159b4:	add	r4, pc, r4
   159b8:	ldr	r3, [r4, #152]	; 0x98
   159bc:	ldr	r2, [r4, #156]	; 0x9c
   159c0:	adds	r3, r3, #1
   159c4:	adc	r2, r2, #0
   159c8:	str	r3, [r4, #152]	; 0x98
   159cc:	str	r2, [r4, #156]	; 0x9c
   159d0:	bl	153b8 <UnityPrintNumber@@Base>
   159d4:	ldr	r3, [r4, #160]	; 0xa0
   159d8:	ldr	r2, [r4, #164]	; 0xa4
   159dc:	adds	r3, r3, #1
   159e0:	adc	r2, r2, #0
   159e4:	str	r3, [r4, #160]	; 0xa0
   159e8:	str	r2, [r4, #164]	; 0xa4
   159ec:	ldr	r4, [sp]
   159f0:	add	sp, sp, #4
   159f4:	pop	{pc}		; (ldr pc, [sp], #4)
   159f8:	andeq	r9, r1, ip, lsl #14
   159fc:			; <UNDEFINED> instruction: 0x0001acb8
   15a00:	andeq	sl, r1, r0, ror #24
   15a04:	strheq	r0, [r0], -r8
   15a08:	andeq	sl, r1, ip, lsl #24

00015a0c <UnityPrintLen@@Base>:
   15a0c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15a10:	subs	r4, r0, #0
   15a14:	strd	r6, [sp, #8]
   15a18:	ldr	r6, [pc, #644]	; 15ca4 <UnityPrintLen@@Base+0x298>
   15a1c:	strd	r8, [sp, #16]
   15a20:	strd	sl, [sp, #24]
   15a24:	str	lr, [sp, #32]
   15a28:	sub	sp, sp, #4
   15a2c:	add	r6, pc, r6
   15a30:	beq	15c80 <UnityPrintLen@@Base+0x274>
   15a34:	ldr	ip, [pc, #620]	; 15ca8 <UnityPrintLen@@Base+0x29c>
   15a38:	ldrb	r3, [r4]
   15a3c:	add	ip, pc, ip
   15a40:	ldr	r2, [ip, #200]	; 0xc8
   15a44:	ldr	lr, [ip, #204]	; 0xcc
   15a48:	adds	r2, r2, #1
   15a4c:	adc	lr, lr, #0
   15a50:	cmp	r3, #0
   15a54:	str	r2, [ip, #200]	; 0xc8
   15a58:	str	lr, [ip, #204]	; 0xcc
   15a5c:	beq	15b5c <UnityPrintLen@@Base+0x150>
   15a60:	cmp	r1, #0
   15a64:	beq	15c5c <UnityPrintLen@@Base+0x250>
   15a68:	ldr	r8, [pc, #572]	; 15cac <UnityPrintLen@@Base+0x2a0>
   15a6c:	mov	r5, r1
   15a70:	mov	r9, r4
   15a74:	ldr	r2, [pc, #564]	; 15cb0 <UnityPrintLen@@Base+0x2a4>
   15a78:	ldr	r7, [pc, #564]	; 15cb4 <UnityPrintLen@@Base+0x2a8>
   15a7c:	add	r8, pc, r8
   15a80:	add	sl, r8, #272	; 0x110
   15a84:	ldr	r6, [r6, r2]
   15a88:	add	r7, pc, r7
   15a8c:	b	15afc <UnityPrintLen@@Base+0xf0>
   15a90:	cmp	r3, #13
   15a94:	mov	r0, #92	; 0x5c
   15a98:	beq	15bf8 <UnityPrintLen@@Base+0x1ec>
   15a9c:	cmp	r3, #10
   15aa0:	beq	15b98 <UnityPrintLen@@Base+0x18c>
   15aa4:	ldr	r3, [sl, #-8]
   15aa8:	ldr	r2, [sl, #-4]
   15aac:	adds	r3, r3, #1
   15ab0:	adc	r2, r2, #0
   15ab4:	str	r3, [sl, #-8]
   15ab8:	str	r2, [sl, #-4]
   15abc:	bl	120e8 <putc@plt>
   15ac0:	ldr	r3, [r8, #288]	; 0x120
   15ac4:	mov	r1, #2
   15ac8:	ldr	ip, [r8, #292]	; 0x124
   15acc:	ldrb	r0, [r9]
   15ad0:	adds	r3, r3, #1
   15ad4:	adc	ip, ip, #0
   15ad8:	str	r3, [r8, #288]	; 0x120
   15adc:	str	ip, [r8, #292]	; 0x124
   15ae0:	bl	15758 <UnityPrintNumberHex@@Base>
   15ae4:	ldrb	r3, [r9, #1]!
   15ae8:	cmp	r3, #0
   15aec:	sub	r2, r9, r4
   15af0:	beq	15b5c <UnityPrintLen@@Base+0x150>
   15af4:	cmp	r2, r5
   15af8:	bcs	15c5c <UnityPrintLen@@Base+0x250>
   15afc:	sub	r2, r3, #32
   15b00:	ldr	r1, [r6]
   15b04:	cmp	r2, #94	; 0x5e
   15b08:	bhi	15a90 <UnityPrintLen@@Base+0x84>
   15b0c:	ldr	fp, [pc, #420]	; 15cb8 <UnityPrintLen@@Base+0x2ac>
   15b10:	mov	r0, r3
   15b14:	add	fp, pc, fp
   15b18:	ldr	r3, [fp, #216]	; 0xd8
   15b1c:	ldr	r2, [fp, #220]	; 0xdc
   15b20:	adds	r3, r3, #1
   15b24:	adc	r2, r2, #0
   15b28:	str	r3, [fp, #216]	; 0xd8
   15b2c:	str	r2, [fp, #220]	; 0xdc
   15b30:	bl	120e8 <putc@plt>
   15b34:	ldr	r3, [fp, #224]	; 0xe0
   15b38:	ldr	r2, [fp, #228]	; 0xe4
   15b3c:	adds	r3, r3, #1
   15b40:	str	r3, [fp, #224]	; 0xe0
   15b44:	adc	r2, r2, #0
   15b48:	ldrb	r3, [r9, #1]!
   15b4c:	str	r2, [fp, #228]	; 0xe4
   15b50:	cmp	r3, #0
   15b54:	sub	r2, r9, r4
   15b58:	bne	15af4 <UnityPrintLen@@Base+0xe8>
   15b5c:	ldr	r3, [pc, #344]	; 15cbc <UnityPrintLen@@Base+0x2b0>
   15b60:	add	r3, pc, r3
   15b64:	ldr	r2, [r3, #296]	; 0x128
   15b68:	ldr	r1, [r3, #300]	; 0x12c
   15b6c:	adds	r2, r2, #1
   15b70:	adc	r1, r1, #0
   15b74:	str	r2, [r3, #296]	; 0x128
   15b78:	str	r1, [r3, #300]	; 0x12c
   15b7c:	add	sp, sp, #4
   15b80:	ldrd	r4, [sp]
   15b84:	ldrd	r6, [sp, #8]
   15b88:	ldrd	r8, [sp, #16]
   15b8c:	ldrd	sl, [sp, #24]
   15b90:	add	sp, sp, #32
   15b94:	pop	{pc}		; (ldr pc, [sp], #4)
   15b98:	ldr	r3, [r7, #256]	; 0x100
   15b9c:	mov	r0, #92	; 0x5c
   15ba0:	ldr	ip, [r7, #260]	; 0x104
   15ba4:	adds	r3, r3, #1
   15ba8:	adc	ip, ip, #0
   15bac:	str	r3, [r7, #256]	; 0x100
   15bb0:	str	ip, [r7, #260]	; 0x104
   15bb4:	bl	120e8 <putc@plt>
   15bb8:	ldr	r3, [r7, #272]	; 0x110
   15bbc:	mov	r0, #110	; 0x6e
   15bc0:	ldr	ip, [r7, #276]	; 0x114
   15bc4:	ldr	r1, [r6]
   15bc8:	adds	r3, r3, #1
   15bcc:	adc	ip, ip, #0
   15bd0:	str	r3, [r7, #272]	; 0x110
   15bd4:	str	ip, [r7, #276]	; 0x114
   15bd8:	bl	120e8 <putc@plt>
   15bdc:	ldr	r3, [r7, #280]	; 0x118
   15be0:	ldr	r1, [r7, #284]	; 0x11c
   15be4:	adds	r3, r3, #1
   15be8:	adc	r1, r1, #0
   15bec:	str	r3, [r7, #280]	; 0x118
   15bf0:	str	r1, [r7, #284]	; 0x11c
   15bf4:	b	15ae4 <UnityPrintLen@@Base+0xd8>
   15bf8:	ldr	fp, [pc, #192]	; 15cc0 <UnityPrintLen@@Base+0x2b4>
   15bfc:	add	fp, pc, fp
   15c00:	ldr	r3, [fp, #232]	; 0xe8
   15c04:	ldr	r2, [fp, #236]	; 0xec
   15c08:	adds	r3, r3, #1
   15c0c:	adc	r2, r2, #0
   15c10:	str	r3, [fp, #232]	; 0xe8
   15c14:	str	r2, [fp, #236]	; 0xec
   15c18:	bl	120e8 <putc@plt>
   15c1c:	ldr	r3, [fp, #240]	; 0xf0
   15c20:	mov	r0, #114	; 0x72
   15c24:	ldr	r2, [fp, #244]	; 0xf4
   15c28:	ldr	r1, [r6]
   15c2c:	adds	r3, r3, #1
   15c30:	adc	r2, r2, #0
   15c34:	str	r3, [fp, #240]	; 0xf0
   15c38:	str	r2, [fp, #244]	; 0xf4
   15c3c:	bl	120e8 <putc@plt>
   15c40:	ldr	r3, [fp, #248]	; 0xf8
   15c44:	ldr	r2, [fp, #252]	; 0xfc
   15c48:	adds	r3, r3, #1
   15c4c:	adc	r2, r2, #0
   15c50:	str	r3, [fp, #248]	; 0xf8
   15c54:	str	r2, [fp, #252]	; 0xfc
   15c58:	b	15ae4 <UnityPrintLen@@Base+0xd8>
   15c5c:	ldr	r3, [pc, #96]	; 15cc4 <UnityPrintLen@@Base+0x2b8>
   15c60:	add	r3, pc, r3
   15c64:	ldr	r2, [r3, #304]	; 0x130
   15c68:	ldr	r1, [r3, #308]	; 0x134
   15c6c:	adds	r2, r2, #1
   15c70:	adc	r1, r1, #0
   15c74:	str	r2, [r3, #304]	; 0x130
   15c78:	str	r1, [r3, #308]	; 0x134
   15c7c:	b	15b7c <UnityPrintLen@@Base+0x170>
   15c80:	ldr	r2, [pc, #64]	; 15cc8 <UnityPrintLen@@Base+0x2bc>
   15c84:	add	r2, pc, r2
   15c88:	ldr	r3, [r2, #208]	; 0xd0
   15c8c:	ldr	r1, [r2, #212]	; 0xd4
   15c90:	adds	r3, r3, #1
   15c94:	adc	r1, r1, #0
   15c98:	str	r3, [r2, #208]	; 0xd0
   15c9c:	str	r1, [r2, #212]	; 0xd4
   15ca0:	b	15b7c <UnityPrintLen@@Base+0x170>
   15ca4:	andeq	r9, r1, ip, asr #11
   15ca8:	andeq	sl, r1, r4, lsl #23
   15cac:	andeq	sl, r1, r4, asr #22
   15cb0:	andeq	r0, r0, ip, lsr r1
   15cb4:	andeq	sl, r1, r8, lsr fp
   15cb8:	andeq	sl, r1, ip, lsr #21
   15cbc:	andeq	sl, r1, r0, ror #20
   15cc0:	andeq	sl, r1, r4, asr #19
   15cc4:	andeq	sl, r1, r0, ror #18
   15cc8:	andeq	sl, r1, ip, lsr r9

00015ccc <UnityPrint@@Base>:
   15ccc:	ldr	ip, [pc, #584]	; 15f1c <UnityPrint@@Base+0x250>
   15cd0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15cd4:	subs	r5, r0, #0
   15cd8:	strd	r6, [sp, #8]
   15cdc:	strd	r8, [sp, #16]
   15ce0:	str	sl, [sp, #24]
   15ce4:	add	ip, pc, ip
   15ce8:	str	lr, [sp, #28]
   15cec:	beq	15ef8 <UnityPrint@@Base+0x22c>
   15cf0:	ldr	r2, [pc, #552]	; 15f20 <UnityPrint@@Base+0x254>
   15cf4:	ldrb	r3, [r5]
   15cf8:	add	r2, pc, r2
   15cfc:	ldr	r1, [r2, #312]	; 0x138
   15d00:	ldr	r0, [r2, #316]	; 0x13c
   15d04:	adds	r1, r1, #1
   15d08:	adc	r0, r0, #0
   15d0c:	cmp	r3, #0
   15d10:	str	r1, [r2, #312]	; 0x138
   15d14:	str	r0, [r2, #316]	; 0x13c
   15d18:	beq	15e04 <UnityPrint@@Base+0x138>
   15d1c:	ldr	r4, [pc, #512]	; 15f24 <UnityPrint@@Base+0x258>
   15d20:	ldr	sl, [pc, #512]	; 15f28 <UnityPrint@@Base+0x25c>
   15d24:	ldr	r2, [pc, #512]	; 15f2c <UnityPrint@@Base+0x260>
   15d28:	add	r4, pc, r4
   15d2c:	ldr	r8, [pc, #508]	; 15f30 <UnityPrint@@Base+0x264>
   15d30:	add	r4, r4, #320	; 0x140
   15d34:	add	sl, pc, sl
   15d38:	ldr	r7, [pc, #500]	; 15f34 <UnityPrint@@Base+0x268>
   15d3c:	add	sl, sl, #320	; 0x140
   15d40:	ldr	r6, [ip, r2]
   15d44:	add	r8, pc, r8
   15d48:	add	r7, pc, r7
   15d4c:	b	15db0 <UnityPrint@@Base+0xe4>
   15d50:	cmp	r3, #13
   15d54:	mov	r0, #92	; 0x5c
   15d58:	beq	15e9c <UnityPrint@@Base+0x1d0>
   15d5c:	cmp	r3, #10
   15d60:	beq	15e3c <UnityPrint@@Base+0x170>
   15d64:	ldr	r3, [r4, #56]	; 0x38
   15d68:	ldr	r2, [r4, #60]	; 0x3c
   15d6c:	adds	r3, r3, #1
   15d70:	adc	r2, r2, #0
   15d74:	str	r3, [r4, #56]	; 0x38
   15d78:	str	r2, [r4, #60]	; 0x3c
   15d7c:	bl	120e8 <putc@plt>
   15d80:	ldr	r3, [r4, #80]	; 0x50
   15d84:	mov	r1, #2
   15d88:	ldr	r2, [r4, #84]	; 0x54
   15d8c:	ldrb	r0, [r5]
   15d90:	adds	r3, r3, #1
   15d94:	adc	r2, r2, #0
   15d98:	str	r3, [r4, #80]	; 0x50
   15d9c:	str	r2, [r4, #84]	; 0x54
   15da0:	bl	15758 <UnityPrintNumberHex@@Base>
   15da4:	ldrb	r3, [r5, #1]!
   15da8:	cmp	r3, #0
   15dac:	beq	15e04 <UnityPrint@@Base+0x138>
   15db0:	sub	r2, r3, #32
   15db4:	ldr	r1, [r6]
   15db8:	cmp	r2, #94	; 0x5e
   15dbc:	bhi	15d50 <UnityPrint@@Base+0x84>
   15dc0:	mov	r0, r3
   15dc4:	ldr	r3, [r7, #328]	; 0x148
   15dc8:	ldr	r2, [r7, #332]	; 0x14c
   15dcc:	adds	r3, r3, #1
   15dd0:	adc	r2, r2, #0
   15dd4:	str	r3, [r7, #328]	; 0x148
   15dd8:	str	r2, [r7, #332]	; 0x14c
   15ddc:	bl	120e8 <putc@plt>
   15de0:	ldr	r3, [r7, #336]	; 0x150
   15de4:	ldr	r2, [r7, #340]	; 0x154
   15de8:	adds	r3, r3, #1
   15dec:	str	r3, [r7, #336]	; 0x150
   15df0:	adc	r2, r2, #0
   15df4:	ldrb	r3, [r5, #1]!
   15df8:	str	r2, [r7, #340]	; 0x154
   15dfc:	cmp	r3, #0
   15e00:	bne	15db0 <UnityPrint@@Base+0xe4>
   15e04:	ldr	r3, [pc, #300]	; 15f38 <UnityPrint@@Base+0x26c>
   15e08:	add	r3, pc, r3
   15e0c:	ldr	r2, [r3, #408]	; 0x198
   15e10:	ldr	r1, [r3, #412]	; 0x19c
   15e14:	adds	r2, r2, #1
   15e18:	adc	r1, r1, #0
   15e1c:	str	r2, [r3, #408]	; 0x198
   15e20:	str	r1, [r3, #412]	; 0x19c
   15e24:	ldrd	r4, [sp]
   15e28:	ldrd	r6, [sp, #8]
   15e2c:	ldrd	r8, [sp, #16]
   15e30:	ldr	sl, [sp, #24]
   15e34:	add	sp, sp, #28
   15e38:	pop	{pc}		; (ldr pc, [sp], #4)
   15e3c:	ldr	r3, [r8, #368]	; 0x170
   15e40:	mov	r0, #92	; 0x5c
   15e44:	ldr	r2, [r8, #372]	; 0x174
   15e48:	adds	r3, r3, #1
   15e4c:	adc	r2, r2, #0
   15e50:	str	r3, [r8, #368]	; 0x170
   15e54:	str	r2, [r8, #372]	; 0x174
   15e58:	bl	120e8 <putc@plt>
   15e5c:	ldr	r3, [r8, #384]	; 0x180
   15e60:	mov	r0, #110	; 0x6e
   15e64:	ldr	r2, [r8, #388]	; 0x184
   15e68:	ldr	r1, [r6]
   15e6c:	adds	r3, r3, #1
   15e70:	adc	r2, r2, #0
   15e74:	str	r3, [r8, #384]	; 0x180
   15e78:	str	r2, [r8, #388]	; 0x184
   15e7c:	bl	120e8 <putc@plt>
   15e80:	ldr	r3, [r8, #392]	; 0x188
   15e84:	ldr	r2, [r8, #396]	; 0x18c
   15e88:	adds	r3, r3, #1
   15e8c:	adc	r2, r2, #0
   15e90:	str	r3, [r8, #392]	; 0x188
   15e94:	str	r2, [r8, #396]	; 0x18c
   15e98:	b	15da4 <UnityPrint@@Base+0xd8>
   15e9c:	ldr	r3, [sl, #24]
   15ea0:	ldr	r2, [sl, #28]
   15ea4:	adds	r3, r3, #1
   15ea8:	adc	r2, r2, #0
   15eac:	str	r3, [sl, #24]
   15eb0:	str	r2, [sl, #28]
   15eb4:	bl	120e8 <putc@plt>
   15eb8:	ldr	r3, [sl, #32]
   15ebc:	mov	r0, #114	; 0x72
   15ec0:	ldr	r2, [sl, #36]	; 0x24
   15ec4:	ldr	r1, [r6]
   15ec8:	adds	r3, r3, #1
   15ecc:	adc	r2, r2, #0
   15ed0:	str	r3, [sl, #32]
   15ed4:	str	r2, [sl, #36]	; 0x24
   15ed8:	bl	120e8 <putc@plt>
   15edc:	ldr	r3, [sl, #40]	; 0x28
   15ee0:	ldr	r2, [sl, #44]	; 0x2c
   15ee4:	adds	r3, r3, #1
   15ee8:	adc	r2, r2, #0
   15eec:	str	r3, [sl, #40]	; 0x28
   15ef0:	str	r2, [sl, #44]	; 0x2c
   15ef4:	b	15da4 <UnityPrint@@Base+0xd8>
   15ef8:	ldr	r3, [pc, #60]	; 15f3c <UnityPrint@@Base+0x270>
   15efc:	add	r3, pc, r3
   15f00:	ldr	r2, [r3, #320]	; 0x140
   15f04:	ldr	r1, [r3, #324]	; 0x144
   15f08:	adds	r2, r2, #1
   15f0c:	adc	r1, r1, #0
   15f10:	str	r2, [r3, #320]	; 0x140
   15f14:	str	r1, [r3, #324]	; 0x144
   15f18:	b	15e24 <UnityPrint@@Base+0x158>
   15f1c:	andeq	r9, r1, r4, lsl r3
   15f20:	andeq	sl, r1, r8, asr #17
   15f24:	muleq	r1, r8, r8
   15f28:	andeq	sl, r1, ip, lsl #17
   15f2c:	andeq	r0, r0, ip, lsr r1
   15f30:	andeq	sl, r1, ip, ror r8
   15f34:	andeq	sl, r1, r8, ror r8
   15f38:			; <UNDEFINED> instruction: 0x0001a7b8
   15f3c:	andeq	sl, r1, r4, asr #13
   15f40:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15f44:	ldr	r4, [pc, #532]	; 16160 <UnityPrint@@Base+0x494>
   15f48:	ldr	r5, [pc, #532]	; 16164 <UnityPrint@@Base+0x498>
   15f4c:	ldr	r2, [pc, #532]	; 16168 <UnityPrint@@Base+0x49c>
   15f50:	add	r4, pc, r4
   15f54:	add	r4, r4, #416	; 0x1a0
   15f58:	ldr	r3, [r4]
   15f5c:	strd	r6, [sp, #8]
   15f60:	mov	r6, r1
   15f64:	add	r5, pc, r5
   15f68:	ldr	r1, [r4, #4]
   15f6c:	mov	r7, r0
   15f70:	str	r8, [sp, #16]
   15f74:	str	lr, [sp, #20]
   15f78:	adds	r3, r3, #1
   15f7c:	adc	r1, r1, #0
   15f80:	str	r3, [r4]
   15f84:	str	r1, [r4, #4]
   15f88:	ldr	r0, [r5, r2]
   15f8c:	bl	15ccc <UnityPrint@@Base>
   15f90:	cmp	r7, #0
   15f94:	beq	160d8 <UnityPrint@@Base+0x40c>
   15f98:	ldr	r3, [r4, #8]
   15f9c:	mov	r0, #39	; 0x27
   15fa0:	ldr	r1, [r4, #12]
   15fa4:	ldr	r2, [pc, #448]	; 1616c <UnityPrint@@Base+0x4a0>
   15fa8:	adds	r3, r3, #1
   15fac:	adc	r1, r1, #0
   15fb0:	str	r3, [r4, #8]
   15fb4:	str	r1, [r4, #12]
   15fb8:	ldr	r8, [r5, r2]
   15fbc:	ldr	r1, [r8]
   15fc0:	bl	120e8 <putc@plt>
   15fc4:	ldr	r3, [r4, #24]
   15fc8:	mov	r0, r7
   15fcc:	ldr	r2, [r4, #28]
   15fd0:	adds	r3, r3, #1
   15fd4:	adc	r2, r2, #0
   15fd8:	str	r3, [r4, #24]
   15fdc:	str	r2, [r4, #28]
   15fe0:	bl	15ccc <UnityPrint@@Base>
   15fe4:	ldr	r3, [r4, #32]
   15fe8:	mov	r0, #39	; 0x27
   15fec:	ldr	r2, [r4, #36]	; 0x24
   15ff0:	ldr	r1, [r8]
   15ff4:	adds	r3, r3, #1
   15ff8:	adc	r2, r2, #0
   15ffc:	str	r3, [r4, #32]
   16000:	str	r2, [r4, #36]	; 0x24
   16004:	bl	120e8 <putc@plt>
   16008:	ldr	r3, [r4, #40]	; 0x28
   1600c:	ldr	r2, [r4, #44]	; 0x2c
   16010:	adds	r3, r3, #1
   16014:	adc	r2, r2, #0
   16018:	str	r3, [r4, #40]	; 0x28
   1601c:	str	r2, [r4, #44]	; 0x2c
   16020:	ldr	r3, [pc, #328]	; 16170 <UnityPrint@@Base+0x4a4>
   16024:	ldr	r0, [r5, r3]
   16028:	bl	15ccc <UnityPrint@@Base>
   1602c:	cmp	r6, #0
   16030:	beq	16118 <UnityPrint@@Base+0x44c>
   16034:	ldr	r4, [pc, #312]	; 16174 <UnityPrint@@Base+0x4a8>
   16038:	mov	r0, #39	; 0x27
   1603c:	ldr	r2, [pc, #296]	; 1616c <UnityPrint@@Base+0x4a0>
   16040:	add	r4, pc, r4
   16044:	ldr	r3, [r4, #472]	; 0x1d8
   16048:	ldr	r1, [r4, #476]	; 0x1dc
   1604c:	adds	r3, r3, #1
   16050:	adc	r1, r1, #0
   16054:	str	r3, [r4, #472]	; 0x1d8
   16058:	str	r1, [r4, #476]	; 0x1dc
   1605c:	ldr	r5, [r5, r2]
   16060:	ldr	r1, [r5]
   16064:	bl	120e8 <putc@plt>
   16068:	ldr	r3, [r4, #488]	; 0x1e8
   1606c:	mov	r0, r6
   16070:	ldr	r2, [r4, #492]	; 0x1ec
   16074:	adds	r3, r3, #1
   16078:	adc	r2, r2, #0
   1607c:	str	r3, [r4, #488]	; 0x1e8
   16080:	str	r2, [r4, #492]	; 0x1ec
   16084:	bl	15ccc <UnityPrint@@Base>
   16088:	ldr	r3, [r4, #496]	; 0x1f0
   1608c:	mov	r0, #39	; 0x27
   16090:	ldr	r2, [r4, #500]	; 0x1f4
   16094:	ldr	r1, [r5]
   16098:	adds	r3, r3, #1
   1609c:	adc	r2, r2, #0
   160a0:	str	r3, [r4, #496]	; 0x1f0
   160a4:	str	r2, [r4, #500]	; 0x1f4
   160a8:	bl	120e8 <putc@plt>
   160ac:	ldr	r3, [r4, #504]	; 0x1f8
   160b0:	ldr	r2, [r4, #508]	; 0x1fc
   160b4:	adds	r3, r3, #1
   160b8:	adc	r2, r2, #0
   160bc:	str	r3, [r4, #504]	; 0x1f8
   160c0:	str	r2, [r4, #508]	; 0x1fc
   160c4:	ldrd	r4, [sp]
   160c8:	ldrd	r6, [sp, #8]
   160cc:	ldr	r8, [sp, #16]
   160d0:	add	sp, sp, #20
   160d4:	pop	{pc}		; (ldr pc, [sp], #4)
   160d8:	ldr	r3, [r4, #16]
   160dc:	ldr	r1, [r4, #20]
   160e0:	ldr	r2, [pc, #144]	; 16178 <UnityPrint@@Base+0x4ac>
   160e4:	adds	r3, r3, #1
   160e8:	adc	r1, r1, #0
   160ec:	str	r3, [r4, #16]
   160f0:	str	r1, [r4, #20]
   160f4:	ldr	r0, [r5, r2]
   160f8:	bl	15ccc <UnityPrint@@Base>
   160fc:	ldr	r3, [r4, #48]	; 0x30
   16100:	ldr	r2, [r4, #52]	; 0x34
   16104:	adds	r3, r3, #1
   16108:	adc	r2, r2, #0
   1610c:	str	r3, [r4, #48]	; 0x30
   16110:	str	r2, [r4, #52]	; 0x34
   16114:	b	16020 <UnityPrint@@Base+0x354>
   16118:	ldr	r4, [pc, #92]	; 1617c <UnityPrint@@Base+0x4b0>
   1611c:	ldr	r2, [pc, #84]	; 16178 <UnityPrint@@Base+0x4ac>
   16120:	add	r4, pc, r4
   16124:	ldr	r3, [r4, #480]	; 0x1e0
   16128:	ldr	r1, [r4, #484]	; 0x1e4
   1612c:	adds	r3, r3, #1
   16130:	adc	r1, r1, #0
   16134:	str	r3, [r4, #480]	; 0x1e0
   16138:	str	r1, [r4, #484]	; 0x1e4
   1613c:	ldr	r0, [r5, r2]
   16140:	bl	15ccc <UnityPrint@@Base>
   16144:	ldr	r3, [r4, #512]	; 0x200
   16148:	ldr	r2, [r4, #516]	; 0x204
   1614c:	adds	r3, r3, #1
   16150:	adc	r2, r2, #0
   16154:	str	r3, [r4, #512]	; 0x200
   16158:	str	r2, [r4, #516]	; 0x204
   1615c:	b	160c4 <UnityPrint@@Base+0x3f8>
   16160:	andeq	sl, r1, r0, ror r6
   16164:	muleq	r1, r4, r0
   16168:	ldrdeq	r0, [r0], -r8
   1616c:	andeq	r0, r0, ip, lsr r1
   16170:	andeq	r0, r0, r8, asr #2
   16174:	andeq	sl, r1, r0, lsl #11
   16178:	andeq	r0, r0, r4, lsr #2
   1617c:	andeq	sl, r1, r0, lsr #9
   16180:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16184:	subs	r5, r0, #0
   16188:	strd	r6, [sp, #8]
   1618c:	ldr	r6, [pc, #448]	; 16354 <UnityPrint@@Base+0x688>
   16190:	str	r8, [sp, #16]
   16194:	str	lr, [sp, #20]
   16198:	add	r6, pc, r6
   1619c:	beq	16314 <UnityPrint@@Base+0x648>
   161a0:	ldr	r4, [pc, #432]	; 16358 <UnityPrint@@Base+0x68c>
   161a4:	ldr	r2, [pc, #432]	; 1635c <UnityPrint@@Base+0x690>
   161a8:	add	r4, pc, r4
   161ac:	add	r4, r4, #528	; 0x210
   161b0:	ldr	r3, [r4, #-8]
   161b4:	ldr	r1, [r4, #-4]
   161b8:	adds	r3, r3, #1
   161bc:	adc	r1, r1, #0
   161c0:	str	r3, [r4, #-8]
   161c4:	str	r1, [r4, #-4]
   161c8:	ldr	r8, [r6, r2]
   161cc:	mov	r0, r8
   161d0:	bl	15ccc <UnityPrint@@Base>
   161d4:	ldr	r3, [pc, #388]	; 16360 <UnityPrint@@Base+0x694>
   161d8:	ldr	r7, [r6, r3]
   161dc:	ldr	r3, [r7, #8]
   161e0:	cmp	r3, #0
   161e4:	beq	162c0 <UnityPrint@@Base+0x5f4>
   161e8:	ldr	r3, [r4, #8]
   161ec:	ldr	r1, [r4, #12]
   161f0:	ldr	r2, [pc, #364]	; 16364 <UnityPrint@@Base+0x698>
   161f4:	adds	r3, r3, #1
   161f8:	adc	r1, r1, #0
   161fc:	str	r3, [r4, #8]
   16200:	str	r1, [r4, #12]
   16204:	ldr	r0, [r6, r2]
   16208:	bl	15ccc <UnityPrint@@Base>
   1620c:	ldr	r3, [r4, #24]
   16210:	ldr	r2, [r4, #28]
   16214:	ldr	r0, [r7, #8]
   16218:	adds	r3, r3, #1
   1621c:	adc	r2, r2, #0
   16220:	str	r3, [r4, #24]
   16224:	str	r2, [r4, #28]
   16228:	bl	15ccc <UnityPrint@@Base>
   1622c:	ldr	r3, [r7, #12]
   16230:	cmp	r3, #0
   16234:	beq	16338 <UnityPrint@@Base+0x66c>
   16238:	ldr	r3, [r4, #32]
   1623c:	ldr	r1, [r4, #36]	; 0x24
   16240:	ldr	r2, [pc, #288]	; 16368 <UnityPrint@@Base+0x69c>
   16244:	adds	r3, r3, #1
   16248:	adc	r1, r1, #0
   1624c:	str	r3, [r4, #32]
   16250:	str	r1, [r4, #36]	; 0x24
   16254:	ldr	r0, [r6, r2]
   16258:	bl	15ccc <UnityPrint@@Base>
   1625c:	ldr	r3, [r4, #48]	; 0x30
   16260:	ldr	r2, [r4, #52]	; 0x34
   16264:	ldr	r0, [r7, #12]
   16268:	adds	r3, r3, #1
   1626c:	adc	r2, r2, #0
   16270:	str	r3, [r4, #48]	; 0x30
   16274:	str	r2, [r4, #52]	; 0x34
   16278:	bl	15ccc <UnityPrint@@Base>
   1627c:	ldr	r3, [r4, #56]	; 0x38
   16280:	ldr	r2, [r4, #60]	; 0x3c
   16284:	adds	r3, r3, #1
   16288:	adc	r2, r2, #0
   1628c:	str	r3, [r4, #56]	; 0x38
   16290:	str	r2, [r4, #60]	; 0x3c
   16294:	mov	r0, r8
   16298:	bl	15ccc <UnityPrint@@Base>
   1629c:	ldr	r3, [pc, #200]	; 1636c <UnityPrint@@Base+0x6a0>
   162a0:	add	r3, pc, r3
   162a4:	ldr	r2, [r3, #592]	; 0x250
   162a8:	ldr	r1, [r3, #596]	; 0x254
   162ac:	adds	r2, r2, #1
   162b0:	adc	r1, r1, #0
   162b4:	str	r2, [r3, #592]	; 0x250
   162b8:	str	r1, [r3, #596]	; 0x254
   162bc:	b	162d8 <UnityPrint@@Base+0x60c>
   162c0:	ldr	r3, [r4, #16]
   162c4:	ldr	r2, [r4, #20]
   162c8:	adds	r3, r3, #1
   162cc:	adc	r2, r2, #0
   162d0:	str	r3, [r4, #16]
   162d4:	str	r2, [r4, #20]
   162d8:	mov	r0, r5
   162dc:	bl	15ccc <UnityPrint@@Base>
   162e0:	ldr	r3, [pc, #136]	; 16370 <UnityPrint@@Base+0x6a4>
   162e4:	add	r3, pc, r3
   162e8:	ldr	r2, [r3, #600]	; 0x258
   162ec:	ldr	r1, [r3, #604]	; 0x25c
   162f0:	adds	r2, r2, #1
   162f4:	adc	r1, r1, #0
   162f8:	str	r2, [r3, #600]	; 0x258
   162fc:	str	r1, [r3, #604]	; 0x25c
   16300:	ldrd	r4, [sp]
   16304:	ldrd	r6, [sp, #8]
   16308:	ldr	r8, [sp, #16]
   1630c:	add	sp, sp, #20
   16310:	pop	{pc}		; (ldr pc, [sp], #4)
   16314:	ldr	r3, [pc, #88]	; 16374 <UnityPrint@@Base+0x6a8>
   16318:	add	r3, pc, r3
   1631c:	ldr	r2, [r3, #528]	; 0x210
   16320:	ldr	r1, [r3, #532]	; 0x214
   16324:	adds	r2, r2, #1
   16328:	adc	r1, r1, #0
   1632c:	str	r2, [r3, #528]	; 0x210
   16330:	str	r1, [r3, #532]	; 0x214
   16334:	b	16300 <UnityPrint@@Base+0x634>
   16338:	ldr	r3, [r4, #40]	; 0x28
   1633c:	ldr	r2, [r4, #44]	; 0x2c
   16340:	adds	r3, r3, #1
   16344:	adc	r2, r2, #0
   16348:	str	r3, [r4, #40]	; 0x28
   1634c:	str	r2, [r4, #44]	; 0x2c
   16350:	b	16294 <UnityPrint@@Base+0x5c8>
   16354:	andeq	r8, r1, r0, ror #28
   16358:	andeq	sl, r1, r8, lsl r4
   1635c:	andeq	r0, r0, r4, asr r1
   16360:	andeq	r0, r0, r8, lsl r1
   16364:	andeq	r0, r0, r4, asr #2
   16368:	andeq	r0, r0, r8, ror #1
   1636c:	andeq	sl, r1, r0, lsr #6
   16370:	ldrdeq	sl, [r1], -ip
   16374:	andeq	sl, r1, r8, lsr #5
   16378:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1637c:	ldr	r4, [pc, #288]	; 164a4 <UnityPrint@@Base+0x7d8>
   16380:	add	r4, pc, r4
   16384:	add	r4, r4, #608	; 0x260
   16388:	ldr	r3, [r4]
   1638c:	ldr	r2, [r4, #4]
   16390:	strd	r6, [sp, #8]
   16394:	mov	r7, r1
   16398:	str	r8, [sp, #16]
   1639c:	adds	r3, r3, #1
   163a0:	str	lr, [sp, #20]
   163a4:	ldr	r6, [pc, #252]	; 164a8 <UnityPrint@@Base+0x7dc>
   163a8:	adc	r2, r2, #0
   163ac:	str	r3, [r4]
   163b0:	str	r2, [r4, #4]
   163b4:	bl	15ccc <UnityPrint@@Base>
   163b8:	ldr	r3, [r4, #8]
   163bc:	add	r6, pc, r6
   163c0:	mov	r0, #58	; 0x3a
   163c4:	ldr	r1, [r4, #12]
   163c8:	ldr	r2, [pc, #220]	; 164ac <UnityPrint@@Base+0x7e0>
   163cc:	adds	r3, r3, #1
   163d0:	adc	r1, r1, #0
   163d4:	str	r3, [r4, #8]
   163d8:	str	r1, [r4, #12]
   163dc:	ldr	r5, [r6, r2]
   163e0:	ldr	r1, [r5]
   163e4:	bl	120e8 <putc@plt>
   163e8:	ldr	r3, [r4, #16]
   163ec:	mov	r0, r7
   163f0:	ldr	r2, [r4, #20]
   163f4:	adds	r3, r3, #1
   163f8:	adc	r2, r2, #0
   163fc:	str	r3, [r4, #16]
   16400:	str	r2, [r4, #20]
   16404:	bl	153b8 <UnityPrintNumber@@Base>
   16408:	ldr	r3, [r4, #24]
   1640c:	mov	r0, #58	; 0x3a
   16410:	ldr	r2, [r4, #28]
   16414:	ldr	r1, [r5]
   16418:	adds	r3, r3, #1
   1641c:	adc	r2, r2, #0
   16420:	str	r3, [r4, #24]
   16424:	str	r2, [r4, #28]
   16428:	bl	120e8 <putc@plt>
   1642c:	ldr	r3, [r4, #32]
   16430:	ldr	r1, [r4, #36]	; 0x24
   16434:	ldr	r2, [pc, #116]	; 164b0 <UnityPrint@@Base+0x7e4>
   16438:	adds	r3, r3, #1
   1643c:	adc	r1, r1, #0
   16440:	str	r3, [r4, #32]
   16444:	str	r1, [r4, #36]	; 0x24
   16448:	ldr	r3, [r6, r2]
   1644c:	ldr	r0, [r3, #4]
   16450:	bl	15ccc <UnityPrint@@Base>
   16454:	ldr	r3, [r4, #40]	; 0x28
   16458:	mov	r0, #58	; 0x3a
   1645c:	ldr	r2, [r4, #44]	; 0x2c
   16460:	ldr	r1, [r5]
   16464:	adds	r3, r3, #1
   16468:	adc	r2, r2, #0
   1646c:	str	r3, [r4, #40]	; 0x28
   16470:	str	r2, [r4, #44]	; 0x2c
   16474:	bl	120e8 <putc@plt>
   16478:	ldr	r3, [r4, #48]	; 0x30
   1647c:	ldr	r2, [r4, #52]	; 0x34
   16480:	ldrd	r6, [sp, #8]
   16484:	adds	r3, r3, #1
   16488:	ldr	r8, [sp, #16]
   1648c:	adc	r2, r2, #0
   16490:	str	r3, [r4, #48]	; 0x30
   16494:	str	r2, [r4, #52]	; 0x34
   16498:	ldrd	r4, [sp]
   1649c:	add	sp, sp, #20
   164a0:	pop	{pc}		; (ldr pc, [sp], #4)
   164a4:	andeq	sl, r1, r0, asr #4
   164a8:	andeq	r8, r1, ip, lsr ip
   164ac:	andeq	r0, r0, ip, lsr r1
   164b0:	andeq	r0, r0, r8, lsl r1
   164b4:	strd	r4, [sp, #-16]!
   164b8:	mov	r1, r0
   164bc:	ldr	r4, [pc, #176]	; 16574 <UnityPrint@@Base+0x8a8>
   164c0:	ldr	r5, [pc, #176]	; 16578 <UnityPrint@@Base+0x8ac>
   164c4:	ldr	r2, [pc, #176]	; 1657c <UnityPrint@@Base+0x8b0>
   164c8:	add	r4, pc, r4
   164cc:	ldr	r3, [r4, #664]	; 0x298
   164d0:	add	r5, pc, r5
   164d4:	ldr	r0, [r4, #668]	; 0x29c
   164d8:	str	r6, [sp, #8]
   164dc:	str	lr, [sp, #12]
   164e0:	adds	r3, r3, #1
   164e4:	adc	r0, r0, #0
   164e8:	str	r3, [r4, #664]	; 0x298
   164ec:	str	r0, [r4, #668]	; 0x29c
   164f0:	ldr	r3, [r5, r2]
   164f4:	ldr	r0, [r3]
   164f8:	bl	16378 <UnityPrint@@Base+0x6ac>
   164fc:	ldr	r3, [r4, #672]	; 0x2a0
   16500:	ldr	r1, [r4, #676]	; 0x2a4
   16504:	ldr	r2, [pc, #116]	; 16580 <UnityPrint@@Base+0x8b4>
   16508:	adds	r3, r3, #1
   1650c:	adc	r1, r1, #0
   16510:	str	r3, [r4, #672]	; 0x2a0
   16514:	str	r1, [r4, #676]	; 0x2a4
   16518:	ldr	r0, [r5, r2]
   1651c:	bl	15ccc <UnityPrint@@Base>
   16520:	ldr	r3, [r4, #680]	; 0x2a8
   16524:	mov	r0, #58	; 0x3a
   16528:	ldr	r1, [r4, #684]	; 0x2ac
   1652c:	ldr	r2, [pc, #80]	; 16584 <UnityPrint@@Base+0x8b8>
   16530:	adds	r3, r3, #1
   16534:	adc	r1, r1, #0
   16538:	str	r3, [r4, #680]	; 0x2a8
   1653c:	str	r1, [r4, #684]	; 0x2ac
   16540:	ldr	r3, [r5, r2]
   16544:	ldr	r1, [r3]
   16548:	bl	120e8 <putc@plt>
   1654c:	ldr	r3, [r4, #688]	; 0x2b0
   16550:	ldr	r2, [r4, #692]	; 0x2b4
   16554:	ldr	r6, [sp, #8]
   16558:	adds	r3, r3, #1
   1655c:	adc	r2, r2, #0
   16560:	str	r3, [r4, #688]	; 0x2b0
   16564:	str	r2, [r4, #692]	; 0x2b4
   16568:	ldrd	r4, [sp]
   1656c:	add	sp, sp, #12
   16570:	pop	{pc}		; (ldr pc, [sp], #4)
   16574:	strdeq	sl, [r1], -r8
   16578:	andeq	r8, r1, r8, lsr #22
   1657c:	andeq	r0, r0, r8, lsl r1
   16580:	andeq	r0, r0, ip, lsl #2
   16584:	andeq	r0, r0, ip, lsr r1
   16588:	strd	r4, [sp, #-12]!
   1658c:	orrs	ip, r0, r1
   16590:	ldr	r5, [pc, #448]	; 16758 <UnityPrint@@Base+0xa8c>
   16594:	str	lr, [sp, #8]
   16598:	sub	sp, sp, #12
   1659c:	add	r5, pc, r5
   165a0:	beq	165ec <UnityPrint@@Base+0x920>
   165a4:	cmp	r0, #0
   165a8:	beq	166bc <UnityPrint@@Base+0x9f0>
   165ac:	ldr	r4, [pc, #424]	; 1675c <UnityPrint@@Base+0xa90>
   165b0:	add	r4, pc, r4
   165b4:	add	r4, r4, #704	; 0x2c0
   165b8:	ldr	ip, [r4, #8]
   165bc:	ldr	lr, [r4, #12]
   165c0:	adds	ip, ip, #1
   165c4:	adc	lr, lr, #0
   165c8:	cmp	r1, #0
   165cc:	str	ip, [r4, #8]
   165d0:	movne	r0, #0
   165d4:	str	lr, [r4, #12]
   165d8:	beq	16620 <UnityPrint@@Base+0x954>
   165dc:	add	sp, sp, #12
   165e0:	ldrd	r4, [sp]
   165e4:	add	sp, sp, #8
   165e8:	pop	{pc}		; (ldr pc, [sp], #4)
   165ec:	ldr	r3, [pc, #364]	; 16760 <UnityPrint@@Base+0xa94>
   165f0:	mov	r0, #1
   165f4:	add	r3, pc, r3
   165f8:	ldr	r2, [r3, #696]	; 0x2b8
   165fc:	ldr	r1, [r3, #700]	; 0x2bc
   16600:	adds	r2, r2, r0
   16604:	adc	r1, r1, #0
   16608:	str	r2, [r3, #696]	; 0x2b8
   1660c:	str	r1, [r3, #700]	; 0x2bc
   16610:	add	sp, sp, #12
   16614:	ldrd	r4, [sp]
   16618:	add	sp, sp, #8
   1661c:	pop	{pc}		; (ldr pc, [sp], #4)
   16620:	ldr	r1, [r4, #40]	; 0x28
   16624:	mov	r0, r2
   16628:	str	r3, [sp, #4]
   1662c:	ldr	r2, [r4, #44]	; 0x2c
   16630:	adds	r1, r1, #1
   16634:	adc	r2, r2, #0
   16638:	str	r1, [r4, #40]	; 0x28
   1663c:	str	r2, [r4, #44]	; 0x2c
   16640:	bl	164b4 <UnityPrint@@Base+0x7e8>
   16644:	ldr	r2, [r4, #48]	; 0x30
   16648:	ldr	r0, [r4, #52]	; 0x34
   1664c:	ldr	r1, [pc, #272]	; 16764 <UnityPrint@@Base+0xa98>
   16650:	adds	r2, r2, #1
   16654:	adc	r0, r0, #0
   16658:	str	r2, [r4, #48]	; 0x30
   1665c:	str	r0, [r4, #52]	; 0x34
   16660:	ldr	r0, [r5, r1]
   16664:	bl	15ccc <UnityPrint@@Base>
   16668:	ldr	r3, [sp, #4]
   1666c:	ldr	r2, [r4, #56]	; 0x38
   16670:	mov	r0, r3
   16674:	ldr	r3, [r4, #60]	; 0x3c
   16678:	adds	r2, r2, #1
   1667c:	adc	r3, r3, #0
   16680:	strd	r2, [r4, #56]	; 0x38
   16684:	bl	16180 <UnityPrint@@Base+0x4b4>
   16688:	ldr	r3, [r4, #64]	; 0x40
   1668c:	mov	ip, #1
   16690:	mov	r1, ip
   16694:	ldr	r0, [r4, #68]	; 0x44
   16698:	ldr	r2, [pc, #200]	; 16768 <UnityPrint@@Base+0xa9c>
   1669c:	adds	r3, r3, ip
   166a0:	adc	r0, r0, #0
   166a4:	str	r3, [r4, #64]	; 0x40
   166a8:	str	r0, [r4, #68]	; 0x44
   166ac:	ldr	r3, [r5, r2]
   166b0:	add	r0, r3, #40	; 0x28
   166b4:	str	ip, [r3, #32]
   166b8:	bl	11fbc <longjmp@plt>
   166bc:	ldr	r1, [pc, #168]	; 1676c <UnityPrint@@Base+0xaa0>
   166c0:	mov	r0, r2
   166c4:	str	r3, [sp, #4]
   166c8:	add	r1, pc, r1
   166cc:	ldr	r2, [r1, #704]	; 0x2c0
   166d0:	add	r4, r1, #704	; 0x2c0
   166d4:	ldr	r1, [r1, #708]	; 0x2c4
   166d8:	adds	r2, r2, #1
   166dc:	adc	r1, r1, #0
   166e0:	str	r2, [r4]
   166e4:	str	r1, [r4, #4]
   166e8:	bl	164b4 <UnityPrint@@Base+0x7e8>
   166ec:	ldr	r2, [r4, #16]
   166f0:	ldr	r0, [r4, #20]
   166f4:	ldr	r1, [pc, #116]	; 16770 <UnityPrint@@Base+0xaa4>
   166f8:	adds	r2, r2, #1
   166fc:	adc	r0, r0, #0
   16700:	str	r2, [r4, #16]
   16704:	str	r0, [r4, #20]
   16708:	ldr	r0, [r5, r1]
   1670c:	bl	15ccc <UnityPrint@@Base>
   16710:	ldr	r3, [sp, #4]
   16714:	ldr	r2, [r4, #24]
   16718:	mov	r0, r3
   1671c:	ldr	r3, [r4, #28]
   16720:	adds	r2, r2, #1
   16724:	adc	r3, r3, #0
   16728:	strd	r2, [r4, #24]
   1672c:	bl	16180 <UnityPrint@@Base+0x4b4>
   16730:	ldr	r3, [r4, #32]
   16734:	mov	ip, #1
   16738:	mov	r1, ip
   1673c:	ldr	r0, [r4, #36]	; 0x24
   16740:	ldr	r2, [pc, #32]	; 16768 <UnityPrint@@Base+0xa9c>
   16744:	adds	r3, r3, ip
   16748:	adc	r0, r0, #0
   1674c:	str	r3, [r4, #32]
   16750:	str	r0, [r4, #36]	; 0x24
   16754:	b	166ac <UnityPrint@@Base+0x9e0>
   16758:	andeq	r8, r1, ip, asr sl
   1675c:	andeq	sl, r1, r0, lsl r0
   16760:	andeq	r9, r1, ip, asr #31
   16764:	andeq	r0, r0, r8, lsr r1
   16768:	andeq	r0, r0, r8, lsl r1
   1676c:	strdeq	r9, [r1], -r8
   16770:	andeq	r0, r0, ip, ror r1

00016774 <UnityPrintMask@@Base>:
   16774:	ldr	r3, [pc, #372]	; 168f0 <UnityPrintMask@@Base+0x17c>
   16778:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1677c:	mov	r5, #32
   16780:	mov	r4, #-2147483648	; 0x80000000
   16784:	add	r3, pc, r3
   16788:	ldr	r2, [r3, #776]	; 0x308
   1678c:	ldr	ip, [r3, #780]	; 0x30c
   16790:	strd	r6, [sp, #8]
   16794:	ldr	r7, [pc, #344]	; 168f4 <UnityPrintMask@@Base+0x180>
   16798:	strd	r8, [sp, #16]
   1679c:	mov	r9, r0
   167a0:	adds	r2, r2, #1
   167a4:	ldr	r0, [pc, #332]	; 168f8 <UnityPrintMask@@Base+0x184>
   167a8:	strd	sl, [sp, #24]
   167ac:	mov	fp, r1
   167b0:	adc	ip, ip, #0
   167b4:	ldr	r6, [pc, #320]	; 168fc <UnityPrintMask@@Base+0x188>
   167b8:	add	r7, pc, r7
   167bc:	str	lr, [sp, #32]
   167c0:	sub	sp, sp, #4
   167c4:	ldr	r1, [pc, #308]	; 16900 <UnityPrintMask@@Base+0x18c>
   167c8:	add	r7, r7, #784	; 0x310
   167cc:	add	r0, pc, r0
   167d0:	str	r2, [r3, #776]	; 0x308
   167d4:	ldr	sl, [pc, #296]	; 16904 <UnityPrintMask@@Base+0x190>
   167d8:	add	r6, pc, r6
   167dc:	str	ip, [r3, #780]	; 0x30c
   167e0:	add	r6, r6, #784	; 0x310
   167e4:	ldr	r8, [r0, r1]
   167e8:	add	sl, pc, sl
   167ec:	b	16830 <UnityPrintMask@@Base+0xbc>
   167f0:	ldr	r3, [r6, #8]
   167f4:	ldr	r2, [r6, #12]
   167f8:	adds	r3, r3, #1
   167fc:	adc	r2, r2, #0
   16800:	str	r3, [r6, #8]
   16804:	str	r2, [r6, #12]
   16808:	bl	120e8 <putc@plt>
   1680c:	ldr	r3, [r6, #24]
   16810:	ldr	r2, [r6, #28]
   16814:	adds	r3, r3, #1
   16818:	adc	r2, r2, #0
   1681c:	str	r3, [r6, #24]
   16820:	str	r2, [r6, #28]
   16824:	subs	r5, r5, #1
   16828:	lsr	r4, r4, #1
   1682c:	beq	16878 <UnityPrintMask@@Base+0x104>
   16830:	tst	r9, r4
   16834:	ldr	r1, [r8]
   16838:	beq	168b4 <UnityPrintMask@@Base+0x140>
   1683c:	tst	fp, r4
   16840:	add	r3, sl, #784	; 0x310
   16844:	mov	r0, #49	; 0x31
   16848:	bne	167f0 <UnityPrintMask@@Base+0x7c>
   1684c:	ldr	r2, [r3, #16]
   16850:	mov	r0, #48	; 0x30
   16854:	lsr	r4, r4, #1
   16858:	ldr	ip, [r3, #20]
   1685c:	adds	r2, r2, #1
   16860:	adc	ip, ip, #0
   16864:	str	r2, [r3, #16]
   16868:	str	ip, [r3, #20]
   1686c:	bl	120e8 <putc@plt>
   16870:	subs	r5, r5, #1
   16874:	bne	16830 <UnityPrintMask@@Base+0xbc>
   16878:	ldr	r3, [pc, #136]	; 16908 <UnityPrintMask@@Base+0x194>
   1687c:	add	r3, pc, r3
   16880:	ldr	r2, [r3, #824]	; 0x338
   16884:	ldr	r1, [r3, #828]	; 0x33c
   16888:	adds	r2, r2, #1
   1688c:	adc	r1, r1, #0
   16890:	str	r2, [r3, #824]	; 0x338
   16894:	str	r1, [r3, #828]	; 0x33c
   16898:	add	sp, sp, #4
   1689c:	ldrd	r4, [sp]
   168a0:	ldrd	r6, [sp, #8]
   168a4:	ldrd	r8, [sp, #16]
   168a8:	ldrd	sl, [sp, #24]
   168ac:	add	sp, sp, #32
   168b0:	pop	{pc}		; (ldr pc, [sp], #4)
   168b4:	ldr	r3, [r7]
   168b8:	mov	r0, #88	; 0x58
   168bc:	ldr	r2, [r7, #4]
   168c0:	adds	r3, r3, #1
   168c4:	adc	r2, r2, #0
   168c8:	str	r3, [r7]
   168cc:	str	r2, [r7, #4]
   168d0:	bl	120e8 <putc@plt>
   168d4:	ldr	r3, [r7, #32]
   168d8:	ldr	r2, [r7, #36]	; 0x24
   168dc:	adds	r3, r3, #1
   168e0:	adc	r2, r2, #0
   168e4:	str	r3, [r7, #32]
   168e8:	str	r2, [r7, #36]	; 0x24
   168ec:	b	16824 <UnityPrintMask@@Base+0xb0>
   168f0:	andeq	r9, r1, ip, lsr lr
   168f4:	andeq	r9, r1, r8, lsl #28
   168f8:	andeq	r8, r1, ip, lsr #16
   168fc:	andeq	r9, r1, r8, ror #27
   16900:	andeq	r0, r0, ip, lsr r1
   16904:	ldrdeq	r9, [r1], -r8
   16908:	andeq	r9, r1, r4, asr #26

0001690c <UnityPrintFail@@Base>:
   1690c:	str	r4, [sp, #-8]!
   16910:	ldr	r4, [pc, #84]	; 1696c <UnityPrintFail@@Base+0x60>
   16914:	ldr	r0, [pc, #84]	; 16970 <UnityPrintFail@@Base+0x64>
   16918:	ldr	r2, [pc, #84]	; 16974 <UnityPrintFail@@Base+0x68>
   1691c:	add	r4, pc, r4
   16920:	ldr	r3, [r4, #832]	; 0x340
   16924:	add	r0, pc, r0
   16928:	ldr	r1, [r4, #836]	; 0x344
   1692c:	str	lr, [sp, #4]
   16930:	adds	r3, r3, #1
   16934:	adc	r1, r1, #0
   16938:	str	r3, [r4, #832]	; 0x340
   1693c:	str	r1, [r4, #836]	; 0x344
   16940:	ldr	r0, [r0, r2]
   16944:	bl	15ccc <UnityPrint@@Base>
   16948:	ldr	r3, [r4, #840]	; 0x348
   1694c:	ldr	r2, [r4, #844]	; 0x34c
   16950:	adds	r3, r3, #1
   16954:	adc	r2, r2, #0
   16958:	str	r3, [r4, #840]	; 0x348
   1695c:	str	r2, [r4, #844]	; 0x34c
   16960:	ldr	r4, [sp]
   16964:	add	sp, sp, #4
   16968:	pop	{pc}		; (ldr pc, [sp], #4)
   1696c:	andeq	r9, r1, r4, lsr #25
   16970:	ldrdeq	r8, [r1], -r4
   16974:	andeq	r0, r0, ip, lsl #2

00016978 <UnityPrintOk@@Base>:
   16978:	str	r4, [sp, #-8]!
   1697c:	ldr	r4, [pc, #84]	; 169d8 <UnityPrintOk@@Base+0x60>
   16980:	ldr	r0, [pc, #84]	; 169dc <UnityPrintOk@@Base+0x64>
   16984:	ldr	r2, [pc, #84]	; 169e0 <UnityPrintOk@@Base+0x68>
   16988:	add	r4, pc, r4
   1698c:	ldr	r3, [r4, #848]	; 0x350
   16990:	add	r0, pc, r0
   16994:	ldr	r1, [r4, #852]	; 0x354
   16998:	str	lr, [sp, #4]
   1699c:	adds	r3, r3, #1
   169a0:	adc	r1, r1, #0
   169a4:	str	r3, [r4, #848]	; 0x350
   169a8:	str	r1, [r4, #852]	; 0x354
   169ac:	ldr	r0, [r0, r2]
   169b0:	bl	15ccc <UnityPrint@@Base>
   169b4:	ldr	r3, [r4, #856]	; 0x358
   169b8:	ldr	r2, [r4, #860]	; 0x35c
   169bc:	adds	r3, r3, #1
   169c0:	adc	r2, r2, #0
   169c4:	str	r3, [r4, #856]	; 0x358
   169c8:	str	r2, [r4, #860]	; 0x35c
   169cc:	ldr	r4, [sp]
   169d0:	add	sp, sp, #4
   169d4:	pop	{pc}		; (ldr pc, [sp], #4)
   169d8:	andeq	r9, r1, r8, lsr ip
   169dc:	andeq	r8, r1, r8, ror #12
   169e0:	strheq	r0, [r0], -r0	; <UNPREDICTABLE>

000169e4 <UnityConcludeTest@@Base>:
   169e4:	strd	r4, [sp, #-16]!
   169e8:	ldr	r5, [pc, #320]	; 16b30 <UnityConcludeTest@@Base+0x14c>
   169ec:	str	r6, [sp, #8]
   169f0:	ldr	r3, [pc, #316]	; 16b34 <UnityConcludeTest@@Base+0x150>
   169f4:	str	lr, [sp, #12]
   169f8:	add	r5, pc, r5
   169fc:	ldr	r4, [r5, r3]
   16a00:	ldr	r3, [r4, #36]	; 0x24
   16a04:	cmp	r3, #0
   16a08:	beq	16a88 <UnityConcludeTest@@Base+0xa4>
   16a0c:	ldr	r3, [pc, #292]	; 16b38 <UnityConcludeTest@@Base+0x154>
   16a10:	ldr	r0, [r4, #28]
   16a14:	add	r3, pc, r3
   16a18:	ldr	r2, [r3, #864]	; 0x360
   16a1c:	add	r0, r0, #1
   16a20:	ldr	r1, [r3, #868]	; 0x364
   16a24:	str	r0, [r4, #28]
   16a28:	adds	r2, r2, #1
   16a2c:	adc	r1, r1, #0
   16a30:	str	r2, [r3, #864]	; 0x360
   16a34:	str	r1, [r3, #868]	; 0x364
   16a38:	ldr	r3, [pc, #252]	; 16b3c <UnityConcludeTest@@Base+0x158>
   16a3c:	mov	r2, #0
   16a40:	mov	r0, #10
   16a44:	str	r2, [r4, #32]
   16a48:	str	r2, [r4, #36]	; 0x24
   16a4c:	ldr	r3, [r5, r3]
   16a50:	ldr	r1, [r3]
   16a54:	bl	120e8 <putc@plt>
   16a58:	ldr	r3, [pc, #224]	; 16b40 <UnityConcludeTest@@Base+0x15c>
   16a5c:	ldrd	r4, [sp]
   16a60:	ldr	r6, [sp, #8]
   16a64:	add	sp, sp, #12
   16a68:	add	r3, pc, r3
   16a6c:	ldr	r2, [r3, #904]	; 0x388
   16a70:	ldr	r1, [r3, #908]	; 0x38c
   16a74:	adds	r2, r2, #1
   16a78:	adc	r1, r1, #0
   16a7c:	str	r2, [r3, #904]	; 0x388
   16a80:	str	r1, [r3, #908]	; 0x38c
   16a84:	pop	{pc}		; (ldr pc, [sp], #4)
   16a88:	ldr	r3, [r4, #32]
   16a8c:	cmp	r3, #0
   16a90:	beq	16ac4 <UnityConcludeTest@@Base+0xe0>
   16a94:	ldr	r3, [pc, #168]	; 16b44 <UnityConcludeTest@@Base+0x160>
   16a98:	ldr	r0, [r4, #24]
   16a9c:	add	r3, pc, r3
   16aa0:	ldr	r2, [r3, #880]	; 0x370
   16aa4:	add	r0, r0, #1
   16aa8:	ldr	r1, [r3, #884]	; 0x374
   16aac:	str	r0, [r4, #24]
   16ab0:	adds	r2, r2, #1
   16ab4:	adc	r1, r1, #0
   16ab8:	str	r2, [r3, #880]	; 0x370
   16abc:	str	r1, [r3, #884]	; 0x374
   16ac0:	b	16a38 <UnityConcludeTest@@Base+0x54>
   16ac4:	ldr	r6, [pc, #124]	; 16b48 <UnityConcludeTest@@Base+0x164>
   16ac8:	ldr	r0, [r4]
   16acc:	ldr	r1, [r4, #16]
   16ad0:	add	r6, pc, r6
   16ad4:	ldr	r3, [r6, #872]	; 0x368
   16ad8:	ldr	r2, [r6, #876]	; 0x36c
   16adc:	adds	r3, r3, #1
   16ae0:	adc	r2, r2, #0
   16ae4:	str	r3, [r6, #872]	; 0x368
   16ae8:	str	r2, [r6, #876]	; 0x36c
   16aec:	bl	16378 <UnityPrint@@Base+0x6ac>
   16af0:	ldr	r3, [r6, #888]	; 0x378
   16af4:	ldr	r1, [r6, #892]	; 0x37c
   16af8:	ldr	r2, [pc, #76]	; 16b4c <UnityConcludeTest@@Base+0x168>
   16afc:	adds	r3, r3, #1
   16b00:	adc	r1, r1, #0
   16b04:	str	r3, [r6, #888]	; 0x378
   16b08:	str	r1, [r6, #892]	; 0x37c
   16b0c:	ldr	r0, [r5, r2]
   16b10:	bl	15ccc <UnityPrint@@Base>
   16b14:	ldr	r3, [r6, #896]	; 0x380
   16b18:	ldr	r2, [r6, #900]	; 0x384
   16b1c:	adds	r3, r3, #1
   16b20:	adc	r2, r2, #0
   16b24:	str	r3, [r6, #896]	; 0x380
   16b28:	str	r2, [r6, #900]	; 0x384
   16b2c:	b	16a38 <UnityConcludeTest@@Base+0x54>
   16b30:	andeq	r8, r1, r0, lsl #12
   16b34:	andeq	r0, r0, r8, lsl r1
   16b38:	andeq	r9, r1, ip, lsr #23
   16b3c:	andeq	r0, r0, ip, lsr r1
   16b40:	andeq	r9, r1, r8, asr fp
   16b44:	andeq	r9, r1, r4, lsr #22
   16b48:	strdeq	r9, [r1], -r0
   16b4c:	muleq	r0, ip, r0

00016b50 <UnityAssertBits@@Base>:
   16b50:	strd	r4, [sp, #-32]!	; 0xffffffe0
   16b54:	ldr	r5, [pc, #452]	; 16d20 <UnityAssertBits@@Base+0x1d0>
   16b58:	strd	r6, [sp, #8]
   16b5c:	ldr	ip, [pc, #448]	; 16d24 <UnityAssertBits@@Base+0x1d4>
   16b60:	strd	r8, [sp, #16]
   16b64:	str	sl, [sp, #24]
   16b68:	add	r5, pc, r5
   16b6c:	str	lr, [sp, #28]
   16b70:	ldr	r6, [r5, ip]
   16b74:	ldr	ip, [r6, #32]
   16b78:	cmp	ip, #0
   16b7c:	bne	16bf8 <UnityAssertBits@@Base+0xa8>
   16b80:	ldr	ip, [r6, #36]	; 0x24
   16b84:	cmp	ip, #0
   16b88:	bne	16bd4 <UnityAssertBits@@Base+0x84>
   16b8c:	ldr	r4, [pc, #404]	; 16d28 <UnityAssertBits@@Base+0x1d8>
   16b90:	eor	r7, r1, r2
   16b94:	add	r4, pc, r4
   16b98:	add	r4, r4, #912	; 0x390
   16b9c:	ldr	ip, [r4, #16]
   16ba0:	ldr	lr, [r4, #20]
   16ba4:	adds	ip, ip, #1
   16ba8:	adc	lr, lr, #0
   16bac:	tst	r7, r0
   16bb0:	str	ip, [r4, #16]
   16bb4:	str	lr, [r4, #20]
   16bb8:	bne	16c1c <UnityAssertBits@@Base+0xcc>
   16bbc:	ldrd	r4, [sp]
   16bc0:	ldrd	r6, [sp, #8]
   16bc4:	ldrd	r8, [sp, #16]
   16bc8:	ldr	sl, [sp, #24]
   16bcc:	add	sp, sp, #28
   16bd0:	pop	{pc}		; (ldr pc, [sp], #4)
   16bd4:	ldr	r3, [pc, #336]	; 16d2c <UnityAssertBits@@Base+0x1dc>
   16bd8:	add	r3, pc, r3
   16bdc:	ldr	r2, [r3, #920]	; 0x398
   16be0:	ldr	r1, [r3, #924]	; 0x39c
   16be4:	adds	r2, r2, #1
   16be8:	adc	r1, r1, #0
   16bec:	str	r2, [r3, #920]	; 0x398
   16bf0:	str	r1, [r3, #924]	; 0x39c
   16bf4:	b	16bbc <UnityAssertBits@@Base+0x6c>
   16bf8:	ldr	r3, [pc, #304]	; 16d30 <UnityAssertBits@@Base+0x1e0>
   16bfc:	add	r3, pc, r3
   16c00:	ldr	r2, [r3, #912]	; 0x390
   16c04:	ldr	r1, [r3, #916]	; 0x394
   16c08:	adds	r2, r2, #1
   16c0c:	adc	r1, r1, #0
   16c10:	str	r2, [r3, #912]	; 0x390
   16c14:	str	r1, [r3, #916]	; 0x394
   16c18:	b	16bbc <UnityAssertBits@@Base+0x6c>
   16c1c:	mov	r7, r3
   16c20:	ldr	r3, [r4, #24]
   16c24:	mov	r9, r2
   16c28:	mov	r8, r0
   16c2c:	mov	sl, r1
   16c30:	ldr	r2, [r4, #28]
   16c34:	ldr	r0, [sp, #32]
   16c38:	adds	r3, r3, #1
   16c3c:	adc	r2, r2, #0
   16c40:	str	r3, [r4, #24]
   16c44:	str	r2, [r4, #28]
   16c48:	bl	164b4 <UnityPrint@@Base+0x7e8>
   16c4c:	ldr	r3, [r4, #32]
   16c50:	ldr	r1, [r4, #36]	; 0x24
   16c54:	ldr	r2, [pc, #216]	; 16d34 <UnityAssertBits@@Base+0x1e4>
   16c58:	adds	r3, r3, #1
   16c5c:	adc	r1, r1, #0
   16c60:	str	r3, [r4, #32]
   16c64:	str	r1, [r4, #36]	; 0x24
   16c68:	ldr	r0, [r5, r2]
   16c6c:	bl	15ccc <UnityPrint@@Base>
   16c70:	ldr	r3, [r4, #40]	; 0x28
   16c74:	mov	r1, sl
   16c78:	mov	r0, r8
   16c7c:	ldr	r2, [r4, #44]	; 0x2c
   16c80:	adds	r3, r3, #1
   16c84:	adc	r2, r2, #0
   16c88:	str	r3, [r4, #40]	; 0x28
   16c8c:	str	r2, [r4, #44]	; 0x2c
   16c90:	bl	16774 <UnityPrintMask@@Base>
   16c94:	ldr	r3, [r4, #48]	; 0x30
   16c98:	ldr	r1, [r4, #52]	; 0x34
   16c9c:	ldr	r2, [pc, #148]	; 16d38 <UnityAssertBits@@Base+0x1e8>
   16ca0:	adds	r3, r3, #1
   16ca4:	adc	r1, r1, #0
   16ca8:	str	r3, [r4, #48]	; 0x30
   16cac:	str	r1, [r4, #52]	; 0x34
   16cb0:	ldr	r0, [r5, r2]
   16cb4:	bl	15ccc <UnityPrint@@Base>
   16cb8:	ldr	ip, [r4, #56]	; 0x38
   16cbc:	mov	r1, r9
   16cc0:	mov	r0, r8
   16cc4:	ldr	r3, [r4, #60]	; 0x3c
   16cc8:	adds	ip, ip, #1
   16ccc:	adc	r3, r3, #0
   16cd0:	str	ip, [r4, #56]	; 0x38
   16cd4:	str	r3, [r4, #60]	; 0x3c
   16cd8:	bl	16774 <UnityPrintMask@@Base>
   16cdc:	ldrd	r2, [r4, #64]	; 0x40
   16ce0:	mov	r0, r7
   16ce4:	adds	r2, r2, #1
   16ce8:	adc	r3, r3, #0
   16cec:	strd	r2, [r4, #64]	; 0x40
   16cf0:	bl	16180 <UnityPrint@@Base+0x4b4>
   16cf4:	ldr	r3, [r4, #72]	; 0x48
   16cf8:	mov	ip, #1
   16cfc:	add	r0, r6, #40	; 0x28
   16d00:	mov	r1, ip
   16d04:	ldr	r2, [r4, #76]	; 0x4c
   16d08:	str	ip, [r6, #32]
   16d0c:	adds	r3, r3, ip
   16d10:	adc	r2, r2, #0
   16d14:	str	r3, [r4, #72]	; 0x48
   16d18:	str	r2, [r4, #76]	; 0x4c
   16d1c:	bl	11fbc <longjmp@plt>
   16d20:	muleq	r1, r0, r4
   16d24:	andeq	r0, r0, r8, lsl r1
   16d28:	andeq	r9, r1, ip, lsr #20
   16d2c:	andeq	r9, r1, r8, ror #19
   16d30:	andeq	r9, r1, r4, asr #19
   16d34:	ldrdeq	r0, [r0], -r8
   16d38:	andeq	r0, r0, r8, asr #2

00016d3c <UnityAssertEqualNumber@@Base>:
   16d3c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   16d40:	ldr	r5, [pc, #444]	; 16f04 <UnityAssertEqualNumber@@Base+0x1c8>
   16d44:	strd	r6, [sp, #8]
   16d48:	ldr	ip, [pc, #440]	; 16f08 <UnityAssertEqualNumber@@Base+0x1cc>
   16d4c:	strd	r8, [sp, #16]
   16d50:	str	sl, [sp, #24]
   16d54:	add	r5, pc, r5
   16d58:	str	lr, [sp, #28]
   16d5c:	ldr	r6, [r5, ip]
   16d60:	ldr	ip, [r6, #32]
   16d64:	cmp	ip, #0
   16d68:	bne	16de0 <UnityAssertEqualNumber@@Base+0xa4>
   16d6c:	ldr	ip, [r6, #36]	; 0x24
   16d70:	cmp	ip, #0
   16d74:	bne	16dbc <UnityAssertEqualNumber@@Base+0x80>
   16d78:	ldr	r4, [pc, #396]	; 16f0c <UnityAssertEqualNumber@@Base+0x1d0>
   16d7c:	add	r4, pc, r4
   16d80:	add	r4, r4, #992	; 0x3e0
   16d84:	ldr	ip, [r4, #16]
   16d88:	ldr	lr, [r4, #20]
   16d8c:	adds	ip, ip, #1
   16d90:	adc	lr, lr, #0
   16d94:	cmp	r0, r1
   16d98:	str	ip, [r4, #16]
   16d9c:	str	lr, [r4, #20]
   16da0:	bne	16e04 <UnityAssertEqualNumber@@Base+0xc8>
   16da4:	ldrd	r4, [sp]
   16da8:	ldrd	r6, [sp, #8]
   16dac:	ldrd	r8, [sp, #16]
   16db0:	ldr	sl, [sp, #24]
   16db4:	add	sp, sp, #28
   16db8:	pop	{pc}		; (ldr pc, [sp], #4)
   16dbc:	ldr	r3, [pc, #332]	; 16f10 <UnityAssertEqualNumber@@Base+0x1d4>
   16dc0:	add	r3, pc, r3
   16dc4:	ldr	r2, [r3, #1000]	; 0x3e8
   16dc8:	ldr	r1, [r3, #1004]	; 0x3ec
   16dcc:	adds	r2, r2, #1
   16dd0:	adc	r1, r1, #0
   16dd4:	str	r2, [r3, #1000]	; 0x3e8
   16dd8:	str	r1, [r3, #1004]	; 0x3ec
   16ddc:	b	16da4 <UnityAssertEqualNumber@@Base+0x68>
   16de0:	ldr	r3, [pc, #300]	; 16f14 <UnityAssertEqualNumber@@Base+0x1d8>
   16de4:	add	r3, pc, r3
   16de8:	ldr	r2, [r3, #992]	; 0x3e0
   16dec:	ldr	r1, [r3, #996]	; 0x3e4
   16df0:	adds	r2, r2, #1
   16df4:	adc	r1, r1, #0
   16df8:	str	r2, [r3, #992]	; 0x3e0
   16dfc:	str	r1, [r3, #996]	; 0x3e4
   16e00:	b	16da4 <UnityAssertEqualNumber@@Base+0x68>
   16e04:	mov	r7, r2
   16e08:	mov	r9, r0
   16e0c:	mov	r0, r3
   16e10:	ldrd	r2, [r4, #24]
   16e14:	mov	r8, r1
   16e18:	adds	r2, r2, #1
   16e1c:	adc	r3, r3, #0
   16e20:	strd	r2, [r4, #24]
   16e24:	bl	164b4 <UnityPrint@@Base+0x7e8>
   16e28:	ldr	r3, [r4, #32]
   16e2c:	ldr	r1, [r4, #36]	; 0x24
   16e30:	ldr	r2, [pc, #224]	; 16f18 <UnityAssertEqualNumber@@Base+0x1dc>
   16e34:	adds	r3, r3, #1
   16e38:	adc	r1, r1, #0
   16e3c:	str	r3, [r4, #32]
   16e40:	str	r1, [r4, #36]	; 0x24
   16e44:	ldr	r0, [r5, r2]
   16e48:	bl	15ccc <UnityPrint@@Base>
   16e4c:	ldr	r3, [r4, #40]	; 0x28
   16e50:	mov	r0, r9
   16e54:	ldr	r2, [r4, #44]	; 0x2c
   16e58:	ldr	r1, [sp, #32]
   16e5c:	adds	r3, r3, #1
   16e60:	adc	r2, r2, #0
   16e64:	str	r3, [r4, #40]	; 0x28
   16e68:	str	r2, [r4, #44]	; 0x2c
   16e6c:	bl	158dc <UnityPrintNumberByStyle@@Base>
   16e70:	ldr	r3, [r4, #48]	; 0x30
   16e74:	ldr	r1, [r4, #52]	; 0x34
   16e78:	ldr	r2, [pc, #156]	; 16f1c <UnityAssertEqualNumber@@Base+0x1e0>
   16e7c:	adds	r3, r3, #1
   16e80:	adc	r1, r1, #0
   16e84:	str	r3, [r4, #48]	; 0x30
   16e88:	str	r1, [r4, #52]	; 0x34
   16e8c:	ldr	r0, [r5, r2]
   16e90:	bl	15ccc <UnityPrint@@Base>
   16e94:	ldr	r3, [r4, #56]	; 0x38
   16e98:	mov	r0, r8
   16e9c:	ldr	r2, [r4, #60]	; 0x3c
   16ea0:	ldr	r1, [sp, #32]
   16ea4:	adds	r3, r3, #1
   16ea8:	adc	r2, r2, #0
   16eac:	str	r3, [r4, #56]	; 0x38
   16eb0:	str	r2, [r4, #60]	; 0x3c
   16eb4:	bl	158dc <UnityPrintNumberByStyle@@Base>
   16eb8:	ldr	r3, [r4, #64]	; 0x40
   16ebc:	mov	r0, r7
   16ec0:	ldr	r2, [r4, #68]	; 0x44
   16ec4:	adds	r3, r3, #1
   16ec8:	adc	r2, r2, #0
   16ecc:	str	r3, [r4, #64]	; 0x40
   16ed0:	str	r2, [r4, #68]	; 0x44
   16ed4:	bl	16180 <UnityPrint@@Base+0x4b4>
   16ed8:	ldr	r3, [r4, #72]	; 0x48
   16edc:	mov	ip, #1
   16ee0:	add	r0, r6, #40	; 0x28
   16ee4:	mov	r1, ip
   16ee8:	ldr	r2, [r4, #76]	; 0x4c
   16eec:	str	ip, [r6, #32]
   16ef0:	adds	r3, r3, ip
   16ef4:	adc	r2, r2, #0
   16ef8:	str	r3, [r4, #72]	; 0x48
   16efc:	str	r2, [r4, #76]	; 0x4c
   16f00:	bl	11fbc <longjmp@plt>
   16f04:	andeq	r8, r1, r4, lsr #5
   16f08:	andeq	r0, r0, r8, lsl r1
   16f0c:	andeq	r9, r1, r4, asr #16
   16f10:	andeq	r9, r1, r0, lsl #16
   16f14:	ldrdeq	r9, [r1], -ip
   16f18:	ldrdeq	r0, [r0], -r8
   16f1c:	andeq	r0, r0, r8, asr #2

00016f20 <UnityAssertEqualIntArray@@Base>:
   16f20:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16f24:	mov	r5, r2
   16f28:	strd	r6, [sp, #8]
   16f2c:	ldr	r6, [pc, #2216]	; 177dc <UnityAssertEqualIntArray@@Base+0x8bc>
   16f30:	strd	r8, [sp, #16]
   16f34:	ldr	r2, [pc, #2212]	; 177e0 <UnityAssertEqualIntArray@@Base+0x8c0>
   16f38:	strd	sl, [sp, #24]
   16f3c:	str	lr, [sp, #32]
   16f40:	sub	sp, sp, #20
   16f44:	add	r6, pc, r6
   16f48:	ldr	r7, [r6, r2]
   16f4c:	ldr	r2, [r7, #32]
   16f50:	cmp	r2, #0
   16f54:	bne	170d0 <UnityAssertEqualIntArray@@Base+0x1b0>
   16f58:	ldr	r2, [r7, #36]	; 0x24
   16f5c:	cmp	r2, #0
   16f60:	bne	17094 <UnityAssertEqualIntArray@@Base+0x174>
   16f64:	cmp	r5, #0
   16f68:	mov	r8, r3
   16f6c:	beq	17728 <UnityAssertEqualIntArray@@Base+0x808>
   16f70:	ldr	sl, [pc, #2156]	; 177e4 <UnityAssertEqualIntArray@@Base+0x8c4>
   16f74:	mov	r4, r0
   16f78:	mov	r9, r1
   16f7c:	ldr	r2, [sp, #56]	; 0x38
   16f80:	add	sl, pc, sl
   16f84:	ldr	ip, [sl, #1096]	; 0x448
   16f88:	add	sl, sl, #1072	; 0x430
   16f8c:	ldr	lr, [sl, #28]
   16f90:	adds	ip, ip, #1
   16f94:	adc	lr, lr, #0
   16f98:	str	ip, [sl, #24]
   16f9c:	str	lr, [sl, #28]
   16fa0:	bl	16588 <UnityPrint@@Base+0x8bc>
   16fa4:	cmp	r0, #1
   16fa8:	beq	172c0 <UnityAssertEqualIntArray@@Base+0x3a0>
   16fac:	ldr	r3, [sp, #60]	; 0x3c
   16fb0:	sub	r2, r5, #1
   16fb4:	str	r2, [sp, #4]
   16fb8:	bic	r3, r3, #128	; 0x80
   16fbc:	sub	r3, r3, #17
   16fc0:	cmp	r3, #49	; 0x31
   16fc4:	addls	pc, pc, r3, lsl #2
   16fc8:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   16fcc:	b	1718c <UnityAssertEqualIntArray@@Base+0x26c>
   16fd0:	b	170f4 <UnityAssertEqualIntArray@@Base+0x1d4>
   16fd4:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   16fd8:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   16fdc:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   16fe0:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   16fe4:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   16fe8:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   16fec:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   16ff0:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   16ff4:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   16ff8:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   16ffc:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   17000:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   17004:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   17008:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   1700c:	b	1718c <UnityAssertEqualIntArray@@Base+0x26c>
   17010:	b	170f4 <UnityAssertEqualIntArray@@Base+0x1d4>
   17014:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   17018:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   1701c:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   17020:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   17024:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   17028:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   1702c:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   17030:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   17034:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   17038:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   1703c:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   17040:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   17044:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   17048:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   1704c:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   17050:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   17054:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   17058:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   1705c:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   17060:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   17064:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   17068:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   1706c:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   17070:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   17074:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   17078:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   1707c:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   17080:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   17084:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   17088:	b	17224 <UnityAssertEqualIntArray@@Base+0x304>
   1708c:	b	1718c <UnityAssertEqualIntArray@@Base+0x26c>
   17090:	b	170f4 <UnityAssertEqualIntArray@@Base+0x1d4>
   17094:	ldr	r3, [pc, #1868]	; 177e8 <UnityAssertEqualIntArray@@Base+0x8c8>
   17098:	add	r3, pc, r3
   1709c:	ldr	r2, [r3, #1080]	; 0x438
   170a0:	ldr	r1, [r3, #1084]	; 0x43c
   170a4:	adds	r2, r2, #1
   170a8:	adc	r1, r1, #0
   170ac:	str	r2, [r3, #1080]	; 0x438
   170b0:	str	r1, [r3, #1084]	; 0x43c
   170b4:	add	sp, sp, #20
   170b8:	ldrd	r4, [sp]
   170bc:	ldrd	r6, [sp, #8]
   170c0:	ldrd	r8, [sp, #16]
   170c4:	ldrd	sl, [sp, #24]
   170c8:	add	sp, sp, #32
   170cc:	pop	{pc}		; (ldr pc, [sp], #4)
   170d0:	ldr	r3, [pc, #1812]	; 177ec <UnityAssertEqualIntArray@@Base+0x8cc>
   170d4:	add	r3, pc, r3
   170d8:	ldr	r2, [r3, #1072]	; 0x430
   170dc:	ldr	r1, [r3, #1076]	; 0x434
   170e0:	adds	r2, r2, #1
   170e4:	adc	r1, r1, #0
   170e8:	str	r2, [r3, #1072]	; 0x430
   170ec:	str	r1, [r3, #1076]	; 0x434
   170f0:	b	170b4 <UnityAssertEqualIntArray@@Base+0x194>
   170f4:	ldrsh	r2, [r4]
   170f8:	ldrsh	r3, [r9]
   170fc:	cmp	r2, r3
   17100:	bne	177c4 <UnityAssertEqualIntArray@@Base+0x8a4>
   17104:	ldr	r1, [pc, #1764]	; 177f0 <UnityAssertEqualIntArray@@Base+0x8d0>
   17108:	mov	r2, r4
   1710c:	ldr	r5, [sp, #4]
   17110:	add	r1, pc, r1
   17114:	ldr	r3, [r1, #1232]	; 0x4d0
   17118:	ldr	r0, [r1, #1236]	; 0x4d4
   1711c:	adds	r3, r3, #1
   17120:	adc	r0, r0, #0
   17124:	b	17140 <UnityAssertEqualIntArray@@Base+0x220>
   17128:	ldrsh	ip, [r2]
   1712c:	adds	r3, r3, #1
   17130:	adc	r0, r0, #0
   17134:	ldrsh	lr, [r1]
   17138:	cmp	lr, ip
   1713c:	bne	172dc <UnityAssertEqualIntArray@@Base+0x3bc>
   17140:	add	r2, r2, #2
   17144:	sub	r5, r5, #1
   17148:	add	r1, r9, r2
   1714c:	cmn	r5, #1
   17150:	sub	r1, r1, r4
   17154:	mov	fp, r3
   17158:	mov	sl, r0
   1715c:	bne	17128 <UnityAssertEqualIntArray@@Base+0x208>
   17160:	ldr	r2, [pc, #1676]	; 177f4 <UnityAssertEqualIntArray@@Base+0x8d4>
   17164:	add	r2, pc, r2
   17168:	ldr	r1, [r2, #1304]	; 0x518
   1716c:	str	r3, [r2, #1232]	; 0x4d0
   17170:	ldr	r3, [r2, #1308]	; 0x51c
   17174:	str	r0, [r2, #1236]	; 0x4d4
   17178:	adds	r1, r1, #1
   1717c:	adc	r3, r3, #0
   17180:	str	r1, [r2, #1304]	; 0x518
   17184:	str	r3, [r2, #1308]	; 0x51c
   17188:	b	170b4 <UnityAssertEqualIntArray@@Base+0x194>
   1718c:	ldrsb	r2, [r9]
   17190:	ldrsb	r3, [r4]
   17194:	cmp	r2, r3
   17198:	bne	177d4 <UnityAssertEqualIntArray@@Base+0x8b4>
   1719c:	ldr	r2, [pc, #1620]	; 177f8 <UnityAssertEqualIntArray@@Base+0x8d8>
   171a0:	add	r4, r4, r5
   171a4:	add	r9, r9, r5
   171a8:	ldr	r5, [sp, #4]
   171ac:	add	r2, pc, r2
   171b0:	ldr	r3, [r2, #1144]	; 0x478
   171b4:	ldr	r1, [r2, #1148]	; 0x47c
   171b8:	adds	r3, r3, #1
   171bc:	adc	r1, r1, #0
   171c0:	b	171dc <UnityAssertEqualIntArray@@Base+0x2bc>
   171c4:	ldrsb	fp, [r2]
   171c8:	adds	r3, r3, #1
   171cc:	adc	r1, r1, #0
   171d0:	ldrsb	ip, [r0]
   171d4:	cmp	fp, ip
   171d8:	bne	175c0 <UnityAssertEqualIntArray@@Base+0x6a0>
   171dc:	sub	r2, r4, r5
   171e0:	sub	r0, r9, r5
   171e4:	sub	r5, r5, #1
   171e8:	mov	sl, r3
   171ec:	cmn	r5, #1
   171f0:	mov	lr, r1
   171f4:	bne	171c4 <UnityAssertEqualIntArray@@Base+0x2a4>
   171f8:	ldr	r2, [pc, #1532]	; 177fc <UnityAssertEqualIntArray@@Base+0x8dc>
   171fc:	add	r2, pc, r2
   17200:	ldr	r0, [r2, #1216]	; 0x4c0
   17204:	str	r3, [r2, #1144]	; 0x478
   17208:	ldr	r3, [r2, #1220]	; 0x4c4
   1720c:	str	r1, [r2, #1148]	; 0x47c
   17210:	adds	r0, r0, #1
   17214:	adc	r3, r3, #0
   17218:	str	r0, [r2, #1216]	; 0x4c0
   1721c:	str	r3, [r2, #1220]	; 0x4c4
   17220:	b	170b4 <UnityAssertEqualIntArray@@Base+0x194>
   17224:	ldr	r3, [r4]
   17228:	ldr	r2, [r9]
   1722c:	cmp	r2, r3
   17230:	bne	177cc <UnityAssertEqualIntArray@@Base+0x8ac>
   17234:	ldr	r1, [pc, #1476]	; 17800 <UnityAssertEqualIntArray@@Base+0x8e0>
   17238:	mov	r2, r4
   1723c:	ldr	r5, [sp, #4]
   17240:	add	r1, pc, r1
   17244:	ldr	r3, [r1, #1320]	; 0x528
   17248:	ldr	r0, [r1, #1324]	; 0x52c
   1724c:	adds	r3, r3, #1
   17250:	adc	r0, r0, #0
   17254:	b	17270 <UnityAssertEqualIntArray@@Base+0x350>
   17258:	ldr	ip, [r1]
   1725c:	adds	r3, r3, #1
   17260:	adc	r0, r0, #0
   17264:	ldr	lr, [r2]
   17268:	cmp	lr, ip
   1726c:	bne	17444 <UnityAssertEqualIntArray@@Base+0x524>
   17270:	add	r2, r2, #4
   17274:	sub	r5, r5, #1
   17278:	add	r1, r9, r2
   1727c:	cmn	r5, #1
   17280:	sub	r1, r1, r4
   17284:	mov	fp, r3
   17288:	mov	sl, r0
   1728c:	bne	17258 <UnityAssertEqualIntArray@@Base+0x338>
   17290:	ldr	r1, [pc, #1388]	; 17804 <UnityAssertEqualIntArray@@Base+0x8e4>
   17294:	add	r1, pc, r1
   17298:	ldr	r2, [r1, #1392]	; 0x570
   1729c:	add	ip, r1, #1392	; 0x570
   172a0:	str	r3, [r1, #1320]	; 0x528
   172a4:	ldr	r3, [r1, #1396]	; 0x574
   172a8:	str	r0, [r1, #1324]	; 0x52c
   172ac:	adds	r2, r2, #1
   172b0:	adc	r3, r3, #0
   172b4:	str	r2, [ip]
   172b8:	str	r3, [ip, #4]
   172bc:	b	170b4 <UnityAssertEqualIntArray@@Base+0x194>
   172c0:	ldr	r3, [sl, #56]	; 0x38
   172c4:	ldr	r2, [sl, #60]	; 0x3c
   172c8:	adds	r3, r3, #1
   172cc:	adc	r2, r2, #0
   172d0:	str	r3, [sl, #56]	; 0x38
   172d4:	str	r2, [sl, #60]	; 0x3c
   172d8:	b	170b4 <UnityAssertEqualIntArray@@Base+0x194>
   172dc:	ldr	r3, [pc, #1316]	; 17808 <UnityAssertEqualIntArray@@Base+0x8e8>
   172e0:	mov	r9, r1
   172e4:	mov	r4, r2
   172e8:	add	r3, pc, r3
   172ec:	str	fp, [r3, #1232]	; 0x4d0
   172f0:	str	sl, [r3, #1236]	; 0x4d4
   172f4:	ldr	sl, [pc, #1296]	; 1780c <UnityAssertEqualIntArray@@Base+0x8ec>
   172f8:	ldr	r0, [sp, #56]	; 0x38
   172fc:	add	sl, pc, sl
   17300:	add	sl, sl, #1072	; 0x430
   17304:	ldr	r3, [sl, #152]	; 0x98
   17308:	ldr	r2, [sl, #156]	; 0x9c
   1730c:	adds	r3, r3, #1
   17310:	adc	r2, r2, #0
   17314:	str	r3, [sl, #152]	; 0x98
   17318:	str	r2, [sl, #156]	; 0x9c
   1731c:	bl	164b4 <UnityPrint@@Base+0x7e8>
   17320:	ldr	r3, [sl, #168]	; 0xa8
   17324:	ldr	r1, [sl, #172]	; 0xac
   17328:	ldr	r2, [pc, #1248]	; 17810 <UnityAssertEqualIntArray@@Base+0x8f0>
   1732c:	adds	r3, r3, #1
   17330:	adc	r1, r1, #0
   17334:	str	r3, [sl, #168]	; 0xa8
   17338:	str	r1, [sl, #172]	; 0xac
   1733c:	ldr	r0, [r6, r2]
   17340:	bl	15ccc <UnityPrint@@Base>
   17344:	ldr	r2, [sp, #4]
   17348:	ldr	r3, [sl, #176]	; 0xb0
   1734c:	sub	r0, r2, r5
   17350:	ldr	r2, [sl, #180]	; 0xb4
   17354:	adds	r3, r3, #1
   17358:	str	r3, [sl, #176]	; 0xb0
   1735c:	adc	r2, r2, #0
   17360:	str	r2, [sl, #180]	; 0xb4
   17364:	bl	155bc <UnityPrintNumberUnsigned@@Base>
   17368:	ldr	r3, [sl, #184]	; 0xb8
   1736c:	ldr	r1, [sl, #188]	; 0xbc
   17370:	ldr	r2, [pc, #1180]	; 17814 <UnityAssertEqualIntArray@@Base+0x8f4>
   17374:	adds	r3, r3, #1
   17378:	adc	r1, r1, #0
   1737c:	str	r3, [sl, #184]	; 0xb8
   17380:	str	r1, [sl, #188]	; 0xbc
   17384:	ldr	r0, [r6, r2]
   17388:	bl	15ccc <UnityPrint@@Base>
   1738c:	ldr	r3, [sl, #192]	; 0xc0
   17390:	ldr	r2, [sl, #196]	; 0xc4
   17394:	ldrsh	r0, [r4]
   17398:	adds	r3, r3, #1
   1739c:	ldr	r1, [sp, #60]	; 0x3c
   173a0:	adc	r2, r2, #0
   173a4:	str	r3, [sl, #192]	; 0xc0
   173a8:	str	r2, [sl, #196]	; 0xc4
   173ac:	bl	158dc <UnityPrintNumberByStyle@@Base>
   173b0:	ldr	r3, [sl, #200]	; 0xc8
   173b4:	ldr	r1, [sl, #204]	; 0xcc
   173b8:	ldr	r2, [pc, #1112]	; 17818 <UnityAssertEqualIntArray@@Base+0x8f8>
   173bc:	adds	r3, r3, #1
   173c0:	adc	r1, r1, #0
   173c4:	str	r3, [sl, #200]	; 0xc8
   173c8:	str	r1, [sl, #204]	; 0xcc
   173cc:	ldr	r0, [r6, r2]
   173d0:	bl	15ccc <UnityPrint@@Base>
   173d4:	ldr	r3, [sl, #208]	; 0xd0
   173d8:	ldr	r2, [sl, #212]	; 0xd4
   173dc:	ldrsh	r0, [r9]
   173e0:	adds	r3, r3, #1
   173e4:	ldr	r1, [sp, #60]	; 0x3c
   173e8:	adc	r2, r2, #0
   173ec:	str	r3, [sl, #208]	; 0xd0
   173f0:	str	r2, [sl, #212]	; 0xd4
   173f4:	bl	158dc <UnityPrintNumberByStyle@@Base>
   173f8:	ldr	r3, [sl, #216]	; 0xd8
   173fc:	mov	r0, r8
   17400:	ldr	r2, [sl, #220]	; 0xdc
   17404:	adds	r3, r3, #1
   17408:	adc	r2, r2, #0
   1740c:	str	r3, [sl, #216]	; 0xd8
   17410:	str	r2, [sl, #220]	; 0xdc
   17414:	bl	16180 <UnityPrint@@Base+0x4b4>
   17418:	ldr	r3, [sl, #224]	; 0xe0
   1741c:	mov	ip, #1
   17420:	add	r0, r7, #40	; 0x28
   17424:	mov	r1, ip
   17428:	ldr	r2, [sl, #228]	; 0xe4
   1742c:	str	ip, [r7, #32]
   17430:	adds	r3, r3, ip
   17434:	adc	r2, r2, #0
   17438:	str	r3, [sl, #224]	; 0xe0
   1743c:	str	r2, [sl, #228]	; 0xe4
   17440:	bl	11fbc <longjmp@plt>
   17444:	ldr	r3, [pc, #976]	; 1781c <UnityAssertEqualIntArray@@Base+0x8fc>
   17448:	mov	r9, r1
   1744c:	mov	r4, r2
   17450:	add	r3, pc, r3
   17454:	str	fp, [r3, #1320]	; 0x528
   17458:	str	sl, [r3, #1324]	; 0x52c
   1745c:	ldr	sl, [pc, #956]	; 17820 <UnityAssertEqualIntArray@@Base+0x900>
   17460:	ldr	r0, [sp, #56]	; 0x38
   17464:	add	sl, pc, sl
   17468:	ldr	r3, [sl, #1312]	; 0x520
   1746c:	add	r2, sl, #1344	; 0x540
   17470:	add	fp, sl, #1376	; 0x560
   17474:	ldr	ip, [sl, #1316]	; 0x524
   17478:	str	r2, [sp, #12]
   1747c:	adds	r3, r3, #1
   17480:	adc	ip, ip, #0
   17484:	str	r3, [sl, #1312]	; 0x520
   17488:	str	ip, [sl, #1316]	; 0x524
   1748c:	bl	164b4 <UnityPrint@@Base+0x7e8>
   17490:	ldr	r3, [sl, #1328]	; 0x530
   17494:	ldr	ip, [sl, #1332]	; 0x534
   17498:	ldr	r0, [pc, #880]	; 17810 <UnityAssertEqualIntArray@@Base+0x8f0>
   1749c:	adds	r3, r3, #1
   174a0:	adc	ip, ip, #0
   174a4:	str	r3, [sl, #1328]	; 0x530
   174a8:	add	r3, sl, #1360	; 0x550
   174ac:	add	sl, sl, #1392	; 0x570
   174b0:	str	ip, [sl, #-60]	; 0xffffffc4
   174b4:	str	r3, [sp, #8]
   174b8:	ldr	r0, [r6, r0]
   174bc:	bl	15ccc <UnityPrint@@Base>
   174c0:	ldr	r3, [sp, #4]
   174c4:	ldr	r2, [sp, #12]
   174c8:	sub	r0, r3, r5
   174cc:	ldmdb	r2, {r1, ip}
   174d0:	str	r2, [sp, #4]
   174d4:	adds	r1, r1, #1
   174d8:	adc	ip, ip, #0
   174dc:	stmdb	r2, {r1, ip}
   174e0:	bl	155bc <UnityPrintNumberUnsigned@@Base>
   174e4:	ldr	r2, [sp, #4]
   174e8:	ldr	r0, [pc, #804]	; 17814 <UnityAssertEqualIntArray@@Base+0x8f4>
   174ec:	ldm	r2, {r1, ip}
   174f0:	adds	r1, r1, #1
   174f4:	adc	ip, ip, #0
   174f8:	stm	r2, {r1, ip}
   174fc:	ldr	r0, [r6, r0]
   17500:	bl	15ccc <UnityPrint@@Base>
   17504:	ldr	r3, [sp, #8]
   17508:	ldr	r0, [r4]
   1750c:	ldr	r1, [sp, #60]	; 0x3c
   17510:	str	r3, [sp, #4]
   17514:	ldmdb	r3, {r2, ip}
   17518:	adds	r2, r2, #1
   1751c:	adc	ip, ip, #0
   17520:	stmdb	r3, {r2, ip}
   17524:	bl	158dc <UnityPrintNumberByStyle@@Base>
   17528:	ldr	r3, [sp, #4]
   1752c:	ldr	r1, [pc, #740]	; 17818 <UnityAssertEqualIntArray@@Base+0x8f8>
   17530:	ldr	r2, [r3]
   17534:	ldr	r0, [r3, #4]
   17538:	adds	r2, r2, #1
   1753c:	adc	r0, r0, #0
   17540:	str	r2, [r3]
   17544:	str	r0, [r3, #4]
   17548:	ldr	r0, [r6, r1]
   1754c:	bl	15ccc <UnityPrint@@Base>
   17550:	ldr	r3, [fp, #-8]
   17554:	ldr	r2, [fp, #-4]
   17558:	ldr	r0, [r9]
   1755c:	adds	r3, r3, #1
   17560:	ldr	r1, [sp, #60]	; 0x3c
   17564:	adc	r2, r2, #0
   17568:	str	r3, [fp, #-8]
   1756c:	str	r2, [fp, #-4]
   17570:	bl	158dc <UnityPrintNumberByStyle@@Base>
   17574:	ldr	r3, [fp]
   17578:	mov	r0, r8
   1757c:	ldr	r2, [fp, #4]
   17580:	adds	r3, r3, #1
   17584:	adc	r2, r2, #0
   17588:	str	r3, [fp]
   1758c:	str	r2, [fp, #4]
   17590:	bl	16180 <UnityPrint@@Base+0x4b4>
   17594:	ldr	r3, [sl, #-8]
   17598:	mov	r2, #1
   1759c:	add	r0, r7, #40	; 0x28
   175a0:	mov	r1, r2
   175a4:	str	r2, [r7, #32]
   175a8:	adds	r3, r3, r2
   175ac:	ldr	r2, [sl, #-4]
   175b0:	str	r3, [sl, #-8]
   175b4:	adc	r2, r2, #0
   175b8:	str	r2, [sl, #-4]
   175bc:	bl	11fbc <longjmp@plt>
   175c0:	ldr	r3, [pc, #604]	; 17824 <UnityAssertEqualIntArray@@Base+0x904>
   175c4:	mov	r9, r0
   175c8:	mov	r4, r2
   175cc:	add	r3, pc, r3
   175d0:	str	sl, [r3, #1144]	; 0x478
   175d4:	str	lr, [r3, #1148]	; 0x47c
   175d8:	ldr	sl, [pc, #584]	; 17828 <UnityAssertEqualIntArray@@Base+0x908>
   175dc:	ldr	r0, [sp, #56]	; 0x38
   175e0:	add	sl, pc, sl
   175e4:	add	sl, sl, #1072	; 0x430
   175e8:	ldr	r3, [sl, #64]	; 0x40
   175ec:	ldr	r2, [sl, #68]	; 0x44
   175f0:	adds	r3, r3, #1
   175f4:	adc	r2, r2, #0
   175f8:	str	r3, [sl, #64]	; 0x40
   175fc:	str	r2, [sl, #68]	; 0x44
   17600:	bl	164b4 <UnityPrint@@Base+0x7e8>
   17604:	ldr	r3, [sl, #80]	; 0x50
   17608:	ldr	r1, [sl, #84]	; 0x54
   1760c:	ldr	r2, [pc, #508]	; 17810 <UnityAssertEqualIntArray@@Base+0x8f0>
   17610:	adds	r3, r3, #1
   17614:	adc	r1, r1, #0
   17618:	str	r3, [sl, #80]	; 0x50
   1761c:	str	r1, [sl, #84]	; 0x54
   17620:	ldr	r0, [r6, r2]
   17624:	bl	15ccc <UnityPrint@@Base>
   17628:	ldr	r2, [sp, #4]
   1762c:	ldr	r3, [sl, #88]	; 0x58
   17630:	sub	r0, r2, r5
   17634:	ldr	r2, [sl, #92]	; 0x5c
   17638:	adds	r3, r3, #1
   1763c:	str	r3, [sl, #88]	; 0x58
   17640:	adc	r2, r2, #0
   17644:	str	r2, [sl, #92]	; 0x5c
   17648:	bl	155bc <UnityPrintNumberUnsigned@@Base>
   1764c:	ldr	r3, [sl, #96]	; 0x60
   17650:	ldr	r1, [sl, #100]	; 0x64
   17654:	ldr	r2, [pc, #440]	; 17814 <UnityAssertEqualIntArray@@Base+0x8f4>
   17658:	adds	r3, r3, #1
   1765c:	adc	r1, r1, #0
   17660:	str	r3, [sl, #96]	; 0x60
   17664:	str	r1, [sl, #100]	; 0x64
   17668:	ldr	r0, [r6, r2]
   1766c:	bl	15ccc <UnityPrint@@Base>
   17670:	ldr	r3, [sl, #104]	; 0x68
   17674:	ldr	r2, [sl, #108]	; 0x6c
   17678:	ldrsb	r0, [r4]
   1767c:	adds	r3, r3, #1
   17680:	ldr	r1, [sp, #60]	; 0x3c
   17684:	adc	r2, r2, #0
   17688:	str	r3, [sl, #104]	; 0x68
   1768c:	str	r2, [sl, #108]	; 0x6c
   17690:	bl	158dc <UnityPrintNumberByStyle@@Base>
   17694:	ldr	r3, [sl, #112]	; 0x70
   17698:	ldr	r1, [sl, #116]	; 0x74
   1769c:	ldr	r2, [pc, #372]	; 17818 <UnityAssertEqualIntArray@@Base+0x8f8>
   176a0:	adds	r3, r3, #1
   176a4:	adc	r1, r1, #0
   176a8:	str	r3, [sl, #112]	; 0x70
   176ac:	str	r1, [sl, #116]	; 0x74
   176b0:	ldr	r0, [r6, r2]
   176b4:	bl	15ccc <UnityPrint@@Base>
   176b8:	ldr	r3, [sl, #120]	; 0x78
   176bc:	ldr	r2, [sl, #124]	; 0x7c
   176c0:	ldrsb	r0, [r9]
   176c4:	adds	r3, r3, #1
   176c8:	ldr	r1, [sp, #60]	; 0x3c
   176cc:	adc	r2, r2, #0
   176d0:	str	r3, [sl, #120]	; 0x78
   176d4:	str	r2, [sl, #124]	; 0x7c
   176d8:	bl	158dc <UnityPrintNumberByStyle@@Base>
   176dc:	ldr	r3, [sl, #128]	; 0x80
   176e0:	mov	r0, r8
   176e4:	ldr	r2, [sl, #132]	; 0x84
   176e8:	adds	r3, r3, #1
   176ec:	adc	r2, r2, #0
   176f0:	str	r3, [sl, #128]	; 0x80
   176f4:	str	r2, [sl, #132]	; 0x84
   176f8:	bl	16180 <UnityPrint@@Base+0x4b4>
   176fc:	ldr	r3, [sl, #136]	; 0x88
   17700:	mov	ip, #1
   17704:	add	r0, r7, #40	; 0x28
   17708:	mov	r1, ip
   1770c:	ldr	r2, [sl, #140]	; 0x8c
   17710:	str	ip, [r7, #32]
   17714:	adds	r3, r3, ip
   17718:	adc	r2, r2, #0
   1771c:	str	r3, [sl, #136]	; 0x88
   17720:	str	r2, [sl, #140]	; 0x8c
   17724:	bl	11fbc <longjmp@plt>
   17728:	ldr	r4, [pc, #252]	; 1782c <UnityAssertEqualIntArray@@Base+0x90c>
   1772c:	ldr	r0, [sp, #56]	; 0x38
   17730:	add	r4, pc, r4
   17734:	add	r4, r4, #1072	; 0x430
   17738:	ldr	r3, [r4, #16]
   1773c:	ldr	r2, [r4, #20]
   17740:	adds	r3, r3, #1
   17744:	adc	r2, r2, #0
   17748:	str	r3, [r4, #16]
   1774c:	str	r2, [r4, #20]
   17750:	bl	164b4 <UnityPrint@@Base+0x7e8>
   17754:	ldr	r3, [r4, #32]
   17758:	ldr	r1, [r4, #36]	; 0x24
   1775c:	ldr	r2, [pc, #204]	; 17830 <UnityAssertEqualIntArray@@Base+0x910>
   17760:	adds	r3, r3, #1
   17764:	adc	r1, r1, #0
   17768:	str	r3, [r4, #32]
   1776c:	str	r1, [r4, #36]	; 0x24
   17770:	ldr	r0, [r6, r2]
   17774:	bl	15ccc <UnityPrint@@Base>
   17778:	ldr	r3, [r4, #40]	; 0x28
   1777c:	mov	r0, r8
   17780:	ldr	r2, [r4, #44]	; 0x2c
   17784:	adds	r3, r3, #1
   17788:	adc	r2, r2, #0
   1778c:	str	r3, [r4, #40]	; 0x28
   17790:	str	r2, [r4, #44]	; 0x2c
   17794:	bl	16180 <UnityPrint@@Base+0x4b4>
   17798:	ldr	r3, [r4, #48]	; 0x30
   1779c:	mov	ip, #1
   177a0:	add	r0, r7, #40	; 0x28
   177a4:	mov	r1, ip
   177a8:	ldr	r2, [r4, #52]	; 0x34
   177ac:	str	ip, [r7, #32]
   177b0:	adds	r3, r3, ip
   177b4:	adc	r2, r2, #0
   177b8:	str	r3, [r4, #48]	; 0x30
   177bc:	str	r2, [r4, #52]	; 0x34
   177c0:	bl	11fbc <longjmp@plt>
   177c4:	ldr	r5, [sp, #4]
   177c8:	b	172f4 <UnityAssertEqualIntArray@@Base+0x3d4>
   177cc:	ldr	r5, [sp, #4]
   177d0:	b	1745c <UnityAssertEqualIntArray@@Base+0x53c>
   177d4:	ldr	r5, [sp, #4]
   177d8:	b	175d8 <UnityAssertEqualIntArray@@Base+0x6b8>
   177dc:	strheq	r8, [r1], -r4
   177e0:	andeq	r0, r0, r8, lsl r1
   177e4:	andeq	r9, r1, r0, asr #12
   177e8:	andeq	r9, r1, r8, lsr #10
   177ec:	andeq	r9, r1, ip, ror #9
   177f0:			; <UNDEFINED> instruction: 0x000194b0
   177f4:	andeq	r9, r1, ip, asr r4
   177f8:	andeq	r9, r1, r4, lsl r4
   177fc:	andeq	r9, r1, r4, asr #7
   17800:	andeq	r9, r1, r0, lsl #7
   17804:	andeq	r9, r1, ip, lsr #6
   17808:	ldrdeq	r9, [r1], -r8
   1780c:	andeq	r9, r1, r4, asr #5
   17810:	andeq	r0, r0, r4, lsl #2
   17814:	ldrdeq	r0, [r0], -r8
   17818:	andeq	r0, r0, r8, asr #2
   1781c:	andeq	r9, r1, r0, ror r1
   17820:	andeq	r9, r1, ip, asr r1
   17824:	strdeq	r8, [r1], -r4
   17828:	andeq	r8, r1, r0, ror #31
   1782c:	muleq	r1, r0, lr
   17830:	andeq	r0, r0, r4, ror #2

00017834 <UnityAssertEqualFloatArray@@Base>:
   17834:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17838:	strd	r6, [sp, #8]
   1783c:	ldr	r6, [pc, #1092]	; 17c88 <UnityAssertEqualFloatArray@@Base+0x454>
   17840:	strd	r8, [sp, #16]
   17844:	ldr	ip, [pc, #1088]	; 17c8c <UnityAssertEqualFloatArray@@Base+0x458>
   17848:	strd	sl, [sp, #24]
   1784c:	str	lr, [sp, #32]
   17850:	sub	sp, sp, #12
   17854:	add	r6, pc, r6
   17858:	ldr	r7, [r6, ip]
   1785c:	ldr	ip, [r7, #32]
   17860:	cmp	ip, #0
   17864:	bne	17a10 <UnityAssertEqualFloatArray@@Base+0x1dc>
   17868:	ldr	r9, [r7, #36]	; 0x24
   1786c:	cmp	r9, #0
   17870:	bne	179d4 <UnityAssertEqualFloatArray@@Base+0x1a0>
   17874:	ldr	r5, [pc, #1044]	; 17c90 <UnityAssertEqualFloatArray@@Base+0x45c>
   17878:	mov	sl, r2
   1787c:	str	r3, [sp]
   17880:	add	r5, pc, r5
   17884:	add	r5, r5, #1408	; 0x580
   17888:	ldr	r2, [r5, #8]
   1788c:	ldr	ip, [r5, #12]
   17890:	adds	r2, r2, #1
   17894:	adc	ip, ip, #0
   17898:	cmp	sl, #0
   1789c:	str	r2, [r5, #8]
   178a0:	str	ip, [r5, #12]
   178a4:	beq	17bf0 <UnityAssertEqualFloatArray@@Base+0x3bc>
   178a8:	ldr	r2, [sp, #48]	; 0x30
   178ac:	mov	r8, r0
   178b0:	mov	r4, r1
   178b4:	bl	16588 <UnityPrint@@Base+0x8bc>
   178b8:	ldr	r3, [r5, #48]	; 0x30
   178bc:	ldr	r2, [r5, #52]	; 0x34
   178c0:	adds	r3, r3, #1
   178c4:	adc	r2, r2, #0
   178c8:	cmp	r0, #1
   178cc:	str	r3, [r5, #48]	; 0x30
   178d0:	str	r2, [r5, #52]	; 0x34
   178d4:	beq	17a34 <UnityAssertEqualFloatArray@@Base+0x200>
   178d8:	sub	r3, sl, #1
   178dc:	add	r2, r5, #64	; 0x40
   178e0:	vldr	s12, [pc, #920]	; 17c80 <UnityAssertEqualFloatArray@@Base+0x44c>
   178e4:	mov	lr, r9
   178e8:	mov	r0, r8
   178ec:	ldm	r2, {r2, r8, ip}
   178f0:	mov	r1, r4
   178f4:	mov	fp, r9
   178f8:	mov	r4, r3
   178fc:	mov	sl, r9
   17900:	str	r3, [sp, #4]
   17904:	vldr	s11, [pc, #888]	; 17c84 <UnityAssertEqualFloatArray@@Base+0x450>
   17908:	ldr	r9, [r5, #76]	; 0x4c
   1790c:	ldr	r3, [r5, #96]	; 0x60
   17910:	ldr	r5, [r5, #100]	; 0x64
   17914:	vldmia	r0!, {s15}
   17918:	vldmia	r1!, {s14}
   1791c:	vsub.f32	s14, s15, s14
   17920:	vcmpe.f32	s14, #0.0
   17924:	vmrs	APSR_nzcv, fpscr
   17928:	bpl	1793c <UnityAssertEqualFloatArray@@Base+0x108>
   1792c:	vsub.f32	s14, s12, s14
   17930:	adds	r2, r2, #1
   17934:	mov	sl, #1
   17938:	adc	r8, r8, #0
   1793c:	vmul.f32	s15, s15, s11
   17940:	vcmpe.f32	s15, #0.0
   17944:	vmrs	APSR_nzcv, fpscr
   17948:	bpl	1795c <UnityAssertEqualFloatArray@@Base+0x128>
   1794c:	vsub.f32	s15, s12, s15
   17950:	adds	ip, ip, #1
   17954:	mov	fp, #1
   17958:	adc	r9, r9, #0
   1795c:	vmul.f32	s13, s14, s12
   17960:	vcmp.f32	s13, #0.0
   17964:	vmrs	APSR_nzcv, fpscr
   17968:	bne	17b84 <UnityAssertEqualFloatArray@@Base+0x350>
   1796c:	vcmpe.f32	s14, s15
   17970:	vmrs	APSR_nzcv, fpscr
   17974:	bgt	17a50 <UnityAssertEqualFloatArray@@Base+0x21c>
   17978:	adds	r3, r3, #1
   1797c:	sub	r4, r4, #1
   17980:	adc	r5, r5, #0
   17984:	cmn	r4, #1
   17988:	mov	lr, #1
   1798c:	bne	17914 <UnityAssertEqualFloatArray@@Base+0xe0>
   17990:	cmp	sl, #0
   17994:	beq	179a8 <UnityAssertEqualFloatArray@@Base+0x174>
   17998:	ldr	r1, [pc, #756]	; 17c94 <UnityAssertEqualFloatArray@@Base+0x460>
   1799c:	add	r1, pc, r1
   179a0:	str	r2, [r1, #1472]	; 0x5c0
   179a4:	str	r8, [r1, #1476]	; 0x5c4
   179a8:	cmp	fp, #0
   179ac:	beq	179c0 <UnityAssertEqualFloatArray@@Base+0x18c>
   179b0:	ldr	r2, [pc, #736]	; 17c98 <UnityAssertEqualFloatArray@@Base+0x464>
   179b4:	add	r2, pc, r2
   179b8:	str	ip, [r2, #1480]	; 0x5c8
   179bc:	str	r9, [r2, #1484]	; 0x5cc
   179c0:	ldr	r2, [pc, #724]	; 17c9c <UnityAssertEqualFloatArray@@Base+0x468>
   179c4:	add	r2, pc, r2
   179c8:	str	r3, [r2, #1504]	; 0x5e0
   179cc:	str	r5, [r2, #1508]	; 0x5e4
   179d0:	b	179f4 <UnityAssertEqualFloatArray@@Base+0x1c0>
   179d4:	ldr	r3, [pc, #708]	; 17ca0 <UnityAssertEqualFloatArray@@Base+0x46c>
   179d8:	add	r3, pc, r3
   179dc:	ldr	r2, [r3, #1408]	; 0x580
   179e0:	ldr	r1, [r3, #1412]	; 0x584
   179e4:	adds	r2, r2, #1
   179e8:	adc	r1, r1, #0
   179ec:	str	r2, [r3, #1408]	; 0x580
   179f0:	str	r1, [r3, #1412]	; 0x584
   179f4:	add	sp, sp, #12
   179f8:	ldrd	r4, [sp]
   179fc:	ldrd	r6, [sp, #8]
   17a00:	ldrd	r8, [sp, #16]
   17a04:	ldrd	sl, [sp, #24]
   17a08:	add	sp, sp, #32
   17a0c:	pop	{pc}		; (ldr pc, [sp], #4)
   17a10:	ldr	r3, [pc, #652]	; 17ca4 <UnityAssertEqualFloatArray@@Base+0x470>
   17a14:	add	r3, pc, r3
   17a18:	ldr	r2, [r3, #1400]	; 0x578
   17a1c:	ldr	r1, [r3, #1404]	; 0x57c
   17a20:	adds	r2, r2, #1
   17a24:	adc	r1, r1, #0
   17a28:	str	r2, [r3, #1400]	; 0x578
   17a2c:	str	r1, [r3, #1404]	; 0x57c
   17a30:	b	179f4 <UnityAssertEqualFloatArray@@Base+0x1c0>
   17a34:	ldr	r3, [r5, #56]	; 0x38
   17a38:	ldr	r2, [r5, #60]	; 0x3c
   17a3c:	adds	r3, r3, #1
   17a40:	adc	r2, r2, #0
   17a44:	str	r3, [r5, #56]	; 0x38
   17a48:	str	r2, [r5, #60]	; 0x3c
   17a4c:	b	179f4 <UnityAssertEqualFloatArray@@Base+0x1c0>
   17a50:	cmp	sl, #0
   17a54:	beq	17a68 <UnityAssertEqualFloatArray@@Base+0x234>
   17a58:	ldr	r1, [pc, #584]	; 17ca8 <UnityAssertEqualFloatArray@@Base+0x474>
   17a5c:	add	r1, pc, r1
   17a60:	str	r2, [r1, #1472]	; 0x5c0
   17a64:	str	r8, [r1, #1476]	; 0x5c4
   17a68:	cmp	fp, #0
   17a6c:	beq	17a80 <UnityAssertEqualFloatArray@@Base+0x24c>
   17a70:	ldr	r2, [pc, #564]	; 17cac <UnityAssertEqualFloatArray@@Base+0x478>
   17a74:	add	r2, pc, r2
   17a78:	str	ip, [r2, #1480]	; 0x5c8
   17a7c:	str	r9, [r2, #1484]	; 0x5cc
   17a80:	cmp	lr, #0
   17a84:	beq	17a98 <UnityAssertEqualFloatArray@@Base+0x264>
   17a88:	ldr	r2, [pc, #544]	; 17cb0 <UnityAssertEqualFloatArray@@Base+0x47c>
   17a8c:	add	r2, pc, r2
   17a90:	str	r3, [r2, #1504]	; 0x5e0
   17a94:	str	r5, [r2, #1508]	; 0x5e4
   17a98:	ldr	r3, [pc, #532]	; 17cb4 <UnityAssertEqualFloatArray@@Base+0x480>
   17a9c:	add	r3, pc, r3
   17aa0:	ldr	r2, [r3, #1496]	; 0x5d8
   17aa4:	ldr	r1, [r3, #1500]	; 0x5dc
   17aa8:	adds	r2, r2, #1
   17aac:	adc	r1, r1, #0
   17ab0:	str	r2, [r3, #1496]	; 0x5d8
   17ab4:	str	r1, [r3, #1500]	; 0x5dc
   17ab8:	ldr	r5, [pc, #504]	; 17cb8 <UnityAssertEqualFloatArray@@Base+0x484>
   17abc:	ldr	r0, [sp, #48]	; 0x30
   17ac0:	bl	164b4 <UnityPrint@@Base+0x7e8>
   17ac4:	ldr	r2, [pc, #496]	; 17cbc <UnityAssertEqualFloatArray@@Base+0x488>
   17ac8:	add	r5, pc, r5
   17acc:	add	r5, r5, #1408	; 0x580
   17ad0:	ldr	r3, [r5, #104]	; 0x68
   17ad4:	ldr	r1, [r5, #108]	; 0x6c
   17ad8:	adds	r3, r3, #1
   17adc:	adc	r1, r1, #0
   17ae0:	str	r3, [r5, #104]	; 0x68
   17ae4:	str	r1, [r5, #108]	; 0x6c
   17ae8:	ldr	r0, [r6, r2]
   17aec:	bl	15ccc <UnityPrint@@Base>
   17af0:	ldr	r2, [sp, #4]
   17af4:	ldr	r3, [r5, #112]	; 0x70
   17af8:	sub	r0, r2, r4
   17afc:	ldr	r2, [r5, #116]	; 0x74
   17b00:	adds	r3, r3, #1
   17b04:	str	r3, [r5, #112]	; 0x70
   17b08:	adc	r2, r2, #0
   17b0c:	str	r2, [r5, #116]	; 0x74
   17b10:	bl	155bc <UnityPrintNumberUnsigned@@Base>
   17b14:	ldr	r3, [r5, #120]	; 0x78
   17b18:	ldr	r1, [r5, #124]	; 0x7c
   17b1c:	ldr	r2, [pc, #412]	; 17cc0 <UnityAssertEqualFloatArray@@Base+0x48c>
   17b20:	adds	r3, r3, #1
   17b24:	adc	r1, r1, #0
   17b28:	str	r3, [r5, #120]	; 0x78
   17b2c:	str	r1, [r5, #124]	; 0x7c
   17b30:	ldr	r0, [r6, r2]
   17b34:	bl	15ccc <UnityPrint@@Base>
   17b38:	ldr	r3, [r5, #128]	; 0x80
   17b3c:	ldr	r2, [r5, #132]	; 0x84
   17b40:	ldr	r0, [sp]
   17b44:	adds	r3, r3, #1
   17b48:	adc	r2, r2, #0
   17b4c:	str	r3, [r5, #128]	; 0x80
   17b50:	str	r2, [r5, #132]	; 0x84
   17b54:	bl	16180 <UnityPrint@@Base+0x4b4>
   17b58:	ldr	r3, [r5, #136]	; 0x88
   17b5c:	mov	ip, #1
   17b60:	add	r0, r7, #40	; 0x28
   17b64:	mov	r1, ip
   17b68:	ldr	r2, [r5, #140]	; 0x8c
   17b6c:	str	ip, [r7, #32]
   17b70:	adds	r3, r3, ip
   17b74:	adc	r2, r2, #0
   17b78:	str	r3, [r5, #136]	; 0x88
   17b7c:	str	r2, [r5, #140]	; 0x8c
   17b80:	bl	11fbc <longjmp@plt>
   17b84:	cmp	sl, #0
   17b88:	beq	17b9c <UnityAssertEqualFloatArray@@Base+0x368>
   17b8c:	ldr	r1, [pc, #304]	; 17cc4 <UnityAssertEqualFloatArray@@Base+0x490>
   17b90:	add	r1, pc, r1
   17b94:	str	r2, [r1, #1472]	; 0x5c0
   17b98:	str	r8, [r1, #1476]	; 0x5c4
   17b9c:	cmp	fp, #0
   17ba0:	beq	17bb4 <UnityAssertEqualFloatArray@@Base+0x380>
   17ba4:	ldr	r2, [pc, #284]	; 17cc8 <UnityAssertEqualFloatArray@@Base+0x494>
   17ba8:	add	r2, pc, r2
   17bac:	str	ip, [r2, #1480]	; 0x5c8
   17bb0:	str	r9, [r2, #1484]	; 0x5cc
   17bb4:	cmp	lr, #0
   17bb8:	beq	17bcc <UnityAssertEqualFloatArray@@Base+0x398>
   17bbc:	ldr	r2, [pc, #264]	; 17ccc <UnityAssertEqualFloatArray@@Base+0x498>
   17bc0:	add	r2, pc, r2
   17bc4:	str	r3, [r2, #1504]	; 0x5e0
   17bc8:	str	r5, [r2, #1508]	; 0x5e4
   17bcc:	ldr	r3, [pc, #252]	; 17cd0 <UnityAssertEqualFloatArray@@Base+0x49c>
   17bd0:	add	r3, pc, r3
   17bd4:	ldr	r2, [r3, #1488]	; 0x5d0
   17bd8:	ldr	r1, [r3, #1492]	; 0x5d4
   17bdc:	adds	r2, r2, #1
   17be0:	adc	r1, r1, #0
   17be4:	str	r2, [r3, #1488]	; 0x5d0
   17be8:	str	r1, [r3, #1492]	; 0x5d4
   17bec:	b	17ab8 <UnityAssertEqualFloatArray@@Base+0x284>
   17bf0:	ldr	r3, [r5, #16]
   17bf4:	ldr	r2, [r5, #20]
   17bf8:	ldr	r0, [sp, #48]	; 0x30
   17bfc:	adds	r3, r3, #1
   17c00:	adc	r2, r2, #0
   17c04:	str	r3, [r5, #16]
   17c08:	str	r2, [r5, #20]
   17c0c:	bl	164b4 <UnityPrint@@Base+0x7e8>
   17c10:	ldr	r3, [r5, #24]
   17c14:	ldr	r1, [r5, #28]
   17c18:	ldr	r2, [pc, #180]	; 17cd4 <UnityAssertEqualFloatArray@@Base+0x4a0>
   17c1c:	adds	r3, r3, #1
   17c20:	adc	r1, r1, #0
   17c24:	str	r3, [r5, #24]
   17c28:	str	r1, [r5, #28]
   17c2c:	ldr	r0, [r6, r2]
   17c30:	bl	15ccc <UnityPrint@@Base>
   17c34:	ldr	r3, [r5, #32]
   17c38:	ldr	r2, [r5, #36]	; 0x24
   17c3c:	ldr	r0, [sp]
   17c40:	adds	r3, r3, #1
   17c44:	adc	r2, r2, #0
   17c48:	str	r3, [r5, #32]
   17c4c:	str	r2, [r5, #36]	; 0x24
   17c50:	bl	16180 <UnityPrint@@Base+0x4b4>
   17c54:	ldr	r3, [r5, #40]	; 0x28
   17c58:	mov	ip, #1
   17c5c:	add	r0, r7, #40	; 0x28
   17c60:	mov	r1, ip
   17c64:	ldr	r2, [r5, #44]	; 0x2c
   17c68:	str	ip, [r7, #32]
   17c6c:	adds	r3, r3, ip
   17c70:	adc	r2, r2, #0
   17c74:	str	r3, [r5, #40]	; 0x28
   17c78:	str	r2, [r5, #44]	; 0x2c
   17c7c:	bl	11fbc <longjmp@plt>
   17c80:	andeq	r0, r0, r0
   17c84:	strcc	ip, [r7, -ip, lsr #11]!
   17c88:	andeq	r7, r1, r4, lsr #15
   17c8c:	andeq	r0, r0, r8, lsl r1
   17c90:	andeq	r8, r1, r0, asr #26
   17c94:	andeq	r8, r1, r4, lsr #24
   17c98:	andeq	r8, r1, ip, lsl #24
   17c9c:	strdeq	r8, [r1], -ip
   17ca0:	andeq	r8, r1, r8, ror #23
   17ca4:	andeq	r8, r1, ip, lsr #23
   17ca8:	andeq	r8, r1, r4, ror #22
   17cac:	andeq	r8, r1, ip, asr #22
   17cb0:	andeq	r8, r1, r4, lsr fp
   17cb4:	andeq	r8, r1, r4, lsr #22
   17cb8:	strdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   17cbc:	andeq	r0, r0, r4, lsl #2
   17cc0:	strdeq	r0, [r0], -r4
   17cc4:	andeq	r8, r1, r0, lsr sl
   17cc8:	andeq	r8, r1, r8, lsl sl
   17ccc:	andeq	r8, r1, r0, lsl #20
   17cd0:	strdeq	r8, [r1], -r0
   17cd4:	andeq	r0, r0, r4, ror #2

00017cd8 <UnityAssertFloatsWithin@@Base>:
   17cd8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17cdc:	ldr	r4, [pc, #504]	; 17edc <UnityAssertFloatsWithin@@Base+0x204>
   17ce0:	strd	r6, [sp, #8]
   17ce4:	ldr	r3, [pc, #500]	; 17ee0 <UnityAssertFloatsWithin@@Base+0x208>
   17ce8:	str	r8, [sp, #16]
   17cec:	str	lr, [sp, #20]
   17cf0:	add	r4, pc, r4
   17cf4:	ldr	r5, [r4, r3]
   17cf8:	ldr	r3, [r5, #32]
   17cfc:	cmp	r3, #0
   17d00:	bne	17e90 <UnityAssertFloatsWithin@@Base+0x1b8>
   17d04:	ldr	r3, [r5, #36]	; 0x24
   17d08:	cmp	r3, #0
   17d0c:	bne	17e5c <UnityAssertFloatsWithin@@Base+0x184>
   17d10:	vsub.f32	s2, s2, s1
   17d14:	vldr	s15, [pc, #444]	; 17ed8 <UnityAssertFloatsWithin@@Base+0x200>
   17d18:	mov	r6, r0
   17d1c:	vcmpe.f32	s2, s15
   17d20:	vmrs	APSR_nzcv, fpscr
   17d24:	bpl	17d4c <UnityAssertFloatsWithin@@Base+0x74>
   17d28:	ldr	r3, [pc, #436]	; 17ee4 <UnityAssertFloatsWithin@@Base+0x20c>
   17d2c:	vsub.f32	s2, s15, s2
   17d30:	add	r3, pc, r3
   17d34:	ldr	r2, [r3, #1568]	; 0x620
   17d38:	ldr	r0, [r3, #1572]	; 0x624
   17d3c:	adds	r2, r2, #1
   17d40:	adc	r0, r0, #0
   17d44:	str	r2, [r3, #1568]	; 0x620
   17d48:	str	r0, [r3, #1572]	; 0x624
   17d4c:	vcmpe.f32	s0, #0.0
   17d50:	vldr	s15, [pc, #384]	; 17ed8 <UnityAssertFloatsWithin@@Base+0x200>
   17d54:	vmrs	APSR_nzcv, fpscr
   17d58:	bpl	17d80 <UnityAssertFloatsWithin@@Base+0xa8>
   17d5c:	ldr	r3, [pc, #388]	; 17ee8 <UnityAssertFloatsWithin@@Base+0x210>
   17d60:	vsub.f32	s0, s15, s0
   17d64:	add	r3, pc, r3
   17d68:	ldr	r2, [r3, #1576]	; 0x628
   17d6c:	ldr	r0, [r3, #1580]	; 0x62c
   17d70:	adds	r2, r2, #1
   17d74:	adc	r0, r0, #0
   17d78:	str	r2, [r3, #1576]	; 0x628
   17d7c:	str	r0, [r3, #1580]	; 0x62c
   17d80:	vldr	s15, [pc, #336]	; 17ed8 <UnityAssertFloatsWithin@@Base+0x200>
   17d84:	vmul.f32	s15, s2, s15
   17d88:	vcmp.f32	s15, #0.0
   17d8c:	vmrs	APSR_nzcv, fpscr
   17d90:	bne	17eb4 <UnityAssertFloatsWithin@@Base+0x1dc>
   17d94:	ldr	r3, [pc, #336]	; 17eec <UnityAssertFloatsWithin@@Base+0x214>
   17d98:	vcmpe.f32	s2, s0
   17d9c:	add	r3, pc, r3
   17da0:	ldr	r2, [r3, #1592]	; 0x638
   17da4:	add	r3, r3, #1552	; 0x610
   17da8:	ldr	ip, [r3, #44]	; 0x2c
   17dac:	adds	r2, r2, #1
   17db0:	adc	ip, ip, #0
   17db4:	vmrs	APSR_nzcv, fpscr
   17db8:	str	r2, [r3, #40]	; 0x28
   17dbc:	str	ip, [r3, #44]	; 0x2c
   17dc0:	ble	17e7c <UnityAssertFloatsWithin@@Base+0x1a4>
   17dc4:	ldr	r2, [r3, #48]	; 0x30
   17dc8:	ldr	r0, [r3, #52]	; 0x34
   17dcc:	adds	r2, r2, #1
   17dd0:	adc	r0, r0, #0
   17dd4:	str	r2, [r3, #48]	; 0x30
   17dd8:	str	r0, [r3, #52]	; 0x34
   17ddc:	ldr	r7, [pc, #268]	; 17ef0 <UnityAssertFloatsWithin@@Base+0x218>
   17de0:	mov	r0, r1
   17de4:	bl	164b4 <UnityPrint@@Base+0x7e8>
   17de8:	ldr	r2, [pc, #260]	; 17ef4 <UnityAssertFloatsWithin@@Base+0x21c>
   17dec:	add	r7, pc, r7
   17df0:	ldr	r3, [r7, #1608]	; 0x648
   17df4:	ldr	r1, [r7, #1612]	; 0x64c
   17df8:	adds	r3, r3, #1
   17dfc:	adc	r1, r1, #0
   17e00:	str	r3, [r7, #1608]	; 0x648
   17e04:	str	r1, [r7, #1612]	; 0x64c
   17e08:	ldr	r0, [r4, r2]
   17e0c:	bl	15ccc <UnityPrint@@Base>
   17e10:	ldr	r3, [r7, #1616]	; 0x650
   17e14:	mov	r0, r6
   17e18:	ldr	r2, [r7, #1620]	; 0x654
   17e1c:	adds	r3, r3, #1
   17e20:	adc	r2, r2, #0
   17e24:	str	r3, [r7, #1616]	; 0x650
   17e28:	str	r2, [r7, #1620]	; 0x654
   17e2c:	bl	16180 <UnityPrint@@Base+0x4b4>
   17e30:	ldr	r3, [r7, #1624]	; 0x658
   17e34:	mov	ip, #1
   17e38:	add	r0, r5, #40	; 0x28
   17e3c:	mov	r1, ip
   17e40:	ldr	r2, [r7, #1628]	; 0x65c
   17e44:	str	ip, [r5, #32]
   17e48:	adds	r3, r3, ip
   17e4c:	adc	r2, r2, #0
   17e50:	str	r3, [r7, #1624]	; 0x658
   17e54:	str	r2, [r7, #1628]	; 0x65c
   17e58:	bl	11fbc <longjmp@plt>
   17e5c:	ldr	r3, [pc, #148]	; 17ef8 <UnityAssertFloatsWithin@@Base+0x220>
   17e60:	add	r3, pc, r3
   17e64:	ldr	r2, [r3, #1560]	; 0x618
   17e68:	ldr	r1, [r3, #1564]	; 0x61c
   17e6c:	adds	r2, r2, #1
   17e70:	adc	r1, r1, #0
   17e74:	str	r2, [r3, #1560]	; 0x618
   17e78:	str	r1, [r3, #1564]	; 0x61c
   17e7c:	ldrd	r4, [sp]
   17e80:	ldrd	r6, [sp, #8]
   17e84:	ldr	r8, [sp, #16]
   17e88:	add	sp, sp, #20
   17e8c:	pop	{pc}		; (ldr pc, [sp], #4)
   17e90:	ldr	r3, [pc, #100]	; 17efc <UnityAssertFloatsWithin@@Base+0x224>
   17e94:	add	r3, pc, r3
   17e98:	ldr	r2, [r3, #1552]	; 0x610
   17e9c:	ldr	r1, [r3, #1556]	; 0x614
   17ea0:	adds	r2, r2, #1
   17ea4:	adc	r1, r1, #0
   17ea8:	str	r2, [r3, #1552]	; 0x610
   17eac:	str	r1, [r3, #1556]	; 0x614
   17eb0:	b	17e7c <UnityAssertFloatsWithin@@Base+0x1a4>
   17eb4:	ldr	r3, [pc, #68]	; 17f00 <UnityAssertFloatsWithin@@Base+0x228>
   17eb8:	add	r3, pc, r3
   17ebc:	ldr	r2, [r3, #1584]	; 0x630
   17ec0:	ldr	r0, [r3, #1588]	; 0x634
   17ec4:	adds	r2, r2, #1
   17ec8:	adc	r0, r0, #0
   17ecc:	str	r2, [r3, #1584]	; 0x630
   17ed0:	str	r0, [r3, #1588]	; 0x634
   17ed4:	b	17ddc <UnityAssertFloatsWithin@@Base+0x104>
   17ed8:	andeq	r0, r0, r0
   17edc:	andeq	r7, r1, r8, lsl #6
   17ee0:	andeq	r0, r0, r8, lsl r1
   17ee4:	muleq	r1, r0, r8
   17ee8:	andeq	r8, r1, ip, asr r8
   17eec:	andeq	r8, r1, r4, lsr #16
   17ef0:	ldrdeq	r8, [r1], -r4
   17ef4:	strdeq	r0, [r0], -r4
   17ef8:	andeq	r8, r1, r0, ror #14
   17efc:	andeq	r8, r1, ip, lsr #14
   17f00:	andeq	r8, r1, r8, lsl #14

00017f04 <UnityAssertFloatSpecial@@Base>:
   17f04:	ldr	r3, [pc, #1216]	; 183cc <UnityAssertFloatSpecial@@Base+0x4c8>
   17f08:	strd	r4, [sp, #-28]!	; 0xffffffe4
   17f0c:	ldr	ip, [pc, #1212]	; 183d0 <UnityAssertFloatSpecial@@Base+0x4cc>
   17f10:	strd	r8, [sp, #16]
   17f14:	ldr	r8, [pc, #1208]	; 183d4 <UnityAssertFloatSpecial@@Base+0x4d0>
   17f18:	add	r3, pc, r3
   17f1c:	strd	r6, [sp, #8]
   17f20:	ldrd	r4, [r3]
   17f24:	str	lr, [sp, #24]
   17f28:	sub	sp, sp, #28
   17f2c:	ldrd	r6, [r3, #8]
   17f30:	add	r8, pc, r8
   17f34:	strd	r4, [sp, #8]
   17f38:	strd	r6, [sp, #16]
   17f3c:	ldr	r4, [r8, ip]
   17f40:	ldr	r3, [r4, #32]
   17f44:	cmp	r3, #0
   17f48:	bne	17fa8 <UnityAssertFloatSpecial@@Base+0xa4>
   17f4c:	ldr	r3, [r4, #36]	; 0x24
   17f50:	cmp	r3, #0
   17f54:	bne	17f88 <UnityAssertFloatSpecial@@Base+0x84>
   17f58:	lsr	r9, r2, #1
   17f5c:	cmp	r2, #7
   17f60:	addls	pc, pc, r2, lsl #2
   17f64:	b	1840c <UnityAssertFloatSpecial@@Base+0x508>
   17f68:	b	18274 <UnityAssertFloatSpecial@@Base+0x370>
   17f6c:	b	18274 <UnityAssertFloatSpecial@@Base+0x370>
   17f70:	b	181ec <UnityAssertFloatSpecial@@Base+0x2e8>
   17f74:	b	181ec <UnityAssertFloatSpecial@@Base+0x2e8>
   17f78:	b	18044 <UnityAssertFloatSpecial@@Base+0x140>
   17f7c:	b	18044 <UnityAssertFloatSpecial@@Base+0x140>
   17f80:	b	17fe0 <UnityAssertFloatSpecial@@Base+0xdc>
   17f84:	b	17fe0 <UnityAssertFloatSpecial@@Base+0xdc>
   17f88:	ldr	r3, [pc, #1096]	; 183d8 <UnityAssertFloatSpecial@@Base+0x4d4>
   17f8c:	add	r3, pc, r3
   17f90:	ldr	r2, [r3, #1632]	; 0x660
   17f94:	ldr	r1, [r3, #1636]	; 0x664
   17f98:	adds	r2, r2, #1
   17f9c:	adc	r1, r1, #0
   17fa0:	str	r2, [r3, #1632]	; 0x660
   17fa4:	str	r1, [r3, #1636]	; 0x664
   17fa8:	ldr	r3, [pc, #1068]	; 183dc <UnityAssertFloatSpecial@@Base+0x4d8>
   17fac:	add	r3, pc, r3
   17fb0:	ldr	r2, [r3, #1640]	; 0x668
   17fb4:	ldr	r1, [r3, #1644]	; 0x66c
   17fb8:	adds	r2, r2, #1
   17fbc:	adc	r1, r1, #0
   17fc0:	str	r2, [r3, #1640]	; 0x668
   17fc4:	str	r1, [r3, #1644]	; 0x66c
   17fc8:	add	sp, sp, #28
   17fcc:	ldrd	r4, [sp]
   17fd0:	ldrd	r6, [sp, #8]
   17fd4:	ldrd	r8, [sp, #16]
   17fd8:	add	sp, sp, #24
   17fdc:	pop	{pc}		; (ldr pc, [sp], #4)
   17fe0:	vldr	s14, [pc, #992]	; 183c8 <UnityAssertFloatSpecial@@Base+0x4c4>
   17fe4:	vabs.f32	s15, s0
   17fe8:	ldr	ip, [pc, #1008]	; 183e0 <UnityAssertFloatSpecial@@Base+0x4dc>
   17fec:	vcmp.f32	s15, s14
   17ff0:	add	ip, pc, ip
   17ff4:	add	ip, ip, #1632	; 0x660
   17ff8:	ldr	r3, [ip, #48]	; 0x30
   17ffc:	ldr	lr, [ip, #52]	; 0x34
   18000:	adds	r3, r3, #1
   18004:	adc	lr, lr, #0
   18008:	vmrs	APSR_nzcv, fpscr
   1800c:	str	r3, [ip, #48]	; 0x30
   18010:	str	lr, [ip, #52]	; 0x34
   18014:	bgt	18304 <UnityAssertFloatSpecial@@Base+0x400>
   18018:	vcmp.f32	s0, s0
   1801c:	vmrs	APSR_nzcv, fpscr
   18020:	bvs	182fc <UnityAssertFloatSpecial@@Base+0x3f8>
   18024:	ldr	lr, [ip, #104]	; 0x68
   18028:	mov	r3, #1
   1802c:	ldr	r5, [ip, #108]	; 0x6c
   18030:	adds	lr, lr, r3
   18034:	adc	r5, r5, #0
   18038:	str	lr, [ip, #104]	; 0x68
   1803c:	str	r5, [ip, #108]	; 0x6c
   18040:	b	18078 <UnityAssertFloatSpecial@@Base+0x174>
   18044:	ldr	r3, [pc, #920]	; 183e4 <UnityAssertFloatSpecial@@Base+0x4e0>
   18048:	vcmp.f32	s0, s0
   1804c:	add	r3, pc, r3
   18050:	ldr	ip, [r3, #1672]	; 0x688
   18054:	add	r3, r3, #1632	; 0x660
   18058:	ldr	lr, [r3, #44]	; 0x2c
   1805c:	adds	ip, ip, #1
   18060:	adc	lr, lr, #0
   18064:	vmrs	APSR_nzcv, fpscr
   18068:	str	ip, [r3, #40]	; 0x28
   1806c:	str	lr, [r3, #44]	; 0x2c
   18070:	movvs	r3, #1
   18074:	movvc	r3, #0
   18078:	and	r2, r2, #1
   1807c:	cmp	r3, r2
   18080:	beq	17fc8 <UnityAssertFloatSpecial@@Base+0xc4>
   18084:	ldr	r3, [pc, #860]	; 183e8 <UnityAssertFloatSpecial@@Base+0x4e4>
   18088:	mov	r6, r0
   1808c:	mov	r0, r1
   18090:	str	r2, [sp, #4]
   18094:	add	r3, pc, r3
   18098:	add	r5, r3, #1632	; 0x660
   1809c:	ldr	r3, [r5, #112]	; 0x70
   180a0:	ldr	r1, [r5, #116]	; 0x74
   180a4:	adds	r3, r3, #1
   180a8:	adc	r1, r1, #0
   180ac:	str	r3, [r5, #112]	; 0x70
   180b0:	str	r1, [r5, #116]	; 0x74
   180b4:	bl	164b4 <UnityPrint@@Base+0x7e8>
   180b8:	ldr	r3, [r5, #120]	; 0x78
   180bc:	ldr	r0, [r5, #124]	; 0x7c
   180c0:	ldr	r1, [pc, #804]	; 183ec <UnityAssertFloatSpecial@@Base+0x4e8>
   180c4:	adds	r3, r3, #1
   180c8:	adc	r0, r0, #0
   180cc:	str	r3, [r5, #120]	; 0x78
   180d0:	str	r0, [r5, #124]	; 0x7c
   180d4:	ldr	r0, [r8, r1]
   180d8:	bl	15ccc <UnityPrint@@Base>
   180dc:	ldr	r3, [r5, #128]	; 0x80
   180e0:	add	r2, sp, #24
   180e4:	add	r9, r2, r9, lsl #2
   180e8:	ldr	r1, [r5, #132]	; 0x84
   180ec:	ldr	r2, [sp, #4]
   180f0:	adds	r3, r3, #1
   180f4:	ldr	r7, [r9, #-16]
   180f8:	adc	r1, r1, #0
   180fc:	str	r3, [r5, #128]	; 0x80
   18100:	cmp	r2, #0
   18104:	str	r1, [r5, #132]	; 0x84
   18108:	beq	18344 <UnityAssertFloatSpecial@@Base+0x440>
   1810c:	mov	r0, r7
   18110:	bl	15ccc <UnityPrint@@Base>
   18114:	ldr	r3, [r5, #152]	; 0x98
   18118:	ldr	r1, [r5, #156]	; 0x9c
   1811c:	ldr	r2, [pc, #716]	; 183f0 <UnityAssertFloatSpecial@@Base+0x4ec>
   18120:	adds	r3, r3, #1
   18124:	adc	r1, r1, #0
   18128:	str	r3, [r5, #152]	; 0x98
   1812c:	str	r1, [r5, #156]	; 0x9c
   18130:	ldr	r0, [r8, r2]
   18134:	bl	15ccc <UnityPrint@@Base>
   18138:	ldr	r2, [r5, #160]	; 0xa0
   1813c:	ldr	r0, [r5, #164]	; 0xa4
   18140:	ldr	r3, [r5, #168]	; 0xa8
   18144:	adds	r2, r2, #1
   18148:	ldr	r1, [r5, #172]	; 0xac
   1814c:	str	r2, [r5, #160]	; 0xa0
   18150:	adc	r0, r0, #0
   18154:	ldr	r2, [pc, #664]	; 183f4 <UnityAssertFloatSpecial@@Base+0x4f0>
   18158:	adds	r3, r3, #1
   1815c:	str	r0, [r5, #164]	; 0xa4
   18160:	adc	r1, r1, #0
   18164:	str	r3, [r5, #168]	; 0xa8
   18168:	str	r1, [r5, #172]	; 0xac
   1816c:	ldr	r0, [r8, r2]
   18170:	bl	15ccc <UnityPrint@@Base>
   18174:	ldr	r3, [r5, #176]	; 0xb0
   18178:	ldr	r2, [r5, #180]	; 0xb4
   1817c:	adds	r3, r3, #1
   18180:	adc	r2, r2, #0
   18184:	str	r3, [r5, #176]	; 0xb0
   18188:	str	r2, [r5, #180]	; 0xb4
   1818c:	ldr	r5, [pc, #612]	; 183f8 <UnityAssertFloatSpecial@@Base+0x4f4>
   18190:	mov	r0, r7
   18194:	bl	15ccc <UnityPrint@@Base>
   18198:	mov	r0, r6
   1819c:	add	r5, pc, r5
   181a0:	add	r5, r5, #1632	; 0x660
   181a4:	ldr	r3, [r5, #184]	; 0xb8
   181a8:	ldr	r2, [r5, #188]	; 0xbc
   181ac:	adds	r3, r3, #1
   181b0:	adc	r2, r2, #0
   181b4:	str	r3, [r5, #184]	; 0xb8
   181b8:	str	r2, [r5, #188]	; 0xbc
   181bc:	bl	16180 <UnityPrint@@Base+0x4b4>
   181c0:	ldr	r3, [r5, #192]	; 0xc0
   181c4:	mov	ip, #1
   181c8:	add	r0, r4, #40	; 0x28
   181cc:	mov	r1, ip
   181d0:	ldr	r2, [r5, #196]	; 0xc4
   181d4:	str	ip, [r4, #32]
   181d8:	adds	r3, r3, ip
   181dc:	adc	r2, r2, #0
   181e0:	str	r3, [r5, #192]	; 0xc0
   181e4:	str	r2, [r5, #196]	; 0xc4
   181e8:	bl	11fbc <longjmp@plt>
   181ec:	ldr	lr, [pc, #520]	; 183fc <UnityAssertFloatSpecial@@Base+0x4f8>
   181f0:	vcmpe.f32	s0, #0.0
   181f4:	vabs.f32	s15, s0
   181f8:	vldr	s14, [pc, #456]	; 183c8 <UnityAssertFloatSpecial@@Base+0x4c4>
   181fc:	add	lr, pc, lr
   18200:	ldr	r3, [lr, #1664]	; 0x680
   18204:	add	lr, lr, #1632	; 0x660
   18208:	ldr	ip, [lr, #36]	; 0x24
   1820c:	adds	r3, r3, #1
   18210:	adc	ip, ip, #0
   18214:	vmrs	APSR_nzcv, fpscr
   18218:	vcmp.f32	s15, s14
   1821c:	str	r3, [lr, #32]
   18220:	str	ip, [lr, #36]	; 0x24
   18224:	movmi	r3, #1
   18228:	movpl	r3, #0
   1822c:	vmrs	APSR_nzcv, fpscr
   18230:	ble	182fc <UnityAssertFloatSpecial@@Base+0x3f8>
   18234:	vmov	ip, s0
   18238:	ldr	r5, [lr, #72]	; 0x48
   1823c:	ldr	r6, [lr, #76]	; 0x4c
   18240:	adds	r5, r5, #1
   18244:	adc	r6, r6, #0
   18248:	cmp	ip, #0
   1824c:	str	r5, [lr, #72]	; 0x48
   18250:	str	r6, [lr, #76]	; 0x4c
   18254:	blt	18078 <UnityAssertFloatSpecial@@Base+0x174>
   18258:	ldr	ip, [lr, #80]	; 0x50
   1825c:	ldr	r5, [lr, #84]	; 0x54
   18260:	adds	ip, ip, #1
   18264:	adc	r5, r5, #0
   18268:	str	ip, [lr, #80]	; 0x50
   1826c:	str	r5, [lr, #84]	; 0x54
   18270:	b	18078 <UnityAssertFloatSpecial@@Base+0x174>
   18274:	ldr	lr, [pc, #388]	; 18400 <UnityAssertFloatSpecial@@Base+0x4fc>
   18278:	vcmpe.f32	s0, #0.0
   1827c:	vabs.f32	s15, s0
   18280:	vldr	s14, [pc, #320]	; 183c8 <UnityAssertFloatSpecial@@Base+0x4c4>
   18284:	add	lr, pc, lr
   18288:	ldr	r3, [lr, #1656]	; 0x678
   1828c:	add	lr, lr, #1632	; 0x660
   18290:	ldr	ip, [lr, #28]
   18294:	adds	r3, r3, #1
   18298:	adc	ip, ip, #0
   1829c:	vmrs	APSR_nzcv, fpscr
   182a0:	vcmp.f32	s15, s14
   182a4:	str	r3, [lr, #24]
   182a8:	str	ip, [lr, #28]
   182ac:	movgt	r3, #1
   182b0:	movle	r3, #0
   182b4:	vmrs	APSR_nzcv, fpscr
   182b8:	ble	182fc <UnityAssertFloatSpecial@@Base+0x3f8>
   182bc:	vmov	ip, s0
   182c0:	ldr	r5, [lr, #56]	; 0x38
   182c4:	ldr	r6, [lr, #60]	; 0x3c
   182c8:	adds	r5, r5, #1
   182cc:	adc	r6, r6, #0
   182d0:	cmp	ip, #0
   182d4:	str	r5, [lr, #56]	; 0x38
   182d8:	str	r6, [lr, #60]	; 0x3c
   182dc:	blt	18078 <UnityAssertFloatSpecial@@Base+0x174>
   182e0:	ldr	ip, [lr, #64]	; 0x40
   182e4:	ldr	r5, [lr, #68]	; 0x44
   182e8:	adds	ip, ip, #1
   182ec:	adc	r5, r5, #0
   182f0:	str	ip, [lr, #64]	; 0x40
   182f4:	str	r5, [lr, #68]	; 0x44
   182f8:	b	18078 <UnityAssertFloatSpecial@@Base+0x174>
   182fc:	mov	r3, #0
   18300:	b	18078 <UnityAssertFloatSpecial@@Base+0x174>
   18304:	vmov	r3, s0
   18308:	ldr	lr, [ip, #88]	; 0x58
   1830c:	ldr	r5, [ip, #92]	; 0x5c
   18310:	adds	lr, lr, #1
   18314:	adc	r5, r5, #0
   18318:	ands	r3, r3, #-2147483648	; 0x80000000
   1831c:	str	lr, [ip, #88]	; 0x58
   18320:	str	r5, [ip, #92]	; 0x5c
   18324:	bne	182fc <UnityAssertFloatSpecial@@Base+0x3f8>
   18328:	ldr	lr, [ip, #96]	; 0x60
   1832c:	ldr	r5, [ip, #100]	; 0x64
   18330:	adds	lr, lr, #1
   18334:	adc	r5, r5, #0
   18338:	str	lr, [ip, #96]	; 0x60
   1833c:	str	r5, [ip, #100]	; 0x64
   18340:	b	18078 <UnityAssertFloatSpecial@@Base+0x174>
   18344:	ldr	r3, [r5, #136]	; 0x88
   18348:	ldr	r1, [r5, #140]	; 0x8c
   1834c:	ldr	r2, [pc, #160]	; 183f4 <UnityAssertFloatSpecial@@Base+0x4f0>
   18350:	adds	r3, r3, #1
   18354:	adc	r1, r1, #0
   18358:	str	r3, [r5, #136]	; 0x88
   1835c:	str	r1, [r5, #140]	; 0x8c
   18360:	ldr	r0, [r8, r2]
   18364:	bl	15ccc <UnityPrint@@Base>
   18368:	ldr	r3, [r5, #144]	; 0x90
   1836c:	mov	r0, r7
   18370:	ldr	r2, [r5, #148]	; 0x94
   18374:	adds	r3, r3, #1
   18378:	adc	r2, r2, #0
   1837c:	str	r3, [r5, #144]	; 0x90
   18380:	str	r2, [r5, #148]	; 0x94
   18384:	bl	15ccc <UnityPrint@@Base>
   18388:	ldr	r3, [r5, #152]	; 0x98
   1838c:	ldr	r1, [r5, #156]	; 0x9c
   18390:	ldr	r2, [pc, #88]	; 183f0 <UnityAssertFloatSpecial@@Base+0x4ec>
   18394:	adds	r3, r3, #1
   18398:	adc	r1, r1, #0
   1839c:	str	r3, [r5, #152]	; 0x98
   183a0:	str	r1, [r5, #156]	; 0x9c
   183a4:	ldr	r0, [r8, r2]
   183a8:	bl	15ccc <UnityPrint@@Base>
   183ac:	ldr	r3, [r5, #160]	; 0xa0
   183b0:	ldr	r2, [r5, #164]	; 0xa4
   183b4:	adds	r3, r3, #1
   183b8:	adc	r2, r2, #0
   183bc:	str	r3, [r5, #160]	; 0xa0
   183c0:	str	r2, [r5, #164]	; 0xa4
   183c4:	b	1818c <UnityAssertFloatSpecial@@Base+0x288>
   183c8:	svcvc	0x007fffff
   183cc:			; <UNDEFINED> instruction: 0x000175b4
   183d0:	andeq	r0, r0, r8, lsl r1
   183d4:	andeq	r7, r1, r8, asr #1
   183d8:	andeq	r8, r1, r4, lsr r6
   183dc:	andeq	r8, r1, r4, lsl r6
   183e0:	ldrdeq	r8, [r1], -r0
   183e4:	andeq	r8, r1, r4, ror r5
   183e8:	andeq	r8, r1, ip, lsr #10
   183ec:	ldrdeq	r0, [r0], -r8
   183f0:	andeq	r0, r0, r8, asr #2
   183f4:	ldrdeq	r0, [r0], -ip
   183f8:	andeq	r8, r1, r4, lsr #8
   183fc:	andeq	r8, r1, r4, asr #7
   18400:	andeq	r8, r1, ip, lsr r3
   18404:	andeq	r8, r1, r0, lsr #3
   18408:	andeq	r0, r0, r4, asr #1
   1840c:	ldr	ip, [pc, #-16]	; 18404 <UnityAssertFloatSpecial@@Base+0x500>
   18410:	mov	r9, #0
   18414:	mvn	r3, r2
   18418:	and	r3, r3, #1
   1841c:	ldr	r5, [pc, #-28]	; 18408 <UnityAssertFloatSpecial@@Base+0x504>
   18420:	add	ip, pc, ip
   18424:	ldr	lr, [ip, #1648]	; 0x670
   18428:	ldr	r6, [ip, #1652]	; 0x674
   1842c:	adds	lr, lr, #1
   18430:	adc	r6, r6, r9
   18434:	str	lr, [ip, #1648]	; 0x670
   18438:	str	r6, [ip, #1652]	; 0x674
   1843c:	ldr	ip, [r8, r5]
   18440:	str	ip, [sp, #8]
   18444:	b	18078 <UnityAssertFloatSpecial@@Base+0x174>

00018448 <UnityAssertNumbersWithin@@Base>:
   18448:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1844c:	ldr	r5, [pc, #756]	; 18748 <UnityAssertNumbersWithin@@Base+0x300>
   18450:	strd	r6, [sp, #8]
   18454:	ldr	ip, [pc, #752]	; 1874c <UnityAssertNumbersWithin@@Base+0x304>
   18458:	strd	r8, [sp, #16]
   1845c:	str	sl, [sp, #24]
   18460:	add	r5, pc, r5
   18464:	str	lr, [sp, #28]
   18468:	ldr	r4, [r5, ip]
   1846c:	ldr	ip, [r4, #32]
   18470:	cmp	ip, #0
   18474:	bne	1850c <UnityAssertNumbersWithin@@Base+0xc4>
   18478:	ldr	ip, [r4, #36]	; 0x24
   1847c:	cmp	ip, #0
   18480:	bne	184d4 <UnityAssertNumbersWithin@@Base+0x8c>
   18484:	ldr	ip, [sp, #36]	; 0x24
   18488:	tst	ip, #16
   1848c:	beq	18530 <UnityAssertNumbersWithin@@Base+0xe8>
   18490:	cmp	r2, r1
   18494:	ble	1870c <UnityAssertNumbersWithin@@Base+0x2c4>
   18498:	ldr	lr, [pc, #688]	; 18750 <UnityAssertNumbersWithin@@Base+0x308>
   1849c:	sub	ip, r2, r1
   184a0:	add	lr, pc, lr
   184a4:	ldr	r6, [lr, #1848]	; 0x738
   184a8:	add	lr, lr, #1840	; 0x730
   184ac:	ldr	r7, [lr, #12]
   184b0:	adds	r6, r6, #1
   184b4:	adc	r7, r7, #0
   184b8:	cmp	ip, r0
   184bc:	str	r6, [lr, #8]
   184c0:	movls	ip, #0
   184c4:	movhi	ip, #1
   184c8:	str	r7, [lr, #12]
   184cc:	str	ip, [r4, #32]
   184d0:	b	18570 <UnityAssertNumbersWithin@@Base+0x128>
   184d4:	ldr	r3, [pc, #632]	; 18754 <UnityAssertNumbersWithin@@Base+0x30c>
   184d8:	add	r3, pc, r3
   184dc:	ldr	r2, [r3, #1840]	; 0x730
   184e0:	ldr	r1, [r3, #1844]	; 0x734
   184e4:	adds	r2, r2, #1
   184e8:	adc	r1, r1, #0
   184ec:	str	r2, [r3, #1840]	; 0x730
   184f0:	str	r1, [r3, #1844]	; 0x734
   184f4:	ldrd	r4, [sp]
   184f8:	ldrd	r6, [sp, #8]
   184fc:	ldrd	r8, [sp, #16]
   18500:	ldr	sl, [sp, #24]
   18504:	add	sp, sp, #28
   18508:	pop	{pc}		; (ldr pc, [sp], #4)
   1850c:	ldr	r3, [pc, #580]	; 18758 <UnityAssertNumbersWithin@@Base+0x310>
   18510:	add	r3, pc, r3
   18514:	ldr	r2, [r3, #1832]	; 0x728
   18518:	ldr	r1, [r3, #1836]	; 0x72c
   1851c:	adds	r2, r2, #1
   18520:	adc	r1, r1, #0
   18524:	str	r2, [r3, #1832]	; 0x728
   18528:	str	r1, [r3, #1836]	; 0x72c
   1852c:	b	184f4 <UnityAssertNumbersWithin@@Base+0xac>
   18530:	cmp	r2, r1
   18534:	bhi	186d0 <UnityAssertNumbersWithin@@Base+0x288>
   18538:	ldr	lr, [pc, #540]	; 1875c <UnityAssertNumbersWithin@@Base+0x314>
   1853c:	sub	ip, r1, r2
   18540:	add	lr, pc, lr
   18544:	ldr	r6, [lr, #1872]	; 0x750
   18548:	add	lr, lr, #1840	; 0x730
   1854c:	ldr	r7, [lr, #36]	; 0x24
   18550:	adds	r6, r6, #1
   18554:	adc	r7, r7, #0
   18558:	cmp	ip, r0
   1855c:	str	r6, [lr, #32]
   18560:	movls	ip, #0
   18564:	movhi	ip, #1
   18568:	str	r7, [lr, #36]	; 0x24
   1856c:	str	ip, [r4, #32]
   18570:	cmp	ip, #0
   18574:	beq	184f4 <UnityAssertNumbersWithin@@Base+0xac>
   18578:	ldr	r6, [pc, #480]	; 18760 <UnityAssertNumbersWithin@@Base+0x318>
   1857c:	mov	r7, r3
   18580:	mov	r8, r2
   18584:	mov	sl, r0
   18588:	mov	r9, r1
   1858c:	ldr	r0, [sp, #32]
   18590:	add	r6, pc, r6
   18594:	add	r6, r6, #1840	; 0x730
   18598:	ldr	r3, [r6, #40]	; 0x28
   1859c:	ldr	r2, [r6, #44]	; 0x2c
   185a0:	adds	r3, r3, #1
   185a4:	adc	r2, r2, #0
   185a8:	str	r3, [r6, #40]	; 0x28
   185ac:	str	r2, [r6, #44]	; 0x2c
   185b0:	bl	164b4 <UnityPrint@@Base+0x7e8>
   185b4:	ldr	r3, [r6, #48]	; 0x30
   185b8:	ldr	r1, [r6, #52]	; 0x34
   185bc:	ldr	r2, [pc, #416]	; 18764 <UnityAssertNumbersWithin@@Base+0x31c>
   185c0:	adds	r3, r3, #1
   185c4:	adc	r1, r1, #0
   185c8:	str	r3, [r6, #48]	; 0x30
   185cc:	str	r1, [r6, #52]	; 0x34
   185d0:	ldr	r0, [r5, r2]
   185d4:	bl	15ccc <UnityPrint@@Base>
   185d8:	ldr	r3, [r6, #56]	; 0x38
   185dc:	mov	r0, sl
   185e0:	ldr	r2, [r6, #60]	; 0x3c
   185e4:	ldr	r1, [sp, #36]	; 0x24
   185e8:	adds	r3, r3, #1
   185ec:	adc	r2, r2, #0
   185f0:	str	r3, [r6, #56]	; 0x38
   185f4:	str	r2, [r6, #60]	; 0x3c
   185f8:	bl	158dc <UnityPrintNumberByStyle@@Base>
   185fc:	ldr	r3, [r6, #64]	; 0x40
   18600:	ldr	r1, [r6, #68]	; 0x44
   18604:	ldr	r2, [pc, #348]	; 18768 <UnityAssertNumbersWithin@@Base+0x320>
   18608:	adds	r3, r3, #1
   1860c:	adc	r1, r1, #0
   18610:	str	r3, [r6, #64]	; 0x40
   18614:	str	r1, [r6, #68]	; 0x44
   18618:	ldr	r0, [r5, r2]
   1861c:	bl	15ccc <UnityPrint@@Base>
   18620:	ldr	r3, [r6, #72]	; 0x48
   18624:	mov	r0, r9
   18628:	ldr	r2, [r6, #76]	; 0x4c
   1862c:	ldr	r1, [sp, #36]	; 0x24
   18630:	adds	r3, r3, #1
   18634:	adc	r2, r2, #0
   18638:	str	r3, [r6, #72]	; 0x48
   1863c:	str	r2, [r6, #76]	; 0x4c
   18640:	bl	158dc <UnityPrintNumberByStyle@@Base>
   18644:	ldr	r3, [r6, #80]	; 0x50
   18648:	ldr	r1, [r6, #84]	; 0x54
   1864c:	ldr	r2, [pc, #280]	; 1876c <UnityAssertNumbersWithin@@Base+0x324>
   18650:	adds	r3, r3, #1
   18654:	adc	r1, r1, #0
   18658:	str	r3, [r6, #80]	; 0x50
   1865c:	str	r1, [r6, #84]	; 0x54
   18660:	ldr	r0, [r5, r2]
   18664:	bl	15ccc <UnityPrint@@Base>
   18668:	ldr	ip, [r6, #88]	; 0x58
   1866c:	mov	r0, r8
   18670:	ldr	r3, [r6, #92]	; 0x5c
   18674:	ldr	r1, [sp, #36]	; 0x24
   18678:	adds	ip, ip, #1
   1867c:	adc	r3, r3, #0
   18680:	str	ip, [r6, #88]	; 0x58
   18684:	str	r3, [r6, #92]	; 0x5c
   18688:	bl	158dc <UnityPrintNumberByStyle@@Base>
   1868c:	ldrd	r2, [r6, #96]	; 0x60
   18690:	mov	r0, r7
   18694:	adds	r2, r2, #1
   18698:	adc	r3, r3, #0
   1869c:	strd	r2, [r6, #96]	; 0x60
   186a0:	bl	16180 <UnityPrint@@Base+0x4b4>
   186a4:	ldr	r3, [r6, #104]	; 0x68
   186a8:	mov	ip, #1
   186ac:	add	r0, r4, #40	; 0x28
   186b0:	mov	r1, ip
   186b4:	ldr	r2, [r6, #108]	; 0x6c
   186b8:	str	ip, [r4, #32]
   186bc:	adds	r3, r3, ip
   186c0:	adc	r2, r2, #0
   186c4:	str	r3, [r6, #104]	; 0x68
   186c8:	str	r2, [r6, #108]	; 0x6c
   186cc:	bl	11fbc <longjmp@plt>
   186d0:	ldr	lr, [pc, #152]	; 18770 <UnityAssertNumbersWithin@@Base+0x328>
   186d4:	sub	ip, r2, r1
   186d8:	add	lr, pc, lr
   186dc:	ldr	r6, [lr, #1864]	; 0x748
   186e0:	add	lr, lr, #1840	; 0x730
   186e4:	ldr	r7, [lr, #28]
   186e8:	adds	r6, r6, #1
   186ec:	adc	r7, r7, #0
   186f0:	cmp	ip, r0
   186f4:	str	r6, [lr, #24]
   186f8:	movls	ip, #0
   186fc:	movhi	ip, #1
   18700:	str	r7, [lr, #28]
   18704:	str	ip, [r4, #32]
   18708:	b	18570 <UnityAssertNumbersWithin@@Base+0x128>
   1870c:	ldr	lr, [pc, #96]	; 18774 <UnityAssertNumbersWithin@@Base+0x32c>
   18710:	sub	ip, r1, r2
   18714:	add	lr, pc, lr
   18718:	ldr	r6, [lr, #1856]	; 0x740
   1871c:	add	lr, lr, #1840	; 0x730
   18720:	ldr	r7, [lr, #20]
   18724:	adds	r6, r6, #1
   18728:	adc	r7, r7, #0
   1872c:	cmp	ip, r0
   18730:	str	r6, [lr, #16]
   18734:	movls	ip, #0
   18738:	movhi	ip, #1
   1873c:	str	r7, [lr, #20]
   18740:	str	ip, [r4, #32]
   18744:	b	18570 <UnityAssertNumbersWithin@@Base+0x128>
   18748:	muleq	r1, r8, fp
   1874c:	andeq	r0, r0, r8, lsl r1
   18750:	andeq	r8, r1, r0, lsr #2
   18754:	andeq	r8, r1, r8, ror #1
   18758:	strheq	r8, [r1], -r0
   1875c:	andeq	r8, r1, r0, lsl #1
   18760:	andeq	r8, r1, r0, lsr r0
   18764:	strdeq	r0, [r0], -r4
   18768:	ldrdeq	r0, [r0], -r8
   1876c:	andeq	r0, r0, r8, asr #2
   18770:	andeq	r7, r1, r8, ror #29
   18774:	andeq	r7, r1, ip, lsr #29

00018778 <UnityAssertEqualString@@Base>:
   18778:	ldr	ip, [pc, #680]	; 18a28 <UnityAssertEqualString@@Base+0x2b0>
   1877c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18780:	strd	r6, [sp, #8]
   18784:	strd	r8, [sp, #16]
   18788:	strd	sl, [sp, #24]
   1878c:	str	lr, [sp, #32]
   18790:	sub	sp, sp, #12
   18794:	add	ip, pc, ip
   18798:	str	r2, [sp, #4]
   1879c:	mov	r2, ip
   187a0:	ldr	ip, [pc, #644]	; 18a2c <UnityAssertEqualString@@Base+0x2b4>
   187a4:	ldr	r9, [r2, ip]
   187a8:	ldr	r2, [r9, #32]
   187ac:	cmp	r2, #0
   187b0:	bne	188d0 <UnityAssertEqualString@@Base+0x158>
   187b4:	ldr	r7, [r9, #36]	; 0x24
   187b8:	cmp	r7, #0
   187bc:	bne	1887c <UnityAssertEqualString@@Base+0x104>
   187c0:	adds	r8, r1, #0
   187c4:	movne	r8, #1
   187c8:	cmp	r0, #0
   187cc:	moveq	r8, #0
   187d0:	cmp	r8, #0
   187d4:	beq	188f4 <UnityAssertEqualString@@Base+0x17c>
   187d8:	ldr	ip, [pc, #592]	; 18a30 <UnityAssertEqualString@@Base+0x2b8>
   187dc:	sub	r6, r0, #1
   187e0:	sub	r5, r1, #1
   187e4:	add	ip, pc, ip
   187e8:	add	ip, ip, #1952	; 0x7a0
   187ec:	ldr	r2, [ip, #24]
   187f0:	ldr	ip, [ip, #28]
   187f4:	mov	fp, r2
   187f8:	mov	sl, ip
   187fc:	ldrb	lr, [r6, #1]!
   18800:	ldrb	r4, [r5, #1]!
   18804:	cmp	lr, #0
   18808:	bne	188b8 <UnityAssertEqualString@@Base+0x140>
   1880c:	cmp	r7, #0
   18810:	beq	18824 <UnityAssertEqualString@@Base+0xac>
   18814:	ldr	lr, [pc, #536]	; 18a34 <UnityAssertEqualString@@Base+0x2bc>
   18818:	add	lr, pc, lr
   1881c:	str	r2, [lr, #1976]	; 0x7b8
   18820:	str	ip, [lr, #1980]	; 0x7bc
   18824:	ldr	r2, [pc, #524]	; 18a38 <UnityAssertEqualString@@Base+0x2c0>
   18828:	add	r2, pc, r2
   1882c:	ldr	ip, [r2, #1984]	; 0x7c0
   18830:	add	r2, r2, #1952	; 0x7a0
   18834:	ldr	lr, [r2, #36]	; 0x24
   18838:	adds	ip, ip, #1
   1883c:	adc	lr, lr, #0
   18840:	cmp	r4, #0
   18844:	str	ip, [r2, #32]
   18848:	str	lr, [r2, #36]	; 0x24
   1884c:	beq	189f0 <UnityAssertEqualString@@Base+0x278>
   18850:	ldr	r2, [pc, #484]	; 18a3c <UnityAssertEqualString@@Base+0x2c4>
   18854:	mov	ip, #1
   18858:	str	ip, [r9, #32]
   1885c:	add	r2, pc, r2
   18860:	ldr	ip, [r2, #1968]	; 0x7b0
   18864:	ldr	lr, [r2, #1972]	; 0x7b4
   18868:	adds	ip, ip, #1
   1886c:	adc	lr, lr, #0
   18870:	str	ip, [r2, #1968]	; 0x7b0
   18874:	str	lr, [r2, #1972]	; 0x7b4
   18878:	b	18924 <UnityAssertEqualString@@Base+0x1ac>
   1887c:	ldr	r3, [pc, #444]	; 18a40 <UnityAssertEqualString@@Base+0x2c8>
   18880:	add	r3, pc, r3
   18884:	ldr	r2, [r3, #1960]	; 0x7a8
   18888:	ldr	r1, [r3, #1964]	; 0x7ac
   1888c:	adds	r2, r2, #1
   18890:	adc	r1, r1, #0
   18894:	str	r2, [r3, #1960]	; 0x7a8
   18898:	str	r1, [r3, #1964]	; 0x7ac
   1889c:	add	sp, sp, #12
   188a0:	ldrd	r4, [sp]
   188a4:	ldrd	r6, [sp, #8]
   188a8:	ldrd	r8, [sp, #16]
   188ac:	ldrd	sl, [sp, #24]
   188b0:	add	sp, sp, #32
   188b4:	pop	{pc}		; (ldr pc, [sp], #4)
   188b8:	adds	r2, r2, #1
   188bc:	adc	ip, ip, #0
   188c0:	cmp	lr, r4
   188c4:	bne	18a0c <UnityAssertEqualString@@Base+0x294>
   188c8:	mov	r7, r8
   188cc:	b	187f4 <UnityAssertEqualString@@Base+0x7c>
   188d0:	ldr	r3, [pc, #364]	; 18a44 <UnityAssertEqualString@@Base+0x2cc>
   188d4:	add	r3, pc, r3
   188d8:	ldr	r2, [r3, #1952]	; 0x7a0
   188dc:	ldr	r1, [r3, #1956]	; 0x7a4
   188e0:	adds	r2, r2, #1
   188e4:	adc	r1, r1, #0
   188e8:	str	r2, [r3, #1952]	; 0x7a0
   188ec:	str	r1, [r3, #1956]	; 0x7a4
   188f0:	b	1889c <UnityAssertEqualString@@Base+0x124>
   188f4:	cmp	r0, r1
   188f8:	beq	189cc <UnityAssertEqualString@@Base+0x254>
   188fc:	ldr	r2, [pc, #324]	; 18a48 <UnityAssertEqualString@@Base+0x2d0>
   18900:	mov	ip, #1
   18904:	str	ip, [r9, #32]
   18908:	add	r2, pc, r2
   1890c:	ldr	ip, [r2, #2000]	; 0x7d0
   18910:	ldr	lr, [r2, #2004]	; 0x7d4
   18914:	adds	ip, ip, #1
   18918:	adc	lr, lr, #0
   1891c:	str	ip, [r2, #2000]	; 0x7d0
   18920:	str	lr, [r2, #2004]	; 0x7d4
   18924:	ldr	r2, [pc, #288]	; 18a4c <UnityAssertEqualString@@Base+0x2d4>
   18928:	mov	r6, r0
   1892c:	mov	r0, r3
   18930:	mov	r7, r1
   18934:	ldr	r5, [sp, #4]
   18938:	add	r2, pc, r2
   1893c:	add	r4, r2, #1952	; 0x7a0
   18940:	ldr	r3, [r4, #64]	; 0x40
   18944:	ldr	r2, [r4, #68]	; 0x44
   18948:	adds	r3, r3, #1
   1894c:	adc	r2, r2, #0
   18950:	str	r3, [r4, #64]	; 0x40
   18954:	str	r2, [r4, #68]	; 0x44
   18958:	bl	164b4 <UnityPrint@@Base+0x7e8>
   1895c:	ldr	r3, [r4, #72]	; 0x48
   18960:	mov	r1, r7
   18964:	mov	r0, r6
   18968:	ldr	r2, [r4, #76]	; 0x4c
   1896c:	adds	r3, r3, #1
   18970:	adc	r2, r2, #0
   18974:	str	r3, [r4, #72]	; 0x48
   18978:	str	r2, [r4, #76]	; 0x4c
   1897c:	bl	15f40 <UnityPrint@@Base+0x274>
   18980:	ldr	r3, [r4, #80]	; 0x50
   18984:	mov	r0, r5
   18988:	ldr	r2, [r4, #84]	; 0x54
   1898c:	adds	r3, r3, #1
   18990:	adc	r2, r2, #0
   18994:	str	r3, [r4, #80]	; 0x50
   18998:	str	r2, [r4, #84]	; 0x54
   1899c:	bl	16180 <UnityPrint@@Base+0x4b4>
   189a0:	ldr	r3, [r4, #88]	; 0x58
   189a4:	mov	ip, #1
   189a8:	add	r0, r9, #40	; 0x28
   189ac:	mov	r1, ip
   189b0:	ldr	r2, [r4, #92]	; 0x5c
   189b4:	str	ip, [r9, #32]
   189b8:	adds	r3, r3, ip
   189bc:	adc	r2, r2, #0
   189c0:	str	r3, [r4, #88]	; 0x58
   189c4:	str	r2, [r4, #92]	; 0x5c
   189c8:	bl	11fbc <longjmp@plt>
   189cc:	ldr	r3, [pc, #124]	; 18a50 <UnityAssertEqualString@@Base+0x2d8>
   189d0:	add	r3, pc, r3
   189d4:	ldr	r2, [r3, #2008]	; 0x7d8
   189d8:	ldr	r1, [r3, #2012]	; 0x7dc
   189dc:	adds	r2, r2, #1
   189e0:	adc	r1, r1, #0
   189e4:	str	r2, [r3, #2008]	; 0x7d8
   189e8:	str	r1, [r3, #2012]	; 0x7dc
   189ec:	b	1889c <UnityAssertEqualString@@Base+0x124>
   189f0:	ldr	r3, [r2, #40]	; 0x28
   189f4:	ldr	r1, [r2, #44]	; 0x2c
   189f8:	adds	r3, r3, #1
   189fc:	adc	r1, r1, #0
   18a00:	str	r3, [r2, #40]	; 0x28
   18a04:	str	r1, [r2, #44]	; 0x2c
   18a08:	b	1889c <UnityAssertEqualString@@Base+0x124>
   18a0c:	cmp	r7, #0
   18a10:	beq	18850 <UnityAssertEqualString@@Base+0xd8>
   18a14:	ldr	r2, [pc, #56]	; 18a54 <UnityAssertEqualString@@Base+0x2dc>
   18a18:	add	r2, pc, r2
   18a1c:	str	fp, [r2, #1976]	; 0x7b8
   18a20:	str	sl, [r2, #1980]	; 0x7bc
   18a24:	b	18850 <UnityAssertEqualString@@Base+0xd8>
   18a28:	andeq	r6, r1, r4, ror #16
   18a2c:	andeq	r0, r0, r8, lsl r1
   18a30:	ldrdeq	r7, [r1], -ip
   18a34:	andeq	r7, r1, r8, lsr #27
   18a38:	muleq	r1, r8, sp
   18a3c:	andeq	r7, r1, r4, ror #26
   18a40:	andeq	r7, r1, r0, asr #26
   18a44:	andeq	r7, r1, ip, ror #25
   18a48:			; <UNDEFINED> instruction: 0x00017cb8
   18a4c:	andeq	r7, r1, r8, lsl #25
   18a50:	strdeq	r7, [r1], -r0
   18a54:	andeq	r7, r1, r8, lsr #23

00018a58 <UnityAssertEqualStringLen@@Base>:
   18a58:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18a5c:	strd	r6, [sp, #8]
   18a60:	ldr	r6, [pc, #1368]	; 18fc0 <UnityAssertEqualStringLen@@Base+0x568>
   18a64:	strd	r8, [sp, #16]
   18a68:	ldr	ip, [pc, #1364]	; 18fc4 <UnityAssertEqualStringLen@@Base+0x56c>
   18a6c:	strd	sl, [sp, #24]
   18a70:	str	lr, [sp, #32]
   18a74:	sub	sp, sp, #20
   18a78:	add	r6, pc, r6
   18a7c:	ldr	r8, [r6, ip]
   18a80:	ldr	ip, [r8, #32]
   18a84:	cmp	ip, #0
   18a88:	bne	18be4 <UnityAssertEqualStringLen@@Base+0x18c>
   18a8c:	ldr	lr, [r8, #36]	; 0x24
   18a90:	cmp	lr, #0
   18a94:	bne	18b80 <UnityAssertEqualStringLen@@Base+0x128>
   18a98:	mov	r7, r1
   18a9c:	adds	r1, r1, #0
   18aa0:	str	r2, [sp]
   18aa4:	movne	r1, #1
   18aa8:	cmp	r0, #0
   18aac:	str	r0, [sp, #8]
   18ab0:	moveq	r1, #0
   18ab4:	mov	ip, r0
   18ab8:	str	r3, [sp, #12]
   18abc:	cmp	r1, #0
   18ac0:	beq	18c08 <UnityAssertEqualStringLen@@Base+0x1b0>
   18ac4:	ldr	r0, [pc, #1276]	; 18fc8 <UnityAssertEqualStringLen@@Base+0x570>
   18ac8:	sub	r3, r2, #1
   18acc:	sub	r4, ip, #1
   18ad0:	add	r3, r3, r7
   18ad4:	sub	r2, r7, #1
   18ad8:	rsb	r9, r7, #1
   18adc:	str	r3, [sp, #4]
   18ae0:	add	r0, pc, r0
   18ae4:	add	r0, r0, #2048	; 0x800
   18ae8:	ldr	r3, [r0, #24]
   18aec:	ldr	r0, [r0, #28]
   18af0:	mov	fp, r3
   18af4:	mov	sl, r0
   18af8:	ldrb	ip, [r4, #1]!
   18afc:	add	r5, r9, r2
   18b00:	cmp	ip, #0
   18b04:	bne	18bbc <UnityAssertEqualStringLen@@Base+0x164>
   18b08:	cmp	lr, #0
   18b0c:	beq	18b20 <UnityAssertEqualStringLen@@Base+0xc8>
   18b10:	ldr	r2, [pc, #1204]	; 18fcc <UnityAssertEqualStringLen@@Base+0x574>
   18b14:	add	r2, pc, r2
   18b18:	str	r3, [r2, #2072]	; 0x818
   18b1c:	str	r0, [r2, #2076]	; 0x81c
   18b20:	ldr	r3, [pc, #1192]	; 18fd0 <UnityAssertEqualStringLen@@Base+0x578>
   18b24:	ldrb	r0, [r7, r5]
   18b28:	add	r3, pc, r3
   18b2c:	ldr	r2, [r3, #2080]	; 0x820
   18b30:	add	r3, r3, #2048	; 0x800
   18b34:	ldr	r1, [r3, #36]	; 0x24
   18b38:	adds	r2, r2, #1
   18b3c:	adc	r1, r1, #0
   18b40:	cmp	r0, #0
   18b44:	str	r2, [r3, #32]
   18b48:	str	r1, [r3, #36]	; 0x24
   18b4c:	beq	18f40 <UnityAssertEqualStringLen@@Base+0x4e8>
   18b50:	ldr	r3, [sp]
   18b54:	cmp	r3, r5
   18b58:	bhi	18e24 <UnityAssertEqualStringLen@@Base+0x3cc>
   18b5c:	ldr	r3, [pc, #1136]	; 18fd4 <UnityAssertEqualStringLen@@Base+0x57c>
   18b60:	add	r3, pc, r3
   18b64:	ldr	r2, [r3, #2096]	; 0x830
   18b68:	ldr	r1, [r3, #2100]	; 0x834
   18b6c:	adds	r2, r2, #1
   18b70:	adc	r1, r1, #0
   18b74:	str	r2, [r3, #2096]	; 0x830
   18b78:	str	r1, [r3, #2100]	; 0x834
   18b7c:	b	18ba0 <UnityAssertEqualStringLen@@Base+0x148>
   18b80:	ldr	r3, [pc, #1104]	; 18fd8 <UnityAssertEqualStringLen@@Base+0x580>
   18b84:	add	r3, pc, r3
   18b88:	ldr	r2, [r3, #2056]	; 0x808
   18b8c:	ldr	r1, [r3, #2060]	; 0x80c
   18b90:	adds	r2, r2, #1
   18b94:	adc	r1, r1, #0
   18b98:	str	r2, [r3, #2056]	; 0x808
   18b9c:	str	r1, [r3, #2060]	; 0x80c
   18ba0:	add	sp, sp, #20
   18ba4:	ldrd	r4, [sp]
   18ba8:	ldrd	r6, [sp, #8]
   18bac:	ldrd	r8, [sp, #16]
   18bb0:	ldrd	sl, [sp, #24]
   18bb4:	add	sp, sp, #32
   18bb8:	pop	{pc}		; (ldr pc, [sp], #4)
   18bbc:	ldr	r5, [sp, #4]
   18bc0:	cmp	r2, r5
   18bc4:	beq	18f5c <UnityAssertEqualStringLen@@Base+0x504>
   18bc8:	ldrb	r5, [r2, #1]!
   18bcc:	adds	r3, r3, #1
   18bd0:	adc	r0, r0, #0
   18bd4:	cmp	r5, ip
   18bd8:	bne	18e0c <UnityAssertEqualStringLen@@Base+0x3b4>
   18bdc:	mov	lr, r1
   18be0:	b	18af0 <UnityAssertEqualStringLen@@Base+0x98>
   18be4:	ldr	r3, [pc, #1008]	; 18fdc <UnityAssertEqualStringLen@@Base+0x584>
   18be8:	add	r3, pc, r3
   18bec:	ldr	r2, [r3, #2048]	; 0x800
   18bf0:	ldr	r1, [r3, #2052]	; 0x804
   18bf4:	adds	r2, r2, #1
   18bf8:	adc	r1, r1, #0
   18bfc:	str	r2, [r3, #2048]	; 0x800
   18c00:	str	r1, [r3, #2052]	; 0x804
   18c04:	b	18ba0 <UnityAssertEqualStringLen@@Base+0x148>
   18c08:	ldr	r3, [sp, #8]
   18c0c:	cmp	r3, r7
   18c10:	beq	18de8 <UnityAssertEqualStringLen@@Base+0x390>
   18c14:	ldr	r5, [pc, #964]	; 18fe0 <UnityAssertEqualStringLen@@Base+0x588>
   18c18:	mov	r3, #1
   18c1c:	str	r3, [r8, #32]
   18c20:	ldr	r0, [sp, #56]	; 0x38
   18c24:	add	r5, pc, r5
   18c28:	add	r4, r5, #2048	; 0x800
   18c2c:	ldr	r2, [r4, #56]	; 0x38
   18c30:	add	r5, r5, #2160	; 0x870
   18c34:	ldr	ip, [r4, #60]	; 0x3c
   18c38:	ldr	r3, [r4, #72]	; 0x48
   18c3c:	adds	r2, r2, #1
   18c40:	ldr	r1, [r4, #76]	; 0x4c
   18c44:	adc	ip, ip, #0
   18c48:	str	r2, [r4, #56]	; 0x38
   18c4c:	adds	r3, r3, #1
   18c50:	str	ip, [r4, #60]	; 0x3c
   18c54:	adc	r2, r1, #0
   18c58:	str	r3, [r4, #72]	; 0x48
   18c5c:	str	r2, [r4, #76]	; 0x4c
   18c60:	bl	164b4 <UnityPrint@@Base+0x7e8>
   18c64:	ldr	r2, [r4, #80]	; 0x50
   18c68:	ldr	r3, [r5, #-8]
   18c6c:	ldr	r0, [r4, #84]	; 0x54
   18c70:	adds	r2, r2, #1
   18c74:	ldr	r1, [r5, #-4]
   18c78:	str	r2, [r4, #80]	; 0x50
   18c7c:	ldr	r2, [pc, #864]	; 18fe4 <UnityAssertEqualStringLen@@Base+0x58c>
   18c80:	adc	r0, r0, #0
   18c84:	adds	r3, r3, #1
   18c88:	adc	r1, r1, #0
   18c8c:	str	r3, [r5, #-8]
   18c90:	str	r0, [r4, #84]	; 0x54
   18c94:	str	r1, [r5, #-4]
   18c98:	ldr	r0, [r6, r2]
   18c9c:	bl	15ccc <UnityPrint@@Base>
   18ca0:	ldr	r3, [sp, #8]
   18ca4:	cmp	r3, #0
   18ca8:	bne	18ea8 <UnityAssertEqualStringLen@@Base+0x450>
   18cac:	ldr	r3, [r5, #8]
   18cb0:	ldr	r1, [r5, #12]
   18cb4:	ldr	r2, [pc, #812]	; 18fe8 <UnityAssertEqualStringLen@@Base+0x590>
   18cb8:	adds	r3, r3, #1
   18cbc:	adc	r1, r1, #0
   18cc0:	str	r3, [r5, #8]
   18cc4:	str	r1, [r5, #12]
   18cc8:	ldr	r0, [r6, r2]
   18ccc:	bl	15ccc <UnityPrint@@Base>
   18cd0:	ldr	r3, [r5, #40]	; 0x28
   18cd4:	ldr	r2, [r5, #44]	; 0x2c
   18cd8:	adds	r3, r3, #1
   18cdc:	adc	r2, r2, #0
   18ce0:	str	r3, [r5, #40]	; 0x28
   18ce4:	str	r2, [r5, #44]	; 0x2c
   18ce8:	ldr	r3, [pc, #764]	; 18fec <UnityAssertEqualStringLen@@Base+0x594>
   18cec:	ldr	r0, [r6, r3]
   18cf0:	bl	15ccc <UnityPrint@@Base>
   18cf4:	cmp	r7, #0
   18cf8:	beq	18f78 <UnityAssertEqualStringLen@@Base+0x520>
   18cfc:	ldr	r4, [pc, #748]	; 18ff0 <UnityAssertEqualStringLen@@Base+0x598>
   18d00:	mov	r0, #39	; 0x27
   18d04:	ldr	r2, [pc, #744]	; 18ff4 <UnityAssertEqualStringLen@@Base+0x59c>
   18d08:	add	r4, pc, r4
   18d0c:	ldr	r3, [r4, #2208]	; 0x8a0
   18d10:	ldr	r1, [r4, #2212]	; 0x8a4
   18d14:	adds	r3, r3, #1
   18d18:	adc	r1, r1, #0
   18d1c:	str	r3, [r4, #2208]	; 0x8a0
   18d20:	str	r1, [r4, #2212]	; 0x8a4
   18d24:	ldr	r5, [r6, r2]
   18d28:	ldr	r1, [r5]
   18d2c:	bl	120e8 <putc@plt>
   18d30:	ldr	r3, [r4, #2224]	; 0x8b0
   18d34:	mov	r0, r7
   18d38:	ldr	r2, [r4, #2228]	; 0x8b4
   18d3c:	ldr	r1, [sp]
   18d40:	adds	r3, r3, #1
   18d44:	adc	r2, r2, #0
   18d48:	str	r3, [r4, #2224]	; 0x8b0
   18d4c:	str	r2, [r4, #2228]	; 0x8b4
   18d50:	bl	15a0c <UnityPrintLen@@Base>
   18d54:	ldr	r3, [r4, #2232]	; 0x8b8
   18d58:	mov	r0, #39	; 0x27
   18d5c:	ldr	r2, [r4, #2236]	; 0x8bc
   18d60:	ldr	r1, [r5]
   18d64:	adds	r3, r3, #1
   18d68:	adc	r2, r2, #0
   18d6c:	str	r3, [r4, #2232]	; 0x8b8
   18d70:	str	r2, [r4, #2236]	; 0x8bc
   18d74:	bl	120e8 <putc@plt>
   18d78:	ldr	r3, [r4, #2240]	; 0x8c0
   18d7c:	ldr	r2, [r4, #2244]	; 0x8c4
   18d80:	adds	r3, r3, #1
   18d84:	adc	r2, r2, #0
   18d88:	str	r3, [r4, #2240]	; 0x8c0
   18d8c:	str	r2, [r4, #2244]	; 0x8c4
   18d90:	ldr	r4, [pc, #608]	; 18ff8 <UnityAssertEqualStringLen@@Base+0x5a0>
   18d94:	ldr	r0, [sp, #12]
   18d98:	add	r4, pc, r4
   18d9c:	add	r4, r4, #2048	; 0x800
   18da0:	ldr	r3, [r4, #88]	; 0x58
   18da4:	ldr	r2, [r4, #92]	; 0x5c
   18da8:	adds	r3, r3, #1
   18dac:	adc	r2, r2, #0
   18db0:	str	r3, [r4, #88]	; 0x58
   18db4:	str	r2, [r4, #92]	; 0x5c
   18db8:	bl	16180 <UnityPrint@@Base+0x4b4>
   18dbc:	ldr	r3, [r4, #96]	; 0x60
   18dc0:	mov	ip, #1
   18dc4:	add	r0, r8, #40	; 0x28
   18dc8:	mov	r1, ip
   18dcc:	ldr	r2, [r4, #100]	; 0x64
   18dd0:	str	ip, [r8, #32]
   18dd4:	adds	r3, r3, ip
   18dd8:	adc	r2, r2, #0
   18ddc:	str	r3, [r4, #96]	; 0x60
   18de0:	str	r2, [r4, #100]	; 0x64
   18de4:	bl	11fbc <longjmp@plt>
   18de8:	ldr	r3, [pc, #524]	; 18ffc <UnityAssertEqualStringLen@@Base+0x5a4>
   18dec:	add	r3, pc, r3
   18df0:	ldr	r2, [r3, #2112]	; 0x840
   18df4:	ldr	r1, [r3, #2116]	; 0x844
   18df8:	adds	r2, r2, #1
   18dfc:	adc	r1, r1, #0
   18e00:	str	r2, [r3, #2112]	; 0x840
   18e04:	str	r1, [r3, #2116]	; 0x844
   18e08:	b	18ba0 <UnityAssertEqualStringLen@@Base+0x148>
   18e0c:	cmp	lr, #0
   18e10:	beq	18e24 <UnityAssertEqualStringLen@@Base+0x3cc>
   18e14:	ldr	r3, [pc, #484]	; 19000 <UnityAssertEqualStringLen@@Base+0x5a8>
   18e18:	add	r3, pc, r3
   18e1c:	str	fp, [r3, #2072]	; 0x818
   18e20:	str	sl, [r3, #2076]	; 0x81c
   18e24:	ldr	r5, [pc, #472]	; 19004 <UnityAssertEqualStringLen@@Base+0x5ac>
   18e28:	mov	r3, #1
   18e2c:	str	r3, [r8, #32]
   18e30:	ldr	r0, [sp, #56]	; 0x38
   18e34:	add	r5, pc, r5
   18e38:	ldr	r2, [r5, #2064]	; 0x810
   18e3c:	ldr	ip, [r5, #2068]	; 0x814
   18e40:	ldr	r3, [r5, #2120]	; 0x848
   18e44:	adds	r2, r2, #1
   18e48:	ldr	r1, [r5, #2124]	; 0x84c
   18e4c:	adc	ip, ip, #0
   18e50:	str	r2, [r5, #2064]	; 0x810
   18e54:	adds	r3, r3, #1
   18e58:	str	ip, [r5, #2068]	; 0x814
   18e5c:	adc	r2, r1, #0
   18e60:	str	r3, [r5, #2120]	; 0x848
   18e64:	str	r2, [r5, #2124]	; 0x84c
   18e68:	bl	164b4 <UnityPrint@@Base+0x7e8>
   18e6c:	ldr	r2, [r5, #2128]	; 0x850
   18e70:	ldr	r0, [r5, #2132]	; 0x854
   18e74:	ldr	r3, [r5, #2152]	; 0x868
   18e78:	adds	r2, r2, #1
   18e7c:	ldr	r1, [r5, #2156]	; 0x86c
   18e80:	str	r2, [r5, #2128]	; 0x850
   18e84:	adc	r0, r0, #0
   18e88:	ldr	r2, [pc, #340]	; 18fe4 <UnityAssertEqualStringLen@@Base+0x58c>
   18e8c:	adds	r3, r3, #1
   18e90:	str	r0, [r5, #2132]	; 0x854
   18e94:	adc	r1, r1, #0
   18e98:	str	r3, [r5, #2152]	; 0x868
   18e9c:	str	r1, [r5, #2156]	; 0x86c
   18ea0:	ldr	r0, [r6, r2]
   18ea4:	bl	15ccc <UnityPrint@@Base>
   18ea8:	ldr	r4, [pc, #344]	; 19008 <UnityAssertEqualStringLen@@Base+0x5b0>
   18eac:	mov	r0, #39	; 0x27
   18eb0:	ldr	r2, [pc, #316]	; 18ff4 <UnityAssertEqualStringLen@@Base+0x59c>
   18eb4:	add	r4, pc, r4
   18eb8:	ldr	r3, [r4, #2160]	; 0x870
   18ebc:	ldr	r1, [r4, #2164]	; 0x874
   18ec0:	adds	r3, r3, #1
   18ec4:	adc	r1, r1, #0
   18ec8:	str	r3, [r4, #2160]	; 0x870
   18ecc:	str	r1, [r4, #2164]	; 0x874
   18ed0:	ldr	r5, [r6, r2]
   18ed4:	ldr	r1, [r5]
   18ed8:	bl	120e8 <putc@plt>
   18edc:	ldr	r3, [r4, #2176]	; 0x880
   18ee0:	ldr	r2, [r4, #2180]	; 0x884
   18ee4:	ldr	r1, [sp]
   18ee8:	adds	r3, r3, #1
   18eec:	ldr	r0, [sp, #8]
   18ef0:	adc	r2, r2, #0
   18ef4:	str	r3, [r4, #2176]	; 0x880
   18ef8:	str	r2, [r4, #2180]	; 0x884
   18efc:	bl	15a0c <UnityPrintLen@@Base>
   18f00:	ldr	r3, [r4, #2184]	; 0x888
   18f04:	mov	r0, #39	; 0x27
   18f08:	ldr	r2, [r4, #2188]	; 0x88c
   18f0c:	ldr	r1, [r5]
   18f10:	adds	r3, r3, #1
   18f14:	adc	r2, r2, #0
   18f18:	str	r3, [r4, #2184]	; 0x888
   18f1c:	str	r2, [r4, #2188]	; 0x88c
   18f20:	bl	120e8 <putc@plt>
   18f24:	ldr	r3, [r4, #2192]	; 0x890
   18f28:	ldr	r2, [r4, #2196]	; 0x894
   18f2c:	adds	r3, r3, #1
   18f30:	adc	r2, r2, #0
   18f34:	str	r3, [r4, #2192]	; 0x890
   18f38:	str	r2, [r4, #2196]	; 0x894
   18f3c:	b	18ce8 <UnityAssertEqualStringLen@@Base+0x290>
   18f40:	ldr	r2, [r3, #40]	; 0x28
   18f44:	ldr	r1, [r3, #44]	; 0x2c
   18f48:	adds	r2, r2, #1
   18f4c:	adc	r1, r1, #0
   18f50:	str	r2, [r3, #40]	; 0x28
   18f54:	str	r1, [r3, #44]	; 0x2c
   18f58:	b	18ba0 <UnityAssertEqualStringLen@@Base+0x148>
   18f5c:	cmp	lr, #0
   18f60:	beq	18b5c <UnityAssertEqualStringLen@@Base+0x104>
   18f64:	ldr	r2, [pc, #160]	; 1900c <UnityAssertEqualStringLen@@Base+0x5b4>
   18f68:	add	r2, pc, r2
   18f6c:	str	r3, [r2, #2072]	; 0x818
   18f70:	str	r0, [r2, #2076]	; 0x81c
   18f74:	b	18b5c <UnityAssertEqualStringLen@@Base+0x104>
   18f78:	ldr	r4, [pc, #144]	; 19010 <UnityAssertEqualStringLen@@Base+0x5b8>
   18f7c:	ldr	r2, [pc, #100]	; 18fe8 <UnityAssertEqualStringLen@@Base+0x590>
   18f80:	add	r4, pc, r4
   18f84:	ldr	r3, [r4, #2216]	; 0x8a8
   18f88:	ldr	r1, [r4, #2220]	; 0x8ac
   18f8c:	adds	r3, r3, #1
   18f90:	adc	r1, r1, #0
   18f94:	str	r3, [r4, #2216]	; 0x8a8
   18f98:	str	r1, [r4, #2220]	; 0x8ac
   18f9c:	ldr	r0, [r6, r2]
   18fa0:	bl	15ccc <UnityPrint@@Base>
   18fa4:	ldr	r3, [r4, #2248]	; 0x8c8
   18fa8:	ldr	r2, [r4, #2252]	; 0x8cc
   18fac:	adds	r3, r3, #1
   18fb0:	adc	r2, r2, #0
   18fb4:	str	r3, [r4, #2248]	; 0x8c8
   18fb8:	str	r2, [r4, #2252]	; 0x8cc
   18fbc:	b	18d90 <UnityAssertEqualStringLen@@Base+0x338>
   18fc0:	andeq	r6, r1, r0, lsl #11
   18fc4:	andeq	r0, r0, r8, lsl r1
   18fc8:	andeq	r7, r1, r0, ror #21
   18fcc:	andeq	r7, r1, ip, lsr #21
   18fd0:	muleq	r1, r8, sl
   18fd4:	andeq	r7, r1, r0, ror #20
   18fd8:	andeq	r7, r1, ip, lsr sl
   18fdc:	ldrdeq	r7, [r1], -r8
   18fe0:	muleq	r1, ip, r9
   18fe4:	ldrdeq	r0, [r0], -r8
   18fe8:	andeq	r0, r0, r4, lsr #2
   18fec:	andeq	r0, r0, r8, asr #2
   18ff0:			; <UNDEFINED> instruction: 0x000178b8
   18ff4:	andeq	r0, r0, ip, lsr r1
   18ff8:	andeq	r7, r1, r8, lsr #16
   18ffc:	ldrdeq	r7, [r1], -r4
   19000:	andeq	r7, r1, r8, lsr #15
   19004:	andeq	r7, r1, ip, lsl #15
   19008:	andeq	r7, r1, ip, lsl #14
   1900c:	andeq	r7, r1, r8, asr r6
   19010:	andeq	r7, r1, r0, asr #12

00019014 <UnityAssertEqualStringArray@@Base>:
   19014:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19018:	ldr	r4, [pc, #2112]	; 19860 <UnityAssertEqualStringArray@@Base+0x84c>
   1901c:	strd	r6, [sp, #8]
   19020:	ldr	ip, [pc, #2108]	; 19864 <UnityAssertEqualStringArray@@Base+0x850>
   19024:	strd	r8, [sp, #16]
   19028:	strd	sl, [sp, #24]
   1902c:	add	r4, pc, r4
   19030:	str	lr, [sp, #32]
   19034:	sub	sp, sp, #76	; 0x4c
   19038:	str	r4, [sp, #64]	; 0x40
   1903c:	ldr	ip, [r4, ip]
   19040:	str	ip, [sp, #36]	; 0x24
   19044:	ldr	ip, [ip, #32]
   19048:	cmp	ip, #0
   1904c:	bne	195e4 <UnityAssertEqualStringArray@@Base+0x5d0>
   19050:	ldr	ip, [sp, #36]	; 0x24
   19054:	ldr	r7, [ip, #36]	; 0x24
   19058:	cmp	r7, #0
   1905c:	bne	192d8 <UnityAssertEqualStringArray@@Base+0x2c4>
   19060:	ldr	r4, [pc, #2048]	; 19868 <UnityAssertEqualStringArray@@Base+0x854>
   19064:	mov	lr, r2
   19068:	str	lr, [sp, #28]
   1906c:	str	r3, [sp, #68]	; 0x44
   19070:	add	r4, pc, r4
   19074:	add	r4, r4, #2256	; 0x8d0
   19078:	ldr	r2, [r4, #16]
   1907c:	ldr	ip, [r4, #20]
   19080:	adds	r2, r2, #1
   19084:	adc	ip, ip, #0
   19088:	cmp	lr, #0
   1908c:	str	r2, [r4, #16]
   19090:	str	ip, [r4, #20]
   19094:	beq	197c4 <UnityAssertEqualStringArray@@Base+0x7b0>
   19098:	ldr	r2, [sp, #112]	; 0x70
   1909c:	mov	r6, r0
   190a0:	mov	r5, r1
   190a4:	bl	16588 <UnityPrint@@Base+0x8bc>
   190a8:	ldr	r3, [r4, #56]	; 0x38
   190ac:	ldr	r2, [r4, #60]	; 0x3c
   190b0:	adds	r3, r3, #1
   190b4:	adc	r2, r2, #0
   190b8:	cmp	r0, #1
   190bc:	str	r3, [r4, #56]	; 0x38
   190c0:	str	r2, [r4, #60]	; 0x3c
   190c4:	beq	19608 <UnityAssertEqualStringArray@@Base+0x5f4>
   190c8:	ldr	r3, [sp, #36]	; 0x24
   190cc:	mov	r1, r5
   190d0:	mov	r0, r6
   190d4:	mov	r6, r7
   190d8:	str	r7, [sp, #4]
   190dc:	ldr	sl, [r4, #88]	; 0x58
   190e0:	str	r7, [sp, #24]
   190e4:	ldr	r9, [r4, #92]	; 0x5c
   190e8:	str	r7, [sp, #48]	; 0x30
   190ec:	ldr	r3, [r3, #32]
   190f0:	ldr	r5, [r4, #96]	; 0x60
   190f4:	ldr	r8, [r4, #100]	; 0x64
   190f8:	str	r3, [sp, #32]
   190fc:	ldr	r3, [r4, #72]	; 0x48
   19100:	str	r7, [sp, #60]	; 0x3c
   19104:	str	r3, [sp, #8]
   19108:	ldr	r3, [r4, #76]	; 0x4c
   1910c:	str	r3, [sp, #12]
   19110:	ldr	r3, [r4, #104]	; 0x68
   19114:	str	r3, [sp, #16]
   19118:	ldr	r3, [r4, #108]	; 0x6c
   1911c:	str	r3, [sp, #20]
   19120:	ldr	r3, [r4, #120]	; 0x78
   19124:	str	r3, [sp, #52]	; 0x34
   19128:	ldr	r3, [r4, #124]	; 0x7c
   1912c:	str	r3, [sp, #56]	; 0x38
   19130:	strd	r0, [sp, #40]	; 0x28
   19134:	ldr	lr, [r0], #4
   19138:	ldr	r4, [r1], #4
   1913c:	cmp	lr, #0
   19140:	beq	19424 <UnityAssertEqualStringArray@@Base+0x410>
   19144:	cmp	r4, #0
   19148:	bne	19314 <UnityAssertEqualStringArray@@Base+0x300>
   1914c:	cmp	r6, #0
   19150:	beq	19164 <UnityAssertEqualStringArray@@Base+0x150>
   19154:	ldr	r3, [pc, #1808]	; 1986c <UnityAssertEqualStringArray@@Base+0x858>
   19158:	add	r3, pc, r3
   1915c:	str	sl, [r3, #2344]	; 0x928
   19160:	str	r9, [r3, #2348]	; 0x92c
   19164:	ldr	r3, [sp, #60]	; 0x3c
   19168:	cmp	r3, #0
   1916c:	beq	19180 <UnityAssertEqualStringArray@@Base+0x16c>
   19170:	ldr	r3, [pc, #1784]	; 19870 <UnityAssertEqualStringArray@@Base+0x85c>
   19174:	add	r3, pc, r3
   19178:	str	r5, [r3, #2352]	; 0x930
   1917c:	str	r8, [r3, #2356]	; 0x934
   19180:	ldr	r3, [sp, #4]
   19184:	cmp	r3, #0
   19188:	beq	191a4 <UnityAssertEqualStringArray@@Base+0x190>
   1918c:	ldr	r3, [pc, #1760]	; 19874 <UnityAssertEqualStringArray@@Base+0x860>
   19190:	ldr	r2, [sp, #16]
   19194:	add	r3, pc, r3
   19198:	str	r2, [r3, #2360]	; 0x938
   1919c:	ldr	r2, [sp, #20]
   191a0:	str	r2, [r3, #2364]	; 0x93c
   191a4:	ldr	r3, [sp, #24]
   191a8:	cmp	r3, #0
   191ac:	beq	191c8 <UnityAssertEqualStringArray@@Base+0x1b4>
   191b0:	ldr	r3, [pc, #1728]	; 19878 <UnityAssertEqualStringArray@@Base+0x864>
   191b4:	ldr	r2, [sp, #8]
   191b8:	add	r3, pc, r3
   191bc:	str	r2, [r3, #2328]	; 0x918
   191c0:	ldr	r2, [sp, #12]
   191c4:	str	r2, [r3, #2332]	; 0x91c
   191c8:	ldr	r3, [sp, #48]	; 0x30
   191cc:	cmp	r3, #0
   191d0:	beq	191ec <UnityAssertEqualStringArray@@Base+0x1d8>
   191d4:	ldr	r3, [pc, #1696]	; 1987c <UnityAssertEqualStringArray@@Base+0x868>
   191d8:	ldr	r2, [sp, #52]	; 0x34
   191dc:	add	r3, pc, r3
   191e0:	str	r2, [r3, #2376]	; 0x948
   191e4:	ldr	r2, [sp, #56]	; 0x38
   191e8:	str	r2, [r3, #2380]	; 0x94c
   191ec:	ldr	r3, [pc, #1676]	; 19880 <UnityAssertEqualStringArray@@Base+0x86c>
   191f0:	mov	r2, #1
   191f4:	ldr	r1, [sp, #36]	; 0x24
   191f8:	add	r3, pc, r3
   191fc:	str	r2, [r1, #32]
   19200:	ldr	r2, [r3, #2368]	; 0x940
   19204:	ldr	r1, [r3, #2372]	; 0x944
   19208:	adds	r2, r2, #1
   1920c:	adc	r1, r1, #0
   19210:	str	r2, [r3, #2368]	; 0x940
   19214:	str	r1, [r3, #2372]	; 0x944
   19218:	ldr	r4, [pc, #1636]	; 19884 <UnityAssertEqualStringArray@@Base+0x870>
   1921c:	ldr	r0, [sp, #112]	; 0x70
   19220:	add	r4, pc, r4
   19224:	add	r4, r4, #2256	; 0x8d0
   19228:	ldr	r3, [r4, #128]	; 0x80
   1922c:	ldr	r2, [r4, #132]	; 0x84
   19230:	adds	r3, r3, #1
   19234:	adc	r2, r2, #0
   19238:	str	r3, [r4, #128]	; 0x80
   1923c:	str	r2, [r4, #132]	; 0x84
   19240:	bl	164b4 <UnityPrint@@Base+0x7e8>
   19244:	ldr	r3, [r4, #136]	; 0x88
   19248:	ldr	r2, [r4, #140]	; 0x8c
   1924c:	ldr	r1, [sp, #28]
   19250:	adds	r3, r3, #1
   19254:	adc	r2, r2, #0
   19258:	str	r3, [r4, #136]	; 0x88
   1925c:	cmp	r1, #1
   19260:	str	r2, [r4, #140]	; 0x8c
   19264:	bhi	196b8 <UnityAssertEqualStringArray@@Base+0x6a4>
   19268:	ldr	r3, [sp, #44]	; 0x2c
   1926c:	ldr	r4, [pc, #1556]	; 19888 <UnityAssertEqualStringArray@@Base+0x874>
   19270:	ldr	r1, [r3]
   19274:	ldr	r3, [sp, #40]	; 0x28
   19278:	add	r4, pc, r4
   1927c:	add	r4, r4, #2256	; 0x8d0
   19280:	ldr	r0, [r3]
   19284:	bl	15f40 <UnityPrint@@Base+0x274>
   19288:	ldr	r3, [r4, #168]	; 0xa8
   1928c:	ldr	r2, [r4, #172]	; 0xac
   19290:	ldr	r0, [sp, #68]	; 0x44
   19294:	adds	r3, r3, #1
   19298:	adc	r2, r2, #0
   1929c:	str	r3, [r4, #168]	; 0xa8
   192a0:	str	r2, [r4, #172]	; 0xac
   192a4:	bl	16180 <UnityPrint@@Base+0x4b4>
   192a8:	ldr	r3, [r4, #176]	; 0xb0
   192ac:	mov	ip, #1
   192b0:	mov	r1, ip
   192b4:	ldr	r2, [r4, #180]	; 0xb4
   192b8:	ldr	lr, [sp, #36]	; 0x24
   192bc:	adds	r3, r3, ip
   192c0:	adc	r2, r2, #0
   192c4:	str	r3, [r4, #176]	; 0xb0
   192c8:	add	r0, lr, #40	; 0x28
   192cc:	str	ip, [lr, #32]
   192d0:	str	r2, [r4, #180]	; 0xb4
   192d4:	bl	11fbc <longjmp@plt>
   192d8:	ldr	r3, [pc, #1452]	; 1988c <UnityAssertEqualStringArray@@Base+0x878>
   192dc:	add	r3, pc, r3
   192e0:	ldr	r2, [r3, #2264]	; 0x8d8
   192e4:	ldr	r1, [r3, #2268]	; 0x8dc
   192e8:	adds	r2, r2, #1
   192ec:	adc	r1, r1, #0
   192f0:	str	r2, [r3, #2264]	; 0x8d8
   192f4:	str	r1, [r3, #2268]	; 0x8dc
   192f8:	add	sp, sp, #76	; 0x4c
   192fc:	ldrd	r4, [sp]
   19300:	ldrd	r6, [sp, #8]
   19304:	ldrd	r8, [sp, #16]
   19308:	ldrd	sl, [sp, #24]
   1930c:	add	sp, sp, #32
   19310:	pop	{pc}		; (ldr pc, [sp], #4)
   19314:	mov	r3, sl
   19318:	mov	r2, r9
   1931c:	sub	lr, lr, #1
   19320:	sub	r4, r4, #1
   19324:	ldrb	ip, [lr, #1]!
   19328:	mov	sl, r3
   1932c:	mov	r9, r2
   19330:	ldrb	fp, [r4, #1]!
   19334:	cmp	ip, #0
   19338:	bne	1940c <UnityAssertEqualStringArray@@Base+0x3f8>
   1933c:	adds	r5, r5, #1
   19340:	adc	r8, r8, #0
   19344:	cmp	fp, #0
   19348:	beq	19528 <UnityAssertEqualStringArray@@Base+0x514>
   1934c:	cmp	r6, #0
   19350:	beq	19364 <UnityAssertEqualStringArray@@Base+0x350>
   19354:	ldr	r1, [pc, #1332]	; 19890 <UnityAssertEqualStringArray@@Base+0x87c>
   19358:	add	r1, pc, r1
   1935c:	str	r3, [r1, #2344]	; 0x928
   19360:	str	r2, [r1, #2348]	; 0x92c
   19364:	ldr	r3, [pc, #1320]	; 19894 <UnityAssertEqualStringArray@@Base+0x880>
   19368:	ldr	r2, [sp, #4]
   1936c:	add	r3, pc, r3
   19370:	add	r3, r3, #2256	; 0x8d0
   19374:	cmp	r2, #0
   19378:	str	r5, [r3, #96]	; 0x60
   1937c:	str	r8, [r3, #100]	; 0x64
   19380:	beq	19394 <UnityAssertEqualStringArray@@Base+0x380>
   19384:	ldr	r2, [sp, #16]
   19388:	str	r2, [r3, #104]	; 0x68
   1938c:	ldr	r2, [sp, #20]
   19390:	str	r2, [r3, #108]	; 0x6c
   19394:	ldr	r3, [sp, #24]
   19398:	cmp	r3, #0
   1939c:	beq	193b8 <UnityAssertEqualStringArray@@Base+0x3a4>
   193a0:	ldr	r3, [pc, #1264]	; 19898 <UnityAssertEqualStringArray@@Base+0x884>
   193a4:	ldr	r2, [sp, #8]
   193a8:	add	r3, pc, r3
   193ac:	str	r2, [r3, #2328]	; 0x918
   193b0:	ldr	r2, [sp, #12]
   193b4:	str	r2, [r3, #2332]	; 0x91c
   193b8:	ldr	r3, [sp, #48]	; 0x30
   193bc:	cmp	r3, #0
   193c0:	beq	193dc <UnityAssertEqualStringArray@@Base+0x3c8>
   193c4:	ldr	r3, [pc, #1232]	; 1989c <UnityAssertEqualStringArray@@Base+0x888>
   193c8:	add	r3, pc, r3
   193cc:	ldr	r2, [sp, #52]	; 0x34
   193d0:	str	r2, [r3, #2376]	; 0x948
   193d4:	ldr	r2, [sp, #56]	; 0x38
   193d8:	str	r2, [r3, #2380]	; 0x94c
   193dc:	ldr	r3, [pc, #1212]	; 198a0 <UnityAssertEqualStringArray@@Base+0x88c>
   193e0:	mov	r2, #1
   193e4:	ldr	r1, [sp, #36]	; 0x24
   193e8:	add	r3, pc, r3
   193ec:	str	r2, [r1, #32]
   193f0:	ldr	r2, [r3, #2336]	; 0x920
   193f4:	ldr	r1, [r3, #2340]	; 0x924
   193f8:	adds	r2, r2, #1
   193fc:	adc	r1, r1, #0
   19400:	str	r2, [r3, #2336]	; 0x920
   19404:	str	r1, [r3, #2340]	; 0x924
   19408:	b	19218 <UnityAssertEqualStringArray@@Base+0x204>
   1940c:	adds	r3, r3, #1
   19410:	adc	r2, r2, #0
   19414:	cmp	ip, fp
   19418:	bne	19624 <UnityAssertEqualStringArray@@Base+0x610>
   1941c:	mov	r6, #1
   19420:	b	19324 <UnityAssertEqualStringArray@@Base+0x310>
   19424:	ldr	r3, [sp, #8]
   19428:	adds	r3, r3, #1
   1942c:	str	r3, [sp, #8]
   19430:	ldr	r3, [sp, #12]
   19434:	adc	r3, r3, #0
   19438:	cmp	r4, #0
   1943c:	str	r3, [sp, #12]
   19440:	bne	19550 <UnityAssertEqualStringArray@@Base+0x53c>
   19444:	ldr	r3, [sp, #52]	; 0x34
   19448:	ldr	r2, [sp, #56]	; 0x38
   1944c:	adds	r3, r3, #1
   19450:	adc	r2, r2, #0
   19454:	str	r3, [sp, #52]	; 0x34
   19458:	mov	r3, #1
   1945c:	str	r3, [sp, #24]
   19460:	str	r3, [sp, #48]	; 0x30
   19464:	str	r2, [sp, #56]	; 0x38
   19468:	ldr	r3, [sp, #32]
   1946c:	cmp	r3, #0
   19470:	bne	19720 <UnityAssertEqualStringArray@@Base+0x70c>
   19474:	ldr	r3, [sp, #28]
   19478:	add	r7, r7, #1
   1947c:	cmp	r3, r7
   19480:	bne	19130 <UnityAssertEqualStringArray@@Base+0x11c>
   19484:	cmp	r6, #0
   19488:	beq	1949c <UnityAssertEqualStringArray@@Base+0x488>
   1948c:	ldr	r3, [pc, #1040]	; 198a4 <UnityAssertEqualStringArray@@Base+0x890>
   19490:	add	r3, pc, r3
   19494:	str	sl, [r3, #2344]	; 0x928
   19498:	str	r9, [r3, #2348]	; 0x92c
   1949c:	ldr	r3, [sp, #60]	; 0x3c
   194a0:	cmp	r3, #0
   194a4:	beq	194b8 <UnityAssertEqualStringArray@@Base+0x4a4>
   194a8:	ldr	r3, [pc, #1016]	; 198a8 <UnityAssertEqualStringArray@@Base+0x894>
   194ac:	add	r3, pc, r3
   194b0:	str	r5, [r3, #2352]	; 0x930
   194b4:	str	r8, [r3, #2356]	; 0x934
   194b8:	ldr	r3, [sp, #4]
   194bc:	cmp	r3, #0
   194c0:	beq	194dc <UnityAssertEqualStringArray@@Base+0x4c8>
   194c4:	ldr	r3, [pc, #992]	; 198ac <UnityAssertEqualStringArray@@Base+0x898>
   194c8:	ldr	r2, [sp, #16]
   194cc:	add	r3, pc, r3
   194d0:	str	r2, [r3, #2360]	; 0x938
   194d4:	ldr	r2, [sp, #20]
   194d8:	str	r2, [r3, #2364]	; 0x93c
   194dc:	ldr	r3, [sp, #24]
   194e0:	cmp	r3, #0
   194e4:	beq	19500 <UnityAssertEqualStringArray@@Base+0x4ec>
   194e8:	ldr	r3, [pc, #960]	; 198b0 <UnityAssertEqualStringArray@@Base+0x89c>
   194ec:	ldr	r2, [sp, #8]
   194f0:	add	r3, pc, r3
   194f4:	str	r2, [r3, #2328]	; 0x918
   194f8:	ldr	r2, [sp, #12]
   194fc:	str	r2, [r3, #2332]	; 0x91c
   19500:	ldr	r3, [sp, #48]	; 0x30
   19504:	cmp	r3, #0
   19508:	beq	192f8 <UnityAssertEqualStringArray@@Base+0x2e4>
   1950c:	ldr	r3, [pc, #928]	; 198b4 <UnityAssertEqualStringArray@@Base+0x8a0>
   19510:	ldr	r2, [sp, #52]	; 0x34
   19514:	add	r3, pc, r3
   19518:	str	r2, [r3, #2376]	; 0x948
   1951c:	ldr	r2, [sp, #56]	; 0x38
   19520:	str	r2, [r3, #2380]	; 0x94c
   19524:	b	192f8 <UnityAssertEqualStringArray@@Base+0x2e4>
   19528:	ldr	r3, [sp, #16]
   1952c:	ldr	r2, [sp, #20]
   19530:	adds	r3, r3, #1
   19534:	adc	r2, r2, #0
   19538:	str	r3, [sp, #16]
   1953c:	mov	r3, #1
   19540:	str	r3, [sp, #4]
   19544:	str	r2, [sp, #20]
   19548:	str	r3, [sp, #60]	; 0x3c
   1954c:	b	19468 <UnityAssertEqualStringArray@@Base+0x454>
   19550:	cmp	r6, #0
   19554:	beq	19568 <UnityAssertEqualStringArray@@Base+0x554>
   19558:	ldr	r3, [pc, #856]	; 198b8 <UnityAssertEqualStringArray@@Base+0x8a4>
   1955c:	add	r3, pc, r3
   19560:	str	sl, [r3, #2344]	; 0x928
   19564:	str	r9, [r3, #2348]	; 0x92c
   19568:	ldr	r3, [sp, #60]	; 0x3c
   1956c:	cmp	r3, #0
   19570:	beq	19584 <UnityAssertEqualStringArray@@Base+0x570>
   19574:	ldr	r3, [pc, #832]	; 198bc <UnityAssertEqualStringArray@@Base+0x8a8>
   19578:	add	r3, pc, r3
   1957c:	str	r5, [r3, #2352]	; 0x930
   19580:	str	r8, [r3, #2356]	; 0x934
   19584:	ldr	r3, [sp, #4]
   19588:	cmp	r3, #0
   1958c:	beq	195a8 <UnityAssertEqualStringArray@@Base+0x594>
   19590:	ldr	r3, [pc, #808]	; 198c0 <UnityAssertEqualStringArray@@Base+0x8ac>
   19594:	ldr	r2, [sp, #16]
   19598:	add	r3, pc, r3
   1959c:	str	r2, [r3, #2360]	; 0x938
   195a0:	ldr	r2, [sp, #20]
   195a4:	str	r2, [r3, #2364]	; 0x93c
   195a8:	ldr	r2, [sp, #48]	; 0x30
   195ac:	ldr	r3, [pc, #784]	; 198c4 <UnityAssertEqualStringArray@@Base+0x8b0>
   195b0:	cmp	r2, #0
   195b4:	ldr	r2, [sp, #8]
   195b8:	add	r3, pc, r3
   195bc:	add	r3, r3, #2256	; 0x8d0
   195c0:	str	r2, [r3, #72]	; 0x48
   195c4:	ldr	r2, [sp, #12]
   195c8:	str	r2, [r3, #76]	; 0x4c
   195cc:	beq	191ec <UnityAssertEqualStringArray@@Base+0x1d8>
   195d0:	ldr	r2, [sp, #52]	; 0x34
   195d4:	str	r2, [r3, #120]	; 0x78
   195d8:	ldr	r2, [sp, #56]	; 0x38
   195dc:	str	r2, [r3, #124]	; 0x7c
   195e0:	b	191ec <UnityAssertEqualStringArray@@Base+0x1d8>
   195e4:	ldr	r3, [pc, #732]	; 198c8 <UnityAssertEqualStringArray@@Base+0x8b4>
   195e8:	add	r3, pc, r3
   195ec:	ldr	r2, [r3, #2256]	; 0x8d0
   195f0:	ldr	r1, [r3, #2260]	; 0x8d4
   195f4:	adds	r2, r2, #1
   195f8:	adc	r1, r1, #0
   195fc:	str	r2, [r3, #2256]	; 0x8d0
   19600:	str	r1, [r3, #2260]	; 0x8d4
   19604:	b	192f8 <UnityAssertEqualStringArray@@Base+0x2e4>
   19608:	ldr	r3, [r4, #64]	; 0x40
   1960c:	ldr	r2, [r4, #68]	; 0x44
   19610:	adds	r3, r3, #1
   19614:	adc	r2, r2, #0
   19618:	str	r3, [r4, #64]	; 0x40
   1961c:	str	r2, [r4, #68]	; 0x44
   19620:	b	192f8 <UnityAssertEqualStringArray@@Base+0x2e4>
   19624:	cmp	r6, #0
   19628:	beq	1963c <UnityAssertEqualStringArray@@Base+0x628>
   1962c:	ldr	r3, [pc, #664]	; 198cc <UnityAssertEqualStringArray@@Base+0x8b8>
   19630:	add	r3, pc, r3
   19634:	str	sl, [r3, #2344]	; 0x928
   19638:	str	r9, [r3, #2348]	; 0x92c
   1963c:	ldr	r3, [sp, #60]	; 0x3c
   19640:	cmp	r3, #0
   19644:	beq	19658 <UnityAssertEqualStringArray@@Base+0x644>
   19648:	ldr	r3, [pc, #640]	; 198d0 <UnityAssertEqualStringArray@@Base+0x8bc>
   1964c:	add	r3, pc, r3
   19650:	str	r5, [r3, #2352]	; 0x930
   19654:	str	r8, [r3, #2356]	; 0x934
   19658:	ldr	r3, [sp, #4]
   1965c:	cmp	r3, #0
   19660:	beq	1967c <UnityAssertEqualStringArray@@Base+0x668>
   19664:	ldr	r3, [pc, #616]	; 198d4 <UnityAssertEqualStringArray@@Base+0x8c0>
   19668:	ldr	r2, [sp, #16]
   1966c:	add	r3, pc, r3
   19670:	str	r2, [r3, #2360]	; 0x938
   19674:	ldr	r2, [sp, #20]
   19678:	str	r2, [r3, #2364]	; 0x93c
   1967c:	ldr	r3, [sp, #24]
   19680:	cmp	r3, #0
   19684:	beq	196a0 <UnityAssertEqualStringArray@@Base+0x68c>
   19688:	ldr	r3, [pc, #584]	; 198d8 <UnityAssertEqualStringArray@@Base+0x8c4>
   1968c:	ldr	r2, [sp, #8]
   19690:	add	r3, pc, r3
   19694:	str	r2, [r3, #2328]	; 0x918
   19698:	ldr	r2, [sp, #12]
   1969c:	str	r2, [r3, #2332]	; 0x91c
   196a0:	ldr	r3, [sp, #48]	; 0x30
   196a4:	cmp	r3, #0
   196a8:	beq	193dc <UnityAssertEqualStringArray@@Base+0x3c8>
   196ac:	ldr	r3, [pc, #552]	; 198dc <UnityAssertEqualStringArray@@Base+0x8c8>
   196b0:	add	r3, pc, r3
   196b4:	b	193cc <UnityAssertEqualStringArray@@Base+0x3b8>
   196b8:	ldr	r3, [r4, #144]	; 0x90
   196bc:	ldr	r2, [pc, #540]	; 198e0 <UnityAssertEqualStringArray@@Base+0x8cc>
   196c0:	ldr	r1, [r4, #148]	; 0x94
   196c4:	adds	r3, r3, #1
   196c8:	str	r3, [r4, #144]	; 0x90
   196cc:	mov	r3, r2
   196d0:	ldr	r2, [sp, #64]	; 0x40
   196d4:	adc	r1, r1, #0
   196d8:	str	r1, [r4, #148]	; 0x94
   196dc:	ldr	r0, [r2, r3]
   196e0:	bl	15ccc <UnityPrint@@Base>
   196e4:	ldr	r3, [r4, #152]	; 0x98
   196e8:	mov	r0, r7
   196ec:	ldr	r2, [r4, #156]	; 0x9c
   196f0:	adds	r3, r3, #1
   196f4:	adc	r2, r2, #0
   196f8:	str	r3, [r4, #152]	; 0x98
   196fc:	str	r2, [r4, #156]	; 0x9c
   19700:	bl	155bc <UnityPrintNumberUnsigned@@Base>
   19704:	ldr	r3, [r4, #160]	; 0xa0
   19708:	ldr	r2, [r4, #164]	; 0xa4
   1970c:	adds	r3, r3, #1
   19710:	adc	r2, r2, #0
   19714:	str	r3, [r4, #160]	; 0xa0
   19718:	str	r2, [r4, #164]	; 0xa4
   1971c:	b	19268 <UnityAssertEqualStringArray@@Base+0x254>
   19720:	cmp	r6, #0
   19724:	beq	19738 <UnityAssertEqualStringArray@@Base+0x724>
   19728:	ldr	r3, [pc, #436]	; 198e4 <UnityAssertEqualStringArray@@Base+0x8d0>
   1972c:	add	r3, pc, r3
   19730:	str	sl, [r3, #2344]	; 0x928
   19734:	str	r9, [r3, #2348]	; 0x92c
   19738:	ldr	r3, [sp, #60]	; 0x3c
   1973c:	cmp	r3, #0
   19740:	beq	19754 <UnityAssertEqualStringArray@@Base+0x740>
   19744:	ldr	r3, [pc, #412]	; 198e8 <UnityAssertEqualStringArray@@Base+0x8d4>
   19748:	add	r3, pc, r3
   1974c:	str	r5, [r3, #2352]	; 0x930
   19750:	str	r8, [r3, #2356]	; 0x934
   19754:	ldr	r3, [sp, #4]
   19758:	cmp	r3, #0
   1975c:	beq	19778 <UnityAssertEqualStringArray@@Base+0x764>
   19760:	ldr	r3, [pc, #388]	; 198ec <UnityAssertEqualStringArray@@Base+0x8d8>
   19764:	ldr	r2, [sp, #16]
   19768:	add	r3, pc, r3
   1976c:	str	r2, [r3, #2360]	; 0x938
   19770:	ldr	r2, [sp, #20]
   19774:	str	r2, [r3, #2364]	; 0x93c
   19778:	ldr	r3, [sp, #24]
   1977c:	cmp	r3, #0
   19780:	beq	1979c <UnityAssertEqualStringArray@@Base+0x788>
   19784:	ldr	r3, [pc, #356]	; 198f0 <UnityAssertEqualStringArray@@Base+0x8dc>
   19788:	ldr	r2, [sp, #8]
   1978c:	add	r3, pc, r3
   19790:	str	r2, [r3, #2328]	; 0x918
   19794:	ldr	r2, [sp, #12]
   19798:	str	r2, [r3, #2332]	; 0x91c
   1979c:	ldr	r3, [sp, #48]	; 0x30
   197a0:	cmp	r3, #0
   197a4:	beq	19218 <UnityAssertEqualStringArray@@Base+0x204>
   197a8:	ldr	r3, [pc, #324]	; 198f4 <UnityAssertEqualStringArray@@Base+0x8e0>
   197ac:	ldr	r2, [sp, #52]	; 0x34
   197b0:	add	r3, pc, r3
   197b4:	str	r2, [r3, #2376]	; 0x948
   197b8:	ldr	r2, [sp, #56]	; 0x38
   197bc:	str	r2, [r3, #2380]	; 0x94c
   197c0:	b	19218 <UnityAssertEqualStringArray@@Base+0x204>
   197c4:	ldr	r3, [r4, #24]
   197c8:	ldr	r2, [r4, #28]
   197cc:	ldr	r0, [sp, #112]	; 0x70
   197d0:	adds	r3, r3, #1
   197d4:	adc	r2, r2, #0
   197d8:	str	r3, [r4, #24]
   197dc:	str	r2, [r4, #28]
   197e0:	bl	164b4 <UnityPrint@@Base+0x7e8>
   197e4:	ldr	r3, [r4, #32]
   197e8:	ldr	r2, [pc, #264]	; 198f8 <UnityAssertEqualStringArray@@Base+0x8e4>
   197ec:	ldr	r1, [r4, #36]	; 0x24
   197f0:	adds	r3, r3, #1
   197f4:	str	r3, [r4, #32]
   197f8:	mov	r3, r2
   197fc:	ldr	r2, [sp, #64]	; 0x40
   19800:	adc	r1, r1, #0
   19804:	str	r1, [r4, #36]	; 0x24
   19808:	ldr	r0, [r2, r3]
   1980c:	bl	15ccc <UnityPrint@@Base>
   19810:	ldr	r3, [r4, #40]	; 0x28
   19814:	ldr	r2, [r4, #44]	; 0x2c
   19818:	ldr	r0, [sp, #68]	; 0x44
   1981c:	adds	r3, r3, #1
   19820:	adc	r2, r2, #0
   19824:	str	r3, [r4, #40]	; 0x28
   19828:	str	r2, [r4, #44]	; 0x2c
   1982c:	bl	16180 <UnityPrint@@Base+0x4b4>
   19830:	ldr	r3, [r4, #48]	; 0x30
   19834:	mov	ip, #1
   19838:	mov	r1, ip
   1983c:	ldr	r2, [r4, #52]	; 0x34
   19840:	ldr	lr, [sp, #36]	; 0x24
   19844:	adds	r3, r3, ip
   19848:	adc	r2, r2, #0
   1984c:	str	r3, [r4, #48]	; 0x30
   19850:	add	r0, lr, #40	; 0x28
   19854:	str	ip, [lr, #32]
   19858:	str	r2, [r4, #52]	; 0x34
   1985c:	bl	11fbc <longjmp@plt>
   19860:	andeq	r5, r1, ip, asr #31
   19864:	andeq	r0, r0, r8, lsl r1
   19868:	andeq	r7, r1, r0, asr r5
   1986c:	andeq	r7, r1, r8, ror #8
   19870:	andeq	r7, r1, ip, asr #8
   19874:	andeq	r7, r1, ip, lsr #8
   19878:	andeq	r7, r1, r8, lsl #8
   1987c:	andeq	r7, r1, r4, ror #7
   19880:	andeq	r7, r1, r8, asr #7
   19884:	andeq	r7, r1, r0, lsr #7
   19888:	andeq	r7, r1, r8, asr #6
   1988c:	andeq	r7, r1, r4, ror #5
   19890:	andeq	r7, r1, r8, ror #4
   19894:	andeq	r7, r1, r4, asr r2
   19898:	andeq	r7, r1, r8, lsl r2
   1989c:	strdeq	r7, [r1], -r8
   198a0:	ldrdeq	r7, [r1], -r8
   198a4:	andeq	r7, r1, r0, lsr r1
   198a8:	andeq	r7, r1, r4, lsl r1
   198ac:	strdeq	r7, [r1], -r4
   198b0:	ldrdeq	r7, [r1], -r0
   198b4:	andeq	r7, r1, ip, lsr #1
   198b8:	andeq	r7, r1, r4, rrx
   198bc:	andeq	r7, r1, r8, asr #32
   198c0:	andeq	r7, r1, r8, lsr #32
   198c4:	andeq	r7, r1, r8
   198c8:	ldrdeq	r6, [r1], -r8
   198cc:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   198d0:	andeq	r6, r1, r4, ror pc
   198d4:	andeq	r6, r1, r4, asr pc
   198d8:	andeq	r6, r1, r0, lsr pc
   198dc:	andeq	r6, r1, r0, lsl pc
   198e0:	andeq	r0, r0, r4, lsl #2
   198e4:	muleq	r1, r4, lr
   198e8:	andeq	r6, r1, r8, ror lr
   198ec:	andeq	r6, r1, r8, asr lr
   198f0:	andeq	r6, r1, r4, lsr lr
   198f4:	andeq	r6, r1, r0, lsl lr
   198f8:	andeq	r0, r0, r4, ror #2

000198fc <UnityAssertEqualMemory@@Base>:
   198fc:	ldr	ip, [pc, #1252]	; 19de8 <UnityAssertEqualMemory@@Base+0x4ec>
   19900:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19904:	strd	r6, [sp, #8]
   19908:	strd	r8, [sp, #16]
   1990c:	mov	r8, r2
   19910:	strd	sl, [sp, #24]
   19914:	str	lr, [sp, #32]
   19918:	sub	sp, sp, #36	; 0x24
   1991c:	add	ip, pc, ip
   19920:	str	r3, [sp, #12]
   19924:	ldr	r3, [pc, #1216]	; 19dec <UnityAssertEqualMemory@@Base+0x4f0>
   19928:	str	ip, [sp, #20]
   1992c:	ldr	r3, [ip, r3]
   19930:	str	r3, [sp, #16]
   19934:	ldr	r3, [r3, #32]
   19938:	cmp	r3, #0
   1993c:	bne	19aa8 <UnityAssertEqualMemory@@Base+0x1ac>
   19940:	ldr	r3, [sp, #16]
   19944:	ldr	r3, [r3, #36]	; 0x24
   19948:	cmp	r3, #0
   1994c:	str	r3, [sp, #24]
   19950:	bne	19a6c <UnityAssertEqualMemory@@Base+0x170>
   19954:	ldr	r5, [pc, #1172]	; 19df0 <UnityAssertEqualMemory@@Base+0x4f4>
   19958:	clz	ip, r2
   1995c:	lsr	ip, ip, #5
   19960:	ldr	lr, [sp, #12]
   19964:	add	r5, pc, r5
   19968:	add	r5, r5, #2448	; 0x990
   1996c:	ldr	r3, [r5, #8]
   19970:	ldr	r2, [r5, #12]
   19974:	adds	r3, r3, #1
   19978:	adc	r2, r2, #0
   1997c:	cmp	lr, #0
   19980:	str	r3, [r5, #8]
   19984:	moveq	ip, #1
   19988:	cmp	ip, #0
   1998c:	str	r2, [r5, #12]
   19990:	str	ip, [sp, #4]
   19994:	bne	19d4c <UnityAssertEqualMemory@@Base+0x450>
   19998:	ldr	r3, [sp, #72]	; 0x48
   1999c:	mov	r4, r0
   199a0:	mov	r6, r1
   199a4:	ldr	r2, [sp, #76]	; 0x4c
   199a8:	bl	16588 <UnityPrint@@Base+0x8bc>
   199ac:	ldr	r3, [r5, #48]	; 0x30
   199b0:	ldr	r2, [r5, #52]	; 0x34
   199b4:	adds	r3, r3, #1
   199b8:	adc	r2, r2, #0
   199bc:	cmp	r0, #1
   199c0:	str	r3, [r5, #48]	; 0x30
   199c4:	str	r2, [r5, #52]	; 0x34
   199c8:	beq	19ae8 <UnityAssertEqualMemory@@Base+0x1ec>
   199cc:	ldr	r3, [sp, #12]
   199d0:	sub	r9, r8, #1
   199d4:	ldr	r2, [r5, #72]	; 0x48
   199d8:	ldr	r0, [r5, #76]	; 0x4c
   199dc:	sub	r3, r3, #1
   199e0:	mov	r7, r3
   199e4:	ldr	r1, [r5, #176]	; 0xb0
   199e8:	str	r3, [sp, #28]
   199ec:	sub	r3, r8, #2
   199f0:	ldr	r8, [r5, #180]	; 0xb4
   199f4:	str	r3, [sp, #8]
   199f8:	ldrb	ip, [r6]
   199fc:	ldrb	r3, [r4]
   19a00:	cmp	ip, r3
   19a04:	bne	19d24 <UnityAssertEqualMemory@@Base+0x428>
   19a08:	add	ip, r4, r9
   19a0c:	add	lr, r6, r9
   19a10:	ldr	r3, [sp, #8]
   19a14:	b	19a30 <UnityAssertEqualMemory@@Base+0x134>
   19a18:	ldrb	fp, [r4]
   19a1c:	sub	r5, r3, #1
   19a20:	ldrb	sl, [r6]
   19a24:	cmp	fp, sl
   19a28:	bne	19b04 <UnityAssertEqualMemory@@Base+0x208>
   19a2c:	mov	r3, r5
   19a30:	adds	r2, r2, #1
   19a34:	sub	r4, ip, r3
   19a38:	adc	r0, r0, #0
   19a3c:	cmn	r3, #1
   19a40:	sub	r6, lr, r3
   19a44:	bne	19a18 <UnityAssertEqualMemory@@Base+0x11c>
   19a48:	adds	r1, r1, #1
   19a4c:	mov	ip, #1
   19a50:	adc	r8, r8, #0
   19a54:	cmp	r7, #0
   19a58:	sub	r3, r7, #1
   19a5c:	str	ip, [sp, #4]
   19a60:	beq	19acc <UnityAssertEqualMemory@@Base+0x1d0>
   19a64:	mov	r7, r3
   19a68:	b	199f8 <UnityAssertEqualMemory@@Base+0xfc>
   19a6c:	ldr	r3, [pc, #896]	; 19df4 <UnityAssertEqualMemory@@Base+0x4f8>
   19a70:	add	r3, pc, r3
   19a74:	ldr	r2, [r3, #2448]	; 0x990
   19a78:	ldr	r1, [r3, #2452]	; 0x994
   19a7c:	adds	r2, r2, #1
   19a80:	adc	r1, r1, #0
   19a84:	str	r2, [r3, #2448]	; 0x990
   19a88:	str	r1, [r3, #2452]	; 0x994
   19a8c:	add	sp, sp, #36	; 0x24
   19a90:	ldrd	r4, [sp]
   19a94:	ldrd	r6, [sp, #8]
   19a98:	ldrd	r8, [sp, #16]
   19a9c:	ldrd	sl, [sp, #24]
   19aa0:	add	sp, sp, #32
   19aa4:	pop	{pc}		; (ldr pc, [sp], #4)
   19aa8:	ldr	r3, [pc, #840]	; 19df8 <UnityAssertEqualMemory@@Base+0x4fc>
   19aac:	add	r3, pc, r3
   19ab0:	ldr	r2, [r3, #2440]	; 0x988
   19ab4:	ldr	r1, [r3, #2444]	; 0x98c
   19ab8:	adds	r2, r2, #1
   19abc:	adc	r1, r1, #0
   19ac0:	str	r2, [r3, #2440]	; 0x988
   19ac4:	str	r1, [r3, #2444]	; 0x98c
   19ac8:	b	19a8c <UnityAssertEqualMemory@@Base+0x190>
   19acc:	ldr	r3, [pc, #808]	; 19dfc <UnityAssertEqualMemory@@Base+0x500>
   19ad0:	add	r3, pc, r3
   19ad4:	str	r2, [r3, #2520]	; 0x9d8
   19ad8:	str	r0, [r3, #2524]	; 0x9dc
   19adc:	str	r1, [r3, #2624]	; 0xa40
   19ae0:	str	r8, [r3, #2628]	; 0xa44
   19ae4:	b	19a8c <UnityAssertEqualMemory@@Base+0x190>
   19ae8:	ldr	r3, [r5, #56]	; 0x38
   19aec:	ldr	r2, [r5, #60]	; 0x3c
   19af0:	adds	r3, r3, #1
   19af4:	adc	r2, r2, #0
   19af8:	str	r3, [r5, #56]	; 0x38
   19afc:	str	r2, [r5, #60]	; 0x3c
   19b00:	b	19a8c <UnityAssertEqualMemory@@Base+0x190>
   19b04:	ldr	ip, [pc, #756]	; 19e00 <UnityAssertEqualMemory@@Base+0x504>
   19b08:	sub	r3, r9, r3
   19b0c:	ldr	lr, [sp, #4]
   19b10:	str	r3, [sp, #24]
   19b14:	add	ip, pc, ip
   19b18:	add	ip, ip, #2448	; 0x990
   19b1c:	cmp	lr, #0
   19b20:	str	r2, [ip, #72]	; 0x48
   19b24:	str	r0, [ip, #76]	; 0x4c
   19b28:	strne	r1, [ip, #176]	; 0xb0
   19b2c:	strne	r8, [ip, #180]	; 0xb4
   19b30:	ldr	r5, [pc, #716]	; 19e04 <UnityAssertEqualMemory@@Base+0x508>
   19b34:	ldr	r0, [sp, #76]	; 0x4c
   19b38:	add	r5, pc, r5
   19b3c:	add	r5, r5, #2448	; 0x990
   19b40:	ldr	r3, [r5, #64]	; 0x40
   19b44:	ldr	r2, [r5, #68]	; 0x44
   19b48:	adds	r3, r3, #1
   19b4c:	adc	r2, r2, #0
   19b50:	str	r3, [r5, #64]	; 0x40
   19b54:	str	r2, [r5, #68]	; 0x44
   19b58:	bl	164b4 <UnityPrint@@Base+0x7e8>
   19b5c:	ldr	r3, [r5, #80]	; 0x50
   19b60:	ldr	r1, [r5, #84]	; 0x54
   19b64:	ldr	r2, [pc, #668]	; 19e08 <UnityAssertEqualMemory@@Base+0x50c>
   19b68:	adds	r3, r3, #1
   19b6c:	ldr	r8, [sp, #20]
   19b70:	adc	r1, r1, #0
   19b74:	str	r3, [r5, #80]	; 0x50
   19b78:	str	r1, [r5, #84]	; 0x54
   19b7c:	ldr	r0, [r8, r2]
   19b80:	bl	15ccc <UnityPrint@@Base>
   19b84:	ldr	r3, [r5, #88]	; 0x58
   19b88:	ldr	r2, [r5, #92]	; 0x5c
   19b8c:	ldr	r1, [sp, #12]
   19b90:	adds	r3, r3, #1
   19b94:	adc	r2, r2, #0
   19b98:	str	r3, [r5, #88]	; 0x58
   19b9c:	cmp	r1, #1
   19ba0:	str	r2, [r5, #92]	; 0x5c
   19ba4:	bls	19c08 <UnityAssertEqualMemory@@Base+0x30c>
   19ba8:	ldr	r3, [r5, #96]	; 0x60
   19bac:	ldr	r1, [r5, #100]	; 0x64
   19bb0:	ldr	r2, [pc, #596]	; 19e0c <UnityAssertEqualMemory@@Base+0x510>
   19bb4:	adds	r3, r3, #1
   19bb8:	adc	r1, r1, #0
   19bbc:	str	r3, [r5, #96]	; 0x60
   19bc0:	str	r1, [r5, #100]	; 0x64
   19bc4:	ldr	r0, [r8, r2]
   19bc8:	bl	15ccc <UnityPrint@@Base>
   19bcc:	ldr	r2, [sp, #28]
   19bd0:	ldr	r3, [r5, #104]	; 0x68
   19bd4:	sub	r0, r2, r7
   19bd8:	ldr	r2, [r5, #108]	; 0x6c
   19bdc:	adds	r3, r3, #1
   19be0:	str	r3, [r5, #104]	; 0x68
   19be4:	adc	r2, r2, #0
   19be8:	str	r2, [r5, #108]	; 0x6c
   19bec:	bl	155bc <UnityPrintNumberUnsigned@@Base>
   19bf0:	ldr	r3, [r5, #112]	; 0x70
   19bf4:	ldr	r2, [r5, #116]	; 0x74
   19bf8:	adds	r3, r3, #1
   19bfc:	adc	r2, r2, #0
   19c00:	str	r3, [r5, #112]	; 0x70
   19c04:	str	r2, [r5, #116]	; 0x74
   19c08:	ldr	r5, [pc, #512]	; 19e10 <UnityAssertEqualMemory@@Base+0x514>
   19c0c:	ldr	r3, [pc, #512]	; 19e14 <UnityAssertEqualMemory@@Base+0x518>
   19c10:	ldr	r7, [sp, #20]
   19c14:	add	r5, pc, r5
   19c18:	add	r5, r5, #2448	; 0x990
   19c1c:	ldr	r0, [r7, r3]
   19c20:	bl	15ccc <UnityPrint@@Base>
   19c24:	ldr	r3, [r5, #120]	; 0x78
   19c28:	ldr	r2, [r5, #124]	; 0x7c
   19c2c:	ldr	r0, [sp, #24]
   19c30:	adds	r3, r3, #1
   19c34:	adc	r2, r2, #0
   19c38:	str	r3, [r5, #120]	; 0x78
   19c3c:	str	r2, [r5, #124]	; 0x7c
   19c40:	bl	155bc <UnityPrintNumberUnsigned@@Base>
   19c44:	ldr	r3, [r5, #128]	; 0x80
   19c48:	ldr	r1, [r5, #132]	; 0x84
   19c4c:	ldr	r2, [pc, #452]	; 19e18 <UnityAssertEqualMemory@@Base+0x51c>
   19c50:	adds	r3, r3, #1
   19c54:	adc	r1, r1, #0
   19c58:	str	r3, [r5, #128]	; 0x80
   19c5c:	str	r1, [r5, #132]	; 0x84
   19c60:	ldr	r0, [r7, r2]
   19c64:	bl	15ccc <UnityPrint@@Base>
   19c68:	ldr	r3, [r5, #136]	; 0x88
   19c6c:	mov	r1, #65	; 0x41
   19c70:	ldr	r2, [r5, #140]	; 0x8c
   19c74:	ldrb	r0, [r4]
   19c78:	adds	r3, r3, #1
   19c7c:	adc	r2, r2, #0
   19c80:	str	r3, [r5, #136]	; 0x88
   19c84:	str	r2, [r5, #140]	; 0x8c
   19c88:	bl	158dc <UnityPrintNumberByStyle@@Base>
   19c8c:	ldr	r3, [r5, #144]	; 0x90
   19c90:	ldr	r1, [r5, #148]	; 0x94
   19c94:	ldr	r2, [pc, #384]	; 19e1c <UnityAssertEqualMemory@@Base+0x520>
   19c98:	adds	r3, r3, #1
   19c9c:	adc	r1, r1, #0
   19ca0:	str	r3, [r5, #144]	; 0x90
   19ca4:	str	r1, [r5, #148]	; 0x94
   19ca8:	ldr	r0, [r7, r2]
   19cac:	bl	15ccc <UnityPrint@@Base>
   19cb0:	ldr	r3, [r5, #152]	; 0x98
   19cb4:	mov	r1, #65	; 0x41
   19cb8:	ldr	r2, [r5, #156]	; 0x9c
   19cbc:	ldrb	r0, [r6]
   19cc0:	adds	r3, r3, #1
   19cc4:	adc	r2, r2, #0
   19cc8:	str	r3, [r5, #152]	; 0x98
   19ccc:	str	r2, [r5, #156]	; 0x9c
   19cd0:	bl	158dc <UnityPrintNumberByStyle@@Base>
   19cd4:	ldr	r3, [r5, #160]	; 0xa0
   19cd8:	ldr	r2, [r5, #164]	; 0xa4
   19cdc:	ldr	r0, [sp, #72]	; 0x48
   19ce0:	adds	r3, r3, #1
   19ce4:	adc	r2, r2, #0
   19ce8:	str	r3, [r5, #160]	; 0xa0
   19cec:	str	r2, [r5, #164]	; 0xa4
   19cf0:	bl	16180 <UnityPrint@@Base+0x4b4>
   19cf4:	ldr	r3, [r5, #168]	; 0xa8
   19cf8:	mov	ip, #1
   19cfc:	mov	r1, ip
   19d00:	ldr	r2, [r5, #172]	; 0xac
   19d04:	ldr	lr, [sp, #16]
   19d08:	adds	r3, r3, ip
   19d0c:	adc	r2, r2, #0
   19d10:	str	r3, [r5, #168]	; 0xa8
   19d14:	add	r0, lr, #40	; 0x28
   19d18:	str	ip, [lr, #32]
   19d1c:	str	r2, [r5, #172]	; 0xac
   19d20:	bl	11fbc <longjmp@plt>
   19d24:	ldr	r3, [sp, #4]
   19d28:	cmp	r3, #0
   19d2c:	beq	19b30 <UnityAssertEqualMemory@@Base+0x234>
   19d30:	ldr	r3, [pc, #232]	; 19e20 <UnityAssertEqualMemory@@Base+0x524>
   19d34:	add	r3, pc, r3
   19d38:	str	r2, [r3, #2520]	; 0x9d8
   19d3c:	str	r0, [r3, #2524]	; 0x9dc
   19d40:	str	r1, [r3, #2624]	; 0xa40
   19d44:	str	r8, [r3, #2628]	; 0xa44
   19d48:	b	19b30 <UnityAssertEqualMemory@@Base+0x234>
   19d4c:	ldr	r3, [r5, #16]
   19d50:	ldr	r2, [r5, #20]
   19d54:	ldr	r0, [sp, #76]	; 0x4c
   19d58:	adds	r3, r3, #1
   19d5c:	adc	r2, r2, #0
   19d60:	str	r3, [r5, #16]
   19d64:	str	r2, [r5, #20]
   19d68:	bl	164b4 <UnityPrint@@Base+0x7e8>
   19d6c:	ldr	r3, [r5, #24]
   19d70:	ldr	r2, [pc, #172]	; 19e24 <UnityAssertEqualMemory@@Base+0x528>
   19d74:	ldr	r1, [r5, #28]
   19d78:	adds	r3, r3, #1
   19d7c:	str	r3, [r5, #24]
   19d80:	mov	r3, r2
   19d84:	ldr	r2, [sp, #20]
   19d88:	adc	r1, r1, #0
   19d8c:	str	r1, [r5, #28]
   19d90:	ldr	r0, [r2, r3]
   19d94:	bl	15ccc <UnityPrint@@Base>
   19d98:	ldr	r3, [r5, #32]
   19d9c:	ldr	r2, [r5, #36]	; 0x24
   19da0:	ldr	r0, [sp, #72]	; 0x48
   19da4:	adds	r3, r3, #1
   19da8:	adc	r2, r2, #0
   19dac:	str	r3, [r5, #32]
   19db0:	str	r2, [r5, #36]	; 0x24
   19db4:	bl	16180 <UnityPrint@@Base+0x4b4>
   19db8:	ldr	r3, [r5, #40]	; 0x28
   19dbc:	mov	ip, #1
   19dc0:	mov	r1, ip
   19dc4:	ldr	r2, [r5, #44]	; 0x2c
   19dc8:	ldr	lr, [sp, #16]
   19dcc:	adds	r3, r3, ip
   19dd0:	adc	r2, r2, #0
   19dd4:	str	r3, [r5, #40]	; 0x28
   19dd8:	add	r0, lr, #40	; 0x28
   19ddc:	str	ip, [lr, #32]
   19de0:	str	r2, [r5, #44]	; 0x2c
   19de4:	bl	11fbc <longjmp@plt>
   19de8:	ldrdeq	r5, [r1], -ip
   19dec:	andeq	r0, r0, r8, lsl r1
   19df0:	andeq	r6, r1, ip, asr ip
   19df4:	andeq	r6, r1, r0, asr fp
   19df8:	andeq	r6, r1, r4, lsl fp
   19dfc:	strdeq	r6, [r1], -r0
   19e00:	andeq	r6, r1, ip, lsr #21
   19e04:	andeq	r6, r1, r8, lsl #21
   19e08:	andeq	r0, r0, r8, asr #1
   19e0c:	andeq	r0, r0, r4, lsl #2
   19e10:	andeq	r6, r1, ip, lsr #19
   19e14:	andeq	r0, r0, ip, lsr #1
   19e18:	ldrdeq	r0, [r0], -r8
   19e1c:	andeq	r0, r0, r8, asr #2
   19e20:	andeq	r6, r1, ip, lsl #17
   19e24:	andeq	r0, r0, r4, ror #2

00019e28 <UnityFail@@Base>:
   19e28:	strd	r4, [sp, #-24]!	; 0xffffffe8
   19e2c:	ldr	r5, [pc, #704]	; 1a0f4 <UnityFail@@Base+0x2cc>
   19e30:	strd	r6, [sp, #8]
   19e34:	ldr	r3, [pc, #700]	; 1a0f8 <UnityFail@@Base+0x2d0>
   19e38:	str	r8, [sp, #16]
   19e3c:	str	lr, [sp, #20]
   19e40:	add	r5, pc, r5
   19e44:	ldr	r6, [r5, r3]
   19e48:	ldr	r3, [r6, #32]
   19e4c:	cmp	r3, #0
   19e50:	bne	19e98 <UnityFail@@Base+0x70>
   19e54:	ldr	r4, [pc, #672]	; 1a0fc <UnityFail@@Base+0x2d4>
   19e58:	ldr	ip, [r6, #36]	; 0x24
   19e5c:	add	r4, pc, r4
   19e60:	add	r4, r4, #2640	; 0xa50
   19e64:	ldr	r3, [r4]
   19e68:	ldr	r2, [r4, #4]
   19e6c:	adds	r3, r3, #1
   19e70:	adc	r2, r2, #0
   19e74:	cmp	ip, #0
   19e78:	str	r3, [r4]
   19e7c:	str	r2, [r4, #4]
   19e80:	beq	19ebc <UnityFail@@Base+0x94>
   19e84:	ldrd	r4, [sp]
   19e88:	ldrd	r6, [sp, #8]
   19e8c:	ldr	r8, [sp, #16]
   19e90:	add	sp, sp, #20
   19e94:	pop	{pc}		; (ldr pc, [sp], #4)
   19e98:	ldr	r3, [pc, #608]	; 1a100 <UnityFail@@Base+0x2d8>
   19e9c:	add	r3, pc, r3
   19ea0:	ldr	r2, [r3, #2632]	; 0xa48
   19ea4:	ldr	r1, [r3, #2636]	; 0xa4c
   19ea8:	adds	r2, r2, #1
   19eac:	adc	r1, r1, #0
   19eb0:	str	r2, [r3, #2632]	; 0xa48
   19eb4:	str	r1, [r3, #2636]	; 0xa4c
   19eb8:	b	19e84 <UnityFail@@Base+0x5c>
   19ebc:	ldr	r3, [r4, #8]
   19ec0:	mov	r7, r0
   19ec4:	ldr	r2, [r4, #12]
   19ec8:	ldr	r0, [r6]
   19ecc:	adds	r3, r3, #1
   19ed0:	adc	r2, r2, #0
   19ed4:	str	r3, [r4, #8]
   19ed8:	str	r2, [r4, #12]
   19edc:	bl	16378 <UnityPrint@@Base+0x6ac>
   19ee0:	ldr	r3, [r4, #16]
   19ee4:	ldr	r2, [r4, #20]
   19ee8:	adds	r3, r3, #1
   19eec:	adc	r2, r2, #0
   19ef0:	str	r3, [r4, #16]
   19ef4:	str	r2, [r4, #20]
   19ef8:	bl	1690c <UnityPrintFail@@Base>
   19efc:	cmp	r7, #0
   19f00:	beq	1a0bc <UnityFail@@Base+0x294>
   19f04:	ldr	r3, [r4, #24]
   19f08:	mov	r0, #58	; 0x3a
   19f0c:	ldr	r1, [r4, #28]
   19f10:	ldr	r2, [pc, #492]	; 1a104 <UnityFail@@Base+0x2dc>
   19f14:	adds	r3, r3, #1
   19f18:	adc	r1, r1, #0
   19f1c:	str	r3, [r4, #24]
   19f20:	str	r1, [r4, #28]
   19f24:	ldr	r8, [r5, r2]
   19f28:	ldr	r1, [r8]
   19f2c:	bl	120e8 <putc@plt>
   19f30:	ldr	r3, [r4, #40]	; 0x28
   19f34:	ldr	r2, [r4, #44]	; 0x2c
   19f38:	ldr	r1, [r6, #8]
   19f3c:	adds	r3, r3, #1
   19f40:	adc	r2, r2, #0
   19f44:	str	r3, [r4, #40]	; 0x28
   19f48:	cmp	r1, #0
   19f4c:	str	r2, [r4, #44]	; 0x2c
   19f50:	beq	1a02c <UnityFail@@Base+0x204>
   19f54:	ldr	r3, [r4, #48]	; 0x30
   19f58:	ldr	r1, [r4, #52]	; 0x34
   19f5c:	ldr	r2, [pc, #420]	; 1a108 <UnityFail@@Base+0x2e0>
   19f60:	adds	r3, r3, #1
   19f64:	adc	r1, r1, #0
   19f68:	str	r3, [r4, #48]	; 0x30
   19f6c:	str	r1, [r4, #52]	; 0x34
   19f70:	ldr	r0, [r5, r2]
   19f74:	bl	15ccc <UnityPrint@@Base>
   19f78:	ldr	r3, [r4, #56]	; 0x38
   19f7c:	ldr	r2, [r4, #60]	; 0x3c
   19f80:	ldr	r0, [r6, #8]
   19f84:	adds	r3, r3, #1
   19f88:	adc	r2, r2, #0
   19f8c:	str	r3, [r4, #56]	; 0x38
   19f90:	str	r2, [r4, #60]	; 0x3c
   19f94:	bl	15ccc <UnityPrint@@Base>
   19f98:	ldr	r3, [r6, #12]
   19f9c:	cmp	r3, #0
   19fa0:	beq	1a0d8 <UnityFail@@Base+0x2b0>
   19fa4:	ldr	r3, [r4, #64]	; 0x40
   19fa8:	ldr	r1, [r4, #68]	; 0x44
   19fac:	ldr	r2, [pc, #344]	; 1a10c <UnityFail@@Base+0x2e4>
   19fb0:	adds	r3, r3, #1
   19fb4:	adc	r1, r1, #0
   19fb8:	str	r3, [r4, #64]	; 0x40
   19fbc:	str	r1, [r4, #68]	; 0x44
   19fc0:	ldr	r0, [r5, r2]
   19fc4:	bl	15ccc <UnityPrint@@Base>
   19fc8:	ldr	r3, [r4, #80]	; 0x50
   19fcc:	ldr	r2, [r4, #84]	; 0x54
   19fd0:	ldr	r0, [r6, #12]
   19fd4:	adds	r3, r3, #1
   19fd8:	adc	r2, r2, #0
   19fdc:	str	r3, [r4, #80]	; 0x50
   19fe0:	str	r2, [r4, #84]	; 0x54
   19fe4:	bl	15ccc <UnityPrint@@Base>
   19fe8:	ldr	r3, [r4, #88]	; 0x58
   19fec:	ldr	r2, [r4, #92]	; 0x5c
   19ff0:	adds	r3, r3, #1
   19ff4:	adc	r2, r2, #0
   19ff8:	str	r3, [r4, #88]	; 0x58
   19ffc:	str	r2, [r4, #92]	; 0x5c
   1a000:	ldr	r3, [pc, #264]	; 1a110 <UnityFail@@Base+0x2e8>
   1a004:	ldr	r0, [r5, r3]
   1a008:	bl	15ccc <UnityPrint@@Base>
   1a00c:	ldr	r3, [pc, #256]	; 1a114 <UnityFail@@Base+0x2ec>
   1a010:	add	r3, pc, r3
   1a014:	ldr	r2, [r3, #2736]	; 0xab0
   1a018:	ldr	r1, [r3, #2740]	; 0xab4
   1a01c:	adds	r2, r2, #1
   1a020:	adc	r1, r1, #0
   1a024:	str	r2, [r3, #2736]	; 0xab0
   1a028:	str	r1, [r3, #2740]	; 0xab4
   1a02c:	ldrb	r3, [r7]
   1a030:	cmp	r3, #32
   1a034:	beq	1a080 <UnityFail@@Base+0x258>
   1a038:	ldr	r4, [pc, #216]	; 1a118 <UnityFail@@Base+0x2f0>
   1a03c:	mov	r0, #32
   1a040:	ldr	r1, [r8]
   1a044:	add	r4, pc, r4
   1a048:	add	r4, r4, #2640	; 0xa50
   1a04c:	ldr	r3, [r4, #104]	; 0x68
   1a050:	ldr	r2, [r4, #108]	; 0x6c
   1a054:	adds	r3, r3, #1
   1a058:	adc	r2, r2, #0
   1a05c:	str	r3, [r4, #104]	; 0x68
   1a060:	str	r2, [r4, #108]	; 0x6c
   1a064:	bl	120e8 <putc@plt>
   1a068:	ldr	r3, [r4, #112]	; 0x70
   1a06c:	ldr	r2, [r4, #116]	; 0x74
   1a070:	adds	r3, r3, #1
   1a074:	adc	r2, r2, #0
   1a078:	str	r3, [r4, #112]	; 0x70
   1a07c:	str	r2, [r4, #116]	; 0x74
   1a080:	mov	r0, r7
   1a084:	bl	15ccc <UnityPrint@@Base>
   1a088:	ldr	r3, [pc, #140]	; 1a11c <UnityFail@@Base+0x2f4>
   1a08c:	add	r3, pc, r3
   1a090:	ldr	r2, [r3, #2760]	; 0xac8
   1a094:	ldr	r1, [r3, #2764]	; 0xacc
   1a098:	adds	r2, r2, #1
   1a09c:	adc	r1, r1, #0
   1a0a0:	str	r2, [r3, #2760]	; 0xac8
   1a0a4:	str	r1, [r3, #2764]	; 0xacc
   1a0a8:	mov	r3, #1
   1a0ac:	add	r0, r6, #40	; 0x28
   1a0b0:	mov	r1, r3
   1a0b4:	str	r3, [r6, #32]
   1a0b8:	bl	11fbc <longjmp@plt>
   1a0bc:	ldr	r3, [r4, #32]
   1a0c0:	ldr	r2, [r4, #36]	; 0x24
   1a0c4:	adds	r3, r3, #1
   1a0c8:	adc	r2, r2, #0
   1a0cc:	str	r3, [r4, #32]
   1a0d0:	str	r2, [r4, #36]	; 0x24
   1a0d4:	b	1a0a8 <UnityFail@@Base+0x280>
   1a0d8:	ldr	r3, [r4, #72]	; 0x48
   1a0dc:	ldr	r2, [r4, #76]	; 0x4c
   1a0e0:	adds	r3, r3, #1
   1a0e4:	adc	r2, r2, #0
   1a0e8:	str	r3, [r4, #72]	; 0x48
   1a0ec:	str	r2, [r4, #76]	; 0x4c
   1a0f0:	b	1a000 <UnityFail@@Base+0x1d8>
   1a0f4:			; <UNDEFINED> instruction: 0x000151b8
   1a0f8:	andeq	r0, r0, r8, lsl r1
   1a0fc:	andeq	r6, r1, r4, ror #14
   1a100:	andeq	r6, r1, r4, lsr #14
   1a104:	andeq	r0, r0, ip, lsr r1
   1a108:	andeq	r0, r0, r4, asr #2
   1a10c:	andeq	r0, r0, r8, ror #1
   1a110:	andeq	r0, r0, r4, asr r1
   1a114:			; <UNDEFINED> instruction: 0x000165b0
   1a118:	andeq	r6, r1, ip, ror r5
   1a11c:	andeq	r6, r1, r4, lsr r5

0001a120 <UnityIgnore@@Base>:
   1a120:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1a124:	ldr	r5, [pc, #400]	; 1a2bc <UnityIgnore@@Base+0x19c>
   1a128:	strd	r6, [sp, #8]
   1a12c:	ldr	r3, [pc, #396]	; 1a2c0 <UnityIgnore@@Base+0x1a0>
   1a130:	str	r8, [sp, #16]
   1a134:	str	lr, [sp, #20]
   1a138:	add	r5, pc, r5
   1a13c:	ldr	r6, [r5, r3]
   1a140:	ldr	r3, [r6, #32]
   1a144:	cmp	r3, #0
   1a148:	bne	1a190 <UnityIgnore@@Base+0x70>
   1a14c:	ldr	r4, [pc, #368]	; 1a2c4 <UnityIgnore@@Base+0x1a4>
   1a150:	ldr	ip, [r6, #36]	; 0x24
   1a154:	add	r4, pc, r4
   1a158:	add	r4, r4, #2768	; 0xad0
   1a15c:	ldr	r3, [r4, #8]
   1a160:	ldr	r2, [r4, #12]
   1a164:	adds	r3, r3, #1
   1a168:	adc	r2, r2, #0
   1a16c:	cmp	ip, #0
   1a170:	str	r3, [r4, #8]
   1a174:	str	r2, [r4, #12]
   1a178:	beq	1a1b4 <UnityIgnore@@Base+0x94>
   1a17c:	ldrd	r4, [sp]
   1a180:	ldrd	r6, [sp, #8]
   1a184:	ldr	r8, [sp, #16]
   1a188:	add	sp, sp, #20
   1a18c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a190:	ldr	r3, [pc, #304]	; 1a2c8 <UnityIgnore@@Base+0x1a8>
   1a194:	add	r3, pc, r3
   1a198:	ldr	r2, [r3, #2768]	; 0xad0
   1a19c:	ldr	r1, [r3, #2772]	; 0xad4
   1a1a0:	adds	r2, r2, #1
   1a1a4:	adc	r1, r1, #0
   1a1a8:	str	r2, [r3, #2768]	; 0xad0
   1a1ac:	str	r1, [r3, #2772]	; 0xad4
   1a1b0:	b	1a17c <UnityIgnore@@Base+0x5c>
   1a1b4:	ldr	r3, [r4, #16]
   1a1b8:	mov	r7, r0
   1a1bc:	ldr	r2, [r4, #20]
   1a1c0:	ldr	r0, [r6]
   1a1c4:	adds	r3, r3, #1
   1a1c8:	adc	r2, r2, #0
   1a1cc:	str	r3, [r4, #16]
   1a1d0:	str	r2, [r4, #20]
   1a1d4:	bl	16378 <UnityPrint@@Base+0x6ac>
   1a1d8:	ldr	r3, [r4, #24]
   1a1dc:	ldr	r1, [r4, #28]
   1a1e0:	ldr	r2, [pc, #228]	; 1a2cc <UnityIgnore@@Base+0x1ac>
   1a1e4:	adds	r3, r3, #1
   1a1e8:	adc	r1, r1, #0
   1a1ec:	str	r3, [r4, #24]
   1a1f0:	str	r1, [r4, #28]
   1a1f4:	ldr	r0, [r5, r2]
   1a1f8:	bl	15ccc <UnityPrint@@Base>
   1a1fc:	cmp	r7, #0
   1a200:	beq	1a2a0 <UnityIgnore@@Base+0x180>
   1a204:	ldr	r3, [r4, #32]
   1a208:	mov	r0, #58	; 0x3a
   1a20c:	ldr	r1, [r4, #36]	; 0x24
   1a210:	ldr	r2, [pc, #184]	; 1a2d0 <UnityIgnore@@Base+0x1b0>
   1a214:	adds	r3, r3, #1
   1a218:	adc	r1, r1, #0
   1a21c:	str	r3, [r4, #32]
   1a220:	str	r1, [r4, #36]	; 0x24
   1a224:	ldr	r5, [r5, r2]
   1a228:	ldr	r1, [r5]
   1a22c:	bl	120e8 <putc@plt>
   1a230:	ldr	r3, [r4, #48]	; 0x30
   1a234:	mov	r0, #32
   1a238:	ldr	r2, [r4, #52]	; 0x34
   1a23c:	ldr	r1, [r5]
   1a240:	adds	r3, r3, #1
   1a244:	adc	r2, r2, #0
   1a248:	str	r3, [r4, #48]	; 0x30
   1a24c:	str	r2, [r4, #52]	; 0x34
   1a250:	bl	120e8 <putc@plt>
   1a254:	ldr	r3, [r4, #56]	; 0x38
   1a258:	mov	r0, r7
   1a25c:	ldr	r2, [r4, #60]	; 0x3c
   1a260:	adds	r3, r3, #1
   1a264:	adc	r2, r2, #0
   1a268:	str	r3, [r4, #56]	; 0x38
   1a26c:	str	r2, [r4, #60]	; 0x3c
   1a270:	bl	15ccc <UnityPrint@@Base>
   1a274:	ldr	r3, [r4, #64]	; 0x40
   1a278:	ldr	r2, [r4, #68]	; 0x44
   1a27c:	adds	r3, r3, #1
   1a280:	adc	r2, r2, #0
   1a284:	str	r3, [r4, #64]	; 0x40
   1a288:	str	r2, [r4, #68]	; 0x44
   1a28c:	mov	r3, #1
   1a290:	add	r0, r6, #40	; 0x28
   1a294:	mov	r1, r3
   1a298:	str	r3, [r6, #36]	; 0x24
   1a29c:	bl	11fbc <longjmp@plt>
   1a2a0:	ldr	r3, [r4, #40]	; 0x28
   1a2a4:	ldr	r2, [r4, #44]	; 0x2c
   1a2a8:	adds	r3, r3, #1
   1a2ac:	adc	r2, r2, #0
   1a2b0:	str	r3, [r4, #40]	; 0x28
   1a2b4:	str	r2, [r4, #44]	; 0x2c
   1a2b8:	b	1a28c <UnityIgnore@@Base+0x16c>
   1a2bc:	andeq	r4, r1, r0, asr #29
   1a2c0:	andeq	r0, r0, r8, lsl r1
   1a2c4:	andeq	r6, r1, ip, ror #8
   1a2c8:	andeq	r6, r1, ip, lsr #8
   1a2cc:	andeq	r0, r0, r8, ror r1
   1a2d0:	andeq	r0, r0, ip, lsr r1

0001a2d4 <setUp@@Base>:
   1a2d4:	ldr	r3, [pc, #28]	; 1a2f8 <setUp@@Base+0x24>
   1a2d8:	add	r3, pc, r3
   1a2dc:	ldr	r2, [r3, #2840]	; 0xb18
   1a2e0:	ldr	r1, [r3, #2844]	; 0xb1c
   1a2e4:	adds	r2, r2, #1
   1a2e8:	adc	r1, r1, #0
   1a2ec:	str	r2, [r3, #2840]	; 0xb18
   1a2f0:	str	r1, [r3, #2844]	; 0xb1c
   1a2f4:	bx	lr
   1a2f8:	andeq	r6, r1, r8, ror #5

0001a2fc <tearDown@@Base>:
   1a2fc:	ldr	r3, [pc, #28]	; 1a320 <tearDown@@Base+0x24>
   1a300:	add	r3, pc, r3
   1a304:	ldr	r2, [r3, #2848]	; 0xb20
   1a308:	ldr	r1, [r3, #2852]	; 0xb24
   1a30c:	adds	r2, r2, #1
   1a310:	adc	r1, r1, #0
   1a314:	str	r2, [r3, #2848]	; 0xb20
   1a318:	str	r1, [r3, #2852]	; 0xb24
   1a31c:	bx	lr
   1a320:	andeq	r6, r1, r0, asr #5

0001a324 <UnityDefaultTestRun@@Base>:
   1a324:	ldr	r3, [pc, #452]	; 1a4f0 <UnityDefaultTestRun@@Base+0x1cc>
   1a328:	strd	r4, [sp, #-12]!
   1a32c:	mov	r4, #0
   1a330:	str	lr, [sp, #8]
   1a334:	sub	sp, sp, #12
   1a338:	ldr	r5, [pc, #436]	; 1a4f4 <UnityDefaultTestRun@@Base+0x1d0>
   1a33c:	str	r0, [sp, #4]
   1a340:	add	r3, pc, r3
   1a344:	ldr	ip, [pc, #428]	; 1a4f8 <UnityDefaultTestRun@@Base+0x1d4>
   1a348:	ldr	r0, [r3, #2856]	; 0xb28
   1a34c:	add	r5, pc, r5
   1a350:	ldr	lr, [r3, #2860]	; 0xb2c
   1a354:	str	r5, [sp]
   1a358:	adds	r0, r0, #1
   1a35c:	adc	lr, lr, r4
   1a360:	str	r0, [r3, #2856]	; 0xb28
   1a364:	str	lr, [r3, #2860]	; 0xb2c
   1a368:	ldr	r3, [r5, ip]
   1a36c:	ldr	ip, [r3, #20]
   1a370:	add	r0, r3, #40	; 0x28
   1a374:	stmib	r3, {r1, r4}
   1a378:	str	r4, [r3, #12]
   1a37c:	str	r2, [r3, #16]
   1a380:	add	ip, ip, #1
   1a384:	str	ip, [r3, #20]
   1a388:	bl	11fc8 <_setjmp@plt>
   1a38c:	ldr	r4, [pc, #360]	; 1a4fc <UnityDefaultTestRun@@Base+0x1d8>
   1a390:	add	r4, pc, r4
   1a394:	ldr	r3, [r4, #2864]	; 0xb30
   1a398:	ldr	r2, [r4, #2868]	; 0xb34
   1a39c:	adds	r3, r3, #1
   1a3a0:	adc	r2, r2, #0
   1a3a4:	cmp	r0, #0
   1a3a8:	str	r3, [r4, #2864]	; 0xb30
   1a3ac:	str	r2, [r4, #2868]	; 0xb34
   1a3b0:	beq	1a45c <UnityDefaultTestRun@@Base+0x138>
   1a3b4:	ldr	r3, [pc, #316]	; 1a4f8 <UnityDefaultTestRun@@Base+0x1d4>
   1a3b8:	ldr	r2, [sp]
   1a3bc:	ldr	r0, [r2, r3]
   1a3c0:	add	r0, r0, #40	; 0x28
   1a3c4:	bl	11fc8 <_setjmp@plt>
   1a3c8:	ldr	r4, [pc, #304]	; 1a500 <UnityDefaultTestRun@@Base+0x1dc>
   1a3cc:	add	r4, pc, r4
   1a3d0:	ldr	r3, [r4, #2896]	; 0xb50
   1a3d4:	add	r4, r4, #2864	; 0xb30
   1a3d8:	ldr	r2, [r4, #36]	; 0x24
   1a3dc:	adds	r3, r3, #1
   1a3e0:	adc	r2, r2, #0
   1a3e4:	cmp	r0, #0
   1a3e8:	str	r3, [r4, #32]
   1a3ec:	str	r2, [r4, #36]	; 0x24
   1a3f0:	bne	1a428 <UnityDefaultTestRun@@Base+0x104>
   1a3f4:	ldr	r3, [r4, #40]	; 0x28
   1a3f8:	ldr	r2, [pc, #248]	; 1a4f8 <UnityDefaultTestRun@@Base+0x1d4>
   1a3fc:	ldr	r1, [r4, #44]	; 0x2c
   1a400:	adds	r3, r3, #1
   1a404:	str	r3, [r4, #40]	; 0x28
   1a408:	mov	r3, r2
   1a40c:	ldr	r2, [sp]
   1a410:	adc	r1, r1, #0
   1a414:	str	r1, [r4, #44]	; 0x2c
   1a418:	ldr	r3, [r2, r3]
   1a41c:	ldr	r3, [r3, #36]	; 0x24
   1a420:	cmp	r3, #0
   1a424:	beq	1a4b8 <UnityDefaultTestRun@@Base+0x194>
   1a428:	bl	169e4 <UnityConcludeTest@@Base>
   1a42c:	ldr	r3, [pc, #208]	; 1a504 <UnityDefaultTestRun@@Base+0x1e0>
   1a430:	add	r3, pc, r3
   1a434:	ldr	r2, [r3, #2928]	; 0xb70
   1a438:	ldr	r1, [r3, #2932]	; 0xb74
   1a43c:	adds	r2, r2, #1
   1a440:	adc	r1, r1, #0
   1a444:	str	r2, [r3, #2928]	; 0xb70
   1a448:	str	r1, [r3, #2932]	; 0xb74
   1a44c:	add	sp, sp, #12
   1a450:	ldrd	r4, [sp]
   1a454:	add	sp, sp, #8
   1a458:	pop	{pc}		; (ldr pc, [sp], #4)
   1a45c:	add	r4, r4, #2864	; 0xb30
   1a460:	ldr	r3, [r4, #8]
   1a464:	ldr	r2, [r4, #12]
   1a468:	adds	r3, r3, #1
   1a46c:	adc	r2, r2, #0
   1a470:	str	r3, [r4, #8]
   1a474:	str	r2, [r4, #12]
   1a478:	bl	1a2d4 <setUp@@Base>
   1a47c:	ldr	r3, [r4, #16]
   1a480:	ldr	r2, [r4, #20]
   1a484:	adds	r3, r3, #1
   1a488:	adc	r2, r2, #0
   1a48c:	str	r3, [r4, #16]
   1a490:	ldr	r3, [sp, #4]
   1a494:	str	r2, [r4, #20]
   1a498:	blx	r3
   1a49c:	ldr	r3, [r4, #24]
   1a4a0:	ldr	r2, [r4, #28]
   1a4a4:	adds	r3, r3, #1
   1a4a8:	adc	r2, r2, #0
   1a4ac:	str	r3, [r4, #24]
   1a4b0:	str	r2, [r4, #28]
   1a4b4:	b	1a3b4 <UnityDefaultTestRun@@Base+0x90>
   1a4b8:	ldr	r3, [r4, #48]	; 0x30
   1a4bc:	ldr	r2, [r4, #52]	; 0x34
   1a4c0:	adds	r3, r3, #1
   1a4c4:	adc	r2, r2, #0
   1a4c8:	str	r3, [r4, #48]	; 0x30
   1a4cc:	str	r2, [r4, #52]	; 0x34
   1a4d0:	bl	1a2fc <tearDown@@Base>
   1a4d4:	ldr	r3, [r4, #56]	; 0x38
   1a4d8:	ldr	r2, [r4, #60]	; 0x3c
   1a4dc:	adds	r3, r3, #1
   1a4e0:	adc	r2, r2, #0
   1a4e4:	str	r3, [r4, #56]	; 0x38
   1a4e8:	str	r2, [r4, #60]	; 0x3c
   1a4ec:	b	1a428 <UnityDefaultTestRun@@Base+0x104>
   1a4f0:	andeq	r6, r1, r0, lsl #5
   1a4f4:	andeq	r4, r1, ip, lsr #25
   1a4f8:	andeq	r0, r0, r8, lsl r1
   1a4fc:	andeq	r6, r1, r0, lsr r2
   1a500:	strdeq	r6, [r1], -r4
   1a504:	muleq	r1, r0, r1

0001a508 <UnityBegin@@Base>:
   1a508:	ldr	r3, [pc, #100]	; 1a574 <UnityBegin@@Base+0x6c>
   1a50c:	mov	r2, #0
   1a510:	str	r4, [sp, #-8]!
   1a514:	ldr	r4, [pc, #92]	; 1a578 <UnityBegin@@Base+0x70>
   1a518:	ldr	ip, [pc, #92]	; 1a57c <UnityBegin@@Base+0x74>
   1a51c:	add	r3, pc, r3
   1a520:	ldr	r1, [r3, #2936]	; 0xb78
   1a524:	str	lr, [sp, #4]
   1a528:	add	r4, pc, r4
   1a52c:	ldr	lr, [r3, #2940]	; 0xb7c
   1a530:	adds	r1, r1, #1
   1a534:	adc	lr, lr, r2
   1a538:	str	r1, [r3, #2936]	; 0xb78
   1a53c:	str	lr, [r3, #2940]	; 0xb7c
   1a540:	ldr	r3, [r4, ip]
   1a544:	ldr	r4, [sp]
   1a548:	add	sp, sp, #4
   1a54c:	stm	r3, {r0, r2}
   1a550:	str	r2, [r3, #8]
   1a554:	str	r2, [r3, #12]
   1a558:	str	r2, [r3, #16]
   1a55c:	str	r2, [r3, #20]
   1a560:	str	r2, [r3, #24]
   1a564:	str	r2, [r3, #28]
   1a568:	str	r2, [r3, #32]
   1a56c:	str	r2, [r3, #36]	; 0x24
   1a570:	pop	{pc}		; (ldr pc, [sp], #4)
   1a574:	andeq	r6, r1, r4, lsr #1
   1a578:	ldrdeq	r4, [r1], -r0
   1a57c:	andeq	r0, r0, r8, lsl r1

0001a580 <UnityEnd@@Base>:
   1a580:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1a584:	mov	r0, #10
   1a588:	ldr	r4, [pc, #572]	; 1a7cc <UnityEnd@@Base+0x24c>
   1a58c:	ldr	r5, [pc, #572]	; 1a7d0 <UnityEnd@@Base+0x250>
   1a590:	ldr	r2, [pc, #572]	; 1a7d4 <UnityEnd@@Base+0x254>
   1a594:	add	r4, pc, r4
   1a598:	add	r4, r4, #2944	; 0xb80
   1a59c:	ldr	r3, [r4]
   1a5a0:	add	r5, pc, r5
   1a5a4:	ldr	r1, [r4, #4]
   1a5a8:	strd	r6, [sp, #8]
   1a5ac:	str	r8, [sp, #16]
   1a5b0:	adds	r3, r3, #1
   1a5b4:	str	lr, [sp, #20]
   1a5b8:	adc	r1, r1, #0
   1a5bc:	str	r3, [r4]
   1a5c0:	str	r1, [r4, #4]
   1a5c4:	ldr	r7, [r5, r2]
   1a5c8:	ldr	r1, [r7]
   1a5cc:	bl	120e8 <putc@plt>
   1a5d0:	ldr	r3, [r4, #8]
   1a5d4:	ldr	r1, [r4, #12]
   1a5d8:	ldr	r2, [pc, #504]	; 1a7d8 <UnityEnd@@Base+0x258>
   1a5dc:	adds	r3, r3, #1
   1a5e0:	adc	r1, r1, #0
   1a5e4:	str	r3, [r4, #8]
   1a5e8:	str	r1, [r4, #12]
   1a5ec:	ldr	r0, [r5, r2]
   1a5f0:	bl	15ccc <UnityPrint@@Base>
   1a5f4:	ldr	r3, [r4, #16]
   1a5f8:	mov	r0, #10
   1a5fc:	ldr	r2, [r4, #20]
   1a600:	ldr	r1, [r7]
   1a604:	adds	r3, r3, #1
   1a608:	adc	r2, r2, #0
   1a60c:	str	r3, [r4, #16]
   1a610:	str	r2, [r4, #20]
   1a614:	bl	120e8 <putc@plt>
   1a618:	ldr	r3, [r4, #24]
   1a61c:	ldr	r1, [r4, #28]
   1a620:	ldr	r2, [pc, #436]	; 1a7dc <UnityEnd@@Base+0x25c>
   1a624:	adds	r3, r3, #1
   1a628:	adc	r1, r1, #0
   1a62c:	str	r3, [r4, #24]
   1a630:	str	r1, [r4, #28]
   1a634:	ldr	r6, [r5, r2]
   1a638:	ldr	r0, [r6, #20]
   1a63c:	bl	153b8 <UnityPrintNumber@@Base>
   1a640:	ldr	r3, [r4, #32]
   1a644:	ldr	r1, [r4, #36]	; 0x24
   1a648:	ldr	r2, [pc, #400]	; 1a7e0 <UnityEnd@@Base+0x260>
   1a64c:	adds	r3, r3, #1
   1a650:	adc	r1, r1, #0
   1a654:	str	r3, [r4, #32]
   1a658:	str	r1, [r4, #36]	; 0x24
   1a65c:	ldr	r0, [r5, r2]
   1a660:	bl	15ccc <UnityPrint@@Base>
   1a664:	ldr	r3, [r4, #40]	; 0x28
   1a668:	ldr	r2, [r4, #44]	; 0x2c
   1a66c:	ldr	r0, [r6, #24]
   1a670:	adds	r3, r3, #1
   1a674:	adc	r2, r2, #0
   1a678:	str	r3, [r4, #40]	; 0x28
   1a67c:	str	r2, [r4, #44]	; 0x2c
   1a680:	bl	153b8 <UnityPrintNumber@@Base>
   1a684:	ldr	r3, [r4, #48]	; 0x30
   1a688:	ldr	r1, [r4, #52]	; 0x34
   1a68c:	ldr	r2, [pc, #336]	; 1a7e4 <UnityEnd@@Base+0x264>
   1a690:	adds	r3, r3, #1
   1a694:	adc	r1, r1, #0
   1a698:	str	r3, [r4, #48]	; 0x30
   1a69c:	str	r1, [r4, #52]	; 0x34
   1a6a0:	ldr	r0, [r5, r2]
   1a6a4:	bl	15ccc <UnityPrint@@Base>
   1a6a8:	ldr	r3, [r4, #56]	; 0x38
   1a6ac:	ldr	r2, [r4, #60]	; 0x3c
   1a6b0:	ldr	r0, [r6, #28]
   1a6b4:	adds	r3, r3, #1
   1a6b8:	adc	r2, r2, #0
   1a6bc:	str	r3, [r4, #56]	; 0x38
   1a6c0:	str	r2, [r4, #60]	; 0x3c
   1a6c4:	bl	153b8 <UnityPrintNumber@@Base>
   1a6c8:	ldr	r3, [r4, #64]	; 0x40
   1a6cc:	ldr	r1, [r4, #68]	; 0x44
   1a6d0:	ldr	r2, [pc, #272]	; 1a7e8 <UnityEnd@@Base+0x268>
   1a6d4:	adds	r3, r3, #1
   1a6d8:	adc	r1, r1, #0
   1a6dc:	str	r3, [r4, #64]	; 0x40
   1a6e0:	str	r1, [r4, #68]	; 0x44
   1a6e4:	ldr	r0, [r5, r2]
   1a6e8:	bl	15ccc <UnityPrint@@Base>
   1a6ec:	ldr	r3, [r4, #72]	; 0x48
   1a6f0:	mov	r0, #10
   1a6f4:	ldr	r2, [r4, #76]	; 0x4c
   1a6f8:	ldr	r1, [r7]
   1a6fc:	adds	r3, r3, #1
   1a700:	adc	r2, r2, #0
   1a704:	str	r3, [r4, #72]	; 0x48
   1a708:	str	r2, [r4, #76]	; 0x4c
   1a70c:	bl	120e8 <putc@plt>
   1a710:	ldr	r3, [r6, #24]
   1a714:	cmp	r3, #0
   1a718:	bne	1a794 <UnityEnd@@Base+0x214>
   1a71c:	ldr	r3, [r4, #80]	; 0x50
   1a720:	ldr	r2, [r4, #84]	; 0x54
   1a724:	adds	r3, r3, #1
   1a728:	adc	r2, r2, #0
   1a72c:	str	r3, [r4, #80]	; 0x50
   1a730:	str	r2, [r4, #84]	; 0x54
   1a734:	bl	16978 <UnityPrintOk@@Base>
   1a738:	ldr	r3, [r4, #96]	; 0x60
   1a73c:	ldr	r2, [r4, #100]	; 0x64
   1a740:	adds	r3, r3, #1
   1a744:	adc	r2, r2, #0
   1a748:	str	r3, [r4, #96]	; 0x60
   1a74c:	str	r2, [r4, #100]	; 0x64
   1a750:	mov	r0, #10
   1a754:	ldr	r1, [r7]
   1a758:	bl	120e8 <putc@plt>
   1a75c:	ldr	r3, [pc, #136]	; 1a7ec <UnityEnd@@Base+0x26c>
   1a760:	ldrd	r4, [sp]
   1a764:	ldr	r8, [sp, #16]
   1a768:	add	r3, pc, r3
   1a76c:	ldr	r2, [r3, #3056]	; 0xbf0
   1a770:	ldr	r1, [r3, #3060]	; 0xbf4
   1a774:	ldr	r0, [r6, #24]
   1a778:	adds	r2, r2, #1
   1a77c:	ldrd	r6, [sp, #8]
   1a780:	add	sp, sp, #20
   1a784:	adc	r1, r1, #0
   1a788:	str	r2, [r3, #3056]	; 0xbf0
   1a78c:	str	r1, [r3, #3060]	; 0xbf4
   1a790:	pop	{pc}		; (ldr pc, [sp], #4)
   1a794:	ldr	r3, [r4, #88]	; 0x58
   1a798:	ldr	r2, [r4, #92]	; 0x5c
   1a79c:	adds	r3, r3, #1
   1a7a0:	adc	r2, r2, #0
   1a7a4:	str	r3, [r4, #88]	; 0x58
   1a7a8:	str	r2, [r4, #92]	; 0x5c
   1a7ac:	bl	1690c <UnityPrintFail@@Base>
   1a7b0:	ldr	r3, [r4, #104]	; 0x68
   1a7b4:	ldr	r2, [r4, #108]	; 0x6c
   1a7b8:	adds	r3, r3, #1
   1a7bc:	adc	r2, r2, #0
   1a7c0:	str	r3, [r4, #104]	; 0x68
   1a7c4:	str	r2, [r4, #108]	; 0x6c
   1a7c8:	b	1a750 <UnityEnd@@Base+0x1d0>
   1a7cc:	andeq	r6, r1, ip, lsr #32
   1a7d0:	andeq	r4, r1, r8, asr sl
   1a7d4:	andeq	r0, r0, ip, lsr r1
   1a7d8:	andeq	r0, r0, r0, lsl #2
   1a7dc:	andeq	r0, r0, r8, lsl r1
   1a7e0:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1a7e4:	andeq	r0, r0, ip, asr #1
   1a7e8:	andeq	r0, r0, r8, lsr #1
   1a7ec:	andeq	r5, r1, r8, asr lr

0001a7f0 <init_token_int_type@@Base>:
   1a7f0:	ldr	r2, [pc, #36]	; 1a81c <init_token_int_type@@Base+0x2c>
   1a7f4:	mov	r3, #0
   1a7f8:	str	r3, [r0]
   1a7fc:	add	r2, pc, r2
   1a800:	ldr	r3, [r2]
   1a804:	ldr	r1, [r2, #4]
   1a808:	adds	r3, r3, #1
   1a80c:	adc	r1, r1, #0
   1a810:	str	r3, [r2]
   1a814:	str	r1, [r2, #4]
   1a818:	bx	lr
   1a81c:			; <UNDEFINED> instruction: 0x000169bc

0001a820 <init_token_int_value@@Base>:
   1a820:	ldr	r2, [pc, #40]	; 1a850 <init_token_int_value@@Base+0x30>
   1a824:	mov	r3, #1
   1a828:	str	r3, [r0]
   1a82c:	str	r1, [r0, #4]
   1a830:	add	r2, pc, r2
   1a834:	ldr	r3, [r2, #8]
   1a838:	ldr	r1, [r2, #12]
   1a83c:	adds	r3, r3, #1
   1a840:	adc	r1, r1, #0
   1a844:	str	r3, [r2, #8]
   1a848:	str	r1, [r2, #12]
   1a84c:	bx	lr
   1a850:	andeq	r6, r1, r8, lsl #19

0001a854 <init_token_function@@Base>:
   1a854:	ldr	r2, [pc, #40]	; 1a884 <init_token_function@@Base+0x30>
   1a858:	mov	r3, #2
   1a85c:	str	r3, [r0]
   1a860:	str	r1, [r0, #4]
   1a864:	add	r2, pc, r2
   1a868:	ldr	r3, [r2, #16]
   1a86c:	ldr	r1, [r2, #20]
   1a870:	adds	r3, r3, #1
   1a874:	adc	r1, r1, #0
   1a878:	str	r3, [r2, #16]
   1a87c:	str	r1, [r2, #20]
   1a880:	bx	lr
   1a884:	andeq	r6, r1, r4, asr r9

0001a888 <init_token_opar@@Base>:
   1a888:	ldr	r2, [pc, #36]	; 1a8b4 <init_token_opar@@Base+0x2c>
   1a88c:	mov	r3, #3
   1a890:	str	r3, [r0]
   1a894:	add	r2, pc, r2
   1a898:	ldr	r3, [r2, #24]
   1a89c:	ldr	r1, [r2, #28]
   1a8a0:	adds	r3, r3, #1
   1a8a4:	adc	r1, r1, #0
   1a8a8:	str	r3, [r2, #24]
   1a8ac:	str	r1, [r2, #28]
   1a8b0:	bx	lr
   1a8b4:	andeq	r6, r1, r4, lsr #18

0001a8b8 <init_token_cpar@@Base>:
   1a8b8:	ldr	r2, [pc, #36]	; 1a8e4 <init_token_cpar@@Base+0x2c>
   1a8bc:	mov	r3, #4
   1a8c0:	str	r3, [r0]
   1a8c4:	add	r2, pc, r2
   1a8c8:	ldr	r3, [r2, #32]
   1a8cc:	ldr	r1, [r2, #36]	; 0x24
   1a8d0:	adds	r3, r3, #1
   1a8d4:	adc	r1, r1, #0
   1a8d8:	str	r3, [r2, #32]
   1a8dc:	str	r1, [r2, #36]	; 0x24
   1a8e0:	bx	lr
   1a8e4:	strdeq	r6, [r1], -r4

0001a8e8 <init_token_obra@@Base>:
   1a8e8:	ldr	r2, [pc, #36]	; 1a914 <init_token_obra@@Base+0x2c>
   1a8ec:	mov	r3, #5
   1a8f0:	str	r3, [r0]
   1a8f4:	add	r2, pc, r2
   1a8f8:	ldr	r3, [r2, #40]	; 0x28
   1a8fc:	ldr	r1, [r2, #44]	; 0x2c
   1a900:	adds	r3, r3, #1
   1a904:	adc	r1, r1, #0
   1a908:	str	r3, [r2, #40]	; 0x28
   1a90c:	str	r1, [r2, #44]	; 0x2c
   1a910:	bx	lr
   1a914:	andeq	r6, r1, r4, asr #17

0001a918 <init_token_cbra@@Base>:
   1a918:	ldr	r2, [pc, #36]	; 1a944 <init_token_cbra@@Base+0x2c>
   1a91c:	mov	r3, #6
   1a920:	str	r3, [r0]
   1a924:	add	r2, pc, r2
   1a928:	ldr	r3, [r2, #48]	; 0x30
   1a92c:	ldr	r1, [r2, #52]	; 0x34
   1a930:	adds	r3, r3, #1
   1a934:	adc	r1, r1, #0
   1a938:	str	r3, [r2, #48]	; 0x30
   1a93c:	str	r1, [r2, #52]	; 0x34
   1a940:	bx	lr
   1a944:	muleq	r1, r4, r8

0001a948 <init_token_return@@Base>:
   1a948:	ldr	r2, [pc, #36]	; 1a974 <init_token_return@@Base+0x2c>
   1a94c:	mov	r3, #7
   1a950:	str	r3, [r0]
   1a954:	add	r2, pc, r2
   1a958:	ldr	r3, [r2, #56]	; 0x38
   1a95c:	ldr	r1, [r2, #60]	; 0x3c
   1a960:	adds	r3, r3, #1
   1a964:	adc	r1, r1, #0
   1a968:	str	r3, [r2, #56]	; 0x38
   1a96c:	str	r1, [r2, #60]	; 0x3c
   1a970:	bx	lr
   1a974:	andeq	r6, r1, r4, ror #16

0001a978 <init_token_semicolon@@Base>:
   1a978:	ldr	r2, [pc, #36]	; 1a9a4 <init_token_semicolon@@Base+0x2c>
   1a97c:	mov	r3, #8
   1a980:	str	r3, [r0]
   1a984:	add	r2, pc, r2
   1a988:	ldr	r3, [r2, #64]	; 0x40
   1a98c:	ldr	r1, [r2, #68]	; 0x44
   1a990:	adds	r3, r3, #1
   1a994:	adc	r1, r1, #0
   1a998:	str	r3, [r2, #64]	; 0x40
   1a99c:	str	r1, [r2, #68]	; 0x44
   1a9a0:	bx	lr
   1a9a4:	andeq	r6, r1, r4, lsr r8

0001a9a8 <init_token_eof@@Base>:
   1a9a8:	ldr	r2, [pc, #36]	; 1a9d4 <init_token_eof@@Base+0x2c>
   1a9ac:	mov	r3, #9
   1a9b0:	str	r3, [r0]
   1a9b4:	add	r2, pc, r2
   1a9b8:	ldr	r3, [r2, #72]	; 0x48
   1a9bc:	ldr	r1, [r2, #76]	; 0x4c
   1a9c0:	adds	r3, r3, #1
   1a9c4:	adc	r1, r1, #0
   1a9c8:	str	r3, [r2, #72]	; 0x48
   1a9cc:	str	r1, [r2, #76]	; 0x4c
   1a9d0:	bx	lr
   1a9d4:	andeq	r6, r1, r4, lsl #16

0001a9d8 <init_token_if@@Base>:
   1a9d8:	ldr	r2, [pc, #36]	; 1aa04 <init_token_if@@Base+0x2c>
   1a9dc:	mov	r3, #10
   1a9e0:	str	r3, [r0]
   1a9e4:	add	r2, pc, r2
   1a9e8:	ldr	r3, [r2, #80]	; 0x50
   1a9ec:	ldr	r1, [r2, #84]	; 0x54
   1a9f0:	adds	r3, r3, #1
   1a9f4:	adc	r1, r1, #0
   1a9f8:	str	r3, [r2, #80]	; 0x50
   1a9fc:	str	r1, [r2, #84]	; 0x54
   1aa00:	bx	lr
   1aa04:	ldrdeq	r6, [r1], -r4

0001aa08 <init_token_else@@Base>:
   1aa08:	ldr	r2, [pc, #36]	; 1aa34 <init_token_else@@Base+0x2c>
   1aa0c:	mov	r3, #11
   1aa10:	str	r3, [r0]
   1aa14:	add	r2, pc, r2
   1aa18:	ldr	r3, [r2, #88]	; 0x58
   1aa1c:	ldr	r1, [r2, #92]	; 0x5c
   1aa20:	adds	r3, r3, #1
   1aa24:	adc	r1, r1, #0
   1aa28:	str	r3, [r2, #88]	; 0x58
   1aa2c:	str	r1, [r2, #92]	; 0x5c
   1aa30:	bx	lr
   1aa34:	andeq	r6, r1, r4, lsr #15

0001aa38 <init_token_boolean_op@@Base>:
   1aa38:	ldr	r2, [pc, #40]	; 1aa68 <init_token_boolean_op@@Base+0x30>
   1aa3c:	mov	r3, #12
   1aa40:	str	r3, [r0]
   1aa44:	str	r1, [r0, #4]
   1aa48:	add	r2, pc, r2
   1aa4c:	ldr	r3, [r2, #96]	; 0x60
   1aa50:	ldr	r1, [r2, #100]	; 0x64
   1aa54:	adds	r3, r3, #1
   1aa58:	adc	r1, r1, #0
   1aa5c:	str	r3, [r2, #96]	; 0x60
   1aa60:	str	r1, [r2, #100]	; 0x64
   1aa64:	bx	lr
   1aa68:	andeq	r6, r1, r0, ror r7

0001aa6c <free_token_int_type@@Base>:
   1aa6c:	ldr	r2, [pc, #28]	; 1aa90 <free_token_int_type@@Base+0x24>
   1aa70:	add	r2, pc, r2
   1aa74:	ldr	r3, [r2, #104]	; 0x68
   1aa78:	ldr	r1, [r2, #108]	; 0x6c
   1aa7c:	adds	r3, r3, #1
   1aa80:	adc	r1, r1, #0
   1aa84:	str	r3, [r2, #104]	; 0x68
   1aa88:	str	r1, [r2, #108]	; 0x6c
   1aa8c:	b	11fd4 <free@plt>
   1aa90:	andeq	r6, r1, r8, asr #14

0001aa94 <free_token_int_value@@Base>:
   1aa94:	ldr	r2, [pc, #28]	; 1aab8 <free_token_int_value@@Base+0x24>
   1aa98:	add	r2, pc, r2
   1aa9c:	ldr	r3, [r2, #112]	; 0x70
   1aaa0:	ldr	r1, [r2, #116]	; 0x74
   1aaa4:	adds	r3, r3, #1
   1aaa8:	adc	r1, r1, #0
   1aaac:	str	r3, [r2, #112]	; 0x70
   1aab0:	str	r1, [r2, #116]	; 0x74
   1aab4:	b	11fd4 <free@plt>
   1aab8:	andeq	r6, r1, r0, lsr #14

0001aabc <free_token_function@@Base>:
   1aabc:	ldr	r2, [pc, #28]	; 1aae0 <free_token_function@@Base+0x24>
   1aac0:	add	r2, pc, r2
   1aac4:	ldr	r3, [r2, #120]	; 0x78
   1aac8:	ldr	r1, [r2, #124]	; 0x7c
   1aacc:	adds	r3, r3, #1
   1aad0:	adc	r1, r1, #0
   1aad4:	str	r3, [r2, #120]	; 0x78
   1aad8:	str	r1, [r2, #124]	; 0x7c
   1aadc:	b	11fd4 <free@plt>
   1aae0:	strdeq	r6, [r1], -r8

0001aae4 <free_token_opar@@Base>:
   1aae4:	ldr	r2, [pc, #28]	; 1ab08 <free_token_opar@@Base+0x24>
   1aae8:	add	r2, pc, r2
   1aaec:	ldr	r3, [r2, #128]	; 0x80
   1aaf0:	ldr	r1, [r2, #132]	; 0x84
   1aaf4:	adds	r3, r3, #1
   1aaf8:	adc	r1, r1, #0
   1aafc:	str	r3, [r2, #128]	; 0x80
   1ab00:	str	r1, [r2, #132]	; 0x84
   1ab04:	b	11fd4 <free@plt>
   1ab08:	ldrdeq	r6, [r1], -r0

0001ab0c <free_token_cpar@@Base>:
   1ab0c:	ldr	r2, [pc, #28]	; 1ab30 <free_token_cpar@@Base+0x24>
   1ab10:	add	r2, pc, r2
   1ab14:	ldr	r3, [r2, #136]	; 0x88
   1ab18:	ldr	r1, [r2, #140]	; 0x8c
   1ab1c:	adds	r3, r3, #1
   1ab20:	adc	r1, r1, #0
   1ab24:	str	r3, [r2, #136]	; 0x88
   1ab28:	str	r1, [r2, #140]	; 0x8c
   1ab2c:	b	11fd4 <free@plt>
   1ab30:	andeq	r6, r1, r8, lsr #13

0001ab34 <free_token_obra@@Base>:
   1ab34:	ldr	r2, [pc, #28]	; 1ab58 <free_token_obra@@Base+0x24>
   1ab38:	add	r2, pc, r2
   1ab3c:	ldr	r3, [r2, #144]	; 0x90
   1ab40:	ldr	r1, [r2, #148]	; 0x94
   1ab44:	adds	r3, r3, #1
   1ab48:	adc	r1, r1, #0
   1ab4c:	str	r3, [r2, #144]	; 0x90
   1ab50:	str	r1, [r2, #148]	; 0x94
   1ab54:	b	11fd4 <free@plt>
   1ab58:	andeq	r6, r1, r0, lsl #13

0001ab5c <free_token_cbra@@Base>:
   1ab5c:	ldr	r2, [pc, #28]	; 1ab80 <free_token_cbra@@Base+0x24>
   1ab60:	add	r2, pc, r2
   1ab64:	ldr	r3, [r2, #152]	; 0x98
   1ab68:	ldr	r1, [r2, #156]	; 0x9c
   1ab6c:	adds	r3, r3, #1
   1ab70:	adc	r1, r1, #0
   1ab74:	str	r3, [r2, #152]	; 0x98
   1ab78:	str	r1, [r2, #156]	; 0x9c
   1ab7c:	b	11fd4 <free@plt>
   1ab80:	andeq	r6, r1, r8, asr r6

0001ab84 <free_token_return@@Base>:
   1ab84:	ldr	r2, [pc, #28]	; 1aba8 <free_token_return@@Base+0x24>
   1ab88:	add	r2, pc, r2
   1ab8c:	ldr	r3, [r2, #160]	; 0xa0
   1ab90:	ldr	r1, [r2, #164]	; 0xa4
   1ab94:	adds	r3, r3, #1
   1ab98:	adc	r1, r1, #0
   1ab9c:	str	r3, [r2, #160]	; 0xa0
   1aba0:	str	r1, [r2, #164]	; 0xa4
   1aba4:	b	11fd4 <free@plt>
   1aba8:	andeq	r6, r1, r0, lsr r6

0001abac <free_token_semicolon@@Base>:
   1abac:	ldr	r2, [pc, #28]	; 1abd0 <free_token_semicolon@@Base+0x24>
   1abb0:	add	r2, pc, r2
   1abb4:	ldr	r3, [r2, #168]	; 0xa8
   1abb8:	ldr	r1, [r2, #172]	; 0xac
   1abbc:	adds	r3, r3, #1
   1abc0:	adc	r1, r1, #0
   1abc4:	str	r3, [r2, #168]	; 0xa8
   1abc8:	str	r1, [r2, #172]	; 0xac
   1abcc:	b	11fd4 <free@plt>
   1abd0:	andeq	r6, r1, r8, lsl #12

0001abd4 <free_token_eof@@Base>:
   1abd4:	ldr	r2, [pc, #28]	; 1abf8 <free_token_eof@@Base+0x24>
   1abd8:	add	r2, pc, r2
   1abdc:	ldr	r3, [r2, #176]	; 0xb0
   1abe0:	ldr	r1, [r2, #180]	; 0xb4
   1abe4:	adds	r3, r3, #1
   1abe8:	adc	r1, r1, #0
   1abec:	str	r3, [r2, #176]	; 0xb0
   1abf0:	str	r1, [r2, #180]	; 0xb4
   1abf4:	b	11fd4 <free@plt>
   1abf8:	andeq	r6, r1, r0, ror #11

0001abfc <free_token_if@@Base>:
   1abfc:	ldr	r2, [pc, #28]	; 1ac20 <free_token_if@@Base+0x24>
   1ac00:	add	r2, pc, r2
   1ac04:	ldr	r3, [r2, #184]	; 0xb8
   1ac08:	ldr	r1, [r2, #188]	; 0xbc
   1ac0c:	adds	r3, r3, #1
   1ac10:	adc	r1, r1, #0
   1ac14:	str	r3, [r2, #184]	; 0xb8
   1ac18:	str	r1, [r2, #188]	; 0xbc
   1ac1c:	b	11fd4 <free@plt>
   1ac20:			; <UNDEFINED> instruction: 0x000165b8

0001ac24 <free_token_else@@Base>:
   1ac24:	ldr	r2, [pc, #28]	; 1ac48 <free_token_else@@Base+0x24>
   1ac28:	add	r2, pc, r2
   1ac2c:	ldr	r3, [r2, #192]	; 0xc0
   1ac30:	ldr	r1, [r2, #196]	; 0xc4
   1ac34:	adds	r3, r3, #1
   1ac38:	adc	r1, r1, #0
   1ac3c:	str	r3, [r2, #192]	; 0xc0
   1ac40:	str	r1, [r2, #196]	; 0xc4
   1ac44:	b	11fd4 <free@plt>
   1ac48:	muleq	r1, r0, r5

0001ac4c <free_token_boolean_op@@Base>:
   1ac4c:	str	r4, [sp, #-8]!
   1ac50:	mov	r4, r0
   1ac54:	ldr	r0, [r0, #4]
   1ac58:	str	lr, [sp, #4]
   1ac5c:	cmp	r0, #0
   1ac60:	beq	1ac9c <free_token_boolean_op@@Base+0x50>
   1ac64:	ldr	r2, [pc, #84]	; 1acc0 <free_token_boolean_op@@Base+0x74>
   1ac68:	add	r2, pc, r2
   1ac6c:	ldr	r3, [r2, #200]	; 0xc8
   1ac70:	ldr	r1, [r2, #204]	; 0xcc
   1ac74:	adds	r3, r3, #1
   1ac78:	adc	r1, r1, #0
   1ac7c:	str	r3, [r2, #200]	; 0xc8
   1ac80:	str	r1, [r2, #204]	; 0xcc
   1ac84:	bl	11fd4 <free@plt>
   1ac88:	mov	r0, r4
   1ac8c:	ldr	r4, [sp]
   1ac90:	ldr	lr, [sp, #4]
   1ac94:	add	sp, sp, #8
   1ac98:	b	11fd4 <free@plt>
   1ac9c:	ldr	r2, [pc, #32]	; 1acc4 <free_token_boolean_op@@Base+0x78>
   1aca0:	add	r2, pc, r2
   1aca4:	ldr	r3, [r2, #208]	; 0xd0
   1aca8:	ldr	r1, [r2, #212]	; 0xd4
   1acac:	adds	r3, r3, #1
   1acb0:	adc	r1, r1, #0
   1acb4:	str	r3, [r2, #208]	; 0xd0
   1acb8:	str	r1, [r2, #212]	; 0xd4
   1acbc:	b	1ac88 <free_token_boolean_op@@Base+0x3c>
   1acc0:	andeq	r6, r1, r0, asr r5
   1acc4:	andeq	r6, r1, r8, lsl r5

0001acc8 <init_lexer@@Base>:
   1acc8:	ldr	r2, [pc, #40]	; 1acf8 <init_lexer@@Base+0x30>
   1accc:	mov	r3, #0
   1acd0:	stm	r0, {r1, r3}
   1acd4:	str	r3, [r0, #8]
   1acd8:	add	r2, pc, r2
   1acdc:	ldr	r3, [r2]
   1ace0:	ldr	r1, [r2, #4]
   1ace4:	adds	r3, r3, #1
   1ace8:	adc	r1, r1, #0
   1acec:	str	r3, [r2]
   1acf0:	str	r1, [r2, #4]
   1acf4:	bx	lr
   1acf8:			; <UNDEFINED> instruction: 0x000165b8

0001acfc <free_stack_base@@Base>:
   1acfc:	ldr	r2, [pc, #28]	; 1ad20 <free_stack_base@@Base+0x24>
   1ad00:	add	r2, pc, r2
   1ad04:	ldr	r3, [r2, #8]
   1ad08:	ldr	r1, [r2, #12]
   1ad0c:	adds	r3, r3, #1
   1ad10:	adc	r1, r1, #0
   1ad14:	str	r3, [r2, #8]
   1ad18:	str	r1, [r2, #12]
   1ad1c:	b	11fd4 <free@plt>
   1ad20:	muleq	r1, r0, r5

0001ad24 <destroy_lexer@@Base>:
   1ad24:	ldr	r0, [r0, #4]
   1ad28:	cmp	r0, #0
   1ad2c:	beq	1ad80 <destroy_lexer@@Base+0x5c>
   1ad30:	str	r4, [sp, #-8]!
   1ad34:	ldr	r4, [pc, #104]	; 1ada4 <destroy_lexer@@Base+0x80>
   1ad38:	add	r4, pc, r4
   1ad3c:	ldr	r3, [r4, #16]
   1ad40:	ldr	r2, [r4, #20]
   1ad44:	str	lr, [sp, #4]
   1ad48:	adds	r3, r3, #1
   1ad4c:	adc	r2, r2, #0
   1ad50:	str	r3, [r4, #16]
   1ad54:	str	r2, [r4, #20]
   1ad58:	bl	1acfc <free_stack_base@@Base>
   1ad5c:	ldr	r3, [r4, #32]
   1ad60:	ldr	r2, [r4, #36]	; 0x24
   1ad64:	adds	r3, r3, #1
   1ad68:	adc	r2, r2, #0
   1ad6c:	str	r3, [r4, #32]
   1ad70:	str	r2, [r4, #36]	; 0x24
   1ad74:	ldr	r4, [sp]
   1ad78:	add	sp, sp, #4
   1ad7c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ad80:	ldr	r2, [pc, #32]	; 1ada8 <destroy_lexer@@Base+0x84>
   1ad84:	add	r2, pc, r2
   1ad88:	ldr	r3, [r2, #24]
   1ad8c:	ldr	r1, [r2, #28]
   1ad90:	adds	r3, r3, #1
   1ad94:	adc	r1, r1, #0
   1ad98:	str	r3, [r2, #24]
   1ad9c:	str	r1, [r2, #28]
   1ada0:	bx	lr
   1ada4:	andeq	r6, r1, r8, asr r5
   1ada8:	andeq	r6, r1, ip, lsl #10

0001adac <push_back@@Base>:
   1adac:	ldr	r2, [pc, #80]	; 1ae04 <push_back@@Base+0x58>
   1adb0:	strd	r4, [sp, #-16]!
   1adb4:	mov	r4, r0
   1adb8:	mov	r0, #8
   1adbc:	mov	r5, r1
   1adc0:	add	r2, pc, r2
   1adc4:	ldr	r3, [r2, #40]	; 0x28
   1adc8:	ldr	ip, [r2, #44]	; 0x2c
   1adcc:	str	r6, [sp, #8]
   1add0:	str	lr, [sp, #12]
   1add4:	adds	r3, r3, #1
   1add8:	adc	ip, ip, #0
   1addc:	str	r3, [r2, #40]	; 0x28
   1ade0:	str	ip, [r2, #44]	; 0x2c
   1ade4:	bl	12034 <malloc@plt>
   1ade8:	ldr	r3, [r4, #4]
   1adec:	ldr	r6, [sp, #8]
   1adf0:	str	r0, [r4, #4]
   1adf4:	stm	r0, {r3, r5}
   1adf8:	ldrd	r4, [sp]
   1adfc:	add	sp, sp, #12
   1ae00:	pop	{pc}		; (ldr pc, [sp], #4)
   1ae04:	ldrdeq	r6, [r1], -r0

0001ae08 <get_char@@Base>:
   1ae08:	ldr	r2, [pc, #64]	; 1ae50 <get_char@@Base+0x48>
   1ae0c:	str	r4, [sp, #-8]!
   1ae10:	ldr	ip, [r0, #8]
   1ae14:	add	r2, pc, r2
   1ae18:	ldr	r3, [r2, #48]	; 0x30
   1ae1c:	add	r4, ip, #1
   1ae20:	ldr	r1, [r2, #52]	; 0x34
   1ae24:	str	lr, [sp, #4]
   1ae28:	ldr	lr, [r0]
   1ae2c:	adds	r3, r3, #1
   1ae30:	str	r4, [r0, #8]
   1ae34:	ldr	r4, [sp]
   1ae38:	add	sp, sp, #4
   1ae3c:	adc	r1, r1, #0
   1ae40:	str	r3, [r2, #48]	; 0x30
   1ae44:	ldrb	r0, [lr, ip]
   1ae48:	str	r1, [r2, #52]	; 0x34
   1ae4c:	pop	{pc}		; (ldr pc, [sp], #4)
   1ae50:	andeq	r6, r1, ip, ror r4

0001ae54 <push_back_chars@@Base>:
   1ae54:	ldr	r3, [r0, #8]
   1ae58:	ldr	ip, [pc, #160]	; 1af00 <push_back_chars@@Base+0xac>
   1ae5c:	cmp	r3, r1
   1ae60:	add	ip, pc, ip
   1ae64:	bcc	1ae94 <push_back_chars@@Base+0x40>
   1ae68:	ldr	r2, [pc, #148]	; 1af04 <push_back_chars@@Base+0xb0>
   1ae6c:	sub	r3, r3, r1
   1ae70:	str	r3, [r0, #8]
   1ae74:	add	r2, pc, r2
   1ae78:	ldr	r3, [r2, #56]	; 0x38
   1ae7c:	ldr	r1, [r2, #60]	; 0x3c
   1ae80:	adds	r3, r3, #1
   1ae84:	adc	r1, r1, #0
   1ae88:	str	r3, [r2, #56]	; 0x38
   1ae8c:	str	r1, [r2, #60]	; 0x3c
   1ae90:	bx	lr
   1ae94:	str	r4, [sp, #-8]!
   1ae98:	mov	r1, #1
   1ae9c:	mov	r2, #32
   1aea0:	ldr	r4, [pc, #96]	; 1af08 <push_back_chars@@Base+0xb4>
   1aea4:	ldr	r0, [pc, #96]	; 1af0c <push_back_chars@@Base+0xb8>
   1aea8:	add	r4, pc, r4
   1aeac:	ldr	r3, [r4, #64]	; 0x40
   1aeb0:	str	lr, [sp, #4]
   1aeb4:	ldr	lr, [r4, #68]	; 0x44
   1aeb8:	adds	r3, r3, r1
   1aebc:	adc	lr, lr, #0
   1aec0:	str	r3, [r4, #64]	; 0x40
   1aec4:	mov	r3, r0
   1aec8:	ldr	r0, [pc, #64]	; 1af10 <push_back_chars@@Base+0xbc>
   1aecc:	str	lr, [r4, #68]	; 0x44
   1aed0:	ldr	r3, [ip, r3]
   1aed4:	add	r0, pc, r0
   1aed8:	ldr	r3, [r3]
   1aedc:	bl	11ff8 <fwrite@plt>
   1aee0:	ldr	r3, [r4, #72]	; 0x48
   1aee4:	mov	r0, #1
   1aee8:	ldr	r2, [r4, #76]	; 0x4c
   1aeec:	adds	r3, r3, r0
   1aef0:	adc	r2, r2, #0
   1aef4:	str	r3, [r4, #72]	; 0x48
   1aef8:	str	r2, [r4, #76]	; 0x4c
   1aefc:	bl	12064 <exit@plt>
   1af00:	muleq	r1, r8, r1
   1af04:	andeq	r6, r1, ip, lsl r4
   1af08:	andeq	r6, r1, r8, ror #7
   1af0c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1af10:	andeq	r3, r0, r0, lsr #22

0001af14 <push_back_one_char@@Base>:
   1af14:	str	r4, [sp, #-8]!
   1af18:	mov	r1, #1
   1af1c:	ldr	r4, [pc, #68]	; 1af68 <push_back_one_char@@Base+0x54>
   1af20:	add	r4, pc, r4
   1af24:	ldr	r3, [r4, #80]	; 0x50
   1af28:	ldr	r2, [r4, #84]	; 0x54
   1af2c:	str	lr, [sp, #4]
   1af30:	adds	r3, r3, r1
   1af34:	adc	r2, r2, #0
   1af38:	str	r3, [r4, #80]	; 0x50
   1af3c:	str	r2, [r4, #84]	; 0x54
   1af40:	bl	1ae54 <push_back_chars@@Base>
   1af44:	ldr	r3, [r4, #88]	; 0x58
   1af48:	ldr	r2, [r4, #92]	; 0x5c
   1af4c:	adds	r3, r3, #1
   1af50:	adc	r2, r2, #0
   1af54:	str	r3, [r4, #88]	; 0x58
   1af58:	str	r2, [r4, #92]	; 0x5c
   1af5c:	ldr	r4, [sp]
   1af60:	add	sp, sp, #4
   1af64:	pop	{pc}		; (ldr pc, [sp], #4)
   1af68:	andeq	r6, r1, r0, ror r3

0001af6c <next@@Base>:
   1af6c:	ldr	r3, [r0, #4]
   1af70:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1af74:	mov	r5, r0
   1af78:	ldr	r4, [pc, #3952]	; 1bef0 <next@@Base+0xf84>
   1af7c:	strd	r6, [sp, #8]
   1af80:	strd	r8, [sp, #16]
   1af84:	cmp	r3, #0
   1af88:	str	lr, [sp, #24]
   1af8c:	sub	sp, sp, #516	; 0x204
   1af90:	add	r4, pc, r4
   1af94:	beq	1b008 <next@@Base+0x9c>
   1af98:	ldr	r4, [pc, #3924]	; 1bef4 <next@@Base+0xf88>
   1af9c:	mov	ip, #0
   1afa0:	mov	r0, r3
   1afa4:	ldr	lr, [r3]
   1afa8:	ldr	r7, [r3, #4]
   1afac:	add	r4, pc, r4
   1afb0:	ldr	r2, [r4, #96]	; 0x60
   1afb4:	str	lr, [r5, #4]
   1afb8:	ldr	r1, [r4, #100]	; 0x64
   1afbc:	str	ip, [r3, #4]
   1afc0:	adds	r2, r2, #1
   1afc4:	adc	r3, r1, ip
   1afc8:	str	r2, [r4, #96]	; 0x60
   1afcc:	str	r3, [r4, #100]	; 0x64
   1afd0:	bl	1acfc <free_stack_base@@Base>
   1afd4:	ldr	r3, [r4, #112]	; 0x70
   1afd8:	ldr	r2, [r4, #116]	; 0x74
   1afdc:	adds	r3, r3, #1
   1afe0:	adc	r2, r2, #0
   1afe4:	str	r3, [r4, #112]	; 0x70
   1afe8:	str	r2, [r4, #116]	; 0x74
   1afec:	mov	r0, r7
   1aff0:	add	sp, sp, #516	; 0x204
   1aff4:	ldrd	r4, [sp]
   1aff8:	ldrd	r6, [sp, #8]
   1affc:	ldrd	r8, [sp, #16]
   1b000:	add	sp, sp, #24
   1b004:	pop	{pc}		; (ldr pc, [sp], #4)
   1b008:	ldr	r2, [pc, #3816]	; 1bef8 <next@@Base+0xf8c>
   1b00c:	add	r2, pc, r2
   1b010:	ldr	r3, [r2, #104]	; 0x68
   1b014:	ldr	r1, [r2, #108]	; 0x6c
   1b018:	adds	r3, r3, #1
   1b01c:	adc	r1, r1, #0
   1b020:	str	r3, [r2, #104]	; 0x68
   1b024:	str	r1, [r2, #108]	; 0x6c
   1b028:	bl	1ae08 <get_char@@Base>
   1b02c:	subs	r8, r0, #0
   1b030:	beq	1b284 <next@@Base+0x318>
   1b034:	ldr	r3, [pc, #3776]	; 1befc <next@@Base+0xf90>
   1b038:	ldr	r7, [pc, #3776]	; 1bf00 <next@@Base+0xf94>
   1b03c:	add	r3, pc, r3
   1b040:	add	r6, r3, #816	; 0x330
   1b044:	add	r7, pc, r7
   1b048:	cmp	r8, #32
   1b04c:	cmpne	r8, #9
   1b050:	moveq	r9, #1
   1b054:	movne	r9, #0
   1b058:	beq	1b23c <next@@Base+0x2d0>
   1b05c:	cmp	r8, #10
   1b060:	beq	1b2d0 <next@@Base+0x364>
   1b064:	cmp	r8, #48	; 0x30
   1b068:	beq	1b80c <next@@Base+0x8a0>
   1b06c:	sub	r3, r8, #49	; 0x31
   1b070:	uxtb	r3, r3
   1b074:	cmp	r3, #8
   1b078:	bls	1b2ec <next@@Base+0x380>
   1b07c:	cmp	r8, #40	; 0x28
   1b080:	beq	1b8a8 <next@@Base+0x93c>
   1b084:	cmp	r8, #41	; 0x29
   1b088:	beq	1b85c <next@@Base+0x8f0>
   1b08c:	cmp	r8, #123	; 0x7b
   1b090:	beq	1b944 <next@@Base+0x9d8>
   1b094:	cmp	r8, #125	; 0x7d
   1b098:	beq	1b8f4 <next@@Base+0x988>
   1b09c:	cmp	r8, #59	; 0x3b
   1b0a0:	beq	1b990 <next@@Base+0xa24>
   1b0a4:	cmp	r8, #101	; 0x65
   1b0a8:	beq	1b478 <next@@Base+0x50c>
   1b0ac:	cmp	r8, #105	; 0x69
   1b0b0:	beq	1b590 <next@@Base+0x624>
   1b0b4:	cmp	r8, #109	; 0x6d
   1b0b8:	beq	1b6c8 <next@@Base+0x75c>
   1b0bc:	cmp	r8, #114	; 0x72
   1b0c0:	bne	1b9e0 <next@@Base+0xa74>
   1b0c4:	ldr	r4, [pc, #3640]	; 1bf04 <next@@Base+0xf98>
   1b0c8:	mov	r0, r5
   1b0cc:	strb	r8, [sp]
   1b0d0:	add	r4, pc, r4
   1b0d4:	ldr	r3, [r4, #336]	; 0x150
   1b0d8:	ldr	r1, [r4, #340]	; 0x154
   1b0dc:	adds	r3, r3, #1
   1b0e0:	adc	r1, r1, #0
   1b0e4:	str	r3, [r4, #336]	; 0x150
   1b0e8:	str	r1, [r4, #340]	; 0x154
   1b0ec:	bl	1ae08 <get_char@@Base>
   1b0f0:	ldr	r2, [r4, #344]	; 0x158
   1b0f4:	ldr	r6, [r4, #348]	; 0x15c
   1b0f8:	ldr	r3, [r4, #816]	; 0x330
   1b0fc:	adds	r2, r2, #1
   1b100:	ldr	lr, [r4, #820]	; 0x334
   1b104:	adc	r6, r6, #0
   1b108:	str	r2, [r4, #344]	; 0x158
   1b10c:	adds	r3, r3, #1
   1b110:	str	r6, [r4, #348]	; 0x15c
   1b114:	adc	r2, lr, #0
   1b118:	subs	r1, r0, #0
   1b11c:	str	r3, [r4, #816]	; 0x330
   1b120:	str	r2, [r4, #820]	; 0x334
   1b124:	beq	1b284 <next@@Base+0x318>
   1b128:	ldr	r3, [r4, #144]	; 0x90
   1b12c:	ldr	r2, [r4, #148]	; 0x94
   1b130:	adds	r3, r3, #1
   1b134:	adc	r2, r2, #0
   1b138:	cmp	r1, #101	; 0x65
   1b13c:	str	r3, [r4, #144]	; 0x90
   1b140:	str	r2, [r4, #148]	; 0x94
   1b144:	bne	1bb18 <next@@Base+0xbac>
   1b148:	mov	r0, r5
   1b14c:	strb	r1, [sp, #1]
   1b150:	bl	1ae08 <get_char@@Base>
   1b154:	add	r2, r4, #704	; 0x2c0
   1b158:	ldr	r3, [r2, #-8]
   1b15c:	mov	ip, r0
   1b160:	ldr	r1, [r2, #-4]
   1b164:	adds	r3, r3, #1
   1b168:	adc	r1, r1, #0
   1b16c:	cmp	r0, #116	; 0x74
   1b170:	str	r3, [r2, #-8]
   1b174:	str	r1, [r2, #-4]
   1b178:	bne	1bab0 <next@@Base+0xb44>
   1b17c:	mov	r0, r5
   1b180:	strb	ip, [sp, #2]
   1b184:	bl	1ae08 <get_char@@Base>
   1b188:	add	r2, r4, #720	; 0x2d0
   1b18c:	ldr	r3, [r2, #-8]
   1b190:	mov	ip, r0
   1b194:	ldr	r1, [r2, #-4]
   1b198:	adds	r3, r3, #1
   1b19c:	adc	r1, r1, #0
   1b1a0:	cmp	r0, #117	; 0x75
   1b1a4:	str	r3, [r2, #-8]
   1b1a8:	str	r1, [r2, #-4]
   1b1ac:	bne	1bab0 <next@@Base+0xb44>
   1b1b0:	mov	r0, r5
   1b1b4:	strb	ip, [sp, #3]
   1b1b8:	bl	1ae08 <get_char@@Base>
   1b1bc:	cmp	r0, #114	; 0x72
   1b1c0:	addne	r4, r4, #736	; 0x2e0
   1b1c4:	bne	1bad4 <next@@Base+0xb68>
   1b1c8:	ldr	r3, [r4, #736]	; 0x2e0
   1b1cc:	mov	r0, r5
   1b1d0:	strb	r8, [sp, #4]
   1b1d4:	ldr	r1, [r4, #740]	; 0x2e4
   1b1d8:	adds	r3, r3, #1
   1b1dc:	adc	r1, r1, #0
   1b1e0:	str	r3, [r4, #736]	; 0x2e0
   1b1e4:	str	r1, [r4, #740]	; 0x2e4
   1b1e8:	bl	1ae08 <get_char@@Base>
   1b1ec:	add	r2, r4, #752	; 0x2f0
   1b1f0:	ldr	r3, [r2, #-8]
   1b1f4:	ldr	r1, [r2, #-4]
   1b1f8:	adds	r3, r3, #1
   1b1fc:	adc	r1, r1, #0
   1b200:	cmp	r0, #110	; 0x6e
   1b204:	str	r3, [r2, #-8]
   1b208:	str	r1, [r2, #-4]
   1b20c:	bne	1bab0 <next@@Base+0xb44>
   1b210:	mov	r0, #4
   1b214:	bl	12034 <malloc@plt>
   1b218:	mov	r7, r0
   1b21c:	bl	1a948 <init_token_return@@Base>
   1b220:	ldr	r3, [r4, #760]	; 0x2f8
   1b224:	ldr	r2, [r4, #764]	; 0x2fc
   1b228:	adds	r3, r3, #1
   1b22c:	adc	r2, r2, #0
   1b230:	str	r3, [r4, #760]	; 0x2f8
   1b234:	str	r2, [r4, #764]	; 0x2fc
   1b238:	b	1afec <next@@Base+0x80>
   1b23c:	ldr	r2, [pc, #3268]	; 1bf08 <next@@Base+0xf9c>
   1b240:	add	r2, pc, r2
   1b244:	ldr	r3, [r2, #160]	; 0xa0
   1b248:	ldr	r1, [r2, #164]	; 0xa4
   1b24c:	adds	r3, r3, #1
   1b250:	adc	r1, r1, #0
   1b254:	str	r3, [r2, #160]	; 0xa0
   1b258:	str	r1, [r2, #164]	; 0xa4
   1b25c:	mov	r0, r5
   1b260:	bl	1ae08 <get_char@@Base>
   1b264:	ldr	r3, [r6]
   1b268:	ldr	r2, [r6, #4]
   1b26c:	adds	r3, r3, #1
   1b270:	adc	r2, r2, #0
   1b274:	subs	r8, r0, #0
   1b278:	str	r3, [r6]
   1b27c:	str	r2, [r6, #4]
   1b280:	bne	1b048 <next@@Base+0xdc>
   1b284:	ldr	r4, [pc, #3200]	; 1bf0c <next@@Base+0xfa0>
   1b288:	mov	r0, #4
   1b28c:	add	r4, pc, r4
   1b290:	ldr	r3, [r4, #824]	; 0x338
   1b294:	ldr	r2, [r4, #828]	; 0x33c
   1b298:	adds	r3, r3, #1
   1b29c:	adc	r2, r2, #0
   1b2a0:	str	r3, [r4, #824]	; 0x338
   1b2a4:	str	r2, [r4, #828]	; 0x33c
   1b2a8:	bl	12034 <malloc@plt>
   1b2ac:	mov	r7, r0
   1b2b0:	bl	1a9a8 <init_token_eof@@Base>
   1b2b4:	ldr	r3, [r4, #832]	; 0x340
   1b2b8:	ldr	r2, [r4, #836]	; 0x344
   1b2bc:	adds	r3, r3, #1
   1b2c0:	adc	r2, r2, #0
   1b2c4:	str	r3, [r4, #832]	; 0x340
   1b2c8:	str	r2, [r4, #836]	; 0x344
   1b2cc:	b	1afec <next@@Base+0x80>
   1b2d0:	ldr	r3, [r7, #168]	; 0xa8
   1b2d4:	ldr	r2, [r7, #172]	; 0xac
   1b2d8:	adds	r3, r3, #1
   1b2dc:	adc	r2, r2, #0
   1b2e0:	str	r3, [r7, #168]	; 0xa8
   1b2e4:	str	r2, [r7, #172]	; 0xac
   1b2e8:	b	1b25c <next@@Base+0x2f0>
   1b2ec:	ldr	r4, [pc, #3100]	; 1bf10 <next@@Base+0xfa4>
   1b2f0:	mov	r0, r5
   1b2f4:	strb	r8, [sp]
   1b2f8:	add	r4, pc, r4
   1b2fc:	ldr	r3, [r4, #192]	; 0xc0
   1b300:	ldr	r2, [r4, #196]	; 0xc4
   1b304:	adds	r3, r3, #1
   1b308:	adc	r2, r2, #0
   1b30c:	str	r3, [r4, #192]	; 0xc0
   1b310:	str	r2, [r4, #196]	; 0xc4
   1b314:	bl	1ae08 <get_char@@Base>
   1b318:	ldr	r2, [r4, #200]	; 0xc8
   1b31c:	ldr	lr, [r4, #204]	; 0xcc
   1b320:	ldr	r3, [r4, #816]	; 0x330
   1b324:	adds	r2, r2, #1
   1b328:	ldr	ip, [r4, #820]	; 0x334
   1b32c:	adc	lr, lr, #0
   1b330:	str	r2, [r4, #200]	; 0xc8
   1b334:	adds	r3, r3, #1
   1b338:	str	lr, [r4, #204]	; 0xcc
   1b33c:	adc	ip, ip, #0
   1b340:	subs	r2, r0, #0
   1b344:	str	r3, [r4, #816]	; 0x330
   1b348:	str	ip, [r4, #820]	; 0x334
   1b34c:	beq	1b284 <next@@Base+0x318>
   1b350:	ldr	r3, [r4, #128]	; 0x80
   1b354:	sub	r0, r2, #48	; 0x30
   1b358:	uxtb	r0, r0
   1b35c:	ldr	r1, [r4, #132]	; 0x84
   1b360:	adds	r3, r3, #1
   1b364:	adc	r1, r1, #0
   1b368:	cmp	r0, #9
   1b36c:	str	r3, [r4, #128]	; 0x80
   1b370:	movhi	r7, #1
   1b374:	movhi	r6, sp
   1b378:	str	r1, [r4, #132]	; 0x84
   1b37c:	bhi	1b3cc <next@@Base+0x460>
   1b380:	mov	r6, sp
   1b384:	add	r4, r4, #544	; 0x220
   1b388:	mov	r8, r6
   1b38c:	mov	r7, #1
   1b390:	ldr	r3, [r4]
   1b394:	mov	r0, r5
   1b398:	add	r7, r7, #1
   1b39c:	strb	r2, [r8, #1]!
   1b3a0:	ldr	r2, [r4, #4]
   1b3a4:	adds	r3, r3, #1
   1b3a8:	adc	r2, r2, #0
   1b3ac:	str	r3, [r4]
   1b3b0:	str	r2, [r4, #4]
   1b3b4:	bl	1ae08 <get_char@@Base>
   1b3b8:	sub	r3, r0, #48	; 0x30
   1b3bc:	mov	r2, r0
   1b3c0:	uxtb	r3, r3
   1b3c4:	cmp	r3, #9
   1b3c8:	bls	1b390 <next@@Base+0x424>
   1b3cc:	ldr	r4, [pc, #2880]	; 1bf14 <next@@Base+0xfa8>
   1b3d0:	mov	r8, #0
   1b3d4:	mov	r0, r5
   1b3d8:	add	r4, pc, r4
   1b3dc:	ldr	r3, [r4, #552]	; 0x228
   1b3e0:	ldr	r2, [r4, #556]	; 0x22c
   1b3e4:	adds	r3, r3, #1
   1b3e8:	adc	r2, r2, r8
   1b3ec:	str	r3, [r4, #552]	; 0x228
   1b3f0:	str	r2, [r4, #556]	; 0x22c
   1b3f4:	bl	1af14 <push_back_one_char@@Base>
   1b3f8:	add	r2, sp, #512	; 0x200
   1b3fc:	ldr	r3, [r4, #560]	; 0x230
   1b400:	mov	r0, #8
   1b404:	add	r7, r2, r7
   1b408:	ldr	r2, [r4, #564]	; 0x234
   1b40c:	strb	r8, [r7, #-512]	; 0xfffffe00
   1b410:	adds	r3, r3, #1
   1b414:	adc	r2, r2, r8
   1b418:	str	r3, [r4, #560]	; 0x230
   1b41c:	str	r2, [r4, #564]	; 0x234
   1b420:	bl	12034 <malloc@plt>
   1b424:	mov	r7, r0
   1b428:	mov	r1, r8
   1b42c:	mov	r2, #10
   1b430:	mov	r0, r6
   1b434:	bl	11fb0 <strtol@plt>
   1b438:	ldr	r3, [r4, #568]	; 0x238
   1b43c:	mov	r1, r0
   1b440:	mov	r0, r7
   1b444:	ldr	r2, [r4, #572]	; 0x23c
   1b448:	adds	r3, r3, #1
   1b44c:	adc	r2, r2, r8
   1b450:	str	r3, [r4, #568]	; 0x238
   1b454:	str	r2, [r4, #572]	; 0x23c
   1b458:	bl	1a820 <init_token_int_value@@Base>
   1b45c:	ldr	r3, [r4, #576]	; 0x240
   1b460:	ldr	r2, [r4, #580]	; 0x244
   1b464:	adds	r3, r3, #1
   1b468:	adc	r2, r2, r8
   1b46c:	str	r3, [r4, #576]	; 0x240
   1b470:	str	r2, [r4, #580]	; 0x244
   1b474:	b	1afec <next@@Base+0x80>
   1b478:	ldr	r4, [pc, #2712]	; 1bf18 <next@@Base+0xfac>
   1b47c:	mov	r3, #101	; 0x65
   1b480:	mov	r0, r5
   1b484:	strb	r3, [sp]
   1b488:	add	r4, pc, r4
   1b48c:	ldr	r3, [r4, #288]	; 0x120
   1b490:	add	r6, r4, #816	; 0x330
   1b494:	ldr	r1, [r4, #292]	; 0x124
   1b498:	adds	r3, r3, #1
   1b49c:	adc	r1, r1, #0
   1b4a0:	str	r3, [r4, #288]	; 0x120
   1b4a4:	str	r1, [r4, #292]	; 0x124
   1b4a8:	bl	1ae08 <get_char@@Base>
   1b4ac:	ldr	r2, [r4, #296]	; 0x128
   1b4b0:	ldm	r6, {r3, ip}
   1b4b4:	ldr	lr, [r4, #300]	; 0x12c
   1b4b8:	adds	r2, r2, #1
   1b4bc:	str	r2, [r4, #296]	; 0x128
   1b4c0:	adc	lr, lr, #0
   1b4c4:	adds	r3, r3, #1
   1b4c8:	adc	r2, ip, #0
   1b4cc:	subs	r1, r0, #0
   1b4d0:	str	r3, [r6]
   1b4d4:	str	r2, [r6, #4]
   1b4d8:	str	lr, [r4, #300]	; 0x12c
   1b4dc:	beq	1b284 <next@@Base+0x318>
   1b4e0:	ldr	r3, [r4, #152]	; 0x98
   1b4e4:	ldr	r2, [r4, #156]	; 0x9c
   1b4e8:	adds	r3, r3, #1
   1b4ec:	adc	r2, r2, #0
   1b4f0:	cmp	r1, #108	; 0x6c
   1b4f4:	str	r3, [r4, #152]	; 0x98
   1b4f8:	str	r2, [r4, #156]	; 0x9c
   1b4fc:	bne	1bb34 <next@@Base+0xbc8>
   1b500:	mov	r0, r5
   1b504:	strb	r1, [sp, #1]
   1b508:	bl	1ae08 <get_char@@Base>
   1b50c:	add	r2, r4, #784	; 0x310
   1b510:	ldr	r3, [r2, #-8]
   1b514:	mov	ip, r0
   1b518:	ldr	r1, [r2, #-4]
   1b51c:	adds	r3, r3, #1
   1b520:	adc	r1, r1, #0
   1b524:	cmp	r0, #115	; 0x73
   1b528:	str	r3, [r2, #-8]
   1b52c:	str	r1, [r2, #-4]
   1b530:	bne	1bab0 <next@@Base+0xb44>
   1b534:	add	r4, r4, #800	; 0x320
   1b538:	mov	r0, r5
   1b53c:	strb	ip, [sp, #2]
   1b540:	bl	1ae08 <get_char@@Base>
   1b544:	ldr	r3, [r4, #-8]
   1b548:	ldr	r2, [r4, #-4]
   1b54c:	adds	r3, r3, #1
   1b550:	adc	r2, r2, #0
   1b554:	cmp	r0, #101	; 0x65
   1b558:	str	r3, [r4, #-8]
   1b55c:	str	r2, [r4, #-4]
   1b560:	bne	1bb28 <next@@Base+0xbbc>
   1b564:	mov	r0, #4
   1b568:	bl	12034 <malloc@plt>
   1b56c:	mov	r7, r0
   1b570:	bl	1aa08 <init_token_else@@Base>
   1b574:	ldr	r3, [r6, #-8]
   1b578:	ldr	r2, [r6, #-4]
   1b57c:	adds	r3, r3, #1
   1b580:	adc	r2, r2, #0
   1b584:	str	r3, [r6, #-8]
   1b588:	str	r2, [r6, #-4]
   1b58c:	b	1afec <next@@Base+0x80>
   1b590:	ldr	r4, [pc, #2436]	; 1bf1c <next@@Base+0xfb0>
   1b594:	mov	r0, r5
   1b598:	strb	r8, [sp]
   1b59c:	add	r4, pc, r4
   1b5a0:	ldr	r3, [r4, #304]	; 0x130
   1b5a4:	ldr	r1, [r4, #308]	; 0x134
   1b5a8:	adds	r3, r3, #1
   1b5ac:	adc	r1, r1, #0
   1b5b0:	str	r3, [r4, #304]	; 0x130
   1b5b4:	str	r1, [r4, #308]	; 0x134
   1b5b8:	bl	1ae08 <get_char@@Base>
   1b5bc:	ldr	r2, [r4, #312]	; 0x138
   1b5c0:	ldr	r6, [r4, #316]	; 0x13c
   1b5c4:	ldr	r3, [r4, #816]	; 0x330
   1b5c8:	adds	r2, r2, #1
   1b5cc:	ldr	lr, [r4, #820]	; 0x334
   1b5d0:	adc	r6, r6, #0
   1b5d4:	str	r2, [r4, #312]	; 0x138
   1b5d8:	adds	r2, r3, #1
   1b5dc:	str	r6, [r4, #316]	; 0x13c
   1b5e0:	adc	ip, lr, #0
   1b5e4:	subs	r3, r0, #0
   1b5e8:	str	r2, [r4, #816]	; 0x330
   1b5ec:	str	ip, [r4, #820]	; 0x334
   1b5f0:	beq	1b284 <next@@Base+0x318>
   1b5f4:	cmp	r3, #102	; 0x66
   1b5f8:	bne	1b64c <next@@Base+0x6e0>
   1b5fc:	mov	r1, #0
   1b600:	strb	r3, [sp, #1]
   1b604:	mov	r0, #4
   1b608:	ldr	r3, [r4, #592]	; 0x250
   1b60c:	strb	r1, [sp, #2]
   1b610:	ldr	r1, [r4, #596]	; 0x254
   1b614:	adds	r3, r3, #1
   1b618:	adc	r1, r1, #0
   1b61c:	str	r3, [r4, #592]	; 0x250
   1b620:	str	r1, [r4, #596]	; 0x254
   1b624:	bl	12034 <malloc@plt>
   1b628:	mov	r7, r0
   1b62c:	bl	1a9d8 <init_token_if@@Base>
   1b630:	ldr	r3, [r4, #632]	; 0x278
   1b634:	ldr	r2, [r4, #636]	; 0x27c
   1b638:	adds	r3, r3, #1
   1b63c:	adc	r2, r2, #0
   1b640:	str	r3, [r4, #632]	; 0x278
   1b644:	str	r2, [r4, #636]	; 0x27c
   1b648:	b	1afec <next@@Base+0x80>
   1b64c:	cmp	r3, #110	; 0x6e
   1b650:	bne	1bb44 <next@@Base+0xbd8>
   1b654:	add	r6, r4, #608	; 0x260
   1b658:	strb	r3, [sp, #1]
   1b65c:	mov	r0, r5
   1b660:	ldr	r3, [r6, #-8]
   1b664:	ldr	r2, [r6, #-4]
   1b668:	adds	r3, r3, #1
   1b66c:	adc	r2, r2, #0
   1b670:	str	r3, [r6, #-8]
   1b674:	str	r2, [r6, #-4]
   1b678:	bl	1ae08 <get_char@@Base>
   1b67c:	ldr	r3, [r6]
   1b680:	ldr	r2, [r6, #4]
   1b684:	adds	r3, r3, #1
   1b688:	adc	r2, r2, #0
   1b68c:	cmp	r0, #116	; 0x74
   1b690:	str	r3, [r6]
   1b694:	str	r2, [r6, #4]
   1b698:	bne	1bad0 <next@@Base+0xb64>
   1b69c:	mov	r0, #4
   1b6a0:	bl	12034 <malloc@plt>
   1b6a4:	mov	r7, r0
   1b6a8:	bl	1a7f0 <init_token_int_type@@Base>
   1b6ac:	ldr	r3, [r4, #624]	; 0x270
   1b6b0:	ldr	r2, [r4, #628]	; 0x274
   1b6b4:	adds	r3, r3, #1
   1b6b8:	adc	r2, r2, #0
   1b6bc:	str	r3, [r4, #624]	; 0x270
   1b6c0:	str	r2, [r4, #628]	; 0x274
   1b6c4:	b	1afec <next@@Base+0x80>
   1b6c8:	ldr	r4, [pc, #2128]	; 1bf20 <next@@Base+0xfb4>
   1b6cc:	mov	r0, r5
   1b6d0:	strb	r8, [sp]
   1b6d4:	add	r4, pc, r4
   1b6d8:	ldr	r3, [r4, #320]	; 0x140
   1b6dc:	ldr	r1, [r4, #324]	; 0x144
   1b6e0:	adds	r3, r3, #1
   1b6e4:	adc	r1, r1, #0
   1b6e8:	str	r3, [r4, #320]	; 0x140
   1b6ec:	str	r1, [r4, #324]	; 0x144
   1b6f0:	bl	1ae08 <get_char@@Base>
   1b6f4:	ldr	r2, [r4, #328]	; 0x148
   1b6f8:	ldr	r6, [r4, #332]	; 0x14c
   1b6fc:	ldr	r3, [r4, #816]	; 0x330
   1b700:	adds	r2, r2, #1
   1b704:	ldr	lr, [r4, #820]	; 0x334
   1b708:	adc	r6, r6, #0
   1b70c:	str	r2, [r4, #328]	; 0x148
   1b710:	adds	r3, r3, #1
   1b714:	str	r6, [r4, #332]	; 0x14c
   1b718:	adc	r2, lr, #0
   1b71c:	subs	r1, r0, #0
   1b720:	str	r3, [r4, #816]	; 0x330
   1b724:	str	r2, [r4, #820]	; 0x334
   1b728:	beq	1b284 <next@@Base+0x318>
   1b72c:	ldr	r3, [r4, #136]	; 0x88
   1b730:	ldr	r2, [r4, #140]	; 0x8c
   1b734:	adds	r3, r3, #1
   1b738:	adc	r2, r2, #0
   1b73c:	cmp	r1, #97	; 0x61
   1b740:	str	r3, [r4, #136]	; 0x88
   1b744:	str	r2, [r4, #140]	; 0x8c
   1b748:	bne	1baf4 <next@@Base+0xb88>
   1b74c:	mov	r0, r5
   1b750:	strb	r1, [sp, #1]
   1b754:	bl	1ae08 <get_char@@Base>
   1b758:	add	r2, r4, #656	; 0x290
   1b75c:	ldr	r3, [r2, #-8]
   1b760:	mov	ip, r0
   1b764:	ldr	r1, [r2, #-4]
   1b768:	adds	r3, r3, #1
   1b76c:	adc	r1, r1, #0
   1b770:	cmp	r0, #105	; 0x69
   1b774:	str	r3, [r2, #-8]
   1b778:	str	r1, [r2, #-4]
   1b77c:	bne	1bab0 <next@@Base+0xb44>
   1b780:	mov	r0, r5
   1b784:	strb	ip, [sp, #2]
   1b788:	bl	1ae08 <get_char@@Base>
   1b78c:	add	r2, r4, #672	; 0x2a0
   1b790:	ldr	r3, [r2, #-8]
   1b794:	mov	ip, r0
   1b798:	ldr	r1, [r2, #-4]
   1b79c:	adds	r3, r3, #1
   1b7a0:	adc	r1, r1, #0
   1b7a4:	cmp	r0, #110	; 0x6e
   1b7a8:	str	r3, [r2, #-8]
   1b7ac:	str	r1, [r2, #-4]
   1b7b0:	bne	1bab0 <next@@Base+0xb44>
   1b7b4:	mov	r6, #0
   1b7b8:	mov	r0, #5
   1b7bc:	strb	ip, [sp, #3]
   1b7c0:	strb	r6, [sp, #4]
   1b7c4:	bl	12034 <malloc@plt>
   1b7c8:	mov	r5, r0
   1b7cc:	mov	r2, #4
   1b7d0:	mov	r1, sp
   1b7d4:	bl	120ac <strncpy@plt>
   1b7d8:	mov	r0, #8
   1b7dc:	strb	r6, [r5, #4]
   1b7e0:	bl	12034 <malloc@plt>
   1b7e4:	mov	r1, r5
   1b7e8:	mov	r7, r0
   1b7ec:	bl	1a854 <init_token_function@@Base>
   1b7f0:	ldr	r3, [r4, #680]	; 0x2a8
   1b7f4:	ldr	r2, [r4, #684]	; 0x2ac
   1b7f8:	adds	r3, r3, #1
   1b7fc:	adc	r2, r2, r6
   1b800:	str	r3, [r4, #680]	; 0x2a8
   1b804:	str	r2, [r4, #684]	; 0x2ac
   1b808:	b	1afec <next@@Base+0x80>
   1b80c:	ldr	r4, [pc, #1808]	; 1bf24 <next@@Base+0xfb8>
   1b810:	mov	r0, #8
   1b814:	add	r4, pc, r4
   1b818:	ldr	r3, [r4, #176]	; 0xb0
   1b81c:	ldr	r2, [r4, #180]	; 0xb4
   1b820:	adds	r3, r3, #1
   1b824:	adc	r2, r2, #0
   1b828:	str	r3, [r4, #176]	; 0xb0
   1b82c:	str	r2, [r4, #180]	; 0xb4
   1b830:	bl	12034 <malloc@plt>
   1b834:	mov	r1, r9
   1b838:	mov	r7, r0
   1b83c:	bl	1a820 <init_token_int_value@@Base>
   1b840:	ldr	r3, [r4, #184]	; 0xb8
   1b844:	ldr	r2, [r4, #188]	; 0xbc
   1b848:	adds	r3, r3, #1
   1b84c:	adc	r2, r2, #0
   1b850:	str	r3, [r4, #184]	; 0xb8
   1b854:	str	r2, [r4, #188]	; 0xbc
   1b858:	b	1afec <next@@Base+0x80>
   1b85c:	ldr	r4, [pc, #1732]	; 1bf28 <next@@Base+0xfbc>
   1b860:	mov	r0, #4
   1b864:	add	r4, pc, r4
   1b868:	ldr	r3, [r4, #224]	; 0xe0
   1b86c:	ldr	r2, [r4, #228]	; 0xe4
   1b870:	adds	r3, r3, #1
   1b874:	adc	r2, r2, #0
   1b878:	str	r3, [r4, #224]	; 0xe0
   1b87c:	str	r2, [r4, #228]	; 0xe4
   1b880:	bl	12034 <malloc@plt>
   1b884:	mov	r7, r0
   1b888:	bl	1a8b8 <init_token_cpar@@Base>
   1b88c:	ldr	r3, [r4, #232]	; 0xe8
   1b890:	ldr	r2, [r4, #236]	; 0xec
   1b894:	adds	r3, r3, #1
   1b898:	adc	r2, r2, #0
   1b89c:	str	r3, [r4, #232]	; 0xe8
   1b8a0:	str	r2, [r4, #236]	; 0xec
   1b8a4:	b	1afec <next@@Base+0x80>
   1b8a8:	ldr	r4, [pc, #1660]	; 1bf2c <next@@Base+0xfc0>
   1b8ac:	mov	r0, #4
   1b8b0:	add	r4, pc, r4
   1b8b4:	ldr	r3, [r4, #208]	; 0xd0
   1b8b8:	ldr	r2, [r4, #212]	; 0xd4
   1b8bc:	adds	r3, r3, #1
   1b8c0:	adc	r2, r2, #0
   1b8c4:	str	r3, [r4, #208]	; 0xd0
   1b8c8:	str	r2, [r4, #212]	; 0xd4
   1b8cc:	bl	12034 <malloc@plt>
   1b8d0:	mov	r7, r0
   1b8d4:	bl	1a888 <init_token_opar@@Base>
   1b8d8:	ldr	r3, [r4, #216]	; 0xd8
   1b8dc:	ldr	r2, [r4, #220]	; 0xdc
   1b8e0:	adds	r3, r3, #1
   1b8e4:	adc	r2, r2, #0
   1b8e8:	str	r3, [r4, #216]	; 0xd8
   1b8ec:	str	r2, [r4, #220]	; 0xdc
   1b8f0:	b	1afec <next@@Base+0x80>
   1b8f4:	ldr	r3, [pc, #1588]	; 1bf30 <next@@Base+0xfc4>
   1b8f8:	mov	r0, #4
   1b8fc:	add	r3, pc, r3
   1b900:	mov	r4, r3
   1b904:	ldr	r3, [r3, #256]	; 0x100
   1b908:	ldr	r1, [r4, #260]	; 0x104
   1b90c:	adds	r3, r3, #1
   1b910:	adc	r1, r1, #0
   1b914:	str	r3, [r4, #256]	; 0x100
   1b918:	str	r1, [r4, #260]	; 0x104
   1b91c:	bl	12034 <malloc@plt>
   1b920:	mov	r7, r0
   1b924:	bl	1a918 <init_token_cbra@@Base>
   1b928:	ldr	r2, [r4, #264]	; 0x108
   1b92c:	ldr	r1, [r4, #268]	; 0x10c
   1b930:	adds	r2, r2, #1
   1b934:	adc	r1, r1, #0
   1b938:	str	r2, [r4, #264]	; 0x108
   1b93c:	str	r1, [r4, #268]	; 0x10c
   1b940:	b	1afec <next@@Base+0x80>
   1b944:	ldr	r4, [pc, #1512]	; 1bf34 <next@@Base+0xfc8>
   1b948:	mov	r0, #4
   1b94c:	add	r4, pc, r4
   1b950:	ldr	r3, [r4, #240]	; 0xf0
   1b954:	ldr	r2, [r4, #244]	; 0xf4
   1b958:	adds	r3, r3, #1
   1b95c:	adc	r2, r2, #0
   1b960:	str	r3, [r4, #240]	; 0xf0
   1b964:	str	r2, [r4, #244]	; 0xf4
   1b968:	bl	12034 <malloc@plt>
   1b96c:	mov	r7, r0
   1b970:	bl	1a8e8 <init_token_obra@@Base>
   1b974:	ldr	r3, [r4, #248]	; 0xf8
   1b978:	ldr	r2, [r4, #252]	; 0xfc
   1b97c:	adds	r3, r3, #1
   1b980:	adc	r2, r2, #0
   1b984:	str	r3, [r4, #248]	; 0xf8
   1b988:	str	r2, [r4, #252]	; 0xfc
   1b98c:	b	1afec <next@@Base+0x80>
   1b990:	ldr	r3, [pc, #1440]	; 1bf38 <next@@Base+0xfcc>
   1b994:	mov	r0, #4
   1b998:	add	r3, pc, r3
   1b99c:	mov	r4, r3
   1b9a0:	ldr	r3, [r3, #272]	; 0x110
   1b9a4:	ldr	r1, [r4, #276]	; 0x114
   1b9a8:	adds	r3, r3, #1
   1b9ac:	adc	r1, r1, #0
   1b9b0:	str	r3, [r4, #272]	; 0x110
   1b9b4:	str	r1, [r4, #276]	; 0x114
   1b9b8:	bl	12034 <malloc@plt>
   1b9bc:	mov	r7, r0
   1b9c0:	bl	1a978 <init_token_semicolon@@Base>
   1b9c4:	ldr	r2, [r4, #280]	; 0x118
   1b9c8:	ldr	r1, [r4, #284]	; 0x11c
   1b9cc:	adds	r2, r2, #1
   1b9d0:	adc	r1, r1, #0
   1b9d4:	str	r2, [r4, #280]	; 0x118
   1b9d8:	str	r1, [r4, #284]	; 0x11c
   1b9dc:	b	1afec <next@@Base+0x80>
   1b9e0:	cmp	r8, #33	; 0x21
   1b9e4:	beq	1bdbc <next@@Base+0xe50>
   1b9e8:	and	r3, r8, #253	; 0xfd
   1b9ec:	cmp	r3, #60	; 0x3c
   1b9f0:	beq	1bcf8 <next@@Base+0xd8c>
   1b9f4:	cmp	r8, #61	; 0x3d
   1b9f8:	beq	1bc50 <next@@Base+0xce4>
   1b9fc:	ldr	r6, [pc, #1336]	; 1bf3c <next@@Base+0xfd0>
   1ba00:	add	r6, pc, r6
   1ba04:	ldr	r3, [r6, #440]	; 0x1b8
   1ba08:	ldr	r1, [r6, #444]	; 0x1bc
   1ba0c:	adds	r3, r3, #1
   1ba10:	adc	r1, r1, #0
   1ba14:	cmp	r8, #124	; 0x7c
   1ba18:	str	r3, [r6, #440]	; 0x1b8
   1ba1c:	str	r1, [r6, #444]	; 0x1bc
   1ba20:	beq	1bbac <next@@Base+0xc40>
   1ba24:	cmp	r8, #38	; 0x26
   1ba28:	bne	1bb70 <next@@Base+0xc04>
   1ba2c:	mov	r0, r5
   1ba30:	strb	r8, [sp]
   1ba34:	bl	1ae08 <get_char@@Base>
   1ba38:	ldr	r3, [r6, #512]	; 0x200
   1ba3c:	mov	r4, r0
   1ba40:	mov	r0, #8
   1ba44:	ldr	r1, [r6, #516]	; 0x204
   1ba48:	adds	r3, r3, #1
   1ba4c:	adc	r1, r1, #0
   1ba50:	str	r3, [r6, #512]	; 0x200
   1ba54:	str	r1, [r6, #516]	; 0x204
   1ba58:	bl	12034 <malloc@plt>
   1ba5c:	cmp	r4, #38	; 0x26
   1ba60:	mov	r7, r0
   1ba64:	bne	1bb4c <next@@Base+0xbe0>
   1ba68:	mov	r0, #3
   1ba6c:	bl	12034 <malloc@plt>
   1ba70:	ldrb	r2, [sp]
   1ba74:	mov	r3, r0
   1ba78:	mov	ip, #0
   1ba7c:	mov	r1, r0
   1ba80:	mov	r0, r7
   1ba84:	strb	r2, [r3]
   1ba88:	strb	r8, [r3, #1]
   1ba8c:	strb	ip, [r3, #2]
   1ba90:	bl	1aa38 <init_token_boolean_op@@Base>
   1ba94:	ldr	r3, [r6, #528]	; 0x210
   1ba98:	ldr	r2, [r6, #532]	; 0x214
   1ba9c:	adds	r3, r3, #1
   1baa0:	adc	r2, r2, #0
   1baa4:	str	r3, [r6, #528]	; 0x210
   1baa8:	str	r2, [r6, #532]	; 0x214
   1baac:	b	1afec <next@@Base+0x80>
   1bab0:	ldr	r3, [r2]
   1bab4:	mov	r0, #1
   1bab8:	ldr	r1, [r2, #4]
   1babc:	adds	r3, r3, r0
   1bac0:	adc	r1, r1, #0
   1bac4:	str	r3, [r2]
   1bac8:	str	r1, [r2, #4]
   1bacc:	bl	12064 <exit@plt>
   1bad0:	add	r4, r4, #624	; 0x270
   1bad4:	ldr	r3, [r4, #-8]
   1bad8:	mov	r0, #1
   1badc:	ldr	r2, [r4, #-4]
   1bae0:	adds	r3, r3, r0
   1bae4:	adc	r2, r2, #0
   1bae8:	str	r3, [r4, #-8]
   1baec:	str	r2, [r4, #-4]
   1baf0:	bl	12064 <exit@plt>
   1baf4:	add	r4, r4, #640	; 0x280
   1baf8:	ldr	r3, [r4]
   1bafc:	mov	r0, #1
   1bb00:	adds	r3, r3, r0
   1bb04:	ldr	r2, [r4, #4]
   1bb08:	str	r3, [r4]
   1bb0c:	adc	r2, r2, #0
   1bb10:	str	r2, [r4, #4]
   1bb14:	bl	12064 <exit@plt>
   1bb18:	add	r4, r4, #688	; 0x2b0
   1bb1c:	mov	r0, #1
   1bb20:	ldr	r3, [r4]
   1bb24:	b	1bb00 <next@@Base+0xb94>
   1bb28:	mov	r0, #1
   1bb2c:	ldr	r3, [r4]
   1bb30:	b	1bb00 <next@@Base+0xb94>
   1bb34:	add	r4, r4, #768	; 0x300
   1bb38:	mov	r0, #1
   1bb3c:	ldr	r3, [r4]
   1bb40:	b	1bb00 <next@@Base+0xb94>
   1bb44:	add	r4, r4, #592	; 0x250
   1bb48:	b	1bad4 <next@@Base+0xb68>
   1bb4c:	add	r6, r6, #528	; 0x210
   1bb50:	ldr	r3, [r6, #-8]
   1bb54:	mov	r0, #1
   1bb58:	ldr	r2, [r6, #-4]
   1bb5c:	adds	r3, r3, r0
   1bb60:	adc	r2, r2, #0
   1bb64:	str	r3, [r6, #-8]
   1bb68:	str	r2, [r6, #-4]
   1bb6c:	bl	12064 <exit@plt>
   1bb70:	ldr	r3, [r6, #504]	; 0x1f8
   1bb74:	mov	r2, r8
   1bb78:	add	r6, r6, #544	; 0x220
   1bb7c:	ldr	ip, [r6, #-36]	; 0xffffffdc
   1bb80:	ldr	r0, [pc, #952]	; 1bf40 <next@@Base+0xfd4>
   1bb84:	adds	r3, r3, #1
   1bb88:	ldr	r1, [pc, #948]	; 1bf44 <next@@Base+0xfd8>
   1bb8c:	adc	ip, ip, #0
   1bb90:	str	r3, [r6, #-40]	; 0xffffffd8
   1bb94:	str	ip, [r6, #-36]	; 0xffffffdc
   1bb98:	ldr	r3, [r4, r0]
   1bb9c:	add	r1, pc, r1
   1bba0:	ldr	r0, [r3]
   1bba4:	bl	1207c <fprintf@plt>
   1bba8:	b	1bb50 <next@@Base+0xbe4>
   1bbac:	add	r4, r6, #480	; 0x1e0
   1bbb0:	ldr	r3, [r4, #-8]
   1bbb4:	mov	r0, r5
   1bbb8:	strb	r8, [sp]
   1bbbc:	ldr	r2, [r4, #-4]
   1bbc0:	adds	r3, r3, #1
   1bbc4:	adc	r2, r2, #0
   1bbc8:	str	r3, [r4, #-8]
   1bbcc:	str	r2, [r4, #-4]
   1bbd0:	bl	1ae08 <get_char@@Base>
   1bbd4:	ldr	r3, [r4]
   1bbd8:	mov	r5, r0
   1bbdc:	mov	r0, #8
   1bbe0:	ldr	r2, [r4, #4]
   1bbe4:	adds	r3, r3, #1
   1bbe8:	adc	r2, r2, #0
   1bbec:	str	r3, [r4]
   1bbf0:	str	r2, [r4, #4]
   1bbf4:	bl	12034 <malloc@plt>
   1bbf8:	cmp	r5, #124	; 0x7c
   1bbfc:	mov	r7, r0
   1bc00:	addne	r6, r6, #496	; 0x1f0
   1bc04:	bne	1bb50 <next@@Base+0xbe4>
   1bc08:	mov	r0, #3
   1bc0c:	bl	12034 <malloc@plt>
   1bc10:	ldrb	r2, [sp]
   1bc14:	mov	r3, r0
   1bc18:	mov	ip, #0
   1bc1c:	mov	r1, r0
   1bc20:	mov	r0, r7
   1bc24:	strb	r2, [r3]
   1bc28:	strb	r8, [r3, #1]
   1bc2c:	strb	ip, [r3, #2]
   1bc30:	bl	1aa38 <init_token_boolean_op@@Base>
   1bc34:	ldr	r3, [r6, #496]	; 0x1f0
   1bc38:	ldr	r2, [r6, #500]	; 0x1f4
   1bc3c:	adds	r3, r3, #1
   1bc40:	adc	r2, r2, #0
   1bc44:	str	r3, [r6, #496]	; 0x1f0
   1bc48:	str	r2, [r6, #500]	; 0x1f4
   1bc4c:	b	1afec <next@@Base+0x80>
   1bc50:	ldr	r4, [pc, #752]	; 1bf48 <next@@Base+0xfdc>
   1bc54:	mov	r0, r5
   1bc58:	strb	r8, [sp]
   1bc5c:	add	r4, pc, r4
   1bc60:	ldr	r3, [r4, #432]	; 0x1b0
   1bc64:	ldr	r1, [r4, #436]	; 0x1b4
   1bc68:	adds	r3, r3, #1
   1bc6c:	adc	r1, r1, #0
   1bc70:	str	r3, [r4, #432]	; 0x1b0
   1bc74:	str	r1, [r4, #436]	; 0x1b4
   1bc78:	bl	1ae08 <get_char@@Base>
   1bc7c:	ldr	r3, [r4, #448]	; 0x1c0
   1bc80:	mov	r5, r0
   1bc84:	mov	r0, #8
   1bc88:	ldr	r1, [r4, #452]	; 0x1c4
   1bc8c:	adds	r3, r3, #1
   1bc90:	adc	r1, r1, #0
   1bc94:	str	r3, [r4, #448]	; 0x1c0
   1bc98:	str	r1, [r4, #452]	; 0x1c4
   1bc9c:	bl	12034 <malloc@plt>
   1bca0:	cmp	r5, #61	; 0x3d
   1bca4:	mov	r7, r0
   1bca8:	addne	r4, r4, #464	; 0x1d0
   1bcac:	bne	1bad4 <next@@Base+0xb68>
   1bcb0:	mov	r0, #3
   1bcb4:	bl	12034 <malloc@plt>
   1bcb8:	ldrb	r2, [sp]
   1bcbc:	mov	r3, r0
   1bcc0:	mov	ip, #0
   1bcc4:	mov	r1, r0
   1bcc8:	mov	r0, r7
   1bccc:	strb	r2, [r3]
   1bcd0:	strb	r8, [r3, #1]
   1bcd4:	strb	ip, [r3, #2]
   1bcd8:	bl	1aa38 <init_token_boolean_op@@Base>
   1bcdc:	ldr	r3, [r4, #464]	; 0x1d0
   1bce0:	ldr	r2, [r4, #468]	; 0x1d4
   1bce4:	adds	r3, r3, #1
   1bce8:	adc	r2, r2, #0
   1bcec:	str	r3, [r4, #464]	; 0x1d0
   1bcf0:	str	r2, [r4, #468]	; 0x1d4
   1bcf4:	b	1afec <next@@Base+0x80>
   1bcf8:	ldr	r4, [pc, #588]	; 1bf4c <next@@Base+0xfe0>
   1bcfc:	mov	r0, r5
   1bd00:	strb	r8, [sp]
   1bd04:	add	r4, pc, r4
   1bd08:	ldr	r3, [r4, #392]	; 0x188
   1bd0c:	ldr	r2, [r4, #396]	; 0x18c
   1bd10:	adds	r3, r3, #1
   1bd14:	adc	r2, r2, #0
   1bd18:	str	r3, [r4, #392]	; 0x188
   1bd1c:	str	r2, [r4, #396]	; 0x18c
   1bd20:	bl	1ae08 <get_char@@Base>
   1bd24:	ldr	r3, [r4, #400]	; 0x190
   1bd28:	mov	r8, r0
   1bd2c:	mov	r0, #8
   1bd30:	ldr	r2, [r4, #404]	; 0x194
   1bd34:	adds	r3, r3, #1
   1bd38:	adc	r2, r2, #0
   1bd3c:	str	r3, [r4, #400]	; 0x190
   1bd40:	str	r2, [r4, #404]	; 0x194
   1bd44:	bl	12034 <malloc@plt>
   1bd48:	cmp	r8, #61	; 0x3d
   1bd4c:	mov	r7, r0
   1bd50:	beq	1be80 <next@@Base+0xf14>
   1bd54:	mov	r0, r5
   1bd58:	bl	1af14 <push_back_one_char@@Base>
   1bd5c:	ldr	r2, [r4, #408]	; 0x198
   1bd60:	mov	r0, #2
   1bd64:	ldr	r1, [r4, #412]	; 0x19c
   1bd68:	adds	r2, r2, #1
   1bd6c:	adc	r1, r1, #0
   1bd70:	str	r2, [r4, #408]	; 0x198
   1bd74:	str	r1, [r4, #412]	; 0x19c
   1bd78:	bl	12034 <malloc@plt>
   1bd7c:	ldrb	r3, [sp]
   1bd80:	mov	r2, #0
   1bd84:	strb	r3, [r0]
   1bd88:	strb	r2, [r0, #1]
   1bd8c:	mov	r1, r0
   1bd90:	mov	r0, r7
   1bd94:	bl	1aa38 <init_token_boolean_op@@Base>
   1bd98:	ldr	r3, [pc, #432]	; 1bf50 <next@@Base+0xfe4>
   1bd9c:	add	r3, pc, r3
   1bda0:	ldr	r2, [r3, #424]	; 0x1a8
   1bda4:	ldr	r1, [r3, #428]	; 0x1ac
   1bda8:	adds	r2, r2, #1
   1bdac:	adc	r1, r1, #0
   1bdb0:	str	r2, [r3, #424]	; 0x1a8
   1bdb4:	str	r1, [r3, #428]	; 0x1ac
   1bdb8:	b	1afec <next@@Base+0x80>
   1bdbc:	ldr	r4, [pc, #400]	; 1bf54 <next@@Base+0xfe8>
   1bdc0:	mov	r0, r5
   1bdc4:	strb	r8, [sp]
   1bdc8:	add	r4, pc, r4
   1bdcc:	ldr	r3, [r4, #352]	; 0x160
   1bdd0:	ldr	r1, [r4, #356]	; 0x164
   1bdd4:	adds	r3, r3, #1
   1bdd8:	adc	r1, r1, #0
   1bddc:	str	r3, [r4, #352]	; 0x160
   1bde0:	str	r1, [r4, #356]	; 0x164
   1bde4:	bl	1ae08 <get_char@@Base>
   1bde8:	ldr	r3, [r4, #360]	; 0x168
   1bdec:	mov	r8, r0
   1bdf0:	mov	r0, #8
   1bdf4:	ldr	r2, [r4, #364]	; 0x16c
   1bdf8:	adds	r3, r3, #1
   1bdfc:	adc	r2, r2, #0
   1be00:	str	r3, [r4, #360]	; 0x168
   1be04:	str	r2, [r4, #364]	; 0x16c
   1be08:	bl	12034 <malloc@plt>
   1be0c:	cmp	r8, #61	; 0x3d
   1be10:	mov	r7, r0
   1be14:	beq	1beb8 <next@@Base+0xf4c>
   1be18:	mov	r0, r5
   1be1c:	bl	1af14 <push_back_one_char@@Base>
   1be20:	ldr	r3, [r4, #368]	; 0x170
   1be24:	mov	r0, #2
   1be28:	ldr	r2, [r4, #372]	; 0x174
   1be2c:	adds	r3, r3, #1
   1be30:	adc	r2, r2, #0
   1be34:	str	r3, [r4, #368]	; 0x170
   1be38:	str	r2, [r4, #372]	; 0x174
   1be3c:	bl	12034 <malloc@plt>
   1be40:	ldrb	r3, [sp]
   1be44:	mov	r2, #0
   1be48:	strb	r3, [r0]
   1be4c:	strb	r2, [r0, #1]
   1be50:	mov	r1, r0
   1be54:	mov	r0, r7
   1be58:	bl	1aa38 <init_token_boolean_op@@Base>
   1be5c:	ldr	r3, [pc, #244]	; 1bf58 <next@@Base+0xfec>
   1be60:	add	r3, pc, r3
   1be64:	ldr	r2, [r3, #384]	; 0x180
   1be68:	ldr	r1, [r3, #388]	; 0x184
   1be6c:	adds	r2, r2, #1
   1be70:	adc	r1, r1, #0
   1be74:	str	r2, [r3, #384]	; 0x180
   1be78:	str	r1, [r3, #388]	; 0x184
   1be7c:	b	1afec <next@@Base+0x80>
   1be80:	mov	r0, #3
   1be84:	bl	12034 <malloc@plt>
   1be88:	ldr	r2, [r4, #416]	; 0x1a0
   1be8c:	mov	ip, #0
   1be90:	strb	r8, [r0, #1]
   1be94:	ldr	r1, [r4, #420]	; 0x1a4
   1be98:	strb	ip, [r0, #2]
   1be9c:	ldrb	lr, [sp]
   1bea0:	adds	r2, r2, #1
   1bea4:	adc	r1, r1, ip
   1bea8:	str	r2, [r4, #416]	; 0x1a0
   1beac:	strb	lr, [r0]
   1beb0:	str	r1, [r4, #420]	; 0x1a4
   1beb4:	b	1bd8c <next@@Base+0xe20>
   1beb8:	mov	r0, #3
   1bebc:	bl	12034 <malloc@plt>
   1bec0:	ldr	r2, [r4, #376]	; 0x178
   1bec4:	mov	ip, #0
   1bec8:	strb	r8, [r0, #1]
   1becc:	ldr	r1, [r4, #380]	; 0x17c
   1bed0:	strb	ip, [r0, #2]
   1bed4:	ldrb	lr, [sp]
   1bed8:	adds	r2, r2, #1
   1bedc:	adc	r1, r1, ip
   1bee0:	str	r2, [r4, #376]	; 0x178
   1bee4:	strb	lr, [r0]
   1bee8:	str	r1, [r4, #380]	; 0x17c
   1beec:	b	1be50 <next@@Base+0xee4>
   1bef0:	andeq	r4, r1, r8, rrx
   1bef4:	andeq	r6, r1, r4, ror #5
   1bef8:	andeq	r6, r1, r4, lsl #5
   1befc:	andeq	r6, r1, r4, asr r2
   1bf00:	andeq	r6, r1, ip, asr #4
   1bf04:	andeq	r6, r1, r0, asr #3
   1bf08:	andeq	r6, r1, r0, asr r0
   1bf0c:	andeq	r6, r1, r4
   1bf10:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   1bf14:			; <UNDEFINED> instruction: 0x00015eb8
   1bf18:	andeq	r5, r1, r8, lsl #28
   1bf1c:	strdeq	r5, [r1], -r4
   1bf20:			; <UNDEFINED> instruction: 0x00015bbc
   1bf24:	andeq	r5, r1, ip, ror sl
   1bf28:	andeq	r5, r1, ip, lsr #20
   1bf2c:	andeq	r5, r1, r0, ror #19
   1bf30:	muleq	r1, r4, r9
   1bf34:	andeq	r5, r1, r4, asr #18
   1bf38:	strdeq	r5, [r1], -r8
   1bf3c:	muleq	r1, r0, r8
   1bf40:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1bf44:	andeq	r2, r0, ip, ror lr
   1bf48:	andeq	r5, r1, r4, lsr r6
   1bf4c:	andeq	r5, r1, ip, lsl #11
   1bf50:	strdeq	r5, [r1], -r4
   1bf54:	andeq	r5, r1, r8, asr #9
   1bf58:	andeq	r5, r1, r0, lsr r4
   1bf5c:	b	1d200 <next@@Base+0x2294>
   1bf60:	push	{r4, r5, r6, r7, r8, lr}
   1bf64:	subs	r5, r1, #0
   1bf68:	popeq	{r4, r5, r6, r7, r8, pc}
   1bf6c:	mov	r4, r0
   1bf70:	bl	1bf5c <next@@Base+0xff0>
   1bf74:	ldr	r3, [r4]
   1bf78:	ldr	r2, [r4, #4]
   1bf7c:	adds	r6, r3, r0
   1bf80:	adc	r7, r2, r1
   1bf84:	subs	r5, r5, #1
   1bf88:	strd	r6, [r4], #8
   1bf8c:	bne	1bf70 <next@@Base+0x1004>
   1bf90:	pop	{r4, r5, r6, r7, r8, pc}
   1bf94:	ldr	r3, [pc, #20]	; 1bfb0 <next@@Base+0x1044>
   1bf98:	ldr	r2, [pc, #20]	; 1bfb4 <next@@Base+0x1048>
   1bf9c:	add	r3, pc, r3
   1bfa0:	ldr	r3, [r3, r2]
   1bfa4:	ldmib	r3, {r0, r3}
   1bfa8:	add	r0, r0, r3
   1bfac:	bx	lr
   1bfb0:	andeq	r3, r1, ip, asr r0
   1bfb4:	andeq	r0, r0, r0, lsr #2
   1bfb8:	ldr	r3, [pc, #28]	; 1bfdc <next@@Base+0x1070>
   1bfbc:	ldr	r2, [pc, #28]	; 1bfe0 <next@@Base+0x1074>
   1bfc0:	add	r3, pc, r3
   1bfc4:	ldr	r3, [r3, r2]
   1bfc8:	ldr	r2, [r3]
   1bfcc:	cmp	r2, #0
   1bfd0:	ldrne	r0, [r3, #20]
   1bfd4:	moveq	r0, #1
   1bfd8:	bx	lr
   1bfdc:	andeq	r3, r1, r8, lsr r0
   1bfe0:	andeq	r0, r0, r0, lsr #2
   1bfe4:	bx	lr
   1bfe8:	ldr	ip, [pc, #32]	; 1c010 <next@@Base+0x10a4>
   1bfec:	mov	r3, #32
   1bff0:	teq	r0, r1
   1bff4:	movmi	r2, ip
   1bff8:	movpl	r2, #0
   1bffc:	subs	r3, r3, #1
   1c000:	lsl	r1, r1, #1
   1c004:	eor	r0, r2, r0, lsl #1
   1c008:	bne	1bff0 <next@@Base+0x1084>
   1c00c:	bx	lr
   1c010:	strbeq	r1, [r1], #3511	; 0xdb7
   1c014:	ldr	r2, [pc, #60]	; 1c058 <next@@Base+0x10ec>
   1c018:	ldr	r3, [pc, #60]	; 1c05c <next@@Base+0x10f0>
   1c01c:	add	r2, pc, r2
   1c020:	push	{r4, lr}
   1c024:	ldr	r4, [r2, r3]
   1c028:	ldr	r0, [r4]
   1c02c:	cmp	r0, #0
   1c030:	popeq	{r4, pc}
   1c034:	ldr	r3, [pc, #36]	; 1c060 <next@@Base+0x10f4>
   1c038:	ldr	r3, [r2, r3]
   1c03c:	ldr	r3, [r3]
   1c040:	cmp	r0, r3
   1c044:	popeq	{r4, pc}
   1c048:	bl	120c4 <fclose@plt>
   1c04c:	mov	r3, #0
   1c050:	str	r3, [r4]
   1c054:	pop	{r4, pc}
   1c058:	ldrdeq	r2, [r1], -ip
   1c05c:	andeq	r0, r0, r0, lsr r1
   1c060:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1c064:	ldr	r3, [pc, #76]	; 1c0b8 <next@@Base+0x114c>
   1c068:	ldr	r1, [pc, #76]	; 1c0bc <next@@Base+0x1150>
   1c06c:	add	r3, pc, r3
   1c070:	push	{r4, r5, r6, lr}
   1c074:	mov	r5, r0
   1c078:	ldr	r4, [r3, r1]
   1c07c:	lsl	r1, r0, #2
   1c080:	mov	r0, r4
   1c084:	mov	r2, #1
   1c088:	ldr	r3, [r0], #28
   1c08c:	bl	11ff8 <fwrite@plt>
   1c090:	cmp	r0, #1
   1c094:	movne	r3, #1
   1c098:	ldr	r0, [r4, #8]
   1c09c:	strne	r3, [r4, #20]
   1c0a0:	ldr	r3, [r4, #4]
   1c0a4:	sub	r0, r0, r5
   1c0a8:	add	r3, r3, r5
   1c0ac:	str	r3, [r4, #4]
   1c0b0:	str	r0, [r4, #8]
   1c0b4:	pop	{r4, r5, r6, pc}
   1c0b8:	andeq	r2, r1, ip, lsl #31
   1c0bc:	andeq	r0, r0, r0, lsr #2
   1c0c0:	ldr	r3, [pc, #80]	; 1c118 <next@@Base+0x11ac>
   1c0c4:	ldr	r2, [pc, #80]	; 1c11c <next@@Base+0x11b0>
   1c0c8:	add	r3, pc, r3
   1c0cc:	push	{r4, r5, r6, lr}
   1c0d0:	mov	r5, r0
   1c0d4:	ldr	r4, [r3, r2]
   1c0d8:	ldr	r3, [r4, #8]
   1c0dc:	cmp	r3, #1024	; 0x400
   1c0e0:	bcs	1c0f8 <next@@Base+0x118c>
   1c0e4:	add	r0, r3, #7
   1c0e8:	add	r3, r5, r3
   1c0ec:	str	r3, [r4, #8]
   1c0f0:	add	r0, r4, r0, lsl #2
   1c0f4:	pop	{r4, r5, r6, pc}
   1c0f8:	mov	r0, #1024	; 0x400
   1c0fc:	bl	1c064 <next@@Base+0x10f8>
   1c100:	ldr	r3, [r4, #8]
   1c104:	cmp	r3, #0
   1c108:	addne	r2, r4, #4096	; 0x1000
   1c10c:	ldrne	r2, [r2, #28]
   1c110:	strne	r2, [r4, #28]
   1c114:	b	1c0e4 <next@@Base+0x1178>
   1c118:	andeq	r2, r1, r0, lsr pc
   1c11c:	andeq	r0, r0, r0, lsr #2
   1c120:	ldr	r3, [pc, #192]	; 1c1e8 <next@@Base+0x127c>
   1c124:	ldr	r2, [pc, #192]	; 1c1ec <next@@Base+0x1280>
   1c128:	add	r3, pc, r3
   1c12c:	push	{r4, r5, r6, lr}
   1c130:	ldr	r4, [r3, r2]
   1c134:	ldr	r2, [r4, #24]
   1c138:	ldr	r3, [r4, #8]
   1c13c:	ldr	ip, [r4, #12]
   1c140:	cmp	r2, #0
   1c144:	sub	ip, ip, r3
   1c148:	ble	1c1c4 <next@@Base+0x1258>
   1c14c:	cmp	ip, r0
   1c150:	mov	r5, r0
   1c154:	bcs	1c1b0 <next@@Base+0x1244>
   1c158:	ldr	r2, [r4, #4]
   1c15c:	cmp	ip, #0
   1c160:	add	r2, r2, r3
   1c164:	str	r2, [r4, #4]
   1c168:	addne	r2, r4, #28
   1c16c:	mov	r0, r4
   1c170:	ldrne	r3, [r2, r3, lsl #2]
   1c174:	mov	r6, #0
   1c178:	strne	r3, [r4, #28]
   1c17c:	ldr	r3, [r0], #28
   1c180:	mov	r2, #4096	; 0x1000
   1c184:	add	r0, r0, ip, lsl #2
   1c188:	mov	r1, #1
   1c18c:	str	ip, [r4, #12]
   1c190:	str	r6, [r4, #8]
   1c194:	bl	12010 <fread@plt>
   1c198:	ldr	r3, [r4, #12]
   1c19c:	add	r0, r3, r0, lsr #2
   1c1a0:	cmp	r0, r5
   1c1a4:	str	r0, [r4, #12]
   1c1a8:	bcc	1c1cc <next@@Base+0x1260>
   1c1ac:	ldr	r3, [r4, #8]
   1c1b0:	add	r0, r3, #7
   1c1b4:	add	r5, r5, r3
   1c1b8:	str	r5, [r4, #8]
   1c1bc:	add	r0, r4, r0, lsl #2
   1c1c0:	pop	{r4, r5, r6, pc}
   1c1c4:	mov	r0, #0
   1c1c8:	pop	{r4, r5, r6, pc}
   1c1cc:	ldr	r3, [r4, #16]
   1c1d0:	str	r6, [r4, #12]
   1c1d4:	add	r5, r5, r3
   1c1d8:	sub	r5, r5, r0
   1c1dc:	str	r5, [r4, #16]
   1c1e0:	mov	r0, r6
   1c1e4:	pop	{r4, r5, r6, pc}
   1c1e8:	ldrdeq	r2, [r1], -r0
   1c1ec:	andeq	r0, r0, r0, lsr #2
   1c1f0:	push	{r4, r5, r6, lr}
   1c1f4:	ldr	r4, [pc, #92]	; 1c258 <next@@Base+0x12ec>
   1c1f8:	ldr	r3, [pc, #92]	; 1c25c <next@@Base+0x12f0>
   1c1fc:	add	r4, pc, r4
   1c200:	ldr	r5, [r4, r3]
   1c204:	ldr	r0, [r5]
   1c208:	cmp	r0, #0
   1c20c:	popne	{r4, r5, r6, pc}
   1c210:	ldr	r0, [pc, #72]	; 1c260 <next@@Base+0x12f4>
   1c214:	add	r0, pc, r0
   1c218:	bl	12028 <getenv@plt>
   1c21c:	cmp	r0, #0
   1c220:	beq	1c250 <next@@Base+0x12e4>
   1c224:	ldr	r1, [pc, #56]	; 1c264 <next@@Base+0x12f8>
   1c228:	add	r1, pc, r1
   1c22c:	bl	12100 <fopen64@plt>
   1c230:	str	r0, [r5]
   1c234:	cmp	r0, #0
   1c238:	popne	{r4, r5, r6, pc}
   1c23c:	ldr	r3, [pc, #36]	; 1c268 <next@@Base+0x12fc>
   1c240:	ldr	r3, [r4, r3]
   1c244:	ldr	r0, [r3]
   1c248:	str	r0, [r5]
   1c24c:	pop	{r4, r5, r6, pc}
   1c250:	ldr	r0, [r5]
   1c254:	b	1c234 <next@@Base+0x12c8>
   1c258:	strdeq	r2, [r1], -ip
   1c25c:	andeq	r0, r0, r0, lsr r1
   1c260:	muleq	r0, ip, r8
   1c264:	muleq	r0, r8, r8
   1c268:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1c26c:	push	{r0, r1, r2, r3}
   1c270:	push	{lr}		; (str lr, [sp, #-4]!)
   1c274:	sub	sp, sp, #12
   1c278:	add	r3, sp, #20
   1c27c:	str	r3, [sp, #4]
   1c280:	bl	1c1f0 <next@@Base+0x1284>
   1c284:	ldr	r1, [sp, #16]
   1c288:	ldr	r2, [sp, #4]
   1c28c:	bl	120dc <vfprintf@plt>
   1c290:	add	sp, sp, #12
   1c294:	pop	{lr}		; (ldr lr, [sp], #4)
   1c298:	add	sp, sp, #16
   1c29c:	bx	lr
   1c2a0:	push	{r4, r5, r6, r7, r8, lr}
   1c2a4:	subs	r6, r1, #0
   1c2a8:	beq	1c2fc <next@@Base+0x1390>
   1c2ac:	cmp	r2, #0
   1c2b0:	ldr	r7, [r6]
   1c2b4:	beq	1c2ec <next@@Base+0x1380>
   1c2b8:	add	r4, r0, #12
   1c2bc:	add	r5, r4, r2, lsl #2
   1c2c0:	mov	r3, #0
   1c2c4:	ldr	r2, [r4, #4]!
   1c2c8:	add	r1, r6, r3, lsl #3
   1c2cc:	cmp	r2, #0
   1c2d0:	add	r8, r3, #1
   1c2d4:	beq	1c2e4 <next@@Base+0x1378>
   1c2d8:	ldr	r0, [r1, #28]
   1c2dc:	bl	11fd4 <free@plt>
   1c2e0:	mov	r3, r8
   1c2e4:	cmp	r4, r5
   1c2e8:	bne	1c2c4 <next@@Base+0x1358>
   1c2ec:	mov	r0, r6
   1c2f0:	bl	11fd4 <free@plt>
   1c2f4:	mov	r0, r7
   1c2f8:	pop	{r4, r5, r6, r7, r8, pc}
   1c2fc:	mov	r7, r6
   1c300:	b	1c2f4 <next@@Base+0x1388>
   1c304:	push	{r4, r5}
   1c308:	mov	r4, r0
   1c30c:	mov	r5, r1
   1c310:	orrs	r3, r4, r5
   1c314:	beq	1c358 <next@@Base+0x13ec>
   1c318:	cmp	r1, #0
   1c31c:	clzeq	r2, r0
   1c320:	addeq	r2, r2, #32
   1c324:	clzne	r2, r1
   1c328:	rsb	r3, r2, #63	; 0x3f
   1c32c:	cmp	r3, #1
   1c330:	bls	1c358 <next@@Base+0x13ec>
   1c334:	rsb	r1, r2, #61	; 0x3d
   1c338:	rsb	r0, r1, #32
   1c33c:	lsr	r3, r4, r1
   1c340:	sub	r1, r1, #32
   1c344:	orr	r3, r3, r5, lsl r0
   1c348:	orr	r3, r3, r5, lsr r1
   1c34c:	rsb	r2, r2, #1073741886	; 0x4000003e
   1c350:	and	r0, r3, #3
   1c354:	add	r0, r0, r2, lsl #2
   1c358:	pop	{r4, r5}
   1c35c:	bx	lr
   1c360:	push	{r4, r5, r6, lr}
   1c364:	mov	r1, r3
   1c368:	mov	r6, r0
   1c36c:	mov	r0, r2
   1c370:	mov	r4, r2
   1c374:	mov	r5, r3
   1c378:	bl	1c304 <next@@Base+0x1398>
   1c37c:	add	r0, r0, r0, lsl #1
   1c380:	lsl	r0, r0, #3
   1c384:	add	r3, r6, r0
   1c388:	ldr	r1, [r6, r0]
   1c38c:	ldr	r2, [r3, #16]
   1c390:	add	r1, r1, #1
   1c394:	str	r1, [r6, r0]
   1c398:	ldrd	r0, [r3, #8]
   1c39c:	ldr	ip, [r3, #20]
   1c3a0:	adds	r2, r2, r4
   1c3a4:	str	r2, [r3, #16]
   1c3a8:	adc	r2, ip, r5
   1c3ac:	cmp	r4, r0
   1c3b0:	sbcs	r1, r5, r1
   1c3b4:	str	r2, [r3, #20]
   1c3b8:	strdlt	r4, [r3, #8]
   1c3bc:	pop	{r4, r5, r6, pc}
   1c3c0:	ldr	r3, [r1, #8]
   1c3c4:	cmp	r3, #0
   1c3c8:	bxeq	lr
   1c3cc:	add	r2, r1, #6016	; 0x1780
   1c3d0:	push	{r4, r5, r6, r7, r8, lr}
   1c3d4:	mov	r3, r1
   1c3d8:	mov	r8, r1
   1c3dc:	mov	r7, r0
   1c3e0:	ldrd	r4, [r1, #24]
   1c3e4:	add	r2, r2, #32
   1c3e8:	mov	ip, #0
   1c3ec:	mov	r0, #0
   1c3f0:	mov	r1, #0
   1c3f4:	str	ip, [r3, #40]	; 0x28
   1c3f8:	strd	r4, [r3, #48]	; 0x30
   1c3fc:	strd	r0, [r3, #56]	; 0x38
   1c400:	add	r3, r3, #24
   1c404:	cmp	r3, r2
   1c408:	bne	1c3f4 <next@@Base+0x1488>
   1c40c:	cmp	r7, #0
   1c410:	popeq	{r4, r5, r6, r7, r8, pc}
   1c414:	add	r8, r8, #40	; 0x28
   1c418:	ldr	r3, [r7, #16]
   1c41c:	cmp	r3, #0
   1c420:	beq	1c4a8 <next@@Base+0x153c>
   1c424:	ldr	r2, [r7, #52]	; 0x34
   1c428:	cmp	r2, #0
   1c42c:	beq	1c4a8 <next@@Base+0x153c>
   1c430:	mov	r6, #0
   1c434:	b	1c444 <next@@Base+0x14d8>
   1c438:	add	r6, r6, #1
   1c43c:	cmp	r2, r6
   1c440:	beq	1c4a8 <next@@Base+0x153c>
   1c444:	ldr	r3, [r7, #56]	; 0x38
   1c448:	ldr	r5, [r3, r6, lsl #2]
   1c44c:	cmp	r5, #0
   1c450:	beq	1c438 <next@@Base+0x14cc>
   1c454:	ldr	r3, [r5]
   1c458:	cmp	r3, r7
   1c45c:	bne	1c438 <next@@Base+0x14cc>
   1c460:	ldr	r3, [r5, #16]
   1c464:	cmp	r3, #0
   1c468:	beq	1c438 <next@@Base+0x14cc>
   1c46c:	mov	r4, #0
   1c470:	ldr	r2, [r5, #20]
   1c474:	lsl	r3, r4, #3
   1c478:	add	r2, r2, r3
   1c47c:	mov	r0, r8
   1c480:	ldrd	r2, [r2]
   1c484:	bl	1c360 <next@@Base+0x13f4>
   1c488:	ldr	r3, [r5, #16]
   1c48c:	add	r4, r4, #1
   1c490:	cmp	r3, r4
   1c494:	bhi	1c470 <next@@Base+0x1504>
   1c498:	ldr	r2, [r7, #52]	; 0x34
   1c49c:	add	r6, r6, #1
   1c4a0:	cmp	r2, r6
   1c4a4:	bne	1c444 <next@@Base+0x14d8>
   1c4a8:	ldr	r7, [r7, #4]
   1c4ac:	cmp	r7, #0
   1c4b0:	bne	1c418 <next@@Base+0x14ac>
   1c4b4:	pop	{r4, r5, r6, r7, r8, pc}
   1c4b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c4bc:	sub	sp, sp, #12
   1c4c0:	mov	r6, r0
   1c4c4:	str	r0, [sp, #4]
   1c4c8:	mov	r8, r2
   1c4cc:	mov	r0, r1
   1c4d0:	mov	r4, r1
   1c4d4:	ldr	r2, [pc, #364]	; 1c648 <next@@Base+0x16dc>
   1c4d8:	mov	r1, #0
   1c4dc:	bl	120a0 <memset@plt>
   1c4e0:	mov	r5, #0
   1c4e4:	cmp	r6, #0
   1c4e8:	str	r5, [r8]
   1c4ec:	beq	1c62c <next@@Base+0x16c0>
   1c4f0:	mov	r9, r5
   1c4f4:	ldr	r0, [r6, #12]
   1c4f8:	bl	12070 <strlen@plt>
   1c4fc:	cmp	r5, r0
   1c500:	strcc	r0, [r8]
   1c504:	mov	r0, r9
   1c508:	ldr	r1, [r6, #8]
   1c50c:	bl	1bfe8 <next@@Base+0x107c>
   1c510:	ldr	r7, [r6, #52]	; 0x34
   1c514:	mov	r1, r7
   1c518:	bl	1bfe8 <next@@Base+0x107c>
   1c51c:	cmp	r7, #0
   1c520:	mov	r9, r0
   1c524:	beq	1c618 <next@@Base+0x16ac>
   1c528:	ldr	r5, [r6, #56]	; 0x38
   1c52c:	add	r7, r5, r7, lsl #2
   1c530:	sub	r7, r7, #4
   1c534:	sub	r5, r5, #4
   1c538:	b	1c568 <next@@Base+0x15fc>
   1c53c:	ldr	r3, [sl]
   1c540:	mov	r0, r9
   1c544:	cmp	r3, r6
   1c548:	beq	1c584 <next@@Base+0x1618>
   1c54c:	mov	r1, #0
   1c550:	bl	1bfe8 <next@@Base+0x107c>
   1c554:	mov	r1, #0
   1c558:	bl	1bfe8 <next@@Base+0x107c>
   1c55c:	mov	r9, r0
   1c560:	cmp	r5, r7
   1c564:	beq	1c618 <next@@Base+0x16ac>
   1c568:	ldr	sl, [r5, #4]!
   1c56c:	cmp	sl, #0
   1c570:	bne	1c53c <next@@Base+0x15d0>
   1c574:	mov	r1, sl
   1c578:	mov	r0, r9
   1c57c:	bl	1bfe8 <next@@Base+0x107c>
   1c580:	b	1c554 <next@@Base+0x15e8>
   1c584:	ldr	r1, [sl, #12]
   1c588:	bl	1bfe8 <next@@Base+0x107c>
   1c58c:	ldr	r1, [sl, #8]
   1c590:	bl	1bfe8 <next@@Base+0x107c>
   1c594:	ldr	r3, [r6, #16]
   1c598:	cmp	r3, #0
   1c59c:	mov	r9, r0
   1c5a0:	beq	1c560 <next@@Base+0x15f4>
   1c5a4:	ldr	fp, [sl, #16]
   1c5a8:	ldr	r3, [r4, #8]
   1c5ac:	mov	r1, fp
   1c5b0:	add	r3, r3, fp
   1c5b4:	str	r3, [r4, #8]
   1c5b8:	bl	1bfe8 <next@@Base+0x107c>
   1c5bc:	cmp	fp, #0
   1c5c0:	mov	r9, r0
   1c5c4:	beq	1c560 <next@@Base+0x15f4>
   1c5c8:	ldr	r2, [sl, #20]
   1c5cc:	ldr	r3, [r4, #16]
   1c5d0:	add	lr, r2, fp, lsl #3
   1c5d4:	ldr	ip, [r4, #20]
   1c5d8:	sub	lr, lr, #8
   1c5dc:	sub	r2, r2, #8
   1c5e0:	ldrd	r0, [r2, #8]!
   1c5e4:	ldrd	sl, [r4, #24]
   1c5e8:	adds	r3, r3, r0
   1c5ec:	adc	ip, ip, r1
   1c5f0:	str	ip, [r4, #20]
   1c5f4:	str	r3, [r4, #16]
   1c5f8:	ldrd	r0, [r2]
   1c5fc:	cmp	sl, r0
   1c600:	sbcs	sl, fp, r1
   1c604:	strdlt	r0, [r4, #24]
   1c608:	cmp	lr, r2
   1c60c:	bne	1c5e0 <next@@Base+0x1674>
   1c610:	cmp	r5, r7
   1c614:	bne	1c568 <next@@Base+0x15fc>
   1c618:	ldr	r6, [r6, #4]
   1c61c:	cmp	r6, #0
   1c620:	beq	1c630 <next@@Base+0x16c4>
   1c624:	ldr	r5, [r8]
   1c628:	b	1c4f4 <next@@Base+0x1588>
   1c62c:	ldr	r9, [sp, #4]
   1c630:	ldr	r0, [sp, #4]
   1c634:	mov	r1, r4
   1c638:	bl	1c3c0 <next@@Base+0x1454>
   1c63c:	mov	r0, r9
   1c640:	add	sp, sp, #12
   1c644:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c648:	andeq	r1, r0, r8, asr #15
   1c64c:	push	{r4, r5, r6, lr}
   1c650:	mov	r4, r0
   1c654:	ldr	r0, [pc, #192]	; 1c71c <next@@Base+0x17b0>
   1c658:	add	r0, pc, r0
   1c65c:	bl	12028 <getenv@plt>
   1c660:	subs	r3, r0, #0
   1c664:	beq	1c670 <next@@Base+0x1704>
   1c668:	bl	120f4 <atoi@plt>
   1c66c:	bic	r3, r0, r0, asr #31
   1c670:	ldr	r0, [pc, #168]	; 1c720 <next@@Base+0x17b4>
   1c674:	str	r3, [r4, #8]
   1c678:	add	r0, pc, r0
   1c67c:	bl	12028 <getenv@plt>
   1c680:	subs	r6, r0, #0
   1c684:	beq	1c6f4 <next@@Base+0x1788>
   1c688:	bl	12070 <strlen@plt>
   1c68c:	ldr	r3, [r4, #4]
   1c690:	add	r3, r3, #2
   1c694:	cmp	r0, #0
   1c698:	bne	1c6d4 <next@@Base+0x1768>
   1c69c:	ldr	r2, [r4, #8]
   1c6a0:	cmp	r2, #0
   1c6a4:	beq	1c708 <next@@Base+0x179c>
   1c6a8:	ldr	r6, [pc, #116]	; 1c724 <next@@Base+0x17b8>
   1c6ac:	mov	r5, #1
   1c6b0:	add	r6, pc, r6
   1c6b4:	str	r5, [r4, #12]
   1c6b8:	add	r0, r3, r5
   1c6bc:	bl	12034 <malloc@plt>
   1c6c0:	mov	r2, r5
   1c6c4:	mov	r1, r6
   1c6c8:	str	r0, [r4]
   1c6cc:	pop	{r4, r5, r6, lr}
   1c6d0:	b	11fe0 <memcpy@plt>
   1c6d4:	sub	r5, r0, #1
   1c6d8:	ldrb	r2, [r6, r5]
   1c6dc:	cmp	r2, #47	; 0x2f
   1c6e0:	movne	r5, r0
   1c6e4:	bne	1c6b4 <next@@Base+0x1748>
   1c6e8:	cmp	r5, #0
   1c6ec:	bne	1c6b4 <next@@Base+0x1748>
   1c6f0:	b	1c69c <next@@Base+0x1730>
   1c6f4:	ldr	r2, [r4, #8]
   1c6f8:	ldr	r3, [r4, #4]
   1c6fc:	cmp	r2, #0
   1c700:	add	r3, r3, #2
   1c704:	bne	1c6a8 <next@@Base+0x173c>
   1c708:	str	r2, [r4, #12]
   1c70c:	mov	r0, r3
   1c710:	bl	12034 <malloc@plt>
   1c714:	str	r0, [r4]
   1c718:	pop	{r4, r5, r6, pc}
   1c71c:	andeq	r2, r0, r0, ror r4
   1c720:	andeq	r2, r0, r4, ror #8
   1c724:	andeq	r2, r0, r4, lsl r4
   1c728:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c72c:	sub	sp, sp, #6080	; 0x17c0
   1c730:	sub	sp, sp, #36	; 0x24
   1c734:	mov	r3, r0
   1c738:	str	r1, [sp, #40]	; 0x28
   1c73c:	mov	r1, #0
   1c740:	mov	r4, r1
   1c744:	str	r0, [sp, #56]	; 0x38
   1c748:	add	r7, r3, #6016	; 0x1780
   1c74c:	add	r0, sp, #64	; 0x40
   1c750:	add	r6, sp, #2016	; 0x7e0
   1c754:	ldr	r2, [pc, #984]	; 1cb34 <next@@Base+0x1bc8>
   1c758:	mov	r5, #251	; 0xfb
   1c75c:	str	r0, [sp, #60]	; 0x3c
   1c760:	str	r5, [sp, #52]	; 0x34
   1c764:	str	r6, [sp, #36]	; 0x24
   1c768:	mov	r9, r4
   1c76c:	bl	120a0 <memset@plt>
   1c770:	mov	sl, r4
   1c774:	add	r3, r7, #8
   1c778:	mov	r0, r4
   1c77c:	str	r3, [sp, #48]	; 0x30
   1c780:	sub	r3, r6, #1952	; 0x7a0
   1c784:	str	r3, [sp, #44]	; 0x2c
   1c788:	ldr	r3, [sp, #48]	; 0x30
   1c78c:	ldr	r2, [r3, #16]
   1c790:	ldr	r7, [r3]
   1c794:	str	r2, [sp, #16]
   1c798:	ldr	r2, [r3, #20]
   1c79c:	cmp	r7, #0
   1c7a0:	str	r2, [sp, #20]
   1c7a4:	beq	1cac4 <next@@Base+0x1b58>
   1c7a8:	ldrd	r2, [r3, #8]
   1c7ac:	str	r9, [sp, #12]
   1c7b0:	strd	r2, [sp, #24]
   1c7b4:	b	1c894 <next@@Base+0x1928>
   1c7b8:	bls	1cb28 <next@@Base+0x1bbc>
   1c7bc:	ldr	r3, [sp, #12]
   1c7c0:	mov	r2, r4
   1c7c4:	umull	r0, r1, r7, r3
   1c7c8:	mov	r3, #0
   1c7cc:	mla	r1, r7, sl, r1
   1c7d0:	bl	1e044 <__gcov_sort_n_vals@@Base+0x568>
   1c7d4:	mov	r6, r0
   1c7d8:	mov	r8, r1
   1c7dc:	ldr	r3, [sp, #12]
   1c7e0:	sub	r4, r4, r7
   1c7e4:	subs	r3, r3, r6
   1c7e8:	sbc	sl, sl, r8
   1c7ec:	mov	fp, r7
   1c7f0:	mov	r7, #0
   1c7f4:	str	r3, [sp, #12]
   1c7f8:	ldr	r0, [sp, #16]
   1c7fc:	ldr	r3, [sp, #20]
   1c800:	str	r7, [sp, #16]
   1c804:	str	r7, [sp, #20]
   1c808:	adds	r6, r6, r0
   1c80c:	ldrd	r0, [sp]
   1c810:	adc	r8, r8, r3
   1c814:	bl	1c304 <next@@Base+0x1398>
   1c818:	ldr	r3, [sp, #44]	; 0x2c
   1c81c:	add	r1, r0, r0, lsl #1
   1c820:	lsl	r1, r1, #3
   1c824:	add	ip, r3, r1
   1c828:	ldr	r3, [sp, #36]	; 0x24
   1c82c:	ldr	lr, [ip, #16]
   1c830:	add	r1, r3, r1
   1c834:	adds	r6, lr, r6
   1c838:	ldr	lr, [ip, #20]
   1c83c:	ldrd	r2, [ip, #8]
   1c840:	adc	lr, lr, r8
   1c844:	ldrd	r8, [sp]
   1c848:	str	lr, [sp, #32]
   1c84c:	orrs	lr, r2, r3
   1c850:	moveq	lr, #1
   1c854:	movne	lr, #0
   1c858:	cmp	r8, r2
   1c85c:	sbcs	r3, r9, r3
   1c860:	orrlt	lr, lr, #1
   1c864:	cmp	lr, #0
   1c868:	str	r6, [ip, #16]
   1c86c:	ldr	r6, [r1, #-1952]	; 0xfffff860
   1c870:	ldr	r3, [sp, #32]
   1c874:	strdne	r8, [ip, #8]
   1c878:	cmp	r4, #0
   1c87c:	add	fp, r6, fp
   1c880:	subeq	r5, r5, #1
   1c884:	cmp	r7, #0
   1c888:	str	r3, [ip, #20]
   1c88c:	str	fp, [r1, #-1952]	; 0xfffff860
   1c890:	beq	1cac0 <next@@Base+0x1b54>
   1c894:	cmp	r4, #0
   1c898:	beq	1c91c <next@@Base+0x19b0>
   1c89c:	add	r2, r5, r5, lsl #1
   1c8a0:	ldr	r3, [sp, #40]	; 0x28
   1c8a4:	add	r2, r3, r2, lsl #3
   1c8a8:	ldrd	r0, [sp, #24]
   1c8ac:	ldr	r3, [r2, #8]
   1c8b0:	ldr	r2, [r2, #12]
   1c8b4:	adds	r3, r0, r3
   1c8b8:	str	r3, [sp]
   1c8bc:	adc	r3, r1, r2
   1c8c0:	cmp	r4, r7
   1c8c4:	str	r3, [sp, #4]
   1c8c8:	bcs	1c7b8 <next@@Base+0x184c>
   1c8cc:	ldr	r6, [sp, #16]
   1c8d0:	ldr	r8, [sp, #20]
   1c8d4:	mov	r2, r7
   1c8d8:	umull	r0, r1, r4, r6
   1c8dc:	mov	r3, #0
   1c8e0:	mla	r1, r4, r8, r1
   1c8e4:	bl	1e044 <__gcov_sort_n_vals@@Base+0x568>
   1c8e8:	sub	r7, r7, r4
   1c8ec:	mov	fp, r4
   1c8f0:	mov	r4, #0
   1c8f4:	subs	r2, r6, r0
   1c8f8:	str	r2, [sp, #16]
   1c8fc:	sbc	r2, r8, r1
   1c900:	ldr	r6, [sp, #12]
   1c904:	mov	r8, sl
   1c908:	mov	r3, r1
   1c90c:	str	r2, [sp, #20]
   1c910:	str	r4, [sp, #12]
   1c914:	mov	sl, r4
   1c918:	b	1c808 <next@@Base+0x189c>
   1c91c:	cmp	r5, #0
   1c920:	blt	1cb20 <next@@Base+0x1bb4>
   1c924:	ldr	r3, [sp, #40]	; 0x28
   1c928:	add	r2, r5, r5, lsl #1
   1c92c:	ldr	r4, [r3, r2, lsl #3]
   1c930:	add	r2, r3, r2, lsl #3
   1c934:	cmp	r4, #0
   1c938:	bne	1cab0 <next@@Base+0x1b44>
   1c93c:	mov	r3, r2
   1c940:	ldr	r9, [sp, #12]
   1c944:	b	1c958 <next@@Base+0x19ec>
   1c948:	ldr	r4, [r3]
   1c94c:	mov	r2, r3
   1c950:	cmp	r4, #0
   1c954:	bne	1cab0 <next@@Base+0x1b44>
   1c958:	subs	r5, r5, #1
   1c95c:	sub	r3, r3, #24
   1c960:	bcs	1c948 <next@@Base+0x19dc>
   1c964:	ldr	r2, [sp, #52]	; 0x34
   1c968:	ldr	ip, [sp, #36]	; 0x24
   1c96c:	ldr	r4, [sp, #16]
   1c970:	lsl	r3, r2, #1
   1c974:	add	r1, r3, r2
   1c978:	sub	r2, ip, #1952	; 0x7a0
   1c97c:	lsl	r1, r1, #3
   1c980:	add	r2, r2, r1
   1c984:	add	r1, ip, r1
   1c988:	ldr	ip, [r2, #16]
   1c98c:	ldr	lr, [r1, #-1952]	; 0xfffff860
   1c990:	adds	ip, ip, r4
   1c994:	add	r7, lr, r7
   1c998:	ldrd	r4, [r2, #8]
   1c99c:	ldr	lr, [r2, #20]
   1c9a0:	str	r7, [r1, #-1952]	; 0xfffff860
   1c9a4:	ldr	r1, [sp, #20]
   1c9a8:	str	ip, [r2, #16]
   1c9ac:	adc	lr, lr, r1
   1c9b0:	orrs	r1, r4, r5
   1c9b4:	str	lr, [r2, #20]
   1c9b8:	beq	1ca90 <next@@Base+0x1b24>
   1c9bc:	ldrd	r6, [sp, #24]
   1c9c0:	cmp	r6, r4
   1c9c4:	sbcs	r2, r7, r5
   1c9c8:	blt	1ca90 <next@@Base+0x1b24>
   1c9cc:	ldr	r2, [sp, #52]	; 0x34
   1c9d0:	ldr	lr, [sp, #60]	; 0x3c
   1c9d4:	add	ip, r3, r2
   1c9d8:	ldr	r3, [sp, #56]	; 0x38
   1c9dc:	lsl	ip, ip, #3
   1c9e0:	add	r1, lr, ip
   1c9e4:	add	ip, r3, ip
   1c9e8:	b	1ca44 <next@@Base+0x1ad8>
   1c9ec:	ldr	r3, [r1, #-8]
   1c9f0:	ldr	r6, [ip, #-8]
   1c9f4:	ldr	r7, [ip, #-4]
   1c9f8:	ldr	r2, [r1, #-4]
   1c9fc:	adds	r6, r3, r6
   1ca00:	ldrd	r4, [r1, #-16]
   1ca04:	adc	r2, r2, r7
   1ca08:	ldr	r3, [r1, #-24]	; 0xffffffe8
   1ca0c:	ldr	r7, [ip, #-24]	; 0xffffffe8
   1ca10:	orrs	r8, r4, r5
   1ca14:	add	r3, r3, r7
   1ca18:	str	r2, [r1, #-4]
   1ca1c:	str	r3, [r1, #-24]	; 0xffffffe8
   1ca20:	str	r6, [r1, #-8]
   1ca24:	ldrd	r2, [ip, #-16]
   1ca28:	sub	ip, ip, #24
   1ca2c:	beq	1ca3c <next@@Base+0x1ad0>
   1ca30:	cmp	r2, r4
   1ca34:	sbcs	r4, r3, r5
   1ca38:	bge	1ca40 <next@@Base+0x1ad4>
   1ca3c:	strd	r2, [r1, #-16]
   1ca40:	sub	r1, r1, #24
   1ca44:	cmp	r1, lr
   1ca48:	bne	1c9ec <next@@Base+0x1a80>
   1ca4c:	ldr	r3, [sp, #36]	; 0x24
   1ca50:	add	r0, r0, r0, lsl #1
   1ca54:	sub	r3, r3, #1952	; 0x7a0
   1ca58:	add	r3, r3, r0, lsl #3
   1ca5c:	ldr	r1, [sp, #60]	; 0x3c
   1ca60:	ldr	r2, [r3, #16]
   1ca64:	ldr	ip, [r3, #20]
   1ca68:	adds	r9, r2, r9
   1ca6c:	adc	sl, ip, sl
   1ca70:	ldr	r0, [sp, #56]	; 0x38
   1ca74:	ldr	r2, [pc, #184]	; 1cb34 <next@@Base+0x1bc8>
   1ca78:	str	r9, [r3, #16]
   1ca7c:	str	sl, [r3, #20]
   1ca80:	bl	11fe0 <memcpy@plt>
   1ca84:	add	sp, sp, #6080	; 0x17c0
   1ca88:	add	sp, sp, #36	; 0x24
   1ca8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ca90:	ldr	r2, [sp, #52]	; 0x34
   1ca94:	ldrd	r4, [sp, #24]
   1ca98:	add	r1, r3, r2
   1ca9c:	ldr	r2, [sp, #36]	; 0x24
   1caa0:	sub	r2, r2, #1952	; 0x7a0
   1caa4:	add	r2, r2, r1, lsl #3
   1caa8:	strd	r4, [r2, #8]
   1caac:	b	1c9cc <next@@Base+0x1a60>
   1cab0:	ldr	r3, [r2, #16]
   1cab4:	ldr	sl, [r2, #20]
   1cab8:	str	r3, [sp, #12]
   1cabc:	b	1c8a8 <next@@Base+0x193c>
   1cac0:	ldr	r9, [sp, #12]
   1cac4:	ldr	r3, [sp, #52]	; 0x34
   1cac8:	sub	r3, r3, #1
   1cacc:	str	r3, [sp, #52]	; 0x34
   1cad0:	cmn	r3, #1
   1cad4:	ldr	r3, [sp, #48]	; 0x30
   1cad8:	sub	r3, r3, #24
   1cadc:	str	r3, [sp, #48]	; 0x30
   1cae0:	bne	1c788 <next@@Base+0x181c>
   1cae4:	cmp	r4, #0
   1cae8:	subne	r5, r5, #1
   1caec:	cmp	r5, #0
   1caf0:	blt	1ca4c <next@@Base+0x1ae0>
   1caf4:	add	r5, r5, r5, lsl #1
   1caf8:	ldr	ip, [sp, #40]	; 0x28
   1cafc:	add	r3, ip, r5, lsl #3
   1cb00:	ldr	r2, [r3, #16]
   1cb04:	ldr	r1, [r3, #20]
   1cb08:	adds	r9, r9, r2
   1cb0c:	adc	sl, sl, r1
   1cb10:	cmp	ip, r3
   1cb14:	sub	r3, r3, #24
   1cb18:	bne	1cb00 <next@@Base+0x1b94>
   1cb1c:	b	1ca4c <next@@Base+0x1ae0>
   1cb20:	ldr	r9, [sp, #12]
   1cb24:	b	1c964 <next@@Base+0x19f8>
   1cb28:	ldr	r6, [sp, #12]
   1cb2c:	mov	r8, sl
   1cb30:	b	1c7dc <next@@Base+0x1870>
   1cb34:	andeq	r1, r0, r0, lsr #15
   1cb38:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1cb3c:	ldrb	r4, [r0]
   1cb40:	cmp	r4, #47	; 0x2f
   1cb44:	addeq	r5, r0, #1
   1cb48:	ldrbeq	r4, [r0, #1]
   1cb4c:	movne	r5, r0
   1cb50:	cmp	r4, #0
   1cb54:	beq	1cba8 <next@@Base+0x1c3c>
   1cb58:	mov	r6, r0
   1cb5c:	mov	r7, #0
   1cb60:	mov	r8, #47	; 0x2f
   1cb64:	ldr	sl, [pc, #136]	; 1cbf4 <next@@Base+0x1c88>
   1cb68:	b	1cb78 <next@@Base+0x1c0c>
   1cb6c:	ldrb	r4, [r5, #1]!
   1cb70:	cmp	r4, #0
   1cb74:	beq	1cba8 <next@@Base+0x1c3c>
   1cb78:	cmp	r4, #47	; 0x2f
   1cb7c:	bne	1cb6c <next@@Base+0x1c00>
   1cb80:	strb	r7, [r5]
   1cb84:	mov	r1, #0
   1cb88:	mov	r0, r6
   1cb8c:	bl	120b8 <access@plt>
   1cb90:	cmn	r0, #1
   1cb94:	beq	1cbb4 <next@@Base+0x1c48>
   1cb98:	strb	r8, [r5]
   1cb9c:	ldrb	r4, [r5, #1]!
   1cba0:	cmp	r4, #0
   1cba4:	bne	1cb78 <next@@Base+0x1c0c>
   1cba8:	mov	r9, #0
   1cbac:	mov	r0, r9
   1cbb0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cbb4:	mov	r1, sl
   1cbb8:	mov	r0, r6
   1cbbc:	bl	12094 <mkdir@plt>
   1cbc0:	cmn	r0, #1
   1cbc4:	mov	r9, r0
   1cbc8:	bne	1cb98 <next@@Base+0x1c2c>
   1cbcc:	bl	12088 <__errno_location@plt>
   1cbd0:	ldr	r3, [r0]
   1cbd4:	cmp	r3, #17
   1cbd8:	beq	1cb98 <next@@Base+0x1c2c>
   1cbdc:	ldr	r0, [pc, #20]	; 1cbf8 <next@@Base+0x1c8c>
   1cbe0:	mov	r1, r6
   1cbe4:	add	r0, pc, r0
   1cbe8:	bl	1c26c <next@@Base+0x1300>
   1cbec:	strb	r4, [r5]
   1cbf0:	b	1cbac <next@@Base+0x1c40>
   1cbf4:	andeq	r0, r0, sp, ror #3
   1cbf8:	andeq	r1, r0, r4, lsl #30
   1cbfc:	ldr	r3, [pc, #76]	; 1cc50 <next@@Base+0x1ce4>
   1cc00:	cmp	r1, r3
   1cc04:	beq	1cc48 <next@@Base+0x1cdc>
   1cc08:	cmp	r2, #0
   1cc0c:	ldr	ip, [pc, #64]	; 1cc54 <next@@Base+0x1ce8>
   1cc10:	push	{lr}		; (str lr, [sp, #-4]!)
   1cc14:	rev	r3, r1
   1cc18:	sub	sp, sp, #12
   1cc1c:	ldreq	r2, [r0]
   1cc20:	ldr	r0, [pc, #48]	; 1cc58 <next@@Base+0x1cec>
   1cc24:	stm	sp, {r3, ip}
   1cc28:	mov	r1, r2
   1cc2c:	mov	r3, sp
   1cc30:	add	r2, sp, #4
   1cc34:	add	r0, pc, r0
   1cc38:	bl	1c26c <next@@Base+0x1300>
   1cc3c:	mov	r0, #0
   1cc40:	add	sp, sp, #12
   1cc44:	pop	{pc}		; (ldr pc, [sp], #4)
   1cc48:	mov	r0, #1
   1cc4c:	bx	lr
   1cc50:	teqmi	r8, sl, lsr #6
   1cc54:	bcs	cead60 <__bss_end__@@Base+0xcb8590>
   1cc58:	ldrdeq	r1, [r0], -ip
   1cc5c:	ldr	r2, [r2]
   1cc60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1cc64:	cmp	r2, #0
   1cc68:	mov	r4, r3
   1cc6c:	ldr	r2, [r3, #12]
   1cc70:	ldr	r3, [sp, #32]
   1cc74:	beq	1cd60 <next@@Base+0x1df4>
   1cc78:	cmp	r1, #0
   1cc7c:	addeq	r1, r2, #1
   1cc80:	streq	r1, [r4, #12]
   1cc84:	cmp	r2, #0
   1cc88:	ldr	r0, [r4, #16]
   1cc8c:	ldr	lr, [r4, #20]
   1cc90:	ldrd	r6, [r4, #24]
   1cc94:	ldr	r2, [r4, #32]
   1cc98:	ldr	r1, [r4, #36]	; 0x24
   1cc9c:	bne	1cd0c <next@@Base+0x1da0>
   1cca0:	ldr	ip, [r3, #8]
   1cca4:	str	ip, [r4, #8]
   1cca8:	ldr	ip, [r3, #16]
   1ccac:	ldr	r5, [r3, #20]
   1ccb0:	adds	r0, ip, r0
   1ccb4:	adc	lr, r5, lr
   1ccb8:	str	r0, [r4, #16]
   1ccbc:	str	lr, [r4, #20]
   1ccc0:	ldrd	r8, [r3, #24]
   1ccc4:	cmp	r6, r8
   1ccc8:	sbcs	r0, r7, r9
   1cccc:	bge	1cd80 <next@@Base+0x1e14>
   1ccd0:	strd	r8, [r4, #24]
   1ccd4:	ldr	r0, [r3, #24]
   1ccd8:	ldr	ip, [r3, #28]
   1ccdc:	adds	r2, r0, r2
   1cce0:	adc	r1, ip, r1
   1cce4:	str	r1, [r4, #36]	; 0x24
   1cce8:	str	r2, [r4, #32]
   1ccec:	add	r1, r3, #40	; 0x28
   1ccf0:	ldr	r2, [pc, #176]	; 1cda8 <next@@Base+0x1e3c>
   1ccf4:	add	r0, r4, #40	; 0x28
   1ccf8:	bl	11fe0 <memcpy@plt>
   1ccfc:	ldr	r3, [sp, #36]	; 0x24
   1cd00:	mov	r0, #0
   1cd04:	str	r3, [r4]
   1cd08:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cd0c:	ldr	ip, [r3, #16]
   1cd10:	ldr	r5, [r3, #20]
   1cd14:	adds	r0, ip, r0
   1cd18:	adc	lr, r5, lr
   1cd1c:	str	r0, [r4, #16]
   1cd20:	str	lr, [r4, #20]
   1cd24:	ldrd	r8, [r3, #24]
   1cd28:	cmp	r6, r8
   1cd2c:	sbcs	r0, r7, r9
   1cd30:	bge	1cd94 <next@@Base+0x1e28>
   1cd34:	strd	r8, [r4, #24]
   1cd38:	ldr	r0, [r3, #24]
   1cd3c:	ldr	ip, [r3, #28]
   1cd40:	adds	r2, r0, r2
   1cd44:	adc	r1, ip, r1
   1cd48:	str	r1, [r4, #36]	; 0x24
   1cd4c:	str	r2, [r4, #32]
   1cd50:	add	r1, r3, #40	; 0x28
   1cd54:	add	r0, r4, #40	; 0x28
   1cd58:	bl	1c728 <next@@Base+0x17bc>
   1cd5c:	b	1ccfc <next@@Base+0x1d90>
   1cd60:	cmp	r2, #0
   1cd64:	beq	1ccfc <next@@Base+0x1d90>
   1cd68:	mov	r1, r0
   1cd6c:	ldr	r0, [pc, #56]	; 1cdac <next@@Base+0x1e40>
   1cd70:	add	r0, pc, r0
   1cd74:	bl	1c26c <next@@Base+0x1300>
   1cd78:	mvn	r0, #0
   1cd7c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cd80:	adds	r2, r2, r8
   1cd84:	adc	r1, r1, r9
   1cd88:	str	r1, [r4, #36]	; 0x24
   1cd8c:	str	r2, [r4, #32]
   1cd90:	b	1ccec <next@@Base+0x1d80>
   1cd94:	adds	r2, r2, r8
   1cd98:	adc	r1, r1, r9
   1cd9c:	str	r1, [r4, #36]	; 0x24
   1cda0:	str	r2, [r4, #32]
   1cda4:	b	1cd50 <next@@Base+0x1de4>
   1cda8:	andeq	r1, r0, r0, lsr #15
   1cdac:	ldrdeq	r1, [r0], -r8
   1cdb0:	ldr	r0, [pc, #52]	; 1cdec <next@@Base+0x1e80>
   1cdb4:	ldr	r3, [pc, #52]	; 1cdf0 <next@@Base+0x1e84>
   1cdb8:	add	r0, pc, r0
   1cdbc:	push	{lr}		; (str lr, [sp, #-4]!)
   1cdc0:	mov	ip, #0
   1cdc4:	ldr	r3, [r0, r3]
   1cdc8:	mvn	lr, #0
   1cdcc:	mov	r2, ip
   1cdd0:	str	lr, [r3, #24]
   1cdd4:	mov	r1, ip
   1cdd8:	ldr	r0, [r3]
   1cddc:	pop	{lr}		; (ldr lr, [sp], #4)
   1cde0:	str	ip, [r3, #4]
   1cde4:	str	ip, [r3, #8]
   1cde8:	b	1210c <fseek@plt>
   1cdec:	andeq	r2, r1, r0, asr #4
   1cdf0:	andeq	r0, r0, r0, lsr #2
   1cdf4:	push	{r4, r5, r6, r7, lr}
   1cdf8:	mov	r2, #0
   1cdfc:	sub	sp, sp, #36	; 0x24
   1ce00:	mov	r3, #0
   1ce04:	mov	r4, #0
   1ce08:	mov	r6, r0
   1ce0c:	strd	r2, [sp, #8]
   1ce10:	strd	r2, [sp, #16]
   1ce14:	strh	r4, [sp, #2]
   1ce18:	bl	12058 <getpid@plt>
   1ce1c:	ldr	r3, [pc, #196]	; 1cee8 <next@@Base+0x1f7c>
   1ce20:	ldr	ip, [pc, #196]	; 1ceec <next@@Base+0x1f80>
   1ce24:	add	r3, pc, r3
   1ce28:	mvn	lr, #0
   1ce2c:	mov	r7, #1
   1ce30:	ldr	r2, [pc, #184]	; 1cef0 <next@@Base+0x1f84>
   1ce34:	mov	r1, #66	; 0x42
   1ce38:	str	r0, [sp, #24]
   1ce3c:	ldr	r5, [r3, ip]
   1ce40:	mov	r0, r6
   1ce44:	strh	r7, [sp]
   1ce48:	str	r4, [r5, #4]
   1ce4c:	str	r4, [r5, #12]
   1ce50:	str	r4, [r5, #8]
   1ce54:	str	r4, [r5, #20]
   1ce58:	str	lr, [r5, #16]
   1ce5c:	bl	1201c <open64@plt>
   1ce60:	subs	r6, r0, #0
   1ce64:	movlt	r0, r4
   1ce68:	blt	1cecc <next@@Base+0x1f60>
   1ce6c:	mov	r4, sp
   1ce70:	mov	r2, r4
   1ce74:	mov	r1, #14
   1ce78:	mov	r0, r6
   1ce7c:	bl	120d0 <fcntl64@plt>
   1ce80:	cmp	r0, #0
   1ce84:	beq	1ce98 <next@@Base+0x1f2c>
   1ce88:	bl	12088 <__errno_location@plt>
   1ce8c:	ldr	r3, [r0]
   1ce90:	cmp	r3, #4
   1ce94:	beq	1ce70 <next@@Base+0x1f04>
   1ce98:	ldr	r1, [pc, #84]	; 1cef4 <next@@Base+0x1f88>
   1ce9c:	mov	r0, r6
   1cea0:	add	r1, pc, r1
   1cea4:	bl	11f8c <fdopen@plt>
   1cea8:	cmp	r0, #0
   1ceac:	mov	r4, r0
   1ceb0:	str	r0, [r5]
   1ceb4:	beq	1ced4 <next@@Base+0x1f68>
   1ceb8:	mov	r4, #1
   1cebc:	mov	r1, #0
   1cec0:	str	r4, [r5, #24]
   1cec4:	bl	11fa4 <setbuf@plt>
   1cec8:	mov	r0, r4
   1cecc:	add	sp, sp, #36	; 0x24
   1ced0:	pop	{r4, r5, r6, r7, pc}
   1ced4:	mov	r0, r6
   1ced8:	bl	12124 <close@plt>
   1cedc:	mov	r0, r4
   1cee0:	add	sp, sp, #36	; 0x24
   1cee4:	pop	{r4, r5, r6, r7, pc}
   1cee8:	ldrdeq	r2, [r1], -r4
   1ceec:	andeq	r0, r0, r0, lsr #2
   1cef0:			; <UNDEFINED> instruction: 0x000001b6
   1cef4:	ldrdeq	r1, [r0], -r4
   1cef8:	push	{r4, r5, r6, lr}
   1cefc:	mov	r4, r1
   1cf00:	ldr	r5, [pc, #248]	; 1d000 <next@@Base+0x2094>
   1cf04:	ldr	ip, [r4, #8]
   1cf08:	ldr	lr, [r4, #12]
   1cf0c:	ldr	r6, [r4]
   1cf10:	cmp	ip, #0
   1cf14:	mov	r1, r0
   1cf18:	add	r5, pc, r5
   1cf1c:	add	r0, r6, lr
   1cf20:	ble	1cf5c <next@@Base+0x1ff0>
   1cf24:	ldrb	r3, [r1]
   1cf28:	cmp	r3, #47	; 0x2f
   1cf2c:	addeq	r2, r1, #1
   1cf30:	ldrbeq	r3, [r1, #1]
   1cf34:	movne	r2, r1
   1cf38:	cmp	r3, #0
   1cf3c:	beq	1cf5c <next@@Base+0x1ff0>
   1cf40:	cmp	r3, #47	; 0x2f
   1cf44:	moveq	r1, r2
   1cf48:	ldrb	r3, [r2, #1]!
   1cf4c:	subeq	ip, ip, #1
   1cf50:	cmp	r3, #0
   1cf54:	cmpne	ip, #0
   1cf58:	bne	1cf40 <next@@Base+0x1fd4>
   1cf5c:	cmp	lr, #0
   1cf60:	bne	1cf80 <next@@Base+0x2014>
   1cf64:	bl	12004 <strcpy@plt>
   1cf68:	ldr	r0, [r4]
   1cf6c:	bl	1cdf4 <next@@Base+0x1e88>
   1cf70:	cmp	r0, #0
   1cf74:	beq	1cf98 <next@@Base+0x202c>
   1cf78:	mov	r0, #0
   1cf7c:	pop	{r4, r5, r6, pc}
   1cf80:	ldrb	r3, [r1]
   1cf84:	cmp	r3, #47	; 0x2f
   1cf88:	movne	r3, #47	; 0x2f
   1cf8c:	addne	r0, r0, #1
   1cf90:	strbne	r3, [r6, lr]
   1cf94:	b	1cf64 <next@@Base+0x1ff8>
   1cf98:	ldr	r0, [r4]
   1cf9c:	bl	1cb38 <next@@Base+0x1bcc>
   1cfa0:	cmp	r0, #0
   1cfa4:	bne	1cfdc <next@@Base+0x2070>
   1cfa8:	ldr	r0, [r4]
   1cfac:	bl	1cdf4 <next@@Base+0x1e88>
   1cfb0:	cmp	r0, #0
   1cfb4:	bne	1cf78 <next@@Base+0x200c>
   1cfb8:	ldr	r3, [pc, #68]	; 1d004 <next@@Base+0x2098>
   1cfbc:	ldr	r1, [pc, #68]	; 1d008 <next@@Base+0x209c>
   1cfc0:	ldr	r2, [r4]
   1cfc4:	ldr	r3, [r5, r3]
   1cfc8:	add	r1, pc, r1
   1cfcc:	ldr	r0, [r3]
   1cfd0:	bl	1207c <fprintf@plt>
   1cfd4:	mvn	r0, #0
   1cfd8:	pop	{r4, r5, r6, pc}
   1cfdc:	ldr	r3, [pc, #32]	; 1d004 <next@@Base+0x2098>
   1cfe0:	ldr	r1, [pc, #36]	; 1d00c <next@@Base+0x20a0>
   1cfe4:	ldr	r2, [r4]
   1cfe8:	ldr	r3, [r5, r3]
   1cfec:	add	r1, pc, r1
   1cff0:	ldr	r0, [r3]
   1cff4:	bl	1207c <fprintf@plt>
   1cff8:	mvn	r0, #0
   1cffc:	pop	{r4, r5, r6, pc}
   1d000:	andeq	r2, r1, r0, ror #1
   1d004:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1d008:	andeq	r1, r0, r4, asr #23
   1d00c:	andeq	r1, r0, ip, lsl #23
   1d010:	ldr	r3, [pc, #96]	; 1d078 <next@@Base+0x210c>
   1d014:	ldr	r2, [pc, #96]	; 1d07c <next@@Base+0x2110>
   1d018:	add	r3, pc, r3
   1d01c:	push	{r4, lr}
   1d020:	ldr	r4, [r3, r2]
   1d024:	ldr	r0, [r4]
   1d028:	cmp	r0, #0
   1d02c:	beq	1d04c <next@@Base+0x20e0>
   1d030:	ldr	r3, [r4, #8]
   1d034:	cmp	r3, #0
   1d038:	bne	1d05c <next@@Base+0x20f0>
   1d03c:	bl	120c4 <fclose@plt>
   1d040:	mov	r3, #0
   1d044:	str	r3, [r4]
   1d048:	str	r3, [r4, #12]
   1d04c:	mov	r3, #0
   1d050:	str	r3, [r4, #24]
   1d054:	ldr	r0, [r4, #20]
   1d058:	pop	{r4, pc}
   1d05c:	ldr	r2, [r4, #24]
   1d060:	cmp	r2, #0
   1d064:	bge	1d03c <next@@Base+0x20d0>
   1d068:	mov	r0, r3
   1d06c:	bl	1c064 <next@@Base+0x10f8>
   1d070:	ldr	r0, [r4]
   1d074:	b	1d03c <next@@Base+0x20d0>
   1d078:	andeq	r1, r1, r0, ror #31
   1d07c:	andeq	r0, r0, r0, lsr #2
   1d080:	push	{r4, lr}
   1d084:	mov	r4, r0
   1d088:	mov	r0, #1
   1d08c:	bl	1c0c0 <next@@Base+0x1154>
   1d090:	str	r4, [r0]
   1d094:	pop	{r4, pc}
   1d098:	push	{r4, r5, r6, lr}
   1d09c:	mov	r5, r0
   1d0a0:	mov	r0, #2
   1d0a4:	mov	r4, r1
   1d0a8:	bl	1c0c0 <next@@Base+0x1154>
   1d0ac:	str	r5, [r0]
   1d0b0:	str	r4, [r0, #4]
   1d0b4:	pop	{r4, r5, r6, pc}
   1d0b8:	push	{r4, r5, r6, lr}
   1d0bc:	mov	r5, r0
   1d0c0:	mov	r0, #2
   1d0c4:	mov	r4, r1
   1d0c8:	bl	1c0c0 <next@@Base+0x1154>
   1d0cc:	str	r5, [r0]
   1d0d0:	str	r4, [r0, #4]
   1d0d4:	pop	{r4, r5, r6, pc}
   1d0d8:	mov	r2, #0
   1d0dc:	push	{r4, r5, r6, r7, r8, lr}
   1d0e0:	mov	r3, r2
   1d0e4:	sub	sp, sp, #32
   1d0e8:	mov	r5, r1
   1d0ec:	mov	r7, r2
   1d0f0:	mov	r4, r1
   1d0f4:	mov	r8, #1
   1d0f8:	str	r2, [sp]
   1d0fc:	str	r2, [sp, #4]
   1d100:	str	r2, [sp, #8]
   1d104:	str	r2, [sp, #12]
   1d108:	str	r2, [sp, #16]
   1d10c:	str	r2, [sp, #20]
   1d110:	str	r2, [sp, #24]
   1d114:	str	r2, [sp, #28]
   1d118:	lsr	r2, r3, #5
   1d11c:	ldr	lr, [r1, #40]	; 0x28
   1d120:	add	ip, sp, #32
   1d124:	cmp	lr, #0
   1d128:	add	r2, ip, r2, lsl #2
   1d12c:	and	r6, r3, #31
   1d130:	ldrne	ip, [r2, #-32]	; 0xffffffe0
   1d134:	add	r3, r3, #1
   1d138:	orrne	ip, ip, r8, lsl r6
   1d13c:	addne	r7, r7, #1
   1d140:	strne	ip, [r2, #-32]	; 0xffffffe0
   1d144:	cmp	r3, #252	; 0xfc
   1d148:	add	r1, r1, #24
   1d14c:	bne	1d118 <next@@Base+0x21ac>
   1d150:	add	r7, r7, r7, lsl #2
   1d154:	add	r1, r7, #17
   1d158:	bl	1d0b8 <next@@Base+0x214c>
   1d15c:	ldr	r0, [r5]
   1d160:	bl	1d080 <next@@Base+0x2114>
   1d164:	ldr	r0, [r5, #8]
   1d168:	bl	1d080 <next@@Base+0x2114>
   1d16c:	ldr	r0, [r5, #12]
   1d170:	bl	1d080 <next@@Base+0x2114>
   1d174:	ldrd	r0, [r5, #16]
   1d178:	bl	1d098 <next@@Base+0x212c>
   1d17c:	ldrd	r0, [r5, #24]
   1d180:	bl	1d098 <next@@Base+0x212c>
   1d184:	ldrd	r0, [r5, #32]
   1d188:	bl	1d098 <next@@Base+0x212c>
   1d18c:	sub	r6, sp, #4
   1d190:	add	r7, sp, #28
   1d194:	ldr	r0, [r6, #4]!
   1d198:	bl	1d080 <next@@Base+0x2114>
   1d19c:	cmp	r7, r6
   1d1a0:	bne	1d194 <next@@Base+0x2228>
   1d1a4:	add	r5, r5, #6016	; 0x1780
   1d1a8:	add	r5, r5, #32
   1d1ac:	ldr	r3, [r4, #40]	; 0x28
   1d1b0:	subs	r0, r3, #0
   1d1b4:	beq	1d1cc <next@@Base+0x2260>
   1d1b8:	bl	1d080 <next@@Base+0x2114>
   1d1bc:	ldrd	r0, [r4, #48]	; 0x30
   1d1c0:	bl	1d098 <next@@Base+0x212c>
   1d1c4:	ldrd	r0, [r4, #56]	; 0x38
   1d1c8:	bl	1d098 <next@@Base+0x212c>
   1d1cc:	add	r4, r4, #24
   1d1d0:	cmp	r4, r5
   1d1d4:	bne	1d1ac <next@@Base+0x2240>
   1d1d8:	add	sp, sp, #32
   1d1dc:	pop	{r4, r5, r6, r7, r8, pc}
   1d1e0:	push	{r4, lr}
   1d1e4:	mov	r0, #1
   1d1e8:	bl	1c120 <next@@Base+0x11b4>
   1d1ec:	subs	r3, r0, #0
   1d1f0:	popeq	{r4, pc}
   1d1f4:	ldr	r0, [r3]
   1d1f8:	pop	{r4, lr}
   1d1fc:	b	1bfe4 <next@@Base+0x1078>
   1d200:	push	{r4, lr}
   1d204:	mov	r0, #2
   1d208:	bl	1c120 <next@@Base+0x11b4>
   1d20c:	subs	r2, r0, #0
   1d210:	beq	1d234 <next@@Base+0x22c8>
   1d214:	ldr	r0, [r2]
   1d218:	bl	1bfe4 <next@@Base+0x1078>
   1d21c:	mov	r3, r0
   1d220:	ldr	r0, [r2, #4]
   1d224:	bl	1bfe4 <next@@Base+0x1078>
   1d228:	mov	r1, r0
   1d22c:	mov	r0, r3
   1d230:	pop	{r4, pc}
   1d234:	mov	r3, r2
   1d238:	mov	r1, r2
   1d23c:	mov	r0, r3
   1d240:	pop	{r4, pc}
   1d244:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d248:	sub	sp, sp, #28
   1d24c:	mov	r8, r1
   1d250:	str	r3, [sp, #12]
   1d254:	mov	r4, #0
   1d258:	add	r3, r1, #52	; 0x34
   1d25c:	add	r1, r1, #16
   1d260:	str	r0, [sp, #20]
   1d264:	str	r2, [sp, #16]
   1d268:	ldr	r2, [r3, #-4]!
   1d26c:	cmp	r2, #0
   1d270:	addne	r4, r4, #1
   1d274:	cmp	r1, r3
   1d278:	bne	1d268 <next@@Base+0x22fc>
   1d27c:	add	r4, r4, #4
   1d280:	lsl	r4, r4, #3
   1d284:	mov	r0, r4
   1d288:	bl	12034 <malloc@plt>
   1d28c:	subs	r6, r0, #0
   1d290:	beq	1d364 <next@@Base+0x23f8>
   1d294:	ldr	r3, [sp, #12]
   1d298:	mov	r4, #0
   1d29c:	str	r3, [r6, #4]
   1d2a0:	str	r4, [r6]
   1d2a4:	bl	1d1e0 <next@@Base+0x2274>
   1d2a8:	mov	r7, r4
   1d2ac:	add	r5, r8, #12
   1d2b0:	str	r0, [r6, #12]
   1d2b4:	bl	1d1e0 <next@@Base+0x2274>
   1d2b8:	str	r0, [r6, #16]
   1d2bc:	bl	1d1e0 <next@@Base+0x2274>
   1d2c0:	str	r0, [r6, #20]
   1d2c4:	b	1d2d4 <next@@Base+0x2368>
   1d2c8:	add	r4, r4, #1
   1d2cc:	cmp	r4, #9
   1d2d0:	beq	1d350 <next@@Base+0x23e4>
   1d2d4:	ldr	r3, [r5, #4]!
   1d2d8:	cmp	r3, #0
   1d2dc:	beq	1d2c8 <next@@Base+0x235c>
   1d2e0:	bl	1d1e0 <next@@Base+0x2274>
   1d2e4:	lsl	r3, r4, #17
   1d2e8:	add	r3, r3, #27262976	; 0x1a00000
   1d2ec:	add	r3, r3, #65536	; 0x10000
   1d2f0:	cmp	r0, r3
   1d2f4:	bne	1d3b8 <next@@Base+0x244c>
   1d2f8:	bl	1d1e0 <next@@Base+0x2274>
   1d2fc:	lsr	sl, r0, #1
   1d300:	lsl	fp, sl, #3
   1d304:	mov	r0, fp
   1d308:	bl	12034 <malloc@plt>
   1d30c:	subs	r9, r0, #0
   1d310:	beq	1d3c8 <next@@Base+0x245c>
   1d314:	add	r1, r6, r7, lsl #3
   1d318:	cmp	sl, #0
   1d31c:	str	sl, [r1, #24]
   1d320:	str	r9, [r1, #28]
   1d324:	sub	fp, sl, #1
   1d328:	beq	1d340 <next@@Base+0x23d4>
   1d32c:	bl	1d200 <next@@Base+0x2294>
   1d330:	sub	fp, fp, #1
   1d334:	cmn	fp, #1
   1d338:	strd	r0, [r9], #8
   1d33c:	bne	1d32c <next@@Base+0x23c0>
   1d340:	add	r4, r4, #1
   1d344:	cmp	r4, #9
   1d348:	add	r7, r7, #1
   1d34c:	bne	1d2d4 <next@@Base+0x2368>
   1d350:	ldr	r3, [sp, #16]
   1d354:	mov	r0, r6
   1d358:	str	r6, [r3]
   1d35c:	add	sp, sp, #28
   1d360:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d364:	mvn	r5, #0
   1d368:	cmp	r4, #0
   1d36c:	bne	1d3ac <next@@Base+0x2440>
   1d370:	ldr	r3, [pc, #92]	; 1d3d4 <next@@Base+0x2468>
   1d374:	mov	r4, r5
   1d378:	add	r3, pc, r3
   1d37c:	ldr	r0, [pc, #84]	; 1d3d8 <next@@Base+0x246c>
   1d380:	ldr	r2, [sp, #12]
   1d384:	ldr	r1, [sp, #20]
   1d388:	str	r4, [sp]
   1d38c:	add	r0, pc, r0
   1d390:	bl	1c26c <next@@Base+0x1300>
   1d394:	mov	r2, r5
   1d398:	mov	r1, r6
   1d39c:	mov	r0, r8
   1d3a0:	add	sp, sp, #28
   1d3a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d3a8:	b	1c2a0 <next@@Base+0x1334>
   1d3ac:	ldr	r3, [pc, #40]	; 1d3dc <next@@Base+0x2470>
   1d3b0:	add	r3, pc, r3
   1d3b4:	b	1d37c <next@@Base+0x2410>
   1d3b8:	ldr	r3, [pc, #32]	; 1d3e0 <next@@Base+0x2474>
   1d3bc:	mov	r5, r4
   1d3c0:	add	r3, pc, r3
   1d3c4:	b	1d37c <next@@Base+0x2410>
   1d3c8:	mov	r5, r4
   1d3cc:	mov	r4, fp
   1d3d0:	b	1d368 <next@@Base+0x23fc>
   1d3d4:	andeq	r1, r0, r0, lsr r8
   1d3d8:	andeq	r1, r0, r0, asr #16
   1d3dc:	andeq	r1, r0, ip, lsl #16
   1d3e0:	andeq	r1, r0, r8, ror #15
   1d3e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d3e8:	sub	sp, sp, #36	; 0x24
   1d3ec:	mov	r9, r0
   1d3f0:	bl	1d1e0 <next@@Base+0x2274>
   1d3f4:	mov	r7, #0
   1d3f8:	sub	r4, sp, #4
   1d3fc:	add	r5, sp, #28
   1d400:	str	r0, [r9]
   1d404:	bl	1d1e0 <next@@Base+0x2274>
   1d408:	str	r0, [r9, #8]
   1d40c:	bl	1d1e0 <next@@Base+0x2274>
   1d410:	str	r0, [r9, #12]
   1d414:	bl	1d200 <next@@Base+0x2294>
   1d418:	strd	r0, [r9, #16]
   1d41c:	bl	1d200 <next@@Base+0x2294>
   1d420:	strd	r0, [r9, #24]
   1d424:	bl	1d200 <next@@Base+0x2294>
   1d428:	ldr	r2, [pc, #264]	; 1d538 <next@@Base+0x25cc>
   1d42c:	strd	r0, [r9, #32]
   1d430:	add	r0, r9, #40	; 0x28
   1d434:	mov	r1, r7
   1d438:	bl	120a0 <memset@plt>
   1d43c:	bl	1d1e0 <next@@Base+0x2274>
   1d440:	str	r0, [r4, #4]!
   1d444:	bl	1e128 <__gcov_sort_n_vals@@Base+0x64c>
   1d448:	cmp	r4, r5
   1d44c:	add	r7, r7, r0
   1d450:	bne	1d43c <next@@Base+0x24d0>
   1d454:	cmp	r7, #0
   1d458:	sub	r7, r7, #1
   1d45c:	beq	1d524 <next@@Base+0x25b8>
   1d460:	ldr	r8, [pc, #212]	; 1d53c <next@@Base+0x25d0>
   1d464:	ldr	sl, [pc, #212]	; 1d540 <next@@Base+0x25d4>
   1d468:	mov	r4, #0
   1d46c:	add	r8, pc, r8
   1d470:	add	sl, pc, sl
   1d474:	mov	r5, r4
   1d478:	mov	r6, r4
   1d47c:	cmp	r4, #0
   1d480:	addeq	r3, sp, #32
   1d484:	addeq	r6, r3, r5, lsl #2
   1d488:	subeq	r6, r6, #36	; 0x24
   1d48c:	beq	1d4a8 <next@@Base+0x253c>
   1d490:	b	1d4d0 <next@@Base+0x2564>
   1d494:	ldr	r4, [r6, #4]!
   1d498:	add	r3, r5, #1
   1d49c:	cmp	r4, #0
   1d4a0:	bne	1d4c8 <next@@Base+0x255c>
   1d4a4:	mov	r5, r3
   1d4a8:	cmp	r5, #7
   1d4ac:	bls	1d494 <next@@Base+0x2528>
   1d4b0:	mov	r0, r8
   1d4b4:	bl	1c26c <next@@Base+0x1300>
   1d4b8:	ldr	r4, [r6, #4]!
   1d4bc:	add	r3, r5, #1
   1d4c0:	cmp	r4, #0
   1d4c4:	beq	1d4a4 <next@@Base+0x2538>
   1d4c8:	lsl	r6, r5, #5
   1d4cc:	mov	r5, r3
   1d4d0:	tst	r4, #1
   1d4d4:	bne	1d4e8 <next@@Base+0x257c>
   1d4d8:	lsr	r4, r4, #1
   1d4dc:	tst	r4, #1
   1d4e0:	add	r6, r6, #1
   1d4e4:	beq	1d4d8 <next@@Base+0x256c>
   1d4e8:	cmp	r6, #251	; 0xfb
   1d4ec:	bhi	1d52c <next@@Base+0x25c0>
   1d4f0:	bl	1d1e0 <next@@Base+0x2274>
   1d4f4:	add	fp, r6, r6, lsl #1
   1d4f8:	sub	r7, r7, #1
   1d4fc:	add	fp, r9, fp, lsl #3
   1d500:	lsr	r4, r4, #1
   1d504:	add	r6, r6, #1
   1d508:	str	r0, [fp, #40]	; 0x28
   1d50c:	bl	1d200 <next@@Base+0x2294>
   1d510:	strd	r0, [fp, #48]	; 0x30
   1d514:	bl	1d200 <next@@Base+0x2294>
   1d518:	cmn	r7, #1
   1d51c:	strd	r0, [fp, #56]	; 0x38
   1d520:	bne	1d47c <next@@Base+0x2510>
   1d524:	add	sp, sp, #36	; 0x24
   1d528:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d52c:	mov	r0, sl
   1d530:	bl	1c26c <next@@Base+0x1300>
   1d534:	b	1d4f0 <next@@Base+0x2584>
   1d538:	andeq	r1, r0, r0, lsr #15
   1d53c:	andeq	r1, r0, r4, lsl #15
   1d540:	andeq	r1, r0, r0, asr #15
   1d544:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d548:	sub	sp, sp, #6080	; 0x17c0
   1d54c:	sub	sp, sp, #28
   1d550:	mov	r4, r1
   1d554:	strd	r2, [sp, #4]
   1d558:	add	r3, sp, #6144	; 0x1800
   1d55c:	mov	r9, r0
   1d560:	ldr	r7, [r3]
   1d564:	add	r3, sp, #6144	; 0x1800
   1d568:	add	r3, r3, #4
   1d56c:	ldr	r6, [r3]
   1d570:	add	r3, sp, #6144	; 0x1800
   1d574:	add	r3, r3, #8
   1d578:	ldr	sl, [r3]
   1d57c:	bl	1d1e0 <next@@Base+0x2274>
   1d580:	add	r3, r4, #12
   1d584:	mov	r2, r9
   1d588:	str	r3, [sp, #12]
   1d58c:	mov	r1, r0
   1d590:	mov	r0, r3
   1d594:	bl	1cbfc <next@@Base+0x1c90>
   1d598:	cmp	r0, #0
   1d59c:	beq	1d824 <next@@Base+0x28b8>
   1d5a0:	bl	1d1e0 <next@@Base+0x2274>
   1d5a4:	ldr	r3, [r4, #8]
   1d5a8:	cmp	r0, r3
   1d5ac:	bne	1d640 <next@@Base+0x26d4>
   1d5b0:	ldr	fp, [pc, #628]	; 1d82c <next@@Base+0x28c0>
   1d5b4:	add	r5, sp, #16
   1d5b8:	add	fp, pc, fp
   1d5bc:	bl	1bf94 <next@@Base+0x1028>
   1d5c0:	str	r0, [r6]
   1d5c4:	bl	1d1e0 <next@@Base+0x2274>
   1d5c8:	cmp	r0, #-1560281088	; 0xa3000000
   1d5cc:	bne	1d684 <next@@Base+0x2718>
   1d5d0:	bl	1d1e0 <next@@Base+0x2274>
   1d5d4:	mov	r0, r5
   1d5d8:	bl	1d3e4 <next@@Base+0x2478>
   1d5dc:	bl	1bfb8 <next@@Base+0x104c>
   1d5e0:	add	r2, sp, #2000	; 0x7d0
   1d5e4:	add	r2, r2, #8
   1d5e8:	subs	r8, r0, #0
   1d5ec:	bne	1d7b8 <next@@Base+0x284c>
   1d5f0:	ldr	r3, [r7]
   1d5f4:	cmp	r3, #0
   1d5f8:	bne	1d650 <next@@Base+0x26e4>
   1d5fc:	ldr	r3, [r2, #-1992]	; 0xfffff838
   1d600:	cmp	r3, sl
   1d604:	bne	1d5bc <next@@Base+0x2650>
   1d608:	ldr	r3, [sp, #8]
   1d60c:	ldr	r2, [r2, #-1984]	; 0xfffff840
   1d610:	ldr	r3, [r3]
   1d614:	cmp	r2, r3
   1d618:	bne	1d5bc <next@@Base+0x2650>
   1d61c:	ldr	r2, [pc, #524]	; 1d830 <next@@Base+0x28c4>
   1d620:	mov	r1, r5
   1d624:	ldr	r0, [sp, #4]
   1d628:	bl	11fe0 <memcpy@plt>
   1d62c:	ldr	r3, [r6]
   1d630:	str	r3, [r7]
   1d634:	b	1d5bc <next@@Base+0x2650>
   1d638:	cmp	r0, #0
   1d63c:	bne	1d7f8 <next@@Base+0x288c>
   1d640:	mov	r0, #0
   1d644:	add	sp, sp, #6080	; 0x17c0
   1d648:	add	sp, sp, #28
   1d64c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d650:	ldr	r0, [pc, #476]	; 1d834 <next@@Base+0x28c8>
   1d654:	bl	12034 <malloc@plt>
   1d658:	ldr	r2, [pc, #464]	; 1d830 <next@@Base+0x28c4>
   1d65c:	mov	r1, r5
   1d660:	mov	r3, r0
   1d664:	str	r0, [fp]
   1d668:	add	r0, r0, #8
   1d66c:	str	r3, [sp]
   1d670:	bl	11fe0 <memcpy@plt>
   1d674:	ldr	r3, [sp]
   1d678:	str	r8, [r3]
   1d67c:	ldr	fp, [fp]
   1d680:	b	1d5bc <next@@Base+0x2650>
   1d684:	ldr	r5, [r4, #52]	; 0x34
   1d688:	cmp	r5, #0
   1d68c:	beq	1d638 <next@@Base+0x26cc>
   1d690:	ldr	r3, [r4, #56]	; 0x38
   1d694:	cmp	r0, #16777216	; 0x1000000
   1d698:	ldr	r8, [r3]
   1d69c:	bne	1d7f4 <next@@Base+0x2888>
   1d6a0:	ldr	r6, [pc, #400]	; 1d838 <next@@Base+0x28cc>
   1d6a4:	mov	r5, #0
   1d6a8:	add	r6, pc, r6
   1d6ac:	add	r6, r6, #4
   1d6b0:	b	1d6f4 <next@@Base+0x2788>
   1d6b4:	mov	r2, r6
   1d6b8:	mov	r3, r5
   1d6bc:	mov	r1, r4
   1d6c0:	mov	r0, r9
   1d6c4:	bl	1d244 <next@@Base+0x22d8>
   1d6c8:	subs	r6, r0, #0
   1d6cc:	beq	1d7f8 <next@@Base+0x288c>
   1d6d0:	bl	1d1e0 <next@@Base+0x2274>
   1d6d4:	ldr	r3, [r4, #52]	; 0x34
   1d6d8:	add	r5, r5, #1
   1d6dc:	cmp	r3, r5
   1d6e0:	beq	1d638 <next@@Base+0x26cc>
   1d6e4:	ldr	r3, [r4, #56]	; 0x38
   1d6e8:	cmp	r0, #16777216	; 0x1000000
   1d6ec:	ldr	r8, [r3, r5, lsl #2]
   1d6f0:	bne	1d7f8 <next@@Base+0x288c>
   1d6f4:	bl	1d1e0 <next@@Base+0x2274>
   1d6f8:	cmp	r0, #0
   1d6fc:	beq	1d6d0 <next@@Base+0x2764>
   1d700:	cmp	r0, #3
   1d704:	bne	1d7f8 <next@@Base+0x288c>
   1d708:	cmp	r8, #0
   1d70c:	beq	1d6b4 <next@@Base+0x2748>
   1d710:	ldr	r3, [r8]
   1d714:	cmp	r4, r3
   1d718:	bne	1d6b4 <next@@Base+0x2748>
   1d71c:	bl	1d1e0 <next@@Base+0x2274>
   1d720:	ldr	r3, [r8, #4]
   1d724:	cmp	r0, r3
   1d728:	bne	1d7f8 <next@@Base+0x288c>
   1d72c:	bl	1d1e0 <next@@Base+0x2274>
   1d730:	ldr	r3, [r8, #8]
   1d734:	cmp	r0, r3
   1d738:	bne	1d7f8 <next@@Base+0x288c>
   1d73c:	bl	1d1e0 <next@@Base+0x2274>
   1d740:	ldr	r3, [r8, #12]
   1d744:	cmp	r0, r3
   1d748:	bne	1d7f8 <next@@Base+0x288c>
   1d74c:	ldr	r7, [pc, #232]	; 1d83c <next@@Base+0x28d0>
   1d750:	ldr	fp, [sp, #12]
   1d754:	add	r8, r8, #16
   1d758:	ldr	sl, [fp, #4]!
   1d75c:	cmp	sl, #0
   1d760:	beq	1d798 <next@@Base+0x282c>
   1d764:	bl	1d1e0 <next@@Base+0x2274>
   1d768:	str	r0, [sp]
   1d76c:	bl	1d1e0 <next@@Base+0x2274>
   1d770:	ldr	r3, [sp]
   1d774:	cmp	r3, r7
   1d778:	bne	1d7f8 <next@@Base+0x288c>
   1d77c:	ldr	r3, [r8]
   1d780:	mov	r1, r3
   1d784:	cmp	r0, r3, lsl #1
   1d788:	bne	1d7f8 <next@@Base+0x288c>
   1d78c:	ldr	r0, [r8, #4]
   1d790:	blx	sl
   1d794:	add	r8, r8, #8
   1d798:	ldr	r3, [pc, #160]	; 1d840 <next@@Base+0x28d4>
   1d79c:	add	r7, r7, #131072	; 0x20000
   1d7a0:	cmp	r7, r3
   1d7a4:	bne	1d758 <next@@Base+0x27ec>
   1d7a8:	bl	1bfb8 <next@@Base+0x104c>
   1d7ac:	cmp	r0, #0
   1d7b0:	beq	1d6d0 <next@@Base+0x2764>
   1d7b4:	mov	r8, r0
   1d7b8:	cmp	r8, #0
   1d7bc:	blt	1d7e8 <next@@Base+0x287c>
   1d7c0:	ldr	r2, [pc, #124]	; 1d844 <next@@Base+0x28d8>
   1d7c4:	add	r2, pc, r2
   1d7c8:	ldr	r0, [pc, #120]	; 1d848 <next@@Base+0x28dc>
   1d7cc:	mov	r1, r9
   1d7d0:	add	r0, pc, r0
   1d7d4:	bl	1c26c <next@@Base+0x1300>
   1d7d8:	mvn	r0, #0
   1d7dc:	add	sp, sp, #6080	; 0x17c0
   1d7e0:	add	sp, sp, #28
   1d7e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d7e8:	ldr	r2, [pc, #92]	; 1d84c <next@@Base+0x28e0>
   1d7ec:	add	r2, pc, r2
   1d7f0:	b	1d7c8 <next@@Base+0x285c>
   1d7f4:	mov	r5, #0
   1d7f8:	ldr	r2, [pc, #80]	; 1d850 <next@@Base+0x28e4>
   1d7fc:	ldr	r0, [pc, #80]	; 1d854 <next@@Base+0x28e8>
   1d800:	mov	r3, r5
   1d804:	mov	r1, r9
   1d808:	add	r2, pc, r2
   1d80c:	add	r0, pc, r0
   1d810:	bl	1c26c <next@@Base+0x1300>
   1d814:	mvn	r0, #0
   1d818:	add	sp, sp, #6080	; 0x17c0
   1d81c:	add	sp, sp, #28
   1d820:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d824:	mvn	r0, #0
   1d828:	b	1d644 <next@@Base+0x26d8>
   1d82c:	andeq	r4, r1, r0, lsr #32
   1d830:	andeq	r1, r0, r8, asr #15
   1d834:	ldrdeq	r1, [r0], -r0
   1d838:	andeq	r3, r1, r0, lsr pc
   1d83c:			; <UNDEFINED> instruction: 0x01a10000
   1d840:			; <UNDEFINED> instruction: 0x01b30000
   1d844:			; <UNDEFINED> instruction: 0x000014b4
   1d848:	andeq	r1, r0, r4, ror #9
   1d84c:	andeq	r1, r0, r0, lsl #9
   1d850:	andeq	r1, r0, r8, ror r4
   1d854:	andeq	r1, r0, r0, lsl #9
   1d858:	ldr	r3, [pc, #72]	; 1d8a8 <next@@Base+0x293c>
   1d85c:	ldr	r2, [pc, #72]	; 1d8ac <next@@Base+0x2940>
   1d860:	add	r3, pc, r3
   1d864:	push	{r4, r5, r6, lr}
   1d868:	mov	r5, r0
   1d86c:	ldr	r4, [r3, r2]
   1d870:	ldr	r0, [r4, #8]
   1d874:	cmp	r0, #0
   1d878:	bne	1d8a0 <next@@Base+0x2934>
   1d87c:	lsl	r1, r5, #2
   1d880:	mov	r2, #0
   1d884:	ldr	r0, [r4]
   1d888:	bl	1210c <fseek@plt>
   1d88c:	ldr	r0, [r4]
   1d890:	bl	11fec <ftell@plt>
   1d894:	asr	r0, r0, #2
   1d898:	str	r0, [r4, #4]
   1d89c:	pop	{r4, r5, r6, pc}
   1d8a0:	bl	1c064 <next@@Base+0x10f8>
   1d8a4:	b	1d87c <next@@Base+0x2910>
   1d8a8:	muleq	r1, r8, r7
   1d8ac:	andeq	r0, r0, r0, lsr #2
   1d8b0:	cmp	r2, #0
   1d8b4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d8b8:	mov	r8, r0
   1d8bc:	sub	sp, sp, #20
   1d8c0:	mov	r5, r1
   1d8c4:	mov	r4, r3
   1d8c8:	beq	1da98 <next@@Base+0x2b2c>
   1d8cc:	cmp	r4, #0
   1d8d0:	bne	1dab4 <next@@Base+0x2b48>
   1d8d4:	mov	r1, r5
   1d8d8:	ldr	r5, [pc, #480]	; 1dac0 <next@@Base+0x2b54>
   1d8dc:	mov	r0, #-1560281088	; 0xa3000000
   1d8e0:	add	r5, pc, r5
   1d8e4:	bl	1d0d8 <next@@Base+0x216c>
   1d8e8:	ldr	r4, [r5]
   1d8ec:	cmp	r4, #0
   1d8f0:	beq	1d91c <next@@Base+0x29b0>
   1d8f4:	add	r1, r4, #8
   1d8f8:	mov	r0, #-1560281088	; 0xa3000000
   1d8fc:	bl	1d0d8 <next@@Base+0x216c>
   1d900:	ldr	r3, [r5]
   1d904:	mov	r0, r3
   1d908:	ldr	r4, [r3]
   1d90c:	bl	11fd4 <free@plt>
   1d910:	cmp	r4, #0
   1d914:	str	r4, [r5]
   1d918:	bne	1d8f4 <next@@Base+0x2988>
   1d91c:	ldr	r3, [r8, #52]	; 0x34
   1d920:	cmp	r3, #0
   1d924:	beq	1da70 <next@@Base+0x2b04>
   1d928:	ldr	r3, [pc, #404]	; 1dac4 <next@@Base+0x2b58>
   1d92c:	ldr	r9, [pc, #404]	; 1dac8 <next@@Base+0x2b5c>
   1d930:	add	r3, pc, r3
   1d934:	str	r3, [sp, #4]
   1d938:	ldr	r3, [pc, #396]	; 1dacc <next@@Base+0x2b60>
   1d93c:	mov	r7, #0
   1d940:	add	r3, pc, r3
   1d944:	str	r3, [sp, #12]
   1d948:	b	1d984 <next@@Base+0x2a18>
   1d94c:	ldr	r3, [r8, #56]	; 0x38
   1d950:	ldr	r4, [r3, r7, lsl #2]
   1d954:	cmp	r4, #0
   1d958:	beq	1d968 <next@@Base+0x29fc>
   1d95c:	ldr	r3, [r4]
   1d960:	cmp	r3, r8
   1d964:	beq	1da80 <next@@Base+0x2b14>
   1d968:	mov	r1, #0
   1d96c:	mov	r0, #16777216	; 0x1000000
   1d970:	bl	1d0b8 <next@@Base+0x214c>
   1d974:	ldr	r3, [r8, #52]	; 0x34
   1d978:	add	r7, r7, #1
   1d97c:	cmp	r3, r7
   1d980:	beq	1da70 <next@@Base+0x2b04>
   1d984:	ldr	r3, [sp, #4]
   1d988:	ldr	r4, [r3, #4]
   1d98c:	cmp	r4, #0
   1d990:	beq	1d94c <next@@Base+0x29e0>
   1d994:	ldr	r3, [r4, #4]
   1d998:	cmp	r3, r7
   1d99c:	bne	1d94c <next@@Base+0x29e0>
   1d9a0:	mov	r3, #1
   1d9a4:	mov	r1, #3
   1d9a8:	mov	r0, #16777216	; 0x1000000
   1d9ac:	add	r4, r4, #8
   1d9b0:	str	r3, [sp, #8]
   1d9b4:	bl	1d0b8 <next@@Base+0x214c>
   1d9b8:	ldr	r0, [r4, #4]
   1d9bc:	bl	1d080 <next@@Base+0x2114>
   1d9c0:	ldr	r0, [r4, #8]
   1d9c4:	bl	1d080 <next@@Base+0x2114>
   1d9c8:	ldr	r0, [r4, #12]
   1d9cc:	bl	1d080 <next@@Base+0x2114>
   1d9d0:	ldr	r5, [pc, #248]	; 1dad0 <next@@Base+0x2b64>
   1d9d4:	add	r4, r4, #16
   1d9d8:	add	r6, r8, #12
   1d9dc:	b	1d9ec <next@@Base+0x2a80>
   1d9e0:	add	r5, r5, #131072	; 0x20000
   1d9e4:	cmp	r5, r9
   1d9e8:	beq	1da3c <next@@Base+0x2ad0>
   1d9ec:	ldr	r3, [r6, #4]!
   1d9f0:	cmp	r3, #0
   1d9f4:	beq	1d9e0 <next@@Base+0x2a74>
   1d9f8:	ldr	fp, [r4]
   1d9fc:	mov	r0, r5
   1da00:	sub	sl, fp, #1
   1da04:	lsl	r1, fp, #1
   1da08:	bl	1d0b8 <next@@Base+0x214c>
   1da0c:	cmp	fp, #0
   1da10:	ldr	fp, [r4, #4]
   1da14:	beq	1da2c <next@@Base+0x2ac0>
   1da18:	sub	sl, sl, #1
   1da1c:	ldrd	r0, [fp], #8
   1da20:	bl	1d098 <next@@Base+0x212c>
   1da24:	cmn	sl, #1
   1da28:	bne	1da18 <next@@Base+0x2aac>
   1da2c:	add	r5, r5, #131072	; 0x20000
   1da30:	cmp	r5, r9
   1da34:	add	r4, r4, #8
   1da38:	bne	1d9ec <next@@Base+0x2a80>
   1da3c:	ldr	r3, [sp, #8]
   1da40:	cmp	r3, #0
   1da44:	beq	1d974 <next@@Base+0x2a08>
   1da48:	ldr	r4, [sp, #12]
   1da4c:	mov	r2, #9
   1da50:	mov	r0, r8
   1da54:	ldr	r1, [r4, #4]
   1da58:	bl	1c2a0 <next@@Base+0x1334>
   1da5c:	ldr	r3, [r8, #52]	; 0x34
   1da60:	add	r7, r7, #1
   1da64:	cmp	r3, r7
   1da68:	str	r0, [r4, #4]
   1da6c:	bne	1d984 <next@@Base+0x2a18>
   1da70:	mov	r0, #0
   1da74:	add	sp, sp, #20
   1da78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1da7c:	b	1d080 <next@@Base+0x2114>
   1da80:	mov	r1, #3
   1da84:	mov	r0, #16777216	; 0x1000000
   1da88:	bl	1d0b8 <next@@Base+0x214c>
   1da8c:	mov	r3, #0
   1da90:	str	r3, [sp, #8]
   1da94:	b	1d9b8 <next@@Base+0x2a4c>
   1da98:	ldr	r1, [pc, #52]	; 1dad4 <next@@Base+0x2b68>
   1da9c:	ldr	r0, [pc, #52]	; 1dad8 <next@@Base+0x2b6c>
   1daa0:	bl	1d0b8 <next@@Base+0x214c>
   1daa4:	ldr	r0, [r8, #8]
   1daa8:	bl	1d080 <next@@Base+0x2114>
   1daac:	cmp	r4, #0
   1dab0:	beq	1d8d4 <next@@Base+0x2968>
   1dab4:	mov	r0, r4
   1dab8:	bl	1d858 <next@@Base+0x28ec>
   1dabc:	b	1d8d4 <next@@Base+0x2968>
   1dac0:	strdeq	r3, [r1], -r8
   1dac4:	andeq	r3, r1, r8, lsr #25
   1dac8:			; <UNDEFINED> instruction: 0x01b30000
   1dacc:	muleq	r1, r8, ip
   1dad0:			; <UNDEFINED> instruction: 0x01a10000
   1dad4:	teqmi	r8, sl, lsr #6
   1dad8:	strbvs	r6, [r3, -r1, ror #8]!

0001dadc <__gcov_sort_n_vals@@Base>:
   1dadc:	cmp	r1, #2
   1dae0:	bxle	lr
   1dae4:	sub	r1, r1, #3
   1dae8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1daec:	add	r2, r0, #8
   1daf0:	sub	sp, sp, #20
   1daf4:	mov	r6, r0
   1daf8:	bic	r7, r1, #1
   1dafc:	mvn	r8, #15
   1db00:	mov	lr, #0
   1db04:	ldrd	r0, [r2]
   1db08:	ldrd	r4, [r2, #16]
   1db0c:	ldrd	sl, [r2, #8]
   1db10:	add	r9, r2, #16
   1db14:	cmp	r0, r4
   1db18:	sbcs	r3, r1, r5
   1db1c:	mov	ip, r9
   1db20:	sub	r1, r6, r8
   1db24:	strd	sl, [sp]
   1db28:	mov	r3, lr
   1db2c:	bge	1db94 <__gcov_sort_n_vals@@Base+0xb8>
   1db30:	add	sl, r8, #16
   1db34:	mvn	fp, #1
   1db38:	add	sl, r2, sl
   1db3c:	orr	fp, lr, fp
   1db40:	str	r7, [sp, #8]
   1db44:	str	r6, [sp, #12]
   1db48:	b	1db60 <__gcov_sort_n_vals@@Base+0x84>
   1db4c:	ldrd	r6, [ip, #-16]
   1db50:	sub	r2, r2, #16
   1db54:	cmp	r6, r4
   1db58:	sbcs	r1, r7, r5
   1db5c:	bge	1dbbc <__gcov_sort_n_vals@@Base+0xe0>
   1db60:	ldrd	r6, [r2, #-8]
   1db64:	lsl	r1, r3, #3
   1db68:	mov	r0, r3
   1db6c:	strd	r6, [r2, #8]
   1db70:	ldrd	r6, [sl, r1]
   1db74:	sub	r3, r3, #2
   1db78:	cmp	r3, fp
   1db7c:	strd	r6, [r2, #16]
   1db80:	mov	ip, r2
   1db84:	bne	1db4c <__gcov_sort_n_vals@@Base+0x70>
   1db88:	ldr	r6, [sp, #12]
   1db8c:	ldr	r7, [sp, #8]
   1db90:	add	r1, r6, r1
   1db94:	ldrd	r2, [sp]
   1db98:	cmp	lr, r7
   1db9c:	sub	r8, r8, #16
   1dba0:	strd	r2, [r1]
   1dba4:	add	lr, lr, #2
   1dba8:	strd	r4, [ip]
   1dbac:	mov	r2, r9
   1dbb0:	bne	1db04 <__gcov_sort_n_vals@@Base+0x28>
   1dbb4:	add	sp, sp, #20
   1dbb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1dbbc:	ldr	r6, [sp, #12]
   1dbc0:	ldr	r7, [sp, #8]
   1dbc4:	add	r1, r6, r0, lsl #3
   1dbc8:	b	1db94 <__gcov_sort_n_vals@@Base+0xb8>
   1dbcc:	push	{r4, r5, r6, lr}
   1dbd0:	ldr	r4, [pc, #76]	; 1dc24 <__gcov_sort_n_vals@@Base+0x148>
   1dbd4:	smull	r2, r3, r4, r0
   1dbd8:	asr	r4, r0, #31
   1dbdc:	rsb	r4, r4, r3, asr #1
   1dbe0:	add	r4, r4, r4, lsl #3
   1dbe4:	subs	r4, r0, r4
   1dbe8:	bne	1dc20 <__gcov_sort_n_vals@@Base+0x144>
   1dbec:	cmp	r0, #0
   1dbf0:	mov	r6, r0
   1dbf4:	ldr	r5, [r1]
   1dbf8:	pople	{r4, r5, r6, pc}
   1dbfc:	add	r5, r5, #8
   1dc00:	mov	r0, r5
   1dc04:	add	r4, r4, #9
   1dc08:	mov	r1, #8
   1dc0c:	bl	1dadc <__gcov_sort_n_vals@@Base>
   1dc10:	cmp	r6, r4
   1dc14:	add	r5, r5, #72	; 0x48
   1dc18:	bgt	1dc00 <__gcov_sort_n_vals@@Base+0x124>
   1dc1c:	pop	{r4, r5, r6, pc}
   1dc20:	bl	12118 <abort@plt>
   1dc24:	stmiacc	r3!, {r0, r3, r4, r5, r9, sl, fp, pc}^
   1dc28:	ldr	r3, [r0, #48]	; 0x30
   1dc2c:	cmp	r3, #0
   1dc30:	bxeq	lr
   1dc34:	push	{r4, r5, r6, lr}
   1dc38:	ldr	lr, [r0, #52]	; 0x34
   1dc3c:	cmp	lr, #0
   1dc40:	popeq	{r4, r5, r6, pc}
   1dc44:	mov	r5, r0
   1dc48:	mov	r4, #0
   1dc4c:	add	r6, r0, #12
   1dc50:	ldr	r1, [r5, #56]	; 0x38
   1dc54:	mov	r2, r6
   1dc58:	mov	r3, #0
   1dc5c:	ldr	r1, [r1, r4, lsl #2]
   1dc60:	add	r1, r1, #16
   1dc64:	ldr	ip, [r2, #4]!
   1dc68:	cmp	ip, #0
   1dc6c:	beq	1dc7c <__gcov_sort_n_vals@@Base+0x1a0>
   1dc70:	cmp	r3, #8
   1dc74:	beq	1dc98 <__gcov_sort_n_vals@@Base+0x1bc>
   1dc78:	add	r1, r1, #8
   1dc7c:	add	r3, r3, #1
   1dc80:	cmp	r3, #9
   1dc84:	bne	1dc64 <__gcov_sort_n_vals@@Base+0x188>
   1dc88:	add	r4, r4, #1
   1dc8c:	cmp	lr, r4
   1dc90:	bne	1dc50 <__gcov_sort_n_vals@@Base+0x174>
   1dc94:	pop	{r4, r5, r6, pc}
   1dc98:	ldr	r0, [r1], #4
   1dc9c:	bl	1dbcc <__gcov_sort_n_vals@@Base+0xf0>
   1dca0:	ldr	lr, [r5, #52]	; 0x34
   1dca4:	b	1dc88 <__gcov_sort_n_vals@@Base+0x1ac>
   1dca8:	push	{r4, r5, r6, r7, r8, r9, lr}
   1dcac:	sub	sp, sp, #6080	; 0x17c0
   1dcb0:	ldr	ip, [pc, #396]	; 1de44 <__gcov_sort_n_vals@@Base+0x368>
   1dcb4:	sub	sp, sp, #36	; 0x24
   1dcb8:	add	ip, pc, ip
   1dcbc:	add	r5, sp, #2016	; 0x7e0
   1dcc0:	mov	r4, r0
   1dcc4:	mov	r6, r1
   1dcc8:	mov	r1, #0
   1dccc:	str	r1, [ip, #4]
   1dcd0:	str	r1, [ip]
   1dcd4:	mov	r8, r2
   1dcd8:	mov	r7, r3
   1dcdc:	str	r1, [r5, #-2000]	; 0xfffff830
   1dce0:	str	r1, [r5, #-1996]	; 0xfffff834
   1dce4:	bl	1dc28 <__gcov_sort_n_vals@@Base+0x14c>
   1dce8:	mov	r1, r6
   1dcec:	ldr	r0, [r4, #12]
   1dcf0:	bl	1cef8 <next@@Base+0x1f8c>
   1dcf4:	cmn	r0, #1
   1dcf8:	beq	1dd74 <__gcov_sort_n_vals@@Base+0x298>
   1dcfc:	bl	1d1e0 <next@@Base+0x2274>
   1dd00:	cmp	r0, #0
   1dd04:	beq	1dd80 <__gcov_sort_n_vals@@Base+0x2a4>
   1dd08:	ldr	r2, [pc, #312]	; 1de48 <__gcov_sort_n_vals@@Base+0x36c>
   1dd0c:	ldr	r1, [r6]
   1dd10:	cmp	r0, r2
   1dd14:	beq	1ddd8 <__gcov_sort_n_vals@@Base+0x2fc>
   1dd18:	ldr	r0, [pc, #300]	; 1de4c <__gcov_sort_n_vals@@Base+0x370>
   1dd1c:	add	r0, pc, r0
   1dd20:	bl	1c26c <next@@Base+0x1300>
   1dd24:	ldr	r5, [pc, #292]	; 1de50 <__gcov_sort_n_vals@@Base+0x374>
   1dd28:	add	r5, pc, r5
   1dd2c:	ldr	r1, [r5, #4]
   1dd30:	cmp	r1, #0
   1dd34:	beq	1dd54 <__gcov_sort_n_vals@@Base+0x278>
   1dd38:	mov	r2, #9
   1dd3c:	mov	r0, r4
   1dd40:	bl	1c2a0 <next@@Base+0x1334>
   1dd44:	cmp	r0, #0
   1dd48:	mov	r1, r0
   1dd4c:	str	r0, [r5, #4]
   1dd50:	bne	1dd38 <__gcov_sort_n_vals@@Base+0x25c>
   1dd54:	bl	1d010 <next@@Base+0x20a4>
   1dd58:	cmp	r0, #0
   1dd5c:	beq	1dd74 <__gcov_sort_n_vals@@Base+0x298>
   1dd60:	blt	1de38 <__gcov_sort_n_vals@@Base+0x35c>
   1dd64:	ldr	r0, [pc, #232]	; 1de54 <__gcov_sort_n_vals@@Base+0x378>
   1dd68:	add	r0, pc, r0
   1dd6c:	ldr	r1, [r6]
   1dd70:	bl	1c26c <next@@Base+0x1300>
   1dd74:	add	sp, sp, #6080	; 0x17c0
   1dd78:	add	sp, sp, #36	; 0x24
   1dd7c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1dd80:	bl	1cdb0 <next@@Base+0x1e44>
   1dd84:	ldr	r1, [r5, #-2000]	; 0xfffff830
   1dd88:	add	r9, sp, #24
   1dd8c:	cmp	r1, #0
   1dd90:	beq	1de20 <__gcov_sort_n_vals@@Base+0x344>
   1dd94:	add	r3, sp, #6144	; 0x1800
   1dd98:	str	r7, [sp, #4]
   1dd9c:	ldr	r3, [r3]
   1dda0:	mov	r1, r8
   1dda4:	str	r3, [sp]
   1dda8:	add	r2, r4, #16
   1ddac:	mov	r3, r9
   1ddb0:	ldr	r0, [r6]
   1ddb4:	bl	1cc5c <next@@Base+0x1cf0>
   1ddb8:	cmn	r0, #1
   1ddbc:	beq	1dd24 <__gcov_sort_n_vals@@Base+0x248>
   1ddc0:	mov	r1, r9
   1ddc4:	ldr	r3, [r5, #-2000]	; 0xfffff830
   1ddc8:	ldr	r2, [r5, #-1996]	; 0xfffff834
   1ddcc:	mov	r0, r4
   1ddd0:	bl	1d8b0 <next@@Base+0x2944>
   1ddd4:	b	1dd24 <__gcov_sort_n_vals@@Base+0x248>
   1ddd8:	add	ip, sp, #20
   1dddc:	add	r3, sp, #16
   1dde0:	str	r7, [sp, #8]
   1dde4:	stm	sp, {r3, ip}
   1dde8:	add	r3, sp, #6144	; 0x1800
   1ddec:	add	r9, sp, #24
   1ddf0:	ldr	r3, [r3]
   1ddf4:	mov	r0, r1
   1ddf8:	mov	r2, r9
   1ddfc:	add	r3, r3, #8
   1de00:	mov	r1, r4
   1de04:	bl	1d544 <next@@Base+0x25d8>
   1de08:	cmn	r0, #1
   1de0c:	beq	1dd24 <__gcov_sort_n_vals@@Base+0x248>
   1de10:	bl	1cdb0 <next@@Base+0x1e44>
   1de14:	ldr	r1, [r5, #-2000]	; 0xfffff830
   1de18:	cmp	r1, #0
   1de1c:	bne	1dd94 <__gcov_sort_n_vals@@Base+0x2b8>
   1de20:	ldr	r2, [pc, #48]	; 1de58 <__gcov_sort_n_vals@@Base+0x37c>
   1de24:	mov	r0, r9
   1de28:	bl	120a0 <memset@plt>
   1de2c:	ldr	r3, [r5, #-1996]	; 0xfffff834
   1de30:	str	r3, [r5, #-2000]	; 0xfffff830
   1de34:	b	1dd94 <__gcov_sort_n_vals@@Base+0x2b8>
   1de38:	ldr	r0, [pc, #28]	; 1de5c <__gcov_sort_n_vals@@Base+0x380>
   1de3c:	add	r0, pc, r0
   1de40:	b	1dd6c <__gcov_sort_n_vals@@Base+0x290>
   1de44:	andeq	r3, r1, r0, lsr #18
   1de48:	strbvs	r6, [r3, -r1, ror #8]!
   1de4c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1de50:			; <UNDEFINED> instruction: 0x000138b0
   1de54:	andeq	r0, r0, r8, lsl #31
   1de58:	andeq	r1, r0, r8, asr #15
   1de5c:	muleq	r0, r4, lr
   1de60:	push	{r4, r5, r6, r7, r8, lr}
   1de64:	sub	sp, sp, #6080	; 0x17c0
   1de68:	sub	sp, sp, #32
   1de6c:	add	r6, sp, #24
   1de70:	add	r2, sp, #12
   1de74:	mov	r8, r1
   1de78:	mov	r1, r6
   1de7c:	mov	r4, r0
   1de80:	bl	1c4b8 <next@@Base+0x154c>
   1de84:	add	r5, sp, #8
   1de88:	mov	r7, r0
   1de8c:	mov	r0, r5
   1de90:	bl	1c64c <next@@Base+0x16e0>
   1de94:	cmp	r4, #0
   1de98:	beq	1dec0 <__gcov_sort_n_vals@@Base+0x3e4>
   1de9c:	mov	r0, r4
   1dea0:	str	r6, [sp]
   1dea4:	mov	r3, r7
   1dea8:	mov	r2, r8
   1deac:	mov	r1, r5
   1deb0:	bl	1dca8 <__gcov_sort_n_vals@@Base+0x1cc>
   1deb4:	ldr	r4, [r4, #4]
   1deb8:	cmp	r4, #0
   1debc:	bne	1de9c <__gcov_sort_n_vals@@Base+0x3c0>
   1dec0:	ldr	r0, [sp, #8]
   1dec4:	bl	11fd4 <free@plt>
   1dec8:	add	sp, sp, #6080	; 0x17c0
   1decc:	add	sp, sp, #32
   1ded0:	pop	{r4, r5, r6, r7, r8, pc}
   1ded4:	ldrb	r1, [r0, #4]
   1ded8:	tst	r1, #1
   1dedc:	bxne	lr
   1dee0:	push	{r4, lr}
   1dee4:	lsr	r1, r1, #1
   1dee8:	mov	r4, r0
   1deec:	and	r1, r1, #1
   1def0:	ldr	r0, [r0]
   1def4:	bl	1de60 <__gcov_sort_n_vals@@Base+0x384>
   1def8:	ldrb	r3, [r4, #4]
   1defc:	bic	r3, r3, #3
   1df00:	orr	r3, r3, #3
   1df04:	strb	r3, [r4, #4]
   1df08:	pop	{r4, pc}
   1df0c:	push	{r4, r5, r6, lr}
   1df10:	ldr	r4, [pc, #84]	; 1df6c <__gcov_sort_n_vals@@Base+0x490>
   1df14:	ldr	r5, [pc, #84]	; 1df70 <__gcov_sort_n_vals@@Base+0x494>
   1df18:	add	r4, pc, r4
   1df1c:	mov	r0, r4
   1df20:	bl	1ded4 <__gcov_sort_n_vals@@Base+0x3f8>
   1df24:	ldr	r3, [r4, #8]
   1df28:	add	r5, pc, r5
   1df2c:	cmp	r3, #0
   1df30:	ldrne	r2, [r4, #12]
   1df34:	strne	r2, [r3, #12]
   1df38:	ldr	r2, [pc, #52]	; 1df74 <__gcov_sort_n_vals@@Base+0x498>
   1df3c:	add	r2, pc, r2
   1df40:	ldr	r2, [r2, #12]
   1df44:	cmp	r2, #0
   1df48:	strne	r3, [r2, #8]
   1df4c:	beq	1df58 <__gcov_sort_n_vals@@Base+0x47c>
   1df50:	pop	{r4, r5, r6, lr}
   1df54:	b	1c014 <next@@Base+0x10a8>
   1df58:	ldr	r2, [pc, #24]	; 1df78 <__gcov_sort_n_vals@@Base+0x49c>
   1df5c:	ldr	r2, [r5, r2]
   1df60:	pop	{r4, r5, r6, lr}
   1df64:	str	r3, [r2, #4]
   1df68:	b	1c014 <next@@Base+0x10a8>
   1df6c:	andeq	r3, r1, r0, lsl #17
   1df70:	ldrdeq	r1, [r1], -r0
   1df74:	andeq	r3, r1, ip, asr r8
   1df78:	andeq	r0, r0, ip, lsl r1
   1df7c:	ldr	r1, [r0]
   1df80:	push	{r4, r5, r6, lr}
   1df84:	cmp	r1, #0
   1df88:	ldr	r5, [pc, #156]	; 1e02c <__gcov_sort_n_vals@@Base+0x550>
   1df8c:	add	r5, pc, r5
   1df90:	popeq	{r4, r5, r6, pc}
   1df94:	ldr	r3, [r0, #52]	; 0x34
   1df98:	cmp	r3, #0
   1df9c:	popeq	{r4, r5, r6, pc}
   1dfa0:	mov	r4, r0
   1dfa4:	mov	r2, #0
   1dfa8:	add	r0, r0, #12
   1dfac:	bl	1cbfc <next@@Base+0x1c90>
   1dfb0:	cmp	r0, #0
   1dfb4:	popeq	{r4, r5, r6, pc}
   1dfb8:	ldr	r6, [pc, #112]	; 1e030 <__gcov_sort_n_vals@@Base+0x554>
   1dfbc:	add	r6, pc, r6
   1dfc0:	ldr	r2, [r6]
   1dfc4:	cmp	r2, #0
   1dfc8:	beq	1dfe0 <__gcov_sort_n_vals@@Base+0x504>
   1dfcc:	ldr	r3, [pc, #96]	; 1e034 <__gcov_sort_n_vals@@Base+0x558>
   1dfd0:	str	r2, [r4, #4]
   1dfd4:	add	r3, pc, r3
   1dfd8:	str	r4, [r3]
   1dfdc:	pop	{r4, r5, r6, pc}
   1dfe0:	ldr	r3, [pc, #80]	; 1e038 <__gcov_sort_n_vals@@Base+0x55c>
   1dfe4:	ldr	r2, [pc, #80]	; 1e03c <__gcov_sort_n_vals@@Base+0x560>
   1dfe8:	mov	r0, #12
   1dfec:	ldr	r5, [r5, r3]
   1dff0:	add	r2, pc, r2
   1dff4:	ldr	r1, [r5]
   1dff8:	bl	1cbfc <next@@Base+0x1c90>
   1dffc:	cmp	r0, #0
   1e000:	ldreq	r2, [r6]
   1e004:	beq	1dfcc <__gcov_sort_n_vals@@Base+0x4f0>
   1e008:	ldr	r3, [r5, #4]
   1e00c:	cmp	r3, #0
   1e010:	str	r3, [r6, #8]
   1e014:	strne	r6, [r3, #12]
   1e018:	ldr	r3, [pc, #32]	; 1e040 <__gcov_sort_n_vals@@Base+0x564>
   1e01c:	add	r3, pc, r3
   1e020:	str	r3, [r5, #4]
   1e024:	ldr	r2, [r3]
   1e028:	b	1dfcc <__gcov_sort_n_vals@@Base+0x4f0>
   1e02c:	andeq	r1, r1, ip, rrx
   1e030:	ldrdeq	r3, [r1], -ip
   1e034:	andeq	r3, r1, r4, asr #15
   1e038:	andeq	r0, r0, ip, lsl r1
   1e03c:	andeq	r0, r0, r0, asr #26
   1e040:	andeq	r3, r1, ip, ror r7
   1e044:	cmp	r3, #0
   1e048:	cmpeq	r2, #0
   1e04c:	bne	1e070 <__gcov_sort_n_vals@@Base+0x594>
   1e050:	cmp	r1, #0
   1e054:	movlt	r1, #-2147483648	; 0x80000000
   1e058:	movlt	r0, #0
   1e05c:	blt	1e06c <__gcov_sort_n_vals@@Base+0x590>
   1e060:	cmpeq	r0, #0
   1e064:	mvnne	r1, #-2147483648	; 0x80000000
   1e068:	mvnne	r0, #0
   1e06c:	b	1e118 <__gcov_sort_n_vals@@Base+0x63c>
   1e070:	sub	sp, sp, #8
   1e074:	push	{sp, lr}
   1e078:	cmp	r1, #0
   1e07c:	blt	1e09c <__gcov_sort_n_vals@@Base+0x5c0>
   1e080:	cmp	r3, #0
   1e084:	blt	1e0d0 <__gcov_sort_n_vals@@Base+0x5f4>
   1e088:	bl	1e16c <__gcov_sort_n_vals@@Base+0x690>
   1e08c:	ldr	lr, [sp, #4]
   1e090:	add	sp, sp, #8
   1e094:	pop	{r2, r3}
   1e098:	bx	lr
   1e09c:	rsbs	r0, r0, #0
   1e0a0:	sbc	r1, r1, r1, lsl #1
   1e0a4:	cmp	r3, #0
   1e0a8:	blt	1e0f4 <__gcov_sort_n_vals@@Base+0x618>
   1e0ac:	bl	1e16c <__gcov_sort_n_vals@@Base+0x690>
   1e0b0:	ldr	lr, [sp, #4]
   1e0b4:	add	sp, sp, #8
   1e0b8:	pop	{r2, r3}
   1e0bc:	rsbs	r0, r0, #0
   1e0c0:	sbc	r1, r1, r1, lsl #1
   1e0c4:	rsbs	r2, r2, #0
   1e0c8:	sbc	r3, r3, r3, lsl #1
   1e0cc:	bx	lr
   1e0d0:	rsbs	r2, r2, #0
   1e0d4:	sbc	r3, r3, r3, lsl #1
   1e0d8:	bl	1e16c <__gcov_sort_n_vals@@Base+0x690>
   1e0dc:	ldr	lr, [sp, #4]
   1e0e0:	add	sp, sp, #8
   1e0e4:	pop	{r2, r3}
   1e0e8:	rsbs	r0, r0, #0
   1e0ec:	sbc	r1, r1, r1, lsl #1
   1e0f0:	bx	lr
   1e0f4:	rsbs	r2, r2, #0
   1e0f8:	sbc	r3, r3, r3, lsl #1
   1e0fc:	bl	1e16c <__gcov_sort_n_vals@@Base+0x690>
   1e100:	ldr	lr, [sp, #4]
   1e104:	add	sp, sp, #8
   1e108:	pop	{r2, r3}
   1e10c:	rsbs	r2, r2, #0
   1e110:	sbc	r3, r3, r3, lsl #1
   1e114:	bx	lr
   1e118:	push	{r1, lr}
   1e11c:	mov	r0, #8
   1e120:	bl	11f98 <raise@plt>
   1e124:	pop	{r1, pc}
   1e128:	ldr	r3, [pc, #48]	; 1e160 <__gcov_sort_n_vals@@Base+0x684>
   1e12c:	ldr	r2, [pc, #48]	; 1e164 <__gcov_sort_n_vals@@Base+0x688>
   1e130:	and	r3, r3, r0, lsr #1
   1e134:	sub	r0, r0, r3
   1e138:	and	r3, r0, r2
   1e13c:	and	r0, r2, r0, lsr #2
   1e140:	add	r3, r3, r0
   1e144:	ldr	r0, [pc, #28]	; 1e168 <__gcov_sort_n_vals@@Base+0x68c>
   1e148:	add	r3, r3, r3, lsr #4
   1e14c:	and	r0, r0, r3
   1e150:	add	r0, r0, r0, lsl #8
   1e154:	add	r0, r0, r0, lsl #16
   1e158:	lsr	r0, r0, #24
   1e15c:	bx	lr
   1e160:	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
   1e164:	teqcc	r3, #-872415232	; 0xcc000000
   1e168:	svceq	0x000f0f0f
   1e16c:	cmp	r1, r3
   1e170:	cmpeq	r0, r2
   1e174:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1e178:	mov	r4, r0
   1e17c:	movcc	r0, #0
   1e180:	mov	r5, r1
   1e184:	ldr	lr, [sp, #36]	; 0x24
   1e188:	movcc	r1, r0
   1e18c:	bcc	1e288 <__gcov_sort_n_vals@@Base+0x7ac>
   1e190:	cmp	r3, #0
   1e194:	clzeq	ip, r2
   1e198:	clzne	ip, r3
   1e19c:	addeq	ip, ip, #32
   1e1a0:	cmp	r5, #0
   1e1a4:	clzeq	r1, r4
   1e1a8:	addeq	r1, r1, #32
   1e1ac:	clzne	r1, r5
   1e1b0:	sub	ip, ip, r1
   1e1b4:	sub	sl, ip, #32
   1e1b8:	lsl	r9, r3, ip
   1e1bc:	rsb	fp, ip, #32
   1e1c0:	orr	r9, r9, r2, lsl sl
   1e1c4:	orr	r9, r9, r2, lsr fp
   1e1c8:	lsl	r8, r2, ip
   1e1cc:	cmp	r5, r9
   1e1d0:	cmpeq	r4, r8
   1e1d4:	movcc	r0, #0
   1e1d8:	movcc	r1, r0
   1e1dc:	bcc	1e1f8 <__gcov_sort_n_vals@@Base+0x71c>
   1e1e0:	mov	r0, #1
   1e1e4:	subs	r4, r4, r8
   1e1e8:	lsl	r1, r0, sl
   1e1ec:	orr	r1, r1, r0, lsr fp
   1e1f0:	lsl	r0, r0, ip
   1e1f4:	sbc	r5, r5, r9
   1e1f8:	cmp	ip, #0
   1e1fc:	beq	1e288 <__gcov_sort_n_vals@@Base+0x7ac>
   1e200:	lsr	r6, r8, #1
   1e204:	orr	r6, r6, r9, lsl #31
   1e208:	lsr	r7, r9, #1
   1e20c:	mov	r2, ip
   1e210:	b	1e234 <__gcov_sort_n_vals@@Base+0x758>
   1e214:	subs	r3, r4, r6
   1e218:	sbc	r8, r5, r7
   1e21c:	adds	r3, r3, r3
   1e220:	adc	r8, r8, r8
   1e224:	adds	r4, r3, #1
   1e228:	adc	r5, r8, #0
   1e22c:	subs	r2, r2, #1
   1e230:	beq	1e250 <__gcov_sort_n_vals@@Base+0x774>
   1e234:	cmp	r5, r7
   1e238:	cmpeq	r4, r6
   1e23c:	bcs	1e214 <__gcov_sort_n_vals@@Base+0x738>
   1e240:	adds	r4, r4, r4
   1e244:	adc	r5, r5, r5
   1e248:	subs	r2, r2, #1
   1e24c:	bne	1e234 <__gcov_sort_n_vals@@Base+0x758>
   1e250:	lsr	r3, r4, ip
   1e254:	orr	r3, r3, r5, lsl fp
   1e258:	lsr	r2, r5, ip
   1e25c:	orr	r3, r3, r5, lsr sl
   1e260:	adds	r0, r0, r4
   1e264:	mov	r4, r3
   1e268:	lsl	r3, r2, ip
   1e26c:	orr	r3, r3, r4, lsl sl
   1e270:	lsl	ip, r4, ip
   1e274:	orr	r3, r3, r4, lsr fp
   1e278:	adc	r1, r1, r5
   1e27c:	subs	r0, r0, ip
   1e280:	mov	r5, r2
   1e284:	sbc	r1, r1, r3
   1e288:	cmp	lr, #0
   1e28c:	strdne	r4, [lr]
   1e290:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001e294 <__libc_csu_init@@Base>:
   1e294:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1e298:	mov	r7, r0
   1e29c:	ldr	r6, [pc, #72]	; 1e2ec <__libc_csu_init@@Base+0x58>
   1e2a0:	ldr	r5, [pc, #72]	; 1e2f0 <__libc_csu_init@@Base+0x5c>
   1e2a4:	add	r6, pc, r6
   1e2a8:	add	r5, pc, r5
   1e2ac:	sub	r6, r6, r5
   1e2b0:	mov	r8, r1
   1e2b4:	mov	r9, r2
   1e2b8:	bl	11f6c <fdopen@plt-0x20>
   1e2bc:	asrs	r6, r6, #2
   1e2c0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e2c4:	mov	r4, #0
   1e2c8:	add	r4, r4, #1
   1e2cc:	ldr	r3, [r5], #4
   1e2d0:	mov	r2, r9
   1e2d4:	mov	r1, r8
   1e2d8:	mov	r0, r7
   1e2dc:	blx	r3
   1e2e0:	cmp	r6, r4
   1e2e4:	bne	1e2c8 <__libc_csu_init@@Base+0x34>
   1e2e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1e2ec:	andeq	r0, r1, r8, asr ip
   1e2f0:	andeq	r0, r1, r0, asr #24

0001e2f4 <__libc_csu_fini@@Base>:
   1e2f4:	bx	lr

Disassembly of section .fini:

0001e2f8 <.fini>:
   1e2f8:	push	{r3, lr}
   1e2fc:	pop	{r3, pc}
