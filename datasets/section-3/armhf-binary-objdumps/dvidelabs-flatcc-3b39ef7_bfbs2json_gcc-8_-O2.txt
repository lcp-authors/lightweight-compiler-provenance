
../repos/dvidelabs-flatcc-3b39ef7/samples/reflection/bfbs2json:     file format elf32-littlearm


Disassembly of section .init:

000107f0 <.init>:
   107f0:	push	{r3, lr}
   107f4:	bl	109b0 <_start@@Base+0x3c>
   107f8:	pop	{r3, pc}

Disassembly of section .plt:

000107fc <printf@plt-0x14>:
   107fc:	push	{lr}		; (str lr, [sp, #-4]!)
   10800:	ldr	lr, [pc, #4]	; 1080c <printf@plt-0x4>
   10804:	add	lr, pc, lr
   10808:	ldr	pc, [lr, #8]!
   1080c:	strdeq	r2, [r1], -r4

00010810 <printf@plt>:
   10810:	add	ip, pc, #0, 12
   10814:	add	ip, ip, #73728	; 0x12000
   10818:	ldr	pc, [ip, #2036]!	; 0x7f4

0001081c <fopen@plt>:
   1081c:	add	ip, pc, #0, 12
   10820:	add	ip, ip, #73728	; 0x12000
   10824:	ldr	pc, [ip, #2028]!	; 0x7ec

00010828 <free@plt>:
   10828:	add	ip, pc, #0, 12
   1082c:	add	ip, ip, #73728	; 0x12000
   10830:	ldr	pc, [ip, #2020]!	; 0x7e4

00010834 <ftell@plt>:
   10834:	add	ip, pc, #0, 12
   10838:	add	ip, ip, #73728	; 0x12000
   1083c:	ldr	pc, [ip, #2012]!	; 0x7dc

00010840 <rewind@plt>:
   10840:	add	ip, pc, #0, 12
   10844:	add	ip, ip, #73728	; 0x12000
   10848:	ldr	pc, [ip, #2004]!	; 0x7d4

0001084c <fwrite@plt>:
   1084c:	add	ip, pc, #0, 12
   10850:	add	ip, ip, #73728	; 0x12000
   10854:	ldr	pc, [ip, #1996]!	; 0x7cc

00010858 <fread@plt>:
   10858:	add	ip, pc, #0, 12
   1085c:	add	ip, ip, #73728	; 0x12000
   10860:	ldr	pc, [ip, #1988]!	; 0x7c4

00010864 <puts@plt>:
   10864:	add	ip, pc, #0, 12
   10868:	add	ip, ip, #73728	; 0x12000
   1086c:	ldr	pc, [ip, #1980]!	; 0x7bc

00010870 <malloc@plt>:
   10870:	add	ip, pc, #0, 12
   10874:	add	ip, ip, #73728	; 0x12000
   10878:	ldr	pc, [ip, #1972]!	; 0x7b4

0001087c <__libc_start_main@plt>:
   1087c:	add	ip, pc, #0, 12
   10880:	add	ip, ip, #73728	; 0x12000
   10884:	ldr	pc, [ip, #1964]!	; 0x7ac

00010888 <__gmon_start__@plt>:
   10888:	add	ip, pc, #0, 12
   1088c:	add	ip, ip, #73728	; 0x12000
   10890:	ldr	pc, [ip, #1956]!	; 0x7a4

00010894 <exit@plt>:
   10894:	add	ip, pc, #0, 12
   10898:	add	ip, ip, #73728	; 0x12000
   1089c:	ldr	pc, [ip, #1948]!	; 0x79c

000108a0 <fprintf@plt>:
   108a0:	add	ip, pc, #0, 12
   108a4:	add	ip, ip, #73728	; 0x12000
   108a8:	ldr	pc, [ip, #1940]!	; 0x794

000108ac <putchar@plt>:
   108ac:	add	ip, pc, #0, 12
   108b0:	add	ip, ip, #73728	; 0x12000
   108b4:	ldr	pc, [ip, #1932]!	; 0x78c

000108b8 <fclose@plt>:
   108b8:	add	ip, pc, #0, 12
   108bc:	add	ip, ip, #73728	; 0x12000
   108c0:	ldr	pc, [ip, #1924]!	; 0x784

000108c4 <fseek@plt>:
   108c4:	add	ip, pc, #0, 12
   108c8:	add	ip, ip, #73728	; 0x12000
   108cc:	ldr	pc, [ip, #1916]!	; 0x77c

000108d0 <abort@plt>:
   108d0:	add	ip, pc, #0, 12
   108d4:	add	ip, ip, #73728	; 0x12000
   108d8:	ldr	pc, [ip, #1908]!	; 0x774

000108dc <__assert_fail@plt>:
   108dc:	add	ip, pc, #0, 12
   108e0:	add	ip, ip, #73728	; 0x12000
   108e4:	ldr	pc, [ip, #1900]!	; 0x76c

Disassembly of section .text:

000108e8 <main@@Base>:
   108e8:	ldr	r3, [pc, #112]	; 10960 <main@@Base+0x78>
   108ec:	cmp	r0, #2
   108f0:	add	r3, pc, r3
   108f4:	bne	10900 <main@@Base+0x18>
   108f8:	ldr	r0, [r1, #4]
   108fc:	b	11ae4 <load_and_dump_schema@@Base>
   10900:	ldr	ip, [pc, #92]	; 10964 <main@@Base+0x7c>
   10904:	mov	r2, #28
   10908:	mov	r1, #1
   1090c:	str	r4, [sp, #-8]!
   10910:	ldr	r0, [pc, #80]	; 10968 <main@@Base+0x80>
   10914:	str	lr, [sp, #4]
   10918:	ldr	r4, [r3, ip]
   1091c:	add	r0, pc, r0
   10920:	ldr	r3, [r4]
   10924:	bl	1084c <fwrite@plt>
   10928:	ldr	r0, [pc, #60]	; 1096c <main@@Base+0x84>
   1092c:	mov	r2, #74	; 0x4a
   10930:	mov	r1, #1
   10934:	ldr	r3, [r4]
   10938:	add	r0, pc, r0
   1093c:	bl	1084c <fwrite@plt>
   10940:	ldr	r0, [pc, #40]	; 10970 <main@@Base+0x88>
   10944:	mov	r2, #180	; 0xb4
   10948:	mov	r1, #1
   1094c:	ldr	r3, [r4]
   10950:	add	r0, pc, r0
   10954:	bl	1084c <fwrite@plt>
   10958:	mvn	r0, #0
   1095c:	bl	10894 <exit@plt>
   10960:	andeq	r2, r1, r8, lsl #14
   10964:	andeq	r0, r0, r4, asr r0
   10968:	andeq	r1, r0, ip, asr r9
   1096c:	andeq	r1, r0, r0, ror #18
   10970:	muleq	r0, r4, r9

00010974 <_start@@Base>:
   10974:	mov	fp, #0
   10978:	mov	lr, #0
   1097c:	pop	{r1}		; (ldr r1, [sp], #4)
   10980:	mov	r2, sp
   10984:	push	{r2}		; (str r2, [sp, #-4]!)
   10988:	push	{r0}		; (str r0, [sp, #-4]!)
   1098c:	ldr	ip, [pc, #16]	; 109a4 <_start@@Base+0x30>
   10990:	push	{ip}		; (str ip, [sp, #-4]!)
   10994:	ldr	r0, [pc, #12]	; 109a8 <_start@@Base+0x34>
   10998:	ldr	r3, [pc, #12]	; 109ac <_start@@Base+0x38>
   1099c:	bl	1087c <__libc_start_main@plt>
   109a0:	bl	108d0 <abort@plt>
   109a4:	andeq	r1, r1, r0, lsr sp
   109a8:	andeq	r0, r1, r8, ror #17
   109ac:	ldrdeq	r1, [r1], -r0
   109b0:	ldr	r3, [pc, #20]	; 109cc <_start@@Base+0x58>
   109b4:	ldr	r2, [pc, #20]	; 109d0 <_start@@Base+0x5c>
   109b8:	add	r3, pc, r3
   109bc:	ldr	r2, [r3, r2]
   109c0:	cmp	r2, #0
   109c4:	bxeq	lr
   109c8:	b	10888 <__gmon_start__@plt>
   109cc:	andeq	r2, r1, r0, asr #12
   109d0:	andeq	r0, r0, r8, asr r0
   109d4:	ldr	r0, [pc, #24]	; 109f4 <_start@@Base+0x80>
   109d8:	ldr	r3, [pc, #24]	; 109f8 <_start@@Base+0x84>
   109dc:	cmp	r3, r0
   109e0:	bxeq	lr
   109e4:	ldr	r3, [pc, #16]	; 109fc <_start@@Base+0x88>
   109e8:	cmp	r3, #0
   109ec:	bxeq	lr
   109f0:	bx	r3
   109f4:	andeq	r3, r2, r4, rrx
   109f8:	andeq	r3, r2, r4, rrx
   109fc:	andeq	r0, r0, r0
   10a00:	ldr	r0, [pc, #36]	; 10a2c <_start@@Base+0xb8>
   10a04:	ldr	r1, [pc, #36]	; 10a30 <_start@@Base+0xbc>
   10a08:	sub	r1, r1, r0
   10a0c:	asr	r1, r1, #2
   10a10:	add	r1, r1, r1, lsr #31
   10a14:	asrs	r1, r1, #1
   10a18:	bxeq	lr
   10a1c:	ldr	r3, [pc, #16]	; 10a34 <_start@@Base+0xc0>
   10a20:	cmp	r3, #0
   10a24:	bxeq	lr
   10a28:	bx	r3
   10a2c:	andeq	r3, r2, r4, rrx
   10a30:	andeq	r3, r2, r4, rrx
   10a34:	andeq	r0, r0, r0
   10a38:	push	{r4, lr}
   10a3c:	ldr	r4, [pc, #24]	; 10a5c <_start@@Base+0xe8>
   10a40:	ldrb	r3, [r4]
   10a44:	cmp	r3, #0
   10a48:	popne	{r4, pc}
   10a4c:	bl	109d4 <_start@@Base+0x60>
   10a50:	mov	r3, #1
   10a54:	strb	r3, [r4]
   10a58:	pop	{r4, pc}
   10a5c:	andeq	r3, r2, r4, rrx
   10a60:	b	10a00 <_start@@Base+0x8c>
   10a64:	ldr	r3, [pc, #32]	; 10a8c <_start@@Base+0x118>
   10a68:	mov	r2, #147	; 0x93
   10a6c:	str	r4, [sp, #-8]!
   10a70:	ldr	r1, [pc, #24]	; 10a90 <_start@@Base+0x11c>
   10a74:	str	lr, [sp, #4]
   10a78:	ldr	r0, [pc, #20]	; 10a94 <_start@@Base+0x120>
   10a7c:	add	r3, pc, r3
   10a80:	add	r1, pc, r1
   10a84:	add	r0, pc, r0
   10a88:	bl	108dc <__assert_fail@plt>
   10a8c:			; <UNDEFINED> instruction: 0x000012bc
   10a90:	andeq	r1, r0, r8, asr #8
   10a94:			; <UNDEFINED> instruction: 0x000014bc

00010a98 <print_type@@Base>:
   10a98:	str	r4, [sp, #-8]!
   10a9c:	mov	r4, r0
   10aa0:	mov	r0, #123	; 0x7b
   10aa4:	str	lr, [sp, #4]
   10aa8:	bl	108ac <putchar@plt>
   10aac:	cmp	r4, #0
   10ab0:	beq	10e00 <print_type@@Base+0x368>
   10ab4:	ldr	r3, [r4]
   10ab8:	sub	r3, r4, r3
   10abc:	ldrh	r2, [r3]
   10ac0:	cmp	r2, #5
   10ac4:	bls	10ba8 <print_type@@Base+0x110>
   10ac8:	ldrh	r1, [r3, #4]
   10acc:	cmp	r1, #0
   10ad0:	beq	10b28 <print_type@@Base+0x90>
   10ad4:	ldrsb	r3, [r4, r1]
   10ad8:	cmp	r3, #16
   10adc:	addls	pc, pc, r3, lsl #2
   10ae0:	b	10e48 <print_type@@Base+0x3b0>
   10ae4:	b	10de0 <print_type@@Base+0x348>
   10ae8:	b	10d14 <print_type@@Base+0x27c>
   10aec:	b	10c6c <print_type@@Base+0x1d4>
   10af0:	b	10d08 <print_type@@Base+0x270>
   10af4:	b	10cd8 <print_type@@Base+0x240>
   10af8:	b	10ce4 <print_type@@Base+0x24c>
   10afc:	b	10cf0 <print_type@@Base+0x258>
   10b00:	b	10cfc <print_type@@Base+0x264>
   10b04:	b	10c78 <print_type@@Base+0x1e0>
   10b08:	b	10c84 <print_type@@Base+0x1ec>
   10b0c:	b	10c90 <print_type@@Base+0x1f8>
   10b10:	b	10c9c <print_type@@Base+0x204>
   10b14:	b	10ca8 <print_type@@Base+0x210>
   10b18:	b	10cb4 <print_type@@Base+0x21c>
   10b1c:	b	10cc0 <print_type@@Base+0x228>
   10b20:	b	10ccc <print_type@@Base+0x234>
   10b24:	b	10bbc <print_type@@Base+0x124>
   10b28:	cmp	r2, #7
   10b2c:	bls	10ba8 <print_type@@Base+0x110>
   10b30:	ldrh	r1, [r3, #6]
   10b34:	cmp	r1, #0
   10b38:	beq	10e24 <print_type@@Base+0x38c>
   10b3c:	ldr	r1, [pc, #796]	; 10e60 <print_type@@Base+0x3c8>
   10b40:	add	r1, pc, r1
   10b44:	ldr	r0, [pc, #792]	; 10e64 <print_type@@Base+0x3cc>
   10b48:	add	r0, pc, r0
   10b4c:	bl	10810 <printf@plt>
   10b50:	ldr	r3, [r4]
   10b54:	sub	r3, r4, r3
   10b58:	ldrh	r2, [r3]
   10b5c:	cmp	r2, #9
   10b60:	bls	10ba8 <print_type@@Base+0x110>
   10b64:	ldrh	r3, [r3, #8]
   10b68:	cmp	r3, #0
   10b6c:	beq	10ba8 <print_type@@Base+0x110>
   10b70:	mov	r0, #44	; 0x2c
   10b74:	bl	108ac <putchar@plt>
   10b78:	ldr	r3, [r4]
   10b7c:	sub	r3, r4, r3
   10b80:	ldrh	r2, [r3]
   10b84:	cmp	r2, #9
   10b88:	bls	10df8 <print_type@@Base+0x360>
   10b8c:	ldrh	r3, [r3, #8]
   10b90:	cmp	r3, #0
   10b94:	beq	10df8 <print_type@@Base+0x360>
   10b98:	ldr	r1, [r4, r3]
   10b9c:	ldr	r0, [pc, #708]	; 10e68 <print_type@@Base+0x3d0>
   10ba0:	add	r0, pc, r0
   10ba4:	bl	10810 <printf@plt>
   10ba8:	mov	r0, #125	; 0x7d
   10bac:	ldr	r4, [sp]
   10bb0:	ldr	lr, [sp, #4]
   10bb4:	add	sp, sp, #8
   10bb8:	b	108ac <putchar@plt>
   10bbc:	ldr	r1, [pc, #680]	; 10e6c <print_type@@Base+0x3d4>
   10bc0:	add	r1, pc, r1
   10bc4:	ldr	r0, [pc, #676]	; 10e70 <print_type@@Base+0x3d8>
   10bc8:	add	r0, pc, r0
   10bcc:	bl	10810 <printf@plt>
   10bd0:	ldr	r3, [r4]
   10bd4:	sub	r3, r4, r3
   10bd8:	ldrh	r2, [r3]
   10bdc:	cmp	r2, #7
   10be0:	bls	10ba8 <print_type@@Base+0x110>
   10be4:	ldrh	r1, [r3, #6]
   10be8:	cmp	r1, #0
   10bec:	beq	10e3c <print_type@@Base+0x3a4>
   10bf0:	mov	r0, #44	; 0x2c
   10bf4:	bl	108ac <putchar@plt>
   10bf8:	ldr	r3, [r4]
   10bfc:	sub	r3, r4, r3
   10c00:	ldrh	r2, [r3]
   10c04:	cmp	r2, #5
   10c08:	bls	10b3c <print_type@@Base+0xa4>
   10c0c:	ldrh	r3, [r3, #4]
   10c10:	cmp	r3, #0
   10c14:	beq	10b3c <print_type@@Base+0xa4>
   10c18:	ldrsb	r3, [r4, r3]
   10c1c:	cmp	r3, #16
   10c20:	addls	pc, pc, r3, lsl #2
   10c24:	b	10e54 <print_type@@Base+0x3bc>
   10c28:	b	10dec <print_type@@Base+0x354>
   10c2c:	b	10dd4 <print_type@@Base+0x33c>
   10c30:	b	10dc8 <print_type@@Base+0x330>
   10c34:	b	10dbc <print_type@@Base+0x324>
   10c38:	b	10db0 <print_type@@Base+0x318>
   10c3c:	b	10da4 <print_type@@Base+0x30c>
   10c40:	b	10d98 <print_type@@Base+0x300>
   10c44:	b	10d8c <print_type@@Base+0x2f4>
   10c48:	b	10d80 <print_type@@Base+0x2e8>
   10c4c:	b	10d74 <print_type@@Base+0x2dc>
   10c50:	b	10d68 <print_type@@Base+0x2d0>
   10c54:	b	10d5c <print_type@@Base+0x2c4>
   10c58:	b	10d50 <print_type@@Base+0x2b8>
   10c5c:	b	10d44 <print_type@@Base+0x2ac>
   10c60:	b	10d38 <print_type@@Base+0x2a0>
   10c64:	b	10d2c <print_type@@Base+0x294>
   10c68:	b	10d20 <print_type@@Base+0x288>
   10c6c:	ldr	r1, [pc, #512]	; 10e74 <print_type@@Base+0x3dc>
   10c70:	add	r1, pc, r1
   10c74:	b	10bc4 <print_type@@Base+0x12c>
   10c78:	ldr	r1, [pc, #504]	; 10e78 <print_type@@Base+0x3e0>
   10c7c:	add	r1, pc, r1
   10c80:	b	10bc4 <print_type@@Base+0x12c>
   10c84:	ldr	r1, [pc, #496]	; 10e7c <print_type@@Base+0x3e4>
   10c88:	add	r1, pc, r1
   10c8c:	b	10bc4 <print_type@@Base+0x12c>
   10c90:	ldr	r1, [pc, #488]	; 10e80 <print_type@@Base+0x3e8>
   10c94:	add	r1, pc, r1
   10c98:	b	10bc4 <print_type@@Base+0x12c>
   10c9c:	ldr	r1, [pc, #480]	; 10e84 <print_type@@Base+0x3ec>
   10ca0:	add	r1, pc, r1
   10ca4:	b	10bc4 <print_type@@Base+0x12c>
   10ca8:	ldr	r1, [pc, #472]	; 10e88 <print_type@@Base+0x3f0>
   10cac:	add	r1, pc, r1
   10cb0:	b	10bc4 <print_type@@Base+0x12c>
   10cb4:	ldr	r1, [pc, #464]	; 10e8c <print_type@@Base+0x3f4>
   10cb8:	add	r1, pc, r1
   10cbc:	b	10bc4 <print_type@@Base+0x12c>
   10cc0:	ldr	r1, [pc, #456]	; 10e90 <print_type@@Base+0x3f8>
   10cc4:	add	r1, pc, r1
   10cc8:	b	10bc4 <print_type@@Base+0x12c>
   10ccc:	ldr	r1, [pc, #448]	; 10e94 <print_type@@Base+0x3fc>
   10cd0:	add	r1, pc, r1
   10cd4:	b	10bc4 <print_type@@Base+0x12c>
   10cd8:	ldr	r1, [pc, #440]	; 10e98 <print_type@@Base+0x400>
   10cdc:	add	r1, pc, r1
   10ce0:	b	10bc4 <print_type@@Base+0x12c>
   10ce4:	ldr	r1, [pc, #432]	; 10e9c <print_type@@Base+0x404>
   10ce8:	add	r1, pc, r1
   10cec:	b	10bc4 <print_type@@Base+0x12c>
   10cf0:	ldr	r1, [pc, #424]	; 10ea0 <print_type@@Base+0x408>
   10cf4:	add	r1, pc, r1
   10cf8:	b	10bc4 <print_type@@Base+0x12c>
   10cfc:	ldr	r1, [pc, #416]	; 10ea4 <print_type@@Base+0x40c>
   10d00:	add	r1, pc, r1
   10d04:	b	10bc4 <print_type@@Base+0x12c>
   10d08:	ldr	r1, [pc, #408]	; 10ea8 <print_type@@Base+0x410>
   10d0c:	add	r1, pc, r1
   10d10:	b	10bc4 <print_type@@Base+0x12c>
   10d14:	ldr	r1, [pc, #400]	; 10eac <print_type@@Base+0x414>
   10d18:	add	r1, pc, r1
   10d1c:	b	10bc4 <print_type@@Base+0x12c>
   10d20:	ldr	r1, [pc, #392]	; 10eb0 <print_type@@Base+0x418>
   10d24:	add	r1, pc, r1
   10d28:	b	10b44 <print_type@@Base+0xac>
   10d2c:	ldr	r1, [pc, #384]	; 10eb4 <print_type@@Base+0x41c>
   10d30:	add	r1, pc, r1
   10d34:	b	10b44 <print_type@@Base+0xac>
   10d38:	ldr	r1, [pc, #376]	; 10eb8 <print_type@@Base+0x420>
   10d3c:	add	r1, pc, r1
   10d40:	b	10b44 <print_type@@Base+0xac>
   10d44:	ldr	r1, [pc, #368]	; 10ebc <print_type@@Base+0x424>
   10d48:	add	r1, pc, r1
   10d4c:	b	10b44 <print_type@@Base+0xac>
   10d50:	ldr	r1, [pc, #360]	; 10ec0 <print_type@@Base+0x428>
   10d54:	add	r1, pc, r1
   10d58:	b	10b44 <print_type@@Base+0xac>
   10d5c:	ldr	r1, [pc, #352]	; 10ec4 <print_type@@Base+0x42c>
   10d60:	add	r1, pc, r1
   10d64:	b	10b44 <print_type@@Base+0xac>
   10d68:	ldr	r1, [pc, #344]	; 10ec8 <print_type@@Base+0x430>
   10d6c:	add	r1, pc, r1
   10d70:	b	10b44 <print_type@@Base+0xac>
   10d74:	ldr	r1, [pc, #336]	; 10ecc <print_type@@Base+0x434>
   10d78:	add	r1, pc, r1
   10d7c:	b	10b44 <print_type@@Base+0xac>
   10d80:	ldr	r1, [pc, #328]	; 10ed0 <print_type@@Base+0x438>
   10d84:	add	r1, pc, r1
   10d88:	b	10b44 <print_type@@Base+0xac>
   10d8c:	ldr	r1, [pc, #320]	; 10ed4 <print_type@@Base+0x43c>
   10d90:	add	r1, pc, r1
   10d94:	b	10b44 <print_type@@Base+0xac>
   10d98:	ldr	r1, [pc, #312]	; 10ed8 <print_type@@Base+0x440>
   10d9c:	add	r1, pc, r1
   10da0:	b	10b44 <print_type@@Base+0xac>
   10da4:	ldr	r1, [pc, #304]	; 10edc <print_type@@Base+0x444>
   10da8:	add	r1, pc, r1
   10dac:	b	10b44 <print_type@@Base+0xac>
   10db0:	ldr	r1, [pc, #296]	; 10ee0 <print_type@@Base+0x448>
   10db4:	add	r1, pc, r1
   10db8:	b	10b44 <print_type@@Base+0xac>
   10dbc:	ldr	r1, [pc, #288]	; 10ee4 <print_type@@Base+0x44c>
   10dc0:	add	r1, pc, r1
   10dc4:	b	10b44 <print_type@@Base+0xac>
   10dc8:	ldr	r1, [pc, #280]	; 10ee8 <print_type@@Base+0x450>
   10dcc:	add	r1, pc, r1
   10dd0:	b	10b44 <print_type@@Base+0xac>
   10dd4:	ldr	r1, [pc, #272]	; 10eec <print_type@@Base+0x454>
   10dd8:	add	r1, pc, r1
   10ddc:	b	10b44 <print_type@@Base+0xac>
   10de0:	ldr	r1, [pc, #264]	; 10ef0 <print_type@@Base+0x458>
   10de4:	add	r1, pc, r1
   10de8:	b	10bc4 <print_type@@Base+0x12c>
   10dec:	ldr	r1, [pc, #256]	; 10ef4 <print_type@@Base+0x45c>
   10df0:	add	r1, pc, r1
   10df4:	b	10b44 <print_type@@Base+0xac>
   10df8:	mvn	r1, #0
   10dfc:	b	10b9c <print_type@@Base+0x104>
   10e00:	ldr	r3, [pc, #240]	; 10ef8 <print_type@@Base+0x460>
   10e04:	mov	r2, #147	; 0x93
   10e08:	ldr	r1, [pc, #236]	; 10efc <print_type@@Base+0x464>
   10e0c:	ldr	r0, [pc, #236]	; 10f00 <print_type@@Base+0x468>
   10e10:	add	r3, pc, r3
   10e14:	add	r3, r3, #28
   10e18:	add	r1, pc, r1
   10e1c:	add	r0, pc, r0
   10e20:	bl	108dc <__assert_fail@plt>
   10e24:	cmp	r2, #9
   10e28:	bls	10ba8 <print_type@@Base+0x110>
   10e2c:	ldrh	r3, [r3, #8]
   10e30:	cmp	r3, #0
   10e34:	bne	10b98 <print_type@@Base+0x100>
   10e38:	b	10ba8 <print_type@@Base+0x110>
   10e3c:	cmp	r2, #9
   10e40:	bls	10ba8 <print_type@@Base+0x110>
   10e44:	b	10b64 <print_type@@Base+0xcc>
   10e48:	ldr	r1, [pc, #180]	; 10f04 <print_type@@Base+0x46c>
   10e4c:	add	r1, pc, r1
   10e50:	b	10bc4 <print_type@@Base+0x12c>
   10e54:	ldr	r1, [pc, #172]	; 10f08 <print_type@@Base+0x470>
   10e58:	add	r1, pc, r1
   10e5c:	b	10b44 <print_type@@Base+0xac>
   10e60:	andeq	r1, r0, r8, lsr #8
   10e64:			; <UNDEFINED> instruction: 0x000014b4
   10e68:	andeq	r1, r0, ip, ror #8
   10e6c:	andeq	r1, r0, r8, lsl r4
   10e70:	andeq	r1, r0, r0, lsr #8
   10e74:	andeq	r1, r0, r0, lsl #6
   10e78:	andeq	r1, r0, r0, lsr #6
   10e7c:	andeq	r1, r0, ip, lsl r3
   10e80:	andeq	r1, r0, r8, lsl r3
   10e84:	andeq	r1, r0, r4, lsl r3
   10e88:	andeq	r1, r0, r0, lsl r3
   10e8c:	andeq	r1, r0, ip, lsl #6
   10e90:	andeq	r1, r0, r8, lsl #6
   10e94:	andeq	r1, r0, r4, lsl #6
   10e98:	andeq	r1, r0, r4, lsr #5
   10e9c:	andeq	r1, r0, r0, lsr #5
   10ea0:	muleq	r0, ip, r2
   10ea4:	muleq	r0, r8, r2
   10ea8:	andeq	r1, r0, ip, ror #4
   10eac:	andeq	r1, r0, r8, asr #5
   10eb0:			; <UNDEFINED> instruction: 0x000012b4
   10eb4:	andeq	r1, r0, r4, lsr #5
   10eb8:	muleq	r0, r0, r2
   10ebc:	andeq	r1, r0, ip, ror r2
   10ec0:	andeq	r1, r0, r8, ror #4
   10ec4:	andeq	r1, r0, r4, asr r2
   10ec8:	andeq	r1, r0, r0, asr #4
   10ecc:	andeq	r1, r0, ip, lsr #4
   10ed0:	andeq	r1, r0, r8, lsl r2
   10ed4:	andeq	r1, r0, r8, lsl #4
   10ed8:	strdeq	r1, [r0], -r4
   10edc:	andeq	r1, r0, r0, ror #3
   10ee0:	andeq	r1, r0, ip, asr #3
   10ee4:			; <UNDEFINED> instruction: 0x000011b8
   10ee8:	andeq	r1, r0, r4, lsr #3
   10eec:	andeq	r1, r0, r8, lsl #4
   10ef0:	andeq	r1, r0, r4, lsl #3
   10ef4:	andeq	r1, r0, r8, ror r1
   10ef8:	andeq	r0, r0, r8, lsr #30
   10efc:	strheq	r1, [r0], -r0
   10f00:	andeq	r1, r0, r4, lsr #2
   10f04:	andeq	r1, r0, r0, asr #7
   10f08:			; <UNDEFINED> instruction: 0x000013b4

00010f0c <print_object@@Base>:
   10f0c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10f10:	strd	r6, [sp, #8]
   10f14:	strd	r8, [sp, #16]
   10f18:	subs	r9, r0, #0
   10f1c:	strd	sl, [sp, #24]
   10f20:	str	lr, [sp, #32]
   10f24:	sub	sp, sp, #12
   10f28:	beq	11330 <print_object@@Base+0x424>
   10f2c:	ldr	r3, [r9]
   10f30:	sub	r3, r9, r3
   10f34:	ldrh	r2, [r3]
   10f38:	cmp	r2, #7
   10f3c:	bls	112e8 <print_object@@Base+0x3dc>
   10f40:	ldrh	r2, [r3, #6]
   10f44:	cmp	r2, #0
   10f48:	beq	112e8 <print_object@@Base+0x3dc>
   10f4c:	ldrh	r1, [r3, #4]
   10f50:	add	r8, r9, r2
   10f54:	ldr	r3, [r9, r2]
   10f58:	cmp	r1, #0
   10f5c:	add	r3, r3, #4
   10f60:	add	r8, r8, r3
   10f64:	beq	1130c <print_object@@Base+0x400>
   10f68:	ldr	r3, [r9, r1]
   10f6c:	add	r1, r9, r1
   10f70:	ldr	r0, [pc, #988]	; 11354 <print_object@@Base+0x448>
   10f74:	add	r3, r3, #4
   10f78:	add	r1, r1, r3
   10f7c:	add	r0, pc, r0
   10f80:	bl	10810 <printf@plt>
   10f84:	ldr	r0, [pc, #972]	; 11358 <print_object@@Base+0x44c>
   10f88:	add	r0, pc, r0
   10f8c:	bl	10810 <printf@plt>
   10f90:	cmp	r8, #0
   10f94:	beq	111a8 <print_object@@Base+0x29c>
   10f98:	ldr	r3, [r8, #-4]
   10f9c:	cmp	r3, #0
   10fa0:	beq	111a8 <print_object@@Base+0x29c>
   10fa4:	ldr	r2, [pc, #944]	; 1135c <print_object@@Base+0x450>
   10fa8:	mov	r7, #0
   10fac:	ldr	sl, [pc, #940]	; 11360 <print_object@@Base+0x454>
   10fb0:	ldr	fp, [pc, #940]	; 11364 <print_object@@Base+0x458>
   10fb4:	add	r2, pc, r2
   10fb8:	add	sl, pc, sl
   10fbc:	str	r2, [sp, #4]
   10fc0:	add	fp, pc, fp
   10fc4:	b	1116c <print_object@@Base+0x260>
   10fc8:	ldr	r3, [r6, r5]
   10fcc:	sub	r3, r4, r3
   10fd0:	ldrh	r2, [r3]
   10fd4:	cmp	r2, #5
   10fd8:	bls	1127c <print_object@@Base+0x370>
   10fdc:	ldrh	r1, [r3, #4]
   10fe0:	cmp	r1, #0
   10fe4:	beq	1127c <print_object@@Base+0x370>
   10fe8:	ldr	r3, [r4, r1]
   10fec:	add	r1, r4, r1
   10ff0:	mov	r0, sl
   10ff4:	add	r3, r3, #4
   10ff8:	add	r1, r1, r3
   10ffc:	bl	10810 <printf@plt>
   11000:	ldr	r3, [r6, r5]
   11004:	sub	r3, r4, r3
   11008:	ldrh	r2, [r3]
   1100c:	cmp	r2, #7
   11010:	bls	112a0 <print_object@@Base+0x394>
   11014:	ldrh	r3, [r3, #6]
   11018:	cmp	r3, #0
   1101c:	beq	112a0 <print_object@@Base+0x394>
   11020:	ldr	r0, [r4, r3]
   11024:	add	r3, r4, r3
   11028:	add	r0, r3, r0
   1102c:	bl	10a98 <print_type@@Base>
   11030:	ldr	r3, [r6, r5]
   11034:	sub	r3, r4, r3
   11038:	ldrh	r2, [r3]
   1103c:	cmp	r2, #9
   11040:	bls	11148 <print_object@@Base+0x23c>
   11044:	ldrh	r1, [r3, #8]
   11048:	cmp	r1, #0
   1104c:	beq	1106c <print_object@@Base+0x160>
   11050:	ldr	r0, [pc, #784]	; 11368 <print_object@@Base+0x45c>
   11054:	ldrh	r1, [r4, r1]
   11058:	add	r0, pc, r0
   1105c:	bl	10810 <printf@plt>
   11060:	ldr	r3, [r6, r5]
   11064:	sub	r3, r4, r3
   11068:	ldrh	r2, [r3]
   1106c:	cmp	r2, #13
   11070:	bls	11148 <print_object@@Base+0x23c>
   11074:	ldrh	r1, [r3, #12]
   11078:	cmp	r1, #0
   1107c:	beq	1109c <print_object@@Base+0x190>
   11080:	ldr	r0, [pc, #740]	; 1136c <print_object@@Base+0x460>
   11084:	ldrd	r2, [r4, r1]
   11088:	add	r0, pc, r0
   1108c:	bl	10810 <printf@plt>
   11090:	ldr	r3, [r6, r5]
   11094:	sub	r3, r4, r3
   11098:	ldrh	r2, [r3]
   1109c:	cmp	r2, #15
   110a0:	bls	11148 <print_object@@Base+0x23c>
   110a4:	ldrh	r1, [r3, #14]
   110a8:	cmp	r1, #0
   110ac:	beq	110d0 <print_object@@Base+0x1c4>
   110b0:	ldr	r0, [pc, #696]	; 11370 <print_object@@Base+0x464>
   110b4:	add	r1, r4, r1
   110b8:	ldrd	r2, [r1]
   110bc:	add	r0, pc, r0
   110c0:	bl	10810 <printf@plt>
   110c4:	ldr	r3, [r6, r5]
   110c8:	sub	r3, r4, r3
   110cc:	ldrh	r2, [r3]
   110d0:	cmp	r2, #19
   110d4:	bls	11148 <print_object@@Base+0x23c>
   110d8:	ldrh	r1, [r3, #18]
   110dc:	cmp	r1, #0
   110e0:	beq	11118 <print_object@@Base+0x20c>
   110e4:	ldrb	r3, [r4, r1]
   110e8:	ldr	r1, [pc, #644]	; 11374 <print_object@@Base+0x468>
   110ec:	cmp	r3, #0
   110f0:	add	r1, pc, r1
   110f4:	beq	11100 <print_object@@Base+0x1f4>
   110f8:	ldr	r1, [pc, #632]	; 11378 <print_object@@Base+0x46c>
   110fc:	add	r1, pc, r1
   11100:	ldr	r0, [pc, #628]	; 1137c <print_object@@Base+0x470>
   11104:	add	r0, pc, r0
   11108:	bl	10810 <printf@plt>
   1110c:	ldr	r3, [r6, r5]
   11110:	sub	r3, r4, r3
   11114:	ldrh	r2, [r3]
   11118:	cmp	r2, #21
   1111c:	bls	11148 <print_object@@Base+0x23c>
   11120:	ldrh	r3, [r3, #20]
   11124:	cmp	r3, #0
   11128:	beq	11148 <print_object@@Base+0x23c>
   1112c:	ldrb	r3, [r4, r3]
   11130:	mov	r0, fp
   11134:	ldr	r1, [pc, #580]	; 11380 <print_object@@Base+0x474>
   11138:	cmp	r3, #0
   1113c:	add	r1, pc, r1
   11140:	ldrne	r1, [sp, #4]
   11144:	bl	10810 <printf@plt>
   11148:	mov	r0, #125	; 0x7d
   1114c:	add	r7, r7, #1
   11150:	bl	108ac <putchar@plt>
   11154:	ldr	r3, [r8, #-4]
   11158:	cmp	r7, r3
   1115c:	bcs	111a8 <print_object@@Base+0x29c>
   11160:	mov	r0, #44	; 0x2c
   11164:	bl	108ac <putchar@plt>
   11168:	ldr	r3, [r8, #-4]
   1116c:	cmp	r7, r3
   11170:	add	r6, r8, r7, lsl #2
   11174:	bcs	112c4 <print_object@@Base+0x3b8>
   11178:	ldr	r5, [r8, r7, lsl #2]
   1117c:	adds	r4, r6, r5
   11180:	bne	10fc8 <print_object@@Base+0xbc>
   11184:	ldr	r3, [pc, #504]	; 11384 <print_object@@Base+0x478>
   11188:	mov	r2, #195	; 0xc3
   1118c:	ldr	r1, [pc, #500]	; 11388 <print_object@@Base+0x47c>
   11190:	ldr	r0, [pc, #500]	; 1138c <print_object@@Base+0x480>
   11194:	add	r3, pc, r3
   11198:	add	r3, r3, #144	; 0x90
   1119c:	add	r1, pc, r1
   111a0:	add	r0, pc, r0
   111a4:	bl	108dc <__assert_fail@plt>
   111a8:	mov	r0, #93	; 0x5d
   111ac:	bl	108ac <putchar@plt>
   111b0:	ldr	r3, [r9]
   111b4:	sub	r3, r9, r3
   111b8:	ldrh	r2, [r3]
   111bc:	cmp	r2, #9
   111c0:	bls	11258 <print_object@@Base+0x34c>
   111c4:	ldrh	r1, [r3, #8]
   111c8:	cmp	r1, #0
   111cc:	beq	11204 <print_object@@Base+0x2f8>
   111d0:	ldrb	r3, [r9, r1]
   111d4:	ldr	r1, [pc, #436]	; 11390 <print_object@@Base+0x484>
   111d8:	cmp	r3, #0
   111dc:	add	r1, pc, r1
   111e0:	beq	111ec <print_object@@Base+0x2e0>
   111e4:	ldr	r1, [pc, #424]	; 11394 <print_object@@Base+0x488>
   111e8:	add	r1, pc, r1
   111ec:	ldr	r0, [pc, #420]	; 11398 <print_object@@Base+0x48c>
   111f0:	add	r0, pc, r0
   111f4:	bl	10810 <printf@plt>
   111f8:	ldr	r3, [r9]
   111fc:	sub	r3, r9, r3
   11200:	ldrh	r2, [r3]
   11204:	cmp	r2, #11
   11208:	bls	11258 <print_object@@Base+0x34c>
   1120c:	ldrh	r1, [r3, #10]
   11210:	cmp	r1, #0
   11214:	beq	11234 <print_object@@Base+0x328>
   11218:	ldr	r0, [pc, #380]	; 1139c <print_object@@Base+0x490>
   1121c:	ldr	r1, [r9, r1]
   11220:	add	r0, pc, r0
   11224:	bl	10810 <printf@plt>
   11228:	ldr	r3, [r9]
   1122c:	sub	r3, r9, r3
   11230:	ldrh	r2, [r3]
   11234:	cmp	r2, #13
   11238:	bls	11258 <print_object@@Base+0x34c>
   1123c:	ldrh	r3, [r3, #12]
   11240:	cmp	r3, #0
   11244:	beq	11258 <print_object@@Base+0x34c>
   11248:	ldr	r0, [pc, #336]	; 113a0 <print_object@@Base+0x494>
   1124c:	ldr	r1, [r9, r3]
   11250:	add	r0, pc, r0
   11254:	bl	10810 <printf@plt>
   11258:	mov	r0, #125	; 0x7d
   1125c:	add	sp, sp, #12
   11260:	ldrd	r4, [sp]
   11264:	ldrd	r6, [sp, #8]
   11268:	ldrd	r8, [sp, #16]
   1126c:	ldrd	sl, [sp, #24]
   11270:	ldr	lr, [sp, #32]
   11274:	add	sp, sp, #36	; 0x24
   11278:	b	108ac <putchar@plt>
   1127c:	ldr	r3, [pc, #288]	; 113a4 <print_object@@Base+0x498>
   11280:	mov	r2, #195	; 0xc3
   11284:	ldr	r1, [pc, #284]	; 113a8 <print_object@@Base+0x49c>
   11288:	ldr	r0, [pc, #284]	; 113ac <print_object@@Base+0x4a0>
   1128c:	add	r3, pc, r3
   11290:	add	r3, r3, #144	; 0x90
   11294:	add	r1, pc, r1
   11298:	add	r0, pc, r0
   1129c:	bl	108dc <__assert_fail@plt>
   112a0:	ldr	r3, [pc, #264]	; 113b0 <print_object@@Base+0x4a4>
   112a4:	mov	r2, #201	; 0xc9
   112a8:	ldr	r1, [pc, #260]	; 113b4 <print_object@@Base+0x4a8>
   112ac:	ldr	r0, [pc, #260]	; 113b8 <print_object@@Base+0x4ac>
   112b0:	add	r3, pc, r3
   112b4:	add	r3, r3, #168	; 0xa8
   112b8:	add	r1, pc, r1
   112bc:	add	r0, pc, r0
   112c0:	bl	108dc <__assert_fail@plt>
   112c4:	ldr	r3, [pc, #240]	; 113bc <print_object@@Base+0x4b0>
   112c8:	mov	r2, #192	; 0xc0
   112cc:	ldr	r1, [pc, #236]	; 113c0 <print_object@@Base+0x4b4>
   112d0:	ldr	r0, [pc, #236]	; 113c4 <print_object@@Base+0x4b8>
   112d4:	add	r3, pc, r3
   112d8:	add	r3, r3, #120	; 0x78
   112dc:	add	r1, pc, r1
   112e0:	add	r0, pc, r0
   112e4:	bl	108dc <__assert_fail@plt>
   112e8:	ldr	r3, [pc, #216]	; 113c8 <print_object@@Base+0x4bc>
   112ec:	mov	r2, #224	; 0xe0
   112f0:	ldr	r1, [pc, #212]	; 113cc <print_object@@Base+0x4c0>
   112f4:	ldr	r0, [pc, #212]	; 113d0 <print_object@@Base+0x4c4>
   112f8:	add	r3, pc, r3
   112fc:	add	r3, r3, #68	; 0x44
   11300:	add	r1, pc, r1
   11304:	add	r0, pc, r0
   11308:	bl	108dc <__assert_fail@plt>
   1130c:	ldr	r3, [pc, #192]	; 113d4 <print_object@@Base+0x4c8>
   11310:	mov	r2, #218	; 0xda
   11314:	ldr	r1, [pc, #188]	; 113d8 <print_object@@Base+0x4cc>
   11318:	ldr	r0, [pc, #188]	; 113dc <print_object@@Base+0x4d0>
   1131c:	add	r3, pc, r3
   11320:	add	r3, r3, #96	; 0x60
   11324:	add	r1, pc, r1
   11328:	add	r0, pc, r0
   1132c:	bl	108dc <__assert_fail@plt>
   11330:	ldr	r3, [pc, #168]	; 113e0 <print_object@@Base+0x4d4>
   11334:	mov	r2, #224	; 0xe0
   11338:	ldr	r1, [pc, #164]	; 113e4 <print_object@@Base+0x4d8>
   1133c:	ldr	r0, [pc, #164]	; 113e8 <print_object@@Base+0x4dc>
   11340:	add	r3, pc, r3
   11344:	add	r3, r3, #68	; 0x44
   11348:	add	r1, pc, r1
   1134c:	add	r0, pc, r0
   11350:	bl	108dc <__assert_fail@plt>
   11354:	ldrdeq	r1, [r0], -r0
   11358:	ldrdeq	r1, [r0], -r4
   1135c:	andeq	r1, r0, r4, rrx
   11360:	andeq	r1, r0, r8, ror #1
   11364:	andeq	r1, r0, r4, asr #2
   11368:	andeq	r1, r0, r0, rrx
   1136c:	andeq	r1, r0, ip, lsr r0
   11370:	andeq	r1, r0, r0, lsr #32
   11374:	andeq	r0, r0, r0, lsr pc
   11378:	andeq	r0, r0, ip, lsl pc
   1137c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11380:	andeq	r0, r0, r4, ror #29
   11384:	andeq	r0, r0, r4, lsr #23
   11388:	andeq	r0, r0, ip, lsr #26
   1138c:	andeq	r0, r0, r0, lsr #27
   11390:	andeq	r0, r0, r4, asr #28
   11394:	andeq	r0, r0, r0, lsr lr
   11398:	andeq	r0, r0, r0, lsr #30
   1139c:	andeq	r0, r0, r0, lsl #30
   113a0:	andeq	r0, r0, r0, ror #29
   113a4:	andeq	r0, r0, ip, lsr #21
   113a8:	andeq	r0, r0, r4, lsr ip
   113ac:	muleq	r0, r0, sp
   113b0:	andeq	r0, r0, r8, lsl #21
   113b4:	andeq	r0, r0, r0, lsl ip
   113b8:	andeq	r0, r0, ip, ror #26
   113bc:	andeq	r0, r0, r4, ror #20
   113c0:	andeq	r0, r0, ip, ror #23
   113c4:	andeq	r0, r0, r8, lsl #27
   113c8:	andeq	r0, r0, r0, asr #20
   113cc:	andeq	r0, r0, r8, asr #23
   113d0:	andeq	r0, r0, r4, lsr #26
   113d4:	andeq	r0, r0, ip, lsl sl
   113d8:	andeq	r0, r0, r4, lsr #23
   113dc:	andeq	r0, r0, r0, lsl #26
   113e0:	strdeq	r0, [r0], -r8
   113e4:	andeq	r0, r0, r0, lsl #23
   113e8:	strdeq	r0, [r0], -r4

000113ec <print_enum@@Base>:
   113ec:	strd	r4, [sp, #-32]!	; 0xffffffe0
   113f0:	strd	r6, [sp, #8]
   113f4:	subs	r7, r0, #0
   113f8:	strd	r8, [sp, #16]
   113fc:	str	sl, [sp, #24]
   11400:	str	lr, [sp, #28]
   11404:	beq	11714 <print_enum@@Base+0x328>
   11408:	ldr	r3, [r7]
   1140c:	sub	r3, r7, r3
   11410:	ldrh	r2, [r3]
   11414:	cmp	r2, #5
   11418:	bls	116f0 <print_enum@@Base+0x304>
   1141c:	ldrh	r1, [r3, #4]
   11420:	cmp	r1, #0
   11424:	beq	116f0 <print_enum@@Base+0x304>
   11428:	ldr	r3, [r7, r1]
   1142c:	add	r1, r7, r1
   11430:	ldr	r0, [pc, #768]	; 11738 <print_enum@@Base+0x34c>
   11434:	add	r3, r3, #4
   11438:	add	r1, r1, r3
   1143c:	add	r0, pc, r0
   11440:	bl	10810 <printf@plt>
   11444:	ldr	r3, [r7]
   11448:	sub	r3, r7, r3
   1144c:	ldrh	r2, [r3]
   11450:	cmp	r2, #7
   11454:	bls	116cc <print_enum@@Base+0x2e0>
   11458:	ldrh	r3, [r3, #6]
   1145c:	cmp	r3, #0
   11460:	beq	116cc <print_enum@@Base+0x2e0>
   11464:	ldr	r5, [r7, r3]
   11468:	add	r4, r7, r3
   1146c:	ldr	r0, [pc, #712]	; 1173c <print_enum@@Base+0x350>
   11470:	add	r5, r5, #4
   11474:	add	r6, r4, r5
   11478:	add	r0, pc, r0
   1147c:	bl	10810 <printf@plt>
   11480:	cmp	r6, #0
   11484:	beq	115d4 <print_enum@@Base+0x1e8>
   11488:	ldr	r3, [r6, #-4]
   1148c:	cmp	r3, #0
   11490:	beq	115d4 <print_enum@@Base+0x1e8>
   11494:	ldr	r8, [pc, #676]	; 11740 <print_enum@@Base+0x354>
   11498:	ldr	sl, [pc, #676]	; 11744 <print_enum@@Base+0x358>
   1149c:	ldr	r9, [pc, #676]	; 11748 <print_enum@@Base+0x35c>
   114a0:	add	r8, pc, r8
   114a4:	ldr	r4, [r4, r5]
   114a8:	mov	r5, #0
   114ac:	add	sl, pc, sl
   114b0:	add	r9, pc, r9
   114b4:	add	r4, r6, r4
   114b8:	b	115a8 <print_enum@@Base+0x1bc>
   114bc:	ldr	r3, [r4]
   114c0:	sub	r3, r4, r3
   114c4:	ldrh	r2, [r3]
   114c8:	cmp	r2, #5
   114cc:	bls	11684 <print_enum@@Base+0x298>
   114d0:	ldrh	r1, [r3, #4]
   114d4:	cmp	r1, #0
   114d8:	beq	11684 <print_enum@@Base+0x298>
   114dc:	ldr	r3, [r4, r1]
   114e0:	add	r1, r4, r1
   114e4:	mov	r0, r8
   114e8:	add	r3, r3, #4
   114ec:	add	r1, r1, r3
   114f0:	bl	10810 <printf@plt>
   114f4:	ldr	r3, [r4]
   114f8:	sub	r3, r4, r3
   114fc:	ldrh	r2, [r3]
   11500:	cmp	r2, #7
   11504:	bls	1157c <print_enum@@Base+0x190>
   11508:	ldrh	r1, [r3, #6]
   1150c:	cmp	r1, #0
   11510:	beq	1152c <print_enum@@Base+0x140>
   11514:	mov	r0, r9
   11518:	ldrd	r2, [r4, r1]
   1151c:	bl	10810 <printf@plt>
   11520:	ldr	r3, [r4]
   11524:	sub	r3, r4, r3
   11528:	ldrh	r2, [r3]
   1152c:	cmp	r2, #9
   11530:	bls	1157c <print_enum@@Base+0x190>
   11534:	ldrh	r3, [r3, #8]
   11538:	cmp	r3, #0
   1153c:	beq	1157c <print_enum@@Base+0x190>
   11540:	mov	r0, sl
   11544:	bl	10810 <printf@plt>
   11548:	ldr	r3, [r4]
   1154c:	sub	r3, r4, r3
   11550:	ldrh	r2, [r3]
   11554:	cmp	r2, #9
   11558:	movls	r0, #0
   1155c:	bls	11578 <print_enum@@Base+0x18c>
   11560:	ldrh	r0, [r3, #8]
   11564:	cmp	r0, #0
   11568:	beq	11578 <print_enum@@Base+0x18c>
   1156c:	ldr	r3, [r4, r0]
   11570:	add	r0, r4, r0
   11574:	add	r0, r0, r3
   11578:	bl	10f0c <print_object@@Base>
   1157c:	mov	r0, #125	; 0x7d
   11580:	add	r5, r5, #1
   11584:	bl	108ac <putchar@plt>
   11588:	ldr	r3, [r6, #-4]
   1158c:	cmp	r5, r3
   11590:	bcs	115d4 <print_enum@@Base+0x1e8>
   11594:	ldr	r3, [r6, r5, lsl #2]
   11598:	add	r4, r6, r5, lsl #2
   1159c:	mov	r0, #44	; 0x2c
   115a0:	add	r4, r4, r3
   115a4:	bl	108ac <putchar@plt>
   115a8:	cmp	r4, #0
   115ac:	bne	114bc <print_enum@@Base+0xd0>
   115b0:	ldr	r3, [pc, #404]	; 1174c <print_enum@@Base+0x360>
   115b4:	mov	r2, #159	; 0x9f
   115b8:	ldr	r1, [pc, #400]	; 11750 <print_enum@@Base+0x364>
   115bc:	ldr	r0, [pc, #400]	; 11754 <print_enum@@Base+0x368>
   115c0:	add	r3, pc, r3
   115c4:	add	r3, r3, #240	; 0xf0
   115c8:	add	r1, pc, r1
   115cc:	add	r0, pc, r0
   115d0:	bl	108dc <__assert_fail@plt>
   115d4:	mov	r0, #93	; 0x5d
   115d8:	bl	108ac <putchar@plt>
   115dc:	ldr	r3, [r7]
   115e0:	sub	r3, r7, r3
   115e4:	ldrh	r2, [r3]
   115e8:	cmp	r2, #9
   115ec:	bhi	1164c <print_enum@@Base+0x260>
   115f0:	ldr	r0, [pc, #352]	; 11758 <print_enum@@Base+0x36c>
   115f4:	add	r0, pc, r0
   115f8:	bl	10810 <printf@plt>
   115fc:	ldr	r3, [r7]
   11600:	sub	r3, r7, r3
   11604:	ldrh	r2, [r3]
   11608:	cmp	r2, #11
   1160c:	bls	116a8 <print_enum@@Base+0x2bc>
   11610:	ldrh	r3, [r3, #10]
   11614:	cmp	r3, #0
   11618:	beq	116a8 <print_enum@@Base+0x2bc>
   1161c:	ldr	r0, [r7, r3]
   11620:	add	r7, r7, r3
   11624:	add	r0, r7, r0
   11628:	bl	10a98 <print_type@@Base>
   1162c:	mov	r0, #125	; 0x7d
   11630:	ldrd	r4, [sp]
   11634:	ldrd	r6, [sp, #8]
   11638:	ldrd	r8, [sp, #16]
   1163c:	ldr	sl, [sp, #24]
   11640:	ldr	lr, [sp, #28]
   11644:	add	sp, sp, #32
   11648:	b	108ac <putchar@plt>
   1164c:	ldrh	r3, [r3, #8]
   11650:	cmp	r3, #0
   11654:	beq	115f0 <print_enum@@Base+0x204>
   11658:	ldrb	r3, [r7, r3]
   1165c:	ldr	r1, [pc, #248]	; 1175c <print_enum@@Base+0x370>
   11660:	cmp	r3, #0
   11664:	add	r1, pc, r1
   11668:	beq	11674 <print_enum@@Base+0x288>
   1166c:	ldr	r1, [pc, #236]	; 11760 <print_enum@@Base+0x374>
   11670:	add	r1, pc, r1
   11674:	ldr	r0, [pc, #232]	; 11764 <print_enum@@Base+0x378>
   11678:	add	r0, pc, r0
   1167c:	bl	10810 <printf@plt>
   11680:	b	115f0 <print_enum@@Base+0x204>
   11684:	ldr	r3, [pc, #220]	; 11768 <print_enum@@Base+0x37c>
   11688:	mov	r2, #159	; 0x9f
   1168c:	ldr	r1, [pc, #216]	; 1176c <print_enum@@Base+0x380>
   11690:	ldr	r0, [pc, #216]	; 11770 <print_enum@@Base+0x384>
   11694:	add	r3, pc, r3
   11698:	add	r3, r3, #240	; 0xf0
   1169c:	add	r1, pc, r1
   116a0:	add	r0, pc, r0
   116a4:	bl	108dc <__assert_fail@plt>
   116a8:	ldr	r3, [pc, #196]	; 11774 <print_enum@@Base+0x388>
   116ac:	mov	r2, #185	; 0xb9
   116b0:	ldr	r1, [pc, #192]	; 11778 <print_enum@@Base+0x38c>
   116b4:	ldr	r0, [pc, #192]	; 1177c <print_enum@@Base+0x390>
   116b8:	add	r3, pc, r3
   116bc:	add	r3, r3, #264	; 0x108
   116c0:	add	r1, pc, r1
   116c4:	add	r0, pc, r0
   116c8:	bl	108dc <__assert_fail@plt>
   116cc:	ldr	r3, [pc, #172]	; 11780 <print_enum@@Base+0x394>
   116d0:	mov	r2, #183	; 0xb7
   116d4:	ldr	r1, [pc, #168]	; 11784 <print_enum@@Base+0x398>
   116d8:	ldr	r0, [pc, #168]	; 11788 <print_enum@@Base+0x39c>
   116dc:	add	r3, pc, r3
   116e0:	add	r3, r3, #216	; 0xd8
   116e4:	add	r1, pc, r1
   116e8:	add	r0, pc, r0
   116ec:	bl	108dc <__assert_fail@plt>
   116f0:	ldr	r3, [pc, #148]	; 1178c <print_enum@@Base+0x3a0>
   116f4:	mov	r2, #177	; 0xb1
   116f8:	ldr	r1, [pc, #144]	; 11790 <print_enum@@Base+0x3a4>
   116fc:	ldr	r0, [pc, #144]	; 11794 <print_enum@@Base+0x3a8>
   11700:	add	r3, pc, r3
   11704:	add	r3, r3, #192	; 0xc0
   11708:	add	r1, pc, r1
   1170c:	add	r0, pc, r0
   11710:	bl	108dc <__assert_fail@plt>
   11714:	ldr	r3, [pc, #124]	; 11798 <print_enum@@Base+0x3ac>
   11718:	mov	r2, #177	; 0xb1
   1171c:	ldr	r1, [pc, #120]	; 1179c <print_enum@@Base+0x3b0>
   11720:	ldr	r0, [pc, #120]	; 117a0 <print_enum@@Base+0x3b4>
   11724:	add	r3, pc, r3
   11728:	add	r3, r3, #192	; 0xc0
   1172c:	add	r1, pc, r1
   11730:	add	r0, pc, r0
   11734:	bl	108dc <__assert_fail@plt>
   11738:	andeq	r0, r0, r0, lsl ip
   1173c:	andeq	r0, r0, r8, asr #25
   11740:	andeq	r0, r0, ip, lsr #23
   11744:			; <UNDEFINED> instruction: 0x00000cb0
   11748:	muleq	r0, ip, ip
   1174c:	andeq	r0, r0, r8, ror r7
   11750:	andeq	r0, r0, r0, lsl #18
   11754:	andeq	r0, r0, r4, ror r9
   11758:	andeq	r0, r0, r4, lsl #23
   1175c:			; <UNDEFINED> instruction: 0x000009bc
   11760:	andeq	r0, r0, r8, lsr #19
   11764:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11768:	andeq	r0, r0, r4, lsr #13
   1176c:	andeq	r0, r0, ip, lsr #16
   11770:	andeq	r0, r0, r8, lsl #19
   11774:	andeq	r0, r0, r0, lsl #13
   11778:	andeq	r0, r0, r8, lsl #16
   1177c:	andeq	r0, r0, r4, ror #18
   11780:	andeq	r0, r0, ip, asr r6
   11784:	andeq	r0, r0, r4, ror #15
   11788:	andeq	r0, r0, r0, asr #18
   1178c:	andeq	r0, r0, r8, lsr r6
   11790:	andeq	r0, r0, r0, asr #15
   11794:	andeq	r0, r0, ip, lsl r9
   11798:	andeq	r0, r0, r4, lsl r6
   1179c:	muleq	r0, ip, r7
   117a0:	andeq	r0, r0, r0, lsl r8

000117a4 <print_schema@@Base>:
   117a4:	strd	r4, [sp, #-16]!
   117a8:	str	r6, [sp, #8]
   117ac:	subs	r6, r0, #0
   117b0:	str	lr, [sp, #12]
   117b4:	beq	11a6c <print_schema@@Base+0x2c8>
   117b8:	ldr	r3, [r6]
   117bc:	sub	r3, r6, r3
   117c0:	ldrh	r2, [r3]
   117c4:	cmp	r2, #5
   117c8:	bls	11a24 <print_schema@@Base+0x280>
   117cc:	ldrh	r3, [r3, #4]
   117d0:	cmp	r3, #0
   117d4:	beq	11a24 <print_schema@@Base+0x280>
   117d8:	ldr	r5, [r6, r3]
   117dc:	mov	r0, #123	; 0x7b
   117e0:	add	r3, r6, r3
   117e4:	add	r5, r5, #4
   117e8:	add	r5, r3, r5
   117ec:	bl	108ac <putchar@plt>
   117f0:	ldr	r0, [pc, #664]	; 11a90 <print_schema@@Base+0x2ec>
   117f4:	add	r0, pc, r0
   117f8:	bl	10810 <printf@plt>
   117fc:	cmp	r5, #0
   11800:	beq	11870 <print_schema@@Base+0xcc>
   11804:	ldr	r3, [r5, #-4]
   11808:	cmp	r3, #0
   1180c:	movne	r4, #0
   11810:	bne	11840 <print_schema@@Base+0x9c>
   11814:	b	11870 <print_schema@@Base+0xcc>
   11818:	ldr	r0, [r5, r4, lsl #2]
   1181c:	add	r4, r4, #1
   11820:	add	r0, r3, r0
   11824:	bl	10f0c <print_object@@Base>
   11828:	ldr	r3, [r5, #-4]
   1182c:	cmp	r4, r3
   11830:	bcs	11870 <print_schema@@Base+0xcc>
   11834:	mov	r0, #44	; 0x2c
   11838:	bl	108ac <putchar@plt>
   1183c:	ldr	r3, [r5, #-4]
   11840:	cmp	r4, r3
   11844:	add	r3, r5, r4, lsl #2
   11848:	bcc	11818 <print_schema@@Base+0x74>
   1184c:	ldr	r3, [pc, #576]	; 11a94 <print_schema@@Base+0x2f0>
   11850:	mov	r2, #215	; 0xd7
   11854:	ldr	r1, [pc, #572]	; 11a98 <print_schema@@Base+0x2f4>
   11858:	ldr	r0, [pc, #572]	; 11a9c <print_schema@@Base+0x2f8>
   1185c:	add	r3, pc, r3
   11860:	add	r3, r3, #324	; 0x144
   11864:	add	r1, pc, r1
   11868:	add	r0, pc, r0
   1186c:	bl	108dc <__assert_fail@plt>
   11870:	mov	r0, #93	; 0x5d
   11874:	bl	108ac <putchar@plt>
   11878:	ldr	r3, [r6]
   1187c:	sub	r3, r6, r3
   11880:	ldrh	r2, [r3]
   11884:	cmp	r2, #7
   11888:	bls	11a48 <print_schema@@Base+0x2a4>
   1188c:	ldrh	r3, [r3, #6]
   11890:	cmp	r3, #0
   11894:	beq	11a48 <print_schema@@Base+0x2a4>
   11898:	ldr	r5, [r6, r3]
   1189c:	add	r3, r6, r3
   118a0:	ldr	r0, [pc, #504]	; 11aa0 <print_schema@@Base+0x2fc>
   118a4:	add	r5, r5, #4
   118a8:	add	r5, r3, r5
   118ac:	add	r0, pc, r0
   118b0:	bl	10810 <printf@plt>
   118b4:	cmp	r5, #0
   118b8:	beq	11928 <print_schema@@Base+0x184>
   118bc:	ldr	r3, [r5, #-4]
   118c0:	cmp	r3, #0
   118c4:	movne	r4, #0
   118c8:	bne	118f8 <print_schema@@Base+0x154>
   118cc:	b	11928 <print_schema@@Base+0x184>
   118d0:	ldr	r0, [r5, r4, lsl #2]
   118d4:	add	r4, r4, #1
   118d8:	add	r0, r3, r0
   118dc:	bl	113ec <print_enum@@Base>
   118e0:	ldr	r3, [r5, #-4]
   118e4:	cmp	r4, r3
   118e8:	bcs	11928 <print_schema@@Base+0x184>
   118ec:	mov	r0, #44	; 0x2c
   118f0:	bl	108ac <putchar@plt>
   118f4:	ldr	r3, [r5, #-4]
   118f8:	cmp	r3, r4
   118fc:	add	r3, r5, r4, lsl #2
   11900:	bhi	118d0 <print_schema@@Base+0x12c>
   11904:	ldr	r3, [pc, #408]	; 11aa4 <print_schema@@Base+0x300>
   11908:	mov	r2, #174	; 0xae
   1190c:	ldr	r1, [pc, #404]	; 11aa8 <print_schema@@Base+0x304>
   11910:	ldr	r0, [pc, #404]	; 11aac <print_schema@@Base+0x308>
   11914:	add	r3, pc, r3
   11918:	add	r3, r3, #376	; 0x178
   1191c:	add	r1, pc, r1
   11920:	add	r0, pc, r0
   11924:	bl	108dc <__assert_fail@plt>
   11928:	mov	r0, #93	; 0x5d
   1192c:	bl	108ac <putchar@plt>
   11930:	ldr	r3, [r6]
   11934:	sub	r3, r6, r3
   11938:	ldrh	r2, [r3]
   1193c:	cmp	r2, #9
   11940:	bls	11a08 <print_schema@@Base+0x264>
   11944:	ldrh	r1, [r3, #8]
   11948:	cmp	r1, #0
   1194c:	beq	11978 <print_schema@@Base+0x1d4>
   11950:	ldr	r3, [r6, r1]
   11954:	add	r1, r6, r1
   11958:	ldr	r0, [pc, #336]	; 11ab0 <print_schema@@Base+0x30c>
   1195c:	add	r3, r3, #4
   11960:	add	r1, r1, r3
   11964:	add	r0, pc, r0
   11968:	bl	10810 <printf@plt>
   1196c:	ldr	r3, [r6]
   11970:	sub	r3, r6, r3
   11974:	ldrh	r2, [r3]
   11978:	cmp	r2, #11
   1197c:	bls	11a08 <print_schema@@Base+0x264>
   11980:	ldrh	r1, [r3, #10]
   11984:	cmp	r1, #0
   11988:	beq	119b4 <print_schema@@Base+0x210>
   1198c:	ldr	r3, [r6, r1]
   11990:	add	r1, r6, r1
   11994:	ldr	r0, [pc, #280]	; 11ab4 <print_schema@@Base+0x310>
   11998:	add	r3, r3, #4
   1199c:	add	r1, r1, r3
   119a0:	add	r0, pc, r0
   119a4:	bl	10810 <printf@plt>
   119a8:	ldr	r3, [r6]
   119ac:	sub	r3, r6, r3
   119b0:	ldrh	r2, [r3]
   119b4:	cmp	r2, #13
   119b8:	bls	11a08 <print_schema@@Base+0x264>
   119bc:	ldrh	r3, [r3, #12]
   119c0:	cmp	r3, #0
   119c4:	beq	11a08 <print_schema@@Base+0x264>
   119c8:	ldr	r0, [pc, #232]	; 11ab8 <print_schema@@Base+0x314>
   119cc:	add	r0, pc, r0
   119d0:	bl	10810 <printf@plt>
   119d4:	ldr	r3, [r6]
   119d8:	sub	r3, r6, r3
   119dc:	ldrh	r2, [r3]
   119e0:	cmp	r2, #13
   119e4:	movls	r0, #0
   119e8:	bls	11a04 <print_schema@@Base+0x260>
   119ec:	ldrh	r0, [r3, #12]
   119f0:	cmp	r0, #0
   119f4:	beq	11a04 <print_schema@@Base+0x260>
   119f8:	ldr	r3, [r6, r0]
   119fc:	add	r6, r6, r0
   11a00:	add	r0, r6, r3
   11a04:	bl	10f0c <print_object@@Base>
   11a08:	ldr	r0, [pc, #172]	; 11abc <print_schema@@Base+0x318>
   11a0c:	ldrd	r4, [sp]
   11a10:	ldr	r6, [sp, #8]
   11a14:	add	r0, pc, r0
   11a18:	ldr	lr, [sp, #12]
   11a1c:	add	sp, sp, #16
   11a20:	b	10864 <puts@plt>
   11a24:	ldr	r3, [pc, #148]	; 11ac0 <print_schema@@Base+0x31c>
   11a28:	mov	r2, #237	; 0xed
   11a2c:	ldr	r1, [pc, #144]	; 11ac4 <print_schema@@Base+0x320>
   11a30:	ldr	r0, [pc, #144]	; 11ac8 <print_schema@@Base+0x324>
   11a34:	add	r3, pc, r3
   11a38:	add	r3, r3, #296	; 0x128
   11a3c:	add	r1, pc, r1
   11a40:	add	r0, pc, r0
   11a44:	bl	108dc <__assert_fail@plt>
   11a48:	ldr	r3, [pc, #124]	; 11acc <print_schema@@Base+0x328>
   11a4c:	mov	r2, #238	; 0xee
   11a50:	ldr	r1, [pc, #120]	; 11ad0 <print_schema@@Base+0x32c>
   11a54:	ldr	r0, [pc, #120]	; 11ad4 <print_schema@@Base+0x330>
   11a58:	add	r3, pc, r3
   11a5c:	add	r3, r3, #352	; 0x160
   11a60:	add	r1, pc, r1
   11a64:	add	r0, pc, r0
   11a68:	bl	108dc <__assert_fail@plt>
   11a6c:	ldr	r3, [pc, #100]	; 11ad8 <print_schema@@Base+0x334>
   11a70:	mov	r2, #237	; 0xed
   11a74:	ldr	r1, [pc, #96]	; 11adc <print_schema@@Base+0x338>
   11a78:	ldr	r0, [pc, #96]	; 11ae0 <print_schema@@Base+0x33c>
   11a7c:	add	r3, pc, r3
   11a80:	add	r3, r3, #296	; 0x128
   11a84:	add	r1, pc, r1
   11a88:	add	r0, pc, r0
   11a8c:	bl	108dc <__assert_fail@plt>
   11a90:	muleq	r0, r8, r9
   11a94:	ldrdeq	r0, [r0], -ip
   11a98:	andeq	r0, r0, r4, ror #12
   11a9c:	andeq	r0, r0, r0, lsl #16
   11aa0:	andeq	r0, r0, ip, ror #17
   11aa4:	andeq	r0, r0, r4, lsr #8
   11aa8:	andeq	r0, r0, ip, lsr #11
   11aac:	andeq	r0, r0, r8, asr #14
   11ab0:	andeq	r0, r0, r0, asr #16
   11ab4:	andeq	r0, r0, r8, lsl r8
   11ab8:	andeq	r0, r0, r0, lsl #16
   11abc:	andeq	r0, r0, r8, asr #15
   11ac0:	andeq	r0, r0, r4, lsl #6
   11ac4:	andeq	r0, r0, ip, lsl #9
   11ac8:	andeq	r0, r0, r8, ror #11
   11acc:	andeq	r0, r0, r0, ror #5
   11ad0:	andeq	r0, r0, r8, ror #8
   11ad4:	andeq	r0, r0, r4, asr #11
   11ad8:			; <UNDEFINED> instruction: 0x000002bc
   11adc:	andeq	r0, r0, r4, asr #8
   11ae0:			; <UNDEFINED> instruction: 0x000004b8

00011ae4 <load_and_dump_schema@@Base>:
   11ae4:	ldr	r1, [pc, #456]	; 11cb4 <load_and_dump_schema@@Base+0x1d0>
   11ae8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11aec:	strd	r6, [sp, #8]
   11af0:	strd	r8, [sp, #16]
   11af4:	mov	r9, r0
   11af8:	ldr	r8, [pc, #440]	; 11cb8 <load_and_dump_schema@@Base+0x1d4>
   11afc:	add	r1, pc, r1
   11b00:	str	sl, [sp, #24]
   11b04:	str	lr, [sp, #28]
   11b08:	bl	1081c <fopen@plt>
   11b0c:	subs	r6, r0, #0
   11b10:	add	r8, pc, r8
   11b14:	beq	11c34 <load_and_dump_schema@@Base+0x150>
   11b18:	mov	r2, #2
   11b1c:	mov	r1, #0
   11b20:	bl	108c4 <fseek@plt>
   11b24:	mov	r0, r6
   11b28:	bl	10834 <ftell@plt>
   11b2c:	mov	r5, r0
   11b30:	movw	r3, #10000	; 0x2710
   11b34:	cmp	r5, r3
   11b38:	mov	r0, r6
   11b3c:	bhi	11c7c <load_and_dump_schema@@Base+0x198>
   11b40:	bl	10840 <rewind@plt>
   11b44:	cmp	r5, #0
   11b48:	movne	r0, r5
   11b4c:	moveq	r0, #1
   11b50:	bl	10870 <malloc@plt>
   11b54:	subs	r4, r0, #0
   11b58:	beq	11c84 <load_and_dump_schema@@Base+0x1a0>
   11b5c:	mov	r7, #0
   11b60:	b	11b68 <load_and_dump_schema@@Base+0x84>
   11b64:	add	r7, r7, r0
   11b68:	mov	r3, r6
   11b6c:	sub	r2, r5, r7
   11b70:	mov	r1, #1
   11b74:	add	r0, r4, r7
   11b78:	bl	10858 <fread@plt>
   11b7c:	cmp	r0, #0
   11b80:	bne	11b64 <load_and_dump_schema@@Base+0x80>
   11b84:	cmp	r5, r7
   11b88:	mov	r0, r6
   11b8c:	bne	11c28 <load_and_dump_schema@@Base+0x144>
   11b90:	bl	108b8 <fclose@plt>
   11b94:	cmp	r5, #11
   11b98:	bls	11c90 <load_and_dump_schema@@Base+0x1ac>
   11b9c:	ldr	r2, [r4, #4]
   11ba0:	movw	r3, #17986	; 0x4642
   11ba4:	movt	r3, #21314	; 0x5342
   11ba8:	cmp	r2, r3
   11bac:	beq	11bec <load_and_dump_schema@@Base+0x108>
   11bb0:	ldr	r3, [pc, #260]	; 11cbc <load_and_dump_schema@@Base+0x1d8>
   11bb4:	movw	r1, #17986	; 0x4642
   11bb8:	movt	r1, #21314	; 0x5342
   11bbc:	ldr	r0, [r4, #8]
   11bc0:	ldr	r3, [r8, r3]
   11bc4:	cmp	r0, r1
   11bc8:	ldr	r3, [r3]
   11bcc:	beq	11c58 <load_and_dump_schema@@Base+0x174>
   11bd0:	mov	r2, #27
   11bd4:	mov	r1, #1
   11bd8:	ldr	r0, [pc, #224]	; 11cc0 <load_and_dump_schema@@Base+0x1dc>
   11bdc:	mvn	r5, #0
   11be0:	add	r0, pc, r0
   11be4:	bl	1084c <fwrite@plt>
   11be8:	b	11c04 <load_and_dump_schema@@Base+0x120>
   11bec:	ldr	r0, [r4]
   11bf0:	adds	r5, r4, r0
   11bf4:	beq	11bb0 <load_and_dump_schema@@Base+0xcc>
   11bf8:	mov	r0, r5
   11bfc:	mov	r5, #0
   11c00:	bl	117a4 <print_schema@@Base>
   11c04:	mov	r0, r4
   11c08:	bl	10828 <free@plt>
   11c0c:	mov	r0, r5
   11c10:	ldrd	r4, [sp]
   11c14:	ldrd	r6, [sp, #8]
   11c18:	ldrd	r8, [sp, #16]
   11c1c:	ldr	sl, [sp, #24]
   11c20:	add	sp, sp, #28
   11c24:	pop	{pc}		; (ldr pc, [sp], #4)
   11c28:	bl	108b8 <fclose@plt>
   11c2c:	mov	r0, r4
   11c30:	bl	10828 <free@plt>
   11c34:	ldr	r3, [pc, #128]	; 11cbc <load_and_dump_schema@@Base+0x1d8>
   11c38:	mov	r2, r9
   11c3c:	mvn	r5, #0
   11c40:	ldr	r1, [pc, #124]	; 11cc4 <load_and_dump_schema@@Base+0x1e0>
   11c44:	ldr	r3, [r8, r3]
   11c48:	add	r1, pc, r1
   11c4c:	ldr	r0, [r3]
   11c50:	bl	108a0 <fprintf@plt>
   11c54:	b	11c0c <load_and_dump_schema@@Base+0x128>
   11c58:	add	r0, r2, #4
   11c5c:	adds	r5, r4, r0
   11c60:	beq	11bd0 <load_and_dump_schema@@Base+0xec>
   11c64:	ldr	r0, [pc, #92]	; 11cc8 <load_and_dump_schema@@Base+0x1e4>
   11c68:	mov	r2, #40	; 0x28
   11c6c:	mov	r1, #1
   11c70:	add	r0, pc, r0
   11c74:	bl	1084c <fwrite@plt>
   11c78:	b	11bf8 <load_and_dump_schema@@Base+0x114>
   11c7c:	bl	108b8 <fclose@plt>
   11c80:	b	11c34 <load_and_dump_schema@@Base+0x150>
   11c84:	mov	r0, r6
   11c88:	bl	108b8 <fclose@plt>
   11c8c:	b	11c34 <load_and_dump_schema@@Base+0x150>
   11c90:	ldr	r3, [pc, #36]	; 11cbc <load_and_dump_schema@@Base+0x1d8>
   11c94:	mov	r2, r9
   11c98:	mvn	r5, #0
   11c9c:	ldr	r1, [pc, #40]	; 11ccc <load_and_dump_schema@@Base+0x1e8>
   11ca0:	ldr	r3, [r8, r3]
   11ca4:	add	r1, pc, r1
   11ca8:	ldr	r0, [r3]
   11cac:	bl	108a0 <fprintf@plt>
   11cb0:	b	11c04 <load_and_dump_schema@@Base+0x120>
   11cb4:	andeq	r0, r0, r4, ror #13
   11cb8:	andeq	r1, r1, r8, ror #9
   11cbc:	andeq	r0, r0, r4, asr r0
   11cc0:	andeq	r0, r0, ip, ror r6
   11cc4:	muleq	r0, ip, r5
   11cc8:	andeq	r0, r0, r0, asr #11
   11ccc:	andeq	r0, r0, ip, ror #10

00011cd0 <__libc_csu_init@@Base>:
   11cd0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11cd4:	mov	r7, r0
   11cd8:	ldr	r6, [pc, #72]	; 11d28 <__libc_csu_init@@Base+0x58>
   11cdc:	ldr	r5, [pc, #72]	; 11d2c <__libc_csu_init@@Base+0x5c>
   11ce0:	add	r6, pc, r6
   11ce4:	add	r5, pc, r5
   11ce8:	sub	r6, r6, r5
   11cec:	mov	r8, r1
   11cf0:	mov	r9, r2
   11cf4:	bl	107f0 <printf@plt-0x20>
   11cf8:	asrs	r6, r6, #2
   11cfc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d00:	mov	r4, #0
   11d04:	add	r4, r4, #1
   11d08:	ldr	r3, [r5], #4
   11d0c:	mov	r2, r9
   11d10:	mov	r1, r8
   11d14:	mov	r0, r7
   11d18:	blx	r3
   11d1c:	cmp	r6, r4
   11d20:	bne	11d04 <__libc_csu_init@@Base+0x34>
   11d24:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d28:	andeq	r1, r1, ip, lsr #4
   11d2c:	andeq	r1, r1, r4, lsr #4

00011d30 <__libc_csu_fini@@Base>:
   11d30:	bx	lr

Disassembly of section .fini:

00011d34 <.fini>:
   11d34:	push	{r3, lr}
   11d38:	pop	{r3, pc}
