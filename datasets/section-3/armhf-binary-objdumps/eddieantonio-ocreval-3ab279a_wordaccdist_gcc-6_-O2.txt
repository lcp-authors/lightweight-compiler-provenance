
../repos/eddieantonio-ocreval-3ab279a/wordaccdist/wordaccdist:     file format elf32-littlearm


Disassembly of section .init:

000106e4 <.init>:
   106e4:	push	{r3, lr}
   106e8:	bl	108d0 <abort@plt+0xc4>
   106ec:	pop	{r3, pc}

Disassembly of section .plt:

000106f0 <calloc@plt-0x14>:
   106f0:	push	{lr}		; (str lr, [sp, #-4]!)
   106f4:	ldr	lr, [pc, #4]	; 10700 <calloc@plt-0x4>
   106f8:	add	lr, pc, lr
   106fc:	ldr	pc, [lr, #8]!
   10700:	andeq	r2, r1, r0, lsl #18

00010704 <calloc@plt>:
   10704:	add	ip, pc, #0, 12
   10708:	add	ip, ip, #73728	; 0x12000
   1070c:	ldr	pc, [ip, #2304]!	; 0x900

00010710 <strcmp@plt>:
   10710:	add	ip, pc, #0, 12
   10714:	add	ip, ip, #73728	; 0x12000
   10718:	ldr	pc, [ip, #2296]!	; 0x8f8

0001071c <strtol@plt>:
   1071c:	add	ip, pc, #0, 12
   10720:	add	ip, ip, #73728	; 0x12000
   10724:	ldr	pc, [ip, #2288]!	; 0x8f0

00010728 <fopen@plt>:
   10728:	add	ip, pc, #0, 12
   1072c:	add	ip, ip, #73728	; 0x12000
   10730:	ldr	pc, [ip, #2280]!	; 0x8e8

00010734 <free@plt>:
   10734:	add	ip, pc, #0, 12
   10738:	add	ip, ip, #73728	; 0x12000
   1073c:	ldr	pc, [ip, #2272]!	; 0x8e0

00010740 <fgets@plt>:
   10740:	add	ip, pc, #0, 12
   10744:	add	ip, ip, #73728	; 0x12000
   10748:	ldr	pc, [ip, #2264]!	; 0x8d8

0001074c <strdup@plt>:
   1074c:	add	ip, pc, #0, 12
   10750:	add	ip, ip, #73728	; 0x12000
   10754:	ldr	pc, [ip, #2256]!	; 0x8d0

00010758 <unlink@plt>:
   10758:	add	ip, pc, #0, 12
   1075c:	add	ip, ip, #73728	; 0x12000
   10760:	ldr	pc, [ip, #2248]!	; 0x8c8

00010764 <__xstat@plt>:
   10764:	add	ip, pc, #0, 12
   10768:	add	ip, ip, #73728	; 0x12000
   1076c:	ldr	pc, [ip, #2240]!	; 0x8c0

00010770 <fwrite@plt>:
   10770:	add	ip, pc, #0, 12
   10774:	add	ip, ip, #73728	; 0x12000
   10778:	ldr	pc, [ip, #2232]!	; 0x8b8

0001077c <__libc_start_main@plt>:
   1077c:	add	ip, pc, #0, 12
   10780:	add	ip, ip, #73728	; 0x12000
   10784:	ldr	pc, [ip, #2224]!	; 0x8b0

00010788 <__sysv_signal@plt>:
   10788:	add	ip, pc, #0, 12
   1078c:	add	ip, ip, #73728	; 0x12000
   10790:	ldr	pc, [ip, #2216]!	; 0x8a8

00010794 <__gmon_start__@plt>:
   10794:	add	ip, pc, #0, 12
   10798:	add	ip, ip, #73728	; 0x12000
   1079c:	ldr	pc, [ip, #2208]!	; 0x8a0

000107a0 <getpid@plt>:
   107a0:	add	ip, pc, #0, 12
   107a4:	add	ip, ip, #73728	; 0x12000
   107a8:	ldr	pc, [ip, #2200]!	; 0x898

000107ac <exit@plt>:
   107ac:	add	ip, pc, #0, 12
   107b0:	add	ip, ip, #73728	; 0x12000
   107b4:	ldr	pc, [ip, #2192]!	; 0x890

000107b8 <strlen@plt>:
   107b8:	add	ip, pc, #0, 12
   107bc:	add	ip, ip, #73728	; 0x12000
   107c0:	ldr	pc, [ip, #2184]!	; 0x888

000107c4 <fprintf@plt>:
   107c4:	add	ip, pc, #0, 12
   107c8:	add	ip, ip, #73728	; 0x12000
   107cc:	ldr	pc, [ip, #2176]!	; 0x880

000107d0 <__isoc99_sscanf@plt>:
   107d0:	add	ip, pc, #0, 12
   107d4:	add	ip, ip, #73728	; 0x12000
   107d8:	ldr	pc, [ip, #2168]!	; 0x878

000107dc <fclose@plt>:
   107dc:	add	ip, pc, #0, 12
   107e0:	add	ip, ip, #73728	; 0x12000
   107e4:	ldr	pc, [ip, #2160]!	; 0x870

000107e8 <fputc@plt>:
   107e8:	add	ip, pc, #0, 12
   107ec:	add	ip, ip, #73728	; 0x12000
   107f0:	ldr	pc, [ip, #2152]!	; 0x868

000107f4 <sprintf@plt>:
   107f4:	add	ip, pc, #0, 12
   107f8:	add	ip, ip, #73728	; 0x12000
   107fc:	ldr	pc, [ip, #2144]!	; 0x860

00010800 <strncmp@plt>:
   10800:	add	ip, pc, #0, 12
   10804:	add	ip, ip, #73728	; 0x12000
   10808:	ldr	pc, [ip, #2136]!	; 0x858

0001080c <abort@plt>:
   1080c:	add	ip, pc, #0, 12
   10810:	add	ip, ip, #73728	; 0x12000
   10814:	ldr	pc, [ip, #2128]!	; 0x850

Disassembly of section .text:

00010818 <error@@Base-0x5e0>:
   10818:	push	{r4, r5, r6, lr}
   1081c:	sub	sp, sp, #8
   10820:	add	ip, sp, #8
   10824:	ldr	r2, [pc, #92]	; 10888 <abort@plt+0x7c>
   10828:	mov	r3, #0
   1082c:	str	r0, [ip, #-4]!
   10830:	add	r2, pc, r2
   10834:	mov	r0, ip
   10838:	mov	r5, r1
   1083c:	bl	10f98 <error@@Base+0x1a0>
   10840:	ldr	r3, [sp, #4]
   10844:	ldr	r6, [pc, #64]	; 1088c <abort@plt+0x80>
   10848:	cmp	r3, #0
   1084c:	add	r6, pc, r6
   10850:	subgt	r5, r5, #4
   10854:	movgt	r4, #0
   10858:	ble	10874 <abort@plt+0x68>
   1085c:	ldr	r0, [r5, #4]!
   10860:	bl	109bc <abort@plt+0x1b0>
   10864:	ldr	r3, [sp, #4]
   10868:	add	r4, r4, #1
   1086c:	cmp	r3, r4
   10870:	bgt	1085c <abort@plt+0x50>
   10874:	ldr	r3, [pc, #20]	; 10890 <abort@plt+0x84>
   10878:	mov	r1, #0
   1087c:	ldr	r0, [r6, r3]
   10880:	bl	10a80 <abort@plt+0x274>
   10884:	bl	10d84 <abort@plt+0x578>
   10888:	andeq	r1, r0, r4, lsr sl
   1088c:	andeq	r2, r1, ip, lsr #15
   10890:	andeq	r0, r0, r8, lsl #1
   10894:	mov	fp, #0
   10898:	mov	lr, #0
   1089c:	pop	{r1}		; (ldr r1, [sp], #4)
   108a0:	mov	r2, sp
   108a4:	push	{r2}		; (str r2, [sp, #-4]!)
   108a8:	push	{r0}		; (str r0, [sp, #-4]!)
   108ac:	ldr	ip, [pc, #16]	; 108c4 <abort@plt+0xb8>
   108b0:	push	{ip}		; (str ip, [sp, #-4]!)
   108b4:	ldr	r0, [pc, #12]	; 108c8 <abort@plt+0xbc>
   108b8:	ldr	r3, [pc, #12]	; 108cc <abort@plt+0xc0>
   108bc:	bl	1077c <__libc_start_main@plt>
   108c0:	bl	1080c <abort@plt>
   108c4:	andeq	r2, r1, ip, asr r2
   108c8:	andeq	r0, r1, r8, lsl r8
   108cc:	strdeq	r2, [r1], -ip
   108d0:	ldr	r3, [pc, #20]	; 108ec <abort@plt+0xe0>
   108d4:	ldr	r2, [pc, #20]	; 108f0 <abort@plt+0xe4>
   108d8:	add	r3, pc, r3
   108dc:	ldr	r2, [r3, r2]
   108e0:	cmp	r2, #0
   108e4:	bxeq	lr
   108e8:	b	10794 <__gmon_start__@plt>
   108ec:	andeq	r2, r1, r0, lsr #14
   108f0:	andeq	r0, r0, r4, ror r0
   108f4:	ldr	r3, [pc, #28]	; 10918 <abort@plt+0x10c>
   108f8:	ldr	r0, [pc, #28]	; 1091c <abort@plt+0x110>
   108fc:	sub	r3, r3, r0
   10900:	cmp	r3, #6
   10904:	bxls	lr
   10908:	ldr	r3, [pc, #16]	; 10920 <abort@plt+0x114>
   1090c:	cmp	r3, #0
   10910:	bxeq	lr
   10914:	bx	r3
   10918:	andeq	r3, r2, r7, lsr #1
   1091c:	andeq	r3, r2, r4, lsr #1
   10920:	andeq	r0, r0, r0
   10924:	ldr	r1, [pc, #36]	; 10950 <abort@plt+0x144>
   10928:	ldr	r0, [pc, #36]	; 10954 <abort@plt+0x148>
   1092c:	sub	r1, r1, r0
   10930:	asr	r1, r1, #2
   10934:	add	r1, r1, r1, lsr #31
   10938:	asrs	r1, r1, #1
   1093c:	bxeq	lr
   10940:	ldr	r3, [pc, #16]	; 10958 <abort@plt+0x14c>
   10944:	cmp	r3, #0
   10948:	bxeq	lr
   1094c:	bx	r3
   10950:	andeq	r3, r2, r4, lsr #1
   10954:	andeq	r3, r2, r4, lsr #1
   10958:	andeq	r0, r0, r0
   1095c:	push	{r4, lr}
   10960:	ldr	r4, [pc, #24]	; 10980 <abort@plt+0x174>
   10964:	ldrb	r3, [r4]
   10968:	cmp	r3, #0
   1096c:	popne	{r4, pc}
   10970:	bl	108f4 <abort@plt+0xe8>
   10974:	mov	r3, #1
   10978:	strb	r3, [r4]
   1097c:	pop	{r4, pc}
   10980:	andeq	r3, r2, r4, lsr #1
   10984:	ldr	r0, [pc, #40]	; 109b4 <abort@plt+0x1a8>
   10988:	ldr	r3, [r0]
   1098c:	cmp	r3, #0
   10990:	bne	10998 <abort@plt+0x18c>
   10994:	b	10924 <abort@plt+0x118>
   10998:	ldr	r3, [pc, #24]	; 109b8 <abort@plt+0x1ac>
   1099c:	cmp	r3, #0
   109a0:	beq	10994 <abort@plt+0x188>
   109a4:	push	{r4, lr}
   109a8:	blx	r3
   109ac:	pop	{r4, lr}
   109b0:	b	10924 <abort@plt+0x118>
   109b4:	andeq	r2, r2, r4, lsl #30
   109b8:	andeq	r0, r0, r0
   109bc:	push	{r4, r5, r6, r7, r8, lr}
   109c0:	mov	r1, r0
   109c4:	ldr	r4, [pc, #48]	; 109fc <abort@plt+0x1f0>
   109c8:	ldr	r3, [pc, #48]	; 10a00 <abort@plt+0x1f4>
   109cc:	add	r4, pc, r4
   109d0:	ldr	r5, [r4, r3]
   109d4:	mov	r0, r5
   109d8:	ldm	r5, {r6, r7}
   109dc:	bl	117f4 <error@@Base+0x9fc>
   109e0:	ldm	r5, {r1, r2}
   109e4:	ldr	r3, [pc, #24]	; 10a04 <abort@plt+0x1f8>
   109e8:	sub	r2, r2, r7
   109ec:	ldr	r0, [r4, r3]
   109f0:	sub	r1, r1, r6
   109f4:	pop	{r4, r5, r6, r7, r8, lr}
   109f8:	b	10a08 <abort@plt+0x1fc>
   109fc:	andeq	r2, r1, ip, lsr #12
   10a00:	andeq	r0, r0, ip, ror r0
   10a04:	andeq	r0, r0, r8, lsl #1
   10a08:	cmp	r1, #0
   10a0c:	bxeq	lr
   10a10:	sub	r3, r1, r2
   10a14:	vldr	d6, [pc, #92]	; 10a78 <abort@plt+0x26c>
   10a18:	vmov	s14, r3
   10a1c:	vcvt.f64.s32	d7, s14
   10a20:	vmul.f64	d7, d7, d6
   10a24:	vmov	s13, r1
   10a28:	vcvt.f64.s32	d5, s13
   10a2c:	vdiv.f64	d6, d7, d5
   10a30:	vcmpe.f64	d6, #0.0
   10a34:	vmrs	APSR_nzcv, fpscr
   10a38:	movge	r3, #0
   10a3c:	blt	10a68 <abort@plt+0x25c>
   10a40:	ldr	r2, [r0, r3, lsl #2]
   10a44:	add	ip, r3, #1
   10a48:	add	r2, r2, r1
   10a4c:	str	r2, [r0, r3, lsl #2]
   10a50:	sxth	r3, ip
   10a54:	vmov	s15, r3
   10a58:	vcvt.f64.s32	d7, s15
   10a5c:	vcmpe.f64	d6, d7
   10a60:	vmrs	APSR_nzcv, fpscr
   10a64:	bge	10a40 <abort@plt+0x234>
   10a68:	ldr	r3, [r0, #404]	; 0x194
   10a6c:	add	r1, r3, r1
   10a70:	str	r1, [r0, #404]	; 0x194
   10a74:	bx	lr
   10a78:	andeq	r0, r0, r0
   10a7c:	subsmi	r0, r9, r0
   10a80:	ldr	r3, [r0, #404]	; 0x194
   10a84:	cmp	r3, #0
   10a88:	bxeq	lr
   10a8c:	push	{r4, r5, r6, r7, r8, lr}
   10a90:	vpush	{d8}
   10a94:	mov	r6, r0
   10a98:	mov	r0, r1
   10a9c:	ldr	r1, [pc, #124]	; 10b20 <abort@plt+0x314>
   10aa0:	sub	sp, sp, #8
   10aa4:	add	r1, pc, r1
   10aa8:	bl	10f08 <error@@Base+0x110>
   10aac:	ldr	r8, [pc, #112]	; 10b24 <abort@plt+0x318>
   10ab0:	vldr	d8, [pc, #96]	; 10b18 <abort@plt+0x30c>
   10ab4:	add	r8, pc, r8
   10ab8:	sub	r5, r6, #4
   10abc:	mov	r4, #0
   10ac0:	mov	r7, r0
   10ac4:	ldr	r3, [r5, #4]!
   10ac8:	vldr	s13, [r6, #404]	; 0x194
   10acc:	mov	r2, r4
   10ad0:	vmov	s14, r3
   10ad4:	add	r4, r4, #1
   10ad8:	vcvt.f64.s32	d6, s13
   10adc:	mov	r1, r8
   10ae0:	vcvt.f64.s32	d7, s14
   10ae4:	mov	r0, r7
   10ae8:	vmul.f64	d7, d7, d8
   10aec:	vdiv.f64	d5, d7, d6
   10af0:	vstr	d5, [sp]
   10af4:	bl	107c4 <fprintf@plt>
   10af8:	cmp	r4, #101	; 0x65
   10afc:	bne	10ac4 <abort@plt+0x2b8>
   10b00:	mov	r0, r7
   10b04:	add	sp, sp, #8
   10b08:	vpop	{d8}
   10b0c:	pop	{r4, r5, r6, r7, r8, lr}
   10b10:	b	10c9c <abort@plt+0x490>
   10b14:	nop			; (mov r0, r0)
   10b18:	andeq	r0, r0, r0
   10b1c:	subsmi	r0, r9, r0
   10b20:	andeq	r1, r0, ip, ror #15
   10b24:	andeq	r1, r0, r0, ror #15
   10b28:	ldr	r3, [pc, #76]	; 10b7c <abort@plt+0x370>
   10b2c:	ldr	r2, [pc, #76]	; 10b80 <abort@plt+0x374>
   10b30:	add	r3, pc, r3
   10b34:	push	{r4, r5, lr}
   10b38:	sub	sp, sp, #116	; 0x74
   10b3c:	ldr	r3, [r3, r2]
   10b40:	mov	r5, r0
   10b44:	ldr	r4, [r3]
   10b48:	bl	107a0 <getpid@plt>
   10b4c:	ldr	r1, [pc, #48]	; 10b84 <abort@plt+0x378>
   10b50:	mov	r2, r4
   10b54:	add	r4, sp, #12
   10b58:	add	r1, pc, r1
   10b5c:	str	r5, [sp]
   10b60:	mov	r3, r0
   10b64:	mov	r0, r4
   10b68:	bl	107f4 <sprintf@plt>
   10b6c:	mov	r0, r4
   10b70:	bl	1074c <strdup@plt>
   10b74:	add	sp, sp, #116	; 0x74
   10b78:	pop	{r4, r5, pc}
   10b7c:	andeq	r2, r1, r8, asr #9
   10b80:	andeq	r0, r0, r8, ror r0
   10b84:	andeq	r1, r0, r8, asr #14
   10b88:	ldr	r3, [pc, #108]	; 10bfc <abort@plt+0x3f0>
   10b8c:	ldr	r2, [pc, #108]	; 10c00 <abort@plt+0x3f4>
   10b90:	add	r3, pc, r3
   10b94:	push	{r7, lr}
   10b98:	mov	r7, r0
   10b9c:	ldr	r3, [r3, r2]
   10ba0:	ldr	r3, [r3]
   10ba4:	cmp	r3, #0
   10ba8:	beq	10bb0 <abort@plt+0x3a4>
   10bac:	blx	r3
   10bb0:	ldr	r6, [pc, #76]	; 10c04 <abort@plt+0x3f8>
   10bb4:	add	r6, pc, r6
   10bb8:	ldrsh	r3, [r6]
   10bbc:	cmp	r3, #0
   10bc0:	movgt	r4, #1
   10bc4:	ble	10bf4 <abort@plt+0x3e8>
   10bc8:	mov	r0, r4
   10bcc:	bl	10b28 <abort@plt+0x31c>
   10bd0:	add	r4, r4, #1
   10bd4:	sxth	r4, r4
   10bd8:	mov	r5, r0
   10bdc:	bl	10758 <unlink@plt>
   10be0:	mov	r0, r5
   10be4:	bl	10734 <free@plt>
   10be8:	ldrsh	r3, [r6]
   10bec:	cmp	r3, r4
   10bf0:	bge	10bc8 <abort@plt+0x3bc>
   10bf4:	mov	r0, r7
   10bf8:	bl	107ac <exit@plt>
   10bfc:	andeq	r2, r1, r8, ror #8
   10c00:	andeq	r0, r0, r0, lsl #1
   10c04:	andeq	r2, r1, sl, ror #9
   10c08:	ldrb	r3, [r0]
   10c0c:	cmp	r3, #0
   10c10:	beq	10c74 <abort@plt+0x468>
   10c14:	ldrb	ip, [r1]
   10c18:	cmp	ip, r3
   10c1c:	bne	10c84 <abort@plt+0x478>
   10c20:	push	{lr}		; (str lr, [sp, #-4]!)
   10c24:	mov	r2, #0
   10c28:	mov	lr, r1
   10c2c:	b	10c3c <abort@plt+0x430>
   10c30:	ldrb	ip, [lr, #1]!
   10c34:	cmp	r3, ip
   10c38:	bne	10c5c <abort@plt+0x450>
   10c3c:	ldrb	r3, [r0, #1]!
   10c40:	add	r2, r2, #1
   10c44:	cmp	r3, #0
   10c48:	bne	10c30 <abort@plt+0x424>
   10c4c:	ldrb	ip, [r1, r2]
   10c50:	cmp	ip, #0
   10c54:	movne	r3, #0
   10c58:	beq	10c6c <abort@plt+0x460>
   10c5c:	cmp	r3, ip
   10c60:	movcs	r0, #1
   10c64:	mvncc	r0, #0
   10c68:	pop	{pc}		; (ldr pc, [sp], #4)
   10c6c:	mov	r0, ip
   10c70:	pop	{pc}		; (ldr pc, [sp], #4)
   10c74:	ldrb	ip, [r1, r3]
   10c78:	cmp	ip, #0
   10c7c:	movne	r3, #0
   10c80:	beq	10c94 <abort@plt+0x488>
   10c84:	cmp	r3, ip
   10c88:	movcs	r0, #1
   10c8c:	mvncc	r0, #0
   10c90:	bx	lr
   10c94:	mov	r0, ip
   10c98:	bx	lr
   10c9c:	ldr	r2, [pc, #44]	; 10cd0 <abort@plt+0x4c4>
   10ca0:	ldr	r3, [pc, #44]	; 10cd4 <abort@plt+0x4c8>
   10ca4:	add	r2, pc, r2
   10ca8:	ldr	r3, [r2, r3]
   10cac:	ldr	r3, [r3]
   10cb0:	cmp	r3, r0
   10cb4:	bxeq	lr
   10cb8:	ldr	r3, [pc, #24]	; 10cd8 <abort@plt+0x4cc>
   10cbc:	ldr	r3, [r2, r3]
   10cc0:	ldr	r3, [r3]
   10cc4:	cmp	r0, r3
   10cc8:	bxeq	lr
   10ccc:	b	107dc <fclose@plt>
   10cd0:	andeq	r2, r1, r4, asr r3
   10cd4:	andeq	r0, r0, r4, lsl #1
   10cd8:	andeq	r0, r0, ip, lsl #1
   10cdc:	push	{lr}		; (str lr, [sp, #-4]!)
   10ce0:	sub	sp, sp, #92	; 0x5c
   10ce4:	mov	r1, r0
   10ce8:	mov	r2, sp
   10cec:	mov	r0, #3
   10cf0:	bl	10764 <__xstat@plt>
   10cf4:	clz	r0, r0
   10cf8:	lsr	r0, r0, #5
   10cfc:	add	sp, sp, #92	; 0x5c
   10d00:	pop	{pc}		; (ldr pc, [sp], #4)
   10d04:	ldr	r2, [pc, #44]	; 10d38 <abort@plt+0x52c>
   10d08:	push	{r4, lr}
   10d0c:	add	r2, pc, r2
   10d10:	ldrh	r3, [r2]
   10d14:	add	r3, r3, #1
   10d18:	sxth	r3, r3
   10d1c:	mov	r0, r3
   10d20:	strh	r3, [r2]
   10d24:	bl	10b28 <abort@plt+0x31c>
   10d28:	mov	r4, r0
   10d2c:	bl	10758 <unlink@plt>
   10d30:	mov	r0, r4
   10d34:	pop	{r4, pc}
   10d38:	muleq	r1, r2, r3
   10d3c:	push	{r4, lr}
   10d40:	mov	r4, r0
   10d44:	bl	107b8 <strlen@plt>
   10d48:	sub	r0, r0, #1
   10d4c:	sxth	r0, r0
   10d50:	cmp	r0, #0
   10d54:	bge	10d6c <abort@plt+0x560>
   10d58:	b	10d78 <abort@plt+0x56c>
   10d5c:	sub	r0, r0, #1
   10d60:	sxth	r0, r0
   10d64:	cmn	r0, #1
   10d68:	beq	10d78 <abort@plt+0x56c>
   10d6c:	ldrb	r3, [r4, r0]
   10d70:	cmp	r3, #47	; 0x2f
   10d74:	bne	10d5c <abort@plt+0x550>
   10d78:	add	r0, r0, #1
   10d7c:	add	r0, r4, r0
   10d80:	pop	{r4, pc}
   10d84:	push	{r4, lr}
   10d88:	mov	r0, #0
   10d8c:	bl	10b88 <abort@plt+0x37c>
   10d90:	ldr	r1, [pc, #76]	; 10de4 <abort@plt+0x5d8>
   10d94:	ldr	r2, [pc, #76]	; 10de8 <abort@plt+0x5dc>
   10d98:	add	r1, pc, r1
   10d9c:	push	{r4, lr}
   10da0:	ldr	r2, [r1, r2]
   10da4:	ldr	r2, [r2]
   10da8:	cmp	r2, #0
   10dac:	beq	10db8 <abort@plt+0x5ac>
   10db0:	blx	r2
   10db4:	bl	10d84 <abort@plt+0x578>
   10db8:	ldr	r2, [pc, #44]	; 10dec <abort@plt+0x5e0>
   10dbc:	ldr	ip, [pc, #44]	; 10df0 <abort@plt+0x5e4>
   10dc0:	mov	r3, r0
   10dc4:	ldr	r0, [r1, r2]
   10dc8:	ldr	ip, [r1, ip]
   10dcc:	ldr	r1, [pc, #32]	; 10df4 <abort@plt+0x5e8>
   10dd0:	ldr	r0, [r0]
   10dd4:	add	r1, pc, r1
   10dd8:	ldr	r2, [ip]
   10ddc:	bl	107c4 <fprintf@plt>
   10de0:	b	10db4 <abort@plt+0x5a8>
   10de4:	andeq	r2, r1, r0, ror #4
   10de8:	andeq	r0, r0, ip, rrx
   10dec:	andeq	r0, r0, r0, ror r0
   10df0:	andeq	r0, r0, r8, ror r0
   10df4:	ldrdeq	r1, [r0], -ip

00010df8 <error@@Base>:
   10df8:	push	{r4, lr}
   10dfc:	mov	r3, r0
   10e00:	ldr	r4, [pc, #52]	; 10e3c <error@@Base+0x44>
   10e04:	ldr	r1, [pc, #52]	; 10e40 <error@@Base+0x48>
   10e08:	ldr	r2, [pc, #52]	; 10e44 <error@@Base+0x4c>
   10e0c:	add	r4, pc, r4
   10e10:	ldr	ip, [r4, r1]
   10e14:	ldr	r0, [r4, r2]
   10e18:	ldr	r1, [pc, #40]	; 10e48 <error@@Base+0x50>
   10e1c:	ldr	r2, [ip]
   10e20:	add	r1, pc, r1
   10e24:	ldr	r0, [r0]
   10e28:	bl	107c4 <fprintf@plt>
   10e2c:	ldr	r3, [pc, #24]	; 10e4c <error@@Base+0x54>
   10e30:	ldr	r3, [r4, r3]
   10e34:	ldr	r0, [r3]
   10e38:	bl	10b88 <abort@plt+0x37c>
   10e3c:	andeq	r2, r1, ip, ror #3
   10e40:	andeq	r0, r0, r8, ror r0
   10e44:	andeq	r0, r0, r0, ror r0
   10e48:	andeq	r1, r0, r0, lsr #9
   10e4c:	muleq	r0, r0, r0
   10e50:	push	{r4, lr}
   10e54:	bl	10704 <calloc@plt>
   10e58:	cmp	r0, #0
   10e5c:	popne	{r4, pc}
   10e60:	ldr	r0, [pc, #4]	; 10e6c <error@@Base+0x74>
   10e64:	add	r0, pc, r0
   10e68:	bl	10df8 <error@@Base>
   10e6c:	andeq	r1, r0, r4, ror #8
   10e70:	ldr	r3, [pc, #40]	; 10ea0 <error@@Base+0xa8>
   10e74:	add	r3, pc, r3
   10e78:	ldrb	r2, [r3, #2]
   10e7c:	cmp	r2, #0
   10e80:	beq	10e88 <error@@Base+0x90>
   10e84:	bx	lr
   10e88:	ldr	r0, [pc, #20]	; 10ea4 <error@@Base+0xac>
   10e8c:	push	{r4, lr}
   10e90:	mov	r2, #1
   10e94:	add	r0, pc, r0
   10e98:	strb	r2, [r3, #2]
   10e9c:	bl	10df8 <error@@Base>
   10ea0:	andeq	r2, r1, sl, lsr #4
   10ea4:	andeq	r1, r0, r0, asr r4
   10ea8:	ldr	r4, [pc, #68]	; 10ef4 <error@@Base+0xfc>
   10eac:	ldr	r2, [pc, #68]	; 10ef8 <error@@Base+0x100>
   10eb0:	ldr	ip, [pc, #68]	; 10efc <error@@Base+0x104>
   10eb4:	add	r4, pc, r4
   10eb8:	push	{lr}		; (str lr, [sp, #-4]!)
   10ebc:	sub	sp, sp, #12
   10ec0:	mov	r3, r0
   10ec4:	ldr	ip, [r4, ip]
   10ec8:	ldr	r0, [r4, r2]
   10ecc:	str	r1, [sp]
   10ed0:	ldr	r1, [pc, #40]	; 10f00 <error@@Base+0x108>
   10ed4:	ldr	r2, [ip]
   10ed8:	ldr	r0, [r0]
   10edc:	add	r1, pc, r1
   10ee0:	bl	107c4 <fprintf@plt>
   10ee4:	ldr	r3, [pc, #24]	; 10f04 <error@@Base+0x10c>
   10ee8:	ldr	r3, [r4, r3]
   10eec:	ldr	r0, [r3]
   10ef0:	bl	10b88 <abort@plt+0x37c>
   10ef4:	andeq	r2, r1, r4, asr #2
   10ef8:	andeq	r0, r0, r0, ror r0
   10efc:	andeq	r0, r0, r8, ror r0
   10f00:	andeq	r1, r0, r8, lsl r4
   10f04:	muleq	r0, r0, r0
   10f08:	ldr	ip, [pc, #116]	; 10f84 <error@@Base+0x18c>
   10f0c:	subs	r2, r0, #0
   10f10:	push	{r4, r5, r6, lr}
   10f14:	add	ip, pc, ip
   10f18:	mov	r4, r1
   10f1c:	beq	10f4c <error@@Base+0x154>
   10f20:	mov	r5, r2
   10f24:	bl	10728 <fopen@plt>
   10f28:	cmp	r0, #0
   10f2c:	popne	{r4, r5, r6, pc}
   10f30:	ldrb	r3, [r4]
   10f34:	mov	r1, r5
   10f38:	cmp	r3, #119	; 0x77
   10f3c:	beq	10f78 <error@@Base+0x180>
   10f40:	ldr	r0, [pc, #64]	; 10f88 <error@@Base+0x190>
   10f44:	add	r0, pc, r0
   10f48:	bl	10ea8 <error@@Base+0xb0>
   10f4c:	ldrb	r3, [r1]
   10f50:	cmp	r3, #114	; 0x72
   10f54:	beq	10f68 <error@@Base+0x170>
   10f58:	ldr	r3, [pc, #44]	; 10f8c <error@@Base+0x194>
   10f5c:	ldr	r3, [ip, r3]
   10f60:	ldr	r0, [r3]
   10f64:	pop	{r4, r5, r6, pc}
   10f68:	ldr	r3, [pc, #32]	; 10f90 <error@@Base+0x198>
   10f6c:	ldr	r3, [ip, r3]
   10f70:	ldr	r0, [r3]
   10f74:	pop	{r4, r5, r6, pc}
   10f78:	ldr	r0, [pc, #20]	; 10f94 <error@@Base+0x19c>
   10f7c:	add	r0, pc, r0
   10f80:	bl	10ea8 <error@@Base+0xb0>
   10f84:	andeq	r2, r1, r4, ror #1
   10f88:	ldrdeq	r1, [r0], -r8
   10f8c:	andeq	r0, r0, ip, lsl #1
   10f90:	andeq	r0, r0, r4, lsl #1
   10f94:	andeq	r1, r0, r8, lsl #7
   10f98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10f9c:	sub	sp, sp, #20
   10fa0:	mov	r7, r0
   10fa4:	str	r0, [sp, #8]
   10fa8:	ldr	r0, [r1]
   10fac:	str	r2, [sp, #12]
   10fb0:	mov	r9, r1
   10fb4:	mov	r6, r3
   10fb8:	bl	10d3c <abort@plt+0x530>
   10fbc:	ldr	r5, [pc, #496]	; 111b4 <error@@Base+0x3bc>
   10fc0:	ldr	r3, [pc, #496]	; 111b8 <error@@Base+0x3c0>
   10fc4:	add	r5, pc, r5
   10fc8:	ldr	r4, [pc, #492]	; 111bc <error@@Base+0x3c4>
   10fcc:	ldr	r3, [r5, r3]
   10fd0:	add	r4, pc, r4
   10fd4:	mov	r1, r4
   10fd8:	str	r0, [r3]
   10fdc:	mov	r0, #2
   10fe0:	bl	10788 <__sysv_signal@plt>
   10fe4:	mov	r1, r4
   10fe8:	mov	r0, #15
   10fec:	bl	10788 <__sysv_signal@plt>
   10ff0:	ldr	fp, [r7]
   10ff4:	cmp	fp, #1
   10ff8:	beq	11140 <error@@Base+0x348>
   10ffc:	mov	r7, #0
   11000:	ble	11154 <error@@Base+0x35c>
   11004:	ldr	r3, [pc, #436]	; 111c0 <error@@Base+0x3c8>
   11008:	mov	sl, #1
   1100c:	add	r3, pc, r3
   11010:	str	r3, [sp, #4]
   11014:	mov	r4, sl
   11018:	mov	r3, fp
   1101c:	b	11040 <error@@Base+0x248>
   11020:	add	r2, r7, #1
   11024:	str	r5, [r9, r7, lsl #2]
   11028:	sxth	r7, r2
   1102c:	add	r4, r4, #1
   11030:	sxth	r4, r4
   11034:	cmp	r4, r3
   11038:	mov	sl, r4
   1103c:	bge	11154 <error@@Base+0x35c>
   11040:	ldr	r5, [r9, r4, lsl #2]
   11044:	lsl	fp, r4, #2
   11048:	ldrb	r2, [r5]
   1104c:	cmp	r2, #45	; 0x2d
   11050:	bne	11020 <error@@Base+0x228>
   11054:	ldrb	r8, [r5, #1]
   11058:	cmp	r8, #0
   1105c:	beq	11020 <error@@Base+0x228>
   11060:	mov	r0, r5
   11064:	str	r3, [sp]
   11068:	bl	107b8 <strlen@plt>
   1106c:	mov	r1, r5
   11070:	mov	r2, r0
   11074:	ldr	r0, [sp, #4]
   11078:	bl	10800 <strncmp@plt>
   1107c:	cmp	r0, #0
   11080:	beq	1119c <error@@Base+0x3a4>
   11084:	ldr	r3, [sp]
   11088:	add	sl, sl, #1
   1108c:	cmp	sl, r3
   11090:	addlt	fp, r9, fp
   11094:	movge	ip, #0
   11098:	ldrlt	ip, [fp, #4]
   1109c:	cmp	r6, #0
   110a0:	beq	110e4 <error@@Base+0x2ec>
   110a4:	ldrb	r2, [r6]
   110a8:	cmp	r2, #0
   110ac:	beq	110e4 <error@@Base+0x2ec>
   110b0:	cmp	r2, r8
   110b4:	beq	110f4 <error@@Base+0x2fc>
   110b8:	mov	r2, #0
   110bc:	b	110c8 <error@@Base+0x2d0>
   110c0:	cmp	r8, r0
   110c4:	beq	110f8 <error@@Base+0x300>
   110c8:	add	r2, r2, #1
   110cc:	sxth	r2, r2
   110d0:	add	r1, r2, r2, lsl #1
   110d4:	ldrb	r0, [r6, r1, lsl #2]
   110d8:	add	r1, r6, r1, lsl #2
   110dc:	cmp	r0, #0
   110e0:	bne	110c0 <error@@Base+0x2c8>
   110e4:	ldr	r0, [pc, #216]	; 111c4 <error@@Base+0x3cc>
   110e8:	mov	r1, r5
   110ec:	add	r0, pc, r0
   110f0:	bl	10ea8 <error@@Base+0xb0>
   110f4:	mov	r1, r6
   110f8:	ldr	r2, [r1, #4]
   110fc:	cmp	r2, #0
   11100:	beq	11164 <error@@Base+0x36c>
   11104:	ldrb	r0, [r5, #2]
   11108:	cmp	r0, #0
   1110c:	cmpeq	ip, #0
   11110:	beq	11164 <error@@Base+0x36c>
   11114:	ldr	r1, [r2]
   11118:	cmp	r1, #0
   1111c:	bne	111a4 <error@@Base+0x3ac>
   11120:	cmp	r0, #0
   11124:	addne	ip, r5, #2
   11128:	str	ip, [r2]
   1112c:	ldrb	r2, [r5, #2]
   11130:	cmp	r2, #0
   11134:	addeq	r4, r4, #1
   11138:	sxtheq	r4, r4
   1113c:	b	1102c <error@@Base+0x234>
   11140:	ldr	r3, [pc, #128]	; 111c8 <error@@Base+0x3d0>
   11144:	ldr	r3, [r5, r3]
   11148:	ldrb	r7, [r3]
   1114c:	cmp	r7, #0
   11150:	bne	1119c <error@@Base+0x3a4>
   11154:	ldr	r3, [sp, #8]
   11158:	str	r7, [r3]
   1115c:	add	sp, sp, #20
   11160:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11164:	ldr	r3, [r1, #8]
   11168:	cmp	r3, #0
   1116c:	beq	110e4 <error@@Base+0x2ec>
   11170:	ldrb	r2, [r5, #2]
   11174:	cmp	r2, #0
   11178:	bne	110e4 <error@@Base+0x2ec>
   1117c:	ldrb	r2, [r3]
   11180:	cmp	r2, #0
   11184:	bne	111a4 <error@@Base+0x3ac>
   11188:	mov	r2, #1
   1118c:	strb	r2, [r3]
   11190:	ldr	r3, [sp, #8]
   11194:	ldr	r3, [r3]
   11198:	b	1102c <error@@Base+0x234>
   1119c:	ldr	r0, [sp, #12]
   111a0:	bl	10d90 <abort@plt+0x584>
   111a4:	ldr	r0, [pc, #32]	; 111cc <error@@Base+0x3d4>
   111a8:	mov	r1, r5
   111ac:	add	r0, pc, r0
   111b0:	bl	10ea8 <error@@Base+0xb0>
   111b4:	andeq	r2, r1, r4, lsr r0
   111b8:	andeq	r0, r0, r8, ror r0
   111bc:			; <UNDEFINED> instruction: 0xfffffe98
   111c0:	andeq	r1, r0, r4, lsr #6
   111c4:	andeq	r1, r0, ip, asr #4
   111c8:	andeq	r0, r0, r8, rrx
   111cc:	muleq	r0, ip, r1
   111d0:	ldr	ip, [pc, #60]	; 11214 <error@@Base+0x41c>
   111d4:	push	{lr}		; (str lr, [sp, #-4]!)
   111d8:	add	ip, pc, ip
   111dc:	ldr	r2, [pc, #52]	; 11218 <error@@Base+0x420>
   111e0:	ldr	lr, [pc, #52]	; 1121c <error@@Base+0x424>
   111e4:	sub	sp, sp, #12
   111e8:	mov	r3, r0
   111ec:	ldr	lr, [ip, lr]
   111f0:	ldr	r0, [ip, r2]
   111f4:	str	r1, [sp]
   111f8:	ldr	r1, [pc, #32]	; 11220 <error@@Base+0x428>
   111fc:	ldr	r2, [lr]
   11200:	add	r1, pc, r1
   11204:	ldr	r0, [r0]
   11208:	bl	107c4 <fprintf@plt>
   1120c:	add	sp, sp, #12
   11210:	pop	{pc}		; (ldr pc, [sp], #4)
   11214:	andeq	r1, r1, r0, lsr #28
   11218:	andeq	r0, r0, r0, ror r0
   1121c:	andeq	r0, r0, r8, ror r0
   11220:	strdeq	r1, [r0], -r4
   11224:	andeq	r0, r0, r0
   11228:	push	{r4, r5, r6, lr}
   1122c:	mov	r2, r0
   11230:	ldr	r4, [pc, #60]	; 11274 <error@@Base+0x47c>
   11234:	mov	r5, r1
   11238:	add	r4, pc, r4
   1123c:	mov	r1, #99	; 0x63
   11240:	mov	r0, r4
   11244:	bl	10740 <fgets@plt>
   11248:	cmp	r0, #0
   1124c:	popeq	{r4, r5, r6, pc}
   11250:	ldr	r1, [pc, #32]	; 11278 <error@@Base+0x480>
   11254:	mov	r2, r5
   11258:	mov	r0, r4
   1125c:	add	r1, pc, r1
   11260:	bl	107d0 <__isoc99_sscanf@plt>
   11264:	sub	r0, r0, #1
   11268:	clz	r0, r0
   1126c:	lsr	r0, r0, #5
   11270:	pop	{r4, r5, r6, pc}
   11274:	andeq	r1, r1, ip, ror #28
   11278:	andeq	r1, r0, r4, lsl #2
   1127c:	push	{r4, r5, r6, lr}
   11280:	mov	r6, r2
   11284:	ldr	r4, [pc, #68]	; 112d0 <error@@Base+0x4d8>
   11288:	mov	r2, r0
   1128c:	add	r4, pc, r4
   11290:	mov	r5, r1
   11294:	mov	r0, r4
   11298:	mov	r1, #99	; 0x63
   1129c:	bl	10740 <fgets@plt>
   112a0:	cmp	r0, #0
   112a4:	popeq	{r4, r5, r6, pc}
   112a8:	ldr	r1, [pc, #36]	; 112d4 <error@@Base+0x4dc>
   112ac:	mov	r3, r6
   112b0:	mov	r2, r5
   112b4:	mov	r0, r4
   112b8:	add	r1, pc, r1
   112bc:	bl	107d0 <__isoc99_sscanf@plt>
   112c0:	sub	r0, r0, #2
   112c4:	clz	r0, r0
   112c8:	lsr	r0, r0, #5
   112cc:	pop	{r4, r5, r6, pc}
   112d0:	andeq	r1, r1, r8, lsl lr
   112d4:	andeq	r1, r0, r4, lsr #1
   112d8:	ldr	r1, [r1, #8]
   112dc:	ldr	r0, [r0, #8]
   112e0:	b	10c08 <abort@plt+0x3fc>
   112e4:	ldr	r2, [r1]
   112e8:	mov	r3, r0
   112ec:	cmp	r2, #0
   112f0:	beq	11328 <error@@Base+0x530>
   112f4:	ldr	r3, [r1, #4]
   112f8:	vmov	s15, r2
   112fc:	sub	r3, r2, r3
   11300:	vldr	d5, [pc, #56]	; 11340 <error@@Base+0x548>
   11304:	vmov	s14, r3
   11308:	vcvt.f64.s32	d6, s15
   1130c:	ldr	r1, [pc, #52]	; 11348 <error@@Base+0x550>
   11310:	vcvt.f64.s32	d7, s14
   11314:	add	r1, pc, r1
   11318:	vmul.f64	d7, d7, d5
   1131c:	vdiv.f64	d5, d7, d6
   11320:	vmov	r2, r3, d5
   11324:	b	107c4 <fprintf@plt>
   11328:	ldr	r0, [pc, #28]	; 1134c <error@@Base+0x554>
   1132c:	mov	r2, #8
   11330:	mov	r1, #1
   11334:	add	r0, pc, r0
   11338:	b	10770 <fwrite@plt>
   1133c:	nop			; (mov r0, r0)
   11340:	andeq	r0, r0, r0
   11344:	subsmi	r0, r9, r0
   11348:	andeq	r1, r0, ip, asr r0
   1134c:	andeq	r1, r0, r0, lsr r0
   11350:	push	{r4, r5, r6, lr}
   11354:	subs	r4, r1, #0
   11358:	mov	r5, r0
   1135c:	beq	11398 <error@@Base+0x5a0>
   11360:	ldr	r1, [pc, #76]	; 113b4 <error@@Base+0x5bc>
   11364:	ldm	r4, {r2, r3}
   11368:	add	r1, pc, r1
   1136c:	bl	107c4 <fprintf@plt>
   11370:	mov	r1, r4
   11374:	mov	r0, r5
   11378:	bl	112e4 <error@@Base+0x4ec>
   1137c:	ldr	r0, [pc, #52]	; 113b8 <error@@Base+0x5c0>
   11380:	mov	r3, r5
   11384:	mov	r2, #3
   11388:	mov	r1, #1
   1138c:	add	r0, pc, r0
   11390:	pop	{r4, r5, r6, lr}
   11394:	b	10770 <fwrite@plt>
   11398:	mov	r3, r0
   1139c:	ldr	r0, [pc, #24]	; 113bc <error@@Base+0x5c4>
   113a0:	mov	r2, #26
   113a4:	mov	r1, #1
   113a8:	add	r0, pc, r0
   113ac:	bl	10770 <fwrite@plt>
   113b0:	b	1137c <error@@Base+0x584>
   113b4:	andeq	r1, r0, r0, lsl r0
   113b8:	andeq	r1, r0, r4, lsl r0
   113bc:	ldrdeq	r0, [r0], -ip
   113c0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   113c4:	mov	r5, r1
   113c8:	ldr	r1, [pc, #284]	; 114ec <error@@Base+0x6f4>
   113cc:	ldrb	r9, [sp, #32]
   113d0:	mov	r6, r0
   113d4:	add	r1, pc, r1
   113d8:	mov	r7, r2
   113dc:	mov	r2, r3
   113e0:	ldrb	sl, [sp, #36]	; 0x24
   113e4:	bl	107c4 <fprintf@plt>
   113e8:	mov	r0, r6
   113ec:	mov	r1, #0
   113f0:	bl	11350 <error@@Base+0x558>
   113f4:	cmp	r9, #0
   113f8:	beq	114c8 <error@@Base+0x6d0>
   113fc:	ldr	r2, [pc, #236]	; 114f0 <error@@Base+0x6f8>
   11400:	ldr	r1, [pc, #236]	; 114f4 <error@@Base+0x6fc>
   11404:	add	r2, pc, r2
   11408:	add	r1, pc, r1
   1140c:	mov	r0, r6
   11410:	bl	107c4 <fprintf@plt>
   11414:	cmp	r7, #0
   11418:	ble	11468 <error@@Base+0x670>
   1141c:	ldr	r8, [pc, #212]	; 114f8 <error@@Base+0x700>
   11420:	mov	r4, #1
   11424:	add	r8, pc, r8
   11428:	ldr	r3, [r5, r4, lsl #3]
   1142c:	mov	r0, r6
   11430:	cmp	r3, #0
   11434:	add	r1, r5, r4, lsl #3
   11438:	ble	11450 <error@@Base+0x658>
   1143c:	bl	11350 <error@@Base+0x558>
   11440:	mov	r2, r4
   11444:	mov	r1, r8
   11448:	mov	r0, r6
   1144c:	bl	107c4 <fprintf@plt>
   11450:	add	r4, r4, #1
   11454:	sxth	r4, r4
   11458:	cmp	r7, r4
   1145c:	bge	11428 <error@@Base+0x630>
   11460:	cmp	r9, #0
   11464:	beq	11498 <error@@Base+0x6a0>
   11468:	add	r1, r7, #1
   1146c:	ldr	r3, [r5, r1, lsl #3]
   11470:	add	r1, r5, r1, lsl #3
   11474:	cmp	r3, #0
   11478:	ble	11498 <error@@Base+0x6a0>
   1147c:	mov	r0, r6
   11480:	bl	11350 <error@@Base+0x558>
   11484:	ldr	r1, [pc, #112]	; 114fc <error@@Base+0x704>
   11488:	mov	r2, r7
   1148c:	add	r1, pc, r1
   11490:	mov	r0, r6
   11494:	bl	107c4 <fprintf@plt>
   11498:	cmp	sl, #0
   1149c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   114a0:	mov	r1, r5
   114a4:	mov	r0, r6
   114a8:	bl	11350 <error@@Base+0x558>
   114ac:	ldr	r0, [pc, #76]	; 11500 <error@@Base+0x708>
   114b0:	mov	r3, r6
   114b4:	mov	r2, #7
   114b8:	mov	r1, #1
   114bc:	add	r0, pc, r0
   114c0:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   114c4:	b	10770 <fwrite@plt>
   114c8:	ldr	r2, [pc, #52]	; 11504 <error@@Base+0x70c>
   114cc:	ldr	r1, [pc, #52]	; 11508 <error@@Base+0x710>
   114d0:	add	r2, pc, r2
   114d4:	add	r1, pc, r1
   114d8:	mov	r0, r6
   114dc:	bl	107c4 <fprintf@plt>
   114e0:	cmp	r7, #0
   114e4:	bgt	1141c <error@@Base+0x624>
   114e8:	b	11498 <error@@Base+0x6a0>
   114ec:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   114f0:	andeq	r0, r0, r8, asr #31
   114f4:			; <UNDEFINED> instruction: 0x00000ebc
   114f8:	andeq	r0, r0, r8, lsl #31
   114fc:	andeq	r0, r0, ip, lsr #30
   11500:	andeq	r0, r0, r8, lsl #30
   11504:	andeq	r0, r0, r4, lsl #30
   11508:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1150c:	push	{r4, r5, r6, r7, r8, lr}
   11510:	mov	r6, r0
   11514:	mov	r0, r1
   11518:	add	r5, r1, #4096	; 0x1000
   1151c:	mov	r4, r2
   11520:	bl	11ef8 <error@@Base+0x1100>
   11524:	ldr	r2, [pc, #144]	; 115bc <error@@Base+0x7c4>
   11528:	ldr	r1, [r5, #3952]	; 0xf70
   1152c:	ldr	r0, [r5, #3956]	; 0xf74
   11530:	add	r2, pc, r2
   11534:	bl	11d04 <error@@Base+0xf0c>
   11538:	ldr	r1, [pc, #128]	; 115c0 <error@@Base+0x7c8>
   1153c:	mov	r2, r4
   11540:	add	r1, pc, r1
   11544:	mov	r0, r6
   11548:	bl	107c4 <fprintf@plt>
   1154c:	mov	r0, r6
   11550:	mov	r1, #0
   11554:	bl	11350 <error@@Base+0x558>
   11558:	mov	r1, r6
   1155c:	mov	r0, #10
   11560:	bl	107e8 <fputc@plt>
   11564:	ldr	r3, [r5, #3956]	; 0xf74
   11568:	cmp	r3, #0
   1156c:	pople	{r4, r5, r6, r7, r8, pc}
   11570:	ldr	r7, [pc, #76]	; 115c4 <error@@Base+0x7cc>
   11574:	mov	r4, #0
   11578:	add	r7, pc, r7
   1157c:	ldr	r3, [r5, #3952]	; 0xf70
   11580:	mov	r0, r6
   11584:	ldr	r1, [r3, r4, lsl #2]
   11588:	add	r1, r1, #12
   1158c:	bl	11350 <error@@Base+0x558>
   11590:	ldr	r3, [r5, #3952]	; 0xf70
   11594:	mov	r1, r7
   11598:	mov	r0, r6
   1159c:	ldr	r3, [r3, r4, lsl #2]
   115a0:	add	r4, r4, #1
   115a4:	ldr	r2, [r3, #8]
   115a8:	bl	107c4 <fprintf@plt>
   115ac:	ldr	r3, [r5, #3956]	; 0xf74
   115b0:	cmp	r3, r4
   115b4:	bgt	1157c <error@@Base+0x784>
   115b8:	pop	{r4, r5, r6, r7, r8, pc}
   115bc:			; <UNDEFINED> instruction: 0xfffffda0
   115c0:	andeq	r0, r0, r4, ror #28
   115c4:	andeq	r0, r0, ip, asr #26
   115c8:	ldr	ip, [r0]
   115cc:	ldr	r3, [r0, #4]
   115d0:	add	r1, ip, r1
   115d4:	add	r2, r3, r2
   115d8:	stm	r0, {r1, r2}
   115dc:	bx	lr
   115e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   115e4:	mov	r2, r0
   115e8:	ldr	r4, [pc, #236]	; 116dc <error@@Base+0x8e4>
   115ec:	sub	sp, sp, #20
   115f0:	add	r4, pc, r4
   115f4:	mov	r6, r0
   115f8:	mov	sl, r1
   115fc:	mov	r0, r4
   11600:	mov	r1, #99	; 0x63
   11604:	bl	10740 <fgets@plt>
   11608:	cmp	r0, #0
   1160c:	beq	116c8 <error@@Base+0x8d0>
   11610:	mov	r0, r4
   11614:	mov	r2, r6
   11618:	mov	r1, #99	; 0x63
   1161c:	bl	10740 <fgets@plt>
   11620:	cmp	r0, #0
   11624:	beq	116c8 <error@@Base+0x8d0>
   11628:	ldr	r4, [pc, #176]	; 116e0 <error@@Base+0x8e8>
   1162c:	ldr	fp, [pc, #176]	; 116e4 <error@@Base+0x8ec>
   11630:	mov	r3, #0
   11634:	add	r4, pc, r4
   11638:	str	r3, [sp, #4]
   1163c:	add	r4, r4, #29
   11640:	mov	r5, r3
   11644:	add	r9, sp, #12
   11648:	add	r8, sp, #8
   1164c:	mov	r7, #10
   11650:	add	fp, pc, fp
   11654:	b	1166c <error@@Base+0x874>
   11658:	ldr	r1, [sp, #8]
   1165c:	lsl	r3, r3, #3
   11660:	add	r0, sl, r3
   11664:	ldr	r2, [sp, #12]
   11668:	bl	115c8 <error@@Base+0x7d0>
   1166c:	mov	r2, r9
   11670:	mov	r1, r8
   11674:	mov	r0, r6
   11678:	bl	1127c <error@@Base+0x484>
   1167c:	mov	r2, r7
   11680:	mov	r1, r5
   11684:	cmp	r0, #0
   11688:	mov	r0, r4
   1168c:	beq	116d0 <error@@Base+0x8d8>
   11690:	bl	1071c <strtol@plt>
   11694:	mov	r1, fp
   11698:	subs	r3, r0, #0
   1169c:	mov	r0, r4
   116a0:	bne	11658 <error@@Base+0x860>
   116a4:	bl	10710 <strcmp@plt>
   116a8:	mov	r3, r5
   116ac:	cmp	r0, #0
   116b0:	movne	r3, #88	; 0x58
   116b4:	ldreq	r2, [sp, #8]
   116b8:	ldrne	r1, [sp, #8]
   116bc:	streq	r2, [sp, #4]
   116c0:	moveq	r1, r2
   116c4:	b	11660 <error@@Base+0x868>
   116c8:	mov	r3, #0
   116cc:	str	r3, [sp, #4]
   116d0:	ldr	r0, [sp, #4]
   116d4:	add	sp, sp, #20
   116d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   116dc:			; <UNDEFINED> instruction: 0x00011ab4
   116e0:	andeq	r1, r1, r0, ror sl
   116e4:	andeq	r0, r0, r4, ror sp
   116e8:	push	{r4, r5, r6, r7, r8, lr}
   116ec:	mov	r5, r2
   116f0:	mov	r6, r3
   116f4:	mov	r7, r0
   116f8:	mov	r8, r1
   116fc:	bl	11d6c <error@@Base+0xf74>
   11700:	subs	r4, r0, #0
   11704:	beq	1171c <error@@Base+0x924>
   11708:	mov	r2, r6
   1170c:	mov	r1, r5
   11710:	add	r0, r4, #12
   11714:	pop	{r4, r5, r6, r7, r8, lr}
   11718:	b	115c8 <error@@Base+0x7d0>
   1171c:	mov	r1, #20
   11720:	mov	r0, #1
   11724:	bl	10e50 <error@@Base+0x58>
   11728:	mov	r4, r0
   1172c:	mov	r0, r8
   11730:	bl	1074c <strdup@plt>
   11734:	mov	r1, r4
   11738:	str	r0, [r4, #8]
   1173c:	mov	r0, r7
   11740:	bl	11df0 <error@@Base+0xff8>
   11744:	b	11708 <error@@Base+0x910>
   11748:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1174c:	mov	r2, r0
   11750:	ldr	r4, [pc, #148]	; 117ec <error@@Base+0x9f4>
   11754:	sub	sp, sp, #8
   11758:	add	r4, pc, r4
   1175c:	mov	r5, r0
   11760:	mov	r8, r1
   11764:	mov	r0, r4
   11768:	mov	r1, #99	; 0x63
   1176c:	bl	10740 <fgets@plt>
   11770:	cmp	r0, #0
   11774:	beq	117e4 <error@@Base+0x9ec>
   11778:	mov	r0, r4
   1177c:	mov	r2, r5
   11780:	mov	r1, #99	; 0x63
   11784:	bl	10740 <fgets@plt>
   11788:	cmp	r0, #0
   1178c:	beq	117e4 <error@@Base+0x9ec>
   11790:	ldr	r4, [pc, #88]	; 117f0 <error@@Base+0x9f8>
   11794:	add	r7, sp, #4
   11798:	add	r4, pc, r4
   1179c:	add	sl, r4, #29
   117a0:	mov	r6, sp
   117a4:	mov	r9, #0
   117a8:	b	117c8 <error@@Base+0x9d0>
   117ac:	bl	107b8 <strlen@plt>
   117b0:	ldm	sp, {r2, r3}
   117b4:	mov	r1, sl
   117b8:	add	ip, r4, r0
   117bc:	mov	r0, r8
   117c0:	strb	r9, [ip, #-1]
   117c4:	bl	116e8 <error@@Base+0x8f0>
   117c8:	mov	r2, r7
   117cc:	mov	r1, r6
   117d0:	mov	r0, r5
   117d4:	bl	1127c <error@@Base+0x484>
   117d8:	cmp	r0, #0
   117dc:	mov	r0, r4
   117e0:	bne	117ac <error@@Base+0x9b4>
   117e4:	add	sp, sp, #8
   117e8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   117ec:	andeq	r1, r1, ip, asr #18
   117f0:	andeq	r1, r1, ip, lsl #18
   117f4:	push	{r4, r5, r6, r7, lr}
   117f8:	mov	r7, r1
   117fc:	ldr	r1, [pc, #392]	; 1198c <error@@Base+0xb94>
   11800:	sub	sp, sp, #12
   11804:	add	r1, pc, r1
   11808:	mov	r6, r0
   1180c:	mov	r0, r7
   11810:	bl	10f08 <error@@Base+0x110>
   11814:	ldr	r5, [pc, #372]	; 11990 <error@@Base+0xb98>
   11818:	mov	r1, #99	; 0x63
   1181c:	add	r5, pc, r5
   11820:	mov	r2, r0
   11824:	mov	r4, r0
   11828:	mov	r0, r5
   1182c:	bl	10740 <fgets@plt>
   11830:	cmp	r0, #0
   11834:	beq	11968 <error@@Base+0xb70>
   11838:	ldr	r1, [pc, #340]	; 11994 <error@@Base+0xb9c>
   1183c:	mov	r2, #45	; 0x2d
   11840:	add	r1, pc, r1
   11844:	mov	r0, r5
   11848:	bl	10800 <strncmp@plt>
   1184c:	cmp	r0, #0
   11850:	bne	11968 <error@@Base+0xb70>
   11854:	mov	r2, r4
   11858:	mov	r1, #99	; 0x63
   1185c:	mov	r0, r5
   11860:	bl	10740 <fgets@plt>
   11864:	cmp	r0, #0
   11868:	beq	11968 <error@@Base+0xb70>
   1186c:	ldr	r1, [pc, #292]	; 11998 <error@@Base+0xba0>
   11870:	mov	r0, r5
   11874:	add	r1, pc, r1
   11878:	bl	10710 <strcmp@plt>
   1187c:	cmp	r0, #0
   11880:	bne	11968 <error@@Base+0xb70>
   11884:	mov	r1, sp
   11888:	mov	r0, r4
   1188c:	bl	11228 <error@@Base+0x430>
   11890:	cmp	r0, #0
   11894:	beq	11968 <error@@Base+0xb70>
   11898:	add	r1, sp, #4
   1189c:	mov	r0, r4
   118a0:	bl	11228 <error@@Base+0x430>
   118a4:	cmp	r0, #0
   118a8:	beq	11968 <error@@Base+0xb70>
   118ac:	mov	r2, r4
   118b0:	mov	r1, #99	; 0x63
   118b4:	mov	r0, r5
   118b8:	bl	10740 <fgets@plt>
   118bc:	cmp	r0, #0
   118c0:	beq	11968 <error@@Base+0xb70>
   118c4:	mov	r0, r5
   118c8:	mov	r2, r4
   118cc:	mov	r1, #99	; 0x63
   118d0:	bl	10740 <fgets@plt>
   118d4:	cmp	r0, #0
   118d8:	beq	11968 <error@@Base+0xb70>
   118dc:	ldm	sp, {r1, r2}
   118e0:	mov	r0, r6
   118e4:	bl	115c8 <error@@Base+0x7d0>
   118e8:	add	r1, r6, #8
   118ec:	mov	r0, r4
   118f0:	bl	115e0 <error@@Base+0x7e8>
   118f4:	add	r1, r6, #416	; 0x1a0
   118f8:	mov	r7, r0
   118fc:	mov	r0, r4
   11900:	bl	115e0 <error@@Base+0x7e8>
   11904:	add	r1, r6, #824	; 0x338
   11908:	mov	r5, r0
   1190c:	mov	r0, r4
   11910:	bl	115e0 <error@@Base+0x7e8>
   11914:	ldr	r3, [sp]
   11918:	cmp	r3, #0
   1191c:	ble	11958 <error@@Base+0xb60>
   11920:	add	r1, r6, #920	; 0x398
   11924:	mov	r0, r4
   11928:	bl	115e0 <error@@Base+0x7e8>
   1192c:	cmp	r7, #0
   11930:	ble	11940 <error@@Base+0xb48>
   11934:	add	r1, r6, #992	; 0x3e0
   11938:	mov	r0, r4
   1193c:	bl	11748 <error@@Base+0x950>
   11940:	cmp	r5, #0
   11944:	ble	11958 <error@@Base+0xb60>
   11948:	add	r1, r6, #9024	; 0x2340
   1194c:	add	r1, r1, #24
   11950:	mov	r0, r4
   11954:	bl	11748 <error@@Base+0x950>
   11958:	mov	r0, r4
   1195c:	bl	10c9c <abort@plt+0x490>
   11960:	add	sp, sp, #12
   11964:	pop	{r4, r5, r6, r7, pc}
   11968:	cmp	r7, #0
   1196c:	beq	11980 <error@@Base+0xb88>
   11970:	ldr	r0, [pc, #36]	; 1199c <error@@Base+0xba4>
   11974:	mov	r1, r7
   11978:	add	r0, pc, r0
   1197c:	bl	10ea8 <error@@Base+0xb0>
   11980:	ldr	r7, [pc, #24]	; 119a0 <error@@Base+0xba8>
   11984:	add	r7, pc, r7
   11988:	b	11970 <error@@Base+0xb78>
   1198c:	andeq	r0, r0, r0, ror #23
   11990:	andeq	r1, r1, r8, lsl #17
   11994:	andeq	r0, r0, r8, lsr #23
   11998:	andeq	r0, r0, r4, lsr #23
   1199c:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   119a0:	andeq	r0, r0, r8, asr sl
   119a4:	mov	r3, r1
   119a8:	ldr	r1, [pc, #360]	; 11b18 <error@@Base+0xd20>
   119ac:	push	{r4, r5, r6, r7, r8, lr}
   119b0:	add	r1, pc, r1
   119b4:	sub	sp, sp, #8
   119b8:	mov	r4, r0
   119bc:	mov	r0, r3
   119c0:	bl	10f08 <error@@Base+0x110>
   119c4:	ldr	r3, [pc, #336]	; 11b1c <error@@Base+0xd24>
   119c8:	ldr	r2, [pc, #336]	; 11b20 <error@@Base+0xd28>
   119cc:	ldr	r1, [pc, #336]	; 11b24 <error@@Base+0xd2c>
   119d0:	add	r3, pc, r3
   119d4:	add	r2, pc, r2
   119d8:	add	r1, pc, r1
   119dc:	ldr	r8, [pc, #324]	; 11b28 <error@@Base+0xd30>
   119e0:	mov	r7, #0
   119e4:	add	r8, pc, r8
   119e8:	mov	r5, r0
   119ec:	bl	107c4 <fprintf@plt>
   119f0:	ldr	r1, [pc, #308]	; 11b2c <error@@Base+0xd34>
   119f4:	ldr	r2, [r4]
   119f8:	add	r1, pc, r1
   119fc:	mov	r0, r5
   11a00:	bl	107c4 <fprintf@plt>
   11a04:	ldr	r1, [pc, #292]	; 11b30 <error@@Base+0xd38>
   11a08:	ldr	r2, [r4, #4]
   11a0c:	add	r1, pc, r1
   11a10:	mov	r0, r5
   11a14:	bl	107c4 <fprintf@plt>
   11a18:	mov	r1, r4
   11a1c:	mov	r0, r5
   11a20:	bl	112e4 <error@@Base+0x4ec>
   11a24:	ldr	r0, [pc, #264]	; 11b34 <error@@Base+0xd3c>
   11a28:	mov	r1, #1
   11a2c:	mov	r6, r1
   11a30:	mov	r3, r5
   11a34:	mov	r2, #12
   11a38:	add	r0, pc, r0
   11a3c:	bl	10770 <fwrite@plt>
   11a40:	add	r1, r4, #8
   11a44:	mov	r0, r5
   11a48:	mov	r3, r8
   11a4c:	mov	r2, #50	; 0x32
   11a50:	str	r6, [sp, #4]
   11a54:	str	r7, [sp]
   11a58:	bl	113c0 <error@@Base+0x5c8>
   11a5c:	ldr	r3, [pc, #212]	; 11b38 <error@@Base+0xd40>
   11a60:	add	r1, r4, #416	; 0x1a0
   11a64:	mov	r0, r5
   11a68:	add	r3, pc, r3
   11a6c:	mov	r2, #50	; 0x32
   11a70:	str	r6, [sp, #4]
   11a74:	str	r7, [sp]
   11a78:	bl	113c0 <error@@Base+0x5c8>
   11a7c:	ldr	r3, [pc, #184]	; 11b3c <error@@Base+0xd44>
   11a80:	str	r6, [sp, #4]
   11a84:	add	r3, pc, r3
   11a88:	str	r6, [sp]
   11a8c:	add	r1, r4, #824	; 0x338
   11a90:	mov	r0, r5
   11a94:	mov	r2, #10
   11a98:	bl	113c0 <error@@Base+0x5c8>
   11a9c:	ldr	r3, [r4]
   11aa0:	cmp	r3, r7
   11aa4:	ble	11b08 <error@@Base+0xd10>
   11aa8:	ldr	r3, [pc, #144]	; 11b40 <error@@Base+0xd48>
   11aac:	str	r7, [sp, #4]
   11ab0:	add	r3, pc, r3
   11ab4:	str	r7, [sp]
   11ab8:	mov	r2, #8
   11abc:	add	r1, r4, #920	; 0x398
   11ac0:	mov	r0, r5
   11ac4:	bl	113c0 <error@@Base+0x5c8>
   11ac8:	ldr	r3, [r4, #8]
   11acc:	cmp	r3, r7
   11ad0:	ble	11ae4 <error@@Base+0xcec>
   11ad4:	mov	r2, r8
   11ad8:	add	r1, r4, #992	; 0x3e0
   11adc:	mov	r0, r5
   11ae0:	bl	1150c <error@@Base+0x714>
   11ae4:	ldr	r3, [r4, #416]	; 0x1a0
   11ae8:	cmp	r3, #0
   11aec:	ble	11b08 <error@@Base+0xd10>
   11af0:	ldr	r2, [pc, #76]	; 11b44 <error@@Base+0xd4c>
   11af4:	add	r1, r4, #9024	; 0x2340
   11af8:	add	r1, r1, #24
   11afc:	add	r2, pc, r2
   11b00:	mov	r0, r5
   11b04:	bl	1150c <error@@Base+0x714>
   11b08:	mov	r0, r5
   11b0c:	add	sp, sp, #8
   11b10:	pop	{r4, r5, r6, r7, r8, lr}
   11b14:	b	10c9c <abort@plt+0x490>
   11b18:	andeq	r0, r0, r0, ror #17
   11b1c:	andeq	r0, r0, r8, asr #20
   11b20:	andeq	r0, r0, r4, lsl sl
   11b24:	andeq	r0, r0, r4, lsl #21
   11b28:			; <UNDEFINED> instruction: 0x00000ab8
   11b2c:	andeq	r0, r0, ip, ror #20
   11b30:	andeq	r0, r0, r8, ror #20
   11b34:	andeq	r0, r0, r4, asr sl
   11b38:	andeq	r0, r0, r0, asr #20
   11b3c:	andeq	r0, r0, r4, lsr sl
   11b40:	andeq	r0, r0, r0, lsr #20
   11b44:	andeq	r0, r0, ip, lsr #19
   11b48:	ldr	r2, [pc, #420]	; 11cf4 <error@@Base+0xefc>
   11b4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b50:	sub	sp, sp, #28
   11b54:	add	r2, pc, r2
   11b58:	ldr	r9, [pc, #408]	; 11cf8 <error@@Base+0xf00>
   11b5c:	ldr	r8, [pc, #408]	; 11cfc <error@@Base+0xf04>
   11b60:	str	r2, [sp, #16]
   11b64:	ldr	r2, [pc, #404]	; 11d00 <error@@Base+0xf08>
   11b68:	add	r9, pc, r9
   11b6c:	add	r8, pc, r8
   11b70:	add	r2, pc, r2
   11b74:	lsl	r3, r1, #2
   11b78:	str	r1, [sp, #12]
   11b7c:	str	r2, [sp, #4]
   11b80:	str	r0, [sp, #8]
   11b84:	str	r3, [sp, #20]
   11b88:	ldr	r3, [sp, #16]
   11b8c:	ldr	r2, [sp, #12]
   11b90:	ldr	r1, [r3]
   11b94:	ldr	r3, [sp, #8]
   11b98:	cmp	r3, r2
   11b9c:	ldr	r7, [r1, r3, lsl #2]
   11ba0:	bge	11cd8 <error@@Base+0xee0>
   11ba4:	ldr	r4, [sp, #8]
   11ba8:	ldr	r5, [sp, #12]
   11bac:	lsl	r6, r5, #2
   11bb0:	b	11bb8 <error@@Base+0xdc0>
   11bb4:	ldr	r1, [r9]
   11bb8:	ldr	r1, [r1, r6]
   11bbc:	ldr	r3, [r9, #4]
   11bc0:	mov	r0, r7
   11bc4:	blx	r3
   11bc8:	cmp	r0, #0
   11bcc:	bge	11c24 <error@@Base+0xe2c>
   11bd0:	sub	r5, r5, #1
   11bd4:	cmp	r5, r4
   11bd8:	sub	r6, r6, #4
   11bdc:	bgt	11bb4 <error@@Base+0xdbc>
   11be0:	bne	11c20 <error@@Base+0xe28>
   11be4:	ldr	r1, [r9]
   11be8:	mov	fp, r5
   11bec:	add	r0, r1, fp, lsl #2
   11bf0:	ldr	r3, [sp, #8]
   11bf4:	sub	r1, fp, #1
   11bf8:	cmp	r3, r1
   11bfc:	str	r7, [r0]
   11c00:	blt	11cbc <error@@Base+0xec4>
   11c04:	ldr	r2, [sp, #12]
   11c08:	add	r3, r5, #1
   11c0c:	cmp	r3, r2
   11c10:	str	r3, [sp, #8]
   11c14:	blt	11b88 <error@@Base+0xd90>
   11c18:	add	sp, sp, #28
   11c1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11c20:	lsl	r6, r5, #2
   11c24:	ldr	r3, [sp, #4]
   11c28:	add	sl, r4, #1
   11c2c:	cmp	sl, r5
   11c30:	ldr	r1, [r3]
   11c34:	add	r0, r1, r6
   11c38:	ldr	r2, [r1, r6]
   11c3c:	str	r2, [r1, r4, lsl #2]
   11c40:	lsl	r4, r4, #2
   11c44:	bge	11cc8 <error@@Base+0xed0>
   11c48:	add	fp, r4, #4
   11c4c:	b	11c64 <error@@Base+0xe6c>
   11c50:	add	sl, sl, #1
   11c54:	cmp	sl, r5
   11c58:	add	fp, fp, #4
   11c5c:	beq	11ca8 <error@@Base+0xeb0>
   11c60:	ldr	r1, [r8]
   11c64:	ldr	r1, [r1, fp]
   11c68:	ldr	r3, [r8, #4]
   11c6c:	mov	r0, r7
   11c70:	blx	r3
   11c74:	cmp	r0, #0
   11c78:	bgt	11c50 <error@@Base+0xe58>
   11c7c:	ldr	r1, [r8]
   11c80:	mov	r4, sl
   11c84:	add	r0, r1, r6
   11c88:	sub	r5, r5, #1
   11c8c:	ldr	r2, [r1, fp]
   11c90:	cmp	r5, sl
   11c94:	str	r2, [r0]
   11c98:	bgt	11bac <error@@Base+0xdb4>
   11c9c:	mov	fp, r5
   11ca0:	mov	r5, r4
   11ca4:	b	11bec <error@@Base+0xdf4>
   11ca8:	ldr	r0, [r8]
   11cac:	mov	fp, sl
   11cb0:	add	r0, r0, r6
   11cb4:	mov	r5, fp
   11cb8:	b	11bf0 <error@@Base+0xdf8>
   11cbc:	mov	r0, r3
   11cc0:	bl	11b48 <error@@Base+0xd50>
   11cc4:	b	11c04 <error@@Base+0xe0c>
   11cc8:	beq	11cec <error@@Base+0xef4>
   11ccc:	lsl	fp, sl, #2
   11cd0:	mov	r4, sl
   11cd4:	b	11c88 <error@@Base+0xe90>
   11cd8:	ldr	r3, [sp, #20]
   11cdc:	mov	fp, r2
   11ce0:	add	r0, r1, r3
   11ce4:	ldr	r5, [sp, #8]
   11ce8:	b	11bf0 <error@@Base+0xdf8>
   11cec:	mov	fp, sl
   11cf0:	b	11cb4 <error@@Base+0xebc>
   11cf4:			; <UNDEFINED> instruction: 0x000115b4
   11cf8:	andeq	r1, r1, r0, lsr #11
   11cfc:	muleq	r1, ip, r5
   11d00:	muleq	r1, r8, r5
   11d04:	cmp	r0, #1
   11d08:	mov	ip, r1
   11d0c:	bxle	lr
   11d10:	ldr	r3, [pc, #20]	; 11d2c <error@@Base+0xf34>
   11d14:	sub	r1, r0, #1
   11d18:	add	r3, pc, r3
   11d1c:	mov	r0, #0
   11d20:	str	ip, [r3]
   11d24:	str	r2, [r3, #4]
   11d28:	b	11b48 <error@@Base+0xd50>
   11d2c:	strdeq	r1, [r1], -r0
   11d30:	push	{r4, r5, r6, lr}
   11d34:	add	r5, r0, #8000	; 0x1f40
   11d38:	mov	r6, r0
   11d3c:	add	r5, r5, #48	; 0x30
   11d40:	mov	r4, r0
   11d44:	mov	r0, r4
   11d48:	add	r4, r4, #16
   11d4c:	bl	11fc8 <error@@Base+0x11d0>
   11d50:	cmp	r4, r5
   11d54:	bne	11d44 <error@@Base+0xf4c>
   11d58:	add	r6, r6, #4096	; 0x1000
   11d5c:	mov	r3, #0
   11d60:	str	r3, [r6, #3952]	; 0xf70
   11d64:	str	r3, [r6, #3956]	; 0xf74
   11d68:	pop	{r4, r5, r6, pc}
   11d6c:	push	{r4, r5, r6, lr}
   11d70:	mov	r5, r1
   11d74:	ldrb	r3, [r1]
   11d78:	cmp	r3, #0
   11d7c:	beq	11db4 <error@@Base+0xfbc>
   11d80:	mov	r2, #0
   11d84:	add	r2, r2, r3
   11d88:	ldrb	r3, [r1, #1]!
   11d8c:	cmp	r3, #0
   11d90:	bne	11d84 <error@@Base+0xf8c>
   11d94:	ldr	r1, [pc, #80]	; 11dec <error@@Base+0xff4>
   11d98:	asr	r3, r2, #31
   11d9c:	smull	ip, r1, r1, r2
   11da0:	add	r1, r1, r2
   11da4:	rsb	r3, r3, r1, asr #8
   11da8:	rsb	r1, r3, r3, lsl #6
   11dac:	rsb	r3, r3, r1, lsl #3
   11db0:	sub	r3, r2, r3
   11db4:	ldr	r4, [r0, r3, lsl #4]
   11db8:	cmp	r4, #0
   11dbc:	bne	11dd0 <error@@Base+0xfd8>
   11dc0:	b	11de4 <error@@Base+0xfec>
   11dc4:	ldr	r4, [r4, #4]
   11dc8:	cmp	r4, #0
   11dcc:	beq	11de4 <error@@Base+0xfec>
   11dd0:	ldr	r1, [r4, #8]
   11dd4:	mov	r0, r5
   11dd8:	bl	10710 <strcmp@plt>
   11ddc:	cmp	r0, #0
   11de0:	bne	11dc4 <error@@Base+0xfcc>
   11de4:	mov	r0, r4
   11de8:	pop	{r4, r5, r6, pc}
   11dec:	subhi	r4, sl, #1552	; 0x610
   11df0:	ldr	ip, [r1, #8]
   11df4:	push	{r4, lr}
   11df8:	ldrb	r3, [ip]
   11dfc:	cmp	r3, #0
   11e00:	beq	11e3c <error@@Base+0x1044>
   11e04:	mov	r2, #0
   11e08:	add	r2, r2, r3
   11e0c:	ldrb	r3, [ip, #1]!
   11e10:	cmp	r3, #0
   11e14:	bne	11e08 <error@@Base+0x1010>
   11e18:	ldr	ip, [pc, #80]	; 11e70 <error@@Base+0x1078>
   11e1c:	asr	r3, r2, #31
   11e20:	smull	lr, ip, ip, r2
   11e24:	add	ip, ip, r2
   11e28:	rsb	r3, r3, ip, asr #8
   11e2c:	rsb	ip, r3, r3, lsl #6
   11e30:	rsb	r3, r3, ip, lsl #3
   11e34:	sub	r3, r2, r3
   11e38:	lsl	r3, r3, #4
   11e3c:	add	r4, r0, #4096	; 0x1000
   11e40:	add	r0, r0, r3
   11e44:	bl	11fe0 <error@@Base+0x11e8>
   11e48:	ldr	r0, [r4, #3952]	; 0xf70
   11e4c:	cmp	r0, #0
   11e50:	beq	11e60 <error@@Base+0x1068>
   11e54:	bl	10734 <free@plt>
   11e58:	mov	r3, #0
   11e5c:	str	r3, [r4, #3952]	; 0xf70
   11e60:	ldr	r3, [r4, #3956]	; 0xf74
   11e64:	add	r3, r3, #1
   11e68:	str	r3, [r4, #3956]	; 0xf74
   11e6c:	pop	{r4, pc}
   11e70:	subhi	r4, sl, #1552	; 0x610
   11e74:	ldr	ip, [r1, #8]
   11e78:	push	{r4, lr}
   11e7c:	ldrb	r3, [ip]
   11e80:	cmp	r3, #0
   11e84:	beq	11ec0 <error@@Base+0x10c8>
   11e88:	mov	r2, #0
   11e8c:	add	r2, r2, r3
   11e90:	ldrb	r3, [ip, #1]!
   11e94:	cmp	r3, #0
   11e98:	bne	11e8c <error@@Base+0x1094>
   11e9c:	ldr	ip, [pc, #80]	; 11ef4 <error@@Base+0x10fc>
   11ea0:	asr	r3, r2, #31
   11ea4:	smull	lr, ip, ip, r2
   11ea8:	add	ip, ip, r2
   11eac:	rsb	r3, r3, ip, asr #8
   11eb0:	rsb	ip, r3, r3, lsl #6
   11eb4:	rsb	r3, r3, ip, lsl #3
   11eb8:	sub	r3, r2, r3
   11ebc:	lsl	r3, r3, #4
   11ec0:	add	r4, r0, #4096	; 0x1000
   11ec4:	add	r0, r0, r3
   11ec8:	bl	12110 <error@@Base+0x1318>
   11ecc:	ldr	r0, [r4, #3952]	; 0xf70
   11ed0:	cmp	r0, #0
   11ed4:	beq	11ee4 <error@@Base+0x10ec>
   11ed8:	bl	10734 <free@plt>
   11edc:	mov	r3, #0
   11ee0:	str	r3, [r4, #3952]	; 0xf70
   11ee4:	ldr	r3, [r4, #3956]	; 0xf74
   11ee8:	sub	r3, r3, #1
   11eec:	str	r3, [r4, #3956]	; 0xf74
   11ef0:	pop	{r4, pc}
   11ef4:	subhi	r4, sl, #1552	; 0x610
   11ef8:	push	{r4, r5, r6, lr}
   11efc:	add	r6, r0, #4096	; 0x1000
   11f00:	ldr	r4, [r6, #3952]	; 0xf70
   11f04:	cmp	r4, #0
   11f08:	popne	{r4, r5, r6, pc}
   11f0c:	ldr	r3, [r6, #3956]	; 0xf74
   11f10:	cmp	r3, #0
   11f14:	popeq	{r4, r5, r6, pc}
   11f18:	mov	r5, r0
   11f1c:	mov	r1, #4
   11f20:	mov	r0, r3
   11f24:	bl	10e50 <error@@Base+0x58>
   11f28:	ldr	lr, [pc, #60]	; 11f6c <error@@Base+0x1174>
   11f2c:	mov	r2, r4
   11f30:	mov	ip, r4
   11f34:	str	r0, [r6, #3952]	; 0xf70
   11f38:	ldr	r3, [r5, ip, lsl #4]
   11f3c:	cmp	r3, #0
   11f40:	beq	11f5c <error@@Base+0x1164>
   11f44:	add	r1, r0, r2, lsl #2
   11f48:	str	r3, [r1], #4
   11f4c:	ldr	r3, [r3, #4]
   11f50:	add	r2, r2, #1
   11f54:	cmp	r3, #0
   11f58:	bne	11f48 <error@@Base+0x1150>
   11f5c:	add	ip, ip, #1
   11f60:	cmp	ip, lr
   11f64:	bne	11f38 <error@@Base+0x1140>
   11f68:	pop	{r4, r5, r6, pc}
   11f6c:	strdeq	r0, [r0], -r7
   11f70:	push	{r4, r5, r6, r7, r8, lr}
   11f74:	add	r5, r0, #8000	; 0x1f40
   11f78:	mov	r7, r0
   11f7c:	mov	r6, r1
   11f80:	add	r5, r5, #48	; 0x30
   11f84:	mov	r4, r0
   11f88:	mov	r0, r4
   11f8c:	mov	r1, r6
   11f90:	add	r4, r4, #16
   11f94:	bl	121c0 <error@@Base+0x13c8>
   11f98:	cmp	r4, r5
   11f9c:	bne	11f88 <error@@Base+0x1190>
   11fa0:	add	r7, r7, #4096	; 0x1000
   11fa4:	ldr	r0, [r7, #3952]	; 0xf70
   11fa8:	cmp	r0, #0
   11fac:	beq	11fbc <error@@Base+0x11c4>
   11fb0:	bl	10734 <free@plt>
   11fb4:	mov	r3, #0
   11fb8:	str	r3, [r7, #3952]	; 0xf70
   11fbc:	mov	r3, #0
   11fc0:	str	r3, [r7, #3956]	; 0xf74
   11fc4:	pop	{r4, r5, r6, r7, r8, pc}
   11fc8:	mov	r3, #0
   11fcc:	str	r3, [r0, #4]
   11fd0:	str	r3, [r0]
   11fd4:	str	r3, [r0, #8]
   11fd8:	str	r3, [r0, #12]
   11fdc:	bx	lr
   11fe0:	ldr	r3, [r0]
   11fe4:	mov	r2, #0
   11fe8:	cmp	r3, r2
   11fec:	push	{r4, lr}
   11ff0:	mov	r4, r0
   11ff4:	stm	r1, {r2, r3}
   11ff8:	str	r1, [r0]
   11ffc:	streq	r1, [r0, #4]
   12000:	ldr	r0, [r0, #8]
   12004:	strne	r1, [r3]
   12008:	cmp	r0, #0
   1200c:	beq	1201c <error@@Base+0x1224>
   12010:	bl	10734 <free@plt>
   12014:	mov	r3, #0
   12018:	str	r3, [r4, #8]
   1201c:	ldr	r3, [r4, #12]
   12020:	add	r3, r3, #1
   12024:	str	r3, [r4, #12]
   12028:	pop	{r4, pc}
   1202c:	ldr	r3, [r0, #4]
   12030:	mov	r2, #0
   12034:	cmp	r3, r2
   12038:	push	{r4, lr}
   1203c:	mov	r4, r0
   12040:	str	r3, [r1]
   12044:	str	r2, [r1, #4]
   12048:	streq	r1, [r0]
   1204c:	ldr	r0, [r0, #8]
   12050:	strne	r1, [r3, #4]
   12054:	cmp	r0, #0
   12058:	str	r1, [r4, #4]
   1205c:	beq	1206c <error@@Base+0x1274>
   12060:	bl	10734 <free@plt>
   12064:	mov	r3, #0
   12068:	str	r3, [r4, #8]
   1206c:	ldr	r3, [r4, #12]
   12070:	add	r3, r3, #1
   12074:	str	r3, [r4, #12]
   12078:	pop	{r4, pc}
   1207c:	ldr	r3, [r2]
   12080:	push	{r4, lr}
   12084:	cmp	r3, #0
   12088:	str	r3, [r1]
   1208c:	str	r2, [r1, #4]
   12090:	mov	r4, r0
   12094:	streq	r1, [r0]
   12098:	ldr	r0, [r0, #8]
   1209c:	strne	r1, [r3, #4]
   120a0:	cmp	r0, #0
   120a4:	str	r1, [r2]
   120a8:	beq	120b8 <error@@Base+0x12c0>
   120ac:	bl	10734 <free@plt>
   120b0:	mov	r3, #0
   120b4:	str	r3, [r4, #8]
   120b8:	ldr	r3, [r4, #12]
   120bc:	add	r3, r3, #1
   120c0:	str	r3, [r4, #12]
   120c4:	pop	{r4, pc}
   120c8:	ldr	r3, [r1, #4]
   120cc:	push	{r4, lr}
   120d0:	cmp	r3, #0
   120d4:	stm	r2, {r1, r3}
   120d8:	mov	r4, r0
   120dc:	str	r2, [r1, #4]
   120e0:	streq	r2, [r0, #4]
   120e4:	ldr	r0, [r0, #8]
   120e8:	strne	r2, [r3]
   120ec:	cmp	r0, #0
   120f0:	beq	12100 <error@@Base+0x1308>
   120f4:	bl	10734 <free@plt>
   120f8:	mov	r3, #0
   120fc:	str	r3, [r4, #8]
   12100:	ldr	r3, [r4, #12]
   12104:	add	r3, r3, #1
   12108:	str	r3, [r4, #12]
   1210c:	pop	{r4, pc}
   12110:	ldr	r3, [r1]
   12114:	ldr	r2, [r1, #4]
   12118:	cmp	r3, #0
   1211c:	push	{r4, r5, r6, lr}
   12120:	mov	r4, r0
   12124:	strne	r2, [r3, #4]
   12128:	ldrne	r2, [r1, #4]
   1212c:	streq	r2, [r0]
   12130:	cmp	r2, #0
   12134:	streq	r3, [r0, #4]
   12138:	ldr	r0, [r0, #8]
   1213c:	mov	r5, #0
   12140:	strne	r3, [r2]
   12144:	cmp	r0, r5
   12148:	str	r5, [r1, #4]
   1214c:	str	r5, [r1]
   12150:	beq	1215c <error@@Base+0x1364>
   12154:	bl	10734 <free@plt>
   12158:	str	r5, [r4, #8]
   1215c:	ldr	r3, [r4, #12]
   12160:	sub	r3, r3, #1
   12164:	str	r3, [r4, #12]
   12168:	pop	{r4, r5, r6, pc}
   1216c:	ldr	r3, [r0, #8]
   12170:	cmp	r3, #0
   12174:	bxne	lr
   12178:	ldr	r3, [r0, #12]
   1217c:	cmp	r3, #0
   12180:	bxeq	lr
   12184:	push	{r4, lr}
   12188:	mov	r1, #4
   1218c:	mov	r4, r0
   12190:	mov	r0, r3
   12194:	bl	10e50 <error@@Base+0x58>
   12198:	ldr	r3, [r4]
   1219c:	cmp	r3, #0
   121a0:	str	r0, [r4, #8]
   121a4:	popeq	{r4, pc}
   121a8:	sub	r0, r0, #4
   121ac:	str	r3, [r0, #4]!
   121b0:	ldr	r3, [r3, #4]
   121b4:	cmp	r3, #0
   121b8:	bne	121ac <error@@Base+0x13b4>
   121bc:	pop	{r4, pc}
   121c0:	push	{r4, r5, r6, lr}
   121c4:	ldr	r4, [r0]
   121c8:	cmp	r4, #0
   121cc:	popeq	{r4, r5, r6, pc}
   121d0:	mov	r5, r0
   121d4:	mov	r6, r1
   121d8:	mov	r1, r4
   121dc:	mov	r0, r5
   121e0:	bl	12110 <error@@Base+0x1318>
   121e4:	mov	r0, r4
   121e8:	blx	r6
   121ec:	ldr	r4, [r5]
   121f0:	cmp	r4, #0
   121f4:	bne	121d8 <error@@Base+0x13e0>
   121f8:	pop	{r4, r5, r6, pc}
   121fc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12200:	mov	r7, r0
   12204:	ldr	r6, [pc, #72]	; 12254 <error@@Base+0x145c>
   12208:	ldr	r5, [pc, #72]	; 12258 <error@@Base+0x1460>
   1220c:	add	r6, pc, r6
   12210:	add	r5, pc, r5
   12214:	sub	r6, r6, r5
   12218:	mov	r8, r1
   1221c:	mov	r9, r2
   12220:	bl	106e4 <calloc@plt-0x20>
   12224:	asrs	r6, r6, #2
   12228:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1222c:	mov	r4, #0
   12230:	add	r4, r4, #1
   12234:	ldr	r3, [r5], #4
   12238:	mov	r2, r9
   1223c:	mov	r1, r8
   12240:	mov	r0, r7
   12244:	blx	r3
   12248:	cmp	r6, r4
   1224c:	bne	12230 <error@@Base+0x1438>
   12250:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12254:	andeq	r0, r1, ip, ror #25
   12258:	andeq	r0, r1, r4, ror #25
   1225c:	bx	lr

Disassembly of section .fini:

00012260 <.fini>:
   12260:	push	{r3, lr}
   12264:	pop	{r3, pc}
