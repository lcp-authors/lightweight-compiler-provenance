
../repos/eddieantonio-ocreval-3ab279a/wordaccci/wordaccci:     file format elf32-littlearm


Disassembly of section .init:

00010804 <.init>:
   10804:	push	{r3, lr}
   10808:	bl	10974 <abort@plt+0x48>
   1080c:	pop	{r3, pc}

Disassembly of section .plt:

00010810 <calloc@plt-0x14>:
   10810:	push	{lr}		; (str lr, [sp, #-4]!)
   10814:	ldr	lr, [pc, #4]	; 10820 <calloc@plt-0x4>
   10818:	add	lr, pc, lr
   1081c:	ldr	pc, [lr, #8]!
   10820:	andeq	r3, r1, r0, ror #15

00010824 <calloc@plt>:
   10824:	add	ip, pc, #0, 12
   10828:	add	ip, ip, #77824	; 0x13000
   1082c:	ldr	pc, [ip, #2016]!	; 0x7e0

00010830 <strcmp@plt>:
   10830:	add	ip, pc, #0, 12
   10834:	add	ip, ip, #77824	; 0x13000
   10838:	ldr	pc, [ip, #2008]!	; 0x7d8

0001083c <printf@plt>:
   1083c:	add	ip, pc, #0, 12
   10840:	add	ip, ip, #77824	; 0x13000
   10844:	ldr	pc, [ip, #2000]!	; 0x7d0

00010848 <fopen@plt>:
   10848:	add	ip, pc, #0, 12
   1084c:	add	ip, ip, #77824	; 0x13000
   10850:	ldr	pc, [ip, #1992]!	; 0x7c8

00010854 <free@plt>:
   10854:	add	ip, pc, #0, 12
   10858:	add	ip, ip, #77824	; 0x13000
   1085c:	ldr	pc, [ip, #1984]!	; 0x7c0

00010860 <fgets@plt>:
   10860:	add	ip, pc, #0, 12
   10864:	add	ip, ip, #77824	; 0x13000
   10868:	ldr	pc, [ip, #1976]!	; 0x7b8

0001086c <strdup@plt>:
   1086c:	add	ip, pc, #0, 12
   10870:	add	ip, ip, #77824	; 0x13000
   10874:	ldr	pc, [ip, #1968]!	; 0x7b0

00010878 <__xstat@plt>:
   10878:	add	ip, pc, #0, 12
   1087c:	add	ip, ip, #77824	; 0x13000
   10880:	ldr	pc, [ip, #1960]!	; 0x7a8

00010884 <__libc_start_main@plt>:
   10884:	add	ip, pc, #0, 12
   10888:	add	ip, ip, #77824	; 0x13000
   1088c:	ldr	pc, [ip, #1952]!	; 0x7a0

00010890 <__sysv_signal@plt>:
   10890:	add	ip, pc, #0, 12
   10894:	add	ip, ip, #77824	; 0x13000
   10898:	ldr	pc, [ip, #1944]!	; 0x798

0001089c <__gmon_start__@plt>:
   1089c:	add	ip, pc, #0, 12
   108a0:	add	ip, ip, #77824	; 0x13000
   108a4:	ldr	pc, [ip, #1936]!	; 0x790

000108a8 <exit@plt>:
   108a8:	add	ip, pc, #0, 12
   108ac:	add	ip, ip, #77824	; 0x13000
   108b0:	ldr	pc, [ip, #1928]!	; 0x788

000108b4 <strlen@plt>:
   108b4:	add	ip, pc, #0, 12
   108b8:	add	ip, ip, #77824	; 0x13000
   108bc:	ldr	pc, [ip, #1920]!	; 0x780

000108c0 <fprintf@plt>:
   108c0:	add	ip, pc, #0, 12
   108c4:	add	ip, ip, #77824	; 0x13000
   108c8:	ldr	pc, [ip, #1912]!	; 0x778

000108cc <sqrt@plt>:
   108cc:	add	ip, pc, #0, 12
   108d0:	add	ip, ip, #77824	; 0x13000
   108d4:	ldr	pc, [ip, #1904]!	; 0x770

000108d8 <__isoc99_sscanf@plt>:
   108d8:	add	ip, pc, #0, 12
   108dc:	add	ip, ip, #77824	; 0x13000
   108e0:	ldr	pc, [ip, #1896]!	; 0x768

000108e4 <fclose@plt>:
   108e4:	add	ip, pc, #0, 12
   108e8:	add	ip, ip, #77824	; 0x13000
   108ec:	ldr	pc, [ip, #1888]!	; 0x760

000108f0 <fputc@plt>:
   108f0:	add	ip, pc, #0, 12
   108f4:	add	ip, ip, #77824	; 0x13000
   108f8:	ldr	pc, [ip, #1880]!	; 0x758

000108fc <sprintf@plt>:
   108fc:	add	ip, pc, #0, 12
   10900:	add	ip, ip, #77824	; 0x13000
   10904:	ldr	pc, [ip, #1872]!	; 0x750

00010908 <atoi@plt>:
   10908:	add	ip, pc, #0, 12
   1090c:	add	ip, ip, #77824	; 0x13000
   10910:	ldr	pc, [ip, #1864]!	; 0x748

00010914 <fputs@plt>:
   10914:	add	ip, pc, #0, 12
   10918:	add	ip, ip, #77824	; 0x13000
   1091c:	ldr	pc, [ip, #1856]!	; 0x740

00010920 <strncmp@plt>:
   10920:	add	ip, pc, #0, 12
   10924:	add	ip, ip, #77824	; 0x13000
   10928:	ldr	pc, [ip, #1848]!	; 0x738

0001092c <abort@plt>:
   1092c:	add	ip, pc, #0, 12
   10930:	add	ip, ip, #77824	; 0x13000
   10934:	ldr	pc, [ip, #1840]!	; 0x730

Disassembly of section .text:

00010938 <error@@Base-0xfa4>:
   10938:	mov	fp, #0
   1093c:	mov	lr, #0
   10940:	pop	{r1}		; (ldr r1, [sp], #4)
   10944:	mov	r2, sp
   10948:	push	{r2}		; (str r2, [sp, #-4]!)
   1094c:	push	{r0}		; (str r0, [sp, #-4]!)
   10950:	ldr	ip, [pc, #16]	; 10968 <abort@plt+0x3c>
   10954:	push	{ip}		; (str ip, [sp, #-4]!)
   10958:	ldr	r0, [pc, #12]	; 1096c <abort@plt+0x40>
   1095c:	ldr	r3, [pc, #12]	; 10970 <abort@plt+0x44>
   10960:	bl	10884 <__libc_start_main@plt>
   10964:	bl	1092c <abort@plt>
   10968:	ldrdeq	r3, [r1], -r0
   1096c:	andeq	r0, r1, r0, lsr #24
   10970:	andeq	r3, r1, r0, ror r6
   10974:	ldr	r3, [pc, #20]	; 10990 <abort@plt+0x64>
   10978:	ldr	r2, [pc, #20]	; 10994 <abort@plt+0x68>
   1097c:	add	r3, pc, r3
   10980:	ldr	r2, [r3, r2]
   10984:	cmp	r2, #0
   10988:	bxeq	lr
   1098c:	b	1089c <__gmon_start__@plt>
   10990:	andeq	r3, r1, ip, ror r6
   10994:	andeq	r0, r0, r8, lsr #1
   10998:	ldr	r0, [pc, #24]	; 109b8 <abort@plt+0x8c>
   1099c:	ldr	r3, [pc, #24]	; 109bc <abort@plt+0x90>
   109a0:	cmp	r3, r0
   109a4:	bxeq	lr
   109a8:	ldr	r3, [pc, #16]	; 109c0 <abort@plt+0x94>
   109ac:	cmp	r3, #0
   109b0:	bxeq	lr
   109b4:	bx	r3
   109b8:	strdeq	r4, [r2], -ip
   109bc:	strdeq	r4, [r2], -ip
   109c0:	andeq	r0, r0, r0
   109c4:	ldr	r0, [pc, #36]	; 109f0 <abort@plt+0xc4>
   109c8:	ldr	r1, [pc, #36]	; 109f4 <abort@plt+0xc8>
   109cc:	sub	r1, r1, r0
   109d0:	asr	r1, r1, #2
   109d4:	add	r1, r1, r1, lsr #31
   109d8:	asrs	r1, r1, #1
   109dc:	bxeq	lr
   109e0:	ldr	r3, [pc, #16]	; 109f8 <abort@plt+0xcc>
   109e4:	cmp	r3, #0
   109e8:	bxeq	lr
   109ec:	bx	r3
   109f0:	strdeq	r4, [r2], -ip
   109f4:	strdeq	r4, [r2], -ip
   109f8:	andeq	r0, r0, r0
   109fc:	push	{r4, lr}
   10a00:	ldr	r4, [pc, #24]	; 10a20 <abort@plt+0xf4>
   10a04:	ldrb	r3, [r4]
   10a08:	cmp	r3, #0
   10a0c:	popne	{r4, pc}
   10a10:	bl	10998 <abort@plt+0x6c>
   10a14:	mov	r3, #1
   10a18:	strb	r3, [r4]
   10a1c:	pop	{r4, pc}
   10a20:	andeq	r4, r2, r0, lsl #2
   10a24:	b	109c4 <abort@plt+0x98>
   10a28:	push	{fp, lr}
   10a2c:	mov	fp, sp
   10a30:	sub	sp, sp, #24
   10a34:	ldr	r1, [pc, #132]	; 10ac0 <abort@plt+0x194>
   10a38:	ldr	r1, [pc, r1]
   10a3c:	ldr	r2, [pc, #128]	; 10ac4 <abort@plt+0x198>
   10a40:	ldr	r2, [pc, r2]
   10a44:	str	r0, [fp, #-4]
   10a48:	ldr	r0, [r1]
   10a4c:	str	r0, [fp, #-8]
   10a50:	ldr	r0, [r1, #4]
   10a54:	str	r0, [sp, #12]
   10a58:	ldr	r0, [fp, #-4]
   10a5c:	str	r0, [sp, #8]
   10a60:	mov	r0, r1
   10a64:	ldr	r1, [sp, #8]
   10a68:	blx	r2
   10a6c:	ldr	r0, [pc, #64]	; 10ab4 <abort@plt+0x188>
   10a70:	ldr	r0, [pc, r0]
   10a74:	ldr	r1, [pc, #60]	; 10ab8 <abort@plt+0x18c>
   10a78:	ldr	r1, [pc, r1]
   10a7c:	ldr	r2, [pc, #56]	; 10abc <abort@plt+0x190>
   10a80:	ldr	r2, [pc, r2]
   10a84:	ldr	r3, [r2]
   10a88:	ldr	ip, [fp, #-8]
   10a8c:	sub	r3, r3, ip
   10a90:	ldr	r2, [r2, #4]
   10a94:	ldr	ip, [sp, #12]
   10a98:	sub	r2, r2, ip
   10a9c:	str	r1, [sp, #4]
   10aa0:	mov	r1, r3
   10aa4:	ldr	r3, [sp, #4]
   10aa8:	blx	r3
   10aac:	mov	sp, fp
   10ab0:	pop	{fp, pc}
   10ab4:	andeq	r3, r1, ip, lsr r6
   10ab8:	andeq	r3, r1, ip, lsl #12
   10abc:	andeq	r3, r1, r8, lsr #12
   10ac0:	andeq	r3, r1, r0, ror r6
   10ac4:	andeq	r3, r1, r8, asr #12
   10ac8:	push	{fp, lr}
   10acc:	mov	fp, sp
   10ad0:	sub	sp, sp, #56	; 0x38
   10ad4:	ldr	r0, [pc, #316]	; 10c18 <abort@plt+0x2ec>
   10ad8:	ldr	r0, [pc, r0]
   10adc:	ldr	r1, [pc, #312]	; 10c1c <abort@plt+0x2f0>
   10ae0:	ldr	r1, [pc, r1]
   10ae4:	sub	r2, fp, #8
   10ae8:	str	r1, [fp, #-20]	; 0xffffffec
   10aec:	mov	r1, r2
   10af0:	sub	r2, fp, #16
   10af4:	ldr	r3, [fp, #-20]	; 0xffffffec
   10af8:	blx	r3
   10afc:	ldr	r0, [pc, #268]	; 10c10 <abort@plt+0x2e4>
   10b00:	add	r0, pc, r0
   10b04:	ldr	r1, [pc, #264]	; 10c14 <abort@plt+0x2e8>
   10b08:	ldr	r1, [pc, r1]
   10b0c:	ldr	r1, [r1, #12]
   10b10:	bl	1083c <printf@plt>
   10b14:	ldr	r1, [pc, #236]	; 10c08 <abort@plt+0x2dc>
   10b18:	add	r1, pc, r1
   10b1c:	ldr	r2, [pc, #232]	; 10c0c <abort@plt+0x2e0>
   10b20:	ldr	r2, [pc, r2]
   10b24:	ldr	r2, [r2]
   10b28:	str	r0, [fp, #-24]	; 0xffffffe8
   10b2c:	mov	r0, r1
   10b30:	mov	r1, r2
   10b34:	bl	1083c <printf@plt>
   10b38:	ldr	r1, [pc, #192]	; 10c00 <abort@plt+0x2d4>
   10b3c:	add	r1, pc, r1
   10b40:	ldr	r2, [pc, #188]	; 10c04 <abort@plt+0x2d8>
   10b44:	ldr	r2, [pc, r2]
   10b48:	ldr	r2, [r2, #4]
   10b4c:	str	r0, [sp, #28]
   10b50:	mov	r0, r1
   10b54:	mov	r1, r2
   10b58:	bl	1083c <printf@plt>
   10b5c:	ldr	r1, [pc, #148]	; 10bf8 <abort@plt+0x2cc>
   10b60:	add	r1, pc, r1
   10b64:	ldr	r2, [pc, #144]	; 10bfc <abort@plt+0x2d0>
   10b68:	ldr	r2, [pc, r2]
   10b6c:	vldr	d16, [pc, #116]	; 10be8 <abort@plt+0x2bc>
   10b70:	ldr	r3, [r2]
   10b74:	ldr	ip, [r2, #4]
   10b78:	sub	r3, r3, ip
   10b7c:	vmov	s0, r3
   10b80:	vcvt.f64.s32	d17, s0
   10b84:	vmul.f64	d16, d16, d17
   10b88:	ldr	r2, [r2]
   10b8c:	vmov	s0, r2
   10b90:	vcvt.f64.s32	d17, s0
   10b94:	vdiv.f64	d16, d16, d17
   10b98:	str	r0, [sp, #24]
   10b9c:	mov	r0, r1
   10ba0:	vmov	r2, r3, d16
   10ba4:	bl	1083c <printf@plt>
   10ba8:	ldr	r1, [pc, #64]	; 10bf0 <abort@plt+0x2c4>
   10bac:	add	r1, pc, r1
   10bb0:	ldr	r2, [pc, #60]	; 10bf4 <abort@plt+0x2c8>
   10bb4:	add	r2, pc, r2
   10bb8:	vldr	d16, [fp, #-8]
   10bbc:	vldr	d17, [fp, #-16]
   10bc0:	str	r0, [sp, #20]
   10bc4:	mov	r0, r1
   10bc8:	str	r2, [sp, #16]
   10bcc:	vmov	r2, r3, d16
   10bd0:	vstr	d17, [sp]
   10bd4:	ldr	r1, [sp, #16]
   10bd8:	str	r1, [sp, #8]
   10bdc:	bl	1083c <printf@plt>
   10be0:	mov	sp, fp
   10be4:	pop	{fp, pc}
   10be8:	andeq	r0, r0, r0
   10bec:	subsmi	r0, r9, r0
   10bf0:	andeq	r2, r0, ip, lsl #23
   10bf4:	muleq	r0, r9, fp
   10bf8:	andeq	r2, r0, r4, asr #23
   10bfc:	andeq	r3, r1, r0, asr #10
   10c00:	ldrdeq	r2, [r0], -r1
   10c04:	andeq	r3, r1, r4, ror #10
   10c08:	andeq	r2, r0, r6, ror #23
   10c0c:	andeq	r3, r1, r8, lsl #11
   10c10:	andeq	r2, r0, r8, ror #23
   10c14:	andeq	r3, r1, r4, lsr #11
   10c18:	ldrdeq	r3, [r1], -r4
   10c1c:	ldrdeq	r3, [r1], -ip
   10c20:	push	{fp, lr}
   10c24:	mov	fp, sp
   10c28:	sub	sp, sp, #24
   10c2c:	ldr	r2, [pc, #156]	; 10cd0 <abort@plt+0x3a4>
   10c30:	add	r2, pc, r2
   10c34:	ldr	r3, [pc, #152]	; 10cd4 <abort@plt+0x3a8>
   10c38:	ldr	r3, [pc, r3]
   10c3c:	movw	ip, #0
   10c40:	str	ip, [fp, #-4]
   10c44:	str	r0, [fp, #-8]
   10c48:	str	r1, [sp, #12]
   10c4c:	ldr	r1, [sp, #12]
   10c50:	sub	r0, fp, #8
   10c54:	str	r3, [sp, #4]
   10c58:	mov	r3, ip
   10c5c:	ldr	ip, [sp, #4]
   10c60:	blx	ip
   10c64:	ldr	r0, [fp, #-8]
   10c68:	cmp	r0, #2
   10c6c:	bge	10c84 <abort@plt+0x358>
   10c70:	ldr	r0, [pc, #100]	; 10cdc <abort@plt+0x3b0>
   10c74:	add	r0, pc, r0
   10c78:	ldr	r1, [pc, #96]	; 10ce0 <abort@plt+0x3b4>
   10c7c:	ldr	r1, [pc, r1]
   10c80:	blx	r1
   10c84:	movw	r0, #0
   10c88:	str	r0, [sp, #8]
   10c8c:	ldr	r0, [sp, #8]
   10c90:	ldr	r1, [fp, #-8]
   10c94:	cmp	r0, r1
   10c98:	bge	10cc0 <abort@plt+0x394>
   10c9c:	ldr	r0, [sp, #12]
   10ca0:	ldr	r1, [sp, #8]
   10ca4:	add	r0, r0, r1, lsl #2
   10ca8:	ldr	r0, [r0]
   10cac:	bl	10a28 <abort@plt+0xfc>
   10cb0:	ldr	r0, [sp, #8]
   10cb4:	add	r0, r0, #1
   10cb8:	str	r0, [sp, #8]
   10cbc:	b	10c8c <abort@plt+0x360>
   10cc0:	bl	10ac8 <abort@plt+0x19c>
   10cc4:	ldr	r0, [pc, #12]	; 10cd8 <abort@plt+0x3ac>
   10cc8:	ldr	r0, [pc, r0]
   10ccc:	blx	r0
   10cd0:	andeq	r2, r0, lr, asr #22
   10cd4:	andeq	r3, r1, ip, asr r4
   10cd8:	strdeq	r3, [r1], -r8
   10cdc:	andeq	r2, r0, sl, lsr fp
   10ce0:	strdeq	r3, [r1], -r0
   10ce4:	andeq	r0, r0, r0
   10ce8:	push	{fp, lr}
   10cec:	mov	fp, sp
   10cf0:	sub	sp, sp, #24
   10cf4:	ldr	r3, [pc, #136]	; 10d84 <abort@plt+0x458>
   10cf8:	ldr	r3, [pc, r3]
   10cfc:	str	r0, [fp, #-4]
   10d00:	str	r1, [fp, #-8]
   10d04:	str	r2, [sp, #12]
   10d08:	movw	r0, #1
   10d0c:	movw	r1, #32
   10d10:	blx	r3
   10d14:	ldr	r1, [pc, #100]	; 10d80 <abort@plt+0x454>
   10d18:	ldr	r1, [pc, r1]
   10d1c:	str	r0, [sp, #8]
   10d20:	ldr	r0, [fp, #-8]
   10d24:	ldr	r2, [sp, #8]
   10d28:	str	r0, [r2, #8]
   10d2c:	ldr	r0, [sp, #12]
   10d30:	ldr	r2, [sp, #8]
   10d34:	str	r0, [r2, #12]
   10d38:	ldr	r0, [fp, #-8]
   10d3c:	ldr	r2, [fp, #-4]
   10d40:	ldr	r3, [r2, #24]
   10d44:	add	r0, r3, r0
   10d48:	str	r0, [r2, #24]
   10d4c:	ldr	r0, [sp, #12]
   10d50:	ldr	r2, [fp, #-4]
   10d54:	ldr	r3, [r2, #28]
   10d58:	add	r0, r3, r0
   10d5c:	str	r0, [r2, #28]
   10d60:	ldr	r0, [fp, #-4]
   10d64:	ldr	r2, [sp, #8]
   10d68:	str	r1, [sp, #4]
   10d6c:	mov	r1, r2
   10d70:	ldr	r2, [sp, #4]
   10d74:	blx	r2
   10d78:	mov	sp, fp
   10d7c:	pop	{fp, pc}
   10d80:	andeq	r3, r1, r0, lsl #7
   10d84:	ldrdeq	r3, [r1], -ip
   10d88:	push	{fp, lr}
   10d8c:	mov	fp, sp
   10d90:	sub	sp, sp, #112	; 0x70
   10d94:	vldr	d16, [pc, #884]	; 11110 <abort@plt+0x7e4>
   10d98:	str	r0, [fp, #-4]
   10d9c:	str	r1, [fp, #-8]
   10da0:	str	r2, [fp, #-12]
   10da4:	vstr	d16, [fp, #-32]	; 0xffffffe0
   10da8:	ldr	r0, [fp, #-4]
   10dac:	bl	11130 <abort@plt+0x804>
   10db0:	sxtb	r0, r0
   10db4:	cmp	r0, #0
   10db8:	bne	10dd0 <abort@plt+0x4a4>
   10dbc:	ldr	r0, [pc, #868]	; 11128 <abort@plt+0x7fc>
   10dc0:	add	r0, pc, r0
   10dc4:	ldr	r1, [pc, #864]	; 1112c <abort@plt+0x800>
   10dc8:	ldr	r1, [pc, r1]
   10dcc:	blx	r1
   10dd0:	ldr	r0, [fp, #-4]
   10dd4:	ldr	r0, [r0, #12]
   10dd8:	str	r0, [fp, #-16]
   10ddc:	ldr	r0, [fp, #-4]
   10de0:	ldr	r0, [r0, #24]
   10de4:	ldr	r1, [fp, #-4]
   10de8:	ldr	r1, [r1, #28]
   10dec:	bl	111b8 <abort@plt+0x88c>
   10df0:	ldr	r0, [fp, #-4]
   10df4:	vstr	d0, [r0, #32]
   10df8:	ldr	r0, [fp, #-16]
   10dfc:	vmov	s2, r0
   10e00:	vcvt.f64.s32	d16, s2
   10e04:	ldr	r0, [fp, #-4]
   10e08:	vldr	d17, [r0, #32]
   10e0c:	vmul.f64	d16, d16, d17
   10e10:	vstr	d16, [fp, #-24]	; 0xffffffe8
   10e14:	ldr	r0, [fp, #-4]
   10e18:	ldr	r0, [r0]
   10e1c:	str	r0, [fp, #-44]	; 0xffffffd4
   10e20:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10e24:	movw	r1, #0
   10e28:	cmp	r0, r1
   10e2c:	beq	10eb4 <abort@plt+0x588>
   10e30:	ldr	r0, [fp, #-4]
   10e34:	ldr	r0, [r0, #24]
   10e38:	ldr	r1, [fp, #-44]	; 0xffffffd4
   10e3c:	ldr	r1, [r1, #8]
   10e40:	sub	r0, r0, r1
   10e44:	ldr	r1, [fp, #-4]
   10e48:	ldr	r1, [r1, #28]
   10e4c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   10e50:	ldr	r2, [r2, #12]
   10e54:	sub	r1, r1, r2
   10e58:	bl	111b8 <abort@plt+0x88c>
   10e5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10e60:	vstr	d0, [r0, #16]
   10e64:	vldr	d16, [fp, #-24]	; 0xffffffe8
   10e68:	ldr	r0, [fp, #-16]
   10e6c:	sub	r0, r0, #1
   10e70:	vmov	s2, r0
   10e74:	vcvt.f64.s32	d17, s2
   10e78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10e7c:	vldr	d18, [r0, #16]
   10e80:	vmul.f64	d17, d17, d18
   10e84:	vsub.f64	d16, d16, d17
   10e88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10e8c:	vstr	d16, [r0, #24]
   10e90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10e94:	vldr	d16, [r0, #16]
   10e98:	vldr	d17, [fp, #-32]	; 0xffffffe0
   10e9c:	vadd.f64	d16, d17, d16
   10ea0:	vstr	d16, [fp, #-32]	; 0xffffffe0
   10ea4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10ea8:	ldr	r0, [r0, #4]
   10eac:	str	r0, [fp, #-44]	; 0xffffffd4
   10eb0:	b	10e20 <abort@plt+0x4f4>
   10eb4:	vldr	d16, [pc, #596]	; 11110 <abort@plt+0x7e4>
   10eb8:	vldr	d17, [fp, #-24]	; 0xffffffe8
   10ebc:	ldr	r0, [fp, #-16]
   10ec0:	sub	r0, r0, #1
   10ec4:	vmov	s0, r0
   10ec8:	vcvt.f64.s32	d18, s0
   10ecc:	vldr	d19, [fp, #-32]	; 0xffffffe0
   10ed0:	vmul.f64	d18, d18, d19
   10ed4:	ldr	r0, [fp, #-16]
   10ed8:	vmov	s0, r0
   10edc:	vcvt.f64.s32	d19, s0
   10ee0:	vdiv.f64	d18, d18, d19
   10ee4:	vsub.f64	d17, d17, d18
   10ee8:	ldr	r0, [fp, #-4]
   10eec:	vstr	d17, [r0, #40]	; 0x28
   10ef0:	vstr	d16, [fp, #-32]	; 0xffffffe0
   10ef4:	ldr	r0, [fp, #-4]
   10ef8:	ldr	r0, [r0]
   10efc:	str	r0, [fp, #-44]	; 0xffffffd4
   10f00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10f04:	movw	r1, #0
   10f08:	cmp	r0, r1
   10f0c:	beq	10f58 <abort@plt+0x62c>
   10f10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10f14:	vldr	d16, [r0, #24]
   10f18:	ldr	r0, [fp, #-4]
   10f1c:	vldr	d17, [r0, #40]	; 0x28
   10f20:	vsub.f64	d16, d16, d17
   10f24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10f28:	vldr	d17, [r0, #24]
   10f2c:	ldr	r0, [fp, #-4]
   10f30:	vldr	d18, [r0, #40]	; 0x28
   10f34:	vsub.f64	d17, d17, d18
   10f38:	vmul.f64	d16, d16, d17
   10f3c:	vldr	d17, [fp, #-32]	; 0xffffffe0
   10f40:	vadd.f64	d16, d17, d16
   10f44:	vstr	d16, [fp, #-32]	; 0xffffffe0
   10f48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   10f4c:	ldr	r0, [r0, #4]
   10f50:	str	r0, [fp, #-44]	; 0xffffffd4
   10f54:	b	10f00 <abort@plt+0x5d4>
   10f58:	vldr	d16, [pc, #440]	; 11118 <abort@plt+0x7ec>
   10f5c:	vldr	d17, [pc, #444]	; 11120 <abort@plt+0x7f4>
   10f60:	vldr	d18, [fp, #-32]	; 0xffffffe0
   10f64:	ldr	r0, [fp, #-16]
   10f68:	sub	r0, r0, #1
   10f6c:	vmov	s0, r0
   10f70:	vcvt.f64.s32	d19, s0
   10f74:	vdiv.f64	d18, d18, d19
   10f78:	ldr	r0, [fp, #-16]
   10f7c:	vmov	s0, r0
   10f80:	vcvt.f64.s32	d19, s0
   10f84:	vdiv.f64	d0, d18, d19
   10f88:	vstr	d16, [sp, #56]	; 0x38
   10f8c:	vstr	d17, [sp, #48]	; 0x30
   10f90:	bl	108cc <sqrt@plt>
   10f94:	vldr	d16, [sp, #48]	; 0x30
   10f98:	vmul.f64	d17, d16, d0
   10f9c:	vstr	d17, [fp, #-40]	; 0xffffffd8
   10fa0:	ldr	r0, [fp, #-4]
   10fa4:	vldr	d17, [r0, #40]	; 0x28
   10fa8:	vldr	d18, [fp, #-40]	; 0xffffffd8
   10fac:	vsub.f64	d17, d17, d18
   10fb0:	vldr	d18, [sp, #56]	; 0x38
   10fb4:	vcmpe.f64	d18, d17
   10fb8:	vmrs	APSR_nzcv, fpscr
   10fbc:	bpl	10fcc <abort@plt+0x6a0>
   10fc0:	vldr	d16, [pc, #336]	; 11118 <abort@plt+0x7ec>
   10fc4:	vstr	d16, [sp, #40]	; 0x28
   10fc8:	b	10fe0 <abort@plt+0x6b4>
   10fcc:	ldr	r0, [fp, #-4]
   10fd0:	vldr	d16, [r0, #40]	; 0x28
   10fd4:	vldr	d17, [fp, #-40]	; 0xffffffd8
   10fd8:	vsub.f64	d16, d16, d17
   10fdc:	vstr	d16, [sp, #40]	; 0x28
   10fe0:	vldr	d16, [sp, #40]	; 0x28
   10fe4:	vldr	d17, [pc, #292]	; 11110 <abort@plt+0x7e4>
   10fe8:	vcmpe.f64	d17, d16
   10fec:	vmrs	APSR_nzcv, fpscr
   10ff0:	ble	11000 <abort@plt+0x6d4>
   10ff4:	vldr	d16, [pc, #276]	; 11110 <abort@plt+0x7e4>
   10ff8:	vstr	d16, [sp, #32]
   10ffc:	b	11048 <abort@plt+0x71c>
   11000:	vldr	d16, [pc, #272]	; 11118 <abort@plt+0x7ec>
   11004:	ldr	r0, [fp, #-4]
   11008:	vldr	d17, [r0, #40]	; 0x28
   1100c:	vldr	d18, [fp, #-40]	; 0xffffffd8
   11010:	vsub.f64	d17, d17, d18
   11014:	vcmpe.f64	d16, d17
   11018:	vmrs	APSR_nzcv, fpscr
   1101c:	bpl	1102c <abort@plt+0x700>
   11020:	vldr	d16, [pc, #240]	; 11118 <abort@plt+0x7ec>
   11024:	vstr	d16, [sp, #24]
   11028:	b	11040 <abort@plt+0x714>
   1102c:	ldr	r0, [fp, #-4]
   11030:	vldr	d16, [r0, #40]	; 0x28
   11034:	vldr	d17, [fp, #-40]	; 0xffffffd8
   11038:	vsub.f64	d16, d16, d17
   1103c:	vstr	d16, [sp, #24]
   11040:	vldr	d16, [sp, #24]
   11044:	vstr	d16, [sp, #32]
   11048:	vldr	d16, [sp, #32]
   1104c:	vldr	d17, [pc, #196]	; 11118 <abort@plt+0x7ec>
   11050:	ldr	r0, [fp, #-8]
   11054:	vstr	d16, [r0]
   11058:	ldr	r0, [fp, #-4]
   1105c:	vldr	d16, [r0, #40]	; 0x28
   11060:	vldr	d18, [fp, #-40]	; 0xffffffd8
   11064:	vadd.f64	d16, d16, d18
   11068:	vcmpe.f64	d17, d16
   1106c:	vmrs	APSR_nzcv, fpscr
   11070:	bpl	11080 <abort@plt+0x754>
   11074:	vldr	d16, [pc, #156]	; 11118 <abort@plt+0x7ec>
   11078:	vstr	d16, [sp, #16]
   1107c:	b	11094 <abort@plt+0x768>
   11080:	ldr	r0, [fp, #-4]
   11084:	vldr	d16, [r0, #40]	; 0x28
   11088:	vldr	d17, [fp, #-40]	; 0xffffffd8
   1108c:	vadd.f64	d16, d16, d17
   11090:	vstr	d16, [sp, #16]
   11094:	vldr	d16, [sp, #16]
   11098:	vldr	d17, [pc, #112]	; 11110 <abort@plt+0x7e4>
   1109c:	vcmpe.f64	d17, d16
   110a0:	vmrs	APSR_nzcv, fpscr
   110a4:	ble	110b4 <abort@plt+0x788>
   110a8:	vldr	d16, [pc, #96]	; 11110 <abort@plt+0x7e4>
   110ac:	vstr	d16, [sp, #8]
   110b0:	b	110fc <abort@plt+0x7d0>
   110b4:	vldr	d16, [pc, #92]	; 11118 <abort@plt+0x7ec>
   110b8:	ldr	r0, [fp, #-4]
   110bc:	vldr	d17, [r0, #40]	; 0x28
   110c0:	vldr	d18, [fp, #-40]	; 0xffffffd8
   110c4:	vadd.f64	d17, d17, d18
   110c8:	vcmpe.f64	d16, d17
   110cc:	vmrs	APSR_nzcv, fpscr
   110d0:	bpl	110e0 <abort@plt+0x7b4>
   110d4:	vldr	d16, [pc, #60]	; 11118 <abort@plt+0x7ec>
   110d8:	vstr	d16, [sp]
   110dc:	b	110f4 <abort@plt+0x7c8>
   110e0:	ldr	r0, [fp, #-4]
   110e4:	vldr	d16, [r0, #40]	; 0x28
   110e8:	vldr	d17, [fp, #-40]	; 0xffffffd8
   110ec:	vadd.f64	d16, d16, d17
   110f0:	vstr	d16, [sp]
   110f4:	vldr	d16, [sp]
   110f8:	vstr	d16, [sp, #8]
   110fc:	vldr	d16, [sp, #8]
   11100:	ldr	r0, [fp, #-12]
   11104:	vstr	d16, [r0]
   11108:	mov	sp, fp
   1110c:	pop	{fp, pc}
	...
   1111c:	subsmi	r0, r9, r0
   11120:			; <UNDEFINED> instruction: 0xf5c28f5c
   11124:	svccc	0x00ff5c28
   11128:	andeq	r2, r0, r5, lsl #20
   1112c:	andeq	r3, r1, r4, lsr #5
   11130:	sub	sp, sp, #12
   11134:	str	r0, [sp, #8]
   11138:	movw	r0, #0
   1113c:	str	r0, [sp, #4]
   11140:	ldr	r0, [sp, #8]
   11144:	ldr	r0, [r0]
   11148:	str	r0, [sp]
   1114c:	ldr	r0, [sp]
   11150:	movw	r1, #0
   11154:	cmp	r0, r1
   11158:	beq	1118c <abort@plt+0x860>
   1115c:	ldr	r0, [sp]
   11160:	ldr	r0, [r0, #8]
   11164:	cmp	r0, #0
   11168:	ble	11178 <abort@plt+0x84c>
   1116c:	ldr	r0, [sp, #4]
   11170:	add	r0, r0, #1
   11174:	str	r0, [sp, #4]
   11178:	b	1117c <abort@plt+0x850>
   1117c:	ldr	r0, [sp]
   11180:	ldr	r0, [r0, #4]
   11184:	str	r0, [sp]
   11188:	b	1114c <abort@plt+0x820>
   1118c:	ldr	r0, [sp, #4]
   11190:	cmp	r0, #1
   11194:	movw	r0, #0
   11198:	movgt	r0, #1
   1119c:	tst	r0, #1
   111a0:	movw	r0, #1
   111a4:	moveq	r0, #0
   111a8:	and	r0, r0, #255	; 0xff
   111ac:	add	sp, sp, #12
   111b0:	bx	lr
   111b4:	nop	{0}
   111b8:	sub	sp, sp, #8
   111bc:	vldr	d16, [pc, #52]	; 111f8 <abort@plt+0x8cc>
   111c0:	str	r0, [sp, #4]
   111c4:	str	r1, [sp]
   111c8:	ldr	r0, [sp, #4]
   111cc:	ldr	r1, [sp]
   111d0:	sub	r0, r0, r1
   111d4:	vmov	s0, r0
   111d8:	vcvt.f64.s32	d17, s0
   111dc:	vmul.f64	d16, d16, d17
   111e0:	ldr	r0, [sp, #4]
   111e4:	vmov	s0, r0
   111e8:	vcvt.f64.s32	d17, s0
   111ec:	vdiv.f64	d0, d16, d17
   111f0:	add	sp, sp, #8
   111f4:	bx	lr
   111f8:	andeq	r0, r0, r0
   111fc:	subsmi	r0, r9, r0
   11200:	push	{fp, lr}
   11204:	mov	fp, sp
   11208:	sub	sp, sp, #16
   1120c:	str	r0, [fp, #-4]
   11210:	str	r1, [sp, #8]
   11214:	ldr	r0, [fp, #-4]
   11218:	ldr	r1, [sp, #8]
   1121c:	bl	10824 <calloc@plt>
   11220:	str	r0, [sp, #4]
   11224:	ldr	r0, [sp, #4]
   11228:	movw	r1, #0
   1122c:	cmp	r0, r1
   11230:	bne	11240 <abort@plt+0x914>
   11234:	ldr	r0, [pc, #16]	; 1124c <abort@plt+0x920>
   11238:	add	r0, pc, r0
   1123c:	bl	118dc <error@@Base>
   11240:	ldr	r0, [sp, #4]
   11244:	mov	sp, fp
   11248:	pop	{fp, pc}
   1124c:	andeq	r2, r0, r5, lsr #11
   11250:	sub	sp, sp, #20
   11254:	str	r0, [sp, #12]
   11258:	str	r1, [sp, #8]
   1125c:	movw	r0, #0
   11260:	str	r0, [sp, #4]
   11264:	ldr	r0, [sp, #12]
   11268:	ldr	r1, [sp, #4]
   1126c:	add	r0, r0, r1
   11270:	ldrb	r0, [r0]
   11274:	cmp	r0, #0
   11278:	movw	r0, #0
   1127c:	str	r0, [sp]
   11280:	beq	112b4 <abort@plt+0x988>
   11284:	ldr	r0, [sp, #12]
   11288:	ldr	r1, [sp, #4]
   1128c:	add	r0, r0, r1
   11290:	ldrb	r0, [r0]
   11294:	ldr	r1, [sp, #8]
   11298:	ldr	r2, [sp, #4]
   1129c:	add	r1, r1, r2
   112a0:	ldrb	r1, [r1]
   112a4:	cmp	r0, r1
   112a8:	movw	r0, #0
   112ac:	moveq	r0, #1
   112b0:	str	r0, [sp]
   112b4:	ldr	r0, [sp]
   112b8:	tst	r0, #1
   112bc:	beq	112d4 <abort@plt+0x9a8>
   112c0:	b	112c4 <abort@plt+0x998>
   112c4:	ldr	r0, [sp, #4]
   112c8:	add	r0, r0, #1
   112cc:	str	r0, [sp, #4]
   112d0:	b	11264 <abort@plt+0x938>
   112d4:	ldr	r0, [sp, #12]
   112d8:	ldr	r1, [sp, #4]
   112dc:	add	r0, r0, r1
   112e0:	ldrb	r0, [r0]
   112e4:	cmp	r0, #0
   112e8:	bne	11304 <abort@plt+0x9d8>
   112ec:	ldr	r0, [sp, #8]
   112f0:	ldr	r1, [sp, #4]
   112f4:	add	r0, r0, r1
   112f8:	ldrb	r0, [r0]
   112fc:	cmp	r0, #0
   11300:	beq	11344 <abort@plt+0xa18>
   11304:	ldr	r0, [sp, #12]
   11308:	ldr	r1, [sp, #4]
   1130c:	add	r0, r0, r1
   11310:	ldrb	r0, [r0]
   11314:	ldr	r1, [sp, #8]
   11318:	ldr	r2, [sp, #4]
   1131c:	add	r1, r1, r2
   11320:	ldrb	r1, [r1]
   11324:	cmp	r0, r1
   11328:	movw	r0, #0
   1132c:	movlt	r0, #1
   11330:	tst	r0, #1
   11334:	mvn	r0, #0
   11338:	moveq	r0, #1
   1133c:	str	r0, [sp, #16]
   11340:	b	1134c <abort@plt+0xa20>
   11344:	movw	r0, #0
   11348:	str	r0, [sp, #16]
   1134c:	ldr	r0, [sp, #16]
   11350:	add	sp, sp, #20
   11354:	bx	lr
   11358:	push	{fp, lr}
   1135c:	mov	fp, sp
   11360:	sub	sp, sp, #24
   11364:	str	r0, [fp, #-8]
   11368:	str	r1, [sp, #12]
   1136c:	ldr	r0, [fp, #-8]
   11370:	movw	r1, #0
   11374:	cmp	r0, r1
   11378:	bne	113bc <abort@plt+0xa90>
   1137c:	ldr	r0, [sp, #12]
   11380:	ldrb	r0, [r0]
   11384:	cmp	r0, #114	; 0x72
   11388:	bne	113a0 <abort@plt+0xa74>
   1138c:	ldr	r0, [pc, #148]	; 11428 <abort@plt+0xafc>
   11390:	ldr	r0, [pc, r0]
   11394:	ldr	r0, [r0]
   11398:	str	r0, [sp, #4]
   1139c:	b	113b0 <abort@plt+0xa84>
   113a0:	ldr	r0, [pc, #124]	; 11424 <abort@plt+0xaf8>
   113a4:	ldr	r0, [pc, r0]
   113a8:	ldr	r0, [r0]
   113ac:	str	r0, [sp, #4]
   113b0:	ldr	r0, [sp, #4]
   113b4:	str	r0, [fp, #-4]
   113b8:	b	11418 <abort@plt+0xaec>
   113bc:	ldr	r0, [fp, #-8]
   113c0:	ldr	r1, [sp, #12]
   113c4:	bl	10848 <fopen@plt>
   113c8:	str	r0, [sp, #8]
   113cc:	ldr	r0, [sp, #8]
   113d0:	movw	r1, #0
   113d4:	cmp	r0, r1
   113d8:	beq	113e8 <abort@plt+0xabc>
   113dc:	ldr	r0, [sp, #8]
   113e0:	str	r0, [fp, #-4]
   113e4:	b	11418 <abort@plt+0xaec>
   113e8:	ldr	r0, [sp, #12]
   113ec:	ldrb	r0, [r0]
   113f0:	cmp	r0, #119	; 0x77
   113f4:	bne	11408 <abort@plt+0xadc>
   113f8:	ldr	r0, [pc, #48]	; 11430 <abort@plt+0xb04>
   113fc:	add	r0, pc, r0
   11400:	ldr	r1, [fp, #-8]
   11404:	bl	1193c <error@@Base+0x60>
   11408:	ldr	r0, [pc, #28]	; 1142c <abort@plt+0xb00>
   1140c:	add	r0, pc, r0
   11410:	ldr	r1, [fp, #-8]
   11414:	bl	1193c <error@@Base+0x60>
   11418:	ldr	r0, [fp, #-4]
   1141c:	mov	sp, fp
   11420:	pop	{fp, pc}
   11424:	andeq	r2, r1, r0, lsr #26
   11428:	andeq	r2, r1, r8, lsr #26
   1142c:	andeq	r2, r0, r1, lsl #8
   11430:	strdeq	r2, [r0], -fp
   11434:	push	{fp, lr}
   11438:	mov	fp, sp
   1143c:	sub	sp, sp, #8
   11440:	ldr	r1, [pc, #60]	; 11484 <abort@plt+0xb58>
   11444:	ldr	r1, [pc, r1]
   11448:	str	r0, [sp, #4]
   1144c:	ldr	r0, [sp, #4]
   11450:	ldr	r1, [r1]
   11454:	cmp	r0, r1
   11458:	beq	1147c <abort@plt+0xb50>
   1145c:	ldr	r0, [pc, #36]	; 11488 <abort@plt+0xb5c>
   11460:	ldr	r0, [pc, r0]
   11464:	ldr	r1, [sp, #4]
   11468:	ldr	r0, [r0]
   1146c:	cmp	r1, r0
   11470:	beq	1147c <abort@plt+0xb50>
   11474:	ldr	r0, [sp, #4]
   11478:	bl	108e4 <fclose@plt>
   1147c:	mov	sp, fp
   11480:	pop	{fp, pc}
   11484:	andeq	r2, r1, r4, ror ip
   11488:	andeq	r2, r1, r4, ror #24
   1148c:	push	{fp, lr}
   11490:	mov	fp, sp
   11494:	sub	sp, sp, #96	; 0x60
   11498:	str	r0, [fp, #-4]
   1149c:	ldr	r0, [fp, #-4]
   114a0:	mov	r1, sp
   114a4:	bl	136d4 <error@@Base+0x1df8>
   114a8:	cmp	r0, #0
   114ac:	movw	r0, #0
   114b0:	moveq	r0, #1
   114b4:	tst	r0, #1
   114b8:	movw	r0, #1
   114bc:	moveq	r0, #0
   114c0:	and	r0, r0, #255	; 0xff
   114c4:	mov	sp, fp
   114c8:	pop	{fp, pc}
   114cc:	push	{fp, lr}
   114d0:	mov	fp, sp
   114d4:	sub	sp, sp, #8
   114d8:	ldr	r0, [pc, #68]	; 11524 <abort@plt+0xbf8>
   114dc:	add	r0, pc, r0
   114e0:	ldrh	r1, [r0]
   114e4:	movw	r2, #1
   114e8:	add	r1, r1, r2
   114ec:	strh	r1, [r0]
   114f0:	sxth	r0, r1
   114f4:	bl	11528 <abort@plt+0xbfc>
   114f8:	ldr	r1, [pc, #32]	; 11520 <abort@plt+0xbf4>
   114fc:	ldr	r1, [pc, r1]
   11500:	str	r0, [sp, #4]
   11504:	ldr	r0, [sp, #4]
   11508:	blx	r1
   1150c:	ldr	r1, [sp, #4]
   11510:	str	r0, [sp]
   11514:	mov	r0, r1
   11518:	mov	sp, fp
   1151c:	pop	{fp, pc}
   11520:	andeq	r2, r1, r0, lsl #23
   11524:	andeq	r2, r1, lr, lsl ip
   11528:	push	{fp, lr}
   1152c:	mov	fp, sp
   11530:	sub	sp, sp, #128	; 0x80
   11534:	ldr	r1, [pc, #112]	; 115ac <abort@plt+0xc80>
   11538:	ldr	r1, [pc, r1]
   1153c:	ldr	r2, [pc, #108]	; 115b0 <abort@plt+0xc84>
   11540:	ldr	r2, [pc, r2]
   11544:	add	r3, sp, #26
   11548:	strh	r0, [fp, #-2]
   1154c:	ldr	r2, [r2]
   11550:	str	r3, [sp, #20]
   11554:	str	r2, [sp, #16]
   11558:	blx	r1
   1155c:	ldr	r1, [pc, #68]	; 115a8 <abort@plt+0xc7c>
   11560:	add	r1, pc, r1
   11564:	ldrsh	r2, [fp, #-2]
   11568:	ldr	r3, [sp, #20]
   1156c:	str	r0, [sp, #12]
   11570:	mov	r0, r3
   11574:	ldr	ip, [sp, #16]
   11578:	str	r2, [sp, #8]
   1157c:	mov	r2, ip
   11580:	ldr	r3, [sp, #12]
   11584:	ldr	lr, [sp, #8]
   11588:	str	lr, [sp]
   1158c:	bl	108fc <sprintf@plt>
   11590:	add	r1, sp, #26
   11594:	str	r0, [sp, #4]
   11598:	mov	r0, r1
   1159c:	bl	1086c <strdup@plt>
   115a0:	mov	sp, fp
   115a4:	pop	{fp, pc}
   115a8:	ldrdeq	r2, [r0], -r6
   115ac:	andeq	r2, r1, r8, ror fp
   115b0:	andeq	r2, r1, r4, ror #22
   115b4:	push	{fp, lr}
   115b8:	mov	fp, sp
   115bc:	sub	sp, sp, #16
   115c0:	str	r0, [fp, #-4]
   115c4:	movw	r0, #47	; 0x2f
   115c8:	strb	r0, [fp, #-5]
   115cc:	ldr	r0, [fp, #-4]
   115d0:	bl	108b4 <strlen@plt>
   115d4:	sub	r0, r0, #1
   115d8:	strh	r0, [sp, #8]
   115dc:	ldrsh	r0, [sp, #8]
   115e0:	cmp	r0, #0
   115e4:	movw	r0, #0
   115e8:	str	r0, [sp, #4]
   115ec:	blt	11614 <abort@plt+0xce8>
   115f0:	ldr	r0, [fp, #-4]
   115f4:	ldrsh	r1, [sp, #8]
   115f8:	add	r0, r0, r1
   115fc:	ldrb	r0, [r0]
   11600:	ldrb	r1, [fp, #-5]
   11604:	cmp	r0, r1
   11608:	movw	r0, #0
   1160c:	movne	r0, #1
   11610:	str	r0, [sp, #4]
   11614:	ldr	r0, [sp, #4]
   11618:	tst	r0, #1
   1161c:	beq	11638 <abort@plt+0xd0c>
   11620:	b	11624 <abort@plt+0xcf8>
   11624:	ldrh	r0, [sp, #8]
   11628:	movw	r1, #65535	; 0xffff
   1162c:	add	r0, r0, r1
   11630:	strh	r0, [sp, #8]
   11634:	b	115dc <abort@plt+0xcb0>
   11638:	ldr	r0, [fp, #-4]
   1163c:	ldrsh	r1, [sp, #8]
   11640:	add	r1, r1, #1
   11644:	add	r0, r0, r1
   11648:	mov	sp, fp
   1164c:	pop	{fp, pc}
   11650:	push	{fp, lr}
   11654:	mov	fp, sp
   11658:	sub	sp, sp, #16
   1165c:	str	r0, [fp, #-4]
   11660:	str	r1, [sp, #8]
   11664:	str	r2, [sp, #4]
   11668:	str	r3, [sp]
   1166c:	ldr	r0, [sp, #8]
   11670:	ldr	r0, [r0]
   11674:	bl	115b4 <abort@plt+0xc88>
   11678:	ldr	r1, [pc, #36]	; 116a4 <abort@plt+0xd78>
   1167c:	ldr	r1, [pc, r1]
   11680:	str	r0, [r1]
   11684:	bl	11a18 <error@@Base+0x13c>
   11688:	ldr	r0, [fp, #-4]
   1168c:	ldr	r1, [sp, #8]
   11690:	ldr	r2, [sp, #4]
   11694:	ldr	r3, [sp]
   11698:	bl	116a8 <abort@plt+0xd7c>
   1169c:	mov	sp, fp
   116a0:	pop	{fp, pc}
   116a4:	andeq	r2, r1, r8, lsr #20
   116a8:	push	{fp, lr}
   116ac:	mov	fp, sp
   116b0:	sub	sp, sp, #48	; 0x30
   116b4:	str	r0, [fp, #-4]
   116b8:	str	r1, [fp, #-8]
   116bc:	str	r2, [fp, #-12]
   116c0:	str	r3, [fp, #-16]
   116c4:	movw	r0, #0
   116c8:	strh	r0, [fp, #-20]	; 0xffffffec
   116cc:	ldr	r0, [fp, #-4]
   116d0:	ldr	r0, [r0]
   116d4:	cmp	r0, #1
   116d8:	bne	116f8 <abort@plt+0xdcc>
   116dc:	ldr	r0, [pc, #404]	; 11878 <abort@plt+0xf4c>
   116e0:	ldr	r0, [pc, r0]
   116e4:	ldrb	r0, [r0]
   116e8:	cmp	r0, #0
   116ec:	beq	116f8 <abort@plt+0xdcc>
   116f0:	ldr	r0, [fp, #-12]
   116f4:	bl	11ab0 <error@@Base+0x1d4>
   116f8:	movw	r0, #1
   116fc:	strh	r0, [fp, #-18]	; 0xffffffee
   11700:	ldrsh	r0, [fp, #-18]	; 0xffffffee
   11704:	ldr	r1, [fp, #-4]
   11708:	ldr	r1, [r1]
   1170c:	cmp	r0, r1
   11710:	bge	11864 <abort@plt+0xf38>
   11714:	ldr	r0, [fp, #-8]
   11718:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   1171c:	add	r0, r0, r1, lsl #2
   11720:	ldr	r0, [r0]
   11724:	ldrb	r0, [r0]
   11728:	cmp	r0, #45	; 0x2d
   1172c:	bne	1182c <abort@plt+0xf00>
   11730:	ldr	r0, [fp, #-8]
   11734:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11738:	add	r0, r0, r1, lsl #2
   1173c:	ldr	r0, [r0]
   11740:	ldrb	r0, [r0, #1]
   11744:	cmp	r0, #0
   11748:	beq	1182c <abort@plt+0xf00>
   1174c:	ldr	r0, [pc, #296]	; 1187c <abort@plt+0xf50>
   11750:	add	r0, pc, r0
   11754:	ldr	r1, [fp, #-8]
   11758:	ldrsh	r2, [fp, #-18]	; 0xffffffee
   1175c:	ldr	r2, [r1, r2, lsl #2]!
   11760:	ldr	r1, [r1]
   11764:	str	r0, [sp, #24]
   11768:	mov	r0, r1
   1176c:	str	r2, [sp, #20]
   11770:	bl	108b4 <strlen@plt>
   11774:	ldr	r1, [sp, #24]
   11778:	str	r0, [sp, #16]
   1177c:	mov	r0, r1
   11780:	ldr	r1, [sp, #20]
   11784:	ldr	r2, [sp, #16]
   11788:	bl	10920 <strncmp@plt>
   1178c:	cmp	r0, #0
   11790:	bne	1179c <abort@plt+0xe70>
   11794:	ldr	r0, [fp, #-12]
   11798:	bl	11ab0 <error@@Base+0x1d4>
   1179c:	ldr	r0, [fp, #-8]
   117a0:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   117a4:	add	r0, r0, r1, lsl #2
   117a8:	ldr	r0, [r0]
   117ac:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   117b0:	add	r1, r1, #1
   117b4:	ldr	r2, [fp, #-4]
   117b8:	ldr	r2, [r2]
   117bc:	cmp	r1, r2
   117c0:	str	r0, [sp, #12]
   117c4:	bge	117e4 <abort@plt+0xeb8>
   117c8:	ldr	r0, [fp, #-8]
   117cc:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   117d0:	add	r1, r1, #1
   117d4:	add	r0, r0, r1, lsl #2
   117d8:	ldr	r0, [r0]
   117dc:	str	r0, [sp, #8]
   117e0:	b	117f0 <abort@plt+0xec4>
   117e4:	movw	r0, #0
   117e8:	str	r0, [sp, #8]
   117ec:	b	117f0 <abort@plt+0xec4>
   117f0:	ldr	r0, [sp, #8]
   117f4:	ldr	r2, [fp, #-16]
   117f8:	ldr	r1, [sp, #12]
   117fc:	str	r0, [sp, #4]
   11800:	mov	r0, r1
   11804:	ldr	r1, [sp, #4]
   11808:	bl	11b38 <error@@Base+0x25c>
   1180c:	sxtb	r0, r0
   11810:	cmp	r0, #0
   11814:	beq	11828 <abort@plt+0xefc>
   11818:	ldrh	r0, [fp, #-18]	; 0xffffffee
   1181c:	movw	r1, #1
   11820:	add	r0, r0, r1
   11824:	strh	r0, [fp, #-18]	; 0xffffffee
   11828:	b	1184c <abort@plt+0xf20>
   1182c:	ldr	r0, [fp, #-8]
   11830:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   11834:	ldr	r1, [r0, r1, lsl #2]
   11838:	ldrsh	r2, [fp, #-20]	; 0xffffffec
   1183c:	add	r3, r2, #1
   11840:	strh	r3, [fp, #-20]	; 0xffffffec
   11844:	add	r0, r0, r2, lsl #2
   11848:	str	r1, [r0]
   1184c:	b	11850 <abort@plt+0xf24>
   11850:	ldrh	r0, [fp, #-18]	; 0xffffffee
   11854:	movw	r1, #1
   11858:	add	r0, r0, r1
   1185c:	strh	r0, [fp, #-18]	; 0xffffffee
   11860:	b	11700 <abort@plt+0xdd4>
   11864:	ldrsh	r0, [fp, #-20]	; 0xffffffec
   11868:	ldr	r1, [fp, #-4]
   1186c:	str	r0, [r1]
   11870:	mov	sp, fp
   11874:	pop	{fp, pc}
   11878:	andeq	r2, r1, r4, lsl #19
   1187c:	andeq	r2, r0, r3, lsl #2
   11880:	push	{fp, lr}
   11884:	mov	fp, sp
   11888:	movw	r0, #0
   1188c:	bl	11890 <abort@plt+0xf64>
   11890:	push	{fp, lr}
   11894:	mov	fp, sp
   11898:	sub	sp, sp, #8
   1189c:	ldr	r1, [pc, #48]	; 118d4 <abort@plt+0xfa8>
   118a0:	ldr	r1, [pc, r1]
   118a4:	str	r0, [sp, #4]
   118a8:	ldr	r0, [r1]
   118ac:	movw	r1, #0
   118b0:	cmp	r0, r1
   118b4:	beq	118c8 <abort@plt+0xf9c>
   118b8:	ldr	r0, [pc, #24]	; 118d8 <abort@plt+0xfac>
   118bc:	ldr	r0, [pc, r0]
   118c0:	ldr	r0, [r0]
   118c4:	blx	r0
   118c8:	bl	11dac <error@@Base+0x4d0>
   118cc:	ldr	r0, [sp, #4]
   118d0:	bl	108a8 <exit@plt>
   118d4:	andeq	r2, r1, r4, lsl r8
   118d8:	strdeq	r2, [r1], -r8

000118dc <error@@Base>:
   118dc:	push	{fp, lr}
   118e0:	mov	fp, sp
   118e4:	sub	sp, sp, #8
   118e8:	ldr	r1, [pc, #64]	; 11930 <error@@Base+0x54>
   118ec:	add	r1, pc, r1
   118f0:	ldr	r2, [pc, #60]	; 11934 <error@@Base+0x58>
   118f4:	ldr	r2, [pc, r2]
   118f8:	ldr	r3, [pc, #56]	; 11938 <error@@Base+0x5c>
   118fc:	ldr	r3, [pc, r3]
   11900:	str	r0, [sp, #4]
   11904:	ldr	r0, [r3]
   11908:	ldr	r2, [r2]
   1190c:	ldr	r3, [sp, #4]
   11910:	bl	108c0 <fprintf@plt>
   11914:	ldr	r1, [pc, #16]	; 1192c <error@@Base+0x50>
   11918:	ldr	r1, [pc, r1]
   1191c:	ldr	r1, [r1]
   11920:	str	r0, [sp]
   11924:	mov	r0, r1
   11928:	bl	11890 <abort@plt+0xf64>
   1192c:			; <UNDEFINED> instruction: 0x000127b8
   11930:	andeq	r1, r0, r5, lsr pc
   11934:			; <UNDEFINED> instruction: 0x000127b0
   11938:	muleq	r1, r0, r7
   1193c:	push	{fp, lr}
   11940:	mov	fp, sp
   11944:	sub	sp, sp, #24
   11948:	ldr	r2, [pc, #88]	; 119a8 <error@@Base+0xcc>
   1194c:	add	r2, pc, r2
   11950:	ldr	r3, [pc, #84]	; 119ac <error@@Base+0xd0>
   11954:	ldr	r3, [pc, r3]
   11958:	ldr	ip, [pc, #80]	; 119b0 <error@@Base+0xd4>
   1195c:	ldr	ip, [pc, ip]
   11960:	str	r0, [fp, #-4]
   11964:	str	r1, [fp, #-8]
   11968:	ldr	r0, [ip]
   1196c:	ldr	r1, [r3]
   11970:	ldr	r3, [fp, #-4]
   11974:	ldr	ip, [fp, #-8]
   11978:	str	r1, [sp, #12]
   1197c:	mov	r1, r2
   11980:	ldr	r2, [sp, #12]
   11984:	str	ip, [sp]
   11988:	bl	108c0 <fprintf@plt>
   1198c:	ldr	r1, [pc, #16]	; 119a4 <error@@Base+0xc8>
   11990:	ldr	r1, [pc, r1]
   11994:	ldr	r1, [r1]
   11998:	str	r0, [sp, #8]
   1199c:	mov	r0, r1
   119a0:	bl	11890 <abort@plt+0xf64>
   119a4:	andeq	r2, r1, r0, asr #14
   119a8:	ldrdeq	r1, [r0], -sp
   119ac:	andeq	r2, r1, r0, asr r7
   119b0:	andeq	r2, r1, r0, lsr r7
   119b4:	push	{fp, lr}
   119b8:	mov	fp, sp
   119bc:	sub	sp, sp, #16
   119c0:	ldr	r2, [pc, #68]	; 11a0c <error@@Base+0x130>
   119c4:	add	r2, pc, r2
   119c8:	ldr	r3, [pc, #64]	; 11a10 <error@@Base+0x134>
   119cc:	ldr	r3, [pc, r3]
   119d0:	ldr	ip, [pc, #60]	; 11a14 <error@@Base+0x138>
   119d4:	ldr	ip, [pc, ip]
   119d8:	str	r0, [fp, #-4]
   119dc:	str	r1, [sp, #8]
   119e0:	ldr	r0, [ip]
   119e4:	ldr	r1, [r3]
   119e8:	ldr	r3, [fp, #-4]
   119ec:	ldr	ip, [sp, #8]
   119f0:	str	r1, [sp, #4]
   119f4:	mov	r1, r2
   119f8:	ldr	r2, [sp, #4]
   119fc:	str	ip, [sp]
   11a00:	bl	108c0 <fprintf@plt>
   11a04:	mov	sp, fp
   11a08:	pop	{fp, pc}
   11a0c:	andeq	r1, r0, r5, ror #28
   11a10:	ldrdeq	r2, [r1], -r8
   11a14:			; <UNDEFINED> instruction: 0x000126b8
   11a18:	push	{fp, lr}
   11a1c:	mov	fp, sp
   11a20:	sub	sp, sp, #8
   11a24:	ldr	r0, [pc, #44]	; 11a58 <error@@Base+0x17c>
   11a28:	add	r1, pc, r0
   11a2c:	movw	r0, #2
   11a30:	bl	10890 <__sysv_signal@plt>
   11a34:	ldr	r1, [pc, #24]	; 11a54 <error@@Base+0x178>
   11a38:	add	r1, pc, r1
   11a3c:	movw	r2, #15
   11a40:	str	r0, [sp, #4]
   11a44:	mov	r0, r2
   11a48:	bl	10890 <__sysv_signal@plt>
   11a4c:	mov	sp, fp
   11a50:	pop	{fp, pc}
   11a54:	andeq	r0, r0, ip, lsl r0
   11a58:	andeq	r0, r0, ip, lsr #32
   11a5c:	push	{fp, lr}
   11a60:	mov	fp, sp
   11a64:	sub	sp, sp, #8
   11a68:	ldr	r1, [pc, #52]	; 11aa4 <error@@Base+0x1c8>
   11a6c:	add	r1, pc, r1
   11a70:	str	r0, [sp, #4]
   11a74:	ldrsb	r0, [r1]
   11a78:	cmp	r0, #0
   11a7c:	beq	11a88 <error@@Base+0x1ac>
   11a80:	mov	sp, fp
   11a84:	pop	{fp, pc}
   11a88:	ldr	r0, [pc, #24]	; 11aa8 <error@@Base+0x1cc>
   11a8c:	add	r0, pc, r0
   11a90:	ldr	r1, [pc, #20]	; 11aac <error@@Base+0x1d0>
   11a94:	add	r1, pc, r1
   11a98:	movw	r2, #1
   11a9c:	strb	r2, [r1]
   11aa0:	bl	118dc <error@@Base>
   11aa4:	muleq	r1, r0, r6
   11aa8:			; <UNDEFINED> instruction: 0x00001db8
   11aac:	andeq	r2, r1, r8, ror #12
   11ab0:	push	{fp, lr}
   11ab4:	mov	fp, sp
   11ab8:	sub	sp, sp, #8
   11abc:	ldr	r1, [pc, #96]	; 11b24 <error@@Base+0x248>
   11ac0:	ldr	r1, [pc, r1]
   11ac4:	str	r0, [sp, #4]
   11ac8:	ldr	r0, [r1]
   11acc:	movw	r1, #0
   11ad0:	cmp	r0, r1
   11ad4:	beq	11aec <error@@Base+0x210>
   11ad8:	ldr	r0, [pc, #84]	; 11b34 <error@@Base+0x258>
   11adc:	ldr	r0, [pc, r0]
   11ae0:	ldr	r0, [r0]
   11ae4:	blx	r0
   11ae8:	b	11b20 <error@@Base+0x244>
   11aec:	ldr	r0, [pc, #52]	; 11b28 <error@@Base+0x24c>
   11af0:	add	r1, pc, r0
   11af4:	ldr	r0, [pc, #48]	; 11b2c <error@@Base+0x250>
   11af8:	ldr	r0, [pc, r0]
   11afc:	ldr	r2, [pc, #44]	; 11b30 <error@@Base+0x254>
   11b00:	ldr	r2, [pc, r2]
   11b04:	ldr	r2, [r2]
   11b08:	ldr	r0, [r0]
   11b0c:	ldr	r3, [sp, #4]
   11b10:	str	r0, [sp]
   11b14:	mov	r0, r2
   11b18:	ldr	r2, [sp]
   11b1c:	bl	108c0 <fprintf@plt>
   11b20:	bl	11880 <abort@plt+0xf54>
   11b24:			; <UNDEFINED> instruction: 0x000125b4
   11b28:	andeq	r1, r0, r9, ror #26
   11b2c:	andeq	r2, r1, ip, lsr #11
   11b30:	andeq	r2, r1, ip, lsl #11
   11b34:	muleq	r1, r8, r5
   11b38:	push	{fp, lr}
   11b3c:	mov	fp, sp
   11b40:	sub	sp, sp, #32
   11b44:	str	r0, [fp, #-8]
   11b48:	str	r1, [fp, #-12]
   11b4c:	str	r2, [sp, #16]
   11b50:	ldr	r0, [sp, #16]
   11b54:	movw	r1, #0
   11b58:	cmp	r0, r1
   11b5c:	bne	11b64 <error@@Base+0x288>
   11b60:	b	11d78 <error@@Base+0x49c>
   11b64:	movw	r0, #0
   11b68:	strh	r0, [sp, #14]
   11b6c:	ldr	r0, [sp, #16]
   11b70:	ldrsh	r1, [sp, #14]
   11b74:	movw	r2, #12
   11b78:	mul	r1, r1, r2
   11b7c:	add	r0, r0, r1
   11b80:	ldrb	r0, [r0]
   11b84:	cmp	r0, #0
   11b88:	movw	r0, #0
   11b8c:	str	r0, [sp, #8]
   11b90:	beq	11bc4 <error@@Base+0x2e8>
   11b94:	ldr	r0, [fp, #-8]
   11b98:	ldrb	r0, [r0, #1]
   11b9c:	ldr	r1, [sp, #16]
   11ba0:	ldrsh	r2, [sp, #14]
   11ba4:	movw	r3, #12
   11ba8:	mul	r2, r2, r3
   11bac:	add	r1, r1, r2
   11bb0:	ldrb	r1, [r1]
   11bb4:	cmp	r0, r1
   11bb8:	movw	r0, #0
   11bbc:	movne	r0, #1
   11bc0:	str	r0, [sp, #8]
   11bc4:	ldr	r0, [sp, #8]
   11bc8:	tst	r0, #1
   11bcc:	beq	11be8 <error@@Base+0x30c>
   11bd0:	b	11bd4 <error@@Base+0x2f8>
   11bd4:	ldrh	r0, [sp, #14]
   11bd8:	movw	r1, #1
   11bdc:	add	r0, r0, r1
   11be0:	strh	r0, [sp, #14]
   11be4:	b	11b6c <error@@Base+0x290>
   11be8:	ldr	r0, [sp, #16]
   11bec:	ldrsh	r1, [sp, #14]
   11bf0:	movw	r2, #12
   11bf4:	mul	r1, r1, r2
   11bf8:	add	r0, r0, r1
   11bfc:	ldrsb	r0, [r0]
   11c00:	cmp	r0, #0
   11c04:	bne	11c0c <error@@Base+0x330>
   11c08:	b	11d78 <error@@Base+0x49c>
   11c0c:	ldr	r0, [sp, #16]
   11c10:	ldrsh	r1, [sp, #14]
   11c14:	movw	r2, #12
   11c18:	mul	r1, r1, r2
   11c1c:	add	r0, r0, r1
   11c20:	ldr	r0, [r0, #4]
   11c24:	movw	r1, #0
   11c28:	cmp	r0, r1
   11c2c:	beq	11cec <error@@Base+0x410>
   11c30:	ldr	r0, [fp, #-8]
   11c34:	ldrb	r0, [r0, #2]
   11c38:	cmp	r0, #0
   11c3c:	bne	11c50 <error@@Base+0x374>
   11c40:	ldr	r0, [fp, #-12]
   11c44:	movw	r1, #0
   11c48:	cmp	r0, r1
   11c4c:	beq	11cec <error@@Base+0x410>
   11c50:	ldr	r0, [sp, #16]
   11c54:	ldrsh	r1, [sp, #14]
   11c58:	movw	r2, #12
   11c5c:	mul	r1, r1, r2
   11c60:	add	r0, r0, r1
   11c64:	ldr	r0, [r0, #4]
   11c68:	ldr	r0, [r0]
   11c6c:	movw	r1, #0
   11c70:	cmp	r0, r1
   11c74:	beq	11c7c <error@@Base+0x3a0>
   11c78:	b	11d88 <error@@Base+0x4ac>
   11c7c:	ldr	r0, [fp, #-8]
   11c80:	ldrb	r0, [r0, #2]
   11c84:	cmp	r0, #0
   11c88:	beq	11c9c <error@@Base+0x3c0>
   11c8c:	ldr	r0, [fp, #-8]
   11c90:	add	r0, r0, #2
   11c94:	str	r0, [sp, #4]
   11c98:	b	11ca4 <error@@Base+0x3c8>
   11c9c:	ldr	r0, [fp, #-12]
   11ca0:	str	r0, [sp, #4]
   11ca4:	ldr	r0, [sp, #4]
   11ca8:	ldr	r1, [sp, #16]
   11cac:	ldrsh	r2, [sp, #14]
   11cb0:	movw	r3, #12
   11cb4:	mul	r2, r2, r3
   11cb8:	add	r1, r1, r2
   11cbc:	ldr	r1, [r1, #4]
   11cc0:	str	r0, [r1]
   11cc4:	ldr	r0, [fp, #-8]
   11cc8:	ldrb	r0, [r0, #2]
   11ccc:	cmp	r0, #0
   11cd0:	movw	r0, #0
   11cd4:	movne	r0, #1
   11cd8:	tst	r0, #1
   11cdc:	movw	r0, #0
   11ce0:	moveq	r0, #1
   11ce4:	strb	r0, [fp, #-1]
   11ce8:	b	11d98 <error@@Base+0x4bc>
   11cec:	ldr	r0, [sp, #16]
   11cf0:	ldrsh	r1, [sp, #14]
   11cf4:	movw	r2, #12
   11cf8:	mul	r1, r1, r2
   11cfc:	add	r0, r0, r1
   11d00:	ldr	r0, [r0, #8]
   11d04:	movw	r1, #0
   11d08:	cmp	r0, r1
   11d0c:	beq	11d74 <error@@Base+0x498>
   11d10:	ldr	r0, [fp, #-8]
   11d14:	ldrsb	r0, [r0, #2]
   11d18:	cmp	r0, #0
   11d1c:	bne	11d74 <error@@Base+0x498>
   11d20:	ldr	r0, [sp, #16]
   11d24:	ldrsh	r1, [sp, #14]
   11d28:	movw	r2, #12
   11d2c:	mul	r1, r1, r2
   11d30:	add	r0, r0, r1
   11d34:	ldr	r0, [r0, #8]
   11d38:	ldrsb	r0, [r0]
   11d3c:	cmp	r0, #0
   11d40:	beq	11d48 <error@@Base+0x46c>
   11d44:	b	11d88 <error@@Base+0x4ac>
   11d48:	ldr	r0, [sp, #16]
   11d4c:	ldrsh	r1, [sp, #14]
   11d50:	movw	r2, #12
   11d54:	mul	r1, r1, r2
   11d58:	add	r0, r0, r1
   11d5c:	ldr	r0, [r0, #8]
   11d60:	movw	r1, #1
   11d64:	strb	r1, [r0]
   11d68:	movw	r0, #0
   11d6c:	strb	r0, [fp, #-1]
   11d70:	b	11d98 <error@@Base+0x4bc>
   11d74:	b	11d78 <error@@Base+0x49c>
   11d78:	ldr	r0, [pc, #36]	; 11da4 <error@@Base+0x4c8>
   11d7c:	add	r0, pc, r0
   11d80:	ldr	r1, [fp, #-8]
   11d84:	bl	1193c <error@@Base+0x60>
   11d88:	ldr	r0, [pc, #24]	; 11da8 <error@@Base+0x4cc>
   11d8c:	add	r0, pc, r0
   11d90:	ldr	r1, [fp, #-8]
   11d94:	bl	1193c <error@@Base+0x60>
   11d98:	ldrb	r0, [fp, #-1]
   11d9c:	mov	sp, fp
   11da0:	pop	{fp, pc}
   11da4:	andeq	r1, r0, ip, ror #21
   11da8:	andeq	r1, r0, fp, ror #21
   11dac:	push	{fp, lr}
   11db0:	mov	fp, sp
   11db4:	sub	sp, sp, #16
   11db8:	movw	r0, #1
   11dbc:	strh	r0, [fp, #-2]
   11dc0:	ldr	r0, [pc, #88]	; 11e20 <error@@Base+0x544>
   11dc4:	add	r0, pc, r0
   11dc8:	ldrsh	r1, [fp, #-2]
   11dcc:	ldrsh	r0, [r0]
   11dd0:	cmp	r1, r0
   11dd4:	bgt	11e18 <error@@Base+0x53c>
   11dd8:	ldrsh	r0, [fp, #-2]
   11ddc:	bl	11528 <abort@plt+0xbfc>
   11de0:	ldr	r1, [pc, #60]	; 11e24 <error@@Base+0x548>
   11de4:	ldr	r1, [pc, r1]
   11de8:	str	r0, [sp, #8]
   11dec:	ldr	r0, [sp, #8]
   11df0:	blx	r1
   11df4:	ldr	r1, [sp, #8]
   11df8:	str	r0, [sp, #4]
   11dfc:	mov	r0, r1
   11e00:	bl	10854 <free@plt>
   11e04:	ldrh	r0, [fp, #-2]
   11e08:	movw	r1, #1
   11e0c:	add	r0, r0, r1
   11e10:	strh	r0, [fp, #-2]
   11e14:	b	11dc0 <error@@Base+0x4e4>
   11e18:	mov	sp, fp
   11e1c:	pop	{fp, pc}
   11e20:	andeq	r2, r1, r6, lsr r3
   11e24:	muleq	r1, r8, r2
   11e28:	sub	sp, sp, #12
   11e2c:	str	r0, [sp, #8]
   11e30:	str	r1, [sp, #4]
   11e34:	str	r2, [sp]
   11e38:	ldr	r0, [sp, #4]
   11e3c:	ldr	r1, [sp, #8]
   11e40:	ldr	r2, [r1]
   11e44:	add	r0, r2, r0
   11e48:	str	r0, [r1]
   11e4c:	ldr	r0, [sp]
   11e50:	ldr	r1, [sp, #8]
   11e54:	ldr	r2, [r1, #4]
   11e58:	add	r0, r2, r0
   11e5c:	str	r0, [r1, #4]
   11e60:	add	sp, sp, #12
   11e64:	bx	lr
   11e68:	push	{fp, lr}
   11e6c:	mov	fp, sp
   11e70:	sub	sp, sp, #32
   11e74:	ldr	ip, [pc, #160]	; 11f1c <error@@Base+0x640>
   11e78:	ldr	ip, [pc, ip]
   11e7c:	str	r0, [fp, #-4]
   11e80:	str	r1, [fp, #-8]
   11e84:	str	r2, [fp, #-12]
   11e88:	str	r3, [sp, #16]
   11e8c:	ldr	r0, [fp, #-4]
   11e90:	ldr	r1, [fp, #-8]
   11e94:	blx	ip
   11e98:	str	r0, [sp, #12]
   11e9c:	ldr	r0, [sp, #12]
   11ea0:	movw	r1, #0
   11ea4:	cmp	r0, r1
   11ea8:	bne	11f00 <error@@Base+0x624>
   11eac:	ldr	r0, [pc, #112]	; 11f24 <error@@Base+0x648>
   11eb0:	ldr	r0, [pc, r0]
   11eb4:	movw	r1, #1
   11eb8:	str	r0, [sp, #8]
   11ebc:	mov	r0, r1
   11ec0:	movw	r1, #20
   11ec4:	ldr	r2, [sp, #8]
   11ec8:	blx	r2
   11ecc:	str	r0, [sp, #12]
   11ed0:	ldr	r0, [fp, #-8]
   11ed4:	bl	1086c <strdup@plt>
   11ed8:	ldr	r1, [pc, #64]	; 11f20 <error@@Base+0x644>
   11edc:	ldr	r1, [pc, r1]
   11ee0:	ldr	r2, [sp, #12]
   11ee4:	str	r0, [r2, #8]
   11ee8:	ldr	r0, [fp, #-4]
   11eec:	ldr	r2, [sp, #12]
   11ef0:	str	r1, [sp, #4]
   11ef4:	mov	r1, r2
   11ef8:	ldr	r2, [sp, #4]
   11efc:	blx	r2
   11f00:	ldr	r0, [sp, #12]
   11f04:	add	r0, r0, #12
   11f08:	ldr	r1, [fp, #-12]
   11f0c:	ldr	r2, [sp, #16]
   11f10:	bl	11e28 <error@@Base+0x54c>
   11f14:	mov	sp, fp
   11f18:	pop	{fp, pc}
   11f1c:	andeq	r2, r1, r4, lsr #4
   11f20:	muleq	r1, r4, r1
   11f24:	andeq	r2, r1, r4, lsr #4
   11f28:	push	{fp, lr}
   11f2c:	mov	fp, sp
   11f30:	sub	sp, sp, #40	; 0x28
   11f34:	ldr	r2, [pc, #504]	; 12134 <error@@Base+0x858>
   11f38:	add	r2, pc, r2
   11f3c:	ldr	r3, [pc, #500]	; 12138 <error@@Base+0x85c>
   11f40:	ldr	r3, [pc, r3]
   11f44:	str	r0, [fp, #-4]
   11f48:	str	r1, [fp, #-8]
   11f4c:	ldr	r0, [fp, #-8]
   11f50:	mov	r1, r2
   11f54:	blx	r3
   11f58:	str	r0, [fp, #-12]
   11f5c:	ldr	r0, [fp, #-12]
   11f60:	bl	1215c <error@@Base+0x880>
   11f64:	and	r0, r0, #255	; 0xff
   11f68:	cmp	r0, #0
   11f6c:	beq	120c0 <error@@Base+0x7e4>
   11f70:	ldr	r0, [pc, #452]	; 1213c <error@@Base+0x860>
   11f74:	add	r0, pc, r0
   11f78:	ldr	r1, [pc, #448]	; 12140 <error@@Base+0x864>
   11f7c:	add	r1, pc, r1
   11f80:	movw	r2, #45	; 0x2d
   11f84:	bl	10920 <strncmp@plt>
   11f88:	cmp	r0, #0
   11f8c:	bne	120c0 <error@@Base+0x7e4>
   11f90:	ldr	r0, [fp, #-12]
   11f94:	bl	1215c <error@@Base+0x880>
   11f98:	and	r0, r0, #255	; 0xff
   11f9c:	cmp	r0, #0
   11fa0:	beq	120c0 <error@@Base+0x7e4>
   11fa4:	ldr	r0, [pc, #424]	; 12154 <error@@Base+0x878>
   11fa8:	add	r0, pc, r0
   11fac:	ldr	r1, [pc, #420]	; 12158 <error@@Base+0x87c>
   11fb0:	add	r1, pc, r1
   11fb4:	bl	10830 <strcmp@plt>
   11fb8:	cmp	r0, #0
   11fbc:	bne	120c0 <error@@Base+0x7e4>
   11fc0:	ldr	r0, [fp, #-12]
   11fc4:	sub	r1, fp, #16
   11fc8:	bl	121b0 <error@@Base+0x8d4>
   11fcc:	and	r0, r0, #255	; 0xff
   11fd0:	cmp	r0, #0
   11fd4:	beq	120c0 <error@@Base+0x7e4>
   11fd8:	ldr	r0, [fp, #-12]
   11fdc:	add	r1, sp, #20
   11fe0:	bl	121b0 <error@@Base+0x8d4>
   11fe4:	and	r0, r0, #255	; 0xff
   11fe8:	cmp	r0, #0
   11fec:	beq	120c0 <error@@Base+0x7e4>
   11ff0:	ldr	r0, [fp, #-12]
   11ff4:	bl	1215c <error@@Base+0x880>
   11ff8:	and	r0, r0, #255	; 0xff
   11ffc:	cmp	r0, #0
   12000:	beq	120c0 <error@@Base+0x7e4>
   12004:	ldr	r0, [fp, #-12]
   12008:	bl	1215c <error@@Base+0x880>
   1200c:	and	r0, r0, #255	; 0xff
   12010:	cmp	r0, #0
   12014:	beq	120c0 <error@@Base+0x7e4>
   12018:	ldr	r0, [fp, #-4]
   1201c:	ldr	r1, [fp, #-16]
   12020:	ldr	r2, [sp, #20]
   12024:	bl	11e28 <error@@Base+0x54c>
   12028:	ldr	r0, [fp, #-12]
   1202c:	ldr	r1, [fp, #-4]
   12030:	add	r1, r1, #8
   12034:	bl	1222c <error@@Base+0x950>
   12038:	str	r0, [sp, #16]
   1203c:	ldr	r0, [fp, #-12]
   12040:	ldr	r1, [fp, #-4]
   12044:	add	r1, r1, #416	; 0x1a0
   12048:	bl	1222c <error@@Base+0x950>
   1204c:	str	r0, [sp, #12]
   12050:	ldr	r0, [fp, #-12]
   12054:	ldr	r1, [fp, #-4]
   12058:	add	r1, r1, #824	; 0x338
   1205c:	bl	1222c <error@@Base+0x950>
   12060:	ldr	r1, [fp, #-16]
   12064:	cmp	r1, #0
   12068:	ble	120bc <error@@Base+0x7e0>
   1206c:	ldr	r0, [fp, #-12]
   12070:	ldr	r1, [fp, #-4]
   12074:	add	r1, r1, #920	; 0x398
   12078:	bl	1222c <error@@Base+0x950>
   1207c:	ldr	r1, [sp, #16]
   12080:	cmp	r1, #0
   12084:	ble	12098 <error@@Base+0x7bc>
   12088:	ldr	r0, [fp, #-12]
   1208c:	ldr	r1, [fp, #-4]
   12090:	add	r1, r1, #992	; 0x3e0
   12094:	bl	12320 <error@@Base+0xa44>
   12098:	ldr	r0, [sp, #12]
   1209c:	cmp	r0, #0
   120a0:	ble	120b8 <error@@Base+0x7dc>
   120a4:	ldr	r0, [fp, #-12]
   120a8:	ldr	r1, [fp, #-4]
   120ac:	movw	r2, #9048	; 0x2358
   120b0:	add	r1, r1, r2
   120b4:	bl	12320 <error@@Base+0xa44>
   120b8:	b	120bc <error@@Base+0x7e0>
   120bc:	b	12110 <error@@Base+0x834>
   120c0:	ldr	r0, [fp, #-8]
   120c4:	movw	r1, #0
   120c8:	cmp	r0, r1
   120cc:	beq	120dc <error@@Base+0x800>
   120d0:	ldr	r0, [fp, #-8]
   120d4:	str	r0, [sp, #8]
   120d8:	b	120ec <error@@Base+0x810>
   120dc:	ldr	r0, [pc, #96]	; 12144 <error@@Base+0x868>
   120e0:	add	r0, pc, r0
   120e4:	str	r0, [sp, #8]
   120e8:	b	120ec <error@@Base+0x810>
   120ec:	ldr	r0, [sp, #8]
   120f0:	ldr	r1, [pc, #80]	; 12148 <error@@Base+0x86c>
   120f4:	add	r1, pc, r1
   120f8:	ldr	r2, [pc, #76]	; 1214c <error@@Base+0x870>
   120fc:	ldr	r2, [pc, r2]
   12100:	str	r0, [sp, #4]
   12104:	mov	r0, r1
   12108:	ldr	r1, [sp, #4]
   1210c:	blx	r2
   12110:	ldr	r0, [pc, #56]	; 12150 <error@@Base+0x874>
   12114:	ldr	r0, [pc, r0]
   12118:	ldr	r1, [fp, #-12]
   1211c:	str	r0, [sp]
   12120:	mov	r0, r1
   12124:	ldr	r1, [sp]
   12128:	blx	r1
   1212c:	mov	sp, fp
   12130:	pop	{fp, pc}
   12134:	andeq	r1, r0, r0, asr r9
   12138:	andeq	r2, r1, r8, lsr r1
   1213c:	andeq	r2, r1, r9, lsl #3
   12140:	andeq	r1, r0, lr, lsl #18
   12144:	andeq	r1, r0, ip, lsl r8
   12148:	strdeq	r1, [r0], -r6
   1214c:	ldrdeq	r1, [r1], -ip
   12150:	andeq	r1, r1, ip, asr #30
   12154:	andeq	r2, r1, r5, asr r1
   12158:	andeq	r1, r0, sl, lsl #18
   1215c:	push	{fp, lr}
   12160:	mov	fp, sp
   12164:	sub	sp, sp, #8
   12168:	ldr	r1, [pc, #60]	; 121ac <error@@Base+0x8d0>
   1216c:	add	r1, pc, r1
   12170:	str	r0, [sp, #4]
   12174:	ldr	r2, [sp, #4]
   12178:	mov	r0, r1
   1217c:	movw	r1, #99	; 0x63
   12180:	bl	10860 <fgets@plt>
   12184:	movw	r1, #0
   12188:	cmp	r0, r1
   1218c:	movw	r0, #0
   12190:	movne	r0, #1
   12194:	tst	r0, #1
   12198:	movw	r0, #1
   1219c:	moveq	r0, #0
   121a0:	and	r0, r0, #255	; 0xff
   121a4:	mov	sp, fp
   121a8:	pop	{fp, pc}
   121ac:	muleq	r1, r1, pc	; <UNPREDICTABLE>
   121b0:	push	{fp, lr}
   121b4:	mov	fp, sp
   121b8:	sub	sp, sp, #16
   121bc:	str	r0, [fp, #-4]
   121c0:	str	r1, [sp, #8]
   121c4:	ldr	r0, [fp, #-4]
   121c8:	bl	1215c <error@@Base+0x880>
   121cc:	and	r0, r0, #255	; 0xff
   121d0:	cmp	r0, #0
   121d4:	movw	r0, #0
   121d8:	str	r0, [sp, #4]
   121dc:	beq	12208 <error@@Base+0x92c>
   121e0:	ldr	r0, [pc, #60]	; 12224 <error@@Base+0x948>
   121e4:	add	r0, pc, r0
   121e8:	ldr	r1, [pc, #56]	; 12228 <error@@Base+0x94c>
   121ec:	add	r1, pc, r1
   121f0:	ldr	r2, [sp, #8]
   121f4:	bl	108d8 <__isoc99_sscanf@plt>
   121f8:	cmp	r0, #1
   121fc:	movw	r0, #0
   12200:	moveq	r0, #1
   12204:	str	r0, [sp, #4]
   12208:	ldr	r0, [sp, #4]
   1220c:	tst	r0, #1
   12210:	movw	r0, #1
   12214:	moveq	r0, #0
   12218:	and	r0, r0, #255	; 0xff
   1221c:	mov	sp, fp
   12220:	pop	{fp, pc}
   12224:	andeq	r1, r1, r9, lsl pc
   12228:	andeq	r1, r0, r6, ror r7
   1222c:	push	{fp, lr}
   12230:	mov	fp, sp
   12234:	sub	sp, sp, #24
   12238:	str	r0, [fp, #-4]
   1223c:	str	r1, [fp, #-8]
   12240:	movw	r0, #0
   12244:	str	r0, [sp]
   12248:	ldr	r0, [fp, #-4]
   1224c:	bl	1215c <error@@Base+0x880>
   12250:	and	r0, r0, #255	; 0xff
   12254:	cmp	r0, #0
   12258:	beq	12308 <error@@Base+0xa2c>
   1225c:	ldr	r0, [fp, #-4]
   12260:	bl	1215c <error@@Base+0x880>
   12264:	and	r0, r0, #255	; 0xff
   12268:	cmp	r0, #0
   1226c:	beq	12308 <error@@Base+0xa2c>
   12270:	b	12274 <error@@Base+0x998>
   12274:	ldr	r0, [fp, #-4]
   12278:	add	r1, sp, #12
   1227c:	add	r2, sp, #8
   12280:	bl	129b8 <error@@Base+0x10dc>
   12284:	sxtb	r0, r0
   12288:	cmp	r0, #0
   1228c:	beq	12304 <error@@Base+0xa28>
   12290:	ldr	r0, [pc, #124]	; 12314 <error@@Base+0xa38>
   12294:	add	r0, pc, r0
   12298:	add	r0, r0, #29
   1229c:	bl	10908 <atoi@plt>
   122a0:	str	r0, [sp, #4]
   122a4:	ldr	r0, [sp, #4]
   122a8:	cmp	r0, #0
   122ac:	bne	122e8 <error@@Base+0xa0c>
   122b0:	ldr	r0, [pc, #96]	; 12318 <error@@Base+0xa3c>
   122b4:	add	r0, pc, r0
   122b8:	add	r0, r0, #29
   122bc:	ldr	r1, [pc, #88]	; 1231c <error@@Base+0xa40>
   122c0:	add	r1, pc, r1
   122c4:	bl	10830 <strcmp@plt>
   122c8:	cmp	r0, #0
   122cc:	bne	122dc <error@@Base+0xa00>
   122d0:	ldr	r0, [sp, #12]
   122d4:	str	r0, [sp]
   122d8:	b	122e4 <error@@Base+0xa08>
   122dc:	movw	r0, #11
   122e0:	str	r0, [sp, #4]
   122e4:	b	122e8 <error@@Base+0xa0c>
   122e8:	ldr	r0, [fp, #-8]
   122ec:	ldr	r1, [sp, #4]
   122f0:	add	r0, r0, r1, lsl #3
   122f4:	ldr	r1, [sp, #12]
   122f8:	ldr	r2, [sp, #8]
   122fc:	bl	11e28 <error@@Base+0x54c>
   12300:	b	12274 <error@@Base+0x998>
   12304:	b	12308 <error@@Base+0xa2c>
   12308:	ldr	r0, [sp]
   1230c:	mov	sp, fp
   12310:	pop	{fp, pc}
   12314:	andeq	r1, r1, r9, ror #28
   12318:	andeq	r1, r1, r9, asr #28
   1231c:	muleq	r0, r6, r6
   12320:	push	{fp, lr}
   12324:	mov	fp, sp
   12328:	sub	sp, sp, #24
   1232c:	str	r0, [fp, #-4]
   12330:	str	r1, [fp, #-8]
   12334:	ldr	r0, [fp, #-4]
   12338:	bl	1215c <error@@Base+0x880>
   1233c:	and	r0, r0, #255	; 0xff
   12340:	cmp	r0, #0
   12344:	beq	123d0 <error@@Base+0xaf4>
   12348:	ldr	r0, [fp, #-4]
   1234c:	bl	1215c <error@@Base+0x880>
   12350:	and	r0, r0, #255	; 0xff
   12354:	cmp	r0, #0
   12358:	beq	123d0 <error@@Base+0xaf4>
   1235c:	b	12360 <error@@Base+0xa84>
   12360:	ldr	r0, [fp, #-4]
   12364:	add	r1, sp, #12
   12368:	add	r2, sp, #8
   1236c:	bl	129b8 <error@@Base+0x10dc>
   12370:	sxtb	r0, r0
   12374:	cmp	r0, #0
   12378:	beq	123cc <error@@Base+0xaf0>
   1237c:	ldr	r0, [pc, #84]	; 123d8 <error@@Base+0xafc>
   12380:	add	r0, pc, r0
   12384:	add	r1, r0, #29
   12388:	ldr	r2, [pc, #76]	; 123dc <error@@Base+0xb00>
   1238c:	add	r2, pc, r2
   12390:	str	r0, [sp, #4]
   12394:	mov	r0, r2
   12398:	str	r1, [sp]
   1239c:	bl	108b4 <strlen@plt>
   123a0:	sub	r0, r0, #1
   123a4:	ldr	r1, [sp, #4]
   123a8:	add	r0, r1, r0
   123ac:	movw	r2, #0
   123b0:	strb	r2, [r0]
   123b4:	ldr	r0, [fp, #-8]
   123b8:	ldr	r2, [sp, #12]
   123bc:	ldr	r3, [sp, #8]
   123c0:	ldr	r1, [sp]
   123c4:	bl	11e68 <error@@Base+0x58c>
   123c8:	b	12360 <error@@Base+0xa84>
   123cc:	b	123d0 <error@@Base+0xaf4>
   123d0:	mov	sp, fp
   123d4:	pop	{fp, pc}
   123d8:	andeq	r1, r1, sp, ror sp
   123dc:	andeq	r1, r1, r1, ror sp
   123e0:	push	{fp, lr}
   123e4:	mov	fp, sp
   123e8:	sub	sp, sp, #40	; 0x28
   123ec:	ldr	r2, [pc, #532]	; 12608 <error@@Base+0xd2c>
   123f0:	add	r2, pc, r2
   123f4:	ldr	r3, [pc, #528]	; 1260c <error@@Base+0xd30>
   123f8:	ldr	r3, [pc, r3]
   123fc:	str	r0, [fp, #-4]
   12400:	str	r1, [fp, #-8]
   12404:	ldr	r0, [fp, #-8]
   12408:	mov	r1, r2
   1240c:	blx	r3
   12410:	ldr	r1, [pc, #484]	; 125fc <error@@Base+0xd20>
   12414:	add	r1, pc, r1
   12418:	ldr	r2, [pc, #480]	; 12600 <error@@Base+0xd24>
   1241c:	add	r2, pc, r2
   12420:	ldr	r3, [pc, #476]	; 12604 <error@@Base+0xd28>
   12424:	add	r3, pc, r3
   12428:	str	r0, [fp, #-12]
   1242c:	ldr	r0, [fp, #-12]
   12430:	bl	108c0 <fprintf@plt>
   12434:	ldr	r1, [pc, #444]	; 125f8 <error@@Base+0xd1c>
   12438:	add	r1, pc, r1
   1243c:	ldr	r2, [fp, #-12]
   12440:	ldr	r3, [fp, #-4]
   12444:	ldr	r3, [r3]
   12448:	str	r0, [fp, #-16]
   1244c:	mov	r0, r2
   12450:	mov	r2, r3
   12454:	bl	108c0 <fprintf@plt>
   12458:	ldr	r1, [pc, #404]	; 125f4 <error@@Base+0xd18>
   1245c:	add	r1, pc, r1
   12460:	ldr	r2, [fp, #-12]
   12464:	ldr	r3, [fp, #-4]
   12468:	ldr	r3, [r3, #4]
   1246c:	str	r0, [sp, #20]
   12470:	mov	r0, r2
   12474:	mov	r2, r3
   12478:	bl	108c0 <fprintf@plt>
   1247c:	ldr	r1, [fp, #-12]
   12480:	ldr	r2, [fp, #-4]
   12484:	str	r0, [sp, #16]
   12488:	mov	r0, r1
   1248c:	mov	r1, r2
   12490:	bl	12620 <error@@Base+0xd44>
   12494:	ldr	r0, [pc, #340]	; 125f0 <error@@Base+0xd14>
   12498:	add	r0, pc, r0
   1249c:	ldr	r1, [fp, #-12]
   124a0:	bl	10914 <fputs@plt>
   124a4:	ldr	r1, [pc, #320]	; 125ec <error@@Base+0xd10>
   124a8:	add	r3, pc, r1
   124ac:	ldr	r1, [fp, #-12]
   124b0:	ldr	r2, [fp, #-4]
   124b4:	add	r2, r2, #8
   124b8:	str	r0, [sp, #12]
   124bc:	mov	r0, r1
   124c0:	mov	r1, r2
   124c4:	movw	r2, #50	; 0x32
   124c8:	movw	ip, #0
   124cc:	str	ip, [sp]
   124d0:	movw	ip, #1
   124d4:	str	ip, [sp, #4]
   124d8:	bl	126c0 <error@@Base+0xde4>
   124dc:	ldr	r0, [pc, #260]	; 125e8 <error@@Base+0xd0c>
   124e0:	add	r3, pc, r0
   124e4:	ldr	r0, [fp, #-12]
   124e8:	ldr	r1, [fp, #-4]
   124ec:	add	r1, r1, #416	; 0x1a0
   124f0:	movw	r2, #50	; 0x32
   124f4:	movw	ip, #0
   124f8:	str	ip, [sp]
   124fc:	movw	ip, #1
   12500:	str	ip, [sp, #4]
   12504:	bl	126c0 <error@@Base+0xde4>
   12508:	ldr	r0, [pc, #212]	; 125e4 <error@@Base+0xd08>
   1250c:	add	r3, pc, r0
   12510:	ldr	r0, [fp, #-12]
   12514:	ldr	r1, [fp, #-4]
   12518:	add	r1, r1, #824	; 0x338
   1251c:	movw	r2, #10
   12520:	movw	ip, #1
   12524:	str	ip, [sp]
   12528:	str	ip, [sp, #4]
   1252c:	bl	126c0 <error@@Base+0xde4>
   12530:	ldr	r0, [fp, #-4]
   12534:	ldr	r0, [r0]
   12538:	cmp	r0, #0
   1253c:	ble	125c0 <error@@Base+0xce4>
   12540:	ldr	r0, [pc, #200]	; 12610 <error@@Base+0xd34>
   12544:	add	r3, pc, r0
   12548:	ldr	r0, [fp, #-12]
   1254c:	ldr	r1, [fp, #-4]
   12550:	add	r1, r1, #920	; 0x398
   12554:	movw	r2, #8
   12558:	movw	ip, #0
   1255c:	str	ip, [sp]
   12560:	str	ip, [sp, #4]
   12564:	bl	126c0 <error@@Base+0xde4>
   12568:	ldr	r0, [fp, #-4]
   1256c:	ldr	r0, [r0, #8]
   12570:	cmp	r0, #0
   12574:	ble	12590 <error@@Base+0xcb4>
   12578:	ldr	r0, [pc, #148]	; 12614 <error@@Base+0xd38>
   1257c:	add	r2, pc, r0
   12580:	ldr	r0, [fp, #-12]
   12584:	ldr	r1, [fp, #-4]
   12588:	add	r1, r1, #992	; 0x3e0
   1258c:	bl	12864 <error@@Base+0xf88>
   12590:	ldr	r0, [fp, #-4]
   12594:	ldr	r0, [r0, #416]	; 0x1a0
   12598:	cmp	r0, #0
   1259c:	ble	125bc <error@@Base+0xce0>
   125a0:	ldr	r0, [pc, #112]	; 12618 <error@@Base+0xd3c>
   125a4:	add	r2, pc, r0
   125a8:	ldr	r0, [fp, #-12]
   125ac:	ldr	r1, [fp, #-4]
   125b0:	movw	r3, #9048	; 0x2358
   125b4:	add	r1, r1, r3
   125b8:	bl	12864 <error@@Base+0xf88>
   125bc:	b	125c0 <error@@Base+0xce4>
   125c0:	ldr	r0, [pc, #84]	; 1261c <error@@Base+0xd40>
   125c4:	ldr	r0, [pc, r0]
   125c8:	ldr	r1, [fp, #-12]
   125cc:	str	r0, [sp, #8]
   125d0:	mov	r0, r1
   125d4:	ldr	r1, [sp, #8]
   125d8:	blx	r1
   125dc:	mov	sp, fp
   125e0:	pop	{fp, pc}
   125e4:	andeq	r1, r0, fp, lsr #8
   125e8:	andeq	r1, r0, r0, ror #8
   125ec:	andeq	r1, r0, r5, lsl #9
   125f0:	muleq	r0, r3, r2
   125f4:			; <UNDEFINED> instruction: 0x000014bb
   125f8:	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
   125fc:	strdeq	r1, [r0], -r0
   12600:	andeq	r1, r0, lr, ror #8
   12604:	muleq	r0, r6, r4
   12608:	andeq	r1, r0, r2, lsl r5
   1260c:	andeq	r1, r1, r0, lsl #25
   12610:	andeq	r1, r0, sl, lsl #8
   12614:			; <UNDEFINED> instruction: 0x000013b1
   12618:	muleq	r0, ip, r3
   1261c:	muleq	r1, ip, sl
   12620:	push	{fp, lr}
   12624:	mov	fp, sp
   12628:	sub	sp, sp, #8
   1262c:	str	r0, [sp, #4]
   12630:	str	r1, [sp]
   12634:	ldr	r0, [sp]
   12638:	ldr	r0, [r0]
   1263c:	cmp	r0, #0
   12640:	bne	12658 <error@@Base+0xd7c>
   12644:	ldr	r0, [pc, #112]	; 126bc <error@@Base+0xde0>
   12648:	add	r0, pc, r0
   1264c:	ldr	r1, [sp, #4]
   12650:	bl	10914 <fputs@plt>
   12654:	b	126a4 <error@@Base+0xdc8>
   12658:	ldr	r0, [pc, #88]	; 126b8 <error@@Base+0xddc>
   1265c:	add	r1, pc, r0
   12660:	vldr	d16, [pc, #72]	; 126b0 <error@@Base+0xdd4>
   12664:	ldr	r0, [sp, #4]
   12668:	ldr	r2, [sp]
   1266c:	ldr	r2, [r2]
   12670:	ldr	r3, [sp]
   12674:	ldr	r3, [r3, #4]
   12678:	sub	r2, r2, r3
   1267c:	vmov	s0, r2
   12680:	vcvt.f64.s32	d17, s0
   12684:	vmul.f64	d16, d16, d17
   12688:	ldr	r2, [sp]
   1268c:	ldr	r2, [r2]
   12690:	vmov	s0, r2
   12694:	vcvt.f64.s32	d17, s0
   12698:	vdiv.f64	d16, d16, d17
   1269c:	vmov	r2, r3, d16
   126a0:	bl	108c0 <fprintf@plt>
   126a4:	mov	sp, fp
   126a8:	pop	{fp, pc}
   126ac:	nop	{0}
   126b0:	andeq	r0, r0, r0
   126b4:	subsmi	r0, r9, r0
   126b8:	andeq	r1, r0, r3, lsl r3
   126bc:	andeq	r1, r0, lr, lsl r3
   126c0:	push	{r4, sl, fp, lr}
   126c4:	add	fp, sp, #8
   126c8:	sub	sp, sp, #24
   126cc:	ldr	ip, [fp, #12]
   126d0:	ldr	lr, [fp, #8]
   126d4:	ldr	r4, [pc, #376]	; 12854 <error@@Base+0xf78>
   126d8:	add	r4, pc, r4
   126dc:	str	r0, [fp, #-12]
   126e0:	str	r1, [sp, #16]
   126e4:	strh	r2, [sp, #14]
   126e8:	str	r3, [sp, #8]
   126ec:	strb	lr, [sp, #7]
   126f0:	strb	ip, [sp, #6]
   126f4:	ldr	r0, [fp, #-12]
   126f8:	ldr	r2, [sp, #8]
   126fc:	mov	r1, r4
   12700:	bl	108c0 <fprintf@plt>
   12704:	ldr	r1, [fp, #-12]
   12708:	str	r0, [sp]
   1270c:	mov	r0, r1
   12710:	movw	r1, #0
   12714:	bl	12a3c <error@@Base+0x1160>
   12718:	ldr	r0, [pc, #296]	; 12848 <error@@Base+0xf6c>
   1271c:	add	r1, pc, r0
   12720:	ldr	r0, [pc, #292]	; 1284c <error@@Base+0xf70>
   12724:	add	r0, pc, r0
   12728:	ldr	r2, [pc, #288]	; 12850 <error@@Base+0xf74>
   1272c:	add	r2, pc, r2
   12730:	ldr	r3, [fp, #-12]
   12734:	ldrb	ip, [sp, #7]
   12738:	cmp	ip, #0
   1273c:	movw	ip, #0
   12740:	movne	ip, #1
   12744:	tst	ip, #1
   12748:	movne	r2, r0
   1274c:	mov	r0, r3
   12750:	bl	108c0 <fprintf@plt>
   12754:	movw	r1, #1
   12758:	strh	r1, [sp, #4]
   1275c:	ldrsh	r0, [sp, #4]
   12760:	ldrsh	r1, [sp, #14]
   12764:	cmp	r0, r1
   12768:	bgt	127c4 <error@@Base+0xee8>
   1276c:	ldr	r0, [sp, #16]
   12770:	ldrsh	r1, [sp, #4]
   12774:	add	r0, r0, r1, lsl #3
   12778:	ldr	r0, [r0]
   1277c:	cmp	r0, #0
   12780:	ble	127ac <error@@Base+0xed0>
   12784:	ldr	r0, [fp, #-12]
   12788:	ldr	r1, [sp, #16]
   1278c:	ldrsh	r2, [sp, #4]
   12790:	add	r1, r1, r2, lsl #3
   12794:	bl	12a3c <error@@Base+0x1160>
   12798:	ldr	r0, [pc, #192]	; 12860 <error@@Base+0xf84>
   1279c:	add	r1, pc, r0
   127a0:	ldr	r0, [fp, #-12]
   127a4:	ldrsh	r2, [sp, #4]
   127a8:	bl	108c0 <fprintf@plt>
   127ac:	b	127b0 <error@@Base+0xed4>
   127b0:	ldrh	r0, [sp, #4]
   127b4:	movw	r1, #1
   127b8:	add	r0, r0, r1
   127bc:	strh	r0, [sp, #4]
   127c0:	b	1275c <error@@Base+0xe80>
   127c4:	ldrb	r0, [sp, #7]
   127c8:	cmp	r0, #0
   127cc:	beq	12818 <error@@Base+0xf3c>
   127d0:	ldr	r0, [sp, #16]
   127d4:	ldrsh	r1, [sp, #14]
   127d8:	add	r1, r1, #1
   127dc:	add	r0, r0, r1, lsl #3
   127e0:	ldr	r0, [r0]
   127e4:	cmp	r0, #0
   127e8:	ble	12818 <error@@Base+0xf3c>
   127ec:	ldr	r0, [fp, #-12]
   127f0:	ldr	r1, [sp, #16]
   127f4:	ldrsh	r2, [sp, #14]
   127f8:	add	r2, r2, #1
   127fc:	add	r1, r1, r2, lsl #3
   12800:	bl	12a3c <error@@Base+0x1160>
   12804:	ldr	r0, [pc, #76]	; 12858 <error@@Base+0xf7c>
   12808:	add	r1, pc, r0
   1280c:	ldr	r0, [fp, #-12]
   12810:	ldrsh	r2, [sp, #14]
   12814:	bl	108c0 <fprintf@plt>
   12818:	ldrsb	r0, [sp, #6]
   1281c:	cmp	r0, #0
   12820:	beq	12840 <error@@Base+0xf64>
   12824:	ldr	r0, [fp, #-12]
   12828:	ldr	r1, [sp, #16]
   1282c:	bl	12a3c <error@@Base+0x1160>
   12830:	ldr	r0, [pc, #36]	; 1285c <error@@Base+0xf80>
   12834:	add	r0, pc, r0
   12838:	ldr	r1, [fp, #-12]
   1283c:	bl	10914 <fputs@plt>
   12840:	sub	sp, fp, #8
   12844:	pop	{r4, sl, fp, pc}
   12848:	andeq	r1, r0, sl, asr r2
   1284c:	andeq	r1, r0, r6, asr r2
   12850:	andeq	r1, r0, r5, asr r2
   12854:	muleq	r0, sp, r2
   12858:	andeq	r1, r0, r9, lsl #3
   1285c:	andeq	r1, r0, r2, lsr #2
   12860:	andeq	r1, r0, ip, ror #3
   12864:	push	{fp, lr}
   12868:	mov	fp, sp
   1286c:	sub	sp, sp, #40	; 0x28
   12870:	ldr	r3, [pc, #312]	; 129b0 <error@@Base+0x10d4>
   12874:	ldr	r3, [pc, r3]
   12878:	str	r0, [fp, #-4]
   1287c:	str	r1, [fp, #-8]
   12880:	str	r2, [fp, #-12]
   12884:	ldr	r0, [fp, #-8]
   12888:	blx	r3
   1288c:	ldr	r0, [pc, #276]	; 129a8 <error@@Base+0x10cc>
   12890:	add	r0, pc, r0
   12894:	ldr	r1, [pc, #272]	; 129ac <error@@Base+0x10d0>
   12898:	ldr	r1, [pc, r1]
   1289c:	ldr	r2, [fp, #-8]
   128a0:	movw	r3, #8052	; 0x1f74
   128a4:	add	r2, r2, r3
   128a8:	ldr	r2, [r2]
   128ac:	ldr	r3, [fp, #-8]
   128b0:	movw	ip, #8048	; 0x1f70
   128b4:	add	r3, r3, ip
   128b8:	ldr	r3, [r3]
   128bc:	str	r0, [sp, #20]
   128c0:	mov	r0, r2
   128c4:	str	r1, [sp, #16]
   128c8:	mov	r1, r3
   128cc:	ldr	r2, [sp, #20]
   128d0:	ldr	r3, [sp, #16]
   128d4:	blx	r3
   128d8:	ldr	r0, [pc, #196]	; 129a4 <error@@Base+0x10c8>
   128dc:	add	r1, pc, r0
   128e0:	ldr	r0, [fp, #-4]
   128e4:	ldr	r2, [fp, #-12]
   128e8:	bl	108c0 <fprintf@plt>
   128ec:	ldr	r1, [fp, #-4]
   128f0:	str	r0, [sp, #12]
   128f4:	mov	r0, r1
   128f8:	movw	r1, #0
   128fc:	bl	12a3c <error@@Base+0x1160>
   12900:	ldr	r1, [fp, #-4]
   12904:	movw	r0, #10
   12908:	bl	108f0 <fputc@plt>
   1290c:	movw	r1, #0
   12910:	str	r1, [fp, #-16]
   12914:	ldr	r0, [fp, #-16]
   12918:	ldr	r1, [fp, #-8]
   1291c:	movw	r2, #8052	; 0x1f74
   12920:	add	r1, r1, r2
   12924:	ldr	r1, [r1]
   12928:	cmp	r0, r1
   1292c:	bge	1299c <error@@Base+0x10c0>
   12930:	ldr	r0, [pc, #124]	; 129b4 <error@@Base+0x10d8>
   12934:	add	r1, pc, r0
   12938:	ldr	r0, [fp, #-4]
   1293c:	ldr	r2, [fp, #-8]
   12940:	movw	r3, #8048	; 0x1f70
   12944:	ldr	r2, [r2, r3]
   12948:	ldr	ip, [fp, #-16]
   1294c:	ldr	r2, [r2, ip, lsl #2]
   12950:	add	r2, r2, #12
   12954:	str	r1, [sp, #8]
   12958:	mov	r1, r2
   1295c:	str	r3, [sp, #4]
   12960:	bl	12a3c <error@@Base+0x1160>
   12964:	ldr	r0, [fp, #-4]
   12968:	ldr	r1, [fp, #-8]
   1296c:	ldr	r2, [sp, #4]
   12970:	ldr	r1, [r1, r2]
   12974:	ldr	r3, [fp, #-16]
   12978:	add	r1, r1, r3, lsl #2
   1297c:	ldr	r1, [r1]
   12980:	ldr	r2, [r1, #8]
   12984:	ldr	r1, [sp, #8]
   12988:	bl	108c0 <fprintf@plt>
   1298c:	ldr	r0, [fp, #-16]
   12990:	add	r0, r0, #1
   12994:	str	r0, [fp, #-16]
   12998:	b	12914 <error@@Base+0x1038>
   1299c:	mov	sp, fp
   129a0:	pop	{fp, pc}
   129a4:	muleq	r0, r9, r0
   129a8:	andeq	r0, r0, r8, lsr r2
   129ac:	andeq	r1, r1, r8, ror #15
   129b0:	andeq	r1, r1, ip, lsl r8
   129b4:	andeq	r1, r0, r2, asr #32
   129b8:	push	{fp, lr}
   129bc:	mov	fp, sp
   129c0:	sub	sp, sp, #16
   129c4:	str	r0, [fp, #-4]
   129c8:	str	r1, [sp, #8]
   129cc:	str	r2, [sp, #4]
   129d0:	ldr	r0, [fp, #-4]
   129d4:	bl	1215c <error@@Base+0x880>
   129d8:	and	r0, r0, #255	; 0xff
   129dc:	cmp	r0, #0
   129e0:	movw	r0, #0
   129e4:	str	r0, [sp]
   129e8:	beq	12a18 <error@@Base+0x113c>
   129ec:	ldr	r0, [pc, #64]	; 12a34 <error@@Base+0x1158>
   129f0:	add	r0, pc, r0
   129f4:	ldr	r1, [pc, #60]	; 12a38 <error@@Base+0x115c>
   129f8:	add	r1, pc, r1
   129fc:	ldr	r2, [sp, #8]
   12a00:	ldr	r3, [sp, #4]
   12a04:	bl	108d8 <__isoc99_sscanf@plt>
   12a08:	cmp	r0, #2
   12a0c:	movw	r0, #0
   12a10:	moveq	r0, #1
   12a14:	str	r0, [sp]
   12a18:	ldr	r0, [sp]
   12a1c:	tst	r0, #1
   12a20:	movw	r0, #1
   12a24:	moveq	r0, #0
   12a28:	and	r0, r0, #255	; 0xff
   12a2c:	mov	sp, fp
   12a30:	pop	{fp, pc}
   12a34:	andeq	r1, r1, sp, lsl #14
   12a38:	andeq	r0, r0, r6, ror #30
   12a3c:	push	{fp, lr}
   12a40:	mov	fp, sp
   12a44:	sub	sp, sp, #16
   12a48:	str	r0, [fp, #-4]
   12a4c:	str	r1, [sp, #8]
   12a50:	ldr	r0, [sp, #8]
   12a54:	movw	r1, #0
   12a58:	cmp	r0, r1
   12a5c:	beq	12a9c <error@@Base+0x11c0>
   12a60:	ldr	r0, [pc, #96]	; 12ac8 <error@@Base+0x11ec>
   12a64:	add	r1, pc, r0
   12a68:	ldr	r0, [fp, #-4]
   12a6c:	ldr	r2, [sp, #8]
   12a70:	ldr	r2, [r2]
   12a74:	ldr	r3, [sp, #8]
   12a78:	ldr	r3, [r3, #4]
   12a7c:	bl	108c0 <fprintf@plt>
   12a80:	ldr	r1, [fp, #-4]
   12a84:	ldr	r2, [sp, #8]
   12a88:	str	r0, [sp, #4]
   12a8c:	mov	r0, r1
   12a90:	mov	r1, r2
   12a94:	bl	12620 <error@@Base+0xd44>
   12a98:	b	12aac <error@@Base+0x11d0>
   12a9c:	ldr	r0, [pc, #32]	; 12ac4 <error@@Base+0x11e8>
   12aa0:	add	r0, pc, r0
   12aa4:	ldr	r1, [fp, #-4]
   12aa8:	bl	10914 <fputs@plt>
   12aac:	ldr	r0, [pc, #24]	; 12acc <error@@Base+0x11f0>
   12ab0:	add	r0, pc, r0
   12ab4:	ldr	r1, [fp, #-4]
   12ab8:	bl	10914 <fputs@plt>
   12abc:	mov	sp, fp
   12ac0:	pop	{fp, pc}
   12ac4:	andeq	r0, r0, r5, lsl #30
   12ac8:	andeq	r0, r0, r6, lsr pc
   12acc:	andeq	r0, r0, r0, lsl pc
   12ad0:	push	{fp, lr}
   12ad4:	mov	fp, sp
   12ad8:	sub	sp, sp, #8
   12adc:	ldr	r2, [pc, #36]	; 12b08 <error@@Base+0x122c>
   12ae0:	ldr	r2, [pc, r2]
   12ae4:	str	r0, [sp, #4]
   12ae8:	str	r1, [sp]
   12aec:	ldr	r0, [sp, #4]
   12af0:	ldr	r0, [r0, #8]
   12af4:	ldr	r1, [sp]
   12af8:	ldr	r1, [r1, #8]
   12afc:	blx	r2
   12b00:	mov	sp, fp
   12b04:	pop	{fp, pc}
   12b08:	andeq	r1, r1, ip, ror #11
   12b0c:	sub	sp, sp, #4
   12b10:	str	r0, [sp]
   12b14:	ldr	r0, [sp]
   12b18:	movw	r1, #0
   12b1c:	str	r1, [r0, #4]
   12b20:	ldr	r0, [sp]
   12b24:	str	r1, [r0]
   12b28:	ldr	r0, [sp]
   12b2c:	str	r1, [r0, #8]
   12b30:	ldr	r0, [sp]
   12b34:	str	r1, [r0, #12]
   12b38:	add	sp, sp, #4
   12b3c:	bx	lr
   12b40:	push	{fp, lr}
   12b44:	mov	fp, sp
   12b48:	sub	sp, sp, #8
   12b4c:	str	r0, [sp, #4]
   12b50:	str	r1, [sp]
   12b54:	ldr	r0, [sp, #4]
   12b58:	ldr	r2, [sp]
   12b5c:	ldr	r1, [sp, #4]
   12b60:	ldr	r3, [r1]
   12b64:	movw	r1, #0
   12b68:	bl	12b74 <error@@Base+0x1298>
   12b6c:	mov	sp, fp
   12b70:	pop	{fp, pc}
   12b74:	push	{fp, lr}
   12b78:	mov	fp, sp
   12b7c:	sub	sp, sp, #16
   12b80:	str	r0, [fp, #-4]
   12b84:	str	r1, [sp, #8]
   12b88:	str	r2, [sp, #4]
   12b8c:	str	r3, [sp]
   12b90:	ldr	r0, [sp, #8]
   12b94:	ldr	r1, [sp, #4]
   12b98:	str	r0, [r1]
   12b9c:	ldr	r0, [sp]
   12ba0:	ldr	r1, [sp, #4]
   12ba4:	str	r0, [r1, #4]
   12ba8:	ldr	r0, [sp, #8]
   12bac:	movw	r1, #0
   12bb0:	cmp	r0, r1
   12bb4:	beq	12bc8 <error@@Base+0x12ec>
   12bb8:	ldr	r0, [sp, #4]
   12bbc:	ldr	r1, [sp, #8]
   12bc0:	str	r0, [r1, #4]
   12bc4:	b	12bd4 <error@@Base+0x12f8>
   12bc8:	ldr	r0, [sp, #4]
   12bcc:	ldr	r1, [fp, #-4]
   12bd0:	str	r0, [r1]
   12bd4:	ldr	r0, [sp]
   12bd8:	movw	r1, #0
   12bdc:	cmp	r0, r1
   12be0:	beq	12bf4 <error@@Base+0x1318>
   12be4:	ldr	r0, [sp, #4]
   12be8:	ldr	r1, [sp]
   12bec:	str	r0, [r1]
   12bf0:	b	12c00 <error@@Base+0x1324>
   12bf4:	ldr	r0, [sp, #4]
   12bf8:	ldr	r1, [fp, #-4]
   12bfc:	str	r0, [r1, #4]
   12c00:	ldr	r0, [fp, #-4]
   12c04:	bl	12d88 <error@@Base+0x14ac>
   12c08:	ldr	r0, [fp, #-4]
   12c0c:	ldr	r1, [r0, #12]
   12c10:	add	r1, r1, #1
   12c14:	str	r1, [r0, #12]
   12c18:	mov	sp, fp
   12c1c:	pop	{fp, pc}
   12c20:	push	{fp, lr}
   12c24:	mov	fp, sp
   12c28:	sub	sp, sp, #8
   12c2c:	str	r0, [sp, #4]
   12c30:	str	r1, [sp]
   12c34:	ldr	r0, [sp, #4]
   12c38:	ldr	r1, [sp, #4]
   12c3c:	ldr	r1, [r1, #4]
   12c40:	ldr	r2, [sp]
   12c44:	movw	r3, #0
   12c48:	bl	12b74 <error@@Base+0x1298>
   12c4c:	mov	sp, fp
   12c50:	pop	{fp, pc}
   12c54:	push	{fp, lr}
   12c58:	mov	fp, sp
   12c5c:	sub	sp, sp, #16
   12c60:	str	r0, [fp, #-4]
   12c64:	str	r1, [sp, #8]
   12c68:	str	r2, [sp, #4]
   12c6c:	ldr	r0, [fp, #-4]
   12c70:	ldr	r1, [sp, #4]
   12c74:	ldr	r1, [r1]
   12c78:	ldr	r2, [sp, #8]
   12c7c:	ldr	r3, [sp, #4]
   12c80:	bl	12b74 <error@@Base+0x1298>
   12c84:	mov	sp, fp
   12c88:	pop	{fp, pc}
   12c8c:	push	{fp, lr}
   12c90:	mov	fp, sp
   12c94:	sub	sp, sp, #16
   12c98:	str	r0, [fp, #-4]
   12c9c:	str	r1, [sp, #8]
   12ca0:	str	r2, [sp, #4]
   12ca4:	ldr	r0, [fp, #-4]
   12ca8:	ldr	r1, [sp, #8]
   12cac:	ldr	r2, [sp, #4]
   12cb0:	ldr	r3, [sp, #8]
   12cb4:	ldr	r3, [r3, #4]
   12cb8:	bl	12b74 <error@@Base+0x1298>
   12cbc:	mov	sp, fp
   12cc0:	pop	{fp, pc}
   12cc4:	push	{fp, lr}
   12cc8:	mov	fp, sp
   12ccc:	sub	sp, sp, #8
   12cd0:	str	r0, [sp, #4]
   12cd4:	str	r1, [sp]
   12cd8:	ldr	r0, [sp]
   12cdc:	ldr	r0, [r0]
   12ce0:	movw	r1, #0
   12ce4:	cmp	r0, r1
   12ce8:	beq	12d04 <error@@Base+0x1428>
   12cec:	ldr	r0, [sp]
   12cf0:	ldr	r0, [r0, #4]
   12cf4:	ldr	r1, [sp]
   12cf8:	ldr	r1, [r1]
   12cfc:	str	r0, [r1, #4]
   12d00:	b	12d14 <error@@Base+0x1438>
   12d04:	ldr	r0, [sp]
   12d08:	ldr	r0, [r0, #4]
   12d0c:	ldr	r1, [sp, #4]
   12d10:	str	r0, [r1]
   12d14:	ldr	r0, [sp]
   12d18:	ldr	r0, [r0, #4]
   12d1c:	movw	r1, #0
   12d20:	cmp	r0, r1
   12d24:	beq	12d40 <error@@Base+0x1464>
   12d28:	ldr	r0, [sp]
   12d2c:	ldr	r0, [r0]
   12d30:	ldr	r1, [sp]
   12d34:	ldr	r1, [r1, #4]
   12d38:	str	r0, [r1]
   12d3c:	b	12d50 <error@@Base+0x1474>
   12d40:	ldr	r0, [sp]
   12d44:	ldr	r0, [r0]
   12d48:	ldr	r1, [sp, #4]
   12d4c:	str	r0, [r1, #4]
   12d50:	ldr	r0, [sp]
   12d54:	movw	r1, #0
   12d58:	str	r1, [r0, #4]
   12d5c:	ldr	r0, [sp]
   12d60:	str	r1, [r0]
   12d64:	ldr	r0, [sp, #4]
   12d68:	bl	12d88 <error@@Base+0x14ac>
   12d6c:	ldr	r0, [sp, #4]
   12d70:	ldr	r1, [r0, #12]
   12d74:	mvn	r2, #0
   12d78:	add	r1, r1, r2
   12d7c:	str	r1, [r0, #12]
   12d80:	mov	sp, fp
   12d84:	pop	{fp, pc}
   12d88:	push	{fp, lr}
   12d8c:	mov	fp, sp
   12d90:	sub	sp, sp, #8
   12d94:	str	r0, [sp, #4]
   12d98:	ldr	r0, [sp, #4]
   12d9c:	ldr	r0, [r0, #8]
   12da0:	movw	r1, #0
   12da4:	cmp	r0, r1
   12da8:	beq	12dc4 <error@@Base+0x14e8>
   12dac:	ldr	r0, [sp, #4]
   12db0:	ldr	r0, [r0, #8]
   12db4:	bl	10854 <free@plt>
   12db8:	ldr	r0, [sp, #4]
   12dbc:	movw	r1, #0
   12dc0:	str	r1, [r0, #8]
   12dc4:	mov	sp, fp
   12dc8:	pop	{fp, pc}
   12dcc:	push	{fp, lr}
   12dd0:	mov	fp, sp
   12dd4:	sub	sp, sp, #16
   12dd8:	str	r0, [fp, #-4]
   12ddc:	movw	r0, #0
   12de0:	str	r0, [sp, #4]
   12de4:	ldr	r1, [fp, #-4]
   12de8:	ldr	r1, [r1, #8]
   12dec:	cmp	r1, r0
   12df0:	bne	12e04 <error@@Base+0x1528>
   12df4:	ldr	r0, [fp, #-4]
   12df8:	ldr	r0, [r0, #12]
   12dfc:	cmp	r0, #0
   12e00:	bne	12e08 <error@@Base+0x152c>
   12e04:	b	12e80 <error@@Base+0x15a4>
   12e08:	ldr	r0, [pc, #120]	; 12e88 <error@@Base+0x15ac>
   12e0c:	ldr	r0, [pc, r0]
   12e10:	ldr	r1, [fp, #-4]
   12e14:	ldr	r1, [r1, #12]
   12e18:	str	r0, [sp]
   12e1c:	mov	r0, r1
   12e20:	movw	r1, #4
   12e24:	ldr	r2, [sp]
   12e28:	blx	r2
   12e2c:	ldr	r1, [fp, #-4]
   12e30:	str	r0, [r1, #8]
   12e34:	ldr	r0, [fp, #-4]
   12e38:	ldr	r0, [r0]
   12e3c:	str	r0, [sp, #8]
   12e40:	ldr	r0, [sp, #8]
   12e44:	movw	r1, #0
   12e48:	cmp	r0, r1
   12e4c:	beq	12e80 <error@@Base+0x15a4>
   12e50:	ldr	r0, [sp, #8]
   12e54:	ldr	r1, [fp, #-4]
   12e58:	ldr	r1, [r1, #8]
   12e5c:	ldr	r2, [sp, #4]
   12e60:	add	r3, r2, #1
   12e64:	str	r3, [sp, #4]
   12e68:	add	r1, r1, r2, lsl #2
   12e6c:	str	r0, [r1]
   12e70:	ldr	r0, [sp, #8]
   12e74:	ldr	r0, [r0, #4]
   12e78:	str	r0, [sp, #8]
   12e7c:	b	12e40 <error@@Base+0x1564>
   12e80:	mov	sp, fp
   12e84:	pop	{fp, pc}
   12e88:	andeq	r1, r1, r8, asr #5
   12e8c:	push	{fp, lr}
   12e90:	mov	fp, sp
   12e94:	sub	sp, sp, #16
   12e98:	str	r0, [fp, #-4]
   12e9c:	str	r1, [sp, #8]
   12ea0:	ldr	r0, [fp, #-4]
   12ea4:	ldr	r0, [r0]
   12ea8:	movw	r1, #0
   12eac:	cmp	r0, r1
   12eb0:	beq	12ee8 <error@@Base+0x160c>
   12eb4:	ldr	r0, [fp, #-4]
   12eb8:	ldr	r0, [r0]
   12ebc:	str	r0, [sp, #4]
   12ec0:	ldr	r0, [fp, #-4]
   12ec4:	ldr	r1, [sp, #4]
   12ec8:	bl	12cc4 <error@@Base+0x13e8>
   12ecc:	ldr	r0, [sp, #8]
   12ed0:	ldr	r1, [sp, #4]
   12ed4:	str	r0, [sp]
   12ed8:	mov	r0, r1
   12edc:	ldr	r1, [sp]
   12ee0:	blx	r1
   12ee4:	b	12ea0 <error@@Base+0x15c4>
   12ee8:	mov	sp, fp
   12eec:	pop	{fp, pc}
   12ef0:	push	{fp, lr}
   12ef4:	mov	fp, sp
   12ef8:	sub	sp, sp, #16
   12efc:	str	r0, [fp, #-4]
   12f00:	str	r1, [sp, #8]
   12f04:	str	r2, [sp, #4]
   12f08:	ldr	r0, [fp, #-4]
   12f0c:	cmp	r0, #2
   12f10:	bge	12f18 <error@@Base+0x163c>
   12f14:	b	12f48 <error@@Base+0x166c>
   12f18:	ldr	r0, [pc, #48]	; 12f50 <error@@Base+0x1674>
   12f1c:	add	r0, pc, r0
   12f20:	ldr	r1, [pc, #44]	; 12f54 <error@@Base+0x1678>
   12f24:	add	r1, pc, r1
   12f28:	ldr	r2, [sp, #8]
   12f2c:	str	r2, [r1]
   12f30:	ldr	r1, [sp, #4]
   12f34:	str	r1, [r0]
   12f38:	ldr	r0, [fp, #-4]
   12f3c:	sub	r1, r0, #1
   12f40:	movw	r0, #0
   12f44:	bl	12f58 <error@@Base+0x167c>
   12f48:	mov	sp, fp
   12f4c:	pop	{fp, pc}
   12f50:	andeq	r1, r1, ip, asr #4
   12f54:	andeq	r1, r1, r0, asr #4
   12f58:	push	{fp, lr}
   12f5c:	mov	fp, sp
   12f60:	sub	sp, sp, #40	; 0x28
   12f64:	str	r0, [fp, #-4]
   12f68:	str	r1, [fp, #-8]
   12f6c:	ldr	r0, [fp, #-4]
   12f70:	str	r0, [fp, #-12]
   12f74:	ldr	r0, [fp, #-8]
   12f78:	str	r0, [fp, #-16]
   12f7c:	ldr	r0, [pc, #500]	; 13178 <error@@Base+0x189c>
   12f80:	ldr	r0, [pc, r0]
   12f84:	ldr	r1, [fp, #-12]
   12f88:	add	r0, r0, r1, lsl #2
   12f8c:	ldr	r0, [r0]
   12f90:	str	r0, [sp, #20]
   12f94:	ldr	r0, [fp, #-12]
   12f98:	ldr	r1, [fp, #-16]
   12f9c:	cmp	r0, r1
   12fa0:	bge	1310c <error@@Base+0x1830>
   12fa4:	b	12fa8 <error@@Base+0x16cc>
   12fa8:	ldr	r0, [fp, #-12]
   12fac:	ldr	r1, [fp, #-16]
   12fb0:	cmp	r0, r1
   12fb4:	movw	r0, #0
   12fb8:	str	r0, [sp, #16]
   12fbc:	bge	13004 <error@@Base+0x1728>
   12fc0:	ldr	r0, [pc, #436]	; 1317c <error@@Base+0x18a0>
   12fc4:	ldr	r0, [pc, r0]
   12fc8:	ldr	r1, [sp, #20]
   12fcc:	ldr	r2, [pc, #428]	; 13180 <error@@Base+0x18a4>
   12fd0:	ldr	r2, [pc, r2]
   12fd4:	ldr	r3, [fp, #-16]
   12fd8:	add	r2, r2, r3, lsl #2
   12fdc:	ldr	r2, [r2]
   12fe0:	str	r0, [sp, #12]
   12fe4:	mov	r0, r1
   12fe8:	mov	r1, r2
   12fec:	ldr	r2, [sp, #12]
   12ff0:	blx	r2
   12ff4:	cmp	r0, #0
   12ff8:	movw	r0, #0
   12ffc:	movlt	r0, #1
   13000:	str	r0, [sp, #16]
   13004:	ldr	r0, [sp, #16]
   13008:	tst	r0, #1
   1300c:	beq	13024 <error@@Base+0x1748>
   13010:	ldr	r0, [fp, #-16]
   13014:	mvn	r1, #0
   13018:	add	r0, r0, r1
   1301c:	str	r0, [fp, #-16]
   13020:	b	12fa8 <error@@Base+0x16cc>
   13024:	ldr	r0, [fp, #-12]
   13028:	ldr	r1, [fp, #-16]
   1302c:	cmp	r0, r1
   13030:	beq	13058 <error@@Base+0x177c>
   13034:	ldr	r0, [pc, #328]	; 13184 <error@@Base+0x18a8>
   13038:	ldr	r0, [pc, r0]
   1303c:	ldr	r1, [fp, #-16]
   13040:	ldr	r1, [r0, r1, lsl #2]
   13044:	ldr	r2, [fp, #-12]
   13048:	add	r3, r2, #1
   1304c:	str	r3, [fp, #-12]
   13050:	add	r0, r0, r2, lsl #2
   13054:	str	r1, [r0]
   13058:	b	1305c <error@@Base+0x1780>
   1305c:	ldr	r0, [fp, #-12]
   13060:	ldr	r1, [fp, #-16]
   13064:	cmp	r0, r1
   13068:	movw	r0, #0
   1306c:	str	r0, [sp, #8]
   13070:	bge	130b8 <error@@Base+0x17dc>
   13074:	ldr	r0, [pc, #268]	; 13188 <error@@Base+0x18ac>
   13078:	ldr	r0, [pc, r0]
   1307c:	ldr	r1, [sp, #20]
   13080:	ldr	r2, [pc, #260]	; 1318c <error@@Base+0x18b0>
   13084:	ldr	r2, [pc, r2]
   13088:	ldr	r3, [fp, #-12]
   1308c:	add	r2, r2, r3, lsl #2
   13090:	ldr	r2, [r2]
   13094:	str	r0, [sp, #4]
   13098:	mov	r0, r1
   1309c:	mov	r1, r2
   130a0:	ldr	r2, [sp, #4]
   130a4:	blx	r2
   130a8:	cmp	r0, #0
   130ac:	movw	r0, #0
   130b0:	movgt	r0, #1
   130b4:	str	r0, [sp, #8]
   130b8:	ldr	r0, [sp, #8]
   130bc:	tst	r0, #1
   130c0:	beq	130d4 <error@@Base+0x17f8>
   130c4:	ldr	r0, [fp, #-12]
   130c8:	add	r0, r0, #1
   130cc:	str	r0, [fp, #-12]
   130d0:	b	1305c <error@@Base+0x1780>
   130d4:	ldr	r0, [fp, #-12]
   130d8:	ldr	r1, [fp, #-16]
   130dc:	cmp	r0, r1
   130e0:	beq	13108 <error@@Base+0x182c>
   130e4:	ldr	r0, [pc, #164]	; 13190 <error@@Base+0x18b4>
   130e8:	ldr	r0, [pc, r0]
   130ec:	ldr	r1, [fp, #-12]
   130f0:	ldr	r1, [r0, r1, lsl #2]
   130f4:	ldr	r2, [fp, #-16]
   130f8:	sub	r3, r2, #1
   130fc:	str	r3, [fp, #-16]
   13100:	add	r0, r0, r2, lsl #2
   13104:	str	r1, [r0]
   13108:	b	12f94 <error@@Base+0x16b8>
   1310c:	ldr	r0, [sp, #20]
   13110:	ldr	r1, [pc, #124]	; 13194 <error@@Base+0x18b8>
   13114:	ldr	r1, [pc, r1]
   13118:	ldr	r2, [fp, #-16]
   1311c:	add	r1, r1, r2, lsl #2
   13120:	str	r0, [r1]
   13124:	ldr	r0, [fp, #-4]
   13128:	ldr	r1, [fp, #-16]
   1312c:	mvn	r2, #0
   13130:	add	r1, r1, r2
   13134:	str	r1, [fp, #-16]
   13138:	cmp	r0, r1
   1313c:	bge	1314c <error@@Base+0x1870>
   13140:	ldr	r0, [fp, #-4]
   13144:	ldr	r1, [fp, #-16]
   13148:	bl	12f58 <error@@Base+0x167c>
   1314c:	ldr	r0, [fp, #-12]
   13150:	add	r0, r0, #1
   13154:	str	r0, [fp, #-12]
   13158:	ldr	r1, [fp, #-8]
   1315c:	cmp	r0, r1
   13160:	bge	13170 <error@@Base+0x1894>
   13164:	ldr	r0, [fp, #-12]
   13168:	ldr	r1, [fp, #-8]
   1316c:	bl	12f58 <error@@Base+0x167c>
   13170:	mov	sp, fp
   13174:	pop	{fp, pc}
   13178:	andeq	r1, r1, r4, ror #3
   1317c:	andeq	r1, r1, r4, lsr #3
   13180:	muleq	r1, r4, r1
   13184:	andeq	r1, r1, ip, lsr #2
   13188:	strdeq	r1, [r1], -r0
   1318c:	andeq	r1, r1, r0, ror #1
   13190:	andeq	r1, r1, ip, ror r0
   13194:	andeq	r1, r1, r0, asr r0
   13198:	push	{fp, lr}
   1319c:	mov	fp, sp
   131a0:	sub	sp, sp, #16
   131a4:	str	r0, [fp, #-4]
   131a8:	movw	r0, #0
   131ac:	strh	r0, [fp, #-6]
   131b0:	ldrsh	r0, [fp, #-6]
   131b4:	movw	r1, #503	; 0x1f7
   131b8:	cmp	r0, r1
   131bc:	bge	131f8 <error@@Base+0x191c>
   131c0:	ldr	r0, [pc, #92]	; 13224 <error@@Base+0x1948>
   131c4:	ldr	r0, [pc, r0]
   131c8:	ldr	r1, [fp, #-4]
   131cc:	ldrsh	r2, [fp, #-6]
   131d0:	add	r1, r1, r2, lsl #4
   131d4:	str	r0, [sp, #4]
   131d8:	mov	r0, r1
   131dc:	ldr	r1, [sp, #4]
   131e0:	blx	r1
   131e4:	ldrh	r0, [fp, #-6]
   131e8:	movw	r1, #1
   131ec:	add	r0, r0, r1
   131f0:	strh	r0, [fp, #-6]
   131f4:	b	131b0 <error@@Base+0x18d4>
   131f8:	ldr	r0, [fp, #-4]
   131fc:	movw	r1, #8048	; 0x1f70
   13200:	add	r0, r0, r1
   13204:	movw	r1, #0
   13208:	str	r1, [r0]
   1320c:	ldr	r0, [fp, #-4]
   13210:	movw	r2, #8052	; 0x1f74
   13214:	add	r0, r0, r2
   13218:	str	r1, [r0]
   1321c:	mov	sp, fp
   13220:	pop	{fp, pc}
   13224:	andeq	r0, r1, r4, lsl #30
   13228:	push	{fp, lr}
   1322c:	mov	fp, sp
   13230:	sub	sp, sp, #24
   13234:	str	r0, [fp, #-4]
   13238:	str	r1, [fp, #-8]
   1323c:	ldr	r0, [fp, #-4]
   13240:	ldr	r1, [fp, #-8]
   13244:	str	r0, [sp, #8]
   13248:	mov	r0, r1
   1324c:	bl	132c8 <error@@Base+0x19ec>
   13250:	mov	r1, r0
   13254:	ldr	r2, [sp, #8]
   13258:	add	r0, r2, r0, lsl #4
   1325c:	ldr	r0, [r0]
   13260:	str	r0, [sp, #12]
   13264:	ldr	r0, [sp, #12]
   13268:	movw	r1, #0
   1326c:	cmp	r0, r1
   13270:	movw	r0, #0
   13274:	str	r0, [sp, #4]
   13278:	beq	1329c <error@@Base+0x19c0>
   1327c:	ldr	r0, [fp, #-8]
   13280:	ldr	r1, [sp, #12]
   13284:	ldr	r1, [r1, #8]
   13288:	bl	10830 <strcmp@plt>
   1328c:	cmp	r0, #0
   13290:	movw	r0, #0
   13294:	movne	r0, #1
   13298:	str	r0, [sp, #4]
   1329c:	ldr	r0, [sp, #4]
   132a0:	tst	r0, #1
   132a4:	beq	132bc <error@@Base+0x19e0>
   132a8:	b	132ac <error@@Base+0x19d0>
   132ac:	ldr	r0, [sp, #12]
   132b0:	ldr	r0, [r0, #4]
   132b4:	str	r0, [sp, #12]
   132b8:	b	13264 <error@@Base+0x1988>
   132bc:	ldr	r0, [sp, #12]
   132c0:	mov	sp, fp
   132c4:	pop	{fp, pc}
   132c8:	sub	sp, sp, #16
   132cc:	str	r0, [sp, #12]
   132d0:	ldr	r0, [sp, #12]
   132d4:	str	r0, [sp, #8]
   132d8:	movw	r0, #0
   132dc:	str	r0, [sp]
   132e0:	str	r0, [sp, #4]
   132e4:	ldr	r0, [sp, #8]
   132e8:	ldr	r1, [sp, #4]
   132ec:	add	r0, r0, r1
   132f0:	ldrsb	r0, [r0]
   132f4:	cmp	r0, #0
   132f8:	beq	13328 <error@@Base+0x1a4c>
   132fc:	ldr	r0, [sp, #8]
   13300:	ldr	r1, [sp, #4]
   13304:	add	r0, r0, r1
   13308:	ldrb	r0, [r0]
   1330c:	ldr	r1, [sp]
   13310:	add	r0, r1, r0
   13314:	str	r0, [sp]
   13318:	ldr	r0, [sp, #4]
   1331c:	add	r0, r0, #1
   13320:	str	r0, [sp, #4]
   13324:	b	132e4 <error@@Base+0x1a08>
   13328:	ldr	r0, [sp]
   1332c:	movw	r1, #20065	; 0x4e61
   13330:	movt	r1, #33354	; 0x824a
   13334:	smmla	r1, r0, r1, r0
   13338:	asr	r2, r1, #8
   1333c:	add	r1, r2, r1, lsr #31
   13340:	movw	r2, #503	; 0x1f7
   13344:	mls	r0, r1, r2, r0
   13348:	sxth	r0, r0
   1334c:	add	sp, sp, #16
   13350:	bx	lr
   13354:	push	{fp, lr}
   13358:	mov	fp, sp
   1335c:	sub	sp, sp, #24
   13360:	ldr	r2, [pc, #112]	; 133d8 <error@@Base+0x1afc>
   13364:	ldr	r2, [pc, r2]
   13368:	str	r0, [fp, #-4]
   1336c:	str	r1, [fp, #-8]
   13370:	ldr	r0, [fp, #-4]
   13374:	ldr	r1, [fp, #-8]
   13378:	ldr	r1, [r1, #8]
   1337c:	str	r0, [sp, #12]
   13380:	mov	r0, r1
   13384:	str	r2, [sp, #8]
   13388:	bl	132c8 <error@@Base+0x19ec>
   1338c:	mov	r1, r0
   13390:	ldr	r2, [sp, #12]
   13394:	add	r0, r2, r0, lsl #4
   13398:	ldr	r3, [fp, #-8]
   1339c:	str	r1, [sp, #4]
   133a0:	mov	r1, r3
   133a4:	ldr	r3, [sp, #8]
   133a8:	blx	r3
   133ac:	ldr	r0, [fp, #-4]
   133b0:	bl	133dc <error@@Base+0x1b00>
   133b4:	ldr	r0, [fp, #-4]
   133b8:	movw	r1, #8052	; 0x1f74
   133bc:	add	r2, r0, r1
   133c0:	ldr	r2, [r2]
   133c4:	add	r2, r2, #1
   133c8:	add	r0, r0, r1
   133cc:	str	r2, [r0]
   133d0:	mov	sp, fp
   133d4:	pop	{fp, pc}
   133d8:	andeq	r0, r1, r4, lsl #26
   133dc:	push	{fp, lr}
   133e0:	mov	fp, sp
   133e4:	sub	sp, sp, #8
   133e8:	str	r0, [sp, #4]
   133ec:	ldr	r0, [sp, #4]
   133f0:	movw	r1, #8048	; 0x1f70
   133f4:	add	r0, r0, r1
   133f8:	ldr	r0, [r0]
   133fc:	movw	r1, #0
   13400:	cmp	r0, r1
   13404:	beq	13430 <error@@Base+0x1b54>
   13408:	ldr	r0, [sp, #4]
   1340c:	movw	r1, #8048	; 0x1f70
   13410:	add	r0, r0, r1
   13414:	ldr	r0, [r0]
   13418:	bl	10854 <free@plt>
   1341c:	ldr	r0, [sp, #4]
   13420:	movw	r1, #8048	; 0x1f70
   13424:	add	r0, r0, r1
   13428:	movw	r1, #0
   1342c:	str	r1, [r0]
   13430:	mov	sp, fp
   13434:	pop	{fp, pc}
   13438:	push	{fp, lr}
   1343c:	mov	fp, sp
   13440:	sub	sp, sp, #24
   13444:	ldr	r2, [pc, #116]	; 134c0 <error@@Base+0x1be4>
   13448:	ldr	r2, [pc, r2]
   1344c:	str	r0, [fp, #-4]
   13450:	str	r1, [fp, #-8]
   13454:	ldr	r0, [fp, #-4]
   13458:	ldr	r1, [fp, #-8]
   1345c:	ldr	r1, [r1, #8]
   13460:	str	r0, [sp, #12]
   13464:	mov	r0, r1
   13468:	str	r2, [sp, #8]
   1346c:	bl	132c8 <error@@Base+0x19ec>
   13470:	mov	r1, r0
   13474:	ldr	r2, [sp, #12]
   13478:	add	r0, r2, r0, lsl #4
   1347c:	ldr	r3, [fp, #-8]
   13480:	str	r1, [sp, #4]
   13484:	mov	r1, r3
   13488:	ldr	r3, [sp, #8]
   1348c:	blx	r3
   13490:	ldr	r0, [fp, #-4]
   13494:	bl	133dc <error@@Base+0x1b00>
   13498:	ldr	r0, [fp, #-4]
   1349c:	movw	r1, #8052	; 0x1f74
   134a0:	add	r2, r0, r1
   134a4:	ldr	r2, [r2]
   134a8:	mvn	r3, #0
   134ac:	add	r2, r2, r3
   134b0:	add	r0, r0, r1
   134b4:	str	r2, [r0]
   134b8:	mov	sp, fp
   134bc:	pop	{fp, pc}
   134c0:	muleq	r1, r8, ip
   134c4:	push	{fp, lr}
   134c8:	mov	fp, sp
   134cc:	sub	sp, sp, #24
   134d0:	str	r0, [fp, #-4]
   134d4:	movw	r0, #0
   134d8:	str	r0, [sp, #8]
   134dc:	ldr	r1, [fp, #-4]
   134e0:	movw	r2, #8048	; 0x1f70
   134e4:	add	r1, r1, r2
   134e8:	ldr	r1, [r1]
   134ec:	cmp	r1, r0
   134f0:	bne	1350c <error@@Base+0x1c30>
   134f4:	ldr	r0, [fp, #-4]
   134f8:	movw	r1, #8052	; 0x1f74
   134fc:	add	r0, r0, r1
   13500:	ldr	r0, [r0]
   13504:	cmp	r0, #0
   13508:	bne	13510 <error@@Base+0x1c34>
   1350c:	b	135d0 <error@@Base+0x1cf4>
   13510:	ldr	r0, [pc, #192]	; 135d8 <error@@Base+0x1cfc>
   13514:	ldr	r0, [pc, r0]
   13518:	ldr	r1, [fp, #-4]
   1351c:	movw	r2, #8052	; 0x1f74
   13520:	add	r1, r1, r2
   13524:	ldr	r1, [r1]
   13528:	str	r0, [sp, #4]
   1352c:	mov	r0, r1
   13530:	movw	r1, #4
   13534:	ldr	r2, [sp, #4]
   13538:	blx	r2
   1353c:	ldr	r1, [fp, #-4]
   13540:	movw	r2, #8048	; 0x1f70
   13544:	add	r1, r1, r2
   13548:	str	r0, [r1]
   1354c:	movw	r0, #0
   13550:	str	r0, [sp, #12]
   13554:	ldr	r0, [sp, #12]
   13558:	movw	r1, #503	; 0x1f7
   1355c:	cmp	r0, r1
   13560:	bge	135d0 <error@@Base+0x1cf4>
   13564:	ldr	r0, [fp, #-4]
   13568:	ldr	r1, [sp, #12]
   1356c:	add	r0, r0, r1, lsl #4
   13570:	ldr	r0, [r0]
   13574:	str	r0, [fp, #-8]
   13578:	ldr	r0, [fp, #-8]
   1357c:	movw	r1, #0
   13580:	cmp	r0, r1
   13584:	beq	135bc <error@@Base+0x1ce0>
   13588:	ldr	r0, [fp, #-8]
   1358c:	ldr	r1, [fp, #-4]
   13590:	movw	r2, #8048	; 0x1f70
   13594:	ldr	r1, [r1, r2]
   13598:	ldr	r2, [sp, #8]
   1359c:	add	r3, r2, #1
   135a0:	str	r3, [sp, #8]
   135a4:	add	r1, r1, r2, lsl #2
   135a8:	str	r0, [r1]
   135ac:	ldr	r0, [fp, #-8]
   135b0:	ldr	r0, [r0, #4]
   135b4:	str	r0, [fp, #-8]
   135b8:	b	13578 <error@@Base+0x1c9c>
   135bc:	b	135c0 <error@@Base+0x1ce4>
   135c0:	ldr	r0, [sp, #12]
   135c4:	add	r0, r0, #1
   135c8:	str	r0, [sp, #12]
   135cc:	b	13554 <error@@Base+0x1c78>
   135d0:	mov	sp, fp
   135d4:	pop	{fp, pc}
   135d8:	andeq	r0, r1, r0, asr #23
   135dc:	push	{fp, lr}
   135e0:	mov	fp, sp
   135e4:	sub	sp, sp, #16
   135e8:	str	r0, [fp, #-4]
   135ec:	str	r1, [sp, #8]
   135f0:	movw	r0, #0
   135f4:	strh	r0, [sp, #6]
   135f8:	ldrsh	r0, [sp, #6]
   135fc:	movw	r1, #503	; 0x1f7
   13600:	cmp	r0, r1
   13604:	bge	13648 <error@@Base+0x1d6c>
   13608:	ldr	r0, [pc, #92]	; 1366c <error@@Base+0x1d90>
   1360c:	ldr	r0, [pc, r0]
   13610:	ldr	r1, [fp, #-4]
   13614:	ldrsh	r2, [sp, #6]
   13618:	add	r1, r1, r2, lsl #4
   1361c:	ldr	r2, [sp, #8]
   13620:	str	r0, [sp]
   13624:	mov	r0, r1
   13628:	mov	r1, r2
   1362c:	ldr	r2, [sp]
   13630:	blx	r2
   13634:	ldrh	r0, [sp, #6]
   13638:	movw	r1, #1
   1363c:	add	r0, r0, r1
   13640:	strh	r0, [sp, #6]
   13644:	b	135f8 <error@@Base+0x1d1c>
   13648:	ldr	r0, [fp, #-4]
   1364c:	bl	133dc <error@@Base+0x1b00>
   13650:	ldr	r0, [fp, #-4]
   13654:	movw	r1, #8052	; 0x1f74
   13658:	add	r0, r0, r1
   1365c:	movw	r1, #0
   13660:	str	r1, [r0]
   13664:	mov	sp, fp
   13668:	pop	{fp, pc}
   1366c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   13670:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   13674:	mov	r7, r0
   13678:	ldr	r6, [pc, #72]	; 136c8 <error@@Base+0x1dec>
   1367c:	ldr	r5, [pc, #72]	; 136cc <error@@Base+0x1df0>
   13680:	add	r6, pc, r6
   13684:	add	r5, pc, r5
   13688:	sub	r6, r6, r5
   1368c:	mov	r8, r1
   13690:	mov	r9, r2
   13694:	bl	10804 <calloc@plt-0x20>
   13698:	asrs	r6, r6, #2
   1369c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   136a0:	mov	r4, #0
   136a4:	add	r4, r4, #1
   136a8:	ldr	r3, [r5], #4
   136ac:	mov	r2, r9
   136b0:	mov	r1, r8
   136b4:	mov	r0, r7
   136b8:	blx	r3
   136bc:	cmp	r6, r4
   136c0:	bne	136a4 <error@@Base+0x1dc8>
   136c4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   136c8:	andeq	r0, r1, r4, ror r8
   136cc:	andeq	r0, r1, ip, ror #16
   136d0:	bx	lr
   136d4:	mov	r2, r1
   136d8:	mov	r1, r0
   136dc:	mov	r0, #3
   136e0:	b	10878 <__xstat@plt>

Disassembly of section .fini:

000136e4 <.fini>:
   136e4:	push	{r3, lr}
   136e8:	pop	{r3, pc}
