
../repos/eddieantonio-ocreval-3ab279a/ngram/ngram:     file format elf32-littlearm


Disassembly of section .init:

00010a14 <.init>:
   10a14:	push	{r3, lr}
   10a18:	bl	10c08 <getc@plt+0x48>
   10a1c:	pop	{r3, pc}

Disassembly of section .plt:

00010a20 <calloc@plt-0x14>:
   10a20:	push	{lr}		; (str lr, [sp, #-4]!)
   10a24:	ldr	lr, [pc, #4]	; 10a30 <calloc@plt-0x4>
   10a28:	add	lr, pc, lr
   10a2c:	ldr	pc, [lr, #8]!
   10a30:	ldrdeq	r2, [r1], -r0

00010a34 <calloc@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #73728	; 0x12000
   10a3c:	ldr	pc, [ip, #1488]!	; 0x5d0

00010a40 <strcmp@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #73728	; 0x12000
   10a48:	ldr	pc, [ip, #1480]!	; 0x5c8

00010a4c <printf@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #73728	; 0x12000
   10a54:	ldr	pc, [ip, #1472]!	; 0x5c0

00010a58 <fopen@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #73728	; 0x12000
   10a60:	ldr	pc, [ip, #1464]!	; 0x5b8

00010a64 <free@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #73728	; 0x12000
   10a6c:	ldr	pc, [ip, #1456]!	; 0x5b0

00010a70 <utf8proc_get_property@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #73728	; 0x12000
   10a78:	ldr	pc, [ip, #1448]!	; 0x5a8

00010a7c <fgets@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #73728	; 0x12000
   10a84:	ldr	pc, [ip, #1440]!	; 0x5a0

00010a88 <utf8proc_encode_char@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #73728	; 0x12000
   10a90:	ldr	pc, [ip, #1432]!	; 0x598

00010a94 <memcpy@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #73728	; 0x12000
   10a9c:	ldr	pc, [ip, #1424]!	; 0x590

00010aa0 <strdup@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #73728	; 0x12000
   10aa8:	ldr	pc, [ip, #1416]!	; 0x588

00010aac <rewind@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #73728	; 0x12000
   10ab4:	ldr	pc, [ip, #1408]!	; 0x580

00010ab8 <unlink@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #73728	; 0x12000
   10ac0:	ldr	pc, [ip, #1400]!	; 0x578

00010ac4 <utf8proc_tolower@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #73728	; 0x12000
   10acc:	ldr	pc, [ip, #1392]!	; 0x570

00010ad0 <__xstat@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #73728	; 0x12000
   10ad8:	ldr	pc, [ip, #1384]!	; 0x568

00010adc <fwrite@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #73728	; 0x12000
   10ae4:	ldr	pc, [ip, #1376]!	; 0x560

00010ae8 <strcat@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #73728	; 0x12000
   10af0:	ldr	pc, [ip, #1368]!	; 0x558

00010af4 <fread@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #73728	; 0x12000
   10afc:	ldr	pc, [ip, #1360]!	; 0x550

00010b00 <utf8proc_iterate@plt>:
   10b00:	add	ip, pc, #0, 12
   10b04:	add	ip, ip, #73728	; 0x12000
   10b08:	ldr	pc, [ip, #1352]!	; 0x548

00010b0c <puts@plt>:
   10b0c:	add	ip, pc, #0, 12
   10b10:	add	ip, ip, #73728	; 0x12000
   10b14:	ldr	pc, [ip, #1344]!	; 0x540

00010b18 <__libc_start_main@plt>:
   10b18:	add	ip, pc, #0, 12
   10b1c:	add	ip, ip, #73728	; 0x12000
   10b20:	ldr	pc, [ip, #1336]!	; 0x538

00010b24 <__sysv_signal@plt>:
   10b24:	add	ip, pc, #0, 12
   10b28:	add	ip, ip, #73728	; 0x12000
   10b2c:	ldr	pc, [ip, #1328]!	; 0x530

00010b30 <__gmon_start__@plt>:
   10b30:	add	ip, pc, #0, 12
   10b34:	add	ip, ip, #73728	; 0x12000
   10b38:	ldr	pc, [ip, #1320]!	; 0x528

00010b3c <getpid@plt>:
   10b3c:	add	ip, pc, #0, 12
   10b40:	add	ip, ip, #73728	; 0x12000
   10b44:	ldr	pc, [ip, #1312]!	; 0x520

00010b48 <exit@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #73728	; 0x12000
   10b50:	ldr	pc, [ip, #1304]!	; 0x518

00010b54 <utf8proc_category@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #73728	; 0x12000
   10b5c:	ldr	pc, [ip, #1296]!	; 0x510

00010b60 <strlen@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #73728	; 0x12000
   10b68:	ldr	pc, [ip, #1288]!	; 0x508

00010b6c <fprintf@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #73728	; 0x12000
   10b74:	ldr	pc, [ip, #1280]!	; 0x500

00010b78 <fclose@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #73728	; 0x12000
   10b80:	ldr	pc, [ip, #1272]!	; 0x4f8

00010b84 <sprintf@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #73728	; 0x12000
   10b8c:	ldr	pc, [ip, #1264]!	; 0x4f0

00010b90 <utf8proc_errmsg@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #73728	; 0x12000
   10b98:	ldr	pc, [ip, #1256]!	; 0x4e8

00010b9c <fputs@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #73728	; 0x12000
   10ba4:	ldr	pc, [ip, #1248]!	; 0x4e0

00010ba8 <strncmp@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #73728	; 0x12000
   10bb0:	ldr	pc, [ip, #1240]!	; 0x4d8

00010bb4 <abort@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #73728	; 0x12000
   10bbc:	ldr	pc, [ip, #1232]!	; 0x4d0

00010bc0 <getc@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #73728	; 0x12000
   10bc8:	ldr	pc, [ip, #1224]!	; 0x4c8

Disassembly of section .text:

00010bcc <error@@Base-0x1394>:
   10bcc:	mov	fp, #0
   10bd0:	mov	lr, #0
   10bd4:	pop	{r1}		; (ldr r1, [sp], #4)
   10bd8:	mov	r2, sp
   10bdc:	push	{r2}		; (str r2, [sp, #-4]!)
   10be0:	push	{r0}		; (str r0, [sp, #-4]!)
   10be4:	ldr	ip, [pc, #16]	; 10bfc <getc@plt+0x3c>
   10be8:	push	{ip}		; (str ip, [sp, #-4]!)
   10bec:	ldr	r0, [pc, #12]	; 10c00 <getc@plt+0x40>
   10bf0:	ldr	r3, [pc, #12]	; 10c04 <getc@plt+0x44>
   10bf4:	bl	10b18 <__libc_start_main@plt>
   10bf8:	bl	10bb4 <abort@plt>
   10bfc:	andeq	r2, r1, r4, ror r8
   10c00:	andeq	r1, r1, r8, ror #5
   10c04:	andeq	r2, r1, r4, lsl r8
   10c08:	ldr	r3, [pc, #20]	; 10c24 <getc@plt+0x64>
   10c0c:	ldr	r2, [pc, #20]	; 10c28 <getc@plt+0x68>
   10c10:	add	r3, pc, r3
   10c14:	ldr	r2, [r3, r2]
   10c18:	cmp	r2, #0
   10c1c:	bxeq	lr
   10c20:	b	10b30 <__gmon_start__@plt>
   10c24:	andeq	r2, r1, r8, ror #7
   10c28:	strheq	r0, [r0], -ip
   10c2c:	ldr	r0, [pc, #24]	; 10c4c <getc@plt+0x8c>
   10c30:	ldr	r3, [pc, #24]	; 10c50 <getc@plt+0x90>
   10c34:	cmp	r3, r0
   10c38:	bxeq	lr
   10c3c:	ldr	r3, [pc, #16]	; 10c54 <getc@plt+0x94>
   10c40:	cmp	r3, #0
   10c44:	bxeq	lr
   10c48:	bx	r3
   10c4c:	andeq	r3, r2, r4, lsl r1
   10c50:	andeq	r3, r2, r4, lsl r1
   10c54:	andeq	r0, r0, r0
   10c58:	ldr	r0, [pc, #36]	; 10c84 <getc@plt+0xc4>
   10c5c:	ldr	r1, [pc, #36]	; 10c88 <getc@plt+0xc8>
   10c60:	sub	r1, r1, r0
   10c64:	asr	r1, r1, #2
   10c68:	add	r1, r1, r1, lsr #31
   10c6c:	asrs	r1, r1, #1
   10c70:	bxeq	lr
   10c74:	ldr	r3, [pc, #16]	; 10c8c <getc@plt+0xcc>
   10c78:	cmp	r3, #0
   10c7c:	bxeq	lr
   10c80:	bx	r3
   10c84:	andeq	r3, r2, r4, lsl r1
   10c88:	andeq	r3, r2, r4, lsl r1
   10c8c:	andeq	r0, r0, r0
   10c90:	push	{r4, lr}
   10c94:	ldr	r4, [pc, #24]	; 10cb4 <getc@plt+0xf4>
   10c98:	ldrb	r3, [r4]
   10c9c:	cmp	r3, #0
   10ca0:	popne	{r4, pc}
   10ca4:	bl	10c2c <getc@plt+0x6c>
   10ca8:	mov	r3, #1
   10cac:	strb	r3, [r4]
   10cb0:	pop	{r4, pc}
   10cb4:	andeq	r3, r2, r4, lsl r1
   10cb8:	b	10c58 <getc@plt+0x98>
   10cbc:	ldr	r0, [pc, #68]	; 10d08 <getc@plt+0x148>
   10cc0:	ldr	r0, [pc, r0]
   10cc4:	ldr	r1, [r0]
   10cc8:	cmp	r1, #0
   10ccc:	moveq	r0, #1
   10cd0:	bxeq	lr
   10cd4:	ldrb	r0, [r1]
   10cd8:	sub	r2, r0, #49	; 0x31
   10cdc:	uxtb	r2, r2
   10ce0:	cmp	r2, #2
   10ce4:	ldrbls	r2, [r1, #1]
   10ce8:	cmpls	r2, #0
   10cec:	subeq	r0, r0, #48	; 0x30
   10cf0:	bxeq	lr
   10cf4:	push	{fp, lr}
   10cf8:	mov	fp, sp
   10cfc:	ldr	r0, [pc, #8]	; 10d0c <getc@plt+0x14c>
   10d00:	add	r0, pc, r0
   10d04:	bl	11fb0 <error@@Base+0x50>
   10d08:	ldrdeq	r2, [r1], -ip
   10d0c:	andeq	r1, r0, ip, ror fp
   10d10:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   10d14:	add	fp, sp, #24
   10d18:	ldr	r9, [pc, #280]	; 10e38 <getc@plt+0x278>
   10d1c:	mov	r5, r0
   10d20:	mov	r4, r1
   10d24:	mov	r8, r2
   10d28:	mov	r1, r5
   10d2c:	ldr	r9, [pc, r9]
   10d30:	mov	r0, r9
   10d34:	bl	11814 <getc@plt+0xc54>
   10d38:	mov	r6, r0
   10d3c:	cmp	r0, #0
   10d40:	bne	10df0 <getc@plt+0x230>
   10d44:	mov	r0, #1
   10d48:	mov	r1, #32
   10d4c:	bl	11aa0 <getc@plt+0xee0>
   10d50:	mov	r6, r0
   10d54:	mov	r0, r5
   10d58:	bl	10aa0 <strdup@plt>
   10d5c:	str	r0, [r6, #8]
   10d60:	ldr	r0, [pc, #212]	; 10e3c <getc@plt+0x27c>
   10d64:	ldr	r0, [pc, r0]
   10d68:	ldrsh	r0, [r0]
   10d6c:	cmp	r0, #1
   10d70:	blt	10de0 <getc@plt+0x220>
   10d74:	uxth	r2, r0
   10d78:	mov	r1, #0
   10d7c:	cmp	r2, #4
   10d80:	bcc	10dc8 <getc@plt+0x208>
   10d84:	add	r2, r6, #12
   10d88:	add	r3, r4, r0, lsl #2
   10d8c:	cmp	r2, r3
   10d90:	bcs	10da4 <getc@plt+0x1e4>
   10d94:	add	r3, r6, r0, lsl #2
   10d98:	add	r3, r3, #12
   10d9c:	cmp	r3, r4
   10da0:	bhi	10dc8 <getc@plt+0x208>
   10da4:	bic	r1, r0, #3
   10da8:	mov	r7, r4
   10dac:	mov	r3, r1
   10db0:	vld1.32	{d16-d17}, [r7]!
   10db4:	subs	r3, r3, #4
   10db8:	vst1.32	{d16-d17}, [r2]!
   10dbc:	bne	10db0 <getc@plt+0x1f0>
   10dc0:	cmp	r1, r0
   10dc4:	beq	10de0 <getc@plt+0x220>
   10dc8:	ldr	r2, [r4, r1, lsl #2]
   10dcc:	add	r3, r6, r1, lsl #2
   10dd0:	add	r1, r1, #1
   10dd4:	cmp	r1, r0
   10dd8:	str	r2, [r3, #12]
   10ddc:	blt	10dc8 <getc@plt+0x208>
   10de0:	ldr	r0, [pc, #88]	; 10e40 <getc@plt+0x280>
   10de4:	mov	r1, r6
   10de8:	ldr	r0, [pc, r0]
   10dec:	bl	118a4 <getc@plt+0xce4>
   10df0:	ldr	r0, [r6, #24]
   10df4:	mov	r1, r9
   10df8:	tst	r8, #255	; 0xff
   10dfc:	add	r0, r0, #1
   10e00:	str	r0, [r6, #24]
   10e04:	movw	r0, #8056	; 0x1f78
   10e08:	ldr	r0, [r1, r0]!
   10e0c:	add	r0, r0, #1
   10e10:	str	r0, [r1]
   10e14:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
   10e18:	ldr	r0, [r6, #28]
   10e1c:	add	r0, r0, #1
   10e20:	str	r0, [r6, #28]
   10e24:	movw	r0, #8060	; 0x1f7c
   10e28:	ldr	r0, [r9, r0]!
   10e2c:	add	r0, r0, #1
   10e30:	str	r0, [r9]
   10e34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   10e38:	andeq	r2, r1, r4, lsr #7
   10e3c:	andeq	r2, r1, r4, lsr r3
   10e40:	andeq	r2, r1, r8, ror #5
   10e44:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10e48:	add	fp, sp, #28
   10e4c:	sub	sp, sp, #52	; 0x34
   10e50:	ldr	r5, [pc, #380]	; 10fd4 <getc@plt+0x414>
   10e54:	mov	r4, r0
   10e58:	ldr	r5, [pc, r5]
   10e5c:	ldr	r1, [pc, #372]	; 10fd8 <getc@plt+0x418>
   10e60:	ldr	r1, [pc, r1]
   10e64:	mov	r0, r5
   10e68:	bl	115e8 <getc@plt+0xa28>
   10e6c:	ldr	r2, [pc, #360]	; 10fdc <getc@plt+0x41c>
   10e70:	mov	r0, r5
   10e74:	mov	r1, r4
   10e78:	ldr	r2, [pc, r2]
   10e7c:	bl	121c0 <error@@Base+0x260>
   10e80:	ldr	r9, [r5]
   10e84:	cmp	r9, #0
   10e88:	beq	10fcc <getc@plt+0x40c>
   10e8c:	ldr	sl, [pc, #332]	; 10fe0 <getc@plt+0x420>
   10e90:	add	r4, sp, #16
   10e94:	add	r5, sp, #25
   10e98:	ldr	sl, [pc, sl]
   10e9c:	mov	r0, #0
   10ea0:	mov	r8, #0
   10ea4:	strb	r0, [sp, #25]
   10ea8:	ldrsh	r0, [sl]
   10eac:	cmp	r0, #1
   10eb0:	blt	10f18 <getc@plt+0x358>
   10eb4:	mov	r7, #0
   10eb8:	mov	r8, #0
   10ebc:	mov	r6, r9
   10ec0:	cmp	r6, #0
   10ec4:	beq	10fcc <getc@plt+0x40c>
   10ec8:	ldr	r1, [r6, #12]
   10ecc:	mov	r0, #0
   10ed0:	mov	r2, r4
   10ed4:	mov	r3, #1
   10ed8:	bl	12574 <error@@Base+0x614>
   10edc:	mov	r0, r5
   10ee0:	mov	r1, r4
   10ee4:	bl	10ae8 <strcat@plt>
   10ee8:	ldr	r0, [r6, #12]
   10eec:	mov	r1, sp
   10ef0:	str	r0, [r1, r7, lsl #2]
   10ef4:	add	r7, r7, #1
   10ef8:	ldrb	r0, [r6, #8]
   10efc:	ldr	r6, [r6, #4]
   10f00:	cmp	r0, #0
   10f04:	mov	r0, #1
   10f08:	movne	r8, r0
   10f0c:	ldrsh	r0, [sl]
   10f10:	cmp	r7, r0
   10f14:	blt	10ec0 <getc@plt+0x300>
   10f18:	ldr	r6, [pc, #196]	; 10fe4 <getc@plt+0x424>
   10f1c:	mov	r1, r5
   10f20:	ldr	r6, [pc, r6]
   10f24:	mov	r0, r6
   10f28:	bl	11814 <getc@plt+0xc54>
   10f2c:	mov	r7, r0
   10f30:	cmp	r0, #0
   10f34:	bne	10f7c <getc@plt+0x3bc>
   10f38:	mov	r0, #1
   10f3c:	mov	r1, #32
   10f40:	bl	11aa0 <getc@plt+0xee0>
   10f44:	mov	r7, r0
   10f48:	mov	r0, r5
   10f4c:	bl	10aa0 <strdup@plt>
   10f50:	str	r0, [r7, #8]
   10f54:	ldrsh	r1, [sl]
   10f58:	cmp	r1, #1
   10f5c:	blt	10f70 <getc@plt+0x3b0>
   10f60:	lsl	r2, r1, #2
   10f64:	add	r0, r7, #12
   10f68:	mov	r1, sp
   10f6c:	bl	10a94 <memcpy@plt>
   10f70:	mov	r0, r6
   10f74:	mov	r1, r7
   10f78:	bl	118a4 <getc@plt+0xce4>
   10f7c:	ldr	r0, [r7, #24]
   10f80:	movw	r1, #8056	; 0x1f78
   10f84:	tst	r8, #255	; 0xff
   10f88:	add	r0, r0, #1
   10f8c:	str	r0, [r7, #24]
   10f90:	mov	r0, r6
   10f94:	ldr	r1, [r0, r1]!
   10f98:	add	r1, r1, #1
   10f9c:	str	r1, [r0]
   10fa0:	beq	10fc0 <getc@plt+0x400>
   10fa4:	ldr	r0, [r7, #28]
   10fa8:	movw	r1, #8060	; 0x1f7c
   10fac:	add	r0, r0, #1
   10fb0:	str	r0, [r7, #28]
   10fb4:	ldr	r1, [r6, r1]!
   10fb8:	add	r1, r1, #1
   10fbc:	str	r1, [r6]
   10fc0:	ldr	r9, [r9, #4]
   10fc4:	cmp	r9, #0
   10fc8:	bne	10e9c <getc@plt+0x2dc>
   10fcc:	sub	sp, fp, #28
   10fd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10fd4:	andeq	r2, r1, r4, lsr r2
   10fd8:	andeq	r2, r1, r4, lsr r2
   10fdc:	andeq	r2, r1, ip, lsr #4
   10fe0:	andeq	r2, r1, r0, lsl #4
   10fe4:			; <UNDEFINED> instruction: 0x000121b0
   10fe8:	push	{fp, lr}
   10fec:	mov	fp, sp
   10ff0:	ldr	r2, [pc, #88]	; 11050 <getc@plt+0x490>
   10ff4:	ldr	r2, [pc, r2]
   10ff8:	ldrsh	ip, [r2]
   10ffc:	cmp	ip, #1
   11000:	movlt	r0, #0
   11004:	poplt	{fp, pc}
   11008:	add	r1, r1, #12
   1100c:	add	r0, r0, #12
   11010:	mov	r3, #0
   11014:	b	11034 <getc@plt+0x474>
   11018:	add	r3, r3, #1
   1101c:	add	r0, r0, #4
   11020:	add	r1, r1, #4
   11024:	sxth	r3, r3
   11028:	cmp	r3, ip
   1102c:	movge	r0, #0
   11030:	popge	{fp, pc}
   11034:	ldr	lr, [r1]
   11038:	ldr	r2, [r0]
   1103c:	cmp	r2, lr
   11040:	beq	11018 <getc@plt+0x458>
   11044:	mov	r0, #1
   11048:	mvncc	r0, #0
   1104c:	pop	{fp, pc}
   11050:	andeq	r2, r1, r4, lsr #1
   11054:	push	{fp, lr}
   11058:	mov	fp, sp
   1105c:	ldr	r2, [r1, #24]
   11060:	ldr	r3, [r0, #24]
   11064:	cmp	r2, r3
   11068:	bne	110dc <getc@plt+0x51c>
   1106c:	ldr	r2, [r1, #28]
   11070:	ldr	r3, [r0, #28]
   11074:	cmp	r2, r3
   11078:	bne	110dc <getc@plt+0x51c>
   1107c:	ldr	r2, [pc, #96]	; 110e4 <getc@plt+0x524>
   11080:	ldr	r2, [pc, r2]
   11084:	ldrsh	ip, [r2]
   11088:	cmp	ip, #1
   1108c:	movlt	r0, #0
   11090:	poplt	{fp, pc}
   11094:	add	r0, r0, #12
   11098:	add	r1, r1, #12
   1109c:	mov	r3, #0
   110a0:	b	110c0 <getc@plt+0x500>
   110a4:	add	r3, r3, #1
   110a8:	add	r0, r0, #4
   110ac:	add	r1, r1, #4
   110b0:	sxth	r3, r3
   110b4:	cmp	r3, ip
   110b8:	movge	r0, #0
   110bc:	popge	{fp, pc}
   110c0:	ldr	lr, [r1]
   110c4:	ldr	r2, [r0]
   110c8:	cmp	r2, lr
   110cc:	beq	110a4 <getc@plt+0x4e4>
   110d0:	mov	r0, #1
   110d4:	mvncc	r0, #0
   110d8:	pop	{fp, pc}
   110dc:	sub	r0, r2, r3
   110e0:	pop	{fp, pc}
   110e4:	andeq	r2, r1, r8, lsl r0
   110e8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   110ec:	add	fp, sp, #24
   110f0:	ldr	r0, [pc, #120]	; 11170 <getc@plt+0x5b0>
   110f4:	add	r0, pc, r0
   110f8:	bl	10b0c <puts@plt>
   110fc:	ldr	r5, [pc, #112]	; 11174 <getc@plt+0x5b4>
   11100:	movw	r8, #8052	; 0x1f74
   11104:	ldr	r5, [pc, r5]
   11108:	ldr	r0, [r5, r8]
   1110c:	cmp	r0, #1
   11110:	blt	11150 <getc@plt+0x590>
   11114:	ldr	r4, [pc, #92]	; 11178 <getc@plt+0x5b8>
   11118:	mov	r7, #0
   1111c:	movw	r6, #8048	; 0x1f70
   11120:	add	r4, pc, r4
   11124:	ldr	r0, [r5, r6]
   11128:	ldr	r0, [r0, r7, lsl #2]
   1112c:	ldr	r3, [r0, #8]
   11130:	ldr	r1, [r0, #24]
   11134:	ldr	r2, [r0, #28]
   11138:	mov	r0, r4
   1113c:	bl	10a4c <printf@plt>
   11140:	ldr	r0, [r5, r8]
   11144:	add	r7, r7, #1
   11148:	cmp	r7, r0
   1114c:	blt	11124 <getc@plt+0x564>
   11150:	movw	r0, #8060	; 0x1f7c
   11154:	ldr	r2, [r5, r0]
   11158:	movw	r0, #8056	; 0x1f78
   1115c:	ldr	r1, [r5, r0]
   11160:	ldr	r0, [pc, #20]	; 1117c <getc@plt+0x5bc>
   11164:	add	r0, pc, r0
   11168:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1116c:	b	10a4c <printf@plt>
   11170:	andeq	r1, r0, r4, lsl #16
   11174:	andeq	r1, r1, ip, asr #31
   11178:	andeq	r1, r0, sl, ror #14
   1117c:	andeq	r1, r0, r8, lsr r7
   11180:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11184:	add	fp, sp, #28
   11188:	sub	sp, sp, #4
   1118c:	ldr	r4, [pc, #300]	; 112c0 <getc@plt+0x700>
   11190:	ldr	r4, [pc, r4]
   11194:	mov	r0, r4
   11198:	bl	119c4 <getc@plt+0xe04>
   1119c:	movw	sl, #8052	; 0x1f74
   111a0:	mov	r5, r4
   111a4:	ldr	r0, [r5, sl]!
   111a8:	ldr	r1, [r5, #-4]
   111ac:	ldr	r2, [pc, #272]	; 112c4 <getc@plt+0x704>
   111b0:	ldr	r2, [pc, r2]
   111b4:	bl	11668 <getc@plt+0xaa8>
   111b8:	ldr	r0, [pc, #264]	; 112c8 <getc@plt+0x708>
   111bc:	add	r0, pc, r0
   111c0:	bl	10b0c <puts@plt>
   111c4:	ldr	r0, [r5]
   111c8:	cmp	r0, #1
   111cc:	blt	1120c <getc@plt+0x64c>
   111d0:	ldr	r5, [pc, #244]	; 112cc <getc@plt+0x70c>
   111d4:	mov	r7, #0
   111d8:	movw	r6, #8048	; 0x1f70
   111dc:	add	r5, pc, r5
   111e0:	ldr	r0, [r4, r6]
   111e4:	ldr	r0, [r0, r7, lsl #2]
   111e8:	ldr	r3, [r0, #8]
   111ec:	ldr	r1, [r0, #24]
   111f0:	ldr	r2, [r0, #28]
   111f4:	mov	r0, r5
   111f8:	bl	10a4c <printf@plt>
   111fc:	ldr	r0, [r4, sl]
   11200:	add	r7, r7, #1
   11204:	cmp	r7, r0
   11208:	blt	111e0 <getc@plt+0x620>
   1120c:	movw	r8, #8060	; 0x1f7c
   11210:	movw	r9, #8056	; 0x1f78
   11214:	ldr	r2, [r4, r8]
   11218:	ldr	r1, [r4, r9]
   1121c:	ldr	r0, [pc, #172]	; 112d0 <getc@plt+0x710>
   11220:	add	r0, pc, r0
   11224:	bl	10a4c <printf@plt>
   11228:	ldr	r0, [pc, #164]	; 112d4 <getc@plt+0x714>
   1122c:	add	r0, pc, r0
   11230:	bl	10b0c <puts@plt>
   11234:	mov	r5, r4
   11238:	ldr	r0, [r5, sl]!
   1123c:	ldr	r1, [r5, #-4]
   11240:	ldr	r2, [pc, #144]	; 112d8 <getc@plt+0x718>
   11244:	ldr	r2, [pc, r2]
   11248:	bl	11668 <getc@plt+0xaa8>
   1124c:	ldr	r0, [pc, #136]	; 112dc <getc@plt+0x71c>
   11250:	add	r0, pc, r0
   11254:	bl	10b0c <puts@plt>
   11258:	ldr	r0, [r5]
   1125c:	cmp	r0, #1
   11260:	blt	112a4 <getc@plt+0x6e4>
   11264:	ldr	r5, [pc, #116]	; 112e0 <getc@plt+0x720>
   11268:	mov	r6, #0
   1126c:	movw	sl, #8048	; 0x1f70
   11270:	movw	r7, #8052	; 0x1f74
   11274:	add	r5, pc, r5
   11278:	ldr	r0, [r4, sl]
   1127c:	ldr	r0, [r0, r6, lsl #2]
   11280:	ldr	r3, [r0, #8]
   11284:	ldr	r1, [r0, #24]
   11288:	ldr	r2, [r0, #28]
   1128c:	mov	r0, r5
   11290:	bl	10a4c <printf@plt>
   11294:	ldr	r0, [r4, r7]
   11298:	add	r6, r6, #1
   1129c:	cmp	r6, r0
   112a0:	blt	11278 <getc@plt+0x6b8>
   112a4:	ldr	r2, [r4, r8]
   112a8:	ldr	r1, [r4, r9]
   112ac:	ldr	r0, [pc, #48]	; 112e4 <getc@plt+0x724>
   112b0:	add	r0, pc, r0
   112b4:	sub	sp, fp, #28
   112b8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   112bc:	b	10a4c <printf@plt>
   112c0:	andeq	r1, r1, r0, asr #30
   112c4:	strdeq	r1, [r1], -r8
   112c8:	andeq	r1, r0, ip, lsr r7
   112cc:	andeq	r1, r0, lr, lsr #13
   112d0:	andeq	r1, r0, ip, ror r6
   112d4:	andeq	r1, r0, r3, asr #14
   112d8:	muleq	r1, r0, lr
   112dc:	andeq	r1, r0, r8, lsr #13
   112e0:	andeq	r1, r0, r6, lsl r6
   112e4:	andeq	r1, r0, ip, ror #11
   112e8:	push	{fp, lr}
   112ec:	mov	fp, sp
   112f0:	sub	sp, sp, #8
   112f4:	str	r0, [sp, #4]
   112f8:	add	r0, sp, #4
   112fc:	mov	r4, r1
   11300:	ldr	r3, [pc, #168]	; 113b0 <getc@plt+0x7f0>
   11304:	ldr	r3, [pc, r3]
   11308:	ldr	r2, [pc, #164]	; 113b4 <getc@plt+0x7f4>
   1130c:	add	r2, pc, r2
   11310:	bl	11cd8 <getc@plt+0x1118>
   11314:	ldr	r0, [sp, #4]
   11318:	cmp	r0, #0
   1131c:	beq	113a4 <getc@plt+0x7e4>
   11320:	ldr	r1, [pc, #144]	; 113b8 <getc@plt+0x7f8>
   11324:	ldr	r1, [pc, r1]
   11328:	ldr	r1, [r1]
   1132c:	cmp	r1, #0
   11330:	beq	1135c <getc@plt+0x79c>
   11334:	ldrb	r2, [r1]
   11338:	sub	r3, r2, #49	; 0x31
   1133c:	uxtb	r3, r3
   11340:	cmp	r3, #2
   11344:	bhi	11398 <getc@plt+0x7d8>
   11348:	ldrb	r3, [r1, #1]
   1134c:	cmp	r3, #0
   11350:	bne	11398 <getc@plt+0x7d8>
   11354:	sub	r1, r2, #48	; 0x30
   11358:	b	11360 <getc@plt+0x7a0>
   1135c:	mov	r1, #1
   11360:	ldr	r2, [pc, #84]	; 113bc <getc@plt+0x7fc>
   11364:	cmp	r0, #1
   11368:	ldr	r2, [pc, r2]
   1136c:	strh	r1, [r2]
   11370:	blt	11390 <getc@plt+0x7d0>
   11374:	mov	r5, #0
   11378:	ldr	r0, [r4, r5, lsl #2]
   1137c:	bl	10e44 <getc@plt+0x284>
   11380:	ldr	r0, [sp, #4]
   11384:	add	r5, r5, #1
   11388:	cmp	r5, r0
   1138c:	blt	11378 <getc@plt+0x7b8>
   11390:	bl	11180 <getc@plt+0x5c0>
   11394:	bl	11f1c <getc@plt+0x135c>
   11398:	ldr	r0, [pc, #36]	; 113c4 <getc@plt+0x804>
   1139c:	add	r0, pc, r0
   113a0:	bl	11fb0 <error@@Base+0x50>
   113a4:	ldr	r0, [pc, #20]	; 113c0 <getc@plt+0x800>
   113a8:	add	r0, pc, r0
   113ac:	bl	11f60 <error@@Base>
   113b0:	andeq	r1, r1, ip, lsr #27
   113b4:	andeq	r1, r0, r3, lsr #11
   113b8:	andeq	r1, r1, r8, ror sp
   113bc:	andeq	r1, r1, r0, lsr sp
   113c0:	andeq	r1, r0, r6, lsr r5
   113c4:	andeq	r1, r0, r0, ror #9
   113c8:	vmov.i32	q8, #0	; 0x00000000
   113cc:	vst1.32	{d16-d17}, [r0]
   113d0:	bx	lr
   113d4:	push	{r4, r5, fp, lr}
   113d8:	add	fp, sp, #8
   113dc:	mov	r4, r0
   113e0:	ldr	r0, [r0]
   113e4:	mov	r5, #0
   113e8:	str	r5, [r1]
   113ec:	cmp	r0, #0
   113f0:	str	r0, [r1, #4]
   113f4:	str	r1, [r4]
   113f8:	addeq	r0, r4, #4
   113fc:	str	r1, [r0]
   11400:	ldr	r0, [r4, #8]
   11404:	cmp	r0, #0
   11408:	beq	11414 <getc@plt+0x854>
   1140c:	bl	10a64 <free@plt>
   11410:	str	r5, [r4, #8]
   11414:	ldr	r0, [r4, #12]
   11418:	add	r0, r0, #1
   1141c:	str	r0, [r4, #12]
   11420:	pop	{r4, r5, fp, pc}
   11424:	push	{r4, r5, fp, lr}
   11428:	add	fp, sp, #8
   1142c:	mov	r4, r0
   11430:	ldr	r0, [r0, #4]
   11434:	mov	r5, #0
   11438:	mov	r2, r4
   1143c:	cmp	r0, #0
   11440:	stm	r1, {r0, r5}
   11444:	addne	r2, r0, #4
   11448:	str	r1, [r2]
   1144c:	str	r1, [r4, #4]
   11450:	ldr	r0, [r4, #8]
   11454:	cmp	r0, #0
   11458:	beq	11464 <getc@plt+0x8a4>
   1145c:	bl	10a64 <free@plt>
   11460:	str	r5, [r4, #8]
   11464:	ldr	r0, [r4, #12]
   11468:	add	r0, r0, #1
   1146c:	str	r0, [r4, #12]
   11470:	pop	{r4, r5, fp, pc}
   11474:	push	{r4, sl, fp, lr}
   11478:	add	fp, sp, #8
   1147c:	mov	r4, r0
   11480:	ldr	r0, [r2]
   11484:	mov	r3, r4
   11488:	cmp	r0, #0
   1148c:	stm	r1, {r0, r2}
   11490:	addne	r3, r0, #4
   11494:	str	r1, [r3]
   11498:	str	r1, [r2]
   1149c:	ldr	r0, [r4, #8]
   114a0:	cmp	r0, #0
   114a4:	beq	114b4 <getc@plt+0x8f4>
   114a8:	bl	10a64 <free@plt>
   114ac:	mov	r0, #0
   114b0:	str	r0, [r4, #8]
   114b4:	ldr	r0, [r4, #12]
   114b8:	add	r0, r0, #1
   114bc:	str	r0, [r4, #12]
   114c0:	pop	{r4, sl, fp, pc}
   114c4:	push	{r4, sl, fp, lr}
   114c8:	add	fp, sp, #8
   114cc:	mov	r4, r0
   114d0:	mov	r0, r1
   114d4:	cmp	r1, #0
   114d8:	ldr	r3, [r0, #4]!
   114dc:	moveq	r0, r4
   114e0:	cmp	r3, #0
   114e4:	stm	r2, {r1, r3}
   114e8:	addeq	r3, r4, #4
   114ec:	str	r2, [r0]
   114f0:	str	r2, [r3]
   114f4:	ldr	r0, [r4, #8]
   114f8:	cmp	r0, #0
   114fc:	beq	1150c <getc@plt+0x94c>
   11500:	bl	10a64 <free@plt>
   11504:	mov	r0, #0
   11508:	str	r0, [r4, #8]
   1150c:	ldr	r0, [r4, #12]
   11510:	add	r0, r0, #1
   11514:	str	r0, [r4, #12]
   11518:	pop	{r4, sl, fp, pc}
   1151c:	push	{r4, r5, fp, lr}
   11520:	add	fp, sp, #8
   11524:	mov	r4, r0
   11528:	ldm	r1, {r0, r2}
   1152c:	mov	r5, #0
   11530:	cmp	r0, #0
   11534:	streq	r2, [r4]
   11538:	strne	r2, [r0, #4]
   1153c:	ldrne	r2, [r1, #4]
   11540:	cmp	r2, #0
   11544:	addeq	r2, r4, #4
   11548:	str	r0, [r2]
   1154c:	str	r5, [r1]
   11550:	str	r5, [r1, #4]
   11554:	ldr	r0, [r4, #8]
   11558:	cmp	r0, #0
   1155c:	beq	11568 <getc@plt+0x9a8>
   11560:	bl	10a64 <free@plt>
   11564:	str	r5, [r4, #8]
   11568:	ldr	r0, [r4, #12]
   1156c:	sub	r0, r0, #1
   11570:	str	r0, [r4, #12]
   11574:	pop	{r4, r5, fp, pc}
   11578:	push	{r4, sl, fp, lr}
   1157c:	add	fp, sp, #8
   11580:	mov	r4, r0
   11584:	ldr	r0, [r0, #8]
   11588:	cmp	r0, #0
   1158c:	beq	11594 <getc@plt+0x9d4>
   11590:	pop	{r4, sl, fp, pc}
   11594:	ldr	r0, [r4, #12]
   11598:	cmp	r0, #0
   1159c:	beq	11590 <getc@plt+0x9d0>
   115a0:	mov	r1, #4
   115a4:	bl	11aa0 <getc@plt+0xee0>
   115a8:	str	r0, [r4, #8]
   115ac:	ldr	r1, [r4]
   115b0:	cmp	r1, #0
   115b4:	beq	11590 <getc@plt+0x9d0>
   115b8:	str	r1, [r0]
   115bc:	ldr	r0, [r1, #4]
   115c0:	cmp	r0, #0
   115c4:	popeq	{r4, sl, fp, pc}
   115c8:	mov	r1, #4
   115cc:	ldr	r2, [r4, #8]
   115d0:	str	r0, [r2, r1]
   115d4:	add	r1, r1, #4
   115d8:	ldr	r0, [r0, #4]
   115dc:	cmp	r0, #0
   115e0:	bne	115cc <getc@plt+0xa0c>
   115e4:	b	11590 <getc@plt+0x9d0>
   115e8:	push	{r4, r5, r6, r7, fp, lr}
   115ec:	add	fp, sp, #16
   115f0:	ldr	r6, [r0]
   115f4:	cmp	r6, #0
   115f8:	popeq	{r4, r5, r6, r7, fp, pc}
   115fc:	mov	r4, r1
   11600:	mov	r5, r0
   11604:	mov	r7, #0
   11608:	ldm	r6, {r0, r1}
   1160c:	cmp	r0, #0
   11610:	streq	r1, [r5]
   11614:	strne	r1, [r0, #4]
   11618:	ldrne	r1, [r6, #4]
   1161c:	cmp	r1, #0
   11620:	addeq	r1, r5, #4
   11624:	str	r0, [r1]
   11628:	str	r7, [r6]
   1162c:	str	r7, [r6, #4]
   11630:	ldr	r0, [r5, #8]
   11634:	cmp	r0, #0
   11638:	beq	11644 <getc@plt+0xa84>
   1163c:	bl	10a64 <free@plt>
   11640:	str	r7, [r5, #8]
   11644:	ldr	r0, [r5, #12]
   11648:	sub	r0, r0, #1
   1164c:	str	r0, [r5, #12]
   11650:	mov	r0, r6
   11654:	blx	r4
   11658:	ldr	r6, [r5]
   1165c:	cmp	r6, #0
   11660:	bne	11608 <getc@plt+0xa48>
   11664:	pop	{r4, r5, r6, r7, fp, pc}
   11668:	cmp	r0, #2
   1166c:	bxlt	lr
   11670:	ldr	r3, [pc, #28]	; 11694 <getc@plt+0xad4>
   11674:	add	r3, pc, r3
   11678:	str	r2, [r3]
   1167c:	ldr	r2, [pc, #20]	; 11698 <getc@plt+0xad8>
   11680:	add	r2, pc, r2
   11684:	str	r1, [r2]
   11688:	sub	r1, r0, #1
   1168c:	mov	r0, #0
   11690:	b	1169c <getc@plt+0xadc>
   11694:	andeq	r1, r1, r0, lsr #21
   11698:	muleq	r1, r0, sl
   1169c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   116a0:	add	fp, sp, #24
   116a4:	mov	r8, r1
   116a8:	mov	r5, r0
   116ac:	b	116d0 <getc@plt+0xb10>
   116b0:	sub	r1, r4, #1
   116b4:	str	r6, [r0, r4, lsl #2]
   116b8:	cmp	r1, r5
   116bc:	movgt	r0, r5
   116c0:	blgt	1169c <getc@plt+0xadc>
   116c4:	add	r5, r7, #1
   116c8:	cmp	r5, r8
   116cc:	popge	{r4, r5, r6, r7, r8, sl, fp, pc}
   116d0:	ldr	r0, [pc, #220]	; 117b4 <getc@plt+0xbf4>
   116d4:	cmp	r5, r8
   116d8:	mov	r4, r8
   116dc:	mov	r7, r5
   116e0:	ldr	r0, [pc, r0]
   116e4:	ldr	r6, [r0, r5, lsl #2]
   116e8:	bge	116b0 <getc@plt+0xaf0>
   116ec:	mov	r7, r5
   116f0:	mov	r4, r8
   116f4:	cmp	r7, r4
   116f8:	blt	1170c <getc@plt+0xb4c>
   116fc:	b	11730 <getc@plt+0xb70>
   11700:	sub	r4, r4, #1
   11704:	cmp	r7, r4
   11708:	bge	11730 <getc@plt+0xb70>
   1170c:	ldr	r0, [pc, #164]	; 117b8 <getc@plt+0xbf8>
   11710:	ldr	r0, [pc, r0]
   11714:	ldr	r1, [r0, r4, lsl #2]
   11718:	ldr	r2, [pc, #156]	; 117bc <getc@plt+0xbfc>
   1171c:	mov	r0, r6
   11720:	ldr	r2, [pc, r2]
   11724:	blx	r2
   11728:	cmn	r0, #1
   1172c:	ble	11700 <getc@plt+0xb40>
   11730:	cmp	r7, r4
   11734:	beq	1174c <getc@plt+0xb8c>
   11738:	ldr	r0, [pc, #128]	; 117c0 <getc@plt+0xc00>
   1173c:	ldr	r0, [pc, r0]
   11740:	ldr	r1, [r0, r4, lsl #2]
   11744:	str	r1, [r0, r7, lsl #2]
   11748:	add	r7, r7, #1
   1174c:	cmp	r7, r4
   11750:	bge	11778 <getc@plt+0xbb8>
   11754:	ldr	r0, [pc, #104]	; 117c4 <getc@plt+0xc04>
   11758:	ldr	r0, [pc, r0]
   1175c:	ldr	r1, [r0, r7, lsl #2]
   11760:	ldr	r2, [pc, #96]	; 117c8 <getc@plt+0xc08>
   11764:	mov	r0, r6
   11768:	ldr	r2, [pc, r2]
   1176c:	blx	r2
   11770:	cmp	r0, #1
   11774:	bge	11748 <getc@plt+0xb88>
   11778:	cmp	r7, r4
   1177c:	bne	1178c <getc@plt+0xbcc>
   11780:	cmp	r7, r4
   11784:	blt	11704 <getc@plt+0xb44>
   11788:	b	117a8 <getc@plt+0xbe8>
   1178c:	ldr	r0, [pc, #56]	; 117cc <getc@plt+0xc0c>
   11790:	ldr	r0, [pc, r0]
   11794:	ldr	r1, [r0, r7, lsl #2]
   11798:	str	r1, [r0, r4, lsl #2]
   1179c:	sub	r4, r4, #1
   117a0:	cmp	r7, r4
   117a4:	blt	11704 <getc@plt+0xb44>
   117a8:	ldr	r0, [pc, #32]	; 117d0 <getc@plt+0xc10>
   117ac:	ldr	r0, [pc, r0]
   117b0:	b	116b0 <getc@plt+0xaf0>
   117b4:	andeq	r1, r1, r0, lsr sl
   117b8:	andeq	r1, r1, r0, lsl #20
   117bc:	strdeq	r1, [r1], -r4
   117c0:	ldrdeq	r1, [r1], -r4
   117c4:			; <UNDEFINED> instruction: 0x000119b8
   117c8:	andeq	r1, r1, ip, lsr #19
   117cc:	andeq	r1, r1, r0, lsl #19
   117d0:	andeq	r1, r1, r4, ror #18
   117d4:	push	{r4, r5, r6, sl, fp, lr}
   117d8:	add	fp, sp, #16
   117dc:	mov	r4, r0
   117e0:	movw	r6, #503	; 0x1f7
   117e4:	mov	r5, r0
   117e8:	mov	r0, r5
   117ec:	bl	113c8 <getc@plt+0x808>
   117f0:	subs	r6, r6, #1
   117f4:	add	r5, r5, #16
   117f8:	bne	117e8 <getc@plt+0xc28>
   117fc:	movw	r0, #8052	; 0x1f74
   11800:	mov	r1, #0
   11804:	str	r1, [r4, r0]
   11808:	movw	r0, #8048	; 0x1f70
   1180c:	str	r1, [r4, r0]
   11810:	pop	{r4, r5, r6, sl, fp, pc}
   11814:	push	{r4, r5, r6, sl, fp, lr}
   11818:	add	fp, sp, #16
   1181c:	mov	r5, r1
   11820:	ldrb	r1, [r1]
   11824:	mov	r4, #0
   11828:	mov	r2, #0
   1182c:	cmp	r1, #0
   11830:	beq	11864 <getc@plt+0xca4>
   11834:	add	r3, r5, #1
   11838:	mov	r2, #0
   1183c:	uxtab	r2, r2, r1
   11840:	ldrb	r1, [r3], #1
   11844:	cmp	r1, #0
   11848:	bne	1183c <getc@plt+0xc7c>
   1184c:	movw	r1, #20065	; 0x4e61
   11850:	movt	r1, #33354	; 0x824a
   11854:	umull	r1, r3, r2, r1
   11858:	lsr	r1, r3, #8
   1185c:	movw	r3, #503	; 0x1f7
   11860:	mls	r2, r1, r3, r2
   11864:	ldr	r6, [r0, r2, lsl #4]
   11868:	cmp	r6, #0
   1186c:	bne	11884 <getc@plt+0xcc4>
   11870:	mov	r0, r4
   11874:	pop	{r4, r5, r6, sl, fp, pc}
   11878:	ldr	r6, [r6, #4]
   1187c:	cmp	r6, #0
   11880:	beq	11870 <getc@plt+0xcb0>
   11884:	ldr	r1, [r6, #8]
   11888:	mov	r0, r5
   1188c:	bl	10a40 <strcmp@plt>
   11890:	cmp	r0, #0
   11894:	bne	11878 <getc@plt+0xcb8>
   11898:	mov	r4, r6
   1189c:	mov	r0, r4
   118a0:	pop	{r4, r5, r6, sl, fp, pc}
   118a4:	push	{r4, r5, fp, lr}
   118a8:	add	fp, sp, #8
   118ac:	mov	r4, r0
   118b0:	ldr	r0, [r1, #8]
   118b4:	ldrb	r2, [r0]
   118b8:	cmp	r2, #0
   118bc:	beq	118f4 <getc@plt+0xd34>
   118c0:	add	r3, r0, #1
   118c4:	mov	r0, #0
   118c8:	uxtab	r0, r0, r2
   118cc:	ldrb	r2, [r3], #1
   118d0:	cmp	r2, #0
   118d4:	bne	118c8 <getc@plt+0xd08>
   118d8:	movw	r2, #20065	; 0x4e61
   118dc:	movt	r2, #33354	; 0x824a
   118e0:	umull	r2, r3, r0, r2
   118e4:	lsr	r2, r3, #8
   118e8:	movw	r3, #503	; 0x1f7
   118ec:	mls	r0, r2, r3, r0
   118f0:	b	118f8 <getc@plt+0xd38>
   118f4:	mov	r0, #0
   118f8:	add	r0, r4, r0, lsl #4
   118fc:	bl	113d4 <getc@plt+0x814>
   11900:	movw	r0, #8048	; 0x1f70
   11904:	mov	r5, r4
   11908:	ldr	r0, [r5, r0]!
   1190c:	cmp	r0, #0
   11910:	beq	11920 <getc@plt+0xd60>
   11914:	bl	10a64 <free@plt>
   11918:	mov	r0, #0
   1191c:	str	r0, [r5]
   11920:	movw	r0, #8052	; 0x1f74
   11924:	ldr	r0, [r4, r0]!
   11928:	add	r0, r0, #1
   1192c:	str	r0, [r4]
   11930:	pop	{r4, r5, fp, pc}
   11934:	push	{r4, r5, fp, lr}
   11938:	add	fp, sp, #8
   1193c:	mov	r4, r0
   11940:	ldr	r0, [r1, #8]
   11944:	ldrb	r2, [r0]
   11948:	cmp	r2, #0
   1194c:	beq	11984 <getc@plt+0xdc4>
   11950:	add	r3, r0, #1
   11954:	mov	r0, #0
   11958:	uxtab	r0, r0, r2
   1195c:	ldrb	r2, [r3], #1
   11960:	cmp	r2, #0
   11964:	bne	11958 <getc@plt+0xd98>
   11968:	movw	r2, #20065	; 0x4e61
   1196c:	movt	r2, #33354	; 0x824a
   11970:	umull	r2, r3, r0, r2
   11974:	lsr	r2, r3, #8
   11978:	movw	r3, #503	; 0x1f7
   1197c:	mls	r0, r2, r3, r0
   11980:	b	11988 <getc@plt+0xdc8>
   11984:	mov	r0, #0
   11988:	add	r0, r4, r0, lsl #4
   1198c:	bl	1151c <getc@plt+0x95c>
   11990:	movw	r0, #8048	; 0x1f70
   11994:	mov	r5, r4
   11998:	ldr	r0, [r5, r0]!
   1199c:	cmp	r0, #0
   119a0:	beq	119b0 <getc@plt+0xdf0>
   119a4:	bl	10a64 <free@plt>
   119a8:	mov	r0, #0
   119ac:	str	r0, [r5]
   119b0:	movw	r0, #8052	; 0x1f74
   119b4:	ldr	r0, [r4, r0]!
   119b8:	sub	r0, r0, #1
   119bc:	str	r0, [r4]
   119c0:	pop	{r4, r5, fp, pc}
   119c4:	push	{r4, r5, fp, lr}
   119c8:	add	fp, sp, #8
   119cc:	mov	r4, r0
   119d0:	movw	r0, #8048	; 0x1f70
   119d4:	mov	r5, r4
   119d8:	ldr	r0, [r5, r0]!
   119dc:	cmp	r0, #0
   119e0:	bne	11a3c <getc@plt+0xe7c>
   119e4:	movw	r0, #8052	; 0x1f74
   119e8:	ldr	r0, [r4, r0]
   119ec:	cmp	r0, #0
   119f0:	popeq	{r4, r5, fp, pc}
   119f4:	mov	r1, #4
   119f8:	bl	11aa0 <getc@plt+0xee0>
   119fc:	str	r0, [r5]
   11a00:	mov	r0, #0
   11a04:	movw	ip, #503	; 0x1f7
   11a08:	mov	r2, #0
   11a0c:	ldr	r3, [r4, r2, lsl #4]
   11a10:	cmp	r3, #0
   11a14:	beq	11a30 <getc@plt+0xe70>
   11a18:	ldr	r1, [r5]
   11a1c:	str	r3, [r1, r0, lsl #2]
   11a20:	add	r0, r0, #1
   11a24:	ldr	r3, [r3, #4]
   11a28:	cmp	r3, #0
   11a2c:	bne	11a18 <getc@plt+0xe58>
   11a30:	add	r2, r2, #1
   11a34:	cmp	r2, ip
   11a38:	bne	11a0c <getc@plt+0xe4c>
   11a3c:	pop	{r4, r5, fp, pc}
   11a40:	push	{r4, r5, r6, r7, fp, lr}
   11a44:	add	fp, sp, #16
   11a48:	mov	r5, r1
   11a4c:	mov	r4, r0
   11a50:	movw	r7, #503	; 0x1f7
   11a54:	mov	r6, r0
   11a58:	mov	r0, r6
   11a5c:	mov	r1, r5
   11a60:	bl	115e8 <getc@plt+0xa28>
   11a64:	subs	r7, r7, #1
   11a68:	add	r6, r6, #16
   11a6c:	bne	11a58 <getc@plt+0xe98>
   11a70:	movw	r0, #8048	; 0x1f70
   11a74:	mov	r5, r4
   11a78:	ldr	r0, [r5, r0]!
   11a7c:	cmp	r0, #0
   11a80:	beq	11a90 <getc@plt+0xed0>
   11a84:	bl	10a64 <free@plt>
   11a88:	mov	r0, #0
   11a8c:	str	r0, [r5]
   11a90:	movw	r0, #8052	; 0x1f74
   11a94:	mov	r1, #0
   11a98:	str	r1, [r4, r0]
   11a9c:	pop	{r4, r5, r6, r7, fp, pc}
   11aa0:	push	{fp, lr}
   11aa4:	mov	fp, sp
   11aa8:	bl	10a34 <calloc@plt>
   11aac:	cmp	r0, #0
   11ab0:	popne	{fp, pc}
   11ab4:	ldr	r0, [pc, #4]	; 11ac0 <getc@plt+0xf00>
   11ab8:	add	r0, pc, r0
   11abc:	bl	11f60 <error@@Base>
   11ac0:	andeq	r0, r0, r0, ror #28
   11ac4:	push	{r4, r5, r6, sl, fp, lr}
   11ac8:	add	fp, sp, #16
   11acc:	ldrb	r3, [r0]
   11ad0:	ldrb	ip, [r1]
   11ad4:	mov	r2, r0
   11ad8:	mov	r0, #0
   11adc:	cmp	r3, #0
   11ae0:	beq	11b18 <getc@plt+0xf58>
   11ae4:	add	r6, r2, #1
   11ae8:	add	lr, r1, #1
   11aec:	mov	r2, #0
   11af0:	uxtb	r4, ip
   11af4:	uxtb	r5, r3
   11af8:	cmp	r5, r4
   11afc:	bne	11b28 <getc@plt+0xf68>
   11b00:	ldrb	r3, [r6, r2]
   11b04:	ldrb	ip, [lr, r2]
   11b08:	add	r2, r2, #1
   11b0c:	cmp	r3, #0
   11b10:	bne	11af0 <getc@plt+0xf30>
   11b14:	b	11b1c <getc@plt+0xf5c>
   11b18:	mov	r2, #0
   11b1c:	cmp	ip, #0
   11b20:	popeq	{r4, r5, r6, sl, fp, pc}
   11b24:	mov	r3, #0
   11b28:	ldrb	r1, [r1, r2]
   11b2c:	uxtb	r2, r3
   11b30:	mov	r0, #1
   11b34:	cmp	r2, r1
   11b38:	mvncc	r0, #0
   11b3c:	pop	{r4, r5, r6, sl, fp, pc}
   11b40:	push	{r4, r5, fp, lr}
   11b44:	add	fp, sp, #8
   11b48:	mov	r5, r1
   11b4c:	cmp	r0, #0
   11b50:	beq	11b84 <getc@plt+0xfc4>
   11b54:	mov	r1, r5
   11b58:	mov	r4, r0
   11b5c:	bl	10a58 <fopen@plt>
   11b60:	cmp	r0, #0
   11b64:	popne	{r4, r5, fp, pc}
   11b68:	ldrb	r0, [r5]
   11b6c:	cmp	r0, #119	; 0x77
   11b70:	bne	11ba8 <getc@plt+0xfe8>
   11b74:	ldr	r0, [pc, #72]	; 11bc4 <getc@plt+0x1004>
   11b78:	mov	r1, r4
   11b7c:	add	r0, pc, r0
   11b80:	bl	11fb0 <error@@Base+0x50>
   11b84:	ldrb	r0, [r5]
   11b88:	ldr	r1, [pc, #40]	; 11bb8 <getc@plt+0xff8>
   11b8c:	ldr	r1, [pc, r1]
   11b90:	ldr	r2, [pc, #36]	; 11bbc <getc@plt+0xffc>
   11b94:	cmp	r0, #114	; 0x72
   11b98:	ldr	r2, [pc, r2]
   11b9c:	moveq	r2, r1
   11ba0:	ldr	r0, [r2]
   11ba4:	pop	{r4, r5, fp, pc}
   11ba8:	ldr	r0, [pc, #16]	; 11bc0 <getc@plt+0x1000>
   11bac:	mov	r1, r4
   11bb0:	add	r0, pc, r0
   11bb4:	bl	11fb0 <error@@Base+0x50>
   11bb8:	andeq	r1, r1, r8, lsr r5
   11bbc:	andeq	r1, r1, r0, lsr r5
   11bc0:	muleq	r0, r8, sp
   11bc4:			; <UNDEFINED> instruction: 0x00000db6
   11bc8:	ldr	r1, [pc, #32]	; 11bf0 <getc@plt+0x1030>
   11bcc:	ldr	r1, [pc, r1]
   11bd0:	ldr	r1, [r1]
   11bd4:	cmp	r1, r0
   11bd8:	ldrne	r1, [pc, #20]	; 11bf4 <getc@plt+0x1034>
   11bdc:	ldrne	r1, [pc, r1]
   11be0:	ldrne	r1, [r1]
   11be4:	cmpne	r1, r0
   11be8:	bxeq	lr
   11bec:	b	10b78 <fclose@plt>
   11bf0:	strdeq	r1, [r1], -r8
   11bf4:	andeq	r1, r1, ip, ror #9
   11bf8:	push	{fp, lr}
   11bfc:	mov	fp, sp
   11c00:	sub	sp, sp, #88	; 0x58
   11c04:	mov	r1, r0
   11c08:	mov	r2, sp
   11c0c:	mov	r0, #3
   11c10:	bl	10ad0 <__xstat@plt>
   11c14:	clz	r0, r0
   11c18:	lsr	r0, r0, #5
   11c1c:	mov	sp, fp
   11c20:	pop	{fp, pc}
   11c24:	push	{r4, r5, fp, lr}
   11c28:	add	fp, sp, #8
   11c2c:	sub	sp, sp, #104	; 0x68
   11c30:	ldr	r0, [pc, #92]	; 11c94 <getc@plt+0x10d4>
   11c34:	add	r0, pc, r0
   11c38:	ldrh	r1, [r0]
   11c3c:	add	r5, r1, #1
   11c40:	strh	r5, [r0]
   11c44:	ldr	r0, [pc, #76]	; 11c98 <getc@plt+0x10d8>
   11c48:	ldr	r0, [pc, r0]
   11c4c:	ldr	r4, [r0]
   11c50:	bl	10b3c <getpid@plt>
   11c54:	mov	r3, r0
   11c58:	sxth	r0, r5
   11c5c:	add	r5, sp, #4
   11c60:	mov	r2, r4
   11c64:	str	r0, [sp]
   11c68:	mov	r0, r5
   11c6c:	ldr	r1, [pc, #40]	; 11c9c <getc@plt+0x10dc>
   11c70:	add	r1, pc, r1
   11c74:	bl	10b84 <sprintf@plt>
   11c78:	mov	r0, r5
   11c7c:	bl	10aa0 <strdup@plt>
   11c80:	mov	r4, r0
   11c84:	bl	10ab8 <unlink@plt>
   11c88:	mov	r0, r4
   11c8c:	sub	sp, fp, #8
   11c90:	pop	{r4, r5, fp, pc}
   11c94:	andeq	r1, r1, r4, ror #9
   11c98:	andeq	r1, r1, r0, ror r4
   11c9c:	andeq	r0, r0, r1, lsl #26
   11ca0:	push	{r4, sl, fp, lr}
   11ca4:	add	fp, sp, #8
   11ca8:	mov	r4, r0
   11cac:	bl	10b60 <strlen@plt>
   11cb0:	sub	r0, r0, #1
   11cb4:	sxth	r0, r0
   11cb8:	cmp	r0, #0
   11cbc:	blt	11ccc <getc@plt+0x110c>
   11cc0:	ldrb	r1, [r4, r0]
   11cc4:	cmp	r1, #47	; 0x2f
   11cc8:	bne	11cb0 <getc@plt+0x10f0>
   11ccc:	add	r0, r4, r0
   11cd0:	add	r0, r0, #1
   11cd4:	pop	{r4, sl, fp, pc}
   11cd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11cdc:	add	fp, sp, #28
   11ce0:	sub	sp, sp, #12
   11ce4:	str	r2, [sp]
   11ce8:	stmib	sp, {r0, r1}
   11cec:	mov	r6, r3
   11cf0:	ldr	r4, [r1]
   11cf4:	mov	r0, r4
   11cf8:	bl	10b60 <strlen@plt>
   11cfc:	sub	r0, r0, #1
   11d00:	sxth	r0, r0
   11d04:	cmp	r0, #0
   11d08:	blt	11d18 <getc@plt+0x1158>
   11d0c:	ldrb	r1, [r4, r0]
   11d10:	cmp	r1, #47	; 0x2f
   11d14:	bne	11cfc <getc@plt+0x113c>
   11d18:	ldr	r1, [pc, #484]	; 11f04 <getc@plt+0x1344>
   11d1c:	add	r0, r4, r0
   11d20:	add	r0, r0, #1
   11d24:	ldr	r1, [pc, r1]
   11d28:	str	r0, [r1]
   11d2c:	mov	r0, #2
   11d30:	ldr	r4, [pc, #464]	; 11f08 <getc@plt+0x1348>
   11d34:	add	r4, pc, r4
   11d38:	mov	r1, r4
   11d3c:	bl	10b24 <__sysv_signal@plt>
   11d40:	mov	r0, #15
   11d44:	mov	r1, r4
   11d48:	bl	10b24 <__sysv_signal@plt>
   11d4c:	ldr	r0, [sp, #4]
   11d50:	ldr	r5, [r0]
   11d54:	cmp	r5, #1
   11d58:	bne	11d70 <getc@plt+0x11b0>
   11d5c:	ldr	r0, [pc, #424]	; 11f0c <getc@plt+0x134c>
   11d60:	ldr	r0, [pc, r0]
   11d64:	ldrb	r0, [r0]
   11d68:	cmp	r0, #0
   11d6c:	bne	11eec <getc@plt+0x132c>
   11d70:	ldr	ip, [sp, #8]
   11d74:	mov	r8, #0
   11d78:	cmp	r5, #2
   11d7c:	blt	11ec8 <getc@plt+0x1308>
   11d80:	mov	r8, #0
   11d84:	mov	r7, #1
   11d88:	mov	r9, #1
   11d8c:	ldr	r4, [ip, r7, lsl #2]
   11d90:	ldrb	r0, [r4]
   11d94:	cmp	r0, #45	; 0x2d
   11d98:	bne	11e70 <getc@plt+0x12b0>
   11d9c:	ldrb	sl, [r4, #1]
   11da0:	cmp	sl, #0
   11da4:	beq	11e70 <getc@plt+0x12b0>
   11da8:	mov	r0, r4
   11dac:	bl	10b60 <strlen@plt>
   11db0:	mov	r2, r0
   11db4:	ldr	r0, [pc, #340]	; 11f10 <getc@plt+0x1350>
   11db8:	mov	r1, r4
   11dbc:	add	r0, pc, r0
   11dc0:	bl	10ba8 <strncmp@plt>
   11dc4:	cmp	r0, #0
   11dc8:	beq	11eec <getc@plt+0x132c>
   11dcc:	ldr	ip, [sp, #8]
   11dd0:	add	r1, r7, #1
   11dd4:	mov	r0, #0
   11dd8:	cmp	r1, r5
   11ddc:	ldrlt	r0, [ip, r1, lsl #2]
   11de0:	cmp	r6, #0
   11de4:	ldrbne	r2, [r6]
   11de8:	cmpne	r2, #0
   11dec:	beq	11edc <getc@plt+0x131c>
   11df0:	mov	r1, #0
   11df4:	cmp	sl, r2
   11df8:	beq	11e20 <getc@plt+0x1260>
   11dfc:	mov	r2, #1
   11e00:	sxth	r1, r2
   11e04:	add	r3, r1, r1, lsl #1
   11e08:	ldrb	r3, [r6, r3, lsl #2]
   11e0c:	cmp	r3, #0
   11e10:	beq	11edc <getc@plt+0x131c>
   11e14:	add	r2, r2, #1
   11e18:	cmp	sl, r3
   11e1c:	bne	11e00 <getc@plt+0x1240>
   11e20:	add	r1, r1, r1, lsl #1
   11e24:	add	r3, r6, r1, lsl #2
   11e28:	ldr	r1, [r3, #4]
   11e2c:	cmp	r1, #0
   11e30:	beq	11e90 <getc@plt+0x12d0>
   11e34:	mov	r2, r4
   11e38:	cmp	r0, #0
   11e3c:	ldrb	r7, [r2, #2]!
   11e40:	cmpeq	r7, #0
   11e44:	beq	11e90 <getc@plt+0x12d0>
   11e48:	ldr	r3, [r1]
   11e4c:	cmp	r3, #0
   11e50:	bne	11ef4 <getc@plt+0x1334>
   11e54:	cmp	r7, #0
   11e58:	movne	r0, r2
   11e5c:	str	r0, [r1]
   11e60:	ldrb	r0, [r2]
   11e64:	cmp	r0, #0
   11e68:	addeq	r9, r9, #1
   11e6c:	b	11e7c <getc@plt+0x12bc>
   11e70:	sxth	r0, r8
   11e74:	add	r8, r8, #1
   11e78:	str	r4, [ip, r0, lsl #2]
   11e7c:	add	r9, r9, #1
   11e80:	sxth	r7, r9
   11e84:	cmp	r5, r7
   11e88:	bgt	11d8c <getc@plt+0x11cc>
   11e8c:	b	11ec8 <getc@plt+0x1308>
   11e90:	ldr	r0, [r3, #8]
   11e94:	cmp	r0, #0
   11e98:	beq	11edc <getc@plt+0x131c>
   11e9c:	ldrb	r1, [r4, #2]
   11ea0:	cmp	r1, #0
   11ea4:	bne	11edc <getc@plt+0x131c>
   11ea8:	ldrb	r1, [r0]
   11eac:	cmp	r1, #0
   11eb0:	bne	11ef4 <getc@plt+0x1334>
   11eb4:	mov	r1, #1
   11eb8:	strb	r1, [r0]
   11ebc:	ldr	r0, [sp, #4]
   11ec0:	ldr	r5, [r0]
   11ec4:	b	11e7c <getc@plt+0x12bc>
   11ec8:	ldr	r1, [sp, #4]
   11ecc:	sxth	r0, r8
   11ed0:	str	r0, [r1]
   11ed4:	sub	sp, fp, #28
   11ed8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11edc:	ldr	r0, [pc, #52]	; 11f18 <getc@plt+0x1358>
   11ee0:	mov	r1, r4
   11ee4:	add	r0, pc, r0
   11ee8:	bl	11fb0 <error@@Base+0x50>
   11eec:	ldr	r0, [sp]
   11ef0:	bl	1208c <error@@Base+0x12c>
   11ef4:	ldr	r0, [pc, #24]	; 11f14 <getc@plt+0x1354>
   11ef8:	mov	r1, r4
   11efc:	add	r0, pc, r0
   11f00:	bl	11fb0 <error@@Base+0x50>
   11f04:	muleq	r1, r4, r3
   11f08:	andeq	r0, r0, r8, lsl r3
   11f0c:	andeq	r1, r1, r0, lsr r3
   11f10:	ldrdeq	r0, [r0], -r2
   11f14:			; <UNDEFINED> instruction: 0x00000ab6
   11f18:			; <UNDEFINED> instruction: 0x00000abf
   11f1c:	push	{fp, lr}
   11f20:	mov	fp, sp
   11f24:	mov	r0, #0
   11f28:	bl	11f2c <getc@plt+0x136c>
   11f2c:	push	{fp, lr}
   11f30:	mov	fp, sp
   11f34:	mov	r4, r0
   11f38:	ldr	r0, [pc, #28]	; 11f5c <getc@plt+0x139c>
   11f3c:	ldr	r0, [pc, r0]
   11f40:	ldr	r0, [r0]
   11f44:	cmp	r0, #0
   11f48:	beq	11f50 <getc@plt+0x1390>
   11f4c:	blx	r0
   11f50:	bl	120ec <error@@Base+0x18c>
   11f54:	mov	r0, r4
   11f58:	bl	10b48 <exit@plt>
   11f5c:	andeq	r1, r1, r0, lsl #3

00011f60 <error@@Base>:
   11f60:	push	{fp, lr}
   11f64:	mov	fp, sp
   11f68:	mov	r3, r0
   11f6c:	ldr	r0, [pc, #44]	; 11fa0 <error@@Base+0x40>
   11f70:	ldr	r0, [pc, r0]
   11f74:	ldr	r2, [r0]
   11f78:	ldr	r0, [pc, #36]	; 11fa4 <error@@Base+0x44>
   11f7c:	ldr	r0, [pc, r0]
   11f80:	ldr	r0, [r0]
   11f84:	ldr	r1, [pc, #28]	; 11fa8 <error@@Base+0x48>
   11f88:	add	r1, pc, r1
   11f8c:	bl	10b6c <fprintf@plt>
   11f90:	ldr	r0, [pc, #20]	; 11fac <error@@Base+0x4c>
   11f94:	ldr	r0, [pc, r0]
   11f98:	ldr	r0, [r0]
   11f9c:	bl	11f2c <getc@plt+0x136c>
   11fa0:	andeq	r1, r1, r8, asr #2
   11fa4:	andeq	r1, r1, r0, lsr r1
   11fa8:	ldrdeq	r0, [r0], -r4
   11fac:	andeq	r1, r1, r8, lsr r1
   11fb0:	push	{fp, lr}
   11fb4:	mov	fp, sp
   11fb8:	sub	sp, sp, #8
   11fbc:	mov	r3, r0
   11fc0:	ldr	r0, [pc, #48]	; 11ff8 <error@@Base+0x98>
   11fc4:	ldr	r0, [pc, r0]
   11fc8:	ldr	r2, [r0]
   11fcc:	ldr	r0, [pc, #40]	; 11ffc <error@@Base+0x9c>
   11fd0:	ldr	r0, [pc, r0]
   11fd4:	str	r1, [sp]
   11fd8:	ldr	r0, [r0]
   11fdc:	ldr	r1, [pc, #28]	; 12000 <error@@Base+0xa0>
   11fe0:	add	r1, pc, r1
   11fe4:	bl	10b6c <fprintf@plt>
   11fe8:	ldr	r0, [pc, #20]	; 12004 <error@@Base+0xa4>
   11fec:	ldr	r0, [pc, r0]
   11ff0:	ldr	r0, [r0]
   11ff4:	bl	11f2c <getc@plt+0x136c>
   11ff8:	strdeq	r1, [r1], -r4
   11ffc:	ldrdeq	r1, [r1], -ip
   12000:	andeq	r0, r0, r4, lsl #19
   12004:	andeq	r1, r1, r0, ror #1
   12008:	push	{fp, lr}
   1200c:	mov	fp, sp
   12010:	sub	sp, sp, #8
   12014:	mov	r3, r0
   12018:	ldr	r0, [pc, #40]	; 12048 <error@@Base+0xe8>
   1201c:	ldr	r0, [pc, r0]
   12020:	ldr	r2, [r0]
   12024:	ldr	r0, [pc, #32]	; 1204c <error@@Base+0xec>
   12028:	ldr	r0, [pc, r0]
   1202c:	str	r1, [sp]
   12030:	ldr	r0, [r0]
   12034:	ldr	r1, [pc, #20]	; 12050 <error@@Base+0xf0>
   12038:	add	r1, pc, r1
   1203c:	bl	10b6c <fprintf@plt>
   12040:	mov	sp, fp
   12044:	pop	{fp, pc}
   12048:	muleq	r1, ip, r0
   1204c:	andeq	r1, r1, r4, lsl #1
   12050:	andeq	r0, r0, ip, lsr #18
   12054:	ldr	r0, [pc, #40]	; 12084 <error@@Base+0x124>
   12058:	add	r0, pc, r0
   1205c:	ldrb	r1, [r0]
   12060:	cmp	r1, #1
   12064:	bxeq	lr
   12068:	push	{fp, lr}
   1206c:	mov	fp, sp
   12070:	mov	r1, #1
   12074:	strb	r1, [r0]
   12078:	ldr	r0, [pc, #8]	; 12088 <error@@Base+0x128>
   1207c:	add	r0, pc, r0
   12080:	bl	11f60 <error@@Base>
   12084:	andeq	r1, r1, r2, asr #1
   12088:	andeq	r0, r0, r3, lsl #18
   1208c:	push	{fp, lr}
   12090:	mov	fp, sp
   12094:	mov	r3, r0
   12098:	ldr	r0, [pc, #60]	; 120dc <error@@Base+0x17c>
   1209c:	ldr	r0, [pc, r0]
   120a0:	ldr	r0, [r0]
   120a4:	cmp	r0, #0
   120a8:	bne	120d4 <error@@Base+0x174>
   120ac:	ldr	r0, [pc, #44]	; 120e0 <error@@Base+0x180>
   120b0:	ldr	r0, [pc, r0]
   120b4:	ldr	r2, [r0]
   120b8:	ldr	r0, [pc, #36]	; 120e4 <error@@Base+0x184>
   120bc:	ldr	r0, [pc, r0]
   120c0:	ldr	r0, [r0]
   120c4:	ldr	r1, [pc, #28]	; 120e8 <error@@Base+0x188>
   120c8:	add	r1, pc, r1
   120cc:	bl	10b6c <fprintf@plt>
   120d0:	bl	11f1c <getc@plt+0x135c>
   120d4:	blx	r0
   120d8:	bl	11f1c <getc@plt+0x135c>
   120dc:	andeq	r1, r1, r4
   120e0:	andeq	r1, r1, r8
   120e4:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   120e8:	andeq	r0, r0, ip, asr #17
   120ec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   120f0:	add	fp, sp, #24
   120f4:	sub	sp, sp, #104	; 0x68
   120f8:	ldr	r8, [pc, #124]	; 1217c <error@@Base+0x21c>
   120fc:	add	r8, pc, r8
   12100:	ldrsh	r0, [r8]
   12104:	cmp	r0, #1
   12108:	blt	12174 <error@@Base+0x214>
   1210c:	ldr	r9, [pc, #108]	; 12180 <error@@Base+0x220>
   12110:	mov	r7, #1
   12114:	add	r4, sp, #4
   12118:	ldr	r9, [pc, r9]
   1211c:	ldr	r5, [pc, #96]	; 12184 <error@@Base+0x224>
   12120:	add	r5, pc, r5
   12124:	ldr	r6, [r9]
   12128:	bl	10b3c <getpid@plt>
   1212c:	mov	r3, r0
   12130:	sxth	r0, r7
   12134:	mov	r1, r5
   12138:	mov	r2, r6
   1213c:	str	r0, [sp]
   12140:	mov	r0, r4
   12144:	bl	10b84 <sprintf@plt>
   12148:	mov	r0, r4
   1214c:	bl	10aa0 <strdup@plt>
   12150:	mov	r6, r0
   12154:	bl	10ab8 <unlink@plt>
   12158:	mov	r0, r6
   1215c:	bl	10a64 <free@plt>
   12160:	add	r0, r7, #1
   12164:	sxth	r7, r0
   12168:	ldrsh	r0, [r8]
   1216c:	cmp	r7, r0
   12170:	ble	12124 <error@@Base+0x1c4>
   12174:	sub	sp, fp, #24
   12178:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1217c:	andeq	r1, r1, ip, lsl r0
   12180:	andeq	r0, r1, r0, lsr #31
   12184:	andeq	r0, r0, r1, asr r8
   12188:	push	{r4, r5, r6, sl, fp, lr}
   1218c:	add	fp, sp, #16
   12190:	mov	r5, r1
   12194:	mov	r6, r0
   12198:	mov	r0, #1
   1219c:	mov	r1, #16
   121a0:	mov	r4, r2
   121a4:	bl	11aa0 <getc@plt+0xee0>
   121a8:	strb	r5, [r0, #8]
   121ac:	mov	r1, r0
   121b0:	str	r4, [r0, #12]
   121b4:	mov	r0, r6
   121b8:	pop	{r4, r5, r6, sl, fp, lr}
   121bc:	b	11424 <getc@plt+0x864>
   121c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   121c4:	add	fp, sp, #28
   121c8:	sub	sp, sp, #124	; 0x7c
   121cc:	mov	r4, r2
   121d0:	mov	r2, r1
   121d4:	cmp	r1, #0
   121d8:	str	r0, [sp, #16]
   121dc:	bne	121ec <error@@Base+0x28c>
   121e0:	ldrb	r0, [r4]
   121e4:	cmp	r0, #0
   121e8:	bne	12518 <error@@Base+0x5b8>
   121ec:	ldr	r0, [sp, #16]
   121f0:	ldr	r0, [r0, #4]
   121f4:	str	r0, [sp, #4]
   121f8:	mov	r0, r2
   121fc:	ldr	r1, [pc, #808]	; 1252c <error@@Base+0x5cc>
   12200:	add	r1, pc, r1
   12204:	bl	11b40 <getc@plt+0xf80>
   12208:	mov	r6, r0
   1220c:	ldrb	r0, [r4]
   12210:	cmp	r0, #0
   12214:	beq	1225c <error@@Base+0x2fc>
   12218:	add	r0, sp, #20
   1221c:	mov	r1, #99	; 0x63
   12220:	mov	r2, r6
   12224:	bl	10a7c <fgets@plt>
   12228:	cmp	r0, #0
   1222c:	beq	1224c <error@@Base+0x2ec>
   12230:	ldr	r1, [pc, #760]	; 12530 <error@@Base+0x5d0>
   12234:	add	r0, sp, #20
   12238:	mov	r2, #51	; 0x33
   1223c:	add	r1, pc, r1
   12240:	bl	10ba8 <strncmp@plt>
   12244:	cmp	r0, #0
   12248:	beq	124a8 <error@@Base+0x548>
   1224c:	mov	r0, r6
   12250:	bl	10aac <rewind@plt>
   12254:	mov	r5, #0
   12258:	strb	r5, [r4, #11]
   1225c:	ldr	r9, [r4, #4]
   12260:	ldrb	r8, [r4, #1]
   12264:	mov	r0, r6
   12268:	str	r4, [sp, #8]
   1226c:	cmp	r9, #0
   12270:	movweq	r9, #94	; 0x5e
   12274:	bl	10bc0 <getc@plt>
   12278:	cmn	r0, #1
   1227c:	beq	12340 <error@@Base+0x3e0>
   12280:	add	r1, sp, #20
   12284:	mov	sl, #0
   12288:	sub	r4, fp, #32
   1228c:	add	r1, r1, #1
   12290:	str	r1, [sp, #12]
   12294:	ldr	r1, [pc, #668]	; 12538 <error@@Base+0x5d8>
   12298:	ldr	r1, [pc, r1]
   1229c:	add	r1, r1, r0
   122a0:	ldrsb	r5, [r1]
   122a4:	cmp	r5, #0
   122a8:	ble	124f8 <error@@Base+0x598>
   122ac:	cmp	r5, #1
   122b0:	strb	r0, [sp, #20]
   122b4:	beq	122d8 <error@@Base+0x378>
   122b8:	ldr	r0, [sp, #12]
   122bc:	sub	r7, r5, #1
   122c0:	mov	r1, #1
   122c4:	mov	r3, r6
   122c8:	mov	r2, r7
   122cc:	bl	10af4 <fread@plt>
   122d0:	cmp	r0, r7
   122d4:	bne	1250c <error@@Base+0x5ac>
   122d8:	add	r0, sp, #20
   122dc:	mov	r1, #4
   122e0:	mov	r2, r4
   122e4:	bl	10b00 <utf8proc_iterate@plt>
   122e8:	cmp	r0, r5
   122ec:	bne	12504 <error@@Base+0x5a4>
   122f0:	ldr	r5, [fp, #-32]	; 0xffffffe0
   122f4:	cmp	r8, #0
   122f8:	beq	12308 <error@@Base+0x3a8>
   122fc:	mov	r7, #1
   12300:	cmp	r5, r9
   12304:	beq	1232c <error@@Base+0x3cc>
   12308:	mov	r0, #1
   1230c:	mov	r1, #16
   12310:	bl	11aa0 <getc@plt+0xee0>
   12314:	strb	sl, [r0, #8]
   12318:	mov	r1, r0
   1231c:	str	r5, [r0, #12]
   12320:	ldr	r0, [sp, #16]
   12324:	bl	11424 <getc@plt+0x864>
   12328:	mov	r7, #0
   1232c:	mov	r0, r6
   12330:	bl	10bc0 <getc@plt>
   12334:	cmn	r0, #1
   12338:	mov	sl, r7
   1233c:	bne	12294 <error@@Base+0x334>
   12340:	mov	r0, r6
   12344:	bl	11bc8 <getc@plt+0x1008>
   12348:	ldr	r8, [sp, #8]
   1234c:	ldr	r9, [sp, #4]
   12350:	ldrb	r0, [r8, #9]
   12354:	cmp	r0, #0
   12358:	beq	12464 <error@@Base+0x504>
   1235c:	ldr	r0, [sp, #16]
   12360:	cmp	r9, #0
   12364:	addne	r0, r9, #4
   12368:	ldr	r6, [r0]
   1236c:	cmp	r6, #0
   12370:	beq	12464 <error@@Base+0x504>
   12374:	mov	r5, #32
   12378:	mov	r7, r6
   1237c:	ldr	r4, [r7, #12]
   12380:	mov	r0, r4
   12384:	bl	10a70 <utf8proc_get_property@plt>
   12388:	cmp	r4, #10
   1238c:	ble	123a8 <error@@Base+0x448>
   12390:	sub	r1, r4, #11
   12394:	cmp	r1, #3
   12398:	bcc	123cc <error@@Base+0x46c>
   1239c:	cmp	r4, #160	; 0xa0
   123a0:	beq	123cc <error@@Base+0x46c>
   123a4:	b	123b8 <error@@Base+0x458>
   123a8:	cmp	r4, #9
   123ac:	beq	123cc <error@@Base+0x46c>
   123b0:	cmp	r4, #10
   123b4:	beq	123d0 <error@@Base+0x470>
   123b8:	ldrsh	r0, [r0]
   123bc:	sub	r0, r0, #23
   123c0:	cmp	r0, #2
   123c4:	strls	r5, [r7, #12]
   123c8:	b	123d0 <error@@Base+0x470>
   123cc:	str	r5, [r7, #12]
   123d0:	ldr	r7, [r7, #4]
   123d4:	cmp	r7, #0
   123d8:	bne	1237c <error@@Base+0x41c>
   123dc:	mov	r4, #0
   123e0:	ldr	r1, [r6, #12]
   123e4:	ldr	r5, [r6, #4]
   123e8:	cmp	r1, #32
   123ec:	bne	12428 <error@@Base+0x4c8>
   123f0:	tst	r4, #255	; 0xff
   123f4:	beq	12444 <error@@Base+0x4e4>
   123f8:	cmp	r5, #0
   123fc:	ldrne	r1, [r5, #12]
   12400:	cmpne	r1, #10
   12404:	beq	12444 <error@@Base+0x4e4>
   12408:	mov	r0, #1
   1240c:	cmp	r1, #32
   12410:	bne	1243c <error@@Base+0x4dc>
   12414:	ldrb	r0, [r6, #8]
   12418:	ldrb	r1, [r5, #8]
   1241c:	orr	r0, r1, r0
   12420:	strb	r0, [r5, #8]
   12424:	b	12444 <error@@Base+0x4e4>
   12428:	subs	r0, r1, #10
   1242c:	movwne	r0, #1
   12430:	tst	r4, #255	; 0xff
   12434:	cmpeq	r1, #10
   12438:	beq	12444 <error@@Base+0x4e4>
   1243c:	mov	r4, r0
   12440:	b	12458 <error@@Base+0x4f8>
   12444:	ldr	r0, [sp, #16]
   12448:	mov	r1, r6
   1244c:	bl	1151c <getc@plt+0x95c>
   12450:	mov	r0, r6
   12454:	bl	10a64 <free@plt>
   12458:	cmp	r5, #0
   1245c:	mov	r6, r5
   12460:	bne	123e0 <error@@Base+0x480>
   12464:	ldrb	r0, [r8, #10]
   12468:	cmp	r0, #0
   1246c:	beq	124a0 <error@@Base+0x540>
   12470:	ldr	r0, [sp, #16]
   12474:	cmp	r9, #0
   12478:	addne	r0, r9, #4
   1247c:	ldr	r4, [r0]
   12480:	cmp	r4, #0
   12484:	beq	124a0 <error@@Base+0x540>
   12488:	ldr	r0, [r4, #12]
   1248c:	bl	10ac4 <utf8proc_tolower@plt>
   12490:	str	r0, [r4, #12]
   12494:	ldr	r4, [r4, #4]
   12498:	cmp	r4, #0
   1249c:	bne	12488 <error@@Base+0x528>
   124a0:	sub	sp, fp, #28
   124a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   124a8:	ldr	r8, [pc, #132]	; 12534 <error@@Base+0x5d4>
   124ac:	mov	r7, #0
   124b0:	add	r9, sp, #20
   124b4:	mov	r5, #1
   124b8:	add	r8, pc, r8
   124bc:	mov	r0, r9
   124c0:	mov	r1, #99	; 0x63
   124c4:	mov	r2, r6
   124c8:	bl	10a7c <fgets@plt>
   124cc:	cmp	r0, #0
   124d0:	beq	12258 <error@@Base+0x2f8>
   124d4:	mov	r0, r9
   124d8:	mov	r1, r8
   124dc:	bl	10a40 <strcmp@plt>
   124e0:	cmp	r0, #0
   124e4:	addeq	r7, r7, #1
   124e8:	sxth	r7, r7
   124ec:	cmp	r7, #2
   124f0:	blt	124bc <error@@Base+0x55c>
   124f4:	b	12258 <error@@Base+0x2f8>
   124f8:	ldr	r0, [pc, #68]	; 12544 <error@@Base+0x5e4>
   124fc:	add	r0, pc, r0
   12500:	bl	11f60 <error@@Base>
   12504:	bl	10b90 <utf8proc_errmsg@plt>
   12508:	bl	11f60 <error@@Base>
   1250c:	ldr	r0, [pc, #52]	; 12548 <error@@Base+0x5e8>
   12510:	add	r0, pc, r0
   12514:	bl	11f60 <error@@Base>
   12518:	ldr	r0, [pc, #28]	; 1253c <error@@Base+0x5dc>
   1251c:	ldr	r1, [pc, #28]	; 12540 <error@@Base+0x5e0>
   12520:	add	r0, pc, r0
   12524:	add	r1, pc, r1
   12528:	bl	11fb0 <error@@Base+0x50>
   1252c:	andeq	r0, r0, pc, lsl #17
   12530:	andeq	r0, r0, sp, asr #15
   12534:	andeq	r0, r0, r9, lsl #11
   12538:	andeq	r0, r1, r8, lsr #28
   1253c:	andeq	r0, r0, r3, lsr #9
   12540:	andeq	r0, r0, pc, lsr #9
   12544:	andeq	r0, r0, sp, ror r5
   12548:	andeq	r0, r0, r1, lsl #11
   1254c:	push	{fp, lr}
   12550:	mov	fp, sp
   12554:	bl	10a88 <utf8proc_encode_char@plt>
   12558:	cmp	r0, #0
   1255c:	sxtbgt	r0, r0
   12560:	popgt	{fp, pc}
   12564:	ldr	r0, [pc, #4]	; 12570 <error@@Base+0x610>
   12568:	add	r0, pc, r0
   1256c:	bl	11f60 <error@@Base>
   12570:	andeq	r0, r0, r5, ror r4
   12574:	push	{r4, r5, r6, r7, fp, lr}
   12578:	add	fp, sp, #16
   1257c:	mov	r6, r3
   12580:	mov	r4, r2
   12584:	mov	r5, r1
   12588:	tst	r0, #255	; 0xff
   1258c:	beq	125d4 <error@@Base+0x674>
   12590:	mov	r0, #94	; 0x5e
   12594:	mov	r1, r4
   12598:	bl	10a88 <utf8proc_encode_char@plt>
   1259c:	cmp	r0, #0
   125a0:	ble	1264c <error@@Base+0x6ec>
   125a4:	sxtb	r7, r0
   125a8:	cmp	r5, #10
   125ac:	bne	125e0 <error@@Base+0x680>
   125b0:	ldr	r0, [pc, #224]	; 12698 <error@@Base+0x738>
   125b4:	ldr	r1, [pc, #224]	; 1269c <error@@Base+0x73c>
   125b8:	tst	r6, #255	; 0xff
   125bc:	add	r0, pc, r0
   125c0:	add	r1, pc, r1
   125c4:	moveq	r1, r0
   125c8:	add	r0, r4, r7
   125cc:	pop	{r4, r5, r6, r7, fp, lr}
   125d0:	b	10b84 <sprintf@plt>
   125d4:	mov	r7, #0
   125d8:	cmp	r5, #10
   125dc:	beq	125b0 <error@@Base+0x650>
   125e0:	mov	r0, r5
   125e4:	bl	10a70 <utf8proc_get_property@plt>
   125e8:	cmp	r5, #32
   125ec:	beq	12600 <error@@Base+0x6a0>
   125f0:	ldrsh	r0, [r0]
   125f4:	sub	r1, r0, #1
   125f8:	cmp	r1, #22
   125fc:	bcs	12658 <error@@Base+0x6f8>
   12600:	mov	r0, r5
   12604:	bl	10b54 <utf8proc_category@plt>
   12608:	sub	r0, r0, #6
   1260c:	cmp	r0, #2
   12610:	bhi	1262c <error@@Base+0x6cc>
   12614:	add	r1, r4, r7
   12618:	movw	r0, #9676	; 0x25cc
   1261c:	bl	10a88 <utf8proc_encode_char@plt>
   12620:	cmp	r0, #0
   12624:	ble	1264c <error@@Base+0x6ec>
   12628:	sxtab	r7, r7, r0
   1262c:	add	r1, r4, r7
   12630:	mov	r0, r5
   12634:	bl	10a88 <utf8proc_encode_char@plt>
   12638:	cmp	r0, #0
   1263c:	sxtabgt	r0, r7, r0
   12640:	movgt	r1, #0
   12644:	strbgt	r1, [r4, r0]
   12648:	popgt	{r4, r5, r6, r7, fp, pc}
   1264c:	ldr	r0, [pc, #64]	; 12694 <error@@Base+0x734>
   12650:	add	r0, pc, r0
   12654:	bl	11f60 <error@@Base>
   12658:	cmp	r0, #29
   1265c:	beq	12600 <error@@Base+0x6a0>
   12660:	add	r0, r4, r7
   12664:	cmp	r5, #255	; 0xff
   12668:	bhi	12678 <error@@Base+0x718>
   1266c:	ldr	r1, [pc, #24]	; 1268c <error@@Base+0x72c>
   12670:	add	r1, pc, r1
   12674:	b	12680 <error@@Base+0x720>
   12678:	ldr	r1, [pc, #16]	; 12690 <error@@Base+0x730>
   1267c:	add	r1, pc, r1
   12680:	mov	r2, r5
   12684:	pop	{r4, r5, r6, r7, fp, lr}
   12688:	b	10b84 <sprintf@plt>
   1268c:	andeq	r0, r0, r9, lsl #7
   12690:	andeq	r0, r0, r4, lsl #7
   12694:	andeq	r0, r0, sp, lsl #7
   12698:			; <UNDEFINED> instruction: 0x000003b3
   1269c:	andeq	r0, r0, r4, lsr r4
   126a0:	push	{r4, r5, r6, r7, fp, lr}
   126a4:	add	fp, sp, #16
   126a8:	sub	sp, sp, #16
   126ac:	mov	r6, r2
   126b0:	mov	r2, r1
   126b4:	ldr	r1, [pc, #180]	; 12770 <error@@Base+0x810>
   126b8:	mov	r5, r0
   126bc:	mov	r0, r2
   126c0:	add	r1, pc, r1
   126c4:	bl	11b40 <getc@plt+0xf80>
   126c8:	mov	r4, r0
   126cc:	cmp	r6, #0
   126d0:	beq	12724 <error@@Base+0x7c4>
   126d4:	ldr	r0, [pc, #152]	; 12774 <error@@Base+0x814>
   126d8:	mov	r1, #55	; 0x37
   126dc:	mov	r2, #1
   126e0:	mov	r3, r4
   126e4:	add	r0, pc, r0
   126e8:	bl	10adc <fwrite@plt>
   126ec:	ldr	r7, [pc, #132]	; 12778 <error@@Base+0x818>
   126f0:	mov	r1, #55	; 0x37
   126f4:	mov	r2, #1
   126f8:	mov	r3, r4
   126fc:	add	r7, pc, r7
   12700:	mov	r0, r7
   12704:	bl	10adc <fwrite@plt>
   12708:	mov	r0, r4
   1270c:	blx	r6
   12710:	mov	r0, r7
   12714:	mov	r1, #55	; 0x37
   12718:	mov	r2, #1
   1271c:	mov	r3, r4
   12720:	bl	10adc <fwrite@plt>
   12724:	ldr	r6, [r5]
   12728:	cmp	r6, #0
   1272c:	beq	12760 <error@@Base+0x800>
   12730:	add	r5, sp, #7
   12734:	ldr	r1, [r6, #12]
   12738:	ldrb	r0, [r6, #8]
   1273c:	mov	r2, r5
   12740:	mov	r3, #0
   12744:	bl	12574 <error@@Base+0x614>
   12748:	mov	r0, r5
   1274c:	mov	r1, r4
   12750:	bl	10b9c <fputs@plt>
   12754:	ldr	r6, [r6, #4]
   12758:	cmp	r6, #0
   1275c:	bne	12734 <error@@Base+0x7d4>
   12760:	mov	r0, r4
   12764:	bl	11bc8 <getc@plt+0x1008>
   12768:	sub	sp, fp, #16
   1276c:	pop	{r4, r5, r6, r7, fp, pc}
   12770:	andeq	r0, r0, r7, asr #6
   12774:	andeq	r0, r0, r5, lsr #6
   12778:	andeq	r0, r0, r5, asr #6
   1277c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12780:	add	fp, sp, #28
   12784:	sub	sp, sp, #4
   12788:	mov	r9, #0
   1278c:	mov	sl, r0
   12790:	str	r9, [sp]
   12794:	ldrb	r0, [r1]
   12798:	cmp	r0, #0
   1279c:	beq	127fc <error@@Base+0x89c>
   127a0:	mov	r4, r1
   127a4:	mov	r8, sp
   127a8:	mov	r7, #1
   127ac:	mov	r0, r4
   127b0:	mvn	r1, #0
   127b4:	mov	r2, r8
   127b8:	bl	10b00 <utf8proc_iterate@plt>
   127bc:	cmp	r0, #1
   127c0:	blt	12804 <error@@Base+0x8a4>
   127c4:	ldr	r5, [sp]
   127c8:	mov	r6, r0
   127cc:	mov	r0, #1
   127d0:	mov	r1, #16
   127d4:	bl	11aa0 <getc@plt+0xee0>
   127d8:	strb	r9, [r0, #8]
   127dc:	mov	r1, r0
   127e0:	str	r5, [r0, #12]
   127e4:	mov	r0, sl
   127e8:	bl	11424 <getc@plt+0x864>
   127ec:	ldrb	r0, [r4, r6]!
   127f0:	cmp	r0, #0
   127f4:	bne	127ac <error@@Base+0x84c>
   127f8:	b	12808 <error@@Base+0x8a8>
   127fc:	mov	r7, #1
   12800:	b	12808 <error@@Base+0x8a8>
   12804:	mov	r7, #0
   12808:	mov	r0, r7
   1280c:	sub	sp, fp, #28
   12810:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12814:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12818:	mov	r7, r0
   1281c:	ldr	r6, [pc, #72]	; 1286c <error@@Base+0x90c>
   12820:	ldr	r5, [pc, #72]	; 12870 <error@@Base+0x910>
   12824:	add	r6, pc, r6
   12828:	add	r5, pc, r5
   1282c:	sub	r6, r6, r5
   12830:	mov	r8, r1
   12834:	mov	r9, r2
   12838:	bl	10a14 <calloc@plt-0x20>
   1283c:	asrs	r6, r6, #2
   12840:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12844:	mov	r4, #0
   12848:	add	r4, r4, #1
   1284c:	ldr	r3, [r5], #4
   12850:	mov	r2, r9
   12854:	mov	r1, r8
   12858:	mov	r0, r7
   1285c:	blx	r3
   12860:	cmp	r6, r4
   12864:	bne	12848 <error@@Base+0x8e8>
   12868:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1286c:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   12870:	andeq	r0, r1, r8, asr #13
   12874:	bx	lr

Disassembly of section .fini:

00012878 <.fini>:
   12878:	push	{r3, lr}
   1287c:	pop	{r3, pc}
