
../repos/tbeu-matio-3dd266d/tools/.libs/matdump:     file format elf32-littlearm


Disassembly of section .init:

00010e8c <.init>:
   10e8c:	push	{r3, lr}
   10e90:	bl	1114c <Mat_VarReadNextInfo@plt+0x48>
   10e94:	pop	{r3, pc}

Disassembly of section .plt:

00010e98 <Mat_VarGetNumberOfFields@plt-0x14>:
   10e98:	push	{lr}		; (str lr, [sp, #-4]!)
   10e9c:	ldr	lr, [pc, #4]	; 10ea8 <Mat_VarGetNumberOfFields@plt-0x4>
   10ea0:	add	lr, pc, lr
   10ea4:	ldr	pc, [lr, #8]!
   10ea8:	andeq	r5, r1, r8, asr r1

00010eac <Mat_VarGetNumberOfFields@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #86016	; 0x15000
   10eb4:	ldr	pc, [ip, #344]!	; 0x158

00010eb8 <Mat_SetVerbose@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #86016	; 0x15000
   10ec0:	ldr	pc, [ip, #336]!	; 0x150

00010ec4 <Mat_LogClose@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #86016	; 0x15000
   10ecc:	ldr	pc, [ip, #328]!	; 0x148

00010ed0 <Mat_VarReadNext@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #86016	; 0x15000
   10ed8:	ldr	pc, [ip, #320]!	; 0x140

00010edc <strcmp@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #86016	; 0x15000
   10ee4:	ldr	pc, [ip, #312]!	; 0x138

00010ee8 <Mat_Open@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #86016	; 0x15000
   10ef0:	ldr	pc, [ip, #304]!	; 0x130

00010ef4 <strtol@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #86016	; 0x15000
   10efc:	ldr	pc, [ip, #296]!	; 0x128

00010f00 <printf@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #86016	; 0x15000
   10f08:	ldr	pc, [ip, #288]!	; 0x120

00010f0c <Mat_VarGetCells@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #86016	; 0x15000
   10f14:	ldr	pc, [ip, #280]!	; 0x118

00010f18 <Mat_VarGetCell@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #86016	; 0x15000
   10f20:	ldr	pc, [ip, #272]!	; 0x110

00010f24 <Mat_VarCreate@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #86016	; 0x15000
   10f2c:	ldr	pc, [ip, #264]!	; 0x108

00010f30 <free@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #86016	; 0x15000
   10f38:	ldr	pc, [ip, #256]!	; 0x100

00010f3c <Mat_Warning@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #86016	; 0x15000
   10f44:	ldr	pc, [ip, #248]!	; 0xf8

00010f48 <Mat_VarReadDataLinear@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #86016	; 0x15000
   10f50:	ldr	pc, [ip, #240]!	; 0xf0

00010f54 <Mat_Message@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #86016	; 0x15000
   10f5c:	ldr	pc, [ip, #232]!	; 0xe8

00010f60 <Mat_VarReadData@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #86016	; 0x15000
   10f68:	ldr	pc, [ip, #224]!	; 0xe0

00010f6c <Mat_VarReadDataAll@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #86016	; 0x15000
   10f74:	ldr	pc, [ip, #216]!	; 0xd8

00010f78 <Mat_VarReadInfo@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #86016	; 0x15000
   10f80:	ldr	pc, [ip, #208]!	; 0xd0

00010f84 <fwrite@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #86016	; 0x15000
   10f8c:	ldr	pc, [ip, #200]!	; 0xc8

00010f90 <Mat_VarGetStructFieldnames@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #86016	; 0x15000
   10f98:	ldr	pc, [ip, #192]!	; 0xc0

00010f9c <getenv@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #86016	; 0x15000
   10fa4:	ldr	pc, [ip, #184]!	; 0xb8

00010fa8 <puts@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #86016	; 0x15000
   10fb0:	ldr	pc, [ip, #176]!	; 0xb0

00010fb4 <malloc@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #86016	; 0x15000
   10fbc:	ldr	pc, [ip, #168]!	; 0xa8

00010fc0 <log10@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #86016	; 0x15000
   10fc8:	ldr	pc, [ip, #160]!	; 0xa0

00010fcc <__libc_start_main@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #86016	; 0x15000
   10fd4:	ldr	pc, [ip, #152]!	; 0x98

00010fd8 <__gmon_start__@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #86016	; 0x15000
   10fe0:	ldr	pc, [ip, #144]!	; 0x90

00010fe4 <exit@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #86016	; 0x15000
   10fec:	ldr	pc, [ip, #136]!	; 0x88

00010ff0 <Mat_VarFree@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #86016	; 0x15000
   10ff8:	ldr	pc, [ip, #128]!	; 0x80

00010ffc <Mat_SizeOf@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #86016	; 0x15000
   11004:	ldr	pc, [ip, #120]!	; 0x78

00011008 <strlen@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #86016	; 0x15000
   11010:	ldr	pc, [ip, #112]!	; 0x70

00011014 <strchr@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #86016	; 0x15000
   1101c:	ldr	pc, [ip, #104]!	; 0x68

00011020 <warnx@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #86016	; 0x15000
   11028:	ldr	pc, [ip, #96]!	; 0x60

0001102c <fprintf@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #86016	; 0x15000
   11034:	ldr	pc, [ip, #88]!	; 0x58

00011038 <Mat_GetLibraryVersion@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #86016	; 0x15000
   11040:	ldr	pc, [ip, #80]!	; 0x50

00011044 <Mat_VarPrint@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #86016	; 0x15000
   1104c:	ldr	pc, [ip, #72]!	; 0x48

00011050 <memset@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #86016	; 0x15000
   11058:	ldr	pc, [ip, #64]!	; 0x40

0001105c <putchar@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #86016	; 0x15000
   11064:	ldr	pc, [ip, #56]!	; 0x38

00011068 <Mat_Close@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #86016	; 0x15000
   11070:	ldr	pc, [ip, #48]!	; 0x30

00011074 <Mat_Critical@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #86016	; 0x15000
   1107c:	ldr	pc, [ip, #40]!	; 0x28

00011080 <Mat_LogInitFunc@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #86016	; 0x15000
   11088:	ldr	pc, [ip, #32]!

0001108c <Mat_VerbMessage@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #86016	; 0x15000
   11094:	ldr	pc, [ip, #24]!

00011098 <Mat_VarGetCellsLinear@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #86016	; 0x15000
   110a0:	ldr	pc, [ip, #16]!

000110a4 <sprintf@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #86016	; 0x15000
   110ac:	ldr	pc, [ip, #8]!

000110b0 <Mat_Help@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #86016	; 0x15000
   110b8:	ldr	pc, [ip, #0]!

000110bc <Mat_VarGetStructFieldByName@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #20, 20	; 0x14000
   110c4:	ldr	pc, [ip, #4088]!	; 0xff8

000110c8 <Mat_SizeOfClass@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #20, 20	; 0x14000
   110d0:	ldr	pc, [ip, #4080]!	; 0xff0

000110d4 <Mat_VarGetSize@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #20, 20	; 0x14000
   110dc:	ldr	pc, [ip, #4072]!	; 0xfe8

000110e0 <strncmp@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #20, 20	; 0x14000
   110e8:	ldr	pc, [ip, #4064]!	; 0xfe0

000110ec <abort@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #20, 20	; 0x14000
   110f4:	ldr	pc, [ip, #4056]!	; 0xfd8

000110f8 <Mat_VarDuplicate@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #20, 20	; 0x14000
   11100:	ldr	pc, [ip, #4048]!	; 0xfd0

00011104 <Mat_VarReadNextInfo@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #20, 20	; 0x14000
   1110c:	ldr	pc, [ip, #4040]!	; 0xfc8

Disassembly of section .text:

00011110 <getopt@@Base-0x2998>:
   11110:	mov	fp, #0
   11114:	mov	lr, #0
   11118:	pop	{r1}		; (ldr r1, [sp], #4)
   1111c:	mov	r2, sp
   11120:	push	{r2}		; (str r2, [sp, #-4]!)
   11124:	push	{r0}		; (str r0, [sp, #-4]!)
   11128:	ldr	ip, [pc, #16]	; 11140 <Mat_VarReadNextInfo@plt+0x3c>
   1112c:	push	{ip}		; (str ip, [sp, #-4]!)
   11130:	ldr	r0, [pc, #12]	; 11144 <Mat_VarReadNextInfo@plt+0x40>
   11134:	ldr	r3, [pc, #12]	; 11148 <Mat_VarReadNextInfo@plt+0x44>
   11138:	bl	10fcc <__libc_start_main@plt>
   1113c:	bl	110ec <abort@plt>
   11140:	andeq	r4, r1, r4, lsl #21
   11144:	andeq	r1, r1, r0, lsl #4
   11148:	andeq	r4, r1, r4, lsr #20
   1114c:	ldr	r3, [pc, #20]	; 11168 <Mat_VarReadNextInfo@plt+0x64>
   11150:	ldr	r2, [pc, #20]	; 1116c <Mat_VarReadNextInfo@plt+0x68>
   11154:	add	r3, pc, r3
   11158:	ldr	r2, [r3, r2]
   1115c:	cmp	r2, #0
   11160:	bxeq	lr
   11164:	b	10fd8 <__gmon_start__@plt>
   11168:	andeq	r4, r1, r4, lsr #29
   1116c:	andeq	r0, r0, r4, ror #1
   11170:	ldr	r0, [pc, #24]	; 11190 <Mat_VarReadNextInfo@plt+0x8c>
   11174:	ldr	r3, [pc, #24]	; 11194 <Mat_VarReadNextInfo@plt+0x90>
   11178:	cmp	r3, r0
   1117c:	bxeq	lr
   11180:	ldr	r3, [pc, #16]	; 11198 <Mat_VarReadNextInfo@plt+0x94>
   11184:	cmp	r3, #0
   11188:	bxeq	lr
   1118c:	bx	r3
   11190:	ldrdeq	r6, [r2], -r0
   11194:	ldrdeq	r6, [r2], -r0
   11198:	andeq	r0, r0, r0
   1119c:	ldr	r0, [pc, #36]	; 111c8 <Mat_VarReadNextInfo@plt+0xc4>
   111a0:	ldr	r1, [pc, #36]	; 111cc <Mat_VarReadNextInfo@plt+0xc8>
   111a4:	sub	r1, r1, r0
   111a8:	asr	r1, r1, #2
   111ac:	add	r1, r1, r1, lsr #31
   111b0:	asrs	r1, r1, #1
   111b4:	bxeq	lr
   111b8:	ldr	r3, [pc, #16]	; 111d0 <Mat_VarReadNextInfo@plt+0xcc>
   111bc:	cmp	r3, #0
   111c0:	bxeq	lr
   111c4:	bx	r3
   111c8:	ldrdeq	r6, [r2], -r0
   111cc:	ldrdeq	r6, [r2], -r0
   111d0:	andeq	r0, r0, r0
   111d4:	push	{r4, lr}
   111d8:	ldr	r4, [pc, #24]	; 111f8 <Mat_VarReadNextInfo@plt+0xf4>
   111dc:	ldrb	r3, [r4]
   111e0:	cmp	r3, #0
   111e4:	popne	{r4, pc}
   111e8:	bl	11170 <Mat_VarReadNextInfo@plt+0x6c>
   111ec:	mov	r3, #1
   111f0:	strb	r3, [r4]
   111f4:	pop	{r4, pc}
   111f8:	ldrdeq	r6, [r2], -r0
   111fc:	b	1119c <Mat_VarReadNextInfo@plt+0x98>
   11200:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11204:	add	fp, sp, #28
   11208:	sub	sp, sp, #4
   1120c:	vpush	{d8-d10}
   11210:	sub	sp, sp, #104	; 0x68
   11214:	str	r0, [sp, #56]	; 0x38
   11218:	sub	r0, fp, #68	; 0x44
   1121c:	mov	r8, r1
   11220:	add	r1, r0, #4
   11224:	add	r2, r0, #8
   11228:	bl	11038 <Mat_GetLibraryVersion@plt>
   1122c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11230:	cmp	r0, #1
   11234:	ldreq	r0, [fp, #-64]	; 0xffffffc0
   11238:	cmpeq	r0, #5
   1123c:	beq	11268 <Mat_VarReadNextInfo@plt+0x164>
   11240:	ldr	r0, [pc, #4076]	; 12234 <Mat_VarReadNextInfo@plt+0x1130>
   11244:	mov	r1, #55	; 0x37
   11248:	mov	r2, #1
   1124c:	mov	r4, #1
   11250:	ldr	r0, [pc, r0]
   11254:	ldr	r3, [r0]
   11258:	ldr	r0, [pc, #4056]	; 12238 <Mat_VarReadNextInfo@plt+0x1134>
   1125c:	add	r0, pc, r0
   11260:	bl	10f84 <fwrite@plt>
   11264:	b	125ac <Mat_VarReadNextInfo@plt+0x14a8>
   11268:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1126c:	cmp	r0, #15
   11270:	bne	11240 <Mat_VarReadNextInfo@plt+0x13c>
   11274:	ldr	r0, [pc, #4032]	; 1223c <Mat_VarReadNextInfo@plt+0x1138>
   11278:	ldr	r1, [pc, #4032]	; 12240 <Mat_VarReadNextInfo@plt+0x113c>
   1127c:	add	r0, pc, r0
   11280:	add	r1, pc, r1
   11284:	bl	11080 <Mat_LogInitFunc@plt>
   11288:	ldr	r1, [pc, #4020]	; 12244 <Mat_VarReadNextInfo@plt+0x1140>
   1128c:	ldr	r0, [pc, #4020]	; 12248 <Mat_VarReadNextInfo@plt+0x1144>
   11290:	mov	r9, #0
   11294:	mov	sl, #1
   11298:	add	r1, pc, r1
   1129c:	add	r0, pc, r0
   112a0:	str	r0, [r1]
   112a4:	ldr	r4, [pc, #4000]	; 1224c <Mat_VarReadNextInfo@plt+0x1148>
   112a8:	ldr	r5, [pc, #4000]	; 12250 <Mat_VarReadNextInfo@plt+0x114c>
   112ac:	ldr	r6, [pc, #4000]	; 12254 <Mat_VarReadNextInfo@plt+0x1150>
   112b0:	ldr	r7, [pc, #4000]	; 12258 <Mat_VarReadNextInfo@plt+0x1154>
   112b4:	str	r8, [sp, #32]
   112b8:	add	r4, pc, r4
   112bc:	add	r5, pc, r5
   112c0:	add	r6, pc, r6
   112c4:	add	r7, pc, r7
   112c8:	b	112d0 <Mat_VarReadNextInfo@plt+0x1cc>
   112cc:	strb	sl, [r7]
   112d0:	ldr	r0, [sp, #56]	; 0x38
   112d4:	mov	r1, r8
   112d8:	mov	r2, r4
   112dc:	mov	r3, r5
   112e0:	str	r9, [sp]
   112e4:	bl	14560 <getopt_long@@Base>
   112e8:	mov	r1, r0
   112ec:	sub	r0, r0, #72	; 0x48
   112f0:	cmp	r0, #46	; 0x2e
   112f4:	bhi	113e0 <Mat_VarReadNextInfo@plt+0x2dc>
   112f8:	add	r2, pc, #4
   112fc:	ldr	r0, [r2, r0, lsl #2]
   11300:	add	pc, r2, r0
   11304:			; <UNDEFINED> instruction: 0x000012bc
   11308:	andeq	r0, r0, r4, ror #1
   1130c:	andeq	r0, r0, r4, ror #1
   11310:	andeq	r0, r0, r4, ror #1
   11314:	andeq	r0, r0, r4, ror #1
   11318:	andeq	r0, r0, r4, ror #1
   1131c:	andeq	r0, r0, r4, ror #1
   11320:	andeq	r0, r0, r4, ror #1
   11324:	andeq	r0, r0, r4, ror #1
   11328:	andeq	r0, r0, r4, ror #1
   1132c:	andeq	r0, r0, r4, ror #1
   11330:	andeq	r0, r0, r4, ror #1
   11334:	andeq	r0, r0, r4, ror #1
   11338:	andeq	r0, r0, r4, ror #1
   1133c:	ldrdeq	r1, [r0], -r0
   11340:	andeq	r0, r0, r4, ror #1
   11344:	andeq	r0, r0, r4, ror #1
   11348:	andeq	r0, r0, r4, ror #1
   1134c:	andeq	r0, r0, r4, ror #1
   11350:	andeq	r0, r0, r4, ror #1
   11354:	andeq	r0, r0, r4, ror #1
   11358:	andeq	r0, r0, r4, ror #1
   1135c:	andeq	r0, r0, r4, ror #1
   11360:	andeq	r0, r0, r4, ror #1
   11364:	andeq	r0, r0, r4, ror #1
   11368:	andeq	r0, r0, r4, ror #1
   1136c:	andeq	r0, r0, r4, ror #1
   11370:	andeq	r0, r0, r4, ror #1
   11374:	strheq	r0, [r0], -ip
   11378:	andeq	r0, r0, r4, ror #1
   1137c:	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   11380:	andeq	r0, r0, r4, ror #1
   11384:			; <UNDEFINED> instruction: 0xffffffc8
   11388:	andeq	r0, r0, r4, ror #1
   1138c:	andeq	r0, r0, r4, ror #1
   11390:	andeq	r0, r0, r4, ror #1
   11394:	andeq	r0, r0, r4, ror #1
   11398:	andeq	r0, r0, r4, ror #1
   1139c:	andeq	r0, r0, r4, ror #1
   113a0:	andeq	r0, r0, r4, ror #1
   113a4:	andeq	r0, r0, r4, ror #1
   113a8:	andeq	r0, r0, r4, ror #1
   113ac:	andeq	r0, r0, r4, ror #1
   113b0:	andeq	r0, r0, r4, ror #1
   113b4:	andeq	r0, r0, r4, ror #1
   113b8:	andeq	r0, r0, r4, ror #1
   113bc:	andeq	r0, r0, r4, lsr r1
   113c0:	ldr	r0, [pc, #3732]	; 1225c <Mat_VarReadNextInfo@plt+0x1158>
   113c4:	add	r0, pc, r0
   113c8:	strb	sl, [r0]
   113cc:	mov	r0, #1
   113d0:	ldr	r1, [pc, #3720]	; 12260 <Mat_VarReadNextInfo@plt+0x115c>
   113d4:	add	r1, pc, r1
   113d8:	bl	1108c <Mat_VerbMessage@plt>
   113dc:	b	112d0 <Mat_VarReadNextInfo@plt+0x1cc>
   113e0:	cmn	r1, #1
   113e4:	beq	11478 <Mat_VarReadNextInfo@plt+0x374>
   113e8:	mov	r0, r6
   113ec:	bl	10f00 <printf@plt>
   113f0:	b	112d0 <Mat_VarReadNextInfo@plt+0x1cc>
   113f4:	ldr	r0, [pc, #3688]	; 12264 <Mat_VarReadNextInfo@plt+0x1160>
   113f8:	ldr	r0, [pc, r0]
   113fc:	ldr	r8, [r0]
   11400:	cmp	r8, #0
   11404:	beq	11448 <Mat_VarReadNextInfo@plt+0x344>
   11408:	ldr	r1, [pc, #4076]	; 123fc <Mat_VarReadNextInfo@plt+0x12f8>
   1140c:	mov	r0, r8
   11410:	add	r1, pc, r1
   11414:	bl	10edc <strcmp@plt>
   11418:	cmp	r0, #0
   1141c:	beq	1145c <Mat_VarReadNextInfo@plt+0x358>
   11420:	ldr	r0, [pc, #4080]	; 12418 <Mat_VarReadNextInfo@plt+0x1314>
   11424:	mov	r1, r8
   11428:	add	r0, pc, r0
   1142c:	bl	10f3c <Mat_Warning@plt>
   11430:	ldr	r8, [sp, #32]
   11434:	b	112d0 <Mat_VarReadNextInfo@plt+0x1cc>
   11438:	mov	r0, #1
   1143c:	mov	r1, #0
   11440:	bl	10eb8 <Mat_SetVerbose@plt>
   11444:	b	112d0 <Mat_VarReadNextInfo@plt+0x1cc>
   11448:	ldr	r0, [pc, #4044]	; 1241c <Mat_VarReadNextInfo@plt+0x1318>
   1144c:	add	r0, pc, r0
   11450:	bl	10f3c <Mat_Warning@plt>
   11454:	ldr	r8, [sp, #32]
   11458:	b	112d0 <Mat_VarReadNextInfo@plt+0x1cc>
   1145c:	ldr	r0, [pc, #4028]	; 12420 <Mat_VarReadNextInfo@plt+0x131c>
   11460:	ldr	r1, [pc, #4028]	; 12424 <Mat_VarReadNextInfo@plt+0x1320>
   11464:	ldr	r8, [sp, #32]
   11468:	add	r0, pc, r0
   1146c:	add	r1, pc, r1
   11470:	str	r1, [r0]
   11474:	b	112d0 <Mat_VarReadNextInfo@plt+0x1cc>
   11478:	ldr	r4, [pc, #4084]	; 12474 <Mat_VarReadNextInfo@plt+0x1370>
   1147c:	ldr	r4, [pc, r4]
   11480:	ldr	r1, [sp, #56]	; 0x38
   11484:	ldr	r0, [r4]
   11488:	cmp	r0, r1
   1148c:	bge	124cc <Mat_VarReadNextInfo@plt+0x13c8>
   11490:	ldr	r0, [r8, r0, lsl #2]
   11494:	mov	r1, #0
   11498:	bl	10ee8 <Mat_Open@plt>
   1149c:	mov	r7, r0
   114a0:	ldr	r0, [r4]
   114a4:	cmp	r7, #0
   114a8:	beq	124e0 <Mat_VarReadNextInfo@plt+0x13dc>
   114ac:	add	r9, r0, #1
   114b0:	ldr	r0, [sp, #56]	; 0x38
   114b4:	str	r9, [r4]
   114b8:	cmp	r9, r0
   114bc:	bge	124fc <Mat_VarReadNextInfo@plt+0x13f8>
   114c0:	vmov.i32	q4, #1	; 0x00000001
   114c4:	vmov.i16	d10, #44	; 0x002c
   114c8:	str	r7, [sp, #20]
   114cc:	b	114f0 <Mat_VarReadNextInfo@plt+0x3ec>
   114d0:	ldr	r1, [r8, r9, lsl #2]
   114d4:	ldr	r0, [pc, #4076]	; 124c8 <Mat_VarReadNextInfo@plt+0x13c4>
   114d8:	add	r0, pc, r0
   114dc:	bl	10f3c <Mat_Warning@plt>
   114e0:	ldr	r0, [sp, #56]	; 0x38
   114e4:	add	r9, r9, #1
   114e8:	cmp	r9, r0
   114ec:	beq	1259c <Mat_VarReadNextInfo@plt+0x1498>
   114f0:	ldr	r5, [r8, r9, lsl #2]
   114f4:	mov	r0, r5
   114f8:	bl	1322c <Mat_VarReadNextInfo@plt+0x2128>
   114fc:	mov	r4, r0
   11500:	cmp	r0, r5
   11504:	mov	r6, #0
   11508:	beq	1151c <Mat_VarReadNextInfo@plt+0x418>
   1150c:	mov	r0, #0
   11510:	ldrb	r6, [r4]
   11514:	strb	r0, [r4]
   11518:	ldr	r5, [r8, r9, lsl #2]
   1151c:	mov	r0, r7
   11520:	mov	r1, r5
   11524:	bl	10f78 <Mat_VarReadInfo@plt>
   11528:	cmp	r0, #0
   1152c:	beq	114d0 <Mat_VarReadNextInfo@plt+0x3cc>
   11530:	mov	r5, r0
   11534:	ldr	r0, [pc, #4028]	; 124f8 <Mat_VarReadNextInfo@plt+0x13f4>
   11538:	add	r0, pc, r0
   1153c:	ldrb	r0, [r0]
   11540:	cmp	r0, #1
   11544:	bne	1156c <Mat_VarReadNextInfo@plt+0x468>
   11548:	cmp	r6, #0
   1154c:	beq	11574 <Mat_VarReadNextInfo@plt+0x470>
   11550:	mov	r0, r4
   11554:	strb	r6, [r4]
   11558:	bl	1322c <Mat_VarReadNextInfo@plt+0x2128>
   1155c:	ldrb	sl, [r0]
   11560:	mov	r6, r5
   11564:	str	r9, [sp, #28]
   11568:	b	115cc <Mat_VarReadNextInfo@plt+0x4c8>
   1156c:	mov	r6, r5
   11570:	b	12454 <Mat_VarReadNextInfo@plt+0x1350>
   11574:	mov	r0, r7
   11578:	mov	r1, r5
   1157c:	mov	r6, r5
   11580:	bl	10f6c <Mat_VarReadDataAll@plt>
   11584:	b	12454 <Mat_VarReadNextInfo@plt+0x1350>
   11588:	ldr	r0, [pc, #4036]	; 12554 <Mat_VarReadNextInfo@plt+0x1450>
   1158c:	mov	r2, r5
   11590:	ldr	r0, [pc, r0]
   11594:	ldr	r0, [r0]
   11598:	ldr	r1, [pc, #4024]	; 12558 <Mat_VarReadNextInfo@plt+0x1454>
   1159c:	add	r1, pc, r1
   115a0:	bl	1102c <fprintf@plt>
   115a4:	mov	r6, sl
   115a8:	cmp	r5, r8
   115ac:	ldr	r8, [sp, #32]
   115b0:	ldr	r9, [sp, #28]
   115b4:	ldr	sl, [sp, #44]	; 0x2c
   115b8:	ldr	r0, [sp, #40]	; 0x28
   115bc:	ldr	r1, [sp, #36]	; 0x24
   115c0:	bne	12454 <Mat_VarReadNextInfo@plt+0x1350>
   115c4:	cmp	r1, #0
   115c8:	bne	12454 <Mat_VarReadNextInfo@plt+0x1350>
   115cc:	str	r0, [sp, #64]	; 0x40
   115d0:	uxtb	r0, sl
   115d4:	mov	r1, #0
   115d8:	cmp	r0, #46	; 0x2e
   115dc:	beq	11658 <Mat_VarReadNextInfo@plt+0x554>
   115e0:	cmp	r0, #123	; 0x7b
   115e4:	beq	11600 <Mat_VarReadNextInfo@plt+0x4fc>
   115e8:	cmp	r0, #40	; 0x28
   115ec:	beq	11e1c <Mat_VarReadNextInfo@plt+0xd18>
   115f0:	ldr	r0, [sp, #64]	; 0x40
   115f4:	cmp	r1, #0
   115f8:	beq	115cc <Mat_VarReadNextInfo@plt+0x4c8>
   115fc:	b	12454 <Mat_VarReadNextInfo@plt+0x1350>
   11600:	ldr	r0, [r6, #16]
   11604:	cmp	r0, #1
   11608:	bne	11f00 <Mat_VarReadNextInfo@plt+0xdfc>
   1160c:	ldr	r0, [sp, #64]	; 0x40
   11610:	mov	r1, #125	; 0x7d
   11614:	add	r5, r0, #1
   11618:	mov	r0, r5
   1161c:	bl	11014 <strchr@plt>
   11620:	mov	sl, r0
   11624:	add	r0, r0, #1
   11628:	bl	1322c <Mat_VarReadNextInfo@plt+0x2128>
   1162c:	mov	r1, r0
   11630:	ldrb	r0, [r0]
   11634:	mov	r9, #1
   11638:	cmp	r0, #0
   1163c:	str	r0, [sp, #44]	; 0x2c
   11640:	beq	116d0 <Mat_VarReadNextInfo@plt+0x5cc>
   11644:	mov	r2, #0
   11648:	mov	r0, #0
   1164c:	str	r0, [sp, #36]	; 0x24
   11650:	strb	r2, [r1]
   11654:	b	116e0 <Mat_VarReadNextInfo@plt+0x5dc>
   11658:	ldr	r0, [sp, #64]	; 0x40
   1165c:	add	r4, r0, #1
   11660:	ldr	r0, [r6, #16]
   11664:	cmp	r0, #1
   11668:	beq	11698 <Mat_VarReadNextInfo@plt+0x594>
   1166c:	cmp	r0, #2
   11670:	bne	11f24 <Mat_VarReadNextInfo@plt+0xe20>
   11674:	mov	r0, r4
   11678:	bl	1322c <Mat_VarReadNextInfo@plt+0x2128>
   1167c:	cmp	r0, r4
   11680:	beq	11a40 <Mat_VarReadNextInfo@plt+0x93c>
   11684:	ldrb	sl, [r0]
   11688:	mov	r5, #0
   1168c:	mov	r7, r0
   11690:	strb	r5, [r0]
   11694:	b	11a4c <Mat_VarReadNextInfo@plt+0x948>
   11698:	ldr	r0, [r6]
   1169c:	ldr	r1, [r6, #12]
   116a0:	ldr	r9, [r6, #40]	; 0x28
   116a4:	udiv	r8, r0, r1
   116a8:	mov	r0, r4
   116ac:	bl	1322c <Mat_VarReadNextInfo@plt+0x2128>
   116b0:	cmp	r0, r4
   116b4:	beq	11ab0 <Mat_VarReadNextInfo@plt+0x9ac>
   116b8:	ldrb	r1, [r0]
   116bc:	mov	r3, #0
   116c0:	mov	r2, #0
   116c4:	str	r2, [sp, #36]	; 0x24
   116c8:	strb	r3, [r0]
   116cc:	b	11abc <Mat_VarReadNextInfo@plt+0x9b8>
   116d0:	mov	r0, #123	; 0x7b
   116d4:	str	r0, [sp, #44]	; 0x2c
   116d8:	mov	r0, #1
   116dc:	str	r0, [sp, #36]	; 0x24
   116e0:	mov	r4, #1
   116e4:	cmp	r5, sl
   116e8:	str	r1, [sp, #40]	; 0x28
   116ec:	beq	117f8 <Mat_VarReadNextInfo@plt+0x6f4>
   116f0:	ldr	r0, [sp, #64]	; 0x40
   116f4:	mov	r9, #1
   116f8:	mvn	r0, r0
   116fc:	add	r8, r0, sl
   11700:	cmp	r8, #4
   11704:	bcc	117e4 <Mat_VarReadNextInfo@plt+0x6e0>
   11708:	bic	ip, r8, #3
   1170c:	str	r6, [sp, #24]
   11710:	add	r3, pc, #904	; 0x388
   11714:	subs	r2, ip, #4
   11718:	add	r6, r4, r2, lsr #2
   1171c:	and	lr, r6, #1
   11720:	beq	11da4 <Mat_VarReadNextInfo@plt+0xca0>
   11724:	add	r4, pc, #884	; 0x374
   11728:	ldr	r0, [sp, #64]	; 0x40
   1172c:	sub	r6, r6, lr
   11730:	mov	r3, #0
   11734:	sub	r7, fp, #76	; 0x4c
   11738:	sub	r2, fp, #72	; 0x48
   1173c:	vld1.64	{d16-d17}, [r4 :128]
   11740:	add	r4, r0, r3
   11744:	subs	r6, r6, #2
   11748:	add	r3, r3, #8
   1174c:	ldr	r1, [r4, #1]
   11750:	ldr	r4, [r4, #5]
   11754:	str	r1, [fp, #-72]	; 0xffffffb8
   11758:	str	r4, [fp, #-76]	; 0xffffffb4
   1175c:	vld1.32	{d18[0]}, [r2 :32]
   11760:	vld1.32	{d19[0]}, [r7 :32]
   11764:	vmovl.u8	q10, d18
   11768:	vmovl.u8	q9, d19
   1176c:	vceq.i16	d20, d20, d10
   11770:	vceq.i16	d18, d18, d10
   11774:	vmovl.u16	q10, d20
   11778:	vmovl.u16	q9, d18
   1177c:	vand	q10, q10, q4
   11780:	vand	q9, q9, q4
   11784:	vadd.i32	q8, q8, q10
   11788:	vadd.i32	q8, q8, q9
   1178c:	bne	11740 <Mat_VarReadNextInfo@plt+0x63c>
   11790:	cmp	lr, #0
   11794:	beq	117bc <Mat_VarReadNextInfo@plt+0x6b8>
   11798:	ldr	r1, [r5, r3]
   1179c:	str	r1, [sp, #80]	; 0x50
   117a0:	add	r1, sp, #80	; 0x50
   117a4:	vld1.32	{d18[0]}, [r1 :32]
   117a8:	vmovl.u8	q9, d18
   117ac:	vceq.i16	d18, d18, d10
   117b0:	vmovl.u16	q9, d18
   117b4:	vand	q9, q9, q4
   117b8:	vadd.i32	q8, q8, q9
   117bc:	vext.8	q9, q8, q8, #8
   117c0:	ldr	r6, [sp, #24]
   117c4:	cmp	ip, r8
   117c8:	mov	r4, #1
   117cc:	vadd.i32	q8, q8, q9
   117d0:	vdup.32	q9, d16[1]
   117d4:	vadd.i32	q8, q8, q9
   117d8:	vmov.32	r9, d16[0]
   117dc:	beq	117f8 <Mat_VarReadNextInfo@plt+0x6f4>
   117e0:	add	r5, r5, ip
   117e4:	ldrb	r0, [r5], #1
   117e8:	cmp	r0, #44	; 0x2c
   117ec:	addeq	r9, r9, #1
   117f0:	cmp	sl, r5
   117f4:	bne	117e4 <Mat_VarReadNextInfo@plt+0x6e0>
   117f8:	lsl	r8, r9, #2
   117fc:	mov	r0, r8
   11800:	bl	10fb4 <malloc@plt>
   11804:	str	r0, [sp, #52]	; 0x34
   11808:	mov	r0, r8
   1180c:	bl	10fb4 <malloc@plt>
   11810:	mov	r7, r0
   11814:	mov	r0, r8
   11818:	bl	10fb4 <malloc@plt>
   1181c:	mov	lr, r0
   11820:	cmp	r9, #1
   11824:	str	r7, [sp, #60]	; 0x3c
   11828:	str	r0, [sp, #48]	; 0x30
   1182c:	blt	11934 <Mat_VarReadNextInfo@plt+0x830>
   11830:	ldr	r0, [sp, #52]	; 0x34
   11834:	mov	r1, #0
   11838:	mov	r2, r8
   1183c:	mov	r5, #0
   11840:	bl	11050 <memset@plt>
   11844:	ldr	lr, [sp, #48]	; 0x30
   11848:	cmp	r9, #4
   1184c:	bcc	11918 <Mat_VarReadNextInfo@plt+0x814>
   11850:	bic	r0, r9, #3
   11854:	mov	r8, lr
   11858:	mov	r1, #0
   1185c:	mov	lr, #48	; 0x30
   11860:	str	r6, [sp, #24]
   11864:	sub	r3, r0, #4
   11868:	str	r0, [sp, #16]
   1186c:	add	r2, r4, r3, lsr #2
   11870:	cmp	r3, #12
   11874:	and	ip, r2, #3
   11878:	bcc	118dc <Mat_VarReadNextInfo@plt+0x7d8>
   1187c:	sub	r2, r2, ip
   11880:	mov	r3, #0
   11884:	mov	r1, #0
   11888:	add	r6, r7, r3
   1188c:	add	r5, r8, r3
   11890:	add	r3, r3, #64	; 0x40
   11894:	subs	r2, r2, #4
   11898:	add	r1, r1, #16
   1189c:	mov	r0, r6
   118a0:	mov	r7, r5
   118a4:	add	r4, r6, #16
   118a8:	add	r6, r6, #32
   118ac:	vst1.32	{d8-d9}, [r0], lr
   118b0:	vst1.32	{d8-d9}, [r4]
   118b4:	vst1.32	{d8-d9}, [r6]
   118b8:	vst1.32	{d8-d9}, [r7], lr
   118bc:	add	r4, r5, #16
   118c0:	add	r6, r5, #32
   118c4:	vst1.32	{d8-d9}, [r4]
   118c8:	vst1.32	{d8-d9}, [r6]
   118cc:	vst1.32	{d8-d9}, [r7]
   118d0:	ldr	r7, [sp, #60]	; 0x3c
   118d4:	vst1.32	{d8-d9}, [r0]
   118d8:	bne	11888 <Mat_VarReadNextInfo@plt+0x784>
   118dc:	cmp	ip, #0
   118e0:	mov	lr, r8
   118e4:	beq	11904 <Mat_VarReadNextInfo@plt+0x800>
   118e8:	add	r2, r7, r1, lsl #2
   118ec:	add	r1, lr, r1, lsl #2
   118f0:	rsb	r0, ip, #0
   118f4:	vst1.32	{d8-d9}, [r2]!
   118f8:	vst1.32	{d8-d9}, [r1]!
   118fc:	adds	r0, r0, #1
   11900:	bcc	118f4 <Mat_VarReadNextInfo@plt+0x7f0>
   11904:	ldr	r5, [sp, #16]
   11908:	ldr	r6, [sp, #24]
   1190c:	mov	r4, #1
   11910:	cmp	r9, r5
   11914:	beq	11934 <Mat_VarReadNextInfo@plt+0x830>
   11918:	add	r0, r7, r5, lsl #2
   1191c:	add	r1, lr, r5, lsl #2
   11920:	sub	r2, r9, r5
   11924:	str	r4, [r0], #4
   11928:	str	r4, [r1], #4
   1192c:	subs	r2, r2, #1
   11930:	bne	11924 <Mat_VarReadNextInfo@plt+0x820>
   11934:	ldr	r5, [sp, #52]	; 0x34
   11938:	ldr	r0, [sp, #64]	; 0x40
   1193c:	mov	r1, sl
   11940:	mov	r3, r7
   11944:	str	lr, [sp]
   11948:	mov	sl, lr
   1194c:	mov	r2, r5
   11950:	bl	13420 <Mat_VarReadNextInfo@plt+0x231c>
   11954:	mov	r0, r9
   11958:	mov	r1, r5
   1195c:	mov	r2, r7
   11960:	mov	r3, sl
   11964:	mov	r8, r6
   11968:	str	r6, [sp]
   1196c:	bl	13684 <Mat_VarReadNextInfo@plt+0x2580>
   11970:	cmp	r0, #0
   11974:	beq	11de0 <Mat_VarReadNextInfo@plt+0xcdc>
   11978:	ldr	sl, [sp, #32]
   1197c:	mov	r7, r0
   11980:	cmp	r9, #1
   11984:	bne	119f0 <Mat_VarReadNextInfo@plt+0x8ec>
   11988:	ldr	r0, [sp, #60]	; 0x3c
   1198c:	ldr	r5, [sp, #48]	; 0x30
   11990:	mov	r6, r8
   11994:	ldr	r2, [r0]
   11998:	ldr	r0, [sp, #52]	; 0x34
   1199c:	ldr	r3, [r5]
   119a0:	ldr	r1, [r0]
   119a4:	mov	r0, r8
   119a8:	bl	11098 <Mat_VarGetCellsLinear@plt>
   119ac:	ldr	r1, [r8, #4]
   119b0:	ldr	r2, [r8, #32]
   119b4:	mov	r8, sl
   119b8:	ldr	r9, [sp, #28]
   119bc:	ldr	sl, [sp, #44]	; 0x2c
   119c0:	cmp	r1, #2
   119c4:	bne	11a38 <Mat_VarReadNextInfo@plt+0x934>
   119c8:	ldr	r1, [r2]
   119cc:	cmp	r1, #1
   119d0:	bne	11d00 <Mat_VarReadNextInfo@plt+0xbfc>
   119d4:	ldr	r1, [sp, #48]	; 0x30
   119d8:	mov	r5, r0
   119dc:	ldr	r1, [r1]
   119e0:	str	r1, [r2, #4]
   119e4:	cmp	r5, #0
   119e8:	bne	11d24 <Mat_VarReadNextInfo@plt+0xc20>
   119ec:	b	11cd8 <Mat_VarReadNextInfo@plt+0xbd4>
   119f0:	ldr	r1, [sp, #52]	; 0x34
   119f4:	ldr	r2, [sp, #60]	; 0x3c
   119f8:	ldr	r3, [sp, #48]	; 0x30
   119fc:	mov	r0, r8
   11a00:	mov	r6, r8
   11a04:	bl	10f0c <Mat_VarGetCells@plt>
   11a08:	mov	r5, r0
   11a0c:	cmp	r9, #1
   11a10:	blt	11b3c <Mat_VarReadNextInfo@plt+0xa38>
   11a14:	ldr	r0, [r6, #32]
   11a18:	mov	r1, #0
   11a1c:	cmp	r9, #4
   11a20:	mov	r8, sl
   11a24:	str	r5, [sp, #16]
   11a28:	bcs	11b54 <Mat_VarReadNextInfo@plt+0xa50>
   11a2c:	ldr	lr, [sp, #48]	; 0x30
   11a30:	ldr	sl, [sp, #44]	; 0x2c
   11a34:	b	11c54 <Mat_VarReadNextInfo@plt+0xb50>
   11a38:	str	r4, [r6, #4]
   11a3c:	b	11d10 <Mat_VarReadNextInfo@plt+0xc0c>
   11a40:	mov	r7, r0
   11a44:	mov	sl, #46	; 0x2e
   11a48:	mov	r5, #1
   11a4c:	mov	r0, r6
   11a50:	mov	r1, r4
   11a54:	mov	r2, #0
   11a58:	bl	110bc <Mat_VarGetStructFieldByName@plt>
   11a5c:	cmp	r0, #0
   11a60:	beq	11f50 <Mat_VarReadNextInfo@plt+0xe4c>
   11a64:	mov	r1, #1
   11a68:	bl	110f8 <Mat_VarDuplicate@plt>
   11a6c:	mov	r4, r0
   11a70:	mov	r0, r6
   11a74:	bl	10ff0 <Mat_VarFree@plt>
   11a78:	cmp	r5, #0
   11a7c:	bne	11f74 <Mat_VarReadNextInfo@plt+0xe70>
   11a80:	mov	r6, r4
   11a84:	mov	r0, r7
   11a88:	mov	r1, #0
   11a8c:	cmp	r1, #0
   11a90:	beq	115cc <Mat_VarReadNextInfo@plt+0x4c8>
   11a94:	b	12454 <Mat_VarReadNextInfo@plt+0x1350>
   11a98:	nop	{0}
   11a9c:	nop	{0}
   11aa0:	andeq	r0, r0, r1
	...
   11ab0:	mov	r2, #1
   11ab4:	mov	r1, #46	; 0x2e
   11ab8:	str	r2, [sp, #36]	; 0x24
   11abc:	mov	r5, #0
   11ac0:	cmp	r8, #1
   11ac4:	str	r0, [sp, #40]	; 0x28
   11ac8:	str	r1, [sp, #44]	; 0x2c
   11acc:	blt	115a8 <Mat_VarReadNextInfo@plt+0x4a4>
   11ad0:	mov	r0, r6
   11ad4:	mov	r1, r5
   11ad8:	mov	sl, r6
   11adc:	bl	10f18 <Mat_VarGetCell@plt>
   11ae0:	cmp	r0, #0
   11ae4:	beq	11588 <Mat_VarReadNextInfo@plt+0x484>
   11ae8:	mov	r6, r0
   11aec:	ldr	r0, [r0, #16]
   11af0:	cmp	r0, #2
   11af4:	bne	11588 <Mat_VarReadNextInfo@plt+0x484>
   11af8:	mov	r0, r6
   11afc:	mov	r1, r4
   11b00:	mov	r2, #0
   11b04:	bl	110bc <Mat_VarGetStructFieldByName@plt>
   11b08:	cmp	r0, #0
   11b0c:	beq	11db8 <Mat_VarReadNextInfo@plt+0xcb4>
   11b10:	mov	r1, #1
   11b14:	bl	110f8 <Mat_VarDuplicate@plt>
   11b18:	mov	r7, r0
   11b1c:	mov	r0, r6
   11b20:	bl	10ff0 <Mat_VarFree@plt>
   11b24:	str	r7, [r9, r5, lsl #2]
   11b28:	add	r5, r5, #1
   11b2c:	mov	r6, sl
   11b30:	cmp	r5, r8
   11b34:	blt	11ad0 <Mat_VarReadNextInfo@plt+0x9cc>
   11b38:	b	115a8 <Mat_VarReadNextInfo@plt+0x4a4>
   11b3c:	mov	r8, sl
   11b40:	ldr	r9, [sp, #28]
   11b44:	ldr	sl, [sp, #44]	; 0x2c
   11b48:	cmp	r5, #0
   11b4c:	bne	11d24 <Mat_VarReadNextInfo@plt+0xc20>
   11b50:	b	11cd8 <Mat_VarReadNextInfo@plt+0xbd4>
   11b54:	ldr	lr, [sp, #48]	; 0x30
   11b58:	ldr	sl, [sp, #44]	; 0x2c
   11b5c:	add	r2, lr, r9, lsl #2
   11b60:	cmp	r2, r0
   11b64:	bls	11b74 <Mat_VarReadNextInfo@plt+0xa70>
   11b68:	add	r2, r0, r9, lsl #2
   11b6c:	cmp	lr, r2
   11b70:	bcc	11c54 <Mat_VarReadNextInfo@plt+0xb50>
   11b74:	bic	r1, r9, #3
   11b78:	str	r6, [sp, #24]
   11b7c:	mov	r5, #48	; 0x30
   11b80:	sub	r6, r1, #4
   11b84:	add	r2, r4, r6, lsr #2
   11b88:	cmp	r6, #12
   11b8c:	and	r3, r2, #3
   11b90:	str	r3, [sp, #12]
   11b94:	mov	r3, #0
   11b98:	bcc	11c08 <Mat_VarReadNextInfo@plt+0xb04>
   11b9c:	ldr	r3, [sp, #12]
   11ba0:	mov	r6, #0
   11ba4:	sub	sl, r2, r3
   11ba8:	mov	r3, #0
   11bac:	add	r4, lr, r6
   11bb0:	str	r3, [sp, #64]	; 0x40
   11bb4:	add	r3, r0, r6
   11bb8:	add	r6, r6, #64	; 0x40
   11bbc:	subs	sl, sl, #4
   11bc0:	mov	r8, r4
   11bc4:	mov	r2, r3
   11bc8:	add	ip, r4, #16
   11bcc:	vld1.32	{d16-d17}, [r8], r5
   11bd0:	vst1.32	{d16-d17}, [r2], r5
   11bd4:	add	r5, r3, #16
   11bd8:	add	r3, r3, #32
   11bdc:	vld1.32	{d16-d17}, [ip]
   11be0:	vst1.32	{d16-d17}, [r5]
   11be4:	add	r5, r4, #32
   11be8:	vld1.32	{d16-d17}, [r5]
   11bec:	mov	r5, #48	; 0x30
   11bf0:	vst1.32	{d16-d17}, [r3]
   11bf4:	ldr	r3, [sp, #64]	; 0x40
   11bf8:	vld1.32	{d16-d17}, [r8]
   11bfc:	add	r3, r3, #16
   11c00:	vst1.32	{d16-d17}, [r2]
   11c04:	bne	11bac <Mat_VarReadNextInfo@plt+0xaa8>
   11c08:	ldr	r6, [sp, #12]
   11c0c:	cmp	r6, #0
   11c10:	beq	11c34 <Mat_VarReadNextInfo@plt+0xb30>
   11c14:	ldr	r2, [sp, #48]	; 0x30
   11c18:	rsb	r6, r6, #0
   11c1c:	add	r2, r2, r3, lsl #2
   11c20:	add	r3, r0, r3, lsl #2
   11c24:	vld1.32	{d16-d17}, [r2]!
   11c28:	adds	r6, r6, #1
   11c2c:	vst1.32	{d16-d17}, [r3]!
   11c30:	bcc	11c24 <Mat_VarReadNextInfo@plt+0xb20>
   11c34:	ldr	r8, [sp, #32]
   11c38:	ldr	r6, [sp, #24]
   11c3c:	ldr	sl, [sp, #44]	; 0x2c
   11c40:	ldr	lr, [sp, #48]	; 0x30
   11c44:	cmp	r9, r1
   11c48:	bne	11c54 <Mat_VarReadNextInfo@plt+0xb50>
   11c4c:	ldr	r9, [sp, #28]
   11c50:	b	11ccc <Mat_VarReadNextInfo@plt+0xbc8>
   11c54:	mvn	r2, r1
   11c58:	mov	ip, r6
   11c5c:	ands	r3, r9, #3
   11c60:	add	r2, r9, r2
   11c64:	beq	11c7c <Mat_VarReadNextInfo@plt+0xb78>
   11c68:	ldr	r6, [lr, r1, lsl #2]
   11c6c:	subs	r3, r3, #1
   11c70:	str	r6, [r0, r1, lsl #2]
   11c74:	add	r1, r1, #1
   11c78:	bne	11c68 <Mat_VarReadNextInfo@plt+0xb64>
   11c7c:	cmp	r2, #3
   11c80:	bcc	11cc4 <Mat_VarReadNextInfo@plt+0xbc0>
   11c84:	sub	r2, r9, r1
   11c88:	lsl	r1, r1, #2
   11c8c:	add	r6, lr, #16
   11c90:	ldr	r5, [lr, r1]!
   11c94:	add	r4, r0, #16
   11c98:	subs	r2, r2, #4
   11c9c:	str	r5, [r0, r1]!
   11ca0:	ldr	r5, [lr, #4]
   11ca4:	str	r5, [r0, #4]
   11ca8:	ldr	r5, [lr, #8]
   11cac:	str	r5, [r0, #8]
   11cb0:	ldr	r3, [lr, #12]
   11cb4:	mov	lr, r6
   11cb8:	str	r3, [r0, #12]
   11cbc:	mov	r0, r4
   11cc0:	bne	11c8c <Mat_VarReadNextInfo@plt+0xb88>
   11cc4:	ldr	r9, [sp, #28]
   11cc8:	mov	r6, ip
   11ccc:	ldr	r5, [sp, #16]
   11cd0:	cmp	r5, #0
   11cd4:	bne	11d24 <Mat_VarReadNextInfo@plt+0xc20>
   11cd8:	ldr	r0, [pc, #2424]	; 12658 <Mat_VarReadNextInfo@plt+0x1554>
   11cdc:	mov	r1, #31
   11ce0:	mov	r2, #1
   11ce4:	ldr	r0, [pc, r0]
   11ce8:	ldr	r3, [r0]
   11cec:	ldr	r0, [pc, #2408]	; 1265c <Mat_VarReadNextInfo@plt+0x1558>
   11cf0:	add	r0, pc, r0
   11cf4:	bl	10f84 <fwrite@plt>
   11cf8:	mov	r7, #0
   11cfc:	b	11d78 <Mat_VarReadNextInfo@plt+0xc74>
   11d00:	ldr	r1, [r2, #4]
   11d04:	ldr	r5, [sp, #48]	; 0x30
   11d08:	cmp	r1, #1
   11d0c:	strne	r4, [r6, #4]
   11d10:	ldr	r1, [r5]
   11d14:	mov	r5, r0
   11d18:	str	r1, [r2]
   11d1c:	cmp	r5, #0
   11d20:	beq	11cd8 <Mat_VarReadNextInfo@plt+0xbd4>
   11d24:	cmp	r7, #1
   11d28:	mov	r4, r5
   11d2c:	blt	11d48 <Mat_VarReadNextInfo@plt+0xc44>
   11d30:	ldr	r0, [r4]
   11d34:	mov	r1, #1
   11d38:	bl	110f8 <Mat_VarDuplicate@plt>
   11d3c:	str	r0, [r4], #4
   11d40:	subs	r7, r7, #1
   11d44:	bne	11d30 <Mat_VarReadNextInfo@plt+0xc2c>
   11d48:	ldr	r1, [r6, #32]
   11d4c:	ldr	r3, [r6, #4]
   11d50:	ldr	r0, [r6, #36]	; 0x24
   11d54:	mov	r7, #1
   11d58:	mov	r2, #21
   11d5c:	stm	sp, {r1, r5, r7}
   11d60:	mov	r1, #1
   11d64:	bl	10f24 <Mat_VarCreate@plt>
   11d68:	mov	r4, r0
   11d6c:	mov	r0, r6
   11d70:	bl	10ff0 <Mat_VarFree@plt>
   11d74:	mov	r6, r4
   11d78:	ldr	r0, [sp, #52]	; 0x34
   11d7c:	bl	10f30 <free@plt>
   11d80:	ldr	r0, [sp, #60]	; 0x3c
   11d84:	bl	10f30 <free@plt>
   11d88:	ldr	r0, [sp, #48]	; 0x30
   11d8c:	bl	10f30 <free@plt>
   11d90:	ldr	r0, [sp, #40]	; 0x28
   11d94:	ldr	r1, [sp, #36]	; 0x24
   11d98:	cmp	r7, #0
   11d9c:	bne	115c4 <Mat_VarReadNextInfo@plt+0x4c0>
   11da0:	b	12454 <Mat_VarReadNextInfo@plt+0x1350>
   11da4:	vld1.64	{d16-d17}, [r3 :128]
   11da8:	mov	r3, #0
   11dac:	cmp	lr, #0
   11db0:	bne	11798 <Mat_VarReadNextInfo@plt+0x694>
   11db4:	b	117bc <Mat_VarReadNextInfo@plt+0x6b8>
   11db8:	ldr	r3, [sl, #36]	; 0x24
   11dbc:	ldr	r0, [pc, #2148]	; 12628 <Mat_VarReadNextInfo@plt+0x1524>
   11dc0:	mov	r2, r4
   11dc4:	mov	r6, sl
   11dc8:	ldr	r0, [pc, r0]
   11dcc:	ldr	r0, [r0]
   11dd0:	ldr	r1, [pc, #2132]	; 1262c <Mat_VarReadNextInfo@plt+0x1528>
   11dd4:	add	r1, pc, r1
   11dd8:	bl	1102c <fprintf@plt>
   11ddc:	b	115a8 <Mat_VarReadNextInfo@plt+0x4a4>
   11de0:	ldr	r0, [pc, #2136]	; 12640 <Mat_VarReadNextInfo@plt+0x153c>
   11de4:	mov	r1, #24
   11de8:	mov	r2, #1
   11dec:	ldr	r0, [pc, r0]
   11df0:	ldr	r3, [r0]
   11df4:	ldr	r0, [pc, #2120]	; 12644 <Mat_VarReadNextInfo@plt+0x1540>
   11df8:	add	r0, pc, r0
   11dfc:	bl	10f84 <fwrite@plt>
   11e00:	ldr	r0, [sp, #32]
   11e04:	ldr	r9, [sp, #28]
   11e08:	ldr	sl, [sp, #44]	; 0x2c
   11e0c:	mov	r6, r8
   11e10:	mov	r7, #0
   11e14:	mov	r8, r0
   11e18:	b	11d78 <Mat_VarReadNextInfo@plt+0xc74>
   11e1c:	ldr	r0, [sp, #64]	; 0x40
   11e20:	str	r6, [sp, #24]
   11e24:	mov	r1, #41	; 0x29
   11e28:	add	r6, r0, #1
   11e2c:	mov	r0, r6
   11e30:	bl	11014 <strchr@plt>
   11e34:	add	r5, r0, #1
   11e38:	mov	r7, r0
   11e3c:	mov	r0, r5
   11e40:	bl	1322c <Mat_VarReadNextInfo@plt+0x2128>
   11e44:	cmp	r0, r5
   11e48:	bne	12478 <Mat_VarReadNextInfo@plt+0x1374>
   11e4c:	cmp	r6, r7
   11e50:	str	r7, [sp, #44]	; 0x2c
   11e54:	beq	11f44 <Mat_VarReadNextInfo@plt+0xe40>
   11e58:	ldr	r0, [sp, #64]	; 0x40
   11e5c:	mov	sl, #1
   11e60:	mov	r4, #1
   11e64:	mvn	r0, r0
   11e68:	add	r8, r0, r7
   11e6c:	cmp	r8, #4
   11e70:	bcc	11fe0 <Mat_VarReadNextInfo@plt+0xedc>
   11e74:	bic	ip, r8, #3
   11e78:	sub	r3, pc, #992	; 0x3e0
   11e7c:	subs	r2, ip, #4
   11e80:	add	r7, r4, r2, lsr #2
   11e84:	and	lr, r7, #1
   11e88:	beq	11f88 <Mat_VarReadNextInfo@plt+0xe84>
   11e8c:	sub	r5, pc, #1012	; 0x3f4
   11e90:	add	r2, sp, #72	; 0x48
   11e94:	sub	r7, r7, lr
   11e98:	mov	r3, #0
   11e9c:	add	r0, sp, #76	; 0x4c
   11ea0:	vld1.64	{d16-d17}, [r5 :128]
   11ea4:	mov	sl, r2
   11ea8:	ldr	r2, [sp, #64]	; 0x40
   11eac:	add	r5, r2, r3
   11eb0:	subs	r7, r7, #2
   11eb4:	add	r3, r3, #8
   11eb8:	ldr	r1, [r5, #1]
   11ebc:	ldr	r5, [r5, #5]
   11ec0:	str	r1, [sp, #76]	; 0x4c
   11ec4:	str	r5, [sp, #72]	; 0x48
   11ec8:	vld1.32	{d18[0]}, [r0 :32]
   11ecc:	vld1.32	{d19[0]}, [sl :32]
   11ed0:	vmovl.u8	q10, d18
   11ed4:	vmovl.u8	q9, d19
   11ed8:	vceq.i16	d20, d20, d10
   11edc:	vceq.i16	d18, d18, d10
   11ee0:	vmovl.u16	q10, d20
   11ee4:	vmovl.u16	q9, d18
   11ee8:	vand	q10, q10, q4
   11eec:	vand	q9, q9, q4
   11ef0:	vadd.i32	q8, q8, q10
   11ef4:	vadd.i32	q8, q8, q9
   11ef8:	bne	11eac <Mat_VarReadNextInfo@plt+0xda8>
   11efc:	b	11f90 <Mat_VarReadNextInfo@plt+0xe8c>
   11f00:	ldr	r0, [pc, #1840]	; 12638 <Mat_VarReadNextInfo@plt+0x1534>
   11f04:	mov	r1, #34	; 0x22
   11f08:	mov	r2, #1
   11f0c:	ldr	r0, [pc, r0]
   11f10:	ldr	r3, [r0]
   11f14:	ldr	r0, [pc, #1824]	; 1263c <Mat_VarReadNextInfo@plt+0x1538>
   11f18:	add	r0, pc, r0
   11f1c:	bl	10f84 <fwrite@plt>
   11f20:	b	12454 <Mat_VarReadNextInfo@plt+0x1350>
   11f24:	ldr	r0, [pc, #1796]	; 12630 <Mat_VarReadNextInfo@plt+0x152c>
   11f28:	mov	r2, r4
   11f2c:	ldr	r0, [pc, r0]
   11f30:	ldr	r0, [r0]
   11f34:	ldr	r1, [pc, #1784]	; 12634 <Mat_VarReadNextInfo@plt+0x1530>
   11f38:	add	r1, pc, r1
   11f3c:	bl	1102c <fprintf@plt>
   11f40:	b	12454 <Mat_VarReadNextInfo@plt+0x1350>
   11f44:	mov	sl, #1
   11f48:	mov	r4, #1
   11f4c:	b	11ff4 <Mat_VarReadNextInfo@plt+0xef0>
   11f50:	ldr	r3, [r6, #36]	; 0x24
   11f54:	ldr	r0, [pc, #1732]	; 12620 <Mat_VarReadNextInfo@plt+0x151c>
   11f58:	mov	r2, r4
   11f5c:	ldr	r0, [pc, r0]
   11f60:	ldr	r0, [r0]
   11f64:	ldr	r1, [pc, #1720]	; 12624 <Mat_VarReadNextInfo@plt+0x1520>
   11f68:	add	r1, pc, r1
   11f6c:	bl	1102c <fprintf@plt>
   11f70:	b	12454 <Mat_VarReadNextInfo@plt+0x1350>
   11f74:	ldr	r0, [sp, #20]
   11f78:	mov	r1, r4
   11f7c:	bl	10f6c <Mat_VarReadDataAll@plt>
   11f80:	mov	r6, r4
   11f84:	b	12454 <Mat_VarReadNextInfo@plt+0x1350>
   11f88:	vld1.64	{d16-d17}, [r3 :128]
   11f8c:	mov	r3, #0
   11f90:	cmp	lr, #0
   11f94:	beq	11fbc <Mat_VarReadNextInfo@plt+0xeb8>
   11f98:	ldr	r1, [r6, r3]
   11f9c:	str	r1, [sp, #68]	; 0x44
   11fa0:	add	r1, sp, #68	; 0x44
   11fa4:	vld1.32	{d18[0]}, [r1 :32]
   11fa8:	vmovl.u8	q9, d18
   11fac:	vceq.i16	d18, d18, d10
   11fb0:	vmovl.u16	q9, d18
   11fb4:	vand	q9, q9, q4
   11fb8:	vadd.i32	q8, q8, q9
   11fbc:	vext.8	q9, q8, q8, #8
   11fc0:	ldr	r7, [sp, #44]	; 0x2c
   11fc4:	cmp	ip, r8
   11fc8:	vadd.i32	q8, q8, q9
   11fcc:	vdup.32	q9, d16[1]
   11fd0:	vadd.i32	q8, q8, q9
   11fd4:	vmov.32	sl, d16[0]
   11fd8:	beq	11ff4 <Mat_VarReadNextInfo@plt+0xef0>
   11fdc:	add	r6, r6, ip
   11fe0:	ldrb	r0, [r6], #1
   11fe4:	cmp	r0, #44	; 0x2c
   11fe8:	addeq	sl, sl, #1
   11fec:	cmp	r7, r6
   11ff0:	bne	11fe0 <Mat_VarReadNextInfo@plt+0xedc>
   11ff4:	lsl	r8, sl, #2
   11ff8:	mov	r0, r8
   11ffc:	bl	10fb4 <malloc@plt>
   12000:	mov	r6, r0
   12004:	mov	r0, r8
   12008:	bl	10fb4 <malloc@plt>
   1200c:	mov	r7, r0
   12010:	mov	r0, r8
   12014:	bl	10fb4 <malloc@plt>
   12018:	mov	r5, r0
   1201c:	cmp	sl, #1
   12020:	str	r7, [sp, #52]	; 0x34
   12024:	str	r0, [sp, #60]	; 0x3c
   12028:	str	r6, [sp, #48]	; 0x30
   1202c:	blt	12124 <Mat_VarReadNextInfo@plt+0x1020>
   12030:	mov	r0, r6
   12034:	mov	r1, #0
   12038:	mov	r2, r8
   1203c:	bl	11050 <memset@plt>
   12040:	mov	r8, #0
   12044:	cmp	sl, #4
   12048:	bcc	12108 <Mat_VarReadNextInfo@plt+0x1004>
   1204c:	bic	r0, sl, #3
   12050:	mov	r1, #0
   12054:	mov	lr, #48	; 0x30
   12058:	sub	r3, r0, #4
   1205c:	mov	r8, r0
   12060:	add	r2, r4, r3, lsr #2
   12064:	cmp	r3, #12
   12068:	and	ip, r2, #3
   1206c:	bcc	120d4 <Mat_VarReadNextInfo@plt+0xfd0>
   12070:	sub	r2, r2, ip
   12074:	mov	r3, #0
   12078:	mov	r1, #0
   1207c:	add	r0, r7, r3
   12080:	add	r7, r5, r3
   12084:	add	r3, r3, #64	; 0x40
   12088:	subs	r2, r2, #4
   1208c:	add	r1, r1, #16
   12090:	mov	r6, r0
   12094:	add	r5, r0, #16
   12098:	mov	r4, r7
   1209c:	add	r0, r0, #32
   120a0:	vst1.32	{d8-d9}, [r6], lr
   120a4:	vst1.32	{d8-d9}, [r5]
   120a8:	add	r5, r7, #16
   120ac:	vst1.32	{d8-d9}, [r0]
   120b0:	vst1.32	{d8-d9}, [r4], lr
   120b4:	add	r0, r7, #32
   120b8:	ldr	r7, [sp, #52]	; 0x34
   120bc:	vst1.32	{d8-d9}, [r5]
   120c0:	ldr	r5, [sp, #60]	; 0x3c
   120c4:	vst1.32	{d8-d9}, [r0]
   120c8:	vst1.32	{d8-d9}, [r6]
   120cc:	vst1.32	{d8-d9}, [r4]
   120d0:	bne	1207c <Mat_VarReadNextInfo@plt+0xf78>
   120d4:	cmp	ip, #0
   120d8:	beq	120f8 <Mat_VarReadNextInfo@plt+0xff4>
   120dc:	add	r2, r7, r1, lsl #2
   120e0:	add	r1, r5, r1, lsl #2
   120e4:	rsb	r0, ip, #0
   120e8:	vst1.32	{d8-d9}, [r2]!
   120ec:	vst1.32	{d8-d9}, [r1]!
   120f0:	adds	r0, r0, #1
   120f4:	bcc	120e8 <Mat_VarReadNextInfo@plt+0xfe4>
   120f8:	ldr	r6, [sp, #48]	; 0x30
   120fc:	cmp	sl, r8
   12100:	mov	r4, #1
   12104:	beq	12124 <Mat_VarReadNextInfo@plt+0x1020>
   12108:	add	r0, r7, r8, lsl #2
   1210c:	add	r1, r5, r8, lsl #2
   12110:	sub	r2, sl, r8
   12114:	str	r4, [r0], #4
   12118:	str	r4, [r1], #4
   1211c:	subs	r2, r2, #1
   12120:	bne	12114 <Mat_VarReadNextInfo@plt+0x1010>
   12124:	ldr	r0, [sp, #64]	; 0x40
   12128:	ldr	r1, [sp, #44]	; 0x2c
   1212c:	mov	r4, r5
   12130:	mov	r2, r6
   12134:	mov	r3, r7
   12138:	mov	r5, #1
   1213c:	str	r4, [sp]
   12140:	bl	13420 <Mat_VarReadNextInfo@plt+0x231c>
   12144:	ldr	r0, [sp, #24]
   12148:	mov	r1, r6
   1214c:	mov	r2, r7
   12150:	mov	r3, r4
   12154:	str	r0, [sp]
   12158:	mov	r0, sl
   1215c:	bl	13684 <Mat_VarReadNextInfo@plt+0x2580>
   12160:	ldr	r8, [sp, #32]
   12164:	cmp	r0, #0
   12168:	beq	12438 <Mat_VarReadNextInfo@plt+0x1334>
   1216c:	ldr	r6, [sp, #24]
   12170:	mov	r4, r0
   12174:	ldr	r0, [r6, #16]
   12178:	bl	110c8 <Mat_SizeOfClass@plt>
   1217c:	str	r0, [r6, #12]
   12180:	mul	r0, r0, r4
   12184:	str	r0, [r6]
   12188:	ldr	r1, [r6, #20]
   1218c:	cmp	r1, #0
   12190:	beq	121c4 <Mat_VarReadNextInfo@plt+0x10c0>
   12194:	mov	r0, #8
   12198:	bl	10fb4 <malloc@plt>
   1219c:	str	r0, [r6, #40]	; 0x28
   121a0:	mov	r4, r0
   121a4:	ldr	r0, [r6]
   121a8:	bl	10fb4 <malloc@plt>
   121ac:	str	r0, [r4]
   121b0:	ldr	r0, [r6]
   121b4:	bl	10fb4 <malloc@plt>
   121b8:	str	r0, [r4, #4]
   121bc:	ldr	r2, [r6, #40]	; 0x28
   121c0:	b	121d0 <Mat_VarReadNextInfo@plt+0x10cc>
   121c4:	bl	10fb4 <malloc@plt>
   121c8:	mov	r2, r0
   121cc:	str	r0, [r6, #40]	; 0x28
   121d0:	ldr	r1, [sp, #52]	; 0x34
   121d4:	cmp	r2, #0
   121d8:	beq	124a4 <Mat_VarReadNextInfo@plt+0x13a0>
   121dc:	cmp	sl, #1
   121e0:	bne	12268 <Mat_VarReadNextInfo@plt+0x1164>
   121e4:	ldr	r0, [sp, #48]	; 0x30
   121e8:	ldr	r4, [sp, #60]	; 0x3c
   121ec:	ldr	r3, [r0]
   121f0:	ldr	r0, [r1]
   121f4:	ldr	r1, [r4]
   121f8:	stm	sp, {r0, r1}
   121fc:	ldr	r0, [sp, #20]
   12200:	mov	r1, r6
   12204:	bl	10f48 <Mat_VarReadDataLinear@plt>
   12208:	ldr	r1, [r6, #4]
   1220c:	ldr	r0, [r6, #32]
   12210:	mov	r2, #1
   12214:	cmp	r1, #2
   12218:	bne	12428 <Mat_VarReadNextInfo@plt+0x1324>
   1221c:	ldr	r1, [r0]
   12220:	cmp	r1, #1
   12224:	bne	12400 <Mat_VarReadNextInfo@plt+0x12fc>
   12228:	ldr	r1, [r4]
   1222c:	str	r1, [r0, #4]
   12230:	b	12438 <Mat_VarReadNextInfo@plt+0x1334>
   12234:	andeq	r4, r1, r8, lsl #29
   12238:	andeq	r3, r0, r8, lsr r8
   1223c:	andeq	r3, r0, r0, lsl r8
   12240:	ldrdeq	r1, [r0], -r8
   12244:	andeq	r4, r1, r4, lsr pc
   12248:	andeq	r1, r0, r8, lsl r4
   1224c:	andeq	r3, r0, ip, ror #19
   12250:	andeq	r4, r1, r8, lsr lr
   12254:	ldrdeq	r3, [r0], -r8
   12258:	andeq	r4, r1, r0, lsl pc
   1225c:	andeq	r4, r1, ip, lsl #28
   12260:	strdeq	r3, [r0], -r8
   12264:	strdeq	r4, [r1], -r0
   12268:	ldr	r0, [sp, #60]	; 0x3c
   1226c:	ldr	r3, [sp, #48]	; 0x30
   12270:	str	r1, [sp]
   12274:	mov	r1, r6
   12278:	str	r0, [sp, #4]
   1227c:	ldr	r0, [sp, #20]
   12280:	bl	10f60 <Mat_VarReadData@plt>
   12284:	cmp	sl, #1
   12288:	blt	12438 <Mat_VarReadNextInfo@plt+0x1334>
   1228c:	ldr	r0, [sp, #24]
   12290:	mov	r1, #0
   12294:	cmp	sl, #4
   12298:	ldr	r0, [r0, #32]
   1229c:	bcc	12384 <Mat_VarReadNextInfo@plt+0x1280>
   122a0:	ldr	r2, [sp, #60]	; 0x3c
   122a4:	add	r2, r2, sl, lsl #2
   122a8:	cmp	r2, r0
   122ac:	bls	122c0 <Mat_VarReadNextInfo@plt+0x11bc>
   122b0:	ldr	r3, [sp, #60]	; 0x3c
   122b4:	add	r2, r0, sl, lsl #2
   122b8:	cmp	r3, r2
   122bc:	bcc	12384 <Mat_VarReadNextInfo@plt+0x1280>
   122c0:	bic	r1, sl, #3
   122c4:	ldr	ip, [sp, #60]	; 0x3c
   122c8:	mov	lr, #0
   122cc:	mov	r3, #48	; 0x30
   122d0:	sub	r7, r1, #4
   122d4:	add	r6, r5, r7, lsr #2
   122d8:	cmp	r7, #12
   122dc:	and	r2, r6, #3
   122e0:	str	r2, [sp, #64]	; 0x40
   122e4:	bcc	12350 <Mat_VarReadNextInfo@plt+0x124c>
   122e8:	ldr	r2, [sp, #64]	; 0x40
   122ec:	mov	r4, #0
   122f0:	mov	lr, #0
   122f4:	sub	r8, r6, r2
   122f8:	add	r7, ip, r4
   122fc:	add	r2, r0, r4
   12300:	mov	r6, #48	; 0x30
   12304:	add	r4, r4, #64	; 0x40
   12308:	subs	r8, r8, #4
   1230c:	add	lr, lr, #16
   12310:	mov	r5, r7
   12314:	vld1.32	{d16-d17}, [r5], r3
   12318:	mov	r3, r2
   1231c:	vst1.32	{d16-d17}, [r3], r6
   12320:	add	r6, r7, #16
   12324:	vld1.32	{d16-d17}, [r6]
   12328:	add	r6, r2, #16
   1232c:	add	r2, r2, #32
   12330:	vst1.32	{d16-d17}, [r6]
   12334:	add	r6, r7, #32
   12338:	vld1.32	{d16-d17}, [r6]
   1233c:	vst1.32	{d16-d17}, [r2]
   12340:	vld1.32	{d16-d17}, [r5]
   12344:	vst1.32	{d16-d17}, [r3]
   12348:	mov	r3, #48	; 0x30
   1234c:	bne	122f8 <Mat_VarReadNextInfo@plt+0x11f4>
   12350:	ldr	r2, [sp, #64]	; 0x40
   12354:	cmp	r2, #0
   12358:	beq	12378 <Mat_VarReadNextInfo@plt+0x1274>
   1235c:	add	r6, ip, lr, lsl #2
   12360:	add	r3, r0, lr, lsl #2
   12364:	rsb	r2, r2, #0
   12368:	vld1.32	{d16-d17}, [r6]!
   1236c:	adds	r2, r2, #1
   12370:	vst1.32	{d16-d17}, [r3]!
   12374:	bcc	12368 <Mat_VarReadNextInfo@plt+0x1264>
   12378:	ldr	r8, [sp, #32]
   1237c:	cmp	sl, r1
   12380:	beq	12438 <Mat_VarReadNextInfo@plt+0x1334>
   12384:	mvn	r2, r1
   12388:	ands	r3, sl, #3
   1238c:	add	r2, sl, r2
   12390:	beq	123ac <Mat_VarReadNextInfo@plt+0x12a8>
   12394:	ldr	r6, [sp, #60]	; 0x3c
   12398:	ldr	r7, [r6, r1, lsl #2]
   1239c:	subs	r3, r3, #1
   123a0:	str	r7, [r0, r1, lsl #2]
   123a4:	add	r1, r1, #1
   123a8:	bne	12398 <Mat_VarReadNextInfo@plt+0x1294>
   123ac:	cmp	r2, #3
   123b0:	bcc	12438 <Mat_VarReadNextInfo@plt+0x1334>
   123b4:	ldr	r3, [sp, #60]	; 0x3c
   123b8:	sub	r2, sl, r1
   123bc:	lsl	r1, r1, #2
   123c0:	add	r7, r3, #16
   123c4:	ldr	r6, [r3, r1]!
   123c8:	add	r5, r0, #16
   123cc:	subs	r2, r2, #4
   123d0:	str	r6, [r0, r1]!
   123d4:	ldr	r6, [r3, #4]
   123d8:	str	r6, [r0, #4]
   123dc:	ldr	r6, [r3, #8]
   123e0:	str	r6, [r0, #8]
   123e4:	ldr	r3, [r3, #12]
   123e8:	str	r3, [r0, #12]
   123ec:	mov	r3, r7
   123f0:	mov	r0, r5
   123f4:	bne	123c0 <Mat_VarReadNextInfo@plt+0x12bc>
   123f8:	b	12438 <Mat_VarReadNextInfo@plt+0x1334>
   123fc:	andeq	r3, r0, fp, asr #13
   12400:	ldr	r1, [r0, #4]
   12404:	cmp	r1, #1
   12408:	bne	12428 <Mat_VarReadNextInfo@plt+0x1324>
   1240c:	ldr	r1, [r4]
   12410:	str	r1, [r0]
   12414:	b	12438 <Mat_VarReadNextInfo@plt+0x1334>
   12418:			; <UNDEFINED> instruction: 0x000036b8
   1241c:	andeq	r3, r0, r9, asr #13
   12420:	andeq	r4, r1, r4, ror #26
   12424:	andeq	r1, r0, ip, lsr fp
   12428:	mov	r1, #2
   1242c:	str	r1, [r6, #4]
   12430:	ldr	r1, [r4]
   12434:	stm	r0, {r1, r2}
   12438:	ldr	r0, [sp, #48]	; 0x30
   1243c:	bl	10f30 <free@plt>
   12440:	ldr	r0, [sp, #52]	; 0x34
   12444:	bl	10f30 <free@plt>
   12448:	ldr	r0, [sp, #60]	; 0x3c
   1244c:	bl	10f30 <free@plt>
   12450:	ldr	r6, [sp, #24]
   12454:	ldr	r1, [pc, #492]	; 12648 <Mat_VarReadNextInfo@plt+0x1544>
   12458:	mov	r0, r6
   1245c:	ldr	r1, [pc, r1]
   12460:	blx	r1
   12464:	mov	r0, r6
   12468:	bl	10ff0 <Mat_VarFree@plt>
   1246c:	ldr	r7, [sp, #20]
   12470:	b	114e0 <Mat_VarReadNextInfo@plt+0x3dc>
   12474:	andeq	r4, r1, r4, ror #24
   12478:	mov	r1, #0
   1247c:	mov	r2, #1
   12480:	strb	r1, [r0]
   12484:	mov	r1, #56	; 0x38
   12488:	ldr	r0, [pc, #384]	; 12610 <Mat_VarReadNextInfo@plt+0x150c>
   1248c:	ldr	r0, [pc, r0]
   12490:	ldr	r3, [r0]
   12494:	ldr	r0, [pc, #376]	; 12614 <Mat_VarReadNextInfo@plt+0x1510>
   12498:	add	r0, pc, r0
   1249c:	bl	10f84 <fwrite@plt>
   124a0:	b	12450 <Mat_VarReadNextInfo@plt+0x134c>
   124a4:	ldr	r0, [pc, #364]	; 12618 <Mat_VarReadNextInfo@plt+0x1514>
   124a8:	mov	r1, #37	; 0x25
   124ac:	mov	r2, #1
   124b0:	ldr	r0, [pc, r0]
   124b4:	ldr	r3, [r0]
   124b8:	ldr	r0, [pc, #348]	; 1261c <Mat_VarReadNextInfo@plt+0x1518>
   124bc:	add	r0, pc, r0
   124c0:	bl	10f84 <fwrite@plt>
   124c4:	b	12438 <Mat_VarReadNextInfo@plt+0x1334>
   124c8:	andeq	r3, r0, ip, lsl #14
   124cc:	ldr	r0, [pc, #308]	; 12608 <Mat_VarReadNextInfo@plt+0x1504>
   124d0:	add	r0, pc, r0
   124d4:	bl	11074 <Mat_Critical@plt>
   124d8:	mov	r4, #1
   124dc:	b	125ac <Mat_VarReadNextInfo@plt+0x14a8>
   124e0:	ldr	r1, [r8, r0, lsl #2]
   124e4:	ldr	r0, [pc, #288]	; 1260c <Mat_VarReadNextInfo@plt+0x1508>
   124e8:	add	r0, pc, r0
   124ec:	bl	11074 <Mat_Critical@plt>
   124f0:	mov	r4, #1
   124f4:	b	125ac <Mat_VarReadNextInfo@plt+0x14a8>
   124f8:	muleq	r1, r8, ip
   124fc:	ldr	r0, [pc, #328]	; 1264c <Mat_VarReadNextInfo@plt+0x1548>
   12500:	add	r0, pc, r0
   12504:	ldrb	r0, [r0]
   12508:	cmp	r0, #0
   1250c:	beq	1255c <Mat_VarReadNextInfo@plt+0x1458>
   12510:	mov	r0, r7
   12514:	bl	10ed0 <Mat_VarReadNext@plt>
   12518:	cmp	r0, #0
   1251c:	beq	1259c <Mat_VarReadNextInfo@plt+0x1498>
   12520:	mov	r4, r0
   12524:	ldr	r1, [pc, #296]	; 12654 <Mat_VarReadNextInfo@plt+0x1550>
   12528:	mov	r0, r4
   1252c:	ldr	r1, [pc, r1]
   12530:	blx	r1
   12534:	mov	r0, r4
   12538:	bl	10ff0 <Mat_VarFree@plt>
   1253c:	mov	r0, r7
   12540:	bl	10ed0 <Mat_VarReadNext@plt>
   12544:	mov	r4, r0
   12548:	cmp	r0, #0
   1254c:	bne	12524 <Mat_VarReadNextInfo@plt+0x1420>
   12550:	b	1259c <Mat_VarReadNextInfo@plt+0x1498>
   12554:	andeq	r4, r1, r8, asr #22
   12558:	andeq	r3, r0, r4, ror fp
   1255c:	mov	r0, r7
   12560:	bl	11104 <Mat_VarReadNextInfo@plt>
   12564:	cmp	r0, #0
   12568:	beq	1259c <Mat_VarReadNextInfo@plt+0x1498>
   1256c:	mov	r4, r0
   12570:	ldr	r1, [pc, #216]	; 12650 <Mat_VarReadNextInfo@plt+0x154c>
   12574:	mov	r0, r4
   12578:	ldr	r1, [pc, r1]
   1257c:	blx	r1
   12580:	mov	r0, r4
   12584:	bl	10ff0 <Mat_VarFree@plt>
   12588:	mov	r0, r7
   1258c:	bl	11104 <Mat_VarReadNextInfo@plt>
   12590:	mov	r4, r0
   12594:	cmp	r0, #0
   12598:	bne	12570 <Mat_VarReadNextInfo@plt+0x146c>
   1259c:	mov	r0, r7
   125a0:	bl	11068 <Mat_Close@plt>
   125a4:	bl	10ec4 <Mat_LogClose@plt>
   125a8:	mov	r4, #0
   125ac:	mov	r0, r4
   125b0:	sub	sp, fp, #56	; 0x38
   125b4:	vpop	{d8-d10}
   125b8:	add	sp, sp, #4
   125bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   125c0:	ldr	r0, [pc, #48]	; 125f8 <Mat_VarReadNextInfo@plt+0x14f4>
   125c4:	add	r0, pc, r0
   125c8:	bl	110b0 <Mat_Help@plt>
   125cc:	mov	r0, #0
   125d0:	bl	10fe4 <exit@plt>
   125d4:	ldr	r0, [pc, #32]	; 125fc <Mat_VarReadNextInfo@plt+0x14f8>
   125d8:	ldr	r1, [pc, #32]	; 12600 <Mat_VarReadNextInfo@plt+0x14fc>
   125dc:	ldr	r2, [pc, #32]	; 12604 <Mat_VarReadNextInfo@plt+0x1500>
   125e0:	add	r0, pc, r0
   125e4:	add	r1, pc, r1
   125e8:	add	r2, pc, r2
   125ec:	bl	10f00 <printf@plt>
   125f0:	mov	r0, #0
   125f4:	bl	10fe4 <exit@plt>
   125f8:	andeq	r3, r1, r0, lsr #23
   125fc:	andeq	r2, r0, fp, asr r5
   12600:	andeq	r2, r0, r8, lsr #9
   12604:	andeq	r2, r0, r9, lsr #11
   12608:	ldrdeq	r2, [r0], -pc	; <UNPREDICTABLE>
   1260c:	andeq	r2, r0, sl, ror #13
   12610:	andeq	r3, r1, ip, asr #24
   12614:	strdeq	r2, [r0], -r2	; <UNPREDICTABLE>
   12618:	andeq	r3, r1, r8, lsr #24
   1261c:	andeq	r2, r0, r7, lsl #24
   12620:	andeq	r4, r1, ip, ror r1
   12624:	andeq	r3, r0, r1, lsl #3
   12628:	andeq	r4, r1, r0, lsl r3
   1262c:	andeq	r3, r0, r5, lsl r3
   12630:	andeq	r4, r1, ip, lsr #3
   12634:	strdeq	r3, [r0], -r9
   12638:	andeq	r4, r1, ip, asr #3
   1263c:	andeq	r3, r0, pc, lsr #4
   12640:	andeq	r4, r1, ip, ror #5
   12644:	muleq	r0, r2, r3
   12648:	andeq	r3, r1, r0, ror sp
   1264c:	ldrdeq	r3, [r1], -r0
   12650:	andeq	r3, r1, r4, asr ip
   12654:	andeq	r3, r1, r0, lsr #25
   12658:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   1265c:	andeq	r3, r0, sl, ror r4
   12660:	push	{r4, r5, r6, sl, fp, lr}
   12664:	add	fp, sp, #16
   12668:	ldr	r0, [pc, #64]	; 126b0 <Mat_VarReadNextInfo@plt+0x15ac>
   1266c:	mov	r4, r1
   12670:	ldr	r0, [pc, r0]
   12674:	cmp	r0, #1
   12678:	blt	126a4 <Mat_VarReadNextInfo@plt+0x15a0>
   1267c:	ldr	r5, [pc, #48]	; 126b4 <Mat_VarReadNextInfo@plt+0x15b0>
   12680:	mov	r6, #0
   12684:	add	r5, pc, r5
   12688:	mov	r0, r5
   1268c:	bl	10f00 <printf@plt>
   12690:	ldr	r0, [pc, #32]	; 126b8 <Mat_VarReadNextInfo@plt+0x15b4>
   12694:	add	r6, r6, #1
   12698:	ldr	r0, [pc, r0]
   1269c:	cmp	r6, r0
   126a0:	blt	12688 <Mat_VarReadNextInfo@plt+0x1584>
   126a4:	mov	r0, r4
   126a8:	pop	{r4, r5, r6, sl, fp, lr}
   126ac:	b	10fa8 <puts@plt>
   126b0:	andeq	r3, r1, r8, ror #22
   126b4:	andeq	r2, r0, lr, lsr #13
   126b8:	andeq	r3, r1, r0, asr #22
   126bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   126c0:	add	fp, sp, #28
   126c4:	sub	sp, sp, #28
   126c8:	cmp	r0, #0
   126cc:	beq	12e74 <Mat_VarReadNextInfo@plt+0x1d70>
   126d0:	mov	r4, r0
   126d4:	ldr	r0, [r0, #16]
   126d8:	str	r4, [sp, #16]
   126dc:	sub	r1, r0, #6
   126e0:	cmp	r1, #10
   126e4:	bcs	127c8 <Mat_VarReadNextInfo@plt+0x16c4>
   126e8:	ldr	r0, [r4, #4]
   126ec:	cmp	r0, #3
   126f0:	beq	128e0 <Mat_VarReadNextInfo@plt+0x17dc>
   126f4:	cmp	r0, #2
   126f8:	bne	12e74 <Mat_VarReadNextInfo@plt+0x1d70>
   126fc:	ldr	r0, [r4, #40]	; 0x28
   12700:	cmp	r0, #0
   12704:	beq	12e74 <Mat_VarReadNextInfo@plt+0x1d70>
   12708:	ldr	r0, [r4, #8]
   1270c:	bl	10ffc <Mat_SizeOf@plt>
   12710:	mov	r5, r0
   12714:	ldr	r0, [r4, #20]
   12718:	cmp	r0, #0
   1271c:	beq	12ba0 <Mat_VarReadNextInfo@plt+0x1a9c>
   12720:	ldr	r1, [r4, #32]
   12724:	ldr	r0, [r1]
   12728:	cmp	r0, #0
   1272c:	beq	12e74 <Mat_VarReadNextInfo@plt+0x1d70>
   12730:	ldr	r2, [r4, #40]	; 0x28
   12734:	ldr	r4, [sp, #16]
   12738:	mov	r6, #0
   1273c:	ldr	sl, [r2]
   12740:	ldr	r7, [r2, #4]
   12744:	b	12768 <Mat_VarReadNextInfo@plt+0x1664>
   12748:	mov	r0, #10
   1274c:	bl	1105c <putchar@plt>
   12750:	ldr	r0, [sp, #16]
   12754:	add	r6, r6, #1
   12758:	ldr	r1, [r0, #32]
   1275c:	ldr	r0, [r1]
   12760:	cmp	r6, r0
   12764:	bcs	12e74 <Mat_VarReadNextInfo@plt+0x1d70>
   12768:	ldr	r1, [r1, #4]
   1276c:	cmp	r1, #0
   12770:	beq	12748 <Mat_VarReadNextInfo@plt+0x1644>
   12774:	mov	r8, #0
   12778:	mla	r9, r8, r0, r6
   1277c:	ldr	r0, [r4, #8]
   12780:	mla	r1, r9, r5, sl
   12784:	bl	1330c <Mat_VarReadNextInfo@plt+0x2208>
   12788:	ldr	r0, [pc, #1932]	; 12f1c <Mat_VarReadNextInfo@plt+0x1e18>
   1278c:	add	r0, pc, r0
   12790:	bl	10f00 <printf@plt>
   12794:	ldr	r0, [r4, #8]
   12798:	mla	r1, r9, r5, r7
   1279c:	bl	1330c <Mat_VarReadNextInfo@plt+0x2208>
   127a0:	ldr	r0, [pc, #1912]	; 12f20 <Mat_VarReadNextInfo@plt+0x1e1c>
   127a4:	add	r0, pc, r0
   127a8:	bl	10f00 <printf@plt>
   127ac:	ldr	r0, [r4, #32]
   127b0:	add	r8, r8, #1
   127b4:	ldr	r1, [r0, #4]
   127b8:	cmp	r8, r1
   127bc:	bcs	12748 <Mat_VarReadNextInfo@plt+0x1644>
   127c0:	ldr	r0, [r0]
   127c4:	b	12778 <Mat_VarReadNextInfo@plt+0x1674>
   127c8:	sub	r1, r0, #4
   127cc:	cmp	r1, #2
   127d0:	bcc	12aa0 <Mat_VarReadNextInfo@plt+0x199c>
   127d4:	cmp	r0, #1
   127d8:	beq	12abc <Mat_VarReadNextInfo@plt+0x19b8>
   127dc:	cmp	r0, #2
   127e0:	bne	12b94 <Mat_VarReadNextInfo@plt+0x1a90>
   127e4:	ldr	r1, [r4, #36]	; 0x24
   127e8:	cmp	r1, #0
   127ec:	beq	127fc <Mat_VarReadNextInfo@plt+0x16f8>
   127f0:	ldr	r0, [pc, #1816]	; 12f10 <Mat_VarReadNextInfo@plt+0x1e0c>
   127f4:	add	r0, pc, r0
   127f8:	bl	10f54 <Mat_Message@plt>
   127fc:	ldr	r1, [r4, #4]
   12800:	ldr	r0, [pc, #1804]	; 12f14 <Mat_VarReadNextInfo@plt+0x1e10>
   12804:	add	r0, pc, r0
   12808:	bl	10f54 <Mat_Message@plt>
   1280c:	ldr	r0, [r4, #4]
   12810:	cmp	r0, #0
   12814:	beq	12e74 <Mat_VarReadNextInfo@plt+0x1d70>
   12818:	ldr	r0, [pc, #1784]	; 12f18 <Mat_VarReadNextInfo@plt+0x1e14>
   1281c:	add	r0, pc, r0
   12820:	bl	10f54 <Mat_Message@plt>
   12824:	mov	r0, r4
   12828:	bl	10eac <Mat_VarGetNumberOfFields@plt>
   1282c:	ldr	r9, [r4, #32]
   12830:	ldr	r1, [r4, #4]
   12834:	mov	r5, r0
   12838:	ldr	r6, [r9]
   1283c:	cmp	r1, #2
   12840:	blt	12d98 <Mat_VarReadNextInfo@plt+0x1c94>
   12844:	sub	r8, r1, #1
   12848:	mov	r2, #1
   1284c:	cmp	r8, #4
   12850:	bcc	12d84 <Mat_VarReadNextInfo@plt+0x1c80>
   12854:	mov	r7, #1
   12858:	bic	ip, r8, #3
   1285c:	vdup.32	q8, r7
   12860:	subs	r2, ip, #4
   12864:	add	r2, r7, r2, lsr #2
   12868:	and	lr, r2, #1
   1286c:	vmov.32	d16[0], r6
   12870:	beq	128a4 <Mat_VarReadNextInfo@plt+0x17a0>
   12874:	sub	r3, lr, r2
   12878:	add	r6, r9, #20
   1287c:	mov	r7, #1
   12880:	mov	r2, #32
   12884:	sub	r4, r6, #16
   12888:	vld1.32	{d20-d21}, [r6], r2
   1288c:	adds	r3, r3, #2
   12890:	add	r7, r7, #8
   12894:	vld1.32	{d18-d19}, [r4]
   12898:	vmul.i32	q8, q9, q8
   1289c:	vmul.i32	q8, q10, q8
   128a0:	bne	12884 <Mat_VarReadNextInfo@plt+0x1780>
   128a4:	cmp	lr, #0
   128a8:	beq	128b8 <Mat_VarReadNextInfo@plt+0x17b4>
   128ac:	add	r2, r9, r7, lsl #2
   128b0:	vld1.32	{d18-d19}, [r2]
   128b4:	vmul.i32	q8, q9, q8
   128b8:	vext.8	q9, q8, q8, #8
   128bc:	cmp	r8, ip
   128c0:	vmul.i32	q0, q8, q9
   128c4:	vmul.i32	q8, q0, d0[1]
   128c8:	vmov.32	r6, d16[0]
   128cc:	bne	12d7c <Mat_VarReadNextInfo@plt+0x1c78>
   128d0:	ldr	r4, [sp, #16]
   128d4:	cmp	r5, #1
   128d8:	bge	12da0 <Mat_VarReadNextInfo@plt+0x1c9c>
   128dc:	b	12e04 <Mat_VarReadNextInfo@plt+0x1d00>
   128e0:	ldr	r0, [r4, #40]	; 0x28
   128e4:	cmp	r0, #0
   128e8:	beq	12e74 <Mat_VarReadNextInfo@plt+0x1d70>
   128ec:	ldr	r0, [r4, #8]
   128f0:	bl	10ffc <Mat_SizeOf@plt>
   128f4:	mov	r5, r0
   128f8:	ldr	r0, [r4, #20]
   128fc:	str	r5, [sp, #12]
   12900:	cmp	r0, #0
   12904:	beq	12c40 <Mat_VarReadNextInfo@plt+0x1b3c>
   12908:	ldr	r0, [r4, #32]
   1290c:	ldr	r0, [r0, #8]
   12910:	cmp	r0, #0
   12914:	beq	12e74 <Mat_VarReadNextInfo@plt+0x1d70>
   12918:	ldr	r0, [r4, #40]	; 0x28
   1291c:	mov	r8, r4
   12920:	mov	r2, #0
   12924:	ldr	r1, [r0]
   12928:	ldr	r9, [r0, #4]
   1292c:	str	r1, [sp, #4]
   12930:	ldr	r5, [pc, #1516]	; 12f24 <Mat_VarReadNextInfo@plt+0x1e20>
   12934:	ldr	r4, [pc, #1516]	; 12f28 <Mat_VarReadNextInfo@plt+0x1e24>
   12938:	str	r9, [sp, #20]
   1293c:	ldr	r6, [sp, #12]
   12940:	add	r5, pc, r5
   12944:	add	r4, pc, r4
   12948:	b	1297c <Mat_VarReadNextInfo@plt+0x1878>
   1294c:	ldr	r5, [pc, #1520]	; 12f44 <Mat_VarReadNextInfo@plt+0x1e40>
   12950:	sub	r0, r1, #1
   12954:	add	r5, pc, r5
   12958:	str	r0, [r5]
   1295c:	mov	r0, #10
   12960:	bl	1105c <putchar@plt>
   12964:	ldr	r0, [r8, #32]
   12968:	ldr	r2, [sp, #8]
   1296c:	ldr	r0, [r0, #8]
   12970:	add	r2, r2, #1
   12974:	cmp	r2, r0
   12978:	bcs	12e74 <Mat_VarReadNextInfo@plt+0x1d70>
   1297c:	ldr	r1, [r8, #36]	; 0x24
   12980:	ldr	r0, [pc, #1444]	; 12f2c <Mat_VarReadNextInfo@plt+0x1e28>
   12984:	str	r2, [sp, #8]
   12988:	add	r0, pc, r0
   1298c:	bl	10f54 <Mat_Message@plt>
   12990:	ldr	r0, [pc, #1432]	; 12f30 <Mat_VarReadNextInfo@plt+0x1e2c>
   12994:	ldr	r0, [pc, r0]
   12998:	add	r1, r0, #1
   1299c:	str	r1, [r5]
   129a0:	ldr	r0, [r8, #32]
   129a4:	ldr	r2, [r0]
   129a8:	cmp	r2, #0
   129ac:	beq	1294c <Mat_VarReadNextInfo@plt+0x1848>
   129b0:	mov	r2, #0
   129b4:	b	129e0 <Mat_VarReadNextInfo@plt+0x18dc>
   129b8:	mov	r0, #10
   129bc:	bl	1105c <putchar@plt>
   129c0:	ldr	r0, [r8, #32]
   129c4:	add	r5, r5, #1
   129c8:	ldr	r2, [r0]
   129cc:	ldr	r1, [pc, #1388]	; 12f40 <Mat_VarReadNextInfo@plt+0x1e3c>
   129d0:	ldr	r1, [pc, r1]
   129d4:	cmp	r5, r2
   129d8:	mov	r2, r5
   129dc:	bcs	1294c <Mat_VarReadNextInfo@plt+0x1848>
   129e0:	cmp	r1, #0
   129e4:	str	r2, [sp, #24]
   129e8:	beq	12a1c <Mat_VarReadNextInfo@plt+0x1918>
   129ec:	ldr	r5, [pc, #1344]	; 12f34 <Mat_VarReadNextInfo@plt+0x1e30>
   129f0:	mov	r7, #0
   129f4:	add	r5, pc, r5
   129f8:	mov	r0, r5
   129fc:	bl	10f00 <printf@plt>
   12a00:	ldr	r0, [pc, #1328]	; 12f38 <Mat_VarReadNextInfo@plt+0x1e34>
   12a04:	add	r7, r7, #1
   12a08:	ldr	r0, [pc, r0]
   12a0c:	cmp	r7, r0
   12a10:	bcc	129f8 <Mat_VarReadNextInfo@plt+0x18f4>
   12a14:	ldr	r0, [sp, #16]
   12a18:	ldr	r0, [r0, #32]
   12a1c:	ldr	r1, [r0, #4]
   12a20:	ldr	r8, [sp, #16]
   12a24:	ldr	r5, [sp, #24]
   12a28:	ldmib	sp, {r2, sl}
   12a2c:	cmp	r1, #0
   12a30:	beq	129b8 <Mat_VarReadNextInfo@plt+0x18b4>
   12a34:	mov	r7, #0
   12a38:	ldr	r0, [r0]
   12a3c:	mla	r1, sl, r1, r7
   12a40:	mov	r9, r4
   12a44:	mla	r4, r1, r0, r5
   12a48:	ldr	r0, [r8, #8]
   12a4c:	mov	r5, r2
   12a50:	mla	r1, r4, r6, r2
   12a54:	bl	1330c <Mat_VarReadNextInfo@plt+0x2208>
   12a58:	ldr	r0, [pc, #1244]	; 12f3c <Mat_VarReadNextInfo@plt+0x1e38>
   12a5c:	add	r0, pc, r0
   12a60:	bl	10f00 <printf@plt>
   12a64:	ldr	r0, [sp, #20]
   12a68:	mla	r1, r4, r6, r0
   12a6c:	ldr	r0, [r8, #8]
   12a70:	mov	r4, r9
   12a74:	bl	1330c <Mat_VarReadNextInfo@plt+0x2208>
   12a78:	mov	r0, r9
   12a7c:	bl	10f00 <printf@plt>
   12a80:	ldr	r0, [r8, #32]
   12a84:	mov	r2, r5
   12a88:	ldr	r5, [sp, #24]
   12a8c:	add	r7, r7, #1
   12a90:	ldr	r1, [r0, #4]
   12a94:	cmp	r7, r1
   12a98:	bcc	12a38 <Mat_VarReadNextInfo@plt+0x1934>
   12a9c:	b	129b8 <Mat_VarReadNextInfo@plt+0x18b4>
   12aa0:	ldr	r0, [pc, #1212]	; 12f64 <Mat_VarReadNextInfo@plt+0x1e60>
   12aa4:	add	r0, pc, r0
   12aa8:	ldrb	r1, [r0]
   12aac:	mov	r0, r4
   12ab0:	sub	sp, fp, #28
   12ab4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ab8:	b	11044 <Mat_VarPrint@plt>
   12abc:	ldr	r1, [r4, #36]	; 0x24
   12ac0:	cmp	r1, #0
   12ac4:	beq	12ad4 <Mat_VarReadNextInfo@plt+0x19d0>
   12ac8:	ldr	r0, [pc, #1212]	; 12f8c <Mat_VarReadNextInfo@plt+0x1e88>
   12acc:	add	r0, pc, r0
   12ad0:	bl	10f54 <Mat_Message@plt>
   12ad4:	ldr	r1, [r4, #4]
   12ad8:	ldr	r0, [pc, #1200]	; 12f90 <Mat_VarReadNextInfo@plt+0x1e8c>
   12adc:	add	r0, pc, r0
   12ae0:	bl	10f54 <Mat_Message@plt>
   12ae4:	ldr	r0, [r4, #4]
   12ae8:	cmp	r0, #0
   12aec:	beq	12e74 <Mat_VarReadNextInfo@plt+0x1d70>
   12af0:	ldr	r1, [r4, #32]
   12af4:	cmp	r0, #2
   12af8:	ldr	r5, [r1]
   12afc:	blt	12e9c <Mat_VarReadNextInfo@plt+0x1d98>
   12b00:	sub	r2, r0, #1
   12b04:	mov	r3, #1
   12b08:	cmp	r2, #4
   12b0c:	bcc	12e84 <Mat_VarReadNextInfo@plt+0x1d80>
   12b10:	mov	r7, #1
   12b14:	bic	ip, r2, #3
   12b18:	vdup.32	q8, r7
   12b1c:	subs	r3, ip, #4
   12b20:	add	r3, r7, r3, lsr #2
   12b24:	and	lr, r3, #1
   12b28:	vmov.32	d16[0], r5
   12b2c:	beq	12b60 <Mat_VarReadNextInfo@plt+0x1a5c>
   12b30:	sub	r5, lr, r3
   12b34:	add	r3, r1, #20
   12b38:	mov	r7, #1
   12b3c:	mov	r6, #32
   12b40:	sub	r4, r3, #16
   12b44:	vld1.32	{d20-d21}, [r3], r6
   12b48:	adds	r5, r5, #2
   12b4c:	add	r7, r7, #8
   12b50:	vld1.32	{d18-d19}, [r4]
   12b54:	vmul.i32	q8, q9, q8
   12b58:	vmul.i32	q8, q10, q8
   12b5c:	bne	12b40 <Mat_VarReadNextInfo@plt+0x1a3c>
   12b60:	cmp	lr, #0
   12b64:	beq	12b74 <Mat_VarReadNextInfo@plt+0x1a70>
   12b68:	add	r3, r1, r7, lsl #2
   12b6c:	vld1.32	{d18-d19}, [r3]
   12b70:	vmul.i32	q8, q9, q8
   12b74:	vext.8	q9, q8, q8, #8
   12b78:	cmp	r2, ip
   12b7c:	vmul.i32	q0, q8, q9
   12b80:	vmul.i32	q8, q0, d0[1]
   12b84:	vmov.32	r5, d16[0]
   12b88:	bne	12e7c <Mat_VarReadNextInfo@plt+0x1d78>
   12b8c:	ldr	r4, [sp, #16]
   12b90:	b	12e9c <Mat_VarReadNextInfo@plt+0x1d98>
   12b94:	ldr	r0, [pc, #1036]	; 12fa8 <Mat_VarReadNextInfo@plt+0x1ea4>
   12b98:	add	r0, pc, r0
   12b9c:	b	12f04 <Mat_VarReadNextInfo@plt+0x1e00>
   12ba0:	ldr	r0, [r4, #32]
   12ba4:	ldr	r1, [r0]
   12ba8:	cmp	r1, #0
   12bac:	beq	12e74 <Mat_VarReadNextInfo@plt+0x1d70>
   12bb0:	ldr	r8, [r4, #40]	; 0x28
   12bb4:	mov	r7, #0
   12bb8:	b	12bd8 <Mat_VarReadNextInfo@plt+0x1ad4>
   12bbc:	mov	r0, #10
   12bc0:	bl	1105c <putchar@plt>
   12bc4:	ldr	r0, [r4, #32]
   12bc8:	add	r7, r7, #1
   12bcc:	ldr	r1, [r0]
   12bd0:	cmp	r7, r1
   12bd4:	bcs	12e74 <Mat_VarReadNextInfo@plt+0x1d70>
   12bd8:	ldr	r0, [r0, #4]
   12bdc:	cmp	r0, #0
   12be0:	beq	12bbc <Mat_VarReadNextInfo@plt+0x1ab8>
   12be4:	ldr	r0, [r4, #8]
   12be8:	mla	r1, r7, r5, r8
   12bec:	bl	1330c <Mat_VarReadNextInfo@plt+0x2208>
   12bf0:	mov	r0, #32
   12bf4:	bl	1105c <putchar@plt>
   12bf8:	ldr	r0, [r4, #32]
   12bfc:	ldr	r1, [r0, #4]
   12c00:	cmp	r1, #2
   12c04:	bcc	12bbc <Mat_VarReadNextInfo@plt+0x1ab8>
   12c08:	mov	r6, #1
   12c0c:	ldr	r0, [r0]
   12c10:	mla	r0, r6, r0, r7
   12c14:	mla	r1, r0, r5, r8
   12c18:	ldr	r0, [r4, #8]
   12c1c:	bl	1330c <Mat_VarReadNextInfo@plt+0x2208>
   12c20:	mov	r0, #32
   12c24:	bl	1105c <putchar@plt>
   12c28:	ldr	r0, [r4, #32]
   12c2c:	add	r6, r6, #1
   12c30:	ldr	r1, [r0, #4]
   12c34:	cmp	r6, r1
   12c38:	bcc	12c0c <Mat_VarReadNextInfo@plt+0x1b08>
   12c3c:	b	12bbc <Mat_VarReadNextInfo@plt+0x1ab8>
   12c40:	ldr	r0, [r4, #32]
   12c44:	ldr	r0, [r0, #8]
   12c48:	cmp	r0, #0
   12c4c:	beq	12e74 <Mat_VarReadNextInfo@plt+0x1d70>
   12c50:	ldr	r9, [r4, #40]	; 0x28
   12c54:	ldr	r7, [pc, #748]	; 12f48 <Mat_VarReadNextInfo@plt+0x1e44>
   12c58:	mov	r6, #0
   12c5c:	add	r7, pc, r7
   12c60:	b	12c90 <Mat_VarReadNextInfo@plt+0x1b8c>
   12c64:	ldr	r7, [pc, #756]	; 12f60 <Mat_VarReadNextInfo@plt+0x1e5c>
   12c68:	sub	r0, r1, #1
   12c6c:	add	r7, pc, r7
   12c70:	str	r0, [r7]
   12c74:	mov	r0, #10
   12c78:	bl	1105c <putchar@plt>
   12c7c:	ldr	r0, [r4, #32]
   12c80:	add	r6, r6, #1
   12c84:	ldr	r0, [r0, #8]
   12c88:	cmp	r6, r0
   12c8c:	bcs	12e74 <Mat_VarReadNextInfo@plt+0x1d70>
   12c90:	ldr	r1, [r4, #36]	; 0x24
   12c94:	ldr	r0, [pc, #688]	; 12f4c <Mat_VarReadNextInfo@plt+0x1e48>
   12c98:	mov	r2, r6
   12c9c:	add	r0, pc, r0
   12ca0:	bl	10f54 <Mat_Message@plt>
   12ca4:	ldr	r0, [pc, #676]	; 12f50 <Mat_VarReadNextInfo@plt+0x1e4c>
   12ca8:	ldr	r0, [pc, r0]
   12cac:	add	r1, r0, #1
   12cb0:	str	r1, [r7]
   12cb4:	ldr	r0, [r4, #32]
   12cb8:	ldr	r2, [r0]
   12cbc:	cmp	r2, #0
   12cc0:	beq	12c64 <Mat_VarReadNextInfo@plt+0x1b60>
   12cc4:	mov	r8, #0
   12cc8:	cmp	r1, #0
   12ccc:	bne	12d00 <Mat_VarReadNextInfo@plt+0x1bfc>
   12cd0:	b	12d34 <Mat_VarReadNextInfo@plt+0x1c30>
   12cd4:	mov	r0, #10
   12cd8:	bl	1105c <putchar@plt>
   12cdc:	ldr	r0, [r4, #32]
   12ce0:	add	r8, r8, #1
   12ce4:	ldr	r2, [r0]
   12ce8:	ldr	r1, [pc, #620]	; 12f5c <Mat_VarReadNextInfo@plt+0x1e58>
   12cec:	ldr	r1, [pc, r1]
   12cf0:	cmp	r8, r2
   12cf4:	bcs	12c64 <Mat_VarReadNextInfo@plt+0x1b60>
   12cf8:	cmp	r1, #0
   12cfc:	beq	12d34 <Mat_VarReadNextInfo@plt+0x1c30>
   12d00:	ldr	r4, [pc, #588]	; 12f54 <Mat_VarReadNextInfo@plt+0x1e50>
   12d04:	mov	r7, #0
   12d08:	add	r4, pc, r4
   12d0c:	mov	r0, r4
   12d10:	bl	10f00 <printf@plt>
   12d14:	ldr	r0, [pc, #572]	; 12f58 <Mat_VarReadNextInfo@plt+0x1e54>
   12d18:	add	r7, r7, #1
   12d1c:	ldr	r0, [pc, r0]
   12d20:	cmp	r7, r0
   12d24:	bcc	12d0c <Mat_VarReadNextInfo@plt+0x1c08>
   12d28:	ldr	r4, [sp, #16]
   12d2c:	ldr	r5, [sp, #12]
   12d30:	ldr	r0, [r4, #32]
   12d34:	ldr	r1, [r0, #4]
   12d38:	cmp	r1, #0
   12d3c:	beq	12cd4 <Mat_VarReadNextInfo@plt+0x1bd0>
   12d40:	mov	sl, #0
   12d44:	ldr	r0, [r0]
   12d48:	mla	r1, r6, r1, sl
   12d4c:	mla	r0, r1, r0, r8
   12d50:	mla	r1, r0, r5, r9
   12d54:	ldr	r0, [r4, #8]
   12d58:	bl	1330c <Mat_VarReadNextInfo@plt+0x2208>
   12d5c:	mov	r0, #32
   12d60:	bl	1105c <putchar@plt>
   12d64:	ldr	r0, [r4, #32]
   12d68:	add	sl, sl, #1
   12d6c:	ldr	r1, [r0, #4]
   12d70:	cmp	sl, r1
   12d74:	bcc	12d44 <Mat_VarReadNextInfo@plt+0x1c40>
   12d78:	b	12cd4 <Mat_VarReadNextInfo@plt+0x1bd0>
   12d7c:	ldr	r4, [sp, #16]
   12d80:	orr	r2, ip, #1
   12d84:	ldr	r3, [r9, r2, lsl #2]
   12d88:	add	r2, r2, #1
   12d8c:	cmp	r2, r1
   12d90:	mul	r6, r3, r6
   12d94:	blt	12d84 <Mat_VarReadNextInfo@plt+0x1c80>
   12d98:	cmp	r5, #1
   12d9c:	blt	12e04 <Mat_VarReadNextInfo@plt+0x1d00>
   12da0:	cmp	r6, #0
   12da4:	bne	12e04 <Mat_VarReadNextInfo@plt+0x1d00>
   12da8:	mov	r0, r4
   12dac:	bl	10f90 <Mat_VarGetStructFieldnames@plt>
   12db0:	mov	r4, r0
   12db4:	ldr	r0, [pc, #428]	; 12f68 <Mat_VarReadNextInfo@plt+0x1e64>
   12db8:	mov	r1, r5
   12dbc:	add	r0, pc, r0
   12dc0:	bl	10f54 <Mat_Message@plt>
   12dc4:	ldr	r0, [pc, #416]	; 12f6c <Mat_VarReadNextInfo@plt+0x1e68>
   12dc8:	cmp	r4, #0
   12dcc:	ldr	r0, [pc, r0]
   12dd0:	ldr	r7, [pc, #408]	; 12f70 <Mat_VarReadNextInfo@plt+0x1e6c>
   12dd4:	add	r0, r0, #1
   12dd8:	add	r7, pc, r7
   12ddc:	str	r0, [r7]
   12de0:	beq	12e68 <Mat_VarReadNextInfo@plt+0x1d64>
   12de4:	ldr	r6, [pc, #392]	; 12f74 <Mat_VarReadNextInfo@plt+0x1e70>
   12de8:	add	r6, pc, r6
   12dec:	ldr	r1, [r4], #4
   12df0:	mov	r0, r6
   12df4:	bl	10f54 <Mat_Message@plt>
   12df8:	subs	r5, r5, #1
   12dfc:	bne	12dec <Mat_VarReadNextInfo@plt+0x1ce8>
   12e00:	b	12e60 <Mat_VarReadNextInfo@plt+0x1d5c>
   12e04:	cmp	r5, #1
   12e08:	blt	12e74 <Mat_VarReadNextInfo@plt+0x1d70>
   12e0c:	cmp	r6, #0
   12e10:	beq	12e74 <Mat_VarReadNextInfo@plt+0x1d70>
   12e14:	ldr	r0, [pc, #356]	; 12f80 <Mat_VarReadNextInfo@plt+0x1e7c>
   12e18:	mov	r1, r5
   12e1c:	add	r0, pc, r0
   12e20:	bl	10f54 <Mat_Message@plt>
   12e24:	ldr	r0, [pc, #344]	; 12f84 <Mat_VarReadNextInfo@plt+0x1e80>
   12e28:	ldr	r0, [pc, r0]
   12e2c:	ldr	r7, [pc, #340]	; 12f88 <Mat_VarReadNextInfo@plt+0x1e84>
   12e30:	add	r0, r0, #1
   12e34:	add	r7, pc, r7
   12e38:	str	r0, [r7]
   12e3c:	ldr	r4, [r4, #40]	; 0x28
   12e40:	cmp	r4, #0
   12e44:	mulne	r5, r6, r5
   12e48:	cmpne	r5, #0
   12e4c:	beq	12e68 <Mat_VarReadNextInfo@plt+0x1d64>
   12e50:	ldr	r0, [r4], #4
   12e54:	bl	126bc <Mat_VarReadNextInfo@plt+0x15b8>
   12e58:	subs	r5, r5, #1
   12e5c:	bne	12e50 <Mat_VarReadNextInfo@plt+0x1d4c>
   12e60:	ldr	r0, [pc, #272]	; 12f78 <Mat_VarReadNextInfo@plt+0x1e74>
   12e64:	ldr	r0, [pc, r0]
   12e68:	sub	r0, r0, #1
   12e6c:	str	r0, [r7]
   12e70:	b	12efc <Mat_VarReadNextInfo@plt+0x1df8>
   12e74:	sub	sp, fp, #28
   12e78:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12e7c:	ldr	r4, [sp, #16]
   12e80:	orr	r3, ip, #1
   12e84:	add	r1, r1, r3, lsl #2
   12e88:	sub	r0, r0, r3
   12e8c:	ldr	r2, [r1], #4
   12e90:	subs	r0, r0, #1
   12e94:	mul	r5, r2, r5
   12e98:	bne	12e8c <Mat_VarReadNextInfo@plt+0x1d88>
   12e9c:	ldr	r0, [pc, #240]	; 12f94 <Mat_VarReadNextInfo@plt+0x1e90>
   12ea0:	add	r0, pc, r0
   12ea4:	bl	10f54 <Mat_Message@plt>
   12ea8:	ldr	r0, [pc, #232]	; 12f98 <Mat_VarReadNextInfo@plt+0x1e94>
   12eac:	add	r0, pc, r0
   12eb0:	bl	10f54 <Mat_Message@plt>
   12eb4:	ldr	r0, [pc, #224]	; 12f9c <Mat_VarReadNextInfo@plt+0x1e98>
   12eb8:	ldr	r0, [pc, r0]
   12ebc:	ldr	r6, [pc, #220]	; 12fa0 <Mat_VarReadNextInfo@plt+0x1e9c>
   12ec0:	add	r0, r0, #1
   12ec4:	add	r6, pc, r6
   12ec8:	str	r0, [r6]
   12ecc:	ldr	r4, [r4, #40]	; 0x28
   12ed0:	cmp	r4, #0
   12ed4:	cmpne	r5, #0
   12ed8:	beq	12ef4 <Mat_VarReadNextInfo@plt+0x1df0>
   12edc:	ldr	r0, [r4], #4
   12ee0:	bl	126bc <Mat_VarReadNextInfo@plt+0x15b8>
   12ee4:	subs	r5, r5, #1
   12ee8:	bne	12edc <Mat_VarReadNextInfo@plt+0x1dd8>
   12eec:	ldr	r0, [pc, #176]	; 12fa4 <Mat_VarReadNextInfo@plt+0x1ea0>
   12ef0:	ldr	r0, [pc, r0]
   12ef4:	sub	r0, r0, #1
   12ef8:	str	r0, [r6]
   12efc:	ldr	r0, [pc, #120]	; 12f7c <Mat_VarReadNextInfo@plt+0x1e78>
   12f00:	add	r0, pc, r0
   12f04:	sub	sp, fp, #28
   12f08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12f0c:	b	10f54 <Mat_Message@plt>
   12f10:	andeq	r2, r0, sl, lsl r4
   12f14:	andeq	r2, r0, r9, lsl r4
   12f18:	andeq	r2, r0, r0, lsl r4
   12f1c:	andeq	r2, r0, r0, ror #9
   12f20:	andeq	r2, r0, ip, asr #9
   12f24:	muleq	r1, r8, r8
   12f28:	andeq	r2, r0, ip, lsr #6
   12f2c:	andeq	r2, r0, sp, lsl #6
   12f30:	andeq	r3, r1, r4, asr #16
   12f34:	andeq	r2, r0, lr, lsr r3
   12f38:	ldrdeq	r3, [r1], -r0
   12f3c:	andeq	r2, r0, r0, lsl r2
   12f40:	andeq	r3, r1, r8, lsl #16
   12f44:	andeq	r3, r1, r4, lsl #17
   12f48:	andeq	r3, r1, ip, ror r5
   12f4c:	strdeq	r1, [r0], -r9
   12f50:	andeq	r3, r1, r0, lsr r5
   12f54:	andeq	r2, r0, sl, lsr #32
   12f58:			; <UNDEFINED> instruction: 0x000134bc
   12f5c:	andeq	r3, r1, ip, ror #9
   12f60:	andeq	r3, r1, ip, ror #10
   12f64:	andeq	r3, r1, ip, lsr #14
   12f68:	andeq	r1, r0, r6, lsl #29
   12f6c:	andeq	r3, r1, ip, lsl #8
   12f70:	andeq	r3, r1, r0, lsl #8
   12f74:	andeq	r1, r0, r8, lsr #28
   12f78:	andeq	r3, r1, r4, ror r3
   12f7c:	andeq	r2, r0, r8, ror #4
   12f80:	andeq	r1, r0, r6, lsr #28
   12f84:			; <UNDEFINED> instruction: 0x000133b0
   12f88:	andeq	r3, r1, r4, lsr #7
   12f8c:	andeq	r2, r0, r2, asr #2
   12f90:	andeq	r2, r0, r1, asr #2
   12f94:	andeq	r1, r0, pc, lsr #27
   12f98:	andeq	r1, r0, r1, lsr #27
   12f9c:	andeq	r3, r1, r0, lsr #6
   12fa0:	andeq	r3, r1, r4, lsl r3
   12fa4:	andeq	r3, r1, r8, ror #5
   12fa8:	andeq	r2, r0, lr, asr #1
   12fac:	nop	{0}
   12fb0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12fb4:	add	fp, sp, #24
   12fb8:	vpush	{d8-d9}
   12fbc:	sub	sp, sp, #40	; 0x28
   12fc0:	vmov.i32	q8, #0	; 0x00000000
   12fc4:	add	r8, sp, #8
   12fc8:	mov	r4, r0
   12fcc:	mov	r0, r8
   12fd0:	vst1.64	{d16-d17}, [r0]!
   12fd4:	vst1.64	{d16-d17}, [r0]
   12fd8:	ldr	r5, [pc, #512]	; 131e0 <Mat_VarReadNextInfo@plt+0x20dc>
   12fdc:	add	r5, pc, r5
   12fe0:	ldrb	r0, [r5]
   12fe4:	cmp	r0, #0
   12fe8:	bne	13024 <Mat_VarReadNextInfo@plt+0x1f20>
   12fec:	ldr	r0, [pc, #496]	; 131e4 <Mat_VarReadNextInfo@plt+0x20e0>
   12ff0:	add	r0, pc, r0
   12ff4:	str	r0, [sp]
   12ff8:	ldr	r0, [pc, #488]	; 131e8 <Mat_VarReadNextInfo@plt+0x20e4>
   12ffc:	ldr	r1, [pc, #488]	; 131ec <Mat_VarReadNextInfo@plt+0x20e8>
   13000:	ldr	r2, [pc, #488]	; 131f0 <Mat_VarReadNextInfo@plt+0x20ec>
   13004:	ldr	r3, [pc, #488]	; 131f4 <Mat_VarReadNextInfo@plt+0x20f0>
   13008:	add	r0, pc, r0
   1300c:	add	r1, pc, r1
   13010:	add	r2, pc, r2
   13014:	add	r3, pc, r3
   13018:	bl	10f00 <printf@plt>
   1301c:	mov	r0, #1
   13020:	strb	r0, [r5]
   13024:	ldr	r1, [r4, #36]	; 0x24
   13028:	ldr	r0, [pc, #456]	; 131f8 <Mat_VarReadNextInfo@plt+0x20f4>
   1302c:	add	r0, pc, r0
   13030:	bl	10f00 <printf@plt>
   13034:	ldr	r0, [r4, #4]
   13038:	cmp	r0, #1
   1303c:	blt	130e4 <Mat_VarReadNextInfo@plt+0x1fe0>
   13040:	ldr	r0, [r4, #32]
   13044:	ldr	r1, [r0]
   13048:	ldr	r0, [pc, #428]	; 131fc <Mat_VarReadNextInfo@plt+0x20f8>
   1304c:	add	r0, pc, r0
   13050:	bl	10f00 <printf@plt>
   13054:	ldr	r0, [r4, #4]
   13058:	cmp	r0, #2
   1305c:	blt	130d0 <Mat_VarReadNextInfo@plt+0x1fcc>
   13060:	ldr	r5, [pc, #408]	; 13200 <Mat_VarReadNextInfo@plt+0x20fc>
   13064:	vldr	d8, [pc, #340]	; 131c0 <Mat_VarReadNextInfo@plt+0x20bc>
   13068:	vmov.f64	d9, #112	; 0x3f800000  1.0
   1306c:	mov	r7, #1
   13070:	mov	r6, #0
   13074:	add	r5, pc, r5
   13078:	b	1308c <Mat_VarReadNextInfo@plt+0x1f88>
   1307c:	ldr	r0, [r4, #4]
   13080:	add	r7, r7, #1
   13084:	cmp	r7, r0
   13088:	bge	130d0 <Mat_VarReadNextInfo@plt+0x1fcc>
   1308c:	ldr	r0, [r4, #32]
   13090:	add	r0, r0, r7, lsl #2
   13094:	vldr	s0, [r0]
   13098:	vcvt.f64.u32	d0, s0
   1309c:	bl	10fc0 <log10@plt>
   130a0:	vrintp.f64	d16, d0
   130a4:	vadd.f64	d16, d16, d9
   130a8:	vcmpe.f64	d16, d8
   130ac:	vmrs	APSR_nzcv, fpscr
   130b0:	bpl	1307c <Mat_VarReadNextInfo@plt+0x1f78>
   130b4:	ldr	r0, [r4, #32]
   130b8:	mov	r1, r5
   130bc:	ldr	r2, [r0, r7, lsl #2]
   130c0:	add	r0, r8, r6
   130c4:	bl	110a4 <sprintf@plt>
   130c8:	add	r6, r0, r6
   130cc:	b	1307c <Mat_VarReadNextInfo@plt+0x1f78>
   130d0:	ldr	r0, [pc, #300]	; 13204 <Mat_VarReadNextInfo@plt+0x2100>
   130d4:	add	r1, sp, #8
   130d8:	add	r0, pc, r0
   130dc:	bl	10f00 <printf@plt>
   130e0:	b	130f0 <Mat_VarReadNextInfo@plt+0x1fec>
   130e4:	ldr	r0, [pc, #284]	; 13208 <Mat_VarReadNextInfo@plt+0x2104>
   130e8:	add	r0, pc, r0
   130ec:	bl	10f00 <printf@plt>
   130f0:	mov	r0, r4
   130f4:	bl	110d4 <Mat_VarGetSize@plt>
   130f8:	mov	r1, r0
   130fc:	ldr	r0, [pc, #264]	; 1320c <Mat_VarReadNextInfo@plt+0x2108>
   13100:	add	r0, pc, r0
   13104:	ldrb	r0, [r0]
   13108:	cmp	r0, #1
   1310c:	bne	13130 <Mat_VarReadNextInfo@plt+0x202c>
   13110:	cmp	r1, #1073741825	; 0x40000001
   13114:	bcc	13140 <Mat_VarReadNextInfo@plt+0x203c>
   13118:	vmov	s0, r1
   1311c:	vldr	d16, [pc, #180]	; 131d8 <Mat_VarReadNextInfo@plt+0x20d4>
   13120:	vcvt.f64.u32	d17, s0
   13124:	ldr	r0, [pc, #228]	; 13210 <Mat_VarReadNextInfo@plt+0x210c>
   13128:	add	r0, pc, r0
   1312c:	b	1317c <Mat_VarReadNextInfo@plt+0x2078>
   13130:	ldr	r0, [pc, #232]	; 13220 <Mat_VarReadNextInfo@plt+0x211c>
   13134:	add	r0, pc, r0
   13138:	bl	10f00 <printf@plt>
   1313c:	b	13188 <Mat_VarReadNextInfo@plt+0x2084>
   13140:	cmp	r1, #1048576	; 0x100000
   13144:	bls	13160 <Mat_VarReadNextInfo@plt+0x205c>
   13148:	vmov	s0, r1
   1314c:	vldr	d16, [pc, #124]	; 131d0 <Mat_VarReadNextInfo@plt+0x20cc>
   13150:	vcvt.f64.u32	d17, s0
   13154:	ldr	r0, [pc, #184]	; 13214 <Mat_VarReadNextInfo@plt+0x2110>
   13158:	add	r0, pc, r0
   1315c:	b	1317c <Mat_VarReadNextInfo@plt+0x2078>
   13160:	cmp	r1, #1024	; 0x400
   13164:	bls	131b0 <Mat_VarReadNextInfo@plt+0x20ac>
   13168:	vmov	s0, r1
   1316c:	vldr	d16, [pc, #84]	; 131c8 <Mat_VarReadNextInfo@plt+0x20c4>
   13170:	vcvt.f64.u32	d17, s0
   13174:	ldr	r0, [pc, #156]	; 13218 <Mat_VarReadNextInfo@plt+0x2114>
   13178:	add	r0, pc, r0
   1317c:	vmul.f64	d16, d17, d16
   13180:	vmov	r2, r3, d16
   13184:	bl	10f00 <printf@plt>
   13188:	ldr	r0, [r4, #16]
   1318c:	ldr	r1, [pc, #144]	; 13224 <Mat_VarReadNextInfo@plt+0x2120>
   13190:	add	r1, pc, r1
   13194:	ldr	r1, [r1, r0, lsl #2]
   13198:	ldr	r0, [pc, #136]	; 13228 <Mat_VarReadNextInfo@plt+0x2124>
   1319c:	add	r0, pc, r0
   131a0:	bl	10f00 <printf@plt>
   131a4:	sub	sp, fp, #40	; 0x28
   131a8:	vpop	{d8-d9}
   131ac:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   131b0:	ldr	r0, [pc, #100]	; 1321c <Mat_VarReadNextInfo@plt+0x2118>
   131b4:	add	r0, pc, r0
   131b8:	b	13138 <Mat_VarReadNextInfo@plt+0x2034>
   131bc:	nop	{0}
   131c0:	andeq	r0, r0, r0
   131c4:	submi	r0, r0, r0
   131c8:	andeq	r0, r0, r0
   131cc:	svccc	0x00500000
   131d0:	andeq	r0, r0, r0
   131d4:	cdpcc	0, 11, cr0, cr0, cr0, {0}
   131d8:	andeq	r0, r0, r0
   131dc:	cdpcc	0, 1, cr0, cr0, cr0, {0}
   131e0:	andeq	r3, r1, r0, lsl #4
   131e4:	andeq	r1, r0, r6, lsl sp
   131e8:	andeq	r1, r0, r6, asr #25
   131ec:	andeq	r1, r0, sl, ror #25
   131f0:	andeq	r1, r0, fp, ror #25
   131f4:	andeq	r1, r0, ip, ror #25
   131f8:	andeq	r1, r0, r0, ror #25
   131fc:	andeq	r1, r0, r6, asr #25
   13200:	andeq	r1, r0, r3, lsr #25
   13204:	andeq	r1, r0, r4, asr #24
   13208:	andeq	r1, r0, sl, lsr ip
   1320c:	ldrdeq	r3, [r1], -r4
   13210:	andeq	r1, r0, pc, lsl #24
   13214:	andeq	r1, r0, r8, ror #23
   13218:	ldrdeq	r1, [r0], -r1	; <UNPREDICTABLE>
   1321c:	muleq	r0, lr, fp
   13220:	andeq	r1, r0, r6, lsr #24
   13224:	andeq	r2, r1, ip, lsl #26
   13228:	andeq	r1, r0, r6, asr #23
   1322c:	push	{r4, r5, r6, sl, fp, lr}
   13230:	add	fp, sp, #16
   13234:	mov	r1, #40	; 0x28
   13238:	mov	r4, r0
   1323c:	bl	11014 <strchr@plt>
   13240:	mov	r5, r0
   13244:	mov	r0, r4
   13248:	mov	r1, #41	; 0x29
   1324c:	bl	11014 <strchr@plt>
   13250:	cmp	r0, #0
   13254:	beq	13270 <Mat_VarReadNextInfo@plt+0x216c>
   13258:	cmp	r5, #0
   1325c:	beq	1326c <Mat_VarReadNextInfo@plt+0x2168>
   13260:	cmp	r0, r5
   13264:	movcc	r5, r0
   13268:	b	13270 <Mat_VarReadNextInfo@plt+0x216c>
   1326c:	mov	r5, r0
   13270:	mov	r0, r4
   13274:	mov	r1, #123	; 0x7b
   13278:	bl	11014 <strchr@plt>
   1327c:	cmp	r0, #0
   13280:	beq	1329c <Mat_VarReadNextInfo@plt+0x2198>
   13284:	mov	r6, r0
   13288:	cmp	r5, #0
   1328c:	beq	132a0 <Mat_VarReadNextInfo@plt+0x219c>
   13290:	cmp	r6, r5
   13294:	movcs	r6, r5
   13298:	b	132a0 <Mat_VarReadNextInfo@plt+0x219c>
   1329c:	mov	r6, r5
   132a0:	mov	r0, r4
   132a4:	mov	r1, #125	; 0x7d
   132a8:	bl	11014 <strchr@plt>
   132ac:	cmp	r0, #0
   132b0:	beq	132cc <Mat_VarReadNextInfo@plt+0x21c8>
   132b4:	mov	r5, r0
   132b8:	cmp	r6, #0
   132bc:	beq	132d0 <Mat_VarReadNextInfo@plt+0x21cc>
   132c0:	cmp	r5, r6
   132c4:	movcs	r5, r6
   132c8:	b	132d0 <Mat_VarReadNextInfo@plt+0x21cc>
   132cc:	mov	r5, r6
   132d0:	mov	r0, r4
   132d4:	mov	r1, #46	; 0x2e
   132d8:	bl	11014 <strchr@plt>
   132dc:	cmp	r0, #0
   132e0:	beq	132f8 <Mat_VarReadNextInfo@plt+0x21f4>
   132e4:	cmp	r5, #0
   132e8:	beq	132fc <Mat_VarReadNextInfo@plt+0x21f8>
   132ec:	cmp	r0, r5
   132f0:	movcs	r0, r5
   132f4:	b	132fc <Mat_VarReadNextInfo@plt+0x21f8>
   132f8:	mov	r0, r5
   132fc:	cmp	r0, #0
   13300:	movne	r4, r0
   13304:	mov	r0, r4
   13308:	pop	{r4, r5, r6, sl, fp, pc}
   1330c:	sub	r0, r0, #1
   13310:	cmp	r0, #12
   13314:	bxhi	lr
   13318:	add	r2, pc, #4
   1331c:	ldr	r0, [r2, r0, lsl #2]
   13320:	add	pc, r2, r0
   13324:	andeq	r0, r0, r4, lsr r0
   13328:	andeq	r0, r0, r4, asr #32
   1332c:	andeq	r0, r0, r4, asr r0
   13330:	andeq	r0, r0, r4, rrx
   13334:	andeq	r0, r0, r4, ror r0
   13338:	andeq	r0, r0, r4, lsl #1
   1333c:	muleq	r0, r4, r0
   13340:	ldrdeq	r0, [r0], -r4
   13344:	andeq	r0, r0, r0, lsr #1
   13348:	ldrdeq	r0, [r0], -r4
   1334c:	ldrdeq	r0, [r0], -r4
   13350:	strheq	r0, [r0], -r4
   13354:	andeq	r0, r0, r4, asr #1
   13358:	ldrsb	r1, [r1]
   1335c:	ldr	r0, [pc, #180]	; 13418 <Mat_VarReadNextInfo@plt+0x2314>
   13360:	add	r0, pc, r0
   13364:	b	10f00 <printf@plt>
   13368:	ldrb	r1, [r1]
   1336c:	ldr	r0, [pc, #168]	; 1341c <Mat_VarReadNextInfo@plt+0x2318>
   13370:	add	r0, pc, r0
   13374:	b	10f00 <printf@plt>
   13378:	ldrsh	r1, [r1]
   1337c:	ldr	r0, [pc, #140]	; 13410 <Mat_VarReadNextInfo@plt+0x230c>
   13380:	add	r0, pc, r0
   13384:	b	10f00 <printf@plt>
   13388:	ldrh	r1, [r1]
   1338c:	ldr	r0, [pc, #128]	; 13414 <Mat_VarReadNextInfo@plt+0x2310>
   13390:	add	r0, pc, r0
   13394:	b	10f00 <printf@plt>
   13398:	ldr	r1, [r1]
   1339c:	ldr	r0, [pc, #100]	; 13408 <Mat_VarReadNextInfo@plt+0x2304>
   133a0:	add	r0, pc, r0
   133a4:	b	10f00 <printf@plt>
   133a8:	ldr	r1, [r1]
   133ac:	ldr	r0, [pc, #88]	; 1340c <Mat_VarReadNextInfo@plt+0x2308>
   133b0:	add	r0, pc, r0
   133b4:	b	10f00 <printf@plt>
   133b8:	vldr	s0, [r1]
   133bc:	vcvt.f64.f32	d16, s0
   133c0:	b	133c8 <Mat_VarReadNextInfo@plt+0x22c4>
   133c4:	vldr	d16, [r1]
   133c8:	ldr	r0, [pc, #44]	; 133fc <Mat_VarReadNextInfo@plt+0x22f8>
   133cc:	vmov	r2, r3, d16
   133d0:	add	r0, pc, r0
   133d4:	b	10f00 <printf@plt>
   133d8:	ldrd	r2, [r1]
   133dc:	ldr	r0, [pc, #28]	; 13400 <Mat_VarReadNextInfo@plt+0x22fc>
   133e0:	add	r0, pc, r0
   133e4:	b	10f00 <printf@plt>
   133e8:	ldrd	r2, [r1]
   133ec:	ldr	r0, [pc, #16]	; 13404 <Mat_VarReadNextInfo@plt+0x2300>
   133f0:	add	r0, pc, r0
   133f4:	b	10f00 <printf@plt>
   133f8:	bx	lr
   133fc:	andeq	r1, r0, r3, lsr #17
   13400:	muleq	r0, r6, r8
   13404:	andeq	r1, r0, fp, lsl #17
   13408:	andeq	r1, r0, r9, lsl #17
   1340c:	ldrdeq	r1, [r0], -r0
   13410:	andeq	r1, r0, r3, lsl #18
   13414:	strdeq	r1, [r0], -r7
   13418:	andeq	r1, r0, fp, lsr #18
   1341c:	andeq	r1, r0, r0, lsr #18
   13420:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13424:	add	fp, sp, #28
   13428:	sub	sp, sp, #12
   1342c:	str	r3, [sp, #4]
   13430:	str	r2, [sp, #8]
   13434:	mov	r6, r1
   13438:	mov	r7, r0
   1343c:	add	r5, r0, #1
   13440:	mov	r9, #0
   13444:	mov	sl, #0
   13448:	ldr	r4, [pc, #552]	; 13678 <Mat_VarReadNextInfo@plt+0x2574>
   1344c:	add	r4, pc, r4
   13450:	b	13488 <Mat_VarReadNextInfo@plt+0x2384>
   13454:	mov	r0, r5
   13458:	mov	r1, #0
   1345c:	mov	r2, #10
   13460:	bl	10ef4 <strtol@plt>
   13464:	cmp	r9, #2
   13468:	cmpne	r9, #1
   1346c:	bne	135b4 <Mat_VarReadNextInfo@plt+0x24b0>
   13470:	ldr	r1, [fp, #8]
   13474:	str	r0, [r1, sl, lsl #2]
   13478:	add	r5, r8, #2
   1347c:	add	r9, r9, #1
   13480:	cmp	r6, r7
   13484:	beq	13670 <Mat_VarReadNextInfo@plt+0x256c>
   13488:	mov	r8, r7
   1348c:	ldrb	r0, [r7, #1]!
   13490:	cmp	r0, #57	; 0x39
   13494:	bgt	134f0 <Mat_VarReadNextInfo@plt+0x23ec>
   13498:	cmp	r0, #41	; 0x29
   1349c:	beq	13500 <Mat_VarReadNextInfo@plt+0x23fc>
   134a0:	cmp	r0, #44	; 0x2c
   134a4:	bne	13480 <Mat_VarReadNextInfo@plt+0x237c>
   134a8:	cmp	r9, #0
   134ac:	beq	135cc <Mat_VarReadNextInfo@plt+0x24c8>
   134b0:	cmp	r9, #1
   134b4:	beq	134c0 <Mat_VarReadNextInfo@plt+0x23bc>
   134b8:	cmp	r9, #2
   134bc:	bne	1365c <Mat_VarReadNextInfo@plt+0x2558>
   134c0:	mov	r0, #0
   134c4:	mov	r1, r4
   134c8:	strb	r0, [r8, #1]
   134cc:	mov	r0, r5
   134d0:	bl	10edc <strcmp@plt>
   134d4:	cmp	r0, #0
   134d8:	beq	13610 <Mat_VarReadNextInfo@plt+0x250c>
   134dc:	mov	r0, r5
   134e0:	mov	r1, #0
   134e4:	mov	r2, #10
   134e8:	bl	10ef4 <strtol@plt>
   134ec:	b	13654 <Mat_VarReadNextInfo@plt+0x2550>
   134f0:	cmp	r0, #58	; 0x3a
   134f4:	beq	13548 <Mat_VarReadNextInfo@plt+0x2444>
   134f8:	cmp	r0, #125	; 0x7d
   134fc:	bne	13480 <Mat_VarReadNextInfo@plt+0x237c>
   13500:	mov	r0, #0
   13504:	mov	r1, r4
   13508:	strb	r0, [r8, #1]
   1350c:	mov	r0, r5
   13510:	bl	10edc <strcmp@plt>
   13514:	cmp	r0, #0
   13518:	bne	13454 <Mat_VarReadNextInfo@plt+0x2350>
   1351c:	cmp	r9, #2
   13520:	cmpne	r9, #1
   13524:	beq	135a4 <Mat_VarReadNextInfo@plt+0x24a0>
   13528:	cmp	r9, #0
   1352c:	bne	13628 <Mat_VarReadNextInfo@plt+0x2524>
   13530:	ldr	r0, [sp, #8]
   13534:	mvn	r1, #0
   13538:	str	r1, [r0, sl, lsl #2]
   1353c:	ldr	r0, [fp, #8]
   13540:	str	r1, [r0, sl, lsl #2]
   13544:	b	13478 <Mat_VarReadNextInfo@plt+0x2374>
   13548:	mov	r0, #0
   1354c:	mov	r1, r4
   13550:	strb	r0, [r8, #1]
   13554:	mov	r0, r5
   13558:	bl	10edc <strcmp@plt>
   1355c:	cmp	r0, #0
   13560:	beq	13598 <Mat_VarReadNextInfo@plt+0x2494>
   13564:	mov	r0, r5
   13568:	mov	r1, #0
   1356c:	mov	r2, #10
   13570:	bl	10ef4 <strtol@plt>
   13574:	cmp	r9, #2
   13578:	beq	13470 <Mat_VarReadNextInfo@plt+0x236c>
   1357c:	cmp	r9, #1
   13580:	beq	13608 <Mat_VarReadNextInfo@plt+0x2504>
   13584:	cmp	r9, #0
   13588:	bne	13628 <Mat_VarReadNextInfo@plt+0x2524>
   1358c:	ldr	r1, [sp, #8]
   13590:	sub	r0, r0, #1
   13594:	b	13474 <Mat_VarReadNextInfo@plt+0x2370>
   13598:	cmp	r9, #2
   1359c:	cmpne	r9, #1
   135a0:	bne	13618 <Mat_VarReadNextInfo@plt+0x2514>
   135a4:	ldr	r0, [fp, #8]
   135a8:	mvn	r1, #0
   135ac:	str	r1, [r0, sl, lsl #2]
   135b0:	b	13478 <Mat_VarReadNextInfo@plt+0x2374>
   135b4:	cmp	r9, #0
   135b8:	bne	13628 <Mat_VarReadNextInfo@plt+0x2524>
   135bc:	ldr	r2, [sp, #8]
   135c0:	sub	r1, r0, #1
   135c4:	str	r1, [r2, sl, lsl #2]
   135c8:	b	13470 <Mat_VarReadNextInfo@plt+0x236c>
   135cc:	mov	r0, #0
   135d0:	mov	r1, r4
   135d4:	strb	r0, [r8, #1]
   135d8:	mov	r0, r5
   135dc:	bl	10edc <strcmp@plt>
   135e0:	cmp	r0, #0
   135e4:	beq	13648 <Mat_VarReadNextInfo@plt+0x2544>
   135e8:	mov	r0, r5
   135ec:	mov	r1, #0
   135f0:	mov	r2, #10
   135f4:	bl	10ef4 <strtol@plt>
   135f8:	ldr	r2, [sp, #8]
   135fc:	sub	r1, r0, #1
   13600:	str	r1, [r2, sl, lsl #2]
   13604:	b	13654 <Mat_VarReadNextInfo@plt+0x2550>
   13608:	ldr	r1, [sp, #4]
   1360c:	b	13474 <Mat_VarReadNextInfo@plt+0x2370>
   13610:	mvn	r0, #0
   13614:	b	13654 <Mat_VarReadNextInfo@plt+0x2550>
   13618:	cmp	r9, #0
   1361c:	bne	13628 <Mat_VarReadNextInfo@plt+0x2524>
   13620:	ldr	r0, [sp, #8]
   13624:	b	135a8 <Mat_VarReadNextInfo@plt+0x24a4>
   13628:	ldr	r0, [pc, #76]	; 1367c <Mat_VarReadNextInfo@plt+0x2578>
   1362c:	add	r2, sl, #1
   13630:	ldr	r0, [pc, r0]
   13634:	ldr	r0, [r0]
   13638:	ldr	r1, [pc, #64]	; 13680 <Mat_VarReadNextInfo@plt+0x257c>
   1363c:	add	r1, pc, r1
   13640:	bl	1102c <fprintf@plt>
   13644:	b	13478 <Mat_VarReadNextInfo@plt+0x2374>
   13648:	ldr	r1, [sp, #8]
   1364c:	mvn	r0, #0
   13650:	str	r0, [r1, sl, lsl #2]
   13654:	ldr	r1, [fp, #8]
   13658:	str	r0, [r1, sl, lsl #2]
   1365c:	add	r5, r8, #2
   13660:	add	sl, sl, #1
   13664:	mov	r9, #0
   13668:	cmp	r6, r7
   1366c:	bne	13488 <Mat_VarReadNextInfo@plt+0x2384>
   13670:	sub	sp, fp, #28
   13674:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13678:	andeq	r1, r0, r7, asr sp
   1367c:	andeq	r2, r1, r8, lsr #21
   13680:	andeq	r1, r0, fp, ror #22
   13684:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13688:	add	fp, sp, #28
   1368c:	sub	sp, sp, #12
   13690:	ldr	ip, [fp, #8]
   13694:	cmp	r0, #1
   13698:	mov	r8, #0
   1369c:	ldr	lr, [ip, #4]
   136a0:	cmpne	lr, r0
   136a4:	bne	13a6c <Mat_VarReadNextInfo@plt+0x2968>
   136a8:	cmp	r0, #1
   136ac:	bne	136d0 <Mat_VarReadNextInfo@plt+0x25cc>
   136b0:	cmp	lr, #1
   136b4:	blt	137f4 <Mat_VarReadNextInfo@plt+0x26f0>
   136b8:	ldr	r6, [ip, #32]
   136bc:	cmp	lr, #4
   136c0:	bcs	13804 <Mat_VarReadNextInfo@plt+0x2700>
   136c4:	mov	r9, #0
   136c8:	mov	r4, #1
   136cc:	b	13904 <Mat_VarReadNextInfo@plt+0x2800>
   136d0:	blt	137fc <Mat_VarReadNextInfo@plt+0x26f8>
   136d4:	mov	lr, #0
   136d8:	mov	r9, #1
   136dc:	mov	r8, #1
   136e0:	mov	r4, #0
   136e4:	b	1370c <Mat_VarReadNextInfo@plt+0x2608>
   136e8:	str	r5, [r3, r4, lsl #2]
   136ec:	ldr	r5, [r1, r4, lsl #2]
   136f0:	cmn	r5, #1
   136f4:	strle	lr, [r1, r4, lsl #2]
   136f8:	ldr	r5, [r3, r4, lsl #2]
   136fc:	add	r4, r4, #1
   13700:	cmp	r0, r4
   13704:	mul	r8, r5, r8
   13708:	beq	13a6c <Mat_VarReadNextInfo@plt+0x2968>
   1370c:	ldr	r7, [r2, r4, lsl #2]
   13710:	cmp	r7, #0
   13714:	ble	13834 <Mat_VarReadNextInfo@plt+0x2730>
   13718:	ldr	r6, [r3, r4, lsl #2]
   1371c:	cmn	r6, #1
   13720:	beq	13768 <Mat_VarReadNextInfo@plt+0x2664>
   13724:	cmp	r6, #0
   13728:	bmi	13774 <Mat_VarReadNextInfo@plt+0x2670>
   1372c:	ldr	r5, [ip, #32]
   13730:	ldr	r5, [r5, r4, lsl #2]
   13734:	cmp	r6, r5
   13738:	bhi	139d8 <Mat_VarReadNextInfo@plt+0x28d4>
   1373c:	ldr	sl, [r1, r4, lsl #2]
   13740:	cmp	sl, r5
   13744:	bcs	1385c <Mat_VarReadNextInfo@plt+0x2758>
   13748:	cmp	r6, #1
   1374c:	cmpge	sl, r6
   13750:	bgt	1385c <Mat_VarReadNextInfo@plt+0x2758>
   13754:	add	r5, sl, #1
   13758:	cmp	r6, r5
   1375c:	bne	137a4 <Mat_VarReadNextInfo@plt+0x26a0>
   13760:	str	r9, [r3, r4, lsl #2]
   13764:	b	136f8 <Mat_VarReadNextInfo@plt+0x25f4>
   13768:	ldr	r5, [r1, r4, lsl #2]
   1376c:	cmn	r5, #1
   13770:	beq	137dc <Mat_VarReadNextInfo@plt+0x26d8>
   13774:	ldr	r5, [ip, #32]
   13778:	cmp	r7, #1
   1377c:	ldr	r5, [r5, r4, lsl #2]
   13780:	beq	136e8 <Mat_VarReadNextInfo@plt+0x25e4>
   13784:	ldr	r6, [r1, r4, lsl #2]
   13788:	vmov	s0, r7
   1378c:	mvn	r6, r6
   13790:	add	r5, r5, r6
   13794:	vcvt.f64.s32	d16, s0
   13798:	vmov	s0, r5
   1379c:	vcvt.f64.u32	d17, s0
   137a0:	b	137c4 <Mat_VarReadNextInfo@plt+0x26c0>
   137a4:	cmp	r6, #1
   137a8:	blt	136f8 <Mat_VarReadNextInfo@plt+0x25f4>
   137ac:	vmov	s0, r7
   137b0:	mvn	r5, sl
   137b4:	add	r5, r6, r5
   137b8:	vcvt.f64.s32	d16, s0
   137bc:	vmov	s0, r5
   137c0:	vcvt.f64.s32	d17, s0
   137c4:	vdiv.f64	d16, d17, d16
   137c8:	vcvtm.s32.f64	s0, d16
   137cc:	vmov	r5, s0
   137d0:	add	r5, r5, #1
   137d4:	str	r5, [r3, r4, lsl #2]
   137d8:	b	136f8 <Mat_VarReadNextInfo@plt+0x25f4>
   137dc:	str	r9, [r3, r4, lsl #2]
   137e0:	ldr	r5, [ip, #32]
   137e4:	ldr	r5, [r5, r4, lsl #2]
   137e8:	sub	r5, r5, #1
   137ec:	str	r5, [r1, r4, lsl #2]
   137f0:	b	136f8 <Mat_VarReadNextInfo@plt+0x25f4>
   137f4:	mov	r4, #1
   137f8:	b	1391c <Mat_VarReadNextInfo@plt+0x2818>
   137fc:	mov	r8, #1
   13800:	b	13a6c <Mat_VarReadNextInfo@plt+0x2968>
   13804:	bic	r9, lr, #3
   13808:	mov	r0, #1
   1380c:	vmov.i32	q8, #1	; 0x00000001
   13810:	str	r6, [sp, #8]
   13814:	sub	r4, r9, #4
   13818:	add	r0, r0, r4, lsr #2
   1381c:	cmp	r4, #12
   13820:	and	r7, r0, #3
   13824:	str	r7, [sp, #4]
   13828:	bcs	13878 <Mat_VarReadNextInfo@plt+0x2774>
   1382c:	mov	r7, #0
   13830:	b	138c4 <Mat_VarReadNextInfo@plt+0x27c0>
   13834:	ldr	r0, [pc, #596]	; 13a90 <Mat_VarReadNextInfo@plt+0x298c>
   13838:	mov	r1, #23
   1383c:	mov	r2, #1
   13840:	ldr	r0, [pc, r0]
   13844:	ldr	r3, [r0]
   13848:	ldr	r0, [pc, #580]	; 13a94 <Mat_VarReadNextInfo@plt+0x2990>
   1384c:	add	r0, pc, r0
   13850:	bl	10f84 <fwrite@plt>
   13854:	mov	r8, #0
   13858:	b	13a6c <Mat_VarReadNextInfo@plt+0x2968>
   1385c:	ldr	r0, [pc, #572]	; 13aa0 <Mat_VarReadNextInfo@plt+0x299c>
   13860:	add	r2, r4, #1
   13864:	ldr	r0, [pc, r0]
   13868:	ldr	r0, [r0]
   1386c:	ldr	r1, [pc, #560]	; 13aa4 <Mat_VarReadNextInfo@plt+0x29a0>
   13870:	add	r1, pc, r1
   13874:	b	139f0 <Mat_VarReadNextInfo@plt+0x28ec>
   13878:	sub	r0, r0, r7
   1387c:	mov	r7, #0
   13880:	mov	sl, #64	; 0x40
   13884:	mov	r4, r6
   13888:	vld1.32	{d18-d19}, [r6], sl
   1388c:	add	r5, r4, #16
   13890:	add	ip, r4, #32
   13894:	subs	r0, r0, #4
   13898:	add	r7, r7, #16
   1389c:	vld1.32	{d20-d21}, [r5]
   138a0:	add	r5, r4, #48	; 0x30
   138a4:	mov	r4, r6
   138a8:	vmul.i32	q8, q9, q8
   138ac:	vld1.32	{d18-d19}, [ip]
   138b0:	vmul.i32	q8, q10, q8
   138b4:	vld1.32	{d20-d21}, [r5]
   138b8:	vmul.i32	q8, q9, q8
   138bc:	vmul.i32	q8, q10, q8
   138c0:	bne	13888 <Mat_VarReadNextInfo@plt+0x2784>
   138c4:	ldr	r5, [sp, #4]
   138c8:	ldr	r6, [sp, #8]
   138cc:	cmp	r5, #0
   138d0:	beq	138ec <Mat_VarReadNextInfo@plt+0x27e8>
   138d4:	add	r0, r6, r7, lsl #2
   138d8:	rsb	r4, r5, #0
   138dc:	vld1.32	{d18-d19}, [r0]!
   138e0:	adds	r4, r4, #1
   138e4:	vmul.i32	q8, q9, q8
   138e8:	bcc	138dc <Mat_VarReadNextInfo@plt+0x27d8>
   138ec:	vext.8	q9, q8, q8, #8
   138f0:	cmp	lr, r9
   138f4:	vmul.i32	q0, q8, q9
   138f8:	vmul.i32	q8, q0, d0[1]
   138fc:	vmov.32	r4, d16[0]
   13900:	beq	1391c <Mat_VarReadNextInfo@plt+0x2818>
   13904:	add	r0, r6, r9, lsl #2
   13908:	sub	r7, lr, r9
   1390c:	ldr	r6, [r0], #4
   13910:	subs	r7, r7, #1
   13914:	mul	r4, r6, r4
   13918:	bne	1390c <Mat_VarReadNextInfo@plt+0x2808>
   1391c:	ldr	r0, [r2]
   13920:	cmp	r0, #0
   13924:	ble	13a30 <Mat_VarReadNextInfo@plt+0x292c>
   13928:	ldr	r7, [r3]
   1392c:	cmp	r7, r4
   13930:	bgt	13a4c <Mat_VarReadNextInfo@plt+0x2948>
   13934:	ldr	r6, [r1]
   13938:	cmp	r6, r4
   1393c:	bge	139bc <Mat_VarReadNextInfo@plt+0x28b8>
   13940:	cmp	r7, #1
   13944:	cmpge	r6, r7
   13948:	bgt	139bc <Mat_VarReadNextInfo@plt+0x28b8>
   1394c:	cmn	r7, #1
   13950:	beq	1397c <Mat_VarReadNextInfo@plt+0x2878>
   13954:	cmp	r7, #1
   13958:	blt	139b4 <Mat_VarReadNextInfo@plt+0x28b0>
   1395c:	vmov	s0, r0
   13960:	mvn	r1, r6
   13964:	add	r0, r7, r1
   13968:	vcvt.f64.s32	d16, s0
   1396c:	vmov	s0, r0
   13970:	vcvt.f64.s32	d17, s0
   13974:	vdiv.f64	d16, d17, d16
   13978:	b	13a18 <Mat_VarReadNextInfo@plt+0x2914>
   1397c:	cmn	r6, #1
   13980:	beq	139a4 <Mat_VarReadNextInfo@plt+0x28a0>
   13984:	str	r4, [r3]
   13988:	cmp	r0, #1
   1398c:	ldr	r7, [r1]
   13990:	bne	139fc <Mat_VarReadNextInfo@plt+0x28f8>
   13994:	cmn	r7, #1
   13998:	bgt	139b4 <Mat_VarReadNextInfo@plt+0x28b0>
   1399c:	mov	r0, #0
   139a0:	b	139b0 <Mat_VarReadNextInfo@plt+0x28ac>
   139a4:	mov	r0, #1
   139a8:	str	r0, [r3]
   139ac:	sub	r0, r4, #1
   139b0:	str	r0, [r1]
   139b4:	ldr	r8, [r3]
   139b8:	b	13a6c <Mat_VarReadNextInfo@plt+0x2968>
   139bc:	ldr	r0, [pc, #196]	; 13a88 <Mat_VarReadNextInfo@plt+0x2984>
   139c0:	mov	r1, #18
   139c4:	ldr	r0, [pc, r0]
   139c8:	ldr	r3, [r0]
   139cc:	ldr	r0, [pc, #184]	; 13a8c <Mat_VarReadNextInfo@plt+0x2988>
   139d0:	add	r0, pc, r0
   139d4:	b	13a64 <Mat_VarReadNextInfo@plt+0x2960>
   139d8:	ldr	r0, [pc, #184]	; 13a98 <Mat_VarReadNextInfo@plt+0x2994>
   139dc:	add	r2, r4, #1
   139e0:	ldr	r0, [pc, r0]
   139e4:	ldr	r0, [r0]
   139e8:	ldr	r1, [pc, #172]	; 13a9c <Mat_VarReadNextInfo@plt+0x2998>
   139ec:	add	r1, pc, r1
   139f0:	bl	1102c <fprintf@plt>
   139f4:	mov	r8, #0
   139f8:	b	13a6c <Mat_VarReadNextInfo@plt+0x2968>
   139fc:	mvn	r0, r7
   13a00:	vldr	s0, [r2]
   13a04:	add	r0, r4, r0
   13a08:	vmov	s2, r0
   13a0c:	vcvt.f64.s32	d16, s2
   13a10:	vcvt.f64.s32	d17, s0
   13a14:	vdiv.f64	d16, d16, d17
   13a18:	vcvtm.s32.f64	s0, d16
   13a1c:	vmov	r0, s0
   13a20:	add	r0, r0, #1
   13a24:	str	r0, [r3]
   13a28:	ldr	r8, [r3]
   13a2c:	b	13a6c <Mat_VarReadNextInfo@plt+0x2968>
   13a30:	ldr	r0, [pc, #64]	; 13a78 <Mat_VarReadNextInfo@plt+0x2974>
   13a34:	mov	r1, #23
   13a38:	ldr	r0, [pc, r0]
   13a3c:	ldr	r3, [r0]
   13a40:	ldr	r0, [pc, #52]	; 13a7c <Mat_VarReadNextInfo@plt+0x2978>
   13a44:	add	r0, pc, r0
   13a48:	b	13a64 <Mat_VarReadNextInfo@plt+0x2960>
   13a4c:	ldr	r0, [pc, #44]	; 13a80 <Mat_VarReadNextInfo@plt+0x297c>
   13a50:	mov	r1, #17
   13a54:	ldr	r0, [pc, r0]
   13a58:	ldr	r3, [r0]
   13a5c:	ldr	r0, [pc, #32]	; 13a84 <Mat_VarReadNextInfo@plt+0x2980>
   13a60:	add	r0, pc, r0
   13a64:	mov	r2, #1
   13a68:	bl	10f84 <fwrite@plt>
   13a6c:	mov	r0, r8
   13a70:	sub	sp, fp, #28
   13a74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13a78:	andeq	r2, r1, r0, lsr #13
   13a7c:	andeq	r1, r0, sp, ror r7
   13a80:	andeq	r2, r1, r4, lsl #13
   13a84:	andeq	r1, r0, r9, ror r7
   13a88:	andeq	r2, r1, r4, lsl r7
   13a8c:	andeq	r1, r0, fp, lsl r8
   13a90:	muleq	r1, r8, r8
   13a94:	andeq	r1, r0, r5, ror r9
   13a98:	strdeq	r2, [r1], -r8
   13a9c:	andeq	r1, r0, r2, lsl r8
   13aa0:	andeq	r2, r1, r4, ror r8
   13aa4:			; <UNDEFINED> instruction: 0x000019b0

00013aa8 <getopt@@Base>:
   13aa8:	push	{fp, lr}
   13aac:	mov	fp, sp
   13ab0:	sub	sp, sp, #8
   13ab4:	mov	r3, #0
   13ab8:	str	r3, [sp]
   13abc:	str	r3, [sp, #4]
   13ac0:	mov	r3, #0
   13ac4:	bl	13ad0 <getopt@@Base+0x28>
   13ac8:	mov	sp, fp
   13acc:	pop	{fp, pc}
   13ad0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ad4:	add	fp, sp, #28
   13ad8:	sub	sp, sp, #52	; 0x34
   13adc:	cmp	r2, #0
   13ae0:	beq	142a4 <getopt@@Base+0x7fc>
   13ae4:	str	r3, [sp, #20]
   13ae8:	mov	r9, r0
   13aec:	ldr	r5, [fp, #12]
   13af0:	mov	r6, r2
   13af4:	mov	r4, r1
   13af8:	ldr	r0, [pc, #2452]	; 14494 <getopt@@Base+0x9ec>
   13afc:	add	r0, pc, r0
   13b00:	bl	10f9c <getenv@plt>
   13b04:	ldrb	r1, [r6]
   13b08:	cmp	r1, #45	; 0x2d
   13b0c:	bne	13b18 <getopt@@Base+0x70>
   13b10:	orr	r3, r5, #2
   13b14:	b	13b34 <getopt@@Base+0x8c>
   13b18:	bic	r3, r5, #1
   13b1c:	cmp	r1, #43	; 0x2b
   13b20:	moveq	r5, r3
   13b24:	cmp	r0, #0
   13b28:	movne	r5, r3
   13b2c:	cmp	r1, #43	; 0x2b
   13b30:	bne	13b3c <getopt@@Base+0x94>
   13b34:	add	r6, r6, #1
   13b38:	b	13b40 <getopt@@Base+0x98>
   13b3c:	mov	r3, r5
   13b40:	str	r6, [sp, #16]
   13b44:	str	r0, [sp, #8]
   13b48:	ldr	sl, [pc, #2376]	; 14498 <getopt@@Base+0x9f0>
   13b4c:	ldr	sl, [pc, sl]
   13b50:	ldr	r5, [sl]
   13b54:	ldr	ip, [pc, #2368]	; 1449c <getopt@@Base+0x9f4>
   13b58:	cmp	r5, #0
   13b5c:	add	ip, pc, ip
   13b60:	beq	13b8c <getopt@@Base+0xe4>
   13b64:	ldr	r1, [pc, #2364]	; 144a8 <getopt@@Base+0xa00>
   13b68:	mov	r0, #0
   13b6c:	ldr	r1, [pc, r1]
   13b70:	str	r0, [r1]
   13b74:	ldr	r1, [pc, #2352]	; 144ac <getopt@@Base+0xa04>
   13b78:	ldr	r1, [pc, r1]
   13b7c:	ldr	r1, [r1]
   13b80:	cmp	r1, #0
   13b84:	bne	13bb4 <getopt@@Base+0x10c>
   13b88:	b	13bcc <getopt@@Base+0x124>
   13b8c:	mov	r5, #1
   13b90:	mov	r1, #0
   13b94:	str	r5, [sl]
   13b98:	ldr	r0, [pc, #2304]	; 144a0 <getopt@@Base+0x9f8>
   13b9c:	ldr	r0, [pc, r0]
   13ba0:	str	r5, [r0]
   13ba4:	ldr	r0, [pc, #2296]	; 144a4 <getopt@@Base+0x9fc>
   13ba8:	ldr	r0, [pc, r0]
   13bac:	str	r1, [r0]
   13bb0:	mov	r1, #1
   13bb4:	mvn	r0, #0
   13bb8:	str	r0, [ip]
   13bbc:	ldr	r2, [pc, #2284]	; 144b0 <getopt@@Base+0xa08>
   13bc0:	add	r2, pc, r2
   13bc4:	str	r0, [r2]
   13bc8:	mov	r0, r1
   13bcc:	and	r1, r3, #2
   13bd0:	str	r3, [sp, #12]
   13bd4:	and	r2, r3, #1
   13bd8:	str	r1, [sp, #40]	; 0x28
   13bdc:	ldr	r6, [pc, #2256]	; 144b4 <getopt@@Base+0xa0c>
   13be0:	ldr	lr, [pc, #2256]	; 144b8 <getopt@@Base+0xa10>
   13be4:	str	r9, [sp, #28]
   13be8:	str	r2, [sp, #24]
   13bec:	add	r6, pc, r6
   13bf0:	add	lr, pc, lr
   13bf4:	cmp	r0, #0
   13bf8:	bne	13c7c <getopt@@Base+0x1d4>
   13bfc:	ldr	r1, [pc, #2232]	; 144bc <getopt@@Base+0xa14>
   13c00:	ldr	r1, [pc, r1]
   13c04:	ldrb	r7, [r1]
   13c08:	cmp	r7, #0
   13c0c:	beq	13c7c <getopt@@Base+0x1d4>
   13c10:	b	13fc0 <getopt@@Base+0x518>
   13c14:	ldr	r0, [pc, #2248]	; 144e4 <getopt@@Base+0xa3c>
   13c18:	mvn	r1, #0
   13c1c:	ldr	r5, [sp, #36]	; 0x24
   13c20:	add	r0, pc, r0
   13c24:	str	r1, [r0]
   13c28:	ldr	r0, [sp, #32]
   13c2c:	ldr	ip, [pc, #2228]	; 144e8 <getopt@@Base+0xa40>
   13c30:	add	r0, r0, r5
   13c34:	sub	r0, r0, r8
   13c38:	add	ip, pc, ip
   13c3c:	str	r0, [ip]
   13c40:	ldr	r6, [pc, #2212]	; 144ec <getopt@@Base+0xa44>
   13c44:	ldr	r6, [pc, r6]
   13c48:	ldr	r9, [sp, #28]
   13c4c:	mov	sl, r6
   13c50:	ldr	r6, [pc, #2200]	; 144f0 <getopt@@Base+0xa48>
   13c54:	ldr	r1, [pc, #2200]	; 144f4 <getopt@@Base+0xa4c>
   13c58:	ldr	r2, [sp, #24]
   13c5c:	add	r1, pc, r1
   13c60:	add	r6, pc, r6
   13c64:	mov	lr, r1
   13c68:	add	r5, r5, #1
   13c6c:	mov	r0, #0
   13c70:	str	r5, [sl]
   13c74:	cmp	r0, #0
   13c78:	beq	13bfc <getopt@@Base+0x154>
   13c7c:	ldr	r0, [pc, #2108]	; 144c0 <getopt@@Base+0xa18>
   13c80:	cmp	r5, r9
   13c84:	mov	r1, #0
   13c88:	ldr	r0, [pc, r0]
   13c8c:	str	r1, [r0]
   13c90:	bge	13e08 <getopt@@Base+0x360>
   13c94:	ldr	r3, [r4, r5, lsl #2]
   13c98:	str	r3, [r6]
   13c9c:	ldrb	r0, [r3]
   13ca0:	cmp	r0, #45	; 0x2d
   13ca4:	bne	13cb4 <getopt@@Base+0x20c>
   13ca8:	ldrb	r7, [r3, #1]
   13cac:	cmp	r7, #0
   13cb0:	bne	13f70 <getopt@@Base+0x4c8>
   13cb4:	ldr	r0, [sp, #40]	; 0x28
   13cb8:	str	lr, [r6]
   13cbc:	cmp	r0, #0
   13cc0:	bne	13f30 <getopt@@Base+0x488>
   13cc4:	cmp	r2, #0
   13cc8:	beq	142a4 <getopt@@Base+0x7fc>
   13ccc:	ldr	r0, [pc, #2056]	; 144dc <getopt@@Base+0xa34>
   13cd0:	ldr	r0, [pc, r0]
   13cd4:	cmn	r0, #1
   13cd8:	beq	13e00 <getopt@@Base+0x358>
   13cdc:	ldr	r8, [pc, #2044]	; 144e0 <getopt@@Base+0xa38>
   13ce0:	ldr	r8, [pc, r8]
   13ce4:	cmn	r8, #1
   13ce8:	beq	13c68 <getopt@@Base+0x1c0>
   13cec:	str	r0, [sp, #32]
   13cf0:	sub	lr, r5, r8
   13cf4:	sub	r0, r8, r0
   13cf8:	str	r5, [sp, #36]	; 0x24
   13cfc:	sdiv	r1, r0, lr
   13d00:	mov	r5, lr
   13d04:	mls	r1, r1, lr, r0
   13d08:	cmp	r1, #0
   13d0c:	beq	13d2c <getopt@@Base+0x284>
   13d10:	mov	r2, lr
   13d14:	mov	r5, r1
   13d18:	sdiv	r1, r2, r1
   13d1c:	mls	r1, r1, r5, r2
   13d20:	mov	r2, r5
   13d24:	cmp	r1, #0
   13d28:	bne	13d14 <getopt@@Base+0x26c>
   13d2c:	cmp	r5, #1
   13d30:	blt	13c14 <getopt@@Base+0x16c>
   13d34:	ldr	r1, [sp, #36]	; 0x24
   13d38:	ldr	r2, [sp, #32]
   13d3c:	rsb	r7, r0, #0
   13d40:	mov	ip, #0
   13d44:	sub	r1, r1, r2
   13d48:	sdiv	r9, r1, r5
   13d4c:	and	r1, r9, #1
   13d50:	str	r1, [fp, #-32]	; 0xffffffe0
   13d54:	sub	r1, r1, r9
   13d58:	str	r1, [fp, #-36]	; 0xffffffdc
   13d5c:	cmp	r9, #1
   13d60:	bge	13d78 <getopt@@Base+0x2d0>
   13d64:	add	ip, ip, #1
   13d68:	cmp	ip, r5
   13d6c:	beq	13c14 <getopt@@Base+0x16c>
   13d70:	cmp	r9, #1
   13d74:	blt	13d64 <getopt@@Base+0x2bc>
   13d78:	add	r2, ip, r8
   13d7c:	ldr	r0, [r4, r2, lsl #2]
   13d80:	bne	13d8c <getopt@@Base+0x2e4>
   13d84:	mov	r3, r2
   13d88:	b	13dd4 <getopt@@Base+0x32c>
   13d8c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   13d90:	mov	r3, r2
   13d94:	cmp	r3, r8
   13d98:	mov	r1, r7
   13d9c:	movlt	r1, lr
   13da0:	add	r1, r1, r3
   13da4:	ldr	sl, [r4, r1, lsl #2]
   13da8:	cmp	r1, r8
   13dac:	str	r0, [r4, r1, lsl #2]
   13db0:	mov	r0, r7
   13db4:	movlt	r0, lr
   13db8:	adds	r6, r6, #2
   13dbc:	add	r3, r0, r1
   13dc0:	str	sl, [r4, r2, lsl #2]
   13dc4:	ldr	r0, [r4, r3, lsl #2]
   13dc8:	str	sl, [r4, r3, lsl #2]
   13dcc:	str	r0, [r4, r2, lsl #2]
   13dd0:	bne	13d94 <getopt@@Base+0x2ec>
   13dd4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13dd8:	cmp	r1, #0
   13ddc:	beq	13d64 <getopt@@Base+0x2bc>
   13de0:	cmp	r3, r8
   13de4:	mov	r1, r7
   13de8:	movlt	r1, lr
   13dec:	add	r1, r1, r3
   13df0:	ldr	r3, [r4, r1, lsl #2]
   13df4:	str	r0, [r4, r1, lsl #2]
   13df8:	str	r3, [r4, r2, lsl #2]
   13dfc:	b	13d64 <getopt@@Base+0x2bc>
   13e00:	str	r5, [ip]
   13e04:	b	13c68 <getopt@@Base+0x1c0>
   13e08:	str	lr, [r6]
   13e0c:	ldr	r0, [pc, #1712]	; 144c4 <getopt@@Base+0xa1c>
   13e10:	ldr	r0, [pc, r0]
   13e14:	ldr	r1, [pc, #1708]	; 144c8 <getopt@@Base+0xa20>
   13e18:	ldr	r1, [pc, r1]
   13e1c:	cmn	r1, #1
   13e20:	beq	14024 <getopt@@Base+0x57c>
   13e24:	sub	r3, r5, r1
   13e28:	str	r0, [sp, #40]	; 0x28
   13e2c:	sub	r0, r1, r0
   13e30:	sdiv	r2, r0, r3
   13e34:	mov	sl, r3
   13e38:	mls	r2, r2, r3, r0
   13e3c:	cmp	r2, #0
   13e40:	beq	13e60 <getopt@@Base+0x3b8>
   13e44:	mov	r7, r3
   13e48:	mov	sl, r2
   13e4c:	sdiv	r2, r7, r2
   13e50:	mls	r2, r2, sl, r7
   13e54:	mov	r7, sl
   13e58:	cmp	r2, #0
   13e5c:	bne	13e48 <getopt@@Base+0x3a0>
   13e60:	cmp	sl, #1
   13e64:	blt	13f4c <getopt@@Base+0x4a4>
   13e68:	ldr	r2, [sp, #40]	; 0x28
   13e6c:	rsb	ip, r0, #0
   13e70:	sub	r2, r5, r2
   13e74:	mov	r5, #0
   13e78:	sdiv	r9, r2, sl
   13e7c:	and	r2, r9, #1
   13e80:	str	r2, [fp, #-32]	; 0xffffffe0
   13e84:	sub	r2, r2, r9
   13e88:	str	r2, [fp, #-36]	; 0xffffffdc
   13e8c:	cmp	r9, #1
   13e90:	bge	13ea8 <getopt@@Base+0x400>
   13e94:	add	r5, r5, #1
   13e98:	cmp	r5, sl
   13e9c:	beq	13f4c <getopt@@Base+0x4a4>
   13ea0:	cmp	r9, #1
   13ea4:	blt	13e94 <getopt@@Base+0x3ec>
   13ea8:	add	r7, r5, r1
   13eac:	ldr	r2, [r4, r7, lsl #2]
   13eb0:	bne	13ebc <getopt@@Base+0x414>
   13eb4:	mov	r6, r7
   13eb8:	b	13f04 <getopt@@Base+0x45c>
   13ebc:	ldr	lr, [fp, #-36]	; 0xffffffdc
   13ec0:	mov	r6, r7
   13ec4:	cmp	r6, r1
   13ec8:	mov	r0, ip
   13ecc:	movlt	r0, r3
   13ed0:	add	r0, r0, r6
   13ed4:	ldr	r8, [r4, r0, lsl #2]
   13ed8:	cmp	r0, r1
   13edc:	str	r2, [r4, r0, lsl #2]
   13ee0:	mov	r2, ip
   13ee4:	movlt	r2, r3
   13ee8:	adds	lr, lr, #2
   13eec:	add	r6, r2, r0
   13ef0:	str	r8, [r4, r7, lsl #2]
   13ef4:	ldr	r2, [r4, r6, lsl #2]
   13ef8:	str	r8, [r4, r6, lsl #2]
   13efc:	str	r2, [r4, r7, lsl #2]
   13f00:	bne	13ec4 <getopt@@Base+0x41c>
   13f04:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13f08:	cmp	r0, #0
   13f0c:	beq	13e94 <getopt@@Base+0x3ec>
   13f10:	cmp	r6, r1
   13f14:	mov	r0, ip
   13f18:	movlt	r0, r3
   13f1c:	add	r0, r0, r6
   13f20:	ldr	r6, [r4, r0, lsl #2]
   13f24:	str	r2, [r4, r0, lsl #2]
   13f28:	str	r6, [r4, r7, lsl #2]
   13f2c:	b	13e94 <getopt@@Base+0x3ec>
   13f30:	ldr	r0, [pc, #1440]	; 144d8 <getopt@@Base+0xa30>
   13f34:	mov	r7, #1
   13f38:	ldr	r0, [pc, r0]
   13f3c:	str	r3, [r0]
   13f40:	add	r0, r5, #1
   13f44:	str	r0, [sl]
   13f48:	b	142a8 <getopt@@Base+0x800>
   13f4c:	ldr	r0, [sp, #40]	; 0x28
   13f50:	ldr	r6, [pc, #1396]	; 144cc <getopt@@Base+0xa24>
   13f54:	ldr	r6, [pc, r6]
   13f58:	ldr	ip, [pc, #1392]	; 144d0 <getopt@@Base+0xa28>
   13f5c:	add	r0, r3, r0
   13f60:	mov	sl, r6
   13f64:	add	ip, pc, ip
   13f68:	str	r0, [sl]
   13f6c:	b	1402c <getopt@@Base+0x584>
   13f70:	ldr	r8, [pc, #1408]	; 144f8 <getopt@@Base+0xa50>
   13f74:	add	r1, r3, #1
   13f78:	ldr	r8, [pc, r8]
   13f7c:	ldr	r0, [pc, #1400]	; 144fc <getopt@@Base+0xa54>
   13f80:	ldr	r0, [pc, r0]
   13f84:	cmn	r0, #1
   13f88:	str	r0, [fp, #-32]	; 0xffffffe0
   13f8c:	beq	13fa4 <getopt@@Base+0x4fc>
   13f90:	cmn	r8, #1
   13f94:	ldreq	r0, [pc, #1380]	; 14500 <getopt@@Base+0xa58>
   13f98:	moveq	r8, r5
   13f9c:	addeq	r0, pc, r0
   13fa0:	streq	r5, [r0]
   13fa4:	cmp	r7, #45	; 0x2d
   13fa8:	str	r1, [r6]
   13fac:	bne	13fc0 <getopt@@Base+0x518>
   13fb0:	ldrb	r0, [r3, #2]
   13fb4:	mov	r7, #45	; 0x2d
   13fb8:	cmp	r0, #0
   13fbc:	beq	14044 <getopt@@Base+0x59c>
   13fc0:	ldr	r2, [sp, #20]
   13fc4:	cmp	r2, #0
   13fc8:	beq	14204 <getopt@@Base+0x75c>
   13fcc:	ldr	r0, [r4, r5, lsl #2]
   13fd0:	cmp	r1, r0
   13fd4:	beq	14204 <getopt@@Base+0x75c>
   13fd8:	ldr	r0, [sp, #12]
   13fdc:	tst	r0, #4
   13fe0:	bne	13fec <getopt@@Base+0x544>
   13fe4:	cmp	r7, #45	; 0x2d
   13fe8:	bne	14204 <getopt@@Base+0x75c>
   13fec:	ldr	ip, [pc, #1304]	; 1450c <getopt@@Base+0xa64>
   13ff0:	mov	r0, #0
   13ff4:	mov	r8, lr
   13ff8:	cmp	r7, #58	; 0x3a
   13ffc:	add	ip, pc, ip
   14000:	str	r0, [ip]
   14004:	beq	141b4 <getopt@@Base+0x70c>
   14008:	cmp	r7, #45	; 0x2d
   1400c:	bne	1419c <getopt@@Base+0x6f4>
   14010:	mov	r3, #1
   14014:	add	r1, r1, #1
   14018:	str	r3, [ip]
   1401c:	str	r1, [r6]
   14020:	b	141b4 <getopt@@Base+0x70c>
   14024:	cmn	r0, #1
   14028:	strne	r0, [sl]
   1402c:	mvn	r7, #0
   14030:	str	r7, [ip]
   14034:	ldr	r0, [pc, #1176]	; 144d4 <getopt@@Base+0xa2c>
   14038:	add	r0, pc, r0
   1403c:	str	r7, [r0]
   14040:	b	142a8 <getopt@@Base+0x800>
   14044:	add	r0, r5, #1
   14048:	cmn	r8, #1
   1404c:	str	lr, [r6]
   14050:	str	r0, [sl]
   14054:	beq	1402c <getopt@@Base+0x584>
   14058:	sub	r3, r0, r8
   1405c:	str	r0, [sp, #40]	; 0x28
   14060:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14064:	mov	r1, r3
   14068:	sub	r0, r8, r0
   1406c:	sdiv	r2, r0, r3
   14070:	mls	r2, r2, r3, r0
   14074:	cmp	r2, #0
   14078:	beq	14098 <getopt@@Base+0x5f0>
   1407c:	mov	r7, r3
   14080:	mov	r1, r2
   14084:	sdiv	r2, r7, r2
   14088:	mls	r2, r2, r1, r7
   1408c:	mov	r7, r1
   14090:	cmp	r2, #0
   14094:	bne	14080 <getopt@@Base+0x5d8>
   14098:	cmp	r1, #1
   1409c:	blt	14174 <getopt@@Base+0x6cc>
   140a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   140a4:	ldr	r7, [sp, #40]	; 0x28
   140a8:	rsb	r9, r0, #0
   140ac:	mov	r0, #0
   140b0:	sub	r2, r7, r2
   140b4:	sdiv	sl, r2, r1
   140b8:	and	r2, sl, #1
   140bc:	sub	r7, r2, sl
   140c0:	str	r7, [fp, #-36]	; 0xffffffdc
   140c4:	cmp	sl, #1
   140c8:	bge	140e0 <getopt@@Base+0x638>
   140cc:	add	r0, r0, #1
   140d0:	cmp	r0, r1
   140d4:	beq	14174 <getopt@@Base+0x6cc>
   140d8:	cmp	sl, #1
   140dc:	blt	140cc <getopt@@Base+0x624>
   140e0:	add	ip, r0, r8
   140e4:	ldr	r6, [r4, ip, lsl #2]
   140e8:	bne	140fc <getopt@@Base+0x654>
   140ec:	mov	r5, ip
   140f0:	cmp	r2, #0
   140f4:	beq	140cc <getopt@@Base+0x624>
   140f8:	b	1414c <getopt@@Base+0x6a4>
   140fc:	ldr	lr, [fp, #-36]	; 0xffffffdc
   14100:	mov	r5, ip
   14104:	cmp	r5, r8
   14108:	mov	r7, r9
   1410c:	movlt	r7, r3
   14110:	add	r5, r7, r5
   14114:	ldr	r7, [r4, r5, lsl #2]
   14118:	cmp	r5, r8
   1411c:	str	r6, [r4, r5, lsl #2]
   14120:	mov	r6, r9
   14124:	movlt	r6, r3
   14128:	adds	lr, lr, #2
   1412c:	add	r5, r6, r5
   14130:	str	r7, [r4, ip, lsl #2]
   14134:	ldr	r6, [r4, r5, lsl #2]
   14138:	str	r7, [r4, r5, lsl #2]
   1413c:	str	r6, [r4, ip, lsl #2]
   14140:	bne	14104 <getopt@@Base+0x65c>
   14144:	cmp	r2, #0
   14148:	beq	140cc <getopt@@Base+0x624>
   1414c:	cmp	r5, r8
   14150:	mov	lr, r2
   14154:	mov	r2, r9
   14158:	movlt	r2, r3
   1415c:	add	r2, r2, r5
   14160:	ldr	r7, [r4, r2, lsl #2]
   14164:	str	r6, [r4, r2, lsl #2]
   14168:	mov	r2, lr
   1416c:	str	r7, [r4, ip, lsl #2]
   14170:	b	140cc <getopt@@Base+0x624>
   14174:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14178:	ldr	r1, [sp, #40]	; 0x28
   1417c:	add	r0, r0, r1
   14180:	ldr	r1, [pc, #892]	; 14504 <getopt@@Base+0xa5c>
   14184:	sub	r0, r0, r8
   14188:	ldr	r1, [pc, r1]
   1418c:	str	r0, [r1]
   14190:	ldr	ip, [pc, #880]	; 14508 <getopt@@Base+0xa60>
   14194:	add	ip, pc, ip
   14198:	b	1402c <getopt@@Base+0x584>
   1419c:	ldr	r0, [sp, #16]
   141a0:	mov	r1, r7
   141a4:	bl	11014 <strchr@plt>
   141a8:	ldr	r2, [sp, #20]
   141ac:	cmp	r0, #0
   141b0:	movwne	r0, #1
   141b4:	str	r0, [sp]
   141b8:	ldr	r0, [sp, #12]
   141bc:	ldr	r1, [sp, #16]
   141c0:	ldr	r3, [fp, #8]
   141c4:	str	r0, [sp, #4]
   141c8:	mov	r0, r4
   141cc:	bl	145b0 <getopt_long_only@@Base+0x28>
   141d0:	cmn	r0, #1
   141d4:	beq	141ec <getopt@@Base+0x744>
   141d8:	mov	r7, r0
   141dc:	ldr	r0, [pc, #888]	; 1455c <getopt@@Base+0xab4>
   141e0:	add	r0, pc, r0
   141e4:	str	r8, [r0]
   141e8:	b	142a8 <getopt@@Base+0x800>
   141ec:	ldr	r1, [pc, #796]	; 14510 <getopt@@Base+0xa68>
   141f0:	mov	lr, r8
   141f4:	ldr	r1, [pc, r1]
   141f8:	ldrb	r7, [r1]
   141fc:	ldr	r6, [pc, #784]	; 14514 <getopt@@Base+0xa6c>
   14200:	add	r6, pc, r6
   14204:	add	r5, r1, #1
   14208:	cmp	r7, #58	; 0x3a
   1420c:	str	r5, [r6]
   14210:	beq	142b4 <getopt@@Base+0x80c>
   14214:	cmp	r7, #45	; 0x2d
   14218:	bne	14228 <getopt@@Base+0x780>
   1421c:	ldrb	r0, [r5]
   14220:	cmp	r0, #0
   14224:	bne	142cc <getopt@@Base+0x824>
   14228:	ldr	r0, [sp, #16]
   1422c:	mov	r1, r7
   14230:	mov	r6, lr
   14234:	bl	11014 <strchr@plt>
   14238:	cmp	r0, #0
   1423c:	beq	14290 <getopt@@Base+0x7e8>
   14240:	ldr	r2, [sp, #20]
   14244:	ldrb	r1, [r0, #1]
   14248:	cmp	r2, #0
   1424c:	beq	1425c <getopt@@Base+0x7b4>
   14250:	cmp	r7, #87	; 0x57
   14254:	cmpeq	r1, #59	; 0x3b
   14258:	beq	14338 <getopt@@Base+0x890>
   1425c:	cmp	r1, #58	; 0x3a
   14260:	bne	14328 <getopt@@Base+0x880>
   14264:	ldr	r1, [pc, #728]	; 14544 <getopt@@Base+0xa9c>
   14268:	mov	r2, #0
   1426c:	ldr	r1, [pc, r1]
   14270:	str	r2, [r1]
   14274:	ldrb	r2, [r5]
   14278:	cmp	r2, #0
   1427c:	beq	143a8 <getopt@@Base+0x900>
   14280:	str	r5, [r1]
   14284:	ldr	r2, [pc, #700]	; 14548 <getopt@@Base+0xaa0>
   14288:	add	r2, pc, r2
   1428c:	b	143d8 <getopt@@Base+0x930>
   14290:	cmp	r7, #45	; 0x2d
   14294:	bne	142b4 <getopt@@Base+0x80c>
   14298:	ldrb	r0, [r5]
   1429c:	cmp	r0, #0
   142a0:	bne	142cc <getopt@@Base+0x824>
   142a4:	mvn	r7, #0
   142a8:	mov	r0, r7
   142ac:	sub	sp, fp, #28
   142b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   142b4:	ldrb	r0, [r5]
   142b8:	cmp	r0, #0
   142bc:	bne	142cc <getopt@@Base+0x824>
   142c0:	ldr	r0, [sl]
   142c4:	add	r0, r0, #1
   142c8:	str	r0, [sl]
   142cc:	ldr	r0, [pc, #580]	; 14518 <getopt@@Base+0xa70>
   142d0:	ldr	r0, [pc, r0]
   142d4:	ldr	r0, [r0]
   142d8:	cmp	r0, #0
   142dc:	beq	14314 <getopt@@Base+0x86c>
   142e0:	ldr	r0, [sp, #16]
   142e4:	ldrb	r0, [r0]
   142e8:	cmp	r0, #58	; 0x3a
   142ec:	beq	14314 <getopt@@Base+0x86c>
   142f0:	ldr	r1, [pc, #548]	; 1451c <getopt@@Base+0xa74>
   142f4:	ldr	r0, [pc, #548]	; 14520 <getopt@@Base+0xa78>
   142f8:	ldr	r2, [sp, #8]
   142fc:	add	r1, pc, r1
   14300:	cmp	r2, #0
   14304:	add	r0, pc, r0
   14308:	movne	r0, r1
   1430c:	mov	r1, r7
   14310:	bl	11020 <warnx@plt>
   14314:	ldr	r0, [pc, #520]	; 14524 <getopt@@Base+0xa7c>
   14318:	ldr	r0, [pc, r0]
   1431c:	str	r7, [r0]
   14320:	mov	r7, #63	; 0x3f
   14324:	b	142a8 <getopt@@Base+0x800>
   14328:	ldrb	r0, [r5]
   1432c:	cmp	r0, #0
   14330:	bne	142a8 <getopt@@Base+0x800>
   14334:	b	143dc <getopt@@Base+0x934>
   14338:	ldrb	r0, [r5]
   1433c:	ldr	r3, [sp, #12]
   14340:	cmp	r0, #0
   14344:	bne	1436c <getopt@@Base+0x8c4>
   14348:	ldr	r0, [sl]
   1434c:	add	r0, r0, #1
   14350:	cmp	r0, r9
   14354:	str	r0, [sl]
   14358:	bge	143ec <getopt@@Base+0x944>
   1435c:	ldr	r0, [r4, r0, lsl #2]
   14360:	ldr	r1, [pc, #464]	; 14538 <getopt@@Base+0xa90>
   14364:	add	r1, pc, r1
   14368:	str	r0, [r1]
   1436c:	ldr	r0, [pc, #456]	; 1453c <getopt@@Base+0xa94>
   14370:	mov	r1, #2
   14374:	add	r0, pc, r0
   14378:	str	r1, [r0]
   1437c:	mov	r0, #0
   14380:	ldr	r1, [sp, #16]
   14384:	stm	sp, {r0, r3}
   14388:	ldr	r3, [fp, #8]
   1438c:	mov	r0, r4
   14390:	bl	145b0 <getopt_long_only@@Base+0x28>
   14394:	ldr	r1, [pc, #420]	; 14540 <getopt@@Base+0xa98>
   14398:	add	r1, pc, r1
   1439c:	str	r6, [r1]
   143a0:	sub	sp, fp, #28
   143a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   143a8:	ldrb	r0, [r0, #2]
   143ac:	ldr	r2, [pc, #408]	; 1454c <getopt@@Base+0xaa4>
   143b0:	cmp	r0, #58	; 0x3a
   143b4:	add	r2, pc, r2
   143b8:	beq	143d8 <getopt@@Base+0x930>
   143bc:	ldr	r0, [sl]
   143c0:	add	r0, r0, #1
   143c4:	cmp	r0, r9
   143c8:	str	r0, [sl]
   143cc:	bge	14440 <getopt@@Base+0x998>
   143d0:	ldr	r0, [r4, r0, lsl #2]
   143d4:	str	r0, [r1]
   143d8:	str	r6, [r2]
   143dc:	ldr	r0, [sl]
   143e0:	add	r0, r0, #1
   143e4:	str	r0, [sl]
   143e8:	b	142a8 <getopt@@Base+0x800>
   143ec:	ldr	r0, [pc, #308]	; 14528 <getopt@@Base+0xa80>
   143f0:	add	r0, pc, r0
   143f4:	str	r6, [r0]
   143f8:	ldr	r0, [pc, #300]	; 1452c <getopt@@Base+0xa84>
   143fc:	ldr	r0, [pc, r0]
   14400:	ldr	r4, [sp, #16]
   14404:	ldr	r0, [r0]
   14408:	cmp	r0, #0
   1440c:	beq	1442c <getopt@@Base+0x984>
   14410:	ldrb	r0, [r4]
   14414:	cmp	r0, #58	; 0x3a
   14418:	beq	1442c <getopt@@Base+0x984>
   1441c:	ldr	r0, [pc, #268]	; 14530 <getopt@@Base+0xa88>
   14420:	mov	r1, #87	; 0x57
   14424:	add	r0, pc, r0
   14428:	bl	11020 <warnx@plt>
   1442c:	ldr	r0, [pc, #256]	; 14534 <getopt@@Base+0xa8c>
   14430:	mov	r1, #87	; 0x57
   14434:	ldr	r0, [pc, r0]
   14438:	str	r1, [r0]
   1443c:	b	14484 <getopt@@Base+0x9dc>
   14440:	str	r6, [r2]
   14444:	ldr	r0, [pc, #260]	; 14550 <getopt@@Base+0xaa8>
   14448:	ldr	r0, [pc, r0]
   1444c:	ldr	r4, [sp, #16]
   14450:	ldr	r0, [r0]
   14454:	cmp	r0, #0
   14458:	beq	14478 <getopt@@Base+0x9d0>
   1445c:	ldrb	r0, [r4]
   14460:	cmp	r0, #58	; 0x3a
   14464:	beq	14478 <getopt@@Base+0x9d0>
   14468:	ldr	r0, [pc, #228]	; 14554 <getopt@@Base+0xaac>
   1446c:	mov	r1, r7
   14470:	add	r0, pc, r0
   14474:	bl	11020 <warnx@plt>
   14478:	ldr	r0, [pc, #216]	; 14558 <getopt@@Base+0xab0>
   1447c:	ldr	r0, [pc, r0]
   14480:	str	r7, [r0]
   14484:	ldrb	r7, [r4]
   14488:	cmp	r7, #58	; 0x3a
   1448c:	movwne	r7, #63	; 0x3f
   14490:	b	142a8 <getopt@@Base+0x800>
   14494:	andeq	r1, r0, r7, asr #14
   14498:	muleq	r1, r4, r5
   1449c:	andeq	r2, r1, r0, ror #12
   144a0:	andeq	r2, r1, r4, lsr r5
   144a4:	andeq	r2, r1, r0, asr #10
   144a8:	andeq	r2, r1, ip, ror r5
   144ac:	andeq	r2, r1, r8, asr r5
   144b0:	strdeq	r2, [r1], -r8
   144b4:	ldrdeq	r2, [r1], -r4
   144b8:	andeq	r1, r0, r5, lsl #2
   144bc:	andeq	r2, r1, r0, asr #11
   144c0:	andeq	r2, r1, r8, asr #8
   144c4:	andeq	r2, r1, ip, lsr #7
   144c8:	andeq	r2, r1, r0, lsr #7
   144cc:	andeq	r2, r1, ip, lsl #3
   144d0:	andeq	r2, r1, r8, asr r2
   144d4:	andeq	r2, r1, r0, lsl #3
   144d8:			; <UNDEFINED> instruction: 0x000121b0
   144dc:	andeq	r2, r1, ip, ror #9
   144e0:	ldrdeq	r2, [r1], -r8
   144e4:	muleq	r1, r8, r5
   144e8:	andeq	r2, r1, r4, lsl #11
   144ec:	muleq	r1, ip, r4
   144f0:	andeq	r2, r1, r0, ror #10
   144f4:	muleq	r0, r9, r0
   144f8:	andeq	r2, r1, r0, asr #4
   144fc:	andeq	r2, r1, ip, lsr r2
   14500:	andeq	r2, r1, ip, lsl r2
   14504:	andeq	r1, r1, r8, asr pc
   14508:	andeq	r2, r1, r8, lsr #32
   1450c:	andeq	r2, r1, r8, asr #3
   14510:	andeq	r1, r1, ip, asr #31
   14514:	andeq	r1, r1, r0, asr #31
   14518:	andeq	r1, r1, r4, lsl #28
   1451c:	andeq	r0, r0, lr, asr pc
   14520:	andeq	r0, r0, fp, ror #30
   14524:	andeq	r1, r1, ip, asr #27
   14528:	ldrdeq	r1, [r1], -r0
   1452c:	ldrdeq	r1, [r1], -r8
   14530:	andeq	r0, r0, r0, ror #28
   14534:			; <UNDEFINED> instruction: 0x00011cb0
   14538:	andeq	r1, r1, ip, asr lr
   1453c:	andeq	r1, r1, r0, asr lr
   14540:	andeq	r1, r1, r8, lsr #28
   14544:	andeq	r1, r1, ip, ror lr
   14548:	andeq	r1, r1, r8, lsr pc
   1454c:	andeq	r1, r1, ip, lsl #28
   14550:	andeq	r1, r1, ip, lsl #25
   14554:	andeq	r0, r0, r4, lsl lr
   14558:	andeq	r1, r1, r8, ror #24
   1455c:	andeq	r1, r1, r0, ror #31

00014560 <getopt_long@@Base>:
   14560:	push	{fp, lr}
   14564:	mov	fp, sp
   14568:	sub	sp, sp, #8
   1456c:	mov	ip, #1
   14570:	str	ip, [sp, #4]
   14574:	ldr	ip, [fp, #8]
   14578:	str	ip, [sp]
   1457c:	bl	13ad0 <getopt@@Base+0x28>
   14580:	mov	sp, fp
   14584:	pop	{fp, pc}

00014588 <getopt_long_only@@Base>:
   14588:	push	{fp, lr}
   1458c:	mov	fp, sp
   14590:	sub	sp, sp, #8
   14594:	mov	ip, #5
   14598:	str	ip, [sp, #4]
   1459c:	ldr	ip, [fp, #8]
   145a0:	str	ip, [sp]
   145a4:	bl	13ad0 <getopt@@Base+0x28>
   145a8:	mov	sp, fp
   145ac:	pop	{fp, pc}
   145b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   145b4:	add	fp, sp, #28
   145b8:	sub	sp, sp, #36	; 0x24
   145bc:	str	r3, [sp, #16]
   145c0:	mov	r8, r0
   145c4:	mov	r5, r2
   145c8:	mov	sl, r1
   145cc:	ldr	r0, [pc, #1016]	; 149cc <getopt_long_only@@Base+0x444>
   145d0:	ldr	r0, [pc, r0]
   145d4:	ldr	r4, [pc, #1012]	; 149d0 <getopt_long_only@@Base+0x448>
   145d8:	ldr	r4, [pc, r4]
   145dc:	cmp	r0, #2
   145e0:	bhi	145f4 <getopt_long_only@@Base+0x6c>
   145e4:	ldr	r1, [pc, #1004]	; 149d8 <getopt_long_only@@Base+0x450>
   145e8:	add	r1, pc, r1
   145ec:	ldr	r9, [r1, r0, lsl #2]
   145f0:	b	145fc <getopt_long_only@@Base+0x74>
   145f4:	ldr	r9, [pc, #984]	; 149d4 <getopt_long_only@@Base+0x44c>
   145f8:	add	r9, pc, r9
   145fc:	ldr	r0, [pc, #984]	; 149dc <getopt_long_only@@Base+0x454>
   14600:	mov	r1, #61	; 0x3d
   14604:	ldr	r0, [pc, r0]
   14608:	ldr	r7, [r0]
   1460c:	add	r6, r7, #1
   14610:	str	r6, [r0]
   14614:	mov	r0, r4
   14618:	bl	11014 <strchr@plt>
   1461c:	cmp	r0, #0
   14620:	str	r7, [sp, #24]
   14624:	stm	sp, {r6, r8}
   14628:	beq	14638 <getopt_long_only@@Base+0xb0>
   1462c:	sub	r6, r0, r4
   14630:	add	r0, r0, #1
   14634:	b	14648 <getopt_long_only@@Base+0xc0>
   14638:	mov	r0, r4
   1463c:	bl	11008 <strlen@plt>
   14640:	mov	r6, r0
   14644:	mov	r0, #0
   14648:	ldr	r8, [r5]
   1464c:	ldr	r1, [fp, #8]
   14650:	mov	r7, sl
   14654:	cmp	r8, #0
   14658:	beq	14830 <getopt_long_only@@Base+0x2a8>
   1465c:	str	r0, [sp, #8]
   14660:	ldr	r0, [fp, #12]
   14664:	sub	r2, r6, #1
   14668:	cmp	r1, #0
   1466c:	str	r9, [sp, #12]
   14670:	str	r7, [sp, #20]
   14674:	mvn	sl, #0
   14678:	mov	r9, #0
   1467c:	clz	r2, r2
   14680:	movwne	r1, #1
   14684:	lsr	r2, r2, #5
   14688:	and	r7, r1, r2
   1468c:	and	r0, r0, #4
   14690:	str	r0, [sp, #28]
   14694:	mov	r0, #0
   14698:	str	r0, [sp, #32]
   1469c:	b	146bc <getopt_long_only@@Base+0x134>
   146a0:	mov	r0, #1
   146a4:	str	r0, [sp, #32]
   146a8:	add	r0, r5, r9, lsl #4
   146ac:	add	r9, r9, #1
   146b0:	ldr	r8, [r0, #16]
   146b4:	cmp	r8, #0
   146b8:	beq	14744 <getopt_long_only@@Base+0x1bc>
   146bc:	mov	r0, r4
   146c0:	mov	r1, r8
   146c4:	mov	r2, r6
   146c8:	bl	110e0 <strncmp@plt>
   146cc:	cmp	r0, #0
   146d0:	bne	146a8 <getopt_long_only@@Base+0x120>
   146d4:	mov	r0, r8
   146d8:	bl	11008 <strlen@plt>
   146dc:	cmp	r0, r6
   146e0:	beq	14790 <getopt_long_only@@Base+0x208>
   146e4:	cmp	r7, #0
   146e8:	bne	146a8 <getopt_long_only@@Base+0x120>
   146ec:	cmn	sl, #1
   146f0:	beq	1473c <getopt_long_only@@Base+0x1b4>
   146f4:	ldr	r0, [sp, #28]
   146f8:	cmp	r0, #0
   146fc:	bne	146a0 <getopt_long_only@@Base+0x118>
   14700:	add	r0, r5, sl, lsl #4
   14704:	add	r1, r5, r9, lsl #4
   14708:	ldr	r2, [r0, #4]
   1470c:	ldr	r3, [r1, #4]
   14710:	cmp	r3, r2
   14714:	bne	146a0 <getopt_long_only@@Base+0x118>
   14718:	ldr	r2, [r0, #8]
   1471c:	ldr	r3, [r1, #8]
   14720:	cmp	r3, r2
   14724:	bne	146a0 <getopt_long_only@@Base+0x118>
   14728:	ldr	r0, [r0, #12]
   1472c:	ldr	r1, [r1, #12]
   14730:	cmp	r1, r0
   14734:	bne	146a0 <getopt_long_only@@Base+0x118>
   14738:	b	146a8 <getopt_long_only@@Base+0x120>
   1473c:	mov	sl, r9
   14740:	b	146a8 <getopt_long_only@@Base+0x120>
   14744:	ldr	r0, [sp, #32]
   14748:	cmp	r0, #0
   1474c:	beq	147a4 <getopt_long_only@@Base+0x21c>
   14750:	ldr	r0, [pc, #648]	; 149e0 <getopt_long_only@@Base+0x458>
   14754:	ldr	r0, [pc, r0]
   14758:	ldr	r0, [r0]
   1475c:	cmp	r0, #0
   14760:	beq	14888 <getopt_long_only@@Base+0x300>
   14764:	ldr	r0, [sp, #20]
   14768:	ldrb	r0, [r0]
   1476c:	cmp	r0, #58	; 0x3a
   14770:	beq	14888 <getopt_long_only@@Base+0x300>
   14774:	ldr	r0, [pc, #616]	; 149e4 <getopt_long_only@@Base+0x45c>
   14778:	ldr	r1, [sp, #12]
   1477c:	mov	r2, r6
   14780:	mov	r3, r4
   14784:	add	r0, pc, r0
   14788:	bl	11020 <warnx@plt>
   1478c:	b	14888 <getopt_long_only@@Base+0x300>
   14790:	mov	sl, r9
   14794:	ldr	r7, [sp, #20]
   14798:	ldr	r9, [sp, #12]
   1479c:	ldr	r2, [sp, #8]
   147a0:	b	147bc <getopt_long_only@@Base+0x234>
   147a4:	ldr	r7, [sp, #20]
   147a8:	ldr	r9, [sp, #12]
   147ac:	ldr	r2, [sp, #8]
   147b0:	ldr	r1, [fp, #8]
   147b4:	cmn	sl, #1
   147b8:	beq	14830 <getopt_long_only@@Base+0x2a8>
   147bc:	add	r5, r5, sl, lsl #4
   147c0:	cmp	r2, #0
   147c4:	mov	r0, r5
   147c8:	ldr	r1, [r0, #4]!
   147cc:	beq	148a4 <getopt_long_only@@Base+0x31c>
   147d0:	cmp	r1, #0
   147d4:	bne	148a4 <getopt_long_only@@Base+0x31c>
   147d8:	ldr	r0, [pc, #524]	; 149ec <getopt_long_only@@Base+0x464>
   147dc:	ldr	r0, [pc, r0]
   147e0:	ldr	r0, [r0]
   147e4:	cmp	r0, #0
   147e8:	beq	14810 <getopt_long_only@@Base+0x288>
   147ec:	ldrb	r0, [r7]
   147f0:	cmp	r0, #58	; 0x3a
   147f4:	beq	14810 <getopt_long_only@@Base+0x288>
   147f8:	ldr	r0, [pc, #496]	; 149f0 <getopt_long_only@@Base+0x468>
   147fc:	mov	r1, r9
   14800:	mov	r2, r6
   14804:	mov	r3, r4
   14808:	add	r0, pc, r0
   1480c:	bl	11020 <warnx@plt>
   14810:	ldr	r1, [r5, #8]
   14814:	mov	r0, #0
   14818:	cmp	r1, #0
   1481c:	ldreq	r0, [r5, #12]
   14820:	ldr	r1, [pc, #460]	; 149f4 <getopt_long_only@@Base+0x46c>
   14824:	ldr	r1, [pc, r1]
   14828:	str	r0, [r1]
   1482c:	b	14898 <getopt_long_only@@Base+0x310>
   14830:	cmp	r1, #0
   14834:	beq	14854 <getopt_long_only@@Base+0x2cc>
   14838:	ldr	r0, [pc, #472]	; 14a18 <getopt_long_only@@Base+0x490>
   1483c:	ldr	r0, [pc, r0]
   14840:	ldr	r1, [sp, #24]
   14844:	str	r1, [r0]
   14848:	mvn	r0, #0
   1484c:	sub	sp, fp, #28
   14850:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14854:	ldr	r0, [pc, #448]	; 14a1c <getopt_long_only@@Base+0x494>
   14858:	ldr	r0, [pc, r0]
   1485c:	ldr	r0, [r0]
   14860:	cmp	r0, #0
   14864:	beq	14888 <getopt_long_only@@Base+0x300>
   14868:	ldrb	r0, [r7]
   1486c:	cmp	r0, #58	; 0x3a
   14870:	beq	14888 <getopt_long_only@@Base+0x300>
   14874:	ldr	r0, [pc, #420]	; 14a20 <getopt_long_only@@Base+0x498>
   14878:	mov	r1, r9
   1487c:	mov	r2, r4
   14880:	add	r0, pc, r0
   14884:	bl	11020 <warnx@plt>
   14888:	ldr	r0, [pc, #344]	; 149e8 <getopt_long_only@@Base+0x460>
   1488c:	mov	r1, #0
   14890:	ldr	r0, [pc, r0]
   14894:	str	r1, [r0]
   14898:	mov	r0, #63	; 0x3f
   1489c:	sub	sp, fp, #28
   148a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   148a4:	sub	r2, r1, #1
   148a8:	cmp	r2, #1
   148ac:	bhi	149a4 <getopt_long_only@@Base+0x41c>
   148b0:	ldr	r2, [sp, #8]
   148b4:	cmp	r2, #0
   148b8:	beq	148d4 <getopt_long_only@@Base+0x34c>
   148bc:	ldr	r0, [pc, #308]	; 149f8 <getopt_long_only@@Base+0x470>
   148c0:	ldr	r0, [pc, r0]
   148c4:	str	r2, [r0]
   148c8:	cmp	r1, #1
   148cc:	beq	14914 <getopt_long_only@@Base+0x38c>
   148d0:	b	149a4 <getopt_long_only@@Base+0x41c>
   148d4:	cmp	r1, #1
   148d8:	bne	149a4 <getopt_long_only@@Base+0x41c>
   148dc:	ldr	r1, [sp, #24]
   148e0:	ldr	r2, [pc, #276]	; 149fc <getopt_long_only@@Base+0x474>
   148e4:	ldr	r2, [pc, r2]
   148e8:	add	r1, r1, #2
   148ec:	str	r1, [r2]
   148f0:	ldr	r1, [sp, #4]
   148f4:	ldr	r2, [sp]
   148f8:	ldr	r1, [r1, r2, lsl #2]
   148fc:	ldr	r2, [pc, #252]	; 14a00 <getopt_long_only@@Base+0x478>
   14900:	ldr	r2, [pc, r2]
   14904:	str	r1, [r2]
   14908:	ldr	r1, [r0]
   1490c:	cmp	r1, #1
   14910:	bne	149a4 <getopt_long_only@@Base+0x41c>
   14914:	ldr	r0, [pc, #232]	; 14a04 <getopt_long_only@@Base+0x47c>
   14918:	ldr	r0, [pc, r0]
   1491c:	ldr	r0, [r0]
   14920:	cmp	r0, #0
   14924:	bne	149a4 <getopt_long_only@@Base+0x41c>
   14928:	ldr	r0, [pc, #216]	; 14a08 <getopt_long_only@@Base+0x480>
   1492c:	ldr	r0, [pc, r0]
   14930:	ldr	r0, [r0]
   14934:	cmp	r0, #0
   14938:	beq	1495c <getopt_long_only@@Base+0x3d4>
   1493c:	ldrb	r0, [r7]
   14940:	cmp	r0, #58	; 0x3a
   14944:	beq	1495c <getopt_long_only@@Base+0x3d4>
   14948:	ldr	r0, [pc, #188]	; 14a0c <getopt_long_only@@Base+0x484>
   1494c:	mov	r1, r9
   14950:	mov	r2, r4
   14954:	add	r0, pc, r0
   14958:	bl	11020 <warnx@plt>
   1495c:	ldr	r1, [r5, #8]
   14960:	mov	r0, #0
   14964:	cmp	r1, #0
   14968:	ldreq	r0, [r5, #12]
   1496c:	ldr	r1, [pc, #156]	; 14a10 <getopt_long_only@@Base+0x488>
   14970:	ldr	r1, [pc, r1]
   14974:	str	r0, [r1]
   14978:	ldr	r0, [pc, #148]	; 14a14 <getopt_long_only@@Base+0x48c>
   1497c:	ldr	r0, [pc, r0]
   14980:	mov	r1, r0
   14984:	ldr	r0, [r0]
   14988:	sub	r0, r0, #1
   1498c:	str	r0, [r1]
   14990:	ldrb	r0, [r7]
   14994:	cmp	r0, #58	; 0x3a
   14998:	movwne	r0, #63	; 0x3f
   1499c:	sub	sp, fp, #28
   149a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   149a4:	ldr	r0, [sp, #16]
   149a8:	cmp	r0, #0
   149ac:	strne	sl, [r0]
   149b0:	ldr	r1, [r5, #8]
   149b4:	ldr	r0, [r5, #12]
   149b8:	cmp	r1, #0
   149bc:	strne	r0, [r1]
   149c0:	movne	r0, #0
   149c4:	sub	sp, fp, #28
   149c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   149cc:	strdeq	r1, [r1], -r4
   149d0:	andeq	r1, r1, r8, ror #23
   149d4:	strdeq	r0, [r0], -sp
   149d8:	strdeq	r1, [r1], -ip
   149dc:	ldrdeq	r1, [r1], -ip
   149e0:	andeq	r1, r1, r0, lsl #19
   149e4:	andeq	r0, r0, r2, lsr #22
   149e8:	andeq	r1, r1, r4, asr r8
   149ec:	strdeq	r1, [r1], -r8
   149f0:			; <UNDEFINED> instruction: 0x00000abb
   149f4:	andeq	r1, r1, r0, asr #17
   149f8:	andeq	r1, r1, r8, lsr #16
   149fc:	strdeq	r1, [r1], -ip
   14a00:	andeq	r1, r1, r8, ror #15
   14a04:	ldrdeq	r1, [r1], -r0
   14a08:	andeq	r1, r1, r8, lsr #15
   14a0c:	muleq	r0, r9, r9
   14a10:	andeq	r1, r1, r4, ror r7
   14a14:	andeq	r1, r1, r4, ror #14
   14a18:	andeq	r1, r1, r4, lsr #17
   14a1c:	andeq	r1, r1, ip, ror r8
   14a20:	muleq	r0, r0, sl
   14a24:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14a28:	mov	r7, r0
   14a2c:	ldr	r6, [pc, #72]	; 14a7c <getopt_long_only@@Base+0x4f4>
   14a30:	ldr	r5, [pc, #72]	; 14a80 <getopt_long_only@@Base+0x4f8>
   14a34:	add	r6, pc, r6
   14a38:	add	r5, pc, r5
   14a3c:	sub	r6, r6, r5
   14a40:	mov	r8, r1
   14a44:	mov	r9, r2
   14a48:	bl	10e8c <Mat_VarGetNumberOfFields@plt-0x20>
   14a4c:	asrs	r6, r6, #2
   14a50:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14a54:	mov	r4, #0
   14a58:	add	r4, r4, #1
   14a5c:	ldr	r3, [r5], #4
   14a60:	mov	r2, r9
   14a64:	mov	r1, r8
   14a68:	mov	r0, r7
   14a6c:	blx	r3
   14a70:	cmp	r6, r4
   14a74:	bne	14a58 <getopt_long_only@@Base+0x4d0>
   14a78:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14a7c:	andeq	r1, r1, r4, ror #8
   14a80:	andeq	r1, r1, ip, asr r4
   14a84:	bx	lr

Disassembly of section .fini:

00014a88 <.fini>:
   14a88:	push	{r3, lr}
   14a8c:	pop	{r3, pc}
