
../repos/eddieantonio-ocreval-3ab279a/groupacc/groupacc:     file format elf32-littlearm


Disassembly of section .init:

00010990 <.init>:
   10990:	push	{r3, lr}
   10994:	bl	10b3c <getc@plt+0x48>
   10998:	pop	{r3, pc}

Disassembly of section .plt:

0001099c <calloc@plt-0x14>:
   1099c:	push	{lr}		; (str lr, [sp, #-4]!)
   109a0:	ldr	lr, [pc, #4]	; 109ac <calloc@plt-0x4>
   109a4:	add	lr, pc, lr
   109a8:	ldr	pc, [lr, #8]!
   109ac:	andeq	r5, r1, r4, asr r6

000109b0 <calloc@plt>:
   109b0:	add	ip, pc, #0, 12
   109b4:	add	ip, ip, #86016	; 0x15000
   109b8:	ldr	pc, [ip, #1620]!	; 0x654

000109bc <strcmp@plt>:
   109bc:	add	ip, pc, #0, 12
   109c0:	add	ip, ip, #86016	; 0x15000
   109c4:	ldr	pc, [ip, #1612]!	; 0x64c

000109c8 <fopen@plt>:
   109c8:	add	ip, pc, #0, 12
   109cc:	add	ip, ip, #86016	; 0x15000
   109d0:	ldr	pc, [ip, #1604]!	; 0x644

000109d4 <free@plt>:
   109d4:	add	ip, pc, #0, 12
   109d8:	add	ip, ip, #86016	; 0x15000
   109dc:	ldr	pc, [ip, #1596]!	; 0x63c

000109e0 <utf8proc_get_property@plt>:
   109e0:	add	ip, pc, #0, 12
   109e4:	add	ip, ip, #86016	; 0x15000
   109e8:	ldr	pc, [ip, #1588]!	; 0x634

000109ec <fgets@plt>:
   109ec:	add	ip, pc, #0, 12
   109f0:	add	ip, ip, #86016	; 0x15000
   109f4:	ldr	pc, [ip, #1580]!	; 0x62c

000109f8 <utf8proc_encode_char@plt>:
   109f8:	add	ip, pc, #0, 12
   109fc:	add	ip, ip, #86016	; 0x15000
   10a00:	ldr	pc, [ip, #1572]!	; 0x624

00010a04 <strdup@plt>:
   10a04:	add	ip, pc, #0, 12
   10a08:	add	ip, ip, #86016	; 0x15000
   10a0c:	ldr	pc, [ip, #1564]!	; 0x61c

00010a10 <rewind@plt>:
   10a10:	add	ip, pc, #0, 12
   10a14:	add	ip, ip, #86016	; 0x15000
   10a18:	ldr	pc, [ip, #1556]!	; 0x614

00010a1c <utf8proc_tolower@plt>:
   10a1c:	add	ip, pc, #0, 12
   10a20:	add	ip, ip, #86016	; 0x15000
   10a24:	ldr	pc, [ip, #1548]!	; 0x60c

00010a28 <__xstat@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #86016	; 0x15000
   10a30:	ldr	pc, [ip, #1540]!	; 0x604

00010a34 <fread@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #86016	; 0x15000
   10a3c:	ldr	pc, [ip, #1532]!	; 0x5fc

00010a40 <utf8proc_iterate@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #86016	; 0x15000
   10a48:	ldr	pc, [ip, #1524]!	; 0x5f4

00010a4c <__libc_start_main@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #86016	; 0x15000
   10a54:	ldr	pc, [ip, #1516]!	; 0x5ec

00010a58 <__sysv_signal@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #86016	; 0x15000
   10a60:	ldr	pc, [ip, #1508]!	; 0x5e4

00010a64 <__gmon_start__@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #86016	; 0x15000
   10a6c:	ldr	pc, [ip, #1500]!	; 0x5dc

00010a70 <exit@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #86016	; 0x15000
   10a78:	ldr	pc, [ip, #1492]!	; 0x5d4

00010a7c <utf8proc_category@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #86016	; 0x15000
   10a84:	ldr	pc, [ip, #1484]!	; 0x5cc

00010a88 <strlen@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #86016	; 0x15000
   10a90:	ldr	pc, [ip, #1476]!	; 0x5c4

00010a94 <fprintf@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #86016	; 0x15000
   10a9c:	ldr	pc, [ip, #1468]!	; 0x5bc

00010aa0 <__isoc99_sscanf@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #86016	; 0x15000
   10aa8:	ldr	pc, [ip, #1460]!	; 0x5b4

00010aac <fclose@plt>:
   10aac:	add	ip, pc, #0, 12
   10ab0:	add	ip, ip, #86016	; 0x15000
   10ab4:	ldr	pc, [ip, #1452]!	; 0x5ac

00010ab8 <sprintf@plt>:
   10ab8:	add	ip, pc, #0, 12
   10abc:	add	ip, ip, #86016	; 0x15000
   10ac0:	ldr	pc, [ip, #1444]!	; 0x5a4

00010ac4 <utf8proc_errmsg@plt>:
   10ac4:	add	ip, pc, #0, 12
   10ac8:	add	ip, ip, #86016	; 0x15000
   10acc:	ldr	pc, [ip, #1436]!	; 0x59c

00010ad0 <fputs@plt>:
   10ad0:	add	ip, pc, #0, 12
   10ad4:	add	ip, ip, #86016	; 0x15000
   10ad8:	ldr	pc, [ip, #1428]!	; 0x594

00010adc <strncmp@plt>:
   10adc:	add	ip, pc, #0, 12
   10ae0:	add	ip, ip, #86016	; 0x15000
   10ae4:	ldr	pc, [ip, #1420]!	; 0x58c

00010ae8 <abort@plt>:
   10ae8:	add	ip, pc, #0, 12
   10aec:	add	ip, ip, #86016	; 0x15000
   10af0:	ldr	pc, [ip, #1412]!	; 0x584

00010af4 <getc@plt>:
   10af4:	add	ip, pc, #0, 12
   10af8:	add	ip, ip, #86016	; 0x15000
   10afc:	ldr	pc, [ip, #1404]!	; 0x57c

Disassembly of section .text:

00010b00 <error@@Base-0x26d4>:
   10b00:	mov	fp, #0
   10b04:	mov	lr, #0
   10b08:	pop	{r1}		; (ldr r1, [sp], #4)
   10b0c:	mov	r2, sp
   10b10:	push	{r2}		; (str r2, [sp, #-4]!)
   10b14:	push	{r0}		; (str r0, [sp, #-4]!)
   10b18:	ldr	ip, [pc, #16]	; 10b30 <getc@plt+0x3c>
   10b1c:	push	{ip}		; (str ip, [sp, #-4]!)
   10b20:	ldr	r0, [pc, #12]	; 10b34 <getc@plt+0x40>
   10b24:	ldr	r3, [pc, #12]	; 10b38 <getc@plt+0x44>
   10b28:	bl	10a4c <__libc_start_main@plt>
   10b2c:	bl	10ae8 <abort@plt>
   10b30:	muleq	r1, ip, r7
   10b34:	andeq	r0, r1, r8, asr #29
   10b38:	andeq	r4, r1, ip, lsr r7
   10b3c:	ldr	r3, [pc, #20]	; 10b58 <getc@plt+0x64>
   10b40:	ldr	r2, [pc, #20]	; 10b5c <getc@plt+0x68>
   10b44:	add	r3, pc, r3
   10b48:	ldr	r2, [r3, r2]
   10b4c:	cmp	r2, #0
   10b50:	bxeq	lr
   10b54:	b	10a64 <__gmon_start__@plt>
   10b58:			; <UNDEFINED> instruction: 0x000154b4
   10b5c:	andeq	r0, r0, r4, asr #1
   10b60:	ldr	r0, [pc, #24]	; 10b80 <getc@plt+0x8c>
   10b64:	ldr	r3, [pc, #24]	; 10b84 <getc@plt+0x90>
   10b68:	cmp	r3, r0
   10b6c:	bxeq	lr
   10b70:	ldr	r3, [pc, #16]	; 10b88 <getc@plt+0x94>
   10b74:	cmp	r3, #0
   10b78:	bxeq	lr
   10b7c:	bx	r3
   10b80:	andeq	r6, r2, ip, ror #10
   10b84:	andeq	r6, r2, ip, ror #10
   10b88:	andeq	r0, r0, r0
   10b8c:	ldr	r0, [pc, #36]	; 10bb8 <getc@plt+0xc4>
   10b90:	ldr	r1, [pc, #36]	; 10bbc <getc@plt+0xc8>
   10b94:	sub	r1, r1, r0
   10b98:	asr	r1, r1, #2
   10b9c:	add	r1, r1, r1, lsr #31
   10ba0:	asrs	r1, r1, #1
   10ba4:	bxeq	lr
   10ba8:	ldr	r3, [pc, #16]	; 10bc0 <getc@plt+0xcc>
   10bac:	cmp	r3, #0
   10bb0:	bxeq	lr
   10bb4:	bx	r3
   10bb8:	andeq	r6, r2, ip, ror #10
   10bbc:	andeq	r6, r2, ip, ror #10
   10bc0:	andeq	r0, r0, r0
   10bc4:	push	{r4, lr}
   10bc8:	ldr	r4, [pc, #24]	; 10be8 <getc@plt+0xf4>
   10bcc:	ldrb	r3, [r4]
   10bd0:	cmp	r3, #0
   10bd4:	popne	{r4, pc}
   10bd8:	bl	10b60 <getc@plt+0x6c>
   10bdc:	mov	r3, #1
   10be0:	strb	r3, [r4]
   10be4:	pop	{r4, pc}
   10be8:	andeq	r6, r2, ip, ror #10
   10bec:	b	10b8c <getc@plt+0x98>
   10bf0:	push	{fp, lr}
   10bf4:	mov	fp, sp
   10bf8:	sub	sp, sp, #32
   10bfc:	ldr	r3, [pc, #164]	; 10ca8 <getc@plt+0x1b4>
   10c00:	add	r3, pc, r3
   10c04:	str	r0, [fp, #-4]
   10c08:	str	r1, [fp, #-8]
   10c0c:	str	r2, [fp, #-12]
   10c10:	ldr	r0, [fp, #-4]
   10c14:	ldr	r2, [fp, #-8]
   10c18:	ldr	r1, [fp, #-12]
   10c1c:	str	r1, [sp, #16]
   10c20:	mov	r1, r3
   10c24:	ldr	r3, [sp, #16]
   10c28:	bl	10a94 <fprintf@plt>
   10c2c:	ldr	r1, [fp, #-8]
   10c30:	cmp	r1, #0
   10c34:	str	r0, [sp, #12]
   10c38:	bne	10c54 <getc@plt+0x160>
   10c3c:	ldr	r0, [pc, #108]	; 10cb0 <getc@plt+0x1bc>
   10c40:	add	r1, pc, r0
   10c44:	ldr	r0, [fp, #-4]
   10c48:	bl	10a94 <fprintf@plt>
   10c4c:	str	r0, [sp, #8]
   10c50:	b	10c98 <getc@plt+0x1a4>
   10c54:	ldr	r0, [pc, #80]	; 10cac <getc@plt+0x1b8>
   10c58:	add	r1, pc, r0
   10c5c:	vldr	d16, [pc, #60]	; 10ca0 <getc@plt+0x1ac>
   10c60:	ldr	r0, [fp, #-4]
   10c64:	ldr	r2, [fp, #-8]
   10c68:	ldr	r3, [fp, #-12]
   10c6c:	sub	r2, r2, r3
   10c70:	vmov	s0, r2
   10c74:	vcvt.f64.s32	d17, s0
   10c78:	vmul.f64	d16, d16, d17
   10c7c:	ldr	r2, [fp, #-8]
   10c80:	vmov	s0, r2
   10c84:	vcvt.f64.s32	d17, s0
   10c88:	vdiv.f64	d16, d16, d17
   10c8c:	vmov	r2, r3, d16
   10c90:	bl	10a94 <fprintf@plt>
   10c94:	str	r0, [sp, #4]
   10c98:	mov	sp, fp
   10c9c:	pop	{fp, pc}
   10ca0:	andeq	r0, r0, r0
   10ca4:	subsmi	r0, r9, r0
   10ca8:			; <UNDEFINED> instruction: 0x00003bb4
   10cac:	andeq	r3, r0, r3, ror fp
   10cb0:	andeq	r3, r0, pc, ror fp
   10cb4:	push	{fp, lr}
   10cb8:	mov	fp, sp
   10cbc:	sub	sp, sp, #64	; 0x40
   10cc0:	ldr	r1, [pc, #472]	; 10ea0 <getc@plt+0x3ac>
   10cc4:	add	r1, pc, r1
   10cc8:	ldr	r2, [pc, #468]	; 10ea4 <getc@plt+0x3b0>
   10ccc:	ldr	r2, [pc, r2]
   10cd0:	str	r0, [fp, #-4]
   10cd4:	movw	r0, #0
   10cd8:	str	r0, [fp, #-12]
   10cdc:	str	r0, [fp, #-16]
   10ce0:	ldr	r0, [fp, #-4]
   10ce4:	blx	r2
   10ce8:	ldr	r1, [pc, #428]	; 10e9c <getc@plt+0x3a8>
   10cec:	add	r1, pc, r1
   10cf0:	str	r0, [fp, #-8]
   10cf4:	ldr	r0, [fp, #-8]
   10cf8:	bl	10a94 <fprintf@plt>
   10cfc:	ldr	r1, [pc, #404]	; 10e98 <getc@plt+0x3a4>
   10d00:	ldr	r1, [pc, r1]
   10d04:	ldr	r1, [r1]
   10d08:	str	r1, [fp, #-28]	; 0xffffffe4
   10d0c:	str	r0, [sp, #20]
   10d10:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10d14:	movw	r1, #0
   10d18:	cmp	r0, r1
   10d1c:	beq	10e58 <getc@plt+0x364>
   10d20:	ldr	r0, [pc, #392]	; 10eb0 <getc@plt+0x3bc>
   10d24:	ldr	r0, [pc, r0]
   10d28:	movw	r1, #10180	; 0x27c4
   10d2c:	add	r0, r0, r1
   10d30:	ldr	r1, [fp, #-28]	; 0xffffffe4
   10d34:	ldr	r1, [r1, #12]
   10d38:	ldr	r2, [pc, #384]	; 10ec0 <getc@plt+0x3cc>
   10d3c:	ldr	r2, [pc, r2]
   10d40:	add	r1, r2, r1, lsl #3
   10d44:	movw	r2, #10180	; 0x27c4
   10d48:	add	r1, r1, r2
   10d4c:	ldr	r1, [r1]
   10d50:	cmp	r1, #0
   10d54:	str	r0, [sp, #16]
   10d58:	ble	10e44 <getc@plt+0x350>
   10d5c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10d60:	ldr	r0, [r0, #12]
   10d64:	cmp	r0, #32
   10d68:	beq	10e44 <getc@plt+0x350>
   10d6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10d70:	ldr	r0, [r0, #12]
   10d74:	cmp	r0, #10
   10d78:	beq	10e44 <getc@plt+0x350>
   10d7c:	ldr	r0, [pc, #312]	; 10ebc <getc@plt+0x3c8>
   10d80:	ldr	r0, [pc, r0]
   10d84:	movw	r1, #10180	; 0x27c4
   10d88:	add	r0, r0, r1
   10d8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   10d90:	ldr	r1, [r1, #12]
   10d94:	ldr	r2, [pc, #296]	; 10ec4 <getc@plt+0x3d0>
   10d98:	ldr	r2, [pc, r2]
   10d9c:	movw	r3, #10180	; 0x27c4
   10da0:	add	r2, r2, r3
   10da4:	ldr	r1, [r2, r1, lsl #3]
   10da8:	str	r1, [fp, #-20]	; 0xffffffec
   10dac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   10db0:	ldr	r1, [r1, #12]
   10db4:	add	r1, r2, r1, lsl #3
   10db8:	ldr	r1, [r1, #4]
   10dbc:	str	r1, [fp, #-24]	; 0xffffffe8
   10dc0:	ldr	r1, [fp, #-8]
   10dc4:	ldr	r2, [fp, #-20]	; 0xffffffec
   10dc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10dcc:	str	r0, [sp, #12]
   10dd0:	mov	r0, r1
   10dd4:	mov	r1, r2
   10dd8:	mov	r2, r3
   10ddc:	bl	10bf0 <getc@plt+0xfc>
   10de0:	ldr	r0, [pc, #208]	; 10eb8 <getc@plt+0x3c4>
   10de4:	ldr	r0, [pc, r0]
   10de8:	add	r2, sp, #27
   10dec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   10df0:	ldr	r1, [r1, #12]
   10df4:	movw	r3, #0
   10df8:	str	r0, [sp, #8]
   10dfc:	mov	r0, r3
   10e00:	movw	r3, #1
   10e04:	ldr	lr, [sp, #8]
   10e08:	blx	lr
   10e0c:	ldr	r0, [pc, #160]	; 10eb4 <getc@plt+0x3c0>
   10e10:	add	r1, pc, r0
   10e14:	add	r2, sp, #27
   10e18:	ldr	r0, [fp, #-8]
   10e1c:	bl	10a94 <fprintf@plt>
   10e20:	ldr	r1, [fp, #-20]	; 0xffffffec
   10e24:	ldr	r2, [fp, #-12]
   10e28:	add	r1, r2, r1
   10e2c:	str	r1, [fp, #-12]
   10e30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   10e34:	ldr	r2, [fp, #-16]
   10e38:	add	r1, r2, r1
   10e3c:	str	r1, [fp, #-16]
   10e40:	str	r0, [sp, #4]
   10e44:	b	10e48 <getc@plt+0x354>
   10e48:	ldr	r0, [fp, #-28]	; 0xffffffe4
   10e4c:	ldr	r0, [r0, #4]
   10e50:	str	r0, [fp, #-28]	; 0xffffffe4
   10e54:	b	10d10 <getc@plt+0x21c>
   10e58:	ldr	r0, [fp, #-8]
   10e5c:	ldr	r1, [fp, #-12]
   10e60:	ldr	r2, [fp, #-16]
   10e64:	bl	10bf0 <getc@plt+0xfc>
   10e68:	ldr	r0, [pc, #60]	; 10eac <getc@plt+0x3b8>
   10e6c:	add	r1, pc, r0
   10e70:	ldr	r0, [fp, #-8]
   10e74:	bl	10a94 <fprintf@plt>
   10e78:	ldr	r1, [pc, #40]	; 10ea8 <getc@plt+0x3b4>
   10e7c:	ldr	r1, [pc, r1]
   10e80:	ldr	r2, [fp, #-8]
   10e84:	str	r0, [sp]
   10e88:	mov	r0, r2
   10e8c:	blx	r1
   10e90:	mov	sp, fp
   10e94:	pop	{fp, pc}
   10e98:	andeq	r5, r1, r8, ror r3
   10e9c:	andeq	r3, r0, r6, lsr ip
   10ea0:	andeq	r3, r0, r4, ror #29
   10ea4:	andeq	r5, r1, r8, asr #7
   10ea8:	strdeq	r5, [r1], -r8
   10eac:	andeq	r3, r0, r8, ror #18
   10eb0:	andeq	r5, r1, ip, asr r3
   10eb4:	muleq	r0, r3, fp
   10eb8:	andeq	r5, r1, r0, lsl #6
   10ebc:	andeq	r5, r1, r0, lsl #6
   10ec0:	andeq	r5, r1, r4, asr #6
   10ec4:	andeq	r5, r1, r8, ror #5
   10ec8:	push	{fp, lr}
   10ecc:	mov	fp, sp
   10ed0:	sub	sp, sp, #32
   10ed4:	ldr	r2, [pc, #240]	; 10fcc <getc@plt+0x4d8>
   10ed8:	add	r2, pc, r2
   10edc:	ldr	r3, [pc, #236]	; 10fd0 <getc@plt+0x4dc>
   10ee0:	ldr	r3, [pc, r3]
   10ee4:	movw	ip, #0
   10ee8:	str	ip, [fp, #-4]
   10eec:	str	r0, [fp, #-8]
   10ef0:	str	r1, [fp, #-12]
   10ef4:	ldr	r1, [fp, #-12]
   10ef8:	sub	r0, fp, #8
   10efc:	str	r3, [sp, #16]
   10f00:	mov	r3, ip
   10f04:	ldr	ip, [sp, #16]
   10f08:	blx	ip
   10f0c:	ldr	r0, [fp, #-8]
   10f10:	cmp	r0, #2
   10f14:	blt	10f24 <getc@plt+0x430>
   10f18:	ldr	r0, [fp, #-8]
   10f1c:	cmp	r0, #3
   10f20:	ble	10f38 <getc@plt+0x444>
   10f24:	ldr	r0, [pc, #192]	; 10fec <getc@plt+0x4f8>
   10f28:	add	r0, pc, r0
   10f2c:	ldr	r1, [pc, #188]	; 10ff0 <getc@plt+0x4fc>
   10f30:	ldr	r1, [pc, r1]
   10f34:	blx	r1
   10f38:	ldr	r0, [pc, #156]	; 10fdc <getc@plt+0x4e8>
   10f3c:	ldr	r0, [pc, r0]
   10f40:	ldr	r1, [pc, #152]	; 10fe0 <getc@plt+0x4ec>
   10f44:	ldr	r2, [pc, r1]
   10f48:	ldr	r1, [pc, #148]	; 10fe4 <getc@plt+0x4f0>
   10f4c:	ldr	r1, [pc, r1]
   10f50:	ldr	r3, [fp, #-12]
   10f54:	ldr	r3, [r3]
   10f58:	str	r1, [sp, #12]
   10f5c:	mov	r1, r3
   10f60:	ldr	r3, [sp, #12]
   10f64:	blx	r3
   10f68:	ldr	r0, [pc, #100]	; 10fd4 <getc@plt+0x4e0>
   10f6c:	ldr	r0, [pc, r0]
   10f70:	ldr	r1, [pc, #96]	; 10fd8 <getc@plt+0x4e4>
   10f74:	ldr	r1, [pc, r1]
   10f78:	ldr	r2, [fp, #-12]
   10f7c:	ldr	r2, [r2, #4]
   10f80:	str	r1, [sp, #8]
   10f84:	mov	r1, r2
   10f88:	ldr	r2, [sp, #8]
   10f8c:	blx	r2
   10f90:	ldr	r0, [fp, #-8]
   10f94:	cmp	r0, #3
   10f98:	bne	10fac <getc@plt+0x4b8>
   10f9c:	ldr	r0, [fp, #-12]
   10fa0:	ldr	r0, [r0, #8]
   10fa4:	str	r0, [sp, #4]
   10fa8:	b	10fb8 <getc@plt+0x4c4>
   10fac:	movw	r0, #0
   10fb0:	str	r0, [sp, #4]
   10fb4:	b	10fb8 <getc@plt+0x4c4>
   10fb8:	ldr	r0, [sp, #4]
   10fbc:	bl	10cb4 <getc@plt+0x1c0>
   10fc0:	ldr	r0, [pc, #32]	; 10fe8 <getc@plt+0x4f4>
   10fc4:	ldr	r0, [pc, r0]
   10fc8:	blx	r0
   10fcc:	andeq	r3, r0, r3, lsl #18
   10fd0:	andeq	r5, r1, ip, asr #3
   10fd4:	andeq	r5, r1, r4, lsl r1
   10fd8:	andeq	r5, r1, r8, ror r1
   10fdc:	andeq	r5, r1, ip, lsr r1
   10fe0:	andeq	r5, r1, r8, asr r1
   10fe4:	andeq	r5, r1, r8, lsl #3
   10fe8:	andeq	r5, r1, r4, lsl r1
   10fec:	ldrdeq	r3, [r0], -pc	; <UNPREDICTABLE>
   10ff0:	andeq	r5, r1, r8, asr r1
   10ff4:	andeq	r0, r0, r0
   10ff8:	push	{fp, lr}
   10ffc:	mov	fp, sp
   11000:	sub	sp, sp, #24
   11004:	str	r0, [fp, #-4]
   11008:	str	r1, [fp, #-8]
   1100c:	str	r2, [sp, #12]
   11010:	str	r3, [sp, #8]
   11014:	ldr	r0, [fp, #-4]
   11018:	ldr	r1, [fp, #-8]
   1101c:	str	r0, [sp, #4]
   11020:	mov	r0, r1
   11024:	bl	127f8 <getc@plt+0x1d04>
   11028:	ldr	r1, [sp, #4]
   1102c:	add	r0, r1, r0, lsl #3
   11030:	add	r0, r0, #68	; 0x44
   11034:	ldr	r1, [sp, #12]
   11038:	ldr	r2, [sp, #8]
   1103c:	bl	11080 <getc@plt+0x58c>
   11040:	ldr	r0, [fp, #-4]
   11044:	movw	r1, #2116	; 0x844
   11048:	add	r0, r0, r1
   1104c:	ldr	r1, [sp, #12]
   11050:	ldr	r2, [sp, #8]
   11054:	bl	11080 <getc@plt+0x58c>
   11058:	ldr	r0, [fp, #-4]
   1105c:	movw	r1, #10180	; 0x27c4
   11060:	add	r0, r0, r1
   11064:	ldr	r1, [fp, #-8]
   11068:	add	r0, r0, r1, lsl #3
   1106c:	ldr	r1, [sp, #12]
   11070:	ldr	r2, [sp, #8]
   11074:	bl	11080 <getc@plt+0x58c>
   11078:	mov	sp, fp
   1107c:	pop	{fp, pc}
   11080:	sub	sp, sp, #12
   11084:	str	r0, [sp, #8]
   11088:	str	r1, [sp, #4]
   1108c:	str	r2, [sp]
   11090:	ldr	r0, [sp, #4]
   11094:	ldr	r1, [sp, #8]
   11098:	ldr	r2, [r1]
   1109c:	add	r0, r2, r0
   110a0:	str	r0, [r1]
   110a4:	ldr	r0, [sp]
   110a8:	ldr	r1, [sp, #8]
   110ac:	ldr	r2, [r1, #4]
   110b0:	add	r0, r2, r0
   110b4:	str	r0, [r1, #4]
   110b8:	add	sp, sp, #12
   110bc:	bx	lr
   110c0:	push	{fp, lr}
   110c4:	mov	fp, sp
   110c8:	sub	sp, sp, #32
   110cc:	ldr	ip, [pc, #224]	; 111b4 <getc@plt+0x6c0>
   110d0:	ldr	ip, [pc, ip]
   110d4:	str	r0, [fp, #-4]
   110d8:	str	r1, [fp, #-8]
   110dc:	str	r2, [fp, #-12]
   110e0:	str	r3, [sp, #16]
   110e4:	ldr	r0, [fp, #-4]
   110e8:	movw	r1, #2124	; 0x84c
   110ec:	add	r0, r0, r1
   110f0:	ldr	r1, [fp, #-8]
   110f4:	blx	ip
   110f8:	str	r0, [sp, #12]
   110fc:	ldr	r0, [sp, #12]
   11100:	movw	r1, #0
   11104:	cmp	r0, r1
   11108:	beq	11138 <getc@plt+0x644>
   1110c:	ldr	r0, [fp, #-12]
   11110:	ldr	r1, [sp, #12]
   11114:	ldr	r2, [r1, #12]
   11118:	add	r0, r2, r0
   1111c:	str	r0, [r1, #12]
   11120:	ldr	r0, [sp, #16]
   11124:	ldr	r1, [sp, #12]
   11128:	ldr	r2, [r1, #16]
   1112c:	add	r0, r2, r0
   11130:	str	r0, [r1, #16]
   11134:	b	111ac <getc@plt+0x6b8>
   11138:	ldr	r0, [pc, #124]	; 111bc <getc@plt+0x6c8>
   1113c:	ldr	r0, [pc, r0]
   11140:	movw	r1, #1
   11144:	str	r0, [sp, #8]
   11148:	mov	r0, r1
   1114c:	movw	r1, #20
   11150:	ldr	r2, [sp, #8]
   11154:	blx	r2
   11158:	str	r0, [sp, #12]
   1115c:	ldr	r0, [fp, #-8]
   11160:	bl	10a04 <strdup@plt>
   11164:	ldr	r1, [pc, #76]	; 111b8 <getc@plt+0x6c4>
   11168:	ldr	r1, [pc, r1]
   1116c:	ldr	r2, [sp, #12]
   11170:	str	r0, [r2, #8]
   11174:	ldr	r0, [fp, #-12]
   11178:	ldr	r2, [sp, #12]
   1117c:	str	r0, [r2, #12]
   11180:	ldr	r0, [sp, #16]
   11184:	ldr	r2, [sp, #12]
   11188:	str	r0, [r2, #16]
   1118c:	ldr	r0, [fp, #-4]
   11190:	movw	r2, #2124	; 0x84c
   11194:	add	r0, r0, r2
   11198:	ldr	r2, [sp, #12]
   1119c:	str	r1, [sp, #4]
   111a0:	mov	r1, r2
   111a4:	ldr	r2, [sp, #4]
   111a8:	blx	r2
   111ac:	mov	sp, fp
   111b0:	pop	{fp, pc}
   111b4:	andeq	r4, r1, r8, ror #31
   111b8:	andeq	r4, r1, r4, lsr #30
   111bc:			; <UNDEFINED> instruction: 0x00014fb8
   111c0:	push	{fp, lr}
   111c4:	mov	fp, sp
   111c8:	sub	sp, sp, #56	; 0x38
   111cc:	ldr	r2, [pc, #1008]	; 115c4 <getc@plt+0xad0>
   111d0:	add	r2, pc, r2
   111d4:	ldr	r3, [pc, #1004]	; 115c8 <getc@plt+0xad4>
   111d8:	ldr	r3, [pc, r3]
   111dc:	str	r0, [fp, #-4]
   111e0:	str	r1, [fp, #-8]
   111e4:	ldr	r0, [fp, #-8]
   111e8:	mov	r1, r2
   111ec:	blx	r3
   111f0:	str	r0, [fp, #-12]
   111f4:	ldr	r0, [fp, #-12]
   111f8:	bl	11608 <getc@plt+0xb14>
   111fc:	and	r0, r0, #255	; 0xff
   11200:	cmp	r0, #0
   11204:	beq	11550 <getc@plt+0xa5c>
   11208:	ldr	r0, [pc, #956]	; 115cc <getc@plt+0xad8>
   1120c:	add	r0, pc, r0
   11210:	ldr	r1, [pc, #952]	; 115d0 <getc@plt+0xadc>
   11214:	add	r1, pc, r1
   11218:	movw	r2, #40	; 0x28
   1121c:	bl	10adc <strncmp@plt>
   11220:	cmp	r0, #0
   11224:	bne	11550 <getc@plt+0xa5c>
   11228:	ldr	r0, [fp, #-12]
   1122c:	bl	11608 <getc@plt+0xb14>
   11230:	and	r0, r0, #255	; 0xff
   11234:	cmp	r0, #0
   11238:	beq	11550 <getc@plt+0xa5c>
   1123c:	ldr	r0, [pc, #956]	; 11600 <getc@plt+0xb0c>
   11240:	add	r0, pc, r0
   11244:	ldr	r1, [pc, #952]	; 11604 <getc@plt+0xb10>
   11248:	add	r1, pc, r1
   1124c:	bl	109bc <strcmp@plt>
   11250:	cmp	r0, #0
   11254:	bne	11550 <getc@plt+0xa5c>
   11258:	ldr	r0, [fp, #-12]
   1125c:	ldr	r2, [fp, #-4]
   11260:	sub	r1, fp, #16
   11264:	bl	1165c <getc@plt+0xb68>
   11268:	and	r0, r0, #255	; 0xff
   1126c:	cmp	r0, #0
   11270:	beq	11550 <getc@plt+0xa5c>
   11274:	ldr	r0, [fp, #-12]
   11278:	ldr	r1, [fp, #-4]
   1127c:	add	r2, r1, #4
   11280:	sub	r1, fp, #20
   11284:	bl	1165c <getc@plt+0xb68>
   11288:	and	r0, r0, #255	; 0xff
   1128c:	cmp	r0, #0
   11290:	beq	11550 <getc@plt+0xa5c>
   11294:	ldr	r0, [fp, #-12]
   11298:	bl	11608 <getc@plt+0xb14>
   1129c:	and	r0, r0, #255	; 0xff
   112a0:	cmp	r0, #0
   112a4:	beq	11550 <getc@plt+0xa5c>
   112a8:	ldr	r0, [fp, #-12]
   112ac:	bl	11608 <getc@plt+0xb14>
   112b0:	and	r0, r0, #255	; 0xff
   112b4:	cmp	r0, #0
   112b8:	beq	11550 <getc@plt+0xa5c>
   112bc:	ldr	r0, [fp, #-12]
   112c0:	ldr	r1, [fp, #-4]
   112c4:	add	r2, r1, #8
   112c8:	sub	r1, fp, #24
   112cc:	bl	1165c <getc@plt+0xb68>
   112d0:	and	r0, r0, #255	; 0xff
   112d4:	cmp	r0, #0
   112d8:	beq	11550 <getc@plt+0xa5c>
   112dc:	ldr	r0, [fp, #-12]
   112e0:	ldr	r1, [fp, #-4]
   112e4:	add	r2, r1, #12
   112e8:	sub	r1, fp, #24
   112ec:	bl	1165c <getc@plt+0xb68>
   112f0:	and	r0, r0, #255	; 0xff
   112f4:	cmp	r0, #0
   112f8:	beq	11550 <getc@plt+0xa5c>
   112fc:	ldr	r0, [fp, #-12]
   11300:	ldr	r1, [fp, #-4]
   11304:	add	r2, r1, #16
   11308:	sub	r1, fp, #24
   1130c:	bl	1165c <getc@plt+0xb68>
   11310:	and	r0, r0, #255	; 0xff
   11314:	cmp	r0, #0
   11318:	beq	11550 <getc@plt+0xa5c>
   1131c:	ldr	r0, [fp, #-12]
   11320:	bl	11608 <getc@plt+0xb14>
   11324:	and	r0, r0, #255	; 0xff
   11328:	cmp	r0, #0
   1132c:	beq	11550 <getc@plt+0xa5c>
   11330:	ldr	r0, [fp, #-12]
   11334:	bl	11608 <getc@plt+0xb14>
   11338:	and	r0, r0, #255	; 0xff
   1133c:	cmp	r0, #0
   11340:	beq	11550 <getc@plt+0xa5c>
   11344:	ldr	r0, [fp, #-12]
   11348:	bl	11608 <getc@plt+0xb14>
   1134c:	and	r0, r0, #255	; 0xff
   11350:	cmp	r0, #0
   11354:	beq	11550 <getc@plt+0xa5c>
   11358:	ldr	r0, [fp, #-12]
   1135c:	bl	11608 <getc@plt+0xb14>
   11360:	and	r0, r0, #255	; 0xff
   11364:	cmp	r0, #0
   11368:	beq	11550 <getc@plt+0xa5c>
   1136c:	ldr	r0, [fp, #-12]
   11370:	ldr	r1, [fp, #-4]
   11374:	add	r1, r1, #20
   11378:	bl	116e8 <getc@plt+0xbf4>
   1137c:	and	r0, r0, #255	; 0xff
   11380:	cmp	r0, #0
   11384:	beq	11550 <getc@plt+0xa5c>
   11388:	ldr	r0, [fp, #-12]
   1138c:	ldr	r1, [fp, #-4]
   11390:	add	r1, r1, #36	; 0x24
   11394:	bl	116e8 <getc@plt+0xbf4>
   11398:	and	r0, r0, #255	; 0xff
   1139c:	cmp	r0, #0
   113a0:	beq	11550 <getc@plt+0xa5c>
   113a4:	ldr	r0, [fp, #-12]
   113a8:	ldr	r1, [fp, #-4]
   113ac:	add	r1, r1, #52	; 0x34
   113b0:	bl	116e8 <getc@plt+0xbf4>
   113b4:	and	r0, r0, #255	; 0xff
   113b8:	cmp	r0, #0
   113bc:	beq	11550 <getc@plt+0xa5c>
   113c0:	ldr	r0, [fp, #-12]
   113c4:	bl	11608 <getc@plt+0xb14>
   113c8:	and	r0, r0, #255	; 0xff
   113cc:	cmp	r0, #0
   113d0:	beq	11550 <getc@plt+0xa5c>
   113d4:	b	113d8 <getc@plt+0x8e4>
   113d8:	ldr	r0, [fp, #-12]
   113dc:	bl	11608 <getc@plt+0xb14>
   113e0:	and	r0, r0, #255	; 0xff
   113e4:	cmp	r0, #0
   113e8:	movw	r0, #0
   113ec:	str	r0, [sp, #20]
   113f0:	beq	11410 <getc@plt+0x91c>
   113f4:	ldr	r0, [pc, #484]	; 115e0 <getc@plt+0xaec>
   113f8:	add	r0, pc, r0
   113fc:	ldrb	r0, [r0]
   11400:	cmp	r0, #10
   11404:	movw	r0, #0
   11408:	movne	r0, #1
   1140c:	str	r0, [sp, #20]
   11410:	ldr	r0, [sp, #20]
   11414:	tst	r0, #1
   11418:	beq	11420 <getc@plt+0x92c>
   1141c:	b	113d8 <getc@plt+0x8e4>
   11420:	ldr	r0, [fp, #-20]	; 0xffffffec
   11424:	cmp	r0, #0
   11428:	ble	11484 <getc@plt+0x990>
   1142c:	ldr	r0, [fp, #-12]
   11430:	bl	11608 <getc@plt+0xb14>
   11434:	and	r0, r0, #255	; 0xff
   11438:	cmp	r0, #0
   1143c:	beq	11484 <getc@plt+0x990>
   11440:	b	11444 <getc@plt+0x950>
   11444:	ldr	r0, [fp, #-12]
   11448:	sub	r1, fp, #24
   1144c:	add	r2, sp, #28
   11450:	bl	117bc <getc@plt+0xcc8>
   11454:	sxtb	r0, r0
   11458:	cmp	r0, #0
   1145c:	beq	11480 <getc@plt+0x98c>
   11460:	ldr	r0, [pc, #404]	; 115fc <getc@plt+0xb08>
   11464:	add	r0, pc, r0
   11468:	add	r1, r0, #20
   1146c:	ldr	r0, [fp, #-4]
   11470:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11474:	ldr	r3, [sp, #28]
   11478:	bl	110c0 <getc@plt+0x5cc>
   1147c:	b	11444 <getc@plt+0x950>
   11480:	b	11484 <getc@plt+0x990>
   11484:	ldr	r0, [fp, #-16]
   11488:	cmp	r0, #0
   1148c:	ble	1154c <getc@plt+0xa58>
   11490:	ldr	r0, [fp, #-12]
   11494:	bl	11608 <getc@plt+0xb14>
   11498:	and	r0, r0, #255	; 0xff
   1149c:	cmp	r0, #0
   114a0:	beq	1154c <getc@plt+0xa58>
   114a4:	b	114a8 <getc@plt+0x9b4>
   114a8:	ldr	r0, [fp, #-12]
   114ac:	sub	r1, fp, #24
   114b0:	add	r2, sp, #28
   114b4:	bl	117bc <getc@plt+0xcc8>
   114b8:	sxtb	r0, r0
   114bc:	cmp	r0, #0
   114c0:	beq	11548 <getc@plt+0xa54>
   114c4:	ldr	r0, [pc, #284]	; 115e8 <getc@plt+0xaf4>
   114c8:	add	r0, pc, r0
   114cc:	ldrb	r0, [r0, #31]
   114d0:	cmp	r0, #125	; 0x7d
   114d4:	bne	114ec <getc@plt+0x9f8>
   114d8:	ldr	r0, [pc, #280]	; 115f8 <getc@plt+0xb04>
   114dc:	add	r0, pc, r0
   114e0:	ldrb	r0, [r0, #30]
   114e4:	str	r0, [sp, #24]
   114e8:	b	11530 <getc@plt+0xa3c>
   114ec:	ldr	r0, [pc, #248]	; 115ec <getc@plt+0xaf8>
   114f0:	add	r0, pc, r0
   114f4:	ldrb	r0, [r0, #31]
   114f8:	cmp	r0, #92	; 0x5c
   114fc:	bne	1150c <getc@plt+0xa18>
   11500:	movw	r0, #10
   11504:	str	r0, [sp, #24]
   11508:	b	1152c <getc@plt+0xa38>
   1150c:	ldr	r0, [pc, #220]	; 115f0 <getc@plt+0xafc>
   11510:	add	r0, pc, r0
   11514:	add	r0, r0, #31
   11518:	ldr	r1, [pc, #212]	; 115f4 <getc@plt+0xb00>
   1151c:	add	r1, pc, r1
   11520:	add	r2, sp, #24
   11524:	bl	10aa0 <__isoc99_sscanf@plt>
   11528:	str	r0, [sp, #16]
   1152c:	b	11530 <getc@plt+0xa3c>
   11530:	ldr	r0, [fp, #-4]
   11534:	ldr	r1, [sp, #24]
   11538:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1153c:	ldr	r3, [sp, #28]
   11540:	bl	10ff8 <getc@plt+0x504>
   11544:	b	114a8 <getc@plt+0x9b4>
   11548:	b	1154c <getc@plt+0xa58>
   1154c:	b	115a0 <getc@plt+0xaac>
   11550:	ldr	r0, [fp, #-8]
   11554:	movw	r1, #0
   11558:	cmp	r0, r1
   1155c:	beq	1156c <getc@plt+0xa78>
   11560:	ldr	r0, [fp, #-8]
   11564:	str	r0, [sp, #12]
   11568:	b	1157c <getc@plt+0xa88>
   1156c:	ldr	r0, [pc, #96]	; 115d4 <getc@plt+0xae0>
   11570:	add	r0, pc, r0
   11574:	str	r0, [sp, #12]
   11578:	b	1157c <getc@plt+0xa88>
   1157c:	ldr	r0, [sp, #12]
   11580:	ldr	r1, [pc, #80]	; 115d8 <getc@plt+0xae4>
   11584:	add	r1, pc, r1
   11588:	ldr	r2, [pc, #76]	; 115dc <getc@plt+0xae8>
   1158c:	ldr	r2, [pc, r2]
   11590:	str	r0, [sp, #8]
   11594:	mov	r0, r1
   11598:	ldr	r1, [sp, #8]
   1159c:	blx	r2
   115a0:	ldr	r0, [pc, #60]	; 115e4 <getc@plt+0xaf0>
   115a4:	ldr	r0, [pc, r0]
   115a8:	ldr	r1, [fp, #-12]
   115ac:	str	r0, [sp, #4]
   115b0:	mov	r0, r1
   115b4:	ldr	r1, [sp, #4]
   115b8:	blx	r1
   115bc:	mov	sp, fp
   115c0:	pop	{fp, pc}
   115c4:	andeq	r3, r0, r3, asr #30
   115c8:			; <UNDEFINED> instruction: 0x00014ebc
   115cc:	andeq	r5, r1, r9, asr r3
   115d0:	andeq	r3, r0, fp, lsl #12
   115d4:	strdeq	r3, [r0], -r0
   115d8:	andeq	r3, r0, sl, asr #5
   115dc:	andeq	r4, r1, ip, ror #22
   115e0:	andeq	r5, r1, sp, ror #2
   115e4:	ldrdeq	r4, [r1], -r0
   115e8:	muleq	r1, sp, r0
   115ec:	andeq	r5, r1, r5, ror r0
   115f0:	andeq	r5, r1, r5, asr r0
   115f4:	andeq	r3, r0, lr, lsr #6
   115f8:	andeq	r5, r1, r9, lsl #1
   115fc:	andeq	r5, r1, r1, lsl #2
   11600:	andeq	r5, r1, r5, lsr #6
   11604:	andeq	r3, r0, sl, lsl #29
   11608:	push	{fp, lr}
   1160c:	mov	fp, sp
   11610:	sub	sp, sp, #8
   11614:	ldr	r1, [pc, #60]	; 11658 <getc@plt+0xb64>
   11618:	add	r1, pc, r1
   1161c:	str	r0, [sp, #4]
   11620:	ldr	r2, [sp, #4]
   11624:	mov	r0, r1
   11628:	movw	r1, #99	; 0x63
   1162c:	bl	109ec <fgets@plt>
   11630:	movw	r1, #0
   11634:	cmp	r0, r1
   11638:	movw	r0, #0
   1163c:	movne	r0, #1
   11640:	tst	r0, #1
   11644:	movw	r0, #1
   11648:	moveq	r0, #0
   1164c:	and	r0, r0, #255	; 0xff
   11650:	mov	sp, fp
   11654:	pop	{fp, pc}
   11658:	andeq	r4, r1, sp, asr #30
   1165c:	push	{fp, lr}
   11660:	mov	fp, sp
   11664:	sub	sp, sp, #16
   11668:	str	r0, [sp, #8]
   1166c:	str	r1, [sp, #4]
   11670:	str	r2, [sp]
   11674:	ldr	r0, [sp, #8]
   11678:	bl	11608 <getc@plt+0xb14>
   1167c:	and	r0, r0, #255	; 0xff
   11680:	cmp	r0, #0
   11684:	beq	116cc <getc@plt+0xbd8>
   11688:	ldr	r0, [pc, #80]	; 116e0 <getc@plt+0xbec>
   1168c:	add	r0, pc, r0
   11690:	ldr	r1, [pc, #76]	; 116e4 <getc@plt+0xbf0>
   11694:	add	r1, pc, r1
   11698:	ldr	r2, [sp, #4]
   1169c:	bl	10aa0 <__isoc99_sscanf@plt>
   116a0:	cmp	r0, #1
   116a4:	bne	116cc <getc@plt+0xbd8>
   116a8:	ldr	r0, [sp, #4]
   116ac:	ldr	r0, [r0]
   116b0:	ldr	r1, [sp]
   116b4:	ldr	r2, [r1]
   116b8:	add	r0, r2, r0
   116bc:	str	r0, [r1]
   116c0:	movw	r0, #1
   116c4:	strb	r0, [fp, #-1]
   116c8:	b	116d4 <getc@plt+0xbe0>
   116cc:	movw	r0, #0
   116d0:	strb	r0, [fp, #-1]
   116d4:	ldrb	r0, [fp, #-1]
   116d8:	mov	sp, fp
   116dc:	pop	{fp, pc}
   116e0:	ldrdeq	r4, [r1], -r9
   116e4:	ldrdeq	r3, [r0], -pc	; <UNPREDICTABLE>
   116e8:	push	{fp, lr}
   116ec:	mov	fp, sp
   116f0:	sub	sp, sp, #40	; 0x28
   116f4:	str	r0, [fp, #-8]
   116f8:	str	r1, [fp, #-12]
   116fc:	ldr	r0, [fp, #-8]
   11700:	bl	11608 <getc@plt+0xb14>
   11704:	and	r0, r0, #255	; 0xff
   11708:	cmp	r0, #0
   1170c:	beq	117a0 <getc@plt+0xcac>
   11710:	ldr	r0, [pc, #156]	; 117b4 <getc@plt+0xcc0>
   11714:	add	r0, pc, r0
   11718:	ldr	r1, [pc, #152]	; 117b8 <getc@plt+0xcc4>
   1171c:	add	r1, pc, r1
   11720:	add	r2, sp, #12
   11724:	add	r3, r2, #4
   11728:	add	ip, r2, #8
   1172c:	add	lr, r2, #12
   11730:	str	ip, [sp]
   11734:	str	lr, [sp, #4]
   11738:	bl	10aa0 <__isoc99_sscanf@plt>
   1173c:	cmp	r0, #4
   11740:	bne	117a0 <getc@plt+0xcac>
   11744:	ldr	r0, [sp, #12]
   11748:	ldr	r1, [fp, #-12]
   1174c:	ldr	r2, [r1]
   11750:	add	r0, r2, r0
   11754:	str	r0, [r1]
   11758:	ldr	r0, [sp, #16]
   1175c:	ldr	r1, [fp, #-12]
   11760:	ldr	r2, [r1, #4]
   11764:	add	r0, r2, r0
   11768:	str	r0, [r1, #4]
   1176c:	ldr	r0, [sp, #20]
   11770:	ldr	r1, [fp, #-12]
   11774:	ldr	r2, [r1, #8]
   11778:	add	r0, r2, r0
   1177c:	str	r0, [r1, #8]
   11780:	ldr	r0, [sp, #24]
   11784:	ldr	r1, [fp, #-12]
   11788:	ldr	r2, [r1, #12]
   1178c:	add	r0, r2, r0
   11790:	str	r0, [r1, #12]
   11794:	movw	r0, #1
   11798:	strb	r0, [fp, #-1]
   1179c:	b	117a8 <getc@plt+0xcb4>
   117a0:	movw	r0, #0
   117a4:	strb	r0, [fp, #-1]
   117a8:	ldrb	r0, [fp, #-1]
   117ac:	mov	sp, fp
   117b0:	pop	{fp, pc}
   117b4:	andeq	r4, r1, r1, asr lr
   117b8:	andeq	r3, r0, fp, asr #4
   117bc:	push	{fp, lr}
   117c0:	mov	fp, sp
   117c4:	sub	sp, sp, #16
   117c8:	str	r0, [fp, #-4]
   117cc:	str	r1, [sp, #8]
   117d0:	str	r2, [sp, #4]
   117d4:	ldr	r0, [fp, #-4]
   117d8:	bl	11608 <getc@plt+0xb14>
   117dc:	and	r0, r0, #255	; 0xff
   117e0:	cmp	r0, #0
   117e4:	movw	r0, #0
   117e8:	str	r0, [sp]
   117ec:	beq	1181c <getc@plt+0xd28>
   117f0:	ldr	r0, [pc, #64]	; 11838 <getc@plt+0xd44>
   117f4:	add	r0, pc, r0
   117f8:	ldr	r1, [pc, #60]	; 1183c <getc@plt+0xd48>
   117fc:	add	r1, pc, r1
   11800:	ldr	r2, [sp, #8]
   11804:	ldr	r3, [sp, #4]
   11808:	bl	10aa0 <__isoc99_sscanf@plt>
   1180c:	cmp	r0, #2
   11810:	movw	r0, #0
   11814:	moveq	r0, #1
   11818:	str	r0, [sp]
   1181c:	ldr	r0, [sp]
   11820:	tst	r0, #1
   11824:	movw	r0, #1
   11828:	moveq	r0, #0
   1182c:	and	r0, r0, #255	; 0xff
   11830:	mov	sp, fp
   11834:	pop	{fp, pc}
   11838:	andeq	r4, r1, r1, ror sp
   1183c:	andeq	r3, r0, r3, ror r1
   11840:	push	{fp, lr}
   11844:	mov	fp, sp
   11848:	sub	sp, sp, #80	; 0x50
   1184c:	ldr	r2, [pc, #1172]	; 11ce8 <getc@plt+0x11f4>
   11850:	add	r2, pc, r2
   11854:	ldr	r3, [pc, #1168]	; 11cec <getc@plt+0x11f8>
   11858:	ldr	r3, [pc, r3]
   1185c:	str	r0, [fp, #-4]
   11860:	str	r1, [fp, #-8]
   11864:	ldr	r0, [fp, #-8]
   11868:	mov	r1, r2
   1186c:	blx	r3
   11870:	ldr	r1, [pc, #1124]	; 11cdc <getc@plt+0x11e8>
   11874:	add	r1, pc, r1
   11878:	ldr	r2, [pc, #1120]	; 11ce0 <getc@plt+0x11ec>
   1187c:	add	r2, pc, r2
   11880:	ldr	r3, [pc, #1116]	; 11ce4 <getc@plt+0x11f0>
   11884:	add	r3, pc, r3
   11888:	str	r0, [fp, #-12]
   1188c:	ldr	r0, [fp, #-12]
   11890:	bl	10a94 <fprintf@plt>
   11894:	ldr	r1, [pc, #1084]	; 11cd8 <getc@plt+0x11e4>
   11898:	add	r2, pc, r1
   1189c:	ldr	r1, [fp, #-12]
   118a0:	ldr	r3, [fp, #-4]
   118a4:	ldr	r3, [r3]
   118a8:	str	r0, [fp, #-20]	; 0xffffffec
   118ac:	mov	r0, r1
   118b0:	mov	r1, r3
   118b4:	bl	11d14 <getc@plt+0x1220>
   118b8:	ldr	r0, [pc, #1044]	; 11cd4 <getc@plt+0x11e0>
   118bc:	add	r2, pc, r0
   118c0:	ldr	r0, [fp, #-12]
   118c4:	ldr	r1, [fp, #-4]
   118c8:	ldr	r1, [r1, #4]
   118cc:	bl	11d14 <getc@plt+0x1220>
   118d0:	ldr	r0, [fp, #-12]
   118d4:	ldr	r1, [fp, #-4]
   118d8:	ldr	r1, [r1]
   118dc:	ldr	r2, [fp, #-4]
   118e0:	ldr	r2, [r2, #4]
   118e4:	sub	r1, r1, r2
   118e8:	ldr	r2, [fp, #-4]
   118ec:	ldr	r2, [r2]
   118f0:	bl	11d60 <getc@plt+0x126c>
   118f4:	ldr	r0, [pc, #980]	; 11cd0 <getc@plt+0x11dc>
   118f8:	add	r1, pc, r0
   118fc:	ldr	r0, [fp, #-12]
   11900:	bl	10a94 <fprintf@plt>
   11904:	ldr	r1, [pc, #960]	; 11ccc <getc@plt+0x11d8>
   11908:	add	r2, pc, r1
   1190c:	ldr	r1, [fp, #-12]
   11910:	ldr	r3, [fp, #-4]
   11914:	ldr	r3, [r3, #8]
   11918:	str	r0, [fp, #-24]	; 0xffffffe8
   1191c:	mov	r0, r1
   11920:	mov	r1, r3
   11924:	bl	11d14 <getc@plt+0x1220>
   11928:	ldr	r0, [pc, #920]	; 11cc8 <getc@plt+0x11d4>
   1192c:	add	r2, pc, r0
   11930:	ldr	r0, [fp, #-12]
   11934:	ldr	r1, [fp, #-4]
   11938:	ldr	r1, [r1, #12]
   1193c:	bl	11d14 <getc@plt+0x1220>
   11940:	ldr	r0, [pc, #892]	; 11cc4 <getc@plt+0x11d0>
   11944:	add	r2, pc, r0
   11948:	ldr	r0, [fp, #-12]
   1194c:	ldr	r1, [fp, #-4]
   11950:	ldr	r1, [r1, #16]
   11954:	bl	11d14 <getc@plt+0x1220>
   11958:	ldr	r0, [fp, #-12]
   1195c:	ldr	r1, [fp, #-4]
   11960:	ldr	r1, [r1, #8]
   11964:	ldr	r2, [fp, #-4]
   11968:	ldr	r2, [r2, #12]
   1196c:	add	r1, r1, r2
   11970:	ldr	r2, [fp, #-4]
   11974:	ldr	r2, [r2]
   11978:	bl	11d60 <getc@plt+0x126c>
   1197c:	ldr	r0, [pc, #828]	; 11cc0 <getc@plt+0x11cc>
   11980:	add	r1, pc, r0
   11984:	ldr	r0, [fp, #-12]
   11988:	bl	10a94 <fprintf@plt>
   1198c:	ldr	r1, [fp, #-12]
   11990:	ldr	r2, [fp, #-4]
   11994:	ldr	r2, [r2]
   11998:	ldr	r3, [fp, #-4]
   1199c:	ldr	r3, [r3, #48]	; 0x30
   119a0:	sub	r2, r2, r3
   119a4:	ldr	r3, [fp, #-4]
   119a8:	ldr	r3, [r3]
   119ac:	str	r0, [fp, #-28]	; 0xffffffe4
   119b0:	mov	r0, r1
   119b4:	mov	r1, r2
   119b8:	mov	r2, r3
   119bc:	bl	11d60 <getc@plt+0x126c>
   119c0:	ldr	r0, [pc, #756]	; 11cbc <getc@plt+0x11c8>
   119c4:	add	r1, pc, r0
   119c8:	ldr	r0, [fp, #-12]
   119cc:	bl	10a94 <fprintf@plt>
   119d0:	ldr	r1, [pc, #736]	; 11cb8 <getc@plt+0x11c4>
   119d4:	add	r1, pc, r1
   119d8:	ldr	r2, [fp, #-12]
   119dc:	str	r0, [fp, #-32]	; 0xffffffe0
   119e0:	mov	r0, r2
   119e4:	bl	10a94 <fprintf@plt>
   119e8:	ldr	r1, [pc, #708]	; 11cb4 <getc@plt+0x11c0>
   119ec:	add	r2, pc, r1
   119f0:	ldr	r1, [fp, #-12]
   119f4:	ldr	r3, [fp, #-4]
   119f8:	add	r3, r3, #20
   119fc:	str	r0, [fp, #-36]	; 0xffffffdc
   11a00:	mov	r0, r1
   11a04:	mov	r1, r3
   11a08:	bl	11df0 <getc@plt+0x12fc>
   11a0c:	ldr	r0, [pc, #668]	; 11cb0 <getc@plt+0x11bc>
   11a10:	add	r2, pc, r0
   11a14:	ldr	r0, [fp, #-12]
   11a18:	ldr	r1, [fp, #-4]
   11a1c:	add	r1, r1, #36	; 0x24
   11a20:	bl	11df0 <getc@plt+0x12fc>
   11a24:	ldr	r0, [pc, #640]	; 11cac <getc@plt+0x11b8>
   11a28:	add	r2, pc, r0
   11a2c:	ldr	r0, [fp, #-12]
   11a30:	ldr	r1, [fp, #-4]
   11a34:	add	r1, r1, #52	; 0x34
   11a38:	bl	11df0 <getc@plt+0x12fc>
   11a3c:	ldr	r0, [pc, #612]	; 11ca8 <getc@plt+0x11b4>
   11a40:	add	r1, pc, r0
   11a44:	ldr	r0, [fp, #-12]
   11a48:	bl	10a94 <fprintf@plt>
   11a4c:	movw	r1, #0
   11a50:	str	r1, [fp, #-16]
   11a54:	str	r0, [sp, #40]	; 0x28
   11a58:	ldr	r0, [fp, #-16]
   11a5c:	cmp	r0, #256	; 0x100
   11a60:	bge	11ae8 <getc@plt+0xff4>
   11a64:	ldr	r0, [fp, #-4]
   11a68:	add	r0, r0, #68	; 0x44
   11a6c:	ldr	r1, [fp, #-16]
   11a70:	add	r0, r0, r1, lsl #3
   11a74:	ldr	r0, [r0]
   11a78:	cmp	r0, #0
   11a7c:	ble	11ad4 <getc@plt+0xfe0>
   11a80:	ldr	r0, [pc, #648]	; 11d10 <getc@plt+0x121c>
   11a84:	ldr	r0, [pc, r0]
   11a88:	ldr	r1, [fp, #-12]
   11a8c:	ldr	r2, [fp, #-4]
   11a90:	add	r2, r2, #68	; 0x44
   11a94:	ldr	r3, [fp, #-16]
   11a98:	add	r2, r2, r3, lsl #3
   11a9c:	ldr	r3, [fp, #-16]
   11aa0:	str	r0, [sp, #36]	; 0x24
   11aa4:	mov	r0, r3
   11aa8:	ldr	r3, [sp, #36]	; 0x24
   11aac:	str	r2, [sp, #32]
   11ab0:	str	r1, [sp, #28]
   11ab4:	blx	r3
   11ab8:	ldr	r1, [sp, #28]
   11abc:	str	r0, [sp, #24]
   11ac0:	mov	r0, r1
   11ac4:	ldr	r1, [sp, #32]
   11ac8:	ldr	r2, [sp, #24]
   11acc:	movw	r3, #0
   11ad0:	bl	11e64 <getc@plt+0x1370>
   11ad4:	b	11ad8 <getc@plt+0xfe4>
   11ad8:	ldr	r0, [fp, #-16]
   11adc:	add	r0, r0, #1
   11ae0:	str	r0, [fp, #-16]
   11ae4:	b	11a58 <getc@plt+0xf64>
   11ae8:	ldr	r0, [pc, #512]	; 11cf0 <getc@plt+0x11fc>
   11aec:	add	r2, pc, r0
   11af0:	ldr	r0, [fp, #-12]
   11af4:	ldr	r1, [fp, #-4]
   11af8:	movw	r3, #2116	; 0x844
   11afc:	add	r1, r1, r3
   11b00:	movw	r3, #0
   11b04:	bl	11e64 <getc@plt+0x1370>
   11b08:	ldr	r0, [fp, #-4]
   11b0c:	ldr	r0, [r0, #4]
   11b10:	cmp	r0, #0
   11b14:	ble	11bec <getc@plt+0x10f8>
   11b18:	ldr	r0, [pc, #480]	; 11d00 <getc@plt+0x120c>
   11b1c:	ldr	r0, [pc, r0]
   11b20:	ldr	r1, [fp, #-4]
   11b24:	movw	r2, #2124	; 0x84c
   11b28:	add	r1, r1, r2
   11b2c:	str	r0, [sp, #20]
   11b30:	mov	r0, r1
   11b34:	ldr	r1, [sp, #20]
   11b38:	blx	r1
   11b3c:	ldr	r0, [pc, #436]	; 11cf8 <getc@plt+0x1204>
   11b40:	add	r0, pc, r0
   11b44:	ldr	r1, [pc, #432]	; 11cfc <getc@plt+0x1208>
   11b48:	ldr	r1, [pc, r1]
   11b4c:	ldr	r2, [fp, #-4]
   11b50:	add	r2, r2, #10176	; 0x27c0
   11b54:	ldr	r2, [r2]
   11b58:	ldr	lr, [fp, #-4]
   11b5c:	movw	r3, #10172	; 0x27bc
   11b60:	add	r3, lr, r3
   11b64:	ldr	r3, [r3]
   11b68:	str	r0, [sp, #16]
   11b6c:	mov	r0, r2
   11b70:	str	r1, [sp, #12]
   11b74:	mov	r1, r3
   11b78:	ldr	r2, [sp, #16]
   11b7c:	ldr	r3, [sp, #12]
   11b80:	blx	r3
   11b84:	ldr	r0, [pc, #360]	; 11cf4 <getc@plt+0x1200>
   11b88:	add	r1, pc, r0
   11b8c:	ldr	r0, [fp, #-12]
   11b90:	bl	10a94 <fprintf@plt>
   11b94:	movw	r1, #0
   11b98:	str	r1, [fp, #-16]
   11b9c:	str	r0, [sp, #8]
   11ba0:	ldr	r0, [fp, #-16]
   11ba4:	ldr	r1, [fp, #-4]
   11ba8:	add	r1, r1, #10176	; 0x27c0
   11bac:	ldr	r1, [r1]
   11bb0:	cmp	r0, r1
   11bb4:	bge	11be8 <getc@plt+0x10f4>
   11bb8:	ldr	r0, [fp, #-12]
   11bbc:	ldr	r1, [fp, #-4]
   11bc0:	movw	r2, #10172	; 0x27bc
   11bc4:	ldr	r1, [r1, r2]
   11bc8:	ldr	r2, [fp, #-16]
   11bcc:	add	r1, r1, r2, lsl #2
   11bd0:	ldr	r1, [r1]
   11bd4:	bl	12018 <getc@plt+0x1524>
   11bd8:	ldr	r0, [fp, #-16]
   11bdc:	add	r0, r0, #1
   11be0:	str	r0, [fp, #-16]
   11be4:	b	11ba0 <getc@plt+0x10ac>
   11be8:	b	11bec <getc@plt+0x10f8>
   11bec:	ldr	r0, [fp, #-4]
   11bf0:	ldr	r0, [r0]
   11bf4:	cmp	r0, #0
   11bf8:	ble	11c84 <getc@plt+0x1190>
   11bfc:	ldr	r0, [pc, #256]	; 11d04 <getc@plt+0x1210>
   11c00:	add	r1, pc, r0
   11c04:	ldr	r0, [fp, #-12]
   11c08:	bl	10a94 <fprintf@plt>
   11c0c:	movw	r1, #0
   11c10:	str	r1, [fp, #-16]
   11c14:	str	r0, [sp, #4]
   11c18:	ldr	r0, [pc, #232]	; 11d08 <getc@plt+0x1214>
   11c1c:	ldr	r1, [fp, #-16]
   11c20:	cmp	r1, r0
   11c24:	bge	11c80 <getc@plt+0x118c>
   11c28:	ldr	r0, [fp, #-4]
   11c2c:	movw	r1, #10180	; 0x27c4
   11c30:	add	r0, r0, r1
   11c34:	ldr	r1, [fp, #-16]
   11c38:	add	r0, r0, r1, lsl #3
   11c3c:	ldr	r0, [r0]
   11c40:	cmp	r0, #0
   11c44:	ble	11c6c <getc@plt+0x1178>
   11c48:	ldr	r0, [fp, #-12]
   11c4c:	ldr	r1, [fp, #-4]
   11c50:	movw	r2, #10180	; 0x27c4
   11c54:	add	r1, r1, r2
   11c58:	ldr	r2, [fp, #-16]
   11c5c:	add	r1, r1, r2, lsl #3
   11c60:	ldr	r3, [fp, #-16]
   11c64:	movw	r2, #0
   11c68:	bl	11e64 <getc@plt+0x1370>
   11c6c:	b	11c70 <getc@plt+0x117c>
   11c70:	ldr	r0, [fp, #-16]
   11c74:	add	r0, r0, #1
   11c78:	str	r0, [fp, #-16]
   11c7c:	b	11c18 <getc@plt+0x1124>
   11c80:	b	11c84 <getc@plt+0x1190>
   11c84:	ldr	r0, [pc, #128]	; 11d0c <getc@plt+0x1218>
   11c88:	ldr	r0, [pc, r0]
   11c8c:	ldr	r1, [fp, #-12]
   11c90:	str	r0, [sp]
   11c94:	mov	r0, r1
   11c98:	ldr	r1, [sp]
   11c9c:	blx	r1
   11ca0:	mov	sp, fp
   11ca4:	pop	{fp, pc}
   11ca8:	andeq	r2, r0, r1, ror #29
   11cac:	strdeq	r2, [r0], -r3
   11cb0:	andeq	r2, r0, r2, lsl #30
   11cb4:	andeq	r2, r0, pc, lsl pc
   11cb8:	andeq	r2, r0, r1, lsl pc
   11cbc:	andeq	r2, r0, r2, lsl #30
   11cc0:	andeq	r2, r0, pc, lsr #30
   11cc4:	andeq	r2, r0, pc, asr pc
   11cc8:	andeq	r2, r0, r7, ror #30
   11ccc:	andeq	r2, r0, r9, ror pc
   11cd0:	andeq	r2, r0, sl, ror pc
   11cd4:	andeq	r2, r0, pc, lsr #31
   11cd8:	andeq	r3, r0, r2, lsl #4
   11cdc:	strdeq	r2, [r0], -r2	; <UNPREDICTABLE>
   11ce0:	andeq	r2, r0, r3, lsr #31
   11ce4:	andeq	r3, r0, lr, asr #16
   11ce8:	andeq	r3, r0, r8, asr r3
   11cec:	andeq	r4, r1, ip, lsr r8
   11cf0:	andeq	r2, r0, pc, lsr #28
   11cf4:			; <UNDEFINED> instruction: 0x00002db7
   11cf8:	andeq	r0, r0, r4, lsl r4
   11cfc:	andeq	r4, r1, r8, asr r5
   11d00:	andeq	r4, r1, ip, lsl #11
   11d04:	andeq	r2, r0, r1, lsr #26
   11d08:			; <UNDEFINED> instruction: 0x0010ffff
   11d0c:	andeq	r4, r1, ip, ror #7
   11d10:	andeq	r4, r1, r0, lsr r6
   11d14:	push	{fp, lr}
   11d18:	mov	fp, sp
   11d1c:	sub	sp, sp, #24
   11d20:	ldr	r3, [pc, #52]	; 11d5c <getc@plt+0x1268>
   11d24:	add	r3, pc, r3
   11d28:	str	r0, [fp, #-4]
   11d2c:	str	r1, [fp, #-8]
   11d30:	str	r2, [sp, #12]
   11d34:	ldr	r0, [fp, #-4]
   11d38:	ldr	r2, [fp, #-8]
   11d3c:	ldr	r1, [sp, #12]
   11d40:	str	r1, [sp, #8]
   11d44:	mov	r1, r3
   11d48:	ldr	r3, [sp, #8]
   11d4c:	bl	10a94 <fprintf@plt>
   11d50:	str	r0, [sp, #4]
   11d54:	mov	sp, fp
   11d58:	pop	{fp, pc}
   11d5c:	andeq	r2, r0, r1, ror ip
   11d60:	push	{fp, lr}
   11d64:	mov	fp, sp
   11d68:	sub	sp, sp, #24
   11d6c:	str	r0, [fp, #-4]
   11d70:	str	r1, [fp, #-8]
   11d74:	str	r2, [sp, #12]
   11d78:	ldr	r0, [sp, #12]
   11d7c:	cmp	r0, #0
   11d80:	bne	11d9c <getc@plt+0x12a8>
   11d84:	ldr	r0, [pc, #96]	; 11dec <getc@plt+0x12f8>
   11d88:	add	r1, pc, r0
   11d8c:	ldr	r0, [fp, #-4]
   11d90:	bl	10a94 <fprintf@plt>
   11d94:	str	r0, [sp, #8]
   11d98:	b	11dd8 <getc@plt+0x12e4>
   11d9c:	ldr	r0, [pc, #68]	; 11de8 <getc@plt+0x12f4>
   11da0:	add	r1, pc, r0
   11da4:	vldr	d16, [pc, #52]	; 11de0 <getc@plt+0x12ec>
   11da8:	ldr	r0, [fp, #-4]
   11dac:	ldr	r2, [fp, #-8]
   11db0:	vmov	s0, r2
   11db4:	vcvt.f64.s32	d17, s0
   11db8:	vmul.f64	d16, d16, d17
   11dbc:	ldr	r2, [sp, #12]
   11dc0:	vmov	s0, r2
   11dc4:	vcvt.f64.s32	d17, s0
   11dc8:	vdiv.f64	d16, d16, d17
   11dcc:	vmov	r2, r3, d16
   11dd0:	bl	10a94 <fprintf@plt>
   11dd4:	str	r0, [sp, #4]
   11dd8:	mov	sp, fp
   11ddc:	pop	{fp, pc}
   11de0:	andeq	r0, r0, r0
   11de4:	subsmi	r0, r9, r0
   11de8:	andeq	r2, r0, r0, ror #23
   11dec:	andeq	r2, r0, pc, ror #23
   11df0:	push	{r4, sl, fp, lr}
   11df4:	add	fp, sp, #8
   11df8:	sub	sp, sp, #32
   11dfc:	ldr	r3, [pc, #92]	; 11e60 <getc@plt+0x136c>
   11e00:	add	r3, pc, r3
   11e04:	str	r0, [fp, #-12]
   11e08:	str	r1, [fp, #-16]
   11e0c:	str	r2, [sp, #20]
   11e10:	ldr	r0, [fp, #-12]
   11e14:	ldr	r1, [fp, #-16]
   11e18:	ldr	r2, [r1]
   11e1c:	ldr	r1, [fp, #-16]
   11e20:	ldr	r1, [r1, #4]
   11e24:	ldr	ip, [fp, #-16]
   11e28:	ldr	ip, [ip, #8]
   11e2c:	ldr	lr, [fp, #-16]
   11e30:	ldr	lr, [lr, #12]
   11e34:	ldr	r4, [sp, #20]
   11e38:	str	r1, [sp, #16]
   11e3c:	mov	r1, r3
   11e40:	ldr	r3, [sp, #16]
   11e44:	str	ip, [sp]
   11e48:	str	lr, [sp, #4]
   11e4c:	str	r4, [sp, #8]
   11e50:	bl	10a94 <fprintf@plt>
   11e54:	str	r0, [sp, #12]
   11e58:	sub	sp, fp, #8
   11e5c:	pop	{r4, sl, fp, pc}
   11e60:	andeq	r2, r0, r6, lsl #23
   11e64:	push	{fp, lr}
   11e68:	mov	fp, sp
   11e6c:	sub	sp, sp, #48	; 0x30
   11e70:	ldr	ip, [pc, #212]	; 11f4c <getc@plt+0x1458>
   11e74:	add	ip, pc, ip
   11e78:	str	r0, [fp, #-4]
   11e7c:	str	r1, [fp, #-8]
   11e80:	str	r2, [fp, #-12]
   11e84:	str	r3, [fp, #-16]
   11e88:	ldr	r0, [fp, #-4]
   11e8c:	ldr	r1, [fp, #-8]
   11e90:	ldr	r2, [r1]
   11e94:	ldr	r1, [fp, #-8]
   11e98:	ldr	r3, [r1, #4]
   11e9c:	mov	r1, ip
   11ea0:	bl	10a94 <fprintf@plt>
   11ea4:	ldr	r1, [fp, #-4]
   11ea8:	ldr	r2, [fp, #-8]
   11eac:	ldr	r2, [r2]
   11eb0:	ldr	r3, [fp, #-8]
   11eb4:	ldr	r3, [r3, #4]
   11eb8:	sub	r2, r2, r3
   11ebc:	ldr	r3, [fp, #-8]
   11ec0:	ldr	r3, [r3]
   11ec4:	str	r0, [sp, #16]
   11ec8:	mov	r0, r1
   11ecc:	mov	r1, r2
   11ed0:	mov	r2, r3
   11ed4:	bl	11d60 <getc@plt+0x126c>
   11ed8:	ldr	r0, [fp, #-12]
   11edc:	movw	r1, #0
   11ee0:	cmp	r0, r1
   11ee4:	beq	11f04 <getc@plt+0x1410>
   11ee8:	ldr	r0, [pc, #104]	; 11f58 <getc@plt+0x1464>
   11eec:	add	r1, pc, r0
   11ef0:	ldr	r0, [fp, #-4]
   11ef4:	ldr	r2, [fp, #-12]
   11ef8:	bl	10a94 <fprintf@plt>
   11efc:	str	r0, [sp, #12]
   11f00:	b	11f44 <getc@plt+0x1450>
   11f04:	ldr	r0, [pc, #72]	; 11f54 <getc@plt+0x1460>
   11f08:	ldr	r0, [pc, r0]
   11f0c:	add	r2, sp, #23
   11f10:	ldr	r1, [fp, #-16]
   11f14:	movw	r3, #0
   11f18:	str	r0, [sp, #8]
   11f1c:	mov	r0, r3
   11f20:	movw	r3, #1
   11f24:	ldr	ip, [sp, #8]
   11f28:	blx	ip
   11f2c:	ldr	r0, [pc, #28]	; 11f50 <getc@plt+0x145c>
   11f30:	add	r1, pc, r0
   11f34:	add	r2, sp, #23
   11f38:	ldr	r0, [fp, #-4]
   11f3c:	bl	10a94 <fprintf@plt>
   11f40:	str	r0, [sp, #4]
   11f44:	mov	sp, fp
   11f48:	pop	{fp, pc}
   11f4c:	andeq	r2, r0, r0, asr #18
   11f50:	andeq	r2, r0, r0, ror sl
   11f54:	ldrdeq	r4, [r1], -ip
   11f58:	andeq	r2, r0, sp, lsr #21
   11f5c:	push	{fp, lr}
   11f60:	mov	fp, sp
   11f64:	sub	sp, sp, #16
   11f68:	str	r0, [sp, #8]
   11f6c:	str	r1, [sp, #4]
   11f70:	ldr	r0, [sp, #8]
   11f74:	ldr	r0, [r0, #12]
   11f78:	ldr	r1, [sp, #4]
   11f7c:	ldr	r1, [r1, #12]
   11f80:	cmp	r0, r1
   11f84:	beq	11fa4 <getc@plt+0x14b0>
   11f88:	ldr	r0, [sp, #4]
   11f8c:	ldr	r0, [r0, #12]
   11f90:	ldr	r1, [sp, #8]
   11f94:	ldr	r1, [r1, #12]
   11f98:	sub	r0, r0, r1
   11f9c:	str	r0, [fp, #-4]
   11fa0:	b	12008 <getc@plt+0x1514>
   11fa4:	ldr	r0, [sp, #8]
   11fa8:	ldr	r0, [r0, #16]
   11fac:	ldr	r1, [sp, #4]
   11fb0:	ldr	r1, [r1, #16]
   11fb4:	cmp	r0, r1
   11fb8:	beq	11fd8 <getc@plt+0x14e4>
   11fbc:	ldr	r0, [sp, #4]
   11fc0:	ldr	r0, [r0, #16]
   11fc4:	ldr	r1, [sp, #8]
   11fc8:	ldr	r1, [r1, #16]
   11fcc:	sub	r0, r0, r1
   11fd0:	str	r0, [fp, #-4]
   11fd4:	b	12008 <getc@plt+0x1514>
   11fd8:	ldr	r0, [pc, #52]	; 12014 <getc@plt+0x1520>
   11fdc:	ldr	r0, [pc, r0]
   11fe0:	ldr	r1, [sp, #8]
   11fe4:	ldr	r1, [r1, #8]
   11fe8:	ldr	r2, [sp, #4]
   11fec:	ldr	r2, [r2, #8]
   11ff0:	str	r0, [sp]
   11ff4:	mov	r0, r1
   11ff8:	mov	r1, r2
   11ffc:	ldr	r2, [sp]
   12000:	blx	r2
   12004:	str	r0, [fp, #-4]
   12008:	ldr	r0, [fp, #-4]
   1200c:	mov	sp, fp
   12010:	pop	{fp, pc}
   12014:	andeq	r4, r1, ip, lsl #2
   12018:	push	{fp, lr}
   1201c:	mov	fp, sp
   12020:	sub	sp, sp, #24
   12024:	ldr	r2, [pc, #68]	; 12070 <getc@plt+0x157c>
   12028:	add	r2, pc, r2
   1202c:	str	r0, [fp, #-4]
   12030:	str	r1, [fp, #-8]
   12034:	ldr	r0, [fp, #-4]
   12038:	ldr	r1, [fp, #-8]
   1203c:	ldr	r1, [r1, #12]
   12040:	ldr	r3, [fp, #-8]
   12044:	ldr	r3, [r3, #16]
   12048:	ldr	ip, [fp, #-8]
   1204c:	ldr	ip, [ip, #8]
   12050:	str	r1, [sp, #12]
   12054:	mov	r1, r2
   12058:	ldr	r2, [sp, #12]
   1205c:	str	ip, [sp]
   12060:	bl	10a94 <fprintf@plt>
   12064:	str	r0, [sp, #8]
   12068:	mov	sp, fp
   1206c:	pop	{fp, pc}
   12070:	andeq	r2, r0, r1, lsl #19
   12074:	push	{fp, lr}
   12078:	mov	fp, sp
   1207c:	sub	sp, sp, #16
   12080:	str	r0, [fp, #-4]
   12084:	str	r1, [sp, #8]
   12088:	str	r2, [sp, #4]
   1208c:	ldr	r0, [fp, #-4]
   12090:	cmp	r0, #2
   12094:	bge	1209c <getc@plt+0x15a8>
   12098:	b	120cc <getc@plt+0x15d8>
   1209c:	ldr	r0, [pc, #48]	; 120d4 <getc@plt+0x15e0>
   120a0:	add	r0, pc, r0
   120a4:	ldr	r1, [pc, #44]	; 120d8 <getc@plt+0x15e4>
   120a8:	add	r1, pc, r1
   120ac:	ldr	r2, [sp, #8]
   120b0:	str	r2, [r1]
   120b4:	ldr	r1, [sp, #4]
   120b8:	str	r1, [r0]
   120bc:	ldr	r0, [fp, #-4]
   120c0:	sub	r1, r0, #1
   120c4:	movw	r0, #0
   120c8:	bl	120dc <getc@plt+0x15e8>
   120cc:	mov	sp, fp
   120d0:	pop	{fp, pc}
   120d4:	andeq	r4, r1, r0, lsr r5
   120d8:	andeq	r4, r1, r4, lsr #10
   120dc:	push	{fp, lr}
   120e0:	mov	fp, sp
   120e4:	sub	sp, sp, #40	; 0x28
   120e8:	str	r0, [fp, #-4]
   120ec:	str	r1, [fp, #-8]
   120f0:	ldr	r0, [fp, #-4]
   120f4:	str	r0, [fp, #-12]
   120f8:	ldr	r0, [fp, #-8]
   120fc:	str	r0, [fp, #-16]
   12100:	ldr	r0, [pc, #500]	; 122fc <getc@plt+0x1808>
   12104:	ldr	r0, [pc, r0]
   12108:	ldr	r1, [fp, #-12]
   1210c:	add	r0, r0, r1, lsl #2
   12110:	ldr	r0, [r0]
   12114:	str	r0, [sp, #20]
   12118:	ldr	r0, [fp, #-12]
   1211c:	ldr	r1, [fp, #-16]
   12120:	cmp	r0, r1
   12124:	bge	12290 <getc@plt+0x179c>
   12128:	b	1212c <getc@plt+0x1638>
   1212c:	ldr	r0, [fp, #-12]
   12130:	ldr	r1, [fp, #-16]
   12134:	cmp	r0, r1
   12138:	movw	r0, #0
   1213c:	str	r0, [sp, #16]
   12140:	bge	12188 <getc@plt+0x1694>
   12144:	ldr	r0, [pc, #436]	; 12300 <getc@plt+0x180c>
   12148:	ldr	r0, [pc, r0]
   1214c:	ldr	r1, [sp, #20]
   12150:	ldr	r2, [pc, #428]	; 12304 <getc@plt+0x1810>
   12154:	ldr	r2, [pc, r2]
   12158:	ldr	r3, [fp, #-16]
   1215c:	add	r2, r2, r3, lsl #2
   12160:	ldr	r2, [r2]
   12164:	str	r0, [sp, #12]
   12168:	mov	r0, r1
   1216c:	mov	r1, r2
   12170:	ldr	r2, [sp, #12]
   12174:	blx	r2
   12178:	cmp	r0, #0
   1217c:	movw	r0, #0
   12180:	movlt	r0, #1
   12184:	str	r0, [sp, #16]
   12188:	ldr	r0, [sp, #16]
   1218c:	tst	r0, #1
   12190:	beq	121a8 <getc@plt+0x16b4>
   12194:	ldr	r0, [fp, #-16]
   12198:	mvn	r1, #0
   1219c:	add	r0, r0, r1
   121a0:	str	r0, [fp, #-16]
   121a4:	b	1212c <getc@plt+0x1638>
   121a8:	ldr	r0, [fp, #-12]
   121ac:	ldr	r1, [fp, #-16]
   121b0:	cmp	r0, r1
   121b4:	beq	121dc <getc@plt+0x16e8>
   121b8:	ldr	r0, [pc, #328]	; 12308 <getc@plt+0x1814>
   121bc:	ldr	r0, [pc, r0]
   121c0:	ldr	r1, [fp, #-16]
   121c4:	ldr	r1, [r0, r1, lsl #2]
   121c8:	ldr	r2, [fp, #-12]
   121cc:	add	r3, r2, #1
   121d0:	str	r3, [fp, #-12]
   121d4:	add	r0, r0, r2, lsl #2
   121d8:	str	r1, [r0]
   121dc:	b	121e0 <getc@plt+0x16ec>
   121e0:	ldr	r0, [fp, #-12]
   121e4:	ldr	r1, [fp, #-16]
   121e8:	cmp	r0, r1
   121ec:	movw	r0, #0
   121f0:	str	r0, [sp, #8]
   121f4:	bge	1223c <getc@plt+0x1748>
   121f8:	ldr	r0, [pc, #268]	; 1230c <getc@plt+0x1818>
   121fc:	ldr	r0, [pc, r0]
   12200:	ldr	r1, [sp, #20]
   12204:	ldr	r2, [pc, #260]	; 12310 <getc@plt+0x181c>
   12208:	ldr	r2, [pc, r2]
   1220c:	ldr	r3, [fp, #-12]
   12210:	add	r2, r2, r3, lsl #2
   12214:	ldr	r2, [r2]
   12218:	str	r0, [sp, #4]
   1221c:	mov	r0, r1
   12220:	mov	r1, r2
   12224:	ldr	r2, [sp, #4]
   12228:	blx	r2
   1222c:	cmp	r0, #0
   12230:	movw	r0, #0
   12234:	movgt	r0, #1
   12238:	str	r0, [sp, #8]
   1223c:	ldr	r0, [sp, #8]
   12240:	tst	r0, #1
   12244:	beq	12258 <getc@plt+0x1764>
   12248:	ldr	r0, [fp, #-12]
   1224c:	add	r0, r0, #1
   12250:	str	r0, [fp, #-12]
   12254:	b	121e0 <getc@plt+0x16ec>
   12258:	ldr	r0, [fp, #-12]
   1225c:	ldr	r1, [fp, #-16]
   12260:	cmp	r0, r1
   12264:	beq	1228c <getc@plt+0x1798>
   12268:	ldr	r0, [pc, #164]	; 12314 <getc@plt+0x1820>
   1226c:	ldr	r0, [pc, r0]
   12270:	ldr	r1, [fp, #-12]
   12274:	ldr	r1, [r0, r1, lsl #2]
   12278:	ldr	r2, [fp, #-16]
   1227c:	sub	r3, r2, #1
   12280:	str	r3, [fp, #-16]
   12284:	add	r0, r0, r2, lsl #2
   12288:	str	r1, [r0]
   1228c:	b	12118 <getc@plt+0x1624>
   12290:	ldr	r0, [sp, #20]
   12294:	ldr	r1, [pc, #124]	; 12318 <getc@plt+0x1824>
   12298:	ldr	r1, [pc, r1]
   1229c:	ldr	r2, [fp, #-16]
   122a0:	add	r1, r1, r2, lsl #2
   122a4:	str	r0, [r1]
   122a8:	ldr	r0, [fp, #-4]
   122ac:	ldr	r1, [fp, #-16]
   122b0:	mvn	r2, #0
   122b4:	add	r1, r1, r2
   122b8:	str	r1, [fp, #-16]
   122bc:	cmp	r0, r1
   122c0:	bge	122d0 <getc@plt+0x17dc>
   122c4:	ldr	r0, [fp, #-4]
   122c8:	ldr	r1, [fp, #-16]
   122cc:	bl	120dc <getc@plt+0x15e8>
   122d0:	ldr	r0, [fp, #-12]
   122d4:	add	r0, r0, #1
   122d8:	str	r0, [fp, #-12]
   122dc:	ldr	r1, [fp, #-8]
   122e0:	cmp	r0, r1
   122e4:	bge	122f4 <getc@plt+0x1800>
   122e8:	ldr	r0, [fp, #-12]
   122ec:	ldr	r1, [fp, #-8]
   122f0:	bl	120dc <getc@plt+0x15e8>
   122f4:	mov	sp, fp
   122f8:	pop	{fp, pc}
   122fc:	andeq	r4, r1, r8, asr #9
   12300:	andeq	r4, r1, r8, lsl #9
   12304:	andeq	r4, r1, r8, ror r4
   12308:	andeq	r4, r1, r0, lsl r4
   1230c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   12310:	andeq	r4, r1, r4, asr #7
   12314:	andeq	r4, r1, r0, ror #6
   12318:	andeq	r4, r1, r4, lsr r3
   1231c:	push	{fp, lr}
   12320:	mov	fp, sp
   12324:	sub	sp, sp, #16
   12328:	str	r0, [fp, #-4]
   1232c:	movw	r0, #0
   12330:	strh	r0, [fp, #-6]
   12334:	ldrsh	r0, [fp, #-6]
   12338:	movw	r1, #503	; 0x1f7
   1233c:	cmp	r0, r1
   12340:	bge	1237c <getc@plt+0x1888>
   12344:	ldr	r0, [pc, #92]	; 123a8 <getc@plt+0x18b4>
   12348:	ldr	r0, [pc, r0]
   1234c:	ldr	r1, [fp, #-4]
   12350:	ldrsh	r2, [fp, #-6]
   12354:	add	r1, r1, r2, lsl #4
   12358:	str	r0, [sp, #4]
   1235c:	mov	r0, r1
   12360:	ldr	r1, [sp, #4]
   12364:	blx	r1
   12368:	ldrh	r0, [fp, #-6]
   1236c:	movw	r1, #1
   12370:	add	r0, r0, r1
   12374:	strh	r0, [fp, #-6]
   12378:	b	12334 <getc@plt+0x1840>
   1237c:	ldr	r0, [fp, #-4]
   12380:	movw	r1, #8048	; 0x1f70
   12384:	add	r0, r0, r1
   12388:	movw	r1, #0
   1238c:	str	r1, [r0]
   12390:	ldr	r0, [fp, #-4]
   12394:	movw	r2, #8052	; 0x1f74
   12398:	add	r0, r0, r2
   1239c:	str	r1, [r0]
   123a0:	mov	sp, fp
   123a4:	pop	{fp, pc}
   123a8:	muleq	r1, r8, sp
   123ac:	push	{fp, lr}
   123b0:	mov	fp, sp
   123b4:	sub	sp, sp, #24
   123b8:	str	r0, [fp, #-4]
   123bc:	str	r1, [fp, #-8]
   123c0:	ldr	r0, [fp, #-4]
   123c4:	ldr	r1, [fp, #-8]
   123c8:	str	r0, [sp, #8]
   123cc:	mov	r0, r1
   123d0:	bl	12450 <getc@plt+0x195c>
   123d4:	mov	r1, r0
   123d8:	ldr	lr, [sp, #8]
   123dc:	add	r0, lr, r0, lsl #4
   123e0:	ldr	r0, [r0]
   123e4:	str	r0, [sp, #12]
   123e8:	str	r1, [sp, #4]
   123ec:	ldr	r0, [sp, #12]
   123f0:	movw	r1, #0
   123f4:	cmp	r0, r1
   123f8:	movw	r0, #0
   123fc:	str	r0, [sp]
   12400:	beq	12424 <getc@plt+0x1930>
   12404:	ldr	r0, [fp, #-8]
   12408:	ldr	r1, [sp, #12]
   1240c:	ldr	r1, [r1, #8]
   12410:	bl	109bc <strcmp@plt>
   12414:	cmp	r0, #0
   12418:	movw	r0, #0
   1241c:	movne	r0, #1
   12420:	str	r0, [sp]
   12424:	ldr	r0, [sp]
   12428:	tst	r0, #1
   1242c:	beq	12444 <getc@plt+0x1950>
   12430:	b	12434 <getc@plt+0x1940>
   12434:	ldr	r0, [sp, #12]
   12438:	ldr	r0, [r0, #4]
   1243c:	str	r0, [sp, #12]
   12440:	b	123ec <getc@plt+0x18f8>
   12444:	ldr	r0, [sp, #12]
   12448:	mov	sp, fp
   1244c:	pop	{fp, pc}
   12450:	sub	sp, sp, #16
   12454:	str	r0, [sp, #12]
   12458:	ldr	r0, [sp, #12]
   1245c:	str	r0, [sp, #8]
   12460:	movw	r0, #0
   12464:	str	r0, [sp]
   12468:	str	r0, [sp, #4]
   1246c:	ldr	r0, [sp, #8]
   12470:	ldr	r1, [sp, #4]
   12474:	add	r0, r0, r1
   12478:	ldrsb	r0, [r0]
   1247c:	cmp	r0, #0
   12480:	beq	124b0 <getc@plt+0x19bc>
   12484:	ldr	r0, [sp, #8]
   12488:	ldr	r1, [sp, #4]
   1248c:	add	r0, r0, r1
   12490:	ldrb	r0, [r0]
   12494:	ldr	r1, [sp]
   12498:	add	r0, r1, r0
   1249c:	str	r0, [sp]
   124a0:	ldr	r0, [sp, #4]
   124a4:	add	r0, r0, #1
   124a8:	str	r0, [sp, #4]
   124ac:	b	1246c <getc@plt+0x1978>
   124b0:	ldr	r0, [sp]
   124b4:	movw	r1, #20065	; 0x4e61
   124b8:	movt	r1, #33354	; 0x824a
   124bc:	smmla	r1, r0, r1, r0
   124c0:	asr	r2, r1, #8
   124c4:	add	r1, r2, r1, lsr #31
   124c8:	movw	r2, #503	; 0x1f7
   124cc:	mls	r0, r1, r2, r0
   124d0:	sxth	r0, r0
   124d4:	add	sp, sp, #16
   124d8:	bx	lr
   124dc:	push	{fp, lr}
   124e0:	mov	fp, sp
   124e4:	sub	sp, sp, #24
   124e8:	ldr	r2, [pc, #112]	; 12560 <getc@plt+0x1a6c>
   124ec:	ldr	r2, [pc, r2]
   124f0:	str	r0, [fp, #-4]
   124f4:	str	r1, [fp, #-8]
   124f8:	ldr	r0, [fp, #-4]
   124fc:	ldr	r1, [fp, #-8]
   12500:	ldr	r1, [r1, #8]
   12504:	str	r0, [sp, #12]
   12508:	mov	r0, r1
   1250c:	str	r2, [sp, #8]
   12510:	bl	12450 <getc@plt+0x195c>
   12514:	mov	r1, r0
   12518:	ldr	r2, [sp, #12]
   1251c:	add	r0, r2, r0, lsl #4
   12520:	ldr	lr, [fp, #-8]
   12524:	str	r1, [sp, #4]
   12528:	mov	r1, lr
   1252c:	ldr	lr, [sp, #8]
   12530:	blx	lr
   12534:	ldr	r0, [fp, #-4]
   12538:	bl	12564 <getc@plt+0x1a70>
   1253c:	ldr	r0, [fp, #-4]
   12540:	movw	r1, #8052	; 0x1f74
   12544:	add	r2, r0, r1
   12548:	ldr	r2, [r2]
   1254c:	add	r2, r2, #1
   12550:	add	r0, r0, r1
   12554:	str	r2, [r0]
   12558:	mov	sp, fp
   1255c:	pop	{fp, pc}
   12560:	muleq	r1, r8, fp
   12564:	push	{fp, lr}
   12568:	mov	fp, sp
   1256c:	sub	sp, sp, #8
   12570:	str	r0, [sp, #4]
   12574:	ldr	r0, [sp, #4]
   12578:	movw	r1, #8048	; 0x1f70
   1257c:	add	r0, r0, r1
   12580:	ldr	r0, [r0]
   12584:	movw	r1, #0
   12588:	cmp	r0, r1
   1258c:	beq	125b8 <getc@plt+0x1ac4>
   12590:	ldr	r0, [sp, #4]
   12594:	movw	r1, #8048	; 0x1f70
   12598:	add	r0, r0, r1
   1259c:	ldr	r0, [r0]
   125a0:	bl	109d4 <free@plt>
   125a4:	ldr	r0, [sp, #4]
   125a8:	movw	r1, #8048	; 0x1f70
   125ac:	add	r0, r0, r1
   125b0:	movw	r1, #0
   125b4:	str	r1, [r0]
   125b8:	mov	sp, fp
   125bc:	pop	{fp, pc}
   125c0:	push	{fp, lr}
   125c4:	mov	fp, sp
   125c8:	sub	sp, sp, #24
   125cc:	ldr	r2, [pc, #116]	; 12648 <getc@plt+0x1b54>
   125d0:	ldr	r2, [pc, r2]
   125d4:	str	r0, [fp, #-4]
   125d8:	str	r1, [fp, #-8]
   125dc:	ldr	r0, [fp, #-4]
   125e0:	ldr	r1, [fp, #-8]
   125e4:	ldr	r1, [r1, #8]
   125e8:	str	r0, [sp, #12]
   125ec:	mov	r0, r1
   125f0:	str	r2, [sp, #8]
   125f4:	bl	12450 <getc@plt+0x195c>
   125f8:	mov	r1, r0
   125fc:	ldr	r2, [sp, #12]
   12600:	add	r0, r2, r0, lsl #4
   12604:	ldr	lr, [fp, #-8]
   12608:	str	r1, [sp, #4]
   1260c:	mov	r1, lr
   12610:	ldr	lr, [sp, #8]
   12614:	blx	lr
   12618:	ldr	r0, [fp, #-4]
   1261c:	bl	12564 <getc@plt+0x1a70>
   12620:	ldr	r0, [fp, #-4]
   12624:	movw	r1, #8052	; 0x1f74
   12628:	add	r2, r0, r1
   1262c:	ldr	r2, [r2]
   12630:	mvn	lr, #0
   12634:	add	r2, r2, lr
   12638:	add	r0, r0, r1
   1263c:	str	r2, [r0]
   12640:	mov	sp, fp
   12644:	pop	{fp, pc}
   12648:	andeq	r3, r1, r0, lsr fp
   1264c:	push	{fp, lr}
   12650:	mov	fp, sp
   12654:	sub	sp, sp, #24
   12658:	str	r0, [fp, #-4]
   1265c:	movw	r0, #0
   12660:	str	r0, [sp, #8]
   12664:	ldr	r1, [fp, #-4]
   12668:	movw	r2, #8048	; 0x1f70
   1266c:	add	r1, r1, r2
   12670:	ldr	r1, [r1]
   12674:	cmp	r1, r0
   12678:	bne	12694 <getc@plt+0x1ba0>
   1267c:	ldr	r0, [fp, #-4]
   12680:	movw	r1, #8052	; 0x1f74
   12684:	add	r0, r0, r1
   12688:	ldr	r0, [r0]
   1268c:	cmp	r0, #0
   12690:	bne	12698 <getc@plt+0x1ba4>
   12694:	b	12758 <getc@plt+0x1c64>
   12698:	ldr	r0, [pc, #192]	; 12760 <getc@plt+0x1c6c>
   1269c:	ldr	r0, [pc, r0]
   126a0:	ldr	r1, [fp, #-4]
   126a4:	movw	r2, #8052	; 0x1f74
   126a8:	add	r1, r1, r2
   126ac:	ldr	r1, [r1]
   126b0:	str	r0, [sp, #4]
   126b4:	mov	r0, r1
   126b8:	movw	r1, #4
   126bc:	ldr	r2, [sp, #4]
   126c0:	blx	r2
   126c4:	ldr	r1, [fp, #-4]
   126c8:	movw	r2, #8048	; 0x1f70
   126cc:	add	r1, r1, r2
   126d0:	str	r0, [r1]
   126d4:	movw	r0, #0
   126d8:	str	r0, [sp, #12]
   126dc:	ldr	r0, [sp, #12]
   126e0:	movw	r1, #503	; 0x1f7
   126e4:	cmp	r0, r1
   126e8:	bge	12758 <getc@plt+0x1c64>
   126ec:	ldr	r0, [fp, #-4]
   126f0:	ldr	r1, [sp, #12]
   126f4:	add	r0, r0, r1, lsl #4
   126f8:	ldr	r0, [r0]
   126fc:	str	r0, [fp, #-8]
   12700:	ldr	r0, [fp, #-8]
   12704:	movw	r1, #0
   12708:	cmp	r0, r1
   1270c:	beq	12744 <getc@plt+0x1c50>
   12710:	ldr	r0, [fp, #-8]
   12714:	ldr	r1, [fp, #-4]
   12718:	movw	r2, #8048	; 0x1f70
   1271c:	ldr	r1, [r1, r2]
   12720:	ldr	r2, [sp, #8]
   12724:	add	r3, r2, #1
   12728:	str	r3, [sp, #8]
   1272c:	add	r1, r1, r2, lsl #2
   12730:	str	r0, [r1]
   12734:	ldr	r0, [fp, #-8]
   12738:	ldr	r0, [r0, #4]
   1273c:	str	r0, [fp, #-8]
   12740:	b	12700 <getc@plt+0x1c0c>
   12744:	b	12748 <getc@plt+0x1c54>
   12748:	ldr	r0, [sp, #12]
   1274c:	add	r0, r0, #1
   12750:	str	r0, [sp, #12]
   12754:	b	126dc <getc@plt+0x1be8>
   12758:	mov	sp, fp
   1275c:	pop	{fp, pc}
   12760:	andeq	r3, r1, r8, asr sl
   12764:	push	{fp, lr}
   12768:	mov	fp, sp
   1276c:	sub	sp, sp, #16
   12770:	str	r0, [fp, #-4]
   12774:	str	r1, [sp, #8]
   12778:	movw	r0, #0
   1277c:	strh	r0, [sp, #6]
   12780:	ldrsh	r0, [sp, #6]
   12784:	movw	r1, #503	; 0x1f7
   12788:	cmp	r0, r1
   1278c:	bge	127d0 <getc@plt+0x1cdc>
   12790:	ldr	r0, [pc, #92]	; 127f4 <getc@plt+0x1d00>
   12794:	ldr	r0, [pc, r0]
   12798:	ldr	r1, [fp, #-4]
   1279c:	ldrsh	r2, [sp, #6]
   127a0:	add	r1, r1, r2, lsl #4
   127a4:	ldr	r2, [sp, #8]
   127a8:	str	r0, [sp]
   127ac:	mov	r0, r1
   127b0:	mov	r1, r2
   127b4:	ldr	r2, [sp]
   127b8:	blx	r2
   127bc:	ldrh	r0, [sp, #6]
   127c0:	movw	r1, #1
   127c4:	add	r0, r0, r1
   127c8:	strh	r0, [sp, #6]
   127cc:	b	12780 <getc@plt+0x1c8c>
   127d0:	ldr	r0, [fp, #-4]
   127d4:	bl	12564 <getc@plt+0x1a70>
   127d8:	ldr	r0, [fp, #-4]
   127dc:	movw	lr, #8052	; 0x1f74
   127e0:	add	r0, r0, lr
   127e4:	movw	lr, #0
   127e8:	str	lr, [r0]
   127ec:	mov	sp, fp
   127f0:	pop	{fp, pc}
   127f4:	andeq	r3, r1, r8, ror #18
   127f8:	push	{fp, lr}
   127fc:	mov	fp, sp
   12800:	sub	sp, sp, #8
   12804:	ldr	r1, [pc, #48]	; 1283c <getc@plt+0x1d48>
   12808:	add	r1, pc, r1
   1280c:	str	r0, [sp, #4]
   12810:	ldrsh	r0, [r1]
   12814:	cmp	r0, #0
   12818:	bne	12820 <getc@plt+0x1d2c>
   1281c:	bl	128e4 <getc@plt+0x1df0>
   12820:	ldr	r0, [pc, #24]	; 12840 <getc@plt+0x1d4c>
   12824:	add	r0, pc, r0
   12828:	ldr	r1, [sp, #4]
   1282c:	add	r0, r0, r1
   12830:	ldrb	r0, [r0]
   12834:	mov	sp, fp
   12838:	pop	{fp, pc}
   1283c:	andeq	r3, r1, ip, asr #27
   12840:			; <UNDEFINED> instruction: 0x00013db2
   12844:	push	{fp, lr}
   12848:	mov	fp, sp
   1284c:	sub	sp, sp, #16
   12850:	ldr	r1, [pc, #116]	; 128cc <getc@plt+0x1dd8>
   12854:	add	r1, pc, r1
   12858:	strb	r0, [fp, #-1]
   1285c:	ldrsh	r0, [r1]
   12860:	cmp	r0, #0
   12864:	bne	1286c <getc@plt+0x1d78>
   12868:	bl	128e4 <getc@plt+0x1df0>
   1286c:	ldr	r0, [pc, #92]	; 128d0 <getc@plt+0x1ddc>
   12870:	add	r0, pc, r0
   12874:	ldrb	r1, [fp, #-1]
   12878:	ldrsh	r0, [r0]
   1287c:	cmp	r1, r0
   12880:	blt	12898 <getc@plt+0x1da4>
   12884:	ldr	r0, [pc, #76]	; 128d8 <getc@plt+0x1de4>
   12888:	add	r0, pc, r0
   1288c:	ldr	r1, [pc, #72]	; 128dc <getc@plt+0x1de8>
   12890:	ldr	r1, [pc, r1]
   12894:	blx	r1
   12898:	ldr	r0, [pc, #52]	; 128d4 <getc@plt+0x1de0>
   1289c:	add	r0, pc, r0
   128a0:	ldrb	r1, [fp, #-1]
   128a4:	mov	r2, r1
   128a8:	ldr	r3, [pc, #48]	; 128e0 <getc@plt+0x1dec>
   128ac:	add	r3, pc, r3
   128b0:	add	r1, r3, r1, lsl #2
   128b4:	ldr	r1, [r1]
   128b8:	str	r0, [sp, #8]
   128bc:	mov	r0, r1
   128c0:	str	r2, [sp, #4]
   128c4:	mov	sp, fp
   128c8:	pop	{fp, pc}
   128cc:	andeq	r3, r1, r0, lsl #27
   128d0:	andeq	r3, r1, r4, ror #26
   128d4:	andseq	r3, r2, ip, lsr sp
   128d8:	andeq	r2, r0, r0, lsr r1
   128dc:	strdeq	r3, [r1], -r8
   128e0:	andseq	r3, r2, ip, lsr #26
   128e4:	push	{fp, lr}
   128e8:	mov	fp, sp
   128ec:	sub	sp, sp, #24
   128f0:	movw	r0, #0
   128f4:	str	r0, [fp, #-4]
   128f8:	ldr	r0, [fp, #-4]
   128fc:	cmp	r0, #91	; 0x5b
   12900:	bcs	12ab0 <getc@plt+0x1fbc>
   12904:	movw	r0, #0
   12908:	str	r0, [fp, #-8]
   1290c:	ldr	r0, [pc, #420]	; 12ab8 <getc@plt+0x1fc4>
   12910:	add	r0, pc, r0
   12914:	ldr	r1, [fp, #-8]
   12918:	ldrsh	r0, [r0]
   1291c:	cmp	r1, r0
   12920:	movw	r0, #0
   12924:	str	r0, [sp, #8]
   12928:	bge	12980 <getc@plt+0x1e8c>
   1292c:	ldr	r0, [pc, #392]	; 12abc <getc@plt+0x1fc8>
   12930:	add	r0, pc, r0
   12934:	ldr	r1, [fp, #-4]
   12938:	add	r1, r1, r1, lsl #1
   1293c:	ldr	r2, [pc, #412]	; 12ae0 <getc@plt+0x1fec>
   12940:	add	r2, pc, r2
   12944:	add	r1, r2, r1, lsl #2
   12948:	ldr	r1, [r1, #8]
   1294c:	ldr	r2, [fp, #-8]
   12950:	ldr	r3, [pc, #396]	; 12ae4 <getc@plt+0x1ff0>
   12954:	add	r3, pc, r3
   12958:	add	r2, r3, r2, lsl #2
   1295c:	ldr	r2, [r2]
   12960:	str	r0, [sp, #4]
   12964:	mov	r0, r1
   12968:	mov	r1, r2
   1296c:	bl	109bc <strcmp@plt>
   12970:	cmp	r0, #0
   12974:	movw	r0, #0
   12978:	movne	r0, #1
   1297c:	str	r0, [sp, #8]
   12980:	ldr	r0, [sp, #8]
   12984:	tst	r0, #1
   12988:	beq	129a0 <getc@plt+0x1eac>
   1298c:	b	12990 <getc@plt+0x1e9c>
   12990:	ldr	r0, [fp, #-8]
   12994:	add	r0, r0, #1
   12998:	str	r0, [fp, #-8]
   1299c:	b	1290c <getc@plt+0x1e18>
   129a0:	ldr	r0, [pc, #280]	; 12ac0 <getc@plt+0x1fcc>
   129a4:	add	r0, pc, r0
   129a8:	ldr	r1, [fp, #-8]
   129ac:	ldrsh	r0, [r0]
   129b0:	cmp	r1, r0
   129b4:	bne	12a2c <getc@plt+0x1f38>
   129b8:	ldr	r0, [pc, #260]	; 12ac4 <getc@plt+0x1fd0>
   129bc:	add	r0, pc, r0
   129c0:	ldrsh	r0, [r0]
   129c4:	cmp	r0, #256	; 0x100
   129c8:	bne	129e0 <getc@plt+0x1eec>
   129cc:	ldr	r0, [pc, #260]	; 12ad8 <getc@plt+0x1fe4>
   129d0:	add	r0, pc, r0
   129d4:	ldr	r1, [pc, #256]	; 12adc <getc@plt+0x1fe8>
   129d8:	ldr	r1, [pc, r1]
   129dc:	blx	r1
   129e0:	ldr	r0, [pc, #224]	; 12ac8 <getc@plt+0x1fd4>
   129e4:	add	r0, pc, r0
   129e8:	ldr	r1, [pc, #248]	; 12ae8 <getc@plt+0x1ff4>
   129ec:	add	r1, pc, r1
   129f0:	ldrh	r2, [r1]
   129f4:	add	r2, r2, #1
   129f8:	strh	r2, [r1]
   129fc:	ldr	r1, [fp, #-4]
   12a00:	add	r1, r1, r1, lsl #1
   12a04:	ldr	r2, [pc, #224]	; 12aec <getc@plt+0x1ff8>
   12a08:	add	r2, pc, r2
   12a0c:	add	r1, r2, r1, lsl #2
   12a10:	ldr	r1, [r1, #8]
   12a14:	ldr	r2, [fp, #-8]
   12a18:	ldr	r3, [pc, #208]	; 12af0 <getc@plt+0x1ffc>
   12a1c:	add	r3, pc, r3
   12a20:	add	r2, r3, r2, lsl #2
   12a24:	str	r1, [r2]
   12a28:	str	r0, [sp]
   12a2c:	ldr	r0, [pc, #152]	; 12acc <getc@plt+0x1fd8>
   12a30:	add	r0, pc, r0
   12a34:	ldr	r1, [fp, #-4]
   12a38:	movw	r2, #12
   12a3c:	mul	r1, r1, r2
   12a40:	add	r0, r0, r1
   12a44:	ldr	r0, [r0]
   12a48:	str	r0, [sp, #12]
   12a4c:	ldr	r0, [pc, #124]	; 12ad0 <getc@plt+0x1fdc>
   12a50:	add	r0, pc, r0
   12a54:	ldr	r1, [sp, #12]
   12a58:	ldr	r2, [fp, #-4]
   12a5c:	movw	r3, #12
   12a60:	mul	r2, r2, r3
   12a64:	add	r0, r0, r2
   12a68:	ldr	r0, [r0, #4]
   12a6c:	cmp	r1, r0
   12a70:	bhi	12a9c <getc@plt+0x1fa8>
   12a74:	ldr	r0, [pc, #88]	; 12ad4 <getc@plt+0x1fe0>
   12a78:	add	r0, pc, r0
   12a7c:	ldr	r1, [fp, #-8]
   12a80:	ldr	r2, [sp, #12]
   12a84:	add	r0, r0, r2
   12a88:	strb	r1, [r0]
   12a8c:	ldr	r0, [sp, #12]
   12a90:	add	r0, r0, #1
   12a94:	str	r0, [sp, #12]
   12a98:	b	12a4c <getc@plt+0x1f58>
   12a9c:	b	12aa0 <getc@plt+0x1fac>
   12aa0:	ldr	r0, [fp, #-4]
   12aa4:	add	r0, r0, #1
   12aa8:	str	r0, [fp, #-4]
   12aac:	b	128f8 <getc@plt+0x1e04>
   12ab0:	mov	sp, fp
   12ab4:	pop	{fp, pc}
   12ab8:	andeq	r3, r1, r4, asr #25
   12abc:	andseq	r3, r2, r8, lsr #25
   12ac0:	andeq	r3, r1, r0, lsr ip
   12ac4:	andeq	r3, r1, r8, lsl ip
   12ac8:			; <UNDEFINED> instruction: 0x00123bf4
   12acc:	andeq	r3, r1, r8, ror #13
   12ad0:	andeq	r3, r1, r8, asr #13
   12ad4:	andeq	r3, r1, lr, asr fp
   12ad8:	andeq	r2, r0, r0
   12adc:			; <UNDEFINED> instruction: 0x000136b0
   12ae0:	ldrdeq	r3, [r1], -r8
   12ae4:	andseq	r3, r2, r4, lsl #25
   12ae8:	andeq	r3, r1, r8, ror #23
   12aec:	andeq	r3, r1, r0, lsl r7
   12af0:			; <UNDEFINED> instruction: 0x00123bbc
   12af4:	push	{fp, lr}
   12af8:	mov	fp, sp
   12afc:	sub	sp, sp, #16
   12b00:	str	r0, [fp, #-4]
   12b04:	str	r1, [sp, #8]
   12b08:	ldr	r0, [fp, #-4]
   12b0c:	ldr	r1, [sp, #8]
   12b10:	bl	109b0 <calloc@plt>
   12b14:	str	r0, [sp, #4]
   12b18:	ldr	r0, [sp, #4]
   12b1c:	movw	r1, #0
   12b20:	cmp	r0, r1
   12b24:	bne	12b34 <getc@plt+0x2040>
   12b28:	ldr	r0, [pc, #16]	; 12b40 <getc@plt+0x204c>
   12b2c:	add	r0, pc, r0
   12b30:	bl	131d4 <error@@Base>
   12b34:	ldr	r0, [sp, #4]
   12b38:	mov	sp, fp
   12b3c:	pop	{fp, pc}
   12b40:	andeq	r2, r0, r2, ror r4
   12b44:	sub	sp, sp, #20
   12b48:	str	r0, [sp, #12]
   12b4c:	str	r1, [sp, #8]
   12b50:	movw	r0, #0
   12b54:	str	r0, [sp, #4]
   12b58:	ldr	r0, [sp, #12]
   12b5c:	ldr	r1, [sp, #4]
   12b60:	add	r0, r0, r1
   12b64:	ldrb	r0, [r0]
   12b68:	cmp	r0, #0
   12b6c:	movw	r0, #0
   12b70:	str	r0, [sp]
   12b74:	beq	12ba8 <getc@plt+0x20b4>
   12b78:	ldr	r0, [sp, #12]
   12b7c:	ldr	r1, [sp, #4]
   12b80:	add	r0, r0, r1
   12b84:	ldrb	r0, [r0]
   12b88:	ldr	r1, [sp, #8]
   12b8c:	ldr	r2, [sp, #4]
   12b90:	add	r1, r1, r2
   12b94:	ldrb	r1, [r1]
   12b98:	cmp	r0, r1
   12b9c:	movw	r0, #0
   12ba0:	moveq	r0, #1
   12ba4:	str	r0, [sp]
   12ba8:	ldr	r0, [sp]
   12bac:	tst	r0, #1
   12bb0:	beq	12bc8 <getc@plt+0x20d4>
   12bb4:	b	12bb8 <getc@plt+0x20c4>
   12bb8:	ldr	r0, [sp, #4]
   12bbc:	add	r0, r0, #1
   12bc0:	str	r0, [sp, #4]
   12bc4:	b	12b58 <getc@plt+0x2064>
   12bc8:	ldr	r0, [sp, #12]
   12bcc:	ldr	r1, [sp, #4]
   12bd0:	add	r0, r0, r1
   12bd4:	ldrb	r0, [r0]
   12bd8:	cmp	r0, #0
   12bdc:	bne	12bf8 <getc@plt+0x2104>
   12be0:	ldr	r0, [sp, #8]
   12be4:	ldr	r1, [sp, #4]
   12be8:	add	r0, r0, r1
   12bec:	ldrb	r0, [r0]
   12bf0:	cmp	r0, #0
   12bf4:	beq	12c38 <getc@plt+0x2144>
   12bf8:	ldr	r0, [sp, #12]
   12bfc:	ldr	r1, [sp, #4]
   12c00:	add	r0, r0, r1
   12c04:	ldrb	r0, [r0]
   12c08:	ldr	r1, [sp, #8]
   12c0c:	ldr	r2, [sp, #4]
   12c10:	add	r1, r1, r2
   12c14:	ldrb	r1, [r1]
   12c18:	cmp	r0, r1
   12c1c:	movw	r0, #0
   12c20:	movlt	r0, #1
   12c24:	tst	r0, #1
   12c28:	mvn	r0, #0
   12c2c:	moveq	r0, #1
   12c30:	str	r0, [sp, #16]
   12c34:	b	12c40 <getc@plt+0x214c>
   12c38:	movw	r0, #0
   12c3c:	str	r0, [sp, #16]
   12c40:	ldr	r0, [sp, #16]
   12c44:	add	sp, sp, #20
   12c48:	bx	lr
   12c4c:	push	{fp, lr}
   12c50:	mov	fp, sp
   12c54:	sub	sp, sp, #24
   12c58:	str	r0, [fp, #-8]
   12c5c:	str	r1, [sp, #12]
   12c60:	ldr	r0, [fp, #-8]
   12c64:	movw	r1, #0
   12c68:	cmp	r0, r1
   12c6c:	bne	12cb0 <getc@plt+0x21bc>
   12c70:	ldr	r0, [sp, #12]
   12c74:	ldrb	r0, [r0]
   12c78:	cmp	r0, #114	; 0x72
   12c7c:	bne	12c94 <getc@plt+0x21a0>
   12c80:	ldr	r0, [pc, #148]	; 12d1c <getc@plt+0x2228>
   12c84:	ldr	r0, [pc, r0]
   12c88:	ldr	r0, [r0]
   12c8c:	str	r0, [sp, #4]
   12c90:	b	12ca4 <getc@plt+0x21b0>
   12c94:	ldr	r0, [pc, #124]	; 12d18 <getc@plt+0x2224>
   12c98:	ldr	r0, [pc, r0]
   12c9c:	ldr	r0, [r0]
   12ca0:	str	r0, [sp, #4]
   12ca4:	ldr	r0, [sp, #4]
   12ca8:	str	r0, [fp, #-4]
   12cac:	b	12d0c <getc@plt+0x2218>
   12cb0:	ldr	r0, [fp, #-8]
   12cb4:	ldr	r1, [sp, #12]
   12cb8:	bl	109c8 <fopen@plt>
   12cbc:	str	r0, [sp, #8]
   12cc0:	ldr	r0, [sp, #8]
   12cc4:	movw	r1, #0
   12cc8:	cmp	r0, r1
   12ccc:	beq	12cdc <getc@plt+0x21e8>
   12cd0:	ldr	r0, [sp, #8]
   12cd4:	str	r0, [fp, #-4]
   12cd8:	b	12d0c <getc@plt+0x2218>
   12cdc:	ldr	r0, [sp, #12]
   12ce0:	ldrb	r0, [r0]
   12ce4:	cmp	r0, #119	; 0x77
   12ce8:	bne	12cfc <getc@plt+0x2208>
   12cec:	ldr	r0, [pc, #48]	; 12d24 <getc@plt+0x2230>
   12cf0:	add	r0, pc, r0
   12cf4:	ldr	r1, [fp, #-8]
   12cf8:	bl	13234 <error@@Base+0x60>
   12cfc:	ldr	r0, [pc, #28]	; 12d20 <getc@plt+0x222c>
   12d00:	add	r0, pc, r0
   12d04:	ldr	r1, [fp, #-8]
   12d08:	bl	13234 <error@@Base+0x60>
   12d0c:	ldr	r0, [fp, #-4]
   12d10:	mov	sp, fp
   12d14:	pop	{fp, pc}
   12d18:	andeq	r3, r1, r4, asr #8
   12d1c:	andeq	r3, r1, ip, asr #8
   12d20:	andeq	r2, r0, lr, asr #5
   12d24:	andeq	r2, r0, r8, asr #5
   12d28:	push	{fp, lr}
   12d2c:	mov	fp, sp
   12d30:	sub	sp, sp, #8
   12d34:	ldr	r1, [pc, #64]	; 12d7c <getc@plt+0x2288>
   12d38:	ldr	r1, [pc, r1]
   12d3c:	str	r0, [sp, #4]
   12d40:	ldr	r0, [sp, #4]
   12d44:	ldr	r1, [r1]
   12d48:	cmp	r0, r1
   12d4c:	beq	12d74 <getc@plt+0x2280>
   12d50:	ldr	r0, [pc, #40]	; 12d80 <getc@plt+0x228c>
   12d54:	ldr	r0, [pc, r0]
   12d58:	ldr	r1, [sp, #4]
   12d5c:	ldr	r0, [r0]
   12d60:	cmp	r1, r0
   12d64:	beq	12d74 <getc@plt+0x2280>
   12d68:	ldr	r0, [sp, #4]
   12d6c:	bl	10aac <fclose@plt>
   12d70:	str	r0, [sp]
   12d74:	mov	sp, fp
   12d78:	pop	{fp, pc}
   12d7c:	muleq	r1, r8, r3
   12d80:	andeq	r3, r1, r8, lsl #7
   12d84:	push	{fp, lr}
   12d88:	mov	fp, sp
   12d8c:	sub	sp, sp, #96	; 0x60
   12d90:	str	r0, [fp, #-4]
   12d94:	ldr	r0, [fp, #-4]
   12d98:	mov	r1, sp
   12d9c:	bl	147a0 <error@@Base+0x15cc>
   12da0:	cmp	r0, #0
   12da4:	movw	r0, #0
   12da8:	moveq	r0, #1
   12dac:	tst	r0, #1
   12db0:	movw	r0, #1
   12db4:	moveq	r0, #0
   12db8:	and	r0, r0, #255	; 0xff
   12dbc:	mov	sp, fp
   12dc0:	pop	{fp, pc}
   12dc4:	push	{fp, lr}
   12dc8:	mov	fp, sp
   12dcc:	sub	sp, sp, #8
   12dd0:	ldr	r0, [pc, #68]	; 12e1c <getc@plt+0x2328>
   12dd4:	add	r0, pc, r0
   12dd8:	ldrh	r1, [r0]
   12ddc:	movw	r2, #1
   12de0:	add	r1, r1, r2
   12de4:	strh	r1, [r0]
   12de8:	sxth	r0, r1
   12dec:	bl	12e20 <getc@plt+0x232c>
   12df0:	ldr	r1, [pc, #32]	; 12e18 <getc@plt+0x2324>
   12df4:	ldr	r1, [pc, r1]
   12df8:	str	r0, [sp, #4]
   12dfc:	ldr	r0, [sp, #4]
   12e00:	blx	r1
   12e04:	ldr	r1, [sp, #4]
   12e08:	str	r0, [sp]
   12e0c:	mov	r0, r1
   12e10:	mov	sp, fp
   12e14:	pop	{fp, pc}
   12e18:	andeq	r3, r1, r4, lsr #5
   12e1c:	andseq	r3, r2, r4, lsl #24
   12e20:	push	{fp, lr}
   12e24:	mov	fp, sp
   12e28:	sub	sp, sp, #128	; 0x80
   12e2c:	ldr	r1, [pc, #112]	; 12ea4 <getc@plt+0x23b0>
   12e30:	ldr	r1, [pc, r1]
   12e34:	ldr	r2, [pc, #108]	; 12ea8 <getc@plt+0x23b4>
   12e38:	ldr	r2, [pc, r2]
   12e3c:	add	r3, sp, #26
   12e40:	strh	r0, [fp, #-2]
   12e44:	ldr	r2, [r2]
   12e48:	str	r3, [sp, #20]
   12e4c:	str	r2, [sp, #16]
   12e50:	blx	r1
   12e54:	ldr	r1, [pc, #68]	; 12ea0 <getc@plt+0x23ac>
   12e58:	add	r1, pc, r1
   12e5c:	ldrsh	r2, [fp, #-2]
   12e60:	ldr	r3, [sp, #20]
   12e64:	str	r0, [sp, #12]
   12e68:	mov	r0, r3
   12e6c:	ldr	lr, [sp, #16]
   12e70:	str	r2, [sp, #8]
   12e74:	mov	r2, lr
   12e78:	ldr	r3, [sp, #12]
   12e7c:	ldr	ip, [sp, #8]
   12e80:	str	ip, [sp]
   12e84:	bl	10ab8 <sprintf@plt>
   12e88:	add	r1, sp, #26
   12e8c:	str	r0, [sp, #4]
   12e90:	mov	r0, r1
   12e94:	bl	10a04 <strdup@plt>
   12e98:	mov	sp, fp
   12e9c:	pop	{fp, pc}
   12ea0:	muleq	r0, pc, r1	; <UNPREDICTABLE>
   12ea4:	muleq	r1, r4, r2
   12ea8:	andeq	r3, r1, r8, lsl #5
   12eac:	push	{fp, lr}
   12eb0:	mov	fp, sp
   12eb4:	sub	sp, sp, #16
   12eb8:	str	r0, [fp, #-4]
   12ebc:	movw	r0, #47	; 0x2f
   12ec0:	strb	r0, [fp, #-5]
   12ec4:	ldr	r0, [fp, #-4]
   12ec8:	bl	10a88 <strlen@plt>
   12ecc:	sub	r0, r0, #1
   12ed0:	strh	r0, [sp, #8]
   12ed4:	ldrsh	r0, [sp, #8]
   12ed8:	cmp	r0, #0
   12edc:	movw	r0, #0
   12ee0:	str	r0, [sp, #4]
   12ee4:	blt	12f0c <getc@plt+0x2418>
   12ee8:	ldr	r0, [fp, #-4]
   12eec:	ldrsh	r1, [sp, #8]
   12ef0:	add	r0, r0, r1
   12ef4:	ldrb	r0, [r0]
   12ef8:	ldrb	r1, [fp, #-5]
   12efc:	cmp	r0, r1
   12f00:	movw	r0, #0
   12f04:	movne	r0, #1
   12f08:	str	r0, [sp, #4]
   12f0c:	ldr	r0, [sp, #4]
   12f10:	tst	r0, #1
   12f14:	beq	12f30 <getc@plt+0x243c>
   12f18:	b	12f1c <getc@plt+0x2428>
   12f1c:	ldrh	r0, [sp, #8]
   12f20:	movw	r1, #65535	; 0xffff
   12f24:	add	r0, r0, r1
   12f28:	strh	r0, [sp, #8]
   12f2c:	b	12ed4 <getc@plt+0x23e0>
   12f30:	ldr	r0, [fp, #-4]
   12f34:	ldrsh	r1, [sp, #8]
   12f38:	add	r1, r1, #1
   12f3c:	add	r0, r0, r1
   12f40:	mov	sp, fp
   12f44:	pop	{fp, pc}
   12f48:	push	{fp, lr}
   12f4c:	mov	fp, sp
   12f50:	sub	sp, sp, #16
   12f54:	str	r0, [fp, #-4]
   12f58:	str	r1, [sp, #8]
   12f5c:	str	r2, [sp, #4]
   12f60:	str	r3, [sp]
   12f64:	ldr	r0, [sp, #8]
   12f68:	ldr	r0, [r0]
   12f6c:	bl	12eac <getc@plt+0x23b8>
   12f70:	ldr	r1, [pc, #36]	; 12f9c <getc@plt+0x24a8>
   12f74:	ldr	r1, [pc, r1]
   12f78:	str	r0, [r1]
   12f7c:	bl	13314 <error@@Base+0x140>
   12f80:	ldr	r0, [fp, #-4]
   12f84:	ldr	r1, [sp, #8]
   12f88:	ldr	r2, [sp, #4]
   12f8c:	ldr	r3, [sp]
   12f90:	bl	12fa0 <getc@plt+0x24ac>
   12f94:	mov	sp, fp
   12f98:	pop	{fp, pc}
   12f9c:	andeq	r3, r1, ip, asr #2
   12fa0:	push	{fp, lr}
   12fa4:	mov	fp, sp
   12fa8:	sub	sp, sp, #48	; 0x30
   12fac:	str	r0, [fp, #-4]
   12fb0:	str	r1, [fp, #-8]
   12fb4:	str	r2, [fp, #-12]
   12fb8:	str	r3, [fp, #-16]
   12fbc:	movw	r0, #0
   12fc0:	strh	r0, [fp, #-20]	; 0xffffffec
   12fc4:	ldr	r0, [fp, #-4]
   12fc8:	ldr	r0, [r0]
   12fcc:	cmp	r0, #1
   12fd0:	bne	12ff0 <getc@plt+0x24fc>
   12fd4:	ldr	r0, [pc, #404]	; 13170 <getc@plt+0x267c>
   12fd8:	ldr	r0, [pc, r0]
   12fdc:	ldrb	r0, [r0]
   12fe0:	cmp	r0, #0
   12fe4:	beq	12ff0 <getc@plt+0x24fc>
   12fe8:	ldr	r0, [fp, #-12]
   12fec:	bl	133b0 <error@@Base+0x1dc>
   12ff0:	movw	r0, #1
   12ff4:	strh	r0, [fp, #-18]	; 0xffffffee
   12ff8:	ldrsh	r0, [fp, #-18]	; 0xffffffee
   12ffc:	ldr	r1, [fp, #-4]
   13000:	ldr	r1, [r1]
   13004:	cmp	r0, r1
   13008:	bge	1315c <getc@plt+0x2668>
   1300c:	ldr	r0, [fp, #-8]
   13010:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   13014:	add	r0, r0, r1, lsl #2
   13018:	ldr	r0, [r0]
   1301c:	ldrb	r0, [r0]
   13020:	cmp	r0, #45	; 0x2d
   13024:	bne	13124 <getc@plt+0x2630>
   13028:	ldr	r0, [fp, #-8]
   1302c:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   13030:	add	r0, r0, r1, lsl #2
   13034:	ldr	r0, [r0]
   13038:	ldrb	r0, [r0, #1]
   1303c:	cmp	r0, #0
   13040:	beq	13124 <getc@plt+0x2630>
   13044:	ldr	r0, [pc, #296]	; 13174 <getc@plt+0x2680>
   13048:	add	r0, pc, r0
   1304c:	ldr	r1, [fp, #-8]
   13050:	ldrsh	r2, [fp, #-18]	; 0xffffffee
   13054:	ldr	r2, [r1, r2, lsl #2]!
   13058:	ldr	r1, [r1]
   1305c:	str	r0, [sp, #24]
   13060:	mov	r0, r1
   13064:	str	r2, [sp, #20]
   13068:	bl	10a88 <strlen@plt>
   1306c:	ldr	r1, [sp, #24]
   13070:	str	r0, [sp, #16]
   13074:	mov	r0, r1
   13078:	ldr	r1, [sp, #20]
   1307c:	ldr	r2, [sp, #16]
   13080:	bl	10adc <strncmp@plt>
   13084:	cmp	r0, #0
   13088:	bne	13094 <getc@plt+0x25a0>
   1308c:	ldr	r0, [fp, #-12]
   13090:	bl	133b0 <error@@Base+0x1dc>
   13094:	ldr	r0, [fp, #-8]
   13098:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   1309c:	add	r0, r0, r1, lsl #2
   130a0:	ldr	r0, [r0]
   130a4:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   130a8:	add	r1, r1, #1
   130ac:	ldr	r2, [fp, #-4]
   130b0:	ldr	r2, [r2]
   130b4:	cmp	r1, r2
   130b8:	str	r0, [sp, #12]
   130bc:	bge	130dc <getc@plt+0x25e8>
   130c0:	ldr	r0, [fp, #-8]
   130c4:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   130c8:	add	r1, r1, #1
   130cc:	add	r0, r0, r1, lsl #2
   130d0:	ldr	r0, [r0]
   130d4:	str	r0, [sp, #8]
   130d8:	b	130e8 <getc@plt+0x25f4>
   130dc:	movw	r0, #0
   130e0:	str	r0, [sp, #8]
   130e4:	b	130e8 <getc@plt+0x25f4>
   130e8:	ldr	r0, [sp, #8]
   130ec:	ldr	r2, [fp, #-16]
   130f0:	ldr	r1, [sp, #12]
   130f4:	str	r0, [sp, #4]
   130f8:	mov	r0, r1
   130fc:	ldr	r1, [sp, #4]
   13100:	bl	1343c <error@@Base+0x268>
   13104:	sxtb	r0, r0
   13108:	cmp	r0, #0
   1310c:	beq	13120 <getc@plt+0x262c>
   13110:	ldrh	r0, [fp, #-18]	; 0xffffffee
   13114:	movw	r1, #1
   13118:	add	r0, r0, r1
   1311c:	strh	r0, [fp, #-18]	; 0xffffffee
   13120:	b	13144 <getc@plt+0x2650>
   13124:	ldr	r0, [fp, #-8]
   13128:	ldrsh	r1, [fp, #-18]	; 0xffffffee
   1312c:	ldr	r1, [r0, r1, lsl #2]
   13130:	ldrsh	r2, [fp, #-20]	; 0xffffffec
   13134:	add	r3, r2, #1
   13138:	strh	r3, [fp, #-20]	; 0xffffffec
   1313c:	add	r0, r0, r2, lsl #2
   13140:	str	r1, [r0]
   13144:	b	13148 <getc@plt+0x2654>
   13148:	ldrh	r0, [fp, #-18]	; 0xffffffee
   1314c:	movw	r1, #1
   13150:	add	r0, r0, r1
   13154:	strh	r0, [fp, #-18]	; 0xffffffee
   13158:	b	12ff8 <getc@plt+0x2504>
   1315c:	ldrsh	r0, [fp, #-20]	; 0xffffffec
   13160:	ldr	r1, [fp, #-4]
   13164:	str	r0, [r1]
   13168:	mov	sp, fp
   1316c:	pop	{fp, pc}
   13170:	andeq	r3, r1, r4, lsr #1
   13174:	andeq	r1, r0, ip, asr #31
   13178:	push	{fp, lr}
   1317c:	mov	fp, sp
   13180:	movw	r0, #0
   13184:	bl	13188 <getc@plt+0x2694>
   13188:	push	{fp, lr}
   1318c:	mov	fp, sp
   13190:	sub	sp, sp, #8
   13194:	ldr	r1, [pc, #48]	; 131cc <getc@plt+0x26d8>
   13198:	ldr	r1, [pc, r1]
   1319c:	str	r0, [sp, #4]
   131a0:	ldr	r0, [r1]
   131a4:	movw	r1, #0
   131a8:	cmp	r0, r1
   131ac:	beq	131c0 <getc@plt+0x26cc>
   131b0:	ldr	r0, [pc, #24]	; 131d0 <getc@plt+0x26dc>
   131b4:	ldr	r0, [pc, r0]
   131b8:	ldr	r0, [r0]
   131bc:	blx	r0
   131c0:	bl	136b0 <error@@Base+0x4dc>
   131c4:	ldr	r0, [sp, #4]
   131c8:	bl	10a70 <exit@plt>
   131cc:	andeq	r2, r1, r0, lsr pc
   131d0:	andeq	r2, r1, r4, lsl pc

000131d4 <error@@Base>:
   131d4:	push	{fp, lr}
   131d8:	mov	fp, sp
   131dc:	sub	sp, sp, #8
   131e0:	ldr	r1, [pc, #64]	; 13228 <error@@Base+0x54>
   131e4:	add	r1, pc, r1
   131e8:	ldr	r2, [pc, #60]	; 1322c <error@@Base+0x58>
   131ec:	ldr	r2, [pc, r2]
   131f0:	ldr	r3, [pc, #56]	; 13230 <error@@Base+0x5c>
   131f4:	ldr	r3, [pc, r3]
   131f8:	str	r0, [sp, #4]
   131fc:	ldr	r0, [r3]
   13200:	ldr	r2, [r2]
   13204:	ldr	r3, [sp, #4]
   13208:	bl	10a94 <fprintf@plt>
   1320c:	ldr	r1, [pc, #16]	; 13224 <error@@Base+0x50>
   13210:	ldr	r1, [pc, r1]
   13214:	ldr	r1, [r1]
   13218:	str	r0, [sp]
   1321c:	mov	r0, r1
   13220:	bl	13188 <getc@plt+0x2694>
   13224:	andeq	r2, r1, r0, ror #29
   13228:	strdeq	r1, [r0], -lr
   1322c:	ldrdeq	r2, [r1], -r4
   13230:			; <UNDEFINED> instruction: 0x00012eb0
   13234:	push	{fp, lr}
   13238:	mov	fp, sp
   1323c:	sub	sp, sp, #24
   13240:	ldr	r2, [pc, #88]	; 132a0 <error@@Base+0xcc>
   13244:	add	r2, pc, r2
   13248:	ldr	r3, [pc, #84]	; 132a4 <error@@Base+0xd0>
   1324c:	ldr	r3, [pc, r3]
   13250:	ldr	ip, [pc, #80]	; 132a8 <error@@Base+0xd4>
   13254:	ldr	ip, [pc, ip]
   13258:	str	r0, [fp, #-4]
   1325c:	str	r1, [fp, #-8]
   13260:	ldr	r0, [ip]
   13264:	ldr	r1, [r3]
   13268:	ldr	r3, [fp, #-4]
   1326c:	ldr	ip, [fp, #-8]
   13270:	str	r1, [sp, #12]
   13274:	mov	r1, r2
   13278:	ldr	r2, [sp, #12]
   1327c:	str	ip, [sp]
   13280:	bl	10a94 <fprintf@plt>
   13284:	ldr	r1, [pc, #16]	; 1329c <error@@Base+0xc8>
   13288:	ldr	r1, [pc, r1]
   1328c:	ldr	r1, [r1]
   13290:	str	r0, [sp, #8]
   13294:	mov	r0, r1
   13298:	bl	13188 <getc@plt+0x2694>
   1329c:	andeq	r2, r1, r8, ror #28
   132a0:	andeq	r1, r0, r6, lsr #27
   132a4:	andeq	r2, r1, r4, ror lr
   132a8:	andeq	r2, r1, r0, asr lr
   132ac:	push	{fp, lr}
   132b0:	mov	fp, sp
   132b4:	sub	sp, sp, #24
   132b8:	ldr	r2, [pc, #72]	; 13308 <error@@Base+0x134>
   132bc:	add	r2, pc, r2
   132c0:	ldr	r3, [pc, #68]	; 1330c <error@@Base+0x138>
   132c4:	ldr	r3, [pc, r3]
   132c8:	ldr	ip, [pc, #64]	; 13310 <error@@Base+0x13c>
   132cc:	ldr	ip, [pc, ip]
   132d0:	str	r0, [fp, #-4]
   132d4:	str	r1, [fp, #-8]
   132d8:	ldr	r0, [ip]
   132dc:	ldr	r1, [r3]
   132e0:	ldr	r3, [fp, #-4]
   132e4:	ldr	ip, [fp, #-8]
   132e8:	str	r1, [sp, #12]
   132ec:	mov	r1, r2
   132f0:	ldr	r2, [sp, #12]
   132f4:	str	ip, [sp]
   132f8:	bl	10a94 <fprintf@plt>
   132fc:	str	r0, [sp, #8]
   13300:	mov	sp, fp
   13304:	pop	{fp, pc}
   13308:	andeq	r1, r0, lr, lsr #26
   1330c:	strdeq	r2, [r1], -ip
   13310:	ldrdeq	r2, [r1], -r8
   13314:	push	{fp, lr}
   13318:	mov	fp, sp
   1331c:	sub	sp, sp, #8
   13320:	ldr	r0, [pc, #48]	; 13358 <error@@Base+0x184>
   13324:	add	r1, pc, r0
   13328:	movw	r0, #2
   1332c:	bl	10a58 <__sysv_signal@plt>
   13330:	ldr	r1, [pc, #28]	; 13354 <error@@Base+0x180>
   13334:	add	r1, pc, r1
   13338:	movw	lr, #15
   1333c:	str	r0, [sp, #4]
   13340:	mov	r0, lr
   13344:	bl	10a58 <__sysv_signal@plt>
   13348:	str	r0, [sp]
   1334c:	mov	sp, fp
   13350:	pop	{fp, pc}
   13354:	andeq	r0, r0, r0, lsr #32
   13358:	andeq	r0, r0, r0, lsr r0
   1335c:	push	{fp, lr}
   13360:	mov	fp, sp
   13364:	sub	sp, sp, #8
   13368:	ldr	r1, [pc, #52]	; 133a4 <error@@Base+0x1d0>
   1336c:	add	r1, pc, r1
   13370:	str	r0, [sp, #4]
   13374:	ldrsb	r0, [r1]
   13378:	cmp	r0, #0
   1337c:	beq	13388 <error@@Base+0x1b4>
   13380:	mov	sp, fp
   13384:	pop	{fp, pc}
   13388:	ldr	r0, [pc, #24]	; 133a8 <error@@Base+0x1d4>
   1338c:	add	r0, pc, r0
   13390:	ldr	r1, [pc, #20]	; 133ac <error@@Base+0x1d8>
   13394:	add	r1, pc, r1
   13398:	movw	r2, #1
   1339c:	strb	r2, [r1]
   133a0:	bl	131d4 <error@@Base>
   133a4:	andseq	r3, r2, lr, ror #12
   133a8:	andeq	r1, r0, r9, ror ip
   133ac:	andseq	r3, r2, r6, asr #12
   133b0:	push	{fp, lr}
   133b4:	mov	fp, sp
   133b8:	sub	sp, sp, #16
   133bc:	ldr	r1, [pc, #100]	; 13428 <error@@Base+0x254>
   133c0:	ldr	r1, [pc, r1]
   133c4:	str	r0, [fp, #-4]
   133c8:	ldr	r0, [r1]
   133cc:	movw	r1, #0
   133d0:	cmp	r0, r1
   133d4:	beq	133ec <error@@Base+0x218>
   133d8:	ldr	r0, [pc, #88]	; 13438 <error@@Base+0x264>
   133dc:	ldr	r0, [pc, r0]
   133e0:	ldr	r0, [r0]
   133e4:	blx	r0
   133e8:	b	13424 <error@@Base+0x250>
   133ec:	ldr	r0, [pc, #56]	; 1342c <error@@Base+0x258>
   133f0:	add	r1, pc, r0
   133f4:	ldr	r0, [pc, #52]	; 13430 <error@@Base+0x25c>
   133f8:	ldr	r0, [pc, r0]
   133fc:	ldr	r2, [pc, #48]	; 13434 <error@@Base+0x260>
   13400:	ldr	r2, [pc, r2]
   13404:	ldr	r2, [r2]
   13408:	ldr	r0, [r0]
   1340c:	ldr	r3, [fp, #-4]
   13410:	str	r0, [sp, #8]
   13414:	mov	r0, r2
   13418:	ldr	r2, [sp, #8]
   1341c:	bl	10a94 <fprintf@plt>
   13420:	str	r0, [sp, #4]
   13424:	bl	13178 <getc@plt+0x2684>
   13428:	ldrdeq	r2, [r1], -r0
   1342c:	andeq	r1, r0, sl, lsr #24
   13430:	andeq	r2, r1, r8, asr #25
   13434:	andeq	r2, r1, r4, lsr #25
   13438:			; <UNDEFINED> instruction: 0x00012cb4
   1343c:	push	{fp, lr}
   13440:	mov	fp, sp
   13444:	sub	sp, sp, #32
   13448:	str	r0, [fp, #-8]
   1344c:	str	r1, [fp, #-12]
   13450:	str	r2, [sp, #16]
   13454:	ldr	r0, [sp, #16]
   13458:	movw	r1, #0
   1345c:	cmp	r0, r1
   13460:	bne	13468 <error@@Base+0x294>
   13464:	b	1367c <error@@Base+0x4a8>
   13468:	movw	r0, #0
   1346c:	strh	r0, [sp, #14]
   13470:	ldr	r0, [sp, #16]
   13474:	ldrsh	r1, [sp, #14]
   13478:	movw	r2, #12
   1347c:	mul	r1, r1, r2
   13480:	add	r0, r0, r1
   13484:	ldrb	r0, [r0]
   13488:	cmp	r0, #0
   1348c:	movw	r0, #0
   13490:	str	r0, [sp, #8]
   13494:	beq	134c8 <error@@Base+0x2f4>
   13498:	ldr	r0, [fp, #-8]
   1349c:	ldrb	r0, [r0, #1]
   134a0:	ldr	r1, [sp, #16]
   134a4:	ldrsh	r2, [sp, #14]
   134a8:	movw	r3, #12
   134ac:	mul	r2, r2, r3
   134b0:	add	r1, r1, r2
   134b4:	ldrb	r1, [r1]
   134b8:	cmp	r0, r1
   134bc:	movw	r0, #0
   134c0:	movne	r0, #1
   134c4:	str	r0, [sp, #8]
   134c8:	ldr	r0, [sp, #8]
   134cc:	tst	r0, #1
   134d0:	beq	134ec <error@@Base+0x318>
   134d4:	b	134d8 <error@@Base+0x304>
   134d8:	ldrh	r0, [sp, #14]
   134dc:	movw	r1, #1
   134e0:	add	r0, r0, r1
   134e4:	strh	r0, [sp, #14]
   134e8:	b	13470 <error@@Base+0x29c>
   134ec:	ldr	r0, [sp, #16]
   134f0:	ldrsh	r1, [sp, #14]
   134f4:	movw	r2, #12
   134f8:	mul	r1, r1, r2
   134fc:	add	r0, r0, r1
   13500:	ldrsb	r0, [r0]
   13504:	cmp	r0, #0
   13508:	bne	13510 <error@@Base+0x33c>
   1350c:	b	1367c <error@@Base+0x4a8>
   13510:	ldr	r0, [sp, #16]
   13514:	ldrsh	r1, [sp, #14]
   13518:	movw	r2, #12
   1351c:	mul	r1, r1, r2
   13520:	add	r0, r0, r1
   13524:	ldr	r0, [r0, #4]
   13528:	movw	r1, #0
   1352c:	cmp	r0, r1
   13530:	beq	135f0 <error@@Base+0x41c>
   13534:	ldr	r0, [fp, #-8]
   13538:	ldrb	r0, [r0, #2]
   1353c:	cmp	r0, #0
   13540:	bne	13554 <error@@Base+0x380>
   13544:	ldr	r0, [fp, #-12]
   13548:	movw	r1, #0
   1354c:	cmp	r0, r1
   13550:	beq	135f0 <error@@Base+0x41c>
   13554:	ldr	r0, [sp, #16]
   13558:	ldrsh	r1, [sp, #14]
   1355c:	movw	r2, #12
   13560:	mul	r1, r1, r2
   13564:	add	r0, r0, r1
   13568:	ldr	r0, [r0, #4]
   1356c:	ldr	r0, [r0]
   13570:	movw	r1, #0
   13574:	cmp	r0, r1
   13578:	beq	13580 <error@@Base+0x3ac>
   1357c:	b	1368c <error@@Base+0x4b8>
   13580:	ldr	r0, [fp, #-8]
   13584:	ldrb	r0, [r0, #2]
   13588:	cmp	r0, #0
   1358c:	beq	135a0 <error@@Base+0x3cc>
   13590:	ldr	r0, [fp, #-8]
   13594:	add	r0, r0, #2
   13598:	str	r0, [sp, #4]
   1359c:	b	135a8 <error@@Base+0x3d4>
   135a0:	ldr	r0, [fp, #-12]
   135a4:	str	r0, [sp, #4]
   135a8:	ldr	r0, [sp, #4]
   135ac:	ldr	r1, [sp, #16]
   135b0:	ldrsh	r2, [sp, #14]
   135b4:	movw	r3, #12
   135b8:	mul	r2, r2, r3
   135bc:	add	r1, r1, r2
   135c0:	ldr	r1, [r1, #4]
   135c4:	str	r0, [r1]
   135c8:	ldr	r0, [fp, #-8]
   135cc:	ldrb	r0, [r0, #2]
   135d0:	cmp	r0, #0
   135d4:	movw	r0, #0
   135d8:	movne	r0, #1
   135dc:	tst	r0, #1
   135e0:	movw	r0, #0
   135e4:	moveq	r0, #1
   135e8:	strb	r0, [fp, #-1]
   135ec:	b	1369c <error@@Base+0x4c8>
   135f0:	ldr	r0, [sp, #16]
   135f4:	ldrsh	r1, [sp, #14]
   135f8:	movw	r2, #12
   135fc:	mul	r1, r1, r2
   13600:	add	r0, r0, r1
   13604:	ldr	r0, [r0, #8]
   13608:	movw	r1, #0
   1360c:	cmp	r0, r1
   13610:	beq	13678 <error@@Base+0x4a4>
   13614:	ldr	r0, [fp, #-8]
   13618:	ldrsb	r0, [r0, #2]
   1361c:	cmp	r0, #0
   13620:	bne	13678 <error@@Base+0x4a4>
   13624:	ldr	r0, [sp, #16]
   13628:	ldrsh	r1, [sp, #14]
   1362c:	movw	r2, #12
   13630:	mul	r1, r1, r2
   13634:	add	r0, r0, r1
   13638:	ldr	r0, [r0, #8]
   1363c:	ldrsb	r0, [r0]
   13640:	cmp	r0, #0
   13644:	beq	1364c <error@@Base+0x478>
   13648:	b	1368c <error@@Base+0x4b8>
   1364c:	ldr	r0, [sp, #16]
   13650:	ldrsh	r1, [sp, #14]
   13654:	movw	r2, #12
   13658:	mul	r1, r1, r2
   1365c:	add	r0, r0, r1
   13660:	ldr	r0, [r0, #8]
   13664:	movw	r1, #1
   13668:	strb	r1, [r0]
   1366c:	movw	r0, #0
   13670:	strb	r0, [fp, #-1]
   13674:	b	1369c <error@@Base+0x4c8>
   13678:	b	1367c <error@@Base+0x4a8>
   1367c:	ldr	r0, [pc, #36]	; 136a8 <error@@Base+0x4d4>
   13680:	add	r0, pc, r0
   13684:	ldr	r1, [fp, #-8]
   13688:	bl	13234 <error@@Base+0x60>
   1368c:	ldr	r0, [pc, #24]	; 136ac <error@@Base+0x4d8>
   13690:	add	r0, pc, r0
   13694:	ldr	r1, [fp, #-8]
   13698:	bl	13234 <error@@Base+0x60>
   1369c:	ldrb	r0, [fp, #-1]
   136a0:	mov	sp, fp
   136a4:	pop	{fp, pc}
   136a8:	andeq	r1, r0, r9, lsr #19
   136ac:	andeq	r1, r0, r8, lsr #19
   136b0:	push	{fp, lr}
   136b4:	mov	fp, sp
   136b8:	sub	sp, sp, #16
   136bc:	movw	r0, #1
   136c0:	strh	r0, [fp, #-2]
   136c4:	ldr	r0, [pc, #88]	; 13724 <error@@Base+0x550>
   136c8:	add	r0, pc, r0
   136cc:	ldrsh	r1, [fp, #-2]
   136d0:	ldrsh	r0, [r0]
   136d4:	cmp	r1, r0
   136d8:	bgt	1371c <error@@Base+0x548>
   136dc:	ldrsh	r0, [fp, #-2]
   136e0:	bl	12e20 <getc@plt+0x232c>
   136e4:	ldr	lr, [pc, #60]	; 13728 <error@@Base+0x554>
   136e8:	ldr	lr, [pc, lr]
   136ec:	str	r0, [sp, #8]
   136f0:	ldr	r0, [sp, #8]
   136f4:	blx	lr
   136f8:	ldr	lr, [sp, #8]
   136fc:	str	r0, [sp, #4]
   13700:	mov	r0, lr
   13704:	bl	109d4 <free@plt>
   13708:	ldrh	r0, [fp, #-2]
   1370c:	movw	r1, #1
   13710:	add	r0, r0, r1
   13714:	strh	r0, [fp, #-2]
   13718:	b	136c4 <error@@Base+0x4f0>
   1371c:	mov	sp, fp
   13720:	pop	{fp, pc}
   13724:	andseq	r3, r2, r0, lsl r3
   13728:			; <UNDEFINED> instruction: 0x000129b0
   1372c:	push	{fp, lr}
   13730:	mov	fp, sp
   13734:	sub	sp, sp, #24
   13738:	ldr	r3, [pc, #96]	; 137a0 <error@@Base+0x5cc>
   1373c:	ldr	r3, [pc, r3]
   13740:	str	r0, [fp, #-4]
   13744:	strb	r1, [fp, #-5]
   13748:	str	r2, [sp, #12]
   1374c:	movw	r0, #1
   13750:	movw	r1, #16
   13754:	blx	r3
   13758:	ldr	r1, [pc, #60]	; 1379c <error@@Base+0x5c8>
   1375c:	ldr	r1, [pc, r1]
   13760:	str	r0, [sp, #8]
   13764:	ldrb	r0, [fp, #-5]
   13768:	ldr	r2, [sp, #8]
   1376c:	strb	r0, [r2, #8]
   13770:	ldr	r0, [sp, #12]
   13774:	ldr	r2, [sp, #8]
   13778:	str	r0, [r2, #12]
   1377c:	ldr	r0, [fp, #-4]
   13780:	ldr	r2, [sp, #8]
   13784:	str	r1, [sp, #4]
   13788:	mov	r1, r2
   1378c:	ldr	r2, [sp, #4]
   13790:	blx	r2
   13794:	mov	sp, fp
   13798:	pop	{fp, pc}
   1379c:	andeq	r2, r1, r4, asr r9
   137a0:			; <UNDEFINED> instruction: 0x000129b8
   137a4:	push	{fp, lr}
   137a8:	mov	fp, sp
   137ac:	sub	sp, sp, #64	; 0x40
   137b0:	str	r0, [fp, #-4]
   137b4:	str	r1, [fp, #-8]
   137b8:	str	r2, [fp, #-12]
   137bc:	ldr	r0, [fp, #-12]
   137c0:	ldrb	r0, [r0]
   137c4:	cmp	r0, #0
   137c8:	beq	137f8 <error@@Base+0x624>
   137cc:	ldr	r0, [fp, #-8]
   137d0:	movw	r1, #0
   137d4:	cmp	r0, r1
   137d8:	bne	137f8 <error@@Base+0x624>
   137dc:	ldr	r0, [pc, #404]	; 13978 <error@@Base+0x7a4>
   137e0:	add	r0, pc, r0
   137e4:	ldr	r1, [pc, #400]	; 1397c <error@@Base+0x7a8>
   137e8:	add	r1, pc, r1
   137ec:	ldr	r2, [pc, #396]	; 13980 <error@@Base+0x7ac>
   137f0:	ldr	r2, [pc, r2]
   137f4:	blx	r2
   137f8:	ldr	r0, [pc, #388]	; 13984 <error@@Base+0x7b0>
   137fc:	add	r1, pc, r0
   13800:	ldr	r0, [pc, #384]	; 13988 <error@@Base+0x7b4>
   13804:	ldr	r0, [pc, r0]
   13808:	ldr	r2, [fp, #-4]
   1380c:	ldr	r2, [r2, #4]
   13810:	str	r2, [fp, #-16]
   13814:	ldr	r2, [fp, #-8]
   13818:	str	r0, [fp, #-24]	; 0xffffffe8
   1381c:	mov	r0, r2
   13820:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13824:	blx	r2
   13828:	str	r0, [fp, #-20]	; 0xffffffec
   1382c:	ldr	r0, [fp, #-12]
   13830:	ldrsb	r0, [r0]
   13834:	cmp	r0, #0
   13838:	beq	1384c <error@@Base+0x678>
   1383c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13840:	bl	13990 <error@@Base+0x7bc>
   13844:	ldr	lr, [fp, #-12]
   13848:	strb	r0, [lr, #11]
   1384c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13850:	ldr	r1, [fp, #-4]
   13854:	ldr	r2, [fp, #-12]
   13858:	ldrb	r2, [r2, #1]
   1385c:	ldr	r3, [fp, #-12]
   13860:	ldr	r3, [r3, #4]
   13864:	cmp	r3, #0
   13868:	str	r0, [fp, #-28]	; 0xffffffe4
   1386c:	str	r1, [sp, #32]
   13870:	str	r2, [sp, #28]
   13874:	beq	13888 <error@@Base+0x6b4>
   13878:	ldr	r0, [fp, #-12]
   1387c:	ldr	r0, [r0, #4]
   13880:	str	r0, [sp, #24]
   13884:	b	13894 <error@@Base+0x6c0>
   13888:	movw	r0, #94	; 0x5e
   1388c:	str	r0, [sp, #24]
   13890:	b	13894 <error@@Base+0x6c0>
   13894:	ldr	r0, [sp, #24]
   13898:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1389c:	str	r0, [sp, #20]
   138a0:	mov	r0, r1
   138a4:	ldr	r1, [sp, #32]
   138a8:	ldr	r2, [sp, #28]
   138ac:	ldr	r3, [sp, #20]
   138b0:	bl	13a88 <error@@Base+0x8b4>
   138b4:	ldr	r0, [pc, #208]	; 1398c <error@@Base+0x7b8>
   138b8:	ldr	r0, [pc, r0]
   138bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   138c0:	str	r0, [sp, #16]
   138c4:	mov	r0, r1
   138c8:	ldr	r1, [sp, #16]
   138cc:	blx	r1
   138d0:	ldr	r0, [fp, #-12]
   138d4:	ldrsb	r0, [r0, #9]
   138d8:	cmp	r0, #0
   138dc:	beq	1392c <error@@Base+0x758>
   138e0:	ldr	r0, [fp, #-4]
   138e4:	ldr	r1, [fp, #-16]
   138e8:	movw	r2, #0
   138ec:	cmp	r1, r2
   138f0:	str	r0, [sp, #12]
   138f4:	beq	13908 <error@@Base+0x734>
   138f8:	ldr	r0, [fp, #-16]
   138fc:	ldr	r0, [r0, #4]
   13900:	str	r0, [sp, #8]
   13904:	b	13914 <error@@Base+0x740>
   13908:	ldr	r0, [fp, #-4]
   1390c:	ldr	r0, [r0]
   13910:	str	r0, [sp, #8]
   13914:	ldr	r0, [sp, #8]
   13918:	ldr	r1, [sp, #12]
   1391c:	str	r0, [sp, #4]
   13920:	mov	r0, r1
   13924:	ldr	r1, [sp, #4]
   13928:	bl	13c04 <error@@Base+0xa30>
   1392c:	ldr	r0, [fp, #-12]
   13930:	ldrsb	r0, [r0, #10]
   13934:	cmp	r0, #0
   13938:	beq	13970 <error@@Base+0x79c>
   1393c:	ldr	r0, [fp, #-16]
   13940:	movw	r1, #0
   13944:	cmp	r0, r1
   13948:	beq	1395c <error@@Base+0x788>
   1394c:	ldr	r0, [fp, #-16]
   13950:	ldr	r0, [r0, #4]
   13954:	str	r0, [sp]
   13958:	b	13968 <error@@Base+0x794>
   1395c:	ldr	r0, [fp, #-4]
   13960:	ldr	r0, [r0]
   13964:	str	r0, [sp]
   13968:	ldr	r0, [sp]
   1396c:	bl	13dac <error@@Base+0xbd8>
   13970:	mov	sp, fp
   13974:	pop	{fp, pc}
   13978:	andeq	r1, r0, r9, ror #16
   1397c:	andeq	r1, r0, r1, ror r8
   13980:	andeq	r2, r1, r8, lsl #18
   13984:	andeq	r1, r0, r7, lsl r9
   13988:	muleq	r1, r0, r8
   1398c:			; <UNDEFINED> instruction: 0x000127bc
   13990:	push	{fp, lr}
   13994:	mov	fp, sp
   13998:	sub	sp, sp, #120	; 0x78
   1399c:	add	r1, sp, #12
   139a0:	str	r0, [fp, #-8]
   139a4:	movw	r0, #0
   139a8:	strh	r0, [sp, #10]
   139ac:	ldr	r2, [fp, #-8]
   139b0:	mov	r0, r1
   139b4:	movw	r1, #99	; 0x63
   139b8:	bl	109ec <fgets@plt>
   139bc:	movw	r1, #0
   139c0:	cmp	r0, r1
   139c4:	beq	13a64 <error@@Base+0x890>
   139c8:	ldr	r0, [pc, #176]	; 13a80 <error@@Base+0x8ac>
   139cc:	add	r1, pc, r0
   139d0:	add	r0, sp, #12
   139d4:	movw	r2, #51	; 0x33
   139d8:	bl	10adc <strncmp@plt>
   139dc:	cmp	r0, #0
   139e0:	bne	13a64 <error@@Base+0x890>
   139e4:	b	139e8 <error@@Base+0x814>
   139e8:	ldrsh	r0, [sp, #10]
   139ec:	cmp	r0, #2
   139f0:	movw	r0, #0
   139f4:	str	r0, [sp, #4]
   139f8:	bge	13a20 <error@@Base+0x84c>
   139fc:	add	r0, sp, #12
   13a00:	ldr	r2, [fp, #-8]
   13a04:	movw	r1, #99	; 0x63
   13a08:	bl	109ec <fgets@plt>
   13a0c:	movw	r1, #0
   13a10:	cmp	r0, r1
   13a14:	movw	r0, #0
   13a18:	movne	r0, #1
   13a1c:	str	r0, [sp, #4]
   13a20:	ldr	r0, [sp, #4]
   13a24:	tst	r0, #1
   13a28:	beq	13a58 <error@@Base+0x884>
   13a2c:	add	r0, sp, #12
   13a30:	ldr	r1, [pc, #76]	; 13a84 <error@@Base+0x8b0>
   13a34:	add	r1, pc, r1
   13a38:	bl	109bc <strcmp@plt>
   13a3c:	cmp	r0, #0
   13a40:	bne	13a54 <error@@Base+0x880>
   13a44:	ldrh	r0, [sp, #10]
   13a48:	movw	r1, #1
   13a4c:	add	r0, r0, r1
   13a50:	strh	r0, [sp, #10]
   13a54:	b	139e8 <error@@Base+0x814>
   13a58:	movw	r0, #1
   13a5c:	strb	r0, [fp, #-1]
   13a60:	b	13a74 <error@@Base+0x8a0>
   13a64:	ldr	r0, [fp, #-8]
   13a68:	bl	10a10 <rewind@plt>
   13a6c:	movw	r0, #0
   13a70:	strb	r0, [fp, #-1]
   13a74:	ldrb	r0, [fp, #-1]
   13a78:	mov	sp, fp
   13a7c:	pop	{fp, pc}
   13a80:	andeq	r1, r0, r1, asr #13
   13a84:	muleq	r0, r1, r6
   13a88:	push	{fp, lr}
   13a8c:	mov	fp, sp
   13a90:	sub	sp, sp, #48	; 0x30
   13a94:	str	r0, [fp, #-4]
   13a98:	str	r1, [fp, #-8]
   13a9c:	strb	r2, [fp, #-9]
   13aa0:	str	r3, [fp, #-16]
   13aa4:	movw	r0, #0
   13aa8:	strb	r0, [fp, #-17]	; 0xffffffef
   13aac:	ldr	r0, [fp, #-4]
   13ab0:	bl	10af4 <getc@plt>
   13ab4:	str	r0, [sp, #20]
   13ab8:	ldr	r0, [sp, #20]
   13abc:	cmn	r0, #1
   13ac0:	beq	13be4 <error@@Base+0xa10>
   13ac4:	ldr	r0, [pc, #288]	; 13bec <error@@Base+0xa18>
   13ac8:	ldr	r0, [pc, r0]
   13acc:	ldr	r1, [sp, #20]
   13ad0:	add	r0, r0, r1
   13ad4:	ldrsb	r0, [r0]
   13ad8:	str	r0, [sp, #8]
   13adc:	ldr	r0, [sp, #8]
   13ae0:	cmp	r0, #1
   13ae4:	bge	13afc <error@@Base+0x928>
   13ae8:	ldr	r0, [pc, #268]	; 13bfc <error@@Base+0xa28>
   13aec:	add	r0, pc, r0
   13af0:	ldr	r1, [pc, #264]	; 13c00 <error@@Base+0xa2c>
   13af4:	ldr	r1, [pc, r1]
   13af8:	blx	r1
   13afc:	ldr	r0, [sp, #20]
   13b00:	strb	r0, [fp, #-21]	; 0xffffffeb
   13b04:	ldr	r0, [sp, #8]
   13b08:	cmp	r0, #1
   13b0c:	ble	13b5c <error@@Base+0x988>
   13b10:	sub	r0, fp, #21
   13b14:	add	r0, r0, #1
   13b18:	ldr	r1, [sp, #8]
   13b1c:	sub	r2, r1, #1
   13b20:	ldr	r3, [fp, #-4]
   13b24:	movw	r1, #1
   13b28:	bl	10a34 <fread@plt>
   13b2c:	str	r0, [sp, #16]
   13b30:	ldr	r0, [sp, #16]
   13b34:	ldr	r1, [sp, #8]
   13b38:	sub	r1, r1, #1
   13b3c:	cmp	r0, r1
   13b40:	beq	13b58 <error@@Base+0x984>
   13b44:	ldr	r0, [pc, #168]	; 13bf4 <error@@Base+0xa20>
   13b48:	add	r0, pc, r0
   13b4c:	ldr	r1, [pc, #164]	; 13bf8 <error@@Base+0xa24>
   13b50:	ldr	r1, [pc, r1]
   13b54:	blx	r1
   13b58:	b	13b5c <error@@Base+0x988>
   13b5c:	sub	r0, fp, #21
   13b60:	movw	r1, #4
   13b64:	add	r2, sp, #4
   13b68:	bl	10a40 <utf8proc_iterate@plt>
   13b6c:	str	r0, [sp, #12]
   13b70:	ldr	r0, [sp, #12]
   13b74:	ldr	r1, [sp, #8]
   13b78:	cmp	r0, r1
   13b7c:	beq	13b94 <error@@Base+0x9c0>
   13b80:	ldr	r0, [sp, #12]
   13b84:	bl	10ac4 <utf8proc_errmsg@plt>
   13b88:	ldr	lr, [pc, #96]	; 13bf0 <error@@Base+0xa1c>
   13b8c:	ldr	lr, [pc, lr]
   13b90:	blx	lr
   13b94:	ldrb	r0, [fp, #-9]
   13b98:	cmp	r0, #0
   13b9c:	beq	13bbc <error@@Base+0x9e8>
   13ba0:	ldr	r0, [sp, #4]
   13ba4:	ldr	r1, [fp, #-16]
   13ba8:	cmp	r0, r1
   13bac:	bne	13bbc <error@@Base+0x9e8>
   13bb0:	movw	r0, #1
   13bb4:	strb	r0, [fp, #-17]	; 0xffffffef
   13bb8:	b	13bd4 <error@@Base+0xa00>
   13bbc:	ldr	r0, [fp, #-8]
   13bc0:	ldrb	r1, [fp, #-17]	; 0xffffffef
   13bc4:	ldr	r2, [sp, #4]
   13bc8:	bl	1372c <error@@Base+0x558>
   13bcc:	movw	r0, #0
   13bd0:	strb	r0, [fp, #-17]	; 0xffffffef
   13bd4:	ldr	r0, [fp, #-4]
   13bd8:	bl	10af4 <getc@plt>
   13bdc:	str	r0, [sp, #20]
   13be0:	b	13ab8 <error@@Base+0x8e4>
   13be4:	mov	sp, fp
   13be8:	pop	{fp, pc}
   13bec:	andeq	r2, r1, r4, lsl #12
   13bf0:	strdeq	r2, [r1], -ip
   13bf4:	andeq	r1, r0, sp, asr #11
   13bf8:	andeq	r2, r1, r8, lsr r5
   13bfc:	andeq	r1, r0, r1, lsl r6
   13c00:	muleq	r1, r4, r5
   13c04:	push	{fp, lr}
   13c08:	mov	fp, sp
   13c0c:	sub	sp, sp, #24
   13c10:	str	r0, [fp, #-4]
   13c14:	str	r1, [fp, #-8]
   13c18:	movw	r0, #0
   13c1c:	strb	r0, [fp, #-9]
   13c20:	ldr	r0, [fp, #-8]
   13c24:	str	r0, [sp, #8]
   13c28:	ldr	r0, [sp, #8]
   13c2c:	movw	r1, #0
   13c30:	cmp	r0, r1
   13c34:	beq	13c70 <error@@Base+0xa9c>
   13c38:	ldr	r0, [sp, #8]
   13c3c:	ldr	r0, [r0, #12]
   13c40:	bl	142a4 <error@@Base+0x10d0>
   13c44:	sxtb	r0, r0
   13c48:	cmp	r0, #0
   13c4c:	beq	13c5c <error@@Base+0xa88>
   13c50:	ldr	r0, [sp, #8]
   13c54:	movw	r1, #32
   13c58:	str	r1, [r0, #12]
   13c5c:	b	13c60 <error@@Base+0xa8c>
   13c60:	ldr	r0, [sp, #8]
   13c64:	ldr	r0, [r0, #4]
   13c68:	str	r0, [sp, #8]
   13c6c:	b	13c28 <error@@Base+0xa54>
   13c70:	ldr	r0, [fp, #-8]
   13c74:	str	r0, [sp, #8]
   13c78:	ldr	r0, [sp, #8]
   13c7c:	movw	r1, #0
   13c80:	cmp	r0, r1
   13c84:	beq	13da0 <error@@Base+0xbcc>
   13c88:	ldr	r0, [sp, #8]
   13c8c:	ldr	r0, [r0, #4]
   13c90:	str	r0, [sp, #4]
   13c94:	ldr	r0, [sp, #8]
   13c98:	ldr	r0, [r0, #12]
   13c9c:	cmp	r0, #32
   13ca0:	bne	13ce0 <error@@Base+0xb0c>
   13ca4:	ldrsb	r0, [fp, #-9]
   13ca8:	cmp	r0, #0
   13cac:	beq	13cfc <error@@Base+0xb28>
   13cb0:	ldr	r0, [sp, #4]
   13cb4:	movw	r1, #0
   13cb8:	cmp	r0, r1
   13cbc:	beq	13cfc <error@@Base+0xb28>
   13cc0:	ldr	r0, [sp, #4]
   13cc4:	ldr	r0, [r0, #12]
   13cc8:	cmp	r0, #32
   13ccc:	beq	13cfc <error@@Base+0xb28>
   13cd0:	ldr	r0, [sp, #4]
   13cd4:	ldr	r0, [r0, #12]
   13cd8:	cmp	r0, #10
   13cdc:	beq	13cfc <error@@Base+0xb28>
   13ce0:	ldr	r0, [sp, #8]
   13ce4:	ldr	r0, [r0, #12]
   13ce8:	cmp	r0, #10
   13cec:	bne	13d70 <error@@Base+0xb9c>
   13cf0:	ldrsb	r0, [fp, #-9]
   13cf4:	cmp	r0, #0
   13cf8:	bne	13d70 <error@@Base+0xb9c>
   13cfc:	ldrb	r0, [fp, #-9]
   13d00:	cmp	r0, #0
   13d04:	beq	13d40 <error@@Base+0xb6c>
   13d08:	ldr	r0, [sp, #4]
   13d0c:	movw	r1, #0
   13d10:	cmp	r0, r1
   13d14:	beq	13d40 <error@@Base+0xb6c>
   13d18:	ldr	r0, [sp, #4]
   13d1c:	ldr	r0, [r0, #12]
   13d20:	cmp	r0, #32
   13d24:	bne	13d40 <error@@Base+0xb6c>
   13d28:	ldr	r0, [sp, #8]
   13d2c:	ldrb	r0, [r0, #8]
   13d30:	ldr	r1, [sp, #4]
   13d34:	ldrb	r2, [r1, #8]
   13d38:	orr	r0, r2, r0
   13d3c:	strb	r0, [r1, #8]
   13d40:	ldr	r0, [pc, #96]	; 13da8 <error@@Base+0xbd4>
   13d44:	ldr	r0, [pc, r0]
   13d48:	ldr	r1, [fp, #-4]
   13d4c:	ldr	r2, [sp, #8]
   13d50:	str	r0, [sp]
   13d54:	mov	r0, r1
   13d58:	mov	r1, r2
   13d5c:	ldr	r2, [sp]
   13d60:	blx	r2
   13d64:	ldr	r0, [sp, #8]
   13d68:	bl	109d4 <free@plt>
   13d6c:	b	13d94 <error@@Base+0xbc0>
   13d70:	ldr	r0, [sp, #8]
   13d74:	ldr	r0, [r0, #12]
   13d78:	cmp	r0, #10
   13d7c:	movw	r0, #0
   13d80:	moveq	r0, #1
   13d84:	tst	r0, #1
   13d88:	movw	r0, #0
   13d8c:	moveq	r0, #1
   13d90:	strb	r0, [fp, #-9]
   13d94:	ldr	r0, [sp, #4]
   13d98:	str	r0, [sp, #8]
   13d9c:	b	13c78 <error@@Base+0xaa4>
   13da0:	mov	sp, fp
   13da4:	pop	{fp, pc}
   13da8:			; <UNDEFINED> instruction: 0x000123bc
   13dac:	push	{fp, lr}
   13db0:	mov	fp, sp
   13db4:	sub	sp, sp, #8
   13db8:	str	r0, [sp, #4]
   13dbc:	ldr	r0, [sp, #4]
   13dc0:	str	r0, [sp]
   13dc4:	ldr	r0, [sp]
   13dc8:	movw	r1, #0
   13dcc:	cmp	r0, r1
   13dd0:	beq	13df8 <error@@Base+0xc24>
   13dd4:	ldr	r0, [sp]
   13dd8:	ldr	r0, [r0, #12]
   13ddc:	bl	10a1c <utf8proc_tolower@plt>
   13de0:	ldr	lr, [sp]
   13de4:	str	r0, [lr, #12]
   13de8:	ldr	r0, [sp]
   13dec:	ldr	r0, [r0, #4]
   13df0:	str	r0, [sp]
   13df4:	b	13dc4 <error@@Base+0xbf0>
   13df8:	mov	sp, fp
   13dfc:	pop	{fp, pc}
   13e00:	push	{fp, lr}
   13e04:	mov	fp, sp
   13e08:	sub	sp, sp, #16
   13e0c:	str	r0, [fp, #-4]
   13e10:	str	r1, [sp, #8]
   13e14:	ldr	r0, [fp, #-4]
   13e18:	ldr	r1, [sp, #8]
   13e1c:	bl	109f8 <utf8proc_encode_char@plt>
   13e20:	str	r0, [sp, #4]
   13e24:	ldr	r0, [sp, #4]
   13e28:	cmp	r0, #1
   13e2c:	bge	13e44 <error@@Base+0xc70>
   13e30:	ldr	r0, [pc, #28]	; 13e54 <error@@Base+0xc80>
   13e34:	add	r0, pc, r0
   13e38:	ldr	r1, [pc, #24]	; 13e58 <error@@Base+0xc84>
   13e3c:	ldr	r1, [pc, r1]
   13e40:	blx	r1
   13e44:	ldr	r0, [sp, #4]
   13e48:	sxtb	r0, r0
   13e4c:	mov	sp, fp
   13e50:	pop	{fp, pc}
   13e54:	andeq	r1, r0, pc, lsr #4
   13e58:	andeq	r2, r1, ip, asr #4
   13e5c:	push	{fp, lr}
   13e60:	mov	fp, sp
   13e64:	sub	sp, sp, #32
   13e68:	strb	r0, [fp, #-1]
   13e6c:	str	r1, [fp, #-8]
   13e70:	str	r2, [fp, #-12]
   13e74:	strb	r3, [fp, #-13]
   13e78:	movw	r0, #0
   13e7c:	strh	r0, [sp, #16]
   13e80:	ldr	r0, [fp, #-12]
   13e84:	str	r0, [sp, #12]
   13e88:	ldrsb	r0, [fp, #-1]
   13e8c:	cmp	r0, #0
   13e90:	beq	13eb0 <error@@Base+0xcdc>
   13e94:	ldr	r1, [sp, #12]
   13e98:	movw	r0, #94	; 0x5e
   13e9c:	bl	13e00 <error@@Base+0xc2c>
   13ea0:	sxtb	r0, r0
   13ea4:	ldrsh	r1, [sp, #16]
   13ea8:	add	r0, r1, r0
   13eac:	strh	r0, [sp, #16]
   13eb0:	ldr	r0, [fp, #-8]
   13eb4:	cmp	r0, #10
   13eb8:	bne	13f00 <error@@Base+0xd2c>
   13ebc:	ldr	r0, [pc, #316]	; 14000 <error@@Base+0xe2c>
   13ec0:	add	r0, pc, r0
   13ec4:	ldr	r1, [pc, #312]	; 14004 <error@@Base+0xe30>
   13ec8:	add	r1, pc, r1
   13ecc:	ldr	r2, [fp, #-12]
   13ed0:	ldrsh	r3, [sp, #16]
   13ed4:	add	r2, r2, r3
   13ed8:	ldrb	r3, [fp, #-13]
   13edc:	cmp	r3, #0
   13ee0:	movw	r3, #0
   13ee4:	movne	r3, #1
   13ee8:	tst	r3, #1
   13eec:	movne	r1, r0
   13ef0:	mov	r0, r2
   13ef4:	bl	10ab8 <sprintf@plt>
   13ef8:	str	r0, [sp, #8]
   13efc:	b	13ff0 <error@@Base+0xe1c>
   13f00:	ldr	r0, [fp, #-8]
   13f04:	bl	14008 <error@@Base+0xe34>
   13f08:	sxtb	r0, r0
   13f0c:	cmp	r0, #0
   13f10:	beq	13f98 <error@@Base+0xdc4>
   13f14:	ldr	r0, [fp, #-8]
   13f18:	bl	14088 <error@@Base+0xeb4>
   13f1c:	sxtb	r0, r0
   13f20:	cmp	r0, #0
   13f24:	beq	13f4c <error@@Base+0xd78>
   13f28:	ldr	r0, [sp, #12]
   13f2c:	ldrsh	r1, [sp, #16]
   13f30:	add	r1, r0, r1
   13f34:	movw	r0, #9676	; 0x25cc
   13f38:	bl	13e00 <error@@Base+0xc2c>
   13f3c:	sxtb	r0, r0
   13f40:	ldrsh	r1, [sp, #16]
   13f44:	add	r0, r1, r0
   13f48:	strh	r0, [sp, #16]
   13f4c:	ldr	r0, [fp, #-8]
   13f50:	ldr	r1, [sp, #12]
   13f54:	ldrsh	r2, [sp, #16]
   13f58:	add	r1, r1, r2
   13f5c:	bl	13e00 <error@@Base+0xc2c>
   13f60:	sxtb	r0, r0
   13f64:	ldrsh	r1, [sp, #16]
   13f68:	add	r0, r1, r0
   13f6c:	strh	r0, [sp, #16]
   13f70:	ldr	r0, [fp, #-12]
   13f74:	ldrh	r1, [sp, #16]
   13f78:	movw	r2, #1
   13f7c:	add	r2, r1, r2
   13f80:	strh	r2, [sp, #16]
   13f84:	sxth	r1, r1
   13f88:	add	r0, r0, r1
   13f8c:	movw	r1, #0
   13f90:	strb	r1, [r0]
   13f94:	b	13fec <error@@Base+0xe18>
   13f98:	ldr	r0, [fp, #-8]
   13f9c:	cmp	r0, #256	; 0x100
   13fa0:	bcs	13fc8 <error@@Base+0xdf4>
   13fa4:	ldr	r0, [pc, #80]	; 13ffc <error@@Base+0xe28>
   13fa8:	add	r1, pc, r0
   13fac:	ldr	r0, [fp, #-12]
   13fb0:	ldrsh	r2, [sp, #16]
   13fb4:	add	r0, r0, r2
   13fb8:	ldr	r2, [fp, #-8]
   13fbc:	bl	10ab8 <sprintf@plt>
   13fc0:	str	r0, [sp, #4]
   13fc4:	b	13fe8 <error@@Base+0xe14>
   13fc8:	ldr	r0, [pc, #40]	; 13ff8 <error@@Base+0xe24>
   13fcc:	add	r1, pc, r0
   13fd0:	ldr	r0, [fp, #-12]
   13fd4:	ldrsh	r2, [sp, #16]
   13fd8:	add	r0, r0, r2
   13fdc:	ldr	r2, [fp, #-8]
   13fe0:	bl	10ab8 <sprintf@plt>
   13fe4:	str	r0, [sp]
   13fe8:	b	13fec <error@@Base+0xe18>
   13fec:	b	13ff0 <error@@Base+0xe1c>
   13ff0:	mov	sp, fp
   13ff4:	pop	{fp, pc}
   13ff8:	strheq	r1, [r0], -sl
   13ffc:	ldrdeq	r1, [r0], -r7
   14000:			; <UNDEFINED> instruction: 0x000011ba
   14004:			; <UNDEFINED> instruction: 0x000009b7
   14008:	push	{fp, lr}
   1400c:	mov	fp, sp
   14010:	sub	sp, sp, #16
   14014:	str	r0, [sp, #8]
   14018:	ldr	r0, [sp, #8]
   1401c:	bl	109e0 <utf8proc_get_property@plt>
   14020:	str	r0, [sp, #4]
   14024:	ldr	r0, [sp, #8]
   14028:	cmp	r0, #32
   1402c:	bne	1403c <error@@Base+0xe68>
   14030:	movw	r0, #1
   14034:	strb	r0, [fp, #-1]
   14038:	b	1407c <error@@Base+0xea8>
   1403c:	ldr	r0, [sp, #4]
   14040:	ldrsh	r0, [r0]
   14044:	sub	r1, r0, #1
   14048:	cmp	r1, #22
   1404c:	str	r0, [sp]
   14050:	bcc	14068 <error@@Base+0xe94>
   14054:	b	14058 <error@@Base+0xe84>
   14058:	ldr	r0, [sp]
   1405c:	cmp	r0, #29
   14060:	bne	14074 <error@@Base+0xea0>
   14064:	b	14068 <error@@Base+0xe94>
   14068:	movw	r0, #1
   1406c:	strb	r0, [fp, #-1]
   14070:	b	1407c <error@@Base+0xea8>
   14074:	movw	r0, #0
   14078:	strb	r0, [fp, #-1]
   1407c:	ldrb	r0, [fp, #-1]
   14080:	mov	sp, fp
   14084:	pop	{fp, pc}
   14088:	push	{fp, lr}
   1408c:	mov	fp, sp
   14090:	sub	sp, sp, #8
   14094:	str	r0, [sp]
   14098:	ldr	r0, [sp]
   1409c:	bl	10a7c <utf8proc_category@plt>
   140a0:	sub	r0, r0, #6
   140a4:	cmp	r0, #2
   140a8:	bhi	140bc <error@@Base+0xee8>
   140ac:	b	140b0 <error@@Base+0xedc>
   140b0:	movw	r0, #1
   140b4:	strb	r0, [fp, #-1]
   140b8:	b	140c4 <error@@Base+0xef0>
   140bc:	movw	r0, #0
   140c0:	strb	r0, [fp, #-1]
   140c4:	ldrb	r0, [fp, #-1]
   140c8:	mov	sp, fp
   140cc:	pop	{fp, pc}
   140d0:	push	{fp, lr}
   140d4:	mov	fp, sp
   140d8:	sub	sp, sp, #56	; 0x38
   140dc:	ldr	r3, [pc, #260]	; 141e8 <error@@Base+0x1014>
   140e0:	add	r3, pc, r3
   140e4:	ldr	ip, [pc, #256]	; 141ec <error@@Base+0x1018>
   140e8:	ldr	ip, [pc, ip]
   140ec:	str	r0, [fp, #-4]
   140f0:	str	r1, [fp, #-8]
   140f4:	str	r2, [fp, #-12]
   140f8:	ldr	r0, [fp, #-8]
   140fc:	mov	r1, r3
   14100:	blx	ip
   14104:	str	r0, [fp, #-16]
   14108:	ldr	r0, [fp, #-12]
   1410c:	movw	r1, #0
   14110:	cmp	r0, r1
   14114:	beq	1416c <error@@Base+0xf98>
   14118:	ldr	r0, [pc, #216]	; 141f8 <error@@Base+0x1024>
   1411c:	add	r0, pc, r0
   14120:	ldr	r1, [fp, #-16]
   14124:	bl	10ad0 <fputs@plt>
   14128:	ldr	r1, [pc, #196]	; 141f4 <error@@Base+0x1020>
   1412c:	add	r1, pc, r1
   14130:	ldr	lr, [fp, #-16]
   14134:	str	r0, [sp, #20]
   14138:	mov	r0, r1
   1413c:	mov	r1, lr
   14140:	bl	10ad0 <fputs@plt>
   14144:	ldr	r1, [fp, #-12]
   14148:	ldr	lr, [fp, #-16]
   1414c:	str	r0, [sp, #16]
   14150:	mov	r0, lr
   14154:	blx	r1
   14158:	ldr	r0, [pc, #144]	; 141f0 <error@@Base+0x101c>
   1415c:	add	r0, pc, r0
   14160:	ldr	r1, [fp, #-16]
   14164:	bl	10ad0 <fputs@plt>
   14168:	str	r0, [sp, #12]
   1416c:	ldr	r0, [fp, #-4]
   14170:	ldr	r0, [r0]
   14174:	str	r0, [fp, #-20]	; 0xffffffec
   14178:	ldr	r0, [fp, #-20]	; 0xffffffec
   1417c:	movw	r1, #0
   14180:	cmp	r0, r1
   14184:	beq	141c4 <error@@Base+0xff0>
   14188:	add	r2, sp, #27
   1418c:	ldr	r0, [fp, #-20]	; 0xffffffec
   14190:	ldrb	r0, [r0, #8]
   14194:	ldr	r1, [fp, #-20]	; 0xffffffec
   14198:	ldr	r1, [r1, #12]
   1419c:	movw	r3, #0
   141a0:	bl	13e5c <error@@Base+0xc88>
   141a4:	add	r0, sp, #27
   141a8:	ldr	r1, [fp, #-16]
   141ac:	bl	10ad0 <fputs@plt>
   141b0:	str	r0, [sp, #8]
   141b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   141b8:	ldr	r0, [r0, #4]
   141bc:	str	r0, [fp, #-20]	; 0xffffffec
   141c0:	b	14178 <error@@Base+0xfa4>
   141c4:	ldr	r0, [pc, #48]	; 141fc <error@@Base+0x1028>
   141c8:	ldr	r0, [pc, r0]
   141cc:	ldr	r1, [fp, #-16]
   141d0:	str	r0, [sp, #4]
   141d4:	mov	r0, r1
   141d8:	ldr	r1, [sp, #4]
   141dc:	blx	r1
   141e0:	mov	sp, fp
   141e4:	pop	{fp, pc}
   141e8:	andeq	r0, r0, r8, asr #21
   141ec:	andeq	r1, r1, ip, lsr #31
   141f0:	andeq	r0, r0, r9, ror #30
   141f4:	muleq	r0, r9, pc	; <UNPREDICTABLE>
   141f8:	andeq	r0, r0, r1, ror pc
   141fc:	andeq	r1, r1, ip, lsr #29
   14200:	push	{fp, lr}
   14204:	mov	fp, sp
   14208:	sub	sp, sp, #24
   1420c:	str	r0, [fp, #-8]
   14210:	str	r1, [sp, #12]
   14214:	ldr	r0, [sp, #12]
   14218:	str	r0, [sp, #8]
   1421c:	movw	r0, #0
   14220:	str	r0, [sp, #4]
   14224:	str	r0, [sp]
   14228:	ldr	r0, [sp, #12]
   1422c:	str	r0, [sp, #8]
   14230:	ldr	r0, [sp, #8]
   14234:	ldrb	r0, [r0]
   14238:	cmp	r0, #0
   1423c:	beq	14290 <error@@Base+0x10bc>
   14240:	ldr	r0, [sp, #8]
   14244:	mvn	r1, #0
   14248:	mov	r2, sp
   1424c:	bl	10a40 <utf8proc_iterate@plt>
   14250:	str	r0, [sp, #4]
   14254:	ldr	r0, [sp, #4]
   14258:	cmp	r0, #1
   1425c:	bge	1426c <error@@Base+0x1098>
   14260:	movw	r0, #0
   14264:	strb	r0, [fp, #-1]
   14268:	b	14298 <error@@Base+0x10c4>
   1426c:	ldr	r0, [fp, #-8]
   14270:	ldr	r2, [sp]
   14274:	movw	r1, #0
   14278:	bl	1372c <error@@Base+0x558>
   1427c:	ldr	r0, [sp, #4]
   14280:	ldr	r1, [sp, #8]
   14284:	add	r0, r1, r0
   14288:	str	r0, [sp, #8]
   1428c:	b	14230 <error@@Base+0x105c>
   14290:	movw	r0, #1
   14294:	strb	r0, [fp, #-1]
   14298:	ldrb	r0, [fp, #-1]
   1429c:	mov	sp, fp
   142a0:	pop	{fp, pc}
   142a4:	push	{fp, lr}
   142a8:	mov	fp, sp
   142ac:	sub	sp, sp, #16
   142b0:	str	r0, [sp, #8]
   142b4:	ldr	r0, [sp, #8]
   142b8:	bl	109e0 <utf8proc_get_property@plt>
   142bc:	str	r0, [sp, #4]
   142c0:	ldr	r0, [sp, #8]
   142c4:	cmp	r0, #9
   142c8:	str	r0, [sp]
   142cc:	beq	14314 <error@@Base+0x1140>
   142d0:	b	142d4 <error@@Base+0x1100>
   142d4:	ldr	r0, [sp]
   142d8:	cmp	r0, #10
   142dc:	beq	14308 <error@@Base+0x1134>
   142e0:	b	142e4 <error@@Base+0x1110>
   142e4:	ldr	r0, [sp]
   142e8:	sub	r1, r0, #11
   142ec:	cmp	r1, #3
   142f0:	bcc	14314 <error@@Base+0x1140>
   142f4:	b	142f8 <error@@Base+0x1124>
   142f8:	ldr	r0, [sp]
   142fc:	cmp	r0, #160	; 0xa0
   14300:	beq	14314 <error@@Base+0x1140>
   14304:	b	14320 <error@@Base+0x114c>
   14308:	movw	r0, #0
   1430c:	strb	r0, [fp, #-1]
   14310:	b	1434c <error@@Base+0x1178>
   14314:	movw	r0, #1
   14318:	strb	r0, [fp, #-1]
   1431c:	b	1434c <error@@Base+0x1178>
   14320:	ldr	r0, [sp, #4]
   14324:	ldrsh	r0, [r0]
   14328:	sub	r0, r0, #23
   1432c:	cmp	r0, #2
   14330:	bhi	14344 <error@@Base+0x1170>
   14334:	b	14338 <error@@Base+0x1164>
   14338:	movw	r0, #1
   1433c:	strb	r0, [fp, #-1]
   14340:	b	1434c <error@@Base+0x1178>
   14344:	movw	r0, #0
   14348:	strb	r0, [fp, #-1]
   1434c:	ldrb	r0, [fp, #-1]
   14350:	mov	sp, fp
   14354:	pop	{fp, pc}
   14358:	sub	sp, sp, #4
   1435c:	str	r0, [sp]
   14360:	ldr	r0, [sp]
   14364:	movw	r1, #0
   14368:	str	r1, [r0, #4]
   1436c:	ldr	r0, [sp]
   14370:	str	r1, [r0]
   14374:	ldr	r0, [sp]
   14378:	str	r1, [r0, #8]
   1437c:	ldr	r0, [sp]
   14380:	str	r1, [r0, #12]
   14384:	add	sp, sp, #4
   14388:	bx	lr
   1438c:	push	{fp, lr}
   14390:	mov	fp, sp
   14394:	sub	sp, sp, #8
   14398:	str	r0, [sp, #4]
   1439c:	str	r1, [sp]
   143a0:	ldr	r0, [sp, #4]
   143a4:	ldr	r2, [sp]
   143a8:	ldr	r1, [sp, #4]
   143ac:	ldr	r3, [r1]
   143b0:	movw	r1, #0
   143b4:	bl	143c0 <error@@Base+0x11ec>
   143b8:	mov	sp, fp
   143bc:	pop	{fp, pc}
   143c0:	push	{fp, lr}
   143c4:	mov	fp, sp
   143c8:	sub	sp, sp, #16
   143cc:	str	r0, [fp, #-4]
   143d0:	str	r1, [sp, #8]
   143d4:	str	r2, [sp, #4]
   143d8:	str	r3, [sp]
   143dc:	ldr	r0, [sp, #8]
   143e0:	ldr	r1, [sp, #4]
   143e4:	str	r0, [r1]
   143e8:	ldr	r0, [sp]
   143ec:	ldr	r1, [sp, #4]
   143f0:	str	r0, [r1, #4]
   143f4:	ldr	r0, [sp, #8]
   143f8:	movw	r1, #0
   143fc:	cmp	r0, r1
   14400:	beq	14414 <error@@Base+0x1240>
   14404:	ldr	r0, [sp, #4]
   14408:	ldr	r1, [sp, #8]
   1440c:	str	r0, [r1, #4]
   14410:	b	14420 <error@@Base+0x124c>
   14414:	ldr	r0, [sp, #4]
   14418:	ldr	r1, [fp, #-4]
   1441c:	str	r0, [r1]
   14420:	ldr	r0, [sp]
   14424:	movw	r1, #0
   14428:	cmp	r0, r1
   1442c:	beq	14440 <error@@Base+0x126c>
   14430:	ldr	r0, [sp, #4]
   14434:	ldr	r1, [sp]
   14438:	str	r0, [r1]
   1443c:	b	1444c <error@@Base+0x1278>
   14440:	ldr	r0, [sp, #4]
   14444:	ldr	r1, [fp, #-4]
   14448:	str	r0, [r1, #4]
   1444c:	ldr	r0, [fp, #-4]
   14450:	bl	145d4 <error@@Base+0x1400>
   14454:	ldr	r0, [fp, #-4]
   14458:	ldr	lr, [r0, #12]
   1445c:	add	lr, lr, #1
   14460:	str	lr, [r0, #12]
   14464:	mov	sp, fp
   14468:	pop	{fp, pc}
   1446c:	push	{fp, lr}
   14470:	mov	fp, sp
   14474:	sub	sp, sp, #8
   14478:	str	r0, [sp, #4]
   1447c:	str	r1, [sp]
   14480:	ldr	r0, [sp, #4]
   14484:	ldr	r1, [sp, #4]
   14488:	ldr	r1, [r1, #4]
   1448c:	ldr	r2, [sp]
   14490:	movw	r3, #0
   14494:	bl	143c0 <error@@Base+0x11ec>
   14498:	mov	sp, fp
   1449c:	pop	{fp, pc}
   144a0:	push	{fp, lr}
   144a4:	mov	fp, sp
   144a8:	sub	sp, sp, #16
   144ac:	str	r0, [fp, #-4]
   144b0:	str	r1, [sp, #8]
   144b4:	str	r2, [sp, #4]
   144b8:	ldr	r0, [fp, #-4]
   144bc:	ldr	r1, [sp, #4]
   144c0:	ldr	r1, [r1]
   144c4:	ldr	r2, [sp, #8]
   144c8:	ldr	r3, [sp, #4]
   144cc:	bl	143c0 <error@@Base+0x11ec>
   144d0:	mov	sp, fp
   144d4:	pop	{fp, pc}
   144d8:	push	{fp, lr}
   144dc:	mov	fp, sp
   144e0:	sub	sp, sp, #16
   144e4:	str	r0, [fp, #-4]
   144e8:	str	r1, [sp, #8]
   144ec:	str	r2, [sp, #4]
   144f0:	ldr	r0, [fp, #-4]
   144f4:	ldr	r1, [sp, #8]
   144f8:	ldr	r2, [sp, #4]
   144fc:	ldr	r3, [sp, #8]
   14500:	ldr	r3, [r3, #4]
   14504:	bl	143c0 <error@@Base+0x11ec>
   14508:	mov	sp, fp
   1450c:	pop	{fp, pc}
   14510:	push	{fp, lr}
   14514:	mov	fp, sp
   14518:	sub	sp, sp, #8
   1451c:	str	r0, [sp, #4]
   14520:	str	r1, [sp]
   14524:	ldr	r0, [sp]
   14528:	ldr	r0, [r0]
   1452c:	movw	r1, #0
   14530:	cmp	r0, r1
   14534:	beq	14550 <error@@Base+0x137c>
   14538:	ldr	r0, [sp]
   1453c:	ldr	r0, [r0, #4]
   14540:	ldr	r1, [sp]
   14544:	ldr	r1, [r1]
   14548:	str	r0, [r1, #4]
   1454c:	b	14560 <error@@Base+0x138c>
   14550:	ldr	r0, [sp]
   14554:	ldr	r0, [r0, #4]
   14558:	ldr	r1, [sp, #4]
   1455c:	str	r0, [r1]
   14560:	ldr	r0, [sp]
   14564:	ldr	r0, [r0, #4]
   14568:	movw	r1, #0
   1456c:	cmp	r0, r1
   14570:	beq	1458c <error@@Base+0x13b8>
   14574:	ldr	r0, [sp]
   14578:	ldr	r0, [r0]
   1457c:	ldr	r1, [sp]
   14580:	ldr	r1, [r1, #4]
   14584:	str	r0, [r1]
   14588:	b	1459c <error@@Base+0x13c8>
   1458c:	ldr	r0, [sp]
   14590:	ldr	r0, [r0]
   14594:	ldr	r1, [sp, #4]
   14598:	str	r0, [r1, #4]
   1459c:	ldr	r0, [sp]
   145a0:	movw	r1, #0
   145a4:	str	r1, [r0, #4]
   145a8:	ldr	r0, [sp]
   145ac:	str	r1, [r0]
   145b0:	ldr	r0, [sp, #4]
   145b4:	bl	145d4 <error@@Base+0x1400>
   145b8:	ldr	r0, [sp, #4]
   145bc:	ldr	r1, [r0, #12]
   145c0:	mvn	lr, #0
   145c4:	add	r1, r1, lr
   145c8:	str	r1, [r0, #12]
   145cc:	mov	sp, fp
   145d0:	pop	{fp, pc}
   145d4:	push	{fp, lr}
   145d8:	mov	fp, sp
   145dc:	sub	sp, sp, #8
   145e0:	str	r0, [sp, #4]
   145e4:	ldr	r0, [sp, #4]
   145e8:	ldr	r0, [r0, #8]
   145ec:	movw	r1, #0
   145f0:	cmp	r0, r1
   145f4:	beq	14610 <error@@Base+0x143c>
   145f8:	ldr	r0, [sp, #4]
   145fc:	ldr	r0, [r0, #8]
   14600:	bl	109d4 <free@plt>
   14604:	ldr	r0, [sp, #4]
   14608:	movw	lr, #0
   1460c:	str	lr, [r0, #8]
   14610:	mov	sp, fp
   14614:	pop	{fp, pc}
   14618:	push	{fp, lr}
   1461c:	mov	fp, sp
   14620:	sub	sp, sp, #16
   14624:	str	r0, [fp, #-4]
   14628:	movw	r0, #0
   1462c:	str	r0, [sp, #4]
   14630:	ldr	r1, [fp, #-4]
   14634:	ldr	r1, [r1, #8]
   14638:	cmp	r1, r0
   1463c:	bne	14650 <error@@Base+0x147c>
   14640:	ldr	r0, [fp, #-4]
   14644:	ldr	r0, [r0, #12]
   14648:	cmp	r0, #0
   1464c:	bne	14654 <error@@Base+0x1480>
   14650:	b	146cc <error@@Base+0x14f8>
   14654:	ldr	r0, [pc, #120]	; 146d4 <error@@Base+0x1500>
   14658:	ldr	r0, [pc, r0]
   1465c:	ldr	r1, [fp, #-4]
   14660:	ldr	r1, [r1, #12]
   14664:	str	r0, [sp]
   14668:	mov	r0, r1
   1466c:	movw	r1, #4
   14670:	ldr	r2, [sp]
   14674:	blx	r2
   14678:	ldr	r1, [fp, #-4]
   1467c:	str	r0, [r1, #8]
   14680:	ldr	r0, [fp, #-4]
   14684:	ldr	r0, [r0]
   14688:	str	r0, [sp, #8]
   1468c:	ldr	r0, [sp, #8]
   14690:	movw	r1, #0
   14694:	cmp	r0, r1
   14698:	beq	146cc <error@@Base+0x14f8>
   1469c:	ldr	r0, [sp, #8]
   146a0:	ldr	r1, [fp, #-4]
   146a4:	ldr	r1, [r1, #8]
   146a8:	ldr	r2, [sp, #4]
   146ac:	add	r3, r2, #1
   146b0:	str	r3, [sp, #4]
   146b4:	add	r1, r1, r2, lsl #2
   146b8:	str	r0, [r1]
   146bc:	ldr	r0, [sp, #8]
   146c0:	ldr	r0, [r0, #4]
   146c4:	str	r0, [sp, #8]
   146c8:	b	1468c <error@@Base+0x14b8>
   146cc:	mov	sp, fp
   146d0:	pop	{fp, pc}
   146d4:	muleq	r1, ip, sl
   146d8:	push	{fp, lr}
   146dc:	mov	fp, sp
   146e0:	sub	sp, sp, #16
   146e4:	str	r0, [fp, #-4]
   146e8:	str	r1, [sp, #8]
   146ec:	ldr	r0, [fp, #-4]
   146f0:	ldr	r0, [r0]
   146f4:	movw	r1, #0
   146f8:	cmp	r0, r1
   146fc:	beq	14734 <error@@Base+0x1560>
   14700:	ldr	r0, [fp, #-4]
   14704:	ldr	r0, [r0]
   14708:	str	r0, [sp, #4]
   1470c:	ldr	r0, [fp, #-4]
   14710:	ldr	r1, [sp, #4]
   14714:	bl	14510 <error@@Base+0x133c>
   14718:	ldr	r0, [sp, #8]
   1471c:	ldr	r1, [sp, #4]
   14720:	str	r0, [sp]
   14724:	mov	r0, r1
   14728:	ldr	r1, [sp]
   1472c:	blx	r1
   14730:	b	146ec <error@@Base+0x1518>
   14734:	mov	sp, fp
   14738:	pop	{fp, pc}
   1473c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14740:	mov	r7, r0
   14744:	ldr	r6, [pc, #72]	; 14794 <error@@Base+0x15c0>
   14748:	ldr	r5, [pc, #72]	; 14798 <error@@Base+0x15c4>
   1474c:	add	r6, pc, r6
   14750:	add	r5, pc, r5
   14754:	sub	r6, r6, r5
   14758:	mov	r8, r1
   1475c:	mov	r9, r2
   14760:	bl	10990 <calloc@plt-0x20>
   14764:	asrs	r6, r6, #2
   14768:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1476c:	mov	r4, #0
   14770:	add	r4, r4, #1
   14774:	ldr	r3, [r5], #4
   14778:	mov	r2, r9
   1477c:	mov	r1, r8
   14780:	mov	r0, r7
   14784:	blx	r3
   14788:	cmp	r6, r4
   1478c:	bne	14770 <error@@Base+0x159c>
   14790:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14794:	andeq	r1, r1, r8, lsr #15
   14798:	andeq	r1, r1, r0, lsr #15
   1479c:	bx	lr
   147a0:	mov	r2, r1
   147a4:	mov	r1, r0
   147a8:	mov	r0, #3
   147ac:	b	10a28 <__xstat@plt>

Disassembly of section .fini:

000147b0 <.fini>:
   147b0:	push	{r3, lr}
   147b4:	pop	{r3, pc}
